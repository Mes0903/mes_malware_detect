
514e2aa45bf1034dc54acfbaa0390998a16bae0286159d6a152a71922478dee3.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	lea    rcx,[rip+0x34999]        # 0x1400359a0
   140001007:	jmp    0x140030388
   14000100c:	int3   
   14000100d:	int3   
   14000100e:	int3   
   14000100f:	int3   
   140001010:	lea    rcx,[rip+0x34999]        # 0x1400359b0
   140001017:	jmp    0x140030388
   14000101c:	int3   
   14000101d:	int3   
   14000101e:	int3   
   14000101f:	int3   
   140001020:	lea    rcx,[rip+0x34999]        # 0x1400359c0
   140001027:	jmp    0x140030388
   14000102c:	int3   
   14000102d:	int3   
   14000102e:	int3   
   14000102f:	int3   
   140001030:	sub    rsp,0x28
   140001034:	call   QWORD PTR [rip+0x356be]        # 0x1400366f8
   14000103a:	mov    QWORD PTR [rip+0x568e7],rax        # 0x140057928
   140001041:	add    rsp,0x28
   140001045:	ret    
   140001046:	int3   
   140001047:	int3   
   140001048:	int3   
   140001049:	int3   
   14000104a:	int3   
   14000104b:	int3   
   14000104c:	int3   
   14000104d:	int3   
   14000104e:	int3   
   14000104f:	int3   
   140001050:	rex push rbp
   140001052:	lea    rbp,[rsp-0x910]
   14000105a:	sub    rsp,0xa10
   140001061:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14000106a:	mov    QWORD PTR [rsp+0xa28],rbx
   140001072:	mov    QWORD PTR [rsp+0x58],0xf
   14000107b:	xor    ebx,ebx
   14000107d:	mov    QWORD PTR [rsp+0x50],rbx
   140001082:	mov    BYTE PTR [rsp+0x40],bl
   140001086:	lea    r8d,[rbx+0x1b]
   14000108a:	lea    rdx,[rip+0x39d57]        # 0x14003ade8
   140001091:	lea    rcx,[rsp+0x40]
   140001096:	call   0x14001f070
   14000109b:	nop
   14000109c:	mov    QWORD PTR [rsp+0x78],0xf
   1400010a5:	mov    QWORD PTR [rsp+0x70],rbx
   1400010aa:	mov    BYTE PTR [rsp+0x60],bl
   1400010ae:	lea    r8d,[rbx+0x17]
   1400010b2:	lea    rdx,[rip+0x39d4f]        # 0x14003ae08
   1400010b9:	lea    rcx,[rsp+0x60]
   1400010be:	call   0x14001f070
   1400010c3:	nop
   1400010c4:	mov    QWORD PTR [rbp-0x68],0xf
   1400010cc:	mov    QWORD PTR [rbp-0x70],rbx
   1400010d0:	mov    BYTE PTR [rbp-0x80],bl
   1400010d3:	lea    r8d,[rbx+0x19]
   1400010d7:	lea    rdx,[rip+0x39d42]        # 0x14003ae20
   1400010de:	lea    rcx,[rbp-0x80]
   1400010e2:	call   0x14001f070
   1400010e7:	nop
   1400010e8:	mov    QWORD PTR [rbp-0x48],0xf
   1400010f0:	mov    QWORD PTR [rbp-0x50],rbx
   1400010f4:	mov    BYTE PTR [rbp-0x60],bl
   1400010f7:	lea    r8d,[rbx+0x15]
   1400010fb:	lea    rdx,[rip+0x39d3e]        # 0x14003ae40
   140001102:	lea    rcx,[rbp-0x60]
   140001106:	call   0x14001f070
   14000110b:	nop
   14000110c:	mov    QWORD PTR [rbp-0x28],0xf
   140001114:	mov    QWORD PTR [rbp-0x30],rbx
   140001118:	mov    BYTE PTR [rbp-0x40],bl
   14000111b:	lea    r8d,[rbx+0x16]
   14000111f:	lea    rdx,[rip+0x39d32]        # 0x14003ae58
   140001126:	lea    rcx,[rbp-0x40]
   14000112a:	call   0x14001f070
   14000112f:	nop
   140001130:	mov    QWORD PTR [rbp-0x8],0xf
   140001138:	mov    QWORD PTR [rbp-0x10],rbx
   14000113c:	mov    BYTE PTR [rbp-0x20],bl
   14000113f:	lea    r8d,[rbx+0x2a]
   140001143:	lea    rdx,[rip+0x39d26]        # 0x14003ae70
   14000114a:	lea    rcx,[rbp-0x20]
   14000114e:	call   0x14001f070
   140001153:	nop
   140001154:	mov    QWORD PTR [rbp+0x18],0xf
   14000115c:	mov    QWORD PTR [rbp+0x10],rbx
   140001160:	mov    BYTE PTR [rbp+0x0],bl
   140001163:	lea    r8d,[rbx+0x33]
   140001167:	lea    rdx,[rip+0x39d32]        # 0x14003aea0
   14000116e:	lea    rcx,[rbp+0x0]
   140001172:	call   0x14001f070
   140001177:	nop
   140001178:	mov    QWORD PTR [rbp+0x38],0xf
   140001180:	mov    QWORD PTR [rbp+0x30],rbx
   140001184:	mov    BYTE PTR [rbp+0x20],bl
   140001187:	lea    r8d,[rbx+0x2b]
   14000118b:	lea    rdx,[rip+0x39d46]        # 0x14003aed8
   140001192:	lea    rcx,[rbp+0x20]
   140001196:	call   0x14001f070
   14000119b:	nop
   14000119c:	mov    QWORD PTR [rbp+0x58],0xf
   1400011a4:	mov    QWORD PTR [rbp+0x50],rbx
   1400011a8:	mov    BYTE PTR [rbp+0x40],bl
   1400011ab:	lea    r8d,[rbx+0x40]
   1400011af:	lea    rdx,[rip+0x39d5a]        # 0x14003af10
   1400011b6:	lea    rcx,[rbp+0x40]
   1400011ba:	call   0x14001f070
   1400011bf:	nop
   1400011c0:	mov    QWORD PTR [rbp+0x78],0xf
   1400011c8:	mov    QWORD PTR [rbp+0x70],rbx
   1400011cc:	mov    BYTE PTR [rbp+0x60],bl
   1400011cf:	lea    r8d,[rbx+0x2d]
   1400011d3:	lea    rdx,[rip+0x39d7e]        # 0x14003af58
   1400011da:	lea    rcx,[rbp+0x60]
   1400011de:	call   0x14001f070
   1400011e3:	nop
   1400011e4:	mov    QWORD PTR [rbp+0x98],0xf
   1400011ef:	mov    QWORD PTR [rbp+0x90],rbx
   1400011f6:	mov    BYTE PTR [rbp+0x80],bl
   1400011fc:	lea    r8d,[rbx+0x37]
   140001200:	lea    rdx,[rip+0x39d81]        # 0x14003af88
   140001207:	lea    rcx,[rbp+0x80]
   14000120e:	call   0x14001f070
   140001213:	nop
   140001214:	mov    QWORD PTR [rbp+0xb8],0xf
   14000121f:	mov    QWORD PTR [rbp+0xb0],rbx
   140001226:	mov    BYTE PTR [rbp+0xa0],bl
   14000122c:	lea    r8d,[rbx+0x1a]
   140001230:	lea    rdx,[rip+0x39d89]        # 0x14003afc0
   140001237:	lea    rcx,[rbp+0xa0]
   14000123e:	call   0x14001f070
   140001243:	nop
   140001244:	mov    QWORD PTR [rbp+0xd8],0xf
   14000124f:	mov    QWORD PTR [rbp+0xd0],rbx
   140001256:	mov    BYTE PTR [rbp+0xc0],bl
   14000125c:	lea    r8d,[rbx+0x3c]
   140001260:	lea    rdx,[rip+0x39d79]        # 0x14003afe0
   140001267:	lea    rcx,[rbp+0xc0]
   14000126e:	call   0x14001f070
   140001273:	nop
   140001274:	mov    QWORD PTR [rbp+0xf8],0xf
   14000127f:	mov    QWORD PTR [rbp+0xf0],rbx
   140001286:	mov    BYTE PTR [rbp+0xe0],bl
   14000128c:	lea    r8d,[rbx+0x3d]
   140001290:	lea    rdx,[rip+0x39d89]        # 0x14003b020
   140001297:	lea    rcx,[rbp+0xe0]
   14000129e:	call   0x14001f070
   1400012a3:	nop
   1400012a4:	mov    QWORD PTR [rbp+0x118],0xf
   1400012af:	mov    QWORD PTR [rbp+0x110],rbx
   1400012b6:	mov    BYTE PTR [rbp+0x100],bl
   1400012bc:	lea    r8d,[rbx+0x3d]
   1400012c0:	lea    rdx,[rip+0x39d99]        # 0x14003b060
   1400012c7:	lea    rcx,[rbp+0x100]
   1400012ce:	call   0x14001f070
   1400012d3:	nop
   1400012d4:	mov    QWORD PTR [rbp+0x138],0xf
   1400012df:	mov    QWORD PTR [rbp+0x130],rbx
   1400012e6:	mov    BYTE PTR [rbp+0x120],bl
   1400012ec:	lea    r8d,[rbx+0x3e]
   1400012f0:	lea    rdx,[rip+0x39da9]        # 0x14003b0a0
   1400012f7:	lea    rcx,[rbp+0x120]
   1400012fe:	call   0x14001f070
   140001303:	nop
   140001304:	mov    QWORD PTR [rbp+0x158],0xf
   14000130f:	mov    QWORD PTR [rbp+0x150],rbx
   140001316:	mov    BYTE PTR [rbp+0x140],bl
   14000131c:	lea    r8d,[rbx+0x38]
   140001320:	lea    rdx,[rip+0x39db9]        # 0x14003b0e0
   140001327:	lea    rcx,[rbp+0x140]
   14000132e:	call   0x14001f070
   140001333:	nop
   140001334:	mov    QWORD PTR [rbp+0x178],0xf
   14000133f:	mov    QWORD PTR [rbp+0x170],rbx
   140001346:	mov    BYTE PTR [rbp+0x160],bl
   14000134c:	lea    r8d,[rbx+0x2a]
   140001350:	lea    rdx,[rip+0x39dc9]        # 0x14003b120
   140001357:	lea    rcx,[rbp+0x160]
   14000135e:	call   0x14001f070
   140001363:	nop
   140001364:	mov    QWORD PTR [rbp+0x198],0xf
   14000136f:	mov    QWORD PTR [rbp+0x190],rbx
   140001376:	mov    BYTE PTR [rbp+0x180],bl
   14000137c:	lea    r8d,[rbx+0x2c]
   140001380:	lea    rdx,[rip+0x39dc9]        # 0x14003b150
   140001387:	lea    rcx,[rbp+0x180]
   14000138e:	call   0x14001f070
   140001393:	nop
   140001394:	mov    QWORD PTR [rbp+0x1b8],0xf
   14000139f:	mov    QWORD PTR [rbp+0x1b0],rbx
   1400013a6:	mov    BYTE PTR [rbp+0x1a0],bl
   1400013ac:	lea    r8d,[rbx+0x54]
   1400013b0:	lea    rdx,[rip+0x39dc9]        # 0x14003b180
   1400013b7:	lea    rcx,[rbp+0x1a0]
   1400013be:	call   0x14001f070
   1400013c3:	nop
   1400013c4:	mov    QWORD PTR [rbp+0x1d8],0xf
   1400013cf:	mov    QWORD PTR [rbp+0x1d0],rbx
   1400013d6:	mov    BYTE PTR [rbp+0x1c0],bl
   1400013dc:	lea    r8d,[rbx+0x4c]
   1400013e0:	lea    rdx,[rip+0x39df9]        # 0x14003b1e0
   1400013e7:	lea    rcx,[rbp+0x1c0]
   1400013ee:	call   0x14001f070
   1400013f3:	nop
   1400013f4:	mov    QWORD PTR [rbp+0x1f8],0xf
   1400013ff:	mov    QWORD PTR [rbp+0x1f0],rbx
   140001406:	mov    BYTE PTR [rbp+0x1e0],bl
   14000140c:	lea    r8d,[rbx+0x1e]
   140001410:	lea    rdx,[rip+0x39e19]        # 0x14003b230
   140001417:	lea    rcx,[rbp+0x1e0]
   14000141e:	call   0x14001f070
   140001423:	nop
   140001424:	mov    QWORD PTR [rbp+0x218],0xf
   14000142f:	mov    QWORD PTR [rbp+0x210],rbx
   140001436:	mov    BYTE PTR [rbp+0x200],bl
   14000143c:	lea    r8d,[rbx+0x49]
   140001440:	lea    rdx,[rip+0x39e09]        # 0x14003b250
   140001447:	lea    rcx,[rbp+0x200]
   14000144e:	call   0x14001f070
   140001453:	nop
   140001454:	mov    QWORD PTR [rbp+0x238],0xf
   14000145f:	mov    QWORD PTR [rbp+0x230],rbx
   140001466:	mov    BYTE PTR [rbp+0x220],bl
   14000146c:	lea    r8d,[rbx+0x2f]
   140001470:	lea    rdx,[rip+0x39e29]        # 0x14003b2a0
   140001477:	lea    rcx,[rbp+0x220]
   14000147e:	call   0x14001f070
   140001483:	nop
   140001484:	mov    QWORD PTR [rbp+0x258],0xf
   14000148f:	mov    QWORD PTR [rbp+0x250],rbx
   140001496:	mov    BYTE PTR [rbp+0x240],bl
   14000149c:	lea    r8d,[rbx+0x2f]
   1400014a0:	lea    rdx,[rip+0x39e29]        # 0x14003b2d0
   1400014a7:	lea    rcx,[rbp+0x240]
   1400014ae:	call   0x14001f070
   1400014b3:	nop
   1400014b4:	mov    QWORD PTR [rbp+0x278],0xf
   1400014bf:	mov    QWORD PTR [rbp+0x270],rbx
   1400014c6:	mov    BYTE PTR [rbp+0x260],bl
   1400014cc:	lea    r8d,[rbx+0x35]
   1400014d0:	lea    rdx,[rip+0x39e29]        # 0x14003b300
   1400014d7:	lea    rcx,[rbp+0x260]
   1400014de:	call   0x14001f070
   1400014e3:	nop
   1400014e4:	mov    QWORD PTR [rbp+0x298],0xf
   1400014ef:	mov    QWORD PTR [rbp+0x290],rbx
   1400014f6:	mov    BYTE PTR [rbp+0x280],bl
   1400014fc:	lea    r8d,[rbx+0x35]
   140001500:	lea    rdx,[rip+0x39e31]        # 0x14003b338
   140001507:	lea    rcx,[rbp+0x280]
   14000150e:	call   0x14001f070
   140001513:	nop
   140001514:	mov    QWORD PTR [rbp+0x2b8],0xf
   14000151f:	mov    QWORD PTR [rbp+0x2b0],rbx
   140001526:	mov    BYTE PTR [rbp+0x2a0],bl
   14000152c:	lea    r8d,[rbx+0x27]
   140001530:	lea    rdx,[rip+0x39e39]        # 0x14003b370
   140001537:	lea    rcx,[rbp+0x2a0]
   14000153e:	call   0x14001f070
   140001543:	nop
   140001544:	mov    QWORD PTR [rbp+0x2d8],0xf
   14000154f:	mov    QWORD PTR [rbp+0x2d0],rbx
   140001556:	mov    BYTE PTR [rbp+0x2c0],bl
   14000155c:	lea    r8d,[rbx+0x44]
   140001560:	lea    rdx,[rip+0x39e39]        # 0x14003b3a0
   140001567:	lea    rcx,[rbp+0x2c0]
   14000156e:	call   0x14001f070
   140001573:	nop
   140001574:	mov    QWORD PTR [rbp+0x2f8],0xf
   14000157f:	mov    QWORD PTR [rbp+0x2f0],rbx
   140001586:	mov    BYTE PTR [rbp+0x2e0],bl
   14000158c:	lea    r8d,[rbx+0x40]
   140001590:	lea    rdx,[rip+0x39e59]        # 0x14003b3f0
   140001597:	lea    rcx,[rbp+0x2e0]
   14000159e:	call   0x14001f070
   1400015a3:	nop
   1400015a4:	mov    QWORD PTR [rbp+0x318],0xf
   1400015af:	mov    QWORD PTR [rbp+0x310],rbx
   1400015b6:	mov    BYTE PTR [rbp+0x300],bl
   1400015bc:	lea    r8d,[rbx+0x32]
   1400015c0:	lea    rdx,[rip+0x39e71]        # 0x14003b438
   1400015c7:	lea    rcx,[rbp+0x300]
   1400015ce:	call   0x14001f070
   1400015d3:	nop
   1400015d4:	mov    QWORD PTR [rbp+0x338],0xf
   1400015df:	mov    QWORD PTR [rbp+0x330],rbx
   1400015e6:	mov    BYTE PTR [rbp+0x320],bl
   1400015ec:	lea    r8d,[rbx+0x5f]
   1400015f0:	lea    rdx,[rip+0x39e79]        # 0x14003b470
   1400015f7:	lea    rcx,[rbp+0x320]
   1400015fe:	call   0x14001f070
   140001603:	nop
   140001604:	mov    QWORD PTR [rbp+0x358],0xf
   14000160f:	mov    QWORD PTR [rbp+0x350],rbx
   140001616:	mov    BYTE PTR [rbp+0x340],bl
   14000161c:	lea    r8d,[rbx+0x30]
   140001620:	lea    rdx,[rip+0x39ea9]        # 0x14003b4d0
   140001627:	lea    rcx,[rbp+0x340]
   14000162e:	call   0x14001f070
   140001633:	nop
   140001634:	mov    QWORD PTR [rbp+0x378],0xf
   14000163f:	mov    QWORD PTR [rbp+0x370],rbx
   140001646:	mov    BYTE PTR [rbp+0x360],bl
   14000164c:	lea    r8d,[rbx+0x4b]
   140001650:	lea    rdx,[rip+0x39eb9]        # 0x14003b510
   140001657:	lea    rcx,[rbp+0x360]
   14000165e:	call   0x14001f070
   140001663:	nop
   140001664:	mov    QWORD PTR [rbp+0x398],0xf
   14000166f:	mov    QWORD PTR [rbp+0x390],rbx
   140001676:	mov    BYTE PTR [rbp+0x380],bl
   14000167c:	lea    r8d,[rbx+0x34]
   140001680:	lea    rdx,[rip+0x39ed9]        # 0x14003b560
   140001687:	lea    rcx,[rbp+0x380]
   14000168e:	call   0x14001f070
   140001693:	nop
   140001694:	mov    QWORD PTR [rbp+0x3b8],0xf
   14000169f:	mov    QWORD PTR [rbp+0x3b0],rbx
   1400016a6:	mov    BYTE PTR [rbp+0x3a0],bl
   1400016ac:	lea    r8d,[rbx+0x2d]
   1400016b0:	lea    rdx,[rip+0x39ee1]        # 0x14003b598
   1400016b7:	lea    rcx,[rbp+0x3a0]
   1400016be:	call   0x14001f070
   1400016c3:	nop
   1400016c4:	mov    QWORD PTR [rbp+0x3d8],0xf
   1400016cf:	mov    QWORD PTR [rbp+0x3d0],rbx
   1400016d6:	mov    BYTE PTR [rbp+0x3c0],bl
   1400016dc:	lea    r8d,[rbx+0x2b]
   1400016e0:	lea    rdx,[rip+0x39ee1]        # 0x14003b5c8
   1400016e7:	lea    rcx,[rbp+0x3c0]
   1400016ee:	call   0x14001f070
   1400016f3:	nop
   1400016f4:	mov    QWORD PTR [rbp+0x3f8],0xf
   1400016ff:	mov    QWORD PTR [rbp+0x3f0],rbx
   140001706:	mov    BYTE PTR [rbp+0x3e0],bl
   14000170c:	lea    r8d,[rbx+0x26]
   140001710:	lea    rdx,[rip+0x39ee1]        # 0x14003b5f8
   140001717:	lea    rcx,[rbp+0x3e0]
   14000171e:	call   0x14001f070
   140001723:	nop
   140001724:	mov    QWORD PTR [rbp+0x418],0xf
   14000172f:	mov    QWORD PTR [rbp+0x410],rbx
   140001736:	mov    BYTE PTR [rbp+0x400],bl
   14000173c:	lea    r8d,[rbx+0x24]
   140001740:	lea    rdx,[rip+0x39ed9]        # 0x14003b620
   140001747:	lea    rcx,[rbp+0x400]
   14000174e:	call   0x14001f070
   140001753:	nop
   140001754:	mov    QWORD PTR [rbp+0x438],0xf
   14000175f:	mov    QWORD PTR [rbp+0x430],rbx
   140001766:	mov    BYTE PTR [rbp+0x420],bl
   14000176c:	lea    r8d,[rbx+0x30]
   140001770:	lea    rdx,[rip+0x39ed1]        # 0x14003b648
   140001777:	lea    rcx,[rbp+0x420]
   14000177e:	call   0x14001f070
   140001783:	nop
   140001784:	mov    QWORD PTR [rbp+0x458],0xf
   14000178f:	mov    QWORD PTR [rbp+0x450],rbx
   140001796:	mov    BYTE PTR [rbp+0x440],bl
   14000179c:	lea    r8d,[rbx+0x30]
   1400017a0:	lea    rdx,[rip+0x39ed9]        # 0x14003b680
   1400017a7:	lea    rcx,[rbp+0x440]
   1400017ae:	call   0x14001f070
   1400017b3:	nop
   1400017b4:	mov    QWORD PTR [rbp+0x478],0xf
   1400017bf:	mov    QWORD PTR [rbp+0x470],rbx
   1400017c6:	mov    BYTE PTR [rbp+0x460],bl
   1400017cc:	lea    r8d,[rbx+0x27]
   1400017d0:	lea    rdx,[rip+0x39ee1]        # 0x14003b6b8
   1400017d7:	lea    rcx,[rbp+0x460]
   1400017de:	call   0x14001f070
   1400017e3:	nop
   1400017e4:	mov    QWORD PTR [rbp+0x498],0xf
   1400017ef:	mov    QWORD PTR [rbp+0x490],rbx
   1400017f6:	mov    BYTE PTR [rbp+0x480],bl
   1400017fc:	lea    r8d,[rbx+0x22]
   140001800:	lea    rdx,[rip+0x39ed9]        # 0x14003b6e0
   140001807:	lea    rcx,[rbp+0x480]
   14000180e:	call   0x14001f070
   140001813:	nop
   140001814:	mov    QWORD PTR [rbp+0x4b8],0xf
   14000181f:	mov    QWORD PTR [rbp+0x4b0],rbx
   140001826:	mov    BYTE PTR [rbp+0x4a0],bl
   14000182c:	lea    r8d,[rbx+0x4b]
   140001830:	lea    rdx,[rip+0x39ed9]        # 0x14003b710
   140001837:	lea    rcx,[rbp+0x4a0]
   14000183e:	call   0x14001f070
   140001843:	nop
   140001844:	mov    QWORD PTR [rbp+0x4d8],0xf
   14000184f:	mov    QWORD PTR [rbp+0x4d0],rbx
   140001856:	mov    BYTE PTR [rbp+0x4c0],bl
   14000185c:	lea    r8d,[rbx+0x4d]
   140001860:	lea    rdx,[rip+0x39ef9]        # 0x14003b760
   140001867:	lea    rcx,[rbp+0x4c0]
   14000186e:	call   0x14001f070
   140001873:	nop
   140001874:	mov    QWORD PTR [rbp+0x4f8],0xf
   14000187f:	mov    QWORD PTR [rbp+0x4f0],rbx
   140001886:	mov    BYTE PTR [rbp+0x4e0],bl
   14000188c:	lea    r8d,[rbx+0x24]
   140001890:	lea    rdx,[rip+0x39f19]        # 0x14003b7b0
   140001897:	lea    rcx,[rbp+0x4e0]
   14000189e:	call   0x14001f070
   1400018a3:	nop
   1400018a4:	mov    QWORD PTR [rbp+0x518],0xf
   1400018af:	mov    QWORD PTR [rbp+0x510],rbx
   1400018b6:	mov    BYTE PTR [rbp+0x500],bl
   1400018bc:	lea    r8d,[rbx+0x22]
   1400018c0:	lea    rdx,[rip+0x39f11]        # 0x14003b7d8
   1400018c7:	lea    rcx,[rbp+0x500]
   1400018ce:	call   0x14001f070
   1400018d3:	nop
   1400018d4:	mov    QWORD PTR [rbp+0x538],0xf
   1400018df:	mov    QWORD PTR [rbp+0x530],rbx
   1400018e6:	mov    BYTE PTR [rbp+0x520],bl
   1400018ec:	lea    r8d,[rbx+0x24]
   1400018f0:	lea    rdx,[rip+0x39f09]        # 0x14003b800
   1400018f7:	lea    rcx,[rbp+0x520]
   1400018fe:	call   0x14001f070
   140001903:	nop
   140001904:	mov    QWORD PTR [rbp+0x558],0xf
   14000190f:	mov    QWORD PTR [rbp+0x550],rbx
   140001916:	mov    BYTE PTR [rbp+0x540],bl
   14000191c:	lea    r8d,[rbx+0x2a]
   140001920:	lea    rdx,[rip+0x39f01]        # 0x14003b828
   140001927:	lea    rcx,[rbp+0x540]
   14000192e:	call   0x14001f070
   140001933:	nop
   140001934:	mov    QWORD PTR [rbp+0x578],0xf
   14000193f:	mov    QWORD PTR [rbp+0x570],rbx
   140001946:	mov    BYTE PTR [rbp+0x560],bl
   14000194c:	lea    r8d,[rbx+0x39]
   140001950:	lea    rdx,[rip+0x39f01]        # 0x14003b858
   140001957:	lea    rcx,[rbp+0x560]
   14000195e:	call   0x14001f070
   140001963:	nop
   140001964:	mov    QWORD PTR [rbp+0x598],0xf
   14000196f:	mov    QWORD PTR [rbp+0x590],rbx
   140001976:	mov    BYTE PTR [rbp+0x580],bl
   14000197c:	lea    r8d,[rbx+0x2b]
   140001980:	lea    rdx,[rip+0x39f11]        # 0x14003b898
   140001987:	lea    rcx,[rbp+0x580]
   14000198e:	call   0x14001f070
   140001993:	nop
   140001994:	mov    QWORD PTR [rbp+0x5b8],0xf
   14000199f:	mov    QWORD PTR [rbp+0x5b0],rbx
   1400019a6:	mov    BYTE PTR [rbp+0x5a0],bl
   1400019ac:	lea    r8d,[rbx+0x30]
   1400019b0:	lea    rdx,[rip+0x39f11]        # 0x14003b8c8
   1400019b7:	lea    rcx,[rbp+0x5a0]
   1400019be:	call   0x14001f070
   1400019c3:	nop
   1400019c4:	mov    QWORD PTR [rbp+0x5d8],0xf
   1400019cf:	mov    QWORD PTR [rbp+0x5d0],rbx
   1400019d6:	mov    BYTE PTR [rbp+0x5c0],bl
   1400019dc:	lea    r8d,[rbx+0x32]
   1400019e0:	lea    rdx,[rip+0x39f19]        # 0x14003b900
   1400019e7:	lea    rcx,[rbp+0x5c0]
   1400019ee:	call   0x14001f070
   1400019f3:	nop
   1400019f4:	mov    QWORD PTR [rbp+0x5f8],0xf
   1400019ff:	mov    QWORD PTR [rbp+0x5f0],rbx
   140001a06:	mov    BYTE PTR [rbp+0x5e0],bl
   140001a0c:	lea    r8d,[rbx+0x2b]
   140001a10:	lea    rdx,[rip+0x39f21]        # 0x14003b938
   140001a17:	lea    rcx,[rbp+0x5e0]
   140001a1e:	call   0x14001f070
   140001a23:	nop
   140001a24:	mov    QWORD PTR [rbp+0x618],0xf
   140001a2f:	mov    QWORD PTR [rbp+0x610],rbx
   140001a36:	mov    BYTE PTR [rbp+0x600],bl
   140001a3c:	lea    r8d,[rbx+0x2b]
   140001a40:	lea    rdx,[rip+0x39f21]        # 0x14003b968
   140001a47:	lea    rcx,[rbp+0x600]
   140001a4e:	call   0x14001f070
   140001a53:	nop
   140001a54:	mov    QWORD PTR [rbp+0x638],0xf
   140001a5f:	mov    QWORD PTR [rbp+0x630],rbx
   140001a66:	mov    BYTE PTR [rbp+0x620],bl
   140001a6c:	lea    r8d,[rbx+0x2b]
   140001a70:	lea    rdx,[rip+0x39f21]        # 0x14003b998
   140001a77:	lea    rcx,[rbp+0x620]
   140001a7e:	call   0x14001f070
   140001a83:	nop
   140001a84:	mov    QWORD PTR [rbp+0x658],0xf
   140001a8f:	mov    QWORD PTR [rbp+0x650],rbx
   140001a96:	mov    BYTE PTR [rbp+0x640],bl
   140001a9c:	lea    r8d,[rbx+0x70]
   140001aa0:	lea    rdx,[rip+0x39f29]        # 0x14003b9d0
   140001aa7:	lea    rcx,[rbp+0x640]
   140001aae:	call   0x14001f070
   140001ab3:	nop
   140001ab4:	mov    QWORD PTR [rbp+0x678],0xf
   140001abf:	mov    QWORD PTR [rbp+0x670],rbx
   140001ac6:	mov    BYTE PTR [rbp+0x660],bl
   140001acc:	mov    r8d,0x81
   140001ad2:	lea    rdx,[rip+0x39f77]        # 0x14003ba50
   140001ad9:	lea    rcx,[rbp+0x660]
   140001ae0:	call   0x14001f070
   140001ae5:	nop
   140001ae6:	mov    QWORD PTR [rbp+0x698],0xf
   140001af1:	mov    QWORD PTR [rbp+0x690],rbx
   140001af8:	mov    BYTE PTR [rbp+0x680],bl
   140001afe:	lea    r8d,[rbx+0x6b]
   140001b02:	lea    rdx,[rip+0x39fd7]        # 0x14003bae0
   140001b09:	lea    rcx,[rbp+0x680]
   140001b10:	call   0x14001f070
   140001b15:	nop
   140001b16:	mov    QWORD PTR [rbp+0x6b8],0xf
   140001b21:	mov    QWORD PTR [rbp+0x6b0],rbx
   140001b28:	mov    BYTE PTR [rbp+0x6a0],bl
   140001b2e:	lea    r8d,[rbx+0x28]
   140001b32:	lea    rdx,[rip+0x3a017]        # 0x14003bb50
   140001b39:	lea    rcx,[rbp+0x6a0]
   140001b40:	call   0x14001f070
   140001b45:	nop
   140001b46:	mov    QWORD PTR [rbp+0x6d8],0xf
   140001b51:	mov    QWORD PTR [rbp+0x6d0],rbx
   140001b58:	mov    BYTE PTR [rbp+0x6c0],bl
   140001b5e:	lea    r8d,[rbx+0x26]
   140001b62:	lea    rdx,[rip+0x3a017]        # 0x14003bb80
   140001b69:	lea    rcx,[rbp+0x6c0]
   140001b70:	call   0x14001f070
   140001b75:	nop
   140001b76:	mov    QWORD PTR [rbp+0x6f8],0xf
   140001b81:	mov    QWORD PTR [rbp+0x6f0],rbx
   140001b88:	mov    BYTE PTR [rbp+0x6e0],bl
   140001b8e:	lea    r8d,[rbx+0x2e]
   140001b92:	lea    rdx,[rip+0x3a00f]        # 0x14003bba8
   140001b99:	lea    rcx,[rbp+0x6e0]
   140001ba0:	call   0x14001f070
   140001ba5:	nop
   140001ba6:	mov    QWORD PTR [rbp+0x718],0xf
   140001bb1:	mov    QWORD PTR [rbp+0x710],rbx
   140001bb8:	mov    BYTE PTR [rbp+0x700],bl
   140001bbe:	lea    r8d,[rbx+0x2e]
   140001bc2:	lea    rdx,[rip+0x3a00f]        # 0x14003bbd8
   140001bc9:	lea    rcx,[rbp+0x700]
   140001bd0:	call   0x14001f070
   140001bd5:	nop
   140001bd6:	mov    QWORD PTR [rbp+0x738],0xf
   140001be1:	mov    QWORD PTR [rbp+0x730],rbx
   140001be8:	mov    BYTE PTR [rbp+0x720],bl
   140001bee:	lea    r8d,[rbx+0x29]
   140001bf2:	lea    rdx,[rip+0x3a00f]        # 0x14003bc08
   140001bf9:	lea    rcx,[rbp+0x720]
   140001c00:	call   0x14001f070
   140001c05:	nop
   140001c06:	mov    QWORD PTR [rbp+0x758],0xf
   140001c11:	mov    QWORD PTR [rbp+0x750],rbx
   140001c18:	mov    BYTE PTR [rbp+0x740],bl
   140001c1e:	lea    r8d,[rbx+0x27]
   140001c22:	lea    rdx,[rip+0x3a00f]        # 0x14003bc38
   140001c29:	lea    rcx,[rbp+0x740]
   140001c30:	call   0x14001f070
   140001c35:	nop
   140001c36:	mov    QWORD PTR [rbp+0x778],0xf
   140001c41:	mov    QWORD PTR [rbp+0x770],rbx
   140001c48:	mov    BYTE PTR [rbp+0x760],bl
   140001c4e:	lea    r8d,[rbx+0x5d]
   140001c52:	lea    rdx,[rip+0x3a007]        # 0x14003bc60
   140001c59:	lea    rcx,[rbp+0x760]
   140001c60:	call   0x14001f070
   140001c65:	nop
   140001c66:	mov    QWORD PTR [rbp+0x798],0xf
   140001c71:	mov    QWORD PTR [rbp+0x790],rbx
   140001c78:	mov    BYTE PTR [rbp+0x780],bl
   140001c7e:	lea    r8d,[rbx+0x3d]
   140001c82:	lea    rdx,[rip+0x3a037]        # 0x14003bcc0
   140001c89:	lea    rcx,[rbp+0x780]
   140001c90:	call   0x14001f070
   140001c95:	nop
   140001c96:	mov    QWORD PTR [rbp+0x7b8],0xf
   140001ca1:	mov    QWORD PTR [rbp+0x7b0],rbx
   140001ca8:	mov    BYTE PTR [rbp+0x7a0],bl
   140001cae:	lea    r8d,[rbx+0x3d]
   140001cb2:	lea    rdx,[rip+0x3a047]        # 0x14003bd00
   140001cb9:	lea    rcx,[rbp+0x7a0]
   140001cc0:	call   0x14001f070
   140001cc5:	nop
   140001cc6:	mov    QWORD PTR [rbp+0x7d0],rbx
   140001ccd:	mov    QWORD PTR [rbp+0x7d8],0xf
   140001cd8:	xor    edx,edx
   140001cda:	lea    rcx,[rbp+0x7c0]
   140001ce1:	call   0x14001c9b0
   140001ce6:	lea    rdx,[rip+0x3a053]        # 0x14003bd40
   140001ced:	lea    rcx,[rbp+0x7c0]
   140001cf4:	call   0x14001f050
   140001cf9:	nop
   140001cfa:	lea    rdx,[rip+0x3a087]        # 0x14003bd88
   140001d01:	lea    rcx,[rbp+0x7e0]
   140001d08:	call   0x1400110d0
   140001d0d:	nop
   140001d0e:	lea    rdx,[rip+0x3a0ab]        # 0x14003bdc0
   140001d15:	lea    rcx,[rbp+0x800]
   140001d1c:	call   0x1400110d0
   140001d21:	nop
   140001d22:	lea    rdx,[rip+0x3a0df]        # 0x14003be08
   140001d29:	lea    rcx,[rbp+0x820]
   140001d30:	call   0x1400110d0
   140001d35:	nop
   140001d36:	lea    rdx,[rip+0x3a0f3]        # 0x14003be30
   140001d3d:	lea    rcx,[rbp+0x840]
   140001d44:	call   0x1400110d0
   140001d49:	nop
   140001d4a:	lea    rdx,[rip+0x3a117]        # 0x14003be68
   140001d51:	lea    rcx,[rbp+0x860]
   140001d58:	call   0x1400110d0
   140001d5d:	nop
   140001d5e:	lea    rdx,[rip+0x3a133]        # 0x14003be98
   140001d65:	lea    rcx,[rbp+0x880]
   140001d6c:	call   0x1400110d0
   140001d71:	nop
   140001d72:	lea    rdx,[rip+0x3a157]        # 0x14003bed0
   140001d79:	lea    rcx,[rbp+0x8a0]
   140001d80:	call   0x1400110d0
   140001d85:	nop
   140001d86:	lea    rdx,[rip+0x3a193]        # 0x14003bf20
   140001d8d:	lea    rcx,[rbp+0x8c0]
   140001d94:	call   0x1400110d0
   140001d99:	nop
   140001d9a:	lea    rdx,[rip+0x3a1c7]        # 0x14003bf68
   140001da1:	lea    rcx,[rbp+0x8e0]
   140001da8:	call   0x1400110d0
   140001dad:	nop
   140001dae:	lea    r8,[rbp+0x900]
   140001db5:	lea    rdx,[rsp+0x40]
   140001dba:	lea    rcx,[rbp+0x900]
   140001dc1:	call   0x1400141c0
   140001dc6:	movups xmm0,XMMWORD PTR [rax]
   140001dc9:	movaps XMMWORD PTR [rsp+0x20],xmm0
   140001dce:	lea    rcx,[rbp+0x920]
   140001dd5:	call   0x1400107b0
   140001dda:	mov    r8,rax
   140001ddd:	lea    rdx,[rsp+0x20]
   140001de2:	lea    rcx,[rip+0x55b4f]        # 0x140057938
   140001de9:	call   0x140014330
   140001dee:	nop
   140001def:	lea    r9,[rip+0x1530a]        # 0x140017100
   140001df6:	lea    edx,[rbx+0x20]
   140001df9:	lea    r8d,[rbx+0x4e]
   140001dfd:	lea    rcx,[rsp+0x40]
   140001e02:	call   0x1400301b0
   140001e07:	lea    rcx,[rip+0x33bd2]        # 0x1400359e0
   140001e0e:	mov    rbx,QWORD PTR [rsp+0xa28]
   140001e16:	add    rsp,0xa10
   140001e1d:	pop    rbp
   140001e1e:	jmp    0x140030388
   140001e23:	int3   
   140001e24:	int3   
   140001e25:	int3   
   140001e26:	int3   
   140001e27:	int3   
   140001e28:	int3   
   140001e29:	int3   
   140001e2a:	int3   
   140001e2b:	int3   
   140001e2c:	int3   
   140001e2d:	int3   
   140001e2e:	int3   
   140001e2f:	int3   
   140001e30:	sub    rsp,0x28
   140001e34:	call   QWORD PTR [rip+0x348c6]        # 0x140036700
   140001e3a:	mov    QWORD PTR [rip+0x55b07],rax        # 0x140057948
   140001e41:	add    rsp,0x28
   140001e45:	ret    
   140001e46:	int3   
   140001e47:	int3   
   140001e48:	int3   
   140001e49:	int3   
   140001e4a:	int3   
   140001e4b:	int3   
   140001e4c:	int3   
   140001e4d:	int3   
   140001e4e:	int3   
   140001e4f:	int3   
   140001e50:	sub    rsp,0x28
   140001e54:	call   QWORD PTR [rip+0x3489e]        # 0x1400366f8
   140001e5a:	mov    QWORD PTR [rip+0x55af7],rax        # 0x140057958
   140001e61:	add    rsp,0x28
   140001e65:	ret    
   140001e66:	int3   
   140001e67:	int3   
   140001e68:	lea    rcx,[rip+0x33e11]        # 0x140035c80
   140001e6f:	jmp    0x140030388
   140001e74:	int3   
   140001e75:	int3   
   140001e76:	int3   
   140001e77:	int3   
   140001e78:	int3   
   140001e79:	int3   
   140001e7a:	int3   
   140001e7b:	int3   
   140001e7c:	int3   
   140001e7d:	int3   
   140001e7e:	int3   
   140001e7f:	int3   
   140001e80:	mov    QWORD PTR [rsp+0x8],rcx
   140001e85:	push   rbx
   140001e86:	sub    rsp,0x50
   140001e8a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001e93:	mov    rbx,rcx
   140001e96:	mov    QWORD PTR [rcx+0x18],0x7
   140001e9e:	xor    r8d,r8d
   140001ea1:	mov    QWORD PTR [rcx+0x10],r8
   140001ea5:	mov    WORD PTR [rcx],r8w
   140001ea9:	mov    QWORD PTR [rsp+0x40],0xf
   140001eb2:	mov    QWORD PTR [rsp+0x38],r8
   140001eb7:	mov    BYTE PTR [rsp+0x28],r8b
   140001ebc:	cmp    BYTE PTR [rdx],r8b
   140001ebf:	je     0x140001ecf
   140001ec1:	or     r8,0xffffffffffffffff
   140001ec5:	inc    r8
   140001ec8:	cmp    BYTE PTR [rdx+r8*1],0x0
   140001ecd:	jne    0x140001ec5
   140001ecf:	lea    rcx,[rsp+0x28]
   140001ed4:	call   0x14001f070
   140001ed9:	nop
   140001eda:	call   QWORD PTR [rip+0x34650]        # 0x140036530
   140001ee0:	mov    r10,QWORD PTR [rsp+0x38]
   140001ee5:	test   r10,r10
   140001ee8:	je     0x140001f16
   140001eea:	lea    rdx,[rsp+0x28]
   140001eef:	cmp    QWORD PTR [rsp+0x40],0x10
   140001ef5:	cmovae rdx,QWORD PTR [rsp+0x28]
   140001efb:	lea    rcx,[rsp+0x28]
   140001f00:	cmovae rcx,QWORD PTR [rsp+0x28]
   140001f06:	add    rdx,r10
   140001f09:	mov    r9,rax
   140001f0c:	mov    r8,rbx
   140001f0f:	call   QWORD PTR [rip+0x3466b]        # 0x140036580
   140001f15:	nop
   140001f16:	cmp    QWORD PTR [rsp+0x40],0x10
   140001f1c:	jb     0x140001f29
   140001f1e:	mov    rcx,QWORD PTR [rsp+0x28]
   140001f23:	call   0x140030282
   140001f28:	nop
   140001f29:	mov    rax,rbx
   140001f2c:	add    rsp,0x50
   140001f30:	pop    rbx
   140001f31:	ret    
   140001f32:	int3   
   140001f33:	int3   
   140001f34:	int3   
   140001f35:	int3   
   140001f36:	int3   
   140001f37:	int3   
   140001f38:	int3   
   140001f39:	int3   
   140001f3a:	int3   
   140001f3b:	int3   
   140001f3c:	int3   
   140001f3d:	int3   
   140001f3e:	int3   
   140001f3f:	int3   
   140001f40:	mov    rax,QWORD PTR [rdx]
   140001f43:	mov    QWORD PTR [rcx],rax
   140001f46:	mov    rax,QWORD PTR [r8]
   140001f49:	mov    QWORD PTR [rcx+0x8],rax
   140001f4d:	mov    rax,rcx
   140001f50:	ret    
   140001f51:	int3   
   140001f52:	int3   
   140001f53:	int3   
   140001f54:	int3   
   140001f55:	int3   
   140001f56:	int3   
   140001f57:	int3   
   140001f58:	int3   
   140001f59:	int3   
   140001f5a:	int3   
   140001f5b:	int3   
   140001f5c:	int3   
   140001f5d:	int3   
   140001f5e:	int3   
   140001f5f:	int3   
   140001f60:	mov    rax,QWORD PTR [rdx]
   140001f63:	mov    QWORD PTR [rcx],rax
   140001f66:	movzx  eax,BYTE PTR [r8]
   140001f6a:	mov    BYTE PTR [rcx+0x8],al
   140001f6d:	mov    rax,rcx
   140001f70:	ret    
   140001f71:	int3   
   140001f72:	int3   
   140001f73:	int3   
   140001f74:	int3   
   140001f75:	int3   
   140001f76:	int3   
   140001f77:	int3   
   140001f78:	int3   
   140001f79:	int3   
   140001f7a:	int3   
   140001f7b:	int3   
   140001f7c:	int3   
   140001f7d:	int3   
   140001f7e:	int3   
   140001f7f:	int3   
   140001f80:	mov    QWORD PTR [rsp+0x8],rcx
   140001f85:	push   rdi
   140001f86:	sub    rsp,0x30
   140001f8a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001f93:	mov    QWORD PTR [rsp+0x48],rbx
   140001f98:	mov    rbx,r8
   140001f9b:	mov    rdi,rcx
   140001f9e:	mov    QWORD PTR [rcx+0x18],0xf
   140001fa6:	mov    QWORD PTR [rcx+0x10],0x0
   140001fae:	mov    BYTE PTR [rcx],0x0
   140001fb1:	or     r9,0xffffffffffffffff
   140001fb5:	xor    r8d,r8d
   140001fb8:	call   0x14001ef20
   140001fbd:	nop
   140001fbe:	lea    rcx,[rdi+0x20]
   140001fc2:	mov    rdx,rbx
   140001fc5:	call   0x140010e10
   140001fca:	nop
   140001fcb:	mov    rax,rdi
   140001fce:	mov    rbx,QWORD PTR [rsp+0x48]
   140001fd3:	add    rsp,0x30
   140001fd7:	pop    rdi
   140001fd8:	ret    
   140001fd9:	int3   
   140001fda:	int3   
   140001fdb:	int3   
   140001fdc:	int3   
   140001fdd:	int3   
   140001fde:	int3   
   140001fdf:	int3   
   140001fe0:	mov    QWORD PTR [rsp+0x8],rcx
   140001fe5:	push   rdi
   140001fe6:	sub    rsp,0x30
   140001fea:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001ff3:	mov    QWORD PTR [rsp+0x48],rbx
   140001ff8:	mov    rbx,r8
   140001ffb:	mov    rdi,rcx
   140001ffe:	mov    QWORD PTR [rcx+0x18],0xf
   140002006:	mov    QWORD PTR [rcx+0x10],0x0
   14000200e:	mov    BYTE PTR [rcx],0x0
   140002011:	or     r9,0xffffffffffffffff
   140002015:	xor    r8d,r8d
   140002018:	call   0x14001ef20
   14000201d:	nop
   14000201e:	lea    rcx,[rdi+0x20]
   140002022:	mov    rdx,rbx
   140002025:	call   0x140010e10
   14000202a:	nop
   14000202b:	mov    rax,rdi
   14000202e:	mov    rbx,QWORD PTR [rsp+0x48]
   140002033:	add    rsp,0x30
   140002037:	pop    rdi
   140002038:	ret    
   140002039:	int3   
   14000203a:	int3   
   14000203b:	int3   
   14000203c:	int3   
   14000203d:	int3   
   14000203e:	int3   
   14000203f:	int3   
   140002040:	mov    rax,rcx
   140002043:	ret    
   140002044:	int3   
   140002045:	int3   
   140002046:	int3   
   140002047:	int3   
   140002048:	int3   
   140002049:	int3   
   14000204a:	int3   
   14000204b:	int3   
   14000204c:	int3   
   14000204d:	int3   
   14000204e:	int3   
   14000204f:	int3   
   140002050:	mov    rax,rcx
   140002053:	ret    
   140002054:	int3   
   140002055:	int3   
   140002056:	int3   
   140002057:	int3   
   140002058:	int3   
   140002059:	int3   
   14000205a:	int3   
   14000205b:	int3   
   14000205c:	int3   
   14000205d:	int3   
   14000205e:	int3   
   14000205f:	int3   
   140002060:	rex push rdi
   140002062:	sub    rsp,0x30
   140002066:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000206f:	mov    QWORD PTR [rsp+0x48],rbx
   140002074:	mov    QWORD PTR [rsp+0x50],rsi
   140002079:	mov    rdi,r8
   14000207c:	mov    esi,edx
   14000207e:	mov    rbx,rcx
   140002081:	mov    ecx,0x50
   140002086:	call   0x14003027c
   14000208b:	mov    QWORD PTR [rsp+0x40],rax
   140002090:	test   rax,rax
   140002093:	je     0x1400020a3
   140002095:	mov    r8,rdi
   140002098:	mov    edx,esi
   14000209a:	mov    rcx,rax
   14000209d:	call   0x1400020e0
   1400020a2:	nop
   1400020a3:	mov    QWORD PTR [rsp+0x40],rbx
   1400020a8:	mov    QWORD PTR [rbx],rax
   1400020ab:	lea    r8,[rbx+0x8]
   1400020af:	mov    QWORD PTR [r8],0x0
   1400020b6:	mov    rdx,rax
   1400020b9:	mov    rcx,rbx
   1400020bc:	call   0x14000da40
   1400020c1:	nop
   1400020c2:	mov    rax,rbx
   1400020c5:	mov    rbx,QWORD PTR [rsp+0x48]
   1400020ca:	mov    rsi,QWORD PTR [rsp+0x50]
   1400020cf:	add    rsp,0x30
   1400020d3:	pop    rdi
   1400020d4:	ret    
   1400020d5:	int3   
   1400020d6:	int3   
   1400020d7:	int3   
   1400020d8:	int3   
   1400020d9:	int3   
   1400020da:	int3   
   1400020db:	int3   
   1400020dc:	int3   
   1400020dd:	int3   
   1400020de:	int3   
   1400020df:	int3   
   1400020e0:	mov    QWORD PTR [rsp+0x8],rcx
   1400020e5:	push   rdi
   1400020e6:	sub    rsp,0x30
   1400020ea:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400020f3:	mov    QWORD PTR [rsp+0x48],rbx
   1400020f8:	movsxd rbx,edx
   1400020fb:	mov    rdi,rcx
   1400020fe:	mov    edx,DWORD PTR [r8]
   140002101:	call   0x1400158c0
   140002106:	nop
   140002107:	xor    eax,eax
   140002109:	test   rbx,rbx
   14000210c:	je     0x140002128
   14000210e:	cmp    rbx,0xffffffffffffffff
   140002112:	ja     0x140002121
   140002114:	mov    rcx,rbx
   140002117:	call   0x14003027c
   14000211c:	test   rax,rax
   14000211f:	jne    0x140002128
   140002121:	call   QWORD PTR [rip+0x340f1]        # 0x140036218
   140002127:	int3   
   140002128:	mov    QWORD PTR [rdi+0x28],rax
   14000212c:	mov    QWORD PTR [rdi+0x30],rbx
   140002130:	mov    DWORD PTR [rdi+0x48],0x0
   140002137:	mov    rax,rdi
   14000213a:	mov    rbx,QWORD PTR [rsp+0x48]
   14000213f:	add    rsp,0x30
   140002143:	pop    rdi
   140002144:	ret    
   140002145:	int3   
   140002146:	int3   
   140002147:	int3   
   140002148:	int3   
   140002149:	int3   
   14000214a:	int3   
   14000214b:	int3   
   14000214c:	int3   
   14000214d:	int3   
   14000214e:	int3   
   14000214f:	int3   
   140002150:	mov    QWORD PTR [rsp+0x8],rcx
   140002155:	push   rdi
   140002156:	sub    rsp,0x30
   14000215a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002163:	mov    QWORD PTR [rsp+0x48],rbx
   140002168:	mov    rbx,rdx
   14000216b:	mov    rdi,rcx
   14000216e:	mov    QWORD PTR [rcx+0x18],0x7
   140002176:	xor    eax,eax
   140002178:	mov    QWORD PTR [rcx+0x10],rax
   14000217c:	mov    WORD PTR [rcx],ax
   14000217f:	call   QWORD PTR [rip+0x343ab]        # 0x140036530
   140002185:	mov    r9,rax
   140002188:	mov    r8,rdi
   14000218b:	xor    edx,edx
   14000218d:	mov    rcx,QWORD PTR [rbx]
   140002190:	call   QWORD PTR [rip+0x343ea]        # 0x140036580
   140002196:	nop
   140002197:	mov    rax,rdi
   14000219a:	mov    rbx,QWORD PTR [rsp+0x48]
   14000219f:	add    rsp,0x30
   1400021a3:	pop    rdi
   1400021a4:	ret    
   1400021a5:	int3   
   1400021a6:	int3   
   1400021a7:	int3   
   1400021a8:	int3   
   1400021a9:	int3   
   1400021aa:	int3   
   1400021ab:	int3   
   1400021ac:	int3   
   1400021ad:	int3   
   1400021ae:	int3   
   1400021af:	int3   
   1400021b0:	mov    rax,rcx
   1400021b3:	ret    
   1400021b4:	int3   
   1400021b5:	int3   
   1400021b6:	int3   
   1400021b7:	int3   
   1400021b8:	int3   
   1400021b9:	int3   
   1400021ba:	int3   
   1400021bb:	int3   
   1400021bc:	int3   
   1400021bd:	int3   
   1400021be:	int3   
   1400021bf:	int3   
   1400021c0:	mov    rax,rcx
   1400021c3:	ret    
   1400021c4:	int3   
   1400021c5:	int3   
   1400021c6:	int3   
   1400021c7:	int3   
   1400021c8:	int3   
   1400021c9:	int3   
   1400021ca:	int3   
   1400021cb:	int3   
   1400021cc:	int3   
   1400021cd:	int3   
   1400021ce:	int3   
   1400021cf:	int3   
   1400021d0:	mov    rax,rcx
   1400021d3:	ret    
   1400021d4:	int3   
   1400021d5:	int3   
   1400021d6:	int3   
   1400021d7:	int3   
   1400021d8:	int3   
   1400021d9:	int3   
   1400021da:	int3   
   1400021db:	int3   
   1400021dc:	int3   
   1400021dd:	int3   
   1400021de:	int3   
   1400021df:	int3   
   1400021e0:	mov    QWORD PTR [rsp+0x8],rcx
   1400021e5:	push   rbx
   1400021e6:	sub    rsp,0x30
   1400021ea:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400021f3:	mov    rbx,rcx
   1400021f6:	mov    QWORD PTR [rcx],rdx
   1400021f9:	lea    r8,[rcx+0x8]
   1400021fd:	mov    QWORD PTR [r8],0x0
   140002204:	call   0x14000d940
   140002209:	nop
   14000220a:	mov    rax,rbx
   14000220d:	add    rsp,0x30
   140002211:	pop    rbx
   140002212:	ret    
   140002213:	int3   
   140002214:	int3   
   140002215:	int3   
   140002216:	int3   
   140002217:	int3   
   140002218:	int3   
   140002219:	int3   
   14000221a:	int3   
   14000221b:	int3   
   14000221c:	int3   
   14000221d:	int3   
   14000221e:	int3   
   14000221f:	int3   
   140002220:	mov    QWORD PTR [rsp+0x10],rdx
   140002225:	push   rdi
   140002226:	sub    rsp,0x30
   14000222a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002233:	mov    QWORD PTR [rsp+0x40],rbx
   140002238:	mov    rdi,rdx
   14000223b:	mov    rbx,rcx
   14000223e:	mov    QWORD PTR [rcx],0x0
   140002245:	mov    ecx,0x18
   14000224a:	call   0x14003027c
   14000224f:	test   rax,rax
   140002252:	je     0x140002270
   140002254:	mov    DWORD PTR [rax+0x8],0x1
   14000225b:	mov    DWORD PTR [rax+0xc],0x1
   140002262:	lea    rcx,[rip+0x3c4c7]        # 0x14003e730
   140002269:	mov    QWORD PTR [rax],rcx
   14000226c:	mov    QWORD PTR [rax+0x10],rdi
   140002270:	mov    QWORD PTR [rbx],rax
   140002273:	mov    rax,rbx
   140002276:	mov    rbx,QWORD PTR [rsp+0x40]
   14000227b:	add    rsp,0x30
   14000227f:	pop    rdi
   140002280:	ret    
   140002281:	int3   
   140002282:	int3   
   140002283:	int3   
   140002284:	int3   
   140002285:	int3   
   140002286:	int3   
   140002287:	int3   
   140002288:	int3   
   140002289:	int3   
   14000228a:	int3   
   14000228b:	int3   
   14000228c:	int3   
   14000228d:	int3   
   14000228e:	int3   
   14000228f:	int3   
   140002290:	mov    QWORD PTR [rsp+0x8],rcx
   140002295:	push   rbx
   140002296:	sub    rsp,0x30
   14000229a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400022a3:	mov    rbx,rcx
   1400022a6:	mov    QWORD PTR [rcx],rdx
   1400022a9:	lea    r8,[rcx+0x8]
   1400022ad:	mov    QWORD PTR [r8],0x0
   1400022b4:	call   0x14000d9c0
   1400022b9:	nop
   1400022ba:	mov    rax,rbx
   1400022bd:	add    rsp,0x30
   1400022c1:	pop    rbx
   1400022c2:	ret    
   1400022c3:	int3   
   1400022c4:	int3   
   1400022c5:	int3   
   1400022c6:	int3   
   1400022c7:	int3   
   1400022c8:	int3   
   1400022c9:	int3   
   1400022ca:	int3   
   1400022cb:	int3   
   1400022cc:	int3   
   1400022cd:	int3   
   1400022ce:	int3   
   1400022cf:	int3   
   1400022d0:	mov    QWORD PTR [rsp+0x10],rdx
   1400022d5:	push   rdi
   1400022d6:	sub    rsp,0x30
   1400022da:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400022e3:	mov    QWORD PTR [rsp+0x40],rbx
   1400022e8:	mov    rdi,rdx
   1400022eb:	mov    rbx,rcx
   1400022ee:	mov    QWORD PTR [rcx],0x0
   1400022f5:	mov    ecx,0x18
   1400022fa:	call   0x14003027c
   1400022ff:	test   rax,rax
   140002302:	je     0x140002320
   140002304:	mov    DWORD PTR [rax+0x8],0x1
   14000230b:	mov    DWORD PTR [rax+0xc],0x1
   140002312:	lea    rcx,[rip+0x3d097]        # 0x14003f3b0
   140002319:	mov    QWORD PTR [rax],rcx
   14000231c:	mov    QWORD PTR [rax+0x10],rdi
   140002320:	mov    QWORD PTR [rbx],rax
   140002323:	mov    rax,rbx
   140002326:	mov    rbx,QWORD PTR [rsp+0x40]
   14000232b:	add    rsp,0x30
   14000232f:	pop    rdi
   140002330:	ret    
   140002331:	int3   
   140002332:	int3   
   140002333:	int3   
   140002334:	int3   
   140002335:	int3   
   140002336:	int3   
   140002337:	int3   
   140002338:	int3   
   140002339:	int3   
   14000233a:	int3   
   14000233b:	int3   
   14000233c:	int3   
   14000233d:	int3   
   14000233e:	int3   
   14000233f:	int3   
   140002340:	mov    QWORD PTR [rsp+0x8],rcx
   140002345:	push   rbx
   140002346:	sub    rsp,0x30
   14000234a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002353:	mov    rbx,rcx
   140002356:	mov    QWORD PTR [rcx],rdx
   140002359:	lea    r8,[rcx+0x8]
   14000235d:	mov    QWORD PTR [r8],0x0
   140002364:	call   0x14000da40
   140002369:	nop
   14000236a:	mov    rax,rbx
   14000236d:	add    rsp,0x30
   140002371:	pop    rbx
   140002372:	ret    
   140002373:	int3   
   140002374:	int3   
   140002375:	int3   
   140002376:	int3   
   140002377:	int3   
   140002378:	int3   
   140002379:	int3   
   14000237a:	int3   
   14000237b:	int3   
   14000237c:	int3   
   14000237d:	int3   
   14000237e:	int3   
   14000237f:	int3   
   140002380:	mov    QWORD PTR [rsp+0x10],rdx
   140002385:	push   rdi
   140002386:	sub    rsp,0x30
   14000238a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002393:	mov    QWORD PTR [rsp+0x40],rbx
   140002398:	mov    rdi,rdx
   14000239b:	mov    rbx,rcx
   14000239e:	mov    QWORD PTR [rcx],0x0
   1400023a5:	mov    ecx,0x18
   1400023aa:	call   0x14003027c
   1400023af:	test   rax,rax
   1400023b2:	je     0x1400023d0
   1400023b4:	mov    DWORD PTR [rax+0x8],0x1
   1400023bb:	mov    DWORD PTR [rax+0xc],0x1
   1400023c2:	lea    rcx,[rip+0x3d08f]        # 0x14003f458
   1400023c9:	mov    QWORD PTR [rax],rcx
   1400023cc:	mov    QWORD PTR [rax+0x10],rdi
   1400023d0:	mov    QWORD PTR [rbx],rax
   1400023d3:	mov    rax,rbx
   1400023d6:	mov    rbx,QWORD PTR [rsp+0x40]
   1400023db:	add    rsp,0x30
   1400023df:	pop    rdi
   1400023e0:	ret    
   1400023e1:	int3   
   1400023e2:	int3   
   1400023e3:	int3   
   1400023e4:	int3   
   1400023e5:	int3   
   1400023e6:	int3   
   1400023e7:	int3   
   1400023e8:	int3   
   1400023e9:	int3   
   1400023ea:	int3   
   1400023eb:	int3   
   1400023ec:	int3   
   1400023ed:	int3   
   1400023ee:	int3   
   1400023ef:	int3   
   1400023f0:	rex push rdi
   1400023f2:	sub    rsp,0x30
   1400023f6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400023ff:	mov    QWORD PTR [rsp+0x48],rbx
   140002404:	mov    QWORD PTR [rsp+0x50],rsi
   140002409:	mov    rdi,r8
   14000240c:	mov    esi,edx
   14000240e:	mov    rbx,rcx
   140002411:	mov    ecx,0x48
   140002416:	call   0x14003027c
   14000241b:	mov    QWORD PTR [rsp+0x40],rax
   140002420:	test   rax,rax
   140002423:	je     0x140002433
   140002425:	mov    r8,rdi
   140002428:	mov    edx,esi
   14000242a:	mov    rcx,rax
   14000242d:	call   0x140002470
   140002432:	nop
   140002433:	mov    QWORD PTR [rsp+0x40],rbx
   140002438:	mov    QWORD PTR [rbx],rax
   14000243b:	lea    r8,[rbx+0x8]
   14000243f:	mov    QWORD PTR [r8],0x0
   140002446:	mov    rdx,rax
   140002449:	mov    rcx,rbx
   14000244c:	call   0x14000d9c0
   140002451:	nop
   140002452:	mov    rax,rbx
   140002455:	mov    rbx,QWORD PTR [rsp+0x48]
   14000245a:	mov    rsi,QWORD PTR [rsp+0x50]
   14000245f:	add    rsp,0x30
   140002463:	pop    rdi
   140002464:	ret    
   140002465:	int3   
   140002466:	int3   
   140002467:	int3   
   140002468:	int3   
   140002469:	int3   
   14000246a:	int3   
   14000246b:	int3   
   14000246c:	int3   
   14000246d:	int3   
   14000246e:	int3   
   14000246f:	int3   
   140002470:	mov    QWORD PTR [rsp+0x8],rcx
   140002475:	push   rdi
   140002476:	sub    rsp,0x40
   14000247a:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140002483:	mov    QWORD PTR [rsp+0x58],rbx
   140002488:	mov    QWORD PTR [rsp+0x60],rsi
   14000248d:	mov    rdi,r8
   140002490:	movsxd rsi,edx
   140002493:	mov    rbx,rcx
   140002496:	call   QWORD PTR [rip+0x34154]        # 0x1400365f0
   14000249c:	nop
   14000249d:	test   rbx,rbx
   1400024a0:	je     0x1400024a8
   1400024a2:	lea    rax,[rbx+0x20]
   1400024a6:	jmp    0x1400024aa
   1400024a8:	xor    eax,eax
   1400024aa:	mov    QWORD PTR [rsp+0x28],rax
   1400024af:	mov    QWORD PTR [rsp+0x20],0x0
   1400024b8:	xor    r9d,r9d
   1400024bb:	mov    r8b,0x1
   1400024be:	mov    rdx,rdi
   1400024c1:	mov    rcx,rbx
   1400024c4:	call   QWORD PTR [rip+0x340e6]        # 0x1400365b0
   1400024ca:	nop
   1400024cb:	xor    eax,eax
   1400024cd:	test   esi,esi
   1400024cf:	je     0x1400024eb
   1400024d1:	cmp    rsi,0xffffffffffffffff
   1400024d5:	ja     0x1400024e4
   1400024d7:	mov    rcx,rsi
   1400024da:	call   0x14003027c
   1400024df:	test   rax,rax
   1400024e2:	jne    0x1400024eb
   1400024e4:	call   QWORD PTR [rip+0x33d2e]        # 0x140036218
   1400024ea:	int3   
   1400024eb:	mov    QWORD PTR [rbx+0x20],rax
   1400024ef:	mov    QWORD PTR [rbx+0x28],rsi
   1400024f3:	mov    DWORD PTR [rbx+0x40],0x0
   1400024fa:	mov    rax,rbx
   1400024fd:	mov    rbx,QWORD PTR [rsp+0x58]
   140002502:	mov    rsi,QWORD PTR [rsp+0x60]
   140002507:	add    rsp,0x40
   14000250b:	pop    rdi
   14000250c:	ret    
   14000250d:	int3   
   14000250e:	int3   
   14000250f:	int3   
   140002510:	mov    QWORD PTR [rcx],rdx
   140002513:	mov    BYTE PTR [rcx+0x8],0x0
   140002517:	mov    BYTE PTR [rcx+0xa],0x0
   14000251b:	mov    DWORD PTR [rcx+0xc],0x0
   140002522:	mov    BYTE PTR [rcx+0x10],0x0
   140002526:	mov    rax,rcx
   140002529:	ret    
   14000252a:	int3   
   14000252b:	int3   
   14000252c:	int3   
   14000252d:	int3   
   14000252e:	int3   
   14000252f:	int3   
   140002530:	mov    QWORD PTR [rcx],rdx
   140002533:	mov    rax,rcx
   140002536:	ret    
   140002537:	int3   
   140002538:	int3   
   140002539:	int3   
   14000253a:	int3   
   14000253b:	int3   
   14000253c:	int3   
   14000253d:	int3   
   14000253e:	int3   
   14000253f:	int3   
   140002540:	mov    QWORD PTR [rcx],rdx
   140002543:	mov    BYTE PTR [rcx+0x8],0x0
   140002547:	mov    BYTE PTR [rcx+0xa],0x0
   14000254b:	mov    DWORD PTR [rcx+0xc],0x0
   140002552:	mov    BYTE PTR [rcx+0x10],0x0
   140002556:	mov    rax,rcx
   140002559:	ret    
   14000255a:	int3   
   14000255b:	int3   
   14000255c:	int3   
   14000255d:	int3   
   14000255e:	int3   
   14000255f:	int3   
   140002560:	mov    QWORD PTR [rcx],rdx
   140002563:	mov    rax,rcx
   140002566:	mov    BYTE PTR [rcx+0x10],0x0
   14000256a:	mov    BYTE PTR [rcx+0x12],0x0
   14000256e:	mov    DWORD PTR [rcx+0x14],0x0
   140002575:	mov    BYTE PTR [rcx+0x18],0x0
   140002579:	ret    
   14000257a:	int3   
   14000257b:	int3   
   14000257c:	int3   
   14000257d:	int3   
   14000257e:	int3   
   14000257f:	int3   
   140002580:	mov    QWORD PTR [rsp+0x18],r8
   140002585:	mov    QWORD PTR [rsp+0x10],rdx
   14000258a:	push   rbx
   14000258b:	sub    rsp,0x20
   14000258f:	movzx  r9d,BYTE PTR [rsp+0x30]
   140002595:	mov    QWORD PTR [rcx+0x18],0xf
   14000259d:	mov    QWORD PTR [rcx+0x10],0x0
   1400025a5:	mov    BYTE PTR [rcx],0x0
   1400025a8:	mov    r8,QWORD PTR [rsp+0x40]
   1400025ad:	mov    rdx,QWORD PTR [rsp+0x38]
   1400025b2:	mov    rbx,rcx
   1400025b5:	call   0x140003ea0
   1400025ba:	mov    rax,rbx
   1400025bd:	add    rsp,0x20
   1400025c1:	pop    rbx
   1400025c2:	ret    
   1400025c3:	int3   
   1400025c4:	int3   
   1400025c5:	int3   
   1400025c6:	int3   
   1400025c7:	int3   
   1400025c8:	int3   
   1400025c9:	int3   
   1400025ca:	int3   
   1400025cb:	int3   
   1400025cc:	int3   
   1400025cd:	int3   
   1400025ce:	int3   
   1400025cf:	int3   
   1400025d0:	rex push rbx
   1400025d2:	sub    rsp,0x60
   1400025d6:	mov    QWORD PTR [rcx+0x18],0xf
   1400025de:	mov    QWORD PTR [rcx+0x10],0x0
   1400025e6:	mov    BYTE PTR [rcx],0x0
   1400025e9:	mov    rax,QWORD PTR [r8]
   1400025ec:	movzx  r9d,BYTE PTR [r8+0x8]
   1400025f1:	movzx  r10d,BYTE PTR [r8+0xa]
   1400025f6:	mov    r8d,DWORD PTR [r8+0xc]
   1400025fa:	mov    r11,rdx
   1400025fd:	mov    rbx,rcx
   140002600:	movzx  ecx,BYTE PTR [rdx+0x8]
   140002604:	mov    DWORD PTR [rsp+0x2c],r8d
   140002609:	mov    r8d,DWORD PTR [r11+0xc]
   14000260d:	mov    QWORD PTR [rsp+0x20],rax
   140002612:	mov    rax,QWORD PTR [rdx]
   140002615:	movzx  edx,BYTE PTR [rdx+0xa]
   140002619:	mov    BYTE PTR [rsp+0x28],r9b
   14000261e:	movzx  r9d,BYTE PTR [rsp+0x70]
   140002624:	mov    BYTE PTR [rsp+0x4a],dl
   140002628:	mov    DWORD PTR [rsp+0x4c],r8d
   14000262d:	mov    BYTE PTR [rsp+0x48],cl
   140002631:	lea    rdx,[rsp+0x40]
   140002636:	lea    r8,[rsp+0x20]
   14000263b:	mov    rcx,rbx
   14000263e:	mov    BYTE PTR [rsp+0x2a],r10b
   140002643:	mov    BYTE PTR [rsp+0x30],0x0
   140002648:	mov    QWORD PTR [rsp+0x40],rax
   14000264d:	mov    BYTE PTR [rsp+0x50],0x0
   140002652:	call   0x140003fe0
   140002657:	mov    rax,rbx
   14000265a:	add    rsp,0x60
   14000265e:	pop    rbx
   14000265f:	ret    
   140002660:	rex push rbx
   140002662:	sub    rsp,0x20
   140002666:	cmp    QWORD PTR [rdx+0x18],0x10
   14000266b:	mov    rbx,rcx
   14000266e:	jb     0x140002675
   140002670:	mov    rax,QWORD PTR [rdx]
   140002673:	jmp    0x140002678
   140002675:	mov    rax,rdx
   140002678:	mov    QWORD PTR [rcx],rax
   14000267b:	cmp    QWORD PTR [rdx+0x18],0x10
   140002680:	jb     0x140002687
   140002682:	mov    rcx,QWORD PTR [rdx]
   140002685:	jmp    0x14000268a
   140002687:	mov    rcx,rdx
   14000268a:	add    rcx,QWORD PTR [rdx+0x10]
   14000268e:	mov    rdx,r8
   140002691:	mov    QWORD PTR [rbx+0x8],rcx
   140002695:	lea    rcx,[rbx+0x10]
   140002699:	call   0x1400117a0
   14000269e:	mov    rax,rbx
   1400026a1:	add    rsp,0x20
   1400026a5:	pop    rbx
   1400026a6:	ret    
   1400026a7:	int3   
   1400026a8:	int3   
   1400026a9:	int3   
   1400026aa:	int3   
   1400026ab:	int3   
   1400026ac:	int3   
   1400026ad:	int3   
   1400026ae:	int3   
   1400026af:	int3   
   1400026b0:	rex push rdi
   1400026b2:	sub    rsp,0x30
   1400026b6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400026bf:	mov    QWORD PTR [rsp+0x48],rbx
   1400026c4:	mov    QWORD PTR [rsp+0x50],rsi
   1400026c9:	mov    rsi,rdx
   1400026cc:	mov    rdi,rcx
   1400026cf:	mov    ecx,0x28
   1400026d4:	call   0x14003027c
   1400026d9:	mov    rbx,rax
   1400026dc:	mov    QWORD PTR [rsp+0x40],rax
   1400026e1:	test   rax,rax
   1400026e4:	je     0x140002719
   1400026e6:	lea    rax,[rip+0x3d27b]        # 0x14003f968
   1400026ed:	mov    QWORD PTR [rbx],rax
   1400026f0:	lea    rcx,[rbx+0x8]
   1400026f4:	mov    QWORD PTR [rcx+0x18],0xf
   1400026fc:	mov    QWORD PTR [rcx+0x10],0x0
   140002704:	mov    BYTE PTR [rcx],0x0
   140002707:	or     r9,0xffffffffffffffff
   14000270b:	xor    r8d,r8d
   14000270e:	mov    rdx,rsi
   140002711:	call   0x14001ef20
   140002716:	nop
   140002717:	jmp    0x14000271b
   140002719:	xor    ebx,ebx
   14000271b:	mov    QWORD PTR [rdi],rbx
   14000271e:	mov    rax,rdi
   140002721:	mov    rbx,QWORD PTR [rsp+0x48]
   140002726:	mov    rsi,QWORD PTR [rsp+0x50]
   14000272b:	add    rsp,0x30
   14000272f:	pop    rdi
   140002730:	ret    
   140002731:	int3   
   140002732:	int3   
   140002733:	int3   
   140002734:	int3   
   140002735:	int3   
   140002736:	int3   
   140002737:	int3   
   140002738:	int3   
   140002739:	int3   
   14000273a:	int3   
   14000273b:	int3   
   14000273c:	int3   
   14000273d:	int3   
   14000273e:	int3   
   14000273f:	int3   
   140002740:	mov    QWORD PTR [rsp+0x8],rcx
   140002745:	push   rdi
   140002746:	sub    rsp,0x30
   14000274a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002753:	mov    QWORD PTR [rsp+0x48],rbx
   140002758:	mov    rbx,rdx
   14000275b:	mov    rdi,rcx
   14000275e:	mov    QWORD PTR [rcx+0x18],0x7
   140002766:	xor    eax,eax
   140002768:	mov    QWORD PTR [rcx+0x10],rax
   14000276c:	mov    WORD PTR [rcx],ax
   14000276f:	call   QWORD PTR [rip+0x33dbb]        # 0x140036530
   140002775:	mov    r8,QWORD PTR [rbx+0x10]
   140002779:	test   r8,r8
   14000277c:	je     0x1400027ac
   14000277e:	mov    rcx,QWORD PTR [rbx+0x18]
   140002782:	cmp    rcx,0x10
   140002786:	jb     0x14000278d
   140002788:	mov    rdx,QWORD PTR [rbx]
   14000278b:	jmp    0x140002790
   14000278d:	mov    rdx,rbx
   140002790:	cmp    rcx,0x10
   140002794:	jb     0x140002799
   140002796:	mov    rbx,QWORD PTR [rbx]
   140002799:	add    rdx,r8
   14000279c:	mov    r9,rax
   14000279f:	mov    r8,rdi
   1400027a2:	mov    rcx,rbx
   1400027a5:	call   QWORD PTR [rip+0x33dd5]        # 0x140036580
   1400027ab:	nop
   1400027ac:	mov    rax,rdi
   1400027af:	mov    rbx,QWORD PTR [rsp+0x48]
   1400027b4:	add    rsp,0x30
   1400027b8:	pop    rdi
   1400027b9:	ret    
   1400027ba:	int3   
   1400027bb:	int3   
   1400027bc:	int3   
   1400027bd:	int3   
   1400027be:	int3   
   1400027bf:	int3   
   1400027c0:	mov    QWORD PTR [rsp+0x8],rcx
   1400027c5:	push   rdi
   1400027c6:	sub    rsp,0x30
   1400027ca:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400027d3:	mov    QWORD PTR [rsp+0x50],rbx
   1400027d8:	mov    rdi,r8
   1400027db:	mov    rbx,rcx
   1400027de:	cmp    QWORD PTR [rdx+0x18],0x10
   1400027e3:	jb     0x1400027e8
   1400027e5:	mov    rdx,QWORD PTR [rdx]
   1400027e8:	mov    QWORD PTR [rsp+0x48],rdx
   1400027ed:	lea    rdx,[rsp+0x48]
   1400027f2:	call   QWORD PTR [rip+0x33c58]        # 0x140036450
   1400027f8:	nop
   1400027f9:	lea    rax,[rip+0x38190]        # 0x14003a990
   140002800:	mov    QWORD PTR [rbx],rax
   140002803:	lea    rcx,[rbx+0x18]
   140002807:	mov    rdx,rdi
   14000280a:	call   0x1400026b0
   14000280f:	nop
   140002810:	mov    rax,rbx
   140002813:	mov    rbx,QWORD PTR [rsp+0x50]
   140002818:	add    rsp,0x30
   14000281c:	pop    rdi
   14000281d:	ret    
   14000281e:	int3   
   14000281f:	int3   
   140002820:	mov    rax,QWORD PTR [rdx]
   140002823:	mov    QWORD PTR [rcx],rax
   140002826:	movzx  eax,BYTE PTR [r8]
   14000282a:	mov    BYTE PTR [rcx+0x8],al
   14000282d:	mov    rax,rcx
   140002830:	ret    
   140002831:	int3   
   140002832:	int3   
   140002833:	int3   
   140002834:	int3   
   140002835:	int3   
   140002836:	int3   
   140002837:	int3   
   140002838:	int3   
   140002839:	int3   
   14000283a:	int3   
   14000283b:	int3   
   14000283c:	int3   
   14000283d:	int3   
   14000283e:	int3   
   14000283f:	int3   
   140002840:	mov    QWORD PTR [rsp+0x8],rcx
   140002845:	push   rbx
   140002846:	sub    rsp,0x30
   14000284a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002853:	mov    rbx,rcx
   140002856:	mov    QWORD PTR [rcx],rdx
   140002859:	lea    r8,[rcx+0x8]
   14000285d:	mov    QWORD PTR [r8],0x0
   140002864:	call   0x14000dac0
   140002869:	nop
   14000286a:	mov    rax,rbx
   14000286d:	add    rsp,0x30
   140002871:	pop    rbx
   140002872:	ret    
   140002873:	int3   
   140002874:	int3   
   140002875:	int3   
   140002876:	int3   
   140002877:	int3   
   140002878:	int3   
   140002879:	int3   
   14000287a:	int3   
   14000287b:	int3   
   14000287c:	int3   
   14000287d:	int3   
   14000287e:	int3   
   14000287f:	int3   
   140002880:	mov    QWORD PTR [rsp+0x10],rdx
   140002885:	push   rdi
   140002886:	sub    rsp,0x30
   14000288a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002893:	mov    QWORD PTR [rsp+0x40],rbx
   140002898:	mov    rdi,rdx
   14000289b:	mov    rbx,rcx
   14000289e:	mov    QWORD PTR [rcx],0x0
   1400028a5:	mov    ecx,0x18
   1400028aa:	call   0x14003027c
   1400028af:	test   rax,rax
   1400028b2:	je     0x1400028d0
   1400028b4:	mov    DWORD PTR [rax+0x8],0x1
   1400028bb:	mov    DWORD PTR [rax+0xc],0x1
   1400028c2:	lea    rcx,[rip+0x3be37]        # 0x14003e700
   1400028c9:	mov    QWORD PTR [rax],rcx
   1400028cc:	mov    QWORD PTR [rax+0x10],rdi
   1400028d0:	mov    QWORD PTR [rbx],rax
   1400028d3:	mov    rax,rbx
   1400028d6:	mov    rbx,QWORD PTR [rsp+0x40]
   1400028db:	add    rsp,0x30
   1400028df:	pop    rdi
   1400028e0:	ret    
   1400028e1:	int3   
   1400028e2:	int3   
   1400028e3:	int3   
   1400028e4:	int3   
   1400028e5:	int3   
   1400028e6:	int3   
   1400028e7:	int3   
   1400028e8:	int3   
   1400028e9:	int3   
   1400028ea:	int3   
   1400028eb:	int3   
   1400028ec:	int3   
   1400028ed:	int3   
   1400028ee:	int3   
   1400028ef:	int3   
   1400028f0:	rex push rdi
   1400028f2:	sub    rsp,0x30
   1400028f6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400028ff:	mov    QWORD PTR [rsp+0x48],rbx
   140002904:	mov    rdi,rdx
   140002907:	mov    rbx,rcx
   14000290a:	mov    ecx,0x38
   14000290f:	call   0x14003027c
   140002914:	mov    QWORD PTR [rsp+0x40],rax
   140002919:	test   rax,rax
   14000291c:	je     0x14000292a
   14000291e:	mov    rdx,rdi
   140002921:	mov    rcx,rax
   140002924:	call   0x140013fb0
   140002929:	nop
   14000292a:	mov    QWORD PTR [rbx],rax
   14000292d:	mov    rax,rbx
   140002930:	mov    rbx,QWORD PTR [rsp+0x48]
   140002935:	add    rsp,0x30
   140002939:	pop    rdi
   14000293a:	ret    
   14000293b:	int3   
   14000293c:	int3   
   14000293d:	int3   
   14000293e:	int3   
   14000293f:	int3   
   140002940:	mov    QWORD PTR [rsp+0x8],rcx
   140002945:	push   rdi
   140002946:	sub    rsp,0x50
   14000294a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002953:	mov    QWORD PTR [rsp+0x68],rbx
   140002958:	mov    QWORD PTR [rsp+0x70],rsi
   14000295d:	mov    rsi,r8
   140002960:	mov    rbx,rcx
   140002963:	lea    rcx,[rsp+0x28]
   140002968:	call   0x14000af10
   14000296d:	nop
   14000296e:	cmp    QWORD PTR [rax+0x18],0x10
   140002973:	jb     0x140002978
   140002975:	mov    rax,QWORD PTR [rax]
   140002978:	mov    QWORD PTR [rsp+0x78],rax
   14000297d:	lea    rdx,[rsp+0x78]
   140002982:	mov    rcx,rbx
   140002985:	call   QWORD PTR [rip+0x33ac5]        # 0x140036450
   14000298b:	lea    rax,[rip+0x37fe6]        # 0x14003a978
   140002992:	mov    QWORD PTR [rbx],rax
   140002995:	cmp    QWORD PTR [rsp+0x40],0x10
   14000299b:	jb     0x1400029a7
   14000299d:	mov    rcx,QWORD PTR [rsp+0x28]
   1400029a2:	call   0x140030282
   1400029a7:	mov    QWORD PTR [rsp+0x40],0xf
   1400029b0:	xor    edi,edi
   1400029b2:	mov    QWORD PTR [rsp+0x38],rdi
   1400029b7:	mov    BYTE PTR [rsp+0x28],dil
   1400029bc:	lea    rax,[rip+0x37fe5]        # 0x14003a9a8
   1400029c3:	mov    QWORD PTR [rbx],rax
   1400029c6:	lea    ecx,[rdi+0x38]
   1400029c9:	call   0x14003027c
   1400029ce:	mov    QWORD PTR [rsp+0x78],rax
   1400029d3:	test   rax,rax
   1400029d6:	je     0x1400029e6
   1400029d8:	mov    rdx,rsi
   1400029db:	mov    rcx,rax
   1400029de:	call   0x140013fb0
   1400029e3:	mov    rdi,rax
   1400029e6:	mov    QWORD PTR [rbx+0x18],rdi
   1400029ea:	mov    rax,rbx
   1400029ed:	mov    rbx,QWORD PTR [rsp+0x68]
   1400029f2:	mov    rsi,QWORD PTR [rsp+0x70]
   1400029f7:	add    rsp,0x50
   1400029fb:	pop    rdi
   1400029fc:	ret    
   1400029fd:	int3   
   1400029fe:	int3   
   1400029ff:	int3   
   140002a00:	rex push rbx
   140002a02:	sub    rsp,0x60
   140002a06:	movzx  r9d,BYTE PTR [rsp+0x70]
   140002a0c:	mov    QWORD PTR [rcx+0x18],0xf
   140002a14:	mov    QWORD PTR [rcx+0x10],0x0
   140002a1c:	mov    BYTE PTR [rcx],0x0
   140002a1f:	mov    rax,QWORD PTR [r8]
   140002a22:	mov    rbx,rcx
   140002a25:	mov    QWORD PTR [rsp+0x20],rax
   140002a2a:	movzx  eax,BYTE PTR [r8+0x10]
   140002a2f:	mov    BYTE PTR [rsp+0x38],0x0
   140002a34:	mov    BYTE PTR [rsp+0x30],al
   140002a38:	movzx  eax,BYTE PTR [r8+0x12]
   140002a3d:	mov    BYTE PTR [rsp+0x58],0x0
   140002a42:	mov    BYTE PTR [rsp+0x32],al
   140002a46:	mov    eax,DWORD PTR [r8+0x14]
   140002a4a:	lea    r8,[rsp+0x20]
   140002a4f:	mov    DWORD PTR [rsp+0x34],eax
   140002a53:	mov    rax,QWORD PTR [rdx]
   140002a56:	mov    QWORD PTR [rsp+0x40],rax
   140002a5b:	movzx  eax,BYTE PTR [rdx+0x10]
   140002a5f:	mov    BYTE PTR [rsp+0x50],al
   140002a63:	movzx  eax,BYTE PTR [rdx+0x12]
   140002a67:	mov    BYTE PTR [rsp+0x52],al
   140002a6b:	mov    eax,DWORD PTR [rdx+0x14]
   140002a6e:	lea    rdx,[rsp+0x40]
   140002a73:	mov    DWORD PTR [rsp+0x54],eax
   140002a77:	call   0x1400041b0
   140002a7c:	mov    rax,rbx
   140002a7f:	add    rsp,0x60
   140002a83:	pop    rbx
   140002a84:	ret    
   140002a85:	int3   
   140002a86:	int3   
   140002a87:	int3   
   140002a88:	int3   
   140002a89:	int3   
   140002a8a:	int3   
   140002a8b:	int3   
   140002a8c:	int3   
   140002a8d:	int3   
   140002a8e:	int3   
   140002a8f:	int3   
   140002a90:	mov    QWORD PTR [rsp+0x8],rcx
   140002a95:	push   rdi
   140002a96:	sub    rsp,0x30
   140002a9a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002aa3:	mov    QWORD PTR [rsp+0x50],rbx
   140002aa8:	mov    rdi,r8
   140002aab:	mov    rbx,rcx
   140002aae:	cmp    QWORD PTR [rdx+0x18],0x10
   140002ab3:	jb     0x140002ab8
   140002ab5:	mov    rdx,QWORD PTR [rdx]
   140002ab8:	mov    QWORD PTR [rsp+0x48],rdx
   140002abd:	lea    rdx,[rsp+0x48]
   140002ac2:	call   QWORD PTR [rip+0x33988]        # 0x140036450
   140002ac8:	nop
   140002ac9:	lea    rax,[rip+0x37ec0]        # 0x14003a990
   140002ad0:	mov    QWORD PTR [rbx],rax
   140002ad3:	mov    rcx,QWORD PTR [rdi]
   140002ad6:	test   rcx,rcx
   140002ad9:	je     0x140002ae3
   140002adb:	mov    rax,QWORD PTR [rcx]
   140002ade:	call   QWORD PTR [rax+0x10]
   140002ae1:	jmp    0x140002ae5
   140002ae3:	xor    eax,eax
   140002ae5:	mov    QWORD PTR [rbx+0x18],rax
   140002ae9:	mov    rax,rbx
   140002aec:	mov    rbx,QWORD PTR [rsp+0x50]
   140002af1:	add    rsp,0x30
   140002af5:	pop    rdi
   140002af6:	ret    
   140002af7:	int3   
   140002af8:	int3   
   140002af9:	int3   
   140002afa:	int3   
   140002afb:	int3   
   140002afc:	int3   
   140002afd:	int3   
   140002afe:	int3   
   140002aff:	int3   
   140002b00:	rex push rbx
   140002b02:	sub    rsp,0x50
   140002b06:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002b0f:	mov    rax,rdx
   140002b12:	mov    rbx,rcx
   140002b15:	lea    rdx,[rsp+0x28]
   140002b1a:	mov    rcx,rax
   140002b1d:	call   0x14000db40
   140002b22:	nop
   140002b23:	mov    r9b,0x22
   140002b26:	mov    r8b,0x26
   140002b29:	mov    rdx,rax
   140002b2c:	mov    rcx,rbx
   140002b2f:	call   0x140006530
   140002b34:	mov    rbx,rax
   140002b37:	cmp    QWORD PTR [rsp+0x40],0x10
   140002b3d:	jb     0x140002b4c
   140002b3f:	mov    rcx,QWORD PTR [rsp+0x28]
   140002b44:	call   0x140030282
   140002b49:	mov    rax,rbx
   140002b4c:	add    rsp,0x50
   140002b50:	pop    rbx
   140002b51:	ret    
   140002b52:	int3   
   140002b53:	int3   
   140002b54:	int3   
   140002b55:	int3   
   140002b56:	int3   
   140002b57:	int3   
   140002b58:	int3   
   140002b59:	int3   
   140002b5a:	int3   
   140002b5b:	int3   
   140002b5c:	int3   
   140002b5d:	int3   
   140002b5e:	int3   
   140002b5f:	int3   
   140002b60:	mov    rax,QWORD PTR [rcx]
   140002b63:	movsxd r8,DWORD PTR [rax+0x4]
   140002b67:	movzx  eax,BYTE PTR [rdx]
   140002b6a:	mov    BYTE PTR [r8+rcx*1+0x58],al
   140002b6f:	mov    rax,rcx
   140002b72:	ret    
   140002b73:	int3   
   140002b74:	int3   
   140002b75:	int3   
   140002b76:	int3   
   140002b77:	int3   
   140002b78:	int3   
   140002b79:	int3   
   140002b7a:	int3   
   140002b7b:	int3   
   140002b7c:	int3   
   140002b7d:	int3   
   140002b7e:	int3   
   140002b7f:	int3   
   140002b80:	movzx  r9d,BYTE PTR [rdx+0x9]
   140002b85:	movzx  r8d,BYTE PTR [rdx+0x8]
   140002b8a:	mov    rdx,QWORD PTR [rdx]
   140002b8d:	jmp    0x140006530
   140002b92:	int3   
   140002b93:	int3   
   140002b94:	int3   
   140002b95:	int3   
   140002b96:	int3   
   140002b97:	int3   
   140002b98:	int3   
   140002b99:	int3   
   140002b9a:	int3   
   140002b9b:	int3   
   140002b9c:	int3   
   140002b9d:	int3   
   140002b9e:	int3   
   140002b9f:	int3   
   140002ba0:	mov    QWORD PTR [rsp+0x8],rcx
   140002ba5:	push   rsi
   140002ba6:	push   rdi
   140002ba7:	push   r12
   140002ba9:	push   r14
   140002bab:	push   r15
   140002bad:	sub    rsp,0x40
   140002bb1:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002bba:	mov    QWORD PTR [rsp+0x80],rbx
   140002bc2:	mov    r15,rdx
   140002bc5:	mov    rsi,rcx
   140002bc8:	xor    ebx,ebx
   140002bca:	mov    DWORD PTR [rsp+0x78],ebx
   140002bce:	mov    r12,QWORD PTR [rdx+0x10]
   140002bd2:	mov    rax,QWORD PTR [rcx]
   140002bd5:	movsxd r8,DWORD PTR [rax+0x4]
   140002bd9:	mov    rdi,QWORD PTR [r8+rcx*1+0x28]
   140002bde:	test   rdi,rdi
   140002be1:	jle    0x140002bed
   140002be3:	cmp    rdi,r12
   140002be6:	jbe    0x140002bed
   140002be8:	sub    rdi,r12
   140002beb:	jmp    0x140002bef
   140002bed:	xor    edi,edi
   140002bef:	mov    r14,rcx
   140002bf2:	mov    QWORD PTR [rsp+0x28],rcx
   140002bf7:	mov    rcx,QWORD PTR [r8+rcx*1+0x48]
   140002bfc:	test   rcx,rcx
   140002bff:	je     0x140002c08
   140002c01:	mov    rax,QWORD PTR [rcx]
   140002c04:	call   QWORD PTR [rax+0x8]
   140002c07:	nop
   140002c08:	mov    rax,QWORD PTR [rsi]
   140002c0b:	movsxd rcx,DWORD PTR [rax+0x4]
   140002c0f:	cmp    DWORD PTR [rcx+rsi*1+0x10],0x0
   140002c14:	jne    0x140002c2b
   140002c16:	mov    rcx,QWORD PTR [rcx+rsi*1+0x50]
   140002c1b:	test   rcx,rcx
   140002c1e:	je     0x140002c2b
   140002c20:	cmp    rcx,rsi
   140002c23:	je     0x140002c2b
   140002c25:	call   QWORD PTR [rip+0x33505]        # 0x140036130
   140002c2b:	mov    rax,QWORD PTR [rsi]
   140002c2e:	movsxd rcx,DWORD PTR [rax+0x4]
   140002c32:	cmp    DWORD PTR [rcx+rsi*1+0x10],0x0
   140002c37:	sete   al
   140002c3a:	mov    BYTE PTR [rsp+0x30],al
   140002c3e:	test   al,al
   140002c40:	jne    0x140002c4c
   140002c42:	mov    ebx,0x4
   140002c47:	jmp    0x140002d10
   140002c4c:	mov    eax,DWORD PTR [rcx+rsi*1+0x18]
   140002c50:	and    eax,0x1c0
   140002c55:	cmp    eax,0x40
   140002c58:	je     0x140002c93
   140002c5a:	nop    WORD PTR [rax+rax*1+0x0]
   140002c60:	test   rdi,rdi
   140002c63:	je     0x140002c8f
   140002c65:	mov    rax,QWORD PTR [rsi]
   140002c68:	movsxd rcx,DWORD PTR [rax+0x4]
   140002c6c:	movzx  edx,BYTE PTR [rcx+rsi*1+0x58]
   140002c71:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   140002c76:	call   QWORD PTR [rip+0x3354c]        # 0x1400361c8
   140002c7c:	cmp    eax,0xffffffff
   140002c7f:	jne    0x140002c8a
   140002c81:	or     ebx,0x4
   140002c84:	mov    DWORD PTR [rsp+0x78],ebx
   140002c88:	jmp    0x140002c8f
   140002c8a:	dec    rdi
   140002c8d:	jmp    0x140002c60
   140002c8f:	test   ebx,ebx
   140002c91:	jne    0x140002cc1
   140002c93:	cmp    QWORD PTR [r15+0x18],0x10
   140002c98:	jb     0x140002c9d
   140002c9a:	mov    r15,QWORD PTR [r15]
   140002c9d:	mov    rax,QWORD PTR [rsi]
   140002ca0:	movsxd rcx,DWORD PTR [rax+0x4]
   140002ca4:	mov    r8,r12
   140002ca7:	mov    rdx,r15
   140002caa:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   140002caf:	call   QWORD PTR [rip+0x3350b]        # 0x1400361c0
   140002cb5:	cmp    rax,r12
   140002cb8:	je     0x140002cc1
   140002cba:	mov    ebx,0x4
   140002cbf:	jmp    0x140002cec
   140002cc1:	test   rdi,rdi
   140002cc4:	je     0x140002cf0
   140002cc6:	mov    rax,QWORD PTR [rsi]
   140002cc9:	movsxd rcx,DWORD PTR [rax+0x4]
   140002ccd:	movzx  edx,BYTE PTR [rcx+rsi*1+0x58]
   140002cd2:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   140002cd7:	call   QWORD PTR [rip+0x334eb]        # 0x1400361c8
   140002cdd:	cmp    eax,0xffffffff
   140002ce0:	jne    0x140002ce7
   140002ce2:	or     ebx,0x4
   140002ce5:	jmp    0x140002cec
   140002ce7:	dec    rdi
   140002cea:	jmp    0x140002cc1
   140002cec:	mov    DWORD PTR [rsp+0x78],ebx
   140002cf0:	mov    rax,QWORD PTR [rsi]
   140002cf3:	movsxd rcx,DWORD PTR [rax+0x4]
   140002cf7:	mov    QWORD PTR [rcx+rsi*1+0x28],0x0
   140002d00:	jmp    0x140002d10
   140002d02:	mov    rsi,QWORD PTR [rsp+0x70]
   140002d07:	mov    ebx,DWORD PTR [rsp+0x78]
   140002d0b:	mov    r14,QWORD PTR [rsp+0x28]
   140002d10:	mov    rax,QWORD PTR [rsi]
   140002d13:	movsxd rcx,DWORD PTR [rax+0x4]
   140002d17:	add    rcx,rsi
   140002d1a:	xor    r8d,r8d
   140002d1d:	mov    edx,ebx
   140002d1f:	call   QWORD PTR [rip+0x33473]        # 0x140036198
   140002d25:	nop
   140002d26:	call   QWORD PTR [rip+0x334e4]        # 0x140036210
   140002d2c:	test   al,al
   140002d2e:	jne    0x140002d39
   140002d30:	mov    rcx,r14
   140002d33:	call   QWORD PTR [rip+0x3342f]        # 0x140036168
   140002d39:	mov    rax,QWORD PTR [r14]
   140002d3c:	movsxd rcx,DWORD PTR [rax+0x4]
   140002d40:	mov    rcx,QWORD PTR [rcx+r14*1+0x48]
   140002d45:	test   rcx,rcx
   140002d48:	je     0x140002d50
   140002d4a:	mov    rax,QWORD PTR [rcx]
   140002d4d:	call   QWORD PTR [rax+0x10]
   140002d50:	mov    rax,rsi
   140002d53:	mov    rbx,QWORD PTR [rsp+0x80]
   140002d5b:	add    rsp,0x40
   140002d5f:	pop    r15
   140002d61:	pop    r14
   140002d63:	pop    r12
   140002d65:	pop    rdi
   140002d66:	pop    rsi
   140002d67:	ret    
   140002d68:	int3   
   140002d69:	int3   
   140002d6a:	int3   
   140002d6b:	int3   
   140002d6c:	int3   
   140002d6d:	int3   
   140002d6e:	int3   
   140002d6f:	int3   
   140002d70:	rex push rbx
   140002d72:	sub    rsp,0x20
   140002d76:	mov    r8,rdx
   140002d79:	mov    rbx,rcx
   140002d7c:	test   rcx,rcx
   140002d7f:	jne    0x140002d91
   140002d81:	mov    rdx,QWORD PTR [rdx+0x8]
   140002d85:	call   QWORD PTR [r8]
   140002d88:	mov    rax,rbx
   140002d8b:	add    rsp,0x20
   140002d8f:	pop    rbx
   140002d90:	ret    
   140002d91:	mov    rax,QWORD PTR [rcx]
   140002d94:	mov    rdx,QWORD PTR [rdx+0x8]
   140002d98:	movsxd rcx,DWORD PTR [rax+0x4]
   140002d9c:	add    rcx,rbx
   140002d9f:	call   QWORD PTR [r8]
   140002da2:	mov    rax,rbx
   140002da5:	add    rsp,0x20
   140002da9:	pop    rbx
   140002daa:	ret    
   140002dab:	int3   
   140002dac:	int3   
   140002dad:	int3   
   140002dae:	int3   
   140002daf:	int3   
   140002db0:	mov    QWORD PTR [rsp+0x8],rcx
   140002db5:	push   rsi
   140002db6:	push   rdi
   140002db7:	push   r12
   140002db9:	push   r14
   140002dbb:	push   r15
   140002dbd:	sub    rsp,0x40
   140002dc1:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002dca:	mov    QWORD PTR [rsp+0x78],rbx
   140002dcf:	movzx  r12d,dl
   140002dd3:	mov    rsi,rcx
   140002dd6:	xor    ebx,ebx
   140002dd8:	mov    DWORD PTR [rsp+0x80],ebx
   140002ddf:	mov    r15,rcx
   140002de2:	mov    QWORD PTR [rsp+0x28],rcx
   140002de7:	mov    rax,QWORD PTR [rcx]
   140002dea:	movsxd r8,DWORD PTR [rax+0x4]
   140002dee:	mov    rcx,QWORD PTR [r8+rcx*1+0x48]
   140002df3:	test   rcx,rcx
   140002df6:	je     0x140002dff
   140002df8:	mov    rax,QWORD PTR [rcx]
   140002dfb:	call   QWORD PTR [rax+0x8]
   140002dfe:	nop
   140002dff:	mov    rax,QWORD PTR [rsi]
   140002e02:	movsxd rcx,DWORD PTR [rax+0x4]
   140002e06:	cmp    DWORD PTR [rcx+rsi*1+0x10],0x0
   140002e0b:	jne    0x140002e22
   140002e0d:	mov    rcx,QWORD PTR [rcx+rsi*1+0x50]
   140002e12:	test   rcx,rcx
   140002e15:	je     0x140002e22
   140002e17:	cmp    rcx,rsi
   140002e1a:	je     0x140002e22
   140002e1c:	call   QWORD PTR [rip+0x3330e]        # 0x140036130
   140002e22:	mov    rax,QWORD PTR [rsi]
   140002e25:	movsxd rcx,DWORD PTR [rax+0x4]
   140002e29:	cmp    DWORD PTR [rcx+rsi*1+0x10],0x0
   140002e2e:	sete   al
   140002e31:	mov    BYTE PTR [rsp+0x30],al
   140002e35:	test   al,al
   140002e37:	je     0x140002efd
   140002e3d:	mov    rdi,QWORD PTR [rcx+rsi*1+0x28]
   140002e42:	cmp    rdi,0x1
   140002e46:	jg     0x140002e4c
   140002e48:	xor    edi,edi
   140002e4a:	jmp    0x140002e4f
   140002e4c:	dec    rdi
   140002e4f:	mov    eax,DWORD PTR [rcx+rsi*1+0x18]
   140002e53:	and    eax,0x1c0
   140002e58:	mov    r14d,0x4
   140002e5e:	cmp    eax,0x40
   140002e61:	je     0x140002e9a
   140002e63:	test   ebx,ebx
   140002e65:	jne    0x140002eea
   140002e6b:	test   rdi,rdi
   140002e6e:	jle    0x140002e9a
   140002e70:	mov    rax,QWORD PTR [rsi]
   140002e73:	movsxd rcx,DWORD PTR [rax+0x4]
   140002e77:	movzx  edx,BYTE PTR [rcx+rsi*1+0x58]
   140002e7c:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   140002e81:	call   QWORD PTR [rip+0x33341]        # 0x1400361c8
   140002e87:	cmp    eax,0xffffffff
   140002e8a:	cmove  ebx,r14d
   140002e8e:	mov    DWORD PTR [rsp+0x80],ebx
   140002e95:	dec    rdi
   140002e98:	jmp    0x140002e63
   140002e9a:	mov    rax,QWORD PTR [rsi]
   140002e9d:	movsxd rcx,DWORD PTR [rax+0x4]
   140002ea1:	movzx  edx,r12b
   140002ea5:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   140002eaa:	call   QWORD PTR [rip+0x33318]        # 0x1400361c8
   140002eb0:	cmp    eax,0xffffffff
   140002eb3:	cmove  ebx,r14d
   140002eb7:	mov    DWORD PTR [rsp+0x80],ebx
   140002ebe:	test   ebx,ebx
   140002ec0:	jne    0x140002eea
   140002ec2:	test   rdi,rdi
   140002ec5:	jle    0x140002eea
   140002ec7:	mov    rax,QWORD PTR [rsi]
   140002eca:	movsxd rcx,DWORD PTR [rax+0x4]
   140002ece:	movzx  edx,BYTE PTR [rcx+rsi*1+0x58]
   140002ed3:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   140002ed8:	call   QWORD PTR [rip+0x332ea]        # 0x1400361c8
   140002ede:	cmp    eax,0xffffffff
   140002ee1:	cmove  ebx,r14d
   140002ee5:	dec    rdi
   140002ee8:	jmp    0x140002eb7
   140002eea:	jmp    0x140002efd
   140002eec:	mov    rsi,QWORD PTR [rsp+0x70]
   140002ef1:	mov    ebx,DWORD PTR [rsp+0x80]
   140002ef8:	mov    r15,QWORD PTR [rsp+0x28]
   140002efd:	mov    rax,QWORD PTR [rsi]
   140002f00:	movsxd rcx,DWORD PTR [rax+0x4]
   140002f04:	mov    QWORD PTR [rcx+rsi*1+0x28],0x0
   140002f0d:	mov    rax,QWORD PTR [rsi]
   140002f10:	movsxd rcx,DWORD PTR [rax+0x4]
   140002f14:	add    rcx,rsi
   140002f17:	xor    r8d,r8d
   140002f1a:	mov    edx,ebx
   140002f1c:	call   QWORD PTR [rip+0x33276]        # 0x140036198
   140002f22:	nop
   140002f23:	call   QWORD PTR [rip+0x332e7]        # 0x140036210
   140002f29:	test   al,al
   140002f2b:	jne    0x140002f36
   140002f2d:	mov    rcx,r15
   140002f30:	call   QWORD PTR [rip+0x33232]        # 0x140036168
   140002f36:	mov    rax,QWORD PTR [r15]
   140002f39:	movsxd rcx,DWORD PTR [rax+0x4]
   140002f3d:	mov    rcx,QWORD PTR [rcx+r15*1+0x48]
   140002f42:	test   rcx,rcx
   140002f45:	je     0x140002f4d
   140002f47:	mov    rax,QWORD PTR [rcx]
   140002f4a:	call   QWORD PTR [rax+0x10]
   140002f4d:	mov    rax,rsi
   140002f50:	mov    rbx,QWORD PTR [rsp+0x78]
   140002f55:	add    rsp,0x40
   140002f59:	pop    r15
   140002f5b:	pop    r14
   140002f5d:	pop    r12
   140002f5f:	pop    rdi
   140002f60:	pop    rsi
   140002f61:	ret    
   140002f62:	int3   
   140002f63:	int3   
   140002f64:	int3   
   140002f65:	int3   
   140002f66:	int3   
   140002f67:	int3   
   140002f68:	int3   
   140002f69:	int3   
   140002f6a:	int3   
   140002f6b:	int3   
   140002f6c:	int3   
   140002f6d:	int3   
   140002f6e:	int3   
   140002f6f:	int3   
   140002f70:	mov    QWORD PTR [rsp+0x8],rcx
   140002f75:	push   rsi
   140002f76:	push   rdi
   140002f77:	push   r12
   140002f79:	push   r14
   140002f7b:	push   r15
   140002f7d:	sub    rsp,0x40
   140002f81:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002f8a:	mov    QWORD PTR [rsp+0x80],rbx
   140002f92:	mov    r15,rdx
   140002f95:	mov    rsi,rcx
   140002f98:	xor    ebx,ebx
   140002f9a:	mov    DWORD PTR [rsp+0x78],ebx
   140002f9e:	cmp    BYTE PTR [rdx],bl
   140002fa0:	jne    0x140002fa7
   140002fa2:	xor    r14d,r14d
   140002fa5:	jmp    0x140002fb9
   140002fa7:	or     r14,0xffffffffffffffff
   140002fab:	nop    DWORD PTR [rax+rax*1+0x0]
   140002fb0:	inc    r14
   140002fb3:	cmp    BYTE PTR [rdx+r14*1],bl
   140002fb7:	jne    0x140002fb0
   140002fb9:	mov    rax,QWORD PTR [rcx]
   140002fbc:	movsxd rcx,DWORD PTR [rax+0x4]
   140002fc0:	mov    rdi,QWORD PTR [rcx+rsi*1+0x28]
   140002fc5:	test   rdi,rdi
   140002fc8:	jle    0x140002fd4
   140002fca:	cmp    rdi,r14
   140002fcd:	jle    0x140002fd4
   140002fcf:	sub    rdi,r14
   140002fd2:	jmp    0x140002fd6
   140002fd4:	xor    edi,edi
   140002fd6:	mov    r12,rsi
   140002fd9:	mov    QWORD PTR [rsp+0x28],rsi
   140002fde:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   140002fe3:	test   rcx,rcx
   140002fe6:	je     0x140002fef
   140002fe8:	mov    rax,QWORD PTR [rcx]
   140002feb:	call   QWORD PTR [rax+0x8]
   140002fee:	nop
   140002fef:	mov    rax,QWORD PTR [rsi]
   140002ff2:	movsxd rcx,DWORD PTR [rax+0x4]
   140002ff6:	cmp    DWORD PTR [rcx+rsi*1+0x10],0x0
   140002ffb:	jne    0x140003012
   140002ffd:	mov    rcx,QWORD PTR [rcx+rsi*1+0x50]
   140003002:	test   rcx,rcx
   140003005:	je     0x140003012
   140003007:	cmp    rcx,rsi
   14000300a:	je     0x140003012
   14000300c:	call   QWORD PTR [rip+0x3311e]        # 0x140036130
   140003012:	mov    rax,QWORD PTR [rsi]
   140003015:	movsxd rcx,DWORD PTR [rax+0x4]
   140003019:	cmp    DWORD PTR [rcx+rsi*1+0x10],0x0
   14000301e:	sete   al
   140003021:	mov    BYTE PTR [rsp+0x30],al
   140003025:	test   al,al
   140003027:	jne    0x140003033
   140003029:	mov    ebx,0x4
   14000302e:	jmp    0x1400030e7
   140003033:	mov    eax,DWORD PTR [rcx+rsi*1+0x18]
   140003037:	and    eax,0x1c0
   14000303c:	cmp    eax,0x40
   14000303f:	je     0x140003074
   140003041:	test   rdi,rdi
   140003044:	jle    0x140003070
   140003046:	mov    rax,QWORD PTR [rsi]
   140003049:	movsxd rcx,DWORD PTR [rax+0x4]
   14000304d:	movzx  edx,BYTE PTR [rcx+rsi*1+0x58]
   140003052:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   140003057:	call   QWORD PTR [rip+0x3316b]        # 0x1400361c8
   14000305d:	cmp    eax,0xffffffff
   140003060:	jne    0x14000306b
   140003062:	or     ebx,0x4
   140003065:	mov    DWORD PTR [rsp+0x78],ebx
   140003069:	jmp    0x140003070
   14000306b:	dec    rdi
   14000306e:	jmp    0x140003041
   140003070:	test   ebx,ebx
   140003072:	jne    0x1400030c7
   140003074:	mov    rax,QWORD PTR [rsi]
   140003077:	movsxd rcx,DWORD PTR [rax+0x4]
   14000307b:	mov    r8,r14
   14000307e:	mov    rdx,r15
   140003081:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   140003086:	call   QWORD PTR [rip+0x33134]        # 0x1400361c0
   14000308c:	cmp    rax,r14
   14000308f:	je     0x140003098
   140003091:	mov    ebx,0x4
   140003096:	jmp    0x1400030c3
   140003098:	test   rdi,rdi
   14000309b:	jle    0x1400030c7
   14000309d:	mov    rax,QWORD PTR [rsi]
   1400030a0:	movsxd rcx,DWORD PTR [rax+0x4]
   1400030a4:	movzx  edx,BYTE PTR [rcx+rsi*1+0x58]
   1400030a9:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   1400030ae:	call   QWORD PTR [rip+0x33114]        # 0x1400361c8
   1400030b4:	cmp    eax,0xffffffff
   1400030b7:	jne    0x1400030be
   1400030b9:	or     ebx,0x4
   1400030bc:	jmp    0x1400030c3
   1400030be:	dec    rdi
   1400030c1:	jmp    0x140003098
   1400030c3:	mov    DWORD PTR [rsp+0x78],ebx
   1400030c7:	mov    rax,QWORD PTR [rsi]
   1400030ca:	movsxd rcx,DWORD PTR [rax+0x4]
   1400030ce:	mov    QWORD PTR [rcx+rsi*1+0x28],0x0
   1400030d7:	jmp    0x1400030e7
   1400030d9:	mov    rsi,QWORD PTR [rsp+0x70]
   1400030de:	mov    ebx,DWORD PTR [rsp+0x78]
   1400030e2:	mov    r12,QWORD PTR [rsp+0x28]
   1400030e7:	mov    rax,QWORD PTR [rsi]
   1400030ea:	movsxd rcx,DWORD PTR [rax+0x4]
   1400030ee:	add    rcx,rsi
   1400030f1:	xor    r8d,r8d
   1400030f4:	mov    edx,ebx
   1400030f6:	call   QWORD PTR [rip+0x3309c]        # 0x140036198
   1400030fc:	nop
   1400030fd:	call   QWORD PTR [rip+0x3310d]        # 0x140036210
   140003103:	test   al,al
   140003105:	jne    0x140003110
   140003107:	mov    rcx,r12
   14000310a:	call   QWORD PTR [rip+0x33058]        # 0x140036168
   140003110:	mov    rax,QWORD PTR [r12]
   140003114:	movsxd rcx,DWORD PTR [rax+0x4]
   140003118:	mov    rcx,QWORD PTR [rcx+r12*1+0x48]
   14000311d:	test   rcx,rcx
   140003120:	je     0x140003128
   140003122:	mov    rax,QWORD PTR [rcx]
   140003125:	call   QWORD PTR [rax+0x10]
   140003128:	mov    rax,rsi
   14000312b:	mov    rbx,QWORD PTR [rsp+0x80]
   140003133:	add    rsp,0x40
   140003137:	pop    r15
   140003139:	pop    r14
   14000313b:	pop    r12
   14000313d:	pop    rdi
   14000313e:	pop    rsi
   14000313f:	ret    
   140003140:	cmp    QWORD PTR [rdx+0x18],0x10
   140003145:	mov    r9,rcx
   140003148:	jb     0x14000315f
   14000314a:	mov    r8,QWORD PTR [rdx]
   14000314d:	mov    al,0x1
   14000314f:	mov    QWORD PTR [rcx+0x8],r8
   140003153:	mov    rcx,QWORD PTR [rdx+0x10]
   140003157:	add    rcx,r8
   14000315a:	mov    QWORD PTR [r9+0x10],rcx
   14000315e:	ret    
   14000315f:	mov    QWORD PTR [rcx+0x8],rdx
   140003163:	mov    rcx,QWORD PTR [rdx+0x10]
   140003167:	mov    r8,rdx
   14000316a:	add    rcx,rdx
   14000316d:	mov    al,0x1
   14000316f:	mov    QWORD PTR [r9+0x10],rcx
   140003173:	ret    
   140003174:	int3   
   140003175:	int3   
   140003176:	int3   
   140003177:	int3   
   140003178:	int3   
   140003179:	int3   
   14000317a:	int3   
   14000317b:	int3   
   14000317c:	int3   
   14000317d:	int3   
   14000317e:	int3   
   14000317f:	int3   
   140003180:	mov    al,0x1
   140003182:	ret    
   140003183:	int3   
   140003184:	int3   
   140003185:	int3   
   140003186:	int3   
   140003187:	int3   
   140003188:	int3   
   140003189:	int3   
   14000318a:	int3   
   14000318b:	int3   
   14000318c:	int3   
   14000318d:	int3   
   14000318e:	int3   
   14000318f:	int3   
   140003190:	sub    rsp,0x28
   140003194:	call   0x140020910
   140003199:	test   eax,eax
   14000319b:	sete   al
   14000319e:	add    rsp,0x28
   1400031a2:	ret    
   1400031a3:	int3   
   1400031a4:	int3   
   1400031a5:	int3   
   1400031a6:	int3   
   1400031a7:	int3   
   1400031a8:	int3   
   1400031a9:	int3   
   1400031aa:	int3   
   1400031ab:	int3   
   1400031ac:	int3   
   1400031ad:	int3   
   1400031ae:	int3   
   1400031af:	int3   
   1400031b0:	mov    rdx,QWORD PTR [rdx]
   1400031b3:	cmp    QWORD PTR [rcx],rdx
   1400031b6:	sete   al
   1400031b9:	ret    
   1400031ba:	int3   
   1400031bb:	int3   
   1400031bc:	int3   
   1400031bd:	int3   
   1400031be:	int3   
   1400031bf:	int3   
   1400031c0:	mov    rdx,QWORD PTR [rdx]
   1400031c3:	cmp    QWORD PTR [rcx],rdx
   1400031c6:	sete   al
   1400031c9:	ret    
   1400031ca:	int3   
   1400031cb:	int3   
   1400031cc:	int3   
   1400031cd:	int3   
   1400031ce:	int3   
   1400031cf:	int3   
   1400031d0:	mov    rdx,QWORD PTR [rdx]
   1400031d3:	cmp    QWORD PTR [rcx],rdx
   1400031d6:	sete   al
   1400031d9:	ret    
   1400031da:	int3   
   1400031db:	int3   
   1400031dc:	int3   
   1400031dd:	int3   
   1400031de:	int3   
   1400031df:	int3   
   1400031e0:	mov    rdx,QWORD PTR [rdx]
   1400031e3:	cmp    QWORD PTR [rcx],rdx
   1400031e6:	sete   al
   1400031e9:	ret    
   1400031ea:	int3   
   1400031eb:	int3   
   1400031ec:	int3   
   1400031ed:	int3   
   1400031ee:	int3   
   1400031ef:	int3   
   1400031f0:	mov    al,0x1
   1400031f2:	ret    
   1400031f3:	int3   
   1400031f4:	int3   
   1400031f5:	int3   
   1400031f6:	int3   
   1400031f7:	int3   
   1400031f8:	int3   
   1400031f9:	int3   
   1400031fa:	int3   
   1400031fb:	int3   
   1400031fc:	int3   
   1400031fd:	int3   
   1400031fe:	int3   
   1400031ff:	int3   
   140003200:	mov    al,0x1
   140003202:	ret    
   140003203:	int3   
   140003204:	int3   
   140003205:	int3   
   140003206:	int3   
   140003207:	int3   
   140003208:	int3   
   140003209:	int3   
   14000320a:	int3   
   14000320b:	int3   
   14000320c:	int3   
   14000320d:	int3   
   14000320e:	int3   
   14000320f:	int3   
   140003210:	mov    rax,QWORD PTR [rdx]
   140003213:	cmp    QWORD PTR [rcx],rax
   140003216:	jne    0x140003223
   140003218:	mov    eax,DWORD PTR [rdx+0x8]
   14000321b:	cmp    DWORD PTR [rcx+0x8],eax
   14000321e:	jne    0x140003223
   140003220:	mov    al,0x1
   140003222:	ret    
   140003223:	xor    al,al
   140003225:	ret    
   140003226:	int3   
   140003227:	int3   
   140003228:	int3   
   140003229:	int3   
   14000322a:	int3   
   14000322b:	int3   
   14000322c:	int3   
   14000322d:	int3   
   14000322e:	int3   
   14000322f:	int3   
   140003230:	mov    rdx,QWORD PTR [rdx]
   140003233:	cmp    QWORD PTR [rcx],rdx
   140003236:	sete   al
   140003239:	ret    
   14000323a:	int3   
   14000323b:	int3   
   14000323c:	int3   
   14000323d:	int3   
   14000323e:	int3   
   14000323f:	int3   
   140003240:	mov    rax,QWORD PTR [rdx]
   140003243:	cmp    QWORD PTR [rcx],rax
   140003246:	jne    0x140003254
   140003248:	cmp    DWORD PTR [rcx+0xc],0x0
   14000324c:	mov    BYTE PTR [rcx+0x10],0x1
   140003250:	sete   al
   140003253:	ret    
   140003254:	xor    al,al
   140003256:	ret    
   140003257:	int3   
   140003258:	int3   
   140003259:	int3   
   14000325a:	int3   
   14000325b:	int3   
   14000325c:	int3   
   14000325d:	int3   
   14000325e:	int3   
   14000325f:	int3   
   140003260:	mov    rdx,QWORD PTR [rdx]
   140003263:	cmp    QWORD PTR [rcx],rdx
   140003266:	sete   al
   140003269:	ret    
   14000326a:	int3   
   14000326b:	int3   
   14000326c:	int3   
   14000326d:	int3   
   14000326e:	int3   
   14000326f:	int3   
   140003270:	mov    rdx,QWORD PTR [rdx]
   140003273:	cmp    QWORD PTR [rcx],rdx
   140003276:	sete   al
   140003279:	ret    
   14000327a:	int3   
   14000327b:	int3   
   14000327c:	int3   
   14000327d:	int3   
   14000327e:	int3   
   14000327f:	int3   
   140003280:	sub    rsp,0x28
   140003284:	call   0x140020910
   140003289:	test   eax,eax
   14000328b:	setne  al
   14000328e:	add    rsp,0x28
   140003292:	ret    
   140003293:	int3   
   140003294:	int3   
   140003295:	int3   
   140003296:	int3   
   140003297:	int3   
   140003298:	int3   
   140003299:	int3   
   14000329a:	int3   
   14000329b:	int3   
   14000329c:	int3   
   14000329d:	int3   
   14000329e:	int3   
   14000329f:	int3   
   1400032a0:	mov    rdx,QWORD PTR [rdx]
   1400032a3:	cmp    QWORD PTR [rcx],rdx
   1400032a6:	setne  al
   1400032a9:	ret    
   1400032aa:	int3   
   1400032ab:	int3   
   1400032ac:	int3   
   1400032ad:	int3   
   1400032ae:	int3   
   1400032af:	int3   
   1400032b0:	xor    al,al
   1400032b2:	ret    
   1400032b3:	int3   
   1400032b4:	int3   
   1400032b5:	int3   
   1400032b6:	int3   
   1400032b7:	int3   
   1400032b8:	int3   
   1400032b9:	int3   
   1400032ba:	int3   
   1400032bb:	int3   
   1400032bc:	int3   
   1400032bd:	int3   
   1400032be:	int3   
   1400032bf:	int3   
   1400032c0:	movzx  r9d,BYTE PTR [rdx+0x60]
   1400032c5:	xor    r8d,r8d
   1400032c8:	test   r9b,r9b
   1400032cb:	je     0x1400032fb
   1400032cd:	cmp    BYTE PTR [rcx+0x60],r8b
   1400032d1:	je     0x1400032fb
   1400032d3:	mov    rax,QWORD PTR [rcx+0x50]
   1400032d7:	cmp    QWORD PTR [rdx+0x50],rax
   1400032db:	jne    0x1400032f2
   1400032dd:	mov    rax,QWORD PTR [rcx+0x58]
   1400032e1:	cmp    QWORD PTR [rdx+0x58],rax
   1400032e5:	jne    0x1400032f2
   1400032e7:	mov    eax,0x1
   1400032ec:	test   al,al
   1400032ee:	sete   al
   1400032f1:	ret    
   1400032f2:	mov    eax,r8d
   1400032f5:	test   al,al
   1400032f7:	sete   al
   1400032fa:	ret    
   1400032fb:	cmp    r9b,BYTE PTR [rcx+0x60]
   1400032ff:	mov    eax,r8d
   140003302:	sete   al
   140003305:	test   al,al
   140003307:	sete   al
   14000330a:	ret    
   14000330b:	int3   
   14000330c:	int3   
   14000330d:	int3   
   14000330e:	int3   
   14000330f:	int3   
   140003310:	mov    rax,QWORD PTR [rdx]
   140003313:	cmp    QWORD PTR [rcx],rax
   140003316:	jne    0x140003329
   140003318:	cmp    DWORD PTR [rcx+0xc],0x0
   14000331c:	mov    BYTE PTR [rcx+0x10],0x1
   140003320:	sete   cl
   140003323:	test   cl,cl
   140003325:	sete   al
   140003328:	ret    
   140003329:	xor    cl,cl
   14000332b:	test   cl,cl
   14000332d:	sete   al
   140003330:	ret    
   140003331:	int3   
   140003332:	int3   
   140003333:	int3   
   140003334:	int3   
   140003335:	int3   
   140003336:	int3   
   140003337:	int3   
   140003338:	int3   
   140003339:	int3   
   14000333a:	int3   
   14000333b:	int3   
   14000333c:	int3   
   14000333d:	int3   
   14000333e:	int3   
   14000333f:	int3   
   140003340:	mov    rdx,QWORD PTR [rdx]
   140003343:	cmp    QWORD PTR [rcx],rdx
   140003346:	setne  al
   140003349:	ret    
   14000334a:	int3   
   14000334b:	int3   
   14000334c:	int3   
   14000334d:	int3   
   14000334e:	int3   
   14000334f:	int3   
   140003350:	mov    rdx,QWORD PTR [rdx]
   140003353:	cmp    QWORD PTR [rcx],rdx
   140003356:	setne  al
   140003359:	ret    
   14000335a:	int3   
   14000335b:	int3   
   14000335c:	int3   
   14000335d:	int3   
   14000335e:	int3   
   14000335f:	int3   
   140003360:	mov    rdx,QWORD PTR [rdx]
   140003363:	cmp    QWORD PTR [rcx],rdx
   140003366:	setne  al
   140003369:	ret    
   14000336a:	int3   
   14000336b:	int3   
   14000336c:	int3   
   14000336d:	int3   
   14000336e:	int3   
   14000336f:	int3   
   140003370:	mov    QWORD PTR [rsp+0x8],rbx
   140003375:	mov    QWORD PTR [rsp+0x10],rsi
   14000337a:	push   rdi
   14000337b:	sub    rsp,0x20
   14000337f:	mov    rbx,QWORD PTR [rdx]
   140003382:	mov    eax,DWORD PTR [rdx+0x8]
   140003385:	mov    rdi,rdx
   140003388:	cmp    DWORD PTR [rbx+0x14],0x5
   14000338c:	mov    rsi,rcx
   14000338f:	mov    DWORD PTR [rcx],eax
   140003391:	jl     0x1400033a2
   140003393:	mov    rcx,rbx
   140003396:	call   0x14002c670
   14000339b:	mov    DWORD PTR [rbx+0x14],0x0
   1400033a2:	movsxd rcx,DWORD PTR [rbx+0x14]
   1400033a6:	mov    edx,DWORD PTR [rbx+rcx*4]
   1400033a9:	lea    eax,[rcx+0x1]
   1400033ac:	mov    DWORD PTR [rbx+0x14],eax
   1400033af:	mov    rbx,QWORD PTR [rsp+0x30]
   1400033b4:	mov    rax,rsi
   1400033b7:	mov    rsi,QWORD PTR [rsp+0x38]
   1400033bc:	mov    DWORD PTR [rdi+0x8],edx
   1400033bf:	add    rsp,0x20
   1400033c3:	pop    rdi
   1400033c4:	ret    
   1400033c5:	int3   
   1400033c6:	int3   
   1400033c7:	int3   
   1400033c8:	int3   
   1400033c9:	int3   
   1400033ca:	int3   
   1400033cb:	int3   
   1400033cc:	int3   
   1400033cd:	int3   
   1400033ce:	int3   
   1400033cf:	int3   
   1400033d0:	movups xmm0,XMMWORD PTR [rdx]
   1400033d3:	inc    QWORD PTR [rdx]
   1400033d6:	mov    rax,rcx
   1400033d9:	movups XMMWORD PTR [rcx],xmm0
   1400033dc:	ret    
   1400033dd:	int3   
   1400033de:	int3   
   1400033df:	int3   
   1400033e0:	mov    r8,QWORD PTR [rcx]
   1400033e3:	movabs rax,0x2aaaaaaaaaaaaaab
   1400033ed:	sub    r8,QWORD PTR [rdx]
   1400033f0:	imul   r8
   1400033f3:	sar    rdx,0x4
   1400033f7:	mov    rax,rdx
   1400033fa:	shr    rax,0x3f
   1400033fe:	add    rax,rdx
   140003401:	ret    
   140003402:	int3   
   140003403:	int3   
   140003404:	int3   
   140003405:	int3   
   140003406:	int3   
   140003407:	int3   
   140003408:	int3   
   140003409:	int3   
   14000340a:	int3   
   14000340b:	int3   
   14000340c:	int3   
   14000340d:	int3   
   14000340e:	int3   
   14000340f:	int3   
   140003410:	rex push rbx
   140003412:	sub    rsp,0x40
   140003416:	mov    r11,rdx
   140003419:	mov    rdx,QWORD PTR [rdx+0x10]
   14000341d:	mov    r10,r8
   140003420:	mov    rax,QWORD PTR [r11+0x18]
   140003424:	mov    r8,QWORD PTR [r8+0x10]
   140003428:	mov    rbx,rcx
   14000342b:	sub    rax,rdx
   14000342e:	mov    DWORD PTR [rsp+0x30],0x0
   140003436:	cmp    r8,rax
   140003439:	jbe    0x140003462
   14000343b:	mov    rax,QWORD PTR [r10+0x18]
   14000343f:	sub    rax,r8
   140003442:	cmp    rax,rdx
   140003445:	jb     0x140003462
   140003447:	xor    r9d,r9d
   14000344a:	mov    r8,r11
   14000344d:	xor    edx,edx
   14000344f:	mov    rcx,r10
   140003452:	mov    QWORD PTR [rsp+0x20],0xffffffffffffffff
   14000345b:	call   0x1400250a0
   140003460:	jmp    0x140003474
   140003462:	or     r9,0xffffffffffffffff
   140003466:	xor    r8d,r8d
   140003469:	mov    rdx,r10
   14000346c:	mov    rcx,r11
   14000346f:	call   0x14001eaf0
   140003474:	mov    rdx,rax
   140003477:	mov    rcx,rbx
   14000347a:	call   0x140011010
   14000347f:	mov    rax,rbx
   140003482:	add    rsp,0x40
   140003486:	pop    rbx
   140003487:	ret    
   140003488:	int3   
   140003489:	int3   
   14000348a:	int3   
   14000348b:	int3   
   14000348c:	int3   
   14000348d:	int3   
   14000348e:	int3   
   14000348f:	int3   
   140003490:	rex push rbx
   140003492:	sub    rsp,0x30
   140003496:	mov    rax,r8
   140003499:	mov    r10,rdx
   14000349c:	mov    rbx,rcx
   14000349f:	or     r9,0xffffffffffffffff
   1400034a3:	xor    r8d,r8d
   1400034a6:	mov    rdx,rax
   1400034a9:	mov    rcx,r10
   1400034ac:	mov    DWORD PTR [rsp+0x20],0x0
   1400034b4:	call   0x14001eaf0
   1400034b9:	mov    rcx,rbx
   1400034bc:	mov    rdx,rax
   1400034bf:	call   0x140011010
   1400034c4:	mov    rax,rbx
   1400034c7:	add    rsp,0x30
   1400034cb:	pop    rbx
   1400034cc:	ret    
   1400034cd:	int3   
   1400034ce:	int3   
   1400034cf:	int3   
   1400034d0:	rex push rbx
   1400034d2:	sub    rsp,0x30
   1400034d6:	mov    rax,r8
   1400034d9:	xor    r8d,r8d
   1400034dc:	mov    r9,rdx
   1400034df:	mov    rbx,rcx
   1400034e2:	mov    DWORD PTR [rsp+0x20],r8d
   1400034e7:	cmp    BYTE PTR [rax],r8b
   1400034ea:	je     0x1400034fa
   1400034ec:	or     r8,0xffffffffffffffff
   1400034f0:	inc    r8
   1400034f3:	cmp    BYTE PTR [rax+r8*1],0x0
   1400034f8:	jne    0x1400034f0
   1400034fa:	mov    rdx,rax
   1400034fd:	mov    rcx,r9
   140003500:	call   0x14001ec30
   140003505:	mov    rcx,rbx
   140003508:	mov    rdx,rax
   14000350b:	call   0x140011010
   140003510:	mov    rax,rbx
   140003513:	add    rsp,0x30
   140003517:	pop    rbx
   140003518:	ret    
   140003519:	int3   
   14000351a:	int3   
   14000351b:	int3   
   14000351c:	int3   
   14000351d:	int3   
   14000351e:	int3   
   14000351f:	int3   
   140003520:	mov    QWORD PTR [rsp+0x8],rcx
   140003525:	push   rsi
   140003526:	push   rdi
   140003527:	push   r14
   140003529:	sub    rsp,0x30
   14000352d:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140003536:	mov    QWORD PTR [rsp+0x58],rbx
   14000353b:	mov    QWORD PTR [rsp+0x60],rbp
   140003540:	mov    rsi,r8
   140003543:	mov    r14,rdx
   140003546:	mov    rdi,rcx
   140003549:	xor    ebx,ebx
   14000354b:	mov    DWORD PTR [rsp+0x20],ebx
   14000354f:	mov    QWORD PTR [rcx+0x18],0xf
   140003557:	mov    QWORD PTR [rcx+0x10],rbx
   14000355b:	mov    BYTE PTR [rcx],bl
   14000355d:	mov    DWORD PTR [rsp+0x20],0x1
   140003565:	mov    rcx,QWORD PTR [rdx+0x10]
   140003569:	cmp    BYTE PTR [r8],bl
   14000356c:	jne    0x140003572
   14000356e:	mov    eax,ebx
   140003570:	jmp    0x140003580
   140003572:	or     rax,0xffffffffffffffff
   140003576:	inc    rax
   140003579:	cmp    BYTE PTR [r8+rax*1],0x0
   14000357e:	jne    0x140003576
   140003580:	lea    rdx,[rax+rcx*1]
   140003584:	cmp    rbx,rdx
   140003587:	ja     0x1400035b5
   140003589:	cmp    QWORD PTR [rdi+0x18],rdx
   14000358d:	je     0x1400035b5
   14000358f:	mov    r8b,0x1
   140003592:	mov    rcx,rdi
   140003595:	call   0x14001cc40
   14000359a:	test   al,al
   14000359c:	je     0x1400035b5
   14000359e:	mov    QWORD PTR [rdi+0x10],rbx
   1400035a2:	cmp    QWORD PTR [rdi+0x18],0x10
   1400035a7:	jb     0x1400035ae
   1400035a9:	mov    rax,QWORD PTR [rdi]
   1400035ac:	jmp    0x1400035b1
   1400035ae:	mov    rax,rdi
   1400035b1:	mov    BYTE PTR [rax+rbx*1],0x0
   1400035b5:	or     r9,0xffffffffffffffff
   1400035b9:	xor    r8d,r8d
   1400035bc:	mov    rdx,r14
   1400035bf:	mov    rcx,rdi
   1400035c2:	call   0x14001eaf0
   1400035c7:	cmp    BYTE PTR [rsi],0x0
   1400035ca:	je     0x1400035d9
   1400035cc:	or     rbx,0xffffffffffffffff
   1400035d0:	inc    rbx
   1400035d3:	cmp    BYTE PTR [rsi+rbx*1],0x0
   1400035d7:	jne    0x1400035d0
   1400035d9:	mov    r8,rbx
   1400035dc:	mov    rdx,rsi
   1400035df:	mov    rcx,rdi
   1400035e2:	call   0x14001ec30
   1400035e7:	mov    rax,rdi
   1400035ea:	mov    rbx,QWORD PTR [rsp+0x58]
   1400035ef:	mov    rbp,QWORD PTR [rsp+0x60]
   1400035f4:	add    rsp,0x30
   1400035f8:	pop    r14
   1400035fa:	pop    rdi
   1400035fb:	pop    rsi
   1400035fc:	ret    
   1400035fd:	int3   
   1400035fe:	int3   
   1400035ff:	int3   
   140003600:	mov    QWORD PTR [rsp+0x8],rcx
   140003605:	push   rsi
   140003606:	push   rdi
   140003607:	push   r14
   140003609:	sub    rsp,0x30
   14000360d:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140003616:	mov    QWORD PTR [rsp+0x58],rbx
   14000361b:	mov    QWORD PTR [rsp+0x60],rbp
   140003620:	mov    r14,r8
   140003623:	mov    rsi,rdx
   140003626:	mov    rdi,rcx
   140003629:	xor    ebx,ebx
   14000362b:	mov    DWORD PTR [rsp+0x20],ebx
   14000362f:	mov    QWORD PTR [rcx+0x18],0xf
   140003637:	mov    QWORD PTR [rcx+0x10],rbx
   14000363b:	mov    BYTE PTR [rcx],bl
   14000363d:	mov    DWORD PTR [rsp+0x20],0x1
   140003645:	cmp    BYTE PTR [rdx],bl
   140003647:	jne    0x14000364d
   140003649:	mov    ecx,ebx
   14000364b:	jmp    0x14000365a
   14000364d:	or     rcx,0xffffffffffffffff
   140003651:	inc    rcx
   140003654:	cmp    BYTE PTR [rdx+rcx*1],0x0
   140003658:	jne    0x140003651
   14000365a:	mov    rdx,QWORD PTR [r8+0x10]
   14000365e:	add    rdx,rcx
   140003661:	cmp    rbx,rdx
   140003664:	ja     0x140003692
   140003666:	cmp    QWORD PTR [rdi+0x18],rdx
   14000366a:	je     0x140003692
   14000366c:	mov    r8b,0x1
   14000366f:	mov    rcx,rdi
   140003672:	call   0x14001cc40
   140003677:	test   al,al
   140003679:	je     0x140003692
   14000367b:	mov    QWORD PTR [rdi+0x10],rbx
   14000367f:	cmp    QWORD PTR [rdi+0x18],0x10
   140003684:	jb     0x14000368b
   140003686:	mov    rax,QWORD PTR [rdi]
   140003689:	jmp    0x14000368e
   14000368b:	mov    rax,rdi
   14000368e:	mov    BYTE PTR [rax+rbx*1],0x0
   140003692:	cmp    BYTE PTR [rsi],0x0
   140003695:	je     0x1400036a9
   140003697:	or     rbx,0xffffffffffffffff
   14000369b:	nop    DWORD PTR [rax+rax*1+0x0]
   1400036a0:	inc    rbx
   1400036a3:	cmp    BYTE PTR [rsi+rbx*1],0x0
   1400036a7:	jne    0x1400036a0
   1400036a9:	mov    r8,rbx
   1400036ac:	mov    rdx,rsi
   1400036af:	mov    rcx,rdi
   1400036b2:	call   0x14001ec30
   1400036b7:	or     r9,0xffffffffffffffff
   1400036bb:	xor    r8d,r8d
   1400036be:	mov    rdx,r14
   1400036c1:	mov    rcx,rdi
   1400036c4:	call   0x14001eaf0
   1400036c9:	mov    rax,rdi
   1400036cc:	mov    rbx,QWORD PTR [rsp+0x58]
   1400036d1:	mov    rbp,QWORD PTR [rsp+0x60]
   1400036d6:	add    rsp,0x30
   1400036da:	pop    r14
   1400036dc:	pop    rdi
   1400036dd:	pop    rsi
   1400036de:	ret    
   1400036df:	int3   
   1400036e0:	sub    rsp,0x28
   1400036e4:	call   0x140020910
   1400036e9:	test   eax,eax
   1400036eb:	sets   al
   1400036ee:	add    rsp,0x28
   1400036f2:	ret    
   1400036f3:	int3   
   1400036f4:	int3   
   1400036f5:	int3   
   1400036f6:	int3   
   1400036f7:	int3   
   1400036f8:	int3   
   1400036f9:	int3   
   1400036fa:	int3   
   1400036fb:	int3   
   1400036fc:	int3   
   1400036fd:	int3   
   1400036fe:	int3   
   1400036ff:	int3   
   140003700:	mov    rcx,QWORD PTR [r8]
   140003703:	cmp    QWORD PTR [rdx],rcx
   140003706:	setb   al
   140003709:	ret    
   14000370a:	int3   
   14000370b:	int3   
   14000370c:	int3   
   14000370d:	int3   
   14000370e:	int3   
   14000370f:	int3   
   140003710:	mov    rcx,QWORD PTR [r8]
   140003713:	cmp    QWORD PTR [rdx],rcx
   140003716:	setb   al
   140003719:	ret    
   14000371a:	int3   
   14000371b:	int3   
   14000371c:	int3   
   14000371d:	int3   
   14000371e:	int3   
   14000371f:	int3   
   140003720:	mov    QWORD PTR [rsp+0x8],rbx
   140003725:	mov    QWORD PTR [rsp+0x10],rsi
   14000372a:	mov    QWORD PTR [rsp+0x20],rdi
   14000372f:	mov    QWORD PTR [rsp+0x18],r8
   140003734:	push   r14
   140003736:	sub    rsp,0x30
   14000373a:	cmp    DWORD PTR [rcx+0x44],0x0
   14000373e:	mov    r14,r9
   140003741:	mov    rsi,rdx
   140003744:	mov    rdi,rcx
   140003747:	jne    0x140003794
   140003749:	cmp    QWORD PTR [rdx],r8
   14000374c:	je     0x140003794
   14000374e:	xchg   ax,ax
   140003750:	cmp    QWORD PTR [rdi+0x30],0x0
   140003755:	mov    rax,QWORD PTR [rsi]
   140003758:	movzx  edx,BYTE PTR [rax]
   14000375b:	je     0x14000376f
   14000375d:	lea    rcx,[rdi+0x20]
   140003761:	xor    r8d,r8d
   140003764:	call   0x1400237f0
   140003769:	cmp    rax,0xffffffffffffffff
   14000376d:	jmp    0x140003780
   14000376f:	cmp    BYTE PTR [rdi+0x41],0x0
   140003773:	je     0x140003794
   140003775:	movsx  ecx,dl
   140003778:	call   QWORD PTR [rip+0x32c92]        # 0x140036410
   14000377e:	test   eax,eax
   140003780:	setne  al
   140003783:	test   al,al
   140003785:	je     0x140003794
   140003787:	inc    QWORD PTR [rsi]
   14000378a:	mov    rax,QWORD PTR [rsi]
   14000378d:	cmp    rax,QWORD PTR [rsp+0x50]
   140003792:	jne    0x140003750
   140003794:	cmp    DWORD PTR [rdi+0x44],0x0
   140003798:	mov    rbx,QWORD PTR [rsi]
   14000379b:	jne    0x14000388e
   1400037a1:	cmp    rbx,QWORD PTR [rsp+0x50]
   1400037a6:	jne    0x1400037af
   1400037a8:	xor    al,al
   1400037aa:	jmp    0x140003adc
   1400037af:	cmp    QWORD PTR [rdi+0x10],0x0
   1400037b4:	movzx  eax,BYTE PTR [rbx]
   1400037b7:	je     0x1400037cd
   1400037b9:	xor    r8d,r8d
   1400037bc:	movzx  edx,al
   1400037bf:	mov    rcx,rdi
   1400037c2:	call   0x1400237f0
   1400037c7:	cmp    rax,0xffffffffffffffff
   1400037cb:	jmp    0x1400037de
   1400037cd:	cmp    BYTE PTR [rdi+0x40],0x0
   1400037d1:	je     0x1400037ed
   1400037d3:	movsx  ecx,al
   1400037d6:	call   QWORD PTR [rip+0x32c2c]        # 0x140036408
   1400037dc:	test   eax,eax
   1400037de:	setne  al
   1400037e1:	test   al,al
   1400037e3:	je     0x1400037ed
   1400037e5:	inc    QWORD PTR [rsi]
   1400037e8:	jmp    0x140003a41
   1400037ed:	mov    rax,QWORD PTR [rsp+0x50]
   1400037f2:	cmp    QWORD PTR [rsi],rax
   1400037f5:	je     0x140003a41
   1400037fb:	nop    DWORD PTR [rax+rax*1+0x0]
   140003800:	cmp    QWORD PTR [rdi+0x30],0x0
   140003805:	mov    rax,QWORD PTR [rsi]
   140003808:	movzx  edx,BYTE PTR [rax]
   14000380b:	je     0x14000381f
   14000380d:	lea    rcx,[rdi+0x20]
   140003811:	xor    r8d,r8d
   140003814:	call   0x1400237f0
   140003819:	cmp    rax,0xffffffffffffffff
   14000381d:	jmp    0x140003830
   14000381f:	cmp    BYTE PTR [rdi+0x41],0x0
   140003823:	je     0x14000383b
   140003825:	movsx  ecx,dl
   140003828:	call   QWORD PTR [rip+0x32be2]        # 0x140036410
   14000382e:	test   eax,eax
   140003830:	setne  al
   140003833:	test   al,al
   140003835:	jne    0x140003a41
   14000383b:	cmp    QWORD PTR [rdi+0x10],0x0
   140003840:	mov    rax,QWORD PTR [rsi]
   140003843:	movzx  ecx,BYTE PTR [rax]
   140003846:	je     0x14000385c
   140003848:	movzx  edx,cl
   14000384b:	xor    r8d,r8d
   14000384e:	mov    rcx,rdi
   140003851:	call   0x1400237f0
   140003856:	cmp    rax,0xffffffffffffffff
   14000385a:	jmp    0x14000386d
   14000385c:	cmp    BYTE PTR [rdi+0x40],0x0
   140003860:	je     0x140003878
   140003862:	movsx  ecx,cl
   140003865:	call   QWORD PTR [rip+0x32b9d]        # 0x140036408
   14000386b:	test   eax,eax
   14000386d:	setne  al
   140003870:	test   al,al
   140003872:	jne    0x140003a41
   140003878:	inc    QWORD PTR [rsi]
   14000387b:	mov    rax,QWORD PTR [rsi]
   14000387e:	cmp    rax,QWORD PTR [rsp+0x50]
   140003883:	jne    0x140003800
   140003889:	jmp    0x140003a41
   14000388e:	cmp    rbx,QWORD PTR [rsp+0x50]
   140003893:	jne    0x1400038e2
   140003895:	cmp    BYTE PTR [rdi+0x48],0x0
   140003899:	jne    0x1400037a8
   14000389f:	mov    BYTE PTR [rdi+0x48],0x1
   1400038a3:	mov    r9,QWORD PTR [r14+0x18]
   1400038a7:	mov    rax,QWORD PTR [rsi]
   1400038aa:	cmp    r9,0x10
   1400038ae:	jb     0x1400038b5
   1400038b0:	mov    rdx,QWORD PTR [r14]
   1400038b3:	jmp    0x1400038b8
   1400038b5:	mov    rdx,r14
   1400038b8:	mov    r8,QWORD PTR [r14+0x10]
   1400038bc:	add    r8,rdx
   1400038bf:	cmp    r9,0x10
   1400038c3:	jb     0x1400038ca
   1400038c5:	mov    rdx,QWORD PTR [r14]
   1400038c8:	jmp    0x1400038cd
   1400038ca:	mov    rdx,r14
   1400038cd:	mov    r9,rbx
   1400038d0:	mov    rcx,r14
   1400038d3:	mov    QWORD PTR [rsp+0x20],rax
   1400038d8:	call   0x140029cd0
   1400038dd:	jmp    0x140003ada
   1400038e2:	cmp    QWORD PTR [rdi+0x10],0x0
   1400038e7:	movzx  eax,BYTE PTR [rbx]
   1400038ea:	je     0x140003900
   1400038ec:	xor    r8d,r8d
   1400038ef:	movzx  edx,al
   1400038f2:	mov    rcx,rdi
   1400038f5:	call   0x1400237f0
   1400038fa:	cmp    rax,0xffffffffffffffff
   1400038fe:	jmp    0x140003911
   140003900:	cmp    BYTE PTR [rdi+0x40],0x0
   140003904:	je     0x14000392e
   140003906:	movsx  ecx,al
   140003909:	call   QWORD PTR [rip+0x32af9]        # 0x140036408
   14000390f:	test   eax,eax
   140003911:	setne  al
   140003914:	test   al,al
   140003916:	je     0x14000392e
   140003918:	cmp    BYTE PTR [rdi+0x48],0x0
   14000391c:	je     0x140003a3d
   140003922:	inc    QWORD PTR [rsi]
   140003925:	mov    BYTE PTR [rdi+0x48],0x0
   140003929:	jmp    0x140003a41
   14000392e:	cmp    BYTE PTR [rdi+0x48],0x0
   140003932:	jne    0x14000396f
   140003934:	cmp    QWORD PTR [rdi+0x30],0x0
   140003939:	mov    rax,QWORD PTR [rsi]
   14000393c:	movzx  edx,BYTE PTR [rax]
   14000393f:	je     0x140003953
   140003941:	lea    rcx,[rdi+0x20]
   140003945:	xor    r8d,r8d
   140003948:	call   0x1400237f0
   14000394d:	cmp    rax,0xffffffffffffffff
   140003951:	jmp    0x140003964
   140003953:	cmp    BYTE PTR [rdi+0x41],0x0
   140003957:	je     0x14000396f
   140003959:	movsx  ecx,dl
   14000395c:	call   QWORD PTR [rip+0x32aae]        # 0x140036410
   140003962:	test   eax,eax
   140003964:	setne  al
   140003967:	test   al,al
   140003969:	jne    0x140003a3d
   14000396f:	cmp    QWORD PTR [rdi+0x30],0x0
   140003974:	mov    rax,QWORD PTR [rsi]
   140003977:	movzx  edx,BYTE PTR [rax]
   14000397a:	je     0x14000398e
   14000397c:	lea    rcx,[rdi+0x20]
   140003980:	xor    r8d,r8d
   140003983:	call   0x1400237f0
   140003988:	cmp    rax,0xffffffffffffffff
   14000398c:	jmp    0x14000399f
   14000398e:	cmp    BYTE PTR [rdi+0x41],0x0
   140003992:	je     0x1400039ac
   140003994:	movsx  ecx,dl
   140003997:	call   QWORD PTR [rip+0x32a73]        # 0x140036410
   14000399d:	test   eax,eax
   14000399f:	setne  al
   1400039a2:	test   al,al
   1400039a4:	je     0x1400039ac
   1400039a6:	inc    QWORD PTR [rsi]
   1400039a9:	mov    rbx,QWORD PTR [rsi]
   1400039ac:	mov    rax,QWORD PTR [rsp+0x50]
   1400039b1:	cmp    QWORD PTR [rsi],rax
   1400039b4:	je     0x140003a3d
   1400039ba:	nop    WORD PTR [rax+rax*1+0x0]
   1400039c0:	cmp    QWORD PTR [rdi+0x30],0x0
   1400039c5:	mov    rax,QWORD PTR [rsi]
   1400039c8:	movzx  edx,BYTE PTR [rax]
   1400039cb:	je     0x1400039df
   1400039cd:	lea    rcx,[rdi+0x20]
   1400039d1:	xor    r8d,r8d
   1400039d4:	call   0x1400237f0
   1400039d9:	cmp    rax,0xffffffffffffffff
   1400039dd:	jmp    0x1400039f0
   1400039df:	cmp    BYTE PTR [rdi+0x41],0x0
   1400039e3:	je     0x1400039f7
   1400039e5:	movsx  ecx,dl
   1400039e8:	call   QWORD PTR [rip+0x32a22]        # 0x140036410
   1400039ee:	test   eax,eax
   1400039f0:	setne  al
   1400039f3:	test   al,al
   1400039f5:	jne    0x140003a3d
   1400039f7:	cmp    QWORD PTR [rdi+0x10],0x0
   1400039fc:	mov    rax,QWORD PTR [rsi]
   1400039ff:	movzx  ecx,BYTE PTR [rax]
   140003a02:	je     0x140003a18
   140003a04:	movzx  edx,cl
   140003a07:	xor    r8d,r8d
   140003a0a:	mov    rcx,rdi
   140003a0d:	call   0x1400237f0
   140003a12:	cmp    rax,0xffffffffffffffff
   140003a16:	jmp    0x140003a29
   140003a18:	cmp    BYTE PTR [rdi+0x40],0x0
   140003a1c:	je     0x140003a30
   140003a1e:	movsx  ecx,cl
   140003a21:	call   QWORD PTR [rip+0x329e1]        # 0x140036408
   140003a27:	test   eax,eax
   140003a29:	setne  al
   140003a2c:	test   al,al
   140003a2e:	jne    0x140003a3d
   140003a30:	inc    QWORD PTR [rsi]
   140003a33:	mov    rax,QWORD PTR [rsi]
   140003a36:	cmp    rax,QWORD PTR [rsp+0x50]
   140003a3b:	jne    0x1400039c0
   140003a3d:	mov    BYTE PTR [rdi+0x48],0x1
   140003a41:	mov    rdx,QWORD PTR [r14+0x18]
   140003a45:	mov    rax,QWORD PTR [rsi]
   140003a48:	cmp    rdx,0x10
   140003a4c:	jb     0x140003a53
   140003a4e:	mov    r8,QWORD PTR [r14]
   140003a51:	jmp    0x140003a56
   140003a53:	mov    r8,r14
   140003a56:	add    r8,QWORD PTR [r14+0x10]
   140003a5a:	cmp    rdx,0x10
   140003a5e:	jb     0x140003a65
   140003a60:	mov    rcx,QWORD PTR [r14]
   140003a63:	jmp    0x140003a68
   140003a65:	mov    rcx,r14
   140003a68:	cmp    rbx,rax
   140003a6b:	jne    0x140003a9f
   140003a6d:	cmp    rdx,0x10
   140003a71:	jb     0x140003a78
   140003a73:	mov    rax,QWORD PTR [r14]
   140003a76:	jmp    0x140003a7b
   140003a78:	mov    rax,r14
   140003a7b:	xor    edx,edx
   140003a7d:	test   r8,r8
   140003a80:	jne    0x140003a87
   140003a82:	mov    r8d,edx
   140003a85:	jmp    0x140003a8a
   140003a87:	sub    r8,rcx
   140003a8a:	test   rcx,rcx
   140003a8d:	je     0x140003a95
   140003a8f:	mov    rdx,rcx
   140003a92:	sub    rdx,rax
   140003a95:	mov    rcx,r14
   140003a98:	call   0x140023080
   140003a9d:	jmp    0x140003ada
   140003a9f:	cmp    rdx,0x10
   140003aa3:	jb     0x140003aaa
   140003aa5:	mov    r9,QWORD PTR [r14]
   140003aa8:	jmp    0x140003aad
   140003aaa:	mov    r9,r14
   140003aad:	xor    edx,edx
   140003aaf:	test   r8,r8
   140003ab2:	jne    0x140003ab9
   140003ab4:	mov    r8d,edx
   140003ab7:	jmp    0x140003abc
   140003ab9:	sub    r8,rcx
   140003abc:	test   rcx,rcx
   140003abf:	je     0x140003ac7
   140003ac1:	mov    rdx,rcx
   140003ac4:	sub    rdx,r9
   140003ac7:	sub    rax,rbx
   140003aca:	mov    r9,rbx
   140003acd:	mov    rcx,r14
   140003ad0:	mov    QWORD PTR [rsp+0x20],rax
   140003ad5:	call   0x14002a190
   140003ada:	mov    al,0x1
   140003adc:	mov    rbx,QWORD PTR [rsp+0x40]
   140003ae1:	mov    rsi,QWORD PTR [rsp+0x48]
   140003ae6:	mov    rdi,QWORD PTR [rsp+0x58]
   140003aeb:	add    rsp,0x30
   140003aef:	pop    r14
   140003af1:	ret    
   140003af2:	int3   
   140003af3:	int3   
   140003af4:	int3   
   140003af5:	int3   
   140003af6:	int3   
   140003af7:	int3   
   140003af8:	int3   
   140003af9:	int3   
   140003afa:	int3   
   140003afb:	int3   
   140003afc:	int3   
   140003afd:	int3   
   140003afe:	int3   
   140003aff:	int3   
   140003b00:	mov    r8d,DWORD PTR [rcx+0x4]
   140003b04:	movzx  r9d,BYTE PTR [rsp+0x8]
   140003b0a:	mov    rax,rdx
   140003b0d:	mov    edx,DWORD PTR [rcx]
   140003b0f:	mov    rcx,rax
   140003b12:	jmp    0x1400098e0
   140003b17:	int3   
   140003b18:	int3   
   140003b19:	int3   
   140003b1a:	int3   
   140003b1b:	int3   
   140003b1c:	int3   
   140003b1d:	int3   
   140003b1e:	int3   
   140003b1f:	int3   
   140003b20:	mov    r8d,DWORD PTR [rcx+0x4]
   140003b24:	movzx  r9d,BYTE PTR [rsp+0x8]
   140003b2a:	mov    rax,rdx
   140003b2d:	mov    edx,DWORD PTR [rcx]
   140003b2f:	mov    rcx,rax
   140003b32:	jmp    0x1400098e0
   140003b37:	int3   
   140003b38:	int3   
   140003b39:	int3   
   140003b3a:	int3   
   140003b3b:	int3   
   140003b3c:	int3   
   140003b3d:	int3   
   140003b3e:	int3   
   140003b3f:	int3   
   140003b40:	mov    QWORD PTR [rsp+0x8],rbx
   140003b45:	mov    QWORD PTR [rsp+0x10],rsi
   140003b4a:	mov    QWORD PTR [rsp+0x18],rdi
   140003b4f:	lea    rax,[rdx*2+0x2]
   140003b57:	mov    rdi,r9
   140003b5a:	mov    r11,rdx
   140003b5d:	mov    rbx,rcx
   140003b60:	mov    rsi,rdx
   140003b63:	cmp    rax,r8
   140003b66:	jge    0x140003ba6
   140003b68:	nop    DWORD PTR [rax+rax*1+0x0]
   140003b70:	mov    r10,rax
   140003b73:	add    r10,r10
   140003b76:	mov    r9,QWORD PTR [rbx+r10*8-0x10]
   140003b7b:	cmp    QWORD PTR [rbx+r10*8],r9
   140003b7f:	jae    0x140003b84
   140003b81:	dec    rax
   140003b84:	add    r11,r11
   140003b87:	mov    rcx,rax
   140003b8a:	add    rcx,rcx
   140003b8d:	movups xmm0,XMMWORD PTR [rbx+rcx*8]
   140003b91:	movups XMMWORD PTR [rbx+r11*8],xmm0
   140003b96:	mov    r11,rax
   140003b99:	lea    rax,[rax*2+0x2]
   140003ba1:	cmp    rax,r8
   140003ba4:	jl     0x140003b70
   140003ba6:	jne    0x140003bbf
   140003ba8:	mov    rax,r8
   140003bab:	add    rax,rax
   140003bae:	add    r11,r11
   140003bb1:	movups xmm0,XMMWORD PTR [rbx+rax*8-0x10]
   140003bb6:	movups XMMWORD PTR [rbx+r11*8],xmm0
   140003bbb:	lea    r11,[r8-0x1]
   140003bbf:	lea    rax,[r11-0x1]
   140003bc3:	cqo    
   140003bc5:	sub    rax,rdx
   140003bc8:	sar    rax,1
   140003bcb:	cmp    rsi,r11
   140003bce:	jge    0x140003bfe
   140003bd0:	mov    rcx,QWORD PTR [rdi]
   140003bd3:	mov    rdx,rax
   140003bd6:	add    rdx,rdx
   140003bd9:	cmp    QWORD PTR [rbx+rdx*8],rcx
   140003bdd:	jae    0x140003bfe
   140003bdf:	movups xmm0,XMMWORD PTR [rbx+rdx*8]
   140003be3:	add    r11,r11
   140003be6:	movups XMMWORD PTR [rbx+r11*8],xmm0
   140003beb:	mov    r11,rax
   140003bee:	dec    rax
   140003bf1:	cqo    
   140003bf3:	sub    rax,rdx
   140003bf6:	sar    rax,1
   140003bf9:	cmp    rsi,r11
   140003bfc:	jl     0x140003bd0
   140003bfe:	movups xmm0,XMMWORD PTR [rdi]
   140003c01:	mov    rsi,QWORD PTR [rsp+0x10]
   140003c06:	mov    rdi,QWORD PTR [rsp+0x18]
   140003c0b:	add    r11,r11
   140003c0e:	movups XMMWORD PTR [rbx+r11*8],xmm0
   140003c13:	mov    rbx,QWORD PTR [rsp+0x8]
   140003c18:	ret    
   140003c19:	int3   
   140003c1a:	int3   
   140003c1b:	int3   
   140003c1c:	int3   
   140003c1d:	int3   
   140003c1e:	int3   
   140003c1f:	int3   
   140003c20:	shl    rdx,0x4
   140003c24:	add    QWORD PTR [rcx],rdx
   140003c27:	ret    
   140003c28:	int3   
   140003c29:	int3   
   140003c2a:	int3   
   140003c2b:	int3   
   140003c2c:	int3   
   140003c2d:	int3   
   140003c2e:	int3   
   140003c2f:	int3   
   140003c30:	add    QWORD PTR [rcx],rdx
   140003c33:	ret    
   140003c34:	int3   
   140003c35:	int3   
   140003c36:	int3   
   140003c37:	int3   
   140003c38:	int3   
   140003c39:	int3   
   140003c3a:	int3   
   140003c3b:	int3   
   140003c3c:	int3   
   140003c3d:	int3   
   140003c3e:	int3   
   140003c3f:	int3   
   140003c40:	sub    rsp,0x28
   140003c44:	xor    eax,eax
   140003c46:	test   rcx,rcx
   140003c49:	je     0x140003c62
   140003c4b:	cmp    rcx,0xffffffffffffffff
   140003c4f:	ja     0x140003c5b
   140003c51:	call   0x14003027c
   140003c56:	test   rax,rax
   140003c59:	jne    0x140003c62
   140003c5b:	call   QWORD PTR [rip+0x325b7]        # 0x140036218
   140003c61:	int3   
   140003c62:	add    rsp,0x28
   140003c66:	ret    
   140003c67:	int3   
   140003c68:	int3   
   140003c69:	int3   
   140003c6a:	int3   
   140003c6b:	int3   
   140003c6c:	int3   
   140003c6d:	int3   
   140003c6e:	int3   
   140003c6f:	int3   
   140003c70:	sub    rsp,0x28
   140003c74:	xor    eax,eax
   140003c76:	test   rcx,rcx
   140003c79:	je     0x140003ca3
   140003c7b:	movabs rax,0xaaaaaaaaaaaaaaa
   140003c85:	cmp    rcx,rax
   140003c88:	ja     0x140003c9c
   140003c8a:	lea    rcx,[rcx+rcx*2]
   140003c8e:	shl    rcx,0x3
   140003c92:	call   0x14003027c
   140003c97:	test   rax,rax
   140003c9a:	jne    0x140003ca3
   140003c9c:	call   QWORD PTR [rip+0x32576]        # 0x140036218
   140003ca2:	int3   
   140003ca3:	add    rsp,0x28
   140003ca7:	ret    
   140003ca8:	int3   
   140003ca9:	int3   
   140003caa:	int3   
   140003cab:	int3   
   140003cac:	int3   
   140003cad:	int3   
   140003cae:	int3   
   140003caf:	int3   
   140003cb0:	sub    rsp,0x28
   140003cb4:	xor    eax,eax
   140003cb6:	test   rcx,rcx
   140003cb9:	je     0x140003ce3
   140003cbb:	movabs rax,0x555555555555555
   140003cc5:	cmp    rcx,rax
   140003cc8:	ja     0x140003cdc
   140003cca:	lea    rcx,[rcx+rcx*2]
   140003cce:	shl    rcx,0x4
   140003cd2:	call   0x14003027c
   140003cd7:	test   rax,rax
   140003cda:	jne    0x140003ce3
   140003cdc:	call   QWORD PTR [rip+0x32536]        # 0x140036218
   140003ce2:	int3   
   140003ce3:	add    rsp,0x28
   140003ce7:	ret    
   140003ce8:	int3   
   140003ce9:	int3   
   140003cea:	int3   
   140003ceb:	int3   
   140003cec:	int3   
   140003ced:	int3   
   140003cee:	int3   
   140003cef:	int3   
   140003cf0:	sub    rsp,0x28
   140003cf4:	xor    eax,eax
   140003cf6:	test   rcx,rcx
   140003cf9:	je     0x140003d1f
   140003cfb:	movabs rax,0xfffffffffffffff
   140003d05:	cmp    rcx,rax
   140003d08:	ja     0x140003d18
   140003d0a:	shl    rcx,0x4
   140003d0e:	call   0x14003027c
   140003d13:	test   rax,rax
   140003d16:	jne    0x140003d1f
   140003d18:	call   QWORD PTR [rip+0x324fa]        # 0x140036218
   140003d1e:	int3   
   140003d1f:	add    rsp,0x28
   140003d23:	ret    
   140003d24:	int3   
   140003d25:	int3   
   140003d26:	int3   
   140003d27:	int3   
   140003d28:	int3   
   140003d29:	int3   
   140003d2a:	int3   
   140003d2b:	int3   
   140003d2c:	int3   
   140003d2d:	int3   
   140003d2e:	int3   
   140003d2f:	int3   
   140003d30:	sub    rsp,0x28
   140003d34:	xor    eax,eax
   140003d36:	test   rcx,rcx
   140003d39:	je     0x140003d5f
   140003d3b:	movabs rax,0x249249249249249
   140003d45:	cmp    rcx,rax
   140003d48:	ja     0x140003d58
   140003d4a:	imul   rcx,rcx,0x70
   140003d4e:	call   0x14003027c
   140003d53:	test   rax,rax
   140003d56:	jne    0x140003d5f
   140003d58:	call   QWORD PTR [rip+0x324ba]        # 0x140036218
   140003d5e:	int3   
   140003d5f:	add    rsp,0x28
   140003d63:	ret    
   140003d64:	int3   
   140003d65:	int3   
   140003d66:	int3   
   140003d67:	int3   
   140003d68:	int3   
   140003d69:	int3   
   140003d6a:	int3   
   140003d6b:	int3   
   140003d6c:	int3   
   140003d6d:	int3   
   140003d6e:	int3   
   140003d6f:	int3   
   140003d70:	sub    rsp,0x28
   140003d74:	xor    eax,eax
   140003d76:	test   rcx,rcx
   140003d79:	je     0x140003da3
   140003d7b:	movabs rax,0x2aaaaaaaaaaaaaa
   140003d85:	cmp    rcx,rax
   140003d88:	ja     0x140003d9c
   140003d8a:	lea    rcx,[rcx+rcx*2]
   140003d8e:	shl    rcx,0x5
   140003d92:	call   0x14003027c
   140003d97:	test   rax,rax
   140003d9a:	jne    0x140003da3
   140003d9c:	call   QWORD PTR [rip+0x32476]        # 0x140036218
   140003da2:	int3   
   140003da3:	add    rsp,0x28
   140003da7:	ret    
   140003da8:	int3   
   140003da9:	int3   
   140003daa:	int3   
   140003dab:	int3   
   140003dac:	int3   
   140003dad:	int3   
   140003dae:	int3   
   140003daf:	int3   
   140003db0:	sub    rsp,0x28
   140003db4:	xor    eax,eax
   140003db6:	test   rcx,rcx
   140003db9:	je     0x140003ddf
   140003dbb:	movabs rax,0x7ffffffffffffff
   140003dc5:	cmp    rcx,rax
   140003dc8:	ja     0x140003dd8
   140003dca:	shl    rcx,0x5
   140003dce:	call   0x14003027c
   140003dd3:	test   rax,rax
   140003dd6:	jne    0x140003ddf
   140003dd8:	call   QWORD PTR [rip+0x3243a]        # 0x140036218
   140003dde:	int3   
   140003ddf:	add    rsp,0x28
   140003de3:	ret    
   140003de4:	int3   
   140003de5:	int3   
   140003de6:	int3   
   140003de7:	int3   
   140003de8:	int3   
   140003de9:	int3   
   140003dea:	int3   
   140003deb:	int3   
   140003dec:	int3   
   140003ded:	int3   
   140003dee:	int3   
   140003def:	int3   
   140003df0:	rex push rdi
   140003df2:	sub    rsp,0x40
   140003df6:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140003dff:	mov    QWORD PTR [rsp+0x50],rbx
   140003e04:	mov    rdi,r9
   140003e07:	call   0x14001c530
   140003e0c:	mov    rbx,rax
   140003e0f:	mov    QWORD PTR [rsp+0x20],rax
   140003e14:	lea    rcx,[rax+0x10]
   140003e18:	mov    QWORD PTR [rsp+0x30],rcx
   140003e1d:	mov    QWORD PTR [rsp+0x38],rcx
   140003e22:	test   rcx,rcx
   140003e25:	je     0x140003e4a
   140003e27:	mov    QWORD PTR [rcx+0x18],0xf
   140003e2f:	mov    QWORD PTR [rcx+0x10],0x0
   140003e37:	mov    BYTE PTR [rcx],0x0
   140003e3a:	or     r9,0xffffffffffffffff
   140003e3e:	xor    r8d,r8d
   140003e41:	mov    rdx,rdi
   140003e44:	call   0x14001ef20
   140003e49:	nop
   140003e4a:	mov    rax,rbx
   140003e4d:	mov    rbx,QWORD PTR [rsp+0x50]
   140003e52:	add    rsp,0x40
   140003e56:	pop    rdi
   140003e57:	ret    
   140003e58:	int3   
   140003e59:	int3   
   140003e5a:	int3   
   140003e5b:	int3   
   140003e5c:	int3   
   140003e5d:	int3   
   140003e5e:	int3   
   140003e5f:	int3   
   140003e60:	rex push rbx
   140003e62:	sub    rsp,0x30
   140003e66:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140003e6f:	mov    rbx,r9
   140003e72:	call   0x14001c4d0
   140003e77:	mov    QWORD PTR [rsp+0x20],rax
   140003e7c:	lea    rdx,[rax+0x10]
   140003e80:	test   rdx,rdx
   140003e83:	je     0x140003e8b
   140003e85:	mov    rcx,QWORD PTR [rbx]
   140003e88:	mov    QWORD PTR [rdx],rcx
   140003e8b:	add    rsp,0x30
   140003e8f:	pop    rbx
   140003e90:	ret    
   140003e91:	int3   
   140003e92:	int3   
   140003e93:	int3   
   140003e94:	int3   
   140003e95:	int3   
   140003e96:	int3   
   140003e97:	int3   
   140003e98:	int3   
   140003e99:	int3   
   140003e9a:	int3   
   140003e9b:	int3   
   140003e9c:	int3   
   140003e9d:	int3   
   140003e9e:	int3   
   140003e9f:	int3   
   140003ea0:	mov    QWORD PTR [rsp+0x18],r8
   140003ea5:	mov    QWORD PTR [rsp+0x10],rdx
   140003eaa:	mov    QWORD PTR [rsp+0x8],rcx
   140003eaf:	push   rsi
   140003eb0:	push   rdi
   140003eb1:	push   r14
   140003eb3:	sub    rsp,0x30
   140003eb7:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140003ec0:	mov    QWORD PTR [rsp+0x68],rbx
   140003ec5:	mov    rax,r8
   140003ec8:	mov    rbx,rcx
   140003ecb:	sub    rax,rdx
   140003ece:	mov    rdi,QWORD PTR [rcx+0x10]
   140003ed2:	cmp    rdi,rax
   140003ed5:	ja     0x140003f03
   140003ed7:	cmp    QWORD PTR [rcx+0x18],rax
   140003edb:	je     0x140003f03
   140003edd:	mov    r8b,0x1
   140003ee0:	mov    rdx,rax
   140003ee3:	call   0x14001cc40
   140003ee8:	test   al,al
   140003eea:	je     0x140003f03
   140003eec:	mov    QWORD PTR [rbx+0x10],rdi
   140003ef0:	cmp    QWORD PTR [rbx+0x18],0x10
   140003ef5:	jb     0x140003efc
   140003ef7:	mov    rax,QWORD PTR [rbx]
   140003efa:	jmp    0x140003eff
   140003efc:	mov    rax,rbx
   140003eff:	mov    BYTE PTR [rax+rdi*1],0x0
   140003f03:	xor    r14d,r14d
   140003f06:	data16 nop WORD PTR [rax+rax*1+0x0]
   140003f10:	mov    rdx,QWORD PTR [rsp+0x58]
   140003f15:	cmp    rdx,QWORD PTR [rsp+0x60]
   140003f1a:	je     0x140003fc7
   140003f20:	movzx  esi,BYTE PTR [rdx]
   140003f23:	mov    r8,QWORD PTR [rbx+0x10]
   140003f27:	or     rax,0xffffffffffffffff
   140003f2b:	sub    rax,r8
   140003f2e:	cmp    rax,0x1
   140003f32:	ja     0x140003f41
   140003f34:	lea    rcx,[rip+0x389dd]        # 0x14003c918
   140003f3b:	call   QWORD PTR [rip+0x322df]        # 0x140036220
   140003f41:	lea    rdi,[r8+0x1]
   140003f45:	cmp    rdi,0xfffffffffffffffe
   140003f49:	jbe    0x140003f58
   140003f4b:	lea    rcx,[rip+0x389c6]        # 0x14003c918
   140003f52:	call   QWORD PTR [rip+0x322c8]        # 0x140036220
   140003f58:	mov    rax,QWORD PTR [rbx+0x18]
   140003f5c:	cmp    rax,rdi
   140003f5f:	jae    0x140003f6e
   140003f61:	mov    rdx,rdi
   140003f64:	mov    rcx,rbx
   140003f67:	call   0x14001c600
   140003f6c:	jmp    0x140003f8a
   140003f6e:	test   rdi,rdi
   140003f71:	jne    0x140003f8f
   140003f73:	mov    QWORD PTR [rbx+0x10],r14
   140003f77:	cmp    rax,0x10
   140003f7b:	jb     0x140003f82
   140003f7d:	mov    rax,QWORD PTR [rbx]
   140003f80:	jmp    0x140003f85
   140003f82:	mov    rax,rbx
   140003f85:	mov    BYTE PTR [rax],r14b
   140003f88:	jmp    0x140003fbd
   140003f8a:	test   rdi,rdi
   140003f8d:	je     0x140003fbd
   140003f8f:	mov    rcx,QWORD PTR [rbx+0x10]
   140003f93:	cmp    QWORD PTR [rbx+0x18],0x10
   140003f98:	jb     0x140003f9f
   140003f9a:	mov    rax,QWORD PTR [rbx]
   140003f9d:	jmp    0x140003fa2
   140003f9f:	mov    rax,rbx
   140003fa2:	mov    BYTE PTR [rax+rcx*1],sil
   140003fa6:	mov    QWORD PTR [rbx+0x10],rdi
   140003faa:	cmp    QWORD PTR [rbx+0x18],0x10
   140003faf:	jb     0x140003fb6
   140003fb1:	mov    rax,QWORD PTR [rbx]
   140003fb4:	jmp    0x140003fb9
   140003fb6:	mov    rax,rbx
   140003fb9:	mov    BYTE PTR [rax+rdi*1],r14b
   140003fbd:	inc    QWORD PTR [rsp+0x58]
   140003fc2:	jmp    0x140003f10
   140003fc7:	mov    rbx,QWORD PTR [rsp+0x68]
   140003fcc:	add    rsp,0x30
   140003fd0:	pop    r14
   140003fd2:	pop    rdi
   140003fd3:	pop    rsi
   140003fd4:	ret    
   140003fd5:	int3   
   140003fd6:	int3   
   140003fd7:	int3   
   140003fd8:	int3   
   140003fd9:	int3   
   140003fda:	int3   
   140003fdb:	int3   
   140003fdc:	int3   
   140003fdd:	int3   
   140003fde:	int3   
   140003fdf:	int3   
   140003fe0:	mov    QWORD PTR [rsp+0x8],rcx
   140003fe5:	push   rdi
   140003fe6:	push   r12
   140003fe8:	push   r13
   140003fea:	push   r14
   140003fec:	push   r15
   140003fee:	sub    rsp,0x30
   140003ff2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140003ffb:	mov    QWORD PTR [rsp+0x68],rbx
   140004000:	mov    QWORD PTR [rsp+0x70],rsi
   140004005:	mov    r15,r8
   140004008:	mov    rdi,rdx
   14000400b:	mov    rbx,rcx
   14000400e:	lea    r13,[rip+0x3a75b]        # 0x14003e770
   140004015:	xor    r12d,r12d
   140004018:	mov    rax,QWORD PTR [r15]
   14000401b:	cmp    QWORD PTR [rdi],rax
   14000401e:	jne    0x140004034
   140004020:	mov    BYTE PTR [rdi+0x10],0x1
   140004024:	cmp    DWORD PTR [rdi+0xc],r12d
   140004028:	sete   al
   14000402b:	test   al,al
   14000402d:	je     0x140004034
   14000402f:	jmp    0x1400040ef
   140004034:	cmp    BYTE PTR [rdi+0x8],r12b
   140004038:	jne    0x140004042
   14000403a:	mov    rcx,rdi
   14000403d:	call   0x140023310
   140004042:	movsx  rax,BYTE PTR [rdi+0x9]
   140004047:	movzx  r14d,BYTE PTR [rax+r13*1]
   14000404c:	mov    r8,QWORD PTR [rbx+0x10]
   140004050:	or     rax,0xffffffffffffffff
   140004054:	sub    rax,r8
   140004057:	cmp    rax,0x1
   14000405b:	ja     0x14000406a
   14000405d:	lea    rcx,[rip+0x388b4]        # 0x14003c918
   140004064:	call   QWORD PTR [rip+0x321b6]        # 0x140036220
   14000406a:	lea    rsi,[r8+0x1]
   14000406e:	cmp    rsi,0xfffffffffffffffe
   140004072:	jbe    0x140004081
   140004074:	lea    rcx,[rip+0x3889d]        # 0x14003c918
   14000407b:	call   QWORD PTR [rip+0x3219f]        # 0x140036220
   140004081:	mov    rax,QWORD PTR [rbx+0x18]
   140004085:	cmp    rax,rsi
   140004088:	jae    0x140004097
   14000408a:	mov    rdx,rsi
   14000408d:	mov    rcx,rbx
   140004090:	call   0x14001c600
   140004095:	jmp    0x1400040b3
   140004097:	test   rsi,rsi
   14000409a:	jne    0x1400040b8
   14000409c:	mov    QWORD PTR [rbx+0x10],r12
   1400040a0:	cmp    rax,0x10
   1400040a4:	jb     0x1400040ab
   1400040a6:	mov    rax,QWORD PTR [rbx]
   1400040a9:	jmp    0x1400040ae
   1400040ab:	mov    rax,rbx
   1400040ae:	mov    BYTE PTR [rax],r12b
   1400040b1:	jmp    0x1400040e6
   1400040b3:	test   rsi,rsi
   1400040b6:	je     0x1400040e6
   1400040b8:	mov    rcx,QWORD PTR [rbx+0x10]
   1400040bc:	cmp    QWORD PTR [rbx+0x18],0x10
   1400040c1:	jb     0x1400040c8
   1400040c3:	mov    rax,QWORD PTR [rbx]
   1400040c6:	jmp    0x1400040cb
   1400040c8:	mov    rax,rbx
   1400040cb:	mov    BYTE PTR [rax+rcx*1],r14b
   1400040cf:	mov    QWORD PTR [rbx+0x10],rsi
   1400040d3:	cmp    QWORD PTR [rbx+0x18],0x10
   1400040d8:	jb     0x1400040df
   1400040da:	mov    rax,QWORD PTR [rbx]
   1400040dd:	jmp    0x1400040e2
   1400040df:	mov    rax,rbx
   1400040e2:	mov    BYTE PTR [rax+rsi*1],r12b
   1400040e6:	mov    BYTE PTR [rdi+0x8],r12b
   1400040ea:	jmp    0x140004018
   1400040ef:	mov    rbx,QWORD PTR [rsp+0x68]
   1400040f4:	mov    rsi,QWORD PTR [rsp+0x70]
   1400040f9:	add    rsp,0x30
   1400040fd:	pop    r15
   1400040ff:	pop    r14
   140004101:	pop    r13
   140004103:	pop    r12
   140004105:	pop    rdi
   140004106:	ret    
   140004107:	int3   
   140004108:	int3   
   140004109:	int3   
   14000410a:	int3   
   14000410b:	int3   
   14000410c:	int3   
   14000410d:	int3   
   14000410e:	int3   
   14000410f:	int3   
   140004110:	sub    rsp,0x28
   140004114:	movzx  r9d,BYTE PTR [rsp+0x48]
   14000411a:	call   0x140004130
   14000411f:	add    rsp,0x28
   140004123:	ret    
   140004124:	int3   
   140004125:	int3   
   140004126:	int3   
   140004127:	int3   
   140004128:	int3   
   140004129:	int3   
   14000412a:	int3   
   14000412b:	int3   
   14000412c:	int3   
   14000412d:	int3   
   14000412e:	int3   
   14000412f:	int3   
   140004130:	mov    QWORD PTR [rsp+0x18],r8
   140004135:	mov    QWORD PTR [rsp+0x10],rdx
   14000413a:	mov    QWORD PTR [rsp+0x8],rcx
   14000413f:	push   rbx
   140004140:	sub    rsp,0x40
   140004144:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   14000414d:	mov    rbx,rcx
   140004150:	sub    r8,rdx
   140004153:	movabs rax,0x2aaaaaaaaaaaaaab
   14000415d:	imul   r8
   140004160:	sar    rdx,0x4
   140004164:	mov    rax,rdx
   140004167:	shr    rax,0x3f
   14000416b:	add    rdx,rax
   14000416e:	call   0x14001c3b0
   140004173:	test   al,al
   140004175:	je     0x14000419b
   140004177:	movzx  eax,BYTE PTR [rsp+0x60]
   14000417c:	mov    BYTE PTR [rsp+0x20],al
   140004180:	lea    r9,[rsp+0x30]
   140004185:	mov    r8,QWORD PTR [rbx]
   140004188:	mov    rdx,QWORD PTR [rsp+0x60]
   14000418d:	mov    rcx,QWORD PTR [rsp+0x58]
   140004192:	call   0x1400057e0
   140004197:	mov    QWORD PTR [rbx+0x8],rax
   14000419b:	add    rsp,0x40
   14000419f:	pop    rbx
   1400041a0:	ret    
   1400041a1:	int3   
   1400041a2:	int3   
   1400041a3:	int3   
   1400041a4:	int3   
   1400041a5:	int3   
   1400041a6:	int3   
   1400041a7:	int3   
   1400041a8:	int3   
   1400041a9:	int3   
   1400041aa:	int3   
   1400041ab:	int3   
   1400041ac:	int3   
   1400041ad:	int3   
   1400041ae:	int3   
   1400041af:	int3   
   1400041b0:	mov    QWORD PTR [rsp+0x8],rcx
   1400041b5:	push   r12
   1400041b7:	push   r14
   1400041b9:	push   r15
   1400041bb:	sub    rsp,0x30
   1400041bf:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400041c8:	mov    QWORD PTR [rsp+0x58],rbx
   1400041cd:	mov    QWORD PTR [rsp+0x60],rsi
   1400041d2:	mov    QWORD PTR [rsp+0x68],rdi
   1400041d7:	mov    r15,r8
   1400041da:	mov    rsi,rdx
   1400041dd:	mov    rbx,rcx
   1400041e0:	xor    r12d,r12d
   1400041e3:	mov    rax,QWORD PTR [r15]
   1400041e6:	cmp    QWORD PTR [rsi],rax
   1400041e9:	sete   al
   1400041ec:	test   al,al
   1400041ee:	jne    0x1400042aa
   1400041f4:	cmp    BYTE PTR [rsi+0x10],r12b
   1400041f8:	jne    0x140004202
   1400041fa:	mov    rcx,rsi
   1400041fd:	call   0x1400233b0
   140004202:	movzx  r14d,BYTE PTR [rsi+0x11]
   140004207:	mov    r8,QWORD PTR [rbx+0x10]
   14000420b:	or     rax,0xffffffffffffffff
   14000420f:	sub    rax,r8
   140004212:	cmp    rax,0x1
   140004216:	ja     0x140004225
   140004218:	lea    rcx,[rip+0x386f9]        # 0x14003c918
   14000421f:	call   QWORD PTR [rip+0x31ffb]        # 0x140036220
   140004225:	lea    rdi,[r8+0x1]
   140004229:	cmp    rdi,0xfffffffffffffffe
   14000422d:	jbe    0x14000423c
   14000422f:	lea    rcx,[rip+0x386e2]        # 0x14003c918
   140004236:	call   QWORD PTR [rip+0x31fe4]        # 0x140036220
   14000423c:	mov    rax,QWORD PTR [rbx+0x18]
   140004240:	cmp    rax,rdi
   140004243:	jae    0x140004252
   140004245:	mov    rdx,rdi
   140004248:	mov    rcx,rbx
   14000424b:	call   0x14001c600
   140004250:	jmp    0x14000426e
   140004252:	test   rdi,rdi
   140004255:	jne    0x140004273
   140004257:	mov    QWORD PTR [rbx+0x10],r12
   14000425b:	cmp    rax,0x10
   14000425f:	jb     0x140004266
   140004261:	mov    rax,QWORD PTR [rbx]
   140004264:	jmp    0x140004269
   140004266:	mov    rax,rbx
   140004269:	mov    BYTE PTR [rax],r12b
   14000426c:	jmp    0x1400042a1
   14000426e:	test   rdi,rdi
   140004271:	je     0x1400042a1
   140004273:	mov    rcx,QWORD PTR [rbx+0x10]
   140004277:	cmp    QWORD PTR [rbx+0x18],0x10
   14000427c:	jb     0x140004283
   14000427e:	mov    rax,QWORD PTR [rbx]
   140004281:	jmp    0x140004286
   140004283:	mov    rax,rbx
   140004286:	mov    BYTE PTR [rax+rcx*1],r14b
   14000428a:	mov    QWORD PTR [rbx+0x10],rdi
   14000428e:	cmp    QWORD PTR [rbx+0x18],0x10
   140004293:	jb     0x14000429a
   140004295:	mov    rax,QWORD PTR [rbx]
   140004298:	jmp    0x14000429d
   14000429a:	mov    rax,rbx
   14000429d:	mov    BYTE PTR [rax+rdi*1],r12b
   1400042a1:	mov    BYTE PTR [rsi+0x10],r12b
   1400042a5:	jmp    0x1400041e3
   1400042aa:	mov    rbx,QWORD PTR [rsp+0x58]
   1400042af:	mov    rsi,QWORD PTR [rsp+0x60]
   1400042b4:	mov    rdi,QWORD PTR [rsp+0x68]
   1400042b9:	add    rsp,0x30
   1400042bd:	pop    r15
   1400042bf:	pop    r14
   1400042c1:	pop    r12
   1400042c3:	ret    
   1400042c4:	int3   
   1400042c5:	int3   
   1400042c6:	int3   
   1400042c7:	int3   
   1400042c8:	int3   
   1400042c9:	int3   
   1400042ca:	int3   
   1400042cb:	int3   
   1400042cc:	int3   
   1400042cd:	int3   
   1400042ce:	int3   
   1400042cf:	int3   
   1400042d0:	movzx  r9d,BYTE PTR [rsp+0x20]
   1400042d6:	jmp    0x1400042e0
   1400042db:	int3   
   1400042dc:	int3   
   1400042dd:	int3   
   1400042de:	int3   
   1400042df:	int3   
   1400042e0:	cmp    rcx,rdx
   1400042e3:	je     0x1400043f6
   1400042e9:	push   rbp
   1400042ea:	sub    rsp,0x20
   1400042ee:	mov    QWORD PTR [rsp+0x30],rbx
   1400042f3:	mov    QWORD PTR [rsp+0x38],rsi
   1400042f8:	mov    QWORD PTR [rsp+0x40],rdi
   1400042fd:	mov    QWORD PTR [rsp+0x48],r14
   140004302:	mov    rbp,rdx
   140004305:	lea    rdi,[rcx+0x40]
   140004309:	xor    r14d,r14d
   14000430c:	nop    DWORD PTR [rax+0x0]
   140004310:	mov    rbx,QWORD PTR [rdi]
   140004313:	test   rbx,rbx
   140004316:	je     0x14000435b
   140004318:	mov    rsi,QWORD PTR [rdi+0x8]
   14000431c:	cmp    rbx,rsi
   14000431f:	je     0x140004348
   140004321:	cmp    QWORD PTR [rbx+0x18],0x10
   140004326:	jb     0x140004330
   140004328:	mov    rcx,QWORD PTR [rbx]
   14000432b:	call   0x140030282
   140004330:	mov    QWORD PTR [rbx+0x18],0xf
   140004338:	mov    QWORD PTR [rbx+0x10],r14
   14000433c:	mov    BYTE PTR [rbx],r14b
   14000433f:	add    rbx,0x20
   140004343:	cmp    rbx,rsi
   140004346:	jne    0x140004321
   140004348:	mov    rcx,QWORD PTR [rdi]
   14000434b:	call   0x140030282
   140004350:	mov    QWORD PTR [rdi],r14
   140004353:	mov    QWORD PTR [rdi+0x8],r14
   140004357:	mov    QWORD PTR [rdi+0x10],r14
   14000435b:	mov    rbx,QWORD PTR [rdi-0x18]
   14000435f:	test   rbx,rbx
   140004362:	je     0x1400043ac
   140004364:	mov    rsi,QWORD PTR [rdi-0x10]
   140004368:	cmp    rbx,rsi
   14000436b:	je     0x140004397
   14000436d:	nop    DWORD PTR [rax]
   140004370:	cmp    QWORD PTR [rbx+0x18],0x10
   140004375:	jb     0x14000437f
   140004377:	mov    rcx,QWORD PTR [rbx]
   14000437a:	call   0x140030282
   14000437f:	mov    QWORD PTR [rbx+0x18],0xf
   140004387:	mov    QWORD PTR [rbx+0x10],r14
   14000438b:	mov    BYTE PTR [rbx],r14b
   14000438e:	add    rbx,0x20
   140004392:	cmp    rbx,rsi
   140004395:	jne    0x140004370
   140004397:	mov    rcx,QWORD PTR [rdi-0x18]
   14000439b:	call   0x140030282
   1400043a0:	mov    QWORD PTR [rdi-0x18],r14
   1400043a4:	mov    QWORD PTR [rdi-0x10],r14
   1400043a8:	mov    QWORD PTR [rdi-0x8],r14
   1400043ac:	cmp    QWORD PTR [rdi-0x28],0x10
   1400043b1:	jb     0x1400043bc
   1400043b3:	mov    rcx,QWORD PTR [rdi-0x40]
   1400043b7:	call   0x140030282
   1400043bc:	mov    QWORD PTR [rdi-0x28],0xf
   1400043c4:	mov    QWORD PTR [rdi-0x30],r14
   1400043c8:	mov    BYTE PTR [rdi-0x40],r14b
   1400043cc:	add    rdi,0x60
   1400043d0:	lea    rax,[rdi-0x40]
   1400043d4:	cmp    rax,rbp
   1400043d7:	jne    0x140004310
   1400043dd:	mov    r14,QWORD PTR [rsp+0x48]
   1400043e2:	mov    rdi,QWORD PTR [rsp+0x40]
   1400043e7:	mov    rsi,QWORD PTR [rsp+0x38]
   1400043ec:	mov    rbx,QWORD PTR [rsp+0x30]
   1400043f1:	add    rsp,0x20
   1400043f5:	pop    rbp
   1400043f6:	ret    
   1400043f7:	int3   
   1400043f8:	int3   
   1400043f9:	int3   
   1400043fa:	int3   
   1400043fb:	int3   
   1400043fc:	int3   
   1400043fd:	int3   
   1400043fe:	int3   
   1400043ff:	int3   
   140004400:	cmp    rcx,rdx
   140004403:	je     0x140004456
   140004405:	mov    QWORD PTR [rsp+0x10],rbx
   14000440a:	push   rdi
   14000440b:	sub    rsp,0x20
   14000440f:	mov    QWORD PTR [rsp+0x30],rsi
   140004414:	mov    rdi,rdx
   140004417:	mov    rbx,rcx
   14000441a:	xor    esi,esi
   14000441c:	nop    DWORD PTR [rax+0x0]
   140004420:	cmp    QWORD PTR [rbx+0x18],0x10
   140004425:	jb     0x14000442f
   140004427:	mov    rcx,QWORD PTR [rbx]
   14000442a:	call   0x140030282
   14000442f:	mov    QWORD PTR [rbx+0x18],0xf
   140004437:	mov    QWORD PTR [rbx+0x10],rsi
   14000443b:	mov    BYTE PTR [rbx],sil
   14000443e:	add    rbx,0x20
   140004442:	cmp    rbx,rdi
   140004445:	jne    0x140004420
   140004447:	mov    rsi,QWORD PTR [rsp+0x30]
   14000444c:	mov    rbx,QWORD PTR [rsp+0x38]
   140004451:	add    rsp,0x20
   140004455:	pop    rdi
   140004456:	ret    
   140004457:	int3   
   140004458:	int3   
   140004459:	int3   
   14000445a:	int3   
   14000445b:	int3   
   14000445c:	int3   
   14000445d:	int3   
   14000445e:	int3   
   14000445f:	int3   
   140004460:	cmp    rcx,rdx
   140004463:	je     0x1400044b6
   140004465:	mov    QWORD PTR [rsp+0x10],rbx
   14000446a:	push   rdi
   14000446b:	sub    rsp,0x20
   14000446f:	mov    QWORD PTR [rsp+0x30],rsi
   140004474:	mov    rdi,rdx
   140004477:	mov    rbx,rcx
   14000447a:	xor    esi,esi
   14000447c:	nop    DWORD PTR [rax+0x0]
   140004480:	cmp    QWORD PTR [rbx+0x18],0x10
   140004485:	jb     0x14000448f
   140004487:	mov    rcx,QWORD PTR [rbx]
   14000448a:	call   0x140030282
   14000448f:	mov    QWORD PTR [rbx+0x18],0xf
   140004497:	mov    QWORD PTR [rbx+0x10],rsi
   14000449b:	mov    BYTE PTR [rbx],sil
   14000449e:	add    rbx,0x20
   1400044a2:	cmp    rbx,rdi
   1400044a5:	jne    0x140004480
   1400044a7:	mov    rsi,QWORD PTR [rsp+0x30]
   1400044ac:	mov    rbx,QWORD PTR [rsp+0x38]
   1400044b1:	add    rsp,0x20
   1400044b5:	pop    rdi
   1400044b6:	ret    
   1400044b7:	int3   
   1400044b8:	int3   
   1400044b9:	int3   
   1400044ba:	int3   
   1400044bb:	int3   
   1400044bc:	int3   
   1400044bd:	int3   
   1400044be:	int3   
   1400044bf:	int3   
   1400044c0:	xor    eax,eax
   1400044c2:	ret    
   1400044c3:	int3   
   1400044c4:	int3   
   1400044c5:	int3   
   1400044c6:	int3   
   1400044c7:	int3   
   1400044c8:	int3   
   1400044c9:	int3   
   1400044ca:	int3   
   1400044cb:	int3   
   1400044cc:	int3   
   1400044cd:	int3   
   1400044ce:	int3   
   1400044cf:	int3   
   1400044d0:	xor    eax,eax
   1400044d2:	ret    
   1400044d3:	int3   
   1400044d4:	int3   
   1400044d5:	int3   
   1400044d6:	int3   
   1400044d7:	int3   
   1400044d8:	int3   
   1400044d9:	int3   
   1400044da:	int3   
   1400044db:	int3   
   1400044dc:	int3   
   1400044dd:	int3   
   1400044de:	int3   
   1400044df:	int3   
   1400044e0:	sub    rdx,rcx
   1400044e3:	sar    rdx,0x4
   1400044e7:	add    QWORD PTR [r8],rdx
   1400044ea:	ret    
   1400044eb:	int3   
   1400044ec:	int3   
   1400044ed:	int3   
   1400044ee:	int3   
   1400044ef:	int3   
   1400044f0:	sub    rdx,rcx
   1400044f3:	add    QWORD PTR [r8],rdx
   1400044f6:	ret    
   1400044f7:	int3   
   1400044f8:	int3   
   1400044f9:	int3   
   1400044fa:	int3   
   1400044fb:	int3   
   1400044fc:	int3   
   1400044fd:	int3   
   1400044fe:	int3   
   1400044ff:	int3   
   140004500:	sub    rdx,rcx
   140004503:	add    QWORD PTR [r8],rdx
   140004506:	ret    
   140004507:	int3   
   140004508:	int3   
   140004509:	int3   
   14000450a:	int3   
   14000450b:	int3   
   14000450c:	int3   
   14000450d:	int3   
   14000450e:	int3   
   14000450f:	int3   
   140004510:	sub    rdx,rcx
   140004513:	movabs rax,0x2aaaaaaaaaaaaaab
   14000451d:	imul   rdx
   140004520:	sar    rdx,0x4
   140004524:	mov    rax,rdx
   140004527:	shr    rax,0x3f
   14000452b:	add    rdx,rax
   14000452e:	add    QWORD PTR [r8],rdx
   140004531:	ret    
   140004532:	int3   
   140004533:	int3   
   140004534:	int3   
   140004535:	int3   
   140004536:	int3   
   140004537:	int3   
   140004538:	int3   
   140004539:	int3   
   14000453a:	int3   
   14000453b:	int3   
   14000453c:	int3   
   14000453d:	int3   
   14000453e:	int3   
   14000453f:	int3   
   140004540:	sub    rdx,rcx
   140004543:	sar    rdx,0x4
   140004547:	add    QWORD PTR [r8],rdx
   14000454a:	ret    
   14000454b:	int3   
   14000454c:	int3   
   14000454d:	int3   
   14000454e:	int3   
   14000454f:	int3   
   140004550:	sub    rdx,rcx
   140004553:	add    QWORD PTR [r8],rdx
   140004556:	ret    
   140004557:	int3   
   140004558:	int3   
   140004559:	int3   
   14000455a:	int3   
   14000455b:	int3   
   14000455c:	int3   
   14000455d:	int3   
   14000455e:	int3   
   14000455f:	int3   
   140004560:	mov    rdx,QWORD PTR [rdx]
   140004563:	cmp    QWORD PTR [rcx],rdx
   140004566:	sete   al
   140004569:	ret    
   14000456a:	int3   
   14000456b:	int3   
   14000456c:	int3   
   14000456d:	int3   
   14000456e:	int3   
   14000456f:	int3   
   140004570:	mov    rdx,QWORD PTR [rdx]
   140004573:	cmp    QWORD PTR [rcx],rdx
   140004576:	sete   al
   140004579:	ret    
   14000457a:	int3   
   14000457b:	int3   
   14000457c:	int3   
   14000457d:	int3   
   14000457e:	int3   
   14000457f:	int3   
   140004580:	rex push rbx
   140004582:	sub    rsp,0x20
   140004586:	mov    rbx,rcx
   140004589:	mov    rcx,rdx
   14000458c:	call   QWORD PTR [rip+0x31f46]        # 0x1400364d8
   140004592:	cmp    eax,0xffffffff
   140004595:	jne    0x14000459f
   140004597:	xor    al,al
   140004599:	add    rsp,0x20
   14000459d:	pop    rbx
   14000459e:	ret    
   14000459f:	mov    BYTE PTR [rbx],al
   1400045a1:	mov    al,0x1
   1400045a3:	add    rsp,0x20
   1400045a7:	pop    rbx
   1400045a8:	ret    
   1400045a9:	int3   
   1400045aa:	int3   
   1400045ab:	int3   
   1400045ac:	int3   
   1400045ad:	int3   
   1400045ae:	int3   
   1400045af:	int3   
   1400045b0:	rex push rbx
   1400045b2:	sub    rsp,0x20
   1400045b6:	mov    rbx,rdx
   1400045b9:	movzx  edx,BYTE PTR [r8]
   1400045bd:	mov    r8,rbx
   1400045c0:	sub    r8,rcx
   1400045c3:	call   QWORD PTR [rip+0x31ea7]        # 0x140036470
   1400045c9:	test   rax,rax
   1400045cc:	cmovne rbx,rax
   1400045d0:	mov    rax,rbx
   1400045d3:	add    rsp,0x20
   1400045d7:	pop    rbx
   1400045d8:	ret    
   1400045d9:	int3   
   1400045da:	int3   
   1400045db:	int3   
   1400045dc:	int3   
   1400045dd:	int3   
   1400045de:	int3   
   1400045df:	int3   
   1400045e0:	rex push rbx
   1400045e2:	sub    rsp,0x20
   1400045e6:	mov    rbx,rdx
   1400045e9:	movzx  edx,BYTE PTR [r8]
   1400045ed:	mov    r8,rbx
   1400045f0:	sub    r8,rcx
   1400045f3:	call   QWORD PTR [rip+0x31e77]        # 0x140036470
   1400045f9:	test   rax,rax
   1400045fc:	cmovne rbx,rax
   140004600:	mov    rax,rbx
   140004603:	add    rsp,0x20
   140004607:	pop    rbx
   140004608:	ret    
   140004609:	int3   
   14000460a:	int3   
   14000460b:	int3   
   14000460c:	int3   
   14000460d:	int3   
   14000460e:	int3   
   14000460f:	int3   
   140004610:	rex push rbx
   140004612:	sub    rsp,0x20
   140004616:	mov    rax,r8
   140004619:	mov    r8,rdx
   14000461c:	mov    rbx,rdx
   14000461f:	movzx  edx,BYTE PTR [rax]
   140004622:	sub    r8,rcx
   140004625:	call   QWORD PTR [rip+0x31e45]        # 0x140036470
   14000462b:	test   rax,rax
   14000462e:	cmovne rbx,rax
   140004632:	mov    rax,rbx
   140004635:	add    rsp,0x20
   140004639:	pop    rbx
   14000463a:	ret    
   14000463b:	int3   
   14000463c:	int3   
   14000463d:	int3   
   14000463e:	int3   
   14000463f:	int3   
   140004640:	rex push rbx
   140004642:	sub    rsp,0x20
   140004646:	mov    rax,r8
   140004649:	mov    r8,rdx
   14000464c:	mov    rbx,rdx
   14000464f:	movzx  edx,BYTE PTR [rax]
   140004652:	sub    r8,rcx
   140004655:	call   QWORD PTR [rip+0x31e15]        # 0x140036470
   14000465b:	test   rax,rax
   14000465e:	cmovne rbx,rax
   140004662:	mov    rax,rbx
   140004665:	add    rsp,0x20
   140004669:	pop    rbx
   14000466a:	ret    
   14000466b:	int3   
   14000466c:	int3   
   14000466d:	int3   
   14000466e:	int3   
   14000466f:	int3   
   140004670:	sub    rsp,0x28
   140004674:	movsx  ecx,cl
   140004677:	call   QWORD PTR [rip+0x31c63]        # 0x1400362e0
   14000467d:	cmp    eax,0xffffffff
   140004680:	setne  al
   140004683:	add    rsp,0x28
   140004687:	ret    
   140004688:	int3   
   140004689:	int3   
   14000468a:	int3   
   14000468b:	int3   
   14000468c:	int3   
   14000468d:	int3   
   14000468e:	int3   
   14000468f:	int3   
   140004690:	mov    rax,QWORD PTR [r8]
   140004693:	movzx  edx,BYTE PTR [rax]
   140004696:	mov    BYTE PTR [rcx+0x18],dl
   140004699:	mov    rax,QWORD PTR [r8+0x8]
   14000469d:	movzx  edx,BYTE PTR [rax]
   1400046a0:	mov    BYTE PTR [rcx+0x19],dl
   1400046a3:	ret    
   1400046a4:	int3   
   1400046a5:	int3   
   1400046a6:	int3   
   1400046a7:	int3   
   1400046a8:	int3   
   1400046a9:	int3   
   1400046aa:	int3   
   1400046ab:	int3   
   1400046ac:	int3   
   1400046ad:	int3   
   1400046ae:	int3   
   1400046af:	int3   
   1400046b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400046b5:	push   rdi
   1400046b6:	sub    rsp,0x20
   1400046ba:	mov    r9,r8
   1400046bd:	mov    r8,QWORD PTR [rdx+0x8]
   1400046c1:	mov    rbx,rdx
   1400046c4:	mov    rdi,rcx
   1400046c7:	call   0x140003df0
   1400046cc:	movabs rdx,0x555555555555554
   1400046d6:	mov    r8,rax
   1400046d9:	mov    rax,QWORD PTR [rdi+0x8]
   1400046dd:	sub    rdx,rax
   1400046e0:	cmp    rdx,0x1
   1400046e4:	jae    0x1400046f4
   1400046e6:	lea    rcx,[rip+0x3a06b]        # 0x14003e758
   1400046ed:	call   QWORD PTR [rip+0x31b2d]        # 0x140036220
   1400046f3:	int3   
   1400046f4:	inc    rax
   1400046f7:	mov    QWORD PTR [rdi+0x8],rax
   1400046fb:	mov    QWORD PTR [rbx+0x8],r8
   1400046ff:	mov    rax,QWORD PTR [r8+0x8]
   140004703:	mov    rbx,QWORD PTR [rsp+0x30]
   140004708:	mov    QWORD PTR [rax],r8
   14000470b:	add    rsp,0x20
   14000470f:	pop    rdi
   140004710:	ret    
   140004711:	int3   
   140004712:	int3   
   140004713:	int3   
   140004714:	int3   
   140004715:	int3   
   140004716:	int3   
   140004717:	int3   
   140004718:	int3   
   140004719:	int3   
   14000471a:	int3   
   14000471b:	int3   
   14000471c:	int3   
   14000471d:	int3   
   14000471e:	int3   
   14000471f:	int3   
   140004720:	mov    QWORD PTR [rsp+0x8],rbx
   140004725:	push   rdi
   140004726:	sub    rsp,0x20
   14000472a:	mov    r9,r8
   14000472d:	mov    r8,QWORD PTR [rdx+0x8]
   140004731:	mov    rbx,rdx
   140004734:	mov    rdi,rcx
   140004737:	call   0x140003e60
   14000473c:	movabs rdx,0xaaaaaaaaaaaaaa9
   140004746:	mov    r8,rax
   140004749:	mov    rax,QWORD PTR [rdi+0x8]
   14000474d:	sub    rdx,rax
   140004750:	cmp    rdx,0x1
   140004754:	jae    0x140004764
   140004756:	lea    rcx,[rip+0x39ffb]        # 0x14003e758
   14000475d:	call   QWORD PTR [rip+0x31abd]        # 0x140036220
   140004763:	int3   
   140004764:	inc    rax
   140004767:	mov    QWORD PTR [rdi+0x8],rax
   14000476b:	mov    QWORD PTR [rbx+0x8],r8
   14000476f:	mov    rax,QWORD PTR [r8+0x8]
   140004773:	mov    rbx,QWORD PTR [rsp+0x30]
   140004778:	mov    QWORD PTR [rax],r8
   14000477b:	add    rsp,0x20
   14000477f:	pop    rdi
   140004780:	ret    
   140004781:	int3   
   140004782:	int3   
   140004783:	int3   
   140004784:	int3   
   140004785:	int3   
   140004786:	int3   
   140004787:	int3   
   140004788:	int3   
   140004789:	int3   
   14000478a:	int3   
   14000478b:	int3   
   14000478c:	int3   
   14000478d:	int3   
   14000478e:	int3   
   14000478f:	int3   
   140004790:	mov    QWORD PTR [rsp+0x18],r8
   140004795:	mov    QWORD PTR [rsp+0x10],rdx
   14000479a:	mov    QWORD PTR [rsp+0x8],rcx
   14000479f:	push   rbx
   1400047a0:	push   rsi
   1400047a1:	push   rdi
   1400047a2:	push   r14
   1400047a4:	push   r15
   1400047a6:	sub    rsp,0x30
   1400047aa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400047b3:	mov    r14,r9
   1400047b6:	mov    rdi,r8
   1400047b9:	mov    rbx,rdx
   1400047bc:	mov    rsi,rcx
   1400047bf:	mov    QWORD PTR [rsp+0x78],r8
   1400047c4:	movabs r15,0x555555555555554
   1400047ce:	xchg   ax,ax
   1400047d0:	cmp    rdi,r14
   1400047d3:	je     0x140004829
   1400047d5:	mov    r9,rdi
   1400047d8:	mov    r8,QWORD PTR [rbx+0x8]
   1400047dc:	mov    rdx,rbx
   1400047df:	mov    rcx,rsi
   1400047e2:	call   0x140003df0
   1400047e7:	mov    rdx,rax
   1400047ea:	mov    rax,QWORD PTR [rsi+0x8]
   1400047ee:	mov    rcx,r15
   1400047f1:	sub    rcx,rax
   1400047f4:	cmp    rcx,0x1
   1400047f8:	jae    0x140004807
   1400047fa:	lea    rcx,[rip+0x39f57]        # 0x14003e758
   140004801:	call   QWORD PTR [rip+0x31a19]        # 0x140036220
   140004807:	inc    rax
   14000480a:	mov    QWORD PTR [rsi+0x8],rax
   14000480e:	mov    QWORD PTR [rbx+0x8],rdx
   140004812:	mov    rax,QWORD PTR [rdx+0x8]
   140004816:	mov    QWORD PTR [rax],rdx
   140004819:	add    rdi,0x20
   14000481d:	mov    QWORD PTR [rsp+0x70],rdi
   140004822:	mov    rbx,QWORD PTR [rsp+0x68]
   140004827:	jmp    0x1400047d0
   140004829:	add    rsp,0x30
   14000482d:	pop    r15
   14000482f:	pop    r14
   140004831:	pop    rdi
   140004832:	pop    rsi
   140004833:	pop    rbx
   140004834:	ret    
   140004835:	int3   
   140004836:	int3   
   140004837:	int3   
   140004838:	int3   
   140004839:	int3   
   14000483a:	int3   
   14000483b:	int3   
   14000483c:	int3   
   14000483d:	int3   
   14000483e:	int3   
   14000483f:	int3   
   140004840:	mov    r10,rdx
   140004843:	cmp    rcx,rdx
   140004846:	je     0x1400048b0
   140004848:	lea    r8,[rcx+0x10]
   14000484c:	cmp    r8,rdx
   14000484f:	je     0x1400048b0
   140004851:	movups xmm1,XMMWORD PTR [r8]
   140004855:	mov    r9,r8
   140004858:	movq   rdx,xmm1
   14000485d:	cmp    rdx,QWORD PTR [rcx]
   140004860:	jae    0x140004886
   140004862:	mov    rax,r8
   140004865:	cmp    rcx,r8
   140004868:	je     0x140004881
   14000486a:	nop    WORD PTR [rax+rax*1+0x0]
   140004870:	movups xmm0,XMMWORD PTR [rax-0x10]
   140004874:	sub    rax,0x10
   140004878:	movups XMMWORD PTR [rax+0x10],xmm0
   14000487c:	cmp    rax,rcx
   14000487f:	jne    0x140004870
   140004881:	movups XMMWORD PTR [rcx],xmm1
   140004884:	jmp    0x1400048a7
   140004886:	cmp    rdx,QWORD PTR [r8-0x10]
   14000488a:	lea    rax,[r8-0x10]
   14000488e:	jae    0x1400048a3
   140004890:	movups xmm0,XMMWORD PTR [rax]
   140004893:	movups XMMWORD PTR [r9],xmm0
   140004897:	mov    r9,rax
   14000489a:	sub    rax,0x10
   14000489e:	cmp    rdx,QWORD PTR [rax]
   1400048a1:	jb     0x140004890
   1400048a3:	movups XMMWORD PTR [r9],xmm1
   1400048a7:	add    r8,0x10
   1400048ab:	cmp    r8,r10
   1400048ae:	jne    0x140004851
   1400048b0:	ret    
   1400048b1:	int3   
   1400048b2:	int3   
   1400048b3:	int3   
   1400048b4:	int3   
   1400048b5:	int3   
   1400048b6:	int3   
   1400048b7:	int3   
   1400048b8:	int3   
   1400048b9:	int3   
   1400048ba:	int3   
   1400048bb:	int3   
   1400048bc:	int3   
   1400048bd:	int3   
   1400048be:	int3   
   1400048bf:	int3   
   1400048c0:	mov    r10,rdx
   1400048c3:	cmp    rcx,rdx
   1400048c6:	je     0x140004930
   1400048c8:	lea    r8,[rcx+0x10]
   1400048cc:	cmp    r8,rdx
   1400048cf:	je     0x140004930
   1400048d1:	movups xmm1,XMMWORD PTR [r8]
   1400048d5:	mov    r9,r8
   1400048d8:	movq   rdx,xmm1
   1400048dd:	cmp    rdx,QWORD PTR [rcx]
   1400048e0:	jae    0x140004906
   1400048e2:	mov    rax,r8
   1400048e5:	cmp    rcx,r8
   1400048e8:	je     0x140004901
   1400048ea:	nop    WORD PTR [rax+rax*1+0x0]
   1400048f0:	movups xmm0,XMMWORD PTR [rax-0x10]
   1400048f4:	sub    rax,0x10
   1400048f8:	movups XMMWORD PTR [rax+0x10],xmm0
   1400048fc:	cmp    rax,rcx
   1400048ff:	jne    0x1400048f0
   140004901:	movups XMMWORD PTR [rcx],xmm1
   140004904:	jmp    0x140004927
   140004906:	cmp    rdx,QWORD PTR [r8-0x10]
   14000490a:	lea    rax,[r8-0x10]
   14000490e:	jae    0x140004923
   140004910:	movups xmm0,XMMWORD PTR [rax]
   140004913:	movups XMMWORD PTR [r9],xmm0
   140004917:	mov    r9,rax
   14000491a:	sub    rax,0x10
   14000491e:	cmp    rdx,QWORD PTR [rax]
   140004921:	jb     0x140004910
   140004923:	movups XMMWORD PTR [r9],xmm1
   140004927:	add    r8,0x10
   14000492b:	cmp    r8,r10
   14000492e:	jne    0x1400048d1
   140004930:	ret    
   140004931:	int3   
   140004932:	int3   
   140004933:	int3   
   140004934:	int3   
   140004935:	int3   
   140004936:	int3   
   140004937:	int3   
   140004938:	int3   
   140004939:	int3   
   14000493a:	int3   
   14000493b:	int3   
   14000493c:	int3   
   14000493d:	int3   
   14000493e:	int3   
   14000493f:	int3   
   140004940:	mov    rax,rcx
   140004943:	ret    
   140004944:	int3   
   140004945:	int3   
   140004946:	int3   
   140004947:	int3   
   140004948:	int3   
   140004949:	int3   
   14000494a:	int3   
   14000494b:	int3   
   14000494c:	int3   
   14000494d:	int3   
   14000494e:	int3   
   14000494f:	int3   
   140004950:	mov    rax,rcx
   140004953:	ret    
   140004954:	int3   
   140004955:	int3   
   140004956:	int3   
   140004957:	int3   
   140004958:	int3   
   140004959:	int3   
   14000495a:	int3   
   14000495b:	int3   
   14000495c:	int3   
   14000495d:	int3   
   14000495e:	int3   
   14000495f:	int3   
   140004960:	mov    rax,rcx
   140004963:	ret    
   140004964:	int3   
   140004965:	int3   
   140004966:	int3   
   140004967:	int3   
   140004968:	int3   
   140004969:	int3   
   14000496a:	int3   
   14000496b:	int3   
   14000496c:	int3   
   14000496d:	int3   
   14000496e:	int3   
   14000496f:	int3   
   140004970:	mov    rax,rcx
   140004973:	ret    
   140004974:	int3   
   140004975:	int3   
   140004976:	int3   
   140004977:	int3   
   140004978:	int3   
   140004979:	int3   
   14000497a:	int3   
   14000497b:	int3   
   14000497c:	int3   
   14000497d:	int3   
   14000497e:	int3   
   14000497f:	int3   
   140004980:	movzx  eax,BYTE PTR [rsp+0x10]
   140004985:	ret    
   140004986:	int3   
   140004987:	int3   
   140004988:	int3   
   140004989:	int3   
   14000498a:	int3   
   14000498b:	int3   
   14000498c:	int3   
   14000498d:	int3   
   14000498e:	int3   
   14000498f:	int3   
   140004990:	mov    rax,rcx
   140004993:	ret    
   140004994:	int3   
   140004995:	int3   
   140004996:	int3   
   140004997:	int3   
   140004998:	int3   
   140004999:	int3   
   14000499a:	int3   
   14000499b:	int3   
   14000499c:	int3   
   14000499d:	int3   
   14000499e:	int3   
   14000499f:	int3   
   1400049a0:	movzx  eax,BYTE PTR [rsp+0x10]
   1400049a5:	ret    
   1400049a6:	int3   
   1400049a7:	int3   
   1400049a8:	int3   
   1400049a9:	int3   
   1400049aa:	int3   
   1400049ab:	int3   
   1400049ac:	int3   
   1400049ad:	int3   
   1400049ae:	int3   
   1400049af:	int3   
   1400049b0:	mov    rax,rcx
   1400049b3:	ret    
   1400049b4:	int3   
   1400049b5:	int3   
   1400049b6:	int3   
   1400049b7:	int3   
   1400049b8:	int3   
   1400049b9:	int3   
   1400049ba:	int3   
   1400049bb:	int3   
   1400049bc:	int3   
   1400049bd:	int3   
   1400049be:	int3   
   1400049bf:	int3   
   1400049c0:	mov    r9,rdx
   1400049c3:	mov    r10,rcx
   1400049c6:	sub    r9,rcx
   1400049c9:	sar    r9,0x4
   1400049cd:	test   r9,r9
   1400049d0:	jle    0x140004a13
   1400049d2:	mov    r8,QWORD PTR [r8]
   1400049d5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400049e0:	mov    rax,r9
   1400049e3:	cqo    
   1400049e5:	sub    rax,rdx
   1400049e8:	sar    rax,1
   1400049eb:	mov    rcx,rax
   1400049ee:	add    rcx,rcx
   1400049f1:	cmp    QWORD PTR [r10+rcx*8],r8
   1400049f5:	jae    0x140004a0b
   1400049f7:	lea    r10,[r10+rcx*8]
   1400049fb:	or     rcx,0xffffffffffffffff
   1400049ff:	sub    rcx,rax
   140004a02:	add    r10,0x10
   140004a06:	add    r9,rcx
   140004a09:	jmp    0x140004a0e
   140004a0b:	mov    r9,rax
   140004a0e:	test   r9,r9
   140004a11:	jg     0x1400049e0
   140004a13:	mov    rax,r10
   140004a16:	ret    
   140004a17:	int3   
   140004a18:	int3   
   140004a19:	int3   
   140004a1a:	int3   
   140004a1b:	int3   
   140004a1c:	int3   
   140004a1d:	int3   
   140004a1e:	int3   
   140004a1f:	int3   
   140004a20:	sub    rsp,0x18
   140004a24:	mov    r11,rdx
   140004a27:	mov    r9,rcx
   140004a2a:	sub    r11,rcx
   140004a2d:	sar    r11,0x4
   140004a31:	mov    rax,r11
   140004a34:	cqo    
   140004a36:	sub    rax,rdx
   140004a39:	sar    rax,1
   140004a3c:	mov    r10,rax
   140004a3f:	test   rax,rax
   140004a42:	jle    0x140004b4c
   140004a48:	mov    QWORD PTR [rsp+0x20],rbx
   140004a4d:	mov    QWORD PTR [rsp+0x28],rsi
   140004a52:	mov    QWORD PTR [rsp+0x10],rdi
   140004a57:	mov    rdi,rax
   140004a5a:	lea    rsi,[rax*2+0x2]
   140004a62:	shl    rdi,0x4
   140004a66:	add    rdi,rcx
   140004a69:	nop    DWORD PTR [rax+0x0]
   140004a70:	movups xmm0,XMMWORD PTR [rdi-0x10]
   140004a74:	sub    rsi,0x2
   140004a78:	dec    r10
   140004a7b:	lea    rdi,[rdi-0x10]
   140004a7f:	mov    r8,r10
   140004a82:	mov    rax,rsi
   140004a85:	movups xmm1,xmm0
   140004a88:	movups XMMWORD PTR [rsp],xmm0
   140004a8c:	cmp    rsi,r11
   140004a8f:	jge    0x140004ac8
   140004a91:	mov    rdx,rax
   140004a94:	add    rdx,rdx
   140004a97:	mov    rcx,QWORD PTR [r9+rdx*8-0x10]
   140004a9c:	cmp    QWORD PTR [r9+rdx*8],rcx
   140004aa0:	jae    0x140004aa5
   140004aa2:	dec    rax
   140004aa5:	add    r8,r8
   140004aa8:	mov    rcx,rax
   140004aab:	add    rcx,rcx
   140004aae:	movups xmm0,XMMWORD PTR [r9+rcx*8]
   140004ab3:	movups XMMWORD PTR [r9+r8*8],xmm0
   140004ab8:	mov    r8,rax
   140004abb:	lea    rax,[rax*2+0x2]
   140004ac3:	cmp    rax,r11
   140004ac6:	jl     0x140004a91
   140004ac8:	cmp    rax,r11
   140004acb:	jne    0x140004ae5
   140004acd:	mov    rax,r11
   140004ad0:	add    rax,rax
   140004ad3:	add    r8,r8
   140004ad6:	movups xmm0,XMMWORD PTR [r9+rax*8-0x10]
   140004adc:	movups XMMWORD PTR [r9+r8*8],xmm0
   140004ae1:	lea    r8,[r11-0x1]
   140004ae5:	lea    rax,[r8-0x1]
   140004ae9:	cqo    
   140004aeb:	sub    rax,rdx
   140004aee:	sar    rax,1
   140004af1:	cmp    r10,r8
   140004af4:	jge    0x140004b2c
   140004af6:	mov    rbx,QWORD PTR [rsp]
   140004afa:	nop    WORD PTR [rax+rax*1+0x0]
   140004b00:	mov    rcx,rax
   140004b03:	add    rcx,rcx
   140004b06:	cmp    QWORD PTR [r9+rcx*8],rbx
   140004b0a:	jae    0x140004b2c
   140004b0c:	movups xmm0,XMMWORD PTR [r9+rcx*8]
   140004b11:	add    r8,r8
   140004b14:	movups XMMWORD PTR [r9+r8*8],xmm0
   140004b19:	mov    r8,rax
   140004b1c:	dec    rax
   140004b1f:	cqo    
   140004b21:	sub    rax,rdx
   140004b24:	sar    rax,1
   140004b27:	cmp    r10,r8
   140004b2a:	jl     0x140004b00
   140004b2c:	add    r8,r8
   140004b2f:	movups XMMWORD PTR [r9+r8*8],xmm1
   140004b34:	test   r10,r10
   140004b37:	jg     0x140004a70
   140004b3d:	mov    rdi,QWORD PTR [rsp+0x10]
   140004b42:	mov    rsi,QWORD PTR [rsp+0x28]
   140004b47:	mov    rbx,QWORD PTR [rsp+0x20]
   140004b4c:	add    rsp,0x18
   140004b50:	ret    
   140004b51:	int3   
   140004b52:	int3   
   140004b53:	int3   
   140004b54:	int3   
   140004b55:	int3   
   140004b56:	int3   
   140004b57:	int3   
   140004b58:	int3   
   140004b59:	int3   
   140004b5a:	int3   
   140004b5b:	int3   
   140004b5c:	int3   
   140004b5d:	int3   
   140004b5e:	int3   
   140004b5f:	int3   
   140004b60:	movzx  eax,cl
   140004b63:	ret    
   140004b64:	int3   
   140004b65:	int3   
   140004b66:	int3   
   140004b67:	int3   
   140004b68:	int3   
   140004b69:	int3   
   140004b6a:	int3   
   140004b6b:	int3   
   140004b6c:	int3   
   140004b6d:	int3   
   140004b6e:	int3   
   140004b6f:	int3   
   140004b70:	mov    QWORD PTR [rsp+0x8],rbx
   140004b75:	push   rdi
   140004b76:	sub    rsp,0x20
   140004b7a:	mov    rdi,rcx
   140004b7d:	or     rbx,0xffffffffffffffff
   140004b81:	inc    rbx
   140004b84:	cmp    BYTE PTR [rcx+rbx*1],0x0
   140004b88:	jne    0x140004b81
   140004b8a:	inc    rbx
   140004b8d:	mov    rcx,rbx
   140004b90:	call   0x14002ff08
   140004b95:	test   rbx,rbx
   140004b98:	je     0x140004bb0
   140004b9a:	mov    rdx,rax
   140004b9d:	sub    rdx,rdi
   140004ba0:	movzx  ecx,BYTE PTR [rdi]
   140004ba3:	lea    rdi,[rdi+0x1]
   140004ba7:	mov    BYTE PTR [rdx+rdi*1-0x1],cl
   140004bab:	dec    rbx
   140004bae:	jne    0x140004ba0
   140004bb0:	mov    rbx,QWORD PTR [rsp+0x30]
   140004bb5:	add    rsp,0x20
   140004bb9:	pop    rdi
   140004bba:	ret    
   140004bbb:	int3   
   140004bbc:	int3   
   140004bbd:	int3   
   140004bbe:	int3   
   140004bbf:	int3   
   140004bc0:	mov    rax,QWORD PTR [rcx]
   140004bc3:	cmp    QWORD PTR [rdx],rax
   140004bc6:	jae    0x140004bd4
   140004bc8:	movups xmm0,XMMWORD PTR [rcx]
   140004bcb:	movups xmm1,XMMWORD PTR [rdx]
   140004bce:	movups XMMWORD PTR [rdx],xmm0
   140004bd1:	movups XMMWORD PTR [rcx],xmm1
   140004bd4:	mov    rax,QWORD PTR [rdx]
   140004bd7:	cmp    QWORD PTR [r8],rax
   140004bda:	jae    0x140004bfb
   140004bdc:	movups xmm0,XMMWORD PTR [rdx]
   140004bdf:	movups xmm1,XMMWORD PTR [r8]
   140004be3:	movups XMMWORD PTR [r8],xmm0
   140004be7:	movups XMMWORD PTR [rdx],xmm1
   140004bea:	mov    rax,QWORD PTR [rcx]
   140004bed:	cmp    QWORD PTR [rdx],rax
   140004bf0:	jae    0x140004bfb
   140004bf2:	movups xmm0,XMMWORD PTR [rcx]
   140004bf5:	movups XMMWORD PTR [rdx],xmm0
   140004bf8:	movups XMMWORD PTR [rcx],xmm1
   140004bfb:	ret    
   140004bfc:	int3   
   140004bfd:	int3   
   140004bfe:	int3   
   140004bff:	int3   
   140004c00:	rex push rbp
   140004c02:	mov    rbp,rsp
   140004c05:	mov    rax,r8
   140004c08:	mov    r9,rdx
   140004c0b:	sub    rax,rcx
   140004c0e:	mov    r10,rcx
   140004c11:	sar    rax,0x4
   140004c15:	cmp    rax,0x28
   140004c19:	jle    0x140004d6f
   140004c1f:	mov    rcx,QWORD PTR [rcx]
   140004c22:	inc    rax
   140004c25:	mov    QWORD PTR [rsp+0x10],rbx
   140004c2a:	cqo    
   140004c2c:	and    edx,0x7
   140004c2f:	add    rax,rdx
   140004c32:	sar    rax,0x3
   140004c36:	mov    r11,rax
   140004c39:	mov    rbx,rax
   140004c3c:	shl    r11,0x4
   140004c40:	shl    rbx,0x5
   140004c44:	cmp    QWORD PTR [r11+r10*1],rcx
   140004c48:	jae    0x140004c5c
   140004c4a:	movups xmm0,XMMWORD PTR [r10]
   140004c4e:	movups xmm1,XMMWORD PTR [r11+r10*1]
   140004c53:	movups XMMWORD PTR [r11+r10*1],xmm0
   140004c58:	movups XMMWORD PTR [r10],xmm1
   140004c5c:	mov    rax,QWORD PTR [r11+r10*1]
   140004c60:	cmp    QWORD PTR [rbx+r10*1],rax
   140004c64:	jae    0x140004c90
   140004c66:	movups xmm0,XMMWORD PTR [r11+r10*1]
   140004c6b:	movups xmm1,XMMWORD PTR [rbx+r10*1]
   140004c70:	movups XMMWORD PTR [rbx+r10*1],xmm0
   140004c75:	movups XMMWORD PTR [r11+r10*1],xmm1
   140004c7a:	mov    rax,QWORD PTR [r10]
   140004c7d:	cmp    QWORD PTR [r11+r10*1],rax
   140004c81:	jae    0x140004c90
   140004c83:	movups xmm0,XMMWORD PTR [r10]
   140004c87:	movups XMMWORD PTR [r11+r10*1],xmm0
   140004c8c:	movups XMMWORD PTR [r10],xmm1
   140004c90:	mov    rcx,r9
   140004c93:	sub    rcx,r11
   140004c96:	mov    rax,QWORD PTR [rcx]
   140004c99:	cmp    QWORD PTR [r9],rax
   140004c9c:	jae    0x140004cac
   140004c9e:	movups xmm0,XMMWORD PTR [rcx]
   140004ca1:	movups xmm1,XMMWORD PTR [r9]
   140004ca5:	movups XMMWORD PTR [r9],xmm0
   140004ca9:	movups XMMWORD PTR [rcx],xmm1
   140004cac:	mov    rax,QWORD PTR [r9]
   140004caf:	cmp    QWORD PTR [r11+r9*1],rax
   140004cb3:	jae    0x140004cd9
   140004cb5:	movups xmm0,XMMWORD PTR [r9]
   140004cb9:	movups xmm1,XMMWORD PTR [r11+r9*1]
   140004cbe:	movups XMMWORD PTR [r11+r9*1],xmm0
   140004cc3:	movups XMMWORD PTR [r9],xmm1
   140004cc7:	mov    rax,QWORD PTR [rcx]
   140004cca:	cmp    QWORD PTR [r9],rax
   140004ccd:	jae    0x140004cd9
   140004ccf:	movups xmm0,XMMWORD PTR [rcx]
   140004cd2:	movups XMMWORD PTR [r9],xmm0
   140004cd6:	movups XMMWORD PTR [rcx],xmm1
   140004cd9:	mov    rdx,r8
   140004cdc:	mov    rcx,r8
   140004cdf:	sub    rdx,rbx
   140004ce2:	mov    rbx,QWORD PTR [rsp+0x10]
   140004ce7:	sub    rcx,r11
   140004cea:	mov    rax,QWORD PTR [rdx]
   140004ced:	cmp    QWORD PTR [rcx],rax
   140004cf0:	jae    0x140004cfe
   140004cf2:	movups xmm0,XMMWORD PTR [rdx]
   140004cf5:	movups xmm1,XMMWORD PTR [rcx]
   140004cf8:	movups XMMWORD PTR [rcx],xmm0
   140004cfb:	movups XMMWORD PTR [rdx],xmm1
   140004cfe:	mov    rax,QWORD PTR [rcx]
   140004d01:	cmp    QWORD PTR [r8],rax
   140004d04:	jae    0x140004d25
   140004d06:	movups xmm0,XMMWORD PTR [rcx]
   140004d09:	movups xmm1,XMMWORD PTR [r8]
   140004d0d:	movups XMMWORD PTR [r8],xmm0
   140004d11:	movups XMMWORD PTR [rcx],xmm1
   140004d14:	mov    rax,QWORD PTR [rdx]
   140004d17:	cmp    QWORD PTR [rcx],rax
   140004d1a:	jae    0x140004d25
   140004d1c:	movups xmm0,XMMWORD PTR [rdx]
   140004d1f:	movups XMMWORD PTR [rcx],xmm0
   140004d22:	movups XMMWORD PTR [rdx],xmm1
   140004d25:	mov    rax,QWORD PTR [r11+r10*1]
   140004d29:	cmp    QWORD PTR [r9],rax
   140004d2c:	jae    0x140004d40
   140004d2e:	movups xmm0,XMMWORD PTR [r11+r10*1]
   140004d33:	movups xmm1,XMMWORD PTR [r9]
   140004d37:	movups XMMWORD PTR [r9],xmm0
   140004d3b:	movups XMMWORD PTR [r11+r10*1],xmm1
   140004d40:	mov    rax,QWORD PTR [r9]
   140004d43:	cmp    QWORD PTR [rcx],rax
   140004d46:	jae    0x140004daa
   140004d48:	movups xmm0,XMMWORD PTR [r9]
   140004d4c:	movups xmm1,XMMWORD PTR [rcx]
   140004d4f:	movups XMMWORD PTR [rcx],xmm0
   140004d52:	movups XMMWORD PTR [r9],xmm1
   140004d56:	mov    rax,QWORD PTR [r11+r10*1]
   140004d5a:	cmp    QWORD PTR [r9],rax
   140004d5d:	jae    0x140004daa
   140004d5f:	movups xmm0,XMMWORD PTR [r11+r10*1]
   140004d64:	movups XMMWORD PTR [r9],xmm0
   140004d68:	movups XMMWORD PTR [r11+r10*1],xmm1
   140004d6d:	pop    rbp
   140004d6e:	ret    
   140004d6f:	mov    rax,QWORD PTR [rcx]
   140004d72:	cmp    QWORD PTR [rdx],rax
   140004d75:	jae    0x140004d83
   140004d77:	movups xmm0,XMMWORD PTR [rcx]
   140004d7a:	movups xmm1,XMMWORD PTR [rdx]
   140004d7d:	movups XMMWORD PTR [rdx],xmm0
   140004d80:	movups XMMWORD PTR [rcx],xmm1
   140004d83:	mov    rax,QWORD PTR [rdx]
   140004d86:	cmp    QWORD PTR [r8],rax
   140004d89:	jae    0x140004daa
   140004d8b:	movups xmm0,XMMWORD PTR [rdx]
   140004d8e:	movups xmm1,XMMWORD PTR [r8]
   140004d92:	movups XMMWORD PTR [r8],xmm0
   140004d96:	movups XMMWORD PTR [rdx],xmm1
   140004d99:	mov    rax,QWORD PTR [rcx]
   140004d9c:	cmp    QWORD PTR [rdx],rax
   140004d9f:	jae    0x140004daa
   140004da1:	movups xmm0,XMMWORD PTR [rcx]
   140004da4:	movups XMMWORD PTR [rdx],xmm0
   140004da7:	movups XMMWORD PTR [rcx],xmm1
   140004daa:	pop    rbp
   140004dab:	ret    
   140004dac:	int3   
   140004dad:	int3   
   140004dae:	int3   
   140004daf:	int3   
   140004db0:	mov    rax,rcx
   140004db3:	ret    
   140004db4:	int3   
   140004db5:	int3   
   140004db6:	int3   
   140004db7:	int3   
   140004db8:	int3   
   140004db9:	int3   
   140004dba:	int3   
   140004dbb:	int3   
   140004dbc:	int3   
   140004dbd:	int3   
   140004dbe:	int3   
   140004dbf:	int3   
   140004dc0:	mov    rax,rcx
   140004dc3:	ret    
   140004dc4:	int3   
   140004dc5:	int3   
   140004dc6:	int3   
   140004dc7:	int3   
   140004dc8:	int3   
   140004dc9:	int3   
   140004dca:	int3   
   140004dcb:	int3   
   140004dcc:	int3   
   140004dcd:	int3   
   140004dce:	int3   
   140004dcf:	int3   
   140004dd0:	mov    rax,rcx
   140004dd3:	ret    
   140004dd4:	int3   
   140004dd5:	int3   
   140004dd6:	int3   
   140004dd7:	int3   
   140004dd8:	int3   
   140004dd9:	int3   
   140004dda:	int3   
   140004ddb:	int3   
   140004ddc:	int3   
   140004ddd:	int3   
   140004dde:	int3   
   140004ddf:	int3   
   140004de0:	mov    rax,rcx
   140004de3:	ret    
   140004de4:	int3   
   140004de5:	int3   
   140004de6:	int3   
   140004de7:	int3   
   140004de8:	int3   
   140004de9:	int3   
   140004dea:	int3   
   140004deb:	int3   
   140004dec:	int3   
   140004ded:	int3   
   140004dee:	int3   
   140004def:	int3   
   140004df0:	mov    rax,rcx
   140004df3:	ret    
   140004df4:	int3   
   140004df5:	int3   
   140004df6:	int3   
   140004df7:	int3   
   140004df8:	int3   
   140004df9:	int3   
   140004dfa:	int3   
   140004dfb:	int3   
   140004dfc:	int3   
   140004dfd:	int3   
   140004dfe:	int3   
   140004dff:	int3   
   140004e00:	mov    rax,rcx
   140004e03:	ret    
   140004e04:	int3   
   140004e05:	int3   
   140004e06:	int3   
   140004e07:	int3   
   140004e08:	int3   
   140004e09:	int3   
   140004e0a:	int3   
   140004e0b:	int3   
   140004e0c:	int3   
   140004e0d:	int3   
   140004e0e:	int3   
   140004e0f:	int3   
   140004e10:	mov    rax,rcx
   140004e13:	ret    
   140004e14:	int3   
   140004e15:	int3   
   140004e16:	int3   
   140004e17:	int3   
   140004e18:	int3   
   140004e19:	int3   
   140004e1a:	int3   
   140004e1b:	int3   
   140004e1c:	int3   
   140004e1d:	int3   
   140004e1e:	int3   
   140004e1f:	int3   
   140004e20:	mov    rax,rcx
   140004e23:	ret    
   140004e24:	int3   
   140004e25:	int3   
   140004e26:	int3   
   140004e27:	int3   
   140004e28:	int3   
   140004e29:	int3   
   140004e2a:	int3   
   140004e2b:	int3   
   140004e2c:	int3   
   140004e2d:	int3   
   140004e2e:	int3   
   140004e2f:	int3   
   140004e30:	mov    rax,rcx
   140004e33:	ret    
   140004e34:	int3   
   140004e35:	int3   
   140004e36:	int3   
   140004e37:	int3   
   140004e38:	int3   
   140004e39:	int3   
   140004e3a:	int3   
   140004e3b:	int3   
   140004e3c:	int3   
   140004e3d:	int3   
   140004e3e:	int3   
   140004e3f:	int3   
   140004e40:	cmp    rcx,rdx
   140004e43:	je     0x140004e65
   140004e45:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140004e50:	movups xmm0,XMMWORD PTR [rdx-0x10]
   140004e54:	sub    rdx,0x10
   140004e58:	sub    r8,0x10
   140004e5c:	movups XMMWORD PTR [r8],xmm0
   140004e60:	cmp    rdx,rcx
   140004e63:	jne    0x140004e50
   140004e65:	mov    rax,r8
   140004e68:	ret    
   140004e69:	int3   
   140004e6a:	int3   
   140004e6b:	int3   
   140004e6c:	int3   
   140004e6d:	int3   
   140004e6e:	int3   
   140004e6f:	int3   
   140004e70:	cmp    rcx,rdx
   140004e73:	je     0x140004e95
   140004e75:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140004e80:	movups xmm0,XMMWORD PTR [rdx-0x10]
   140004e84:	sub    rdx,0x10
   140004e88:	sub    r8,0x10
   140004e8c:	movups XMMWORD PTR [r8],xmm0
   140004e90:	cmp    rdx,rcx
   140004e93:	jne    0x140004e80
   140004e95:	mov    rax,r8
   140004e98:	ret    
   140004e99:	int3   
   140004e9a:	int3   
   140004e9b:	int3   
   140004e9c:	int3   
   140004e9d:	int3   
   140004e9e:	int3   
   140004e9f:	int3   
   140004ea0:	xor    r9d,r9d
   140004ea3:	jmp    0x140004ee0
   140004ea8:	int3   
   140004ea9:	int3   
   140004eaa:	int3   
   140004eab:	int3   
   140004eac:	int3   
   140004ead:	int3   
   140004eae:	int3   
   140004eaf:	int3   
   140004eb0:	movups xmm0,XMMWORD PTR [rcx]
   140004eb3:	movzx  eax,BYTE PTR [rsp+0x28]
   140004eb8:	sub    rdx,rcx
   140004ebb:	sar    rdx,0x4
   140004ebf:	mov    BYTE PTR [rsp+0x28],al
   140004ec3:	movups XMMWORD PTR [r8],xmm0
   140004ec7:	mov    r8,rdx
   140004eca:	xor    edx,edx
   140004ecc:	jmp    0x140003b40
   140004ed1:	int3   
   140004ed2:	int3   
   140004ed3:	int3   
   140004ed4:	int3   
   140004ed5:	int3   
   140004ed6:	int3   
   140004ed7:	int3   
   140004ed8:	int3   
   140004ed9:	int3   
   140004eda:	int3   
   140004edb:	int3   
   140004edc:	int3   
   140004edd:	int3   
   140004ede:	int3   
   140004edf:	int3   
   140004ee0:	sub    rsp,0x18
   140004ee4:	movups xmm0,XMMWORD PTR [rdx-0x10]
   140004ee8:	mov    r10,rdx
   140004eeb:	mov    eax,0x2
   140004ef0:	sub    r10,rcx
   140004ef3:	xor    r8d,r8d
   140004ef6:	mov    r9,rcx
   140004ef9:	sub    r10,0x10
   140004efd:	sar    r10,0x4
   140004f01:	movups xmm1,xmm0
   140004f04:	movups XMMWORD PTR [rsp],xmm0
   140004f08:	movups xmm0,XMMWORD PTR [rcx]
   140004f0b:	movups XMMWORD PTR [rdx-0x10],xmm0
   140004f0f:	cmp    rax,r10
   140004f12:	jge    0x140004f57
   140004f14:	nop    DWORD PTR [rax+0x0]
   140004f18:	nop    DWORD PTR [rax+rax*1+0x0]
   140004f20:	mov    rdx,rax
   140004f23:	add    rdx,rdx
   140004f26:	mov    rcx,QWORD PTR [r9+rdx*8-0x10]
   140004f2b:	cmp    QWORD PTR [r9+rdx*8],rcx
   140004f2f:	jae    0x140004f34
   140004f31:	dec    rax
   140004f34:	add    r8,r8
   140004f37:	mov    rcx,rax
   140004f3a:	add    rcx,rcx
   140004f3d:	movups xmm0,XMMWORD PTR [r9+rcx*8]
   140004f42:	movups XMMWORD PTR [r9+r8*8],xmm0
   140004f47:	mov    r8,rax
   140004f4a:	lea    rax,[rax*2+0x2]
   140004f52:	cmp    rax,r10
   140004f55:	jl     0x140004f20
   140004f57:	jne    0x140004f71
   140004f59:	mov    rax,r10
   140004f5c:	add    rax,rax
   140004f5f:	add    r8,r8
   140004f62:	movups xmm0,XMMWORD PTR [r9+rax*8-0x10]
   140004f68:	movups XMMWORD PTR [r9+r8*8],xmm0
   140004f6d:	lea    r8,[r10-0x1]
   140004f71:	lea    rax,[r8-0x1]
   140004f75:	cqo    
   140004f77:	sub    rax,rdx
   140004f7a:	sar    rax,1
   140004f7d:	test   r8,r8
   140004f80:	jle    0x140004fbc
   140004f82:	mov    r10,QWORD PTR [rsp]
   140004f86:	data16 nop WORD PTR [rax+rax*1+0x0]
   140004f90:	mov    rcx,rax
   140004f93:	add    rcx,rcx
   140004f96:	cmp    QWORD PTR [r9+rcx*8],r10
   140004f9a:	jae    0x140004fbc
   140004f9c:	movups xmm0,XMMWORD PTR [r9+rcx*8]
   140004fa1:	add    r8,r8
   140004fa4:	movups XMMWORD PTR [r9+r8*8],xmm0
   140004fa9:	mov    r8,rax
   140004fac:	dec    rax
   140004faf:	cqo    
   140004fb1:	sub    rax,rdx
   140004fb4:	sar    rax,1
   140004fb7:	test   r8,r8
   140004fba:	jg     0x140004f90
   140004fbc:	add    r8,r8
   140004fbf:	movups XMMWORD PTR [r9+r8*8],xmm1
   140004fc4:	add    rsp,0x18
   140004fc8:	ret    
   140004fc9:	int3   
   140004fca:	int3   
   140004fcb:	int3   
   140004fcc:	int3   
   140004fcd:	int3   
   140004fce:	int3   
   140004fcf:	int3   
   140004fd0:	movzx  eax,BYTE PTR [rsp+0x18]
   140004fd5:	ret    
   140004fd6:	int3   
   140004fd7:	int3   
   140004fd8:	int3   
   140004fd9:	int3   
   140004fda:	int3   
   140004fdb:	int3   
   140004fdc:	int3   
   140004fdd:	int3   
   140004fde:	int3   
   140004fdf:	int3   
   140004fe0:	movzx  eax,BYTE PTR [rsp+0x18]
   140004fe5:	ret    
   140004fe6:	int3   
   140004fe7:	int3   
   140004fe8:	int3   
   140004fe9:	int3   
   140004fea:	int3   
   140004feb:	int3   
   140004fec:	int3   
   140004fed:	int3   
   140004fee:	int3   
   140004fef:	int3   
   140004ff0:	movzx  eax,BYTE PTR [rsp+0x18]
   140004ff5:	ret    
   140004ff6:	int3   
   140004ff7:	int3   
   140004ff8:	int3   
   140004ff9:	int3   
   140004ffa:	int3   
   140004ffb:	int3   
   140004ffc:	int3   
   140004ffd:	int3   
   140004ffe:	int3   
   140004fff:	int3   
   140005000:	movzx  eax,BYTE PTR [rsp+0x18]
   140005005:	ret    
   140005006:	int3   
   140005007:	int3   
   140005008:	int3   
   140005009:	int3   
   14000500a:	int3   
   14000500b:	int3   
   14000500c:	int3   
   14000500d:	int3   
   14000500e:	int3   
   14000500f:	int3   
   140005010:	movzx  eax,BYTE PTR [rsp+0x18]
   140005015:	ret    
   140005016:	int3   
   140005017:	int3   
   140005018:	int3   
   140005019:	int3   
   14000501a:	int3   
   14000501b:	int3   
   14000501c:	int3   
   14000501d:	int3   
   14000501e:	int3   
   14000501f:	int3   
   140005020:	movzx  eax,BYTE PTR [rsp+0x18]
   140005025:	ret    
   140005026:	int3   
   140005027:	int3   
   140005028:	int3   
   140005029:	int3   
   14000502a:	int3   
   14000502b:	int3   
   14000502c:	int3   
   14000502d:	int3   
   14000502e:	int3   
   14000502f:	int3   
   140005030:	mov    r10,rdx
   140005033:	lea    rax,[rdx-0x1]
   140005037:	mov    r11,rcx
   14000503a:	cqo    
   14000503c:	sub    rax,rdx
   14000503f:	sar    rax,1
   140005042:	cmp    r8,r10
   140005045:	jge    0x14000507f
   140005047:	nop    WORD PTR [rax+rax*1+0x0]
   140005050:	mov    rcx,QWORD PTR [r9]
   140005053:	mov    rdx,rax
   140005056:	add    rdx,rdx
   140005059:	cmp    QWORD PTR [r11+rdx*8],rcx
   14000505d:	jae    0x14000507f
   14000505f:	movups xmm0,XMMWORD PTR [r11+rdx*8]
   140005064:	add    r10,r10
   140005067:	movups XMMWORD PTR [r11+r10*8],xmm0
   14000506c:	mov    r10,rax
   14000506f:	dec    rax
   140005072:	cqo    
   140005074:	sub    rax,rdx
   140005077:	sar    rax,1
   14000507a:	cmp    r8,r10
   14000507d:	jl     0x140005050
   14000507f:	movups xmm0,XMMWORD PTR [r9]
   140005083:	add    r10,r10
   140005086:	movups XMMWORD PTR [r11+r10*8],xmm0
   14000508b:	ret    
   14000508c:	int3   
   14000508d:	int3   
   14000508e:	int3   
   14000508f:	int3   
   140005090:	mov    QWORD PTR [rcx],rdx
   140005093:	mov    rax,rcx
   140005096:	ret    
   140005097:	int3   
   140005098:	int3   
   140005099:	int3   
   14000509a:	int3   
   14000509b:	int3   
   14000509c:	int3   
   14000509d:	int3   
   14000509e:	int3   
   14000509f:	int3   
   1400050a0:	mov    QWORD PTR [rcx],rdx
   1400050a3:	mov    rax,rcx
   1400050a6:	ret    
   1400050a7:	int3   
   1400050a8:	int3   
   1400050a9:	int3   
   1400050aa:	int3   
   1400050ab:	int3   
   1400050ac:	int3   
   1400050ad:	int3   
   1400050ae:	int3   
   1400050af:	int3   
   1400050b0:	mov    QWORD PTR [rcx],rdx
   1400050b3:	mov    rax,rcx
   1400050b6:	ret    
   1400050b7:	int3   
   1400050b8:	int3   
   1400050b9:	int3   
   1400050ba:	int3   
   1400050bb:	int3   
   1400050bc:	int3   
   1400050bd:	int3   
   1400050be:	int3   
   1400050bf:	int3   
   1400050c0:	mov    QWORD PTR [rdx],r8
   1400050c3:	mov    QWORD PTR [rcx],r8
   1400050c6:	mov    rax,rcx
   1400050c9:	ret    
   1400050ca:	int3   
   1400050cb:	int3   
   1400050cc:	int3   
   1400050cd:	int3   
   1400050ce:	int3   
   1400050cf:	int3   
   1400050d0:	mov    QWORD PTR [rdx],r8
   1400050d3:	mov    QWORD PTR [rcx],r8
   1400050d6:	mov    rax,rcx
   1400050d9:	ret    
   1400050da:	int3   
   1400050db:	int3   
   1400050dc:	int3   
   1400050dd:	int3   
   1400050de:	int3   
   1400050df:	int3   
   1400050e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400050e5:	mov    QWORD PTR [rsp+0x10],rbp
   1400050ea:	mov    QWORD PTR [rsp+0x18],rsi
   1400050ef:	mov    BYTE PTR [rsp+0x20],r9b
   1400050f4:	push   rdi
   1400050f5:	sub    rsp,0x40
   1400050f9:	movzx  eax,r9b
   1400050fd:	mov    r9,rdx
   140005100:	mov    rsi,r8
   140005103:	sub    r9,rcx
   140005106:	mov    rbx,rdx
   140005109:	mov    rdi,rcx
   14000510c:	sar    r9,0x4
   140005110:	cmp    r9,0x20
   140005114:	jle    0x1400051b8
   14000511a:	nop    WORD PTR [rax+rax*1+0x0]
   140005120:	test   rsi,rsi
   140005123:	jle    0x1400051e2
   140005129:	lea    rcx,[rsp+0x30]
   14000512e:	movzx  r9d,al
   140005132:	mov    r8,rbx
   140005135:	mov    rdx,rdi
   140005138:	call   0x140005470
   14000513d:	mov    rbp,QWORD PTR [rsp+0x38]
   140005142:	movzx  r9d,BYTE PTR [rsp+0x68]
   140005148:	mov    rax,rsi
   14000514b:	mov    rcx,rbx
   14000514e:	cqo    
   140005150:	sub    rcx,rbp
   140005153:	sub    rax,rdx
   140005156:	and    rcx,0xfffffffffffffff0
   14000515a:	sar    rax,1
   14000515d:	mov    rsi,rax
   140005160:	cqo    
   140005162:	sub    rax,rdx
   140005165:	mov    rdx,QWORD PTR [rsp+0x30]
   14000516a:	sar    rax,1
   14000516d:	add    rsi,rax
   140005170:	mov    rax,rdx
   140005173:	sub    rax,rdi
   140005176:	mov    r8,rsi
   140005179:	and    rax,0xfffffffffffffff0
   14000517d:	cmp    rax,rcx
   140005180:	jge    0x14000518f
   140005182:	mov    rcx,rdi
   140005185:	call   0x1400050e0
   14000518a:	mov    rdi,rbp
   14000518d:	jmp    0x14000519f
   14000518f:	mov    rdx,rbx
   140005192:	mov    rcx,rbp
   140005195:	call   0x1400050e0
   14000519a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000519f:	movzx  eax,BYTE PTR [rsp+0x68]
   1400051a4:	mov    r9,rbx
   1400051a7:	sub    r9,rdi
   1400051aa:	sar    r9,0x4
   1400051ae:	cmp    r9,0x20
   1400051b2:	jg     0x140005120
   1400051b8:	cmp    r9,0x1
   1400051bc:	jle    0x1400051cd
   1400051be:	movzx  r8d,al
   1400051c2:	mov    rdx,rbx
   1400051c5:	mov    rcx,rdi
   1400051c8:	call   0x1400048c0
   1400051cd:	mov    rbx,QWORD PTR [rsp+0x50]
   1400051d2:	mov    rbp,QWORD PTR [rsp+0x58]
   1400051d7:	mov    rsi,QWORD PTR [rsp+0x60]
   1400051dc:	add    rsp,0x40
   1400051e0:	pop    rdi
   1400051e1:	ret    
   1400051e2:	cmp    r9,0x20
   1400051e6:	jle    0x1400051b8
   1400051e8:	mov    rcx,rbx
   1400051eb:	sub    rcx,rdi
   1400051ee:	and    rcx,0xfffffffffffffff0
   1400051f2:	cmp    rcx,0x10
   1400051f6:	jle    0x140005218
   1400051f8:	xor    r9d,r9d
   1400051fb:	movzx  r8d,al
   1400051ff:	mov    rdx,rbx
   140005202:	mov    rcx,rdi
   140005205:	mov    QWORD PTR [rsp+0x20],0x0
   14000520e:	call   0x140004a20
   140005213:	movzx  eax,BYTE PTR [rsp+0x68]
   140005218:	movzx  r8d,al
   14000521c:	mov    rdx,rbx
   14000521f:	mov    rcx,rdi
   140005222:	call   0x140005230
   140005227:	jmp    0x1400051cd
   140005229:	int3   
   14000522a:	int3   
   14000522b:	int3   
   14000522c:	int3   
   14000522d:	int3   
   14000522e:	int3   
   14000522f:	int3   
   140005230:	mov    QWORD PTR [rsp+0x10],rbx
   140005235:	mov    QWORD PTR [rsp+0x18],rbp
   14000523a:	push   rdi
   14000523b:	sub    rsp,0x20
   14000523f:	mov    rax,rdx
   140005242:	movzx  ebx,r8b
   140005246:	mov    rdi,rdx
   140005249:	sub    rax,rcx
   14000524c:	mov    rbp,rcx
   14000524f:	and    rax,0xfffffffffffffff0
   140005253:	cmp    rax,0x10
   140005257:	jle    0x140005299
   140005259:	mov    QWORD PTR [rsp+0x30],rsi
   14000525e:	mov    rsi,rcx
   140005261:	neg    rsi
   140005264:	nop    DWORD PTR [rax+0x0]
   140005268:	nop    DWORD PTR [rax+rax*1+0x0]
   140005270:	xor    r9d,r9d
   140005273:	movzx  r8d,bl
   140005277:	mov    rdx,rdi
   14000527a:	mov    rcx,rbp
   14000527d:	call   0x140004ee0
   140005282:	sub    rdi,0x10
   140005286:	lea    rax,[rsi+rdi*1]
   14000528a:	and    rax,0xfffffffffffffff0
   14000528e:	cmp    rax,0x10
   140005292:	jg     0x140005270
   140005294:	mov    rsi,QWORD PTR [rsp+0x30]
   140005299:	mov    rbx,QWORD PTR [rsp+0x38]
   14000529e:	mov    rbp,QWORD PTR [rsp+0x40]
   1400052a3:	add    rsp,0x20
   1400052a7:	pop    rdi
   1400052a8:	ret    
   1400052a9:	int3   
   1400052aa:	int3   
   1400052ab:	int3   
   1400052ac:	int3   
   1400052ad:	int3   
   1400052ae:	int3   
   1400052af:	int3   
   1400052b0:	mov    rax,QWORD PTR [rdx]
   1400052b3:	mov    r8,QWORD PTR [rcx]
   1400052b6:	mov    QWORD PTR [rcx],rax
   1400052b9:	mov    QWORD PTR [rdx],r8
   1400052bc:	ret    
   1400052bd:	int3   
   1400052be:	int3   
   1400052bf:	int3   
   1400052c0:	mov    QWORD PTR [rsp+0x18],r8
   1400052c5:	push   rbx
   1400052c6:	sub    rsp,0x30
   1400052ca:	movzx  eax,BYTE PTR [rsp+0x50]
   1400052cf:	mov    rbx,r9
   1400052d2:	mov    r11,r8
   1400052d5:	mov    rcx,rdx
   1400052d8:	lea    r9,[rsp+0x58]
   1400052dd:	mov    r8,rbx
   1400052e0:	mov    rdx,r11
   1400052e3:	mov    BYTE PTR [rsp+0x20],al
   1400052e7:	call   0x140005670
   1400052ec:	add    rsp,0x30
   1400052f0:	pop    rbx
   1400052f1:	ret    
   1400052f2:	int3   
   1400052f3:	int3   
   1400052f4:	int3   
   1400052f5:	int3   
   1400052f6:	int3   
   1400052f7:	int3   
   1400052f8:	int3   
   1400052f9:	int3   
   1400052fa:	int3   
   1400052fb:	int3   
   1400052fc:	int3   
   1400052fd:	int3   
   1400052fe:	int3   
   1400052ff:	int3   
   140005300:	mov    QWORD PTR [rsp+0x18],r8
   140005305:	push   rbx
   140005306:	sub    rsp,0x30
   14000530a:	movzx  eax,BYTE PTR [rsp+0x50]
   14000530f:	mov    rbx,r9
   140005312:	mov    r11,r8
   140005315:	mov    rcx,rdx
   140005318:	lea    r9,[rsp+0x58]
   14000531d:	mov    r8,rbx
   140005320:	mov    rdx,r11
   140005323:	mov    BYTE PTR [rsp+0x20],al
   140005327:	call   0x140005740
   14000532c:	add    rsp,0x30
   140005330:	pop    rbx
   140005331:	ret    
   140005332:	int3   
   140005333:	int3   
   140005334:	int3   
   140005335:	int3   
   140005336:	int3   
   140005337:	int3   
   140005338:	int3   
   140005339:	int3   
   14000533a:	int3   
   14000533b:	int3   
   14000533c:	int3   
   14000533d:	int3   
   14000533e:	int3   
   14000533f:	int3   
   140005340:	mov    QWORD PTR [rsp+0x18],r8
   140005345:	push   rbx
   140005346:	sub    rsp,0x30
   14000534a:	movzx  eax,BYTE PTR [rsp+0x50]
   14000534f:	mov    rbx,r9
   140005352:	mov    r11,r8
   140005355:	mov    rcx,rdx
   140005358:	lea    r9,[rsp+0x58]
   14000535d:	mov    r8,rbx
   140005360:	mov    rdx,r11
   140005363:	mov    BYTE PTR [rsp+0x20],al
   140005367:	call   0x1400057e0
   14000536c:	add    rsp,0x30
   140005370:	pop    rbx
   140005371:	ret    
   140005372:	int3   
   140005373:	int3   
   140005374:	int3   
   140005375:	int3   
   140005376:	int3   
   140005377:	int3   
   140005378:	int3   
   140005379:	int3   
   14000537a:	int3   
   14000537b:	int3   
   14000537c:	int3   
   14000537d:	int3   
   14000537e:	int3   
   14000537f:	int3   
   140005380:	rex push rbx
   140005382:	sub    rsp,0x30
   140005386:	movzx  eax,BYTE PTR [rsp+0x58]
   14000538b:	mov    r10,r9
   14000538e:	mov    r11,r8
   140005391:	mov    rcx,rdx
   140005394:	mov    BYTE PTR [rsp+0x28],al
   140005398:	lea    r9,[rsp+0x58]
   14000539d:	mov    r8,r10
   1400053a0:	mov    rdx,r11
   1400053a3:	mov    QWORD PTR [rsp+0x20],0x0
   1400053ac:	call   0x1400058c0
   1400053b1:	add    rsp,0x30
   1400053b5:	pop    rbx
   1400053b6:	ret    
   1400053b7:	int3   
   1400053b8:	int3   
   1400053b9:	int3   
   1400053ba:	int3   
   1400053bb:	int3   
   1400053bc:	int3   
   1400053bd:	int3   
   1400053be:	int3   
   1400053bf:	int3   
   1400053c0:	mov    rax,rcx
   1400053c3:	ret    
   1400053c4:	int3   
   1400053c5:	int3   
   1400053c6:	int3   
   1400053c7:	int3   
   1400053c8:	int3   
   1400053c9:	int3   
   1400053ca:	int3   
   1400053cb:	int3   
   1400053cc:	int3   
   1400053cd:	int3   
   1400053ce:	int3   
   1400053cf:	int3   
   1400053d0:	mov    rax,rcx
   1400053d3:	ret    
   1400053d4:	int3   
   1400053d5:	int3   
   1400053d6:	int3   
   1400053d7:	int3   
   1400053d8:	int3   
   1400053d9:	int3   
   1400053da:	int3   
   1400053db:	int3   
   1400053dc:	int3   
   1400053dd:	int3   
   1400053de:	int3   
   1400053df:	int3   
   1400053e0:	mov    rax,rcx
   1400053e3:	ret    
   1400053e4:	int3   
   1400053e5:	int3   
   1400053e6:	int3   
   1400053e7:	int3   
   1400053e8:	int3   
   1400053e9:	int3   
   1400053ea:	int3   
   1400053eb:	int3   
   1400053ec:	int3   
   1400053ed:	int3   
   1400053ee:	int3   
   1400053ef:	int3   
   1400053f0:	mov    rax,rcx
   1400053f3:	ret    
   1400053f4:	int3   
   1400053f5:	int3   
   1400053f6:	int3   
   1400053f7:	int3   
   1400053f8:	int3   
   1400053f9:	int3   
   1400053fa:	int3   
   1400053fb:	int3   
   1400053fc:	int3   
   1400053fd:	int3   
   1400053fe:	int3   
   1400053ff:	int3   
   140005400:	mov    rax,rcx
   140005403:	ret    
   140005404:	int3   
   140005405:	int3   
   140005406:	int3   
   140005407:	int3   
   140005408:	int3   
   140005409:	int3   
   14000540a:	int3   
   14000540b:	int3   
   14000540c:	int3   
   14000540d:	int3   
   14000540e:	int3   
   14000540f:	int3   
   140005410:	mov    rax,rcx
   140005413:	ret    
   140005414:	int3   
   140005415:	int3   
   140005416:	int3   
   140005417:	int3   
   140005418:	int3   
   140005419:	int3   
   14000541a:	int3   
   14000541b:	int3   
   14000541c:	int3   
   14000541d:	int3   
   14000541e:	int3   
   14000541f:	int3   
   140005420:	mov    rax,rcx
   140005423:	ret    
   140005424:	int3   
   140005425:	int3   
   140005426:	int3   
   140005427:	int3   
   140005428:	int3   
   140005429:	int3   
   14000542a:	int3   
   14000542b:	int3   
   14000542c:	int3   
   14000542d:	int3   
   14000542e:	int3   
   14000542f:	int3   
   140005430:	mov    rax,rcx
   140005433:	ret    
   140005434:	int3   
   140005435:	int3   
   140005436:	int3   
   140005437:	int3   
   140005438:	int3   
   140005439:	int3   
   14000543a:	int3   
   14000543b:	int3   
   14000543c:	int3   
   14000543d:	int3   
   14000543e:	int3   
   14000543f:	int3   
   140005440:	mov    QWORD PTR [rcx],rdx
   140005443:	mov    rax,rcx
   140005446:	ret    
   140005447:	int3   
   140005448:	int3   
   140005449:	int3   
   14000544a:	int3   
   14000544b:	int3   
   14000544c:	int3   
   14000544d:	int3   
   14000544e:	int3   
   14000544f:	int3   
   140005450:	sub    rsp,0x28
   140005454:	movzx  ecx,BYTE PTR [rcx]
   140005457:	call   QWORD PTR [rip+0x3103b]        # 0x140036498
   14000545d:	cmp    eax,0xffffffff
   140005460:	setne  al
   140005463:	add    rsp,0x28
   140005467:	ret    
   140005468:	int3   
   140005469:	int3   
   14000546a:	int3   
   14000546b:	int3   
   14000546c:	int3   
   14000546d:	int3   
   14000546e:	int3   
   14000546f:	int3   
   140005470:	mov    QWORD PTR [rsp+0x8],rbx
   140005475:	mov    QWORD PTR [rsp+0x10],rsi
   14000547a:	mov    QWORD PTR [rsp+0x18],rdi
   14000547f:	push   r14
   140005481:	sub    rsp,0x20
   140005485:	mov    rsi,rdx
   140005488:	mov    rax,r8
   14000548b:	mov    rdi,r8
   14000548e:	sub    rax,rdx
   140005491:	mov    r14,rcx
   140005494:	add    r8,0xfffffffffffffff0
   140005498:	sar    rax,0x4
   14000549c:	mov    rcx,rsi
   14000549f:	cqo    
   1400054a1:	sub    rax,rdx
   1400054a4:	sar    rax,1
   1400054a7:	mov    rbx,rax
   1400054aa:	shl    rbx,0x4
   1400054ae:	add    rbx,rsi
   1400054b1:	mov    rdx,rbx
   1400054b4:	call   0x140004c00
   1400054b9:	lea    r8,[rbx+0x10]
   1400054bd:	cmp    rsi,rbx
   1400054c0:	jae    0x1400054ed
   1400054c2:	nop    DWORD PTR [rax+0x0]
   1400054c6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400054d0:	mov    rcx,QWORD PTR [rbx-0x10]
   1400054d4:	mov    rdx,QWORD PTR [rbx]
   1400054d7:	lea    rax,[rbx-0x10]
   1400054db:	cmp    rcx,rdx
   1400054de:	jb     0x1400054ed
   1400054e0:	cmp    rdx,rcx
   1400054e3:	jb     0x1400054ed
   1400054e5:	mov    rbx,rax
   1400054e8:	cmp    rsi,rax
   1400054eb:	jb     0x1400054d0
   1400054ed:	cmp    r8,rdi
   1400054f0:	jae    0x14000550b
   1400054f2:	mov    rcx,QWORD PTR [rbx]
   1400054f5:	mov    rax,QWORD PTR [r8]
   1400054f8:	cmp    rax,rcx
   1400054fb:	jb     0x14000550b
   1400054fd:	cmp    rcx,rax
   140005500:	jb     0x14000550b
   140005502:	add    r8,0x10
   140005506:	cmp    r8,rdi
   140005509:	jb     0x1400054f5
   14000550b:	mov    rdx,r8
   14000550e:	mov    r9,rbx
   140005511:	cmp    rdx,rdi
   140005514:	jae    0x140005555
   140005516:	lea    rcx,[r8-0x10]
   14000551a:	nop    WORD PTR [rax+rax*1+0x0]
   140005520:	mov    rax,QWORD PTR [rbx]
   140005523:	mov    r10,QWORD PTR [rdx]
   140005526:	cmp    rax,r10
   140005529:	jb     0x14000554c
   14000552b:	cmp    r10,rax
   14000552e:	jb     0x140005555
   140005530:	mov    rax,r8
   140005533:	add    rcx,0x10
   140005537:	add    r8,0x10
   14000553b:	cmp    rax,rdx
   14000553e:	je     0x14000554c
   140005540:	movups xmm0,XMMWORD PTR [rdx]
   140005543:	movups xmm1,XMMWORD PTR [rcx]
   140005546:	movups XMMWORD PTR [rcx],xmm0
   140005549:	movups XMMWORD PTR [rdx],xmm1
   14000554c:	add    rdx,0x10
   140005550:	cmp    rdx,rdi
   140005553:	jb     0x140005520
   140005555:	cmp    r9,rsi
   140005558:	jbe    0x140005595
   14000555a:	lea    rax,[r9-0x10]
   14000555e:	xchg   ax,ax
   140005560:	mov    rcx,QWORD PTR [rax]
   140005563:	mov    r10,QWORD PTR [rbx]
   140005566:	cmp    rcx,r10
   140005569:	jb     0x140005585
   14000556b:	cmp    r10,rcx
   14000556e:	jb     0x140005592
   140005570:	sub    rbx,0x10
   140005574:	cmp    rbx,rax
   140005577:	je     0x140005585
   140005579:	movups xmm0,XMMWORD PTR [rax]
   14000557c:	movups xmm1,XMMWORD PTR [rbx]
   14000557f:	movups XMMWORD PTR [rbx],xmm0
   140005582:	movups XMMWORD PTR [rax],xmm1
   140005585:	sub    r9,0x10
   140005589:	sub    rax,0x10
   14000558d:	cmp    rsi,r9
   140005590:	jb     0x140005560
   140005592:	cmp    r9,rsi
   140005595:	jne    0x1400055d6
   140005597:	cmp    rdx,rdi
   14000559a:	je     0x140005626
   1400055a0:	cmp    r8,rdx
   1400055a3:	je     0x1400055b3
   1400055a5:	movups xmm0,XMMWORD PTR [r8]
   1400055a9:	movups xmm1,XMMWORD PTR [rbx]
   1400055ac:	movups XMMWORD PTR [rbx],xmm0
   1400055af:	movups XMMWORD PTR [r8],xmm1
   1400055b3:	mov    rcx,rdx
   1400055b6:	mov    rax,rbx
   1400055b9:	add    r8,0x10
   1400055bd:	add    rbx,0x10
   1400055c1:	add    rdx,0x10
   1400055c5:	movups xmm0,XMMWORD PTR [rcx]
   1400055c8:	movups xmm1,XMMWORD PTR [rax]
   1400055cb:	movups XMMWORD PTR [rax],xmm0
   1400055ce:	movups XMMWORD PTR [rcx],xmm1
   1400055d1:	jmp    0x140005511
   1400055d6:	sub    r9,0x10
   1400055da:	cmp    rdx,rdi
   1400055dd:	jne    0x14000560e
   1400055df:	sub    rbx,0x10
   1400055e3:	cmp    r9,rbx
   1400055e6:	je     0x1400055f6
   1400055e8:	movups xmm0,XMMWORD PTR [rbx]
   1400055eb:	movups xmm1,XMMWORD PTR [r9]
   1400055ef:	movups XMMWORD PTR [r9],xmm0
   1400055f3:	movups XMMWORD PTR [rbx],xmm1
   1400055f6:	movups xmm0,XMMWORD PTR [r8-0x10]
   1400055fb:	movups xmm1,XMMWORD PTR [rbx]
   1400055fe:	sub    r8,0x10
   140005602:	movups XMMWORD PTR [rbx],xmm0
   140005605:	movups XMMWORD PTR [r8],xmm1
   140005609:	jmp    0x140005511
   14000560e:	movups xmm1,XMMWORD PTR [rdx]
   140005611:	movups xmm0,XMMWORD PTR [r9]
   140005615:	add    rdx,0x10
   140005619:	movups XMMWORD PTR [rdx-0x10],xmm0
   14000561d:	movups XMMWORD PTR [r9],xmm1
   140005621:	jmp    0x140005511
   140005626:	mov    rsi,QWORD PTR [rsp+0x38]
   14000562b:	mov    rdi,QWORD PTR [rsp+0x40]
   140005630:	mov    QWORD PTR [r14],rbx
   140005633:	mov    rbx,QWORD PTR [rsp+0x30]
   140005638:	mov    QWORD PTR [r14+0x8],r8
   14000563c:	mov    rax,r14
   14000563f:	add    rsp,0x20
   140005643:	pop    r14
   140005645:	ret    
   140005646:	int3   
   140005647:	int3   
   140005648:	int3   
   140005649:	int3   
   14000564a:	int3   
   14000564b:	int3   
   14000564c:	int3   
   14000564d:	int3   
   14000564e:	int3   
   14000564f:	int3   
   140005650:	sub    rsp,0x48
   140005654:	movzx  eax,BYTE PTR [rsp+0x30]
   140005659:	mov    BYTE PTR [rsp+0x20],al
   14000565d:	call   0x140005670
   140005662:	add    rsp,0x48
   140005666:	ret    
   140005667:	int3   
   140005668:	int3   
   140005669:	int3   
   14000566a:	int3   
   14000566b:	int3   
   14000566c:	int3   
   14000566d:	int3   
   14000566e:	int3   
   14000566f:	int3   
   140005670:	mov    QWORD PTR [rsp+0x20],r9
   140005675:	mov    QWORD PTR [rsp+0x18],r8
   14000567a:	push   rbx
   14000567b:	push   rsi
   14000567c:	push   rdi
   14000567d:	push   r14
   14000567f:	sub    rsp,0x38
   140005683:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000568c:	mov    rdi,r8
   14000568f:	mov    rsi,rdx
   140005692:	mov    rbx,rcx
   140005695:	mov    QWORD PTR [rsp+0x60],r8
   14000569a:	xor    r14d,r14d
   14000569d:	nop    DWORD PTR [rax]
   1400056a0:	cmp    rbx,rsi
   1400056a3:	je     0x14000570f
   1400056a5:	mov    QWORD PTR [rsp+0x68],rdi
   1400056aa:	test   rdi,rdi
   1400056ad:	je     0x140005700
   1400056af:	mov    QWORD PTR [rdi+0x18],0xf
   1400056b7:	mov    QWORD PTR [rdi+0x10],r14
   1400056bb:	mov    BYTE PTR [rdi],0x0
   1400056be:	or     r9,0xffffffffffffffff
   1400056c2:	xor    r8d,r8d
   1400056c5:	mov    rdx,rbx
   1400056c8:	mov    rcx,rdi
   1400056cb:	call   0x14001ef20
   1400056d0:	nop
   1400056d1:	mov    eax,DWORD PTR [rbx+0x20]
   1400056d4:	mov    DWORD PTR [rdi+0x20],eax
   1400056d7:	lea    rdx,[rbx+0x28]
   1400056db:	lea    rcx,[rdi+0x28]
   1400056df:	call   0x140015740
   1400056e4:	nop
   1400056e5:	lea    rdx,[rbx+0x40]
   1400056e9:	lea    rcx,[rdi+0x40]
   1400056ed:	call   0x140015740
   1400056f2:	movzx  eax,BYTE PTR [rbx+0x58]
   1400056f6:	mov    BYTE PTR [rdi+0x58],al
   1400056f9:	movzx  eax,BYTE PTR [rbx+0x59]
   1400056fd:	mov    BYTE PTR [rdi+0x59],al
   140005700:	add    rdi,0x60
   140005704:	mov    QWORD PTR [rsp+0x70],rdi
   140005709:	add    rbx,0x60
   14000570d:	jmp    0x1400056a0
   14000570f:	mov    rax,rdi
   140005712:	add    rsp,0x38
   140005716:	pop    r14
   140005718:	pop    rdi
   140005719:	pop    rsi
   14000571a:	pop    rbx
   14000571b:	ret    
   14000571c:	int3   
   14000571d:	int3   
   14000571e:	int3   
   14000571f:	int3   
   140005720:	sub    rsp,0x48
   140005724:	movzx  eax,BYTE PTR [rsp+0x30]
   140005729:	mov    BYTE PTR [rsp+0x20],al
   14000572d:	call   0x140005740
   140005732:	add    rsp,0x48
   140005736:	ret    
   140005737:	int3   
   140005738:	int3   
   140005739:	int3   
   14000573a:	int3   
   14000573b:	int3   
   14000573c:	int3   
   14000573d:	int3   
   14000573e:	int3   
   14000573f:	int3   
   140005740:	mov    QWORD PTR [rsp+0x20],r9
   140005745:	mov    QWORD PTR [rsp+0x18],r8
   14000574a:	push   rbx
   14000574b:	push   rsi
   14000574c:	push   rdi
   14000574d:	push   r14
   14000574f:	sub    rsp,0x38
   140005753:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000575c:	mov    rbx,r8
   14000575f:	mov    rsi,rdx
   140005762:	mov    rdi,rcx
   140005765:	mov    QWORD PTR [rsp+0x60],rbx
   14000576a:	xor    r14d,r14d
   14000576d:	nop    DWORD PTR [rax]
   140005770:	cmp    rdi,rsi
   140005773:	je     0x1400057b0
   140005775:	mov    QWORD PTR [rsp+0x68],rbx
   14000577a:	test   rbx,rbx
   14000577d:	je     0x1400057a1
   14000577f:	mov    QWORD PTR [rbx+0x18],0xf
   140005787:	mov    QWORD PTR [rbx+0x10],r14
   14000578b:	mov    BYTE PTR [rbx],0x0
   14000578e:	or     r9,0xffffffffffffffff
   140005792:	xor    r8d,r8d
   140005795:	mov    rdx,rdi
   140005798:	mov    rcx,rbx
   14000579b:	call   0x14001ef20
   1400057a0:	nop
   1400057a1:	add    rbx,0x20
   1400057a5:	mov    QWORD PTR [rsp+0x70],rbx
   1400057aa:	add    rdi,0x20
   1400057ae:	jmp    0x140005770
   1400057b0:	mov    rax,rbx
   1400057b3:	add    rsp,0x38
   1400057b7:	pop    r14
   1400057b9:	pop    rdi
   1400057ba:	pop    rsi
   1400057bb:	pop    rbx
   1400057bc:	ret    
   1400057bd:	int3   
   1400057be:	int3   
   1400057bf:	int3   
   1400057c0:	sub    rsp,0x48
   1400057c4:	movzx  eax,BYTE PTR [rsp+0x30]
   1400057c9:	mov    BYTE PTR [rsp+0x20],al
   1400057cd:	call   0x1400057e0
   1400057d2:	add    rsp,0x48
   1400057d6:	ret    
   1400057d7:	int3   
   1400057d8:	int3   
   1400057d9:	int3   
   1400057da:	int3   
   1400057db:	int3   
   1400057dc:	int3   
   1400057dd:	int3   
   1400057de:	int3   
   1400057df:	int3   
   1400057e0:	mov    QWORD PTR [rsp+0x20],r9
   1400057e5:	mov    QWORD PTR [rsp+0x18],r8
   1400057ea:	mov    QWORD PTR [rsp+0x10],rdx
   1400057ef:	mov    QWORD PTR [rsp+0x8],rcx
   1400057f4:	push   rbx
   1400057f5:	push   rsi
   1400057f6:	push   rdi
   1400057f7:	sub    rsp,0x40
   1400057fb:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140005804:	mov    rdi,r8
   140005807:	mov    rbx,rcx
   14000580a:	mov    QWORD PTR [rsp+0x20],r8
   14000580f:	xor    esi,esi
   140005811:	cmp    rbx,rdx
   140005814:	je     0x14000588f
   140005816:	mov    QWORD PTR [rsp+0x30],rdi
   14000581b:	test   rdi,rdi
   14000581e:	je     0x14000587b
   140005820:	mov    QWORD PTR [rdi+0x18],0xf
   140005828:	mov    QWORD PTR [rdi+0x10],rsi
   14000582c:	mov    BYTE PTR [rdi],0x0
   14000582f:	or     r9,0xffffffffffffffff
   140005833:	xor    r8d,r8d
   140005836:	mov    rdx,rbx
   140005839:	mov    rcx,rdi
   14000583c:	call   0x14001ef20
   140005841:	nop
   140005842:	mov    eax,DWORD PTR [rbx+0x20]
   140005845:	mov    DWORD PTR [rdi+0x20],eax
   140005848:	lea    rdx,[rbx+0x28]
   14000584c:	lea    rcx,[rdi+0x28]
   140005850:	call   0x140015740
   140005855:	nop
   140005856:	lea    rdx,[rbx+0x40]
   14000585a:	lea    rcx,[rdi+0x40]
   14000585e:	call   0x140015740
   140005863:	movzx  eax,BYTE PTR [rbx+0x58]
   140005867:	mov    BYTE PTR [rdi+0x58],al
   14000586a:	movzx  eax,BYTE PTR [rbx+0x59]
   14000586e:	mov    BYTE PTR [rdi+0x59],al
   140005871:	mov    rdx,QWORD PTR [rsp+0x68]
   140005876:	mov    rbx,QWORD PTR [rsp+0x60]
   14000587b:	add    rdi,0x60
   14000587f:	mov    QWORD PTR [rsp+0x70],rdi
   140005884:	add    rbx,0x60
   140005888:	mov    QWORD PTR [rsp+0x60],rbx
   14000588d:	jmp    0x140005811
   14000588f:	mov    rax,rdi
   140005892:	add    rsp,0x40
   140005896:	pop    rdi
   140005897:	pop    rsi
   140005898:	pop    rbx
   140005899:	ret    
   14000589a:	int3   
   14000589b:	int3   
   14000589c:	int3   
   14000589d:	int3   
   14000589e:	int3   
   14000589f:	int3   
   1400058a0:	sub    rsp,0x48
   1400058a4:	movzx  eax,BYTE PTR [rsp+0x30]
   1400058a9:	mov    BYTE PTR [rsp+0x28],al
   1400058ad:	mov    QWORD PTR [rsp+0x20],0x0
   1400058b6:	call   0x1400058c0
   1400058bb:	add    rsp,0x48
   1400058bf:	ret    
   1400058c0:	mov    QWORD PTR [rsp+0x20],r9
   1400058c5:	mov    QWORD PTR [rsp+0x18],r8
   1400058ca:	push   rsi
   1400058cb:	push   rdi
   1400058cc:	push   r14
   1400058ce:	sub    rsp,0x30
   1400058d2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400058db:	mov    QWORD PTR [rsp+0x58],rbx
   1400058e0:	mov    r14,r9
   1400058e3:	mov    rbx,r8
   1400058e6:	mov    rsi,rdx
   1400058e9:	mov    rdi,rcx
   1400058ec:	mov    QWORD PTR [rsp+0x50],rbx
   1400058f1:	cmp    rdi,rsi
   1400058f4:	je     0x140005913
   1400058f6:	mov    r8,rdi
   1400058f9:	mov    rdx,rbx
   1400058fc:	mov    rcx,r14
   1400058ff:	call   0x140007270
   140005904:	add    rbx,0x20
   140005908:	mov    QWORD PTR [rsp+0x60],rbx
   14000590d:	add    rdi,0x20
   140005911:	jmp    0x1400058f1
   140005913:	mov    rax,rbx
   140005916:	mov    rbx,QWORD PTR [rsp+0x58]
   14000591b:	add    rsp,0x30
   14000591f:	pop    r14
   140005921:	pop    rdi
   140005922:	pop    rsi
   140005923:	ret    
   140005924:	int3   
   140005925:	int3   
   140005926:	int3   
   140005927:	int3   
   140005928:	int3   
   140005929:	int3   
   14000592a:	int3   
   14000592b:	int3   
   14000592c:	int3   
   14000592d:	int3   
   14000592e:	int3   
   14000592f:	int3   
   140005930:	mov    QWORD PTR [rsp+0x10],rdx
   140005935:	sub    rsp,0x38
   140005939:	movzx  eax,BYTE PTR [rsp+0x48]
   14000593e:	mov    BYTE PTR [rsp+0x20],al
   140005942:	call   0x140005670
   140005947:	add    rsp,0x38
   14000594b:	ret    
   14000594c:	int3   
   14000594d:	int3   
   14000594e:	int3   
   14000594f:	int3   
   140005950:	mov    QWORD PTR [rsp+0x10],rdx
   140005955:	sub    rsp,0x38
   140005959:	movzx  eax,BYTE PTR [rsp+0x48]
   14000595e:	mov    BYTE PTR [rsp+0x20],al
   140005962:	call   0x140005740
   140005967:	add    rsp,0x38
   14000596b:	ret    
   14000596c:	int3   
   14000596d:	int3   
   14000596e:	int3   
   14000596f:	int3   
   140005970:	mov    QWORD PTR [rsp+0x10],rdx
   140005975:	sub    rsp,0x38
   140005979:	movzx  eax,BYTE PTR [rsp+0x48]
   14000597e:	mov    BYTE PTR [rsp+0x20],al
   140005982:	call   0x1400057e0
   140005987:	add    rsp,0x38
   14000598b:	ret    
   14000598c:	int3   
   14000598d:	int3   
   14000598e:	int3   
   14000598f:	int3   
   140005990:	sub    rsp,0x38
   140005994:	movzx  eax,BYTE PTR [rsp+0x50]
   140005999:	mov    BYTE PTR [rsp+0x28],al
   14000599d:	mov    QWORD PTR [rsp+0x20],0x0
   1400059a6:	call   0x1400058c0
   1400059ab:	add    rsp,0x38
   1400059af:	ret    
   1400059b0:	xor    eax,eax
   1400059b2:	ret    
   1400059b3:	int3   
   1400059b4:	int3   
   1400059b5:	int3   
   1400059b6:	int3   
   1400059b7:	int3   
   1400059b8:	int3   
   1400059b9:	int3   
   1400059ba:	int3   
   1400059bb:	int3   
   1400059bc:	int3   
   1400059bd:	int3   
   1400059be:	int3   
   1400059bf:	int3   
   1400059c0:	xor    eax,eax
   1400059c2:	ret    
   1400059c3:	int3   
   1400059c4:	int3   
   1400059c5:	int3   
   1400059c6:	int3   
   1400059c7:	int3   
   1400059c8:	int3   
   1400059c9:	int3   
   1400059ca:	int3   
   1400059cb:	int3   
   1400059cc:	int3   
   1400059cd:	int3   
   1400059ce:	int3   
   1400059cf:	int3   
   1400059d0:	mov    al,0x1
   1400059d2:	ret    
   1400059d3:	int3   
   1400059d4:	int3   
   1400059d5:	int3   
   1400059d6:	int3   
   1400059d7:	int3   
   1400059d8:	int3   
   1400059d9:	int3   
   1400059da:	int3   
   1400059db:	int3   
   1400059dc:	int3   
   1400059dd:	int3   
   1400059de:	int3   
   1400059df:	int3   
   1400059e0:	mov    al,0x1
   1400059e2:	ret    
   1400059e3:	int3   
   1400059e4:	int3   
   1400059e5:	int3   
   1400059e6:	int3   
   1400059e7:	int3   
   1400059e8:	int3   
   1400059e9:	int3   
   1400059ea:	int3   
   1400059eb:	int3   
   1400059ec:	int3   
   1400059ed:	int3   
   1400059ee:	int3   
   1400059ef:	int3   
   1400059f0:	mov    al,0x1
   1400059f2:	ret    
   1400059f3:	int3   
   1400059f4:	int3   
   1400059f5:	int3   
   1400059f6:	int3   
   1400059f7:	int3   
   1400059f8:	int3   
   1400059f9:	int3   
   1400059fa:	int3   
   1400059fb:	int3   
   1400059fc:	int3   
   1400059fd:	int3   
   1400059fe:	int3   
   1400059ff:	int3   
   140005a00:	rex push rdi
   140005a02:	sub    rsp,0x40
   140005a06:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140005a0f:	mov    QWORD PTR [rsp+0x50],rbx
   140005a14:	mov    QWORD PTR [rsp+0x58],rbp
   140005a19:	mov    QWORD PTR [rsp+0x60],rsi
   140005a1e:	mov    rdi,r8
   140005a21:	mov    rsi,rdx
   140005a24:	mov    rbp,rcx
   140005a27:	mov    cl,0x1
   140005a29:	call   QWORD PTR [rip+0x30849]        # 0x140036278
   140005a2f:	mov    rbx,rax
   140005a32:	mov    QWORD PTR [rsp+0x68],rax
   140005a37:	lea    rax,[rsp+0x68]
   140005a3c:	mov    QWORD PTR [rsp+0x30],rax
   140005a41:	mov    QWORD PTR [rsp+0x38],rbx
   140005a46:	mov    rax,QWORD PTR [rbx]
   140005a49:	mov    rcx,rbx
   140005a4c:	call   QWORD PTR [rax+0x8]
   140005a4f:	nop
   140005a50:	mov    rcx,QWORD PTR [rsp+0x68]
   140005a55:	test   rcx,rcx
   140005a58:	je     0x140005a74
   140005a5a:	mov    rax,QWORD PTR [rcx]
   140005a5d:	call   QWORD PTR [rax+0x10]
   140005a60:	test   rax,rax
   140005a63:	je     0x140005a74
   140005a65:	mov    r8,QWORD PTR [rax]
   140005a68:	mov    edx,0x1
   140005a6d:	mov    rcx,rax
   140005a70:	call   QWORD PTR [r8]
   140005a73:	nop
   140005a74:	mov    QWORD PTR [rsp+0x20],rbx
   140005a79:	mov    rax,QWORD PTR [rbx]
   140005a7c:	mov    rcx,rbx
   140005a7f:	call   QWORD PTR [rax+0x8]
   140005a82:	lea    r9,[rsp+0x20]
   140005a87:	mov    r8,rdi
   140005a8a:	mov    rdx,rsi
   140005a8d:	mov    rcx,rbp
   140005a90:	call   0x140005ad0
   140005a95:	mov    rdi,rax
   140005a98:	mov    r8,QWORD PTR [rbx]
   140005a9b:	mov    rcx,rbx
   140005a9e:	call   QWORD PTR [r8+0x10]
   140005aa2:	test   rax,rax
   140005aa5:	je     0x140005ab5
   140005aa7:	mov    r8,QWORD PTR [rax]
   140005aaa:	mov    edx,0x1
   140005aaf:	mov    rcx,rax
   140005ab2:	call   QWORD PTR [r8]
   140005ab5:	mov    rax,rdi
   140005ab8:	mov    rbx,QWORD PTR [rsp+0x50]
   140005abd:	mov    rbp,QWORD PTR [rsp+0x58]
   140005ac2:	mov    rsi,QWORD PTR [rsp+0x60]
   140005ac7:	add    rsp,0x40
   140005acb:	pop    rdi
   140005acc:	ret    
   140005acd:	int3   
   140005ace:	int3   
   140005acf:	int3   
   140005ad0:	mov    rax,rsp
   140005ad3:	mov    QWORD PTR [rax+0x20],r9
   140005ad7:	push   rdi
   140005ad8:	sub    rsp,0x60
   140005adc:	mov    QWORD PTR [rax-0x40],0xfffffffffffffffe
   140005ae4:	mov    QWORD PTR [rax+0x8],rbx
   140005ae8:	mov    QWORD PTR [rax+0x10],rbp
   140005aec:	mov    QWORD PTR [rax+0x18],rsi
   140005af0:	mov    rsi,r9
   140005af3:	mov    rbp,r8
   140005af6:	mov    rbx,rdx
   140005af9:	mov    rdi,rcx
   140005afc:	lea    rcx,[rax-0x38]
   140005b00:	call   0x140010e90
   140005b05:	nop
   140005b06:	mov    r8,rax
   140005b09:	mov    rdx,rbx
   140005b0c:	mov    rcx,rdi
   140005b0f:	call   0x14001dbe0
   140005b14:	mov    rbx,rax
   140005b17:	mov    rdi,QWORD PTR [rsp+0x50]
   140005b1c:	mov    QWORD PTR [rsp+0x20],rdi
   140005b21:	test   rdi,rdi
   140005b24:	je     0x140005b42
   140005b26:	lea    rcx,[rdi+0x11]
   140005b2a:	call   0x1400221d0
   140005b2f:	nop
   140005b30:	mov    rcx,QWORD PTR [rdi+0x8]
   140005b34:	call   0x140030282
   140005b39:	mov    rcx,rdi
   140005b3c:	call   0x140030282
   140005b41:	nop
   140005b42:	cmp    QWORD PTR [rsp+0x48],0x10
   140005b48:	jb     0x140005b54
   140005b4a:	mov    rcx,QWORD PTR [rsp+0x30]
   140005b4f:	call   0x140030282
   140005b54:	mov    QWORD PTR [rsp+0x48],0xf
   140005b5d:	mov    QWORD PTR [rsp+0x40],0x0
   140005b66:	mov    BYTE PTR [rsp+0x30],0x0
   140005b6b:	mov    rcx,QWORD PTR [rsi]
   140005b6e:	mov    QWORD PTR [rsp+0x20],rcx
   140005b73:	mov    rax,QWORD PTR [rcx]
   140005b76:	call   QWORD PTR [rax+0x8]
   140005b79:	lea    r8,[rsp+0x20]
   140005b7e:	mov    rdx,rbp
   140005b81:	mov    rcx,rbx
   140005b84:	call   0x14000c130
   140005b89:	nop
   140005b8a:	mov    rcx,QWORD PTR [rsi]
   140005b8d:	test   rcx,rcx
   140005b90:	je     0x140005bab
   140005b92:	mov    rax,QWORD PTR [rcx]
   140005b95:	call   QWORD PTR [rax+0x10]
   140005b98:	test   rax,rax
   140005b9b:	je     0x140005bab
   140005b9d:	mov    r8,QWORD PTR [rax]
   140005ba0:	mov    edx,0x1
   140005ba5:	mov    rcx,rax
   140005ba8:	call   QWORD PTR [r8]
   140005bab:	mov    rax,rbx
   140005bae:	mov    rbx,QWORD PTR [rsp+0x70]
   140005bb3:	mov    rbp,QWORD PTR [rsp+0x78]
   140005bb8:	mov    rsi,QWORD PTR [rsp+0x80]
   140005bc0:	add    rsp,0x60
   140005bc4:	pop    rdi
   140005bc5:	ret    
   140005bc6:	int3   
   140005bc7:	int3   
   140005bc8:	int3   
   140005bc9:	int3   
   140005bca:	int3   
   140005bcb:	int3   
   140005bcc:	int3   
   140005bcd:	int3   
   140005bce:	int3   
   140005bcf:	int3   
   140005bd0:	mov    rax,rsp
   140005bd3:	mov    DWORD PTR [rax+0x20],r9d
   140005bd7:	push   rbp
   140005bd8:	lea    rbp,[rax-0x4f]
   140005bdc:	sub    rsp,0xb0
   140005be3:	mov    QWORD PTR [rbp+0x37],0xfffffffffffffffe
   140005beb:	mov    QWORD PTR [rax+0x8],rbx
   140005bef:	mov    QWORD PTR [rax+0x10],rsi
   140005bf3:	mov    QWORD PTR [rax+0x18],rdi
   140005bf7:	mov    rax,r8
   140005bfa:	mov    rdi,rdx
   140005bfd:	mov    rbx,rcx
   140005c00:	lea    r8,[rip+0x36e4d]        # 0x14003ca54
   140005c07:	mov    rdx,rax
   140005c0a:	lea    rcx,[rbp+0x17]
   140005c0e:	call   0x140003520
   140005c13:	nop
   140005c14:	mov    QWORD PTR [rbp-0x1],0xf
   140005c1c:	xor    esi,esi
   140005c1e:	mov    QWORD PTR [rbp-0x9],rsi
   140005c22:	mov    BYTE PTR [rbp-0x19],sil
   140005c26:	lea    r8d,[rsi+0x3]
   140005c2a:	lea    rdx,[rip+0x36e2b]        # 0x14003ca5c
   140005c31:	lea    rcx,[rbp-0x19]
   140005c35:	call   0x14001f070
   140005c3a:	mov    BYTE PTR [rbp+0x7],0x2e
   140005c3e:	lea    rax,[rbp-0x19]
   140005c42:	cmp    QWORD PTR [rbp-0x1],0x10
   140005c47:	cmovae rax,QWORD PTR [rbp-0x19]
   140005c4c:	mov    QWORD PTR [rbp+0xf],rax
   140005c50:	lea    r8,[rip+0x34a13]        # 0x14003a66a
   140005c57:	lea    rdx,[rbp-0x19]
   140005c5b:	mov    rcx,rbx
   140005c5e:	call   0x140005a00
   140005c63:	mov    rbx,rax
   140005c66:	cmp    QWORD PTR [rbp-0x1],0x10
   140005c6b:	jb     0x140005c76
   140005c6d:	mov    rcx,QWORD PTR [rbp-0x19]
   140005c71:	call   0x140030282
   140005c76:	mov    QWORD PTR [rbp-0x1],0xf
   140005c7e:	mov    QWORD PTR [rbp-0x9],rsi
   140005c82:	mov    BYTE PTR [rbp-0x19],0x0
   140005c86:	mov    QWORD PTR [rbp-0x31],0xf
   140005c8e:	mov    QWORD PTR [rbp-0x39],rsi
   140005c92:	mov    BYTE PTR [rbp-0x49],0x0
   140005c96:	mov    r8d,0xe
   140005c9c:	lea    rdx,[rip+0x3648d]        # 0x14003c130
   140005ca3:	lea    rcx,[rbp-0x49]
   140005ca7:	call   0x14001f070
   140005cac:	mov    BYTE PTR [rbp-0x29],0x2e
   140005cb0:	lea    rax,[rbp-0x49]
   140005cb4:	cmp    QWORD PTR [rbp-0x31],0x10
   140005cb9:	cmovae rax,QWORD PTR [rbp-0x49]
   140005cbe:	mov    QWORD PTR [rbp-0x21],rax
   140005cc2:	xor    eax,eax
   140005cc4:	movzx  r9d,al
   140005cc8:	mov    r8,rdi
   140005ccb:	lea    rdx,[rbp-0x49]
   140005ccf:	mov    rcx,rbx
   140005cd2:	call   0x14000be00
   140005cd7:	nop
   140005cd8:	cmp    QWORD PTR [rbp-0x31],0x10
   140005cdd:	jb     0x140005ce8
   140005cdf:	mov    rcx,QWORD PTR [rbp-0x49]
   140005ce3:	call   0x140030282
   140005ce8:	mov    QWORD PTR [rbp-0x31],0xf
   140005cf0:	mov    QWORD PTR [rbp-0x39],rsi
   140005cf4:	mov    BYTE PTR [rbp-0x49],0x0
   140005cf8:	mov    r8d,0x11
   140005cfe:	lea    rdx,[rip+0x3643b]        # 0x14003c140
   140005d05:	lea    rcx,[rbp-0x49]
   140005d09:	call   0x14001f070
   140005d0e:	mov    BYTE PTR [rbp-0x29],0x2e
   140005d12:	lea    rax,[rbp-0x49]
   140005d16:	cmp    QWORD PTR [rbp-0x31],0x10
   140005d1b:	cmovae rax,QWORD PTR [rbp-0x49]
   140005d20:	mov    QWORD PTR [rbp-0x21],rax
   140005d24:	lea    r8,[rbp+0x77]
   140005d28:	lea    rdx,[rbp-0x49]
   140005d2c:	mov    rcx,rbx
   140005d2f:	call   0x14000bf00
   140005d34:	nop
   140005d35:	cmp    QWORD PTR [rbp-0x31],0x10
   140005d3a:	jb     0x140005d45
   140005d3c:	mov    rcx,QWORD PTR [rbp-0x49]
   140005d40:	call   0x140030282
   140005d45:	mov    QWORD PTR [rbp-0x31],0xf
   140005d4d:	mov    QWORD PTR [rbp-0x39],rsi
   140005d51:	mov    BYTE PTR [rbp-0x49],0x0
   140005d55:	mov    r8d,0x12
   140005d5b:	lea    rdx,[rip+0x363f6]        # 0x14003c158
   140005d62:	lea    rcx,[rbp-0x49]
   140005d66:	call   0x14001f070
   140005d6b:	mov    BYTE PTR [rbp-0x29],0x2e
   140005d6f:	lea    rax,[rbp-0x49]
   140005d73:	cmp    QWORD PTR [rbp-0x31],0x10
   140005d78:	cmovae rax,QWORD PTR [rbp-0x49]
   140005d7d:	mov    QWORD PTR [rbp-0x21],rax
   140005d81:	lea    r8,[rbp+0x7f]
   140005d85:	lea    rdx,[rbp-0x49]
   140005d89:	mov    rcx,rbx
   140005d8c:	call   0x14000bf00
   140005d91:	nop
   140005d92:	cmp    QWORD PTR [rbp-0x31],0x10
   140005d97:	jb     0x140005da2
   140005d99:	mov    rcx,QWORD PTR [rbp-0x49]
   140005d9d:	call   0x140030282
   140005da2:	mov    QWORD PTR [rbp-0x31],0xf
   140005daa:	mov    QWORD PTR [rbp-0x39],rsi
   140005dae:	mov    BYTE PTR [rbp-0x49],0x0
   140005db2:	or     r9,0xffffffffffffffff
   140005db6:	xor    r8d,r8d
   140005db9:	lea    rdx,[rbp+0x17]
   140005dbd:	lea    rcx,[rbp-0x49]
   140005dc1:	call   0x14001ef20
   140005dc6:	mov    BYTE PTR [rbp-0x29],0x2e
   140005dca:	lea    rax,[rbp-0x49]
   140005dce:	cmp    QWORD PTR [rbp-0x31],0x10
   140005dd3:	cmovae rax,QWORD PTR [rbp-0x49]
   140005dd8:	mov    QWORD PTR [rbp-0x21],rax
   140005ddc:	lea    r8,[rbp+0x6f]
   140005de0:	lea    rdx,[rbp-0x49]
   140005de4:	mov    rcx,rbx
   140005de7:	call   0x14000bbc0
   140005dec:	nop
   140005ded:	cmp    QWORD PTR [rbp-0x31],0x10
   140005df2:	jb     0x140005dfe
   140005df4:	mov    rcx,QWORD PTR [rbp-0x49]
   140005df8:	call   0x140030282
   140005dfd:	nop
   140005dfe:	cmp    QWORD PTR [rbp+0x2f],0x10
   140005e03:	jb     0x140005e0e
   140005e05:	mov    rcx,QWORD PTR [rbp+0x17]
   140005e09:	call   0x140030282
   140005e0e:	mov    rax,rbx
   140005e11:	lea    r11,[rsp+0xb0]
   140005e19:	mov    rbx,QWORD PTR [r11+0x10]
   140005e1d:	mov    rsi,QWORD PTR [r11+0x18]
   140005e21:	mov    rdi,QWORD PTR [r11+0x20]
   140005e25:	mov    rsp,r11
   140005e28:	pop    rbp
   140005e29:	ret    
   140005e2a:	int3   
   140005e2b:	int3   
   140005e2c:	int3   
   140005e2d:	int3   
   140005e2e:	int3   
   140005e2f:	int3   
   140005e30:	mov    rax,rsp
   140005e33:	mov    QWORD PTR [rax+0x20],r9
   140005e37:	push   rbp
   140005e38:	push   rdi
   140005e39:	push   r14
   140005e3b:	lea    rbp,[rax-0x4f]
   140005e3f:	sub    rsp,0xb0
   140005e46:	mov    QWORD PTR [rbp+0x27],0xfffffffffffffffe
   140005e4e:	mov    QWORD PTR [rax+0x8],rbx
   140005e52:	mov    QWORD PTR [rax+0x10],rsi
   140005e56:	mov    rdi,r9
   140005e59:	mov    rax,r8
   140005e5c:	mov    rsi,rdx
   140005e5f:	mov    rbx,rcx
   140005e62:	lea    r8,[rip+0x36beb]        # 0x14003ca54
   140005e69:	mov    rdx,rax
   140005e6c:	lea    rcx,[rbp+0x7]
   140005e70:	call   0x140003520
   140005e75:	nop
   140005e76:	mov    QWORD PTR [rbp-0x11],0xf
   140005e7e:	xor    r14d,r14d
   140005e81:	mov    QWORD PTR [rbp-0x19],r14
   140005e85:	mov    BYTE PTR [rbp-0x29],r14b
   140005e89:	lea    r8d,[r14+0x3]
   140005e8d:	lea    rdx,[rip+0x36bc8]        # 0x14003ca5c
   140005e94:	lea    rcx,[rbp-0x29]
   140005e98:	call   0x14001f070
   140005e9d:	mov    BYTE PTR [rbp-0x9],0x2e
   140005ea1:	lea    rax,[rbp-0x29]
   140005ea5:	cmp    QWORD PTR [rbp-0x11],0x10
   140005eaa:	cmovae rax,QWORD PTR [rbp-0x29]
   140005eaf:	mov    QWORD PTR [rbp-0x1],rax
   140005eb3:	lea    r8,[rip+0x347b0]        # 0x14003a66a
   140005eba:	lea    rdx,[rbp-0x29]
   140005ebe:	mov    rcx,rbx
   140005ec1:	call   0x140005a00
   140005ec6:	mov    rbx,rax
   140005ec9:	cmp    QWORD PTR [rbp-0x11],0x10
   140005ece:	jb     0x140005ed9
   140005ed0:	mov    rcx,QWORD PTR [rbp-0x29]
   140005ed4:	call   0x140030282
   140005ed9:	mov    QWORD PTR [rbp-0x11],0xf
   140005ee1:	mov    QWORD PTR [rbp-0x19],r14
   140005ee5:	mov    BYTE PTR [rbp-0x29],0x0
   140005ee9:	mov    QWORD PTR [rbp-0x41],0xf
   140005ef1:	mov    QWORD PTR [rbp-0x49],r14
   140005ef5:	mov    BYTE PTR [rbp-0x59],0x0
   140005ef9:	mov    r8d,0xe
   140005eff:	lea    rdx,[rip+0x3622a]        # 0x14003c130
   140005f06:	lea    rcx,[rbp-0x59]
   140005f0a:	call   0x14001f070
   140005f0f:	mov    BYTE PTR [rbp-0x39],0x2e
   140005f13:	lea    rax,[rbp-0x59]
   140005f17:	cmp    QWORD PTR [rbp-0x41],0x10
   140005f1c:	cmovae rax,QWORD PTR [rbp-0x59]
   140005f21:	mov    QWORD PTR [rbp-0x31],rax
   140005f25:	xor    eax,eax
   140005f27:	movzx  r9d,al
   140005f2b:	mov    r8,rsi
   140005f2e:	lea    rdx,[rbp-0x59]
   140005f32:	mov    rcx,rbx
   140005f35:	call   0x14000be00
   140005f3a:	nop
   140005f3b:	cmp    QWORD PTR [rbp-0x41],0x10
   140005f40:	jb     0x140005f4b
   140005f42:	mov    rcx,QWORD PTR [rbp-0x59]
   140005f46:	call   0x140030282
   140005f4b:	mov    QWORD PTR [rbp-0x41],0xf
   140005f53:	mov    QWORD PTR [rbp-0x49],r14
   140005f57:	mov    BYTE PTR [rbp-0x59],0x0
   140005f5b:	mov    r8d,0x11
   140005f61:	lea    rdx,[rip+0x361d8]        # 0x14003c140
   140005f68:	lea    rcx,[rbp-0x59]
   140005f6c:	call   0x14001f070
   140005f71:	mov    BYTE PTR [rbp-0x39],0x2e
   140005f75:	lea    rax,[rbp-0x59]
   140005f79:	cmp    QWORD PTR [rbp-0x41],0x10
   140005f7e:	cmovae rax,QWORD PTR [rbp-0x59]
   140005f83:	mov    QWORD PTR [rbp-0x31],rax
   140005f87:	lea    r8,[rbp+0x77]
   140005f8b:	lea    rdx,[rbp-0x59]
   140005f8f:	mov    rcx,rbx
   140005f92:	call   0x14000bf00
   140005f97:	nop
   140005f98:	cmp    QWORD PTR [rbp-0x41],0x10
   140005f9d:	jb     0x140005fa8
   140005f9f:	mov    rcx,QWORD PTR [rbp-0x59]
   140005fa3:	call   0x140030282
   140005fa8:	mov    QWORD PTR [rbp-0x41],0xf
   140005fb0:	mov    QWORD PTR [rbp-0x49],r14
   140005fb4:	mov    BYTE PTR [rbp-0x59],0x0
   140005fb8:	mov    r8d,0x12
   140005fbe:	lea    rdx,[rip+0x36193]        # 0x14003c158
   140005fc5:	lea    rcx,[rbp-0x59]
   140005fc9:	call   0x14001f070
   140005fce:	mov    BYTE PTR [rbp-0x39],0x2e
   140005fd2:	lea    rax,[rbp-0x59]
   140005fd6:	cmp    QWORD PTR [rbp-0x41],0x10
   140005fdb:	cmovae rax,QWORD PTR [rbp-0x59]
   140005fe0:	mov    QWORD PTR [rbp-0x31],rax
   140005fe4:	lea    r8,[rbp+0x7f]
   140005fe8:	lea    rdx,[rbp-0x59]
   140005fec:	mov    rcx,rbx
   140005fef:	call   0x14000bf00
   140005ff4:	nop
   140005ff5:	cmp    QWORD PTR [rbp-0x41],0x10
   140005ffa:	jb     0x140006005
   140005ffc:	mov    rcx,QWORD PTR [rbp-0x59]
   140006000:	call   0x140030282
   140006005:	mov    QWORD PTR [rbp-0x41],0xf
   14000600d:	mov    QWORD PTR [rbp-0x49],r14
   140006011:	mov    BYTE PTR [rbp-0x59],0x0
   140006015:	or     r9,0xffffffffffffffff
   140006019:	xor    r8d,r8d
   14000601c:	lea    rdx,[rbp+0x7]
   140006020:	lea    rcx,[rbp-0x59]
   140006024:	call   0x14001ef20
   140006029:	mov    BYTE PTR [rbp-0x39],0x2e
   14000602d:	lea    rax,[rbp-0x59]
   140006031:	cmp    QWORD PTR [rbp-0x41],0x10
   140006036:	cmovae rax,QWORD PTR [rbp-0x59]
   14000603b:	mov    QWORD PTR [rbp-0x31],rax
   14000603f:	xor    eax,eax
   140006041:	movzx  r9d,al
   140006045:	mov    r8,rdi
   140006048:	lea    rdx,[rbp-0x59]
   14000604c:	mov    rcx,rbx
   14000604f:	call   0x14000be00
   140006054:	nop
   140006055:	cmp    QWORD PTR [rbp-0x41],0x10
   14000605a:	jb     0x140006066
   14000605c:	mov    rcx,QWORD PTR [rbp-0x59]
   140006060:	call   0x140030282
   140006065:	nop
   140006066:	cmp    QWORD PTR [rbp+0x1f],0x10
   14000606b:	jb     0x140006076
   14000606d:	mov    rcx,QWORD PTR [rbp+0x7]
   140006071:	call   0x140030282
   140006076:	mov    QWORD PTR [rbp+0x1f],0xf
   14000607e:	mov    QWORD PTR [rbp+0x17],r14
   140006082:	mov    BYTE PTR [rbp+0x7],0x0
   140006086:	cmp    QWORD PTR [rdi+0x18],0x10
   14000608b:	jb     0x140006095
   14000608d:	mov    rcx,QWORD PTR [rdi]
   140006090:	call   0x140030282
   140006095:	mov    QWORD PTR [rdi+0x18],0xf
   14000609d:	mov    QWORD PTR [rdi+0x10],r14
   1400060a1:	mov    BYTE PTR [rdi],0x0
   1400060a4:	mov    rax,rbx
   1400060a7:	lea    r11,[rsp+0xb0]
   1400060af:	mov    rbx,QWORD PTR [r11+0x20]
   1400060b3:	mov    rsi,QWORD PTR [r11+0x28]
   1400060b7:	mov    rsp,r11
   1400060ba:	pop    r14
   1400060bc:	pop    rdi
   1400060bd:	pop    rbp
   1400060be:	ret    
   1400060bf:	int3   
   1400060c0:	mov    rax,rsp
   1400060c3:	mov    BYTE PTR [rax+0x20],r9b
   1400060c7:	push   rbp
   1400060c8:	lea    rbp,[rax-0x4f]
   1400060cc:	sub    rsp,0xb0
   1400060d3:	mov    QWORD PTR [rbp+0x37],0xfffffffffffffffe
   1400060db:	mov    QWORD PTR [rax+0x8],rbx
   1400060df:	mov    QWORD PTR [rax+0x10],rsi
   1400060e3:	mov    QWORD PTR [rax+0x18],rdi
   1400060e7:	mov    rax,r8
   1400060ea:	mov    rdi,rdx
   1400060ed:	mov    rbx,rcx
   1400060f0:	lea    r8,[rip+0x3695d]        # 0x14003ca54
   1400060f7:	mov    rdx,rax
   1400060fa:	lea    rcx,[rbp+0x17]
   1400060fe:	call   0x140003520
   140006103:	nop
   140006104:	mov    QWORD PTR [rbp-0x1],0xf
   14000610c:	xor    esi,esi
   14000610e:	mov    QWORD PTR [rbp-0x9],rsi
   140006112:	mov    BYTE PTR [rbp-0x19],sil
   140006116:	lea    r8d,[rsi+0x3]
   14000611a:	lea    rdx,[rip+0x3693b]        # 0x14003ca5c
   140006121:	lea    rcx,[rbp-0x19]
   140006125:	call   0x14001f070
   14000612a:	mov    BYTE PTR [rbp+0x7],0x2e
   14000612e:	lea    rax,[rbp-0x19]
   140006132:	cmp    QWORD PTR [rbp-0x1],0x10
   140006137:	cmovae rax,QWORD PTR [rbp-0x19]
   14000613c:	mov    QWORD PTR [rbp+0xf],rax
   140006140:	lea    r8,[rip+0x34523]        # 0x14003a66a
   140006147:	lea    rdx,[rbp-0x19]
   14000614b:	mov    rcx,rbx
   14000614e:	call   0x140005a00
   140006153:	mov    rbx,rax
   140006156:	cmp    QWORD PTR [rbp-0x1],0x10
   14000615b:	jb     0x140006166
   14000615d:	mov    rcx,QWORD PTR [rbp-0x19]
   140006161:	call   0x140030282
   140006166:	mov    QWORD PTR [rbp-0x1],0xf
   14000616e:	mov    QWORD PTR [rbp-0x9],rsi
   140006172:	mov    BYTE PTR [rbp-0x19],0x0
   140006176:	mov    QWORD PTR [rbp-0x31],0xf
   14000617e:	mov    QWORD PTR [rbp-0x39],rsi
   140006182:	mov    BYTE PTR [rbp-0x49],0x0
   140006186:	mov    r8d,0xe
   14000618c:	lea    rdx,[rip+0x35f9d]        # 0x14003c130
   140006193:	lea    rcx,[rbp-0x49]
   140006197:	call   0x14001f070
   14000619c:	mov    BYTE PTR [rbp-0x29],0x2e
   1400061a0:	lea    rax,[rbp-0x49]
   1400061a4:	cmp    QWORD PTR [rbp-0x31],0x10
   1400061a9:	cmovae rax,QWORD PTR [rbp-0x49]
   1400061ae:	mov    QWORD PTR [rbp-0x21],rax
   1400061b2:	xor    eax,eax
   1400061b4:	movzx  r9d,al
   1400061b8:	mov    r8,rdi
   1400061bb:	lea    rdx,[rbp-0x49]
   1400061bf:	mov    rcx,rbx
   1400061c2:	call   0x14000be00
   1400061c7:	nop
   1400061c8:	cmp    QWORD PTR [rbp-0x31],0x10
   1400061cd:	jb     0x1400061d8
   1400061cf:	mov    rcx,QWORD PTR [rbp-0x49]
   1400061d3:	call   0x140030282
   1400061d8:	mov    QWORD PTR [rbp-0x31],0xf
   1400061e0:	mov    QWORD PTR [rbp-0x39],rsi
   1400061e4:	mov    BYTE PTR [rbp-0x49],0x0
   1400061e8:	mov    r8d,0x11
   1400061ee:	lea    rdx,[rip+0x35f4b]        # 0x14003c140
   1400061f5:	lea    rcx,[rbp-0x49]
   1400061f9:	call   0x14001f070
   1400061fe:	mov    BYTE PTR [rbp-0x29],0x2e
   140006202:	lea    rax,[rbp-0x49]
   140006206:	cmp    QWORD PTR [rbp-0x31],0x10
   14000620b:	cmovae rax,QWORD PTR [rbp-0x49]
   140006210:	mov    QWORD PTR [rbp-0x21],rax
   140006214:	lea    r8,[rbp+0x77]
   140006218:	lea    rdx,[rbp-0x49]
   14000621c:	mov    rcx,rbx
   14000621f:	call   0x14000bf00
   140006224:	nop
   140006225:	cmp    QWORD PTR [rbp-0x31],0x10
   14000622a:	jb     0x140006235
   14000622c:	mov    rcx,QWORD PTR [rbp-0x49]
   140006230:	call   0x140030282
   140006235:	mov    QWORD PTR [rbp-0x31],0xf
   14000623d:	mov    QWORD PTR [rbp-0x39],rsi
   140006241:	mov    BYTE PTR [rbp-0x49],0x0
   140006245:	mov    r8d,0x12
   14000624b:	lea    rdx,[rip+0x35f06]        # 0x14003c158
   140006252:	lea    rcx,[rbp-0x49]
   140006256:	call   0x14001f070
   14000625b:	mov    BYTE PTR [rbp-0x29],0x2e
   14000625f:	lea    rax,[rbp-0x49]
   140006263:	cmp    QWORD PTR [rbp-0x31],0x10
   140006268:	cmovae rax,QWORD PTR [rbp-0x49]
   14000626d:	mov    QWORD PTR [rbp-0x21],rax
   140006271:	lea    r8,[rbp+0x7f]
   140006275:	lea    rdx,[rbp-0x49]
   140006279:	mov    rcx,rbx
   14000627c:	call   0x14000bf00
   140006281:	nop
   140006282:	cmp    QWORD PTR [rbp-0x31],0x10
   140006287:	jb     0x140006292
   140006289:	mov    rcx,QWORD PTR [rbp-0x49]
   14000628d:	call   0x140030282
   140006292:	mov    QWORD PTR [rbp-0x31],0xf
   14000629a:	mov    QWORD PTR [rbp-0x39],rsi
   14000629e:	mov    BYTE PTR [rbp-0x49],0x0
   1400062a2:	or     r9,0xffffffffffffffff
   1400062a6:	xor    r8d,r8d
   1400062a9:	lea    rdx,[rbp+0x17]
   1400062ad:	lea    rcx,[rbp-0x49]
   1400062b1:	call   0x14001ef20
   1400062b6:	mov    BYTE PTR [rbp-0x29],0x2e
   1400062ba:	lea    rax,[rbp-0x49]
   1400062be:	cmp    QWORD PTR [rbp-0x31],0x10
   1400062c3:	cmovae rax,QWORD PTR [rbp-0x49]
   1400062c8:	mov    QWORD PTR [rbp-0x21],rax
   1400062cc:	lea    r8,[rbp+0x6f]
   1400062d0:	lea    rdx,[rbp-0x49]
   1400062d4:	mov    rcx,rbx
   1400062d7:	call   0x14000bf00
   1400062dc:	nop
   1400062dd:	cmp    QWORD PTR [rbp-0x31],0x10
   1400062e2:	jb     0x1400062ee
   1400062e4:	mov    rcx,QWORD PTR [rbp-0x49]
   1400062e8:	call   0x140030282
   1400062ed:	nop
   1400062ee:	cmp    QWORD PTR [rbp+0x2f],0x10
   1400062f3:	jb     0x1400062fe
   1400062f5:	mov    rcx,QWORD PTR [rbp+0x17]
   1400062f9:	call   0x140030282
   1400062fe:	mov    rax,rbx
   140006301:	lea    r11,[rsp+0xb0]
   140006309:	mov    rbx,QWORD PTR [r11+0x10]
   14000630d:	mov    rsi,QWORD PTR [r11+0x18]
   140006311:	mov    rdi,QWORD PTR [r11+0x20]
   140006315:	mov    rsp,r11
   140006318:	pop    rbp
   140006319:	ret    
   14000631a:	int3   
   14000631b:	int3   
   14000631c:	int3   
   14000631d:	int3   
   14000631e:	int3   
   14000631f:	int3   
   140006320:	mov    rax,rcx
   140006323:	ret    
   140006324:	int3   
   140006325:	int3   
   140006326:	int3   
   140006327:	int3   
   140006328:	int3   
   140006329:	int3   
   14000632a:	int3   
   14000632b:	int3   
   14000632c:	int3   
   14000632d:	int3   
   14000632e:	int3   
   14000632f:	int3   
   140006330:	mov    rax,rcx
   140006333:	ret    
   140006334:	int3   
   140006335:	int3   
   140006336:	int3   
   140006337:	int3   
   140006338:	int3   
   140006339:	int3   
   14000633a:	int3   
   14000633b:	int3   
   14000633c:	int3   
   14000633d:	int3   
   14000633e:	int3   
   14000633f:	int3   
   140006340:	mov    rax,rcx
   140006343:	ret    
   140006344:	int3   
   140006345:	int3   
   140006346:	int3   
   140006347:	int3   
   140006348:	int3   
   140006349:	int3   
   14000634a:	int3   
   14000634b:	int3   
   14000634c:	int3   
   14000634d:	int3   
   14000634e:	int3   
   14000634f:	int3   
   140006350:	mov    rax,rcx
   140006353:	ret    
   140006354:	int3   
   140006355:	int3   
   140006356:	int3   
   140006357:	int3   
   140006358:	int3   
   140006359:	int3   
   14000635a:	int3   
   14000635b:	int3   
   14000635c:	int3   
   14000635d:	int3   
   14000635e:	int3   
   14000635f:	int3   
   140006360:	mov    rax,rcx
   140006363:	ret    
   140006364:	int3   
   140006365:	int3   
   140006366:	int3   
   140006367:	int3   
   140006368:	int3   
   140006369:	int3   
   14000636a:	int3   
   14000636b:	int3   
   14000636c:	int3   
   14000636d:	int3   
   14000636e:	int3   
   14000636f:	int3   
   140006370:	mov    rax,rcx
   140006373:	ret    
   140006374:	int3   
   140006375:	int3   
   140006376:	int3   
   140006377:	int3   
   140006378:	int3   
   140006379:	int3   
   14000637a:	int3   
   14000637b:	int3   
   14000637c:	int3   
   14000637d:	int3   
   14000637e:	int3   
   14000637f:	int3   
   140006380:	mov    rax,rcx
   140006383:	ret    
   140006384:	int3   
   140006385:	int3   
   140006386:	int3   
   140006387:	int3   
   140006388:	int3   
   140006389:	int3   
   14000638a:	int3   
   14000638b:	int3   
   14000638c:	int3   
   14000638d:	int3   
   14000638e:	int3   
   14000638f:	int3   
   140006390:	mov    rax,rcx
   140006393:	ret    
   140006394:	int3   
   140006395:	int3   
   140006396:	int3   
   140006397:	int3   
   140006398:	int3   
   140006399:	int3   
   14000639a:	int3   
   14000639b:	int3   
   14000639c:	int3   
   14000639d:	int3   
   14000639e:	int3   
   14000639f:	int3   
   1400063a0:	mov    rax,rcx
   1400063a3:	ret    
   1400063a4:	int3   
   1400063a5:	int3   
   1400063a6:	int3   
   1400063a7:	int3   
   1400063a8:	int3   
   1400063a9:	int3   
   1400063aa:	int3   
   1400063ab:	int3   
   1400063ac:	int3   
   1400063ad:	int3   
   1400063ae:	int3   
   1400063af:	int3   
   1400063b0:	mov    rax,rcx
   1400063b3:	ret    
   1400063b4:	int3   
   1400063b5:	int3   
   1400063b6:	int3   
   1400063b7:	int3   
   1400063b8:	int3   
   1400063b9:	int3   
   1400063ba:	int3   
   1400063bb:	int3   
   1400063bc:	int3   
   1400063bd:	int3   
   1400063be:	int3   
   1400063bf:	int3   
   1400063c0:	mov    rax,rcx
   1400063c3:	ret    
   1400063c4:	int3   
   1400063c5:	int3   
   1400063c6:	int3   
   1400063c7:	int3   
   1400063c8:	int3   
   1400063c9:	int3   
   1400063ca:	int3   
   1400063cb:	int3   
   1400063cc:	int3   
   1400063cd:	int3   
   1400063ce:	int3   
   1400063cf:	int3   
   1400063d0:	mov    rax,rcx
   1400063d3:	ret    
   1400063d4:	int3   
   1400063d5:	int3   
   1400063d6:	int3   
   1400063d7:	int3   
   1400063d8:	int3   
   1400063d9:	int3   
   1400063da:	int3   
   1400063db:	int3   
   1400063dc:	int3   
   1400063dd:	int3   
   1400063de:	int3   
   1400063df:	int3   
   1400063e0:	shl    rdx,0x4
   1400063e4:	add    QWORD PTR [rcx],rdx
   1400063e7:	ret    
   1400063e8:	int3   
   1400063e9:	int3   
   1400063ea:	int3   
   1400063eb:	int3   
   1400063ec:	int3   
   1400063ed:	int3   
   1400063ee:	int3   
   1400063ef:	int3   
   1400063f0:	add    QWORD PTR [rcx],rdx
   1400063f3:	ret    
   1400063f4:	int3   
   1400063f5:	int3   
   1400063f6:	int3   
   1400063f7:	int3   
   1400063f8:	int3   
   1400063f9:	int3   
   1400063fa:	int3   
   1400063fb:	int3   
   1400063fc:	int3   
   1400063fd:	int3   
   1400063fe:	int3   
   1400063ff:	int3   
   140006400:	rex push rbx
   140006402:	sub    rsp,0x20
   140006406:	mov    rbx,rcx
   140006409:	test   rcx,rcx
   14000640c:	je     0x140006446
   14000640e:	mov    rcx,QWORD PTR [rcx]
   140006411:	test   rcx,rcx
   140006414:	je     0x14000641e
   140006416:	mov    rax,QWORD PTR [rcx]
   140006419:	call   QWORD PTR [rax+0x8]
   14000641c:	jmp    0x140006425
   14000641e:	lea    rax,[rip+0x4ed0b]        # 0x140055130
   140006425:	lea    rdx,[rip+0x4eda4]        # 0x1400551d0
   14000642c:	mov    rcx,rax
   14000642f:	call   QWORD PTR [rip+0x2fffb]        # 0x140036430
   140006435:	test   al,al
   140006437:	je     0x140006446
   140006439:	mov    rax,QWORD PTR [rbx]
   14000643c:	add    rax,0x8
   140006440:	add    rsp,0x20
   140006444:	pop    rbx
   140006445:	ret    
   140006446:	xor    eax,eax
   140006448:	add    rsp,0x20
   14000644c:	pop    rbx
   14000644d:	ret    
   14000644e:	int3   
   14000644f:	int3   
   140006450:	rex push rbx
   140006452:	sub    rsp,0x20
   140006456:	mov    rbx,rcx
   140006459:	test   rcx,rcx
   14000645c:	je     0x140006496
   14000645e:	mov    rcx,QWORD PTR [rcx]
   140006461:	test   rcx,rcx
   140006464:	je     0x14000646e
   140006466:	mov    rax,QWORD PTR [rcx]
   140006469:	call   QWORD PTR [rax+0x8]
   14000646c:	jmp    0x140006475
   14000646e:	lea    rax,[rip+0x4ecbb]        # 0x140055130
   140006475:	lea    rdx,[rip+0x4ed54]        # 0x1400551d0
   14000647c:	mov    rcx,rax
   14000647f:	call   QWORD PTR [rip+0x2ffab]        # 0x140036430
   140006485:	test   al,al
   140006487:	je     0x140006496
   140006489:	mov    rax,QWORD PTR [rbx]
   14000648c:	add    rax,0x8
   140006490:	add    rsp,0x20
   140006494:	pop    rbx
   140006495:	ret    
   140006496:	xor    eax,eax
   140006498:	add    rsp,0x20
   14000649c:	pop    rbx
   14000649d:	ret    
   14000649e:	int3   
   14000649f:	int3   
   1400064a0:	sub    rsp,0x38
   1400064a4:	mov    r9,QWORD PTR [r8+0x18]
   1400064a8:	mov    r10,r8
   1400064ab:	cmp    r9,0x10
   1400064af:	jb     0x1400064b4
   1400064b1:	mov    r8,QWORD PTR [r8]
   1400064b4:	add    r8,QWORD PTR [r10+0x10]
   1400064b8:	cmp    r9,0x10
   1400064bc:	jb     0x1400064c3
   1400064be:	mov    rax,QWORD PTR [r10]
   1400064c1:	jmp    0x1400064c6
   1400064c3:	mov    rax,r10
   1400064c6:	mov    QWORD PTR [rsp+0x20],rdx
   1400064cb:	mov    r9,rcx
   1400064ce:	mov    rdx,rax
   1400064d1:	mov    rcx,r10
   1400064d4:	call   0x140029cd0
   1400064d9:	add    rsp,0x38
   1400064dd:	ret    
   1400064de:	int3   
   1400064df:	int3   
   1400064e0:	sub    rsp,0x38
   1400064e4:	mov    r10,QWORD PTR [rcx+0x18]
   1400064e8:	cmp    r10,0x10
   1400064ec:	jb     0x1400064f3
   1400064ee:	mov    r9,QWORD PTR [rcx]
   1400064f1:	jmp    0x1400064f6
   1400064f3:	mov    r9,rcx
   1400064f6:	mov    rax,QWORD PTR [rcx+0x10]
   1400064fa:	add    rax,r9
   1400064fd:	cmp    r10,0x10
   140006501:	jb     0x140006508
   140006503:	mov    r10,QWORD PTR [rcx]
   140006506:	jmp    0x14000650b
   140006508:	mov    r10,rcx
   14000650b:	mov    QWORD PTR [rsp+0x20],r8
   140006510:	mov    r9,rdx
   140006513:	mov    r8,rax
   140006516:	mov    rdx,r10
   140006519:	call   0x140029d70
   14000651e:	add    rsp,0x38
   140006522:	ret    
   140006523:	int3   
   140006524:	int3   
   140006525:	int3   
   140006526:	int3   
   140006527:	int3   
   140006528:	int3   
   140006529:	int3   
   14000652a:	int3   
   14000652b:	int3   
   14000652c:	int3   
   14000652d:	int3   
   14000652e:	int3   
   14000652f:	int3   
   140006530:	mov    QWORD PTR [rsp+0x10],rbx
   140006535:	mov    QWORD PTR [rsp+0x18],rbp
   14000653a:	push   rsi
   14000653b:	push   rdi
   14000653c:	push   r15
   14000653e:	sub    rsp,0x20
   140006542:	mov    rbx,rdx
   140006545:	movzx  edx,r9b
   140006549:	movzx  r15d,r9b
   14000654d:	movzx  esi,r8b
   140006551:	mov    rdi,rcx
   140006554:	call   0x140002db0
   140006559:	mov    rdx,QWORD PTR [rbx+0x18]
   14000655d:	cmp    rdx,0x10
   140006561:	jb     0x140006568
   140006563:	mov    rcx,QWORD PTR [rbx]
   140006566:	jmp    0x14000656b
   140006568:	mov    rcx,rbx
   14000656b:	mov    rax,QWORD PTR [rbx+0x10]
   14000656f:	add    rax,rcx
   140006572:	cmp    rdx,0x10
   140006576:	jb     0x14000657b
   140006578:	mov    rbx,QWORD PTR [rbx]
   14000657b:	xor    ecx,ecx
   14000657d:	mov    rbp,rax
   140006580:	sub    rbp,rbx
   140006583:	cmp    rbx,rax
   140006586:	cmova  rbp,rcx
   14000658a:	test   rbp,rbp
   14000658d:	je     0x1400065d5
   14000658f:	mov    QWORD PTR [rsp+0x40],r14
   140006594:	mov    r14,rbx
   140006597:	neg    r14
   14000659a:	nop    WORD PTR [rax+rax*1+0x0]
   1400065a0:	movzx  eax,BYTE PTR [rbx]
   1400065a3:	cmp    al,r15b
   1400065a6:	je     0x1400065ad
   1400065a8:	cmp    al,sil
   1400065ab:	jne    0x1400065b9
   1400065ad:	movzx  edx,sil
   1400065b1:	mov    rcx,rdi
   1400065b4:	call   0x140002db0
   1400065b9:	movzx  edx,BYTE PTR [rbx]
   1400065bc:	mov    rcx,rdi
   1400065bf:	call   0x140002db0
   1400065c4:	inc    rbx
   1400065c7:	lea    rax,[r14+rbx*1]
   1400065cb:	cmp    rax,rbp
   1400065ce:	jne    0x1400065a0
   1400065d0:	mov    r14,QWORD PTR [rsp+0x40]
   1400065d5:	movzx  edx,r15b
   1400065d9:	mov    rcx,rdi
   1400065dc:	call   0x140002db0
   1400065e1:	mov    rbx,QWORD PTR [rsp+0x48]
   1400065e6:	mov    rbp,QWORD PTR [rsp+0x50]
   1400065eb:	mov    rax,rdi
   1400065ee:	add    rsp,0x20
   1400065f2:	pop    r15
   1400065f4:	pop    rdi
   1400065f5:	pop    rsi
   1400065f6:	ret    
   1400065f7:	int3   
   1400065f8:	int3   
   1400065f9:	int3   
   1400065fa:	int3   
   1400065fb:	int3   
   1400065fc:	int3   
   1400065fd:	int3   
   1400065fe:	int3   
   1400065ff:	int3   
   140006600:	cmp    QWORD PTR [rdx+0x18],0x10
   140006605:	jb     0x140006611
   140006607:	mov    rax,QWORD PTR [rdx]
   14000660a:	mov    QWORD PTR [rcx],rax
   14000660d:	mov    rax,rcx
   140006610:	ret    
   140006611:	mov    QWORD PTR [rcx],rdx
   140006614:	mov    rax,rcx
   140006617:	ret    
   140006618:	int3   
   140006619:	int3   
   14000661a:	int3   
   14000661b:	int3   
   14000661c:	int3   
   14000661d:	int3   
   14000661e:	int3   
   14000661f:	int3   
   140006620:	cmp    QWORD PTR [rdx+0x18],0x10
   140006625:	jb     0x140006631
   140006627:	mov    rax,QWORD PTR [rdx]
   14000662a:	mov    QWORD PTR [rcx],rax
   14000662d:	mov    rax,rcx
   140006630:	ret    
   140006631:	mov    QWORD PTR [rcx],rdx
   140006634:	mov    rax,rcx
   140006637:	ret    
   140006638:	int3   
   140006639:	int3   
   14000663a:	int3   
   14000663b:	int3   
   14000663c:	int3   
   14000663d:	int3   
   14000663e:	int3   
   14000663f:	int3   
   140006640:	mov    QWORD PTR [rcx],rdx
   140006643:	mov    rax,rcx
   140006646:	ret    
   140006647:	int3   
   140006648:	int3   
   140006649:	int3   
   14000664a:	int3   
   14000664b:	int3   
   14000664c:	int3   
   14000664d:	int3   
   14000664e:	int3   
   14000664f:	int3   
   140006650:	mov    QWORD PTR [rcx],rdx
   140006653:	mov    rax,rcx
   140006656:	ret    
   140006657:	int3   
   140006658:	int3   
   140006659:	int3   
   14000665a:	int3   
   14000665b:	int3   
   14000665c:	int3   
   14000665d:	int3   
   14000665e:	int3   
   14000665f:	int3   
   140006660:	mov    QWORD PTR [rcx],rdx
   140006663:	mov    DWORD PTR [rcx+0x8],r8d
   140006667:	mov    rax,rcx
   14000666a:	ret    
   14000666b:	int3   
   14000666c:	int3   
   14000666d:	int3   
   14000666e:	int3   
   14000666f:	int3   
   140006670:	mov    QWORD PTR [rcx],rdx
   140006673:	mov    rax,rcx
   140006676:	ret    
   140006677:	int3   
   140006678:	int3   
   140006679:	int3   
   14000667a:	int3   
   14000667b:	int3   
   14000667c:	int3   
   14000667d:	int3   
   14000667e:	int3   
   14000667f:	int3   
   140006680:	mov    QWORD PTR [rcx],rdx
   140006683:	mov    rax,rcx
   140006686:	ret    
   140006687:	int3   
   140006688:	int3   
   140006689:	int3   
   14000668a:	int3   
   14000668b:	int3   
   14000668c:	int3   
   14000668d:	int3   
   14000668e:	int3   
   14000668f:	int3   
   140006690:	mov    QWORD PTR [rcx],rdx
   140006693:	mov    rax,rcx
   140006696:	ret    
   140006697:	int3   
   140006698:	int3   
   140006699:	int3   
   14000669a:	int3   
   14000669b:	int3   
   14000669c:	int3   
   14000669d:	int3   
   14000669e:	int3   
   14000669f:	int3   
   1400066a0:	mov    QWORD PTR [rcx],rdx
   1400066a3:	mov    rax,rcx
   1400066a6:	ret    
   1400066a7:	int3   
   1400066a8:	int3   
   1400066a9:	int3   
   1400066aa:	int3   
   1400066ab:	int3   
   1400066ac:	int3   
   1400066ad:	int3   
   1400066ae:	int3   
   1400066af:	int3   
   1400066b0:	test   rcx,rcx
   1400066b3:	je     0x1400066cf
   1400066b5:	push   rbx
   1400066b6:	sub    rsp,0x20
   1400066ba:	mov    rbx,rcx
   1400066bd:	call   0x140018f40
   1400066c2:	mov    rcx,rbx
   1400066c5:	call   0x140030282
   1400066ca:	add    rsp,0x20
   1400066ce:	pop    rbx
   1400066cf:	ret    
   1400066d0:	test   rcx,rcx
   1400066d3:	je     0x14000671f
   1400066d5:	push   rbx
   1400066d6:	sub    rsp,0x30
   1400066da:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400066e3:	mov    rbx,rcx
   1400066e6:	mov    QWORD PTR [rsp+0x40],rcx
   1400066eb:	mov    rcx,QWORD PTR [rcx+0x20]
   1400066ef:	test   rcx,rcx
   1400066f2:	je     0x1400066fa
   1400066f4:	call   0x140030282
   1400066f9:	nop
   1400066fa:	xor    r8d,r8d
   1400066fd:	mov    dl,0x1
   1400066ff:	mov    rcx,rbx
   140006702:	call   QWORD PTR [rip+0x2fea0]        # 0x1400365a8
   140006708:	nop
   140006709:	mov    rcx,rbx
   14000670c:	call   QWORD PTR [rip+0x2fee6]        # 0x1400365f8
   140006712:	mov    rcx,rbx
   140006715:	call   0x140030282
   14000671a:	add    rsp,0x30
   14000671e:	pop    rbx
   14000671f:	ret    
   140006720:	test   rcx,rcx
   140006723:	je     0x14000676f
   140006725:	push   rbx
   140006726:	sub    rsp,0x30
   14000672a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140006733:	mov    rbx,rcx
   140006736:	mov    QWORD PTR [rsp+0x40],rcx
   14000673b:	mov    rcx,QWORD PTR [rcx+0x28]
   14000673f:	test   rcx,rcx
   140006742:	je     0x14000674a
   140006744:	call   0x140030282
   140006749:	nop
   14000674a:	xor    r8d,r8d
   14000674d:	xor    edx,edx
   14000674f:	mov    rcx,rbx
   140006752:	call   QWORD PTR [rip+0x2fe50]        # 0x1400365a8
   140006758:	nop
   140006759:	mov    rcx,rbx
   14000675c:	call   QWORD PTR [rip+0x2fe96]        # 0x1400365f8
   140006762:	mov    rcx,rbx
   140006765:	call   0x140030282
   14000676a:	add    rsp,0x30
   14000676e:	pop    rbx
   14000676f:	ret    
   140006770:	jmp    0x140030282
   140006775:	int3   
   140006776:	int3   
   140006777:	int3   
   140006778:	int3   
   140006779:	int3   
   14000677a:	int3   
   14000677b:	int3   
   14000677c:	int3   
   14000677d:	int3   
   14000677e:	int3   
   14000677f:	int3   
   140006780:	ret    0x0
   140006783:	int3   
   140006784:	int3   
   140006785:	int3   
   140006786:	int3   
   140006787:	int3   
   140006788:	int3   
   140006789:	int3   
   14000678a:	int3   
   14000678b:	int3   
   14000678c:	int3   
   14000678d:	int3   
   14000678e:	int3   
   14000678f:	int3   
   140006790:	mov    QWORD PTR [rcx],rdx
   140006793:	mov    rax,rcx
   140006796:	ret    
   140006797:	int3   
   140006798:	int3   
   140006799:	int3   
   14000679a:	int3   
   14000679b:	int3   
   14000679c:	int3   
   14000679d:	int3   
   14000679e:	int3   
   14000679f:	int3   
   1400067a0:	sub    rsp,0x28
   1400067a4:	mov    QWORD PTR [rsp+0x38],rdx
   1400067a9:	lea    rdx,[rsp+0x38]
   1400067ae:	call   0x140006a10
   1400067b3:	add    rsp,0x28
   1400067b7:	ret    
   1400067b8:	int3   
   1400067b9:	int3   
   1400067ba:	int3   
   1400067bb:	int3   
   1400067bc:	int3   
   1400067bd:	int3   
   1400067be:	int3   
   1400067bf:	int3   
   1400067c0:	sub    rsp,0x28
   1400067c4:	cmp    r8d,0x3
   1400067c8:	jne    0x1400067d3
   1400067ca:	add    rsp,0x28
   1400067ce:	jmp    0x140006d30
   1400067d3:	mov    QWORD PTR [rsp+0x48],rdx
   1400067d8:	lea    rdx,[rsp+0x48]
   1400067dd:	call   0x140006a10
   1400067e2:	add    rsp,0x28
   1400067e6:	ret    
   1400067e7:	int3   
   1400067e8:	int3   
   1400067e9:	int3   
   1400067ea:	int3   
   1400067eb:	int3   
   1400067ec:	int3   
   1400067ed:	int3   
   1400067ee:	int3   
   1400067ef:	int3   
   1400067f0:	sub    rsp,0x28
   1400067f4:	cmp    r8d,0x3
   1400067f8:	jne    0x140006803
   1400067fa:	add    rsp,0x28
   1400067fe:	jmp    0x140006d30
   140006803:	mov    QWORD PTR [rsp+0x48],rdx
   140006808:	lea    rdx,[rsp+0x48]
   14000680d:	call   0x140006a10
   140006812:	add    rsp,0x28
   140006816:	ret    
   140006817:	int3   
   140006818:	int3   
   140006819:	int3   
   14000681a:	int3   
   14000681b:	int3   
   14000681c:	int3   
   14000681d:	int3   
   14000681e:	int3   
   14000681f:	int3   
   140006820:	sub    rsp,0x28
   140006824:	mov    QWORD PTR [rsp+0x38],rdx
   140006829:	lea    rdx,[rsp+0x38]
   14000682e:	call   0x140006b60
   140006833:	add    rsp,0x28
   140006837:	ret    
   140006838:	int3   
   140006839:	int3   
   14000683a:	int3   
   14000683b:	int3   
   14000683c:	int3   
   14000683d:	int3   
   14000683e:	int3   
   14000683f:	int3   
   140006840:	sub    rsp,0x28
   140006844:	cmp    r8d,0x3
   140006848:	jne    0x140006853
   14000684a:	add    rsp,0x28
   14000684e:	jmp    0x140006d90
   140006853:	mov    QWORD PTR [rsp+0x48],rdx
   140006858:	lea    rdx,[rsp+0x48]
   14000685d:	call   0x140006b60
   140006862:	add    rsp,0x28
   140006866:	ret    
   140006867:	int3   
   140006868:	int3   
   140006869:	int3   
   14000686a:	int3   
   14000686b:	int3   
   14000686c:	int3   
   14000686d:	int3   
   14000686e:	int3   
   14000686f:	int3   
   140006870:	sub    rsp,0x28
   140006874:	cmp    r8d,0x3
   140006878:	jne    0x140006883
   14000687a:	add    rsp,0x28
   14000687e:	jmp    0x140006d90
   140006883:	mov    QWORD PTR [rsp+0x48],rdx
   140006888:	lea    rdx,[rsp+0x48]
   14000688d:	call   0x140006b60
   140006892:	add    rsp,0x28
   140006896:	ret    
   140006897:	int3   
   140006898:	int3   
   140006899:	int3   
   14000689a:	int3   
   14000689b:	int3   
   14000689c:	int3   
   14000689d:	int3   
   14000689e:	int3   
   14000689f:	int3   
   1400068a0:	mov    r8,rcx
   1400068a3:	cmp    edx,0x2
   1400068a6:	jne    0x1400068bb
   1400068a8:	mov    rax,QWORD PTR [rcx]
   1400068ab:	movsxd rcx,DWORD PTR [rax+0x4]
   1400068af:	mov    rcx,QWORD PTR [rcx+r8*1+0x48]
   1400068b4:	rex.W jmp QWORD PTR [rip+0x2f91d]        # 0x1400361d8
   1400068bb:	ret    
   1400068bc:	int3   
   1400068bd:	int3   
   1400068be:	int3   
   1400068bf:	int3   
   1400068c0:	ret    0x0
   1400068c3:	int3   
   1400068c4:	int3   
   1400068c5:	int3   
   1400068c6:	int3   
   1400068c7:	int3   
   1400068c8:	int3   
   1400068c9:	int3   
   1400068ca:	int3   
   1400068cb:	int3   
   1400068cc:	int3   
   1400068cd:	int3   
   1400068ce:	int3   
   1400068cf:	int3   
   1400068d0:	cmp    edx,0x3
   1400068d3:	je     0x140006df0
   1400068d9:	ret    
   1400068da:	int3   
   1400068db:	int3   
   1400068dc:	int3   
   1400068dd:	int3   
   1400068de:	int3   
   1400068df:	int3   
   1400068e0:	cmp    r8d,0x3
   1400068e4:	je     0x140006df0
   1400068ea:	ret    
   1400068eb:	int3   
   1400068ec:	int3   
   1400068ed:	int3   
   1400068ee:	int3   
   1400068ef:	int3   
   1400068f0:	cmp    edx,0x2
   1400068f3:	jne    0x140006900
   1400068f5:	add    rcx,0x18
   1400068f9:	rex.W jmp QWORD PTR [rip+0x2f8d8]        # 0x1400361d8
   140006900:	ret    
   140006901:	int3   
   140006902:	int3   
   140006903:	int3   
   140006904:	int3   
   140006905:	int3   
   140006906:	int3   
   140006907:	int3   
   140006908:	int3   
   140006909:	int3   
   14000690a:	int3   
   14000690b:	int3   
   14000690c:	int3   
   14000690d:	int3   
   14000690e:	int3   
   14000690f:	int3   
   140006910:	cmp    edx,0x1
   140006913:	jne    0x140006925
   140006915:	mov    rcx,QWORD PTR [rcx+0x70]
   140006919:	mov    rax,QWORD PTR [rcx]
   14000691c:	test   BYTE PTR [rax+0x30],dl
   14000691f:	jne    0x140027f20
   140006925:	ret    
   140006926:	int3   
   140006927:	int3   
   140006928:	int3   
   140006929:	int3   
   14000692a:	int3   
   14000692b:	int3   
   14000692c:	int3   
   14000692d:	int3   
   14000692e:	int3   
   14000692f:	int3   
   140006930:	sub    rsp,0x28
   140006934:	cmp    edx,0x3
   140006937:	jne    0x140006945
   140006939:	mov    rdx,r8
   14000693c:	add    rsp,0x28
   140006940:	jmp    0x140006d30
   140006945:	mov    QWORD PTR [rsp+0x30],r8
   14000694a:	mov    r8d,edx
   14000694d:	lea    rdx,[rsp+0x30]
   140006952:	call   0x140006a10
   140006957:	add    rsp,0x28
   14000695b:	ret    
   14000695c:	int3   
   14000695d:	int3   
   14000695e:	int3   
   14000695f:	int3   
   140006960:	sub    rsp,0x28
   140006964:	cmp    edx,0x3
   140006967:	jne    0x140006975
   140006969:	mov    rdx,r8
   14000696c:	add    rsp,0x28
   140006970:	jmp    0x140006d90
   140006975:	mov    QWORD PTR [rsp+0x30],r8
   14000697a:	mov    r8d,edx
   14000697d:	lea    rdx,[rsp+0x30]
   140006982:	call   0x140006b60
   140006987:	add    rsp,0x28
   14000698b:	ret    
   14000698c:	int3   
   14000698d:	int3   
   14000698e:	int3   
   14000698f:	int3   
   140006990:	cmp    edx,0x3
   140006993:	je     0x140006df0
   140006999:	ret    
   14000699a:	int3   
   14000699b:	int3   
   14000699c:	int3   
   14000699d:	int3   
   14000699e:	int3   
   14000699f:	int3   
   1400069a0:	cmp    edx,0x3
   1400069a3:	je     0x140006e10
   1400069a9:	cmp    edx,0x1
   1400069ac:	je     0x140006e30
   1400069b2:	ret    
   1400069b3:	int3   
   1400069b4:	int3   
   1400069b5:	int3   
   1400069b6:	int3   
   1400069b7:	int3   
   1400069b8:	int3   
   1400069b9:	int3   
   1400069ba:	int3   
   1400069bb:	int3   
   1400069bc:	int3   
   1400069bd:	int3   
   1400069be:	int3   
   1400069bf:	int3   
   1400069c0:	cmp    edx,0x1
   1400069c3:	je     0x140006e30
   1400069c9:	ret    
   1400069ca:	int3   
   1400069cb:	int3   
   1400069cc:	int3   
   1400069cd:	int3   
   1400069ce:	int3   
   1400069cf:	int3   
   1400069d0:	cmp    edx,0x3
   1400069d3:	je     0x140006e10
   1400069d9:	cmp    edx,0x1
   1400069dc:	je     0x140006e30
   1400069e2:	ret    
   1400069e3:	int3   
   1400069e4:	int3   
   1400069e5:	int3   
   1400069e6:	int3   
   1400069e7:	int3   
   1400069e8:	int3   
   1400069e9:	int3   
   1400069ea:	int3   
   1400069eb:	int3   
   1400069ec:	int3   
   1400069ed:	int3   
   1400069ee:	int3   
   1400069ef:	int3   
   1400069f0:	cmp    r8d,0x3
   1400069f4:	je     0x140006e10
   1400069fa:	cmp    r8d,0x1
   1400069fe:	je     0x140006e30
   140006a04:	ret    
   140006a05:	int3   
   140006a06:	int3   
   140006a07:	int3   
   140006a08:	int3   
   140006a09:	int3   
   140006a0a:	int3   
   140006a0b:	int3   
   140006a0c:	int3   
   140006a0d:	int3   
   140006a0e:	int3   
   140006a0f:	int3   
   140006a10:	mov    QWORD PTR [rsp+0x8],rcx
   140006a15:	push   rbx
   140006a16:	push   rsi
   140006a17:	push   rdi
   140006a18:	push   r12
   140006a1a:	push   r13
   140006a1c:	push   r14
   140006a1e:	push   r15
   140006a20:	sub    rsp,0x40
   140006a24:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140006a2d:	mov    r12,rdx
   140006a30:	mov    rdi,rcx
   140006a33:	mov    rax,QWORD PTR [rcx]
   140006a36:	cmp    r8d,0x2
   140006a3a:	jne    0x140006b1f
   140006a40:	test   BYTE PTR [rax+0x40],r8b
   140006a44:	jne    0x140006a5d
   140006a46:	or     DWORD PTR [rax+0x40],r8d
   140006a4a:	mov    rdx,QWORD PTR [rcx]
   140006a4d:	mov    rax,QWORD PTR [rdx+0x20]
   140006a51:	mov    QWORD PTR [rdx+0x30],rax
   140006a55:	add    rax,QWORD PTR [rdx+0x28]
   140006a59:	mov    QWORD PTR [rdx+0x38],rax
   140006a5d:	mov    r13,QWORD PTR [rcx]
   140006a60:	lea    r8,[rsp+0x90]
   140006a68:	mov    QWORD PTR [rsp+0x98],r8
   140006a70:	mov    r14b,0x1
   140006a73:	movzx  ebx,BYTE PTR [rsp+0x90]
   140006a7b:	nop    DWORD PTR [rax+rax*1+0x0]
   140006a80:	test   r14b,r14b
   140006a83:	je     0x140006b10
   140006a89:	mov    rax,QWORD PTR [r13+0x38]
   140006a8d:	cmp    QWORD PTR [r13+0x30],rax
   140006a91:	je     0x140006af4
   140006a93:	mov    r15,QWORD PTR [rdi]
   140006a96:	mov    QWORD PTR [rsp+0x20],rax
   140006a9b:	lea    r9,[r13+0x30]
   140006a9f:	lea    rdx,[rsp+0x98]
   140006aa7:	mov    rcx,r15
   140006aaa:	call   QWORD PTR [rip+0x2fb50]        # 0x140036600
   140006ab0:	mov    rax,QWORD PTR [rip+0x2fb21]        # 0x1400365d8
   140006ab7:	mov    edx,DWORD PTR [rax]
   140006ab9:	mov    rcx,r15
   140006abc:	call   QWORD PTR [rip+0x2fad6]        # 0x140036598
   140006ac2:	mov    r14d,eax
   140006ac5:	mov    r9b,0x1
   140006ac8:	lea    r8,[r13+0x30]
   140006acc:	lea    rdx,[rsp+0x98]
   140006ad4:	mov    rcx,r15
   140006ad7:	call   QWORD PTR [rip+0x2fab3]        # 0x140036590
   140006add:	mov    ecx,r14d
   140006ae0:	call   QWORD PTR [rip+0x2fb22]        # 0x140036608
   140006ae6:	mov    rax,QWORD PTR [rip+0x2fae3]        # 0x1400365d0
   140006aed:	cmp    r14d,DWORD PTR [rax]
   140006af0:	setne  r14b
   140006af4:	movzx  r8d,bl
   140006af8:	mov    rdx,r12
   140006afb:	mov    rcx,rdi
   140006afe:	call   0x140009650
   140006b03:	mov    r8,QWORD PTR [rsp+0x98]
   140006b0b:	jmp    0x140006a80
   140006b10:	mov    rax,QWORD PTR [rdi]
   140006b13:	mov    DWORD PTR [rax+0x40],0x0
   140006b1a:	mov    rcx,QWORD PTR [rdi]
   140006b1d:	jmp    0x140006b29
   140006b1f:	mov    DWORD PTR [rax+0x40],0x0
   140006b26:	mov    rcx,QWORD PTR [rcx]
   140006b29:	mov    rax,QWORD PTR [rcx+0x20]
   140006b2d:	mov    r8b,0x1
   140006b30:	mov    QWORD PTR [rcx+0x30],rax
   140006b34:	mov    QWORD PTR [rcx+0x38],rax
   140006b38:	movzx  edx,r8b
   140006b3c:	mov    rcx,QWORD PTR [rdi]
   140006b3f:	add    rsp,0x40
   140006b43:	pop    r15
   140006b45:	pop    r14
   140006b47:	pop    r13
   140006b49:	pop    r12
   140006b4b:	pop    rdi
   140006b4c:	pop    rsi
   140006b4d:	pop    rbx
   140006b4e:	rex.W jmp QWORD PTR [rip+0x2fa53]        # 0x1400365a8
   140006b55:	int3   
   140006b56:	int3   
   140006b57:	int3   
   140006b58:	int3   
   140006b59:	int3   
   140006b5a:	int3   
   140006b5b:	int3   
   140006b5c:	int3   
   140006b5d:	int3   
   140006b5e:	int3   
   140006b5f:	int3   
   140006b60:	mov    QWORD PTR [rsp+0x8],rcx
   140006b65:	push   rbx
   140006b66:	push   rsi
   140006b67:	push   rdi
   140006b68:	push   r12
   140006b6a:	push   r13
   140006b6c:	push   r14
   140006b6e:	push   r15
   140006b70:	sub    rsp,0x40
   140006b74:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140006b7d:	mov    r12,rdx
   140006b80:	mov    rdi,rcx
   140006b83:	mov    rax,QWORD PTR [rcx]
   140006b86:	cmp    r8d,0x2
   140006b8a:	jne    0x140006c78
   140006b90:	test   BYTE PTR [rax+0x48],r8b
   140006b94:	jne    0x140006bad
   140006b96:	or     DWORD PTR [rax+0x48],r8d
   140006b9a:	mov    rdx,QWORD PTR [rcx]
   140006b9d:	mov    rax,QWORD PTR [rdx+0x28]
   140006ba1:	mov    QWORD PTR [rdx+0x38],rax
   140006ba5:	add    rax,QWORD PTR [rdx+0x30]
   140006ba9:	mov    QWORD PTR [rdx+0x40],rax
   140006bad:	mov    r13,QWORD PTR [rcx]
   140006bb0:	lea    r8,[rsp+0x90]
   140006bb8:	mov    QWORD PTR [rsp+0x98],r8
   140006bc0:	mov    r14b,0x1
   140006bc3:	movzx  ebx,BYTE PTR [rsp+0x90]
   140006bcb:	nop    DWORD PTR [rax+rax*1+0x0]
   140006bd0:	test   r14b,r14b
   140006bd3:	je     0x140006c69
   140006bd9:	mov    rax,QWORD PTR [r13+0x40]
   140006bdd:	cmp    QWORD PTR [r13+0x38],rax
   140006be1:	je     0x140006c4d
   140006be3:	mov    r14,QWORD PTR [rdi]
   140006be6:	mov    QWORD PTR [rsp+0x20],rax
   140006beb:	lea    r9,[r13+0x38]
   140006bef:	lea    rdx,[rsp+0x98]
   140006bf7:	mov    rcx,r14
   140006bfa:	call   QWORD PTR [rip+0x2fa00]        # 0x140036600
   140006c00:	mov    rax,QWORD PTR [rip+0x2f9e1]        # 0x1400365e8
   140006c07:	mov    edx,DWORD PTR [rax]
   140006c09:	mov    rcx,r14
   140006c0c:	call   QWORD PTR [rip+0x2f98e]        # 0x1400365a0
   140006c12:	mov    r15d,eax
   140006c15:	xor    r9d,r9d
   140006c18:	lea    r8,[r13+0x38]
   140006c1c:	lea    rdx,[rsp+0x98]
   140006c24:	mov    rcx,r14
   140006c27:	call   QWORD PTR [rip+0x2f963]        # 0x140036590
   140006c2d:	mov    ecx,r15d
   140006c30:	call   QWORD PTR [rip+0x2f9d2]        # 0x140036608
   140006c36:	mov    rax,QWORD PTR [rip+0x2f993]        # 0x1400365d0
   140006c3d:	cmp    r15d,DWORD PTR [rax]
   140006c40:	sete   cl
   140006c43:	mov    BYTE PTR [r14+0x20],cl
   140006c47:	test   cl,cl
   140006c49:	sete   r14b
   140006c4d:	movzx  r8d,bl
   140006c51:	mov    rdx,r12
   140006c54:	mov    rcx,rdi
   140006c57:	call   0x140009700
   140006c5c:	mov    r8,QWORD PTR [rsp+0x98]
   140006c64:	jmp    0x140006bd0
   140006c69:	mov    rax,QWORD PTR [rdi]
   140006c6c:	mov    DWORD PTR [rax+0x48],0x0
   140006c73:	mov    rcx,QWORD PTR [rdi]
   140006c76:	jmp    0x140006c82
   140006c78:	mov    DWORD PTR [rax+0x48],0x0
   140006c7f:	mov    rcx,QWORD PTR [rcx]
   140006c82:	mov    rax,QWORD PTR [rcx+0x28]
   140006c86:	mov    QWORD PTR [rcx+0x38],rax
   140006c8a:	mov    QWORD PTR [rcx+0x40],rax
   140006c8e:	mov    rcx,QWORD PTR [rdi]
   140006c91:	mov    BYTE PTR [rcx+0x20],0x0
   140006c95:	mov    r8b,0x1
   140006c98:	xor    edx,edx
   140006c9a:	add    rsp,0x40
   140006c9e:	pop    r15
   140006ca0:	pop    r14
   140006ca2:	pop    r13
   140006ca4:	pop    r12
   140006ca6:	pop    rdi
   140006ca7:	pop    rsi
   140006ca8:	pop    rbx
   140006ca9:	rex.W jmp QWORD PTR [rip+0x2f8f8]        # 0x1400365a8
   140006cb0:	cmp    edx,0x3
   140006cb3:	je     0x140006e30
   140006cb9:	mov    r8,QWORD PTR [rcx]
   140006cbc:	cmp    edx,0x2
   140006cbf:	jne    0x140006cd4
   140006cc1:	mov    rax,QWORD PTR [r8]
   140006cc4:	movsxd rcx,DWORD PTR [rax+0x4]
   140006cc8:	mov    rcx,QWORD PTR [rcx+r8*1+0x48]
   140006ccd:	rex.W jmp QWORD PTR [rip+0x2f504]        # 0x1400361d8
   140006cd4:	ret    
   140006cd5:	int3   
   140006cd6:	int3   
   140006cd7:	int3   
   140006cd8:	int3   
   140006cd9:	int3   
   140006cda:	int3   
   140006cdb:	int3   
   140006cdc:	int3   
   140006cdd:	int3   
   140006cde:	int3   
   140006cdf:	int3   
   140006ce0:	cmp    edx,0x3
   140006ce3:	je     0x140006e60
   140006ce9:	cmp    edx,0x2
   140006cec:	jne    0x140006cfc
   140006cee:	mov    rcx,QWORD PTR [rcx]
   140006cf1:	add    rcx,0x18
   140006cf5:	rex.W jmp QWORD PTR [rip+0x2f4dc]        # 0x1400361d8
   140006cfc:	ret    
   140006cfd:	int3   
   140006cfe:	int3   
   140006cff:	int3   
   140006d00:	cmp    edx,0x3
   140006d03:	je     0x140006e90
   140006d09:	mov    rcx,QWORD PTR [rcx]
   140006d0c:	cmp    edx,0x1
   140006d0f:	jne    0x140006d21
   140006d11:	mov    rcx,QWORD PTR [rcx+0x70]
   140006d15:	mov    rax,QWORD PTR [rcx]
   140006d18:	test   BYTE PTR [rax+0x30],dl
   140006d1b:	jne    0x140027f20
   140006d21:	ret    
   140006d22:	int3   
   140006d23:	int3   
   140006d24:	int3   
   140006d25:	int3   
   140006d26:	int3   
   140006d27:	int3   
   140006d28:	int3   
   140006d29:	int3   
   140006d2a:	int3   
   140006d2b:	int3   
   140006d2c:	int3   
   140006d2d:	int3   
   140006d2e:	int3   
   140006d2f:	int3   
   140006d30:	mov    QWORD PTR [rsp+0x10],rdx
   140006d35:	mov    QWORD PTR [rsp+0x8],rcx
   140006d3a:	push   rdi
   140006d3b:	sub    rsp,0x30
   140006d3f:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140006d48:	mov    QWORD PTR [rsp+0x58],rbx
   140006d4d:	mov    rbx,rdx
   140006d50:	mov    rdi,rcx
   140006d53:	mov    QWORD PTR [rsp+0x50],rdx
   140006d58:	mov    r8d,0x1
   140006d5e:	lea    rdx,[rsp+0x50]
   140006d63:	call   0x140006a10
   140006d68:	nop
   140006d69:	mov    QWORD PTR [rsp+0x48],rbx
   140006d6e:	mov    r8d,0x2
   140006d74:	lea    rdx,[rsp+0x48]
   140006d79:	mov    rcx,rdi
   140006d7c:	call   0x140006a10
   140006d81:	mov    rbx,QWORD PTR [rsp+0x58]
   140006d86:	add    rsp,0x30
   140006d8a:	pop    rdi
   140006d8b:	ret    
   140006d8c:	int3   
   140006d8d:	int3   
   140006d8e:	int3   
   140006d8f:	int3   
   140006d90:	mov    QWORD PTR [rsp+0x10],rdx
   140006d95:	mov    QWORD PTR [rsp+0x8],rcx
   140006d9a:	push   rdi
   140006d9b:	sub    rsp,0x30
   140006d9f:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140006da8:	mov    QWORD PTR [rsp+0x58],rbx
   140006dad:	mov    rbx,rdx
   140006db0:	mov    rdi,rcx
   140006db3:	mov    QWORD PTR [rsp+0x50],rdx
   140006db8:	mov    r8d,0x1
   140006dbe:	lea    rdx,[rsp+0x50]
   140006dc3:	call   0x140006b60
   140006dc8:	nop
   140006dc9:	mov    QWORD PTR [rsp+0x48],rbx
   140006dce:	mov    r8d,0x2
   140006dd4:	lea    rdx,[rsp+0x48]
   140006dd9:	mov    rcx,rdi
   140006ddc:	call   0x140006b60
   140006de1:	mov    rbx,QWORD PTR [rsp+0x58]
   140006de6:	add    rsp,0x30
   140006dea:	pop    rdi
   140006deb:	ret    
   140006dec:	int3   
   140006ded:	int3   
   140006dee:	int3   
   140006def:	int3   
   140006df0:	sub    rsp,0x38
   140006df4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140006dfd:	add    rsp,0x38
   140006e01:	ret    
   140006e02:	int3   
   140006e03:	int3   
   140006e04:	int3   
   140006e05:	int3   
   140006e06:	int3   
   140006e07:	int3   
   140006e08:	int3   
   140006e09:	int3   
   140006e0a:	int3   
   140006e0b:	int3   
   140006e0c:	int3   
   140006e0d:	int3   
   140006e0e:	int3   
   140006e0f:	int3   
   140006e10:	sub    rsp,0x38
   140006e14:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140006e1d:	call   0x140006e30
   140006e22:	nop
   140006e23:	add    rsp,0x38
   140006e27:	ret    
   140006e28:	int3   
   140006e29:	int3   
   140006e2a:	int3   
   140006e2b:	int3   
   140006e2c:	int3   
   140006e2d:	int3   
   140006e2e:	int3   
   140006e2f:	int3   
   140006e30:	mov    QWORD PTR [rsp+0x8],rcx
   140006e35:	sub    rsp,0x38
   140006e39:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140006e42:	mov    rdx,QWORD PTR [rcx]
   140006e45:	mov    rax,QWORD PTR [rdx]
   140006e48:	movsxd rcx,DWORD PTR [rax+0x4]
   140006e4c:	mov    rcx,QWORD PTR [rcx+rdx*1+0x48]
   140006e51:	call   QWORD PTR [rip+0x2f381]        # 0x1400361d8
   140006e57:	add    rsp,0x38
   140006e5b:	ret    
   140006e5c:	int3   
   140006e5d:	int3   
   140006e5e:	int3   
   140006e5f:	int3   
   140006e60:	mov    QWORD PTR [rsp+0x8],rcx
   140006e65:	sub    rsp,0x38
   140006e69:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140006e72:	mov    rcx,QWORD PTR [rcx]
   140006e75:	add    rcx,0x18
   140006e79:	call   QWORD PTR [rip+0x2f359]        # 0x1400361d8
   140006e7f:	add    rsp,0x38
   140006e83:	ret    
   140006e84:	int3   
   140006e85:	int3   
   140006e86:	int3   
   140006e87:	int3   
   140006e88:	int3   
   140006e89:	int3   
   140006e8a:	int3   
   140006e8b:	int3   
   140006e8c:	int3   
   140006e8d:	int3   
   140006e8e:	int3   
   140006e8f:	int3   
   140006e90:	sub    rsp,0x38
   140006e94:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140006e9d:	mov    rax,QWORD PTR [rcx]
   140006ea0:	mov    rcx,QWORD PTR [rax+0x70]
   140006ea4:	mov    rax,QWORD PTR [rcx]
   140006ea7:	test   BYTE PTR [rax+0x30],0x1
   140006eab:	je     0x140006eb3
   140006ead:	call   0x140027f20
   140006eb2:	nop
   140006eb3:	add    rsp,0x38
   140006eb7:	ret    
   140006eb8:	int3   
   140006eb9:	int3   
   140006eba:	int3   
   140006ebb:	int3   
   140006ebc:	int3   
   140006ebd:	int3   
   140006ebe:	int3   
   140006ebf:	int3   
   140006ec0:	test   rdx,rdx
   140006ec3:	je     0x140006ecb
   140006ec5:	mov    rax,QWORD PTR [r8]
   140006ec8:	mov    QWORD PTR [rdx],rax
   140006ecb:	ret    
   140006ecc:	int3   
   140006ecd:	int3   
   140006ece:	int3   
   140006ecf:	int3   
   140006ed0:	test   rdx,rdx
   140006ed3:	je     0x140006edb
   140006ed5:	mov    rax,QWORD PTR [r8]
   140006ed8:	mov    QWORD PTR [rdx],rax
   140006edb:	ret    
   140006edc:	int3   
   140006edd:	int3   
   140006ede:	int3   
   140006edf:	int3   
   140006ee0:	test   rdx,rdx
   140006ee3:	je     0x140006eeb
   140006ee5:	mov    rax,QWORD PTR [r8]
   140006ee8:	mov    QWORD PTR [rdx],rax
   140006eeb:	ret    
   140006eec:	int3   
   140006eed:	int3   
   140006eee:	int3   
   140006eef:	int3   
   140006ef0:	test   rdx,rdx
   140006ef3:	je     0x140006efb
   140006ef5:	mov    rax,QWORD PTR [r8]
   140006ef8:	mov    QWORD PTR [rdx],rax
   140006efb:	ret    
   140006efc:	int3   
   140006efd:	int3   
   140006efe:	int3   
   140006eff:	int3   
   140006f00:	test   rdx,rdx
   140006f03:	je     0x140006f0b
   140006f05:	mov    rax,QWORD PTR [r8]
   140006f08:	mov    QWORD PTR [rdx],rax
   140006f0b:	ret    
   140006f0c:	int3   
   140006f0d:	int3   
   140006f0e:	int3   
   140006f0f:	int3   
   140006f10:	test   rdx,rdx
   140006f13:	je     0x140006f1b
   140006f15:	mov    rax,QWORD PTR [r8]
   140006f18:	mov    QWORD PTR [rdx],rax
   140006f1b:	ret    
   140006f1c:	int3   
   140006f1d:	int3   
   140006f1e:	int3   
   140006f1f:	int3   
   140006f20:	test   rdx,rdx
   140006f23:	je     0x140006f2b
   140006f25:	mov    rax,QWORD PTR [r8]
   140006f28:	mov    QWORD PTR [rdx],rax
   140006f2b:	ret    
   140006f2c:	int3   
   140006f2d:	int3   
   140006f2e:	int3   
   140006f2f:	int3   
   140006f30:	test   rdx,rdx
   140006f33:	je     0x140006f3b
   140006f35:	mov    rax,QWORD PTR [r8]
   140006f38:	mov    QWORD PTR [rdx],rax
   140006f3b:	ret    
   140006f3c:	int3   
   140006f3d:	int3   
   140006f3e:	int3   
   140006f3f:	int3   
   140006f40:	test   rdx,rdx
   140006f43:	je     0x140006f4b
   140006f45:	mov    rax,QWORD PTR [r8]
   140006f48:	mov    QWORD PTR [rdx],rax
   140006f4b:	ret    
   140006f4c:	int3   
   140006f4d:	int3   
   140006f4e:	int3   
   140006f4f:	int3   
   140006f50:	test   rdx,rdx
   140006f53:	je     0x140006f5b
   140006f55:	mov    rax,QWORD PTR [r8]
   140006f58:	mov    QWORD PTR [rdx],rax
   140006f5b:	ret    
   140006f5c:	int3   
   140006f5d:	int3   
   140006f5e:	int3   
   140006f5f:	int3   
   140006f60:	test   rdx,rdx
   140006f63:	je     0x140006f6b
   140006f65:	mov    rax,QWORD PTR [r8]
   140006f68:	mov    QWORD PTR [rdx],rax
   140006f6b:	ret    
   140006f6c:	int3   
   140006f6d:	int3   
   140006f6e:	int3   
   140006f6f:	int3   
   140006f70:	test   rdx,rdx
   140006f73:	je     0x140006f7b
   140006f75:	mov    rax,QWORD PTR [r8]
   140006f78:	mov    QWORD PTR [rdx],rax
   140006f7b:	ret    
   140006f7c:	int3   
   140006f7d:	int3   
   140006f7e:	int3   
   140006f7f:	int3   
   140006f80:	mov    QWORD PTR [rsp+0x8],rcx
   140006f85:	push   rdi
   140006f86:	sub    rsp,0x30
   140006f8a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140006f93:	mov    QWORD PTR [rsp+0x48],rbx
   140006f98:	mov    rdi,rdx
   140006f9b:	mov    rbx,rcx
   140006f9e:	mov    QWORD PTR [rsp+0x50],rcx
   140006fa3:	test   rcx,rcx
   140006fa6:	je     0x140006fd6
   140006fa8:	mov    QWORD PTR [rcx+0x18],0xf
   140006fb0:	mov    QWORD PTR [rcx+0x10],0x0
   140006fb8:	mov    BYTE PTR [rcx],0x0
   140006fbb:	or     r9,0xffffffffffffffff
   140006fbf:	xor    r8d,r8d
   140006fc2:	call   0x14001ef20
   140006fc7:	nop
   140006fc8:	lea    rdx,[rdi+0x20]
   140006fcc:	lea    rcx,[rbx+0x20]
   140006fd0:	call   0x140010e10
   140006fd5:	nop
   140006fd6:	mov    rbx,QWORD PTR [rsp+0x48]
   140006fdb:	add    rsp,0x30
   140006fdf:	pop    rdi
   140006fe0:	ret    
   140006fe1:	int3   
   140006fe2:	int3   
   140006fe3:	int3   
   140006fe4:	int3   
   140006fe5:	int3   
   140006fe6:	int3   
   140006fe7:	int3   
   140006fe8:	int3   
   140006fe9:	int3   
   140006fea:	int3   
   140006feb:	int3   
   140006fec:	int3   
   140006fed:	int3   
   140006fee:	int3   
   140006fef:	int3   
   140006ff0:	mov    QWORD PTR [rsp+0x10],rdx
   140006ff5:	sub    rsp,0x38
   140006ff9:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140007002:	mov    rax,rdx
   140007005:	mov    QWORD PTR [rsp+0x58],rdx
   14000700a:	test   rdx,rdx
   14000700d:	je     0x14000701b
   14000700f:	mov    rdx,r8
   140007012:	mov    rcx,rax
   140007015:	call   0x140010c70
   14000701a:	nop
   14000701b:	add    rsp,0x38
   14000701f:	ret    
   140007020:	mov    QWORD PTR [rsp+0x10],rdx
   140007025:	sub    rsp,0x38
   140007029:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140007032:	mov    rax,rdx
   140007035:	mov    QWORD PTR [rsp+0x58],rdx
   14000703a:	test   rdx,rdx
   14000703d:	je     0x14000704b
   14000703f:	mov    rdx,r8
   140007042:	mov    rcx,rax
   140007045:	call   0x140010c70
   14000704a:	nop
   14000704b:	add    rsp,0x38
   14000704f:	ret    
   140007050:	mov    QWORD PTR [rsp+0x10],rdx
   140007055:	sub    rsp,0x38
   140007059:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140007062:	mov    rax,rdx
   140007065:	mov    QWORD PTR [rsp+0x58],rdx
   14000706a:	test   rdx,rdx
   14000706d:	je     0x14000707b
   14000706f:	mov    rdx,r8
   140007072:	mov    rcx,rax
   140007075:	call   0x140010c70
   14000707a:	nop
   14000707b:	add    rsp,0x38
   14000707f:	ret    
   140007080:	mov    QWORD PTR [rsp+0x10],rdx
   140007085:	sub    rsp,0x38
   140007089:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140007092:	mov    rax,rdx
   140007095:	mov    QWORD PTR [rsp+0x58],rdx
   14000709a:	test   rdx,rdx
   14000709d:	je     0x1400070ab
   14000709f:	mov    rdx,r8
   1400070a2:	mov    rcx,rax
   1400070a5:	call   0x140010c70
   1400070aa:	nop
   1400070ab:	add    rsp,0x38
   1400070af:	ret    
   1400070b0:	mov    QWORD PTR [rsp+0x10],rdx
   1400070b5:	sub    rsp,0x38
   1400070b9:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400070c2:	mov    rax,rdx
   1400070c5:	mov    QWORD PTR [rsp+0x58],rdx
   1400070ca:	test   rdx,rdx
   1400070cd:	je     0x1400070db
   1400070cf:	mov    rdx,r8
   1400070d2:	mov    rcx,rax
   1400070d5:	call   0x140010c70
   1400070da:	nop
   1400070db:	add    rsp,0x38
   1400070df:	ret    
   1400070e0:	mov    QWORD PTR [rsp+0x10],rdx
   1400070e5:	sub    rsp,0x38
   1400070e9:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400070f2:	mov    r10,r8
   1400070f5:	mov    rax,rdx
   1400070f8:	mov    QWORD PTR [rsp+0x58],rdx
   1400070fd:	test   rdx,rdx
   140007100:	je     0x140007128
   140007102:	mov    QWORD PTR [rdx+0x18],0xf
   14000710a:	mov    QWORD PTR [rdx+0x10],0x0
   140007112:	mov    BYTE PTR [rdx],0x0
   140007115:	or     r9,0xffffffffffffffff
   140007119:	xor    r8d,r8d
   14000711c:	mov    rdx,r10
   14000711f:	mov    rcx,rax
   140007122:	call   0x14001ef20
   140007127:	nop
   140007128:	add    rsp,0x38
   14000712c:	ret    
   14000712d:	int3   
   14000712e:	int3   
   14000712f:	int3   
   140007130:	mov    QWORD PTR [rsp+0x10],rdx
   140007135:	sub    rsp,0x38
   140007139:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140007142:	mov    r10,r8
   140007145:	mov    rax,rdx
   140007148:	mov    QWORD PTR [rsp+0x58],rdx
   14000714d:	test   rdx,rdx
   140007150:	je     0x140007178
   140007152:	mov    QWORD PTR [rdx+0x18],0xf
   14000715a:	mov    QWORD PTR [rdx+0x10],0x0
   140007162:	mov    BYTE PTR [rdx],0x0
   140007165:	or     r9,0xffffffffffffffff
   140007169:	xor    r8d,r8d
   14000716c:	mov    rdx,r10
   14000716f:	mov    rcx,rax
   140007172:	call   0x14001ef20
   140007177:	nop
   140007178:	add    rsp,0x38
   14000717c:	ret    
   14000717d:	int3   
   14000717e:	int3   
   14000717f:	int3   
   140007180:	mov    QWORD PTR [rsp+0x10],rdx
   140007185:	sub    rsp,0x38
   140007189:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140007192:	mov    r10,r8
   140007195:	mov    rax,rdx
   140007198:	mov    QWORD PTR [rsp+0x58],rdx
   14000719d:	test   rdx,rdx
   1400071a0:	je     0x1400071c8
   1400071a2:	mov    QWORD PTR [rdx+0x18],0xf
   1400071aa:	mov    QWORD PTR [rdx+0x10],0x0
   1400071b2:	mov    BYTE PTR [rdx],0x0
   1400071b5:	or     r9,0xffffffffffffffff
   1400071b9:	xor    r8d,r8d
   1400071bc:	mov    rdx,r10
   1400071bf:	mov    rcx,rax
   1400071c2:	call   0x14001ef20
   1400071c7:	nop
   1400071c8:	add    rsp,0x38
   1400071cc:	ret    
   1400071cd:	int3   
   1400071ce:	int3   
   1400071cf:	int3   
   1400071d0:	mov    QWORD PTR [rsp+0x10],rdx
   1400071d5:	sub    rsp,0x38
   1400071d9:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400071e2:	mov    r10,r8
   1400071e5:	mov    rax,rdx
   1400071e8:	mov    QWORD PTR [rsp+0x58],rdx
   1400071ed:	test   rdx,rdx
   1400071f0:	je     0x140007218
   1400071f2:	mov    QWORD PTR [rdx+0x18],0xf
   1400071fa:	mov    QWORD PTR [rdx+0x10],0x0
   140007202:	mov    BYTE PTR [rdx],0x0
   140007205:	or     r9,0xffffffffffffffff
   140007209:	xor    r8d,r8d
   14000720c:	mov    rdx,r10
   14000720f:	mov    rcx,rax
   140007212:	call   0x14001ef20
   140007217:	nop
   140007218:	add    rsp,0x38
   14000721c:	ret    
   14000721d:	int3   
   14000721e:	int3   
   14000721f:	int3   
   140007220:	mov    QWORD PTR [rsp+0x10],rdx
   140007225:	sub    rsp,0x38
   140007229:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140007232:	mov    r10,r8
   140007235:	mov    rax,rdx
   140007238:	mov    QWORD PTR [rsp+0x58],rdx
   14000723d:	test   rdx,rdx
   140007240:	je     0x140007268
   140007242:	mov    QWORD PTR [rdx+0x18],0xf
   14000724a:	mov    QWORD PTR [rdx+0x10],0x0
   140007252:	mov    BYTE PTR [rdx],0x0
   140007255:	or     r9,0xffffffffffffffff
   140007259:	xor    r8d,r8d
   14000725c:	mov    rdx,r10
   14000725f:	mov    rcx,rax
   140007262:	call   0x14001ef20
   140007267:	nop
   140007268:	add    rsp,0x38
   14000726c:	ret    
   14000726d:	int3   
   14000726e:	int3   
   14000726f:	int3   
   140007270:	mov    QWORD PTR [rsp+0x10],rdx
   140007275:	push   rdi
   140007276:	sub    rsp,0x30
   14000727a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140007283:	mov    QWORD PTR [rsp+0x40],rbx
   140007288:	mov    rdi,r8
   14000728b:	mov    rbx,rdx
   14000728e:	mov    QWORD PTR [rsp+0x58],rdx
   140007293:	test   rdx,rdx
   140007296:	je     0x1400072f9
   140007298:	mov    QWORD PTR [rdx+0x18],0xf
   1400072a0:	mov    QWORD PTR [rdx+0x10],0x0
   1400072a8:	mov    BYTE PTR [rdx],0x0
   1400072ab:	cmp    QWORD PTR [r8+0x18],0x10
   1400072b0:	jae    0x1400072c9
   1400072b2:	mov    r8,QWORD PTR [r8+0x10]
   1400072b6:	inc    r8
   1400072b9:	je     0x1400072d6
   1400072bb:	mov    rdx,rdi
   1400072be:	mov    rcx,rbx
   1400072c1:	call   QWORD PTR [rip+0x2f199]        # 0x140036460
   1400072c7:	jmp    0x1400072d6
   1400072c9:	mov    rax,QWORD PTR [r8]
   1400072cc:	mov    QWORD PTR [rdx],rax
   1400072cf:	mov    QWORD PTR [r8],0x0
   1400072d6:	mov    rax,QWORD PTR [rdi+0x10]
   1400072da:	mov    QWORD PTR [rbx+0x10],rax
   1400072de:	mov    rax,QWORD PTR [rdi+0x18]
   1400072e2:	mov    QWORD PTR [rbx+0x18],rax
   1400072e6:	mov    QWORD PTR [rdi+0x18],0xf
   1400072ee:	mov    QWORD PTR [rdi+0x10],0x0
   1400072f6:	mov    BYTE PTR [rdi],0x0
   1400072f9:	mov    rbx,QWORD PTR [rsp+0x40]
   1400072fe:	add    rsp,0x30
   140007302:	pop    rdi
   140007303:	ret    
   140007304:	int3   
   140007305:	int3   
   140007306:	int3   
   140007307:	int3   
   140007308:	int3   
   140007309:	int3   
   14000730a:	int3   
   14000730b:	int3   
   14000730c:	int3   
   14000730d:	int3   
   14000730e:	int3   
   14000730f:	int3   
   140007310:	test   rdx,rdx
   140007313:	je     0x140007390
   140007315:	mov    QWORD PTR [rsp+0x8],rbx
   14000731a:	push   rdi
   14000731b:	sub    rsp,0x20
   14000731f:	mov    QWORD PTR [rdx+0x18],0xf
   140007327:	mov    QWORD PTR [rdx+0x10],0x0
   14000732f:	mov    BYTE PTR [rdx],0x0
   140007332:	cmp    QWORD PTR [r8+0x18],0x10
   140007337:	mov    rbx,r8
   14000733a:	mov    rdi,rdx
   14000733d:	jae    0x140007356
   14000733f:	mov    r8,QWORD PTR [r8+0x10]
   140007343:	inc    r8
   140007346:	je     0x140007363
   140007348:	mov    rdx,rbx
   14000734b:	mov    rcx,rdi
   14000734e:	call   QWORD PTR [rip+0x2f10c]        # 0x140036460
   140007354:	jmp    0x140007363
   140007356:	mov    rax,QWORD PTR [r8]
   140007359:	mov    QWORD PTR [rdx],rax
   14000735c:	mov    QWORD PTR [r8],0x0
   140007363:	mov    rax,QWORD PTR [rbx+0x10]
   140007367:	mov    QWORD PTR [rdi+0x10],rax
   14000736b:	mov    rax,QWORD PTR [rbx+0x18]
   14000736f:	mov    QWORD PTR [rdi+0x18],rax
   140007373:	mov    QWORD PTR [rbx+0x18],0xf
   14000737b:	mov    QWORD PTR [rbx+0x10],0x0
   140007383:	mov    BYTE PTR [rbx],0x0
   140007386:	mov    rbx,QWORD PTR [rsp+0x30]
   14000738b:	add    rsp,0x20
   14000738f:	pop    rdi
   140007390:	ret    
   140007391:	int3   
   140007392:	int3   
   140007393:	int3   
   140007394:	int3   
   140007395:	int3   
   140007396:	int3   
   140007397:	int3   
   140007398:	int3   
   140007399:	int3   
   14000739a:	int3   
   14000739b:	int3   
   14000739c:	int3   
   14000739d:	int3   
   14000739e:	int3   
   14000739f:	int3   
   1400073a0:	mov    QWORD PTR [rsp+0x10],rdx
   1400073a5:	push   rdi
   1400073a6:	sub    rsp,0x30
   1400073aa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400073b3:	mov    QWORD PTR [rsp+0x40],rbx
   1400073b8:	mov    rdi,r8
   1400073bb:	mov    rbx,rdx
   1400073be:	mov    QWORD PTR [rsp+0x58],rdx
   1400073c3:	test   rdx,rdx
   1400073c6:	je     0x140007429
   1400073c8:	mov    QWORD PTR [rdx+0x18],0xf
   1400073d0:	mov    QWORD PTR [rdx+0x10],0x0
   1400073d8:	mov    BYTE PTR [rdx],0x0
   1400073db:	cmp    QWORD PTR [r8+0x18],0x10
   1400073e0:	jae    0x1400073f9
   1400073e2:	mov    r8,QWORD PTR [r8+0x10]
   1400073e6:	inc    r8
   1400073e9:	je     0x140007406
   1400073eb:	mov    rdx,rdi
   1400073ee:	mov    rcx,rbx
   1400073f1:	call   QWORD PTR [rip+0x2f069]        # 0x140036460
   1400073f7:	jmp    0x140007406
   1400073f9:	mov    rax,QWORD PTR [r8]
   1400073fc:	mov    QWORD PTR [rdx],rax
   1400073ff:	mov    QWORD PTR [r8],0x0
   140007406:	mov    rax,QWORD PTR [rdi+0x10]
   14000740a:	mov    QWORD PTR [rbx+0x10],rax
   14000740e:	mov    rax,QWORD PTR [rdi+0x18]
   140007412:	mov    QWORD PTR [rbx+0x18],rax
   140007416:	mov    QWORD PTR [rdi+0x18],0xf
   14000741e:	mov    QWORD PTR [rdi+0x10],0x0
   140007426:	mov    BYTE PTR [rdi],0x0
   140007429:	mov    rbx,QWORD PTR [rsp+0x40]
   14000742e:	add    rsp,0x30
   140007432:	pop    rdi
   140007433:	ret    
   140007434:	int3   
   140007435:	int3   
   140007436:	int3   
   140007437:	int3   
   140007438:	int3   
   140007439:	int3   
   14000743a:	int3   
   14000743b:	int3   
   14000743c:	int3   
   14000743d:	int3   
   14000743e:	int3   
   14000743f:	int3   
   140007440:	mov    r11,rsp
   140007443:	sub    rsp,0x68
   140007447:	mov    QWORD PTR [r11-0x38],r8
   14000744b:	lea    rax,[r11+0x10]
   14000744f:	mov    QWORD PTR [r11+0x8],rdx
   140007453:	mov    QWORD PTR [r11-0x48],rax
   140007457:	lea    rax,[r11+0x8]
   14000745b:	mov    QWORD PTR [r11+0x10],rcx
   14000745f:	mov    QWORD PTR [r11-0x40],rax
   140007463:	lea    r8,[r11+0x8]
   140007467:	lea    rdx,[r11+0x10]
   14000746b:	movups xmm0,XMMWORD PTR [rsp+0x20]
   140007470:	movsd  xmm1,QWORD PTR [rsp+0x30]
   140007476:	lea    rcx,[r11-0x28]
   14000747a:	movaps XMMWORD PTR [rsp+0x40],xmm0
   14000747f:	movsd  QWORD PTR [rsp+0x50],xmm1
   140007485:	call   0x1400089f0
   14000748a:	add    rsp,0x68
   14000748e:	ret    
   14000748f:	int3   
   140007490:	mov    rax,rsp
   140007493:	push   rdi
   140007494:	push   r12
   140007496:	push   r13
   140007498:	push   r14
   14000749a:	push   r15
   14000749c:	sub    rsp,0x40
   1400074a0:	mov    QWORD PTR [rax-0x48],0xfffffffffffffffe
   1400074a8:	mov    QWORD PTR [rax+0x8],rbx
   1400074ac:	mov    QWORD PTR [rax+0x10],rbp
   1400074b0:	mov    QWORD PTR [rax+0x18],rsi
   1400074b4:	mov    r12,r8
   1400074b7:	mov    r14,rdx
   1400074ba:	mov    r13,rcx
   1400074bd:	movsxd rbx,r8d
   1400074c0:	xor    esi,esi
   1400074c2:	test   r8d,r8d
   1400074c5:	je     0x1400074e4
   1400074c7:	cmp    rbx,0xffffffffffffffff
   1400074cb:	ja     0x1400074dd
   1400074cd:	mov    rcx,rbx
   1400074d0:	call   0x14003027c
   1400074d5:	mov    rsi,rax
   1400074d8:	test   rax,rax
   1400074db:	jne    0x1400074e4
   1400074dd:	call   QWORD PTR [rip+0x2ed35]        # 0x140036218
   1400074e3:	int3   
   1400074e4:	mov    QWORD PTR [rsp+0x28],rsi
   1400074e9:	mov    QWORD PTR [rsp+0x30],rbx
   1400074ee:	xor    ebp,ebp
   1400074f0:	mov    r8,r12
   1400074f3:	mov    rdx,rsi
   1400074f6:	mov    rcx,QWORD PTR [r13+0x0]
   1400074fa:	call   QWORD PTR [rip+0x2ecd0]        # 0x1400361d0
   140007500:	or     rdi,0xffffffffffffffff
   140007504:	test   rax,rax
   140007507:	cmovne rdi,rax
   14000750b:	cmp    rdi,0xffffffffffffffff
   14000750f:	sete   r15b
   140007513:	cmp    rdi,0xffffffffffffffff
   140007517:	je     0x140007542
   140007519:	xor    ebx,ebx
   14000751b:	test   rdi,rdi
   14000751e:	jle    0x14000753f
   140007520:	mov    rcx,QWORD PTR [r14]
   140007523:	mov    r8,rdi
   140007526:	sub    r8,rbx
   140007529:	lea    rdx,[rbx+rsi*1]
   14000752d:	add    rcx,0x18
   140007531:	call   QWORD PTR [rip+0x2ec89]        # 0x1400361c0
   140007537:	add    rbx,rax
   14000753a:	cmp    rbx,rdi
   14000753d:	jl     0x140007520
   14000753f:	add    rbp,rdi
   140007542:	test   r15b,r15b
   140007545:	je     0x1400074f0
   140007547:	test   rsi,rsi
   14000754a:	je     0x140007554
   14000754c:	mov    rcx,rsi
   14000754f:	call   0x140030282
   140007554:	mov    rax,rbp
   140007557:	mov    rbx,QWORD PTR [rsp+0x70]
   14000755c:	mov    rbp,QWORD PTR [rsp+0x78]
   140007561:	mov    rsi,QWORD PTR [rsp+0x80]
   140007569:	add    rsp,0x40
   14000756d:	pop    r15
   14000756f:	pop    r14
   140007571:	pop    r13
   140007573:	pop    r12
   140007575:	pop    rdi
   140007576:	ret    
   140007577:	int3   
   140007578:	int3   
   140007579:	int3   
   14000757a:	int3   
   14000757b:	int3   
   14000757c:	int3   
   14000757d:	int3   
   14000757e:	int3   
   14000757f:	int3   
   140007580:	mov    QWORD PTR [rsp+0x10],rdx
   140007585:	mov    QWORD PTR [rsp+0x8],rcx
   14000758a:	mov    r11,rsp
   14000758d:	sub    rsp,0x68
   140007591:	mov    QWORD PTR [r11-0x38],r8
   140007595:	lea    rax,[r11+0x8]
   140007599:	lea    rdx,[r11+0x8]
   14000759d:	mov    QWORD PTR [r11-0x48],rax
   1400075a1:	lea    rax,[r11+0x10]
   1400075a5:	lea    r8,[r11+0x10]
   1400075a9:	mov    QWORD PTR [r11-0x40],rax
   1400075ad:	lea    rcx,[r11-0x28]
   1400075b1:	movups xmm0,XMMWORD PTR [rsp+0x20]
   1400075b6:	movsd  xmm1,QWORD PTR [rsp+0x30]
   1400075bc:	movaps XMMWORD PTR [rsp+0x40],xmm0
   1400075c1:	movsd  QWORD PTR [rsp+0x50],xmm1
   1400075c7:	call   0x1400089f0
   1400075cc:	add    rsp,0x68
   1400075d0:	ret    
   1400075d1:	int3   
   1400075d2:	int3   
   1400075d3:	int3   
   1400075d4:	int3   
   1400075d5:	int3   
   1400075d6:	int3   
   1400075d7:	int3   
   1400075d8:	int3   
   1400075d9:	int3   
   1400075da:	int3   
   1400075db:	int3   
   1400075dc:	int3   
   1400075dd:	int3   
   1400075de:	int3   
   1400075df:	int3   
   1400075e0:	lea    rax,[rcx+0x8]
   1400075e4:	ret    
   1400075e5:	int3   
   1400075e6:	int3   
   1400075e7:	int3   
   1400075e8:	int3   
   1400075e9:	int3   
   1400075ea:	int3   
   1400075eb:	int3   
   1400075ec:	int3   
   1400075ed:	int3   
   1400075ee:	int3   
   1400075ef:	int3   
   1400075f0:	lea    rax,[rcx+0x68]
   1400075f4:	ret    
   1400075f5:	int3   
   1400075f6:	int3   
   1400075f7:	int3   
   1400075f8:	int3   
   1400075f9:	int3   
   1400075fa:	int3   
   1400075fb:	int3   
   1400075fc:	int3   
   1400075fd:	int3   
   1400075fe:	int3   
   1400075ff:	int3   
   140007600:	rex push rbx
   140007602:	sub    rsp,0x20
   140007606:	cmp    BYTE PTR [rcx+0x8],0x0
   14000760a:	mov    rbx,rcx
   14000760d:	jne    0x140007614
   14000760f:	call   0x140023310
   140007614:	movsx  rax,BYTE PTR [rbx+0x9]
   140007619:	lea    rcx,[rip+0x37150]        # 0x14003e770
   140007620:	movzx  eax,BYTE PTR [rax+rcx*1]
   140007624:	add    rsp,0x20
   140007628:	pop    rbx
   140007629:	ret    
   14000762a:	int3   
   14000762b:	int3   
   14000762c:	int3   
   14000762d:	int3   
   14000762e:	int3   
   14000762f:	int3   
   140007630:	mov    rax,QWORD PTR [rcx]
   140007633:	add    rcx,0x8
   140007637:	movzx  edx,BYTE PTR [rax]
   14000763a:	jmp    0x14001a5a0
   14000763f:	int3   
   140007640:	rex push rbx
   140007642:	sub    rsp,0x20
   140007646:	cmp    BYTE PTR [rcx+0x8],0x0
   14000764a:	mov    rbx,rcx
   14000764d:	jne    0x14000765e
   14000764f:	call   0x140023310
   140007654:	movzx  eax,BYTE PTR [rbx+0x9]
   140007658:	add    rsp,0x20
   14000765c:	pop    rbx
   14000765d:	ret    
   14000765e:	movzx  eax,BYTE PTR [rcx+0x9]
   140007662:	add    rsp,0x20
   140007666:	pop    rbx
   140007667:	ret    
   140007668:	int3   
   140007669:	int3   
   14000766a:	int3   
   14000766b:	int3   
   14000766c:	int3   
   14000766d:	int3   
   14000766e:	int3   
   14000766f:	int3   
   140007670:	rex push rbx
   140007672:	sub    rsp,0x20
   140007676:	cmp    BYTE PTR [rcx+0x10],0x0
   14000767a:	mov    rbx,rcx
   14000767d:	jne    0x14000768e
   14000767f:	call   0x1400233b0
   140007684:	movzx  eax,BYTE PTR [rbx+0x11]
   140007688:	add    rsp,0x20
   14000768c:	pop    rbx
   14000768d:	ret    
   14000768e:	movzx  eax,BYTE PTR [rcx+0x11]
   140007692:	add    rsp,0x20
   140007696:	pop    rbx
   140007697:	ret    
   140007698:	int3   
   140007699:	int3   
   14000769a:	int3   
   14000769b:	int3   
   14000769c:	int3   
   14000769d:	int3   
   14000769e:	int3   
   14000769f:	int3   
   1400076a0:	mov    rax,QWORD PTR [rcx]
   1400076a3:	ret    
   1400076a4:	int3   
   1400076a5:	int3   
   1400076a6:	int3   
   1400076a7:	int3   
   1400076a8:	int3   
   1400076a9:	int3   
   1400076aa:	int3   
   1400076ab:	int3   
   1400076ac:	int3   
   1400076ad:	int3   
   1400076ae:	int3   
   1400076af:	int3   
   1400076b0:	mov    rax,QWORD PTR [rcx]
   1400076b3:	ret    
   1400076b4:	int3   
   1400076b5:	int3   
   1400076b6:	int3   
   1400076b7:	int3   
   1400076b8:	int3   
   1400076b9:	int3   
   1400076ba:	int3   
   1400076bb:	int3   
   1400076bc:	int3   
   1400076bd:	int3   
   1400076be:	int3   
   1400076bf:	int3   
   1400076c0:	mov    rax,QWORD PTR [rcx]
   1400076c3:	ret    
   1400076c4:	int3   
   1400076c5:	int3   
   1400076c6:	int3   
   1400076c7:	int3   
   1400076c8:	int3   
   1400076c9:	int3   
   1400076ca:	int3   
   1400076cb:	int3   
   1400076cc:	int3   
   1400076cd:	int3   
   1400076ce:	int3   
   1400076cf:	int3   
   1400076d0:	mov    rax,QWORD PTR [rcx]
   1400076d3:	ret    
   1400076d4:	int3   
   1400076d5:	int3   
   1400076d6:	int3   
   1400076d7:	int3   
   1400076d8:	int3   
   1400076d9:	int3   
   1400076da:	int3   
   1400076db:	int3   
   1400076dc:	int3   
   1400076dd:	int3   
   1400076de:	int3   
   1400076df:	int3   
   1400076e0:	ret    0x0
   1400076e3:	int3   
   1400076e4:	int3   
   1400076e5:	int3   
   1400076e6:	int3   
   1400076e7:	int3   
   1400076e8:	int3   
   1400076e9:	int3   
   1400076ea:	int3   
   1400076eb:	int3   
   1400076ec:	int3   
   1400076ed:	int3   
   1400076ee:	int3   
   1400076ef:	int3   
   1400076f0:	ret    0x0
   1400076f3:	int3   
   1400076f4:	int3   
   1400076f5:	int3   
   1400076f6:	int3   
   1400076f7:	int3   
   1400076f8:	int3   
   1400076f9:	int3   
   1400076fa:	int3   
   1400076fb:	int3   
   1400076fc:	int3   
   1400076fd:	int3   
   1400076fe:	int3   
   1400076ff:	int3   
   140007700:	ret    0x0
   140007703:	int3   
   140007704:	int3   
   140007705:	int3   
   140007706:	int3   
   140007707:	int3   
   140007708:	int3   
   140007709:	int3   
   14000770a:	int3   
   14000770b:	int3   
   14000770c:	int3   
   14000770d:	int3   
   14000770e:	int3   
   14000770f:	int3   
   140007710:	ret    0x0
   140007713:	int3   
   140007714:	int3   
   140007715:	int3   
   140007716:	int3   
   140007717:	int3   
   140007718:	int3   
   140007719:	int3   
   14000771a:	int3   
   14000771b:	int3   
   14000771c:	int3   
   14000771d:	int3   
   14000771e:	int3   
   14000771f:	int3   
   140007720:	ret    0x0
   140007723:	int3   
   140007724:	int3   
   140007725:	int3   
   140007726:	int3   
   140007727:	int3   
   140007728:	int3   
   140007729:	int3   
   14000772a:	int3   
   14000772b:	int3   
   14000772c:	int3   
   14000772d:	int3   
   14000772e:	int3   
   14000772f:	int3   
   140007730:	ret    0x0
   140007733:	int3   
   140007734:	int3   
   140007735:	int3   
   140007736:	int3   
   140007737:	int3   
   140007738:	int3   
   140007739:	int3   
   14000773a:	int3   
   14000773b:	int3   
   14000773c:	int3   
   14000773d:	int3   
   14000773e:	int3   
   14000773f:	int3   
   140007740:	ret    0x0
   140007743:	int3   
   140007744:	int3   
   140007745:	int3   
   140007746:	int3   
   140007747:	int3   
   140007748:	int3   
   140007749:	int3   
   14000774a:	int3   
   14000774b:	int3   
   14000774c:	int3   
   14000774d:	int3   
   14000774e:	int3   
   14000774f:	int3   
   140007750:	ret    0x0
   140007753:	int3   
   140007754:	int3   
   140007755:	int3   
   140007756:	int3   
   140007757:	int3   
   140007758:	int3   
   140007759:	int3   
   14000775a:	int3   
   14000775b:	int3   
   14000775c:	int3   
   14000775d:	int3   
   14000775e:	int3   
   14000775f:	int3   
   140007760:	ret    0x0
   140007763:	int3   
   140007764:	int3   
   140007765:	int3   
   140007766:	int3   
   140007767:	int3   
   140007768:	int3   
   140007769:	int3   
   14000776a:	int3   
   14000776b:	int3   
   14000776c:	int3   
   14000776d:	int3   
   14000776e:	int3   
   14000776f:	int3   
   140007770:	ret    0x0
   140007773:	int3   
   140007774:	int3   
   140007775:	int3   
   140007776:	int3   
   140007777:	int3   
   140007778:	int3   
   140007779:	int3   
   14000777a:	int3   
   14000777b:	int3   
   14000777c:	int3   
   14000777d:	int3   
   14000777e:	int3   
   14000777f:	int3   
   140007780:	ret    0x0
   140007783:	int3   
   140007784:	int3   
   140007785:	int3   
   140007786:	int3   
   140007787:	int3   
   140007788:	int3   
   140007789:	int3   
   14000778a:	int3   
   14000778b:	int3   
   14000778c:	int3   
   14000778d:	int3   
   14000778e:	int3   
   14000778f:	int3   
   140007790:	ret    0x0
   140007793:	int3   
   140007794:	int3   
   140007795:	int3   
   140007796:	int3   
   140007797:	int3   
   140007798:	int3   
   140007799:	int3   
   14000779a:	int3   
   14000779b:	int3   
   14000779c:	int3   
   14000779d:	int3   
   14000779e:	int3   
   14000779f:	int3   
   1400077a0:	ret    0x0
   1400077a3:	int3   
   1400077a4:	int3   
   1400077a5:	int3   
   1400077a6:	int3   
   1400077a7:	int3   
   1400077a8:	int3   
   1400077a9:	int3   
   1400077aa:	int3   
   1400077ab:	int3   
   1400077ac:	int3   
   1400077ad:	int3   
   1400077ae:	int3   
   1400077af:	int3   
   1400077b0:	ret    0x0
   1400077b3:	int3   
   1400077b4:	int3   
   1400077b5:	int3   
   1400077b6:	int3   
   1400077b7:	int3   
   1400077b8:	int3   
   1400077b9:	int3   
   1400077ba:	int3   
   1400077bb:	int3   
   1400077bc:	int3   
   1400077bd:	int3   
   1400077be:	int3   
   1400077bf:	int3   
   1400077c0:	ret    0x0
   1400077c3:	int3   
   1400077c4:	int3   
   1400077c5:	int3   
   1400077c6:	int3   
   1400077c7:	int3   
   1400077c8:	int3   
   1400077c9:	int3   
   1400077ca:	int3   
   1400077cb:	int3   
   1400077cc:	int3   
   1400077cd:	int3   
   1400077ce:	int3   
   1400077cf:	int3   
   1400077d0:	mov    QWORD PTR [rsp+0x8],rcx
   1400077d5:	push   rbx
   1400077d6:	sub    rsp,0x30
   1400077da:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400077e3:	mov    rbx,rcx
   1400077e6:	add    rcx,0x20
   1400077ea:	call   0x140017040
   1400077ef:	nop
   1400077f0:	cmp    QWORD PTR [rbx+0x18],0x10
   1400077f5:	jb     0x1400077ff
   1400077f7:	mov    rcx,QWORD PTR [rbx]
   1400077fa:	call   0x140030282
   1400077ff:	mov    QWORD PTR [rbx+0x18],0xf
   140007807:	mov    QWORD PTR [rbx+0x10],0x0
   14000780f:	mov    BYTE PTR [rbx],0x0
   140007812:	add    rsp,0x30
   140007816:	pop    rbx
   140007817:	ret    
   140007818:	int3   
   140007819:	int3   
   14000781a:	int3   
   14000781b:	int3   
   14000781c:	int3   
   14000781d:	int3   
   14000781e:	int3   
   14000781f:	int3   
   140007820:	rex push rbx
   140007822:	sub    rsp,0x20
   140007826:	lea    rcx,[rdx+0x40]
   14000782a:	mov    rbx,rdx
   14000782d:	call   0x14001d9d0
   140007832:	lea    rcx,[rbx+0x28]
   140007836:	call   0x14001d9d0
   14000783b:	cmp    QWORD PTR [rbx+0x18],0x10
   140007840:	jb     0x14000784a
   140007842:	mov    rcx,QWORD PTR [rbx]
   140007845:	call   0x140030282
   14000784a:	mov    QWORD PTR [rbx+0x18],0xf
   140007852:	mov    QWORD PTR [rbx+0x10],0x0
   14000785a:	mov    BYTE PTR [rbx],0x0
   14000785d:	add    rsp,0x20
   140007861:	pop    rbx
   140007862:	ret    
   140007863:	int3   
   140007864:	int3   
   140007865:	int3   
   140007866:	int3   
   140007867:	int3   
   140007868:	int3   
   140007869:	int3   
   14000786a:	int3   
   14000786b:	int3   
   14000786c:	int3   
   14000786d:	int3   
   14000786e:	int3   
   14000786f:	int3   
   140007870:	rex push rbx
   140007872:	sub    rsp,0x20
   140007876:	lea    rcx,[rdx+0x40]
   14000787a:	mov    rbx,rdx
   14000787d:	call   0x14001d9d0
   140007882:	lea    rcx,[rbx+0x28]
   140007886:	call   0x14001d9d0
   14000788b:	cmp    QWORD PTR [rbx+0x18],0x10
   140007890:	jb     0x14000789a
   140007892:	mov    rcx,QWORD PTR [rbx]
   140007895:	call   0x140030282
   14000789a:	mov    QWORD PTR [rbx+0x18],0xf
   1400078a2:	mov    QWORD PTR [rbx+0x10],0x0
   1400078aa:	mov    BYTE PTR [rbx],0x0
   1400078ad:	add    rsp,0x20
   1400078b1:	pop    rbx
   1400078b2:	ret    
   1400078b3:	int3   
   1400078b4:	int3   
   1400078b5:	int3   
   1400078b6:	int3   
   1400078b7:	int3   
   1400078b8:	int3   
   1400078b9:	int3   
   1400078ba:	int3   
   1400078bb:	int3   
   1400078bc:	int3   
   1400078bd:	int3   
   1400078be:	int3   
   1400078bf:	int3   
   1400078c0:	rex push rbx
   1400078c2:	sub    rsp,0x20
   1400078c6:	lea    rcx,[rdx+0x40]
   1400078ca:	mov    rbx,rdx
   1400078cd:	call   0x14001d9d0
   1400078d2:	lea    rcx,[rbx+0x28]
   1400078d6:	call   0x14001d9d0
   1400078db:	cmp    QWORD PTR [rbx+0x18],0x10
   1400078e0:	jb     0x1400078ea
   1400078e2:	mov    rcx,QWORD PTR [rbx]
   1400078e5:	call   0x140030282
   1400078ea:	mov    QWORD PTR [rbx+0x18],0xf
   1400078f2:	mov    QWORD PTR [rbx+0x10],0x0
   1400078fa:	mov    BYTE PTR [rbx],0x0
   1400078fd:	add    rsp,0x20
   140007901:	pop    rbx
   140007902:	ret    
   140007903:	int3   
   140007904:	int3   
   140007905:	int3   
   140007906:	int3   
   140007907:	int3   
   140007908:	int3   
   140007909:	int3   
   14000790a:	int3   
   14000790b:	int3   
   14000790c:	int3   
   14000790d:	int3   
   14000790e:	int3   
   14000790f:	int3   
   140007910:	rex push rbx
   140007912:	sub    rsp,0x20
   140007916:	cmp    QWORD PTR [rdx+0x18],0x10
   14000791b:	mov    rbx,rdx
   14000791e:	jb     0x140007928
   140007920:	mov    rcx,QWORD PTR [rdx]
   140007923:	call   0x140030282
   140007928:	mov    QWORD PTR [rbx+0x18],0xf
   140007930:	mov    QWORD PTR [rbx+0x10],0x0
   140007938:	mov    BYTE PTR [rbx],0x0
   14000793b:	add    rsp,0x20
   14000793f:	pop    rbx
   140007940:	ret    
   140007941:	int3   
   140007942:	int3   
   140007943:	int3   
   140007944:	int3   
   140007945:	int3   
   140007946:	int3   
   140007947:	int3   
   140007948:	int3   
   140007949:	int3   
   14000794a:	int3   
   14000794b:	int3   
   14000794c:	int3   
   14000794d:	int3   
   14000794e:	int3   
   14000794f:	int3   
   140007950:	rex push rbx
   140007952:	sub    rsp,0x20
   140007956:	cmp    QWORD PTR [rdx+0x18],0x10
   14000795b:	mov    rbx,rdx
   14000795e:	jb     0x140007968
   140007960:	mov    rcx,QWORD PTR [rdx]
   140007963:	call   0x140030282
   140007968:	mov    QWORD PTR [rbx+0x18],0xf
   140007970:	mov    QWORD PTR [rbx+0x10],0x0
   140007978:	mov    BYTE PTR [rbx],0x0
   14000797b:	add    rsp,0x20
   14000797f:	pop    rbx
   140007980:	ret    
   140007981:	int3   
   140007982:	int3   
   140007983:	int3   
   140007984:	int3   
   140007985:	int3   
   140007986:	int3   
   140007987:	int3   
   140007988:	int3   
   140007989:	int3   
   14000798a:	int3   
   14000798b:	int3   
   14000798c:	int3   
   14000798d:	int3   
   14000798e:	int3   
   14000798f:	int3   
   140007990:	rex push rbx
   140007992:	sub    rsp,0x20
   140007996:	cmp    QWORD PTR [rdx+0x18],0x10
   14000799b:	mov    rbx,rdx
   14000799e:	jb     0x1400079a8
   1400079a0:	mov    rcx,QWORD PTR [rdx]
   1400079a3:	call   0x140030282
   1400079a8:	mov    QWORD PTR [rbx+0x18],0xf
   1400079b0:	mov    QWORD PTR [rbx+0x10],0x0
   1400079b8:	mov    BYTE PTR [rbx],0x0
   1400079bb:	add    rsp,0x20
   1400079bf:	pop    rbx
   1400079c0:	ret    
   1400079c1:	int3   
   1400079c2:	int3   
   1400079c3:	int3   
   1400079c4:	int3   
   1400079c5:	int3   
   1400079c6:	int3   
   1400079c7:	int3   
   1400079c8:	int3   
   1400079c9:	int3   
   1400079ca:	int3   
   1400079cb:	int3   
   1400079cc:	int3   
   1400079cd:	int3   
   1400079ce:	int3   
   1400079cf:	int3   
   1400079d0:	rex push rbx
   1400079d2:	sub    rsp,0x20
   1400079d6:	cmp    QWORD PTR [rdx+0x18],0x10
   1400079db:	mov    rbx,rdx
   1400079de:	jb     0x1400079e8
   1400079e0:	mov    rcx,QWORD PTR [rdx]
   1400079e3:	call   0x140030282
   1400079e8:	mov    QWORD PTR [rbx+0x18],0xf
   1400079f0:	mov    QWORD PTR [rbx+0x10],0x0
   1400079f8:	mov    BYTE PTR [rbx],0x0
   1400079fb:	add    rsp,0x20
   1400079ff:	pop    rbx
   140007a00:	ret    
   140007a01:	int3   
   140007a02:	int3   
   140007a03:	int3   
   140007a04:	int3   
   140007a05:	int3   
   140007a06:	int3   
   140007a07:	int3   
   140007a08:	int3   
   140007a09:	int3   
   140007a0a:	int3   
   140007a0b:	int3   
   140007a0c:	int3   
   140007a0d:	int3   
   140007a0e:	int3   
   140007a0f:	int3   
   140007a10:	rex push rbx
   140007a12:	sub    rsp,0x20
   140007a16:	cmp    QWORD PTR [rdx+0x18],0x10
   140007a1b:	mov    rbx,rdx
   140007a1e:	jb     0x140007a28
   140007a20:	mov    rcx,QWORD PTR [rdx]
   140007a23:	call   0x140030282
   140007a28:	mov    QWORD PTR [rbx+0x18],0xf
   140007a30:	mov    QWORD PTR [rbx+0x10],0x0
   140007a38:	mov    BYTE PTR [rbx],0x0
   140007a3b:	add    rsp,0x20
   140007a3f:	pop    rbx
   140007a40:	ret    
   140007a41:	int3   
   140007a42:	int3   
   140007a43:	int3   
   140007a44:	int3   
   140007a45:	int3   
   140007a46:	int3   
   140007a47:	int3   
   140007a48:	int3   
   140007a49:	int3   
   140007a4a:	int3   
   140007a4b:	int3   
   140007a4c:	int3   
   140007a4d:	int3   
   140007a4e:	int3   
   140007a4f:	int3   
   140007a50:	rex push rbx
   140007a52:	sub    rsp,0x20
   140007a56:	cmp    QWORD PTR [rdx+0x18],0x10
   140007a5b:	mov    rbx,rdx
   140007a5e:	jb     0x140007a68
   140007a60:	mov    rcx,QWORD PTR [rdx]
   140007a63:	call   0x140030282
   140007a68:	mov    QWORD PTR [rbx+0x18],0xf
   140007a70:	mov    QWORD PTR [rbx+0x10],0x0
   140007a78:	mov    BYTE PTR [rbx],0x0
   140007a7b:	add    rsp,0x20
   140007a7f:	pop    rbx
   140007a80:	ret    
   140007a81:	int3   
   140007a82:	int3   
   140007a83:	int3   
   140007a84:	int3   
   140007a85:	int3   
   140007a86:	int3   
   140007a87:	int3   
   140007a88:	int3   
   140007a89:	int3   
   140007a8a:	int3   
   140007a8b:	int3   
   140007a8c:	int3   
   140007a8d:	int3   
   140007a8e:	int3   
   140007a8f:	int3   
   140007a90:	mov    rcx,QWORD PTR [rcx]
   140007a93:	mov    r9,r8
   140007a96:	mov    r8,rdx
   140007a99:	xor    edx,edx
   140007a9b:	rex.W jmp QWORD PTR [rip+0x2eade]        # 0x140036580
   140007aa2:	int3   
   140007aa3:	int3   
   140007aa4:	int3   
   140007aa5:	int3   
   140007aa6:	int3   
   140007aa7:	int3   
   140007aa8:	int3   
   140007aa9:	int3   
   140007aaa:	int3   
   140007aab:	int3   
   140007aac:	int3   
   140007aad:	int3   
   140007aae:	int3   
   140007aaf:	int3   
   140007ab0:	mov    r10,QWORD PTR [rcx+0x10]
   140007ab4:	mov    r11,rdx
   140007ab7:	test   r10,r10
   140007aba:	je     0x140007ae8
   140007abc:	mov    rax,QWORD PTR [rcx+0x18]
   140007ac0:	cmp    rax,0x10
   140007ac4:	jb     0x140007acb
   140007ac6:	mov    r9,QWORD PTR [rcx]
   140007ac9:	jmp    0x140007ace
   140007acb:	mov    r9,rcx
   140007ace:	cmp    rax,0x10
   140007ad2:	jb     0x140007ad7
   140007ad4:	mov    rcx,QWORD PTR [rcx]
   140007ad7:	lea    rdx,[r9+r10*1]
   140007adb:	mov    r9,r8
   140007ade:	mov    r8,r11
   140007ae1:	rex.W jmp QWORD PTR [rip+0x2ea98]        # 0x140036580
   140007ae8:	ret    
   140007ae9:	int3   
   140007aea:	int3   
   140007aeb:	int3   
   140007aec:	int3   
   140007aed:	int3   
   140007aee:	int3   
   140007aef:	int3   
   140007af0:	sub    rdx,rcx
   140007af3:	mov    rax,rdx
   140007af6:	ret    
   140007af7:	int3   
   140007af8:	int3   
   140007af9:	int3   
   140007afa:	int3   
   140007afb:	int3   
   140007afc:	int3   
   140007afd:	int3   
   140007afe:	int3   
   140007aff:	int3   
   140007b00:	sub    rdx,rcx
   140007b03:	movabs rax,0x2aaaaaaaaaaaaaab
   140007b0d:	imul   rdx
   140007b10:	sar    rdx,0x4
   140007b14:	mov    rax,rdx
   140007b17:	shr    rax,0x3f
   140007b1b:	add    rax,rdx
   140007b1e:	ret    
   140007b1f:	int3   
   140007b20:	rex push rbx
   140007b22:	sub    rsp,0x30
   140007b26:	mov    r8d,0x1
   140007b2c:	mov    rbx,rcx
   140007b2f:	mov    DWORD PTR [rsp+0x20],0x0
   140007b37:	call   0x1400119c0
   140007b3c:	mov    rax,rbx
   140007b3f:	add    rsp,0x30
   140007b43:	pop    rbx
   140007b44:	ret    
   140007b45:	int3   
   140007b46:	int3   
   140007b47:	int3   
   140007b48:	int3   
   140007b49:	int3   
   140007b4a:	int3   
   140007b4b:	int3   
   140007b4c:	int3   
   140007b4d:	int3   
   140007b4e:	int3   
   140007b4f:	int3   
   140007b50:	rex push rbx
   140007b52:	sub    rsp,0x30
   140007b56:	mov    r8d,0x1
   140007b5c:	mov    rbx,rcx
   140007b5f:	mov    DWORD PTR [rsp+0x20],0x0
   140007b67:	call   0x140011bd0
   140007b6c:	mov    rax,rbx
   140007b6f:	add    rsp,0x30
   140007b73:	pop    rbx
   140007b74:	ret    
   140007b75:	int3   
   140007b76:	int3   
   140007b77:	int3   
   140007b78:	int3   
   140007b79:	int3   
   140007b7a:	int3   
   140007b7b:	int3   
   140007b7c:	int3   
   140007b7d:	int3   
   140007b7e:	int3   
   140007b7f:	int3   
   140007b80:	rex push rbx
   140007b82:	sub    rsp,0x30
   140007b86:	mov    r8d,0x1
   140007b8c:	mov    rbx,rcx
   140007b8f:	mov    DWORD PTR [rsp+0x20],0x0
   140007b97:	call   0x140011de0
   140007b9c:	mov    rax,rbx
   140007b9f:	add    rsp,0x30
   140007ba3:	pop    rbx
   140007ba4:	ret    
   140007ba5:	int3   
   140007ba6:	int3   
   140007ba7:	int3   
   140007ba8:	int3   
   140007ba9:	int3   
   140007baa:	int3   
   140007bab:	int3   
   140007bac:	int3   
   140007bad:	int3   
   140007bae:	int3   
   140007baf:	int3   
   140007bb0:	rex push rbx
   140007bb2:	sub    rsp,0x30
   140007bb6:	mov    r8d,0x1
   140007bbc:	mov    rbx,rcx
   140007bbf:	mov    DWORD PTR [rsp+0x20],0x0
   140007bc7:	call   0x140011ff0
   140007bcc:	mov    rax,rbx
   140007bcf:	add    rsp,0x30
   140007bd3:	pop    rbx
   140007bd4:	ret    
   140007bd5:	int3   
   140007bd6:	int3   
   140007bd7:	int3   
   140007bd8:	int3   
   140007bd9:	int3   
   140007bda:	int3   
   140007bdb:	int3   
   140007bdc:	int3   
   140007bdd:	int3   
   140007bde:	int3   
   140007bdf:	int3   
   140007be0:	rex push rbx
   140007be2:	sub    rsp,0x30
   140007be6:	mov    r8d,0x1
   140007bec:	mov    rbx,rcx
   140007bef:	mov    DWORD PTR [rsp+0x20],0x0
   140007bf7:	call   0x140012200
   140007bfc:	mov    rax,rbx
   140007bff:	add    rsp,0x30
   140007c03:	pop    rbx
   140007c04:	ret    
   140007c05:	int3   
   140007c06:	int3   
   140007c07:	int3   
   140007c08:	int3   
   140007c09:	int3   
   140007c0a:	int3   
   140007c0b:	int3   
   140007c0c:	int3   
   140007c0d:	int3   
   140007c0e:	int3   
   140007c0f:	int3   
   140007c10:	rex push rbx
   140007c12:	sub    rsp,0x30
   140007c16:	mov    r8d,0x1
   140007c1c:	mov    rbx,rcx
   140007c1f:	mov    DWORD PTR [rsp+0x20],0x0
   140007c27:	call   0x140012410
   140007c2c:	mov    rax,rbx
   140007c2f:	add    rsp,0x30
   140007c33:	pop    rbx
   140007c34:	ret    
   140007c35:	int3   
   140007c36:	int3   
   140007c37:	int3   
   140007c38:	int3   
   140007c39:	int3   
   140007c3a:	int3   
   140007c3b:	int3   
   140007c3c:	int3   
   140007c3d:	int3   
   140007c3e:	int3   
   140007c3f:	int3   
   140007c40:	rex push rbx
   140007c42:	sub    rsp,0x30
   140007c46:	mov    r8d,0x1
   140007c4c:	mov    rbx,rcx
   140007c4f:	mov    DWORD PTR [rsp+0x20],0x0
   140007c57:	call   0x140012620
   140007c5c:	mov    rax,rbx
   140007c5f:	add    rsp,0x30
   140007c63:	pop    rbx
   140007c64:	ret    
   140007c65:	int3   
   140007c66:	int3   
   140007c67:	int3   
   140007c68:	int3   
   140007c69:	int3   
   140007c6a:	int3   
   140007c6b:	int3   
   140007c6c:	int3   
   140007c6d:	int3   
   140007c6e:	int3   
   140007c6f:	int3   
   140007c70:	rex push rbx
   140007c72:	sub    rsp,0x30
   140007c76:	mov    r8d,0x1
   140007c7c:	mov    rbx,rcx
   140007c7f:	mov    DWORD PTR [rsp+0x20],0x0
   140007c87:	call   0x140012830
   140007c8c:	mov    rax,rbx
   140007c8f:	add    rsp,0x30
   140007c93:	pop    rbx
   140007c94:	ret    
   140007c95:	int3   
   140007c96:	int3   
   140007c97:	int3   
   140007c98:	int3   
   140007c99:	int3   
   140007c9a:	int3   
   140007c9b:	int3   
   140007c9c:	int3   
   140007c9d:	int3   
   140007c9e:	int3   
   140007c9f:	int3   
   140007ca0:	rex push rbx
   140007ca2:	sub    rsp,0x30
   140007ca6:	mov    r8d,0x1
   140007cac:	mov    rbx,rcx
   140007caf:	mov    DWORD PTR [rsp+0x20],0x0
   140007cb7:	call   0x140012a40
   140007cbc:	mov    rax,rbx
   140007cbf:	add    rsp,0x30
   140007cc3:	pop    rbx
   140007cc4:	ret    
   140007cc5:	int3   
   140007cc6:	int3   
   140007cc7:	int3   
   140007cc8:	int3   
   140007cc9:	int3   
   140007cca:	int3   
   140007ccb:	int3   
   140007ccc:	int3   
   140007ccd:	int3   
   140007cce:	int3   
   140007ccf:	int3   
   140007cd0:	rex push rbx
   140007cd2:	sub    rsp,0x30
   140007cd6:	mov    r8d,0x1
   140007cdc:	mov    rbx,rcx
   140007cdf:	mov    DWORD PTR [rsp+0x20],0x0
   140007ce7:	call   0x140012c50
   140007cec:	mov    rax,rbx
   140007cef:	add    rsp,0x30
   140007cf3:	pop    rbx
   140007cf4:	ret    
   140007cf5:	int3   
   140007cf6:	int3   
   140007cf7:	int3   
   140007cf8:	int3   
   140007cf9:	int3   
   140007cfa:	int3   
   140007cfb:	int3   
   140007cfc:	int3   
   140007cfd:	int3   
   140007cfe:	int3   
   140007cff:	int3   
   140007d00:	rex push rbx
   140007d02:	sub    rsp,0x30
   140007d06:	mov    r8d,0x1
   140007d0c:	mov    rbx,rcx
   140007d0f:	mov    DWORD PTR [rsp+0x20],0x0
   140007d17:	call   0x140012e70
   140007d1c:	mov    rax,rbx
   140007d1f:	add    rsp,0x30
   140007d23:	pop    rbx
   140007d24:	ret    
   140007d25:	int3   
   140007d26:	int3   
   140007d27:	int3   
   140007d28:	int3   
   140007d29:	int3   
   140007d2a:	int3   
   140007d2b:	int3   
   140007d2c:	int3   
   140007d2d:	int3   
   140007d2e:	int3   
   140007d2f:	int3   
   140007d30:	rex push rbx
   140007d32:	sub    rsp,0x30
   140007d36:	mov    rbx,rcx
   140007d39:	mov    DWORD PTR [rsp+0x20],0x0
   140007d41:	call   0x1400139b0
   140007d46:	mov    rax,rbx
   140007d49:	add    rsp,0x30
   140007d4d:	pop    rbx
   140007d4e:	ret    
   140007d4f:	int3   
   140007d50:	rex push rbx
   140007d52:	sub    rsp,0x30
   140007d56:	mov    rbx,rcx
   140007d59:	mov    DWORD PTR [rsp+0x20],0x0
   140007d61:	call   0x140013af0
   140007d66:	mov    rax,rbx
   140007d69:	add    rsp,0x30
   140007d6d:	pop    rbx
   140007d6e:	ret    
   140007d6f:	int3   
   140007d70:	rex push rbx
   140007d72:	sub    rsp,0x30
   140007d76:	mov    rbx,rcx
   140007d79:	mov    DWORD PTR [rsp+0x20],0x0
   140007d81:	call   0x140013c30
   140007d86:	mov    rax,rbx
   140007d89:	add    rsp,0x30
   140007d8d:	pop    rbx
   140007d8e:	ret    
   140007d8f:	int3   
   140007d90:	rex push rbx
   140007d92:	sub    rsp,0x30
   140007d96:	mov    rbx,rcx
   140007d99:	mov    DWORD PTR [rsp+0x20],0x0
   140007da1:	call   0x140013d10
   140007da6:	mov    rax,rbx
   140007da9:	add    rsp,0x30
   140007dad:	pop    rbx
   140007dae:	ret    
   140007daf:	int3   
   140007db0:	mov    QWORD PTR [rsp+0x8],rbx
   140007db5:	push   rdi
   140007db6:	sub    rsp,0x30
   140007dba:	xor    edi,edi
   140007dbc:	mov    rbx,rcx
   140007dbf:	mov    DWORD PTR [rsp+0x20],edi
   140007dc3:	call   QWORD PTR [rip+0x2e67f]        # 0x140036448
   140007dc9:	mov    QWORD PTR [rbx+0x20],rdi
   140007dcd:	mov    QWORD PTR [rbx+0x28],rdi
   140007dd1:	mov    QWORD PTR [rbx+0x30],rdi
   140007dd5:	mov    DWORD PTR [rbx+0x38],0xffffffff
   140007ddc:	lea    rax,[rip+0x34b7d]        # 0x14003c960
   140007de3:	mov    QWORD PTR [rbx],rax
   140007de6:	lea    rax,[rip+0x34b8b]        # 0x14003c978
   140007ded:	mov    QWORD PTR [rbx+0x18],rax
   140007df1:	mov    rax,rbx
   140007df4:	mov    rbx,QWORD PTR [rsp+0x40]
   140007df9:	add    rsp,0x30
   140007dfd:	pop    rdi
   140007dfe:	ret    
   140007dff:	int3   
   140007e00:	mov    QWORD PTR [rsp+0x8],rbx
   140007e05:	push   rdi
   140007e06:	sub    rsp,0x30
   140007e0a:	xor    edi,edi
   140007e0c:	mov    rbx,rcx
   140007e0f:	mov    DWORD PTR [rsp+0x20],edi
   140007e13:	call   QWORD PTR [rip+0x2e62f]        # 0x140036448
   140007e19:	mov    QWORD PTR [rbx+0x20],rdi
   140007e1d:	mov    QWORD PTR [rbx+0x28],rdi
   140007e21:	mov    QWORD PTR [rbx+0x30],rdi
   140007e25:	mov    DWORD PTR [rbx+0x38],0xffffffff
   140007e2c:	lea    rax,[rip+0x351cd]        # 0x14003d000
   140007e33:	mov    QWORD PTR [rbx],rax
   140007e36:	lea    rax,[rip+0x351db]        # 0x14003d018
   140007e3d:	mov    QWORD PTR [rbx+0x18],rax
   140007e41:	mov    rax,rbx
   140007e44:	mov    rbx,QWORD PTR [rsp+0x40]
   140007e49:	add    rsp,0x30
   140007e4d:	pop    rdi
   140007e4e:	ret    
   140007e4f:	int3   
   140007e50:	mov    QWORD PTR [rsp+0x8],rbx
   140007e55:	push   rdi
   140007e56:	sub    rsp,0x30
   140007e5a:	xor    edi,edi
   140007e5c:	mov    rbx,rcx
   140007e5f:	mov    DWORD PTR [rsp+0x20],edi
   140007e63:	call   QWORD PTR [rip+0x2e5df]        # 0x140036448
   140007e69:	mov    QWORD PTR [rbx+0x20],rdi
   140007e6d:	mov    QWORD PTR [rbx+0x28],rdi
   140007e71:	mov    QWORD PTR [rbx+0x30],rdi
   140007e75:	mov    DWORD PTR [rbx+0x38],0xffffffff
   140007e7c:	lea    rax,[rip+0x3571d]        # 0x14003d5a0
   140007e83:	mov    QWORD PTR [rbx],rax
   140007e86:	lea    rax,[rip+0x3572b]        # 0x14003d5b8
   140007e8d:	mov    QWORD PTR [rbx+0x18],rax
   140007e91:	mov    rax,rbx
   140007e94:	mov    rbx,QWORD PTR [rsp+0x40]
   140007e99:	add    rsp,0x30
   140007e9d:	pop    rdi
   140007e9e:	ret    
   140007e9f:	int3   
   140007ea0:	mov    QWORD PTR [rsp+0x8],rbx
   140007ea5:	mov    QWORD PTR [rsp+0x10],rsi
   140007eaa:	push   rdi
   140007eab:	sub    rsp,0x30
   140007eaf:	xor    esi,esi
   140007eb1:	mov    rbx,rdx
   140007eb4:	mov    rdi,rcx
   140007eb7:	mov    DWORD PTR [rsp+0x20],esi
   140007ebb:	call   QWORD PTR [rip+0x2e55f]        # 0x140036420
   140007ec1:	lea    rax,[rip+0x329f8]        # 0x14003a8c0
   140007ec8:	mov    QWORD PTR [rdi],rax
   140007ecb:	mov    rax,QWORD PTR [rbx+0x18]
   140007ecf:	mov    QWORD PTR [rdi+0x18],rax
   140007ed3:	mov    rax,QWORD PTR [rbx+0x20]
   140007ed7:	mov    rbx,QWORD PTR [rsp+0x40]
   140007edc:	mov    QWORD PTR [rdi+0x20],rax
   140007ee0:	mov    QWORD PTR [rdi+0x30],rsi
   140007ee4:	mov    QWORD PTR [rdi+0x38],rsi
   140007ee8:	mov    QWORD PTR [rdi+0x40],rsi
   140007eec:	mov    rsi,QWORD PTR [rsp+0x48]
   140007ef1:	lea    rax,[rip+0x35720]        # 0x14003d618
   140007ef8:	mov    DWORD PTR [rdi+0x48],0xffffffff
   140007eff:	mov    QWORD PTR [rdi],rax
   140007f02:	lea    rax,[rip+0x35727]        # 0x14003d630
   140007f09:	mov    QWORD PTR [rdi+0x28],rax
   140007f0d:	mov    rax,rdi
   140007f10:	add    rsp,0x30
   140007f14:	pop    rdi
   140007f15:	ret    
   140007f16:	int3   
   140007f17:	int3   
   140007f18:	int3   
   140007f19:	int3   
   140007f1a:	int3   
   140007f1b:	int3   
   140007f1c:	int3   
   140007f1d:	int3   
   140007f1e:	int3   
   140007f1f:	int3   
   140007f20:	mov    QWORD PTR [rsp+0x8],rbx
   140007f25:	mov    QWORD PTR [rsp+0x10],rsi
   140007f2a:	push   rdi
   140007f2b:	sub    rsp,0x30
   140007f2f:	xor    esi,esi
   140007f31:	mov    rbx,rdx
   140007f34:	mov    rdi,rcx
   140007f37:	mov    DWORD PTR [rsp+0x20],esi
   140007f3b:	call   QWORD PTR [rip+0x2e507]        # 0x140036448
   140007f41:	lea    rax,[rip+0x32768]        # 0x14003a6b0
   140007f48:	mov    QWORD PTR [rdi],rax
   140007f4b:	lea    rax,[rip+0x37926]        # 0x14003f878
   140007f52:	movups xmm0,XMMWORD PTR [rbx+0x18]
   140007f56:	mov    rbx,QWORD PTR [rsp+0x40]
   140007f5b:	movups XMMWORD PTR [rdi+0x18],xmm0
   140007f5f:	mov    QWORD PTR [rdi+0x30],rsi
   140007f63:	mov    QWORD PTR [rdi+0x38],rsi
   140007f67:	mov    QWORD PTR [rdi+0x40],rsi
   140007f6b:	mov    rsi,QWORD PTR [rsp+0x48]
   140007f70:	mov    DWORD PTR [rdi+0x48],0xffffffff
   140007f77:	mov    QWORD PTR [rdi],rax
   140007f7a:	lea    rax,[rip+0x3790f]        # 0x14003f890
   140007f81:	mov    QWORD PTR [rdi+0x28],rax
   140007f85:	mov    rax,rdi
   140007f88:	add    rsp,0x30
   140007f8c:	pop    rdi
   140007f8d:	ret    
   140007f8e:	int3   
   140007f8f:	int3   
   140007f90:	mov    QWORD PTR [rsp+0x8],rbx
   140007f95:	push   rdi
   140007f96:	sub    rsp,0x30
   140007f9a:	xor    edi,edi
   140007f9c:	mov    rbx,rcx
   140007f9f:	mov    DWORD PTR [rsp+0x20],edi
   140007fa3:	call   QWORD PTR [rip+0x2e49f]        # 0x140036448
   140007fa9:	mov    QWORD PTR [rbx+0x20],rdi
   140007fad:	mov    QWORD PTR [rbx+0x28],rdi
   140007fb1:	mov    QWORD PTR [rbx+0x30],rdi
   140007fb5:	mov    DWORD PTR [rbx+0x38],0xffffffff
   140007fbc:	lea    rax,[rip+0x34fc5]        # 0x14003cf88
   140007fc3:	mov    QWORD PTR [rbx],rax
   140007fc6:	lea    rax,[rip+0x34fd3]        # 0x14003cfa0
   140007fcd:	mov    QWORD PTR [rbx+0x18],rax
   140007fd1:	mov    rax,rbx
   140007fd4:	mov    rbx,QWORD PTR [rsp+0x40]
   140007fd9:	add    rsp,0x30
   140007fdd:	pop    rdi
   140007fde:	ret    
   140007fdf:	int3   
   140007fe0:	mov    QWORD PTR [rsp+0x8],rbx
   140007fe5:	push   rdi
   140007fe6:	sub    rsp,0x30
   140007fea:	xor    edi,edi
   140007fec:	mov    rbx,rcx
   140007fef:	mov    DWORD PTR [rsp+0x20],edi
   140007ff3:	call   QWORD PTR [rip+0x2e44f]        # 0x140036448
   140007ff9:	mov    QWORD PTR [rbx+0x20],rdi
   140007ffd:	mov    QWORD PTR [rbx+0x28],rdi
   140008001:	mov    QWORD PTR [rbx+0x30],rdi
   140008005:	mov    DWORD PTR [rbx+0x38],0xffffffff
   14000800c:	lea    rax,[rip+0x373cd]        # 0x14003f3e0
   140008013:	mov    QWORD PTR [rbx],rax
   140008016:	lea    rax,[rip+0x373db]        # 0x14003f3f8
   14000801d:	mov    QWORD PTR [rbx+0x18],rax
   140008021:	mov    rax,rbx
   140008024:	mov    rbx,QWORD PTR [rsp+0x40]
   140008029:	add    rsp,0x30
   14000802d:	pop    rdi
   14000802e:	ret    
   14000802f:	int3   
   140008030:	rex push rbx
   140008032:	sub    rsp,0x30
   140008036:	mov    rbx,rcx
   140008039:	mov    DWORD PTR [rsp+0x20],0x0
   140008041:	call   0x140013a70
   140008046:	mov    rax,rbx
   140008049:	add    rsp,0x30
   14000804d:	pop    rbx
   14000804e:	ret    
   14000804f:	int3   
   140008050:	rex push rbx
   140008052:	sub    rsp,0x30
   140008056:	mov    rbx,rcx
   140008059:	mov    DWORD PTR [rsp+0x20],0x0
   140008061:	call   0x140013bb0
   140008066:	mov    rax,rbx
   140008069:	add    rsp,0x30
   14000806d:	pop    rbx
   14000806e:	ret    
   14000806f:	int3   
   140008070:	mov    QWORD PTR [rsp+0x8],rbx
   140008075:	push   rdi
   140008076:	sub    rsp,0x30
   14000807a:	xor    edi,edi
   14000807c:	mov    rbx,rcx
   14000807f:	mov    DWORD PTR [rsp+0x20],edi
   140008083:	call   QWORD PTR [rip+0x2e3bf]        # 0x140036448
   140008089:	mov    QWORD PTR [rbx+0x20],rdi
   14000808d:	mov    QWORD PTR [rbx+0x28],rdi
   140008091:	mov    QWORD PTR [rbx+0x30],rdi
   140008095:	mov    DWORD PTR [rbx+0x38],0xffffffff
   14000809c:	lea    rax,[rip+0x34935]        # 0x14003c9d8
   1400080a3:	mov    QWORD PTR [rbx],rax
   1400080a6:	lea    rax,[rip+0x34943]        # 0x14003c9f0
   1400080ad:	mov    QWORD PTR [rbx+0x18],rax
   1400080b1:	mov    rax,rbx
   1400080b4:	mov    rbx,QWORD PTR [rsp+0x40]
   1400080b9:	add    rsp,0x30
   1400080bd:	pop    rdi
   1400080be:	ret    
   1400080bf:	int3   
   1400080c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400080c5:	push   rdi
   1400080c6:	sub    rsp,0x30
   1400080ca:	xor    edi,edi
   1400080cc:	mov    rbx,rcx
   1400080cf:	mov    DWORD PTR [rsp+0x20],edi
   1400080d3:	call   0x140016350
   1400080d8:	mov    QWORD PTR [rbx+0x68],rdi
   1400080dc:	mov    QWORD PTR [rbx+0x70],rdi
   1400080e0:	mov    QWORD PTR [rbx+0x78],rdi
   1400080e4:	mov    DWORD PTR [rbx+0x80],0xffffffff
   1400080ee:	lea    rax,[rip+0x34fb3]        # 0x14003d0a8
   1400080f5:	mov    QWORD PTR [rbx],rax
   1400080f8:	lea    rax,[rip+0x34fc1]        # 0x14003d0c0
   1400080ff:	mov    QWORD PTR [rbx+0x60],rax
   140008103:	mov    rax,rbx
   140008106:	mov    rbx,QWORD PTR [rsp+0x40]
   14000810b:	add    rsp,0x30
   14000810f:	pop    rdi
   140008110:	ret    
   140008111:	int3   
   140008112:	int3   
   140008113:	int3   
   140008114:	int3   
   140008115:	int3   
   140008116:	int3   
   140008117:	int3   
   140008118:	int3   
   140008119:	int3   
   14000811a:	int3   
   14000811b:	int3   
   14000811c:	int3   
   14000811d:	int3   
   14000811e:	int3   
   14000811f:	int3   
   140008120:	mov    rax,rsp
   140008123:	push   rbp
   140008124:	push   r12
   140008126:	push   r13
   140008128:	push   r14
   14000812a:	push   r15
   14000812c:	lea    rbp,[rax-0x78]
   140008130:	sub    rsp,0x150
   140008137:	mov    QWORD PTR [rbp-0x78],0xfffffffffffffffe
   14000813f:	mov    QWORD PTR [rax+0x8],rbx
   140008143:	mov    QWORD PTR [rax+0x10],rsi
   140008147:	mov    QWORD PTR [rax+0x18],rdi
   14000814b:	mov    rbx,rdx
   14000814e:	mov    r14,rcx
   140008151:	xor    r12d,r12d
   140008154:	mov    DWORD PTR [rbp-0x80],r12d
   140008158:	cmp    QWORD PTR [rdx+0x10],r12
   14000815c:	jne    0x14000817e
   14000815e:	mov    QWORD PTR [rcx+0x18],0xf
   140008166:	mov    QWORD PTR [rcx+0x10],r12
   14000816a:	mov    BYTE PTR [rcx],r12b
   14000816d:	or     r9,0xffffffffffffffff
   140008171:	xor    r8d,r8d
   140008174:	call   0x14001ef20
   140008179:	jmp    0x1400085f0
   14000817e:	mov    QWORD PTR [rsp+0x38],0xf
   140008187:	mov    QWORD PTR [rsp+0x30],r12
   14000818c:	mov    BYTE PTR [rsp+0x20],r12b
   140008191:	mov    QWORD PTR [rsp+0x78],0xf
   14000819a:	mov    WORD PTR [rsp+0x60],0x20
   1400081a1:	mov    QWORD PTR [rsp+0x70],0x1
   1400081aa:	xor    r8d,r8d
   1400081ad:	lea    rdx,[rsp+0x60]
   1400081b2:	mov    rcx,rbx
   1400081b5:	call   0x140023a10
   1400081ba:	cmp    rax,0xffffffffffffffff
   1400081be:	jne    0x140008280
   1400081c4:	lea    rdx,[rip+0x36fd1]        # 0x14003f19c
   1400081cb:	lea    rcx,[rsp+0x40]
   1400081d0:	call   0x14000e8d0
   1400081d5:	mov    rdi,rax
   1400081d8:	lea    rax,[rsp+0x20]
   1400081dd:	cmp    rax,rdi
   1400081e0:	je     0x140008214
   1400081e2:	cmp    QWORD PTR [rsp+0x38],0x10
   1400081e8:	jb     0x1400081f4
   1400081ea:	mov    rcx,QWORD PTR [rsp+0x20]
   1400081ef:	call   0x140030282
   1400081f4:	mov    QWORD PTR [rsp+0x38],0xf
   1400081fd:	mov    QWORD PTR [rsp+0x30],r12
   140008202:	mov    BYTE PTR [rsp+0x20],0x0
   140008207:	mov    rdx,rdi
   14000820a:	lea    rcx,[rsp+0x20]
   14000820f:	call   0x14001c280
   140008214:	cmp    QWORD PTR [rsp+0x58],0x10
   14000821a:	jb     0x140008226
   14000821c:	mov    rcx,QWORD PTR [rsp+0x40]
   140008221:	call   0x140030282
   140008226:	mov    rdx,QWORD PTR [rbx+0x10]
   14000822a:	mov    QWORD PTR [rsp+0x58],0xf
   140008233:	mov    QWORD PTR [rsp+0x50],r12
   140008238:	mov    BYTE PTR [rsp+0x40],0x0
   14000823d:	dec    rdx
   140008240:	mov    r8b,0x20
   140008243:	lea    rcx,[rsp+0x40]
   140008248:	call   0x14001f1f0
   14000824d:	nop
   14000824e:	or     r9,0xffffffffffffffff
   140008252:	xor    r8d,r8d
   140008255:	lea    rdx,[rsp+0x40]
   14000825a:	lea    rcx,[rsp+0x20]
   14000825f:	call   0x14001eaf0
   140008264:	nop
   140008265:	cmp    QWORD PTR [rsp+0x58],0x10
   14000826b:	jb     0x14000854e
   140008271:	mov    rcx,QWORD PTR [rsp+0x40]
   140008276:	call   0x140030282
   14000827b:	jmp    0x14000854e
   140008280:	mov    rcx,QWORD PTR [rbx+0x18]
   140008284:	cmp    rcx,0x10
   140008288:	jb     0x14000828f
   14000828a:	mov    rdx,QWORD PTR [rbx]
   14000828d:	jmp    0x140008292
   14000828f:	mov    rdx,rbx
   140008292:	mov    rdi,QWORD PTR [rbx+0x10]
   140008296:	add    rdi,rdx
   140008299:	cmp    rcx,0x10
   14000829d:	jb     0x1400082a2
   14000829f:	mov    rbx,QWORD PTR [rbx]
   1400082a2:	cmp    rbx,rdi
   1400082a5:	je     0x14000854e
   1400082ab:	lea    r13,[rip+0xffffffffffff7d4e]        # 0x140000000
   1400082b2:	movsx  r15d,BYTE PTR [rbx]
   1400082b6:	lea    eax,[r15-0x9]
   1400082ba:	cmp    eax,0x35
   1400082bd:	ja     0x140008497
   1400082c3:	cdqe   
   1400082c5:	movzx  eax,BYTE PTR [r13+rax*1+0x8634]
   1400082ce:	mov    ecx,DWORD PTR [r13+rax*4+0x8614]
   1400082d6:	add    rcx,r13
   1400082d9:	jmp    rcx
   1400082db:	lea    rdx,[rip+0x36ec2]        # 0x14003f1a4
   1400082e2:	lea    rcx,[rsp+0x40]
   1400082e7:	call   0x14000e8d0
   1400082ec:	nop
   1400082ed:	or     r9,0xffffffffffffffff
   1400082f1:	xor    r8d,r8d
   1400082f4:	mov    rdx,rax
   1400082f7:	lea    rcx,[rsp+0x20]
   1400082fc:	call   0x14001eaf0
   140008301:	nop
   140008302:	cmp    QWORD PTR [rsp+0x58],0x10
   140008308:	jb     0x140008524
   14000830e:	mov    rcx,QWORD PTR [rsp+0x40]
   140008313:	call   0x140030282
   140008318:	jmp    0x140008524
   14000831d:	lea    rdx,[rip+0x36e88]        # 0x14003f1ac
   140008324:	lea    rcx,[rbp-0x70]
   140008328:	call   0x14000e8d0
   14000832d:	nop
   14000832e:	or     r9,0xffffffffffffffff
   140008332:	xor    r8d,r8d
   140008335:	mov    rdx,rax
   140008338:	lea    rcx,[rsp+0x20]
   14000833d:	call   0x14001eaf0
   140008342:	nop
   140008343:	cmp    QWORD PTR [rbp-0x58],0x10
   140008348:	jb     0x140008524
   14000834e:	mov    rcx,QWORD PTR [rbp-0x70]
   140008352:	call   0x140030282
   140008357:	jmp    0x140008524
   14000835c:	lea    rdx,[rip+0x36e51]        # 0x14003f1b4
   140008363:	lea    rcx,[rbp-0x30]
   140008367:	call   0x14000e8d0
   14000836c:	nop
   14000836d:	or     r9,0xffffffffffffffff
   140008371:	xor    r8d,r8d
   140008374:	mov    rdx,rax
   140008377:	lea    rcx,[rsp+0x20]
   14000837c:	call   0x14001eaf0
   140008381:	nop
   140008382:	cmp    QWORD PTR [rbp-0x18],0x10
   140008387:	jb     0x140008524
   14000838d:	mov    rcx,QWORD PTR [rbp-0x30]
   140008391:	call   0x140030282
   140008396:	jmp    0x140008524
   14000839b:	lea    rdx,[rip+0x36e1a]        # 0x14003f1bc
   1400083a2:	lea    rcx,[rbp+0x10]
   1400083a6:	call   0x14000e8d0
   1400083ab:	nop
   1400083ac:	or     r9,0xffffffffffffffff
   1400083b0:	xor    r8d,r8d
   1400083b3:	mov    rdx,rax
   1400083b6:	lea    rcx,[rsp+0x20]
   1400083bb:	call   0x14001eaf0
   1400083c0:	nop
   1400083c1:	cmp    QWORD PTR [rbp+0x28],0x10
   1400083c6:	jb     0x140008524
   1400083cc:	mov    rcx,QWORD PTR [rbp+0x10]
   1400083d0:	call   0x140030282
   1400083d5:	jmp    0x140008524
   1400083da:	lea    rdx,[rip+0x36de3]        # 0x14003f1c4
   1400083e1:	lea    rcx,[rbp-0x50]
   1400083e5:	call   0x14000e8d0
   1400083ea:	nop
   1400083eb:	or     r9,0xffffffffffffffff
   1400083ef:	xor    r8d,r8d
   1400083f2:	mov    rdx,rax
   1400083f5:	lea    rcx,[rsp+0x20]
   1400083fa:	call   0x14001eaf0
   1400083ff:	nop
   140008400:	cmp    QWORD PTR [rbp-0x38],0x10
   140008405:	jb     0x140008524
   14000840b:	mov    rcx,QWORD PTR [rbp-0x50]
   14000840f:	call   0x140030282
   140008414:	jmp    0x140008524
   140008419:	lea    rdx,[rip+0x36dac]        # 0x14003f1cc
   140008420:	lea    rcx,[rbp-0x10]
   140008424:	call   0x14000e8d0
   140008429:	nop
   14000842a:	or     r9,0xffffffffffffffff
   14000842e:	xor    r8d,r8d
   140008431:	mov    rdx,rax
   140008434:	lea    rcx,[rsp+0x20]
   140008439:	call   0x14001eaf0
   14000843e:	nop
   14000843f:	cmp    QWORD PTR [rbp+0x8],0x10
   140008444:	jb     0x140008524
   14000844a:	mov    rcx,QWORD PTR [rbp-0x10]
   14000844e:	call   0x140030282
   140008453:	jmp    0x140008524
   140008458:	lea    rdx,[rip+0x36d75]        # 0x14003f1d4
   14000845f:	lea    rcx,[rbp+0x30]
   140008463:	call   0x14000e8d0
   140008468:	nop
   140008469:	or     r9,0xffffffffffffffff
   14000846d:	xor    r8d,r8d
   140008470:	mov    rdx,rax
   140008473:	lea    rcx,[rsp+0x20]
   140008478:	call   0x14001eaf0
   14000847d:	nop
   14000847e:	cmp    QWORD PTR [rbp+0x48],0x10
   140008483:	jb     0x140008524
   140008489:	mov    rcx,QWORD PTR [rbp+0x30]
   14000848d:	call   0x140030282
   140008492:	jmp    0x140008524
   140008497:	or     rax,0xffffffffffffffff
   14000849b:	mov    r8,QWORD PTR [rsp+0x30]
   1400084a0:	sub    rax,r8
   1400084a3:	cmp    rax,0x1
   1400084a7:	jbe    0x140008540
   1400084ad:	lea    rsi,[r8+0x1]
   1400084b1:	cmp    rsi,0xfffffffffffffffe
   1400084b5:	ja     0x140008532
   1400084b7:	cmp    QWORD PTR [rsp+0x38],rsi
   1400084bc:	jae    0x1400084cd
   1400084be:	mov    rdx,rsi
   1400084c1:	lea    rcx,[rsp+0x20]
   1400084c6:	call   0x14001c600
   1400084cb:	jmp    0x1400084eb
   1400084cd:	test   rsi,rsi
   1400084d0:	jne    0x1400084f0
   1400084d2:	mov    QWORD PTR [rsp+0x30],r12
   1400084d7:	lea    rax,[rsp+0x20]
   1400084dc:	cmp    QWORD PTR [rsp+0x38],0x10
   1400084e2:	cmovae rax,QWORD PTR [rsp+0x20]
   1400084e8:	mov    BYTE PTR [rax],sil
   1400084eb:	test   rsi,rsi
   1400084ee:	je     0x140008524
   1400084f0:	lea    rcx,[rsp+0x20]
   1400084f5:	cmp    QWORD PTR [rsp+0x38],0x10
   1400084fb:	cmovae rcx,QWORD PTR [rsp+0x20]
   140008501:	mov    rax,QWORD PTR [rsp+0x30]
   140008506:	mov    BYTE PTR [rax+rcx*1],r15b
   14000850a:	mov    QWORD PTR [rsp+0x30],rsi
   14000850f:	lea    rax,[rsp+0x20]
   140008514:	cmp    QWORD PTR [rsp+0x38],0x10
   14000851a:	cmovae rax,QWORD PTR [rsp+0x20]
   140008520:	mov    BYTE PTR [rsi+rax*1],0x0
   140008524:	inc    rbx
   140008527:	cmp    rbx,rdi
   14000852a:	jne    0x1400082b2
   140008530:	jmp    0x14000854e
   140008532:	lea    rcx,[rip+0x343df]        # 0x14003c918
   140008539:	call   QWORD PTR [rip+0x2dce1]        # 0x140036220
   14000853f:	int3   
   140008540:	lea    rcx,[rip+0x343d1]        # 0x14003c918
   140008547:	call   QWORD PTR [rip+0x2dcd3]        # 0x140036220
   14000854d:	int3   
   14000854e:	mov    QWORD PTR [r14+0x18],0xf
   140008556:	mov    QWORD PTR [r14+0x10],r12
   14000855a:	mov    BYTE PTR [r14],0x0
   14000855e:	mov    rcx,QWORD PTR [rsp+0x38]
   140008563:	cmp    rcx,0x10
   140008567:	jae    0x140008588
   140008569:	mov    r8,QWORD PTR [rsp+0x30]
   14000856e:	inc    r8
   140008571:	je     0x140008595
   140008573:	lea    rdx,[rsp+0x20]
   140008578:	mov    rcx,r14
   14000857b:	call   QWORD PTR [rip+0x2dedf]        # 0x140036460
   140008581:	mov    rcx,QWORD PTR [rsp+0x38]
   140008586:	jmp    0x140008595
   140008588:	mov    rax,QWORD PTR [rsp+0x20]
   14000858d:	mov    QWORD PTR [r14],rax
   140008590:	mov    QWORD PTR [rsp+0x20],r12
   140008595:	mov    rax,QWORD PTR [rsp+0x30]
   14000859a:	mov    QWORD PTR [r14+0x10],rax
   14000859e:	mov    QWORD PTR [r14+0x18],rcx
   1400085a2:	mov    eax,0xf
   1400085a7:	mov    QWORD PTR [rsp+0x38],rax
   1400085ac:	mov    QWORD PTR [rsp+0x30],r12
   1400085b1:	mov    BYTE PTR [rsp+0x20],0x0
   1400085b6:	cmp    QWORD PTR [rsp+0x78],0x10
   1400085bc:	jb     0x1400085cd
   1400085be:	mov    rcx,QWORD PTR [rsp+0x60]
   1400085c3:	call   0x140030282
   1400085c8:	mov    rax,QWORD PTR [rsp+0x38]
   1400085cd:	mov    QWORD PTR [rsp+0x78],0xf
   1400085d6:	mov    QWORD PTR [rsp+0x70],r12
   1400085db:	mov    BYTE PTR [rsp+0x60],0x0
   1400085e0:	cmp    rax,0x10
   1400085e4:	jb     0x1400085f0
   1400085e6:	mov    rcx,QWORD PTR [rsp+0x20]
   1400085eb:	call   0x140030282
   1400085f0:	mov    rax,r14
   1400085f3:	lea    r11,[rsp+0x150]
   1400085fb:	mov    rbx,QWORD PTR [r11+0x30]
   1400085ff:	mov    rsi,QWORD PTR [r11+0x38]
   140008603:	mov    rdi,QWORD PTR [r11+0x40]
   140008607:	mov    rsp,r11
   14000860a:	pop    r15
   14000860c:	pop    r14
   14000860e:	pop    r13
   140008610:	pop    r12
   140008612:	pop    rbp
   140008613:	ret    
   140008614:	sbb    DWORD PTR [rax+rax*1+0x845800],eax
   14000861b:	add    BYTE PTR [rbx+0x5c000083],bl
   140008621:	add    DWORD PTR [rax],0x0
   140008624:	fiadd  DWORD PTR [rbx-0x7d250000]
   14000862a:	add    BYTE PTR [rax],al
   14000862c:	sbb    eax,0x97000083
   140008631:	test   BYTE PTR [rax],al
   140008633:	add    BYTE PTR [rax],al
   140008635:	add    DWORD PTR [rdi],eax
   140008637:	(bad)  
   140008638:	(bad)  
   140008639:	(bad)  
   14000863a:	(bad)  
   14000863b:	(bad)  
   14000863c:	(bad)  
   14000863d:	(bad)  
   14000863e:	(bad)  
   14000863f:	(bad)  
   140008640:	(bad)  
   140008641:	(bad)  
   140008642:	(bad)  
   140008643:	(bad)  
   140008644:	(bad)  
   140008645:	(bad)  
   140008646:	(bad)  
   140008647:	(bad)  
   140008648:	(bad)  
   140008649:	(bad)  
   14000864a:	(bad)  
   14000864b:	(bad)  
   14000864c:	(bad)  
   14000864d:	add    al,BYTE PTR [rdi]
   14000864f:	(bad)  
   140008650:	(bad)  
   140008651:	add    eax,DWORD PTR [rdi+rax*1]
   140008654:	(bad)  
   140008655:	(bad)  
   140008656:	(bad)  
   140008657:	(bad)  
   140008658:	(bad)  
   140008659:	(bad)  
   14000865a:	(bad)  
   14000865b:	(bad)  
   14000865c:	(bad)  
   14000865d:	(bad)  
   14000865e:	(bad)  
   14000865f:	(bad)  
   140008660:	(bad)  
   140008661:	(bad)  
   140008662:	(bad)  
   140008663:	(bad)  
   140008664:	(bad)  
   140008665:	(bad)  
   140008666:	(bad)  
   140008667:	add    eax,0xcccc0607
   14000866c:	int3   
   14000866d:	int3   
   14000866e:	int3   
   14000866f:	int3   
   140008670:	cmp    QWORD PTR [rdx+0x18],0x10
   140008675:	mov    r9,rcx
   140008678:	jb     0x14000868b
   14000867a:	mov    r8,QWORD PTR [rdx]
   14000867d:	mov    rcx,QWORD PTR [rdx+0x10]
   140008681:	mov    rax,r9
   140008684:	add    rcx,r8
   140008687:	mov    QWORD PTR [r9],rcx
   14000868a:	ret    
   14000868b:	mov    rcx,QWORD PTR [rdx+0x10]
   14000868f:	mov    r8,rdx
   140008692:	mov    rax,r9
   140008695:	add    rcx,rdx
   140008698:	mov    QWORD PTR [r9],rcx
   14000869b:	ret    
   14000869c:	int3   
   14000869d:	int3   
   14000869e:	int3   
   14000869f:	int3   
   1400086a0:	cmp    QWORD PTR [rdx+0x18],0x10
   1400086a5:	mov    r9,rcx
   1400086a8:	jb     0x1400086bb
   1400086aa:	mov    r8,QWORD PTR [rdx]
   1400086ad:	mov    rcx,QWORD PTR [rdx+0x10]
   1400086b1:	mov    rax,r9
   1400086b4:	add    rcx,r8
   1400086b7:	mov    QWORD PTR [r9],rcx
   1400086ba:	ret    
   1400086bb:	mov    rcx,QWORD PTR [rdx+0x10]
   1400086bf:	mov    r8,rdx
   1400086c2:	mov    rax,r9
   1400086c5:	add    rcx,rdx
   1400086c8:	mov    QWORD PTR [r9],rcx
   1400086cb:	ret    
   1400086cc:	int3   
   1400086cd:	int3   
   1400086ce:	int3   
   1400086cf:	int3   
   1400086d0:	rex push rbx
   1400086d2:	sub    rsp,0x20
   1400086d6:	mov    rax,QWORD PTR [rcx]
   1400086d9:	mov    rbx,rcx
   1400086dc:	mov    dl,0xa
   1400086de:	movsxd rcx,DWORD PTR [rax+0x4]
   1400086e2:	add    rcx,rbx
   1400086e5:	call   QWORD PTR [rip+0x2da9d]        # 0x140036188
   1400086eb:	mov    rcx,rbx
   1400086ee:	movzx  edx,al
   1400086f1:	call   QWORD PTR [rip+0x2da41]        # 0x140036138
   1400086f7:	mov    rcx,rbx
   1400086fa:	call   QWORD PTR [rip+0x2da30]        # 0x140036130
   140008700:	mov    rax,rbx
   140008703:	add    rsp,0x20
   140008707:	pop    rbx
   140008708:	ret    
   140008709:	int3   
   14000870a:	int3   
   14000870b:	int3   
   14000870c:	int3   
   14000870d:	int3   
   14000870e:	int3   
   14000870f:	int3   
   140008710:	mov    rax,QWORD PTR [rdx]
   140008713:	cmp    QWORD PTR [rcx],rax
   140008716:	jne    0x140008723
   140008718:	mov    eax,DWORD PTR [rdx+0x8]
   14000871b:	cmp    DWORD PTR [rcx+0x8],eax
   14000871e:	jne    0x140008723
   140008720:	mov    al,0x1
   140008722:	ret    
   140008723:	xor    al,al
   140008725:	ret    
   140008726:	int3   
   140008727:	int3   
   140008728:	int3   
   140008729:	int3   
   14000872a:	int3   
   14000872b:	int3   
   14000872c:	int3   
   14000872d:	int3   
   14000872e:	int3   
   14000872f:	int3   
   140008730:	movzx  r8d,BYTE PTR [rdx+0x60]
   140008735:	test   r8b,r8b
   140008738:	je     0x14000875a
   14000873a:	cmp    BYTE PTR [rcx+0x60],0x0
   14000873e:	je     0x14000875a
   140008740:	mov    rax,QWORD PTR [rcx+0x50]
   140008744:	cmp    QWORD PTR [rdx+0x50],rax
   140008748:	jne    0x140008757
   14000874a:	mov    rax,QWORD PTR [rcx+0x58]
   14000874e:	cmp    QWORD PTR [rdx+0x58],rax
   140008752:	jne    0x140008757
   140008754:	mov    al,0x1
   140008756:	ret    
   140008757:	xor    eax,eax
   140008759:	ret    
   14000875a:	xor    eax,eax
   14000875c:	cmp    r8b,BYTE PTR [rcx+0x60]
   140008760:	sete   al
   140008763:	ret    
   140008764:	int3   
   140008765:	int3   
   140008766:	int3   
   140008767:	int3   
   140008768:	int3   
   140008769:	int3   
   14000876a:	int3   
   14000876b:	int3   
   14000876c:	int3   
   14000876d:	int3   
   14000876e:	int3   
   14000876f:	int3   
   140008770:	movzx  r8d,BYTE PTR [rdx+0x60]
   140008775:	test   r8b,r8b
   140008778:	je     0x14000879a
   14000877a:	cmp    BYTE PTR [rcx+0x60],0x0
   14000877e:	je     0x14000879a
   140008780:	mov    rax,QWORD PTR [rcx+0x50]
   140008784:	cmp    QWORD PTR [rdx+0x50],rax
   140008788:	jne    0x140008797
   14000878a:	mov    rax,QWORD PTR [rcx+0x58]
   14000878e:	cmp    QWORD PTR [rdx+0x58],rax
   140008792:	jne    0x140008797
   140008794:	mov    al,0x1
   140008796:	ret    
   140008797:	xor    eax,eax
   140008799:	ret    
   14000879a:	xor    eax,eax
   14000879c:	cmp    r8b,BYTE PTR [rcx+0x60]
   1400087a0:	sete   al
   1400087a3:	ret    
   1400087a4:	int3   
   1400087a5:	int3   
   1400087a6:	int3   
   1400087a7:	int3   
   1400087a8:	int3   
   1400087a9:	int3   
   1400087aa:	int3   
   1400087ab:	int3   
   1400087ac:	int3   
   1400087ad:	int3   
   1400087ae:	int3   
   1400087af:	int3   
   1400087b0:	mov    rax,QWORD PTR [rdx]
   1400087b3:	cmp    QWORD PTR [rcx],rax
   1400087b6:	jne    0x1400087c4
   1400087b8:	cmp    DWORD PTR [rcx+0xc],0x0
   1400087bc:	mov    BYTE PTR [rcx+0x10],0x1
   1400087c0:	sete   al
   1400087c3:	ret    
   1400087c4:	xor    al,al
   1400087c6:	ret    
   1400087c7:	int3   
   1400087c8:	int3   
   1400087c9:	int3   
   1400087ca:	int3   
   1400087cb:	int3   
   1400087cc:	int3   
   1400087cd:	int3   
   1400087ce:	int3   
   1400087cf:	int3   
   1400087d0:	mov    rax,QWORD PTR [rdx]
   1400087d3:	cmp    QWORD PTR [rcx],rax
   1400087d6:	jne    0x1400087e4
   1400087d8:	cmp    DWORD PTR [rcx+0xc],0x0
   1400087dc:	mov    BYTE PTR [rcx+0x10],0x1
   1400087e0:	sete   al
   1400087e3:	ret    
   1400087e4:	xor    al,al
   1400087e6:	ret    
   1400087e7:	int3   
   1400087e8:	int3   
   1400087e9:	int3   
   1400087ea:	int3   
   1400087eb:	int3   
   1400087ec:	int3   
   1400087ed:	int3   
   1400087ee:	int3   
   1400087ef:	int3   
   1400087f0:	mov    rdx,QWORD PTR [rdx]
   1400087f3:	cmp    QWORD PTR [rcx],rdx
   1400087f6:	sete   al
   1400087f9:	ret    
   1400087fa:	int3   
   1400087fb:	int3   
   1400087fc:	int3   
   1400087fd:	int3   
   1400087fe:	int3   
   1400087ff:	int3   
   140008800:	mov    rdx,QWORD PTR [rdx]
   140008803:	cmp    QWORD PTR [rcx],rdx
   140008806:	sete   al
   140008809:	ret    
   14000880a:	int3   
   14000880b:	int3   
   14000880c:	int3   
   14000880d:	int3   
   14000880e:	int3   
   14000880f:	int3   
   140008810:	mov    rax,QWORD PTR [rdx]
   140008813:	cmp    QWORD PTR [rcx],rax
   140008816:	jne    0x140008824
   140008818:	cmp    DWORD PTR [rcx+0xc],0x0
   14000881c:	mov    BYTE PTR [rcx+0x10],0x1
   140008820:	sete   al
   140008823:	ret    
   140008824:	xor    al,al
   140008826:	ret    
   140008827:	int3   
   140008828:	int3   
   140008829:	int3   
   14000882a:	int3   
   14000882b:	int3   
   14000882c:	int3   
   14000882d:	int3   
   14000882e:	int3   
   14000882f:	int3   
   140008830:	mov    rax,QWORD PTR [rdx]
   140008833:	cmp    QWORD PTR [rcx],rax
   140008836:	sete   al
   140008839:	ret    
   14000883a:	int3   
   14000883b:	int3   
   14000883c:	int3   
   14000883d:	int3   
   14000883e:	int3   
   14000883f:	int3   
   140008840:	mov    rdx,QWORD PTR [rdx]
   140008843:	cmp    QWORD PTR [rcx],rdx
   140008846:	sete   al
   140008849:	ret    
   14000884a:	int3   
   14000884b:	int3   
   14000884c:	int3   
   14000884d:	int3   
   14000884e:	int3   
   14000884f:	int3   
   140008850:	mov    rdx,QWORD PTR [rdx]
   140008853:	cmp    QWORD PTR [rcx],rdx
   140008856:	sete   al
   140008859:	ret    
   14000885a:	int3   
   14000885b:	int3   
   14000885c:	int3   
   14000885d:	int3   
   14000885e:	int3   
   14000885f:	int3   
   140008860:	mov    rdx,QWORD PTR [rdx]
   140008863:	cmp    QWORD PTR [rcx],rdx
   140008866:	sete   al
   140008869:	ret    
   14000886a:	int3   
   14000886b:	int3   
   14000886c:	int3   
   14000886d:	int3   
   14000886e:	int3   
   14000886f:	int3   
   140008870:	mov    rdx,QWORD PTR [rdx]
   140008873:	cmp    QWORD PTR [rcx],rdx
   140008876:	sete   al
   140008879:	ret    
   14000887a:	int3   
   14000887b:	int3   
   14000887c:	int3   
   14000887d:	int3   
   14000887e:	int3   
   14000887f:	int3   
   140008880:	mov    rdx,QWORD PTR [rdx]
   140008883:	cmp    QWORD PTR [rcx],rdx
   140008886:	sete   al
   140008889:	ret    
   14000888a:	int3   
   14000888b:	int3   
   14000888c:	int3   
   14000888d:	int3   
   14000888e:	int3   
   14000888f:	int3   
   140008890:	mov    rdx,QWORD PTR [rdx]
   140008893:	cmp    QWORD PTR [rcx],rdx
   140008896:	sete   al
   140008899:	ret    
   14000889a:	int3   
   14000889b:	int3   
   14000889c:	int3   
   14000889d:	int3   
   14000889e:	int3   
   14000889f:	int3   
   1400088a0:	sub    rsp,0x38
   1400088a4:	movzx  eax,BYTE PTR [rsp+0x40]
   1400088a9:	mov    r8,QWORD PTR [rcx+0x10]
   1400088ad:	mov    rdx,QWORD PTR [rcx+0x8]
   1400088b1:	mov    rcx,QWORD PTR [rcx]
   1400088b4:	movzx  r9d,BYTE PTR [rsp+0x40]
   1400088ba:	mov    BYTE PTR [rsp+0x20],al
   1400088be:	call   0x140007490
   1400088c3:	add    rsp,0x38
   1400088c7:	ret    
   1400088c8:	int3   
   1400088c9:	int3   
   1400088ca:	int3   
   1400088cb:	int3   
   1400088cc:	int3   
   1400088cd:	int3   
   1400088ce:	int3   
   1400088cf:	int3   
   1400088d0:	sub    rsp,0x28
   1400088d4:	mov    eax,DWORD PTR [rcx+0x8]
   1400088d7:	mov    rcx,QWORD PTR [rcx]
   1400088da:	cmp    eax,0x1
   1400088dd:	jne    0x140008901
   1400088df:	mov    eax,DWORD PTR [rcx+0x68]
   1400088e2:	test   al,0x2
   1400088e4:	jne    0x140008921
   1400088e6:	or     eax,0x2
   1400088e9:	mov    edx,0x1
   1400088ee:	mov    DWORD PTR [rcx+0x68],eax
   1400088f1:	mov    rax,QWORD PTR [rcx]
   1400088f4:	call   QWORD PTR [rax+0x80]
   1400088fa:	xor    eax,eax
   1400088fc:	add    rsp,0x28
   140008900:	ret    
   140008901:	cmp    eax,0x2
   140008904:	jne    0x140008921
   140008906:	mov    eax,DWORD PTR [rcx+0x68]
   140008909:	test   al,0x4
   14000890b:	jne    0x140008921
   14000890d:	or     eax,0x4
   140008910:	mov    edx,0x2
   140008915:	mov    DWORD PTR [rcx+0x68],eax
   140008918:	mov    rax,QWORD PTR [rcx]
   14000891b:	call   QWORD PTR [rax+0x80]
   140008921:	xor    eax,eax
   140008923:	add    rsp,0x28
   140008927:	ret    
   140008928:	int3   
   140008929:	int3   
   14000892a:	int3   
   14000892b:	int3   
   14000892c:	int3   
   14000892d:	int3   
   14000892e:	int3   
   14000892f:	int3   
   140008930:	sub    rsp,0x58
   140008934:	movsd  xmm0,QWORD PTR [rcx+0x10]
   140008939:	movups xmm1,XMMWORD PTR [rcx]
   14000893c:	movzx  eax,BYTE PTR [rsp+0x60]
   140008941:	movzx  r9d,BYTE PTR [rsp+0x60]
   140008947:	mov    BYTE PTR [rsp+0x20],al
   14000894b:	movsd  QWORD PTR [rsp+0x40],xmm0
   140008951:	mov    r8,QWORD PTR [rsp+0x40]
   140008956:	movq   rcx,xmm1
   14000895b:	movdqa xmm0,xmm1
   14000895f:	psrldq xmm0,0x8
   140008964:	movq   rdx,xmm0
   140008969:	call   0x140007490
   14000896e:	add    rsp,0x58
   140008972:	ret    
   140008973:	int3   
   140008974:	int3   
   140008975:	int3   
   140008976:	int3   
   140008977:	int3   
   140008978:	int3   
   140008979:	int3   
   14000897a:	int3   
   14000897b:	int3   
   14000897c:	int3   
   14000897d:	int3   
   14000897e:	int3   
   14000897f:	int3   
   140008980:	mov    QWORD PTR [rsp+0x10],rdx
   140008985:	push   rbx
   140008986:	sub    rsp,0x60
   14000898a:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140008993:	movups xmm1,XMMWORD PTR [rcx]
   140008996:	movsd  xmm0,QWORD PTR [rcx+0x10]
   14000899b:	movsd  QWORD PTR [rsp+0x50],xmm0
   1400089a1:	movzx  eax,BYTE PTR [rsp+0x70]
   1400089a6:	mov    BYTE PTR [rsp+0x20],al
   1400089aa:	movzx  r9d,BYTE PTR [rsp+0x70]
   1400089b0:	mov    r8,QWORD PTR [rsp+0x50]
   1400089b5:	movdqa xmm0,xmm1
   1400089b9:	psrldq xmm0,0x8
   1400089be:	movq   rdx,xmm0
   1400089c3:	movq   rcx,xmm1
   1400089c8:	call   0x140007490
   1400089cd:	mov    rbx,rax
   1400089d0:	mov    rcx,QWORD PTR [rsp+0x78]
   1400089d5:	call   0x140006e90
   1400089da:	mov    rax,rbx
   1400089dd:	add    rsp,0x60
   1400089e1:	pop    rbx
   1400089e2:	ret    
   1400089e3:	int3   
   1400089e4:	int3   
   1400089e5:	int3   
   1400089e6:	int3   
   1400089e7:	int3   
   1400089e8:	int3   
   1400089e9:	int3   
   1400089ea:	int3   
   1400089eb:	int3   
   1400089ec:	int3   
   1400089ed:	int3   
   1400089ee:	int3   
   1400089ef:	int3   
   1400089f0:	mov    QWORD PTR [rsp+0x18],r8
   1400089f5:	push   rbx
   1400089f6:	sub    rsp,0x50
   1400089fa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140008a03:	movups xmm0,XMMWORD PTR [rcx]
   140008a06:	movaps XMMWORD PTR [rsp+0x30],xmm0
   140008a0b:	movsd  xmm1,QWORD PTR [rcx+0x10]
   140008a10:	movsd  QWORD PTR [rsp+0x40],xmm1
   140008a16:	lea    rcx,[rsp+0x30]
   140008a1b:	call   0x140008980
   140008a20:	mov    rbx,rax
   140008a23:	mov    rcx,QWORD PTR [rsp+0x70]
   140008a28:	call   0x140006e60
   140008a2d:	mov    rax,rbx
   140008a30:	add    rsp,0x50
   140008a34:	pop    rbx
   140008a35:	ret    
   140008a36:	int3   
   140008a37:	int3   
   140008a38:	int3   
   140008a39:	int3   
   140008a3a:	int3   
   140008a3b:	int3   
   140008a3c:	int3   
   140008a3d:	int3   
   140008a3e:	int3   
   140008a3f:	int3   
   140008a40:	sub    rsp,0x38
   140008a44:	movups xmm0,XMMWORD PTR [rcx]
   140008a47:	movaps XMMWORD PTR [rsp+0x20],xmm0
   140008a4c:	psrldq xmm0,0x8
   140008a51:	movd   eax,xmm0
   140008a55:	cmp    eax,0x1
   140008a58:	jne    0x140008a81
   140008a5a:	mov    rcx,QWORD PTR [rsp+0x20]
   140008a5f:	mov    eax,DWORD PTR [rcx+0x68]
   140008a62:	test   al,0x2
   140008a64:	jne    0x140008aa6
   140008a66:	or     eax,0x2
   140008a69:	mov    edx,0x1
   140008a6e:	mov    DWORD PTR [rcx+0x68],eax
   140008a71:	mov    rax,QWORD PTR [rcx]
   140008a74:	call   QWORD PTR [rax+0x80]
   140008a7a:	xor    eax,eax
   140008a7c:	add    rsp,0x38
   140008a80:	ret    
   140008a81:	cmp    eax,0x2
   140008a84:	jne    0x140008aa6
   140008a86:	mov    rcx,QWORD PTR [rsp+0x20]
   140008a8b:	mov    eax,DWORD PTR [rcx+0x68]
   140008a8e:	test   al,0x4
   140008a90:	jne    0x140008aa6
   140008a92:	or     eax,0x4
   140008a95:	mov    edx,0x2
   140008a9a:	mov    DWORD PTR [rcx+0x68],eax
   140008a9d:	mov    rax,QWORD PTR [rcx]
   140008aa0:	call   QWORD PTR [rax+0x80]
   140008aa6:	xor    eax,eax
   140008aa8:	add    rsp,0x38
   140008aac:	ret    
   140008aad:	int3   
   140008aae:	int3   
   140008aaf:	int3   
   140008ab0:	mov    QWORD PTR [rsp+0x10],rdx
   140008ab5:	push   rdi
   140008ab6:	sub    rsp,0x40
   140008aba:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140008ac3:	mov    QWORD PTR [rsp+0x50],rbx
   140008ac8:	mov    QWORD PTR [rsp+0x60],rsi
   140008acd:	mov    rdi,rdx
   140008ad0:	movups xmm0,XMMWORD PTR [rcx]
   140008ad3:	movaps XMMWORD PTR [rsp+0x30],xmm0
   140008ad8:	psrldq xmm0,0x8
   140008add:	movd   esi,xmm0
   140008ae1:	mov    rbx,QWORD PTR [rsp+0x30]
   140008ae6:	cmp    esi,0x1
   140008ae9:	jne    0x140008b06
   140008aeb:	mov    eax,DWORD PTR [rbx+0x68]
   140008aee:	test   al,0x2
   140008af0:	jne    0x140008b27
   140008af2:	or     eax,0x2
   140008af5:	mov    DWORD PTR [rbx+0x68],eax
   140008af8:	mov    rax,QWORD PTR [rbx]
   140008afb:	mov    edx,esi
   140008afd:	mov    rcx,rbx
   140008b00:	call   QWORD PTR [rax+0x80]
   140008b06:	cmp    esi,0x2
   140008b09:	jne    0x140008b27
   140008b0b:	mov    eax,DWORD PTR [rbx+0x68]
   140008b0e:	test   al,0x4
   140008b10:	jne    0x140008b27
   140008b12:	or     eax,0x4
   140008b15:	mov    DWORD PTR [rbx+0x68],eax
   140008b18:	mov    rax,QWORD PTR [rbx]
   140008b1b:	mov    edx,esi
   140008b1d:	mov    rcx,rbx
   140008b20:	call   QWORD PTR [rax+0x80]
   140008b26:	nop
   140008b27:	mov    eax,DWORD PTR [rdi+0x8]
   140008b2a:	mov    rcx,QWORD PTR [rdi]
   140008b2d:	cmp    eax,0x1
   140008b30:	jne    0x140008b43
   140008b32:	mov    eax,DWORD PTR [rcx+0x68]
   140008b35:	test   al,0x2
   140008b37:	jne    0x140008b63
   140008b39:	or     eax,0x2
   140008b3c:	mov    edx,0x1
   140008b41:	jmp    0x140008b57
   140008b43:	cmp    eax,0x2
   140008b46:	jne    0x140008b63
   140008b48:	mov    eax,DWORD PTR [rcx+0x68]
   140008b4b:	test   al,0x4
   140008b4d:	jne    0x140008b63
   140008b4f:	or     eax,0x4
   140008b52:	mov    edx,0x2
   140008b57:	mov    DWORD PTR [rcx+0x68],eax
   140008b5a:	mov    rax,QWORD PTR [rcx]
   140008b5d:	call   QWORD PTR [rax+0x80]
   140008b63:	xor    eax,eax
   140008b65:	mov    rbx,QWORD PTR [rsp+0x50]
   140008b6a:	mov    rsi,QWORD PTR [rsp+0x60]
   140008b6f:	add    rsp,0x40
   140008b73:	pop    rdi
   140008b74:	ret    
   140008b75:	int3   
   140008b76:	int3   
   140008b77:	int3   
   140008b78:	int3   
   140008b79:	int3   
   140008b7a:	int3   
   140008b7b:	int3   
   140008b7c:	int3   
   140008b7d:	int3   
   140008b7e:	int3   
   140008b7f:	int3   
   140008b80:	mov    rax,rsp
   140008b83:	mov    QWORD PTR [rax+0x18],r8
   140008b87:	push   r14
   140008b89:	sub    rsp,0x50
   140008b8d:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   140008b95:	mov    QWORD PTR [rax+0x8],rbx
   140008b99:	mov    QWORD PTR [rax+0x10],rsi
   140008b9d:	mov    QWORD PTR [rax+0x20],rdi
   140008ba1:	movups xmm0,XMMWORD PTR [rdx]
   140008ba4:	movaps XMMWORD PTR [rax-0x28],xmm0
   140008ba8:	movups xmm0,XMMWORD PTR [rcx]
   140008bab:	movaps XMMWORD PTR [rax-0x18],xmm0
   140008baf:	lea    rdx,[rax-0x28]
   140008bb3:	lea    rcx,[rax-0x18]
   140008bb7:	call   0x140008ab0
   140008bbc:	mov    r14d,eax
   140008bbf:	mov    rbx,QWORD PTR [rsp+0x70]
   140008bc4:	cmp    BYTE PTR [rbx+0x10],0x0
   140008bc8:	je     0x140008bf5
   140008bca:	mov    rdi,QWORD PTR [rbx+0x8]
   140008bce:	test   rdi,rdi
   140008bd1:	je     0x140008bf1
   140008bd3:	lock dec DWORD PTR [rdi+0x8]
   140008bd7:	jne    0x140008bf1
   140008bd9:	mov    rax,QWORD PTR [rdi]
   140008bdc:	mov    rcx,rdi
   140008bdf:	call   QWORD PTR [rax+0x8]
   140008be2:	lock dec DWORD PTR [rdi+0xc]
   140008be6:	jne    0x140008bf1
   140008be8:	mov    rdx,QWORD PTR [rdi]
   140008beb:	mov    rcx,rdi
   140008bee:	call   QWORD PTR [rdx+0x10]
   140008bf1:	mov    BYTE PTR [rbx+0x10],0x0
   140008bf5:	mov    eax,r14d
   140008bf8:	mov    rbx,QWORD PTR [rsp+0x60]
   140008bfd:	mov    rsi,QWORD PTR [rsp+0x68]
   140008c02:	mov    rdi,QWORD PTR [rsp+0x78]
   140008c07:	add    rsp,0x50
   140008c0b:	pop    r14
   140008c0d:	ret    
   140008c0e:	int3   
   140008c0f:	int3   
   140008c10:	mov    QWORD PTR [rsp+0x20],r9
   140008c15:	sub    rsp,0x58
   140008c19:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140008c22:	movups xmm0,XMMWORD PTR [rdx]
   140008c25:	movaps XMMWORD PTR [rsp+0x30],xmm0
   140008c2a:	movups xmm0,XMMWORD PTR [rcx]
   140008c2d:	movaps XMMWORD PTR [rsp+0x40],xmm0
   140008c32:	lea    rdx,[rsp+0x30]
   140008c37:	lea    rcx,[rsp+0x40]
   140008c3c:	call   0x140008b80
   140008c41:	nop
   140008c42:	mov    rcx,QWORD PTR [rsp+0x78]
   140008c47:	mov    DWORD PTR [rcx],0x0
   140008c4d:	add    rsp,0x58
   140008c51:	ret    
   140008c52:	int3   
   140008c53:	int3   
   140008c54:	int3   
   140008c55:	int3   
   140008c56:	int3   
   140008c57:	int3   
   140008c58:	int3   
   140008c59:	int3   
   140008c5a:	int3   
   140008c5b:	int3   
   140008c5c:	int3   
   140008c5d:	int3   
   140008c5e:	int3   
   140008c5f:	int3   
   140008c60:	mov    rax,rsp
   140008c63:	mov    QWORD PTR [rax+0x18],r8
   140008c67:	push   r14
   140008c69:	sub    rsp,0x50
   140008c6d:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   140008c75:	mov    QWORD PTR [rax+0x8],rbx
   140008c79:	mov    QWORD PTR [rax+0x10],rsi
   140008c7d:	mov    QWORD PTR [rax+0x20],rdi
   140008c81:	movups xmm0,XMMWORD PTR [rdx]
   140008c84:	movaps XMMWORD PTR [rax-0x28],xmm0
   140008c88:	movups xmm0,XMMWORD PTR [rcx]
   140008c8b:	movaps XMMWORD PTR [rax-0x18],xmm0
   140008c8f:	lea    rdx,[rax-0x28]
   140008c93:	lea    rcx,[rax-0x18]
   140008c97:	call   0x140008ab0
   140008c9c:	mov    r14d,eax
   140008c9f:	mov    rbx,QWORD PTR [rsp+0x70]
   140008ca4:	cmp    BYTE PTR [rbx+0x10],0x0
   140008ca8:	je     0x140008cd5
   140008caa:	mov    rdi,QWORD PTR [rbx+0x8]
   140008cae:	test   rdi,rdi
   140008cb1:	je     0x140008cd1
   140008cb3:	lock dec DWORD PTR [rdi+0x8]
   140008cb7:	jne    0x140008cd1
   140008cb9:	mov    rax,QWORD PTR [rdi]
   140008cbc:	mov    rcx,rdi
   140008cbf:	call   QWORD PTR [rax+0x8]
   140008cc2:	lock dec DWORD PTR [rdi+0xc]
   140008cc6:	jne    0x140008cd1
   140008cc8:	mov    rdx,QWORD PTR [rdi]
   140008ccb:	mov    rcx,rdi
   140008cce:	call   QWORD PTR [rdx+0x10]
   140008cd1:	mov    BYTE PTR [rbx+0x10],0x0
   140008cd5:	mov    eax,r14d
   140008cd8:	mov    rbx,QWORD PTR [rsp+0x60]
   140008cdd:	mov    rsi,QWORD PTR [rsp+0x68]
   140008ce2:	mov    rdi,QWORD PTR [rsp+0x78]
   140008ce7:	add    rsp,0x50
   140008ceb:	pop    r14
   140008ced:	ret    
   140008cee:	int3   
   140008cef:	int3   
   140008cf0:	mov    QWORD PTR [rsp+0x20],r9
   140008cf5:	sub    rsp,0x58
   140008cf9:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140008d02:	movups xmm0,XMMWORD PTR [rdx]
   140008d05:	movaps XMMWORD PTR [rsp+0x30],xmm0
   140008d0a:	movups xmm0,XMMWORD PTR [rcx]
   140008d0d:	movaps XMMWORD PTR [rsp+0x40],xmm0
   140008d12:	lea    rdx,[rsp+0x30]
   140008d17:	lea    rcx,[rsp+0x40]
   140008d1c:	call   0x140008c60
   140008d21:	nop
   140008d22:	mov    rcx,QWORD PTR [rsp+0x78]
   140008d27:	mov    DWORD PTR [rcx],0x0
   140008d2d:	add    rsp,0x58
   140008d31:	ret    
   140008d32:	int3   
   140008d33:	int3   
   140008d34:	int3   
   140008d35:	int3   
   140008d36:	int3   
   140008d37:	int3   
   140008d38:	int3   
   140008d39:	int3   
   140008d3a:	int3   
   140008d3b:	int3   
   140008d3c:	int3   
   140008d3d:	int3   
   140008d3e:	int3   
   140008d3f:	int3   
   140008d40:	mov    QWORD PTR [rsp+0x18],r8
   140008d45:	sub    rsp,0x58
   140008d49:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140008d52:	movups xmm0,XMMWORD PTR [rdx]
   140008d55:	movaps XMMWORD PTR [rsp+0x30],xmm0
   140008d5a:	movups xmm0,XMMWORD PTR [rcx]
   140008d5d:	movaps XMMWORD PTR [rsp+0x40],xmm0
   140008d62:	lea    rdx,[rsp+0x30]
   140008d67:	lea    rcx,[rsp+0x40]
   140008d6c:	call   0x140008ab0
   140008d71:	nop
   140008d72:	mov    rcx,QWORD PTR [rsp+0x70]
   140008d77:	cmp    BYTE PTR [rcx+0x1],0x0
   140008d7b:	je     0x140008d81
   140008d7d:	mov    BYTE PTR [rcx+0x1],0x0
   140008d81:	add    rsp,0x58
   140008d85:	ret    
   140008d86:	int3   
   140008d87:	int3   
   140008d88:	int3   
   140008d89:	int3   
   140008d8a:	int3   
   140008d8b:	int3   
   140008d8c:	int3   
   140008d8d:	int3   
   140008d8e:	int3   
   140008d8f:	int3   
   140008d90:	mov    QWORD PTR [rsp+0x20],r9
   140008d95:	sub    rsp,0x58
   140008d99:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140008da2:	movups xmm0,XMMWORD PTR [rdx]
   140008da5:	movaps XMMWORD PTR [rsp+0x30],xmm0
   140008daa:	movups xmm0,XMMWORD PTR [rcx]
   140008dad:	movaps XMMWORD PTR [rsp+0x40],xmm0
   140008db2:	lea    rdx,[rsp+0x30]
   140008db7:	lea    rcx,[rsp+0x40]
   140008dbc:	call   0x140008d40
   140008dc1:	nop
   140008dc2:	mov    rcx,QWORD PTR [rsp+0x78]
   140008dc7:	mov    DWORD PTR [rcx],0x0
   140008dcd:	add    rsp,0x58
   140008dd1:	ret    
   140008dd2:	int3   
   140008dd3:	int3   
   140008dd4:	int3   
   140008dd5:	int3   
   140008dd6:	int3   
   140008dd7:	int3   
   140008dd8:	int3   
   140008dd9:	int3   
   140008dda:	int3   
   140008ddb:	int3   
   140008ddc:	int3   
   140008ddd:	int3   
   140008dde:	int3   
   140008ddf:	int3   
   140008de0:	mov    QWORD PTR [rsp+0x18],r8
   140008de5:	sub    rsp,0x58
   140008de9:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140008df2:	movups xmm0,XMMWORD PTR [rdx]
   140008df5:	movaps XMMWORD PTR [rsp+0x30],xmm0
   140008dfa:	movups xmm0,XMMWORD PTR [rcx]
   140008dfd:	movaps XMMWORD PTR [rsp+0x40],xmm0
   140008e02:	lea    rdx,[rsp+0x30]
   140008e07:	lea    rcx,[rsp+0x40]
   140008e0c:	call   0x140008ab0
   140008e11:	nop
   140008e12:	mov    rcx,QWORD PTR [rsp+0x70]
   140008e17:	cmp    BYTE PTR [rcx+0x8],0x0
   140008e1b:	je     0x140008e21
   140008e1d:	mov    BYTE PTR [rcx+0x8],0x0
   140008e21:	add    rsp,0x58
   140008e25:	ret    
   140008e26:	int3   
   140008e27:	int3   
   140008e28:	int3   
   140008e29:	int3   
   140008e2a:	int3   
   140008e2b:	int3   
   140008e2c:	int3   
   140008e2d:	int3   
   140008e2e:	int3   
   140008e2f:	int3   
   140008e30:	mov    QWORD PTR [rsp+0x20],r9
   140008e35:	sub    rsp,0x58
   140008e39:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140008e42:	movups xmm0,XMMWORD PTR [rdx]
   140008e45:	movaps XMMWORD PTR [rsp+0x30],xmm0
   140008e4a:	movups xmm0,XMMWORD PTR [rcx]
   140008e4d:	movaps XMMWORD PTR [rsp+0x40],xmm0
   140008e52:	lea    rdx,[rsp+0x30]
   140008e57:	lea    rcx,[rsp+0x40]
   140008e5c:	call   0x140008de0
   140008e61:	nop
   140008e62:	mov    rcx,QWORD PTR [rsp+0x78]
   140008e67:	mov    DWORD PTR [rcx],0x0
   140008e6d:	add    rsp,0x58
   140008e71:	ret    
   140008e72:	int3   
   140008e73:	int3   
   140008e74:	int3   
   140008e75:	int3   
   140008e76:	int3   
   140008e77:	int3   
   140008e78:	int3   
   140008e79:	int3   
   140008e7a:	int3   
   140008e7b:	int3   
   140008e7c:	int3   
   140008e7d:	int3   
   140008e7e:	int3   
   140008e7f:	int3   
   140008e80:	mov    DWORD PTR [rsp+0x20],r9d
   140008e85:	mov    QWORD PTR [rsp+0x18],r8
   140008e8a:	mov    QWORD PTR [rsp+0x10],rdx
   140008e8f:	push   rbx
   140008e90:	push   rsi
   140008e91:	push   rdi
   140008e92:	sub    rsp,0x30
   140008e96:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140008e9f:	mov    rdi,rcx
   140008ea2:	cmp    rdx,r8
   140008ea5:	jne    0x140008eac
   140008ea7:	mov    DWORD PTR [rcx],r9d
   140008eaa:	jmp    0x140008f23
   140008eac:	mov    rbx,QWORD PTR [rdx+0x10]
   140008eb0:	mov    esi,r9d
   140008eb3:	cmp    r9d,0x1
   140008eb7:	jne    0x140008ee4
   140008eb9:	mov    eax,DWORD PTR [rbx+0x68]
   140008ebc:	test   al,0x2
   140008ebe:	jne    0x140008f13
   140008ec0:	or     eax,0x2
   140008ec3:	mov    DWORD PTR [rbx+0x68],eax
   140008ec6:	mov    rax,QWORD PTR [rbx]
   140008ec9:	mov    edx,r9d
   140008ecc:	mov    rcx,rbx
   140008ecf:	call   QWORD PTR [rax+0x80]
   140008ed5:	mov    r9d,DWORD PTR [rsp+0x68]
   140008eda:	mov    r8,QWORD PTR [rsp+0x60]
   140008edf:	mov    rdx,QWORD PTR [rsp+0x58]
   140008ee4:	cmp    esi,0x2
   140008ee7:	jne    0x140008f13
   140008ee9:	mov    eax,DWORD PTR [rbx+0x68]
   140008eec:	test   al,0x4
   140008eee:	jne    0x140008f13
   140008ef0:	or     eax,0x4
   140008ef3:	mov    DWORD PTR [rbx+0x68],eax
   140008ef6:	mov    rax,QWORD PTR [rbx]
   140008ef9:	mov    edx,esi
   140008efb:	mov    rcx,rbx
   140008efe:	call   QWORD PTR [rax+0x80]
   140008f04:	mov    r9d,DWORD PTR [rsp+0x68]
   140008f09:	mov    r8,QWORD PTR [rsp+0x60]
   140008f0e:	mov    rdx,QWORD PTR [rsp+0x58]
   140008f13:	mov    rdx,QWORD PTR [rdx]
   140008f16:	mov    QWORD PTR [rsp+0x58],rdx
   140008f1b:	mov    rcx,rdi
   140008f1e:	call   0x140008e80
   140008f23:	mov    rax,rdi
   140008f26:	add    rsp,0x30
   140008f2a:	pop    rdi
   140008f2b:	pop    rsi
   140008f2c:	pop    rbx
   140008f2d:	ret    
   140008f2e:	int3   
   140008f2f:	int3   
   140008f30:	mov    DWORD PTR [rsp+0x20],r9d
   140008f35:	mov    QWORD PTR [rsp+0x18],r8
   140008f3a:	mov    QWORD PTR [rsp+0x10],rdx
   140008f3f:	push   rbx
   140008f40:	push   rsi
   140008f41:	push   rdi
   140008f42:	sub    rsp,0x30
   140008f46:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140008f4f:	mov    rdi,rcx
   140008f52:	cmp    rdx,r8
   140008f55:	jne    0x140008f5c
   140008f57:	mov    DWORD PTR [rcx],r9d
   140008f5a:	jmp    0x140008fd8
   140008f5c:	mov    rax,QWORD PTR [rdx+0x8]
   140008f60:	mov    rbx,QWORD PTR [rax+0x10]
   140008f64:	mov    esi,r9d
   140008f67:	cmp    r9d,0x1
   140008f6b:	jne    0x140008f98
   140008f6d:	mov    eax,DWORD PTR [rbx+0x68]
   140008f70:	test   al,0x2
   140008f72:	jne    0x140008fc7
   140008f74:	or     eax,0x2
   140008f77:	mov    DWORD PTR [rbx+0x68],eax
   140008f7a:	mov    rax,QWORD PTR [rbx]
   140008f7d:	mov    edx,r9d
   140008f80:	mov    rcx,rbx
   140008f83:	call   QWORD PTR [rax+0x80]
   140008f89:	mov    r9d,DWORD PTR [rsp+0x68]
   140008f8e:	mov    r8,QWORD PTR [rsp+0x60]
   140008f93:	mov    rdx,QWORD PTR [rsp+0x58]
   140008f98:	cmp    esi,0x2
   140008f9b:	jne    0x140008fc7
   140008f9d:	mov    eax,DWORD PTR [rbx+0x68]
   140008fa0:	test   al,0x4
   140008fa2:	jne    0x140008fc7
   140008fa4:	or     eax,0x4
   140008fa7:	mov    DWORD PTR [rbx+0x68],eax
   140008faa:	mov    rax,QWORD PTR [rbx]
   140008fad:	mov    edx,esi
   140008faf:	mov    rcx,rbx
   140008fb2:	call   QWORD PTR [rax+0x80]
   140008fb8:	mov    r9d,DWORD PTR [rsp+0x68]
   140008fbd:	mov    r8,QWORD PTR [rsp+0x60]
   140008fc2:	mov    rdx,QWORD PTR [rsp+0x58]
   140008fc7:	mov    rdx,QWORD PTR [rdx+0x8]
   140008fcb:	mov    QWORD PTR [rsp+0x58],rdx
   140008fd0:	mov    rcx,rdi
   140008fd3:	call   0x140008f30
   140008fd8:	mov    rax,rdi
   140008fdb:	add    rsp,0x30
   140008fdf:	pop    rdi
   140008fe0:	pop    rsi
   140008fe1:	pop    rbx
   140008fe2:	ret    
   140008fe3:	int3   
   140008fe4:	int3   
   140008fe5:	int3   
   140008fe6:	int3   
   140008fe7:	int3   
   140008fe8:	int3   
   140008fe9:	int3   
   140008fea:	int3   
   140008feb:	int3   
   140008fec:	int3   
   140008fed:	int3   
   140008fee:	int3   
   140008fef:	int3   
   140008ff0:	mov    QWORD PTR [rsp+0x8],rbx
   140008ff5:	push   rdi
   140008ff6:	sub    rsp,0x20
   140008ffa:	mov    rax,QWORD PTR [rcx]
   140008ffd:	mov    rdi,rdx
   140009000:	mov    rbx,rcx
   140009003:	mov    r8,QWORD PTR [rax+0x28]
   140009007:	mov    rdx,QWORD PTR [rax+0x20]
   14000900b:	mov    rcx,rdi
   14000900e:	call   QWORD PTR [rip+0x2d1bc]        # 0x1400361d0
   140009014:	mov    r8,rax
   140009017:	test   rax,rax
   14000901a:	jne    0x140009027
   14000901c:	movzx  eax,BYTE PTR [rdi+0x68]
   140009020:	and    al,0x1
   140009022:	neg    al
   140009024:	sbb    r8,r8
   140009027:	cmp    r8,0xffffffffffffffff
   14000902b:	jne    0x140009043
   14000902d:	mov    rax,QWORD PTR [rbx]
   140009030:	or     DWORD PTR [rax+0x40],0x4
   140009034:	lea    eax,[r8+0x5]
   140009038:	mov    rbx,QWORD PTR [rsp+0x30]
   14000903d:	add    rsp,0x20
   140009041:	pop    rdi
   140009042:	ret    
   140009043:	mov    rcx,QWORD PTR [rbx]
   140009046:	mov    rbx,QWORD PTR [rsp+0x30]
   14000904b:	mov    rax,QWORD PTR [rcx+0x20]
   14000904f:	mov    QWORD PTR [rcx+0x30],rax
   140009053:	add    rax,r8
   140009056:	neg    r8
   140009059:	mov    QWORD PTR [rcx+0x38],rax
   14000905d:	sbb    eax,eax
   14000905f:	add    eax,0x6
   140009062:	add    rsp,0x20
   140009066:	pop    rdi
   140009067:	ret    
   140009068:	int3   
   140009069:	int3   
   14000906a:	int3   
   14000906b:	int3   
   14000906c:	int3   
   14000906d:	int3   
   14000906e:	int3   
   14000906f:	int3   
   140009070:	mov    QWORD PTR [rsp+0x8],rbx
   140009075:	push   rdi
   140009076:	sub    rsp,0x20
   14000907a:	mov    rax,QWORD PTR [rcx]
   14000907d:	mov    rdi,rdx
   140009080:	mov    rbx,rcx
   140009083:	mov    r8,QWORD PTR [rax+0x30]
   140009087:	mov    rdx,QWORD PTR [rax+0x28]
   14000908b:	mov    rcx,rdi
   14000908e:	call   QWORD PTR [rip+0x2d13c]        # 0x1400361d0
   140009094:	mov    r8,rax
   140009097:	test   rax,rax
   14000909a:	jne    0x1400090a7
   14000909c:	movzx  eax,BYTE PTR [rdi+0x68]
   1400090a0:	and    al,0x1
   1400090a2:	neg    al
   1400090a4:	sbb    r8,r8
   1400090a7:	cmp    r8,0xffffffffffffffff
   1400090ab:	jne    0x1400090c3
   1400090ad:	mov    rax,QWORD PTR [rbx]
   1400090b0:	or     DWORD PTR [rax+0x48],0x4
   1400090b4:	lea    eax,[r8+0x5]
   1400090b8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400090bd:	add    rsp,0x20
   1400090c1:	pop    rdi
   1400090c2:	ret    
   1400090c3:	mov    rcx,QWORD PTR [rbx]
   1400090c6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400090cb:	mov    rax,QWORD PTR [rcx+0x28]
   1400090cf:	mov    QWORD PTR [rcx+0x38],rax
   1400090d3:	add    rax,r8
   1400090d6:	neg    r8
   1400090d9:	mov    QWORD PTR [rcx+0x40],rax
   1400090dd:	sbb    eax,eax
   1400090df:	add    eax,0x6
   1400090e2:	add    rsp,0x20
   1400090e6:	pop    rdi
   1400090e7:	ret    
   1400090e8:	int3   
   1400090e9:	int3   
   1400090ea:	int3   
   1400090eb:	int3   
   1400090ec:	int3   
   1400090ed:	int3   
   1400090ee:	int3   
   1400090ef:	int3   
   1400090f0:	sub    rsp,0x38
   1400090f4:	movups xmm0,XMMWORD PTR [rdx]
   1400090f7:	lea    rdx,[rsp+0x20]
   1400090fc:	movaps XMMWORD PTR [rsp+0x20],xmm0
   140009101:	call   0x140009110
   140009106:	add    rsp,0x38
   14000910a:	ret    
   14000910b:	int3   
   14000910c:	int3   
   14000910d:	int3   
   14000910e:	int3   
   14000910f:	int3   
   140009110:	mov    rax,rsp
   140009113:	push   rdi
   140009114:	push   r12
   140009116:	push   r13
   140009118:	push   r14
   14000911a:	push   r15
   14000911c:	sub    rsp,0x40
   140009120:	mov    QWORD PTR [rax-0x48],0xfffffffffffffffe
   140009128:	mov    QWORD PTR [rax+0x8],rbx
   14000912c:	mov    QWORD PTR [rax+0x10],rbp
   140009130:	mov    QWORD PTR [rax+0x18],rsi
   140009134:	mov    r13,r8
   140009137:	mov    r12,rdx
   14000913a:	mov    rsi,rcx
   14000913d:	xor    r15d,r15d
   140009140:	xor    r14d,r14d
   140009143:	xor    ebp,ebp
   140009145:	mov    rdx,r12
   140009148:	mov    rcx,rsi
   14000914b:	call   0x140003210
   140009150:	test   al,al
   140009152:	jne    0x1400091a4
   140009154:	mov    ebx,DWORD PTR [rsi+0x8]
   140009157:	mov    rdi,QWORD PTR [rsi]
   14000915a:	cmp    DWORD PTR [rdi+0x14],0x5
   14000915e:	jl     0x14000916f
   140009160:	mov    rcx,rdi
   140009163:	call   0x14002c670
   140009168:	mov    DWORD PTR [rdi+0x14],0x0
   14000916f:	movsxd rcx,DWORD PTR [rdi+0x14]
   140009173:	mov    edx,DWORD PTR [rdi+rcx*4]
   140009176:	lea    eax,[rcx+0x1]
   140009179:	mov    DWORD PTR [rdi+0x14],eax
   14000917c:	mov    DWORD PTR [rsi+0x8],edx
   14000917f:	mov    rcx,rbp
   140009182:	shl    ebx,cl
   140009184:	add    r14d,ebx
   140009187:	add    rbp,0x20
   14000918b:	cmp    rbp,0x20
   14000918f:	jb     0x140009145
   140009191:	mov    DWORD PTR [r13+r15*4+0x0],r14d
   140009196:	inc    r15
   140009199:	cmp    r15,0x270
   1400091a0:	jb     0x140009140
   1400091a2:	jmp    0x1400091dd
   1400091a4:	lea    rax,[rip+0x3669d]        # 0x14003f848
   1400091ab:	mov    QWORD PTR [rsp+0x88],rax
   1400091b3:	lea    rdx,[rsp+0x88]
   1400091bb:	lea    rcx,[rsp+0x28]
   1400091c0:	call   QWORD PTR [rip+0x2d28a]        # 0x140036450
   1400091c6:	lea    rax,[rip+0x3145b]        # 0x14003a628
   1400091cd:	mov    QWORD PTR [rsp+0x28],rax
   1400091d2:	lea    rcx,[rsp+0x28]
   1400091d7:	call   0x14000dfb0
   1400091dc:	nop
   1400091dd:	mov    rbx,QWORD PTR [rsp+0x70]
   1400091e2:	mov    rbp,QWORD PTR [rsp+0x78]
   1400091e7:	mov    rsi,QWORD PTR [rsp+0x80]
   1400091ef:	add    rsp,0x40
   1400091f3:	pop    r15
   1400091f5:	pop    r14
   1400091f7:	pop    r13
   1400091f9:	pop    r12
   1400091fb:	pop    rdi
   1400091fc:	ret    
   1400091fd:	int3   
   1400091fe:	int3   
   1400091ff:	int3   
   140009200:	sub    rsp,0x38
   140009204:	movups xmm0,XMMWORD PTR [rdx]
   140009207:	lea    rdx,[rsp+0x20]
   14000920c:	movaps XMMWORD PTR [rsp+0x20],xmm0
   140009211:	call   0x140009110
   140009216:	add    rsp,0x38
   14000921a:	ret    
   14000921b:	int3   
   14000921c:	int3   
   14000921d:	int3   
   14000921e:	int3   
   14000921f:	int3   
   140009220:	mov    QWORD PTR [rsp+0x8],rbx
   140009225:	push   rdi
   140009226:	sub    rsp,0x20
   14000922a:	mov    rax,rdx
   14000922d:	mov    rdi,r8
   140009230:	sub    r8,rdx
   140009233:	movzx  edx,BYTE PTR [r9]
   140009237:	mov    rbx,rcx
   14000923a:	mov    rcx,rax
   14000923d:	call   QWORD PTR [rip+0x2d22d]        # 0x140036470
   140009243:	test   rax,rax
   140009246:	cmovne rdi,rax
   14000924a:	mov    rax,rbx
   14000924d:	mov    QWORD PTR [rbx],rdi
   140009250:	mov    rbx,QWORD PTR [rsp+0x30]
   140009255:	add    rsp,0x20
   140009259:	pop    rdi
   14000925a:	ret    
   14000925b:	int3   
   14000925c:	int3   
   14000925d:	int3   
   14000925e:	int3   
   14000925f:	int3   
   140009260:	mov    QWORD PTR [rsp+0x8],rbx
   140009265:	push   rdi
   140009266:	sub    rsp,0x20
   14000926a:	mov    rax,rdx
   14000926d:	movzx  edx,BYTE PTR [r9]
   140009271:	mov    rdi,r8
   140009274:	mov    rbx,rcx
   140009277:	sub    r8,rax
   14000927a:	mov    rcx,rax
   14000927d:	call   QWORD PTR [rip+0x2d1ed]        # 0x140036470
   140009283:	test   rax,rax
   140009286:	cmovne rdi,rax
   14000928a:	mov    rax,rbx
   14000928d:	mov    QWORD PTR [rbx],rdi
   140009290:	mov    rbx,QWORD PTR [rsp+0x30]
   140009295:	add    rsp,0x20
   140009299:	pop    rdi
   14000929a:	ret    
   14000929b:	int3   
   14000929c:	int3   
   14000929d:	int3   
   14000929e:	int3   
   14000929f:	int3   
   1400092a0:	rex push rbx
   1400092a2:	sub    rsp,0x30
   1400092a6:	xor    r10d,r10d
   1400092a9:	mov    rbx,rdx
   1400092ac:	lea    rax,[rcx-0x11]
   1400092b0:	test   rcx,rcx
   1400092b3:	jne    0x1400092b8
   1400092b5:	mov    eax,r10d
   1400092b8:	mov    r11,QWORD PTR [rax+0x8]
   1400092bc:	lea    rax,[rcx-0x11]
   1400092c0:	test   rcx,rcx
   1400092c3:	jne    0x1400092c8
   1400092c5:	mov    rax,r10
   1400092c8:	mov    rax,QWORD PTR [rax+0x8]
   1400092cc:	mov    rdx,QWORD PTR [rax+0x48]
   1400092d0:	and    rdx,0xfffffffffffffffe
   1400092d4:	je     0x1400092da
   1400092d6:	lea    r10,[rdx-0x48]
   1400092da:	lea    rax,[rcx+0x1]
   1400092de:	mov    r9,r8
   1400092e1:	mov    r8,rcx
   1400092e4:	mov    rdx,r11
   1400092e7:	mov    rcx,r10
   1400092ea:	mov    QWORD PTR [rsp+0x20],rax
   1400092ef:	call   0x14000a7f0
   1400092f4:	mov    QWORD PTR [rbx],rax
   1400092f7:	mov    rax,rbx
   1400092fa:	add    rsp,0x30
   1400092fe:	pop    rbx
   1400092ff:	ret    
   140009300:	xor    al,al
   140009302:	ret    
   140009303:	int3   
   140009304:	int3   
   140009305:	int3   
   140009306:	int3   
   140009307:	int3   
   140009308:	int3   
   140009309:	int3   
   14000930a:	int3   
   14000930b:	int3   
   14000930c:	int3   
   14000930d:	int3   
   14000930e:	int3   
   14000930f:	int3   
   140009310:	xor    al,al
   140009312:	ret    
   140009313:	int3   
   140009314:	int3   
   140009315:	int3   
   140009316:	int3   
   140009317:	int3   
   140009318:	int3   
   140009319:	int3   
   14000931a:	int3   
   14000931b:	int3   
   14000931c:	int3   
   14000931d:	int3   
   14000931e:	int3   
   14000931f:	int3   
   140009320:	xor    al,al
   140009322:	ret    
   140009323:	int3   
   140009324:	int3   
   140009325:	int3   
   140009326:	int3   
   140009327:	int3   
   140009328:	int3   
   140009329:	int3   
   14000932a:	int3   
   14000932b:	int3   
   14000932c:	int3   
   14000932d:	int3   
   14000932e:	int3   
   14000932f:	int3   
   140009330:	xor    al,al
   140009332:	ret    
   140009333:	int3   
   140009334:	int3   
   140009335:	int3   
   140009336:	int3   
   140009337:	int3   
   140009338:	int3   
   140009339:	int3   
   14000933a:	int3   
   14000933b:	int3   
   14000933c:	int3   
   14000933d:	int3   
   14000933e:	int3   
   14000933f:	int3   
   140009340:	xor    al,al
   140009342:	ret    
   140009343:	int3   
   140009344:	int3   
   140009345:	int3   
   140009346:	int3   
   140009347:	int3   
   140009348:	int3   
   140009349:	int3   
   14000934a:	int3   
   14000934b:	int3   
   14000934c:	int3   
   14000934d:	int3   
   14000934e:	int3   
   14000934f:	int3   
   140009350:	xor    al,al
   140009352:	ret    
   140009353:	int3   
   140009354:	int3   
   140009355:	int3   
   140009356:	int3   
   140009357:	int3   
   140009358:	int3   
   140009359:	int3   
   14000935a:	int3   
   14000935b:	int3   
   14000935c:	int3   
   14000935d:	int3   
   14000935e:	int3   
   14000935f:	int3   
   140009360:	sub    rsp,0x28
   140009364:	mov    rax,QWORD PTR [rcx]
   140009367:	movsxd rdx,DWORD PTR [rax+0x4]
   14000936b:	mov    rcx,QWORD PTR [rdx+rcx*1+0x48]
   140009370:	call   QWORD PTR [rip+0x2ce62]        # 0x1400361d8
   140009376:	test   eax,eax
   140009378:	sete   al
   14000937b:	add    rsp,0x28
   14000937f:	ret    
   140009380:	sub    rsp,0x28
   140009384:	mov    rax,QWORD PTR [rcx]
   140009387:	movsxd rdx,DWORD PTR [rax+0x4]
   14000938b:	mov    rcx,QWORD PTR [rdx+rcx*1+0x48]
   140009390:	call   QWORD PTR [rip+0x2ce42]        # 0x1400361d8
   140009396:	test   eax,eax
   140009398:	sete   al
   14000939b:	add    rsp,0x28
   14000939f:	ret    
   1400093a0:	mov    al,0x1
   1400093a2:	ret    
   1400093a3:	int3   
   1400093a4:	int3   
   1400093a5:	int3   
   1400093a6:	int3   
   1400093a7:	int3   
   1400093a8:	int3   
   1400093a9:	int3   
   1400093aa:	int3   
   1400093ab:	int3   
   1400093ac:	int3   
   1400093ad:	int3   
   1400093ae:	int3   
   1400093af:	int3   
   1400093b0:	mov    al,0x1
   1400093b2:	ret    
   1400093b3:	int3   
   1400093b4:	int3   
   1400093b5:	int3   
   1400093b6:	int3   
   1400093b7:	int3   
   1400093b8:	int3   
   1400093b9:	int3   
   1400093ba:	int3   
   1400093bb:	int3   
   1400093bc:	int3   
   1400093bd:	int3   
   1400093be:	int3   
   1400093bf:	int3   
   1400093c0:	mov    al,0x1
   1400093c2:	ret    
   1400093c3:	int3   
   1400093c4:	int3   
   1400093c5:	int3   
   1400093c6:	int3   
   1400093c7:	int3   
   1400093c8:	int3   
   1400093c9:	int3   
   1400093ca:	int3   
   1400093cb:	int3   
   1400093cc:	int3   
   1400093cd:	int3   
   1400093ce:	int3   
   1400093cf:	int3   
   1400093d0:	sub    rsp,0x28
   1400093d4:	add    rcx,0x18
   1400093d8:	call   QWORD PTR [rip+0x2cdfa]        # 0x1400361d8
   1400093de:	test   eax,eax
   1400093e0:	sete   al
   1400093e3:	add    rsp,0x28
   1400093e7:	ret    
   1400093e8:	int3   
   1400093e9:	int3   
   1400093ea:	int3   
   1400093eb:	int3   
   1400093ec:	int3   
   1400093ed:	int3   
   1400093ee:	int3   
   1400093ef:	int3   
   1400093f0:	sub    rsp,0x28
   1400093f4:	add    rcx,0x18
   1400093f8:	call   QWORD PTR [rip+0x2cdda]        # 0x1400361d8
   1400093fe:	test   eax,eax
   140009400:	sete   al
   140009403:	add    rsp,0x28
   140009407:	ret    
   140009408:	int3   
   140009409:	int3   
   14000940a:	int3   
   14000940b:	int3   
   14000940c:	int3   
   14000940d:	int3   
   14000940e:	int3   
   14000940f:	int3   
   140009410:	sub    rsp,0x28
   140009414:	test   rdx,rdx
   140009417:	je     0x140009422
   140009419:	mov    rcx,rdx
   14000941c:	call   QWORD PTR [rip+0x2cdb6]        # 0x1400361d8
   140009422:	xor    al,al
   140009424:	add    rsp,0x28
   140009428:	ret    
   140009429:	int3   
   14000942a:	int3   
   14000942b:	int3   
   14000942c:	int3   
   14000942d:	int3   
   14000942e:	int3   
   14000942f:	int3   
   140009430:	sub    rsp,0x28
   140009434:	test   rdx,rdx
   140009437:	je     0x140009442
   140009439:	mov    rcx,rdx
   14000943c:	call   QWORD PTR [rip+0x2cd96]        # 0x1400361d8
   140009442:	xor    al,al
   140009444:	add    rsp,0x28
   140009448:	ret    
   140009449:	int3   
   14000944a:	int3   
   14000944b:	int3   
   14000944c:	int3   
   14000944d:	int3   
   14000944e:	int3   
   14000944f:	int3   
   140009450:	rex push rbx
   140009452:	sub    rsp,0x20
   140009456:	mov    bl,0x1
   140009458:	test   rdx,rdx
   14000945b:	je     0x14000947a
   14000945d:	mov    rcx,rdx
   140009460:	call   QWORD PTR [rip+0x2cd72]        # 0x1400361d8
   140009466:	xor    edx,edx
   140009468:	movzx  ecx,bl
   14000946b:	cmp    eax,0xffffffff
   14000946e:	cmove  ecx,edx
   140009471:	movzx  eax,cl
   140009474:	add    rsp,0x20
   140009478:	pop    rbx
   140009479:	ret    
   14000947a:	movzx  eax,bl
   14000947d:	add    rsp,0x20
   140009481:	pop    rbx
   140009482:	ret    
   140009483:	int3   
   140009484:	int3   
   140009485:	int3   
   140009486:	int3   
   140009487:	int3   
   140009488:	int3   
   140009489:	int3   
   14000948a:	int3   
   14000948b:	int3   
   14000948c:	int3   
   14000948d:	int3   
   14000948e:	int3   
   14000948f:	int3   
   140009490:	rex push rbx
   140009492:	sub    rsp,0x20
   140009496:	mov    bl,0x1
   140009498:	test   rdx,rdx
   14000949b:	je     0x1400094ba
   14000949d:	mov    rcx,rdx
   1400094a0:	call   QWORD PTR [rip+0x2cd32]        # 0x1400361d8
   1400094a6:	xor    edx,edx
   1400094a8:	movzx  ecx,bl
   1400094ab:	cmp    eax,0xffffffff
   1400094ae:	cmove  ecx,edx
   1400094b1:	movzx  eax,cl
   1400094b4:	add    rsp,0x20
   1400094b8:	pop    rbx
   1400094b9:	ret    
   1400094ba:	movzx  eax,bl
   1400094bd:	add    rsp,0x20
   1400094c1:	pop    rbx
   1400094c2:	ret    
   1400094c3:	int3   
   1400094c4:	int3   
   1400094c5:	int3   
   1400094c6:	int3   
   1400094c7:	int3   
   1400094c8:	int3   
   1400094c9:	int3   
   1400094ca:	int3   
   1400094cb:	int3   
   1400094cc:	int3   
   1400094cd:	int3   
   1400094ce:	int3   
   1400094cf:	int3   
   1400094d0:	movzx  r8d,BYTE PTR [rsp+0x18]
   1400094d6:	jmp    0x1400094e0
   1400094db:	int3   
   1400094dc:	int3   
   1400094dd:	int3   
   1400094de:	int3   
   1400094df:	int3   
   1400094e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400094e5:	mov    QWORD PTR [rsp+0x10],rsi
   1400094ea:	push   rdi
   1400094eb:	sub    rsp,0x20
   1400094ef:	mov    rax,QWORD PTR [rcx]
   1400094f2:	mov    r9,rdx
   1400094f5:	mov    rsi,rcx
   1400094f8:	mov    rdx,QWORD PTR [rax+0x20]
   1400094fc:	mov    rdi,QWORD PTR [rax+0x30]
   140009500:	mov    rcx,r9
   140009503:	sub    rdi,rdx
   140009506:	mov    r8,rdi
   140009509:	call   QWORD PTR [rip+0x2ccb1]        # 0x1400361c0
   14000950f:	mov    rbx,rax
   140009512:	cmp    rax,rdi
   140009515:	jge    0x140009535
   140009517:	test   rax,rax
   14000951a:	jle    0x140009535
   14000951c:	mov    r8,rdi
   14000951f:	sub    r8,rax
   140009522:	je     0x140009535
   140009524:	mov    rcx,QWORD PTR [rsi]
   140009527:	mov    rcx,QWORD PTR [rcx+0x20]
   14000952b:	lea    rdx,[rcx+rax*1]
   14000952f:	call   QWORD PTR [rip+0x2cf2b]        # 0x140036460
   140009535:	mov    r8,QWORD PTR [rsi]
   140009538:	mov    rsi,QWORD PTR [rsp+0x38]
   14000953d:	mov    rdx,QWORD PTR [r8+0x28]
   140009541:	mov    rcx,QWORD PTR [r8+0x20]
   140009545:	mov    rax,rcx
   140009548:	sub    rax,rbx
   14000954b:	add    rax,rdi
   14000954e:	test   rbx,rbx
   140009551:	mov    rbx,QWORD PTR [rsp+0x30]
   140009556:	mov    QWORD PTR [r8+0x30],rax
   14000955a:	lea    rax,[rcx+rdx*1]
   14000955e:	mov    QWORD PTR [r8+0x38],rax
   140009562:	setne  al
   140009565:	add    rsp,0x20
   140009569:	pop    rdi
   14000956a:	ret    
   14000956b:	int3   
   14000956c:	int3   
   14000956d:	int3   
   14000956e:	int3   
   14000956f:	int3   
   140009570:	movzx  r8d,BYTE PTR [rsp+0x18]
   140009576:	jmp    0x140009580
   14000957b:	int3   
   14000957c:	int3   
   14000957d:	int3   
   14000957e:	int3   
   14000957f:	int3   
   140009580:	mov    QWORD PTR [rsp+0x8],rbx
   140009585:	mov    QWORD PTR [rsp+0x10],rsi
   14000958a:	push   rdi
   14000958b:	sub    rsp,0x20
   14000958f:	mov    rax,QWORD PTR [rcx]
   140009592:	mov    r9,rdx
   140009595:	mov    rsi,rcx
   140009598:	mov    rdx,QWORD PTR [rax+0x28]
   14000959c:	mov    rdi,QWORD PTR [rax+0x38]
   1400095a0:	mov    rcx,r9
   1400095a3:	sub    rdi,rdx
   1400095a6:	mov    r8,rdi
   1400095a9:	call   QWORD PTR [rip+0x2cc11]        # 0x1400361c0
   1400095af:	mov    rbx,rax
   1400095b2:	cmp    rax,rdi
   1400095b5:	jge    0x1400095d5
   1400095b7:	test   rax,rax
   1400095ba:	jle    0x1400095d5
   1400095bc:	mov    r8,rdi
   1400095bf:	sub    r8,rax
   1400095c2:	je     0x1400095d5
   1400095c4:	mov    rcx,QWORD PTR [rsi]
   1400095c7:	mov    rcx,QWORD PTR [rcx+0x28]
   1400095cb:	lea    rdx,[rcx+rax*1]
   1400095cf:	call   QWORD PTR [rip+0x2ce8b]        # 0x140036460
   1400095d5:	mov    r8,QWORD PTR [rsi]
   1400095d8:	mov    rsi,QWORD PTR [rsp+0x38]
   1400095dd:	mov    rdx,QWORD PTR [r8+0x30]
   1400095e1:	mov    rcx,QWORD PTR [r8+0x28]
   1400095e5:	mov    rax,rcx
   1400095e8:	sub    rax,rbx
   1400095eb:	add    rax,rdi
   1400095ee:	test   rbx,rbx
   1400095f1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400095f6:	mov    QWORD PTR [r8+0x38],rax
   1400095fa:	lea    rax,[rcx+rdx*1]
   1400095fe:	mov    QWORD PTR [r8+0x40],rax
   140009602:	setne  al
   140009605:	add    rsp,0x20
   140009609:	pop    rdi
   14000960a:	ret    
   14000960b:	int3   
   14000960c:	int3   
   14000960d:	int3   
   14000960e:	int3   
   14000960f:	int3   
   140009610:	mov    al,0x1
   140009612:	ret    
   140009613:	int3   
   140009614:	int3   
   140009615:	int3   
   140009616:	int3   
   140009617:	int3   
   140009618:	int3   
   140009619:	int3   
   14000961a:	int3   
   14000961b:	int3   
   14000961c:	int3   
   14000961d:	int3   
   14000961e:	int3   
   14000961f:	int3   
   140009620:	mov    al,0x1
   140009622:	ret    
   140009623:	int3   
   140009624:	int3   
   140009625:	int3   
   140009626:	int3   
   140009627:	int3   
   140009628:	int3   
   140009629:	int3   
   14000962a:	int3   
   14000962b:	int3   
   14000962c:	int3   
   14000962d:	int3   
   14000962e:	int3   
   14000962f:	int3   
   140009630:	mov    al,0x1
   140009632:	ret    
   140009633:	int3   
   140009634:	int3   
   140009635:	int3   
   140009636:	int3   
   140009637:	int3   
   140009638:	int3   
   140009639:	int3   
   14000963a:	int3   
   14000963b:	int3   
   14000963c:	int3   
   14000963d:	int3   
   14000963e:	int3   
   14000963f:	int3   
   140009640:	movzx  r8d,BYTE PTR [rsp+0x18]
   140009646:	jmp    0x140009650
   14000964b:	int3   
   14000964c:	int3   
   14000964d:	int3   
   14000964e:	int3   
   14000964f:	int3   
   140009650:	mov    QWORD PTR [rsp+0x8],rbx
   140009655:	mov    QWORD PTR [rsp+0x10],rbp
   14000965a:	mov    QWORD PTR [rsp+0x18],rsi
   14000965f:	push   rdi
   140009660:	push   r14
   140009662:	push   r15
   140009664:	sub    rsp,0x20
   140009668:	mov    rax,QWORD PTR [rcx]
   14000966b:	xor    ebp,ebp
   14000966d:	mov    r14,rdx
   140009670:	mov    rsi,QWORD PTR [rax+0x20]
   140009674:	mov    rdi,QWORD PTR [rax+0x30]
   140009678:	mov    r15,rcx
   14000967b:	sub    rdi,rsi
   14000967e:	mov    ebx,ebp
   140009680:	test   rdi,rdi
   140009683:	jle    0x1400096ab
   140009685:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140009690:	mov    rcx,QWORD PTR [r14]
   140009693:	mov    r8,rdi
   140009696:	lea    rdx,[rbx+rsi*1]
   14000969a:	sub    r8,rbx
   14000969d:	call   QWORD PTR [rip+0x2cb1d]        # 0x1400361c0
   1400096a3:	add    rbx,rax
   1400096a6:	cmp    rbx,rdi
   1400096a9:	jl     0x140009690
   1400096ab:	mov    r9,QWORD PTR [r15]
   1400096ae:	mov    rbp,QWORD PTR [rsp+0x48]
   1400096b3:	mov    rsi,QWORD PTR [rsp+0x50]
   1400096b8:	mov    r8,QWORD PTR [r9+0x28]
   1400096bc:	mov    rdx,QWORD PTR [r9+0x20]
   1400096c0:	mov    rcx,rdx
   1400096c3:	sub    rcx,rbx
   1400096c6:	add    rcx,rdi
   1400096c9:	test   rbx,rbx
   1400096cc:	mov    rbx,QWORD PTR [rsp+0x40]
   1400096d1:	mov    QWORD PTR [r9+0x30],rcx
   1400096d5:	lea    rcx,[rdx+r8*1]
   1400096d9:	setne  al
   1400096dc:	mov    QWORD PTR [r9+0x38],rcx
   1400096e0:	add    rsp,0x20
   1400096e4:	pop    r15
   1400096e6:	pop    r14
   1400096e8:	pop    rdi
   1400096e9:	ret    
   1400096ea:	int3   
   1400096eb:	int3   
   1400096ec:	int3   
   1400096ed:	int3   
   1400096ee:	int3   
   1400096ef:	int3   
   1400096f0:	movzx  r8d,BYTE PTR [rsp+0x18]
   1400096f6:	jmp    0x140009700
   1400096fb:	int3   
   1400096fc:	int3   
   1400096fd:	int3   
   1400096fe:	int3   
   1400096ff:	int3   
   140009700:	mov    QWORD PTR [rsp+0x8],rbx
   140009705:	mov    QWORD PTR [rsp+0x10],rbp
   14000970a:	mov    QWORD PTR [rsp+0x18],rsi
   14000970f:	push   rdi
   140009710:	push   r14
   140009712:	push   r15
   140009714:	sub    rsp,0x20
   140009718:	mov    rax,QWORD PTR [rcx]
   14000971b:	xor    ebp,ebp
   14000971d:	mov    r14,rdx
   140009720:	mov    rsi,QWORD PTR [rax+0x28]
   140009724:	mov    rdi,QWORD PTR [rax+0x38]
   140009728:	mov    r15,rcx
   14000972b:	sub    rdi,rsi
   14000972e:	mov    ebx,ebp
   140009730:	test   rdi,rdi
   140009733:	jle    0x14000975b
   140009735:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140009740:	mov    rcx,QWORD PTR [r14]
   140009743:	mov    r8,rdi
   140009746:	lea    rdx,[rbx+rsi*1]
   14000974a:	sub    r8,rbx
   14000974d:	call   QWORD PTR [rip+0x2ca6d]        # 0x1400361c0
   140009753:	add    rbx,rax
   140009756:	cmp    rbx,rdi
   140009759:	jl     0x140009740
   14000975b:	mov    r9,QWORD PTR [r15]
   14000975e:	mov    rbp,QWORD PTR [rsp+0x48]
   140009763:	mov    rsi,QWORD PTR [rsp+0x50]
   140009768:	mov    r8,QWORD PTR [r9+0x30]
   14000976c:	mov    rdx,QWORD PTR [r9+0x28]
   140009770:	mov    rcx,rdx
   140009773:	sub    rcx,rbx
   140009776:	add    rcx,rdi
   140009779:	test   rbx,rbx
   14000977c:	mov    rbx,QWORD PTR [rsp+0x40]
   140009781:	mov    QWORD PTR [r9+0x38],rcx
   140009785:	lea    rcx,[rdx+r8*1]
   140009789:	setne  al
   14000978c:	mov    QWORD PTR [r9+0x40],rcx
   140009790:	add    rsp,0x20
   140009794:	pop    r15
   140009796:	pop    r14
   140009798:	pop    rdi
   140009799:	ret    
   14000979a:	int3   
   14000979b:	int3   
   14000979c:	int3   
   14000979d:	int3   
   14000979e:	int3   
   14000979f:	int3   
   1400097a0:	mov    rax,rcx
   1400097a3:	ret    
   1400097a4:	int3   
   1400097a5:	int3   
   1400097a6:	int3   
   1400097a7:	int3   
   1400097a8:	int3   
   1400097a9:	int3   
   1400097aa:	int3   
   1400097ab:	int3   
   1400097ac:	int3   
   1400097ad:	int3   
   1400097ae:	int3   
   1400097af:	int3   
   1400097b0:	mov    rax,rcx
   1400097b3:	ret    
   1400097b4:	int3   
   1400097b5:	int3   
   1400097b6:	int3   
   1400097b7:	int3   
   1400097b8:	int3   
   1400097b9:	int3   
   1400097ba:	int3   
   1400097bb:	int3   
   1400097bc:	int3   
   1400097bd:	int3   
   1400097be:	int3   
   1400097bf:	int3   
   1400097c0:	mov    rax,rcx
   1400097c3:	ret    
   1400097c4:	int3   
   1400097c5:	int3   
   1400097c6:	int3   
   1400097c7:	int3   
   1400097c8:	int3   
   1400097c9:	int3   
   1400097ca:	int3   
   1400097cb:	int3   
   1400097cc:	int3   
   1400097cd:	int3   
   1400097ce:	int3   
   1400097cf:	int3   
   1400097d0:	mov    rax,rcx
   1400097d3:	ret    
   1400097d4:	int3   
   1400097d5:	int3   
   1400097d6:	int3   
   1400097d7:	int3   
   1400097d8:	int3   
   1400097d9:	int3   
   1400097da:	int3   
   1400097db:	int3   
   1400097dc:	int3   
   1400097dd:	int3   
   1400097de:	int3   
   1400097df:	int3   
   1400097e0:	mov    rax,rcx
   1400097e3:	ret    
   1400097e4:	int3   
   1400097e5:	int3   
   1400097e6:	int3   
   1400097e7:	int3   
   1400097e8:	int3   
   1400097e9:	int3   
   1400097ea:	int3   
   1400097eb:	int3   
   1400097ec:	int3   
   1400097ed:	int3   
   1400097ee:	int3   
   1400097ef:	int3   
   1400097f0:	mov    rax,rcx
   1400097f3:	ret    
   1400097f4:	int3   
   1400097f5:	int3   
   1400097f6:	int3   
   1400097f7:	int3   
   1400097f8:	int3   
   1400097f9:	int3   
   1400097fa:	int3   
   1400097fb:	int3   
   1400097fc:	int3   
   1400097fd:	int3   
   1400097fe:	int3   
   1400097ff:	int3   
   140009800:	mov    rax,rcx
   140009803:	ret    
   140009804:	int3   
   140009805:	int3   
   140009806:	int3   
   140009807:	int3   
   140009808:	int3   
   140009809:	int3   
   14000980a:	int3   
   14000980b:	int3   
   14000980c:	int3   
   14000980d:	int3   
   14000980e:	int3   
   14000980f:	int3   
   140009810:	mov    rax,rcx
   140009813:	ret    
   140009814:	int3   
   140009815:	int3   
   140009816:	int3   
   140009817:	int3   
   140009818:	int3   
   140009819:	int3   
   14000981a:	int3   
   14000981b:	int3   
   14000981c:	int3   
   14000981d:	int3   
   14000981e:	int3   
   14000981f:	int3   
   140009820:	mov    rax,rcx
   140009823:	ret    
   140009824:	int3   
   140009825:	int3   
   140009826:	int3   
   140009827:	int3   
   140009828:	int3   
   140009829:	int3   
   14000982a:	int3   
   14000982b:	int3   
   14000982c:	int3   
   14000982d:	int3   
   14000982e:	int3   
   14000982f:	int3   
   140009830:	mov    rax,rcx
   140009833:	ret    
   140009834:	int3   
   140009835:	int3   
   140009836:	int3   
   140009837:	int3   
   140009838:	int3   
   140009839:	int3   
   14000983a:	int3   
   14000983b:	int3   
   14000983c:	int3   
   14000983d:	int3   
   14000983e:	int3   
   14000983f:	int3   
   140009840:	mov    rax,rcx
   140009843:	ret    
   140009844:	int3   
   140009845:	int3   
   140009846:	int3   
   140009847:	int3   
   140009848:	int3   
   140009849:	int3   
   14000984a:	int3   
   14000984b:	int3   
   14000984c:	int3   
   14000984d:	int3   
   14000984e:	int3   
   14000984f:	int3   
   140009850:	mov    rax,rcx
   140009853:	ret    
   140009854:	int3   
   140009855:	int3   
   140009856:	int3   
   140009857:	int3   
   140009858:	int3   
   140009859:	int3   
   14000985a:	int3   
   14000985b:	int3   
   14000985c:	int3   
   14000985d:	int3   
   14000985e:	int3   
   14000985f:	int3   
   140009860:	mov    rax,rcx
   140009863:	ret    
   140009864:	int3   
   140009865:	int3   
   140009866:	int3   
   140009867:	int3   
   140009868:	int3   
   140009869:	int3   
   14000986a:	int3   
   14000986b:	int3   
   14000986c:	int3   
   14000986d:	int3   
   14000986e:	int3   
   14000986f:	int3   
   140009870:	mov    rax,rcx
   140009873:	ret    
   140009874:	int3   
   140009875:	int3   
   140009876:	int3   
   140009877:	int3   
   140009878:	int3   
   140009879:	int3   
   14000987a:	int3   
   14000987b:	int3   
   14000987c:	int3   
   14000987d:	int3   
   14000987e:	int3   
   14000987f:	int3   
   140009880:	mov    rax,rcx
   140009883:	ret    
   140009884:	int3   
   140009885:	int3   
   140009886:	int3   
   140009887:	int3   
   140009888:	int3   
   140009889:	int3   
   14000988a:	int3   
   14000988b:	int3   
   14000988c:	int3   
   14000988d:	int3   
   14000988e:	int3   
   14000988f:	int3   
   140009890:	mov    rax,rcx
   140009893:	ret    
   140009894:	int3   
   140009895:	int3   
   140009896:	int3   
   140009897:	int3   
   140009898:	int3   
   140009899:	int3   
   14000989a:	int3   
   14000989b:	int3   
   14000989c:	int3   
   14000989d:	int3   
   14000989e:	int3   
   14000989f:	int3   
   1400098a0:	mov    rax,rcx
   1400098a3:	ret    
   1400098a4:	int3   
   1400098a5:	int3   
   1400098a6:	int3   
   1400098a7:	int3   
   1400098a8:	int3   
   1400098a9:	int3   
   1400098aa:	int3   
   1400098ab:	int3   
   1400098ac:	int3   
   1400098ad:	int3   
   1400098ae:	int3   
   1400098af:	int3   
   1400098b0:	mov    rax,rcx
   1400098b3:	ret    
   1400098b4:	int3   
   1400098b5:	int3   
   1400098b6:	int3   
   1400098b7:	int3   
   1400098b8:	int3   
   1400098b9:	int3   
   1400098ba:	int3   
   1400098bb:	int3   
   1400098bc:	int3   
   1400098bd:	int3   
   1400098be:	int3   
   1400098bf:	int3   
   1400098c0:	mov    rax,rcx
   1400098c3:	ret    
   1400098c4:	int3   
   1400098c5:	int3   
   1400098c6:	int3   
   1400098c7:	int3   
   1400098c8:	int3   
   1400098c9:	int3   
   1400098ca:	int3   
   1400098cb:	int3   
   1400098cc:	int3   
   1400098cd:	int3   
   1400098ce:	int3   
   1400098cf:	int3   
   1400098d0:	movzx  r9d,BYTE PTR [rsp+0x20]
   1400098d6:	jmp    0x1400098e0
   1400098db:	int3   
   1400098dc:	int3   
   1400098dd:	int3   
   1400098de:	int3   
   1400098df:	int3   
   1400098e0:	mov    DWORD PTR [rsp+0x10],edx
   1400098e4:	push   rbx
   1400098e5:	push   rsi
   1400098e6:	push   rdi
   1400098e7:	sub    rsp,0x20
   1400098eb:	mov    esi,r8d
   1400098ee:	mov    ebx,edx
   1400098f0:	mov    rdi,rcx
   1400098f3:	sub    esi,edx
   1400098f5:	jne    0x140009901
   1400098f7:	mov    eax,edx
   1400098f9:	add    rsp,0x20
   1400098fd:	pop    rdi
   1400098fe:	pop    rsi
   1400098ff:	pop    rbx
   140009900:	ret    
   140009901:	cmp    esi,0xffffffff
   140009904:	jne    0x140009915
   140009906:	call   0x14001a440
   14000990b:	add    eax,ebx
   14000990d:	add    rsp,0x20
   140009911:	pop    rdi
   140009912:	pop    rsi
   140009913:	pop    rbx
   140009914:	ret    
   140009915:	xor    edx,edx
   140009917:	mov    QWORD PTR [rsp+0x40],rbp
   14000991c:	cmp    esi,0xffffffff
   14000991f:	jbe    0x14000999c
   140009921:	xor    r8d,r8d
   140009924:	lea    eax,[rsi+0x1]
   140009927:	mov    ebx,0x1
   14000992c:	div    r8d
   14000992f:	mov    ebp,r8d
   140009932:	mov    ecx,eax
   140009934:	mov    DWORD PTR [rsp+0x50],eax
   140009938:	cmp    ecx,ebx
   14000993a:	jae    0x140009970
   14000993c:	xor    eax,eax
   14000993e:	mov    r8d,esi
   140009941:	xor    edx,edx
   140009943:	movzx  r9d,al
   140009947:	mov    rcx,rdi
   14000994a:	call   0x1400098e0
   14000994f:	mov    ecx,DWORD PTR [rsp+0x50]
   140009953:	cmp    eax,0xffffffff
   140009956:	ja     0x140009938
   140009958:	cmp    eax,esi
   14000995a:	ja     0x140009938
   14000995c:	add    eax,DWORD PTR [rsp+0x48]
   140009960:	mov    rbp,QWORD PTR [rsp+0x40]
   140009965:	add    rsp,0x20
   140009969:	pop    rdi
   14000996a:	pop    rsi
   14000996b:	pop    rbx
   14000996c:	ret    
   14000996d:	nop    DWORD PTR [rax]
   140009970:	mov    rcx,rdi
   140009973:	call   0x14001a440
   140009978:	imul   eax,ebx
   14000997b:	add    ebp,eax
   14000997d:	mov    eax,esi
   14000997f:	sub    eax,ebx
   140009981:	neg    ebx
   140009983:	inc    eax
   140009985:	cmp    ebx,eax
   140009987:	je     0x14000998d
   140009989:	xor    ebx,ebx
   14000998b:	jmp    0x140009970
   14000998d:	mov    eax,ebp
   14000998f:	mov    rbp,QWORD PTR [rsp+0x40]
   140009994:	add    rsp,0x20
   140009998:	pop    rdi
   140009999:	pop    rsi
   14000999a:	pop    rbx
   14000999b:	ret    
   14000999c:	or     eax,0xffffffff
   14000999f:	lea    ecx,[rsi+0x1]
   1400099a2:	div    ecx
   1400099a4:	mov    ebp,eax
   1400099a6:	cmp    edx,esi
   1400099a8:	jne    0x1400099b0
   1400099aa:	inc    ebp
   1400099ac:	nop    DWORD PTR [rax+0x0]
   1400099b0:	cmp    QWORD PTR [rdi+0x9c0],0x270
   1400099bb:	jne    0x1400099c5
   1400099bd:	mov    rcx,rdi
   1400099c0:	call   0x14002d5e0
   1400099c5:	mov    rax,QWORD PTR [rdi+0x9c0]
   1400099cc:	xor    edx,edx
   1400099ce:	mov    ecx,DWORD PTR [rdi+rax*4]
   1400099d1:	inc    rax
   1400099d4:	mov    QWORD PTR [rdi+0x9c0],rax
   1400099db:	mov    eax,ecx
   1400099dd:	shr    eax,0xb
   1400099e0:	xor    ecx,eax
   1400099e2:	mov    eax,ecx
   1400099e4:	and    eax,0xff3a58ad
   1400099e9:	shl    eax,0x7
   1400099ec:	xor    ecx,eax
   1400099ee:	mov    eax,ecx
   1400099f0:	and    eax,0xffffdf8c
   1400099f5:	shl    eax,0xf
   1400099f8:	xor    ecx,eax
   1400099fa:	mov    eax,ecx
   1400099fc:	shr    eax,0x12
   1400099ff:	xor    eax,ecx
   140009a01:	div    ebp
   140009a03:	cmp    eax,esi
   140009a05:	ja     0x1400099b0
   140009a07:	add    eax,ebx
   140009a09:	mov    rbp,QWORD PTR [rsp+0x40]
   140009a0e:	add    rsp,0x20
   140009a12:	pop    rdi
   140009a13:	pop    rsi
   140009a14:	pop    rbx
   140009a15:	ret    
   140009a16:	int3   
   140009a17:	int3   
   140009a18:	int3   
   140009a19:	int3   
   140009a1a:	int3   
   140009a1b:	int3   
   140009a1c:	int3   
   140009a1d:	int3   
   140009a1e:	int3   
   140009a1f:	int3   
   140009a20:	lea    rax,[rcx+0x1]
   140009a24:	ret    
   140009a25:	int3   
   140009a26:	int3   
   140009a27:	int3   
   140009a28:	int3   
   140009a29:	int3   
   140009a2a:	int3   
   140009a2b:	int3   
   140009a2c:	int3   
   140009a2d:	int3   
   140009a2e:	int3   
   140009a2f:	int3   
   140009a30:	mov    rax,rcx
   140009a33:	ret    
   140009a34:	int3   
   140009a35:	int3   
   140009a36:	int3   
   140009a37:	int3   
   140009a38:	int3   
   140009a39:	int3   
   140009a3a:	int3   
   140009a3b:	int3   
   140009a3c:	int3   
   140009a3d:	int3   
   140009a3e:	int3   
   140009a3f:	int3   
   140009a40:	rex push rbx
   140009a42:	sub    rsp,0x30
   140009a46:	xor    eax,eax
   140009a48:	mov    rbx,rdx
   140009a4b:	mov    DWORD PTR [rsp+0x20],0x0
   140009a53:	movzx  r8d,al
   140009a57:	call   0x140009a70
   140009a5c:	mov    rax,rbx
   140009a5f:	add    rsp,0x30
   140009a63:	pop    rbx
   140009a64:	ret    
   140009a65:	int3   
   140009a66:	int3   
   140009a67:	int3   
   140009a68:	int3   
   140009a69:	int3   
   140009a6a:	int3   
   140009a6b:	int3   
   140009a6c:	int3   
   140009a6d:	int3   
   140009a6e:	int3   
   140009a6f:	int3   
   140009a70:	mov    rax,rsp
   140009a73:	push   rdi
   140009a74:	sub    rsp,0x100
   140009a7b:	mov    QWORD PTR [rax-0x78],0xfffffffffffffffe
   140009a83:	mov    QWORD PTR [rax+0x8],rbx
   140009a87:	mov    rbx,rdx
   140009a8a:	mov    rdi,rcx
   140009a8d:	mov    DWORD PTR [rsp+0x20],0x0
   140009a95:	lea    rdx,[rsp+0x28]
   140009a9a:	call   0x140009bf0
   140009a9f:	nop
   140009aa0:	cmp    BYTE PTR [rsp+0x28],0x0
   140009aa5:	je     0x140009af0
   140009aa7:	mov    QWORD PTR [rbx+0x18],0xf
   140009aaf:	mov    QWORD PTR [rbx+0x10],0x0
   140009ab7:	mov    BYTE PTR [rbx],0x0
   140009aba:	or     r9,0xffffffffffffffff
   140009abe:	xor    r8d,r8d
   140009ac1:	lea    rdx,[rsp+0x30]
   140009ac6:	mov    rcx,rbx
   140009ac9:	call   0x14001ef20
   140009ace:	nop
   140009acf:	cmp    BYTE PTR [rsp+0x28],0x0
   140009ad4:	je     0x140009ae8
   140009ad6:	cmp    QWORD PTR [rsp+0x48],0x10
   140009adc:	jb     0x140009ae8
   140009ade:	mov    rcx,QWORD PTR [rsp+0x30]
   140009ae3:	call   0x140030282
   140009ae8:	mov    rax,rbx
   140009aeb:	jmp    0x140009bda
   140009af0:	mov    QWORD PTR [rsp+0x68],0xf
   140009af9:	mov    QWORD PTR [rsp+0x60],0x0
   140009b02:	mov    BYTE PTR [rsp+0x50],0x0
   140009b07:	mov    r8d,0x1c
   140009b0d:	lea    rdx,[rip+0x35d14]        # 0x14003f828
   140009b14:	lea    rcx,[rsp+0x50]
   140009b19:	call   0x14001f070
   140009b1e:	nop
   140009b1f:	lea    rdx,[rip+0x4df32]        # 0x140057a58
   140009b26:	lea    rcx,[rip+0x4b6a3]        # 0x1400551d0
   140009b2d:	call   QWORD PTR [rip+0x2c845]        # 0x140036378
   140009b33:	mov    r8,rax
   140009b36:	lea    rdx,[rsp+0x50]
   140009b3b:	lea    rcx,[rsp+0x98]
   140009b43:	call   0x1400034d0
   140009b48:	nop
   140009b49:	lea    r8,[rip+0x35cc8]        # 0x14003f818
   140009b50:	mov    rdx,rax
   140009b53:	lea    rcx,[rsp+0x28]
   140009b58:	call   0x1400034d0
   140009b5d:	nop
   140009b5e:	cmp    QWORD PTR [rax+0x18],0x10
   140009b63:	jb     0x140009b68
   140009b65:	mov    rax,QWORD PTR [rax]
   140009b68:	mov    QWORD PTR [rsp+0x128],rax
   140009b70:	lea    rdx,[rsp+0x128]
   140009b78:	lea    rcx,[rsp+0x70]
   140009b7d:	call   QWORD PTR [rip+0x2c8cd]        # 0x140036450
   140009b83:	nop
   140009b84:	lea    rax,[rip+0x30e05]        # 0x14003a990
   140009b8b:	mov    QWORD PTR [rsp+0x70],rax
   140009b90:	mov    rdx,rdi
   140009b93:	lea    rcx,[rsp+0x88]
   140009b9b:	call   0x1400026b0
   140009ba0:	nop
   140009ba1:	lea    rdx,[rsp+0x70]
   140009ba6:	lea    rcx,[rsp+0xb8]
   140009bae:	call   0x140008030
   140009bb3:	nop
   140009bb4:	lea    rcx,[rip+0x35945]        # 0x14003f500
   140009bbb:	mov    QWORD PTR [rax+0x30],rcx
   140009bbf:	lea    rcx,[rip+0x33aca]        # 0x14003d690
   140009bc6:	mov    QWORD PTR [rax+0x38],rcx
   140009bca:	mov    DWORD PTR [rax+0x40],0x28d
   140009bd1:	mov    rcx,rax
   140009bd4:	call   0x14000dd30
   140009bd9:	nop
   140009bda:	mov    rbx,QWORD PTR [rsp+0x110]
   140009be2:	add    rsp,0x100
   140009be9:	pop    rdi
   140009bea:	ret    
   140009beb:	int3   
   140009bec:	int3   
   140009bed:	int3   
   140009bee:	int3   
   140009bef:	int3   
   140009bf0:	mov    BYTE PTR [rsp+0x18],r8b
   140009bf5:	push   rbx
   140009bf6:	sub    rsp,0x30
   140009bfa:	mov    r8,rcx
   140009bfd:	lea    rcx,[rsp+0x50]
   140009c02:	mov    rbx,rdx
   140009c05:	mov    DWORD PTR [rsp+0x20],0x0
   140009c0d:	call   0x140024990
   140009c12:	mov    rax,rbx
   140009c15:	add    rsp,0x30
   140009c19:	pop    rbx
   140009c1a:	ret    
   140009c1b:	int3   
   140009c1c:	int3   
   140009c1d:	int3   
   140009c1e:	int3   
   140009c1f:	int3   
   140009c20:	ret    0x0
   140009c23:	int3   
   140009c24:	int3   
   140009c25:	int3   
   140009c26:	int3   
   140009c27:	int3   
   140009c28:	int3   
   140009c29:	int3   
   140009c2a:	int3   
   140009c2b:	int3   
   140009c2c:	int3   
   140009c2d:	int3   
   140009c2e:	int3   
   140009c2f:	int3   
   140009c30:	ret    0x0
   140009c33:	int3   
   140009c34:	int3   
   140009c35:	int3   
   140009c36:	int3   
   140009c37:	int3   
   140009c38:	int3   
   140009c39:	int3   
   140009c3a:	int3   
   140009c3b:	int3   
   140009c3c:	int3   
   140009c3d:	int3   
   140009c3e:	int3   
   140009c3f:	int3   
   140009c40:	ret    0x0
   140009c43:	int3   
   140009c44:	int3   
   140009c45:	int3   
   140009c46:	int3   
   140009c47:	int3   
   140009c48:	int3   
   140009c49:	int3   
   140009c4a:	int3   
   140009c4b:	int3   
   140009c4c:	int3   
   140009c4d:	int3   
   140009c4e:	int3   
   140009c4f:	int3   
   140009c50:	ret    0x0
   140009c53:	int3   
   140009c54:	int3   
   140009c55:	int3   
   140009c56:	int3   
   140009c57:	int3   
   140009c58:	int3   
   140009c59:	int3   
   140009c5a:	int3   
   140009c5b:	int3   
   140009c5c:	int3   
   140009c5d:	int3   
   140009c5e:	int3   
   140009c5f:	int3   
   140009c60:	sub    rsp,0x28
   140009c64:	mov    rax,QWORD PTR [rcx]
   140009c67:	mov    r8,rdx
   140009c6a:	lea    rdx,[rsp+0x30]
   140009c6f:	movsxd r9,DWORD PTR [rax+0x4]
   140009c73:	add    rcx,r9
   140009c76:	call   QWORD PTR [rip+0x2c514]        # 0x140036190
   140009c7c:	mov    rcx,QWORD PTR [rsp+0x30]
   140009c81:	test   rcx,rcx
   140009c84:	je     0x140009c9f
   140009c86:	mov    rax,QWORD PTR [rcx]
   140009c89:	call   QWORD PTR [rax+0x10]
   140009c8c:	test   rax,rax
   140009c8f:	je     0x140009c9f
   140009c91:	mov    r8,QWORD PTR [rax]
   140009c94:	mov    edx,0x1
   140009c99:	mov    rcx,rax
   140009c9c:	call   QWORD PTR [r8]
   140009c9f:	add    rsp,0x28
   140009ca3:	ret    
   140009ca4:	int3   
   140009ca5:	int3   
   140009ca6:	int3   
   140009ca7:	int3   
   140009ca8:	int3   
   140009ca9:	int3   
   140009caa:	int3   
   140009cab:	int3   
   140009cac:	int3   
   140009cad:	int3   
   140009cae:	int3   
   140009caf:	int3   
   140009cb0:	ret    0x0
   140009cb3:	int3   
   140009cb4:	int3   
   140009cb5:	int3   
   140009cb6:	int3   
   140009cb7:	int3   
   140009cb8:	int3   
   140009cb9:	int3   
   140009cba:	int3   
   140009cbb:	int3   
   140009cbc:	int3   
   140009cbd:	int3   
   140009cbe:	int3   
   140009cbf:	int3   
   140009cc0:	ret    0x0
   140009cc3:	int3   
   140009cc4:	int3   
   140009cc5:	int3   
   140009cc6:	int3   
   140009cc7:	int3   
   140009cc8:	int3   
   140009cc9:	int3   
   140009cca:	int3   
   140009ccb:	int3   
   140009ccc:	int3   
   140009ccd:	int3   
   140009cce:	int3   
   140009ccf:	int3   
   140009cd0:	sub    rsp,0x28
   140009cd4:	mov    r8,QWORD PTR [rcx]
   140009cd7:	mov    rax,QWORD PTR [r8]
   140009cda:	movsxd rcx,DWORD PTR [rax+0x4]
   140009cde:	add    rcx,r8
   140009ce1:	mov    r8,rdx
   140009ce4:	lea    rdx,[rsp+0x30]
   140009ce9:	call   QWORD PTR [rip+0x2c4a1]        # 0x140036190
   140009cef:	mov    rcx,QWORD PTR [rsp+0x30]
   140009cf4:	test   rcx,rcx
   140009cf7:	je     0x140009d12
   140009cf9:	mov    rax,QWORD PTR [rcx]
   140009cfc:	call   QWORD PTR [rax+0x10]
   140009cff:	test   rax,rax
   140009d02:	je     0x140009d12
   140009d04:	mov    r8,QWORD PTR [rax]
   140009d07:	mov    edx,0x1
   140009d0c:	mov    rcx,rax
   140009d0f:	call   QWORD PTR [r8]
   140009d12:	add    rsp,0x28
   140009d16:	ret    
   140009d17:	int3   
   140009d18:	int3   
   140009d19:	int3   
   140009d1a:	int3   
   140009d1b:	int3   
   140009d1c:	int3   
   140009d1d:	int3   
   140009d1e:	int3   
   140009d1f:	int3   
   140009d20:	sub    rsp,0x28
   140009d24:	mov    r8,QWORD PTR [rcx]
   140009d27:	mov    rax,QWORD PTR [r8]
   140009d2a:	movsxd rcx,DWORD PTR [rax+0x4]
   140009d2e:	add    rcx,r8
   140009d31:	mov    r8,rdx
   140009d34:	lea    rdx,[rsp+0x30]
   140009d39:	call   QWORD PTR [rip+0x2c451]        # 0x140036190
   140009d3f:	mov    rcx,QWORD PTR [rsp+0x30]
   140009d44:	test   rcx,rcx
   140009d47:	je     0x140009d62
   140009d49:	mov    rax,QWORD PTR [rcx]
   140009d4c:	call   QWORD PTR [rax+0x10]
   140009d4f:	test   rax,rax
   140009d52:	je     0x140009d62
   140009d54:	mov    r8,QWORD PTR [rax]
   140009d57:	mov    edx,0x1
   140009d5c:	mov    rcx,rax
   140009d5f:	call   QWORD PTR [r8]
   140009d62:	add    rsp,0x28
   140009d66:	ret    
   140009d67:	int3   
   140009d68:	int3   
   140009d69:	int3   
   140009d6a:	int3   
   140009d6b:	int3   
   140009d6c:	int3   
   140009d6d:	int3   
   140009d6e:	int3   
   140009d6f:	int3   
   140009d70:	sub    rsp,0x28
   140009d74:	mov    r8,QWORD PTR [rcx]
   140009d77:	mov    rax,QWORD PTR [r8]
   140009d7a:	movsxd rcx,DWORD PTR [rax+0x4]
   140009d7e:	add    rcx,r8
   140009d81:	mov    r8,rdx
   140009d84:	lea    rdx,[rsp+0x30]
   140009d89:	call   QWORD PTR [rip+0x2c401]        # 0x140036190
   140009d8f:	mov    rcx,QWORD PTR [rsp+0x30]
   140009d94:	test   rcx,rcx
   140009d97:	je     0x140009db2
   140009d99:	mov    rax,QWORD PTR [rcx]
   140009d9c:	call   QWORD PTR [rax+0x10]
   140009d9f:	test   rax,rax
   140009da2:	je     0x140009db2
   140009da4:	mov    r8,QWORD PTR [rax]
   140009da7:	mov    edx,0x1
   140009dac:	mov    rcx,rax
   140009daf:	call   QWORD PTR [r8]
   140009db2:	add    rsp,0x28
   140009db6:	ret    
   140009db7:	int3   
   140009db8:	int3   
   140009db9:	int3   
   140009dba:	int3   
   140009dbb:	int3   
   140009dbc:	int3   
   140009dbd:	int3   
   140009dbe:	int3   
   140009dbf:	int3   
   140009dc0:	ret    0x0
   140009dc3:	int3   
   140009dc4:	int3   
   140009dc5:	int3   
   140009dc6:	int3   
   140009dc7:	int3   
   140009dc8:	int3   
   140009dc9:	int3   
   140009dca:	int3   
   140009dcb:	int3   
   140009dcc:	int3   
   140009dcd:	int3   
   140009dce:	int3   
   140009dcf:	int3   
   140009dd0:	ret    0x0
   140009dd3:	int3   
   140009dd4:	int3   
   140009dd5:	int3   
   140009dd6:	int3   
   140009dd7:	int3   
   140009dd8:	int3   
   140009dd9:	int3   
   140009dda:	int3   
   140009ddb:	int3   
   140009ddc:	int3   
   140009ddd:	int3   
   140009dde:	int3   
   140009ddf:	int3   
   140009de0:	ret    0x0
   140009de3:	int3   
   140009de4:	int3   
   140009de5:	int3   
   140009de6:	int3   
   140009de7:	int3   
   140009de8:	int3   
   140009de9:	int3   
   140009dea:	int3   
   140009deb:	int3   
   140009dec:	int3   
   140009ded:	int3   
   140009dee:	int3   
   140009def:	int3   
   140009df0:	sub    rsp,0x28
   140009df4:	mov    r8,QWORD PTR [rcx]
   140009df7:	mov    rax,QWORD PTR [r8]
   140009dfa:	movsxd rcx,DWORD PTR [rax+0x4]
   140009dfe:	add    rcx,r8
   140009e01:	mov    r8,rdx
   140009e04:	lea    rdx,[rsp+0x30]
   140009e09:	call   QWORD PTR [rip+0x2c381]        # 0x140036190
   140009e0f:	mov    rcx,QWORD PTR [rsp+0x30]
   140009e14:	test   rcx,rcx
   140009e17:	je     0x140009e32
   140009e19:	mov    rax,QWORD PTR [rcx]
   140009e1c:	call   QWORD PTR [rax+0x10]
   140009e1f:	test   rax,rax
   140009e22:	je     0x140009e32
   140009e24:	mov    r8,QWORD PTR [rax]
   140009e27:	mov    edx,0x1
   140009e2c:	mov    rcx,rax
   140009e2f:	call   QWORD PTR [r8]
   140009e32:	add    rsp,0x28
   140009e36:	ret    
   140009e37:	int3   
   140009e38:	int3   
   140009e39:	int3   
   140009e3a:	int3   
   140009e3b:	int3   
   140009e3c:	int3   
   140009e3d:	int3   
   140009e3e:	int3   
   140009e3f:	int3   
   140009e40:	sub    rsp,0x28
   140009e44:	mov    r8,QWORD PTR [rcx]
   140009e47:	mov    rax,QWORD PTR [r8]
   140009e4a:	movsxd rcx,DWORD PTR [rax+0x4]
   140009e4e:	add    rcx,r8
   140009e51:	mov    r8,rdx
   140009e54:	lea    rdx,[rsp+0x30]
   140009e59:	call   QWORD PTR [rip+0x2c331]        # 0x140036190
   140009e5f:	mov    rcx,QWORD PTR [rsp+0x30]
   140009e64:	test   rcx,rcx
   140009e67:	je     0x140009e82
   140009e69:	mov    rax,QWORD PTR [rcx]
   140009e6c:	call   QWORD PTR [rax+0x10]
   140009e6f:	test   rax,rax
   140009e72:	je     0x140009e82
   140009e74:	mov    r8,QWORD PTR [rax]
   140009e77:	mov    edx,0x1
   140009e7c:	mov    rcx,rax
   140009e7f:	call   QWORD PTR [r8]
   140009e82:	add    rsp,0x28
   140009e86:	ret    
   140009e87:	int3   
   140009e88:	int3   
   140009e89:	int3   
   140009e8a:	int3   
   140009e8b:	int3   
   140009e8c:	int3   
   140009e8d:	int3   
   140009e8e:	int3   
   140009e8f:	int3   
   140009e90:	mov    QWORD PTR [rsp+0x8],rbx
   140009e95:	push   rdi
   140009e96:	sub    rsp,0x20
   140009e9a:	mov    rbx,QWORD PTR [rcx]
   140009e9d:	mov    rdi,rcx
   140009ea0:	cmp    DWORD PTR [rbx+0x14],0x5
   140009ea4:	jl     0x140009eb5
   140009ea6:	mov    rcx,rbx
   140009ea9:	call   0x14002c670
   140009eae:	mov    DWORD PTR [rbx+0x14],0x0
   140009eb5:	movsxd rdx,DWORD PTR [rbx+0x14]
   140009eb9:	mov    r8d,DWORD PTR [rbx+rdx*4]
   140009ebd:	lea    eax,[rdx+0x1]
   140009ec0:	mov    DWORD PTR [rbx+0x14],eax
   140009ec3:	mov    rbx,QWORD PTR [rsp+0x30]
   140009ec8:	mov    DWORD PTR [rdi+0x8],r8d
   140009ecc:	add    rsp,0x20
   140009ed0:	pop    rdi
   140009ed1:	ret    
   140009ed2:	int3   
   140009ed3:	int3   
   140009ed4:	int3   
   140009ed5:	int3   
   140009ed6:	int3   
   140009ed7:	int3   
   140009ed8:	int3   
   140009ed9:	int3   
   140009eda:	int3   
   140009edb:	int3   
   140009edc:	int3   
   140009edd:	int3   
   140009ede:	int3   
   140009edf:	int3   
   140009ee0:	rex push rbx
   140009ee2:	sub    rsp,0x20
   140009ee6:	mov    r8,QWORD PTR [rcx+0x58]
   140009eea:	lea    r9,[rcx+0x68]
   140009eee:	lea    rdx,[rcx+0x50]
   140009ef2:	mov    rbx,rcx
   140009ef5:	call   0x140003720
   140009efa:	mov    BYTE PTR [rbx+0x60],al
   140009efd:	add    rsp,0x20
   140009f01:	pop    rbx
   140009f02:	ret    
   140009f03:	int3   
   140009f04:	int3   
   140009f05:	int3   
   140009f06:	int3   
   140009f07:	int3   
   140009f08:	int3   
   140009f09:	int3   
   140009f0a:	int3   
   140009f0b:	int3   
   140009f0c:	int3   
   140009f0d:	int3   
   140009f0e:	int3   
   140009f0f:	int3   
   140009f10:	mov    BYTE PTR [rcx+0x8],0x0
   140009f14:	ret    
   140009f15:	int3   
   140009f16:	int3   
   140009f17:	int3   
   140009f18:	int3   
   140009f19:	int3   
   140009f1a:	int3   
   140009f1b:	int3   
   140009f1c:	int3   
   140009f1d:	int3   
   140009f1e:	int3   
   140009f1f:	int3   
   140009f20:	inc    QWORD PTR [rcx]
   140009f23:	ret    
   140009f24:	int3   
   140009f25:	int3   
   140009f26:	int3   
   140009f27:	int3   
   140009f28:	int3   
   140009f29:	int3   
   140009f2a:	int3   
   140009f2b:	int3   
   140009f2c:	int3   
   140009f2d:	int3   
   140009f2e:	int3   
   140009f2f:	int3   
   140009f30:	mov    BYTE PTR [rcx+0x8],0x0
   140009f34:	ret    
   140009f35:	int3   
   140009f36:	int3   
   140009f37:	int3   
   140009f38:	int3   
   140009f39:	int3   
   140009f3a:	int3   
   140009f3b:	int3   
   140009f3c:	int3   
   140009f3d:	int3   
   140009f3e:	int3   
   140009f3f:	int3   
   140009f40:	mov    BYTE PTR [rcx+0x10],0x0
   140009f44:	ret    
   140009f45:	int3   
   140009f46:	int3   
   140009f47:	int3   
   140009f48:	int3   
   140009f49:	int3   
   140009f4a:	int3   
   140009f4b:	int3   
   140009f4c:	int3   
   140009f4d:	int3   
   140009f4e:	int3   
   140009f4f:	int3   
   140009f50:	mov    rax,QWORD PTR [rcx]
   140009f53:	test   rax,rax
   140009f56:	je     0x140009f5c
   140009f58:	add    rax,0x60
   140009f5c:	mov    rax,QWORD PTR [rax+0x8]
   140009f60:	test   rax,rax
   140009f63:	je     0x140009f6d
   140009f65:	add    rax,0xffffffffffffffa0
   140009f69:	mov    QWORD PTR [rcx],rax
   140009f6c:	ret    
   140009f6d:	mov    QWORD PTR [rcx],0x0
   140009f74:	ret    
   140009f75:	int3   
   140009f76:	int3   
   140009f77:	int3   
   140009f78:	int3   
   140009f79:	int3   
   140009f7a:	int3   
   140009f7b:	int3   
   140009f7c:	int3   
   140009f7d:	int3   
   140009f7e:	int3   
   140009f7f:	int3   
   140009f80:	sub    rsp,0x38
   140009f84:	mov    QWORD PTR [rsp+0x28],r9
   140009f89:	xor    r9d,r9d
   140009f8c:	mov    QWORD PTR [rsp+0x20],0x0
   140009f95:	call   QWORD PTR [rip+0x2c615]        # 0x1400365b0
   140009f9b:	add    rsp,0x38
   140009f9f:	ret    
   140009fa0:	mov    QWORD PTR [rsp+0x10],rsi
   140009fa5:	mov    QWORD PTR [rsp+0x18],r8
   140009faa:	push   rdi
   140009fab:	sub    rsp,0x30
   140009faf:	mov    rax,QWORD PTR [rcx]
   140009fb2:	mov    r11,r9
   140009fb5:	mov    r9,QWORD PTR [rsp+0x60]
   140009fba:	cmp    r8,QWORD PTR [rax]
   140009fbd:	movzx  eax,BYTE PTR [rsp+0x50]
   140009fc2:	mov    rsi,rdx
   140009fc5:	mov    r10,r8
   140009fc8:	mov    rdi,rcx
   140009fcb:	mov    rdx,r8
   140009fce:	mov    BYTE PTR [rsp+0x20],al
   140009fd2:	jne    0x140009ff3
   140009fd4:	mov    r8,r11
   140009fd7:	call   0x140004790
   140009fdc:	mov    rax,QWORD PTR [rdi]
   140009fdf:	mov    rcx,QWORD PTR [rax]
   140009fe2:	mov    rax,rsi
   140009fe5:	mov    QWORD PTR [rsi],rcx
   140009fe8:	mov    rsi,QWORD PTR [rsp+0x48]
   140009fed:	add    rsp,0x30
   140009ff1:	pop    rdi
   140009ff2:	ret    
   140009ff3:	mov    QWORD PTR [rsp+0x40],rbx
   140009ff8:	mov    rbx,QWORD PTR [r8+0x8]
   140009ffc:	mov    r8,r11
   140009fff:	call   0x140004790
   14000a004:	mov    rax,QWORD PTR [rbx]
   14000a007:	mov    rbx,QWORD PTR [rsp+0x40]
   14000a00c:	mov    QWORD PTR [rsi],rax
   14000a00f:	mov    rax,rsi
   14000a012:	mov    rsi,QWORD PTR [rsp+0x48]
   14000a017:	add    rsp,0x30
   14000a01b:	pop    rdi
   14000a01c:	ret    
   14000a01d:	int3   
   14000a01e:	int3   
   14000a01f:	int3   
   14000a020:	mov    QWORD PTR [rsp+0x10],rbx
   14000a025:	mov    QWORD PTR [rsp+0x18],rbp
   14000a02a:	mov    QWORD PTR [rsp+0x20],rsi
   14000a02f:	push   rdi
   14000a030:	sub    rsp,0x20
   14000a034:	mov    rax,r8
   14000a037:	lea    rsi,[rcx+0x11]
   14000a03b:	mov    rdi,rdx
   14000a03e:	mov    rbp,rcx
   14000a041:	lea    r8,[rsp+0x30]
   14000a046:	xor    ebx,ebx
   14000a048:	mov    rcx,rsi
   14000a04b:	mov    rdx,rax
   14000a04e:	mov    QWORD PTR [rsp+0x30],rbx
   14000a053:	call   0x14000a0d0
   14000a058:	mov    rdx,QWORD PTR [rsp+0x30]
   14000a05d:	mov    r8,rax
   14000a060:	cmp    rax,rdx
   14000a063:	jne    0x14000a0ac
   14000a065:	lea    rcx,[rsi-0x11]
   14000a069:	test   rsi,rsi
   14000a06c:	jne    0x14000a070
   14000a06e:	mov    ecx,ebx
   14000a070:	mov    rcx,QWORD PTR [rcx+0x8]
   14000a074:	test   rcx,rcx
   14000a077:	je     0x14000a07f
   14000a079:	add    rcx,0x60
   14000a07d:	jmp    0x14000a082
   14000a07f:	mov    rcx,rbx
   14000a082:	test   rdx,rdx
   14000a085:	je     0x14000a08b
   14000a087:	lea    rbx,[rdx+0x60]
   14000a08b:	mov    rax,QWORD PTR [rcx]
   14000a08e:	mov    QWORD PTR [rbx+0x8],rcx
   14000a092:	mov    QWORD PTR [rdi],r8
   14000a095:	mov    QWORD PTR [rbx],rax
   14000a098:	mov    QWORD PTR [rcx],rbx
   14000a09b:	mov    rax,QWORD PTR [rbx]
   14000a09e:	mov    QWORD PTR [rax+0x8],rbx
   14000a0a2:	inc    QWORD PTR [rbp+0x18]
   14000a0a6:	mov    BYTE PTR [rdi+0x8],0x1
   14000a0aa:	jmp    0x14000a0b2
   14000a0ac:	mov    QWORD PTR [rdi],rax
   14000a0af:	mov    BYTE PTR [rdi+0x8],bl
   14000a0b2:	mov    rbx,QWORD PTR [rsp+0x38]
   14000a0b7:	mov    rbp,QWORD PTR [rsp+0x40]
   14000a0bc:	mov    rsi,QWORD PTR [rsp+0x48]
   14000a0c1:	mov    rax,rdi
   14000a0c4:	add    rsp,0x20
   14000a0c8:	pop    rdi
   14000a0c9:	ret    
   14000a0ca:	int3   
   14000a0cb:	int3   
   14000a0cc:	int3   
   14000a0cd:	int3   
   14000a0ce:	int3   
   14000a0cf:	int3   
   14000a0d0:	mov    QWORD PTR [rsp+0x8],rbx
   14000a0d5:	mov    QWORD PTR [rsp+0x10],rsi
   14000a0da:	mov    QWORD PTR [rsp+0x18],rdi
   14000a0df:	mov    BYTE PTR [rsp+0x20],r9b
   14000a0e4:	push   r14
   14000a0e6:	sub    rsp,0x30
   14000a0ea:	mov    r14,r8
   14000a0ed:	xor    eax,eax
   14000a0ef:	lea    r8,[rsp+0x20]
   14000a0f4:	xor    ebx,ebx
   14000a0f6:	movzx  r9d,al
   14000a0fa:	mov    rsi,rdx
   14000a0fd:	mov    rdi,rcx
   14000a100:	mov    DWORD PTR [rsp+0x20],ebx
   14000a104:	call   0x140025890
   14000a109:	test   al,al
   14000a10b:	jne    0x14000a123
   14000a10d:	mov    rax,QWORD PTR [rsp+0x28]
   14000a112:	test   rax,rax
   14000a115:	je     0x14000a11b
   14000a117:	lea    rbx,[rax-0x48]
   14000a11b:	mov    rax,rbx
   14000a11e:	jmp    0x14000a1be
   14000a123:	movzx  r9d,BYTE PTR [rsp+0x58]
   14000a129:	mov    r8,r14
   14000a12c:	mov    rdx,rsi
   14000a12f:	mov    rcx,rdi
   14000a132:	call   0x1400253d0
   14000a137:	mov    rcx,QWORD PTR [r14]
   14000a13a:	mov    rsi,rax
   14000a13d:	cmp    rax,rcx
   14000a140:	jne    0x14000a1bb
   14000a142:	test   rdi,rdi
   14000a145:	je     0x14000a14d
   14000a147:	add    rdi,0xffffffffffffffef
   14000a14b:	jmp    0x14000a150
   14000a14d:	mov    rdi,rbx
   14000a150:	mov    rdx,QWORD PTR [rdi+0x8]
   14000a154:	test   rdx,rdx
   14000a157:	je     0x14000a15f
   14000a159:	add    rdx,0x48
   14000a15d:	jmp    0x14000a162
   14000a15f:	mov    rdx,rbx
   14000a162:	test   rcx,rcx
   14000a165:	je     0x14000a16d
   14000a167:	add    rcx,0x48
   14000a16b:	jmp    0x14000a170
   14000a16d:	mov    rcx,rbx
   14000a170:	mov    rax,QWORD PTR [rsp+0x28]
   14000a175:	cmp    DWORD PTR [rsp+0x20],ebx
   14000a179:	jne    0x14000a199
   14000a17b:	mov    QWORD PTR [rax+0x8],rcx
   14000a17f:	cmp    rax,rdx
   14000a182:	jne    0x14000a18d
   14000a184:	and    QWORD PTR [rdx],0x1
   14000a188:	or     QWORD PTR [rdx],rcx
   14000a18b:	jmp    0x14000a1a3
   14000a18d:	cmp    rax,QWORD PTR [rdx+0x8]
   14000a191:	jne    0x14000a1a7
   14000a193:	mov    QWORD PTR [rdx+0x8],rcx
   14000a197:	jmp    0x14000a1a7
   14000a199:	mov    QWORD PTR [rax+0x10],rcx
   14000a19d:	cmp    rax,QWORD PTR [rdx+0x10]
   14000a1a1:	jne    0x14000a1a7
   14000a1a3:	mov    QWORD PTR [rdx+0x10],rcx
   14000a1a7:	and    QWORD PTR [rcx],0x1
   14000a1ab:	or     QWORD PTR [rcx],rax
   14000a1ae:	mov    QWORD PTR [rcx+0x8],rbx
   14000a1b2:	mov    QWORD PTR [rcx+0x10],rbx
   14000a1b6:	call   0x140029670
   14000a1bb:	mov    rax,rsi
   14000a1be:	mov    rbx,QWORD PTR [rsp+0x40]
   14000a1c3:	mov    rsi,QWORD PTR [rsp+0x48]
   14000a1c8:	mov    rdi,QWORD PTR [rsp+0x50]
   14000a1cd:	add    rsp,0x30
   14000a1d1:	pop    r14
   14000a1d3:	ret    
   14000a1d4:	int3   
   14000a1d5:	int3   
   14000a1d6:	int3   
   14000a1d7:	int3   
   14000a1d8:	int3   
   14000a1d9:	int3   
   14000a1da:	int3   
   14000a1db:	int3   
   14000a1dc:	int3   
   14000a1dd:	int3   
   14000a1de:	int3   
   14000a1df:	int3   
   14000a1e0:	mov    QWORD PTR [rsp+0x8],rbx
   14000a1e5:	push   rdi
   14000a1e6:	sub    rsp,0x20
   14000a1ea:	mov    rbx,r8
   14000a1ed:	mov    rdi,rcx
   14000a1f0:	call   0x14000a0d0
   14000a1f5:	mov    r8,rax
   14000a1f8:	mov    rax,QWORD PTR [rbx]
   14000a1fb:	cmp    r8,rax
   14000a1fe:	jne    0x14000a23c
   14000a200:	xor    edx,edx
   14000a202:	lea    rcx,[rdi-0x11]
   14000a206:	test   rdi,rdi
   14000a209:	jne    0x14000a20d
   14000a20b:	mov    ecx,edx
   14000a20d:	mov    rcx,QWORD PTR [rcx+0x8]
   14000a211:	test   rcx,rcx
   14000a214:	je     0x14000a21c
   14000a216:	add    rcx,0x60
   14000a21a:	jmp    0x14000a21f
   14000a21c:	mov    rcx,rdx
   14000a21f:	test   rax,rax
   14000a222:	je     0x14000a228
   14000a224:	lea    rdx,[rax+0x60]
   14000a228:	mov    rax,QWORD PTR [rcx]
   14000a22b:	mov    QWORD PTR [rdx+0x8],rcx
   14000a22f:	mov    QWORD PTR [rdx],rax
   14000a232:	mov    QWORD PTR [rcx],rdx
   14000a235:	mov    rax,QWORD PTR [rdx]
   14000a238:	mov    QWORD PTR [rax+0x8],rdx
   14000a23c:	mov    rax,r8
   14000a23f:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a244:	add    rsp,0x20
   14000a248:	pop    rdi
   14000a249:	ret    
   14000a24a:	int3   
   14000a24b:	int3   
   14000a24c:	int3   
   14000a24d:	int3   
   14000a24e:	int3   
   14000a24f:	int3   
   14000a250:	movzx  eax,BYTE PTR [rdx]
   14000a253:	movzx  r8d,BYTE PTR [rcx]
   14000a257:	mov    BYTE PTR [rcx],al
   14000a259:	mov    BYTE PTR [rdx],r8b
   14000a25c:	ret    
   14000a25d:	int3   
   14000a25e:	int3   
   14000a25f:	int3   
   14000a260:	movups xmm0,XMMWORD PTR [rdx]
   14000a263:	movups xmm1,XMMWORD PTR [rcx]
   14000a266:	movups XMMWORD PTR [rcx],xmm0
   14000a269:	movups XMMWORD PTR [rdx],xmm1
   14000a26c:	ret    
   14000a26d:	int3   
   14000a26e:	int3   
   14000a26f:	int3   
   14000a270:	rex push rbx
   14000a272:	sub    rsp,0x70
   14000a276:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000a27f:	cmp    QWORD PTR [rcx+0x18],0x10
   14000a284:	jb     0x14000a28b
   14000a286:	mov    rdx,QWORD PTR [rcx]
   14000a289:	jmp    0x14000a28e
   14000a28b:	mov    rdx,rcx
   14000a28e:	mov    QWORD PTR [rsp+0x30],rdx
   14000a293:	mov    rax,QWORD PTR [rcx+0x10]
   14000a297:	lea    rcx,[rax+rdx*1]
   14000a29b:	mov    QWORD PTR [rsp+0x38],rcx
   14000a2a0:	cmp    rdx,rcx
   14000a2a3:	je     0x14000a306
   14000a2a5:	movzx  eax,BYTE PTR [rdx]
   14000a2a8:	cmp    al,0x2d
   14000a2aa:	sete   bl
   14000a2ad:	test   bl,bl
   14000a2af:	jne    0x14000a2b5
   14000a2b1:	cmp    al,0x2b
   14000a2b3:	jne    0x14000a2b8
   14000a2b5:	inc    rdx
   14000a2b8:	mov    BYTE PTR [rsp+0x40],0x0
   14000a2bd:	mov    eax,0x1
   14000a2c2:	mov    WORD PTR [rsp+0x42],ax
   14000a2c7:	lea    rax,[rsp+0x80]
   14000a2cf:	mov    QWORD PTR [rsp+0x48],rax
   14000a2d4:	mov    QWORD PTR [rsp+0x50],rdx
   14000a2d9:	mov    QWORD PTR [rsp+0x58],rcx
   14000a2de:	lea    rcx,[rsp+0x40]
   14000a2e3:	call   0x1400210d0
   14000a2e8:	movzx  ecx,al
   14000a2eb:	movzx  eax,WORD PTR [rsp+0x80]
   14000a2f3:	test   bl,bl
   14000a2f5:	je     0x14000a302
   14000a2f7:	neg    ax
   14000a2fa:	mov    WORD PTR [rsp+0x80],ax
   14000a302:	test   cl,cl
   14000a304:	jne    0x14000a347
   14000a306:	lea    rdx,[rip+0x305c3]        # 0x14003a8d0
   14000a30d:	lea    rcx,[rsp+0x40]
   14000a312:	call   QWORD PTR [rip+0x2c110]        # 0x140036428
   14000a318:	lea    rax,[rip+0x305a1]        # 0x14003a8c0
   14000a31f:	mov    QWORD PTR [rsp+0x40],rax
   14000a324:	lea    rax,[rip+0x4aea5]        # 0x1400551d0
   14000a32b:	mov    QWORD PTR [rsp+0x58],rax
   14000a330:	lea    rax,[rip+0x4b3b9]        # 0x1400556f0
   14000a337:	mov    QWORD PTR [rsp+0x60],rax
   14000a33c:	lea    rcx,[rsp+0x40]
   14000a341:	call   0x14000def0
   14000a346:	nop
   14000a347:	add    rsp,0x70
   14000a34b:	pop    rbx
   14000a34c:	ret    
   14000a34d:	int3   
   14000a34e:	int3   
   14000a34f:	int3   
   14000a350:	mov    r9,rdx
   14000a353:	mov    r10,rcx
   14000a356:	sub    r9,rcx
   14000a359:	sar    r9,0x4
   14000a35d:	test   r9,r9
   14000a360:	jle    0x14000a3a3
   14000a362:	mov    r8,QWORD PTR [r8]
   14000a365:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000a370:	mov    rax,r9
   14000a373:	cqo    
   14000a375:	sub    rax,rdx
   14000a378:	sar    rax,1
   14000a37b:	mov    rcx,rax
   14000a37e:	add    rax,rax
   14000a381:	cmp    QWORD PTR [r10+rax*8],r8
   14000a385:	jae    0x14000a39b
   14000a387:	lea    r10,[r10+rax*8]
   14000a38b:	or     rax,0xffffffffffffffff
   14000a38f:	sub    rax,rcx
   14000a392:	add    r10,0x10
   14000a396:	add    r9,rax
   14000a399:	jmp    0x14000a39e
   14000a39b:	mov    r9,rcx
   14000a39e:	test   r9,r9
   14000a3a1:	jg     0x14000a370
   14000a3a3:	mov    rax,r10
   14000a3a6:	ret    
   14000a3a7:	int3   
   14000a3a8:	int3   
   14000a3a9:	int3   
   14000a3aa:	int3   
   14000a3ab:	int3   
   14000a3ac:	int3   
   14000a3ad:	int3   
   14000a3ae:	int3   
   14000a3af:	int3   
   14000a3b0:	mov    r9,rdx
   14000a3b3:	mov    r10,rcx
   14000a3b6:	sub    r9,rcx
   14000a3b9:	sar    r9,0x4
   14000a3bd:	test   r9,r9
   14000a3c0:	jle    0x14000a403
   14000a3c2:	mov    r8,QWORD PTR [r8]
   14000a3c5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000a3d0:	mov    rax,r9
   14000a3d3:	cqo    
   14000a3d5:	sub    rax,rdx
   14000a3d8:	sar    rax,1
   14000a3db:	mov    rcx,rax
   14000a3de:	add    rax,rax
   14000a3e1:	cmp    QWORD PTR [r10+rax*8],r8
   14000a3e5:	jae    0x14000a3fb
   14000a3e7:	lea    r10,[r10+rax*8]
   14000a3eb:	or     rax,0xffffffffffffffff
   14000a3ef:	sub    rax,rcx
   14000a3f2:	add    r10,0x10
   14000a3f6:	add    r9,rax
   14000a3f9:	jmp    0x14000a3fe
   14000a3fb:	mov    r9,rcx
   14000a3fe:	test   r9,r9
   14000a401:	jg     0x14000a3d0
   14000a403:	mov    rax,r10
   14000a406:	ret    
   14000a407:	int3   
   14000a408:	int3   
   14000a409:	int3   
   14000a40a:	int3   
   14000a40b:	int3   
   14000a40c:	int3   
   14000a40d:	int3   
   14000a40e:	int3   
   14000a40f:	int3   
   14000a410:	sub    rsp,0x38
   14000a414:	mov    rax,rdx
   14000a417:	sub    rax,rcx
   14000a41a:	and    rax,0xfffffffffffffff0
   14000a41e:	cmp    rax,0x10
   14000a422:	jle    0x14000a435
   14000a424:	xor    r9d,r9d
   14000a427:	mov    QWORD PTR [rsp+0x20],0x0
   14000a430:	call   0x140004a20
   14000a435:	add    rsp,0x38
   14000a439:	ret    
   14000a43a:	int3   
   14000a43b:	int3   
   14000a43c:	int3   
   14000a43d:	int3   
   14000a43e:	int3   
   14000a43f:	int3   
   14000a440:	mov    QWORD PTR [rcx],rdx
   14000a443:	mov    rax,rcx
   14000a446:	ret    
   14000a447:	int3   
   14000a448:	int3   
   14000a449:	int3   
   14000a44a:	int3   
   14000a44b:	int3   
   14000a44c:	int3   
   14000a44d:	int3   
   14000a44e:	int3   
   14000a44f:	int3   
   14000a450:	mov    rax,rsp
   14000a453:	mov    QWORD PTR [rax+0x8],rcx
   14000a457:	push   rdi
   14000a458:	sub    rsp,0x50
   14000a45c:	mov    QWORD PTR [rax-0x30],0xfffffffffffffffe
   14000a464:	mov    QWORD PTR [rax+0x10],rbx
   14000a468:	mov    QWORD PTR [rax+0x18],rbp
   14000a46c:	mov    QWORD PTR [rax+0x20],rsi
   14000a470:	mov    rsi,r8
   14000a473:	mov    rbx,rdx
   14000a476:	mov    rdi,rcx
   14000a479:	xor    ebp,ebp
   14000a47b:	mov    DWORD PTR [rax-0x38],ebp
   14000a47e:	mov    QWORD PTR [rcx],rbp
   14000a481:	mov    QWORD PTR [rcx+0x8],rbp
   14000a485:	mov    QWORD PTR [rcx+0x10],rbp
   14000a489:	mov    DWORD PTR [rax-0x38],0x1
   14000a490:	cmp    rdx,r8
   14000a493:	je     0x14000a502
   14000a495:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000a4a0:	mov    rdx,QWORD PTR [rbx]
   14000a4a3:	mov    QWORD PTR [rsp+0x48],0xf
   14000a4ac:	mov    QWORD PTR [rsp+0x40],rbp
   14000a4b1:	mov    BYTE PTR [rsp+0x30],0x0
   14000a4b6:	cmp    BYTE PTR [rdx],0x0
   14000a4b9:	jne    0x14000a4c0
   14000a4bb:	mov    r8,rbp
   14000a4be:	jmp    0x14000a4ce
   14000a4c0:	or     r8,0xffffffffffffffff
   14000a4c4:	inc    r8
   14000a4c7:	cmp    BYTE PTR [rdx+r8*1],0x0
   14000a4cc:	jne    0x14000a4c4
   14000a4ce:	lea    rcx,[rsp+0x30]
   14000a4d3:	call   0x14001f070
   14000a4d8:	nop
   14000a4d9:	lea    rdx,[rsp+0x30]
   14000a4de:	mov    rcx,rdi
   14000a4e1:	call   0x1400285a0
   14000a4e6:	nop
   14000a4e7:	cmp    QWORD PTR [rsp+0x48],0x10
   14000a4ed:	jb     0x14000a4f9
   14000a4ef:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a4f4:	call   0x140030282
   14000a4f9:	add    rbx,0x8
   14000a4fd:	cmp    rbx,rsi
   14000a500:	jne    0x14000a4a0
   14000a502:	mov    rax,rdi
   14000a505:	mov    rbx,QWORD PTR [rsp+0x68]
   14000a50a:	mov    rbp,QWORD PTR [rsp+0x70]
   14000a50f:	mov    rsi,QWORD PTR [rsp+0x78]
   14000a514:	add    rsp,0x50
   14000a518:	pop    rdi
   14000a519:	ret    
   14000a51a:	int3   
   14000a51b:	int3   
   14000a51c:	int3   
   14000a51d:	int3   
   14000a51e:	int3   
   14000a51f:	int3   
   14000a520:	mov    rax,QWORD PTR [rdx]
   14000a523:	cmp    QWORD PTR [rcx],rax
   14000a526:	cmovl  rcx,rdx
   14000a52a:	mov    rax,rcx
   14000a52d:	ret    
   14000a52e:	int3   
   14000a52f:	int3   
   14000a530:	mov    eax,DWORD PTR [rcx]
   14000a532:	cmp    DWORD PTR [rdx],eax
   14000a534:	cmovb  rcx,rdx
   14000a538:	mov    rax,rcx
   14000a53b:	ret    
   14000a53c:	int3   
   14000a53d:	int3   
   14000a53e:	int3   
   14000a53f:	int3   
   14000a540:	mov    rax,QWORD PTR [rcx]
   14000a543:	cmp    QWORD PTR [rdx],rax
   14000a546:	cmovl  rcx,rdx
   14000a54a:	mov    rax,rcx
   14000a54d:	ret    
   14000a54e:	int3   
   14000a54f:	int3   
   14000a550:	mov    rax,rsp
   14000a553:	push   rbp
   14000a554:	push   rdi
   14000a555:	push   r12
   14000a557:	push   r14
   14000a559:	push   r15
   14000a55b:	mov    rbp,rsp
   14000a55e:	sub    rsp,0x80
   14000a565:	mov    QWORD PTR [rbp-0x60],0xfffffffffffffffe
   14000a56d:	mov    QWORD PTR [rax+0x18],rbx
   14000a571:	mov    QWORD PTR [rax+0x20],rsi
   14000a575:	cmp    QWORD PTR [rcx+0x10],0x0
   14000a57a:	ja     0x14000a58a
   14000a57c:	lea    rcx,[rip+0x323a5]        # 0x14003c928
   14000a583:	call   QWORD PTR [rip+0x2bc9f]        # 0x140036228
   14000a589:	int3   
   14000a58a:	mov    rax,QWORD PTR [rcx+0x18]
   14000a58e:	cmp    rax,0x10
   14000a592:	jb     0x14000a599
   14000a594:	mov    rdx,QWORD PTR [rcx]
   14000a597:	jmp    0x14000a59c
   14000a599:	mov    rdx,rcx
   14000a59c:	cmp    BYTE PTR [rdx],0x30
   14000a59f:	jl     0x14000a5be
   14000a5a1:	cmp    rax,0x10
   14000a5a5:	jb     0x14000a5ac
   14000a5a7:	mov    rax,QWORD PTR [rcx]
   14000a5aa:	jmp    0x14000a5af
   14000a5ac:	mov    rax,rcx
   14000a5af:	cmp    BYTE PTR [rax],0x39
   14000a5b2:	jg     0x14000a5be
   14000a5b4:	call   0x14000a270
   14000a5b9:	jmp    0x14000a714
   14000a5be:	mov    QWORD PTR [rbp-0x10],0xf
   14000a5c6:	xor    r12d,r12d
   14000a5c9:	mov    QWORD PTR [rbp-0x18],r12
   14000a5cd:	mov    BYTE PTR [rbp-0x28],r12b
   14000a5d1:	or     rsi,0xffffffffffffffff
   14000a5d5:	mov    r9,rsi
   14000a5d8:	xor    r8d,r8d
   14000a5db:	mov    rdx,rcx
   14000a5de:	lea    rcx,[rbp-0x28]
   14000a5e2:	call   0x14001ef20
   14000a5e7:	lea    rdx,[rbp-0x28]
   14000a5eb:	lea    rcx,[rbp-0x48]
   14000a5ef:	call   0x1400212f0
   14000a5f4:	nop
   14000a5f5:	lea    rcx,[rbp-0x58]
   14000a5f9:	call   QWORD PTR [rip+0x2bf09]        # 0x140036508
   14000a5ff:	nop
   14000a600:	mov    rdi,QWORD PTR [rbp-0x58]
   14000a604:	lea    rdx,[rbp-0x48]
   14000a608:	mov    rcx,rdi
   14000a60b:	call   0x14001d1b0
   14000a610:	mov    rbx,rax
   14000a613:	mov    rdi,QWORD PTR [rdi]
   14000a616:	cmp    rax,rdi
   14000a619:	je     0x14000a67d
   14000a61b:	lea    rdx,[rax+0x20]
   14000a61f:	mov    r14,QWORD PTR [rdx+0x10]
   14000a623:	cmp    QWORD PTR [rdx+0x18],0x10
   14000a628:	jb     0x14000a62d
   14000a62a:	mov    rdx,QWORD PTR [rdx]
   14000a62d:	lea    rcx,[rbp-0x48]
   14000a631:	cmp    QWORD PTR [rbp-0x30],0x10
   14000a636:	cmovae rcx,QWORD PTR [rbp-0x48]
   14000a63b:	mov    r8,r14
   14000a63e:	mov    r15,QWORD PTR [rbp-0x38]
   14000a642:	cmp    r15,r14
   14000a645:	cmovb  r8,r15
   14000a649:	test   r8,r8
   14000a64c:	jne    0x14000a653
   14000a64e:	mov    eax,r12d
   14000a651:	jmp    0x14000a658
   14000a653:	call   0x140030484
   14000a658:	cdqe   
   14000a65a:	test   rax,rax
   14000a65d:	jne    0x14000a66f
   14000a65f:	cmp    r15,r14
   14000a662:	jae    0x14000a668
   14000a664:	mov    eax,esi
   14000a666:	jmp    0x14000a66f
   14000a668:	setne  r12b
   14000a66c:	mov    eax,r12d
   14000a66f:	test   eax,eax
   14000a671:	js     0x14000a67d
   14000a673:	mov    QWORD PTR [rbp+0x30],rbx
   14000a677:	lea    rax,[rbp+0x30]
   14000a67b:	jmp    0x14000a685
   14000a67d:	mov    QWORD PTR [rbp+0x38],rdi
   14000a681:	lea    rax,[rbp+0x38]
   14000a685:	mov    rax,QWORD PTR [rax]
   14000a688:	mov    rcx,QWORD PTR [rbp-0x58]
   14000a68c:	cmp    rax,QWORD PTR [rcx]
   14000a68f:	je     0x14000a6d7
   14000a691:	movzx  edi,WORD PTR [rax+0x40]
   14000a695:	mov    rbx,QWORD PTR [rbp-0x50]
   14000a699:	test   rbx,rbx
   14000a69c:	je     0x14000a6c2
   14000a69e:	mov    eax,esi
   14000a6a0:	lock xadd DWORD PTR [rbx+0x8],eax
   14000a6a5:	dec    eax
   14000a6a7:	jne    0x14000a6c2
   14000a6a9:	mov    rax,QWORD PTR [rbx]
   14000a6ac:	mov    rcx,rbx
   14000a6af:	call   QWORD PTR [rax+0x8]
   14000a6b2:	lock dec DWORD PTR [rbx+0xc]
   14000a6b6:	jne    0x14000a6c2
   14000a6b8:	mov    rdx,QWORD PTR [rbx]
   14000a6bb:	mov    rcx,rbx
   14000a6be:	call   QWORD PTR [rdx+0x10]
   14000a6c1:	nop
   14000a6c2:	cmp    QWORD PTR [rbp-0x30],0x10
   14000a6c7:	jb     0x14000a6d2
   14000a6c9:	mov    rcx,QWORD PTR [rbp-0x48]
   14000a6cd:	call   0x140030282
   14000a6d2:	movzx  eax,di
   14000a6d5:	jmp    0x14000a714
   14000a6d7:	mov    rbx,QWORD PTR [rbp-0x50]
   14000a6db:	test   rbx,rbx
   14000a6de:	je     0x14000a6ff
   14000a6e0:	lock dec DWORD PTR [rbx+0x8]
   14000a6e4:	jne    0x14000a6ff
   14000a6e6:	mov    rax,QWORD PTR [rbx]
   14000a6e9:	mov    rcx,rbx
   14000a6ec:	call   QWORD PTR [rax+0x8]
   14000a6ef:	lock dec DWORD PTR [rbx+0xc]
   14000a6f3:	jne    0x14000a6ff
   14000a6f5:	mov    rax,QWORD PTR [rbx]
   14000a6f8:	mov    rcx,rbx
   14000a6fb:	call   QWORD PTR [rax+0x10]
   14000a6fe:	nop
   14000a6ff:	cmp    QWORD PTR [rbp-0x30],0x10
   14000a704:	jb     0x14000a70f
   14000a706:	mov    rcx,QWORD PTR [rbp-0x48]
   14000a70a:	call   0x140030282
   14000a70f:	mov    eax,0xd
   14000a714:	lea    r11,[rsp+0x80]
   14000a71c:	mov    rbx,QWORD PTR [r11+0x40]
   14000a720:	mov    rsi,QWORD PTR [r11+0x48]
   14000a724:	mov    rsp,r11
   14000a727:	pop    r15
   14000a729:	pop    r14
   14000a72b:	pop    r12
   14000a72d:	pop    rdi
   14000a72e:	pop    rbp
   14000a72f:	ret    
   14000a730:	mov    rax,rcx
   14000a733:	ret    
   14000a734:	int3   
   14000a735:	int3   
   14000a736:	int3   
   14000a737:	int3   
   14000a738:	int3   
   14000a739:	int3   
   14000a73a:	int3   
   14000a73b:	int3   
   14000a73c:	int3   
   14000a73d:	int3   
   14000a73e:	int3   
   14000a73f:	int3   
   14000a740:	mov    rax,rcx
   14000a743:	ret    
   14000a744:	int3   
   14000a745:	int3   
   14000a746:	int3   
   14000a747:	int3   
   14000a748:	int3   
   14000a749:	int3   
   14000a74a:	int3   
   14000a74b:	int3   
   14000a74c:	int3   
   14000a74d:	int3   
   14000a74e:	int3   
   14000a74f:	int3   
   14000a750:	mov    rax,rcx
   14000a753:	ret    
   14000a754:	int3   
   14000a755:	int3   
   14000a756:	int3   
   14000a757:	int3   
   14000a758:	int3   
   14000a759:	int3   
   14000a75a:	int3   
   14000a75b:	int3   
   14000a75c:	int3   
   14000a75d:	int3   
   14000a75e:	int3   
   14000a75f:	int3   
   14000a760:	mov    rax,rcx
   14000a763:	ret    
   14000a764:	int3   
   14000a765:	int3   
   14000a766:	int3   
   14000a767:	int3   
   14000a768:	int3   
   14000a769:	int3   
   14000a76a:	int3   
   14000a76b:	int3   
   14000a76c:	int3   
   14000a76d:	int3   
   14000a76e:	int3   
   14000a76f:	int3   
   14000a770:	mov    eax,0x80
   14000a775:	ret    
   14000a776:	int3   
   14000a777:	int3   
   14000a778:	int3   
   14000a779:	int3   
   14000a77a:	int3   
   14000a77b:	int3   
   14000a77c:	int3   
   14000a77d:	int3   
   14000a77e:	int3   
   14000a77f:	int3   
   14000a780:	mov    eax,0x80
   14000a785:	ret    
   14000a786:	int3   
   14000a787:	int3   
   14000a788:	int3   
   14000a789:	int3   
   14000a78a:	int3   
   14000a78b:	int3   
   14000a78c:	int3   
   14000a78d:	int3   
   14000a78e:	int3   
   14000a78f:	int3   
   14000a790:	mov    eax,0x80
   14000a795:	ret    
   14000a796:	int3   
   14000a797:	int3   
   14000a798:	int3   
   14000a799:	int3   
   14000a79a:	int3   
   14000a79b:	int3   
   14000a79c:	int3   
   14000a79d:	int3   
   14000a79e:	int3   
   14000a79f:	int3   
   14000a7a0:	mov    eax,0x80
   14000a7a5:	ret    
   14000a7a6:	int3   
   14000a7a7:	int3   
   14000a7a8:	int3   
   14000a7a9:	int3   
   14000a7aa:	int3   
   14000a7ab:	int3   
   14000a7ac:	int3   
   14000a7ad:	int3   
   14000a7ae:	int3   
   14000a7af:	int3   
   14000a7b0:	mov    eax,0x1000
   14000a7b5:	ret    
   14000a7b6:	int3   
   14000a7b7:	int3   
   14000a7b8:	int3   
   14000a7b9:	int3   
   14000a7ba:	int3   
   14000a7bb:	int3   
   14000a7bc:	int3   
   14000a7bd:	int3   
   14000a7be:	int3   
   14000a7bf:	int3   
   14000a7c0:	mov    eax,0x1000
   14000a7c5:	ret    
   14000a7c6:	int3   
   14000a7c7:	int3   
   14000a7c8:	int3   
   14000a7c9:	int3   
   14000a7ca:	int3   
   14000a7cb:	int3   
   14000a7cc:	int3   
   14000a7cd:	int3   
   14000a7ce:	int3   
   14000a7cf:	int3   
   14000a7d0:	mov    eax,0x1000
   14000a7d5:	ret    
   14000a7d6:	int3   
   14000a7d7:	int3   
   14000a7d8:	int3   
   14000a7d9:	int3   
   14000a7da:	int3   
   14000a7db:	int3   
   14000a7dc:	int3   
   14000a7dd:	int3   
   14000a7de:	int3   
   14000a7df:	int3   
   14000a7e0:	mov    eax,0x1000
   14000a7e5:	ret    
   14000a7e6:	int3   
   14000a7e7:	int3   
   14000a7e8:	int3   
   14000a7e9:	int3   
   14000a7ea:	int3   
   14000a7eb:	int3   
   14000a7ec:	int3   
   14000a7ed:	int3   
   14000a7ee:	int3   
   14000a7ef:	int3   
   14000a7f0:	mov    QWORD PTR [rsp+0x20],rbx
   14000a7f5:	push   rbp
   14000a7f6:	push   r12
   14000a7f8:	push   r14
   14000a7fa:	sub    rsp,0x20
   14000a7fe:	mov    r14,r9
   14000a801:	mov    rbp,rdx
   14000a804:	mov    rbx,rcx
   14000a807:	mov    r12,rdx
   14000a80a:	test   rcx,rcx
   14000a80d:	je     0x14000a8c0
   14000a813:	mov    QWORD PTR [rsp+0x40],rsi
   14000a818:	mov    rsi,QWORD PTR [r9+0x10]
   14000a81c:	mov    QWORD PTR [rsp+0x48],rdi
   14000a821:	mov    QWORD PTR [rsp+0x50],r15
   14000a826:	mov    r15,QWORD PTR [r9+0x18]
   14000a82a:	nop    WORD PTR [rax+rax*1+0x0]
   14000a830:	cmp    r15,0x10
   14000a834:	jb     0x14000a83b
   14000a836:	mov    rdx,QWORD PTR [r14]
   14000a839:	jmp    0x14000a83e
   14000a83b:	mov    rdx,r14
   14000a83e:	cmp    QWORD PTR [rbx+0x18],0x10
   14000a843:	mov    rdi,QWORD PTR [rbx+0x10]
   14000a847:	jb     0x14000a84e
   14000a849:	mov    rcx,QWORD PTR [rbx]
   14000a84c:	jmp    0x14000a851
   14000a84e:	mov    rcx,rbx
   14000a851:	cmp    rdi,rsi
   14000a854:	mov    r8,rsi
   14000a857:	cmovb  r8,rdi
   14000a85b:	test   r8,r8
   14000a85e:	jne    0x14000a864
   14000a860:	xor    eax,eax
   14000a862:	jmp    0x14000a869
   14000a864:	call   0x140030484
   14000a869:	cdqe   
   14000a86b:	test   rax,rax
   14000a86e:	jne    0x14000a87b
   14000a870:	cmp    rdi,rsi
   14000a873:	jb     0x14000a888
   14000a875:	cmp    rdi,rsi
   14000a878:	setne  al
   14000a87b:	test   eax,eax
   14000a87d:	js     0x14000a888
   14000a87f:	mov    rbp,rbx
   14000a882:	mov    rbx,QWORD PTR [rbx+0x50]
   14000a886:	jmp    0x14000a88c
   14000a888:	mov    rbx,QWORD PTR [rbx+0x58]
   14000a88c:	test   rbx,rbx
   14000a88f:	je     0x14000a89a
   14000a891:	add    rbx,0xffffffffffffffb8
   14000a895:	test   rbx,rbx
   14000a898:	jne    0x14000a830
   14000a89a:	mov    r15,QWORD PTR [rsp+0x50]
   14000a89f:	mov    rdi,QWORD PTR [rsp+0x48]
   14000a8a4:	mov    rsi,QWORD PTR [rsp+0x40]
   14000a8a9:	cmp    rbp,r12
   14000a8ac:	je     0x14000a8c0
   14000a8ae:	mov    rdx,rbp
   14000a8b1:	mov    rcx,r14
   14000a8b4:	call   0x140020910
   14000a8b9:	test   eax,eax
   14000a8bb:	mov    rax,rbp
   14000a8be:	jns    0x14000a8c3
   14000a8c0:	mov    rax,r12
   14000a8c3:	mov    rbx,QWORD PTR [rsp+0x58]
   14000a8c8:	add    rsp,0x20
   14000a8cc:	pop    r14
   14000a8ce:	pop    r12
   14000a8d0:	pop    rbp
   14000a8d1:	ret    
   14000a8d2:	int3   
   14000a8d3:	int3   
   14000a8d4:	int3   
   14000a8d5:	int3   
   14000a8d6:	int3   
   14000a8d7:	int3   
   14000a8d8:	int3   
   14000a8d9:	int3   
   14000a8da:	int3   
   14000a8db:	int3   
   14000a8dc:	int3   
   14000a8dd:	int3   
   14000a8de:	int3   
   14000a8df:	int3   
   14000a8e0:	mov    r11,rsp
   14000a8e3:	mov    QWORD PTR [r11+0x8],rcx
   14000a8e7:	push   rsi
   14000a8e8:	push   rdi
   14000a8e9:	push   r14
   14000a8eb:	sub    rsp,0xe0
   14000a8f2:	mov    QWORD PTR [rsp+0x50],0xfffffffffffffffe
   14000a8fb:	mov    QWORD PTR [r11+0x10],rbx
   14000a8ff:	mov    QWORD PTR [r11+0x18],rbp
   14000a903:	mov    rbp,r9
   14000a906:	mov    rbx,r8
   14000a909:	mov    r14d,edx
   14000a90c:	mov    rsi,rcx
   14000a90f:	mov    DWORD PTR [rsp+0x20],0x0
   14000a917:	lea    rax,[rsp+0x28]
   14000a91c:	mov    QWORD PTR [r11+0x20],rax
   14000a920:	mov    QWORD PTR [rsp+0x28],0x0
   14000a929:	mov    rdi,QWORD PTR [r11+0x30]
   14000a92d:	mov    rax,QWORD PTR [rdi]
   14000a930:	test   rax,rax
   14000a933:	je     0x14000a965
   14000a935:	mov    QWORD PTR [rsp+0x28],rax
   14000a93a:	test   al,0x1
   14000a93c:	je     0x14000a952
   14000a93e:	movups xmm0,XMMWORD PTR [rdi+0x8]
   14000a942:	movups XMMWORD PTR [rsp+0x30],xmm0
   14000a947:	movups xmm1,XMMWORD PTR [rdi+0x18]
   14000a94b:	movups XMMWORD PTR [rsp+0x40],xmm1
   14000a950:	jmp    0x14000a965
   14000a952:	and    rax,0xfffffffffffffffe
   14000a956:	lea    rcx,[rdi+0x8]
   14000a95a:	xor    r8d,r8d
   14000a95d:	lea    rdx,[rsp+0x30]
   14000a962:	call   QWORD PTR [rax]
   14000a964:	nop
   14000a965:	mov    r8,rbx
   14000a968:	mov    edx,r14d
   14000a96b:	lea    rcx,[rsp+0x58]
   14000a970:	call   0x140010970
   14000a975:	mov    rbx,rax
   14000a978:	mov    rdx,rbp
   14000a97b:	mov    rcx,rax
   14000a97e:	call   QWORD PTR [rip+0x2bd04]        # 0x140036688
   14000a984:	mov    QWORD PTR [rbx+0x80],rbp
   14000a98b:	mov    edx,DWORD PTR [rsp+0x120]
   14000a992:	mov    rcx,rbx
   14000a995:	call   QWORD PTR [rip+0x2bcdd]        # 0x140036678
   14000a99b:	nop
   14000a99c:	lea    rdx,[rsp+0x28]
   14000a9a1:	mov    rcx,rbx
   14000a9a4:	call   0x140023210
   14000a9a9:	mov    rcx,rax
   14000a9ac:	mov    rdx,rsi
   14000a9af:	call   0x14002b3c0
   14000a9b4:	mov    DWORD PTR [rsp+0x20],0x1
   14000a9bc:	lea    rcx,[rsp+0x58]
   14000a9c1:	call   QWORD PTR [rip+0x2bcd9]        # 0x1400366a0
   14000a9c7:	nop
   14000a9c8:	mov    rax,QWORD PTR [rdi]
   14000a9cb:	test   rax,rax
   14000a9ce:	je     0x14000a9f7
   14000a9d0:	test   al,0x1
   14000a9d2:	jne    0x14000a9f0
   14000a9d4:	lea    rcx,[rdi+0x8]
   14000a9d8:	and    rax,0xfffffffffffffffe
   14000a9dc:	mov    r9,QWORD PTR [rax]
   14000a9df:	test   r9,r9
   14000a9e2:	je     0x14000a9f0
   14000a9e4:	mov    r8d,0x2
   14000a9ea:	mov    rdx,rcx
   14000a9ed:	call   r9
   14000a9f0:	mov    QWORD PTR [rdi],0x0
   14000a9f7:	mov    rax,rsi
   14000a9fa:	lea    r11,[rsp+0xe0]
   14000aa02:	mov    rbx,QWORD PTR [r11+0x28]
   14000aa06:	mov    rbp,QWORD PTR [r11+0x30]
   14000aa0a:	mov    rsp,r11
   14000aa0d:	pop    r14
   14000aa0f:	pop    rdi
   14000aa10:	pop    rsi
   14000aa11:	ret    
   14000aa12:	int3   
   14000aa13:	int3   
   14000aa14:	int3   
   14000aa15:	int3   
   14000aa16:	int3   
   14000aa17:	int3   
   14000aa18:	int3   
   14000aa19:	int3   
   14000aa1a:	int3   
   14000aa1b:	int3   
   14000aa1c:	int3   
   14000aa1d:	int3   
   14000aa1e:	int3   
   14000aa1f:	int3   
   14000aa20:	rex push rbp
   14000aa22:	push   rsi
   14000aa23:	push   rdi
   14000aa24:	push   r12
   14000aa26:	push   r13
   14000aa28:	push   r14
   14000aa2a:	push   r15
   14000aa2c:	lea    rbp,[rsp-0x110]
   14000aa34:	sub    rsp,0x210
   14000aa3b:	mov    QWORD PTR [rbp+0x80],0xfffffffffffffffe
   14000aa46:	mov    QWORD PTR [rsp+0x250],rbx
   14000aa4e:	mov    rdi,rdx
   14000aa51:	mov    r13,rcx
   14000aa54:	xor    r14d,r14d
   14000aa57:	mov    ebx,r14d
   14000aa5a:	mov    DWORD PTR [rbp+0x160],ebx
   14000aa60:	mov    QWORD PTR [rsp+0x38],0xf
   14000aa69:	mov    QWORD PTR [rsp+0x30],r14
   14000aa6e:	mov    BYTE PTR [rsp+0x20],bl
   14000aa72:	test   r8d,r8d
   14000aa75:	jne    0x14000aa80
   14000aa77:	lea    rdx,[rip+0x31fca]        # 0x14003ca48
   14000aa7e:	jmp    0x14000aa94
   14000aa80:	cmp    r8d,0x1
   14000aa84:	lea    rdx,[rip+0x31fc1]        # 0x14003ca4c
   14000aa8b:	je     0x14000aa94
   14000aa8d:	lea    rdx,[rip+0x31fbc]        # 0x14003ca50
   14000aa94:	mov    r8d,0x3
   14000aa9a:	lea    rcx,[rsp+0x20]
   14000aa9f:	call   0x14001f070
   14000aaa4:	mov    esi,r14d
   14000aaa7:	movzx  r15d,r14w
   14000aaab:	movzx  r12d,r14w
   14000aaaf:	mov    DWORD PTR [rbp+0x158],0x202e2d2c
   14000aab9:	mov    WORD PTR [rbp+0x15c],0x2f
   14000aac2:	mov    QWORD PTR [rsp+0x58],0xf
   14000aacb:	xor    eax,eax
   14000aacd:	mov    QWORD PTR [rsp+0x50],rax
   14000aad2:	mov    BYTE PTR [rsp+0x40],al
   14000aad6:	mov    QWORD PTR [rsp+0x78],0xf
   14000aadf:	mov    QWORD PTR [rsp+0x70],rax
   14000aae4:	mov    BYTE PTR [rsp+0x60],al
   14000aae8:	lea    rax,[rbp+0x158]
   14000aaef:	or     r8,0xffffffffffffffff
   14000aaf3:	inc    r8
   14000aaf6:	cmp    BYTE PTR [rax+r8*1],0x0
   14000aafb:	jne    0x14000aaf3
   14000aafd:	lea    rdx,[rbp+0x158]
   14000ab04:	lea    rcx,[rsp+0x60]
   14000ab09:	call   0x14001f070
   14000ab0e:	nop
   14000ab0f:	mov    WORD PTR [rbp-0x80],0x0
   14000ab15:	mov    DWORD PTR [rbp-0x7c],0x0
   14000ab1c:	mov    BYTE PTR [rbp-0x78],0x0
   14000ab20:	mov    rcx,QWORD PTR [rdi+0x18]
   14000ab24:	cmp    rcx,0x10
   14000ab28:	jb     0x14000ab2f
   14000ab2a:	mov    rax,QWORD PTR [rdi]
   14000ab2d:	jmp    0x14000ab32
   14000ab2f:	mov    rax,rdi
   14000ab32:	mov    QWORD PTR [rbp-0x70],rax
   14000ab36:	cmp    rcx,0x10
   14000ab3a:	jb     0x14000ab41
   14000ab3c:	mov    rcx,QWORD PTR [rdi]
   14000ab3f:	jmp    0x14000ab44
   14000ab41:	mov    rcx,rdi
   14000ab44:	add    rcx,QWORD PTR [rdi+0x10]
   14000ab48:	mov    QWORD PTR [rbp-0x68],rcx
   14000ab4c:	lea    rax,[rbp-0x60]
   14000ab50:	mov    QWORD PTR [rbp+0x168],rax
   14000ab57:	mov    QWORD PTR [rbp-0x48],0xf
   14000ab5f:	mov    QWORD PTR [rbp-0x50],0x0
   14000ab67:	mov    BYTE PTR [rbp-0x60],0x0
   14000ab6b:	or     r9,0xffffffffffffffff
   14000ab6f:	xor    r8d,r8d
   14000ab72:	lea    rdx,[rsp+0x40]
   14000ab77:	lea    rcx,[rbp-0x60]
   14000ab7b:	call   0x14001ef20
   14000ab80:	nop
   14000ab81:	mov    QWORD PTR [rbp-0x28],0xf
   14000ab89:	mov    QWORD PTR [rbp-0x30],0x0
   14000ab91:	mov    BYTE PTR [rbp-0x40],0x0
   14000ab95:	or     r9,0xffffffffffffffff
   14000ab99:	xor    r8d,r8d
   14000ab9c:	lea    rdx,[rsp+0x60]
   14000aba1:	lea    rcx,[rbp-0x40]
   14000aba5:	call   0x14001ef20
   14000abaa:	movzx  eax,BYTE PTR [rbp-0x80]
   14000abae:	mov    BYTE PTR [rbp-0x20],al
   14000abb1:	movzx  eax,BYTE PTR [rbp-0x7f]
   14000abb5:	mov    BYTE PTR [rbp-0x1f],al
   14000abb8:	mov    eax,DWORD PTR [rbp-0x7c]
   14000abbb:	mov    DWORD PTR [rbp-0x1c],eax
   14000abbe:	movzx  eax,BYTE PTR [rbp-0x78]
   14000abc2:	mov    BYTE PTR [rbp-0x18],al
   14000abc5:	lea    rdx,[rbp-0x10]
   14000abc9:	lea    rcx,[rbp-0x70]
   14000abcd:	call   0x14001f740
   14000abd2:	nop
   14000abd3:	nop    DWORD PTR [rax+0x0]
   14000abd7:	nop    WORD PTR [rax+rax*1+0x0]
   14000abe0:	lea    rdx,[rbp+0x88]
   14000abe7:	lea    rcx,[rbp-0x70]
   14000abeb:	call   0x140022da0
   14000abf0:	mov    rcx,rax
   14000abf3:	or     ebx,0x1
   14000abf6:	movzx  r8d,BYTE PTR [rax+0x60]
   14000abfb:	movzx  edx,BYTE PTR [rbp+0x50]
   14000abff:	test   r8b,r8b
   14000ac02:	je     0x14000ac1e
   14000ac04:	test   dl,dl
   14000ac06:	je     0x14000ac1e
   14000ac08:	mov    rax,QWORD PTR [rbp+0x40]
   14000ac0c:	cmp    QWORD PTR [rcx+0x50],rax
   14000ac10:	jne    0x14000ac23
   14000ac12:	mov    rax,QWORD PTR [rbp+0x48]
   14000ac16:	cmp    QWORD PTR [rcx+0x58],rax
   14000ac1a:	je     0x14000ac31
   14000ac1c:	jmp    0x14000ac23
   14000ac1e:	cmp    r8b,dl
   14000ac21:	je     0x14000ac31
   14000ac23:	mov    eax,esi
   14000ac25:	cmp    rax,QWORD PTR [rsp+0x30]
   14000ac2a:	jae    0x14000ac31
   14000ac2c:	mov    dil,0x1
   14000ac2f:	jmp    0x14000ac34
   14000ac31:	xor    dil,dil
   14000ac34:	test   bl,0x1
   14000ac37:	je     0x14000acb8
   14000ac39:	and    ebx,0xfffffffe
   14000ac3c:	cmp    QWORD PTR [rbp+0x108],0x10
   14000ac44:	jb     0x14000ac52
   14000ac46:	mov    rcx,QWORD PTR [rbp+0xf0]
   14000ac4d:	call   0x140030282
   14000ac52:	mov    QWORD PTR [rbp+0x108],0xf
   14000ac5d:	mov    QWORD PTR [rbp+0x100],0x0
   14000ac68:	mov    BYTE PTR [rbp+0xf0],0x0
   14000ac6f:	cmp    QWORD PTR [rbp+0xc0],0x10
   14000ac77:	jb     0x14000ac85
   14000ac79:	mov    rcx,QWORD PTR [rbp+0xa8]
   14000ac80:	call   0x140030282
   14000ac85:	mov    QWORD PTR [rbp+0xc0],0xf
   14000ac90:	mov    QWORD PTR [rbp+0xb8],0x0
   14000ac9b:	mov    BYTE PTR [rbp+0xa8],0x0
   14000aca2:	cmp    QWORD PTR [rbp+0xa0],0x10
   14000acaa:	jb     0x14000acb8
   14000acac:	mov    rcx,QWORD PTR [rbp+0x88]
   14000acb3:	call   0x140030282
   14000acb8:	test   dil,dil
   14000acbb:	je     0x14000ad46
   14000acc1:	mov    ecx,esi
   14000acc3:	cmp    QWORD PTR [rsp+0x30],rcx
   14000acc8:	jbe    0x14000ad38
   14000acca:	lea    rax,[rsp+0x20]
   14000accf:	cmp    QWORD PTR [rsp+0x38],0x10
   14000acd5:	cmovae rax,QWORD PTR [rsp+0x20]
   14000acdb:	movzx  ecx,BYTE PTR [rax+rcx*1]
   14000acdf:	cmp    cl,0x64
   14000ace2:	je     0x14000ad0c
   14000ace4:	cmp    cl,0x6d
   14000ace7:	je     0x14000acfd
   14000ace9:	cmp    cl,0x79
   14000acec:	jne    0x14000ad19
   14000acee:	lea    rcx,[rbp+0x58]
   14000acf2:	call   0x14000a270
   14000acf7:	movzx  r15d,ax
   14000acfb:	jmp    0x14000ad19
   14000acfd:	lea    rcx,[rbp+0x58]
   14000ad01:	call   0x14000a550
   14000ad06:	movzx  r12d,ax
   14000ad0a:	jmp    0x14000ad19
   14000ad0c:	lea    rcx,[rbp+0x58]
   14000ad10:	call   0x14000a270
   14000ad15:	movzx  r14d,ax
   14000ad19:	lea    r9,[rbp+0x58]
   14000ad1d:	mov    r8,QWORD PTR [rbp+0x48]
   14000ad21:	lea    rdx,[rbp+0x40]
   14000ad25:	lea    rcx,[rbp-0x10]
   14000ad29:	call   0x140003720
   14000ad2e:	mov    BYTE PTR [rbp+0x50],al
   14000ad31:	inc    esi
   14000ad33:	jmp    0x14000abe0
   14000ad38:	lea    rcx,[rip+0x31be9]        # 0x14003c928
   14000ad3f:	call   QWORD PTR [rip+0x2b4e3]        # 0x140036228
   14000ad45:	nop
   14000ad46:	cmp    QWORD PTR [rbp+0x70],0x10
   14000ad4b:	jb     0x14000ad56
   14000ad4d:	mov    rcx,QWORD PTR [rbp+0x58]
   14000ad51:	call   0x140030282
   14000ad56:	mov    QWORD PTR [rbp+0x70],0xf
   14000ad5e:	xor    ebx,ebx
   14000ad60:	mov    QWORD PTR [rbp+0x68],rbx
   14000ad64:	mov    BYTE PTR [rbp+0x58],bl
   14000ad67:	cmp    QWORD PTR [rbp+0x28],0x10
   14000ad6c:	jb     0x14000ad77
   14000ad6e:	mov    rcx,QWORD PTR [rbp+0x10]
   14000ad72:	call   0x140030282
   14000ad77:	mov    QWORD PTR [rbp+0x28],0xf
   14000ad7f:	mov    QWORD PTR [rbp+0x20],rbx
   14000ad83:	mov    BYTE PTR [rbp+0x10],bl
   14000ad86:	cmp    QWORD PTR [rbp+0x8],0x10
   14000ad8b:	jb     0x14000ad96
   14000ad8d:	mov    rcx,QWORD PTR [rbp-0x10]
   14000ad91:	call   0x140030282
   14000ad96:	mov    QWORD PTR [rbp+0x8],0xf
   14000ad9e:	mov    QWORD PTR [rbp+0x0],rbx
   14000ada2:	mov    BYTE PTR [rbp-0x10],bl
   14000ada5:	movzx  eax,r14w
   14000ada9:	inc    eax
   14000adab:	cmp    eax,0x2
   14000adae:	jge    0x14000adc2
   14000adb0:	mov    ecx,0x1
   14000adb5:	xor    r8d,r8d
   14000adb8:	movzx  edx,r14w
   14000adbc:	call   0x140026650
   14000adc1:	int3   
   14000adc2:	cmp    r14w,0x1f
   14000adc7:	jbe    0x14000addb
   14000adc9:	mov    ecx,0x1
   14000adce:	mov    r8d,ecx
   14000add1:	movzx  edx,r14w
   14000add5:	call   0x140026650
   14000adda:	int3   
   14000addb:	movzx  eax,r15w
   14000addf:	inc    eax
   14000ade1:	cmp    eax,0x579
   14000ade6:	jge    0x14000adfa
   14000ade8:	mov    ecx,0x578
   14000aded:	xor    r8d,r8d
   14000adf0:	movzx  edx,r15w
   14000adf4:	call   0x140026710
   14000adf9:	int3   
   14000adfa:	mov    eax,0x2710
   14000adff:	cmp    r15w,ax
   14000ae03:	jbe    0x14000ae1a
   14000ae05:	mov    ecx,0x578
   14000ae0a:	mov    r8d,0x1
   14000ae10:	movzx  edx,r15w
   14000ae14:	call   0x140026710
   14000ae19:	int3   
   14000ae1a:	movzx  edx,r12w
   14000ae1e:	lea    rcx,[rbp+0x160]
   14000ae25:	call   QWORD PTR [rip+0x2b6e5]        # 0x140036510
   14000ae2b:	movzx  r9d,r14w
   14000ae2f:	movzx  r8d,WORD PTR [rax]
   14000ae33:	movzx  edx,r15w
   14000ae37:	mov    rcx,r13
   14000ae3a:	call   0x1400160f0
   14000ae3f:	nop
   14000ae40:	cmp    QWORD PTR [rbp-0x28],0x10
   14000ae45:	jb     0x14000ae50
   14000ae47:	mov    rcx,QWORD PTR [rbp-0x40]
   14000ae4b:	call   0x140030282
   14000ae50:	mov    QWORD PTR [rbp-0x28],0xf
   14000ae58:	mov    QWORD PTR [rbp-0x30],rbx
   14000ae5c:	mov    BYTE PTR [rbp-0x40],0x0
   14000ae60:	cmp    QWORD PTR [rbp-0x48],0x10
   14000ae65:	jb     0x14000ae70
   14000ae67:	mov    rcx,QWORD PTR [rbp-0x60]
   14000ae6b:	call   0x140030282
   14000ae70:	mov    QWORD PTR [rbp-0x48],0xf
   14000ae78:	mov    QWORD PTR [rbp-0x50],rbx
   14000ae7c:	mov    BYTE PTR [rbp-0x60],0x0
   14000ae80:	cmp    QWORD PTR [rsp+0x78],0x10
   14000ae86:	jb     0x14000ae92
   14000ae88:	mov    rcx,QWORD PTR [rsp+0x60]
   14000ae8d:	call   0x140030282
   14000ae92:	mov    QWORD PTR [rsp+0x78],0xf
   14000ae9b:	mov    QWORD PTR [rsp+0x70],rbx
   14000aea0:	mov    BYTE PTR [rsp+0x60],0x0
   14000aea5:	cmp    QWORD PTR [rsp+0x58],0x10
   14000aeab:	jb     0x14000aeb7
   14000aead:	mov    rcx,QWORD PTR [rsp+0x40]
   14000aeb2:	call   0x140030282
   14000aeb7:	mov    QWORD PTR [rsp+0x58],0xf
   14000aec0:	mov    QWORD PTR [rsp+0x50],rbx
   14000aec5:	mov    BYTE PTR [rsp+0x40],0x0
   14000aeca:	cmp    QWORD PTR [rsp+0x38],0x10
   14000aed0:	jb     0x14000aedc
   14000aed2:	mov    rcx,QWORD PTR [rsp+0x20]
   14000aed7:	call   0x140030282
   14000aedc:	mov    rax,r13
   14000aedf:	mov    rbx,QWORD PTR [rsp+0x250]
   14000aee7:	add    rsp,0x210
   14000aeee:	pop    r15
   14000aef0:	pop    r14
   14000aef2:	pop    r13
   14000aef4:	pop    r12
   14000aef6:	pop    rdi
   14000aef7:	pop    rsi
   14000aef8:	pop    rbp
   14000aef9:	ret    
   14000aefa:	int3   
   14000aefb:	int3   
   14000aefc:	int3   
   14000aefd:	int3   
   14000aefe:	int3   
   14000aeff:	int3   
   14000af00:	ret    0x0
   14000af03:	int3   
   14000af04:	int3   
   14000af05:	int3   
   14000af06:	int3   
   14000af07:	int3   
   14000af08:	int3   
   14000af09:	int3   
   14000af0a:	int3   
   14000af0b:	int3   
   14000af0c:	int3   
   14000af0d:	int3   
   14000af0e:	int3   
   14000af0f:	int3   
   14000af10:	mov    rax,rsp
   14000af13:	push   rdi
   14000af14:	sub    rsp,0x90
   14000af1b:	mov    QWORD PTR [rax-0x70],0xfffffffffffffffe
   14000af23:	mov    QWORD PTR [rax+0x8],rbx
   14000af27:	mov    QWORD PTR [rax+0x10],rsi
   14000af2b:	mov    rdi,rdx
   14000af2e:	mov    rsi,rcx
   14000af31:	mov    DWORD PTR [rsp+0x20],0x0
   14000af39:	lea    rdx,[rax-0x28]
   14000af3d:	mov    rcx,r8
   14000af40:	call   0x140022860
   14000af45:	mov    rbx,rax
   14000af48:	lea    r8,[rip+0x34999]        # 0x14003f8e8
   14000af4f:	mov    rdx,rdi
   14000af52:	lea    rcx,[rsp+0x50]
   14000af57:	call   0x140003520
   14000af5c:	nop
   14000af5d:	mov    r8,rbx
   14000af60:	mov    rdx,rax
   14000af63:	lea    rcx,[rsp+0x30]
   14000af68:	call   0x140003410
   14000af6d:	nop
   14000af6e:	lea    r8,[rip+0x31af7]        # 0x14003ca6c
   14000af75:	mov    rdx,rax
   14000af78:	mov    rcx,rsi
   14000af7b:	call   0x1400034d0
   14000af80:	nop
   14000af81:	cmp    QWORD PTR [rsp+0x48],0x10
   14000af87:	jb     0x14000af93
   14000af89:	mov    rcx,QWORD PTR [rsp+0x30]
   14000af8e:	call   0x140030282
   14000af93:	mov    QWORD PTR [rsp+0x48],0xf
   14000af9c:	mov    QWORD PTR [rsp+0x40],0x0
   14000afa5:	mov    BYTE PTR [rsp+0x30],0x0
   14000afaa:	cmp    QWORD PTR [rsp+0x68],0x10
   14000afb0:	jb     0x14000afbc
   14000afb2:	mov    rcx,QWORD PTR [rsp+0x50]
   14000afb7:	call   0x140030282
   14000afbc:	mov    QWORD PTR [rsp+0x68],0xf
   14000afc5:	mov    QWORD PTR [rsp+0x60],0x0
   14000afce:	mov    BYTE PTR [rsp+0x50],0x0
   14000afd3:	cmp    QWORD PTR [rsp+0x88],0x10
   14000afdc:	jb     0x14000afe8
   14000afde:	mov    rcx,QWORD PTR [rsp+0x70]
   14000afe3:	call   0x140030282
   14000afe8:	mov    rax,rsi
   14000afeb:	lea    r11,[rsp+0x90]
   14000aff3:	mov    rbx,QWORD PTR [r11+0x10]
   14000aff7:	mov    rsi,QWORD PTR [r11+0x18]
   14000affb:	mov    rsp,r11
   14000affe:	pop    rdi
   14000afff:	ret    
   14000b000:	ret    0x0
   14000b003:	int3   
   14000b004:	int3   
   14000b005:	int3   
   14000b006:	int3   
   14000b007:	int3   
   14000b008:	int3   
   14000b009:	int3   
   14000b00a:	int3   
   14000b00b:	int3   
   14000b00c:	int3   
   14000b00d:	int3   
   14000b00e:	int3   
   14000b00f:	int3   
   14000b010:	sub    rsp,0x28
   14000b014:	mov    rcx,QWORD PTR [rcx+0x8]
   14000b018:	mov    QWORD PTR [rsp+0x30],rdx
   14000b01d:	lea    rdx,[rsp+0x30]
   14000b022:	call   0x14000b380
   14000b027:	add    rsp,0x28
   14000b02b:	ret    
   14000b02c:	int3   
   14000b02d:	int3   
   14000b02e:	int3   
   14000b02f:	int3   
   14000b030:	jmp    0x14000b080
   14000b035:	int3   
   14000b036:	int3   
   14000b037:	int3   
   14000b038:	int3   
   14000b039:	int3   
   14000b03a:	int3   
   14000b03b:	int3   
   14000b03c:	int3   
   14000b03d:	int3   
   14000b03e:	int3   
   14000b03f:	int3   
   14000b040:	mov    rcx,QWORD PTR [rcx+0x8]
   14000b044:	jmp    0x14000b080
   14000b049:	int3   
   14000b04a:	int3   
   14000b04b:	int3   
   14000b04c:	int3   
   14000b04d:	int3   
   14000b04e:	int3   
   14000b04f:	int3   
   14000b050:	jmp    0x14000b200
   14000b055:	int3   
   14000b056:	int3   
   14000b057:	int3   
   14000b058:	int3   
   14000b059:	int3   
   14000b05a:	int3   
   14000b05b:	int3   
   14000b05c:	int3   
   14000b05d:	int3   
   14000b05e:	int3   
   14000b05f:	int3   
   14000b060:	mov    rcx,QWORD PTR [rcx+0x8]
   14000b064:	jmp    0x14000b200
   14000b069:	int3   
   14000b06a:	int3   
   14000b06b:	int3   
   14000b06c:	int3   
   14000b06d:	int3   
   14000b06e:	int3   
   14000b06f:	int3   
   14000b070:	jmp    0x14000b380
   14000b075:	int3   
   14000b076:	int3   
   14000b077:	int3   
   14000b078:	int3   
   14000b079:	int3   
   14000b07a:	int3   
   14000b07b:	int3   
   14000b07c:	int3   
   14000b07d:	int3   
   14000b07e:	int3   
   14000b07f:	int3   
   14000b080:	mov    r11,rsp
   14000b083:	push   rsi
   14000b084:	push   rdi
   14000b085:	push   r14
   14000b087:	sub    rsp,0x50
   14000b08b:	mov    QWORD PTR [r11-0x40],0xfffffffffffffffe
   14000b093:	mov    QWORD PTR [r11+0x10],rbx
   14000b097:	mov    QWORD PTR [r11+0x18],rbp
   14000b09b:	mov    rbp,r9
   14000b09e:	mov    rsi,r8
   14000b0a1:	mov    r14,rdx
   14000b0a4:	mov    rdi,rcx
   14000b0a7:	mov    r8,QWORD PTR [rcx]
   14000b0aa:	test   BYTE PTR [r8+0x30],0x1
   14000b0af:	je     0x14000b0e1
   14000b0b1:	lea    rax,[rip+0x33738]        # 0x14003e7f0
   14000b0b8:	mov    QWORD PTR [r11+0x8],rax
   14000b0bc:	lea    rdx,[r11+0x8]
   14000b0c0:	lea    rcx,[r11-0x38]
   14000b0c4:	call   QWORD PTR [rip+0x2b386]        # 0x140036450
   14000b0ca:	lea    rax,[rip+0x2f53f]        # 0x14003a610
   14000b0d1:	mov    QWORD PTR [rsp+0x30],rax
   14000b0d6:	lea    rcx,[rsp+0x30]
   14000b0db:	call   0x14000dff0
   14000b0e0:	nop
   14000b0e1:	cmp    QWORD PTR [r8+0x8],0x0
   14000b0e6:	je     0x14000b0f5
   14000b0e8:	mov    rax,QWORD PTR [r8]
   14000b0eb:	mov    rax,QWORD PTR [rax+0x8]
   14000b0ef:	mov    rbx,QWORD PTR [rax+0x10]
   14000b0f3:	jmp    0x14000b0f7
   14000b0f5:	xor    ebx,ebx
   14000b0f7:	mov    eax,0x80
   14000b0fc:	cmp    rsi,0xffffffffffffffff
   14000b100:	cmove  rsi,rax
   14000b104:	cmp    r9,0xffffffffffffffff
   14000b108:	jne    0x14000b10e
   14000b10a:	mov    rbp,QWORD PTR [r8+0x28]
   14000b10e:	mov    ecx,0xb0
   14000b113:	call   0x14003027c
   14000b118:	mov    QWORD PTR [rsp+0x70],rax
   14000b11d:	test   rax,rax
   14000b120:	je     0x14000b134
   14000b122:	mov    r9,rbp
   14000b125:	mov    r8,rsi
   14000b128:	mov    rdx,r14
   14000b12b:	mov    rcx,rax
   14000b12e:	call   0x140014ba0
   14000b133:	nop
   14000b134:	mov    QWORD PTR [rsp+0x20],rax
   14000b139:	mov    QWORD PTR [rsp+0x70],rax
   14000b13e:	mov    rsi,QWORD PTR [rdi]
   14000b141:	mov    rbp,QWORD PTR [rsi]
   14000b144:	lea    r9,[rsp+0x70]
   14000b149:	mov    r8,QWORD PTR [rbp+0x8]
   14000b14d:	mov    rdx,rbp
   14000b150:	mov    rcx,rsi
   14000b153:	call   0x140003e60
   14000b158:	mov    rdx,rax
   14000b15b:	mov    rax,QWORD PTR [rsi+0x8]
   14000b15f:	movabs rcx,0xaaaaaaaaaaaaaa9
   14000b169:	sub    rcx,rax
   14000b16c:	cmp    rcx,0x1
   14000b170:	jae    0x14000b180
   14000b172:	lea    rcx,[rip+0x335df]        # 0x14003e758
   14000b179:	call   QWORD PTR [rip+0x2b0a1]        # 0x140036220
   14000b17f:	int3   
   14000b180:	inc    rax
   14000b183:	mov    QWORD PTR [rsi+0x8],rax
   14000b187:	mov    QWORD PTR [rbp+0x8],rdx
   14000b18b:	mov    rax,QWORD PTR [rdx+0x8]
   14000b18f:	mov    QWORD PTR [rax],rdx
   14000b192:	mov    QWORD PTR [rsp+0x20],0x0
   14000b19b:	test   rbx,rbx
   14000b19e:	je     0x14000b1b7
   14000b1a0:	mov    rax,QWORD PTR [rdi]
   14000b1a3:	mov    rdx,QWORD PTR [rax]
   14000b1a6:	mov    rdx,QWORD PTR [rdx+0x8]
   14000b1aa:	mov    rax,QWORD PTR [rbx]
   14000b1ad:	mov    rdx,QWORD PTR [rdx+0x10]
   14000b1b1:	mov    rcx,rbx
   14000b1b4:	call   QWORD PTR [rax+0x78]
   14000b1b7:	mov    rcx,QWORD PTR [rdi]
   14000b1ba:	cmp    QWORD PTR [rcx+0x10],0x0
   14000b1bf:	je     0x14000b1cc
   14000b1c1:	mov    rcx,QWORD PTR [rcx+0x10]
   14000b1c5:	mov    rax,QWORD PTR [rcx]
   14000b1c8:	call   QWORD PTR [rax+0x8]
   14000b1cb:	nop
   14000b1cc:	mov    rbx,QWORD PTR [rsp+0x78]
   14000b1d1:	mov    rbp,QWORD PTR [rsp+0x80]
   14000b1d9:	add    rsp,0x50
   14000b1dd:	pop    r14
   14000b1df:	pop    rdi
   14000b1e0:	pop    rsi
   14000b1e1:	ret    
   14000b1e2:	int3   
   14000b1e3:	int3   
   14000b1e4:	int3   
   14000b1e5:	int3   
   14000b1e6:	int3   
   14000b1e7:	int3   
   14000b1e8:	int3   
   14000b1e9:	int3   
   14000b1ea:	int3   
   14000b1eb:	int3   
   14000b1ec:	int3   
   14000b1ed:	int3   
   14000b1ee:	int3   
   14000b1ef:	int3   
   14000b1f0:	mov    rcx,QWORD PTR [rcx+0x8]
   14000b1f4:	jmp    0x14000b080
   14000b1f9:	int3   
   14000b1fa:	int3   
   14000b1fb:	int3   
   14000b1fc:	int3   
   14000b1fd:	int3   
   14000b1fe:	int3   
   14000b1ff:	int3   
   14000b200:	mov    r11,rsp
   14000b203:	push   rsi
   14000b204:	push   rdi
   14000b205:	push   r14
   14000b207:	sub    rsp,0x50
   14000b20b:	mov    QWORD PTR [r11-0x40],0xfffffffffffffffe
   14000b213:	mov    QWORD PTR [r11+0x10],rbx
   14000b217:	mov    QWORD PTR [r11+0x18],rbp
   14000b21b:	mov    rbp,r9
   14000b21e:	mov    rsi,r8
   14000b221:	mov    r14,rdx
   14000b224:	mov    rdi,rcx
   14000b227:	mov    r8,QWORD PTR [rcx]
   14000b22a:	test   BYTE PTR [r8+0x30],0x1
   14000b22f:	je     0x14000b261
   14000b231:	lea    rax,[rip+0x335b8]        # 0x14003e7f0
   14000b238:	mov    QWORD PTR [r11+0x8],rax
   14000b23c:	lea    rdx,[r11+0x8]
   14000b240:	lea    rcx,[r11-0x38]
   14000b244:	call   QWORD PTR [rip+0x2b206]        # 0x140036450
   14000b24a:	lea    rax,[rip+0x2f3bf]        # 0x14003a610
   14000b251:	mov    QWORD PTR [rsp+0x30],rax
   14000b256:	lea    rcx,[rsp+0x30]
   14000b25b:	call   0x14000dff0
   14000b260:	nop
   14000b261:	cmp    QWORD PTR [r8+0x8],0x0
   14000b266:	je     0x14000b275
   14000b268:	mov    rax,QWORD PTR [r8]
   14000b26b:	mov    rax,QWORD PTR [rax+0x8]
   14000b26f:	mov    rbx,QWORD PTR [rax+0x10]
   14000b273:	jmp    0x14000b277
   14000b275:	xor    ebx,ebx
   14000b277:	mov    eax,0x80
   14000b27c:	cmp    rsi,0xffffffffffffffff
   14000b280:	cmove  rsi,rax
   14000b284:	cmp    r9,0xffffffffffffffff
   14000b288:	jne    0x14000b28e
   14000b28a:	mov    rbp,QWORD PTR [r8+0x28]
   14000b28e:	mov    ecx,0xb0
   14000b293:	call   0x14003027c
   14000b298:	mov    QWORD PTR [rsp+0x70],rax
   14000b29d:	test   rax,rax
   14000b2a0:	je     0x14000b2b4
   14000b2a2:	mov    r9,rbp
   14000b2a5:	mov    r8,rsi
   14000b2a8:	mov    rdx,r14
   14000b2ab:	mov    rcx,rax
   14000b2ae:	call   0x140014cd0
   14000b2b3:	nop
   14000b2b4:	mov    QWORD PTR [rsp+0x20],rax
   14000b2b9:	mov    QWORD PTR [rsp+0x70],rax
   14000b2be:	mov    rsi,QWORD PTR [rdi]
   14000b2c1:	mov    rbp,QWORD PTR [rsi]
   14000b2c4:	lea    r9,[rsp+0x70]
   14000b2c9:	mov    r8,QWORD PTR [rbp+0x8]
   14000b2cd:	mov    rdx,rbp
   14000b2d0:	mov    rcx,rsi
   14000b2d3:	call   0x140003e60
   14000b2d8:	mov    rdx,rax
   14000b2db:	mov    rax,QWORD PTR [rsi+0x8]
   14000b2df:	movabs rcx,0xaaaaaaaaaaaaaa9
   14000b2e9:	sub    rcx,rax
   14000b2ec:	cmp    rcx,0x1
   14000b2f0:	jae    0x14000b300
   14000b2f2:	lea    rcx,[rip+0x3345f]        # 0x14003e758
   14000b2f9:	call   QWORD PTR [rip+0x2af21]        # 0x140036220
   14000b2ff:	int3   
   14000b300:	inc    rax
   14000b303:	mov    QWORD PTR [rsi+0x8],rax
   14000b307:	mov    QWORD PTR [rbp+0x8],rdx
   14000b30b:	mov    rax,QWORD PTR [rdx+0x8]
   14000b30f:	mov    QWORD PTR [rax],rdx
   14000b312:	mov    QWORD PTR [rsp+0x20],0x0
   14000b31b:	test   rbx,rbx
   14000b31e:	je     0x14000b337
   14000b320:	mov    rax,QWORD PTR [rdi]
   14000b323:	mov    rdx,QWORD PTR [rax]
   14000b326:	mov    rdx,QWORD PTR [rdx+0x8]
   14000b32a:	mov    rax,QWORD PTR [rbx]
   14000b32d:	mov    rdx,QWORD PTR [rdx+0x10]
   14000b331:	mov    rcx,rbx
   14000b334:	call   QWORD PTR [rax+0x78]
   14000b337:	mov    rcx,QWORD PTR [rdi]
   14000b33a:	cmp    QWORD PTR [rcx+0x10],0x0
   14000b33f:	je     0x14000b34c
   14000b341:	mov    rcx,QWORD PTR [rcx+0x10]
   14000b345:	mov    rax,QWORD PTR [rcx]
   14000b348:	call   QWORD PTR [rax+0x8]
   14000b34b:	nop
   14000b34c:	mov    rbx,QWORD PTR [rsp+0x78]
   14000b351:	mov    rbp,QWORD PTR [rsp+0x80]
   14000b359:	add    rsp,0x50
   14000b35d:	pop    r14
   14000b35f:	pop    rdi
   14000b360:	pop    rsi
   14000b361:	ret    
   14000b362:	int3   
   14000b363:	int3   
   14000b364:	int3   
   14000b365:	int3   
   14000b366:	int3   
   14000b367:	int3   
   14000b368:	int3   
   14000b369:	int3   
   14000b36a:	int3   
   14000b36b:	int3   
   14000b36c:	int3   
   14000b36d:	int3   
   14000b36e:	int3   
   14000b36f:	int3   
   14000b370:	mov    rcx,QWORD PTR [rcx+0x8]
   14000b374:	jmp    0x14000b200
   14000b379:	int3   
   14000b37a:	int3   
   14000b37b:	int3   
   14000b37c:	int3   
   14000b37d:	int3   
   14000b37e:	int3   
   14000b37f:	int3   
   14000b380:	mov    r11,rsp
   14000b383:	push   rsi
   14000b384:	push   rdi
   14000b385:	push   r14
   14000b387:	sub    rsp,0x50
   14000b38b:	mov    QWORD PTR [r11-0x40],0xfffffffffffffffe
   14000b393:	mov    QWORD PTR [r11+0x10],rbx
   14000b397:	mov    QWORD PTR [r11+0x18],rbp
   14000b39b:	mov    rbp,r9
   14000b39e:	mov    rsi,r8
   14000b3a1:	mov    r14,rdx
   14000b3a4:	mov    rdi,rcx
   14000b3a7:	mov    r8,QWORD PTR [rcx]
   14000b3aa:	test   BYTE PTR [r8+0x30],0x1
   14000b3af:	je     0x14000b3e1
   14000b3b1:	lea    rax,[rip+0x33438]        # 0x14003e7f0
   14000b3b8:	mov    QWORD PTR [r11+0x8],rax
   14000b3bc:	lea    rdx,[r11+0x8]
   14000b3c0:	lea    rcx,[r11-0x38]
   14000b3c4:	call   QWORD PTR [rip+0x2b086]        # 0x140036450
   14000b3ca:	lea    rax,[rip+0x2f23f]        # 0x14003a610
   14000b3d1:	mov    QWORD PTR [rsp+0x30],rax
   14000b3d6:	lea    rcx,[rsp+0x30]
   14000b3db:	call   0x14000dff0
   14000b3e0:	nop
   14000b3e1:	cmp    QWORD PTR [r8+0x8],0x0
   14000b3e6:	je     0x14000b3f5
   14000b3e8:	mov    rax,QWORD PTR [r8]
   14000b3eb:	mov    rax,QWORD PTR [rax+0x8]
   14000b3ef:	mov    rbx,QWORD PTR [rax+0x10]
   14000b3f3:	jmp    0x14000b3f7
   14000b3f5:	xor    ebx,ebx
   14000b3f7:	mov    eax,0x1000
   14000b3fc:	cmp    rsi,0xffffffffffffffff
   14000b400:	cmove  rsi,rax
   14000b404:	cmp    r9,0xffffffffffffffff
   14000b408:	jne    0x14000b40e
   14000b40a:	mov    rbp,QWORD PTR [r8+0x28]
   14000b40e:	mov    ecx,0xa8
   14000b413:	call   0x14003027c
   14000b418:	mov    QWORD PTR [rsp+0x70],rax
   14000b41d:	test   rax,rax
   14000b420:	je     0x14000b434
   14000b422:	mov    r9,rbp
   14000b425:	mov    r8,rsi
   14000b428:	mov    rdx,r14
   14000b42b:	mov    rcx,rax
   14000b42e:	call   0x140014e50
   14000b433:	nop
   14000b434:	mov    QWORD PTR [rsp+0x20],rax
   14000b439:	mov    QWORD PTR [rsp+0x70],rax
   14000b43e:	mov    rsi,QWORD PTR [rdi]
   14000b441:	mov    rbp,QWORD PTR [rsi]
   14000b444:	lea    r9,[rsp+0x70]
   14000b449:	mov    r8,QWORD PTR [rbp+0x8]
   14000b44d:	mov    rdx,rbp
   14000b450:	mov    rcx,rsi
   14000b453:	call   0x140003e60
   14000b458:	mov    rdx,rax
   14000b45b:	mov    rax,QWORD PTR [rsi+0x8]
   14000b45f:	movabs rcx,0xaaaaaaaaaaaaaa9
   14000b469:	sub    rcx,rax
   14000b46c:	cmp    rcx,0x1
   14000b470:	jae    0x14000b480
   14000b472:	lea    rcx,[rip+0x332df]        # 0x14003e758
   14000b479:	call   QWORD PTR [rip+0x2ada1]        # 0x140036220
   14000b47f:	int3   
   14000b480:	inc    rax
   14000b483:	mov    QWORD PTR [rsi+0x8],rax
   14000b487:	mov    QWORD PTR [rbp+0x8],rdx
   14000b48b:	mov    rax,QWORD PTR [rdx+0x8]
   14000b48f:	mov    QWORD PTR [rax],rdx
   14000b492:	mov    QWORD PTR [rsp+0x20],0x0
   14000b49b:	mov    rax,QWORD PTR [rdi]
   14000b49e:	or     DWORD PTR [rax+0x30],0x3
   14000b4a2:	mov    rdx,QWORD PTR [rdi]
   14000b4a5:	mov    rax,QWORD PTR [rdx]
   14000b4a8:	mov    rax,QWORD PTR [rax]
   14000b4ab:	mov    rdx,QWORD PTR [rdx]
   14000b4ae:	cmp    rax,rdx
   14000b4b1:	je     0x14000b4d0
   14000b4b3:	nop    DWORD PTR [rax+0x0]
   14000b4b7:	nop    WORD PTR [rax+rax*1+0x0]
   14000b4c0:	mov    rcx,QWORD PTR [rax+0x10]
   14000b4c4:	and    DWORD PTR [rcx+0x68],0xfffffff9
   14000b4c8:	mov    rax,QWORD PTR [rax]
   14000b4cb:	cmp    rax,rdx
   14000b4ce:	jne    0x14000b4c0
   14000b4d0:	test   rbx,rbx
   14000b4d3:	je     0x14000b4ec
   14000b4d5:	mov    rax,QWORD PTR [rdi]
   14000b4d8:	mov    rdx,QWORD PTR [rax]
   14000b4db:	mov    rdx,QWORD PTR [rdx+0x8]
   14000b4df:	mov    rax,QWORD PTR [rbx]
   14000b4e2:	mov    rdx,QWORD PTR [rdx+0x10]
   14000b4e6:	mov    rcx,rbx
   14000b4e9:	call   QWORD PTR [rax+0x78]
   14000b4ec:	mov    rcx,QWORD PTR [rdi]
   14000b4ef:	cmp    QWORD PTR [rcx+0x10],0x0
   14000b4f4:	je     0x14000b501
   14000b4f6:	mov    rcx,QWORD PTR [rcx+0x10]
   14000b4fa:	mov    rax,QWORD PTR [rcx]
   14000b4fd:	call   QWORD PTR [rax+0x8]
   14000b500:	nop
   14000b501:	mov    rbx,QWORD PTR [rsp+0x78]
   14000b506:	mov    rbp,QWORD PTR [rsp+0x80]
   14000b50e:	add    rsp,0x50
   14000b512:	pop    r14
   14000b514:	pop    rdi
   14000b515:	pop    rsi
   14000b516:	ret    
   14000b517:	int3   
   14000b518:	int3   
   14000b519:	int3   
   14000b51a:	int3   
   14000b51b:	int3   
   14000b51c:	int3   
   14000b51d:	int3   
   14000b51e:	int3   
   14000b51f:	int3   
   14000b520:	mov    rcx,QWORD PTR [rcx+0x8]
   14000b524:	jmp    0x14000b380
   14000b529:	int3   
   14000b52a:	int3   
   14000b52b:	int3   
   14000b52c:	int3   
   14000b52d:	int3   
   14000b52e:	int3   
   14000b52f:	int3   
   14000b530:	rex push rdi
   14000b532:	sub    rsp,0x40
   14000b536:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14000b53f:	mov    QWORD PTR [rsp+0x50],rbx
   14000b544:	mov    QWORD PTR [rsp+0x58],rbp
   14000b549:	mov    QWORD PTR [rsp+0x60],rsi
   14000b54e:	mov    rdi,r8
   14000b551:	mov    rsi,rdx
   14000b554:	mov    rbp,rcx
   14000b557:	mov    cl,0x1
   14000b559:	call   QWORD PTR [rip+0x2ad19]        # 0x140036278
   14000b55f:	mov    rbx,rax
   14000b562:	mov    QWORD PTR [rsp+0x68],rax
   14000b567:	lea    rax,[rsp+0x68]
   14000b56c:	mov    QWORD PTR [rsp+0x30],rax
   14000b571:	mov    QWORD PTR [rsp+0x38],rbx
   14000b576:	mov    rax,QWORD PTR [rbx]
   14000b579:	mov    rcx,rbx
   14000b57c:	call   QWORD PTR [rax+0x8]
   14000b57f:	nop
   14000b580:	mov    rcx,QWORD PTR [rsp+0x68]
   14000b585:	test   rcx,rcx
   14000b588:	je     0x14000b5a4
   14000b58a:	mov    rax,QWORD PTR [rcx]
   14000b58d:	call   QWORD PTR [rax+0x10]
   14000b590:	test   rax,rax
   14000b593:	je     0x14000b5a4
   14000b595:	mov    r8,QWORD PTR [rax]
   14000b598:	mov    edx,0x1
   14000b59d:	mov    rcx,rax
   14000b5a0:	call   QWORD PTR [r8]
   14000b5a3:	nop
   14000b5a4:	mov    QWORD PTR [rsp+0x20],rbx
   14000b5a9:	mov    rax,QWORD PTR [rbx]
   14000b5ac:	mov    rcx,rbx
   14000b5af:	call   QWORD PTR [rax+0x8]
   14000b5b2:	lea    r9,[rsp+0x20]
   14000b5b7:	mov    r8,rdi
   14000b5ba:	mov    rdx,rsi
   14000b5bd:	mov    rcx,rbp
   14000b5c0:	call   0x14000b600
   14000b5c5:	mov    rdi,rax
   14000b5c8:	mov    r8,QWORD PTR [rbx]
   14000b5cb:	mov    rcx,rbx
   14000b5ce:	call   QWORD PTR [r8+0x10]
   14000b5d2:	test   rax,rax
   14000b5d5:	je     0x14000b5e5
   14000b5d7:	mov    r8,QWORD PTR [rax]
   14000b5da:	mov    edx,0x1
   14000b5df:	mov    rcx,rax
   14000b5e2:	call   QWORD PTR [r8]
   14000b5e5:	mov    rax,rdi
   14000b5e8:	mov    rbx,QWORD PTR [rsp+0x50]
   14000b5ed:	mov    rbp,QWORD PTR [rsp+0x58]
   14000b5f2:	mov    rsi,QWORD PTR [rsp+0x60]
   14000b5f7:	add    rsp,0x40
   14000b5fb:	pop    rdi
   14000b5fc:	ret    
   14000b5fd:	int3   
   14000b5fe:	int3   
   14000b5ff:	int3   
   14000b600:	mov    rax,rsp
   14000b603:	mov    QWORD PTR [rax+0x20],r9
   14000b607:	push   rdi
   14000b608:	sub    rsp,0x70
   14000b60c:	mov    QWORD PTR [rax-0x50],0xfffffffffffffffe
   14000b614:	mov    QWORD PTR [rax+0x8],rbx
   14000b618:	mov    QWORD PTR [rax+0x10],rbp
   14000b61c:	mov    QWORD PTR [rax+0x18],rsi
   14000b620:	mov    rbx,r9
   14000b623:	mov    rbp,r8
   14000b626:	mov    rdi,rdx
   14000b629:	mov    rsi,rcx
   14000b62c:	mov    r8,rdx
   14000b62f:	lea    rdx,[rax-0x48]
   14000b633:	call   0x140024380
   14000b638:	nop
   14000b639:	cmp    BYTE PTR [rsp+0x30],0x0
   14000b63e:	je     0x14000b68d
   14000b640:	mov    rcx,QWORD PTR [rbx]
   14000b643:	mov    QWORD PTR [rsp+0x20],rcx
   14000b648:	mov    rax,QWORD PTR [rcx]
   14000b64b:	call   QWORD PTR [rax+0x8]
   14000b64e:	lea    r8,[rsp+0x20]
   14000b653:	mov    rdx,rbp
   14000b656:	mov    rdi,QWORD PTR [rsp+0x38]
   14000b65b:	mov    rcx,rdi
   14000b65e:	call   0x14000c2e0
   14000b663:	nop
   14000b664:	mov    rcx,QWORD PTR [rbx]
   14000b667:	test   rcx,rcx
   14000b66a:	je     0x14000b685
   14000b66c:	mov    rdx,QWORD PTR [rcx]
   14000b66f:	call   QWORD PTR [rdx+0x10]
   14000b672:	test   rax,rax
   14000b675:	je     0x14000b685
   14000b677:	mov    r8,QWORD PTR [rax]
   14000b67a:	mov    edx,0x1
   14000b67f:	mov    rcx,rax
   14000b682:	call   QWORD PTR [r8]
   14000b685:	mov    rax,rdi
   14000b688:	jmp    0x14000b740
   14000b68d:	lea    rcx,[rsp+0x40]
   14000b692:	call   0x140010e90
   14000b697:	nop
   14000b698:	mov    r8,rax
   14000b69b:	mov    rdx,rdi
   14000b69e:	mov    rcx,rsi
   14000b6a1:	call   0x1400286f0
   14000b6a6:	mov    rsi,rax
   14000b6a9:	mov    rdi,QWORD PTR [rsp+0x60]
   14000b6ae:	mov    QWORD PTR [rsp+0x20],rdi
   14000b6b3:	test   rdi,rdi
   14000b6b6:	je     0x14000b6d4
   14000b6b8:	lea    rcx,[rdi+0x11]
   14000b6bc:	call   0x1400221d0
   14000b6c1:	nop
   14000b6c2:	mov    rcx,QWORD PTR [rdi+0x8]
   14000b6c6:	call   0x140030282
   14000b6cb:	mov    rcx,rdi
   14000b6ce:	call   0x140030282
   14000b6d3:	nop
   14000b6d4:	cmp    QWORD PTR [rsp+0x58],0x10
   14000b6da:	jb     0x14000b6e6
   14000b6dc:	mov    rcx,QWORD PTR [rsp+0x40]
   14000b6e1:	call   0x140030282
   14000b6e6:	mov    QWORD PTR [rsp+0x58],0xf
   14000b6ef:	mov    QWORD PTR [rsp+0x50],0x0
   14000b6f8:	mov    BYTE PTR [rsp+0x40],0x0
   14000b6fd:	mov    rcx,QWORD PTR [rbx]
   14000b700:	mov    QWORD PTR [rsp+0x20],rcx
   14000b705:	mov    rax,QWORD PTR [rcx]
   14000b708:	call   QWORD PTR [rax+0x8]
   14000b70b:	lea    r8,[rsp+0x20]
   14000b710:	mov    rdx,rbp
   14000b713:	mov    rcx,rsi
   14000b716:	call   0x14000c2e0
   14000b71b:	nop
   14000b71c:	mov    rcx,QWORD PTR [rbx]
   14000b71f:	test   rcx,rcx
   14000b722:	je     0x14000b73d
   14000b724:	mov    rax,QWORD PTR [rcx]
   14000b727:	call   QWORD PTR [rax+0x10]
   14000b72a:	test   rax,rax
   14000b72d:	je     0x14000b73d
   14000b72f:	mov    r8,QWORD PTR [rax]
   14000b732:	mov    edx,0x1
   14000b737:	mov    rcx,rax
   14000b73a:	call   QWORD PTR [r8]
   14000b73d:	mov    rax,rsi
   14000b740:	lea    r11,[rsp+0x70]
   14000b745:	mov    rbx,QWORD PTR [r11+0x10]
   14000b749:	mov    rbp,QWORD PTR [r11+0x18]
   14000b74d:	mov    rsi,QWORD PTR [r11+0x20]
   14000b751:	mov    rsp,r11
   14000b754:	pop    rdi
   14000b755:	ret    
   14000b756:	int3   
   14000b757:	int3   
   14000b758:	int3   
   14000b759:	int3   
   14000b75a:	int3   
   14000b75b:	int3   
   14000b75c:	int3   
   14000b75d:	int3   
   14000b75e:	int3   
   14000b75f:	int3   
   14000b760:	rex push rdi
   14000b762:	sub    rsp,0x40
   14000b766:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14000b76f:	mov    QWORD PTR [rsp+0x50],rbx
   14000b774:	mov    QWORD PTR [rsp+0x58],rbp
   14000b779:	mov    QWORD PTR [rsp+0x60],rsi
   14000b77e:	mov    rdi,r8
   14000b781:	mov    rsi,rdx
   14000b784:	mov    rbp,rcx
   14000b787:	mov    cl,0x1
   14000b789:	call   QWORD PTR [rip+0x2aae9]        # 0x140036278
   14000b78f:	mov    rbx,rax
   14000b792:	mov    QWORD PTR [rsp+0x68],rax
   14000b797:	lea    rax,[rsp+0x68]
   14000b79c:	mov    QWORD PTR [rsp+0x30],rax
   14000b7a1:	mov    QWORD PTR [rsp+0x38],rbx
   14000b7a6:	mov    rax,QWORD PTR [rbx]
   14000b7a9:	mov    rcx,rbx
   14000b7ac:	call   QWORD PTR [rax+0x8]
   14000b7af:	nop
   14000b7b0:	mov    rcx,QWORD PTR [rsp+0x68]
   14000b7b5:	test   rcx,rcx
   14000b7b8:	je     0x14000b7d4
   14000b7ba:	mov    rax,QWORD PTR [rcx]
   14000b7bd:	call   QWORD PTR [rax+0x10]
   14000b7c0:	test   rax,rax
   14000b7c3:	je     0x14000b7d4
   14000b7c5:	mov    r8,QWORD PTR [rax]
   14000b7c8:	mov    edx,0x1
   14000b7cd:	mov    rcx,rax
   14000b7d0:	call   QWORD PTR [r8]
   14000b7d3:	nop
   14000b7d4:	mov    QWORD PTR [rsp+0x20],rbx
   14000b7d9:	mov    rax,QWORD PTR [rbx]
   14000b7dc:	mov    rcx,rbx
   14000b7df:	call   QWORD PTR [rax+0x8]
   14000b7e2:	lea    r9,[rsp+0x20]
   14000b7e7:	mov    r8,rdi
   14000b7ea:	mov    rdx,rsi
   14000b7ed:	mov    rcx,rbp
   14000b7f0:	call   0x14000b830
   14000b7f5:	mov    rdi,rax
   14000b7f8:	mov    r8,QWORD PTR [rbx]
   14000b7fb:	mov    rcx,rbx
   14000b7fe:	call   QWORD PTR [r8+0x10]
   14000b802:	test   rax,rax
   14000b805:	je     0x14000b815
   14000b807:	mov    r8,QWORD PTR [rax]
   14000b80a:	mov    edx,0x1
   14000b80f:	mov    rcx,rax
   14000b812:	call   QWORD PTR [r8]
   14000b815:	mov    rax,rdi
   14000b818:	mov    rbx,QWORD PTR [rsp+0x50]
   14000b81d:	mov    rbp,QWORD PTR [rsp+0x58]
   14000b822:	mov    rsi,QWORD PTR [rsp+0x60]
   14000b827:	add    rsp,0x40
   14000b82b:	pop    rdi
   14000b82c:	ret    
   14000b82d:	int3   
   14000b82e:	int3   
   14000b82f:	int3   
   14000b830:	mov    rax,rsp
   14000b833:	mov    QWORD PTR [rax+0x20],r9
   14000b837:	push   rdi
   14000b838:	sub    rsp,0x70
   14000b83c:	mov    QWORD PTR [rax-0x50],0xfffffffffffffffe
   14000b844:	mov    QWORD PTR [rax+0x8],rbx
   14000b848:	mov    QWORD PTR [rax+0x10],rbp
   14000b84c:	mov    QWORD PTR [rax+0x18],rsi
   14000b850:	mov    rbx,r9
   14000b853:	mov    rbp,r8
   14000b856:	mov    rdi,rdx
   14000b859:	mov    rsi,rcx
   14000b85c:	mov    r8,rdx
   14000b85f:	lea    rdx,[rax-0x48]
   14000b863:	call   0x140024380
   14000b868:	nop
   14000b869:	cmp    BYTE PTR [rsp+0x30],0x0
   14000b86e:	je     0x14000b8bd
   14000b870:	mov    rcx,QWORD PTR [rbx]
   14000b873:	mov    QWORD PTR [rsp+0x20],rcx
   14000b878:	mov    rax,QWORD PTR [rcx]
   14000b87b:	call   QWORD PTR [rax+0x8]
   14000b87e:	lea    r8,[rsp+0x20]
   14000b883:	mov    rdx,rbp
   14000b886:	mov    rdi,QWORD PTR [rsp+0x38]
   14000b88b:	mov    rcx,rdi
   14000b88e:	call   0x14000c490
   14000b893:	nop
   14000b894:	mov    rcx,QWORD PTR [rbx]
   14000b897:	test   rcx,rcx
   14000b89a:	je     0x14000b8b5
   14000b89c:	mov    rdx,QWORD PTR [rcx]
   14000b89f:	call   QWORD PTR [rdx+0x10]
   14000b8a2:	test   rax,rax
   14000b8a5:	je     0x14000b8b5
   14000b8a7:	mov    r8,QWORD PTR [rax]
   14000b8aa:	mov    edx,0x1
   14000b8af:	mov    rcx,rax
   14000b8b2:	call   QWORD PTR [r8]
   14000b8b5:	mov    rax,rdi
   14000b8b8:	jmp    0x14000b970
   14000b8bd:	lea    rcx,[rsp+0x40]
   14000b8c2:	call   0x140010e90
   14000b8c7:	nop
   14000b8c8:	mov    r8,rax
   14000b8cb:	mov    rdx,rdi
   14000b8ce:	mov    rcx,rsi
   14000b8d1:	call   0x1400286f0
   14000b8d6:	mov    rsi,rax
   14000b8d9:	mov    rdi,QWORD PTR [rsp+0x60]
   14000b8de:	mov    QWORD PTR [rsp+0x20],rdi
   14000b8e3:	test   rdi,rdi
   14000b8e6:	je     0x14000b904
   14000b8e8:	lea    rcx,[rdi+0x11]
   14000b8ec:	call   0x1400221d0
   14000b8f1:	nop
   14000b8f2:	mov    rcx,QWORD PTR [rdi+0x8]
   14000b8f6:	call   0x140030282
   14000b8fb:	mov    rcx,rdi
   14000b8fe:	call   0x140030282
   14000b903:	nop
   14000b904:	cmp    QWORD PTR [rsp+0x58],0x10
   14000b90a:	jb     0x14000b916
   14000b90c:	mov    rcx,QWORD PTR [rsp+0x40]
   14000b911:	call   0x140030282
   14000b916:	mov    QWORD PTR [rsp+0x58],0xf
   14000b91f:	mov    QWORD PTR [rsp+0x50],0x0
   14000b928:	mov    BYTE PTR [rsp+0x40],0x0
   14000b92d:	mov    rcx,QWORD PTR [rbx]
   14000b930:	mov    QWORD PTR [rsp+0x20],rcx
   14000b935:	mov    rax,QWORD PTR [rcx]
   14000b938:	call   QWORD PTR [rax+0x8]
   14000b93b:	lea    r8,[rsp+0x20]
   14000b940:	mov    rdx,rbp
   14000b943:	mov    rcx,rsi
   14000b946:	call   0x14000c490
   14000b94b:	nop
   14000b94c:	mov    rcx,QWORD PTR [rbx]
   14000b94f:	test   rcx,rcx
   14000b952:	je     0x14000b96d
   14000b954:	mov    rax,QWORD PTR [rcx]
   14000b957:	call   QWORD PTR [rax+0x10]
   14000b95a:	test   rax,rax
   14000b95d:	je     0x14000b96d
   14000b95f:	mov    r8,QWORD PTR [rax]
   14000b962:	mov    edx,0x1
   14000b967:	mov    rcx,rax
   14000b96a:	call   QWORD PTR [r8]
   14000b96d:	mov    rax,rsi
   14000b970:	lea    r11,[rsp+0x70]
   14000b975:	mov    rbx,QWORD PTR [r11+0x10]
   14000b979:	mov    rbp,QWORD PTR [r11+0x18]
   14000b97d:	mov    rsi,QWORD PTR [r11+0x20]
   14000b981:	mov    rsp,r11
   14000b984:	pop    rdi
   14000b985:	ret    
   14000b986:	int3   
   14000b987:	int3   
   14000b988:	int3   
   14000b989:	int3   
   14000b98a:	int3   
   14000b98b:	int3   
   14000b98c:	int3   
   14000b98d:	int3   
   14000b98e:	int3   
   14000b98f:	int3   
   14000b990:	rex push rdi
   14000b992:	sub    rsp,0x40
   14000b996:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14000b99f:	mov    QWORD PTR [rsp+0x50],rbx
   14000b9a4:	mov    QWORD PTR [rsp+0x58],rbp
   14000b9a9:	mov    QWORD PTR [rsp+0x60],rsi
   14000b9ae:	mov    rdi,r8
   14000b9b1:	mov    rsi,rdx
   14000b9b4:	mov    rbp,rcx
   14000b9b7:	mov    cl,0x1
   14000b9b9:	call   QWORD PTR [rip+0x2a8b9]        # 0x140036278
   14000b9bf:	mov    rbx,rax
   14000b9c2:	mov    QWORD PTR [rsp+0x68],rax
   14000b9c7:	lea    rax,[rsp+0x68]
   14000b9cc:	mov    QWORD PTR [rsp+0x30],rax
   14000b9d1:	mov    QWORD PTR [rsp+0x38],rbx
   14000b9d6:	mov    rax,QWORD PTR [rbx]
   14000b9d9:	mov    rcx,rbx
   14000b9dc:	call   QWORD PTR [rax+0x8]
   14000b9df:	nop
   14000b9e0:	mov    rcx,QWORD PTR [rsp+0x68]
   14000b9e5:	test   rcx,rcx
   14000b9e8:	je     0x14000ba04
   14000b9ea:	mov    rax,QWORD PTR [rcx]
   14000b9ed:	call   QWORD PTR [rax+0x10]
   14000b9f0:	test   rax,rax
   14000b9f3:	je     0x14000ba04
   14000b9f5:	mov    r8,QWORD PTR [rax]
   14000b9f8:	mov    edx,0x1
   14000b9fd:	mov    rcx,rax
   14000ba00:	call   QWORD PTR [r8]
   14000ba03:	nop
   14000ba04:	mov    QWORD PTR [rsp+0x20],rbx
   14000ba09:	mov    rax,QWORD PTR [rbx]
   14000ba0c:	mov    rcx,rbx
   14000ba0f:	call   QWORD PTR [rax+0x8]
   14000ba12:	lea    r9,[rsp+0x20]
   14000ba17:	mov    r8,rdi
   14000ba1a:	mov    rdx,rsi
   14000ba1d:	mov    rcx,rbp
   14000ba20:	call   0x14000ba60
   14000ba25:	mov    rdi,rax
   14000ba28:	mov    r8,QWORD PTR [rbx]
   14000ba2b:	mov    rcx,rbx
   14000ba2e:	call   QWORD PTR [r8+0x10]
   14000ba32:	test   rax,rax
   14000ba35:	je     0x14000ba45
   14000ba37:	mov    r8,QWORD PTR [rax]
   14000ba3a:	mov    edx,0x1
   14000ba3f:	mov    rcx,rax
   14000ba42:	call   QWORD PTR [r8]
   14000ba45:	mov    rax,rdi
   14000ba48:	mov    rbx,QWORD PTR [rsp+0x50]
   14000ba4d:	mov    rbp,QWORD PTR [rsp+0x58]
   14000ba52:	mov    rsi,QWORD PTR [rsp+0x60]
   14000ba57:	add    rsp,0x40
   14000ba5b:	pop    rdi
   14000ba5c:	ret    
   14000ba5d:	int3   
   14000ba5e:	int3   
   14000ba5f:	int3   
   14000ba60:	mov    rax,rsp
   14000ba63:	mov    QWORD PTR [rax+0x20],r9
   14000ba67:	push   rdi
   14000ba68:	sub    rsp,0x70
   14000ba6c:	mov    QWORD PTR [rax-0x50],0xfffffffffffffffe
   14000ba74:	mov    QWORD PTR [rax+0x8],rbx
   14000ba78:	mov    QWORD PTR [rax+0x10],rbp
   14000ba7c:	mov    QWORD PTR [rax+0x18],rsi
   14000ba80:	mov    rbx,r9
   14000ba83:	mov    rbp,r8
   14000ba86:	mov    rdi,rdx
   14000ba89:	mov    rsi,rcx
   14000ba8c:	mov    r8,rdx
   14000ba8f:	lea    rdx,[rax-0x48]
   14000ba93:	call   0x140024380
   14000ba98:	nop
   14000ba99:	cmp    BYTE PTR [rsp+0x30],0x0
   14000ba9e:	je     0x14000baed
   14000baa0:	mov    rcx,QWORD PTR [rbx]
   14000baa3:	mov    QWORD PTR [rsp+0x20],rcx
   14000baa8:	mov    rax,QWORD PTR [rcx]
   14000baab:	call   QWORD PTR [rax+0x8]
   14000baae:	lea    r8,[rsp+0x20]
   14000bab3:	mov    rdx,rbp
   14000bab6:	mov    rdi,QWORD PTR [rsp+0x38]
   14000babb:	mov    rcx,rdi
   14000babe:	call   0x14000c640
   14000bac3:	nop
   14000bac4:	mov    rcx,QWORD PTR [rbx]
   14000bac7:	test   rcx,rcx
   14000baca:	je     0x14000bae5
   14000bacc:	mov    rdx,QWORD PTR [rcx]
   14000bacf:	call   QWORD PTR [rdx+0x10]
   14000bad2:	test   rax,rax
   14000bad5:	je     0x14000bae5
   14000bad7:	mov    r8,QWORD PTR [rax]
   14000bada:	mov    edx,0x1
   14000badf:	mov    rcx,rax
   14000bae2:	call   QWORD PTR [r8]
   14000bae5:	mov    rax,rdi
   14000bae8:	jmp    0x14000bba0
   14000baed:	lea    rcx,[rsp+0x40]
   14000baf2:	call   0x140010e90
   14000baf7:	nop
   14000baf8:	mov    r8,rax
   14000bafb:	mov    rdx,rdi
   14000bafe:	mov    rcx,rsi
   14000bb01:	call   0x1400286f0
   14000bb06:	mov    rsi,rax
   14000bb09:	mov    rdi,QWORD PTR [rsp+0x60]
   14000bb0e:	mov    QWORD PTR [rsp+0x20],rdi
   14000bb13:	test   rdi,rdi
   14000bb16:	je     0x14000bb34
   14000bb18:	lea    rcx,[rdi+0x11]
   14000bb1c:	call   0x1400221d0
   14000bb21:	nop
   14000bb22:	mov    rcx,QWORD PTR [rdi+0x8]
   14000bb26:	call   0x140030282
   14000bb2b:	mov    rcx,rdi
   14000bb2e:	call   0x140030282
   14000bb33:	nop
   14000bb34:	cmp    QWORD PTR [rsp+0x58],0x10
   14000bb3a:	jb     0x14000bb46
   14000bb3c:	mov    rcx,QWORD PTR [rsp+0x40]
   14000bb41:	call   0x140030282
   14000bb46:	mov    QWORD PTR [rsp+0x58],0xf
   14000bb4f:	mov    QWORD PTR [rsp+0x50],0x0
   14000bb58:	mov    BYTE PTR [rsp+0x40],0x0
   14000bb5d:	mov    rcx,QWORD PTR [rbx]
   14000bb60:	mov    QWORD PTR [rsp+0x20],rcx
   14000bb65:	mov    rax,QWORD PTR [rcx]
   14000bb68:	call   QWORD PTR [rax+0x8]
   14000bb6b:	lea    r8,[rsp+0x20]
   14000bb70:	mov    rdx,rbp
   14000bb73:	mov    rcx,rsi
   14000bb76:	call   0x14000c640
   14000bb7b:	nop
   14000bb7c:	mov    rcx,QWORD PTR [rbx]
   14000bb7f:	test   rcx,rcx
   14000bb82:	je     0x14000bb9d
   14000bb84:	mov    rax,QWORD PTR [rcx]
   14000bb87:	call   QWORD PTR [rax+0x10]
   14000bb8a:	test   rax,rax
   14000bb8d:	je     0x14000bb9d
   14000bb8f:	mov    r8,QWORD PTR [rax]
   14000bb92:	mov    edx,0x1
   14000bb97:	mov    rcx,rax
   14000bb9a:	call   QWORD PTR [r8]
   14000bb9d:	mov    rax,rsi
   14000bba0:	lea    r11,[rsp+0x70]
   14000bba5:	mov    rbx,QWORD PTR [r11+0x10]
   14000bba9:	mov    rbp,QWORD PTR [r11+0x18]
   14000bbad:	mov    rsi,QWORD PTR [r11+0x20]
   14000bbb1:	mov    rsp,r11
   14000bbb4:	pop    rdi
   14000bbb5:	ret    
   14000bbb6:	int3   
   14000bbb7:	int3   
   14000bbb8:	int3   
   14000bbb9:	int3   
   14000bbba:	int3   
   14000bbbb:	int3   
   14000bbbc:	int3   
   14000bbbd:	int3   
   14000bbbe:	int3   
   14000bbbf:	int3   
   14000bbc0:	rex push rdi
   14000bbc2:	sub    rsp,0x40
   14000bbc6:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14000bbcf:	mov    QWORD PTR [rsp+0x50],rbx
   14000bbd4:	mov    QWORD PTR [rsp+0x58],rbp
   14000bbd9:	mov    QWORD PTR [rsp+0x60],rsi
   14000bbde:	mov    rdi,r8
   14000bbe1:	mov    rsi,rdx
   14000bbe4:	mov    rbp,rcx
   14000bbe7:	mov    cl,0x1
   14000bbe9:	call   QWORD PTR [rip+0x2a689]        # 0x140036278
   14000bbef:	mov    rbx,rax
   14000bbf2:	mov    QWORD PTR [rsp+0x68],rax
   14000bbf7:	lea    rax,[rsp+0x68]
   14000bbfc:	mov    QWORD PTR [rsp+0x30],rax
   14000bc01:	mov    QWORD PTR [rsp+0x38],rbx
   14000bc06:	mov    rax,QWORD PTR [rbx]
   14000bc09:	mov    rcx,rbx
   14000bc0c:	call   QWORD PTR [rax+0x8]
   14000bc0f:	nop
   14000bc10:	mov    rcx,QWORD PTR [rsp+0x68]
   14000bc15:	test   rcx,rcx
   14000bc18:	je     0x14000bc34
   14000bc1a:	mov    rax,QWORD PTR [rcx]
   14000bc1d:	call   QWORD PTR [rax+0x10]
   14000bc20:	test   rax,rax
   14000bc23:	je     0x14000bc34
   14000bc25:	mov    r8,QWORD PTR [rax]
   14000bc28:	mov    edx,0x1
   14000bc2d:	mov    rcx,rax
   14000bc30:	call   QWORD PTR [r8]
   14000bc33:	nop
   14000bc34:	mov    QWORD PTR [rsp+0x20],rbx
   14000bc39:	mov    rax,QWORD PTR [rbx]
   14000bc3c:	mov    rcx,rbx
   14000bc3f:	call   QWORD PTR [rax+0x8]
   14000bc42:	lea    r9,[rsp+0x20]
   14000bc47:	mov    r8,rdi
   14000bc4a:	mov    rdx,rsi
   14000bc4d:	mov    rcx,rbp
   14000bc50:	call   0x14000bc90
   14000bc55:	mov    rdi,rax
   14000bc58:	mov    r8,QWORD PTR [rbx]
   14000bc5b:	mov    rcx,rbx
   14000bc5e:	call   QWORD PTR [r8+0x10]
   14000bc62:	test   rax,rax
   14000bc65:	je     0x14000bc75
   14000bc67:	mov    r8,QWORD PTR [rax]
   14000bc6a:	mov    edx,0x1
   14000bc6f:	mov    rcx,rax
   14000bc72:	call   QWORD PTR [r8]
   14000bc75:	mov    rax,rdi
   14000bc78:	mov    rbx,QWORD PTR [rsp+0x50]
   14000bc7d:	mov    rbp,QWORD PTR [rsp+0x58]
   14000bc82:	mov    rsi,QWORD PTR [rsp+0x60]
   14000bc87:	add    rsp,0x40
   14000bc8b:	pop    rdi
   14000bc8c:	ret    
   14000bc8d:	int3   
   14000bc8e:	int3   
   14000bc8f:	int3   
   14000bc90:	mov    rax,rsp
   14000bc93:	mov    QWORD PTR [rax+0x20],r9
   14000bc97:	push   rdi
   14000bc98:	sub    rsp,0x70
   14000bc9c:	mov    QWORD PTR [rax-0x50],0xfffffffffffffffe
   14000bca4:	mov    QWORD PTR [rax+0x8],rbx
   14000bca8:	mov    QWORD PTR [rax+0x10],rbp
   14000bcac:	mov    QWORD PTR [rax+0x18],rsi
   14000bcb0:	mov    rbx,r9
   14000bcb3:	mov    rbp,r8
   14000bcb6:	mov    rdi,rdx
   14000bcb9:	mov    rsi,rcx
   14000bcbc:	mov    r8,rdx
   14000bcbf:	lea    rdx,[rax-0x48]
   14000bcc3:	call   0x140024380
   14000bcc8:	nop
   14000bcc9:	cmp    BYTE PTR [rsp+0x30],0x0
   14000bcce:	je     0x14000bd1d
   14000bcd0:	mov    rcx,QWORD PTR [rbx]
   14000bcd3:	mov    QWORD PTR [rsp+0x20],rcx
   14000bcd8:	mov    rax,QWORD PTR [rcx]
   14000bcdb:	call   QWORD PTR [rax+0x8]
   14000bcde:	lea    r8,[rsp+0x20]
   14000bce3:	mov    rdx,rbp
   14000bce6:	mov    rdi,QWORD PTR [rsp+0x38]
   14000bceb:	mov    rcx,rdi
   14000bcee:	call   0x14000c7f0
   14000bcf3:	nop
   14000bcf4:	mov    rcx,QWORD PTR [rbx]
   14000bcf7:	test   rcx,rcx
   14000bcfa:	je     0x14000bd15
   14000bcfc:	mov    rdx,QWORD PTR [rcx]
   14000bcff:	call   QWORD PTR [rdx+0x10]
   14000bd02:	test   rax,rax
   14000bd05:	je     0x14000bd15
   14000bd07:	mov    r8,QWORD PTR [rax]
   14000bd0a:	mov    edx,0x1
   14000bd0f:	mov    rcx,rax
   14000bd12:	call   QWORD PTR [r8]
   14000bd15:	mov    rax,rdi
   14000bd18:	jmp    0x14000bdd0
   14000bd1d:	lea    rcx,[rsp+0x40]
   14000bd22:	call   0x140010e90
   14000bd27:	nop
   14000bd28:	mov    r8,rax
   14000bd2b:	mov    rdx,rdi
   14000bd2e:	mov    rcx,rsi
   14000bd31:	call   0x1400286f0
   14000bd36:	mov    rsi,rax
   14000bd39:	mov    rdi,QWORD PTR [rsp+0x60]
   14000bd3e:	mov    QWORD PTR [rsp+0x20],rdi
   14000bd43:	test   rdi,rdi
   14000bd46:	je     0x14000bd64
   14000bd48:	lea    rcx,[rdi+0x11]
   14000bd4c:	call   0x1400221d0
   14000bd51:	nop
   14000bd52:	mov    rcx,QWORD PTR [rdi+0x8]
   14000bd56:	call   0x140030282
   14000bd5b:	mov    rcx,rdi
   14000bd5e:	call   0x140030282
   14000bd63:	nop
   14000bd64:	cmp    QWORD PTR [rsp+0x58],0x10
   14000bd6a:	jb     0x14000bd76
   14000bd6c:	mov    rcx,QWORD PTR [rsp+0x40]
   14000bd71:	call   0x140030282
   14000bd76:	mov    QWORD PTR [rsp+0x58],0xf
   14000bd7f:	mov    QWORD PTR [rsp+0x50],0x0
   14000bd88:	mov    BYTE PTR [rsp+0x40],0x0
   14000bd8d:	mov    rcx,QWORD PTR [rbx]
   14000bd90:	mov    QWORD PTR [rsp+0x20],rcx
   14000bd95:	mov    rax,QWORD PTR [rcx]
   14000bd98:	call   QWORD PTR [rax+0x8]
   14000bd9b:	lea    r8,[rsp+0x20]
   14000bda0:	mov    rdx,rbp
   14000bda3:	mov    rcx,rsi
   14000bda6:	call   0x14000c7f0
   14000bdab:	nop
   14000bdac:	mov    rcx,QWORD PTR [rbx]
   14000bdaf:	test   rcx,rcx
   14000bdb2:	je     0x14000bdcd
   14000bdb4:	mov    rax,QWORD PTR [rcx]
   14000bdb7:	call   QWORD PTR [rax+0x10]
   14000bdba:	test   rax,rax
   14000bdbd:	je     0x14000bdcd
   14000bdbf:	mov    r8,QWORD PTR [rax]
   14000bdc2:	mov    edx,0x1
   14000bdc7:	mov    rcx,rax
   14000bdca:	call   QWORD PTR [r8]
   14000bdcd:	mov    rax,rsi
   14000bdd0:	lea    r11,[rsp+0x70]
   14000bdd5:	mov    rbx,QWORD PTR [r11+0x10]
   14000bdd9:	mov    rbp,QWORD PTR [r11+0x18]
   14000bddd:	mov    rsi,QWORD PTR [r11+0x20]
   14000bde1:	mov    rsp,r11
   14000bde4:	pop    rdi
   14000bde5:	ret    
   14000bde6:	int3   
   14000bde7:	int3   
   14000bde8:	int3   
   14000bde9:	int3   
   14000bdea:	int3   
   14000bdeb:	int3   
   14000bdec:	int3   
   14000bded:	int3   
   14000bdee:	int3   
   14000bdef:	int3   
   14000bdf0:	xor    eax,eax
   14000bdf2:	movzx  r9d,al
   14000bdf6:	jmp    0x14000be00
   14000bdfb:	int3   
   14000bdfc:	int3   
   14000bdfd:	int3   
   14000bdfe:	int3   
   14000bdff:	int3   
   14000be00:	mov    rax,rsp
   14000be03:	mov    BYTE PTR [rax+0x20],r9b
   14000be07:	push   rdi
   14000be08:	sub    rsp,0x70
   14000be0c:	mov    QWORD PTR [rax-0x58],0xfffffffffffffffe
   14000be14:	mov    QWORD PTR [rax+0x8],rbx
   14000be18:	mov    QWORD PTR [rax+0x10],rsi
   14000be1c:	mov    rdi,r8
   14000be1f:	mov    rbx,rdx
   14000be22:	mov    rsi,rcx
   14000be25:	mov    r8,rdx
   14000be28:	lea    rdx,[rax-0x48]
   14000be2c:	call   0x140024380
   14000be31:	nop
   14000be32:	cmp    BYTE PTR [rsp+0x30],0x0
   14000be37:	je     0x14000be5a
   14000be39:	movzx  r8d,BYTE PTR [rsp+0x98]
   14000be42:	mov    rdx,rdi
   14000be45:	mov    rcx,QWORD PTR [rsp+0x38]
   14000be4a:	call   0x14000c9a0
   14000be4f:	nop
   14000be50:	mov    rax,QWORD PTR [rsp+0x38]
   14000be55:	jmp    0x14000bee2
   14000be5a:	lea    rcx,[rsp+0x40]
   14000be5f:	call   0x140010e90
   14000be64:	nop
   14000be65:	mov    r8,rax
   14000be68:	mov    rdx,rbx
   14000be6b:	mov    rcx,rsi
   14000be6e:	call   0x1400286f0
   14000be73:	mov    rsi,rax
   14000be76:	mov    rbx,QWORD PTR [rsp+0x60]
   14000be7b:	mov    QWORD PTR [rsp+0x28],rbx
   14000be80:	test   rbx,rbx
   14000be83:	je     0x14000bea1
   14000be85:	lea    rcx,[rbx+0x11]
   14000be89:	call   0x1400221d0
   14000be8e:	nop
   14000be8f:	mov    rcx,QWORD PTR [rbx+0x8]
   14000be93:	call   0x140030282
   14000be98:	mov    rcx,rbx
   14000be9b:	call   0x140030282
   14000bea0:	nop
   14000bea1:	cmp    QWORD PTR [rsp+0x58],0x10
   14000bea7:	jb     0x14000beb3
   14000bea9:	mov    rcx,QWORD PTR [rsp+0x40]
   14000beae:	call   0x140030282
   14000beb3:	mov    QWORD PTR [rsp+0x58],0xf
   14000bebc:	mov    QWORD PTR [rsp+0x50],0x0
   14000bec5:	mov    BYTE PTR [rsp+0x40],0x0
   14000beca:	movzx  r8d,BYTE PTR [rsp+0x98]
   14000bed3:	mov    rdx,rdi
   14000bed6:	mov    rcx,rsi
   14000bed9:	call   0x14000c9a0
   14000bede:	nop
   14000bedf:	mov    rax,rsi
   14000bee2:	lea    r11,[rsp+0x70]
   14000bee7:	mov    rbx,QWORD PTR [r11+0x10]
   14000beeb:	mov    rsi,QWORD PTR [r11+0x18]
   14000beef:	mov    rsp,r11
   14000bef2:	pop    rdi
   14000bef3:	ret    
   14000bef4:	int3   
   14000bef5:	int3   
   14000bef6:	int3   
   14000bef7:	int3   
   14000bef8:	int3   
   14000bef9:	int3   
   14000befa:	int3   
   14000befb:	int3   
   14000befc:	int3   
   14000befd:	int3   
   14000befe:	int3   
   14000beff:	int3   
   14000bf00:	rex push rdi
   14000bf02:	sub    rsp,0x40
   14000bf06:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14000bf0f:	mov    QWORD PTR [rsp+0x50],rbx
   14000bf14:	mov    QWORD PTR [rsp+0x58],rbp
   14000bf19:	mov    QWORD PTR [rsp+0x60],rsi
   14000bf1e:	mov    rdi,r8
   14000bf21:	mov    rsi,rdx
   14000bf24:	mov    rbp,rcx
   14000bf27:	mov    cl,0x1
   14000bf29:	call   QWORD PTR [rip+0x2a349]        # 0x140036278
   14000bf2f:	mov    rbx,rax
   14000bf32:	mov    QWORD PTR [rsp+0x68],rax
   14000bf37:	lea    rax,[rsp+0x68]
   14000bf3c:	mov    QWORD PTR [rsp+0x30],rax
   14000bf41:	mov    QWORD PTR [rsp+0x38],rbx
   14000bf46:	mov    rax,QWORD PTR [rbx]
   14000bf49:	mov    rcx,rbx
   14000bf4c:	call   QWORD PTR [rax+0x8]
   14000bf4f:	nop
   14000bf50:	mov    rcx,QWORD PTR [rsp+0x68]
   14000bf55:	test   rcx,rcx
   14000bf58:	je     0x14000bf74
   14000bf5a:	mov    rax,QWORD PTR [rcx]
   14000bf5d:	call   QWORD PTR [rax+0x10]
   14000bf60:	test   rax,rax
   14000bf63:	je     0x14000bf74
   14000bf65:	mov    r8,QWORD PTR [rax]
   14000bf68:	mov    edx,0x1
   14000bf6d:	mov    rcx,rax
   14000bf70:	call   QWORD PTR [r8]
   14000bf73:	nop
   14000bf74:	mov    QWORD PTR [rsp+0x20],rbx
   14000bf79:	mov    rax,QWORD PTR [rbx]
   14000bf7c:	mov    rcx,rbx
   14000bf7f:	call   QWORD PTR [rax+0x8]
   14000bf82:	lea    r9,[rsp+0x20]
   14000bf87:	mov    r8,rdi
   14000bf8a:	mov    rdx,rsi
   14000bf8d:	mov    rcx,rbp
   14000bf90:	call   0x14000bfd0
   14000bf95:	mov    rdi,rax
   14000bf98:	mov    r8,QWORD PTR [rbx]
   14000bf9b:	mov    rcx,rbx
   14000bf9e:	call   QWORD PTR [r8+0x10]
   14000bfa2:	test   rax,rax
   14000bfa5:	je     0x14000bfb5
   14000bfa7:	mov    r8,QWORD PTR [rax]
   14000bfaa:	mov    edx,0x1
   14000bfaf:	mov    rcx,rax
   14000bfb2:	call   QWORD PTR [r8]
   14000bfb5:	mov    rax,rdi
   14000bfb8:	mov    rbx,QWORD PTR [rsp+0x50]
   14000bfbd:	mov    rbp,QWORD PTR [rsp+0x58]
   14000bfc2:	mov    rsi,QWORD PTR [rsp+0x60]
   14000bfc7:	add    rsp,0x40
   14000bfcb:	pop    rdi
   14000bfcc:	ret    
   14000bfcd:	int3   
   14000bfce:	int3   
   14000bfcf:	int3   
   14000bfd0:	mov    rax,rsp
   14000bfd3:	mov    QWORD PTR [rax+0x20],r9
   14000bfd7:	push   rdi
   14000bfd8:	sub    rsp,0x70
   14000bfdc:	mov    QWORD PTR [rax-0x50],0xfffffffffffffffe
   14000bfe4:	mov    QWORD PTR [rax+0x8],rbx
   14000bfe8:	mov    QWORD PTR [rax+0x10],rbp
   14000bfec:	mov    QWORD PTR [rax+0x18],rsi
   14000bff0:	mov    rbx,r9
   14000bff3:	mov    rbp,r8
   14000bff6:	mov    rdi,rdx
   14000bff9:	mov    rsi,rcx
   14000bffc:	mov    r8,rdx
   14000bfff:	lea    rdx,[rax-0x48]
   14000c003:	call   0x140024380
   14000c008:	nop
   14000c009:	cmp    BYTE PTR [rsp+0x30],0x0
   14000c00e:	je     0x14000c05d
   14000c010:	mov    rcx,QWORD PTR [rbx]
   14000c013:	mov    QWORD PTR [rsp+0x20],rcx
   14000c018:	mov    rax,QWORD PTR [rcx]
   14000c01b:	call   QWORD PTR [rax+0x8]
   14000c01e:	lea    r8,[rsp+0x20]
   14000c023:	mov    rdx,rbp
   14000c026:	mov    rdi,QWORD PTR [rsp+0x38]
   14000c02b:	mov    rcx,rdi
   14000c02e:	call   0x14000cb10
   14000c033:	nop
   14000c034:	mov    rcx,QWORD PTR [rbx]
   14000c037:	test   rcx,rcx
   14000c03a:	je     0x14000c055
   14000c03c:	mov    rdx,QWORD PTR [rcx]
   14000c03f:	call   QWORD PTR [rdx+0x10]
   14000c042:	test   rax,rax
   14000c045:	je     0x14000c055
   14000c047:	mov    r8,QWORD PTR [rax]
   14000c04a:	mov    edx,0x1
   14000c04f:	mov    rcx,rax
   14000c052:	call   QWORD PTR [r8]
   14000c055:	mov    rax,rdi
   14000c058:	jmp    0x14000c110
   14000c05d:	lea    rcx,[rsp+0x40]
   14000c062:	call   0x140010e90
   14000c067:	nop
   14000c068:	mov    r8,rax
   14000c06b:	mov    rdx,rdi
   14000c06e:	mov    rcx,rsi
   14000c071:	call   0x1400286f0
   14000c076:	mov    rsi,rax
   14000c079:	mov    rdi,QWORD PTR [rsp+0x60]
   14000c07e:	mov    QWORD PTR [rsp+0x20],rdi
   14000c083:	test   rdi,rdi
   14000c086:	je     0x14000c0a4
   14000c088:	lea    rcx,[rdi+0x11]
   14000c08c:	call   0x1400221d0
   14000c091:	nop
   14000c092:	mov    rcx,QWORD PTR [rdi+0x8]
   14000c096:	call   0x140030282
   14000c09b:	mov    rcx,rdi
   14000c09e:	call   0x140030282
   14000c0a3:	nop
   14000c0a4:	cmp    QWORD PTR [rsp+0x58],0x10
   14000c0aa:	jb     0x14000c0b6
   14000c0ac:	mov    rcx,QWORD PTR [rsp+0x40]
   14000c0b1:	call   0x140030282
   14000c0b6:	mov    QWORD PTR [rsp+0x58],0xf
   14000c0bf:	mov    QWORD PTR [rsp+0x50],0x0
   14000c0c8:	mov    BYTE PTR [rsp+0x40],0x0
   14000c0cd:	mov    rcx,QWORD PTR [rbx]
   14000c0d0:	mov    QWORD PTR [rsp+0x20],rcx
   14000c0d5:	mov    rax,QWORD PTR [rcx]
   14000c0d8:	call   QWORD PTR [rax+0x8]
   14000c0db:	lea    r8,[rsp+0x20]
   14000c0e0:	mov    rdx,rbp
   14000c0e3:	mov    rcx,rsi
   14000c0e6:	call   0x14000cb10
   14000c0eb:	nop
   14000c0ec:	mov    rcx,QWORD PTR [rbx]
   14000c0ef:	test   rcx,rcx
   14000c0f2:	je     0x14000c10d
   14000c0f4:	mov    rax,QWORD PTR [rcx]
   14000c0f7:	call   QWORD PTR [rax+0x10]
   14000c0fa:	test   rax,rax
   14000c0fd:	je     0x14000c10d
   14000c0ff:	mov    r8,QWORD PTR [rax]
   14000c102:	mov    edx,0x1
   14000c107:	mov    rcx,rax
   14000c10a:	call   QWORD PTR [r8]
   14000c10d:	mov    rax,rsi
   14000c110:	lea    r11,[rsp+0x70]
   14000c115:	mov    rbx,QWORD PTR [r11+0x10]
   14000c119:	mov    rbp,QWORD PTR [r11+0x18]
   14000c11d:	mov    rsi,QWORD PTR [r11+0x20]
   14000c121:	mov    rsp,r11
   14000c124:	pop    rdi
   14000c125:	ret    
   14000c126:	int3   
   14000c127:	int3   
   14000c128:	int3   
   14000c129:	int3   
   14000c12a:	int3   
   14000c12b:	int3   
   14000c12c:	int3   
   14000c12d:	int3   
   14000c12e:	int3   
   14000c12f:	int3   
   14000c130:	mov    QWORD PTR [rsp+0x18],r8
   14000c135:	push   rdi
   14000c136:	sub    rsp,0x120
   14000c13d:	mov    QWORD PTR [rsp+0x90],0xfffffffffffffffe
   14000c149:	mov    QWORD PTR [rsp+0x130],rbx
   14000c151:	mov    rbx,r8
   14000c154:	mov    rdi,rcx
   14000c157:	mov    r8,rdx
   14000c15a:	lea    rdx,[rsp+0x20]
   14000c15f:	mov    rcx,rbx
   14000c162:	call   0x140028a40
   14000c167:	nop
   14000c168:	movzx  eax,BYTE PTR [rsp+0x20]
   14000c16d:	test   al,al
   14000c16f:	je     0x14000c1d9
   14000c171:	lea    rcx,[rsp+0x28]
   14000c176:	cmp    rdi,rcx
   14000c179:	je     0x14000c194
   14000c17b:	or     r9,0xffffffffffffffff
   14000c17f:	xor    r8d,r8d
   14000c182:	lea    rdx,[rsp+0x28]
   14000c187:	mov    rcx,rdi
   14000c18a:	call   0x14001ef20
   14000c18f:	movzx  eax,BYTE PTR [rsp+0x20]
   14000c194:	test   al,al
   14000c196:	je     0x14000c1ab
   14000c198:	cmp    QWORD PTR [rsp+0x40],0x10
   14000c19e:	jb     0x14000c1ab
   14000c1a0:	mov    rcx,QWORD PTR [rsp+0x28]
   14000c1a5:	call   0x140030282
   14000c1aa:	nop
   14000c1ab:	mov    rcx,QWORD PTR [rbx]
   14000c1ae:	test   rcx,rcx
   14000c1b1:	je     0x14000c2c0
   14000c1b7:	mov    rax,QWORD PTR [rcx]
   14000c1ba:	call   QWORD PTR [rax+0x10]
   14000c1bd:	test   rax,rax
   14000c1c0:	je     0x14000c2c0
   14000c1c6:	mov    r8,QWORD PTR [rax]
   14000c1c9:	mov    edx,0x1
   14000c1ce:	mov    rcx,rax
   14000c1d1:	call   QWORD PTR [r8]
   14000c1d4:	jmp    0x14000c2c0
   14000c1d9:	xor    ebx,ebx
   14000c1db:	mov    QWORD PTR [rsp+0x88],rbx
   14000c1e3:	mov    QWORD PTR [rsp+0x60],0xf
   14000c1ec:	mov    QWORD PTR [rsp+0x58],rbx
   14000c1f1:	mov    BYTE PTR [rsp+0x48],bl
   14000c1f5:	lea    r8d,[rbx+0x14]
   14000c1f9:	lea    rdx,[rip+0x317a0]        # 0x14003d9a0
   14000c200:	lea    rcx,[rsp+0x48]
   14000c205:	call   0x14001f070
   14000c20a:	nop
   14000c20b:	lea    rdx,[rip+0x4b846]        # 0x140057a58
   14000c212:	lea    rcx,[rip+0x49737]        # 0x140055950
   14000c219:	call   QWORD PTR [rip+0x2a159]        # 0x140036378
   14000c21f:	mov    r8,rax
   14000c222:	lea    rdx,[rsp+0x48]
   14000c227:	lea    rcx,[rsp+0xb8]
   14000c22f:	call   0x1400034d0
   14000c234:	nop
   14000c235:	lea    r8,[rip+0x3174c]        # 0x14003d988
   14000c23c:	mov    rdx,rax
   14000c23f:	lea    rcx,[rsp+0x98]
   14000c247:	call   0x1400034d0
   14000c24c:	nop
   14000c24d:	cmp    QWORD PTR [rax+0x18],0x10
   14000c252:	jb     0x14000c257
   14000c254:	mov    rax,QWORD PTR [rax]
   14000c257:	mov    QWORD PTR [rsp+0x148],rax
   14000c25f:	lea    rdx,[rsp+0x148]
   14000c267:	lea    rcx,[rsp+0x68]
   14000c26c:	call   QWORD PTR [rip+0x2a1de]        # 0x140036450
   14000c272:	nop
   14000c273:	lea    rax,[rip+0x2e716]        # 0x14003a990
   14000c27a:	mov    QWORD PTR [rsp+0x68],rax
   14000c27f:	mov    QWORD PTR [rsp+0x80],rbx
   14000c287:	lea    rdx,[rsp+0x68]
   14000c28c:	lea    rcx,[rsp+0xd8]
   14000c294:	call   0x140008030
   14000c299:	nop
   14000c29a:	lea    rcx,[rip+0x3146f]        # 0x14003d710
   14000c2a1:	mov    QWORD PTR [rax+0x30],rcx
   14000c2a5:	lea    rcx,[rip+0x313e4]        # 0x14003d690
   14000c2ac:	mov    QWORD PTR [rax+0x38],rcx
   14000c2b0:	mov    DWORD PTR [rax+0x40],0x329
   14000c2b7:	mov    rcx,rax
   14000c2ba:	call   0x14000dd30
   14000c2bf:	nop
   14000c2c0:	mov    rbx,QWORD PTR [rsp+0x130]
   14000c2c8:	add    rsp,0x120
   14000c2cf:	pop    rdi
   14000c2d0:	ret    
   14000c2d1:	int3   
   14000c2d2:	int3   
   14000c2d3:	int3   
   14000c2d4:	int3   
   14000c2d5:	int3   
   14000c2d6:	int3   
   14000c2d7:	int3   
   14000c2d8:	int3   
   14000c2d9:	int3   
   14000c2da:	int3   
   14000c2db:	int3   
   14000c2dc:	int3   
   14000c2dd:	int3   
   14000c2de:	int3   
   14000c2df:	int3   
   14000c2e0:	mov    QWORD PTR [rsp+0x18],r8
   14000c2e5:	push   rdi
   14000c2e6:	sub    rsp,0x120
   14000c2ed:	mov    QWORD PTR [rsp+0x90],0xfffffffffffffffe
   14000c2f9:	mov    QWORD PTR [rsp+0x130],rbx
   14000c301:	mov    rbx,r8
   14000c304:	mov    rdi,rcx
   14000c307:	mov    r8,rdx
   14000c30a:	lea    rdx,[rsp+0x20]
   14000c30f:	mov    rcx,rbx
   14000c312:	call   0x140028c40
   14000c317:	nop
   14000c318:	movzx  eax,BYTE PTR [rsp+0x20]
   14000c31d:	test   al,al
   14000c31f:	je     0x14000c389
   14000c321:	lea    rcx,[rsp+0x28]
   14000c326:	cmp    rdi,rcx
   14000c329:	je     0x14000c344
   14000c32b:	or     r9,0xffffffffffffffff
   14000c32f:	xor    r8d,r8d
   14000c332:	lea    rdx,[rsp+0x28]
   14000c337:	mov    rcx,rdi
   14000c33a:	call   0x14001ef20
   14000c33f:	movzx  eax,BYTE PTR [rsp+0x20]
   14000c344:	test   al,al
   14000c346:	je     0x14000c35b
   14000c348:	cmp    QWORD PTR [rsp+0x40],0x10
   14000c34e:	jb     0x14000c35b
   14000c350:	mov    rcx,QWORD PTR [rsp+0x28]
   14000c355:	call   0x140030282
   14000c35a:	nop
   14000c35b:	mov    rcx,QWORD PTR [rbx]
   14000c35e:	test   rcx,rcx
   14000c361:	je     0x14000c470
   14000c367:	mov    rax,QWORD PTR [rcx]
   14000c36a:	call   QWORD PTR [rax+0x10]
   14000c36d:	test   rax,rax
   14000c370:	je     0x14000c470
   14000c376:	mov    r8,QWORD PTR [rax]
   14000c379:	mov    edx,0x1
   14000c37e:	mov    rcx,rax
   14000c381:	call   QWORD PTR [r8]
   14000c384:	jmp    0x14000c470
   14000c389:	xor    ebx,ebx
   14000c38b:	mov    QWORD PTR [rsp+0x88],rbx
   14000c393:	mov    QWORD PTR [rsp+0x60],0xf
   14000c39c:	mov    QWORD PTR [rsp+0x58],rbx
   14000c3a1:	mov    BYTE PTR [rsp+0x48],bl
   14000c3a5:	lea    r8d,[rbx+0x14]
   14000c3a9:	lea    rdx,[rip+0x315f0]        # 0x14003d9a0
   14000c3b0:	lea    rcx,[rsp+0x48]
   14000c3b5:	call   0x14001f070
   14000c3ba:	nop
   14000c3bb:	lea    rdx,[rip+0x4b696]        # 0x140057a58
   14000c3c2:	lea    rcx,[rip+0x495a7]        # 0x140055970
   14000c3c9:	call   QWORD PTR [rip+0x29fa9]        # 0x140036378
   14000c3cf:	mov    r8,rax
   14000c3d2:	lea    rdx,[rsp+0x48]
   14000c3d7:	lea    rcx,[rsp+0xb8]
   14000c3df:	call   0x1400034d0
   14000c3e4:	nop
   14000c3e5:	lea    r8,[rip+0x3159c]        # 0x14003d988
   14000c3ec:	mov    rdx,rax
   14000c3ef:	lea    rcx,[rsp+0x98]
   14000c3f7:	call   0x1400034d0
   14000c3fc:	nop
   14000c3fd:	cmp    QWORD PTR [rax+0x18],0x10
   14000c402:	jb     0x14000c407
   14000c404:	mov    rax,QWORD PTR [rax]
   14000c407:	mov    QWORD PTR [rsp+0x148],rax
   14000c40f:	lea    rdx,[rsp+0x148]
   14000c417:	lea    rcx,[rsp+0x68]
   14000c41c:	call   QWORD PTR [rip+0x2a02e]        # 0x140036450
   14000c422:	nop
   14000c423:	lea    rax,[rip+0x2e566]        # 0x14003a990
   14000c42a:	mov    QWORD PTR [rsp+0x68],rax
   14000c42f:	mov    QWORD PTR [rsp+0x80],rbx
   14000c437:	lea    rdx,[rsp+0x68]
   14000c43c:	lea    rcx,[rsp+0xd8]
   14000c444:	call   0x140008030
   14000c449:	nop
   14000c44a:	lea    rcx,[rip+0x31adf]        # 0x14003df30
   14000c451:	mov    QWORD PTR [rax+0x30],rcx
   14000c455:	lea    rcx,[rip+0x31234]        # 0x14003d690
   14000c45c:	mov    QWORD PTR [rax+0x38],rcx
   14000c460:	mov    DWORD PTR [rax+0x40],0x329
   14000c467:	mov    rcx,rax
   14000c46a:	call   0x14000dd30
   14000c46f:	nop
   14000c470:	mov    rbx,QWORD PTR [rsp+0x130]
   14000c478:	add    rsp,0x120
   14000c47f:	pop    rdi
   14000c480:	ret    
   14000c481:	int3   
   14000c482:	int3   
   14000c483:	int3   
   14000c484:	int3   
   14000c485:	int3   
   14000c486:	int3   
   14000c487:	int3   
   14000c488:	int3   
   14000c489:	int3   
   14000c48a:	int3   
   14000c48b:	int3   
   14000c48c:	int3   
   14000c48d:	int3   
   14000c48e:	int3   
   14000c48f:	int3   
   14000c490:	mov    QWORD PTR [rsp+0x18],r8
   14000c495:	push   rdi
   14000c496:	sub    rsp,0x120
   14000c49d:	mov    QWORD PTR [rsp+0x90],0xfffffffffffffffe
   14000c4a9:	mov    QWORD PTR [rsp+0x130],rbx
   14000c4b1:	mov    rbx,r8
   14000c4b4:	mov    rdi,rcx
   14000c4b7:	mov    r8,rdx
   14000c4ba:	lea    rdx,[rsp+0x20]
   14000c4bf:	mov    rcx,rbx
   14000c4c2:	call   0x140028e40
   14000c4c7:	nop
   14000c4c8:	movzx  eax,BYTE PTR [rsp+0x20]
   14000c4cd:	test   al,al
   14000c4cf:	je     0x14000c539
   14000c4d1:	lea    rcx,[rsp+0x28]
   14000c4d6:	cmp    rdi,rcx
   14000c4d9:	je     0x14000c4f4
   14000c4db:	or     r9,0xffffffffffffffff
   14000c4df:	xor    r8d,r8d
   14000c4e2:	lea    rdx,[rsp+0x28]
   14000c4e7:	mov    rcx,rdi
   14000c4ea:	call   0x14001ef20
   14000c4ef:	movzx  eax,BYTE PTR [rsp+0x20]
   14000c4f4:	test   al,al
   14000c4f6:	je     0x14000c50b
   14000c4f8:	cmp    QWORD PTR [rsp+0x40],0x10
   14000c4fe:	jb     0x14000c50b
   14000c500:	mov    rcx,QWORD PTR [rsp+0x28]
   14000c505:	call   0x140030282
   14000c50a:	nop
   14000c50b:	mov    rcx,QWORD PTR [rbx]
   14000c50e:	test   rcx,rcx
   14000c511:	je     0x14000c620
   14000c517:	mov    rax,QWORD PTR [rcx]
   14000c51a:	call   QWORD PTR [rax+0x10]
   14000c51d:	test   rax,rax
   14000c520:	je     0x14000c620
   14000c526:	mov    r8,QWORD PTR [rax]
   14000c529:	mov    edx,0x1
   14000c52e:	mov    rcx,rax
   14000c531:	call   QWORD PTR [r8]
   14000c534:	jmp    0x14000c620
   14000c539:	xor    ebx,ebx
   14000c53b:	mov    QWORD PTR [rsp+0x88],rbx
   14000c543:	mov    QWORD PTR [rsp+0x60],0xf
   14000c54c:	mov    QWORD PTR [rsp+0x58],rbx
   14000c551:	mov    BYTE PTR [rsp+0x48],bl
   14000c555:	lea    r8d,[rbx+0x14]
   14000c559:	lea    rdx,[rip+0x31440]        # 0x14003d9a0
   14000c560:	lea    rcx,[rsp+0x48]
   14000c565:	call   0x14001f070
   14000c56a:	nop
   14000c56b:	lea    rdx,[rip+0x4b4e6]        # 0x140057a58
   14000c572:	lea    rcx,[rip+0x49437]        # 0x1400559b0
   14000c579:	call   QWORD PTR [rip+0x29df9]        # 0x140036378
   14000c57f:	mov    r8,rax
   14000c582:	lea    rdx,[rsp+0x48]
   14000c587:	lea    rcx,[rsp+0xb8]
   14000c58f:	call   0x1400034d0
   14000c594:	nop
   14000c595:	lea    r8,[rip+0x313ec]        # 0x14003d988
   14000c59c:	mov    rdx,rax
   14000c59f:	lea    rcx,[rsp+0x98]
   14000c5a7:	call   0x1400034d0
   14000c5ac:	nop
   14000c5ad:	cmp    QWORD PTR [rax+0x18],0x10
   14000c5b2:	jb     0x14000c5b7
   14000c5b4:	mov    rax,QWORD PTR [rax]
   14000c5b7:	mov    QWORD PTR [rsp+0x148],rax
   14000c5bf:	lea    rdx,[rsp+0x148]
   14000c5c7:	lea    rcx,[rsp+0x68]
   14000c5cc:	call   QWORD PTR [rip+0x29e7e]        # 0x140036450
   14000c5d2:	nop
   14000c5d3:	lea    rax,[rip+0x2e3b6]        # 0x14003a990
   14000c5da:	mov    QWORD PTR [rsp+0x68],rax
   14000c5df:	mov    QWORD PTR [rsp+0x80],rbx
   14000c5e7:	lea    rdx,[rsp+0x68]
   14000c5ec:	lea    rcx,[rsp+0xd8]
   14000c5f4:	call   0x140008030
   14000c5f9:	nop
   14000c5fa:	lea    rcx,[rip+0x31e2f]        # 0x14003e430
   14000c601:	mov    QWORD PTR [rax+0x30],rcx
   14000c605:	lea    rcx,[rip+0x31084]        # 0x14003d690
   14000c60c:	mov    QWORD PTR [rax+0x38],rcx
   14000c610:	mov    DWORD PTR [rax+0x40],0x329
   14000c617:	mov    rcx,rax
   14000c61a:	call   0x14000dd30
   14000c61f:	nop
   14000c620:	mov    rbx,QWORD PTR [rsp+0x130]
   14000c628:	add    rsp,0x120
   14000c62f:	pop    rdi
   14000c630:	ret    
   14000c631:	int3   
   14000c632:	int3   
   14000c633:	int3   
   14000c634:	int3   
   14000c635:	int3   
   14000c636:	int3   
   14000c637:	int3   
   14000c638:	int3   
   14000c639:	int3   
   14000c63a:	int3   
   14000c63b:	int3   
   14000c63c:	int3   
   14000c63d:	int3   
   14000c63e:	int3   
   14000c63f:	int3   
   14000c640:	mov    QWORD PTR [rsp+0x18],r8
   14000c645:	push   rdi
   14000c646:	sub    rsp,0x120
   14000c64d:	mov    QWORD PTR [rsp+0x90],0xfffffffffffffffe
   14000c659:	mov    QWORD PTR [rsp+0x130],rbx
   14000c661:	mov    rbx,r8
   14000c664:	mov    rdi,rcx
   14000c667:	mov    r8,rdx
   14000c66a:	lea    rdx,[rsp+0x20]
   14000c66f:	mov    rcx,rbx
   14000c672:	call   0x140029040
   14000c677:	nop
   14000c678:	movzx  eax,BYTE PTR [rsp+0x20]
   14000c67d:	test   al,al
   14000c67f:	je     0x14000c6e9
   14000c681:	lea    rcx,[rsp+0x28]
   14000c686:	cmp    rdi,rcx
   14000c689:	je     0x14000c6a4
   14000c68b:	or     r9,0xffffffffffffffff
   14000c68f:	xor    r8d,r8d
   14000c692:	lea    rdx,[rsp+0x28]
   14000c697:	mov    rcx,rdi
   14000c69a:	call   0x14001ef20
   14000c69f:	movzx  eax,BYTE PTR [rsp+0x20]
   14000c6a4:	test   al,al
   14000c6a6:	je     0x14000c6bb
   14000c6a8:	cmp    QWORD PTR [rsp+0x40],0x10
   14000c6ae:	jb     0x14000c6bb
   14000c6b0:	mov    rcx,QWORD PTR [rsp+0x28]
   14000c6b5:	call   0x140030282
   14000c6ba:	nop
   14000c6bb:	mov    rcx,QWORD PTR [rbx]
   14000c6be:	test   rcx,rcx
   14000c6c1:	je     0x14000c7d0
   14000c6c7:	mov    rax,QWORD PTR [rcx]
   14000c6ca:	call   QWORD PTR [rax+0x10]
   14000c6cd:	test   rax,rax
   14000c6d0:	je     0x14000c7d0
   14000c6d6:	mov    r8,QWORD PTR [rax]
   14000c6d9:	mov    edx,0x1
   14000c6de:	mov    rcx,rax
   14000c6e1:	call   QWORD PTR [r8]
   14000c6e4:	jmp    0x14000c7d0
   14000c6e9:	xor    ebx,ebx
   14000c6eb:	mov    QWORD PTR [rsp+0x88],rbx
   14000c6f3:	mov    QWORD PTR [rsp+0x60],0xf
   14000c6fc:	mov    QWORD PTR [rsp+0x58],rbx
   14000c701:	mov    BYTE PTR [rsp+0x48],bl
   14000c705:	lea    r8d,[rbx+0x14]
   14000c709:	lea    rdx,[rip+0x31290]        # 0x14003d9a0
   14000c710:	lea    rcx,[rsp+0x48]
   14000c715:	call   0x14001f070
   14000c71a:	nop
   14000c71b:	lea    rdx,[rip+0x4b336]        # 0x140057a58
   14000c722:	lea    rcx,[rip+0x49267]        # 0x140055990
   14000c729:	call   QWORD PTR [rip+0x29c49]        # 0x140036378
   14000c72f:	mov    r8,rax
   14000c732:	lea    rdx,[rsp+0x48]
   14000c737:	lea    rcx,[rsp+0xb8]
   14000c73f:	call   0x1400034d0
   14000c744:	nop
   14000c745:	lea    r8,[rip+0x3123c]        # 0x14003d988
   14000c74c:	mov    rdx,rax
   14000c74f:	lea    rcx,[rsp+0x98]
   14000c757:	call   0x1400034d0
   14000c75c:	nop
   14000c75d:	cmp    QWORD PTR [rax+0x18],0x10
   14000c762:	jb     0x14000c767
   14000c764:	mov    rax,QWORD PTR [rax]
   14000c767:	mov    QWORD PTR [rsp+0x148],rax
   14000c76f:	lea    rdx,[rsp+0x148]
   14000c777:	lea    rcx,[rsp+0x68]
   14000c77c:	call   QWORD PTR [rip+0x29cce]        # 0x140036450
   14000c782:	nop
   14000c783:	lea    rax,[rip+0x2e206]        # 0x14003a990
   14000c78a:	mov    QWORD PTR [rsp+0x68],rax
   14000c78f:	mov    QWORD PTR [rsp+0x80],rbx
   14000c797:	lea    rdx,[rsp+0x68]
   14000c79c:	lea    rcx,[rsp+0xd8]
   14000c7a4:	call   0x140008030
   14000c7a9:	nop
   14000c7aa:	lea    rcx,[rip+0x319ff]        # 0x14003e1b0
   14000c7b1:	mov    QWORD PTR [rax+0x30],rcx
   14000c7b5:	lea    rcx,[rip+0x30ed4]        # 0x14003d690
   14000c7bc:	mov    QWORD PTR [rax+0x38],rcx
   14000c7c0:	mov    DWORD PTR [rax+0x40],0x329
   14000c7c7:	mov    rcx,rax
   14000c7ca:	call   0x14000dd30
   14000c7cf:	nop
   14000c7d0:	mov    rbx,QWORD PTR [rsp+0x130]
   14000c7d8:	add    rsp,0x120
   14000c7df:	pop    rdi
   14000c7e0:	ret    
   14000c7e1:	int3   
   14000c7e2:	int3   
   14000c7e3:	int3   
   14000c7e4:	int3   
   14000c7e5:	int3   
   14000c7e6:	int3   
   14000c7e7:	int3   
   14000c7e8:	int3   
   14000c7e9:	int3   
   14000c7ea:	int3   
   14000c7eb:	int3   
   14000c7ec:	int3   
   14000c7ed:	int3   
   14000c7ee:	int3   
   14000c7ef:	int3   
   14000c7f0:	mov    QWORD PTR [rsp+0x18],r8
   14000c7f5:	push   rdi
   14000c7f6:	sub    rsp,0x120
   14000c7fd:	mov    QWORD PTR [rsp+0x90],0xfffffffffffffffe
   14000c809:	mov    QWORD PTR [rsp+0x130],rbx
   14000c811:	mov    rbx,r8
   14000c814:	mov    rdi,rcx
   14000c817:	mov    r8,rdx
   14000c81a:	lea    rdx,[rsp+0x20]
   14000c81f:	mov    rcx,rbx
   14000c822:	call   0x140029240
   14000c827:	nop
   14000c828:	movzx  eax,BYTE PTR [rsp+0x20]
   14000c82d:	test   al,al
   14000c82f:	je     0x14000c899
   14000c831:	lea    rcx,[rsp+0x28]
   14000c836:	cmp    rdi,rcx
   14000c839:	je     0x14000c854
   14000c83b:	or     r9,0xffffffffffffffff
   14000c83f:	xor    r8d,r8d
   14000c842:	lea    rdx,[rsp+0x28]
   14000c847:	mov    rcx,rdi
   14000c84a:	call   0x14001ef20
   14000c84f:	movzx  eax,BYTE PTR [rsp+0x20]
   14000c854:	test   al,al
   14000c856:	je     0x14000c86b
   14000c858:	cmp    QWORD PTR [rsp+0x40],0x10
   14000c85e:	jb     0x14000c86b
   14000c860:	mov    rcx,QWORD PTR [rsp+0x28]
   14000c865:	call   0x140030282
   14000c86a:	nop
   14000c86b:	mov    rcx,QWORD PTR [rbx]
   14000c86e:	test   rcx,rcx
   14000c871:	je     0x14000c980
   14000c877:	mov    rax,QWORD PTR [rcx]
   14000c87a:	call   QWORD PTR [rax+0x10]
   14000c87d:	test   rax,rax
   14000c880:	je     0x14000c980
   14000c886:	mov    r8,QWORD PTR [rax]
   14000c889:	mov    edx,0x1
   14000c88e:	mov    rcx,rax
   14000c891:	call   QWORD PTR [r8]
   14000c894:	jmp    0x14000c980
   14000c899:	xor    ebx,ebx
   14000c89b:	mov    QWORD PTR [rsp+0x88],rbx
   14000c8a3:	mov    QWORD PTR [rsp+0x60],0xf
   14000c8ac:	mov    QWORD PTR [rsp+0x58],rbx
   14000c8b1:	mov    BYTE PTR [rsp+0x48],bl
   14000c8b5:	lea    r8d,[rbx+0x14]
   14000c8b9:	lea    rdx,[rip+0x310e0]        # 0x14003d9a0
   14000c8c0:	lea    rcx,[rsp+0x48]
   14000c8c5:	call   0x14001f070
   14000c8ca:	nop
   14000c8cb:	lea    rdx,[rip+0x4b186]        # 0x140057a58
   14000c8d2:	lea    rcx,[rip+0x492d7]        # 0x140055bb0
   14000c8d9:	call   QWORD PTR [rip+0x29a99]        # 0x140036378
   14000c8df:	mov    r8,rax
   14000c8e2:	lea    rdx,[rsp+0x48]
   14000c8e7:	lea    rcx,[rsp+0xb8]
   14000c8ef:	call   0x1400034d0
   14000c8f4:	nop
   14000c8f5:	lea    r8,[rip+0x3108c]        # 0x14003d988
   14000c8fc:	mov    rdx,rax
   14000c8ff:	lea    rcx,[rsp+0x98]
   14000c907:	call   0x1400034d0
   14000c90c:	nop
   14000c90d:	cmp    QWORD PTR [rax+0x18],0x10
   14000c912:	jb     0x14000c917
   14000c914:	mov    rax,QWORD PTR [rax]
   14000c917:	mov    QWORD PTR [rsp+0x148],rax
   14000c91f:	lea    rdx,[rsp+0x148]
   14000c927:	lea    rcx,[rsp+0x68]
   14000c92c:	call   QWORD PTR [rip+0x29b1e]        # 0x140036450
   14000c932:	nop
   14000c933:	lea    rax,[rip+0x2e056]        # 0x14003a990
   14000c93a:	mov    QWORD PTR [rsp+0x68],rax
   14000c93f:	mov    QWORD PTR [rsp+0x80],rbx
   14000c947:	lea    rdx,[rsp+0x68]
   14000c94c:	lea    rcx,[rsp+0xd8]
   14000c954:	call   0x140008030
   14000c959:	nop
   14000c95a:	lea    rcx,[rip+0x325cf]        # 0x14003ef30
   14000c961:	mov    QWORD PTR [rax+0x30],rcx
   14000c965:	lea    rcx,[rip+0x30d24]        # 0x14003d690
   14000c96c:	mov    QWORD PTR [rax+0x38],rcx
   14000c970:	mov    DWORD PTR [rax+0x40],0x329
   14000c977:	mov    rcx,rax
   14000c97a:	call   0x14000dd30
   14000c97f:	nop
   14000c980:	mov    rbx,QWORD PTR [rsp+0x130]
   14000c988:	add    rsp,0x120
   14000c98f:	pop    rdi
   14000c990:	ret    
   14000c991:	int3   
   14000c992:	int3   
   14000c993:	int3   
   14000c994:	int3   
   14000c995:	int3   
   14000c996:	int3   
   14000c997:	int3   
   14000c998:	int3   
   14000c999:	int3   
   14000c99a:	int3   
   14000c99b:	int3   
   14000c99c:	int3   
   14000c99d:	int3   
   14000c99e:	int3   
   14000c99f:	int3   
   14000c9a0:	mov    BYTE PTR [rsp+0x18],r8b
   14000c9a5:	push   rbp
   14000c9a6:	lea    rbp,[rsp-0x20]
   14000c9ab:	sub    rsp,0x120
   14000c9b2:	mov    QWORD PTR [rbp-0x70],0xfffffffffffffffe
   14000c9ba:	mov    QWORD PTR [rsp+0x130],rbx
   14000c9c2:	mov    rbx,rcx
   14000c9c5:	mov    r8,rdx
   14000c9c8:	lea    rdx,[rsp+0x20]
   14000c9cd:	lea    rcx,[rbp+0x40]
   14000c9d1:	call   0x1400289e0
   14000c9d6:	nop
   14000c9d7:	movzx  eax,BYTE PTR [rsp+0x20]
   14000c9dc:	test   al,al
   14000c9de:	je     0x14000ca26
   14000c9e0:	lea    rcx,[rsp+0x28]
   14000c9e5:	cmp    rbx,rcx
   14000c9e8:	je     0x14000ca03
   14000c9ea:	or     r9,0xffffffffffffffff
   14000c9ee:	xor    r8d,r8d
   14000c9f1:	lea    rdx,[rsp+0x28]
   14000c9f6:	mov    rcx,rbx
   14000c9f9:	call   0x14001ef20
   14000c9fe:	movzx  eax,BYTE PTR [rsp+0x20]
   14000ca03:	test   al,al
   14000ca05:	je     0x14000caf1
   14000ca0b:	cmp    QWORD PTR [rsp+0x40],0x10
   14000ca11:	jb     0x14000caf1
   14000ca17:	mov    rcx,QWORD PTR [rsp+0x28]
   14000ca1c:	call   0x140030282
   14000ca21:	jmp    0x14000caf1
   14000ca26:	xor    ebx,ebx
   14000ca28:	mov    QWORD PTR [rbp-0x78],rbx
   14000ca2c:	mov    QWORD PTR [rsp+0x60],0xf
   14000ca35:	mov    QWORD PTR [rsp+0x58],rbx
   14000ca3a:	mov    BYTE PTR [rsp+0x48],bl
   14000ca3e:	lea    r8d,[rbx+0x14]
   14000ca42:	lea    rdx,[rip+0x30f57]        # 0x14003d9a0
   14000ca49:	lea    rcx,[rsp+0x48]
   14000ca4e:	call   0x14001f070
   14000ca53:	nop
   14000ca54:	lea    rdx,[rip+0x4affd]        # 0x140057a58
   14000ca5b:	lea    rcx,[rip+0x4876e]        # 0x1400551d0
   14000ca62:	call   QWORD PTR [rip+0x29910]        # 0x140036378
   14000ca68:	mov    r8,rax
   14000ca6b:	lea    rdx,[rsp+0x48]
   14000ca70:	lea    rcx,[rbp-0x48]
   14000ca74:	call   0x1400034d0
   14000ca79:	nop
   14000ca7a:	lea    r8,[rip+0x30f07]        # 0x14003d988
   14000ca81:	mov    rdx,rax
   14000ca84:	lea    rcx,[rbp-0x68]
   14000ca88:	call   0x1400034d0
   14000ca8d:	nop
   14000ca8e:	cmp    QWORD PTR [rax+0x18],0x10
   14000ca93:	jb     0x14000ca98
   14000ca95:	mov    rax,QWORD PTR [rax]
   14000ca98:	mov    QWORD PTR [rbp+0x48],rax
   14000ca9c:	lea    rdx,[rbp+0x48]
   14000caa0:	lea    rcx,[rsp+0x68]
   14000caa5:	call   QWORD PTR [rip+0x299a5]        # 0x140036450
   14000caab:	nop
   14000caac:	lea    rax,[rip+0x2dedd]        # 0x14003a990
   14000cab3:	mov    QWORD PTR [rsp+0x68],rax
   14000cab8:	mov    QWORD PTR [rbp-0x80],rbx
   14000cabc:	lea    rdx,[rsp+0x68]
   14000cac1:	lea    rcx,[rbp-0x28]
   14000cac5:	call   0x140008030
   14000caca:	nop
   14000cacb:	lea    rcx,[rip+0x30eee]        # 0x14003d9c0
   14000cad2:	mov    QWORD PTR [rax+0x30],rcx
   14000cad6:	lea    rcx,[rip+0x30bb3]        # 0x14003d690
   14000cadd:	mov    QWORD PTR [rax+0x38],rcx
   14000cae1:	mov    DWORD PTR [rax+0x40],0x329
   14000cae8:	mov    rcx,rax
   14000caeb:	call   0x14000dd30
   14000caf0:	nop
   14000caf1:	mov    rbx,QWORD PTR [rsp+0x130]
   14000caf9:	add    rsp,0x120
   14000cb00:	pop    rbp
   14000cb01:	ret    
   14000cb02:	int3   
   14000cb03:	int3   
   14000cb04:	int3   
   14000cb05:	int3   
   14000cb06:	int3   
   14000cb07:	int3   
   14000cb08:	int3   
   14000cb09:	int3   
   14000cb0a:	int3   
   14000cb0b:	int3   
   14000cb0c:	int3   
   14000cb0d:	int3   
   14000cb0e:	int3   
   14000cb0f:	int3   
   14000cb10:	mov    QWORD PTR [rsp+0x18],r8
   14000cb15:	push   rdi
   14000cb16:	sub    rsp,0x120
   14000cb1d:	mov    QWORD PTR [rsp+0x90],0xfffffffffffffffe
   14000cb29:	mov    QWORD PTR [rsp+0x130],rbx
   14000cb31:	mov    rbx,r8
   14000cb34:	mov    rdi,rcx
   14000cb37:	mov    r8,rdx
   14000cb3a:	lea    rdx,[rsp+0x20]
   14000cb3f:	mov    rcx,rbx
   14000cb42:	call   0x140029440
   14000cb47:	nop
   14000cb48:	movzx  eax,BYTE PTR [rsp+0x20]
   14000cb4d:	test   al,al
   14000cb4f:	je     0x14000cbb9
   14000cb51:	lea    rcx,[rsp+0x28]
   14000cb56:	cmp    rdi,rcx
   14000cb59:	je     0x14000cb74
   14000cb5b:	or     r9,0xffffffffffffffff
   14000cb5f:	xor    r8d,r8d
   14000cb62:	lea    rdx,[rsp+0x28]
   14000cb67:	mov    rcx,rdi
   14000cb6a:	call   0x14001ef20
   14000cb6f:	movzx  eax,BYTE PTR [rsp+0x20]
   14000cb74:	test   al,al
   14000cb76:	je     0x14000cb8b
   14000cb78:	cmp    QWORD PTR [rsp+0x40],0x10
   14000cb7e:	jb     0x14000cb8b
   14000cb80:	mov    rcx,QWORD PTR [rsp+0x28]
   14000cb85:	call   0x140030282
   14000cb8a:	nop
   14000cb8b:	mov    rcx,QWORD PTR [rbx]
   14000cb8e:	test   rcx,rcx
   14000cb91:	je     0x14000cca0
   14000cb97:	mov    rax,QWORD PTR [rcx]
   14000cb9a:	call   QWORD PTR [rax+0x10]
   14000cb9d:	test   rax,rax
   14000cba0:	je     0x14000cca0
   14000cba6:	mov    r8,QWORD PTR [rax]
   14000cba9:	mov    edx,0x1
   14000cbae:	mov    rcx,rax
   14000cbb1:	call   QWORD PTR [r8]
   14000cbb4:	jmp    0x14000cca0
   14000cbb9:	xor    ebx,ebx
   14000cbbb:	mov    QWORD PTR [rsp+0x88],rbx
   14000cbc3:	mov    QWORD PTR [rsp+0x60],0xf
   14000cbcc:	mov    QWORD PTR [rsp+0x58],rbx
   14000cbd1:	mov    BYTE PTR [rsp+0x48],bl
   14000cbd5:	lea    r8d,[rbx+0x14]
   14000cbd9:	lea    rdx,[rip+0x30dc0]        # 0x14003d9a0
   14000cbe0:	lea    rcx,[rsp+0x48]
   14000cbe5:	call   0x14001f070
   14000cbea:	nop
   14000cbeb:	lea    rdx,[rip+0x4ae66]        # 0x140057a58
   14000cbf2:	lea    rcx,[rip+0x4862f]        # 0x140055228
   14000cbf9:	call   QWORD PTR [rip+0x29779]        # 0x140036378
   14000cbff:	mov    r8,rax
   14000cc02:	lea    rdx,[rsp+0x48]
   14000cc07:	lea    rcx,[rsp+0xb8]
   14000cc0f:	call   0x1400034d0
   14000cc14:	nop
   14000cc15:	lea    r8,[rip+0x30d6c]        # 0x14003d988
   14000cc1c:	mov    rdx,rax
   14000cc1f:	lea    rcx,[rsp+0x98]
   14000cc27:	call   0x1400034d0
   14000cc2c:	nop
   14000cc2d:	cmp    QWORD PTR [rax+0x18],0x10
   14000cc32:	jb     0x14000cc37
   14000cc34:	mov    rax,QWORD PTR [rax]
   14000cc37:	mov    QWORD PTR [rsp+0x148],rax
   14000cc3f:	lea    rdx,[rsp+0x148]
   14000cc47:	lea    rcx,[rsp+0x68]
   14000cc4c:	call   QWORD PTR [rip+0x297fe]        # 0x140036450
   14000cc52:	nop
   14000cc53:	lea    rax,[rip+0x2dd36]        # 0x14003a990
   14000cc5a:	mov    QWORD PTR [rsp+0x68],rax
   14000cc5f:	mov    QWORD PTR [rsp+0x80],rbx
   14000cc67:	lea    rdx,[rsp+0x68]
   14000cc6c:	lea    rcx,[rsp+0xd8]
   14000cc74:	call   0x140008030
   14000cc79:	nop
   14000cc7a:	lea    rcx,[rip+0x3105f]        # 0x14003dce0
   14000cc81:	mov    QWORD PTR [rax+0x30],rcx
   14000cc85:	lea    rcx,[rip+0x30a04]        # 0x14003d690
   14000cc8c:	mov    QWORD PTR [rax+0x38],rcx
   14000cc90:	mov    DWORD PTR [rax+0x40],0x329
   14000cc97:	mov    rcx,rax
   14000cc9a:	call   0x14000dd30
   14000cc9f:	nop
   14000cca0:	mov    rbx,QWORD PTR [rsp+0x130]
   14000cca8:	add    rsp,0x120
   14000ccaf:	pop    rdi
   14000ccb0:	ret    
   14000ccb1:	int3   
   14000ccb2:	int3   
   14000ccb3:	int3   
   14000ccb4:	int3   
   14000ccb5:	int3   
   14000ccb6:	int3   
   14000ccb7:	int3   
   14000ccb8:	int3   
   14000ccb9:	int3   
   14000ccba:	int3   
   14000ccbb:	int3   
   14000ccbc:	int3   
   14000ccbd:	int3   
   14000ccbe:	int3   
   14000ccbf:	int3   
   14000ccc0:	mov    QWORD PTR [rcx],rdx
   14000ccc3:	mov    BYTE PTR [rcx+0x8],r8b
   14000ccc7:	mov    BYTE PTR [rcx+0x9],r9b
   14000cccb:	mov    rax,rcx
   14000ccce:	ret    
   14000cccf:	int3   
   14000ccd0:	cmp    QWORD PTR [rdx+0x18],0x10
   14000ccd5:	jb     0x14000cce1
   14000ccd7:	mov    rax,QWORD PTR [rdx]
   14000ccda:	mov    QWORD PTR [rcx],rax
   14000ccdd:	mov    rax,rcx
   14000cce0:	ret    
   14000cce1:	mov    QWORD PTR [rcx],rdx
   14000cce4:	mov    rax,rcx
   14000cce7:	ret    
   14000cce8:	int3   
   14000cce9:	int3   
   14000ccea:	int3   
   14000cceb:	int3   
   14000ccec:	int3   
   14000cced:	int3   
   14000ccee:	int3   
   14000ccef:	int3   
   14000ccf0:	cmp    QWORD PTR [rdx+0x18],0x10
   14000ccf5:	mov    r9,rcx
   14000ccf8:	jb     0x14000cd0b
   14000ccfa:	mov    r8,QWORD PTR [rdx]
   14000ccfd:	mov    rcx,QWORD PTR [rdx+0x10]
   14000cd01:	mov    rax,r9
   14000cd04:	add    rcx,r8
   14000cd07:	mov    QWORD PTR [r9],rcx
   14000cd0a:	ret    
   14000cd0b:	mov    rcx,QWORD PTR [rdx+0x10]
   14000cd0f:	mov    r8,rdx
   14000cd12:	mov    rax,r9
   14000cd15:	add    rcx,rdx
   14000cd18:	mov    QWORD PTR [r9],rcx
   14000cd1b:	ret    
   14000cd1c:	int3   
   14000cd1d:	int3   
   14000cd1e:	int3   
   14000cd1f:	int3   
   14000cd20:	jmp    0x14000ceb0
   14000cd25:	int3   
   14000cd26:	int3   
   14000cd27:	int3   
   14000cd28:	int3   
   14000cd29:	int3   
   14000cd2a:	int3   
   14000cd2b:	int3   
   14000cd2c:	int3   
   14000cd2d:	int3   
   14000cd2e:	int3   
   14000cd2f:	int3   
   14000cd30:	jmp    0x14000ceb0
   14000cd35:	int3   
   14000cd36:	int3   
   14000cd37:	int3   
   14000cd38:	int3   
   14000cd39:	int3   
   14000cd3a:	int3   
   14000cd3b:	int3   
   14000cd3c:	int3   
   14000cd3d:	int3   
   14000cd3e:	int3   
   14000cd3f:	int3   
   14000cd40:	jmp    0x14000ceb0
   14000cd45:	int3   
   14000cd46:	int3   
   14000cd47:	int3   
   14000cd48:	int3   
   14000cd49:	int3   
   14000cd4a:	int3   
   14000cd4b:	int3   
   14000cd4c:	int3   
   14000cd4d:	int3   
   14000cd4e:	int3   
   14000cd4f:	int3   
   14000cd50:	jmp    0x14000d070
   14000cd55:	int3   
   14000cd56:	int3   
   14000cd57:	int3   
   14000cd58:	int3   
   14000cd59:	int3   
   14000cd5a:	int3   
   14000cd5b:	int3   
   14000cd5c:	int3   
   14000cd5d:	int3   
   14000cd5e:	int3   
   14000cd5f:	int3   
   14000cd60:	jmp    0x14000d070
   14000cd65:	int3   
   14000cd66:	int3   
   14000cd67:	int3   
   14000cd68:	int3   
   14000cd69:	int3   
   14000cd6a:	int3   
   14000cd6b:	int3   
   14000cd6c:	int3   
   14000cd6d:	int3   
   14000cd6e:	int3   
   14000cd6f:	int3   
   14000cd70:	jmp    0x14000d070
   14000cd75:	int3   
   14000cd76:	int3   
   14000cd77:	int3   
   14000cd78:	int3   
   14000cd79:	int3   
   14000cd7a:	int3   
   14000cd7b:	int3   
   14000cd7c:	int3   
   14000cd7d:	int3   
   14000cd7e:	int3   
   14000cd7f:	int3   
   14000cd80:	sub    rsp,0x28
   14000cd84:	mov    rax,QWORD PTR [rcx]
   14000cd87:	movsxd r9,DWORD PTR [rax+0x4]
   14000cd8b:	mov    rcx,QWORD PTR [r9+rcx*1+0x48]
   14000cd90:	call   QWORD PTR [rip+0x2943a]        # 0x1400361d0
   14000cd96:	or     rcx,0xffffffffffffffff
   14000cd9a:	test   rax,rax
   14000cd9d:	cmovne rcx,rax
   14000cda1:	mov    rax,rcx
   14000cda4:	add    rsp,0x28
   14000cda8:	ret    
   14000cda9:	int3   
   14000cdaa:	int3   
   14000cdab:	int3   
   14000cdac:	int3   
   14000cdad:	int3   
   14000cdae:	int3   
   14000cdaf:	int3   
   14000cdb0:	xor    eax,eax
   14000cdb2:	ret    
   14000cdb3:	int3   
   14000cdb4:	int3   
   14000cdb5:	int3   
   14000cdb6:	int3   
   14000cdb7:	int3   
   14000cdb8:	int3   
   14000cdb9:	int3   
   14000cdba:	int3   
   14000cdbb:	int3   
   14000cdbc:	int3   
   14000cdbd:	int3   
   14000cdbe:	int3   
   14000cdbf:	int3   
   14000cdc0:	xor    eax,eax
   14000cdc2:	ret    
   14000cdc3:	int3   
   14000cdc4:	int3   
   14000cdc5:	int3   
   14000cdc6:	int3   
   14000cdc7:	int3   
   14000cdc8:	int3   
   14000cdc9:	int3   
   14000cdca:	int3   
   14000cdcb:	int3   
   14000cdcc:	int3   
   14000cdcd:	int3   
   14000cdce:	int3   
   14000cdcf:	int3   
   14000cdd0:	xor    eax,eax
   14000cdd2:	ret    
   14000cdd3:	int3   
   14000cdd4:	int3   
   14000cdd5:	int3   
   14000cdd6:	int3   
   14000cdd7:	int3   
   14000cdd8:	int3   
   14000cdd9:	int3   
   14000cdda:	int3   
   14000cddb:	int3   
   14000cddc:	int3   
   14000cddd:	int3   
   14000cdde:	int3   
   14000cddf:	int3   
   14000cde0:	sub    rsp,0x28
   14000cde4:	call   QWORD PTR [rip+0x293e6]        # 0x1400361d0
   14000cdea:	or     rcx,0xffffffffffffffff
   14000cdee:	test   rax,rax
   14000cdf1:	cmovne rcx,rax
   14000cdf5:	mov    rax,rcx
   14000cdf8:	add    rsp,0x28
   14000cdfc:	ret    
   14000cdfd:	int3   
   14000cdfe:	int3   
   14000cdff:	int3   
   14000ce00:	mov    rax,r9
   14000ce03:	mov    r9,r8
   14000ce06:	mov    r8,rdx
   14000ce09:	mov    rdx,rax
   14000ce0c:	jmp    0x14000ceb0
   14000ce11:	int3   
   14000ce12:	int3   
   14000ce13:	int3   
   14000ce14:	int3   
   14000ce15:	int3   
   14000ce16:	int3   
   14000ce17:	int3   
   14000ce18:	int3   
   14000ce19:	int3   
   14000ce1a:	int3   
   14000ce1b:	int3   
   14000ce1c:	int3   
   14000ce1d:	int3   
   14000ce1e:	int3   
   14000ce1f:	int3   
   14000ce20:	mov    rax,r9
   14000ce23:	mov    r9,r8
   14000ce26:	mov    r8,rdx
   14000ce29:	mov    rdx,rax
   14000ce2c:	jmp    0x14000d070
   14000ce31:	int3   
   14000ce32:	int3   
   14000ce33:	int3   
   14000ce34:	int3   
   14000ce35:	int3   
   14000ce36:	int3   
   14000ce37:	int3   
   14000ce38:	int3   
   14000ce39:	int3   
   14000ce3a:	int3   
   14000ce3b:	int3   
   14000ce3c:	int3   
   14000ce3d:	int3   
   14000ce3e:	int3   
   14000ce3f:	int3   
   14000ce40:	xor    eax,eax
   14000ce42:	ret    
   14000ce43:	int3   
   14000ce44:	int3   
   14000ce45:	int3   
   14000ce46:	int3   
   14000ce47:	int3   
   14000ce48:	int3   
   14000ce49:	int3   
   14000ce4a:	int3   
   14000ce4b:	int3   
   14000ce4c:	int3   
   14000ce4d:	int3   
   14000ce4e:	int3   
   14000ce4f:	int3   
   14000ce50:	sub    rsp,0x28
   14000ce54:	mov    r9,QWORD PTR [rcx]
   14000ce57:	mov    rax,QWORD PTR [r9]
   14000ce5a:	movsxd rcx,DWORD PTR [rax+0x4]
   14000ce5e:	mov    rcx,QWORD PTR [rcx+r9*1+0x48]
   14000ce63:	call   QWORD PTR [rip+0x29367]        # 0x1400361d0
   14000ce69:	or     rcx,0xffffffffffffffff
   14000ce6d:	test   rax,rax
   14000ce70:	cmovne rcx,rax
   14000ce74:	mov    rax,rcx
   14000ce77:	add    rsp,0x28
   14000ce7b:	ret    
   14000ce7c:	int3   
   14000ce7d:	int3   
   14000ce7e:	int3   
   14000ce7f:	int3   
   14000ce80:	rex push rbx
   14000ce82:	sub    rsp,0x20
   14000ce86:	mov    rbx,rcx
   14000ce89:	call   QWORD PTR [rip+0x29341]        # 0x1400361d0
   14000ce8f:	test   rax,rax
   14000ce92:	jne    0x14000ce9f
   14000ce94:	movzx  eax,BYTE PTR [rbx+0x68]
   14000ce98:	and    al,0x1
   14000ce9a:	neg    al
   14000ce9c:	sbb    rax,rax
   14000ce9f:	add    rsp,0x20
   14000cea3:	pop    rbx
   14000cea4:	ret    
   14000cea5:	int3   
   14000cea6:	int3   
   14000cea7:	int3   
   14000cea8:	int3   
   14000cea9:	int3   
   14000ceaa:	int3   
   14000ceab:	int3   
   14000ceac:	int3   
   14000cead:	int3   
   14000ceae:	int3   
   14000ceaf:	int3   
   14000ceb0:	rex push rbx
   14000ceb2:	push   rsi
   14000ceb3:	push   rdi
   14000ceb4:	push   r12
   14000ceb6:	push   r13
   14000ceb8:	push   r14
   14000ceba:	push   r15
   14000cebc:	sub    rsp,0x30
   14000cec0:	mov    r14,rcx
   14000cec3:	mov    rcx,QWORD PTR [rcx]
   14000cec6:	mov    r10,r9
   14000cec9:	mov    eax,DWORD PTR [rcx+0x40]
   14000cecc:	mov    r12,r8
   14000cecf:	mov    r13,rdx
   14000ced2:	test   al,0x1
   14000ced4:	jne    0x14000ceeb
   14000ced6:	or     eax,0x1
   14000ced9:	mov    DWORD PTR [rcx+0x40],eax
   14000cedc:	mov    r9,QWORD PTR [r14]
   14000cedf:	mov    rax,QWORD PTR [r9+0x20]
   14000cee3:	mov    QWORD PTR [r9+0x30],rax
   14000cee7:	mov    QWORD PTR [r9+0x38],rax
   14000ceeb:	mov    rsi,QWORD PTR [r14]
   14000ceee:	lea    r15,[r8+r10*1]
   14000cef2:	mov    QWORD PTR [rsp+0x78],rbp
   14000cef7:	mov    ebx,DWORD PTR [rsi+0x40]
   14000cefa:	mov    QWORD PTR [rsp+0x70],r8
   14000ceff:	shr    ebx,0x2
   14000cf02:	not    ebx
   14000cf04:	and    ebx,0x1
   14000cf07:	or     ebx,0x4
   14000cf0a:	nop    WORD PTR [rax+rax*1+0x0]
   14000cf10:	mov    rax,QWORD PTR [rsi+0x30]
   14000cf14:	mov    r8,QWORD PTR [rsi+0x38]
   14000cf18:	cmp    ebx,0x4
   14000cf1b:	sete   dil
   14000cf1f:	cmp    rax,r8
   14000cf22:	jne    0x14000cf2d
   14000cf24:	test   dil,dil
   14000cf27:	je     0x14000cfb4
   14000cf2d:	mov    rbp,QWORD PTR [r14]
   14000cf30:	lea    r9,[rsp+0x70]
   14000cf35:	lea    rdx,[rsp+0x80]
   14000cf3d:	mov    rcx,rbp
   14000cf40:	mov    QWORD PTR [rsp+0x80],rax
   14000cf48:	mov    QWORD PTR [rsp+0x20],r15
   14000cf4d:	call   QWORD PTR [rip+0x296ad]        # 0x140036600
   14000cf53:	mov    rax,QWORD PTR [rip+0x2967e]        # 0x1400365d8
   14000cf5a:	test   dil,dil
   14000cf5d:	jne    0x14000cf66
   14000cf5f:	mov    rax,QWORD PTR [rip+0x2967a]        # 0x1400365e0
   14000cf66:	mov    edx,DWORD PTR [rax]
   14000cf68:	mov    rcx,rbp
   14000cf6b:	call   QWORD PTR [rip+0x29627]        # 0x140036598
   14000cf71:	lea    r8,[rsp+0x70]
   14000cf76:	lea    rdx,[rsp+0x80]
   14000cf7e:	mov    r9b,0x1
   14000cf81:	mov    rcx,rbp
   14000cf84:	mov    edi,eax
   14000cf86:	call   QWORD PTR [rip+0x29604]        # 0x140036590
   14000cf8c:	mov    ecx,edi
   14000cf8e:	call   QWORD PTR [rip+0x29674]        # 0x140036608
   14000cf94:	mov    rcx,QWORD PTR [rip+0x29635]        # 0x1400365d0
   14000cf9b:	mov    rax,QWORD PTR [rsp+0x80]
   14000cfa3:	cmp    edi,DWORD PTR [rcx]
   14000cfa5:	mov    QWORD PTR [rsi+0x30],rax
   14000cfa9:	sete   cl
   14000cfac:	test   cl,cl
   14000cfae:	jne    0x14000d039
   14000cfb4:	cmp    ebx,0x6
   14000cfb7:	jne    0x14000cfc3
   14000cfb9:	mov    rax,QWORD PTR [rsi+0x38]
   14000cfbd:	cmp    QWORD PTR [rsi+0x30],rax
   14000cfc1:	je     0x14000d02f
   14000cfc3:	cmp    QWORD PTR [rsp+0x70],r15
   14000cfc8:	je     0x14000d02f
   14000cfca:	cmp    ebx,0x5
   14000cfcd:	jne    0x14000cf10
   14000cfd3:	mov    rax,QWORD PTR [r14]
   14000cfd6:	mov    rcx,r13
   14000cfd9:	mov    r8,QWORD PTR [rax+0x28]
   14000cfdd:	mov    rdx,QWORD PTR [rax+0x20]
   14000cfe1:	call   QWORD PTR [rip+0x291e9]        # 0x1400361d0
   14000cfe7:	mov    rdx,rax
   14000cfea:	test   rax,rax
   14000cfed:	jne    0x14000cffb
   14000cfef:	movzx  eax,BYTE PTR [r13+0x68]
   14000cff4:	and    al,0x1
   14000cff6:	neg    al
   14000cff8:	sbb    rdx,rdx
   14000cffb:	cmp    rdx,0xffffffffffffffff
   14000cfff:	jne    0x14000d010
   14000d001:	mov    rax,QWORD PTR [r14]
   14000d004:	lea    ebx,[rdx+0x5]
   14000d007:	or     DWORD PTR [rax+0x40],0x4
   14000d00b:	jmp    0x14000cf10
   14000d010:	mov    rcx,QWORD PTR [r14]
   14000d013:	mov    rax,QWORD PTR [rcx+0x20]
   14000d017:	mov    QWORD PTR [rcx+0x30],rax
   14000d01b:	add    rax,rdx
   14000d01e:	neg    rdx
   14000d021:	sbb    ebx,ebx
   14000d023:	mov    QWORD PTR [rcx+0x38],rax
   14000d027:	add    ebx,0x6
   14000d02a:	jmp    0x14000cf10
   14000d02f:	mov    rax,QWORD PTR [rsp+0x70]
   14000d034:	sub    rax,r12
   14000d037:	jmp    0x14000d04c
   14000d039:	mov    rcx,QWORD PTR [rsp+0x70]
   14000d03e:	mov    rax,0xffffffffffffffff
   14000d045:	sub    rcx,r12
   14000d048:	cmovne rax,rcx
   14000d04c:	mov    rbp,QWORD PTR [rsp+0x78]
   14000d051:	add    rsp,0x30
   14000d055:	pop    r15
   14000d057:	pop    r14
   14000d059:	pop    r13
   14000d05b:	pop    r12
   14000d05d:	pop    rdi
   14000d05e:	pop    rsi
   14000d05f:	pop    rbx
   14000d060:	ret    
   14000d061:	int3   
   14000d062:	int3   
   14000d063:	int3   
   14000d064:	int3   
   14000d065:	int3   
   14000d066:	int3   
   14000d067:	int3   
   14000d068:	int3   
   14000d069:	int3   
   14000d06a:	int3   
   14000d06b:	int3   
   14000d06c:	int3   
   14000d06d:	int3   
   14000d06e:	int3   
   14000d06f:	int3   
   14000d070:	rex push rbx
   14000d072:	push   rbp
   14000d073:	push   r12
   14000d075:	push   r13
   14000d077:	push   r14
   14000d079:	push   r15
   14000d07b:	sub    rsp,0x38
   14000d07f:	mov    r14,rcx
   14000d082:	mov    rcx,QWORD PTR [rcx]
   14000d085:	mov    r10,r9
   14000d088:	mov    eax,DWORD PTR [rcx+0x48]
   14000d08b:	mov    r13,r8
   14000d08e:	mov    r15,rdx
   14000d091:	test   al,0x1
   14000d093:	jne    0x14000d0aa
   14000d095:	or     eax,0x1
   14000d098:	mov    DWORD PTR [rcx+0x48],eax
   14000d09b:	mov    r9,QWORD PTR [r14]
   14000d09e:	mov    rax,QWORD PTR [r9+0x28]
   14000d0a2:	mov    QWORD PTR [r9+0x38],rax
   14000d0a6:	mov    QWORD PTR [r9+0x40],rax
   14000d0aa:	mov    rbp,QWORD PTR [r14]
   14000d0ad:	mov    QWORD PTR [rsp+0x78],rsi
   14000d0b2:	lea    r12,[r10+r8*1]
   14000d0b6:	mov    ebx,DWORD PTR [rbp+0x48]
   14000d0b9:	mov    QWORD PTR [rsp+0x70],r8
   14000d0be:	mov    QWORD PTR [rsp+0x30],rdi
   14000d0c3:	shr    ebx,0x2
   14000d0c6:	not    ebx
   14000d0c8:	and    ebx,0x1
   14000d0cb:	or     ebx,0x4
   14000d0ce:	xchg   ax,ax
   14000d0d0:	mov    rax,QWORD PTR [rbp+0x38]
   14000d0d4:	mov    r8,QWORD PTR [rbp+0x40]
   14000d0d8:	cmp    rax,r8
   14000d0db:	jne    0x14000d0e2
   14000d0dd:	cmp    ebx,0x4
   14000d0e0:	jne    0x14000d160
   14000d0e2:	mov    rsi,QWORD PTR [r14]
   14000d0e5:	lea    r9,[rsp+0x70]
   14000d0ea:	lea    rdx,[rsp+0x80]
   14000d0f2:	mov    rcx,rsi
   14000d0f5:	mov    QWORD PTR [rsp+0x80],rax
   14000d0fd:	mov    QWORD PTR [rsp+0x20],r12
   14000d102:	call   QWORD PTR [rip+0x294f8]        # 0x140036600
   14000d108:	mov    rax,QWORD PTR [rip+0x294d9]        # 0x1400365e8
   14000d10f:	mov    rcx,rsi
   14000d112:	mov    edx,DWORD PTR [rax]
   14000d114:	call   QWORD PTR [rip+0x29486]        # 0x1400365a0
   14000d11a:	lea    r8,[rsp+0x70]
   14000d11f:	lea    rdx,[rsp+0x80]
   14000d127:	xor    r9d,r9d
   14000d12a:	mov    rcx,rsi
   14000d12d:	mov    edi,eax
   14000d12f:	call   QWORD PTR [rip+0x2945b]        # 0x140036590
   14000d135:	mov    ecx,edi
   14000d137:	call   QWORD PTR [rip+0x294cb]        # 0x140036608
   14000d13d:	mov    rcx,QWORD PTR [rip+0x2948c]        # 0x1400365d0
   14000d144:	cmp    edi,DWORD PTR [rcx]
   14000d146:	sete   dl
   14000d149:	mov    BYTE PTR [rsi+0x20],dl
   14000d14c:	mov    rax,QWORD PTR [rsp+0x80]
   14000d154:	mov    QWORD PTR [rbp+0x38],rax
   14000d158:	test   dl,dl
   14000d15a:	jne    0x14000d1e5
   14000d160:	cmp    ebx,0x6
   14000d163:	jne    0x14000d16f
   14000d165:	mov    rax,QWORD PTR [rbp+0x40]
   14000d169:	cmp    QWORD PTR [rbp+0x38],rax
   14000d16d:	je     0x14000d1db
   14000d16f:	cmp    QWORD PTR [rsp+0x70],r12
   14000d174:	je     0x14000d1db
   14000d176:	cmp    ebx,0x5
   14000d179:	jne    0x14000d0d0
   14000d17f:	mov    rax,QWORD PTR [r14]
   14000d182:	mov    rcx,r15
   14000d185:	mov    r8,QWORD PTR [rax+0x30]
   14000d189:	mov    rdx,QWORD PTR [rax+0x28]
   14000d18d:	call   QWORD PTR [rip+0x2903d]        # 0x1400361d0
   14000d193:	mov    rdx,rax
   14000d196:	test   rax,rax
   14000d199:	jne    0x14000d1a7
   14000d19b:	movzx  eax,BYTE PTR [r15+0x68]
   14000d1a0:	and    al,0x1
   14000d1a2:	neg    al
   14000d1a4:	sbb    rdx,rdx
   14000d1a7:	cmp    rdx,0xffffffffffffffff
   14000d1ab:	jne    0x14000d1bc
   14000d1ad:	mov    rax,QWORD PTR [r14]
   14000d1b0:	lea    ebx,[rdx+0x5]
   14000d1b3:	or     DWORD PTR [rax+0x48],0x4
   14000d1b7:	jmp    0x14000d0d0
   14000d1bc:	mov    rcx,QWORD PTR [r14]
   14000d1bf:	mov    rax,QWORD PTR [rcx+0x28]
   14000d1c3:	mov    QWORD PTR [rcx+0x38],rax
   14000d1c7:	add    rax,rdx
   14000d1ca:	neg    rdx
   14000d1cd:	sbb    ebx,ebx
   14000d1cf:	mov    QWORD PTR [rcx+0x40],rax
   14000d1d3:	add    ebx,0x6
   14000d1d6:	jmp    0x14000d0d0
   14000d1db:	mov    rax,QWORD PTR [rsp+0x70]
   14000d1e0:	sub    rax,r13
   14000d1e3:	jmp    0x14000d1f8
   14000d1e5:	mov    rcx,QWORD PTR [rsp+0x70]
   14000d1ea:	mov    rax,0xffffffffffffffff
   14000d1f1:	sub    rcx,r13
   14000d1f4:	cmovne rax,rcx
   14000d1f8:	mov    rdi,QWORD PTR [rsp+0x30]
   14000d1fd:	mov    rsi,QWORD PTR [rsp+0x78]
   14000d202:	add    rsp,0x38
   14000d206:	pop    r15
   14000d208:	pop    r14
   14000d20a:	pop    r13
   14000d20c:	pop    r12
   14000d20e:	pop    rbp
   14000d20f:	pop    rbx
   14000d210:	ret    
   14000d211:	int3   
   14000d212:	int3   
   14000d213:	int3   
   14000d214:	int3   
   14000d215:	int3   
   14000d216:	int3   
   14000d217:	int3   
   14000d218:	int3   
   14000d219:	int3   
   14000d21a:	int3   
   14000d21b:	int3   
   14000d21c:	int3   
   14000d21d:	int3   
   14000d21e:	int3   
   14000d21f:	int3   
   14000d220:	rex push rbx
   14000d222:	sub    rsp,0x20
   14000d226:	mov    rbx,rcx
   14000d229:	call   QWORD PTR [rip+0x28fa1]        # 0x1400361d0
   14000d22f:	test   rax,rax
   14000d232:	jne    0x14000d23f
   14000d234:	movzx  eax,BYTE PTR [rbx+0x68]
   14000d238:	and    al,0x1
   14000d23a:	neg    al
   14000d23c:	sbb    rax,rax
   14000d23f:	add    rsp,0x20
   14000d243:	pop    rbx
   14000d244:	ret    
   14000d245:	int3   
   14000d246:	int3   
   14000d247:	int3   
   14000d248:	int3   
   14000d249:	int3   
   14000d24a:	int3   
   14000d24b:	int3   
   14000d24c:	int3   
   14000d24d:	int3   
   14000d24e:	int3   
   14000d24f:	int3   
   14000d250:	sub    rsp,0x28
   14000d254:	mov    r9,QWORD PTR [rcx]
   14000d257:	mov    rax,QWORD PTR [r9]
   14000d25a:	movsxd rcx,DWORD PTR [rax+0x4]
   14000d25e:	mov    rcx,QWORD PTR [rcx+r9*1+0x48]
   14000d263:	call   QWORD PTR [rip+0x28f67]        # 0x1400361d0
   14000d269:	or     rcx,0xffffffffffffffff
   14000d26d:	test   rax,rax
   14000d270:	cmovne rcx,rax
   14000d274:	mov    rax,rcx
   14000d277:	add    rsp,0x28
   14000d27b:	ret    
   14000d27c:	int3   
   14000d27d:	int3   
   14000d27e:	int3   
   14000d27f:	int3   
   14000d280:	sub    rsp,0x28
   14000d284:	mov    r9,QWORD PTR [rcx]
   14000d287:	mov    rax,QWORD PTR [r9]
   14000d28a:	movsxd rcx,DWORD PTR [rax+0x4]
   14000d28e:	mov    rcx,QWORD PTR [rcx+r9*1+0x48]
   14000d293:	call   QWORD PTR [rip+0x28f37]        # 0x1400361d0
   14000d299:	or     rcx,0xffffffffffffffff
   14000d29d:	test   rax,rax
   14000d2a0:	cmovne rcx,rax
   14000d2a4:	mov    rax,rcx
   14000d2a7:	add    rsp,0x28
   14000d2ab:	ret    
   14000d2ac:	int3   
   14000d2ad:	int3   
   14000d2ae:	int3   
   14000d2af:	int3   
   14000d2b0:	sub    rsp,0x28
   14000d2b4:	mov    rdx,QWORD PTR [rcx]
   14000d2b7:	mov    r10,r8
   14000d2ba:	mov    r8,r9
   14000d2bd:	mov    rax,QWORD PTR [rdx]
   14000d2c0:	movsxd rcx,DWORD PTR [rax+0x4]
   14000d2c4:	mov    rcx,QWORD PTR [rcx+rdx*1+0x48]
   14000d2c9:	mov    rdx,r10
   14000d2cc:	call   QWORD PTR [rip+0x28efe]        # 0x1400361d0
   14000d2d2:	or     rcx,0xffffffffffffffff
   14000d2d6:	test   rax,rax
   14000d2d9:	cmovne rcx,rax
   14000d2dd:	mov    rax,rcx
   14000d2e0:	add    rsp,0x28
   14000d2e4:	ret    
   14000d2e5:	int3   
   14000d2e6:	int3   
   14000d2e7:	int3   
   14000d2e8:	int3   
   14000d2e9:	int3   
   14000d2ea:	int3   
   14000d2eb:	int3   
   14000d2ec:	int3   
   14000d2ed:	int3   
   14000d2ee:	int3   
   14000d2ef:	int3   
   14000d2f0:	sub    rsp,0x28
   14000d2f4:	mov    r9,QWORD PTR [rcx]
   14000d2f7:	mov    rax,QWORD PTR [r9]
   14000d2fa:	movsxd rcx,DWORD PTR [rax+0x4]
   14000d2fe:	mov    rcx,QWORD PTR [rcx+r9*1+0x48]
   14000d303:	call   QWORD PTR [rip+0x28ec7]        # 0x1400361d0
   14000d309:	or     rcx,0xffffffffffffffff
   14000d30d:	test   rax,rax
   14000d310:	cmovne rcx,rax
   14000d314:	mov    rax,rcx
   14000d317:	add    rsp,0x28
   14000d31b:	ret    
   14000d31c:	int3   
   14000d31d:	int3   
   14000d31e:	int3   
   14000d31f:	int3   
   14000d320:	sub    rsp,0x28
   14000d324:	mov    rcx,QWORD PTR [rcx]
   14000d327:	call   QWORD PTR [rip+0x28ea3]        # 0x1400361d0
   14000d32d:	or     rcx,0xffffffffffffffff
   14000d331:	test   rax,rax
   14000d334:	cmovne rcx,rax
   14000d338:	mov    rax,rcx
   14000d33b:	add    rsp,0x28
   14000d33f:	ret    
   14000d340:	mov    QWORD PTR [rcx],rdx
   14000d343:	mov    rax,rcx
   14000d346:	ret    
   14000d347:	int3   
   14000d348:	int3   
   14000d349:	int3   
   14000d34a:	int3   
   14000d34b:	int3   
   14000d34c:	int3   
   14000d34d:	int3   
   14000d34e:	int3   
   14000d34f:	int3   
   14000d350:	mov    QWORD PTR [rcx],rdx
   14000d353:	mov    rax,rcx
   14000d356:	ret    
   14000d357:	int3   
   14000d358:	int3   
   14000d359:	int3   
   14000d35a:	int3   
   14000d35b:	int3   
   14000d35c:	int3   
   14000d35d:	int3   
   14000d35e:	int3   
   14000d35f:	int3   
   14000d360:	mov    QWORD PTR [rcx],rdx
   14000d363:	mov    rax,rcx
   14000d366:	ret    
   14000d367:	int3   
   14000d368:	int3   
   14000d369:	int3   
   14000d36a:	int3   
   14000d36b:	int3   
   14000d36c:	int3   
   14000d36d:	int3   
   14000d36e:	int3   
   14000d36f:	int3   
   14000d370:	mov    rax,rcx
   14000d373:	ret    
   14000d374:	int3   
   14000d375:	int3   
   14000d376:	int3   
   14000d377:	int3   
   14000d378:	int3   
   14000d379:	int3   
   14000d37a:	int3   
   14000d37b:	int3   
   14000d37c:	int3   
   14000d37d:	int3   
   14000d37e:	int3   
   14000d37f:	int3   
   14000d380:	mov    rax,rcx
   14000d383:	ret    
   14000d384:	int3   
   14000d385:	int3   
   14000d386:	int3   
   14000d387:	int3   
   14000d388:	int3   
   14000d389:	int3   
   14000d38a:	int3   
   14000d38b:	int3   
   14000d38c:	int3   
   14000d38d:	int3   
   14000d38e:	int3   
   14000d38f:	int3   
   14000d390:	mov    QWORD PTR [rcx],rdx
   14000d393:	mov    rax,rcx
   14000d396:	ret    
   14000d397:	int3   
   14000d398:	int3   
   14000d399:	int3   
   14000d39a:	int3   
   14000d39b:	int3   
   14000d39c:	int3   
   14000d39d:	int3   
   14000d39e:	int3   
   14000d39f:	int3   
   14000d3a0:	mov    rax,rcx
   14000d3a3:	ret    
   14000d3a4:	int3   
   14000d3a5:	int3   
   14000d3a6:	int3   
   14000d3a7:	int3   
   14000d3a8:	int3   
   14000d3a9:	int3   
   14000d3aa:	int3   
   14000d3ab:	int3   
   14000d3ac:	int3   
   14000d3ad:	int3   
   14000d3ae:	int3   
   14000d3af:	int3   
   14000d3b0:	rex push rbx
   14000d3b2:	sub    rsp,0x30
   14000d3b6:	movups xmm0,XMMWORD PTR [r8]
   14000d3ba:	mov    rax,rdx
   14000d3bd:	mov    rbx,rcx
   14000d3c0:	mov    r8,rcx
   14000d3c3:	lea    rdx,[rsp+0x20]
   14000d3c8:	mov    rcx,rax
   14000d3cb:	movaps XMMWORD PTR [rsp+0x20],xmm0
   14000d3d0:	call   0x140009110
   14000d3d5:	mov    QWORD PTR [rbx+0x9c0],0x270
   14000d3e0:	mov    eax,DWORD PTR [rbx+0x9bc]
   14000d3e6:	xor    eax,DWORD PTR [rbx+0x630]
   14000d3ec:	jns    0x14000d3fa
   14000d3ee:	xor    eax,0x1908b0df
   14000d3f3:	add    eax,eax
   14000d3f5:	or     eax,0x1
   14000d3f8:	jmp    0x14000d3fc
   14000d3fa:	add    eax,eax
   14000d3fc:	and    DWORD PTR [rbx],0x80000000
   14000d402:	btr    eax,0x1f
   14000d406:	or     DWORD PTR [rbx],eax
   14000d408:	xor    eax,eax
   14000d40a:	nop    WORD PTR [rax+rax*1+0x0]
   14000d410:	cmp    DWORD PTR [rbx+rax*4],0x0
   14000d414:	jne    0x14000d427
   14000d416:	inc    rax
   14000d419:	cmp    rax,0x270
   14000d41f:	jb     0x14000d410
   14000d421:	mov    DWORD PTR [rbx],0x80000000
   14000d427:	add    rsp,0x30
   14000d42b:	pop    rbx
   14000d42c:	ret    
   14000d42d:	int3   
   14000d42e:	int3   
   14000d42f:	int3   
   14000d430:	rex push rdi
   14000d432:	sub    rsp,0x70
   14000d436:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000d43f:	mov    QWORD PTR [rsp+0x80],rbx
   14000d447:	mov    rdi,rcx
   14000d44a:	mov    DWORD PTR [rsp+0x64],0x5
   14000d452:	lea    rdx,[rip+0x2d7e3]        # 0x14003ac3c
   14000d459:	lea    rcx,[rip+0x2d7e0]        # 0x14003ac40
   14000d460:	call   QWORD PTR [rip+0x29082]        # 0x1400364e8
   14000d466:	mov    QWORD PTR [rsp+0x68],rax
   14000d46b:	lea    rax,[rsp+0x50]
   14000d470:	mov    QWORD PTR [rsp+0x40],rax
   14000d475:	xor    ebx,ebx
   14000d477:	mov    edx,DWORD PTR [rsp+0x64]
   14000d47b:	cmp    edx,0x5
   14000d47e:	jl     0x14000d490
   14000d480:	lea    rcx,[rsp+0x50]
   14000d485:	call   0x14002c670
   14000d48a:	mov    edx,ebx
   14000d48c:	mov    DWORD PTR [rsp+0x64],ebx
   14000d490:	movsxd rax,edx
   14000d493:	mov    ecx,DWORD PTR [rsp+rax*4+0x50]
   14000d497:	mov    DWORD PTR [rsp+0x48],ecx
   14000d49b:	inc    edx
   14000d49d:	mov    DWORD PTR [rsp+0x64],edx
   14000d4a1:	mov    QWORD PTR [rsp+0x30],rbx
   14000d4a6:	mov    DWORD PTR [rsp+0x38],ebx
   14000d4aa:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14000d4af:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   14000d4b5:	mov    r8,rdi
   14000d4b8:	lea    rdx,[rsp+0x30]
   14000d4bd:	lea    rcx,[rsp+0x40]
   14000d4c2:	call   0x140009110
   14000d4c7:	mov    QWORD PTR [rdi+0x9c0],0x270
   14000d4d2:	mov    eax,DWORD PTR [rdi+0x9bc]
   14000d4d8:	xor    eax,DWORD PTR [rdi+0x630]
   14000d4de:	jns    0x14000d4ec
   14000d4e0:	xor    eax,0x1908b0df
   14000d4e5:	add    eax,eax
   14000d4e7:	or     eax,0x1
   14000d4ea:	jmp    0x14000d4ee
   14000d4ec:	add    eax,eax
   14000d4ee:	and    DWORD PTR [rdi],0x80000000
   14000d4f4:	btr    eax,0x1f
   14000d4f8:	or     DWORD PTR [rdi],eax
   14000d4fa:	nop    WORD PTR [rax+rax*1+0x0]
   14000d500:	cmp    DWORD PTR [rdi+rbx*4],0x0
   14000d504:	jne    0x14000d518
   14000d506:	inc    rbx
   14000d509:	cmp    rbx,0x270
   14000d510:	jb     0x14000d500
   14000d512:	mov    DWORD PTR [rdi],0x80000000
   14000d518:	mov    rcx,QWORD PTR [rsp+0x68]
   14000d51d:	test   rcx,rcx
   14000d520:	je     0x14000d528
   14000d522:	call   QWORD PTR [rip+0x28fa0]        # 0x1400364c8
   14000d528:	mov    rbx,QWORD PTR [rsp+0x80]
   14000d530:	add    rsp,0x70
   14000d534:	pop    rdi
   14000d535:	ret    
   14000d536:	int3   
   14000d537:	int3   
   14000d538:	int3   
   14000d539:	int3   
   14000d53a:	int3   
   14000d53b:	int3   
   14000d53c:	int3   
   14000d53d:	int3   
   14000d53e:	int3   
   14000d53f:	int3   
   14000d540:	sub    rsp,0x58
   14000d544:	movzx  eax,BYTE PTR [rsp+0x40]
   14000d549:	mov    BYTE PTR [rsp+0x30],al
   14000d54d:	mov    eax,DWORD PTR [rsp+0x88]
   14000d554:	mov    DWORD PTR [rsp+0x28],eax
   14000d558:	mov    eax,DWORD PTR [rsp+0x80]
   14000d55f:	mov    DWORD PTR [rsp+0x20],eax
   14000d563:	call   0x14000d570
   14000d568:	int3   
   14000d569:	int3   
   14000d56a:	int3   
   14000d56b:	int3   
   14000d56c:	int3   
   14000d56d:	int3   
   14000d56e:	int3   
   14000d56f:	int3   
   14000d570:	sub    rsp,0x58
   14000d574:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000d57d:	lea    rcx,[rsp+0x28]
   14000d582:	call   0x14001fa20
   14000d587:	nop
   14000d588:	mov    rcx,rax
   14000d58b:	call   0x14000df70
   14000d590:	int3   
   14000d591:	int3   
   14000d592:	int3   
   14000d593:	int3   
   14000d594:	int3   
   14000d595:	int3   
   14000d596:	int3   
   14000d597:	int3   
   14000d598:	int3   
   14000d599:	int3   
   14000d59a:	int3   
   14000d59b:	int3   
   14000d59c:	int3   
   14000d59d:	int3   
   14000d59e:	int3   
   14000d59f:	int3   
   14000d5a0:	sub    rsp,0x58
   14000d5a4:	movzx  eax,BYTE PTR [rsp+0x40]
   14000d5a9:	mov    BYTE PTR [rsp+0x30],al
   14000d5ad:	mov    eax,DWORD PTR [rsp+0x88]
   14000d5b4:	mov    DWORD PTR [rsp+0x28],eax
   14000d5b8:	mov    eax,DWORD PTR [rsp+0x80]
   14000d5bf:	mov    DWORD PTR [rsp+0x20],eax
   14000d5c3:	call   0x14000d5d0
   14000d5c8:	int3   
   14000d5c9:	int3   
   14000d5ca:	int3   
   14000d5cb:	int3   
   14000d5cc:	int3   
   14000d5cd:	int3   
   14000d5ce:	int3   
   14000d5cf:	int3   
   14000d5d0:	sub    rsp,0x58
   14000d5d4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000d5dd:	lea    rcx,[rsp+0x28]
   14000d5e2:	call   0x14001fa20
   14000d5e7:	nop
   14000d5e8:	mov    rcx,rax
   14000d5eb:	call   0x14000df70
   14000d5f0:	int3   
   14000d5f1:	int3   
   14000d5f2:	int3   
   14000d5f3:	int3   
   14000d5f4:	int3   
   14000d5f5:	int3   
   14000d5f6:	int3   
   14000d5f7:	int3   
   14000d5f8:	int3   
   14000d5f9:	int3   
   14000d5fa:	int3   
   14000d5fb:	int3   
   14000d5fc:	int3   
   14000d5fd:	int3   
   14000d5fe:	int3   
   14000d5ff:	int3   
   14000d600:	sub    rsp,0x58
   14000d604:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000d60d:	lea    rcx,[rsp+0x28]
   14000d612:	call   0x14001fa20
   14000d617:	nop
   14000d618:	mov    rcx,rax
   14000d61b:	call   0x14000df70
   14000d620:	int3   
   14000d621:	int3   
   14000d622:	int3   
   14000d623:	int3   
   14000d624:	int3   
   14000d625:	int3   
   14000d626:	int3   
   14000d627:	int3   
   14000d628:	int3   
   14000d629:	int3   
   14000d62a:	int3   
   14000d62b:	int3   
   14000d62c:	int3   
   14000d62d:	int3   
   14000d62e:	int3   
   14000d62f:	int3   
   14000d630:	sub    rsp,0x48
   14000d634:	movzx  eax,BYTE PTR [rsp+0x30]
   14000d639:	mov    r8,r9
   14000d63c:	mov    r9d,DWORD PTR [rsp+0x70]
   14000d641:	mov    BYTE PTR [rsp+0x28],al
   14000d645:	mov    eax,DWORD PTR [rsp+0x78]
   14000d649:	mov    DWORD PTR [rsp+0x20],eax
   14000d64d:	call   0x14000d600
   14000d652:	int3   
   14000d653:	int3   
   14000d654:	int3   
   14000d655:	int3   
   14000d656:	int3   
   14000d657:	int3   
   14000d658:	int3   
   14000d659:	int3   
   14000d65a:	int3   
   14000d65b:	int3   
   14000d65c:	int3   
   14000d65d:	int3   
   14000d65e:	int3   
   14000d65f:	int3   
   14000d660:	sub    rsp,0x48
   14000d664:	movzx  eax,BYTE PTR [rsp+0x50]
   14000d669:	mov    r10,rdx
   14000d66c:	mov    rdx,rcx
   14000d66f:	mov    BYTE PTR [rsp+0x30],al
   14000d673:	mov    eax,DWORD PTR [rsp+0x70]
   14000d677:	mov    rcx,r10
   14000d67a:	mov    DWORD PTR [rsp+0x28],eax
   14000d67e:	mov    DWORD PTR [rsp+0x20],r9d
   14000d683:	mov    r9,r8
   14000d686:	mov    r8,QWORD PTR [rsp+0x78]
   14000d68b:	call   0x14000d570
   14000d690:	int3   
   14000d691:	int3   
   14000d692:	int3   
   14000d693:	int3   
   14000d694:	int3   
   14000d695:	int3   
   14000d696:	int3   
   14000d697:	int3   
   14000d698:	int3   
   14000d699:	int3   
   14000d69a:	int3   
   14000d69b:	int3   
   14000d69c:	int3   
   14000d69d:	int3   
   14000d69e:	int3   
   14000d69f:	int3   
   14000d6a0:	sub    rsp,0x48
   14000d6a4:	movzx  eax,BYTE PTR [rsp+0x50]
   14000d6a9:	mov    r10,rdx
   14000d6ac:	mov    rdx,rcx
   14000d6af:	mov    BYTE PTR [rsp+0x30],al
   14000d6b3:	mov    eax,DWORD PTR [rsp+0x70]
   14000d6b7:	mov    rcx,r10
   14000d6ba:	mov    DWORD PTR [rsp+0x28],eax
   14000d6be:	mov    DWORD PTR [rsp+0x20],r9d
   14000d6c3:	mov    r9,r8
   14000d6c6:	mov    r8,QWORD PTR [rsp+0x78]
   14000d6cb:	call   0x14000d5d0
   14000d6d0:	int3   
   14000d6d1:	int3   
   14000d6d2:	int3   
   14000d6d3:	int3   
   14000d6d4:	int3   
   14000d6d5:	int3   
   14000d6d6:	int3   
   14000d6d7:	int3   
   14000d6d8:	int3   
   14000d6d9:	int3   
   14000d6da:	int3   
   14000d6db:	int3   
   14000d6dc:	int3   
   14000d6dd:	int3   
   14000d6de:	int3   
   14000d6df:	int3   
   14000d6e0:	sub    rsp,0x38
   14000d6e4:	movzx  eax,BYTE PTR [rsp+0x40]
   14000d6e9:	mov    r10,rdx
   14000d6ec:	mov    rdx,rcx
   14000d6ef:	mov    BYTE PTR [rsp+0x28],al
   14000d6f3:	mov    eax,DWORD PTR [rsp+0x60]
   14000d6f7:	mov    rcx,r10
   14000d6fa:	mov    DWORD PTR [rsp+0x20],eax
   14000d6fe:	call   0x14000d600
   14000d703:	int3   
   14000d704:	int3   
   14000d705:	int3   
   14000d706:	int3   
   14000d707:	int3   
   14000d708:	int3   
   14000d709:	int3   
   14000d70a:	int3   
   14000d70b:	int3   
   14000d70c:	int3   
   14000d70d:	int3   
   14000d70e:	int3   
   14000d70f:	int3   
   14000d710:	sub    rsp,0x38
   14000d714:	movzx  eax,BYTE PTR [rsp+0x40]
   14000d719:	mov    r10,rdx
   14000d71c:	mov    rdx,rcx
   14000d71f:	mov    BYTE PTR [rsp+0x28],al
   14000d723:	mov    eax,DWORD PTR [rsp+0x60]
   14000d727:	mov    rcx,r10
   14000d72a:	mov    DWORD PTR [rsp+0x20],eax
   14000d72e:	call   0x14000d740
   14000d733:	int3   
   14000d734:	int3   
   14000d735:	int3   
   14000d736:	int3   
   14000d737:	int3   
   14000d738:	int3   
   14000d739:	int3   
   14000d73a:	int3   
   14000d73b:	int3   
   14000d73c:	int3   
   14000d73d:	int3   
   14000d73e:	int3   
   14000d73f:	int3   
   14000d740:	sub    rsp,0x58
   14000d744:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000d74d:	lea    rcx,[rsp+0x28]
   14000d752:	call   0x14001fa20
   14000d757:	nop
   14000d758:	mov    rcx,rax
   14000d75b:	call   0x14000df70
   14000d760:	int3   
   14000d761:	int3   
   14000d762:	int3   
   14000d763:	int3   
   14000d764:	int3   
   14000d765:	int3   
   14000d766:	int3   
   14000d767:	int3   
   14000d768:	int3   
   14000d769:	int3   
   14000d76a:	int3   
   14000d76b:	int3   
   14000d76c:	int3   
   14000d76d:	int3   
   14000d76e:	int3   
   14000d76f:	int3   
   14000d770:	sub    rsp,0x48
   14000d774:	movzx  eax,BYTE PTR [rsp+0x30]
   14000d779:	mov    r8,r9
   14000d77c:	mov    r9d,DWORD PTR [rsp+0x70]
   14000d781:	mov    BYTE PTR [rsp+0x28],al
   14000d785:	mov    eax,DWORD PTR [rsp+0x78]
   14000d789:	mov    DWORD PTR [rsp+0x20],eax
   14000d78d:	call   0x14000d740
   14000d792:	int3   
   14000d793:	int3   
   14000d794:	int3   
   14000d795:	int3   
   14000d796:	int3   
   14000d797:	int3   
   14000d798:	int3   
   14000d799:	int3   
   14000d79a:	int3   
   14000d79b:	int3   
   14000d79c:	int3   
   14000d79d:	int3   
   14000d79e:	int3   
   14000d79f:	int3   
   14000d7a0:	mov    rax,QWORD PTR [rdx]
   14000d7a3:	mov    QWORD PTR [rcx+0x38],rax
   14000d7a7:	mov    rax,rcx
   14000d7aa:	ret    
   14000d7ab:	int3   
   14000d7ac:	int3   
   14000d7ad:	int3   
   14000d7ae:	int3   
   14000d7af:	int3   
   14000d7b0:	mov    rax,QWORD PTR [rdx]
   14000d7b3:	mov    QWORD PTR [rcx+0x30],rax
   14000d7b7:	mov    rax,rcx
   14000d7ba:	ret    
   14000d7bb:	int3   
   14000d7bc:	int3   
   14000d7bd:	int3   
   14000d7be:	int3   
   14000d7bf:	int3   
   14000d7c0:	mov    eax,DWORD PTR [rdx]
   14000d7c2:	mov    DWORD PTR [rcx+0x40],eax
   14000d7c5:	mov    rax,rcx
   14000d7c8:	ret    
   14000d7c9:	int3   
   14000d7ca:	int3   
   14000d7cb:	int3   
   14000d7cc:	int3   
   14000d7cd:	int3   
   14000d7ce:	int3   
   14000d7cf:	int3   
   14000d7d0:	mov    rax,QWORD PTR [rdx]
   14000d7d3:	mov    QWORD PTR [rcx+0x38],rax
   14000d7d7:	mov    rax,rcx
   14000d7da:	ret    
   14000d7db:	int3   
   14000d7dc:	int3   
   14000d7dd:	int3   
   14000d7de:	int3   
   14000d7df:	int3   
   14000d7e0:	mov    rax,QWORD PTR [rdx]
   14000d7e3:	mov    QWORD PTR [rcx+0x30],rax
   14000d7e7:	mov    rax,rcx
   14000d7ea:	ret    
   14000d7eb:	int3   
   14000d7ec:	int3   
   14000d7ed:	int3   
   14000d7ee:	int3   
   14000d7ef:	int3   
   14000d7f0:	mov    eax,DWORD PTR [rdx]
   14000d7f2:	mov    DWORD PTR [rcx+0x40],eax
   14000d7f5:	mov    rax,rcx
   14000d7f8:	ret    
   14000d7f9:	int3   
   14000d7fa:	int3   
   14000d7fb:	int3   
   14000d7fc:	int3   
   14000d7fd:	int3   
   14000d7fe:	int3   
   14000d7ff:	int3   
   14000d800:	mov    rax,QWORD PTR [rdx]
   14000d803:	mov    QWORD PTR [rcx+0x30],rax
   14000d807:	mov    rax,rcx
   14000d80a:	ret    
   14000d80b:	int3   
   14000d80c:	int3   
   14000d80d:	int3   
   14000d80e:	int3   
   14000d80f:	int3   
   14000d810:	mov    rax,QWORD PTR [rdx]
   14000d813:	mov    QWORD PTR [rcx+0x28],rax
   14000d817:	mov    rax,rcx
   14000d81a:	ret    
   14000d81b:	int3   
   14000d81c:	int3   
   14000d81d:	int3   
   14000d81e:	int3   
   14000d81f:	int3   
   14000d820:	mov    eax,DWORD PTR [rdx]
   14000d822:	mov    DWORD PTR [rcx+0x38],eax
   14000d825:	mov    rax,rcx
   14000d828:	ret    
   14000d829:	int3   
   14000d82a:	int3   
   14000d82b:	int3   
   14000d82c:	int3   
   14000d82d:	int3   
   14000d82e:	int3   
   14000d82f:	int3   
   14000d830:	mov    rax,QWORD PTR [rdx]
   14000d833:	mov    QWORD PTR [rcx+0x78],rax
   14000d837:	mov    rax,rcx
   14000d83a:	ret    
   14000d83b:	int3   
   14000d83c:	int3   
   14000d83d:	int3   
   14000d83e:	int3   
   14000d83f:	int3   
   14000d840:	mov    rax,QWORD PTR [rdx]
   14000d843:	mov    QWORD PTR [rcx+0x70],rax
   14000d847:	mov    rax,rcx
   14000d84a:	ret    
   14000d84b:	int3   
   14000d84c:	int3   
   14000d84d:	int3   
   14000d84e:	int3   
   14000d84f:	int3   
   14000d850:	mov    eax,DWORD PTR [rdx]
   14000d852:	mov    DWORD PTR [rcx+0x80],eax
   14000d858:	mov    rax,rcx
   14000d85b:	ret    
   14000d85c:	int3   
   14000d85d:	int3   
   14000d85e:	int3   
   14000d85f:	int3   
   14000d860:	mov    BYTE PTR [rcx],dl
   14000d862:	mov    rax,rcx
   14000d865:	ret    
   14000d866:	int3   
   14000d867:	int3   
   14000d868:	int3   
   14000d869:	int3   
   14000d86a:	int3   
   14000d86b:	int3   
   14000d86c:	int3   
   14000d86d:	int3   
   14000d86e:	int3   
   14000d86f:	int3   
   14000d870:	rex push rbx
   14000d872:	sub    rsp,0x40
   14000d876:	mov    rax,QWORD PTR [rcx]
   14000d879:	mov    r8,QWORD PTR [rcx+0x8]
   14000d87d:	mov    rbx,rdx
   14000d880:	cmp    rax,r8
   14000d883:	jne    0x14000d88d
   14000d885:	xor    al,al
   14000d887:	add    rsp,0x40
   14000d88b:	pop    rbx
   14000d88c:	ret    
   14000d88d:	movzx  edx,BYTE PTR [rax]
   14000d890:	mov    QWORD PTR [rsp+0x50],rdi
   14000d895:	cmp    dl,0x2d
   14000d898:	sete   dil
   14000d89c:	test   dil,dil
   14000d89f:	jne    0x14000d8a6
   14000d8a1:	cmp    dl,0x2b
   14000d8a4:	jne    0x14000d8ac
   14000d8a6:	inc    rax
   14000d8a9:	mov    QWORD PTR [rcx],rax
   14000d8ac:	mov    eax,0x1
   14000d8b1:	mov    BYTE PTR [rsp+0x20],0x0
   14000d8b6:	mov    QWORD PTR [rsp+0x28],rbx
   14000d8bb:	mov    WORD PTR [rsp+0x22],ax
   14000d8c0:	mov    rax,QWORD PTR [rcx]
   14000d8c3:	lea    rcx,[rsp+0x20]
   14000d8c8:	mov    QWORD PTR [rsp+0x30],rax
   14000d8cd:	mov    QWORD PTR [rsp+0x38],r8
   14000d8d2:	call   0x1400210d0
   14000d8d7:	test   dil,dil
   14000d8da:	mov    rdi,QWORD PTR [rsp+0x50]
   14000d8df:	je     0x14000d8ea
   14000d8e1:	movzx  ecx,WORD PTR [rbx]
   14000d8e4:	neg    cx
   14000d8e7:	mov    WORD PTR [rbx],cx
   14000d8ea:	add    rsp,0x40
   14000d8ee:	pop    rbx
   14000d8ef:	ret    
   14000d8f0:	mov    r8,rdx
   14000d8f3:	xor    eax,eax
   14000d8f5:	sub    r8,rcx
   14000d8f8:	movzx  r9d,al
   14000d8fc:	sar    r8,0x4
   14000d900:	jmp    0x1400050e0
   14000d905:	int3   
   14000d906:	int3   
   14000d907:	int3   
   14000d908:	int3   
   14000d909:	int3   
   14000d90a:	int3   
   14000d90b:	int3   
   14000d90c:	int3   
   14000d90d:	int3   
   14000d90e:	int3   
   14000d90f:	int3   
   14000d910:	sub    rsp,0x28
   14000d914:	mov    rax,rdx
   14000d917:	movzx  r9d,r8b
   14000d91b:	sub    rax,rcx
   14000d91e:	sar    rax,0x4
   14000d922:	mov    r8,rax
   14000d925:	call   0x1400050e0
   14000d92a:	add    rsp,0x28
   14000d92e:	ret    
   14000d92f:	int3   
   14000d930:	sub    rsp,0x28
   14000d934:	call   0x140005230
   14000d939:	add    rsp,0x28
   14000d93d:	ret    
   14000d93e:	int3   
   14000d93f:	int3   
   14000d940:	mov    QWORD PTR [rsp+0x10],rbx
   14000d945:	mov    QWORD PTR [rsp+0x20],rbp
   14000d94a:	push   rsi
   14000d94b:	sub    rsp,0x20
   14000d94f:	mov    rbp,rcx
   14000d952:	lea    rcx,[rsp+0x40]
   14000d957:	mov    rbx,r8
   14000d95a:	mov    rsi,rdx
   14000d95d:	call   0x140002220
   14000d962:	mov    r10,QWORD PTR [rbx]
   14000d965:	mov    r9,QWORD PTR [rax]
   14000d968:	mov    QWORD PTR [rbx],r9
   14000d96b:	mov    QWORD PTR [rax],r10
   14000d96e:	mov    rbx,QWORD PTR [rsp+0x40]
   14000d973:	test   rbx,rbx
   14000d976:	je     0x14000d9a0
   14000d978:	lock dec DWORD PTR [rbx+0x8]
   14000d97c:	mov    QWORD PTR [rsp+0x30],rdi
   14000d981:	jne    0x14000d99b
   14000d983:	mov    rax,QWORD PTR [rbx]
   14000d986:	mov    rcx,rbx
   14000d989:	call   QWORD PTR [rax+0x8]
   14000d98c:	lock dec DWORD PTR [rbx+0xc]
   14000d990:	jne    0x14000d99b
   14000d992:	mov    rax,QWORD PTR [rbx]
   14000d995:	mov    rcx,rbx
   14000d998:	call   QWORD PTR [rax+0x10]
   14000d99b:	mov    rdi,QWORD PTR [rsp+0x30]
   14000d9a0:	mov    r8,rsi
   14000d9a3:	mov    rdx,rsi
   14000d9a6:	mov    rcx,rbp
   14000d9a9:	mov    rbx,QWORD PTR [rsp+0x38]
   14000d9ae:	mov    rbp,QWORD PTR [rsp+0x48]
   14000d9b3:	add    rsp,0x20
   14000d9b7:	pop    rsi
   14000d9b8:	jmp    0x14002c980
   14000d9bd:	int3   
   14000d9be:	int3   
   14000d9bf:	int3   
   14000d9c0:	mov    QWORD PTR [rsp+0x10],rbx
   14000d9c5:	mov    QWORD PTR [rsp+0x20],rbp
   14000d9ca:	push   rsi
   14000d9cb:	sub    rsp,0x20
   14000d9cf:	mov    rbp,rcx
   14000d9d2:	lea    rcx,[rsp+0x40]
   14000d9d7:	mov    rbx,r8
   14000d9da:	mov    rsi,rdx
   14000d9dd:	call   0x1400022d0
   14000d9e2:	mov    r10,QWORD PTR [rbx]
   14000d9e5:	mov    r9,QWORD PTR [rax]
   14000d9e8:	mov    QWORD PTR [rbx],r9
   14000d9eb:	mov    QWORD PTR [rax],r10
   14000d9ee:	mov    rbx,QWORD PTR [rsp+0x40]
   14000d9f3:	test   rbx,rbx
   14000d9f6:	je     0x14000da20
   14000d9f8:	lock dec DWORD PTR [rbx+0x8]
   14000d9fc:	mov    QWORD PTR [rsp+0x30],rdi
   14000da01:	jne    0x14000da1b
   14000da03:	mov    rax,QWORD PTR [rbx]
   14000da06:	mov    rcx,rbx
   14000da09:	call   QWORD PTR [rax+0x8]
   14000da0c:	lock dec DWORD PTR [rbx+0xc]
   14000da10:	jne    0x14000da1b
   14000da12:	mov    rax,QWORD PTR [rbx]
   14000da15:	mov    rcx,rbx
   14000da18:	call   QWORD PTR [rax+0x10]
   14000da1b:	mov    rdi,QWORD PTR [rsp+0x30]
   14000da20:	mov    r8,rsi
   14000da23:	mov    rdx,rsi
   14000da26:	mov    rcx,rbp
   14000da29:	mov    rbx,QWORD PTR [rsp+0x38]
   14000da2e:	mov    rbp,QWORD PTR [rsp+0x48]
   14000da33:	add    rsp,0x20
   14000da37:	pop    rsi
   14000da38:	jmp    0x14002c980
   14000da3d:	int3   
   14000da3e:	int3   
   14000da3f:	int3   
   14000da40:	mov    QWORD PTR [rsp+0x10],rbx
   14000da45:	mov    QWORD PTR [rsp+0x20],rbp
   14000da4a:	push   rsi
   14000da4b:	sub    rsp,0x20
   14000da4f:	mov    rbp,rcx
   14000da52:	lea    rcx,[rsp+0x40]
   14000da57:	mov    rbx,r8
   14000da5a:	mov    rsi,rdx
   14000da5d:	call   0x140002380
   14000da62:	mov    r10,QWORD PTR [rbx]
   14000da65:	mov    r9,QWORD PTR [rax]
   14000da68:	mov    QWORD PTR [rbx],r9
   14000da6b:	mov    QWORD PTR [rax],r10
   14000da6e:	mov    rbx,QWORD PTR [rsp+0x40]
   14000da73:	test   rbx,rbx
   14000da76:	je     0x14000daa0
   14000da78:	lock dec DWORD PTR [rbx+0x8]
   14000da7c:	mov    QWORD PTR [rsp+0x30],rdi
   14000da81:	jne    0x14000da9b
   14000da83:	mov    rax,QWORD PTR [rbx]
   14000da86:	mov    rcx,rbx
   14000da89:	call   QWORD PTR [rax+0x8]
   14000da8c:	lock dec DWORD PTR [rbx+0xc]
   14000da90:	jne    0x14000da9b
   14000da92:	mov    rax,QWORD PTR [rbx]
   14000da95:	mov    rcx,rbx
   14000da98:	call   QWORD PTR [rax+0x10]
   14000da9b:	mov    rdi,QWORD PTR [rsp+0x30]
   14000daa0:	mov    r8,rsi
   14000daa3:	mov    rdx,rsi
   14000daa6:	mov    rcx,rbp
   14000daa9:	mov    rbx,QWORD PTR [rsp+0x38]
   14000daae:	mov    rbp,QWORD PTR [rsp+0x48]
   14000dab3:	add    rsp,0x20
   14000dab7:	pop    rsi
   14000dab8:	jmp    0x14002c980
   14000dabd:	int3   
   14000dabe:	int3   
   14000dabf:	int3   
   14000dac0:	mov    QWORD PTR [rsp+0x10],rbx
   14000dac5:	mov    QWORD PTR [rsp+0x20],rbp
   14000daca:	push   rsi
   14000dacb:	sub    rsp,0x20
   14000dacf:	mov    rbp,rcx
   14000dad2:	lea    rcx,[rsp+0x40]
   14000dad7:	mov    rbx,r8
   14000dada:	mov    rsi,rdx
   14000dadd:	call   0x140002880
   14000dae2:	mov    r10,QWORD PTR [rbx]
   14000dae5:	mov    r9,QWORD PTR [rax]
   14000dae8:	mov    QWORD PTR [rbx],r9
   14000daeb:	mov    QWORD PTR [rax],r10
   14000daee:	mov    rbx,QWORD PTR [rsp+0x40]
   14000daf3:	test   rbx,rbx
   14000daf6:	je     0x14000db20
   14000daf8:	lock dec DWORD PTR [rbx+0x8]
   14000dafc:	mov    QWORD PTR [rsp+0x30],rdi
   14000db01:	jne    0x14000db1b
   14000db03:	mov    rax,QWORD PTR [rbx]
   14000db06:	mov    rcx,rbx
   14000db09:	call   QWORD PTR [rax+0x8]
   14000db0c:	lock dec DWORD PTR [rbx+0xc]
   14000db10:	jne    0x14000db1b
   14000db12:	mov    rax,QWORD PTR [rbx]
   14000db15:	mov    rcx,rbx
   14000db18:	call   QWORD PTR [rax+0x10]
   14000db1b:	mov    rdi,QWORD PTR [rsp+0x30]
   14000db20:	mov    r8,rsi
   14000db23:	mov    rdx,rsi
   14000db26:	mov    rcx,rbp
   14000db29:	mov    rbx,QWORD PTR [rsp+0x38]
   14000db2e:	mov    rbp,QWORD PTR [rsp+0x48]
   14000db33:	add    rsp,0x20
   14000db37:	pop    rsi
   14000db38:	jmp    0x14002c980
   14000db3d:	int3   
   14000db3e:	int3   
   14000db3f:	int3   
   14000db40:	rex push rbx
   14000db42:	sub    rsp,0x30
   14000db46:	mov    rbx,rdx
   14000db49:	mov    DWORD PTR [rsp+0x20],0x0
   14000db51:	call   QWORD PTR [rip+0x28a21]        # 0x140036578
   14000db57:	mov    rax,rbx
   14000db5a:	add    rsp,0x30
   14000db5e:	pop    rbx
   14000db5f:	ret    
   14000db60:	mov    r8,rdx
   14000db63:	cmp    rcx,rdx
   14000db66:	je     0x14000dbad
   14000db68:	xor    edx,edx
   14000db6a:	lea    rax,[rcx+0x10]
   14000db6e:	mov    r9,rax
   14000db71:	sub    r9,rcx
   14000db74:	cmp    rcx,rax
   14000db77:	cmova  r9,rdx
   14000db7b:	test   r9,r9
   14000db7e:	je     0x14000dbad
   14000db80:	mov    r10,rcx
   14000db83:	neg    r10
   14000db86:	sub    r8,rcx
   14000db89:	nop    DWORD PTR [rax+0x0]
   14000db90:	movzx  eax,BYTE PTR [r8+rcx*1]
   14000db95:	movzx  edx,BYTE PTR [rcx]
   14000db98:	lea    rcx,[rcx+0x1]
   14000db9c:	mov    BYTE PTR [rcx-0x1],al
   14000db9f:	mov    BYTE PTR [r8+rcx*1-0x1],dl
   14000dba4:	lea    rax,[r10+rcx*1]
   14000dba8:	cmp    rax,r9
   14000dbab:	jne    0x14000db90
   14000dbad:	ret    
   14000dbae:	int3   
   14000dbaf:	int3   
   14000dbb0:	movzx  eax,BYTE PTR [rdx]
   14000dbb3:	movzx  r8d,BYTE PTR [rcx]
   14000dbb7:	mov    BYTE PTR [rcx],al
   14000dbb9:	mov    BYTE PTR [rdx],r8b
   14000dbbc:	ret    
   14000dbbd:	int3   
   14000dbbe:	int3   
   14000dbbf:	int3   
   14000dbc0:	cmp    rcx,rdx
   14000dbc3:	je     0x14000dc04
   14000dbc5:	mov    QWORD PTR [rsp+0x8],rbx
   14000dbca:	push   rdi
   14000dbcb:	sub    rsp,0x20
   14000dbcf:	mov    rbx,rdx
   14000dbd2:	mov    rdi,rcx
   14000dbd5:	call   0x14001d6f0
   14000dbda:	mov    rax,QWORD PTR [rbx+0x10]
   14000dbde:	mov    r8,QWORD PTR [rdi+0x10]
   14000dbe2:	mov    QWORD PTR [rdi+0x10],rax
   14000dbe6:	mov    QWORD PTR [rbx+0x10],r8
   14000dbea:	mov    rax,QWORD PTR [rbx+0x18]
   14000dbee:	mov    rcx,QWORD PTR [rdi+0x18]
   14000dbf2:	mov    QWORD PTR [rdi+0x18],rax
   14000dbf6:	mov    QWORD PTR [rbx+0x18],rcx
   14000dbfa:	mov    rbx,QWORD PTR [rsp+0x30]
   14000dbff:	add    rsp,0x20
   14000dc03:	pop    rdi
   14000dc04:	ret    
   14000dc05:	int3   
   14000dc06:	int3   
   14000dc07:	int3   
   14000dc08:	int3   
   14000dc09:	int3   
   14000dc0a:	int3   
   14000dc0b:	int3   
   14000dc0c:	int3   
   14000dc0d:	int3   
   14000dc0e:	int3   
   14000dc0f:	int3   
   14000dc10:	mov    rax,QWORD PTR [rdx]
   14000dc13:	mov    r8,QWORD PTR [rcx]
   14000dc16:	mov    QWORD PTR [rcx],rax
   14000dc19:	mov    QWORD PTR [rdx],r8
   14000dc1c:	ret    
   14000dc1d:	int3   
   14000dc1e:	int3   
   14000dc1f:	int3   
   14000dc20:	mov    rax,QWORD PTR [rdx]
   14000dc23:	mov    r8,QWORD PTR [rcx]
   14000dc26:	mov    QWORD PTR [rcx],rax
   14000dc29:	mov    QWORD PTR [rdx],r8
   14000dc2c:	ret    
   14000dc2d:	int3   
   14000dc2e:	int3   
   14000dc2f:	int3   
   14000dc30:	mov    rax,QWORD PTR [rdx]
   14000dc33:	mov    r8,QWORD PTR [rcx]
   14000dc36:	mov    QWORD PTR [rcx],rax
   14000dc39:	mov    QWORD PTR [rdx],r8
   14000dc3c:	ret    
   14000dc3d:	int3   
   14000dc3e:	int3   
   14000dc3f:	int3   
   14000dc40:	mov    rax,QWORD PTR [rdx]
   14000dc43:	mov    r8,QWORD PTR [rcx]
   14000dc46:	mov    QWORD PTR [rcx],rax
   14000dc49:	mov    QWORD PTR [rdx],r8
   14000dc4c:	ret    
   14000dc4d:	int3   
   14000dc4e:	int3   
   14000dc4f:	int3   
   14000dc50:	movups xmm0,XMMWORD PTR [rdx]
   14000dc53:	movups xmm1,XMMWORD PTR [rcx]
   14000dc56:	movups XMMWORD PTR [rcx],xmm0
   14000dc59:	movups XMMWORD PTR [rdx],xmm1
   14000dc5c:	ret    
   14000dc5d:	int3   
   14000dc5e:	int3   
   14000dc5f:	int3   
   14000dc60:	movups xmm0,XMMWORD PTR [rdx]
   14000dc63:	movups xmm1,XMMWORD PTR [rcx]
   14000dc66:	movups XMMWORD PTR [rcx],xmm0
   14000dc69:	movups XMMWORD PTR [rdx],xmm1
   14000dc6c:	ret    
   14000dc6d:	int3   
   14000dc6e:	int3   
   14000dc6f:	int3   
   14000dc70:	cmp    rcx,rdx
   14000dc73:	je     0x14000dcb4
   14000dc75:	mov    QWORD PTR [rsp+0x8],rbx
   14000dc7a:	push   rdi
   14000dc7b:	sub    rsp,0x20
   14000dc7f:	mov    rbx,rdx
   14000dc82:	mov    rdi,rcx
   14000dc85:	call   0x14001d6f0
   14000dc8a:	mov    rax,QWORD PTR [rbx+0x10]
   14000dc8e:	mov    r8,QWORD PTR [rdi+0x10]
   14000dc92:	mov    QWORD PTR [rdi+0x10],rax
   14000dc96:	mov    QWORD PTR [rbx+0x10],r8
   14000dc9a:	mov    rax,QWORD PTR [rbx+0x18]
   14000dc9e:	mov    rcx,QWORD PTR [rdi+0x18]
   14000dca2:	mov    QWORD PTR [rdi+0x18],rax
   14000dca6:	mov    QWORD PTR [rbx+0x18],rcx
   14000dcaa:	mov    rbx,QWORD PTR [rsp+0x30]
   14000dcaf:	add    rsp,0x20
   14000dcb3:	pop    rdi
   14000dcb4:	ret    
   14000dcb5:	int3   
   14000dcb6:	int3   
   14000dcb7:	int3   
   14000dcb8:	int3   
   14000dcb9:	int3   
   14000dcba:	int3   
   14000dcbb:	int3   
   14000dcbc:	int3   
   14000dcbd:	int3   
   14000dcbe:	int3   
   14000dcbf:	int3   
   14000dcc0:	mov    rax,QWORD PTR [rdx]
   14000dcc3:	mov    r8,QWORD PTR [rcx]
   14000dcc6:	mov    QWORD PTR [rcx],rax
   14000dcc9:	mov    QWORD PTR [rdx],r8
   14000dccc:	ret    
   14000dccd:	int3   
   14000dcce:	int3   
   14000dccf:	int3   
   14000dcd0:	mov    rax,QWORD PTR [rdx]
   14000dcd3:	mov    r8,QWORD PTR [rcx]
   14000dcd6:	mov    QWORD PTR [rcx],rax
   14000dcd9:	mov    QWORD PTR [rdx],r8
   14000dcdc:	ret    
   14000dcdd:	int3   
   14000dcde:	int3   
   14000dcdf:	int3   
   14000dce0:	cmp    rcx,rdx
   14000dce3:	je     0x14000dd24
   14000dce5:	mov    QWORD PTR [rsp+0x8],rbx
   14000dcea:	push   rdi
   14000dceb:	sub    rsp,0x20
   14000dcef:	mov    rbx,rdx
   14000dcf2:	mov    rdi,rcx
   14000dcf5:	call   0x14001d6f0
   14000dcfa:	mov    rax,QWORD PTR [rbx+0x10]
   14000dcfe:	mov    r8,QWORD PTR [rdi+0x10]
   14000dd02:	mov    QWORD PTR [rdi+0x10],rax
   14000dd06:	mov    QWORD PTR [rbx+0x10],r8
   14000dd0a:	mov    rax,QWORD PTR [rbx+0x18]
   14000dd0e:	mov    rcx,QWORD PTR [rdi+0x18]
   14000dd12:	mov    QWORD PTR [rdi+0x18],rax
   14000dd16:	mov    QWORD PTR [rbx+0x18],rcx
   14000dd1a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000dd1f:	add    rsp,0x20
   14000dd23:	pop    rdi
   14000dd24:	ret    
   14000dd25:	int3   
   14000dd26:	int3   
   14000dd27:	int3   
   14000dd28:	int3   
   14000dd29:	int3   
   14000dd2a:	int3   
   14000dd2b:	int3   
   14000dd2c:	int3   
   14000dd2d:	int3   
   14000dd2e:	int3   
   14000dd2f:	int3   
   14000dd30:	sub    rsp,0xd8
   14000dd37:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000dd40:	mov    rdx,rcx
   14000dd43:	lea    rcx,[rsp+0x88]
   14000dd4b:	call   0x140007d30
   14000dd50:	nop
   14000dd51:	mov    rdx,rax
   14000dd54:	lea    rcx,[rsp+0x28]
   14000dd59:	call   0x140007c70
   14000dd5e:	lea    rdx,[rip+0x42c3b]        # 0x1400509a0
   14000dd65:	lea    rcx,[rsp+0x28]
   14000dd6a:	call   0x140030478
   14000dd6f:	int3   
   14000dd70:	sub    rsp,0xd8
   14000dd77:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000dd80:	mov    rdx,rcx
   14000dd83:	lea    rcx,[rsp+0x88]
   14000dd8b:	call   0x140007d50
   14000dd90:	nop
   14000dd91:	mov    rdx,rax
   14000dd94:	lea    rcx,[rsp+0x28]
   14000dd99:	call   0x140007ca0
   14000dd9e:	lea    rdx,[rip+0x42deb]        # 0x140050b90
   14000dda5:	lea    rcx,[rsp+0x28]
   14000ddaa:	call   0x140030478
   14000ddaf:	int3   
   14000ddb0:	sub    rsp,0xc8
   14000ddb7:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000ddc0:	mov    rdx,rcx
   14000ddc3:	lea    rcx,[rsp+0x80]
   14000ddcb:	call   0x140007d70
   14000ddd0:	nop
   14000ddd1:	mov    rdx,rax
   14000ddd4:	lea    rcx,[rsp+0x28]
   14000ddd9:	call   0x140007cd0
   14000ddde:	lea    rdx,[rip+0x42553]        # 0x140050338
   14000dde5:	lea    rcx,[rsp+0x28]
   14000ddea:	call   0x140030478
   14000ddef:	int3   
   14000ddf0:	sub    rsp,0x158
   14000ddf7:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000de00:	mov    rdx,rcx
   14000de03:	lea    rcx,[rsp+0xc8]
   14000de0b:	call   0x140007d90
   14000de10:	nop
   14000de11:	mov    rdx,rax
   14000de14:	lea    rcx,[rsp+0x28]
   14000de19:	call   0x140007d00
   14000de1e:	lea    rdx,[rip+0x4294b]        # 0x140050770
   14000de25:	lea    rcx,[rsp+0x28]
   14000de2a:	call   0x140030478
   14000de2f:	int3   
   14000de30:	sub    rsp,0xc8
   14000de37:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000de40:	mov    rdx,rcx
   14000de43:	lea    rcx,[rsp+0x80]
   14000de4b:	call   0x140007db0
   14000de50:	nop
   14000de51:	mov    rdx,rax
   14000de54:	lea    rcx,[rsp+0x28]
   14000de59:	call   0x140007b20
   14000de5e:	lea    rdx,[rip+0x423c3]        # 0x140050228
   14000de65:	lea    rcx,[rsp+0x28]
   14000de6a:	call   0x140030478
   14000de6f:	int3   
   14000de70:	sub    rsp,0xc8
   14000de77:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000de80:	mov    rdx,rcx
   14000de83:	lea    rcx,[rsp+0x80]
   14000de8b:	call   0x140007e00
   14000de90:	nop
   14000de91:	mov    rdx,rax
   14000de94:	lea    rcx,[rsp+0x28]
   14000de99:	call   0x140007b50
   14000de9e:	lea    rdx,[rip+0x425eb]        # 0x140050490
   14000dea5:	lea    rcx,[rsp+0x28]
   14000deaa:	call   0x140030478
   14000deaf:	int3   
   14000deb0:	sub    rsp,0xc8
   14000deb7:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000dec0:	mov    rdx,rcx
   14000dec3:	lea    rcx,[rsp+0x80]
   14000decb:	call   0x140007e50
   14000ded0:	nop
   14000ded1:	mov    rdx,rax
   14000ded4:	lea    rcx,[rsp+0x28]
   14000ded9:	call   0x140007b80
   14000dede:	lea    rdx,[rip+0x4268b]        # 0x140050570
   14000dee5:	lea    rcx,[rsp+0x28]
   14000deea:	call   0x140030478
   14000deef:	int3   
   14000def0:	sub    rsp,0xe8
   14000def7:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000df00:	mov    rdx,rcx
   14000df03:	lea    rcx,[rsp+0x90]
   14000df0b:	call   0x140007ea0
   14000df10:	nop
   14000df11:	mov    rdx,rax
   14000df14:	lea    rcx,[rsp+0x28]
   14000df19:	call   0x140007bb0
   14000df1e:	lea    rdx,[rip+0x42723]        # 0x140050648
   14000df25:	lea    rcx,[rsp+0x28]
   14000df2a:	call   0x140030478
   14000df2f:	int3   
   14000df30:	rex push rbx
   14000df32:	sub    rsp,0x40
   14000df36:	mov    rbx,rcx
   14000df39:	mov    rdx,rcx
   14000df3c:	lea    rcx,[rsp+0x20]
   14000df41:	call   QWORD PTR [rip+0x28501]        # 0x140036448
   14000df47:	lea    rax,[rip+0x2cda2]        # 0x14003acf0
   14000df4e:	lea    rdx,[rip+0x42d1b]        # 0x140050c70
   14000df55:	mov    QWORD PTR [rsp+0x20],rax
   14000df5a:	mov    eax,DWORD PTR [rbx+0x18]
   14000df5d:	lea    rcx,[rsp+0x20]
   14000df62:	mov    DWORD PTR [rsp+0x38],eax
   14000df66:	call   0x140030478
   14000df6b:	int3   
   14000df6c:	int3   
   14000df6d:	int3   
   14000df6e:	int3   
   14000df6f:	int3   
   14000df70:	sub    rsp,0xe8
   14000df77:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000df80:	mov    rdx,rcx
   14000df83:	lea    rcx,[rsp+0x90]
   14000df8b:	call   0x140007f20
   14000df90:	nop
   14000df91:	mov    rdx,rax
   14000df94:	lea    rcx,[rsp+0x28]
   14000df99:	call   0x140007be0
   14000df9e:	lea    rdx,[rip+0x42b2b]        # 0x140050ad0
   14000dfa5:	lea    rcx,[rsp+0x28]
   14000dfaa:	call   0x140030478
   14000dfaf:	int3   
   14000dfb0:	sub    rsp,0xc8
   14000dfb7:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000dfc0:	mov    rdx,rcx
   14000dfc3:	lea    rcx,[rsp+0x80]
   14000dfcb:	call   0x140007f90
   14000dfd0:	nop
   14000dfd1:	mov    rdx,rax
   14000dfd4:	lea    rcx,[rsp+0x28]
   14000dfd9:	call   0x140007c10
   14000dfde:	lea    rdx,[rip+0x423fb]        # 0x1400503e0
   14000dfe5:	lea    rcx,[rsp+0x28]
   14000dfea:	call   0x140030478
   14000dfef:	int3   
   14000dff0:	sub    rsp,0xc8
   14000dff7:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000e000:	mov    rdx,rcx
   14000e003:	lea    rcx,[rsp+0x80]
   14000e00b:	call   0x140007fe0
   14000e010:	nop
   14000e011:	mov    rdx,rax
   14000e014:	lea    rcx,[rsp+0x28]
   14000e019:	call   0x140007c40
   14000e01e:	lea    rdx,[rip+0x428d3]        # 0x1400508f8
   14000e025:	lea    rcx,[rsp+0x28]
   14000e02a:	call   0x140030478
   14000e02f:	int3   
   14000e030:	sub    rsp,0xc8
   14000e037:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000e040:	mov    rdx,rcx
   14000e043:	lea    rcx,[rsp+0x80]
   14000e04b:	call   0x140008070
   14000e050:	nop
   14000e051:	mov    rdx,rax
   14000e054:	lea    rcx,[rsp+0x28]
   14000e059:	call   0x140007cd0
   14000e05e:	lea    rdx,[rip+0x422d3]        # 0x140050338
   14000e065:	lea    rcx,[rsp+0x28]
   14000e06a:	call   0x140030478
   14000e06f:	int3   
   14000e070:	mov    rax,rsp
   14000e073:	push   rdi
   14000e074:	sub    rsp,0x70
   14000e078:	mov    QWORD PTR [rax-0x58],0xfffffffffffffffe
   14000e080:	mov    QWORD PTR [rax+0x8],rbx
   14000e084:	mov    QWORD PTR [rax+0x10],rsi
   14000e088:	mov    esi,r9d
   14000e08b:	mov    rdi,r8
   14000e08e:	mov    rbx,rdx
   14000e091:	mov    rdx,rcx
   14000e094:	lea    rcx,[rax-0x50]
   14000e098:	call   0x140008030
   14000e09d:	nop
   14000e09e:	mov    QWORD PTR [rax+0x30],rbx
   14000e0a2:	mov    QWORD PTR [rax+0x38],rdi
   14000e0a6:	mov    DWORD PTR [rax+0x40],esi
   14000e0a9:	mov    rcx,rax
   14000e0ac:	call   0x14000dd30
   14000e0b1:	int3   
   14000e0b2:	int3   
   14000e0b3:	int3   
   14000e0b4:	int3   
   14000e0b5:	int3   
   14000e0b6:	int3   
   14000e0b7:	int3   
   14000e0b8:	int3   
   14000e0b9:	int3   
   14000e0ba:	int3   
   14000e0bb:	int3   
   14000e0bc:	int3   
   14000e0bd:	int3   
   14000e0be:	int3   
   14000e0bf:	int3   
   14000e0c0:	mov    rax,rsp
   14000e0c3:	push   rdi
   14000e0c4:	sub    rsp,0x70
   14000e0c8:	mov    QWORD PTR [rax-0x58],0xfffffffffffffffe
   14000e0d0:	mov    QWORD PTR [rax+0x8],rbx
   14000e0d4:	mov    QWORD PTR [rax+0x10],rsi
   14000e0d8:	mov    esi,r9d
   14000e0db:	mov    rdi,r8
   14000e0de:	mov    rbx,rdx
   14000e0e1:	mov    rdx,rcx
   14000e0e4:	lea    rcx,[rax-0x50]
   14000e0e8:	call   0x140008050
   14000e0ed:	nop
   14000e0ee:	mov    QWORD PTR [rax+0x30],rbx
   14000e0f2:	mov    QWORD PTR [rax+0x38],rdi
   14000e0f6:	mov    DWORD PTR [rax+0x40],esi
   14000e0f9:	mov    rcx,rax
   14000e0fc:	call   0x14000dd70
   14000e101:	int3   
   14000e102:	int3   
   14000e103:	int3   
   14000e104:	int3   
   14000e105:	int3   
   14000e106:	int3   
   14000e107:	int3   
   14000e108:	int3   
   14000e109:	int3   
   14000e10a:	int3   
   14000e10b:	int3   
   14000e10c:	int3   
   14000e10d:	int3   
   14000e10e:	int3   
   14000e10f:	int3   
   14000e110:	mov    rax,rsp
   14000e113:	push   rdi
   14000e114:	sub    rsp,0x70
   14000e118:	mov    QWORD PTR [rax-0x58],0xfffffffffffffffe
   14000e120:	mov    QWORD PTR [rax+0x8],rbx
   14000e124:	mov    QWORD PTR [rax+0x10],rsi
   14000e128:	mov    esi,r9d
   14000e12b:	mov    rdi,r8
   14000e12e:	mov    rbx,rdx
   14000e131:	mov    rdx,rcx
   14000e134:	lea    rcx,[rax-0x50]
   14000e138:	call   0x140008070
   14000e13d:	nop
   14000e13e:	mov    QWORD PTR [rax+0x28],rbx
   14000e142:	mov    QWORD PTR [rax+0x30],rdi
   14000e146:	mov    DWORD PTR [rax+0x38],esi
   14000e149:	mov    rcx,rax
   14000e14c:	call   0x14000ddb0
   14000e151:	int3   
   14000e152:	int3   
   14000e153:	int3   
   14000e154:	int3   
   14000e155:	int3   
   14000e156:	int3   
   14000e157:	int3   
   14000e158:	int3   
   14000e159:	int3   
   14000e15a:	int3   
   14000e15b:	int3   
   14000e15c:	int3   
   14000e15d:	int3   
   14000e15e:	int3   
   14000e15f:	int3   
   14000e160:	mov    rax,rsp
   14000e163:	push   rdi
   14000e164:	sub    rsp,0xb0
   14000e16b:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000e174:	mov    QWORD PTR [rax+0x8],rbx
   14000e178:	mov    QWORD PTR [rax+0x10],rsi
   14000e17c:	mov    esi,r9d
   14000e17f:	mov    rdi,r8
   14000e182:	mov    rbx,rdx
   14000e185:	mov    rdx,rcx
   14000e188:	lea    rcx,[rsp+0x28]
   14000e18d:	call   0x1400080c0
   14000e192:	nop
   14000e193:	mov    QWORD PTR [rax+0x70],rbx
   14000e197:	mov    QWORD PTR [rax+0x78],rdi
   14000e19b:	mov    DWORD PTR [rax+0x80],esi
   14000e1a1:	mov    rcx,rax
   14000e1a4:	call   0x14000ddf0
   14000e1a9:	int3   
   14000e1aa:	int3   
   14000e1ab:	int3   
   14000e1ac:	int3   
   14000e1ad:	int3   
   14000e1ae:	int3   
   14000e1af:	int3   
   14000e1b0:	mov    QWORD PTR [rsp+0x8],rcx
   14000e1b5:	push   rdi
   14000e1b6:	sub    rsp,0x50
   14000e1ba:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14000e1c3:	mov    QWORD PTR [rsp+0x68],rbx
   14000e1c8:	mov    QWORD PTR [rsp+0x70],rsi
   14000e1cd:	mov    rdi,rdx
   14000e1d0:	mov    rsi,rcx
   14000e1d3:	xor    ebx,ebx
   14000e1d5:	mov    DWORD PTR [rsp+0x20],ebx
   14000e1d9:	mov    QWORD PTR [rcx],rbx
   14000e1dc:	mov    QWORD PTR [rcx+0x8],rbx
   14000e1e0:	mov    QWORD PTR [rcx+0x10],rbx
   14000e1e4:	mov    DWORD PTR [rsp+0x20],0x1
   14000e1ec:	mov    rdx,QWORD PTR [rdx]
   14000e1ef:	mov    rax,QWORD PTR [rdi+0x8]
   14000e1f3:	sub    rax,rdx
   14000e1f6:	sar    rax,0x5
   14000e1fa:	test   rax,rax
   14000e1fd:	je     0x14000e249
   14000e1ff:	mov    eax,ebx
   14000e201:	shl    rax,0x5
   14000e205:	add    rdx,rax
   14000e208:	lea    rcx,[rsp+0x30]
   14000e20d:	call   QWORD PTR [rip+0x28495]        # 0x1400366a8
   14000e213:	nop
   14000e214:	mov    rdx,rax
   14000e217:	mov    rcx,rsi
   14000e21a:	call   0x1400285a0
   14000e21f:	nop
   14000e220:	cmp    QWORD PTR [rsp+0x48],0x10
   14000e226:	jb     0x14000e232
   14000e228:	mov    rcx,QWORD PTR [rsp+0x30]
   14000e22d:	call   0x140030282
   14000e232:	inc    ebx
   14000e234:	mov    rdx,QWORD PTR [rdi]
   14000e237:	mov    eax,ebx
   14000e239:	mov    rcx,QWORD PTR [rdi+0x8]
   14000e23d:	sub    rcx,rdx
   14000e240:	sar    rcx,0x5
   14000e244:	cmp    rax,rcx
   14000e247:	jb     0x14000e201
   14000e249:	mov    rax,rsi
   14000e24c:	mov    rbx,QWORD PTR [rsp+0x68]
   14000e251:	mov    rsi,QWORD PTR [rsp+0x70]
   14000e256:	add    rsp,0x50
   14000e25a:	pop    rdi
   14000e25b:	ret    
   14000e25c:	int3   
   14000e25d:	int3   
   14000e25e:	int3   
   14000e25f:	int3   
   14000e260:	rex push rbx
   14000e262:	sub    rsp,0x30
   14000e266:	mov    edx,DWORD PTR [rdx]
   14000e268:	mov    rbx,rcx
   14000e26b:	mov    DWORD PTR [rsp+0x20],0x0
   14000e273:	call   0x140021980
   14000e278:	mov    rax,rbx
   14000e27b:	add    rsp,0x30
   14000e27f:	pop    rbx
   14000e280:	ret    
   14000e281:	int3   
   14000e282:	int3   
   14000e283:	int3   
   14000e284:	int3   
   14000e285:	int3   
   14000e286:	int3   
   14000e287:	int3   
   14000e288:	int3   
   14000e289:	int3   
   14000e28a:	int3   
   14000e28b:	int3   
   14000e28c:	int3   
   14000e28d:	int3   
   14000e28e:	int3   
   14000e28f:	int3   
   14000e290:	rex push rbx
   14000e292:	sub    rsp,0x20
   14000e296:	movzx  ebx,cl
   14000e299:	mov    rcx,rdx
   14000e29c:	call   0x14000e620
   14000e2a1:	movzx  edx,bl
   14000e2a4:	mov    rcx,rax
   14000e2a7:	add    rsp,0x20
   14000e2ab:	pop    rbx
   14000e2ac:	rex.W jmp QWORD PTR [rip+0x27fdd]        # 0x140036290
   14000e2b3:	int3   
   14000e2b4:	int3   
   14000e2b5:	int3   
   14000e2b6:	int3   
   14000e2b7:	int3   
   14000e2b8:	int3   
   14000e2b9:	int3   
   14000e2ba:	int3   
   14000e2bb:	int3   
   14000e2bc:	int3   
   14000e2bd:	int3   
   14000e2be:	int3   
   14000e2bf:	int3   
   14000e2c0:	mov    eax,ecx
   14000e2c2:	ret    
   14000e2c3:	int3   
   14000e2c4:	int3   
   14000e2c5:	int3   
   14000e2c6:	int3   
   14000e2c7:	int3   
   14000e2c8:	int3   
   14000e2c9:	int3   
   14000e2ca:	int3   
   14000e2cb:	int3   
   14000e2cc:	int3   
   14000e2cd:	int3   
   14000e2ce:	int3   
   14000e2cf:	int3   
   14000e2d0:	cmp    r8,rdx
   14000e2d3:	je     0x14000e2e3
   14000e2d5:	dec    r8
   14000e2d8:	cmp    BYTE PTR [r8],0x0
   14000e2dc:	jne    0x14000e2ea
   14000e2de:	cmp    r8,rdx
   14000e2e1:	jne    0x14000e2d5
   14000e2e3:	mov    QWORD PTR [rcx],rdx
   14000e2e6:	mov    rax,rcx
   14000e2e9:	ret    
   14000e2ea:	inc    r8
   14000e2ed:	mov    rax,rcx
   14000e2f0:	mov    QWORD PTR [rcx],r8
   14000e2f3:	ret    
   14000e2f4:	int3   
   14000e2f5:	int3   
   14000e2f6:	int3   
   14000e2f7:	int3   
   14000e2f8:	int3   
   14000e2f9:	int3   
   14000e2fa:	int3   
   14000e2fb:	int3   
   14000e2fc:	int3   
   14000e2fd:	int3   
   14000e2fe:	int3   
   14000e2ff:	int3   
   14000e300:	cmp    r8,rdx
   14000e303:	je     0x14000e313
   14000e305:	dec    r8
   14000e308:	cmp    BYTE PTR [r8],0x0
   14000e30c:	jne    0x14000e31a
   14000e30e:	cmp    r8,rdx
   14000e311:	jne    0x14000e305
   14000e313:	mov    QWORD PTR [rcx],rdx
   14000e316:	mov    rax,rcx
   14000e319:	ret    
   14000e31a:	inc    r8
   14000e31d:	mov    rax,rcx
   14000e320:	mov    QWORD PTR [rcx],r8
   14000e323:	ret    
   14000e324:	int3   
   14000e325:	int3   
   14000e326:	int3   
   14000e327:	int3   
   14000e328:	int3   
   14000e329:	int3   
   14000e32a:	int3   
   14000e32b:	int3   
   14000e32c:	int3   
   14000e32d:	int3   
   14000e32e:	int3   
   14000e32f:	int3   
   14000e330:	rex push rbx
   14000e332:	sub    rsp,0x30
   14000e336:	mov    r9,QWORD PTR [rdx+0x18]
   14000e33a:	xor    r10d,r10d
   14000e33d:	mov    rbx,rcx
   14000e340:	mov    DWORD PTR [rsp+0x20],r10d
   14000e345:	cmp    r9,0x10
   14000e349:	jb     0x14000e350
   14000e34b:	mov    rcx,QWORD PTR [rdx]
   14000e34e:	jmp    0x14000e353
   14000e350:	mov    rcx,rdx
   14000e353:	mov    rax,QWORD PTR [rdx+0x10]
   14000e357:	add    rax,rcx
   14000e35a:	cmp    r9,0x10
   14000e35e:	jb     0x14000e365
   14000e360:	mov    r8,QWORD PTR [rdx]
   14000e363:	jmp    0x14000e368
   14000e365:	mov    r8,rdx
   14000e368:	cmp    rax,r8
   14000e36b:	je     0x14000e383
   14000e36d:	nop    DWORD PTR [rax]
   14000e370:	dec    rax
   14000e373:	cmp    BYTE PTR [rax],r10b
   14000e376:	jne    0x14000e37f
   14000e378:	cmp    rax,r8
   14000e37b:	jne    0x14000e370
   14000e37d:	jmp    0x14000e383
   14000e37f:	lea    r8,[rax+0x1]
   14000e383:	cmp    r9,0x10
   14000e387:	jb     0x14000e38c
   14000e389:	mov    rdx,QWORD PTR [rdx]
   14000e38c:	mov    QWORD PTR [rbx+0x18],0xf
   14000e394:	mov    QWORD PTR [rbx+0x10],r10
   14000e398:	mov    BYTE PTR [rbx],r10b
   14000e39b:	cmp    rdx,r8
   14000e39e:	je     0x14000e3ab
   14000e3a0:	sub    r8,rdx
   14000e3a3:	mov    rcx,rbx
   14000e3a6:	call   0x14001f070
   14000e3ab:	mov    rax,rbx
   14000e3ae:	add    rsp,0x30
   14000e3b2:	pop    rbx
   14000e3b3:	ret    
   14000e3b4:	int3   
   14000e3b5:	int3   
   14000e3b6:	int3   
   14000e3b7:	int3   
   14000e3b8:	int3   
   14000e3b9:	int3   
   14000e3ba:	int3   
   14000e3bb:	int3   
   14000e3bc:	int3   
   14000e3bd:	int3   
   14000e3be:	int3   
   14000e3bf:	int3   
   14000e3c0:	mov    al,0x1
   14000e3c2:	ret    
   14000e3c3:	int3   
   14000e3c4:	int3   
   14000e3c5:	int3   
   14000e3c6:	int3   
   14000e3c7:	int3   
   14000e3c8:	int3   
   14000e3c9:	int3   
   14000e3ca:	int3   
   14000e3cb:	int3   
   14000e3cc:	int3   
   14000e3cd:	int3   
   14000e3ce:	int3   
   14000e3cf:	int3   
   14000e3d0:	mov    al,0x1
   14000e3d2:	ret    
   14000e3d3:	int3   
   14000e3d4:	int3   
   14000e3d5:	int3   
   14000e3d6:	int3   
   14000e3d7:	int3   
   14000e3d8:	int3   
   14000e3d9:	int3   
   14000e3da:	int3   
   14000e3db:	int3   
   14000e3dc:	int3   
   14000e3dd:	int3   
   14000e3de:	int3   
   14000e3df:	int3   
   14000e3e0:	mov    eax,DWORD PTR [rcx+0x68]
   14000e3e3:	and    eax,0x1
   14000e3e6:	ret    
   14000e3e7:	int3   
   14000e3e8:	int3   
   14000e3e9:	int3   
   14000e3ea:	int3   
   14000e3eb:	int3   
   14000e3ec:	int3   
   14000e3ed:	int3   
   14000e3ee:	int3   
   14000e3ef:	int3   
   14000e3f0:	mov    eax,DWORD PTR [rcx+0x68]
   14000e3f3:	and    eax,0x1
   14000e3f6:	ret    
   14000e3f7:	int3   
   14000e3f8:	int3   
   14000e3f9:	int3   
   14000e3fa:	int3   
   14000e3fb:	int3   
   14000e3fc:	int3   
   14000e3fd:	int3   
   14000e3fe:	int3   
   14000e3ff:	int3   
   14000e400:	jmp    0x14002d540
   14000e405:	int3   
   14000e406:	int3   
   14000e407:	int3   
   14000e408:	int3   
   14000e409:	int3   
   14000e40a:	int3   
   14000e40b:	int3   
   14000e40c:	int3   
   14000e40d:	int3   
   14000e40e:	int3   
   14000e40f:	int3   
   14000e410:	mov    rax,rcx
   14000e413:	ret    
   14000e414:	int3   
   14000e415:	int3   
   14000e416:	int3   
   14000e417:	int3   
   14000e418:	int3   
   14000e419:	int3   
   14000e41a:	int3   
   14000e41b:	int3   
   14000e41c:	int3   
   14000e41d:	int3   
   14000e41e:	int3   
   14000e41f:	int3   
   14000e420:	mov    rax,rcx
   14000e423:	ret    
   14000e424:	int3   
   14000e425:	int3   
   14000e426:	int3   
   14000e427:	int3   
   14000e428:	int3   
   14000e429:	int3   
   14000e42a:	int3   
   14000e42b:	int3   
   14000e42c:	int3   
   14000e42d:	int3   
   14000e42e:	int3   
   14000e42f:	int3   
   14000e430:	mov    rax,rcx
   14000e433:	ret    
   14000e434:	int3   
   14000e435:	int3   
   14000e436:	int3   
   14000e437:	int3   
   14000e438:	int3   
   14000e439:	int3   
   14000e43a:	int3   
   14000e43b:	int3   
   14000e43c:	int3   
   14000e43d:	int3   
   14000e43e:	int3   
   14000e43f:	int3   
   14000e440:	mov    rax,rcx
   14000e443:	ret    
   14000e444:	int3   
   14000e445:	int3   
   14000e446:	int3   
   14000e447:	int3   
   14000e448:	int3   
   14000e449:	int3   
   14000e44a:	int3   
   14000e44b:	int3   
   14000e44c:	int3   
   14000e44d:	int3   
   14000e44e:	int3   
   14000e44f:	int3   
   14000e450:	mov    rax,rcx
   14000e453:	ret    
   14000e454:	int3   
   14000e455:	int3   
   14000e456:	int3   
   14000e457:	int3   
   14000e458:	int3   
   14000e459:	int3   
   14000e45a:	int3   
   14000e45b:	int3   
   14000e45c:	int3   
   14000e45d:	int3   
   14000e45e:	int3   
   14000e45f:	int3   
   14000e460:	mov    rax,rcx
   14000e463:	ret    
   14000e464:	int3   
   14000e465:	int3   
   14000e466:	int3   
   14000e467:	int3   
   14000e468:	int3   
   14000e469:	int3   
   14000e46a:	int3   
   14000e46b:	int3   
   14000e46c:	int3   
   14000e46d:	int3   
   14000e46e:	int3   
   14000e46f:	int3   
   14000e470:	mov    rax,rcx
   14000e473:	ret    
   14000e474:	int3   
   14000e475:	int3   
   14000e476:	int3   
   14000e477:	int3   
   14000e478:	int3   
   14000e479:	int3   
   14000e47a:	int3   
   14000e47b:	int3   
   14000e47c:	int3   
   14000e47d:	int3   
   14000e47e:	int3   
   14000e47f:	int3   
   14000e480:	mov    rax,rcx
   14000e483:	ret    
   14000e484:	int3   
   14000e485:	int3   
   14000e486:	int3   
   14000e487:	int3   
   14000e488:	int3   
   14000e489:	int3   
   14000e48a:	int3   
   14000e48b:	int3   
   14000e48c:	int3   
   14000e48d:	int3   
   14000e48e:	int3   
   14000e48f:	int3   
   14000e490:	mov    rax,rcx
   14000e493:	ret    
   14000e494:	int3   
   14000e495:	int3   
   14000e496:	int3   
   14000e497:	int3   
   14000e498:	int3   
   14000e499:	int3   
   14000e49a:	int3   
   14000e49b:	int3   
   14000e49c:	int3   
   14000e49d:	int3   
   14000e49e:	int3   
   14000e49f:	int3   
   14000e4a0:	mov    rax,rcx
   14000e4a3:	ret    
   14000e4a4:	int3   
   14000e4a5:	int3   
   14000e4a6:	int3   
   14000e4a7:	int3   
   14000e4a8:	int3   
   14000e4a9:	int3   
   14000e4aa:	int3   
   14000e4ab:	int3   
   14000e4ac:	int3   
   14000e4ad:	int3   
   14000e4ae:	int3   
   14000e4af:	int3   
   14000e4b0:	mov    rax,rcx
   14000e4b3:	ret    
   14000e4b4:	int3   
   14000e4b5:	int3   
   14000e4b6:	int3   
   14000e4b7:	int3   
   14000e4b8:	int3   
   14000e4b9:	int3   
   14000e4ba:	int3   
   14000e4bb:	int3   
   14000e4bc:	int3   
   14000e4bd:	int3   
   14000e4be:	int3   
   14000e4bf:	int3   
   14000e4c0:	mov    rax,rcx
   14000e4c3:	ret    
   14000e4c4:	int3   
   14000e4c5:	int3   
   14000e4c6:	int3   
   14000e4c7:	int3   
   14000e4c8:	int3   
   14000e4c9:	int3   
   14000e4ca:	int3   
   14000e4cb:	int3   
   14000e4cc:	int3   
   14000e4cd:	int3   
   14000e4ce:	int3   
   14000e4cf:	int3   
   14000e4d0:	mov    rax,rcx
   14000e4d3:	ret    
   14000e4d4:	int3   
   14000e4d5:	int3   
   14000e4d6:	int3   
   14000e4d7:	int3   
   14000e4d8:	int3   
   14000e4d9:	int3   
   14000e4da:	int3   
   14000e4db:	int3   
   14000e4dc:	int3   
   14000e4dd:	int3   
   14000e4de:	int3   
   14000e4df:	int3   
   14000e4e0:	mov    rax,QWORD PTR [rcx]
   14000e4e3:	ret    
   14000e4e4:	int3   
   14000e4e5:	int3   
   14000e4e6:	int3   
   14000e4e7:	int3   
   14000e4e8:	int3   
   14000e4e9:	int3   
   14000e4ea:	int3   
   14000e4eb:	int3   
   14000e4ec:	int3   
   14000e4ed:	int3   
   14000e4ee:	int3   
   14000e4ef:	int3   
   14000e4f0:	mov    rax,QWORD PTR [rcx]
   14000e4f3:	ret    
   14000e4f4:	int3   
   14000e4f5:	int3   
   14000e4f6:	int3   
   14000e4f7:	int3   
   14000e4f8:	int3   
   14000e4f9:	int3   
   14000e4fa:	int3   
   14000e4fb:	int3   
   14000e4fc:	int3   
   14000e4fd:	int3   
   14000e4fe:	int3   
   14000e4ff:	int3   
   14000e500:	mov    rax,QWORD PTR [rcx]
   14000e503:	ret    
   14000e504:	int3   
   14000e505:	int3   
   14000e506:	int3   
   14000e507:	int3   
   14000e508:	int3   
   14000e509:	int3   
   14000e50a:	int3   
   14000e50b:	int3   
   14000e50c:	int3   
   14000e50d:	int3   
   14000e50e:	int3   
   14000e50f:	int3   
   14000e510:	rex push rdi
   14000e512:	sub    rsp,0x40
   14000e516:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000e51f:	mov    QWORD PTR [rsp+0x60],rbx
   14000e524:	mov    QWORD PTR [rsp+0x68],rsi
   14000e529:	mov    rsi,rcx
   14000e52c:	xor    edx,edx
   14000e52e:	lea    rcx,[rsp+0x50]
   14000e533:	call   QWORD PTR [rip+0x27cc7]        # 0x140036200
   14000e539:	nop
   14000e53a:	mov    rax,QWORD PTR [rip+0x49487]        # 0x1400579c8
   14000e541:	mov    QWORD PTR [rsp+0x58],rax
   14000e546:	mov    rcx,QWORD PTR [rip+0x27b1b]        # 0x140036068
   14000e54d:	call   QWORD PTR [rip+0x27d05]        # 0x140036258
   14000e553:	mov    rdi,rax
   14000e556:	mov    rax,QWORD PTR [rsi]
   14000e559:	cmp    rdi,QWORD PTR [rax+0x18]
   14000e55d:	jae    0x14000e572
   14000e55f:	mov    rcx,QWORD PTR [rax+0x10]
   14000e563:	mov    rbx,QWORD PTR [rcx+rdi*8]
   14000e567:	test   rbx,rbx
   14000e56a:	jne    0x14000e5f3
   14000e570:	jmp    0x14000e574
   14000e572:	xor    ebx,ebx
   14000e574:	cmp    BYTE PTR [rax+0x24],0x0
   14000e578:	je     0x14000e58e
   14000e57a:	call   QWORD PTR [rip+0x27d00]        # 0x140036280
   14000e580:	cmp    rdi,QWORD PTR [rax+0x18]
   14000e584:	jae    0x14000e593
   14000e586:	mov    rax,QWORD PTR [rax+0x10]
   14000e58a:	mov    rbx,QWORD PTR [rax+rdi*8]
   14000e58e:	test   rbx,rbx
   14000e591:	jne    0x14000e5f3
   14000e593:	mov    rbx,QWORD PTR [rsp+0x58]
   14000e598:	test   rbx,rbx
   14000e59b:	jne    0x14000e5f3
   14000e59d:	mov    rdx,rsi
   14000e5a0:	lea    rcx,[rsp+0x58]
   14000e5a5:	call   QWORD PTR [rip+0x27d0d]        # 0x1400362b8
   14000e5ab:	cmp    rax,0xffffffffffffffff
   14000e5af:	jne    0x14000e5d5
   14000e5b1:	lea    rdx,[rip+0x2c318]        # 0x14003a8d0
   14000e5b8:	lea    rcx,[rsp+0x28]
   14000e5bd:	call   QWORD PTR [rip+0x27e65]        # 0x140036428
   14000e5c3:	lea    rdx,[rip+0x41bd6]        # 0x1400501a0
   14000e5ca:	lea    rcx,[rsp+0x28]
   14000e5cf:	call   0x140030478
   14000e5d4:	int3   
   14000e5d5:	mov    rbx,QWORD PTR [rsp+0x58]
   14000e5da:	mov    QWORD PTR [rip+0x493e7],rbx        # 0x1400579c8
   14000e5e1:	mov    rax,QWORD PTR [rbx]
   14000e5e4:	mov    rcx,rbx
   14000e5e7:	call   QWORD PTR [rax+0x8]
   14000e5ea:	mov    rcx,rbx
   14000e5ed:	call   0x140030008
   14000e5f2:	nop
   14000e5f3:	lea    rcx,[rsp+0x50]
   14000e5f8:	call   QWORD PTR [rip+0x27c0a]        # 0x140036208
   14000e5fe:	mov    rax,rbx
   14000e601:	mov    rbx,QWORD PTR [rsp+0x60]
   14000e606:	mov    rsi,QWORD PTR [rsp+0x68]
   14000e60b:	add    rsp,0x40
   14000e60f:	pop    rdi
   14000e610:	ret    
   14000e611:	int3   
   14000e612:	int3   
   14000e613:	int3   
   14000e614:	int3   
   14000e615:	int3   
   14000e616:	int3   
   14000e617:	int3   
   14000e618:	int3   
   14000e619:	int3   
   14000e61a:	int3   
   14000e61b:	int3   
   14000e61c:	int3   
   14000e61d:	int3   
   14000e61e:	int3   
   14000e61f:	int3   
   14000e620:	rex push rdi
   14000e622:	sub    rsp,0x40
   14000e626:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000e62f:	mov    QWORD PTR [rsp+0x60],rbx
   14000e634:	mov    QWORD PTR [rsp+0x68],rsi
   14000e639:	mov    rsi,rcx
   14000e63c:	xor    edx,edx
   14000e63e:	lea    rcx,[rsp+0x50]
   14000e643:	call   QWORD PTR [rip+0x27bb7]        # 0x140036200
   14000e649:	nop
   14000e64a:	mov    rax,QWORD PTR [rip+0x4935f]        # 0x1400579b0
   14000e651:	mov    QWORD PTR [rsp+0x58],rax
   14000e656:	mov    rcx,QWORD PTR [rip+0x27a13]        # 0x140036070
   14000e65d:	call   QWORD PTR [rip+0x27bf5]        # 0x140036258
   14000e663:	mov    rdi,rax
   14000e666:	mov    rax,QWORD PTR [rsi]
   14000e669:	cmp    rdi,QWORD PTR [rax+0x18]
   14000e66d:	jae    0x14000e682
   14000e66f:	mov    rcx,QWORD PTR [rax+0x10]
   14000e673:	mov    rbx,QWORD PTR [rcx+rdi*8]
   14000e677:	test   rbx,rbx
   14000e67a:	jne    0x14000e703
   14000e680:	jmp    0x14000e684
   14000e682:	xor    ebx,ebx
   14000e684:	cmp    BYTE PTR [rax+0x24],0x0
   14000e688:	je     0x14000e69e
   14000e68a:	call   QWORD PTR [rip+0x27bf0]        # 0x140036280
   14000e690:	cmp    rdi,QWORD PTR [rax+0x18]
   14000e694:	jae    0x14000e6a3
   14000e696:	mov    rax,QWORD PTR [rax+0x10]
   14000e69a:	mov    rbx,QWORD PTR [rax+rdi*8]
   14000e69e:	test   rbx,rbx
   14000e6a1:	jne    0x14000e703
   14000e6a3:	mov    rbx,QWORD PTR [rsp+0x58]
   14000e6a8:	test   rbx,rbx
   14000e6ab:	jne    0x14000e703
   14000e6ad:	mov    rdx,rsi
   14000e6b0:	lea    rcx,[rsp+0x58]
   14000e6b5:	call   QWORD PTR [rip+0x27bdd]        # 0x140036298
   14000e6bb:	cmp    rax,0xffffffffffffffff
   14000e6bf:	jne    0x14000e6e5
   14000e6c1:	lea    rdx,[rip+0x2c208]        # 0x14003a8d0
   14000e6c8:	lea    rcx,[rsp+0x28]
   14000e6cd:	call   QWORD PTR [rip+0x27d55]        # 0x140036428
   14000e6d3:	lea    rdx,[rip+0x41ac6]        # 0x1400501a0
   14000e6da:	lea    rcx,[rsp+0x28]
   14000e6df:	call   0x140030478
   14000e6e4:	int3   
   14000e6e5:	mov    rbx,QWORD PTR [rsp+0x58]
   14000e6ea:	mov    QWORD PTR [rip+0x492bf],rbx        # 0x1400579b0
   14000e6f1:	mov    rax,QWORD PTR [rbx]
   14000e6f4:	mov    rcx,rbx
   14000e6f7:	call   QWORD PTR [rax+0x8]
   14000e6fa:	mov    rcx,rbx
   14000e6fd:	call   0x140030008
   14000e702:	nop
   14000e703:	lea    rcx,[rsp+0x50]
   14000e708:	call   QWORD PTR [rip+0x27afa]        # 0x140036208
   14000e70e:	mov    rax,rbx
   14000e711:	mov    rbx,QWORD PTR [rsp+0x60]
   14000e716:	mov    rsi,QWORD PTR [rsp+0x68]
   14000e71b:	add    rsp,0x40
   14000e71f:	pop    rdi
   14000e720:	ret    
   14000e721:	int3   
   14000e722:	int3   
   14000e723:	int3   
   14000e724:	int3   
   14000e725:	int3   
   14000e726:	int3   
   14000e727:	int3   
   14000e728:	int3   
   14000e729:	int3   
   14000e72a:	int3   
   14000e72b:	int3   
   14000e72c:	int3   
   14000e72d:	int3   
   14000e72e:	int3   
   14000e72f:	int3   
   14000e730:	rex push rsi
   14000e732:	push   rdi
   14000e733:	push   r14
   14000e735:	sub    rsp,0x40
   14000e739:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000e742:	mov    QWORD PTR [rsp+0x70],rbx
   14000e747:	mov    r14,rcx
   14000e74a:	xor    edx,edx
   14000e74c:	lea    rcx,[rsp+0x60]
   14000e751:	call   QWORD PTR [rip+0x27aa9]        # 0x140036200
   14000e757:	nop
   14000e758:	mov    rsi,QWORD PTR [rip+0x49259]        # 0x1400579b8
   14000e75f:	mov    QWORD PTR [rsp+0x68],rsi
   14000e764:	mov    rcx,QWORD PTR [rip+0x278ed]        # 0x140036058
   14000e76b:	call   QWORD PTR [rip+0x27ae7]        # 0x140036258
   14000e771:	mov    rdi,rax
   14000e774:	mov    rax,QWORD PTR [r14]
   14000e777:	cmp    rdi,QWORD PTR [rax+0x18]
   14000e77b:	jae    0x14000e790
   14000e77d:	mov    rcx,QWORD PTR [rax+0x10]
   14000e781:	mov    rbx,QWORD PTR [rcx+rdi*8]
   14000e785:	test   rbx,rbx
   14000e788:	jne    0x14000e810
   14000e78e:	jmp    0x14000e792
   14000e790:	xor    ebx,ebx
   14000e792:	cmp    BYTE PTR [rax+0x24],0x0
   14000e796:	je     0x14000e7ac
   14000e798:	call   QWORD PTR [rip+0x27ae2]        # 0x140036280
   14000e79e:	cmp    rdi,QWORD PTR [rax+0x18]
   14000e7a2:	jae    0x14000e7b1
   14000e7a4:	mov    rax,QWORD PTR [rax+0x10]
   14000e7a8:	mov    rbx,QWORD PTR [rax+rdi*8]
   14000e7ac:	test   rbx,rbx
   14000e7af:	jne    0x14000e810
   14000e7b1:	test   rsi,rsi
   14000e7b4:	je     0x14000e7bb
   14000e7b6:	mov    rbx,rsi
   14000e7b9:	jmp    0x14000e810
   14000e7bb:	mov    rdx,r14
   14000e7be:	lea    rcx,[rsp+0x68]
   14000e7c3:	call   0x14001cac0
   14000e7c8:	cmp    rax,0xffffffffffffffff
   14000e7cc:	jne    0x14000e7f2
   14000e7ce:	lea    rdx,[rip+0x2c0fb]        # 0x14003a8d0
   14000e7d5:	lea    rcx,[rsp+0x28]
   14000e7da:	call   QWORD PTR [rip+0x27c48]        # 0x140036428
   14000e7e0:	lea    rdx,[rip+0x419b9]        # 0x1400501a0
   14000e7e7:	lea    rcx,[rsp+0x28]
   14000e7ec:	call   0x140030478
   14000e7f1:	int3   
   14000e7f2:	mov    rbx,QWORD PTR [rsp+0x68]
   14000e7f7:	mov    QWORD PTR [rip+0x491ba],rbx        # 0x1400579b8
   14000e7fe:	mov    rdx,QWORD PTR [rbx]
   14000e801:	mov    rcx,rbx
   14000e804:	call   QWORD PTR [rdx+0x8]
   14000e807:	mov    rcx,rbx
   14000e80a:	call   0x140030008
   14000e80f:	nop
   14000e810:	lea    rcx,[rsp+0x60]
   14000e815:	call   QWORD PTR [rip+0x279ed]        # 0x140036208
   14000e81b:	mov    rax,rbx
   14000e81e:	mov    rbx,QWORD PTR [rsp+0x70]
   14000e823:	add    rsp,0x40
   14000e827:	pop    r14
   14000e829:	pop    rdi
   14000e82a:	pop    rsi
   14000e82b:	ret    
   14000e82c:	int3   
   14000e82d:	int3   
   14000e82e:	int3   
   14000e82f:	int3   
   14000e830:	rex push rbx
   14000e832:	sub    rsp,0x20
   14000e836:	mov    rbx,rcx
   14000e839:	mov    ecx,0xb8
   14000e83e:	call   0x14003027c
   14000e843:	test   rax,rax
   14000e846:	je     0x14000e8bb
   14000e848:	mov    QWORD PTR [rax+0x10],rbx
   14000e84c:	lea    rcx,[rip+0x2da3d]        # 0x14003c290
   14000e853:	mov    QWORD PTR [rax],rcx
   14000e856:	lea    rcx,[rip+0x2da8b]        # 0x14003c2e8
   14000e85d:	mov    QWORD PTR [rax+0x8],rcx
   14000e861:	mov    QWORD PTR [rax+0x30],0xf
   14000e869:	xor    ecx,ecx
   14000e86b:	mov    QWORD PTR [rax+0x28],rcx
   14000e86f:	mov    BYTE PTR [rax+0x18],cl
   14000e872:	mov    QWORD PTR [rax+0x38],rcx
   14000e876:	mov    QWORD PTR [rax+0x58],0xf
   14000e87e:	mov    QWORD PTR [rax+0x50],rcx
   14000e882:	mov    BYTE PTR [rax+0x40],cl
   14000e885:	mov    QWORD PTR [rax+0x60],rcx
   14000e889:	mov    QWORD PTR [rax+0x80],0xf
   14000e894:	mov    QWORD PTR [rax+0x78],rcx
   14000e898:	mov    BYTE PTR [rax+0x68],cl
   14000e89b:	mov    BYTE PTR [rax+0x88],cl
   14000e8a1:	mov    WORD PTR [rax+0x8a],cx
   14000e8a8:	mov    BYTE PTR [rax+0x8c],cl
   14000e8ae:	mov    QWORD PTR [rax+0x90],rcx
   14000e8b5:	add    rsp,0x20
   14000e8b9:	pop    rbx
   14000e8ba:	ret    
   14000e8bb:	xor    ecx,ecx
   14000e8bd:	mov    eax,ecx
   14000e8bf:	add    rsp,0x20
   14000e8c3:	pop    rbx
   14000e8c4:	ret    
   14000e8c5:	int3   
   14000e8c6:	int3   
   14000e8c7:	int3   
   14000e8c8:	int3   
   14000e8c9:	int3   
   14000e8ca:	int3   
   14000e8cb:	int3   
   14000e8cc:	int3   
   14000e8cd:	int3   
   14000e8ce:	int3   
   14000e8cf:	int3   
   14000e8d0:	mov    QWORD PTR [rsp+0x8],rcx
   14000e8d5:	push   rsi
   14000e8d6:	push   rdi
   14000e8d7:	push   r14
   14000e8d9:	sub    rsp,0x30
   14000e8dd:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14000e8e6:	mov    QWORD PTR [rsp+0x58],rbx
   14000e8eb:	mov    QWORD PTR [rsp+0x60],rbp
   14000e8f0:	mov    r14,rdx
   14000e8f3:	mov    rbx,rcx
   14000e8f6:	xor    ebp,ebp
   14000e8f8:	mov    DWORD PTR [rsp+0x20],ebp
   14000e8fc:	mov    QWORD PTR [rcx+0x18],0xf
   14000e904:	mov    QWORD PTR [rcx+0x10],rbp
   14000e908:	mov    BYTE PTR [rcx],bpl
   14000e90b:	mov    DWORD PTR [rsp+0x20],0x1
   14000e913:	movzx  esi,BYTE PTR [rdx]
   14000e916:	test   sil,sil
   14000e919:	je     0x14000e9d2
   14000e91f:	nop
   14000e920:	mov    r8,QWORD PTR [rbx+0x10]
   14000e924:	or     rax,0xffffffffffffffff
   14000e928:	sub    rax,r8
   14000e92b:	cmp    rax,0x1
   14000e92f:	jbe    0x14000e9c4
   14000e935:	lea    rdi,[r8+0x1]
   14000e939:	cmp    rdi,0xfffffffffffffffe
   14000e93d:	ja     0x14000e9b6
   14000e93f:	mov    rax,QWORD PTR [rbx+0x18]
   14000e943:	cmp    rax,rdi
   14000e946:	jae    0x14000e955
   14000e948:	mov    rdx,rdi
   14000e94b:	mov    rcx,rbx
   14000e94e:	call   0x14001c600
   14000e953:	jmp    0x14000e971
   14000e955:	test   rdi,rdi
   14000e958:	jne    0x14000e976
   14000e95a:	mov    QWORD PTR [rbx+0x10],rbp
   14000e95e:	cmp    rax,0x10
   14000e962:	jb     0x14000e969
   14000e964:	mov    rax,QWORD PTR [rbx]
   14000e967:	jmp    0x14000e96c
   14000e969:	mov    rax,rbx
   14000e96c:	mov    BYTE PTR [rax],0x0
   14000e96f:	jmp    0x14000e9a4
   14000e971:	test   rdi,rdi
   14000e974:	je     0x14000e9a4
   14000e976:	mov    rcx,QWORD PTR [rbx+0x10]
   14000e97a:	cmp    QWORD PTR [rbx+0x18],0x10
   14000e97f:	jb     0x14000e986
   14000e981:	mov    rax,QWORD PTR [rbx]
   14000e984:	jmp    0x14000e989
   14000e986:	mov    rax,rbx
   14000e989:	mov    BYTE PTR [rax+rcx*1],sil
   14000e98d:	mov    QWORD PTR [rbx+0x10],rdi
   14000e991:	cmp    QWORD PTR [rbx+0x18],0x10
   14000e996:	jb     0x14000e99d
   14000e998:	mov    rax,QWORD PTR [rbx]
   14000e99b:	jmp    0x14000e9a0
   14000e99d:	mov    rax,rbx
   14000e9a0:	mov    BYTE PTR [rax+rdi*1],0x0
   14000e9a4:	inc    r14
   14000e9a7:	movzx  esi,BYTE PTR [r14]
   14000e9ab:	test   sil,sil
   14000e9ae:	jne    0x14000e920
   14000e9b4:	jmp    0x14000e9d2
   14000e9b6:	lea    rcx,[rip+0x2df5b]        # 0x14003c918
   14000e9bd:	call   QWORD PTR [rip+0x2785d]        # 0x140036220
   14000e9c3:	int3   
   14000e9c4:	lea    rcx,[rip+0x2df4d]        # 0x14003c918
   14000e9cb:	call   QWORD PTR [rip+0x2784f]        # 0x140036220
   14000e9d1:	int3   
   14000e9d2:	mov    rax,rbx
   14000e9d5:	mov    rbx,QWORD PTR [rsp+0x58]
   14000e9da:	mov    rbp,QWORD PTR [rsp+0x60]
   14000e9df:	add    rsp,0x30
   14000e9e3:	pop    r14
   14000e9e5:	pop    rdi
   14000e9e6:	pop    rsi
   14000e9e7:	ret    
   14000e9e8:	int3   
   14000e9e9:	int3   
   14000e9ea:	int3   
   14000e9eb:	int3   
   14000e9ec:	int3   
   14000e9ed:	int3   
   14000e9ee:	int3   
   14000e9ef:	int3   
   14000e9f0:	mov    QWORD PTR [rsp+0x8],rcx
   14000e9f5:	push   rsi
   14000e9f6:	push   rdi
   14000e9f7:	push   r14
   14000e9f9:	sub    rsp,0x30
   14000e9fd:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14000ea06:	mov    QWORD PTR [rsp+0x58],rbx
   14000ea0b:	mov    QWORD PTR [rsp+0x60],rbp
   14000ea10:	mov    r14,rdx
   14000ea13:	mov    rbx,rcx
   14000ea16:	xor    ebp,ebp
   14000ea18:	mov    DWORD PTR [rsp+0x20],ebp
   14000ea1c:	mov    QWORD PTR [rcx+0x18],0xf
   14000ea24:	mov    QWORD PTR [rcx+0x10],rbp
   14000ea28:	mov    BYTE PTR [rcx],bpl
   14000ea2b:	mov    DWORD PTR [rsp+0x20],0x1
   14000ea33:	movzx  esi,BYTE PTR [rdx]
   14000ea36:	test   sil,sil
   14000ea39:	je     0x14000eaf2
   14000ea3f:	nop
   14000ea40:	mov    r8,QWORD PTR [rbx+0x10]
   14000ea44:	or     rax,0xffffffffffffffff
   14000ea48:	sub    rax,r8
   14000ea4b:	cmp    rax,0x1
   14000ea4f:	jbe    0x14000eae4
   14000ea55:	lea    rdi,[r8+0x1]
   14000ea59:	cmp    rdi,0xfffffffffffffffe
   14000ea5d:	ja     0x14000ead6
   14000ea5f:	mov    rax,QWORD PTR [rbx+0x18]
   14000ea63:	cmp    rax,rdi
   14000ea66:	jae    0x14000ea75
   14000ea68:	mov    rdx,rdi
   14000ea6b:	mov    rcx,rbx
   14000ea6e:	call   0x14001c600
   14000ea73:	jmp    0x14000ea91
   14000ea75:	test   rdi,rdi
   14000ea78:	jne    0x14000ea96
   14000ea7a:	mov    QWORD PTR [rbx+0x10],rbp
   14000ea7e:	cmp    rax,0x10
   14000ea82:	jb     0x14000ea89
   14000ea84:	mov    rax,QWORD PTR [rbx]
   14000ea87:	jmp    0x14000ea8c
   14000ea89:	mov    rax,rbx
   14000ea8c:	mov    BYTE PTR [rax],0x0
   14000ea8f:	jmp    0x14000eac4
   14000ea91:	test   rdi,rdi
   14000ea94:	je     0x14000eac4
   14000ea96:	mov    rcx,QWORD PTR [rbx+0x10]
   14000ea9a:	cmp    QWORD PTR [rbx+0x18],0x10
   14000ea9f:	jb     0x14000eaa6
   14000eaa1:	mov    rax,QWORD PTR [rbx]
   14000eaa4:	jmp    0x14000eaa9
   14000eaa6:	mov    rax,rbx
   14000eaa9:	mov    BYTE PTR [rax+rcx*1],sil
   14000eaad:	mov    QWORD PTR [rbx+0x10],rdi
   14000eab1:	cmp    QWORD PTR [rbx+0x18],0x10
   14000eab6:	jb     0x14000eabd
   14000eab8:	mov    rax,QWORD PTR [rbx]
   14000eabb:	jmp    0x14000eac0
   14000eabd:	mov    rax,rbx
   14000eac0:	mov    BYTE PTR [rax+rdi*1],0x0
   14000eac4:	inc    r14
   14000eac7:	movzx  esi,BYTE PTR [r14]
   14000eacb:	test   sil,sil
   14000eace:	jne    0x14000ea40
   14000ead4:	jmp    0x14000eaf2
   14000ead6:	lea    rcx,[rip+0x2de3b]        # 0x14003c918
   14000eadd:	call   QWORD PTR [rip+0x2773d]        # 0x140036220
   14000eae3:	int3   
   14000eae4:	lea    rcx,[rip+0x2de2d]        # 0x14003c918
   14000eaeb:	call   QWORD PTR [rip+0x2772f]        # 0x140036220
   14000eaf1:	int3   
   14000eaf2:	mov    rax,rbx
   14000eaf5:	mov    rbx,QWORD PTR [rsp+0x58]
   14000eafa:	mov    rbp,QWORD PTR [rsp+0x60]
   14000eaff:	add    rsp,0x30
   14000eb03:	pop    r14
   14000eb05:	pop    rdi
   14000eb06:	pop    rsi
   14000eb07:	ret    
   14000eb08:	int3   
   14000eb09:	int3   
   14000eb0a:	int3   
   14000eb0b:	int3   
   14000eb0c:	int3   
   14000eb0d:	int3   
   14000eb0e:	int3   
   14000eb0f:	int3   
   14000eb10:	sub    rsp,0x18
   14000eb14:	mov    rax,QWORD PTR [rdx]
   14000eb17:	mov    DWORD PTR [rsp],0x0
   14000eb1e:	mov    QWORD PTR [rcx],rax
   14000eb21:	mov    rax,QWORD PTR [rdx+0x8]
   14000eb25:	mov    QWORD PTR [rcx+0x8],rax
   14000eb29:	test   rax,rax
   14000eb2c:	je     0x14000eb32
   14000eb2e:	lock inc DWORD PTR [rax+0x8]
   14000eb32:	mov    rax,rcx
   14000eb35:	add    rsp,0x18
   14000eb39:	ret    
   14000eb3a:	int3   
   14000eb3b:	int3   
   14000eb3c:	int3   
   14000eb3d:	int3   
   14000eb3e:	int3   
   14000eb3f:	int3   
   14000eb40:	sub    rsp,0x18
   14000eb44:	mov    rax,QWORD PTR [rdx]
   14000eb47:	mov    DWORD PTR [rsp],0x0
   14000eb4e:	mov    QWORD PTR [rcx],rax
   14000eb51:	mov    rax,QWORD PTR [rdx+0x8]
   14000eb55:	mov    QWORD PTR [rcx+0x8],rax
   14000eb59:	test   rax,rax
   14000eb5c:	je     0x14000eb62
   14000eb5e:	lock inc DWORD PTR [rax+0x8]
   14000eb62:	mov    rax,rcx
   14000eb65:	add    rsp,0x18
   14000eb69:	ret    
   14000eb6a:	int3   
   14000eb6b:	int3   
   14000eb6c:	int3   
   14000eb6d:	int3   
   14000eb6e:	int3   
   14000eb6f:	int3   
   14000eb70:	mov    QWORD PTR [rcx],rdx
   14000eb73:	mov    rax,rcx
   14000eb76:	ret    
   14000eb77:	int3   
   14000eb78:	int3   
   14000eb79:	int3   
   14000eb7a:	int3   
   14000eb7b:	int3   
   14000eb7c:	int3   
   14000eb7d:	int3   
   14000eb7e:	int3   
   14000eb7f:	int3   
   14000eb80:	movzx  eax,BYTE PTR [rcx]
   14000eb83:	ret    
   14000eb84:	int3   
   14000eb85:	int3   
   14000eb86:	int3   
   14000eb87:	int3   
   14000eb88:	int3   
   14000eb89:	int3   
   14000eb8a:	int3   
   14000eb8b:	int3   
   14000eb8c:	int3   
   14000eb8d:	int3   
   14000eb8e:	int3   
   14000eb8f:	int3   
   14000eb90:	mov    QWORD PTR [rcx],rdx
   14000eb93:	mov    rax,rcx
   14000eb96:	ret    
   14000eb97:	int3   
   14000eb98:	int3   
   14000eb99:	int3   
   14000eb9a:	int3   
   14000eb9b:	int3   
   14000eb9c:	int3   
   14000eb9d:	int3   
   14000eb9e:	int3   
   14000eb9f:	int3   
   14000eba0:	mov    QWORD PTR [rcx],rdx
   14000eba3:	mov    rax,rcx
   14000eba6:	ret    
   14000eba7:	int3   
   14000eba8:	int3   
   14000eba9:	int3   
   14000ebaa:	int3   
   14000ebab:	int3   
   14000ebac:	int3   
   14000ebad:	int3   
   14000ebae:	int3   
   14000ebaf:	int3   
   14000ebb0:	mov    rax,QWORD PTR [rdx]
   14000ebb3:	mov    QWORD PTR [rcx],rax
   14000ebb6:	mov    rax,rcx
   14000ebb9:	ret    
   14000ebba:	int3   
   14000ebbb:	int3   
   14000ebbc:	int3   
   14000ebbd:	int3   
   14000ebbe:	int3   
   14000ebbf:	int3   
   14000ebc0:	jmp    0x14000ed00
   14000ebc5:	int3   
   14000ebc6:	int3   
   14000ebc7:	int3   
   14000ebc8:	int3   
   14000ebc9:	int3   
   14000ebca:	int3   
   14000ebcb:	int3   
   14000ebcc:	int3   
   14000ebcd:	int3   
   14000ebce:	int3   
   14000ebcf:	int3   
   14000ebd0:	jmp    0x14000ed00
   14000ebd5:	int3   
   14000ebd6:	int3   
   14000ebd7:	int3   
   14000ebd8:	int3   
   14000ebd9:	int3   
   14000ebda:	int3   
   14000ebdb:	int3   
   14000ebdc:	int3   
   14000ebdd:	int3   
   14000ebde:	int3   
   14000ebdf:	int3   
   14000ebe0:	jmp    0x14000ed00
   14000ebe5:	int3   
   14000ebe6:	int3   
   14000ebe7:	int3   
   14000ebe8:	int3   
   14000ebe9:	int3   
   14000ebea:	int3   
   14000ebeb:	int3   
   14000ebec:	int3   
   14000ebed:	int3   
   14000ebee:	int3   
   14000ebef:	int3   
   14000ebf0:	jmp    0x14000ee70
   14000ebf5:	int3   
   14000ebf6:	int3   
   14000ebf7:	int3   
   14000ebf8:	int3   
   14000ebf9:	int3   
   14000ebfa:	int3   
   14000ebfb:	int3   
   14000ebfc:	int3   
   14000ebfd:	int3   
   14000ebfe:	int3   
   14000ebff:	int3   
   14000ec00:	jmp    0x14000ee70
   14000ec05:	int3   
   14000ec06:	int3   
   14000ec07:	int3   
   14000ec08:	int3   
   14000ec09:	int3   
   14000ec0a:	int3   
   14000ec0b:	int3   
   14000ec0c:	int3   
   14000ec0d:	int3   
   14000ec0e:	int3   
   14000ec0f:	int3   
   14000ec10:	jmp    0x14000ee70
   14000ec15:	int3   
   14000ec16:	int3   
   14000ec17:	int3   
   14000ec18:	int3   
   14000ec19:	int3   
   14000ec1a:	int3   
   14000ec1b:	int3   
   14000ec1c:	int3   
   14000ec1d:	int3   
   14000ec1e:	int3   
   14000ec1f:	int3   
   14000ec20:	sub    rsp,0x58
   14000ec24:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000ec2d:	lea    rcx,[rsp+0x28]
   14000ec32:	call   0x14001fa80
   14000ec37:	nop
   14000ec38:	mov    rcx,rax
   14000ec3b:	call   0x14000df70
   14000ec40:	int3   
   14000ec41:	int3   
   14000ec42:	int3   
   14000ec43:	int3   
   14000ec44:	int3   
   14000ec45:	int3   
   14000ec46:	int3   
   14000ec47:	int3   
   14000ec48:	int3   
   14000ec49:	int3   
   14000ec4a:	int3   
   14000ec4b:	int3   
   14000ec4c:	int3   
   14000ec4d:	int3   
   14000ec4e:	int3   
   14000ec4f:	int3   
   14000ec50:	add    rcx,0x18
   14000ec54:	rex.W jmp QWORD PTR [rip+0x27565]        # 0x1400361c0
   14000ec5b:	int3   
   14000ec5c:	int3   
   14000ec5d:	int3   
   14000ec5e:	int3   
   14000ec5f:	int3   
   14000ec60:	mov    rax,r9
   14000ec63:	mov    r9,r8
   14000ec66:	mov    r8,rdx
   14000ec69:	mov    rdx,rax
   14000ec6c:	jmp    0x14000ed00
   14000ec71:	int3   
   14000ec72:	int3   
   14000ec73:	int3   
   14000ec74:	int3   
   14000ec75:	int3   
   14000ec76:	int3   
   14000ec77:	int3   
   14000ec78:	int3   
   14000ec79:	int3   
   14000ec7a:	int3   
   14000ec7b:	int3   
   14000ec7c:	int3   
   14000ec7d:	int3   
   14000ec7e:	int3   
   14000ec7f:	int3   
   14000ec80:	mov    rax,r9
   14000ec83:	mov    r9,r8
   14000ec86:	mov    r8,rdx
   14000ec89:	mov    rdx,rax
   14000ec8c:	jmp    0x14000ee70
   14000ec91:	int3   
   14000ec92:	int3   
   14000ec93:	int3   
   14000ec94:	int3   
   14000ec95:	int3   
   14000ec96:	int3   
   14000ec97:	int3   
   14000ec98:	int3   
   14000ec99:	int3   
   14000ec9a:	int3   
   14000ec9b:	int3   
   14000ec9c:	int3   
   14000ec9d:	int3   
   14000ec9e:	int3   
   14000ec9f:	int3   
   14000eca0:	sub    rsp,0x58
   14000eca4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000ecad:	lea    rcx,[rsp+0x28]
   14000ecb2:	call   0x14001fa80
   14000ecb7:	nop
   14000ecb8:	mov    rcx,rax
   14000ecbb:	call   0x14000df70
   14000ecc0:	int3   
   14000ecc1:	int3   
   14000ecc2:	int3   
   14000ecc3:	int3   
   14000ecc4:	int3   
   14000ecc5:	int3   
   14000ecc6:	int3   
   14000ecc7:	int3   
   14000ecc8:	int3   
   14000ecc9:	int3   
   14000ecca:	int3   
   14000eccb:	int3   
   14000eccc:	int3   
   14000eccd:	int3   
   14000ecce:	int3   
   14000eccf:	int3   
   14000ecd0:	sub    rsp,0x58
   14000ecd4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000ecdd:	lea    rcx,[rsp+0x28]
   14000ece2:	call   0x14001fa80
   14000ece7:	nop
   14000ece8:	mov    rcx,rax
   14000eceb:	call   0x14000df70
   14000ecf0:	int3   
   14000ecf1:	int3   
   14000ecf2:	int3   
   14000ecf3:	int3   
   14000ecf4:	int3   
   14000ecf5:	int3   
   14000ecf6:	int3   
   14000ecf7:	int3   
   14000ecf8:	int3   
   14000ecf9:	int3   
   14000ecfa:	int3   
   14000ecfb:	int3   
   14000ecfc:	int3   
   14000ecfd:	int3   
   14000ecfe:	int3   
   14000ecff:	int3   
   14000ed00:	rex push rbp
   14000ed02:	push   rsi
   14000ed03:	push   r12
   14000ed05:	push   r13
   14000ed07:	push   r14
   14000ed09:	sub    rsp,0x30
   14000ed0d:	mov    rsi,rcx
   14000ed10:	mov    rcx,QWORD PTR [rcx]
   14000ed13:	mov    r10,r9
   14000ed16:	mov    eax,DWORD PTR [rcx+0x40]
   14000ed19:	mov    r12,r8
   14000ed1c:	mov    r13,rdx
   14000ed1f:	test   al,0x2
   14000ed21:	jne    0x14000ed3c
   14000ed23:	or     eax,0x2
   14000ed26:	mov    DWORD PTR [rcx+0x40],eax
   14000ed29:	mov    r9,QWORD PTR [rsi]
   14000ed2c:	mov    rax,QWORD PTR [r9+0x20]
   14000ed30:	mov    QWORD PTR [r9+0x30],rax
   14000ed34:	add    rax,QWORD PTR [r9+0x28]
   14000ed38:	mov    QWORD PTR [r9+0x38],rax
   14000ed3c:	mov    rbp,QWORD PTR [rsi]
   14000ed3f:	lea    r14,[r8+r10*1]
   14000ed43:	mov    QWORD PTR [rsp+0x60],r8
   14000ed48:	cmp    r8,r14
   14000ed4b:	je     0x14000ee59
   14000ed51:	mov    QWORD PTR [rsp+0x78],r15
   14000ed56:	mov    QWORD PTR [rsp+0x68],rbx
   14000ed5b:	mov    QWORD PTR [rsp+0x70],rdi
   14000ed60:	mov    rax,QWORD PTR [rbp+0x38]
   14000ed64:	cmp    QWORD PTR [rbp+0x30],rax
   14000ed68:	jne    0x14000edcf
   14000ed6a:	mov    rax,QWORD PTR [rsi]
   14000ed6d:	mov    rcx,r13
   14000ed70:	mov    rdx,QWORD PTR [rax+0x20]
   14000ed74:	mov    rdi,QWORD PTR [rax+0x30]
   14000ed78:	sub    rdi,rdx
   14000ed7b:	mov    r8,rdi
   14000ed7e:	call   QWORD PTR [rip+0x2743c]        # 0x1400361c0
   14000ed84:	mov    rbx,rax
   14000ed87:	cmp    rax,rdi
   14000ed8a:	jge    0x14000edaa
   14000ed8c:	test   rax,rax
   14000ed8f:	jle    0x14000edaa
   14000ed91:	mov    r8,rdi
   14000ed94:	sub    r8,rax
   14000ed97:	je     0x14000edaa
   14000ed99:	mov    rax,QWORD PTR [rsi]
   14000ed9c:	mov    rcx,QWORD PTR [rax+0x20]
   14000eda0:	lea    rdx,[rcx+rbx*1]
   14000eda4:	call   QWORD PTR [rip+0x276b6]        # 0x140036460
   14000edaa:	mov    r8,QWORD PTR [rsi]
   14000edad:	mov    rdx,QWORD PTR [r8+0x28]
   14000edb1:	mov    rcx,QWORD PTR [r8+0x20]
   14000edb5:	mov    rax,rcx
   14000edb8:	sub    rax,rbx
   14000edbb:	add    rax,rdi
   14000edbe:	mov    QWORD PTR [r8+0x30],rax
   14000edc2:	lea    rax,[rcx+rdx*1]
   14000edc6:	mov    QWORD PTR [r8+0x38],rax
   14000edca:	test   rbx,rbx
   14000edcd:	je     0x14000ee4a
   14000edcf:	mov    rdi,QWORD PTR [rsi]
   14000edd2:	mov    rax,QWORD PTR [rbp+0x38]
   14000edd6:	lea    r9,[rbp+0x30]
   14000edda:	lea    rdx,[rsp+0x60]
   14000eddf:	mov    rcx,rdi
   14000ede2:	mov    r8,r14
   14000ede5:	mov    QWORD PTR [rsp+0x20],rax
   14000edea:	call   QWORD PTR [rip+0x27810]        # 0x140036600
   14000edf0:	mov    rax,QWORD PTR [rip+0x277e9]        # 0x1400365e0
   14000edf7:	mov    edx,DWORD PTR [rax]
   14000edf9:	mov    rcx,rdi
   14000edfc:	call   QWORD PTR [rip+0x27796]        # 0x140036598
   14000ee02:	lea    r8,[rbp+0x30]
   14000ee06:	lea    rdx,[rsp+0x60]
   14000ee0b:	mov    r9b,0x1
   14000ee0e:	mov    rcx,rdi
   14000ee11:	mov    ebx,eax
   14000ee13:	call   QWORD PTR [rip+0x27777]        # 0x140036590
   14000ee19:	mov    ecx,ebx
   14000ee1b:	call   QWORD PTR [rip+0x277e7]        # 0x140036608
   14000ee21:	mov    rcx,QWORD PTR [rip+0x277a8]        # 0x1400365d0
   14000ee28:	cmp    ebx,DWORD PTR [rcx]
   14000ee2a:	je     0x14000ee39
   14000ee2c:	cmp    QWORD PTR [rsp+0x60],r14
   14000ee31:	jne    0x14000ed60
   14000ee37:	jmp    0x14000ee4a
   14000ee39:	movzx  r8d,BYTE PTR [rsp+0x60]
   14000ee3f:	mov    rdx,r13
   14000ee42:	mov    rcx,rsi
   14000ee45:	call   0x1400094e0
   14000ee4a:	mov    rdi,QWORD PTR [rsp+0x70]
   14000ee4f:	mov    rbx,QWORD PTR [rsp+0x68]
   14000ee54:	mov    r15,QWORD PTR [rsp+0x78]
   14000ee59:	mov    rax,QWORD PTR [rsp+0x60]
   14000ee5e:	sub    rax,r12
   14000ee61:	add    rsp,0x30
   14000ee65:	pop    r14
   14000ee67:	pop    r13
   14000ee69:	pop    r12
   14000ee6b:	pop    rsi
   14000ee6c:	pop    rbp
   14000ee6d:	ret    
   14000ee6e:	int3   
   14000ee6f:	int3   
   14000ee70:	rex push rbp
   14000ee72:	push   rsi
   14000ee73:	push   r12
   14000ee75:	push   r13
   14000ee77:	push   r14
   14000ee79:	sub    rsp,0x30
   14000ee7d:	mov    rsi,rcx
   14000ee80:	mov    rcx,QWORD PTR [rcx]
   14000ee83:	mov    r10,r9
   14000ee86:	mov    eax,DWORD PTR [rcx+0x48]
   14000ee89:	mov    r12,r8
   14000ee8c:	mov    r13,rdx
   14000ee8f:	test   al,0x2
   14000ee91:	jne    0x14000eeac
   14000ee93:	or     eax,0x2
   14000ee96:	mov    DWORD PTR [rcx+0x48],eax
   14000ee99:	mov    r9,QWORD PTR [rsi]
   14000ee9c:	mov    rax,QWORD PTR [r9+0x28]
   14000eea0:	mov    QWORD PTR [r9+0x38],rax
   14000eea4:	add    rax,QWORD PTR [r9+0x30]
   14000eea8:	mov    QWORD PTR [r9+0x40],rax
   14000eeac:	mov    rbp,QWORD PTR [rsi]
   14000eeaf:	lea    r14,[r8+r10*1]
   14000eeb3:	mov    QWORD PTR [rsp+0x60],r8
   14000eeb8:	cmp    r8,r14
   14000eebb:	je     0x14000efd5
   14000eec1:	mov    QWORD PTR [rsp+0x78],r15
   14000eec6:	mov    QWORD PTR [rsp+0x68],rbx
   14000eecb:	mov    QWORD PTR [rsp+0x70],rdi
   14000eed0:	mov    rax,QWORD PTR [rbp+0x40]
   14000eed4:	cmp    QWORD PTR [rbp+0x38],rax
   14000eed8:	jne    0x14000ef43
   14000eeda:	mov    rax,QWORD PTR [rsi]
   14000eedd:	mov    rcx,r13
   14000eee0:	mov    rdx,QWORD PTR [rax+0x28]
   14000eee4:	mov    rdi,QWORD PTR [rax+0x38]
   14000eee8:	sub    rdi,rdx
   14000eeeb:	mov    r8,rdi
   14000eeee:	call   QWORD PTR [rip+0x272cc]        # 0x1400361c0
   14000eef4:	mov    rbx,rax
   14000eef7:	cmp    rax,rdi
   14000eefa:	jge    0x14000ef1a
   14000eefc:	test   rax,rax
   14000eeff:	jle    0x14000ef1a
   14000ef01:	mov    r8,rdi
   14000ef04:	sub    r8,rax
   14000ef07:	je     0x14000ef1a
   14000ef09:	mov    rax,QWORD PTR [rsi]
   14000ef0c:	mov    rcx,QWORD PTR [rax+0x28]
   14000ef10:	lea    rdx,[rcx+rbx*1]
   14000ef14:	call   QWORD PTR [rip+0x27546]        # 0x140036460
   14000ef1a:	mov    r8,QWORD PTR [rsi]
   14000ef1d:	mov    rdx,QWORD PTR [r8+0x30]
   14000ef21:	mov    rcx,QWORD PTR [r8+0x28]
   14000ef25:	mov    rax,rcx
   14000ef28:	sub    rax,rbx
   14000ef2b:	add    rax,rdi
   14000ef2e:	mov    QWORD PTR [r8+0x38],rax
   14000ef32:	lea    rax,[rcx+rdx*1]
   14000ef36:	mov    QWORD PTR [r8+0x40],rax
   14000ef3a:	test   rbx,rbx
   14000ef3d:	je     0x14000efc6
   14000ef43:	mov    rdi,QWORD PTR [rsi]
   14000ef46:	mov    rax,QWORD PTR [rbp+0x40]
   14000ef4a:	lea    r9,[rbp+0x38]
   14000ef4e:	lea    rdx,[rsp+0x60]
   14000ef53:	mov    rcx,rdi
   14000ef56:	mov    r8,r14
   14000ef59:	mov    QWORD PTR [rsp+0x20],rax
   14000ef5e:	call   QWORD PTR [rip+0x2769c]        # 0x140036600
   14000ef64:	mov    rax,QWORD PTR [rip+0x2767d]        # 0x1400365e8
   14000ef6b:	mov    edx,DWORD PTR [rax]
   14000ef6d:	mov    rcx,rdi
   14000ef70:	call   QWORD PTR [rip+0x2762a]        # 0x1400365a0
   14000ef76:	lea    r8,[rbp+0x38]
   14000ef7a:	lea    rdx,[rsp+0x60]
   14000ef7f:	xor    r9d,r9d
   14000ef82:	mov    rcx,rdi
   14000ef85:	mov    ebx,eax
   14000ef87:	call   QWORD PTR [rip+0x27603]        # 0x140036590
   14000ef8d:	mov    ecx,ebx
   14000ef8f:	call   QWORD PTR [rip+0x27673]        # 0x140036608
   14000ef95:	mov    rcx,QWORD PTR [rip+0x27634]        # 0x1400365d0
   14000ef9c:	cmp    ebx,DWORD PTR [rcx]
   14000ef9e:	sete   dl
   14000efa1:	mov    BYTE PTR [rdi+0x20],dl
   14000efa4:	test   dl,dl
   14000efa6:	jne    0x14000efb5
   14000efa8:	cmp    QWORD PTR [rsp+0x60],r14
   14000efad:	jne    0x14000eed0
   14000efb3:	jmp    0x14000efc6
   14000efb5:	movzx  r8d,BYTE PTR [rsp+0x60]
   14000efbb:	mov    rdx,r13
   14000efbe:	mov    rcx,rsi
   14000efc1:	call   0x140009580
   14000efc6:	mov    rdi,QWORD PTR [rsp+0x70]
   14000efcb:	mov    rbx,QWORD PTR [rsp+0x68]
   14000efd0:	mov    r15,QWORD PTR [rsp+0x78]
   14000efd5:	mov    rax,QWORD PTR [rsp+0x60]
   14000efda:	sub    rax,r12
   14000efdd:	add    rsp,0x30
   14000efe1:	pop    r14
   14000efe3:	pop    r13
   14000efe5:	pop    r12
   14000efe7:	pop    rsi
   14000efe8:	pop    rbp
   14000efe9:	ret    
   14000efea:	int3   
   14000efeb:	int3   
   14000efec:	int3   
   14000efed:	int3   
   14000efee:	int3   
   14000efef:	int3   
   14000eff0:	rex.W jmp QWORD PTR [rip+0x271c9]        # 0x1400361c0
   14000eff7:	int3   
   14000eff8:	int3   
   14000eff9:	int3   
   14000effa:	int3   
   14000effb:	int3   
   14000effc:	int3   
   14000effd:	int3   
   14000effe:	int3   
   14000efff:	int3   
   14000f000:	rex.W jmp QWORD PTR [rip+0x271b9]        # 0x1400361c0
   14000f007:	int3   
   14000f008:	int3   
   14000f009:	int3   
   14000f00a:	int3   
   14000f00b:	int3   
   14000f00c:	int3   
   14000f00d:	int3   
   14000f00e:	int3   
   14000f00f:	int3   
   14000f010:	sub    rsp,0x58
   14000f014:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000f01d:	lea    rcx,[rsp+0x28]
   14000f022:	call   0x14001fa80
   14000f027:	nop
   14000f028:	mov    rcx,rax
   14000f02b:	call   0x14000df70
   14000f030:	int3   
   14000f031:	int3   
   14000f032:	int3   
   14000f033:	int3   
   14000f034:	int3   
   14000f035:	int3   
   14000f036:	int3   
   14000f037:	int3   
   14000f038:	int3   
   14000f039:	int3   
   14000f03a:	int3   
   14000f03b:	int3   
   14000f03c:	int3   
   14000f03d:	int3   
   14000f03e:	int3   
   14000f03f:	int3   
   14000f040:	mov    QWORD PTR [rsp+0x8],rbx
   14000f045:	mov    QWORD PTR [rsp+0x10],rsi
   14000f04a:	mov    QWORD PTR [rsp+0x18],rdi
   14000f04f:	push   r14
   14000f051:	sub    rsp,0x20
   14000f055:	xor    ebx,ebx
   14000f057:	mov    rdi,r8
   14000f05a:	mov    rsi,rdx
   14000f05d:	mov    r14,rcx
   14000f060:	test   r8,r8
   14000f063:	jle    0x14000f08b
   14000f065:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000f070:	mov    rcx,QWORD PTR [r14]
   14000f073:	mov    r8,rdi
   14000f076:	lea    rdx,[rbx+rsi*1]
   14000f07a:	sub    r8,rbx
   14000f07d:	call   QWORD PTR [rip+0x2713d]        # 0x1400361c0
   14000f083:	add    rbx,rax
   14000f086:	cmp    rbx,rdi
   14000f089:	jl     0x14000f070
   14000f08b:	mov    rsi,QWORD PTR [rsp+0x38]
   14000f090:	mov    rdi,QWORD PTR [rsp+0x40]
   14000f095:	mov    rax,rbx
   14000f098:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f09d:	add    rsp,0x20
   14000f0a1:	pop    r14
   14000f0a3:	ret    
   14000f0a4:	int3   
   14000f0a5:	int3   
   14000f0a6:	int3   
   14000f0a7:	int3   
   14000f0a8:	int3   
   14000f0a9:	int3   
   14000f0aa:	int3   
   14000f0ab:	int3   
   14000f0ac:	int3   
   14000f0ad:	int3   
   14000f0ae:	int3   
   14000f0af:	int3   
   14000f0b0:	mov    QWORD PTR [rsp+0x8],rbx
   14000f0b5:	mov    QWORD PTR [rsp+0x10],rsi
   14000f0ba:	mov    QWORD PTR [rsp+0x18],rdi
   14000f0bf:	push   r14
   14000f0c1:	sub    rsp,0x20
   14000f0c5:	xor    ebx,ebx
   14000f0c7:	mov    rdi,r8
   14000f0ca:	mov    rsi,rdx
   14000f0cd:	mov    r14,rcx
   14000f0d0:	test   r8,r8
   14000f0d3:	jle    0x14000f0fb
   14000f0d5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000f0e0:	mov    rcx,QWORD PTR [r14]
   14000f0e3:	mov    r8,rdi
   14000f0e6:	lea    rdx,[rbx+rsi*1]
   14000f0ea:	sub    r8,rbx
   14000f0ed:	call   QWORD PTR [rip+0x270cd]        # 0x1400361c0
   14000f0f3:	add    rbx,rax
   14000f0f6:	cmp    rbx,rdi
   14000f0f9:	jl     0x14000f0e0
   14000f0fb:	mov    rsi,QWORD PTR [rsp+0x38]
   14000f100:	mov    rdi,QWORD PTR [rsp+0x40]
   14000f105:	mov    rax,rbx
   14000f108:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f10d:	add    rsp,0x20
   14000f111:	pop    r14
   14000f113:	ret    
   14000f114:	int3   
   14000f115:	int3   
   14000f116:	int3   
   14000f117:	int3   
   14000f118:	int3   
   14000f119:	int3   
   14000f11a:	int3   
   14000f11b:	int3   
   14000f11c:	int3   
   14000f11d:	int3   
   14000f11e:	int3   
   14000f11f:	int3   
   14000f120:	jmp    0x14002e5f0
   14000f125:	int3   
   14000f126:	int3   
   14000f127:	int3   
   14000f128:	int3   
   14000f129:	int3   
   14000f12a:	int3   
   14000f12b:	int3   
   14000f12c:	int3   
   14000f12d:	int3   
   14000f12e:	int3   
   14000f12f:	int3   
   14000f130:	jmp    0x14002e5f0
   14000f135:	int3   
   14000f136:	int3   
   14000f137:	int3   
   14000f138:	int3   
   14000f139:	int3   
   14000f13a:	int3   
   14000f13b:	int3   
   14000f13c:	int3   
   14000f13d:	int3   
   14000f13e:	int3   
   14000f13f:	int3   
   14000f140:	mov    rcx,QWORD PTR [rcx]
   14000f143:	add    rcx,0x18
   14000f147:	rex.W jmp QWORD PTR [rip+0x27072]        # 0x1400361c0
   14000f14e:	int3   
   14000f14f:	int3   
   14000f150:	sub    rsp,0x58
   14000f154:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000f15d:	mov    QWORD PTR [rsp+0x40],0xf
   14000f166:	mov    QWORD PTR [rsp+0x38],0x0
   14000f16f:	mov    BYTE PTR [rsp+0x28],0x0
   14000f174:	mov    r9,r8
   14000f177:	lea    r8,[rsp+0x28]
   14000f17c:	call   0x14000ff50
   14000f181:	nop
   14000f182:	cmp    QWORD PTR [rsp+0x40],0x10
   14000f188:	jb     0x14000f194
   14000f18a:	mov    rcx,QWORD PTR [rsp+0x28]
   14000f18f:	call   0x140030282
   14000f194:	add    rsp,0x58
   14000f198:	ret    
   14000f199:	int3   
   14000f19a:	int3   
   14000f19b:	int3   
   14000f19c:	int3   
   14000f19d:	int3   
   14000f19e:	int3   
   14000f19f:	int3   
   14000f1a0:	mov    rax,rsp
   14000f1a3:	push   rbp
   14000f1a4:	push   rdi
   14000f1a5:	push   r14
   14000f1a7:	lea    rbp,[rax-0x198]
   14000f1ae:	sub    rsp,0x280
   14000f1b5:	mov    QWORD PTR [rbp-0x30],0xfffffffffffffffe
   14000f1bd:	mov    QWORD PTR [rax+0x10],rbx
   14000f1c1:	mov    QWORD PTR [rax+0x18],rsi
   14000f1c5:	mov    rsi,r9
   14000f1c8:	mov    rdi,r8
   14000f1cb:	mov    r14,rdx
   14000f1ce:	mov    rbx,rcx
   14000f1d1:	cmp    QWORD PTR [rcx+0x18],0x10
   14000f1d6:	jb     0x14000f1dd
   14000f1d8:	mov    rdx,QWORD PTR [rcx]
   14000f1db:	jmp    0x14000f1e0
   14000f1dd:	mov    rdx,rcx
   14000f1e0:	mov    DWORD PTR [rsp+0x20],0x1
   14000f1e8:	mov    r9d,0x40
   14000f1ee:	lea    r8d,[r9-0x3e]
   14000f1f2:	lea    rcx,[rbp-0x20]
   14000f1f6:	call   0x140010b30
   14000f1fb:	nop
   14000f1fc:	mov    rax,QWORD PTR [rbp-0x20]
   14000f200:	movsxd rcx,DWORD PTR [rax+0x4]
   14000f204:	test   BYTE PTR [rbp+rcx*1-0x10],0x6
   14000f209:	je     0x14000f343
   14000f20f:	mov    QWORD PTR [rsp+0x48],0xf
   14000f218:	xor    edi,edi
   14000f21a:	mov    QWORD PTR [rsp+0x40],rdi
   14000f21f:	mov    BYTE PTR [rsp+0x30],dil
   14000f224:	lea    r8d,[rdi+0x10]
   14000f228:	lea    rdx,[rip+0x2dd39]        # 0x14003cf68
   14000f22f:	lea    rcx,[rsp+0x30]
   14000f234:	call   0x14001f070
   14000f239:	nop
   14000f23a:	xor    r9d,r9d
   14000f23d:	mov    r8,rbx
   14000f240:	lea    rdx,[rsp+0x30]
   14000f245:	lea    rcx,[rsp+0x50]
   14000f24a:	call   0x140023f00
   14000f24f:	nop
   14000f250:	cmp    QWORD PTR [rax+0x18],0x10
   14000f255:	jb     0x14000f25a
   14000f257:	mov    rax,QWORD PTR [rax]
   14000f25a:	mov    QWORD PTR [rbp+0x1a0],rax
   14000f261:	lea    rdx,[rbp+0x1a0]
   14000f268:	lea    rcx,[rsp+0x70]
   14000f26d:	call   QWORD PTR [rip+0x271dd]        # 0x140036450
   14000f273:	lea    rax,[rip+0x2b6fe]        # 0x14003a978
   14000f27a:	mov    QWORD PTR [rsp+0x70],rax
   14000f27f:	cmp    QWORD PTR [rsp+0x68],0x10
   14000f285:	jb     0x14000f291
   14000f287:	mov    rcx,QWORD PTR [rsp+0x50]
   14000f28c:	call   0x140030282
   14000f291:	mov    QWORD PTR [rsp+0x68],0xf
   14000f29a:	mov    QWORD PTR [rsp+0x60],rdi
   14000f29f:	mov    BYTE PTR [rsp+0x50],0x0
   14000f2a4:	lea    rax,[rip+0x2b715]        # 0x14003a9c0
   14000f2ab:	mov    QWORD PTR [rsp+0x70],rax
   14000f2b0:	mov    QWORD PTR [rbp-0x60],0xf
   14000f2b8:	mov    QWORD PTR [rbp-0x68],rdi
   14000f2bc:	mov    BYTE PTR [rbp-0x78],0x0
   14000f2c0:	or     r9,0xffffffffffffffff
   14000f2c4:	xor    r8d,r8d
   14000f2c7:	lea    rdx,[rsp+0x30]
   14000f2cc:	lea    rcx,[rbp-0x78]
   14000f2d0:	call   0x14001ef20
   14000f2d5:	nop
   14000f2d6:	mov    QWORD PTR [rbp-0x40],0xf
   14000f2de:	mov    QWORD PTR [rbp-0x48],rdi
   14000f2e2:	mov    BYTE PTR [rbp-0x58],0x0
   14000f2e6:	or     r9,0xffffffffffffffff
   14000f2ea:	xor    r8d,r8d
   14000f2ed:	mov    rdx,rbx
   14000f2f0:	lea    rcx,[rbp-0x58]
   14000f2f4:	call   0x14001ef20
   14000f2f9:	mov    DWORD PTR [rbp-0x38],edi
   14000f2fc:	lea    rax,[rip+0x2b78d]        # 0x14003aa90
   14000f303:	mov    QWORD PTR [rsp+0x70],rax
   14000f308:	lea    rdx,[rsp+0x70]
   14000f30d:	lea    rcx,[rbp+0xf0]
   14000f314:	call   0x1400080c0
   14000f319:	nop
   14000f31a:	lea    rcx,[rip+0x2d85f]        # 0x14003cb80
   14000f321:	mov    QWORD PTR [rax+0x70],rcx
   14000f325:	lea    rcx,[rip+0x2d7e4]        # 0x14003cb10
   14000f32c:	mov    QWORD PTR [rax+0x78],rcx
   14000f330:	mov    DWORD PTR [rax+0x80],0xa8
   14000f33a:	mov    rcx,rax
   14000f33d:	call   0x14000ddf0
   14000f342:	nop
   14000f343:	lea    rdx,[rbp-0x20]
   14000f347:	add    rcx,rdx
   14000f34a:	mov    r8,rdi
   14000f34d:	lea    rdx,[rbp+0x1a0]
   14000f354:	call   QWORD PTR [rip+0x26e36]        # 0x140036190
   14000f35a:	mov    rcx,QWORD PTR [rbp+0x1a0]
   14000f361:	test   rcx,rcx
   14000f364:	je     0x14000f37f
   14000f366:	mov    rax,QWORD PTR [rcx]
   14000f369:	call   QWORD PTR [rax+0x10]
   14000f36c:	test   rax,rax
   14000f36f:	je     0x14000f37f
   14000f371:	mov    r8,QWORD PTR [rax]
   14000f374:	mov    edx,0x1
   14000f379:	mov    rcx,rax
   14000f37c:	call   QWORD PTR [r8]
   14000f37f:	mov    r9,rsi
   14000f382:	mov    r8,rbx
   14000f385:	mov    rdx,r14
   14000f388:	lea    rcx,[rbp-0x20]
   14000f38c:	call   0x14000ff50
   14000f391:	nop
   14000f392:	mov    rax,QWORD PTR [rbp-0x20]
   14000f396:	movsxd rcx,DWORD PTR [rax+0x4]
   14000f39a:	lea    rax,[rip+0x2d75f]        # 0x14003cb00
   14000f3a1:	mov    QWORD PTR [rbp+rcx*1-0x20],rax
   14000f3a6:	mov    rax,QWORD PTR [rbp-0x20]
   14000f3aa:	movsxd rcx,DWORD PTR [rax+0x4]
   14000f3ae:	lea    edx,[rcx-0xa8]
   14000f3b4:	mov    DWORD PTR [rbp+rcx*1-0x24],edx
   14000f3b8:	lea    rcx,[rbp-0x18]
   14000f3bc:	call   0x140016e90
   14000f3c1:	lea    rcx,[rbp-0x10]
   14000f3c5:	call   QWORD PTR [rip+0x26da5]        # 0x140036170
   14000f3cb:	lea    rcx,[rbp+0x88]
   14000f3d2:	call   QWORD PTR [rip+0x26dc8]        # 0x1400361a0
   14000f3d8:	lea    r11,[rsp+0x280]
   14000f3e0:	mov    rbx,QWORD PTR [r11+0x28]
   14000f3e4:	mov    rsi,QWORD PTR [r11+0x30]
   14000f3e8:	mov    rsp,r11
   14000f3eb:	pop    r14
   14000f3ed:	pop    rdi
   14000f3ee:	pop    rbp
   14000f3ef:	ret    
   14000f3f0:	mov    QWORD PTR [rsp+0x8],rbx
   14000f3f5:	mov    QWORD PTR [rsp+0x10],rsi
   14000f3fa:	push   rdi
   14000f3fb:	sub    rsp,0x20
   14000f3ff:	movzx  edi,r9b
   14000f403:	mov    eax,r8d
   14000f406:	mov    rsi,rdx
   14000f409:	mov    rbx,rcx
   14000f40c:	test   r9b,r9b
   14000f40f:	je     0x14000f41d
   14000f411:	mov    r8,QWORD PTR [rsp+0x50]
   14000f416:	mov    edx,eax
   14000f418:	call   0x14000fee0
   14000f41d:	mov    dl,0x3c
   14000f41f:	mov    rcx,rbx
   14000f422:	call   0x140002db0
   14000f427:	mov    dl,0x21
   14000f429:	mov    rcx,rax
   14000f42c:	call   0x140002db0
   14000f431:	mov    dl,0x2d
   14000f433:	mov    rcx,rax
   14000f436:	call   0x140002db0
   14000f43b:	mov    dl,0x2d
   14000f43d:	mov    rcx,rax
   14000f440:	call   0x140002db0
   14000f445:	mov    rdx,rsi
   14000f448:	mov    rcx,rbx
   14000f44b:	call   0x140002ba0
   14000f450:	mov    dl,0x2d
   14000f452:	mov    rcx,rbx
   14000f455:	call   0x140002db0
   14000f45a:	mov    dl,0x2d
   14000f45c:	mov    rcx,rax
   14000f45f:	call   0x140002db0
   14000f464:	mov    dl,0x3e
   14000f466:	mov    rcx,rax
   14000f469:	call   0x140002db0
   14000f46e:	test   dil,dil
   14000f471:	je     0x14000f47d
   14000f473:	mov    dl,0xa
   14000f475:	mov    rcx,rbx
   14000f478:	call   0x140002db0
   14000f47d:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f482:	mov    rsi,QWORD PTR [rsp+0x38]
   14000f487:	add    rsp,0x20
   14000f48b:	pop    rdi
   14000f48c:	ret    
   14000f48d:	int3   
   14000f48e:	int3   
   14000f48f:	int3   
   14000f490:	mov    DWORD PTR [rsp+0x20],r9d
   14000f495:	mov    QWORD PTR [rsp+0x18],r8
   14000f49a:	mov    QWORD PTR [rsp+0x10],rdx
   14000f49f:	mov    QWORD PTR [rsp+0x8],rcx
   14000f4a4:	push   rbp
   14000f4a5:	push   rbx
   14000f4a6:	push   rsi
   14000f4a7:	push   rdi
   14000f4a8:	lea    rbp,[rsp-0x37]
   14000f4ad:	sub    rsp,0xd8
   14000f4b4:	mov    QWORD PTR [rbp+0x27],0xfffffffffffffffe
   14000f4bc:	mov    r10d,r9d
   14000f4bf:	mov    rsi,rcx
   14000f4c2:	mov    rcx,QWORD PTR [rbp+0x7f]
   14000f4c6:	cmp    QWORD PTR [rcx+0x8],0x0
   14000f4cb:	seta   BYTE PTR [rbp-0x71]
   14000f4cf:	mov    BYTE PTR [rbp-0x70],0x0
   14000f4d3:	cmp    QWORD PTR [r8+0x10],0x0
   14000f4d8:	sete   BYTE PTR [rbp-0x6f]
   14000f4dc:	mov    r9,QWORD PTR [r8+0x20]
   14000f4e0:	lea    rax,[r9+0x11]
   14000f4e4:	test   rax,rax
   14000f4e7:	je     0x14000f4ed
   14000f4e9:	add    rax,0xffffffffffffffef
   14000f4ed:	mov    rax,QWORD PTR [rax+0x8]
   14000f4f1:	mov    rbx,QWORD PTR [rax+0x68]
   14000f4f5:	test   rbx,rbx
   14000f4f8:	je     0x14000f4fe
   14000f4fa:	add    rbx,0xffffffffffffffa0
   14000f4fe:	lea    rax,[r9+0x11]
   14000f502:	test   rax,rax
   14000f505:	je     0x14000f50d
   14000f507:	lea    rdi,[rax-0x11]
   14000f50b:	jmp    0x14000f50f
   14000f50d:	xor    edi,edi
   14000f50f:	mov    rdi,QWORD PTR [rdi+0x8]
   14000f513:	cmp    rbx,rdi
   14000f516:	je     0x14000f69b
   14000f51c:	nop    DWORD PTR [rax+0x0]
   14000f520:	mov    eax,DWORD PTR [rip+0x484ca]        # 0x1400579f0
   14000f526:	test   al,0x1
   14000f528:	jne    0x14000f551
   14000f52a:	or     DWORD PTR [rip+0x484bf],0x1        # 0x1400579f0
   14000f531:	lea    rdx,[rip+0x2fc48]        # 0x14003f180
   14000f538:	lea    rcx,[rip+0x48491]        # 0x1400579d0
   14000f53f:	call   0x14000e8d0
   14000f544:	lea    rcx,[rip+0x265e5]        # 0x140035b30
   14000f54b:	call   0x140030388
   14000f550:	nop
   14000f551:	lea    rdx,[rip+0x48478]        # 0x1400579d0
   14000f558:	cmp    QWORD PTR [rip+0x48488],0x10        # 0x1400579e8
   14000f560:	cmovae rdx,QWORD PTR [rip+0x48468]        # 0x1400579d0
   14000f568:	mov    rsi,QWORD PTR [rbx+0x10]
   14000f56c:	cmp    QWORD PTR [rbx+0x18],0x10
   14000f571:	jb     0x14000f578
   14000f573:	mov    rcx,QWORD PTR [rbx]
   14000f576:	jmp    0x14000f57b
   14000f578:	mov    rcx,rbx
   14000f57b:	mov    r8,QWORD PTR [rip+0x4845e]        # 0x1400579e0
   14000f582:	cmp    rsi,r8
   14000f585:	cmovb  r8,rsi
   14000f589:	test   r8,r8
   14000f58c:	jne    0x14000f592
   14000f58e:	xor    eax,eax
   14000f590:	jmp    0x14000f597
   14000f592:	call   0x140030484
   14000f597:	cdqe   
   14000f599:	test   rax,rax
   14000f59c:	jne    0x14000f5b8
   14000f59e:	cmp    rsi,QWORD PTR [rip+0x4843b]        # 0x1400579e0
   14000f5a5:	jae    0x14000f5ac
   14000f5a7:	or     eax,0xffffffff
   14000f5aa:	jmp    0x14000f5b8
   14000f5ac:	xor    eax,eax
   14000f5ae:	cmp    rsi,QWORD PTR [rip+0x4842b]        # 0x1400579e0
   14000f5b5:	setne  al
   14000f5b8:	test   eax,eax
   14000f5ba:	sete   al
   14000f5bd:	test   al,al
   14000f5bf:	sete   al
   14000f5c2:	test   al,al
   14000f5c4:	je     0x14000f674
   14000f5ca:	mov    BYTE PTR [rbp-0x6f],0x0
   14000f5ce:	mov    eax,DWORD PTR [rip+0x48444]        # 0x140057a18
   14000f5d4:	test   al,0x1
   14000f5d6:	jne    0x14000f5ff
   14000f5d8:	or     DWORD PTR [rip+0x48439],0x1        # 0x140057a18
   14000f5df:	lea    rdx,[rip+0x2fbaa]        # 0x14003f190
   14000f5e6:	lea    rcx,[rip+0x4840b]        # 0x1400579f8
   14000f5ed:	call   0x14000e8d0
   14000f5f2:	lea    rcx,[rip+0x26617]        # 0x140035c10
   14000f5f9:	call   0x140030388
   14000f5fe:	nop
   14000f5ff:	lea    rdx,[rip+0x483f2]        # 0x1400579f8
   14000f606:	cmp    QWORD PTR [rip+0x48402],0x10        # 0x140057a10
   14000f60e:	cmovae rdx,QWORD PTR [rip+0x483e2]        # 0x1400579f8
   14000f616:	mov    rsi,QWORD PTR [rbx+0x10]
   14000f61a:	cmp    QWORD PTR [rbx+0x18],0x10
   14000f61f:	jb     0x14000f626
   14000f621:	mov    rcx,QWORD PTR [rbx]
   14000f624:	jmp    0x14000f629
   14000f626:	mov    rcx,rbx
   14000f629:	mov    r8,QWORD PTR [rip+0x483d8]        # 0x140057a08
   14000f630:	cmp    rsi,r8
   14000f633:	cmovb  r8,rsi
   14000f637:	test   r8,r8
   14000f63a:	jne    0x14000f640
   14000f63c:	xor    eax,eax
   14000f63e:	jmp    0x14000f645
   14000f640:	call   0x140030484
   14000f645:	cdqe   
   14000f647:	test   rax,rax
   14000f64a:	jne    0x14000f666
   14000f64c:	cmp    rsi,QWORD PTR [rip+0x483b5]        # 0x140057a08
   14000f653:	jae    0x14000f65a
   14000f655:	or     eax,0xffffffff
   14000f658:	jmp    0x14000f666
   14000f65a:	xor    eax,eax
   14000f65c:	cmp    rsi,QWORD PTR [rip+0x483a5]        # 0x140057a08
   14000f663:	setne  al
   14000f666:	test   eax,eax
   14000f668:	sete   al
   14000f66b:	test   al,al
   14000f66d:	sete   al
   14000f670:	test   al,al
   14000f672:	jne    0x14000f68b
   14000f674:	mov    rbx,QWORD PTR [rbx+0x68]
   14000f678:	test   rbx,rbx
   14000f67b:	je     0x14000f681
   14000f67d:	add    rbx,0xffffffffffffffa0
   14000f681:	cmp    rbx,rdi
   14000f684:	je     0x14000f68f
   14000f686:	jmp    0x14000f520
   14000f68b:	mov    BYTE PTR [rbp-0x70],0x1
   14000f68f:	mov    r10d,DWORD PTR [rbp+0x77]
   14000f693:	mov    rcx,QWORD PTR [rbp+0x7f]
   14000f697:	mov    rsi,QWORD PTR [rbp+0x5f]
   14000f69b:	mov    rdi,QWORD PTR [rbp+0x6f]
   14000f69f:	cmp    QWORD PTR [rdi+0x10],0x0
   14000f6a4:	jne    0x14000f738
   14000f6aa:	mov    rax,QWORD PTR [rdi+0x20]
   14000f6ae:	add    rax,0x11
   14000f6b2:	je     0x14000f6ba
   14000f6b4:	add    rax,0xffffffffffffffef
   14000f6b8:	jmp    0x14000f6bc
   14000f6ba:	xor    eax,eax
   14000f6bc:	cmp    QWORD PTR [rax+0x18],0x0
   14000f6c1:	jne    0x14000f738
   14000f6c3:	test   r10d,r10d
   14000f6c6:	js     0x14000fed0
   14000f6cc:	movsxd rdx,r10d
   14000f6cf:	imul   rdx,QWORD PTR [rcx+0x8]
   14000f6d4:	mov    QWORD PTR [rbp-0x51],0xf
   14000f6dc:	mov    QWORD PTR [rbp-0x59],0x0
   14000f6e4:	mov    BYTE PTR [rbp-0x69],0x0
   14000f6e8:	movzx  r8d,BYTE PTR [rcx]
   14000f6ec:	lea    rcx,[rbp-0x69]
   14000f6f0:	call   0x14001f1f0
   14000f6f5:	nop
   14000f6f6:	lea    rdx,[rbp-0x69]
   14000f6fa:	mov    rcx,rsi
   14000f6fd:	call   0x140002ba0
   14000f702:	nop
   14000f703:	cmp    QWORD PTR [rbp-0x51],0x10
   14000f708:	jb     0x14000f713
   14000f70a:	mov    rcx,QWORD PTR [rbp-0x69]
   14000f70e:	call   0x140030282
   14000f713:	mov    dl,0x3c
   14000f715:	mov    rcx,rsi
   14000f718:	call   0x140002db0
   14000f71d:	mov    rcx,rax
   14000f720:	mov    rdx,QWORD PTR [rbp+0x67]
   14000f724:	call   0x140002ba0
   14000f729:	mov    rcx,rax
   14000f72c:	mov    dl,0x2f
   14000f72e:	call   0x140002db0
   14000f733:	jmp    0x14000feb6
   14000f738:	test   r10d,r10d
   14000f73b:	js     0x14000f98c
   14000f741:	movsxd rdx,r10d
   14000f744:	imul   rdx,QWORD PTR [rcx+0x8]
   14000f749:	mov    QWORD PTR [rbp-0x51],0xf
   14000f751:	mov    QWORD PTR [rbp-0x59],0x0
   14000f759:	mov    BYTE PTR [rbp-0x69],0x0
   14000f75d:	movzx  r8d,BYTE PTR [rcx]
   14000f761:	lea    rcx,[rbp-0x69]
   14000f765:	call   0x14001f1f0
   14000f76a:	nop
   14000f76b:	lea    rdx,[rbp-0x69]
   14000f76f:	mov    rcx,rsi
   14000f772:	call   0x140002ba0
   14000f777:	nop
   14000f778:	cmp    QWORD PTR [rbp-0x51],0x10
   14000f77d:	jb     0x14000f788
   14000f77f:	mov    rcx,QWORD PTR [rbp-0x69]
   14000f783:	call   0x140030282
   14000f788:	mov    dl,0x3c
   14000f78a:	mov    rcx,rsi
   14000f78d:	call   0x140002db0
   14000f792:	mov    rcx,rax
   14000f795:	mov    rdx,QWORD PTR [rbp+0x67]
   14000f799:	call   0x140002ba0
   14000f79e:	mov    eax,DWORD PTR [rip+0x4824c]        # 0x1400579f0
   14000f7a4:	test   al,0x1
   14000f7a6:	jne    0x14000f7d1
   14000f7a8:	or     eax,0x1
   14000f7ab:	mov    DWORD PTR [rip+0x4823f],eax        # 0x1400579f0
   14000f7b1:	lea    rdx,[rip+0x2f9c8]        # 0x14003f180
   14000f7b8:	lea    rcx,[rip+0x48211]        # 0x1400579d0
   14000f7bf:	call   0x14000e8d0
   14000f7c4:	lea    rcx,[rip+0x26365]        # 0x140035b30
   14000f7cb:	call   0x140030388
   14000f7d0:	nop
   14000f7d1:	mov    QWORD PTR [rbp+0xf],0xf
   14000f7d9:	mov    QWORD PTR [rbp+0x7],0x0
   14000f7e1:	mov    BYTE PTR [rbp-0x9],0x0
   14000f7e5:	or     r9,0xffffffffffffffff
   14000f7e9:	xor    r8d,r8d
   14000f7ec:	lea    rdx,[rip+0x481dd]        # 0x1400579d0
   14000f7f3:	lea    rcx,[rbp-0x9]
   14000f7f7:	call   0x14001ef20
   14000f7fc:	mov    BYTE PTR [rbp+0x17],0x2e
   14000f800:	lea    rax,[rbp-0x9]
   14000f804:	cmp    QWORD PTR [rbp+0xf],0x10
   14000f809:	cmovae rax,QWORD PTR [rbp-0x9]
   14000f80e:	mov    QWORD PTR [rbp+0x1f],rax
   14000f812:	lea    r8,[rbp-0x9]
   14000f816:	lea    rdx,[rbp-0x69]
   14000f81a:	mov    rcx,rdi
   14000f81d:	call   0x140024450
   14000f822:	nop
   14000f823:	cmp    QWORD PTR [rbp+0xf],0x10
   14000f828:	jb     0x14000f833
   14000f82a:	mov    rcx,QWORD PTR [rbp-0x9]
   14000f82e:	call   0x140030282
   14000f833:	mov    QWORD PTR [rbp+0xf],0xf
   14000f83b:	mov    QWORD PTR [rbp+0x7],0x0
   14000f843:	mov    BYTE PTR [rbp-0x9],0x0
   14000f847:	cmp    BYTE PTR [rbp-0x69],0x0
   14000f84b:	je     0x14000f947
   14000f851:	mov    rsi,QWORD PTR [rbp-0x61]
   14000f855:	mov    rax,QWORD PTR [rsi+0x20]
   14000f859:	add    rax,0x11
   14000f85d:	je     0x14000f865
   14000f85f:	add    rax,0xffffffffffffffef
   14000f863:	jmp    0x14000f867
   14000f865:	xor    eax,eax
   14000f867:	mov    rax,QWORD PTR [rax+0x8]
   14000f86b:	mov    rbx,QWORD PTR [rax+0x68]
   14000f86f:	test   rbx,rbx
   14000f872:	je     0x14000f880
   14000f874:	add    rbx,0xffffffffffffffa0
   14000f878:	nop    DWORD PTR [rax+rax*1+0x0]
   14000f880:	mov    rax,QWORD PTR [rsi+0x20]
   14000f884:	add    rax,0x11
   14000f888:	je     0x14000f890
   14000f88a:	add    rax,0xffffffffffffffef
   14000f88e:	jmp    0x14000f892
   14000f890:	xor    eax,eax
   14000f892:	cmp    rbx,QWORD PTR [rax+0x8]
   14000f896:	je     0x14000f93f
   14000f89c:	lea    rcx,[rbx+0x20]
   14000f8a0:	lea    rdx,[rbp-0x49]
   14000f8a4:	call   0x140009a40
   14000f8a9:	nop
   14000f8aa:	mov    rdx,rax
   14000f8ad:	lea    rcx,[rbp-0x29]
   14000f8b1:	call   0x140008120
   14000f8b6:	mov    rdi,rax
   14000f8b9:	mov    dl,0x20
   14000f8bb:	mov    rcx,QWORD PTR [rbp+0x5f]
   14000f8bf:	call   0x140002db0
   14000f8c4:	mov    rcx,rax
   14000f8c7:	mov    rdx,rbx
   14000f8ca:	call   0x140002ba0
   14000f8cf:	mov    rcx,rax
   14000f8d2:	mov    dl,0x3d
   14000f8d4:	call   0x140002db0
   14000f8d9:	mov    rcx,rax
   14000f8dc:	mov    dl,0x22
   14000f8de:	call   0x140002db0
   14000f8e3:	mov    rcx,rax
   14000f8e6:	mov    rdx,rdi
   14000f8e9:	call   0x140002ba0
   14000f8ee:	mov    rcx,rax
   14000f8f1:	mov    dl,0x22
   14000f8f3:	call   0x140002db0
   14000f8f8:	nop
   14000f8f9:	cmp    QWORD PTR [rbp-0x11],0x10
   14000f8fe:	jb     0x14000f909
   14000f900:	mov    rcx,QWORD PTR [rbp-0x29]
   14000f904:	call   0x140030282
   14000f909:	mov    QWORD PTR [rbp-0x11],0xf
   14000f911:	mov    QWORD PTR [rbp-0x19],0x0
   14000f919:	mov    BYTE PTR [rbp-0x29],0x0
   14000f91d:	cmp    QWORD PTR [rbp-0x31],0x10
   14000f922:	jb     0x14000f92d
   14000f924:	mov    rcx,QWORD PTR [rbp-0x49]
   14000f928:	call   0x140030282
   14000f92d:	test   rbx,rbx
   14000f930:	je     0x14000f936
   14000f932:	add    rbx,0x60
   14000f936:	mov    rbx,QWORD PTR [rbx+0x8]
   14000f93a:	jmp    0x14000f86f
   14000f93f:	mov    rsi,QWORD PTR [rbp+0x5f]
   14000f943:	mov    rdi,QWORD PTR [rbp+0x6f]
   14000f947:	mov    rcx,rsi
   14000f94a:	cmp    BYTE PTR [rbp-0x6f],0x0
   14000f94e:	je     0x14000f96b
   14000f950:	mov    dl,0x2f
   14000f952:	call   0x140002db0
   14000f957:	mov    rcx,rax
   14000f95a:	mov    dl,0x3e
   14000f95c:	call   0x140002db0
   14000f961:	movzx  eax,BYTE PTR [rbp-0x71]
   14000f965:	test   al,al
   14000f967:	je     0x14000f990
   14000f969:	jmp    0x14000f982
   14000f96b:	mov    dl,0x3e
   14000f96d:	call   0x140002db0
   14000f972:	movzx  ecx,BYTE PTR [rbp-0x70]
   14000f976:	movzx  eax,BYTE PTR [rbp-0x71]
   14000f97a:	test   cl,cl
   14000f97c:	je     0x14000f994
   14000f97e:	test   al,al
   14000f980:	je     0x14000f994
   14000f982:	mov    dl,0xa
   14000f984:	mov    rcx,rsi
   14000f987:	call   0x140002db0
   14000f98c:	movzx  eax,BYTE PTR [rbp-0x71]
   14000f990:	movzx  ecx,BYTE PTR [rbp-0x70]
   14000f994:	cmp    QWORD PTR [rdi+0x10],0x0
   14000f999:	je     0x14000fa5c
   14000f99f:	test   cl,cl
   14000f9a1:	je     0x14000f9ab
   14000f9a3:	test   al,al
   14000f9a5:	je     0x14000f9ab
   14000f9a7:	mov    bl,0x1
   14000f9a9:	jmp    0x14000f9ad
   14000f9ab:	xor    bl,bl
   14000f9ad:	lea    rdx,[rbp-0x29]
   14000f9b1:	mov    rcx,rdi
   14000f9b4:	call   0x140009a40
   14000f9b9:	mov    rdi,rax
   14000f9bc:	test   bl,bl
   14000f9be:	je     0x14000fa10
   14000f9c0:	mov    ecx,DWORD PTR [rbp+0x77]
   14000f9c3:	inc    ecx
   14000f9c5:	movsxd rdx,ecx
   14000f9c8:	mov    rax,QWORD PTR [rbp+0x7f]
   14000f9cc:	imul   rdx,QWORD PTR [rax+0x8]
   14000f9d1:	mov    QWORD PTR [rbp-0x51],0xf
   14000f9d9:	mov    QWORD PTR [rbp-0x59],0x0
   14000f9e1:	mov    BYTE PTR [rbp-0x69],0x0
   14000f9e5:	movzx  r8d,BYTE PTR [rax]
   14000f9e9:	lea    rcx,[rbp-0x69]
   14000f9ed:	call   0x14001f1f0
   14000f9f2:	nop
   14000f9f3:	lea    rdx,[rbp-0x69]
   14000f9f7:	mov    rcx,rsi
   14000f9fa:	call   0x140002ba0
   14000f9ff:	nop
   14000fa00:	cmp    QWORD PTR [rbp-0x51],0x10
   14000fa05:	jb     0x14000fa10
   14000fa07:	mov    rcx,QWORD PTR [rbp-0x69]
   14000fa0b:	call   0x140030282
   14000fa10:	mov    rdx,rdi
   14000fa13:	lea    rcx,[rbp-0x49]
   14000fa17:	call   0x140008120
   14000fa1c:	nop
   14000fa1d:	mov    rdx,rax
   14000fa20:	mov    rcx,rsi
   14000fa23:	call   0x140002ba0
   14000fa28:	nop
   14000fa29:	cmp    QWORD PTR [rbp-0x31],0x10
   14000fa2e:	jb     0x14000fa39
   14000fa30:	mov    rcx,QWORD PTR [rbp-0x49]
   14000fa34:	call   0x140030282
   14000fa39:	test   bl,bl
   14000fa3b:	je     0x14000fa48
   14000fa3d:	mov    dl,0xa
   14000fa3f:	mov    rcx,rsi
   14000fa42:	call   0x140002db0
   14000fa47:	nop
   14000fa48:	cmp    QWORD PTR [rbp-0x11],0x10
   14000fa4d:	jb     0x14000fa58
   14000fa4f:	mov    rcx,QWORD PTR [rbp-0x29]
   14000fa53:	call   0x140030282
   14000fa58:	mov    rdi,QWORD PTR [rbp+0x6f]
   14000fa5c:	mov    rax,QWORD PTR [rdi+0x20]
   14000fa60:	add    rax,0x11
   14000fa64:	je     0x14000fa6c
   14000fa66:	add    rax,0xffffffffffffffef
   14000fa6a:	jmp    0x14000fa6e
   14000fa6c:	xor    eax,eax
   14000fa6e:	mov    rax,QWORD PTR [rax+0x8]
   14000fa72:	mov    rbx,QWORD PTR [rax+0x68]
   14000fa76:	test   rbx,rbx
   14000fa79:	je     0x14000fa80
   14000fa7b:	add    rbx,0xffffffffffffffa0
   14000fa7f:	nop
   14000fa80:	mov    rax,QWORD PTR [rdi+0x20]
   14000fa84:	add    rax,0x11
   14000fa88:	je     0x14000fa90
   14000fa8a:	add    rax,0xffffffffffffffef
   14000fa8e:	jmp    0x14000fa92
   14000fa90:	xor    eax,eax
   14000fa92:	cmp    rbx,QWORD PTR [rax+0x8]
   14000fa96:	je     0x14000fe75
   14000fa9c:	mov    eax,DWORD PTR [rip+0x47f4e]        # 0x1400579f0
   14000faa2:	test   al,0x1
   14000faa4:	jne    0x14000facd
   14000faa6:	or     DWORD PTR [rip+0x47f43],0x1        # 0x1400579f0
   14000faad:	lea    rdx,[rip+0x2f6cc]        # 0x14003f180
   14000fab4:	lea    rcx,[rip+0x47f15]        # 0x1400579d0
   14000fabb:	call   0x14000e8d0
   14000fac0:	lea    rcx,[rip+0x26069]        # 0x140035b30
   14000fac7:	call   0x140030388
   14000facc:	nop
   14000facd:	lea    rdx,[rip+0x47efc]        # 0x1400579d0
   14000fad4:	cmp    QWORD PTR [rip+0x47f0c],0x10        # 0x1400579e8
   14000fadc:	cmovae rdx,QWORD PTR [rip+0x47eec]        # 0x1400579d0
   14000fae4:	mov    rdi,QWORD PTR [rbx+0x10]
   14000fae8:	cmp    QWORD PTR [rbx+0x18],0x10
   14000faed:	jb     0x14000faf4
   14000faef:	mov    rcx,QWORD PTR [rbx]
   14000faf2:	jmp    0x14000faf7
   14000faf4:	mov    rcx,rbx
   14000faf7:	mov    r8,QWORD PTR [rip+0x47ee2]        # 0x1400579e0
   14000fafe:	cmp    rdi,r8
   14000fb01:	cmovb  r8,rdi
   14000fb05:	test   r8,r8
   14000fb08:	jne    0x14000fb0e
   14000fb0a:	xor    eax,eax
   14000fb0c:	jmp    0x14000fb13
   14000fb0e:	call   0x140030484
   14000fb13:	cdqe   
   14000fb15:	test   rax,rax
   14000fb18:	jne    0x14000fb34
   14000fb1a:	cmp    rdi,QWORD PTR [rip+0x47ebf]        # 0x1400579e0
   14000fb21:	jae    0x14000fb28
   14000fb23:	or     eax,0xffffffff
   14000fb26:	jmp    0x14000fb34
   14000fb28:	xor    eax,eax
   14000fb2a:	cmp    rdi,QWORD PTR [rip+0x47eaf]        # 0x1400579e0
   14000fb31:	setne  al
   14000fb34:	test   eax,eax
   14000fb36:	sete   al
   14000fb39:	test   al,al
   14000fb3b:	jne    0x14000fe5f
   14000fb41:	mov    eax,DWORD PTR [rip+0x47ef9]        # 0x140057a40
   14000fb47:	test   al,0x1
   14000fb49:	jne    0x14000fb74
   14000fb4b:	or     eax,0x1
   14000fb4e:	mov    DWORD PTR [rip+0x47eec],eax        # 0x140057a40
   14000fb54:	lea    rdx,[rip+0x2f685]        # 0x14003f1e0
   14000fb5b:	lea    rcx,[rip+0x47ebe]        # 0x140057a20
   14000fb62:	call   0x14000e8d0
   14000fb67:	lea    rcx,[rip+0x26032]        # 0x140035ba0
   14000fb6e:	call   0x140030388
   14000fb73:	nop
   14000fb74:	lea    rdx,[rip+0x47ea5]        # 0x140057a20
   14000fb7b:	cmp    QWORD PTR [rip+0x47eb5],0x10        # 0x140057a38
   14000fb83:	cmovae rdx,QWORD PTR [rip+0x47e95]        # 0x140057a20
   14000fb8b:	mov    rsi,QWORD PTR [rbx+0x10]
   14000fb8f:	cmp    QWORD PTR [rbx+0x18],0x10
   14000fb94:	jb     0x14000fb9b
   14000fb96:	mov    rcx,QWORD PTR [rbx]
   14000fb99:	jmp    0x14000fb9e
   14000fb9b:	mov    rcx,rbx
   14000fb9e:	mov    rdi,QWORD PTR [rip+0x47e8b]        # 0x140057a30
   14000fba5:	mov    r8,rdi
   14000fba8:	cmp    rsi,rdi
   14000fbab:	cmovb  r8,rsi
   14000fbaf:	test   r8,r8
   14000fbb2:	jne    0x14000fbb8
   14000fbb4:	xor    eax,eax
   14000fbb6:	jmp    0x14000fbbd
   14000fbb8:	call   0x140030484
   14000fbbd:	cdqe   
   14000fbbf:	test   rax,rax
   14000fbc2:	jne    0x14000fbd6
   14000fbc4:	cmp    rsi,rdi
   14000fbc7:	jae    0x14000fbce
   14000fbc9:	or     eax,0xffffffff
   14000fbcc:	jmp    0x14000fbd6
   14000fbce:	xor    eax,eax
   14000fbd0:	cmp    rsi,rdi
   14000fbd3:	setne  al
   14000fbd6:	test   eax,eax
   14000fbd8:	sete   al
   14000fbdb:	test   al,al
   14000fbdd:	je     0x14000fcce
   14000fbe3:	lea    rcx,[rbx+0x20]
   14000fbe7:	lea    rdx,[rbp-0x49]
   14000fbeb:	call   0x140009a40
   14000fbf0:	mov    rdi,rax
   14000fbf3:	cmp    BYTE PTR [rbp-0x71],0x0
   14000fbf7:	je     0x14000fc4f
   14000fbf9:	mov    ecx,DWORD PTR [rbp+0x77]
   14000fbfc:	inc    ecx
   14000fbfe:	movsxd rdx,ecx
   14000fc01:	mov    rax,QWORD PTR [rbp+0x7f]
   14000fc05:	imul   rdx,QWORD PTR [rax+0x8]
   14000fc0a:	mov    QWORD PTR [rbp-0x51],0xf
   14000fc12:	mov    QWORD PTR [rbp-0x59],0x0
   14000fc1a:	mov    BYTE PTR [rbp-0x69],0x0
   14000fc1e:	movzx  r8d,BYTE PTR [rax]
   14000fc22:	lea    rcx,[rbp-0x69]
   14000fc26:	call   0x14001f1f0
   14000fc2b:	nop
   14000fc2c:	lea    rdx,[rbp-0x69]
   14000fc30:	mov    rsi,QWORD PTR [rbp+0x5f]
   14000fc34:	mov    rcx,rsi
   14000fc37:	call   0x140002ba0
   14000fc3c:	nop
   14000fc3d:	cmp    QWORD PTR [rbp-0x51],0x10
   14000fc42:	jb     0x14000fc53
   14000fc44:	mov    rcx,QWORD PTR [rbp-0x69]
   14000fc48:	call   0x140030282
   14000fc4d:	jmp    0x14000fc53
   14000fc4f:	mov    rsi,QWORD PTR [rbp+0x5f]
   14000fc53:	mov    dl,0x3c
   14000fc55:	mov    rcx,rsi
   14000fc58:	call   0x140002db0
   14000fc5d:	mov    rcx,rax
   14000fc60:	mov    dl,0x21
   14000fc62:	call   0x140002db0
   14000fc67:	mov    rcx,rax
   14000fc6a:	mov    dl,0x2d
   14000fc6c:	call   0x140002db0
   14000fc71:	mov    rcx,rax
   14000fc74:	mov    dl,0x2d
   14000fc76:	call   0x140002db0
   14000fc7b:	mov    rdx,rdi
   14000fc7e:	mov    rcx,rsi
   14000fc81:	call   0x140002ba0
   14000fc86:	mov    dl,0x2d
   14000fc88:	mov    rcx,rsi
   14000fc8b:	call   0x140002db0
   14000fc90:	mov    rcx,rax
   14000fc93:	mov    dl,0x2d
   14000fc95:	call   0x140002db0
   14000fc9a:	mov    rcx,rax
   14000fc9d:	mov    dl,0x3e
   14000fc9f:	call   0x140002db0
   14000fca4:	cmp    BYTE PTR [rbp-0x71],0x0
   14000fca8:	je     0x14000fcb5
   14000fcaa:	mov    dl,0xa
   14000fcac:	mov    rcx,rsi
   14000fcaf:	call   0x140002db0
   14000fcb4:	nop
   14000fcb5:	cmp    QWORD PTR [rbp-0x31],0x10
   14000fcba:	jb     0x14000fe5f
   14000fcc0:	mov    rcx,QWORD PTR [rbp-0x49]
   14000fcc4:	call   0x140030282
   14000fcc9:	jmp    0x14000fe5f
   14000fcce:	mov    eax,DWORD PTR [rip+0x47d44]        # 0x140057a18
   14000fcd4:	test   al,0x1
   14000fcd6:	jne    0x14000fcff
   14000fcd8:	or     DWORD PTR [rip+0x47d39],0x1        # 0x140057a18
   14000fcdf:	lea    rdx,[rip+0x2f4aa]        # 0x14003f190
   14000fce6:	lea    rcx,[rip+0x47d0b]        # 0x1400579f8
   14000fced:	call   0x14000e8d0
   14000fcf2:	lea    rcx,[rip+0x25f17]        # 0x140035c10
   14000fcf9:	call   0x140030388
   14000fcfe:	nop
   14000fcff:	lea    rdx,[rip+0x47cf2]        # 0x1400579f8
   14000fd06:	cmp    QWORD PTR [rip+0x47d02],0x10        # 0x140057a10
   14000fd0e:	cmovae rdx,QWORD PTR [rip+0x47ce2]        # 0x1400579f8
   14000fd16:	mov    rdi,QWORD PTR [rbx+0x10]
   14000fd1a:	cmp    QWORD PTR [rbx+0x18],0x10
   14000fd1f:	jb     0x14000fd26
   14000fd21:	mov    rcx,QWORD PTR [rbx]
   14000fd24:	jmp    0x14000fd29
   14000fd26:	mov    rcx,rbx
   14000fd29:	mov    r8,QWORD PTR [rip+0x47cd8]        # 0x140057a08
   14000fd30:	cmp    rdi,r8
   14000fd33:	cmovb  r8,rdi
   14000fd37:	test   r8,r8
   14000fd3a:	jne    0x14000fd40
   14000fd3c:	xor    eax,eax
   14000fd3e:	jmp    0x14000fd45
   14000fd40:	call   0x140030484
   14000fd45:	cdqe   
   14000fd47:	test   rax,rax
   14000fd4a:	jne    0x14000fd66
   14000fd4c:	cmp    rdi,QWORD PTR [rip+0x47cb5]        # 0x140057a08
   14000fd53:	jae    0x14000fd5a
   14000fd55:	or     eax,0xffffffff
   14000fd58:	jmp    0x14000fd66
   14000fd5a:	xor    eax,eax
   14000fd5c:	cmp    rdi,QWORD PTR [rip+0x47ca5]        # 0x140057a08
   14000fd63:	setne  al
   14000fd66:	test   eax,eax
   14000fd68:	sete   al
   14000fd6b:	test   al,al
   14000fd6d:	je     0x14000fe3c
   14000fd73:	cmp    BYTE PTR [rbp-0x70],0x0
   14000fd77:	je     0x14000fd84
   14000fd79:	cmp    BYTE PTR [rbp-0x71],0x0
   14000fd7d:	je     0x14000fd84
   14000fd7f:	mov    dil,0x1
   14000fd82:	jmp    0x14000fd87
   14000fd84:	xor    dil,dil
   14000fd87:	lea    rcx,[rbx+0x20]
   14000fd8b:	lea    rdx,[rbp-0x29]
   14000fd8f:	call   0x140009a40
   14000fd94:	mov    rsi,rax
   14000fd97:	test   dil,dil
   14000fd9a:	je     0x14000fded
   14000fd9c:	mov    ecx,DWORD PTR [rbp+0x77]
   14000fd9f:	inc    ecx
   14000fda1:	movsxd rdx,ecx
   14000fda4:	mov    rax,QWORD PTR [rbp+0x7f]
   14000fda8:	imul   rdx,QWORD PTR [rax+0x8]
   14000fdad:	mov    QWORD PTR [rbp-0x51],0xf
   14000fdb5:	mov    QWORD PTR [rbp-0x59],0x0
   14000fdbd:	mov    BYTE PTR [rbp-0x69],0x0
   14000fdc1:	movzx  r8d,BYTE PTR [rax]
   14000fdc5:	lea    rcx,[rbp-0x69]
   14000fdc9:	call   0x14001f1f0
   14000fdce:	nop
   14000fdcf:	lea    rdx,[rbp-0x69]
   14000fdd3:	mov    rcx,QWORD PTR [rbp+0x5f]
   14000fdd7:	call   0x140002ba0
   14000fddc:	nop
   14000fddd:	cmp    QWORD PTR [rbp-0x51],0x10
   14000fde2:	jb     0x14000fded
   14000fde4:	mov    rcx,QWORD PTR [rbp-0x69]
   14000fde8:	call   0x140030282
   14000fded:	mov    rdx,rsi
   14000fdf0:	lea    rcx,[rbp-0x49]
   14000fdf4:	call   0x140008120
   14000fdf9:	nop
   14000fdfa:	mov    rdx,rax
   14000fdfd:	mov    rsi,QWORD PTR [rbp+0x5f]
   14000fe01:	mov    rcx,rsi
   14000fe04:	call   0x140002ba0
   14000fe09:	nop
   14000fe0a:	cmp    QWORD PTR [rbp-0x31],0x10
   14000fe0f:	jb     0x14000fe1a
   14000fe11:	mov    rcx,QWORD PTR [rbp-0x49]
   14000fe15:	call   0x140030282
   14000fe1a:	test   dil,dil
   14000fe1d:	je     0x14000fe2a
   14000fe1f:	mov    dl,0xa
   14000fe21:	mov    rcx,rsi
   14000fe24:	call   0x140002db0
   14000fe29:	nop
   14000fe2a:	cmp    QWORD PTR [rbp-0x11],0x10
   14000fe2f:	jb     0x14000fe5f
   14000fe31:	mov    rcx,QWORD PTR [rbp-0x29]
   14000fe35:	call   0x140030282
   14000fe3a:	jmp    0x14000fe5f
   14000fe3c:	mov    r9d,DWORD PTR [rbp+0x77]
   14000fe40:	inc    r9d
   14000fe43:	lea    r8,[rbx+0x20]
   14000fe47:	mov    rax,QWORD PTR [rbp+0x7f]
   14000fe4b:	mov    QWORD PTR [rsp+0x20],rax
   14000fe50:	mov    rdx,rbx
   14000fe53:	mov    rsi,QWORD PTR [rbp+0x5f]
   14000fe57:	mov    rcx,rsi
   14000fe5a:	call   0x14000f490
   14000fe5f:	mov    rbx,QWORD PTR [rbx+0x68]
   14000fe63:	test   rbx,rbx
   14000fe66:	je     0x14000fe6c
   14000fe68:	add    rbx,0xffffffffffffffa0
   14000fe6c:	mov    rdi,QWORD PTR [rbp+0x6f]
   14000fe70:	jmp    0x14000fa80
   14000fe75:	mov    eax,DWORD PTR [rbp+0x77]
   14000fe78:	test   eax,eax
   14000fe7a:	js     0x14000fed0
   14000fe7c:	cmp    BYTE PTR [rbp-0x6f],0x0
   14000fe80:	jne    0x14000fed0
   14000fe82:	cmp    BYTE PTR [rbp-0x70],0x0
   14000fe86:	je     0x14000fe96
   14000fe88:	mov    r8,QWORD PTR [rbp+0x7f]
   14000fe8c:	mov    edx,eax
   14000fe8e:	mov    rcx,rsi
   14000fe91:	call   0x14000fee0
   14000fe96:	mov    dl,0x3c
   14000fe98:	mov    rcx,rsi
   14000fe9b:	call   0x140002db0
   14000fea0:	mov    rcx,rax
   14000fea3:	mov    dl,0x2f
   14000fea5:	call   0x140002db0
   14000feaa:	mov    rcx,rax
   14000fead:	mov    rdx,QWORD PTR [rbp+0x67]
   14000feb1:	call   0x140002ba0
   14000feb6:	mov    dl,0x3e
   14000feb8:	mov    rcx,rax
   14000febb:	call   0x140002db0
   14000fec0:	cmp    BYTE PTR [rbp-0x71],0x0
   14000fec4:	je     0x14000fed0
   14000fec6:	mov    dl,0xa
   14000fec8:	mov    rcx,rsi
   14000fecb:	call   0x140002db0
   14000fed0:	add    rsp,0xd8
   14000fed7:	pop    rdi
   14000fed8:	pop    rsi
   14000fed9:	pop    rbx
   14000feda:	pop    rbp
   14000fedb:	ret    
   14000fedc:	int3   
   14000fedd:	int3   
   14000fede:	int3   
   14000fedf:	int3   
   14000fee0:	rex push rbx
   14000fee2:	sub    rsp,0x50
   14000fee6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000feef:	mov    rbx,rcx
   14000fef2:	movsxd rax,edx
   14000fef5:	mov    rdx,QWORD PTR [r8+0x8]
   14000fef9:	imul   rdx,rax
   14000fefd:	mov    QWORD PTR [rsp+0x40],0xf
   14000ff06:	mov    QWORD PTR [rsp+0x38],0x0
   14000ff0f:	mov    BYTE PTR [rsp+0x28],0x0
   14000ff14:	movzx  r8d,BYTE PTR [r8]
   14000ff18:	lea    rcx,[rsp+0x28]
   14000ff1d:	call   0x14001f1f0
   14000ff22:	nop
   14000ff23:	lea    rdx,[rsp+0x28]
   14000ff28:	mov    rcx,rbx
   14000ff2b:	call   0x140002ba0
   14000ff30:	nop
   14000ff31:	cmp    QWORD PTR [rsp+0x40],0x10
   14000ff37:	jb     0x14000ff43
   14000ff39:	mov    rcx,QWORD PTR [rsp+0x28]
   14000ff3e:	call   0x140030282
   14000ff43:	add    rsp,0x50
   14000ff47:	pop    rbx
   14000ff48:	ret    
   14000ff49:	int3   
   14000ff4a:	int3   
   14000ff4b:	int3   
   14000ff4c:	int3   
   14000ff4d:	int3   
   14000ff4e:	int3   
   14000ff4f:	int3   
   14000ff50:	mov    rax,rsp
   14000ff53:	push   rbp
   14000ff54:	push   rdi
   14000ff55:	push   r12
   14000ff57:	push   r14
   14000ff59:	push   r15
   14000ff5b:	lea    rbp,[rsp-0x60]
   14000ff60:	sub    rsp,0x160
   14000ff67:	mov    QWORD PTR [rbp-0x30],0xfffffffffffffffe
   14000ff6f:	mov    QWORD PTR [rax+0x10],rbx
   14000ff73:	mov    QWORD PTR [rax+0x18],rsi
   14000ff77:	mov    r14,r9
   14000ff7a:	mov    r12,r8
   14000ff7d:	mov    r15,rdx
   14000ff80:	mov    rsi,rcx
   14000ff83:	lea    rdx,[rip+0x2d13e]        # 0x14003d0c8
   14000ff8a:	lea    rcx,[rsp+0x50]
   14000ff8f:	call   0x14000e8d0
   14000ff94:	mov    rdi,rax
   14000ff97:	lea    rdx,[rip+0x2d132]        # 0x14003d0d0
   14000ff9e:	lea    rcx,[rsp+0x30]
   14000ffa3:	call   0x14000e8d0
   14000ffa8:	nop
   14000ffa9:	mov    rdx,rax
   14000ffac:	mov    rcx,rsi
   14000ffaf:	call   0x140002ba0
   14000ffb4:	mov    rcx,rax
   14000ffb7:	lea    rdx,[r14+0x10]
   14000ffbb:	call   0x140002ba0
   14000ffc0:	mov    rcx,rax
   14000ffc3:	mov    rdx,rdi
   14000ffc6:	call   0x140002ba0
   14000ffcb:	nop
   14000ffcc:	cmp    QWORD PTR [rsp+0x48],0x10
   14000ffd2:	jb     0x14000ffde
   14000ffd4:	mov    rcx,QWORD PTR [rsp+0x30]
   14000ffd9:	call   0x140030282
   14000ffde:	mov    QWORD PTR [rsp+0x48],0xf
   14000ffe7:	xor    ebx,ebx
   14000ffe9:	mov    QWORD PTR [rsp+0x40],rbx
   14000ffee:	mov    BYTE PTR [rsp+0x30],bl
   14000fff2:	cmp    QWORD PTR [rsp+0x68],0x10
   14000fff8:	jb     0x140010004
   14000fffa:	mov    rcx,QWORD PTR [rsp+0x50]
   14000ffff:	call   0x140030282
   140010004:	mov    QWORD PTR [rsp+0x48],0xf
   14001000d:	mov    QWORD PTR [rsp+0x40],rbx
   140010012:	mov    BYTE PTR [rsp+0x30],0x0
   140010017:	mov    QWORD PTR [rsp+0x20],r14
   14001001c:	or     r9d,0xffffffff
   140010020:	mov    r8,r15
   140010023:	lea    rdx,[rsp+0x30]
   140010028:	mov    rcx,rsi
   14001002b:	call   0x14000f490
   140010030:	nop
   140010031:	cmp    QWORD PTR [rsp+0x48],0x10
   140010037:	jb     0x140010043
   140010039:	mov    rcx,QWORD PTR [rsp+0x30]
   14001003e:	call   0x140030282
   140010043:	mov    rax,QWORD PTR [rsi]
   140010046:	movsxd rcx,DWORD PTR [rax+0x4]
   14001004a:	test   BYTE PTR [rcx+rsi*1+0x10],0x6
   14001004f:	je     0x140010186
   140010055:	mov    QWORD PTR [rsp+0x68],0xf
   14001005e:	mov    QWORD PTR [rsp+0x60],rbx
   140010063:	mov    BYTE PTR [rsp+0x50],0x0
   140010068:	mov    r8d,0xb
   14001006e:	lea    rdx,[rip+0x2d513]        # 0x14003d588
   140010075:	lea    rcx,[rsp+0x50]
   14001007a:	call   0x14001f070
   14001007f:	nop
   140010080:	xor    r9d,r9d
   140010083:	mov    r8,r12
   140010086:	lea    rdx,[rsp+0x50]
   14001008b:	lea    rcx,[rsp+0x30]
   140010090:	call   0x140023f00
   140010095:	nop
   140010096:	cmp    QWORD PTR [rax+0x18],0x10
   14001009b:	jb     0x1400100a0
   14001009d:	mov    rax,QWORD PTR [rax]
   1400100a0:	mov    QWORD PTR [rbp+0x90],rax
   1400100a7:	lea    rdx,[rbp+0x90]
   1400100ae:	lea    rcx,[rsp+0x70]
   1400100b3:	call   QWORD PTR [rip+0x26397]        # 0x140036450
   1400100b9:	lea    rax,[rip+0x2a8b8]        # 0x14003a978
   1400100c0:	mov    QWORD PTR [rsp+0x70],rax
   1400100c5:	cmp    QWORD PTR [rsp+0x48],0x10
   1400100cb:	jb     0x1400100d7
   1400100cd:	mov    rcx,QWORD PTR [rsp+0x30]
   1400100d2:	call   0x140030282
   1400100d7:	mov    QWORD PTR [rsp+0x48],0xf
   1400100e0:	mov    QWORD PTR [rsp+0x40],rbx
   1400100e5:	mov    BYTE PTR [rsp+0x30],0x0
   1400100ea:	lea    rax,[rip+0x2a8cf]        # 0x14003a9c0
   1400100f1:	mov    QWORD PTR [rsp+0x70],rax
   1400100f6:	mov    QWORD PTR [rbp-0x60],0xf
   1400100fe:	mov    QWORD PTR [rbp-0x68],rbx
   140010102:	mov    BYTE PTR [rbp-0x78],0x0
   140010106:	or     r9,0xffffffffffffffff
   14001010a:	xor    r8d,r8d
   14001010d:	lea    rdx,[rsp+0x50]
   140010112:	lea    rcx,[rbp-0x78]
   140010116:	call   0x14001ef20
   14001011b:	nop
   14001011c:	mov    QWORD PTR [rbp-0x40],0xf
   140010124:	mov    QWORD PTR [rbp-0x48],rbx
   140010128:	mov    BYTE PTR [rbp-0x58],0x0
   14001012c:	or     r9,0xffffffffffffffff
   140010130:	xor    r8d,r8d
   140010133:	mov    rdx,r12
   140010136:	lea    rcx,[rbp-0x58]
   14001013a:	call   0x14001ef20
   14001013f:	mov    DWORD PTR [rbp-0x38],ebx
   140010142:	lea    rax,[rip+0x2a947]        # 0x14003aa90
   140010149:	mov    QWORD PTR [rsp+0x70],rax
   14001014e:	lea    rdx,[rsp+0x70]
   140010153:	lea    rcx,[rbp-0x28]
   140010157:	call   0x1400080c0
   14001015c:	nop
   14001015d:	lea    rcx,[rip+0x2d00c]        # 0x14003d170
   140010164:	mov    QWORD PTR [rax+0x70],rcx
   140010168:	lea    rcx,[rip+0x2cf81]        # 0x14003d0f0
   14001016f:	mov    QWORD PTR [rax+0x78],rcx
   140010173:	mov    DWORD PTR [rax+0x80],0xc0
   14001017d:	mov    rcx,rax
   140010180:	call   0x14000ddf0
   140010185:	nop
   140010186:	lea    r11,[rsp+0x160]
   14001018e:	mov    rbx,QWORD PTR [r11+0x38]
   140010192:	mov    rsi,QWORD PTR [r11+0x40]
   140010196:	mov    rsp,r11
   140010199:	pop    r15
   14001019b:	pop    r14
   14001019d:	pop    r12
   14001019f:	pop    rdi
   1400101a0:	pop    rbp
   1400101a1:	ret    
   1400101a2:	int3   
   1400101a3:	int3   
   1400101a4:	int3   
   1400101a5:	int3   
   1400101a6:	int3   
   1400101a7:	int3   
   1400101a8:	int3   
   1400101a9:	int3   
   1400101aa:	int3   
   1400101ab:	int3   
   1400101ac:	int3   
   1400101ad:	int3   
   1400101ae:	int3   
   1400101af:	int3   
   1400101b0:	rex push rdi
   1400101b2:	sub    rsp,0x50
   1400101b6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400101bf:	mov    QWORD PTR [rsp+0x60],rbx
   1400101c4:	mov    QWORD PTR [rsp+0x68],rsi
   1400101c9:	movzx  edi,r9b
   1400101cd:	mov    eax,r8d
   1400101d0:	mov    rsi,rdx
   1400101d3:	mov    rbx,rcx
   1400101d6:	test   r9b,r9b
   1400101d9:	je     0x1400101ea
   1400101db:	mov    r8,QWORD PTR [rsp+0x80]
   1400101e3:	mov    edx,eax
   1400101e5:	call   0x14000fee0
   1400101ea:	mov    rdx,rsi
   1400101ed:	lea    rcx,[rsp+0x28]
   1400101f2:	call   0x140008120
   1400101f7:	nop
   1400101f8:	mov    rdx,rax
   1400101fb:	mov    rcx,rbx
   1400101fe:	call   0x140002ba0
   140010203:	nop
   140010204:	cmp    QWORD PTR [rsp+0x40],0x10
   14001020a:	jb     0x140010216
   14001020c:	mov    rcx,QWORD PTR [rsp+0x28]
   140010211:	call   0x140030282
   140010216:	test   dil,dil
   140010219:	je     0x140010225
   14001021b:	mov    dl,0xa
   14001021d:	mov    rcx,rbx
   140010220:	call   0x140002db0
   140010225:	mov    rbx,QWORD PTR [rsp+0x60]
   14001022a:	mov    rsi,QWORD PTR [rsp+0x68]
   14001022f:	add    rsp,0x50
   140010233:	pop    rdi
   140010234:	ret    
   140010235:	int3   
   140010236:	int3   
   140010237:	int3   
   140010238:	int3   
   140010239:	int3   
   14001023a:	int3   
   14001023b:	int3   
   14001023c:	int3   
   14001023d:	int3   
   14001023e:	int3   
   14001023f:	int3   
   140010240:	rex push rbx
   140010242:	sub    rsp,0x30
   140010246:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001024f:	mov    eax,DWORD PTR [rip+0x4779b]        # 0x1400579f0
   140010255:	test   al,0x1
   140010257:	jne    0x14001028a
   140010259:	or     eax,0x1
   14001025c:	mov    DWORD PTR [rip+0x4778e],eax        # 0x1400579f0
   140010262:	lea    rdx,[rip+0x2ef17]        # 0x14003f180
   140010269:	lea    rbx,[rip+0x47760]        # 0x1400579d0
   140010270:	mov    rcx,rbx
   140010273:	call   0x14000e8d0
   140010278:	lea    rcx,[rip+0x258b1]        # 0x140035b30
   14001027f:	call   0x140030388
   140010284:	nop
   140010285:	mov    rax,rbx
   140010288:	jmp    0x140010291
   14001028a:	lea    rax,[rip+0x4773f]        # 0x1400579d0
   140010291:	add    rsp,0x30
   140010295:	pop    rbx
   140010296:	ret    
   140010297:	int3   
   140010298:	int3   
   140010299:	int3   
   14001029a:	int3   
   14001029b:	int3   
   14001029c:	int3   
   14001029d:	int3   
   14001029e:	int3   
   14001029f:	int3   
   1400102a0:	rex push rbx
   1400102a2:	sub    rsp,0x30
   1400102a6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400102af:	mov    eax,DWORD PTR [rip+0x4778b]        # 0x140057a40
   1400102b5:	test   al,0x1
   1400102b7:	jne    0x1400102ea
   1400102b9:	or     eax,0x1
   1400102bc:	mov    DWORD PTR [rip+0x4777e],eax        # 0x140057a40
   1400102c2:	lea    rdx,[rip+0x2ef17]        # 0x14003f1e0
   1400102c9:	lea    rbx,[rip+0x47750]        # 0x140057a20
   1400102d0:	mov    rcx,rbx
   1400102d3:	call   0x14000e8d0
   1400102d8:	lea    rcx,[rip+0x258c1]        # 0x140035ba0
   1400102df:	call   0x140030388
   1400102e4:	nop
   1400102e5:	mov    rax,rbx
   1400102e8:	jmp    0x1400102f1
   1400102ea:	lea    rax,[rip+0x4772f]        # 0x140057a20
   1400102f1:	add    rsp,0x30
   1400102f5:	pop    rbx
   1400102f6:	ret    
   1400102f7:	int3   
   1400102f8:	int3   
   1400102f9:	int3   
   1400102fa:	int3   
   1400102fb:	int3   
   1400102fc:	int3   
   1400102fd:	int3   
   1400102fe:	int3   
   1400102ff:	int3   
   140010300:	rex push rbx
   140010302:	sub    rsp,0x30
   140010306:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001030f:	mov    eax,DWORD PTR [rip+0x47703]        # 0x140057a18
   140010315:	test   al,0x1
   140010317:	jne    0x14001034a
   140010319:	or     eax,0x1
   14001031c:	mov    DWORD PTR [rip+0x476f6],eax        # 0x140057a18
   140010322:	lea    rdx,[rip+0x2ee67]        # 0x14003f190
   140010329:	lea    rbx,[rip+0x476c8]        # 0x1400579f8
   140010330:	mov    rcx,rbx
   140010333:	call   0x14000e8d0
   140010338:	lea    rcx,[rip+0x258d1]        # 0x140035c10
   14001033f:	call   0x140030388
   140010344:	nop
   140010345:	mov    rax,rbx
   140010348:	jmp    0x140010351
   14001034a:	lea    rax,[rip+0x476a7]        # 0x1400579f8
   140010351:	add    rsp,0x30
   140010355:	pop    rbx
   140010356:	ret    
   140010357:	int3   
   140010358:	int3   
   140010359:	int3   
   14001035a:	int3   
   14001035b:	int3   
   14001035c:	int3   
   14001035d:	int3   
   14001035e:	int3   
   14001035f:	int3   
   140010360:	mov    BYTE PTR [rcx],dl
   140010362:	mov    rax,rcx
   140010365:	ret    
   140010366:	int3   
   140010367:	int3   
   140010368:	int3   
   140010369:	int3   
   14001036a:	int3   
   14001036b:	int3   
   14001036c:	int3   
   14001036d:	int3   
   14001036e:	int3   
   14001036f:	int3   
   140010370:	rex push rbx
   140010372:	sub    rsp,0x20
   140010376:	xor    eax,eax
   140010378:	xor    r8d,r8d
   14001037b:	xor    edx,edx
   14001037d:	mov    QWORD PTR [rcx],rax
   140010380:	mov    QWORD PTR [rcx+0x8],rax
   140010384:	mov    rbx,rcx
   140010387:	call   0x14001c4d0
   14001038c:	mov    QWORD PTR [rbx],rax
   14001038f:	mov    rax,rbx
   140010392:	add    rsp,0x20
   140010396:	pop    rbx
   140010397:	ret    
   140010398:	int3   
   140010399:	int3   
   14001039a:	int3   
   14001039b:	int3   
   14001039c:	int3   
   14001039d:	int3   
   14001039e:	int3   
   14001039f:	int3   
   1400103a0:	rex push rbx
   1400103a2:	sub    rsp,0x20
   1400103a6:	xor    eax,eax
   1400103a8:	xor    r8d,r8d
   1400103ab:	xor    edx,edx
   1400103ad:	mov    QWORD PTR [rcx],rax
   1400103b0:	mov    QWORD PTR [rcx+0x8],rax
   1400103b4:	mov    rbx,rcx
   1400103b7:	call   0x14001c530
   1400103bc:	mov    QWORD PTR [rbx],rax
   1400103bf:	mov    rax,rbx
   1400103c2:	add    rsp,0x20
   1400103c6:	pop    rbx
   1400103c7:	ret    
   1400103c8:	int3   
   1400103c9:	int3   
   1400103ca:	int3   
   1400103cb:	int3   
   1400103cc:	int3   
   1400103cd:	int3   
   1400103ce:	int3   
   1400103cf:	int3   
   1400103d0:	rex push rbx
   1400103d2:	sub    rsp,0x20
   1400103d6:	xor    eax,eax
   1400103d8:	xor    r8d,r8d
   1400103db:	xor    edx,edx
   1400103dd:	mov    QWORD PTR [rcx],rax
   1400103e0:	mov    QWORD PTR [rcx+0x8],rax
   1400103e4:	mov    rbx,rcx
   1400103e7:	call   0x14001c4d0
   1400103ec:	mov    QWORD PTR [rbx],rax
   1400103ef:	mov    rax,rbx
   1400103f2:	add    rsp,0x20
   1400103f6:	pop    rbx
   1400103f7:	ret    
   1400103f8:	int3   
   1400103f9:	int3   
   1400103fa:	int3   
   1400103fb:	int3   
   1400103fc:	int3   
   1400103fd:	int3   
   1400103fe:	int3   
   1400103ff:	int3   
   140010400:	rex push rbx
   140010402:	sub    rsp,0x20
   140010406:	xor    eax,eax
   140010408:	xor    r8d,r8d
   14001040b:	xor    edx,edx
   14001040d:	mov    QWORD PTR [rcx],rax
   140010410:	mov    QWORD PTR [rcx+0x8],rax
   140010414:	mov    rbx,rcx
   140010417:	call   0x14001c530
   14001041c:	mov    QWORD PTR [rbx],rax
   14001041f:	mov    rax,rbx
   140010422:	add    rsp,0x20
   140010426:	pop    rbx
   140010427:	ret    
   140010428:	int3   
   140010429:	int3   
   14001042a:	int3   
   14001042b:	int3   
   14001042c:	int3   
   14001042d:	int3   
   14001042e:	int3   
   14001042f:	int3   
   140010430:	mov    QWORD PTR [rcx],rdx
   140010433:	mov    rax,rcx
   140010436:	ret    
   140010437:	int3   
   140010438:	int3   
   140010439:	int3   
   14001043a:	int3   
   14001043b:	int3   
   14001043c:	int3   
   14001043d:	int3   
   14001043e:	int3   
   14001043f:	int3   
   140010440:	mov    QWORD PTR [rcx],rdx
   140010443:	mov    rax,rcx
   140010446:	ret    
   140010447:	int3   
   140010448:	int3   
   140010449:	int3   
   14001044a:	int3   
   14001044b:	int3   
   14001044c:	int3   
   14001044d:	int3   
   14001044e:	int3   
   14001044f:	int3   
   140010450:	mov    QWORD PTR [rcx],rdx
   140010453:	mov    rax,rcx
   140010456:	ret    
   140010457:	int3   
   140010458:	int3   
   140010459:	int3   
   14001045a:	int3   
   14001045b:	int3   
   14001045c:	int3   
   14001045d:	int3   
   14001045e:	int3   
   14001045f:	int3   
   140010460:	mov    QWORD PTR [rcx],rdx
   140010463:	mov    rax,rcx
   140010466:	ret    
   140010467:	int3   
   140010468:	int3   
   140010469:	int3   
   14001046a:	int3   
   14001046b:	int3   
   14001046c:	int3   
   14001046d:	int3   
   14001046e:	int3   
   14001046f:	int3   
   140010470:	mov    QWORD PTR [rcx],rdx
   140010473:	mov    rax,rcx
   140010476:	ret    
   140010477:	int3   
   140010478:	int3   
   140010479:	int3   
   14001047a:	int3   
   14001047b:	int3   
   14001047c:	int3   
   14001047d:	int3   
   14001047e:	int3   
   14001047f:	int3   
   140010480:	mov    QWORD PTR [rcx],rdx
   140010483:	mov    rax,rcx
   140010486:	ret    
   140010487:	int3   
   140010488:	int3   
   140010489:	int3   
   14001048a:	int3   
   14001048b:	int3   
   14001048c:	int3   
   14001048d:	int3   
   14001048e:	int3   
   14001048f:	int3   
   140010490:	mov    QWORD PTR [rcx],rdx
   140010493:	mov    rax,rcx
   140010496:	ret    
   140010497:	int3   
   140010498:	int3   
   140010499:	int3   
   14001049a:	int3   
   14001049b:	int3   
   14001049c:	int3   
   14001049d:	int3   
   14001049e:	int3   
   14001049f:	int3   
   1400104a0:	xor    eax,eax
   1400104a2:	mov    QWORD PTR [rcx],rax
   1400104a5:	mov    QWORD PTR [rcx+0x8],rax
   1400104a9:	mov    rax,rcx
   1400104ac:	ret    
   1400104ad:	int3   
   1400104ae:	int3   
   1400104af:	int3   
   1400104b0:	xor    eax,eax
   1400104b2:	mov    QWORD PTR [rcx],rax
   1400104b5:	mov    QWORD PTR [rcx+0x8],rax
   1400104b9:	mov    rax,rcx
   1400104bc:	ret    
   1400104bd:	int3   
   1400104be:	int3   
   1400104bf:	int3   
   1400104c0:	mov    QWORD PTR [rcx],rdx
   1400104c3:	mov    rax,rcx
   1400104c6:	ret    
   1400104c7:	int3   
   1400104c8:	int3   
   1400104c9:	int3   
   1400104ca:	int3   
   1400104cb:	int3   
   1400104cc:	int3   
   1400104cd:	int3   
   1400104ce:	int3   
   1400104cf:	int3   
   1400104d0:	xor    eax,eax
   1400104d2:	mov    QWORD PTR [rcx+0x10],rax
   1400104d6:	mov    QWORD PTR [rcx+0x18],rax
   1400104da:	mov    rax,rcx
   1400104dd:	ret    
   1400104de:	int3   
   1400104df:	int3   
   1400104e0:	xor    eax,eax
   1400104e2:	mov    QWORD PTR [rcx+0x10],rax
   1400104e6:	mov    QWORD PTR [rcx+0x18],rax
   1400104ea:	mov    rax,rcx
   1400104ed:	ret    
   1400104ee:	int3   
   1400104ef:	int3   
   1400104f0:	mov    QWORD PTR [rcx],rdx
   1400104f3:	mov    rax,rcx
   1400104f6:	ret    
   1400104f7:	int3   
   1400104f8:	int3   
   1400104f9:	int3   
   1400104fa:	int3   
   1400104fb:	int3   
   1400104fc:	int3   
   1400104fd:	int3   
   1400104fe:	int3   
   1400104ff:	int3   
   140010500:	mov    QWORD PTR [rcx],rdx
   140010503:	mov    rax,rcx
   140010506:	ret    
   140010507:	int3   
   140010508:	int3   
   140010509:	int3   
   14001050a:	int3   
   14001050b:	int3   
   14001050c:	int3   
   14001050d:	int3   
   14001050e:	int3   
   14001050f:	int3   
   140010510:	xor    eax,eax
   140010512:	mov    QWORD PTR [rcx+0x10],rax
   140010516:	mov    QWORD PTR [rcx+0x18],rax
   14001051a:	mov    rax,rcx
   14001051d:	ret    
   14001051e:	int3   
   14001051f:	int3   
   140010520:	xor    eax,eax
   140010522:	mov    QWORD PTR [rcx+0x10],rax
   140010526:	mov    QWORD PTR [rcx+0x18],rax
   14001052a:	mov    rax,rcx
   14001052d:	ret    
   14001052e:	int3   
   14001052f:	int3   
   140010530:	mov    QWORD PTR [rcx],rdx
   140010533:	mov    rax,rcx
   140010536:	ret    
   140010537:	int3   
   140010538:	int3   
   140010539:	int3   
   14001053a:	int3   
   14001053b:	int3   
   14001053c:	int3   
   14001053d:	int3   
   14001053e:	int3   
   14001053f:	int3   
   140010540:	mov    QWORD PTR [rcx],rdx
   140010543:	mov    rax,rcx
   140010546:	ret    
   140010547:	int3   
   140010548:	int3   
   140010549:	int3   
   14001054a:	int3   
   14001054b:	int3   
   14001054c:	int3   
   14001054d:	int3   
   14001054e:	int3   
   14001054f:	int3   
   140010550:	mov    QWORD PTR [rcx],rdx
   140010553:	mov    rax,rcx
   140010556:	ret    
   140010557:	int3   
   140010558:	int3   
   140010559:	int3   
   14001055a:	int3   
   14001055b:	int3   
   14001055c:	int3   
   14001055d:	int3   
   14001055e:	int3   
   14001055f:	int3   
   140010560:	xor    eax,eax
   140010562:	mov    QWORD PTR [rcx],rax
   140010565:	mov    QWORD PTR [rcx+0x8],rax
   140010569:	mov    QWORD PTR [rcx+0x10],rax
   14001056d:	mov    rax,rcx
   140010570:	ret    
   140010571:	int3   
   140010572:	int3   
   140010573:	int3   
   140010574:	int3   
   140010575:	int3   
   140010576:	int3   
   140010577:	int3   
   140010578:	int3   
   140010579:	int3   
   14001057a:	int3   
   14001057b:	int3   
   14001057c:	int3   
   14001057d:	int3   
   14001057e:	int3   
   14001057f:	int3   
   140010580:	xor    eax,eax
   140010582:	mov    QWORD PTR [rcx],rax
   140010585:	mov    QWORD PTR [rcx+0x8],rax
   140010589:	mov    QWORD PTR [rcx+0x10],rax
   14001058d:	mov    rax,rcx
   140010590:	ret    
   140010591:	int3   
   140010592:	int3   
   140010593:	int3   
   140010594:	int3   
   140010595:	int3   
   140010596:	int3   
   140010597:	int3   
   140010598:	int3   
   140010599:	int3   
   14001059a:	int3   
   14001059b:	int3   
   14001059c:	int3   
   14001059d:	int3   
   14001059e:	int3   
   14001059f:	int3   
   1400105a0:	mov    QWORD PTR [rcx],rdx
   1400105a3:	mov    rax,rcx
   1400105a6:	ret    
   1400105a7:	int3   
   1400105a8:	int3   
   1400105a9:	int3   
   1400105aa:	int3   
   1400105ab:	int3   
   1400105ac:	int3   
   1400105ad:	int3   
   1400105ae:	int3   
   1400105af:	int3   
   1400105b0:	mov    QWORD PTR [rcx],rdx
   1400105b3:	mov    rax,rcx
   1400105b6:	ret    
   1400105b7:	int3   
   1400105b8:	int3   
   1400105b9:	int3   
   1400105ba:	int3   
   1400105bb:	int3   
   1400105bc:	int3   
   1400105bd:	int3   
   1400105be:	int3   
   1400105bf:	int3   
   1400105c0:	mov    QWORD PTR [rcx],rdx
   1400105c3:	mov    rax,rcx
   1400105c6:	ret    
   1400105c7:	int3   
   1400105c8:	int3   
   1400105c9:	int3   
   1400105ca:	int3   
   1400105cb:	int3   
   1400105cc:	int3   
   1400105cd:	int3   
   1400105ce:	int3   
   1400105cf:	int3   
   1400105d0:	xor    eax,eax
   1400105d2:	mov    QWORD PTR [rcx],rax
   1400105d5:	mov    QWORD PTR [rcx+0x8],rax
   1400105d9:	mov    QWORD PTR [rcx+0x10],rax
   1400105dd:	mov    rax,rcx
   1400105e0:	ret    
   1400105e1:	int3   
   1400105e2:	int3   
   1400105e3:	int3   
   1400105e4:	int3   
   1400105e5:	int3   
   1400105e6:	int3   
   1400105e7:	int3   
   1400105e8:	int3   
   1400105e9:	int3   
   1400105ea:	int3   
   1400105eb:	int3   
   1400105ec:	int3   
   1400105ed:	int3   
   1400105ee:	int3   
   1400105ef:	int3   
   1400105f0:	xor    eax,eax
   1400105f2:	mov    QWORD PTR [rcx],rax
   1400105f5:	mov    QWORD PTR [rcx+0x8],rax
   1400105f9:	mov    QWORD PTR [rcx+0x10],rax
   1400105fd:	mov    rax,rcx
   140010600:	ret    
   140010601:	int3   
   140010602:	int3   
   140010603:	int3   
   140010604:	int3   
   140010605:	int3   
   140010606:	int3   
   140010607:	int3   
   140010608:	int3   
   140010609:	int3   
   14001060a:	int3   
   14001060b:	int3   
   14001060c:	int3   
   14001060d:	int3   
   14001060e:	int3   
   14001060f:	int3   
   140010610:	mov    rax,rcx
   140010613:	ret    
   140010614:	int3   
   140010615:	int3   
   140010616:	int3   
   140010617:	int3   
   140010618:	int3   
   140010619:	int3   
   14001061a:	int3   
   14001061b:	int3   
   14001061c:	int3   
   14001061d:	int3   
   14001061e:	int3   
   14001061f:	int3   
   140010620:	mov    rax,rcx
   140010623:	ret    
   140010624:	int3   
   140010625:	int3   
   140010626:	int3   
   140010627:	int3   
   140010628:	int3   
   140010629:	int3   
   14001062a:	int3   
   14001062b:	int3   
   14001062c:	int3   
   14001062d:	int3   
   14001062e:	int3   
   14001062f:	int3   
   140010630:	mov    rax,rcx
   140010633:	ret    
   140010634:	int3   
   140010635:	int3   
   140010636:	int3   
   140010637:	int3   
   140010638:	int3   
   140010639:	int3   
   14001063a:	int3   
   14001063b:	int3   
   14001063c:	int3   
   14001063d:	int3   
   14001063e:	int3   
   14001063f:	int3   
   140010640:	mov    rax,rcx
   140010643:	ret    
   140010644:	int3   
   140010645:	int3   
   140010646:	int3   
   140010647:	int3   
   140010648:	int3   
   140010649:	int3   
   14001064a:	int3   
   14001064b:	int3   
   14001064c:	int3   
   14001064d:	int3   
   14001064e:	int3   
   14001064f:	int3   
   140010650:	mov    rax,rcx
   140010653:	ret    
   140010654:	int3   
   140010655:	int3   
   140010656:	int3   
   140010657:	int3   
   140010658:	int3   
   140010659:	int3   
   14001065a:	int3   
   14001065b:	int3   
   14001065c:	int3   
   14001065d:	int3   
   14001065e:	int3   
   14001065f:	int3   
   140010660:	mov    rax,rcx
   140010663:	ret    
   140010664:	int3   
   140010665:	int3   
   140010666:	int3   
   140010667:	int3   
   140010668:	int3   
   140010669:	int3   
   14001066a:	int3   
   14001066b:	int3   
   14001066c:	int3   
   14001066d:	int3   
   14001066e:	int3   
   14001066f:	int3   
   140010670:	mov    rax,rcx
   140010673:	ret    
   140010674:	int3   
   140010675:	int3   
   140010676:	int3   
   140010677:	int3   
   140010678:	int3   
   140010679:	int3   
   14001067a:	int3   
   14001067b:	int3   
   14001067c:	int3   
   14001067d:	int3   
   14001067e:	int3   
   14001067f:	int3   
   140010680:	mov    rax,rcx
   140010683:	ret    
   140010684:	int3   
   140010685:	int3   
   140010686:	int3   
   140010687:	int3   
   140010688:	int3   
   140010689:	int3   
   14001068a:	int3   
   14001068b:	int3   
   14001068c:	int3   
   14001068d:	int3   
   14001068e:	int3   
   14001068f:	int3   
   140010690:	mov    rax,rcx
   140010693:	ret    
   140010694:	int3   
   140010695:	int3   
   140010696:	int3   
   140010697:	int3   
   140010698:	int3   
   140010699:	int3   
   14001069a:	int3   
   14001069b:	int3   
   14001069c:	int3   
   14001069d:	int3   
   14001069e:	int3   
   14001069f:	int3   
   1400106a0:	lea    rax,[rip+0x2b939]        # 0x14003bfe0
   1400106a7:	mov    QWORD PTR [rcx+0x8],0x0
   1400106af:	mov    QWORD PTR [rcx],rax
   1400106b2:	mov    rax,rcx
   1400106b5:	ret    
   1400106b6:	int3   
   1400106b7:	int3   
   1400106b8:	int3   
   1400106b9:	int3   
   1400106ba:	int3   
   1400106bb:	int3   
   1400106bc:	int3   
   1400106bd:	int3   
   1400106be:	int3   
   1400106bf:	int3   
   1400106c0:	mov    QWORD PTR [rcx],rdx
   1400106c3:	mov    rax,rcx
   1400106c6:	ret    
   1400106c7:	int3   
   1400106c8:	int3   
   1400106c9:	int3   
   1400106ca:	int3   
   1400106cb:	int3   
   1400106cc:	int3   
   1400106cd:	int3   
   1400106ce:	int3   
   1400106cf:	int3   
   1400106d0:	mov    QWORD PTR [rcx],rdx
   1400106d3:	mov    rax,rcx
   1400106d6:	ret    
   1400106d7:	int3   
   1400106d8:	int3   
   1400106d9:	int3   
   1400106da:	int3   
   1400106db:	int3   
   1400106dc:	int3   
   1400106dd:	int3   
   1400106de:	int3   
   1400106df:	int3   
   1400106e0:	mov    QWORD PTR [rcx],rdx
   1400106e3:	mov    rax,rcx
   1400106e6:	ret    
   1400106e7:	int3   
   1400106e8:	int3   
   1400106e9:	int3   
   1400106ea:	int3   
   1400106eb:	int3   
   1400106ec:	int3   
   1400106ed:	int3   
   1400106ee:	int3   
   1400106ef:	int3   
   1400106f0:	mov    QWORD PTR [rcx],rdx
   1400106f3:	mov    rax,rcx
   1400106f6:	ret    
   1400106f7:	int3   
   1400106f8:	int3   
   1400106f9:	int3   
   1400106fa:	int3   
   1400106fb:	int3   
   1400106fc:	int3   
   1400106fd:	int3   
   1400106fe:	int3   
   1400106ff:	int3   
   140010700:	mov    QWORD PTR [rcx],rdx
   140010703:	mov    rax,rcx
   140010706:	ret    
   140010707:	int3   
   140010708:	int3   
   140010709:	int3   
   14001070a:	int3   
   14001070b:	int3   
   14001070c:	int3   
   14001070d:	int3   
   14001070e:	int3   
   14001070f:	int3   
   140010710:	mov    rax,rcx
   140010713:	ret    
   140010714:	int3   
   140010715:	int3   
   140010716:	int3   
   140010717:	int3   
   140010718:	int3   
   140010719:	int3   
   14001071a:	int3   
   14001071b:	int3   
   14001071c:	int3   
   14001071d:	int3   
   14001071e:	int3   
   14001071f:	int3   
   140010720:	mov    rax,rcx
   140010723:	ret    
   140010724:	int3   
   140010725:	int3   
   140010726:	int3   
   140010727:	int3   
   140010728:	int3   
   140010729:	int3   
   14001072a:	int3   
   14001072b:	int3   
   14001072c:	int3   
   14001072d:	int3   
   14001072e:	int3   
   14001072f:	int3   
   140010730:	mov    rax,rcx
   140010733:	ret    
   140010734:	int3   
   140010735:	int3   
   140010736:	int3   
   140010737:	int3   
   140010738:	int3   
   140010739:	int3   
   14001073a:	int3   
   14001073b:	int3   
   14001073c:	int3   
   14001073d:	int3   
   14001073e:	int3   
   14001073f:	int3   
   140010740:	mov    rax,rcx
   140010743:	ret    
   140010744:	int3   
   140010745:	int3   
   140010746:	int3   
   140010747:	int3   
   140010748:	int3   
   140010749:	int3   
   14001074a:	int3   
   14001074b:	int3   
   14001074c:	int3   
   14001074d:	int3   
   14001074e:	int3   
   14001074f:	int3   
   140010750:	mov    rax,rcx
   140010753:	ret    
   140010754:	int3   
   140010755:	int3   
   140010756:	int3   
   140010757:	int3   
   140010758:	int3   
   140010759:	int3   
   14001075a:	int3   
   14001075b:	int3   
   14001075c:	int3   
   14001075d:	int3   
   14001075e:	int3   
   14001075f:	int3   
   140010760:	mov    rax,rcx
   140010763:	ret    
   140010764:	int3   
   140010765:	int3   
   140010766:	int3   
   140010767:	int3   
   140010768:	int3   
   140010769:	int3   
   14001076a:	int3   
   14001076b:	int3   
   14001076c:	int3   
   14001076d:	int3   
   14001076e:	int3   
   14001076f:	int3   
   140010770:	mov    rax,rcx
   140010773:	ret    
   140010774:	int3   
   140010775:	int3   
   140010776:	int3   
   140010777:	int3   
   140010778:	int3   
   140010779:	int3   
   14001077a:	int3   
   14001077b:	int3   
   14001077c:	int3   
   14001077d:	int3   
   14001077e:	int3   
   14001077f:	int3   
   140010780:	mov    rax,rcx
   140010783:	ret    
   140010784:	int3   
   140010785:	int3   
   140010786:	int3   
   140010787:	int3   
   140010788:	int3   
   140010789:	int3   
   14001078a:	int3   
   14001078b:	int3   
   14001078c:	int3   
   14001078d:	int3   
   14001078e:	int3   
   14001078f:	int3   
   140010790:	mov    rax,rcx
   140010793:	ret    
   140010794:	int3   
   140010795:	int3   
   140010796:	int3   
   140010797:	int3   
   140010798:	int3   
   140010799:	int3   
   14001079a:	int3   
   14001079b:	int3   
   14001079c:	int3   
   14001079d:	int3   
   14001079e:	int3   
   14001079f:	int3   
   1400107a0:	mov    rax,rcx
   1400107a3:	ret    
   1400107a4:	int3   
   1400107a5:	int3   
   1400107a6:	int3   
   1400107a7:	int3   
   1400107a8:	int3   
   1400107a9:	int3   
   1400107aa:	int3   
   1400107ab:	int3   
   1400107ac:	int3   
   1400107ad:	int3   
   1400107ae:	int3   
   1400107af:	int3   
   1400107b0:	mov    rax,rcx
   1400107b3:	ret    
   1400107b4:	int3   
   1400107b5:	int3   
   1400107b6:	int3   
   1400107b7:	int3   
   1400107b8:	int3   
   1400107b9:	int3   
   1400107ba:	int3   
   1400107bb:	int3   
   1400107bc:	int3   
   1400107bd:	int3   
   1400107be:	int3   
   1400107bf:	int3   
   1400107c0:	mov    rax,rcx
   1400107c3:	ret    
   1400107c4:	int3   
   1400107c5:	int3   
   1400107c6:	int3   
   1400107c7:	int3   
   1400107c8:	int3   
   1400107c9:	int3   
   1400107ca:	int3   
   1400107cb:	int3   
   1400107cc:	int3   
   1400107cd:	int3   
   1400107ce:	int3   
   1400107cf:	int3   
   1400107d0:	mov    rax,rcx
   1400107d3:	ret    
   1400107d4:	int3   
   1400107d5:	int3   
   1400107d6:	int3   
   1400107d7:	int3   
   1400107d8:	int3   
   1400107d9:	int3   
   1400107da:	int3   
   1400107db:	int3   
   1400107dc:	int3   
   1400107dd:	int3   
   1400107de:	int3   
   1400107df:	int3   
   1400107e0:	mov    rax,rcx
   1400107e3:	ret    
   1400107e4:	int3   
   1400107e5:	int3   
   1400107e6:	int3   
   1400107e7:	int3   
   1400107e8:	int3   
   1400107e9:	int3   
   1400107ea:	int3   
   1400107eb:	int3   
   1400107ec:	int3   
   1400107ed:	int3   
   1400107ee:	int3   
   1400107ef:	int3   
   1400107f0:	mov    rax,rcx
   1400107f3:	ret    
   1400107f4:	int3   
   1400107f5:	int3   
   1400107f6:	int3   
   1400107f7:	int3   
   1400107f8:	int3   
   1400107f9:	int3   
   1400107fa:	int3   
   1400107fb:	int3   
   1400107fc:	int3   
   1400107fd:	int3   
   1400107fe:	int3   
   1400107ff:	int3   
   140010800:	mov    rax,rcx
   140010803:	ret    
   140010804:	int3   
   140010805:	int3   
   140010806:	int3   
   140010807:	int3   
   140010808:	int3   
   140010809:	int3   
   14001080a:	int3   
   14001080b:	int3   
   14001080c:	int3   
   14001080d:	int3   
   14001080e:	int3   
   14001080f:	int3   
   140010810:	mov    rax,rcx
   140010813:	ret    
   140010814:	int3   
   140010815:	int3   
   140010816:	int3   
   140010817:	int3   
   140010818:	int3   
   140010819:	int3   
   14001081a:	int3   
   14001081b:	int3   
   14001081c:	int3   
   14001081d:	int3   
   14001081e:	int3   
   14001081f:	int3   
   140010820:	mov    rax,rcx
   140010823:	ret    
   140010824:	int3   
   140010825:	int3   
   140010826:	int3   
   140010827:	int3   
   140010828:	int3   
   140010829:	int3   
   14001082a:	int3   
   14001082b:	int3   
   14001082c:	int3   
   14001082d:	int3   
   14001082e:	int3   
   14001082f:	int3   
   140010830:	mov    rax,rcx
   140010833:	ret    
   140010834:	int3   
   140010835:	int3   
   140010836:	int3   
   140010837:	int3   
   140010838:	int3   
   140010839:	int3   
   14001083a:	int3   
   14001083b:	int3   
   14001083c:	int3   
   14001083d:	int3   
   14001083e:	int3   
   14001083f:	int3   
   140010840:	mov    rax,rcx
   140010843:	ret    
   140010844:	int3   
   140010845:	int3   
   140010846:	int3   
   140010847:	int3   
   140010848:	int3   
   140010849:	int3   
   14001084a:	int3   
   14001084b:	int3   
   14001084c:	int3   
   14001084d:	int3   
   14001084e:	int3   
   14001084f:	int3   
   140010850:	mov    rax,rcx
   140010853:	ret    
   140010854:	int3   
   140010855:	int3   
   140010856:	int3   
   140010857:	int3   
   140010858:	int3   
   140010859:	int3   
   14001085a:	int3   
   14001085b:	int3   
   14001085c:	int3   
   14001085d:	int3   
   14001085e:	int3   
   14001085f:	int3   
   140010860:	mov    QWORD PTR [rcx],rdx
   140010863:	mov    rax,rcx
   140010866:	ret    
   140010867:	int3   
   140010868:	int3   
   140010869:	int3   
   14001086a:	int3   
   14001086b:	int3   
   14001086c:	int3   
   14001086d:	int3   
   14001086e:	int3   
   14001086f:	int3   
   140010870:	mov    QWORD PTR [rcx],rdx
   140010873:	mov    rax,rcx
   140010876:	ret    
   140010877:	int3   
   140010878:	int3   
   140010879:	int3   
   14001087a:	int3   
   14001087b:	int3   
   14001087c:	int3   
   14001087d:	int3   
   14001087e:	int3   
   14001087f:	int3   
   140010880:	mov    QWORD PTR [rcx],rdx
   140010883:	mov    rax,rcx
   140010886:	ret    
   140010887:	int3   
   140010888:	int3   
   140010889:	int3   
   14001088a:	int3   
   14001088b:	int3   
   14001088c:	int3   
   14001088d:	int3   
   14001088e:	int3   
   14001088f:	int3   
   140010890:	rex push rbx
   140010892:	sub    rsp,0x20
   140010896:	mov    rbx,rcx
   140010899:	mov    QWORD PTR [rcx+0x8],r8
   14001089d:	test   r8,r8
   1400108a0:	je     0x1400108c9
   1400108a2:	movabs rax,0xfffffffffffffff
   1400108ac:	cmp    r8,rax
   1400108af:	ja     0x1400108c2
   1400108b1:	shl    r8,0x4
   1400108b5:	mov    rcx,r8
   1400108b8:	call   0x14003027c
   1400108bd:	test   rax,rax
   1400108c0:	jne    0x1400108cb
   1400108c2:	call   QWORD PTR [rip+0x25950]        # 0x140036218
   1400108c8:	int3   
   1400108c9:	xor    eax,eax
   1400108cb:	mov    QWORD PTR [rbx+0x10],rax
   1400108cf:	mov    rax,rbx
   1400108d2:	add    rsp,0x20
   1400108d6:	pop    rbx
   1400108d7:	ret    
   1400108d8:	int3   
   1400108d9:	int3   
   1400108da:	int3   
   1400108db:	int3   
   1400108dc:	int3   
   1400108dd:	int3   
   1400108de:	int3   
   1400108df:	int3   
   1400108e0:	mov    rax,QWORD PTR [rdx]
   1400108e3:	movzx  r8d,BYTE PTR [rdx+0x8]
   1400108e8:	movzx  r9d,BYTE PTR [rdx+0xa]
   1400108ed:	mov    edx,DWORD PTR [rdx+0xc]
   1400108f0:	mov    QWORD PTR [rcx],rax
   1400108f3:	mov    rax,rcx
   1400108f6:	mov    BYTE PTR [rcx+0x8],r8b
   1400108fa:	mov    BYTE PTR [rcx+0xa],r9b
   1400108fe:	mov    BYTE PTR [rcx+0x10],0x0
   140010902:	mov    DWORD PTR [rcx+0xc],edx
   140010905:	ret    
   140010906:	int3   
   140010907:	int3   
   140010908:	int3   
   140010909:	int3   
   14001090a:	int3   
   14001090b:	int3   
   14001090c:	int3   
   14001090d:	int3   
   14001090e:	int3   
   14001090f:	int3   
   140010910:	mov    QWORD PTR [rsp+0x8],rbx
   140010915:	push   rdi
   140010916:	sub    rsp,0x20
   14001091a:	xor    eax,eax
   14001091c:	mov    rdi,rcx
   14001091f:	movsxd rbx,edx
   140010922:	test   edx,edx
   140010924:	je     0x140010940
   140010926:	cmp    rbx,0xffffffffffffffff
   14001092a:	ja     0x140010939
   14001092c:	mov    rcx,rbx
   14001092f:	call   0x14003027c
   140010934:	test   rax,rax
   140010937:	jne    0x140010940
   140010939:	call   QWORD PTR [rip+0x258d9]        # 0x140036218
   14001093f:	int3   
   140010940:	mov    QWORD PTR [rdi],rax
   140010943:	mov    QWORD PTR [rdi+0x8],rbx
   140010947:	mov    rbx,QWORD PTR [rsp+0x30]
   14001094c:	mov    rax,rdi
   14001094f:	add    rsp,0x20
   140010953:	pop    rdi
   140010954:	ret    
   140010955:	int3   
   140010956:	int3   
   140010957:	int3   
   140010958:	int3   
   140010959:	int3   
   14001095a:	int3   
   14001095b:	int3   
   14001095c:	int3   
   14001095d:	int3   
   14001095e:	int3   
   14001095f:	int3   
   140010960:	xor    eax,eax
   140010962:	mov    QWORD PTR [rcx],rax
   140010965:	mov    QWORD PTR [rcx+0x8],rax
   140010969:	mov    rax,rcx
   14001096c:	ret    
   14001096d:	int3   
   14001096e:	int3   
   14001096f:	int3   
   140010970:	mov    r11,rsp
   140010973:	push   rdi
   140010974:	sub    rsp,0x60
   140010978:	mov    QWORD PTR [r11-0x48],0xfffffffffffffffe
   140010980:	mov    QWORD PTR [r11+0x8],rbx
   140010984:	mov    QWORD PTR [r11+0x10],rbp
   140010988:	mov    QWORD PTR [r11+0x18],rsi
   14001098c:	mov    r10,r8
   14001098f:	mov    rsi,rcx
   140010992:	xor    ebp,ebp
   140010994:	mov    r9d,ebp
   140010997:	test   edx,edx
   140010999:	sete   r9b
   14001099d:	movsxd rax,edx
   1400109a0:	add    r9,rax
   1400109a3:	lea    r8,[r8+r9*8]
   1400109a7:	lea    rdx,[r10+0x8]
   1400109ab:	lea    rcx,[r11-0x28]
   1400109af:	call   0x14000a450
   1400109b4:	nop
   1400109b5:	mov    rdx,rax
   1400109b8:	lea    rcx,[rsp+0x28]
   1400109bd:	call   0x14000e1b0
   1400109c2:	nop
   1400109c3:	mov    rdx,rax
   1400109c6:	mov    rcx,rsi
   1400109c9:	call   QWORD PTR [rip+0x25ca1]        # 0x140036670
   1400109cf:	nop
   1400109d0:	mov    rbx,QWORD PTR [rsp+0x28]
   1400109d5:	test   rbx,rbx
   1400109d8:	je     0x140010a26
   1400109da:	mov    rdi,QWORD PTR [rsp+0x30]
   1400109df:	cmp    rbx,rdi
   1400109e2:	je     0x140010a10
   1400109e4:	cmp    QWORD PTR [rbx+0x18],0x10
   1400109e9:	jb     0x1400109f3
   1400109eb:	mov    rcx,QWORD PTR [rbx]
   1400109ee:	call   0x140030282
   1400109f3:	mov    QWORD PTR [rbx+0x18],0xf
   1400109fb:	mov    QWORD PTR [rbx+0x10],rbp
   1400109ff:	mov    BYTE PTR [rbx],0x0
   140010a02:	add    rbx,0x20
   140010a06:	cmp    rbx,rdi
   140010a09:	jne    0x1400109e4
   140010a0b:	mov    rbx,QWORD PTR [rsp+0x28]
   140010a10:	mov    rcx,rbx
   140010a13:	call   0x140030282
   140010a18:	xorps  xmm0,xmm0
   140010a1b:	movdqu XMMWORD PTR [rsp+0x28],xmm0
   140010a21:	mov    QWORD PTR [rsp+0x38],rbp
   140010a26:	mov    rbx,QWORD PTR [rsp+0x40]
   140010a2b:	test   rbx,rbx
   140010a2e:	je     0x140010a74
   140010a30:	mov    rdi,QWORD PTR [rsp+0x48]
   140010a35:	cmp    rbx,rdi
   140010a38:	je     0x140010a6c
   140010a3a:	nop    WORD PTR [rax+rax*1+0x0]
   140010a40:	cmp    QWORD PTR [rbx+0x18],0x10
   140010a45:	jb     0x140010a4f
   140010a47:	mov    rcx,QWORD PTR [rbx]
   140010a4a:	call   0x140030282
   140010a4f:	mov    QWORD PTR [rbx+0x18],0xf
   140010a57:	mov    QWORD PTR [rbx+0x10],rbp
   140010a5b:	mov    BYTE PTR [rbx],0x0
   140010a5e:	add    rbx,0x20
   140010a62:	cmp    rbx,rdi
   140010a65:	jne    0x140010a40
   140010a67:	mov    rbx,QWORD PTR [rsp+0x40]
   140010a6c:	mov    rcx,rbx
   140010a6f:	call   0x140030282
   140010a74:	mov    rax,rsi
   140010a77:	mov    rbx,QWORD PTR [rsp+0x70]
   140010a7c:	mov    rbp,QWORD PTR [rsp+0x78]
   140010a81:	mov    rsi,QWORD PTR [rsp+0x80]
   140010a89:	add    rsp,0x60
   140010a8d:	pop    rdi
   140010a8e:	ret    
   140010a8f:	int3   
   140010a90:	mov    QWORD PTR [rsp+0x8],rcx
   140010a95:	push   rdi
   140010a96:	sub    rsp,0x30
   140010a9a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140010aa3:	mov    QWORD PTR [rsp+0x48],rbx
   140010aa8:	mov    rdi,rdx
   140010aab:	mov    rbx,rcx
   140010aae:	call   QWORD PTR [rip+0x25744]        # 0x1400361f8
   140010ab4:	nop
   140010ab5:	lea    rax,[rip+0x2bfc4]        # 0x14003ca80
   140010abc:	mov    QWORD PTR [rbx],rax
   140010abf:	mov    BYTE PTR [rbx+0x88],0x0
   140010ac6:	mov    BYTE PTR [rbx+0x81],0x0
   140010acd:	mov    rcx,rbx
   140010ad0:	call   QWORD PTR [rip+0x256d2]        # 0x1400361a8
   140010ad6:	test   rdi,rdi
   140010ad9:	je     0x140010afb
   140010adb:	lea    rax,[rdi+0x10]
   140010adf:	lea    rcx,[rdi+0x8]
   140010ae3:	mov    QWORD PTR [rbx+0x18],rax
   140010ae7:	mov    QWORD PTR [rbx+0x20],rax
   140010aeb:	mov    QWORD PTR [rbx+0x38],rdi
   140010aef:	mov    QWORD PTR [rbx+0x40],rdi
   140010af3:	mov    QWORD PTR [rbx+0x50],rcx
   140010af7:	mov    QWORD PTR [rbx+0x58],rcx
   140010afb:	mov    QWORD PTR [rbx+0x90],rdi
   140010b02:	mov    eax,DWORD PTR [rip+0x46eb8]        # 0x1400579c0
   140010b08:	mov    DWORD PTR [rbx+0x84],eax
   140010b0e:	mov    QWORD PTR [rbx+0x78],0x0
   140010b16:	mov    rax,rbx
   140010b19:	mov    rbx,QWORD PTR [rsp+0x48]
   140010b1e:	add    rsp,0x30
   140010b22:	pop    rdi
   140010b23:	ret    
   140010b24:	int3   
   140010b25:	int3   
   140010b26:	int3   
   140010b27:	int3   
   140010b28:	int3   
   140010b29:	int3   
   140010b2a:	int3   
   140010b2b:	int3   
   140010b2c:	int3   
   140010b2d:	int3   
   140010b2e:	int3   
   140010b2f:	int3   
   140010b30:	mov    QWORD PTR [rsp+0x8],rcx
   140010b35:	push   rsi
   140010b36:	push   rdi
   140010b37:	push   r14
   140010b39:	sub    rsp,0x30
   140010b3d:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140010b46:	mov    QWORD PTR [rsp+0x58],rbx
   140010b4b:	mov    QWORD PTR [rsp+0x68],rbp
   140010b50:	mov    ebp,r9d
   140010b53:	mov    esi,r8d
   140010b56:	mov    r14,rdx
   140010b59:	mov    rdi,rcx
   140010b5c:	mov    DWORD PTR [rsp+0x60],0x0
   140010b64:	cmp    DWORD PTR [rsp+0x70],0x0
   140010b69:	je     0x140010b99
   140010b6b:	lea    rax,[rip+0x2bf96]        # 0x14003cb08
   140010b72:	mov    QWORD PTR [rcx],rax
   140010b75:	mov    rax,QWORD PTR [rip+0x254e4]        # 0x140036060
   140010b7c:	mov    QWORD PTR [rcx+0xa8],rax
   140010b83:	mov    rax,QWORD PTR [rip+0x254c6]        # 0x140036050
   140010b8a:	mov    QWORD PTR [rcx+0xa8],rax
   140010b91:	mov    DWORD PTR [rsp+0x60],0x1
   140010b99:	lea    rbx,[rcx+0x8]
   140010b9d:	xor    r9d,r9d
   140010ba0:	xor    r8d,r8d
   140010ba3:	mov    rdx,rbx
   140010ba6:	call   QWORD PTR [rip+0x255cc]        # 0x140036178
   140010bac:	nop
   140010bad:	mov    rax,QWORD PTR [rdi]
   140010bb0:	movsxd rcx,DWORD PTR [rax+0x4]
   140010bb4:	lea    rax,[rip+0x2bf45]        # 0x14003cb00
   140010bbb:	mov    QWORD PTR [rcx+rdi*1],rax
   140010bbf:	mov    rax,QWORD PTR [rdi]
   140010bc2:	movsxd rcx,DWORD PTR [rax+0x4]
   140010bc6:	lea    edx,[rcx-0xa8]
   140010bcc:	mov    DWORD PTR [rcx+rdi*1-0x4],edx
   140010bd0:	mov    QWORD PTR [rsp+0x28],rbx
   140010bd5:	mov    rcx,rbx
   140010bd8:	call   QWORD PTR [rip+0x2561a]        # 0x1400361f8
   140010bde:	nop
   140010bdf:	lea    rax,[rip+0x2be9a]        # 0x14003ca80
   140010be6:	mov    QWORD PTR [rbx],rax
   140010be9:	mov    BYTE PTR [rbx+0x88],0x0
   140010bf0:	mov    BYTE PTR [rbx+0x81],0x0
   140010bf7:	mov    rcx,rbx
   140010bfa:	call   QWORD PTR [rip+0x255a8]        # 0x1400361a8
   140010c00:	mov    QWORD PTR [rbx+0x90],0x0
   140010c0b:	mov    eax,DWORD PTR [rip+0x46daf]        # 0x1400579c0
   140010c11:	mov    DWORD PTR [rbx+0x84],eax
   140010c17:	mov    QWORD PTR [rbx+0x78],0x0
   140010c1f:	or     esi,0x2
   140010c22:	mov    r9d,ebp
   140010c25:	mov    r8d,esi
   140010c28:	mov    rdx,r14
   140010c2b:	mov    rcx,rbx
   140010c2e:	call   0x1400267d0
   140010c33:	test   rax,rax
   140010c36:	jne    0x140010c50
   140010c38:	mov    rax,QWORD PTR [rdi]
   140010c3b:	movsxd rcx,DWORD PTR [rax+0x4]
   140010c3f:	add    rcx,rdi
   140010c42:	xor    r8d,r8d
   140010c45:	lea    edx,[r8+0x2]
   140010c49:	call   QWORD PTR [rip+0x25549]        # 0x140036198
   140010c4f:	nop
   140010c50:	mov    rax,rdi
   140010c53:	mov    rbx,QWORD PTR [rsp+0x58]
   140010c58:	mov    rbp,QWORD PTR [rsp+0x68]
   140010c5d:	add    rsp,0x30
   140010c61:	pop    r14
   140010c63:	pop    rdi
   140010c64:	pop    rsi
   140010c65:	ret    
   140010c66:	int3   
   140010c67:	int3   
   140010c68:	int3   
   140010c69:	int3   
   140010c6a:	int3   
   140010c6b:	int3   
   140010c6c:	int3   
   140010c6d:	int3   
   140010c6e:	int3   
   140010c6f:	int3   
   140010c70:	mov    QWORD PTR [rsp+0x8],rcx
   140010c75:	push   rdi
   140010c76:	sub    rsp,0x30
   140010c7a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140010c83:	mov    QWORD PTR [rsp+0x48],rbx
   140010c88:	mov    rbx,rdx
   140010c8b:	mov    rdi,rcx
   140010c8e:	mov    QWORD PTR [rcx+0x18],0xf
   140010c96:	mov    QWORD PTR [rcx+0x10],0x0
   140010c9e:	mov    BYTE PTR [rcx],0x0
   140010ca1:	or     r9,0xffffffffffffffff
   140010ca5:	xor    r8d,r8d
   140010ca8:	call   0x14001ef20
   140010cad:	nop
   140010cae:	mov    eax,DWORD PTR [rbx+0x20]
   140010cb1:	mov    DWORD PTR [rdi+0x20],eax
   140010cb4:	lea    rdx,[rbx+0x28]
   140010cb8:	lea    rcx,[rdi+0x28]
   140010cbc:	call   0x140015740
   140010cc1:	nop
   140010cc2:	lea    rdx,[rbx+0x40]
   140010cc6:	lea    rcx,[rdi+0x40]
   140010cca:	call   0x140015740
   140010ccf:	movzx  eax,BYTE PTR [rbx+0x58]
   140010cd3:	mov    BYTE PTR [rdi+0x58],al
   140010cd6:	movzx  eax,BYTE PTR [rbx+0x59]
   140010cda:	mov    BYTE PTR [rdi+0x59],al
   140010cdd:	mov    rax,rdi
   140010ce0:	mov    rbx,QWORD PTR [rsp+0x48]
   140010ce5:	add    rsp,0x30
   140010ce9:	pop    rdi
   140010cea:	ret    
   140010ceb:	int3   
   140010cec:	int3   
   140010ced:	int3   
   140010cee:	int3   
   140010cef:	int3   
   140010cf0:	mov    QWORD PTR [rsp+0x8],rcx
   140010cf5:	push   rdi
   140010cf6:	sub    rsp,0x30
   140010cfa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140010d03:	mov    QWORD PTR [rsp+0x50],rbx
   140010d08:	mov    QWORD PTR [rsp+0x58],rsi
   140010d0d:	mov    esi,edx
   140010d0f:	mov    rdi,rcx
   140010d12:	mov    DWORD PTR [rsp+0x48],0x0
   140010d1a:	test   r8d,r8d
   140010d1d:	je     0x140010d4d
   140010d1f:	lea    rax,[rip+0x2b482]        # 0x14003c1a8
   140010d26:	mov    QWORD PTR [rcx],rax
   140010d29:	mov    rax,QWORD PTR [rip+0x25330]        # 0x140036060
   140010d30:	mov    QWORD PTR [rcx+0x88],rax
   140010d37:	mov    rax,QWORD PTR [rip+0x25312]        # 0x140036050
   140010d3e:	mov    QWORD PTR [rcx+0x88],rax
   140010d45:	mov    DWORD PTR [rsp+0x48],0x1
   140010d4d:	xor    r9d,r9d
   140010d50:	xor    r8d,r8d
   140010d53:	lea    rdx,[rcx+0x8]
   140010d57:	call   QWORD PTR [rip+0x2541b]        # 0x140036178
   140010d5d:	nop
   140010d5e:	mov    rax,QWORD PTR [rdi]
   140010d61:	movsxd rdx,DWORD PTR [rax+0x4]
   140010d65:	lea    rax,[rip+0x2b434]        # 0x14003c1a0
   140010d6c:	mov    QWORD PTR [rdx+rdi*1],rax
   140010d70:	mov    rax,QWORD PTR [rdi]
   140010d73:	movsxd rdx,DWORD PTR [rax+0x4]
   140010d77:	lea    r8d,[rdx-0x88]
   140010d7e:	mov    DWORD PTR [rdx+rdi*1-0x4],r8d
   140010d83:	or     esi,0x2
   140010d86:	mov    edx,esi
   140010d88:	lea    rcx,[rdi+0x8]
   140010d8c:	call   0x1400112a0
   140010d91:	nop
   140010d92:	mov    rax,rdi
   140010d95:	mov    rbx,QWORD PTR [rsp+0x50]
   140010d9a:	mov    rsi,QWORD PTR [rsp+0x58]
   140010d9f:	add    rsp,0x30
   140010da3:	pop    rdi
   140010da4:	ret    
   140010da5:	int3   
   140010da6:	int3   
   140010da7:	int3   
   140010da8:	int3   
   140010da9:	int3   
   140010daa:	int3   
   140010dab:	int3   
   140010dac:	int3   
   140010dad:	int3   
   140010dae:	int3   
   140010daf:	int3   
   140010db0:	mov    QWORD PTR [rsp+0x8],rbx
   140010db5:	push   rdi
   140010db6:	sub    rsp,0x20
   140010dba:	mov    rbx,rdx
   140010dbd:	mov    rdi,rcx
   140010dc0:	call   0x140015650
   140010dc5:	mov    rax,QWORD PTR [rbx+0x18]
   140010dc9:	mov    QWORD PTR [rdi+0x18],rax
   140010dcd:	mov    eax,DWORD PTR [rbx+0x20]
   140010dd0:	mov    rbx,QWORD PTR [rsp+0x30]
   140010dd5:	mov    DWORD PTR [rdi+0x20],eax
   140010dd8:	mov    rax,rdi
   140010ddb:	add    rsp,0x20
   140010ddf:	pop    rdi
   140010de0:	ret    
   140010de1:	int3   
   140010de2:	int3   
   140010de3:	int3   
   140010de4:	int3   
   140010de5:	int3   
   140010de6:	int3   
   140010de7:	int3   
   140010de8:	int3   
   140010de9:	int3   
   140010dea:	int3   
   140010deb:	int3   
   140010dec:	int3   
   140010ded:	int3   
   140010dee:	int3   
   140010def:	int3   
   140010df0:	xor    eax,eax
   140010df2:	mov    QWORD PTR [rcx],rax
   140010df5:	mov    QWORD PTR [rcx+0x8],rax
   140010df9:	mov    QWORD PTR [rcx+0x10],rax
   140010dfd:	mov    QWORD PTR [rcx+0x18],rdx
   140010e01:	mov    DWORD PTR [rcx+0x20],r8d
   140010e05:	mov    rax,rcx
   140010e08:	ret    
   140010e09:	int3   
   140010e0a:	int3   
   140010e0b:	int3   
   140010e0c:	int3   
   140010e0d:	int3   
   140010e0e:	int3   
   140010e0f:	int3   
   140010e10:	mov    QWORD PTR [rsp+0x8],rcx
   140010e15:	push   rdi
   140010e16:	sub    rsp,0x30
   140010e1a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140010e23:	mov    QWORD PTR [rsp+0x50],rbx
   140010e28:	mov    QWORD PTR [rsp+0x58],rsi
   140010e2d:	mov    rsi,rdx
   140010e30:	mov    rbx,rcx
   140010e33:	mov    QWORD PTR [rcx+0x18],0xf
   140010e3b:	xor    edi,edi
   140010e3d:	mov    QWORD PTR [rcx+0x10],rdi
   140010e41:	mov    BYTE PTR [rcx],dil
   140010e44:	or     r9,0xffffffffffffffff
   140010e48:	xor    r8d,r8d
   140010e4b:	call   0x14001ef20
   140010e50:	nop
   140010e51:	lea    ecx,[rdi+0x20]
   140010e54:	call   0x14003027c
   140010e59:	mov    QWORD PTR [rsp+0x48],rax
   140010e5e:	test   rax,rax
   140010e61:	je     0x140010e72
   140010e63:	mov    rdx,QWORD PTR [rsi+0x20]
   140010e67:	mov    rcx,rax
   140010e6a:	call   0x140014470
   140010e6f:	mov    rdi,rax
   140010e72:	mov    QWORD PTR [rbx+0x20],rdi
   140010e76:	mov    rax,rbx
   140010e79:	mov    rbx,QWORD PTR [rsp+0x50]
   140010e7e:	mov    rsi,QWORD PTR [rsp+0x58]
   140010e83:	add    rsp,0x30
   140010e87:	pop    rdi
   140010e88:	ret    
   140010e89:	int3   
   140010e8a:	int3   
   140010e8b:	int3   
   140010e8c:	int3   
   140010e8d:	int3   
   140010e8e:	int3   
   140010e8f:	int3   
   140010e90:	mov    QWORD PTR [rsp+0x8],rcx
   140010e95:	push   rdi
   140010e96:	sub    rsp,0x30
   140010e9a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140010ea3:	mov    QWORD PTR [rsp+0x50],rbx
   140010ea8:	mov    QWORD PTR [rsp+0x58],rsi
   140010ead:	mov    rsi,rcx
   140010eb0:	mov    QWORD PTR [rcx+0x18],0xf
   140010eb8:	mov    QWORD PTR [rcx+0x10],0x0
   140010ec0:	mov    BYTE PTR [rcx],0x0
   140010ec3:	mov    ecx,0x20
   140010ec8:	call   0x14003027c
   140010ecd:	mov    rbx,rax
   140010ed0:	mov    QWORD PTR [rsp+0x48],rax
   140010ed5:	test   rax,rax
   140010ed8:	je     0x140010f4e
   140010eda:	mov    ecx,0x70
   140010edf:	call   0x14003027c
   140010ee4:	test   rax,rax
   140010ee7:	jne    0x140010ef0
   140010ee9:	call   QWORD PTR [rip+0x25329]        # 0x140036218
   140010eef:	int3   
   140010ef0:	mov    QWORD PTR [rbx+0x8],rax
   140010ef4:	lea    rdi,[rbx+0x11]
   140010ef8:	mov    rcx,rdi
   140010efb:	call   0x1400229b0
   140010f00:	test   rdi,rdi
   140010f03:	je     0x140010f0b
   140010f05:	lea    rax,[rdi-0x11]
   140010f09:	jmp    0x140010f0d
   140010f0b:	xor    eax,eax
   140010f0d:	mov    rcx,QWORD PTR [rax+0x8]
   140010f11:	test   rcx,rcx
   140010f14:	je     0x140010f1a
   140010f16:	add    rcx,0x60
   140010f1a:	test   rdi,rdi
   140010f1d:	je     0x140010f25
   140010f1f:	lea    rax,[rdi-0x11]
   140010f23:	jmp    0x140010f27
   140010f25:	xor    eax,eax
   140010f27:	mov    rax,QWORD PTR [rax+0x8]
   140010f2b:	mov    QWORD PTR [rax+0x68],rcx
   140010f2f:	test   rdi,rdi
   140010f32:	je     0x140010f3a
   140010f34:	lea    rax,[rdi-0x11]
   140010f38:	jmp    0x140010f3c
   140010f3a:	xor    eax,eax
   140010f3c:	mov    rax,QWORD PTR [rax+0x8]
   140010f40:	mov    QWORD PTR [rax+0x60],rcx
   140010f44:	mov    QWORD PTR [rbx+0x18],0x0
   140010f4c:	jmp    0x140010f50
   140010f4e:	xor    ebx,ebx
   140010f50:	mov    QWORD PTR [rsi+0x20],rbx
   140010f54:	mov    rax,rsi
   140010f57:	mov    rbx,QWORD PTR [rsp+0x50]
   140010f5c:	mov    rsi,QWORD PTR [rsp+0x58]
   140010f61:	add    rsp,0x30
   140010f65:	pop    rdi
   140010f66:	ret    
   140010f67:	int3   
   140010f68:	int3   
   140010f69:	int3   
   140010f6a:	int3   
   140010f6b:	int3   
   140010f6c:	int3   
   140010f6d:	int3   
   140010f6e:	int3   
   140010f6f:	int3   
   140010f70:	mov    QWORD PTR [rsp+0x8],rcx
   140010f75:	push   rdi
   140010f76:	sub    rsp,0x30
   140010f7a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140010f83:	mov    QWORD PTR [rsp+0x50],rbx
   140010f88:	mov    rbx,rcx
   140010f8b:	mov    ecx,0x9c8
   140010f90:	call   0x14003027c
   140010f95:	mov    rdi,rax
   140010f98:	test   rax,rax
   140010f9b:	je     0x140010fae
   140010f9d:	lea    rdx,[rip+0x2b96c]        # 0x14003c910
   140010fa4:	mov    rcx,rax
   140010fa7:	call   0x14002b500
   140010fac:	jmp    0x140010fb0
   140010fae:	xor    edi,edi
   140010fb0:	mov    QWORD PTR [rsp+0x48],rbx
   140010fb5:	mov    QWORD PTR [rbx],rdi
   140010fb8:	lea    r8,[rbx+0x8]
   140010fbc:	mov    QWORD PTR [r8],0x0
   140010fc3:	mov    rdx,rdi
   140010fc6:	mov    rcx,rbx
   140010fc9:	call   0x14000dac0
   140010fce:	nop
   140010fcf:	mov    DWORD PTR [rsp+0x48],0x0
   140010fd7:	mov    DWORD PTR [rsp+0x4c],0xffffffff
   140010fdf:	mov    rax,QWORD PTR [rbx]
   140010fe2:	mov    QWORD PTR [rbx+0x10],rax
   140010fe6:	mov    rax,QWORD PTR [rsp+0x48]
   140010feb:	mov    QWORD PTR [rbx+0x18],rax
   140010fef:	mov    rcx,QWORD PTR [rbx]
   140010ff2:	call   0x14000d430
   140010ff7:	nop
   140010ff8:	mov    rax,rbx
   140010ffb:	mov    rbx,QWORD PTR [rsp+0x50]
   140011000:	add    rsp,0x30
   140011004:	pop    rdi
   140011005:	ret    
   140011006:	int3   
   140011007:	int3   
   140011008:	int3   
   140011009:	int3   
   14001100a:	int3   
   14001100b:	int3   
   14001100c:	int3   
   14001100d:	int3   
   14001100e:	int3   
   14001100f:	int3   
   140011010:	mov    QWORD PTR [rsp+0x8],rbx
   140011015:	push   rdi
   140011016:	sub    rsp,0x20
   14001101a:	mov    QWORD PTR [rcx+0x18],0xf
   140011022:	mov    QWORD PTR [rcx+0x10],0x0
   14001102a:	mov    BYTE PTR [rcx],0x0
   14001102d:	cmp    QWORD PTR [rdx+0x18],0x10
   140011032:	mov    rbx,rdx
   140011035:	mov    rdi,rcx
   140011038:	jae    0x14001104b
   14001103a:	mov    r8,QWORD PTR [rdx+0x10]
   14001103e:	inc    r8
   140011041:	je     0x140011058
   140011043:	call   QWORD PTR [rip+0x25417]        # 0x140036460
   140011049:	jmp    0x140011058
   14001104b:	mov    rax,QWORD PTR [rdx]
   14001104e:	mov    QWORD PTR [rcx],rax
   140011051:	mov    QWORD PTR [rdx],0x0
   140011058:	mov    rax,QWORD PTR [rbx+0x10]
   14001105c:	mov    QWORD PTR [rdi+0x10],rax
   140011060:	mov    rax,QWORD PTR [rbx+0x18]
   140011064:	mov    QWORD PTR [rdi+0x18],rax
   140011068:	mov    QWORD PTR [rbx+0x18],0xf
   140011070:	mov    QWORD PTR [rbx+0x10],0x0
   140011078:	mov    BYTE PTR [rbx],0x0
   14001107b:	mov    rbx,QWORD PTR [rsp+0x30]
   140011080:	mov    rax,rdi
   140011083:	add    rsp,0x20
   140011087:	pop    rdi
   140011088:	ret    
   140011089:	int3   
   14001108a:	int3   
   14001108b:	int3   
   14001108c:	int3   
   14001108d:	int3   
   14001108e:	int3   
   14001108f:	int3   
   140011090:	rex push rbx
   140011092:	sub    rsp,0x20
   140011096:	mov    QWORD PTR [rcx+0x18],0xf
   14001109e:	mov    QWORD PTR [rcx+0x10],0x0
   1400110a6:	or     r9,0xffffffffffffffff
   1400110aa:	xor    r8d,r8d
   1400110ad:	mov    rbx,rcx
   1400110b0:	mov    BYTE PTR [rcx],0x0
   1400110b3:	call   0x14001ef20
   1400110b8:	mov    rax,rbx
   1400110bb:	add    rsp,0x20
   1400110bf:	pop    rbx
   1400110c0:	ret    
   1400110c1:	int3   
   1400110c2:	int3   
   1400110c3:	int3   
   1400110c4:	int3   
   1400110c5:	int3   
   1400110c6:	int3   
   1400110c7:	int3   
   1400110c8:	int3   
   1400110c9:	int3   
   1400110ca:	int3   
   1400110cb:	int3   
   1400110cc:	int3   
   1400110cd:	int3   
   1400110ce:	int3   
   1400110cf:	int3   
   1400110d0:	rex push rbx
   1400110d2:	sub    rsp,0x20
   1400110d6:	xor    r8d,r8d
   1400110d9:	mov    QWORD PTR [rcx+0x18],0xf
   1400110e1:	mov    rbx,rcx
   1400110e4:	mov    QWORD PTR [rcx+0x10],r8
   1400110e8:	mov    BYTE PTR [rcx],r8b
   1400110eb:	cmp    BYTE PTR [rdx],r8b
   1400110ee:	je     0x1400110fe
   1400110f0:	or     r8,0xffffffffffffffff
   1400110f4:	inc    r8
   1400110f7:	cmp    BYTE PTR [rdx+r8*1],0x0
   1400110fc:	jne    0x1400110f4
   1400110fe:	call   0x14001f070
   140011103:	mov    rax,rbx
   140011106:	add    rsp,0x20
   14001110a:	pop    rbx
   14001110b:	ret    
   14001110c:	int3   
   14001110d:	int3   
   14001110e:	int3   
   14001110f:	int3   
   140011110:	rex push rbx
   140011112:	sub    rsp,0x20
   140011116:	mov    QWORD PTR [rcx+0x18],0xf
   14001111e:	mov    QWORD PTR [rcx+0x10],0x0
   140011126:	mov    rbx,rcx
   140011129:	mov    BYTE PTR [rcx],0x0
   14001112c:	call   0x14001f070
   140011131:	mov    rax,rbx
   140011134:	add    rsp,0x20
   140011138:	pop    rbx
   140011139:	ret    
   14001113a:	int3   
   14001113b:	int3   
   14001113c:	int3   
   14001113d:	int3   
   14001113e:	int3   
   14001113f:	int3   
   140011140:	mov    QWORD PTR [rsp+0x18],r8
   140011145:	mov    QWORD PTR [rsp+0x10],rdx
   14001114a:	push   rbx
   14001114b:	sub    rsp,0x20
   14001114f:	mov    QWORD PTR [rcx+0x18],0xf
   140011157:	mov    QWORD PTR [rcx+0x10],0x0
   14001115f:	mov    BYTE PTR [rcx],0x0
   140011162:	mov    rdx,QWORD PTR [rsp+0x38]
   140011167:	mov    r8,QWORD PTR [rsp+0x40]
   14001116c:	mov    rbx,rcx
   14001116f:	cmp    rdx,r8
   140011172:	je     0x14001117c
   140011174:	sub    r8,rdx
   140011177:	call   0x14001f070
   14001117c:	mov    rax,rbx
   14001117f:	add    rsp,0x20
   140011183:	pop    rbx
   140011184:	ret    
   140011185:	int3   
   140011186:	int3   
   140011187:	int3   
   140011188:	int3   
   140011189:	int3   
   14001118a:	int3   
   14001118b:	int3   
   14001118c:	int3   
   14001118d:	int3   
   14001118e:	int3   
   14001118f:	int3   
   140011190:	mov    QWORD PTR [rcx+0x18],0xf
   140011198:	mov    QWORD PTR [rcx+0x10],0x0
   1400111a0:	mov    rax,rcx
   1400111a3:	mov    BYTE PTR [rcx],0x0
   1400111a6:	ret    
   1400111a7:	int3   
   1400111a8:	int3   
   1400111a9:	int3   
   1400111aa:	int3   
   1400111ab:	int3   
   1400111ac:	int3   
   1400111ad:	int3   
   1400111ae:	int3   
   1400111af:	int3   
   1400111b0:	rex push rbx
   1400111b2:	sub    rsp,0x20
   1400111b6:	mov    QWORD PTR [rcx+0x18],0xf
   1400111be:	mov    QWORD PTR [rcx+0x10],0x0
   1400111c6:	mov    rbx,rcx
   1400111c9:	mov    BYTE PTR [rcx],0x0
   1400111cc:	call   0x14001f1f0
   1400111d1:	mov    rax,rbx
   1400111d4:	add    rsp,0x20
   1400111d8:	pop    rbx
   1400111d9:	ret    
   1400111da:	int3   
   1400111db:	int3   
   1400111dc:	int3   
   1400111dd:	int3   
   1400111de:	int3   
   1400111df:	int3   
   1400111e0:	xor    eax,eax
   1400111e2:	mov    QWORD PTR [rcx+0x18],0x7
   1400111ea:	mov    QWORD PTR [rcx+0x10],rax
   1400111ee:	mov    WORD PTR [rcx],ax
   1400111f1:	mov    rax,rcx
   1400111f4:	ret    
   1400111f5:	int3   
   1400111f6:	int3   
   1400111f7:	int3   
   1400111f8:	int3   
   1400111f9:	int3   
   1400111fa:	int3   
   1400111fb:	int3   
   1400111fc:	int3   
   1400111fd:	int3   
   1400111fe:	int3   
   1400111ff:	int3   
   140011200:	mov    QWORD PTR [rsp+0x8],rcx
   140011205:	push   rdi
   140011206:	sub    rsp,0x30
   14001120a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140011213:	mov    QWORD PTR [rsp+0x48],rbx
   140011218:	mov    QWORD PTR [rsp+0x50],rsi
   14001121d:	mov    edi,r8d
   140011220:	mov    rbx,rdx
   140011223:	mov    rsi,rcx
   140011226:	call   QWORD PTR [rip+0x24fcc]        # 0x1400361f8
   14001122c:	nop
   14001122d:	lea    rax,[rip+0x297a4]        # 0x14003a9d8
   140011234:	mov    QWORD PTR [rsi],rax
   140011237:	xor    r9d,r9d
   14001123a:	test   dil,0x1
   14001123e:	mov    eax,0x4
   140011243:	cmove  r9d,eax
   140011247:	test   dil,0x2
   14001124b:	jne    0x140011251
   14001124d:	or     r9d,0x2
   140011251:	test   dil,0x8
   140011255:	je     0x14001125b
   140011257:	or     r9d,0x8
   14001125b:	test   al,dil
   14001125e:	je     0x140011264
   140011260:	or     r9d,0x10
   140011264:	mov    r8,QWORD PTR [rbx+0x10]
   140011268:	cmp    QWORD PTR [rbx+0x18],0x10
   14001126d:	jb     0x140011272
   14001126f:	mov    rbx,QWORD PTR [rbx]
   140011272:	mov    rdx,rbx
   140011275:	mov    rcx,rsi
   140011278:	call   0x14001ce50
   14001127d:	nop
   14001127e:	mov    rax,rsi
   140011281:	mov    rbx,QWORD PTR [rsp+0x48]
   140011286:	mov    rsi,QWORD PTR [rsp+0x50]
   14001128b:	add    rsp,0x30
   14001128f:	pop    rdi
   140011290:	ret    
   140011291:	int3   
   140011292:	int3   
   140011293:	int3   
   140011294:	int3   
   140011295:	int3   
   140011296:	int3   
   140011297:	int3   
   140011298:	int3   
   140011299:	int3   
   14001129a:	int3   
   14001129b:	int3   
   14001129c:	int3   
   14001129d:	int3   
   14001129e:	int3   
   14001129f:	int3   
   1400112a0:	rex push rdi
   1400112a2:	sub    rsp,0x30
   1400112a6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400112af:	mov    QWORD PTR [rsp+0x48],rbx
   1400112b4:	mov    edi,edx
   1400112b6:	mov    rbx,rcx
   1400112b9:	call   QWORD PTR [rip+0x24f39]        # 0x1400361f8
   1400112bf:	nop
   1400112c0:	lea    rax,[rip+0x29711]        # 0x14003a9d8
   1400112c7:	mov    QWORD PTR [rbx],rax
   1400112ca:	test   dil,0x1
   1400112ce:	mov    eax,0x0
   1400112d3:	mov    ecx,0x4
   1400112d8:	cmove  eax,ecx
   1400112db:	test   dil,0x2
   1400112df:	jne    0x1400112e4
   1400112e1:	or     eax,0x2
   1400112e4:	test   dil,0x8
   1400112e8:	je     0x1400112ed
   1400112ea:	or     eax,0x8
   1400112ed:	test   cl,dil
   1400112f0:	je     0x1400112f5
   1400112f2:	or     eax,0x10
   1400112f5:	mov    QWORD PTR [rbx+0x68],0x0
   1400112fd:	mov    DWORD PTR [rbx+0x70],eax
   140011300:	mov    rax,rbx
   140011303:	mov    rbx,QWORD PTR [rsp+0x48]
   140011308:	add    rsp,0x30
   14001130c:	pop    rdi
   14001130d:	ret    
   14001130e:	int3   
   14001130f:	int3   
   140011310:	mov    QWORD PTR [rsp+0x8],rcx
   140011315:	push   rbp
   140011316:	push   rsi
   140011317:	push   rdi
   140011318:	sub    rsp,0x30
   14001131c:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140011325:	mov    QWORD PTR [rsp+0x58],rbx
   14001132a:	mov    esi,r8d
   14001132d:	mov    rbp,rdx
   140011330:	mov    rdi,rcx
   140011333:	mov    DWORD PTR [rsp+0x68],0x0
   14001133b:	test   r9d,r9d
   14001133e:	je     0x140011379
   140011340:	lea    rax,[rip+0x29719]        # 0x14003aa60
   140011347:	mov    QWORD PTR [rcx],rax
   14001134a:	lea    rax,[rip+0x29717]        # 0x14003aa68
   140011351:	mov    QWORD PTR [rcx+0x10],rax
   140011355:	mov    rax,QWORD PTR [rip+0x24d04]        # 0x140036060
   14001135c:	mov    QWORD PTR [rcx+0x98],rax
   140011363:	mov    rax,QWORD PTR [rip+0x24ce6]        # 0x140036050
   14001136a:	mov    QWORD PTR [rcx+0x98],rax
   140011371:	mov    DWORD PTR [rsp+0x68],0x1
   140011379:	xor    r8d,r8d
   14001137c:	lea    rdx,[rcx+0x18]
   140011380:	call   QWORD PTR [rip+0x24da2]        # 0x140036128
   140011386:	nop
   140011387:	mov    rax,QWORD PTR [rdi]
   14001138a:	movsxd rdx,DWORD PTR [rax+0x4]
   14001138e:	lea    rax,[rip+0x296c3]        # 0x14003aa58
   140011395:	mov    QWORD PTR [rdx+rdi*1],rax
   140011399:	mov    rax,QWORD PTR [rdi]
   14001139c:	movsxd rdx,DWORD PTR [rax+0x4]
   1400113a0:	lea    r8d,[rdx-0x98]
   1400113a7:	mov    DWORD PTR [rdx+rdi*1-0x4],r8d
   1400113ac:	mov    r8d,esi
   1400113af:	mov    rdx,rbp
   1400113b2:	lea    rcx,[rdi+0x18]
   1400113b6:	call   0x140011200
   1400113bb:	nop
   1400113bc:	mov    rax,rdi
   1400113bf:	mov    rbx,QWORD PTR [rsp+0x58]
   1400113c4:	add    rsp,0x30
   1400113c8:	pop    rdi
   1400113c9:	pop    rsi
   1400113ca:	pop    rbp
   1400113cb:	ret    
   1400113cc:	int3   
   1400113cd:	int3   
   1400113ce:	int3   
   1400113cf:	int3   
   1400113d0:	mov    QWORD PTR [rsp+0x8],rcx
   1400113d5:	push   rdi
   1400113d6:	sub    rsp,0x30
   1400113da:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400113e3:	mov    QWORD PTR [rsp+0x48],rbx
   1400113e8:	mov    QWORD PTR [rsp+0x58],rsi
   1400113ed:	mov    esi,edx
   1400113ef:	mov    rdi,rcx
   1400113f2:	mov    DWORD PTR [rsp+0x50],0x0
   1400113fa:	test   r8d,r8d
   1400113fd:	je     0x140011438
   1400113ff:	lea    rax,[rip+0x2965a]        # 0x14003aa60
   140011406:	mov    QWORD PTR [rcx],rax
   140011409:	lea    rax,[rip+0x29658]        # 0x14003aa68
   140011410:	mov    QWORD PTR [rcx+0x10],rax
   140011414:	mov    rax,QWORD PTR [rip+0x24c45]        # 0x140036060
   14001141b:	mov    QWORD PTR [rcx+0x98],rax
   140011422:	mov    rax,QWORD PTR [rip+0x24c27]        # 0x140036050
   140011429:	mov    QWORD PTR [rcx+0x98],rax
   140011430:	mov    DWORD PTR [rsp+0x50],0x1
   140011438:	xor    r8d,r8d
   14001143b:	lea    rdx,[rcx+0x18]
   14001143f:	call   QWORD PTR [rip+0x24ce3]        # 0x140036128
   140011445:	nop
   140011446:	mov    rax,QWORD PTR [rdi]
   140011449:	movsxd rdx,DWORD PTR [rax+0x4]
   14001144d:	lea    rax,[rip+0x29604]        # 0x14003aa58
   140011454:	mov    QWORD PTR [rdx+rdi*1],rax
   140011458:	mov    rax,QWORD PTR [rdi]
   14001145b:	movsxd rdx,DWORD PTR [rax+0x4]
   14001145f:	lea    r8d,[rdx-0x98]
   140011466:	mov    DWORD PTR [rdx+rdi*1-0x4],r8d
   14001146b:	mov    edx,esi
   14001146d:	lea    rcx,[rdi+0x18]
   140011471:	call   0x1400112a0
   140011476:	nop
   140011477:	mov    rax,rdi
   14001147a:	mov    rbx,QWORD PTR [rsp+0x48]
   14001147f:	mov    rsi,QWORD PTR [rsp+0x58]
   140011484:	add    rsp,0x30
   140011488:	pop    rdi
   140011489:	ret    
   14001148a:	int3   
   14001148b:	int3   
   14001148c:	int3   
   14001148d:	int3   
   14001148e:	int3   
   14001148f:	int3   
   140011490:	mov    rax,QWORD PTR [rdx]
   140011493:	mov    QWORD PTR [rcx],rax
   140011496:	mov    rax,QWORD PTR [rdx+0x8]
   14001149a:	mov    QWORD PTR [rcx+0x8],rax
   14001149e:	test   rax,rax
   1400114a1:	je     0x1400114a7
   1400114a3:	lock inc DWORD PTR [rax+0x8]
   1400114a7:	mov    rax,rcx
   1400114aa:	ret    
   1400114ab:	int3   
   1400114ac:	int3   
   1400114ad:	int3   
   1400114ae:	int3   
   1400114af:	int3   
   1400114b0:	rex push rbx
   1400114b2:	sub    rsp,0x20
   1400114b6:	mov    eax,r8d
   1400114b9:	mov    r8,rdx
   1400114bc:	mov    rbx,rcx
   1400114bf:	mov    edx,eax
   1400114c1:	call   0x1400023f0
   1400114c6:	mov    rax,rbx
   1400114c9:	add    rsp,0x20
   1400114cd:	pop    rbx
   1400114ce:	ret    
   1400114cf:	int3   
   1400114d0:	mov    rax,QWORD PTR [rdx]
   1400114d3:	mov    QWORD PTR [rcx],rax
   1400114d6:	mov    rax,QWORD PTR [rdx+0x8]
   1400114da:	mov    QWORD PTR [rcx+0x8],rax
   1400114de:	test   rax,rax
   1400114e1:	je     0x1400114e7
   1400114e3:	lock inc DWORD PTR [rax+0x8]
   1400114e7:	mov    rax,rcx
   1400114ea:	ret    
   1400114eb:	int3   
   1400114ec:	int3   
   1400114ed:	int3   
   1400114ee:	int3   
   1400114ef:	int3   
   1400114f0:	rex push rdi
   1400114f2:	sub    rsp,0x30
   1400114f6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400114ff:	mov    QWORD PTR [rsp+0x40],rbx
   140011504:	mov    QWORD PTR [rsp+0x48],rbp
   140011509:	mov    QWORD PTR [rsp+0x50],rsi
   14001150e:	movsxd rsi,r8d
   140011511:	mov    ebp,edx
   140011513:	mov    rdi,rcx
   140011516:	mov    ecx,0x50
   14001151b:	call   0x14003027c
   140011520:	mov    rbx,rax
   140011523:	mov    QWORD PTR [rsp+0x58],rax
   140011528:	test   rax,rax
   14001152b:	je     0x14001156a
   14001152d:	mov    edx,ebp
   14001152f:	mov    rcx,rax
   140011532:	call   0x1400158c0
   140011537:	nop
   140011538:	xor    eax,eax
   14001153a:	test   rsi,rsi
   14001153d:	je     0x140011559
   14001153f:	cmp    rsi,0xffffffffffffffff
   140011543:	ja     0x140011552
   140011545:	mov    rcx,rsi
   140011548:	call   0x14003027c
   14001154d:	test   rax,rax
   140011550:	jne    0x140011559
   140011552:	call   QWORD PTR [rip+0x24cc0]        # 0x140036218
   140011558:	int3   
   140011559:	mov    QWORD PTR [rbx+0x28],rax
   14001155d:	mov    QWORD PTR [rbx+0x30],rsi
   140011561:	mov    DWORD PTR [rbx+0x48],0x0
   140011568:	jmp    0x14001156c
   14001156a:	xor    ebx,ebx
   14001156c:	mov    QWORD PTR [rsp+0x58],rdi
   140011571:	mov    QWORD PTR [rdi],rbx
   140011574:	lea    r8,[rdi+0x8]
   140011578:	mov    QWORD PTR [r8],0x0
   14001157f:	mov    rdx,rbx
   140011582:	mov    rcx,rdi
   140011585:	call   0x14000da40
   14001158a:	nop
   14001158b:	mov    rax,rdi
   14001158e:	mov    rbx,QWORD PTR [rsp+0x40]
   140011593:	mov    rbp,QWORD PTR [rsp+0x48]
   140011598:	mov    rsi,QWORD PTR [rsp+0x50]
   14001159d:	add    rsp,0x30
   1400115a1:	pop    rdi
   1400115a2:	ret    
   1400115a3:	int3   
   1400115a4:	int3   
   1400115a5:	int3   
   1400115a6:	int3   
   1400115a7:	int3   
   1400115a8:	int3   
   1400115a9:	int3   
   1400115aa:	int3   
   1400115ab:	int3   
   1400115ac:	int3   
   1400115ad:	int3   
   1400115ae:	int3   
   1400115af:	int3   
   1400115b0:	mov    QWORD PTR [rcx],rdx
   1400115b3:	mov    rax,rcx
   1400115b6:	ret    
   1400115b7:	int3   
   1400115b8:	int3   
   1400115b9:	int3   
   1400115ba:	int3   
   1400115bb:	int3   
   1400115bc:	int3   
   1400115bd:	int3   
   1400115be:	int3   
   1400115bf:	int3   
   1400115c0:	mov    QWORD PTR [rcx],rdx
   1400115c3:	mov    rax,rcx
   1400115c6:	ret    
   1400115c7:	int3   
   1400115c8:	int3   
   1400115c9:	int3   
   1400115ca:	int3   
   1400115cb:	int3   
   1400115cc:	int3   
   1400115cd:	int3   
   1400115ce:	int3   
   1400115cf:	int3   
   1400115d0:	mov    rax,QWORD PTR [rdx]
   1400115d3:	mov    QWORD PTR [rcx],rax
   1400115d6:	mov    rax,rcx
   1400115d9:	ret    
   1400115da:	int3   
   1400115db:	int3   
   1400115dc:	int3   
   1400115dd:	int3   
   1400115de:	int3   
   1400115df:	int3   
   1400115e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400115e5:	push   rdi
   1400115e6:	sub    rsp,0x20
   1400115ea:	xor    eax,eax
   1400115ec:	mov    rdi,rcx
   1400115ef:	movsxd rbx,edx
   1400115f2:	test   edx,edx
   1400115f4:	je     0x140011610
   1400115f6:	cmp    rbx,0xffffffffffffffff
   1400115fa:	ja     0x140011609
   1400115fc:	mov    rcx,rbx
   1400115ff:	call   0x14003027c
   140011604:	test   rax,rax
   140011607:	jne    0x140011610
   140011609:	call   QWORD PTR [rip+0x24c09]        # 0x140036218
   14001160f:	int3   
   140011610:	mov    QWORD PTR [rdi],rax
   140011613:	mov    QWORD PTR [rdi+0x8],rbx
   140011617:	mov    rbx,QWORD PTR [rsp+0x30]
   14001161c:	mov    rax,rdi
   14001161f:	add    rsp,0x20
   140011623:	pop    rdi
   140011624:	ret    
   140011625:	int3   
   140011626:	int3   
   140011627:	int3   
   140011628:	int3   
   140011629:	int3   
   14001162a:	int3   
   14001162b:	int3   
   14001162c:	int3   
   14001162d:	int3   
   14001162e:	int3   
   14001162f:	int3   
   140011630:	rex push rbx
   140011632:	sub    rsp,0x20
   140011636:	mov    rbx,rcx
   140011639:	call   0x140011650
   14001163e:	mov    rax,rbx
   140011641:	add    rsp,0x20
   140011645:	pop    rbx
   140011646:	ret    
   140011647:	int3   
   140011648:	int3   
   140011649:	int3   
   14001164a:	int3   
   14001164b:	int3   
   14001164c:	int3   
   14001164d:	int3   
   14001164e:	int3   
   14001164f:	int3   
   140011650:	rex push rsi
   140011652:	sub    rsp,0x30
   140011656:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001165f:	mov    QWORD PTR [rsp+0x48],rbx
   140011664:	mov    rsi,rcx
   140011667:	mov    ecx,0x38
   14001166c:	call   0x14003027c
   140011671:	mov    rbx,rax
   140011674:	mov    QWORD PTR [rsp+0x40],rax
   140011679:	test   rax,rax
   14001167c:	je     0x1400116c6
   14001167e:	mov    QWORD PTR [rax],0x0
   140011685:	mov    QWORD PTR [rax+0x8],0x0
   14001168d:	xor    r8d,r8d
   140011690:	xor    edx,edx
   140011692:	mov    rcx,rax
   140011695:	call   0x14001c4d0
   14001169a:	mov    QWORD PTR [rbx],rax
   14001169d:	mov    QWORD PTR [rbx+0x10],0x0
   1400116a5:	mov    QWORD PTR [rbx+0x18],0x1000
   1400116ad:	mov    QWORD PTR [rbx+0x20],0x80
   1400116b5:	mov    QWORD PTR [rbx+0x28],0x4
   1400116bd:	mov    DWORD PTR [rbx+0x30],0x4
   1400116c4:	jmp    0x1400116c8
   1400116c6:	xor    ebx,ebx
   1400116c8:	mov    QWORD PTR [rsp+0x40],rsi
   1400116cd:	mov    QWORD PTR [rsi],rbx
   1400116d0:	lea    r8,[rsi+0x8]
   1400116d4:	mov    QWORD PTR [r8],0x0
   1400116db:	mov    rdx,rbx
   1400116de:	mov    rcx,rsi
   1400116e1:	call   0x14000d940
   1400116e6:	nop
   1400116e7:	mov    rax,rsi
   1400116ea:	mov    rbx,QWORD PTR [rsp+0x48]
   1400116ef:	add    rsp,0x30
   1400116f3:	pop    rsi
   1400116f4:	ret    
   1400116f5:	int3   
   1400116f6:	int3   
   1400116f7:	int3   
   1400116f8:	int3   
   1400116f9:	int3   
   1400116fa:	int3   
   1400116fb:	int3   
   1400116fc:	int3   
   1400116fd:	int3   
   1400116fe:	int3   
   1400116ff:	int3   
   140011700:	lea    rax,[rip+0x2a8a9]        # 0x14003bfb0
   140011707:	mov    QWORD PTR [rcx+0x8],rdx
   14001170b:	mov    QWORD PTR [rcx],rax
   14001170e:	mov    rax,rcx
   140011711:	ret    
   140011712:	int3   
   140011713:	int3   
   140011714:	int3   
   140011715:	int3   
   140011716:	int3   
   140011717:	int3   
   140011718:	int3   
   140011719:	int3   
   14001171a:	int3   
   14001171b:	int3   
   14001171c:	int3   
   14001171d:	int3   
   14001171e:	int3   
   14001171f:	int3   
   140011720:	mov    QWORD PTR [rsp+0x8],rcx
   140011725:	push   rdi
   140011726:	sub    rsp,0x30
   14001172a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140011733:	mov    QWORD PTR [rsp+0x48],rbx
   140011738:	mov    QWORD PTR [rsp+0x50],rsi
   14001173d:	mov    rsi,rcx
   140011740:	call   QWORD PTR [rip+0x24ab2]        # 0x1400361f8
   140011746:	nop
   140011747:	lea    rdi,[rsi+0x68]
   14001174b:	mov    QWORD PTR [rdi+0x8],0x0
   140011753:	lea    rax,[rip+0x2a89e]        # 0x14003bff8
   14001175a:	mov    QWORD PTR [rsi],rax
   14001175d:	lea    rax,[rip+0x2a914]        # 0x14003c078
   140011764:	mov    QWORD PTR [rdi],rax
   140011767:	lea    rbx,[rsi+0x78]
   14001176b:	mov    rcx,rbx
   14001176e:	call   0x140011650
   140011773:	mov    QWORD PTR [rdi+0x8],rbx
   140011777:	mov    rax,QWORD PTR [rbx]
   14001177a:	mov    QWORD PTR [rax+0x10],rdi
   14001177e:	mov    rax,rsi
   140011781:	mov    rbx,QWORD PTR [rsp+0x48]
   140011786:	mov    rsi,QWORD PTR [rsp+0x50]
   14001178b:	add    rsp,0x30
   14001178f:	pop    rdi
   140011790:	ret    
   140011791:	int3   
   140011792:	int3   
   140011793:	int3   
   140011794:	int3   
   140011795:	int3   
   140011796:	int3   
   140011797:	int3   
   140011798:	int3   
   140011799:	int3   
   14001179a:	int3   
   14001179b:	int3   
   14001179c:	int3   
   14001179d:	int3   
   14001179e:	int3   
   14001179f:	int3   
   1400117a0:	mov    QWORD PTR [rsp+0x8],rcx
   1400117a5:	push   rdi
   1400117a6:	sub    rsp,0x30
   1400117aa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400117b3:	mov    QWORD PTR [rsp+0x48],rbx
   1400117b8:	mov    rbx,rdx
   1400117bb:	mov    rdi,rcx
   1400117be:	mov    QWORD PTR [rcx+0x18],0xf
   1400117c6:	mov    QWORD PTR [rcx+0x10],0x0
   1400117ce:	mov    BYTE PTR [rcx],0x0
   1400117d1:	or     r9,0xffffffffffffffff
   1400117d5:	xor    r8d,r8d
   1400117d8:	call   0x14001ef20
   1400117dd:	nop
   1400117de:	lea    rcx,[rdi+0x20]
   1400117e2:	mov    QWORD PTR [rcx+0x18],0xf
   1400117ea:	mov    QWORD PTR [rcx+0x10],0x0
   1400117f2:	mov    BYTE PTR [rcx],0x0
   1400117f5:	lea    rdx,[rbx+0x20]
   1400117f9:	or     r9,0xffffffffffffffff
   1400117fd:	xor    r8d,r8d
   140011800:	call   0x14001ef20
   140011805:	movzx  eax,BYTE PTR [rbx+0x40]
   140011809:	mov    BYTE PTR [rdi+0x40],al
   14001180c:	movzx  eax,BYTE PTR [rbx+0x41]
   140011810:	mov    BYTE PTR [rdi+0x41],al
   140011813:	mov    eax,DWORD PTR [rbx+0x44]
   140011816:	mov    DWORD PTR [rdi+0x44],eax
   140011819:	movzx  eax,BYTE PTR [rbx+0x48]
   14001181d:	mov    BYTE PTR [rdi+0x48],al
   140011820:	mov    rax,rdi
   140011823:	mov    rbx,QWORD PTR [rsp+0x48]
   140011828:	add    rsp,0x30
   14001182c:	pop    rdi
   14001182d:	ret    
   14001182e:	int3   
   14001182f:	int3   
   140011830:	mov    QWORD PTR [rsp+0x8],rcx
   140011835:	push   rdi
   140011836:	sub    rsp,0x30
   14001183a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140011843:	mov    QWORD PTR [rsp+0x48],rbx
   140011848:	mov    QWORD PTR [rsp+0x50],rbp
   14001184d:	mov    QWORD PTR [rsp+0x58],rsi
   140011852:	mov    ebp,r9d
   140011855:	mov    rsi,r8
   140011858:	mov    rdi,rcx
   14001185b:	mov    QWORD PTR [rcx+0x18],0xf
   140011863:	xor    ebx,ebx
   140011865:	mov    QWORD PTR [rcx+0x10],rbx
   140011869:	mov    BYTE PTR [rcx],bl
   14001186b:	add    rcx,0x20
   14001186f:	mov    QWORD PTR [rcx+0x18],0xf
   140011877:	mov    QWORD PTR [rcx+0x10],rbx
   14001187b:	mov    BYTE PTR [rcx],bl
   14001187d:	cmp    BYTE PTR [rdx],bl
   14001187f:	jne    0x140011886
   140011881:	mov    r8d,ebx
   140011884:	jmp    0x14001189a
   140011886:	or     r8,0xffffffffffffffff
   14001188a:	nop    WORD PTR [rax+rax*1+0x0]
   140011890:	inc    r8
   140011893:	cmp    BYTE PTR [rdx+r8*1],0x0
   140011898:	jne    0x140011890
   14001189a:	call   0x14001f070
   14001189f:	nop
   1400118a0:	mov    WORD PTR [rdi+0x40],0x0
   1400118a6:	mov    DWORD PTR [rdi+0x44],ebp
   1400118a9:	mov    BYTE PTR [rdi+0x48],0x0
   1400118ad:	test   rsi,rsi
   1400118b0:	je     0x1400118d8
   1400118b2:	cmp    BYTE PTR [rsi],0x0
   1400118b5:	je     0x1400118c9
   1400118b7:	or     rbx,0xffffffffffffffff
   1400118bb:	nop    DWORD PTR [rax+rax*1+0x0]
   1400118c0:	inc    rbx
   1400118c3:	cmp    BYTE PTR [rsi+rbx*1],0x0
   1400118c7:	jne    0x1400118c0
   1400118c9:	mov    r8,rbx
   1400118cc:	mov    rdx,rsi
   1400118cf:	mov    rcx,rdi
   1400118d2:	call   0x14001f070
   1400118d7:	nop
   1400118d8:	mov    rax,rdi
   1400118db:	mov    rbx,QWORD PTR [rsp+0x48]
   1400118e0:	mov    rbp,QWORD PTR [rsp+0x50]
   1400118e5:	mov    rsi,QWORD PTR [rsp+0x58]
   1400118ea:	add    rsp,0x30
   1400118ee:	pop    rdi
   1400118ef:	ret    
   1400118f0:	mov    QWORD PTR [rcx],rdx
   1400118f3:	mov    rax,rcx
   1400118f6:	ret    
   1400118f7:	int3   
   1400118f8:	int3   
   1400118f9:	int3   
   1400118fa:	int3   
   1400118fb:	int3   
   1400118fc:	int3   
   1400118fd:	int3   
   1400118fe:	int3   
   1400118ff:	int3   
   140011900:	mov    QWORD PTR [rsp+0x8],rcx
   140011905:	push   rdi
   140011906:	sub    rsp,0x30
   14001190a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140011913:	mov    QWORD PTR [rsp+0x48],rbx
   140011918:	mov    QWORD PTR [rsp+0x50],rsi
   14001191d:	mov    rsi,rdx
   140011920:	mov    rbx,rcx
   140011923:	xor    edi,edi
   140011925:	mov    DWORD PTR [rsp+0x58],edi
   140011929:	test   r9d,r9d
   14001192c:	je     0x14001194c
   14001192e:	lea    rax,[rip+0x2b093]        # 0x14003c9c8
   140011935:	mov    QWORD PTR [rcx+0x40],rax
   140011939:	lea    rax,[rip+0x28f08]        # 0x14003a848
   140011940:	mov    QWORD PTR [rcx+0x50],rax
   140011944:	mov    DWORD PTR [rsp+0x58],0x1
   14001194c:	call   0x140013340
   140011951:	nop
   140011952:	lea    rax,[rip+0x2b02f]        # 0x14003c988
   140011959:	mov    QWORD PTR [rbx],rax
   14001195c:	lea    rax,[rip+0x2b03d]        # 0x14003c9a0
   140011963:	mov    QWORD PTR [rbx+0x18],rax
   140011967:	mov    rax,QWORD PTR [rbx+0x40]
   14001196b:	movsxd rcx,DWORD PTR [rax+0x4]
   14001196f:	lea    rax,[rip+0x2b03a]        # 0x14003c9b0
   140011976:	mov    QWORD PTR [rcx+rbx*1+0x40],rax
   14001197b:	mov    rax,QWORD PTR [rbx+0x40]
   14001197f:	movsxd rcx,DWORD PTR [rax+0x4]
   140011983:	lea    edx,[rcx-0x10]
   140011986:	mov    DWORD PTR [rcx+rbx*1+0x3c],edx
   14001198a:	test   rsi,rsi
   14001198d:	je     0x140011993
   14001198f:	lea    rdi,[rsi+0x18]
   140011993:	mov    rdx,rdi
   140011996:	lea    rcx,[rbx+0x18]
   14001199a:	call   0x140021820
   14001199f:	nop
   1400119a0:	mov    rax,rbx
   1400119a3:	mov    rbx,QWORD PTR [rsp+0x48]
   1400119a8:	mov    rsi,QWORD PTR [rsp+0x50]
   1400119ad:	add    rsp,0x30
   1400119b1:	pop    rdi
   1400119b2:	ret    
   1400119b3:	int3   
   1400119b4:	int3   
   1400119b5:	int3   
   1400119b6:	int3   
   1400119b7:	int3   
   1400119b8:	int3   
   1400119b9:	int3   
   1400119ba:	int3   
   1400119bb:	int3   
   1400119bc:	int3   
   1400119bd:	int3   
   1400119be:	int3   
   1400119bf:	int3   
   1400119c0:	mov    QWORD PTR [rsp+0x8],rcx
   1400119c5:	push   rdi
   1400119c6:	sub    rsp,0x30
   1400119ca:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400119d3:	mov    QWORD PTR [rsp+0x48],rbx
   1400119d8:	mov    QWORD PTR [rsp+0x58],rsi
   1400119dd:	mov    rsi,rdx
   1400119e0:	mov    rbx,rcx
   1400119e3:	xor    edi,edi
   1400119e5:	mov    DWORD PTR [rsp+0x50],edi
   1400119e9:	test   r8d,r8d
   1400119ec:	je     0x140011a0c
   1400119ee:	lea    rax,[rip+0x2afd3]        # 0x14003c9c8
   1400119f5:	mov    QWORD PTR [rcx+0x40],rax
   1400119f9:	lea    rax,[rip+0x28e48]        # 0x14003a848
   140011a00:	mov    QWORD PTR [rcx+0x50],rax
   140011a04:	mov    DWORD PTR [rsp+0x50],0x1
   140011a0c:	call   0x140013340
   140011a11:	nop
   140011a12:	lea    rax,[rip+0x2af6f]        # 0x14003c988
   140011a19:	mov    QWORD PTR [rbx],rax
   140011a1c:	lea    rax,[rip+0x2af7d]        # 0x14003c9a0
   140011a23:	mov    QWORD PTR [rbx+0x18],rax
   140011a27:	mov    rax,QWORD PTR [rbx+0x40]
   140011a2b:	movsxd rcx,DWORD PTR [rax+0x4]
   140011a2f:	lea    rax,[rip+0x2af7a]        # 0x14003c9b0
   140011a36:	mov    QWORD PTR [rcx+rbx*1+0x40],rax
   140011a3b:	mov    rax,QWORD PTR [rbx+0x40]
   140011a3f:	movsxd rcx,DWORD PTR [rax+0x4]
   140011a43:	lea    edx,[rcx-0x10]
   140011a46:	mov    DWORD PTR [rcx+rbx*1+0x3c],edx
   140011a4a:	test   rsi,rsi
   140011a4d:	je     0x140011a53
   140011a4f:	lea    rdi,[rsi+0x18]
   140011a53:	mov    rdx,rdi
   140011a56:	lea    rcx,[rbx+0x18]
   140011a5a:	call   0x140021820
   140011a5f:	nop
   140011a60:	mov    rax,rbx
   140011a63:	mov    rbx,QWORD PTR [rsp+0x48]
   140011a68:	mov    rsi,QWORD PTR [rsp+0x58]
   140011a6d:	add    rsp,0x30
   140011a71:	pop    rdi
   140011a72:	ret    
   140011a73:	int3   
   140011a74:	int3   
   140011a75:	int3   
   140011a76:	int3   
   140011a77:	int3   
   140011a78:	int3   
   140011a79:	int3   
   140011a7a:	int3   
   140011a7b:	int3   
   140011a7c:	int3   
   140011a7d:	int3   
   140011a7e:	int3   
   140011a7f:	int3   
   140011a80:	mov    QWORD PTR [rsp+0x8],rcx
   140011a85:	push   rbx
   140011a86:	sub    rsp,0x30
   140011a8a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140011a93:	mov    rbx,rcx
   140011a96:	mov    DWORD PTR [rsp+0x50],0x0
   140011a9e:	test   r8d,r8d
   140011aa1:	je     0x140011ac1
   140011aa3:	lea    rax,[rip+0x2af1e]        # 0x14003c9c8
   140011aaa:	mov    QWORD PTR [rcx+0x40],rax
   140011aae:	lea    rax,[rip+0x28d93]        # 0x14003a848
   140011ab5:	mov    QWORD PTR [rcx+0x50],rax
   140011ab9:	mov    DWORD PTR [rsp+0x50],0x1
   140011ac1:	call   0x140013340
   140011ac6:	lea    rax,[rip+0x2aebb]        # 0x14003c988
   140011acd:	mov    QWORD PTR [rbx],rax
   140011ad0:	lea    rax,[rip+0x2aec9]        # 0x14003c9a0
   140011ad7:	mov    QWORD PTR [rbx+0x18],rax
   140011adb:	mov    rax,QWORD PTR [rbx+0x40]
   140011adf:	movsxd rcx,DWORD PTR [rax+0x4]
   140011ae3:	lea    rax,[rip+0x2aec6]        # 0x14003c9b0
   140011aea:	mov    QWORD PTR [rcx+rbx*1+0x40],rax
   140011aef:	mov    rax,QWORD PTR [rbx+0x40]
   140011af3:	movsxd rcx,DWORD PTR [rax+0x4]
   140011af7:	mov    DWORD PTR [rcx+rbx*1+0x3c],0x0
   140011aff:	mov    rax,rbx
   140011b02:	add    rsp,0x30
   140011b06:	pop    rbx
   140011b07:	ret    
   140011b08:	int3   
   140011b09:	int3   
   140011b0a:	int3   
   140011b0b:	int3   
   140011b0c:	int3   
   140011b0d:	int3   
   140011b0e:	int3   
   140011b0f:	int3   
   140011b10:	mov    QWORD PTR [rsp+0x8],rcx
   140011b15:	push   rdi
   140011b16:	sub    rsp,0x30
   140011b1a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140011b23:	mov    QWORD PTR [rsp+0x48],rbx
   140011b28:	mov    QWORD PTR [rsp+0x50],rsi
   140011b2d:	mov    rsi,rdx
   140011b30:	mov    rbx,rcx
   140011b33:	xor    edi,edi
   140011b35:	mov    DWORD PTR [rsp+0x58],edi
   140011b39:	test   r9d,r9d
   140011b3c:	je     0x140011b5c
   140011b3e:	lea    rax,[rip+0x2b523]        # 0x14003d068
   140011b45:	mov    QWORD PTR [rcx+0x40],rax
   140011b49:	lea    rax,[rip+0x28cf8]        # 0x14003a848
   140011b50:	mov    QWORD PTR [rcx+0x50],rax
   140011b54:	mov    DWORD PTR [rsp+0x58],0x1
   140011b5c:	call   0x140013420
   140011b61:	nop
   140011b62:	lea    rax,[rip+0x2b4bf]        # 0x14003d028
   140011b69:	mov    QWORD PTR [rbx],rax
   140011b6c:	lea    rax,[rip+0x2b4cd]        # 0x14003d040
   140011b73:	mov    QWORD PTR [rbx+0x18],rax
   140011b77:	mov    rax,QWORD PTR [rbx+0x40]
   140011b7b:	movsxd rcx,DWORD PTR [rax+0x4]
   140011b7f:	lea    rax,[rip+0x2b4ca]        # 0x14003d050
   140011b86:	mov    QWORD PTR [rcx+rbx*1+0x40],rax
   140011b8b:	mov    rax,QWORD PTR [rbx+0x40]
   140011b8f:	movsxd rcx,DWORD PTR [rax+0x4]
   140011b93:	lea    edx,[rcx-0x10]
   140011b96:	mov    DWORD PTR [rcx+rbx*1+0x3c],edx
   140011b9a:	test   rsi,rsi
   140011b9d:	je     0x140011ba3
   140011b9f:	lea    rdi,[rsi+0x18]
   140011ba3:	mov    rdx,rdi
   140011ba6:	lea    rcx,[rbx+0x18]
   140011baa:	call   0x140021820
   140011baf:	nop
   140011bb0:	mov    rax,rbx
   140011bb3:	mov    rbx,QWORD PTR [rsp+0x48]
   140011bb8:	mov    rsi,QWORD PTR [rsp+0x50]
   140011bbd:	add    rsp,0x30
   140011bc1:	pop    rdi
   140011bc2:	ret    
   140011bc3:	int3   
   140011bc4:	int3   
   140011bc5:	int3   
   140011bc6:	int3   
   140011bc7:	int3   
   140011bc8:	int3   
   140011bc9:	int3   
   140011bca:	int3   
   140011bcb:	int3   
   140011bcc:	int3   
   140011bcd:	int3   
   140011bce:	int3   
   140011bcf:	int3   
   140011bd0:	mov    QWORD PTR [rsp+0x8],rcx
   140011bd5:	push   rdi
   140011bd6:	sub    rsp,0x30
   140011bda:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140011be3:	mov    QWORD PTR [rsp+0x48],rbx
   140011be8:	mov    QWORD PTR [rsp+0x58],rsi
   140011bed:	mov    rsi,rdx
   140011bf0:	mov    rbx,rcx
   140011bf3:	xor    edi,edi
   140011bf5:	mov    DWORD PTR [rsp+0x50],edi
   140011bf9:	test   r8d,r8d
   140011bfc:	je     0x140011c1c
   140011bfe:	lea    rax,[rip+0x2b463]        # 0x14003d068
   140011c05:	mov    QWORD PTR [rcx+0x40],rax
   140011c09:	lea    rax,[rip+0x28c38]        # 0x14003a848
   140011c10:	mov    QWORD PTR [rcx+0x50],rax
   140011c14:	mov    DWORD PTR [rsp+0x50],0x1
   140011c1c:	call   0x140013420
   140011c21:	nop
   140011c22:	lea    rax,[rip+0x2b3ff]        # 0x14003d028
   140011c29:	mov    QWORD PTR [rbx],rax
   140011c2c:	lea    rax,[rip+0x2b40d]        # 0x14003d040
   140011c33:	mov    QWORD PTR [rbx+0x18],rax
   140011c37:	mov    rax,QWORD PTR [rbx+0x40]
   140011c3b:	movsxd rcx,DWORD PTR [rax+0x4]
   140011c3f:	lea    rax,[rip+0x2b40a]        # 0x14003d050
   140011c46:	mov    QWORD PTR [rcx+rbx*1+0x40],rax
   140011c4b:	mov    rax,QWORD PTR [rbx+0x40]
   140011c4f:	movsxd rcx,DWORD PTR [rax+0x4]
   140011c53:	lea    edx,[rcx-0x10]
   140011c56:	mov    DWORD PTR [rcx+rbx*1+0x3c],edx
   140011c5a:	test   rsi,rsi
   140011c5d:	je     0x140011c63
   140011c5f:	lea    rdi,[rsi+0x18]
   140011c63:	mov    rdx,rdi
   140011c66:	lea    rcx,[rbx+0x18]
   140011c6a:	call   0x140021820
   140011c6f:	nop
   140011c70:	mov    rax,rbx
   140011c73:	mov    rbx,QWORD PTR [rsp+0x48]
   140011c78:	mov    rsi,QWORD PTR [rsp+0x58]
   140011c7d:	add    rsp,0x30
   140011c81:	pop    rdi
   140011c82:	ret    
   140011c83:	int3   
   140011c84:	int3   
   140011c85:	int3   
   140011c86:	int3   
   140011c87:	int3   
   140011c88:	int3   
   140011c89:	int3   
   140011c8a:	int3   
   140011c8b:	int3   
   140011c8c:	int3   
   140011c8d:	int3   
   140011c8e:	int3   
   140011c8f:	int3   
   140011c90:	mov    QWORD PTR [rsp+0x8],rcx
   140011c95:	push   rbx
   140011c96:	sub    rsp,0x30
   140011c9a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140011ca3:	mov    rbx,rcx
   140011ca6:	mov    DWORD PTR [rsp+0x50],0x0
   140011cae:	test   r8d,r8d
   140011cb1:	je     0x140011cd1
   140011cb3:	lea    rax,[rip+0x2b3ae]        # 0x14003d068
   140011cba:	mov    QWORD PTR [rcx+0x40],rax
   140011cbe:	lea    rax,[rip+0x28b83]        # 0x14003a848
   140011cc5:	mov    QWORD PTR [rcx+0x50],rax
   140011cc9:	mov    DWORD PTR [rsp+0x50],0x1
   140011cd1:	call   0x140013420
   140011cd6:	lea    rax,[rip+0x2b34b]        # 0x14003d028
   140011cdd:	mov    QWORD PTR [rbx],rax
   140011ce0:	lea    rax,[rip+0x2b359]        # 0x14003d040
   140011ce7:	mov    QWORD PTR [rbx+0x18],rax
   140011ceb:	mov    rax,QWORD PTR [rbx+0x40]
   140011cef:	movsxd rcx,DWORD PTR [rax+0x4]
   140011cf3:	lea    rax,[rip+0x2b356]        # 0x14003d050
   140011cfa:	mov    QWORD PTR [rcx+rbx*1+0x40],rax
   140011cff:	mov    rax,QWORD PTR [rbx+0x40]
   140011d03:	movsxd rcx,DWORD PTR [rax+0x4]
   140011d07:	mov    DWORD PTR [rcx+rbx*1+0x3c],0x0
   140011d0f:	mov    rax,rbx
   140011d12:	add    rsp,0x30
   140011d16:	pop    rbx
   140011d17:	ret    
   140011d18:	int3   
   140011d19:	int3   
   140011d1a:	int3   
   140011d1b:	int3   
   140011d1c:	int3   
   140011d1d:	int3   
   140011d1e:	int3   
   140011d1f:	int3   
   140011d20:	mov    QWORD PTR [rsp+0x8],rcx
   140011d25:	push   rdi
   140011d26:	sub    rsp,0x30
   140011d2a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140011d33:	mov    QWORD PTR [rsp+0x48],rbx
   140011d38:	mov    QWORD PTR [rsp+0x50],rsi
   140011d3d:	mov    rsi,rdx
   140011d40:	mov    rbx,rcx
   140011d43:	xor    edi,edi
   140011d45:	mov    DWORD PTR [rsp+0x58],edi
   140011d49:	test   r9d,r9d
   140011d4c:	je     0x140011d6c
   140011d4e:	lea    rax,[rip+0x2b8b3]        # 0x14003d608
   140011d55:	mov    QWORD PTR [rcx+0x40],rax
   140011d59:	lea    rax,[rip+0x28ae8]        # 0x14003a848
   140011d60:	mov    QWORD PTR [rcx+0x50],rax
   140011d64:	mov    DWORD PTR [rsp+0x58],0x1
   140011d6c:	call   0x140013500
   140011d71:	nop
   140011d72:	lea    rax,[rip+0x2b84f]        # 0x14003d5c8
   140011d79:	mov    QWORD PTR [rbx],rax
   140011d7c:	lea    rax,[rip+0x2b85d]        # 0x14003d5e0
   140011d83:	mov    QWORD PTR [rbx+0x18],rax
   140011d87:	mov    rax,QWORD PTR [rbx+0x40]
   140011d8b:	movsxd rcx,DWORD PTR [rax+0x4]
   140011d8f:	lea    rax,[rip+0x2b85a]        # 0x14003d5f0
   140011d96:	mov    QWORD PTR [rcx+rbx*1+0x40],rax
   140011d9b:	mov    rax,QWORD PTR [rbx+0x40]
   140011d9f:	movsxd rcx,DWORD PTR [rax+0x4]
   140011da3:	lea    edx,[rcx-0x10]
   140011da6:	mov    DWORD PTR [rcx+rbx*1+0x3c],edx
   140011daa:	test   rsi,rsi
   140011dad:	je     0x140011db3
   140011daf:	lea    rdi,[rsi+0x18]
   140011db3:	mov    rdx,rdi
   140011db6:	lea    rcx,[rbx+0x18]
   140011dba:	call   0x140021820
   140011dbf:	nop
   140011dc0:	mov    rax,rbx
   140011dc3:	mov    rbx,QWORD PTR [rsp+0x48]
   140011dc8:	mov    rsi,QWORD PTR [rsp+0x50]
   140011dcd:	add    rsp,0x30
   140011dd1:	pop    rdi
   140011dd2:	ret    
   140011dd3:	int3   
   140011dd4:	int3   
   140011dd5:	int3   
   140011dd6:	int3   
   140011dd7:	int3   
   140011dd8:	int3   
   140011dd9:	int3   
   140011dda:	int3   
   140011ddb:	int3   
   140011ddc:	int3   
   140011ddd:	int3   
   140011dde:	int3   
   140011ddf:	int3   
   140011de0:	mov    QWORD PTR [rsp+0x8],rcx
   140011de5:	push   rdi
   140011de6:	sub    rsp,0x30
   140011dea:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140011df3:	mov    QWORD PTR [rsp+0x48],rbx
   140011df8:	mov    QWORD PTR [rsp+0x58],rsi
   140011dfd:	mov    rsi,rdx
   140011e00:	mov    rbx,rcx
   140011e03:	xor    edi,edi
   140011e05:	mov    DWORD PTR [rsp+0x50],edi
   140011e09:	test   r8d,r8d
   140011e0c:	je     0x140011e2c
   140011e0e:	lea    rax,[rip+0x2b7f3]        # 0x14003d608
   140011e15:	mov    QWORD PTR [rcx+0x40],rax
   140011e19:	lea    rax,[rip+0x28a28]        # 0x14003a848
   140011e20:	mov    QWORD PTR [rcx+0x50],rax
   140011e24:	mov    DWORD PTR [rsp+0x50],0x1
   140011e2c:	call   0x140013500
   140011e31:	nop
   140011e32:	lea    rax,[rip+0x2b78f]        # 0x14003d5c8
   140011e39:	mov    QWORD PTR [rbx],rax
   140011e3c:	lea    rax,[rip+0x2b79d]        # 0x14003d5e0
   140011e43:	mov    QWORD PTR [rbx+0x18],rax
   140011e47:	mov    rax,QWORD PTR [rbx+0x40]
   140011e4b:	movsxd rcx,DWORD PTR [rax+0x4]
   140011e4f:	lea    rax,[rip+0x2b79a]        # 0x14003d5f0
   140011e56:	mov    QWORD PTR [rcx+rbx*1+0x40],rax
   140011e5b:	mov    rax,QWORD PTR [rbx+0x40]
   140011e5f:	movsxd rcx,DWORD PTR [rax+0x4]
   140011e63:	lea    edx,[rcx-0x10]
   140011e66:	mov    DWORD PTR [rcx+rbx*1+0x3c],edx
   140011e6a:	test   rsi,rsi
   140011e6d:	je     0x140011e73
   140011e6f:	lea    rdi,[rsi+0x18]
   140011e73:	mov    rdx,rdi
   140011e76:	lea    rcx,[rbx+0x18]
   140011e7a:	call   0x140021820
   140011e7f:	nop
   140011e80:	mov    rax,rbx
   140011e83:	mov    rbx,QWORD PTR [rsp+0x48]
   140011e88:	mov    rsi,QWORD PTR [rsp+0x58]
   140011e8d:	add    rsp,0x30
   140011e91:	pop    rdi
   140011e92:	ret    
   140011e93:	int3   
   140011e94:	int3   
   140011e95:	int3   
   140011e96:	int3   
   140011e97:	int3   
   140011e98:	int3   
   140011e99:	int3   
   140011e9a:	int3   
   140011e9b:	int3   
   140011e9c:	int3   
   140011e9d:	int3   
   140011e9e:	int3   
   140011e9f:	int3   
   140011ea0:	mov    QWORD PTR [rsp+0x8],rcx
   140011ea5:	push   rbx
   140011ea6:	sub    rsp,0x30
   140011eaa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140011eb3:	mov    rbx,rcx
   140011eb6:	mov    DWORD PTR [rsp+0x50],0x0
   140011ebe:	test   r8d,r8d
   140011ec1:	je     0x140011ee1
   140011ec3:	lea    rax,[rip+0x2b73e]        # 0x14003d608
   140011eca:	mov    QWORD PTR [rcx+0x40],rax
   140011ece:	lea    rax,[rip+0x28973]        # 0x14003a848
   140011ed5:	mov    QWORD PTR [rcx+0x50],rax
   140011ed9:	mov    DWORD PTR [rsp+0x50],0x1
   140011ee1:	call   0x140013500
   140011ee6:	lea    rax,[rip+0x2b6db]        # 0x14003d5c8
   140011eed:	mov    QWORD PTR [rbx],rax
   140011ef0:	lea    rax,[rip+0x2b6e9]        # 0x14003d5e0
   140011ef7:	mov    QWORD PTR [rbx+0x18],rax
   140011efb:	mov    rax,QWORD PTR [rbx+0x40]
   140011eff:	movsxd rcx,DWORD PTR [rax+0x4]
   140011f03:	lea    rax,[rip+0x2b6e6]        # 0x14003d5f0
   140011f0a:	mov    QWORD PTR [rcx+rbx*1+0x40],rax
   140011f0f:	mov    rax,QWORD PTR [rbx+0x40]
   140011f13:	movsxd rcx,DWORD PTR [rax+0x4]
   140011f17:	mov    DWORD PTR [rcx+rbx*1+0x3c],0x0
   140011f1f:	mov    rax,rbx
   140011f22:	add    rsp,0x30
   140011f26:	pop    rbx
   140011f27:	ret    
   140011f28:	int3   
   140011f29:	int3   
   140011f2a:	int3   
   140011f2b:	int3   
   140011f2c:	int3   
   140011f2d:	int3   
   140011f2e:	int3   
   140011f2f:	int3   
   140011f30:	mov    QWORD PTR [rsp+0x8],rcx
   140011f35:	push   rdi
   140011f36:	sub    rsp,0x30
   140011f3a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140011f43:	mov    QWORD PTR [rsp+0x48],rbx
   140011f48:	mov    QWORD PTR [rsp+0x50],rsi
   140011f4d:	mov    rsi,rdx
   140011f50:	mov    rbx,rcx
   140011f53:	xor    edi,edi
   140011f55:	mov    DWORD PTR [rsp+0x58],edi
   140011f59:	test   r9d,r9d
   140011f5c:	je     0x140011f7c
   140011f5e:	lea    rax,[rip+0x2b71b]        # 0x14003d680
   140011f65:	mov    QWORD PTR [rcx+0x50],rax
   140011f69:	lea    rax,[rip+0x288d8]        # 0x14003a848
   140011f70:	mov    QWORD PTR [rcx+0x60],rax
   140011f74:	mov    DWORD PTR [rsp+0x58],0x1
   140011f7c:	call   0x1400135e0
   140011f81:	nop
   140011f82:	lea    rax,[rip+0x2b6b7]        # 0x14003d640
   140011f89:	mov    QWORD PTR [rbx],rax
   140011f8c:	lea    rax,[rip+0x2b6c5]        # 0x14003d658
   140011f93:	mov    QWORD PTR [rbx+0x28],rax
   140011f97:	mov    rax,QWORD PTR [rbx+0x50]
   140011f9b:	movsxd rcx,DWORD PTR [rax+0x4]
   140011f9f:	lea    rax,[rip+0x2b6c2]        # 0x14003d668
   140011fa6:	mov    QWORD PTR [rcx+rbx*1+0x50],rax
   140011fab:	mov    rax,QWORD PTR [rbx+0x50]
   140011faf:	movsxd rcx,DWORD PTR [rax+0x4]
   140011fb3:	lea    edx,[rcx-0x10]
   140011fb6:	mov    DWORD PTR [rcx+rbx*1+0x4c],edx
   140011fba:	test   rsi,rsi
   140011fbd:	je     0x140011fc3
   140011fbf:	lea    rdi,[rsi+0x28]
   140011fc3:	mov    rdx,rdi
   140011fc6:	lea    rcx,[rbx+0x28]
   140011fca:	call   0x140021820
   140011fcf:	nop
   140011fd0:	mov    rax,rbx
   140011fd3:	mov    rbx,QWORD PTR [rsp+0x48]
   140011fd8:	mov    rsi,QWORD PTR [rsp+0x50]
   140011fdd:	add    rsp,0x30
   140011fe1:	pop    rdi
   140011fe2:	ret    
   140011fe3:	int3   
   140011fe4:	int3   
   140011fe5:	int3   
   140011fe6:	int3   
   140011fe7:	int3   
   140011fe8:	int3   
   140011fe9:	int3   
   140011fea:	int3   
   140011feb:	int3   
   140011fec:	int3   
   140011fed:	int3   
   140011fee:	int3   
   140011fef:	int3   
   140011ff0:	mov    QWORD PTR [rsp+0x8],rcx
   140011ff5:	push   rdi
   140011ff6:	sub    rsp,0x30
   140011ffa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140012003:	mov    QWORD PTR [rsp+0x48],rbx
   140012008:	mov    QWORD PTR [rsp+0x58],rsi
   14001200d:	mov    rsi,rdx
   140012010:	mov    rbx,rcx
   140012013:	xor    edi,edi
   140012015:	mov    DWORD PTR [rsp+0x50],edi
   140012019:	test   r8d,r8d
   14001201c:	je     0x14001203c
   14001201e:	lea    rax,[rip+0x2b65b]        # 0x14003d680
   140012025:	mov    QWORD PTR [rcx+0x50],rax
   140012029:	lea    rax,[rip+0x28818]        # 0x14003a848
   140012030:	mov    QWORD PTR [rcx+0x60],rax
   140012034:	mov    DWORD PTR [rsp+0x50],0x1
   14001203c:	call   0x1400135e0
   140012041:	nop
   140012042:	lea    rax,[rip+0x2b5f7]        # 0x14003d640
   140012049:	mov    QWORD PTR [rbx],rax
   14001204c:	lea    rax,[rip+0x2b605]        # 0x14003d658
   140012053:	mov    QWORD PTR [rbx+0x28],rax
   140012057:	mov    rax,QWORD PTR [rbx+0x50]
   14001205b:	movsxd rcx,DWORD PTR [rax+0x4]
   14001205f:	lea    rax,[rip+0x2b602]        # 0x14003d668
   140012066:	mov    QWORD PTR [rcx+rbx*1+0x50],rax
   14001206b:	mov    rax,QWORD PTR [rbx+0x50]
   14001206f:	movsxd rcx,DWORD PTR [rax+0x4]
   140012073:	lea    edx,[rcx-0x10]
   140012076:	mov    DWORD PTR [rcx+rbx*1+0x4c],edx
   14001207a:	test   rsi,rsi
   14001207d:	je     0x140012083
   14001207f:	lea    rdi,[rsi+0x28]
   140012083:	mov    rdx,rdi
   140012086:	lea    rcx,[rbx+0x28]
   14001208a:	call   0x140021820
   14001208f:	nop
   140012090:	mov    rax,rbx
   140012093:	mov    rbx,QWORD PTR [rsp+0x48]
   140012098:	mov    rsi,QWORD PTR [rsp+0x58]
   14001209d:	add    rsp,0x30
   1400120a1:	pop    rdi
   1400120a2:	ret    
   1400120a3:	int3   
   1400120a4:	int3   
   1400120a5:	int3   
   1400120a6:	int3   
   1400120a7:	int3   
   1400120a8:	int3   
   1400120a9:	int3   
   1400120aa:	int3   
   1400120ab:	int3   
   1400120ac:	int3   
   1400120ad:	int3   
   1400120ae:	int3   
   1400120af:	int3   
   1400120b0:	mov    QWORD PTR [rsp+0x8],rcx
   1400120b5:	push   rbx
   1400120b6:	sub    rsp,0x30
   1400120ba:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400120c3:	mov    rbx,rcx
   1400120c6:	mov    DWORD PTR [rsp+0x50],0x0
   1400120ce:	test   r8d,r8d
   1400120d1:	je     0x1400120f1
   1400120d3:	lea    rax,[rip+0x2b5a6]        # 0x14003d680
   1400120da:	mov    QWORD PTR [rcx+0x50],rax
   1400120de:	lea    rax,[rip+0x28763]        # 0x14003a848
   1400120e5:	mov    QWORD PTR [rcx+0x60],rax
   1400120e9:	mov    DWORD PTR [rsp+0x50],0x1
   1400120f1:	call   0x1400135e0
   1400120f6:	lea    rax,[rip+0x2b543]        # 0x14003d640
   1400120fd:	mov    QWORD PTR [rbx],rax
   140012100:	lea    rax,[rip+0x2b551]        # 0x14003d658
   140012107:	mov    QWORD PTR [rbx+0x28],rax
   14001210b:	mov    rax,QWORD PTR [rbx+0x50]
   14001210f:	movsxd rcx,DWORD PTR [rax+0x4]
   140012113:	lea    rax,[rip+0x2b54e]        # 0x14003d668
   14001211a:	mov    QWORD PTR [rcx+rbx*1+0x50],rax
   14001211f:	mov    rax,QWORD PTR [rbx+0x50]
   140012123:	movsxd rcx,DWORD PTR [rax+0x4]
   140012127:	mov    DWORD PTR [rcx+rbx*1+0x4c],0x0
   14001212f:	mov    rax,rbx
   140012132:	add    rsp,0x30
   140012136:	pop    rbx
   140012137:	ret    
   140012138:	int3   
   140012139:	int3   
   14001213a:	int3   
   14001213b:	int3   
   14001213c:	int3   
   14001213d:	int3   
   14001213e:	int3   
   14001213f:	int3   
   140012140:	mov    QWORD PTR [rsp+0x8],rcx
   140012145:	push   rdi
   140012146:	sub    rsp,0x30
   14001214a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140012153:	mov    QWORD PTR [rsp+0x48],rbx
   140012158:	mov    QWORD PTR [rsp+0x50],rsi
   14001215d:	mov    rsi,rdx
   140012160:	mov    rbx,rcx
   140012163:	xor    edi,edi
   140012165:	mov    DWORD PTR [rsp+0x58],edi
   140012169:	test   r9d,r9d
   14001216c:	je     0x14001218c
   14001216e:	lea    rax,[rip+0x2d76b]        # 0x14003f8e0
   140012175:	mov    QWORD PTR [rcx+0x50],rax
   140012179:	lea    rax,[rip+0x286c8]        # 0x14003a848
   140012180:	mov    QWORD PTR [rcx+0x60],rax
   140012184:	mov    DWORD PTR [rsp+0x58],0x1
   14001218c:	call   0x1400136f0
   140012191:	nop
   140012192:	lea    rax,[rip+0x2d707]        # 0x14003f8a0
   140012199:	mov    QWORD PTR [rbx],rax
   14001219c:	lea    rax,[rip+0x2d715]        # 0x14003f8b8
   1400121a3:	mov    QWORD PTR [rbx+0x28],rax
   1400121a7:	mov    rax,QWORD PTR [rbx+0x50]
   1400121ab:	movsxd rcx,DWORD PTR [rax+0x4]
   1400121af:	lea    rax,[rip+0x2d712]        # 0x14003f8c8
   1400121b6:	mov    QWORD PTR [rcx+rbx*1+0x50],rax
   1400121bb:	mov    rax,QWORD PTR [rbx+0x50]
   1400121bf:	movsxd rcx,DWORD PTR [rax+0x4]
   1400121c3:	lea    edx,[rcx-0x10]
   1400121c6:	mov    DWORD PTR [rcx+rbx*1+0x4c],edx
   1400121ca:	test   rsi,rsi
   1400121cd:	je     0x1400121d3
   1400121cf:	lea    rdi,[rsi+0x28]
   1400121d3:	mov    rdx,rdi
   1400121d6:	lea    rcx,[rbx+0x28]
   1400121da:	call   0x140021820
   1400121df:	nop
   1400121e0:	mov    rax,rbx
   1400121e3:	mov    rbx,QWORD PTR [rsp+0x48]
   1400121e8:	mov    rsi,QWORD PTR [rsp+0x50]
   1400121ed:	add    rsp,0x30
   1400121f1:	pop    rdi
   1400121f2:	ret    
   1400121f3:	int3   
   1400121f4:	int3   
   1400121f5:	int3   
   1400121f6:	int3   
   1400121f7:	int3   
   1400121f8:	int3   
   1400121f9:	int3   
   1400121fa:	int3   
   1400121fb:	int3   
   1400121fc:	int3   
   1400121fd:	int3   
   1400121fe:	int3   
   1400121ff:	int3   
   140012200:	mov    QWORD PTR [rsp+0x8],rcx
   140012205:	push   rdi
   140012206:	sub    rsp,0x30
   14001220a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140012213:	mov    QWORD PTR [rsp+0x48],rbx
   140012218:	mov    QWORD PTR [rsp+0x58],rsi
   14001221d:	mov    rsi,rdx
   140012220:	mov    rbx,rcx
   140012223:	xor    edi,edi
   140012225:	mov    DWORD PTR [rsp+0x50],edi
   140012229:	test   r8d,r8d
   14001222c:	je     0x14001224c
   14001222e:	lea    rax,[rip+0x2d6ab]        # 0x14003f8e0
   140012235:	mov    QWORD PTR [rcx+0x50],rax
   140012239:	lea    rax,[rip+0x28608]        # 0x14003a848
   140012240:	mov    QWORD PTR [rcx+0x60],rax
   140012244:	mov    DWORD PTR [rsp+0x50],0x1
   14001224c:	call   0x1400136f0
   140012251:	nop
   140012252:	lea    rax,[rip+0x2d647]        # 0x14003f8a0
   140012259:	mov    QWORD PTR [rbx],rax
   14001225c:	lea    rax,[rip+0x2d655]        # 0x14003f8b8
   140012263:	mov    QWORD PTR [rbx+0x28],rax
   140012267:	mov    rax,QWORD PTR [rbx+0x50]
   14001226b:	movsxd rcx,DWORD PTR [rax+0x4]
   14001226f:	lea    rax,[rip+0x2d652]        # 0x14003f8c8
   140012276:	mov    QWORD PTR [rcx+rbx*1+0x50],rax
   14001227b:	mov    rax,QWORD PTR [rbx+0x50]
   14001227f:	movsxd rcx,DWORD PTR [rax+0x4]
   140012283:	lea    edx,[rcx-0x10]
   140012286:	mov    DWORD PTR [rcx+rbx*1+0x4c],edx
   14001228a:	test   rsi,rsi
   14001228d:	je     0x140012293
   14001228f:	lea    rdi,[rsi+0x28]
   140012293:	mov    rdx,rdi
   140012296:	lea    rcx,[rbx+0x28]
   14001229a:	call   0x140021820
   14001229f:	nop
   1400122a0:	mov    rax,rbx
   1400122a3:	mov    rbx,QWORD PTR [rsp+0x48]
   1400122a8:	mov    rsi,QWORD PTR [rsp+0x58]
   1400122ad:	add    rsp,0x30
   1400122b1:	pop    rdi
   1400122b2:	ret    
   1400122b3:	int3   
   1400122b4:	int3   
   1400122b5:	int3   
   1400122b6:	int3   
   1400122b7:	int3   
   1400122b8:	int3   
   1400122b9:	int3   
   1400122ba:	int3   
   1400122bb:	int3   
   1400122bc:	int3   
   1400122bd:	int3   
   1400122be:	int3   
   1400122bf:	int3   
   1400122c0:	mov    QWORD PTR [rsp+0x8],rcx
   1400122c5:	push   rbx
   1400122c6:	sub    rsp,0x30
   1400122ca:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400122d3:	mov    rbx,rcx
   1400122d6:	mov    DWORD PTR [rsp+0x50],0x0
   1400122de:	test   r8d,r8d
   1400122e1:	je     0x140012301
   1400122e3:	lea    rax,[rip+0x2d5f6]        # 0x14003f8e0
   1400122ea:	mov    QWORD PTR [rcx+0x50],rax
   1400122ee:	lea    rax,[rip+0x28553]        # 0x14003a848
   1400122f5:	mov    QWORD PTR [rcx+0x60],rax
   1400122f9:	mov    DWORD PTR [rsp+0x50],0x1
   140012301:	call   0x1400136f0
   140012306:	lea    rax,[rip+0x2d593]        # 0x14003f8a0
   14001230d:	mov    QWORD PTR [rbx],rax
   140012310:	lea    rax,[rip+0x2d5a1]        # 0x14003f8b8
   140012317:	mov    QWORD PTR [rbx+0x28],rax
   14001231b:	mov    rax,QWORD PTR [rbx+0x50]
   14001231f:	movsxd rcx,DWORD PTR [rax+0x4]
   140012323:	lea    rax,[rip+0x2d59e]        # 0x14003f8c8
   14001232a:	mov    QWORD PTR [rcx+rbx*1+0x50],rax
   14001232f:	mov    rax,QWORD PTR [rbx+0x50]
   140012333:	movsxd rcx,DWORD PTR [rax+0x4]
   140012337:	mov    DWORD PTR [rcx+rbx*1+0x4c],0x0
   14001233f:	mov    rax,rbx
   140012342:	add    rsp,0x30
   140012346:	pop    rbx
   140012347:	ret    
   140012348:	int3   
   140012349:	int3   
   14001234a:	int3   
   14001234b:	int3   
   14001234c:	int3   
   14001234d:	int3   
   14001234e:	int3   
   14001234f:	int3   
   140012350:	mov    QWORD PTR [rsp+0x8],rcx
   140012355:	push   rdi
   140012356:	sub    rsp,0x30
   14001235a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140012363:	mov    QWORD PTR [rsp+0x48],rbx
   140012368:	mov    QWORD PTR [rsp+0x50],rsi
   14001236d:	mov    rsi,rdx
   140012370:	mov    rbx,rcx
   140012373:	xor    edi,edi
   140012375:	mov    DWORD PTR [rsp+0x58],edi
   140012379:	test   r9d,r9d
   14001237c:	je     0x14001239c
   14001237e:	lea    rax,[rip+0x2ac6b]        # 0x14003cff0
   140012385:	mov    QWORD PTR [rcx+0x40],rax
   140012389:	lea    rax,[rip+0x284b8]        # 0x14003a848
   140012390:	mov    QWORD PTR [rcx+0x50],rax
   140012394:	mov    DWORD PTR [rsp+0x58],0x1
   14001239c:	call   0x1400137f0
   1400123a1:	nop
   1400123a2:	lea    rax,[rip+0x2ac07]        # 0x14003cfb0
   1400123a9:	mov    QWORD PTR [rbx],rax
   1400123ac:	lea    rax,[rip+0x2ac15]        # 0x14003cfc8
   1400123b3:	mov    QWORD PTR [rbx+0x18],rax
   1400123b7:	mov    rax,QWORD PTR [rbx+0x40]
   1400123bb:	movsxd rcx,DWORD PTR [rax+0x4]
   1400123bf:	lea    rax,[rip+0x2ac12]        # 0x14003cfd8
   1400123c6:	mov    QWORD PTR [rcx+rbx*1+0x40],rax
   1400123cb:	mov    rax,QWORD PTR [rbx+0x40]
   1400123cf:	movsxd rcx,DWORD PTR [rax+0x4]
   1400123d3:	lea    edx,[rcx-0x10]
   1400123d6:	mov    DWORD PTR [rcx+rbx*1+0x3c],edx
   1400123da:	test   rsi,rsi
   1400123dd:	je     0x1400123e3
   1400123df:	lea    rdi,[rsi+0x18]
   1400123e3:	mov    rdx,rdi
   1400123e6:	lea    rcx,[rbx+0x18]
   1400123ea:	call   0x140021820
   1400123ef:	nop
   1400123f0:	mov    rax,rbx
   1400123f3:	mov    rbx,QWORD PTR [rsp+0x48]
   1400123f8:	mov    rsi,QWORD PTR [rsp+0x50]
   1400123fd:	add    rsp,0x30
   140012401:	pop    rdi
   140012402:	ret    
   140012403:	int3   
   140012404:	int3   
   140012405:	int3   
   140012406:	int3   
   140012407:	int3   
   140012408:	int3   
   140012409:	int3   
   14001240a:	int3   
   14001240b:	int3   
   14001240c:	int3   
   14001240d:	int3   
   14001240e:	int3   
   14001240f:	int3   
   140012410:	mov    QWORD PTR [rsp+0x8],rcx
   140012415:	push   rdi
   140012416:	sub    rsp,0x30
   14001241a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140012423:	mov    QWORD PTR [rsp+0x48],rbx
   140012428:	mov    QWORD PTR [rsp+0x58],rsi
   14001242d:	mov    rsi,rdx
   140012430:	mov    rbx,rcx
   140012433:	xor    edi,edi
   140012435:	mov    DWORD PTR [rsp+0x50],edi
   140012439:	test   r8d,r8d
   14001243c:	je     0x14001245c
   14001243e:	lea    rax,[rip+0x2abab]        # 0x14003cff0
   140012445:	mov    QWORD PTR [rcx+0x40],rax
   140012449:	lea    rax,[rip+0x283f8]        # 0x14003a848
   140012450:	mov    QWORD PTR [rcx+0x50],rax
   140012454:	mov    DWORD PTR [rsp+0x50],0x1
   14001245c:	call   0x1400137f0
   140012461:	nop
   140012462:	lea    rax,[rip+0x2ab47]        # 0x14003cfb0
   140012469:	mov    QWORD PTR [rbx],rax
   14001246c:	lea    rax,[rip+0x2ab55]        # 0x14003cfc8
   140012473:	mov    QWORD PTR [rbx+0x18],rax
   140012477:	mov    rax,QWORD PTR [rbx+0x40]
   14001247b:	movsxd rcx,DWORD PTR [rax+0x4]
   14001247f:	lea    rax,[rip+0x2ab52]        # 0x14003cfd8
   140012486:	mov    QWORD PTR [rcx+rbx*1+0x40],rax
   14001248b:	mov    rax,QWORD PTR [rbx+0x40]
   14001248f:	movsxd rcx,DWORD PTR [rax+0x4]
   140012493:	lea    edx,[rcx-0x10]
   140012496:	mov    DWORD PTR [rcx+rbx*1+0x3c],edx
   14001249a:	test   rsi,rsi
   14001249d:	je     0x1400124a3
   14001249f:	lea    rdi,[rsi+0x18]
   1400124a3:	mov    rdx,rdi
   1400124a6:	lea    rcx,[rbx+0x18]
   1400124aa:	call   0x140021820
   1400124af:	nop
   1400124b0:	mov    rax,rbx
   1400124b3:	mov    rbx,QWORD PTR [rsp+0x48]
   1400124b8:	mov    rsi,QWORD PTR [rsp+0x58]
   1400124bd:	add    rsp,0x30
   1400124c1:	pop    rdi
   1400124c2:	ret    
   1400124c3:	int3   
   1400124c4:	int3   
   1400124c5:	int3   
   1400124c6:	int3   
   1400124c7:	int3   
   1400124c8:	int3   
   1400124c9:	int3   
   1400124ca:	int3   
   1400124cb:	int3   
   1400124cc:	int3   
   1400124cd:	int3   
   1400124ce:	int3   
   1400124cf:	int3   
   1400124d0:	mov    QWORD PTR [rsp+0x8],rcx
   1400124d5:	push   rbx
   1400124d6:	sub    rsp,0x30
   1400124da:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400124e3:	mov    rbx,rcx
   1400124e6:	mov    DWORD PTR [rsp+0x50],0x0
   1400124ee:	test   r8d,r8d
   1400124f1:	je     0x140012511
   1400124f3:	lea    rax,[rip+0x2aaf6]        # 0x14003cff0
   1400124fa:	mov    QWORD PTR [rcx+0x40],rax
   1400124fe:	lea    rax,[rip+0x28343]        # 0x14003a848
   140012505:	mov    QWORD PTR [rcx+0x50],rax
   140012509:	mov    DWORD PTR [rsp+0x50],0x1
   140012511:	call   0x1400137f0
   140012516:	lea    rax,[rip+0x2aa93]        # 0x14003cfb0
   14001251d:	mov    QWORD PTR [rbx],rax
   140012520:	lea    rax,[rip+0x2aaa1]        # 0x14003cfc8
   140012527:	mov    QWORD PTR [rbx+0x18],rax
   14001252b:	mov    rax,QWORD PTR [rbx+0x40]
   14001252f:	movsxd rcx,DWORD PTR [rax+0x4]
   140012533:	lea    rax,[rip+0x2aa9e]        # 0x14003cfd8
   14001253a:	mov    QWORD PTR [rcx+rbx*1+0x40],rax
   14001253f:	mov    rax,QWORD PTR [rbx+0x40]
   140012543:	movsxd rcx,DWORD PTR [rax+0x4]
   140012547:	mov    DWORD PTR [rcx+rbx*1+0x3c],0x0
   14001254f:	mov    rax,rbx
   140012552:	add    rsp,0x30
   140012556:	pop    rbx
   140012557:	ret    
   140012558:	int3   
   140012559:	int3   
   14001255a:	int3   
   14001255b:	int3   
   14001255c:	int3   
   14001255d:	int3   
   14001255e:	int3   
   14001255f:	int3   
   140012560:	mov    QWORD PTR [rsp+0x8],rcx
   140012565:	push   rdi
   140012566:	sub    rsp,0x30
   14001256a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140012573:	mov    QWORD PTR [rsp+0x48],rbx
   140012578:	mov    QWORD PTR [rsp+0x50],rsi
   14001257d:	mov    rsi,rdx
   140012580:	mov    rbx,rcx
   140012583:	xor    edi,edi
   140012585:	mov    DWORD PTR [rsp+0x58],edi
   140012589:	test   r9d,r9d
   14001258c:	je     0x1400125ac
   14001258e:	lea    rax,[rip+0x2ceb3]        # 0x14003f448
   140012595:	mov    QWORD PTR [rcx+0x40],rax
   140012599:	lea    rax,[rip+0x282a8]        # 0x14003a848
   1400125a0:	mov    QWORD PTR [rcx+0x50],rax
   1400125a4:	mov    DWORD PTR [rsp+0x58],0x1
   1400125ac:	call   0x1400138d0
   1400125b1:	nop
   1400125b2:	lea    rax,[rip+0x2ce4f]        # 0x14003f408
   1400125b9:	mov    QWORD PTR [rbx],rax
   1400125bc:	lea    rax,[rip+0x2ce5d]        # 0x14003f420
   1400125c3:	mov    QWORD PTR [rbx+0x18],rax
   1400125c7:	mov    rax,QWORD PTR [rbx+0x40]
   1400125cb:	movsxd rcx,DWORD PTR [rax+0x4]
   1400125cf:	lea    rax,[rip+0x2ce5a]        # 0x14003f430
   1400125d6:	mov    QWORD PTR [rcx+rbx*1+0x40],rax
   1400125db:	mov    rax,QWORD PTR [rbx+0x40]
   1400125df:	movsxd rcx,DWORD PTR [rax+0x4]
   1400125e3:	lea    edx,[rcx-0x10]
   1400125e6:	mov    DWORD PTR [rcx+rbx*1+0x3c],edx
   1400125ea:	test   rsi,rsi
   1400125ed:	je     0x1400125f3
   1400125ef:	lea    rdi,[rsi+0x18]
   1400125f3:	mov    rdx,rdi
   1400125f6:	lea    rcx,[rbx+0x18]
   1400125fa:	call   0x140021820
   1400125ff:	nop
   140012600:	mov    rax,rbx
   140012603:	mov    rbx,QWORD PTR [rsp+0x48]
   140012608:	mov    rsi,QWORD PTR [rsp+0x50]
   14001260d:	add    rsp,0x30
   140012611:	pop    rdi
   140012612:	ret    
   140012613:	int3   
   140012614:	int3   
   140012615:	int3   
   140012616:	int3   
   140012617:	int3   
   140012618:	int3   
   140012619:	int3   
   14001261a:	int3   
   14001261b:	int3   
   14001261c:	int3   
   14001261d:	int3   
   14001261e:	int3   
   14001261f:	int3   
   140012620:	mov    QWORD PTR [rsp+0x8],rcx
   140012625:	push   rdi
   140012626:	sub    rsp,0x30
   14001262a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140012633:	mov    QWORD PTR [rsp+0x48],rbx
   140012638:	mov    QWORD PTR [rsp+0x58],rsi
   14001263d:	mov    rsi,rdx
   140012640:	mov    rbx,rcx
   140012643:	xor    edi,edi
   140012645:	mov    DWORD PTR [rsp+0x50],edi
   140012649:	test   r8d,r8d
   14001264c:	je     0x14001266c
   14001264e:	lea    rax,[rip+0x2cdf3]        # 0x14003f448
   140012655:	mov    QWORD PTR [rcx+0x40],rax
   140012659:	lea    rax,[rip+0x281e8]        # 0x14003a848
   140012660:	mov    QWORD PTR [rcx+0x50],rax
   140012664:	mov    DWORD PTR [rsp+0x50],0x1
   14001266c:	call   0x1400138d0
   140012671:	nop
   140012672:	lea    rax,[rip+0x2cd8f]        # 0x14003f408
   140012679:	mov    QWORD PTR [rbx],rax
   14001267c:	lea    rax,[rip+0x2cd9d]        # 0x14003f420
   140012683:	mov    QWORD PTR [rbx+0x18],rax
   140012687:	mov    rax,QWORD PTR [rbx+0x40]
   14001268b:	movsxd rcx,DWORD PTR [rax+0x4]
   14001268f:	lea    rax,[rip+0x2cd9a]        # 0x14003f430
   140012696:	mov    QWORD PTR [rcx+rbx*1+0x40],rax
   14001269b:	mov    rax,QWORD PTR [rbx+0x40]
   14001269f:	movsxd rcx,DWORD PTR [rax+0x4]
   1400126a3:	lea    edx,[rcx-0x10]
   1400126a6:	mov    DWORD PTR [rcx+rbx*1+0x3c],edx
   1400126aa:	test   rsi,rsi
   1400126ad:	je     0x1400126b3
   1400126af:	lea    rdi,[rsi+0x18]
   1400126b3:	mov    rdx,rdi
   1400126b6:	lea    rcx,[rbx+0x18]
   1400126ba:	call   0x140021820
   1400126bf:	nop
   1400126c0:	mov    rax,rbx
   1400126c3:	mov    rbx,QWORD PTR [rsp+0x48]
   1400126c8:	mov    rsi,QWORD PTR [rsp+0x58]
   1400126cd:	add    rsp,0x30
   1400126d1:	pop    rdi
   1400126d2:	ret    
   1400126d3:	int3   
   1400126d4:	int3   
   1400126d5:	int3   
   1400126d6:	int3   
   1400126d7:	int3   
   1400126d8:	int3   
   1400126d9:	int3   
   1400126da:	int3   
   1400126db:	int3   
   1400126dc:	int3   
   1400126dd:	int3   
   1400126de:	int3   
   1400126df:	int3   
   1400126e0:	mov    QWORD PTR [rsp+0x8],rcx
   1400126e5:	push   rbx
   1400126e6:	sub    rsp,0x30
   1400126ea:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400126f3:	mov    rbx,rcx
   1400126f6:	mov    DWORD PTR [rsp+0x50],0x0
   1400126fe:	test   r8d,r8d
   140012701:	je     0x140012721
   140012703:	lea    rax,[rip+0x2cd3e]        # 0x14003f448
   14001270a:	mov    QWORD PTR [rcx+0x40],rax
   14001270e:	lea    rax,[rip+0x28133]        # 0x14003a848
   140012715:	mov    QWORD PTR [rcx+0x50],rax
   140012719:	mov    DWORD PTR [rsp+0x50],0x1
   140012721:	call   0x1400138d0
   140012726:	lea    rax,[rip+0x2ccdb]        # 0x14003f408
   14001272d:	mov    QWORD PTR [rbx],rax
   140012730:	lea    rax,[rip+0x2cce9]        # 0x14003f420
   140012737:	mov    QWORD PTR [rbx+0x18],rax
   14001273b:	mov    rax,QWORD PTR [rbx+0x40]
   14001273f:	movsxd rcx,DWORD PTR [rax+0x4]
   140012743:	lea    rax,[rip+0x2cce6]        # 0x14003f430
   14001274a:	mov    QWORD PTR [rcx+rbx*1+0x40],rax
   14001274f:	mov    rax,QWORD PTR [rbx+0x40]
   140012753:	movsxd rcx,DWORD PTR [rax+0x4]
   140012757:	mov    DWORD PTR [rcx+rbx*1+0x3c],0x0
   14001275f:	mov    rax,rbx
   140012762:	add    rsp,0x30
   140012766:	pop    rbx
   140012767:	ret    
   140012768:	int3   
   140012769:	int3   
   14001276a:	int3   
   14001276b:	int3   
   14001276c:	int3   
   14001276d:	int3   
   14001276e:	int3   
   14001276f:	int3   
   140012770:	mov    QWORD PTR [rsp+0x8],rcx
   140012775:	push   rdi
   140012776:	sub    rsp,0x30
   14001277a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140012783:	mov    QWORD PTR [rsp+0x48],rbx
   140012788:	mov    QWORD PTR [rsp+0x50],rsi
   14001278d:	mov    rsi,rdx
   140012790:	mov    rbx,rcx
   140012793:	xor    edi,edi
   140012795:	mov    DWORD PTR [rsp+0x58],edi
   140012799:	test   r9d,r9d
   14001279c:	je     0x1400127bc
   14001279e:	lea    rax,[rip+0x2cd4b]        # 0x14003f4f0
   1400127a5:	mov    QWORD PTR [rcx+0x48],rax
   1400127a9:	lea    rax,[rip+0x28098]        # 0x14003a848
   1400127b0:	mov    QWORD PTR [rcx+0x58],rax
   1400127b4:	mov    DWORD PTR [rsp+0x58],0x1
   1400127bc:	call   0x1400139b0
   1400127c1:	nop
   1400127c2:	lea    rax,[rip+0x2cce7]        # 0x14003f4b0
   1400127c9:	mov    QWORD PTR [rbx],rax
   1400127cc:	lea    rax,[rip+0x2ccf5]        # 0x14003f4c8
   1400127d3:	mov    QWORD PTR [rbx+0x20],rax
   1400127d7:	mov    rax,QWORD PTR [rbx+0x48]
   1400127db:	movsxd rcx,DWORD PTR [rax+0x4]
   1400127df:	lea    rax,[rip+0x2ccf2]        # 0x14003f4d8
   1400127e6:	mov    QWORD PTR [rcx+rbx*1+0x48],rax
   1400127eb:	mov    rax,QWORD PTR [rbx+0x48]
   1400127ef:	movsxd rcx,DWORD PTR [rax+0x4]
   1400127f3:	lea    edx,[rcx-0x10]
   1400127f6:	mov    DWORD PTR [rcx+rbx*1+0x44],edx
   1400127fa:	test   rsi,rsi
   1400127fd:	je     0x140012803
   1400127ff:	lea    rdi,[rsi+0x20]
   140012803:	mov    rdx,rdi
   140012806:	lea    rcx,[rbx+0x20]
   14001280a:	call   0x140021820
   14001280f:	nop
   140012810:	mov    rax,rbx
   140012813:	mov    rbx,QWORD PTR [rsp+0x48]
   140012818:	mov    rsi,QWORD PTR [rsp+0x50]
   14001281d:	add    rsp,0x30
   140012821:	pop    rdi
   140012822:	ret    
   140012823:	int3   
   140012824:	int3   
   140012825:	int3   
   140012826:	int3   
   140012827:	int3   
   140012828:	int3   
   140012829:	int3   
   14001282a:	int3   
   14001282b:	int3   
   14001282c:	int3   
   14001282d:	int3   
   14001282e:	int3   
   14001282f:	int3   
   140012830:	mov    QWORD PTR [rsp+0x8],rcx
   140012835:	push   rdi
   140012836:	sub    rsp,0x30
   14001283a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140012843:	mov    QWORD PTR [rsp+0x48],rbx
   140012848:	mov    QWORD PTR [rsp+0x58],rsi
   14001284d:	mov    rsi,rdx
   140012850:	mov    rbx,rcx
   140012853:	xor    edi,edi
   140012855:	mov    DWORD PTR [rsp+0x50],edi
   140012859:	test   r8d,r8d
   14001285c:	je     0x14001287c
   14001285e:	lea    rax,[rip+0x2cc8b]        # 0x14003f4f0
   140012865:	mov    QWORD PTR [rcx+0x48],rax
   140012869:	lea    rax,[rip+0x27fd8]        # 0x14003a848
   140012870:	mov    QWORD PTR [rcx+0x58],rax
   140012874:	mov    DWORD PTR [rsp+0x50],0x1
   14001287c:	call   0x1400139b0
   140012881:	nop
   140012882:	lea    rax,[rip+0x2cc27]        # 0x14003f4b0
   140012889:	mov    QWORD PTR [rbx],rax
   14001288c:	lea    rax,[rip+0x2cc35]        # 0x14003f4c8
   140012893:	mov    QWORD PTR [rbx+0x20],rax
   140012897:	mov    rax,QWORD PTR [rbx+0x48]
   14001289b:	movsxd rcx,DWORD PTR [rax+0x4]
   14001289f:	lea    rax,[rip+0x2cc32]        # 0x14003f4d8
   1400128a6:	mov    QWORD PTR [rcx+rbx*1+0x48],rax
   1400128ab:	mov    rax,QWORD PTR [rbx+0x48]
   1400128af:	movsxd rcx,DWORD PTR [rax+0x4]
   1400128b3:	lea    edx,[rcx-0x10]
   1400128b6:	mov    DWORD PTR [rcx+rbx*1+0x44],edx
   1400128ba:	test   rsi,rsi
   1400128bd:	je     0x1400128c3
   1400128bf:	lea    rdi,[rsi+0x20]
   1400128c3:	mov    rdx,rdi
   1400128c6:	lea    rcx,[rbx+0x20]
   1400128ca:	call   0x140021820
   1400128cf:	nop
   1400128d0:	mov    rax,rbx
   1400128d3:	mov    rbx,QWORD PTR [rsp+0x48]
   1400128d8:	mov    rsi,QWORD PTR [rsp+0x58]
   1400128dd:	add    rsp,0x30
   1400128e1:	pop    rdi
   1400128e2:	ret    
   1400128e3:	int3   
   1400128e4:	int3   
   1400128e5:	int3   
   1400128e6:	int3   
   1400128e7:	int3   
   1400128e8:	int3   
   1400128e9:	int3   
   1400128ea:	int3   
   1400128eb:	int3   
   1400128ec:	int3   
   1400128ed:	int3   
   1400128ee:	int3   
   1400128ef:	int3   
   1400128f0:	mov    QWORD PTR [rsp+0x8],rcx
   1400128f5:	push   rbx
   1400128f6:	sub    rsp,0x30
   1400128fa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140012903:	mov    rbx,rcx
   140012906:	mov    DWORD PTR [rsp+0x50],0x0
   14001290e:	test   r8d,r8d
   140012911:	je     0x140012931
   140012913:	lea    rax,[rip+0x2cbd6]        # 0x14003f4f0
   14001291a:	mov    QWORD PTR [rcx+0x48],rax
   14001291e:	lea    rax,[rip+0x27f23]        # 0x14003a848
   140012925:	mov    QWORD PTR [rcx+0x58],rax
   140012929:	mov    DWORD PTR [rsp+0x50],0x1
   140012931:	call   0x1400139b0
   140012936:	lea    rax,[rip+0x2cb73]        # 0x14003f4b0
   14001293d:	mov    QWORD PTR [rbx],rax
   140012940:	lea    rax,[rip+0x2cb81]        # 0x14003f4c8
   140012947:	mov    QWORD PTR [rbx+0x20],rax
   14001294b:	mov    rax,QWORD PTR [rbx+0x48]
   14001294f:	movsxd rcx,DWORD PTR [rax+0x4]
   140012953:	lea    rax,[rip+0x2cb7e]        # 0x14003f4d8
   14001295a:	mov    QWORD PTR [rcx+rbx*1+0x48],rax
   14001295f:	mov    rax,QWORD PTR [rbx+0x48]
   140012963:	movsxd rcx,DWORD PTR [rax+0x4]
   140012967:	mov    DWORD PTR [rcx+rbx*1+0x44],0x0
   14001296f:	mov    rax,rbx
   140012972:	add    rsp,0x30
   140012976:	pop    rbx
   140012977:	ret    
   140012978:	int3   
   140012979:	int3   
   14001297a:	int3   
   14001297b:	int3   
   14001297c:	int3   
   14001297d:	int3   
   14001297e:	int3   
   14001297f:	int3   
   140012980:	mov    QWORD PTR [rsp+0x8],rcx
   140012985:	push   rdi
   140012986:	sub    rsp,0x30
   14001298a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140012993:	mov    QWORD PTR [rsp+0x48],rbx
   140012998:	mov    QWORD PTR [rsp+0x50],rsi
   14001299d:	mov    rsi,rdx
   1400129a0:	mov    rbx,rcx
   1400129a3:	xor    edi,edi
   1400129a5:	mov    DWORD PTR [rsp+0x58],edi
   1400129a9:	test   r9d,r9d
   1400129ac:	je     0x1400129cc
   1400129ae:	lea    rax,[rip+0x2cfa3]        # 0x14003f958
   1400129b5:	mov    QWORD PTR [rcx+0x48],rax
   1400129b9:	lea    rax,[rip+0x27e88]        # 0x14003a848
   1400129c0:	mov    QWORD PTR [rcx+0x58],rax
   1400129c4:	mov    DWORD PTR [rsp+0x58],0x1
   1400129cc:	call   0x140013af0
   1400129d1:	nop
   1400129d2:	lea    rax,[rip+0x2cf3f]        # 0x14003f918
   1400129d9:	mov    QWORD PTR [rbx],rax
   1400129dc:	lea    rax,[rip+0x2cf4d]        # 0x14003f930
   1400129e3:	mov    QWORD PTR [rbx+0x20],rax
   1400129e7:	mov    rax,QWORD PTR [rbx+0x48]
   1400129eb:	movsxd rcx,DWORD PTR [rax+0x4]
   1400129ef:	lea    rax,[rip+0x2cf4a]        # 0x14003f940
   1400129f6:	mov    QWORD PTR [rcx+rbx*1+0x48],rax
   1400129fb:	mov    rax,QWORD PTR [rbx+0x48]
   1400129ff:	movsxd rcx,DWORD PTR [rax+0x4]
   140012a03:	lea    edx,[rcx-0x10]
   140012a06:	mov    DWORD PTR [rcx+rbx*1+0x44],edx
   140012a0a:	test   rsi,rsi
   140012a0d:	je     0x140012a13
   140012a0f:	lea    rdi,[rsi+0x20]
   140012a13:	mov    rdx,rdi
   140012a16:	lea    rcx,[rbx+0x20]
   140012a1a:	call   0x140021820
   140012a1f:	nop
   140012a20:	mov    rax,rbx
   140012a23:	mov    rbx,QWORD PTR [rsp+0x48]
   140012a28:	mov    rsi,QWORD PTR [rsp+0x50]
   140012a2d:	add    rsp,0x30
   140012a31:	pop    rdi
   140012a32:	ret    
   140012a33:	int3   
   140012a34:	int3   
   140012a35:	int3   
   140012a36:	int3   
   140012a37:	int3   
   140012a38:	int3   
   140012a39:	int3   
   140012a3a:	int3   
   140012a3b:	int3   
   140012a3c:	int3   
   140012a3d:	int3   
   140012a3e:	int3   
   140012a3f:	int3   
   140012a40:	mov    QWORD PTR [rsp+0x8],rcx
   140012a45:	push   rdi
   140012a46:	sub    rsp,0x30
   140012a4a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140012a53:	mov    QWORD PTR [rsp+0x48],rbx
   140012a58:	mov    QWORD PTR [rsp+0x58],rsi
   140012a5d:	mov    rsi,rdx
   140012a60:	mov    rbx,rcx
   140012a63:	xor    edi,edi
   140012a65:	mov    DWORD PTR [rsp+0x50],edi
   140012a69:	test   r8d,r8d
   140012a6c:	je     0x140012a8c
   140012a6e:	lea    rax,[rip+0x2cee3]        # 0x14003f958
   140012a75:	mov    QWORD PTR [rcx+0x48],rax
   140012a79:	lea    rax,[rip+0x27dc8]        # 0x14003a848
   140012a80:	mov    QWORD PTR [rcx+0x58],rax
   140012a84:	mov    DWORD PTR [rsp+0x50],0x1
   140012a8c:	call   0x140013af0
   140012a91:	nop
   140012a92:	lea    rax,[rip+0x2ce7f]        # 0x14003f918
   140012a99:	mov    QWORD PTR [rbx],rax
   140012a9c:	lea    rax,[rip+0x2ce8d]        # 0x14003f930
   140012aa3:	mov    QWORD PTR [rbx+0x20],rax
   140012aa7:	mov    rax,QWORD PTR [rbx+0x48]
   140012aab:	movsxd rcx,DWORD PTR [rax+0x4]
   140012aaf:	lea    rax,[rip+0x2ce8a]        # 0x14003f940
   140012ab6:	mov    QWORD PTR [rcx+rbx*1+0x48],rax
   140012abb:	mov    rax,QWORD PTR [rbx+0x48]
   140012abf:	movsxd rcx,DWORD PTR [rax+0x4]
   140012ac3:	lea    edx,[rcx-0x10]
   140012ac6:	mov    DWORD PTR [rcx+rbx*1+0x44],edx
   140012aca:	test   rsi,rsi
   140012acd:	je     0x140012ad3
   140012acf:	lea    rdi,[rsi+0x20]
   140012ad3:	mov    rdx,rdi
   140012ad6:	lea    rcx,[rbx+0x20]
   140012ada:	call   0x140021820
   140012adf:	nop
   140012ae0:	mov    rax,rbx
   140012ae3:	mov    rbx,QWORD PTR [rsp+0x48]
   140012ae8:	mov    rsi,QWORD PTR [rsp+0x58]
   140012aed:	add    rsp,0x30
   140012af1:	pop    rdi
   140012af2:	ret    
   140012af3:	int3   
   140012af4:	int3   
   140012af5:	int3   
   140012af6:	int3   
   140012af7:	int3   
   140012af8:	int3   
   140012af9:	int3   
   140012afa:	int3   
   140012afb:	int3   
   140012afc:	int3   
   140012afd:	int3   
   140012afe:	int3   
   140012aff:	int3   
   140012b00:	mov    QWORD PTR [rsp+0x8],rcx
   140012b05:	push   rbx
   140012b06:	sub    rsp,0x30
   140012b0a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140012b13:	mov    rbx,rcx
   140012b16:	mov    DWORD PTR [rsp+0x50],0x0
   140012b1e:	test   r8d,r8d
   140012b21:	je     0x140012b41
   140012b23:	lea    rax,[rip+0x2ce2e]        # 0x14003f958
   140012b2a:	mov    QWORD PTR [rcx+0x48],rax
   140012b2e:	lea    rax,[rip+0x27d13]        # 0x14003a848
   140012b35:	mov    QWORD PTR [rcx+0x58],rax
   140012b39:	mov    DWORD PTR [rsp+0x50],0x1
   140012b41:	call   0x140013af0
   140012b46:	lea    rax,[rip+0x2cdcb]        # 0x14003f918
   140012b4d:	mov    QWORD PTR [rbx],rax
   140012b50:	lea    rax,[rip+0x2cdd9]        # 0x14003f930
   140012b57:	mov    QWORD PTR [rbx+0x20],rax
   140012b5b:	mov    rax,QWORD PTR [rbx+0x48]
   140012b5f:	movsxd rcx,DWORD PTR [rax+0x4]
   140012b63:	lea    rax,[rip+0x2cdd6]        # 0x14003f940
   140012b6a:	mov    QWORD PTR [rcx+rbx*1+0x48],rax
   140012b6f:	mov    rax,QWORD PTR [rbx+0x48]
   140012b73:	movsxd rcx,DWORD PTR [rax+0x4]
   140012b77:	mov    DWORD PTR [rcx+rbx*1+0x44],0x0
   140012b7f:	mov    rax,rbx
   140012b82:	add    rsp,0x30
   140012b86:	pop    rbx
   140012b87:	ret    
   140012b88:	int3   
   140012b89:	int3   
   140012b8a:	int3   
   140012b8b:	int3   
   140012b8c:	int3   
   140012b8d:	int3   
   140012b8e:	int3   
   140012b8f:	int3   
   140012b90:	mov    QWORD PTR [rsp+0x8],rcx
   140012b95:	push   rdi
   140012b96:	sub    rsp,0x30
   140012b9a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140012ba3:	mov    QWORD PTR [rsp+0x48],rbx
   140012ba8:	mov    QWORD PTR [rsp+0x50],rsi
   140012bad:	mov    rsi,rdx
   140012bb0:	mov    rbx,rcx
   140012bb3:	xor    edi,edi
   140012bb5:	mov    DWORD PTR [rsp+0x58],edi
   140012bb9:	test   r9d,r9d
   140012bbc:	je     0x140012bdc
   140012bbe:	lea    rax,[rip+0x29e7b]        # 0x14003ca40
   140012bc5:	mov    QWORD PTR [rcx+0x40],rax
   140012bc9:	lea    rax,[rip+0x27c78]        # 0x14003a848
   140012bd0:	mov    QWORD PTR [rcx+0x50],rax
   140012bd4:	mov    DWORD PTR [rsp+0x58],0x1
   140012bdc:	call   0x140013c30
   140012be1:	nop
   140012be2:	lea    rax,[rip+0x29e17]        # 0x14003ca00
   140012be9:	mov    QWORD PTR [rbx],rax
   140012bec:	lea    rax,[rip+0x29e25]        # 0x14003ca18
   140012bf3:	mov    QWORD PTR [rbx+0x18],rax
   140012bf7:	mov    rax,QWORD PTR [rbx+0x40]
   140012bfb:	movsxd rcx,DWORD PTR [rax+0x4]
   140012bff:	lea    rax,[rip+0x29e22]        # 0x14003ca28
   140012c06:	mov    QWORD PTR [rcx+rbx*1+0x40],rax
   140012c0b:	mov    rax,QWORD PTR [rbx+0x40]
   140012c0f:	movsxd rcx,DWORD PTR [rax+0x4]
   140012c13:	lea    edx,[rcx-0x10]
   140012c16:	mov    DWORD PTR [rcx+rbx*1+0x3c],edx
   140012c1a:	test   rsi,rsi
   140012c1d:	je     0x140012c23
   140012c1f:	lea    rdi,[rsi+0x18]
   140012c23:	mov    rdx,rdi
   140012c26:	lea    rcx,[rbx+0x18]
   140012c2a:	call   0x140021820
   140012c2f:	nop
   140012c30:	mov    rax,rbx
   140012c33:	mov    rbx,QWORD PTR [rsp+0x48]
   140012c38:	mov    rsi,QWORD PTR [rsp+0x50]
   140012c3d:	add    rsp,0x30
   140012c41:	pop    rdi
   140012c42:	ret    
   140012c43:	int3   
   140012c44:	int3   
   140012c45:	int3   
   140012c46:	int3   
   140012c47:	int3   
   140012c48:	int3   
   140012c49:	int3   
   140012c4a:	int3   
   140012c4b:	int3   
   140012c4c:	int3   
   140012c4d:	int3   
   140012c4e:	int3   
   140012c4f:	int3   
   140012c50:	mov    QWORD PTR [rsp+0x8],rcx
   140012c55:	push   rdi
   140012c56:	sub    rsp,0x30
   140012c5a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140012c63:	mov    QWORD PTR [rsp+0x48],rbx
   140012c68:	mov    QWORD PTR [rsp+0x58],rsi
   140012c6d:	mov    rsi,rdx
   140012c70:	mov    rbx,rcx
   140012c73:	xor    edi,edi
   140012c75:	mov    DWORD PTR [rsp+0x50],edi
   140012c79:	test   r8d,r8d
   140012c7c:	je     0x140012c9c
   140012c7e:	lea    rax,[rip+0x29dbb]        # 0x14003ca40
   140012c85:	mov    QWORD PTR [rcx+0x40],rax
   140012c89:	lea    rax,[rip+0x27bb8]        # 0x14003a848
   140012c90:	mov    QWORD PTR [rcx+0x50],rax
   140012c94:	mov    DWORD PTR [rsp+0x50],0x1
   140012c9c:	call   0x140013c30
   140012ca1:	nop
   140012ca2:	lea    rax,[rip+0x29d57]        # 0x14003ca00
   140012ca9:	mov    QWORD PTR [rbx],rax
   140012cac:	lea    rax,[rip+0x29d65]        # 0x14003ca18
   140012cb3:	mov    QWORD PTR [rbx+0x18],rax
   140012cb7:	mov    rax,QWORD PTR [rbx+0x40]
   140012cbb:	movsxd rcx,DWORD PTR [rax+0x4]
   140012cbf:	lea    rax,[rip+0x29d62]        # 0x14003ca28
   140012cc6:	mov    QWORD PTR [rcx+rbx*1+0x40],rax
   140012ccb:	mov    rax,QWORD PTR [rbx+0x40]
   140012ccf:	movsxd rcx,DWORD PTR [rax+0x4]
   140012cd3:	lea    edx,[rcx-0x10]
   140012cd6:	mov    DWORD PTR [rcx+rbx*1+0x3c],edx
   140012cda:	test   rsi,rsi
   140012cdd:	je     0x140012ce3
   140012cdf:	lea    rdi,[rsi+0x18]
   140012ce3:	mov    rdx,rdi
   140012ce6:	lea    rcx,[rbx+0x18]
   140012cea:	call   0x140021820
   140012cef:	nop
   140012cf0:	mov    rax,rbx
   140012cf3:	mov    rbx,QWORD PTR [rsp+0x48]
   140012cf8:	mov    rsi,QWORD PTR [rsp+0x58]
   140012cfd:	add    rsp,0x30
   140012d01:	pop    rdi
   140012d02:	ret    
   140012d03:	int3   
   140012d04:	int3   
   140012d05:	int3   
   140012d06:	int3   
   140012d07:	int3   
   140012d08:	int3   
   140012d09:	int3   
   140012d0a:	int3   
   140012d0b:	int3   
   140012d0c:	int3   
   140012d0d:	int3   
   140012d0e:	int3   
   140012d0f:	int3   
   140012d10:	mov    QWORD PTR [rsp+0x8],rcx
   140012d15:	push   rbx
   140012d16:	sub    rsp,0x30
   140012d1a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140012d23:	mov    rbx,rcx
   140012d26:	mov    DWORD PTR [rsp+0x50],0x0
   140012d2e:	test   r8d,r8d
   140012d31:	je     0x140012d51
   140012d33:	lea    rax,[rip+0x29d06]        # 0x14003ca40
   140012d3a:	mov    QWORD PTR [rcx+0x40],rax
   140012d3e:	lea    rax,[rip+0x27b03]        # 0x14003a848
   140012d45:	mov    QWORD PTR [rcx+0x50],rax
   140012d49:	mov    DWORD PTR [rsp+0x50],0x1
   140012d51:	call   0x140013c30
   140012d56:	lea    rax,[rip+0x29ca3]        # 0x14003ca00
   140012d5d:	mov    QWORD PTR [rbx],rax
   140012d60:	lea    rax,[rip+0x29cb1]        # 0x14003ca18
   140012d67:	mov    QWORD PTR [rbx+0x18],rax
   140012d6b:	mov    rax,QWORD PTR [rbx+0x40]
   140012d6f:	movsxd rcx,DWORD PTR [rax+0x4]
   140012d73:	lea    rax,[rip+0x29cae]        # 0x14003ca28
   140012d7a:	mov    QWORD PTR [rcx+rbx*1+0x40],rax
   140012d7f:	mov    rax,QWORD PTR [rbx+0x40]
   140012d83:	movsxd rcx,DWORD PTR [rax+0x4]
   140012d87:	mov    DWORD PTR [rcx+rbx*1+0x3c],0x0
   140012d8f:	mov    rax,rbx
   140012d92:	add    rsp,0x30
   140012d96:	pop    rbx
   140012d97:	ret    
   140012d98:	int3   
   140012d99:	int3   
   140012d9a:	int3   
   140012d9b:	int3   
   140012d9c:	int3   
   140012d9d:	int3   
   140012d9e:	int3   
   140012d9f:	int3   
   140012da0:	mov    QWORD PTR [rsp+0x8],rcx
   140012da5:	push   rdi
   140012da6:	sub    rsp,0x30
   140012daa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140012db3:	mov    QWORD PTR [rsp+0x48],rbx
   140012db8:	mov    QWORD PTR [rsp+0x50],rsi
   140012dbd:	mov    rsi,rdx
   140012dc0:	mov    rbx,rcx
   140012dc3:	xor    edi,edi
   140012dc5:	mov    DWORD PTR [rsp+0x58],edi
   140012dc9:	test   r9d,r9d
   140012dcc:	je     0x140012df2
   140012dce:	lea    rax,[rip+0x2b91b]        # 0x14003e6f0
   140012dd5:	mov    QWORD PTR [rcx+0x88],rax
   140012ddc:	lea    rax,[rip+0x27a65]        # 0x14003a848
   140012de3:	mov    QWORD PTR [rcx+0x98],rax
   140012dea:	mov    DWORD PTR [rsp+0x58],0x1
   140012df2:	call   0x140013d10
   140012df7:	nop
   140012df8:	lea    rax,[rip+0x2b8b1]        # 0x14003e6b0
   140012dff:	mov    QWORD PTR [rbx],rax
   140012e02:	lea    rax,[rip+0x2b8bf]        # 0x14003e6c8
   140012e09:	mov    QWORD PTR [rbx+0x60],rax
   140012e0d:	mov    rax,QWORD PTR [rbx+0x88]
   140012e14:	movsxd rcx,DWORD PTR [rax+0x4]
   140012e18:	lea    rax,[rip+0x2b8b9]        # 0x14003e6d8
   140012e1f:	mov    QWORD PTR [rcx+rbx*1+0x88],rax
   140012e27:	mov    rax,QWORD PTR [rbx+0x88]
   140012e2e:	movsxd rcx,DWORD PTR [rax+0x4]
   140012e32:	lea    edx,[rcx-0x10]
   140012e35:	mov    DWORD PTR [rcx+rbx*1+0x84],edx
   140012e3c:	test   rsi,rsi
   140012e3f:	je     0x140012e45
   140012e41:	lea    rdi,[rsi+0x60]
   140012e45:	mov    rdx,rdi
   140012e48:	lea    rcx,[rbx+0x60]
   140012e4c:	call   0x140021820
   140012e51:	nop
   140012e52:	mov    rax,rbx
   140012e55:	mov    rbx,QWORD PTR [rsp+0x48]
   140012e5a:	mov    rsi,QWORD PTR [rsp+0x50]
   140012e5f:	add    rsp,0x30
   140012e63:	pop    rdi
   140012e64:	ret    
   140012e65:	int3   
   140012e66:	int3   
   140012e67:	int3   
   140012e68:	int3   
   140012e69:	int3   
   140012e6a:	int3   
   140012e6b:	int3   
   140012e6c:	int3   
   140012e6d:	int3   
   140012e6e:	int3   
   140012e6f:	int3   
   140012e70:	mov    QWORD PTR [rsp+0x8],rcx
   140012e75:	push   rdi
   140012e76:	sub    rsp,0x30
   140012e7a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140012e83:	mov    QWORD PTR [rsp+0x48],rbx
   140012e88:	mov    QWORD PTR [rsp+0x58],rsi
   140012e8d:	mov    rsi,rdx
   140012e90:	mov    rbx,rcx
   140012e93:	xor    edi,edi
   140012e95:	mov    DWORD PTR [rsp+0x50],edi
   140012e99:	test   r8d,r8d
   140012e9c:	je     0x140012ec2
   140012e9e:	lea    rax,[rip+0x2b84b]        # 0x14003e6f0
   140012ea5:	mov    QWORD PTR [rcx+0x88],rax
   140012eac:	lea    rax,[rip+0x27995]        # 0x14003a848
   140012eb3:	mov    QWORD PTR [rcx+0x98],rax
   140012eba:	mov    DWORD PTR [rsp+0x50],0x1
   140012ec2:	call   0x140013d10
   140012ec7:	nop
   140012ec8:	lea    rax,[rip+0x2b7e1]        # 0x14003e6b0
   140012ecf:	mov    QWORD PTR [rbx],rax
   140012ed2:	lea    rax,[rip+0x2b7ef]        # 0x14003e6c8
   140012ed9:	mov    QWORD PTR [rbx+0x60],rax
   140012edd:	mov    rax,QWORD PTR [rbx+0x88]
   140012ee4:	movsxd rcx,DWORD PTR [rax+0x4]
   140012ee8:	lea    rax,[rip+0x2b7e9]        # 0x14003e6d8
   140012eef:	mov    QWORD PTR [rcx+rbx*1+0x88],rax
   140012ef7:	mov    rax,QWORD PTR [rbx+0x88]
   140012efe:	movsxd rcx,DWORD PTR [rax+0x4]
   140012f02:	lea    edx,[rcx-0x10]
   140012f05:	mov    DWORD PTR [rcx+rbx*1+0x84],edx
   140012f0c:	test   rsi,rsi
   140012f0f:	je     0x140012f15
   140012f11:	lea    rdi,[rsi+0x60]
   140012f15:	mov    rdx,rdi
   140012f18:	lea    rcx,[rbx+0x60]
   140012f1c:	call   0x140021820
   140012f21:	nop
   140012f22:	mov    rax,rbx
   140012f25:	mov    rbx,QWORD PTR [rsp+0x48]
   140012f2a:	mov    rsi,QWORD PTR [rsp+0x58]
   140012f2f:	add    rsp,0x30
   140012f33:	pop    rdi
   140012f34:	ret    
   140012f35:	int3   
   140012f36:	int3   
   140012f37:	int3   
   140012f38:	int3   
   140012f39:	int3   
   140012f3a:	int3   
   140012f3b:	int3   
   140012f3c:	int3   
   140012f3d:	int3   
   140012f3e:	int3   
   140012f3f:	int3   
   140012f40:	mov    QWORD PTR [rsp+0x8],rcx
   140012f45:	push   rbx
   140012f46:	sub    rsp,0x30
   140012f4a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140012f53:	mov    rbx,rcx
   140012f56:	mov    DWORD PTR [rsp+0x50],0x0
   140012f5e:	test   r8d,r8d
   140012f61:	je     0x140012f87
   140012f63:	lea    rax,[rip+0x2b786]        # 0x14003e6f0
   140012f6a:	mov    QWORD PTR [rcx+0x88],rax
   140012f71:	lea    rax,[rip+0x278d0]        # 0x14003a848
   140012f78:	mov    QWORD PTR [rcx+0x98],rax
   140012f7f:	mov    DWORD PTR [rsp+0x50],0x1
   140012f87:	call   0x140013d10
   140012f8c:	lea    rax,[rip+0x2b71d]        # 0x14003e6b0
   140012f93:	mov    QWORD PTR [rbx],rax
   140012f96:	lea    rax,[rip+0x2b72b]        # 0x14003e6c8
   140012f9d:	mov    QWORD PTR [rbx+0x60],rax
   140012fa1:	mov    rax,QWORD PTR [rbx+0x88]
   140012fa8:	movsxd rcx,DWORD PTR [rax+0x4]
   140012fac:	lea    rax,[rip+0x2b725]        # 0x14003e6d8
   140012fb3:	mov    QWORD PTR [rcx+rbx*1+0x88],rax
   140012fbb:	mov    rax,QWORD PTR [rbx+0x88]
   140012fc2:	movsxd rcx,DWORD PTR [rax+0x4]
   140012fc6:	mov    DWORD PTR [rcx+rbx*1+0x84],0x0
   140012fd1:	mov    rax,rbx
   140012fd4:	add    rsp,0x30
   140012fd8:	pop    rbx
   140012fd9:	ret    
   140012fda:	int3   
   140012fdb:	int3   
   140012fdc:	int3   
   140012fdd:	int3   
   140012fde:	int3   
   140012fdf:	int3   
   140012fe0:	mov    rax,QWORD PTR [rdx]
   140012fe3:	mov    QWORD PTR [rcx],rax
   140012fe6:	mov    rax,QWORD PTR [rdx+0x8]
   140012fea:	mov    QWORD PTR [rcx+0x8],rax
   140012fee:	test   rax,rax
   140012ff1:	je     0x140012ff7
   140012ff3:	lock inc DWORD PTR [rax+0x8]
   140012ff7:	mov    rax,rcx
   140012ffa:	ret    
   140012ffb:	int3   
   140012ffc:	int3   
   140012ffd:	int3   
   140012ffe:	int3   
   140012fff:	int3   
   140013000:	mov    rax,QWORD PTR [rdx]
   140013003:	mov    QWORD PTR [rcx],rax
   140013006:	mov    rax,QWORD PTR [rdx+0x8]
   14001300a:	mov    QWORD PTR [rcx+0x8],rax
   14001300e:	test   rax,rax
   140013011:	je     0x140013017
   140013013:	lock inc DWORD PTR [rax+0x8]
   140013017:	mov    rax,rcx
   14001301a:	ret    
   14001301b:	int3   
   14001301c:	int3   
   14001301d:	int3   
   14001301e:	int3   
   14001301f:	int3   
   140013020:	mov    rax,QWORD PTR [rdx]
   140013023:	mov    QWORD PTR [rcx],rax
   140013026:	mov    rax,QWORD PTR [rdx+0x8]
   14001302a:	mov    QWORD PTR [rcx+0x8],rax
   14001302e:	test   rax,rax
   140013031:	je     0x140013037
   140013033:	lock inc DWORD PTR [rax+0x8]
   140013037:	mov    rax,rcx
   14001303a:	ret    
   14001303b:	int3   
   14001303c:	int3   
   14001303d:	int3   
   14001303e:	int3   
   14001303f:	int3   
   140013040:	mov    rax,QWORD PTR [rdx]
   140013043:	mov    QWORD PTR [rcx],rax
   140013046:	mov    rax,QWORD PTR [rdx+0x8]
   14001304a:	mov    QWORD PTR [rcx+0x8],rax
   14001304e:	test   rax,rax
   140013051:	je     0x140013057
   140013053:	lock inc DWORD PTR [rax+0x8]
   140013057:	mov    rax,rcx
   14001305a:	ret    
   14001305b:	int3   
   14001305c:	int3   
   14001305d:	int3   
   14001305e:	int3   
   14001305f:	int3   
   140013060:	mov    rax,rcx
   140013063:	ret    
   140013064:	int3   
   140013065:	int3   
   140013066:	int3   
   140013067:	int3   
   140013068:	int3   
   140013069:	int3   
   14001306a:	int3   
   14001306b:	int3   
   14001306c:	int3   
   14001306d:	int3   
   14001306e:	int3   
   14001306f:	int3   
   140013070:	mov    rax,QWORD PTR [rdx]
   140013073:	mov    QWORD PTR [rcx],rax
   140013076:	mov    rax,rcx
   140013079:	ret    
   14001307a:	int3   
   14001307b:	int3   
   14001307c:	int3   
   14001307d:	int3   
   14001307e:	int3   
   14001307f:	int3   
   140013080:	mov    rax,rcx
   140013083:	ret    
   140013084:	int3   
   140013085:	int3   
   140013086:	int3   
   140013087:	int3   
   140013088:	int3   
   140013089:	int3   
   14001308a:	int3   
   14001308b:	int3   
   14001308c:	int3   
   14001308d:	int3   
   14001308e:	int3   
   14001308f:	int3   
   140013090:	mov    rax,rcx
   140013093:	ret    
   140013094:	int3   
   140013095:	int3   
   140013096:	int3   
   140013097:	int3   
   140013098:	int3   
   140013099:	int3   
   14001309a:	int3   
   14001309b:	int3   
   14001309c:	int3   
   14001309d:	int3   
   14001309e:	int3   
   14001309f:	int3   
   1400130a0:	xor    eax,eax
   1400130a2:	mov    BYTE PTR [rcx],al
   1400130a4:	mov    rax,rcx
   1400130a7:	ret    
   1400130a8:	int3   
   1400130a9:	int3   
   1400130aa:	int3   
   1400130ab:	int3   
   1400130ac:	int3   
   1400130ad:	int3   
   1400130ae:	int3   
   1400130af:	int3   
   1400130b0:	mov    rax,rcx
   1400130b3:	ret    
   1400130b4:	int3   
   1400130b5:	int3   
   1400130b6:	int3   
   1400130b7:	int3   
   1400130b8:	int3   
   1400130b9:	int3   
   1400130ba:	int3   
   1400130bb:	int3   
   1400130bc:	int3   
   1400130bd:	int3   
   1400130be:	int3   
   1400130bf:	int3   
   1400130c0:	sub    rsp,0x28
   1400130c4:	movzx  eax,dx
   1400130c7:	mov    r8d,0x1
   1400130cd:	inc    eax
   1400130cf:	mov    WORD PTR [rcx],r8w
   1400130d3:	cmp    eax,0x2
   1400130d6:	jl     0x1400130e9
   1400130d8:	cmp    dx,0x1f
   1400130dc:	ja     0x1400130f5
   1400130de:	mov    WORD PTR [rcx],dx
   1400130e1:	mov    rax,rcx
   1400130e4:	add    rsp,0x28
   1400130e8:	ret    
   1400130e9:	mov    ecx,r8d
   1400130ec:	xor    r8d,r8d
   1400130ef:	call   0x140026650
   1400130f4:	int3   
   1400130f5:	mov    ecx,r8d
   1400130f8:	call   0x140026650
   1400130fd:	int3   
   1400130fe:	int3   
   1400130ff:	int3   
   140013100:	sub    rsp,0x28
   140013104:	movzx  eax,dx
   140013107:	mov    r8d,0x578
   14001310d:	inc    eax
   14001310f:	mov    WORD PTR [rcx],r8w
   140013113:	cmp    eax,0x579
   140013118:	jl     0x14001312f
   14001311a:	mov    eax,0x2710
   14001311f:	cmp    dx,ax
   140013122:	ja     0x14001313b
   140013124:	mov    WORD PTR [rcx],dx
   140013127:	mov    rax,rcx
   14001312a:	add    rsp,0x28
   14001312e:	ret    
   14001312f:	mov    ecx,r8d
   140013132:	xor    r8d,r8d
   140013135:	call   0x140026710
   14001313a:	int3   
   14001313b:	mov    ecx,r8d
   14001313e:	mov    r8d,0x1
   140013144:	call   0x140026710
   140013149:	int3   
   14001314a:	int3   
   14001314b:	int3   
   14001314c:	int3   
   14001314d:	int3   
   14001314e:	int3   
   14001314f:	int3   
   140013150:	mov    QWORD PTR [rsp+0x8],rbx
   140013155:	push   rdi
   140013156:	sub    rsp,0x20
   14001315a:	mov    QWORD PTR [rcx+0x8],r8
   14001315e:	mov    rdi,r9
   140013161:	mov    rbx,rcx
   140013164:	mov    QWORD PTR [rcx+0x18],r8
   140013168:	test   r8,r8
   14001316b:	je     0x140013194
   14001316d:	movabs rax,0xfffffffffffffff
   140013177:	cmp    r8,rax
   14001317a:	ja     0x14001318d
   14001317c:	shl    r8,0x4
   140013180:	mov    rcx,r8
   140013183:	call   0x14003027c
   140013188:	test   rax,rax
   14001318b:	jne    0x140013196
   14001318d:	call   QWORD PTR [rip+0x23085]        # 0x140036218
   140013193:	int3   
   140013194:	xor    eax,eax
   140013196:	mov    QWORD PTR [rbx+0x20],rax
   14001319a:	mov    rax,QWORD PTR [rsp+0x50]
   14001319f:	mov    QWORD PTR [rbx+0x28],0x0
   1400131a7:	mov    QWORD PTR [rbx+0x38],rax
   1400131ab:	mov    QWORD PTR [rbx+0x30],rdi
   1400131af:	mov    BYTE PTR [rbx+0x40],0x0
   1400131b3:	mov    rax,rbx
   1400131b6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400131bb:	add    rsp,0x20
   1400131bf:	pop    rdi
   1400131c0:	ret    
   1400131c1:	int3   
   1400131c2:	int3   
   1400131c3:	int3   
   1400131c4:	int3   
   1400131c5:	int3   
   1400131c6:	int3   
   1400131c7:	int3   
   1400131c8:	int3   
   1400131c9:	int3   
   1400131ca:	int3   
   1400131cb:	int3   
   1400131cc:	int3   
   1400131cd:	int3   
   1400131ce:	int3   
   1400131cf:	int3   
   1400131d0:	mov    QWORD PTR [rcx],rdx
   1400131d3:	mov    QWORD PTR [rcx+0x8],r8
   1400131d7:	mov    rax,rcx
   1400131da:	ret    
   1400131db:	int3   
   1400131dc:	int3   
   1400131dd:	int3   
   1400131de:	int3   
   1400131df:	int3   
   1400131e0:	mov    QWORD PTR [rcx],rdx
   1400131e3:	mov    QWORD PTR [rcx+0x8],r8
   1400131e7:	mov    QWORD PTR [rcx+0x10],r9
   1400131eb:	mov    rax,rcx
   1400131ee:	ret    
   1400131ef:	int3   
   1400131f0:	rex push rbx
   1400131f2:	sub    rsp,0x20
   1400131f6:	mov    rbx,rcx
   1400131f9:	mov    rcx,rdx
   1400131fc:	call   0x140021a50
   140013201:	mov    DWORD PTR [rbx],eax
   140013203:	mov    rax,rbx
   140013206:	add    rsp,0x20
   14001320a:	pop    rbx
   14001320b:	ret    
   14001320c:	int3   
   14001320d:	int3   
   14001320e:	int3   
   14001320f:	int3   
   140013210:	mov    QWORD PTR [rsp+0x8],rbx
   140013215:	movzx  r10d,dx
   140013219:	movzx  eax,r8w
   14001321d:	mov    rbx,rcx
   140013220:	sub    r8w,0x3
   140013225:	mov    edx,0xe
   14001322a:	sub    edx,eax
   14001322c:	mov    eax,0x2aaaaaab
   140013231:	imul   edx
   140013233:	sar    edx,1
   140013235:	mov    eax,edx
   140013237:	shr    eax,0x1f
   14001323a:	add    edx,eax
   14001323c:	mov    eax,0x12c0
   140013241:	sub    r10w,dx
   140013245:	add    r10w,ax
   140013249:	movzx  eax,dx
   14001324c:	add    ax,ax
   14001324f:	movzx  r11d,r10w
   140013253:	add    dx,ax
   140013256:	shl    dx,0x2
   14001325a:	add    dx,r8w
   14001325e:	movzx  eax,dx
   140013261:	imul   ecx,eax,0x99
   140013267:	mov    eax,0x66666667
   14001326c:	add    ecx,0x2
   14001326f:	imul   ecx
   140013271:	mov    ecx,edx
   140013273:	sar    ecx,1
   140013275:	mov    eax,ecx
   140013277:	shr    eax,0x1f
   14001327a:	add    ecx,eax
   14001327c:	mov    eax,0x51eb851f
   140013281:	imul   r11d
   140013284:	mov    eax,0x51eb851f
   140013289:	sar    edx,0x7
   14001328c:	mov    r8d,edx
   14001328f:	add    edx,ecx
   140013291:	movzx  ecx,r9w
   140013295:	shr    r8d,0x1f
   140013299:	add    ecx,0xffff82d3
   14001329f:	add    r8d,edx
   1400132a2:	imul   r11d
   1400132a5:	sar    edx,0x5
   1400132a8:	mov    eax,edx
   1400132aa:	shr    eax,0x1f
   1400132ad:	add    edx,eax
   1400132af:	sub    r8d,edx
   1400132b2:	imul   eax,r11d,0x16d
   1400132b9:	add    r8d,eax
   1400132bc:	shr    r11d,0x2
   1400132c0:	add    r8d,r11d
   1400132c3:	mov    rax,rbx
   1400132c6:	add    ecx,r8d
   1400132c9:	mov    DWORD PTR [rbx],ecx
   1400132cb:	mov    rbx,QWORD PTR [rsp+0x8]
   1400132d0:	ret    
   1400132d1:	int3   
   1400132d2:	int3   
   1400132d3:	int3   
   1400132d4:	int3   
   1400132d5:	int3   
   1400132d6:	int3   
   1400132d7:	int3   
   1400132d8:	int3   
   1400132d9:	int3   
   1400132da:	int3   
   1400132db:	int3   
   1400132dc:	int3   
   1400132dd:	int3   
   1400132de:	int3   
   1400132df:	int3   
   1400132e0:	mov    QWORD PTR [rcx],rdx
   1400132e3:	mov    rax,rcx
   1400132e6:	ret    
   1400132e7:	int3   
   1400132e8:	int3   
   1400132e9:	int3   
   1400132ea:	int3   
   1400132eb:	int3   
   1400132ec:	int3   
   1400132ed:	int3   
   1400132ee:	int3   
   1400132ef:	int3   
   1400132f0:	mov    QWORD PTR [rcx],rdx
   1400132f3:	mov    rax,rcx
   1400132f6:	ret    
   1400132f7:	int3   
   1400132f8:	int3   
   1400132f9:	int3   
   1400132fa:	int3   
   1400132fb:	int3   
   1400132fc:	int3   
   1400132fd:	int3   
   1400132fe:	int3   
   1400132ff:	int3   
   140013300:	xor    eax,eax
   140013302:	mov    QWORD PTR [rcx],rax
   140013305:	mov    QWORD PTR [rcx+0x8],rax
   140013309:	mov    rax,rcx
   14001330c:	ret    
   14001330d:	int3   
   14001330e:	int3   
   14001330f:	int3   
   140013310:	mov    QWORD PTR [rcx],rdx
   140013313:	mov    rax,rcx
   140013316:	ret    
   140013317:	int3   
   140013318:	int3   
   140013319:	int3   
   14001331a:	int3   
   14001331b:	int3   
   14001331c:	int3   
   14001331d:	int3   
   14001331e:	int3   
   14001331f:	int3   
   140013320:	mov    QWORD PTR [rcx],rdx
   140013323:	mov    rax,rcx
   140013326:	ret    
   140013327:	int3   
   140013328:	int3   
   140013329:	int3   
   14001332a:	int3   
   14001332b:	int3   
   14001332c:	int3   
   14001332d:	int3   
   14001332e:	int3   
   14001332f:	int3   
   140013330:	mov    DWORD PTR [rcx],edx
   140013332:	mov    rax,rcx
   140013335:	ret    
   140013336:	int3   
   140013337:	int3   
   140013338:	int3   
   140013339:	int3   
   14001333a:	int3   
   14001333b:	int3   
   14001333c:	int3   
   14001333d:	int3   
   14001333e:	int3   
   14001333f:	int3   
   140013340:	mov    QWORD PTR [rsp+0x8],rcx
   140013345:	push   rdi
   140013346:	sub    rsp,0x30
   14001334a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140013353:	mov    QWORD PTR [rsp+0x48],rbx
   140013358:	mov    rdi,rdx
   14001335b:	mov    rbx,rcx
   14001335e:	call   QWORD PTR [rip+0x230e4]        # 0x140036448
   140013364:	lea    rax,[rip+0x2773d]        # 0x14003aaa8
   14001336b:	mov    QWORD PTR [rbx],rax
   14001336e:	test   rdi,rdi
   140013371:	je     0x140013377
   140013373:	add    rdi,0x18
   140013377:	lea    rax,[rip+0x274ba]        # 0x14003a838
   14001337e:	mov    QWORD PTR [rbx+0x18],rax
   140013382:	mov    rcx,QWORD PTR [rdi+0x8]
   140013386:	mov    QWORD PTR [rbx+0x20],rcx
   14001338a:	test   rcx,rcx
   14001338d:	je     0x140013395
   14001338f:	mov    rax,QWORD PTR [rcx]
   140013392:	call   QWORD PTR [rax+0x18]
   140013395:	mov    rax,QWORD PTR [rdi+0x10]
   140013399:	mov    QWORD PTR [rbx+0x28],rax
   14001339d:	mov    rax,QWORD PTR [rdi+0x18]
   1400133a1:	mov    QWORD PTR [rbx+0x30],rax
   1400133a5:	mov    eax,DWORD PTR [rdi+0x20]
   1400133a8:	mov    DWORD PTR [rbx+0x38],eax
   1400133ab:	lea    rax,[rip+0x295ae]        # 0x14003c960
   1400133b2:	mov    QWORD PTR [rbx],rax
   1400133b5:	lea    rax,[rip+0x295bc]        # 0x14003c978
   1400133bc:	mov    QWORD PTR [rbx+0x18],rax
   1400133c0:	mov    rax,rbx
   1400133c3:	mov    rbx,QWORD PTR [rsp+0x48]
   1400133c8:	add    rsp,0x30
   1400133cc:	pop    rdi
   1400133cd:	ret    
   1400133ce:	int3   
   1400133cf:	int3   
   1400133d0:	rex push rbx
   1400133d2:	sub    rsp,0x20
   1400133d6:	mov    rbx,rcx
   1400133d9:	call   QWORD PTR [rip+0x23069]        # 0x140036448
   1400133df:	xor    eax,eax
   1400133e1:	mov    QWORD PTR [rbx+0x20],rax
   1400133e5:	mov    QWORD PTR [rbx+0x28],rax
   1400133e9:	mov    QWORD PTR [rbx+0x30],rax
   1400133ed:	lea    rax,[rip+0x2956c]        # 0x14003c960
   1400133f4:	mov    DWORD PTR [rbx+0x38],0xffffffff
   1400133fb:	mov    QWORD PTR [rbx],rax
   1400133fe:	lea    rax,[rip+0x29573]        # 0x14003c978
   140013405:	mov    QWORD PTR [rbx+0x18],rax
   140013409:	mov    rax,rbx
   14001340c:	add    rsp,0x20
   140013410:	pop    rbx
   140013411:	ret    
   140013412:	int3   
   140013413:	int3   
   140013414:	int3   
   140013415:	int3   
   140013416:	int3   
   140013417:	int3   
   140013418:	int3   
   140013419:	int3   
   14001341a:	int3   
   14001341b:	int3   
   14001341c:	int3   
   14001341d:	int3   
   14001341e:	int3   
   14001341f:	int3   
   140013420:	mov    QWORD PTR [rsp+0x8],rcx
   140013425:	push   rdi
   140013426:	sub    rsp,0x30
   14001342a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140013433:	mov    QWORD PTR [rsp+0x48],rbx
   140013438:	mov    rdi,rdx
   14001343b:	mov    rbx,rcx
   14001343e:	call   QWORD PTR [rip+0x23004]        # 0x140036448
   140013444:	lea    rax,[rip+0x276a5]        # 0x14003aaf0
   14001344b:	mov    QWORD PTR [rbx],rax
   14001344e:	test   rdi,rdi
   140013451:	je     0x140013457
   140013453:	add    rdi,0x18
   140013457:	lea    rax,[rip+0x273da]        # 0x14003a838
   14001345e:	mov    QWORD PTR [rbx+0x18],rax
   140013462:	mov    rcx,QWORD PTR [rdi+0x8]
   140013466:	mov    QWORD PTR [rbx+0x20],rcx
   14001346a:	test   rcx,rcx
   14001346d:	je     0x140013475
   14001346f:	mov    rax,QWORD PTR [rcx]
   140013472:	call   QWORD PTR [rax+0x18]
   140013475:	mov    rax,QWORD PTR [rdi+0x10]
   140013479:	mov    QWORD PTR [rbx+0x28],rax
   14001347d:	mov    rax,QWORD PTR [rdi+0x18]
   140013481:	mov    QWORD PTR [rbx+0x30],rax
   140013485:	mov    eax,DWORD PTR [rdi+0x20]
   140013488:	mov    DWORD PTR [rbx+0x38],eax
   14001348b:	lea    rax,[rip+0x29b6e]        # 0x14003d000
   140013492:	mov    QWORD PTR [rbx],rax
   140013495:	lea    rax,[rip+0x29b7c]        # 0x14003d018
   14001349c:	mov    QWORD PTR [rbx+0x18],rax
   1400134a0:	mov    rax,rbx
   1400134a3:	mov    rbx,QWORD PTR [rsp+0x48]
   1400134a8:	add    rsp,0x30
   1400134ac:	pop    rdi
   1400134ad:	ret    
   1400134ae:	int3   
   1400134af:	int3   
   1400134b0:	rex push rbx
   1400134b2:	sub    rsp,0x20
   1400134b6:	mov    rbx,rcx
   1400134b9:	call   QWORD PTR [rip+0x22f89]        # 0x140036448
   1400134bf:	xor    eax,eax
   1400134c1:	mov    QWORD PTR [rbx+0x20],rax
   1400134c5:	mov    QWORD PTR [rbx+0x28],rax
   1400134c9:	mov    QWORD PTR [rbx+0x30],rax
   1400134cd:	lea    rax,[rip+0x29b2c]        # 0x14003d000
   1400134d4:	mov    DWORD PTR [rbx+0x38],0xffffffff
   1400134db:	mov    QWORD PTR [rbx],rax
   1400134de:	lea    rax,[rip+0x29b33]        # 0x14003d018
   1400134e5:	mov    QWORD PTR [rbx+0x18],rax
   1400134e9:	mov    rax,rbx
   1400134ec:	add    rsp,0x20
   1400134f0:	pop    rbx
   1400134f1:	ret    
   1400134f2:	int3   
   1400134f3:	int3   
   1400134f4:	int3   
   1400134f5:	int3   
   1400134f6:	int3   
   1400134f7:	int3   
   1400134f8:	int3   
   1400134f9:	int3   
   1400134fa:	int3   
   1400134fb:	int3   
   1400134fc:	int3   
   1400134fd:	int3   
   1400134fe:	int3   
   1400134ff:	int3   
   140013500:	mov    QWORD PTR [rsp+0x8],rcx
   140013505:	push   rdi
   140013506:	sub    rsp,0x30
   14001350a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140013513:	mov    QWORD PTR [rsp+0x48],rbx
   140013518:	mov    rdi,rdx
   14001351b:	mov    rbx,rcx
   14001351e:	call   QWORD PTR [rip+0x22f24]        # 0x140036448
   140013524:	lea    rax,[rip+0x2735d]        # 0x14003a888
   14001352b:	mov    QWORD PTR [rbx],rax
   14001352e:	test   rdi,rdi
   140013531:	je     0x140013537
   140013533:	add    rdi,0x18
   140013537:	lea    rax,[rip+0x272fa]        # 0x14003a838
   14001353e:	mov    QWORD PTR [rbx+0x18],rax
   140013542:	mov    rcx,QWORD PTR [rdi+0x8]
   140013546:	mov    QWORD PTR [rbx+0x20],rcx
   14001354a:	test   rcx,rcx
   14001354d:	je     0x140013555
   14001354f:	mov    rax,QWORD PTR [rcx]
   140013552:	call   QWORD PTR [rax+0x18]
   140013555:	mov    rax,QWORD PTR [rdi+0x10]
   140013559:	mov    QWORD PTR [rbx+0x28],rax
   14001355d:	mov    rax,QWORD PTR [rdi+0x18]
   140013561:	mov    QWORD PTR [rbx+0x30],rax
   140013565:	mov    eax,DWORD PTR [rdi+0x20]
   140013568:	mov    DWORD PTR [rbx+0x38],eax
   14001356b:	lea    rax,[rip+0x2a02e]        # 0x14003d5a0
   140013572:	mov    QWORD PTR [rbx],rax
   140013575:	lea    rax,[rip+0x2a03c]        # 0x14003d5b8
   14001357c:	mov    QWORD PTR [rbx+0x18],rax
   140013580:	mov    rax,rbx
   140013583:	mov    rbx,QWORD PTR [rsp+0x48]
   140013588:	add    rsp,0x30
   14001358c:	pop    rdi
   14001358d:	ret    
   14001358e:	int3   
   14001358f:	int3   
   140013590:	rex push rbx
   140013592:	sub    rsp,0x20
   140013596:	mov    rbx,rcx
   140013599:	call   QWORD PTR [rip+0x22ea9]        # 0x140036448
   14001359f:	xor    eax,eax
   1400135a1:	mov    QWORD PTR [rbx+0x20],rax
   1400135a5:	mov    QWORD PTR [rbx+0x28],rax
   1400135a9:	mov    QWORD PTR [rbx+0x30],rax
   1400135ad:	lea    rax,[rip+0x29fec]        # 0x14003d5a0
   1400135b4:	mov    DWORD PTR [rbx+0x38],0xffffffff
   1400135bb:	mov    QWORD PTR [rbx],rax
   1400135be:	lea    rax,[rip+0x29ff3]        # 0x14003d5b8
   1400135c5:	mov    QWORD PTR [rbx+0x18],rax
   1400135c9:	mov    rax,rbx
   1400135cc:	add    rsp,0x20
   1400135d0:	pop    rbx
   1400135d1:	ret    
   1400135d2:	int3   
   1400135d3:	int3   
   1400135d4:	int3   
   1400135d5:	int3   
   1400135d6:	int3   
   1400135d7:	int3   
   1400135d8:	int3   
   1400135d9:	int3   
   1400135da:	int3   
   1400135db:	int3   
   1400135dc:	int3   
   1400135dd:	int3   
   1400135de:	int3   
   1400135df:	int3   
   1400135e0:	mov    QWORD PTR [rsp+0x8],rcx
   1400135e5:	push   rdi
   1400135e6:	sub    rsp,0x30
   1400135ea:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400135f3:	mov    QWORD PTR [rsp+0x48],rbx
   1400135f8:	mov    rdi,rdx
   1400135fb:	mov    rbx,rcx
   1400135fe:	call   QWORD PTR [rip+0x22e1c]        # 0x140036420
   140013604:	lea    rax,[rip+0x272b5]        # 0x14003a8c0
   14001360b:	mov    QWORD PTR [rbx],rax
   14001360e:	mov    rax,QWORD PTR [rdi+0x18]
   140013612:	mov    QWORD PTR [rbx+0x18],rax
   140013616:	mov    rax,QWORD PTR [rdi+0x20]
   14001361a:	mov    QWORD PTR [rbx+0x20],rax
   14001361e:	lea    rax,[rip+0x27213]        # 0x14003a838
   140013625:	mov    QWORD PTR [rbx+0x28],rax
   140013629:	mov    rcx,QWORD PTR [rdi+0x30]
   14001362d:	mov    QWORD PTR [rbx+0x30],rcx
   140013631:	test   rcx,rcx
   140013634:	je     0x14001363c
   140013636:	mov    rax,QWORD PTR [rcx]
   140013639:	call   QWORD PTR [rax+0x18]
   14001363c:	mov    rax,QWORD PTR [rdi+0x38]
   140013640:	mov    QWORD PTR [rbx+0x38],rax
   140013644:	mov    rax,QWORD PTR [rdi+0x40]
   140013648:	mov    QWORD PTR [rbx+0x40],rax
   14001364c:	mov    eax,DWORD PTR [rdi+0x48]
   14001364f:	mov    DWORD PTR [rbx+0x48],eax
   140013652:	lea    rax,[rip+0x29fbf]        # 0x14003d618
   140013659:	mov    QWORD PTR [rbx],rax
   14001365c:	lea    rax,[rip+0x29fcd]        # 0x14003d630
   140013663:	mov    QWORD PTR [rbx+0x28],rax
   140013667:	mov    rax,rbx
   14001366a:	mov    rbx,QWORD PTR [rsp+0x48]
   14001366f:	add    rsp,0x30
   140013673:	pop    rdi
   140013674:	ret    
   140013675:	int3   
   140013676:	int3   
   140013677:	int3   
   140013678:	int3   
   140013679:	int3   
   14001367a:	int3   
   14001367b:	int3   
   14001367c:	int3   
   14001367d:	int3   
   14001367e:	int3   
   14001367f:	int3   
   140013680:	mov    QWORD PTR [rsp+0x8],rbx
   140013685:	push   rdi
   140013686:	sub    rsp,0x20
   14001368a:	mov    rbx,rdx
   14001368d:	mov    rdi,rcx
   140013690:	call   QWORD PTR [rip+0x22d8a]        # 0x140036420
   140013696:	lea    rax,[rip+0x27223]        # 0x14003a8c0
   14001369d:	mov    QWORD PTR [rdi],rax
   1400136a0:	mov    rax,QWORD PTR [rbx+0x18]
   1400136a4:	mov    QWORD PTR [rdi+0x18],rax
   1400136a8:	mov    rax,QWORD PTR [rbx+0x20]
   1400136ac:	mov    rbx,QWORD PTR [rsp+0x30]
   1400136b1:	mov    QWORD PTR [rdi+0x20],rax
   1400136b5:	xor    eax,eax
   1400136b7:	mov    QWORD PTR [rdi+0x30],rax
   1400136bb:	mov    QWORD PTR [rdi+0x38],rax
   1400136bf:	mov    QWORD PTR [rdi+0x40],rax
   1400136c3:	lea    rax,[rip+0x29f4e]        # 0x14003d618
   1400136ca:	mov    DWORD PTR [rdi+0x48],0xffffffff
   1400136d1:	mov    QWORD PTR [rdi],rax
   1400136d4:	lea    rax,[rip+0x29f55]        # 0x14003d630
   1400136db:	mov    QWORD PTR [rdi+0x28],rax
   1400136df:	mov    rax,rdi
   1400136e2:	add    rsp,0x20
   1400136e6:	pop    rdi
   1400136e7:	ret    
   1400136e8:	int3   
   1400136e9:	int3   
   1400136ea:	int3   
   1400136eb:	int3   
   1400136ec:	int3   
   1400136ed:	int3   
   1400136ee:	int3   
   1400136ef:	int3   
   1400136f0:	mov    QWORD PTR [rsp+0x8],rcx
   1400136f5:	push   rdi
   1400136f6:	sub    rsp,0x30
   1400136fa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140013703:	mov    QWORD PTR [rsp+0x48],rbx
   140013708:	mov    rdi,rdx
   14001370b:	mov    rbx,rcx
   14001370e:	call   QWORD PTR [rip+0x22d34]        # 0x140036448
   140013714:	lea    rax,[rip+0x26f95]        # 0x14003a6b0
   14001371b:	mov    QWORD PTR [rbx],rax
   14001371e:	movups xmm0,XMMWORD PTR [rdi+0x18]
   140013722:	movups XMMWORD PTR [rbx+0x18],xmm0
   140013726:	lea    rax,[rip+0x270ab]        # 0x14003a7d8
   14001372d:	mov    QWORD PTR [rbx],rax
   140013730:	lea    rax,[rip+0x27101]        # 0x14003a838
   140013737:	mov    QWORD PTR [rbx+0x28],rax
   14001373b:	mov    rcx,QWORD PTR [rdi+0x30]
   14001373f:	mov    QWORD PTR [rbx+0x30],rcx
   140013743:	test   rcx,rcx
   140013746:	je     0x14001374e
   140013748:	mov    rax,QWORD PTR [rcx]
   14001374b:	call   QWORD PTR [rax+0x18]
   14001374e:	mov    rax,QWORD PTR [rdi+0x38]
   140013752:	mov    QWORD PTR [rbx+0x38],rax
   140013756:	mov    rax,QWORD PTR [rdi+0x40]
   14001375a:	mov    QWORD PTR [rbx+0x40],rax
   14001375e:	mov    eax,DWORD PTR [rdi+0x48]
   140013761:	mov    DWORD PTR [rbx+0x48],eax
   140013764:	lea    rax,[rip+0x2c10d]        # 0x14003f878
   14001376b:	mov    QWORD PTR [rbx],rax
   14001376e:	lea    rax,[rip+0x2c11b]        # 0x14003f890
   140013775:	mov    QWORD PTR [rbx+0x28],rax
   140013779:	mov    rax,rbx
   14001377c:	mov    rbx,QWORD PTR [rsp+0x48]
   140013781:	add    rsp,0x30
   140013785:	pop    rdi
   140013786:	ret    
   140013787:	int3   
   140013788:	int3   
   140013789:	int3   
   14001378a:	int3   
   14001378b:	int3   
   14001378c:	int3   
   14001378d:	int3   
   14001378e:	int3   
   14001378f:	int3   
   140013790:	mov    QWORD PTR [rsp+0x8],rbx
   140013795:	push   rdi
   140013796:	sub    rsp,0x20
   14001379a:	mov    rbx,rdx
   14001379d:	mov    rdi,rcx
   1400137a0:	call   QWORD PTR [rip+0x22ca2]        # 0x140036448
   1400137a6:	lea    rax,[rip+0x26f03]        # 0x14003a6b0
   1400137ad:	mov    QWORD PTR [rdi],rax
   1400137b0:	xor    eax,eax
   1400137b2:	movups xmm0,XMMWORD PTR [rbx+0x18]
   1400137b6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400137bb:	movups XMMWORD PTR [rdi+0x18],xmm0
   1400137bf:	mov    QWORD PTR [rdi+0x30],rax
   1400137c3:	mov    QWORD PTR [rdi+0x38],rax
   1400137c7:	mov    QWORD PTR [rdi+0x40],rax
   1400137cb:	lea    rax,[rip+0x2c0a6]        # 0x14003f878
   1400137d2:	mov    DWORD PTR [rdi+0x48],0xffffffff
   1400137d9:	mov    QWORD PTR [rdi],rax
   1400137dc:	lea    rax,[rip+0x2c0ad]        # 0x14003f890
   1400137e3:	mov    QWORD PTR [rdi+0x28],rax
   1400137e7:	mov    rax,rdi
   1400137ea:	add    rsp,0x20
   1400137ee:	pop    rdi
   1400137ef:	ret    
   1400137f0:	mov    QWORD PTR [rsp+0x8],rcx
   1400137f5:	push   rdi
   1400137f6:	sub    rsp,0x30
   1400137fa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140013803:	mov    QWORD PTR [rsp+0x48],rbx
   140013808:	mov    rdi,rdx
   14001380b:	mov    rbx,rcx
   14001380e:	call   QWORD PTR [rip+0x22c34]        # 0x140036448
   140013814:	lea    rax,[rip+0x26e0d]        # 0x14003a628
   14001381b:	mov    QWORD PTR [rbx],rax
   14001381e:	test   rdi,rdi
   140013821:	je     0x140013827
   140013823:	add    rdi,0x18
   140013827:	lea    rax,[rip+0x2700a]        # 0x14003a838
   14001382e:	mov    QWORD PTR [rbx+0x18],rax
   140013832:	mov    rcx,QWORD PTR [rdi+0x8]
   140013836:	mov    QWORD PTR [rbx+0x20],rcx
   14001383a:	test   rcx,rcx
   14001383d:	je     0x140013845
   14001383f:	mov    rax,QWORD PTR [rcx]
   140013842:	call   QWORD PTR [rax+0x18]
   140013845:	mov    rax,QWORD PTR [rdi+0x10]
   140013849:	mov    QWORD PTR [rbx+0x28],rax
   14001384d:	mov    rax,QWORD PTR [rdi+0x18]
   140013851:	mov    QWORD PTR [rbx+0x30],rax
   140013855:	mov    eax,DWORD PTR [rdi+0x20]
   140013858:	mov    DWORD PTR [rbx+0x38],eax
   14001385b:	lea    rax,[rip+0x29726]        # 0x14003cf88
   140013862:	mov    QWORD PTR [rbx],rax
   140013865:	lea    rax,[rip+0x29734]        # 0x14003cfa0
   14001386c:	mov    QWORD PTR [rbx+0x18],rax
   140013870:	mov    rax,rbx
   140013873:	mov    rbx,QWORD PTR [rsp+0x48]
   140013878:	add    rsp,0x30
   14001387c:	pop    rdi
   14001387d:	ret    
   14001387e:	int3   
   14001387f:	int3   
   140013880:	rex push rbx
   140013882:	sub    rsp,0x20
   140013886:	mov    rbx,rcx
   140013889:	call   QWORD PTR [rip+0x22bb9]        # 0x140036448
   14001388f:	xor    eax,eax
   140013891:	mov    QWORD PTR [rbx+0x20],rax
   140013895:	mov    QWORD PTR [rbx+0x28],rax
   140013899:	mov    QWORD PTR [rbx+0x30],rax
   14001389d:	lea    rax,[rip+0x296e4]        # 0x14003cf88
   1400138a4:	mov    DWORD PTR [rbx+0x38],0xffffffff
   1400138ab:	mov    QWORD PTR [rbx],rax
   1400138ae:	lea    rax,[rip+0x296eb]        # 0x14003cfa0
   1400138b5:	mov    QWORD PTR [rbx+0x18],rax
   1400138b9:	mov    rax,rbx
   1400138bc:	add    rsp,0x20
   1400138c0:	pop    rbx
   1400138c1:	ret    
   1400138c2:	int3   
   1400138c3:	int3   
   1400138c4:	int3   
   1400138c5:	int3   
   1400138c6:	int3   
   1400138c7:	int3   
   1400138c8:	int3   
   1400138c9:	int3   
   1400138ca:	int3   
   1400138cb:	int3   
   1400138cc:	int3   
   1400138cd:	int3   
   1400138ce:	int3   
   1400138cf:	int3   
   1400138d0:	mov    QWORD PTR [rsp+0x8],rcx
   1400138d5:	push   rdi
   1400138d6:	sub    rsp,0x30
   1400138da:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400138e3:	mov    QWORD PTR [rsp+0x48],rbx
   1400138e8:	mov    rdi,rdx
   1400138eb:	mov    rbx,rcx
   1400138ee:	call   QWORD PTR [rip+0x22b54]        # 0x140036448
   1400138f4:	lea    rax,[rip+0x26d15]        # 0x14003a610
   1400138fb:	mov    QWORD PTR [rbx],rax
   1400138fe:	test   rdi,rdi
   140013901:	je     0x140013907
   140013903:	add    rdi,0x18
   140013907:	lea    rax,[rip+0x26f2a]        # 0x14003a838
   14001390e:	mov    QWORD PTR [rbx+0x18],rax
   140013912:	mov    rcx,QWORD PTR [rdi+0x8]
   140013916:	mov    QWORD PTR [rbx+0x20],rcx
   14001391a:	test   rcx,rcx
   14001391d:	je     0x140013925
   14001391f:	mov    rax,QWORD PTR [rcx]
   140013922:	call   QWORD PTR [rax+0x18]
   140013925:	mov    rax,QWORD PTR [rdi+0x10]
   140013929:	mov    QWORD PTR [rbx+0x28],rax
   14001392d:	mov    rax,QWORD PTR [rdi+0x18]
   140013931:	mov    QWORD PTR [rbx+0x30],rax
   140013935:	mov    eax,DWORD PTR [rdi+0x20]
   140013938:	mov    DWORD PTR [rbx+0x38],eax
   14001393b:	lea    rax,[rip+0x2ba9e]        # 0x14003f3e0
   140013942:	mov    QWORD PTR [rbx],rax
   140013945:	lea    rax,[rip+0x2baac]        # 0x14003f3f8
   14001394c:	mov    QWORD PTR [rbx+0x18],rax
   140013950:	mov    rax,rbx
   140013953:	mov    rbx,QWORD PTR [rsp+0x48]
   140013958:	add    rsp,0x30
   14001395c:	pop    rdi
   14001395d:	ret    
   14001395e:	int3   
   14001395f:	int3   
   140013960:	rex push rbx
   140013962:	sub    rsp,0x20
   140013966:	mov    rbx,rcx
   140013969:	call   QWORD PTR [rip+0x22ad9]        # 0x140036448
   14001396f:	xor    eax,eax
   140013971:	mov    QWORD PTR [rbx+0x20],rax
   140013975:	mov    QWORD PTR [rbx+0x28],rax
   140013979:	mov    QWORD PTR [rbx+0x30],rax
   14001397d:	lea    rax,[rip+0x2ba5c]        # 0x14003f3e0
   140013984:	mov    DWORD PTR [rbx+0x38],0xffffffff
   14001398b:	mov    QWORD PTR [rbx],rax
   14001398e:	lea    rax,[rip+0x2ba63]        # 0x14003f3f8
   140013995:	mov    QWORD PTR [rbx+0x18],rax
   140013999:	mov    rax,rbx
   14001399c:	add    rsp,0x20
   1400139a0:	pop    rbx
   1400139a1:	ret    
   1400139a2:	int3   
   1400139a3:	int3   
   1400139a4:	int3   
   1400139a5:	int3   
   1400139a6:	int3   
   1400139a7:	int3   
   1400139a8:	int3   
   1400139a9:	int3   
   1400139aa:	int3   
   1400139ab:	int3   
   1400139ac:	int3   
   1400139ad:	int3   
   1400139ae:	int3   
   1400139af:	int3   
   1400139b0:	mov    QWORD PTR [rsp+0x8],rcx
   1400139b5:	push   rdi
   1400139b6:	sub    rsp,0x30
   1400139ba:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400139c3:	mov    QWORD PTR [rsp+0x48],rbx
   1400139c8:	mov    QWORD PTR [rsp+0x50],rsi
   1400139cd:	mov    rsi,rdx
   1400139d0:	mov    rbx,rcx
   1400139d3:	call   QWORD PTR [rip+0x22a6f]        # 0x140036448
   1400139d9:	nop
   1400139da:	lea    rax,[rip+0x26faf]        # 0x14003a990
   1400139e1:	mov    QWORD PTR [rbx],rax
   1400139e4:	mov    rcx,QWORD PTR [rsi+0x18]
   1400139e8:	xor    edi,edi
   1400139ea:	test   rcx,rcx
   1400139ed:	je     0x1400139f7
   1400139ef:	mov    rax,QWORD PTR [rcx]
   1400139f2:	call   QWORD PTR [rax+0x10]
   1400139f5:	jmp    0x1400139fa
   1400139f7:	mov    rax,rdi
   1400139fa:	mov    QWORD PTR [rbx+0x18],rax
   1400139fe:	test   rsi,rsi
   140013a01:	je     0x140013a07
   140013a03:	lea    rdi,[rsi+0x20]
   140013a07:	lea    rax,[rip+0x26e2a]        # 0x14003a838
   140013a0e:	mov    QWORD PTR [rbx+0x20],rax
   140013a12:	mov    rcx,QWORD PTR [rdi+0x8]
   140013a16:	mov    QWORD PTR [rbx+0x28],rcx
   140013a1a:	test   rcx,rcx
   140013a1d:	je     0x140013a25
   140013a1f:	mov    rax,QWORD PTR [rcx]
   140013a22:	call   QWORD PTR [rax+0x18]
   140013a25:	mov    rax,QWORD PTR [rdi+0x10]
   140013a29:	mov    QWORD PTR [rbx+0x30],rax
   140013a2d:	mov    rax,QWORD PTR [rdi+0x18]
   140013a31:	mov    QWORD PTR [rbx+0x38],rax
   140013a35:	mov    eax,DWORD PTR [rdi+0x20]
   140013a38:	mov    DWORD PTR [rbx+0x40],eax
   140013a3b:	lea    rax,[rip+0x2b4ce]        # 0x14003ef10
   140013a42:	mov    QWORD PTR [rbx],rax
   140013a45:	lea    rax,[rip+0x2b4dc]        # 0x14003ef28
   140013a4c:	mov    QWORD PTR [rbx+0x20],rax
   140013a50:	mov    rax,rbx
   140013a53:	mov    rbx,QWORD PTR [rsp+0x48]
   140013a58:	mov    rsi,QWORD PTR [rsp+0x50]
   140013a5d:	add    rsp,0x30
   140013a61:	pop    rdi
   140013a62:	ret    
   140013a63:	int3   
   140013a64:	int3   
   140013a65:	int3   
   140013a66:	int3   
   140013a67:	int3   
   140013a68:	int3   
   140013a69:	int3   
   140013a6a:	int3   
   140013a6b:	int3   
   140013a6c:	int3   
   140013a6d:	int3   
   140013a6e:	int3   
   140013a6f:	int3   
   140013a70:	mov    QWORD PTR [rsp+0x8],rcx
   140013a75:	push   rdi
   140013a76:	sub    rsp,0x30
   140013a7a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140013a83:	mov    QWORD PTR [rsp+0x48],rbx
   140013a88:	mov    rbx,rdx
   140013a8b:	mov    rdi,rcx
   140013a8e:	call   QWORD PTR [rip+0x229b4]        # 0x140036448
   140013a94:	nop
   140013a95:	lea    rax,[rip+0x26ef4]        # 0x14003a990
   140013a9c:	mov    QWORD PTR [rdi],rax
   140013a9f:	mov    rcx,QWORD PTR [rbx+0x18]
   140013aa3:	xor    ebx,ebx
   140013aa5:	test   rcx,rcx
   140013aa8:	je     0x140013ab2
   140013aaa:	mov    rax,QWORD PTR [rcx]
   140013aad:	call   QWORD PTR [rax+0x10]
   140013ab0:	jmp    0x140013ab5
   140013ab2:	mov    rax,rbx
   140013ab5:	mov    QWORD PTR [rdi+0x18],rax
   140013ab9:	mov    QWORD PTR [rdi+0x28],rbx
   140013abd:	mov    QWORD PTR [rdi+0x30],rbx
   140013ac1:	mov    QWORD PTR [rdi+0x38],rbx
   140013ac5:	mov    DWORD PTR [rdi+0x40],0xffffffff
   140013acc:	lea    rax,[rip+0x2b43d]        # 0x14003ef10
   140013ad3:	mov    QWORD PTR [rdi],rax
   140013ad6:	lea    rax,[rip+0x2b44b]        # 0x14003ef28
   140013add:	mov    QWORD PTR [rdi+0x20],rax
   140013ae1:	mov    rax,rdi
   140013ae4:	mov    rbx,QWORD PTR [rsp+0x48]
   140013ae9:	add    rsp,0x30
   140013aed:	pop    rdi
   140013aee:	ret    
   140013aef:	int3   
   140013af0:	mov    QWORD PTR [rsp+0x8],rcx
   140013af5:	push   rdi
   140013af6:	sub    rsp,0x30
   140013afa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140013b03:	mov    QWORD PTR [rsp+0x48],rbx
   140013b08:	mov    QWORD PTR [rsp+0x50],rsi
   140013b0d:	mov    rsi,rdx
   140013b10:	mov    rbx,rcx
   140013b13:	call   QWORD PTR [rip+0x2292f]        # 0x140036448
   140013b19:	nop
   140013b1a:	lea    rax,[rip+0x26e87]        # 0x14003a9a8
   140013b21:	mov    QWORD PTR [rbx],rax
   140013b24:	mov    rcx,QWORD PTR [rsi+0x18]
   140013b28:	xor    edi,edi
   140013b2a:	test   rcx,rcx
   140013b2d:	je     0x140013b37
   140013b2f:	mov    rax,QWORD PTR [rcx]
   140013b32:	call   QWORD PTR [rax+0x10]
   140013b35:	jmp    0x140013b3a
   140013b37:	mov    rax,rdi
   140013b3a:	mov    QWORD PTR [rbx+0x18],rax
   140013b3e:	test   rsi,rsi
   140013b41:	je     0x140013b47
   140013b43:	lea    rdi,[rsi+0x20]
   140013b47:	lea    rax,[rip+0x26cea]        # 0x14003a838
   140013b4e:	mov    QWORD PTR [rbx+0x20],rax
   140013b52:	mov    rcx,QWORD PTR [rdi+0x8]
   140013b56:	mov    QWORD PTR [rbx+0x28],rcx
   140013b5a:	test   rcx,rcx
   140013b5d:	je     0x140013b65
   140013b5f:	mov    rax,QWORD PTR [rcx]
   140013b62:	call   QWORD PTR [rax+0x18]
   140013b65:	mov    rax,QWORD PTR [rdi+0x10]
   140013b69:	mov    QWORD PTR [rbx+0x30],rax
   140013b6d:	mov    rax,QWORD PTR [rdi+0x18]
   140013b71:	mov    QWORD PTR [rbx+0x38],rax
   140013b75:	mov    eax,DWORD PTR [rdi+0x20]
   140013b78:	mov    DWORD PTR [rbx+0x40],eax
   140013b7b:	lea    rax,[rip+0x2b906]        # 0x14003f488
   140013b82:	mov    QWORD PTR [rbx],rax
   140013b85:	lea    rax,[rip+0x2b914]        # 0x14003f4a0
   140013b8c:	mov    QWORD PTR [rbx+0x20],rax
   140013b90:	mov    rax,rbx
   140013b93:	mov    rbx,QWORD PTR [rsp+0x48]
   140013b98:	mov    rsi,QWORD PTR [rsp+0x50]
   140013b9d:	add    rsp,0x30
   140013ba1:	pop    rdi
   140013ba2:	ret    
   140013ba3:	int3   
   140013ba4:	int3   
   140013ba5:	int3   
   140013ba6:	int3   
   140013ba7:	int3   
   140013ba8:	int3   
   140013ba9:	int3   
   140013baa:	int3   
   140013bab:	int3   
   140013bac:	int3   
   140013bad:	int3   
   140013bae:	int3   
   140013baf:	int3   
   140013bb0:	mov    QWORD PTR [rsp+0x8],rcx
   140013bb5:	push   rdi
   140013bb6:	sub    rsp,0x30
   140013bba:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140013bc3:	mov    QWORD PTR [rsp+0x48],rbx
   140013bc8:	mov    rbx,rdx
   140013bcb:	mov    rdi,rcx
   140013bce:	call   QWORD PTR [rip+0x22874]        # 0x140036448
   140013bd4:	nop
   140013bd5:	lea    rax,[rip+0x26dcc]        # 0x14003a9a8
   140013bdc:	mov    QWORD PTR [rdi],rax
   140013bdf:	mov    rcx,QWORD PTR [rbx+0x18]
   140013be3:	xor    ebx,ebx
   140013be5:	test   rcx,rcx
   140013be8:	je     0x140013bf2
   140013bea:	mov    rax,QWORD PTR [rcx]
   140013bed:	call   QWORD PTR [rax+0x10]
   140013bf0:	jmp    0x140013bf5
   140013bf2:	mov    rax,rbx
   140013bf5:	mov    QWORD PTR [rdi+0x18],rax
   140013bf9:	mov    QWORD PTR [rdi+0x28],rbx
   140013bfd:	mov    QWORD PTR [rdi+0x30],rbx
   140013c01:	mov    QWORD PTR [rdi+0x38],rbx
   140013c05:	mov    DWORD PTR [rdi+0x40],0xffffffff
   140013c0c:	lea    rax,[rip+0x2b875]        # 0x14003f488
   140013c13:	mov    QWORD PTR [rdi],rax
   140013c16:	lea    rax,[rip+0x2b883]        # 0x14003f4a0
   140013c1d:	mov    QWORD PTR [rdi+0x20],rax
   140013c21:	mov    rax,rdi
   140013c24:	mov    rbx,QWORD PTR [rsp+0x48]
   140013c29:	add    rsp,0x30
   140013c2d:	pop    rdi
   140013c2e:	ret    
   140013c2f:	int3   
   140013c30:	mov    QWORD PTR [rsp+0x8],rcx
   140013c35:	push   rdi
   140013c36:	sub    rsp,0x30
   140013c3a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140013c43:	mov    QWORD PTR [rsp+0x48],rbx
   140013c48:	mov    rdi,rdx
   140013c4b:	mov    rbx,rcx
   140013c4e:	call   QWORD PTR [rip+0x227f4]        # 0x140036448
   140013c54:	lea    rax,[rip+0x269fd]        # 0x14003a658
   140013c5b:	mov    QWORD PTR [rbx],rax
   140013c5e:	test   rdi,rdi
   140013c61:	je     0x140013c67
   140013c63:	add    rdi,0x18
   140013c67:	lea    rax,[rip+0x26bca]        # 0x14003a838
   140013c6e:	mov    QWORD PTR [rbx+0x18],rax
   140013c72:	mov    rcx,QWORD PTR [rdi+0x8]
   140013c76:	mov    QWORD PTR [rbx+0x20],rcx
   140013c7a:	test   rcx,rcx
   140013c7d:	je     0x140013c85
   140013c7f:	mov    rax,QWORD PTR [rcx]
   140013c82:	call   QWORD PTR [rax+0x18]
   140013c85:	mov    rax,QWORD PTR [rdi+0x10]
   140013c89:	mov    QWORD PTR [rbx+0x28],rax
   140013c8d:	mov    rax,QWORD PTR [rdi+0x18]
   140013c91:	mov    QWORD PTR [rbx+0x30],rax
   140013c95:	mov    eax,DWORD PTR [rdi+0x20]
   140013c98:	mov    DWORD PTR [rbx+0x38],eax
   140013c9b:	lea    rax,[rip+0x28d36]        # 0x14003c9d8
   140013ca2:	mov    QWORD PTR [rbx],rax
   140013ca5:	lea    rax,[rip+0x28d44]        # 0x14003c9f0
   140013cac:	mov    QWORD PTR [rbx+0x18],rax
   140013cb0:	mov    rax,rbx
   140013cb3:	mov    rbx,QWORD PTR [rsp+0x48]
   140013cb8:	add    rsp,0x30
   140013cbc:	pop    rdi
   140013cbd:	ret    
   140013cbe:	int3   
   140013cbf:	int3   
   140013cc0:	rex push rbx
   140013cc2:	sub    rsp,0x20
   140013cc6:	mov    rbx,rcx
   140013cc9:	call   QWORD PTR [rip+0x22779]        # 0x140036448
   140013ccf:	xor    eax,eax
   140013cd1:	mov    QWORD PTR [rbx+0x20],rax
   140013cd5:	mov    QWORD PTR [rbx+0x28],rax
   140013cd9:	mov    QWORD PTR [rbx+0x30],rax
   140013cdd:	lea    rax,[rip+0x28cf4]        # 0x14003c9d8
   140013ce4:	mov    DWORD PTR [rbx+0x38],0xffffffff
   140013ceb:	mov    QWORD PTR [rbx],rax
   140013cee:	lea    rax,[rip+0x28cfb]        # 0x14003c9f0
   140013cf5:	mov    QWORD PTR [rbx+0x18],rax
   140013cf9:	mov    rax,rbx
   140013cfc:	add    rsp,0x20
   140013d00:	pop    rbx
   140013d01:	ret    
   140013d02:	int3   
   140013d03:	int3   
   140013d04:	int3   
   140013d05:	int3   
   140013d06:	int3   
   140013d07:	int3   
   140013d08:	int3   
   140013d09:	int3   
   140013d0a:	int3   
   140013d0b:	int3   
   140013d0c:	int3   
   140013d0d:	int3   
   140013d0e:	int3   
   140013d0f:	int3   
   140013d10:	mov    QWORD PTR [rsp+0x8],rcx
   140013d15:	push   rdi
   140013d16:	sub    rsp,0x30
   140013d1a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140013d23:	mov    QWORD PTR [rsp+0x48],rbx
   140013d28:	mov    rdi,rdx
   140013d2b:	mov    rbx,rcx
   140013d2e:	call   0x140016350
   140013d33:	lea    rax,[rip+0x26d56]        # 0x14003aa90
   140013d3a:	mov    QWORD PTR [rbx],rax
   140013d3d:	test   rdi,rdi
   140013d40:	je     0x140013d46
   140013d42:	add    rdi,0x60
   140013d46:	lea    rax,[rip+0x26aeb]        # 0x14003a838
   140013d4d:	mov    QWORD PTR [rbx+0x60],rax
   140013d51:	mov    rcx,QWORD PTR [rdi+0x8]
   140013d55:	mov    QWORD PTR [rbx+0x68],rcx
   140013d59:	test   rcx,rcx
   140013d5c:	je     0x140013d64
   140013d5e:	mov    rax,QWORD PTR [rcx]
   140013d61:	call   QWORD PTR [rax+0x18]
   140013d64:	mov    rax,QWORD PTR [rdi+0x10]
   140013d68:	mov    QWORD PTR [rbx+0x70],rax
   140013d6c:	mov    rax,QWORD PTR [rdi+0x18]
   140013d70:	mov    QWORD PTR [rbx+0x78],rax
   140013d74:	mov    eax,DWORD PTR [rdi+0x20]
   140013d77:	mov    DWORD PTR [rbx+0x80],eax
   140013d7d:	lea    rax,[rip+0x29324]        # 0x14003d0a8
   140013d84:	mov    QWORD PTR [rbx],rax
   140013d87:	lea    rax,[rip+0x29332]        # 0x14003d0c0
   140013d8e:	mov    QWORD PTR [rbx+0x60],rax
   140013d92:	mov    rax,rbx
   140013d95:	mov    rbx,QWORD PTR [rsp+0x48]
   140013d9a:	add    rsp,0x30
   140013d9e:	pop    rdi
   140013d9f:	ret    
   140013da0:	rex push rbx
   140013da2:	sub    rsp,0x20
   140013da6:	mov    rbx,rcx
   140013da9:	call   0x140016350
   140013dae:	xor    eax,eax
   140013db0:	mov    QWORD PTR [rbx+0x68],rax
   140013db4:	mov    QWORD PTR [rbx+0x70],rax
   140013db8:	mov    QWORD PTR [rbx+0x78],rax
   140013dbc:	lea    rax,[rip+0x292e5]        # 0x14003d0a8
   140013dc3:	mov    DWORD PTR [rbx+0x80],0xffffffff
   140013dcd:	mov    QWORD PTR [rbx],rax
   140013dd0:	lea    rax,[rip+0x292e9]        # 0x14003d0c0
   140013dd7:	mov    QWORD PTR [rbx+0x60],rax
   140013ddb:	mov    rax,rbx
   140013dde:	add    rsp,0x20
   140013de2:	pop    rbx
   140013de3:	ret    
   140013de4:	int3   
   140013de5:	int3   
   140013de6:	int3   
   140013de7:	int3   
   140013de8:	int3   
   140013de9:	int3   
   140013dea:	int3   
   140013deb:	int3   
   140013dec:	int3   
   140013ded:	int3   
   140013dee:	int3   
   140013def:	int3   
   140013df0:	rex push rbx
   140013df2:	sub    rsp,0x20
   140013df6:	mov    rbx,rcx
   140013df9:	call   0x140011720
   140013dfe:	lea    rax,[rip+0x2828b]        # 0x14003c090
   140013e05:	mov    QWORD PTR [rbx],rax
   140013e08:	lea    rax,[rip+0x28301]        # 0x14003c110
   140013e0f:	mov    QWORD PTR [rbx+0x68],rax
   140013e13:	mov    rax,rbx
   140013e16:	add    rsp,0x20
   140013e1a:	pop    rbx
   140013e1b:	ret    
   140013e1c:	int3   
   140013e1d:	int3   
   140013e1e:	int3   
   140013e1f:	int3   
   140013e20:	mov    QWORD PTR [rcx],0x0
   140013e27:	mov    QWORD PTR [rcx+0x8],r8
   140013e2b:	mov    DWORD PTR [rcx+0x10],edx
   140013e2e:	mov    rax,rcx
   140013e31:	ret    
   140013e32:	int3   
   140013e33:	int3   
   140013e34:	int3   
   140013e35:	int3   
   140013e36:	int3   
   140013e37:	int3   
   140013e38:	int3   
   140013e39:	int3   
   140013e3a:	int3   
   140013e3b:	int3   
   140013e3c:	int3   
   140013e3d:	int3   
   140013e3e:	int3   
   140013e3f:	int3   
   140013e40:	xor    eax,eax
   140013e42:	mov    QWORD PTR [rcx],rdx
   140013e45:	mov    QWORD PTR [rcx+0x8],rax
   140013e49:	mov    DWORD PTR [rcx+0x10],eax
   140013e4c:	mov    rax,rcx
   140013e4f:	ret    
   140013e50:	rex push rbx
   140013e52:	sub    rsp,0x20
   140013e56:	mov    QWORD PTR [rcx],0x0
   140013e5d:	mov    rax,QWORD PTR [rdx]
   140013e60:	mov    r8,rdx
   140013e63:	mov    rbx,rcx
   140013e66:	test   rax,rax
   140013e69:	je     0x140013e9c
   140013e6b:	mov    QWORD PTR [rcx],rax
   140013e6e:	test   al,0x1
   140013e70:	je     0x140013e8b
   140013e72:	movups xmm0,XMMWORD PTR [rdx+0x8]
   140013e76:	mov    rax,rcx
   140013e79:	movups XMMWORD PTR [rcx+0x8],xmm0
   140013e7d:	movups xmm1,XMMWORD PTR [rdx+0x18]
   140013e81:	movups XMMWORD PTR [rcx+0x18],xmm1
   140013e85:	add    rsp,0x20
   140013e89:	pop    rbx
   140013e8a:	ret    
   140013e8b:	lea    rdx,[rcx+0x8]
   140013e8f:	lea    rcx,[r8+0x8]
   140013e93:	and    rax,0xfffffffffffffffe
   140013e97:	xor    r8d,r8d
   140013e9a:	call   QWORD PTR [rax]
   140013e9c:	mov    rax,rbx
   140013e9f:	add    rsp,0x20
   140013ea3:	pop    rbx
   140013ea4:	ret    
   140013ea5:	int3   
   140013ea6:	int3   
   140013ea7:	int3   
   140013ea8:	int3   
   140013ea9:	int3   
   140013eaa:	int3   
   140013eab:	int3   
   140013eac:	int3   
   140013ead:	int3   
   140013eae:	int3   
   140013eaf:	int3   
   140013eb0:	mov    QWORD PTR [rcx],0x0
   140013eb7:	mov    rax,rcx
   140013eba:	ret    
   140013ebb:	int3   
   140013ebc:	int3   
   140013ebd:	int3   
   140013ebe:	int3   
   140013ebf:	int3   
   140013ec0:	mov    QWORD PTR [rcx],0x0
   140013ec7:	mov    rax,rcx
   140013eca:	ret    
   140013ecb:	int3   
   140013ecc:	int3   
   140013ecd:	int3   
   140013ece:	int3   
   140013ecf:	int3   
   140013ed0:	mov    QWORD PTR [rsp+0x8],rbx
   140013ed5:	push   rdi
   140013ed6:	sub    rsp,0x20
   140013eda:	mov    QWORD PTR [rcx],rdx
   140013edd:	cmp    DWORD PTR [rdx+0x14],0x5
   140013ee1:	mov    rbx,rdx
   140013ee4:	mov    rdi,rcx
   140013ee7:	jl     0x140013ef8
   140013ee9:	mov    rcx,rdx
   140013eec:	call   0x14002c670
   140013ef1:	mov    DWORD PTR [rbx+0x14],0x0
   140013ef8:	movsxd r8,DWORD PTR [rbx+0x14]
   140013efc:	mov    edx,DWORD PTR [rbx+r8*4]
   140013f00:	lea    eax,[r8+0x1]
   140013f04:	mov    DWORD PTR [rbx+0x14],eax
   140013f07:	mov    rbx,QWORD PTR [rsp+0x30]
   140013f0c:	mov    DWORD PTR [rdi+0x8],edx
   140013f0f:	mov    rax,rdi
   140013f12:	add    rsp,0x20
   140013f16:	pop    rdi
   140013f17:	ret    
   140013f18:	int3   
   140013f19:	int3   
   140013f1a:	int3   
   140013f1b:	int3   
   140013f1c:	int3   
   140013f1d:	int3   
   140013f1e:	int3   
   140013f1f:	int3   
   140013f20:	xor    eax,eax
   140013f22:	mov    QWORD PTR [rcx],rax
   140013f25:	mov    DWORD PTR [rcx+0x8],eax
   140013f28:	mov    rax,rcx
   140013f2b:	ret    
   140013f2c:	int3   
   140013f2d:	int3   
   140013f2e:	int3   
   140013f2f:	int3   
   140013f30:	rex push rbx
   140013f32:	sub    rsp,0x20
   140013f36:	mov    rbx,rcx
   140013f39:	mov    ecx,0x70
   140013f3e:	call   0x14003027c
   140013f43:	test   rax,rax
   140013f46:	jne    0x140013f4f
   140013f48:	call   QWORD PTR [rip+0x222ca]        # 0x140036218
   140013f4e:	int3   
   140013f4f:	mov    QWORD PTR [rbx],rax
   140013f52:	mov    rax,rbx
   140013f55:	add    rsp,0x20
   140013f59:	pop    rbx
   140013f5a:	ret    
   140013f5b:	int3   
   140013f5c:	int3   
   140013f5d:	int3   
   140013f5e:	int3   
   140013f5f:	int3   
   140013f60:	mov    QWORD PTR [rsp+0x8],rcx
   140013f65:	push   rbx
   140013f66:	sub    rsp,0x30
   140013f6a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140013f73:	mov    rbx,rcx
   140013f76:	lea    rax,[rip+0x2b9eb]        # 0x14003f968
   140013f7d:	mov    QWORD PTR [rcx],rax
   140013f80:	add    rcx,0x8
   140013f84:	mov    QWORD PTR [rcx+0x18],0xf
   140013f8c:	mov    QWORD PTR [rcx+0x10],0x0
   140013f94:	mov    BYTE PTR [rcx],0x0
   140013f97:	or     r9,0xffffffffffffffff
   140013f9b:	xor    r8d,r8d
   140013f9e:	call   0x14001ef20
   140013fa3:	nop
   140013fa4:	mov    rax,rbx
   140013fa7:	add    rsp,0x30
   140013fab:	pop    rbx
   140013fac:	ret    
   140013fad:	int3   
   140013fae:	int3   
   140013faf:	int3   
   140013fb0:	mov    QWORD PTR [rsp+0x8],rcx
   140013fb5:	push   rdi
   140013fb6:	sub    rsp,0x30
   140013fba:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140013fc3:	mov    QWORD PTR [rsp+0x48],rbx
   140013fc8:	mov    QWORD PTR [rsp+0x50],rsi
   140013fcd:	mov    rbx,rdx
   140013fd0:	mov    rsi,rcx
   140013fd3:	lea    rax,[rip+0x2b91e]        # 0x14003f8f8
   140013fda:	mov    QWORD PTR [rcx],rax
   140013fdd:	lea    rdi,[rcx+0x8]
   140013fe1:	mov    QWORD PTR [rdi+0x18],0xf
   140013fe9:	mov    QWORD PTR [rdi+0x10],0x0
   140013ff1:	mov    BYTE PTR [rdi],0x0
   140013ff4:	or     r9,0xffffffffffffffff
   140013ff8:	xor    r8d,r8d
   140013ffb:	mov    rcx,rdi
   140013ffe:	call   0x14001ef20
   140014003:	movzx  eax,BYTE PTR [rbx+0x20]
   140014007:	mov    BYTE PTR [rdi+0x20],al
   14001400a:	lea    rcx,[rdi+0x28]
   14001400e:	cmp    QWORD PTR [rdi+0x18],0x10
   140014013:	jb     0x140014018
   140014015:	mov    rdi,QWORD PTR [rdi]
   140014018:	mov    QWORD PTR [rcx],rdi
   14001401b:	mov    rax,QWORD PTR [rbx+0x28]
   14001401f:	cmp    QWORD PTR [rbx+0x18],0x10
   140014024:	jb     0x140014029
   140014026:	mov    rbx,QWORD PTR [rbx]
   140014029:	sub    rax,rbx
   14001402c:	add    QWORD PTR [rcx],rax
   14001402f:	mov    rax,rsi
   140014032:	mov    rbx,QWORD PTR [rsp+0x48]
   140014037:	mov    rsi,QWORD PTR [rsp+0x50]
   14001403c:	add    rsp,0x30
   140014040:	pop    rdi
   140014041:	ret    
   140014042:	int3   
   140014043:	int3   
   140014044:	int3   
   140014045:	int3   
   140014046:	int3   
   140014047:	int3   
   140014048:	int3   
   140014049:	int3   
   14001404a:	int3   
   14001404b:	int3   
   14001404c:	int3   
   14001404d:	int3   
   14001404e:	int3   
   14001404f:	int3   
   140014050:	mov    rax,rcx
   140014053:	ret    
   140014054:	int3   
   140014055:	int3   
   140014056:	int3   
   140014057:	int3   
   140014058:	int3   
   140014059:	int3   
   14001405a:	int3   
   14001405b:	int3   
   14001405c:	int3   
   14001405d:	int3   
   14001405e:	int3   
   14001405f:	int3   
   140014060:	rex push rbx
   140014062:	sub    rsp,0x20
   140014066:	mov    rbx,rcx
   140014069:	call   QWORD PTR [rip+0x22189]        # 0x1400361f8
   14001406f:	xor    ecx,ecx
   140014071:	mov    DWORD PTR [rbx+0x68],ecx
   140014074:	lea    rax,[rip+0x2a78d]        # 0x14003e808
   14001407b:	mov    QWORD PTR [rbx],rax
   14001407e:	mov    BYTE PTR [rbx+0x80],cl
   140014084:	mov    QWORD PTR [rbx+0x88],rcx
   14001408b:	mov    QWORD PTR [rbx+0x90],rcx
   140014092:	mov    QWORD PTR [rbx+0x98],rcx
   140014099:	mov    rax,rbx
   14001409c:	mov    QWORD PTR [rbx+0xa0],rcx
   1400140a3:	mov    DWORD PTR [rbx+0xa8],0x4
   1400140ad:	add    rsp,0x20
   1400140b1:	pop    rbx
   1400140b2:	ret    
   1400140b3:	int3   
   1400140b4:	int3   
   1400140b5:	int3   
   1400140b6:	int3   
   1400140b7:	int3   
   1400140b8:	int3   
   1400140b9:	int3   
   1400140ba:	int3   
   1400140bb:	int3   
   1400140bc:	int3   
   1400140bd:	int3   
   1400140be:	int3   
   1400140bf:	int3   
   1400140c0:	rex push rbx
   1400140c2:	sub    rsp,0x20
   1400140c6:	mov    rbx,rcx
   1400140c9:	call   QWORD PTR [rip+0x22129]        # 0x1400361f8
   1400140cf:	xor    ecx,ecx
   1400140d1:	mov    DWORD PTR [rbx+0x68],ecx
   1400140d4:	lea    rax,[rip+0x2aaa5]        # 0x14003eb80
   1400140db:	mov    QWORD PTR [rbx],rax
   1400140de:	mov    BYTE PTR [rbx+0x80],cl
   1400140e4:	mov    QWORD PTR [rbx+0x88],rcx
   1400140eb:	mov    QWORD PTR [rbx+0x90],rcx
   1400140f2:	mov    QWORD PTR [rbx+0x98],rcx
   1400140f9:	mov    rax,rbx
   1400140fc:	mov    QWORD PTR [rbx+0xa0],rcx
   140014103:	mov    DWORD PTR [rbx+0xa8],0x4
   14001410d:	add    rsp,0x20
   140014111:	pop    rbx
   140014112:	ret    
   140014113:	int3   
   140014114:	int3   
   140014115:	int3   
   140014116:	int3   
   140014117:	int3   
   140014118:	int3   
   140014119:	int3   
   14001411a:	int3   
   14001411b:	int3   
   14001411c:	int3   
   14001411d:	int3   
   14001411e:	int3   
   14001411f:	int3   
   140014120:	rex push rbx
   140014122:	sub    rsp,0x20
   140014126:	mov    rbx,rcx
   140014129:	call   QWORD PTR [rip+0x220c9]        # 0x1400361f8
   14001412f:	xor    ecx,ecx
   140014131:	mov    DWORD PTR [rbx+0x68],ecx
   140014134:	lea    rax,[rip+0x2b0d5]        # 0x14003f210
   14001413b:	mov    QWORD PTR [rbx],rax
   14001413e:	mov    BYTE PTR [rbx+0x71],cl
   140014141:	mov    QWORD PTR [rbx+0x78],rcx
   140014145:	mov    QWORD PTR [rbx+0x80],rcx
   14001414c:	mov    QWORD PTR [rbx+0x88],rcx
   140014153:	mov    rax,rbx
   140014156:	mov    QWORD PTR [rbx+0x90],rcx
   14001415d:	mov    DWORD PTR [rbx+0x98],0x4
   140014167:	add    rsp,0x20
   14001416b:	pop    rbx
   14001416c:	ret    
   14001416d:	int3   
   14001416e:	int3   
   14001416f:	int3   
   140014170:	rex push rbx
   140014172:	sub    rsp,0x20
   140014176:	mov    rbx,rcx
   140014179:	call   QWORD PTR [rip+0x22079]        # 0x1400361f8
   14001417f:	xor    ecx,ecx
   140014181:	mov    DWORD PTR [rbx+0x68],ecx
   140014184:	lea    rax,[rip+0x2a82d]        # 0x14003e9b8
   14001418b:	mov    QWORD PTR [rbx],rax
   14001418e:	mov    BYTE PTR [rbx+0x78],cl
   140014191:	mov    QWORD PTR [rbx+0x80],rcx
   140014198:	mov    QWORD PTR [rbx+0x88],rcx
   14001419f:	mov    QWORD PTR [rbx+0x90],rcx
   1400141a6:	mov    rax,rbx
   1400141a9:	mov    QWORD PTR [rbx+0x98],rcx
   1400141b0:	mov    DWORD PTR [rbx+0xa0],0x4
   1400141ba:	add    rsp,0x20
   1400141be:	pop    rbx
   1400141bf:	ret    
   1400141c0:	mov    QWORD PTR [rcx],rdx
   1400141c3:	mov    QWORD PTR [rcx+0x8],r8
   1400141c7:	mov    rax,rcx
   1400141ca:	ret    
   1400141cb:	int3   
   1400141cc:	int3   
   1400141cd:	int3   
   1400141ce:	int3   
   1400141cf:	int3   
   1400141d0:	mov    DWORD PTR [rcx],edx
   1400141d2:	mov    rax,rcx
   1400141d5:	ret    
   1400141d6:	int3   
   1400141d7:	int3   
   1400141d8:	int3   
   1400141d9:	int3   
   1400141da:	int3   
   1400141db:	int3   
   1400141dc:	int3   
   1400141dd:	int3   
   1400141de:	int3   
   1400141df:	int3   
   1400141e0:	mov    rax,QWORD PTR [rdx]
   1400141e3:	mov    QWORD PTR [rcx],rax
   1400141e6:	movzx  eax,BYTE PTR [rdx+0x8]
   1400141ea:	mov    BYTE PTR [rcx+0x8],al
   1400141ed:	movzx  eax,BYTE PTR [rdx+0xa]
   1400141f1:	mov    BYTE PTR [rcx+0xa],al
   1400141f4:	mov    eax,DWORD PTR [rdx+0xc]
   1400141f7:	mov    BYTE PTR [rcx+0x10],0x0
   1400141fb:	mov    DWORD PTR [rcx+0xc],eax
   1400141fe:	mov    rax,rcx
   140014201:	ret    
   140014202:	int3   
   140014203:	int3   
   140014204:	int3   
   140014205:	int3   
   140014206:	int3   
   140014207:	int3   
   140014208:	int3   
   140014209:	int3   
   14001420a:	int3   
   14001420b:	int3   
   14001420c:	int3   
   14001420d:	int3   
   14001420e:	int3   
   14001420f:	int3   
   140014210:	mov    rax,QWORD PTR [rdx]
   140014213:	mov    QWORD PTR [rcx],rax
   140014216:	mov    rax,rcx
   140014219:	ret    
   14001421a:	int3   
   14001421b:	int3   
   14001421c:	int3   
   14001421d:	int3   
   14001421e:	int3   
   14001421f:	int3   
   140014220:	mov    rax,QWORD PTR [rdx]
   140014223:	mov    QWORD PTR [rcx],rax
   140014226:	mov    rax,rcx
   140014229:	ret    
   14001422a:	int3   
   14001422b:	int3   
   14001422c:	int3   
   14001422d:	int3   
   14001422e:	int3   
   14001422f:	int3   
   140014230:	mov    rax,QWORD PTR [rdx]
   140014233:	mov    QWORD PTR [rcx],rax
   140014236:	mov    rax,rcx
   140014239:	ret    
   14001423a:	int3   
   14001423b:	int3   
   14001423c:	int3   
   14001423d:	int3   
   14001423e:	int3   
   14001423f:	int3   
   140014240:	mov    rax,QWORD PTR [rdx]
   140014243:	mov    QWORD PTR [rcx],rax
   140014246:	mov    rax,rcx
   140014249:	ret    
   14001424a:	int3   
   14001424b:	int3   
   14001424c:	int3   
   14001424d:	int3   
   14001424e:	int3   
   14001424f:	int3   
   140014250:	mov    rax,QWORD PTR [rdx]
   140014253:	mov    QWORD PTR [rcx],rax
   140014256:	mov    rax,rcx
   140014259:	ret    
   14001425a:	int3   
   14001425b:	int3   
   14001425c:	int3   
   14001425d:	int3   
   14001425e:	int3   
   14001425f:	int3   
   140014260:	mov    rax,QWORD PTR [rdx]
   140014263:	mov    QWORD PTR [rcx],rax
   140014266:	mov    rax,rcx
   140014269:	ret    
   14001426a:	int3   
   14001426b:	int3   
   14001426c:	int3   
   14001426d:	int3   
   14001426e:	int3   
   14001426f:	int3   
   140014270:	mov    rax,QWORD PTR [rdx]
   140014273:	mov    QWORD PTR [rcx],rax
   140014276:	mov    rax,rcx
   140014279:	ret    
   14001427a:	int3   
   14001427b:	int3   
   14001427c:	int3   
   14001427d:	int3   
   14001427e:	int3   
   14001427f:	int3   
   140014280:	mov    eax,0x1
   140014285:	mov    BYTE PTR [rcx],0x0
   140014288:	mov    QWORD PTR [rcx+0x8],rdx
   14001428c:	mov    WORD PTR [rcx+0x2],ax
   140014290:	mov    QWORD PTR [rcx+0x10],r8
   140014294:	mov    QWORD PTR [rcx+0x18],r9
   140014298:	mov    rax,rcx
   14001429b:	ret    
   14001429c:	int3   
   14001429d:	int3   
   14001429e:	int3   
   14001429f:	int3   
   1400142a0:	lea    rax,[rcx+0x1]
   1400142a4:	mov    QWORD PTR [rcx+0x8],rax
   1400142a8:	lea    rax,[rcx+0x3]
   1400142ac:	mov    QWORD PTR [rcx+0x10],rax
   1400142b0:	mov    rax,rcx
   1400142b3:	ret    
   1400142b4:	int3   
   1400142b5:	int3   
   1400142b6:	int3   
   1400142b7:	int3   
   1400142b8:	int3   
   1400142b9:	int3   
   1400142ba:	int3   
   1400142bb:	int3   
   1400142bc:	int3   
   1400142bd:	int3   
   1400142be:	int3   
   1400142bf:	int3   
   1400142c0:	mov    QWORD PTR [rcx],rdx
   1400142c3:	mov    QWORD PTR [rcx+0x8],r8
   1400142c7:	mov    rax,rcx
   1400142ca:	ret    
   1400142cb:	int3   
   1400142cc:	int3   
   1400142cd:	int3   
   1400142ce:	int3   
   1400142cf:	int3   
   1400142d0:	rex push rbx
   1400142d2:	sub    rsp,0x20
   1400142d6:	mov    rbx,rcx
   1400142d9:	call   QWORD PTR [rip+0x21f19]        # 0x1400361f8
   1400142df:	lea    rax,[rip+0x2857a]        # 0x14003c860
   1400142e6:	mov    QWORD PTR [rbx],rax
   1400142e9:	mov    rax,rbx
   1400142ec:	mov    DWORD PTR [rbx+0x68],0x0
   1400142f3:	add    rsp,0x20
   1400142f7:	pop    rbx
   1400142f8:	ret    
   1400142f9:	int3   
   1400142fa:	int3   
   1400142fb:	int3   
   1400142fc:	int3   
   1400142fd:	int3   
   1400142fe:	int3   
   1400142ff:	int3   
   140014300:	rex push rbx
   140014302:	sub    rsp,0x20
   140014306:	xor    eax,eax
   140014308:	xor    r8d,r8d
   14001430b:	xor    edx,edx
   14001430d:	mov    QWORD PTR [rcx],rax
   140014310:	mov    QWORD PTR [rcx+0x8],rax
   140014314:	mov    rbx,rcx
   140014317:	call   0x14001c4d0
   14001431c:	mov    QWORD PTR [rbx],rax
   14001431f:	mov    rax,rbx
   140014322:	add    rsp,0x20
   140014326:	pop    rbx
   140014327:	ret    
   140014328:	int3   
   140014329:	int3   
   14001432a:	int3   
   14001432b:	int3   
   14001432c:	int3   
   14001432d:	int3   
   14001432e:	int3   
   14001432f:	int3   
   140014330:	mov    QWORD PTR [rsp+0x8],rcx
   140014335:	push   rdi
   140014336:	sub    rsp,0x40
   14001433a:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140014343:	mov    QWORD PTR [rsp+0x58],rbx
   140014348:	mov    rbx,rdx
   14001434b:	mov    rdi,rcx
   14001434e:	xor    eax,eax
   140014350:	mov    QWORD PTR [rcx],rax
   140014353:	mov    QWORD PTR [rcx+0x8],rax
   140014357:	xor    r8d,r8d
   14001435a:	xor    edx,edx
   14001435c:	call   0x14001c530
   140014361:	mov    QWORD PTR [rdi],rax
   140014364:	mov    rdx,QWORD PTR [rax]
   140014367:	mov    r9,QWORD PTR [rbx+0x8]
   14001436b:	mov    r8,QWORD PTR [rbx]
   14001436e:	movzx  eax,BYTE PTR [rsp+0x50]
   140014373:	mov    rcx,rdi
   140014376:	mov    BYTE PTR [rsp+0x20],al
   14001437a:	call   0x140004790
   14001437f:	nop
   140014380:	mov    rax,rdi
   140014383:	mov    rbx,QWORD PTR [rsp+0x58]
   140014388:	add    rsp,0x40
   14001438c:	pop    rdi
   14001438d:	ret    
   14001438e:	int3   
   14001438f:	int3   
   140014390:	mov    QWORD PTR [rcx],rdx
   140014393:	mov    DWORD PTR [rcx+0x8],r8d
   140014397:	mov    rax,rcx
   14001439a:	ret    
   14001439b:	int3   
   14001439c:	int3   
   14001439d:	int3   
   14001439e:	int3   
   14001439f:	int3   
   1400143a0:	rex push rbx
   1400143a2:	sub    rsp,0x20
   1400143a6:	lea    rdx,[rip+0x28563]        # 0x14003c910
   1400143ad:	mov    rbx,rcx
   1400143b0:	call   0x14002b500
   1400143b5:	mov    rax,rbx
   1400143b8:	add    rsp,0x20
   1400143bc:	pop    rbx
   1400143bd:	ret    
   1400143be:	int3   
   1400143bf:	int3   
   1400143c0:	mov    rax,QWORD PTR [rdx]
   1400143c3:	mov    QWORD PTR [rcx],rax
   1400143c6:	mov    rax,rcx
   1400143c9:	ret    
   1400143ca:	int3   
   1400143cb:	int3   
   1400143cc:	int3   
   1400143cd:	int3   
   1400143ce:	int3   
   1400143cf:	int3   
   1400143d0:	mov    QWORD PTR [rcx],rdx
   1400143d3:	mov    rax,rcx
   1400143d6:	ret    
   1400143d7:	int3   
   1400143d8:	int3   
   1400143d9:	int3   
   1400143da:	int3   
   1400143db:	int3   
   1400143dc:	int3   
   1400143dd:	int3   
   1400143de:	int3   
   1400143df:	int3   
   1400143e0:	rex push rdi
   1400143e2:	sub    rsp,0x20
   1400143e6:	mov    rdi,rcx
   1400143e9:	mov    ecx,0x70
   1400143ee:	call   0x14003027c
   1400143f3:	test   rax,rax
   1400143f6:	jne    0x1400143ff
   1400143f8:	call   QWORD PTR [rip+0x21e1a]        # 0x140036218
   1400143fe:	int3   
   1400143ff:	mov    QWORD PTR [rsp+0x30],rbx
   140014404:	lea    rbx,[rdi+0x11]
   140014408:	mov    QWORD PTR [rdi+0x8],rax
   14001440c:	mov    rcx,rbx
   14001440f:	call   0x1400229b0
   140014414:	test   rbx,rbx
   140014417:	je     0x14001441f
   140014419:	lea    rax,[rbx-0x11]
   14001441d:	jmp    0x140014421
   14001441f:	xor    eax,eax
   140014421:	mov    rcx,QWORD PTR [rax+0x8]
   140014425:	test   rcx,rcx
   140014428:	je     0x14001442e
   14001442a:	add    rcx,0x60
   14001442e:	test   rbx,rbx
   140014431:	je     0x140014439
   140014433:	lea    rax,[rbx-0x11]
   140014437:	jmp    0x14001443b
   140014439:	xor    eax,eax
   14001443b:	mov    rax,QWORD PTR [rax+0x8]
   14001443f:	mov    QWORD PTR [rax+0x68],rcx
   140014443:	test   rbx,rbx
   140014446:	je     0x14001444e
   140014448:	lea    rax,[rbx-0x11]
   14001444c:	jmp    0x140014450
   14001444e:	xor    eax,eax
   140014450:	mov    rax,QWORD PTR [rax+0x8]
   140014454:	mov    rbx,QWORD PTR [rsp+0x30]
   140014459:	mov    QWORD PTR [rax+0x60],rcx
   14001445d:	mov    QWORD PTR [rdi+0x18],0x0
   140014465:	mov    rax,rdi
   140014468:	add    rsp,0x20
   14001446c:	pop    rdi
   14001446d:	ret    
   14001446e:	int3   
   14001446f:	int3   
   140014470:	mov    rax,rsp
   140014473:	mov    QWORD PTR [rax+0x8],rcx
   140014477:	push   rsi
   140014478:	push   rdi
   140014479:	push   r13
   14001447b:	push   r14
   14001447d:	push   r15
   14001447f:	sub    rsp,0x80
   140014486:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001448f:	mov    QWORD PTR [rax+0x10],rbx
   140014493:	mov    QWORD PTR [rax+0x18],rbp
   140014497:	mov    r15,rdx
   14001449a:	mov    r13,rcx
   14001449d:	mov    ecx,0x70
   1400144a2:	call   0x14003027c
   1400144a7:	test   rax,rax
   1400144aa:	jne    0x1400144b3
   1400144ac:	call   QWORD PTR [rip+0x21d66]        # 0x140036218
   1400144b2:	int3   
   1400144b3:	mov    QWORD PTR [r13+0x8],rax
   1400144b7:	xor    esi,esi
   1400144b9:	mov    QWORD PTR [r13+0x18],rsi
   1400144bd:	mov    rbx,rax
   1400144c0:	mov    rdi,QWORD PTR [r15+0x8]
   1400144c4:	add    r15,0x11
   1400144c8:	lea    rbp,[r15-0x11]
   1400144cc:	jne    0x1400144d0
   1400144ce:	mov    ebp,esi
   1400144d0:	mov    rbp,QWORD PTR [rbp+0x18]
   1400144d4:	mov    QWORD PTR [rsp+0x38],rbp
   1400144d9:	mov    QWORD PTR [rsp+0x48],rbp
   1400144de:	test   rbp,rbp
   1400144e1:	je     0x14001450d
   1400144e3:	movabs rax,0xfffffffffffffff
   1400144ed:	cmp    rbp,rax
   1400144f0:	ja     0x140014506
   1400144f2:	mov    rcx,rbp
   1400144f5:	shl    rcx,0x4
   1400144f9:	call   0x14003027c
   1400144fe:	mov    r14,rax
   140014501:	test   rax,rax
   140014504:	jne    0x140014510
   140014506:	call   QWORD PTR [rip+0x21d0c]        # 0x140036218
   14001450c:	int3   
   14001450d:	mov    r14,rsi
   140014510:	mov    QWORD PTR [rsp+0x50],r14
   140014515:	mov    QWORD PTR [rsp+0x58],rsi
   14001451a:	mov    QWORD PTR [rsp+0x60],rdi
   14001451f:	mov    QWORD PTR [rsp+0x68],rbx
   140014524:	mov    BYTE PTR [rsp+0x70],sil
   140014529:	test   r15,r15
   14001452c:	lea    rax,[r15-0x11]
   140014530:	jne    0x140014535
   140014532:	mov    rax,rsi
   140014535:	mov    rax,QWORD PTR [rax+0x8]
   140014539:	mov    rbx,QWORD PTR [rax+0x68]
   14001453d:	test   rbx,rbx
   140014540:	je     0x140014548
   140014542:	add    rbx,0xffffffffffffffa0
   140014546:	jmp    0x14001454b
   140014548:	mov    rbx,rsi
   14001454b:	test   r15,r15
   14001454e:	lea    rdi,[r15-0x11]
   140014552:	jne    0x140014557
   140014554:	mov    rdi,rsi
   140014557:	mov    rdi,QWORD PTR [rdi+0x8]
   14001455b:	cmp    rbx,rdi
   14001455e:	je     0x14001459c
   140014560:	mov    rdx,rbx
   140014563:	lea    rcx,[rsp+0x30]
   140014568:	call   0x1400201f0
   14001456d:	test   rbx,rbx
   140014570:	je     0x140014578
   140014572:	add    rbx,0x60
   140014576:	jmp    0x14001457b
   140014578:	mov    rbx,rsi
   14001457b:	mov    rbx,QWORD PTR [rbx+0x8]
   14001457f:	test   rbx,rbx
   140014582:	je     0x14001458a
   140014584:	add    rbx,0xffffffffffffffa0
   140014588:	jmp    0x14001458d
   14001458a:	mov    rbx,rsi
   14001458d:	cmp    rbx,rdi
   140014590:	jne    0x140014560
   140014592:	mov    r14,QWORD PTR [rsp+0x50]
   140014597:	mov    rbp,QWORD PTR [rsp+0x48]
   14001459c:	lea    rcx,[r13+0x11]
   1400145a0:	lea    r8,[rsp+0x30]
   1400145a5:	mov    rdx,r15
   1400145a8:	call   0x140021710
   1400145ad:	test   r15,r15
   1400145b0:	je     0x1400145b6
   1400145b2:	lea    rsi,[r15-0x11]
   1400145b6:	mov    rax,QWORD PTR [rsi+0x18]
   1400145ba:	mov    QWORD PTR [r13+0x18],rax
   1400145be:	test   rbp,rbp
   1400145c1:	je     0x1400145cc
   1400145c3:	mov    rcx,r14
   1400145c6:	call   0x140030282
   1400145cb:	nop
   1400145cc:	mov    rax,r13
   1400145cf:	lea    r11,[rsp+0x80]
   1400145d7:	mov    rbx,QWORD PTR [r11+0x38]
   1400145db:	mov    rbp,QWORD PTR [r11+0x40]
   1400145df:	mov    rsp,r11
   1400145e2:	pop    r15
   1400145e4:	pop    r14
   1400145e6:	pop    r13
   1400145e8:	pop    rdi
   1400145e9:	pop    rsi
   1400145ea:	ret    
   1400145eb:	int3   
   1400145ec:	int3   
   1400145ed:	int3   
   1400145ee:	int3   
   1400145ef:	int3   
   1400145f0:	mov    QWORD PTR [rcx],rdx
   1400145f3:	mov    rax,rcx
   1400145f6:	ret    
   1400145f7:	int3   
   1400145f8:	int3   
   1400145f9:	int3   
   1400145fa:	int3   
   1400145fb:	int3   
   1400145fc:	int3   
   1400145fd:	int3   
   1400145fe:	int3   
   1400145ff:	int3   
   140014600:	mov    QWORD PTR [rcx],rdx
   140014603:	mov    rax,rcx
   140014606:	ret    
   140014607:	int3   
   140014608:	int3   
   140014609:	int3   
   14001460a:	int3   
   14001460b:	int3   
   14001460c:	int3   
   14001460d:	int3   
   14001460e:	int3   
   14001460f:	int3   
   140014610:	mov    QWORD PTR [rsp+0x8],rcx
   140014615:	push   rdi
   140014616:	sub    rsp,0x30
   14001461a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140014623:	mov    QWORD PTR [rsp+0x48],rbx
   140014628:	mov    QWORD PTR [rsp+0x50],rsi
   14001462d:	movzx  edi,r9b
   140014631:	mov    rbx,rdx
   140014634:	mov    rsi,rcx
   140014637:	mov    rdx,r8
   14001463a:	call   QWORD PTR [rip+0x21c20]        # 0x140036260
   140014640:	nop
   140014641:	lea    rax,[rip+0x261a8]        # 0x14003a7f0
   140014648:	mov    QWORD PTR [rsi],rax
   14001464b:	movzx  r8d,dil
   14001464f:	mov    rdx,rbx
   140014652:	mov    rcx,rsi
   140014655:	call   0x14001cf50
   14001465a:	nop
   14001465b:	mov    rax,rsi
   14001465e:	mov    rbx,QWORD PTR [rsp+0x48]
   140014663:	mov    rsi,QWORD PTR [rsp+0x50]
   140014668:	add    rsp,0x30
   14001466c:	pop    rdi
   14001466d:	ret    
   14001466e:	int3   
   14001466f:	int3   
   140014670:	lea    rax,[rcx+0x8]
   140014674:	mov    BYTE PTR [rcx],0x0
   140014677:	test   rax,rax
   14001467a:	je     0x14001467f
   14001467c:	mov    QWORD PTR [rax],rdx
   14001467f:	mov    rax,rcx
   140014682:	mov    BYTE PTR [rcx],0x1
   140014685:	ret    
   140014686:	int3   
   140014687:	int3   
   140014688:	int3   
   140014689:	int3   
   14001468a:	int3   
   14001468b:	int3   
   14001468c:	int3   
   14001468d:	int3   
   14001468e:	int3   
   14001468f:	int3   
   140014690:	mov    BYTE PTR [rcx],0x0
   140014693:	mov    rax,rcx
   140014696:	ret    
   140014697:	int3   
   140014698:	int3   
   140014699:	int3   
   14001469a:	int3   
   14001469b:	int3   
   14001469c:	int3   
   14001469d:	int3   
   14001469e:	int3   
   14001469f:	int3   
   1400146a0:	lea    rax,[rcx+0x8]
   1400146a4:	mov    BYTE PTR [rcx],0x0
   1400146a7:	test   rax,rax
   1400146aa:	je     0x1400146af
   1400146ac:	mov    QWORD PTR [rax],rdx
   1400146af:	mov    rax,rcx
   1400146b2:	mov    BYTE PTR [rcx],0x1
   1400146b5:	ret    
   1400146b6:	int3   
   1400146b7:	int3   
   1400146b8:	int3   
   1400146b9:	int3   
   1400146ba:	int3   
   1400146bb:	int3   
   1400146bc:	int3   
   1400146bd:	int3   
   1400146be:	int3   
   1400146bf:	int3   
   1400146c0:	mov    BYTE PTR [rcx],0x0
   1400146c3:	mov    rax,rcx
   1400146c6:	ret    
   1400146c7:	int3   
   1400146c8:	int3   
   1400146c9:	int3   
   1400146ca:	int3   
   1400146cb:	int3   
   1400146cc:	int3   
   1400146cd:	int3   
   1400146ce:	int3   
   1400146cf:	int3   
   1400146d0:	rex push rbx
   1400146d2:	sub    rsp,0x20
   1400146d6:	mov    rbx,rcx
   1400146d9:	mov    BYTE PTR [rcx],0x0
   1400146dc:	add    rcx,0x8
   1400146e0:	je     0x1400146e7
   1400146e2:	call   0x140011010
   1400146e7:	mov    rax,rbx
   1400146ea:	mov    BYTE PTR [rbx],0x1
   1400146ed:	add    rsp,0x20
   1400146f1:	pop    rbx
   1400146f2:	ret    
   1400146f3:	int3   
   1400146f4:	int3   
   1400146f5:	int3   
   1400146f6:	int3   
   1400146f7:	int3   
   1400146f8:	int3   
   1400146f9:	int3   
   1400146fa:	int3   
   1400146fb:	int3   
   1400146fc:	int3   
   1400146fd:	int3   
   1400146fe:	int3   
   1400146ff:	int3   
   140014700:	rex push rbx
   140014702:	sub    rsp,0x30
   140014706:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001470f:	mov    rbx,rcx
   140014712:	mov    BYTE PTR [rcx],0x0
   140014715:	add    rcx,0x8
   140014719:	mov    QWORD PTR [rsp+0x40],rcx
   14001471e:	mov    QWORD PTR [rsp+0x50],rcx
   140014723:	je     0x140014745
   140014725:	mov    QWORD PTR [rcx+0x18],0xf
   14001472d:	mov    QWORD PTR [rcx+0x10],0x0
   140014735:	mov    BYTE PTR [rcx],0x0
   140014738:	or     r9,0xffffffffffffffff
   14001473c:	xor    r8d,r8d
   14001473f:	call   0x14001ef20
   140014744:	nop
   140014745:	mov    BYTE PTR [rbx],0x1
   140014748:	mov    rax,rbx
   14001474b:	add    rsp,0x30
   14001474f:	pop    rbx
   140014750:	ret    
   140014751:	int3   
   140014752:	int3   
   140014753:	int3   
   140014754:	int3   
   140014755:	int3   
   140014756:	int3   
   140014757:	int3   
   140014758:	int3   
   140014759:	int3   
   14001475a:	int3   
   14001475b:	int3   
   14001475c:	int3   
   14001475d:	int3   
   14001475e:	int3   
   14001475f:	int3   
   140014760:	mov    BYTE PTR [rcx],0x0
   140014763:	mov    rax,rcx
   140014766:	ret    
   140014767:	int3   
   140014768:	int3   
   140014769:	int3   
   14001476a:	int3   
   14001476b:	int3   
   14001476c:	int3   
   14001476d:	int3   
   14001476e:	int3   
   14001476f:	int3   
   140014770:	mov    BYTE PTR [rcx+0x10],0x0
   140014774:	mov    rax,rcx
   140014777:	ret    
   140014778:	int3   
   140014779:	int3   
   14001477a:	int3   
   14001477b:	int3   
   14001477c:	int3   
   14001477d:	int3   
   14001477e:	int3   
   14001477f:	int3   
   140014780:	mov    BYTE PTR [rcx+0x10],0x0
   140014784:	mov    rax,rcx
   140014787:	ret    
   140014788:	int3   
   140014789:	int3   
   14001478a:	int3   
   14001478b:	int3   
   14001478c:	int3   
   14001478d:	int3   
   14001478e:	int3   
   14001478f:	int3   
   140014790:	mov    BYTE PTR [rcx+0x1],0x0
   140014794:	mov    rax,rcx
   140014797:	ret    
   140014798:	int3   
   140014799:	int3   
   14001479a:	int3   
   14001479b:	int3   
   14001479c:	int3   
   14001479d:	int3   
   14001479e:	int3   
   14001479f:	int3   
   1400147a0:	mov    BYTE PTR [rcx+0x8],0x0
   1400147a4:	mov    rax,rcx
   1400147a7:	ret    
   1400147a8:	int3   
   1400147a9:	int3   
   1400147aa:	int3   
   1400147ab:	int3   
   1400147ac:	int3   
   1400147ad:	int3   
   1400147ae:	int3   
   1400147af:	int3   
   1400147b0:	lea    rax,[rcx+0x8]
   1400147b4:	mov    BYTE PTR [rcx],0x0
   1400147b7:	test   rax,rax
   1400147ba:	je     0x1400147bf
   1400147bc:	mov    QWORD PTR [rax],rdx
   1400147bf:	mov    rax,rcx
   1400147c2:	mov    BYTE PTR [rcx],0x1
   1400147c5:	ret    
   1400147c6:	int3   
   1400147c7:	int3   
   1400147c8:	int3   
   1400147c9:	int3   
   1400147ca:	int3   
   1400147cb:	int3   
   1400147cc:	int3   
   1400147cd:	int3   
   1400147ce:	int3   
   1400147cf:	int3   
   1400147d0:	mov    BYTE PTR [rcx],0x0
   1400147d3:	mov    rax,rcx
   1400147d6:	ret    
   1400147d7:	int3   
   1400147d8:	int3   
   1400147d9:	int3   
   1400147da:	int3   
   1400147db:	int3   
   1400147dc:	int3   
   1400147dd:	int3   
   1400147de:	int3   
   1400147df:	int3   
   1400147e0:	lea    rax,[rcx+0x8]
   1400147e4:	mov    BYTE PTR [rcx],0x0
   1400147e7:	test   rax,rax
   1400147ea:	je     0x1400147ef
   1400147ec:	mov    QWORD PTR [rax],rdx
   1400147ef:	mov    rax,rcx
   1400147f2:	mov    BYTE PTR [rcx],0x1
   1400147f5:	ret    
   1400147f6:	int3   
   1400147f7:	int3   
   1400147f8:	int3   
   1400147f9:	int3   
   1400147fa:	int3   
   1400147fb:	int3   
   1400147fc:	int3   
   1400147fd:	int3   
   1400147fe:	int3   
   1400147ff:	int3   
   140014800:	mov    BYTE PTR [rcx],0x0
   140014803:	mov    rax,rcx
   140014806:	ret    
   140014807:	int3   
   140014808:	int3   
   140014809:	int3   
   14001480a:	int3   
   14001480b:	int3   
   14001480c:	int3   
   14001480d:	int3   
   14001480e:	int3   
   14001480f:	int3   
   140014810:	rex push rbx
   140014812:	sub    rsp,0x20
   140014816:	mov    rbx,rcx
   140014819:	mov    BYTE PTR [rcx],0x0
   14001481c:	add    rcx,0x8
   140014820:	je     0x140014827
   140014822:	call   0x140011010
   140014827:	mov    rax,rbx
   14001482a:	mov    BYTE PTR [rbx],0x1
   14001482d:	add    rsp,0x20
   140014831:	pop    rbx
   140014832:	ret    
   140014833:	int3   
   140014834:	int3   
   140014835:	int3   
   140014836:	int3   
   140014837:	int3   
   140014838:	int3   
   140014839:	int3   
   14001483a:	int3   
   14001483b:	int3   
   14001483c:	int3   
   14001483d:	int3   
   14001483e:	int3   
   14001483f:	int3   
   140014840:	rex push rbx
   140014842:	sub    rsp,0x30
   140014846:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001484f:	mov    rbx,rcx
   140014852:	mov    BYTE PTR [rcx],0x0
   140014855:	add    rcx,0x8
   140014859:	mov    QWORD PTR [rsp+0x40],rcx
   14001485e:	mov    QWORD PTR [rsp+0x50],rcx
   140014863:	je     0x140014885
   140014865:	mov    QWORD PTR [rcx+0x18],0xf
   14001486d:	mov    QWORD PTR [rcx+0x10],0x0
   140014875:	mov    BYTE PTR [rcx],0x0
   140014878:	or     r9,0xffffffffffffffff
   14001487c:	xor    r8d,r8d
   14001487f:	call   0x14001ef20
   140014884:	nop
   140014885:	mov    BYTE PTR [rbx],0x1
   140014888:	mov    rax,rbx
   14001488b:	add    rsp,0x30
   14001488f:	pop    rbx
   140014890:	ret    
   140014891:	int3   
   140014892:	int3   
   140014893:	int3   
   140014894:	int3   
   140014895:	int3   
   140014896:	int3   
   140014897:	int3   
   140014898:	int3   
   140014899:	int3   
   14001489a:	int3   
   14001489b:	int3   
   14001489c:	int3   
   14001489d:	int3   
   14001489e:	int3   
   14001489f:	int3   
   1400148a0:	mov    BYTE PTR [rcx],0x0
   1400148a3:	mov    rax,rcx
   1400148a6:	ret    
   1400148a7:	int3   
   1400148a8:	int3   
   1400148a9:	int3   
   1400148aa:	int3   
   1400148ab:	int3   
   1400148ac:	int3   
   1400148ad:	int3   
   1400148ae:	int3   
   1400148af:	int3   
   1400148b0:	rex push rbx
   1400148b2:	sub    rsp,0x20
   1400148b6:	mov    rbx,rcx
   1400148b9:	call   0x1400229b0
   1400148be:	mov    rax,rbx
   1400148c1:	add    rsp,0x20
   1400148c5:	pop    rbx
   1400148c6:	ret    
   1400148c7:	int3   
   1400148c8:	int3   
   1400148c9:	int3   
   1400148ca:	int3   
   1400148cb:	int3   
   1400148cc:	int3   
   1400148cd:	int3   
   1400148ce:	int3   
   1400148cf:	int3   
   1400148d0:	mov    rax,rcx
   1400148d3:	ret    
   1400148d4:	int3   
   1400148d5:	int3   
   1400148d6:	int3   
   1400148d7:	int3   
   1400148d8:	int3   
   1400148d9:	int3   
   1400148da:	int3   
   1400148db:	int3   
   1400148dc:	int3   
   1400148dd:	int3   
   1400148de:	int3   
   1400148df:	int3   
   1400148e0:	mov    QWORD PTR [rsp+0x8],rcx
   1400148e5:	push   rdi
   1400148e6:	sub    rsp,0x30
   1400148ea:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400148f3:	mov    QWORD PTR [rsp+0x48],rbx
   1400148f8:	mov    rbx,rdx
   1400148fb:	mov    rdi,rcx
   1400148fe:	mov    QWORD PTR [rcx+0x18],0xf
   140014906:	mov    QWORD PTR [rcx+0x10],0x0
   14001490e:	mov    BYTE PTR [rcx],0x0
   140014911:	or     r9,0xffffffffffffffff
   140014915:	xor    r8d,r8d
   140014918:	call   0x14001ef20
   14001491d:	nop
   14001491e:	lea    rdx,[rbx+0x20]
   140014922:	lea    rcx,[rdi+0x20]
   140014926:	call   0x140010e10
   14001492b:	nop
   14001492c:	mov    rax,rdi
   14001492f:	mov    rbx,QWORD PTR [rsp+0x48]
   140014934:	add    rsp,0x30
   140014938:	pop    rdi
   140014939:	ret    
   14001493a:	int3   
   14001493b:	int3   
   14001493c:	int3   
   14001493d:	int3   
   14001493e:	int3   
   14001493f:	int3   
   140014940:	mov    eax,DWORD PTR [rdx+0x8]
   140014943:	mov    DWORD PTR [rcx],eax
   140014945:	mov    rax,rcx
   140014948:	ret    
   140014949:	int3   
   14001494a:	int3   
   14001494b:	int3   
   14001494c:	int3   
   14001494d:	int3   
   14001494e:	int3   
   14001494f:	int3   
   140014950:	lea    rax,[rip+0x27671]        # 0x14003bfc8
   140014957:	mov    QWORD PTR [rcx+0x8],0x0
   14001495f:	mov    QWORD PTR [rcx],rax
   140014962:	mov    rax,rcx
   140014965:	ret    
   140014966:	int3   
   140014967:	int3   
   140014968:	int3   
   140014969:	int3   
   14001496a:	int3   
   14001496b:	int3   
   14001496c:	int3   
   14001496d:	int3   
   14001496e:	int3   
   14001496f:	int3   
   140014970:	mov    QWORD PTR [rcx],rdx
   140014973:	mov    BYTE PTR [rcx+0x8],r8b
   140014977:	mov    BYTE PTR [rcx+0x9],r9b
   14001497b:	mov    rax,rcx
   14001497e:	ret    
   14001497f:	int3   
   140014980:	rex push rbx
   140014982:	sub    rsp,0x20
   140014986:	mov    rbx,rcx
   140014989:	mov    rcx,QWORD PTR [rdx]
   14001498c:	mov    QWORD PTR [rbx],rcx
   14001498f:	test   rcx,rcx
   140014992:	je     0x14001499a
   140014994:	mov    rax,QWORD PTR [rcx]
   140014997:	call   QWORD PTR [rax+0x18]
   14001499a:	mov    rax,rbx
   14001499d:	add    rsp,0x20
   1400149a1:	pop    rbx
   1400149a2:	ret    
   1400149a3:	int3   
   1400149a4:	int3   
   1400149a5:	int3   
   1400149a6:	int3   
   1400149a7:	int3   
   1400149a8:	int3   
   1400149a9:	int3   
   1400149aa:	int3   
   1400149ab:	int3   
   1400149ac:	int3   
   1400149ad:	int3   
   1400149ae:	int3   
   1400149af:	int3   
   1400149b0:	mov    QWORD PTR [rcx],0x0
   1400149b7:	mov    rax,rcx
   1400149ba:	ret    
   1400149bb:	int3   
   1400149bc:	int3   
   1400149bd:	int3   
   1400149be:	int3   
   1400149bf:	int3   
   1400149c0:	mov    QWORD PTR [rcx],rdx
   1400149c3:	mov    rax,rcx
   1400149c6:	ret    
   1400149c7:	int3   
   1400149c8:	int3   
   1400149c9:	int3   
   1400149ca:	int3   
   1400149cb:	int3   
   1400149cc:	int3   
   1400149cd:	int3   
   1400149ce:	int3   
   1400149cf:	int3   
   1400149d0:	mov    QWORD PTR [rcx],rdx
   1400149d3:	mov    rax,rcx
   1400149d6:	ret    
   1400149d7:	int3   
   1400149d8:	int3   
   1400149d9:	int3   
   1400149da:	int3   
   1400149db:	int3   
   1400149dc:	int3   
   1400149dd:	int3   
   1400149de:	int3   
   1400149df:	int3   
   1400149e0:	mov    QWORD PTR [rcx],rdx
   1400149e3:	mov    rax,rcx
   1400149e6:	ret    
   1400149e7:	int3   
   1400149e8:	int3   
   1400149e9:	int3   
   1400149ea:	int3   
   1400149eb:	int3   
   1400149ec:	int3   
   1400149ed:	int3   
   1400149ee:	int3   
   1400149ef:	int3   
   1400149f0:	mov    QWORD PTR [rcx],rdx
   1400149f3:	mov    rax,rcx
   1400149f6:	ret    
   1400149f7:	int3   
   1400149f8:	int3   
   1400149f9:	int3   
   1400149fa:	int3   
   1400149fb:	int3   
   1400149fc:	int3   
   1400149fd:	int3   
   1400149fe:	int3   
   1400149ff:	int3   
   140014a00:	mov    QWORD PTR [rcx],rdx
   140014a03:	mov    rax,rcx
   140014a06:	ret    
   140014a07:	int3   
   140014a08:	int3   
   140014a09:	int3   
   140014a0a:	int3   
   140014a0b:	int3   
   140014a0c:	int3   
   140014a0d:	int3   
   140014a0e:	int3   
   140014a0f:	int3   
   140014a10:	mov    QWORD PTR [rcx],rdx
   140014a13:	mov    rax,rcx
   140014a16:	ret    
   140014a17:	int3   
   140014a18:	int3   
   140014a19:	int3   
   140014a1a:	int3   
   140014a1b:	int3   
   140014a1c:	int3   
   140014a1d:	int3   
   140014a1e:	int3   
   140014a1f:	int3   
   140014a20:	mov    QWORD PTR [rcx],rdx
   140014a23:	mov    rax,rcx
   140014a26:	ret    
   140014a27:	int3   
   140014a28:	int3   
   140014a29:	int3   
   140014a2a:	int3   
   140014a2b:	int3   
   140014a2c:	int3   
   140014a2d:	int3   
   140014a2e:	int3   
   140014a2f:	int3   
   140014a30:	mov    QWORD PTR [rcx],rdx
   140014a33:	mov    rax,rcx
   140014a36:	ret    
   140014a37:	int3   
   140014a38:	int3   
   140014a39:	int3   
   140014a3a:	int3   
   140014a3b:	int3   
   140014a3c:	int3   
   140014a3d:	int3   
   140014a3e:	int3   
   140014a3f:	int3   
   140014a40:	mov    QWORD PTR [rcx],rdx
   140014a43:	mov    rax,rcx
   140014a46:	ret    
   140014a47:	int3   
   140014a48:	int3   
   140014a49:	int3   
   140014a4a:	int3   
   140014a4b:	int3   
   140014a4c:	int3   
   140014a4d:	int3   
   140014a4e:	int3   
   140014a4f:	int3   
   140014a50:	mov    QWORD PTR [rcx],rdx
   140014a53:	mov    rax,rcx
   140014a56:	ret    
   140014a57:	int3   
   140014a58:	int3   
   140014a59:	int3   
   140014a5a:	int3   
   140014a5b:	int3   
   140014a5c:	int3   
   140014a5d:	int3   
   140014a5e:	int3   
   140014a5f:	int3   
   140014a60:	rex push rbx
   140014a62:	sub    rsp,0x20
   140014a66:	mov    rbx,rcx
   140014a69:	call   0x1400229b0
   140014a6e:	xor    ecx,ecx
   140014a70:	lea    rax,[rbx-0x11]
   140014a74:	test   rbx,rbx
   140014a77:	jne    0x140014a7b
   140014a79:	mov    eax,ecx
   140014a7b:	mov    rdx,QWORD PTR [rax+0x8]
   140014a7f:	test   rdx,rdx
   140014a82:	je     0x140014a8a
   140014a84:	add    rdx,0x60
   140014a88:	jmp    0x140014a8d
   140014a8a:	mov    rdx,rcx
   140014a8d:	lea    rax,[rbx-0x11]
   140014a91:	test   rbx,rbx
   140014a94:	jne    0x140014a99
   140014a96:	mov    rax,rcx
   140014a99:	mov    rax,QWORD PTR [rax+0x8]
   140014a9d:	mov    QWORD PTR [rax+0x68],rdx
   140014aa1:	test   rbx,rbx
   140014aa4:	je     0x140014aaa
   140014aa6:	lea    rcx,[rbx-0x11]
   140014aaa:	mov    rax,QWORD PTR [rcx+0x8]
   140014aae:	mov    QWORD PTR [rax+0x60],rdx
   140014ab2:	mov    rax,rbx
   140014ab5:	add    rsp,0x20
   140014ab9:	pop    rbx
   140014aba:	ret    
   140014abb:	int3   
   140014abc:	int3   
   140014abd:	int3   
   140014abe:	int3   
   140014abf:	int3   
   140014ac0:	mov    rax,rcx
   140014ac3:	ret    
   140014ac4:	int3   
   140014ac5:	int3   
   140014ac6:	int3   
   140014ac7:	int3   
   140014ac8:	int3   
   140014ac9:	int3   
   140014aca:	int3   
   140014acb:	int3   
   140014acc:	int3   
   140014acd:	int3   
   140014ace:	int3   
   140014acf:	int3   
   140014ad0:	mov    rax,QWORD PTR [rdx]
   140014ad3:	mov    QWORD PTR [rcx],rax
   140014ad6:	mov    rax,QWORD PTR [rdx+0x8]
   140014ada:	mov    QWORD PTR [rcx+0x8],rax
   140014ade:	test   rax,rax
   140014ae1:	je     0x140014ae7
   140014ae3:	lock inc DWORD PTR [rax+0x8]
   140014ae7:	mov    rax,rcx
   140014aea:	ret    
   140014aeb:	int3   
   140014aec:	int3   
   140014aed:	int3   
   140014aee:	int3   
   140014aef:	int3   
   140014af0:	mov    rax,QWORD PTR [rdx]
   140014af3:	mov    QWORD PTR [rcx],rax
   140014af6:	mov    rax,QWORD PTR [rdx+0x8]
   140014afa:	mov    QWORD PTR [rcx+0x8],rax
   140014afe:	test   rax,rax
   140014b01:	je     0x140014b07
   140014b03:	lock inc DWORD PTR [rax+0x8]
   140014b07:	mov    rax,rcx
   140014b0a:	ret    
   140014b0b:	int3   
   140014b0c:	int3   
   140014b0d:	int3   
   140014b0e:	int3   
   140014b0f:	int3   
   140014b10:	xor    eax,eax
   140014b12:	mov    QWORD PTR [rcx],rax
   140014b15:	mov    QWORD PTR [rcx+0x8],rax
   140014b19:	mov    rax,rcx
   140014b1c:	ret    
   140014b1d:	int3   
   140014b1e:	int3   
   140014b1f:	int3   
   140014b20:	lea    rax,[rip+0x29c09]        # 0x14003e730
   140014b27:	mov    DWORD PTR [rcx+0x8],0x1
   140014b2e:	mov    DWORD PTR [rcx+0xc],0x1
   140014b35:	mov    QWORD PTR [rcx],rax
   140014b38:	mov    rax,rcx
   140014b3b:	mov    QWORD PTR [rcx+0x10],rdx
   140014b3f:	ret    
   140014b40:	lea    rax,[rip+0x2a869]        # 0x14003f3b0
   140014b47:	mov    DWORD PTR [rcx+0x8],0x1
   140014b4e:	mov    DWORD PTR [rcx+0xc],0x1
   140014b55:	mov    QWORD PTR [rcx],rax
   140014b58:	mov    rax,rcx
   140014b5b:	mov    QWORD PTR [rcx+0x10],rdx
   140014b5f:	ret    
   140014b60:	lea    rax,[rip+0x2a8f1]        # 0x14003f458
   140014b67:	mov    DWORD PTR [rcx+0x8],0x1
   140014b6e:	mov    DWORD PTR [rcx+0xc],0x1
   140014b75:	mov    QWORD PTR [rcx],rax
   140014b78:	mov    rax,rcx
   140014b7b:	mov    QWORD PTR [rcx+0x10],rdx
   140014b7f:	ret    
   140014b80:	lea    rax,[rip+0x29b79]        # 0x14003e700
   140014b87:	mov    DWORD PTR [rcx+0x8],0x1
   140014b8e:	mov    DWORD PTR [rcx+0xc],0x1
   140014b95:	mov    QWORD PTR [rcx],rax
   140014b98:	mov    rax,rcx
   140014b9b:	mov    QWORD PTR [rcx+0x10],rdx
   140014b9f:	ret    
   140014ba0:	mov    rax,rsp
   140014ba3:	mov    QWORD PTR [rax+0x8],rcx
   140014ba7:	push   rdi
   140014ba8:	sub    rsp,0x80
   140014baf:	mov    QWORD PTR [rax-0x68],0xfffffffffffffffe
   140014bb7:	mov    QWORD PTR [rax+0x10],rbx
   140014bbb:	mov    QWORD PTR [rax+0x18],rbp
   140014bbf:	mov    QWORD PTR [rax+0x20],rsi
   140014bc3:	mov    rdi,r9
   140014bc6:	mov    rbp,r8
   140014bc9:	mov    rbx,rdx
   140014bcc:	mov    rsi,rcx
   140014bcf:	call   QWORD PTR [rip+0x21623]        # 0x1400361f8
   140014bd5:	xor    eax,eax
   140014bd7:	mov    DWORD PTR [rsi+0x68],eax
   140014bda:	mov    BYTE PTR [rsi+0x80],al
   140014be0:	mov    QWORD PTR [rsi+0x88],rax
   140014be7:	mov    QWORD PTR [rsi+0x90],rax
   140014bee:	mov    QWORD PTR [rsi+0x98],rax
   140014bf5:	mov    QWORD PTR [rsi+0xa0],rax
   140014bfc:	mov    DWORD PTR [rsi+0xa8],0x4
   140014c06:	lea    rax,[rip+0x29cc3]        # 0x14003e8d0
   140014c0d:	mov    QWORD PTR [rsi],rax
   140014c10:	xor    r8d,r8d
   140014c13:	mov    rdx,rbx
   140014c16:	lea    rcx,[rsp+0x40]
   140014c1b:	call   0x14000eb10
   140014c20:	nop
   140014c21:	test   BYTE PTR [rsi+0xa8],0x1
   140014c28:	je     0x140014c76
   140014c2a:	mov    DWORD PTR [rsp+0x30],0x1
   140014c32:	lea    rax,[rip+0x403cf]        # 0x140055008
   140014c39:	mov    QWORD PTR [rsp+0x38],rax
   140014c3e:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140014c43:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140014c49:	lea    r8,[rip+0x2a748]        # 0x14003f398
   140014c50:	lea    rdx,[rsp+0x30]
   140014c55:	lea    rcx,[rsp+0x50]
   140014c5a:	call   0x140016bb0
   140014c5f:	lea    rax,[rip+0x25b72]        # 0x14003a7d8
   140014c66:	mov    QWORD PTR [rsp+0x50],rax
   140014c6b:	lea    rcx,[rsp+0x50]
   140014c70:	call   0x14000df70
   140014c75:	nop
   140014c76:	mov    r9,rdi
   140014c79:	mov    r8,rbp
   140014c7c:	mov    rdx,rax
   140014c7f:	mov    rcx,rsi
   140014c82:	call   0x1400268e0
   140014c87:	nop
   140014c88:	mov    rbx,QWORD PTR [rsp+0x48]
   140014c8d:	test   rbx,rbx
   140014c90:	je     0x140014cb1
   140014c92:	lock dec DWORD PTR [rbx+0x8]
   140014c96:	jne    0x140014cb1
   140014c98:	mov    rax,QWORD PTR [rbx]
   140014c9b:	mov    rcx,rbx
   140014c9e:	call   QWORD PTR [rax+0x8]
   140014ca1:	lock dec DWORD PTR [rbx+0xc]
   140014ca5:	jne    0x140014cb1
   140014ca7:	mov    rax,QWORD PTR [rbx]
   140014caa:	mov    rcx,rbx
   140014cad:	call   QWORD PTR [rax+0x10]
   140014cb0:	nop
   140014cb1:	mov    rax,rsi
   140014cb4:	lea    r11,[rsp+0x80]
   140014cbc:	mov    rbx,QWORD PTR [r11+0x18]
   140014cc0:	mov    rbp,QWORD PTR [r11+0x20]
   140014cc4:	mov    rsi,QWORD PTR [r11+0x28]
   140014cc8:	mov    rsp,r11
   140014ccb:	pop    rdi
   140014ccc:	ret    
   140014ccd:	int3   
   140014cce:	int3   
   140014ccf:	int3   
   140014cd0:	mov    rax,rsp
   140014cd3:	mov    QWORD PTR [rax+0x8],rcx
   140014cd7:	push   rdi
   140014cd8:	sub    rsp,0x80
   140014cdf:	mov    QWORD PTR [rax-0x68],0xfffffffffffffffe
   140014ce7:	mov    QWORD PTR [rax+0x10],rbx
   140014ceb:	mov    QWORD PTR [rax+0x18],rbp
   140014cef:	mov    QWORD PTR [rax+0x20],rsi
   140014cf3:	mov    rdi,r9
   140014cf6:	mov    rbp,r8
   140014cf9:	mov    rbx,rdx
   140014cfc:	mov    rsi,rcx
   140014cff:	call   QWORD PTR [rip+0x214f3]        # 0x1400361f8
   140014d05:	xor    eax,eax
   140014d07:	mov    DWORD PTR [rsi+0x68],eax
   140014d0a:	mov    BYTE PTR [rsi+0x80],al
   140014d10:	mov    QWORD PTR [rsi+0x88],rax
   140014d17:	mov    QWORD PTR [rsi+0x90],rax
   140014d1e:	mov    QWORD PTR [rsi+0x98],rax
   140014d25:	mov    QWORD PTR [rsi+0xa0],rax
   140014d2c:	mov    DWORD PTR [rsi+0xa8],0x4
   140014d36:	lea    rax,[rip+0x29f0b]        # 0x14003ec48
   140014d3d:	mov    QWORD PTR [rsi],rax
   140014d40:	xor    r8d,r8d
   140014d43:	mov    rdx,rbx
   140014d46:	lea    rcx,[rsp+0x40]
   140014d4b:	call   0x14000eb40
   140014d50:	nop
   140014d51:	test   BYTE PTR [rsi+0xa8],0x1
   140014d58:	je     0x140014da6
   140014d5a:	mov    DWORD PTR [rsp+0x30],0x1
   140014d62:	lea    rax,[rip+0x4029f]        # 0x140055008
   140014d69:	mov    QWORD PTR [rsp+0x38],rax
   140014d6e:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140014d73:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140014d79:	lea    r8,[rip+0x2a618]        # 0x14003f398
   140014d80:	lea    rdx,[rsp+0x30]
   140014d85:	lea    rcx,[rsp+0x50]
   140014d8a:	call   0x140016bb0
   140014d8f:	lea    rax,[rip+0x25a42]        # 0x14003a7d8
   140014d96:	mov    QWORD PTR [rsp+0x50],rax
   140014d9b:	lea    rcx,[rsp+0x50]
   140014da0:	call   0x14000df70
   140014da5:	nop
   140014da6:	mov    r9,rdi
   140014da9:	mov    r8,rbp
   140014dac:	mov    rdx,rax
   140014daf:	mov    rcx,rsi
   140014db2:	call   0x140026a20
   140014db7:	nop
   140014db8:	mov    rbx,QWORD PTR [rsp+0x48]
   140014dbd:	test   rbx,rbx
   140014dc0:	je     0x140014de1
   140014dc2:	lock dec DWORD PTR [rbx+0x8]
   140014dc6:	jne    0x140014de1
   140014dc8:	mov    rax,QWORD PTR [rbx]
   140014dcb:	mov    rcx,rbx
   140014dce:	call   QWORD PTR [rax+0x8]
   140014dd1:	lock dec DWORD PTR [rbx+0xc]
   140014dd5:	jne    0x140014de1
   140014dd7:	mov    rax,QWORD PTR [rbx]
   140014dda:	mov    rcx,rbx
   140014ddd:	call   QWORD PTR [rax+0x10]
   140014de0:	nop
   140014de1:	mov    rax,rsi
   140014de4:	lea    r11,[rsp+0x80]
   140014dec:	mov    rbx,QWORD PTR [r11+0x18]
   140014df0:	mov    rbp,QWORD PTR [r11+0x20]
   140014df4:	mov    rsi,QWORD PTR [r11+0x28]
   140014df8:	mov    rsp,r11
   140014dfb:	pop    rdi
   140014dfc:	ret    
   140014dfd:	int3   
   140014dfe:	int3   
   140014dff:	int3   
   140014e00:	rex push rbx
   140014e02:	sub    rsp,0x20
   140014e06:	mov    rbx,rcx
   140014e09:	call   QWORD PTR [rip+0x213e9]        # 0x1400361f8
   140014e0f:	xor    eax,eax
   140014e11:	mov    DWORD PTR [rbx+0x68],eax
   140014e14:	mov    BYTE PTR [rbx+0x71],al
   140014e17:	mov    QWORD PTR [rbx+0x78],rax
   140014e1b:	mov    QWORD PTR [rbx+0x80],rax
   140014e22:	mov    QWORD PTR [rbx+0x88],rax
   140014e29:	mov    QWORD PTR [rbx+0x90],rax
   140014e30:	lea    rax,[rip+0x2a4a1]        # 0x14003f2d8
   140014e37:	mov    DWORD PTR [rbx+0x98],0x4
   140014e41:	mov    QWORD PTR [rbx],rax
   140014e44:	mov    rax,rbx
   140014e47:	add    rsp,0x20
   140014e4b:	pop    rbx
   140014e4c:	ret    
   140014e4d:	int3   
   140014e4e:	int3   
   140014e4f:	int3   
   140014e50:	mov    QWORD PTR [rsp+0x8],rcx
   140014e55:	push   rbp
   140014e56:	push   rsi
   140014e57:	push   rdi
   140014e58:	sub    rsp,0x70
   140014e5c:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140014e65:	mov    QWORD PTR [rsp+0xa0],rbx
   140014e6d:	mov    rsi,r9
   140014e70:	mov    rbp,r8
   140014e73:	mov    rbx,rdx
   140014e76:	mov    rdi,rcx
   140014e79:	call   QWORD PTR [rip+0x21379]        # 0x1400361f8
   140014e7f:	xor    eax,eax
   140014e81:	mov    DWORD PTR [rdi+0x68],eax
   140014e84:	mov    BYTE PTR [rdi+0x78],al
   140014e87:	mov    QWORD PTR [rdi+0x80],rax
   140014e8e:	mov    QWORD PTR [rdi+0x88],rax
   140014e95:	mov    QWORD PTR [rdi+0x90],rax
   140014e9c:	mov    QWORD PTR [rdi+0x98],rax
   140014ea3:	mov    DWORD PTR [rdi+0xa0],0x4
   140014ead:	lea    rax,[rip+0x29bcc]        # 0x14003ea80
   140014eb4:	mov    QWORD PTR [rdi],rax
   140014eb7:	mov    rax,QWORD PTR [rbx]
   140014eba:	mov    QWORD PTR [rsp+0x98],rax
   140014ec2:	test   BYTE PTR [rdi+0xa0],0x1
   140014ec9:	je     0x140014f17
   140014ecb:	mov    DWORD PTR [rsp+0x30],0x1
   140014ed3:	lea    rax,[rip+0x4012e]        # 0x140055008
   140014eda:	mov    QWORD PTR [rsp+0x38],rax
   140014edf:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140014ee4:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140014eea:	lea    r8,[rip+0x2a4a7]        # 0x14003f398
   140014ef1:	lea    rdx,[rsp+0x30]
   140014ef6:	lea    rcx,[rsp+0x40]
   140014efb:	call   0x140016bb0
   140014f00:	lea    rax,[rip+0x258d1]        # 0x14003a7d8
   140014f07:	mov    QWORD PTR [rsp+0x40],rax
   140014f0c:	lea    rcx,[rsp+0x40]
   140014f11:	call   0x14000df70
   140014f16:	nop
   140014f17:	mov    r9,rsi
   140014f1a:	mov    r8,rbp
   140014f1d:	lea    rdx,[rsp+0x98]
   140014f25:	mov    rcx,rdi
   140014f28:	call   0x140026c50
   140014f2d:	nop
   140014f2e:	mov    rax,rdi
   140014f31:	mov    rbx,QWORD PTR [rsp+0xa0]
   140014f39:	add    rsp,0x70
   140014f3d:	pop    rdi
   140014f3e:	pop    rsi
   140014f3f:	pop    rbp
   140014f40:	ret    
   140014f41:	int3   
   140014f42:	int3   
   140014f43:	int3   
   140014f44:	int3   
   140014f45:	int3   
   140014f46:	int3   
   140014f47:	int3   
   140014f48:	int3   
   140014f49:	int3   
   140014f4a:	int3   
   140014f4b:	int3   
   140014f4c:	int3   
   140014f4d:	int3   
   140014f4e:	int3   
   140014f4f:	int3   
   140014f50:	rex push rbx
   140014f52:	sub    rsp,0x20
   140014f56:	mov    rbx,rcx
   140014f59:	mov    rcx,QWORD PTR [rdx]
   140014f5c:	mov    QWORD PTR [rbx],rcx
   140014f5f:	mov    rax,QWORD PTR [rcx]
   140014f62:	call   QWORD PTR [rax+0x8]
   140014f65:	mov    rax,rbx
   140014f68:	add    rsp,0x20
   140014f6c:	pop    rbx
   140014f6d:	ret    
   140014f6e:	int3   
   140014f6f:	int3   
   140014f70:	mov    QWORD PTR [rsp+0x8],rbx
   140014f75:	push   rdi
   140014f76:	sub    rsp,0x20
   140014f7a:	mov    rdi,rcx
   140014f7d:	mov    rcx,QWORD PTR [rdx]
   140014f80:	mov    rbx,rdx
   140014f83:	mov    QWORD PTR [rdi],rcx
   140014f86:	mov    rax,QWORD PTR [rcx]
   140014f89:	call   QWORD PTR [rax+0x8]
   140014f8c:	mov    rcx,QWORD PTR [rbx]
   140014f8f:	test   rcx,rcx
   140014f92:	je     0x140014fad
   140014f94:	mov    rax,QWORD PTR [rcx]
   140014f97:	call   QWORD PTR [rax+0x10]
   140014f9a:	test   rax,rax
   140014f9d:	je     0x140014fad
   140014f9f:	mov    r8,QWORD PTR [rax]
   140014fa2:	mov    edx,0x1
   140014fa7:	mov    rcx,rax
   140014faa:	call   QWORD PTR [r8]
   140014fad:	mov    rax,rdi
   140014fb0:	mov    rbx,QWORD PTR [rsp+0x30]
   140014fb5:	add    rsp,0x20
   140014fb9:	pop    rdi
   140014fba:	ret    
   140014fbb:	int3   
   140014fbc:	int3   
   140014fbd:	int3   
   140014fbe:	int3   
   140014fbf:	int3   
   140014fc0:	rex push rbx
   140014fc2:	sub    rsp,0x20
   140014fc6:	mov    rbx,rcx
   140014fc9:	mov    rcx,QWORD PTR [rdx]
   140014fcc:	mov    QWORD PTR [rbx],rcx
   140014fcf:	mov    rax,QWORD PTR [rcx]
   140014fd2:	call   QWORD PTR [rax+0x8]
   140014fd5:	mov    rax,rbx
   140014fd8:	add    rsp,0x20
   140014fdc:	pop    rbx
   140014fdd:	ret    
   140014fde:	int3   
   140014fdf:	int3   
   140014fe0:	mov    QWORD PTR [rsp+0x8],rbx
   140014fe5:	push   rdi
   140014fe6:	sub    rsp,0x20
   140014fea:	mov    rdi,rcx
   140014fed:	mov    rcx,QWORD PTR [rdx]
   140014ff0:	mov    rbx,rdx
   140014ff3:	mov    QWORD PTR [rdi],rcx
   140014ff6:	mov    rax,QWORD PTR [rcx]
   140014ff9:	call   QWORD PTR [rax+0x8]
   140014ffc:	mov    rcx,QWORD PTR [rbx]
   140014fff:	test   rcx,rcx
   140015002:	je     0x14001501d
   140015004:	mov    rax,QWORD PTR [rcx]
   140015007:	call   QWORD PTR [rax+0x10]
   14001500a:	test   rax,rax
   14001500d:	je     0x14001501d
   14001500f:	mov    r8,QWORD PTR [rax]
   140015012:	mov    edx,0x1
   140015017:	mov    rcx,rax
   14001501a:	call   QWORD PTR [r8]
   14001501d:	mov    rax,rdi
   140015020:	mov    rbx,QWORD PTR [rsp+0x30]
   140015025:	add    rsp,0x20
   140015029:	pop    rdi
   14001502a:	ret    
   14001502b:	int3   
   14001502c:	int3   
   14001502d:	int3   
   14001502e:	int3   
   14001502f:	int3   
   140015030:	rex push rbx
   140015032:	sub    rsp,0x20
   140015036:	mov    rbx,rcx
   140015039:	mov    rcx,QWORD PTR [rdx]
   14001503c:	mov    QWORD PTR [rbx],rcx
   14001503f:	mov    rax,QWORD PTR [rcx]
   140015042:	call   QWORD PTR [rax+0x8]
   140015045:	mov    rax,rbx
   140015048:	add    rsp,0x20
   14001504c:	pop    rbx
   14001504d:	ret    
   14001504e:	int3   
   14001504f:	int3   
   140015050:	mov    QWORD PTR [rsp+0x8],rbx
   140015055:	push   rdi
   140015056:	sub    rsp,0x20
   14001505a:	mov    rdi,rcx
   14001505d:	mov    rcx,QWORD PTR [rdx]
   140015060:	mov    rbx,rdx
   140015063:	mov    QWORD PTR [rdi],rcx
   140015066:	mov    rax,QWORD PTR [rcx]
   140015069:	call   QWORD PTR [rax+0x8]
   14001506c:	mov    rcx,QWORD PTR [rbx]
   14001506f:	test   rcx,rcx
   140015072:	je     0x14001508d
   140015074:	mov    rax,QWORD PTR [rcx]
   140015077:	call   QWORD PTR [rax+0x10]
   14001507a:	test   rax,rax
   14001507d:	je     0x14001508d
   14001507f:	mov    r8,QWORD PTR [rax]
   140015082:	mov    edx,0x1
   140015087:	mov    rcx,rax
   14001508a:	call   QWORD PTR [r8]
   14001508d:	mov    rax,rdi
   140015090:	mov    rbx,QWORD PTR [rsp+0x30]
   140015095:	add    rsp,0x20
   140015099:	pop    rdi
   14001509a:	ret    
   14001509b:	int3   
   14001509c:	int3   
   14001509d:	int3   
   14001509e:	int3   
   14001509f:	int3   
   1400150a0:	rex push rbx
   1400150a2:	sub    rsp,0x20
   1400150a6:	mov    rbx,rcx
   1400150a9:	mov    rcx,QWORD PTR [rdx]
   1400150ac:	mov    QWORD PTR [rbx],rcx
   1400150af:	mov    rax,QWORD PTR [rcx]
   1400150b2:	call   QWORD PTR [rax+0x8]
   1400150b5:	mov    rax,rbx
   1400150b8:	add    rsp,0x20
   1400150bc:	pop    rbx
   1400150bd:	ret    
   1400150be:	int3   
   1400150bf:	int3   
   1400150c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400150c5:	push   rdi
   1400150c6:	sub    rsp,0x20
   1400150ca:	mov    rdi,rcx
   1400150cd:	mov    rcx,QWORD PTR [rdx]
   1400150d0:	mov    rbx,rdx
   1400150d3:	mov    QWORD PTR [rdi],rcx
   1400150d6:	mov    rax,QWORD PTR [rcx]
   1400150d9:	call   QWORD PTR [rax+0x8]
   1400150dc:	mov    rcx,QWORD PTR [rbx]
   1400150df:	test   rcx,rcx
   1400150e2:	je     0x1400150fd
   1400150e4:	mov    rax,QWORD PTR [rcx]
   1400150e7:	call   QWORD PTR [rax+0x10]
   1400150ea:	test   rax,rax
   1400150ed:	je     0x1400150fd
   1400150ef:	mov    r8,QWORD PTR [rax]
   1400150f2:	mov    edx,0x1
   1400150f7:	mov    rcx,rax
   1400150fa:	call   QWORD PTR [r8]
   1400150fd:	mov    rax,rdi
   140015100:	mov    rbx,QWORD PTR [rsp+0x30]
   140015105:	add    rsp,0x20
   140015109:	pop    rdi
   14001510a:	ret    
   14001510b:	int3   
   14001510c:	int3   
   14001510d:	int3   
   14001510e:	int3   
   14001510f:	int3   
   140015110:	rex push rbx
   140015112:	sub    rsp,0x20
   140015116:	mov    rbx,rcx
   140015119:	mov    rcx,QWORD PTR [rdx]
   14001511c:	mov    QWORD PTR [rbx],rcx
   14001511f:	mov    rax,QWORD PTR [rcx]
   140015122:	call   QWORD PTR [rax+0x8]
   140015125:	mov    rax,rbx
   140015128:	add    rsp,0x20
   14001512c:	pop    rbx
   14001512d:	ret    
   14001512e:	int3   
   14001512f:	int3   
   140015130:	mov    QWORD PTR [rsp+0x8],rbx
   140015135:	push   rdi
   140015136:	sub    rsp,0x20
   14001513a:	mov    rdi,rcx
   14001513d:	mov    rcx,QWORD PTR [rdx]
   140015140:	mov    rbx,rdx
   140015143:	mov    QWORD PTR [rdi],rcx
   140015146:	mov    rax,QWORD PTR [rcx]
   140015149:	call   QWORD PTR [rax+0x8]
   14001514c:	mov    rcx,QWORD PTR [rbx]
   14001514f:	test   rcx,rcx
   140015152:	je     0x14001516d
   140015154:	mov    rax,QWORD PTR [rcx]
   140015157:	call   QWORD PTR [rax+0x10]
   14001515a:	test   rax,rax
   14001515d:	je     0x14001516d
   14001515f:	mov    r8,QWORD PTR [rax]
   140015162:	mov    edx,0x1
   140015167:	mov    rcx,rax
   14001516a:	call   QWORD PTR [r8]
   14001516d:	mov    rax,rdi
   140015170:	mov    rbx,QWORD PTR [rsp+0x30]
   140015175:	add    rsp,0x20
   140015179:	pop    rdi
   14001517a:	ret    
   14001517b:	int3   
   14001517c:	int3   
   14001517d:	int3   
   14001517e:	int3   
   14001517f:	int3   
   140015180:	rex push rbx
   140015182:	sub    rsp,0x20
   140015186:	mov    rbx,rcx
   140015189:	mov    rcx,QWORD PTR [rdx]
   14001518c:	mov    QWORD PTR [rbx],rcx
   14001518f:	mov    rax,QWORD PTR [rcx]
   140015192:	call   QWORD PTR [rax+0x8]
   140015195:	mov    rax,rbx
   140015198:	add    rsp,0x20
   14001519c:	pop    rbx
   14001519d:	ret    
   14001519e:	int3   
   14001519f:	int3   
   1400151a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400151a5:	push   rdi
   1400151a6:	sub    rsp,0x20
   1400151aa:	mov    rdi,rcx
   1400151ad:	mov    rcx,QWORD PTR [rdx]
   1400151b0:	mov    rbx,rdx
   1400151b3:	mov    QWORD PTR [rdi],rcx
   1400151b6:	mov    rax,QWORD PTR [rcx]
   1400151b9:	call   QWORD PTR [rax+0x8]
   1400151bc:	mov    rcx,QWORD PTR [rbx]
   1400151bf:	test   rcx,rcx
   1400151c2:	je     0x1400151dd
   1400151c4:	mov    rax,QWORD PTR [rcx]
   1400151c7:	call   QWORD PTR [rax+0x10]
   1400151ca:	test   rax,rax
   1400151cd:	je     0x1400151dd
   1400151cf:	mov    r8,QWORD PTR [rax]
   1400151d2:	mov    edx,0x1
   1400151d7:	mov    rcx,rax
   1400151da:	call   QWORD PTR [r8]
   1400151dd:	mov    rax,rdi
   1400151e0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400151e5:	add    rsp,0x20
   1400151e9:	pop    rdi
   1400151ea:	ret    
   1400151eb:	int3   
   1400151ec:	int3   
   1400151ed:	int3   
   1400151ee:	int3   
   1400151ef:	int3   
   1400151f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400151f5:	push   rdi
   1400151f6:	sub    rsp,0x20
   1400151fa:	mov    QWORD PTR [rcx+0x18],0xf
   140015202:	mov    QWORD PTR [rcx+0x10],0x0
   14001520a:	or     r9,0xffffffffffffffff
   14001520e:	xor    r8d,r8d
   140015211:	mov    rdi,rdx
   140015214:	mov    rbx,rcx
   140015217:	mov    BYTE PTR [rcx],0x0
   14001521a:	call   0x14001ef20
   14001521f:	movzx  eax,BYTE PTR [rdi+0x20]
   140015223:	mov    BYTE PTR [rbx+0x20],al
   140015226:	cmp    QWORD PTR [rbx+0x18],0x10
   14001522b:	jb     0x140015232
   14001522d:	mov    rax,QWORD PTR [rbx]
   140015230:	jmp    0x140015235
   140015232:	mov    rax,rbx
   140015235:	mov    QWORD PTR [rbx+0x28],rax
   140015239:	cmp    QWORD PTR [rdi+0x18],0x10
   14001523e:	mov    rax,QWORD PTR [rdi+0x28]
   140015242:	jb     0x140015247
   140015244:	mov    rdi,QWORD PTR [rdi]
   140015247:	sub    rax,rdi
   14001524a:	add    QWORD PTR [rbx+0x28],rax
   14001524e:	mov    rax,rbx
   140015251:	mov    rbx,QWORD PTR [rsp+0x30]
   140015256:	add    rsp,0x20
   14001525a:	pop    rdi
   14001525b:	ret    
   14001525c:	int3   
   14001525d:	int3   
   14001525e:	int3   
   14001525f:	int3   
   140015260:	mov    QWORD PTR [rsp+0x8],rbx
   140015265:	push   rdi
   140015266:	sub    rsp,0x20
   14001526a:	movzx  ebx,r8b
   14001526e:	mov    QWORD PTR [rcx+0x18],0xf
   140015276:	mov    QWORD PTR [rcx+0x10],0x0
   14001527e:	xor    r8d,r8d
   140015281:	or     r9,0xffffffffffffffff
   140015285:	mov    rdi,rcx
   140015288:	mov    BYTE PTR [rcx],0x0
   14001528b:	call   0x14001ef20
   140015290:	mov    BYTE PTR [rdi+0x20],bl
   140015293:	cmp    QWORD PTR [rdi+0x18],0x10
   140015298:	jb     0x1400152af
   14001529a:	mov    rax,QWORD PTR [rdi]
   14001529d:	mov    QWORD PTR [rdi+0x28],rax
   1400152a1:	mov    rax,rdi
   1400152a4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400152a9:	add    rsp,0x20
   1400152ad:	pop    rdi
   1400152ae:	ret    
   1400152af:	mov    rbx,QWORD PTR [rsp+0x30]
   1400152b4:	mov    QWORD PTR [rdi+0x28],rdi
   1400152b8:	mov    rax,rdi
   1400152bb:	add    rsp,0x20
   1400152bf:	pop    rdi
   1400152c0:	ret    
   1400152c1:	int3   
   1400152c2:	int3   
   1400152c3:	int3   
   1400152c4:	int3   
   1400152c5:	int3   
   1400152c6:	int3   
   1400152c7:	int3   
   1400152c8:	int3   
   1400152c9:	int3   
   1400152ca:	int3   
   1400152cb:	int3   
   1400152cc:	int3   
   1400152cd:	int3   
   1400152ce:	int3   
   1400152cf:	int3   
   1400152d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400152d5:	push   rdi
   1400152d6:	sub    rsp,0x20
   1400152da:	mov    QWORD PTR [rcx+0x18],0xf
   1400152e2:	movzx  edi,r8b
   1400152e6:	xor    r8d,r8d
   1400152e9:	mov    QWORD PTR [rcx+0x10],r8
   1400152ed:	mov    BYTE PTR [rcx],r8b
   1400152f0:	mov    rbx,rcx
   1400152f3:	cmp    BYTE PTR [rdx],r8b
   1400152f6:	je     0x14001530a
   1400152f8:	or     r8,0xffffffffffffffff
   1400152fc:	nop    DWORD PTR [rax+0x0]
   140015300:	inc    r8
   140015303:	cmp    BYTE PTR [rdx+r8*1],0x0
   140015308:	jne    0x140015300
   14001530a:	call   0x14001f070
   14001530f:	mov    BYTE PTR [rbx+0x20],dil
   140015313:	cmp    QWORD PTR [rbx+0x18],0x10
   140015318:	jb     0x14001532f
   14001531a:	mov    rax,QWORD PTR [rbx]
   14001531d:	mov    QWORD PTR [rbx+0x28],rax
   140015321:	mov    rax,rbx
   140015324:	mov    rbx,QWORD PTR [rsp+0x30]
   140015329:	add    rsp,0x20
   14001532d:	pop    rdi
   14001532e:	ret    
   14001532f:	mov    QWORD PTR [rbx+0x28],rbx
   140015333:	mov    rax,rbx
   140015336:	mov    rbx,QWORD PTR [rsp+0x30]
   14001533b:	add    rsp,0x20
   14001533f:	pop    rdi
   140015340:	ret    
   140015341:	int3   
   140015342:	int3   
   140015343:	int3   
   140015344:	int3   
   140015345:	int3   
   140015346:	int3   
   140015347:	int3   
   140015348:	int3   
   140015349:	int3   
   14001534a:	int3   
   14001534b:	int3   
   14001534c:	int3   
   14001534d:	int3   
   14001534e:	int3   
   14001534f:	int3   
   140015350:	mov    rax,QWORD PTR [rdx]
   140015353:	mov    QWORD PTR [rcx],rax
   140015356:	mov    rax,QWORD PTR [rdx+0x8]
   14001535a:	mov    QWORD PTR [rcx+0x8],rax
   14001535e:	test   rax,rax
   140015361:	je     0x140015367
   140015363:	lock inc DWORD PTR [rax+0x8]
   140015367:	mov    rax,rcx
   14001536a:	ret    
   14001536b:	int3   
   14001536c:	int3   
   14001536d:	int3   
   14001536e:	int3   
   14001536f:	int3   
   140015370:	mov    rax,QWORD PTR [rdx]
   140015373:	mov    QWORD PTR [rcx],rax
   140015376:	mov    rax,QWORD PTR [rdx+0x8]
   14001537a:	mov    QWORD PTR [rcx+0x8],rax
   14001537e:	test   rax,rax
   140015381:	je     0x140015387
   140015383:	lock inc DWORD PTR [rax+0x8]
   140015387:	mov    rax,rcx
   14001538a:	ret    
   14001538b:	int3   
   14001538c:	int3   
   14001538d:	int3   
   14001538e:	int3   
   14001538f:	int3   
   140015390:	mov    QWORD PTR [rsp+0x8],rcx
   140015395:	push   rdi
   140015396:	sub    rsp,0x30
   14001539a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400153a3:	mov    QWORD PTR [rsp+0x48],rbx
   1400153a8:	mov    rbx,rdx
   1400153ab:	mov    rdi,rcx
   1400153ae:	call   0x1400117a0
   1400153b3:	nop
   1400153b4:	mov    rax,QWORD PTR [rbx+0x50]
   1400153b8:	mov    QWORD PTR [rdi+0x50],rax
   1400153bc:	mov    rax,QWORD PTR [rbx+0x58]
   1400153c0:	mov    QWORD PTR [rdi+0x58],rax
   1400153c4:	movzx  eax,BYTE PTR [rbx+0x60]
   1400153c8:	mov    BYTE PTR [rdi+0x60],al
   1400153cb:	lea    rcx,[rdi+0x68]
   1400153cf:	mov    QWORD PTR [rcx+0x18],0xf
   1400153d7:	mov    QWORD PTR [rcx+0x10],0x0
   1400153df:	mov    BYTE PTR [rcx],0x0
   1400153e2:	lea    rdx,[rbx+0x68]
   1400153e6:	or     r9,0xffffffffffffffff
   1400153ea:	xor    r8d,r8d
   1400153ed:	call   0x14001ef20
   1400153f2:	nop
   1400153f3:	mov    rax,rdi
   1400153f6:	mov    rbx,QWORD PTR [rsp+0x48]
   1400153fb:	add    rsp,0x30
   1400153ff:	pop    rdi
   140015400:	ret    
   140015401:	int3   
   140015402:	int3   
   140015403:	int3   
   140015404:	int3   
   140015405:	int3   
   140015406:	int3   
   140015407:	int3   
   140015408:	int3   
   140015409:	int3   
   14001540a:	int3   
   14001540b:	int3   
   14001540c:	int3   
   14001540d:	int3   
   14001540e:	int3   
   14001540f:	int3   
   140015410:	mov    QWORD PTR [rsp+0x20],r9
   140015415:	mov    QWORD PTR [rsp+0x18],r8
   14001541a:	mov    QWORD PTR [rsp+0x10],rdx
   14001541f:	mov    QWORD PTR [rsp+0x8],rcx
   140015424:	push   rbx
   140015425:	push   rdi
   140015426:	sub    rsp,0x38
   14001542a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140015433:	mov    rbx,rdx
   140015436:	mov    rdi,rcx
   140015439:	call   0x1400117a0
   14001543e:	nop
   14001543f:	lea    rdx,[rdi+0x50]
   140015443:	mov    rax,QWORD PTR [rsp+0x60]
   140015448:	mov    QWORD PTR [rdx],rax
   14001544b:	mov    rax,QWORD PTR [rsp+0x68]
   140015450:	mov    QWORD PTR [rdi+0x58],rax
   140015454:	mov    BYTE PTR [rdi+0x60],0x0
   140015458:	lea    r9,[rdi+0x68]
   14001545c:	mov    QWORD PTR [r9+0x18],0xf
   140015464:	mov    QWORD PTR [r9+0x10],0x0
   14001546c:	mov    BYTE PTR [r9],0x0
   140015470:	cmp    BYTE PTR [rdi+0x60],0x0
   140015474:	jne    0x140015491
   140015476:	mov    rax,QWORD PTR [rdi+0x58]
   14001547a:	cmp    QWORD PTR [rdx],rax
   14001547d:	je     0x14001548c
   14001547f:	mov    r8,rax
   140015482:	mov    rcx,rdi
   140015485:	call   0x140003720
   14001548a:	jmp    0x14001548e
   14001548c:	xor    eax,eax
   14001548e:	mov    BYTE PTR [rdi+0x60],al
   140015491:	cmp    QWORD PTR [rbx+0x38],0x10
   140015496:	jb     0x1400154a1
   140015498:	mov    rcx,QWORD PTR [rbx+0x20]
   14001549c:	call   0x140030282
   1400154a1:	mov    QWORD PTR [rbx+0x38],0xf
   1400154a9:	mov    QWORD PTR [rbx+0x30],0x0
   1400154b1:	mov    BYTE PTR [rbx+0x20],0x0
   1400154b5:	cmp    QWORD PTR [rbx+0x18],0x10
   1400154ba:	jb     0x1400154c4
   1400154bc:	mov    rcx,QWORD PTR [rbx]
   1400154bf:	call   0x140030282
   1400154c4:	mov    QWORD PTR [rbx+0x18],0xf
   1400154cc:	mov    QWORD PTR [rbx+0x10],0x0
   1400154d4:	mov    BYTE PTR [rbx],0x0
   1400154d7:	mov    rax,rdi
   1400154da:	add    rsp,0x38
   1400154de:	pop    rdi
   1400154df:	pop    rbx
   1400154e0:	ret    
   1400154e1:	int3   
   1400154e2:	int3   
   1400154e3:	int3   
   1400154e4:	int3   
   1400154e5:	int3   
   1400154e6:	int3   
   1400154e7:	int3   
   1400154e8:	int3   
   1400154e9:	int3   
   1400154ea:	int3   
   1400154eb:	int3   
   1400154ec:	int3   
   1400154ed:	int3   
   1400154ee:	int3   
   1400154ef:	int3   
   1400154f0:	mov    rax,QWORD PTR [rdx]
   1400154f3:	mov    QWORD PTR [rcx],rax
   1400154f6:	movzx  eax,BYTE PTR [rdx+0x8]
   1400154fa:	mov    BYTE PTR [rcx+0x8],al
   1400154fd:	movzx  eax,BYTE PTR [rdx+0xa]
   140015501:	mov    BYTE PTR [rcx+0xa],al
   140015504:	mov    eax,DWORD PTR [rdx+0xc]
   140015507:	mov    BYTE PTR [rcx+0x10],0x0
   14001550b:	mov    DWORD PTR [rcx+0xc],eax
   14001550e:	mov    rax,rcx
   140015511:	ret    
   140015512:	int3   
   140015513:	int3   
   140015514:	int3   
   140015515:	int3   
   140015516:	int3   
   140015517:	int3   
   140015518:	int3   
   140015519:	int3   
   14001551a:	int3   
   14001551b:	int3   
   14001551c:	int3   
   14001551d:	int3   
   14001551e:	int3   
   14001551f:	int3   
   140015520:	mov    rax,QWORD PTR [rdx]
   140015523:	mov    QWORD PTR [rcx],rax
   140015526:	mov    rax,rcx
   140015529:	ret    
   14001552a:	int3   
   14001552b:	int3   
   14001552c:	int3   
   14001552d:	int3   
   14001552e:	int3   
   14001552f:	int3   
   140015530:	mov    rax,QWORD PTR [rdx]
   140015533:	mov    QWORD PTR [rcx],rax
   140015536:	movzx  eax,BYTE PTR [rdx+0x8]
   14001553a:	mov    BYTE PTR [rcx+0x8],al
   14001553d:	movzx  eax,BYTE PTR [rdx+0xa]
   140015541:	mov    BYTE PTR [rcx+0xa],al
   140015544:	mov    eax,DWORD PTR [rdx+0xc]
   140015547:	mov    BYTE PTR [rcx+0x10],0x0
   14001554b:	mov    DWORD PTR [rcx+0xc],eax
   14001554e:	mov    rax,rcx
   140015551:	ret    
   140015552:	int3   
   140015553:	int3   
   140015554:	int3   
   140015555:	int3   
   140015556:	int3   
   140015557:	int3   
   140015558:	int3   
   140015559:	int3   
   14001555a:	int3   
   14001555b:	int3   
   14001555c:	int3   
   14001555d:	int3   
   14001555e:	int3   
   14001555f:	int3   
   140015560:	mov    rax,QWORD PTR [rdx]
   140015563:	mov    QWORD PTR [rcx],rax
   140015566:	movzx  eax,BYTE PTR [rdx+0x10]
   14001556a:	mov    BYTE PTR [rcx+0x10],al
   14001556d:	movzx  eax,BYTE PTR [rdx+0x12]
   140015571:	mov    BYTE PTR [rcx+0x12],al
   140015574:	mov    eax,DWORD PTR [rdx+0x14]
   140015577:	mov    BYTE PTR [rcx+0x18],0x0
   14001557b:	mov    DWORD PTR [rcx+0x14],eax
   14001557e:	mov    rax,rcx
   140015581:	ret    
   140015582:	int3   
   140015583:	int3   
   140015584:	int3   
   140015585:	int3   
   140015586:	int3   
   140015587:	int3   
   140015588:	int3   
   140015589:	int3   
   14001558a:	int3   
   14001558b:	int3   
   14001558c:	int3   
   14001558d:	int3   
   14001558e:	int3   
   14001558f:	int3   
   140015590:	mov    rax,rcx
   140015593:	ret    
   140015594:	int3   
   140015595:	int3   
   140015596:	int3   
   140015597:	int3   
   140015598:	int3   
   140015599:	int3   
   14001559a:	int3   
   14001559b:	int3   
   14001559c:	int3   
   14001559d:	int3   
   14001559e:	int3   
   14001559f:	int3   
   1400155a0:	mov    QWORD PTR [rcx+0x10],rdx
   1400155a4:	lea    rax,[rip+0x26ce5]        # 0x14003c290
   1400155ab:	mov    QWORD PTR [rcx],rax
   1400155ae:	lea    rax,[rip+0x26d33]        # 0x14003c2e8
   1400155b5:	mov    QWORD PTR [rcx+0x8],rax
   1400155b9:	xor    eax,eax
   1400155bb:	mov    QWORD PTR [rcx+0x30],0xf
   1400155c3:	mov    QWORD PTR [rcx+0x28],rax
   1400155c7:	mov    BYTE PTR [rcx+0x18],al
   1400155ca:	mov    QWORD PTR [rcx+0x38],rax
   1400155ce:	mov    QWORD PTR [rcx+0x50],rax
   1400155d2:	mov    QWORD PTR [rcx+0x58],0xf
   1400155da:	mov    BYTE PTR [rcx+0x40],al
   1400155dd:	mov    QWORD PTR [rcx+0x60],rax
   1400155e1:	mov    QWORD PTR [rcx+0x78],rax
   1400155e5:	mov    QWORD PTR [rcx+0x80],0xf
   1400155f0:	mov    BYTE PTR [rcx+0x68],al
   1400155f3:	mov    BYTE PTR [rcx+0x88],al
   1400155f9:	mov    WORD PTR [rcx+0x8a],ax
   140015600:	mov    BYTE PTR [rcx+0x8c],al
   140015606:	mov    QWORD PTR [rcx+0x90],rax
   14001560d:	mov    rax,rcx
   140015610:	ret    
   140015611:	int3   
   140015612:	int3   
   140015613:	int3   
   140015614:	int3   
   140015615:	int3   
   140015616:	int3   
   140015617:	int3   
   140015618:	int3   
   140015619:	int3   
   14001561a:	int3   
   14001561b:	int3   
   14001561c:	int3   
   14001561d:	int3   
   14001561e:	int3   
   14001561f:	int3   
   140015620:	mov    DWORD PTR [rcx],edx
   140015622:	mov    DWORD PTR [rcx+0x4],r8d
   140015626:	mov    rax,rcx
   140015629:	ret    
   14001562a:	int3   
   14001562b:	int3   
   14001562c:	int3   
   14001562d:	int3   
   14001562e:	int3   
   14001562f:	int3   
   140015630:	mov    DWORD PTR [rcx],edx
   140015632:	mov    DWORD PTR [rcx+0x4],r8d
   140015636:	mov    rax,rcx
   140015639:	ret    
   14001563a:	int3   
   14001563b:	int3   
   14001563c:	int3   
   14001563d:	int3   
   14001563e:	int3   
   14001563f:	int3   
   140015640:	mov    QWORD PTR [rcx],rdx
   140015643:	mov    QWORD PTR [rcx+0x8],r8
   140015647:	mov    rax,rcx
   14001564a:	ret    
   14001564b:	int3   
   14001564c:	int3   
   14001564d:	int3   
   14001564e:	int3   
   14001564f:	int3   
   140015650:	mov    QWORD PTR [rsp+0x8],rcx
   140015655:	push   rdi
   140015656:	sub    rsp,0x40
   14001565a:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140015663:	mov    QWORD PTR [rsp+0x60],rbx
   140015668:	mov    rdi,rdx
   14001566b:	mov    rbx,rcx
   14001566e:	xor    eax,eax
   140015670:	mov    QWORD PTR [rcx],rax
   140015673:	mov    QWORD PTR [rcx+0x8],rax
   140015677:	mov    QWORD PTR [rcx+0x10],rax
   14001567b:	mov    r8,QWORD PTR [rdx+0x8]
   14001567f:	sub    r8,QWORD PTR [rdx]
   140015682:	movabs rax,0x2aaaaaaaaaaaaaab
   14001568c:	imul   r8
   14001568f:	sar    rdx,0x4
   140015693:	mov    rax,rdx
   140015696:	shr    rax,0x3f
   14001569a:	add    rdx,rax
   14001569d:	call   0x14001c3b0
   1400156a2:	test   al,al
   1400156a4:	je     0x1400156c7
   1400156a6:	movzx  eax,BYTE PTR [rsp+0x50]
   1400156ab:	mov    BYTE PTR [rsp+0x20],al
   1400156af:	lea    r9,[rsp+0x58]
   1400156b4:	mov    r8,QWORD PTR [rbx]
   1400156b7:	mov    rdx,QWORD PTR [rdi+0x8]
   1400156bb:	mov    rcx,QWORD PTR [rdi]
   1400156be:	call   0x140005670
   1400156c3:	mov    QWORD PTR [rbx+0x8],rax
   1400156c7:	mov    rax,rbx
   1400156ca:	mov    rbx,QWORD PTR [rsp+0x60]
   1400156cf:	add    rsp,0x40
   1400156d3:	pop    rdi
   1400156d4:	ret    
   1400156d5:	int3   
   1400156d6:	int3   
   1400156d7:	int3   
   1400156d8:	int3   
   1400156d9:	int3   
   1400156da:	int3   
   1400156db:	int3   
   1400156dc:	int3   
   1400156dd:	int3   
   1400156de:	int3   
   1400156df:	int3   
   1400156e0:	xor    eax,eax
   1400156e2:	mov    QWORD PTR [rcx],rax
   1400156e5:	mov    QWORD PTR [rcx+0x8],rax
   1400156e9:	mov    QWORD PTR [rcx+0x10],rax
   1400156ed:	mov    rax,rcx
   1400156f0:	ret    
   1400156f1:	int3   
   1400156f2:	int3   
   1400156f3:	int3   
   1400156f4:	int3   
   1400156f5:	int3   
   1400156f6:	int3   
   1400156f7:	int3   
   1400156f8:	int3   
   1400156f9:	int3   
   1400156fa:	int3   
   1400156fb:	int3   
   1400156fc:	int3   
   1400156fd:	int3   
   1400156fe:	int3   
   1400156ff:	int3   
   140015700:	xor    r8d,r8d
   140015703:	mov    QWORD PTR [rcx],r8
   140015706:	mov    QWORD PTR [rcx+0x8],r8
   14001570a:	mov    QWORD PTR [rcx+0x10],r8
   14001570e:	mov    rax,QWORD PTR [rdx]
   140015711:	mov    QWORD PTR [rcx],rax
   140015714:	mov    rax,QWORD PTR [rdx+0x8]
   140015718:	mov    QWORD PTR [rcx+0x8],rax
   14001571c:	mov    rax,QWORD PTR [rdx+0x10]
   140015720:	mov    QWORD PTR [rcx+0x10],rax
   140015724:	mov    QWORD PTR [rdx],r8
   140015727:	mov    QWORD PTR [rdx+0x8],r8
   14001572b:	mov    QWORD PTR [rdx+0x10],r8
   14001572f:	mov    rax,rcx
   140015732:	ret    
   140015733:	int3   
   140015734:	int3   
   140015735:	int3   
   140015736:	int3   
   140015737:	int3   
   140015738:	int3   
   140015739:	int3   
   14001573a:	int3   
   14001573b:	int3   
   14001573c:	int3   
   14001573d:	int3   
   14001573e:	int3   
   14001573f:	int3   
   140015740:	mov    QWORD PTR [rsp+0x8],rcx
   140015745:	push   rdi
   140015746:	sub    rsp,0x40
   14001574a:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140015753:	mov    QWORD PTR [rsp+0x60],rbx
   140015758:	mov    rdi,rdx
   14001575b:	mov    rbx,rcx
   14001575e:	xor    eax,eax
   140015760:	mov    QWORD PTR [rcx],rax
   140015763:	mov    QWORD PTR [rcx+0x8],rax
   140015767:	mov    QWORD PTR [rcx+0x10],rax
   14001576b:	mov    rdx,QWORD PTR [rdx+0x8]
   14001576f:	sub    rdx,QWORD PTR [rdi]
   140015772:	sar    rdx,0x5
   140015776:	call   0x14001c430
   14001577b:	test   al,al
   14001577d:	je     0x1400157a0
   14001577f:	movzx  eax,BYTE PTR [rsp+0x50]
   140015784:	mov    BYTE PTR [rsp+0x20],al
   140015788:	lea    r9,[rsp+0x58]
   14001578d:	mov    r8,QWORD PTR [rbx]
   140015790:	mov    rdx,QWORD PTR [rdi+0x8]
   140015794:	mov    rcx,QWORD PTR [rdi]
   140015797:	call   0x140005740
   14001579c:	mov    QWORD PTR [rbx+0x8],rax
   1400157a0:	mov    rax,rbx
   1400157a3:	mov    rbx,QWORD PTR [rsp+0x60]
   1400157a8:	add    rsp,0x40
   1400157ac:	pop    rdi
   1400157ad:	ret    
   1400157ae:	int3   
   1400157af:	int3   
   1400157b0:	xor    eax,eax
   1400157b2:	mov    QWORD PTR [rcx],rax
   1400157b5:	mov    QWORD PTR [rcx+0x8],rax
   1400157b9:	mov    QWORD PTR [rcx+0x10],rax
   1400157bd:	mov    rax,rcx
   1400157c0:	ret    
   1400157c1:	int3   
   1400157c2:	int3   
   1400157c3:	int3   
   1400157c4:	int3   
   1400157c5:	int3   
   1400157c6:	int3   
   1400157c7:	int3   
   1400157c8:	int3   
   1400157c9:	int3   
   1400157ca:	int3   
   1400157cb:	int3   
   1400157cc:	int3   
   1400157cd:	int3   
   1400157ce:	int3   
   1400157cf:	int3   
   1400157d0:	rex push rbx
   1400157d2:	sub    rsp,0x20
   1400157d6:	mov    BYTE PTR [rcx],dl
   1400157d8:	mov    QWORD PTR [rcx+0x8],r8
   1400157dc:	mov    rax,r9
   1400157df:	mov    rbx,rcx
   1400157e2:	add    rcx,0x10
   1400157e6:	or     r9,0xffffffffffffffff
   1400157ea:	mov    QWORD PTR [rcx+0x18],0xf
   1400157f2:	mov    QWORD PTR [rcx+0x10],0x0
   1400157fa:	xor    r8d,r8d
   1400157fd:	mov    rdx,rax
   140015800:	mov    BYTE PTR [rcx],0x0
   140015803:	call   0x14001ef20
   140015808:	mov    rax,rbx
   14001580b:	add    rsp,0x20
   14001580f:	pop    rbx
   140015810:	ret    
   140015811:	int3   
   140015812:	int3   
   140015813:	int3   
   140015814:	int3   
   140015815:	int3   
   140015816:	int3   
   140015817:	int3   
   140015818:	int3   
   140015819:	int3   
   14001581a:	int3   
   14001581b:	int3   
   14001581c:	int3   
   14001581d:	int3   
   14001581e:	int3   
   14001581f:	int3   
   140015820:	mov    WORD PTR [rcx],dx
   140015823:	mov    WORD PTR [rcx+0x2],r8w
   140015828:	mov    WORD PTR [rcx+0x4],r9w
   14001582d:	mov    rax,rcx
   140015830:	ret    
   140015831:	int3   
   140015832:	int3   
   140015833:	int3   
   140015834:	int3   
   140015835:	int3   
   140015836:	int3   
   140015837:	int3   
   140015838:	int3   
   140015839:	int3   
   14001583a:	int3   
   14001583b:	int3   
   14001583c:	int3   
   14001583d:	int3   
   14001583e:	int3   
   14001583f:	int3   
   140015840:	mov    rax,rcx
   140015843:	ret    
   140015844:	int3   
   140015845:	int3   
   140015846:	int3   
   140015847:	int3   
   140015848:	int3   
   140015849:	int3   
   14001584a:	int3   
   14001584b:	int3   
   14001584c:	int3   
   14001584d:	int3   
   14001584e:	int3   
   14001584f:	int3   
   140015850:	mov    QWORD PTR [rsp+0x8],rcx
   140015855:	push   rdi
   140015856:	sub    rsp,0x40
   14001585a:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140015863:	mov    QWORD PTR [rsp+0x58],rbx
   140015868:	mov    rdi,rdx
   14001586b:	mov    rbx,rcx
   14001586e:	call   QWORD PTR [rip+0x20d7c]        # 0x1400365f0
   140015874:	nop
   140015875:	test   rbx,rbx
   140015878:	je     0x140015880
   14001587a:	lea    rax,[rbx+0x20]
   14001587e:	jmp    0x140015882
   140015880:	xor    eax,eax
   140015882:	mov    QWORD PTR [rsp+0x28],rax
   140015887:	mov    QWORD PTR [rsp+0x20],0x0
   140015890:	xor    r9d,r9d
   140015893:	mov    r8b,0x1
   140015896:	mov    rdx,rdi
   140015899:	mov    rcx,rbx
   14001589c:	call   QWORD PTR [rip+0x20d0e]        # 0x1400365b0
   1400158a2:	nop
   1400158a3:	mov    rax,rbx
   1400158a6:	mov    rbx,QWORD PTR [rsp+0x58]
   1400158ab:	add    rsp,0x40
   1400158af:	pop    rdi
   1400158b0:	ret    
   1400158b1:	int3   
   1400158b2:	int3   
   1400158b3:	int3   
   1400158b4:	int3   
   1400158b5:	int3   
   1400158b6:	int3   
   1400158b7:	int3   
   1400158b8:	int3   
   1400158b9:	int3   
   1400158ba:	int3   
   1400158bb:	int3   
   1400158bc:	int3   
   1400158bd:	int3   
   1400158be:	int3   
   1400158bf:	int3   
   1400158c0:	mov    QWORD PTR [rsp+0x8],rcx
   1400158c5:	push   rdi
   1400158c6:	sub    rsp,0x50
   1400158ca:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   1400158d3:	mov    QWORD PTR [rsp+0x68],rbx
   1400158d8:	mov    ebx,edx
   1400158da:	mov    rdi,rcx
   1400158dd:	call   QWORD PTR [rip+0x20d0d]        # 0x1400365f0
   1400158e3:	nop
   1400158e4:	mov    rax,QWORD PTR [rip+0x20cdd]        # 0x1400365c8
   1400158eb:	mov    r10d,DWORD PTR [rax]
   1400158ee:	mov    rax,QWORD PTR [rip+0x20ccb]        # 0x1400365c0
   1400158f5:	mov    r9d,DWORD PTR [rax]
   1400158f8:	mov    rax,QWORD PTR [rip+0x20cb9]        # 0x1400365b8
   1400158ff:	mov    r8d,DWORD PTR [rax]
   140015902:	mov    DWORD PTR [rsp+0x38],r8d
   140015907:	mov    DWORD PTR [rsp+0x3c],r9d
   14001590c:	mov    DWORD PTR [rsp+0x44],0x8
   140015914:	mov    DWORD PTR [rsp+0x48],r10d
   140015919:	mov    WORD PTR [rsp+0x4c],0x0
   140015920:	mov    DWORD PTR [rsp+0x40],ebx
   140015924:	test   rdi,rdi
   140015927:	je     0x14001592f
   140015929:	lea    rax,[rdi+0x20]
   14001592d:	jmp    0x140015931
   14001592f:	xor    eax,eax
   140015931:	mov    QWORD PTR [rsp+0x28],rax
   140015936:	mov    QWORD PTR [rsp+0x20],0x0
   14001593f:	xor    r9d,r9d
   140015942:	xor    r8d,r8d
   140015945:	lea    rdx,[rsp+0x38]
   14001594a:	mov    rcx,rdi
   14001594d:	call   QWORD PTR [rip+0x20c5d]        # 0x1400365b0
   140015953:	nop
   140015954:	mov    rax,rdi
   140015957:	mov    rbx,QWORD PTR [rsp+0x68]
   14001595c:	add    rsp,0x50
   140015960:	pop    rdi
   140015961:	ret    
   140015962:	int3   
   140015963:	int3   
   140015964:	int3   
   140015965:	int3   
   140015966:	int3   
   140015967:	int3   
   140015968:	int3   
   140015969:	int3   
   14001596a:	int3   
   14001596b:	int3   
   14001596c:	int3   
   14001596d:	int3   
   14001596e:	int3   
   14001596f:	int3   
   140015970:	mov    QWORD PTR [rsp+0x8],rcx
   140015975:	push   rbx
   140015976:	sub    rsp,0x30
   14001597a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140015983:	mov    rbx,rcx
   140015986:	call   QWORD PTR [rip+0x20bdc]        # 0x140036568
   14001598c:	nop
   14001598d:	xor    r8d,r8d
   140015990:	mov    edx,0x1080
   140015995:	mov    rcx,rbx
   140015998:	call   QWORD PTR [rip+0x20bba]        # 0x140036558
   14001599e:	nop
   14001599f:	mov    rax,rbx
   1400159a2:	add    rsp,0x30
   1400159a6:	pop    rbx
   1400159a7:	ret    
   1400159a8:	int3   
   1400159a9:	int3   
   1400159aa:	int3   
   1400159ab:	int3   
   1400159ac:	int3   
   1400159ad:	int3   
   1400159ae:	int3   
   1400159af:	int3   
   1400159b0:	lea    rax,[rip+0x24d31]        # 0x14003a6e8
   1400159b7:	mov    QWORD PTR [rcx],rax
   1400159ba:	mov    rax,rcx
   1400159bd:	ret    
   1400159be:	int3   
   1400159bf:	int3   
   1400159c0:	mov    rax,rcx
   1400159c3:	ret    
   1400159c4:	int3   
   1400159c5:	int3   
   1400159c6:	int3   
   1400159c7:	int3   
   1400159c8:	int3   
   1400159c9:	int3   
   1400159ca:	int3   
   1400159cb:	int3   
   1400159cc:	int3   
   1400159cd:	int3   
   1400159ce:	int3   
   1400159cf:	int3   
   1400159d0:	lea    rax,[rip+0x24d61]        # 0x14003a738
   1400159d7:	mov    QWORD PTR [rcx],rax
   1400159da:	mov    rax,rcx
   1400159dd:	ret    
   1400159de:	int3   
   1400159df:	int3   
   1400159e0:	rex push rbx
   1400159e2:	sub    rsp,0x20
   1400159e6:	mov    QWORD PTR [rcx],rdx
   1400159e9:	mov    rax,QWORD PTR [rdx]
   1400159ec:	mov    rbx,rcx
   1400159ef:	movsxd r8,DWORD PTR [rax+0x4]
   1400159f3:	mov    rcx,QWORD PTR [r8+rdx*1+0x48]
   1400159f8:	test   rcx,rcx
   1400159fb:	je     0x140015a03
   1400159fd:	mov    rax,QWORD PTR [rcx]
   140015a00:	call   QWORD PTR [rax+0x8]
   140015a03:	mov    rax,rbx
   140015a06:	add    rsp,0x20
   140015a0a:	pop    rbx
   140015a0b:	ret    
   140015a0c:	int3   
   140015a0d:	int3   
   140015a0e:	int3   
   140015a0f:	int3   
   140015a10:	mov    r11,rsp
   140015a13:	push   rdi
   140015a14:	sub    rsp,0x80
   140015a1b:	mov    QWORD PTR [r11-0x68],0xfffffffffffffffe
   140015a23:	mov    QWORD PTR [r11+0x10],rbx
   140015a27:	mov    rax,r8
   140015a2a:	mov    rdi,rdx
   140015a2d:	mov    rbx,rcx
   140015a30:	mov    QWORD PTR [r11-0x30],0xf
   140015a38:	mov    QWORD PTR [r11-0x38],0x0
   140015a40:	mov    BYTE PTR [rsp+0x40],0x0
   140015a45:	or     r9,0xffffffffffffffff
   140015a49:	xor    r8d,r8d
   140015a4c:	mov    rdx,rax
   140015a4f:	lea    rcx,[r11-0x48]
   140015a53:	call   0x14001ef20
   140015a58:	movups xmm0,XMMWORD PTR [rdi]
   140015a5b:	movaps XMMWORD PTR [rsp+0x30],xmm0
   140015a60:	lea    r8,[rsp+0x40]
   140015a65:	lea    rdx,[rsp+0x30]
   140015a6a:	lea    rcx,[rsp+0x60]
   140015a6f:	call   0x14001d2b0
   140015a74:	nop
   140015a75:	cmp    QWORD PTR [rax+0x18],0x10
   140015a7a:	jb     0x140015a7f
   140015a7c:	mov    rax,QWORD PTR [rax]
   140015a7f:	mov    QWORD PTR [rsp+0x90],rax
   140015a87:	lea    rdx,[rsp+0x90]
   140015a8f:	mov    rcx,rbx
   140015a92:	call   QWORD PTR [rip+0x209b8]        # 0x140036450
   140015a98:	lea    rax,[rip+0x24bb9]        # 0x14003a658
   140015a9f:	mov    QWORD PTR [rbx],rax
   140015aa2:	cmp    QWORD PTR [rsp+0x78],0x10
   140015aa8:	jb     0x140015ab4
   140015aaa:	mov    rcx,QWORD PTR [rsp+0x60]
   140015aaf:	call   0x140030282
   140015ab4:	lea    rax,[rip+0x24bf5]        # 0x14003a6b0
   140015abb:	mov    QWORD PTR [rbx],rax
   140015abe:	movups xmm0,XMMWORD PTR [rdi]
   140015ac1:	movups XMMWORD PTR [rbx+0x18],xmm0
   140015ac5:	mov    rax,rbx
   140015ac8:	mov    rbx,QWORD PTR [rsp+0x98]
   140015ad0:	add    rsp,0x80
   140015ad7:	pop    rdi
   140015ad8:	ret    
   140015ad9:	int3   
   140015ada:	int3   
   140015adb:	int3   
   140015adc:	int3   
   140015add:	int3   
   140015ade:	int3   
   140015adf:	int3   
   140015ae0:	mov    QWORD PTR [rsp+0x8],rbx
   140015ae5:	push   rdi
   140015ae6:	sub    rsp,0x20
   140015aea:	mov    rbx,rdx
   140015aed:	mov    rdi,rcx
   140015af0:	call   QWORD PTR [rip+0x20952]        # 0x140036448
   140015af6:	lea    rax,[rip+0x24bb3]        # 0x14003a6b0
   140015afd:	mov    QWORD PTR [rdi],rax
   140015b00:	mov    rax,rdi
   140015b03:	movups xmm0,XMMWORD PTR [rbx+0x18]
   140015b07:	mov    rbx,QWORD PTR [rsp+0x30]
   140015b0c:	movups XMMWORD PTR [rdi+0x18],xmm0
   140015b10:	add    rsp,0x20
   140015b14:	pop    rdi
   140015b15:	ret    
   140015b16:	int3   
   140015b17:	int3   
   140015b18:	int3   
   140015b19:	int3   
   140015b1a:	int3   
   140015b1b:	int3   
   140015b1c:	int3   
   140015b1d:	int3   
   140015b1e:	int3   
   140015b1f:	int3   
   140015b20:	lea    rax,[rip+0x24c71]        # 0x14003a798
   140015b27:	mov    QWORD PTR [rcx],rax
   140015b2a:	mov    rax,rcx
   140015b2d:	ret    
   140015b2e:	int3   
   140015b2f:	int3   
   140015b30:	rex push rbx
   140015b32:	sub    rsp,0x20
   140015b36:	mov    rbx,rcx
   140015b39:	mov    rcx,QWORD PTR [rdx]
   140015b3c:	test   rcx,rcx
   140015b3f:	je     0x140015b53
   140015b41:	mov    rax,QWORD PTR [rcx]
   140015b44:	call   QWORD PTR [rax+0x10]
   140015b47:	mov    QWORD PTR [rbx],rax
   140015b4a:	mov    rax,rbx
   140015b4d:	add    rsp,0x20
   140015b51:	pop    rbx
   140015b52:	ret    
   140015b53:	mov    QWORD PTR [rbx],0x0
   140015b5a:	mov    rax,rbx
   140015b5d:	add    rsp,0x20
   140015b61:	pop    rbx
   140015b62:	ret    
   140015b63:	int3   
   140015b64:	int3   
   140015b65:	int3   
   140015b66:	int3   
   140015b67:	int3   
   140015b68:	int3   
   140015b69:	int3   
   140015b6a:	int3   
   140015b6b:	int3   
   140015b6c:	int3   
   140015b6d:	int3   
   140015b6e:	int3   
   140015b6f:	int3   
   140015b70:	mov    QWORD PTR [rcx],0x0
   140015b77:	mov    rax,rcx
   140015b7a:	ret    
   140015b7b:	int3   
   140015b7c:	int3   
   140015b7d:	int3   
   140015b7e:	int3   
   140015b7f:	int3   
   140015b80:	mov    QWORD PTR [rcx],rdx
   140015b83:	mov    rax,rcx
   140015b86:	ret    
   140015b87:	int3   
   140015b88:	int3   
   140015b89:	int3   
   140015b8a:	int3   
   140015b8b:	int3   
   140015b8c:	int3   
   140015b8d:	int3   
   140015b8e:	int3   
   140015b8f:	int3   
   140015b90:	rex push rbx
   140015b92:	sub    rsp,0x20
   140015b96:	mov    rbx,rcx
   140015b99:	call   QWORD PTR [rip+0x208a9]        # 0x140036448
   140015b9f:	lea    rax,[rip+0x24f02]        # 0x14003aaa8
   140015ba6:	mov    QWORD PTR [rbx],rax
   140015ba9:	mov    rax,rbx
   140015bac:	add    rsp,0x20
   140015bb0:	pop    rbx
   140015bb1:	ret    
   140015bb2:	int3   
   140015bb3:	int3   
   140015bb4:	int3   
   140015bb5:	int3   
   140015bb6:	int3   
   140015bb7:	int3   
   140015bb8:	int3   
   140015bb9:	int3   
   140015bba:	int3   
   140015bbb:	int3   
   140015bbc:	int3   
   140015bbd:	int3   
   140015bbe:	int3   
   140015bbf:	int3   
   140015bc0:	rex push rbx
   140015bc2:	sub    rsp,0x20
   140015bc6:	cmp    QWORD PTR [rdx+0x18],0x10
   140015bcb:	mov    rbx,rcx
   140015bce:	jb     0x140015bd3
   140015bd0:	mov    rdx,QWORD PTR [rdx]
   140015bd3:	mov    QWORD PTR [rsp+0x30],rdx
   140015bd8:	lea    rdx,[rsp+0x30]
   140015bdd:	call   QWORD PTR [rip+0x2086d]        # 0x140036450
   140015be3:	lea    rax,[rip+0x24ebe]        # 0x14003aaa8
   140015bea:	mov    QWORD PTR [rbx],rax
   140015bed:	mov    rax,rbx
   140015bf0:	add    rsp,0x20
   140015bf4:	pop    rbx
   140015bf5:	ret    
   140015bf6:	int3   
   140015bf7:	int3   
   140015bf8:	int3   
   140015bf9:	int3   
   140015bfa:	int3   
   140015bfb:	int3   
   140015bfc:	int3   
   140015bfd:	int3   
   140015bfe:	int3   
   140015bff:	int3   
   140015c00:	rex push rbx
   140015c02:	sub    rsp,0x50
   140015c06:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140015c0f:	mov    rbx,rcx
   140015c12:	mov    QWORD PTR [rsp+0x40],0xf
   140015c1b:	mov    QWORD PTR [rsp+0x38],0x0
   140015c24:	mov    BYTE PTR [rsp+0x28],0x0
   140015c29:	mov    r8d,0x28
   140015c2f:	lea    rdx,[rip+0x24e82]        # 0x14003aab8
   140015c36:	lea    rcx,[rsp+0x28]
   140015c3b:	call   0x14001f070
   140015c40:	nop
   140015c41:	lea    rax,[rsp+0x28]
   140015c46:	cmp    QWORD PTR [rsp+0x40],0x10
   140015c4c:	cmovae rax,QWORD PTR [rsp+0x28]
   140015c52:	mov    QWORD PTR [rsp+0x60],rax
   140015c57:	lea    rdx,[rsp+0x60]
   140015c5c:	mov    rcx,rbx
   140015c5f:	call   QWORD PTR [rip+0x207eb]        # 0x140036450
   140015c65:	lea    rax,[rip+0x249d4]        # 0x14003a640
   140015c6c:	mov    QWORD PTR [rbx],rax
   140015c6f:	cmp    QWORD PTR [rsp+0x40],0x10
   140015c75:	jb     0x140015c81
   140015c77:	mov    rcx,QWORD PTR [rsp+0x28]
   140015c7c:	call   0x140030282
   140015c81:	lea    rax,[rip+0x24e20]        # 0x14003aaa8
   140015c88:	mov    QWORD PTR [rbx],rax
   140015c8b:	mov    rax,rbx
   140015c8e:	add    rsp,0x50
   140015c92:	pop    rbx
   140015c93:	ret    
   140015c94:	int3   
   140015c95:	int3   
   140015c96:	int3   
   140015c97:	int3   
   140015c98:	int3   
   140015c99:	int3   
   140015c9a:	int3   
   140015c9b:	int3   
   140015c9c:	int3   
   140015c9d:	int3   
   140015c9e:	int3   
   140015c9f:	int3   
   140015ca0:	rex push rbx
   140015ca2:	sub    rsp,0x20
   140015ca6:	mov    rbx,rcx
   140015ca9:	call   QWORD PTR [rip+0x20799]        # 0x140036448
   140015caf:	lea    rax,[rip+0x24bd2]        # 0x14003a888
   140015cb6:	mov    QWORD PTR [rbx],rax
   140015cb9:	mov    rax,rbx
   140015cbc:	add    rsp,0x20
   140015cc0:	pop    rbx
   140015cc1:	ret    
   140015cc2:	int3   
   140015cc3:	int3   
   140015cc4:	int3   
   140015cc5:	int3   
   140015cc6:	int3   
   140015cc7:	int3   
   140015cc8:	int3   
   140015cc9:	int3   
   140015cca:	int3   
   140015ccb:	int3   
   140015ccc:	int3   
   140015ccd:	int3   
   140015cce:	int3   
   140015ccf:	int3   
   140015cd0:	rex push rbx
   140015cd2:	sub    rsp,0x20
   140015cd6:	lea    rax,[rip+0x24bbb]        # 0x14003a898
   140015cdd:	lea    rdx,[rsp+0x30]
   140015ce2:	mov    rbx,rcx
   140015ce5:	mov    QWORD PTR [rsp+0x30],rax
   140015cea:	call   QWORD PTR [rip+0x20760]        # 0x140036450
   140015cf0:	lea    rax,[rip+0x24b91]        # 0x14003a888
   140015cf7:	mov    QWORD PTR [rbx],rax
   140015cfa:	mov    rax,rbx
   140015cfd:	add    rsp,0x20
   140015d01:	pop    rbx
   140015d02:	ret    
   140015d03:	int3   
   140015d04:	int3   
   140015d05:	int3   
   140015d06:	int3   
   140015d07:	int3   
   140015d08:	int3   
   140015d09:	int3   
   140015d0a:	int3   
   140015d0b:	int3   
   140015d0c:	int3   
   140015d0d:	int3   
   140015d0e:	int3   
   140015d0f:	int3   
   140015d10:	mov    QWORD PTR [rsp+0x8],rbx
   140015d15:	push   rdi
   140015d16:	sub    rsp,0x20
   140015d1a:	mov    rbx,rdx
   140015d1d:	mov    rdi,rcx
   140015d20:	call   QWORD PTR [rip+0x206fa]        # 0x140036420
   140015d26:	lea    rax,[rip+0x24b93]        # 0x14003a8c0
   140015d2d:	mov    QWORD PTR [rdi],rax
   140015d30:	mov    rax,QWORD PTR [rbx+0x18]
   140015d34:	mov    QWORD PTR [rdi+0x18],rax
   140015d38:	mov    rax,QWORD PTR [rbx+0x20]
   140015d3c:	mov    rbx,QWORD PTR [rsp+0x30]
   140015d41:	mov    QWORD PTR [rdi+0x20],rax
   140015d45:	mov    rax,rdi
   140015d48:	add    rsp,0x20
   140015d4c:	pop    rdi
   140015d4d:	ret    
   140015d4e:	int3   
   140015d4f:	int3   
   140015d50:	mov    QWORD PTR [rsp+0x8],rbx
   140015d55:	mov    QWORD PTR [rsp+0x10],rsi
   140015d5a:	push   rdi
   140015d5b:	sub    rsp,0x20
   140015d5f:	mov    rbx,rdx
   140015d62:	lea    rdx,[rip+0x24b67]        # 0x14003a8d0
   140015d69:	mov    rsi,r8
   140015d6c:	mov    rdi,rcx
   140015d6f:	call   QWORD PTR [rip+0x206b3]        # 0x140036428
   140015d75:	lea    rax,[rip+0x24b44]        # 0x14003a8c0
   140015d7c:	mov    QWORD PTR [rdi+0x18],rbx
   140015d80:	mov    rbx,QWORD PTR [rsp+0x30]
   140015d85:	mov    QWORD PTR [rdi+0x20],rsi
   140015d89:	mov    rsi,QWORD PTR [rsp+0x38]
   140015d8e:	mov    QWORD PTR [rdi],rax
   140015d91:	mov    rax,rdi
   140015d94:	add    rsp,0x20
   140015d98:	pop    rdi
   140015d99:	ret    
   140015d9a:	int3   
   140015d9b:	int3   
   140015d9c:	int3   
   140015d9d:	int3   
   140015d9e:	int3   
   140015d9f:	int3   
   140015da0:	rex push rbx
   140015da2:	sub    rsp,0x20
   140015da6:	mov    rbx,rcx
   140015da9:	call   QWORD PTR [rip+0x20699]        # 0x140036448
   140015daf:	lea    rax,[rip+0x24d3a]        # 0x14003aaf0
   140015db6:	mov    QWORD PTR [rbx],rax
   140015db9:	mov    rax,rbx
   140015dbc:	add    rsp,0x20
   140015dc0:	pop    rbx
   140015dc1:	ret    
   140015dc2:	int3   
   140015dc3:	int3   
   140015dc4:	int3   
   140015dc5:	int3   
   140015dc6:	int3   
   140015dc7:	int3   
   140015dc8:	int3   
   140015dc9:	int3   
   140015dca:	int3   
   140015dcb:	int3   
   140015dcc:	int3   
   140015dcd:	int3   
   140015dce:	int3   
   140015dcf:	int3   
   140015dd0:	rex push rbx
   140015dd2:	sub    rsp,0x50
   140015dd6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140015ddf:	mov    rbx,rcx
   140015de2:	mov    QWORD PTR [rsp+0x40],0xf
   140015deb:	mov    QWORD PTR [rsp+0x38],0x0
   140015df4:	mov    BYTE PTR [rsp+0x28],0x0
   140015df9:	mov    r8d,0x27
   140015dff:	lea    rdx,[rip+0x24cfa]        # 0x14003ab00
   140015e06:	lea    rcx,[rsp+0x28]
   140015e0b:	call   0x14001f070
   140015e10:	nop
   140015e11:	lea    rax,[rsp+0x28]
   140015e16:	cmp    QWORD PTR [rsp+0x40],0x10
   140015e1c:	cmovae rax,QWORD PTR [rsp+0x28]
   140015e22:	mov    QWORD PTR [rsp+0x60],rax
   140015e27:	lea    rdx,[rsp+0x60]
   140015e2c:	mov    rcx,rbx
   140015e2f:	call   QWORD PTR [rip+0x2061b]        # 0x140036450
   140015e35:	lea    rax,[rip+0x24804]        # 0x14003a640
   140015e3c:	mov    QWORD PTR [rbx],rax
   140015e3f:	cmp    QWORD PTR [rsp+0x40],0x10
   140015e45:	jb     0x140015e51
   140015e47:	mov    rcx,QWORD PTR [rsp+0x28]
   140015e4c:	call   0x140030282
   140015e51:	lea    rax,[rip+0x24c98]        # 0x14003aaf0
   140015e58:	mov    QWORD PTR [rbx],rax
   140015e5b:	mov    rax,rbx
   140015e5e:	add    rsp,0x50
   140015e62:	pop    rbx
   140015e63:	ret    
   140015e64:	int3   
   140015e65:	int3   
   140015e66:	int3   
   140015e67:	int3   
   140015e68:	int3   
   140015e69:	int3   
   140015e6a:	int3   
   140015e6b:	int3   
   140015e6c:	int3   
   140015e6d:	int3   
   140015e6e:	int3   
   140015e6f:	int3   
   140015e70:	test   edx,edx
   140015e72:	je     0x140015e94
   140015e74:	lea    rax,[rip+0x29375]        # 0x14003f1f0
   140015e7b:	mov    QWORD PTR [rcx],rax
   140015e7e:	lea    rax,[rip+0x29373]        # 0x14003f1f8
   140015e85:	mov    QWORD PTR [rcx+0x8],rax
   140015e89:	lea    rax,[rip+0x29370]        # 0x14003f200
   140015e90:	mov    QWORD PTR [rcx+0x10],rax
   140015e94:	mov    rax,rcx
   140015e97:	ret    
   140015e98:	int3   
   140015e99:	int3   
   140015e9a:	int3   
   140015e9b:	int3   
   140015e9c:	int3   
   140015e9d:	int3   
   140015e9e:	int3   
   140015e9f:	int3   
   140015ea0:	test   edx,edx
   140015ea2:	je     0x140015ecf
   140015ea4:	lea    rax,[rip+0x28ae5]        # 0x14003e990
   140015eab:	mov    QWORD PTR [rcx],rax
   140015eae:	lea    rax,[rip+0x28ae3]        # 0x14003e998
   140015eb5:	mov    QWORD PTR [rcx+0x8],rax
   140015eb9:	lea    rax,[rip+0x28ae0]        # 0x14003e9a0
   140015ec0:	mov    QWORD PTR [rcx+0x18],rax
   140015ec4:	lea    rax,[rip+0x28add]        # 0x14003e9a8
   140015ecb:	mov    QWORD PTR [rcx+0x20],rax
   140015ecf:	mov    rax,rcx
   140015ed2:	ret    
   140015ed3:	int3   
   140015ed4:	int3   
   140015ed5:	int3   
   140015ed6:	int3   
   140015ed7:	int3   
   140015ed8:	int3   
   140015ed9:	int3   
   140015eda:	int3   
   140015edb:	int3   
   140015edc:	int3   
   140015edd:	int3   
   140015ede:	int3   
   140015edf:	int3   
   140015ee0:	test   edx,edx
   140015ee2:	je     0x140015f25
   140015ee4:	lea    rax,[rip+0x288cd]        # 0x14003e7b8
   140015eeb:	mov    QWORD PTR [rcx],rax
   140015eee:	lea    rax,[rip+0x288d3]        # 0x14003e7c8
   140015ef5:	mov    QWORD PTR [rcx+0x8],rax
   140015ef9:	lea    rax,[rip+0x288d0]        # 0x14003e7d0
   140015f00:	mov    QWORD PTR [rcx+0x10],rax
   140015f04:	lea    rax,[rip+0x288cd]        # 0x14003e7d8
   140015f0b:	mov    QWORD PTR [rcx+0x18],rax
   140015f0f:	lea    rax,[rip+0x288ca]        # 0x14003e7e0
   140015f16:	mov    QWORD PTR [rcx+0x20],rax
   140015f1a:	lea    rax,[rip+0x288c7]        # 0x14003e7e8
   140015f21:	mov    QWORD PTR [rcx+0x28],rax
   140015f25:	mov    rax,rcx
   140015f28:	ret    
   140015f29:	int3   
   140015f2a:	int3   
   140015f2b:	int3   
   140015f2c:	int3   
   140015f2d:	int3   
   140015f2e:	int3   
   140015f2f:	int3   
   140015f30:	test   edx,edx
   140015f32:	je     0x140015f75
   140015f34:	lea    rax,[rip+0x28c05]        # 0x14003eb40
   140015f3b:	mov    QWORD PTR [rcx],rax
   140015f3e:	lea    rax,[rip+0x28c0b]        # 0x14003eb50
   140015f45:	mov    QWORD PTR [rcx+0x8],rax
   140015f49:	lea    rax,[rip+0x28c08]        # 0x14003eb58
   140015f50:	mov    QWORD PTR [rcx+0x10],rax
   140015f54:	lea    rax,[rip+0x28c05]        # 0x14003eb60
   140015f5b:	mov    QWORD PTR [rcx+0x18],rax
   140015f5f:	lea    rax,[rip+0x28c02]        # 0x14003eb68
   140015f66:	mov    QWORD PTR [rcx+0x20],rax
   140015f6a:	lea    rax,[rip+0x28bff]        # 0x14003eb70
   140015f71:	mov    QWORD PTR [rcx+0x28],rax
   140015f75:	mov    rax,rcx
   140015f78:	ret    
   140015f79:	int3   
   140015f7a:	int3   
   140015f7b:	int3   
   140015f7c:	int3   
   140015f7d:	int3   
   140015f7e:	int3   
   140015f7f:	int3   
   140015f80:	rex push rbx
   140015f82:	sub    rsp,0x20
   140015f86:	xor    r8d,r8d
   140015f89:	xor    edx,edx
   140015f8b:	mov    rbx,rcx
   140015f8e:	mov    QWORD PTR [rcx],0x0
   140015f95:	mov    QWORD PTR [rcx+0x8],0x0
   140015f9d:	call   0x14001c4d0
   140015fa2:	mov    QWORD PTR [rbx],rax
   140015fa5:	mov    QWORD PTR [rbx+0x10],0x0
   140015fad:	mov    QWORD PTR [rbx+0x18],0x1000
   140015fb5:	mov    QWORD PTR [rbx+0x20],0x80
   140015fbd:	mov    QWORD PTR [rbx+0x28],0x4
   140015fc5:	mov    DWORD PTR [rbx+0x30],0x4
   140015fcc:	mov    rax,rbx
   140015fcf:	add    rsp,0x20
   140015fd3:	pop    rbx
   140015fd4:	ret    
   140015fd5:	int3   
   140015fd6:	int3   
   140015fd7:	int3   
   140015fd8:	int3   
   140015fd9:	int3   
   140015fda:	int3   
   140015fdb:	int3   
   140015fdc:	int3   
   140015fdd:	int3   
   140015fde:	int3   
   140015fdf:	int3   
   140015fe0:	lea    rax,[rip+0x24861]        # 0x14003a848
   140015fe7:	mov    QWORD PTR [rcx],rax
   140015fea:	mov    rax,rcx
   140015fed:	ret    
   140015fee:	int3   
   140015fef:	int3   
   140015ff0:	lea    rax,[rip+0x24851]        # 0x14003a848
   140015ff7:	mov    QWORD PTR [rcx],rax
   140015ffa:	mov    rax,rcx
   140015ffd:	ret    
   140015ffe:	int3   
   140015fff:	int3   
   140016000:	test   edx,edx
   140016002:	je     0x14001600e
   140016004:	lea    rax,[rip+0x24c85]        # 0x14003ac90
   14001600b:	mov    QWORD PTR [rcx],rax
   14001600e:	mov    rax,rcx
   140016011:	ret    
   140016012:	int3   
   140016013:	int3   
   140016014:	int3   
   140016015:	int3   
   140016016:	int3   
   140016017:	int3   
   140016018:	int3   
   140016019:	int3   
   14001601a:	int3   
   14001601b:	int3   
   14001601c:	int3   
   14001601d:	int3   
   14001601e:	int3   
   14001601f:	int3   
   140016020:	mov    DWORD PTR [rcx],edx
   140016022:	mov    rax,rcx
   140016025:	ret    
   140016026:	int3   
   140016027:	int3   
   140016028:	int3   
   140016029:	int3   
   14001602a:	int3   
   14001602b:	int3   
   14001602c:	int3   
   14001602d:	int3   
   14001602e:	int3   
   14001602f:	int3   
   140016030:	mov    QWORD PTR [rcx],rdx
   140016033:	mov    rax,rcx
   140016036:	ret    
   140016037:	int3   
   140016038:	int3   
   140016039:	int3   
   14001603a:	int3   
   14001603b:	int3   
   14001603c:	int3   
   14001603d:	int3   
   14001603e:	int3   
   14001603f:	int3   
   140016040:	mov    QWORD PTR [rcx],rdx
   140016043:	mov    rax,rcx
   140016046:	ret    
   140016047:	int3   
   140016048:	int3   
   140016049:	int3   
   14001604a:	int3   
   14001604b:	int3   
   14001604c:	int3   
   14001604d:	int3   
   14001604e:	int3   
   14001604f:	int3   
   140016050:	mov    QWORD PTR [rcx],rdx
   140016053:	mov    rax,rcx
   140016056:	ret    
   140016057:	int3   
   140016058:	int3   
   140016059:	int3   
   14001605a:	int3   
   14001605b:	int3   
   14001605c:	int3   
   14001605d:	int3   
   14001605e:	int3   
   14001605f:	int3   
   140016060:	mov    QWORD PTR [rsp+0x8],rbx
   140016065:	push   rdi
   140016066:	sub    rsp,0x20
   14001606a:	mov    rbx,rdx
   14001606d:	mov    rdi,rcx
   140016070:	call   QWORD PTR [rip+0x203d2]        # 0x140036448
   140016076:	lea    rax,[rip+0x24c73]        # 0x14003acf0
   14001607d:	mov    QWORD PTR [rdi],rax
   140016080:	mov    eax,DWORD PTR [rbx+0x18]
   140016083:	mov    rbx,QWORD PTR [rsp+0x30]
   140016088:	mov    DWORD PTR [rdi+0x18],eax
   14001608b:	mov    rax,rdi
   14001608e:	add    rsp,0x20
   140016092:	pop    rdi
   140016093:	ret    
   140016094:	int3   
   140016095:	int3   
   140016096:	int3   
   140016097:	int3   
   140016098:	int3   
   140016099:	int3   
   14001609a:	int3   
   14001609b:	int3   
   14001609c:	int3   
   14001609d:	int3   
   14001609e:	int3   
   14001609f:	int3   
   1400160a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400160a5:	push   rdi
   1400160a6:	sub    rsp,0x20
   1400160aa:	mov    ebx,edx
   1400160ac:	mov    rdi,rcx
   1400160af:	call   QWORD PTR [rip+0x203a3]        # 0x140036458
   1400160b5:	lea    rax,[rip+0x24c34]        # 0x14003acf0
   1400160bc:	mov    DWORD PTR [rdi+0x18],ebx
   1400160bf:	mov    rbx,QWORD PTR [rsp+0x30]
   1400160c4:	mov    QWORD PTR [rdi],rax
   1400160c7:	mov    rax,rdi
   1400160ca:	add    rsp,0x20
   1400160ce:	pop    rdi
   1400160cf:	ret    
   1400160d0:	rex push rbx
   1400160d2:	sub    rsp,0x20
   1400160d6:	mov    rbx,rcx
   1400160d9:	mov    rcx,rdx
   1400160dc:	call   0x140021a50
   1400160e1:	mov    DWORD PTR [rbx],eax
   1400160e3:	mov    rax,rbx
   1400160e6:	add    rsp,0x20
   1400160ea:	pop    rbx
   1400160eb:	ret    
   1400160ec:	int3   
   1400160ed:	int3   
   1400160ee:	int3   
   1400160ef:	int3   
   1400160f0:	mov    rax,rsp
   1400160f3:	push   rdi
   1400160f4:	sub    rsp,0x70
   1400160f8:	mov    QWORD PTR [rax-0x50],0xfffffffffffffffe
   140016100:	mov    QWORD PTR [rax+0x8],rbx
   140016104:	mov    QWORD PTR [rax+0x10],rbp
   140016108:	mov    QWORD PTR [rax+0x18],rsi
   14001610c:	movzx  esi,r9w
   140016110:	movzx  edi,r8w
   140016114:	movzx  ebx,dx
   140016117:	mov    rbp,rcx
   14001611a:	call   0x140013210
   14001611f:	movzx  edx,di
   140016122:	movzx  ecx,bx
   140016125:	call   0x140022ed0
   14001612a:	cmp    ax,si
   14001612d:	jae    0x14001619b
   14001612f:	mov    QWORD PTR [rsp+0x60],0xf
   140016138:	mov    QWORD PTR [rsp+0x58],0x0
   140016141:	mov    BYTE PTR [rsp+0x48],0x0
   140016146:	mov    r8d,0x22
   14001614c:	lea    rdx,[rip+0x249d5]        # 0x14003ab28
   140016153:	lea    rcx,[rsp+0x48]
   140016158:	call   0x14001f070
   14001615d:	nop
   14001615e:	lea    rax,[rsp+0x48]
   140016163:	cmp    QWORD PTR [rsp+0x60],0x10
   140016169:	cmovae rax,QWORD PTR [rsp+0x48]
   14001616f:	mov    QWORD PTR [rsp+0x20],rax
   140016174:	lea    rdx,[rsp+0x20]
   140016179:	lea    rcx,[rsp+0x30]
   14001617e:	call   QWORD PTR [rip+0x202cc]        # 0x140036450
   140016184:	lea    rax,[rip+0x2491d]        # 0x14003aaa8
   14001618b:	mov    QWORD PTR [rsp+0x30],rax
   140016190:	lea    rcx,[rsp+0x30]
   140016195:	call   0x14000de30
   14001619a:	nop
   14001619b:	mov    rax,rbp
   14001619e:	lea    r11,[rsp+0x70]
   1400161a3:	mov    rbx,QWORD PTR [r11+0x10]
   1400161a7:	mov    rbp,QWORD PTR [r11+0x18]
   1400161ab:	mov    rsi,QWORD PTR [r11+0x20]
   1400161af:	mov    rsp,r11
   1400161b2:	pop    rdi
   1400161b3:	ret    
   1400161b4:	int3   
   1400161b5:	int3   
   1400161b6:	int3   
   1400161b7:	int3   
   1400161b8:	int3   
   1400161b9:	int3   
   1400161ba:	int3   
   1400161bb:	int3   
   1400161bc:	int3   
   1400161bd:	int3   
   1400161be:	int3   
   1400161bf:	int3   
   1400161c0:	test   edx,edx
   1400161c2:	je     0x1400161ce
   1400161c4:	lea    rax,[rip+0x24ab5]        # 0x14003ac80
   1400161cb:	mov    QWORD PTR [rcx],rax
   1400161ce:	mov    rax,rcx
   1400161d1:	ret    
   1400161d2:	int3   
   1400161d3:	int3   
   1400161d4:	int3   
   1400161d5:	int3   
   1400161d6:	int3   
   1400161d7:	int3   
   1400161d8:	int3   
   1400161d9:	int3   
   1400161da:	int3   
   1400161db:	int3   
   1400161dc:	int3   
   1400161dd:	int3   
   1400161de:	int3   
   1400161df:	int3   
   1400161e0:	test   edx,edx
   1400161e2:	je     0x140016204
   1400161e4:	lea    rax,[rip+0x24a75]        # 0x14003ac60
   1400161eb:	mov    QWORD PTR [rcx],rax
   1400161ee:	lea    rax,[rip+0x24a7b]        # 0x14003ac70
   1400161f5:	mov    QWORD PTR [rcx+0x8],rax
   1400161f9:	lea    rax,[rip+0x24a78]        # 0x14003ac78
   140016200:	mov    QWORD PTR [rcx+0x10],rax
   140016204:	mov    rax,rcx
   140016207:	ret    
   140016208:	int3   
   140016209:	int3   
   14001620a:	int3   
   14001620b:	int3   
   14001620c:	int3   
   14001620d:	int3   
   14001620e:	int3   
   14001620f:	int3   
   140016210:	lea    rax,[rip+0x24461]        # 0x14003a678
   140016217:	mov    QWORD PTR [rcx],rax
   14001621a:	mov    rax,rcx
   14001621d:	ret    
   14001621e:	int3   
   14001621f:	int3   
   140016220:	mov    DWORD PTR [rcx],edx
   140016222:	mov    QWORD PTR [rcx+0x8],r8
   140016226:	mov    rax,rcx
   140016229:	ret    
   14001622a:	int3   
   14001622b:	int3   
   14001622c:	int3   
   14001622d:	int3   
   14001622e:	int3   
   14001622f:	int3   
   140016230:	mov    DWORD PTR [rcx],edx
   140016232:	mov    QWORD PTR [rcx+0x8],r8
   140016236:	mov    rax,rcx
   140016239:	ret    
   14001623a:	int3   
   14001623b:	int3   
   14001623c:	int3   
   14001623d:	int3   
   14001623e:	int3   
   14001623f:	int3   
   140016240:	lea    rax,[rip+0x245f1]        # 0x14003a838
   140016247:	mov    QWORD PTR [rcx],rax
   14001624a:	xor    eax,eax
   14001624c:	mov    QWORD PTR [rcx+0x8],rax
   140016250:	mov    QWORD PTR [rcx+0x10],rax
   140016254:	mov    QWORD PTR [rcx+0x18],rax
   140016258:	mov    rax,rcx
   14001625b:	mov    DWORD PTR [rcx+0x20],0xffffffff
   140016262:	ret    
   140016263:	int3   
   140016264:	int3   
   140016265:	int3   
   140016266:	int3   
   140016267:	int3   
   140016268:	int3   
   140016269:	int3   
   14001626a:	int3   
   14001626b:	int3   
   14001626c:	int3   
   14001626d:	int3   
   14001626e:	int3   
   14001626f:	int3   
   140016270:	mov    QWORD PTR [rsp+0x8],rbx
   140016275:	push   rdi
   140016276:	sub    rsp,0x20
   14001627a:	mov    rbx,rcx
   14001627d:	lea    rax,[rip+0x245b4]        # 0x14003a838
   140016284:	mov    rdi,rdx
   140016287:	mov    QWORD PTR [rcx],rax
   14001628a:	mov    rcx,QWORD PTR [rdx+0x8]
   14001628e:	mov    QWORD PTR [rbx+0x8],rcx
   140016292:	test   rcx,rcx
   140016295:	je     0x14001629d
   140016297:	mov    rax,QWORD PTR [rcx]
   14001629a:	call   QWORD PTR [rax+0x18]
   14001629d:	mov    rax,QWORD PTR [rdi+0x10]
   1400162a1:	mov    QWORD PTR [rbx+0x10],rax
   1400162a5:	mov    rax,QWORD PTR [rdi+0x18]
   1400162a9:	mov    QWORD PTR [rbx+0x18],rax
   1400162ad:	mov    eax,DWORD PTR [rdi+0x20]
   1400162b0:	mov    DWORD PTR [rbx+0x20],eax
   1400162b3:	mov    rax,rbx
   1400162b6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400162bb:	add    rsp,0x20
   1400162bf:	pop    rdi
   1400162c0:	ret    
   1400162c1:	int3   
   1400162c2:	int3   
   1400162c3:	int3   
   1400162c4:	int3   
   1400162c5:	int3   
   1400162c6:	int3   
   1400162c7:	int3   
   1400162c8:	int3   
   1400162c9:	int3   
   1400162ca:	int3   
   1400162cb:	int3   
   1400162cc:	int3   
   1400162cd:	int3   
   1400162ce:	int3   
   1400162cf:	int3   
   1400162d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400162d5:	push   rdi
   1400162d6:	sub    rsp,0x20
   1400162da:	mov    rbx,rdx
   1400162dd:	mov    rdi,rcx
   1400162e0:	call   QWORD PTR [rip+0x20162]        # 0x140036448
   1400162e6:	lea    rax,[rip+0x243c3]        # 0x14003a6b0
   1400162ed:	mov    QWORD PTR [rdi],rax
   1400162f0:	lea    rax,[rip+0x244e1]        # 0x14003a7d8
   1400162f7:	movups xmm0,XMMWORD PTR [rbx+0x18]
   1400162fb:	mov    rbx,QWORD PTR [rsp+0x30]
   140016300:	mov    QWORD PTR [rdi],rax
   140016303:	movups XMMWORD PTR [rdi+0x18],xmm0
   140016307:	mov    rax,rdi
   14001630a:	add    rsp,0x20
   14001630e:	pop    rdi
   14001630f:	ret    
   140016310:	rex push rbx
   140016312:	sub    rsp,0x30
   140016316:	movups xmm0,XMMWORD PTR [r8]
   14001631a:	mov    r8,rdx
   14001631d:	lea    rdx,[rsp+0x20]
   140016322:	mov    rbx,rcx
   140016325:	movaps XMMWORD PTR [rsp+0x20],xmm0
   14001632a:	call   0x140016bb0
   14001632f:	lea    rax,[rip+0x244a2]        # 0x14003a7d8
   140016336:	mov    QWORD PTR [rbx],rax
   140016339:	mov    rax,rbx
   14001633c:	add    rsp,0x30
   140016340:	pop    rbx
   140016341:	ret    
   140016342:	int3   
   140016343:	int3   
   140016344:	int3   
   140016345:	int3   
   140016346:	int3   
   140016347:	int3   
   140016348:	int3   
   140016349:	int3   
   14001634a:	int3   
   14001634b:	int3   
   14001634c:	int3   
   14001634d:	int3   
   14001634e:	int3   
   14001634f:	int3   
   140016350:	mov    QWORD PTR [rsp+0x8],rcx
   140016355:	push   rdi
   140016356:	sub    rsp,0x30
   14001635a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140016363:	mov    QWORD PTR [rsp+0x48],rbx
   140016368:	mov    rbx,rdx
   14001636b:	mov    rdi,rcx
   14001636e:	call   QWORD PTR [rip+0x200d4]        # 0x140036448
   140016374:	nop
   140016375:	lea    rax,[rip+0x24644]        # 0x14003a9c0
   14001637c:	mov    QWORD PTR [rdi],rax
   14001637f:	lea    rcx,[rdi+0x18]
   140016383:	mov    QWORD PTR [rcx+0x18],0xf
   14001638b:	mov    QWORD PTR [rcx+0x10],0x0
   140016393:	mov    BYTE PTR [rcx],0x0
   140016396:	lea    rdx,[rbx+0x18]
   14001639a:	or     r9,0xffffffffffffffff
   14001639e:	xor    r8d,r8d
   1400163a1:	call   0x14001ef20
   1400163a6:	nop
   1400163a7:	lea    rcx,[rdi+0x38]
   1400163ab:	mov    QWORD PTR [rcx+0x18],0xf
   1400163b3:	mov    QWORD PTR [rcx+0x10],0x0
   1400163bb:	mov    BYTE PTR [rcx],0x0
   1400163be:	lea    rdx,[rbx+0x38]
   1400163c2:	or     r9,0xffffffffffffffff
   1400163c6:	xor    r8d,r8d
   1400163c9:	call   0x14001ef20
   1400163ce:	mov    eax,DWORD PTR [rbx+0x58]
   1400163d1:	mov    DWORD PTR [rdi+0x58],eax
   1400163d4:	mov    rax,rdi
   1400163d7:	mov    rbx,QWORD PTR [rsp+0x48]
   1400163dc:	add    rsp,0x30
   1400163e0:	pop    rdi
   1400163e1:	ret    
   1400163e2:	int3   
   1400163e3:	int3   
   1400163e4:	int3   
   1400163e5:	int3   
   1400163e6:	int3   
   1400163e7:	int3   
   1400163e8:	int3   
   1400163e9:	int3   
   1400163ea:	int3   
   1400163eb:	int3   
   1400163ec:	int3   
   1400163ed:	int3   
   1400163ee:	int3   
   1400163ef:	int3   
   1400163f0:	mov    QWORD PTR [rsp+0x8],rcx
   1400163f5:	push   rdi
   1400163f6:	sub    rsp,0x50
   1400163fa:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140016403:	mov    QWORD PTR [rsp+0x68],rbx
   140016408:	mov    QWORD PTR [rsp+0x70],rbp
   14001640d:	mov    QWORD PTR [rsp+0x78],rsi
   140016412:	mov    edi,r9d
   140016415:	mov    rsi,r8
   140016418:	mov    rbp,rdx
   14001641b:	mov    rbx,rcx
   14001641e:	lea    rcx,[rsp+0x30]
   140016423:	call   0x140023f00
   140016428:	nop
   140016429:	cmp    QWORD PTR [rax+0x18],0x10
   14001642e:	jb     0x140016433
   140016430:	mov    rax,QWORD PTR [rax]
   140016433:	mov    QWORD PTR [rsp+0x20],rax
   140016438:	lea    rdx,[rsp+0x20]
   14001643d:	mov    rcx,rbx
   140016440:	call   QWORD PTR [rip+0x2000a]        # 0x140036450
   140016446:	lea    rax,[rip+0x2452b]        # 0x14003a978
   14001644d:	mov    QWORD PTR [rbx],rax
   140016450:	cmp    QWORD PTR [rsp+0x48],0x10
   140016456:	jb     0x140016462
   140016458:	mov    rcx,QWORD PTR [rsp+0x30]
   14001645d:	call   0x140030282
   140016462:	mov    QWORD PTR [rsp+0x48],0xf
   14001646b:	mov    QWORD PTR [rsp+0x40],0x0
   140016474:	mov    BYTE PTR [rsp+0x30],0x0
   140016479:	lea    rax,[rip+0x24540]        # 0x14003a9c0
   140016480:	mov    QWORD PTR [rbx],rax
   140016483:	lea    rcx,[rbx+0x18]
   140016487:	mov    QWORD PTR [rcx+0x18],0xf
   14001648f:	mov    QWORD PTR [rcx+0x10],0x0
   140016497:	mov    BYTE PTR [rcx],0x0
   14001649a:	or     r9,0xffffffffffffffff
   14001649e:	xor    r8d,r8d
   1400164a1:	mov    rdx,rbp
   1400164a4:	call   0x14001ef20
   1400164a9:	nop
   1400164aa:	lea    rcx,[rbx+0x38]
   1400164ae:	mov    QWORD PTR [rcx+0x18],0xf
   1400164b6:	mov    QWORD PTR [rcx+0x10],0x0
   1400164be:	mov    BYTE PTR [rcx],0x0
   1400164c1:	or     r9,0xffffffffffffffff
   1400164c5:	xor    r8d,r8d
   1400164c8:	mov    rdx,rsi
   1400164cb:	call   0x14001ef20
   1400164d0:	mov    DWORD PTR [rbx+0x58],edi
   1400164d3:	mov    rax,rbx
   1400164d6:	mov    rbx,QWORD PTR [rsp+0x68]
   1400164db:	mov    rbp,QWORD PTR [rsp+0x70]
   1400164e0:	mov    rsi,QWORD PTR [rsp+0x78]
   1400164e5:	add    rsp,0x50
   1400164e9:	pop    rdi
   1400164ea:	ret    
   1400164eb:	int3   
   1400164ec:	int3   
   1400164ed:	int3   
   1400164ee:	int3   
   1400164ef:	int3   
   1400164f0:	test   edx,edx
   1400164f2:	je     0x1400164fe
   1400164f4:	lea    rax,[rip+0x2478d]        # 0x14003ac88
   1400164fb:	mov    QWORD PTR [rcx],rax
   1400164fe:	mov    rax,rcx
   140016501:	ret    
   140016502:	int3   
   140016503:	int3   
   140016504:	int3   
   140016505:	int3   
   140016506:	int3   
   140016507:	int3   
   140016508:	int3   
   140016509:	int3   
   14001650a:	int3   
   14001650b:	int3   
   14001650c:	int3   
   14001650d:	int3   
   14001650e:	int3   
   14001650f:	int3   
   140016510:	mov    QWORD PTR [rcx],0x0
   140016517:	mov    rax,rcx
   14001651a:	ret    
   14001651b:	int3   
   14001651c:	int3   
   14001651d:	int3   
   14001651e:	int3   
   14001651f:	int3   
   140016520:	sub    rsp,0x28
   140016524:	movzx  eax,dx
   140016527:	mov    r8d,0x1
   14001652d:	inc    eax
   14001652f:	mov    WORD PTR [rcx],r8w
   140016533:	cmp    eax,0x2
   140016536:	jl     0x140016549
   140016538:	cmp    dx,0x1f
   14001653c:	ja     0x140016555
   14001653e:	mov    WORD PTR [rcx],dx
   140016541:	mov    rax,rcx
   140016544:	add    rsp,0x28
   140016548:	ret    
   140016549:	mov    ecx,r8d
   14001654c:	xor    r8d,r8d
   14001654f:	call   0x140026650
   140016554:	int3   
   140016555:	mov    ecx,r8d
   140016558:	call   0x140026650
   14001655d:	int3   
   14001655e:	int3   
   14001655f:	int3   
   140016560:	sub    rsp,0x28
   140016564:	movzx  eax,dx
   140016567:	mov    r8d,0x578
   14001656d:	inc    eax
   14001656f:	mov    WORD PTR [rcx],r8w
   140016573:	cmp    eax,0x579
   140016578:	jl     0x14001658f
   14001657a:	mov    eax,0x2710
   14001657f:	cmp    dx,ax
   140016582:	ja     0x14001659b
   140016584:	mov    WORD PTR [rcx],dx
   140016587:	mov    rax,rcx
   14001658a:	add    rsp,0x28
   14001658e:	ret    
   14001658f:	mov    ecx,r8d
   140016592:	xor    r8d,r8d
   140016595:	call   0x140026710
   14001659a:	int3   
   14001659b:	mov    ecx,r8d
   14001659e:	mov    r8d,0x1
   1400165a4:	call   0x140026710
   1400165a9:	int3   
   1400165aa:	int3   
   1400165ab:	int3   
   1400165ac:	int3   
   1400165ad:	int3   
   1400165ae:	int3   
   1400165af:	int3   
   1400165b0:	test   edx,edx
   1400165b2:	je     0x1400165be
   1400165b4:	lea    rax,[rip+0x24695]        # 0x14003ac50
   1400165bb:	mov    QWORD PTR [rcx],rax
   1400165be:	mov    rax,rcx
   1400165c1:	ret    
   1400165c2:	int3   
   1400165c3:	int3   
   1400165c4:	int3   
   1400165c5:	int3   
   1400165c6:	int3   
   1400165c7:	int3   
   1400165c8:	int3   
   1400165c9:	int3   
   1400165ca:	int3   
   1400165cb:	int3   
   1400165cc:	int3   
   1400165cd:	int3   
   1400165ce:	int3   
   1400165cf:	int3   
   1400165d0:	rex push rbx
   1400165d2:	sub    rsp,0x20
   1400165d6:	mov    rbx,rcx
   1400165d9:	call   QWORD PTR [rip+0x1fe69]        # 0x140036448
   1400165df:	lea    rax,[rip+0x24042]        # 0x14003a628
   1400165e6:	mov    QWORD PTR [rbx],rax
   1400165e9:	mov    rax,rbx
   1400165ec:	add    rsp,0x20
   1400165f0:	pop    rbx
   1400165f1:	ret    
   1400165f2:	int3   
   1400165f3:	int3   
   1400165f4:	int3   
   1400165f5:	int3   
   1400165f6:	int3   
   1400165f7:	int3   
   1400165f8:	int3   
   1400165f9:	int3   
   1400165fa:	int3   
   1400165fb:	int3   
   1400165fc:	int3   
   1400165fd:	int3   
   1400165fe:	int3   
   1400165ff:	int3   
   140016600:	rex push rbx
   140016602:	sub    rsp,0x20
   140016606:	cmp    QWORD PTR [rdx+0x18],0x10
   14001660b:	mov    rbx,rcx
   14001660e:	jb     0x140016613
   140016610:	mov    rdx,QWORD PTR [rdx]
   140016613:	mov    QWORD PTR [rsp+0x30],rdx
   140016618:	lea    rdx,[rsp+0x30]
   14001661d:	call   QWORD PTR [rip+0x1fe2d]        # 0x140036450
   140016623:	lea    rax,[rip+0x23ffe]        # 0x14003a628
   14001662a:	mov    QWORD PTR [rbx],rax
   14001662d:	mov    rax,rbx
   140016630:	add    rsp,0x20
   140016634:	pop    rbx
   140016635:	ret    
   140016636:	int3   
   140016637:	int3   
   140016638:	int3   
   140016639:	int3   
   14001663a:	int3   
   14001663b:	int3   
   14001663c:	int3   
   14001663d:	int3   
   14001663e:	int3   
   14001663f:	int3   
   140016640:	rex push rbx
   140016642:	sub    rsp,0x20
   140016646:	mov    QWORD PTR [rsp+0x30],rdx
   14001664b:	lea    rdx,[rsp+0x30]
   140016650:	mov    rbx,rcx
   140016653:	call   QWORD PTR [rip+0x1fdf7]        # 0x140036450
   140016659:	lea    rax,[rip+0x23fc8]        # 0x14003a628
   140016660:	mov    QWORD PTR [rbx],rax
   140016663:	mov    rax,rbx
   140016666:	add    rsp,0x20
   14001666a:	pop    rbx
   14001666b:	ret    
   14001666c:	int3   
   14001666d:	int3   
   14001666e:	int3   
   14001666f:	int3   
   140016670:	mov    QWORD PTR [rcx],rdx
   140016673:	mov    rax,rcx
   140016676:	ret    
   140016677:	int3   
   140016678:	int3   
   140016679:	int3   
   14001667a:	int3   
   14001667b:	int3   
   14001667c:	int3   
   14001667d:	int3   
   14001667e:	int3   
   14001667f:	int3   
   140016680:	mov    DWORD PTR [rcx],0x0
   140016686:	mov    rax,rcx
   140016689:	ret    
   14001668a:	int3   
   14001668b:	int3   
   14001668c:	int3   
   14001668d:	int3   
   14001668e:	int3   
   14001668f:	int3   
   140016690:	rex push rbx
   140016692:	sub    rsp,0x20
   140016696:	mov    rbx,rcx
   140016699:	mov    rcx,QWORD PTR [rdx]
   14001669c:	mov    QWORD PTR [rbx],rcx
   14001669f:	mov    rax,QWORD PTR [rcx]
   1400166a2:	call   QWORD PTR [rax+0x8]
   1400166a5:	mov    rax,rbx
   1400166a8:	add    rsp,0x20
   1400166ac:	pop    rbx
   1400166ad:	ret    
   1400166ae:	int3   
   1400166af:	int3   
   1400166b0:	rex push rbx
   1400166b2:	sub    rsp,0x20
   1400166b6:	mov    rbx,rcx
   1400166b9:	mov    cl,0x1
   1400166bb:	call   QWORD PTR [rip+0x1fbb7]        # 0x140036278
   1400166c1:	mov    QWORD PTR [rbx],rax
   1400166c4:	mov    rax,rbx
   1400166c7:	add    rsp,0x20
   1400166cb:	pop    rbx
   1400166cc:	ret    
   1400166cd:	int3   
   1400166ce:	int3   
   1400166cf:	int3   
   1400166d0:	test   edx,edx
   1400166d2:	je     0x1400166de
   1400166d4:	lea    rax,[rip+0x245bd]        # 0x14003ac98
   1400166db:	mov    QWORD PTR [rcx],rax
   1400166de:	mov    rax,rcx
   1400166e1:	ret    
   1400166e2:	int3   
   1400166e3:	int3   
   1400166e4:	int3   
   1400166e5:	int3   
   1400166e6:	int3   
   1400166e7:	int3   
   1400166e8:	int3   
   1400166e9:	int3   
   1400166ea:	int3   
   1400166eb:	int3   
   1400166ec:	int3   
   1400166ed:	int3   
   1400166ee:	int3   
   1400166ef:	int3   
   1400166f0:	rex push rbx
   1400166f2:	sub    rsp,0x20
   1400166f6:	mov    rbx,rcx
   1400166f9:	call   QWORD PTR [rip+0x1fd49]        # 0x140036448
   1400166ff:	lea    rax,[rip+0x23f0a]        # 0x14003a610
   140016706:	mov    QWORD PTR [rbx],rax
   140016709:	mov    rax,rbx
   14001670c:	add    rsp,0x20
   140016710:	pop    rbx
   140016711:	ret    
   140016712:	int3   
   140016713:	int3   
   140016714:	int3   
   140016715:	int3   
   140016716:	int3   
   140016717:	int3   
   140016718:	int3   
   140016719:	int3   
   14001671a:	int3   
   14001671b:	int3   
   14001671c:	int3   
   14001671d:	int3   
   14001671e:	int3   
   14001671f:	int3   
   140016720:	mov    QWORD PTR [rsp+0x10],rdx
   140016725:	push   rbx
   140016726:	sub    rsp,0x20
   14001672a:	lea    rdx,[rsp+0x38]
   14001672f:	mov    rbx,rcx
   140016732:	call   QWORD PTR [rip+0x1fd18]        # 0x140036450
   140016738:	lea    rax,[rip+0x23ed1]        # 0x14003a610
   14001673f:	mov    QWORD PTR [rbx],rax
   140016742:	mov    rax,rbx
   140016745:	add    rsp,0x20
   140016749:	pop    rbx
   14001674a:	ret    
   14001674b:	int3   
   14001674c:	int3   
   14001674d:	int3   
   14001674e:	int3   
   14001674f:	int3   
   140016750:	test   edx,edx
   140016752:	je     0x14001675e
   140016754:	lea    rax,[rip+0x24545]        # 0x14003aca0
   14001675b:	mov    QWORD PTR [rcx],rax
   14001675e:	mov    rax,rcx
   140016761:	ret    
   140016762:	int3   
   140016763:	int3   
   140016764:	int3   
   140016765:	int3   
   140016766:	int3   
   140016767:	int3   
   140016768:	int3   
   140016769:	int3   
   14001676a:	int3   
   14001676b:	int3   
   14001676c:	int3   
   14001676d:	int3   
   14001676e:	int3   
   14001676f:	int3   
   140016770:	mov    rax,rcx
   140016773:	ret    
   140016774:	int3   
   140016775:	int3   
   140016776:	int3   
   140016777:	int3   
   140016778:	int3   
   140016779:	int3   
   14001677a:	int3   
   14001677b:	int3   
   14001677c:	int3   
   14001677d:	int3   
   14001677e:	int3   
   14001677f:	int3   
   140016780:	rex push rbx
   140016782:	sub    rsp,0x20
   140016786:	mov    rbx,rcx
   140016789:	call   QWORD PTR [rip+0x1fcb9]        # 0x140036448
   14001678f:	lea    rax,[rip+0x23eaa]        # 0x14003a640
   140016796:	mov    QWORD PTR [rbx],rax
   140016799:	mov    rax,rbx
   14001679c:	add    rsp,0x20
   1400167a0:	pop    rbx
   1400167a1:	ret    
   1400167a2:	int3   
   1400167a3:	int3   
   1400167a4:	int3   
   1400167a5:	int3   
   1400167a6:	int3   
   1400167a7:	int3   
   1400167a8:	int3   
   1400167a9:	int3   
   1400167aa:	int3   
   1400167ab:	int3   
   1400167ac:	int3   
   1400167ad:	int3   
   1400167ae:	int3   
   1400167af:	int3   
   1400167b0:	rex push rbx
   1400167b2:	sub    rsp,0x20
   1400167b6:	cmp    QWORD PTR [rdx+0x18],0x10
   1400167bb:	mov    rbx,rcx
   1400167be:	jb     0x1400167c3
   1400167c0:	mov    rdx,QWORD PTR [rdx]
   1400167c3:	mov    QWORD PTR [rsp+0x30],rdx
   1400167c8:	lea    rdx,[rsp+0x30]
   1400167cd:	call   QWORD PTR [rip+0x1fc7d]        # 0x140036450
   1400167d3:	lea    rax,[rip+0x23e66]        # 0x14003a640
   1400167da:	mov    QWORD PTR [rbx],rax
   1400167dd:	mov    rax,rbx
   1400167e0:	add    rsp,0x20
   1400167e4:	pop    rbx
   1400167e5:	ret    
   1400167e6:	int3   
   1400167e7:	int3   
   1400167e8:	int3   
   1400167e9:	int3   
   1400167ea:	int3   
   1400167eb:	int3   
   1400167ec:	int3   
   1400167ed:	int3   
   1400167ee:	int3   
   1400167ef:	int3   
   1400167f0:	test   edx,edx
   1400167f2:	je     0x1400167fe
   1400167f4:	lea    rax,[rip+0x2445d]        # 0x14003ac58
   1400167fb:	mov    QWORD PTR [rcx],rax
   1400167fe:	mov    rax,rcx
   140016801:	ret    
   140016802:	int3   
   140016803:	int3   
   140016804:	int3   
   140016805:	int3   
   140016806:	int3   
   140016807:	int3   
   140016808:	int3   
   140016809:	int3   
   14001680a:	int3   
   14001680b:	int3   
   14001680c:	int3   
   14001680d:	int3   
   14001680e:	int3   
   14001680f:	int3   
   140016810:	mov    QWORD PTR [rcx],rdx
   140016813:	mov    rax,rcx
   140016816:	ret    
   140016817:	int3   
   140016818:	int3   
   140016819:	int3   
   14001681a:	int3   
   14001681b:	int3   
   14001681c:	int3   
   14001681d:	int3   
   14001681e:	int3   
   14001681f:	int3   
   140016820:	lea    rax,[rip+0x24041]        # 0x14003a868
   140016827:	mov    QWORD PTR [rcx],rax
   14001682a:	mov    rax,rcx
   14001682d:	ret    
   14001682e:	int3   
   14001682f:	int3   
   140016830:	mov    QWORD PTR [rsp+0x8],rcx
   140016835:	push   rdi
   140016836:	sub    rsp,0x30
   14001683a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140016843:	mov    QWORD PTR [rsp+0x48],rbx
   140016848:	mov    rbx,rdx
   14001684b:	mov    rdi,rcx
   14001684e:	call   QWORD PTR [rip+0x1fbf4]        # 0x140036448
   140016854:	nop
   140016855:	lea    rax,[rip+0x24134]        # 0x14003a990
   14001685c:	mov    QWORD PTR [rdi],rax
   14001685f:	mov    rcx,QWORD PTR [rbx+0x18]
   140016863:	test   rcx,rcx
   140016866:	je     0x140016870
   140016868:	mov    rax,QWORD PTR [rcx]
   14001686b:	call   QWORD PTR [rax+0x10]
   14001686e:	jmp    0x140016872
   140016870:	xor    eax,eax
   140016872:	mov    QWORD PTR [rdi+0x18],rax
   140016876:	mov    rax,rdi
   140016879:	mov    rbx,QWORD PTR [rsp+0x48]
   14001687e:	add    rsp,0x30
   140016882:	pop    rdi
   140016883:	ret    
   140016884:	int3   
   140016885:	int3   
   140016886:	int3   
   140016887:	int3   
   140016888:	int3   
   140016889:	int3   
   14001688a:	int3   
   14001688b:	int3   
   14001688c:	int3   
   14001688d:	int3   
   14001688e:	int3   
   14001688f:	int3   
   140016890:	mov    QWORD PTR [rsp+0x8],rcx
   140016895:	push   rdi
   140016896:	sub    rsp,0x30
   14001689a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400168a3:	mov    QWORD PTR [rsp+0x48],rbx
   1400168a8:	mov    rbx,rdx
   1400168ab:	mov    rdi,rcx
   1400168ae:	call   QWORD PTR [rip+0x1fb94]        # 0x140036448
   1400168b4:	nop
   1400168b5:	lea    rax,[rip+0x240ec]        # 0x14003a9a8
   1400168bc:	mov    QWORD PTR [rdi],rax
   1400168bf:	mov    rcx,QWORD PTR [rbx+0x18]
   1400168c3:	test   rcx,rcx
   1400168c6:	je     0x1400168d0
   1400168c8:	mov    rax,QWORD PTR [rcx]
   1400168cb:	call   QWORD PTR [rax+0x10]
   1400168ce:	jmp    0x1400168d2
   1400168d0:	xor    eax,eax
   1400168d2:	mov    QWORD PTR [rdi+0x18],rax
   1400168d6:	mov    rax,rdi
   1400168d9:	mov    rbx,QWORD PTR [rsp+0x48]
   1400168de:	add    rsp,0x30
   1400168e2:	pop    rdi
   1400168e3:	ret    
   1400168e4:	int3   
   1400168e5:	int3   
   1400168e6:	int3   
   1400168e7:	int3   
   1400168e8:	int3   
   1400168e9:	int3   
   1400168ea:	int3   
   1400168eb:	int3   
   1400168ec:	int3   
   1400168ed:	int3   
   1400168ee:	int3   
   1400168ef:	int3   
   1400168f0:	rex push rbx
   1400168f2:	sub    rsp,0x20
   1400168f6:	mov    rbx,rcx
   1400168f9:	call   QWORD PTR [rip+0x1fb49]        # 0x140036448
   1400168ff:	lea    rax,[rip+0x24072]        # 0x14003a978
   140016906:	mov    QWORD PTR [rbx],rax
   140016909:	mov    rax,rbx
   14001690c:	add    rsp,0x20
   140016910:	pop    rbx
   140016911:	ret    
   140016912:	int3   
   140016913:	int3   
   140016914:	int3   
   140016915:	int3   
   140016916:	int3   
   140016917:	int3   
   140016918:	int3   
   140016919:	int3   
   14001691a:	int3   
   14001691b:	int3   
   14001691c:	int3   
   14001691d:	int3   
   14001691e:	int3   
   14001691f:	int3   
   140016920:	rex push rbx
   140016922:	sub    rsp,0x20
   140016926:	cmp    QWORD PTR [rdx+0x18],0x10
   14001692b:	mov    rbx,rcx
   14001692e:	jb     0x140016933
   140016930:	mov    rdx,QWORD PTR [rdx]
   140016933:	mov    QWORD PTR [rsp+0x30],rdx
   140016938:	lea    rdx,[rsp+0x30]
   14001693d:	call   QWORD PTR [rip+0x1fb0d]        # 0x140036450
   140016943:	lea    rax,[rip+0x2402e]        # 0x14003a978
   14001694a:	mov    QWORD PTR [rbx],rax
   14001694d:	mov    rax,rbx
   140016950:	add    rsp,0x20
   140016954:	pop    rbx
   140016955:	ret    
   140016956:	int3   
   140016957:	int3   
   140016958:	int3   
   140016959:	int3   
   14001695a:	int3   
   14001695b:	int3   
   14001695c:	int3   
   14001695d:	int3   
   14001695e:	int3   
   14001695f:	int3   
   140016960:	rex push rbx
   140016962:	sub    rsp,0x20
   140016966:	mov    rbx,rcx
   140016969:	call   QWORD PTR [rip+0x1fad9]        # 0x140036448
   14001696f:	lea    rax,[rip+0x23ce2]        # 0x14003a658
   140016976:	mov    QWORD PTR [rbx],rax
   140016979:	mov    rax,rbx
   14001697c:	add    rsp,0x20
   140016980:	pop    rbx
   140016981:	ret    
   140016982:	int3   
   140016983:	int3   
   140016984:	int3   
   140016985:	int3   
   140016986:	int3   
   140016987:	int3   
   140016988:	int3   
   140016989:	int3   
   14001698a:	int3   
   14001698b:	int3   
   14001698c:	int3   
   14001698d:	int3   
   14001698e:	int3   
   14001698f:	int3   
   140016990:	rex push rbx
   140016992:	sub    rsp,0x20
   140016996:	cmp    QWORD PTR [rdx+0x18],0x10
   14001699b:	mov    rbx,rcx
   14001699e:	jb     0x1400169a3
   1400169a0:	mov    rdx,QWORD PTR [rdx]
   1400169a3:	mov    QWORD PTR [rsp+0x30],rdx
   1400169a8:	lea    rdx,[rsp+0x30]
   1400169ad:	call   QWORD PTR [rip+0x1fa9d]        # 0x140036450
   1400169b3:	lea    rax,[rip+0x23c9e]        # 0x14003a658
   1400169ba:	mov    QWORD PTR [rbx],rax
   1400169bd:	mov    rax,rbx
   1400169c0:	add    rsp,0x20
   1400169c4:	pop    rbx
   1400169c5:	ret    
   1400169c6:	int3   
   1400169c7:	int3   
   1400169c8:	int3   
   1400169c9:	int3   
   1400169ca:	int3   
   1400169cb:	int3   
   1400169cc:	int3   
   1400169cd:	int3   
   1400169ce:	int3   
   1400169cf:	int3   
   1400169d0:	mov    QWORD PTR [rsp+0x10],rdx
   1400169d5:	push   rbx
   1400169d6:	sub    rsp,0x20
   1400169da:	lea    rdx,[rsp+0x38]
   1400169df:	mov    rbx,rcx
   1400169e2:	call   QWORD PTR [rip+0x1fa68]        # 0x140036450
   1400169e8:	lea    rax,[rip+0x23c69]        # 0x14003a658
   1400169ef:	mov    QWORD PTR [rbx],rax
   1400169f2:	mov    rax,rbx
   1400169f5:	add    rsp,0x20
   1400169f9:	pop    rbx
   1400169fa:	ret    
   1400169fb:	int3   
   1400169fc:	int3   
   1400169fd:	int3   
   1400169fe:	int3   
   1400169ff:	int3   
   140016a00:	rex push rbx
   140016a02:	sub    rsp,0x20
   140016a06:	mov    rbx,rcx
   140016a09:	mov    DWORD PTR [rcx+0x14],0x5
   140016a10:	lea    rdx,[rip+0x24225]        # 0x14003ac3c
   140016a17:	lea    rcx,[rip+0x24222]        # 0x14003ac40
   140016a1e:	call   QWORD PTR [rip+0x1fac4]        # 0x1400364e8
   140016a24:	mov    QWORD PTR [rbx+0x18],rax
   140016a28:	mov    rax,rbx
   140016a2b:	add    rsp,0x20
   140016a2f:	pop    rbx
   140016a30:	ret    
   140016a31:	int3   
   140016a32:	int3   
   140016a33:	int3   
   140016a34:	int3   
   140016a35:	int3   
   140016a36:	int3   
   140016a37:	int3   
   140016a38:	int3   
   140016a39:	int3   
   140016a3a:	int3   
   140016a3b:	int3   
   140016a3c:	int3   
   140016a3d:	int3   
   140016a3e:	int3   
   140016a3f:	int3   
   140016a40:	mov    QWORD PTR [rsp+0x8],rcx
   140016a45:	push   rdi
   140016a46:	sub    rsp,0x30
   140016a4a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140016a53:	mov    QWORD PTR [rsp+0x48],rbx
   140016a58:	mov    rbx,rdx
   140016a5b:	mov    rdi,rcx
   140016a5e:	mov    QWORD PTR [rcx],rdx
   140016a61:	mov    rax,QWORD PTR [rdx]
   140016a64:	movsxd r8,DWORD PTR [rax+0x4]
   140016a68:	mov    rcx,QWORD PTR [r8+rdx*1+0x48]
   140016a6d:	test   rcx,rcx
   140016a70:	je     0x140016a79
   140016a72:	mov    rax,QWORD PTR [rcx]
   140016a75:	call   QWORD PTR [rax+0x8]
   140016a78:	nop
   140016a79:	mov    rax,QWORD PTR [rbx]
   140016a7c:	movsxd rcx,DWORD PTR [rax+0x4]
   140016a80:	cmp    DWORD PTR [rcx+rbx*1+0x10],0x0
   140016a85:	jne    0x140016a9c
   140016a87:	mov    rcx,QWORD PTR [rcx+rbx*1+0x50]
   140016a8c:	test   rcx,rcx
   140016a8f:	je     0x140016a9c
   140016a91:	cmp    rcx,rbx
   140016a94:	je     0x140016a9c
   140016a96:	call   QWORD PTR [rip+0x1f694]        # 0x140036130
   140016a9c:	mov    rax,QWORD PTR [rbx]
   140016a9f:	movsxd rcx,DWORD PTR [rax+0x4]
   140016aa3:	cmp    DWORD PTR [rcx+rbx*1+0x10],0x0
   140016aa8:	sete   al
   140016aab:	mov    BYTE PTR [rdi+0x8],al
   140016aae:	mov    rax,rdi
   140016ab1:	mov    rbx,QWORD PTR [rsp+0x48]
   140016ab6:	add    rsp,0x30
   140016aba:	pop    rdi
   140016abb:	ret    
   140016abc:	int3   
   140016abd:	int3   
   140016abe:	int3   
   140016abf:	int3   
   140016ac0:	rex push rbx
   140016ac2:	sub    rsp,0x20
   140016ac6:	mov    rbx,rcx
   140016ac9:	mov    QWORD PTR [rcx],rdx
   140016acc:	mov    rcx,rdx
   140016acf:	call   0x14002c4f0
   140016ad4:	mov    rax,rbx
   140016ad7:	add    rsp,0x20
   140016adb:	pop    rbx
   140016adc:	ret    
   140016add:	int3   
   140016ade:	int3   
   140016adf:	int3   
   140016ae0:	xor    eax,eax
   140016ae2:	mov    DWORD PTR [rcx],0x67452301
   140016ae8:	mov    DWORD PTR [rcx+0x4],0xefcdab89
   140016aef:	mov    QWORD PTR [rcx+0x58],rax
   140016af3:	mov    QWORD PTR [rcx+0x60],rax
   140016af7:	mov    QWORD PTR [rcx+0x68],rax
   140016afb:	mov    rax,rcx
   140016afe:	mov    DWORD PTR [rcx+0x8],0x98badcfe
   140016b05:	mov    DWORD PTR [rcx+0xc],0x10325476
   140016b0c:	mov    DWORD PTR [rcx+0x10],0xc3d2e1f0
   140016b13:	ret    
   140016b14:	int3   
   140016b15:	int3   
   140016b16:	int3   
   140016b17:	int3   
   140016b18:	int3   
   140016b19:	int3   
   140016b1a:	int3   
   140016b1b:	int3   
   140016b1c:	int3   
   140016b1d:	int3   
   140016b1e:	int3   
   140016b1f:	int3   
   140016b20:	mov    rax,QWORD PTR [rdx]
   140016b23:	mov    QWORD PTR [rcx],rax
   140016b26:	test   rax,rax
   140016b29:	je     0x140016b2f
   140016b2b:	lock inc DWORD PTR [rax+0x8]
   140016b2f:	mov    rax,rcx
   140016b32:	ret    
   140016b33:	int3   
   140016b34:	int3   
   140016b35:	int3   
   140016b36:	int3   
   140016b37:	int3   
   140016b38:	int3   
   140016b39:	int3   
   140016b3a:	int3   
   140016b3b:	int3   
   140016b3c:	int3   
   140016b3d:	int3   
   140016b3e:	int3   
   140016b3f:	int3   
   140016b40:	mov    QWORD PTR [rcx],0x0
   140016b47:	mov    rax,rcx
   140016b4a:	ret    
   140016b4b:	int3   
   140016b4c:	int3   
   140016b4d:	int3   
   140016b4e:	int3   
   140016b4f:	int3   
   140016b50:	lea    rax,[rip+0x23df1]        # 0x14003a948
   140016b57:	mov    DWORD PTR [rcx+0x8],0x1
   140016b5e:	mov    DWORD PTR [rcx+0xc],0x1
   140016b65:	mov    QWORD PTR [rcx],rax
   140016b68:	mov    rax,rcx
   140016b6b:	ret    
   140016b6c:	int3   
   140016b6d:	int3   
   140016b6e:	int3   
   140016b6f:	int3   
   140016b70:	mov    QWORD PTR [rsp+0x8],rbx
   140016b75:	push   rdi
   140016b76:	sub    rsp,0x20
   140016b7a:	mov    rbx,rdx
   140016b7d:	mov    rdi,rcx
   140016b80:	call   QWORD PTR [rip+0x1f8c2]        # 0x140036448
   140016b86:	lea    rax,[rip+0x23b23]        # 0x14003a6b0
   140016b8d:	mov    QWORD PTR [rdi],rax
   140016b90:	lea    rax,[rip+0x23b39]        # 0x14003a6d0
   140016b97:	movups xmm0,XMMWORD PTR [rbx+0x18]
   140016b9b:	mov    rbx,QWORD PTR [rsp+0x30]
   140016ba0:	mov    QWORD PTR [rdi],rax
   140016ba3:	movups XMMWORD PTR [rdi+0x18],xmm0
   140016ba7:	mov    rax,rdi
   140016baa:	add    rsp,0x20
   140016bae:	pop    rdi
   140016baf:	ret    
   140016bb0:	mov    r11,rsp
   140016bb3:	push   rdi
   140016bb4:	sub    rsp,0xb0
   140016bbb:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140016bc4:	mov    QWORD PTR [r11+0x10],rbx
   140016bc8:	movaps XMMWORD PTR [r11-0x18],xmm6
   140016bcd:	mov    rax,r8
   140016bd0:	mov    rdi,rdx
   140016bd3:	mov    rbx,rcx
   140016bd6:	mov    QWORD PTR [r11-0x60],0xf
   140016bde:	mov    QWORD PTR [r11-0x68],0x0
   140016be6:	mov    BYTE PTR [rsp+0x40],0x0
   140016beb:	cmp    BYTE PTR [r8],0x0
   140016bef:	jne    0x140016bf6
   140016bf1:	xor    r8d,r8d
   140016bf4:	jmp    0x140016c0a
   140016bf6:	or     r8,0xffffffffffffffff
   140016bfa:	nop    WORD PTR [rax+rax*1+0x0]
   140016c00:	inc    r8
   140016c03:	cmp    BYTE PTR [rax+r8*1],0x0
   140016c08:	jne    0x140016c00
   140016c0a:	mov    rdx,rax
   140016c0d:	lea    rcx,[rsp+0x40]
   140016c12:	call   0x14001f070
   140016c17:	nop
   140016c18:	movups xmm6,XMMWORD PTR [rdi]
   140016c1b:	mov    QWORD PTR [rsp+0x78],0xf
   140016c24:	mov    QWORD PTR [rsp+0x70],0x0
   140016c2d:	mov    BYTE PTR [rsp+0x60],0x0
   140016c32:	or     r9,0xffffffffffffffff
   140016c36:	xor    r8d,r8d
   140016c39:	lea    rdx,[rsp+0x40]
   140016c3e:	lea    rcx,[rsp+0x60]
   140016c43:	call   0x14001ef20
   140016c48:	movdqa XMMWORD PTR [rsp+0x30],xmm6
   140016c4e:	lea    r8,[rsp+0x60]
   140016c53:	lea    rdx,[rsp+0x30]
   140016c58:	lea    rcx,[rsp+0x80]
   140016c60:	call   0x14001d2b0
   140016c65:	nop
   140016c66:	cmp    QWORD PTR [rax+0x18],0x10
   140016c6b:	jb     0x140016c70
   140016c6d:	mov    rax,QWORD PTR [rax]
   140016c70:	mov    QWORD PTR [rsp+0xc0],rax
   140016c78:	lea    rdx,[rsp+0xc0]
   140016c80:	mov    rcx,rbx
   140016c83:	call   QWORD PTR [rip+0x1f7c7]        # 0x140036450
   140016c89:	lea    rax,[rip+0x239c8]        # 0x14003a658
   140016c90:	mov    QWORD PTR [rbx],rax
   140016c93:	cmp    QWORD PTR [rsp+0x98],0x10
   140016c9c:	jb     0x140016cab
   140016c9e:	mov    rcx,QWORD PTR [rsp+0x80]
   140016ca6:	call   0x140030282
   140016cab:	lea    rax,[rip+0x239fe]        # 0x14003a6b0
   140016cb2:	mov    QWORD PTR [rbx],rax
   140016cb5:	movups XMMWORD PTR [rbx+0x18],xmm6
   140016cb9:	cmp    QWORD PTR [rsp+0x58],0x10
   140016cbf:	jb     0x140016ccb
   140016cc1:	mov    rcx,QWORD PTR [rsp+0x40]
   140016cc6:	call   0x140030282
   140016ccb:	lea    rax,[rip+0x239fe]        # 0x14003a6d0
   140016cd2:	mov    QWORD PTR [rbx],rax
   140016cd5:	mov    rax,rbx
   140016cd8:	mov    rbx,QWORD PTR [rsp+0xc8]
   140016ce0:	movaps xmm6,XMMWORD PTR [rsp+0xa0]
   140016ce8:	add    rsp,0xb0
   140016cef:	pop    rdi
   140016cf0:	ret    
   140016cf1:	int3   
   140016cf2:	int3   
   140016cf3:	int3   
   140016cf4:	int3   
   140016cf5:	int3   
   140016cf6:	int3   
   140016cf7:	int3   
   140016cf8:	int3   
   140016cf9:	int3   
   140016cfa:	int3   
   140016cfb:	int3   
   140016cfc:	int3   
   140016cfd:	int3   
   140016cfe:	int3   
   140016cff:	int3   
   140016d00:	lea    rax,[rip+0x23c29]        # 0x14003a930
   140016d07:	mov    QWORD PTR [rcx],rax
   140016d0a:	mov    rax,rcx
   140016d0d:	ret    
   140016d0e:	int3   
   140016d0f:	int3   
   140016d10:	rex push rbx
   140016d12:	sub    rsp,0x20
   140016d16:	mov    rbx,rcx
   140016d19:	call   0x140016350
   140016d1e:	lea    rax,[rip+0x23d6b]        # 0x14003aa90
   140016d25:	mov    QWORD PTR [rbx],rax
   140016d28:	mov    rax,rbx
   140016d2b:	add    rsp,0x20
   140016d2f:	pop    rbx
   140016d30:	ret    
   140016d31:	int3   
   140016d32:	int3   
   140016d33:	int3   
   140016d34:	int3   
   140016d35:	int3   
   140016d36:	int3   
   140016d37:	int3   
   140016d38:	int3   
   140016d39:	int3   
   140016d3a:	int3   
   140016d3b:	int3   
   140016d3c:	int3   
   140016d3d:	int3   
   140016d3e:	int3   
   140016d3f:	int3   
   140016d40:	rex push rbx
   140016d42:	sub    rsp,0x20
   140016d46:	mov    rbx,rcx
   140016d49:	call   0x1400163f0
   140016d4e:	lea    rax,[rip+0x23d3b]        # 0x14003aa90
   140016d55:	mov    QWORD PTR [rbx],rax
   140016d58:	mov    rax,rbx
   140016d5b:	add    rsp,0x20
   140016d5f:	pop    rbx
   140016d60:	ret    
   140016d61:	int3   
   140016d62:	int3   
   140016d63:	int3   
   140016d64:	int3   
   140016d65:	int3   
   140016d66:	int3   
   140016d67:	int3   
   140016d68:	int3   
   140016d69:	int3   
   140016d6a:	int3   
   140016d6b:	int3   
   140016d6c:	int3   
   140016d6d:	int3   
   140016d6e:	int3   
   140016d6f:	int3   
   140016d70:	mov    eax,DWORD PTR [rsp+0x28]
   140016d74:	mov    DWORD PTR [rcx],edx
   140016d76:	mov    DWORD PTR [rcx+0x4],r8d
   140016d7a:	mov    DWORD PTR [rcx+0xc],eax
   140016d7d:	mov    eax,DWORD PTR [rsp+0x30]
   140016d81:	mov    DWORD PTR [rcx+0x8],r9d
   140016d85:	mov    DWORD PTR [rcx+0x10],eax
   140016d88:	movzx  eax,BYTE PTR [rsp+0x38]
   140016d8d:	mov    BYTE PTR [rcx+0x14],al
   140016d90:	movzx  eax,BYTE PTR [rsp+0x40]
   140016d95:	mov    BYTE PTR [rcx+0x15],al
   140016d98:	mov    rax,rcx
   140016d9b:	ret    
   140016d9c:	int3   
   140016d9d:	int3   
   140016d9e:	int3   
   140016d9f:	int3   
   140016da0:	mov    rcx,QWORD PTR [rcx]
   140016da3:	jmp    0x140030282
   140016da8:	int3   
   140016da9:	int3   
   140016daa:	int3   
   140016dab:	int3   
   140016dac:	int3   
   140016dad:	int3   
   140016dae:	int3   
   140016daf:	int3   
   140016db0:	mov    rcx,QWORD PTR [rcx]
   140016db3:	jmp    0x140030282
   140016db8:	int3   
   140016db9:	int3   
   140016dba:	int3   
   140016dbb:	int3   
   140016dbc:	int3   
   140016dbd:	int3   
   140016dbe:	int3   
   140016dbf:	int3   
   140016dc0:	mov    rcx,QWORD PTR [rcx]
   140016dc3:	jmp    0x140030282
   140016dc8:	int3   
   140016dc9:	int3   
   140016dca:	int3   
   140016dcb:	int3   
   140016dcc:	int3   
   140016dcd:	int3   
   140016dce:	int3   
   140016dcf:	int3   
   140016dd0:	mov    rcx,QWORD PTR [rcx]
   140016dd3:	jmp    0x140030282
   140016dd8:	int3   
   140016dd9:	int3   
   140016dda:	int3   
   140016ddb:	int3   
   140016ddc:	int3   
   140016ddd:	int3   
   140016dde:	int3   
   140016ddf:	int3   
   140016de0:	lea    rax,[rip+0x251c9]        # 0x14003bfb0
   140016de7:	mov    QWORD PTR [rcx],rax
   140016dea:	ret    
   140016deb:	int3   
   140016dec:	int3   
   140016ded:	int3   
   140016dee:	int3   
   140016def:	int3   
   140016df0:	mov    rcx,QWORD PTR [rcx]
   140016df3:	test   rcx,rcx
   140016df6:	je     0x140016e03
   140016df8:	mov    rax,QWORD PTR [rcx]
   140016dfb:	mov    edx,0x1
   140016e00:	rex.W jmp QWORD PTR [rax]
   140016e03:	ret    
   140016e04:	int3   
   140016e05:	int3   
   140016e06:	int3   
   140016e07:	int3   
   140016e08:	int3   
   140016e09:	int3   
   140016e0a:	int3   
   140016e0b:	int3   
   140016e0c:	int3   
   140016e0d:	int3   
   140016e0e:	int3   
   140016e0f:	int3   
   140016e10:	mov    rcx,QWORD PTR [rcx]
   140016e13:	test   rcx,rcx
   140016e16:	je     0x140016e23
   140016e18:	mov    rax,QWORD PTR [rcx]
   140016e1b:	mov    edx,0x1
   140016e20:	rex.W jmp QWORD PTR [rax]
   140016e23:	ret    
   140016e24:	int3   
   140016e25:	int3   
   140016e26:	int3   
   140016e27:	int3   
   140016e28:	int3   
   140016e29:	int3   
   140016e2a:	int3   
   140016e2b:	int3   
   140016e2c:	int3   
   140016e2d:	int3   
   140016e2e:	int3   
   140016e2f:	int3   
   140016e30:	mov    rcx,QWORD PTR [rcx]
   140016e33:	test   rcx,rcx
   140016e36:	je     0x140016e43
   140016e38:	mov    rax,QWORD PTR [rcx]
   140016e3b:	mov    edx,0x1
   140016e40:	rex.W jmp QWORD PTR [rax]
   140016e43:	ret    
   140016e44:	int3   
   140016e45:	int3   
   140016e46:	int3   
   140016e47:	int3   
   140016e48:	int3   
   140016e49:	int3   
   140016e4a:	int3   
   140016e4b:	int3   
   140016e4c:	int3   
   140016e4d:	int3   
   140016e4e:	int3   
   140016e4f:	int3   
   140016e50:	cmp    QWORD PTR [rcx+0x8],0x0
   140016e55:	je     0x140016e60
   140016e57:	mov    rcx,QWORD PTR [rcx+0x10]
   140016e5b:	jmp    0x140030282
   140016e60:	ret    
   140016e61:	int3   
   140016e62:	int3   
   140016e63:	int3   
   140016e64:	int3   
   140016e65:	int3   
   140016e66:	int3   
   140016e67:	int3   
   140016e68:	int3   
   140016e69:	int3   
   140016e6a:	int3   
   140016e6b:	int3   
   140016e6c:	int3   
   140016e6d:	int3   
   140016e6e:	int3   
   140016e6f:	int3   
   140016e70:	mov    rcx,QWORD PTR [rcx]
   140016e73:	test   rcx,rcx
   140016e76:	jne    0x140030282
   140016e7c:	ret    
   140016e7d:	int3   
   140016e7e:	int3   
   140016e7f:	int3   
   140016e80:	rex.W jmp QWORD PTR [rip+0x1f819]        # 0x1400366a0
   140016e87:	int3   
   140016e88:	int3   
   140016e89:	int3   
   140016e8a:	int3   
   140016e8b:	int3   
   140016e8c:	int3   
   140016e8d:	int3   
   140016e8e:	int3   
   140016e8f:	int3   
   140016e90:	rex push rbx
   140016e92:	sub    rsp,0x20
   140016e96:	cmp    QWORD PTR [rcx+0x90],0x0
   140016e9e:	lea    rax,[rip+0x25bdb]        # 0x14003ca80
   140016ea5:	mov    rbx,rcx
   140016ea8:	mov    QWORD PTR [rcx],rax
   140016eab:	je     0x140016ed9
   140016ead:	mov    rcx,QWORD PTR [rcx+0x18]
   140016eb1:	lea    rax,[rbx+0x80]
   140016eb8:	cmp    QWORD PTR [rcx],rax
   140016ebb:	jne    0x140016ed9
   140016ebd:	mov    rdx,QWORD PTR [rbx+0x68]
   140016ec1:	mov    r8,QWORD PTR [rbx+0x70]
   140016ec5:	mov    QWORD PTR [rcx],rdx
   140016ec8:	mov    rax,QWORD PTR [rbx+0x38]
   140016ecc:	sub    r8d,edx
   140016ecf:	mov    QWORD PTR [rax],rdx
   140016ed2:	mov    rax,QWORD PTR [rbx+0x50]
   140016ed6:	mov    DWORD PTR [rax],r8d
   140016ed9:	cmp    BYTE PTR [rbx+0x88],0x0
   140016ee0:	je     0x140016eea
   140016ee2:	mov    rcx,rbx
   140016ee5:	call   0x140020390
   140016eea:	mov    rcx,rbx
   140016eed:	add    rsp,0x20
   140016ef1:	pop    rbx
   140016ef2:	rex.W jmp QWORD PTR [rip+0x1f2f7]        # 0x1400361f0
   140016ef9:	int3   
   140016efa:	int3   
   140016efb:	int3   
   140016efc:	int3   
   140016efd:	int3   
   140016efe:	int3   
   140016eff:	int3   
   140016f00:	rex push rbx
   140016f02:	sub    rsp,0x20
   140016f06:	mov    rax,QWORD PTR [rcx-0xa8]
   140016f0d:	mov    rbx,rcx
   140016f10:	add    rcx,0xffffffffffffff60
   140016f17:	movsxd rdx,DWORD PTR [rax+0x4]
   140016f1b:	lea    rax,[rip+0x25bde]        # 0x14003cb00
   140016f22:	mov    QWORD PTR [rdx+rcx*1-0x8],rax
   140016f27:	mov    rax,QWORD PTR [rcx-0x8]
   140016f2b:	movsxd rdx,DWORD PTR [rax+0x4]
   140016f2f:	lea    r8d,[rdx-0xa8]
   140016f36:	mov    DWORD PTR [rdx+rcx*1-0xc],r8d
   140016f3b:	call   0x140016e90
   140016f40:	lea    rcx,[rbx-0x98]
   140016f47:	add    rsp,0x20
   140016f4b:	pop    rbx
   140016f4c:	rex.W jmp QWORD PTR [rip+0x1f21d]        # 0x140036170
   140016f53:	int3   
   140016f54:	int3   
   140016f55:	int3   
   140016f56:	int3   
   140016f57:	int3   
   140016f58:	int3   
   140016f59:	int3   
   140016f5a:	int3   
   140016f5b:	int3   
   140016f5c:	int3   
   140016f5d:	int3   
   140016f5e:	int3   
   140016f5f:	int3   
   140016f60:	rex push rbx
   140016f62:	sub    rsp,0x20
   140016f66:	mov    rbx,rcx
   140016f69:	add    rcx,0x40
   140016f6d:	call   0x14001d9d0
   140016f72:	lea    rcx,[rbx+0x28]
   140016f76:	call   0x14001d9d0
   140016f7b:	cmp    QWORD PTR [rbx+0x18],0x10
   140016f80:	jb     0x140016f8a
   140016f82:	mov    rcx,QWORD PTR [rbx]
   140016f85:	call   0x140030282
   140016f8a:	mov    QWORD PTR [rbx+0x18],0xf
   140016f92:	mov    QWORD PTR [rbx+0x10],0x0
   140016f9a:	mov    BYTE PTR [rbx],0x0
   140016f9d:	add    rsp,0x20
   140016fa1:	pop    rbx
   140016fa2:	ret    
   140016fa3:	int3   
   140016fa4:	int3   
   140016fa5:	int3   
   140016fa6:	int3   
   140016fa7:	int3   
   140016fa8:	int3   
   140016fa9:	int3   
   140016faa:	int3   
   140016fab:	int3   
   140016fac:	int3   
   140016fad:	int3   
   140016fae:	int3   
   140016faf:	int3   
   140016fb0:	rex push rbx
   140016fb2:	sub    rsp,0x20
   140016fb6:	mov    rax,QWORD PTR [rcx-0x88]
   140016fbd:	mov    rbx,rcx
   140016fc0:	add    rcx,0xffffffffffffff80
   140016fc4:	movsxd rdx,DWORD PTR [rax+0x4]
   140016fc8:	lea    rax,[rip+0x251d1]        # 0x14003c1a0
   140016fcf:	mov    QWORD PTR [rdx+rcx*1-0x8],rax
   140016fd4:	mov    rax,QWORD PTR [rcx-0x8]
   140016fd8:	movsxd rdx,DWORD PTR [rax+0x4]
   140016fdc:	lea    r8d,[rdx-0x88]
   140016fe3:	mov    DWORD PTR [rdx+rcx*1-0xc],r8d
   140016fe8:	call   0x140017170
   140016fed:	lea    rcx,[rbx-0x78]
   140016ff1:	add    rsp,0x20
   140016ff5:	pop    rbx
   140016ff6:	rex.W jmp QWORD PTR [rip+0x1f173]        # 0x140036170
   140016ffd:	int3   
   140016ffe:	int3   
   140016fff:	int3   
   140017000:	rex push rbx
   140017002:	sub    rsp,0x20
   140017006:	mov    rbx,rcx
   140017009:	mov    rcx,QWORD PTR [rcx]
   14001700c:	test   rcx,rcx
   14001700f:	je     0x14001703a
   140017011:	movzx  r9d,BYTE PTR [rsp+0x30]
   140017017:	mov    rdx,QWORD PTR [rbx+0x8]
   14001701b:	lea    r8,[rsp+0x30]
   140017020:	call   0x1400042e0
   140017025:	mov    rcx,QWORD PTR [rbx]
   140017028:	call   0x140030282
   14001702d:	xor    eax,eax
   14001702f:	mov    QWORD PTR [rbx],rax
   140017032:	mov    QWORD PTR [rbx+0x8],rax
   140017036:	mov    QWORD PTR [rbx+0x10],rax
   14001703a:	add    rsp,0x20
   14001703e:	pop    rbx
   14001703f:	ret    
   140017040:	mov    QWORD PTR [rsp+0x8],rcx
   140017045:	push   rdi
   140017046:	sub    rsp,0x30
   14001704a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140017053:	mov    QWORD PTR [rsp+0x50],rbx
   140017058:	mov    rbx,rcx
   14001705b:	mov    rdi,QWORD PTR [rcx+0x20]
   14001705f:	mov    QWORD PTR [rsp+0x48],rdi
   140017064:	test   rdi,rdi
   140017067:	je     0x140017085
   140017069:	lea    rcx,[rdi+0x11]
   14001706d:	call   0x1400221d0
   140017072:	nop
   140017073:	mov    rcx,QWORD PTR [rdi+0x8]
   140017077:	call   0x140030282
   14001707c:	mov    rcx,rdi
   14001707f:	call   0x140030282
   140017084:	nop
   140017085:	cmp    QWORD PTR [rbx+0x18],0x10
   14001708a:	jb     0x140017094
   14001708c:	mov    rcx,QWORD PTR [rbx]
   14001708f:	call   0x140030282
   140017094:	mov    QWORD PTR [rbx+0x18],0xf
   14001709c:	mov    QWORD PTR [rbx+0x10],0x0
   1400170a4:	mov    BYTE PTR [rbx],0x0
   1400170a7:	mov    rbx,QWORD PTR [rsp+0x50]
   1400170ac:	add    rsp,0x30
   1400170b0:	pop    rdi
   1400170b1:	ret    
   1400170b2:	int3   
   1400170b3:	int3   
   1400170b4:	int3   
   1400170b5:	int3   
   1400170b6:	int3   
   1400170b7:	int3   
   1400170b8:	int3   
   1400170b9:	int3   
   1400170ba:	int3   
   1400170bb:	int3   
   1400170bc:	int3   
   1400170bd:	int3   
   1400170be:	int3   
   1400170bf:	int3   
   1400170c0:	rex push rbx
   1400170c2:	sub    rsp,0x20
   1400170c6:	mov    rbx,QWORD PTR [rcx+0x8]
   1400170ca:	test   rbx,rbx
   1400170cd:	je     0x1400170f7
   1400170cf:	lock dec DWORD PTR [rbx+0x8]
   1400170d3:	mov    QWORD PTR [rsp+0x30],rdi
   1400170d8:	jne    0x1400170f2
   1400170da:	mov    rax,QWORD PTR [rbx]
   1400170dd:	mov    rcx,rbx
   1400170e0:	call   QWORD PTR [rax+0x8]
   1400170e3:	lock dec DWORD PTR [rbx+0xc]
   1400170e7:	jne    0x1400170f2
   1400170e9:	mov    rax,QWORD PTR [rbx]
   1400170ec:	mov    rcx,rbx
   1400170ef:	call   QWORD PTR [rax+0x10]
   1400170f2:	mov    rdi,QWORD PTR [rsp+0x30]
   1400170f7:	add    rsp,0x20
   1400170fb:	pop    rbx
   1400170fc:	ret    
   1400170fd:	int3   
   1400170fe:	int3   
   1400170ff:	int3   
   140017100:	rex push rbx
   140017102:	sub    rsp,0x20
   140017106:	cmp    QWORD PTR [rcx+0x18],0x10
   14001710b:	mov    rbx,rcx
   14001710e:	jb     0x140017118
   140017110:	mov    rcx,QWORD PTR [rcx]
   140017113:	call   0x140030282
   140017118:	mov    QWORD PTR [rbx+0x18],0xf
   140017120:	mov    QWORD PTR [rbx+0x10],0x0
   140017128:	mov    BYTE PTR [rbx],0x0
   14001712b:	add    rsp,0x20
   14001712f:	pop    rbx
   140017130:	ret    
   140017131:	int3   
   140017132:	int3   
   140017133:	int3   
   140017134:	int3   
   140017135:	int3   
   140017136:	int3   
   140017137:	int3   
   140017138:	int3   
   140017139:	int3   
   14001713a:	int3   
   14001713b:	int3   
   14001713c:	int3   
   14001713d:	int3   
   14001713e:	int3   
   14001713f:	int3   
   140017140:	rex push rbx
   140017142:	sub    rsp,0x20
   140017146:	cmp    QWORD PTR [rcx+0x18],0x8
   14001714b:	mov    rbx,rcx
   14001714e:	jb     0x140017158
   140017150:	mov    rcx,QWORD PTR [rcx]
   140017153:	call   0x140030282
   140017158:	xor    eax,eax
   14001715a:	mov    QWORD PTR [rbx+0x18],0x7
   140017162:	mov    QWORD PTR [rbx+0x10],rax
   140017166:	mov    WORD PTR [rbx],ax
   140017169:	add    rsp,0x20
   14001716d:	pop    rbx
   14001716e:	ret    
   14001716f:	int3   
   140017170:	rex push rbx
   140017172:	sub    rsp,0x20
   140017176:	test   BYTE PTR [rcx+0x70],0x1
   14001717a:	lea    rax,[rip+0x23857]        # 0x14003a9d8
   140017181:	mov    rbx,rcx
   140017184:	mov    QWORD PTR [rcx],rax
   140017187:	je     0x140017195
   140017189:	mov    rcx,QWORD PTR [rcx+0x18]
   14001718d:	mov    rcx,QWORD PTR [rcx]
   140017190:	call   0x140030282
   140017195:	mov    rax,QWORD PTR [rbx+0x18]
   140017199:	xor    ecx,ecx
   14001719b:	mov    QWORD PTR [rax],rcx
   14001719e:	mov    rax,QWORD PTR [rbx+0x38]
   1400171a2:	mov    QWORD PTR [rax],rcx
   1400171a5:	mov    rax,QWORD PTR [rbx+0x50]
   1400171a9:	mov    DWORD PTR [rax],ecx
   1400171ab:	mov    rax,QWORD PTR [rbx+0x20]
   1400171af:	mov    QWORD PTR [rax],rcx
   1400171b2:	mov    rax,QWORD PTR [rbx+0x40]
   1400171b6:	mov    QWORD PTR [rax],rcx
   1400171b9:	mov    rax,QWORD PTR [rbx+0x58]
   1400171bd:	mov    DWORD PTR [rax],ecx
   1400171bf:	and    DWORD PTR [rbx+0x70],0xfffffffe
   1400171c3:	mov    QWORD PTR [rbx+0x68],rcx
   1400171c7:	mov    rcx,rbx
   1400171ca:	add    rsp,0x20
   1400171ce:	pop    rbx
   1400171cf:	rex.W jmp QWORD PTR [rip+0x1f01a]        # 0x1400361f0
   1400171d6:	int3   
   1400171d7:	int3   
   1400171d8:	int3   
   1400171d9:	int3   
   1400171da:	int3   
   1400171db:	int3   
   1400171dc:	int3   
   1400171dd:	int3   
   1400171de:	int3   
   1400171df:	int3   
   1400171e0:	rex push rbx
   1400171e2:	sub    rsp,0x20
   1400171e6:	mov    rax,QWORD PTR [rcx-0x98]
   1400171ed:	mov    rbx,rcx
   1400171f0:	add    rcx,0xffffffffffffff80
   1400171f4:	movsxd rdx,DWORD PTR [rax+0x4]
   1400171f8:	lea    rax,[rip+0x23859]        # 0x14003aa58
   1400171ff:	mov    QWORD PTR [rdx+rcx*1-0x18],rax
   140017204:	mov    rax,QWORD PTR [rcx-0x18]
   140017208:	movsxd rdx,DWORD PTR [rax+0x4]
   14001720c:	lea    r8d,[rdx-0x98]
   140017213:	mov    DWORD PTR [rdx+rcx*1-0x1c],r8d
   140017218:	call   0x140017170
   14001721d:	lea    rcx,[rbx-0x78]
   140017221:	add    rsp,0x20
   140017225:	pop    rbx
   140017226:	rex.W jmp QWORD PTR [rip+0x1eef3]        # 0x140036120
   14001722d:	int3   
   14001722e:	int3   
   14001722f:	int3   
   140017230:	rex push rbx
   140017232:	sub    rsp,0x20
   140017236:	mov    rbx,QWORD PTR [rcx+0x8]
   14001723a:	test   rbx,rbx
   14001723d:	je     0x140017267
   14001723f:	lock dec DWORD PTR [rbx+0x8]
   140017243:	mov    QWORD PTR [rsp+0x30],rdi
   140017248:	jne    0x140017262
   14001724a:	mov    rax,QWORD PTR [rbx]
   14001724d:	mov    rcx,rbx
   140017250:	call   QWORD PTR [rax+0x8]
   140017253:	lock dec DWORD PTR [rbx+0xc]
   140017257:	jne    0x140017262
   140017259:	mov    rax,QWORD PTR [rbx]
   14001725c:	mov    rcx,rbx
   14001725f:	call   QWORD PTR [rax+0x10]
   140017262:	mov    rdi,QWORD PTR [rsp+0x30]
   140017267:	add    rsp,0x20
   14001726b:	pop    rbx
   14001726c:	ret    
   14001726d:	int3   
   14001726e:	int3   
   14001726f:	int3   
   140017270:	rex push rbx
   140017272:	sub    rsp,0x20
   140017276:	mov    rbx,QWORD PTR [rcx+0x8]
   14001727a:	test   rbx,rbx
   14001727d:	je     0x1400172a7
   14001727f:	lock dec DWORD PTR [rbx+0x8]
   140017283:	mov    QWORD PTR [rsp+0x30],rdi
   140017288:	jne    0x1400172a2
   14001728a:	mov    rax,QWORD PTR [rbx]
   14001728d:	mov    rcx,rbx
   140017290:	call   QWORD PTR [rax+0x8]
   140017293:	lock dec DWORD PTR [rbx+0xc]
   140017297:	jne    0x1400172a2
   140017299:	mov    rax,QWORD PTR [rbx]
   14001729c:	mov    rcx,rbx
   14001729f:	call   QWORD PTR [rax+0x10]
   1400172a2:	mov    rdi,QWORD PTR [rsp+0x30]
   1400172a7:	add    rsp,0x20
   1400172ab:	pop    rbx
   1400172ac:	ret    
   1400172ad:	int3   
   1400172ae:	int3   
   1400172af:	int3   
   1400172b0:	mov    rcx,QWORD PTR [rcx]
   1400172b3:	test   rcx,rcx
   1400172b6:	jne    0x140030282
   1400172bc:	ret    
   1400172bd:	int3   
   1400172be:	int3   
   1400172bf:	int3   
   1400172c0:	rex push rbx
   1400172c2:	sub    rsp,0x20
   1400172c6:	mov    rbx,QWORD PTR [rcx+0x8]
   1400172ca:	test   rbx,rbx
   1400172cd:	je     0x1400172f7
   1400172cf:	lock dec DWORD PTR [rbx+0x8]
   1400172d3:	mov    QWORD PTR [rsp+0x30],rdi
   1400172d8:	jne    0x1400172f2
   1400172da:	mov    rax,QWORD PTR [rbx]
   1400172dd:	mov    rcx,rbx
   1400172e0:	call   QWORD PTR [rax+0x8]
   1400172e3:	lock dec DWORD PTR [rbx+0xc]
   1400172e7:	jne    0x1400172f2
   1400172e9:	mov    rax,QWORD PTR [rbx]
   1400172ec:	mov    rcx,rbx
   1400172ef:	call   QWORD PTR [rax+0x10]
   1400172f2:	mov    rdi,QWORD PTR [rsp+0x30]
   1400172f7:	add    rsp,0x20
   1400172fb:	pop    rbx
   1400172fc:	ret    
   1400172fd:	int3   
   1400172fe:	int3   
   1400172ff:	int3   
   140017300:	rex push rbx
   140017302:	sub    rsp,0x20
   140017306:	mov    rbx,QWORD PTR [rcx+0x8]
   14001730a:	test   rbx,rbx
   14001730d:	je     0x140017337
   14001730f:	lock dec DWORD PTR [rbx+0x8]
   140017313:	mov    QWORD PTR [rsp+0x30],rdi
   140017318:	jne    0x140017332
   14001731a:	mov    rax,QWORD PTR [rbx]
   14001731d:	mov    rcx,rbx
   140017320:	call   QWORD PTR [rax+0x8]
   140017323:	lock dec DWORD PTR [rbx+0xc]
   140017327:	jne    0x140017332
   140017329:	mov    rax,QWORD PTR [rbx]
   14001732c:	mov    rcx,rbx
   14001732f:	call   QWORD PTR [rax+0x10]
   140017332:	mov    rdi,QWORD PTR [rsp+0x30]
   140017337:	add    rsp,0x20
   14001733b:	pop    rbx
   14001733c:	ret    
   14001733d:	int3   
   14001733e:	int3   
   14001733f:	int3   
   140017340:	lea    rax,[rip+0x24c69]        # 0x14003bfb0
   140017347:	mov    QWORD PTR [rcx],rax
   14001734a:	ret    
   14001734b:	int3   
   14001734c:	int3   
   14001734d:	int3   
   14001734e:	int3   
   14001734f:	int3   
   140017350:	mov    QWORD PTR [rsp+0x8],rcx
   140017355:	push   rdi
   140017356:	sub    rsp,0x30
   14001735a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140017363:	mov    QWORD PTR [rsp+0x48],rbx
   140017368:	mov    QWORD PTR [rsp+0x50],rsi
   14001736d:	mov    rdi,rcx
   140017370:	mov    rbx,QWORD PTR [rcx+0x80]
   140017377:	test   rbx,rbx
   14001737a:	je     0x14001739b
   14001737c:	lock dec DWORD PTR [rbx+0x8]
   140017380:	jne    0x14001739b
   140017382:	mov    rax,QWORD PTR [rbx]
   140017385:	mov    rcx,rbx
   140017388:	call   QWORD PTR [rax+0x8]
   14001738b:	lock dec DWORD PTR [rbx+0xc]
   14001738f:	jne    0x14001739b
   140017391:	mov    rax,QWORD PTR [rbx]
   140017394:	mov    rcx,rbx
   140017397:	call   QWORD PTR [rax+0x10]
   14001739a:	nop
   14001739b:	lea    rax,[rip+0x24c0e]        # 0x14003bfb0
   1400173a2:	mov    QWORD PTR [rdi+0x68],rax
   1400173a6:	mov    rcx,rdi
   1400173a9:	mov    rbx,QWORD PTR [rsp+0x48]
   1400173ae:	mov    rsi,QWORD PTR [rsp+0x50]
   1400173b3:	add    rsp,0x30
   1400173b7:	pop    rdi
   1400173b8:	rex.W jmp QWORD PTR [rip+0x1ee31]        # 0x1400361f0
   1400173bf:	int3   
   1400173c0:	rex push rbx
   1400173c2:	sub    rsp,0x20
   1400173c6:	cmp    QWORD PTR [rcx+0x38],0x10
   1400173cb:	mov    rbx,rcx
   1400173ce:	jb     0x1400173d9
   1400173d0:	mov    rcx,QWORD PTR [rcx+0x20]
   1400173d4:	call   0x140030282
   1400173d9:	mov    QWORD PTR [rbx+0x38],0xf
   1400173e1:	mov    QWORD PTR [rbx+0x30],0x0
   1400173e9:	mov    BYTE PTR [rbx+0x20],0x0
   1400173ed:	cmp    QWORD PTR [rbx+0x18],0x10
   1400173f2:	jb     0x1400173fc
   1400173f4:	mov    rcx,QWORD PTR [rbx]
   1400173f7:	call   0x140030282
   1400173fc:	mov    QWORD PTR [rbx+0x18],0xf
   140017404:	mov    QWORD PTR [rbx+0x10],0x0
   14001740c:	mov    BYTE PTR [rbx],0x0
   14001740f:	add    rsp,0x20
   140017413:	pop    rbx
   140017414:	ret    
   140017415:	int3   
   140017416:	int3   
   140017417:	int3   
   140017418:	int3   
   140017419:	int3   
   14001741a:	int3   
   14001741b:	int3   
   14001741c:	int3   
   14001741d:	int3   
   14001741e:	int3   
   14001741f:	int3   
   140017420:	rex push rbx
   140017422:	sub    rsp,0x20
   140017426:	lea    rax,[rip+0x2555b]        # 0x14003c988
   14001742d:	mov    rbx,rcx
   140017430:	mov    QWORD PTR [rcx],rax
   140017433:	lea    rax,[rip+0x25566]        # 0x14003c9a0
   14001743a:	mov    QWORD PTR [rcx+0x18],rax
   14001743e:	mov    rax,QWORD PTR [rcx+0x40]
   140017442:	movsxd rdx,DWORD PTR [rax+0x4]
   140017446:	lea    rax,[rip+0x25563]        # 0x14003c9b0
   14001744d:	mov    QWORD PTR [rdx+rcx*1+0x40],rax
   140017452:	mov    rax,QWORD PTR [rcx+0x40]
   140017456:	movsxd rdx,DWORD PTR [rax+0x4]
   14001745a:	lea    rax,[rip+0x254ff]        # 0x14003c960
   140017461:	lea    r8d,[rdx-0x10]
   140017465:	mov    DWORD PTR [rdx+rcx*1+0x3c],r8d
   14001746a:	mov    QWORD PTR [rcx],rax
   14001746d:	lea    rax,[rip+0x233c4]        # 0x14003a838
   140017474:	mov    QWORD PTR [rcx+0x18],rax
   140017478:	mov    rcx,QWORD PTR [rcx+0x20]
   14001747c:	test   rcx,rcx
   14001747f:	je     0x140017493
   140017481:	mov    rax,QWORD PTR [rcx]
   140017484:	call   QWORD PTR [rax+0x20]
   140017487:	test   al,al
   140017489:	je     0x140017493
   14001748b:	mov    QWORD PTR [rbx+0x20],0x0
   140017493:	mov    rcx,rbx
   140017496:	add    rsp,0x20
   14001749a:	pop    rbx
   14001749b:	rex.W jmp QWORD PTR [rip+0x1ef9e]        # 0x140036440
   1400174a2:	int3   
   1400174a3:	int3   
   1400174a4:	int3   
   1400174a5:	int3   
   1400174a6:	int3   
   1400174a7:	int3   
   1400174a8:	int3   
   1400174a9:	int3   
   1400174aa:	int3   
   1400174ab:	int3   
   1400174ac:	int3   
   1400174ad:	int3   
   1400174ae:	int3   
   1400174af:	int3   
   1400174b0:	rex push rbx
   1400174b2:	sub    rsp,0x20
   1400174b6:	lea    rax,[rip+0x25b6b]        # 0x14003d028
   1400174bd:	mov    rbx,rcx
   1400174c0:	mov    QWORD PTR [rcx],rax
   1400174c3:	lea    rax,[rip+0x25b76]        # 0x14003d040
   1400174ca:	mov    QWORD PTR [rcx+0x18],rax
   1400174ce:	mov    rax,QWORD PTR [rcx+0x40]
   1400174d2:	movsxd rdx,DWORD PTR [rax+0x4]
   1400174d6:	lea    rax,[rip+0x25b73]        # 0x14003d050
   1400174dd:	mov    QWORD PTR [rdx+rcx*1+0x40],rax
   1400174e2:	mov    rax,QWORD PTR [rcx+0x40]
   1400174e6:	movsxd rdx,DWORD PTR [rax+0x4]
   1400174ea:	lea    rax,[rip+0x25b0f]        # 0x14003d000
   1400174f1:	lea    r8d,[rdx-0x10]
   1400174f5:	mov    DWORD PTR [rdx+rcx*1+0x3c],r8d
   1400174fa:	mov    QWORD PTR [rcx],rax
   1400174fd:	lea    rax,[rip+0x23334]        # 0x14003a838
   140017504:	mov    QWORD PTR [rcx+0x18],rax
   140017508:	mov    rcx,QWORD PTR [rcx+0x20]
   14001750c:	test   rcx,rcx
   14001750f:	je     0x140017523
   140017511:	mov    rax,QWORD PTR [rcx]
   140017514:	call   QWORD PTR [rax+0x20]
   140017517:	test   al,al
   140017519:	je     0x140017523
   14001751b:	mov    QWORD PTR [rbx+0x20],0x0
   140017523:	mov    rcx,rbx
   140017526:	add    rsp,0x20
   14001752a:	pop    rbx
   14001752b:	rex.W jmp QWORD PTR [rip+0x1ef0e]        # 0x140036440
   140017532:	int3   
   140017533:	int3   
   140017534:	int3   
   140017535:	int3   
   140017536:	int3   
   140017537:	int3   
   140017538:	int3   
   140017539:	int3   
   14001753a:	int3   
   14001753b:	int3   
   14001753c:	int3   
   14001753d:	int3   
   14001753e:	int3   
   14001753f:	int3   
   140017540:	rex push rbx
   140017542:	sub    rsp,0x20
   140017546:	lea    rax,[rip+0x2607b]        # 0x14003d5c8
   14001754d:	mov    rbx,rcx
   140017550:	mov    QWORD PTR [rcx],rax
   140017553:	lea    rax,[rip+0x26086]        # 0x14003d5e0
   14001755a:	mov    QWORD PTR [rcx+0x18],rax
   14001755e:	mov    rax,QWORD PTR [rcx+0x40]
   140017562:	movsxd rdx,DWORD PTR [rax+0x4]
   140017566:	lea    rax,[rip+0x26083]        # 0x14003d5f0
   14001756d:	mov    QWORD PTR [rdx+rcx*1+0x40],rax
   140017572:	mov    rax,QWORD PTR [rcx+0x40]
   140017576:	movsxd rdx,DWORD PTR [rax+0x4]
   14001757a:	lea    rax,[rip+0x2601f]        # 0x14003d5a0
   140017581:	lea    r8d,[rdx-0x10]
   140017585:	mov    DWORD PTR [rdx+rcx*1+0x3c],r8d
   14001758a:	mov    QWORD PTR [rcx],rax
   14001758d:	lea    rax,[rip+0x232a4]        # 0x14003a838
   140017594:	mov    QWORD PTR [rcx+0x18],rax
   140017598:	mov    rcx,QWORD PTR [rcx+0x20]
   14001759c:	test   rcx,rcx
   14001759f:	je     0x1400175b3
   1400175a1:	mov    rax,QWORD PTR [rcx]
   1400175a4:	call   QWORD PTR [rax+0x20]
   1400175a7:	test   al,al
   1400175a9:	je     0x1400175b3
   1400175ab:	mov    QWORD PTR [rbx+0x20],0x0
   1400175b3:	mov    rcx,rbx
   1400175b6:	add    rsp,0x20
   1400175ba:	pop    rbx
   1400175bb:	rex.W jmp QWORD PTR [rip+0x1ee7e]        # 0x140036440
   1400175c2:	int3   
   1400175c3:	int3   
   1400175c4:	int3   
   1400175c5:	int3   
   1400175c6:	int3   
   1400175c7:	int3   
   1400175c8:	int3   
   1400175c9:	int3   
   1400175ca:	int3   
   1400175cb:	int3   
   1400175cc:	int3   
   1400175cd:	int3   
   1400175ce:	int3   
   1400175cf:	int3   
   1400175d0:	rex push rbx
   1400175d2:	sub    rsp,0x20
   1400175d6:	lea    rax,[rip+0x26063]        # 0x14003d640
   1400175dd:	mov    rbx,rcx
   1400175e0:	mov    QWORD PTR [rcx],rax
   1400175e3:	lea    rax,[rip+0x2606e]        # 0x14003d658
   1400175ea:	mov    QWORD PTR [rcx+0x28],rax
   1400175ee:	mov    rax,QWORD PTR [rcx+0x50]
   1400175f2:	movsxd rdx,DWORD PTR [rax+0x4]
   1400175f6:	lea    rax,[rip+0x2606b]        # 0x14003d668
   1400175fd:	mov    QWORD PTR [rdx+rcx*1+0x50],rax
   140017602:	mov    rax,QWORD PTR [rcx+0x50]
   140017606:	movsxd rdx,DWORD PTR [rax+0x4]
   14001760a:	lea    rax,[rip+0x26007]        # 0x14003d618
   140017611:	lea    r8d,[rdx-0x10]
   140017615:	mov    DWORD PTR [rdx+rcx*1+0x4c],r8d
   14001761a:	mov    QWORD PTR [rcx],rax
   14001761d:	lea    rax,[rip+0x23214]        # 0x14003a838
   140017624:	mov    QWORD PTR [rcx+0x28],rax
   140017628:	mov    rcx,QWORD PTR [rcx+0x30]
   14001762c:	test   rcx,rcx
   14001762f:	je     0x140017643
   140017631:	mov    rax,QWORD PTR [rcx]
   140017634:	call   QWORD PTR [rax+0x20]
   140017637:	test   al,al
   140017639:	je     0x140017643
   14001763b:	mov    QWORD PTR [rbx+0x30],0x0
   140017643:	lea    rax,[rip+0x23276]        # 0x14003a8c0
   14001764a:	mov    rcx,rbx
   14001764d:	mov    QWORD PTR [rbx],rax
   140017650:	add    rsp,0x20
   140017654:	pop    rbx
   140017655:	rex.W jmp QWORD PTR [rip+0x1edbc]        # 0x140036418
   14001765c:	int3   
   14001765d:	int3   
   14001765e:	int3   
   14001765f:	int3   
   140017660:	rex push rbx
   140017662:	sub    rsp,0x20
   140017666:	lea    rax,[rip+0x28233]        # 0x14003f8a0
   14001766d:	mov    rbx,rcx
   140017670:	mov    QWORD PTR [rcx],rax
   140017673:	lea    rax,[rip+0x2823e]        # 0x14003f8b8
   14001767a:	mov    QWORD PTR [rcx+0x28],rax
   14001767e:	mov    rax,QWORD PTR [rcx+0x50]
   140017682:	movsxd rdx,DWORD PTR [rax+0x4]
   140017686:	lea    rax,[rip+0x2823b]        # 0x14003f8c8
   14001768d:	mov    QWORD PTR [rdx+rcx*1+0x50],rax
   140017692:	mov    rax,QWORD PTR [rcx+0x50]
   140017696:	movsxd rdx,DWORD PTR [rax+0x4]
   14001769a:	lea    rax,[rip+0x281d7]        # 0x14003f878
   1400176a1:	lea    r8d,[rdx-0x10]
   1400176a5:	mov    DWORD PTR [rdx+rcx*1+0x4c],r8d
   1400176aa:	mov    QWORD PTR [rcx],rax
   1400176ad:	lea    rax,[rip+0x23184]        # 0x14003a838
   1400176b4:	mov    QWORD PTR [rcx+0x28],rax
   1400176b8:	mov    rcx,QWORD PTR [rcx+0x30]
   1400176bc:	test   rcx,rcx
   1400176bf:	je     0x1400176d3
   1400176c1:	mov    rax,QWORD PTR [rcx]
   1400176c4:	call   QWORD PTR [rax+0x20]
   1400176c7:	test   al,al
   1400176c9:	je     0x1400176d3
   1400176cb:	mov    QWORD PTR [rbx+0x30],0x0
   1400176d3:	mov    rcx,rbx
   1400176d6:	add    rsp,0x20
   1400176da:	pop    rbx
   1400176db:	rex.W jmp QWORD PTR [rip+0x1ed5e]        # 0x140036440
   1400176e2:	int3   
   1400176e3:	int3   
   1400176e4:	int3   
   1400176e5:	int3   
   1400176e6:	int3   
   1400176e7:	int3   
   1400176e8:	int3   
   1400176e9:	int3   
   1400176ea:	int3   
   1400176eb:	int3   
   1400176ec:	int3   
   1400176ed:	int3   
   1400176ee:	int3   
   1400176ef:	int3   
   1400176f0:	rex push rbx
   1400176f2:	sub    rsp,0x20
   1400176f6:	lea    rax,[rip+0x258b3]        # 0x14003cfb0
   1400176fd:	mov    rbx,rcx
   140017700:	mov    QWORD PTR [rcx],rax
   140017703:	lea    rax,[rip+0x258be]        # 0x14003cfc8
   14001770a:	mov    QWORD PTR [rcx+0x18],rax
   14001770e:	mov    rax,QWORD PTR [rcx+0x40]
   140017712:	movsxd rdx,DWORD PTR [rax+0x4]
   140017716:	lea    rax,[rip+0x258bb]        # 0x14003cfd8
   14001771d:	mov    QWORD PTR [rdx+rcx*1+0x40],rax
   140017722:	mov    rax,QWORD PTR [rcx+0x40]
   140017726:	movsxd rdx,DWORD PTR [rax+0x4]
   14001772a:	lea    rax,[rip+0x25857]        # 0x14003cf88
   140017731:	lea    r8d,[rdx-0x10]
   140017735:	mov    DWORD PTR [rdx+rcx*1+0x3c],r8d
   14001773a:	mov    QWORD PTR [rcx],rax
   14001773d:	lea    rax,[rip+0x230f4]        # 0x14003a838
   140017744:	mov    QWORD PTR [rcx+0x18],rax
   140017748:	mov    rcx,QWORD PTR [rcx+0x20]
   14001774c:	test   rcx,rcx
   14001774f:	je     0x140017763
   140017751:	mov    rax,QWORD PTR [rcx]
   140017754:	call   QWORD PTR [rax+0x20]
   140017757:	test   al,al
   140017759:	je     0x140017763
   14001775b:	mov    QWORD PTR [rbx+0x20],0x0
   140017763:	mov    rcx,rbx
   140017766:	add    rsp,0x20
   14001776a:	pop    rbx
   14001776b:	rex.W jmp QWORD PTR [rip+0x1ecce]        # 0x140036440
   140017772:	int3   
   140017773:	int3   
   140017774:	int3   
   140017775:	int3   
   140017776:	int3   
   140017777:	int3   
   140017778:	int3   
   140017779:	int3   
   14001777a:	int3   
   14001777b:	int3   
   14001777c:	int3   
   14001777d:	int3   
   14001777e:	int3   
   14001777f:	int3   
   140017780:	rex push rbx
   140017782:	sub    rsp,0x20
   140017786:	lea    rax,[rip+0x27c7b]        # 0x14003f408
   14001778d:	mov    rbx,rcx
   140017790:	mov    QWORD PTR [rcx],rax
   140017793:	lea    rax,[rip+0x27c86]        # 0x14003f420
   14001779a:	mov    QWORD PTR [rcx+0x18],rax
   14001779e:	mov    rax,QWORD PTR [rcx+0x40]
   1400177a2:	movsxd rdx,DWORD PTR [rax+0x4]
   1400177a6:	lea    rax,[rip+0x27c83]        # 0x14003f430
   1400177ad:	mov    QWORD PTR [rdx+rcx*1+0x40],rax
   1400177b2:	mov    rax,QWORD PTR [rcx+0x40]
   1400177b6:	movsxd rdx,DWORD PTR [rax+0x4]
   1400177ba:	lea    rax,[rip+0x27c1f]        # 0x14003f3e0
   1400177c1:	lea    r8d,[rdx-0x10]
   1400177c5:	mov    DWORD PTR [rdx+rcx*1+0x3c],r8d
   1400177ca:	mov    QWORD PTR [rcx],rax
   1400177cd:	lea    rax,[rip+0x23064]        # 0x14003a838
   1400177d4:	mov    QWORD PTR [rcx+0x18],rax
   1400177d8:	mov    rcx,QWORD PTR [rcx+0x20]
   1400177dc:	test   rcx,rcx
   1400177df:	je     0x1400177f3
   1400177e1:	mov    rax,QWORD PTR [rcx]
   1400177e4:	call   QWORD PTR [rax+0x20]
   1400177e7:	test   al,al
   1400177e9:	je     0x1400177f3
   1400177eb:	mov    QWORD PTR [rbx+0x20],0x0
   1400177f3:	mov    rcx,rbx
   1400177f6:	add    rsp,0x20
   1400177fa:	pop    rbx
   1400177fb:	rex.W jmp QWORD PTR [rip+0x1ec3e]        # 0x140036440
   140017802:	int3   
   140017803:	int3   
   140017804:	int3   
   140017805:	int3   
   140017806:	int3   
   140017807:	int3   
   140017808:	int3   
   140017809:	int3   
   14001780a:	int3   
   14001780b:	int3   
   14001780c:	int3   
   14001780d:	int3   
   14001780e:	int3   
   14001780f:	int3   
   140017810:	lea    rax,[rip+0x27c99]        # 0x14003f4b0
   140017817:	mov    QWORD PTR [rcx],rax
   14001781a:	lea    rax,[rip+0x27ca7]        # 0x14003f4c8
   140017821:	mov    QWORD PTR [rcx+0x20],rax
   140017825:	mov    rax,QWORD PTR [rcx+0x48]
   140017829:	movsxd rdx,DWORD PTR [rax+0x4]
   14001782d:	lea    rax,[rip+0x27ca4]        # 0x14003f4d8
   140017834:	mov    QWORD PTR [rdx+rcx*1+0x48],rax
   140017839:	mov    rax,QWORD PTR [rcx+0x48]
   14001783d:	movsxd rdx,DWORD PTR [rax+0x4]
   140017841:	lea    r8d,[rdx-0x10]
   140017845:	mov    DWORD PTR [rdx+rcx*1+0x44],r8d
   14001784a:	jmp    0x140017d40
   14001784f:	int3   
   140017850:	lea    rax,[rip+0x280c1]        # 0x14003f918
   140017857:	mov    QWORD PTR [rcx],rax
   14001785a:	lea    rax,[rip+0x280cf]        # 0x14003f930
   140017861:	mov    QWORD PTR [rcx+0x20],rax
   140017865:	mov    rax,QWORD PTR [rcx+0x48]
   140017869:	movsxd rdx,DWORD PTR [rax+0x4]
   14001786d:	lea    rax,[rip+0x280cc]        # 0x14003f940
   140017874:	mov    QWORD PTR [rdx+rcx*1+0x48],rax
   140017879:	mov    rax,QWORD PTR [rcx+0x48]
   14001787d:	movsxd rdx,DWORD PTR [rax+0x4]
   140017881:	lea    r8d,[rdx-0x10]
   140017885:	mov    DWORD PTR [rdx+rcx*1+0x44],r8d
   14001788a:	jmp    0x140017db0
   14001788f:	int3   
   140017890:	rex push rbx
   140017892:	sub    rsp,0x20
   140017896:	lea    rax,[rip+0x25163]        # 0x14003ca00
   14001789d:	mov    rbx,rcx
   1400178a0:	mov    QWORD PTR [rcx],rax
   1400178a3:	lea    rax,[rip+0x2516e]        # 0x14003ca18
   1400178aa:	mov    QWORD PTR [rcx+0x18],rax
   1400178ae:	mov    rax,QWORD PTR [rcx+0x40]
   1400178b2:	movsxd rdx,DWORD PTR [rax+0x4]
   1400178b6:	lea    rax,[rip+0x2516b]        # 0x14003ca28
   1400178bd:	mov    QWORD PTR [rdx+rcx*1+0x40],rax
   1400178c2:	mov    rax,QWORD PTR [rcx+0x40]
   1400178c6:	movsxd rdx,DWORD PTR [rax+0x4]
   1400178ca:	lea    rax,[rip+0x25107]        # 0x14003c9d8
   1400178d1:	lea    r8d,[rdx-0x10]
   1400178d5:	mov    DWORD PTR [rdx+rcx*1+0x3c],r8d
   1400178da:	mov    QWORD PTR [rcx],rax
   1400178dd:	lea    rax,[rip+0x22f54]        # 0x14003a838
   1400178e4:	mov    QWORD PTR [rcx+0x18],rax
   1400178e8:	mov    rcx,QWORD PTR [rcx+0x20]
   1400178ec:	test   rcx,rcx
   1400178ef:	je     0x140017903
   1400178f1:	mov    rax,QWORD PTR [rcx]
   1400178f4:	call   QWORD PTR [rax+0x20]
   1400178f7:	test   al,al
   1400178f9:	je     0x140017903
   1400178fb:	mov    QWORD PTR [rbx+0x20],0x0
   140017903:	mov    rcx,rbx
   140017906:	add    rsp,0x20
   14001790a:	pop    rbx
   14001790b:	rex.W jmp QWORD PTR [rip+0x1eb2e]        # 0x140036440
   140017912:	int3   
   140017913:	int3   
   140017914:	int3   
   140017915:	int3   
   140017916:	int3   
   140017917:	int3   
   140017918:	int3   
   140017919:	int3   
   14001791a:	int3   
   14001791b:	int3   
   14001791c:	int3   
   14001791d:	int3   
   14001791e:	int3   
   14001791f:	int3   
   140017920:	rex push rbx
   140017922:	sub    rsp,0x20
   140017926:	lea    rax,[rip+0x26d83]        # 0x14003e6b0
   14001792d:	mov    rbx,rcx
   140017930:	mov    QWORD PTR [rcx],rax
   140017933:	lea    rax,[rip+0x26d8e]        # 0x14003e6c8
   14001793a:	mov    QWORD PTR [rcx+0x60],rax
   14001793e:	mov    rax,QWORD PTR [rcx+0x88]
   140017945:	movsxd rdx,DWORD PTR [rax+0x4]
   140017949:	lea    rax,[rip+0x26d88]        # 0x14003e6d8
   140017950:	mov    QWORD PTR [rdx+rcx*1+0x88],rax
   140017958:	mov    rax,QWORD PTR [rcx+0x88]
   14001795f:	movsxd rdx,DWORD PTR [rax+0x4]
   140017963:	lea    rax,[rip+0x2573e]        # 0x14003d0a8
   14001796a:	lea    r8d,[rdx-0x10]
   14001796e:	mov    DWORD PTR [rdx+rcx*1+0x84],r8d
   140017976:	mov    QWORD PTR [rcx],rax
   140017979:	lea    rax,[rip+0x22eb8]        # 0x14003a838
   140017980:	mov    QWORD PTR [rcx+0x60],rax
   140017984:	mov    rcx,QWORD PTR [rcx+0x68]
   140017988:	test   rcx,rcx
   14001798b:	je     0x14001799f
   14001798d:	mov    rax,QWORD PTR [rcx]
   140017990:	call   QWORD PTR [rax+0x20]
   140017993:	test   al,al
   140017995:	je     0x14001799f
   140017997:	mov    QWORD PTR [rbx+0x68],0x0
   14001799f:	mov    rcx,rbx
   1400179a2:	add    rsp,0x20
   1400179a6:	pop    rbx
   1400179a7:	jmp    0x140019040
   1400179ac:	int3   
   1400179ad:	int3   
   1400179ae:	int3   
   1400179af:	int3   
   1400179b0:	rex push rbx
   1400179b2:	sub    rsp,0x20
   1400179b6:	mov    rbx,QWORD PTR [rcx+0x8]
   1400179ba:	test   rbx,rbx
   1400179bd:	je     0x1400179e7
   1400179bf:	lock dec DWORD PTR [rbx+0x8]
   1400179c3:	mov    QWORD PTR [rsp+0x30],rdi
   1400179c8:	jne    0x1400179e2
   1400179ca:	mov    rax,QWORD PTR [rbx]
   1400179cd:	mov    rcx,rbx
   1400179d0:	call   QWORD PTR [rax+0x8]
   1400179d3:	lock dec DWORD PTR [rbx+0xc]
   1400179d7:	jne    0x1400179e2
   1400179d9:	mov    rax,QWORD PTR [rbx]
   1400179dc:	mov    rcx,rbx
   1400179df:	call   QWORD PTR [rax+0x10]
   1400179e2:	mov    rdi,QWORD PTR [rsp+0x30]
   1400179e7:	add    rsp,0x20
   1400179eb:	pop    rbx
   1400179ec:	ret    
   1400179ed:	int3   
   1400179ee:	int3   
   1400179ef:	int3   
   1400179f0:	rex push rbx
   1400179f2:	sub    rsp,0x20
   1400179f6:	mov    rbx,QWORD PTR [rcx+0x8]
   1400179fa:	test   rbx,rbx
   1400179fd:	je     0x140017a27
   1400179ff:	lock dec DWORD PTR [rbx+0x8]
   140017a03:	mov    QWORD PTR [rsp+0x30],rdi
   140017a08:	jne    0x140017a22
   140017a0a:	mov    rax,QWORD PTR [rbx]
   140017a0d:	mov    rcx,rbx
   140017a10:	call   QWORD PTR [rax+0x8]
   140017a13:	lock dec DWORD PTR [rbx+0xc]
   140017a17:	jne    0x140017a22
   140017a19:	mov    rax,QWORD PTR [rbx]
   140017a1c:	mov    rcx,rbx
   140017a1f:	call   QWORD PTR [rax+0x10]
   140017a22:	mov    rdi,QWORD PTR [rsp+0x30]
   140017a27:	add    rsp,0x20
   140017a2b:	pop    rbx
   140017a2c:	ret    
   140017a2d:	int3   
   140017a2e:	int3   
   140017a2f:	int3   
   140017a30:	mov    QWORD PTR [rsp+0x8],rcx
   140017a35:	push   rsi
   140017a36:	push   rdi
   140017a37:	push   r14
   140017a39:	sub    rsp,0x30
   140017a3d:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140017a46:	mov    QWORD PTR [rsp+0x60],rbx
   140017a4b:	mov    QWORD PTR [rsp+0x68],rbp
   140017a50:	mov    rdi,rcx
   140017a53:	cmp    BYTE PTR [rcx+0x40],0x0
   140017a57:	jne    0x140017ac1
   140017a59:	xor    r14d,r14d
   140017a5c:	mov    ebp,r14d
   140017a5f:	cmp    QWORD PTR [rcx+0x28],r14
   140017a63:	jbe    0x140017ac1
   140017a65:	mov    esi,r14d
   140017a68:	nop    DWORD PTR [rax+rax*1+0x0]
   140017a70:	mov    rax,QWORD PTR [rdi+0x20]
   140017a74:	mov    rbx,QWORD PTR [rsi+rax*1+0x8]
   140017a79:	mov    QWORD PTR [rsp+0x58],rbx
   140017a7e:	lea    rcx,[rbx+0x20]
   140017a82:	call   0x140017040
   140017a87:	nop
   140017a88:	cmp    QWORD PTR [rbx+0x18],0x10
   140017a8d:	jb     0x140017a97
   140017a8f:	mov    rcx,QWORD PTR [rbx]
   140017a92:	call   0x140030282
   140017a97:	mov    QWORD PTR [rbx+0x18],0xf
   140017a9f:	mov    QWORD PTR [rbx+0x10],r14
   140017aa3:	mov    BYTE PTR [rbx],0x0
   140017aa6:	mov    rax,QWORD PTR [rdi+0x20]
   140017aaa:	mov    rcx,QWORD PTR [rsi+rax*1+0x8]
   140017aaf:	call   0x140030282
   140017ab4:	inc    rbp
   140017ab7:	add    rsi,0x10
   140017abb:	cmp    rbp,QWORD PTR [rdi+0x28]
   140017abf:	jb     0x140017a70
   140017ac1:	cmp    QWORD PTR [rdi+0x18],0x0
   140017ac6:	je     0x140017ad1
   140017ac8:	mov    rcx,QWORD PTR [rdi+0x20]
   140017acc:	call   0x140030282
   140017ad1:	mov    rbx,QWORD PTR [rsp+0x60]
   140017ad6:	mov    rbp,QWORD PTR [rsp+0x68]
   140017adb:	add    rsp,0x30
   140017adf:	pop    r14
   140017ae1:	pop    rdi
   140017ae2:	pop    rsi
   140017ae3:	ret    
   140017ae4:	int3   
   140017ae5:	int3   
   140017ae6:	int3   
   140017ae7:	int3   
   140017ae8:	int3   
   140017ae9:	int3   
   140017aea:	int3   
   140017aeb:	int3   
   140017aec:	int3   
   140017aed:	int3   
   140017aee:	int3   
   140017aef:	int3   
   140017af0:	mov    rcx,QWORD PTR [rcx]
   140017af3:	test   rcx,rcx
   140017af6:	jne    0x140030282
   140017afc:	ret    
   140017afd:	int3   
   140017afe:	int3   
   140017aff:	int3   
   140017b00:	rex push rbx
   140017b02:	sub    rsp,0x20
   140017b06:	lea    rax,[rip+0x24e53]        # 0x14003c960
   140017b0d:	mov    rbx,rcx
   140017b10:	mov    QWORD PTR [rcx],rax
   140017b13:	lea    rax,[rip+0x22d1e]        # 0x14003a838
   140017b1a:	mov    QWORD PTR [rcx+0x18],rax
   140017b1e:	mov    rcx,QWORD PTR [rcx+0x20]
   140017b22:	test   rcx,rcx
   140017b25:	je     0x140017b39
   140017b27:	mov    rax,QWORD PTR [rcx]
   140017b2a:	call   QWORD PTR [rax+0x20]
   140017b2d:	test   al,al
   140017b2f:	je     0x140017b39
   140017b31:	mov    QWORD PTR [rbx+0x20],0x0
   140017b39:	mov    rcx,rbx
   140017b3c:	add    rsp,0x20
   140017b40:	pop    rbx
   140017b41:	rex.W jmp QWORD PTR [rip+0x1e8f8]        # 0x140036440
   140017b48:	int3   
   140017b49:	int3   
   140017b4a:	int3   
   140017b4b:	int3   
   140017b4c:	int3   
   140017b4d:	int3   
   140017b4e:	int3   
   140017b4f:	int3   
   140017b50:	rex push rbx
   140017b52:	sub    rsp,0x20
   140017b56:	lea    rax,[rip+0x254a3]        # 0x14003d000
   140017b5d:	mov    rbx,rcx
   140017b60:	mov    QWORD PTR [rcx],rax
   140017b63:	lea    rax,[rip+0x22cce]        # 0x14003a838
   140017b6a:	mov    QWORD PTR [rcx+0x18],rax
   140017b6e:	mov    rcx,QWORD PTR [rcx+0x20]
   140017b72:	test   rcx,rcx
   140017b75:	je     0x140017b89
   140017b77:	mov    rax,QWORD PTR [rcx]
   140017b7a:	call   QWORD PTR [rax+0x20]
   140017b7d:	test   al,al
   140017b7f:	je     0x140017b89
   140017b81:	mov    QWORD PTR [rbx+0x20],0x0
   140017b89:	mov    rcx,rbx
   140017b8c:	add    rsp,0x20
   140017b90:	pop    rbx
   140017b91:	rex.W jmp QWORD PTR [rip+0x1e8a8]        # 0x140036440
   140017b98:	int3   
   140017b99:	int3   
   140017b9a:	int3   
   140017b9b:	int3   
   140017b9c:	int3   
   140017b9d:	int3   
   140017b9e:	int3   
   140017b9f:	int3   
   140017ba0:	rex push rbx
   140017ba2:	sub    rsp,0x20
   140017ba6:	lea    rax,[rip+0x259f3]        # 0x14003d5a0
   140017bad:	mov    rbx,rcx
   140017bb0:	mov    QWORD PTR [rcx],rax
   140017bb3:	lea    rax,[rip+0x22c7e]        # 0x14003a838
   140017bba:	mov    QWORD PTR [rcx+0x18],rax
   140017bbe:	mov    rcx,QWORD PTR [rcx+0x20]
   140017bc2:	test   rcx,rcx
   140017bc5:	je     0x140017bd9
   140017bc7:	mov    rax,QWORD PTR [rcx]
   140017bca:	call   QWORD PTR [rax+0x20]
   140017bcd:	test   al,al
   140017bcf:	je     0x140017bd9
   140017bd1:	mov    QWORD PTR [rbx+0x20],0x0
   140017bd9:	mov    rcx,rbx
   140017bdc:	add    rsp,0x20
   140017be0:	pop    rbx
   140017be1:	rex.W jmp QWORD PTR [rip+0x1e858]        # 0x140036440
   140017be8:	int3   
   140017be9:	int3   
   140017bea:	int3   
   140017beb:	int3   
   140017bec:	int3   
   140017bed:	int3   
   140017bee:	int3   
   140017bef:	int3   
   140017bf0:	rex push rbx
   140017bf2:	sub    rsp,0x20
   140017bf6:	lea    rax,[rip+0x25a1b]        # 0x14003d618
   140017bfd:	mov    rbx,rcx
   140017c00:	mov    QWORD PTR [rcx],rax
   140017c03:	lea    rax,[rip+0x22c2e]        # 0x14003a838
   140017c0a:	mov    QWORD PTR [rcx+0x28],rax
   140017c0e:	mov    rcx,QWORD PTR [rcx+0x30]
   140017c12:	test   rcx,rcx
   140017c15:	je     0x140017c29
   140017c17:	mov    rax,QWORD PTR [rcx]
   140017c1a:	call   QWORD PTR [rax+0x20]
   140017c1d:	test   al,al
   140017c1f:	je     0x140017c29
   140017c21:	mov    QWORD PTR [rbx+0x30],0x0
   140017c29:	lea    rax,[rip+0x22c90]        # 0x14003a8c0
   140017c30:	mov    rcx,rbx
   140017c33:	mov    QWORD PTR [rbx],rax
   140017c36:	add    rsp,0x20
   140017c3a:	pop    rbx
   140017c3b:	rex.W jmp QWORD PTR [rip+0x1e7d6]        # 0x140036418
   140017c42:	int3   
   140017c43:	int3   
   140017c44:	int3   
   140017c45:	int3   
   140017c46:	int3   
   140017c47:	int3   
   140017c48:	int3   
   140017c49:	int3   
   140017c4a:	int3   
   140017c4b:	int3   
   140017c4c:	int3   
   140017c4d:	int3   
   140017c4e:	int3   
   140017c4f:	int3   
   140017c50:	rex push rbx
   140017c52:	sub    rsp,0x20
   140017c56:	lea    rax,[rip+0x27c1b]        # 0x14003f878
   140017c5d:	mov    rbx,rcx
   140017c60:	mov    QWORD PTR [rcx],rax
   140017c63:	lea    rax,[rip+0x22bce]        # 0x14003a838
   140017c6a:	mov    QWORD PTR [rcx+0x28],rax
   140017c6e:	mov    rcx,QWORD PTR [rcx+0x30]
   140017c72:	test   rcx,rcx
   140017c75:	je     0x140017c89
   140017c77:	mov    rax,QWORD PTR [rcx]
   140017c7a:	call   QWORD PTR [rax+0x20]
   140017c7d:	test   al,al
   140017c7f:	je     0x140017c89
   140017c81:	mov    QWORD PTR [rbx+0x30],0x0
   140017c89:	mov    rcx,rbx
   140017c8c:	add    rsp,0x20
   140017c90:	pop    rbx
   140017c91:	rex.W jmp QWORD PTR [rip+0x1e7a8]        # 0x140036440
   140017c98:	int3   
   140017c99:	int3   
   140017c9a:	int3   
   140017c9b:	int3   
   140017c9c:	int3   
   140017c9d:	int3   
   140017c9e:	int3   
   140017c9f:	int3   
   140017ca0:	rex push rbx
   140017ca2:	sub    rsp,0x20
   140017ca6:	lea    rax,[rip+0x252db]        # 0x14003cf88
   140017cad:	mov    rbx,rcx
   140017cb0:	mov    QWORD PTR [rcx],rax
   140017cb3:	lea    rax,[rip+0x22b7e]        # 0x14003a838
   140017cba:	mov    QWORD PTR [rcx+0x18],rax
   140017cbe:	mov    rcx,QWORD PTR [rcx+0x20]
   140017cc2:	test   rcx,rcx
   140017cc5:	je     0x140017cd9
   140017cc7:	mov    rax,QWORD PTR [rcx]
   140017cca:	call   QWORD PTR [rax+0x20]
   140017ccd:	test   al,al
   140017ccf:	je     0x140017cd9
   140017cd1:	mov    QWORD PTR [rbx+0x20],0x0
   140017cd9:	mov    rcx,rbx
   140017cdc:	add    rsp,0x20
   140017ce0:	pop    rbx
   140017ce1:	rex.W jmp QWORD PTR [rip+0x1e758]        # 0x140036440
   140017ce8:	int3   
   140017ce9:	int3   
   140017cea:	int3   
   140017ceb:	int3   
   140017cec:	int3   
   140017ced:	int3   
   140017cee:	int3   
   140017cef:	int3   
   140017cf0:	rex push rbx
   140017cf2:	sub    rsp,0x20
   140017cf6:	lea    rax,[rip+0x276e3]        # 0x14003f3e0
   140017cfd:	mov    rbx,rcx
   140017d00:	mov    QWORD PTR [rcx],rax
   140017d03:	lea    rax,[rip+0x22b2e]        # 0x14003a838
   140017d0a:	mov    QWORD PTR [rcx+0x18],rax
   140017d0e:	mov    rcx,QWORD PTR [rcx+0x20]
   140017d12:	test   rcx,rcx
   140017d15:	je     0x140017d29
   140017d17:	mov    rax,QWORD PTR [rcx]
   140017d1a:	call   QWORD PTR [rax+0x20]
   140017d1d:	test   al,al
   140017d1f:	je     0x140017d29
   140017d21:	mov    QWORD PTR [rbx+0x20],0x0
   140017d29:	mov    rcx,rbx
   140017d2c:	add    rsp,0x20
   140017d30:	pop    rbx
   140017d31:	rex.W jmp QWORD PTR [rip+0x1e708]        # 0x140036440
   140017d38:	int3   
   140017d39:	int3   
   140017d3a:	int3   
   140017d3b:	int3   
   140017d3c:	int3   
   140017d3d:	int3   
   140017d3e:	int3   
   140017d3f:	int3   
   140017d40:	rex push rbx
   140017d42:	sub    rsp,0x20
   140017d46:	lea    rax,[rip+0x271c3]        # 0x14003ef10
   140017d4d:	mov    rbx,rcx
   140017d50:	mov    QWORD PTR [rcx],rax
   140017d53:	lea    rax,[rip+0x22ade]        # 0x14003a838
   140017d5a:	mov    QWORD PTR [rcx+0x20],rax
   140017d5e:	mov    rcx,QWORD PTR [rcx+0x28]
   140017d62:	test   rcx,rcx
   140017d65:	je     0x140017d79
   140017d67:	mov    rax,QWORD PTR [rcx]
   140017d6a:	call   QWORD PTR [rax+0x20]
   140017d6d:	test   al,al
   140017d6f:	je     0x140017d79
   140017d71:	mov    QWORD PTR [rbx+0x28],0x0
   140017d79:	mov    rcx,QWORD PTR [rbx+0x18]
   140017d7d:	lea    rax,[rip+0x22c0c]        # 0x14003a990
   140017d84:	mov    QWORD PTR [rbx],rax
   140017d87:	test   rcx,rcx
   140017d8a:	je     0x140017d96
   140017d8c:	mov    rax,QWORD PTR [rcx]
   140017d8f:	mov    edx,0x1
   140017d94:	call   QWORD PTR [rax]
   140017d96:	lea    rax,[rip+0x22bdb]        # 0x14003a978
   140017d9d:	mov    rcx,rbx
   140017da0:	mov    QWORD PTR [rbx],rax
   140017da3:	add    rsp,0x20
   140017da7:	pop    rbx
   140017da8:	rex.W jmp QWORD PTR [rip+0x1e691]        # 0x140036440
   140017daf:	int3   
   140017db0:	rex push rbx
   140017db2:	sub    rsp,0x20
   140017db6:	lea    rax,[rip+0x276cb]        # 0x14003f488
   140017dbd:	mov    rbx,rcx
   140017dc0:	mov    QWORD PTR [rcx],rax
   140017dc3:	lea    rax,[rip+0x22a6e]        # 0x14003a838
   140017dca:	mov    QWORD PTR [rcx+0x20],rax
   140017dce:	mov    rcx,QWORD PTR [rcx+0x28]
   140017dd2:	test   rcx,rcx
   140017dd5:	je     0x140017de9
   140017dd7:	mov    rax,QWORD PTR [rcx]
   140017dda:	call   QWORD PTR [rax+0x20]
   140017ddd:	test   al,al
   140017ddf:	je     0x140017de9
   140017de1:	mov    QWORD PTR [rbx+0x28],0x0
   140017de9:	mov    rcx,QWORD PTR [rbx+0x18]
   140017ded:	lea    rax,[rip+0x22bb4]        # 0x14003a9a8
   140017df4:	mov    QWORD PTR [rbx],rax
   140017df7:	test   rcx,rcx
   140017dfa:	je     0x140017e06
   140017dfc:	mov    rax,QWORD PTR [rcx]
   140017dff:	mov    edx,0x1
   140017e04:	call   QWORD PTR [rax]
   140017e06:	lea    rax,[rip+0x22b6b]        # 0x14003a978
   140017e0d:	mov    rcx,rbx
   140017e10:	mov    QWORD PTR [rbx],rax
   140017e13:	add    rsp,0x20
   140017e17:	pop    rbx
   140017e18:	rex.W jmp QWORD PTR [rip+0x1e621]        # 0x140036440
   140017e1f:	int3   
   140017e20:	rex push rbx
   140017e22:	sub    rsp,0x20
   140017e26:	lea    rax,[rip+0x24bab]        # 0x14003c9d8
   140017e2d:	mov    rbx,rcx
   140017e30:	mov    QWORD PTR [rcx],rax
   140017e33:	lea    rax,[rip+0x229fe]        # 0x14003a838
   140017e3a:	mov    QWORD PTR [rcx+0x18],rax
   140017e3e:	mov    rcx,QWORD PTR [rcx+0x20]
   140017e42:	test   rcx,rcx
   140017e45:	je     0x140017e59
   140017e47:	mov    rax,QWORD PTR [rcx]
   140017e4a:	call   QWORD PTR [rax+0x20]
   140017e4d:	test   al,al
   140017e4f:	je     0x140017e59
   140017e51:	mov    QWORD PTR [rbx+0x20],0x0
   140017e59:	mov    rcx,rbx
   140017e5c:	add    rsp,0x20
   140017e60:	pop    rbx
   140017e61:	rex.W jmp QWORD PTR [rip+0x1e5d8]        # 0x140036440
   140017e68:	int3   
   140017e69:	int3   
   140017e6a:	int3   
   140017e6b:	int3   
   140017e6c:	int3   
   140017e6d:	int3   
   140017e6e:	int3   
   140017e6f:	int3   
   140017e70:	rex push rbx
   140017e72:	sub    rsp,0x20
   140017e76:	lea    rax,[rip+0x2522b]        # 0x14003d0a8
   140017e7d:	mov    rbx,rcx
   140017e80:	mov    QWORD PTR [rcx],rax
   140017e83:	lea    rax,[rip+0x229ae]        # 0x14003a838
   140017e8a:	mov    QWORD PTR [rcx+0x60],rax
   140017e8e:	mov    rcx,QWORD PTR [rcx+0x68]
   140017e92:	test   rcx,rcx
   140017e95:	je     0x140017ea9
   140017e97:	mov    rax,QWORD PTR [rcx]
   140017e9a:	call   QWORD PTR [rax+0x20]
   140017e9d:	test   al,al
   140017e9f:	je     0x140017ea9
   140017ea1:	mov    QWORD PTR [rbx+0x68],0x0
   140017ea9:	mov    rcx,rbx
   140017eac:	add    rsp,0x20
   140017eb0:	pop    rbx
   140017eb1:	jmp    0x140019040
   140017eb6:	int3   
   140017eb7:	int3   
   140017eb8:	int3   
   140017eb9:	int3   
   140017eba:	int3   
   140017ebb:	int3   
   140017ebc:	int3   
   140017ebd:	int3   
   140017ebe:	int3   
   140017ebf:	int3   
   140017ec0:	mov    QWORD PTR [rsp+0x8],rcx
   140017ec5:	push   rbx
   140017ec6:	sub    rsp,0x30
   140017eca:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140017ed3:	mov    rbx,rcx
   140017ed6:	lea    rax,[rip+0x241b3]        # 0x14003c090
   140017edd:	mov    QWORD PTR [rcx],rax
   140017ee0:	lea    rax,[rip+0x24229]        # 0x14003c110
   140017ee7:	mov    QWORD PTR [rcx+0x68],rax
   140017eeb:	mov    rax,QWORD PTR [rcx+0x70]
   140017eef:	mov    rdx,QWORD PTR [rax]
   140017ef2:	test   BYTE PTR [rdx+0x30],0x1
   140017ef6:	je     0x140017eff
   140017ef8:	call   QWORD PTR [rip+0x1e2da]        # 0x1400361d8
   140017efe:	nop
   140017eff:	mov    rcx,rbx
   140017f02:	add    rsp,0x30
   140017f06:	pop    rbx
   140017f07:	jmp    0x140017350
   140017f0c:	int3   
   140017f0d:	int3   
   140017f0e:	int3   
   140017f0f:	int3   
   140017f10:	rex push rbx
   140017f12:	sub    rsp,0x20
   140017f16:	mov    rax,QWORD PTR [rcx]
   140017f19:	mov    rbx,rcx
   140017f1c:	test   rax,rax
   140017f1f:	je     0x140017f48
   140017f21:	test   al,0x1
   140017f23:	jne    0x140017f41
   140017f25:	and    rax,0xfffffffffffffffe
   140017f29:	add    rcx,0x8
   140017f2d:	mov    r9,QWORD PTR [rax]
   140017f30:	test   r9,r9
   140017f33:	je     0x140017f41
   140017f35:	mov    r8d,0x2
   140017f3b:	mov    rdx,rcx
   140017f3e:	call   r9
   140017f41:	mov    QWORD PTR [rbx],0x0
   140017f48:	add    rsp,0x20
   140017f4c:	pop    rbx
   140017f4d:	ret    
   140017f4e:	int3   
   140017f4f:	int3   
   140017f50:	rex push rbx
   140017f52:	sub    rsp,0x20
   140017f56:	mov    rax,QWORD PTR [rcx]
   140017f59:	mov    rbx,rcx
   140017f5c:	test   rax,rax
   140017f5f:	je     0x140017f88
   140017f61:	test   al,0x1
   140017f63:	jne    0x140017f81
   140017f65:	and    rax,0xfffffffffffffffe
   140017f69:	add    rcx,0x8
   140017f6d:	mov    r9,QWORD PTR [rax]
   140017f70:	test   r9,r9
   140017f73:	je     0x140017f81
   140017f75:	mov    r8d,0x2
   140017f7b:	mov    rdx,rcx
   140017f7e:	call   r9
   140017f81:	mov    QWORD PTR [rbx],0x0
   140017f88:	add    rsp,0x20
   140017f8c:	pop    rbx
   140017f8d:	ret    
   140017f8e:	int3   
   140017f8f:	int3   
   140017f90:	mov    rcx,QWORD PTR [rcx]
   140017f93:	jmp    0x140030282
   140017f98:	int3   
   140017f99:	int3   
   140017f9a:	int3   
   140017f9b:	int3   
   140017f9c:	int3   
   140017f9d:	int3   
   140017f9e:	int3   
   140017f9f:	int3   
   140017fa0:	rex push rbx
   140017fa2:	sub    rsp,0x20
   140017fa6:	cmp    QWORD PTR [rcx+0x20],0x10
   140017fab:	mov    rbx,rcx
   140017fae:	jb     0x140017fb9
   140017fb0:	mov    rcx,QWORD PTR [rcx+0x8]
   140017fb4:	call   0x140030282
   140017fb9:	mov    QWORD PTR [rbx+0x20],0xf
   140017fc1:	mov    QWORD PTR [rbx+0x18],0x0
   140017fc9:	lea    rax,[rip+0x22898]        # 0x14003a868
   140017fd0:	mov    BYTE PTR [rbx+0x8],0x0
   140017fd4:	mov    QWORD PTR [rbx],rax
   140017fd7:	add    rsp,0x20
   140017fdb:	pop    rbx
   140017fdc:	ret    
   140017fdd:	int3   
   140017fde:	int3   
   140017fdf:	int3   
   140017fe0:	rex push rbx
   140017fe2:	sub    rsp,0x20
   140017fe6:	cmp    QWORD PTR [rcx+0x20],0x10
   140017feb:	mov    rbx,rcx
   140017fee:	jb     0x140017ff9
   140017ff0:	mov    rcx,QWORD PTR [rcx+0x8]
   140017ff4:	call   0x140030282
   140017ff9:	mov    QWORD PTR [rbx+0x20],0xf
   140018001:	mov    QWORD PTR [rbx+0x18],0x0
   140018009:	lea    rax,[rip+0x22858]        # 0x14003a868
   140018010:	mov    BYTE PTR [rbx+0x8],0x0
   140018014:	mov    QWORD PTR [rbx],rax
   140018017:	add    rsp,0x20
   14001801b:	pop    rbx
   14001801c:	ret    
   14001801d:	int3   
   14001801e:	int3   
   14001801f:	int3   
   140018020:	mov    QWORD PTR [rsp+0x8],rcx
   140018025:	push   rdi
   140018026:	sub    rsp,0x30
   14001802a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140018033:	mov    QWORD PTR [rsp+0x48],rbx
   140018038:	mov    QWORD PTR [rsp+0x50],rsi
   14001803d:	mov    rbx,rcx
   140018040:	mov    rcx,QWORD PTR [rcx+0x90]
   140018047:	test   rcx,rcx
   14001804a:	je     0x140018051
   14001804c:	call   0x140030282
   140018051:	cmp    BYTE PTR [rbx+0x80],0x0
   140018058:	je     0x140018088
   14001805a:	mov    rdi,QWORD PTR [rbx+0x78]
   14001805e:	test   rdi,rdi
   140018061:	je     0x140018081
   140018063:	lock dec DWORD PTR [rdi+0x8]
   140018067:	jne    0x140018081
   140018069:	mov    rax,QWORD PTR [rdi]
   14001806c:	mov    rcx,rdi
   14001806f:	call   QWORD PTR [rax+0x8]
   140018072:	lock dec DWORD PTR [rdi+0xc]
   140018076:	jne    0x140018081
   140018078:	mov    rax,QWORD PTR [rdi]
   14001807b:	mov    rcx,rdi
   14001807e:	call   QWORD PTR [rax+0x10]
   140018081:	mov    BYTE PTR [rbx+0x80],0x0
   140018088:	mov    rcx,rbx
   14001808b:	mov    rbx,QWORD PTR [rsp+0x48]
   140018090:	mov    rsi,QWORD PTR [rsp+0x50]
   140018095:	add    rsp,0x30
   140018099:	pop    rdi
   14001809a:	rex.W jmp QWORD PTR [rip+0x1e14f]        # 0x1400361f0
   1400180a1:	int3   
   1400180a2:	int3   
   1400180a3:	int3   
   1400180a4:	int3   
   1400180a5:	int3   
   1400180a6:	int3   
   1400180a7:	int3   
   1400180a8:	int3   
   1400180a9:	int3   
   1400180aa:	int3   
   1400180ab:	int3   
   1400180ac:	int3   
   1400180ad:	int3   
   1400180ae:	int3   
   1400180af:	int3   
   1400180b0:	mov    QWORD PTR [rsp+0x8],rcx
   1400180b5:	push   rdi
   1400180b6:	sub    rsp,0x30
   1400180ba:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400180c3:	mov    QWORD PTR [rsp+0x48],rbx
   1400180c8:	mov    QWORD PTR [rsp+0x50],rsi
   1400180cd:	mov    rbx,rcx
   1400180d0:	mov    rcx,QWORD PTR [rcx+0x90]
   1400180d7:	test   rcx,rcx
   1400180da:	je     0x1400180e1
   1400180dc:	call   0x140030282
   1400180e1:	cmp    BYTE PTR [rbx+0x80],0x0
   1400180e8:	je     0x140018118
   1400180ea:	mov    rdi,QWORD PTR [rbx+0x78]
   1400180ee:	test   rdi,rdi
   1400180f1:	je     0x140018111
   1400180f3:	lock dec DWORD PTR [rdi+0x8]
   1400180f7:	jne    0x140018111
   1400180f9:	mov    rax,QWORD PTR [rdi]
   1400180fc:	mov    rcx,rdi
   1400180ff:	call   QWORD PTR [rax+0x8]
   140018102:	lock dec DWORD PTR [rdi+0xc]
   140018106:	jne    0x140018111
   140018108:	mov    rax,QWORD PTR [rdi]
   14001810b:	mov    rcx,rdi
   14001810e:	call   QWORD PTR [rax+0x10]
   140018111:	mov    BYTE PTR [rbx+0x80],0x0
   140018118:	mov    rcx,rbx
   14001811b:	mov    rbx,QWORD PTR [rsp+0x48]
   140018120:	mov    rsi,QWORD PTR [rsp+0x50]
   140018125:	add    rsp,0x30
   140018129:	pop    rdi
   14001812a:	rex.W jmp QWORD PTR [rip+0x1e0bf]        # 0x1400361f0
   140018131:	int3   
   140018132:	int3   
   140018133:	int3   
   140018134:	int3   
   140018135:	int3   
   140018136:	int3   
   140018137:	int3   
   140018138:	int3   
   140018139:	int3   
   14001813a:	int3   
   14001813b:	int3   
   14001813c:	int3   
   14001813d:	int3   
   14001813e:	int3   
   14001813f:	int3   
   140018140:	rex push rbx
   140018142:	sub    rsp,0x20
   140018146:	mov    rbx,rcx
   140018149:	mov    rcx,QWORD PTR [rcx+0x80]
   140018150:	test   rcx,rcx
   140018153:	je     0x14001815a
   140018155:	call   0x140030282
   14001815a:	cmp    BYTE PTR [rbx+0x71],0x0
   14001815e:	je     0x140018164
   140018160:	mov    BYTE PTR [rbx+0x71],0x0
   140018164:	mov    rcx,rbx
   140018167:	add    rsp,0x20
   14001816b:	pop    rbx
   14001816c:	rex.W jmp QWORD PTR [rip+0x1e07d]        # 0x1400361f0
   140018173:	int3   
   140018174:	int3   
   140018175:	int3   
   140018176:	int3   
   140018177:	int3   
   140018178:	int3   
   140018179:	int3   
   14001817a:	int3   
   14001817b:	int3   
   14001817c:	int3   
   14001817d:	int3   
   14001817e:	int3   
   14001817f:	int3   
   140018180:	rex push rbx
   140018182:	sub    rsp,0x20
   140018186:	mov    rbx,rcx
   140018189:	mov    rcx,QWORD PTR [rcx+0x88]
   140018190:	test   rcx,rcx
   140018193:	je     0x14001819a
   140018195:	call   0x140030282
   14001819a:	cmp    BYTE PTR [rbx+0x78],0x0
   14001819e:	je     0x1400181a4
   1400181a0:	mov    BYTE PTR [rbx+0x78],0x0
   1400181a4:	mov    rcx,rbx
   1400181a7:	add    rsp,0x20
   1400181ab:	pop    rbx
   1400181ac:	rex.W jmp QWORD PTR [rip+0x1e03d]        # 0x1400361f0
   1400181b3:	int3   
   1400181b4:	int3   
   1400181b5:	int3   
   1400181b6:	int3   
   1400181b7:	int3   
   1400181b8:	int3   
   1400181b9:	int3   
   1400181ba:	int3   
   1400181bb:	int3   
   1400181bc:	int3   
   1400181bd:	int3   
   1400181be:	int3   
   1400181bf:	int3   
   1400181c0:	ret    0x0
   1400181c3:	int3   
   1400181c4:	int3   
   1400181c5:	int3   
   1400181c6:	int3   
   1400181c7:	int3   
   1400181c8:	int3   
   1400181c9:	int3   
   1400181ca:	int3   
   1400181cb:	int3   
   1400181cc:	int3   
   1400181cd:	int3   
   1400181ce:	int3   
   1400181cf:	int3   
   1400181d0:	ret    0x0
   1400181d3:	int3   
   1400181d4:	int3   
   1400181d5:	int3   
   1400181d6:	int3   
   1400181d7:	int3   
   1400181d8:	int3   
   1400181d9:	int3   
   1400181da:	int3   
   1400181db:	int3   
   1400181dc:	int3   
   1400181dd:	int3   
   1400181de:	int3   
   1400181df:	int3   
   1400181e0:	ret    0x0
   1400181e3:	int3   
   1400181e4:	int3   
   1400181e5:	int3   
   1400181e6:	int3   
   1400181e7:	int3   
   1400181e8:	int3   
   1400181e9:	int3   
   1400181ea:	int3   
   1400181eb:	int3   
   1400181ec:	int3   
   1400181ed:	int3   
   1400181ee:	int3   
   1400181ef:	int3   
   1400181f0:	rex.W jmp QWORD PTR [rip+0x1dff9]        # 0x1400361f0
   1400181f7:	int3   
   1400181f8:	int3   
   1400181f9:	int3   
   1400181fa:	int3   
   1400181fb:	int3   
   1400181fc:	int3   
   1400181fd:	int3   
   1400181fe:	int3   
   1400181ff:	int3   
   140018200:	rex push rdi
   140018202:	sub    rsp,0x20
   140018206:	mov    rax,QWORD PTR [rcx]
   140018209:	mov    rdi,rcx
   14001820c:	mov    rcx,QWORD PTR [rax]
   14001820f:	mov    QWORD PTR [rax],rax
   140018212:	mov    rax,QWORD PTR [rdi]
   140018215:	mov    QWORD PTR [rax+0x8],rax
   140018219:	mov    QWORD PTR [rdi+0x8],0x0
   140018221:	cmp    rcx,QWORD PTR [rdi]
   140018224:	je     0x140018245
   140018226:	mov    QWORD PTR [rsp+0x30],rbx
   14001822b:	nop    DWORD PTR [rax+rax*1+0x0]
   140018230:	mov    rbx,QWORD PTR [rcx]
   140018233:	call   0x140030282
   140018238:	mov    rcx,rbx
   14001823b:	cmp    rbx,QWORD PTR [rdi]
   14001823e:	jne    0x140018230
   140018240:	mov    rbx,QWORD PTR [rsp+0x30]
   140018245:	mov    rcx,QWORD PTR [rdi]
   140018248:	add    rsp,0x20
   14001824c:	pop    rdi
   14001824d:	jmp    0x140030282
   140018252:	int3   
   140018253:	int3   
   140018254:	int3   
   140018255:	int3   
   140018256:	int3   
   140018257:	int3   
   140018258:	int3   
   140018259:	int3   
   14001825a:	int3   
   14001825b:	int3   
   14001825c:	int3   
   14001825d:	int3   
   14001825e:	int3   
   14001825f:	int3   
   140018260:	rex push rbx
   140018262:	sub    rsp,0x20
   140018266:	mov    rbx,rcx
   140018269:	call   0x14001fc90
   14001826e:	mov    rcx,QWORD PTR [rbx]
   140018271:	add    rsp,0x20
   140018275:	pop    rbx
   140018276:	jmp    0x140030282
   14001827b:	int3   
   14001827c:	int3   
   14001827d:	int3   
   14001827e:	int3   
   14001827f:	int3   
   140018280:	mov    QWORD PTR [rsp+0x8],rcx
   140018285:	push   rbx
   140018286:	sub    rsp,0x30
   14001828a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140018293:	mov    rbx,rcx
   140018296:	add    rcx,0x11
   14001829a:	call   0x1400221d0
   14001829f:	nop
   1400182a0:	mov    rcx,QWORD PTR [rbx+0x8]
   1400182a4:	add    rsp,0x30
   1400182a8:	pop    rbx
   1400182a9:	jmp    0x140030282
   1400182ae:	int3   
   1400182af:	int3   
   1400182b0:	rex push rbx
   1400182b2:	sub    rsp,0x20
   1400182b6:	lea    rax,[rip+0x22533]        # 0x14003a7f0
   1400182bd:	mov    rbx,rcx
   1400182c0:	mov    QWORD PTR [rcx],rax
   1400182c3:	mov    rcx,QWORD PTR [rcx+0x10]
   1400182c7:	call   0x140030430
   1400182cc:	mov    rcx,QWORD PTR [rbx+0x20]
   1400182d0:	call   0x140030430
   1400182d5:	mov    rcx,QWORD PTR [rbx+0x28]
   1400182d9:	call   0x140030430
   1400182de:	mov    rax,QWORD PTR [rip+0x1dd93]        # 0x140036078
   1400182e5:	mov    QWORD PTR [rbx],rax
   1400182e8:	mov    rax,QWORD PTR [rip+0x1dd91]        # 0x140036080
   1400182ef:	mov    QWORD PTR [rbx],rax
   1400182f2:	add    rsp,0x20
   1400182f6:	pop    rbx
   1400182f7:	ret    
   1400182f8:	int3   
   1400182f9:	int3   
   1400182fa:	int3   
   1400182fb:	int3   
   1400182fc:	int3   
   1400182fd:	int3   
   1400182fe:	int3   
   1400182ff:	int3   
   140018300:	cmp    BYTE PTR [rcx],0x0
   140018303:	je     0x140018308
   140018305:	mov    BYTE PTR [rcx],0x0
   140018308:	ret    
   140018309:	int3   
   14001830a:	int3   
   14001830b:	int3   
   14001830c:	int3   
   14001830d:	int3   
   14001830e:	int3   
   14001830f:	int3   
   140018310:	cmp    BYTE PTR [rcx],0x0
   140018313:	je     0x140018318
   140018315:	mov    BYTE PTR [rcx],0x0
   140018318:	ret    
   140018319:	int3   
   14001831a:	int3   
   14001831b:	int3   
   14001831c:	int3   
   14001831d:	int3   
   14001831e:	int3   
   14001831f:	int3   
   140018320:	rex push rbx
   140018322:	sub    rsp,0x20
   140018326:	cmp    BYTE PTR [rcx],0x0
   140018329:	mov    rbx,rcx
   14001832c:	je     0x140018355
   14001832e:	cmp    QWORD PTR [rcx+0x20],0x10
   140018333:	jb     0x14001833e
   140018335:	mov    rcx,QWORD PTR [rcx+0x8]
   140018339:	call   0x140030282
   14001833e:	mov    QWORD PTR [rbx+0x20],0xf
   140018346:	mov    QWORD PTR [rbx+0x18],0x0
   14001834e:	mov    BYTE PTR [rbx+0x8],0x0
   140018352:	mov    BYTE PTR [rbx],0x0
   140018355:	add    rsp,0x20
   140018359:	pop    rbx
   14001835a:	ret    
   14001835b:	int3   
   14001835c:	int3   
   14001835d:	int3   
   14001835e:	int3   
   14001835f:	int3   
   140018360:	rex push rdi
   140018362:	sub    rsp,0x20
   140018366:	cmp    BYTE PTR [rcx+0x10],0x0
   14001836a:	mov    rdi,rcx
   14001836d:	je     0x1400183ae
   14001836f:	mov    QWORD PTR [rsp+0x30],rbx
   140018374:	mov    rbx,QWORD PTR [rcx+0x8]
   140018378:	test   rbx,rbx
   14001837b:	je     0x1400183a5
   14001837d:	lock dec DWORD PTR [rbx+0x8]
   140018381:	mov    QWORD PTR [rsp+0x38],rsi
   140018386:	jne    0x1400183a0
   140018388:	mov    rax,QWORD PTR [rbx]
   14001838b:	mov    rcx,rbx
   14001838e:	call   QWORD PTR [rax+0x8]
   140018391:	lock dec DWORD PTR [rbx+0xc]
   140018395:	jne    0x1400183a0
   140018397:	mov    rax,QWORD PTR [rbx]
   14001839a:	mov    rcx,rbx
   14001839d:	call   QWORD PTR [rax+0x10]
   1400183a0:	mov    rsi,QWORD PTR [rsp+0x38]
   1400183a5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400183aa:	mov    BYTE PTR [rdi+0x10],0x0
   1400183ae:	add    rsp,0x20
   1400183b2:	pop    rdi
   1400183b3:	ret    
   1400183b4:	int3   
   1400183b5:	int3   
   1400183b6:	int3   
   1400183b7:	int3   
   1400183b8:	int3   
   1400183b9:	int3   
   1400183ba:	int3   
   1400183bb:	int3   
   1400183bc:	int3   
   1400183bd:	int3   
   1400183be:	int3   
   1400183bf:	int3   
   1400183c0:	rex push rdi
   1400183c2:	sub    rsp,0x20
   1400183c6:	cmp    BYTE PTR [rcx+0x10],0x0
   1400183ca:	mov    rdi,rcx
   1400183cd:	je     0x14001840e
   1400183cf:	mov    QWORD PTR [rsp+0x30],rbx
   1400183d4:	mov    rbx,QWORD PTR [rcx+0x8]
   1400183d8:	test   rbx,rbx
   1400183db:	je     0x140018405
   1400183dd:	lock dec DWORD PTR [rbx+0x8]
   1400183e1:	mov    QWORD PTR [rsp+0x38],rsi
   1400183e6:	jne    0x140018400
   1400183e8:	mov    rax,QWORD PTR [rbx]
   1400183eb:	mov    rcx,rbx
   1400183ee:	call   QWORD PTR [rax+0x8]
   1400183f1:	lock dec DWORD PTR [rbx+0xc]
   1400183f5:	jne    0x140018400
   1400183f7:	mov    rax,QWORD PTR [rbx]
   1400183fa:	mov    rcx,rbx
   1400183fd:	call   QWORD PTR [rax+0x10]
   140018400:	mov    rsi,QWORD PTR [rsp+0x38]
   140018405:	mov    rbx,QWORD PTR [rsp+0x30]
   14001840a:	mov    BYTE PTR [rdi+0x10],0x0
   14001840e:	add    rsp,0x20
   140018412:	pop    rdi
   140018413:	ret    
   140018414:	int3   
   140018415:	int3   
   140018416:	int3   
   140018417:	int3   
   140018418:	int3   
   140018419:	int3   
   14001841a:	int3   
   14001841b:	int3   
   14001841c:	int3   
   14001841d:	int3   
   14001841e:	int3   
   14001841f:	int3   
   140018420:	cmp    BYTE PTR [rcx+0x1],0x0
   140018424:	je     0x14001842a
   140018426:	mov    BYTE PTR [rcx+0x1],0x0
   14001842a:	ret    
   14001842b:	int3   
   14001842c:	int3   
   14001842d:	int3   
   14001842e:	int3   
   14001842f:	int3   
   140018430:	cmp    BYTE PTR [rcx+0x8],0x0
   140018434:	je     0x14001843a
   140018436:	mov    BYTE PTR [rcx+0x8],0x0
   14001843a:	ret    
   14001843b:	int3   
   14001843c:	int3   
   14001843d:	int3   
   14001843e:	int3   
   14001843f:	int3   
   140018440:	cmp    BYTE PTR [rcx],0x0
   140018443:	je     0x140018448
   140018445:	mov    BYTE PTR [rcx],0x0
   140018448:	ret    
   140018449:	int3   
   14001844a:	int3   
   14001844b:	int3   
   14001844c:	int3   
   14001844d:	int3   
   14001844e:	int3   
   14001844f:	int3   
   140018450:	cmp    BYTE PTR [rcx],0x0
   140018453:	je     0x140018458
   140018455:	mov    BYTE PTR [rcx],0x0
   140018458:	ret    
   140018459:	int3   
   14001845a:	int3   
   14001845b:	int3   
   14001845c:	int3   
   14001845d:	int3   
   14001845e:	int3   
   14001845f:	int3   
   140018460:	rex push rbx
   140018462:	sub    rsp,0x20
   140018466:	cmp    BYTE PTR [rcx],0x0
   140018469:	mov    rbx,rcx
   14001846c:	je     0x140018495
   14001846e:	cmp    QWORD PTR [rcx+0x20],0x10
   140018473:	jb     0x14001847e
   140018475:	mov    rcx,QWORD PTR [rcx+0x8]
   140018479:	call   0x140030282
   14001847e:	mov    QWORD PTR [rbx+0x20],0xf
   140018486:	mov    QWORD PTR [rbx+0x18],0x0
   14001848e:	mov    BYTE PTR [rbx+0x8],0x0
   140018492:	mov    BYTE PTR [rbx],0x0
   140018495:	add    rsp,0x20
   140018499:	pop    rbx
   14001849a:	ret    
   14001849b:	int3   
   14001849c:	int3   
   14001849d:	int3   
   14001849e:	int3   
   14001849f:	int3   
   1400184a0:	ret    0x0
   1400184a3:	int3   
   1400184a4:	int3   
   1400184a5:	int3   
   1400184a6:	int3   
   1400184a7:	int3   
   1400184a8:	int3   
   1400184a9:	int3   
   1400184aa:	int3   
   1400184ab:	int3   
   1400184ac:	int3   
   1400184ad:	int3   
   1400184ae:	int3   
   1400184af:	int3   
   1400184b0:	mov    QWORD PTR [rsp+0x8],rcx
   1400184b5:	push   rbx
   1400184b6:	sub    rsp,0x30
   1400184ba:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400184c3:	mov    rbx,rcx
   1400184c6:	add    rcx,0x20
   1400184ca:	call   0x140017040
   1400184cf:	nop
   1400184d0:	cmp    QWORD PTR [rbx+0x18],0x10
   1400184d5:	jb     0x1400184df
   1400184d7:	mov    rcx,QWORD PTR [rbx]
   1400184da:	call   0x140030282
   1400184df:	mov    QWORD PTR [rbx+0x18],0xf
   1400184e7:	mov    QWORD PTR [rbx+0x10],0x0
   1400184ef:	mov    BYTE PTR [rbx],0x0
   1400184f2:	add    rsp,0x30
   1400184f6:	pop    rbx
   1400184f7:	ret    
   1400184f8:	int3   
   1400184f9:	int3   
   1400184fa:	int3   
   1400184fb:	int3   
   1400184fc:	int3   
   1400184fd:	int3   
   1400184fe:	int3   
   1400184ff:	int3   
   140018500:	lea    rax,[rip+0x23aa9]        # 0x14003bfb0
   140018507:	mov    QWORD PTR [rcx],rax
   14001850a:	ret    
   14001850b:	int3   
   14001850c:	int3   
   14001850d:	int3   
   14001850e:	int3   
   14001850f:	int3   
   140018510:	rex push rbx
   140018512:	sub    rsp,0x20
   140018516:	mov    rbx,rcx
   140018519:	mov    rcx,QWORD PTR [rcx]
   14001851c:	test   rcx,rcx
   14001851f:	je     0x140018532
   140018521:	mov    rax,QWORD PTR [rcx]
   140018524:	call   QWORD PTR [rax+0x20]
   140018527:	test   al,al
   140018529:	je     0x140018532
   14001852b:	mov    QWORD PTR [rbx],0x0
   140018532:	add    rsp,0x20
   140018536:	pop    rbx
   140018537:	ret    
   140018538:	int3   
   140018539:	int3   
   14001853a:	int3   
   14001853b:	int3   
   14001853c:	int3   
   14001853d:	int3   
   14001853e:	int3   
   14001853f:	int3   
   140018540:	ret    0x0
   140018543:	int3   
   140018544:	int3   
   140018545:	int3   
   140018546:	int3   
   140018547:	int3   
   140018548:	int3   
   140018549:	int3   
   14001854a:	int3   
   14001854b:	int3   
   14001854c:	int3   
   14001854d:	int3   
   14001854e:	int3   
   14001854f:	int3   
   140018550:	rex push rbx
   140018552:	sub    rsp,0x20
   140018556:	mov    rbx,QWORD PTR [rcx+0x8]
   14001855a:	test   rbx,rbx
   14001855d:	je     0x140018587
   14001855f:	lock dec DWORD PTR [rbx+0x8]
   140018563:	mov    QWORD PTR [rsp+0x30],rdi
   140018568:	jne    0x140018582
   14001856a:	mov    rax,QWORD PTR [rbx]
   14001856d:	mov    rcx,rbx
   140018570:	call   QWORD PTR [rax+0x8]
   140018573:	lock dec DWORD PTR [rbx+0xc]
   140018577:	jne    0x140018582
   140018579:	mov    rax,QWORD PTR [rbx]
   14001857c:	mov    rcx,rbx
   14001857f:	call   QWORD PTR [rax+0x10]
   140018582:	mov    rdi,QWORD PTR [rsp+0x30]
   140018587:	add    rsp,0x20
   14001858b:	pop    rbx
   14001858c:	ret    
   14001858d:	int3   
   14001858e:	int3   
   14001858f:	int3   
   140018590:	rex push rbx
   140018592:	sub    rsp,0x20
   140018596:	mov    rbx,QWORD PTR [rcx+0x8]
   14001859a:	test   rbx,rbx
   14001859d:	je     0x1400185c7
   14001859f:	lock dec DWORD PTR [rbx+0x8]
   1400185a3:	mov    QWORD PTR [rsp+0x30],rdi
   1400185a8:	jne    0x1400185c2
   1400185aa:	mov    rax,QWORD PTR [rbx]
   1400185ad:	mov    rcx,rbx
   1400185b0:	call   QWORD PTR [rax+0x8]
   1400185b3:	lock dec DWORD PTR [rbx+0xc]
   1400185b7:	jne    0x1400185c2
   1400185b9:	mov    rax,QWORD PTR [rbx]
   1400185bc:	mov    rcx,rbx
   1400185bf:	call   QWORD PTR [rax+0x10]
   1400185c2:	mov    rdi,QWORD PTR [rsp+0x30]
   1400185c7:	add    rsp,0x20
   1400185cb:	pop    rbx
   1400185cc:	ret    
   1400185cd:	int3   
   1400185ce:	int3   
   1400185cf:	int3   
   1400185d0:	rex push rbx
   1400185d2:	sub    rsp,0x20
   1400185d6:	mov    rbx,QWORD PTR [rcx+0x8]
   1400185da:	test   rbx,rbx
   1400185dd:	je     0x140018607
   1400185df:	lock dec DWORD PTR [rbx+0x8]
   1400185e3:	mov    QWORD PTR [rsp+0x30],rdi
   1400185e8:	jne    0x140018602
   1400185ea:	mov    rax,QWORD PTR [rbx]
   1400185ed:	mov    rcx,rbx
   1400185f0:	call   QWORD PTR [rax+0x8]
   1400185f3:	lock dec DWORD PTR [rbx+0xc]
   1400185f7:	jne    0x140018602
   1400185f9:	mov    rax,QWORD PTR [rbx]
   1400185fc:	mov    rcx,rbx
   1400185ff:	call   QWORD PTR [rax+0x10]
   140018602:	mov    rdi,QWORD PTR [rsp+0x30]
   140018607:	add    rsp,0x20
   14001860b:	pop    rbx
   14001860c:	ret    
   14001860d:	int3   
   14001860e:	int3   
   14001860f:	int3   
   140018610:	rex push rbx
   140018612:	sub    rsp,0x20
   140018616:	mov    rbx,QWORD PTR [rcx+0x8]
   14001861a:	test   rbx,rbx
   14001861d:	je     0x140018647
   14001861f:	lock dec DWORD PTR [rbx+0x8]
   140018623:	mov    QWORD PTR [rsp+0x30],rdi
   140018628:	jne    0x140018642
   14001862a:	mov    rax,QWORD PTR [rbx]
   14001862d:	mov    rcx,rbx
   140018630:	call   QWORD PTR [rax+0x8]
   140018633:	lock dec DWORD PTR [rbx+0xc]
   140018637:	jne    0x140018642
   140018639:	mov    rax,QWORD PTR [rbx]
   14001863c:	mov    rcx,rbx
   14001863f:	call   QWORD PTR [rax+0x10]
   140018642:	mov    rdi,QWORD PTR [rsp+0x30]
   140018647:	add    rsp,0x20
   14001864b:	pop    rbx
   14001864c:	ret    
   14001864d:	int3   
   14001864e:	int3   
   14001864f:	int3   
   140018650:	rex push rbx
   140018652:	sub    rsp,0x20
   140018656:	mov    rbx,QWORD PTR [rcx+0x8]
   14001865a:	test   rbx,rbx
   14001865d:	je     0x140018687
   14001865f:	lock dec DWORD PTR [rbx+0x8]
   140018663:	mov    QWORD PTR [rsp+0x30],rdi
   140018668:	jne    0x140018682
   14001866a:	mov    rax,QWORD PTR [rbx]
   14001866d:	mov    rcx,rbx
   140018670:	call   QWORD PTR [rax+0x8]
   140018673:	lock dec DWORD PTR [rbx+0xc]
   140018677:	jne    0x140018682
   140018679:	mov    rax,QWORD PTR [rbx]
   14001867c:	mov    rcx,rbx
   14001867f:	call   QWORD PTR [rax+0x10]
   140018682:	mov    rdi,QWORD PTR [rsp+0x30]
   140018687:	add    rsp,0x20
   14001868b:	pop    rbx
   14001868c:	ret    
   14001868d:	int3   
   14001868e:	int3   
   14001868f:	int3   
   140018690:	mov    rcx,QWORD PTR [rcx]
   140018693:	test   rcx,rcx
   140018696:	jne    0x140030282
   14001869c:	ret    
   14001869d:	int3   
   14001869e:	int3   
   14001869f:	int3   
   1400186a0:	lea    rax,[rip+0x222a1]        # 0x14003a948
   1400186a7:	mov    QWORD PTR [rcx],rax
   1400186aa:	ret    
   1400186ab:	int3   
   1400186ac:	int3   
   1400186ad:	int3   
   1400186ae:	int3   
   1400186af:	int3   
   1400186b0:	lea    rax,[rip+0x22291]        # 0x14003a948
   1400186b7:	mov    QWORD PTR [rcx],rax
   1400186ba:	ret    
   1400186bb:	int3   
   1400186bc:	int3   
   1400186bd:	int3   
   1400186be:	int3   
   1400186bf:	int3   
   1400186c0:	lea    rax,[rip+0x22281]        # 0x14003a948
   1400186c7:	mov    QWORD PTR [rcx],rax
   1400186ca:	ret    
   1400186cb:	int3   
   1400186cc:	int3   
   1400186cd:	int3   
   1400186ce:	int3   
   1400186cf:	int3   
   1400186d0:	lea    rax,[rip+0x22271]        # 0x14003a948
   1400186d7:	mov    QWORD PTR [rcx],rax
   1400186da:	ret    
   1400186db:	int3   
   1400186dc:	int3   
   1400186dd:	int3   
   1400186de:	int3   
   1400186df:	int3   
   1400186e0:	mov    QWORD PTR [rsp+0x8],rcx
   1400186e5:	push   rbx
   1400186e6:	sub    rsp,0x50
   1400186ea:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400186f3:	mov    rbx,rcx
   1400186f6:	lea    rax,[rip+0x261d3]        # 0x14003e8d0
   1400186fd:	mov    QWORD PTR [rcx],rax
   140018700:	lea    r9,[rcx+0xa8]
   140018707:	test   BYTE PTR [r9],0x1
   14001870b:	je     0x14001875b
   14001870d:	mov    eax,DWORD PTR [r9]
   140018710:	shr    eax,0x2
   140018713:	test   al,0x1
   140018715:	je     0x14001875b
   140018717:	mov    QWORD PTR [rsp+0x30],rcx
   14001871c:	mov    DWORD PTR [rsp+0x38],0x2
   140018724:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140018729:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   14001872f:	mov    QWORD PTR [rsp+0x30],rcx
   140018734:	mov    DWORD PTR [rsp+0x38],0x1
   14001873c:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140018741:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140018747:	lea    r8,[rcx+0x70]
   14001874b:	lea    rdx,[rsp+0x40]
   140018750:	lea    rcx,[rsp+0x30]
   140018755:	call   0x140008c10
   14001875a:	nop
   14001875b:	jmp    0x140018762
   14001875d:	mov    rbx,QWORD PTR [rsp+0x60]
   140018762:	mov    rcx,rbx
   140018765:	add    rsp,0x50
   140018769:	pop    rbx
   14001876a:	jmp    0x140018020
   14001876f:	int3   
   140018770:	mov    QWORD PTR [rsp+0x8],rcx
   140018775:	push   rbx
   140018776:	sub    rsp,0x50
   14001877a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140018783:	mov    rbx,rcx
   140018786:	lea    rax,[rip+0x264bb]        # 0x14003ec48
   14001878d:	mov    QWORD PTR [rcx],rax
   140018790:	lea    r9,[rcx+0xa8]
   140018797:	test   BYTE PTR [r9],0x1
   14001879b:	je     0x1400187eb
   14001879d:	mov    eax,DWORD PTR [r9]
   1400187a0:	shr    eax,0x2
   1400187a3:	test   al,0x1
   1400187a5:	je     0x1400187eb
   1400187a7:	mov    QWORD PTR [rsp+0x30],rcx
   1400187ac:	mov    DWORD PTR [rsp+0x38],0x2
   1400187b4:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   1400187b9:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   1400187bf:	mov    QWORD PTR [rsp+0x30],rcx
   1400187c4:	mov    DWORD PTR [rsp+0x38],0x1
   1400187cc:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   1400187d1:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   1400187d7:	lea    r8,[rcx+0x70]
   1400187db:	lea    rdx,[rsp+0x40]
   1400187e0:	lea    rcx,[rsp+0x30]
   1400187e5:	call   0x140008cf0
   1400187ea:	nop
   1400187eb:	jmp    0x1400187f2
   1400187ed:	mov    rbx,QWORD PTR [rsp+0x60]
   1400187f2:	mov    rcx,rbx
   1400187f5:	add    rsp,0x50
   1400187f9:	pop    rbx
   1400187fa:	jmp    0x1400180b0
   1400187ff:	int3   
   140018800:	mov    QWORD PTR [rsp+0x8],rcx
   140018805:	push   rbx
   140018806:	sub    rsp,0x50
   14001880a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140018813:	mov    rbx,rcx
   140018816:	lea    rax,[rip+0x26abb]        # 0x14003f2d8
   14001881d:	mov    QWORD PTR [rcx],rax
   140018820:	lea    r9,[rcx+0x98]
   140018827:	test   BYTE PTR [r9],0x1
   14001882b:	je     0x14001887b
   14001882d:	mov    eax,DWORD PTR [r9]
   140018830:	shr    eax,0x2
   140018833:	test   al,0x1
   140018835:	je     0x14001887b
   140018837:	mov    QWORD PTR [rsp+0x30],rcx
   14001883c:	mov    DWORD PTR [rsp+0x38],0x2
   140018844:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140018849:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   14001884f:	mov    QWORD PTR [rsp+0x30],rcx
   140018854:	mov    DWORD PTR [rsp+0x38],0x1
   14001885c:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140018861:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140018867:	lea    r8,[rcx+0x70]
   14001886b:	lea    rdx,[rsp+0x40]
   140018870:	lea    rcx,[rsp+0x30]
   140018875:	call   0x140008d90
   14001887a:	nop
   14001887b:	jmp    0x140018882
   14001887d:	mov    rbx,QWORD PTR [rsp+0x60]
   140018882:	mov    rcx,QWORD PTR [rbx+0x80]
   140018889:	test   rcx,rcx
   14001888c:	je     0x140018893
   14001888e:	call   0x140030282
   140018893:	cmp    BYTE PTR [rbx+0x71],0x0
   140018897:	je     0x14001889d
   140018899:	mov    BYTE PTR [rbx+0x71],0x0
   14001889d:	mov    rcx,rbx
   1400188a0:	add    rsp,0x50
   1400188a4:	pop    rbx
   1400188a5:	rex.W jmp QWORD PTR [rip+0x1d944]        # 0x1400361f0
   1400188ac:	int3   
   1400188ad:	int3   
   1400188ae:	int3   
   1400188af:	int3   
   1400188b0:	mov    QWORD PTR [rsp+0x8],rcx
   1400188b5:	push   rbx
   1400188b6:	sub    rsp,0x50
   1400188ba:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400188c3:	mov    rbx,rcx
   1400188c6:	lea    rax,[rip+0x261b3]        # 0x14003ea80
   1400188cd:	mov    QWORD PTR [rcx],rax
   1400188d0:	lea    r9,[rcx+0xa0]
   1400188d7:	test   BYTE PTR [r9],0x1
   1400188db:	je     0x14001892b
   1400188dd:	mov    eax,DWORD PTR [r9]
   1400188e0:	shr    eax,0x2
   1400188e3:	test   al,0x1
   1400188e5:	je     0x14001892b
   1400188e7:	mov    QWORD PTR [rsp+0x30],rcx
   1400188ec:	mov    DWORD PTR [rsp+0x38],0x2
   1400188f4:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   1400188f9:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   1400188ff:	mov    QWORD PTR [rsp+0x30],rcx
   140018904:	mov    DWORD PTR [rsp+0x38],0x1
   14001890c:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140018911:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140018917:	lea    r8,[rcx+0x70]
   14001891b:	lea    rdx,[rsp+0x40]
   140018920:	lea    rcx,[rsp+0x30]
   140018925:	call   0x140008e30
   14001892a:	nop
   14001892b:	jmp    0x140018932
   14001892d:	mov    rbx,QWORD PTR [rsp+0x60]
   140018932:	mov    rcx,QWORD PTR [rbx+0x88]
   140018939:	test   rcx,rcx
   14001893c:	je     0x140018943
   14001893e:	call   0x140030282
   140018943:	cmp    BYTE PTR [rbx+0x78],0x0
   140018947:	je     0x14001894d
   140018949:	mov    BYTE PTR [rbx+0x78],0x0
   14001894d:	mov    rcx,rbx
   140018950:	add    rsp,0x50
   140018954:	pop    rbx
   140018955:	rex.W jmp QWORD PTR [rip+0x1d894]        # 0x1400361f0
   14001895c:	int3   
   14001895d:	int3   
   14001895e:	int3   
   14001895f:	int3   
   140018960:	sub    rsp,0x28
   140018964:	mov    rcx,QWORD PTR [rcx]
   140018967:	test   rcx,rcx
   14001896a:	je     0x140018989
   14001896c:	mov    rax,QWORD PTR [rcx]
   14001896f:	call   QWORD PTR [rax+0x10]
   140018972:	test   rax,rax
   140018975:	je     0x140018989
   140018977:	mov    r8,QWORD PTR [rax]
   14001897a:	mov    edx,0x1
   14001897f:	mov    rcx,rax
   140018982:	add    rsp,0x28
   140018986:	rex.WB jmp QWORD PTR [r8]
   140018989:	add    rsp,0x28
   14001898d:	ret    
   14001898e:	int3   
   14001898f:	int3   
   140018990:	sub    rsp,0x28
   140018994:	mov    rcx,QWORD PTR [rcx]
   140018997:	test   rcx,rcx
   14001899a:	je     0x1400189b9
   14001899c:	mov    rax,QWORD PTR [rcx]
   14001899f:	call   QWORD PTR [rax+0x10]
   1400189a2:	test   rax,rax
   1400189a5:	je     0x1400189b9
   1400189a7:	mov    r8,QWORD PTR [rax]
   1400189aa:	mov    edx,0x1
   1400189af:	mov    rcx,rax
   1400189b2:	add    rsp,0x28
   1400189b6:	rex.WB jmp QWORD PTR [r8]
   1400189b9:	add    rsp,0x28
   1400189bd:	ret    
   1400189be:	int3   
   1400189bf:	int3   
   1400189c0:	sub    rsp,0x28
   1400189c4:	mov    rcx,QWORD PTR [rcx]
   1400189c7:	test   rcx,rcx
   1400189ca:	je     0x1400189e9
   1400189cc:	mov    rax,QWORD PTR [rcx]
   1400189cf:	call   QWORD PTR [rax+0x10]
   1400189d2:	test   rax,rax
   1400189d5:	je     0x1400189e9
   1400189d7:	mov    r8,QWORD PTR [rax]
   1400189da:	mov    edx,0x1
   1400189df:	mov    rcx,rax
   1400189e2:	add    rsp,0x28
   1400189e6:	rex.WB jmp QWORD PTR [r8]
   1400189e9:	add    rsp,0x28
   1400189ed:	ret    
   1400189ee:	int3   
   1400189ef:	int3   
   1400189f0:	sub    rsp,0x28
   1400189f4:	mov    rcx,QWORD PTR [rcx]
   1400189f7:	test   rcx,rcx
   1400189fa:	je     0x140018a19
   1400189fc:	mov    rax,QWORD PTR [rcx]
   1400189ff:	call   QWORD PTR [rax+0x10]
   140018a02:	test   rax,rax
   140018a05:	je     0x140018a19
   140018a07:	mov    r8,QWORD PTR [rax]
   140018a0a:	mov    edx,0x1
   140018a0f:	mov    rcx,rax
   140018a12:	add    rsp,0x28
   140018a16:	rex.WB jmp QWORD PTR [r8]
   140018a19:	add    rsp,0x28
   140018a1d:	ret    
   140018a1e:	int3   
   140018a1f:	int3   
   140018a20:	sub    rsp,0x28
   140018a24:	mov    rcx,QWORD PTR [rcx]
   140018a27:	test   rcx,rcx
   140018a2a:	je     0x140018a49
   140018a2c:	mov    rax,QWORD PTR [rcx]
   140018a2f:	call   QWORD PTR [rax+0x10]
   140018a32:	test   rax,rax
   140018a35:	je     0x140018a49
   140018a37:	mov    r8,QWORD PTR [rax]
   140018a3a:	mov    edx,0x1
   140018a3f:	mov    rcx,rax
   140018a42:	add    rsp,0x28
   140018a46:	rex.WB jmp QWORD PTR [r8]
   140018a49:	add    rsp,0x28
   140018a4d:	ret    
   140018a4e:	int3   
   140018a4f:	int3   
   140018a50:	sub    rsp,0x28
   140018a54:	mov    rcx,QWORD PTR [rcx]
   140018a57:	test   rcx,rcx
   140018a5a:	je     0x140018a79
   140018a5c:	mov    rax,QWORD PTR [rcx]
   140018a5f:	call   QWORD PTR [rax+0x10]
   140018a62:	test   rax,rax
   140018a65:	je     0x140018a79
   140018a67:	mov    r8,QWORD PTR [rax]
   140018a6a:	mov    edx,0x1
   140018a6f:	mov    rcx,rax
   140018a72:	add    rsp,0x28
   140018a76:	rex.WB jmp QWORD PTR [r8]
   140018a79:	add    rsp,0x28
   140018a7d:	ret    
   140018a7e:	int3   
   140018a7f:	int3   
   140018a80:	rex push rbx
   140018a82:	sub    rsp,0x20
   140018a86:	cmp    QWORD PTR [rcx+0x18],0x10
   140018a8b:	mov    rbx,rcx
   140018a8e:	jb     0x140018a98
   140018a90:	mov    rcx,QWORD PTR [rcx]
   140018a93:	call   0x140030282
   140018a98:	mov    QWORD PTR [rbx+0x18],0xf
   140018aa0:	mov    QWORD PTR [rbx+0x10],0x0
   140018aa8:	mov    BYTE PTR [rbx],0x0
   140018aab:	add    rsp,0x20
   140018aaf:	pop    rbx
   140018ab0:	ret    
   140018ab1:	int3   
   140018ab2:	int3   
   140018ab3:	int3   
   140018ab4:	int3   
   140018ab5:	int3   
   140018ab6:	int3   
   140018ab7:	int3   
   140018ab8:	int3   
   140018ab9:	int3   
   140018aba:	int3   
   140018abb:	int3   
   140018abc:	int3   
   140018abd:	int3   
   140018abe:	int3   
   140018abf:	int3   
   140018ac0:	rex push rbx
   140018ac2:	sub    rsp,0x20
   140018ac6:	mov    rbx,QWORD PTR [rcx+0x8]
   140018aca:	test   rbx,rbx
   140018acd:	je     0x140018af7
   140018acf:	lock dec DWORD PTR [rbx+0x8]
   140018ad3:	mov    QWORD PTR [rsp+0x30],rdi
   140018ad8:	jne    0x140018af2
   140018ada:	mov    rax,QWORD PTR [rbx]
   140018add:	mov    rcx,rbx
   140018ae0:	call   QWORD PTR [rax+0x8]
   140018ae3:	lock dec DWORD PTR [rbx+0xc]
   140018ae7:	jne    0x140018af2
   140018ae9:	mov    rax,QWORD PTR [rbx]
   140018aec:	mov    rcx,rbx
   140018aef:	call   QWORD PTR [rax+0x10]
   140018af2:	mov    rdi,QWORD PTR [rsp+0x30]
   140018af7:	add    rsp,0x20
   140018afb:	pop    rbx
   140018afc:	ret    
   140018afd:	int3   
   140018afe:	int3   
   140018aff:	int3   
   140018b00:	rex push rbx
   140018b02:	sub    rsp,0x20
   140018b06:	mov    rbx,QWORD PTR [rcx+0x8]
   140018b0a:	test   rbx,rbx
   140018b0d:	je     0x140018b37
   140018b0f:	lock dec DWORD PTR [rbx+0x8]
   140018b13:	mov    QWORD PTR [rsp+0x30],rdi
   140018b18:	jne    0x140018b32
   140018b1a:	mov    rax,QWORD PTR [rbx]
   140018b1d:	mov    rcx,rbx
   140018b20:	call   QWORD PTR [rax+0x8]
   140018b23:	lock dec DWORD PTR [rbx+0xc]
   140018b27:	jne    0x140018b32
   140018b29:	mov    rax,QWORD PTR [rbx]
   140018b2c:	mov    rcx,rbx
   140018b2f:	call   QWORD PTR [rax+0x10]
   140018b32:	mov    rdi,QWORD PTR [rsp+0x30]
   140018b37:	add    rsp,0x20
   140018b3b:	pop    rbx
   140018b3c:	ret    
   140018b3d:	int3   
   140018b3e:	int3   
   140018b3f:	int3   
   140018b40:	rex push rbx
   140018b42:	sub    rsp,0x20
   140018b46:	cmp    QWORD PTR [rcx+0x80],0x10
   140018b4e:	mov    rbx,rcx
   140018b51:	jb     0x140018b5c
   140018b53:	mov    rcx,QWORD PTR [rcx+0x68]
   140018b57:	call   0x140030282
   140018b5c:	mov    QWORD PTR [rbx+0x80],0xf
   140018b67:	mov    QWORD PTR [rbx+0x78],0x0
   140018b6f:	mov    BYTE PTR [rbx+0x68],0x0
   140018b73:	cmp    QWORD PTR [rbx+0x38],0x10
   140018b78:	jb     0x140018b83
   140018b7a:	mov    rcx,QWORD PTR [rbx+0x20]
   140018b7e:	call   0x140030282
   140018b83:	mov    QWORD PTR [rbx+0x38],0xf
   140018b8b:	mov    QWORD PTR [rbx+0x30],0x0
   140018b93:	mov    BYTE PTR [rbx+0x20],0x0
   140018b97:	cmp    QWORD PTR [rbx+0x18],0x10
   140018b9c:	jb     0x140018ba6
   140018b9e:	mov    rcx,QWORD PTR [rbx]
   140018ba1:	call   0x140030282
   140018ba6:	mov    QWORD PTR [rbx+0x18],0xf
   140018bae:	mov    QWORD PTR [rbx+0x10],0x0
   140018bb6:	mov    BYTE PTR [rbx],0x0
   140018bb9:	add    rsp,0x20
   140018bbd:	pop    rbx
   140018bbe:	ret    
   140018bbf:	int3   
   140018bc0:	rex push rbx
   140018bc2:	sub    rsp,0x20
   140018bc6:	cmp    QWORD PTR [rcx+0x48],0x10
   140018bcb:	mov    rbx,rcx
   140018bce:	jb     0x140018bd9
   140018bd0:	mov    rcx,QWORD PTR [rcx+0x30]
   140018bd4:	call   0x140030282
   140018bd9:	mov    QWORD PTR [rbx+0x48],0xf
   140018be1:	mov    QWORD PTR [rbx+0x40],0x0
   140018be9:	mov    BYTE PTR [rbx+0x30],0x0
   140018bed:	cmp    QWORD PTR [rbx+0x28],0x10
   140018bf2:	jb     0x140018bfd
   140018bf4:	mov    rcx,QWORD PTR [rbx+0x10]
   140018bf8:	call   0x140030282
   140018bfd:	mov    QWORD PTR [rbx+0x28],0xf
   140018c05:	mov    QWORD PTR [rbx+0x20],0x0
   140018c0d:	mov    BYTE PTR [rbx+0x10],0x0
   140018c11:	add    rsp,0x20
   140018c15:	pop    rbx
   140018c16:	ret    
   140018c17:	int3   
   140018c18:	int3   
   140018c19:	int3   
   140018c1a:	int3   
   140018c1b:	int3   
   140018c1c:	int3   
   140018c1d:	int3   
   140018c1e:	int3   
   140018c1f:	int3   
   140018c20:	mov    QWORD PTR [rsp+0x8],rcx
   140018c25:	push   rdi
   140018c26:	sub    rsp,0x30
   140018c2a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140018c33:	mov    QWORD PTR [rsp+0x48],rbx
   140018c38:	mov    rbx,rcx
   140018c3b:	mov    rax,QWORD PTR [rcx+0x90]
   140018c42:	xor    edi,edi
   140018c44:	test   rax,rax
   140018c47:	je     0x140018c71
   140018c49:	test   al,0x1
   140018c4b:	jne    0x140018c6a
   140018c4d:	add    rcx,0x98
   140018c54:	and    rax,0xfffffffffffffffe
   140018c58:	mov    r9,QWORD PTR [rax]
   140018c5b:	test   r9,r9
   140018c5e:	je     0x140018c6a
   140018c60:	lea    r8d,[rdi+0x2]
   140018c64:	mov    rdx,rcx
   140018c67:	call   r9
   140018c6a:	mov    QWORD PTR [rbx+0x90],rdi
   140018c71:	cmp    QWORD PTR [rbx+0x80],0x10
   140018c79:	jb     0x140018c84
   140018c7b:	mov    rcx,QWORD PTR [rbx+0x68]
   140018c7f:	call   0x140030282
   140018c84:	mov    QWORD PTR [rbx+0x80],0xf
   140018c8f:	mov    QWORD PTR [rbx+0x78],rdi
   140018c93:	mov    BYTE PTR [rbx+0x68],0x0
   140018c97:	mov    rcx,QWORD PTR [rbx+0x60]
   140018c9b:	test   rcx,rcx
   140018c9e:	je     0x140018cab
   140018ca0:	mov    rax,QWORD PTR [rcx]
   140018ca3:	mov    edx,0x1
   140018ca8:	call   QWORD PTR [rax]
   140018caa:	nop
   140018cab:	cmp    QWORD PTR [rbx+0x58],0x10
   140018cb0:	jb     0x140018cbb
   140018cb2:	mov    rcx,QWORD PTR [rbx+0x40]
   140018cb6:	call   0x140030282
   140018cbb:	mov    QWORD PTR [rbx+0x58],0xf
   140018cc3:	mov    QWORD PTR [rbx+0x50],rdi
   140018cc7:	mov    BYTE PTR [rbx+0x40],0x0
   140018ccb:	mov    rcx,QWORD PTR [rbx+0x38]
   140018ccf:	test   rcx,rcx
   140018cd2:	je     0x140018cdf
   140018cd4:	mov    rax,QWORD PTR [rcx]
   140018cd7:	mov    edx,0x1
   140018cdc:	call   QWORD PTR [rax]
   140018cde:	nop
   140018cdf:	cmp    QWORD PTR [rbx+0x30],0x10
   140018ce4:	jb     0x140018cef
   140018ce6:	mov    rcx,QWORD PTR [rbx+0x18]
   140018cea:	call   0x140030282
   140018cef:	mov    QWORD PTR [rbx+0x30],0xf
   140018cf7:	mov    QWORD PTR [rbx+0x28],rdi
   140018cfb:	mov    BYTE PTR [rbx+0x18],0x0
   140018cff:	lea    rax,[rip+0x21c2a]        # 0x14003a930
   140018d06:	mov    QWORD PTR [rbx+0x8],rax
   140018d0a:	mov    rax,QWORD PTR [rip+0x1d9a7]        # 0x1400366b8
   140018d11:	mov    QWORD PTR [rbx],rax
   140018d14:	mov    rbx,QWORD PTR [rsp+0x48]
   140018d19:	add    rsp,0x30
   140018d1d:	pop    rdi
   140018d1e:	ret    
   140018d1f:	int3   
   140018d20:	rex push rbx
   140018d22:	sub    rsp,0x20
   140018d26:	mov    rbx,rcx
   140018d29:	mov    rcx,QWORD PTR [rcx]
   140018d2c:	test   rcx,rcx
   140018d2f:	je     0x140018d5a
   140018d31:	movzx  r9d,BYTE PTR [rsp+0x30]
   140018d37:	mov    rdx,QWORD PTR [rbx+0x8]
   140018d3b:	lea    r8,[rsp+0x30]
   140018d40:	call   0x1400042e0
   140018d45:	mov    rcx,QWORD PTR [rbx]
   140018d48:	call   0x140030282
   140018d4d:	xor    eax,eax
   140018d4f:	mov    QWORD PTR [rbx],rax
   140018d52:	mov    QWORD PTR [rbx+0x8],rax
   140018d56:	mov    QWORD PTR [rbx+0x10],rax
   140018d5a:	add    rsp,0x20
   140018d5e:	pop    rbx
   140018d5f:	ret    
   140018d60:	jmp    0x14001d9d0
   140018d65:	int3   
   140018d66:	int3   
   140018d67:	int3   
   140018d68:	int3   
   140018d69:	int3   
   140018d6a:	int3   
   140018d6b:	int3   
   140018d6c:	int3   
   140018d6d:	int3   
   140018d6e:	int3   
   140018d6f:	int3   
   140018d70:	rex push rbx
   140018d72:	sub    rsp,0x20
   140018d76:	cmp    QWORD PTR [rcx+0x28],0x10
   140018d7b:	mov    rbx,rcx
   140018d7e:	jb     0x140018d89
   140018d80:	mov    rcx,QWORD PTR [rcx+0x10]
   140018d84:	call   0x140030282
   140018d89:	mov    QWORD PTR [rbx+0x28],0xf
   140018d91:	mov    QWORD PTR [rbx+0x20],0x0
   140018d99:	mov    BYTE PTR [rbx+0x10],0x0
   140018d9d:	add    rsp,0x20
   140018da1:	pop    rbx
   140018da2:	ret    
   140018da3:	int3   
   140018da4:	int3   
   140018da5:	int3   
   140018da6:	int3   
   140018da7:	int3   
   140018da8:	int3   
   140018da9:	int3   
   140018daa:	int3   
   140018dab:	int3   
   140018dac:	int3   
   140018dad:	int3   
   140018dae:	int3   
   140018daf:	int3   
   140018db0:	mov    QWORD PTR [rsp+0x8],rcx
   140018db5:	push   rbx
   140018db6:	sub    rsp,0x30
   140018dba:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140018dc3:	mov    rbx,rcx
   140018dc6:	xor    r8d,r8d
   140018dc9:	mov    dl,0x1
   140018dcb:	call   QWORD PTR [rip+0x1d7d7]        # 0x1400365a8
   140018dd1:	nop
   140018dd2:	mov    rcx,rbx
   140018dd5:	add    rsp,0x30
   140018dd9:	pop    rbx
   140018dda:	rex.W jmp QWORD PTR [rip+0x1d817]        # 0x1400365f8
   140018de1:	int3   
   140018de2:	int3   
   140018de3:	int3   
   140018de4:	int3   
   140018de5:	int3   
   140018de6:	int3   
   140018de7:	int3   
   140018de8:	int3   
   140018de9:	int3   
   140018dea:	int3   
   140018deb:	int3   
   140018dec:	int3   
   140018ded:	int3   
   140018dee:	int3   
   140018def:	int3   
   140018df0:	mov    QWORD PTR [rsp+0x8],rcx
   140018df5:	push   rbx
   140018df6:	sub    rsp,0x30
   140018dfa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140018e03:	mov    rbx,rcx
   140018e06:	xor    r8d,r8d
   140018e09:	xor    edx,edx
   140018e0b:	call   QWORD PTR [rip+0x1d797]        # 0x1400365a8
   140018e11:	nop
   140018e12:	mov    rcx,rbx
   140018e15:	add    rsp,0x30
   140018e19:	pop    rbx
   140018e1a:	rex.W jmp QWORD PTR [rip+0x1d7d7]        # 0x1400365f8
   140018e21:	int3   
   140018e22:	int3   
   140018e23:	int3   
   140018e24:	int3   
   140018e25:	int3   
   140018e26:	int3   
   140018e27:	int3   
   140018e28:	int3   
   140018e29:	int3   
   140018e2a:	int3   
   140018e2b:	int3   
   140018e2c:	int3   
   140018e2d:	int3   
   140018e2e:	int3   
   140018e2f:	int3   
   140018e30:	mov    QWORD PTR [rsp+0x8],rcx
   140018e35:	push   rbx
   140018e36:	sub    rsp,0x30
   140018e3a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140018e43:	mov    rbx,rcx
   140018e46:	xor    r8d,r8d
   140018e49:	mov    edx,0x2080
   140018e4e:	call   QWORD PTR [rip+0x1d704]        # 0x140036558
   140018e54:	nop
   140018e55:	mov    rcx,rbx
   140018e58:	add    rsp,0x30
   140018e5c:	pop    rbx
   140018e5d:	rex.W jmp QWORD PTR [rip+0x1d6d4]        # 0x140036538
   140018e64:	int3   
   140018e65:	int3   
   140018e66:	int3   
   140018e67:	int3   
   140018e68:	int3   
   140018e69:	int3   
   140018e6a:	int3   
   140018e6b:	int3   
   140018e6c:	int3   
   140018e6d:	int3   
   140018e6e:	int3   
   140018e6f:	int3   
   140018e70:	lea    rax,[rip+0x21801]        # 0x14003a678
   140018e77:	mov    QWORD PTR [rcx],rax
   140018e7a:	ret    
   140018e7b:	int3   
   140018e7c:	int3   
   140018e7d:	int3   
   140018e7e:	int3   
   140018e7f:	int3   
   140018e80:	lea    rax,[rip+0x217f1]        # 0x14003a678
   140018e87:	mov    QWORD PTR [rcx],rax
   140018e8a:	ret    
   140018e8b:	int3   
   140018e8c:	int3   
   140018e8d:	int3   
   140018e8e:	int3   
   140018e8f:	int3   
   140018e90:	mov    rdx,QWORD PTR [rcx]
   140018e93:	mov    rax,QWORD PTR [rdx]
   140018e96:	movsxd rcx,DWORD PTR [rax+0x4]
   140018e9a:	mov    rcx,QWORD PTR [rcx+rdx*1+0x48]
   140018e9f:	test   rcx,rcx
   140018ea2:	je     0x140018eab
   140018ea4:	mov    rax,QWORD PTR [rcx]
   140018ea7:	rex.W jmp QWORD PTR [rax+0x10]
   140018eab:	ret    
   140018eac:	int3   
   140018ead:	int3   
   140018eae:	int3   
   140018eaf:	int3   
   140018eb0:	rex.W jmp QWORD PTR [rip+0x1d589]        # 0x140036440
   140018eb7:	int3   
   140018eb8:	int3   
   140018eb9:	int3   
   140018eba:	int3   
   140018ebb:	int3   
   140018ebc:	int3   
   140018ebd:	int3   
   140018ebe:	int3   
   140018ebf:	int3   
   140018ec0:	lea    rax,[rip+0x217b1]        # 0x14003a678
   140018ec7:	mov    QWORD PTR [rcx],rax
   140018eca:	ret    
   140018ecb:	int3   
   140018ecc:	int3   
   140018ecd:	int3   
   140018ece:	int3   
   140018ecf:	int3   
   140018ed0:	mov    rcx,QWORD PTR [rcx]
   140018ed3:	test   rcx,rcx
   140018ed6:	je     0x140018ee3
   140018ed8:	mov    rax,QWORD PTR [rcx]
   140018edb:	mov    edx,0x1
   140018ee0:	rex.W jmp QWORD PTR [rax]
   140018ee3:	ret    
   140018ee4:	int3   
   140018ee5:	int3   
   140018ee6:	int3   
   140018ee7:	int3   
   140018ee8:	int3   
   140018ee9:	int3   
   140018eea:	int3   
   140018eeb:	int3   
   140018eec:	int3   
   140018eed:	int3   
   140018eee:	int3   
   140018eef:	int3   
   140018ef0:	rex.W jmp QWORD PTR [rip+0x1d549]        # 0x140036440
   140018ef7:	int3   
   140018ef8:	int3   
   140018ef9:	int3   
   140018efa:	int3   
   140018efb:	int3   
   140018efc:	int3   
   140018efd:	int3   
   140018efe:	int3   
   140018eff:	int3   
   140018f00:	rex.W jmp QWORD PTR [rip+0x1d539]        # 0x140036440
   140018f07:	int3   
   140018f08:	int3   
   140018f09:	int3   
   140018f0a:	int3   
   140018f0b:	int3   
   140018f0c:	int3   
   140018f0d:	int3   
   140018f0e:	int3   
   140018f0f:	int3   
   140018f10:	lea    rax,[rip+0x219a9]        # 0x14003a8c0
   140018f17:	mov    QWORD PTR [rcx],rax
   140018f1a:	rex.W jmp QWORD PTR [rip+0x1d4f7]        # 0x140036418
   140018f21:	int3   
   140018f22:	int3   
   140018f23:	int3   
   140018f24:	int3   
   140018f25:	int3   
   140018f26:	int3   
   140018f27:	int3   
   140018f28:	int3   
   140018f29:	int3   
   140018f2a:	int3   
   140018f2b:	int3   
   140018f2c:	int3   
   140018f2d:	int3   
   140018f2e:	int3   
   140018f2f:	int3   
   140018f30:	rex.W jmp QWORD PTR [rip+0x1d509]        # 0x140036440
   140018f37:	int3   
   140018f38:	int3   
   140018f39:	int3   
   140018f3a:	int3   
   140018f3b:	int3   
   140018f3c:	int3   
   140018f3d:	int3   
   140018f3e:	int3   
   140018f3f:	int3   
   140018f40:	mov    QWORD PTR [rsp+0x8],rcx
   140018f45:	push   rdi
   140018f46:	sub    rsp,0x30
   140018f4a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140018f53:	mov    QWORD PTR [rsp+0x48],rbx
   140018f58:	mov    rdi,rcx
   140018f5b:	call   0x140020620
   140018f60:	nop
   140018f61:	jmp    0x140018f68
   140018f63:	mov    rdi,QWORD PTR [rsp+0x40]
   140018f68:	mov    rcx,rdi
   140018f6b:	call   0x14002a640
   140018f70:	nop
   140018f71:	jmp    0x140018f78
   140018f73:	mov    rdi,QWORD PTR [rsp+0x40]
   140018f78:	mov    rax,QWORD PTR [rdi]
   140018f7b:	mov    rcx,QWORD PTR [rax]
   140018f7e:	mov    QWORD PTR [rax],rax
   140018f81:	mov    rax,QWORD PTR [rdi]
   140018f84:	mov    QWORD PTR [rax+0x8],rax
   140018f88:	mov    QWORD PTR [rdi+0x8],0x0
   140018f90:	cmp    rcx,QWORD PTR [rdi]
   140018f93:	je     0x140018fa5
   140018f95:	mov    rbx,QWORD PTR [rcx]
   140018f98:	call   0x140030282
   140018f9d:	mov    rcx,rbx
   140018fa0:	cmp    rbx,QWORD PTR [rdi]
   140018fa3:	jne    0x140018f95
   140018fa5:	mov    rcx,QWORD PTR [rdi]
   140018fa8:	mov    rbx,QWORD PTR [rsp+0x48]
   140018fad:	add    rsp,0x30
   140018fb1:	pop    rdi
   140018fb2:	jmp    0x140030282
   140018fb7:	int3   
   140018fb8:	int3   
   140018fb9:	int3   
   140018fba:	int3   
   140018fbb:	int3   
   140018fbc:	int3   
   140018fbd:	int3   
   140018fbe:	int3   
   140018fbf:	int3   
   140018fc0:	lea    rax,[rip+0x21881]        # 0x14003a848
   140018fc7:	mov    QWORD PTR [rcx],rax
   140018fca:	ret    
   140018fcb:	int3   
   140018fcc:	int3   
   140018fcd:	int3   
   140018fce:	int3   
   140018fcf:	int3   
   140018fd0:	rex.W jmp QWORD PTR [rip+0x1d469]        # 0x140036440
   140018fd7:	int3   
   140018fd8:	int3   
   140018fd9:	int3   
   140018fda:	int3   
   140018fdb:	int3   
   140018fdc:	int3   
   140018fdd:	int3   
   140018fde:	int3   
   140018fdf:	int3   
   140018fe0:	lea    rax,[rip+0x21691]        # 0x14003a678
   140018fe7:	mov    QWORD PTR [rcx],rax
   140018fea:	ret    
   140018feb:	int3   
   140018fec:	int3   
   140018fed:	int3   
   140018fee:	int3   
   140018fef:	int3   
   140018ff0:	rex push rbx
   140018ff2:	sub    rsp,0x20
   140018ff6:	lea    rax,[rip+0x2183b]        # 0x14003a838
   140018ffd:	mov    rbx,rcx
   140019000:	mov    QWORD PTR [rcx],rax
   140019003:	mov    rcx,QWORD PTR [rcx+0x8]
   140019007:	test   rcx,rcx
   14001900a:	je     0x14001901e
   14001900c:	mov    rax,QWORD PTR [rcx]
   14001900f:	call   QWORD PTR [rax+0x20]
   140019012:	test   al,al
   140019014:	je     0x14001901e
   140019016:	mov    QWORD PTR [rbx+0x8],0x0
   14001901e:	add    rsp,0x20
   140019022:	pop    rbx
   140019023:	ret    
   140019024:	int3   
   140019025:	int3   
   140019026:	int3   
   140019027:	int3   
   140019028:	int3   
   140019029:	int3   
   14001902a:	int3   
   14001902b:	int3   
   14001902c:	int3   
   14001902d:	int3   
   14001902e:	int3   
   14001902f:	int3   
   140019030:	rex.W jmp QWORD PTR [rip+0x1d409]        # 0x140036440
   140019037:	int3   
   140019038:	int3   
   140019039:	int3   
   14001903a:	int3   
   14001903b:	int3   
   14001903c:	int3   
   14001903d:	int3   
   14001903e:	int3   
   14001903f:	int3   
   140019040:	rex push rbx
   140019042:	sub    rsp,0x20
   140019046:	lea    rax,[rip+0x21973]        # 0x14003a9c0
   14001904d:	mov    rbx,rcx
   140019050:	mov    QWORD PTR [rcx],rax
   140019053:	cmp    QWORD PTR [rcx+0x50],0x10
   140019058:	jb     0x140019063
   14001905a:	mov    rcx,QWORD PTR [rcx+0x38]
   14001905e:	call   0x140030282
   140019063:	mov    QWORD PTR [rbx+0x50],0xf
   14001906b:	mov    QWORD PTR [rbx+0x48],0x0
   140019073:	mov    BYTE PTR [rbx+0x38],0x0
   140019077:	cmp    QWORD PTR [rbx+0x30],0x10
   14001907c:	jb     0x140019087
   14001907e:	mov    rcx,QWORD PTR [rbx+0x18]
   140019082:	call   0x140030282
   140019087:	mov    QWORD PTR [rbx+0x30],0xf
   14001908f:	mov    QWORD PTR [rbx+0x28],0x0
   140019097:	lea    rax,[rip+0x218da]        # 0x14003a978
   14001909e:	mov    BYTE PTR [rbx+0x18],0x0
   1400190a2:	mov    rcx,rbx
   1400190a5:	mov    QWORD PTR [rbx],rax
   1400190a8:	add    rsp,0x20
   1400190ac:	pop    rbx
   1400190ad:	rex.W jmp QWORD PTR [rip+0x1d38c]        # 0x140036440
   1400190b4:	int3   
   1400190b5:	int3   
   1400190b6:	int3   
   1400190b7:	int3   
   1400190b8:	int3   
   1400190b9:	int3   
   1400190ba:	int3   
   1400190bb:	int3   
   1400190bc:	int3   
   1400190bd:	int3   
   1400190be:	int3   
   1400190bf:	int3   
   1400190c0:	mov    QWORD PTR [rsp+0x8],rcx
   1400190c5:	push   rbx
   1400190c6:	sub    rsp,0x30
   1400190ca:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400190d3:	mov    rbx,rcx
   1400190d6:	mov    rcx,QWORD PTR [rcx+0x20]
   1400190da:	test   rcx,rcx
   1400190dd:	je     0x1400190e5
   1400190df:	call   0x140030282
   1400190e4:	nop
   1400190e5:	xor    r8d,r8d
   1400190e8:	mov    dl,0x1
   1400190ea:	mov    rcx,rbx
   1400190ed:	call   QWORD PTR [rip+0x1d4b5]        # 0x1400365a8
   1400190f3:	nop
   1400190f4:	mov    rcx,rbx
   1400190f7:	add    rsp,0x30
   1400190fb:	pop    rbx
   1400190fc:	rex.W jmp QWORD PTR [rip+0x1d4f5]        # 0x1400365f8
   140019103:	int3   
   140019104:	int3   
   140019105:	int3   
   140019106:	int3   
   140019107:	int3   
   140019108:	int3   
   140019109:	int3   
   14001910a:	int3   
   14001910b:	int3   
   14001910c:	int3   
   14001910d:	int3   
   14001910e:	int3   
   14001910f:	int3   
   140019110:	mov    QWORD PTR [rsp+0x8],rcx
   140019115:	push   rbx
   140019116:	sub    rsp,0x30
   14001911a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140019123:	mov    rbx,rcx
   140019126:	mov    rcx,QWORD PTR [rcx+0x28]
   14001912a:	test   rcx,rcx
   14001912d:	je     0x140019135
   14001912f:	call   0x140030282
   140019134:	nop
   140019135:	xor    r8d,r8d
   140019138:	xor    edx,edx
   14001913a:	mov    rcx,rbx
   14001913d:	call   QWORD PTR [rip+0x1d465]        # 0x1400365a8
   140019143:	nop
   140019144:	mov    rcx,rbx
   140019147:	add    rsp,0x30
   14001914b:	pop    rbx
   14001914c:	rex.W jmp QWORD PTR [rip+0x1d4a5]        # 0x1400365f8
   140019153:	int3   
   140019154:	int3   
   140019155:	int3   
   140019156:	int3   
   140019157:	int3   
   140019158:	int3   
   140019159:	int3   
   14001915a:	int3   
   14001915b:	int3   
   14001915c:	int3   
   14001915d:	int3   
   14001915e:	int3   
   14001915f:	int3   
   140019160:	rex.W jmp QWORD PTR [rip+0x1d2d9]        # 0x140036440
   140019167:	int3   
   140019168:	int3   
   140019169:	int3   
   14001916a:	int3   
   14001916b:	int3   
   14001916c:	int3   
   14001916d:	int3   
   14001916e:	int3   
   14001916f:	int3   
   140019170:	sub    rsp,0x28
   140019174:	mov    rcx,QWORD PTR [rcx]
   140019177:	test   rcx,rcx
   14001917a:	je     0x140019199
   14001917c:	mov    rax,QWORD PTR [rcx]
   14001917f:	call   QWORD PTR [rax+0x10]
   140019182:	test   rax,rax
   140019185:	je     0x140019199
   140019187:	mov    r8,QWORD PTR [rax]
   14001918a:	mov    edx,0x1
   14001918f:	mov    rcx,rax
   140019192:	add    rsp,0x28
   140019196:	rex.WB jmp QWORD PTR [r8]
   140019199:	add    rsp,0x28
   14001919d:	ret    
   14001919e:	int3   
   14001919f:	int3   
   1400191a0:	rex.W jmp QWORD PTR [rip+0x1d299]        # 0x140036440
   1400191a7:	int3   
   1400191a8:	int3   
   1400191a9:	int3   
   1400191aa:	int3   
   1400191ab:	int3   
   1400191ac:	int3   
   1400191ad:	int3   
   1400191ae:	int3   
   1400191af:	int3   
   1400191b0:	ret    0x0
   1400191b3:	int3   
   1400191b4:	int3   
   1400191b5:	int3   
   1400191b6:	int3   
   1400191b7:	int3   
   1400191b8:	int3   
   1400191b9:	int3   
   1400191ba:	int3   
   1400191bb:	int3   
   1400191bc:	int3   
   1400191bd:	int3   
   1400191be:	int3   
   1400191bf:	int3   
   1400191c0:	rex.W jmp QWORD PTR [rip+0x1d279]        # 0x140036440
   1400191c7:	int3   
   1400191c8:	int3   
   1400191c9:	int3   
   1400191ca:	int3   
   1400191cb:	int3   
   1400191cc:	int3   
   1400191cd:	int3   
   1400191ce:	int3   
   1400191cf:	int3   
   1400191d0:	lea    rax,[rip+0x21691]        # 0x14003a868
   1400191d7:	mov    QWORD PTR [rcx],rax
   1400191da:	ret    
   1400191db:	int3   
   1400191dc:	int3   
   1400191dd:	int3   
   1400191de:	int3   
   1400191df:	int3   
   1400191e0:	rex push rbx
   1400191e2:	sub    rsp,0x20
   1400191e6:	lea    rax,[rip+0x217a3]        # 0x14003a990
   1400191ed:	mov    rbx,rcx
   1400191f0:	mov    QWORD PTR [rcx],rax
   1400191f3:	mov    rcx,QWORD PTR [rcx+0x18]
   1400191f7:	test   rcx,rcx
   1400191fa:	je     0x140019206
   1400191fc:	mov    rax,QWORD PTR [rcx]
   1400191ff:	mov    edx,0x1
   140019204:	call   QWORD PTR [rax]
   140019206:	lea    rax,[rip+0x2176b]        # 0x14003a978
   14001920d:	mov    rcx,rbx
   140019210:	mov    QWORD PTR [rbx],rax
   140019213:	add    rsp,0x20
   140019217:	pop    rbx
   140019218:	rex.W jmp QWORD PTR [rip+0x1d221]        # 0x140036440
   14001921f:	int3   
   140019220:	rex push rbx
   140019222:	sub    rsp,0x20
   140019226:	lea    rax,[rip+0x2177b]        # 0x14003a9a8
   14001922d:	mov    rbx,rcx
   140019230:	mov    QWORD PTR [rcx],rax
   140019233:	mov    rcx,QWORD PTR [rcx+0x18]
   140019237:	test   rcx,rcx
   14001923a:	je     0x140019246
   14001923c:	mov    rax,QWORD PTR [rcx]
   14001923f:	mov    edx,0x1
   140019244:	call   QWORD PTR [rax]
   140019246:	lea    rax,[rip+0x2172b]        # 0x14003a978
   14001924d:	mov    rcx,rbx
   140019250:	mov    QWORD PTR [rbx],rax
   140019253:	add    rsp,0x20
   140019257:	pop    rbx
   140019258:	rex.W jmp QWORD PTR [rip+0x1d1e1]        # 0x140036440
   14001925f:	int3   
   140019260:	lea    rax,[rip+0x21711]        # 0x14003a978
   140019267:	mov    QWORD PTR [rcx],rax
   14001926a:	rex.W jmp QWORD PTR [rip+0x1d1cf]        # 0x140036440
   140019271:	int3   
   140019272:	int3   
   140019273:	int3   
   140019274:	int3   
   140019275:	int3   
   140019276:	int3   
   140019277:	int3   
   140019278:	int3   
   140019279:	int3   
   14001927a:	int3   
   14001927b:	int3   
   14001927c:	int3   
   14001927d:	int3   
   14001927e:	int3   
   14001927f:	int3   
   140019280:	rex.W jmp QWORD PTR [rip+0x1d1b9]        # 0x140036440
   140019287:	int3   
   140019288:	int3   
   140019289:	int3   
   14001928a:	int3   
   14001928b:	int3   
   14001928c:	int3   
   14001928d:	int3   
   14001928e:	int3   
   14001928f:	int3   
   140019290:	mov    rcx,QWORD PTR [rcx+0x18]
   140019294:	test   rcx,rcx
   140019297:	je     0x1400192a0
   140019299:	rex.W jmp QWORD PTR [rip+0x1d228]        # 0x1400364c8
   1400192a0:	ret    
   1400192a1:	int3   
   1400192a2:	int3   
   1400192a3:	int3   
   1400192a4:	int3   
   1400192a5:	int3   
   1400192a6:	int3   
   1400192a7:	int3   
   1400192a8:	int3   
   1400192a9:	int3   
   1400192aa:	int3   
   1400192ab:	int3   
   1400192ac:	int3   
   1400192ad:	int3   
   1400192ae:	int3   
   1400192af:	int3   
   1400192b0:	rex push rbx
   1400192b2:	sub    rsp,0x20
   1400192b6:	mov    rbx,rcx
   1400192b9:	call   QWORD PTR [rip+0x1cf51]        # 0x140036210
   1400192bf:	test   al,al
   1400192c1:	jne    0x1400192cc
   1400192c3:	mov    rcx,QWORD PTR [rbx]
   1400192c6:	call   QWORD PTR [rip+0x1ce9c]        # 0x140036168
   1400192cc:	mov    rdx,QWORD PTR [rbx]
   1400192cf:	mov    rax,QWORD PTR [rdx]
   1400192d2:	movsxd rcx,DWORD PTR [rax+0x4]
   1400192d6:	mov    rcx,QWORD PTR [rcx+rdx*1+0x48]
   1400192db:	test   rcx,rcx
   1400192de:	je     0x1400192ec
   1400192e0:	mov    rax,QWORD PTR [rcx]
   1400192e3:	add    rsp,0x20
   1400192e7:	pop    rbx
   1400192e8:	rex.W jmp QWORD PTR [rax+0x10]
   1400192ec:	add    rsp,0x20
   1400192f0:	pop    rbx
   1400192f1:	ret    
   1400192f2:	int3   
   1400192f3:	int3   
   1400192f4:	int3   
   1400192f5:	int3   
   1400192f6:	int3   
   1400192f7:	int3   
   1400192f8:	int3   
   1400192f9:	int3   
   1400192fa:	int3   
   1400192fb:	int3   
   1400192fc:	int3   
   1400192fd:	int3   
   1400192fe:	int3   
   1400192ff:	int3   
   140019300:	mov    rcx,QWORD PTR [rcx]
   140019303:	jmp    0x140024800
   140019308:	int3   
   140019309:	int3   
   14001930a:	int3   
   14001930b:	int3   
   14001930c:	int3   
   14001930d:	int3   
   14001930e:	int3   
   14001930f:	int3   
   140019310:	rex push rbx
   140019312:	sub    rsp,0x20
   140019316:	mov    rbx,QWORD PTR [rcx]
   140019319:	test   rbx,rbx
   14001931c:	je     0x140019346
   14001931e:	lock dec DWORD PTR [rbx+0x8]
   140019322:	mov    QWORD PTR [rsp+0x30],rdi
   140019327:	jne    0x140019341
   140019329:	mov    rax,QWORD PTR [rbx]
   14001932c:	mov    rcx,rbx
   14001932f:	call   QWORD PTR [rax+0x8]
   140019332:	lock dec DWORD PTR [rbx+0xc]
   140019336:	jne    0x140019341
   140019338:	mov    rax,QWORD PTR [rbx]
   14001933b:	mov    rcx,rbx
   14001933e:	call   QWORD PTR [rax+0x10]
   140019341:	mov    rdi,QWORD PTR [rsp+0x30]
   140019346:	add    rsp,0x20
   14001934a:	pop    rbx
   14001934b:	ret    
   14001934c:	int3   
   14001934d:	int3   
   14001934e:	int3   
   14001934f:	int3   
   140019350:	lea    rax,[rip+0x215f1]        # 0x14003a948
   140019357:	mov    QWORD PTR [rcx],rax
   14001935a:	ret    
   14001935b:	int3   
   14001935c:	int3   
   14001935d:	int3   
   14001935e:	int3   
   14001935f:	int3   
   140019360:	rex.W jmp QWORD PTR [rip+0x1d0d9]        # 0x140036440
   140019367:	int3   
   140019368:	int3   
   140019369:	int3   
   14001936a:	int3   
   14001936b:	int3   
   14001936c:	int3   
   14001936d:	int3   
   14001936e:	int3   
   14001936f:	int3   
   140019370:	lea    rax,[rip+0x215b9]        # 0x14003a930
   140019377:	mov    QWORD PTR [rcx],rax
   14001937a:	ret    
   14001937b:	int3   
   14001937c:	int3   
   14001937d:	int3   
   14001937e:	int3   
   14001937f:	int3   
   140019380:	jmp    0x140019040
   140019385:	int3   
   140019386:	int3   
   140019387:	int3   
   140019388:	int3   
   140019389:	int3   
   14001938a:	int3   
   14001938b:	int3   
   14001938c:	int3   
   14001938d:	int3   
   14001938e:	int3   
   14001938f:	int3   
   140019390:	mov    rax,rdx
   140019393:	ret    
   140019394:	int3   
   140019395:	int3   
   140019396:	int3   
   140019397:	int3   
   140019398:	int3   
   140019399:	int3   
   14001939a:	int3   
   14001939b:	int3   
   14001939c:	int3   
   14001939d:	int3   
   14001939e:	int3   
   14001939f:	int3   
   1400193a0:	ret    0x0
   1400193a3:	int3   
   1400193a4:	int3   
   1400193a5:	int3   
   1400193a6:	int3   
   1400193a7:	int3   
   1400193a8:	int3   
   1400193a9:	int3   
   1400193aa:	int3   
   1400193ab:	int3   
   1400193ac:	int3   
   1400193ad:	int3   
   1400193ae:	int3   
   1400193af:	int3   
   1400193b0:	mov    rax,rsp
   1400193b3:	push   rdi
   1400193b4:	sub    rsp,0x50
   1400193b8:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   1400193c0:	mov    QWORD PTR [rax+0x10],rbx
   1400193c4:	mov    QWORD PTR [rax+0x18],rsi
   1400193c8:	mov    rdi,rdx
   1400193cb:	mov    rbx,rcx
   1400193ce:	mov    QWORD PTR [rax-0x18],0xf
   1400193d6:	xor    esi,esi
   1400193d8:	mov    QWORD PTR [rax-0x20],rsi
   1400193dc:	mov    BYTE PTR [rax-0x30],sil
   1400193e0:	or     r9,0xffffffffffffffff
   1400193e4:	xor    r8d,r8d
   1400193e7:	lea    rcx,[rax-0x30]
   1400193eb:	call   0x14001ef20
   1400193f0:	nop
   1400193f1:	lea    ecx,[rsi+0x20]
   1400193f4:	call   0x14003027c
   1400193f9:	mov    QWORD PTR [rsp+0x60],rax
   1400193fe:	test   rax,rax
   140019401:	je     0x140019412
   140019403:	mov    rdx,QWORD PTR [rdi+0x20]
   140019407:	mov    rcx,rax
   14001940a:	call   0x140014470
   14001940f:	mov    rsi,rax
   140019412:	mov    QWORD PTR [rsp+0x48],rsi
   140019417:	lea    rax,[rsp+0x28]
   14001941c:	cmp    rax,rbx
   14001941f:	je     0x140019457
   140019421:	mov    rdx,rbx
   140019424:	lea    rcx,[rsp+0x28]
   140019429:	call   0x14001d6f0
   14001942e:	mov    rcx,QWORD PTR [rsp+0x38]
   140019433:	mov    rax,QWORD PTR [rbx+0x10]
   140019437:	mov    QWORD PTR [rsp+0x38],rax
   14001943c:	mov    QWORD PTR [rbx+0x10],rcx
   140019440:	mov    rcx,QWORD PTR [rsp+0x40]
   140019445:	mov    rax,QWORD PTR [rbx+0x18]
   140019449:	mov    QWORD PTR [rsp+0x40],rax
   14001944e:	mov    QWORD PTR [rbx+0x18],rcx
   140019452:	mov    rsi,QWORD PTR [rsp+0x48]
   140019457:	mov    rdi,QWORD PTR [rbx+0x20]
   14001945b:	mov    QWORD PTR [rsp+0x48],rdi
   140019460:	mov    QWORD PTR [rbx+0x20],rsi
   140019464:	mov    QWORD PTR [rsp+0x60],rdi
   140019469:	test   rdi,rdi
   14001946c:	je     0x14001948a
   14001946e:	lea    rcx,[rdi+0x11]
   140019472:	call   0x1400221d0
   140019477:	nop
   140019478:	mov    rcx,QWORD PTR [rdi+0x8]
   14001947c:	call   0x140030282
   140019481:	mov    rcx,rdi
   140019484:	call   0x140030282
   140019489:	nop
   14001948a:	cmp    QWORD PTR [rsp+0x40],0x10
   140019490:	jb     0x14001949c
   140019492:	mov    rcx,QWORD PTR [rsp+0x28]
   140019497:	call   0x140030282
   14001949c:	mov    rax,rbx
   14001949f:	mov    rbx,QWORD PTR [rsp+0x68]
   1400194a4:	mov    rsi,QWORD PTR [rsp+0x70]
   1400194a9:	add    rsp,0x50
   1400194ad:	pop    rdi
   1400194ae:	ret    
   1400194af:	int3   
   1400194b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400194b5:	push   rdi
   1400194b6:	sub    rsp,0x20
   1400194ba:	mov    rdi,rdx
   1400194bd:	mov    rbx,rcx
   1400194c0:	cmp    rcx,rdx
   1400194c3:	je     0x1400194f2
   1400194c5:	cmp    QWORD PTR [rcx+0x18],0x10
   1400194ca:	jb     0x1400194d4
   1400194cc:	mov    rcx,QWORD PTR [rcx]
   1400194cf:	call   0x140030282
   1400194d4:	mov    QWORD PTR [rbx+0x18],0xf
   1400194dc:	mov    QWORD PTR [rbx+0x10],0x0
   1400194e4:	mov    rdx,rdi
   1400194e7:	mov    rcx,rbx
   1400194ea:	mov    BYTE PTR [rbx],0x0
   1400194ed:	call   0x14001c280
   1400194f2:	mov    rax,rbx
   1400194f5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400194fa:	add    rsp,0x20
   1400194fe:	pop    rdi
   1400194ff:	ret    
   140019500:	rex push rbx
   140019502:	sub    rsp,0x20
   140019506:	mov    rbx,rcx
   140019509:	cmp    rcx,rdx
   14001950c:	je     0x14001951a
   14001950e:	or     r9,0xffffffffffffffff
   140019512:	xor    r8d,r8d
   140019515:	call   0x14001ef20
   14001951a:	mov    rax,rbx
   14001951d:	add    rsp,0x20
   140019521:	pop    rbx
   140019522:	ret    
   140019523:	int3   
   140019524:	int3   
   140019525:	int3   
   140019526:	int3   
   140019527:	int3   
   140019528:	int3   
   140019529:	int3   
   14001952a:	int3   
   14001952b:	int3   
   14001952c:	int3   
   14001952d:	int3   
   14001952e:	int3   
   14001952f:	int3   
   140019530:	cmp    BYTE PTR [rdx],0x0
   140019533:	jne    0x14001953d
   140019535:	xor    r8d,r8d
   140019538:	jmp    0x14001f070
   14001953d:	or     r8,0xffffffffffffffff
   140019541:	inc    r8
   140019544:	cmp    BYTE PTR [rdx+r8*1],0x0
   140019549:	jne    0x140019541
   14001954b:	jmp    0x14001f070
   140019550:	mov    QWORD PTR [rsp+0x8],rbx
   140019555:	push   rdi
   140019556:	sub    rsp,0x20
   14001955a:	mov    rdi,QWORD PTR [rdx]
   14001955d:	mov    rbx,rcx
   140019560:	mov    rcx,QWORD PTR [rcx]
   140019563:	test   rcx,rcx
   140019566:	je     0x140019579
   140019568:	mov    rax,QWORD PTR [rcx]
   14001956b:	call   QWORD PTR [rax+0x20]
   14001956e:	test   al,al
   140019570:	je     0x140019579
   140019572:	mov    QWORD PTR [rbx],0x0
   140019579:	mov    QWORD PTR [rbx],rdi
   14001957c:	test   rdi,rdi
   14001957f:	je     0x14001958a
   140019581:	mov    rax,QWORD PTR [rdi]
   140019584:	mov    rcx,rdi
   140019587:	call   QWORD PTR [rax+0x18]
   14001958a:	mov    rax,rbx
   14001958d:	mov    rbx,QWORD PTR [rsp+0x30]
   140019592:	add    rsp,0x20
   140019596:	pop    rdi
   140019597:	ret    
   140019598:	int3   
   140019599:	int3   
   14001959a:	int3   
   14001959b:	int3   
   14001959c:	int3   
   14001959d:	int3   
   14001959e:	int3   
   14001959f:	int3   
   1400195a0:	mov    QWORD PTR [rsp+0x18],rbx
   1400195a5:	push   rdi
   1400195a6:	sub    rsp,0x20
   1400195aa:	mov    rdi,rdx
   1400195ad:	mov    rbx,rcx
   1400195b0:	cmp    rcx,rdx
   1400195b3:	je     0x140019611
   1400195b5:	mov    rcx,QWORD PTR [rcx]
   1400195b8:	mov    QWORD PTR [rsp+0x38],rsi
   1400195bd:	xor    esi,esi
   1400195bf:	test   rcx,rcx
   1400195c2:	je     0x1400195eb
   1400195c4:	movzx  r9d,BYTE PTR [rsp+0x30]
   1400195ca:	mov    rdx,QWORD PTR [rbx+0x8]
   1400195ce:	lea    r8,[rsp+0x30]
   1400195d3:	call   0x1400042e0
   1400195d8:	mov    rcx,QWORD PTR [rbx]
   1400195db:	call   0x140030282
   1400195e0:	mov    QWORD PTR [rbx],rsi
   1400195e3:	mov    QWORD PTR [rbx+0x8],rsi
   1400195e7:	mov    QWORD PTR [rbx+0x10],rsi
   1400195eb:	mov    rax,QWORD PTR [rdi]
   1400195ee:	mov    QWORD PTR [rbx],rax
   1400195f1:	mov    rax,QWORD PTR [rdi+0x8]
   1400195f5:	mov    QWORD PTR [rbx+0x8],rax
   1400195f9:	mov    rax,QWORD PTR [rdi+0x10]
   1400195fd:	mov    QWORD PTR [rbx+0x10],rax
   140019601:	mov    QWORD PTR [rdi],rsi
   140019604:	mov    QWORD PTR [rdi+0x8],rsi
   140019608:	mov    QWORD PTR [rdi+0x10],rsi
   14001960c:	mov    rsi,QWORD PTR [rsp+0x38]
   140019611:	mov    rax,rbx
   140019614:	mov    rbx,QWORD PTR [rsp+0x40]
   140019619:	add    rsp,0x20
   14001961d:	pop    rdi
   14001961e:	ret    
   14001961f:	int3   
   140019620:	rex push rbx
   140019622:	sub    rsp,0x20
   140019626:	mov    rbx,rcx
   140019629:	mov    rcx,QWORD PTR [rdx]
   14001962c:	test   rcx,rcx
   14001962f:	je     0x140019639
   140019631:	mov    rax,QWORD PTR [rcx]
   140019634:	call   QWORD PTR [rax+0x10]
   140019637:	jmp    0x14001963b
   140019639:	xor    eax,eax
   14001963b:	mov    rcx,QWORD PTR [rbx]
   14001963e:	mov    QWORD PTR [rbx],rax
   140019641:	test   rcx,rcx
   140019644:	je     0x140019650
   140019646:	mov    rax,QWORD PTR [rcx]
   140019649:	mov    edx,0x1
   14001964e:	call   QWORD PTR [rax]
   140019650:	mov    rax,rbx
   140019653:	add    rsp,0x20
   140019657:	pop    rbx
   140019658:	ret    
   140019659:	int3   
   14001965a:	int3   
   14001965b:	int3   
   14001965c:	int3   
   14001965d:	int3   
   14001965e:	int3   
   14001965f:	int3   
   140019660:	mov    rax,QWORD PTR [rdx]
   140019663:	mov    r8d,DWORD PTR [rax]
   140019666:	mov    rax,QWORD PTR [rcx]
   140019669:	and    QWORD PTR [rax],0xfffffffffffffffe
   14001966d:	mov    rdx,QWORD PTR [rcx]
   140019670:	and    r8d,0x1
   140019674:	movsxd rax,r8d
   140019677:	or     QWORD PTR [rdx],rax
   14001967a:	mov    rax,rcx
   14001967d:	ret    
   14001967e:	int3   
   14001967f:	int3   
   140019680:	mov    rax,QWORD PTR [rcx]
   140019683:	and    QWORD PTR [rax],0xfffffffffffffffe
   140019687:	mov    r8,QWORD PTR [rcx]
   14001968a:	movsxd rax,edx
   14001968d:	or     QWORD PTR [r8],rax
   140019690:	mov    rax,rcx
   140019693:	ret    
   140019694:	int3   
   140019695:	int3   
   140019696:	int3   
   140019697:	int3   
   140019698:	int3   
   140019699:	int3   
   14001969a:	int3   
   14001969b:	int3   
   14001969c:	int3   
   14001969d:	int3   
   14001969e:	int3   
   14001969f:	int3   
   1400196a0:	mov    rax,QWORD PTR [rdx]
   1400196a3:	mov    r9,QWORD PTR [rcx]
   1400196a6:	mov    r8d,DWORD PTR [rax]
   1400196a9:	xor    r8d,DWORD PTR [r9]
   1400196ac:	and    r8d,0x1
   1400196b0:	xor    r8,QWORD PTR [rax]
   1400196b3:	mov    rax,rcx
   1400196b6:	mov    QWORD PTR [r9],r8
   1400196b9:	ret    
   1400196ba:	int3   
   1400196bb:	int3   
   1400196bc:	int3   
   1400196bd:	int3   
   1400196be:	int3   
   1400196bf:	int3   
   1400196c0:	mov    r8,QWORD PTR [rcx]
   1400196c3:	mov    eax,DWORD PTR [r8]
   1400196c6:	and    eax,0x1
   1400196c9:	or     rax,rdx
   1400196cc:	mov    QWORD PTR [r8],rax
   1400196cf:	mov    rax,rcx
   1400196d2:	ret    
   1400196d3:	int3   
   1400196d4:	int3   
   1400196d5:	int3   
   1400196d6:	int3   
   1400196d7:	int3   
   1400196d8:	int3   
   1400196d9:	int3   
   1400196da:	int3   
   1400196db:	int3   
   1400196dc:	int3   
   1400196dd:	int3   
   1400196de:	int3   
   1400196df:	int3   
   1400196e0:	jmp    0x14000d870
   1400196e5:	int3   
   1400196e6:	int3   
   1400196e7:	int3   
   1400196e8:	int3   
   1400196e9:	int3   
   1400196ea:	int3   
   1400196eb:	int3   
   1400196ec:	int3   
   1400196ed:	int3   
   1400196ee:	int3   
   1400196ef:	int3   
   1400196f0:	xor    eax,eax
   1400196f2:	cmp    BYTE PTR [rcx],al
   1400196f4:	sete   al
   1400196f7:	ret    
   1400196f8:	int3   
   1400196f9:	int3   
   1400196fa:	int3   
   1400196fb:	int3   
   1400196fc:	int3   
   1400196fd:	int3   
   1400196fe:	int3   
   1400196ff:	int3   
   140019700:	xor    eax,eax
   140019702:	cmp    BYTE PTR [rcx],al
   140019704:	sete   al
   140019707:	ret    
   140019708:	int3   
   140019709:	int3   
   14001970a:	int3   
   14001970b:	int3   
   14001970c:	int3   
   14001970d:	int3   
   14001970e:	int3   
   14001970f:	int3   
   140019710:	xor    eax,eax
   140019712:	cmp    BYTE PTR [rcx],al
   140019714:	sete   al
   140019717:	ret    
   140019718:	int3   
   140019719:	int3   
   14001971a:	int3   
   14001971b:	int3   
   14001971c:	int3   
   14001971d:	int3   
   14001971e:	int3   
   14001971f:	int3   
   140019720:	mov    rdx,QWORD PTR [rdx]
   140019723:	cmp    QWORD PTR [rcx],rdx
   140019726:	sete   al
   140019729:	ret    
   14001972a:	int3   
   14001972b:	int3   
   14001972c:	int3   
   14001972d:	int3   
   14001972e:	int3   
   14001972f:	int3   
   140019730:	mov    rdx,QWORD PTR [rdx]
   140019733:	cmp    QWORD PTR [rcx],rdx
   140019736:	sete   al
   140019739:	ret    
   14001973a:	int3   
   14001973b:	int3   
   14001973c:	int3   
   14001973d:	int3   
   14001973e:	int3   
   14001973f:	int3   
   140019740:	mov    rdx,QWORD PTR [rdx]
   140019743:	cmp    QWORD PTR [rcx],rdx
   140019746:	sete   al
   140019749:	ret    
   14001974a:	int3   
   14001974b:	int3   
   14001974c:	int3   
   14001974d:	int3   
   14001974e:	int3   
   14001974f:	int3   
   140019750:	mov    rdx,QWORD PTR [rdx]
   140019753:	cmp    QWORD PTR [rcx],rdx
   140019756:	sete   al
   140019759:	ret    
   14001975a:	int3   
   14001975b:	int3   
   14001975c:	int3   
   14001975d:	int3   
   14001975e:	int3   
   14001975f:	int3   
   140019760:	mov    rdx,QWORD PTR [rdx]
   140019763:	cmp    QWORD PTR [rcx],rdx
   140019766:	sete   al
   140019769:	ret    
   14001976a:	int3   
   14001976b:	int3   
   14001976c:	int3   
   14001976d:	int3   
   14001976e:	int3   
   14001976f:	int3   
   140019770:	cmp    rcx,rdx
   140019773:	sete   al
   140019776:	ret    
   140019777:	int3   
   140019778:	int3   
   140019779:	int3   
   14001977a:	int3   
   14001977b:	int3   
   14001977c:	int3   
   14001977d:	int3   
   14001977e:	int3   
   14001977f:	int3   
   140019780:	mov    rax,QWORD PTR [rdx+0x8]
   140019784:	cmp    QWORD PTR [rcx+0x8],rax
   140019788:	jne    0x140019793
   14001978a:	mov    eax,DWORD PTR [rdx]
   14001978c:	cmp    DWORD PTR [rcx],eax
   14001978e:	jne    0x140019793
   140019790:	mov    al,0x1
   140019792:	ret    
   140019793:	xor    al,al
   140019795:	ret    
   140019796:	int3   
   140019797:	int3   
   140019798:	int3   
   140019799:	int3   
   14001979a:	int3   
   14001979b:	int3   
   14001979c:	int3   
   14001979d:	int3   
   14001979e:	int3   
   14001979f:	int3   
   1400197a0:	mov    rax,rsp
   1400197a3:	push   r14
   1400197a5:	sub    rsp,0x90
   1400197ac:	mov    QWORD PTR [rax-0x78],0xfffffffffffffffe
   1400197b4:	mov    QWORD PTR [rax+0x10],rbx
   1400197b8:	mov    QWORD PTR [rax+0x18],rsi
   1400197bc:	mov    QWORD PTR [rax+0x20],rdi
   1400197c0:	mov    r14,rdx
   1400197c3:	mov    rsi,rcx
   1400197c6:	xor    edi,edi
   1400197c8:	mov    DWORD PTR [rax+0x8],edi
   1400197cb:	mov    rax,QWORD PTR [rdx]
   1400197ce:	cmp    QWORD PTR [rcx],rax
   1400197d1:	je     0x140019874
   1400197d7:	lea    rdx,[rsp+0x68]
   1400197dc:	call   0x140026290
   1400197e1:	nop
   1400197e2:	mov    edi,0x1
   1400197e7:	mov    DWORD PTR [rsp+0xa0],edi
   1400197ee:	mov    rbx,QWORD PTR [rax+0x10]
   1400197f2:	cmp    QWORD PTR [rax+0x18],0x10
   1400197f7:	jb     0x1400197fc
   1400197f9:	mov    rax,QWORD PTR [rax]
   1400197fc:	mov    r8,rdi
   1400197ff:	cmp    rbx,rdi
   140019802:	cmovb  r8,rbx
   140019806:	test   r8,r8
   140019809:	jne    0x14001980f
   14001980b:	xor    eax,eax
   14001980d:	jmp    0x14001981e
   14001980f:	lea    rdx,[rip+0x20e52]        # 0x14003a668
   140019816:	mov    rcx,rax
   140019819:	call   0x140030484
   14001981e:	cdqe   
   140019820:	test   rax,rax
   140019823:	jne    0x140019830
   140019825:	cmp    rbx,rdi
   140019828:	jb     0x140019834
   14001982a:	cmp    rbx,rdi
   14001982d:	setne  al
   140019830:	test   eax,eax
   140019832:	je     0x140019870
   140019834:	lea    rdx,[rsp+0x48]
   140019839:	mov    rcx,r14
   14001983c:	call   0x140026290
   140019841:	mov    rbx,rax
   140019844:	mov    DWORD PTR [rsp+0xa0],0x3
   14001984f:	lea    rdx,[rsp+0x28]
   140019854:	mov    rcx,rsi
   140019857:	call   0x140026290
   14001985c:	mov    edi,0x7
   140019861:	mov    rdx,rbx
   140019864:	mov    rcx,rax
   140019867:	call   0x140020910
   14001986c:	test   eax,eax
   14001986e:	je     0x140019874
   140019870:	xor    bl,bl
   140019872:	jmp    0x140019876
   140019874:	mov    bl,0x1
   140019876:	test   dil,0x4
   14001987a:	je     0x1400198a8
   14001987c:	and    edi,0xfffffffb
   14001987f:	cmp    QWORD PTR [rsp+0x40],0x10
   140019885:	jb     0x140019891
   140019887:	mov    rcx,QWORD PTR [rsp+0x28]
   14001988c:	call   0x140030282
   140019891:	mov    QWORD PTR [rsp+0x40],0xf
   14001989a:	mov    QWORD PTR [rsp+0x38],0x0
   1400198a3:	mov    BYTE PTR [rsp+0x28],0x0
   1400198a8:	test   dil,0x2
   1400198ac:	je     0x1400198da
   1400198ae:	and    edi,0xfffffffd
   1400198b1:	cmp    QWORD PTR [rsp+0x60],0x10
   1400198b7:	jb     0x1400198c3
   1400198b9:	mov    rcx,QWORD PTR [rsp+0x48]
   1400198be:	call   0x140030282
   1400198c3:	mov    QWORD PTR [rsp+0x60],0xf
   1400198cc:	mov    QWORD PTR [rsp+0x58],0x0
   1400198d5:	mov    BYTE PTR [rsp+0x48],0x0
   1400198da:	test   dil,0x1
   1400198de:	je     0x1400198f5
   1400198e0:	cmp    QWORD PTR [rsp+0x80],0x10
   1400198e9:	jb     0x1400198f5
   1400198eb:	mov    rcx,QWORD PTR [rsp+0x68]
   1400198f0:	call   0x140030282
   1400198f5:	movzx  eax,bl
   1400198f8:	lea    r11,[rsp+0x90]
   140019900:	mov    rbx,QWORD PTR [r11+0x18]
   140019904:	mov    rsi,QWORD PTR [r11+0x20]
   140019908:	mov    rdi,QWORD PTR [r11+0x28]
   14001990c:	mov    rsp,r11
   14001990f:	pop    r14
   140019911:	ret    
   140019912:	int3   
   140019913:	int3   
   140019914:	int3   
   140019915:	int3   
   140019916:	int3   
   140019917:	int3   
   140019918:	int3   
   140019919:	int3   
   14001991a:	int3   
   14001991b:	int3   
   14001991c:	int3   
   14001991d:	int3   
   14001991e:	int3   
   14001991f:	int3   
   140019920:	mov    rdx,QWORD PTR [rdx]
   140019923:	cmp    QWORD PTR [rcx],rdx
   140019926:	setne  al
   140019929:	ret    
   14001992a:	int3   
   14001992b:	int3   
   14001992c:	int3   
   14001992d:	int3   
   14001992e:	int3   
   14001992f:	int3   
   140019930:	mov    rdx,QWORD PTR [rdx]
   140019933:	cmp    QWORD PTR [rcx],rdx
   140019936:	setne  al
   140019939:	ret    
   14001993a:	int3   
   14001993b:	int3   
   14001993c:	int3   
   14001993d:	int3   
   14001993e:	int3   
   14001993f:	int3   
   140019940:	mov    rdx,QWORD PTR [rdx]
   140019943:	cmp    QWORD PTR [rcx],rdx
   140019946:	setne  al
   140019949:	ret    
   14001994a:	int3   
   14001994b:	int3   
   14001994c:	int3   
   14001994d:	int3   
   14001994e:	int3   
   14001994f:	int3   
   140019950:	mov    rdx,QWORD PTR [rdx]
   140019953:	cmp    QWORD PTR [rcx],rdx
   140019956:	setne  al
   140019959:	ret    
   14001995a:	int3   
   14001995b:	int3   
   14001995c:	int3   
   14001995d:	int3   
   14001995e:	int3   
   14001995f:	int3   
   140019960:	mov    rdx,QWORD PTR [rdx]
   140019963:	cmp    QWORD PTR [rcx],rdx
   140019966:	setne  al
   140019969:	ret    
   14001996a:	int3   
   14001996b:	int3   
   14001996c:	int3   
   14001996d:	int3   
   14001996e:	int3   
   14001996f:	int3   
   140019970:	test   rcx,rcx
   140019973:	je     0x14001997a
   140019975:	lea    rax,[rcx-0x8]
   140019979:	ret    
   14001997a:	xor    eax,eax
   14001997c:	ret    
   14001997d:	int3   
   14001997e:	int3   
   14001997f:	int3   
   140019980:	test   rcx,rcx
   140019983:	je     0x14001998a
   140019985:	lea    rax,[rcx+0x11]
   140019989:	ret    
   14001998a:	xor    eax,eax
   14001998c:	ret    
   14001998d:	int3   
   14001998e:	int3   
   14001998f:	int3   
   140019990:	test   rcx,rcx
   140019993:	je     0x14001999a
   140019995:	lea    rax,[rcx+0x11]
   140019999:	ret    
   14001999a:	xor    eax,eax
   14001999c:	ret    
   14001999d:	int3   
   14001999e:	int3   
   14001999f:	int3   
   1400199a0:	cmp    QWORD PTR [rcx+0x18],0x10
   1400199a5:	jb     0x1400199ae
   1400199a7:	mov    rax,QWORD PTR [rcx]
   1400199aa:	add    rax,rdx
   1400199ad:	ret    
   1400199ae:	lea    rax,[rcx+rdx*1]
   1400199b2:	ret    
   1400199b3:	int3   
   1400199b4:	int3   
   1400199b5:	int3   
   1400199b6:	int3   
   1400199b7:	int3   
   1400199b8:	int3   
   1400199b9:	int3   
   1400199ba:	int3   
   1400199bb:	int3   
   1400199bc:	int3   
   1400199bd:	int3   
   1400199be:	int3   
   1400199bf:	int3   
   1400199c0:	cmp    QWORD PTR [rcx+0x18],0x10
   1400199c5:	jb     0x1400199ce
   1400199c7:	mov    rax,QWORD PTR [rcx]
   1400199ca:	add    rax,rdx
   1400199cd:	ret    
   1400199ce:	lea    rax,[rcx+rdx*1]
   1400199d2:	ret    
   1400199d3:	int3   
   1400199d4:	int3   
   1400199d5:	int3   
   1400199d6:	int3   
   1400199d7:	int3   
   1400199d8:	int3   
   1400199d9:	int3   
   1400199da:	int3   
   1400199db:	int3   
   1400199dc:	int3   
   1400199dd:	int3   
   1400199de:	int3   
   1400199df:	int3   
   1400199e0:	shl    rdx,0x5
   1400199e4:	add    rdx,QWORD PTR [rcx]
   1400199e7:	mov    rax,rdx
   1400199ea:	ret    
   1400199eb:	int3   
   1400199ec:	int3   
   1400199ed:	int3   
   1400199ee:	int3   
   1400199ef:	int3   
   1400199f0:	mov    rax,QWORD PTR [rcx]
   1400199f3:	ret    
   1400199f4:	int3   
   1400199f5:	int3   
   1400199f6:	int3   
   1400199f7:	int3   
   1400199f8:	int3   
   1400199f9:	int3   
   1400199fa:	int3   
   1400199fb:	int3   
   1400199fc:	int3   
   1400199fd:	int3   
   1400199fe:	int3   
   1400199ff:	int3   
   140019a00:	mov    rax,QWORD PTR [rcx]
   140019a03:	ret    
   140019a04:	int3   
   140019a05:	int3   
   140019a06:	int3   
   140019a07:	int3   
   140019a08:	int3   
   140019a09:	int3   
   140019a0a:	int3   
   140019a0b:	int3   
   140019a0c:	int3   
   140019a0d:	int3   
   140019a0e:	int3   
   140019a0f:	int3   
   140019a10:	mov    rax,QWORD PTR [rcx]
   140019a13:	ret    
   140019a14:	int3   
   140019a15:	int3   
   140019a16:	int3   
   140019a17:	int3   
   140019a18:	int3   
   140019a19:	int3   
   140019a1a:	int3   
   140019a1b:	int3   
   140019a1c:	int3   
   140019a1d:	int3   
   140019a1e:	int3   
   140019a1f:	int3   
   140019a20:	mov    rax,QWORD PTR [rcx]
   140019a23:	ret    
   140019a24:	int3   
   140019a25:	int3   
   140019a26:	int3   
   140019a27:	int3   
   140019a28:	int3   
   140019a29:	int3   
   140019a2a:	int3   
   140019a2b:	int3   
   140019a2c:	int3   
   140019a2d:	int3   
   140019a2e:	int3   
   140019a2f:	int3   
   140019a30:	mov    rax,QWORD PTR [rcx]
   140019a33:	ret    
   140019a34:	int3   
   140019a35:	int3   
   140019a36:	int3   
   140019a37:	int3   
   140019a38:	int3   
   140019a39:	int3   
   140019a3a:	int3   
   140019a3b:	int3   
   140019a3c:	int3   
   140019a3d:	int3   
   140019a3e:	int3   
   140019a3f:	int3   
   140019a40:	mov    rax,QWORD PTR [rcx+0x8]
   140019a44:	add    rax,QWORD PTR [rcx]
   140019a47:	ret    
   140019a48:	int3   
   140019a49:	int3   
   140019a4a:	int3   
   140019a4b:	int3   
   140019a4c:	int3   
   140019a4d:	int3   
   140019a4e:	int3   
   140019a4f:	int3   
   140019a50:	xor    edx,edx
   140019a52:	lea    rax,[rip+0xc9b7]        # 0x140026410
   140019a59:	cmp    QWORD PTR [rcx],rdx
   140019a5c:	cmove  rax,rdx
   140019a60:	ret    
   140019a61:	int3   
   140019a62:	int3   
   140019a63:	int3   
   140019a64:	int3   
   140019a65:	int3   
   140019a66:	int3   
   140019a67:	int3   
   140019a68:	int3   
   140019a69:	int3   
   140019a6a:	int3   
   140019a6b:	int3   
   140019a6c:	int3   
   140019a6d:	int3   
   140019a6e:	int3   
   140019a6f:	int3   
   140019a70:	xor    eax,eax
   140019a72:	cmp    BYTE PTR [rcx],al
   140019a74:	setne  al
   140019a77:	ret    
   140019a78:	int3   
   140019a79:	int3   
   140019a7a:	int3   
   140019a7b:	int3   
   140019a7c:	int3   
   140019a7d:	int3   
   140019a7e:	int3   
   140019a7f:	int3   
   140019a80:	xor    eax,eax
   140019a82:	cmp    BYTE PTR [rcx],al
   140019a84:	setne  al
   140019a87:	ret    
   140019a88:	int3   
   140019a89:	int3   
   140019a8a:	int3   
   140019a8b:	int3   
   140019a8c:	int3   
   140019a8d:	int3   
   140019a8e:	int3   
   140019a8f:	int3   
   140019a90:	xor    eax,eax
   140019a92:	cmp    BYTE PTR [rcx],al
   140019a94:	setne  al
   140019a97:	ret    
   140019a98:	int3   
   140019a99:	int3   
   140019a9a:	int3   
   140019a9b:	int3   
   140019a9c:	int3   
   140019a9d:	int3   
   140019a9e:	int3   
   140019a9f:	int3   
   140019aa0:	mov    rax,QWORD PTR [rcx]
   140019aa3:	ret    
   140019aa4:	int3   
   140019aa5:	int3   
   140019aa6:	int3   
   140019aa7:	int3   
   140019aa8:	int3   
   140019aa9:	int3   
   140019aaa:	int3   
   140019aab:	int3   
   140019aac:	int3   
   140019aad:	int3   
   140019aae:	int3   
   140019aaf:	int3   
   140019ab0:	mov    rax,QWORD PTR [rcx]
   140019ab3:	ret    
   140019ab4:	int3   
   140019ab5:	int3   
   140019ab6:	int3   
   140019ab7:	int3   
   140019ab8:	int3   
   140019ab9:	int3   
   140019aba:	int3   
   140019abb:	int3   
   140019abc:	int3   
   140019abd:	int3   
   140019abe:	int3   
   140019abf:	int3   
   140019ac0:	mov    rax,QWORD PTR [rcx]
   140019ac3:	ret    
   140019ac4:	int3   
   140019ac5:	int3   
   140019ac6:	int3   
   140019ac7:	int3   
   140019ac8:	int3   
   140019ac9:	int3   
   140019aca:	int3   
   140019acb:	int3   
   140019acc:	int3   
   140019acd:	int3   
   140019ace:	int3   
   140019acf:	int3   
   140019ad0:	mov    rax,QWORD PTR [rcx]
   140019ad3:	mov    eax,DWORD PTR [rax]
   140019ad5:	and    eax,0x1
   140019ad8:	ret    
   140019ad9:	int3   
   140019ada:	int3   
   140019adb:	int3   
   140019adc:	int3   
   140019add:	int3   
   140019ade:	int3   
   140019adf:	int3   
   140019ae0:	movzx  eax,WORD PTR [rcx]
   140019ae3:	ret    
   140019ae4:	int3   
   140019ae5:	int3   
   140019ae6:	int3   
   140019ae7:	int3   
   140019ae8:	int3   
   140019ae9:	int3   
   140019aea:	int3   
   140019aeb:	int3   
   140019aec:	int3   
   140019aed:	int3   
   140019aee:	int3   
   140019aef:	int3   
   140019af0:	movzx  eax,WORD PTR [rcx]
   140019af3:	ret    
   140019af4:	int3   
   140019af5:	int3   
   140019af6:	int3   
   140019af7:	int3   
   140019af8:	int3   
   140019af9:	int3   
   140019afa:	int3   
   140019afb:	int3   
   140019afc:	int3   
   140019afd:	int3   
   140019afe:	int3   
   140019aff:	int3   
   140019b00:	mov    rax,QWORD PTR [rcx]
   140019b03:	mov    rax,QWORD PTR [rax]
   140019b06:	and    rax,0xfffffffffffffffe
   140019b0a:	ret    
   140019b0b:	int3   
   140019b0c:	int3   
   140019b0d:	int3   
   140019b0e:	int3   
   140019b0f:	int3   
   140019b10:	movzx  eax,BYTE PTR [rcx+0x8]
   140019b14:	ret    
   140019b15:	int3   
   140019b16:	int3   
   140019b17:	int3   
   140019b18:	int3   
   140019b19:	int3   
   140019b1a:	int3   
   140019b1b:	int3   
   140019b1c:	int3   
   140019b1d:	int3   
   140019b1e:	int3   
   140019b1f:	int3   
   140019b20:	mov    rax,QWORD PTR [rcx]
   140019b23:	add    rax,0x20
   140019b27:	ret    
   140019b28:	int3   
   140019b29:	int3   
   140019b2a:	int3   
   140019b2b:	int3   
   140019b2c:	int3   
   140019b2d:	int3   
   140019b2e:	int3   
   140019b2f:	int3   
   140019b30:	mov    rax,QWORD PTR [rcx]
   140019b33:	ret    
   140019b34:	int3   
   140019b35:	int3   
   140019b36:	int3   
   140019b37:	int3   
   140019b38:	int3   
   140019b39:	int3   
   140019b3a:	int3   
   140019b3b:	int3   
   140019b3c:	int3   
   140019b3d:	int3   
   140019b3e:	int3   
   140019b3f:	int3   
   140019b40:	mov    rax,QWORD PTR [rcx]
   140019b43:	ret    
   140019b44:	int3   
   140019b45:	int3   
   140019b46:	int3   
   140019b47:	int3   
   140019b48:	int3   
   140019b49:	int3   
   140019b4a:	int3   
   140019b4b:	int3   
   140019b4c:	int3   
   140019b4d:	int3   
   140019b4e:	int3   
   140019b4f:	int3   
   140019b50:	mov    rax,QWORD PTR [rcx]
   140019b53:	ret    
   140019b54:	int3   
   140019b55:	int3   
   140019b56:	int3   
   140019b57:	int3   
   140019b58:	int3   
   140019b59:	int3   
   140019b5a:	int3   
   140019b5b:	int3   
   140019b5c:	int3   
   140019b5d:	int3   
   140019b5e:	int3   
   140019b5f:	int3   
   140019b60:	mov    rax,QWORD PTR [rcx]
   140019b63:	ret    
   140019b64:	int3   
   140019b65:	int3   
   140019b66:	int3   
   140019b67:	int3   
   140019b68:	int3   
   140019b69:	int3   
   140019b6a:	int3   
   140019b6b:	int3   
   140019b6c:	int3   
   140019b6d:	int3   
   140019b6e:	int3   
   140019b6f:	int3   
   140019b70:	mov    rax,QWORD PTR [rcx]
   140019b73:	ret    
   140019b74:	int3   
   140019b75:	int3   
   140019b76:	int3   
   140019b77:	int3   
   140019b78:	int3   
   140019b79:	int3   
   140019b7a:	int3   
   140019b7b:	int3   
   140019b7c:	int3   
   140019b7d:	int3   
   140019b7e:	int3   
   140019b7f:	int3   
   140019b80:	mov    rax,QWORD PTR [rcx]
   140019b83:	ret    
   140019b84:	int3   
   140019b85:	int3   
   140019b86:	int3   
   140019b87:	int3   
   140019b88:	int3   
   140019b89:	int3   
   140019b8a:	int3   
   140019b8b:	int3   
   140019b8c:	int3   
   140019b8d:	int3   
   140019b8e:	int3   
   140019b8f:	int3   
   140019b90:	mov    rax,QWORD PTR [rcx]
   140019b93:	ret    
   140019b94:	int3   
   140019b95:	int3   
   140019b96:	int3   
   140019b97:	int3   
   140019b98:	int3   
   140019b99:	int3   
   140019b9a:	int3   
   140019b9b:	int3   
   140019b9c:	int3   
   140019b9d:	int3   
   140019b9e:	int3   
   140019b9f:	int3   
   140019ba0:	mov    rax,QWORD PTR [rcx]
   140019ba3:	ret    
   140019ba4:	int3   
   140019ba5:	int3   
   140019ba6:	int3   
   140019ba7:	int3   
   140019ba8:	int3   
   140019ba9:	int3   
   140019baa:	int3   
   140019bab:	int3   
   140019bac:	int3   
   140019bad:	int3   
   140019bae:	int3   
   140019baf:	int3   
   140019bb0:	mov    rax,QWORD PTR [rcx]
   140019bb3:	mov    rax,QWORD PTR [rax]
   140019bb6:	and    rax,0xfffffffffffffffe
   140019bba:	ret    
   140019bbb:	int3   
   140019bbc:	int3   
   140019bbd:	int3   
   140019bbe:	int3   
   140019bbf:	int3   
   140019bc0:	mov    rax,QWORD PTR [rcx]
   140019bc3:	add    rax,0x10
   140019bc7:	ret    
   140019bc8:	int3   
   140019bc9:	int3   
   140019bca:	int3   
   140019bcb:	int3   
   140019bcc:	int3   
   140019bcd:	int3   
   140019bce:	int3   
   140019bcf:	int3   
   140019bd0:	mov    rax,QWORD PTR [rcx]
   140019bd3:	add    rax,0x10
   140019bd7:	ret    
   140019bd8:	int3   
   140019bd9:	int3   
   140019bda:	int3   
   140019bdb:	int3   
   140019bdc:	int3   
   140019bdd:	int3   
   140019bde:	int3   
   140019bdf:	int3   
   140019be0:	mov    rax,QWORD PTR [rcx]
   140019be3:	add    rax,0x10
   140019be7:	ret    
   140019be8:	int3   
   140019be9:	int3   
   140019bea:	int3   
   140019beb:	int3   
   140019bec:	int3   
   140019bed:	int3   
   140019bee:	int3   
   140019bef:	int3   
   140019bf0:	mov    rax,QWORD PTR [rcx]
   140019bf3:	mov    rax,QWORD PTR [rax+0x8]
   140019bf7:	add    rax,0x10
   140019bfb:	ret    
   140019bfc:	int3   
   140019bfd:	int3   
   140019bfe:	int3   
   140019bff:	int3   
   140019c00:	mov    rax,QWORD PTR [rcx]
   140019c03:	ret    
   140019c04:	int3   
   140019c05:	int3   
   140019c06:	int3   
   140019c07:	int3   
   140019c08:	int3   
   140019c09:	int3   
   140019c0a:	int3   
   140019c0b:	int3   
   140019c0c:	int3   
   140019c0d:	int3   
   140019c0e:	int3   
   140019c0f:	int3   
   140019c10:	mov    rax,QWORD PTR [rcx]
   140019c13:	ret    
   140019c14:	int3   
   140019c15:	int3   
   140019c16:	int3   
   140019c17:	int3   
   140019c18:	int3   
   140019c19:	int3   
   140019c1a:	int3   
   140019c1b:	int3   
   140019c1c:	int3   
   140019c1d:	int3   
   140019c1e:	int3   
   140019c1f:	int3   
   140019c20:	mov    rax,QWORD PTR [rcx]
   140019c23:	add    rax,0x20
   140019c27:	ret    
   140019c28:	int3   
   140019c29:	int3   
   140019c2a:	int3   
   140019c2b:	int3   
   140019c2c:	int3   
   140019c2d:	int3   
   140019c2e:	int3   
   140019c2f:	int3   
   140019c30:	mov    rax,QWORD PTR [rcx]
   140019c33:	add    rax,0x20
   140019c37:	ret    
   140019c38:	int3   
   140019c39:	int3   
   140019c3a:	int3   
   140019c3b:	int3   
   140019c3c:	int3   
   140019c3d:	int3   
   140019c3e:	int3   
   140019c3f:	int3   
   140019c40:	mov    rax,QWORD PTR [rcx]
   140019c43:	ret    
   140019c44:	int3   
   140019c45:	int3   
   140019c46:	int3   
   140019c47:	int3   
   140019c48:	int3   
   140019c49:	int3   
   140019c4a:	int3   
   140019c4b:	int3   
   140019c4c:	int3   
   140019c4d:	int3   
   140019c4e:	int3   
   140019c4f:	int3   
   140019c50:	mov    rax,QWORD PTR [rcx]
   140019c53:	ret    
   140019c54:	int3   
   140019c55:	int3   
   140019c56:	int3   
   140019c57:	int3   
   140019c58:	int3   
   140019c59:	int3   
   140019c5a:	int3   
   140019c5b:	int3   
   140019c5c:	int3   
   140019c5d:	int3   
   140019c5e:	int3   
   140019c5f:	int3   
   140019c60:	mov    rax,QWORD PTR [rcx]
   140019c63:	ret    
   140019c64:	int3   
   140019c65:	int3   
   140019c66:	int3   
   140019c67:	int3   
   140019c68:	int3   
   140019c69:	int3   
   140019c6a:	int3   
   140019c6b:	int3   
   140019c6c:	int3   
   140019c6d:	int3   
   140019c6e:	int3   
   140019c6f:	int3   
   140019c70:	mov    rax,QWORD PTR [rcx]
   140019c73:	ret    
   140019c74:	int3   
   140019c75:	int3   
   140019c76:	int3   
   140019c77:	int3   
   140019c78:	int3   
   140019c79:	int3   
   140019c7a:	int3   
   140019c7b:	int3   
   140019c7c:	int3   
   140019c7d:	int3   
   140019c7e:	int3   
   140019c7f:	int3   
   140019c80:	mov    rax,rcx
   140019c83:	ret    
   140019c84:	int3   
   140019c85:	int3   
   140019c86:	int3   
   140019c87:	int3   
   140019c88:	int3   
   140019c89:	int3   
   140019c8a:	int3   
   140019c8b:	int3   
   140019c8c:	int3   
   140019c8d:	int3   
   140019c8e:	int3   
   140019c8f:	int3   
   140019c90:	mov    rax,rcx
   140019c93:	ret    
   140019c94:	int3   
   140019c95:	int3   
   140019c96:	int3   
   140019c97:	int3   
   140019c98:	int3   
   140019c99:	int3   
   140019c9a:	int3   
   140019c9b:	int3   
   140019c9c:	int3   
   140019c9d:	int3   
   140019c9e:	int3   
   140019c9f:	int3   
   140019ca0:	mov    rax,rcx
   140019ca3:	ret    
   140019ca4:	int3   
   140019ca5:	int3   
   140019ca6:	int3   
   140019ca7:	int3   
   140019ca8:	int3   
   140019ca9:	int3   
   140019caa:	int3   
   140019cab:	int3   
   140019cac:	int3   
   140019cad:	int3   
   140019cae:	int3   
   140019caf:	int3   
   140019cb0:	mov    rax,rcx
   140019cb3:	ret    
   140019cb4:	int3   
   140019cb5:	int3   
   140019cb6:	int3   
   140019cb7:	int3   
   140019cb8:	int3   
   140019cb9:	int3   
   140019cba:	int3   
   140019cbb:	int3   
   140019cbc:	int3   
   140019cbd:	int3   
   140019cbe:	int3   
   140019cbf:	int3   
   140019cc0:	lea    rax,[rcx+0x8]
   140019cc4:	ret    
   140019cc5:	int3   
   140019cc6:	int3   
   140019cc7:	int3   
   140019cc8:	int3   
   140019cc9:	int3   
   140019cca:	int3   
   140019ccb:	int3   
   140019ccc:	int3   
   140019ccd:	int3   
   140019cce:	int3   
   140019ccf:	int3   
   140019cd0:	lea    rax,[rcx+0x68]
   140019cd4:	ret    
   140019cd5:	int3   
   140019cd6:	int3   
   140019cd7:	int3   
   140019cd8:	int3   
   140019cd9:	int3   
   140019cda:	int3   
   140019cdb:	int3   
   140019cdc:	int3   
   140019cdd:	int3   
   140019cde:	int3   
   140019cdf:	int3   
   140019ce0:	rex push rbx
   140019ce2:	sub    rsp,0x20
   140019ce6:	cmp    BYTE PTR [rcx+0x8],0x0
   140019cea:	mov    rbx,rcx
   140019ced:	jne    0x140019cf4
   140019cef:	call   0x140023310
   140019cf4:	movsx  rax,BYTE PTR [rbx+0x9]
   140019cf9:	lea    rcx,[rip+0x24a70]        # 0x14003e770
   140019d00:	movzx  eax,BYTE PTR [rax+rcx*1]
   140019d04:	add    rsp,0x20
   140019d08:	pop    rbx
   140019d09:	ret    
   140019d0a:	int3   
   140019d0b:	int3   
   140019d0c:	int3   
   140019d0d:	int3   
   140019d0e:	int3   
   140019d0f:	int3   
   140019d10:	mov    rax,QWORD PTR [rcx]
   140019d13:	add    rcx,0x8
   140019d17:	movzx  edx,BYTE PTR [rax]
   140019d1a:	jmp    0x14001a5a0
   140019d1f:	int3   
   140019d20:	rex push rbx
   140019d22:	sub    rsp,0x20
   140019d26:	cmp    BYTE PTR [rcx+0x8],0x0
   140019d2a:	mov    rbx,rcx
   140019d2d:	jne    0x140019d3e
   140019d2f:	call   0x140023310
   140019d34:	movzx  eax,BYTE PTR [rbx+0x9]
   140019d38:	add    rsp,0x20
   140019d3c:	pop    rbx
   140019d3d:	ret    
   140019d3e:	movzx  eax,BYTE PTR [rcx+0x9]
   140019d42:	add    rsp,0x20
   140019d46:	pop    rbx
   140019d47:	ret    
   140019d48:	int3   
   140019d49:	int3   
   140019d4a:	int3   
   140019d4b:	int3   
   140019d4c:	int3   
   140019d4d:	int3   
   140019d4e:	int3   
   140019d4f:	int3   
   140019d50:	rex push rbx
   140019d52:	sub    rsp,0x20
   140019d56:	cmp    BYTE PTR [rcx+0x10],0x0
   140019d5a:	mov    rbx,rcx
   140019d5d:	jne    0x140019d6e
   140019d5f:	call   0x1400233b0
   140019d64:	movzx  eax,BYTE PTR [rbx+0x11]
   140019d68:	add    rsp,0x20
   140019d6c:	pop    rbx
   140019d6d:	ret    
   140019d6e:	movzx  eax,BYTE PTR [rcx+0x11]
   140019d72:	add    rsp,0x20
   140019d76:	pop    rbx
   140019d77:	ret    
   140019d78:	int3   
   140019d79:	int3   
   140019d7a:	int3   
   140019d7b:	int3   
   140019d7c:	int3   
   140019d7d:	int3   
   140019d7e:	int3   
   140019d7f:	int3   
   140019d80:	mov    rax,QWORD PTR [rcx]
   140019d83:	ret    
   140019d84:	int3   
   140019d85:	int3   
   140019d86:	int3   
   140019d87:	int3   
   140019d88:	int3   
   140019d89:	int3   
   140019d8a:	int3   
   140019d8b:	int3   
   140019d8c:	int3   
   140019d8d:	int3   
   140019d8e:	int3   
   140019d8f:	int3   
   140019d90:	mov    rax,QWORD PTR [rcx]
   140019d93:	ret    
   140019d94:	int3   
   140019d95:	int3   
   140019d96:	int3   
   140019d97:	int3   
   140019d98:	int3   
   140019d99:	int3   
   140019d9a:	int3   
   140019d9b:	int3   
   140019d9c:	int3   
   140019d9d:	int3   
   140019d9e:	int3   
   140019d9f:	int3   
   140019da0:	mov    rax,QWORD PTR [rcx]
   140019da3:	ret    
   140019da4:	int3   
   140019da5:	int3   
   140019da6:	int3   
   140019da7:	int3   
   140019da8:	int3   
   140019da9:	int3   
   140019daa:	int3   
   140019dab:	int3   
   140019dac:	int3   
   140019dad:	int3   
   140019dae:	int3   
   140019daf:	int3   
   140019db0:	mov    rax,QWORD PTR [rcx]
   140019db3:	ret    
   140019db4:	int3   
   140019db5:	int3   
   140019db6:	int3   
   140019db7:	int3   
   140019db8:	int3   
   140019db9:	int3   
   140019dba:	int3   
   140019dbb:	int3   
   140019dbc:	int3   
   140019dbd:	int3   
   140019dbe:	int3   
   140019dbf:	int3   
   140019dc0:	mov    rax,QWORD PTR [rcx]
   140019dc3:	ret    
   140019dc4:	int3   
   140019dc5:	int3   
   140019dc6:	int3   
   140019dc7:	int3   
   140019dc8:	int3   
   140019dc9:	int3   
   140019dca:	int3   
   140019dcb:	int3   
   140019dcc:	int3   
   140019dcd:	int3   
   140019dce:	int3   
   140019dcf:	int3   
   140019dd0:	mov    rax,QWORD PTR [rcx+0x8]
   140019dd4:	ret    
   140019dd5:	int3   
   140019dd6:	int3   
   140019dd7:	int3   
   140019dd8:	int3   
   140019dd9:	int3   
   140019dda:	int3   
   140019ddb:	int3   
   140019ddc:	int3   
   140019ddd:	int3   
   140019dde:	int3   
   140019ddf:	int3   
   140019de0:	lea    rax,[rcx+0x8]
   140019de4:	ret    
   140019de5:	int3   
   140019de6:	int3   
   140019de7:	int3   
   140019de8:	int3   
   140019de9:	int3   
   140019dea:	int3   
   140019deb:	int3   
   140019dec:	int3   
   140019ded:	int3   
   140019dee:	int3   
   140019def:	int3   
   140019df0:	mov    rax,rcx
   140019df3:	ret    
   140019df4:	int3   
   140019df5:	int3   
   140019df6:	int3   
   140019df7:	int3   
   140019df8:	int3   
   140019df9:	int3   
   140019dfa:	int3   
   140019dfb:	int3   
   140019dfc:	int3   
   140019dfd:	int3   
   140019dfe:	int3   
   140019dff:	int3   
   140019e00:	mov    rax,rcx
   140019e03:	ret    
   140019e04:	int3   
   140019e05:	int3   
   140019e06:	int3   
   140019e07:	int3   
   140019e08:	int3   
   140019e09:	int3   
   140019e0a:	int3   
   140019e0b:	int3   
   140019e0c:	int3   
   140019e0d:	int3   
   140019e0e:	int3   
   140019e0f:	int3   
   140019e10:	mov    rax,rcx
   140019e13:	ret    
   140019e14:	int3   
   140019e15:	int3   
   140019e16:	int3   
   140019e17:	int3   
   140019e18:	int3   
   140019e19:	int3   
   140019e1a:	int3   
   140019e1b:	int3   
   140019e1c:	int3   
   140019e1d:	int3   
   140019e1e:	int3   
   140019e1f:	int3   
   140019e20:	mov    rax,rcx
   140019e23:	ret    
   140019e24:	int3   
   140019e25:	int3   
   140019e26:	int3   
   140019e27:	int3   
   140019e28:	int3   
   140019e29:	int3   
   140019e2a:	int3   
   140019e2b:	int3   
   140019e2c:	int3   
   140019e2d:	int3   
   140019e2e:	int3   
   140019e2f:	int3   
   140019e30:	mov    rax,rcx
   140019e33:	ret    
   140019e34:	int3   
   140019e35:	int3   
   140019e36:	int3   
   140019e37:	int3   
   140019e38:	int3   
   140019e39:	int3   
   140019e3a:	int3   
   140019e3b:	int3   
   140019e3c:	int3   
   140019e3d:	int3   
   140019e3e:	int3   
   140019e3f:	int3   
   140019e40:	mov    rax,QWORD PTR [rcx]
   140019e43:	ret    
   140019e44:	int3   
   140019e45:	int3   
   140019e46:	int3   
   140019e47:	int3   
   140019e48:	int3   
   140019e49:	int3   
   140019e4a:	int3   
   140019e4b:	int3   
   140019e4c:	int3   
   140019e4d:	int3   
   140019e4e:	int3   
   140019e4f:	int3   
   140019e50:	mov    rax,QWORD PTR [rcx]
   140019e53:	ret    
   140019e54:	int3   
   140019e55:	int3   
   140019e56:	int3   
   140019e57:	int3   
   140019e58:	int3   
   140019e59:	int3   
   140019e5a:	int3   
   140019e5b:	int3   
   140019e5c:	int3   
   140019e5d:	int3   
   140019e5e:	int3   
   140019e5f:	int3   
   140019e60:	mov    rax,QWORD PTR [rcx]
   140019e63:	ret    
   140019e64:	int3   
   140019e65:	int3   
   140019e66:	int3   
   140019e67:	int3   
   140019e68:	int3   
   140019e69:	int3   
   140019e6a:	int3   
   140019e6b:	int3   
   140019e6c:	int3   
   140019e6d:	int3   
   140019e6e:	int3   
   140019e6f:	int3   
   140019e70:	mov    rax,QWORD PTR [rcx]
   140019e73:	mov    QWORD PTR [rdx],rax
   140019e76:	mov    rax,QWORD PTR [rax]
   140019e79:	mov    QWORD PTR [rcx],rax
   140019e7c:	mov    rax,rdx
   140019e7f:	ret    
   140019e80:	mov    rax,QWORD PTR [rcx]
   140019e83:	mov    rdx,QWORD PTR [rax]
   140019e86:	mov    rax,rcx
   140019e89:	mov    QWORD PTR [rcx],rdx
   140019e8c:	ret    
   140019e8d:	int3   
   140019e8e:	int3   
   140019e8f:	int3   
   140019e90:	mov    rax,QWORD PTR [rcx]
   140019e93:	mov    rdx,QWORD PTR [rax]
   140019e96:	mov    rax,rcx
   140019e99:	mov    QWORD PTR [rcx],rdx
   140019e9c:	ret    
   140019e9d:	int3   
   140019e9e:	int3   
   140019e9f:	int3   
   140019ea0:	mov    rax,QWORD PTR [rcx]
   140019ea3:	mov    rdx,QWORD PTR [rax]
   140019ea6:	mov    rax,rcx
   140019ea9:	mov    QWORD PTR [rcx],rdx
   140019eac:	ret    
   140019ead:	int3   
   140019eae:	int3   
   140019eaf:	int3   
   140019eb0:	mov    rax,QWORD PTR [rcx]
   140019eb3:	mov    rdx,QWORD PTR [rax]
   140019eb6:	mov    rax,rcx
   140019eb9:	mov    QWORD PTR [rcx],rdx
   140019ebc:	ret    
   140019ebd:	int3   
   140019ebe:	int3   
   140019ebf:	int3   
   140019ec0:	mov    rax,QWORD PTR [rcx]
   140019ec3:	mov    rdx,QWORD PTR [rax+0x8]
   140019ec7:	mov    rax,rcx
   140019eca:	mov    QWORD PTR [rcx],rdx
   140019ecd:	ret    
   140019ece:	int3   
   140019ecf:	int3   
   140019ed0:	mov    rax,QWORD PTR [rcx]
   140019ed3:	mov    QWORD PTR [rdx],rax
   140019ed6:	inc    rax
   140019ed9:	mov    QWORD PTR [rcx],rax
   140019edc:	mov    rax,rdx
   140019edf:	ret    
   140019ee0:	inc    QWORD PTR [rcx]
   140019ee3:	mov    rax,rcx
   140019ee6:	ret    
   140019ee7:	int3   
   140019ee8:	int3   
   140019ee9:	int3   
   140019eea:	int3   
   140019eeb:	int3   
   140019eec:	int3   
   140019eed:	int3   
   140019eee:	int3   
   140019eef:	int3   
   140019ef0:	inc    QWORD PTR [rcx]
   140019ef3:	mov    rax,rcx
   140019ef6:	ret    
   140019ef7:	int3   
   140019ef8:	int3   
   140019ef9:	int3   
   140019efa:	int3   
   140019efb:	int3   
   140019efc:	int3   
   140019efd:	int3   
   140019efe:	int3   
   140019eff:	int3   
   140019f00:	add    QWORD PTR [rcx],0x60
   140019f04:	mov    rax,rcx
   140019f07:	ret    
   140019f08:	int3   
   140019f09:	int3   
   140019f0a:	int3   
   140019f0b:	int3   
   140019f0c:	int3   
   140019f0d:	int3   
   140019f0e:	int3   
   140019f0f:	int3   
   140019f10:	add    QWORD PTR [rcx],0x60
   140019f14:	mov    rax,rcx
   140019f17:	ret    
   140019f18:	int3   
   140019f19:	int3   
   140019f1a:	int3   
   140019f1b:	int3   
   140019f1c:	int3   
   140019f1d:	int3   
   140019f1e:	int3   
   140019f1f:	int3   
   140019f20:	mov    rax,QWORD PTR [rcx]
   140019f23:	test   rax,rax
   140019f26:	je     0x140019f2c
   140019f28:	add    rax,0x60
   140019f2c:	mov    rax,QWORD PTR [rax+0x8]
   140019f30:	test   rax,rax
   140019f33:	je     0x140019f40
   140019f35:	add    rax,0xffffffffffffffa0
   140019f39:	mov    QWORD PTR [rcx],rax
   140019f3c:	mov    rax,rcx
   140019f3f:	ret    
   140019f40:	mov    QWORD PTR [rcx],0x0
   140019f47:	mov    rax,rcx
   140019f4a:	ret    
   140019f4b:	int3   
   140019f4c:	int3   
   140019f4d:	int3   
   140019f4e:	int3   
   140019f4f:	int3   
   140019f50:	mov    QWORD PTR [rsp+0x8],rbx
   140019f55:	push   rdi
   140019f56:	sub    rsp,0x20
   140019f5a:	mov    rbx,QWORD PTR [rcx]
   140019f5d:	mov    rdi,rcx
   140019f60:	cmp    DWORD PTR [rbx+0x14],0x5
   140019f64:	jl     0x140019f75
   140019f66:	mov    rcx,rbx
   140019f69:	call   0x14002c670
   140019f6e:	mov    DWORD PTR [rbx+0x14],0x0
   140019f75:	movsxd rdx,DWORD PTR [rbx+0x14]
   140019f79:	mov    r8d,DWORD PTR [rbx+rdx*4]
   140019f7d:	lea    eax,[rdx+0x1]
   140019f80:	mov    DWORD PTR [rbx+0x14],eax
   140019f83:	mov    rbx,QWORD PTR [rsp+0x30]
   140019f88:	mov    DWORD PTR [rdi+0x8],r8d
   140019f8c:	mov    rax,rdi
   140019f8f:	add    rsp,0x20
   140019f93:	pop    rdi
   140019f94:	ret    
   140019f95:	int3   
   140019f96:	int3   
   140019f97:	int3   
   140019f98:	int3   
   140019f99:	int3   
   140019f9a:	int3   
   140019f9b:	int3   
   140019f9c:	int3   
   140019f9d:	int3   
   140019f9e:	int3   
   140019f9f:	int3   
   140019fa0:	rex push rbx
   140019fa2:	sub    rsp,0x20
   140019fa6:	mov    r8,QWORD PTR [rcx+0x58]
   140019faa:	lea    r9,[rcx+0x68]
   140019fae:	lea    rdx,[rcx+0x50]
   140019fb2:	mov    rbx,rcx
   140019fb5:	call   0x140003720
   140019fba:	mov    BYTE PTR [rbx+0x60],al
   140019fbd:	mov    rax,rbx
   140019fc0:	add    rsp,0x20
   140019fc4:	pop    rbx
   140019fc5:	ret    
   140019fc6:	int3   
   140019fc7:	int3   
   140019fc8:	int3   
   140019fc9:	int3   
   140019fca:	int3   
   140019fcb:	int3   
   140019fcc:	int3   
   140019fcd:	int3   
   140019fce:	int3   
   140019fcf:	int3   
   140019fd0:	mov    BYTE PTR [rcx+0x8],0x0
   140019fd4:	mov    rax,rcx
   140019fd7:	ret    
   140019fd8:	int3   
   140019fd9:	int3   
   140019fda:	int3   
   140019fdb:	int3   
   140019fdc:	int3   
   140019fdd:	int3   
   140019fde:	int3   
   140019fdf:	int3   
   140019fe0:	inc    QWORD PTR [rcx]
   140019fe3:	mov    rax,rcx
   140019fe6:	ret    
   140019fe7:	int3   
   140019fe8:	int3   
   140019fe9:	int3   
   140019fea:	int3   
   140019feb:	int3   
   140019fec:	int3   
   140019fed:	int3   
   140019fee:	int3   
   140019fef:	int3   
   140019ff0:	mov    BYTE PTR [rcx+0x8],0x0
   140019ff4:	mov    rax,rcx
   140019ff7:	ret    
   140019ff8:	int3   
   140019ff9:	int3   
   140019ffa:	int3   
   140019ffb:	int3   
   140019ffc:	int3   
   140019ffd:	int3   
   140019ffe:	int3   
   140019fff:	int3   
   14001a000:	mov    BYTE PTR [rcx+0x10],0x0
   14001a004:	mov    rax,rcx
   14001a007:	ret    
   14001a008:	int3   
   14001a009:	int3   
   14001a00a:	int3   
   14001a00b:	int3   
   14001a00c:	int3   
   14001a00d:	int3   
   14001a00e:	int3   
   14001a00f:	int3   
   14001a010:	mov    rax,QWORD PTR [rcx]
   14001a013:	test   rax,rax
   14001a016:	je     0x14001a01c
   14001a018:	add    rax,0x60
   14001a01c:	mov    rax,QWORD PTR [rax+0x8]
   14001a020:	test   rax,rax
   14001a023:	je     0x14001a030
   14001a025:	add    rax,0xffffffffffffffa0
   14001a029:	mov    QWORD PTR [rcx],rax
   14001a02c:	mov    rax,rcx
   14001a02f:	ret    
   14001a030:	mov    QWORD PTR [rcx],0x0
   14001a037:	mov    rax,rcx
   14001a03a:	ret    
   14001a03b:	int3   
   14001a03c:	int3   
   14001a03d:	int3   
   14001a03e:	int3   
   14001a03f:	int3   
   14001a040:	add    QWORD PTR [rcx],0x60
   14001a044:	mov    rax,rcx
   14001a047:	ret    
   14001a048:	int3   
   14001a049:	int3   
   14001a04a:	int3   
   14001a04b:	int3   
   14001a04c:	int3   
   14001a04d:	int3   
   14001a04e:	int3   
   14001a04f:	int3   
   14001a050:	mov    rax,QWORD PTR [rcx]
   14001a053:	mov    rdx,QWORD PTR [rax+0x8]
   14001a057:	mov    rax,rcx
   14001a05a:	mov    QWORD PTR [rcx],rdx
   14001a05d:	ret    
   14001a05e:	int3   
   14001a05f:	int3   
   14001a060:	mov    rax,QWORD PTR [rcx]
   14001a063:	mov    rdx,QWORD PTR [rax+0x8]
   14001a067:	mov    rax,rcx
   14001a06a:	mov    QWORD PTR [rcx],rdx
   14001a06d:	ret    
   14001a06e:	int3   
   14001a06f:	int3   
   14001a070:	mov    rax,QWORD PTR [rcx]
   14001a073:	mov    rdx,QWORD PTR [rax+0x8]
   14001a077:	mov    rax,rcx
   14001a07a:	mov    QWORD PTR [rcx],rdx
   14001a07d:	ret    
   14001a07e:	int3   
   14001a07f:	int3   
   14001a080:	mov    rax,QWORD PTR [rcx]
   14001a083:	mov    rdx,QWORD PTR [rax+0x8]
   14001a087:	mov    rax,rcx
   14001a08a:	mov    QWORD PTR [rcx],rdx
   14001a08d:	ret    
   14001a08e:	int3   
   14001a08f:	int3   
   14001a090:	mov    rax,QWORD PTR [rcx]
   14001a093:	mov    rdx,QWORD PTR [rax+0x8]
   14001a097:	mov    rax,rcx
   14001a09a:	mov    QWORD PTR [rcx],rdx
   14001a09d:	ret    
   14001a09e:	int3   
   14001a09f:	int3   
   14001a0a0:	mov    rax,QWORD PTR [rcx]
   14001a0a3:	mov    rdx,QWORD PTR [rax+0x8]
   14001a0a7:	mov    rax,rcx
   14001a0aa:	mov    QWORD PTR [rcx],rdx
   14001a0ad:	ret    
   14001a0ae:	int3   
   14001a0af:	int3   
   14001a0b0:	dec    QWORD PTR [rcx]
   14001a0b3:	mov    rax,rcx
   14001a0b6:	ret    
   14001a0b7:	int3   
   14001a0b8:	int3   
   14001a0b9:	int3   
   14001a0ba:	int3   
   14001a0bb:	int3   
   14001a0bc:	int3   
   14001a0bd:	int3   
   14001a0be:	int3   
   14001a0bf:	int3   
   14001a0c0:	mov    rax,QWORD PTR [rcx]
   14001a0c3:	sub    rax,QWORD PTR [rdx]
   14001a0c6:	ret    
   14001a0c7:	int3   
   14001a0c8:	int3   
   14001a0c9:	int3   
   14001a0ca:	int3   
   14001a0cb:	int3   
   14001a0cc:	int3   
   14001a0cd:	int3   
   14001a0ce:	int3   
   14001a0cf:	int3   
   14001a0d0:	mov    rax,QWORD PTR [rcx]
   14001a0d3:	sub    rax,QWORD PTR [rdx]
   14001a0d6:	ret    
   14001a0d7:	int3   
   14001a0d8:	int3   
   14001a0d9:	int3   
   14001a0da:	int3   
   14001a0db:	int3   
   14001a0dc:	int3   
   14001a0dd:	int3   
   14001a0de:	int3   
   14001a0df:	int3   
   14001a0e0:	mov    r8,QWORD PTR [rcx]
   14001a0e3:	movabs rax,0x2aaaaaaaaaaaaaab
   14001a0ed:	sub    r8,QWORD PTR [rdx]
   14001a0f0:	imul   r8
   14001a0f3:	sar    rdx,0x4
   14001a0f7:	mov    rax,rdx
   14001a0fa:	shr    rax,0x3f
   14001a0fe:	add    rax,rdx
   14001a101:	ret    
   14001a102:	int3   
   14001a103:	int3   
   14001a104:	int3   
   14001a105:	int3   
   14001a106:	int3   
   14001a107:	int3   
   14001a108:	int3   
   14001a109:	int3   
   14001a10a:	int3   
   14001a10b:	int3   
   14001a10c:	int3   
   14001a10d:	int3   
   14001a10e:	int3   
   14001a10f:	int3   
   14001a110:	mov    r8,QWORD PTR [rcx]
   14001a113:	movabs rax,0x2aaaaaaaaaaaaaab
   14001a11d:	sub    r8,QWORD PTR [rdx]
   14001a120:	imul   r8
   14001a123:	sar    rdx,0x4
   14001a127:	mov    rax,rdx
   14001a12a:	shr    rax,0x3f
   14001a12e:	add    rax,rdx
   14001a131:	ret    
   14001a132:	int3   
   14001a133:	int3   
   14001a134:	int3   
   14001a135:	int3   
   14001a136:	int3   
   14001a137:	int3   
   14001a138:	int3   
   14001a139:	int3   
   14001a13a:	int3   
   14001a13b:	int3   
   14001a13c:	int3   
   14001a13d:	int3   
   14001a13e:	int3   
   14001a13f:	int3   
   14001a140:	sub    rsp,0x28
   14001a144:	movups xmm0,XMMWORD PTR [rcx]
   14001a147:	movsd  xmm1,QWORD PTR [rcx+0x10]
   14001a14c:	movq   rax,xmm0
   14001a151:	movups XMMWORD PTR [rsp],xmm0
   14001a155:	sub    rax,r8
   14001a158:	mov    QWORD PTR [rsp],rax
   14001a15c:	movups xmm0,XMMWORD PTR [rsp]
   14001a160:	mov    rax,rdx
   14001a163:	movups XMMWORD PTR [rdx],xmm0
   14001a166:	movsd  QWORD PTR [rdx+0x10],xmm1
   14001a16b:	add    rsp,0x28
   14001a16f:	ret    
   14001a170:	rex push rdi
   14001a172:	sub    rsp,0x50
   14001a176:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14001a17f:	mov    QWORD PTR [rsp+0x60],rbx
   14001a184:	mov    rbx,r8
   14001a187:	mov    rdi,rcx
   14001a18a:	mov    DWORD PTR [rsp+0x20],0x0
   14001a192:	lea    rcx,[rsp+0x30]
   14001a197:	call   QWORD PTR [rip+0x1c3cb]        # 0x140036568
   14001a19d:	nop
   14001a19e:	mov    rdx,rbx
   14001a1a1:	mov    rcx,rax
   14001a1a4:	call   QWORD PTR [rip+0x1c3c6]        # 0x140036570
   14001a1aa:	mov    rdx,rax
   14001a1ad:	mov    rcx,rdi
   14001a1b0:	call   QWORD PTR [rip+0x1c3b2]        # 0x140036568
   14001a1b6:	nop
   14001a1b7:	lea    rcx,[rsp+0x30]
   14001a1bc:	call   QWORD PTR [rip+0x1c376]        # 0x140036538
   14001a1c2:	mov    rax,rdi
   14001a1c5:	mov    rbx,QWORD PTR [rsp+0x60]
   14001a1ca:	add    rsp,0x50
   14001a1ce:	pop    rdi
   14001a1cf:	ret    
   14001a1d0:	mov    rdx,QWORD PTR [rdx]
   14001a1d3:	cmp    QWORD PTR [rcx],rdx
   14001a1d6:	setb   al
   14001a1d9:	ret    
   14001a1da:	int3   
   14001a1db:	int3   
   14001a1dc:	int3   
   14001a1dd:	int3   
   14001a1de:	int3   
   14001a1df:	int3   
   14001a1e0:	test   dl,dl
   14001a1e2:	sete   al
   14001a1e5:	ret    
   14001a1e6:	int3   
   14001a1e7:	int3   
   14001a1e8:	int3   
   14001a1e9:	int3   
   14001a1ea:	int3   
   14001a1eb:	int3   
   14001a1ec:	int3   
   14001a1ed:	int3   
   14001a1ee:	int3   
   14001a1ef:	int3   
   14001a1f0:	lea    eax,[rdx+r8*1]
   14001a1f4:	ret    
   14001a1f5:	int3   
   14001a1f6:	int3   
   14001a1f7:	int3   
   14001a1f8:	int3   
   14001a1f9:	int3   
   14001a1fa:	int3   
   14001a1fb:	int3   
   14001a1fc:	int3   
   14001a1fd:	int3   
   14001a1fe:	int3   
   14001a1ff:	int3   
   14001a200:	lea    eax,[rdx+r8*1]
   14001a204:	ret    
   14001a205:	int3   
   14001a206:	int3   
   14001a207:	int3   
   14001a208:	int3   
   14001a209:	int3   
   14001a20a:	int3   
   14001a20b:	int3   
   14001a20c:	int3   
   14001a20d:	int3   
   14001a20e:	int3   
   14001a20f:	int3   
   14001a210:	mov    QWORD PTR [rsp+0x20],rbp
   14001a215:	push   rsi
   14001a216:	push   rdi
   14001a217:	push   r12
   14001a219:	push   r13
   14001a21b:	push   r14
   14001a21d:	sub    rsp,0x20
   14001a221:	mov    r8d,DWORD PTR [rcx+0x1c]
   14001a225:	movzx  r9d,BYTE PTR [rsp+0x50]
   14001a22b:	mov    rbp,rdx
   14001a22e:	mov    edx,DWORD PTR [rcx+0x18]
   14001a231:	mov    r14,rcx
   14001a234:	mov    rcx,QWORD PTR [rcx+0x10]
   14001a238:	xor    r13d,r13d
   14001a23b:	mov    edi,r13d
   14001a23e:	call   0x1400098e0
   14001a243:	lea    rcx,[rbp+0x10]
   14001a247:	mov    r12,rcx
   14001a24a:	mov    edx,eax
   14001a24c:	mov    rsi,rbp
   14001a24f:	sub    r12,rbp
   14001a252:	cmp    rbp,rcx
   14001a255:	cmova  r12,r13
   14001a259:	test   r12,r12
   14001a25c:	je     0x14001a2b8
   14001a25e:	mov    QWORD PTR [rsp+0x58],rbx
   14001a263:	movzx  ebx,BYTE PTR [rsp+0x50]
   14001a268:	mov    QWORD PTR [rsp+0x60],r15
   14001a26d:	mov    r15,rbp
   14001a270:	neg    r15
   14001a273:	cmp    edi,0x4
   14001a276:	jne    0x14001a292
   14001a278:	mov    r8d,DWORD PTR [r14+0x1c]
   14001a27c:	mov    edx,DWORD PTR [r14+0x18]
   14001a280:	mov    rcx,QWORD PTR [r14+0x10]
   14001a284:	movzx  r9d,bl
   14001a288:	call   0x1400098e0
   14001a28d:	mov    edi,r13d
   14001a290:	mov    edx,eax
   14001a292:	lea    ecx,[rdi*8+0x0]
   14001a299:	mov    eax,edx
   14001a29b:	inc    rsi
   14001a29e:	shr    eax,cl
   14001a2a0:	inc    edi
   14001a2a2:	mov    BYTE PTR [rsi-0x1],al
   14001a2a5:	lea    rax,[r15+rsi*1]
   14001a2a9:	cmp    rax,r12
   14001a2ac:	jne    0x14001a273
   14001a2ae:	mov    r15,QWORD PTR [rsp+0x60]
   14001a2b3:	mov    rbx,QWORD PTR [rsp+0x58]
   14001a2b8:	and    BYTE PTR [rbp+0x8],0x3f
   14001a2bc:	or     BYTE PTR [rbp+0x8],0x80
   14001a2c0:	and    BYTE PTR [rbp+0x6],0xf
   14001a2c4:	or     BYTE PTR [rbp+0x6],0x40
   14001a2c8:	mov    rax,rbp
   14001a2cb:	mov    rbp,QWORD PTR [rsp+0x68]
   14001a2d0:	add    rsp,0x20
   14001a2d4:	pop    r14
   14001a2d6:	pop    r13
   14001a2d8:	pop    r12
   14001a2da:	pop    rdi
   14001a2db:	pop    rsi
   14001a2dc:	ret    
   14001a2dd:	int3   
   14001a2de:	int3   
   14001a2df:	int3   
   14001a2e0:	mov    rax,QWORD PTR [rcx]
   14001a2e3:	mov    DWORD PTR [rax],0x0
   14001a2e9:	ret    
   14001a2ea:	int3   
   14001a2eb:	int3   
   14001a2ec:	int3   
   14001a2ed:	int3   
   14001a2ee:	int3   
   14001a2ef:	int3   
   14001a2f0:	mov    rax,rdx
   14001a2f3:	ret    
   14001a2f4:	int3   
   14001a2f5:	int3   
   14001a2f6:	int3   
   14001a2f7:	int3   
   14001a2f8:	int3   
   14001a2f9:	int3   
   14001a2fa:	int3   
   14001a2fb:	int3   
   14001a2fc:	int3   
   14001a2fd:	int3   
   14001a2fe:	int3   
   14001a2ff:	int3   
   14001a300:	sub    rsp,0x38
   14001a304:	movzx  eax,BYTE PTR [rsp+0x40]
   14001a309:	mov    r8,QWORD PTR [rcx+0x10]
   14001a30d:	mov    rdx,QWORD PTR [rcx+0x8]
   14001a311:	mov    rcx,QWORD PTR [rcx]
   14001a314:	movzx  r9d,BYTE PTR [rsp+0x40]
   14001a31a:	mov    BYTE PTR [rsp+0x20],al
   14001a31e:	call   0x140007490
   14001a323:	add    rsp,0x38
   14001a327:	ret    
   14001a328:	int3   
   14001a329:	int3   
   14001a32a:	int3   
   14001a32b:	int3   
   14001a32c:	int3   
   14001a32d:	int3   
   14001a32e:	int3   
   14001a32f:	int3   
   14001a330:	mov    rcx,QWORD PTR [rcx]
   14001a333:	jmp    0x140006e60
   14001a338:	int3   
   14001a339:	int3   
   14001a33a:	int3   
   14001a33b:	int3   
   14001a33c:	int3   
   14001a33d:	int3   
   14001a33e:	int3   
   14001a33f:	int3   
   14001a340:	mov    rcx,QWORD PTR [rcx]
   14001a343:	jmp    0x140006e90
   14001a348:	int3   
   14001a349:	int3   
   14001a34a:	int3   
   14001a34b:	int3   
   14001a34c:	int3   
   14001a34d:	int3   
   14001a34e:	int3   
   14001a34f:	int3   
   14001a350:	lea    rcx,[rip+0x24419]        # 0x14003e770
   14001a357:	movsx  rax,dl
   14001a35b:	movzx  eax,BYTE PTR [rax+rcx*1]
   14001a35f:	ret    
   14001a360:	sub    rsp,0x48
   14001a364:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001a36d:	mov    rax,QWORD PTR [rcx]
   14001a370:	test   rax,rax
   14001a373:	jne    0x14001a3a8
   14001a375:	lea    rax,[rip+0x2051c]        # 0x14003a898
   14001a37c:	mov    QWORD PTR [rsp+0x50],rax
   14001a381:	lea    rdx,[rsp+0x50]
   14001a386:	lea    rcx,[rsp+0x28]
   14001a38b:	call   QWORD PTR [rip+0x1c0bf]        # 0x140036450
   14001a391:	lea    rax,[rip+0x204f0]        # 0x14003a888
   14001a398:	mov    QWORD PTR [rsp+0x28],rax
   14001a39d:	lea    rcx,[rsp+0x28]
   14001a3a2:	call   0x14000deb0
   14001a3a7:	nop
   14001a3a8:	and    rax,0xfffffffffffffffe
   14001a3ac:	add    rcx,0x8
   14001a3b0:	add    rsp,0x48
   14001a3b4:	rex.W jmp QWORD PTR [rax+0x8]
   14001a3b8:	int3   
   14001a3b9:	int3   
   14001a3ba:	int3   
   14001a3bb:	int3   
   14001a3bc:	int3   
   14001a3bd:	int3   
   14001a3be:	int3   
   14001a3bf:	int3   
   14001a3c0:	mov    rcx,QWORD PTR [r8]
   14001a3c3:	cmp    QWORD PTR [rdx],rcx
   14001a3c6:	setb   al
   14001a3c9:	ret    
   14001a3ca:	int3   
   14001a3cb:	int3   
   14001a3cc:	int3   
   14001a3cd:	int3   
   14001a3ce:	int3   
   14001a3cf:	int3   
   14001a3d0:	sub    rsp,0x28
   14001a3d4:	mov    rcx,rdx
   14001a3d7:	mov    rdx,r8
   14001a3da:	call   0x140020910
   14001a3df:	test   eax,eax
   14001a3e1:	sets   al
   14001a3e4:	add    rsp,0x28
   14001a3e8:	ret    
   14001a3e9:	int3   
   14001a3ea:	int3   
   14001a3eb:	int3   
   14001a3ec:	int3   
   14001a3ed:	int3   
   14001a3ee:	int3   
   14001a3ef:	int3   
   14001a3f0:	mov    eax,DWORD PTR [rcx+0x8]
   14001a3f3:	mov    rcx,QWORD PTR [rcx]
   14001a3f6:	cmp    eax,0x1
   14001a3f9:	jne    0x14001a417
   14001a3fb:	mov    eax,DWORD PTR [rcx+0x68]
   14001a3fe:	test   al,0x2
   14001a400:	jne    0x14001a438
   14001a402:	or     eax,0x2
   14001a405:	mov    edx,0x1
   14001a40a:	mov    DWORD PTR [rcx+0x68],eax
   14001a40d:	mov    rax,QWORD PTR [rcx]
   14001a410:	rex.W jmp QWORD PTR [rax+0x80]
   14001a417:	cmp    eax,0x2
   14001a41a:	jne    0x14001a438
   14001a41c:	mov    eax,DWORD PTR [rcx+0x68]
   14001a41f:	test   al,0x4
   14001a421:	jne    0x14001a438
   14001a423:	or     eax,0x4
   14001a426:	mov    edx,0x2
   14001a42b:	mov    DWORD PTR [rcx+0x68],eax
   14001a42e:	mov    rax,QWORD PTR [rcx]
   14001a431:	rex.W jmp QWORD PTR [rax+0x80]
   14001a438:	ret    
   14001a439:	int3   
   14001a43a:	int3   
   14001a43b:	int3   
   14001a43c:	int3   
   14001a43d:	int3   
   14001a43e:	int3   
   14001a43f:	int3   
   14001a440:	rex push rbx
   14001a442:	sub    rsp,0x20
   14001a446:	cmp    QWORD PTR [rcx+0x9c0],0x270
   14001a451:	mov    rbx,rcx
   14001a454:	jne    0x14001a45b
   14001a456:	call   0x14002d5e0
   14001a45b:	mov    rax,QWORD PTR [rbx+0x9c0]
   14001a462:	inc    rax
   14001a465:	mov    edx,DWORD PTR [rbx+rax*4-0x4]
   14001a469:	mov    QWORD PTR [rbx+0x9c0],rax
   14001a470:	mov    eax,edx
   14001a472:	shr    eax,0xb
   14001a475:	xor    edx,eax
   14001a477:	mov    eax,edx
   14001a479:	and    eax,0xff3a58ad
   14001a47e:	shl    eax,0x7
   14001a481:	xor    edx,eax
   14001a483:	mov    eax,edx
   14001a485:	and    eax,0xffffdf8c
   14001a48a:	shl    eax,0xf
   14001a48d:	xor    edx,eax
   14001a48f:	mov    eax,edx
   14001a491:	shr    eax,0x12
   14001a494:	xor    eax,edx
   14001a496:	add    rsp,0x20
   14001a49a:	pop    rbx
   14001a49b:	ret    
   14001a49c:	int3   
   14001a49d:	int3   
   14001a49e:	int3   
   14001a49f:	int3   
   14001a4a0:	rex push rsi
   14001a4a2:	sub    rsp,0x20
   14001a4a6:	mov    rsi,QWORD PTR [rcx]
   14001a4a9:	cmp    BYTE PTR [rsi+0x10],0x0
   14001a4ad:	je     0x14001a4ee
   14001a4af:	mov    QWORD PTR [rsp+0x30],rbx
   14001a4b4:	mov    rbx,QWORD PTR [rsi+0x8]
   14001a4b8:	test   rbx,rbx
   14001a4bb:	je     0x14001a4e5
   14001a4bd:	lock dec DWORD PTR [rbx+0x8]
   14001a4c1:	mov    QWORD PTR [rsp+0x38],rdi
   14001a4c6:	jne    0x14001a4e0
   14001a4c8:	mov    rax,QWORD PTR [rbx]
   14001a4cb:	mov    rcx,rbx
   14001a4ce:	call   QWORD PTR [rax+0x8]
   14001a4d1:	lock dec DWORD PTR [rbx+0xc]
   14001a4d5:	jne    0x14001a4e0
   14001a4d7:	mov    rax,QWORD PTR [rbx]
   14001a4da:	mov    rcx,rbx
   14001a4dd:	call   QWORD PTR [rax+0x10]
   14001a4e0:	mov    rdi,QWORD PTR [rsp+0x38]
   14001a4e5:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a4ea:	mov    BYTE PTR [rsi+0x10],0x0
   14001a4ee:	add    rsp,0x20
   14001a4f2:	pop    rsi
   14001a4f3:	ret    
   14001a4f4:	int3   
   14001a4f5:	int3   
   14001a4f6:	int3   
   14001a4f7:	int3   
   14001a4f8:	int3   
   14001a4f9:	int3   
   14001a4fa:	int3   
   14001a4fb:	int3   
   14001a4fc:	int3   
   14001a4fd:	int3   
   14001a4fe:	int3   
   14001a4ff:	int3   
   14001a500:	rex push rsi
   14001a502:	sub    rsp,0x20
   14001a506:	mov    rsi,QWORD PTR [rcx]
   14001a509:	cmp    BYTE PTR [rsi+0x10],0x0
   14001a50d:	je     0x14001a54e
   14001a50f:	mov    QWORD PTR [rsp+0x30],rbx
   14001a514:	mov    rbx,QWORD PTR [rsi+0x8]
   14001a518:	test   rbx,rbx
   14001a51b:	je     0x14001a545
   14001a51d:	lock dec DWORD PTR [rbx+0x8]
   14001a521:	mov    QWORD PTR [rsp+0x38],rdi
   14001a526:	jne    0x14001a540
   14001a528:	mov    rax,QWORD PTR [rbx]
   14001a52b:	mov    rcx,rbx
   14001a52e:	call   QWORD PTR [rax+0x8]
   14001a531:	lock dec DWORD PTR [rbx+0xc]
   14001a535:	jne    0x14001a540
   14001a537:	mov    rax,QWORD PTR [rbx]
   14001a53a:	mov    rcx,rbx
   14001a53d:	call   QWORD PTR [rax+0x10]
   14001a540:	mov    rdi,QWORD PTR [rsp+0x38]
   14001a545:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a54a:	mov    BYTE PTR [rsi+0x10],0x0
   14001a54e:	add    rsp,0x20
   14001a552:	pop    rsi
   14001a553:	ret    
   14001a554:	int3   
   14001a555:	int3   
   14001a556:	int3   
   14001a557:	int3   
   14001a558:	int3   
   14001a559:	int3   
   14001a55a:	int3   
   14001a55b:	int3   
   14001a55c:	int3   
   14001a55d:	int3   
   14001a55e:	int3   
   14001a55f:	int3   
   14001a560:	mov    rax,QWORD PTR [rcx]
   14001a563:	cmp    BYTE PTR [rax+0x1],0x0
   14001a567:	je     0x14001a56d
   14001a569:	mov    BYTE PTR [rax+0x1],0x0
   14001a56d:	ret    
   14001a56e:	int3   
   14001a56f:	int3   
   14001a570:	mov    rax,QWORD PTR [rcx]
   14001a573:	cmp    BYTE PTR [rax+0x8],0x0
   14001a577:	je     0x14001a57d
   14001a579:	mov    BYTE PTR [rax+0x8],0x0
   14001a57d:	ret    
   14001a57e:	int3   
   14001a57f:	int3   
   14001a580:	sub    edx,r8d
   14001a583:	mov    eax,edx
   14001a585:	ret    
   14001a586:	int3   
   14001a587:	int3   
   14001a588:	int3   
   14001a589:	int3   
   14001a58a:	int3   
   14001a58b:	int3   
   14001a58c:	int3   
   14001a58d:	int3   
   14001a58e:	int3   
   14001a58f:	int3   
   14001a590:	sub    edx,r8d
   14001a593:	mov    eax,edx
   14001a595:	ret    
   14001a596:	int3   
   14001a597:	int3   
   14001a598:	int3   
   14001a599:	int3   
   14001a59a:	int3   
   14001a59b:	int3   
   14001a59c:	int3   
   14001a59d:	int3   
   14001a59e:	int3   
   14001a59f:	int3   
   14001a5a0:	mov    rax,rsp
   14001a5a3:	sub    rsp,0xd8
   14001a5aa:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   14001a5b3:	movdqa xmm0,XMMWORD PTR [rip+0x25465]        # 0x14003fa20
   14001a5bb:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   14001a5c1:	movdqa xmm1,xmm0
   14001a5c5:	movdqa XMMWORD PTR [rax-0x78],xmm1
   14001a5ca:	movdqa xmm0,XMMWORD PTR [rip+0x253de]        # 0x14003f9b0
   14001a5d2:	movdqa XMMWORD PTR [rax-0x68],xmm0
   14001a5d7:	movdqa xmm1,XMMWORD PTR [rip+0x25411]        # 0x14003f9f0
   14001a5df:	movdqa XMMWORD PTR [rax-0x58],xmm1
   14001a5e4:	movdqa xmm0,XMMWORD PTR [rip+0x253a4]        # 0x14003f990
   14001a5ec:	movdqa XMMWORD PTR [rax-0x48],xmm0
   14001a5f1:	movdqa xmm1,XMMWORD PTR [rip+0x25407]        # 0x14003fa00
   14001a5f9:	movdqa XMMWORD PTR [rax-0x38],xmm1
   14001a5fe:	movdqa xmm0,XMMWORD PTR [rip+0x2539a]        # 0x14003f9a0
   14001a606:	movdqa XMMWORD PTR [rax-0x28],xmm0
   14001a60b:	movdqa xmm1,XMMWORD PTR [rip+0x253fd]        # 0x14003fa10
   14001a613:	movdqa XMMWORD PTR [rax-0x18],xmm1
   14001a618:	movsx  eax,dl
   14001a61b:	cmp    eax,0x7f
   14001a61e:	ja     0x14001a629
   14001a620:	movzx  eax,BYTE PTR [rsp+rax*1+0x50]
   14001a625:	cmp    al,0xff
   14001a627:	jne    0x14001a653
   14001a629:	lea    rcx,[rsp+0x20]
   14001a62e:	call   QWORD PTR [rip+0x1be24]        # 0x140036458
   14001a634:	lea    rax,[rip+0x206b5]        # 0x14003acf0
   14001a63b:	mov    QWORD PTR [rsp+0x20],rax
   14001a640:	mov    DWORD PTR [rsp+0x38],0x1
   14001a648:	lea    rcx,[rsp+0x20]
   14001a64d:	call   0x14000df30
   14001a652:	nop
   14001a653:	add    rsp,0xd8
   14001a65a:	ret    
   14001a65b:	int3   
   14001a65c:	int3   
   14001a65d:	int3   
   14001a65e:	int3   
   14001a65f:	int3   
   14001a660:	mov    r8d,DWORD PTR [rcx+0xc]
   14001a664:	mov    edx,DWORD PTR [rcx+0x8]
   14001a667:	movzx  r9d,BYTE PTR [rsp+0x8]
   14001a66d:	mov    rcx,QWORD PTR [rcx]
   14001a670:	jmp    0x1400098e0
   14001a675:	int3   
   14001a676:	int3   
   14001a677:	int3   
   14001a678:	int3   
   14001a679:	int3   
   14001a67a:	int3   
   14001a67b:	int3   
   14001a67c:	int3   
   14001a67d:	int3   
   14001a67e:	int3   
   14001a67f:	int3   
   14001a680:	mov    eax,DWORD PTR [rcx]
   14001a682:	mov    r8,rdx
   14001a685:	cmp    eax,0x1
   14001a688:	jne    0x14001a6a9
   14001a68a:	mov    eax,DWORD PTR [rdx+0x68]
   14001a68d:	test   al,0x2
   14001a68f:	jne    0x14001a6cd
   14001a691:	or     eax,0x2
   14001a694:	mov    rcx,r8
   14001a697:	mov    DWORD PTR [rdx+0x68],eax
   14001a69a:	mov    rax,QWORD PTR [rdx]
   14001a69d:	mov    edx,0x1
   14001a6a2:	rex.W jmp QWORD PTR [rax+0x80]
   14001a6a9:	cmp    eax,0x2
   14001a6ac:	jne    0x14001a6cd
   14001a6ae:	mov    eax,DWORD PTR [rdx+0x68]
   14001a6b1:	test   al,0x4
   14001a6b3:	jne    0x14001a6cd
   14001a6b5:	or     eax,0x4
   14001a6b8:	mov    rcx,r8
   14001a6bb:	mov    DWORD PTR [rdx+0x68],eax
   14001a6be:	mov    rax,QWORD PTR [rdx]
   14001a6c1:	mov    edx,0x2
   14001a6c6:	rex.W jmp QWORD PTR [rax+0x80]
   14001a6cd:	ret    
   14001a6ce:	int3   
   14001a6cf:	int3   
   14001a6d0:	rex push rbx
   14001a6d2:	sub    rsp,0x20
   14001a6d6:	cmp    DWORD PTR [rcx+0x14],0x5
   14001a6da:	mov    rbx,rcx
   14001a6dd:	jl     0x14001a6eb
   14001a6df:	call   0x14002c670
   14001a6e4:	mov    DWORD PTR [rbx+0x14],0x0
   14001a6eb:	movsxd rdx,DWORD PTR [rbx+0x14]
   14001a6ef:	mov    eax,DWORD PTR [rbx+rdx*4]
   14001a6f2:	inc    edx
   14001a6f4:	mov    DWORD PTR [rbx+0x14],edx
   14001a6f7:	add    rsp,0x20
   14001a6fb:	pop    rbx
   14001a6fc:	ret    
   14001a6fd:	int3   
   14001a6fe:	int3   
   14001a6ff:	int3   
   14001a700:	or     ecx,edx
   14001a702:	mov    eax,ecx
   14001a704:	ret    
   14001a705:	int3   
   14001a706:	int3   
   14001a707:	int3   
   14001a708:	int3   
   14001a709:	int3   
   14001a70a:	int3   
   14001a70b:	int3   
   14001a70c:	int3   
   14001a70d:	int3   
   14001a70e:	int3   
   14001a70f:	int3   
   14001a710:	add    QWORD PTR [rcx],rdx
   14001a713:	mov    rax,rcx
   14001a716:	ret    
   14001a717:	int3   
   14001a718:	int3   
   14001a719:	int3   
   14001a71a:	int3   
   14001a71b:	int3   
   14001a71c:	int3   
   14001a71d:	int3   
   14001a71e:	int3   
   14001a71f:	int3   
   14001a720:	add    QWORD PTR [rcx],rdx
   14001a723:	mov    rax,rcx
   14001a726:	ret    
   14001a727:	int3   
   14001a728:	int3   
   14001a729:	int3   
   14001a72a:	int3   
   14001a72b:	int3   
   14001a72c:	int3   
   14001a72d:	int3   
   14001a72e:	int3   
   14001a72f:	int3   
   14001a730:	or     r9,0xffffffffffffffff
   14001a734:	xor    r8d,r8d
   14001a737:	jmp    0x14001eaf0
   14001a73c:	int3   
   14001a73d:	int3   
   14001a73e:	int3   
   14001a73f:	int3   
   14001a740:	movzx  r8d,dl
   14001a744:	mov    edx,0x1
   14001a749:	jmp    0x14001ed80
   14001a74e:	int3   
   14001a74f:	int3   
   14001a750:	cmp    BYTE PTR [rdx],0x0
   14001a753:	jne    0x14001a75d
   14001a755:	xor    r8d,r8d
   14001a758:	jmp    0x14001ec30
   14001a75d:	or     r8,0xffffffffffffffff
   14001a761:	inc    r8
   14001a764:	cmp    BYTE PTR [rdx+r8*1],0x0
   14001a769:	jne    0x14001a761
   14001a76b:	jmp    0x14001ec30
   14001a770:	sub    QWORD PTR [rcx],rdx
   14001a773:	mov    rax,rcx
   14001a776:	ret    
   14001a777:	int3   
   14001a778:	int3   
   14001a779:	int3   
   14001a77a:	int3   
   14001a77b:	int3   
   14001a77c:	int3   
   14001a77d:	int3   
   14001a77e:	int3   
   14001a77f:	int3   
   14001a780:	rex push rbx
   14001a782:	sub    rsp,0x20
   14001a786:	mov    rax,QWORD PTR [rcx]
   14001a789:	lea    rbx,[rcx+0xa8]
   14001a790:	movsxd rcx,DWORD PTR [rax+0x4]
   14001a794:	lea    rax,[rip+0x22365]        # 0x14003cb00
   14001a79b:	mov    QWORD PTR [rcx+rbx*1-0xa8],rax
   14001a7a3:	mov    rax,QWORD PTR [rbx-0xa8]
   14001a7aa:	lea    rcx,[rbx-0xa0]
   14001a7b1:	movsxd rdx,DWORD PTR [rax+0x4]
   14001a7b5:	lea    r8d,[rdx-0xa8]
   14001a7bc:	mov    DWORD PTR [rdx+rbx*1-0xac],r8d
   14001a7c4:	call   0x140016e90
   14001a7c9:	lea    rcx,[rbx-0x98]
   14001a7d0:	call   QWORD PTR [rip+0x1b99a]        # 0x140036170
   14001a7d6:	mov    rax,QWORD PTR [rip+0x1b873]        # 0x140036050
   14001a7dd:	mov    rcx,rbx
   14001a7e0:	mov    QWORD PTR [rbx],rax
   14001a7e3:	mov    rax,QWORD PTR [rip+0x1b876]        # 0x140036060
   14001a7ea:	mov    QWORD PTR [rbx],rax
   14001a7ed:	add    rsp,0x20
   14001a7f1:	pop    rbx
   14001a7f2:	rex.W jmp QWORD PTR [rip+0x1bad7]        # 0x1400362d0
   14001a7f9:	int3   
   14001a7fa:	int3   
   14001a7fb:	int3   
   14001a7fc:	int3   
   14001a7fd:	int3   
   14001a7fe:	int3   
   14001a7ff:	int3   
   14001a800:	rex push rbx
   14001a802:	sub    rsp,0x20
   14001a806:	mov    rax,QWORD PTR [rcx]
   14001a809:	lea    rbx,[rcx+0x88]
   14001a810:	movsxd rcx,DWORD PTR [rax+0x4]
   14001a814:	lea    rax,[rip+0x21985]        # 0x14003c1a0
   14001a81b:	mov    QWORD PTR [rcx+rbx*1-0x88],rax
   14001a823:	mov    rax,QWORD PTR [rbx-0x88]
   14001a82a:	lea    rcx,[rbx-0x80]
   14001a82e:	movsxd rdx,DWORD PTR [rax+0x4]
   14001a832:	lea    r8d,[rdx-0x88]
   14001a839:	mov    DWORD PTR [rdx+rbx*1-0x8c],r8d
   14001a841:	call   0x140017170
   14001a846:	lea    rcx,[rbx-0x78]
   14001a84a:	call   QWORD PTR [rip+0x1b920]        # 0x140036170
   14001a850:	mov    rax,QWORD PTR [rip+0x1b7f9]        # 0x140036050
   14001a857:	mov    rcx,rbx
   14001a85a:	mov    QWORD PTR [rbx],rax
   14001a85d:	mov    rax,QWORD PTR [rip+0x1b7fc]        # 0x140036060
   14001a864:	mov    QWORD PTR [rbx],rax
   14001a867:	add    rsp,0x20
   14001a86b:	pop    rbx
   14001a86c:	rex.W jmp QWORD PTR [rip+0x1ba5d]        # 0x1400362d0
   14001a873:	int3   
   14001a874:	int3   
   14001a875:	int3   
   14001a876:	int3   
   14001a877:	int3   
   14001a878:	int3   
   14001a879:	int3   
   14001a87a:	int3   
   14001a87b:	int3   
   14001a87c:	int3   
   14001a87d:	int3   
   14001a87e:	int3   
   14001a87f:	int3   
   14001a880:	rex push rbx
   14001a882:	sub    rsp,0x20
   14001a886:	mov    rax,QWORD PTR [rcx]
   14001a889:	lea    rbx,[rcx+0x98]
   14001a890:	movsxd rcx,DWORD PTR [rax+0x4]
   14001a894:	lea    rax,[rip+0x201bd]        # 0x14003aa58
   14001a89b:	mov    QWORD PTR [rcx+rbx*1-0x98],rax
   14001a8a3:	mov    rax,QWORD PTR [rbx-0x98]
   14001a8aa:	lea    rcx,[rbx-0x80]
   14001a8ae:	movsxd rdx,DWORD PTR [rax+0x4]
   14001a8b2:	lea    r8d,[rdx-0x98]
   14001a8b9:	mov    DWORD PTR [rdx+rbx*1-0x9c],r8d
   14001a8c1:	call   0x140017170
   14001a8c6:	lea    rcx,[rbx-0x78]
   14001a8ca:	call   QWORD PTR [rip+0x1b850]        # 0x140036120
   14001a8d0:	mov    rax,QWORD PTR [rip+0x1b779]        # 0x140036050
   14001a8d7:	mov    rcx,rbx
   14001a8da:	mov    QWORD PTR [rbx],rax
   14001a8dd:	mov    rax,QWORD PTR [rip+0x1b77c]        # 0x140036060
   14001a8e4:	mov    QWORD PTR [rbx],rax
   14001a8e7:	add    rsp,0x20
   14001a8eb:	pop    rbx
   14001a8ec:	rex.W jmp QWORD PTR [rip+0x1b9dd]        # 0x1400362d0
   14001a8f3:	int3   
   14001a8f4:	int3   
   14001a8f5:	int3   
   14001a8f6:	int3   
   14001a8f7:	int3   
   14001a8f8:	int3   
   14001a8f9:	int3   
   14001a8fa:	int3   
   14001a8fb:	int3   
   14001a8fc:	int3   
   14001a8fd:	int3   
   14001a8fe:	int3   
   14001a8ff:	int3   
   14001a900:	rex push rbx
   14001a902:	sub    rsp,0x20
   14001a906:	mov    rbx,rcx
   14001a909:	call   0x140017420
   14001a90e:	lea    rax,[rip+0x1ff33]        # 0x14003a848
   14001a915:	mov    QWORD PTR [rbx+0x50],rax
   14001a919:	add    rsp,0x20
   14001a91d:	pop    rbx
   14001a91e:	ret    
   14001a91f:	int3   
   14001a920:	rex push rbx
   14001a922:	sub    rsp,0x20
   14001a926:	mov    rbx,rcx
   14001a929:	call   0x1400174b0
   14001a92e:	lea    rax,[rip+0x1ff13]        # 0x14003a848
   14001a935:	mov    QWORD PTR [rbx+0x50],rax
   14001a939:	add    rsp,0x20
   14001a93d:	pop    rbx
   14001a93e:	ret    
   14001a93f:	int3   
   14001a940:	rex push rbx
   14001a942:	sub    rsp,0x20
   14001a946:	mov    rbx,rcx
   14001a949:	call   0x140017540
   14001a94e:	lea    rax,[rip+0x1fef3]        # 0x14003a848
   14001a955:	mov    QWORD PTR [rbx+0x50],rax
   14001a959:	add    rsp,0x20
   14001a95d:	pop    rbx
   14001a95e:	ret    
   14001a95f:	int3   
   14001a960:	rex push rbx
   14001a962:	sub    rsp,0x20
   14001a966:	mov    rbx,rcx
   14001a969:	call   0x1400175d0
   14001a96e:	lea    rax,[rip+0x1fed3]        # 0x14003a848
   14001a975:	mov    QWORD PTR [rbx+0x60],rax
   14001a979:	add    rsp,0x20
   14001a97d:	pop    rbx
   14001a97e:	ret    
   14001a97f:	int3   
   14001a980:	rex push rbx
   14001a982:	sub    rsp,0x20
   14001a986:	mov    rbx,rcx
   14001a989:	call   0x140017660
   14001a98e:	lea    rax,[rip+0x1feb3]        # 0x14003a848
   14001a995:	mov    QWORD PTR [rbx+0x60],rax
   14001a999:	add    rsp,0x20
   14001a99d:	pop    rbx
   14001a99e:	ret    
   14001a99f:	int3   
   14001a9a0:	rex push rbx
   14001a9a2:	sub    rsp,0x20
   14001a9a6:	mov    rbx,rcx
   14001a9a9:	call   0x1400176f0
   14001a9ae:	lea    rax,[rip+0x1fe93]        # 0x14003a848
   14001a9b5:	mov    QWORD PTR [rbx+0x50],rax
   14001a9b9:	add    rsp,0x20
   14001a9bd:	pop    rbx
   14001a9be:	ret    
   14001a9bf:	int3   
   14001a9c0:	rex push rbx
   14001a9c2:	sub    rsp,0x20
   14001a9c6:	mov    rbx,rcx
   14001a9c9:	call   0x140017780
   14001a9ce:	lea    rax,[rip+0x1fe73]        # 0x14003a848
   14001a9d5:	mov    QWORD PTR [rbx+0x50],rax
   14001a9d9:	add    rsp,0x20
   14001a9dd:	pop    rbx
   14001a9de:	ret    
   14001a9df:	int3   
   14001a9e0:	rex push rbx
   14001a9e2:	sub    rsp,0x20
   14001a9e6:	lea    rax,[rip+0x24ac3]        # 0x14003f4b0
   14001a9ed:	mov    rbx,rcx
   14001a9f0:	mov    QWORD PTR [rcx],rax
   14001a9f3:	lea    rax,[rip+0x24ace]        # 0x14003f4c8
   14001a9fa:	mov    QWORD PTR [rcx+0x20],rax
   14001a9fe:	mov    rax,QWORD PTR [rcx+0x48]
   14001aa02:	movsxd rdx,DWORD PTR [rax+0x4]
   14001aa06:	lea    rax,[rip+0x24acb]        # 0x14003f4d8
   14001aa0d:	mov    QWORD PTR [rdx+rcx*1+0x48],rax
   14001aa12:	mov    rax,QWORD PTR [rcx+0x48]
   14001aa16:	movsxd rdx,DWORD PTR [rax+0x4]
   14001aa1a:	lea    r8d,[rdx-0x10]
   14001aa1e:	mov    DWORD PTR [rdx+rcx*1+0x44],r8d
   14001aa23:	call   0x140017d40
   14001aa28:	lea    rax,[rip+0x1fe19]        # 0x14003a848
   14001aa2f:	mov    QWORD PTR [rbx+0x58],rax
   14001aa33:	add    rsp,0x20
   14001aa37:	pop    rbx
   14001aa38:	ret    
   14001aa39:	int3   
   14001aa3a:	int3   
   14001aa3b:	int3   
   14001aa3c:	int3   
   14001aa3d:	int3   
   14001aa3e:	int3   
   14001aa3f:	int3   
   14001aa40:	rex push rbx
   14001aa42:	sub    rsp,0x20
   14001aa46:	lea    rax,[rip+0x24ecb]        # 0x14003f918
   14001aa4d:	mov    rbx,rcx
   14001aa50:	mov    QWORD PTR [rcx],rax
   14001aa53:	lea    rax,[rip+0x24ed6]        # 0x14003f930
   14001aa5a:	mov    QWORD PTR [rcx+0x20],rax
   14001aa5e:	mov    rax,QWORD PTR [rcx+0x48]
   14001aa62:	movsxd rdx,DWORD PTR [rax+0x4]
   14001aa66:	lea    rax,[rip+0x24ed3]        # 0x14003f940
   14001aa6d:	mov    QWORD PTR [rdx+rcx*1+0x48],rax
   14001aa72:	mov    rax,QWORD PTR [rcx+0x48]
   14001aa76:	movsxd rdx,DWORD PTR [rax+0x4]
   14001aa7a:	lea    r8d,[rdx-0x10]
   14001aa7e:	mov    DWORD PTR [rdx+rcx*1+0x44],r8d
   14001aa83:	call   0x140017db0
   14001aa88:	lea    rax,[rip+0x1fdb9]        # 0x14003a848
   14001aa8f:	mov    QWORD PTR [rbx+0x58],rax
   14001aa93:	add    rsp,0x20
   14001aa97:	pop    rbx
   14001aa98:	ret    
   14001aa99:	int3   
   14001aa9a:	int3   
   14001aa9b:	int3   
   14001aa9c:	int3   
   14001aa9d:	int3   
   14001aa9e:	int3   
   14001aa9f:	int3   
   14001aaa0:	rex push rbx
   14001aaa2:	sub    rsp,0x20
   14001aaa6:	mov    rbx,rcx
   14001aaa9:	call   0x140017890
   14001aaae:	lea    rax,[rip+0x1fd93]        # 0x14003a848
   14001aab5:	mov    QWORD PTR [rbx+0x50],rax
   14001aab9:	add    rsp,0x20
   14001aabd:	pop    rbx
   14001aabe:	ret    
   14001aabf:	int3   
   14001aac0:	rex push rbx
   14001aac2:	sub    rsp,0x20
   14001aac6:	mov    rbx,rcx
   14001aac9:	call   0x140017920
   14001aace:	lea    rax,[rip+0x1fd73]        # 0x14003a848
   14001aad5:	mov    QWORD PTR [rbx+0x98],rax
   14001aadc:	add    rsp,0x20
   14001aae0:	pop    rbx
   14001aae1:	ret    
   14001aae2:	int3   
   14001aae3:	int3   
   14001aae4:	movsxd rax,DWORD PTR [rcx-0x4]
   14001aae8:	sub    rcx,rax
   14001aaeb:	jmp    0x14001ad50
   14001aaf0:	movsxd rax,DWORD PTR [rcx-0x4]
   14001aaf4:	sub    rcx,rax
   14001aaf7:	jmp    0x14001adf0
   14001aafc:	movsxd rax,DWORD PTR [rcx-0x4]
   14001ab00:	sub    rcx,rax
   14001ab03:	jmp    0x14001aeb0
   14001ab08:	sub    rcx,0x68
   14001ab0c:	jmp    0x14001af20
   14001ab11:	int3   
   14001ab12:	int3   
   14001ab13:	int3   
   14001ab14:	movsxd rax,DWORD PTR [rcx-0x4]
   14001ab18:	sub    rcx,rax
   14001ab1b:	sub    rcx,0x50
   14001ab1f:	jmp    0x14001af50
   14001ab24:	sub    rcx,0x18
   14001ab28:	jmp    0x14001af50
   14001ab2d:	int3   
   14001ab2e:	int3   
   14001ab2f:	int3   
   14001ab30:	movsxd rax,DWORD PTR [rcx-0x4]
   14001ab34:	sub    rcx,rax
   14001ab37:	sub    rcx,0x50
   14001ab3b:	jmp    0x14001af90
   14001ab40:	sub    rcx,0x18
   14001ab44:	jmp    0x14001af90
   14001ab49:	int3   
   14001ab4a:	int3   
   14001ab4b:	int3   
   14001ab4c:	movsxd rax,DWORD PTR [rcx-0x4]
   14001ab50:	sub    rcx,rax
   14001ab53:	sub    rcx,0x50
   14001ab57:	jmp    0x14001afd0
   14001ab5c:	sub    rcx,0x18
   14001ab60:	jmp    0x14001afd0
   14001ab65:	int3   
   14001ab66:	int3   
   14001ab67:	int3   
   14001ab68:	movsxd rax,DWORD PTR [rcx-0x4]
   14001ab6c:	sub    rcx,rax
   14001ab6f:	sub    rcx,0x60
   14001ab73:	jmp    0x14001b010
   14001ab78:	sub    rcx,0x28
   14001ab7c:	jmp    0x14001b010
   14001ab81:	int3   
   14001ab82:	int3   
   14001ab83:	int3   
   14001ab84:	movsxd rax,DWORD PTR [rcx-0x4]
   14001ab88:	sub    rcx,rax
   14001ab8b:	sub    rcx,0x60
   14001ab8f:	jmp    0x14001b050
   14001ab94:	sub    rcx,0x28
   14001ab98:	jmp    0x14001b050
   14001ab9d:	int3   
   14001ab9e:	int3   
   14001ab9f:	int3   
   14001aba0:	movsxd rax,DWORD PTR [rcx-0x4]
   14001aba4:	sub    rcx,rax
   14001aba7:	sub    rcx,0x50
   14001abab:	jmp    0x14001b090
   14001abb0:	sub    rcx,0x18
   14001abb4:	jmp    0x14001b090
   14001abb9:	int3   
   14001abba:	int3   
   14001abbb:	int3   
   14001abbc:	movsxd rax,DWORD PTR [rcx-0x4]
   14001abc0:	sub    rcx,rax
   14001abc3:	sub    rcx,0x50
   14001abc7:	jmp    0x14001b0d0
   14001abcc:	sub    rcx,0x18
   14001abd0:	jmp    0x14001b0d0
   14001abd5:	int3   
   14001abd6:	int3   
   14001abd7:	int3   
   14001abd8:	movsxd rax,DWORD PTR [rcx-0x4]
   14001abdc:	sub    rcx,rax
   14001abdf:	sub    rcx,0x58
   14001abe3:	jmp    0x14001b110
   14001abe8:	sub    rcx,0x20
   14001abec:	jmp    0x14001b110
   14001abf1:	int3   
   14001abf2:	int3   
   14001abf3:	int3   
   14001abf4:	movsxd rax,DWORD PTR [rcx-0x4]
   14001abf8:	sub    rcx,rax
   14001abfb:	sub    rcx,0x58
   14001abff:	jmp    0x14001b190
   14001ac04:	sub    rcx,0x20
   14001ac08:	jmp    0x14001b190
   14001ac0d:	int3   
   14001ac0e:	int3   
   14001ac0f:	int3   
   14001ac10:	movsxd rax,DWORD PTR [rcx-0x4]
   14001ac14:	sub    rcx,rax
   14001ac17:	sub    rcx,0x50
   14001ac1b:	jmp    0x14001b210
   14001ac20:	sub    rcx,0x18
   14001ac24:	jmp    0x14001b210
   14001ac29:	int3   
   14001ac2a:	int3   
   14001ac2b:	int3   
   14001ac2c:	movsxd rax,DWORD PTR [rcx-0x4]
   14001ac30:	sub    rcx,rax
   14001ac33:	sub    rcx,0x98
   14001ac3a:	jmp    0x14001b250
   14001ac3f:	int3   
   14001ac40:	sub    rcx,0x60
   14001ac44:	jmp    0x14001b250
   14001ac49:	int3   
   14001ac4a:	int3   
   14001ac4b:	int3   
   14001ac4c:	sub    rcx,0x18
   14001ac50:	jmp    0x14001b290
   14001ac55:	int3   
   14001ac56:	int3   
   14001ac57:	int3   
   14001ac58:	sub    rcx,0x18
   14001ac5c:	jmp    0x14001b300
   14001ac61:	int3   
   14001ac62:	int3   
   14001ac63:	int3   
   14001ac64:	sub    rcx,0x18
   14001ac68:	jmp    0x14001b370
   14001ac6d:	int3   
   14001ac6e:	int3   
   14001ac6f:	int3   
   14001ac70:	sub    rcx,0x28
   14001ac74:	jmp    0x14001b3e0
   14001ac79:	int3   
   14001ac7a:	int3   
   14001ac7b:	int3   
   14001ac7c:	sub    rcx,0x28
   14001ac80:	jmp    0x14001b450
   14001ac85:	int3   
   14001ac86:	int3   
   14001ac87:	int3   
   14001ac88:	sub    rcx,0x18
   14001ac8c:	jmp    0x14001b4c0
   14001ac91:	int3   
   14001ac92:	int3   
   14001ac93:	int3   
   14001ac94:	sub    rcx,0x18
   14001ac98:	jmp    0x14001b530
   14001ac9d:	int3   
   14001ac9e:	int3   
   14001ac9f:	int3   
   14001aca0:	sub    rcx,0x20
   14001aca4:	jmp    0x14001b5a0
   14001aca9:	int3   
   14001acaa:	int3   
   14001acab:	int3   
   14001acac:	sub    rcx,0x20
   14001acb0:	jmp    0x14001b5d0
   14001acb5:	int3   
   14001acb6:	int3   
   14001acb7:	int3   
   14001acb8:	sub    rcx,0x18
   14001acbc:	jmp    0x14001b600
   14001acc1:	int3   
   14001acc2:	int3   
   14001acc3:	int3   
   14001acc4:	sub    rcx,0x60
   14001acc8:	jmp    0x14001b670
   14001accd:	int3   
   14001acce:	int3   
   14001accf:	int3   
   14001acd0:	sub    rcx,0x68
   14001acd4:	jmp    0x14001b6e0
   14001acd9:	int3   
   14001acda:	int3   
   14001acdb:	int3   
   14001acdc:	sub    rcx,0x8
   14001ace0:	jmp    0x14001bc20
   14001ace5:	int3   
   14001ace6:	int3   
   14001ace7:	int3   
   14001ace8:	int3   
   14001ace9:	int3   
   14001acea:	int3   
   14001aceb:	int3   
   14001acec:	int3   
   14001aced:	int3   
   14001acee:	int3   
   14001acef:	int3   
   14001acf0:	rex push rbx
   14001acf2:	sub    rsp,0x20
   14001acf6:	lea    rax,[rip+0x212b3]        # 0x14003bfb0
   14001acfd:	mov    rbx,rcx
   14001ad00:	mov    QWORD PTR [rcx],rax
   14001ad03:	test   dl,0x1
   14001ad06:	je     0x14001ad0d
   14001ad08:	call   0x140030282
   14001ad0d:	mov    rax,rbx
   14001ad10:	add    rsp,0x20
   14001ad14:	pop    rbx
   14001ad15:	ret    
   14001ad16:	int3   
   14001ad17:	int3   
   14001ad18:	int3   
   14001ad19:	int3   
   14001ad1a:	int3   
   14001ad1b:	int3   
   14001ad1c:	int3   
   14001ad1d:	int3   
   14001ad1e:	int3   
   14001ad1f:	int3   
   14001ad20:	mov    QWORD PTR [rsp+0x8],rbx
   14001ad25:	push   rdi
   14001ad26:	sub    rsp,0x20
   14001ad2a:	mov    ebx,edx
   14001ad2c:	mov    rdi,rcx
   14001ad2f:	call   0x140016e90
   14001ad34:	test   bl,0x1
   14001ad37:	je     0x14001ad41
   14001ad39:	mov    rcx,rdi
   14001ad3c:	call   0x140030282
   14001ad41:	mov    rax,rdi
   14001ad44:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ad49:	add    rsp,0x20
   14001ad4d:	pop    rdi
   14001ad4e:	ret    
   14001ad4f:	int3   
   14001ad50:	mov    QWORD PTR [rsp+0x8],rbx
   14001ad55:	push   rdi
   14001ad56:	sub    rsp,0x20
   14001ad5a:	lea    rdi,[rcx-0xa8]
   14001ad61:	mov    ebx,edx
   14001ad63:	mov    rcx,rdi
   14001ad66:	call   0x14001a780
   14001ad6b:	test   bl,0x1
   14001ad6e:	je     0x14001ad78
   14001ad70:	mov    rcx,rdi
   14001ad73:	call   0x140030282
   14001ad78:	mov    rax,rdi
   14001ad7b:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ad80:	add    rsp,0x20
   14001ad84:	pop    rdi
   14001ad85:	ret    
   14001ad86:	int3   
   14001ad87:	int3   
   14001ad88:	int3   
   14001ad89:	int3   
   14001ad8a:	int3   
   14001ad8b:	int3   
   14001ad8c:	int3   
   14001ad8d:	int3   
   14001ad8e:	int3   
   14001ad8f:	int3   
   14001ad90:	mov    QWORD PTR [rsp+0x8],rbx
   14001ad95:	push   rdi
   14001ad96:	sub    rsp,0x20
   14001ad9a:	mov    rbx,rcx
   14001ad9d:	add    rcx,0x40
   14001ada1:	mov    edi,edx
   14001ada3:	call   0x14001d9d0
   14001ada8:	lea    rcx,[rbx+0x28]
   14001adac:	call   0x14001d9d0
   14001adb1:	cmp    QWORD PTR [rbx+0x18],0x10
   14001adb6:	jb     0x14001adc0
   14001adb8:	mov    rcx,QWORD PTR [rbx]
   14001adbb:	call   0x140030282
   14001adc0:	mov    QWORD PTR [rbx+0x18],0xf
   14001adc8:	mov    QWORD PTR [rbx+0x10],0x0
   14001add0:	mov    BYTE PTR [rbx],0x0
   14001add3:	test   dil,0x1
   14001add7:	je     0x14001ade1
   14001add9:	mov    rcx,rbx
   14001addc:	call   0x140030282
   14001ade1:	mov    rax,rbx
   14001ade4:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ade9:	add    rsp,0x20
   14001aded:	pop    rdi
   14001adee:	ret    
   14001adef:	int3   
   14001adf0:	mov    QWORD PTR [rsp+0x8],rbx
   14001adf5:	push   rdi
   14001adf6:	sub    rsp,0x20
   14001adfa:	lea    rdi,[rcx-0x88]
   14001ae01:	mov    ebx,edx
   14001ae03:	mov    rcx,rdi
   14001ae06:	call   0x14001a800
   14001ae0b:	test   bl,0x1
   14001ae0e:	je     0x14001ae18
   14001ae10:	mov    rcx,rdi
   14001ae13:	call   0x140030282
   14001ae18:	mov    rax,rdi
   14001ae1b:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ae20:	add    rsp,0x20
   14001ae24:	pop    rdi
   14001ae25:	ret    
   14001ae26:	int3   
   14001ae27:	int3   
   14001ae28:	int3   
   14001ae29:	int3   
   14001ae2a:	int3   
   14001ae2b:	int3   
   14001ae2c:	int3   
   14001ae2d:	int3   
   14001ae2e:	int3   
   14001ae2f:	int3   
   14001ae30:	mov    QWORD PTR [rsp+0x8],rbx
   14001ae35:	push   rdi
   14001ae36:	sub    rsp,0x20
   14001ae3a:	cmp    QWORD PTR [rcx+0x18],0x10
   14001ae3f:	mov    edi,edx
   14001ae41:	mov    rbx,rcx
   14001ae44:	jb     0x14001ae4e
   14001ae46:	mov    rcx,QWORD PTR [rcx]
   14001ae49:	call   0x140030282
   14001ae4e:	mov    QWORD PTR [rbx+0x18],0xf
   14001ae56:	mov    QWORD PTR [rbx+0x10],0x0
   14001ae5e:	mov    BYTE PTR [rbx],0x0
   14001ae61:	test   dil,0x1
   14001ae65:	je     0x14001ae6f
   14001ae67:	mov    rcx,rbx
   14001ae6a:	call   0x140030282
   14001ae6f:	mov    rax,rbx
   14001ae72:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ae77:	add    rsp,0x20
   14001ae7b:	pop    rdi
   14001ae7c:	ret    
   14001ae7d:	int3   
   14001ae7e:	int3   
   14001ae7f:	int3   
   14001ae80:	mov    QWORD PTR [rsp+0x8],rbx
   14001ae85:	push   rdi
   14001ae86:	sub    rsp,0x20
   14001ae8a:	mov    ebx,edx
   14001ae8c:	mov    rdi,rcx
   14001ae8f:	call   0x140017170
   14001ae94:	test   bl,0x1
   14001ae97:	je     0x14001aea1
   14001ae99:	mov    rcx,rdi
   14001ae9c:	call   0x140030282
   14001aea1:	mov    rax,rdi
   14001aea4:	mov    rbx,QWORD PTR [rsp+0x30]
   14001aea9:	add    rsp,0x20
   14001aead:	pop    rdi
   14001aeae:	ret    
   14001aeaf:	int3   
   14001aeb0:	mov    QWORD PTR [rsp+0x8],rbx
   14001aeb5:	push   rdi
   14001aeb6:	sub    rsp,0x20
   14001aeba:	lea    rdi,[rcx-0x98]
   14001aec1:	mov    ebx,edx
   14001aec3:	mov    rcx,rdi
   14001aec6:	call   0x14001a880
   14001aecb:	test   bl,0x1
   14001aece:	je     0x14001aed8
   14001aed0:	mov    rcx,rdi
   14001aed3:	call   0x140030282
   14001aed8:	mov    rax,rdi
   14001aedb:	mov    rbx,QWORD PTR [rsp+0x30]
   14001aee0:	add    rsp,0x20
   14001aee4:	pop    rdi
   14001aee5:	ret    
   14001aee6:	int3   
   14001aee7:	int3   
   14001aee8:	int3   
   14001aee9:	int3   
   14001aeea:	int3   
   14001aeeb:	int3   
   14001aeec:	int3   
   14001aeed:	int3   
   14001aeee:	int3   
   14001aeef:	int3   
   14001aef0:	rex push rbx
   14001aef2:	sub    rsp,0x20
   14001aef6:	lea    rax,[rip+0x210b3]        # 0x14003bfb0
   14001aefd:	mov    rbx,rcx
   14001af00:	mov    QWORD PTR [rcx],rax
   14001af03:	test   dl,0x1
   14001af06:	je     0x14001af0d
   14001af08:	call   0x140030282
   14001af0d:	mov    rax,rbx
   14001af10:	add    rsp,0x20
   14001af14:	pop    rbx
   14001af15:	ret    
   14001af16:	int3   
   14001af17:	int3   
   14001af18:	int3   
   14001af19:	int3   
   14001af1a:	int3   
   14001af1b:	int3   
   14001af1c:	int3   
   14001af1d:	int3   
   14001af1e:	int3   
   14001af1f:	int3   
   14001af20:	mov    QWORD PTR [rsp+0x8],rbx
   14001af25:	push   rdi
   14001af26:	sub    rsp,0x20
   14001af2a:	mov    ebx,edx
   14001af2c:	mov    rdi,rcx
   14001af2f:	call   0x140017350
   14001af34:	test   bl,0x1
   14001af37:	je     0x14001af41
   14001af39:	mov    rcx,rdi
   14001af3c:	call   0x140030282
   14001af41:	mov    rax,rdi
   14001af44:	mov    rbx,QWORD PTR [rsp+0x30]
   14001af49:	add    rsp,0x20
   14001af4d:	pop    rdi
   14001af4e:	ret    
   14001af4f:	int3   
   14001af50:	mov    QWORD PTR [rsp+0x8],rbx
   14001af55:	push   rdi
   14001af56:	sub    rsp,0x20
   14001af5a:	mov    ebx,edx
   14001af5c:	mov    rdi,rcx
   14001af5f:	call   0x140017420
   14001af64:	lea    rax,[rip+0x1f8dd]        # 0x14003a848
   14001af6b:	mov    QWORD PTR [rdi+0x50],rax
   14001af6f:	test   bl,0x1
   14001af72:	je     0x14001af7c
   14001af74:	mov    rcx,rdi
   14001af77:	call   0x140030282
   14001af7c:	mov    rax,rdi
   14001af7f:	mov    rbx,QWORD PTR [rsp+0x30]
   14001af84:	add    rsp,0x20
   14001af88:	pop    rdi
   14001af89:	ret    
   14001af8a:	int3   
   14001af8b:	int3   
   14001af8c:	int3   
   14001af8d:	int3   
   14001af8e:	int3   
   14001af8f:	int3   
   14001af90:	mov    QWORD PTR [rsp+0x8],rbx
   14001af95:	push   rdi
   14001af96:	sub    rsp,0x20
   14001af9a:	mov    ebx,edx
   14001af9c:	mov    rdi,rcx
   14001af9f:	call   0x1400174b0
   14001afa4:	lea    rax,[rip+0x1f89d]        # 0x14003a848
   14001afab:	mov    QWORD PTR [rdi+0x50],rax
   14001afaf:	test   bl,0x1
   14001afb2:	je     0x14001afbc
   14001afb4:	mov    rcx,rdi
   14001afb7:	call   0x140030282
   14001afbc:	mov    rax,rdi
   14001afbf:	mov    rbx,QWORD PTR [rsp+0x30]
   14001afc4:	add    rsp,0x20
   14001afc8:	pop    rdi
   14001afc9:	ret    
   14001afca:	int3   
   14001afcb:	int3   
   14001afcc:	int3   
   14001afcd:	int3   
   14001afce:	int3   
   14001afcf:	int3   
   14001afd0:	mov    QWORD PTR [rsp+0x8],rbx
   14001afd5:	push   rdi
   14001afd6:	sub    rsp,0x20
   14001afda:	mov    ebx,edx
   14001afdc:	mov    rdi,rcx
   14001afdf:	call   0x140017540
   14001afe4:	lea    rax,[rip+0x1f85d]        # 0x14003a848
   14001afeb:	mov    QWORD PTR [rdi+0x50],rax
   14001afef:	test   bl,0x1
   14001aff2:	je     0x14001affc
   14001aff4:	mov    rcx,rdi
   14001aff7:	call   0x140030282
   14001affc:	mov    rax,rdi
   14001afff:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b004:	add    rsp,0x20
   14001b008:	pop    rdi
   14001b009:	ret    
   14001b00a:	int3   
   14001b00b:	int3   
   14001b00c:	int3   
   14001b00d:	int3   
   14001b00e:	int3   
   14001b00f:	int3   
   14001b010:	mov    QWORD PTR [rsp+0x8],rbx
   14001b015:	push   rdi
   14001b016:	sub    rsp,0x20
   14001b01a:	mov    ebx,edx
   14001b01c:	mov    rdi,rcx
   14001b01f:	call   0x1400175d0
   14001b024:	lea    rax,[rip+0x1f81d]        # 0x14003a848
   14001b02b:	mov    QWORD PTR [rdi+0x60],rax
   14001b02f:	test   bl,0x1
   14001b032:	je     0x14001b03c
   14001b034:	mov    rcx,rdi
   14001b037:	call   0x140030282
   14001b03c:	mov    rax,rdi
   14001b03f:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b044:	add    rsp,0x20
   14001b048:	pop    rdi
   14001b049:	ret    
   14001b04a:	int3   
   14001b04b:	int3   
   14001b04c:	int3   
   14001b04d:	int3   
   14001b04e:	int3   
   14001b04f:	int3   
   14001b050:	mov    QWORD PTR [rsp+0x8],rbx
   14001b055:	push   rdi
   14001b056:	sub    rsp,0x20
   14001b05a:	mov    ebx,edx
   14001b05c:	mov    rdi,rcx
   14001b05f:	call   0x140017660
   14001b064:	lea    rax,[rip+0x1f7dd]        # 0x14003a848
   14001b06b:	mov    QWORD PTR [rdi+0x60],rax
   14001b06f:	test   bl,0x1
   14001b072:	je     0x14001b07c
   14001b074:	mov    rcx,rdi
   14001b077:	call   0x140030282
   14001b07c:	mov    rax,rdi
   14001b07f:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b084:	add    rsp,0x20
   14001b088:	pop    rdi
   14001b089:	ret    
   14001b08a:	int3   
   14001b08b:	int3   
   14001b08c:	int3   
   14001b08d:	int3   
   14001b08e:	int3   
   14001b08f:	int3   
   14001b090:	mov    QWORD PTR [rsp+0x8],rbx
   14001b095:	push   rdi
   14001b096:	sub    rsp,0x20
   14001b09a:	mov    ebx,edx
   14001b09c:	mov    rdi,rcx
   14001b09f:	call   0x1400176f0
   14001b0a4:	lea    rax,[rip+0x1f79d]        # 0x14003a848
   14001b0ab:	mov    QWORD PTR [rdi+0x50],rax
   14001b0af:	test   bl,0x1
   14001b0b2:	je     0x14001b0bc
   14001b0b4:	mov    rcx,rdi
   14001b0b7:	call   0x140030282
   14001b0bc:	mov    rax,rdi
   14001b0bf:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b0c4:	add    rsp,0x20
   14001b0c8:	pop    rdi
   14001b0c9:	ret    
   14001b0ca:	int3   
   14001b0cb:	int3   
   14001b0cc:	int3   
   14001b0cd:	int3   
   14001b0ce:	int3   
   14001b0cf:	int3   
   14001b0d0:	mov    QWORD PTR [rsp+0x8],rbx
   14001b0d5:	push   rdi
   14001b0d6:	sub    rsp,0x20
   14001b0da:	mov    ebx,edx
   14001b0dc:	mov    rdi,rcx
   14001b0df:	call   0x140017780
   14001b0e4:	lea    rax,[rip+0x1f75d]        # 0x14003a848
   14001b0eb:	mov    QWORD PTR [rdi+0x50],rax
   14001b0ef:	test   bl,0x1
   14001b0f2:	je     0x14001b0fc
   14001b0f4:	mov    rcx,rdi
   14001b0f7:	call   0x140030282
   14001b0fc:	mov    rax,rdi
   14001b0ff:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b104:	add    rsp,0x20
   14001b108:	pop    rdi
   14001b109:	ret    
   14001b10a:	int3   
   14001b10b:	int3   
   14001b10c:	int3   
   14001b10d:	int3   
   14001b10e:	int3   
   14001b10f:	int3   
   14001b110:	mov    QWORD PTR [rsp+0x8],rbx
   14001b115:	push   rdi
   14001b116:	sub    rsp,0x20
   14001b11a:	lea    rax,[rip+0x2438f]        # 0x14003f4b0
   14001b121:	mov    ebx,edx
   14001b123:	mov    rdi,rcx
   14001b126:	mov    QWORD PTR [rcx],rax
   14001b129:	lea    rax,[rip+0x24398]        # 0x14003f4c8
   14001b130:	mov    QWORD PTR [rcx+0x20],rax
   14001b134:	mov    rax,QWORD PTR [rcx+0x48]
   14001b138:	movsxd r8,DWORD PTR [rax+0x4]
   14001b13c:	lea    rax,[rip+0x24395]        # 0x14003f4d8
   14001b143:	mov    QWORD PTR [r8+rcx*1+0x48],rax
   14001b148:	mov    rax,QWORD PTR [rcx+0x48]
   14001b14c:	movsxd r8,DWORD PTR [rax+0x4]
   14001b150:	lea    r9d,[r8-0x10]
   14001b154:	mov    DWORD PTR [r8+rcx*1+0x44],r9d
   14001b159:	call   0x140017d40
   14001b15e:	lea    rax,[rip+0x1f6e3]        # 0x14003a848
   14001b165:	mov    QWORD PTR [rdi+0x58],rax
   14001b169:	test   bl,0x1
   14001b16c:	je     0x14001b176
   14001b16e:	mov    rcx,rdi
   14001b171:	call   0x140030282
   14001b176:	mov    rax,rdi
   14001b179:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b17e:	add    rsp,0x20
   14001b182:	pop    rdi
   14001b183:	ret    
   14001b184:	int3   
   14001b185:	int3   
   14001b186:	int3   
   14001b187:	int3   
   14001b188:	int3   
   14001b189:	int3   
   14001b18a:	int3   
   14001b18b:	int3   
   14001b18c:	int3   
   14001b18d:	int3   
   14001b18e:	int3   
   14001b18f:	int3   
   14001b190:	mov    QWORD PTR [rsp+0x8],rbx
   14001b195:	push   rdi
   14001b196:	sub    rsp,0x20
   14001b19a:	lea    rax,[rip+0x24777]        # 0x14003f918
   14001b1a1:	mov    ebx,edx
   14001b1a3:	mov    rdi,rcx
   14001b1a6:	mov    QWORD PTR [rcx],rax
   14001b1a9:	lea    rax,[rip+0x24780]        # 0x14003f930
   14001b1b0:	mov    QWORD PTR [rcx+0x20],rax
   14001b1b4:	mov    rax,QWORD PTR [rcx+0x48]
   14001b1b8:	movsxd r8,DWORD PTR [rax+0x4]
   14001b1bc:	lea    rax,[rip+0x2477d]        # 0x14003f940
   14001b1c3:	mov    QWORD PTR [r8+rcx*1+0x48],rax
   14001b1c8:	mov    rax,QWORD PTR [rcx+0x48]
   14001b1cc:	movsxd r8,DWORD PTR [rax+0x4]
   14001b1d0:	lea    r9d,[r8-0x10]
   14001b1d4:	mov    DWORD PTR [r8+rcx*1+0x44],r9d
   14001b1d9:	call   0x140017db0
   14001b1de:	lea    rax,[rip+0x1f663]        # 0x14003a848
   14001b1e5:	mov    QWORD PTR [rdi+0x58],rax
   14001b1e9:	test   bl,0x1
   14001b1ec:	je     0x14001b1f6
   14001b1ee:	mov    rcx,rdi
   14001b1f1:	call   0x140030282
   14001b1f6:	mov    rax,rdi
   14001b1f9:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b1fe:	add    rsp,0x20
   14001b202:	pop    rdi
   14001b203:	ret    
   14001b204:	int3   
   14001b205:	int3   
   14001b206:	int3   
   14001b207:	int3   
   14001b208:	int3   
   14001b209:	int3   
   14001b20a:	int3   
   14001b20b:	int3   
   14001b20c:	int3   
   14001b20d:	int3   
   14001b20e:	int3   
   14001b20f:	int3   
   14001b210:	mov    QWORD PTR [rsp+0x8],rbx
   14001b215:	push   rdi
   14001b216:	sub    rsp,0x20
   14001b21a:	mov    ebx,edx
   14001b21c:	mov    rdi,rcx
   14001b21f:	call   0x140017890
   14001b224:	lea    rax,[rip+0x1f61d]        # 0x14003a848
   14001b22b:	mov    QWORD PTR [rdi+0x50],rax
   14001b22f:	test   bl,0x1
   14001b232:	je     0x14001b23c
   14001b234:	mov    rcx,rdi
   14001b237:	call   0x140030282
   14001b23c:	mov    rax,rdi
   14001b23f:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b244:	add    rsp,0x20
   14001b248:	pop    rdi
   14001b249:	ret    
   14001b24a:	int3   
   14001b24b:	int3   
   14001b24c:	int3   
   14001b24d:	int3   
   14001b24e:	int3   
   14001b24f:	int3   
   14001b250:	mov    QWORD PTR [rsp+0x8],rbx
   14001b255:	push   rdi
   14001b256:	sub    rsp,0x20
   14001b25a:	mov    ebx,edx
   14001b25c:	mov    rdi,rcx
   14001b25f:	call   0x140017920
   14001b264:	lea    rax,[rip+0x1f5dd]        # 0x14003a848
   14001b26b:	mov    QWORD PTR [rdi+0x98],rax
   14001b272:	test   bl,0x1
   14001b275:	je     0x14001b27f
   14001b277:	mov    rcx,rdi
   14001b27a:	call   0x140030282
   14001b27f:	mov    rax,rdi
   14001b282:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b287:	add    rsp,0x20
   14001b28b:	pop    rdi
   14001b28c:	ret    
   14001b28d:	int3   
   14001b28e:	int3   
   14001b28f:	int3   
   14001b290:	mov    QWORD PTR [rsp+0x8],rbx
   14001b295:	push   rdi
   14001b296:	sub    rsp,0x20
   14001b29a:	lea    rax,[rip+0x216bf]        # 0x14003c960
   14001b2a1:	mov    rbx,rcx
   14001b2a4:	mov    edi,edx
   14001b2a6:	mov    QWORD PTR [rcx],rax
   14001b2a9:	lea    rax,[rip+0x1f588]        # 0x14003a838
   14001b2b0:	mov    QWORD PTR [rcx+0x18],rax
   14001b2b4:	mov    rcx,QWORD PTR [rcx+0x20]
   14001b2b8:	test   rcx,rcx
   14001b2bb:	je     0x14001b2cf
   14001b2bd:	mov    rax,QWORD PTR [rcx]
   14001b2c0:	call   QWORD PTR [rax+0x20]
   14001b2c3:	test   al,al
   14001b2c5:	je     0x14001b2cf
   14001b2c7:	mov    QWORD PTR [rbx+0x20],0x0
   14001b2cf:	mov    rcx,rbx
   14001b2d2:	call   QWORD PTR [rip+0x1b168]        # 0x140036440
   14001b2d8:	test   dil,0x1
   14001b2dc:	je     0x14001b2e6
   14001b2de:	mov    rcx,rbx
   14001b2e1:	call   0x140030282
   14001b2e6:	mov    rax,rbx
   14001b2e9:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b2ee:	add    rsp,0x20
   14001b2f2:	pop    rdi
   14001b2f3:	ret    
   14001b2f4:	int3   
   14001b2f5:	int3   
   14001b2f6:	int3   
   14001b2f7:	int3   
   14001b2f8:	int3   
   14001b2f9:	int3   
   14001b2fa:	int3   
   14001b2fb:	int3   
   14001b2fc:	int3   
   14001b2fd:	int3   
   14001b2fe:	int3   
   14001b2ff:	int3   
   14001b300:	mov    QWORD PTR [rsp+0x8],rbx
   14001b305:	push   rdi
   14001b306:	sub    rsp,0x20
   14001b30a:	lea    rax,[rip+0x21cef]        # 0x14003d000
   14001b311:	mov    rbx,rcx
   14001b314:	mov    edi,edx
   14001b316:	mov    QWORD PTR [rcx],rax
   14001b319:	lea    rax,[rip+0x1f518]        # 0x14003a838
   14001b320:	mov    QWORD PTR [rcx+0x18],rax
   14001b324:	mov    rcx,QWORD PTR [rcx+0x20]
   14001b328:	test   rcx,rcx
   14001b32b:	je     0x14001b33f
   14001b32d:	mov    rax,QWORD PTR [rcx]
   14001b330:	call   QWORD PTR [rax+0x20]
   14001b333:	test   al,al
   14001b335:	je     0x14001b33f
   14001b337:	mov    QWORD PTR [rbx+0x20],0x0
   14001b33f:	mov    rcx,rbx
   14001b342:	call   QWORD PTR [rip+0x1b0f8]        # 0x140036440
   14001b348:	test   dil,0x1
   14001b34c:	je     0x14001b356
   14001b34e:	mov    rcx,rbx
   14001b351:	call   0x140030282
   14001b356:	mov    rax,rbx
   14001b359:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b35e:	add    rsp,0x20
   14001b362:	pop    rdi
   14001b363:	ret    
   14001b364:	int3   
   14001b365:	int3   
   14001b366:	int3   
   14001b367:	int3   
   14001b368:	int3   
   14001b369:	int3   
   14001b36a:	int3   
   14001b36b:	int3   
   14001b36c:	int3   
   14001b36d:	int3   
   14001b36e:	int3   
   14001b36f:	int3   
   14001b370:	mov    QWORD PTR [rsp+0x8],rbx
   14001b375:	push   rdi
   14001b376:	sub    rsp,0x20
   14001b37a:	lea    rax,[rip+0x2221f]        # 0x14003d5a0
   14001b381:	mov    rbx,rcx
   14001b384:	mov    edi,edx
   14001b386:	mov    QWORD PTR [rcx],rax
   14001b389:	lea    rax,[rip+0x1f4a8]        # 0x14003a838
   14001b390:	mov    QWORD PTR [rcx+0x18],rax
   14001b394:	mov    rcx,QWORD PTR [rcx+0x20]
   14001b398:	test   rcx,rcx
   14001b39b:	je     0x14001b3af
   14001b39d:	mov    rax,QWORD PTR [rcx]
   14001b3a0:	call   QWORD PTR [rax+0x20]
   14001b3a3:	test   al,al
   14001b3a5:	je     0x14001b3af
   14001b3a7:	mov    QWORD PTR [rbx+0x20],0x0
   14001b3af:	mov    rcx,rbx
   14001b3b2:	call   QWORD PTR [rip+0x1b088]        # 0x140036440
   14001b3b8:	test   dil,0x1
   14001b3bc:	je     0x14001b3c6
   14001b3be:	mov    rcx,rbx
   14001b3c1:	call   0x140030282
   14001b3c6:	mov    rax,rbx
   14001b3c9:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b3ce:	add    rsp,0x20
   14001b3d2:	pop    rdi
   14001b3d3:	ret    
   14001b3d4:	int3   
   14001b3d5:	int3   
   14001b3d6:	int3   
   14001b3d7:	int3   
   14001b3d8:	int3   
   14001b3d9:	int3   
   14001b3da:	int3   
   14001b3db:	int3   
   14001b3dc:	int3   
   14001b3dd:	int3   
   14001b3de:	int3   
   14001b3df:	int3   
   14001b3e0:	mov    QWORD PTR [rsp+0x8],rbx
   14001b3e5:	push   rdi
   14001b3e6:	sub    rsp,0x20
   14001b3ea:	lea    rax,[rip+0x22227]        # 0x14003d618
   14001b3f1:	mov    rbx,rcx
   14001b3f4:	mov    edi,edx
   14001b3f6:	mov    QWORD PTR [rcx],rax
   14001b3f9:	lea    rax,[rip+0x1f438]        # 0x14003a838
   14001b400:	mov    QWORD PTR [rcx+0x28],rax
   14001b404:	mov    rcx,QWORD PTR [rcx+0x30]
   14001b408:	test   rcx,rcx
   14001b40b:	je     0x14001b41f
   14001b40d:	mov    rax,QWORD PTR [rcx]
   14001b410:	call   QWORD PTR [rax+0x20]
   14001b413:	test   al,al
   14001b415:	je     0x14001b41f
   14001b417:	mov    QWORD PTR [rbx+0x30],0x0
   14001b41f:	lea    rax,[rip+0x1f49a]        # 0x14003a8c0
   14001b426:	mov    rcx,rbx
   14001b429:	mov    QWORD PTR [rbx],rax
   14001b42c:	call   QWORD PTR [rip+0x1afe6]        # 0x140036418
   14001b432:	test   dil,0x1
   14001b436:	je     0x14001b440
   14001b438:	mov    rcx,rbx
   14001b43b:	call   0x140030282
   14001b440:	mov    rax,rbx
   14001b443:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b448:	add    rsp,0x20
   14001b44c:	pop    rdi
   14001b44d:	ret    
   14001b44e:	int3   
   14001b44f:	int3   
   14001b450:	mov    QWORD PTR [rsp+0x8],rbx
   14001b455:	push   rdi
   14001b456:	sub    rsp,0x20
   14001b45a:	lea    rax,[rip+0x24417]        # 0x14003f878
   14001b461:	mov    rbx,rcx
   14001b464:	mov    edi,edx
   14001b466:	mov    QWORD PTR [rcx],rax
   14001b469:	lea    rax,[rip+0x1f3c8]        # 0x14003a838
   14001b470:	mov    QWORD PTR [rcx+0x28],rax
   14001b474:	mov    rcx,QWORD PTR [rcx+0x30]
   14001b478:	test   rcx,rcx
   14001b47b:	je     0x14001b48f
   14001b47d:	mov    rax,QWORD PTR [rcx]
   14001b480:	call   QWORD PTR [rax+0x20]
   14001b483:	test   al,al
   14001b485:	je     0x14001b48f
   14001b487:	mov    QWORD PTR [rbx+0x30],0x0
   14001b48f:	mov    rcx,rbx
   14001b492:	call   QWORD PTR [rip+0x1afa8]        # 0x140036440
   14001b498:	test   dil,0x1
   14001b49c:	je     0x14001b4a6
   14001b49e:	mov    rcx,rbx
   14001b4a1:	call   0x140030282
   14001b4a6:	mov    rax,rbx
   14001b4a9:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b4ae:	add    rsp,0x20
   14001b4b2:	pop    rdi
   14001b4b3:	ret    
   14001b4b4:	int3   
   14001b4b5:	int3   
   14001b4b6:	int3   
   14001b4b7:	int3   
   14001b4b8:	int3   
   14001b4b9:	int3   
   14001b4ba:	int3   
   14001b4bb:	int3   
   14001b4bc:	int3   
   14001b4bd:	int3   
   14001b4be:	int3   
   14001b4bf:	int3   
   14001b4c0:	mov    QWORD PTR [rsp+0x8],rbx
   14001b4c5:	push   rdi
   14001b4c6:	sub    rsp,0x20
   14001b4ca:	lea    rax,[rip+0x21ab7]        # 0x14003cf88
   14001b4d1:	mov    rbx,rcx
   14001b4d4:	mov    edi,edx
   14001b4d6:	mov    QWORD PTR [rcx],rax
   14001b4d9:	lea    rax,[rip+0x1f358]        # 0x14003a838
   14001b4e0:	mov    QWORD PTR [rcx+0x18],rax
   14001b4e4:	mov    rcx,QWORD PTR [rcx+0x20]
   14001b4e8:	test   rcx,rcx
   14001b4eb:	je     0x14001b4ff
   14001b4ed:	mov    rax,QWORD PTR [rcx]
   14001b4f0:	call   QWORD PTR [rax+0x20]
   14001b4f3:	test   al,al
   14001b4f5:	je     0x14001b4ff
   14001b4f7:	mov    QWORD PTR [rbx+0x20],0x0
   14001b4ff:	mov    rcx,rbx
   14001b502:	call   QWORD PTR [rip+0x1af38]        # 0x140036440
   14001b508:	test   dil,0x1
   14001b50c:	je     0x14001b516
   14001b50e:	mov    rcx,rbx
   14001b511:	call   0x140030282
   14001b516:	mov    rax,rbx
   14001b519:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b51e:	add    rsp,0x20
   14001b522:	pop    rdi
   14001b523:	ret    
   14001b524:	int3   
   14001b525:	int3   
   14001b526:	int3   
   14001b527:	int3   
   14001b528:	int3   
   14001b529:	int3   
   14001b52a:	int3   
   14001b52b:	int3   
   14001b52c:	int3   
   14001b52d:	int3   
   14001b52e:	int3   
   14001b52f:	int3   
   14001b530:	mov    QWORD PTR [rsp+0x8],rbx
   14001b535:	push   rdi
   14001b536:	sub    rsp,0x20
   14001b53a:	lea    rax,[rip+0x23e9f]        # 0x14003f3e0
   14001b541:	mov    rbx,rcx
   14001b544:	mov    edi,edx
   14001b546:	mov    QWORD PTR [rcx],rax
   14001b549:	lea    rax,[rip+0x1f2e8]        # 0x14003a838
   14001b550:	mov    QWORD PTR [rcx+0x18],rax
   14001b554:	mov    rcx,QWORD PTR [rcx+0x20]
   14001b558:	test   rcx,rcx
   14001b55b:	je     0x14001b56f
   14001b55d:	mov    rax,QWORD PTR [rcx]
   14001b560:	call   QWORD PTR [rax+0x20]
   14001b563:	test   al,al
   14001b565:	je     0x14001b56f
   14001b567:	mov    QWORD PTR [rbx+0x20],0x0
   14001b56f:	mov    rcx,rbx
   14001b572:	call   QWORD PTR [rip+0x1aec8]        # 0x140036440
   14001b578:	test   dil,0x1
   14001b57c:	je     0x14001b586
   14001b57e:	mov    rcx,rbx
   14001b581:	call   0x140030282
   14001b586:	mov    rax,rbx
   14001b589:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b58e:	add    rsp,0x20
   14001b592:	pop    rdi
   14001b593:	ret    
   14001b594:	int3   
   14001b595:	int3   
   14001b596:	int3   
   14001b597:	int3   
   14001b598:	int3   
   14001b599:	int3   
   14001b59a:	int3   
   14001b59b:	int3   
   14001b59c:	int3   
   14001b59d:	int3   
   14001b59e:	int3   
   14001b59f:	int3   
   14001b5a0:	mov    QWORD PTR [rsp+0x8],rbx
   14001b5a5:	push   rdi
   14001b5a6:	sub    rsp,0x20
   14001b5aa:	mov    ebx,edx
   14001b5ac:	mov    rdi,rcx
   14001b5af:	call   0x140017d40
   14001b5b4:	test   bl,0x1
   14001b5b7:	je     0x14001b5c1
   14001b5b9:	mov    rcx,rdi
   14001b5bc:	call   0x140030282
   14001b5c1:	mov    rax,rdi
   14001b5c4:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b5c9:	add    rsp,0x20
   14001b5cd:	pop    rdi
   14001b5ce:	ret    
   14001b5cf:	int3   
   14001b5d0:	mov    QWORD PTR [rsp+0x8],rbx
   14001b5d5:	push   rdi
   14001b5d6:	sub    rsp,0x20
   14001b5da:	mov    ebx,edx
   14001b5dc:	mov    rdi,rcx
   14001b5df:	call   0x140017db0
   14001b5e4:	test   bl,0x1
   14001b5e7:	je     0x14001b5f1
   14001b5e9:	mov    rcx,rdi
   14001b5ec:	call   0x140030282
   14001b5f1:	mov    rax,rdi
   14001b5f4:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b5f9:	add    rsp,0x20
   14001b5fd:	pop    rdi
   14001b5fe:	ret    
   14001b5ff:	int3   
   14001b600:	mov    QWORD PTR [rsp+0x8],rbx
   14001b605:	push   rdi
   14001b606:	sub    rsp,0x20
   14001b60a:	lea    rax,[rip+0x213c7]        # 0x14003c9d8
   14001b611:	mov    rbx,rcx
   14001b614:	mov    edi,edx
   14001b616:	mov    QWORD PTR [rcx],rax
   14001b619:	lea    rax,[rip+0x1f218]        # 0x14003a838
   14001b620:	mov    QWORD PTR [rcx+0x18],rax
   14001b624:	mov    rcx,QWORD PTR [rcx+0x20]
   14001b628:	test   rcx,rcx
   14001b62b:	je     0x14001b63f
   14001b62d:	mov    rax,QWORD PTR [rcx]
   14001b630:	call   QWORD PTR [rax+0x20]
   14001b633:	test   al,al
   14001b635:	je     0x14001b63f
   14001b637:	mov    QWORD PTR [rbx+0x20],0x0
   14001b63f:	mov    rcx,rbx
   14001b642:	call   QWORD PTR [rip+0x1adf8]        # 0x140036440
   14001b648:	test   dil,0x1
   14001b64c:	je     0x14001b656
   14001b64e:	mov    rcx,rbx
   14001b651:	call   0x140030282
   14001b656:	mov    rax,rbx
   14001b659:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b65e:	add    rsp,0x20
   14001b662:	pop    rdi
   14001b663:	ret    
   14001b664:	int3   
   14001b665:	int3   
   14001b666:	int3   
   14001b667:	int3   
   14001b668:	int3   
   14001b669:	int3   
   14001b66a:	int3   
   14001b66b:	int3   
   14001b66c:	int3   
   14001b66d:	int3   
   14001b66e:	int3   
   14001b66f:	int3   
   14001b670:	mov    QWORD PTR [rsp+0x8],rbx
   14001b675:	push   rdi
   14001b676:	sub    rsp,0x20
   14001b67a:	lea    rax,[rip+0x21a27]        # 0x14003d0a8
   14001b681:	mov    rbx,rcx
   14001b684:	mov    edi,edx
   14001b686:	mov    QWORD PTR [rcx],rax
   14001b689:	lea    rax,[rip+0x1f1a8]        # 0x14003a838
   14001b690:	mov    QWORD PTR [rcx+0x60],rax
   14001b694:	mov    rcx,QWORD PTR [rcx+0x68]
   14001b698:	test   rcx,rcx
   14001b69b:	je     0x14001b6af
   14001b69d:	mov    rax,QWORD PTR [rcx]
   14001b6a0:	call   QWORD PTR [rax+0x20]
   14001b6a3:	test   al,al
   14001b6a5:	je     0x14001b6af
   14001b6a7:	mov    QWORD PTR [rbx+0x68],0x0
   14001b6af:	mov    rcx,rbx
   14001b6b2:	call   0x140019040
   14001b6b7:	test   dil,0x1
   14001b6bb:	je     0x14001b6c5
   14001b6bd:	mov    rcx,rbx
   14001b6c0:	call   0x140030282
   14001b6c5:	mov    rax,rbx
   14001b6c8:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b6cd:	add    rsp,0x20
   14001b6d1:	pop    rdi
   14001b6d2:	ret    
   14001b6d3:	int3   
   14001b6d4:	int3   
   14001b6d5:	int3   
   14001b6d6:	int3   
   14001b6d7:	int3   
   14001b6d8:	int3   
   14001b6d9:	int3   
   14001b6da:	int3   
   14001b6db:	int3   
   14001b6dc:	int3   
   14001b6dd:	int3   
   14001b6de:	int3   
   14001b6df:	int3   
   14001b6e0:	mov    QWORD PTR [rsp+0x8],rcx
   14001b6e5:	push   rdi
   14001b6e6:	sub    rsp,0x30
   14001b6ea:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001b6f3:	mov    QWORD PTR [rsp+0x48],rbx
   14001b6f8:	mov    edi,edx
   14001b6fa:	mov    rbx,rcx
   14001b6fd:	lea    rax,[rip+0x2098c]        # 0x14003c090
   14001b704:	mov    QWORD PTR [rcx],rax
   14001b707:	lea    rax,[rip+0x20a02]        # 0x14003c110
   14001b70e:	mov    QWORD PTR [rcx+0x68],rax
   14001b712:	mov    rax,QWORD PTR [rcx+0x70]
   14001b716:	mov    r8,QWORD PTR [rax]
   14001b719:	test   BYTE PTR [r8+0x30],0x1
   14001b71e:	je     0x14001b727
   14001b720:	call   QWORD PTR [rip+0x1aab2]        # 0x1400361d8
   14001b726:	nop
   14001b727:	mov    rcx,rbx
   14001b72a:	call   0x140017350
   14001b72f:	test   dil,0x1
   14001b733:	je     0x14001b73d
   14001b735:	mov    rcx,rbx
   14001b738:	call   0x140030282
   14001b73d:	mov    rax,rbx
   14001b740:	mov    rbx,QWORD PTR [rsp+0x48]
   14001b745:	add    rsp,0x30
   14001b749:	pop    rdi
   14001b74a:	ret    
   14001b74b:	int3   
   14001b74c:	int3   
   14001b74d:	int3   
   14001b74e:	int3   
   14001b74f:	int3   
   14001b750:	mov    QWORD PTR [rsp+0x8],rbx
   14001b755:	push   rdi
   14001b756:	sub    rsp,0x20
   14001b75a:	cmp    QWORD PTR [rcx+0x20],0x10
   14001b75f:	mov    edi,edx
   14001b761:	mov    rbx,rcx
   14001b764:	jb     0x14001b76f
   14001b766:	mov    rcx,QWORD PTR [rcx+0x8]
   14001b76a:	call   0x140030282
   14001b76f:	mov    QWORD PTR [rbx+0x20],0xf
   14001b777:	mov    QWORD PTR [rbx+0x18],0x0
   14001b77f:	lea    rax,[rip+0x1f0e2]        # 0x14003a868
   14001b786:	mov    BYTE PTR [rbx+0x8],0x0
   14001b78a:	mov    QWORD PTR [rbx],rax
   14001b78d:	test   dil,0x1
   14001b791:	je     0x14001b79b
   14001b793:	mov    rcx,rbx
   14001b796:	call   0x140030282
   14001b79b:	mov    rax,rbx
   14001b79e:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b7a3:	add    rsp,0x20
   14001b7a7:	pop    rdi
   14001b7a8:	ret    
   14001b7a9:	int3   
   14001b7aa:	int3   
   14001b7ab:	int3   
   14001b7ac:	int3   
   14001b7ad:	int3   
   14001b7ae:	int3   
   14001b7af:	int3   
   14001b7b0:	mov    QWORD PTR [rsp+0x8],rbx
   14001b7b5:	push   rdi
   14001b7b6:	sub    rsp,0x20
   14001b7ba:	cmp    QWORD PTR [rcx+0x20],0x10
   14001b7bf:	mov    edi,edx
   14001b7c1:	mov    rbx,rcx
   14001b7c4:	jb     0x14001b7cf
   14001b7c6:	mov    rcx,QWORD PTR [rcx+0x8]
   14001b7ca:	call   0x140030282
   14001b7cf:	mov    QWORD PTR [rbx+0x20],0xf
   14001b7d7:	mov    QWORD PTR [rbx+0x18],0x0
   14001b7df:	lea    rax,[rip+0x1f082]        # 0x14003a868
   14001b7e6:	mov    BYTE PTR [rbx+0x8],0x0
   14001b7ea:	mov    QWORD PTR [rbx],rax
   14001b7ed:	test   dil,0x1
   14001b7f1:	je     0x14001b7fb
   14001b7f3:	mov    rcx,rbx
   14001b7f6:	call   0x140030282
   14001b7fb:	mov    rax,rbx
   14001b7fe:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b803:	add    rsp,0x20
   14001b807:	pop    rdi
   14001b808:	ret    
   14001b809:	int3   
   14001b80a:	int3   
   14001b80b:	int3   
   14001b80c:	int3   
   14001b80d:	int3   
   14001b80e:	int3   
   14001b80f:	int3   
   14001b810:	mov    QWORD PTR [rsp+0x8],rbx
   14001b815:	push   rdi
   14001b816:	sub    rsp,0x20
   14001b81a:	mov    ebx,edx
   14001b81c:	mov    rdi,rcx
   14001b81f:	call   0x140018020
   14001b824:	test   bl,0x1
   14001b827:	je     0x14001b831
   14001b829:	mov    rcx,rdi
   14001b82c:	call   0x140030282
   14001b831:	mov    rax,rdi
   14001b834:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b839:	add    rsp,0x20
   14001b83d:	pop    rdi
   14001b83e:	ret    
   14001b83f:	int3   
   14001b840:	mov    QWORD PTR [rsp+0x8],rbx
   14001b845:	push   rdi
   14001b846:	sub    rsp,0x20
   14001b84a:	mov    ebx,edx
   14001b84c:	mov    rdi,rcx
   14001b84f:	call   0x1400180b0
   14001b854:	test   bl,0x1
   14001b857:	je     0x14001b861
   14001b859:	mov    rcx,rdi
   14001b85c:	call   0x140030282
   14001b861:	mov    rax,rdi
   14001b864:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b869:	add    rsp,0x20
   14001b86d:	pop    rdi
   14001b86e:	ret    
   14001b86f:	int3   
   14001b870:	mov    QWORD PTR [rsp+0x8],rbx
   14001b875:	push   rdi
   14001b876:	sub    rsp,0x20
   14001b87a:	mov    rbx,rcx
   14001b87d:	mov    rcx,QWORD PTR [rcx+0x80]
   14001b884:	mov    edi,edx
   14001b886:	test   rcx,rcx
   14001b889:	je     0x14001b890
   14001b88b:	call   0x140030282
   14001b890:	cmp    BYTE PTR [rbx+0x71],0x0
   14001b894:	je     0x14001b89a
   14001b896:	mov    BYTE PTR [rbx+0x71],0x0
   14001b89a:	mov    rcx,rbx
   14001b89d:	call   QWORD PTR [rip+0x1a94d]        # 0x1400361f0
   14001b8a3:	test   dil,0x1
   14001b8a7:	je     0x14001b8b1
   14001b8a9:	mov    rcx,rbx
   14001b8ac:	call   0x140030282
   14001b8b1:	mov    rax,rbx
   14001b8b4:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b8b9:	add    rsp,0x20
   14001b8bd:	pop    rdi
   14001b8be:	ret    
   14001b8bf:	int3   
   14001b8c0:	mov    QWORD PTR [rsp+0x8],rbx
   14001b8c5:	push   rdi
   14001b8c6:	sub    rsp,0x20
   14001b8ca:	mov    rbx,rcx
   14001b8cd:	mov    rcx,QWORD PTR [rcx+0x88]
   14001b8d4:	mov    edi,edx
   14001b8d6:	test   rcx,rcx
   14001b8d9:	je     0x14001b8e0
   14001b8db:	call   0x140030282
   14001b8e0:	cmp    BYTE PTR [rbx+0x78],0x0
   14001b8e4:	je     0x14001b8ea
   14001b8e6:	mov    BYTE PTR [rbx+0x78],0x0
   14001b8ea:	mov    rcx,rbx
   14001b8ed:	call   QWORD PTR [rip+0x1a8fd]        # 0x1400361f0
   14001b8f3:	test   dil,0x1
   14001b8f7:	je     0x14001b901
   14001b8f9:	mov    rcx,rbx
   14001b8fc:	call   0x140030282
   14001b901:	mov    rax,rbx
   14001b904:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b909:	add    rsp,0x20
   14001b90d:	pop    rdi
   14001b90e:	ret    
   14001b90f:	int3   
   14001b910:	mov    QWORD PTR [rsp+0x8],rbx
   14001b915:	push   rdi
   14001b916:	sub    rsp,0x20
   14001b91a:	mov    ebx,edx
   14001b91c:	mov    rdi,rcx
   14001b91f:	call   QWORD PTR [rip+0x1a8cb]        # 0x1400361f0
   14001b925:	test   bl,0x1
   14001b928:	je     0x14001b932
   14001b92a:	mov    rcx,rdi
   14001b92d:	call   0x140030282
   14001b932:	mov    rax,rdi
   14001b935:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b93a:	add    rsp,0x20
   14001b93e:	pop    rdi
   14001b93f:	ret    
   14001b940:	mov    QWORD PTR [rsp+0x8],rcx
   14001b945:	push   rdi
   14001b946:	sub    rsp,0x30
   14001b94a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001b953:	mov    QWORD PTR [rsp+0x48],rbx
   14001b958:	mov    ebx,edx
   14001b95a:	mov    rdi,rcx
   14001b95d:	add    rcx,0x11
   14001b961:	call   0x1400221d0
   14001b966:	nop
   14001b967:	mov    rcx,QWORD PTR [rdi+0x8]
   14001b96b:	call   0x140030282
   14001b970:	test   bl,0x1
   14001b973:	je     0x14001b97d
   14001b975:	mov    rcx,rdi
   14001b978:	call   0x140030282
   14001b97d:	mov    rax,rdi
   14001b980:	mov    rbx,QWORD PTR [rsp+0x48]
   14001b985:	add    rsp,0x30
   14001b989:	pop    rdi
   14001b98a:	ret    
   14001b98b:	int3   
   14001b98c:	int3   
   14001b98d:	int3   
   14001b98e:	int3   
   14001b98f:	int3   
   14001b990:	mov    QWORD PTR [rsp+0x8],rbx
   14001b995:	push   rdi
   14001b996:	sub    rsp,0x20
   14001b99a:	lea    rax,[rip+0x1ee4f]        # 0x14003a7f0
   14001b9a1:	mov    rdi,rcx
   14001b9a4:	mov    ebx,edx
   14001b9a6:	mov    QWORD PTR [rcx],rax
   14001b9a9:	mov    rcx,QWORD PTR [rcx+0x10]
   14001b9ad:	call   0x140030430
   14001b9b2:	mov    rcx,QWORD PTR [rdi+0x20]
   14001b9b6:	call   0x140030430
   14001b9bb:	mov    rcx,QWORD PTR [rdi+0x28]
   14001b9bf:	call   0x140030430
   14001b9c4:	mov    rax,QWORD PTR [rip+0x1a6ad]        # 0x140036078
   14001b9cb:	mov    QWORD PTR [rdi],rax
   14001b9ce:	mov    rax,QWORD PTR [rip+0x1a6ab]        # 0x140036080
   14001b9d5:	mov    QWORD PTR [rdi],rax
   14001b9d8:	test   bl,0x1
   14001b9db:	je     0x14001b9e5
   14001b9dd:	mov    rcx,rdi
   14001b9e0:	call   0x140030282
   14001b9e5:	mov    rax,rdi
   14001b9e8:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b9ed:	add    rsp,0x20
   14001b9f1:	pop    rdi
   14001b9f2:	ret    
   14001b9f3:	int3   
   14001b9f4:	int3   
   14001b9f5:	int3   
   14001b9f6:	int3   
   14001b9f7:	int3   
   14001b9f8:	int3   
   14001b9f9:	int3   
   14001b9fa:	int3   
   14001b9fb:	int3   
   14001b9fc:	int3   
   14001b9fd:	int3   
   14001b9fe:	int3   
   14001b9ff:	int3   
   14001ba00:	mov    QWORD PTR [rsp+0x8],rcx
   14001ba05:	push   rdi
   14001ba06:	sub    rsp,0x30
   14001ba0a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001ba13:	mov    QWORD PTR [rsp+0x48],rbx
   14001ba18:	mov    edi,edx
   14001ba1a:	mov    rbx,rcx
   14001ba1d:	add    rcx,0x20
   14001ba21:	call   0x140017040
   14001ba26:	nop
   14001ba27:	cmp    QWORD PTR [rbx+0x18],0x10
   14001ba2c:	jb     0x14001ba36
   14001ba2e:	mov    rcx,QWORD PTR [rbx]
   14001ba31:	call   0x140030282
   14001ba36:	mov    QWORD PTR [rbx+0x18],0xf
   14001ba3e:	mov    QWORD PTR [rbx+0x10],0x0
   14001ba46:	mov    BYTE PTR [rbx],0x0
   14001ba49:	test   dil,0x1
   14001ba4d:	je     0x14001ba57
   14001ba4f:	mov    rcx,rbx
   14001ba52:	call   0x140030282
   14001ba57:	mov    rax,rbx
   14001ba5a:	mov    rbx,QWORD PTR [rsp+0x48]
   14001ba5f:	add    rsp,0x30
   14001ba63:	pop    rdi
   14001ba64:	ret    
   14001ba65:	int3   
   14001ba66:	int3   
   14001ba67:	int3   
   14001ba68:	int3   
   14001ba69:	int3   
   14001ba6a:	int3   
   14001ba6b:	int3   
   14001ba6c:	int3   
   14001ba6d:	int3   
   14001ba6e:	int3   
   14001ba6f:	int3   
   14001ba70:	rex push rbx
   14001ba72:	sub    rsp,0x20
   14001ba76:	lea    rax,[rip+0x20533]        # 0x14003bfb0
   14001ba7d:	mov    rbx,rcx
   14001ba80:	mov    QWORD PTR [rcx],rax
   14001ba83:	test   dl,0x1
   14001ba86:	je     0x14001ba8d
   14001ba88:	call   0x140030282
   14001ba8d:	mov    rax,rbx
   14001ba90:	add    rsp,0x20
   14001ba94:	pop    rbx
   14001ba95:	ret    
   14001ba96:	int3   
   14001ba97:	int3   
   14001ba98:	int3   
   14001ba99:	int3   
   14001ba9a:	int3   
   14001ba9b:	int3   
   14001ba9c:	int3   
   14001ba9d:	int3   
   14001ba9e:	int3   
   14001ba9f:	int3   
   14001baa0:	rex push rbx
   14001baa2:	sub    rsp,0x20
   14001baa6:	lea    rax,[rip+0x1ee9b]        # 0x14003a948
   14001baad:	mov    rbx,rcx
   14001bab0:	mov    QWORD PTR [rcx],rax
   14001bab3:	test   dl,0x1
   14001bab6:	je     0x14001babd
   14001bab8:	call   0x140030282
   14001babd:	mov    rax,rbx
   14001bac0:	add    rsp,0x20
   14001bac4:	pop    rbx
   14001bac5:	ret    
   14001bac6:	int3   
   14001bac7:	int3   
   14001bac8:	int3   
   14001bac9:	int3   
   14001baca:	int3   
   14001bacb:	int3   
   14001bacc:	int3   
   14001bacd:	int3   
   14001bace:	int3   
   14001bacf:	int3   
   14001bad0:	rex push rbx
   14001bad2:	sub    rsp,0x20
   14001bad6:	lea    rax,[rip+0x1ee6b]        # 0x14003a948
   14001badd:	mov    rbx,rcx
   14001bae0:	mov    QWORD PTR [rcx],rax
   14001bae3:	test   dl,0x1
   14001bae6:	je     0x14001baed
   14001bae8:	call   0x140030282
   14001baed:	mov    rax,rbx
   14001baf0:	add    rsp,0x20
   14001baf4:	pop    rbx
   14001baf5:	ret    
   14001baf6:	int3   
   14001baf7:	int3   
   14001baf8:	int3   
   14001baf9:	int3   
   14001bafa:	int3   
   14001bafb:	int3   
   14001bafc:	int3   
   14001bafd:	int3   
   14001bafe:	int3   
   14001baff:	int3   
   14001bb00:	rex push rbx
   14001bb02:	sub    rsp,0x20
   14001bb06:	lea    rax,[rip+0x1ee3b]        # 0x14003a948
   14001bb0d:	mov    rbx,rcx
   14001bb10:	mov    QWORD PTR [rcx],rax
   14001bb13:	test   dl,0x1
   14001bb16:	je     0x14001bb1d
   14001bb18:	call   0x140030282
   14001bb1d:	mov    rax,rbx
   14001bb20:	add    rsp,0x20
   14001bb24:	pop    rbx
   14001bb25:	ret    
   14001bb26:	int3   
   14001bb27:	int3   
   14001bb28:	int3   
   14001bb29:	int3   
   14001bb2a:	int3   
   14001bb2b:	int3   
   14001bb2c:	int3   
   14001bb2d:	int3   
   14001bb2e:	int3   
   14001bb2f:	int3   
   14001bb30:	rex push rbx
   14001bb32:	sub    rsp,0x20
   14001bb36:	lea    rax,[rip+0x1ee0b]        # 0x14003a948
   14001bb3d:	mov    rbx,rcx
   14001bb40:	mov    QWORD PTR [rcx],rax
   14001bb43:	test   dl,0x1
   14001bb46:	je     0x14001bb4d
   14001bb48:	call   0x140030282
   14001bb4d:	mov    rax,rbx
   14001bb50:	add    rsp,0x20
   14001bb54:	pop    rbx
   14001bb55:	ret    
   14001bb56:	int3   
   14001bb57:	int3   
   14001bb58:	int3   
   14001bb59:	int3   
   14001bb5a:	int3   
   14001bb5b:	int3   
   14001bb5c:	int3   
   14001bb5d:	int3   
   14001bb5e:	int3   
   14001bb5f:	int3   
   14001bb60:	mov    QWORD PTR [rsp+0x8],rbx
   14001bb65:	push   rdi
   14001bb66:	sub    rsp,0x20
   14001bb6a:	mov    ebx,edx
   14001bb6c:	mov    rdi,rcx
   14001bb6f:	call   0x1400186e0
   14001bb74:	test   bl,0x1
   14001bb77:	je     0x14001bb81
   14001bb79:	mov    rcx,rdi
   14001bb7c:	call   0x140030282
   14001bb81:	mov    rax,rdi
   14001bb84:	mov    rbx,QWORD PTR [rsp+0x30]
   14001bb89:	add    rsp,0x20
   14001bb8d:	pop    rdi
   14001bb8e:	ret    
   14001bb8f:	int3   
   14001bb90:	mov    QWORD PTR [rsp+0x8],rbx
   14001bb95:	push   rdi
   14001bb96:	sub    rsp,0x20
   14001bb9a:	mov    ebx,edx
   14001bb9c:	mov    rdi,rcx
   14001bb9f:	call   0x140018770
   14001bba4:	test   bl,0x1
   14001bba7:	je     0x14001bbb1
   14001bba9:	mov    rcx,rdi
   14001bbac:	call   0x140030282
   14001bbb1:	mov    rax,rdi
   14001bbb4:	mov    rbx,QWORD PTR [rsp+0x30]
   14001bbb9:	add    rsp,0x20
   14001bbbd:	pop    rdi
   14001bbbe:	ret    
   14001bbbf:	int3   
   14001bbc0:	mov    QWORD PTR [rsp+0x8],rbx
   14001bbc5:	push   rdi
   14001bbc6:	sub    rsp,0x20
   14001bbca:	mov    ebx,edx
   14001bbcc:	mov    rdi,rcx
   14001bbcf:	call   0x140018800
   14001bbd4:	test   bl,0x1
   14001bbd7:	je     0x14001bbe1
   14001bbd9:	mov    rcx,rdi
   14001bbdc:	call   0x140030282
   14001bbe1:	mov    rax,rdi
   14001bbe4:	mov    rbx,QWORD PTR [rsp+0x30]
   14001bbe9:	add    rsp,0x20
   14001bbed:	pop    rdi
   14001bbee:	ret    
   14001bbef:	int3   
   14001bbf0:	mov    QWORD PTR [rsp+0x8],rbx
   14001bbf5:	push   rdi
   14001bbf6:	sub    rsp,0x20
   14001bbfa:	mov    ebx,edx
   14001bbfc:	mov    rdi,rcx
   14001bbff:	call   0x1400188b0
   14001bc04:	test   bl,0x1
   14001bc07:	je     0x14001bc11
   14001bc09:	mov    rcx,rdi
   14001bc0c:	call   0x140030282
   14001bc11:	mov    rax,rdi
   14001bc14:	mov    rbx,QWORD PTR [rsp+0x30]
   14001bc19:	add    rsp,0x20
   14001bc1d:	pop    rdi
   14001bc1e:	ret    
   14001bc1f:	int3   
   14001bc20:	mov    QWORD PTR [rsp+0x8],rbx
   14001bc25:	push   rdi
   14001bc26:	sub    rsp,0x20
   14001bc2a:	mov    ebx,edx
   14001bc2c:	mov    rdi,rcx
   14001bc2f:	call   0x140018c20
   14001bc34:	test   bl,0x1
   14001bc37:	je     0x14001bc41
   14001bc39:	mov    rcx,rdi
   14001bc3c:	call   0x140030282
   14001bc41:	mov    rax,rdi
   14001bc44:	mov    rbx,QWORD PTR [rsp+0x30]
   14001bc49:	add    rsp,0x20
   14001bc4d:	pop    rdi
   14001bc4e:	ret    
   14001bc4f:	int3   
   14001bc50:	rex push rbx
   14001bc52:	sub    rsp,0x20
   14001bc56:	lea    rax,[rip+0x1ea1b]        # 0x14003a678
   14001bc5d:	mov    rbx,rcx
   14001bc60:	mov    QWORD PTR [rcx],rax
   14001bc63:	test   dl,0x1
   14001bc66:	je     0x14001bc6d
   14001bc68:	call   0x140030282
   14001bc6d:	mov    rax,rbx
   14001bc70:	add    rsp,0x20
   14001bc74:	pop    rbx
   14001bc75:	ret    
   14001bc76:	int3   
   14001bc77:	int3   
   14001bc78:	int3   
   14001bc79:	int3   
   14001bc7a:	int3   
   14001bc7b:	int3   
   14001bc7c:	int3   
   14001bc7d:	int3   
   14001bc7e:	int3   
   14001bc7f:	int3   
   14001bc80:	rex push rbx
   14001bc82:	sub    rsp,0x20
   14001bc86:	lea    rax,[rip+0x1e9eb]        # 0x14003a678
   14001bc8d:	mov    rbx,rcx
   14001bc90:	mov    QWORD PTR [rcx],rax
   14001bc93:	test   dl,0x1
   14001bc96:	je     0x14001bc9d
   14001bc98:	call   0x140030282
   14001bc9d:	mov    rax,rbx
   14001bca0:	add    rsp,0x20
   14001bca4:	pop    rbx
   14001bca5:	ret    
   14001bca6:	int3   
   14001bca7:	int3   
   14001bca8:	int3   
   14001bca9:	int3   
   14001bcaa:	int3   
   14001bcab:	int3   
   14001bcac:	int3   
   14001bcad:	int3   
   14001bcae:	int3   
   14001bcaf:	int3   
   14001bcb0:	mov    QWORD PTR [rsp+0x8],rbx
   14001bcb5:	push   rdi
   14001bcb6:	sub    rsp,0x20
   14001bcba:	mov    ebx,edx
   14001bcbc:	mov    rdi,rcx
   14001bcbf:	call   QWORD PTR [rip+0x1a77b]        # 0x140036440
   14001bcc5:	test   bl,0x1
   14001bcc8:	je     0x14001bcd2
   14001bcca:	mov    rcx,rdi
   14001bccd:	call   0x140030282
   14001bcd2:	mov    rax,rdi
   14001bcd5:	mov    rbx,QWORD PTR [rsp+0x30]
   14001bcda:	add    rsp,0x20
   14001bcde:	pop    rdi
   14001bcdf:	ret    
   14001bce0:	rex push rbx
   14001bce2:	sub    rsp,0x20
   14001bce6:	lea    rax,[rip+0x1e98b]        # 0x14003a678
   14001bced:	mov    rbx,rcx
   14001bcf0:	mov    QWORD PTR [rcx],rax
   14001bcf3:	test   dl,0x1
   14001bcf6:	je     0x14001bcfd
   14001bcf8:	call   0x140030282
   14001bcfd:	mov    rax,rbx
   14001bd00:	add    rsp,0x20
   14001bd04:	pop    rbx
   14001bd05:	ret    
   14001bd06:	int3   
   14001bd07:	int3   
   14001bd08:	int3   
   14001bd09:	int3   
   14001bd0a:	int3   
   14001bd0b:	int3   
   14001bd0c:	int3   
   14001bd0d:	int3   
   14001bd0e:	int3   
   14001bd0f:	int3   
   14001bd10:	mov    QWORD PTR [rsp+0x8],rbx
   14001bd15:	push   rdi
   14001bd16:	sub    rsp,0x20
   14001bd1a:	mov    ebx,edx
   14001bd1c:	mov    rdi,rcx
   14001bd1f:	call   QWORD PTR [rip+0x1a71b]        # 0x140036440
   14001bd25:	test   bl,0x1
   14001bd28:	je     0x14001bd32
   14001bd2a:	mov    rcx,rdi
   14001bd2d:	call   0x140030282
   14001bd32:	mov    rax,rdi
   14001bd35:	mov    rbx,QWORD PTR [rsp+0x30]
   14001bd3a:	add    rsp,0x20
   14001bd3e:	pop    rdi
   14001bd3f:	ret    
   14001bd40:	mov    QWORD PTR [rsp+0x8],rbx
   14001bd45:	push   rdi
   14001bd46:	sub    rsp,0x20
   14001bd4a:	mov    ebx,edx
   14001bd4c:	mov    rdi,rcx
   14001bd4f:	call   QWORD PTR [rip+0x1a6eb]        # 0x140036440
   14001bd55:	test   bl,0x1
   14001bd58:	je     0x14001bd62
   14001bd5a:	mov    rcx,rdi
   14001bd5d:	call   0x140030282
   14001bd62:	mov    rax,rdi
   14001bd65:	mov    rbx,QWORD PTR [rsp+0x30]
   14001bd6a:	add    rsp,0x20
   14001bd6e:	pop    rdi
   14001bd6f:	ret    
   14001bd70:	mov    QWORD PTR [rsp+0x8],rbx
   14001bd75:	push   rdi
   14001bd76:	sub    rsp,0x20
   14001bd7a:	lea    rax,[rip+0x1eb3f]        # 0x14003a8c0
   14001bd81:	mov    ebx,edx
   14001bd83:	mov    rdi,rcx
   14001bd86:	mov    QWORD PTR [rcx],rax
   14001bd89:	call   QWORD PTR [rip+0x1a689]        # 0x140036418
   14001bd8f:	test   bl,0x1
   14001bd92:	je     0x14001bd9c
   14001bd94:	mov    rcx,rdi
   14001bd97:	call   0x140030282
   14001bd9c:	mov    rax,rdi
   14001bd9f:	mov    rbx,QWORD PTR [rsp+0x30]
   14001bda4:	add    rsp,0x20
   14001bda8:	pop    rdi
   14001bda9:	ret    
   14001bdaa:	int3   
   14001bdab:	int3   
   14001bdac:	int3   
   14001bdad:	int3   
   14001bdae:	int3   
   14001bdaf:	int3   
   14001bdb0:	mov    QWORD PTR [rsp+0x8],rbx
   14001bdb5:	push   rdi
   14001bdb6:	sub    rsp,0x20
   14001bdba:	mov    ebx,edx
   14001bdbc:	mov    rdi,rcx
   14001bdbf:	call   QWORD PTR [rip+0x1a67b]        # 0x140036440
   14001bdc5:	test   bl,0x1
   14001bdc8:	je     0x14001bdd2
   14001bdca:	mov    rcx,rdi
   14001bdcd:	call   0x140030282
   14001bdd2:	mov    rax,rdi
   14001bdd5:	mov    rbx,QWORD PTR [rsp+0x30]
   14001bdda:	add    rsp,0x20
   14001bdde:	pop    rdi
   14001bddf:	ret    
   14001bde0:	mov    QWORD PTR [rsp+0x8],rbx
   14001bde5:	push   rdi
   14001bde6:	sub    rsp,0x20
   14001bdea:	mov    ebx,edx
   14001bdec:	mov    rdi,rcx
   14001bdef:	call   0x140018f40
   14001bdf4:	test   bl,0x1
   14001bdf7:	je     0x14001be01
   14001bdf9:	mov    rcx,rdi
   14001bdfc:	call   0x140030282
   14001be01:	mov    rax,rdi
   14001be04:	mov    rbx,QWORD PTR [rsp+0x30]
   14001be09:	add    rsp,0x20
   14001be0d:	pop    rdi
   14001be0e:	ret    
   14001be0f:	int3   
   14001be10:	rex push rbx
   14001be12:	sub    rsp,0x20
   14001be16:	lea    rax,[rip+0x1ea2b]        # 0x14003a848
   14001be1d:	mov    rbx,rcx
   14001be20:	mov    QWORD PTR [rcx],rax
   14001be23:	test   dl,0x1
   14001be26:	je     0x14001be2d
   14001be28:	call   0x140030282
   14001be2d:	mov    rax,rbx
   14001be30:	add    rsp,0x20
   14001be34:	pop    rbx
   14001be35:	ret    
   14001be36:	int3   
   14001be37:	int3   
   14001be38:	int3   
   14001be39:	int3   
   14001be3a:	int3   
   14001be3b:	int3   
   14001be3c:	int3   
   14001be3d:	int3   
   14001be3e:	int3   
   14001be3f:	int3   
   14001be40:	mov    QWORD PTR [rsp+0x8],rbx
   14001be45:	push   rdi
   14001be46:	sub    rsp,0x20
   14001be4a:	mov    ebx,edx
   14001be4c:	mov    rdi,rcx
   14001be4f:	call   QWORD PTR [rip+0x1a5eb]        # 0x140036440
   14001be55:	test   bl,0x1
   14001be58:	je     0x14001be62
   14001be5a:	mov    rcx,rdi
   14001be5d:	call   0x140030282
   14001be62:	mov    rax,rdi
   14001be65:	mov    rbx,QWORD PTR [rsp+0x30]
   14001be6a:	add    rsp,0x20
   14001be6e:	pop    rdi
   14001be6f:	ret    
   14001be70:	rex push rbx
   14001be72:	sub    rsp,0x20
   14001be76:	lea    rax,[rip+0x1e7fb]        # 0x14003a678
   14001be7d:	mov    rbx,rcx
   14001be80:	mov    QWORD PTR [rcx],rax
   14001be83:	test   dl,0x1
   14001be86:	je     0x14001be8d
   14001be88:	call   0x140030282
   14001be8d:	mov    rax,rbx
   14001be90:	add    rsp,0x20
   14001be94:	pop    rbx
   14001be95:	ret    
   14001be96:	int3   
   14001be97:	int3   
   14001be98:	int3   
   14001be99:	int3   
   14001be9a:	int3   
   14001be9b:	int3   
   14001be9c:	int3   
   14001be9d:	int3   
   14001be9e:	int3   
   14001be9f:	int3   
   14001bea0:	mov    QWORD PTR [rsp+0x8],rbx
   14001bea5:	push   rdi
   14001bea6:	sub    rsp,0x20
   14001beaa:	mov    ebx,edx
   14001beac:	mov    rdi,rcx
   14001beaf:	call   QWORD PTR [rip+0x1a58b]        # 0x140036440
   14001beb5:	test   bl,0x1
   14001beb8:	je     0x14001bec2
   14001beba:	mov    rcx,rdi
   14001bebd:	call   0x140030282
   14001bec2:	mov    rax,rdi
   14001bec5:	mov    rbx,QWORD PTR [rsp+0x30]
   14001beca:	add    rsp,0x20
   14001bece:	pop    rdi
   14001becf:	ret    
   14001bed0:	mov    QWORD PTR [rsp+0x8],rbx
   14001bed5:	push   rdi
   14001bed6:	sub    rsp,0x20
   14001beda:	mov    ebx,edx
   14001bedc:	mov    rdi,rcx
   14001bedf:	call   0x140019040
   14001bee4:	test   bl,0x1
   14001bee7:	je     0x14001bef1
   14001bee9:	mov    rcx,rdi
   14001beec:	call   0x140030282
   14001bef1:	mov    rax,rdi
   14001bef4:	mov    rbx,QWORD PTR [rsp+0x30]
   14001bef9:	add    rsp,0x20
   14001befd:	pop    rdi
   14001befe:	ret    
   14001beff:	int3   
   14001bf00:	mov    QWORD PTR [rsp+0x8],rcx
   14001bf05:	push   rdi
   14001bf06:	sub    rsp,0x30
   14001bf0a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001bf13:	mov    QWORD PTR [rsp+0x48],rbx
   14001bf18:	mov    edi,edx
   14001bf1a:	mov    rbx,rcx
   14001bf1d:	mov    rcx,QWORD PTR [rcx+0x20]
   14001bf21:	test   rcx,rcx
   14001bf24:	je     0x14001bf2c
   14001bf26:	call   0x140030282
   14001bf2b:	nop
   14001bf2c:	xor    r8d,r8d
   14001bf2f:	mov    dl,0x1
   14001bf31:	mov    rcx,rbx
   14001bf34:	call   QWORD PTR [rip+0x1a66e]        # 0x1400365a8
   14001bf3a:	nop
   14001bf3b:	mov    rcx,rbx
   14001bf3e:	call   QWORD PTR [rip+0x1a6b4]        # 0x1400365f8
   14001bf44:	test   dil,0x1
   14001bf48:	je     0x14001bf52
   14001bf4a:	mov    rcx,rbx
   14001bf4d:	call   0x140030282
   14001bf52:	mov    rax,rbx
   14001bf55:	mov    rbx,QWORD PTR [rsp+0x48]
   14001bf5a:	add    rsp,0x30
   14001bf5e:	pop    rdi
   14001bf5f:	ret    
   14001bf60:	mov    QWORD PTR [rsp+0x8],rcx
   14001bf65:	push   rdi
   14001bf66:	sub    rsp,0x30
   14001bf6a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001bf73:	mov    QWORD PTR [rsp+0x48],rbx
   14001bf78:	mov    edi,edx
   14001bf7a:	mov    rbx,rcx
   14001bf7d:	mov    rcx,QWORD PTR [rcx+0x28]
   14001bf81:	test   rcx,rcx
   14001bf84:	je     0x14001bf8c
   14001bf86:	call   0x140030282
   14001bf8b:	nop
   14001bf8c:	xor    r8d,r8d
   14001bf8f:	xor    edx,edx
   14001bf91:	mov    rcx,rbx
   14001bf94:	call   QWORD PTR [rip+0x1a60e]        # 0x1400365a8
   14001bf9a:	nop
   14001bf9b:	mov    rcx,rbx
   14001bf9e:	call   QWORD PTR [rip+0x1a654]        # 0x1400365f8
   14001bfa4:	test   dil,0x1
   14001bfa8:	je     0x14001bfb2
   14001bfaa:	mov    rcx,rbx
   14001bfad:	call   0x140030282
   14001bfb2:	mov    rax,rbx
   14001bfb5:	mov    rbx,QWORD PTR [rsp+0x48]
   14001bfba:	add    rsp,0x30
   14001bfbe:	pop    rdi
   14001bfbf:	ret    
   14001bfc0:	mov    QWORD PTR [rsp+0x8],rbx
   14001bfc5:	push   rdi
   14001bfc6:	sub    rsp,0x20
   14001bfca:	mov    ebx,edx
   14001bfcc:	mov    rdi,rcx
   14001bfcf:	call   QWORD PTR [rip+0x1a46b]        # 0x140036440
   14001bfd5:	test   bl,0x1
   14001bfd8:	je     0x14001bfe2
   14001bfda:	mov    rcx,rdi
   14001bfdd:	call   0x140030282
   14001bfe2:	mov    rax,rdi
   14001bfe5:	mov    rbx,QWORD PTR [rsp+0x30]
   14001bfea:	add    rsp,0x20
   14001bfee:	pop    rdi
   14001bfef:	ret    
   14001bff0:	mov    QWORD PTR [rsp+0x8],rbx
   14001bff5:	push   rdi
   14001bff6:	sub    rsp,0x20
   14001bffa:	mov    ebx,edx
   14001bffc:	mov    rdi,rcx
   14001bfff:	call   QWORD PTR [rip+0x1a43b]        # 0x140036440
   14001c005:	test   bl,0x1
   14001c008:	je     0x14001c012
   14001c00a:	mov    rcx,rdi
   14001c00d:	call   0x140030282
   14001c012:	mov    rax,rdi
   14001c015:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c01a:	add    rsp,0x20
   14001c01e:	pop    rdi
   14001c01f:	ret    
   14001c020:	mov    QWORD PTR [rsp+0x8],rbx
   14001c025:	push   rdi
   14001c026:	sub    rsp,0x20
   14001c02a:	mov    ebx,edx
   14001c02c:	mov    rdi,rcx
   14001c02f:	call   QWORD PTR [rip+0x1a40b]        # 0x140036440
   14001c035:	test   bl,0x1
   14001c038:	je     0x14001c042
   14001c03a:	mov    rcx,rdi
   14001c03d:	call   0x140030282
   14001c042:	mov    rax,rdi
   14001c045:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c04a:	add    rsp,0x20
   14001c04e:	pop    rdi
   14001c04f:	ret    
   14001c050:	rex push rbx
   14001c052:	sub    rsp,0x20
   14001c056:	lea    rax,[rip+0x1e80b]        # 0x14003a868
   14001c05d:	mov    rbx,rcx
   14001c060:	mov    QWORD PTR [rcx],rax
   14001c063:	test   dl,0x1
   14001c066:	je     0x14001c06d
   14001c068:	call   0x140030282
   14001c06d:	mov    rax,rbx
   14001c070:	add    rsp,0x20
   14001c074:	pop    rbx
   14001c075:	ret    
   14001c076:	int3   
   14001c077:	int3   
   14001c078:	int3   
   14001c079:	int3   
   14001c07a:	int3   
   14001c07b:	int3   
   14001c07c:	int3   
   14001c07d:	int3   
   14001c07e:	int3   
   14001c07f:	int3   
   14001c080:	mov    QWORD PTR [rsp+0x8],rbx
   14001c085:	push   rdi
   14001c086:	sub    rsp,0x20
   14001c08a:	lea    rax,[rip+0x1e8ff]        # 0x14003a990
   14001c091:	mov    rbx,rcx
   14001c094:	mov    edi,edx
   14001c096:	mov    QWORD PTR [rcx],rax
   14001c099:	mov    rcx,QWORD PTR [rcx+0x18]
   14001c09d:	test   rcx,rcx
   14001c0a0:	je     0x14001c0ac
   14001c0a2:	mov    rax,QWORD PTR [rcx]
   14001c0a5:	mov    edx,0x1
   14001c0aa:	call   QWORD PTR [rax]
   14001c0ac:	lea    rax,[rip+0x1e8c5]        # 0x14003a978
   14001c0b3:	mov    rcx,rbx
   14001c0b6:	mov    QWORD PTR [rbx],rax
   14001c0b9:	call   QWORD PTR [rip+0x1a381]        # 0x140036440
   14001c0bf:	test   dil,0x1
   14001c0c3:	je     0x14001c0cd
   14001c0c5:	mov    rcx,rbx
   14001c0c8:	call   0x140030282
   14001c0cd:	mov    rax,rbx
   14001c0d0:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c0d5:	add    rsp,0x20
   14001c0d9:	pop    rdi
   14001c0da:	ret    
   14001c0db:	int3   
   14001c0dc:	int3   
   14001c0dd:	int3   
   14001c0de:	int3   
   14001c0df:	int3   
   14001c0e0:	mov    QWORD PTR [rsp+0x8],rbx
   14001c0e5:	push   rdi
   14001c0e6:	sub    rsp,0x20
   14001c0ea:	lea    rax,[rip+0x1e8b7]        # 0x14003a9a8
   14001c0f1:	mov    rbx,rcx
   14001c0f4:	mov    edi,edx
   14001c0f6:	mov    QWORD PTR [rcx],rax
   14001c0f9:	mov    rcx,QWORD PTR [rcx+0x18]
   14001c0fd:	test   rcx,rcx
   14001c100:	je     0x14001c10c
   14001c102:	mov    rax,QWORD PTR [rcx]
   14001c105:	mov    edx,0x1
   14001c10a:	call   QWORD PTR [rax]
   14001c10c:	lea    rax,[rip+0x1e865]        # 0x14003a978
   14001c113:	mov    rcx,rbx
   14001c116:	mov    QWORD PTR [rbx],rax
   14001c119:	call   QWORD PTR [rip+0x1a321]        # 0x140036440
   14001c11f:	test   dil,0x1
   14001c123:	je     0x14001c12d
   14001c125:	mov    rcx,rbx
   14001c128:	call   0x140030282
   14001c12d:	mov    rax,rbx
   14001c130:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c135:	add    rsp,0x20
   14001c139:	pop    rdi
   14001c13a:	ret    
   14001c13b:	int3   
   14001c13c:	int3   
   14001c13d:	int3   
   14001c13e:	int3   
   14001c13f:	int3   
   14001c140:	mov    QWORD PTR [rsp+0x8],rbx
   14001c145:	push   rdi
   14001c146:	sub    rsp,0x20
   14001c14a:	lea    rax,[rip+0x1e827]        # 0x14003a978
   14001c151:	mov    ebx,edx
   14001c153:	mov    rdi,rcx
   14001c156:	mov    QWORD PTR [rcx],rax
   14001c159:	call   QWORD PTR [rip+0x1a2e1]        # 0x140036440
   14001c15f:	test   bl,0x1
   14001c162:	je     0x14001c16c
   14001c164:	mov    rcx,rdi
   14001c167:	call   0x140030282
   14001c16c:	mov    rax,rdi
   14001c16f:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c174:	add    rsp,0x20
   14001c178:	pop    rdi
   14001c179:	ret    
   14001c17a:	int3   
   14001c17b:	int3   
   14001c17c:	int3   
   14001c17d:	int3   
   14001c17e:	int3   
   14001c17f:	int3   
   14001c180:	mov    QWORD PTR [rsp+0x8],rbx
   14001c185:	push   rdi
   14001c186:	sub    rsp,0x20
   14001c18a:	mov    ebx,edx
   14001c18c:	mov    rdi,rcx
   14001c18f:	call   QWORD PTR [rip+0x1a2ab]        # 0x140036440
   14001c195:	test   bl,0x1
   14001c198:	je     0x14001c1a2
   14001c19a:	mov    rcx,rdi
   14001c19d:	call   0x140030282
   14001c1a2:	mov    rax,rdi
   14001c1a5:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c1aa:	add    rsp,0x20
   14001c1ae:	pop    rdi
   14001c1af:	ret    
   14001c1b0:	rex push rbx
   14001c1b2:	sub    rsp,0x20
   14001c1b6:	lea    rax,[rip+0x1e78b]        # 0x14003a948
   14001c1bd:	mov    rbx,rcx
   14001c1c0:	mov    QWORD PTR [rcx],rax
   14001c1c3:	test   dl,0x1
   14001c1c6:	je     0x14001c1cd
   14001c1c8:	call   0x140030282
   14001c1cd:	mov    rax,rbx
   14001c1d0:	add    rsp,0x20
   14001c1d4:	pop    rbx
   14001c1d5:	ret    
   14001c1d6:	int3   
   14001c1d7:	int3   
   14001c1d8:	int3   
   14001c1d9:	int3   
   14001c1da:	int3   
   14001c1db:	int3   
   14001c1dc:	int3   
   14001c1dd:	int3   
   14001c1de:	int3   
   14001c1df:	int3   
   14001c1e0:	mov    QWORD PTR [rsp+0x8],rbx
   14001c1e5:	push   rdi
   14001c1e6:	sub    rsp,0x20
   14001c1ea:	mov    ebx,edx
   14001c1ec:	mov    rdi,rcx
   14001c1ef:	call   QWORD PTR [rip+0x1a24b]        # 0x140036440
   14001c1f5:	test   bl,0x1
   14001c1f8:	je     0x14001c202
   14001c1fa:	mov    rcx,rdi
   14001c1fd:	call   0x140030282
   14001c202:	mov    rax,rdi
   14001c205:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c20a:	add    rsp,0x20
   14001c20e:	pop    rdi
   14001c20f:	ret    
   14001c210:	rex push rbx
   14001c212:	sub    rsp,0x20
   14001c216:	lea    rax,[rip+0x1e713]        # 0x14003a930
   14001c21d:	mov    rbx,rcx
   14001c220:	mov    QWORD PTR [rcx],rax
   14001c223:	test   dl,0x1
   14001c226:	je     0x14001c22d
   14001c228:	call   0x140030282
   14001c22d:	mov    rax,rbx
   14001c230:	add    rsp,0x20
   14001c234:	pop    rbx
   14001c235:	ret    
   14001c236:	int3   
   14001c237:	int3   
   14001c238:	int3   
   14001c239:	int3   
   14001c23a:	int3   
   14001c23b:	int3   
   14001c23c:	int3   
   14001c23d:	int3   
   14001c23e:	int3   
   14001c23f:	int3   
   14001c240:	mov    QWORD PTR [rsp+0x8],rbx
   14001c245:	push   rdi
   14001c246:	sub    rsp,0x20
   14001c24a:	mov    ebx,edx
   14001c24c:	mov    rdi,rcx
   14001c24f:	call   0x140019040
   14001c254:	test   bl,0x1
   14001c257:	je     0x14001c261
   14001c259:	mov    rcx,rdi
   14001c25c:	call   0x140030282
   14001c261:	mov    rax,rdi
   14001c264:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c269:	add    rsp,0x20
   14001c26d:	pop    rdi
   14001c26e:	ret    
   14001c26f:	int3   
   14001c270:	ret    0x0
   14001c273:	int3   
   14001c274:	int3   
   14001c275:	int3   
   14001c276:	int3   
   14001c277:	int3   
   14001c278:	int3   
   14001c279:	int3   
   14001c27a:	int3   
   14001c27b:	int3   
   14001c27c:	int3   
   14001c27d:	int3   
   14001c27e:	int3   
   14001c27f:	int3   
   14001c280:	mov    QWORD PTR [rsp+0x8],rbx
   14001c285:	push   rdi
   14001c286:	sub    rsp,0x20
   14001c28a:	cmp    QWORD PTR [rdx+0x18],0x10
   14001c28f:	mov    rbx,rdx
   14001c292:	mov    rdi,rcx
   14001c295:	jae    0x14001c2a8
   14001c297:	mov    r8,QWORD PTR [rdx+0x10]
   14001c29b:	inc    r8
   14001c29e:	je     0x14001c2ba
   14001c2a0:	call   QWORD PTR [rip+0x1a1ba]        # 0x140036460
   14001c2a6:	jmp    0x14001c2ba
   14001c2a8:	test   rcx,rcx
   14001c2ab:	je     0x14001c2b3
   14001c2ad:	mov    rax,QWORD PTR [rdx]
   14001c2b0:	mov    QWORD PTR [rcx],rax
   14001c2b3:	mov    QWORD PTR [rdx],0x0
   14001c2ba:	mov    rax,QWORD PTR [rbx+0x10]
   14001c2be:	mov    QWORD PTR [rdi+0x10],rax
   14001c2c2:	mov    rax,QWORD PTR [rbx+0x18]
   14001c2c6:	mov    QWORD PTR [rdi+0x18],rax
   14001c2ca:	mov    QWORD PTR [rbx+0x18],0xf
   14001c2d2:	mov    QWORD PTR [rbx+0x10],0x0
   14001c2da:	mov    BYTE PTR [rbx],0x0
   14001c2dd:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c2e2:	add    rsp,0x20
   14001c2e6:	pop    rdi
   14001c2e7:	ret    
   14001c2e8:	int3   
   14001c2e9:	int3   
   14001c2ea:	int3   
   14001c2eb:	int3   
   14001c2ec:	int3   
   14001c2ed:	int3   
   14001c2ee:	int3   
   14001c2ef:	int3   
   14001c2f0:	mov    rax,QWORD PTR [rdx]
   14001c2f3:	mov    QWORD PTR [rcx],rax
   14001c2f6:	mov    rax,QWORD PTR [rdx+0x8]
   14001c2fa:	mov    QWORD PTR [rcx+0x8],rax
   14001c2fe:	mov    rax,QWORD PTR [rdx+0x10]
   14001c302:	mov    QWORD PTR [rcx+0x10],rax
   14001c306:	xor    eax,eax
   14001c308:	mov    QWORD PTR [rdx],rax
   14001c30b:	mov    QWORD PTR [rdx+0x8],rax
   14001c30f:	mov    QWORD PTR [rdx+0x10],rax
   14001c313:	ret    
   14001c314:	int3   
   14001c315:	int3   
   14001c316:	int3   
   14001c317:	int3   
   14001c318:	int3   
   14001c319:	int3   
   14001c31a:	int3   
   14001c31b:	int3   
   14001c31c:	int3   
   14001c31d:	int3   
   14001c31e:	int3   
   14001c31f:	int3   
   14001c320:	mov    rax,QWORD PTR [rdx]
   14001c323:	mov    QWORD PTR [rcx],rax
   14001c326:	mov    rax,QWORD PTR [rdx+0x8]
   14001c32a:	mov    QWORD PTR [rcx+0x8],rax
   14001c32e:	mov    rax,QWORD PTR [rdx+0x10]
   14001c332:	mov    QWORD PTR [rcx+0x10],rax
   14001c336:	xor    eax,eax
   14001c338:	mov    QWORD PTR [rdx],rax
   14001c33b:	mov    QWORD PTR [rdx+0x8],rax
   14001c33f:	mov    QWORD PTR [rdx+0x10],rax
   14001c343:	ret    
   14001c344:	int3   
   14001c345:	int3   
   14001c346:	int3   
   14001c347:	int3   
   14001c348:	int3   
   14001c349:	int3   
   14001c34a:	int3   
   14001c34b:	int3   
   14001c34c:	int3   
   14001c34d:	int3   
   14001c34e:	int3   
   14001c34f:	int3   
   14001c350:	mov    rax,QWORD PTR [rdx]
   14001c353:	mov    QWORD PTR [rcx],rax
   14001c356:	mov    rax,QWORD PTR [rdx+0x8]
   14001c35a:	mov    QWORD PTR [rcx+0x8],rax
   14001c35e:	mov    rax,QWORD PTR [rdx+0x10]
   14001c362:	mov    QWORD PTR [rcx+0x10],rax
   14001c366:	xor    eax,eax
   14001c368:	mov    QWORD PTR [rdx],rax
   14001c36b:	mov    QWORD PTR [rdx+0x8],rax
   14001c36f:	mov    QWORD PTR [rdx+0x10],rax
   14001c373:	ret    
   14001c374:	int3   
   14001c375:	int3   
   14001c376:	int3   
   14001c377:	int3   
   14001c378:	int3   
   14001c379:	int3   
   14001c37a:	int3   
   14001c37b:	int3   
   14001c37c:	int3   
   14001c37d:	int3   
   14001c37e:	int3   
   14001c37f:	int3   
   14001c380:	mov    rax,QWORD PTR [rdx]
   14001c383:	mov    QWORD PTR [rcx],rax
   14001c386:	mov    rax,QWORD PTR [rdx+0x8]
   14001c38a:	mov    QWORD PTR [rcx+0x8],rax
   14001c38e:	mov    rax,QWORD PTR [rdx+0x10]
   14001c392:	mov    QWORD PTR [rcx+0x10],rax
   14001c396:	xor    eax,eax
   14001c398:	mov    QWORD PTR [rdx],rax
   14001c39b:	mov    QWORD PTR [rdx+0x8],rax
   14001c39f:	mov    QWORD PTR [rdx+0x10],rax
   14001c3a3:	ret    
   14001c3a4:	int3   
   14001c3a5:	int3   
   14001c3a6:	int3   
   14001c3a7:	int3   
   14001c3a8:	int3   
   14001c3a9:	int3   
   14001c3aa:	int3   
   14001c3ab:	int3   
   14001c3ac:	int3   
   14001c3ad:	int3   
   14001c3ae:	int3   
   14001c3af:	int3   
   14001c3b0:	rex push rbx
   14001c3b2:	sub    rsp,0x20
   14001c3b6:	xor    eax,eax
   14001c3b8:	mov    rbx,rcx
   14001c3bb:	mov    QWORD PTR [rcx],rax
   14001c3be:	mov    QWORD PTR [rcx+0x8],rax
   14001c3c2:	mov    QWORD PTR [rcx+0x10],rax
   14001c3c6:	test   rdx,rdx
   14001c3c9:	je     0x14001c417
   14001c3cb:	movabs rax,0x2aaaaaaaaaaaaaa
   14001c3d5:	cmp    rdx,rax
   14001c3d8:	jbe    0x14001c3e8
   14001c3da:	lea    rcx,[rip+0x2055f]        # 0x14003c940
   14001c3e1:	call   QWORD PTR [rip+0x19e39]        # 0x140036220
   14001c3e7:	int3   
   14001c3e8:	mov    QWORD PTR [rsp+0x30],rdi
   14001c3ed:	lea    rdi,[rdx+rdx*2]
   14001c3f1:	shl    rdi,0x5
   14001c3f5:	mov    rcx,rdi
   14001c3f8:	call   0x14003027c
   14001c3fd:	test   rax,rax
   14001c400:	je     0x14001c41d
   14001c402:	mov    QWORD PTR [rbx],rax
   14001c405:	mov    QWORD PTR [rbx+0x8],rax
   14001c409:	add    rax,rdi
   14001c40c:	mov    rdi,QWORD PTR [rsp+0x30]
   14001c411:	mov    QWORD PTR [rbx+0x10],rax
   14001c415:	mov    al,0x1
   14001c417:	add    rsp,0x20
   14001c41b:	pop    rbx
   14001c41c:	ret    
   14001c41d:	call   QWORD PTR [rip+0x19df5]        # 0x140036218
   14001c423:	int3   
   14001c424:	int3   
   14001c425:	int3   
   14001c426:	int3   
   14001c427:	int3   
   14001c428:	int3   
   14001c429:	int3   
   14001c42a:	int3   
   14001c42b:	int3   
   14001c42c:	int3   
   14001c42d:	int3   
   14001c42e:	int3   
   14001c42f:	int3   
   14001c430:	mov    QWORD PTR [rsp+0x8],rbx
   14001c435:	push   rdi
   14001c436:	sub    rsp,0x20
   14001c43a:	xor    eax,eax
   14001c43c:	mov    rdi,rdx
   14001c43f:	mov    rbx,rcx
   14001c442:	mov    QWORD PTR [rcx],rax
   14001c445:	mov    QWORD PTR [rcx+0x8],rax
   14001c449:	mov    QWORD PTR [rcx+0x10],rax
   14001c44d:	test   rdx,rdx
   14001c450:	je     0x14001c490
   14001c452:	movabs rax,0x7ffffffffffffff
   14001c45c:	cmp    rdx,rax
   14001c45f:	jbe    0x14001c46f
   14001c461:	lea    rcx,[rip+0x204d8]        # 0x14003c940
   14001c468:	call   QWORD PTR [rip+0x19db2]        # 0x140036220
   14001c46e:	int3   
   14001c46f:	shl    rdi,0x5
   14001c473:	mov    rcx,rdi
   14001c476:	call   0x14003027c
   14001c47b:	test   rax,rax
   14001c47e:	je     0x14001c49b
   14001c480:	mov    QWORD PTR [rbx],rax
   14001c483:	mov    QWORD PTR [rbx+0x8],rax
   14001c487:	add    rax,rdi
   14001c48a:	mov    QWORD PTR [rbx+0x10],rax
   14001c48e:	mov    al,0x1
   14001c490:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c495:	add    rsp,0x20
   14001c499:	pop    rdi
   14001c49a:	ret    
   14001c49b:	call   QWORD PTR [rip+0x19d77]        # 0x140036218
   14001c4a1:	int3   
   14001c4a2:	int3   
   14001c4a3:	int3   
   14001c4a4:	int3   
   14001c4a5:	int3   
   14001c4a6:	int3   
   14001c4a7:	int3   
   14001c4a8:	int3   
   14001c4a9:	int3   
   14001c4aa:	int3   
   14001c4ab:	int3   
   14001c4ac:	int3   
   14001c4ad:	int3   
   14001c4ae:	int3   
   14001c4af:	int3   
   14001c4b0:	xor    r8d,r8d
   14001c4b3:	xor    edx,edx
   14001c4b5:	jmp    0x14001c4d0
   14001c4ba:	int3   
   14001c4bb:	int3   
   14001c4bc:	int3   
   14001c4bd:	int3   
   14001c4be:	int3   
   14001c4bf:	int3   
   14001c4c0:	xor    r8d,r8d
   14001c4c3:	xor    edx,edx
   14001c4c5:	jmp    0x14001c530
   14001c4ca:	int3   
   14001c4cb:	int3   
   14001c4cc:	int3   
   14001c4cd:	int3   
   14001c4ce:	int3   
   14001c4cf:	int3   
   14001c4d0:	rex push rdi
   14001c4d2:	sub    rsp,0x30
   14001c4d6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001c4df:	mov    QWORD PTR [rsp+0x40],rbx
   14001c4e4:	mov    rdi,r8
   14001c4e7:	mov    rbx,rdx
   14001c4ea:	mov    ecx,0x18
   14001c4ef:	call   0x14003027c
   14001c4f4:	mov    QWORD PTR [rsp+0x58],rax
   14001c4f9:	test   rax,rax
   14001c4fc:	jne    0x14001c505
   14001c4fe:	call   QWORD PTR [rip+0x19d14]        # 0x140036218
   14001c504:	int3   
   14001c505:	test   rbx,rbx
   14001c508:	jne    0x14001c510
   14001c50a:	mov    rbx,rax
   14001c50d:	mov    rdi,rax
   14001c510:	mov    QWORD PTR [rax],rbx
   14001c513:	lea    rcx,[rax+0x8]
   14001c517:	test   rcx,rcx
   14001c51a:	je     0x14001c51f
   14001c51c:	mov    QWORD PTR [rcx],rdi
   14001c51f:	mov    rbx,QWORD PTR [rsp+0x40]
   14001c524:	add    rsp,0x30
   14001c528:	pop    rdi
   14001c529:	ret    
   14001c52a:	int3   
   14001c52b:	int3   
   14001c52c:	int3   
   14001c52d:	int3   
   14001c52e:	int3   
   14001c52f:	int3   
   14001c530:	rex push rdi
   14001c532:	sub    rsp,0x30
   14001c536:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001c53f:	mov    QWORD PTR [rsp+0x40],rbx
   14001c544:	mov    rdi,r8
   14001c547:	mov    rbx,rdx
   14001c54a:	mov    ecx,0x30
   14001c54f:	call   0x14003027c
   14001c554:	mov    QWORD PTR [rsp+0x58],rax
   14001c559:	test   rax,rax
   14001c55c:	jne    0x14001c565
   14001c55e:	call   QWORD PTR [rip+0x19cb4]        # 0x140036218
   14001c564:	int3   
   14001c565:	test   rbx,rbx
   14001c568:	jne    0x14001c570
   14001c56a:	mov    rbx,rax
   14001c56d:	mov    rdi,rax
   14001c570:	mov    QWORD PTR [rax],rbx
   14001c573:	lea    rcx,[rax+0x8]
   14001c577:	test   rcx,rcx
   14001c57a:	je     0x14001c57f
   14001c57c:	mov    QWORD PTR [rcx],rdi
   14001c57f:	mov    rbx,QWORD PTR [rsp+0x40]
   14001c584:	add    rsp,0x30
   14001c588:	pop    rdi
   14001c589:	ret    
   14001c58a:	int3   
   14001c58b:	int3   
   14001c58c:	int3   
   14001c58d:	int3   
   14001c58e:	int3   
   14001c58f:	int3   
   14001c590:	ret    0x0
   14001c593:	int3   
   14001c594:	int3   
   14001c595:	int3   
   14001c596:	int3   
   14001c597:	int3   
   14001c598:	int3   
   14001c599:	int3   
   14001c59a:	int3   
   14001c59b:	int3   
   14001c59c:	int3   
   14001c59d:	int3   
   14001c59e:	int3   
   14001c59f:	int3   
   14001c5a0:	ret    0x0
   14001c5a3:	int3   
   14001c5a4:	int3   
   14001c5a5:	int3   
   14001c5a6:	int3   
   14001c5a7:	int3   
   14001c5a8:	int3   
   14001c5a9:	int3   
   14001c5aa:	int3   
   14001c5ab:	int3   
   14001c5ac:	int3   
   14001c5ad:	int3   
   14001c5ae:	int3   
   14001c5af:	int3   
   14001c5b0:	mov    rax,rdx
   14001c5b3:	cmp    r8,0x1
   14001c5b7:	jne    0x14001c5c8
   14001c5b9:	cmp    QWORD PTR [rcx+0x18],0x10
   14001c5be:	jb     0x14001c5c3
   14001c5c0:	mov    rcx,QWORD PTR [rcx]
   14001c5c3:	mov    BYTE PTR [rcx+rdx*1],r9b
   14001c5c7:	ret    
   14001c5c8:	cmp    QWORD PTR [rcx+0x18],0x10
   14001c5cd:	jb     0x14001c5d2
   14001c5cf:	mov    rcx,QWORD PTR [rcx]
   14001c5d2:	movsx  edx,r9b
   14001c5d6:	add    rcx,rax
   14001c5d9:	jmp    0x140030490
   14001c5de:	int3   
   14001c5df:	int3   
   14001c5e0:	ret    0x0
   14001c5e3:	int3   
   14001c5e4:	int3   
   14001c5e5:	int3   
   14001c5e6:	int3   
   14001c5e7:	int3   
   14001c5e8:	int3   
   14001c5e9:	int3   
   14001c5ea:	int3   
   14001c5eb:	int3   
   14001c5ec:	int3   
   14001c5ed:	int3   
   14001c5ee:	int3   
   14001c5ef:	int3   
   14001c5f0:	ret    0x0
   14001c5f3:	int3   
   14001c5f4:	int3   
   14001c5f5:	int3   
   14001c5f6:	int3   
   14001c5f7:	int3   
   14001c5f8:	int3   
   14001c5f9:	int3   
   14001c5fa:	int3   
   14001c5fb:	int3   
   14001c5fc:	int3   
   14001c5fd:	int3   
   14001c5fe:	int3   
   14001c5ff:	int3   
   14001c600:	mov    QWORD PTR [rsp+0x18],r8
   14001c605:	mov    QWORD PTR [rsp+0x10],rdx
   14001c60a:	mov    QWORD PTR [rsp+0x8],rcx
   14001c60f:	push   rbx
   14001c610:	push   rsi
   14001c611:	push   rdi
   14001c612:	push   r14
   14001c614:	sub    rsp,0x38
   14001c618:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001c621:	mov    rsi,r8
   14001c624:	mov    rbx,rcx
   14001c627:	mov    rdi,rdx
   14001c62a:	or     rdi,0xf
   14001c62e:	cmp    rdi,0xfffffffffffffffe
   14001c632:	jbe    0x14001c639
   14001c634:	mov    rdi,rdx
   14001c637:	jmp    0x14001c66e
   14001c639:	mov    r8,QWORD PTR [rcx+0x18]
   14001c63d:	mov    rcx,r8
   14001c640:	shr    rcx,1
   14001c643:	movabs rax,0xaaaaaaaaaaaaaaab
   14001c64d:	mul    rdi
   14001c650:	shr    rdx,1
   14001c653:	cmp    rcx,rdx
   14001c656:	jbe    0x14001c66e
   14001c658:	mov    rdi,0xfffffffffffffffe
   14001c65f:	mov    rax,rdi
   14001c662:	sub    rax,rcx
   14001c665:	cmp    r8,rax
   14001c668:	ja     0x14001c66e
   14001c66a:	lea    rdi,[rcx+r8*1]
   14001c66e:	lea    rcx,[rdi+0x1]
   14001c672:	xor    r14d,r14d
   14001c675:	test   rcx,rcx
   14001c678:	je     0x14001c694
   14001c67a:	cmp    rcx,0xffffffffffffffff
   14001c67e:	ja     0x14001c68d
   14001c680:	call   0x14003027c
   14001c685:	mov    r14,rax
   14001c688:	test   rax,rax
   14001c68b:	jne    0x14001c694
   14001c68d:	call   QWORD PTR [rip+0x19b85]        # 0x140036218
   14001c693:	nop
   14001c694:	jmp    0x14001c6aa
   14001c696:	mov    rbx,QWORD PTR [rsp+0x60]
   14001c69b:	mov    rsi,QWORD PTR [rsp+0x70]
   14001c6a0:	mov    rdi,QWORD PTR [rsp+0x68]
   14001c6a5:	mov    r14,QWORD PTR [rsp+0x78]
   14001c6aa:	test   rsi,rsi
   14001c6ad:	je     0x14001c6ce
   14001c6af:	cmp    QWORD PTR [rbx+0x18],0x10
   14001c6b4:	jb     0x14001c6bb
   14001c6b6:	mov    rdx,QWORD PTR [rbx]
   14001c6b9:	jmp    0x14001c6be
   14001c6bb:	mov    rdx,rbx
   14001c6be:	test   rsi,rsi
   14001c6c1:	je     0x14001c6ce
   14001c6c3:	mov    r8,rsi
   14001c6c6:	mov    rcx,r14
   14001c6c9:	call   0x14003048a
   14001c6ce:	cmp    QWORD PTR [rbx+0x18],0x10
   14001c6d3:	jb     0x14001c6dd
   14001c6d5:	mov    rcx,QWORD PTR [rbx]
   14001c6d8:	call   0x140030282
   14001c6dd:	mov    BYTE PTR [rbx],0x0
   14001c6e0:	mov    QWORD PTR [rbx],r14
   14001c6e3:	mov    QWORD PTR [rbx+0x18],rdi
   14001c6e7:	mov    QWORD PTR [rbx+0x10],rsi
   14001c6eb:	cmp    rdi,0x10
   14001c6ef:	jb     0x14001c6f4
   14001c6f1:	mov    rbx,r14
   14001c6f4:	mov    BYTE PTR [rbx+rsi*1],0x0
   14001c6f8:	add    rsp,0x38
   14001c6fc:	pop    r14
   14001c6fe:	pop    rdi
   14001c6ff:	pop    rsi
   14001c700:	pop    rbx
   14001c701:	ret    
   14001c702:	int3   
   14001c703:	int3   
   14001c704:	int3   
   14001c705:	int3   
   14001c706:	int3   
   14001c707:	int3   
   14001c708:	int3   
   14001c709:	int3   
   14001c70a:	int3   
   14001c70b:	int3   
   14001c70c:	int3   
   14001c70d:	int3   
   14001c70e:	int3   
   14001c70f:	int3   
   14001c710:	movzx  r9d,BYTE PTR [rsp+0x20]
   14001c716:	mov    rax,r8
   14001c719:	mov    rcx,rdx
   14001c71c:	lea    r8,[rsp+0x20]
   14001c721:	mov    rdx,rax
   14001c724:	jmp    0x1400042e0
   14001c729:	int3   
   14001c72a:	int3   
   14001c72b:	int3   
   14001c72c:	int3   
   14001c72d:	int3   
   14001c72e:	int3   
   14001c72f:	int3   
   14001c730:	cmp    rdx,r8
   14001c733:	je     0x14001c786
   14001c735:	mov    QWORD PTR [rsp+0x10],rbx
   14001c73a:	push   rdi
   14001c73b:	sub    rsp,0x20
   14001c73f:	mov    QWORD PTR [rsp+0x30],rsi
   14001c744:	mov    rdi,r8
   14001c747:	mov    rbx,rdx
   14001c74a:	xor    esi,esi
   14001c74c:	nop    DWORD PTR [rax+0x0]
   14001c750:	cmp    QWORD PTR [rbx+0x18],0x10
   14001c755:	jb     0x14001c75f
   14001c757:	mov    rcx,QWORD PTR [rbx]
   14001c75a:	call   0x140030282
   14001c75f:	mov    QWORD PTR [rbx+0x18],0xf
   14001c767:	mov    QWORD PTR [rbx+0x10],rsi
   14001c76b:	mov    BYTE PTR [rbx],sil
   14001c76e:	add    rbx,0x20
   14001c772:	cmp    rbx,rdi
   14001c775:	jne    0x14001c750
   14001c777:	mov    rsi,QWORD PTR [rsp+0x30]
   14001c77c:	mov    rbx,QWORD PTR [rsp+0x38]
   14001c781:	add    rsp,0x20
   14001c785:	pop    rdi
   14001c786:	ret    
   14001c787:	int3   
   14001c788:	int3   
   14001c789:	int3   
   14001c78a:	int3   
   14001c78b:	int3   
   14001c78c:	int3   
   14001c78d:	int3   
   14001c78e:	int3   
   14001c78f:	int3   
   14001c790:	mov    rax,rsp
   14001c793:	push   rbp
   14001c794:	push   rdi
   14001c795:	push   r14
   14001c797:	mov    rbp,rsp
   14001c79a:	sub    rsp,0x60
   14001c79e:	mov    QWORD PTR [rbp-0x30],0xfffffffffffffffe
   14001c7a6:	mov    QWORD PTR [rax+0x10],rbx
   14001c7aa:	mov    QWORD PTR [rax+0x18],rsi
   14001c7ae:	mov    rdi,rcx
   14001c7b1:	cmp    QWORD PTR [rcx+0x78],0x0
   14001c7b6:	je     0x14001c98a
   14001c7bc:	cmp    BYTE PTR [rcx+0x81],0x0
   14001c7c3:	je     0x14001c98a
   14001c7c9:	mov    rax,QWORD PTR [rcx]
   14001c7cc:	or     edx,0xffffffff
   14001c7cf:	call   QWORD PTR [rax+0x18]
   14001c7d2:	cmp    eax,0xffffffff
   14001c7d5:	jne    0x14001c7de
   14001c7d7:	xor    al,al
   14001c7d9:	jmp    0x14001c98c
   14001c7de:	mov    edx,0xf
   14001c7e3:	mov    QWORD PTR [rbp-0x10],rdx
   14001c7e7:	mov    BYTE PTR [rbp-0x28],0x0
   14001c7eb:	xor    ecx,ecx
   14001c7ed:	mov    QWORD PTR [rbp-0x28],rcx
   14001c7f1:	mov    QWORD PTR [rbp-0x18],0x8
   14001c7f9:	lea    rax,[rbp-0x28]
   14001c7fd:	cmp    rdx,0x10
   14001c801:	cmovae rax,rcx
   14001c805:	mov    BYTE PTR [rax+0x8],cl
   14001c808:	xor    r14d,r14d
   14001c80b:	mov    rdx,QWORD PTR [rbp-0x10]
   14001c80f:	nop
   14001c810:	lea    rcx,[rbp-0x28]
   14001c814:	cmp    rdx,0x10
   14001c818:	cmovae rcx,QWORD PTR [rbp-0x28]
   14001c81d:	lea    r8,[rbp-0x28]
   14001c821:	cmovae r8,QWORD PTR [rbp-0x28]
   14001c826:	mov    r9,QWORD PTR [rbp-0x18]
   14001c82a:	add    r9,rcx
   14001c82d:	lea    rax,[rbp+0x20]
   14001c831:	mov    QWORD PTR [rsp+0x20],rax
   14001c836:	lea    rdx,[rdi+0x84]
   14001c83d:	mov    rcx,QWORD PTR [rdi+0x78]
   14001c841:	call   QWORD PTR [rip+0x19a69]        # 0x1400362b0
   14001c847:	test   eax,eax
   14001c849:	je     0x14001c855
   14001c84b:	dec    eax
   14001c84d:	jne    0x14001c94b
   14001c853:	jmp    0x14001c85c
   14001c855:	mov    BYTE PTR [rdi+0x81],r14b
   14001c85c:	lea    rax,[rbp-0x28]
   14001c860:	mov    r9,QWORD PTR [rbp-0x28]
   14001c864:	mov    rdx,QWORD PTR [rbp-0x10]
   14001c868:	cmp    rdx,0x10
   14001c86c:	cmovae rax,r9
   14001c870:	mov    rbx,QWORD PTR [rbp+0x20]
   14001c874:	sub    rbx,rax
   14001c877:	je     0x14001c8a7
   14001c879:	lea    rcx,[rbp-0x28]
   14001c87d:	cmp    rdx,0x10
   14001c881:	cmovae rcx,r9
   14001c885:	mov    r9,QWORD PTR [rdi+0x90]
   14001c88c:	mov    r8,rbx
   14001c88f:	mov    edx,0x1
   14001c894:	call   QWORD PTR [rip+0x19c5e]        # 0x1400364f8
   14001c89a:	mov    rdx,QWORD PTR [rbp-0x10]
   14001c89e:	cmp    rbx,rax
   14001c8a1:	jne    0x14001c954
   14001c8a7:	cmp    BYTE PTR [rdi+0x81],r14b
   14001c8ae:	je     0x14001c974
   14001c8b4:	test   rbx,rbx
   14001c8b7:	jne    0x14001c810
   14001c8bd:	or     rax,0xffffffffffffffff
   14001c8c1:	mov    r8,QWORD PTR [rbp-0x18]
   14001c8c5:	sub    rax,r8
   14001c8c8:	cmp    rax,0x8
   14001c8cc:	jbe    0x14001c966
   14001c8d2:	lea    rbx,[r8+0x8]
   14001c8d6:	cmp    rbx,0xfffffffffffffffe
   14001c8da:	ja     0x14001c958
   14001c8dc:	cmp    rdx,rbx
   14001c8df:	jae    0x14001c8f3
   14001c8e1:	mov    rdx,rbx
   14001c8e4:	lea    rcx,[rbp-0x28]
   14001c8e8:	call   0x14001c600
   14001c8ed:	mov    rdx,QWORD PTR [rbp-0x10]
   14001c8f1:	jmp    0x14001c911
   14001c8f3:	test   rbx,rbx
   14001c8f6:	jne    0x14001c91a
   14001c8f8:	mov    QWORD PTR [rbp-0x18],r14
   14001c8fc:	lea    rax,[rbp-0x28]
   14001c900:	cmp    rdx,0x10
   14001c904:	cmovae rax,QWORD PTR [rbp-0x28]
   14001c909:	mov    BYTE PTR [rax],r14b
   14001c90c:	jmp    0x14001c80b
   14001c911:	test   rbx,rbx
   14001c914:	je     0x14001c810
   14001c91a:	lea    rcx,[rbp-0x28]
   14001c91e:	cmp    rdx,0x10
   14001c922:	cmovae rcx,QWORD PTR [rbp-0x28]
   14001c927:	mov    rax,QWORD PTR [rbp-0x18]
   14001c92b:	xor    edx,edx
   14001c92d:	mov    QWORD PTR [rax+rcx*1],rdx
   14001c931:	mov    QWORD PTR [rbp-0x18],rbx
   14001c935:	lea    rax,[rbp-0x28]
   14001c939:	cmp    QWORD PTR [rbp-0x10],0x10
   14001c93e:	cmovae rax,QWORD PTR [rbp-0x28]
   14001c943:	mov    BYTE PTR [rbx+rax*1],dl
   14001c946:	jmp    0x14001c80b
   14001c94b:	mov    rdx,QWORD PTR [rbp-0x10]
   14001c94f:	sub    eax,0x2
   14001c952:	je     0x14001c974
   14001c954:	xor    bl,bl
   14001c956:	jmp    0x14001c976
   14001c958:	lea    rcx,[rip+0x1ffb9]        # 0x14003c918
   14001c95f:	call   QWORD PTR [rip+0x198bb]        # 0x140036220
   14001c965:	int3   
   14001c966:	lea    rcx,[rip+0x1ffab]        # 0x14003c918
   14001c96d:	call   QWORD PTR [rip+0x198ad]        # 0x140036220
   14001c973:	int3   
   14001c974:	mov    bl,0x1
   14001c976:	cmp    rdx,0x10
   14001c97a:	jb     0x14001c985
   14001c97c:	mov    rcx,QWORD PTR [rbp-0x28]
   14001c980:	call   0x140030282
   14001c985:	movzx  eax,bl
   14001c988:	jmp    0x14001c98c
   14001c98a:	mov    al,0x1
   14001c98c:	lea    r11,[rsp+0x60]
   14001c991:	mov    rbx,QWORD PTR [r11+0x28]
   14001c995:	mov    rsi,QWORD PTR [r11+0x30]
   14001c999:	mov    rsp,r11
   14001c99c:	pop    r14
   14001c99e:	pop    rdi
   14001c99f:	pop    rbp
   14001c9a0:	ret    
   14001c9a1:	int3   
   14001c9a2:	int3   
   14001c9a3:	int3   
   14001c9a4:	int3   
   14001c9a5:	int3   
   14001c9a6:	int3   
   14001c9a7:	int3   
   14001c9a8:	int3   
   14001c9a9:	int3   
   14001c9aa:	int3   
   14001c9ab:	int3   
   14001c9ac:	int3   
   14001c9ad:	int3   
   14001c9ae:	int3   
   14001c9af:	int3   
   14001c9b0:	cmp    QWORD PTR [rcx+0x18],0x10
   14001c9b5:	mov    QWORD PTR [rcx+0x10],rdx
   14001c9b9:	jb     0x14001c9c3
   14001c9bb:	mov    rax,QWORD PTR [rcx]
   14001c9be:	mov    BYTE PTR [rax+rdx*1],0x0
   14001c9c2:	ret    
   14001c9c3:	mov    BYTE PTR [rcx+rdx*1],0x0
   14001c9c7:	ret    
   14001c9c8:	int3   
   14001c9c9:	int3   
   14001c9ca:	int3   
   14001c9cb:	int3   
   14001c9cc:	int3   
   14001c9cd:	int3   
   14001c9ce:	int3   
   14001c9cf:	int3   
   14001c9d0:	cmp    QWORD PTR [rcx+0x18],0x8
   14001c9d5:	mov    rax,rcx
   14001c9d8:	mov    QWORD PTR [rcx+0x10],rdx
   14001c9dc:	jb     0x14001c9e1
   14001c9de:	mov    rax,QWORD PTR [rcx]
   14001c9e1:	xor    ecx,ecx
   14001c9e3:	mov    WORD PTR [rax+rdx*2],cx
   14001c9e7:	ret    
   14001c9e8:	int3   
   14001c9e9:	int3   
   14001c9ea:	int3   
   14001c9eb:	int3   
   14001c9ec:	int3   
   14001c9ed:	int3   
   14001c9ee:	int3   
   14001c9ef:	int3   
   14001c9f0:	mov    rcx,rdx
   14001c9f3:	jmp    0x140030282
   14001c9f8:	int3   
   14001c9f9:	int3   
   14001c9fa:	int3   
   14001c9fb:	int3   
   14001c9fc:	int3   
   14001c9fd:	int3   
   14001c9fe:	int3   
   14001c9ff:	int3   
   14001ca00:	mov    rcx,rdx
   14001ca03:	jmp    0x140030282
   14001ca08:	int3   
   14001ca09:	int3   
   14001ca0a:	int3   
   14001ca0b:	int3   
   14001ca0c:	int3   
   14001ca0d:	int3   
   14001ca0e:	int3   
   14001ca0f:	int3   
   14001ca10:	mov    rcx,rdx
   14001ca13:	jmp    0x140030282
   14001ca18:	int3   
   14001ca19:	int3   
   14001ca1a:	int3   
   14001ca1b:	int3   
   14001ca1c:	int3   
   14001ca1d:	int3   
   14001ca1e:	int3   
   14001ca1f:	int3   
   14001ca20:	rex push rbx
   14001ca22:	sub    rsp,0x20
   14001ca26:	cmp    QWORD PTR [rdx+0x28],0x10
   14001ca2b:	mov    rbx,rdx
   14001ca2e:	jb     0x14001ca39
   14001ca30:	mov    rcx,QWORD PTR [rdx+0x10]
   14001ca34:	call   0x140030282
   14001ca39:	mov    QWORD PTR [rbx+0x28],0xf
   14001ca41:	mov    QWORD PTR [rbx+0x20],0x0
   14001ca49:	mov    rcx,rbx
   14001ca4c:	mov    BYTE PTR [rbx+0x10],0x0
   14001ca50:	add    rsp,0x20
   14001ca54:	pop    rbx
   14001ca55:	jmp    0x140030282
   14001ca5a:	int3   
   14001ca5b:	int3   
   14001ca5c:	int3   
   14001ca5d:	int3   
   14001ca5e:	int3   
   14001ca5f:	int3   
   14001ca60:	mov    rax,rdx
   14001ca63:	ret    
   14001ca64:	int3   
   14001ca65:	int3   
   14001ca66:	int3   
   14001ca67:	int3   
   14001ca68:	int3   
   14001ca69:	int3   
   14001ca6a:	int3   
   14001ca6b:	int3   
   14001ca6c:	int3   
   14001ca6d:	int3   
   14001ca6e:	int3   
   14001ca6f:	int3   
   14001ca70:	mov    rax,rdx
   14001ca73:	ret    
   14001ca74:	int3   
   14001ca75:	int3   
   14001ca76:	int3   
   14001ca77:	int3   
   14001ca78:	int3   
   14001ca79:	int3   
   14001ca7a:	int3   
   14001ca7b:	int3   
   14001ca7c:	int3   
   14001ca7d:	int3   
   14001ca7e:	int3   
   14001ca7f:	int3   
   14001ca80:	mov    rax,rdx
   14001ca83:	ret    
   14001ca84:	int3   
   14001ca85:	int3   
   14001ca86:	int3   
   14001ca87:	int3   
   14001ca88:	int3   
   14001ca89:	int3   
   14001ca8a:	int3   
   14001ca8b:	int3   
   14001ca8c:	int3   
   14001ca8d:	int3   
   14001ca8e:	int3   
   14001ca8f:	int3   
   14001ca90:	mov    rax,rdx
   14001ca93:	ret    
   14001ca94:	int3   
   14001ca95:	int3   
   14001ca96:	int3   
   14001ca97:	int3   
   14001ca98:	int3   
   14001ca99:	int3   
   14001ca9a:	int3   
   14001ca9b:	int3   
   14001ca9c:	int3   
   14001ca9d:	int3   
   14001ca9e:	int3   
   14001ca9f:	int3   
   14001caa0:	mov    rax,rdx
   14001caa3:	ret    
   14001caa4:	int3   
   14001caa5:	int3   
   14001caa6:	int3   
   14001caa7:	int3   
   14001caa8:	int3   
   14001caa9:	int3   
   14001caaa:	int3   
   14001caab:	int3   
   14001caac:	int3   
   14001caad:	int3   
   14001caae:	int3   
   14001caaf:	int3   
   14001cab0:	mov    rax,rdx
   14001cab3:	ret    
   14001cab4:	int3   
   14001cab5:	int3   
   14001cab6:	int3   
   14001cab7:	int3   
   14001cab8:	int3   
   14001cab9:	int3   
   14001caba:	int3   
   14001cabb:	int3   
   14001cabc:	int3   
   14001cabd:	int3   
   14001cabe:	int3   
   14001cabf:	int3   
   14001cac0:	mov    rax,rsp
   14001cac3:	push   rsi
   14001cac4:	push   rdi
   14001cac5:	push   r14
   14001cac7:	sub    rsp,0x90
   14001cace:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001cad7:	mov    QWORD PTR [rax+0x10],rbx
   14001cadb:	mov    r14,rdx
   14001cade:	mov    rdi,rcx
   14001cae1:	xor    ebx,ebx
   14001cae3:	mov    DWORD PTR [rax+0x8],ebx
   14001cae6:	test   rcx,rcx
   14001cae9:	je     0x14001cb68
   14001caeb:	cmp    QWORD PTR [rcx],rbx
   14001caee:	jne    0x14001cb68
   14001caf0:	lea    ecx,[rbx+0x30]
   14001caf3:	call   0x14003027c
   14001caf8:	mov    rsi,rax
   14001cafb:	mov    QWORD PTR [rsp+0xc0],rax
   14001cb03:	test   rax,rax
   14001cb06:	je     0x14001cb52
   14001cb08:	mov    rcx,QWORD PTR [r14]
   14001cb0b:	test   rcx,rcx
   14001cb0e:	jne    0x14001cb19
   14001cb10:	lea    rdx,[rip+0x1db53]        # 0x14003a66a
   14001cb17:	jmp    0x14001cb26
   14001cb19:	mov    rdx,QWORD PTR [rcx+0x28]
   14001cb1d:	test   rdx,rdx
   14001cb20:	jne    0x14001cb26
   14001cb22:	lea    rdx,[rcx+0x30]
   14001cb26:	lea    rcx,[rsp+0x28]
   14001cb2b:	call   QWORD PTR [rip+0x19707]        # 0x140036238
   14001cb31:	nop
   14001cb32:	mov    ebx,0x1
   14001cb37:	mov    DWORD PTR [rsp+0xb0],ebx
   14001cb3e:	movzx  r9d,bl
   14001cb42:	xor    r8d,r8d
   14001cb45:	mov    rdx,rax
   14001cb48:	mov    rcx,rsi
   14001cb4b:	call   0x140014610
   14001cb50:	jmp    0x14001cb55
   14001cb52:	mov    rax,rbx
   14001cb55:	mov    QWORD PTR [rdi],rax
   14001cb58:	test   bl,0x1
   14001cb5b:	je     0x14001cb68
   14001cb5d:	lea    rcx,[rsp+0x28]
   14001cb62:	call   QWORD PTR [rip+0x196d8]        # 0x140036240
   14001cb68:	mov    eax,0x4
   14001cb6d:	mov    rbx,QWORD PTR [rsp+0xb8]
   14001cb75:	add    rsp,0x90
   14001cb7c:	pop    r14
   14001cb7e:	pop    rdi
   14001cb7f:	pop    rsi
   14001cb80:	ret    
   14001cb81:	int3   
   14001cb82:	int3   
   14001cb83:	int3   
   14001cb84:	int3   
   14001cb85:	int3   
   14001cb86:	int3   
   14001cb87:	int3   
   14001cb88:	int3   
   14001cb89:	int3   
   14001cb8a:	int3   
   14001cb8b:	int3   
   14001cb8c:	int3   
   14001cb8d:	int3   
   14001cb8e:	int3   
   14001cb8f:	int3   
   14001cb90:	mov    rax,rdx
   14001cb93:	ret    
   14001cb94:	int3   
   14001cb95:	int3   
   14001cb96:	int3   
   14001cb97:	int3   
   14001cb98:	int3   
   14001cb99:	int3   
   14001cb9a:	int3   
   14001cb9b:	int3   
   14001cb9c:	int3   
   14001cb9d:	int3   
   14001cb9e:	int3   
   14001cb9f:	int3   
   14001cba0:	xor    eax,eax
   14001cba2:	ret    
   14001cba3:	int3   
   14001cba4:	int3   
   14001cba5:	int3   
   14001cba6:	int3   
   14001cba7:	int3   
   14001cba8:	int3   
   14001cba9:	int3   
   14001cbaa:	int3   
   14001cbab:	int3   
   14001cbac:	int3   
   14001cbad:	int3   
   14001cbae:	int3   
   14001cbaf:	int3   
   14001cbb0:	mov    QWORD PTR [rsp+0x8],rbx
   14001cbb5:	push   rdi
   14001cbb6:	sub    rsp,0x20
   14001cbba:	mov    rbx,rdx
   14001cbbd:	mov    rdx,QWORD PTR [rcx]
   14001cbc0:	xor    edi,edi
   14001cbc2:	cmp    rbx,QWORD PTR [rdx+0x18]
   14001cbc6:	jae    0x14001cbd7
   14001cbc8:	mov    rax,QWORD PTR [rdx+0x10]
   14001cbcc:	mov    rax,QWORD PTR [rax+rbx*8]
   14001cbd0:	test   rax,rax
   14001cbd3:	jne    0x14001cbf7
   14001cbd5:	jmp    0x14001cbda
   14001cbd7:	mov    rax,rdi
   14001cbda:	cmp    BYTE PTR [rdx+0x24],dil
   14001cbde:	je     0x14001cbf7
   14001cbe0:	call   QWORD PTR [rip+0x1969a]        # 0x140036280
   14001cbe6:	cmp    rbx,QWORD PTR [rax+0x18]
   14001cbea:	jae    0x14001cbf4
   14001cbec:	mov    rax,QWORD PTR [rax+0x10]
   14001cbf0:	mov    rdi,QWORD PTR [rax+rbx*8]
   14001cbf4:	mov    rax,rdi
   14001cbf7:	mov    rbx,QWORD PTR [rsp+0x30]
   14001cbfc:	add    rsp,0x20
   14001cc00:	pop    rdi
   14001cc01:	ret    
   14001cc02:	int3   
   14001cc03:	int3   
   14001cc04:	int3   
   14001cc05:	int3   
   14001cc06:	int3   
   14001cc07:	int3   
   14001cc08:	int3   
   14001cc09:	int3   
   14001cc0a:	int3   
   14001cc0b:	int3   
   14001cc0c:	int3   
   14001cc0d:	int3   
   14001cc0e:	int3   
   14001cc0f:	int3   
   14001cc10:	xor    eax,eax
   14001cc12:	test   dl,0x1
   14001cc15:	mov    ecx,0x4
   14001cc1a:	cmove  eax,ecx
   14001cc1d:	test   dl,0x2
   14001cc20:	jne    0x14001cc25
   14001cc22:	or     eax,0x2
   14001cc25:	test   dl,0x8
   14001cc28:	je     0x14001cc2d
   14001cc2a:	or     eax,0x8
   14001cc2d:	test   cl,dl
   14001cc2f:	je     0x14001cc34
   14001cc31:	or     eax,0x10
   14001cc34:	ret    
   14001cc35:	int3   
   14001cc36:	int3   
   14001cc37:	int3   
   14001cc38:	int3   
   14001cc39:	int3   
   14001cc3a:	int3   
   14001cc3b:	int3   
   14001cc3c:	int3   
   14001cc3d:	int3   
   14001cc3e:	int3   
   14001cc3f:	int3   
   14001cc40:	mov    QWORD PTR [rsp+0x20],rbx
   14001cc45:	push   rdi
   14001cc46:	sub    rsp,0x20
   14001cc4a:	mov    rdi,rdx
   14001cc4d:	mov    rbx,rcx
   14001cc50:	cmp    rdx,0xfffffffffffffffe
   14001cc54:	jbe    0x14001cc64
   14001cc56:	lea    rcx,[rip+0x1fcbb]        # 0x14003c918
   14001cc5d:	call   QWORD PTR [rip+0x195bd]        # 0x140036220
   14001cc63:	int3   
   14001cc64:	mov    rax,QWORD PTR [rcx+0x18]
   14001cc68:	mov    QWORD PTR [rsp+0x30],rbp
   14001cc6d:	xor    ebp,ebp
   14001cc6f:	cmp    rax,rdx
   14001cc72:	jae    0x14001cc7f
   14001cc74:	mov    r8,QWORD PTR [rcx+0x10]
   14001cc78:	call   0x14001c600
   14001cc7d:	jmp    0x14001ccf1
   14001cc7f:	test   r8b,r8b
   14001cc82:	je     0x14001ccdc
   14001cc84:	cmp    rdx,0x10
   14001cc88:	jae    0x14001ccdc
   14001cc8a:	mov    QWORD PTR [rsp+0x38],rsi
   14001cc8f:	mov    rsi,QWORD PTR [rcx+0x10]
   14001cc93:	cmp    rdx,rsi
   14001cc96:	cmovb  rsi,rdx
   14001cc9a:	cmp    rax,0x10
   14001cc9e:	jb     0x14001ccc5
   14001cca0:	mov    QWORD PTR [rsp+0x40],r14
   14001cca5:	mov    r14,QWORD PTR [rcx]
   14001cca8:	test   rsi,rsi
   14001ccab:	je     0x14001ccb8
   14001ccad:	mov    r8,rsi
   14001ccb0:	mov    rdx,r14
   14001ccb3:	call   0x14003048a
   14001ccb8:	mov    rcx,r14
   14001ccbb:	call   0x140030282
   14001ccc0:	mov    r14,QWORD PTR [rsp+0x40]
   14001ccc5:	mov    QWORD PTR [rbx+0x10],rsi
   14001ccc9:	mov    QWORD PTR [rbx+0x18],0xf
   14001ccd1:	mov    BYTE PTR [rsi+rbx*1],bpl
   14001ccd5:	mov    rsi,QWORD PTR [rsp+0x38]
   14001ccda:	jmp    0x14001ccf1
   14001ccdc:	test   rdx,rdx
   14001ccdf:	jne    0x14001ccf1
   14001cce1:	mov    QWORD PTR [rcx+0x10],rbp
   14001cce5:	cmp    rax,0x10
   14001cce9:	jb     0x14001ccee
   14001cceb:	mov    rbx,QWORD PTR [rcx]
   14001ccee:	mov    BYTE PTR [rbx],bpl
   14001ccf1:	mov    rbp,QWORD PTR [rsp+0x30]
   14001ccf6:	mov    rbx,QWORD PTR [rsp+0x48]
   14001ccfb:	test   rdi,rdi
   14001ccfe:	setne  al
   14001cd01:	add    rsp,0x20
   14001cd05:	pop    rdi
   14001cd06:	ret    
   14001cd07:	int3   
   14001cd08:	int3   
   14001cd09:	int3   
   14001cd0a:	int3   
   14001cd0b:	int3   
   14001cd0c:	int3   
   14001cd0d:	int3   
   14001cd0e:	int3   
   14001cd0f:	int3   
   14001cd10:	mov    r8,QWORD PTR [rcx+0x10]
   14001cd14:	movabs rax,0x7ffffffffffffff
   14001cd1e:	sub    r8,QWORD PTR [rcx]
   14001cd21:	sar    r8,0x5
   14001cd25:	mov    rcx,r8
   14001cd28:	shr    rcx,1
   14001cd2b:	sub    rax,rcx
   14001cd2e:	cmp    rax,r8
   14001cd31:	jae    0x14001cd41
   14001cd33:	xor    r8d,r8d
   14001cd36:	cmp    r8,rdx
   14001cd39:	cmovb  r8,rdx
   14001cd3d:	mov    rax,r8
   14001cd40:	ret    
   14001cd41:	add    r8,rcx
   14001cd44:	cmp    r8,rdx
   14001cd47:	cmovb  r8,rdx
   14001cd4b:	mov    rax,r8
   14001cd4e:	ret    
   14001cd4f:	int3   
   14001cd50:	sub    rsp,0x28
   14001cd54:	mov    r8,QWORD PTR [rcx+0x8]
   14001cd58:	movabs rax,0xaaaaaaaaaaaaaa9
   14001cd62:	sub    rax,r8
   14001cd65:	cmp    rax,rdx
   14001cd68:	jae    0x14001cd78
   14001cd6a:	lea    rcx,[rip+0x219e7]        # 0x14003e758
   14001cd71:	call   QWORD PTR [rip+0x194a9]        # 0x140036220
   14001cd77:	int3   
   14001cd78:	lea    rax,[r8+rdx*1]
   14001cd7c:	mov    QWORD PTR [rcx+0x8],rax
   14001cd80:	add    rsp,0x28
   14001cd84:	ret    
   14001cd85:	int3   
   14001cd86:	int3   
   14001cd87:	int3   
   14001cd88:	int3   
   14001cd89:	int3   
   14001cd8a:	int3   
   14001cd8b:	int3   
   14001cd8c:	int3   
   14001cd8d:	int3   
   14001cd8e:	int3   
   14001cd8f:	int3   
   14001cd90:	sub    rsp,0x28
   14001cd94:	mov    r8,QWORD PTR [rcx+0x8]
   14001cd98:	movabs rax,0x555555555555554
   14001cda2:	sub    rax,r8
   14001cda5:	cmp    rax,rdx
   14001cda8:	jae    0x14001cdb8
   14001cdaa:	lea    rcx,[rip+0x219a7]        # 0x14003e758
   14001cdb1:	call   QWORD PTR [rip+0x19469]        # 0x140036220
   14001cdb7:	int3   
   14001cdb8:	lea    rax,[r8+rdx*1]
   14001cdbc:	mov    QWORD PTR [rcx+0x8],rax
   14001cdc0:	add    rsp,0x28
   14001cdc4:	ret    
   14001cdc5:	int3   
   14001cdc6:	int3   
   14001cdc7:	int3   
   14001cdc8:	int3   
   14001cdc9:	int3   
   14001cdca:	int3   
   14001cdcb:	int3   
   14001cdcc:	int3   
   14001cdcd:	int3   
   14001cdce:	int3   
   14001cdcf:	int3   
   14001cdd0:	mov    QWORD PTR [rsp+0x8],rbx
   14001cdd5:	push   rdi
   14001cdd6:	sub    rsp,0x20
   14001cdda:	cmp    r8d,0x1
   14001cdde:	mov    rdi,rdx
   14001cde1:	mov    rbx,rcx
   14001cde4:	sete   al
   14001cde7:	mov    BYTE PTR [rcx+0x81],0x0
   14001cdee:	mov    BYTE PTR [rcx+0x88],al
   14001cdf4:	call   QWORD PTR [rip+0x193ae]        # 0x1400361a8
   14001cdfa:	test   rdi,rdi
   14001cdfd:	je     0x14001ce1f
   14001cdff:	lea    rax,[rdi+0x10]
   14001ce03:	mov    QWORD PTR [rbx+0x38],rdi
   14001ce07:	mov    QWORD PTR [rbx+0x40],rdi
   14001ce0b:	mov    QWORD PTR [rbx+0x18],rax
   14001ce0f:	mov    QWORD PTR [rbx+0x20],rax
   14001ce13:	lea    rax,[rdi+0x8]
   14001ce17:	mov    QWORD PTR [rbx+0x50],rax
   14001ce1b:	mov    QWORD PTR [rbx+0x58],rax
   14001ce1f:	mov    QWORD PTR [rbx+0x90],rdi
   14001ce26:	mov    eax,DWORD PTR [rip+0x3ab94]        # 0x1400579c0
   14001ce2c:	mov    QWORD PTR [rbx+0x78],0x0
   14001ce34:	mov    DWORD PTR [rbx+0x84],eax
   14001ce3a:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ce3f:	add    rsp,0x20
   14001ce43:	pop    rdi
   14001ce44:	ret    
   14001ce45:	int3   
   14001ce46:	int3   
   14001ce47:	int3   
   14001ce48:	int3   
   14001ce49:	int3   
   14001ce4a:	int3   
   14001ce4b:	int3   
   14001ce4c:	int3   
   14001ce4d:	int3   
   14001ce4e:	int3   
   14001ce4f:	int3   
   14001ce50:	mov    QWORD PTR [rsp+0x10],rbx
   14001ce55:	mov    QWORD PTR [rsp+0x18],rbp
   14001ce5a:	push   rsi
   14001ce5b:	sub    rsp,0x20
   14001ce5f:	mov    rsi,r8
   14001ce62:	mov    rbp,rdx
   14001ce65:	mov    rbx,rcx
   14001ce68:	mov    QWORD PTR [rcx+0x68],0x0
   14001ce70:	mov    DWORD PTR [rcx+0x70],r9d
   14001ce74:	test   r8,r8
   14001ce77:	je     0x14001cf33
   14001ce7d:	and    r9d,0x6
   14001ce81:	cmp    r9b,0x6
   14001ce85:	je     0x14001cf33
   14001ce8b:	mov    QWORD PTR [rsp+0x30],rdi
   14001ce90:	cmp    r8,0xffffffffffffffff
   14001ce94:	ja     0x14001cf43
   14001ce9a:	mov    rcx,r8
   14001ce9d:	call   0x14003027c
   14001cea2:	mov    rdi,rax
   14001cea5:	test   rax,rax
   14001cea8:	je     0x14001cf43
   14001ceae:	mov    r8,rsi
   14001ceb1:	mov    rdx,rbp
   14001ceb4:	mov    rcx,rax
   14001ceb7:	call   0x14003048a
   14001cebc:	test   BYTE PTR [rbx+0x70],0x4
   14001cec0:	lea    r8,[rdi+rsi*1]
   14001cec4:	mov    QWORD PTR [rbx+0x68],r8
   14001cec8:	jne    0x14001cede
   14001ceca:	mov    rcx,QWORD PTR [rbx+0x18]
   14001cece:	mov    QWORD PTR [rcx],rdi
   14001ced1:	mov    rax,QWORD PTR [rbx+0x38]
   14001ced5:	mov    QWORD PTR [rax],rdi
   14001ced8:	mov    rax,QWORD PTR [rbx+0x50]
   14001cedc:	mov    DWORD PTR [rax],esi
   14001cede:	mov    eax,DWORD PTR [rbx+0x70]
   14001cee1:	test   al,0x2
   14001cee3:	jne    0x14001cf2a
   14001cee5:	test   al,0x18
   14001cee7:	mov    rax,QWORD PTR [rbx+0x20]
   14001ceeb:	mov    rdx,rdi
   14001ceee:	mov    QWORD PTR [rax],rdi
   14001cef1:	mov    rax,QWORD PTR [rbx+0x40]
   14001cef5:	cmovne rdx,r8
   14001cef9:	mov    QWORD PTR [rax],rdx
   14001cefc:	mov    rax,QWORD PTR [rbx+0x58]
   14001cf00:	mov    ecx,edi
   14001cf02:	sub    ecx,edx
   14001cf04:	add    ecx,esi
   14001cf06:	mov    DWORD PTR [rax],ecx
   14001cf08:	mov    rax,QWORD PTR [rbx+0x38]
   14001cf0c:	cmp    QWORD PTR [rax],0x0
   14001cf10:	jne    0x14001cf2a
   14001cf12:	mov    rax,QWORD PTR [rbx+0x18]
   14001cf16:	mov    QWORD PTR [rax],rdi
   14001cf19:	mov    rax,QWORD PTR [rbx+0x38]
   14001cf1d:	mov    QWORD PTR [rax],0x0
   14001cf24:	mov    rax,QWORD PTR [rbx+0x50]
   14001cf28:	mov    DWORD PTR [rax],edi
   14001cf2a:	or     DWORD PTR [rbx+0x70],0x1
   14001cf2e:	mov    rdi,QWORD PTR [rsp+0x30]
   14001cf33:	mov    rbx,QWORD PTR [rsp+0x38]
   14001cf38:	mov    rbp,QWORD PTR [rsp+0x40]
   14001cf3d:	add    rsp,0x20
   14001cf41:	pop    rsi
   14001cf42:	ret    
   14001cf43:	call   QWORD PTR [rip+0x192cf]        # 0x140036218
   14001cf49:	int3   
   14001cf4a:	int3   
   14001cf4b:	int3   
   14001cf4c:	int3   
   14001cf4d:	int3   
   14001cf4e:	int3   
   14001cf4f:	int3   
   14001cf50:	mov    rax,rsp
   14001cf53:	mov    QWORD PTR [rax+0x8],rcx
   14001cf57:	push   rdi
   14001cf58:	push   r12
   14001cf5a:	push   r13
   14001cf5c:	push   r14
   14001cf5e:	push   r15
   14001cf60:	sub    rsp,0x60
   14001cf64:	mov    QWORD PTR [rax-0x68],0xfffffffffffffffe
   14001cf6c:	mov    QWORD PTR [rax+0x10],rbx
   14001cf70:	mov    QWORD PTR [rax+0x18],rsi
   14001cf74:	movzx  r13d,r8b
   14001cf78:	mov    r12,rdx
   14001cf7b:	mov    r14,rcx
   14001cf7e:	call   QWORD PTR [rip+0x1947c]        # 0x140036400
   14001cf84:	mov    r15,rax
   14001cf87:	lea    rcx,[rsp+0x28]
   14001cf8c:	call   QWORD PTR [rip+0x1929e]        # 0x140036230
   14001cf92:	xor    eax,eax
   14001cf94:	mov    QWORD PTR [r14+0x10],rax
   14001cf98:	mov    QWORD PTR [r14+0x20],rax
   14001cf9c:	mov    QWORD PTR [r14+0x28],rax
   14001cfa0:	test   r13b,r13b
   14001cfa3:	lea    rsi,[rip+0x1d6c0]        # 0x14003a66a
   14001cfaa:	jne    0x14001cfb0
   14001cfac:	mov    rsi,QWORD PTR [r15+0x10]
   14001cfb0:	lea    rcx,[rsp+0x28]
   14001cfb5:	call   QWORD PTR [rip+0x19275]        # 0x140036230
   14001cfbb:	or     rbx,0xffffffffffffffff
   14001cfbf:	mov    rdi,rbx
   14001cfc2:	inc    rdi
   14001cfc5:	cmp    BYTE PTR [rsi+rdi*1],0x0
   14001cfc9:	jne    0x14001cfc2
   14001cfcb:	inc    rdi
   14001cfce:	mov    rcx,rdi
   14001cfd1:	call   0x14002ff08
   14001cfd6:	mov    rdx,rax
   14001cfd9:	test   rdi,rdi
   14001cfdc:	je     0x14001cff2
   14001cfde:	xchg   ax,ax
   14001cfe0:	movzx  ecx,BYTE PTR [rsi]
   14001cfe3:	mov    BYTE PTR [rdx],cl
   14001cfe5:	lea    rdx,[rdx+0x1]
   14001cfe9:	lea    rsi,[rsi+0x1]
   14001cfed:	dec    rdi
   14001cff0:	jne    0x14001cfe0
   14001cff2:	mov    QWORD PTR [r14+0x10],rax
   14001cff6:	mov    rcx,r12
   14001cff9:	call   QWORD PTR [rip+0x19249]        # 0x140036248
   14001cfff:	mov    rsi,rax
   14001d002:	mov    rdi,rbx
   14001d005:	inc    rdi
   14001d008:	cmp    BYTE PTR [rax+rdi*1],0x0
   14001d00c:	jne    0x14001d005
   14001d00e:	inc    rdi
   14001d011:	mov    rcx,rdi
   14001d014:	call   0x14002ff08
   14001d019:	mov    rdx,rax
   14001d01c:	test   rdi,rdi
   14001d01f:	je     0x14001d042
   14001d021:	nop    DWORD PTR [rax+0x0]
   14001d025:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14001d030:	movzx  ecx,BYTE PTR [rsi]
   14001d033:	mov    BYTE PTR [rdx],cl
   14001d035:	lea    rdx,[rdx+0x1]
   14001d039:	lea    rsi,[rsi+0x1]
   14001d03d:	dec    rdi
   14001d040:	jne    0x14001d030
   14001d042:	mov    QWORD PTR [r14+0x20],rax
   14001d046:	mov    rcx,r12
   14001d049:	call   QWORD PTR [rip+0x19201]        # 0x140036250
   14001d04f:	mov    rdi,rax
   14001d052:	inc    rbx
   14001d055:	cmp    BYTE PTR [rax+rbx*1],0x0
   14001d059:	jne    0x14001d052
   14001d05b:	inc    rbx
   14001d05e:	mov    rcx,rbx
   14001d061:	call   0x14002ff08
   14001d066:	mov    rdx,rax
   14001d069:	test   rbx,rbx
   14001d06c:	je     0x14001d082
   14001d06e:	xchg   ax,ax
   14001d070:	movzx  ecx,BYTE PTR [rdi]
   14001d073:	mov    BYTE PTR [rdx],cl
   14001d075:	lea    rdx,[rdx+0x1]
   14001d079:	lea    rdi,[rdi+0x1]
   14001d07d:	dec    rbx
   14001d080:	jne    0x14001d070
   14001d082:	mov    QWORD PTR [r14+0x28],rax
   14001d086:	test   r13b,r13b
   14001d089:	je     0x14001d094
   14001d08b:	mov    WORD PTR [r14+0x18],0x2c2e
   14001d092:	jmp    0x14001d0a9
   14001d094:	mov    rax,QWORD PTR [r15]
   14001d097:	movzx  ecx,BYTE PTR [rax]
   14001d09a:	mov    BYTE PTR [r14+0x18],cl
   14001d09e:	mov    rax,QWORD PTR [r15+0x8]
   14001d0a2:	movzx  ecx,BYTE PTR [rax]
   14001d0a5:	mov    BYTE PTR [r14+0x19],cl
   14001d0a9:	lea    r11,[rsp+0x60]
   14001d0ae:	mov    rbx,QWORD PTR [r11+0x38]
   14001d0b2:	mov    rsi,QWORD PTR [r11+0x40]
   14001d0b6:	mov    rsp,r11
   14001d0b9:	pop    r15
   14001d0bb:	pop    r14
   14001d0bd:	pop    r13
   14001d0bf:	pop    r12
   14001d0c1:	pop    rdi
   14001d0c2:	ret    
   14001d0c3:	int3   
   14001d0c4:	int3   
   14001d0c5:	int3   
   14001d0c6:	int3   
   14001d0c7:	int3   
   14001d0c8:	int3   
   14001d0c9:	int3   
   14001d0ca:	int3   
   14001d0cb:	int3   
   14001d0cc:	int3   
   14001d0cd:	int3   
   14001d0ce:	int3   
   14001d0cf:	int3   
   14001d0d0:	mov    QWORD PTR [rsp+0x8],rbx
   14001d0d5:	push   rdi
   14001d0d6:	sub    rsp,0x20
   14001d0da:	mov    rbx,rcx
   14001d0dd:	mov    rcx,rdx
   14001d0e0:	mov    rdi,rdx
   14001d0e3:	call   QWORD PTR [rip+0x1919f]        # 0x140036288
   14001d0e9:	test   al,al
   14001d0eb:	je     0x14001d100
   14001d0ed:	mov    QWORD PTR [rbx+0x78],0x0
   14001d0f5:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d0fa:	add    rsp,0x20
   14001d0fe:	pop    rdi
   14001d0ff:	ret    
   14001d100:	mov    rcx,rbx
   14001d103:	mov    QWORD PTR [rbx+0x78],rdi
   14001d107:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d10c:	add    rsp,0x20
   14001d110:	pop    rdi
   14001d111:	rex.W jmp QWORD PTR [rip+0x19090]        # 0x1400361a8
   14001d118:	int3   
   14001d119:	int3   
   14001d11a:	int3   
   14001d11b:	int3   
   14001d11c:	int3   
   14001d11d:	int3   
   14001d11e:	int3   
   14001d11f:	int3   
   14001d120:	test   rdx,rdx
   14001d123:	je     0x14001d15a
   14001d125:	mov    rax,QWORD PTR [rcx+0x18]
   14001d129:	cmp    rax,0x10
   14001d12d:	jb     0x14001d134
   14001d12f:	mov    r8,QWORD PTR [rcx]
   14001d132:	jmp    0x14001d137
   14001d134:	mov    r8,rcx
   14001d137:	cmp    rdx,r8
   14001d13a:	jb     0x14001d15a
   14001d13c:	cmp    rax,0x10
   14001d140:	jb     0x14001d147
   14001d142:	mov    r8,QWORD PTR [rcx]
   14001d145:	jmp    0x14001d14a
   14001d147:	mov    r8,rcx
   14001d14a:	mov    rax,QWORD PTR [rcx+0x10]
   14001d14e:	lea    rcx,[r8+rax*1]
   14001d152:	cmp    rcx,rdx
   14001d155:	jbe    0x14001d15a
   14001d157:	mov    al,0x1
   14001d159:	ret    
   14001d15a:	xor    al,al
   14001d15c:	ret    
   14001d15d:	int3   
   14001d15e:	int3   
   14001d15f:	int3   
   14001d160:	cmp    rdx,QWORD PTR [rcx+0x8]
   14001d164:	jae    0x14001d16e
   14001d166:	cmp    QWORD PTR [rcx],rdx
   14001d169:	ja     0x14001d16e
   14001d16b:	mov    al,0x1
   14001d16d:	ret    
   14001d16e:	xor    al,al
   14001d170:	ret    
   14001d171:	int3   
   14001d172:	int3   
   14001d173:	int3   
   14001d174:	int3   
   14001d175:	int3   
   14001d176:	int3   
   14001d177:	int3   
   14001d178:	int3   
   14001d179:	int3   
   14001d17a:	int3   
   14001d17b:	int3   
   14001d17c:	int3   
   14001d17d:	int3   
   14001d17e:	int3   
   14001d17f:	int3   
   14001d180:	lea    rax,[rcx+0x19]
   14001d184:	ret    
   14001d185:	int3   
   14001d186:	int3   
   14001d187:	int3   
   14001d188:	int3   
   14001d189:	int3   
   14001d18a:	int3   
   14001d18b:	int3   
   14001d18c:	int3   
   14001d18d:	int3   
   14001d18e:	int3   
   14001d18f:	int3   
   14001d190:	lea    rax,[rdx+0x20]
   14001d194:	ret    
   14001d195:	int3   
   14001d196:	int3   
   14001d197:	int3   
   14001d198:	int3   
   14001d199:	int3   
   14001d19a:	int3   
   14001d19b:	int3   
   14001d19c:	int3   
   14001d19d:	int3   
   14001d19e:	int3   
   14001d19f:	int3   
   14001d1a0:	mov    rax,rdx
   14001d1a3:	ret    
   14001d1a4:	int3   
   14001d1a5:	int3   
   14001d1a6:	int3   
   14001d1a7:	int3   
   14001d1a8:	int3   
   14001d1a9:	int3   
   14001d1aa:	int3   
   14001d1ab:	int3   
   14001d1ac:	int3   
   14001d1ad:	int3   
   14001d1ae:	int3   
   14001d1af:	int3   
   14001d1b0:	rex push rbx
   14001d1b2:	push   rbp
   14001d1b3:	push   r14
   14001d1b5:	sub    rsp,0x20
   14001d1b9:	mov    rbp,QWORD PTR [rcx]
   14001d1bc:	mov    r14,rdx
   14001d1bf:	mov    rbx,QWORD PTR [rbp+0x8]
   14001d1c3:	cmp    BYTE PTR [rbx+0x19],0x0
   14001d1c7:	jne    0x14001d253
   14001d1cd:	mov    QWORD PTR [rsp+0x40],rsi
   14001d1d2:	mov    rsi,QWORD PTR [rdx+0x10]
   14001d1d6:	mov    QWORD PTR [rsp+0x48],rdi
   14001d1db:	mov    QWORD PTR [rsp+0x50],r15
   14001d1e0:	mov    r15,QWORD PTR [rdx+0x18]
   14001d1e4:	lea    rcx,[rbx+0x20]
   14001d1e8:	cmp    r15,0x10
   14001d1ec:	jb     0x14001d1f3
   14001d1ee:	mov    rdx,QWORD PTR [r14]
   14001d1f1:	jmp    0x14001d1f6
   14001d1f3:	mov    rdx,r14
   14001d1f6:	cmp    QWORD PTR [rcx+0x18],0x10
   14001d1fb:	mov    rdi,QWORD PTR [rcx+0x10]
   14001d1ff:	jb     0x14001d204
   14001d201:	mov    rcx,QWORD PTR [rcx]
   14001d204:	cmp    rdi,rsi
   14001d207:	mov    r8,rsi
   14001d20a:	cmovb  r8,rdi
   14001d20e:	test   r8,r8
   14001d211:	jne    0x14001d217
   14001d213:	xor    eax,eax
   14001d215:	jmp    0x14001d21c
   14001d217:	call   0x140030484
   14001d21c:	cdqe   
   14001d21e:	test   rax,rax
   14001d221:	jne    0x14001d22e
   14001d223:	cmp    rdi,rsi
   14001d226:	jb     0x14001d23a
   14001d228:	cmp    rdi,rsi
   14001d22b:	setne  al
   14001d22e:	test   eax,eax
   14001d230:	js     0x14001d23a
   14001d232:	mov    rbp,rbx
   14001d235:	mov    rbx,QWORD PTR [rbx]
   14001d238:	jmp    0x14001d23e
   14001d23a:	mov    rbx,QWORD PTR [rbx+0x10]
   14001d23e:	cmp    BYTE PTR [rbx+0x19],0x0
   14001d242:	je     0x14001d1e4
   14001d244:	mov    r15,QWORD PTR [rsp+0x50]
   14001d249:	mov    rdi,QWORD PTR [rsp+0x48]
   14001d24e:	mov    rsi,QWORD PTR [rsp+0x40]
   14001d253:	mov    rax,rbp
   14001d256:	add    rsp,0x20
   14001d25a:	pop    r14
   14001d25c:	pop    rbp
   14001d25d:	pop    rbx
   14001d25e:	ret    
   14001d25f:	int3   
   14001d260:	mov    rax,rcx
   14001d263:	ret    
   14001d264:	int3   
   14001d265:	int3   
   14001d266:	int3   
   14001d267:	int3   
   14001d268:	int3   
   14001d269:	int3   
   14001d26a:	int3   
   14001d26b:	int3   
   14001d26c:	int3   
   14001d26d:	int3   
   14001d26e:	int3   
   14001d26f:	int3   
   14001d270:	mov    rcx,QWORD PTR [rcx+0x90]
   14001d277:	test   rcx,rcx
   14001d27a:	je     0x14001d283
   14001d27c:	rex.W jmp QWORD PTR [rip+0x1920d]        # 0x140036490
   14001d283:	ret    
   14001d284:	int3   
   14001d285:	int3   
   14001d286:	int3   
   14001d287:	int3   
   14001d288:	int3   
   14001d289:	int3   
   14001d28a:	int3   
   14001d28b:	int3   
   14001d28c:	int3   
   14001d28d:	int3   
   14001d28e:	int3   
   14001d28f:	int3   
   14001d290:	mov    QWORD PTR [rdx],r8
   14001d293:	mov    rax,rdx
   14001d296:	ret    
   14001d297:	int3   
   14001d298:	int3   
   14001d299:	int3   
   14001d29a:	int3   
   14001d29b:	int3   
   14001d29c:	int3   
   14001d29d:	int3   
   14001d29e:	int3   
   14001d29f:	int3   
   14001d2a0:	mov    QWORD PTR [rdx],r8
   14001d2a3:	mov    rax,rdx
   14001d2a6:	ret    
   14001d2a7:	int3   
   14001d2a8:	int3   
   14001d2a9:	int3   
   14001d2aa:	int3   
   14001d2ab:	int3   
   14001d2ac:	int3   
   14001d2ad:	int3   
   14001d2ae:	int3   
   14001d2af:	int3   
   14001d2b0:	mov    QWORD PTR [rsp+0x18],r8
   14001d2b5:	push   rdi
   14001d2b6:	sub    rsp,0x50
   14001d2ba:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14001d2c3:	mov    QWORD PTR [rsp+0x60],rbx
   14001d2c8:	mov    QWORD PTR [rsp+0x68],rsi
   14001d2cd:	mov    rbx,r8
   14001d2d0:	mov    rsi,rdx
   14001d2d3:	mov    rdi,rcx
   14001d2d6:	mov    DWORD PTR [rsp+0x20],0x0
   14001d2de:	cmp    QWORD PTR [r8+0x10],0x0
   14001d2e3:	je     0x14001d2fa
   14001d2e5:	mov    r8d,0x2
   14001d2eb:	lea    rdx,[rip+0x1d3ce]        # 0x14003a6c0
   14001d2f2:	mov    rcx,rbx
   14001d2f5:	call   0x14001ec30
   14001d2fa:	lea    rdx,[rsp+0x30]
   14001d2ff:	mov    rcx,rsi
   14001d302:	call   0x140025ee0
   14001d307:	nop
   14001d308:	or     r9,0xffffffffffffffff
   14001d30c:	xor    r8d,r8d
   14001d30f:	mov    rdx,rax
   14001d312:	mov    rcx,rbx
   14001d315:	call   0x14001eaf0
   14001d31a:	nop
   14001d31b:	cmp    QWORD PTR [rsp+0x48],0x10
   14001d321:	jb     0x14001d32d
   14001d323:	mov    rcx,QWORD PTR [rsp+0x30]
   14001d328:	call   0x140030282
   14001d32d:	mov    rdx,rbx
   14001d330:	mov    rcx,rdi
   14001d333:	call   0x140011010
   14001d338:	nop
   14001d339:	cmp    QWORD PTR [rbx+0x18],0x10
   14001d33e:	jb     0x14001d348
   14001d340:	mov    rcx,QWORD PTR [rbx]
   14001d343:	call   0x140030282
   14001d348:	mov    QWORD PTR [rbx+0x18],0xf
   14001d350:	mov    QWORD PTR [rbx+0x10],0x0
   14001d358:	mov    BYTE PTR [rbx],0x0
   14001d35b:	mov    rax,rdi
   14001d35e:	mov    rbx,QWORD PTR [rsp+0x60]
   14001d363:	mov    rsi,QWORD PTR [rsp+0x68]
   14001d368:	add    rsp,0x50
   14001d36c:	pop    rdi
   14001d36d:	ret    
   14001d36e:	int3   
   14001d36f:	int3   
   14001d370:	mov    rax,QWORD PTR [rcx]
   14001d373:	ret    
   14001d374:	int3   
   14001d375:	int3   
   14001d376:	int3   
   14001d377:	int3   
   14001d378:	int3   
   14001d379:	int3   
   14001d37a:	int3   
   14001d37b:	int3   
   14001d37c:	int3   
   14001d37d:	int3   
   14001d37e:	int3   
   14001d37f:	int3   
   14001d380:	mov    rax,QWORD PTR [rcx]
   14001d383:	ret    
   14001d384:	int3   
   14001d385:	int3   
   14001d386:	int3   
   14001d387:	int3   
   14001d388:	int3   
   14001d389:	int3   
   14001d38a:	int3   
   14001d38b:	int3   
   14001d38c:	int3   
   14001d38d:	int3   
   14001d38e:	int3   
   14001d38f:	int3   
   14001d390:	mov    rax,QWORD PTR [rcx]
   14001d393:	ret    
   14001d394:	int3   
   14001d395:	int3   
   14001d396:	int3   
   14001d397:	int3   
   14001d398:	int3   
   14001d399:	int3   
   14001d39a:	int3   
   14001d39b:	int3   
   14001d39c:	int3   
   14001d39d:	int3   
   14001d39e:	int3   
   14001d39f:	int3   
   14001d3a0:	cmp    QWORD PTR [rcx+0x18],0x10
   14001d3a5:	jb     0x14001d3ab
   14001d3a7:	mov    rax,QWORD PTR [rcx]
   14001d3aa:	ret    
   14001d3ab:	mov    rax,rcx
   14001d3ae:	ret    
   14001d3af:	int3   
   14001d3b0:	cmp    QWORD PTR [rcx+0x18],0x10
   14001d3b5:	jb     0x14001d3bb
   14001d3b7:	mov    rax,QWORD PTR [rcx]
   14001d3ba:	ret    
   14001d3bb:	mov    rax,rcx
   14001d3be:	ret    
   14001d3bf:	int3   
   14001d3c0:	cmp    QWORD PTR [rcx+0x18],0x8
   14001d3c5:	jb     0x14001d3cb
   14001d3c7:	mov    rax,QWORD PTR [rcx]
   14001d3ca:	ret    
   14001d3cb:	mov    rax,rcx
   14001d3ce:	ret    
   14001d3cf:	int3   
   14001d3d0:	lea    rax,[rcx+0x10]
   14001d3d4:	ret    
   14001d3d5:	int3   
   14001d3d6:	int3   
   14001d3d7:	int3   
   14001d3d8:	int3   
   14001d3d9:	int3   
   14001d3da:	int3   
   14001d3db:	int3   
   14001d3dc:	int3   
   14001d3dd:	int3   
   14001d3de:	int3   
   14001d3df:	int3   
   14001d3e0:	lea    rax,[rcx+0x10]
   14001d3e4:	ret    
   14001d3e5:	int3   
   14001d3e6:	int3   
   14001d3e7:	int3   
   14001d3e8:	int3   
   14001d3e9:	int3   
   14001d3ea:	int3   
   14001d3eb:	int3   
   14001d3ec:	int3   
   14001d3ed:	int3   
   14001d3ee:	int3   
   14001d3ef:	int3   
   14001d3f0:	lea    rax,[rcx+0x20]
   14001d3f4:	ret    
   14001d3f5:	int3   
   14001d3f6:	int3   
   14001d3f7:	int3   
   14001d3f8:	int3   
   14001d3f9:	int3   
   14001d3fa:	int3   
   14001d3fb:	int3   
   14001d3fc:	int3   
   14001d3fd:	int3   
   14001d3fe:	int3   
   14001d3ff:	int3   
   14001d400:	mov    rax,rcx
   14001d403:	ret    
   14001d404:	int3   
   14001d405:	int3   
   14001d406:	int3   
   14001d407:	int3   
   14001d408:	int3   
   14001d409:	int3   
   14001d40a:	int3   
   14001d40b:	int3   
   14001d40c:	int3   
   14001d40d:	int3   
   14001d40e:	int3   
   14001d40f:	int3   
   14001d410:	mov    rax,rcx
   14001d413:	ret    
   14001d414:	int3   
   14001d415:	int3   
   14001d416:	int3   
   14001d417:	int3   
   14001d418:	int3   
   14001d419:	int3   
   14001d41a:	int3   
   14001d41b:	int3   
   14001d41c:	int3   
   14001d41d:	int3   
   14001d41e:	int3   
   14001d41f:	int3   
   14001d420:	ret    0x0
   14001d423:	int3   
   14001d424:	int3   
   14001d425:	int3   
   14001d426:	int3   
   14001d427:	int3   
   14001d428:	int3   
   14001d429:	int3   
   14001d42a:	int3   
   14001d42b:	int3   
   14001d42c:	int3   
   14001d42d:	int3   
   14001d42e:	int3   
   14001d42f:	int3   
   14001d430:	lea    rax,[rcx+0x8]
   14001d434:	ret    
   14001d435:	int3   
   14001d436:	int3   
   14001d437:	int3   
   14001d438:	int3   
   14001d439:	int3   
   14001d43a:	int3   
   14001d43b:	int3   
   14001d43c:	int3   
   14001d43d:	int3   
   14001d43e:	int3   
   14001d43f:	int3   
   14001d440:	test   rcx,rcx
   14001d443:	jne    0x14001d448
   14001d445:	xor    eax,eax
   14001d447:	ret    
   14001d448:	sub    rcx,rdx
   14001d44b:	mov    rax,rcx
   14001d44e:	ret    
   14001d44f:	int3   
   14001d450:	lea    rax,[rcx+0x8]
   14001d454:	ret    
   14001d455:	int3   
   14001d456:	int3   
   14001d457:	int3   
   14001d458:	int3   
   14001d459:	int3   
   14001d45a:	int3   
   14001d45b:	int3   
   14001d45c:	int3   
   14001d45d:	int3   
   14001d45e:	int3   
   14001d45f:	int3   
   14001d460:	lea    rax,[rcx+0x8]
   14001d464:	ret    
   14001d465:	int3   
   14001d466:	int3   
   14001d467:	int3   
   14001d468:	int3   
   14001d469:	int3   
   14001d46a:	int3   
   14001d46b:	int3   
   14001d46c:	int3   
   14001d46d:	int3   
   14001d46e:	int3   
   14001d46f:	int3   
   14001d470:	rex push rdi
   14001d472:	push   r12
   14001d474:	push   r13
   14001d476:	push   r14
   14001d478:	push   r15
   14001d47a:	sub    rsp,0x40
   14001d47e:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14001d487:	mov    QWORD PTR [rsp+0x70],rbx
   14001d48c:	mov    QWORD PTR [rsp+0x88],rsi
   14001d494:	mov    rdi,rdx
   14001d497:	mov    r15,rcx
   14001d49a:	xor    r13d,r13d
   14001d49d:	mov    esi,r13d
   14001d4a0:	mov    QWORD PTR [rsp+0x80],r13
   14001d4a8:	test   rdx,rdx
   14001d4ab:	je     0x14001d4df
   14001d4ad:	movabs rax,0x7ffffffffffffff
   14001d4b7:	cmp    rdx,rax
   14001d4ba:	ja     0x14001d4d8
   14001d4bc:	mov    rcx,rdx
   14001d4bf:	shl    rcx,0x5
   14001d4c3:	call   0x14003027c
   14001d4c8:	mov    rsi,rax
   14001d4cb:	mov    QWORD PTR [rsp+0x80],rax
   14001d4d3:	test   rax,rax
   14001d4d6:	jne    0x14001d4df
   14001d4d8:	call   QWORD PTR [rip+0x18d3a]        # 0x140036218
   14001d4de:	nop
   14001d4df:	movzx  eax,BYTE PTR [rsp+0x78]
   14001d4e4:	mov    BYTE PTR [rsp+0x28],al
   14001d4e8:	mov    QWORD PTR [rsp+0x20],r13
   14001d4ed:	lea    r9,[rsp+0x78]
   14001d4f2:	mov    r8,rsi
   14001d4f5:	mov    rdx,QWORD PTR [r15+0x8]
   14001d4f9:	mov    rcx,QWORD PTR [r15]
   14001d4fc:	call   0x1400058c0
   14001d501:	nop
   14001d502:	mov    r12,QWORD PTR [r15+0x8]
   14001d506:	mov    rbx,QWORD PTR [r15]
   14001d509:	mov    r14,r12
   14001d50c:	sub    r14,rbx
   14001d50f:	test   rbx,rbx
   14001d512:	je     0x14001d54f
   14001d514:	cmp    rbx,r12
   14001d517:	je     0x14001d547
   14001d519:	nop    DWORD PTR [rax+0x0]
   14001d520:	cmp    QWORD PTR [rbx+0x18],0x10
   14001d525:	jb     0x14001d52f
   14001d527:	mov    rcx,QWORD PTR [rbx]
   14001d52a:	call   0x140030282
   14001d52f:	mov    QWORD PTR [rbx+0x18],0xf
   14001d537:	mov    QWORD PTR [rbx+0x10],r13
   14001d53b:	mov    BYTE PTR [rbx],0x0
   14001d53e:	add    rbx,0x20
   14001d542:	cmp    rbx,r12
   14001d545:	jne    0x14001d520
   14001d547:	mov    rcx,QWORD PTR [r15]
   14001d54a:	call   0x140030282
   14001d54f:	shl    rdi,0x5
   14001d553:	add    rdi,rsi
   14001d556:	mov    QWORD PTR [r15+0x10],rdi
   14001d55a:	and    r14,0xffffffffffffffe0
   14001d55e:	add    r14,rsi
   14001d561:	mov    QWORD PTR [r15+0x8],r14
   14001d565:	mov    QWORD PTR [r15],rsi
   14001d568:	mov    rbx,QWORD PTR [rsp+0x70]
   14001d56d:	mov    rsi,QWORD PTR [rsp+0x88]
   14001d575:	add    rsp,0x40
   14001d579:	pop    r15
   14001d57b:	pop    r14
   14001d57d:	pop    r13
   14001d57f:	pop    r12
   14001d581:	pop    rdi
   14001d582:	ret    
   14001d583:	int3   
   14001d584:	int3   
   14001d585:	int3   
   14001d586:	int3   
   14001d587:	int3   
   14001d588:	int3   
   14001d589:	int3   
   14001d58a:	int3   
   14001d58b:	int3   
   14001d58c:	int3   
   14001d58d:	int3   
   14001d58e:	int3   
   14001d58f:	int3   
   14001d590:	mov    QWORD PTR [rcx],rdx
   14001d593:	mov    rax,rcx
   14001d596:	ret    
   14001d597:	int3   
   14001d598:	int3   
   14001d599:	int3   
   14001d59a:	int3   
   14001d59b:	int3   
   14001d59c:	int3   
   14001d59d:	int3   
   14001d59e:	int3   
   14001d59f:	int3   
   14001d5a0:	mov    QWORD PTR [rcx],rdx
   14001d5a3:	mov    rax,rcx
   14001d5a6:	ret    
   14001d5a7:	int3   
   14001d5a8:	int3   
   14001d5a9:	int3   
   14001d5aa:	int3   
   14001d5ab:	int3   
   14001d5ac:	int3   
   14001d5ad:	int3   
   14001d5ae:	int3   
   14001d5af:	int3   
   14001d5b0:	sub    rsp,0x28
   14001d5b4:	mov    r8,QWORD PTR [rcx+0x8]
   14001d5b8:	mov    r9,rdx
   14001d5bb:	mov    rdx,QWORD PTR [rcx+0x10]
   14001d5bf:	mov    rax,rdx
   14001d5c2:	sub    rax,r8
   14001d5c5:	sar    rax,0x5
   14001d5c9:	cmp    rax,r9
   14001d5cc:	jae    0x14001d636
   14001d5ce:	sub    r8,QWORD PTR [rcx]
   14001d5d1:	movabs r10,0x7ffffffffffffff
   14001d5db:	sar    r8,0x5
   14001d5df:	mov    rax,r10
   14001d5e2:	sub    rax,r8
   14001d5e5:	cmp    rax,r9
   14001d5e8:	jae    0x14001d5f8
   14001d5ea:	lea    rcx,[rip+0x1f34f]        # 0x14003c940
   14001d5f1:	call   QWORD PTR [rip+0x18c29]        # 0x140036220
   14001d5f7:	int3   
   14001d5f8:	sub    rdx,QWORD PTR [rcx]
   14001d5fb:	lea    r11,[r8+r9*1]
   14001d5ff:	sar    rdx,0x5
   14001d603:	mov    rax,rdx
   14001d606:	shr    rax,1
   14001d609:	sub    r10,rax
   14001d60c:	cmp    r10,rdx
   14001d60f:	jae    0x14001d623
   14001d611:	xor    edx,edx
   14001d613:	cmp    rdx,r11
   14001d616:	cmovb  rdx,r11
   14001d61a:	add    rsp,0x28
   14001d61e:	jmp    0x14001d470
   14001d623:	add    rdx,rax
   14001d626:	cmp    rdx,r11
   14001d629:	cmovb  rdx,r11
   14001d62d:	add    rsp,0x28
   14001d631:	jmp    0x14001d470
   14001d636:	add    rsp,0x28
   14001d63a:	ret    
   14001d63b:	int3   
   14001d63c:	int3   
   14001d63d:	int3   
   14001d63e:	int3   
   14001d63f:	int3   
   14001d640:	mov    r9,QWORD PTR [rcx+0x18]
   14001d644:	lea    rax,[rcx+0x80]
   14001d64b:	cmp    QWORD PTR [r9],rax
   14001d64e:	jne    0x14001d66c
   14001d650:	mov    rdx,QWORD PTR [rcx+0x68]
   14001d654:	mov    r8,QWORD PTR [rcx+0x70]
   14001d658:	mov    QWORD PTR [r9],rdx
   14001d65b:	mov    rax,QWORD PTR [rcx+0x38]
   14001d65f:	sub    r8d,edx
   14001d662:	mov    QWORD PTR [rax],rdx
   14001d665:	mov    rax,QWORD PTR [rcx+0x50]
   14001d669:	mov    DWORD PTR [rax],r8d
   14001d66c:	ret    
   14001d66d:	int3   
   14001d66e:	int3   
   14001d66f:	int3   
   14001d670:	lea    rax,[rcx+0x10]
   14001d674:	ret    
   14001d675:	int3   
   14001d676:	int3   
   14001d677:	int3   
   14001d678:	int3   
   14001d679:	int3   
   14001d67a:	int3   
   14001d67b:	int3   
   14001d67c:	int3   
   14001d67d:	int3   
   14001d67e:	int3   
   14001d67f:	int3   
   14001d680:	mov    rax,QWORD PTR [rcx]
   14001d683:	add    rax,0x8
   14001d687:	ret    
   14001d688:	int3   
   14001d689:	int3   
   14001d68a:	int3   
   14001d68b:	int3   
   14001d68c:	int3   
   14001d68d:	int3   
   14001d68e:	int3   
   14001d68f:	int3   
   14001d690:	mov    r8,rcx
   14001d693:	mov    rcx,QWORD PTR [rcx+0x18]
   14001d697:	mov    rax,QWORD PTR [rcx]
   14001d69a:	lea    r9,[r8+0x80]
   14001d6a1:	cmp    rax,r9
   14001d6a4:	je     0x14001d6bc
   14001d6a6:	mov    QWORD PTR [r8+0x68],rax
   14001d6aa:	mov    rax,QWORD PTR [r8+0x50]
   14001d6ae:	movsxd rdx,DWORD PTR [rax]
   14001d6b1:	mov    rax,QWORD PTR [r8+0x38]
   14001d6b5:	add    rdx,QWORD PTR [rax]
   14001d6b8:	mov    QWORD PTR [r8+0x70],rdx
   14001d6bc:	mov    QWORD PTR [rcx],r9
   14001d6bf:	mov    rax,QWORD PTR [r8+0x38]
   14001d6c3:	mov    ecx,r8d
   14001d6c6:	mov    QWORD PTR [rax],r9
   14001d6c9:	mov    rax,QWORD PTR [r8+0x50]
   14001d6cd:	sub    ecx,r9d
   14001d6d0:	add    ecx,0x81
   14001d6d6:	mov    DWORD PTR [rax],ecx
   14001d6d8:	ret    
   14001d6d9:	int3   
   14001d6da:	int3   
   14001d6db:	int3   
   14001d6dc:	int3   
   14001d6dd:	int3   
   14001d6de:	int3   
   14001d6df:	int3   
   14001d6e0:	ret    0x0
   14001d6e3:	int3   
   14001d6e4:	int3   
   14001d6e5:	int3   
   14001d6e6:	int3   
   14001d6e7:	int3   
   14001d6e8:	int3   
   14001d6e9:	int3   
   14001d6ea:	int3   
   14001d6eb:	int3   
   14001d6ec:	int3   
   14001d6ed:	int3   
   14001d6ee:	int3   
   14001d6ef:	int3   
   14001d6f0:	mov    QWORD PTR [rsp+0x8],rbx
   14001d6f5:	mov    QWORD PTR [rsp+0x10],rsi
   14001d6fa:	push   rdi
   14001d6fb:	sub    rsp,0x20
   14001d6ff:	cmp    QWORD PTR [rcx+0x18],0x10
   14001d704:	mov    rdi,rdx
   14001d707:	mov    rbx,rcx
   14001d70a:	jb     0x14001d753
   14001d70c:	cmp    QWORD PTR [rdx+0x18],0x10
   14001d711:	jb     0x14001d72f
   14001d713:	mov    rax,QWORD PTR [rdx]
   14001d716:	mov    rcx,QWORD PTR [rcx]
   14001d719:	mov    QWORD PTR [rbx],rax
   14001d71c:	mov    QWORD PTR [rdx],rcx
   14001d71f:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d724:	mov    rsi,QWORD PTR [rsp+0x38]
   14001d729:	add    rsp,0x20
   14001d72d:	pop    rdi
   14001d72e:	ret    
   14001d72f:	mov    r8,QWORD PTR [rdx+0x10]
   14001d733:	mov    rsi,QWORD PTR [rcx]
   14001d736:	inc    r8
   14001d739:	je     0x14001d740
   14001d73b:	call   0x14003048a
   14001d740:	mov    QWORD PTR [rdi],rsi
   14001d743:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d748:	mov    rsi,QWORD PTR [rsp+0x38]
   14001d74d:	add    rsp,0x20
   14001d751:	pop    rdi
   14001d752:	ret    
   14001d753:	cmp    QWORD PTR [rdx+0x18],0x10
   14001d758:	jae    0x14001d7ab
   14001d75a:	cmp    rcx,rdx
   14001d75d:	je     0x14001d7c5
   14001d75f:	lea    rax,[rcx+0x10]
   14001d763:	mov    rdx,rax
   14001d766:	sub    rdx,rcx
   14001d769:	xor    ecx,ecx
   14001d76b:	cmp    rbx,rax
   14001d76e:	cmova  rdx,rcx
   14001d772:	test   rdx,rdx
   14001d775:	je     0x14001d7c5
   14001d777:	mov    r8,rbx
   14001d77a:	neg    r8
   14001d77d:	sub    rdi,rbx
   14001d780:	movzx  eax,BYTE PTR [rdi+rbx*1]
   14001d784:	movzx  ecx,BYTE PTR [rbx]
   14001d787:	lea    rbx,[rbx+0x1]
   14001d78b:	mov    BYTE PTR [rbx-0x1],al
   14001d78e:	mov    BYTE PTR [rdi+rbx*1-0x1],cl
   14001d792:	lea    rax,[r8+rbx*1]
   14001d796:	cmp    rax,rdx
   14001d799:	jne    0x14001d780
   14001d79b:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d7a0:	mov    rsi,QWORD PTR [rsp+0x38]
   14001d7a5:	add    rsp,0x20
   14001d7a9:	pop    rdi
   14001d7aa:	ret    
   14001d7ab:	mov    r8,QWORD PTR [rcx+0x10]
   14001d7af:	mov    rsi,QWORD PTR [rdx]
   14001d7b2:	inc    r8
   14001d7b5:	je     0x14001d7c2
   14001d7b7:	mov    rdx,rcx
   14001d7ba:	mov    rcx,rdi
   14001d7bd:	call   0x14003048a
   14001d7c2:	mov    QWORD PTR [rbx],rsi
   14001d7c5:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d7ca:	mov    rsi,QWORD PTR [rsp+0x38]
   14001d7cf:	add    rsp,0x20
   14001d7d3:	pop    rdi
   14001d7d4:	ret    
   14001d7d5:	int3   
   14001d7d6:	int3   
   14001d7d7:	int3   
   14001d7d8:	int3   
   14001d7d9:	int3   
   14001d7da:	int3   
   14001d7db:	int3   
   14001d7dc:	int3   
   14001d7dd:	int3   
   14001d7de:	int3   
   14001d7df:	int3   
   14001d7e0:	mov    QWORD PTR [rsp+0x10],rbx
   14001d7e5:	push   rdi
   14001d7e6:	sub    rsp,0x20
   14001d7ea:	mov    rdi,r8
   14001d7ed:	mov    rbx,rcx
   14001d7f0:	test   dl,dl
   14001d7f2:	je     0x14001d81d
   14001d7f4:	cmp    QWORD PTR [rcx+0x18],0x10
   14001d7f9:	jb     0x14001d81d
   14001d7fb:	mov    QWORD PTR [rsp+0x30],rsi
   14001d800:	mov    rsi,QWORD PTR [rcx]
   14001d803:	test   r8,r8
   14001d806:	je     0x14001d810
   14001d808:	mov    rdx,rsi
   14001d80b:	call   0x14003048a
   14001d810:	mov    rcx,rsi
   14001d813:	call   0x140030282
   14001d818:	mov    rsi,QWORD PTR [rsp+0x30]
   14001d81d:	mov    QWORD PTR [rbx+0x18],0xf
   14001d825:	mov    QWORD PTR [rbx+0x10],rdi
   14001d829:	mov    BYTE PTR [rdi+rbx*1],0x0
   14001d82d:	mov    rbx,QWORD PTR [rsp+0x38]
   14001d832:	add    rsp,0x20
   14001d836:	pop    rdi
   14001d837:	ret    
   14001d838:	int3   
   14001d839:	int3   
   14001d83a:	int3   
   14001d83b:	int3   
   14001d83c:	int3   
   14001d83d:	int3   
   14001d83e:	int3   
   14001d83f:	int3   
   14001d840:	mov    QWORD PTR [rsp+0x10],rbx
   14001d845:	push   rdi
   14001d846:	sub    rsp,0x20
   14001d84a:	mov    rdi,r8
   14001d84d:	mov    rbx,rcx
   14001d850:	test   dl,dl
   14001d852:	je     0x14001d880
   14001d854:	cmp    QWORD PTR [rcx+0x18],0x8
   14001d859:	jb     0x14001d880
   14001d85b:	mov    QWORD PTR [rsp+0x30],rsi
   14001d860:	mov    rsi,QWORD PTR [rcx]
   14001d863:	test   r8,r8
   14001d866:	je     0x14001d873
   14001d868:	add    r8,r8
   14001d86b:	mov    rdx,rsi
   14001d86e:	call   0x14003048a
   14001d873:	mov    rcx,rsi
   14001d876:	call   0x140030282
   14001d87b:	mov    rsi,QWORD PTR [rsp+0x30]
   14001d880:	mov    QWORD PTR [rbx+0x18],0x7
   14001d888:	mov    QWORD PTR [rbx+0x10],rdi
   14001d88c:	xor    eax,eax
   14001d88e:	mov    WORD PTR [rbx+rdi*2],ax
   14001d892:	mov    rbx,QWORD PTR [rsp+0x38]
   14001d897:	add    rsp,0x20
   14001d89b:	pop    rdi
   14001d89c:	ret    
   14001d89d:	int3   
   14001d89e:	int3   
   14001d89f:	int3   
   14001d8a0:	rex push rbx
   14001d8a2:	sub    rsp,0x20
   14001d8a6:	test   BYTE PTR [rcx+0x70],0x1
   14001d8aa:	mov    rbx,rcx
   14001d8ad:	je     0x14001d8bb
   14001d8af:	mov    rcx,QWORD PTR [rcx+0x18]
   14001d8b3:	mov    rcx,QWORD PTR [rcx]
   14001d8b6:	call   0x140030282
   14001d8bb:	mov    rax,QWORD PTR [rbx+0x18]
   14001d8bf:	xor    ecx,ecx
   14001d8c1:	mov    QWORD PTR [rax],rcx
   14001d8c4:	mov    rax,QWORD PTR [rbx+0x38]
   14001d8c8:	mov    QWORD PTR [rax],rcx
   14001d8cb:	mov    rax,QWORD PTR [rbx+0x50]
   14001d8cf:	mov    DWORD PTR [rax],ecx
   14001d8d1:	mov    rax,QWORD PTR [rbx+0x20]
   14001d8d5:	mov    QWORD PTR [rax],rcx
   14001d8d8:	mov    rax,QWORD PTR [rbx+0x40]
   14001d8dc:	mov    QWORD PTR [rax],rcx
   14001d8df:	mov    rax,QWORD PTR [rbx+0x58]
   14001d8e3:	mov    DWORD PTR [rax],ecx
   14001d8e5:	and    DWORD PTR [rbx+0x70],0xfffffffe
   14001d8e9:	mov    QWORD PTR [rbx+0x68],rcx
   14001d8ed:	add    rsp,0x20
   14001d8f1:	pop    rbx
   14001d8f2:	ret    
   14001d8f3:	int3   
   14001d8f4:	int3   
   14001d8f5:	int3   
   14001d8f6:	int3   
   14001d8f7:	int3   
   14001d8f8:	int3   
   14001d8f9:	int3   
   14001d8fa:	int3   
   14001d8fb:	int3   
   14001d8fc:	int3   
   14001d8fd:	int3   
   14001d8fe:	int3   
   14001d8ff:	int3   
   14001d900:	rex push rdi
   14001d902:	sub    rsp,0x20
   14001d906:	mov    rax,QWORD PTR [rcx]
   14001d909:	mov    rdi,rcx
   14001d90c:	mov    rcx,QWORD PTR [rax]
   14001d90f:	mov    QWORD PTR [rax],rax
   14001d912:	mov    rax,QWORD PTR [rdi]
   14001d915:	mov    QWORD PTR [rax+0x8],rax
   14001d919:	mov    QWORD PTR [rdi+0x8],0x0
   14001d921:	cmp    rcx,QWORD PTR [rdi]
   14001d924:	je     0x14001d945
   14001d926:	mov    QWORD PTR [rsp+0x30],rbx
   14001d92b:	nop    DWORD PTR [rax+rax*1+0x0]
   14001d930:	mov    rbx,QWORD PTR [rcx]
   14001d933:	call   0x140030282
   14001d938:	mov    rcx,rbx
   14001d93b:	cmp    rbx,QWORD PTR [rdi]
   14001d93e:	jne    0x14001d930
   14001d940:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d945:	add    rsp,0x20
   14001d949:	pop    rdi
   14001d94a:	ret    
   14001d94b:	int3   
   14001d94c:	int3   
   14001d94d:	int3   
   14001d94e:	int3   
   14001d94f:	int3   
   14001d950:	jmp    0x14001fc90
   14001d955:	int3   
   14001d956:	int3   
   14001d957:	int3   
   14001d958:	int3   
   14001d959:	int3   
   14001d95a:	int3   
   14001d95b:	int3   
   14001d95c:	int3   
   14001d95d:	int3   
   14001d95e:	int3   
   14001d95f:	int3   
   14001d960:	rex push rbx
   14001d962:	sub    rsp,0x20
   14001d966:	mov    rbx,rcx
   14001d969:	mov    rcx,QWORD PTR [rcx+0x10]
   14001d96d:	call   0x140030430
   14001d972:	mov    rcx,QWORD PTR [rbx+0x20]
   14001d976:	call   0x140030430
   14001d97b:	mov    rcx,QWORD PTR [rbx+0x28]
   14001d97f:	add    rsp,0x20
   14001d983:	pop    rbx
   14001d984:	jmp    0x140030430
   14001d989:	int3   
   14001d98a:	int3   
   14001d98b:	int3   
   14001d98c:	int3   
   14001d98d:	int3   
   14001d98e:	int3   
   14001d98f:	int3   
   14001d990:	rex push rbx
   14001d992:	sub    rsp,0x20
   14001d996:	mov    rbx,rcx
   14001d999:	mov    rcx,QWORD PTR [rcx]
   14001d99c:	test   rcx,rcx
   14001d99f:	je     0x14001d9ca
   14001d9a1:	movzx  r9d,BYTE PTR [rsp+0x30]
   14001d9a7:	mov    rdx,QWORD PTR [rbx+0x8]
   14001d9ab:	lea    r8,[rsp+0x30]
   14001d9b0:	call   0x1400042e0
   14001d9b5:	mov    rcx,QWORD PTR [rbx]
   14001d9b8:	call   0x140030282
   14001d9bd:	xor    eax,eax
   14001d9bf:	mov    QWORD PTR [rbx],rax
   14001d9c2:	mov    QWORD PTR [rbx+0x8],rax
   14001d9c6:	mov    QWORD PTR [rbx+0x10],rax
   14001d9ca:	add    rsp,0x20
   14001d9ce:	pop    rbx
   14001d9cf:	ret    
   14001d9d0:	mov    QWORD PTR [rsp+0x18],rbx
   14001d9d5:	push   rdi
   14001d9d6:	sub    rsp,0x20
   14001d9da:	mov    rbx,QWORD PTR [rcx]
   14001d9dd:	mov    rdi,rcx
   14001d9e0:	test   rbx,rbx
   14001d9e3:	je     0x14001da44
   14001d9e5:	mov    QWORD PTR [rsp+0x30],rbp
   14001d9ea:	mov    QWORD PTR [rsp+0x38],rsi
   14001d9ef:	mov    rsi,QWORD PTR [rcx+0x8]
   14001d9f3:	xor    ebp,ebp
   14001d9f5:	cmp    rbx,rsi
   14001d9f8:	je     0x14001da27
   14001d9fa:	nop    WORD PTR [rax+rax*1+0x0]
   14001da00:	cmp    QWORD PTR [rbx+0x18],0x10
   14001da05:	jb     0x14001da0f
   14001da07:	mov    rcx,QWORD PTR [rbx]
   14001da0a:	call   0x140030282
   14001da0f:	mov    QWORD PTR [rbx+0x18],0xf
   14001da17:	mov    QWORD PTR [rbx+0x10],rbp
   14001da1b:	mov    BYTE PTR [rbx],bpl
   14001da1e:	add    rbx,0x20
   14001da22:	cmp    rbx,rsi
   14001da25:	jne    0x14001da00
   14001da27:	mov    rcx,QWORD PTR [rdi]
   14001da2a:	call   0x140030282
   14001da2f:	mov    rsi,QWORD PTR [rsp+0x38]
   14001da34:	mov    QWORD PTR [rdi],rbp
   14001da37:	mov    QWORD PTR [rdi+0x8],rbp
   14001da3b:	mov    QWORD PTR [rdi+0x10],rbp
   14001da3f:	mov    rbp,QWORD PTR [rsp+0x30]
   14001da44:	mov    rbx,QWORD PTR [rsp+0x40]
   14001da49:	add    rsp,0x20
   14001da4d:	pop    rdi
   14001da4e:	ret    
   14001da4f:	int3   
   14001da50:	mov    rax,QWORD PTR [rcx]
   14001da53:	mov    QWORD PTR [rdx],rax
   14001da56:	mov    rax,rdx
   14001da59:	ret    
   14001da5a:	int3   
   14001da5b:	int3   
   14001da5c:	int3   
   14001da5d:	int3   
   14001da5e:	int3   
   14001da5f:	int3   
   14001da60:	mov    rax,QWORD PTR [rcx]
   14001da63:	ret    
   14001da64:	int3   
   14001da65:	int3   
   14001da66:	int3   
   14001da67:	int3   
   14001da68:	int3   
   14001da69:	int3   
   14001da6a:	int3   
   14001da6b:	int3   
   14001da6c:	int3   
   14001da6d:	int3   
   14001da6e:	int3   
   14001da6f:	int3   
   14001da70:	mov    rax,QWORD PTR [rcx]
   14001da73:	ret    
   14001da74:	int3   
   14001da75:	int3   
   14001da76:	int3   
   14001da77:	int3   
   14001da78:	int3   
   14001da79:	int3   
   14001da7a:	int3   
   14001da7b:	int3   
   14001da7c:	int3   
   14001da7d:	int3   
   14001da7e:	int3   
   14001da7f:	int3   
   14001da80:	mov    rax,QWORD PTR [rcx]
   14001da83:	ret    
   14001da84:	int3   
   14001da85:	int3   
   14001da86:	int3   
   14001da87:	int3   
   14001da88:	int3   
   14001da89:	int3   
   14001da8a:	int3   
   14001da8b:	int3   
   14001da8c:	int3   
   14001da8d:	int3   
   14001da8e:	int3   
   14001da8f:	int3   
   14001da90:	mov    rax,QWORD PTR [rcx]
   14001da93:	ret    
   14001da94:	int3   
   14001da95:	int3   
   14001da96:	int3   
   14001da97:	int3   
   14001da98:	int3   
   14001da99:	int3   
   14001da9a:	int3   
   14001da9b:	int3   
   14001da9c:	int3   
   14001da9d:	int3   
   14001da9e:	int3   
   14001da9f:	int3   
   14001daa0:	mov    rax,QWORD PTR [rcx]
   14001daa3:	mov    QWORD PTR [rdx],rax
   14001daa6:	mov    rax,rdx
   14001daa9:	ret    
   14001daaa:	int3   
   14001daab:	int3   
   14001daac:	int3   
   14001daad:	int3   
   14001daae:	int3   
   14001daaf:	int3   
   14001dab0:	mov    QWORD PTR [rsp+0x8],rbx
   14001dab5:	push   rdi
   14001dab6:	sub    rsp,0x20
   14001daba:	mov    rbx,rdx
   14001dabd:	mov    rdx,QWORD PTR [rdx+0x8]
   14001dac1:	mov    rdi,rcx
   14001dac4:	mov    rax,QWORD PTR [rbx]
   14001dac7:	mov    QWORD PTR [rdx],rax
   14001daca:	mov    rdx,QWORD PTR [rbx]
   14001dacd:	mov    rax,QWORD PTR [rbx+0x8]
   14001dad1:	mov    QWORD PTR [rdx+0x8],rax
   14001dad5:	cmp    QWORD PTR [rbx+0x28],0x10
   14001dada:	jb     0x14001dae5
   14001dadc:	mov    rcx,QWORD PTR [rbx+0x10]
   14001dae0:	call   0x140030282
   14001dae5:	mov    QWORD PTR [rbx+0x28],0xf
   14001daed:	mov    QWORD PTR [rbx+0x20],0x0
   14001daf5:	mov    rcx,rbx
   14001daf8:	mov    BYTE PTR [rbx+0x10],0x0
   14001dafc:	call   0x140030282
   14001db01:	dec    QWORD PTR [rdi+0x8]
   14001db05:	mov    rbx,QWORD PTR [rsp+0x30]
   14001db0a:	add    rsp,0x20
   14001db0e:	pop    rdi
   14001db0f:	ret    
   14001db10:	mov    r8,QWORD PTR [rdx+0x8]
   14001db14:	mov    rax,rdx
   14001db17:	mov    rdx,QWORD PTR [rdx]
   14001db1a:	mov    QWORD PTR [r8],rdx
   14001db1d:	mov    r8,QWORD PTR [rax]
   14001db20:	mov    rdx,QWORD PTR [rax+0x8]
   14001db24:	mov    QWORD PTR [r8+0x8],rdx
   14001db28:	dec    QWORD PTR [rcx+0x8]
   14001db2c:	ret    
   14001db2d:	int3   
   14001db2e:	int3   
   14001db2f:	int3   
   14001db30:	mov    rcx,QWORD PTR [rcx+0x90]
   14001db37:	test   rcx,rcx
   14001db3a:	je     0x14001db43
   14001db3c:	rex.W jmp QWORD PTR [rip+0x18945]        # 0x140036488
   14001db43:	ret    
   14001db44:	int3   
   14001db45:	int3   
   14001db46:	int3   
   14001db47:	int3   
   14001db48:	int3   
   14001db49:	int3   
   14001db4a:	int3   
   14001db4b:	int3   
   14001db4c:	int3   
   14001db4d:	int3   
   14001db4e:	int3   
   14001db4f:	int3   
   14001db50:	mov    rax,QWORD PTR [rcx+0x10]
   14001db54:	sub    rax,QWORD PTR [rcx+0x8]
   14001db58:	sar    rax,0x5
   14001db5c:	ret    
   14001db5d:	int3   
   14001db5e:	int3   
   14001db5f:	int3   
   14001db60:	sub    rsp,0x28
   14001db64:	lea    rcx,[rip+0x1edad]        # 0x14003c918
   14001db6b:	call   QWORD PTR [rip+0x186af]        # 0x140036220
   14001db71:	int3   
   14001db72:	int3   
   14001db73:	int3   
   14001db74:	int3   
   14001db75:	int3   
   14001db76:	int3   
   14001db77:	int3   
   14001db78:	int3   
   14001db79:	int3   
   14001db7a:	int3   
   14001db7b:	int3   
   14001db7c:	int3   
   14001db7d:	int3   
   14001db7e:	int3   
   14001db7f:	int3   
   14001db80:	sub    rsp,0x28
   14001db84:	lea    rcx,[rip+0x1edb5]        # 0x14003c940
   14001db8b:	call   QWORD PTR [rip+0x1868f]        # 0x140036220
   14001db91:	int3   
   14001db92:	int3   
   14001db93:	int3   
   14001db94:	int3   
   14001db95:	int3   
   14001db96:	int3   
   14001db97:	int3   
   14001db98:	int3   
   14001db99:	int3   
   14001db9a:	int3   
   14001db9b:	int3   
   14001db9c:	int3   
   14001db9d:	int3   
   14001db9e:	int3   
   14001db9f:	int3   
   14001dba0:	sub    rsp,0x28
   14001dba4:	lea    rcx,[rip+0x1ed95]        # 0x14003c940
   14001dbab:	call   QWORD PTR [rip+0x1866f]        # 0x140036220
   14001dbb1:	int3   
   14001dbb2:	int3   
   14001dbb3:	int3   
   14001dbb4:	int3   
   14001dbb5:	int3   
   14001dbb6:	int3   
   14001dbb7:	int3   
   14001dbb8:	int3   
   14001dbb9:	int3   
   14001dbba:	int3   
   14001dbbb:	int3   
   14001dbbc:	int3   
   14001dbbd:	int3   
   14001dbbe:	int3   
   14001dbbf:	int3   
   14001dbc0:	sub    rsp,0x28
   14001dbc4:	lea    rcx,[rip+0x1ed5d]        # 0x14003c928
   14001dbcb:	call   QWORD PTR [rip+0x18657]        # 0x140036228
   14001dbd1:	int3   
   14001dbd2:	int3   
   14001dbd3:	int3   
   14001dbd4:	int3   
   14001dbd5:	int3   
   14001dbd6:	int3   
   14001dbd7:	int3   
   14001dbd8:	int3   
   14001dbd9:	int3   
   14001dbda:	int3   
   14001dbdb:	int3   
   14001dbdc:	int3   
   14001dbdd:	int3   
   14001dbde:	int3   
   14001dbdf:	int3   
   14001dbe0:	mov    rax,rsp
   14001dbe3:	push   rbp
   14001dbe4:	lea    rbp,[rax-0x5f]
   14001dbe8:	sub    rsp,0xd0
   14001dbef:	mov    QWORD PTR [rbp+0x4f],0xfffffffffffffffe
   14001dbf7:	mov    QWORD PTR [rax+0x8],rbx
   14001dbfb:	mov    QWORD PTR [rax+0x10],rsi
   14001dbff:	mov    QWORD PTR [rax+0x18],rdi
   14001dc03:	mov    QWORD PTR [rax+0x20],r14
   14001dc07:	mov    rdi,r8
   14001dc0a:	mov    rbx,rdx
   14001dc0d:	mov    rsi,rcx
   14001dc10:	mov    QWORD PTR [rbp-0x41],0xf
   14001dc18:	xor    r14d,r14d
   14001dc1b:	mov    QWORD PTR [rbp-0x49],r14
   14001dc1f:	mov    BYTE PTR [rbp-0x59],r14b
   14001dc23:	or     r9,0xffffffffffffffff
   14001dc27:	xor    r8d,r8d
   14001dc2a:	lea    rcx,[rbp-0x59]
   14001dc2e:	call   0x14001ef20
   14001dc33:	movzx  eax,BYTE PTR [rbx+0x20]
   14001dc37:	mov    BYTE PTR [rbp-0x39],al
   14001dc3a:	lea    rax,[rbp-0x59]
   14001dc3e:	cmp    QWORD PTR [rbp-0x41],0x10
   14001dc43:	cmovae rax,QWORD PTR [rbp-0x59]
   14001dc48:	mov    rcx,QWORD PTR [rbx+0x28]
   14001dc4c:	cmp    QWORD PTR [rbx+0x18],0x10
   14001dc51:	jb     0x14001dc56
   14001dc53:	mov    rbx,QWORD PTR [rbx]
   14001dc56:	sub    rcx,rbx
   14001dc59:	add    rax,rcx
   14001dc5c:	mov    QWORD PTR [rbp-0x31],rax
   14001dc60:	lea    rdx,[rbp-0x59]
   14001dc64:	mov    rcx,rsi
   14001dc67:	call   0x140023b90
   14001dc6c:	mov    rbx,rax
   14001dc6f:	lea    rdx,[rbp-0x29]
   14001dc73:	lea    rcx,[rbp-0x59]
   14001dc77:	call   0x140029940
   14001dc7c:	nop
   14001dc7d:	mov    QWORD PTR [rbp+0xf],0xf
   14001dc85:	mov    QWORD PTR [rbp+0x7],r14
   14001dc89:	mov    BYTE PTR [rbp-0x9],0x0
   14001dc8d:	or     r9,0xffffffffffffffff
   14001dc91:	xor    r8d,r8d
   14001dc94:	lea    rdx,[rbp-0x29]
   14001dc98:	lea    rcx,[rbp-0x9]
   14001dc9c:	call   0x14001ef20
   14001dca1:	nop
   14001dca2:	mov    rdx,rdi
   14001dca5:	lea    rcx,[rbp+0x17]
   14001dca9:	call   0x140010e10
   14001dcae:	nop
   14001dcaf:	mov    rcx,QWORD PTR [rbx+0x20]
   14001dcb3:	add    rcx,0x11
   14001dcb7:	lea    r8,[rcx-0x11]
   14001dcbb:	jne    0x14001dcc0
   14001dcbd:	mov    r8,r14
   14001dcc0:	lea    r9,[rbp-0x9]
   14001dcc4:	mov    r8,QWORD PTR [r8+0x8]
   14001dcc8:	lea    rdx,[rbp+0x3f]
   14001dccc:	call   0x1400252b0
   14001dcd1:	mov    rbx,QWORD PTR [rbp+0x3f]
   14001dcd5:	lea    rcx,[rbp+0x17]
   14001dcd9:	call   0x140017040
   14001dcde:	nop
   14001dcdf:	cmp    QWORD PTR [rbp+0xf],0x10
   14001dce4:	jb     0x14001dcef
   14001dce6:	mov    rcx,QWORD PTR [rbp-0x9]
   14001dcea:	call   0x140030282
   14001dcef:	mov    QWORD PTR [rbp+0xf],0xf
   14001dcf7:	mov    QWORD PTR [rbp+0x7],r14
   14001dcfb:	mov    BYTE PTR [rbp-0x9],0x0
   14001dcff:	cmp    QWORD PTR [rbp-0x11],0x10
   14001dd04:	jb     0x14001dd0f
   14001dd06:	mov    rcx,QWORD PTR [rbp-0x29]
   14001dd0a:	call   0x140030282
   14001dd0f:	mov    QWORD PTR [rbp-0x11],0xf
   14001dd17:	mov    QWORD PTR [rbp-0x19],r14
   14001dd1b:	mov    BYTE PTR [rbp-0x29],0x0
   14001dd1f:	cmp    QWORD PTR [rbp-0x41],0x10
   14001dd24:	jb     0x14001dd2f
   14001dd26:	mov    rcx,QWORD PTR [rbp-0x59]
   14001dd2a:	call   0x140030282
   14001dd2f:	lea    rax,[rbx+0x20]
   14001dd33:	lea    r11,[rsp+0xd0]
   14001dd3b:	mov    rbx,QWORD PTR [r11+0x10]
   14001dd3f:	mov    rsi,QWORD PTR [r11+0x18]
   14001dd43:	mov    rdi,QWORD PTR [r11+0x20]
   14001dd47:	mov    r14,QWORD PTR [r11+0x28]
   14001dd4b:	mov    rsp,r11
   14001dd4e:	pop    rbp
   14001dd4f:	ret    
   14001dd50:	mov    rax,rsp
   14001dd53:	push   rbp
   14001dd54:	push   rdi
   14001dd55:	push   r12
   14001dd57:	push   r14
   14001dd59:	push   r15
   14001dd5b:	lea    rbp,[rax-0x128]
   14001dd62:	sub    rsp,0x200
   14001dd69:	mov    QWORD PTR [rbp+0xd0],0xfffffffffffffffe
   14001dd74:	mov    QWORD PTR [rax+0x8],rbx
   14001dd78:	mov    QWORD PTR [rax+0x18],rsi
   14001dd7c:	mov    rdi,rdx
   14001dd7f:	mov    rsi,rcx
   14001dd82:	xor    r14d,r14d
   14001dd85:	mov    DWORD PTR [rbp+0x138],r14d
   14001dd8c:	lea    rax,[rip+0x1cccd]        # 0x14003aa60
   14001dd93:	mov    QWORD PTR [rbp-0x30],rax
   14001dd97:	lea    rax,[rip+0x1ccca]        # 0x14003aa68
   14001dd9e:	mov    QWORD PTR [rbp-0x20],rax
   14001dda2:	lea    rcx,[rbp+0x68]
   14001dda6:	call   QWORD PTR [rip+0x183d4]        # 0x140036180
   14001ddac:	nop
   14001ddad:	mov    DWORD PTR [rbp+0x138],0x1
   14001ddb7:	xor    r8d,r8d
   14001ddba:	lea    rdx,[rbp-0x18]
   14001ddbe:	lea    rcx,[rbp-0x30]
   14001ddc2:	call   QWORD PTR [rip+0x18360]        # 0x140036128
   14001ddc8:	nop
   14001ddc9:	mov    rax,QWORD PTR [rbp-0x30]
   14001ddcd:	movsxd rcx,DWORD PTR [rax+0x4]
   14001ddd1:	lea    r12,[rip+0x1cc80]        # 0x14003aa58
   14001ddd8:	mov    QWORD PTR [rbp+rcx*1-0x30],r12
   14001dddd:	mov    rax,QWORD PTR [rbp-0x30]
   14001dde1:	movsxd rcx,DWORD PTR [rax+0x4]
   14001dde5:	lea    edx,[rcx-0x98]
   14001ddeb:	mov    DWORD PTR [rbp+rcx*1-0x34],edx
   14001ddef:	lea    rcx,[rbp-0x18]
   14001ddf3:	call   QWORD PTR [rip+0x183ff]        # 0x1400361f8
   14001ddf9:	nop
   14001ddfa:	lea    r15,[rip+0x1cbd7]        # 0x14003a9d8
   14001de01:	mov    QWORD PTR [rbp-0x18],r15
   14001de05:	mov    QWORD PTR [rbp+0x50],r14
   14001de09:	mov    DWORD PTR [rbp+0x58],r14d
   14001de0d:	mov    rdi,QWORD PTR [rdi]
   14001de10:	mov    rbx,QWORD PTR [rdi]
   14001de13:	cmp    rbx,rdi
   14001de16:	je     0x14001de82
   14001de18:	nop    DWORD PTR [rax+rax*1+0x0]
   14001de20:	lea    rdx,[rbx+0x10]
   14001de24:	mov    QWORD PTR [rsp+0x48],0xf
   14001de2d:	mov    QWORD PTR [rsp+0x40],r14
   14001de32:	mov    BYTE PTR [rsp+0x30],0x0
   14001de37:	or     r9,0xffffffffffffffff
   14001de3b:	xor    r8d,r8d
   14001de3e:	lea    rcx,[rsp+0x30]
   14001de43:	call   0x14001ef20
   14001de48:	nop
   14001de49:	lea    rdx,[rsp+0x30]
   14001de4e:	lea    rcx,[rbp-0x20]
   14001de52:	call   0x140002ba0
   14001de57:	mov    rcx,rax
   14001de5a:	lea    rdx,[rip+0xfffffffffffea86f]        # 0x1400086d0
   14001de61:	call   QWORD PTR [rip+0x182f9]        # 0x140036160
   14001de67:	nop
   14001de68:	cmp    QWORD PTR [rsp+0x48],0x10
   14001de6e:	jb     0x14001de7a
   14001de70:	mov    rcx,QWORD PTR [rsp+0x30]
   14001de75:	call   0x140030282
   14001de7a:	mov    rbx,QWORD PTR [rbx]
   14001de7d:	cmp    rbx,rdi
   14001de80:	jne    0x14001de20
   14001de82:	mov    QWORD PTR [rsp+0x68],0xf
   14001de8b:	mov    QWORD PTR [rsp+0x60],r14
   14001de90:	mov    BYTE PTR [rsp+0x50],0x0
   14001de95:	mov    r8d,0x1a
   14001de9b:	lea    rdx,[rip+0x1e326]        # 0x14003c1c8
   14001dea2:	lea    rcx,[rsp+0x50]
   14001dea7:	call   0x14001f070
   14001deac:	nop
   14001dead:	xor    r9d,r9d
   14001deb0:	xor    r8d,r8d
   14001deb3:	lea    rdx,[rsp+0x50]
   14001deb8:	mov    rcx,rsi
   14001debb:	call   0x14001e4e0
   14001dec0:	mov    rbx,rax
   14001dec3:	cmp    QWORD PTR [rsp+0x68],0x10
   14001dec9:	jb     0x14001ded5
   14001decb:	mov    rcx,QWORD PTR [rsp+0x50]
   14001ded0:	call   0x140030282
   14001ded5:	mov    QWORD PTR [rsp+0x68],0xf
   14001dede:	mov    QWORD PTR [rsp+0x60],r14
   14001dee3:	mov    BYTE PTR [rsp+0x50],0x0
   14001dee8:	mov    QWORD PTR [rbp-0x78],0xf
   14001def0:	mov    QWORD PTR [rbp-0x80],r14
   14001def4:	mov    BYTE PTR [rsp+0x70],0x0
   14001def9:	mov    r8d,0x6
   14001deff:	lea    rdx,[rip+0x1e2de]        # 0x14003c1e4
   14001df06:	lea    rcx,[rsp+0x70]
   14001df0b:	call   0x14001f070
   14001df10:	nop
   14001df11:	mov    QWORD PTR [rsp+0x48],0xf
   14001df1a:	mov    QWORD PTR [rsp+0x40],r14
   14001df1f:	mov    BYTE PTR [rsp+0x30],0x0
   14001df24:	mov    r8d,0x11
   14001df2a:	lea    rdx,[rip+0x1e2bf]        # 0x14003c1f0
   14001df31:	lea    rcx,[rsp+0x30]
   14001df36:	call   0x14001f070
   14001df3b:	nop
   14001df3c:	lea    rdx,[rbp-0x70]
   14001df40:	lea    rcx,[rbp-0x30]
   14001df44:	call   0x14002cb00
   14001df49:	nop
   14001df4a:	mov    rdx,rax
   14001df4d:	lea    rcx,[rbp-0x50]
   14001df51:	call   0x140020b40
   14001df56:	nop
   14001df57:	mov    rdx,rax
   14001df5a:	lea    rcx,[rbp+0xd8]
   14001df61:	call   0x140022aa0
   14001df66:	mov    BYTE PTR [rsp+0x28],0x0
   14001df6b:	mov    BYTE PTR [rsp+0x20],0x0
   14001df70:	mov    r9,rax
   14001df73:	lea    r8,[rsp+0x70]
   14001df78:	lea    rdx,[rsp+0x30]
   14001df7d:	mov    rcx,rbx
   14001df80:	call   0x140005e30
   14001df85:	nop
   14001df86:	cmp    QWORD PTR [rbp-0x38],0x10
   14001df8b:	jb     0x14001df96
   14001df8d:	mov    rcx,QWORD PTR [rbp-0x50]
   14001df91:	call   0x140030282
   14001df96:	mov    QWORD PTR [rbp-0x38],0xf
   14001df9e:	mov    QWORD PTR [rbp-0x40],r14
   14001dfa2:	mov    BYTE PTR [rbp-0x50],0x0
   14001dfa6:	cmp    QWORD PTR [rbp-0x58],0x10
   14001dfab:	jb     0x14001dfb6
   14001dfad:	mov    rcx,QWORD PTR [rbp-0x70]
   14001dfb1:	call   0x140030282
   14001dfb6:	mov    QWORD PTR [rbp-0x58],0xf
   14001dfbe:	mov    QWORD PTR [rbp-0x60],r14
   14001dfc2:	mov    BYTE PTR [rbp-0x70],0x0
   14001dfc6:	cmp    QWORD PTR [rsp+0x48],0x10
   14001dfcc:	jb     0x14001dfd8
   14001dfce:	mov    rcx,QWORD PTR [rsp+0x30]
   14001dfd3:	call   0x140030282
   14001dfd8:	mov    QWORD PTR [rsp+0x48],0xf
   14001dfe1:	mov    QWORD PTR [rsp+0x40],r14
   14001dfe6:	mov    BYTE PTR [rsp+0x30],0x0
   14001dfeb:	cmp    QWORD PTR [rbp-0x78],0x10
   14001dff0:	jb     0x14001dffd
   14001dff2:	mov    rcx,QWORD PTR [rsp+0x70]
   14001dff7:	call   0x140030282
   14001dffc:	nop
   14001dffd:	mov    rax,QWORD PTR [rbp-0x30]
   14001e001:	movsxd rcx,DWORD PTR [rax+0x4]
   14001e005:	mov    QWORD PTR [rbp+rcx*1-0x30],r12
   14001e00a:	mov    rax,QWORD PTR [rbp-0x30]
   14001e00e:	movsxd rcx,DWORD PTR [rax+0x4]
   14001e012:	lea    edx,[rcx-0x98]
   14001e018:	mov    DWORD PTR [rbp+rcx*1-0x34],edx
   14001e01c:	mov    QWORD PTR [rbp-0x18],r15
   14001e020:	test   BYTE PTR [rbp+0x58],0x1
   14001e024:	je     0x14001e032
   14001e026:	mov    rcx,QWORD PTR [rbp+0x0]
   14001e02a:	mov    rcx,QWORD PTR [rcx]
   14001e02d:	call   0x140030282
   14001e032:	xor    r9d,r9d
   14001e035:	xor    r8d,r8d
   14001e038:	xor    edx,edx
   14001e03a:	lea    rcx,[rbp-0x18]
   14001e03e:	call   QWORD PTR [rip+0x18174]        # 0x1400361b8
   14001e044:	mov    rax,QWORD PTR [rbp+0x8]
   14001e048:	mov    QWORD PTR [rax],r14
   14001e04b:	mov    rax,QWORD PTR [rbp+0x28]
   14001e04f:	mov    QWORD PTR [rax],r14
   14001e052:	mov    rax,QWORD PTR [rbp+0x40]
   14001e056:	mov    DWORD PTR [rax],r14d
   14001e059:	mov    QWORD PTR [rbp+0x50],r14
   14001e05d:	and    DWORD PTR [rbp+0x58],0xfffffffe
   14001e061:	lea    rcx,[rbp-0x18]
   14001e065:	call   QWORD PTR [rip+0x18185]        # 0x1400361f0
   14001e06b:	lea    rcx,[rbp-0x10]
   14001e06f:	call   QWORD PTR [rip+0x180ab]        # 0x140036120
   14001e075:	lea    rcx,[rbp+0x68]
   14001e079:	call   QWORD PTR [rip+0x18121]        # 0x1400361a0
   14001e07f:	lea    r11,[rsp+0x200]
   14001e087:	mov    rbx,QWORD PTR [r11+0x30]
   14001e08b:	mov    rsi,QWORD PTR [r11+0x40]
   14001e08f:	mov    rsp,r11
   14001e092:	pop    r15
   14001e094:	pop    r14
   14001e096:	pop    r12
   14001e098:	pop    rdi
   14001e099:	pop    rbp
   14001e09a:	ret    
   14001e09b:	int3   
   14001e09c:	int3   
   14001e09d:	int3   
   14001e09e:	int3   
   14001e09f:	int3   
   14001e0a0:	mov    rax,rsp
   14001e0a3:	push   rbp
   14001e0a4:	lea    rbp,[rax-0x4f]
   14001e0a8:	sub    rsp,0xa0
   14001e0af:	mov    QWORD PTR [rbp-0x29],0xfffffffffffffffe
   14001e0b7:	mov    QWORD PTR [rax+0x8],rbx
   14001e0bb:	mov    QWORD PTR [rax+0x10],rsi
   14001e0bf:	mov    QWORD PTR [rax+0x18],rdi
   14001e0c3:	mov    QWORD PTR [rax+0x20],r14
   14001e0c7:	mov    rsi,r9
   14001e0ca:	mov    rbx,r8
   14001e0cd:	xor    r9d,r9d
   14001e0d0:	xor    r8d,r8d
   14001e0d3:	call   0x14001e4e0
   14001e0d8:	mov    rdi,rax
   14001e0db:	mov    QWORD PTR [rbp+0x17],0xf
   14001e0e3:	xor    r14d,r14d
   14001e0e6:	mov    QWORD PTR [rbp+0xf],r14
   14001e0ea:	mov    BYTE PTR [rbp-0x1],r14b
   14001e0ee:	lea    r8d,[r14+0x6]
   14001e0f2:	lea    rdx,[rip+0x1e0eb]        # 0x14003c1e4
   14001e0f9:	lea    rcx,[rbp-0x1]
   14001e0fd:	call   0x14001f070
   14001e102:	nop
   14001e103:	mov    QWORD PTR [rbp-0x9],0xf
   14001e10b:	mov    QWORD PTR [rbp-0x11],r14
   14001e10f:	mov    BYTE PTR [rbp-0x21],r14b
   14001e113:	lea    r8d,[r14+0x10]
   14001e117:	lea    rdx,[rip+0x1e0ea]        # 0x14003c208
   14001e11e:	lea    rcx,[rbp-0x21]
   14001e122:	call   0x14001f070
   14001e127:	nop
   14001e128:	mov    QWORD PTR [rbp+0x37],0xf
   14001e130:	mov    QWORD PTR [rbp+0x2f],r14
   14001e134:	mov    BYTE PTR [rbp+0x1f],r14b
   14001e138:	or     r9,0xffffffffffffffff
   14001e13c:	xor    r8d,r8d
   14001e13f:	mov    rdx,rbx
   14001e142:	lea    rcx,[rbp+0x1f]
   14001e146:	call   0x14001ef20
   14001e14b:	mov    BYTE PTR [rsp+0x28],r14b
   14001e150:	mov    BYTE PTR [rsp+0x20],r14b
   14001e155:	lea    r9,[rbp+0x1f]
   14001e159:	lea    r8,[rbp-0x1]
   14001e15d:	lea    rdx,[rbp-0x21]
   14001e161:	mov    rcx,rdi
   14001e164:	call   0x140005e30
   14001e169:	nop
   14001e16a:	cmp    QWORD PTR [rbp-0x9],0x10
   14001e16f:	jb     0x14001e17a
   14001e171:	mov    rcx,QWORD PTR [rbp-0x21]
   14001e175:	call   0x140030282
   14001e17a:	mov    QWORD PTR [rbp-0x9],0xf
   14001e182:	mov    QWORD PTR [rbp-0x11],r14
   14001e186:	mov    BYTE PTR [rbp-0x21],0x0
   14001e18a:	cmp    QWORD PTR [rbp+0x17],0x10
   14001e18f:	jb     0x14001e19a
   14001e191:	mov    rcx,QWORD PTR [rbp-0x1]
   14001e195:	call   0x140030282
   14001e19a:	mov    QWORD PTR [rbp+0x17],0xf
   14001e1a2:	mov    QWORD PTR [rbp+0xf],r14
   14001e1a6:	mov    BYTE PTR [rbp-0x1],0x0
   14001e1aa:	mov    r8d,0x6
   14001e1b0:	lea    rdx,[rip+0x1e02d]        # 0x14003c1e4
   14001e1b7:	lea    rcx,[rbp-0x1]
   14001e1bb:	call   0x14001f070
   14001e1c0:	nop
   14001e1c1:	mov    QWORD PTR [rbp-0x9],0xf
   14001e1c9:	mov    QWORD PTR [rbp-0x11],r14
   14001e1cd:	mov    BYTE PTR [rbp-0x21],0x0
   14001e1d1:	mov    r8d,0xf
   14001e1d7:	lea    rdx,[rip+0x1e042]        # 0x14003c220
   14001e1de:	lea    rcx,[rbp-0x21]
   14001e1e2:	call   0x14001f070
   14001e1e7:	nop
   14001e1e8:	mov    QWORD PTR [rbp+0x37],0xf
   14001e1f0:	mov    QWORD PTR [rbp+0x2f],r14
   14001e1f4:	mov    BYTE PTR [rbp+0x1f],0x0
   14001e1f8:	or     r9,0xffffffffffffffff
   14001e1fc:	xor    r8d,r8d
   14001e1ff:	mov    rdx,rsi
   14001e202:	lea    rcx,[rbp+0x1f]
   14001e206:	call   0x14001ef20
   14001e20b:	mov    BYTE PTR [rsp+0x28],0x0
   14001e210:	mov    BYTE PTR [rsp+0x20],0x0
   14001e215:	lea    r9,[rbp+0x1f]
   14001e219:	lea    r8,[rbp-0x1]
   14001e21d:	lea    rdx,[rbp-0x21]
   14001e221:	mov    rcx,rdi
   14001e224:	call   0x140005e30
   14001e229:	nop
   14001e22a:	cmp    QWORD PTR [rbp-0x9],0x10
   14001e22f:	jb     0x14001e23a
   14001e231:	mov    rcx,QWORD PTR [rbp-0x21]
   14001e235:	call   0x140030282
   14001e23a:	mov    QWORD PTR [rbp-0x9],0xf
   14001e242:	mov    QWORD PTR [rbp-0x11],r14
   14001e246:	mov    BYTE PTR [rbp-0x21],0x0
   14001e24a:	cmp    QWORD PTR [rbp+0x17],0x10
   14001e24f:	jb     0x14001e25a
   14001e251:	mov    rcx,QWORD PTR [rbp-0x1]
   14001e255:	call   0x140030282
   14001e25a:	mov    QWORD PTR [rbp+0x17],0xf
   14001e262:	mov    QWORD PTR [rbp+0xf],r14
   14001e266:	mov    BYTE PTR [rbp-0x1],0x0
   14001e26a:	mov    r8d,0x4
   14001e270:	lea    rdx,[rip+0x1dfb9]        # 0x14003c230
   14001e277:	lea    rcx,[rbp-0x1]
   14001e27b:	call   0x14001f070
   14001e280:	nop
   14001e281:	mov    QWORD PTR [rbp-0x9],0xf
   14001e289:	mov    QWORD PTR [rbp-0x11],r14
   14001e28d:	mov    BYTE PTR [rbp-0x21],0x0
   14001e291:	mov    r8d,0x5
   14001e297:	lea    rdx,[rip+0x1df9a]        # 0x14003c238
   14001e29e:	lea    rcx,[rbp-0x21]
   14001e2a2:	call   0x14001f070
   14001e2a7:	nop
   14001e2a8:	mov    BYTE PTR [rsp+0x28],0x0
   14001e2ad:	mov    BYTE PTR [rsp+0x20],0x0
   14001e2b2:	movzx  r9d,BYTE PTR [rbp+0x77]
   14001e2b7:	lea    r8,[rbp-0x1]
   14001e2bb:	lea    rdx,[rbp-0x21]
   14001e2bf:	mov    rcx,rdi
   14001e2c2:	call   0x1400060c0
   14001e2c7:	nop
   14001e2c8:	cmp    QWORD PTR [rbp-0x9],0x10
   14001e2cd:	jb     0x14001e2d8
   14001e2cf:	mov    rcx,QWORD PTR [rbp-0x21]
   14001e2d3:	call   0x140030282
   14001e2d8:	mov    QWORD PTR [rbp-0x9],0xf
   14001e2e0:	mov    QWORD PTR [rbp-0x11],r14
   14001e2e4:	mov    BYTE PTR [rbp-0x21],0x0
   14001e2e8:	cmp    QWORD PTR [rbp+0x17],0x10
   14001e2ed:	jb     0x14001e2f8
   14001e2ef:	mov    rcx,QWORD PTR [rbp-0x1]
   14001e2f3:	call   0x140030282
   14001e2f8:	mov    QWORD PTR [rbp+0x17],0xf
   14001e300:	mov    QWORD PTR [rbp+0xf],r14
   14001e304:	mov    BYTE PTR [rbp-0x1],0x0
   14001e308:	mov    r8d,0x4
   14001e30e:	lea    rdx,[rip+0x1df1b]        # 0x14003c230
   14001e315:	lea    rcx,[rbp-0x1]
   14001e319:	call   0x14001f070
   14001e31e:	nop
   14001e31f:	mov    QWORD PTR [rbp-0x9],0xf
   14001e327:	mov    QWORD PTR [rbp-0x11],r14
   14001e32b:	mov    BYTE PTR [rbp-0x21],0x0
   14001e32f:	mov    r8d,0x6
   14001e335:	lea    rdx,[rip+0x1df04]        # 0x14003c240
   14001e33c:	lea    rcx,[rbp-0x21]
   14001e340:	call   0x14001f070
   14001e345:	nop
   14001e346:	mov    BYTE PTR [rsp+0x28],0x0
   14001e34b:	mov    BYTE PTR [rsp+0x20],0x0
   14001e350:	movzx  r9d,BYTE PTR [rbp+0x7f]
   14001e355:	lea    r8,[rbp-0x1]
   14001e359:	lea    rdx,[rbp-0x21]
   14001e35d:	mov    rcx,rdi
   14001e360:	call   0x1400060c0
   14001e365:	nop
   14001e366:	cmp    QWORD PTR [rbp-0x9],0x10
   14001e36b:	jb     0x14001e376
   14001e36d:	mov    rcx,QWORD PTR [rbp-0x21]
   14001e371:	call   0x140030282
   14001e376:	mov    QWORD PTR [rbp-0x9],0xf
   14001e37e:	mov    QWORD PTR [rbp-0x11],r14
   14001e382:	mov    BYTE PTR [rbp-0x21],0x0
   14001e386:	cmp    QWORD PTR [rbp+0x17],0x10
   14001e38b:	jb     0x14001e396
   14001e38d:	mov    rcx,QWORD PTR [rbp-0x1]
   14001e391:	call   0x140030282
   14001e396:	mov    QWORD PTR [rbp-0x9],0xf
   14001e39e:	mov    QWORD PTR [rbp-0x11],r14
   14001e3a2:	mov    BYTE PTR [rbp-0x21],0x0
   14001e3a6:	mov    r8d,0xb
   14001e3ac:	lea    rdx,[rip+0x1de95]        # 0x14003c248
   14001e3b3:	lea    rcx,[rbp-0x21]
   14001e3b7:	call   0x14001f070
   14001e3bc:	nop
   14001e3bd:	xor    r9d,r9d
   14001e3c0:	xor    r8d,r8d
   14001e3c3:	lea    rdx,[rbp-0x21]
   14001e3c7:	mov    rcx,rdi
   14001e3ca:	call   0x14001e4e0
   14001e3cf:	mov    rbx,rax
   14001e3d2:	cmp    QWORD PTR [rbp-0x9],0x10
   14001e3d7:	jb     0x14001e3e2
   14001e3d9:	mov    rcx,QWORD PTR [rbp-0x21]
   14001e3dd:	call   0x140030282
   14001e3e2:	mov    QWORD PTR [rbp-0x9],0xf
   14001e3ea:	mov    QWORD PTR [rbp-0x11],r14
   14001e3ee:	mov    BYTE PTR [rbp-0x21],0x0
   14001e3f2:	mov    QWORD PTR [rbp+0x37],0xf
   14001e3fa:	mov    QWORD PTR [rbp+0x2f],r14
   14001e3fe:	mov    BYTE PTR [rbp+0x1f],0x0
   14001e402:	mov    r8d,0x4
   14001e408:	lea    rdx,[rip+0x1de21]        # 0x14003c230
   14001e40f:	lea    rcx,[rbp+0x1f]
   14001e413:	call   0x14001f070
   14001e418:	nop
   14001e419:	mov    QWORD PTR [rbp+0x17],0xf
   14001e421:	mov    QWORD PTR [rbp+0xf],r14
   14001e425:	mov    BYTE PTR [rbp-0x1],0x0
   14001e429:	mov    r8d,0x7
   14001e42f:	lea    rdx,[rip+0x1de22]        # 0x14003c258
   14001e436:	lea    rcx,[rbp-0x1]
   14001e43a:	call   0x14001f070
   14001e43f:	nop
   14001e440:	mov    BYTE PTR [rsp+0x28],0x0
   14001e445:	mov    BYTE PTR [rsp+0x20],0x0
   14001e44a:	mov    r9d,0x1
   14001e450:	lea    r8,[rbp+0x1f]
   14001e454:	lea    rdx,[rbp-0x1]
   14001e458:	mov    rcx,rbx
   14001e45b:	call   0x140005bd0
   14001e460:	nop
   14001e461:	cmp    QWORD PTR [rbp+0x17],0x10
   14001e466:	jb     0x14001e471
   14001e468:	mov    rcx,QWORD PTR [rbp-0x1]
   14001e46c:	call   0x140030282
   14001e471:	mov    QWORD PTR [rbp+0x17],0xf
   14001e479:	mov    QWORD PTR [rbp+0xf],r14
   14001e47d:	mov    BYTE PTR [rbp-0x1],0x0
   14001e481:	cmp    QWORD PTR [rbp+0x37],0x10
   14001e486:	jb     0x14001e491
   14001e488:	mov    rcx,QWORD PTR [rbp+0x1f]
   14001e48c:	call   0x140030282
   14001e491:	lea    rdx,[rip+0x394a0]        # 0x140057938
   14001e498:	mov    rcx,rbx
   14001e49b:	call   0x14001dd50
   14001e4a0:	lea    r11,[rsp+0xa0]
   14001e4a8:	mov    rbx,QWORD PTR [r11+0x10]
   14001e4ac:	mov    rsi,QWORD PTR [r11+0x18]
   14001e4b0:	mov    rdi,QWORD PTR [r11+0x20]
   14001e4b4:	mov    r14,QWORD PTR [r11+0x28]
   14001e4b8:	mov    rsp,r11
   14001e4bb:	pop    rbp
   14001e4bc:	ret    
   14001e4bd:	int3   
   14001e4be:	int3   
   14001e4bf:	int3   
   14001e4c0:	mov    rcx,QWORD PTR [rcx]
   14001e4c3:	test   rcx,rcx
   14001e4c6:	je     0x14001e4cf
   14001e4c8:	mov    rax,QWORD PTR [rcx]
   14001e4cb:	rex.W jmp QWORD PTR [rax+0x18]
   14001e4cf:	ret    
   14001e4d0:	lock inc DWORD PTR [rcx+0x8]
   14001e4d4:	ret    
   14001e4d5:	int3   
   14001e4d6:	int3   
   14001e4d7:	int3   
   14001e4d8:	int3   
   14001e4d9:	int3   
   14001e4da:	int3   
   14001e4db:	int3   
   14001e4dc:	int3   
   14001e4dd:	int3   
   14001e4de:	int3   
   14001e4df:	int3   
   14001e4e0:	mov    rax,rsp
   14001e4e3:	mov    BYTE PTR [rax+0x20],r9b
   14001e4e7:	mov    BYTE PTR [rax+0x18],r8b
   14001e4eb:	push   rbp
   14001e4ec:	push   rsi
   14001e4ed:	push   rdi
   14001e4ee:	lea    rbp,[rax-0x5f]
   14001e4f2:	sub    rsp,0x90
   14001e4f9:	mov    QWORD PTR [rbp-0x29],0xfffffffffffffffe
   14001e501:	mov    QWORD PTR [rax+0x8],rbx
   14001e505:	mov    rdi,rdx
   14001e508:	mov    rbx,rcx
   14001e50b:	mov    QWORD PTR [rbp-0x9],0xf
   14001e513:	xor    esi,esi
   14001e515:	mov    QWORD PTR [rbp-0x11],rsi
   14001e519:	mov    BYTE PTR [rbp-0x21],sil
   14001e51d:	lea    r8d,[rsi+0x8]
   14001e521:	lea    rdx,[rip+0x1dbf8]        # 0x14003c120
   14001e528:	lea    rcx,[rbp-0x21]
   14001e52c:	call   0x14001f070
   14001e531:	mov    BYTE PTR [rbp-0x1],0x2e
   14001e535:	lea    rax,[rbp-0x21]
   14001e539:	cmp    QWORD PTR [rbp-0x9],0x10
   14001e53e:	cmovae rax,QWORD PTR [rbp-0x21]
   14001e543:	mov    QWORD PTR [rbp+0x7],rax
   14001e547:	lea    r8,[rip+0x1c11c]        # 0x14003a66a
   14001e54e:	lea    rdx,[rbp-0x21]
   14001e552:	mov    rcx,rbx
   14001e555:	call   0x140005a00
   14001e55a:	mov    rbx,rax
   14001e55d:	cmp    QWORD PTR [rbp-0x9],0x10
   14001e562:	jb     0x14001e56d
   14001e564:	mov    rcx,QWORD PTR [rbp-0x21]
   14001e568:	call   0x140030282
   14001e56d:	mov    QWORD PTR [rbp-0x9],0xf
   14001e575:	mov    QWORD PTR [rbp-0x11],rsi
   14001e579:	mov    BYTE PTR [rbp-0x21],0x0
   14001e57d:	mov    QWORD PTR [rbp+0x27],0xf
   14001e585:	mov    QWORD PTR [rbp+0x1f],rsi
   14001e589:	mov    BYTE PTR [rbp+0xf],0x0
   14001e58d:	mov    r8d,0xe
   14001e593:	lea    rdx,[rip+0x1db96]        # 0x14003c130
   14001e59a:	lea    rcx,[rbp+0xf]
   14001e59e:	call   0x14001f070
   14001e5a3:	mov    BYTE PTR [rbp+0x2f],0x2e
   14001e5a7:	lea    rax,[rbp+0xf]
   14001e5ab:	cmp    QWORD PTR [rbp+0x27],0x10
   14001e5b0:	cmovae rax,QWORD PTR [rbp+0xf]
   14001e5b5:	mov    QWORD PTR [rbp+0x37],rax
   14001e5b9:	xor    eax,eax
   14001e5bb:	movzx  r9d,al
   14001e5bf:	mov    r8,rdi
   14001e5c2:	lea    rdx,[rbp+0xf]
   14001e5c6:	mov    rcx,rbx
   14001e5c9:	call   0x14000be00
   14001e5ce:	nop
   14001e5cf:	cmp    QWORD PTR [rbp+0x27],0x10
   14001e5d4:	jb     0x14001e5df
   14001e5d6:	mov    rcx,QWORD PTR [rbp+0xf]
   14001e5da:	call   0x140030282
   14001e5df:	mov    QWORD PTR [rbp+0x27],0xf
   14001e5e7:	mov    QWORD PTR [rbp+0x1f],rsi
   14001e5eb:	mov    BYTE PTR [rbp+0xf],0x0
   14001e5ef:	mov    r8d,0x11
   14001e5f5:	lea    rdx,[rip+0x1db44]        # 0x14003c140
   14001e5fc:	lea    rcx,[rbp+0xf]
   14001e600:	call   0x14001f070
   14001e605:	mov    BYTE PTR [rbp+0x2f],0x2e
   14001e609:	lea    rax,[rbp+0xf]
   14001e60d:	cmp    QWORD PTR [rbp+0x27],0x10
   14001e612:	cmovae rax,QWORD PTR [rbp+0xf]
   14001e617:	mov    QWORD PTR [rbp+0x37],rax
   14001e61b:	lea    r8,[rbp+0x77]
   14001e61f:	lea    rdx,[rbp+0xf]
   14001e623:	mov    rcx,rbx
   14001e626:	call   0x14000bf00
   14001e62b:	nop
   14001e62c:	cmp    QWORD PTR [rbp+0x27],0x10
   14001e631:	jb     0x14001e63c
   14001e633:	mov    rcx,QWORD PTR [rbp+0xf]
   14001e637:	call   0x140030282
   14001e63c:	mov    QWORD PTR [rbp+0x27],0xf
   14001e644:	mov    QWORD PTR [rbp+0x1f],rsi
   14001e648:	mov    BYTE PTR [rbp+0xf],0x0
   14001e64c:	mov    r8d,0x12
   14001e652:	lea    rdx,[rip+0x1daff]        # 0x14003c158
   14001e659:	lea    rcx,[rbp+0xf]
   14001e65d:	call   0x14001f070
   14001e662:	mov    BYTE PTR [rbp+0x2f],0x2e
   14001e666:	lea    rax,[rbp+0xf]
   14001e66a:	cmp    QWORD PTR [rbp+0x27],0x10
   14001e66f:	cmovae rax,QWORD PTR [rbp+0xf]
   14001e674:	mov    QWORD PTR [rbp+0x37],rax
   14001e678:	lea    r8,[rbp+0x7f]
   14001e67c:	lea    rdx,[rbp+0xf]
   14001e680:	mov    rcx,rbx
   14001e683:	call   0x14000bf00
   14001e688:	nop
   14001e689:	cmp    QWORD PTR [rbp+0x27],0x10
   14001e68e:	jb     0x14001e699
   14001e690:	mov    rcx,QWORD PTR [rbp+0xf]
   14001e694:	call   0x140030282
   14001e699:	mov    rax,rbx
   14001e69c:	mov    rbx,QWORD PTR [rsp+0xb0]
   14001e6a4:	add    rsp,0x90
   14001e6ab:	pop    rdi
   14001e6ac:	pop    rsi
   14001e6ad:	pop    rbp
   14001e6ae:	ret    
   14001e6af:	int3   
   14001e6b0:	mov    rax,rcx
   14001e6b3:	ret    
   14001e6b4:	int3   
   14001e6b5:	int3   
   14001e6b6:	int3   
   14001e6b7:	int3   
   14001e6b8:	int3   
   14001e6b9:	int3   
   14001e6ba:	int3   
   14001e6bb:	int3   
   14001e6bc:	int3   
   14001e6bd:	int3   
   14001e6be:	int3   
   14001e6bf:	int3   
   14001e6c0:	mov    rax,rcx
   14001e6c3:	ret    
   14001e6c4:	int3   
   14001e6c5:	int3   
   14001e6c6:	int3   
   14001e6c7:	int3   
   14001e6c8:	int3   
   14001e6c9:	int3   
   14001e6ca:	int3   
   14001e6cb:	int3   
   14001e6cc:	int3   
   14001e6cd:	int3   
   14001e6ce:	int3   
   14001e6cf:	int3   
   14001e6d0:	mov    rax,rcx
   14001e6d3:	ret    
   14001e6d4:	int3   
   14001e6d5:	int3   
   14001e6d6:	int3   
   14001e6d7:	int3   
   14001e6d8:	int3   
   14001e6d9:	int3   
   14001e6da:	int3   
   14001e6db:	int3   
   14001e6dc:	int3   
   14001e6dd:	int3   
   14001e6de:	int3   
   14001e6df:	int3   
   14001e6e0:	mov    rax,rcx
   14001e6e3:	ret    
   14001e6e4:	int3   
   14001e6e5:	int3   
   14001e6e6:	int3   
   14001e6e7:	int3   
   14001e6e8:	int3   
   14001e6e9:	int3   
   14001e6ea:	int3   
   14001e6eb:	int3   
   14001e6ec:	int3   
   14001e6ed:	int3   
   14001e6ee:	int3   
   14001e6ef:	int3   
   14001e6f0:	mov    rax,rcx
   14001e6f3:	ret    
   14001e6f4:	int3   
   14001e6f5:	int3   
   14001e6f6:	int3   
   14001e6f7:	int3   
   14001e6f8:	int3   
   14001e6f9:	int3   
   14001e6fa:	int3   
   14001e6fb:	int3   
   14001e6fc:	int3   
   14001e6fd:	int3   
   14001e6fe:	int3   
   14001e6ff:	int3   
   14001e700:	mov    rax,rcx
   14001e703:	ret    
   14001e704:	int3   
   14001e705:	int3   
   14001e706:	int3   
   14001e707:	int3   
   14001e708:	int3   
   14001e709:	int3   
   14001e70a:	int3   
   14001e70b:	int3   
   14001e70c:	int3   
   14001e70d:	int3   
   14001e70e:	int3   
   14001e70f:	int3   
   14001e710:	mov    rax,rcx
   14001e713:	ret    
   14001e714:	int3   
   14001e715:	int3   
   14001e716:	int3   
   14001e717:	int3   
   14001e718:	int3   
   14001e719:	int3   
   14001e71a:	int3   
   14001e71b:	int3   
   14001e71c:	int3   
   14001e71d:	int3   
   14001e71e:	int3   
   14001e71f:	int3   
   14001e720:	mov    QWORD PTR [rsp+0x8],rbx
   14001e725:	push   rdi
   14001e726:	sub    rsp,0x20
   14001e72a:	mov    rdi,rcx
   14001e72d:	mov    rcx,QWORD PTR [rcx]
   14001e730:	mov    rbx,rdx
   14001e733:	test   rcx,rcx
   14001e736:	je     0x14001e749
   14001e738:	mov    rax,QWORD PTR [rcx]
   14001e73b:	call   QWORD PTR [rax+0x20]
   14001e73e:	test   al,al
   14001e740:	je     0x14001e749
   14001e742:	mov    QWORD PTR [rdi],0x0
   14001e749:	mov    QWORD PTR [rdi],rbx
   14001e74c:	test   rbx,rbx
   14001e74f:	je     0x14001e75a
   14001e751:	mov    rax,QWORD PTR [rbx]
   14001e754:	mov    rcx,rbx
   14001e757:	call   QWORD PTR [rax+0x18]
   14001e75a:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e75f:	add    rsp,0x20
   14001e763:	pop    rdi
   14001e764:	ret    
   14001e765:	int3   
   14001e766:	int3   
   14001e767:	int3   
   14001e768:	int3   
   14001e769:	int3   
   14001e76a:	int3   
   14001e76b:	int3   
   14001e76c:	int3   
   14001e76d:	int3   
   14001e76e:	int3   
   14001e76f:	int3   
   14001e770:	sub    rsp,0x28
   14001e774:	xor    eax,eax
   14001e776:	test   rdx,rdx
   14001e779:	je     0x14001e795
   14001e77b:	cmp    rdx,0xffffffffffffffff
   14001e77f:	ja     0x14001e78e
   14001e781:	mov    rcx,rdx
   14001e784:	call   0x14003027c
   14001e789:	test   rax,rax
   14001e78c:	jne    0x14001e795
   14001e78e:	call   QWORD PTR [rip+0x17a84]        # 0x140036218
   14001e794:	int3   
   14001e795:	add    rsp,0x28
   14001e799:	ret    
   14001e79a:	int3   
   14001e79b:	int3   
   14001e79c:	int3   
   14001e79d:	int3   
   14001e79e:	int3   
   14001e79f:	int3   
   14001e7a0:	sub    rsp,0x28
   14001e7a4:	xor    eax,eax
   14001e7a6:	test   rdx,rdx
   14001e7a9:	je     0x14001e7d3
   14001e7ab:	movabs rax,0xaaaaaaaaaaaaaaa
   14001e7b5:	cmp    rdx,rax
   14001e7b8:	ja     0x14001e7cc
   14001e7ba:	lea    rcx,[rdx+rdx*2]
   14001e7be:	shl    rcx,0x3
   14001e7c2:	call   0x14003027c
   14001e7c7:	test   rax,rax
   14001e7ca:	jne    0x14001e7d3
   14001e7cc:	call   QWORD PTR [rip+0x17a46]        # 0x140036218
   14001e7d2:	int3   
   14001e7d3:	add    rsp,0x28
   14001e7d7:	ret    
   14001e7d8:	int3   
   14001e7d9:	int3   
   14001e7da:	int3   
   14001e7db:	int3   
   14001e7dc:	int3   
   14001e7dd:	int3   
   14001e7de:	int3   
   14001e7df:	int3   
   14001e7e0:	sub    rsp,0x28
   14001e7e4:	xor    eax,eax
   14001e7e6:	test   rdx,rdx
   14001e7e9:	je     0x14001e813
   14001e7eb:	movabs rax,0x555555555555555
   14001e7f5:	cmp    rdx,rax
   14001e7f8:	ja     0x14001e80c
   14001e7fa:	lea    rcx,[rdx+rdx*2]
   14001e7fe:	shl    rcx,0x4
   14001e802:	call   0x14003027c
   14001e807:	test   rax,rax
   14001e80a:	jne    0x14001e813
   14001e80c:	call   QWORD PTR [rip+0x17a06]        # 0x140036218
   14001e812:	int3   
   14001e813:	add    rsp,0x28
   14001e817:	ret    
   14001e818:	int3   
   14001e819:	int3   
   14001e81a:	int3   
   14001e81b:	int3   
   14001e81c:	int3   
   14001e81d:	int3   
   14001e81e:	int3   
   14001e81f:	int3   
   14001e820:	sub    rsp,0x28
   14001e824:	xor    eax,eax
   14001e826:	test   rdx,rdx
   14001e829:	je     0x14001e853
   14001e82b:	movabs rax,0x2aaaaaaaaaaaaaa
   14001e835:	cmp    rdx,rax
   14001e838:	ja     0x14001e84c
   14001e83a:	lea    rcx,[rdx+rdx*2]
   14001e83e:	shl    rcx,0x5
   14001e842:	call   0x14003027c
   14001e847:	test   rax,rax
   14001e84a:	jne    0x14001e853
   14001e84c:	call   QWORD PTR [rip+0x179c6]        # 0x140036218
   14001e852:	int3   
   14001e853:	add    rsp,0x28
   14001e857:	ret    
   14001e858:	int3   
   14001e859:	int3   
   14001e85a:	int3   
   14001e85b:	int3   
   14001e85c:	int3   
   14001e85d:	int3   
   14001e85e:	int3   
   14001e85f:	int3   
   14001e860:	sub    rsp,0x28
   14001e864:	xor    eax,eax
   14001e866:	test   rdx,rdx
   14001e869:	je     0x14001e892
   14001e86b:	movabs rax,0x7ffffffffffffff
   14001e875:	cmp    rdx,rax
   14001e878:	ja     0x14001e88b
   14001e87a:	shl    rdx,0x5
   14001e87e:	mov    rcx,rdx
   14001e881:	call   0x14003027c
   14001e886:	test   rax,rax
   14001e889:	jne    0x14001e892
   14001e88b:	call   QWORD PTR [rip+0x17987]        # 0x140036218
   14001e891:	int3   
   14001e892:	add    rsp,0x28
   14001e896:	ret    
   14001e897:	int3   
   14001e898:	int3   
   14001e899:	int3   
   14001e89a:	int3   
   14001e89b:	int3   
   14001e89c:	int3   
   14001e89d:	int3   
   14001e89e:	int3   
   14001e89f:	int3   
   14001e8a0:	sub    rsp,0x28
   14001e8a4:	xor    eax,eax
   14001e8a6:	test   rdx,rdx
   14001e8a9:	je     0x14001e8c5
   14001e8ab:	cmp    rdx,0xffffffffffffffff
   14001e8af:	ja     0x14001e8be
   14001e8b1:	mov    rcx,rdx
   14001e8b4:	call   0x14003027c
   14001e8b9:	test   rax,rax
   14001e8bc:	jne    0x14001e8c5
   14001e8be:	call   QWORD PTR [rip+0x17954]        # 0x140036218
   14001e8c4:	int3   
   14001e8c5:	add    rsp,0x28
   14001e8c9:	ret    
   14001e8ca:	int3   
   14001e8cb:	int3   
   14001e8cc:	int3   
   14001e8cd:	int3   
   14001e8ce:	int3   
   14001e8cf:	int3   
   14001e8d0:	sub    rsp,0x28
   14001e8d4:	xor    eax,eax
   14001e8d6:	test   rdx,rdx
   14001e8d9:	je     0x14001e8f5
   14001e8db:	cmp    rdx,0xffffffffffffffff
   14001e8df:	ja     0x14001e8ee
   14001e8e1:	mov    rcx,rdx
   14001e8e4:	call   0x14003027c
   14001e8e9:	test   rax,rax
   14001e8ec:	jne    0x14001e8f5
   14001e8ee:	call   QWORD PTR [rip+0x17924]        # 0x140036218
   14001e8f4:	int3   
   14001e8f5:	add    rsp,0x28
   14001e8f9:	ret    
   14001e8fa:	int3   
   14001e8fb:	int3   
   14001e8fc:	int3   
   14001e8fd:	int3   
   14001e8fe:	int3   
   14001e8ff:	int3   
   14001e900:	sub    rsp,0x28
   14001e904:	xor    eax,eax
   14001e906:	test   rdx,rdx
   14001e909:	je     0x14001e933
   14001e90b:	movabs rax,0xaaaaaaaaaaaaaaa
   14001e915:	cmp    rdx,rax
   14001e918:	ja     0x14001e92c
   14001e91a:	lea    rcx,[rdx+rdx*2]
   14001e91e:	shl    rcx,0x3
   14001e922:	call   0x14003027c
   14001e927:	test   rax,rax
   14001e92a:	jne    0x14001e933
   14001e92c:	call   QWORD PTR [rip+0x178e6]        # 0x140036218
   14001e932:	int3   
   14001e933:	add    rsp,0x28
   14001e937:	ret    
   14001e938:	int3   
   14001e939:	int3   
   14001e93a:	int3   
   14001e93b:	int3   
   14001e93c:	int3   
   14001e93d:	int3   
   14001e93e:	int3   
   14001e93f:	int3   
   14001e940:	sub    rsp,0x28
   14001e944:	xor    eax,eax
   14001e946:	test   rdx,rdx
   14001e949:	je     0x14001e973
   14001e94b:	movabs rax,0x555555555555555
   14001e955:	cmp    rdx,rax
   14001e958:	ja     0x14001e96c
   14001e95a:	lea    rcx,[rdx+rdx*2]
   14001e95e:	shl    rcx,0x4
   14001e962:	call   0x14003027c
   14001e967:	test   rax,rax
   14001e96a:	jne    0x14001e973
   14001e96c:	call   QWORD PTR [rip+0x178a6]        # 0x140036218
   14001e972:	int3   
   14001e973:	add    rsp,0x28
   14001e977:	ret    
   14001e978:	int3   
   14001e979:	int3   
   14001e97a:	int3   
   14001e97b:	int3   
   14001e97c:	int3   
   14001e97d:	int3   
   14001e97e:	int3   
   14001e97f:	int3   
   14001e980:	sub    rsp,0x28
   14001e984:	xor    eax,eax
   14001e986:	test   rdx,rdx
   14001e989:	je     0x14001e9b2
   14001e98b:	movabs rax,0xfffffffffffffff
   14001e995:	cmp    rdx,rax
   14001e998:	ja     0x14001e9ab
   14001e99a:	shl    rdx,0x4
   14001e99e:	mov    rcx,rdx
   14001e9a1:	call   0x14003027c
   14001e9a6:	test   rax,rax
   14001e9a9:	jne    0x14001e9b2
   14001e9ab:	call   QWORD PTR [rip+0x17867]        # 0x140036218
   14001e9b1:	int3   
   14001e9b2:	add    rsp,0x28
   14001e9b6:	ret    
   14001e9b7:	int3   
   14001e9b8:	int3   
   14001e9b9:	int3   
   14001e9ba:	int3   
   14001e9bb:	int3   
   14001e9bc:	int3   
   14001e9bd:	int3   
   14001e9be:	int3   
   14001e9bf:	int3   
   14001e9c0:	sub    rsp,0x28
   14001e9c4:	xor    eax,eax
   14001e9c6:	test   rdx,rdx
   14001e9c9:	je     0x14001e9ef
   14001e9cb:	movabs rax,0x249249249249249
   14001e9d5:	cmp    rdx,rax
   14001e9d8:	ja     0x14001e9e8
   14001e9da:	imul   rcx,rdx,0x70
   14001e9de:	call   0x14003027c
   14001e9e3:	test   rax,rax
   14001e9e6:	jne    0x14001e9ef
   14001e9e8:	call   QWORD PTR [rip+0x1782a]        # 0x140036218
   14001e9ee:	int3   
   14001e9ef:	add    rsp,0x28
   14001e9f3:	ret    
   14001e9f4:	int3   
   14001e9f5:	int3   
   14001e9f6:	int3   
   14001e9f7:	int3   
   14001e9f8:	int3   
   14001e9f9:	int3   
   14001e9fa:	int3   
   14001e9fb:	int3   
   14001e9fc:	int3   
   14001e9fd:	int3   
   14001e9fe:	int3   
   14001e9ff:	int3   
   14001ea00:	sub    rsp,0x28
   14001ea04:	xor    eax,eax
   14001ea06:	test   rdx,rdx
   14001ea09:	je     0x14001ea33
   14001ea0b:	movabs rax,0x2aaaaaaaaaaaaaa
   14001ea15:	cmp    rdx,rax
   14001ea18:	ja     0x14001ea2c
   14001ea1a:	lea    rcx,[rdx+rdx*2]
   14001ea1e:	shl    rcx,0x5
   14001ea22:	call   0x14003027c
   14001ea27:	test   rax,rax
   14001ea2a:	jne    0x14001ea33
   14001ea2c:	call   QWORD PTR [rip+0x177e6]        # 0x140036218
   14001ea32:	int3   
   14001ea33:	add    rsp,0x28
   14001ea37:	ret    
   14001ea38:	int3   
   14001ea39:	int3   
   14001ea3a:	int3   
   14001ea3b:	int3   
   14001ea3c:	int3   
   14001ea3d:	int3   
   14001ea3e:	int3   
   14001ea3f:	int3   
   14001ea40:	sub    rsp,0x28
   14001ea44:	xor    eax,eax
   14001ea46:	test   rdx,rdx
   14001ea49:	je     0x14001ea72
   14001ea4b:	movabs rax,0x7ffffffffffffff
   14001ea55:	cmp    rdx,rax
   14001ea58:	ja     0x14001ea6b
   14001ea5a:	shl    rdx,0x5
   14001ea5e:	mov    rcx,rdx
   14001ea61:	call   0x14003027c
   14001ea66:	test   rax,rax
   14001ea69:	jne    0x14001ea72
   14001ea6b:	call   QWORD PTR [rip+0x177a7]        # 0x140036218
   14001ea71:	int3   
   14001ea72:	add    rsp,0x28
   14001ea76:	ret    
   14001ea77:	int3   
   14001ea78:	int3   
   14001ea79:	int3   
   14001ea7a:	int3   
   14001ea7b:	int3   
   14001ea7c:	int3   
   14001ea7d:	int3   
   14001ea7e:	int3   
   14001ea7f:	int3   
   14001ea80:	rex push rbx
   14001ea82:	sub    rsp,0x20
   14001ea86:	imul   edx,r8d
   14001ea8a:	xor    eax,eax
   14001ea8c:	mov    ebx,edx
   14001ea8e:	lea    rcx,[rdx+0x8]
   14001ea92:	test   rcx,rcx
   14001ea95:	je     0x14001eaae
   14001ea97:	cmp    rcx,0xffffffffffffffff
   14001ea9b:	ja     0x14001eaa7
   14001ea9d:	call   0x14003027c
   14001eaa2:	test   rax,rax
   14001eaa5:	jne    0x14001eaae
   14001eaa7:	call   QWORD PTR [rip+0x1776b]        # 0x140036218
   14001eaad:	int3   
   14001eaae:	mov    QWORD PTR [rax],rbx
   14001eab1:	add    rax,0x8
   14001eab5:	add    rsp,0x20
   14001eab9:	pop    rbx
   14001eaba:	ret    
   14001eabb:	int3   
   14001eabc:	int3   
   14001eabd:	int3   
   14001eabe:	int3   
   14001eabf:	int3   
   14001eac0:	sub    rsp,0x28
   14001eac4:	mov    ecx,0x70
   14001eac9:	call   0x14003027c
   14001eace:	test   rax,rax
   14001ead1:	jne    0x14001eada
   14001ead3:	call   QWORD PTR [rip+0x1773f]        # 0x140036218
   14001ead9:	int3   
   14001eada:	add    rsp,0x28
   14001eade:	ret    
   14001eadf:	int3   
   14001eae0:	or     r9,0xffffffffffffffff
   14001eae4:	xor    r8d,r8d
   14001eae7:	jmp    0x14001eaf0
   14001eaec:	int3   
   14001eaed:	int3   
   14001eaee:	int3   
   14001eaef:	int3   
   14001eaf0:	mov    QWORD PTR [rsp+0x10],rbx
   14001eaf5:	mov    QWORD PTR [rsp+0x18],rbp
   14001eafa:	mov    QWORD PTR [rsp+0x20],rsi
   14001eaff:	push   r14
   14001eb01:	sub    rsp,0x20
   14001eb05:	mov    rax,QWORD PTR [rdx+0x10]
   14001eb09:	mov    rsi,r9
   14001eb0c:	mov    rbp,r8
   14001eb0f:	mov    r14,rdx
   14001eb12:	mov    rbx,rcx
   14001eb15:	cmp    rax,r8
   14001eb18:	jae    0x14001eb28
   14001eb1a:	lea    rcx,[rip+0x1de07]        # 0x14003c928
   14001eb21:	call   QWORD PTR [rip+0x17701]        # 0x140036228
   14001eb27:	int3   
   14001eb28:	sub    rax,r8
   14001eb2b:	mov    r8,QWORD PTR [rcx+0x10]
   14001eb2f:	cmp    rax,r9
   14001eb32:	cmovb  rsi,rax
   14001eb36:	or     rax,0xffffffffffffffff
   14001eb3a:	sub    rax,r8
   14001eb3d:	cmp    rax,rsi
   14001eb40:	ja     0x14001eb50
   14001eb42:	lea    rcx,[rip+0x1ddcf]        # 0x14003c918
   14001eb49:	call   QWORD PTR [rip+0x176d1]        # 0x140036220
   14001eb4f:	int3   
   14001eb50:	mov    QWORD PTR [rsp+0x30],rdi
   14001eb55:	test   rsi,rsi
   14001eb58:	je     0x14001ebf0
   14001eb5e:	lea    rdi,[r8+rsi*1]
   14001eb62:	cmp    rdi,0xfffffffffffffffe
   14001eb66:	jbe    0x14001eb76
   14001eb68:	lea    rcx,[rip+0x1dda9]        # 0x14003c918
   14001eb6f:	call   QWORD PTR [rip+0x176ab]        # 0x140036220
   14001eb75:	int3   
   14001eb76:	mov    rax,QWORD PTR [rcx+0x18]
   14001eb7a:	cmp    rax,rdi
   14001eb7d:	jae    0x14001eba2
   14001eb7f:	mov    rdx,rdi
   14001eb82:	call   0x14001c600
   14001eb87:	test   rdi,rdi
   14001eb8a:	je     0x14001ebf0
   14001eb8c:	cmp    QWORD PTR [r14+0x18],0x10
   14001eb91:	jb     0x14001eb96
   14001eb93:	mov    r14,QWORD PTR [r14]
   14001eb96:	cmp    QWORD PTR [rbx+0x18],0x10
   14001eb9b:	jb     0x14001ebc1
   14001eb9d:	mov    rcx,QWORD PTR [rbx]
   14001eba0:	jmp    0x14001ebc4
   14001eba2:	test   rdi,rdi
   14001eba5:	jne    0x14001eb8c
   14001eba7:	mov    QWORD PTR [rcx+0x10],rdi
   14001ebab:	cmp    rax,0x10
   14001ebaf:	jb     0x14001ebb9
   14001ebb1:	mov    rax,QWORD PTR [rcx]
   14001ebb4:	mov    BYTE PTR [rax],dil
   14001ebb7:	jmp    0x14001ebf0
   14001ebb9:	mov    rax,rcx
   14001ebbc:	mov    BYTE PTR [rcx],0x0
   14001ebbf:	jmp    0x14001ebf0
   14001ebc1:	mov    rcx,rbx
   14001ebc4:	test   rsi,rsi
   14001ebc7:	je     0x14001ebd9
   14001ebc9:	add    rcx,QWORD PTR [rbx+0x10]
   14001ebcd:	lea    rdx,[r14+rbp*1]
   14001ebd1:	mov    r8,rsi
   14001ebd4:	call   0x14003048a
   14001ebd9:	cmp    QWORD PTR [rbx+0x18],0x10
   14001ebde:	mov    QWORD PTR [rbx+0x10],rdi
   14001ebe2:	jb     0x14001ebe9
   14001ebe4:	mov    rax,QWORD PTR [rbx]
   14001ebe7:	jmp    0x14001ebec
   14001ebe9:	mov    rax,rbx
   14001ebec:	mov    BYTE PTR [rax+rdi*1],0x0
   14001ebf0:	mov    rdi,QWORD PTR [rsp+0x30]
   14001ebf5:	mov    rbp,QWORD PTR [rsp+0x40]
   14001ebfa:	mov    rsi,QWORD PTR [rsp+0x48]
   14001ebff:	mov    rax,rbx
   14001ec02:	mov    rbx,QWORD PTR [rsp+0x38]
   14001ec07:	add    rsp,0x20
   14001ec0b:	pop    r14
   14001ec0d:	ret    
   14001ec0e:	int3   
   14001ec0f:	int3   
   14001ec10:	cmp    BYTE PTR [rdx],0x0
   14001ec13:	jne    0x14001ec1d
   14001ec15:	xor    r8d,r8d
   14001ec18:	jmp    0x14001ec30
   14001ec1d:	or     r8,0xffffffffffffffff
   14001ec21:	inc    r8
   14001ec24:	cmp    BYTE PTR [rdx+r8*1],0x0
   14001ec29:	jne    0x14001ec21
   14001ec2b:	jmp    0x14001ec30
   14001ec30:	mov    QWORD PTR [rsp+0x10],rbx
   14001ec35:	mov    QWORD PTR [rsp+0x18],rbp
   14001ec3a:	push   rsi
   14001ec3b:	sub    rsp,0x20
   14001ec3f:	mov    rsi,r8
   14001ec42:	mov    rbp,rdx
   14001ec45:	mov    rbx,rcx
   14001ec48:	test   rdx,rdx
   14001ec4b:	je     0x14001eca7
   14001ec4d:	mov    r8,QWORD PTR [rcx+0x18]
   14001ec51:	cmp    r8,0x10
   14001ec55:	jb     0x14001ec5c
   14001ec57:	mov    rax,QWORD PTR [rcx]
   14001ec5a:	jmp    0x14001ec5f
   14001ec5c:	mov    rax,rcx
   14001ec5f:	cmp    rdx,rax
   14001ec62:	jb     0x14001eca7
   14001ec64:	cmp    r8,0x10
   14001ec68:	jb     0x14001ec6d
   14001ec6a:	mov    rcx,QWORD PTR [rcx]
   14001ec6d:	add    rcx,QWORD PTR [rbx+0x10]
   14001ec71:	cmp    rcx,rdx
   14001ec74:	jbe    0x14001eca7
   14001ec76:	cmp    r8,0x10
   14001ec7a:	jb     0x14001ec81
   14001ec7c:	mov    rax,QWORD PTR [rbx]
   14001ec7f:	jmp    0x14001ec84
   14001ec81:	mov    rax,rbx
   14001ec84:	sub    rbp,rax
   14001ec87:	mov    r9,rsi
   14001ec8a:	mov    rdx,rbx
   14001ec8d:	mov    r8,rbp
   14001ec90:	mov    rcx,rbx
   14001ec93:	mov    rbx,QWORD PTR [rsp+0x38]
   14001ec98:	mov    rbp,QWORD PTR [rsp+0x40]
   14001ec9d:	add    rsp,0x20
   14001eca1:	pop    rsi
   14001eca2:	jmp    0x14001eaf0
   14001eca7:	mov    r8,QWORD PTR [rbx+0x10]
   14001ecab:	or     rax,0xffffffffffffffff
   14001ecaf:	sub    rax,r8
   14001ecb2:	cmp    rax,rsi
   14001ecb5:	ja     0x14001ecc5
   14001ecb7:	lea    rcx,[rip+0x1dc5a]        # 0x14003c918
   14001ecbe:	call   QWORD PTR [rip+0x1755c]        # 0x140036220
   14001ecc4:	int3   
   14001ecc5:	mov    QWORD PTR [rsp+0x30],rdi
   14001ecca:	test   rsi,rsi
   14001eccd:	je     0x14001ed5d
   14001ecd3:	lea    rdi,[r8+rsi*1]
   14001ecd7:	cmp    rdi,0xfffffffffffffffe
   14001ecdb:	jbe    0x14001eceb
   14001ecdd:	lea    rcx,[rip+0x1dc34]        # 0x14003c918
   14001ece4:	call   QWORD PTR [rip+0x17536]        # 0x140036220
   14001ecea:	int3   
   14001eceb:	mov    rax,QWORD PTR [rbx+0x18]
   14001ecef:	cmp    rax,rdi
   14001ecf2:	jae    0x14001ed10
   14001ecf4:	mov    rdx,rdi
   14001ecf7:	mov    rcx,rbx
   14001ecfa:	call   0x14001c600
   14001ecff:	test   rdi,rdi
   14001ed02:	je     0x14001ed5d
   14001ed04:	cmp    QWORD PTR [rbx+0x18],0x10
   14001ed09:	jb     0x14001ed2f
   14001ed0b:	mov    rcx,QWORD PTR [rbx]
   14001ed0e:	jmp    0x14001ed32
   14001ed10:	test   rdi,rdi
   14001ed13:	jne    0x14001ed04
   14001ed15:	mov    QWORD PTR [rbx+0x10],rdi
   14001ed19:	cmp    rax,0x10
   14001ed1d:	jb     0x14001ed27
   14001ed1f:	mov    rax,QWORD PTR [rbx]
   14001ed22:	mov    BYTE PTR [rax],dil
   14001ed25:	jmp    0x14001ed5d
   14001ed27:	mov    rax,rbx
   14001ed2a:	mov    BYTE PTR [rbx],0x0
   14001ed2d:	jmp    0x14001ed5d
   14001ed2f:	mov    rcx,rbx
   14001ed32:	test   rsi,rsi
   14001ed35:	je     0x14001ed46
   14001ed37:	add    rcx,QWORD PTR [rbx+0x10]
   14001ed3b:	mov    r8,rsi
   14001ed3e:	mov    rdx,rbp
   14001ed41:	call   0x14003048a
   14001ed46:	cmp    QWORD PTR [rbx+0x18],0x10
   14001ed4b:	mov    QWORD PTR [rbx+0x10],rdi
   14001ed4f:	jb     0x14001ed56
   14001ed51:	mov    rax,QWORD PTR [rbx]
   14001ed54:	jmp    0x14001ed59
   14001ed56:	mov    rax,rbx
   14001ed59:	mov    BYTE PTR [rax+rdi*1],0x0
   14001ed5d:	mov    rdi,QWORD PTR [rsp+0x30]
   14001ed62:	mov    rbp,QWORD PTR [rsp+0x40]
   14001ed67:	mov    rax,rbx
   14001ed6a:	mov    rbx,QWORD PTR [rsp+0x38]
   14001ed6f:	add    rsp,0x20
   14001ed73:	pop    rsi
   14001ed74:	ret    
   14001ed75:	int3   
   14001ed76:	int3   
   14001ed77:	int3   
   14001ed78:	int3   
   14001ed79:	int3   
   14001ed7a:	int3   
   14001ed7b:	int3   
   14001ed7c:	int3   
   14001ed7d:	int3   
   14001ed7e:	int3   
   14001ed7f:	int3   
   14001ed80:	mov    QWORD PTR [rsp+0x10],rbx
   14001ed85:	mov    QWORD PTR [rsp+0x18],rbp
   14001ed8a:	push   rsi
   14001ed8b:	sub    rsp,0x20
   14001ed8f:	or     rax,0xffffffffffffffff
   14001ed93:	movzx  ebp,r8b
   14001ed97:	mov    r8,QWORD PTR [rcx+0x10]
   14001ed9b:	sub    rax,r8
   14001ed9e:	mov    rsi,rdx
   14001eda1:	mov    rbx,rcx
   14001eda4:	cmp    rax,rdx
   14001eda7:	ja     0x14001edb7
   14001eda9:	lea    rcx,[rip+0x1db68]        # 0x14003c918
   14001edb0:	call   QWORD PTR [rip+0x1746a]        # 0x140036220
   14001edb6:	int3   
   14001edb7:	mov    QWORD PTR [rsp+0x30],rdi
   14001edbc:	test   rdx,rdx
   14001edbf:	je     0x14001ee6a
   14001edc5:	lea    rdi,[r8+rdx*1]
   14001edc9:	cmp    rdi,0xfffffffffffffffe
   14001edcd:	jbe    0x14001eddd
   14001edcf:	lea    rcx,[rip+0x1db42]        # 0x14003c918
   14001edd6:	call   QWORD PTR [rip+0x17444]        # 0x140036220
   14001eddc:	int3   
   14001eddd:	mov    rax,QWORD PTR [rcx+0x18]
   14001ede1:	cmp    rax,rdi
   14001ede4:	jae    0x14001ee0d
   14001ede6:	mov    rdx,rdi
   14001ede9:	call   0x14001c600
   14001edee:	test   rdi,rdi
   14001edf1:	je     0x14001ee6a
   14001edf3:	mov    rcx,QWORD PTR [rbx+0x10]
   14001edf7:	cmp    rsi,0x1
   14001edfb:	jne    0x14001ee35
   14001edfd:	cmp    QWORD PTR [rbx+0x18],0x10
   14001ee02:	jb     0x14001ee2c
   14001ee04:	mov    rax,QWORD PTR [rbx]
   14001ee07:	mov    BYTE PTR [rax+rcx*1],bpl
   14001ee0b:	jmp    0x14001ee53
   14001ee0d:	test   rdi,rdi
   14001ee10:	jne    0x14001edf3
   14001ee12:	mov    QWORD PTR [rcx+0x10],rdi
   14001ee16:	cmp    rax,0x10
   14001ee1a:	jb     0x14001ee24
   14001ee1c:	mov    rax,QWORD PTR [rcx]
   14001ee1f:	mov    BYTE PTR [rax],dil
   14001ee22:	jmp    0x14001ee6a
   14001ee24:	mov    rax,rcx
   14001ee27:	mov    BYTE PTR [rcx],0x0
   14001ee2a:	jmp    0x14001ee6a
   14001ee2c:	mov    rax,rbx
   14001ee2f:	mov    BYTE PTR [rbx+rcx*1],bpl
   14001ee33:	jmp    0x14001ee53
   14001ee35:	cmp    QWORD PTR [rbx+0x18],0x10
   14001ee3a:	jb     0x14001ee41
   14001ee3c:	mov    rax,QWORD PTR [rbx]
   14001ee3f:	jmp    0x14001ee44
   14001ee41:	mov    rax,rbx
   14001ee44:	movsx  edx,bpl
   14001ee48:	add    rcx,rax
   14001ee4b:	mov    r8,rsi
   14001ee4e:	call   0x140030490
   14001ee53:	cmp    QWORD PTR [rbx+0x18],0x10
   14001ee58:	mov    QWORD PTR [rbx+0x10],rdi
   14001ee5c:	jb     0x14001ee63
   14001ee5e:	mov    rax,QWORD PTR [rbx]
   14001ee61:	jmp    0x14001ee66
   14001ee63:	mov    rax,rbx
   14001ee66:	mov    BYTE PTR [rax+rdi*1],0x0
   14001ee6a:	mov    rdi,QWORD PTR [rsp+0x30]
   14001ee6f:	mov    rbp,QWORD PTR [rsp+0x40]
   14001ee74:	mov    rax,rbx
   14001ee77:	mov    rbx,QWORD PTR [rsp+0x38]
   14001ee7c:	add    rsp,0x20
   14001ee80:	pop    rsi
   14001ee81:	ret    
   14001ee82:	int3   
   14001ee83:	int3   
   14001ee84:	int3   
   14001ee85:	int3   
   14001ee86:	int3   
   14001ee87:	int3   
   14001ee88:	int3   
   14001ee89:	int3   
   14001ee8a:	int3   
   14001ee8b:	int3   
   14001ee8c:	int3   
   14001ee8d:	int3   
   14001ee8e:	int3   
   14001ee8f:	int3   
   14001ee90:	mov    rax,rcx
   14001ee93:	ret    
   14001ee94:	int3   
   14001ee95:	int3   
   14001ee96:	int3   
   14001ee97:	int3   
   14001ee98:	int3   
   14001ee99:	int3   
   14001ee9a:	int3   
   14001ee9b:	int3   
   14001ee9c:	int3   
   14001ee9d:	int3   
   14001ee9e:	int3   
   14001ee9f:	int3   
   14001eea0:	mov    rax,rcx
   14001eea3:	ret    
   14001eea4:	int3   
   14001eea5:	int3   
   14001eea6:	int3   
   14001eea7:	int3   
   14001eea8:	int3   
   14001eea9:	int3   
   14001eeaa:	int3   
   14001eeab:	int3   
   14001eeac:	int3   
   14001eead:	int3   
   14001eeae:	int3   
   14001eeaf:	int3   
   14001eeb0:	rex push rbx
   14001eeb2:	sub    rsp,0x20
   14001eeb6:	cmp    QWORD PTR [rcx+0x38],0x0
   14001eebb:	mov    rbx,rdx
   14001eebe:	jne    0x14001eec8
   14001eec0:	xor    al,al
   14001eec2:	add    rsp,0x20
   14001eec6:	pop    rbx
   14001eec7:	ret    
   14001eec8:	mov    rcx,QWORD PTR [rcx+0x38]
   14001eecc:	test   rcx,rcx
   14001eecf:	je     0x14001eed9
   14001eed1:	mov    rax,QWORD PTR [rcx]
   14001eed4:	call   QWORD PTR [rax+0x10]
   14001eed7:	jmp    0x14001eedb
   14001eed9:	xor    eax,eax
   14001eedb:	mov    rcx,QWORD PTR [rbx]
   14001eede:	mov    QWORD PTR [rbx],rax
   14001eee1:	test   rcx,rcx
   14001eee4:	je     0x14001eef0
   14001eee6:	mov    rax,QWORD PTR [rcx]
   14001eee9:	mov    edx,0x1
   14001eeee:	call   QWORD PTR [rax]
   14001eef0:	mov    al,0x1
   14001eef2:	add    rsp,0x20
   14001eef6:	pop    rbx
   14001eef7:	ret    
   14001eef8:	int3   
   14001eef9:	int3   
   14001eefa:	int3   
   14001eefb:	int3   
   14001eefc:	int3   
   14001eefd:	int3   
   14001eefe:	int3   
   14001eeff:	int3   
   14001ef00:	mov    eax,DWORD PTR [rcx]
   14001ef02:	ret    
   14001ef03:	int3   
   14001ef04:	int3   
   14001ef05:	int3   
   14001ef06:	int3   
   14001ef07:	int3   
   14001ef08:	int3   
   14001ef09:	int3   
   14001ef0a:	int3   
   14001ef0b:	int3   
   14001ef0c:	int3   
   14001ef0d:	int3   
   14001ef0e:	int3   
   14001ef0f:	int3   
   14001ef10:	or     r9,0xffffffffffffffff
   14001ef14:	xor    r8d,r8d
   14001ef17:	jmp    0x14001ef20
   14001ef1c:	int3   
   14001ef1d:	int3   
   14001ef1e:	int3   
   14001ef1f:	int3   
   14001ef20:	mov    QWORD PTR [rsp+0x8],rbx
   14001ef25:	mov    QWORD PTR [rsp+0x10],rbp
   14001ef2a:	mov    QWORD PTR [rsp+0x18],rsi
   14001ef2f:	push   rdi
   14001ef30:	sub    rsp,0x20
   14001ef34:	mov    rdi,QWORD PTR [rdx+0x10]
   14001ef38:	mov    rbp,r8
   14001ef3b:	mov    rsi,rdx
   14001ef3e:	mov    rbx,rcx
   14001ef41:	cmp    rdi,r8
   14001ef44:	jae    0x14001ef54
   14001ef46:	lea    rcx,[rip+0x1d9db]        # 0x14003c928
   14001ef4d:	call   QWORD PTR [rip+0x172d5]        # 0x140036228
   14001ef53:	int3   
   14001ef54:	sub    rdi,r8
   14001ef57:	cmp    r9,rdi
   14001ef5a:	cmovb  rdi,r9
   14001ef5e:	cmp    rcx,rdx
   14001ef61:	jne    0x14001ef9c
   14001ef63:	lea    rax,[rdi+r8*1]
   14001ef67:	cmp    QWORD PTR [rcx+0x10],rax
   14001ef6b:	jae    0x14001ef7b
   14001ef6d:	lea    rcx,[rip+0x1d9b4]        # 0x14003c928
   14001ef74:	call   QWORD PTR [rip+0x172ae]        # 0x140036228
   14001ef7a:	int3   
   14001ef7b:	cmp    QWORD PTR [rcx+0x18],0x10
   14001ef80:	mov    QWORD PTR [rcx+0x10],rax
   14001ef84:	jb     0x14001ef89
   14001ef86:	mov    rcx,QWORD PTR [rcx]
   14001ef89:	mov    BYTE PTR [rcx+rax*1],0x0
   14001ef8d:	xor    edx,edx
   14001ef8f:	mov    rcx,rbx
   14001ef92:	call   0x140023080
   14001ef97:	jmp    0x14001f02a
   14001ef9c:	cmp    rdi,0xfffffffffffffffe
   14001efa0:	jbe    0x14001efb0
   14001efa2:	lea    rcx,[rip+0x1d96f]        # 0x14003c918
   14001efa9:	call   QWORD PTR [rip+0x17271]        # 0x140036220
   14001efaf:	int3   
   14001efb0:	mov    rax,QWORD PTR [rcx+0x18]
   14001efb4:	cmp    rax,rdi
   14001efb7:	jae    0x14001efe0
   14001efb9:	mov    r8,QWORD PTR [rcx+0x10]
   14001efbd:	mov    rdx,rdi
   14001efc0:	call   0x14001c600
   14001efc5:	test   rdi,rdi
   14001efc8:	je     0x14001f02a
   14001efca:	cmp    QWORD PTR [rsi+0x18],0x10
   14001efcf:	jb     0x14001efd4
   14001efd1:	mov    rsi,QWORD PTR [rsi]
   14001efd4:	cmp    QWORD PTR [rbx+0x18],0x10
   14001efd9:	jb     0x14001efff
   14001efdb:	mov    rcx,QWORD PTR [rbx]
   14001efde:	jmp    0x14001f002
   14001efe0:	test   rdi,rdi
   14001efe3:	jne    0x14001efca
   14001efe5:	mov    QWORD PTR [rcx+0x10],rdi
   14001efe9:	cmp    rax,0x10
   14001efed:	jb     0x14001eff7
   14001efef:	mov    rax,QWORD PTR [rcx]
   14001eff2:	mov    BYTE PTR [rax],dil
   14001eff5:	jmp    0x14001f02a
   14001eff7:	mov    rax,rcx
   14001effa:	mov    BYTE PTR [rcx],0x0
   14001effd:	jmp    0x14001f02a
   14001efff:	mov    rcx,rbx
   14001f002:	test   rdi,rdi
   14001f005:	je     0x14001f013
   14001f007:	lea    rdx,[rsi+rbp*1]
   14001f00b:	mov    r8,rdi
   14001f00e:	call   0x14003048a
   14001f013:	cmp    QWORD PTR [rbx+0x18],0x10
   14001f018:	mov    QWORD PTR [rbx+0x10],rdi
   14001f01c:	jb     0x14001f023
   14001f01e:	mov    rax,QWORD PTR [rbx]
   14001f021:	jmp    0x14001f026
   14001f023:	mov    rax,rbx
   14001f026:	mov    BYTE PTR [rax+rdi*1],0x0
   14001f02a:	mov    rbp,QWORD PTR [rsp+0x38]
   14001f02f:	mov    rsi,QWORD PTR [rsp+0x40]
   14001f034:	mov    rax,rbx
   14001f037:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f03c:	add    rsp,0x20
   14001f040:	pop    rdi
   14001f041:	ret    
   14001f042:	int3   
   14001f043:	int3   
   14001f044:	int3   
   14001f045:	int3   
   14001f046:	int3   
   14001f047:	int3   
   14001f048:	int3   
   14001f049:	int3   
   14001f04a:	int3   
   14001f04b:	int3   
   14001f04c:	int3   
   14001f04d:	int3   
   14001f04e:	int3   
   14001f04f:	int3   
   14001f050:	cmp    BYTE PTR [rdx],0x0
   14001f053:	jne    0x14001f05d
   14001f055:	xor    r8d,r8d
   14001f058:	jmp    0x14001f070
   14001f05d:	or     r8,0xffffffffffffffff
   14001f061:	inc    r8
   14001f064:	cmp    BYTE PTR [rdx+r8*1],0x0
   14001f069:	jne    0x14001f061
   14001f06b:	jmp    0x14001f070
   14001f070:	mov    QWORD PTR [rsp+0x8],rbx
   14001f075:	mov    QWORD PTR [rsp+0x10],rsi
   14001f07a:	push   rdi
   14001f07b:	sub    rsp,0x20
   14001f07f:	mov    rdi,r8
   14001f082:	mov    rsi,rdx
   14001f085:	mov    rbx,rcx
   14001f088:	test   rdx,rdx
   14001f08b:	je     0x14001f0e7
   14001f08d:	mov    rdx,QWORD PTR [rcx+0x18]
   14001f091:	cmp    rdx,0x10
   14001f095:	jb     0x14001f09c
   14001f097:	mov    rax,QWORD PTR [rcx]
   14001f09a:	jmp    0x14001f09f
   14001f09c:	mov    rax,rcx
   14001f09f:	cmp    rsi,rax
   14001f0a2:	jb     0x14001f0e7
   14001f0a4:	cmp    rdx,0x10
   14001f0a8:	jb     0x14001f0ad
   14001f0aa:	mov    rcx,QWORD PTR [rcx]
   14001f0ad:	add    rcx,QWORD PTR [rbx+0x10]
   14001f0b1:	cmp    rcx,rsi
   14001f0b4:	jbe    0x14001f0e7
   14001f0b6:	cmp    rdx,0x10
   14001f0ba:	jb     0x14001f0c1
   14001f0bc:	mov    rax,QWORD PTR [rbx]
   14001f0bf:	jmp    0x14001f0c4
   14001f0c1:	mov    rax,rbx
   14001f0c4:	sub    rsi,rax
   14001f0c7:	mov    r9,r8
   14001f0ca:	mov    rdx,rbx
   14001f0cd:	mov    r8,rsi
   14001f0d0:	mov    rcx,rbx
   14001f0d3:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f0d8:	mov    rsi,QWORD PTR [rsp+0x38]
   14001f0dd:	add    rsp,0x20
   14001f0e1:	pop    rdi
   14001f0e2:	jmp    0x14001ef20
   14001f0e7:	cmp    r8,0xfffffffffffffffe
   14001f0eb:	jbe    0x14001f0fb
   14001f0ed:	lea    rcx,[rip+0x1d824]        # 0x14003c918
   14001f0f4:	call   QWORD PTR [rip+0x17126]        # 0x140036220
   14001f0fa:	int3   
   14001f0fb:	mov    rax,QWORD PTR [rbx+0x18]
   14001f0ff:	cmp    rax,r8
   14001f102:	jae    0x14001f124
   14001f104:	mov    r8,QWORD PTR [rbx+0x10]
   14001f108:	mov    rdx,rdi
   14001f10b:	mov    rcx,rbx
   14001f10e:	call   0x14001c600
   14001f113:	test   rdi,rdi
   14001f116:	je     0x14001f18c
   14001f118:	cmp    QWORD PTR [rbx+0x18],0x10
   14001f11d:	jb     0x14001f162
   14001f11f:	mov    rcx,QWORD PTR [rbx]
   14001f122:	jmp    0x14001f165
   14001f124:	test   r8,r8
   14001f127:	jne    0x14001f113
   14001f129:	mov    QWORD PTR [rbx+0x10],r8
   14001f12d:	cmp    rax,0x10
   14001f131:	jb     0x14001f14c
   14001f133:	mov    rax,QWORD PTR [rbx]
   14001f136:	mov    BYTE PTR [rax],r8b
   14001f139:	mov    rax,rbx
   14001f13c:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f141:	mov    rsi,QWORD PTR [rsp+0x38]
   14001f146:	add    rsp,0x20
   14001f14a:	pop    rdi
   14001f14b:	ret    
   14001f14c:	mov    rax,rbx
   14001f14f:	mov    BYTE PTR [rbx],0x0
   14001f152:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f157:	mov    rsi,QWORD PTR [rsp+0x38]
   14001f15c:	add    rsp,0x20
   14001f160:	pop    rdi
   14001f161:	ret    
   14001f162:	mov    rcx,rbx
   14001f165:	test   rdi,rdi
   14001f168:	je     0x14001f175
   14001f16a:	mov    r8,rdi
   14001f16d:	mov    rdx,rsi
   14001f170:	call   0x14003048a
   14001f175:	cmp    QWORD PTR [rbx+0x18],0x10
   14001f17a:	mov    QWORD PTR [rbx+0x10],rdi
   14001f17e:	jb     0x14001f185
   14001f180:	mov    rax,QWORD PTR [rbx]
   14001f183:	jmp    0x14001f188
   14001f185:	mov    rax,rbx
   14001f188:	mov    BYTE PTR [rax+rdi*1],0x0
   14001f18c:	mov    rsi,QWORD PTR [rsp+0x38]
   14001f191:	mov    rax,rbx
   14001f194:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f199:	add    rsp,0x20
   14001f19d:	pop    rdi
   14001f19e:	ret    
   14001f19f:	int3   
   14001f1a0:	sub    rsp,0x38
   14001f1a4:	mov    r10,QWORD PTR [rcx+0x18]
   14001f1a8:	cmp    r10,0x10
   14001f1ac:	jb     0x14001f1b3
   14001f1ae:	mov    r9,QWORD PTR [rcx]
   14001f1b1:	jmp    0x14001f1b6
   14001f1b3:	mov    r9,rcx
   14001f1b6:	mov    rax,QWORD PTR [rcx+0x10]
   14001f1ba:	add    rax,r9
   14001f1bd:	cmp    r10,0x10
   14001f1c1:	jb     0x14001f1c8
   14001f1c3:	mov    r10,QWORD PTR [rcx]
   14001f1c6:	jmp    0x14001f1cb
   14001f1c8:	mov    r10,rcx
   14001f1cb:	mov    QWORD PTR [rsp+0x20],r8
   14001f1d0:	mov    r9,rdx
   14001f1d3:	mov    r8,rax
   14001f1d6:	mov    rdx,r10
   14001f1d9:	call   0x140029cd0
   14001f1de:	add    rsp,0x38
   14001f1e2:	ret    
   14001f1e3:	int3   
   14001f1e4:	int3   
   14001f1e5:	int3   
   14001f1e6:	int3   
   14001f1e7:	int3   
   14001f1e8:	int3   
   14001f1e9:	int3   
   14001f1ea:	int3   
   14001f1eb:	int3   
   14001f1ec:	int3   
   14001f1ed:	int3   
   14001f1ee:	int3   
   14001f1ef:	int3   
   14001f1f0:	mov    QWORD PTR [rsp+0x8],rbx
   14001f1f5:	mov    QWORD PTR [rsp+0x10],rsi
   14001f1fa:	push   rdi
   14001f1fb:	sub    rsp,0x20
   14001f1ff:	movzx  esi,r8b
   14001f203:	mov    rdi,rdx
   14001f206:	mov    rbx,rcx
   14001f209:	cmp    rdx,0xffffffffffffffff
   14001f20d:	jne    0x14001f21d
   14001f20f:	lea    rcx,[rip+0x1d702]        # 0x14003c918
   14001f216:	call   QWORD PTR [rip+0x17004]        # 0x140036220
   14001f21c:	int3   
   14001f21d:	cmp    rdx,0xfffffffffffffffe
   14001f221:	jbe    0x14001f231
   14001f223:	lea    rcx,[rip+0x1d6ee]        # 0x14003c918
   14001f22a:	call   QWORD PTR [rip+0x16ff0]        # 0x140036220
   14001f230:	int3   
   14001f231:	mov    rax,QWORD PTR [rcx+0x18]
   14001f235:	cmp    rax,rdx
   14001f238:	jae    0x14001f261
   14001f23a:	mov    r8,QWORD PTR [rcx+0x10]
   14001f23e:	call   0x14001c600
   14001f243:	test   rdi,rdi
   14001f246:	je     0x14001f2db
   14001f24c:	cmp    rdi,0x1
   14001f250:	jne    0x14001f2a9
   14001f252:	cmp    QWORD PTR [rbx+0x18],0x10
   14001f257:	jb     0x14001f2a1
   14001f259:	mov    rax,QWORD PTR [rbx]
   14001f25c:	mov    BYTE PTR [rax],sil
   14001f25f:	jmp    0x14001f2c4
   14001f261:	test   rdx,rdx
   14001f264:	jne    0x14001f243
   14001f266:	mov    QWORD PTR [rcx+0x10],rdx
   14001f26a:	cmp    rax,0x10
   14001f26e:	jb     0x14001f288
   14001f270:	mov    rax,QWORD PTR [rcx]
   14001f273:	mov    BYTE PTR [rax],dl
   14001f275:	mov    rax,rbx
   14001f278:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f27d:	mov    rsi,QWORD PTR [rsp+0x38]
   14001f282:	add    rsp,0x20
   14001f286:	pop    rdi
   14001f287:	ret    
   14001f288:	mov    rax,rcx
   14001f28b:	mov    BYTE PTR [rcx],0x0
   14001f28e:	mov    rax,rbx
   14001f291:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f296:	mov    rsi,QWORD PTR [rsp+0x38]
   14001f29b:	add    rsp,0x20
   14001f29f:	pop    rdi
   14001f2a0:	ret    
   14001f2a1:	mov    rax,rbx
   14001f2a4:	mov    BYTE PTR [rbx],sil
   14001f2a7:	jmp    0x14001f2c4
   14001f2a9:	cmp    QWORD PTR [rbx+0x18],0x10
   14001f2ae:	jb     0x14001f2b5
   14001f2b0:	mov    rcx,QWORD PTR [rbx]
   14001f2b3:	jmp    0x14001f2b8
   14001f2b5:	mov    rcx,rbx
   14001f2b8:	movsx  edx,sil
   14001f2bc:	mov    r8,rdi
   14001f2bf:	call   0x140030490
   14001f2c4:	cmp    QWORD PTR [rbx+0x18],0x10
   14001f2c9:	mov    QWORD PTR [rbx+0x10],rdi
   14001f2cd:	jb     0x14001f2d4
   14001f2cf:	mov    rax,QWORD PTR [rbx]
   14001f2d2:	jmp    0x14001f2d7
   14001f2d4:	mov    rax,rbx
   14001f2d7:	mov    BYTE PTR [rax+rdi*1],0x0
   14001f2db:	mov    rsi,QWORD PTR [rsp+0x38]
   14001f2e0:	mov    rax,rbx
   14001f2e3:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f2e8:	add    rsp,0x20
   14001f2ec:	pop    rdi
   14001f2ed:	ret    
   14001f2ee:	int3   
   14001f2ef:	int3   
   14001f2f0:	rex push rbx
   14001f2f2:	sub    rsp,0x20
   14001f2f6:	mov    rax,rdx
   14001f2f9:	movsx  edx,r8b
   14001f2fd:	mov    rbx,rcx
   14001f300:	mov    r8,rax
   14001f303:	call   0x140030490
   14001f308:	mov    rax,rbx
   14001f30b:	add    rsp,0x20
   14001f30f:	pop    rbx
   14001f310:	ret    
   14001f311:	int3   
   14001f312:	int3   
   14001f313:	int3   
   14001f314:	int3   
   14001f315:	int3   
   14001f316:	int3   
   14001f317:	int3   
   14001f318:	int3   
   14001f319:	int3   
   14001f31a:	int3   
   14001f31b:	int3   
   14001f31c:	int3   
   14001f31d:	int3   
   14001f31e:	int3   
   14001f31f:	int3   
   14001f320:	movzx  eax,BYTE PTR [rdx]
   14001f323:	mov    BYTE PTR [rcx],al
   14001f325:	ret    
   14001f326:	int3   
   14001f327:	int3   
   14001f328:	int3   
   14001f329:	int3   
   14001f32a:	int3   
   14001f32b:	int3   
   14001f32c:	int3   
   14001f32d:	int3   
   14001f32e:	int3   
   14001f32f:	int3   
   14001f330:	movzx  eax,WORD PTR [rdx]
   14001f333:	mov    WORD PTR [rcx],ax
   14001f336:	ret    
   14001f337:	int3   
   14001f338:	int3   
   14001f339:	int3   
   14001f33a:	int3   
   14001f33b:	int3   
   14001f33c:	int3   
   14001f33d:	int3   
   14001f33e:	int3   
   14001f33f:	int3   
   14001f340:	sub    rsp,0x28
   14001f344:	movzx  eax,dx
   14001f347:	inc    eax
   14001f349:	cmp    eax,0x2
   14001f34c:	jl     0x14001f35c
   14001f34e:	cmp    dx,0x1f
   14001f352:	ja     0x14001f368
   14001f354:	mov    WORD PTR [rcx],dx
   14001f357:	add    rsp,0x28
   14001f35b:	ret    
   14001f35c:	movzx  ecx,WORD PTR [rcx]
   14001f35f:	xor    r8d,r8d
   14001f362:	call   0x140026650
   14001f367:	int3   
   14001f368:	movzx  ecx,WORD PTR [rcx]
   14001f36b:	mov    r8d,0x1
   14001f371:	call   0x140026650
   14001f376:	int3   
   14001f377:	int3   
   14001f378:	int3   
   14001f379:	int3   
   14001f37a:	int3   
   14001f37b:	int3   
   14001f37c:	int3   
   14001f37d:	int3   
   14001f37e:	int3   
   14001f37f:	int3   
   14001f380:	sub    rsp,0x28
   14001f384:	movzx  eax,dx
   14001f387:	inc    eax
   14001f389:	cmp    eax,0x579
   14001f38e:	jl     0x14001f3a2
   14001f390:	mov    eax,0x2710
   14001f395:	cmp    dx,ax
   14001f398:	ja     0x14001f3ae
   14001f39a:	mov    WORD PTR [rcx],dx
   14001f39d:	add    rsp,0x28
   14001f3a1:	ret    
   14001f3a2:	movzx  ecx,WORD PTR [rcx]
   14001f3a5:	xor    r8d,r8d
   14001f3a8:	call   0x140026710
   14001f3ad:	int3   
   14001f3ae:	movzx  ecx,WORD PTR [rcx]
   14001f3b1:	mov    r8d,0x1
   14001f3b7:	call   0x140026710
   14001f3bc:	int3   
   14001f3bd:	int3   
   14001f3be:	int3   
   14001f3bf:	int3   
   14001f3c0:	mov    rax,QWORD PTR [rdx]
   14001f3c3:	mov    r8,rdx
   14001f3c6:	test   rax,rax
   14001f3c9:	je     0x14001f3f5
   14001f3cb:	mov    QWORD PTR [rcx],rax
   14001f3ce:	test   al,0x1
   14001f3d0:	je     0x14001f3e3
   14001f3d2:	movups xmm0,XMMWORD PTR [rdx+0x8]
   14001f3d6:	movups XMMWORD PTR [rcx+0x8],xmm0
   14001f3da:	movups xmm1,XMMWORD PTR [rdx+0x18]
   14001f3de:	movups XMMWORD PTR [rcx+0x18],xmm1
   14001f3e2:	ret    
   14001f3e3:	lea    rdx,[rcx+0x8]
   14001f3e7:	lea    rcx,[r8+0x8]
   14001f3eb:	and    rax,0xfffffffffffffffe
   14001f3ef:	xor    r8d,r8d
   14001f3f2:	rex.W jmp QWORD PTR [rax]
   14001f3f5:	ret    
   14001f3f6:	int3   
   14001f3f7:	int3   
   14001f3f8:	int3   
   14001f3f9:	int3   
   14001f3fa:	int3   
   14001f3fb:	int3   
   14001f3fc:	int3   
   14001f3fd:	int3   
   14001f3fe:	int3   
   14001f3ff:	int3   
   14001f400:	mov    rax,QWORD PTR [rcx+0x20]
   14001f404:	test   rax,rax
   14001f407:	je     0x14001f40e
   14001f409:	add    rax,0x11
   14001f40d:	ret    
   14001f40e:	ret    
   14001f40f:	int3   
   14001f410:	mov    rax,QWORD PTR [rcx+0x20]
   14001f414:	test   rax,rax
   14001f417:	je     0x14001f41e
   14001f419:	add    rax,0x11
   14001f41d:	ret    
   14001f41e:	ret    
   14001f41f:	int3   
   14001f420:	sub    rsp,0x28
   14001f424:	cmp    QWORD PTR [rcx+0x10],rdx
   14001f428:	ja     0x14001f438
   14001f42a:	lea    rcx,[rip+0x1d4f7]        # 0x14003c928
   14001f431:	call   QWORD PTR [rip+0x16df1]        # 0x140036228
   14001f437:	int3   
   14001f438:	cmp    QWORD PTR [rcx+0x18],0x10
   14001f43d:	jb     0x14001f442
   14001f43f:	mov    rcx,QWORD PTR [rcx]
   14001f442:	lea    rax,[rcx+rdx*1]
   14001f446:	add    rsp,0x28
   14001f44a:	ret    
   14001f44b:	int3   
   14001f44c:	int3   
   14001f44d:	int3   
   14001f44e:	int3   
   14001f44f:	int3   
   14001f450:	sub    rsp,0x28
   14001f454:	cmp    QWORD PTR [rcx+0x10],rdx
   14001f458:	ja     0x14001f468
   14001f45a:	lea    rcx,[rip+0x1d4c7]        # 0x14003c928
   14001f461:	call   QWORD PTR [rip+0x16dc1]        # 0x140036228
   14001f467:	int3   
   14001f468:	cmp    QWORD PTR [rcx+0x18],0x10
   14001f46d:	jb     0x14001f472
   14001f46f:	mov    rcx,QWORD PTR [rcx]
   14001f472:	lea    rax,[rcx+rdx*1]
   14001f476:	add    rsp,0x28
   14001f47a:	ret    
   14001f47b:	int3   
   14001f47c:	int3   
   14001f47d:	int3   
   14001f47e:	int3   
   14001f47f:	int3   
   14001f480:	mov    rax,QWORD PTR [rcx]
   14001f483:	mov    eax,DWORD PTR [rax+0x30]
   14001f486:	shr    eax,0x2
   14001f489:	and    eax,0x1
   14001f48c:	ret    
   14001f48d:	int3   
   14001f48e:	int3   
   14001f48f:	int3   
   14001f490:	mov    eax,DWORD PTR [rcx+0xa8]
   14001f496:	shr    eax,0x2
   14001f499:	and    eax,0x1
   14001f49c:	ret    
   14001f49d:	int3   
   14001f49e:	int3   
   14001f49f:	int3   
   14001f4a0:	mov    eax,DWORD PTR [rcx+0xa8]
   14001f4a6:	shr    eax,0x2
   14001f4a9:	and    eax,0x1
   14001f4ac:	ret    
   14001f4ad:	int3   
   14001f4ae:	int3   
   14001f4af:	int3   
   14001f4b0:	mov    eax,DWORD PTR [rcx+0x98]
   14001f4b6:	shr    eax,0x2
   14001f4b9:	and    eax,0x1
   14001f4bc:	ret    
   14001f4bd:	int3   
   14001f4be:	int3   
   14001f4bf:	int3   
   14001f4c0:	mov    eax,DWORD PTR [rcx+0xa0]
   14001f4c6:	shr    eax,0x2
   14001f4c9:	and    eax,0x1
   14001f4cc:	ret    
   14001f4cd:	int3   
   14001f4ce:	int3   
   14001f4cf:	int3   
   14001f4d0:	mov    rax,QWORD PTR [rcx]
   14001f4d3:	mov    rax,QWORD PTR [rax+0x8]
   14001f4d7:	add    rax,0x10
   14001f4db:	ret    
   14001f4dc:	int3   
   14001f4dd:	int3   
   14001f4de:	int3   
   14001f4df:	int3   
   14001f4e0:	rex push rbx
   14001f4e2:	sub    rsp,0x40
   14001f4e6:	mov    DWORD PTR [rsp+0x30],0x1
   14001f4ee:	lea    rax,[rip+0x35b13]        # 0x140055008
   14001f4f5:	lea    r8,[rip+0x1b7d4]        # 0x14003acd0
   14001f4fc:	mov    QWORD PTR [rsp+0x38],rax
   14001f501:	lea    rdx,[rsp+0x30]
   14001f506:	mov    rbx,rcx
   14001f509:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14001f50e:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   14001f514:	mov    DWORD PTR [rsp+0x20],0x0
   14001f51c:	call   0x140016bb0
   14001f521:	lea    rax,[rip+0x1b2b0]        # 0x14003a7d8
   14001f528:	mov    QWORD PTR [rbx],rax
   14001f52b:	mov    rax,rbx
   14001f52e:	add    rsp,0x40
   14001f532:	pop    rbx
   14001f533:	ret    
   14001f534:	int3   
   14001f535:	int3   
   14001f536:	int3   
   14001f537:	int3   
   14001f538:	int3   
   14001f539:	int3   
   14001f53a:	int3   
   14001f53b:	int3   
   14001f53c:	int3   
   14001f53d:	int3   
   14001f53e:	int3   
   14001f53f:	int3   
   14001f540:	mov    rax,QWORD PTR [rcx]
   14001f543:	mov    QWORD PTR [rdx],rax
   14001f546:	mov    rax,rdx
   14001f549:	ret    
   14001f54a:	int3   
   14001f54b:	int3   
   14001f54c:	int3   
   14001f54d:	int3   
   14001f54e:	int3   
   14001f54f:	int3   
   14001f550:	mov    rax,rcx
   14001f553:	ret    
   14001f554:	int3   
   14001f555:	int3   
   14001f556:	int3   
   14001f557:	int3   
   14001f558:	int3   
   14001f559:	int3   
   14001f55a:	int3   
   14001f55b:	int3   
   14001f55c:	int3   
   14001f55d:	int3   
   14001f55e:	int3   
   14001f55f:	int3   
   14001f560:	mov    rax,rcx
   14001f563:	ret    
   14001f564:	int3   
   14001f565:	int3   
   14001f566:	int3   
   14001f567:	int3   
   14001f568:	int3   
   14001f569:	int3   
   14001f56a:	int3   
   14001f56b:	int3   
   14001f56c:	int3   
   14001f56d:	int3   
   14001f56e:	int3   
   14001f56f:	int3   
   14001f570:	mov    rax,rcx
   14001f573:	ret    
   14001f574:	int3   
   14001f575:	int3   
   14001f576:	int3   
   14001f577:	int3   
   14001f578:	int3   
   14001f579:	int3   
   14001f57a:	int3   
   14001f57b:	int3   
   14001f57c:	int3   
   14001f57d:	int3   
   14001f57e:	int3   
   14001f57f:	int3   
   14001f580:	mov    rax,rcx
   14001f583:	ret    
   14001f584:	int3   
   14001f585:	int3   
   14001f586:	int3   
   14001f587:	int3   
   14001f588:	int3   
   14001f589:	int3   
   14001f58a:	int3   
   14001f58b:	int3   
   14001f58c:	int3   
   14001f58d:	int3   
   14001f58e:	int3   
   14001f58f:	int3   
   14001f590:	mov    rax,rcx
   14001f593:	ret    
   14001f594:	int3   
   14001f595:	int3   
   14001f596:	int3   
   14001f597:	int3   
   14001f598:	int3   
   14001f599:	int3   
   14001f59a:	int3   
   14001f59b:	int3   
   14001f59c:	int3   
   14001f59d:	int3   
   14001f59e:	int3   
   14001f59f:	int3   
   14001f5a0:	mov    rax,QWORD PTR [rcx]
   14001f5a3:	mov    QWORD PTR [rdx],rax
   14001f5a6:	mov    rax,rdx
   14001f5a9:	ret    
   14001f5aa:	int3   
   14001f5ab:	int3   
   14001f5ac:	int3   
   14001f5ad:	int3   
   14001f5ae:	int3   
   14001f5af:	int3   
   14001f5b0:	mov    rax,rcx
   14001f5b3:	ret    
   14001f5b4:	int3   
   14001f5b5:	int3   
   14001f5b6:	int3   
   14001f5b7:	int3   
   14001f5b8:	int3   
   14001f5b9:	int3   
   14001f5ba:	int3   
   14001f5bb:	int3   
   14001f5bc:	int3   
   14001f5bd:	int3   
   14001f5be:	int3   
   14001f5bf:	int3   
   14001f5c0:	mov    rax,rcx
   14001f5c3:	ret    
   14001f5c4:	int3   
   14001f5c5:	int3   
   14001f5c6:	int3   
   14001f5c7:	int3   
   14001f5c8:	int3   
   14001f5c9:	int3   
   14001f5ca:	int3   
   14001f5cb:	int3   
   14001f5cc:	int3   
   14001f5cd:	int3   
   14001f5ce:	int3   
   14001f5cf:	int3   
   14001f5d0:	mov    rax,rcx
   14001f5d3:	ret    
   14001f5d4:	int3   
   14001f5d5:	int3   
   14001f5d6:	int3   
   14001f5d7:	int3   
   14001f5d8:	int3   
   14001f5d9:	int3   
   14001f5da:	int3   
   14001f5db:	int3   
   14001f5dc:	int3   
   14001f5dd:	int3   
   14001f5de:	int3   
   14001f5df:	int3   
   14001f5e0:	mov    rax,rcx
   14001f5e3:	ret    
   14001f5e4:	int3   
   14001f5e5:	int3   
   14001f5e6:	int3   
   14001f5e7:	int3   
   14001f5e8:	int3   
   14001f5e9:	int3   
   14001f5ea:	int3   
   14001f5eb:	int3   
   14001f5ec:	int3   
   14001f5ed:	int3   
   14001f5ee:	int3   
   14001f5ef:	int3   
   14001f5f0:	mov    rax,rcx
   14001f5f3:	ret    
   14001f5f4:	int3   
   14001f5f5:	int3   
   14001f5f6:	int3   
   14001f5f7:	int3   
   14001f5f8:	int3   
   14001f5f9:	int3   
   14001f5fa:	int3   
   14001f5fb:	int3   
   14001f5fc:	int3   
   14001f5fd:	int3   
   14001f5fe:	int3   
   14001f5ff:	int3   
   14001f600:	mov    rax,rcx
   14001f603:	ret    
   14001f604:	int3   
   14001f605:	int3   
   14001f606:	int3   
   14001f607:	int3   
   14001f608:	int3   
   14001f609:	int3   
   14001f60a:	int3   
   14001f60b:	int3   
   14001f60c:	int3   
   14001f60d:	int3   
   14001f60e:	int3   
   14001f60f:	int3   
   14001f610:	mov    rax,rcx
   14001f613:	ret    
   14001f614:	int3   
   14001f615:	int3   
   14001f616:	int3   
   14001f617:	int3   
   14001f618:	int3   
   14001f619:	int3   
   14001f61a:	int3   
   14001f61b:	int3   
   14001f61c:	int3   
   14001f61d:	int3   
   14001f61e:	int3   
   14001f61f:	int3   
   14001f620:	mov    rax,rcx
   14001f623:	ret    
   14001f624:	int3   
   14001f625:	int3   
   14001f626:	int3   
   14001f627:	int3   
   14001f628:	int3   
   14001f629:	int3   
   14001f62a:	int3   
   14001f62b:	int3   
   14001f62c:	int3   
   14001f62d:	int3   
   14001f62e:	int3   
   14001f62f:	int3   
   14001f630:	mov    rax,QWORD PTR [rcx]
   14001f633:	ret    
   14001f634:	int3   
   14001f635:	int3   
   14001f636:	int3   
   14001f637:	int3   
   14001f638:	int3   
   14001f639:	int3   
   14001f63a:	int3   
   14001f63b:	int3   
   14001f63c:	int3   
   14001f63d:	int3   
   14001f63e:	int3   
   14001f63f:	int3   
   14001f640:	mov    rax,QWORD PTR [rcx+0x20]
   14001f644:	add    rax,0x11
   14001f648:	je     0x14001f650
   14001f64a:	add    rax,0xffffffffffffffef
   14001f64e:	jmp    0x14001f652
   14001f650:	xor    eax,eax
   14001f652:	mov    rax,QWORD PTR [rax+0x8]
   14001f656:	mov    rax,QWORD PTR [rax+0x68]
   14001f65a:	test   rax,rax
   14001f65d:	je     0x14001f66a
   14001f65f:	add    rax,0xffffffffffffffa0
   14001f663:	mov    QWORD PTR [rdx],rax
   14001f666:	mov    rax,rdx
   14001f669:	ret    
   14001f66a:	mov    QWORD PTR [rdx],0x0
   14001f671:	mov    rax,rdx
   14001f674:	ret    
   14001f675:	int3   
   14001f676:	int3   
   14001f677:	int3   
   14001f678:	int3   
   14001f679:	int3   
   14001f67a:	int3   
   14001f67b:	int3   
   14001f67c:	int3   
   14001f67d:	int3   
   14001f67e:	int3   
   14001f67f:	int3   
   14001f680:	cmp    QWORD PTR [rcx+0x18],0x10
   14001f685:	jb     0x14001f691
   14001f687:	mov    rax,QWORD PTR [rcx]
   14001f68a:	mov    QWORD PTR [rdx],rax
   14001f68d:	mov    rax,rdx
   14001f690:	ret    
   14001f691:	mov    QWORD PTR [rdx],rcx
   14001f694:	mov    rax,rdx
   14001f697:	ret    
   14001f698:	int3   
   14001f699:	int3   
   14001f69a:	int3   
   14001f69b:	int3   
   14001f69c:	int3   
   14001f69d:	int3   
   14001f69e:	int3   
   14001f69f:	int3   
   14001f6a0:	cmp    QWORD PTR [rcx+0x18],0x10
   14001f6a5:	jb     0x14001f6b1
   14001f6a7:	mov    rax,QWORD PTR [rcx]
   14001f6aa:	mov    QWORD PTR [rdx],rax
   14001f6ad:	mov    rax,rdx
   14001f6b0:	ret    
   14001f6b1:	mov    QWORD PTR [rdx],rcx
   14001f6b4:	mov    rax,rdx
   14001f6b7:	ret    
   14001f6b8:	int3   
   14001f6b9:	int3   
   14001f6ba:	int3   
   14001f6bb:	int3   
   14001f6bc:	int3   
   14001f6bd:	int3   
   14001f6be:	int3   
   14001f6bf:	int3   
   14001f6c0:	mov    rax,QWORD PTR [rcx+0x20]
   14001f6c4:	ret    
   14001f6c5:	int3   
   14001f6c6:	int3   
   14001f6c7:	int3   
   14001f6c8:	int3   
   14001f6c9:	int3   
   14001f6ca:	int3   
   14001f6cb:	int3   
   14001f6cc:	int3   
   14001f6cd:	int3   
   14001f6ce:	int3   
   14001f6cf:	int3   
   14001f6d0:	mov    rax,QWORD PTR [rcx]
   14001f6d3:	ret    
   14001f6d4:	int3   
   14001f6d5:	int3   
   14001f6d6:	int3   
   14001f6d7:	int3   
   14001f6d8:	int3   
   14001f6d9:	int3   
   14001f6da:	int3   
   14001f6db:	int3   
   14001f6dc:	int3   
   14001f6dd:	int3   
   14001f6de:	int3   
   14001f6df:	int3   
   14001f6e0:	mov    rax,QWORD PTR [rcx]
   14001f6e3:	mov    rcx,QWORD PTR [rax]
   14001f6e6:	mov    rax,rdx
   14001f6e9:	mov    QWORD PTR [rdx],rcx
   14001f6ec:	ret    
   14001f6ed:	int3   
   14001f6ee:	int3   
   14001f6ef:	int3   
   14001f6f0:	mov    rax,QWORD PTR [rcx]
   14001f6f3:	mov    rcx,QWORD PTR [rax]
   14001f6f6:	mov    rax,rdx
   14001f6f9:	mov    QWORD PTR [rdx],rcx
   14001f6fc:	ret    
   14001f6fd:	int3   
   14001f6fe:	int3   
   14001f6ff:	int3   
   14001f700:	mov    rax,QWORD PTR [rcx]
   14001f703:	mov    rcx,QWORD PTR [rax]
   14001f706:	mov    rax,rdx
   14001f709:	mov    QWORD PTR [rdx],rcx
   14001f70c:	ret    
   14001f70d:	int3   
   14001f70e:	int3   
   14001f70f:	int3   
   14001f710:	test   rcx,rcx
   14001f713:	je     0x14001f71b
   14001f715:	lea    rax,[rcx-0x11]
   14001f719:	jmp    0x14001f71d
   14001f71b:	xor    eax,eax
   14001f71d:	mov    rax,QWORD PTR [rax+0x8]
   14001f721:	mov    rax,QWORD PTR [rax+0x68]
   14001f725:	test   rax,rax
   14001f728:	je     0x14001f735
   14001f72a:	add    rax,0xffffffffffffffa0
   14001f72e:	mov    QWORD PTR [rdx],rax
   14001f731:	mov    rax,rdx
   14001f734:	ret    
   14001f735:	mov    QWORD PTR [rdx],0x0
   14001f73c:	mov    rax,rdx
   14001f73f:	ret    
   14001f740:	mov    rax,rsp
   14001f743:	push   rdi
   14001f744:	sub    rsp,0x110
   14001f74b:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14001f754:	mov    QWORD PTR [rax+0x8],rbx
   14001f758:	mov    rdi,rdx
   14001f75b:	mov    rbx,rcx
   14001f75e:	mov    DWORD PTR [rsp+0x20],0x0
   14001f766:	lea    rdx,[rcx+0x10]
   14001f76a:	lea    rcx,[rax-0x60]
   14001f76e:	call   0x1400117a0
   14001f773:	mov    r9,QWORD PTR [rbx+0x8]
   14001f777:	mov    r8,QWORD PTR [rbx]
   14001f77a:	mov    rdx,rax
   14001f77d:	lea    rcx,[rsp+0x30]
   14001f782:	call   0x140015410
   14001f787:	nop
   14001f788:	mov    rdx,rax
   14001f78b:	mov    rcx,rdi
   14001f78e:	call   0x140015390
   14001f793:	nop
   14001f794:	cmp    QWORD PTR [rsp+0xb0],0x10
   14001f79d:	jb     0x14001f7ac
   14001f79f:	mov    rcx,QWORD PTR [rsp+0x98]
   14001f7a7:	call   0x140030282
   14001f7ac:	mov    QWORD PTR [rsp+0xb0],0xf
   14001f7b8:	mov    QWORD PTR [rsp+0xa8],0x0
   14001f7c4:	mov    BYTE PTR [rsp+0x98],0x0
   14001f7cc:	cmp    QWORD PTR [rsp+0x68],0x10
   14001f7d2:	jb     0x14001f7de
   14001f7d4:	mov    rcx,QWORD PTR [rsp+0x50]
   14001f7d9:	call   0x140030282
   14001f7de:	mov    QWORD PTR [rsp+0x68],0xf
   14001f7e7:	mov    QWORD PTR [rsp+0x60],0x0
   14001f7f0:	mov    BYTE PTR [rsp+0x50],0x0
   14001f7f5:	cmp    QWORD PTR [rsp+0x48],0x10
   14001f7fb:	jb     0x14001f807
   14001f7fd:	mov    rcx,QWORD PTR [rsp+0x30]
   14001f802:	call   0x140030282
   14001f807:	mov    rax,rdi
   14001f80a:	mov    rbx,QWORD PTR [rsp+0x120]
   14001f812:	add    rsp,0x110
   14001f819:	pop    rdi
   14001f81a:	ret    
   14001f81b:	int3   
   14001f81c:	int3   
   14001f81d:	int3   
   14001f81e:	int3   
   14001f81f:	int3   
   14001f820:	mov    rax,QWORD PTR [rcx]
   14001f823:	mov    QWORD PTR [rdx],rax
   14001f826:	mov    rax,rdx
   14001f829:	ret    
   14001f82a:	int3   
   14001f82b:	int3   
   14001f82c:	int3   
   14001f82d:	int3   
   14001f82e:	int3   
   14001f82f:	int3   
   14001f830:	mov    rax,QWORD PTR [rcx]
   14001f833:	mov    QWORD PTR [rdx],rax
   14001f836:	mov    rax,rdx
   14001f839:	ret    
   14001f83a:	int3   
   14001f83b:	int3   
   14001f83c:	int3   
   14001f83d:	int3   
   14001f83e:	int3   
   14001f83f:	int3   
   14001f840:	mov    rax,QWORD PTR [rcx]
   14001f843:	mov    QWORD PTR [rdx],rax
   14001f846:	mov    rax,rdx
   14001f849:	ret    
   14001f84a:	int3   
   14001f84b:	int3   
   14001f84c:	int3   
   14001f84d:	int3   
   14001f84e:	int3   
   14001f84f:	int3   
   14001f850:	mov    rax,rcx
   14001f853:	ret    
   14001f854:	int3   
   14001f855:	int3   
   14001f856:	int3   
   14001f857:	int3   
   14001f858:	int3   
   14001f859:	int3   
   14001f85a:	int3   
   14001f85b:	int3   
   14001f85c:	int3   
   14001f85d:	int3   
   14001f85e:	int3   
   14001f85f:	int3   
   14001f860:	mov    rax,rcx
   14001f863:	ret    
   14001f864:	int3   
   14001f865:	int3   
   14001f866:	int3   
   14001f867:	int3   
   14001f868:	int3   
   14001f869:	int3   
   14001f86a:	int3   
   14001f86b:	int3   
   14001f86c:	int3   
   14001f86d:	int3   
   14001f86e:	int3   
   14001f86f:	int3   
   14001f870:	mov    rax,QWORD PTR [rcx]
   14001f873:	or     DWORD PTR [rax+0x40],0x1
   14001f877:	mov    rdx,QWORD PTR [rcx]
   14001f87a:	mov    rax,QWORD PTR [rdx+0x20]
   14001f87e:	mov    QWORD PTR [rdx+0x30],rax
   14001f882:	mov    QWORD PTR [rdx+0x38],rax
   14001f886:	ret    
   14001f887:	int3   
   14001f888:	int3   
   14001f889:	int3   
   14001f88a:	int3   
   14001f88b:	int3   
   14001f88c:	int3   
   14001f88d:	int3   
   14001f88e:	int3   
   14001f88f:	int3   
   14001f890:	mov    rax,QWORD PTR [rcx]
   14001f893:	or     DWORD PTR [rax+0x48],0x1
   14001f897:	mov    rdx,QWORD PTR [rcx]
   14001f89a:	mov    rax,QWORD PTR [rdx+0x28]
   14001f89e:	mov    QWORD PTR [rdx+0x38],rax
   14001f8a2:	mov    QWORD PTR [rdx+0x40],rax
   14001f8a6:	ret    
   14001f8a7:	int3   
   14001f8a8:	int3   
   14001f8a9:	int3   
   14001f8aa:	int3   
   14001f8ab:	int3   
   14001f8ac:	int3   
   14001f8ad:	int3   
   14001f8ae:	int3   
   14001f8af:	int3   
   14001f8b0:	mov    rax,QWORD PTR [rcx]
   14001f8b3:	or     DWORD PTR [rax+0x40],0x2
   14001f8b7:	mov    rdx,QWORD PTR [rcx]
   14001f8ba:	mov    rax,QWORD PTR [rdx+0x20]
   14001f8be:	mov    QWORD PTR [rdx+0x30],rax
   14001f8c2:	add    rax,QWORD PTR [rdx+0x28]
   14001f8c6:	mov    QWORD PTR [rdx+0x38],rax
   14001f8ca:	ret    
   14001f8cb:	int3   
   14001f8cc:	int3   
   14001f8cd:	int3   
   14001f8ce:	int3   
   14001f8cf:	int3   
   14001f8d0:	mov    rax,QWORD PTR [rcx]
   14001f8d3:	or     DWORD PTR [rax+0x48],0x2
   14001f8d7:	mov    rdx,QWORD PTR [rcx]
   14001f8da:	mov    rax,QWORD PTR [rdx+0x28]
   14001f8de:	mov    QWORD PTR [rdx+0x38],rax
   14001f8e2:	add    rax,QWORD PTR [rdx+0x30]
   14001f8e6:	mov    QWORD PTR [rdx+0x40],rax
   14001f8ea:	ret    
   14001f8eb:	int3   
   14001f8ec:	int3   
   14001f8ed:	int3   
   14001f8ee:	int3   
   14001f8ef:	int3   
   14001f8f0:	mov    rax,QWORD PTR [rcx]
   14001f8f3:	add    rax,0x20
   14001f8f7:	ret    
   14001f8f8:	int3   
   14001f8f9:	int3   
   14001f8fa:	int3   
   14001f8fb:	int3   
   14001f8fc:	int3   
   14001f8fd:	int3   
   14001f8fe:	int3   
   14001f8ff:	int3   
   14001f900:	mov    rax,QWORD PTR [rcx]
   14001f903:	add    rax,0x28
   14001f907:	ret    
   14001f908:	int3   
   14001f909:	int3   
   14001f90a:	int3   
   14001f90b:	int3   
   14001f90c:	int3   
   14001f90d:	int3   
   14001f90e:	int3   
   14001f90f:	int3   
   14001f910:	cmp    QWORD PTR [rcx+0x18],0x10
   14001f915:	jb     0x14001f91b
   14001f917:	mov    rax,QWORD PTR [rcx]
   14001f91a:	ret    
   14001f91b:	mov    rax,rcx
   14001f91e:	ret    
   14001f91f:	int3   
   14001f920:	mov    rax,QWORD PTR [rcx]
   14001f923:	test   rax,rax
   14001f926:	jne    0x14001f930
   14001f928:	lea    rax,[rip+0x1ad3b]        # 0x14003a66a
   14001f92f:	ret    
   14001f930:	mov    rcx,QWORD PTR [rax+0x28]
   14001f934:	test   rcx,rcx
   14001f937:	je     0x14001f93d
   14001f939:	mov    rax,rcx
   14001f93c:	ret    
   14001f93d:	add    rax,0x30
   14001f941:	ret    
   14001f942:	int3   
   14001f943:	int3   
   14001f944:	int3   
   14001f945:	int3   
   14001f946:	int3   
   14001f947:	int3   
   14001f948:	int3   
   14001f949:	int3   
   14001f94a:	int3   
   14001f94b:	int3   
   14001f94c:	int3   
   14001f94d:	int3   
   14001f94e:	int3   
   14001f94f:	int3   
   14001f950:	lea    rax,[rcx+0x1]
   14001f954:	ret    
   14001f955:	int3   
   14001f956:	int3   
   14001f957:	int3   
   14001f958:	int3   
   14001f959:	int3   
   14001f95a:	int3   
   14001f95b:	int3   
   14001f95c:	int3   
   14001f95d:	int3   
   14001f95e:	int3   
   14001f95f:	int3   
   14001f960:	mov    rax,rcx
   14001f963:	ret    
   14001f964:	int3   
   14001f965:	int3   
   14001f966:	int3   
   14001f967:	int3   
   14001f968:	int3   
   14001f969:	int3   
   14001f96a:	int3   
   14001f96b:	int3   
   14001f96c:	int3   
   14001f96d:	int3   
   14001f96e:	int3   
   14001f96f:	int3   
   14001f970:	mov    al,0x1
   14001f972:	ret    
   14001f973:	int3   
   14001f974:	int3   
   14001f975:	int3   
   14001f976:	int3   
   14001f977:	int3   
   14001f978:	int3   
   14001f979:	int3   
   14001f97a:	int3   
   14001f97b:	int3   
   14001f97c:	int3   
   14001f97d:	int3   
   14001f97e:	int3   
   14001f97f:	int3   
   14001f980:	mov    al,0x1
   14001f982:	ret    
   14001f983:	int3   
   14001f984:	int3   
   14001f985:	int3   
   14001f986:	int3   
   14001f987:	int3   
   14001f988:	int3   
   14001f989:	int3   
   14001f98a:	int3   
   14001f98b:	int3   
   14001f98c:	int3   
   14001f98d:	int3   
   14001f98e:	int3   
   14001f98f:	int3   
   14001f990:	mov    al,0x1
   14001f992:	ret    
   14001f993:	int3   
   14001f994:	int3   
   14001f995:	int3   
   14001f996:	int3   
   14001f997:	int3   
   14001f998:	int3   
   14001f999:	int3   
   14001f99a:	int3   
   14001f99b:	int3   
   14001f99c:	int3   
   14001f99d:	int3   
   14001f99e:	int3   
   14001f99f:	int3   
   14001f9a0:	mov    al,0x1
   14001f9a2:	ret    
   14001f9a3:	int3   
   14001f9a4:	int3   
   14001f9a5:	int3   
   14001f9a6:	int3   
   14001f9a7:	int3   
   14001f9a8:	int3   
   14001f9a9:	int3   
   14001f9aa:	int3   
   14001f9ab:	int3   
   14001f9ac:	int3   
   14001f9ad:	int3   
   14001f9ae:	int3   
   14001f9af:	int3   
   14001f9b0:	xor    al,al
   14001f9b2:	ret    
   14001f9b3:	int3   
   14001f9b4:	int3   
   14001f9b5:	int3   
   14001f9b6:	int3   
   14001f9b7:	int3   
   14001f9b8:	int3   
   14001f9b9:	int3   
   14001f9ba:	int3   
   14001f9bb:	int3   
   14001f9bc:	int3   
   14001f9bd:	int3   
   14001f9be:	int3   
   14001f9bf:	int3   
   14001f9c0:	xor    al,al
   14001f9c2:	ret    
   14001f9c3:	int3   
   14001f9c4:	int3   
   14001f9c5:	int3   
   14001f9c6:	int3   
   14001f9c7:	int3   
   14001f9c8:	int3   
   14001f9c9:	int3   
   14001f9ca:	int3   
   14001f9cb:	int3   
   14001f9cc:	int3   
   14001f9cd:	int3   
   14001f9ce:	int3   
   14001f9cf:	int3   
   14001f9d0:	xor    al,al
   14001f9d2:	ret    
   14001f9d3:	int3   
   14001f9d4:	int3   
   14001f9d5:	int3   
   14001f9d6:	int3   
   14001f9d7:	int3   
   14001f9d8:	int3   
   14001f9d9:	int3   
   14001f9da:	int3   
   14001f9db:	int3   
   14001f9dc:	int3   
   14001f9dd:	int3   
   14001f9de:	int3   
   14001f9df:	int3   
   14001f9e0:	xor    al,al
   14001f9e2:	ret    
   14001f9e3:	int3   
   14001f9e4:	int3   
   14001f9e5:	int3   
   14001f9e6:	int3   
   14001f9e7:	int3   
   14001f9e8:	int3   
   14001f9e9:	int3   
   14001f9ea:	int3   
   14001f9eb:	int3   
   14001f9ec:	int3   
   14001f9ed:	int3   
   14001f9ee:	int3   
   14001f9ef:	int3   
   14001f9f0:	rex push rbx
   14001f9f2:	sub    rsp,0x30
   14001f9f6:	xor    r9d,r9d
   14001f9f9:	mov    rbx,rcx
   14001f9fc:	mov    DWORD PTR [rsp+0x20],0x0
   14001fa04:	call   QWORD PTR [rip+0x16b3e]        # 0x140036548
   14001fa0a:	mov    rax,rbx
   14001fa0d:	add    rsp,0x30
   14001fa11:	pop    rbx
   14001fa12:	ret    
   14001fa13:	int3   
   14001fa14:	int3   
   14001fa15:	int3   
   14001fa16:	int3   
   14001fa17:	int3   
   14001fa18:	int3   
   14001fa19:	int3   
   14001fa1a:	int3   
   14001fa1b:	int3   
   14001fa1c:	int3   
   14001fa1d:	int3   
   14001fa1e:	int3   
   14001fa1f:	int3   
   14001fa20:	rex push rbx
   14001fa22:	sub    rsp,0x40
   14001fa26:	mov    DWORD PTR [rsp+0x30],0x1
   14001fa2e:	lea    rax,[rip+0x355d3]        # 0x140055008
   14001fa35:	lea    r8,[rip+0x1b27c]        # 0x14003acb8
   14001fa3c:	mov    QWORD PTR [rsp+0x38],rax
   14001fa41:	lea    rdx,[rsp+0x30]
   14001fa46:	mov    rbx,rcx
   14001fa49:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14001fa4e:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   14001fa54:	mov    DWORD PTR [rsp+0x20],0x0
   14001fa5c:	call   0x140016bb0
   14001fa61:	lea    rax,[rip+0x1ad70]        # 0x14003a7d8
   14001fa68:	mov    QWORD PTR [rbx],rax
   14001fa6b:	mov    rax,rbx
   14001fa6e:	add    rsp,0x40
   14001fa72:	pop    rbx
   14001fa73:	ret    
   14001fa74:	int3   
   14001fa75:	int3   
   14001fa76:	int3   
   14001fa77:	int3   
   14001fa78:	int3   
   14001fa79:	int3   
   14001fa7a:	int3   
   14001fa7b:	int3   
   14001fa7c:	int3   
   14001fa7d:	int3   
   14001fa7e:	int3   
   14001fa7f:	int3   
   14001fa80:	rex push rbx
   14001fa82:	sub    rsp,0x40
   14001fa86:	mov    DWORD PTR [rsp+0x30],0x1
   14001fa8e:	lea    rax,[rip+0x35573]        # 0x140055008
   14001fa95:	lea    r8,[rip+0x1b20c]        # 0x14003aca8
   14001fa9c:	mov    QWORD PTR [rsp+0x38],rax
   14001faa1:	lea    rdx,[rsp+0x30]
   14001faa6:	mov    rbx,rcx
   14001faa9:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14001faae:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   14001fab4:	mov    DWORD PTR [rsp+0x20],0x0
   14001fabc:	call   0x140016bb0
   14001fac1:	lea    rax,[rip+0x1ad10]        # 0x14003a7d8
   14001fac8:	mov    QWORD PTR [rbx],rax
   14001facb:	mov    rax,rbx
   14001face:	add    rsp,0x40
   14001fad2:	pop    rbx
   14001fad3:	ret    
   14001fad4:	int3   
   14001fad5:	int3   
   14001fad6:	int3   
   14001fad7:	int3   
   14001fad8:	int3   
   14001fad9:	int3   
   14001fada:	int3   
   14001fadb:	int3   
   14001fadc:	int3   
   14001fadd:	int3   
   14001fade:	int3   
   14001fadf:	int3   
   14001fae0:	mov    rax,QWORD PTR [rcx+0x18]
   14001fae4:	ret    
   14001fae5:	int3   
   14001fae6:	int3   
   14001fae7:	int3   
   14001fae8:	int3   
   14001fae9:	int3   
   14001faea:	int3   
   14001faeb:	int3   
   14001faec:	int3   
   14001faed:	int3   
   14001faee:	int3   
   14001faef:	int3   
   14001faf0:	mov    rax,QWORD PTR [rcx+0x10]
   14001faf4:	sub    rax,QWORD PTR [rcx]
   14001faf7:	sar    rax,0x5
   14001fafb:	ret    
   14001fafc:	int3   
   14001fafd:	int3   
   14001fafe:	int3   
   14001faff:	int3   
   14001fb00:	mov    rax,rdx
   14001fb03:	ret    
   14001fb04:	int3   
   14001fb05:	int3   
   14001fb06:	int3   
   14001fb07:	int3   
   14001fb08:	int3   
   14001fb09:	int3   
   14001fb0a:	int3   
   14001fb0b:	int3   
   14001fb0c:	int3   
   14001fb0d:	int3   
   14001fb0e:	int3   
   14001fb0f:	int3   
   14001fb10:	mov    rax,QWORD PTR [rcx+0x8]
   14001fb14:	ret    
   14001fb15:	int3   
   14001fb16:	int3   
   14001fb17:	int3   
   14001fb18:	int3   
   14001fb19:	int3   
   14001fb1a:	int3   
   14001fb1b:	int3   
   14001fb1c:	int3   
   14001fb1d:	int3   
   14001fb1e:	int3   
   14001fb1f:	int3   
   14001fb20:	mov    rax,QWORD PTR [rcx+0x8]
   14001fb24:	ret    
   14001fb25:	int3   
   14001fb26:	int3   
   14001fb27:	int3   
   14001fb28:	int3   
   14001fb29:	int3   
   14001fb2a:	int3   
   14001fb2b:	int3   
   14001fb2c:	int3   
   14001fb2d:	int3   
   14001fb2e:	int3   
   14001fb2f:	int3   
   14001fb30:	mov    rax,QWORD PTR [rcx+0x8]
   14001fb34:	ret    
   14001fb35:	int3   
   14001fb36:	int3   
   14001fb37:	int3   
   14001fb38:	int3   
   14001fb39:	int3   
   14001fb3a:	int3   
   14001fb3b:	int3   
   14001fb3c:	int3   
   14001fb3d:	int3   
   14001fb3e:	int3   
   14001fb3f:	int3   
   14001fb40:	mov    rax,QWORD PTR [rcx+0x10]
   14001fb44:	ret    
   14001fb45:	int3   
   14001fb46:	int3   
   14001fb47:	int3   
   14001fb48:	int3   
   14001fb49:	int3   
   14001fb4a:	int3   
   14001fb4b:	int3   
   14001fb4c:	int3   
   14001fb4d:	int3   
   14001fb4e:	int3   
   14001fb4f:	int3   
   14001fb50:	mov    rax,QWORD PTR [rcx+0x20]
   14001fb54:	ret    
   14001fb55:	int3   
   14001fb56:	int3   
   14001fb57:	int3   
   14001fb58:	int3   
   14001fb59:	int3   
   14001fb5a:	int3   
   14001fb5b:	int3   
   14001fb5c:	int3   
   14001fb5d:	int3   
   14001fb5e:	int3   
   14001fb5f:	int3   
   14001fb60:	mov    rax,QWORD PTR [rcx+0x20]
   14001fb64:	ret    
   14001fb65:	int3   
   14001fb66:	int3   
   14001fb67:	int3   
   14001fb68:	int3   
   14001fb69:	int3   
   14001fb6a:	int3   
   14001fb6b:	int3   
   14001fb6c:	int3   
   14001fb6d:	int3   
   14001fb6e:	int3   
   14001fb6f:	int3   
   14001fb70:	or     rax,0xffffffffffffffff
   14001fb74:	test   rcx,rcx
   14001fb77:	cmovne rax,rcx
   14001fb7b:	ret    
   14001fb7c:	int3   
   14001fb7d:	int3   
   14001fb7e:	int3   
   14001fb7f:	int3   
   14001fb80:	mov    r9,QWORD PTR [rcx]
   14001fb83:	test   r9,r9
   14001fb86:	je     0x14001fb94
   14001fb88:	mov    r8d,0x2
   14001fb8e:	mov    rcx,rdx
   14001fb91:	rex.WB jmp r9
   14001fb94:	ret    
   14001fb95:	int3   
   14001fb96:	int3   
   14001fb97:	int3   
   14001fb98:	int3   
   14001fb99:	int3   
   14001fb9a:	int3   
   14001fb9b:	int3   
   14001fb9c:	int3   
   14001fb9d:	int3   
   14001fb9e:	int3   
   14001fb9f:	int3   
   14001fba0:	mov    r9,QWORD PTR [rcx]
   14001fba3:	test   r9,r9
   14001fba6:	je     0x14001fbb4
   14001fba8:	mov    r8d,0x2
   14001fbae:	mov    rcx,rdx
   14001fbb1:	rex.WB jmp r9
   14001fbb4:	ret    
   14001fbb5:	int3   
   14001fbb6:	int3   
   14001fbb7:	int3   
   14001fbb8:	int3   
   14001fbb9:	int3   
   14001fbba:	int3   
   14001fbbb:	int3   
   14001fbbc:	int3   
   14001fbbd:	int3   
   14001fbbe:	int3   
   14001fbbf:	int3   
   14001fbc0:	rex push rbx
   14001fbc2:	sub    rsp,0x20
   14001fbc6:	mov    rax,QWORD PTR [rcx]
   14001fbc9:	mov    rbx,rcx
   14001fbcc:	test   rax,rax
   14001fbcf:	je     0x14001fbf8
   14001fbd1:	test   al,0x1
   14001fbd3:	jne    0x14001fbf1
   14001fbd5:	and    rax,0xfffffffffffffffe
   14001fbd9:	add    rcx,0x8
   14001fbdd:	mov    r9,QWORD PTR [rax]
   14001fbe0:	test   r9,r9
   14001fbe3:	je     0x14001fbf1
   14001fbe5:	mov    r8d,0x2
   14001fbeb:	mov    rdx,rcx
   14001fbee:	call   r9
   14001fbf1:	mov    QWORD PTR [rbx],0x0
   14001fbf8:	add    rsp,0x20
   14001fbfc:	pop    rbx
   14001fbfd:	ret    
   14001fbfe:	int3   
   14001fbff:	int3   
   14001fc00:	rex push rbx
   14001fc02:	sub    rsp,0x20
   14001fc06:	mov    rax,QWORD PTR [rcx]
   14001fc09:	mov    rbx,rcx
   14001fc0c:	test   rax,rax
   14001fc0f:	je     0x14001fc38
   14001fc11:	test   al,0x1
   14001fc13:	jne    0x14001fc31
   14001fc15:	and    rax,0xfffffffffffffffe
   14001fc19:	add    rcx,0x8
   14001fc1d:	mov    r9,QWORD PTR [rax]
   14001fc20:	test   r9,r9
   14001fc23:	je     0x14001fc31
   14001fc25:	mov    r8d,0x2
   14001fc2b:	mov    rdx,rcx
   14001fc2e:	call   r9
   14001fc31:	mov    QWORD PTR [rbx],0x0
   14001fc38:	add    rsp,0x20
   14001fc3c:	pop    rbx
   14001fc3d:	ret    
   14001fc3e:	int3   
   14001fc3f:	int3   
   14001fc40:	rex push rdi
   14001fc42:	sub    rsp,0x20
   14001fc46:	mov    rax,QWORD PTR [rcx]
   14001fc49:	mov    rdi,rcx
   14001fc4c:	mov    rcx,QWORD PTR [rax]
   14001fc4f:	mov    QWORD PTR [rax],rax
   14001fc52:	mov    rax,QWORD PTR [rdi]
   14001fc55:	mov    QWORD PTR [rax+0x8],rax
   14001fc59:	mov    QWORD PTR [rdi+0x8],0x0
   14001fc61:	cmp    rcx,QWORD PTR [rdi]
   14001fc64:	je     0x14001fc85
   14001fc66:	mov    QWORD PTR [rsp+0x30],rbx
   14001fc6b:	nop    DWORD PTR [rax+rax*1+0x0]
   14001fc70:	mov    rbx,QWORD PTR [rcx]
   14001fc73:	call   0x140030282
   14001fc78:	mov    rcx,rbx
   14001fc7b:	cmp    rbx,QWORD PTR [rdi]
   14001fc7e:	jne    0x14001fc70
   14001fc80:	mov    rbx,QWORD PTR [rsp+0x30]
   14001fc85:	add    rsp,0x20
   14001fc89:	pop    rdi
   14001fc8a:	ret    
   14001fc8b:	int3   
   14001fc8c:	int3   
   14001fc8d:	int3   
   14001fc8e:	int3   
   14001fc8f:	int3   
   14001fc90:	mov    QWORD PTR [rsp+0x10],rbx
   14001fc95:	mov    QWORD PTR [rsp+0x18],rbp
   14001fc9a:	push   rsi
   14001fc9b:	sub    rsp,0x20
   14001fc9f:	mov    rax,QWORD PTR [rcx]
   14001fca2:	xor    ebp,ebp
   14001fca4:	mov    rsi,rcx
   14001fca7:	mov    rbx,QWORD PTR [rax]
   14001fcaa:	mov    QWORD PTR [rax],rax
   14001fcad:	mov    rax,QWORD PTR [rcx]
   14001fcb0:	mov    QWORD PTR [rax+0x8],rax
   14001fcb4:	mov    QWORD PTR [rcx+0x8],rbp
   14001fcb8:	cmp    rbx,QWORD PTR [rcx]
   14001fcbb:	je     0x14001fcfa
   14001fcbd:	mov    QWORD PTR [rsp+0x30],rdi
   14001fcc2:	cmp    QWORD PTR [rbx+0x28],0x10
   14001fcc7:	mov    rdi,QWORD PTR [rbx]
   14001fcca:	jb     0x14001fcd5
   14001fccc:	mov    rcx,QWORD PTR [rbx+0x10]
   14001fcd0:	call   0x140030282
   14001fcd5:	mov    QWORD PTR [rbx+0x28],0xf
   14001fcdd:	mov    QWORD PTR [rbx+0x20],rbp
   14001fce1:	mov    rcx,rbx
   14001fce4:	mov    BYTE PTR [rbx+0x10],bpl
   14001fce8:	call   0x140030282
   14001fced:	mov    rbx,rdi
   14001fcf0:	cmp    rdi,QWORD PTR [rsi]
   14001fcf3:	jne    0x14001fcc2
   14001fcf5:	mov    rdi,QWORD PTR [rsp+0x30]
   14001fcfa:	mov    rbx,QWORD PTR [rsp+0x38]
   14001fcff:	mov    rbp,QWORD PTR [rsp+0x40]
   14001fd04:	add    rsp,0x20
   14001fd08:	pop    rsi
   14001fd09:	ret    
   14001fd0a:	int3   
   14001fd0b:	int3   
   14001fd0c:	movsxd rax,DWORD PTR [rcx-0x4]
   14001fd10:	sub    rcx,rax
   14001fd13:	jmp    0x14001fd20
   14001fd18:	int3   
   14001fd19:	int3   
   14001fd1a:	int3   
   14001fd1b:	int3   
   14001fd1c:	int3   
   14001fd1d:	int3   
   14001fd1e:	int3   
   14001fd1f:	int3   
   14001fd20:	rex push rbx
   14001fd22:	sub    rsp,0x30
   14001fd26:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001fd2f:	mov    rbx,rcx
   14001fd32:	mov    ecx,0x58
   14001fd37:	call   0x14003027c
   14001fd3c:	mov    QWORD PTR [rsp+0x48],rax
   14001fd41:	test   rax,rax
   14001fd44:	je     0x14001fd61
   14001fd46:	xor    ecx,ecx
   14001fd48:	lea    rdx,[rbx-0x50]
   14001fd4c:	lea    r9d,[rcx+0x1]
   14001fd50:	movzx  r8d,cl
   14001fd54:	mov    rcx,rax
   14001fd57:	call   0x140011900
   14001fd5c:	mov    rdx,rax
   14001fd5f:	jmp    0x14001fd63
   14001fd61:	xor    edx,edx
   14001fd63:	test   rdx,rdx
   14001fd66:	jne    0x14001fd6c
   14001fd68:	xor    eax,eax
   14001fd6a:	jmp    0x14001fd7b
   14001fd6c:	mov    rax,QWORD PTR [rdx+0x40]
   14001fd70:	movsxd rcx,DWORD PTR [rax+0x4]
   14001fd74:	lea    rax,[rdx+0x40]
   14001fd78:	add    rax,rcx
   14001fd7b:	add    rsp,0x30
   14001fd7f:	pop    rbx
   14001fd80:	ret    
   14001fd81:	int3   
   14001fd82:	int3   
   14001fd83:	int3   
   14001fd84:	movsxd rax,DWORD PTR [rcx-0x4]
   14001fd88:	sub    rcx,rax
   14001fd8b:	jmp    0x14001fd90
   14001fd90:	rex push rbx
   14001fd92:	sub    rsp,0x30
   14001fd96:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001fd9f:	mov    rbx,rcx
   14001fda2:	mov    ecx,0x58
   14001fda7:	call   0x14003027c
   14001fdac:	mov    QWORD PTR [rsp+0x48],rax
   14001fdb1:	test   rax,rax
   14001fdb4:	je     0x14001fdd1
   14001fdb6:	xor    ecx,ecx
   14001fdb8:	lea    rdx,[rbx-0x50]
   14001fdbc:	lea    r9d,[rcx+0x1]
   14001fdc0:	movzx  r8d,cl
   14001fdc4:	mov    rcx,rax
   14001fdc7:	call   0x140011b10
   14001fdcc:	mov    rdx,rax
   14001fdcf:	jmp    0x14001fdd3
   14001fdd1:	xor    edx,edx
   14001fdd3:	test   rdx,rdx
   14001fdd6:	jne    0x14001fddc
   14001fdd8:	xor    eax,eax
   14001fdda:	jmp    0x14001fdeb
   14001fddc:	mov    rax,QWORD PTR [rdx+0x40]
   14001fde0:	movsxd rcx,DWORD PTR [rax+0x4]
   14001fde4:	lea    rax,[rdx+0x40]
   14001fde8:	add    rax,rcx
   14001fdeb:	add    rsp,0x30
   14001fdef:	pop    rbx
   14001fdf0:	ret    
   14001fdf1:	int3   
   14001fdf2:	int3   
   14001fdf3:	int3   
   14001fdf4:	movsxd rax,DWORD PTR [rcx-0x4]
   14001fdf8:	sub    rcx,rax
   14001fdfb:	jmp    0x14001fe00
   14001fe00:	rex push rbx
   14001fe02:	sub    rsp,0x30
   14001fe06:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001fe0f:	mov    rbx,rcx
   14001fe12:	mov    ecx,0x58
   14001fe17:	call   0x14003027c
   14001fe1c:	mov    QWORD PTR [rsp+0x48],rax
   14001fe21:	test   rax,rax
   14001fe24:	je     0x14001fe41
   14001fe26:	xor    ecx,ecx
   14001fe28:	lea    rdx,[rbx-0x50]
   14001fe2c:	lea    r9d,[rcx+0x1]
   14001fe30:	movzx  r8d,cl
   14001fe34:	mov    rcx,rax
   14001fe37:	call   0x140011d20
   14001fe3c:	mov    rdx,rax
   14001fe3f:	jmp    0x14001fe43
   14001fe41:	xor    edx,edx
   14001fe43:	test   rdx,rdx
   14001fe46:	jne    0x14001fe4c
   14001fe48:	xor    eax,eax
   14001fe4a:	jmp    0x14001fe5b
   14001fe4c:	mov    rax,QWORD PTR [rdx+0x40]
   14001fe50:	movsxd rcx,DWORD PTR [rax+0x4]
   14001fe54:	lea    rax,[rdx+0x40]
   14001fe58:	add    rax,rcx
   14001fe5b:	add    rsp,0x30
   14001fe5f:	pop    rbx
   14001fe60:	ret    
   14001fe61:	int3   
   14001fe62:	int3   
   14001fe63:	int3   
   14001fe64:	movsxd rax,DWORD PTR [rcx-0x4]
   14001fe68:	sub    rcx,rax
   14001fe6b:	jmp    0x14001fe70
   14001fe70:	rex push rbx
   14001fe72:	sub    rsp,0x30
   14001fe76:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001fe7f:	mov    rbx,rcx
   14001fe82:	mov    ecx,0x68
   14001fe87:	call   0x14003027c
   14001fe8c:	mov    QWORD PTR [rsp+0x48],rax
   14001fe91:	test   rax,rax
   14001fe94:	je     0x14001feb1
   14001fe96:	xor    ecx,ecx
   14001fe98:	lea    rdx,[rbx-0x60]
   14001fe9c:	lea    r9d,[rcx+0x1]
   14001fea0:	movzx  r8d,cl
   14001fea4:	mov    rcx,rax
   14001fea7:	call   0x140011f30
   14001feac:	mov    rdx,rax
   14001feaf:	jmp    0x14001feb3
   14001feb1:	xor    edx,edx
   14001feb3:	test   rdx,rdx
   14001feb6:	jne    0x14001febc
   14001feb8:	xor    eax,eax
   14001feba:	jmp    0x14001fecb
   14001febc:	mov    rax,QWORD PTR [rdx+0x50]
   14001fec0:	movsxd rcx,DWORD PTR [rax+0x4]
   14001fec4:	lea    rax,[rdx+0x50]
   14001fec8:	add    rax,rcx
   14001fecb:	add    rsp,0x30
   14001fecf:	pop    rbx
   14001fed0:	ret    
   14001fed1:	int3   
   14001fed2:	int3   
   14001fed3:	int3   
   14001fed4:	movsxd rax,DWORD PTR [rcx-0x4]
   14001fed8:	sub    rcx,rax
   14001fedb:	jmp    0x14001fee0
   14001fee0:	rex push rbx
   14001fee2:	sub    rsp,0x30
   14001fee6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001feef:	mov    rbx,rcx
   14001fef2:	mov    ecx,0x68
   14001fef7:	call   0x14003027c
   14001fefc:	mov    QWORD PTR [rsp+0x48],rax
   14001ff01:	test   rax,rax
   14001ff04:	je     0x14001ff21
   14001ff06:	xor    ecx,ecx
   14001ff08:	lea    rdx,[rbx-0x60]
   14001ff0c:	lea    r9d,[rcx+0x1]
   14001ff10:	movzx  r8d,cl
   14001ff14:	mov    rcx,rax
   14001ff17:	call   0x140012140
   14001ff1c:	mov    rdx,rax
   14001ff1f:	jmp    0x14001ff23
   14001ff21:	xor    edx,edx
   14001ff23:	test   rdx,rdx
   14001ff26:	jne    0x14001ff2c
   14001ff28:	xor    eax,eax
   14001ff2a:	jmp    0x14001ff3b
   14001ff2c:	mov    rax,QWORD PTR [rdx+0x50]
   14001ff30:	movsxd rcx,DWORD PTR [rax+0x4]
   14001ff34:	lea    rax,[rdx+0x50]
   14001ff38:	add    rax,rcx
   14001ff3b:	add    rsp,0x30
   14001ff3f:	pop    rbx
   14001ff40:	ret    
   14001ff41:	int3   
   14001ff42:	int3   
   14001ff43:	int3   
   14001ff44:	movsxd rax,DWORD PTR [rcx-0x4]
   14001ff48:	sub    rcx,rax
   14001ff4b:	jmp    0x14001ff50
   14001ff50:	rex push rbx
   14001ff52:	sub    rsp,0x30
   14001ff56:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001ff5f:	mov    rbx,rcx
   14001ff62:	mov    ecx,0x58
   14001ff67:	call   0x14003027c
   14001ff6c:	mov    QWORD PTR [rsp+0x48],rax
   14001ff71:	test   rax,rax
   14001ff74:	je     0x14001ff91
   14001ff76:	xor    ecx,ecx
   14001ff78:	lea    rdx,[rbx-0x50]
   14001ff7c:	lea    r9d,[rcx+0x1]
   14001ff80:	movzx  r8d,cl
   14001ff84:	mov    rcx,rax
   14001ff87:	call   0x140012350
   14001ff8c:	mov    rdx,rax
   14001ff8f:	jmp    0x14001ff93
   14001ff91:	xor    edx,edx
   14001ff93:	test   rdx,rdx
   14001ff96:	jne    0x14001ff9c
   14001ff98:	xor    eax,eax
   14001ff9a:	jmp    0x14001ffab
   14001ff9c:	mov    rax,QWORD PTR [rdx+0x40]
   14001ffa0:	movsxd rcx,DWORD PTR [rax+0x4]
   14001ffa4:	lea    rax,[rdx+0x40]
   14001ffa8:	add    rax,rcx
   14001ffab:	add    rsp,0x30
   14001ffaf:	pop    rbx
   14001ffb0:	ret    
   14001ffb1:	int3   
   14001ffb2:	int3   
   14001ffb3:	int3   
   14001ffb4:	movsxd rax,DWORD PTR [rcx-0x4]
   14001ffb8:	sub    rcx,rax
   14001ffbb:	jmp    0x14001ffc0
   14001ffc0:	rex push rbx
   14001ffc2:	sub    rsp,0x30
   14001ffc6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001ffcf:	mov    rbx,rcx
   14001ffd2:	mov    ecx,0x58
   14001ffd7:	call   0x14003027c
   14001ffdc:	mov    QWORD PTR [rsp+0x48],rax
   14001ffe1:	test   rax,rax
   14001ffe4:	je     0x140020001
   14001ffe6:	xor    ecx,ecx
   14001ffe8:	lea    rdx,[rbx-0x50]
   14001ffec:	lea    r9d,[rcx+0x1]
   14001fff0:	movzx  r8d,cl
   14001fff4:	mov    rcx,rax
   14001fff7:	call   0x140012560
   14001fffc:	mov    rdx,rax
   14001ffff:	jmp    0x140020003
   140020001:	xor    edx,edx
   140020003:	test   rdx,rdx
   140020006:	jne    0x14002000c
   140020008:	xor    eax,eax
   14002000a:	jmp    0x14002001b
   14002000c:	mov    rax,QWORD PTR [rdx+0x40]
   140020010:	movsxd rcx,DWORD PTR [rax+0x4]
   140020014:	lea    rax,[rdx+0x40]
   140020018:	add    rax,rcx
   14002001b:	add    rsp,0x30
   14002001f:	pop    rbx
   140020020:	ret    
   140020021:	int3   
   140020022:	int3   
   140020023:	int3   
   140020024:	movsxd rax,DWORD PTR [rcx-0x4]
   140020028:	sub    rcx,rax
   14002002b:	jmp    0x140020030
   140020030:	rex push rbx
   140020032:	sub    rsp,0x30
   140020036:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002003f:	mov    rbx,rcx
   140020042:	mov    ecx,0x60
   140020047:	call   0x14003027c
   14002004c:	mov    QWORD PTR [rsp+0x48],rax
   140020051:	test   rax,rax
   140020054:	je     0x140020071
   140020056:	xor    ecx,ecx
   140020058:	lea    rdx,[rbx-0x58]
   14002005c:	lea    r9d,[rcx+0x1]
   140020060:	movzx  r8d,cl
   140020064:	mov    rcx,rax
   140020067:	call   0x140012770
   14002006c:	mov    rdx,rax
   14002006f:	jmp    0x140020073
   140020071:	xor    edx,edx
   140020073:	test   rdx,rdx
   140020076:	jne    0x14002007c
   140020078:	xor    eax,eax
   14002007a:	jmp    0x14002008b
   14002007c:	mov    rax,QWORD PTR [rdx+0x48]
   140020080:	movsxd rcx,DWORD PTR [rax+0x4]
   140020084:	lea    rax,[rdx+0x48]
   140020088:	add    rax,rcx
   14002008b:	add    rsp,0x30
   14002008f:	pop    rbx
   140020090:	ret    
   140020091:	int3   
   140020092:	int3   
   140020093:	int3   
   140020094:	movsxd rax,DWORD PTR [rcx-0x4]
   140020098:	sub    rcx,rax
   14002009b:	jmp    0x1400200a0
   1400200a0:	rex push rbx
   1400200a2:	sub    rsp,0x30
   1400200a6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400200af:	mov    rbx,rcx
   1400200b2:	mov    ecx,0x60
   1400200b7:	call   0x14003027c
   1400200bc:	mov    QWORD PTR [rsp+0x48],rax
   1400200c1:	test   rax,rax
   1400200c4:	je     0x1400200e1
   1400200c6:	xor    ecx,ecx
   1400200c8:	lea    rdx,[rbx-0x58]
   1400200cc:	lea    r9d,[rcx+0x1]
   1400200d0:	movzx  r8d,cl
   1400200d4:	mov    rcx,rax
   1400200d7:	call   0x140012980
   1400200dc:	mov    rdx,rax
   1400200df:	jmp    0x1400200e3
   1400200e1:	xor    edx,edx
   1400200e3:	test   rdx,rdx
   1400200e6:	jne    0x1400200ec
   1400200e8:	xor    eax,eax
   1400200ea:	jmp    0x1400200fb
   1400200ec:	mov    rax,QWORD PTR [rdx+0x48]
   1400200f0:	movsxd rcx,DWORD PTR [rax+0x4]
   1400200f4:	lea    rax,[rdx+0x48]
   1400200f8:	add    rax,rcx
   1400200fb:	add    rsp,0x30
   1400200ff:	pop    rbx
   140020100:	ret    
   140020101:	int3   
   140020102:	int3   
   140020103:	int3   
   140020104:	movsxd rax,DWORD PTR [rcx-0x4]
   140020108:	sub    rcx,rax
   14002010b:	jmp    0x140020110
   140020110:	rex push rbx
   140020112:	sub    rsp,0x30
   140020116:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002011f:	mov    rbx,rcx
   140020122:	mov    ecx,0x58
   140020127:	call   0x14003027c
   14002012c:	mov    QWORD PTR [rsp+0x48],rax
   140020131:	test   rax,rax
   140020134:	je     0x140020151
   140020136:	xor    ecx,ecx
   140020138:	lea    rdx,[rbx-0x50]
   14002013c:	lea    r9d,[rcx+0x1]
   140020140:	movzx  r8d,cl
   140020144:	mov    rcx,rax
   140020147:	call   0x140012b90
   14002014c:	mov    rdx,rax
   14002014f:	jmp    0x140020153
   140020151:	xor    edx,edx
   140020153:	test   rdx,rdx
   140020156:	jne    0x14002015c
   140020158:	xor    eax,eax
   14002015a:	jmp    0x14002016b
   14002015c:	mov    rax,QWORD PTR [rdx+0x40]
   140020160:	movsxd rcx,DWORD PTR [rax+0x4]
   140020164:	lea    rax,[rdx+0x40]
   140020168:	add    rax,rcx
   14002016b:	add    rsp,0x30
   14002016f:	pop    rbx
   140020170:	ret    
   140020171:	int3   
   140020172:	int3   
   140020173:	int3   
   140020174:	movsxd rax,DWORD PTR [rcx-0x4]
   140020178:	sub    rcx,rax
   14002017b:	jmp    0x140020180
   140020180:	rex push rbx
   140020182:	sub    rsp,0x30
   140020186:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002018f:	mov    rbx,rcx
   140020192:	mov    ecx,0xa0
   140020197:	call   0x14003027c
   14002019c:	mov    QWORD PTR [rsp+0x48],rax
   1400201a1:	test   rax,rax
   1400201a4:	je     0x1400201c4
   1400201a6:	xor    ecx,ecx
   1400201a8:	lea    rdx,[rbx-0x98]
   1400201af:	lea    r9d,[rcx+0x1]
   1400201b3:	movzx  r8d,cl
   1400201b7:	mov    rcx,rax
   1400201ba:	call   0x140012da0
   1400201bf:	mov    rdx,rax
   1400201c2:	jmp    0x1400201c6
   1400201c4:	xor    edx,edx
   1400201c6:	test   rdx,rdx
   1400201c9:	jne    0x1400201cf
   1400201cb:	xor    eax,eax
   1400201cd:	jmp    0x1400201e4
   1400201cf:	mov    rax,QWORD PTR [rdx+0x88]
   1400201d6:	movsxd rcx,DWORD PTR [rax+0x4]
   1400201da:	lea    rax,[rdx+0x88]
   1400201e1:	add    rax,rcx
   1400201e4:	add    rsp,0x30
   1400201e8:	pop    rbx
   1400201e9:	ret    
   1400201ea:	int3   
   1400201eb:	int3   
   1400201ec:	int3   
   1400201ed:	int3   
   1400201ee:	int3   
   1400201ef:	int3   
   1400201f0:	mov    QWORD PTR [rsp+0x8],rcx
   1400201f5:	push   rbx
   1400201f6:	push   rsi
   1400201f7:	push   rdi
   1400201f8:	sub    rsp,0x30
   1400201fc:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140020205:	mov    rsi,rdx
   140020208:	mov    rbx,rcx
   14002020b:	mov    r8,QWORD PTR [rcx+0x20]
   14002020f:	mov    rax,QWORD PTR [rcx+0x28]
   140020213:	add    rax,rax
   140020216:	mov    QWORD PTR [r8+rax*8],rdx
   14002021a:	mov    ecx,0x70
   14002021f:	call   0x14003027c
   140020224:	mov    rdx,rax
   140020227:	test   rax,rax
   14002022a:	jne    0x140020233
   14002022c:	call   QWORD PTR [rip+0x15fe6]        # 0x140036218
   140020232:	int3   
   140020233:	mov    rcx,QWORD PTR [rbx+0x20]
   140020237:	mov    rax,QWORD PTR [rbx+0x28]
   14002023b:	add    rax,rax
   14002023e:	mov    QWORD PTR [rcx+rax*8+0x8],rdx
   140020243:	mov    rcx,QWORD PTR [rbx+0x20]
   140020247:	mov    rax,QWORD PTR [rbx+0x28]
   14002024b:	add    rax,rax
   14002024e:	mov    rdi,QWORD PTR [rcx+rax*8+0x8]
   140020253:	mov    QWORD PTR [rsp+0x58],rdi
   140020258:	mov    QWORD PTR [rsp+0x60],rdi
   14002025d:	test   rdi,rdi
   140020260:	je     0x140020296
   140020262:	mov    QWORD PTR [rdi+0x18],0xf
   14002026a:	mov    QWORD PTR [rdi+0x10],0x0
   140020272:	mov    BYTE PTR [rdi],0x0
   140020275:	or     r9,0xffffffffffffffff
   140020279:	xor    r8d,r8d
   14002027c:	mov    rdx,rsi
   14002027f:	mov    rcx,rdi
   140020282:	call   0x14001ef20
   140020287:	nop
   140020288:	lea    rdx,[rsi+0x20]
   14002028c:	lea    rcx,[rdi+0x20]
   140020290:	call   0x140010e10
   140020295:	nop
   140020296:	inc    QWORD PTR [rbx+0x28]
   14002029a:	mov    rdx,QWORD PTR [rbx+0x8]
   14002029e:	cmp    QWORD PTR [rbx+0x28],rdx
   1400202a2:	jne    0x1400202c4
   1400202a4:	mov    rcx,QWORD PTR [rbx+0x20]
   1400202a8:	shl    rdx,0x4
   1400202ac:	add    rdx,rcx
   1400202af:	xor    eax,eax
   1400202b1:	mov    r8,rdx
   1400202b4:	sub    r8,rcx
   1400202b7:	sar    r8,0x4
   1400202bb:	movzx  r9d,al
   1400202bf:	call   0x1400050e0
   1400202c4:	add    rsp,0x30
   1400202c8:	pop    rdi
   1400202c9:	pop    rsi
   1400202ca:	pop    rbx
   1400202cb:	ret    
   1400202cc:	int3   
   1400202cd:	int3   
   1400202ce:	int3   
   1400202cf:	int3   
   1400202d0:	rex push rdi
   1400202d2:	sub    rsp,0x30
   1400202d6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400202df:	mov    QWORD PTR [rsp+0x40],rbx
   1400202e4:	mov    rdi,rcx
   1400202e7:	mov    ecx,0x28
   1400202ec:	call   0x14003027c
   1400202f1:	mov    rbx,rax
   1400202f4:	mov    QWORD PTR [rsp+0x48],rax
   1400202f9:	test   rax,rax
   1400202fc:	je     0x140020335
   1400202fe:	lea    rax,[rip+0x1f663]        # 0x14003f968
   140020305:	mov    QWORD PTR [rbx],rax
   140020308:	lea    rcx,[rbx+0x8]
   14002030c:	mov    QWORD PTR [rcx+0x18],0xf
   140020314:	mov    QWORD PTR [rcx+0x10],0x0
   14002031c:	mov    BYTE PTR [rcx],0x0
   14002031f:	lea    rdx,[rdi+0x8]
   140020323:	or     r9,0xffffffffffffffff
   140020327:	xor    r8d,r8d
   14002032a:	call   0x14001ef20
   14002032f:	nop
   140020330:	mov    rax,rbx
   140020333:	jmp    0x140020337
   140020335:	xor    eax,eax
   140020337:	mov    rbx,QWORD PTR [rsp+0x40]
   14002033c:	add    rsp,0x30
   140020340:	pop    rdi
   140020341:	ret    
   140020342:	int3   
   140020343:	int3   
   140020344:	int3   
   140020345:	int3   
   140020346:	int3   
   140020347:	int3   
   140020348:	int3   
   140020349:	int3   
   14002034a:	int3   
   14002034b:	int3   
   14002034c:	int3   
   14002034d:	int3   
   14002034e:	int3   
   14002034f:	int3   
   140020350:	rex push rbx
   140020352:	sub    rsp,0x30
   140020356:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002035f:	mov    rbx,rcx
   140020362:	mov    ecx,0x38
   140020367:	call   0x14003027c
   14002036c:	mov    QWORD PTR [rsp+0x48],rax
   140020371:	test   rax,rax
   140020374:	je     0x140020385
   140020376:	lea    rdx,[rbx+0x8]
   14002037a:	mov    rcx,rax
   14002037d:	call   0x140013fb0
   140020382:	nop
   140020383:	jmp    0x140020387
   140020385:	xor    eax,eax
   140020387:	add    rsp,0x30
   14002038b:	pop    rbx
   14002038c:	ret    
   14002038d:	int3   
   14002038e:	int3   
   14002038f:	int3   
   140020390:	mov    QWORD PTR [rsp+0x8],rbx
   140020395:	mov    QWORD PTR [rsp+0x10],rsi
   14002039a:	push   rdi
   14002039b:	sub    rsp,0x20
   14002039f:	cmp    QWORD PTR [rcx+0x90],0x0
   1400203a7:	mov    rbx,rcx
   1400203aa:	jne    0x1400203b2
   1400203ac:	xor    edi,edi
   1400203ae:	mov    esi,edi
   1400203b0:	jmp    0x1400203d5
   1400203b2:	call   0x14001c790
   1400203b7:	mov    rcx,QWORD PTR [rbx+0x90]
   1400203be:	xor    edi,edi
   1400203c0:	test   al,al
   1400203c2:	mov    rsi,rbx
   1400203c5:	cmove  rsi,rdi
   1400203c9:	call   QWORD PTR [rip+0x160f9]        # 0x1400364c8
   1400203cf:	test   eax,eax
   1400203d1:	cmovne rsi,rdi
   1400203d5:	mov    rcx,rbx
   1400203d8:	mov    BYTE PTR [rbx+0x88],0x0
   1400203df:	mov    BYTE PTR [rbx+0x81],0x0
   1400203e6:	call   QWORD PTR [rip+0x15dbc]        # 0x1400361a8
   1400203ec:	mov    QWORD PTR [rbx+0x90],rdi
   1400203f3:	mov    ecx,DWORD PTR [rip+0x375c7]        # 0x1400579c0
   1400203f9:	mov    DWORD PTR [rbx+0x84],ecx
   1400203ff:	mov    QWORD PTR [rbx+0x78],rdi
   140020403:	mov    rbx,QWORD PTR [rsp+0x30]
   140020408:	mov    rax,rsi
   14002040b:	mov    rsi,QWORD PTR [rsp+0x38]
   140020410:	add    rsp,0x20
   140020414:	pop    rdi
   140020415:	ret    
   140020416:	int3   
   140020417:	int3   
   140020418:	int3   
   140020419:	int3   
   14002041a:	int3   
   14002041b:	int3   
   14002041c:	int3   
   14002041d:	int3   
   14002041e:	int3   
   14002041f:	int3   
   140020420:	ret    0x0
   140020423:	int3   
   140020424:	int3   
   140020425:	int3   
   140020426:	int3   
   140020427:	int3   
   140020428:	int3   
   140020429:	int3   
   14002042a:	int3   
   14002042b:	int3   
   14002042c:	int3   
   14002042d:	int3   
   14002042e:	int3   
   14002042f:	int3   
   140020430:	cmp    edx,0x1
   140020433:	jne    0x14002044c
   140020435:	mov    eax,DWORD PTR [rcx+0x68]
   140020438:	test   al,0x2
   14002043a:	jne    0x140020468
   14002043c:	or     eax,0x2
   14002043f:	mov    DWORD PTR [rcx+0x68],eax
   140020442:	mov    rax,QWORD PTR [rcx]
   140020445:	rex.W jmp QWORD PTR [rax+0x80]
   14002044c:	cmp    edx,0x2
   14002044f:	jne    0x140020468
   140020451:	mov    eax,DWORD PTR [rcx+0x68]
   140020454:	test   al,0x4
   140020456:	jne    0x140020468
   140020458:	or     eax,0x4
   14002045b:	mov    DWORD PTR [rcx+0x68],eax
   14002045e:	mov    rax,QWORD PTR [rcx]
   140020461:	rex.W jmp QWORD PTR [rax+0x80]
   140020468:	ret    
   140020469:	int3   
   14002046a:	int3   
   14002046b:	int3   
   14002046c:	int3   
   14002046d:	int3   
   14002046e:	int3   
   14002046f:	int3   
   140020470:	mov    rax,rsp
   140020473:	sub    rsp,0x48
   140020477:	mov    QWORD PTR [rax-0x28],rcx
   14002047b:	mov    DWORD PTR [rax-0x20],0x2
   140020482:	movaps xmm0,XMMWORD PTR [rax-0x28]
   140020486:	mov    QWORD PTR [rax-0x28],rcx
   14002048a:	mov    DWORD PTR [rax-0x20],0x1
   140020491:	movdqa XMMWORD PTR [rax-0x18],xmm0
   140020496:	movaps xmm0,XMMWORD PTR [rax-0x28]
   14002049a:	lea    r9,[rcx+0xa8]
   1400204a1:	lea    r8,[rcx+0x70]
   1400204a5:	lea    rdx,[rax-0x18]
   1400204a9:	movdqa XMMWORD PTR [rax-0x28],xmm0
   1400204ae:	lea    rcx,[rax-0x28]
   1400204b2:	call   0x140008c10
   1400204b7:	add    rsp,0x48
   1400204bb:	ret    
   1400204bc:	int3   
   1400204bd:	int3   
   1400204be:	int3   
   1400204bf:	int3   
   1400204c0:	mov    rax,rsp
   1400204c3:	sub    rsp,0x48
   1400204c7:	mov    QWORD PTR [rax-0x28],rcx
   1400204cb:	mov    DWORD PTR [rax-0x20],0x2
   1400204d2:	movaps xmm0,XMMWORD PTR [rax-0x28]
   1400204d6:	mov    QWORD PTR [rax-0x28],rcx
   1400204da:	mov    DWORD PTR [rax-0x20],0x1
   1400204e1:	movdqa XMMWORD PTR [rax-0x18],xmm0
   1400204e6:	movaps xmm0,XMMWORD PTR [rax-0x28]
   1400204ea:	lea    r9,[rcx+0xa8]
   1400204f1:	lea    r8,[rcx+0x70]
   1400204f5:	lea    rdx,[rax-0x18]
   1400204f9:	movdqa XMMWORD PTR [rax-0x28],xmm0
   1400204fe:	lea    rcx,[rax-0x28]
   140020502:	call   0x140008cf0
   140020507:	add    rsp,0x48
   14002050b:	ret    
   14002050c:	int3   
   14002050d:	int3   
   14002050e:	int3   
   14002050f:	int3   
   140020510:	mov    rax,rsp
   140020513:	sub    rsp,0x48
   140020517:	mov    QWORD PTR [rax-0x28],rcx
   14002051b:	mov    DWORD PTR [rax-0x20],0x2
   140020522:	movaps xmm0,XMMWORD PTR [rax-0x28]
   140020526:	mov    QWORD PTR [rax-0x28],rcx
   14002052a:	mov    DWORD PTR [rax-0x20],0x1
   140020531:	movdqa XMMWORD PTR [rax-0x18],xmm0
   140020536:	movaps xmm0,XMMWORD PTR [rax-0x28]
   14002053a:	lea    r9,[rcx+0x98]
   140020541:	lea    r8,[rcx+0x70]
   140020545:	lea    rdx,[rax-0x18]
   140020549:	movdqa XMMWORD PTR [rax-0x28],xmm0
   14002054e:	lea    rcx,[rax-0x28]
   140020552:	call   0x140008d90
   140020557:	add    rsp,0x48
   14002055b:	ret    
   14002055c:	int3   
   14002055d:	int3   
   14002055e:	int3   
   14002055f:	int3   
   140020560:	mov    rax,rsp
   140020563:	sub    rsp,0x48
   140020567:	mov    QWORD PTR [rax-0x28],rcx
   14002056b:	mov    DWORD PTR [rax-0x20],0x2
   140020572:	movaps xmm0,XMMWORD PTR [rax-0x28]
   140020576:	mov    QWORD PTR [rax-0x28],rcx
   14002057a:	mov    DWORD PTR [rax-0x20],0x1
   140020581:	movdqa XMMWORD PTR [rax-0x18],xmm0
   140020586:	movaps xmm0,XMMWORD PTR [rax-0x28]
   14002058a:	lea    r9,[rcx+0xa0]
   140020591:	lea    r8,[rcx+0x70]
   140020595:	lea    rdx,[rax-0x18]
   140020599:	movdqa XMMWORD PTR [rax-0x28],xmm0
   14002059e:	lea    rcx,[rax-0x28]
   1400205a2:	call   0x140008e30
   1400205a7:	add    rsp,0x48
   1400205ab:	ret    
   1400205ac:	int3   
   1400205ad:	int3   
   1400205ae:	int3   
   1400205af:	int3   
   1400205b0:	cmp    edx,0x1
   1400205b3:	jne    0x1400205cc
   1400205b5:	mov    eax,DWORD PTR [rcx+0x68]
   1400205b8:	test   al,0x2
   1400205ba:	jne    0x1400205e8
   1400205bc:	or     eax,0x2
   1400205bf:	mov    DWORD PTR [rcx+0x68],eax
   1400205c2:	mov    rax,QWORD PTR [rcx]
   1400205c5:	rex.W jmp QWORD PTR [rax+0x80]
   1400205cc:	cmp    edx,0x2
   1400205cf:	jne    0x1400205e8
   1400205d1:	mov    eax,DWORD PTR [rcx+0x68]
   1400205d4:	test   al,0x4
   1400205d6:	jne    0x1400205e8
   1400205d8:	or     eax,0x4
   1400205db:	mov    DWORD PTR [rcx+0x68],eax
   1400205de:	mov    rax,QWORD PTR [rcx]
   1400205e1:	rex.W jmp QWORD PTR [rax+0x80]
   1400205e8:	ret    
   1400205e9:	int3   
   1400205ea:	int3   
   1400205eb:	int3   
   1400205ec:	int3   
   1400205ed:	int3   
   1400205ee:	int3   
   1400205ef:	int3   
   1400205f0:	jmp    0x140006e30
   1400205f5:	int3   
   1400205f6:	int3   
   1400205f7:	int3   
   1400205f8:	int3   
   1400205f9:	int3   
   1400205fa:	int3   
   1400205fb:	int3   
   1400205fc:	int3   
   1400205fd:	int3   
   1400205fe:	int3   
   1400205ff:	int3   
   140020600:	mov    r8b,0x1
   140020603:	movzx  edx,r8b
   140020607:	rex.W jmp QWORD PTR [rip+0x15f9a]        # 0x1400365a8
   14002060e:	int3   
   14002060f:	int3   
   140020610:	mov    r8b,0x1
   140020613:	xor    edx,edx
   140020615:	mov    BYTE PTR [rcx+0x20],0x0
   140020619:	rex.W jmp QWORD PTR [rip+0x15f88]        # 0x1400365a8
   140020620:	mov    QWORD PTR [rsp+0x8],rcx
   140020625:	push   rbx
   140020626:	sub    rsp,0xd0
   14002062d:	mov    QWORD PTR [rsp+0xc0],0xfffffffffffffffe
   140020639:	mov    rbx,rcx
   14002063c:	mov    eax,DWORD PTR [rcx+0x30]
   14002063f:	test   al,0x2
   140020641:	je     0x14002078e
   140020647:	and    eax,0xfffffffd
   14002064a:	mov    DWORD PTR [rcx+0x30],eax
   14002064d:	lea    rcx,[rsp+0x20]
   140020652:	call   QWORD PTR [rip+0x15ba0]        # 0x1400361f8
   140020658:	xor    eax,eax
   14002065a:	mov    DWORD PTR [rsp+0x88],eax
   140020661:	mov    BYTE PTR [rsp+0x91],al
   140020668:	mov    QWORD PTR [rsp+0x98],rax
   140020670:	xorps  xmm0,xmm0
   140020673:	movdqa XMMWORD PTR [rsp+0xa0],xmm0
   14002067c:	mov    QWORD PTR [rsp+0xb0],rax
   140020684:	mov    DWORD PTR [rsp+0xb8],0x4
   14002068f:	lea    rax,[rip+0x1ec42]        # 0x14003f2d8
   140020696:	mov    QWORD PTR [rsp+0x20],rax
   14002069b:	test   BYTE PTR [rbx+0x30],0x1
   14002069f:	jne    0x14002073c
   1400206a5:	mov    QWORD PTR [rsp+0xb0],0x4
   1400206b1:	mov    ecx,0x1004
   1400206b6:	call   0x14003027c
   1400206bb:	test   rax,rax
   1400206be:	je     0x140020735
   1400206c0:	mov    QWORD PTR [rsp+0xa8],0x1004
   1400206cc:	mov    rcx,QWORD PTR [rsp+0xa0]
   1400206d4:	mov    QWORD PTR [rsp+0xa0],rax
   1400206dc:	test   rcx,rcx
   1400206df:	je     0x1400206e6
   1400206e1:	call   0x140030282
   1400206e6:	lea    rcx,[rsp+0x20]
   1400206eb:	mov    rax,QWORD PTR [rsp+0x20]
   1400206f0:	call   QWORD PTR [rax+0xb0]
   1400206f6:	movzx  eax,BYTE PTR [rsp+0xe0]
   1400206fe:	mov    BYTE PTR [rsp+0x90],al
   140020705:	mov    BYTE PTR [rsp+0x91],0x1
   14002070d:	or     DWORD PTR [rsp+0xb8],0x1
   140020715:	and    DWORD PTR [rsp+0x88],0xfffffff8
   14002071d:	mov    rax,QWORD PTR [rbx]
   140020720:	mov    rax,QWORD PTR [rax+0x8]
   140020724:	mov    rcx,QWORD PTR [rax+0x10]
   140020728:	mov    rax,QWORD PTR [rcx]
   14002072b:	lea    rdx,[rsp+0x20]
   140020730:	call   QWORD PTR [rax+0x78]
   140020733:	jmp    0x14002073c
   140020735:	call   QWORD PTR [rip+0x15add]        # 0x140036218
   14002073b:	int3   
   14002073c:	mov    rcx,QWORD PTR [rbx]
   14002073f:	mov    rcx,QWORD PTR [rcx]
   140020742:	mov    rcx,QWORD PTR [rcx+0x10]
   140020746:	call   QWORD PTR [rip+0x15a8c]        # 0x1400361d8
   14002074c:	nop
   14002074d:	mov    rdx,QWORD PTR [rbx]
   140020750:	mov    r9d,0x1
   140020756:	mov    r8,QWORD PTR [rdx]
   140020759:	lea    rcx,[rsp+0xe8]
   140020761:	call   0x140008f30
   140020766:	nop
   140020767:	mov    rdx,QWORD PTR [rbx]
   14002076a:	mov    r9d,0x2
   140020770:	mov    r8,rdx
   140020773:	mov    rdx,QWORD PTR [rdx]
   140020776:	lea    rcx,[rsp+0xe0]
   14002077e:	call   0x140008e80
   140020783:	nop
   140020784:	lea    rcx,[rsp+0x20]
   140020789:	call   0x140018800
   14002078e:	add    rsp,0xd0
   140020795:	pop    rbx
   140020796:	ret    
   140020797:	int3   
   140020798:	int3   
   140020799:	int3   
   14002079a:	int3   
   14002079b:	int3   
   14002079c:	int3   
   14002079d:	int3   
   14002079e:	int3   
   14002079f:	int3   
   1400207a0:	sub    rsp,0x28
   1400207a4:	cmp    edx,0x1
   1400207a7:	jne    0x1400207da
   1400207a9:	mov    rax,QWORD PTR [rcx+0x18]
   1400207ad:	xor    edx,edx
   1400207af:	add    rcx,0x70
   1400207b3:	mov    QWORD PTR [rax],rdx
   1400207b6:	mov    rax,QWORD PTR [rcx-0x38]
   1400207ba:	lea    r8d,[rdx+0x1]
   1400207be:	mov    QWORD PTR [rax],rdx
   1400207c1:	mov    rax,QWORD PTR [rcx-0x20]
   1400207c5:	mov    DWORD PTR [rax],edx
   1400207c7:	mov    rax,QWORD PTR [rcx+0x18]
   1400207cb:	lea    rdx,[rsp+0x40]
   1400207d0:	mov    QWORD PTR [rsp+0x40],rax
   1400207d5:	call   0x140006a10
   1400207da:	add    rsp,0x28
   1400207de:	ret    
   1400207df:	int3   
   1400207e0:	sub    rsp,0x28
   1400207e4:	cmp    edx,0x1
   1400207e7:	jne    0x14002081a
   1400207e9:	mov    rax,QWORD PTR [rcx+0x18]
   1400207ed:	xor    edx,edx
   1400207ef:	add    rcx,0x70
   1400207f3:	mov    QWORD PTR [rax],rdx
   1400207f6:	mov    rax,QWORD PTR [rcx-0x38]
   1400207fa:	lea    r8d,[rdx+0x1]
   1400207fe:	mov    QWORD PTR [rax],rdx
   140020801:	mov    rax,QWORD PTR [rcx-0x20]
   140020805:	mov    DWORD PTR [rax],edx
   140020807:	mov    rax,QWORD PTR [rcx+0x18]
   14002080b:	lea    rdx,[rsp+0x40]
   140020810:	mov    QWORD PTR [rsp+0x40],rax
   140020815:	call   0x140006b60
   14002081a:	add    rsp,0x28
   14002081e:	ret    
   14002081f:	int3   
   140020820:	cmp    edx,0x1
   140020823:	jne    0x14002083c
   140020825:	mov    rax,QWORD PTR [rcx+0x18]
   140020829:	xor    edx,edx
   14002082b:	mov    QWORD PTR [rax],rdx
   14002082e:	mov    rax,QWORD PTR [rcx+0x38]
   140020832:	mov    QWORD PTR [rax],rdx
   140020835:	mov    rax,QWORD PTR [rcx+0x50]
   140020839:	mov    DWORD PTR [rax],edx
   14002083b:	ret    
   14002083c:	cmp    edx,0x3
   14002083f:	jne    0x14002084a
   140020841:	add    rcx,0x70
   140020845:	jmp    0x140006df0
   14002084a:	ret    
   14002084b:	int3   
   14002084c:	int3   
   14002084d:	int3   
   14002084e:	int3   
   14002084f:	int3   
   140020850:	cmp    edx,0x1
   140020853:	jne    0x14002086d
   140020855:	mov    rax,QWORD PTR [rcx+0x18]
   140020859:	xor    r8d,r8d
   14002085c:	mov    QWORD PTR [rax],r8
   14002085f:	mov    rax,QWORD PTR [rcx+0x38]
   140020863:	mov    QWORD PTR [rax],r8
   140020866:	mov    rax,QWORD PTR [rcx+0x50]
   14002086a:	mov    DWORD PTR [rax],r8d
   14002086d:	add    rcx,0x70
   140020871:	cmp    edx,0x3
   140020874:	je     0x140006e10
   14002087a:	cmp    edx,0x1
   14002087d:	je     0x140006e30
   140020883:	ret    
   140020884:	int3   
   140020885:	int3   
   140020886:	int3   
   140020887:	int3   
   140020888:	int3   
   140020889:	int3   
   14002088a:	int3   
   14002088b:	int3   
   14002088c:	int3   
   14002088d:	int3   
   14002088e:	int3   
   14002088f:	int3   
   140020890:	mov    rax,QWORD PTR [rcx]
   140020893:	mov    r8b,0x1
   140020896:	mov    DWORD PTR [rax+0x40],0x0
   14002089d:	mov    rdx,QWORD PTR [rcx]
   1400208a0:	mov    rax,QWORD PTR [rdx+0x20]
   1400208a4:	mov    QWORD PTR [rdx+0x30],rax
   1400208a8:	mov    QWORD PTR [rdx+0x38],rax
   1400208ac:	mov    rcx,QWORD PTR [rcx]
   1400208af:	movzx  edx,r8b
   1400208b3:	rex.W jmp QWORD PTR [rip+0x15cee]        # 0x1400365a8
   1400208ba:	int3   
   1400208bb:	int3   
   1400208bc:	int3   
   1400208bd:	int3   
   1400208be:	int3   
   1400208bf:	int3   
   1400208c0:	mov    rax,QWORD PTR [rcx]
   1400208c3:	mov    r8b,0x1
   1400208c6:	mov    DWORD PTR [rax+0x48],0x0
   1400208cd:	mov    rdx,QWORD PTR [rcx]
   1400208d0:	mov    rax,QWORD PTR [rdx+0x28]
   1400208d4:	mov    QWORD PTR [rdx+0x38],rax
   1400208d8:	mov    QWORD PTR [rdx+0x40],rax
   1400208dc:	mov    rcx,QWORD PTR [rcx]
   1400208df:	xor    edx,edx
   1400208e1:	mov    BYTE PTR [rcx+0x20],0x0
   1400208e5:	rex.W jmp QWORD PTR [rip+0x15cbc]        # 0x1400365a8
   1400208ec:	int3   
   1400208ed:	int3   
   1400208ee:	int3   
   1400208ef:	int3   
   1400208f0:	lea    rax,[rcx+0x48]
   1400208f4:	mov    QWORD PTR [rdx],rax
   1400208f7:	mov    rax,rdx
   1400208fa:	ret    
   1400208fb:	int3   
   1400208fc:	int3   
   1400208fd:	int3   
   1400208fe:	int3   
   1400208ff:	int3   
   140020900:	mov    QWORD PTR [rdx],rcx
   140020903:	mov    rax,rdx
   140020906:	ret    
   140020907:	int3   
   140020908:	int3   
   140020909:	int3   
   14002090a:	int3   
   14002090b:	int3   
   14002090c:	int3   
   14002090d:	int3   
   14002090e:	int3   
   14002090f:	int3   
   140020910:	mov    QWORD PTR [rsp+0x8],rbx
   140020915:	mov    QWORD PTR [rsp+0x10],rsi
   14002091a:	push   rdi
   14002091b:	sub    rsp,0x20
   14002091f:	cmp    QWORD PTR [rdx+0x18],0x10
   140020924:	mov    rdi,QWORD PTR [rdx+0x10]
   140020928:	jb     0x14002092d
   14002092a:	mov    rdx,QWORD PTR [rdx]
   14002092d:	cmp    QWORD PTR [rcx+0x18],0x10
   140020932:	mov    rbx,QWORD PTR [rcx+0x10]
   140020936:	jb     0x14002093b
   140020938:	mov    rcx,QWORD PTR [rcx]
   14002093b:	cmp    rbx,rdi
   14002093e:	mov    r8,rdi
   140020941:	cmovb  r8,rbx
   140020945:	xor    esi,esi
   140020947:	test   r8,r8
   14002094a:	jne    0x140020950
   14002094c:	mov    eax,esi
   14002094e:	jmp    0x140020955
   140020950:	call   0x140030484
   140020955:	cdqe   
   140020957:	test   rax,rax
   14002095a:	jne    0x14002097a
   14002095c:	cmp    rbx,rdi
   14002095f:	jae    0x140020974
   140020961:	or     eax,0xffffffff
   140020964:	mov    rbx,QWORD PTR [rsp+0x30]
   140020969:	mov    rsi,QWORD PTR [rsp+0x38]
   14002096e:	add    rsp,0x20
   140020972:	pop    rdi
   140020973:	ret    
   140020974:	setne  sil
   140020978:	mov    eax,esi
   14002097a:	mov    rbx,QWORD PTR [rsp+0x30]
   14002097f:	mov    rsi,QWORD PTR [rsp+0x38]
   140020984:	add    rsp,0x20
   140020988:	pop    rdi
   140020989:	ret    
   14002098a:	int3   
   14002098b:	int3   
   14002098c:	int3   
   14002098d:	int3   
   14002098e:	int3   
   14002098f:	int3   
   140020990:	sub    rsp,0x38
   140020994:	cmp    BYTE PTR [rdx],0x0
   140020997:	jne    0x14002099d
   140020999:	xor    eax,eax
   14002099b:	jmp    0x1400209aa
   14002099d:	or     rax,0xffffffffffffffff
   1400209a1:	inc    rax
   1400209a4:	cmp    BYTE PTR [rdx+rax*1],0x0
   1400209a8:	jne    0x1400209a1
   1400209aa:	mov    r8,QWORD PTR [rcx+0x10]
   1400209ae:	mov    r9,rdx
   1400209b1:	xor    edx,edx
   1400209b3:	mov    QWORD PTR [rsp+0x20],rax
   1400209b8:	call   0x1400209d0
   1400209bd:	add    rsp,0x38
   1400209c1:	ret    
   1400209c2:	int3   
   1400209c3:	int3   
   1400209c4:	int3   
   1400209c5:	int3   
   1400209c6:	int3   
   1400209c7:	int3   
   1400209c8:	int3   
   1400209c9:	int3   
   1400209ca:	int3   
   1400209cb:	int3   
   1400209cc:	int3   
   1400209cd:	int3   
   1400209ce:	int3   
   1400209cf:	int3   
   1400209d0:	rex push rbx
   1400209d2:	sub    rsp,0x20
   1400209d6:	mov    rax,QWORD PTR [rcx+0x10]
   1400209da:	mov    rbx,r8
   1400209dd:	cmp    rax,rdx
   1400209e0:	jae    0x1400209f0
   1400209e2:	lea    rcx,[rip+0x1bf3f]        # 0x14003c928
   1400209e9:	call   QWORD PTR [rip+0x15839]        # 0x140036228
   1400209ef:	int3   
   1400209f0:	sub    rax,rdx
   1400209f3:	mov    QWORD PTR [rsp+0x30],rsi
   1400209f8:	mov    QWORD PTR [rsp+0x38],rdi
   1400209fd:	cmp    rax,rbx
   140020a00:	cmovb  rbx,rax
   140020a04:	cmp    QWORD PTR [rcx+0x18],0x10
   140020a09:	jb     0x140020a0e
   140020a0b:	mov    rcx,QWORD PTR [rcx]
   140020a0e:	mov    rdi,QWORD PTR [rsp+0x50]
   140020a13:	cmp    rbx,rdi
   140020a16:	mov    r8,rdi
   140020a19:	cmovb  r8,rbx
   140020a1d:	xor    esi,esi
   140020a1f:	test   r8,r8
   140020a22:	jne    0x140020a28
   140020a24:	mov    eax,esi
   140020a26:	jmp    0x140020a33
   140020a28:	add    rcx,rdx
   140020a2b:	mov    rdx,r9
   140020a2e:	call   0x140030484
   140020a33:	cdqe   
   140020a35:	test   rax,rax
   140020a38:	jne    0x140020a58
   140020a3a:	cmp    rbx,rdi
   140020a3d:	jae    0x140020a52
   140020a3f:	mov    rdi,QWORD PTR [rsp+0x38]
   140020a44:	mov    rsi,QWORD PTR [rsp+0x30]
   140020a49:	or     eax,0xffffffff
   140020a4c:	add    rsp,0x20
   140020a50:	pop    rbx
   140020a51:	ret    
   140020a52:	setne  sil
   140020a56:	mov    eax,esi
   140020a58:	mov    rdi,QWORD PTR [rsp+0x38]
   140020a5d:	mov    rsi,QWORD PTR [rsp+0x30]
   140020a62:	add    rsp,0x20
   140020a66:	pop    rbx
   140020a67:	ret    
   140020a68:	int3   
   140020a69:	int3   
   140020a6a:	int3   
   140020a6b:	int3   
   140020a6c:	int3   
   140020a6d:	int3   
   140020a6e:	int3   
   140020a6f:	int3   
   140020a70:	test   r8,r8
   140020a73:	jne    0x140020a78
   140020a75:	xor    eax,eax
   140020a77:	ret    
   140020a78:	jmp    0x140030484
   140020a7d:	int3   
   140020a7e:	int3   
   140020a7f:	int3   
   140020a80:	lea    rax,[rcx+0x70]
   140020a84:	ret    
   140020a85:	int3   
   140020a86:	int3   
   140020a87:	int3   
   140020a88:	int3   
   140020a89:	int3   
   140020a8a:	int3   
   140020a8b:	int3   
   140020a8c:	int3   
   140020a8d:	int3   
   140020a8e:	int3   
   140020a8f:	int3   
   140020a90:	lea    rax,[rcx+0x70]
   140020a94:	ret    
   140020a95:	int3   
   140020a96:	int3   
   140020a97:	int3   
   140020a98:	int3   
   140020a99:	int3   
   140020a9a:	int3   
   140020a9b:	int3   
   140020a9c:	int3   
   140020a9d:	int3   
   140020a9e:	int3   
   140020a9f:	int3   
   140020aa0:	lea    rax,[rcx+0x70]
   140020aa4:	ret    
   140020aa5:	int3   
   140020aa6:	int3   
   140020aa7:	int3   
   140020aa8:	int3   
   140020aa9:	int3   
   140020aaa:	int3   
   140020aab:	int3   
   140020aac:	int3   
   140020aad:	int3   
   140020aae:	int3   
   140020aaf:	int3   
   140020ab0:	lea    rax,[rcx+0x70]
   140020ab4:	ret    
   140020ab5:	int3   
   140020ab6:	int3   
   140020ab7:	int3   
   140020ab8:	int3   
   140020ab9:	int3   
   140020aba:	int3   
   140020abb:	int3   
   140020abc:	int3   
   140020abd:	int3   
   140020abe:	int3   
   140020abf:	int3   
   140020ac0:	lea    rax,[rcx+0x70]
   140020ac4:	ret    
   140020ac5:	int3   
   140020ac6:	int3   
   140020ac7:	int3   
   140020ac8:	int3   
   140020ac9:	int3   
   140020aca:	int3   
   140020acb:	int3   
   140020acc:	int3   
   140020acd:	int3   
   140020ace:	int3   
   140020acf:	int3   
   140020ad0:	lea    rax,[rcx+0x70]
   140020ad4:	ret    
   140020ad5:	int3   
   140020ad6:	int3   
   140020ad7:	int3   
   140020ad8:	int3   
   140020ad9:	int3   
   140020ada:	int3   
   140020adb:	int3   
   140020adc:	int3   
   140020add:	int3   
   140020ade:	int3   
   140020adf:	int3   
   140020ae0:	lea    rax,[rcx+0x70]
   140020ae4:	ret    
   140020ae5:	int3   
   140020ae6:	int3   
   140020ae7:	int3   
   140020ae8:	int3   
   140020ae9:	int3   
   140020aea:	int3   
   140020aeb:	int3   
   140020aec:	int3   
   140020aed:	int3   
   140020aee:	int3   
   140020aef:	int3   
   140020af0:	lea    rax,[rcx+0x70]
   140020af4:	ret    
   140020af5:	int3   
   140020af6:	int3   
   140020af7:	int3   
   140020af8:	int3   
   140020af9:	int3   
   140020afa:	int3   
   140020afb:	int3   
   140020afc:	int3   
   140020afd:	int3   
   140020afe:	int3   
   140020aff:	int3   
   140020b00:	lea    rax,[rip+0x350c9]        # 0x140055bd0
   140020b07:	ret    
   140020b08:	int3   
   140020b09:	int3   
   140020b0a:	int3   
   140020b0b:	int3   
   140020b0c:	int3   
   140020b0d:	int3   
   140020b0e:	int3   
   140020b0f:	int3   
   140020b10:	lea    rax,[rip+0x351a9]        # 0x140055cc0
   140020b17:	ret    
   140020b18:	int3   
   140020b19:	int3   
   140020b1a:	int3   
   140020b1b:	int3   
   140020b1c:	int3   
   140020b1d:	int3   
   140020b1e:	int3   
   140020b1f:	int3   
   140020b20:	lea    rax,[rip+0x351f9]        # 0x140055d20
   140020b27:	ret    
   140020b28:	int3   
   140020b29:	int3   
   140020b2a:	int3   
   140020b2b:	int3   
   140020b2c:	int3   
   140020b2d:	int3   
   140020b2e:	int3   
   140020b2f:	int3   
   140020b30:	lea    rax,[rip+0x350f9]        # 0x140055c30
   140020b37:	ret    
   140020b38:	int3   
   140020b39:	int3   
   140020b3a:	int3   
   140020b3b:	int3   
   140020b3c:	int3   
   140020b3d:	int3   
   140020b3e:	int3   
   140020b3f:	int3   
   140020b40:	mov    QWORD PTR [rsp+0x8],rcx
   140020b45:	push   rbp
   140020b46:	push   rbx
   140020b47:	push   rsi
   140020b48:	push   rdi
   140020b49:	push   r12
   140020b4b:	push   r13
   140020b4d:	push   r14
   140020b4f:	push   r15
   140020b51:	lea    rbp,[rsp-0x258]
   140020b59:	sub    rsp,0x358
   140020b60:	mov    QWORD PTR [rbp+0x10],0xfffffffffffffffe
   140020b68:	mov    rbx,rdx
   140020b6b:	mov    rsi,rcx
   140020b6e:	xor    r12d,r12d
   140020b71:	mov    DWORD PTR [rsp+0x30],r12d
   140020b76:	lea    r15,[rip+0x19ee3]        # 0x14003aa60
   140020b7d:	mov    QWORD PTR [rbp+0x40],r15
   140020b81:	lea    rdi,[rip+0x19ee0]        # 0x14003aa68
   140020b88:	mov    QWORD PTR [rbp+0x50],rdi
   140020b8c:	mov    rax,QWORD PTR [rip+0x154bd]        # 0x140036050
   140020b93:	mov    QWORD PTR [rbp+0xd8],rax
   140020b9a:	mov    DWORD PTR [rsp+0x30],0x2
   140020ba2:	xor    r8d,r8d
   140020ba5:	lea    rdx,[rbp+0x58]
   140020ba9:	lea    rcx,[rbp+0x40]
   140020bad:	call   QWORD PTR [rip+0x15575]        # 0x140036128
   140020bb3:	nop
   140020bb4:	mov    rax,QWORD PTR [rbp+0x40]
   140020bb8:	movsxd rcx,DWORD PTR [rax+0x4]
   140020bbc:	lea    r13,[rip+0x19e95]        # 0x14003aa58
   140020bc3:	mov    QWORD PTR [rbp+rcx*1+0x40],r13
   140020bc8:	mov    rax,QWORD PTR [rbp+0x40]
   140020bcc:	movsxd rcx,DWORD PTR [rax+0x4]
   140020bd0:	lea    edx,[rcx-0x98]
   140020bd6:	mov    DWORD PTR [rbp+rcx*1+0x3c],edx
   140020bda:	lea    rcx,[rbp+0x58]
   140020bde:	call   QWORD PTR [rip+0x15614]        # 0x1400361f8
   140020be4:	nop
   140020be5:	lea    r14,[rip+0x19dec]        # 0x14003a9d8
   140020bec:	mov    QWORD PTR [rbp+0x58],r14
   140020bf0:	mov    QWORD PTR [rbp+0xc0],r12
   140020bf7:	mov    DWORD PTR [rbp+0xc8],r12d
   140020bfe:	mov    QWORD PTR [rbp+0x140],r15
   140020c05:	mov    QWORD PTR [rbp+0x150],rdi
   140020c0c:	lea    rcx,[rbp+0x1d8]
   140020c13:	call   QWORD PTR [rip+0x15567]        # 0x140036180
   140020c19:	nop
   140020c1a:	mov    DWORD PTR [rsp+0x30],0x6
   140020c22:	xor    r8d,r8d
   140020c25:	lea    rdx,[rbp+0x158]
   140020c2c:	lea    rcx,[rbp+0x140]
   140020c33:	call   QWORD PTR [rip+0x154ef]        # 0x140036128
   140020c39:	nop
   140020c3a:	mov    rax,QWORD PTR [rbp+0x140]
   140020c41:	movsxd rcx,DWORD PTR [rax+0x4]
   140020c45:	mov    QWORD PTR [rbp+rcx*1+0x140],r13
   140020c4d:	mov    rax,QWORD PTR [rbp+0x140]
   140020c54:	movsxd rcx,DWORD PTR [rax+0x4]
   140020c58:	lea    edx,[rcx-0x98]
   140020c5e:	mov    DWORD PTR [rbp+rcx*1+0x13c],edx
   140020c65:	lea    rax,[rbp+0x158]
   140020c6c:	mov    QWORD PTR [rbp+0x2a8],rax
   140020c73:	lea    rcx,[rbp+0x158]
   140020c7a:	call   QWORD PTR [rip+0x15578]        # 0x1400361f8
   140020c80:	nop
   140020c81:	mov    QWORD PTR [rbp+0x158],r14
   140020c88:	mov    r8,QWORD PTR [rbx+0x10]
   140020c8c:	cmp    QWORD PTR [rbx+0x18],0x10
   140020c91:	jb     0x140020c96
   140020c93:	mov    rbx,QWORD PTR [rbx]
   140020c96:	xor    r9d,r9d
   140020c99:	mov    rdx,rbx
   140020c9c:	lea    rcx,[rbp+0x158]
   140020ca3:	call   0x14001ce50
   140020ca8:	nop
   140020ca9:	lea    rcx,[rbp-0x80]
   140020cad:	call   QWORD PTR [rip+0x15545]        # 0x1400361f8
   140020cb3:	nop
   140020cb4:	mov    QWORD PTR [rbp-0x10],r12
   140020cb8:	lea    rax,[rip+0x1b339]        # 0x14003bff8
   140020cbf:	mov    QWORD PTR [rbp-0x80],rax
   140020cc3:	lea    rax,[rip+0x1b3ae]        # 0x14003c078
   140020cca:	mov    QWORD PTR [rbp-0x18],rax
   140020cce:	lea    rcx,[rbp-0x8]
   140020cd2:	call   0x140011650
   140020cd7:	lea    rax,[rbp-0x8]
   140020cdb:	mov    QWORD PTR [rbp-0x10],rax
   140020cdf:	lea    rcx,[rbp-0x18]
   140020ce3:	mov    rax,QWORD PTR [rbp-0x8]
   140020ce7:	mov    QWORD PTR [rax+0x10],rcx
   140020ceb:	lea    r14,[rip+0x1b39e]        # 0x14003c090
   140020cf2:	mov    QWORD PTR [rbp-0x80],r14
   140020cf6:	lea    r15,[rip+0x1b413]        # 0x14003c110
   140020cfd:	mov    QWORD PTR [rbp-0x18],r15
   140020d01:	mov    rax,QWORD PTR [rip+0x158c0]        # 0x1400365c8
   140020d08:	mov    r8d,DWORD PTR [rax]
   140020d0b:	mov    rax,QWORD PTR [rip+0x158ae]        # 0x1400365c0
   140020d12:	mov    edx,DWORD PTR [rax]
   140020d14:	mov    rax,QWORD PTR [rip+0x1589d]        # 0x1400365b8
   140020d1b:	mov    ecx,DWORD PTR [rax]
   140020d1d:	mov    DWORD PTR [rsp+0x48],ecx
   140020d21:	mov    DWORD PTR [rsp+0x4c],edx
   140020d25:	mov    DWORD PTR [rsp+0x50],0xf
   140020d2d:	mov    DWORD PTR [rsp+0x54],0x8
   140020d35:	mov    DWORD PTR [rsp+0x58],r8d
   140020d3a:	mov    WORD PTR [rsp+0x5c],0x0
   140020d41:	mov    ecx,0x48
   140020d46:	call   0x14003027c
   140020d4b:	mov    rbx,rax
   140020d4e:	mov    QWORD PTR [rbp+0x2a8],rax
   140020d55:	test   rax,rax
   140020d58:	je     0x140020dae
   140020d5a:	mov    rcx,rax
   140020d5d:	call   QWORD PTR [rip+0x1588d]        # 0x1400365f0
   140020d63:	nop
   140020d64:	lea    rdi,[rbx+0x20]
   140020d68:	mov    QWORD PTR [rsp+0x28],rdi
   140020d6d:	mov    QWORD PTR [rsp+0x20],r12
   140020d72:	xor    r9d,r9d
   140020d75:	mov    r8b,0x1
   140020d78:	lea    rdx,[rsp+0x48]
   140020d7d:	mov    rcx,rbx
   140020d80:	call   QWORD PTR [rip+0x1582a]        # 0x1400365b0
   140020d86:	nop
   140020d87:	mov    ecx,0x1000
   140020d8c:	call   0x14003027c
   140020d91:	test   rax,rax
   140020d94:	je     0x140020da7
   140020d96:	mov    QWORD PTR [rdi],rax
   140020d99:	mov    QWORD PTR [rdi+0x8],0x1000
   140020da1:	mov    DWORD PTR [rbx+0x40],r12d
   140020da5:	jmp    0x140020db1
   140020da7:	call   QWORD PTR [rip+0x1546b]        # 0x140036218
   140020dad:	nop
   140020dae:	mov    rbx,r12
   140020db1:	lea    rax,[rsp+0x38]
   140020db6:	mov    QWORD PTR [rbp+0x2a8],rax
   140020dbd:	mov    QWORD PTR [rsp+0x38],rbx
   140020dc2:	mov    QWORD PTR [rsp+0x40],r12
   140020dc7:	lea    r8,[rsp+0x40]
   140020dcc:	mov    rdx,rbx
   140020dcf:	lea    rcx,[rsp+0x38]
   140020dd4:	call   0x14000d9c0
   140020dd9:	nop
   140020dda:	or     rdi,0xffffffffffffffff
   140020dde:	mov    r9,rdi
   140020de1:	mov    r8,rdi
   140020de4:	lea    rdx,[rsp+0x38]
   140020de9:	mov    rcx,QWORD PTR [rbp-0x10]
   140020ded:	call   0x14000b080
   140020df2:	nop
   140020df3:	mov    rbx,QWORD PTR [rsp+0x40]
   140020df8:	test   rbx,rbx
   140020dfb:	je     0x140020e1b
   140020dfd:	lock dec DWORD PTR [rbx+0x8]
   140020e01:	jne    0x140020e1b
   140020e03:	mov    rax,QWORD PTR [rbx]
   140020e06:	mov    rcx,rbx
   140020e09:	call   QWORD PTR [rax+0x8]
   140020e0c:	lock dec DWORD PTR [rbx+0xc]
   140020e10:	jne    0x140020e1b
   140020e12:	mov    rax,QWORD PTR [rbx]
   140020e15:	mov    rcx,rbx
   140020e18:	call   QWORD PTR [rax+0x10]
   140020e1b:	lea    rax,[rbp+0x140]
   140020e22:	mov    QWORD PTR [rbp+0x2b8],rax
   140020e29:	mov    r9,rdi
   140020e2c:	mov    r8,rdi
   140020e2f:	lea    rdx,[rbp+0x2b8]
   140020e36:	mov    rcx,QWORD PTR [rbp-0x10]
   140020e3a:	call   0x14000b380
   140020e3f:	lea    rax,[rbp+0x40]
   140020e43:	mov    QWORD PTR [rbp+0x2a8],rax
   140020e4a:	lea    rax,[rbp-0x80]
   140020e4e:	mov    QWORD PTR [rbp+0x2b0],rax
   140020e55:	lea    rax,[rbp+0x2b0]
   140020e5c:	mov    QWORD PTR [rsp+0x60],rax
   140020e61:	lea    rax,[rbp+0x2a8]
   140020e68:	mov    QWORD PTR [rsp+0x68],rax
   140020e6d:	mov    QWORD PTR [rsp+0x70],0x1000
   140020e76:	movups xmm0,XMMWORD PTR [rsp+0x60]
   140020e7b:	movaps XMMWORD PTR [rbp+0x20],xmm0
   140020e7f:	movsd  xmm1,QWORD PTR [rsp+0x70]
   140020e85:	movsd  QWORD PTR [rbp+0x30],xmm1
   140020e8a:	lea    r8,[rbp+0x2a8]
   140020e91:	lea    rdx,[rbp+0x2b0]
   140020e98:	lea    rcx,[rbp+0x20]
   140020e9c:	call   0x1400089f0
   140020ea1:	mov    rdx,rsi
   140020ea4:	lea    rcx,[rbp+0x40]
   140020ea8:	call   0x14002cb00
   140020ead:	mov    DWORD PTR [rsp+0x30],0x7
   140020eb5:	mov    QWORD PTR [rbp-0x80],r14
   140020eb9:	mov    QWORD PTR [rbp-0x18],r15
   140020ebd:	mov    rax,QWORD PTR [rbp-0x10]
   140020ec1:	mov    rcx,QWORD PTR [rax]
   140020ec4:	test   BYTE PTR [rcx+0x30],0x1
   140020ec8:	je     0x140020ed5
   140020eca:	lea    rcx,[rbp-0x80]
   140020ece:	call   QWORD PTR [rip+0x15304]        # 0x1400361d8
   140020ed4:	nop
   140020ed5:	mov    rbx,QWORD PTR [rbp+0x0]
   140020ed9:	test   rbx,rbx
   140020edc:	je     0x140020efd
   140020ede:	lock dec DWORD PTR [rbx+0x8]
   140020ee2:	jne    0x140020efd
   140020ee4:	mov    rax,QWORD PTR [rbx]
   140020ee7:	mov    rcx,rbx
   140020eea:	call   QWORD PTR [rax+0x8]
   140020eed:	lock dec DWORD PTR [rbx+0xc]
   140020ef1:	jne    0x140020efd
   140020ef3:	mov    rax,QWORD PTR [rbx]
   140020ef6:	mov    rcx,rbx
   140020ef9:	call   QWORD PTR [rax+0x10]
   140020efc:	nop
   140020efd:	lea    rax,[rip+0x1b0ac]        # 0x14003bfb0
   140020f04:	mov    QWORD PTR [rbp-0x18],rax
   140020f08:	lea    rcx,[rbp-0x80]
   140020f0c:	call   QWORD PTR [rip+0x152de]        # 0x1400361f0
   140020f12:	nop
   140020f13:	mov    rax,QWORD PTR [rbp+0x140]
   140020f1a:	movsxd rcx,DWORD PTR [rax+0x4]
   140020f1e:	mov    QWORD PTR [rbp+rcx*1+0x140],r13
   140020f26:	mov    rax,QWORD PTR [rbp+0x140]
   140020f2d:	movsxd rcx,DWORD PTR [rax+0x4]
   140020f31:	lea    edx,[rcx-0x98]
   140020f37:	mov    DWORD PTR [rbp+rcx*1+0x13c],edx
   140020f3e:	lea    rcx,[rbp+0x158]
   140020f45:	call   0x140017170
   140020f4a:	lea    rcx,[rbp+0x160]
   140020f51:	call   QWORD PTR [rip+0x151c9]        # 0x140036120
   140020f57:	lea    rcx,[rbp+0x1d8]
   140020f5e:	call   QWORD PTR [rip+0x1523c]        # 0x1400361a0
   140020f64:	nop
   140020f65:	mov    rax,QWORD PTR [rbp+0x40]
   140020f69:	movsxd rcx,DWORD PTR [rax+0x4]
   140020f6d:	mov    QWORD PTR [rbp+rcx*1+0x40],r13
   140020f72:	mov    rax,QWORD PTR [rbp+0x40]
   140020f76:	movsxd rcx,DWORD PTR [rax+0x4]
   140020f7a:	lea    edx,[rcx-0x98]
   140020f80:	mov    DWORD PTR [rbp+rcx*1+0x3c],edx
   140020f84:	lea    rcx,[rbp+0x58]
   140020f88:	call   0x140017170
   140020f8d:	lea    rcx,[rbp+0x60]
   140020f91:	call   QWORD PTR [rip+0x15189]        # 0x140036120
   140020f97:	lea    rcx,[rbp+0xd8]
   140020f9e:	call   QWORD PTR [rip+0x151fc]        # 0x1400361a0
   140020fa4:	mov    rax,rsi
   140020fa7:	add    rsp,0x358
   140020fae:	pop    r15
   140020fb0:	pop    r14
   140020fb2:	pop    r13
   140020fb4:	pop    r12
   140020fb6:	pop    rdi
   140020fb7:	pop    rsi
   140020fb8:	pop    rbx
   140020fb9:	pop    rbp
   140020fba:	ret    
   140020fbb:	int3   
   140020fbc:	int3   
   140020fbd:	int3   
   140020fbe:	int3   
   140020fbf:	int3   
   140020fc0:	mov    QWORD PTR [rsp+0x10],rdx
   140020fc5:	sub    rsp,0x38
   140020fc9:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140020fd2:	mov    rax,rdx
   140020fd5:	mov    QWORD PTR [rsp+0x58],rdx
   140020fda:	test   rdx,rdx
   140020fdd:	je     0x140020feb
   140020fdf:	mov    rdx,r8
   140020fe2:	mov    rcx,rax
   140020fe5:	call   0x140010c70
   140020fea:	nop
   140020feb:	add    rsp,0x38
   140020fef:	ret    
   140020ff0:	mov    QWORD PTR [rsp+0x10],rdx
   140020ff5:	sub    rsp,0x38
   140020ff9:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140021002:	mov    r10,r8
   140021005:	mov    rax,rdx
   140021008:	mov    QWORD PTR [rsp+0x58],rdx
   14002100d:	test   rdx,rdx
   140021010:	je     0x140021038
   140021012:	mov    QWORD PTR [rdx+0x18],0xf
   14002101a:	mov    QWORD PTR [rdx+0x10],0x0
   140021022:	mov    BYTE PTR [rdx],0x0
   140021025:	or     r9,0xffffffffffffffff
   140021029:	xor    r8d,r8d
   14002102c:	mov    rdx,r10
   14002102f:	mov    rcx,rax
   140021032:	call   0x14001ef20
   140021037:	nop
   140021038:	add    rsp,0x38
   14002103c:	ret    
   14002103d:	int3   
   14002103e:	int3   
   14002103f:	int3   
   140021040:	lea    rax,[rcx+0x8]
   140021044:	test   rax,rax
   140021047:	je     0x14002104c
   140021049:	mov    QWORD PTR [rax],rdx
   14002104c:	mov    BYTE PTR [rcx],0x1
   14002104f:	ret    
   140021050:	lea    rax,[rcx+0x8]
   140021054:	test   rax,rax
   140021057:	je     0x14002105c
   140021059:	mov    QWORD PTR [rax],rdx
   14002105c:	mov    BYTE PTR [rcx],0x1
   14002105f:	ret    
   140021060:	rex push rbx
   140021062:	sub    rsp,0x20
   140021066:	mov    rbx,rcx
   140021069:	add    rcx,0x8
   14002106d:	je     0x140021074
   14002106f:	call   0x140011010
   140021074:	mov    BYTE PTR [rbx],0x1
   140021077:	add    rsp,0x20
   14002107b:	pop    rbx
   14002107c:	ret    
   14002107d:	int3   
   14002107e:	int3   
   14002107f:	int3   
   140021080:	rex push rbx
   140021082:	sub    rsp,0x30
   140021086:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002108f:	mov    rbx,rcx
   140021092:	add    rcx,0x8
   140021096:	mov    QWORD PTR [rsp+0x40],rcx
   14002109b:	mov    QWORD PTR [rsp+0x50],rcx
   1400210a0:	je     0x1400210c2
   1400210a2:	mov    QWORD PTR [rcx+0x18],0xf
   1400210aa:	mov    QWORD PTR [rcx+0x10],0x0
   1400210b2:	mov    BYTE PTR [rcx],0x0
   1400210b5:	or     r9,0xffffffffffffffff
   1400210b9:	xor    r8d,r8d
   1400210bc:	call   0x14001ef20
   1400210c1:	nop
   1400210c2:	mov    BYTE PTR [rbx],0x1
   1400210c5:	add    rsp,0x30
   1400210c9:	pop    rbx
   1400210ca:	ret    
   1400210cb:	int3   
   1400210cc:	int3   
   1400210cd:	int3   
   1400210ce:	int3   
   1400210cf:	int3   
   1400210d0:	mov    rax,rsp
   1400210d3:	push   rsi
   1400210d4:	push   rdi
   1400210d5:	push   r12
   1400210d7:	push   r14
   1400210d9:	push   r15
   1400210db:	sub    rsp,0x50
   1400210df:	mov    QWORD PTR [rax-0x58],0xfffffffffffffffe
   1400210e7:	mov    QWORD PTR [rax+0x10],rbx
   1400210eb:	mov    QWORD PTR [rax+0x18],rbp
   1400210ef:	mov    rdi,rcx
   1400210f2:	dec    QWORD PTR [rcx+0x18]
   1400210f6:	mov    rax,QWORD PTR [rcx+0x8]
   1400210fa:	xor    r12d,r12d
   1400210fd:	mov    WORD PTR [rax],r12w
   140021101:	mov    rax,QWORD PTR [rcx+0x18]
   140021105:	cmp    QWORD PTR [rcx+0x10],rax
   140021109:	ja     0x1400212b7
   14002110f:	movzx  ecx,BYTE PTR [rax]
   140021112:	lea    eax,[rcx-0x30]
   140021115:	cmp    al,0x9
   140021117:	ja     0x1400212b7
   14002111d:	movsx  ecx,cl
   140021120:	sub    cx,0x30
   140021124:	mov    rax,QWORD PTR [rdi+0x8]
   140021128:	mov    WORD PTR [rax],cx
   14002112b:	dec    QWORD PTR [rdi+0x18]
   14002112f:	mov    cl,0x1
   140021131:	call   QWORD PTR [rip+0x15141]        # 0x140036278
   140021137:	mov    rbx,rax
   14002113a:	mov    QWORD PTR [rsp+0x80],rax
   140021142:	call   QWORD PTR [rip+0x15128]        # 0x140036270
   140021148:	mov    rdx,rax
   14002114b:	lea    rcx,[rsp+0x80]
   140021153:	call   0x1400197a0
   140021158:	test   al,al
   14002115a:	je     0x14002116c
   14002115c:	mov    rcx,rdi
   14002115f:	call   0x140025aa0
   140021164:	movzx  edi,al
   140021167:	jmp    0x140021290
   14002116c:	lea    rcx,[rsp+0x80]
   140021174:	call   0x14000e730
   140021179:	mov    rsi,rax
   14002117c:	lea    rdx,[rsp+0x28]
   140021181:	mov    rcx,rax
   140021184:	call   0x140024a70
   140021189:	nop
   14002118a:	mov    r14,QWORD PTR [rsp+0x38]
   14002118f:	test   r14,r14
   140021192:	je     0x14002125a
   140021198:	lea    rcx,[rsp+0x28]
   14002119d:	cmp    QWORD PTR [rsp+0x40],0x10
   1400211a3:	cmovae rcx,QWORD PTR [rsp+0x28]
   1400211a9:	cmp    BYTE PTR [rcx],0x0
   1400211ac:	jle    0x14002125a
   1400211b2:	xor    bpl,bpl
   1400211b5:	mov    rax,QWORD PTR [rsi]
   1400211b8:	mov    rcx,rsi
   1400211bb:	call   QWORD PTR [rax+0x20]
   1400211be:	movzx  r15d,al
   1400211c2:	lea    rcx,[rsp+0x28]
   1400211c7:	mov    r8,QWORD PTR [rsp+0x28]
   1400211cc:	mov    rdx,QWORD PTR [rsp+0x40]
   1400211d1:	cmp    rdx,0x10
   1400211d5:	cmovae rcx,r8
   1400211d9:	movzx  esi,BYTE PTR [rcx]
   1400211dc:	dec    sil
   1400211df:	mov    rcx,QWORD PTR [rdi+0x10]
   1400211e3:	cmp    QWORD PTR [rdi+0x18],rcx
   1400211e7:	jb     0x140021255
   1400211e9:	test   sil,sil
   1400211ec:	je     0x140021209
   1400211ee:	mov    rcx,rdi
   1400211f1:	call   0x140025a10
   1400211f6:	test   al,al
   1400211f8:	je     0x14002124b
   1400211fa:	dec    sil
   1400211fd:	mov    rdx,QWORD PTR [rsp+0x40]
   140021202:	mov    r8,QWORD PTR [rsp+0x28]
   140021207:	jmp    0x14002123d
   140021209:	mov    rax,QWORD PTR [rdi+0x18]
   14002120d:	cmp    BYTE PTR [rax],r15b
   140021210:	jne    0x14002125a
   140021212:	cmp    QWORD PTR [rdi+0x10],rax
   140021216:	je     0x140021250
   140021218:	lea    rcx,[r14-0x1]
   14002121c:	movzx  eax,bpl
   140021220:	cmp    rax,rcx
   140021223:	jae    0x140021228
   140021225:	inc    bpl
   140021228:	lea    rcx,[rsp+0x28]
   14002122d:	cmp    rdx,0x10
   140021231:	cmovae rcx,r8
   140021235:	movzx  eax,bpl
   140021239:	movzx  esi,BYTE PTR [rax+rcx*1]
   14002123d:	dec    QWORD PTR [rdi+0x18]
   140021241:	mov    rax,QWORD PTR [rdi+0x18]
   140021245:	cmp    rax,QWORD PTR [rdi+0x10]
   140021249:	jmp    0x1400211e7
   14002124b:	xor    dil,dil
   14002124e:	jmp    0x140021265
   140021250:	xor    dil,dil
   140021253:	jmp    0x14002126f
   140021255:	mov    dil,0x1
   140021258:	jmp    0x14002126f
   14002125a:	mov    rcx,rdi
   14002125d:	call   0x140025aa0
   140021262:	movzx  edi,al
   140021265:	mov    rdx,QWORD PTR [rsp+0x40]
   14002126a:	mov    r8,QWORD PTR [rsp+0x28]
   14002126f:	cmp    rdx,0x10
   140021273:	jb     0x14002127d
   140021275:	mov    rcx,r8
   140021278:	call   0x140030282
   14002127d:	mov    QWORD PTR [rsp+0x40],0xf
   140021286:	mov    QWORD PTR [rsp+0x38],r12
   14002128b:	mov    BYTE PTR [rsp+0x28],0x0
   140021290:	test   rbx,rbx
   140021293:	je     0x1400212b1
   140021295:	mov    rax,QWORD PTR [rbx]
   140021298:	mov    rcx,rbx
   14002129b:	call   QWORD PTR [rax+0x10]
   14002129e:	test   rax,rax
   1400212a1:	je     0x1400212b1
   1400212a3:	mov    r8,QWORD PTR [rax]
   1400212a6:	mov    edx,0x1
   1400212ab:	mov    rcx,rax
   1400212ae:	call   QWORD PTR [r8]
   1400212b1:	movzx  eax,dil
   1400212b5:	jmp    0x1400212b9
   1400212b7:	xor    al,al
   1400212b9:	lea    r11,[rsp+0x50]
   1400212be:	mov    rbx,QWORD PTR [r11+0x38]
   1400212c2:	mov    rbp,QWORD PTR [r11+0x40]
   1400212c6:	mov    rsp,r11
   1400212c9:	pop    r15
   1400212cb:	pop    r14
   1400212cd:	pop    r12
   1400212cf:	pop    rdi
   1400212d0:	pop    rsi
   1400212d1:	ret    
   1400212d2:	int3   
   1400212d3:	int3   
   1400212d4:	int3   
   1400212d5:	int3   
   1400212d6:	int3   
   1400212d7:	int3   
   1400212d8:	int3   
   1400212d9:	int3   
   1400212da:	int3   
   1400212db:	int3   
   1400212dc:	int3   
   1400212dd:	int3   
   1400212de:	int3   
   1400212df:	int3   
   1400212e0:	mov    r9,r8
   1400212e3:	mov    r8,rdx
   1400212e6:	xor    edx,edx
   1400212e8:	rex.W jmp QWORD PTR [rip+0x15291]        # 0x140036580
   1400212ef:	int3   
   1400212f0:	mov    QWORD PTR [rsp+0x10],rdx
   1400212f5:	push   rbp
   1400212f6:	push   rsi
   1400212f7:	push   rdi
   1400212f8:	push   r14
   1400212fa:	push   r15
   1400212fc:	sub    rsp,0x30
   140021300:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140021309:	mov    QWORD PTR [rsp+0x70],rbx
   14002130e:	mov    rdi,rdx
   140021311:	mov    r14,rcx
   140021314:	xor    r15d,r15d
   140021317:	mov    DWORD PTR [rsp+0x20],r15d
   14002131c:	call   QWORD PTR [rip+0x14f4e]        # 0x140036270
   140021322:	mov    rcx,QWORD PTR [rax]
   140021325:	mov    QWORD PTR [rsp+0x60],rcx
   14002132a:	mov    rax,QWORD PTR [rcx]
   14002132d:	call   QWORD PTR [rax+0x8]
   140021330:	nop
   140021331:	mov    rbp,QWORD PTR [rdi+0x10]
   140021335:	mov    esi,r15d
   140021338:	test   rbp,rbp
   14002133b:	je     0x140021383
   14002133d:	nop    DWORD PTR [rax]
   140021340:	cmp    QWORD PTR [rdi+0x18],0x10
   140021345:	jb     0x14002134c
   140021347:	mov    rax,QWORD PTR [rdi]
   14002134a:	jmp    0x14002134f
   14002134c:	mov    rax,rdi
   14002134f:	movzx  ebx,BYTE PTR [rax+rsi*1]
   140021353:	lea    rcx,[rsp+0x60]
   140021358:	call   0x14000e620
   14002135d:	mov    rcx,rax
   140021360:	movzx  edx,bl
   140021363:	call   QWORD PTR [rip+0x14f27]        # 0x140036290
   140021369:	cmp    QWORD PTR [rdi+0x18],0x10
   14002136e:	jb     0x140021375
   140021370:	mov    rcx,QWORD PTR [rdi]
   140021373:	jmp    0x140021378
   140021375:	mov    rcx,rdi
   140021378:	mov    BYTE PTR [rcx+rsi*1],al
   14002137b:	inc    rsi
   14002137e:	cmp    rsi,rbp
   140021381:	jb     0x140021340
   140021383:	mov    QWORD PTR [r14+0x18],0xf
   14002138b:	mov    QWORD PTR [r14+0x10],r15
   14002138f:	mov    BYTE PTR [r14],0x0
   140021393:	cmp    QWORD PTR [rdi+0x18],0x10
   140021398:	jae    0x1400213b1
   14002139a:	mov    r8,QWORD PTR [rdi+0x10]
   14002139e:	inc    r8
   1400213a1:	je     0x1400213ba
   1400213a3:	mov    rdx,rdi
   1400213a6:	mov    rcx,r14
   1400213a9:	call   QWORD PTR [rip+0x150b1]        # 0x140036460
   1400213af:	jmp    0x1400213ba
   1400213b1:	mov    rax,QWORD PTR [rdi]
   1400213b4:	mov    QWORD PTR [r14],rax
   1400213b7:	mov    QWORD PTR [rdi],r15
   1400213ba:	mov    rax,QWORD PTR [rdi+0x10]
   1400213be:	mov    QWORD PTR [r14+0x10],rax
   1400213c2:	mov    rax,QWORD PTR [rdi+0x18]
   1400213c6:	mov    QWORD PTR [r14+0x18],rax
   1400213ca:	mov    QWORD PTR [rdi+0x18],0xf
   1400213d2:	mov    QWORD PTR [rdi+0x10],r15
   1400213d6:	mov    BYTE PTR [rdi],0x0
   1400213d9:	mov    rcx,QWORD PTR [rsp+0x60]
   1400213de:	test   rcx,rcx
   1400213e1:	je     0x1400213fd
   1400213e3:	mov    rax,QWORD PTR [rcx]
   1400213e6:	call   QWORD PTR [rax+0x10]
   1400213e9:	test   rax,rax
   1400213ec:	je     0x1400213fd
   1400213ee:	mov    r8,QWORD PTR [rax]
   1400213f1:	mov    edx,0x1
   1400213f6:	mov    rcx,rax
   1400213f9:	call   QWORD PTR [r8]
   1400213fc:	nop
   1400213fd:	cmp    QWORD PTR [rdi+0x18],0x10
   140021402:	jb     0x14002140c
   140021404:	mov    rcx,QWORD PTR [rdi]
   140021407:	call   0x140030282
   14002140c:	mov    QWORD PTR [rdi+0x18],0xf
   140021414:	mov    QWORD PTR [rdi+0x10],r15
   140021418:	mov    BYTE PTR [rdi],0x0
   14002141b:	mov    rax,r14
   14002141e:	mov    rbx,QWORD PTR [rsp+0x70]
   140021423:	add    rsp,0x30
   140021427:	pop    r15
   140021429:	pop    r14
   14002142b:	pop    rdi
   14002142c:	pop    rsi
   14002142d:	pop    rbp
   14002142e:	ret    
   14002142f:	int3   
   140021430:	rex push rbx
   140021432:	sub    rsp,0x20
   140021436:	mov    rbx,rcx
   140021439:	test   r8,r8
   14002143c:	je     0x140021443
   14002143e:	call   0x14003048a
   140021443:	mov    rax,rbx
   140021446:	add    rsp,0x20
   14002144a:	pop    rbx
   14002144b:	ret    
   14002144c:	int3   
   14002144d:	int3   
   14002144e:	int3   
   14002144f:	int3   
   140021450:	rex push rbx
   140021452:	sub    rsp,0x20
   140021456:	mov    rbx,rcx
   140021459:	test   r8,r8
   14002145c:	je     0x140021466
   14002145e:	add    r8,r8
   140021461:	call   0x14003048a
   140021466:	mov    rax,rbx
   140021469:	add    rsp,0x20
   14002146d:	pop    rbx
   14002146e:	ret    
   14002146f:	int3   
   140021470:	ret    0x0
   140021473:	int3   
   140021474:	int3   
   140021475:	int3   
   140021476:	int3   
   140021477:	int3   
   140021478:	int3   
   140021479:	int3   
   14002147a:	int3   
   14002147b:	int3   
   14002147c:	int3   
   14002147d:	int3   
   14002147e:	int3   
   14002147f:	int3   
   140021480:	rex push rbx
   140021482:	push   rbp
   140021483:	push   rdi
   140021484:	push   r13
   140021486:	sub    rsp,0x28
   14002148a:	xor    r13d,r13d
   14002148d:	mov    rbp,r8
   140021490:	mov    rbx,rdx
   140021493:	mov    rdi,rcx
   140021496:	lea    rax,[rdx-0x11]
   14002149a:	test   rdx,rdx
   14002149d:	jne    0x1400214a2
   14002149f:	mov    eax,r13d
   1400214a2:	mov    rax,QWORD PTR [rax+0x8]
   1400214a6:	mov    rax,QWORD PTR [rax+0x48]
   1400214aa:	and    rax,0xfffffffffffffffe
   1400214ae:	je     0x140021702
   1400214b4:	add    rax,0xffffffffffffffb8
   1400214b8:	je     0x140021702
   1400214be:	mov    QWORD PTR [rsp+0x58],r12
   1400214c3:	lea    rcx,[rdx-0x11]
   1400214c7:	test   rdx,rdx
   1400214ca:	jne    0x1400214cf
   1400214cc:	mov    rcx,r13
   1400214cf:	mov    rcx,QWORD PTR [rcx+0x8]
   1400214d3:	lea    rax,[rdi-0x11]
   1400214d7:	test   rdi,rdi
   1400214da:	jne    0x1400214df
   1400214dc:	mov    rax,r13
   1400214df:	mov    edx,DWORD PTR [rcx+0x48]
   1400214e2:	mov    rax,QWORD PTR [rax+0x8]
   1400214e6:	and    QWORD PTR [rax+0x48],0xfffffffffffffffe
   1400214eb:	and    edx,0x1
   1400214ee:	movsxd rcx,edx
   1400214f1:	or     QWORD PTR [rax+0x48],rcx
   1400214f5:	lea    rax,[rbx-0x11]
   1400214f9:	test   rbx,rbx
   1400214fc:	jne    0x140021501
   1400214fe:	mov    rax,r13
   140021501:	mov    rax,QWORD PTR [rax+0x8]
   140021505:	mov    rcx,QWORD PTR [rax+0x48]
   140021509:	and    rcx,0xfffffffffffffffe
   14002150d:	lea    rdx,[rcx-0x48]
   140021511:	jne    0x140021516
   140021513:	mov    rdx,r13
   140021516:	mov    rcx,r8
   140021519:	call   0x1400239a0
   14002151e:	lea    rcx,[rax+0x48]
   140021522:	test   rax,rax
   140021525:	jne    0x14002152a
   140021527:	mov    rcx,r13
   14002152a:	lea    rax,[rdi-0x11]
   14002152e:	test   rdi,rdi
   140021531:	jne    0x140021536
   140021533:	mov    rax,r13
   140021536:	mov    rax,QWORD PTR [rax+0x8]
   14002153a:	and    QWORD PTR [rax+0x48],0x1
   14002153f:	or     QWORD PTR [rax+0x48],rcx
   140021543:	lea    rax,[rbx-0x11]
   140021547:	test   rbx,rbx
   14002154a:	jne    0x14002154f
   14002154c:	mov    rax,r13
   14002154f:	mov    rax,QWORD PTR [rax+0x8]
   140021553:	mov    rcx,QWORD PTR [rax+0x50]
   140021557:	lea    rdx,[rcx-0x48]
   14002155b:	test   rcx,rcx
   14002155e:	jne    0x140021563
   140021560:	mov    rdx,r13
   140021563:	mov    rcx,rbp
   140021566:	call   0x1400239a0
   14002156b:	lea    rcx,[rax+0x48]
   14002156f:	test   rax,rax
   140021572:	jne    0x140021577
   140021574:	mov    rcx,r13
   140021577:	lea    rax,[rdi-0x11]
   14002157b:	test   rdi,rdi
   14002157e:	jne    0x140021583
   140021580:	mov    rax,r13
   140021583:	mov    rax,QWORD PTR [rax+0x8]
   140021587:	mov    QWORD PTR [rax+0x50],rcx
   14002158b:	lea    rax,[rbx-0x11]
   14002158f:	test   rbx,rbx
   140021592:	jne    0x140021597
   140021594:	mov    rax,r13
   140021597:	mov    rax,QWORD PTR [rax+0x8]
   14002159b:	mov    rcx,QWORD PTR [rax+0x58]
   14002159f:	lea    rdx,[rcx-0x48]
   1400215a3:	test   rcx,rcx
   1400215a6:	jne    0x1400215ab
   1400215a8:	mov    rdx,r13
   1400215ab:	mov    rcx,rbp
   1400215ae:	call   0x1400239a0
   1400215b3:	lea    rcx,[rax+0x48]
   1400215b7:	test   rax,rax
   1400215ba:	jne    0x1400215bf
   1400215bc:	mov    rcx,r13
   1400215bf:	lea    rax,[rdi-0x11]
   1400215c3:	test   rdi,rdi
   1400215c6:	jne    0x1400215cb
   1400215c8:	mov    rax,r13
   1400215cb:	mov    rax,QWORD PTR [rax+0x8]
   1400215cf:	mov    QWORD PTR [rax+0x58],rcx
   1400215d3:	mov    r11,QWORD PTR [rbp+0x20]
   1400215d7:	mov    r12,QWORD PTR [rbp+0x28]
   1400215db:	shl    r12,0x4
   1400215df:	add    r12,r11
   1400215e2:	cmp    r11,r12
   1400215e5:	je     0x1400216f3
   1400215eb:	mov    QWORD PTR [rsp+0x50],rsi
   1400215f0:	mov    QWORD PTR [rsp+0x60],r14
   1400215f5:	mov    QWORD PTR [rsp+0x20],r15
   1400215fa:	nop    WORD PTR [rax+rax*1+0x0]
   140021600:	mov    r14,QWORD PTR [r11]
   140021603:	mov    r15,QWORD PTR [r11+0x8]
   140021607:	mov    eax,DWORD PTR [r14+0x48]
   14002160b:	and    QWORD PTR [r15+0x48],0xfffffffffffffffe
   140021610:	lea    r8,[r15+0x48]
   140021614:	lea    rsi,[r14+0x48]
   140021618:	and    eax,0x1
   14002161b:	cdqe   
   14002161d:	or     QWORD PTR [r8],rax
   140021620:	mov    rbx,QWORD PTR [rsi]
   140021623:	mov    r10,QWORD PTR [r8]
   140021626:	and    rbx,0xfffffffffffffffe
   14002162a:	jne    0x140021638
   14002162c:	and    r10d,0x1
   140021630:	mov    QWORD PTR [r8],r10
   140021633:	jmp    0x1400216c3
   140021638:	lea    rdi,[rbx-0x48]
   14002163c:	cmp    rdi,QWORD PTR [rbp+0x30]
   140021640:	jne    0x140021648
   140021642:	mov    rax,QWORD PTR [rbp+0x38]
   140021646:	jmp    0x140021697
   140021648:	mov    rcx,QWORD PTR [rbp+0x28]
   14002164c:	mov    r9,QWORD PTR [rbp+0x20]
   140021650:	shl    rcx,0x4
   140021654:	sar    rcx,0x4
   140021658:	test   rcx,rcx
   14002165b:	jle    0x140021693
   14002165d:	nop    DWORD PTR [rax]
   140021660:	mov    rax,rcx
   140021663:	cqo    
   140021665:	sub    rax,rdx
   140021668:	sar    rax,1
   14002166b:	mov    rdx,rax
   14002166e:	add    rdx,rdx
   140021671:	cmp    QWORD PTR [r9+rdx*8],rdi
   140021675:	jae    0x14002168b
   140021677:	lea    r9,[r9+rdx*8]
   14002167b:	or     rdx,0xffffffffffffffff
   14002167f:	sub    rdx,rax
   140021682:	add    r9,0x10
   140021686:	add    rcx,rdx
   140021689:	jmp    0x14002168e
   14002168b:	mov    rcx,rax
   14002168e:	test   rcx,rcx
   140021691:	jg     0x140021660
   140021693:	mov    rax,QWORD PTR [r9+0x8]
   140021697:	lea    rcx,[rax+0x48]
   14002169b:	test   rax,rax
   14002169e:	jne    0x1400216a3
   1400216a0:	mov    rcx,r13
   1400216a3:	and    r10d,0x1
   1400216a7:	or     r10,rcx
   1400216aa:	mov    QWORD PTR [r8],r10
   1400216ad:	cmp    QWORD PTR [rbx+0x8],rsi
   1400216b1:	jne    0x1400216b9
   1400216b3:	mov    QWORD PTR [rax+0x50],r8
   1400216b7:	jmp    0x1400216c3
   1400216b9:	cmp    QWORD PTR [rbx+0x10],rsi
   1400216bd:	jne    0x1400216c3
   1400216bf:	mov    QWORD PTR [rax+0x58],r8
   1400216c3:	cmp    QWORD PTR [r14+0x50],r13
   1400216c7:	jne    0x1400216cd
   1400216c9:	mov    QWORD PTR [r15+0x50],r13
   1400216cd:	cmp    QWORD PTR [r14+0x58],r13
   1400216d1:	jne    0x1400216d7
   1400216d3:	mov    QWORD PTR [r15+0x58],r13
   1400216d7:	add    r11,0x10
   1400216db:	cmp    r11,r12
   1400216de:	jne    0x140021600
   1400216e4:	mov    r15,QWORD PTR [rsp+0x20]
   1400216e9:	mov    r14,QWORD PTR [rsp+0x60]
   1400216ee:	mov    rsi,QWORD PTR [rsp+0x50]
   1400216f3:	mov    r12,QWORD PTR [rsp+0x58]
   1400216f8:	add    rsp,0x28
   1400216fc:	pop    r13
   1400216fe:	pop    rdi
   1400216ff:	pop    rbp
   140021700:	pop    rbx
   140021701:	ret    
   140021702:	add    rsp,0x28
   140021706:	pop    r13
   140021708:	pop    rdi
   140021709:	pop    rbp
   14002170a:	pop    rbx
   14002170b:	jmp    0x1400229b0
   140021710:	mov    QWORD PTR [rsp+0x8],rbx
   140021715:	mov    QWORD PTR [rsp+0x10],rbp
   14002171a:	mov    QWORD PTR [rsp+0x18],rsi
   14002171f:	mov    QWORD PTR [rsp+0x20],rdi
   140021724:	push   r14
   140021726:	sub    rsp,0x20
   14002172a:	mov    rdi,r8
   14002172d:	mov    rsi,rdx
   140021730:	mov    r14,rcx
   140021733:	test   rdx,rdx
   140021736:	je     0x14002173e
   140021738:	lea    rbx,[rdx-0x11]
   14002173c:	jmp    0x140021740
   14002173e:	xor    ebx,ebx
   140021740:	mov    rbx,QWORD PTR [rbx+0x8]
   140021744:	test   rcx,rcx
   140021747:	je     0x14002174f
   140021749:	lea    rax,[rcx-0x11]
   14002174d:	jmp    0x140021751
   14002174f:	xor    eax,eax
   140021751:	mov    rbp,QWORD PTR [rax+0x8]
   140021755:	mov    rbx,QWORD PTR [rbx+0x68]
   140021759:	test   rbx,rbx
   14002175c:	je     0x140021762
   14002175e:	add    rbx,0xffffffffffffffa0
   140021762:	cmp    rbx,QWORD PTR [rdi+0x30]
   140021766:	jne    0x14002176e
   140021768:	mov    rcx,QWORD PTR [rdi+0x38]
   14002176c:	jmp    0x1400217c7
   14002176e:	mov    rcx,QWORD PTR [rdi+0x28]
   140021772:	mov    r8,QWORD PTR [rdi+0x20]
   140021776:	shl    rcx,0x4
   14002177a:	sar    rcx,0x4
   14002177e:	test   rcx,rcx
   140021781:	jle    0x1400217c3
   140021783:	nop    DWORD PTR [rax+0x0]
   140021787:	nop    WORD PTR [rax+rax*1+0x0]
   140021790:	mov    rax,rcx
   140021793:	cqo    
   140021795:	sub    rax,rdx
   140021798:	sar    rax,1
   14002179b:	mov    rdx,rax
   14002179e:	add    rdx,rdx
   1400217a1:	cmp    QWORD PTR [r8+rdx*8],rbx
   1400217a5:	jae    0x1400217bb
   1400217a7:	lea    r8,[r8+rdx*8]
   1400217ab:	or     rdx,0xffffffffffffffff
   1400217af:	sub    rdx,rax
   1400217b2:	add    r8,0x10
   1400217b6:	add    rcx,rdx
   1400217b9:	jmp    0x1400217be
   1400217bb:	mov    rcx,rax
   1400217be:	test   rcx,rcx
   1400217c1:	jg     0x140021790
   1400217c3:	mov    rcx,QWORD PTR [r8+0x8]
   1400217c7:	test   rcx,rcx
   1400217ca:	je     0x1400217d2
   1400217cc:	lea    rax,[rcx+0x60]
   1400217d0:	jmp    0x1400217d4
   1400217d2:	xor    eax,eax
   1400217d4:	mov    QWORD PTR [rbp+0x68],rax
   1400217d8:	lea    rax,[rbp+0x60]
   1400217dc:	mov    rbp,rcx
   1400217df:	mov    QWORD PTR [rcx+0x60],rax
   1400217e3:	mov    rcx,rsi
   1400217e6:	call   0x140024ae0
   1400217eb:	cmp    rbx,rax
   1400217ee:	jne    0x140021755
   1400217f4:	mov    r8,rdi
   1400217f7:	mov    rdx,rsi
   1400217fa:	mov    rcx,r14
   1400217fd:	mov    rbx,QWORD PTR [rsp+0x30]
   140021802:	mov    rbp,QWORD PTR [rsp+0x38]
   140021807:	mov    rsi,QWORD PTR [rsp+0x40]
   14002180c:	mov    rdi,QWORD PTR [rsp+0x48]
   140021811:	add    rsp,0x20
   140021815:	pop    r14
   140021817:	jmp    0x140021480
   14002181c:	int3   
   14002181d:	int3   
   14002181e:	int3   
   14002181f:	int3   
   140021820:	rex push rdi
   140021822:	sub    rsp,0x30
   140021826:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002182f:	mov    QWORD PTR [rsp+0x50],rbx
   140021834:	mov    QWORD PTR [rsp+0x58],rsi
   140021839:	mov    rsi,rdx
   14002183c:	mov    rdi,rcx
   14002183f:	xor    ebx,ebx
   140021841:	mov    QWORD PTR [rsp+0x40],rbx
   140021846:	mov    rcx,QWORD PTR [rdx+0x8]
   14002184a:	test   rcx,rcx
   14002184d:	je     0x140021882
   14002184f:	mov    rax,QWORD PTR [rcx]
   140021852:	lea    rdx,[rsp+0x48]
   140021857:	call   QWORD PTR [rax+0x28]
   14002185a:	nop
   14002185b:	mov    rbx,QWORD PTR [rax]
   14002185e:	mov    QWORD PTR [rsp+0x40],rbx
   140021863:	test   rbx,rbx
   140021866:	je     0x140021872
   140021868:	mov    rax,QWORD PTR [rbx]
   14002186b:	mov    rcx,rbx
   14002186e:	call   QWORD PTR [rax+0x18]
   140021871:	nop
   140021872:	mov    rcx,QWORD PTR [rsp+0x48]
   140021877:	test   rcx,rcx
   14002187a:	je     0x140021882
   14002187c:	mov    rax,QWORD PTR [rcx]
   14002187f:	call   QWORD PTR [rax+0x20]
   140021882:	mov    rax,QWORD PTR [rsi+0x18]
   140021886:	mov    QWORD PTR [rdi+0x18],rax
   14002188a:	mov    eax,DWORD PTR [rsi+0x20]
   14002188d:	mov    DWORD PTR [rdi+0x20],eax
   140021890:	mov    rax,QWORD PTR [rsi+0x10]
   140021894:	mov    QWORD PTR [rdi+0x10],rax
   140021898:	mov    rcx,QWORD PTR [rdi+0x8]
   14002189c:	test   rcx,rcx
   14002189f:	je     0x1400218b3
   1400218a1:	mov    rax,QWORD PTR [rcx]
   1400218a4:	call   QWORD PTR [rax+0x20]
   1400218a7:	test   al,al
   1400218a9:	je     0x1400218b3
   1400218ab:	mov    QWORD PTR [rdi+0x8],0x0
   1400218b3:	mov    QWORD PTR [rdi+0x8],rbx
   1400218b7:	test   rbx,rbx
   1400218ba:	je     0x1400218c6
   1400218bc:	mov    rax,QWORD PTR [rbx]
   1400218bf:	mov    rcx,rbx
   1400218c2:	call   QWORD PTR [rax+0x18]
   1400218c5:	nop
   1400218c6:	test   rbx,rbx
   1400218c9:	je     0x1400218d4
   1400218cb:	mov    rax,QWORD PTR [rbx]
   1400218ce:	mov    rcx,rbx
   1400218d1:	call   QWORD PTR [rax+0x20]
   1400218d4:	mov    rbx,QWORD PTR [rsp+0x50]
   1400218d9:	mov    rsi,QWORD PTR [rsp+0x58]
   1400218de:	add    rsp,0x30
   1400218e2:	pop    rdi
   1400218e3:	ret    
   1400218e4:	int3   
   1400218e5:	int3   
   1400218e6:	int3   
   1400218e7:	int3   
   1400218e8:	int3   
   1400218e9:	int3   
   1400218ea:	int3   
   1400218eb:	int3   
   1400218ec:	int3   
   1400218ed:	int3   
   1400218ee:	int3   
   1400218ef:	int3   
   1400218f0:	mov    rax,QWORD PTR [rcx+0x28]
   1400218f4:	mov    QWORD PTR [rdx],rax
   1400218f7:	mov    rax,rdx
   1400218fa:	ret    
   1400218fb:	int3   
   1400218fc:	int3   
   1400218fd:	int3   
   1400218fe:	int3   
   1400218ff:	int3   
   140021900:	rex push rbx
   140021902:	sub    rsp,0x30
   140021906:	xor    edx,edx
   140021908:	mov    rbx,rcx
   14002190b:	mov    DWORD PTR [rsp+0x20],0x0
   140021913:	call   QWORD PTR [rip+0x14c37]        # 0x140036550
   140021919:	mov    rax,rbx
   14002191c:	add    rsp,0x30
   140021920:	pop    rbx
   140021921:	ret    
   140021922:	int3   
   140021923:	int3   
   140021924:	int3   
   140021925:	int3   
   140021926:	int3   
   140021927:	int3   
   140021928:	int3   
   140021929:	int3   
   14002192a:	int3   
   14002192b:	int3   
   14002192c:	int3   
   14002192d:	int3   
   14002192e:	int3   
   14002192f:	int3   
   140021930:	mov    rax,QWORD PTR [rcx+0x10]
   140021934:	ret    
   140021935:	int3   
   140021936:	int3   
   140021937:	int3   
   140021938:	int3   
   140021939:	int3   
   14002193a:	int3   
   14002193b:	int3   
   14002193c:	int3   
   14002193d:	int3   
   14002193e:	int3   
   14002193f:	int3   
   140021940:	mov    rax,QWORD PTR [rcx]
   140021943:	ret    
   140021944:	int3   
   140021945:	int3   
   140021946:	int3   
   140021947:	int3   
   140021948:	int3   
   140021949:	int3   
   14002194a:	int3   
   14002194b:	int3   
   14002194c:	int3   
   14002194d:	int3   
   14002194e:	int3   
   14002194f:	int3   
   140021950:	mov    rax,rcx
   140021953:	ret    
   140021954:	int3   
   140021955:	int3   
   140021956:	int3   
   140021957:	int3   
   140021958:	int3   
   140021959:	int3   
   14002195a:	int3   
   14002195b:	int3   
   14002195c:	int3   
   14002195d:	int3   
   14002195e:	int3   
   14002195f:	int3   
   140021960:	mov    rax,rcx
   140021963:	ret    
   140021964:	int3   
   140021965:	int3   
   140021966:	int3   
   140021967:	int3   
   140021968:	int3   
   140021969:	int3   
   14002196a:	int3   
   14002196b:	int3   
   14002196c:	int3   
   14002196d:	int3   
   14002196e:	int3   
   14002196f:	int3   
   140021970:	cmp    QWORD PTR [rcx+0x18],0x10
   140021975:	jb     0x14002197b
   140021977:	mov    rax,QWORD PTR [rcx]
   14002197a:	ret    
   14002197b:	mov    rax,rcx
   14002197e:	ret    
   14002197f:	int3   
   140021980:	rex push rbx
   140021982:	sub    rsp,0x40
   140021986:	xor    eax,eax
   140021988:	mov    rbx,rcx
   14002198b:	mov    DWORD PTR [rsp+0x20],eax
   14002198f:	cmp    edx,0xfffffffe
   140021992:	jne    0x1400219bb
   140021994:	mov    QWORD PTR [rcx+0x18],0xf
   14002199c:	mov    QWORD PTR [rcx+0x10],rax
   1400219a0:	lea    r8d,[rax+0xf]
   1400219a4:	lea    rdx,[rip+0x1b6c5]        # 0x14003d070
   1400219ab:	mov    BYTE PTR [rcx],al
   1400219ad:	call   0x14001f070
   1400219b2:	mov    rax,rbx
   1400219b5:	add    rsp,0x40
   1400219b9:	pop    rbx
   1400219ba:	ret    
   1400219bb:	test   edx,edx
   1400219bd:	jne    0x1400219e6
   1400219bf:	lea    r8d,[rdx+0x9]
   1400219c3:	mov    QWORD PTR [rcx+0x18],0xf
   1400219cb:	mov    QWORD PTR [rcx+0x10],rax
   1400219cf:	lea    rdx,[rip+0x1b6ba]        # 0x14003d090
   1400219d6:	mov    BYTE PTR [rcx],al
   1400219d8:	call   0x14001f070
   1400219dd:	mov    rax,rbx
   1400219e0:	add    rsp,0x40
   1400219e4:	pop    rbx
   1400219e5:	ret    
   1400219e6:	cmp    edx,0xffffffff
   1400219e9:	jne    0x140021a14
   1400219eb:	mov    QWORD PTR [rcx+0x18],0xf
   1400219f3:	mov    QWORD PTR [rcx+0x10],rax
   1400219f7:	lea    rdx,[rip+0x1b682]        # 0x14003d080
   1400219fe:	mov    r8d,0x9
   140021a04:	mov    BYTE PTR [rcx],al
   140021a06:	call   0x14001f070
   140021a0b:	mov    rax,rbx
   140021a0e:	add    rsp,0x40
   140021a12:	pop    rbx
   140021a13:	ret    
   140021a14:	lea    rcx,[rsp+0x60]
   140021a19:	call   0x1400240c0
   140021a1e:	mov    eax,DWORD PTR [rsp+0x60]
   140021a22:	lea    rdx,[rsp+0x30]
   140021a27:	mov    DWORD PTR [rsp+0x30],eax
   140021a2b:	movzx  eax,WORD PTR [rsp+0x64]
   140021a30:	mov    rcx,rbx
   140021a33:	mov    WORD PTR [rsp+0x34],ax
   140021a38:	call   0x14002e7d0
   140021a3d:	mov    rax,rbx
   140021a40:	add    rsp,0x40
   140021a44:	pop    rbx
   140021a45:	ret    
   140021a46:	int3   
   140021a47:	int3   
   140021a48:	int3   
   140021a49:	int3   
   140021a4a:	int3   
   140021a4b:	int3   
   140021a4c:	int3   
   140021a4d:	int3   
   140021a4e:	int3   
   140021a4f:	int3   
   140021a50:	movzx  r8d,WORD PTR [rcx+0x2]
   140021a55:	mov    r10,rcx
   140021a58:	mov    edx,0xe
   140021a5d:	sub    edx,r8d
   140021a60:	sub    r8w,0x3
   140021a65:	mov    eax,0x2aaaaaab
   140021a6a:	imul   edx
   140021a6c:	sar    edx,1
   140021a6e:	mov    eax,edx
   140021a70:	shr    eax,0x1f
   140021a73:	add    edx,eax
   140021a75:	movzx  eax,WORD PTR [rcx]
   140021a78:	mov    ecx,0x12c0
   140021a7d:	sub    ax,dx
   140021a80:	add    ax,cx
   140021a83:	movzx  r9d,ax
   140021a87:	movzx  eax,dx
   140021a8a:	add    ax,ax
   140021a8d:	add    dx,ax
   140021a90:	shl    dx,0x2
   140021a94:	add    dx,r8w
   140021a98:	movzx  eax,dx
   140021a9b:	imul   ecx,eax,0x99
   140021aa1:	mov    eax,0x66666667
   140021aa6:	add    ecx,0x2
   140021aa9:	imul   ecx
   140021aab:	mov    ecx,edx
   140021aad:	sar    ecx,1
   140021aaf:	mov    eax,ecx
   140021ab1:	shr    eax,0x1f
   140021ab4:	add    ecx,eax
   140021ab6:	mov    eax,0x51eb851f
   140021abb:	imul   r9d
   140021abe:	mov    eax,0x51eb851f
   140021ac3:	sar    edx,0x7
   140021ac6:	mov    r8d,edx
   140021ac9:	add    edx,ecx
   140021acb:	shr    r8d,0x1f
   140021acf:	add    r8d,edx
   140021ad2:	imul   r9d
   140021ad5:	sar    edx,0x5
   140021ad8:	mov    eax,edx
   140021ada:	shr    eax,0x1f
   140021add:	add    edx,eax
   140021adf:	movzx  eax,WORD PTR [r10+0x4]
   140021ae4:	sub    r8d,edx
   140021ae7:	add    r8d,eax
   140021aea:	imul   eax,r9d,0x16d
   140021af1:	shr    r9d,0x2
   140021af5:	add    r8d,eax
   140021af8:	lea    eax,[r9-0x7d2d]
   140021aff:	add    eax,r8d
   140021b02:	ret    
   140021b03:	int3   
   140021b04:	int3   
   140021b05:	int3   
   140021b06:	int3   
   140021b07:	int3   
   140021b08:	int3   
   140021b09:	int3   
   140021b0a:	int3   
   140021b0b:	int3   
   140021b0c:	int3   
   140021b0d:	int3   
   140021b0e:	int3   
   140021b0f:	int3   
   140021b10:	mov    al,0x2d
   140021b12:	ret    
   140021b13:	int3   
   140021b14:	int3   
   140021b15:	int3   
   140021b16:	int3   
   140021b17:	int3   
   140021b18:	int3   
   140021b19:	int3   
   140021b1a:	int3   
   140021b1b:	int3   
   140021b1c:	int3   
   140021b1d:	int3   
   140021b1e:	int3   
   140021b1f:	int3   
   140021b20:	mov    rcx,rdx
   140021b23:	jmp    0x140030282
   140021b28:	int3   
   140021b29:	int3   
   140021b2a:	int3   
   140021b2b:	int3   
   140021b2c:	int3   
   140021b2d:	int3   
   140021b2e:	int3   
   140021b2f:	int3   
   140021b30:	mov    rcx,rdx
   140021b33:	jmp    0x140030282
   140021b38:	int3   
   140021b39:	int3   
   140021b3a:	int3   
   140021b3b:	int3   
   140021b3c:	int3   
   140021b3d:	int3   
   140021b3e:	int3   
   140021b3f:	int3   
   140021b40:	mov    rcx,rdx
   140021b43:	jmp    0x140030282
   140021b48:	int3   
   140021b49:	int3   
   140021b4a:	int3   
   140021b4b:	int3   
   140021b4c:	int3   
   140021b4d:	int3   
   140021b4e:	int3   
   140021b4f:	int3   
   140021b50:	mov    rcx,rdx
   140021b53:	jmp    0x140030282
   140021b58:	int3   
   140021b59:	int3   
   140021b5a:	int3   
   140021b5b:	int3   
   140021b5c:	int3   
   140021b5d:	int3   
   140021b5e:	int3   
   140021b5f:	int3   
   140021b60:	mov    rcx,rdx
   140021b63:	jmp    0x140030282
   140021b68:	int3   
   140021b69:	int3   
   140021b6a:	int3   
   140021b6b:	int3   
   140021b6c:	int3   
   140021b6d:	int3   
   140021b6e:	int3   
   140021b6f:	int3   
   140021b70:	mov    rcx,rdx
   140021b73:	jmp    0x140030282
   140021b78:	int3   
   140021b79:	int3   
   140021b7a:	int3   
   140021b7b:	int3   
   140021b7c:	int3   
   140021b7d:	int3   
   140021b7e:	int3   
   140021b7f:	int3   
   140021b80:	mov    rcx,rdx
   140021b83:	jmp    0x140030282
   140021b88:	int3   
   140021b89:	int3   
   140021b8a:	int3   
   140021b8b:	int3   
   140021b8c:	int3   
   140021b8d:	int3   
   140021b8e:	int3   
   140021b8f:	int3   
   140021b90:	mov    rcx,rdx
   140021b93:	jmp    0x140030282
   140021b98:	int3   
   140021b99:	int3   
   140021b9a:	int3   
   140021b9b:	int3   
   140021b9c:	int3   
   140021b9d:	int3   
   140021b9e:	int3   
   140021b9f:	int3   
   140021ba0:	mov    rcx,rdx
   140021ba3:	jmp    0x140030282
   140021ba8:	int3   
   140021ba9:	int3   
   140021baa:	int3   
   140021bab:	int3   
   140021bac:	int3   
   140021bad:	int3   
   140021bae:	int3   
   140021baf:	int3   
   140021bb0:	mov    rcx,rdx
   140021bb3:	jmp    0x140030282
   140021bb8:	int3   
   140021bb9:	int3   
   140021bba:	int3   
   140021bbb:	int3   
   140021bbc:	int3   
   140021bbd:	int3   
   140021bbe:	int3   
   140021bbf:	int3   
   140021bc0:	mov    rcx,rdx
   140021bc3:	jmp    0x140030282
   140021bc8:	int3   
   140021bc9:	int3   
   140021bca:	int3   
   140021bcb:	int3   
   140021bcc:	int3   
   140021bcd:	int3   
   140021bce:	int3   
   140021bcf:	int3   
   140021bd0:	mov    rcx,rdx
   140021bd3:	jmp    0x140030282
   140021bd8:	int3   
   140021bd9:	int3   
   140021bda:	int3   
   140021bdb:	int3   
   140021bdc:	int3   
   140021bdd:	int3   
   140021bde:	int3   
   140021bdf:	int3   
   140021be0:	mov    rcx,rdx
   140021be3:	jmp    0x140030282
   140021be8:	int3   
   140021be9:	int3   
   140021bea:	int3   
   140021beb:	int3   
   140021bec:	int3   
   140021bed:	int3   
   140021bee:	int3   
   140021bef:	int3   
   140021bf0:	mov    rcx,rdx
   140021bf3:	jmp    0x140030282
   140021bf8:	int3   
   140021bf9:	int3   
   140021bfa:	int3   
   140021bfb:	int3   
   140021bfc:	int3   
   140021bfd:	int3   
   140021bfe:	int3   
   140021bff:	int3   
   140021c00:	mov    rcx,rdx
   140021c03:	jmp    0x140030282
   140021c08:	int3   
   140021c09:	int3   
   140021c0a:	int3   
   140021c0b:	int3   
   140021c0c:	int3   
   140021c0d:	int3   
   140021c0e:	int3   
   140021c0f:	int3   
   140021c10:	lea    rcx,[rdx-0x8]
   140021c14:	jmp    0x140030282
   140021c19:	int3   
   140021c1a:	int3   
   140021c1b:	int3   
   140021c1c:	int3   
   140021c1d:	int3   
   140021c1e:	int3   
   140021c1f:	int3   
   140021c20:	mov    rcx,rdx
   140021c23:	jmp    0x140030282
   140021c28:	int3   
   140021c29:	int3   
   140021c2a:	int3   
   140021c2b:	int3   
   140021c2c:	int3   
   140021c2d:	int3   
   140021c2e:	int3   
   140021c2f:	int3   
   140021c30:	mov    QWORD PTR [rsp+0x8],rcx
   140021c35:	push   rbx
   140021c36:	sub    rsp,0x90
   140021c3d:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140021c46:	mov    rbx,rcx
   140021c49:	xor    r10d,r10d
   140021c4c:	mov    DWORD PTR [rsp+0x20],r10d
   140021c51:	mov    rcx,QWORD PTR [rdx+0x18]
   140021c55:	cmp    rcx,0x10
   140021c59:	jb     0x140021c60
   140021c5b:	mov    r8,QWORD PTR [rdx]
   140021c5e:	jmp    0x140021c63
   140021c60:	mov    r8,rdx
   140021c63:	mov    r9,QWORD PTR [rdx+0x10]
   140021c67:	add    r9,r8
   140021c6a:	cmp    rcx,0x10
   140021c6e:	jb     0x140021c73
   140021c70:	mov    rdx,QWORD PTR [rdx]
   140021c73:	mov    QWORD PTR [rsp+0x48],0xf
   140021c7c:	mov    QWORD PTR [rsp+0x40],r10
   140021c81:	mov    BYTE PTR [rsp+0x30],0x0
   140021c86:	mov    QWORD PTR [rsp+0x50],r9
   140021c8b:	mov    BYTE PTR [rsp+0x60],0x0
   140021c90:	mov    BYTE PTR [rsp+0x62],0x0
   140021c95:	mov    DWORD PTR [rsp+0x64],r10d
   140021c9a:	mov    BYTE PTR [rsp+0x68],0x0
   140021c9f:	mov    QWORD PTR [rsp+0x70],rdx
   140021ca4:	mov    BYTE PTR [rsp+0x80],0x0
   140021cac:	mov    BYTE PTR [rsp+0x82],0x0
   140021cb4:	mov    DWORD PTR [rsp+0x84],r10d
   140021cbc:	mov    BYTE PTR [rsp+0x88],0x0
   140021cc4:	movzx  r9d,BYTE PTR [rsp+0xa8]
   140021ccd:	lea    r8,[rsp+0x50]
   140021cd2:	lea    rdx,[rsp+0x70]
   140021cd7:	lea    rcx,[rsp+0x30]
   140021cdc:	call   0x1400041b0
   140021ce1:	nop
   140021ce2:	movzx  r8d,BYTE PTR [rsp+0xa8]
   140021ceb:	lea    rdx,[rsp+0x30]
   140021cf0:	mov    rcx,rbx
   140021cf3:	call   0x14000e330
   140021cf8:	nop
   140021cf9:	cmp    QWORD PTR [rsp+0x48],0x10
   140021cff:	jb     0x140021d0b
   140021d01:	mov    rcx,QWORD PTR [rsp+0x30]
   140021d06:	call   0x140030282
   140021d0b:	mov    rax,rbx
   140021d0e:	jmp    0x140021d18
   140021d10:	mov    rax,QWORD PTR [rsp+0xa0]
   140021d18:	add    rsp,0x90
   140021d1f:	pop    rbx
   140021d20:	ret    
   140021d21:	int3   
   140021d22:	int3   
   140021d23:	int3   
   140021d24:	int3   
   140021d25:	int3   
   140021d26:	int3   
   140021d27:	int3   
   140021d28:	int3   
   140021d29:	int3   
   140021d2a:	int3   
   140021d2b:	int3   
   140021d2c:	int3   
   140021d2d:	int3   
   140021d2e:	int3   
   140021d2f:	int3   
   140021d30:	mov    QWORD PTR [rsp+0x8],rcx
   140021d35:	push   rbp
   140021d36:	push   rbx
   140021d37:	push   rsi
   140021d38:	push   rdi
   140021d39:	push   r12
   140021d3b:	push   r13
   140021d3d:	push   r14
   140021d3f:	push   r15
   140021d41:	lea    rbp,[rsp-0x228]
   140021d49:	sub    rsp,0x328
   140021d50:	mov    QWORD PTR [rbp-0x20],0xfffffffffffffffe
   140021d58:	mov    rbx,rdx
   140021d5b:	mov    rsi,rcx
   140021d5e:	xor    r12d,r12d
   140021d61:	mov    DWORD PTR [rsp+0x20],r12d
   140021d66:	lea    r15,[rip+0x18cf3]        # 0x14003aa60
   140021d6d:	mov    QWORD PTR [rbp+0x10],r15
   140021d71:	lea    rdi,[rip+0x18cf0]        # 0x14003aa68
   140021d78:	mov    QWORD PTR [rbp+0x20],rdi
   140021d7c:	mov    rax,QWORD PTR [rip+0x142cd]        # 0x140036050
   140021d83:	mov    QWORD PTR [rbp+0xa8],rax
   140021d8a:	mov    DWORD PTR [rsp+0x20],0x2
   140021d92:	xor    r8d,r8d
   140021d95:	lea    rdx,[rbp+0x28]
   140021d99:	lea    rcx,[rbp+0x10]
   140021d9d:	call   QWORD PTR [rip+0x14385]        # 0x140036128
   140021da3:	nop
   140021da4:	mov    rax,QWORD PTR [rbp+0x10]
   140021da8:	movsxd rcx,DWORD PTR [rax+0x4]
   140021dac:	lea    r13,[rip+0x18ca5]        # 0x14003aa58
   140021db3:	mov    QWORD PTR [rbp+rcx*1+0x10],r13
   140021db8:	mov    rax,QWORD PTR [rbp+0x10]
   140021dbc:	movsxd rcx,DWORD PTR [rax+0x4]
   140021dc0:	lea    edx,[rcx-0x98]
   140021dc6:	mov    DWORD PTR [rbp+rcx*1+0xc],edx
   140021dca:	lea    rcx,[rbp+0x28]
   140021dce:	call   QWORD PTR [rip+0x14424]        # 0x1400361f8
   140021dd4:	nop
   140021dd5:	lea    r14,[rip+0x18bfc]        # 0x14003a9d8
   140021ddc:	mov    QWORD PTR [rbp+0x28],r14
   140021de0:	mov    QWORD PTR [rbp+0x90],r12
   140021de7:	mov    DWORD PTR [rbp+0x98],r12d
   140021dee:	mov    QWORD PTR [rbp+0x110],r15
   140021df5:	mov    QWORD PTR [rbp+0x120],rdi
   140021dfc:	lea    rcx,[rbp+0x1a8]
   140021e03:	call   QWORD PTR [rip+0x14377]        # 0x140036180
   140021e09:	nop
   140021e0a:	mov    DWORD PTR [rsp+0x20],0x6
   140021e12:	xor    r8d,r8d
   140021e15:	lea    rdx,[rbp+0x128]
   140021e1c:	lea    rcx,[rbp+0x110]
   140021e23:	call   QWORD PTR [rip+0x142ff]        # 0x140036128
   140021e29:	nop
   140021e2a:	mov    rax,QWORD PTR [rbp+0x110]
   140021e31:	movsxd rcx,DWORD PTR [rax+0x4]
   140021e35:	mov    QWORD PTR [rbp+rcx*1+0x110],r13
   140021e3d:	mov    rax,QWORD PTR [rbp+0x110]
   140021e44:	movsxd rcx,DWORD PTR [rax+0x4]
   140021e48:	lea    edx,[rcx-0x98]
   140021e4e:	mov    DWORD PTR [rbp+rcx*1+0x10c],edx
   140021e55:	lea    rax,[rbp+0x128]
   140021e5c:	mov    QWORD PTR [rbp+0x278],rax
   140021e63:	lea    rcx,[rbp+0x128]
   140021e6a:	call   QWORD PTR [rip+0x14388]        # 0x1400361f8
   140021e70:	nop
   140021e71:	mov    QWORD PTR [rbp+0x128],r14
   140021e78:	mov    r8,QWORD PTR [rbx+0x10]
   140021e7c:	cmp    QWORD PTR [rbx+0x18],0x10
   140021e81:	jb     0x140021e86
   140021e83:	mov    rbx,QWORD PTR [rbx]
   140021e86:	xor    r9d,r9d
   140021e89:	mov    rdx,rbx
   140021e8c:	lea    rcx,[rbp+0x128]
   140021e93:	call   0x14001ce50
   140021e98:	nop
   140021e99:	lea    rcx,[rsp+0x50]
   140021e9e:	call   QWORD PTR [rip+0x14354]        # 0x1400361f8
   140021ea4:	nop
   140021ea5:	mov    QWORD PTR [rbp-0x40],r12
   140021ea9:	lea    rax,[rip+0x1a148]        # 0x14003bff8
   140021eb0:	mov    QWORD PTR [rsp+0x50],rax
   140021eb5:	lea    rax,[rip+0x1a1bc]        # 0x14003c078
   140021ebc:	mov    QWORD PTR [rbp-0x48],rax
   140021ec0:	lea    rcx,[rbp-0x38]
   140021ec4:	call   0x140011650
   140021ec9:	lea    rax,[rbp-0x38]
   140021ecd:	mov    QWORD PTR [rbp-0x40],rax
   140021ed1:	lea    rcx,[rbp-0x48]
   140021ed5:	mov    rax,QWORD PTR [rbp-0x38]
   140021ed9:	mov    QWORD PTR [rax+0x10],rcx
   140021edd:	lea    r14,[rip+0x1a1ac]        # 0x14003c090
   140021ee4:	mov    QWORD PTR [rsp+0x50],r14
   140021ee9:	lea    r15,[rip+0x1a220]        # 0x14003c110
   140021ef0:	mov    QWORD PTR [rbp-0x48],r15
   140021ef4:	mov    ecx,0x50
   140021ef9:	call   0x14003027c
   140021efe:	mov    rbx,rax
   140021f01:	mov    QWORD PTR [rbp+0x278],rax
   140021f08:	test   rax,rax
   140021f0b:	je     0x140021f43
   140021f0d:	mov    edx,0xf
   140021f12:	mov    rcx,rax
   140021f15:	call   0x1400158c0
   140021f1a:	nop
   140021f1b:	mov    ecx,0x1000
   140021f20:	call   0x14003027c
   140021f25:	test   rax,rax
   140021f28:	je     0x140021f3c
   140021f2a:	mov    QWORD PTR [rbx+0x28],rax
   140021f2e:	mov    QWORD PTR [rbx+0x30],0x1000
   140021f36:	mov    DWORD PTR [rbx+0x48],r12d
   140021f3a:	jmp    0x140021f46
   140021f3c:	call   QWORD PTR [rip+0x142d6]        # 0x140036218
   140021f42:	nop
   140021f43:	mov    rbx,r12
   140021f46:	lea    rax,[rsp+0x28]
   140021f4b:	mov    QWORD PTR [rbp+0x278],rax
   140021f52:	mov    QWORD PTR [rsp+0x28],rbx
   140021f57:	mov    QWORD PTR [rsp+0x30],r12
   140021f5c:	lea    r8,[rsp+0x30]
   140021f61:	mov    rdx,rbx
   140021f64:	lea    rcx,[rsp+0x28]
   140021f69:	call   0x14000da40
   140021f6e:	nop
   140021f6f:	or     rdi,0xffffffffffffffff
   140021f73:	mov    r9,rdi
   140021f76:	mov    r8,rdi
   140021f79:	lea    rdx,[rsp+0x28]
   140021f7e:	mov    rcx,QWORD PTR [rbp-0x40]
   140021f82:	call   0x14000b200
   140021f87:	nop
   140021f88:	mov    rbx,QWORD PTR [rsp+0x30]
   140021f8d:	test   rbx,rbx
   140021f90:	je     0x140021fb0
   140021f92:	lock dec DWORD PTR [rbx+0x8]
   140021f96:	jne    0x140021fb0
   140021f98:	mov    rax,QWORD PTR [rbx]
   140021f9b:	mov    rcx,rbx
   140021f9e:	call   QWORD PTR [rax+0x8]
   140021fa1:	lock dec DWORD PTR [rbx+0xc]
   140021fa5:	jne    0x140021fb0
   140021fa7:	mov    rax,QWORD PTR [rbx]
   140021faa:	mov    rcx,rbx
   140021fad:	call   QWORD PTR [rax+0x10]
   140021fb0:	lea    rax,[rbp+0x110]
   140021fb7:	mov    QWORD PTR [rbp+0x288],rax
   140021fbe:	mov    r9,rdi
   140021fc1:	mov    r8,rdi
   140021fc4:	lea    rdx,[rbp+0x288]
   140021fcb:	mov    rcx,QWORD PTR [rbp-0x40]
   140021fcf:	call   0x14000b380
   140021fd4:	lea    rax,[rbp+0x10]
   140021fd8:	mov    QWORD PTR [rbp+0x278],rax
   140021fdf:	lea    rax,[rsp+0x50]
   140021fe4:	mov    QWORD PTR [rbp+0x280],rax
   140021feb:	lea    rax,[rbp+0x280]
   140021ff2:	mov    QWORD PTR [rsp+0x38],rax
   140021ff7:	lea    rax,[rbp+0x278]
   140021ffe:	mov    QWORD PTR [rsp+0x40],rax
   140022003:	mov    QWORD PTR [rsp+0x48],0x1000
   14002200c:	movups xmm0,XMMWORD PTR [rsp+0x38]
   140022011:	movaps XMMWORD PTR [rbp-0x10],xmm0
   140022015:	movsd  xmm1,QWORD PTR [rsp+0x48]
   14002201b:	movsd  QWORD PTR [rbp+0x0],xmm1
   140022020:	lea    r8,[rbp+0x278]
   140022027:	lea    rdx,[rbp+0x280]
   14002202e:	lea    rcx,[rbp-0x10]
   140022032:	call   0x1400089f0
   140022037:	mov    rdx,rsi
   14002203a:	lea    rcx,[rbp+0x10]
   14002203e:	call   0x14002cb00
   140022043:	mov    DWORD PTR [rsp+0x20],0x7
   14002204b:	mov    QWORD PTR [rsp+0x50],r14
   140022050:	mov    QWORD PTR [rbp-0x48],r15
   140022054:	mov    rax,QWORD PTR [rbp-0x40]
   140022058:	mov    rcx,QWORD PTR [rax]
   14002205b:	test   BYTE PTR [rcx+0x30],0x1
   14002205f:	je     0x14002206d
   140022061:	lea    rcx,[rsp+0x50]
   140022066:	call   QWORD PTR [rip+0x1416c]        # 0x1400361d8
   14002206c:	nop
   14002206d:	mov    rbx,QWORD PTR [rbp-0x30]
   140022071:	test   rbx,rbx
   140022074:	je     0x140022095
   140022076:	lock dec DWORD PTR [rbx+0x8]
   14002207a:	jne    0x140022095
   14002207c:	mov    rax,QWORD PTR [rbx]
   14002207f:	mov    rcx,rbx
   140022082:	call   QWORD PTR [rax+0x8]
   140022085:	lock dec DWORD PTR [rbx+0xc]
   140022089:	jne    0x140022095
   14002208b:	mov    rax,QWORD PTR [rbx]
   14002208e:	mov    rcx,rbx
   140022091:	call   QWORD PTR [rax+0x10]
   140022094:	nop
   140022095:	lea    rax,[rip+0x19f14]        # 0x14003bfb0
   14002209c:	mov    QWORD PTR [rbp-0x48],rax
   1400220a0:	lea    rcx,[rsp+0x50]
   1400220a5:	call   QWORD PTR [rip+0x14145]        # 0x1400361f0
   1400220ab:	nop
   1400220ac:	mov    rax,QWORD PTR [rbp+0x110]
   1400220b3:	movsxd rcx,DWORD PTR [rax+0x4]
   1400220b7:	mov    QWORD PTR [rbp+rcx*1+0x110],r13
   1400220bf:	mov    rax,QWORD PTR [rbp+0x110]
   1400220c6:	movsxd rcx,DWORD PTR [rax+0x4]
   1400220ca:	lea    edx,[rcx-0x98]
   1400220d0:	mov    DWORD PTR [rbp+rcx*1+0x10c],edx
   1400220d7:	lea    rcx,[rbp+0x128]
   1400220de:	call   0x140017170
   1400220e3:	lea    rcx,[rbp+0x130]
   1400220ea:	call   QWORD PTR [rip+0x14030]        # 0x140036120
   1400220f0:	lea    rcx,[rbp+0x1a8]
   1400220f7:	call   QWORD PTR [rip+0x140a3]        # 0x1400361a0
   1400220fd:	nop
   1400220fe:	mov    rax,QWORD PTR [rbp+0x10]
   140022102:	movsxd rcx,DWORD PTR [rax+0x4]
   140022106:	mov    QWORD PTR [rbp+rcx*1+0x10],r13
   14002210b:	mov    rax,QWORD PTR [rbp+0x10]
   14002210f:	movsxd rcx,DWORD PTR [rax+0x4]
   140022113:	lea    edx,[rcx-0x98]
   140022119:	mov    DWORD PTR [rbp+rcx*1+0xc],edx
   14002211d:	lea    rcx,[rbp+0x28]
   140022121:	call   0x140017170
   140022126:	lea    rcx,[rbp+0x30]
   14002212a:	call   QWORD PTR [rip+0x13ff0]        # 0x140036120
   140022130:	lea    rcx,[rbp+0xa8]
   140022137:	call   QWORD PTR [rip+0x14063]        # 0x1400361a0
   14002213d:	mov    rax,rsi
   140022140:	add    rsp,0x328
   140022147:	pop    r15
   140022149:	pop    r14
   14002214b:	pop    r13
   14002214d:	pop    r12
   14002214f:	pop    rdi
   140022150:	pop    rsi
   140022151:	pop    rbx
   140022152:	pop    rbp
   140022153:	ret    
   140022154:	int3   
   140022155:	int3   
   140022156:	int3   
   140022157:	int3   
   140022158:	int3   
   140022159:	int3   
   14002215a:	int3   
   14002215b:	int3   
   14002215c:	int3   
   14002215d:	int3   
   14002215e:	int3   
   14002215f:	int3   
   140022160:	mov    QWORD PTR [rsp+0x8],rbx
   140022165:	push   rdi
   140022166:	sub    rsp,0x20
   14002216a:	mov    ecx,r8d
   14002216d:	mov    edi,r8d
   140022170:	mov    rbx,rdx
   140022173:	call   QWORD PTR [rip+0x14147]        # 0x1400362c0
   140022179:	mov    DWORD PTR [rbx],edi
   14002217b:	test   rax,rax
   14002217e:	lea    rax,[rip+0x32e7b]        # 0x140055000
   140022185:	jne    0x14002218e
   140022187:	lea    rax,[rip+0x32e82]        # 0x140055010
   14002218e:	mov    QWORD PTR [rbx+0x8],rax
   140022192:	mov    rax,rbx
   140022195:	mov    rbx,QWORD PTR [rsp+0x30]
   14002219a:	add    rsp,0x20
   14002219e:	pop    rdi
   14002219f:	ret    
   1400221a0:	mov    DWORD PTR [rdx],r8d
   1400221a3:	mov    QWORD PTR [rdx+0x8],rcx
   1400221a7:	mov    rax,rdx
   1400221aa:	ret    
   1400221ab:	int3   
   1400221ac:	int3   
   1400221ad:	int3   
   1400221ae:	int3   
   1400221af:	int3   
   1400221b0:	mov    rax,QWORD PTR [rcx+0x78]
   1400221b4:	mov    rcx,QWORD PTR [rax]
   1400221b7:	mov    rax,QWORD PTR [rcx]
   1400221ba:	mov    rax,QWORD PTR [rax+0x10]
   1400221be:	ret    
   1400221bf:	int3   
   1400221c0:	add    rcx,0x11
   1400221c4:	jmp    0x1400221d0
   1400221c9:	int3   
   1400221ca:	int3   
   1400221cb:	int3   
   1400221cc:	int3   
   1400221cd:	int3   
   1400221ce:	int3   
   1400221cf:	int3   
   1400221d0:	rex push rdi
   1400221d2:	sub    rsp,0x30
   1400221d6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400221df:	mov    QWORD PTR [rsp+0x48],rbx
   1400221e4:	mov    QWORD PTR [rsp+0x50],rbp
   1400221e9:	mov    QWORD PTR [rsp+0x58],rsi
   1400221ee:	mov    rsi,rcx
   1400221f1:	xor    ebp,ebp
   1400221f3:	test   rcx,rcx
   1400221f6:	lea    rax,[rcx-0x11]
   1400221fa:	jne    0x1400221fe
   1400221fc:	mov    eax,ebp
   1400221fe:	mov    rax,QWORD PTR [rax+0x8]
   140022202:	mov    rbx,QWORD PTR [rax+0x68]
   140022206:	test   rbx,rbx
   140022209:	je     0x140022211
   14002220b:	add    rbx,0xffffffffffffffa0
   14002220f:	jmp    0x140022214
   140022211:	mov    rbx,rbp
   140022214:	mov    QWORD PTR [rsp+0x40],rbx
   140022219:	call   0x140024ae0
   14002221e:	cmp    rbx,rax
   140022221:	je     0x140022278
   140022223:	mov    rax,QWORD PTR [rbx+0x68]
   140022227:	test   rax,rax
   14002222a:	lea    rdi,[rax-0x60]
   14002222e:	jne    0x140022233
   140022230:	mov    rdi,rbp
   140022233:	lea    rcx,[rbx+0x20]
   140022237:	call   0x140017040
   14002223c:	nop
   14002223d:	cmp    QWORD PTR [rbx+0x18],0x10
   140022242:	jb     0x14002224c
   140022244:	mov    rcx,QWORD PTR [rbx]
   140022247:	call   0x140030282
   14002224c:	mov    QWORD PTR [rbx+0x18],0xf
   140022254:	mov    QWORD PTR [rbx+0x10],rbp
   140022258:	mov    BYTE PTR [rbx],0x0
   14002225b:	mov    rcx,rbx
   14002225e:	call   0x140030282
   140022263:	mov    rbx,rdi
   140022266:	mov    QWORD PTR [rsp+0x40],rbx
   14002226b:	mov    rcx,rsi
   14002226e:	call   0x140024ae0
   140022273:	cmp    rdi,rax
   140022276:	jne    0x140022223
   140022278:	mov    rbx,QWORD PTR [rsp+0x48]
   14002227d:	mov    rbp,QWORD PTR [rsp+0x50]
   140022282:	mov    rsi,QWORD PTR [rsp+0x58]
   140022287:	add    rsp,0x30
   14002228b:	pop    rdi
   14002228c:	ret    
   14002228d:	int3   
   14002228e:	int3   
   14002228f:	int3   
   140022290:	mov    QWORD PTR [rsp+0x10],rdx
   140022295:	push   rbx
   140022296:	sub    rsp,0x30
   14002229a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400222a3:	mov    rbx,rdx
   1400222a6:	lea    rcx,[rdx+0x20]
   1400222aa:	call   0x140017040
   1400222af:	nop
   1400222b0:	cmp    QWORD PTR [rbx+0x18],0x10
   1400222b5:	jb     0x1400222bf
   1400222b7:	mov    rcx,QWORD PTR [rbx]
   1400222ba:	call   0x140030282
   1400222bf:	mov    QWORD PTR [rbx+0x18],0xf
   1400222c7:	mov    QWORD PTR [rbx+0x10],0x0
   1400222cf:	mov    BYTE PTR [rbx],0x0
   1400222d2:	add    rsp,0x30
   1400222d6:	pop    rbx
   1400222d7:	ret    
   1400222d8:	int3   
   1400222d9:	int3   
   1400222da:	int3   
   1400222db:	int3   
   1400222dc:	int3   
   1400222dd:	int3   
   1400222de:	int3   
   1400222df:	int3   
   1400222e0:	mov    QWORD PTR [rsp+0x10],rdx
   1400222e5:	push   rbx
   1400222e6:	sub    rsp,0x30
   1400222ea:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400222f3:	mov    rbx,rdx
   1400222f6:	lea    rcx,[rdx+0x20]
   1400222fa:	call   0x140017040
   1400222ff:	nop
   140022300:	cmp    QWORD PTR [rbx+0x18],0x10
   140022305:	jb     0x14002230f
   140022307:	mov    rcx,QWORD PTR [rbx]
   14002230a:	call   0x140030282
   14002230f:	mov    QWORD PTR [rbx+0x18],0xf
   140022317:	mov    QWORD PTR [rbx+0x10],0x0
   14002231f:	mov    BYTE PTR [rbx],0x0
   140022322:	mov    rcx,rbx
   140022325:	add    rsp,0x30
   140022329:	pop    rbx
   14002232a:	jmp    0x140030282
   14002232f:	int3   
   140022330:	lea    rax,[rcx+0x8]
   140022334:	ret    
   140022335:	int3   
   140022336:	int3   
   140022337:	int3   
   140022338:	int3   
   140022339:	int3   
   14002233a:	int3   
   14002233b:	int3   
   14002233c:	int3   
   14002233d:	int3   
   14002233e:	int3   
   14002233f:	int3   
   140022340:	mov    rax,QWORD PTR [rcx]
   140022343:	ret    
   140022344:	int3   
   140022345:	int3   
   140022346:	int3   
   140022347:	int3   
   140022348:	int3   
   140022349:	int3   
   14002234a:	int3   
   14002234b:	int3   
   14002234c:	int3   
   14002234d:	int3   
   14002234e:	int3   
   14002234f:	int3   
   140022350:	mov    rax,QWORD PTR [rcx]
   140022353:	ret    
   140022354:	int3   
   140022355:	int3   
   140022356:	int3   
   140022357:	int3   
   140022358:	int3   
   140022359:	int3   
   14002235a:	int3   
   14002235b:	int3   
   14002235c:	int3   
   14002235d:	int3   
   14002235e:	int3   
   14002235f:	int3   
   140022360:	mov    rax,QWORD PTR [rdx]
   140022363:	ret    
   140022364:	int3   
   140022365:	int3   
   140022366:	int3   
   140022367:	int3   
   140022368:	int3   
   140022369:	int3   
   14002236a:	int3   
   14002236b:	int3   
   14002236c:	int3   
   14002236d:	int3   
   14002236e:	int3   
   14002236f:	int3   
   140022370:	mov    rax,QWORD PTR [rdx]
   140022373:	ret    
   140022374:	int3   
   140022375:	int3   
   140022376:	int3   
   140022377:	int3   
   140022378:	int3   
   140022379:	int3   
   14002237a:	int3   
   14002237b:	int3   
   14002237c:	int3   
   14002237d:	int3   
   14002237e:	int3   
   14002237f:	int3   
   140022380:	mov    rax,rdx
   140022383:	ret    
   140022384:	int3   
   140022385:	int3   
   140022386:	int3   
   140022387:	int3   
   140022388:	int3   
   140022389:	int3   
   14002238a:	int3   
   14002238b:	int3   
   14002238c:	int3   
   14002238d:	int3   
   14002238e:	int3   
   14002238f:	int3   
   140022390:	lea    rax,[rcx+0x68]
   140022394:	ret    
   140022395:	int3   
   140022396:	int3   
   140022397:	int3   
   140022398:	int3   
   140022399:	int3   
   14002239a:	int3   
   14002239b:	int3   
   14002239c:	int3   
   14002239d:	int3   
   14002239e:	int3   
   14002239f:	int3   
   1400223a0:	rex push rbx
   1400223a2:	sub    rsp,0x20
   1400223a6:	cmp    BYTE PTR [rcx+0x8],0x0
   1400223aa:	mov    rbx,rcx
   1400223ad:	jne    0x1400223b4
   1400223af:	call   0x140023310
   1400223b4:	movsx  rax,BYTE PTR [rbx+0x9]
   1400223b9:	lea    rcx,[rip+0x1c3b0]        # 0x14003e770
   1400223c0:	movzx  eax,BYTE PTR [rax+rcx*1]
   1400223c4:	add    rsp,0x20
   1400223c8:	pop    rbx
   1400223c9:	ret    
   1400223ca:	int3   
   1400223cb:	int3   
   1400223cc:	int3   
   1400223cd:	int3   
   1400223ce:	int3   
   1400223cf:	int3   
   1400223d0:	mov    rax,QWORD PTR [rcx]
   1400223d3:	add    rcx,0x8
   1400223d7:	movzx  edx,BYTE PTR [rax]
   1400223da:	jmp    0x14001a5a0
   1400223df:	int3   
   1400223e0:	rex push rbx
   1400223e2:	sub    rsp,0x20
   1400223e6:	cmp    BYTE PTR [rcx+0x8],0x0
   1400223ea:	mov    rbx,rcx
   1400223ed:	jne    0x1400223fe
   1400223ef:	call   0x140023310
   1400223f4:	movzx  eax,BYTE PTR [rbx+0x9]
   1400223f8:	add    rsp,0x20
   1400223fc:	pop    rbx
   1400223fd:	ret    
   1400223fe:	movzx  eax,BYTE PTR [rcx+0x9]
   140022402:	add    rsp,0x20
   140022406:	pop    rbx
   140022407:	ret    
   140022408:	int3   
   140022409:	int3   
   14002240a:	int3   
   14002240b:	int3   
   14002240c:	int3   
   14002240d:	int3   
   14002240e:	int3   
   14002240f:	int3   
   140022410:	rex push rbx
   140022412:	sub    rsp,0x20
   140022416:	cmp    BYTE PTR [rcx+0x10],0x0
   14002241a:	mov    rbx,rcx
   14002241d:	jne    0x14002242e
   14002241f:	call   0x1400233b0
   140022424:	movzx  eax,BYTE PTR [rbx+0x11]
   140022428:	add    rsp,0x20
   14002242c:	pop    rbx
   14002242d:	ret    
   14002242e:	movzx  eax,BYTE PTR [rcx+0x11]
   140022432:	add    rsp,0x20
   140022436:	pop    rbx
   140022437:	ret    
   140022438:	int3   
   140022439:	int3   
   14002243a:	int3   
   14002243b:	int3   
   14002243c:	int3   
   14002243d:	int3   
   14002243e:	int3   
   14002243f:	int3   
   140022440:	mov    rax,QWORD PTR [rcx]
   140022443:	ret    
   140022444:	int3   
   140022445:	int3   
   140022446:	int3   
   140022447:	int3   
   140022448:	int3   
   140022449:	int3   
   14002244a:	int3   
   14002244b:	int3   
   14002244c:	int3   
   14002244d:	int3   
   14002244e:	int3   
   14002244f:	int3   
   140022450:	mov    rax,QWORD PTR [rcx]
   140022453:	ret    
   140022454:	int3   
   140022455:	int3   
   140022456:	int3   
   140022457:	int3   
   140022458:	int3   
   140022459:	int3   
   14002245a:	int3   
   14002245b:	int3   
   14002245c:	int3   
   14002245d:	int3   
   14002245e:	int3   
   14002245f:	int3   
   140022460:	mov    rax,rcx
   140022463:	ret    
   140022464:	int3   
   140022465:	int3   
   140022466:	int3   
   140022467:	int3   
   140022468:	int3   
   140022469:	int3   
   14002246a:	int3   
   14002246b:	int3   
   14002246c:	int3   
   14002246d:	int3   
   14002246e:	int3   
   14002246f:	int3   
   140022470:	mov    rax,rcx
   140022473:	ret    
   140022474:	int3   
   140022475:	int3   
   140022476:	int3   
   140022477:	int3   
   140022478:	int3   
   140022479:	int3   
   14002247a:	int3   
   14002247b:	int3   
   14002247c:	int3   
   14002247d:	int3   
   14002247e:	int3   
   14002247f:	int3   
   140022480:	mov    rax,rcx
   140022483:	ret    
   140022484:	int3   
   140022485:	int3   
   140022486:	int3   
   140022487:	int3   
   140022488:	int3   
   140022489:	int3   
   14002248a:	int3   
   14002248b:	int3   
   14002248c:	int3   
   14002248d:	int3   
   14002248e:	int3   
   14002248f:	int3   
   140022490:	mov    rax,rcx
   140022493:	ret    
   140022494:	int3   
   140022495:	int3   
   140022496:	int3   
   140022497:	int3   
   140022498:	int3   
   140022499:	int3   
   14002249a:	int3   
   14002249b:	int3   
   14002249c:	int3   
   14002249d:	int3   
   14002249e:	int3   
   14002249f:	int3   
   1400224a0:	mov    rax,rcx
   1400224a3:	ret    
   1400224a4:	int3   
   1400224a5:	int3   
   1400224a6:	int3   
   1400224a7:	int3   
   1400224a8:	int3   
   1400224a9:	int3   
   1400224aa:	int3   
   1400224ab:	int3   
   1400224ac:	int3   
   1400224ad:	int3   
   1400224ae:	int3   
   1400224af:	int3   
   1400224b0:	mov    rax,rcx
   1400224b3:	ret    
   1400224b4:	int3   
   1400224b5:	int3   
   1400224b6:	int3   
   1400224b7:	int3   
   1400224b8:	int3   
   1400224b9:	int3   
   1400224ba:	int3   
   1400224bb:	int3   
   1400224bc:	int3   
   1400224bd:	int3   
   1400224be:	int3   
   1400224bf:	int3   
   1400224c0:	mov    rax,rcx
   1400224c3:	ret    
   1400224c4:	int3   
   1400224c5:	int3   
   1400224c6:	int3   
   1400224c7:	int3   
   1400224c8:	int3   
   1400224c9:	int3   
   1400224ca:	int3   
   1400224cb:	int3   
   1400224cc:	int3   
   1400224cd:	int3   
   1400224ce:	int3   
   1400224cf:	int3   
   1400224d0:	mov    rax,rcx
   1400224d3:	ret    
   1400224d4:	int3   
   1400224d5:	int3   
   1400224d6:	int3   
   1400224d7:	int3   
   1400224d8:	int3   
   1400224d9:	int3   
   1400224da:	int3   
   1400224db:	int3   
   1400224dc:	int3   
   1400224dd:	int3   
   1400224de:	int3   
   1400224df:	int3   
   1400224e0:	mov    rax,rcx
   1400224e3:	ret    
   1400224e4:	int3   
   1400224e5:	int3   
   1400224e6:	int3   
   1400224e7:	int3   
   1400224e8:	int3   
   1400224e9:	int3   
   1400224ea:	int3   
   1400224eb:	int3   
   1400224ec:	int3   
   1400224ed:	int3   
   1400224ee:	int3   
   1400224ef:	int3   
   1400224f0:	mov    rax,rcx
   1400224f3:	ret    
   1400224f4:	int3   
   1400224f5:	int3   
   1400224f6:	int3   
   1400224f7:	int3   
   1400224f8:	int3   
   1400224f9:	int3   
   1400224fa:	int3   
   1400224fb:	int3   
   1400224fc:	int3   
   1400224fd:	int3   
   1400224fe:	int3   
   1400224ff:	int3   
   140022500:	mov    rax,rcx
   140022503:	ret    
   140022504:	int3   
   140022505:	int3   
   140022506:	int3   
   140022507:	int3   
   140022508:	int3   
   140022509:	int3   
   14002250a:	int3   
   14002250b:	int3   
   14002250c:	int3   
   14002250d:	int3   
   14002250e:	int3   
   14002250f:	int3   
   140022510:	mov    rax,rcx
   140022513:	ret    
   140022514:	int3   
   140022515:	int3   
   140022516:	int3   
   140022517:	int3   
   140022518:	int3   
   140022519:	int3   
   14002251a:	int3   
   14002251b:	int3   
   14002251c:	int3   
   14002251d:	int3   
   14002251e:	int3   
   14002251f:	int3   
   140022520:	mov    rax,rcx
   140022523:	ret    
   140022524:	int3   
   140022525:	int3   
   140022526:	int3   
   140022527:	int3   
   140022528:	int3   
   140022529:	int3   
   14002252a:	int3   
   14002252b:	int3   
   14002252c:	int3   
   14002252d:	int3   
   14002252e:	int3   
   14002252f:	int3   
   140022530:	mov    rax,rcx
   140022533:	ret    
   140022534:	int3   
   140022535:	int3   
   140022536:	int3   
   140022537:	int3   
   140022538:	int3   
   140022539:	int3   
   14002253a:	int3   
   14002253b:	int3   
   14002253c:	int3   
   14002253d:	int3   
   14002253e:	int3   
   14002253f:	int3   
   140022540:	mov    rax,rcx
   140022543:	ret    
   140022544:	int3   
   140022545:	int3   
   140022546:	int3   
   140022547:	int3   
   140022548:	int3   
   140022549:	int3   
   14002254a:	int3   
   14002254b:	int3   
   14002254c:	int3   
   14002254d:	int3   
   14002254e:	int3   
   14002254f:	int3   
   140022550:	mov    rax,rcx
   140022553:	ret    
   140022554:	int3   
   140022555:	int3   
   140022556:	int3   
   140022557:	int3   
   140022558:	int3   
   140022559:	int3   
   14002255a:	int3   
   14002255b:	int3   
   14002255c:	int3   
   14002255d:	int3   
   14002255e:	int3   
   14002255f:	int3   
   140022560:	mov    rax,rcx
   140022563:	ret    
   140022564:	int3   
   140022565:	int3   
   140022566:	int3   
   140022567:	int3   
   140022568:	int3   
   140022569:	int3   
   14002256a:	int3   
   14002256b:	int3   
   14002256c:	int3   
   14002256d:	int3   
   14002256e:	int3   
   14002256f:	int3   
   140022570:	cmp    BYTE PTR [rcx],0x0
   140022573:	je     0x140022578
   140022575:	mov    BYTE PTR [rcx],0x0
   140022578:	ret    
   140022579:	int3   
   14002257a:	int3   
   14002257b:	int3   
   14002257c:	int3   
   14002257d:	int3   
   14002257e:	int3   
   14002257f:	int3   
   140022580:	cmp    BYTE PTR [rcx],0x0
   140022583:	je     0x140022588
   140022585:	mov    BYTE PTR [rcx],0x0
   140022588:	ret    
   140022589:	int3   
   14002258a:	int3   
   14002258b:	int3   
   14002258c:	int3   
   14002258d:	int3   
   14002258e:	int3   
   14002258f:	int3   
   140022590:	rex push rbx
   140022592:	sub    rsp,0x20
   140022596:	cmp    BYTE PTR [rcx],0x0
   140022599:	mov    rbx,rcx
   14002259c:	je     0x1400225c5
   14002259e:	cmp    QWORD PTR [rcx+0x20],0x10
   1400225a3:	jb     0x1400225ae
   1400225a5:	mov    rcx,QWORD PTR [rcx+0x8]
   1400225a9:	call   0x140030282
   1400225ae:	mov    QWORD PTR [rbx+0x20],0xf
   1400225b6:	mov    QWORD PTR [rbx+0x18],0x0
   1400225be:	mov    BYTE PTR [rbx+0x8],0x0
   1400225c2:	mov    BYTE PTR [rbx],0x0
   1400225c5:	add    rsp,0x20
   1400225c9:	pop    rbx
   1400225ca:	ret    
   1400225cb:	int3   
   1400225cc:	int3   
   1400225cd:	int3   
   1400225ce:	int3   
   1400225cf:	int3   
   1400225d0:	test   rcx,rcx
   1400225d3:	je     0x1400225e0
   1400225d5:	mov    rax,QWORD PTR [rcx]
   1400225d8:	mov    edx,0x1
   1400225dd:	rex.W jmp QWORD PTR [rax]
   1400225e0:	ret    
   1400225e1:	int3   
   1400225e2:	int3   
   1400225e3:	int3   
   1400225e4:	int3   
   1400225e5:	int3   
   1400225e6:	int3   
   1400225e7:	int3   
   1400225e8:	int3   
   1400225e9:	int3   
   1400225ea:	int3   
   1400225eb:	int3   
   1400225ec:	int3   
   1400225ed:	int3   
   1400225ee:	int3   
   1400225ef:	int3   
   1400225f0:	mov    BYTE PTR [rcx],0x0
   1400225f3:	ret    
   1400225f4:	int3   
   1400225f5:	int3   
   1400225f6:	int3   
   1400225f7:	int3   
   1400225f8:	int3   
   1400225f9:	int3   
   1400225fa:	int3   
   1400225fb:	int3   
   1400225fc:	int3   
   1400225fd:	int3   
   1400225fe:	int3   
   1400225ff:	int3   
   140022600:	mov    BYTE PTR [rcx],0x0
   140022603:	ret    
   140022604:	int3   
   140022605:	int3   
   140022606:	int3   
   140022607:	int3   
   140022608:	int3   
   140022609:	int3   
   14002260a:	int3   
   14002260b:	int3   
   14002260c:	int3   
   14002260d:	int3   
   14002260e:	int3   
   14002260f:	int3   
   140022610:	rex push rbx
   140022612:	sub    rsp,0x20
   140022616:	cmp    QWORD PTR [rcx+0x20],0x10
   14002261b:	mov    rbx,rcx
   14002261e:	jb     0x140022629
   140022620:	mov    rcx,QWORD PTR [rcx+0x8]
   140022624:	call   0x140030282
   140022629:	mov    QWORD PTR [rbx+0x20],0xf
   140022631:	mov    QWORD PTR [rbx+0x18],0x0
   140022639:	mov    BYTE PTR [rbx+0x8],0x0
   14002263d:	mov    BYTE PTR [rbx],0x0
   140022640:	add    rsp,0x20
   140022644:	pop    rbx
   140022645:	ret    
   140022646:	int3   
   140022647:	int3   
   140022648:	int3   
   140022649:	int3   
   14002264a:	int3   
   14002264b:	int3   
   14002264c:	int3   
   14002264d:	int3   
   14002264e:	int3   
   14002264f:	int3   
   140022650:	rex push rbx
   140022652:	sub    rsp,0x20
   140022656:	mov    rbx,QWORD PTR [rcx+0x10]
   14002265a:	test   rbx,rbx
   14002265d:	je     0x140022674
   14002265f:	mov    rcx,rbx
   140022662:	call   0x140018f40
   140022667:	mov    rcx,rbx
   14002266a:	add    rsp,0x20
   14002266e:	pop    rbx
   14002266f:	jmp    0x140030282
   140022674:	add    rsp,0x20
   140022678:	pop    rbx
   140022679:	ret    
   14002267a:	int3   
   14002267b:	int3   
   14002267c:	int3   
   14002267d:	int3   
   14002267e:	int3   
   14002267f:	int3   
   140022680:	rex push rbx
   140022682:	sub    rsp,0x30
   140022686:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002268f:	mov    rbx,QWORD PTR [rcx+0x10]
   140022693:	mov    QWORD PTR [rsp+0x40],rbx
   140022698:	test   rbx,rbx
   14002269b:	je     0x1400226d1
   14002269d:	mov    rcx,QWORD PTR [rbx+0x20]
   1400226a1:	test   rcx,rcx
   1400226a4:	je     0x1400226ac
   1400226a6:	call   0x140030282
   1400226ab:	nop
   1400226ac:	xor    r8d,r8d
   1400226af:	mov    dl,0x1
   1400226b1:	mov    rcx,rbx
   1400226b4:	call   QWORD PTR [rip+0x13eee]        # 0x1400365a8
   1400226ba:	nop
   1400226bb:	mov    rcx,rbx
   1400226be:	call   QWORD PTR [rip+0x13f34]        # 0x1400365f8
   1400226c4:	mov    rcx,rbx
   1400226c7:	add    rsp,0x30
   1400226cb:	pop    rbx
   1400226cc:	jmp    0x140030282
   1400226d1:	add    rsp,0x30
   1400226d5:	pop    rbx
   1400226d6:	ret    
   1400226d7:	int3   
   1400226d8:	int3   
   1400226d9:	int3   
   1400226da:	int3   
   1400226db:	int3   
   1400226dc:	int3   
   1400226dd:	int3   
   1400226de:	int3   
   1400226df:	int3   
   1400226e0:	rex push rbx
   1400226e2:	sub    rsp,0x30
   1400226e6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400226ef:	mov    rbx,QWORD PTR [rcx+0x10]
   1400226f3:	mov    QWORD PTR [rsp+0x40],rbx
   1400226f8:	test   rbx,rbx
   1400226fb:	je     0x140022731
   1400226fd:	mov    rcx,QWORD PTR [rbx+0x28]
   140022701:	test   rcx,rcx
   140022704:	je     0x14002270c
   140022706:	call   0x140030282
   14002270b:	nop
   14002270c:	xor    r8d,r8d
   14002270f:	xor    edx,edx
   140022711:	mov    rcx,rbx
   140022714:	call   QWORD PTR [rip+0x13e8e]        # 0x1400365a8
   14002271a:	nop
   14002271b:	mov    rcx,rbx
   14002271e:	call   QWORD PTR [rip+0x13ed4]        # 0x1400365f8
   140022724:	mov    rcx,rbx
   140022727:	add    rsp,0x30
   14002272b:	pop    rbx
   14002272c:	jmp    0x140030282
   140022731:	add    rsp,0x30
   140022735:	pop    rbx
   140022736:	ret    
   140022737:	int3   
   140022738:	int3   
   140022739:	int3   
   14002273a:	int3   
   14002273b:	int3   
   14002273c:	int3   
   14002273d:	int3   
   14002273e:	int3   
   14002273f:	int3   
   140022740:	mov    rcx,QWORD PTR [rcx+0x10]
   140022744:	jmp    0x140030282
   140022749:	int3   
   14002274a:	int3   
   14002274b:	int3   
   14002274c:	int3   
   14002274d:	int3   
   14002274e:	int3   
   14002274f:	int3   
   140022750:	movzx  eax,BYTE PTR [rcx+0x18]
   140022754:	ret    
   140022755:	int3   
   140022756:	int3   
   140022757:	int3   
   140022758:	int3   
   140022759:	int3   
   14002275a:	int3   
   14002275b:	int3   
   14002275c:	int3   
   14002275d:	int3   
   14002275e:	int3   
   14002275f:	int3   
   140022760:	rex push rbx
   140022762:	sub    rsp,0x30
   140022766:	mov    rbx,rdx
   140022769:	mov    rdx,QWORD PTR [rcx+0x20]
   14002276d:	xor    r8d,r8d
   140022770:	mov    QWORD PTR [rbx+0x18],0xf
   140022778:	mov    QWORD PTR [rbx+0x10],r8
   14002277c:	mov    BYTE PTR [rbx],r8b
   14002277f:	mov    DWORD PTR [rsp+0x20],r8d
   140022784:	cmp    BYTE PTR [rdx],r8b
   140022787:	je     0x14002279a
   140022789:	or     r8,0xffffffffffffffff
   14002278d:	nop    DWORD PTR [rax]
   140022790:	inc    r8
   140022793:	cmp    BYTE PTR [rdx+r8*1],0x0
   140022798:	jne    0x140022790
   14002279a:	mov    rcx,rbx
   14002279d:	call   0x14001f070
   1400227a2:	mov    rax,rbx
   1400227a5:	add    rsp,0x30
   1400227a9:	pop    rbx
   1400227aa:	ret    
   1400227ab:	int3   
   1400227ac:	int3   
   1400227ad:	int3   
   1400227ae:	int3   
   1400227af:	int3   
   1400227b0:	rex push rbx
   1400227b2:	sub    rsp,0x30
   1400227b6:	mov    rbx,rdx
   1400227b9:	mov    rdx,QWORD PTR [rcx+0x10]
   1400227bd:	xor    r8d,r8d
   1400227c0:	mov    QWORD PTR [rbx+0x18],0xf
   1400227c8:	mov    QWORD PTR [rbx+0x10],r8
   1400227cc:	mov    BYTE PTR [rbx],r8b
   1400227cf:	mov    DWORD PTR [rsp+0x20],r8d
   1400227d4:	cmp    BYTE PTR [rdx],r8b
   1400227d7:	je     0x1400227ea
   1400227d9:	or     r8,0xffffffffffffffff
   1400227dd:	nop    DWORD PTR [rax]
   1400227e0:	inc    r8
   1400227e3:	cmp    BYTE PTR [rdx+r8*1],0x0
   1400227e8:	jne    0x1400227e0
   1400227ea:	mov    rcx,rbx
   1400227ed:	call   0x14001f070
   1400227f2:	mov    rax,rbx
   1400227f5:	add    rsp,0x30
   1400227f9:	pop    rbx
   1400227fa:	ret    
   1400227fb:	int3   
   1400227fc:	int3   
   1400227fd:	int3   
   1400227fe:	int3   
   1400227ff:	int3   
   140022800:	movzx  eax,BYTE PTR [rcx+0x19]
   140022804:	ret    
   140022805:	int3   
   140022806:	int3   
   140022807:	int3   
   140022808:	int3   
   140022809:	int3   
   14002280a:	int3   
   14002280b:	int3   
   14002280c:	int3   
   14002280d:	int3   
   14002280e:	int3   
   14002280f:	int3   
   140022810:	rex push rbx
   140022812:	sub    rsp,0x30
   140022816:	mov    rbx,rdx
   140022819:	mov    rdx,QWORD PTR [rcx+0x28]
   14002281d:	xor    r8d,r8d
   140022820:	mov    QWORD PTR [rbx+0x18],0xf
   140022828:	mov    QWORD PTR [rbx+0x10],r8
   14002282c:	mov    BYTE PTR [rbx],r8b
   14002282f:	mov    DWORD PTR [rsp+0x20],r8d
   140022834:	cmp    BYTE PTR [rdx],r8b
   140022837:	je     0x14002284a
   140022839:	or     r8,0xffffffffffffffff
   14002283d:	nop    DWORD PTR [rax]
   140022840:	inc    r8
   140022843:	cmp    BYTE PTR [rdx+r8*1],0x0
   140022848:	jne    0x140022840
   14002284a:	mov    rcx,rbx
   14002284d:	call   0x14001f070
   140022852:	mov    rax,rbx
   140022855:	add    rsp,0x30
   140022859:	pop    rbx
   14002285a:	ret    
   14002285b:	int3   
   14002285c:	int3   
   14002285d:	int3   
   14002285e:	int3   
   14002285f:	int3   
   140022860:	rex push rbx
   140022862:	sub    rsp,0x30
   140022866:	mov    rbx,rdx
   140022869:	mov    rdx,rcx
   14002286c:	mov    DWORD PTR [rsp+0x20],0x0
   140022874:	mov    rcx,rbx
   140022877:	call   0x140022890
   14002287c:	mov    rax,rbx
   14002287f:	add    rsp,0x30
   140022883:	pop    rbx
   140022884:	ret    
   140022885:	int3   
   140022886:	int3   
   140022887:	int3   
   140022888:	int3   
   140022889:	int3   
   14002288a:	int3   
   14002288b:	int3   
   14002288c:	int3   
   14002288d:	int3   
   14002288e:	int3   
   14002288f:	int3   
   140022890:	rex push rbx
   140022892:	sub    rsp,0x30
   140022896:	xor    eax,eax
   140022898:	mov    QWORD PTR [rcx+0x18],0xf
   1400228a0:	or     r9,0xffffffffffffffff
   1400228a4:	mov    QWORD PTR [rcx+0x10],rax
   1400228a8:	xor    r8d,r8d
   1400228ab:	mov    rbx,rcx
   1400228ae:	mov    BYTE PTR [rcx],al
   1400228b0:	mov    DWORD PTR [rsp+0x20],eax
   1400228b4:	call   0x14001ef20
   1400228b9:	mov    rax,rbx
   1400228bc:	add    rsp,0x30
   1400228c0:	pop    rbx
   1400228c1:	ret    
   1400228c2:	int3   
   1400228c3:	int3   
   1400228c4:	int3   
   1400228c5:	int3   
   1400228c6:	int3   
   1400228c7:	int3   
   1400228c8:	int3   
   1400228c9:	int3   
   1400228ca:	int3   
   1400228cb:	int3   
   1400228cc:	int3   
   1400228cd:	int3   
   1400228ce:	int3   
   1400228cf:	int3   
   1400228d0:	mov    rcx,QWORD PTR [rcx+0x20]
   1400228d4:	xor    eax,eax
   1400228d6:	add    rcx,0x11
   1400228da:	je     0x1400228e8
   1400228dc:	add    rcx,0xffffffffffffffef
   1400228e0:	cmp    QWORD PTR [rcx+0x18],rax
   1400228e4:	sete   al
   1400228e7:	ret    
   1400228e8:	cmp    QWORD PTR [rax+0x18],rax
   1400228ec:	mov    rcx,rax
   1400228ef:	sete   al
   1400228f2:	ret    
   1400228f3:	int3   
   1400228f4:	int3   
   1400228f5:	int3   
   1400228f6:	int3   
   1400228f7:	int3   
   1400228f8:	int3   
   1400228f9:	int3   
   1400228fa:	int3   
   1400228fb:	int3   
   1400228fc:	int3   
   1400228fd:	int3   
   1400228fe:	int3   
   1400228ff:	int3   
   140022900:	xor    eax,eax
   140022902:	cmp    QWORD PTR [rcx+0x10],rax
   140022906:	sete   al
   140022909:	ret    
   14002290a:	int3   
   14002290b:	int3   
   14002290c:	int3   
   14002290d:	int3   
   14002290e:	int3   
   14002290f:	int3   
   140022910:	mov    rdx,QWORD PTR [rcx]
   140022913:	xor    eax,eax
   140022915:	cmp    QWORD PTR [rdx+0x8],rax
   140022919:	sete   al
   14002291c:	ret    
   14002291d:	int3   
   14002291e:	int3   
   14002291f:	int3   
   140022920:	xor    eax,eax
   140022922:	cmp    QWORD PTR [rcx+0x8],rax
   140022926:	sete   al
   140022929:	ret    
   14002292a:	int3   
   14002292b:	int3   
   14002292c:	int3   
   14002292d:	int3   
   14002292e:	int3   
   14002292f:	int3   
   140022930:	xor    eax,eax
   140022932:	test   rcx,rcx
   140022935:	je     0x140022943
   140022937:	add    rcx,0xffffffffffffffef
   14002293b:	cmp    QWORD PTR [rcx+0x18],rax
   14002293f:	sete   al
   140022942:	ret    
   140022943:	cmp    QWORD PTR [rax+0x18],rax
   140022947:	mov    rcx,rax
   14002294a:	sete   al
   14002294d:	ret    
   14002294e:	int3   
   14002294f:	int3   
   140022950:	cmp    QWORD PTR [rcx+0x18],0x10
   140022955:	mov    rdx,rcx
   140022958:	jb     0x14002295d
   14002295a:	mov    rcx,QWORD PTR [rcx]
   14002295d:	add    rcx,QWORD PTR [rdx+0x10]
   140022961:	cmp    QWORD PTR [rdx+0x28],rcx
   140022965:	sete   al
   140022968:	ret    
   140022969:	int3   
   14002296a:	int3   
   14002296b:	int3   
   14002296c:	int3   
   14002296d:	int3   
   14002296e:	int3   
   14002296f:	int3   
   140022970:	mov    rdx,QWORD PTR [rcx+0x8]
   140022974:	cmp    QWORD PTR [rcx],rdx
   140022977:	sete   al
   14002297a:	ret    
   14002297b:	int3   
   14002297c:	int3   
   14002297d:	int3   
   14002297e:	int3   
   14002297f:	int3   
   140022980:	xor    eax,eax
   140022982:	cmp    QWORD PTR [rcx],rax
   140022985:	sete   al
   140022988:	ret    
   140022989:	int3   
   14002298a:	int3   
   14002298b:	int3   
   14002298c:	int3   
   14002298d:	int3   
   14002298e:	int3   
   14002298f:	int3   
   140022990:	xor    eax,eax
   140022992:	cmp    QWORD PTR [rcx],rax
   140022995:	sete   al
   140022998:	ret    
   140022999:	int3   
   14002299a:	int3   
   14002299b:	int3   
   14002299c:	int3   
   14002299d:	int3   
   14002299e:	int3   
   14002299f:	int3   
   1400229a0:	xor    eax,eax
   1400229a2:	cmp    QWORD PTR [rcx+0x18],rax
   1400229a6:	sete   al
   1400229a9:	ret    
   1400229aa:	int3   
   1400229ab:	int3   
   1400229ac:	int3   
   1400229ad:	int3   
   1400229ae:	int3   
   1400229af:	int3   
   1400229b0:	xor    r8d,r8d
   1400229b3:	lea    rax,[rcx-0x11]
   1400229b7:	test   rcx,rcx
   1400229ba:	jne    0x1400229bf
   1400229bc:	mov    eax,r8d
   1400229bf:	mov    rax,QWORD PTR [rax+0x8]
   1400229c3:	and    QWORD PTR [rax+0x48],0xfffffffffffffffe
   1400229c8:	lea    rax,[rcx-0x11]
   1400229cc:	test   rcx,rcx
   1400229cf:	jne    0x1400229d4
   1400229d1:	mov    rax,r8
   1400229d4:	mov    rax,QWORD PTR [rax+0x8]
   1400229d8:	and    QWORD PTR [rax+0x48],0x1
   1400229dd:	lea    rax,[rcx-0x11]
   1400229e1:	test   rcx,rcx
   1400229e4:	jne    0x1400229e9
   1400229e6:	mov    rax,r8
   1400229e9:	mov    rdx,QWORD PTR [rax+0x8]
   1400229ed:	test   rdx,rdx
   1400229f0:	je     0x1400229f8
   1400229f2:	add    rdx,0x48
   1400229f6:	jmp    0x1400229fb
   1400229f8:	mov    rdx,r8
   1400229fb:	lea    rax,[rcx-0x11]
   1400229ff:	test   rcx,rcx
   140022a02:	jne    0x140022a07
   140022a04:	mov    rax,r8
   140022a07:	mov    rax,QWORD PTR [rax+0x8]
   140022a0b:	mov    QWORD PTR [rax+0x50],rdx
   140022a0f:	lea    rax,[rcx-0x11]
   140022a13:	test   rcx,rcx
   140022a16:	jne    0x140022a1b
   140022a18:	mov    rax,r8
   140022a1b:	mov    rax,QWORD PTR [rax+0x8]
   140022a1f:	test   rax,rax
   140022a22:	je     0x140022a2a
   140022a24:	add    rax,0x48
   140022a28:	jmp    0x140022a2d
   140022a2a:	mov    rax,r8
   140022a2d:	test   rcx,rcx
   140022a30:	je     0x140022a3b
   140022a32:	mov    rdx,QWORD PTR [rcx-0x9]
   140022a36:	mov    QWORD PTR [rdx+0x58],rax
   140022a3a:	ret    
   140022a3b:	mov    rdx,QWORD PTR [r8+0x8]
   140022a3f:	mov    QWORD PTR [rdx+0x58],rax
   140022a43:	ret    
   140022a44:	int3   
   140022a45:	int3   
   140022a46:	int3   
   140022a47:	int3   
   140022a48:	int3   
   140022a49:	int3   
   140022a4a:	int3   
   140022a4b:	int3   
   140022a4c:	int3   
   140022a4d:	int3   
   140022a4e:	int3   
   140022a4f:	int3   
   140022a50:	xor    r8d,r8d
   140022a53:	lea    rax,[rcx-0x11]
   140022a57:	test   rcx,rcx
   140022a5a:	jne    0x140022a5f
   140022a5c:	mov    eax,r8d
   140022a5f:	mov    rdx,QWORD PTR [rax+0x8]
   140022a63:	test   rdx,rdx
   140022a66:	je     0x140022a6e
   140022a68:	add    rdx,0x60
   140022a6c:	jmp    0x140022a71
   140022a6e:	mov    rdx,r8
   140022a71:	lea    rax,[rcx-0x11]
   140022a75:	test   rcx,rcx
   140022a78:	jne    0x140022a7d
   140022a7a:	mov    rax,r8
   140022a7d:	mov    rax,QWORD PTR [rax+0x8]
   140022a81:	mov    QWORD PTR [rax+0x68],rdx
   140022a85:	test   rcx,rcx
   140022a88:	je     0x140022a93
   140022a8a:	mov    rax,QWORD PTR [rcx-0x9]
   140022a8e:	mov    QWORD PTR [rax+0x60],rdx
   140022a92:	ret    
   140022a93:	mov    rax,QWORD PTR [r8+0x8]
   140022a97:	mov    QWORD PTR [rax+0x60],rdx
   140022a9b:	ret    
   140022a9c:	int3   
   140022a9d:	int3   
   140022a9e:	int3   
   140022a9f:	int3   
   140022aa0:	mov    rax,rsp
   140022aa3:	mov    QWORD PTR [rax+0x8],rcx
   140022aa7:	push   rdi
   140022aa8:	sub    rsp,0x90
   140022aaf:	mov    QWORD PTR [rax-0x70],0xfffffffffffffffe
   140022ab7:	mov    QWORD PTR [rax+0x18],rbx
   140022abb:	mov    QWORD PTR [rax+0x20],rsi
   140022abf:	mov    rbx,rcx
   140022ac2:	xor    esi,esi
   140022ac4:	mov    DWORD PTR [rsp+0x20],esi
   140022ac8:	mov    rcx,QWORD PTR [rdx+0x18]
   140022acc:	cmp    rcx,0x10
   140022ad0:	jb     0x140022ad7
   140022ad2:	mov    r8,QWORD PTR [rdx]
   140022ad5:	jmp    0x140022ada
   140022ad7:	mov    r8,rdx
   140022ada:	lea    rdi,[rdx+0x10]
   140022ade:	mov    rax,QWORD PTR [rdi]
   140022ae1:	add    rax,r8
   140022ae4:	cmp    rcx,0x10
   140022ae8:	jb     0x140022aed
   140022aea:	mov    rdx,QWORD PTR [rdx]
   140022aed:	mov    QWORD PTR [rsp+0x48],0xf
   140022af6:	mov    QWORD PTR [rsp+0x40],rsi
   140022afb:	mov    BYTE PTR [rsp+0x30],0x0
   140022b00:	mov    QWORD PTR [rsp+0x50],rax
   140022b05:	mov    BYTE PTR [rsp+0x58],0x0
   140022b0a:	mov    BYTE PTR [rsp+0x5a],0x0
   140022b0f:	mov    DWORD PTR [rsp+0x5c],esi
   140022b13:	mov    BYTE PTR [rsp+0x60],0x0
   140022b18:	mov    QWORD PTR [rsp+0x70],rdx
   140022b1d:	mov    BYTE PTR [rsp+0x78],0x0
   140022b22:	mov    BYTE PTR [rsp+0x7a],0x0
   140022b27:	mov    DWORD PTR [rsp+0x7c],esi
   140022b2b:	mov    BYTE PTR [rsp+0x80],0x0
   140022b33:	movzx  r9d,BYTE PTR [rsp+0xa8]
   140022b3c:	lea    r8,[rsp+0x50]
   140022b41:	lea    rdx,[rsp+0x70]
   140022b46:	lea    rcx,[rsp+0x30]
   140022b4b:	call   0x140003fe0
   140022b50:	nop
   140022b51:	movabs r8,0xaaaaaaaaaaaaaaab
   140022b5b:	mov    rax,r8
   140022b5e:	mul    QWORD PTR [rdi]
   140022b61:	shr    rdx,1
   140022b64:	inc    rdx
   140022b67:	lea    r9,[rdx+rdx*2]
   140022b6b:	sub    r9,QWORD PTR [rdi]
   140022b6e:	mov    rax,r8
   140022b71:	mul    r9
   140022b74:	shr    rdx,1
   140022b77:	lea    rax,[rdx+rdx*2]
   140022b7b:	sub    r9,rax
   140022b7e:	mov    r8b,0x3d
   140022b81:	mov    rdx,r9
   140022b84:	lea    rcx,[rsp+0x30]
   140022b89:	call   0x14001ed80
   140022b8e:	mov    QWORD PTR [rbx+0x18],0xf
   140022b96:	mov    QWORD PTR [rbx+0x10],rsi
   140022b9a:	mov    BYTE PTR [rbx],0x0
   140022b9d:	or     r9,0xffffffffffffffff
   140022ba1:	xor    r8d,r8d
   140022ba4:	mov    rdx,rax
   140022ba7:	mov    rcx,rbx
   140022baa:	call   0x14001ef20
   140022baf:	nop
   140022bb0:	cmp    QWORD PTR [rsp+0x48],0x10
   140022bb6:	jb     0x140022bc2
   140022bb8:	mov    rcx,QWORD PTR [rsp+0x30]
   140022bbd:	call   0x140030282
   140022bc2:	mov    rax,rbx
   140022bc5:	jmp    0x140022bcf
   140022bc7:	mov    rax,QWORD PTR [rsp+0xa0]
   140022bcf:	lea    r11,[rsp+0x90]
   140022bd7:	mov    rbx,QWORD PTR [r11+0x20]
   140022bdb:	mov    rsi,QWORD PTR [r11+0x28]
   140022bdf:	mov    rsp,r11
   140022be2:	pop    rdi
   140022be3:	ret    
   140022be4:	int3   
   140022be5:	int3   
   140022be6:	int3   
   140022be7:	int3   
   140022be8:	int3   
   140022be9:	int3   
   140022bea:	int3   
   140022beb:	int3   
   140022bec:	int3   
   140022bed:	int3   
   140022bee:	int3   
   140022bef:	int3   
   140022bf0:	mov    rax,QWORD PTR [rcx]
   140022bf3:	mov    QWORD PTR [rdx],rax
   140022bf6:	mov    rax,rdx
   140022bf9:	ret    
   140022bfa:	int3   
   140022bfb:	int3   
   140022bfc:	int3   
   140022bfd:	int3   
   140022bfe:	int3   
   140022bff:	int3   
   140022c00:	mov    rax,QWORD PTR [rcx+0x8]
   140022c04:	add    rax,QWORD PTR [rcx]
   140022c07:	ret    
   140022c08:	int3   
   140022c09:	int3   
   140022c0a:	int3   
   140022c0b:	int3   
   140022c0c:	int3   
   140022c0d:	int3   
   140022c0e:	int3   
   140022c0f:	int3   
   140022c10:	mov    rax,QWORD PTR [rcx+0x20]
   140022c14:	add    rax,0x11
   140022c18:	je     0x140022c29
   140022c1a:	add    rax,0xffffffffffffffef
   140022c1e:	mov    rax,QWORD PTR [rax+0x8]
   140022c22:	mov    QWORD PTR [rdx],rax
   140022c25:	mov    rax,rdx
   140022c28:	ret    
   140022c29:	xor    eax,eax
   140022c2b:	mov    rax,QWORD PTR [rax+0x8]
   140022c2f:	mov    QWORD PTR [rdx],rax
   140022c32:	mov    rax,rdx
   140022c35:	ret    
   140022c36:	int3   
   140022c37:	int3   
   140022c38:	int3   
   140022c39:	int3   
   140022c3a:	int3   
   140022c3b:	int3   
   140022c3c:	int3   
   140022c3d:	int3   
   140022c3e:	int3   
   140022c3f:	int3   
   140022c40:	cmp    QWORD PTR [rcx+0x18],0x10
   140022c45:	jb     0x140022c58
   140022c47:	mov    r8,QWORD PTR [rcx]
   140022c4a:	mov    rcx,QWORD PTR [rcx+0x10]
   140022c4e:	mov    rax,rdx
   140022c51:	add    rcx,r8
   140022c54:	mov    QWORD PTR [rdx],rcx
   140022c57:	ret    
   140022c58:	mov    r8,rcx
   140022c5b:	mov    rcx,QWORD PTR [rcx+0x10]
   140022c5f:	mov    rax,rdx
   140022c62:	add    rcx,r8
   140022c65:	mov    QWORD PTR [rdx],rcx
   140022c68:	ret    
   140022c69:	int3   
   140022c6a:	int3   
   140022c6b:	int3   
   140022c6c:	int3   
   140022c6d:	int3   
   140022c6e:	int3   
   140022c6f:	int3   
   140022c70:	cmp    QWORD PTR [rcx+0x18],0x10
   140022c75:	jb     0x140022c88
   140022c77:	mov    r8,QWORD PTR [rcx]
   140022c7a:	mov    rcx,QWORD PTR [rcx+0x10]
   140022c7e:	mov    rax,rdx
   140022c81:	add    rcx,r8
   140022c84:	mov    QWORD PTR [rdx],rcx
   140022c87:	ret    
   140022c88:	mov    r8,rcx
   140022c8b:	mov    rcx,QWORD PTR [rcx+0x10]
   140022c8f:	mov    rax,rdx
   140022c92:	add    rcx,r8
   140022c95:	mov    QWORD PTR [rdx],rcx
   140022c98:	ret    
   140022c99:	int3   
   140022c9a:	int3   
   140022c9b:	int3   
   140022c9c:	int3   
   140022c9d:	int3   
   140022c9e:	int3   
   140022c9f:	int3   
   140022ca0:	mov    rax,QWORD PTR [rcx+0x28]
   140022ca4:	shl    rax,0x4
   140022ca8:	add    rax,QWORD PTR [rcx+0x20]
   140022cac:	ret    
   140022cad:	int3   
   140022cae:	int3   
   140022caf:	int3   
   140022cb0:	mov    rax,QWORD PTR [rcx+0x8]
   140022cb4:	ret    
   140022cb5:	int3   
   140022cb6:	int3   
   140022cb7:	int3   
   140022cb8:	int3   
   140022cb9:	int3   
   140022cba:	int3   
   140022cbb:	int3   
   140022cbc:	int3   
   140022cbd:	int3   
   140022cbe:	int3   
   140022cbf:	int3   
   140022cc0:	mov    rax,QWORD PTR [rcx]
   140022cc3:	mov    QWORD PTR [rdx],rax
   140022cc6:	mov    rax,rdx
   140022cc9:	ret    
   140022cca:	int3   
   140022ccb:	int3   
   140022ccc:	int3   
   140022ccd:	int3   
   140022cce:	int3   
   140022ccf:	int3   
   140022cd0:	mov    rax,QWORD PTR [rcx]
   140022cd3:	mov    QWORD PTR [rdx],rax
   140022cd6:	mov    rax,rdx
   140022cd9:	ret    
   140022cda:	int3   
   140022cdb:	int3   
   140022cdc:	int3   
   140022cdd:	int3   
   140022cde:	int3   
   140022cdf:	int3   
   140022ce0:	test   rcx,rcx
   140022ce3:	je     0x140022cf4
   140022ce5:	lea    rax,[rcx-0x11]
   140022ce9:	mov    rax,QWORD PTR [rcx-0x9]
   140022ced:	mov    QWORD PTR [rdx],rax
   140022cf0:	mov    rax,rdx
   140022cf3:	ret    
   140022cf4:	xor    eax,eax
   140022cf6:	mov    rax,QWORD PTR [rax+0x8]
   140022cfa:	mov    QWORD PTR [rdx],rax
   140022cfd:	mov    rax,rdx
   140022d00:	ret    
   140022d01:	int3   
   140022d02:	int3   
   140022d03:	int3   
   140022d04:	int3   
   140022d05:	int3   
   140022d06:	int3   
   140022d07:	int3   
   140022d08:	int3   
   140022d09:	int3   
   140022d0a:	int3   
   140022d0b:	int3   
   140022d0c:	int3   
   140022d0d:	int3   
   140022d0e:	int3   
   140022d0f:	int3   
   140022d10:	test   rcx,rcx
   140022d13:	je     0x140022d24
   140022d15:	lea    rax,[rcx-0x11]
   140022d19:	mov    rax,QWORD PTR [rcx-0x9]
   140022d1d:	mov    QWORD PTR [rdx],rax
   140022d20:	mov    rax,rdx
   140022d23:	ret    
   140022d24:	xor    eax,eax
   140022d26:	mov    rax,QWORD PTR [rax+0x8]
   140022d2a:	mov    QWORD PTR [rdx],rax
   140022d2d:	mov    rax,rdx
   140022d30:	ret    
   140022d31:	int3   
   140022d32:	int3   
   140022d33:	int3   
   140022d34:	int3   
   140022d35:	int3   
   140022d36:	int3   
   140022d37:	int3   
   140022d38:	int3   
   140022d39:	int3   
   140022d3a:	int3   
   140022d3b:	int3   
   140022d3c:	int3   
   140022d3d:	int3   
   140022d3e:	int3   
   140022d3f:	int3   
   140022d40:	test   rcx,rcx
   140022d43:	je     0x140022d54
   140022d45:	lea    rax,[rcx-0x11]
   140022d49:	mov    rax,QWORD PTR [rcx-0x9]
   140022d4d:	mov    QWORD PTR [rdx],rax
   140022d50:	mov    rax,rdx
   140022d53:	ret    
   140022d54:	xor    eax,eax
   140022d56:	mov    rax,QWORD PTR [rax+0x8]
   140022d5a:	mov    QWORD PTR [rdx],rax
   140022d5d:	mov    rax,rdx
   140022d60:	ret    
   140022d61:	int3   
   140022d62:	int3   
   140022d63:	int3   
   140022d64:	int3   
   140022d65:	int3   
   140022d66:	int3   
   140022d67:	int3   
   140022d68:	int3   
   140022d69:	int3   
   140022d6a:	int3   
   140022d6b:	int3   
   140022d6c:	int3   
   140022d6d:	int3   
   140022d6e:	int3   
   140022d6f:	int3   
   140022d70:	test   rcx,rcx
   140022d73:	je     0x140022d84
   140022d75:	lea    rax,[rcx-0x11]
   140022d79:	mov    rax,QWORD PTR [rcx-0x9]
   140022d7d:	mov    QWORD PTR [rdx],rax
   140022d80:	mov    rax,rdx
   140022d83:	ret    
   140022d84:	xor    eax,eax
   140022d86:	mov    rax,QWORD PTR [rax+0x8]
   140022d8a:	mov    QWORD PTR [rdx],rax
   140022d8d:	mov    rax,rdx
   140022d90:	ret    
   140022d91:	int3   
   140022d92:	int3   
   140022d93:	int3   
   140022d94:	int3   
   140022d95:	int3   
   140022d96:	int3   
   140022d97:	int3   
   140022d98:	int3   
   140022d99:	int3   
   140022d9a:	int3   
   140022d9b:	int3   
   140022d9c:	int3   
   140022d9d:	int3   
   140022d9e:	int3   
   140022d9f:	int3   
   140022da0:	mov    rax,rsp
   140022da3:	push   rdi
   140022da4:	sub    rsp,0x110
   140022dab:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140022db4:	mov    QWORD PTR [rax+0x8],rbx
   140022db8:	mov    rdi,rdx
   140022dbb:	mov    rbx,rcx
   140022dbe:	mov    DWORD PTR [rsp+0x20],0x0
   140022dc6:	lea    rdx,[rcx+0x10]
   140022dca:	lea    rcx,[rax-0x60]
   140022dce:	call   0x1400117a0
   140022dd3:	mov    r9,QWORD PTR [rbx+0x8]
   140022dd7:	mov    r8,r9
   140022dda:	mov    rdx,rax
   140022ddd:	lea    rcx,[rsp+0x30]
   140022de2:	call   0x140015410
   140022de7:	nop
   140022de8:	mov    rdx,rax
   140022deb:	mov    rcx,rdi
   140022dee:	call   0x140015390
   140022df3:	nop
   140022df4:	cmp    QWORD PTR [rsp+0xb0],0x10
   140022dfd:	jb     0x140022e0c
   140022dff:	mov    rcx,QWORD PTR [rsp+0x98]
   140022e07:	call   0x140030282
   140022e0c:	mov    QWORD PTR [rsp+0xb0],0xf
   140022e18:	mov    QWORD PTR [rsp+0xa8],0x0
   140022e24:	mov    BYTE PTR [rsp+0x98],0x0
   140022e2c:	cmp    QWORD PTR [rsp+0x68],0x10
   140022e32:	jb     0x140022e3e
   140022e34:	mov    rcx,QWORD PTR [rsp+0x50]
   140022e39:	call   0x140030282
   140022e3e:	mov    QWORD PTR [rsp+0x68],0xf
   140022e47:	mov    QWORD PTR [rsp+0x60],0x0
   140022e50:	mov    BYTE PTR [rsp+0x50],0x0
   140022e55:	cmp    QWORD PTR [rsp+0x48],0x10
   140022e5b:	jb     0x140022e67
   140022e5d:	mov    rcx,QWORD PTR [rsp+0x30]
   140022e62:	call   0x140030282
   140022e67:	mov    rax,rdi
   140022e6a:	mov    rbx,QWORD PTR [rsp+0x120]
   140022e72:	add    rsp,0x110
   140022e79:	pop    rdi
   140022e7a:	ret    
   140022e7b:	int3   
   140022e7c:	int3   
   140022e7d:	int3   
   140022e7e:	int3   
   140022e7f:	int3   
   140022e80:	mov    rax,QWORD PTR [rcx+0x8]
   140022e84:	mov    QWORD PTR [rdx],rax
   140022e87:	mov    rax,rdx
   140022e8a:	ret    
   140022e8b:	int3   
   140022e8c:	int3   
   140022e8d:	int3   
   140022e8e:	int3   
   140022e8f:	int3   
   140022e90:	mov    rax,QWORD PTR [rcx+0x8]
   140022e94:	mov    QWORD PTR [rdx],rax
   140022e97:	mov    rax,rdx
   140022e9a:	ret    
   140022e9b:	int3   
   140022e9c:	int3   
   140022e9d:	int3   
   140022e9e:	int3   
   140022e9f:	int3   
   140022ea0:	mov    rax,QWORD PTR [rcx+0x8]
   140022ea4:	mov    QWORD PTR [rdx],rax
   140022ea7:	mov    rax,rdx
   140022eaa:	ret    
   140022eab:	int3   
   140022eac:	int3   
   140022ead:	int3   
   140022eae:	int3   
   140022eaf:	int3   
   140022eb0:	lea    rax,[rcx+0x10]
   140022eb4:	ret    
   140022eb5:	int3   
   140022eb6:	int3   
   140022eb7:	int3   
   140022eb8:	int3   
   140022eb9:	int3   
   140022eba:	int3   
   140022ebb:	int3   
   140022ebc:	int3   
   140022ebd:	int3   
   140022ebe:	int3   
   140022ebf:	int3   
   140022ec0:	lea    rax,[rcx+0x10]
   140022ec4:	ret    
   140022ec5:	int3   
   140022ec6:	int3   
   140022ec7:	int3   
   140022ec8:	int3   
   140022ec9:	int3   
   140022eca:	int3   
   140022ecb:	int3   
   140022ecc:	int3   
   140022ecd:	int3   
   140022ece:	int3   
   140022ecf:	int3   
   140022ed0:	movzx  eax,dx
   140022ed3:	cmp    eax,0x2
   140022ed6:	je     0x140022ef3
   140022ed8:	cmp    eax,0xb
   140022edb:	ja     0x140022eed
   140022edd:	mov    ecx,0xa50
   140022ee2:	bt     ecx,eax
   140022ee5:	jae    0x140022eed
   140022ee7:	mov    eax,0x1e
   140022eec:	ret    
   140022eed:	mov    eax,0x1f
   140022ef2:	ret    
   140022ef3:	movzx  r8d,cx
   140022ef7:	mov    eax,r8d
   140022efa:	and    eax,0x80000003
   140022eff:	jge    0x140022f08
   140022f01:	dec    eax
   140022f03:	or     eax,0xfffffffc
   140022f06:	inc    eax
   140022f08:	test   eax,eax
   140022f0a:	jne    0x140022f49
   140022f0c:	mov    eax,0x51eb851f
   140022f11:	imul   r8d
   140022f14:	sar    edx,0x5
   140022f17:	mov    ecx,edx
   140022f19:	shr    ecx,0x1f
   140022f1c:	add    edx,ecx
   140022f1e:	imul   edx,edx,0x64
   140022f21:	cmp    r8d,edx
   140022f24:	jne    0x140022f43
   140022f26:	mov    eax,0x51eb851f
   140022f2b:	imul   r8d
   140022f2e:	sar    edx,0x7
   140022f31:	mov    eax,edx
   140022f33:	shr    eax,0x1f
   140022f36:	add    edx,eax
   140022f38:	imul   eax,edx,0x190
   140022f3e:	cmp    r8d,eax
   140022f41:	jne    0x140022f49
   140022f43:	mov    eax,0x1d
   140022f48:	ret    
   140022f49:	mov    eax,0x1c
   140022f4e:	ret    
   140022f4f:	int3   
   140022f50:	mov    rax,QWORD PTR [rcx]
   140022f53:	ret    
   140022f54:	int3   
   140022f55:	int3   
   140022f56:	int3   
   140022f57:	int3   
   140022f58:	int3   
   140022f59:	int3   
   140022f5a:	int3   
   140022f5b:	int3   
   140022f5c:	int3   
   140022f5d:	int3   
   140022f5e:	int3   
   140022f5f:	int3   
   140022f60:	or     eax,0xffffffff
   140022f63:	ret    
   140022f64:	int3   
   140022f65:	int3   
   140022f66:	int3   
   140022f67:	int3   
   140022f68:	int3   
   140022f69:	int3   
   140022f6a:	int3   
   140022f6b:	int3   
   140022f6c:	int3   
   140022f6d:	int3   
   140022f6e:	int3   
   140022f6f:	int3   
   140022f70:	lea    rax,[rcx+0x18]
   140022f74:	ret    
   140022f75:	int3   
   140022f76:	int3   
   140022f77:	int3   
   140022f78:	int3   
   140022f79:	int3   
   140022f7a:	int3   
   140022f7b:	int3   
   140022f7c:	int3   
   140022f7d:	int3   
   140022f7e:	int3   
   140022f7f:	int3   
   140022f80:	movzx  edx,BYTE PTR [rdx]
   140022f83:	cmp    BYTE PTR [rcx],dl
   140022f85:	sete   al
   140022f88:	ret    
   140022f89:	int3   
   140022f8a:	int3   
   140022f8b:	int3   
   140022f8c:	int3   
   140022f8d:	int3   
   140022f8e:	int3   
   140022f8f:	int3   
   140022f90:	mov    edx,DWORD PTR [rdx]
   140022f92:	cmp    DWORD PTR [rcx],edx
   140022f94:	sete   al
   140022f97:	ret    
   140022f98:	int3   
   140022f99:	int3   
   140022f9a:	int3   
   140022f9b:	int3   
   140022f9c:	int3   
   140022f9d:	int3   
   140022f9e:	int3   
   140022f9f:	int3   
   140022fa0:	mov    rax,QWORD PTR [rdx]
   140022fa3:	cmp    QWORD PTR [rcx],rax
   140022fa6:	jne    0x140022fb3
   140022fa8:	mov    eax,DWORD PTR [rdx+0x8]
   140022fab:	cmp    DWORD PTR [rcx+0x8],eax
   140022fae:	jne    0x140022fb3
   140022fb0:	mov    al,0x1
   140022fb2:	ret    
   140022fb3:	xor    al,al
   140022fb5:	ret    
   140022fb6:	int3   
   140022fb7:	int3   
   140022fb8:	int3   
   140022fb9:	int3   
   140022fba:	int3   
   140022fbb:	int3   
   140022fbc:	int3   
   140022fbd:	int3   
   140022fbe:	int3   
   140022fbf:	int3   
   140022fc0:	mov    rax,QWORD PTR [rdx]
   140022fc3:	cmp    QWORD PTR [rcx],rax
   140022fc6:	jne    0x140022fd4
   140022fc8:	cmp    DWORD PTR [rcx+0xc],0x0
   140022fcc:	mov    BYTE PTR [rcx+0x10],0x1
   140022fd0:	sete   al
   140022fd3:	ret    
   140022fd4:	xor    al,al
   140022fd6:	ret    
   140022fd7:	int3   
   140022fd8:	int3   
   140022fd9:	int3   
   140022fda:	int3   
   140022fdb:	int3   
   140022fdc:	int3   
   140022fdd:	int3   
   140022fde:	int3   
   140022fdf:	int3   
   140022fe0:	mov    rax,QWORD PTR [rdx]
   140022fe3:	cmp    QWORD PTR [rcx],rax
   140022fe6:	sete   al
   140022fe9:	ret    
   140022fea:	int3   
   140022feb:	int3   
   140022fec:	int3   
   140022fed:	int3   
   140022fee:	int3   
   140022fef:	int3   
   140022ff0:	mov    rax,QWORD PTR [rdx]
   140022ff3:	cmp    QWORD PTR [rcx],rax
   140022ff6:	jne    0x140023005
   140022ff8:	xor    eax,eax
   140022ffa:	mov    BYTE PTR [rcx+0x10],0x1
   140022ffe:	cmp    DWORD PTR [rcx+0xc],eax
   140023001:	sete   al
   140023004:	ret    
   140023005:	xor    al,al
   140023007:	ret    
   140023008:	int3   
   140023009:	int3   
   14002300a:	int3   
   14002300b:	int3   
   14002300c:	int3   
   14002300d:	int3   
   14002300e:	int3   
   14002300f:	int3   
   140023010:	mov    rdx,QWORD PTR [rdx]
   140023013:	cmp    QWORD PTR [rcx],rdx
   140023016:	sete   al
   140023019:	ret    
   14002301a:	int3   
   14002301b:	int3   
   14002301c:	int3   
   14002301d:	int3   
   14002301e:	int3   
   14002301f:	int3   
   140023020:	cmp    rcx,QWORD PTR [rdx+0x8]
   140023024:	jne    0x14002302e
   140023026:	cmp    DWORD PTR [rdx],r8d
   140023029:	jne    0x14002302e
   14002302b:	mov    al,0x1
   14002302d:	ret    
   14002302e:	xor    al,al
   140023030:	ret    
   140023031:	int3   
   140023032:	int3   
   140023033:	int3   
   140023034:	int3   
   140023035:	int3   
   140023036:	int3   
   140023037:	int3   
   140023038:	int3   
   140023039:	int3   
   14002303a:	int3   
   14002303b:	int3   
   14002303c:	int3   
   14002303d:	int3   
   14002303e:	int3   
   14002303f:	int3   
   140023040:	rex push rbx
   140023042:	sub    rsp,0x30
   140023046:	mov    rax,QWORD PTR [rcx]
   140023049:	mov    rbx,r8
   14002304c:	mov    r8d,edx
   14002304f:	lea    rdx,[rsp+0x20]
   140023054:	call   QWORD PTR [rax+0x18]
   140023057:	mov    rcx,QWORD PTR [rbx+0x8]
   14002305b:	cmp    QWORD PTR [rax+0x8],rcx
   14002305f:	jne    0x14002306f
   140023061:	mov    ecx,DWORD PTR [rbx]
   140023063:	cmp    DWORD PTR [rax],ecx
   140023065:	jne    0x14002306f
   140023067:	mov    al,0x1
   140023069:	add    rsp,0x30
   14002306d:	pop    rbx
   14002306e:	ret    
   14002306f:	xor    al,al
   140023071:	add    rsp,0x30
   140023075:	pop    rbx
   140023076:	ret    
   140023077:	int3   
   140023078:	int3   
   140023079:	int3   
   14002307a:	int3   
   14002307b:	int3   
   14002307c:	int3   
   14002307d:	int3   
   14002307e:	int3   
   14002307f:	int3   
   140023080:	mov    QWORD PTR [rsp+0x8],rbx
   140023085:	push   rdi
   140023086:	sub    rsp,0x20
   14002308a:	mov    rdi,QWORD PTR [rcx+0x10]
   14002308e:	mov    rbx,rcx
   140023091:	cmp    rdi,rdx
   140023094:	jae    0x1400230a4
   140023096:	lea    rcx,[rip+0x1988b]        # 0x14003c928
   14002309d:	call   QWORD PTR [rip+0x13185]        # 0x140036228
   1400230a3:	int3   
   1400230a4:	mov    rax,rdi
   1400230a7:	sub    rax,rdx
   1400230aa:	cmp    rax,r8
   1400230ad:	ja     0x1400230e4
   1400230af:	cmp    QWORD PTR [rcx+0x18],0x10
   1400230b4:	mov    QWORD PTR [rcx+0x10],rdx
   1400230b8:	jb     0x1400230cf
   1400230ba:	mov    rax,QWORD PTR [rcx]
   1400230bd:	mov    BYTE PTR [rax+rdx*1],0x0
   1400230c1:	mov    rax,rbx
   1400230c4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400230c9:	add    rsp,0x20
   1400230cd:	pop    rdi
   1400230ce:	ret    
   1400230cf:	mov    rax,rcx
   1400230d2:	mov    BYTE PTR [rcx+rdx*1],0x0
   1400230d6:	mov    rax,rbx
   1400230d9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400230de:	add    rsp,0x20
   1400230e2:	pop    rdi
   1400230e3:	ret    
   1400230e4:	test   r8,r8
   1400230e7:	je     0x14002313b
   1400230e9:	cmp    QWORD PTR [rcx+0x18],0x10
   1400230ee:	jb     0x1400230f5
   1400230f0:	mov    rax,QWORD PTR [rcx]
   1400230f3:	jmp    0x1400230f8
   1400230f5:	mov    rax,rcx
   1400230f8:	sub    rdi,r8
   1400230fb:	lea    rcx,[rax+rdx*1]
   1400230ff:	mov    rax,rdi
   140023102:	sub    rax,rdx
   140023105:	je     0x140023114
   140023107:	lea    rdx,[rcx+r8*1]
   14002310b:	mov    r8,rax
   14002310e:	call   QWORD PTR [rip+0x1334c]        # 0x140036460
   140023114:	cmp    QWORD PTR [rbx+0x18],0x10
   140023119:	mov    QWORD PTR [rbx+0x10],rdi
   14002311d:	jb     0x140023134
   14002311f:	mov    rax,QWORD PTR [rbx]
   140023122:	mov    BYTE PTR [rax+rdi*1],0x0
   140023126:	mov    rax,rbx
   140023129:	mov    rbx,QWORD PTR [rsp+0x30]
   14002312e:	add    rsp,0x20
   140023132:	pop    rdi
   140023133:	ret    
   140023134:	mov    rax,rbx
   140023137:	mov    BYTE PTR [rbx+rdi*1],0x0
   14002313b:	mov    rax,rbx
   14002313e:	mov    rbx,QWORD PTR [rsp+0x30]
   140023143:	add    rsp,0x20
   140023147:	pop    rdi
   140023148:	ret    
   140023149:	int3   
   14002314a:	int3   
   14002314b:	int3   
   14002314c:	int3   
   14002314d:	int3   
   14002314e:	int3   
   14002314f:	int3   
   140023150:	sub    rsp,0x28
   140023154:	cmp    QWORD PTR [rcx+0x10],rdx
   140023158:	jae    0x140023168
   14002315a:	lea    rcx,[rip+0x197c7]        # 0x14003c928
   140023161:	call   QWORD PTR [rip+0x130c1]        # 0x140036228
   140023167:	int3   
   140023168:	cmp    QWORD PTR [rcx+0x18],0x10
   14002316d:	mov    QWORD PTR [rcx+0x10],rdx
   140023171:	jb     0x140023182
   140023173:	mov    rax,QWORD PTR [rcx]
   140023176:	mov    BYTE PTR [rax+rdx*1],0x0
   14002317a:	mov    rax,rcx
   14002317d:	add    rsp,0x28
   140023181:	ret    
   140023182:	mov    rax,rcx
   140023185:	mov    BYTE PTR [rcx+rdx*1],0x0
   140023189:	add    rsp,0x28
   14002318d:	ret    
   14002318e:	int3   
   14002318f:	int3   
   140023190:	mov    QWORD PTR [rsp+0x18],r8
   140023195:	push   rbx
   140023196:	sub    rsp,0x20
   14002319a:	mov    rax,QWORD PTR [r8]
   14002319d:	mov    rbx,rdx
   1400231a0:	mov    QWORD PTR [rsp+0x40],rax
   1400231a5:	mov    r9,QWORD PTR [r8+0x8]
   1400231a9:	mov    rax,QWORD PTR [r8]
   1400231ac:	mov    QWORD PTR [r9],rax
   1400231af:	mov    r9,QWORD PTR [r8]
   1400231b2:	mov    rax,QWORD PTR [r8+0x8]
   1400231b6:	mov    QWORD PTR [r9+0x8],rax
   1400231ba:	dec    QWORD PTR [rcx+0x8]
   1400231be:	mov    rcx,r8
   1400231c1:	call   0x140030282
   1400231c6:	mov    rax,QWORD PTR [rsp+0x40]
   1400231cb:	mov    QWORD PTR [rbx],rax
   1400231ce:	mov    rax,rbx
   1400231d1:	add    rsp,0x20
   1400231d5:	pop    rbx
   1400231d6:	ret    
   1400231d7:	int3   
   1400231d8:	int3   
   1400231d9:	int3   
   1400231da:	int3   
   1400231db:	int3   
   1400231dc:	int3   
   1400231dd:	int3   
   1400231de:	int3   
   1400231df:	int3   
   1400231e0:	sub    rsp,0x28
   1400231e4:	mov    rdx,rcx
   1400231e7:	lea    rcx,[rsp+0x38]
   1400231ec:	xor    r8d,r8d
   1400231ef:	call   QWORD PTR [rip+0x1334b]        # 0x140036540
   1400231f5:	cmp    DWORD PTR [rax],0x1
   1400231f8:	seta   al
   1400231fb:	add    rsp,0x28
   1400231ff:	ret    
   140023200:	cmp    ecx,0x1
   140023203:	seta   al
   140023206:	ret    
   140023207:	int3   
   140023208:	int3   
   140023209:	int3   
   14002320a:	int3   
   14002320b:	int3   
   14002320c:	int3   
   14002320d:	int3   
   14002320e:	int3   
   14002320f:	int3   
   140023210:	mov    QWORD PTR [rsp+0x10],rdx
   140023215:	push   rdi
   140023216:	sub    rsp,0x50
   14002321a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140023223:	mov    QWORD PTR [rsp+0x60],rbx
   140023228:	mov    rbx,rdx
   14002322b:	mov    rdi,rcx
   14002322e:	mov    QWORD PTR [rsp+0x28],0x0
   140023237:	mov    rax,QWORD PTR [rdx]
   14002323a:	test   rax,rax
   14002323d:	je     0x14002326e
   14002323f:	mov    QWORD PTR [rsp+0x28],rax
   140023244:	test   al,0x1
   140023246:	je     0x14002325c
   140023248:	movups xmm0,XMMWORD PTR [rdx+0x8]
   14002324c:	movups XMMWORD PTR [rsp+0x30],xmm0
   140023251:	movups xmm1,XMMWORD PTR [rdx+0x18]
   140023255:	movups XMMWORD PTR [rsp+0x40],xmm1
   14002325a:	jmp    0x14002326e
   14002325c:	and    rax,0xfffffffffffffffe
   140023260:	lea    rcx,[rdx+0x8]
   140023264:	xor    r8d,r8d
   140023267:	lea    rdx,[rsp+0x30]
   14002326c:	call   QWORD PTR [rax]
   14002326e:	lea    rdx,[rsp+0x28]
   140023273:	mov    rcx,rdi
   140023276:	call   QWORD PTR [rip+0x1341c]        # 0x140036698
   14002327c:	nop
   14002327d:	mov    rax,QWORD PTR [rbx]
   140023280:	test   rax,rax
   140023283:	je     0x1400232ac
   140023285:	test   al,0x1
   140023287:	jne    0x1400232a5
   140023289:	lea    rcx,[rbx+0x8]
   14002328d:	and    rax,0xfffffffffffffffe
   140023291:	mov    r9,QWORD PTR [rax]
   140023294:	test   r9,r9
   140023297:	je     0x1400232a5
   140023299:	mov    r8d,0x2
   14002329f:	mov    rdx,rcx
   1400232a2:	call   r9
   1400232a5:	mov    QWORD PTR [rbx],0x0
   1400232ac:	mov    rax,rdi
   1400232af:	mov    rbx,QWORD PTR [rsp+0x60]
   1400232b4:	add    rsp,0x50
   1400232b8:	pop    rdi
   1400232b9:	ret    
   1400232ba:	int3   
   1400232bb:	int3   
   1400232bc:	int3   
   1400232bd:	int3   
   1400232be:	int3   
   1400232bf:	int3   
   1400232c0:	mov    rax,rcx
   1400232c3:	ret    
   1400232c4:	int3   
   1400232c5:	int3   
   1400232c6:	int3   
   1400232c7:	int3   
   1400232c8:	int3   
   1400232c9:	int3   
   1400232ca:	int3   
   1400232cb:	int3   
   1400232cc:	int3   
   1400232cd:	int3   
   1400232ce:	int3   
   1400232cf:	int3   
   1400232d0:	mov    rax,rcx
   1400232d3:	ret    
   1400232d4:	int3   
   1400232d5:	int3   
   1400232d6:	int3   
   1400232d7:	int3   
   1400232d8:	int3   
   1400232d9:	int3   
   1400232da:	int3   
   1400232db:	int3   
   1400232dc:	int3   
   1400232dd:	int3   
   1400232de:	int3   
   1400232df:	int3   
   1400232e0:	mov    rax,rcx
   1400232e3:	ret    
   1400232e4:	int3   
   1400232e5:	int3   
   1400232e6:	int3   
   1400232e7:	int3   
   1400232e8:	int3   
   1400232e9:	int3   
   1400232ea:	int3   
   1400232eb:	int3   
   1400232ec:	int3   
   1400232ed:	int3   
   1400232ee:	int3   
   1400232ef:	int3   
   1400232f0:	mov    rax,rcx
   1400232f3:	ret    
   1400232f4:	int3   
   1400232f5:	int3   
   1400232f6:	int3   
   1400232f7:	int3   
   1400232f8:	int3   
   1400232f9:	int3   
   1400232fa:	int3   
   1400232fb:	int3   
   1400232fc:	int3   
   1400232fd:	int3   
   1400232fe:	int3   
   1400232ff:	int3   
   140023300:	mov    rax,rcx
   140023303:	ret    
   140023304:	int3   
   140023305:	int3   
   140023306:	int3   
   140023307:	int3   
   140023308:	int3   
   140023309:	int3   
   14002330a:	int3   
   14002330b:	int3   
   14002330c:	int3   
   14002330d:	int3   
   14002330e:	int3   
   14002330f:	int3   
   140023310:	mov    r11d,0x6
   140023316:	mov    rdx,rcx
   140023319:	mov    BYTE PTR [rcx+0x9],0x0
   14002331d:	mov    DWORD PTR [rsp+0x8],r11d
   140023322:	lea    r10,[rcx+0xc]
   140023326:	cmp    DWORD PTR [r10],0x0
   14002332a:	jne    0x140023352
   14002332c:	cmp    BYTE PTR [rdx+0x10],0x0
   140023330:	je     0x14002333b
   140023332:	mov    BYTE PTR [rdx+0xa],0x0
   140023336:	mov    DWORD PTR [r10],r11d
   140023339:	jmp    0x140023352
   14002333b:	mov    rax,QWORD PTR [rdx]
   14002333e:	lea    rcx,[rax+0x1]
   140023342:	mov    QWORD PTR [rdx],rcx
   140023345:	movzx  ecx,BYTE PTR [rax]
   140023348:	mov    DWORD PTR [r10],0x8
   14002334f:	mov    BYTE PTR [rdx+0xa],cl
   140023352:	cmp    DWORD PTR [r10],r11d
   140023355:	movzx  ecx,BYTE PTR [r10]
   140023359:	movzx  r8d,BYTE PTR [rdx+0xa]
   14002335e:	lea    rax,[rsp+0x8]
   140023363:	cmovb  rax,r10
   140023367:	mov    r9d,DWORD PTR [rax]
   14002336a:	mov    eax,0x1
   14002336f:	sub    DWORD PTR [r10],r9d
   140023372:	sub    cl,r9b
   140023375:	sub    r11d,r9d
   140023378:	sar    r8b,cl
   14002337b:	mov    ecx,r9d
   14002337e:	mov    DWORD PTR [rsp+0x8],r11d
   140023383:	shl    al,cl
   140023385:	dec    al
   140023387:	and    r8b,al
   14002338a:	movzx  eax,BYTE PTR [rdx+0x9]
   14002338e:	shl    al,cl
   140023390:	or     r8b,al
   140023393:	mov    BYTE PTR [rdx+0x9],r8b
   140023397:	test   r11d,r11d
   14002339a:	jne    0x140023326
   14002339c:	mov    BYTE PTR [rdx+0x8],0x1
   1400233a0:	ret    
   1400233a1:	int3   
   1400233a2:	int3   
   1400233a3:	int3   
   1400233a4:	int3   
   1400233a5:	int3   
   1400233a6:	int3   
   1400233a7:	int3   
   1400233a8:	int3   
   1400233a9:	int3   
   1400233aa:	int3   
   1400233ab:	int3   
   1400233ac:	int3   
   1400233ad:	int3   
   1400233ae:	int3   
   1400233af:	int3   
   1400233b0:	mov    QWORD PTR [rsp+0x10],rbx
   1400233b5:	mov    QWORD PTR [rsp+0x18],rsi
   1400233ba:	push   rdi
   1400233bb:	sub    rsp,0x30
   1400233bf:	mov    esi,0x8
   1400233c4:	mov    rbx,rcx
   1400233c7:	mov    BYTE PTR [rcx+0x11],0x0
   1400233cb:	mov    DWORD PTR [rsp+0x40],esi
   1400233cf:	lea    rdi,[rcx+0x14]
   1400233d3:	cmp    DWORD PTR [rdi],0x0
   1400233d6:	jne    0x140023407
   1400233d8:	cmp    BYTE PTR [rbx+0x18],0x0
   1400233dc:	je     0x1400233e6
   1400233de:	mov    BYTE PTR [rbx+0x12],0x0
   1400233e2:	mov    DWORD PTR [rdi],esi
   1400233e4:	jmp    0x140023407
   1400233e6:	movups xmm0,XMMWORD PTR [rbx]
   1400233e9:	inc    QWORD PTR [rbx]
   1400233ec:	lea    rcx,[rsp+0x28]
   1400233f1:	movq   rax,xmm0
   1400233f6:	movzx  edx,BYTE PTR [rax]
   1400233f9:	call   0x14001a5a0
   1400233fe:	mov    DWORD PTR [rdi],0x6
   140023404:	mov    BYTE PTR [rbx+0x12],al
   140023407:	cmp    DWORD PTR [rdi],esi
   140023409:	movzx  ecx,BYTE PTR [rdi]
   14002340c:	movzx  edx,BYTE PTR [rbx+0x12]
   140023410:	lea    rax,[rsp+0x40]
   140023415:	cmovb  rax,rdi
   140023419:	mov    r8d,DWORD PTR [rax]
   14002341c:	mov    eax,0x1
   140023421:	sub    DWORD PTR [rdi],r8d
   140023424:	sub    cl,r8b
   140023427:	sub    esi,r8d
   14002342a:	sar    dl,cl
   14002342c:	mov    ecx,r8d
   14002342f:	mov    DWORD PTR [rsp+0x40],esi
   140023433:	shl    al,cl
   140023435:	dec    al
   140023437:	and    dl,al
   140023439:	movzx  eax,BYTE PTR [rbx+0x11]
   14002343d:	shl    al,cl
   14002343f:	or     dl,al
   140023441:	mov    BYTE PTR [rbx+0x11],dl
   140023444:	test   esi,esi
   140023446:	jne    0x1400233d3
   140023448:	mov    rsi,QWORD PTR [rsp+0x50]
   14002344d:	mov    BYTE PTR [rbx+0x10],0x1
   140023451:	mov    rbx,QWORD PTR [rsp+0x48]
   140023456:	add    rsp,0x30
   14002345a:	pop    rdi
   14002345b:	ret    
   14002345c:	int3   
   14002345d:	int3   
   14002345e:	int3   
   14002345f:	int3   
   140023460:	mov    rax,QWORD PTR [rcx]
   140023463:	ret    
   140023464:	int3   
   140023465:	int3   
   140023466:	int3   
   140023467:	int3   
   140023468:	int3   
   140023469:	int3   
   14002346a:	int3   
   14002346b:	int3   
   14002346c:	int3   
   14002346d:	int3   
   14002346e:	int3   
   14002346f:	int3   
   140023470:	mov    rax,QWORD PTR [rcx]
   140023473:	ret    
   140023474:	int3   
   140023475:	int3   
   140023476:	int3   
   140023477:	int3   
   140023478:	int3   
   140023479:	int3   
   14002347a:	int3   
   14002347b:	int3   
   14002347c:	int3   
   14002347d:	int3   
   14002347e:	int3   
   14002347f:	int3   
   140023480:	mov    QWORD PTR [rsp+0x8],rbx
   140023485:	mov    QWORD PTR [rsp+0x10],rbp
   14002348a:	mov    QWORD PTR [rsp+0x18],rsi
   14002348f:	push   rdi
   140023490:	sub    rsp,0x30
   140023494:	mov    rax,QWORD PTR [rsp+0x60]
   140023499:	mov    rsi,r9
   14002349c:	mov    rbp,rdx
   14002349f:	mov    QWORD PTR [rsp+0x20],rax
   1400234a4:	mov    rdi,rcx
   1400234a7:	call   QWORD PTR [rip+0x13153]        # 0x140036600
   1400234ad:	cmp    BYTE PTR [rsp+0x68],0x0
   1400234b2:	mov    rax,QWORD PTR [rip+0x1311f]        # 0x1400365d8
   1400234b9:	jne    0x1400234c2
   1400234bb:	mov    rax,QWORD PTR [rip+0x1311e]        # 0x1400365e0
   1400234c2:	mov    edx,DWORD PTR [rax]
   1400234c4:	mov    rcx,rdi
   1400234c7:	call   QWORD PTR [rip+0x130cb]        # 0x140036598
   1400234cd:	mov    r9b,0x1
   1400234d0:	mov    r8,rsi
   1400234d3:	mov    rdx,rbp
   1400234d6:	mov    rcx,rdi
   1400234d9:	mov    ebx,eax
   1400234db:	call   QWORD PTR [rip+0x130af]        # 0x140036590
   1400234e1:	mov    ecx,ebx
   1400234e3:	call   QWORD PTR [rip+0x1311f]        # 0x140036608
   1400234e9:	mov    rcx,QWORD PTR [rip+0x130e0]        # 0x1400365d0
   1400234f0:	mov    rbp,QWORD PTR [rsp+0x48]
   1400234f5:	cmp    ebx,DWORD PTR [rcx]
   1400234f7:	mov    rsi,QWORD PTR [rsp+0x50]
   1400234fc:	mov    rbx,QWORD PTR [rsp+0x40]
   140023501:	setne  al
   140023504:	add    rsp,0x30
   140023508:	pop    rdi
   140023509:	ret    
   14002350a:	int3   
   14002350b:	int3   
   14002350c:	int3   
   14002350d:	int3   
   14002350e:	int3   
   14002350f:	int3   
   140023510:	mov    QWORD PTR [rsp+0x8],rbx
   140023515:	mov    QWORD PTR [rsp+0x10],rbp
   14002351a:	mov    QWORD PTR [rsp+0x18],rsi
   14002351f:	push   rdi
   140023520:	sub    rsp,0x30
   140023524:	mov    rax,QWORD PTR [rsp+0x60]
   140023529:	mov    rsi,r9
   14002352c:	mov    rdi,rdx
   14002352f:	mov    QWORD PTR [rsp+0x20],rax
   140023534:	mov    rbp,rcx
   140023537:	call   QWORD PTR [rip+0x130c3]        # 0x140036600
   14002353d:	mov    rax,QWORD PTR [rip+0x130a4]        # 0x1400365e8
   140023544:	mov    rcx,rbp
   140023547:	mov    edx,DWORD PTR [rax]
   140023549:	call   QWORD PTR [rip+0x13051]        # 0x1400365a0
   14002354f:	xor    r9d,r9d
   140023552:	mov    r8,rsi
   140023555:	mov    rdx,rdi
   140023558:	mov    rcx,rbp
   14002355b:	mov    ebx,eax
   14002355d:	call   QWORD PTR [rip+0x1302d]        # 0x140036590
   140023563:	mov    ecx,ebx
   140023565:	call   QWORD PTR [rip+0x1309d]        # 0x140036608
   14002356b:	mov    rcx,QWORD PTR [rip+0x1305e]        # 0x1400365d0
   140023572:	mov    rsi,QWORD PTR [rsp+0x50]
   140023577:	cmp    ebx,DWORD PTR [rcx]
   140023579:	mov    rbx,QWORD PTR [rsp+0x40]
   14002357e:	sete   dl
   140023581:	test   dl,dl
   140023583:	mov    BYTE PTR [rbp+0x20],dl
   140023586:	mov    rbp,QWORD PTR [rsp+0x48]
   14002358b:	sete   al
   14002358e:	add    rsp,0x30
   140023592:	pop    rdi
   140023593:	ret    
   140023594:	int3   
   140023595:	int3   
   140023596:	int3   
   140023597:	int3   
   140023598:	int3   
   140023599:	int3   
   14002359a:	int3   
   14002359b:	int3   
   14002359c:	int3   
   14002359d:	int3   
   14002359e:	int3   
   14002359f:	int3   
   1400235a0:	test   rcx,rcx
   1400235a3:	je     0x1400235aa
   1400235a5:	lea    rax,[rcx-0x11]
   1400235a9:	ret    
   1400235aa:	xor    eax,eax
   1400235ac:	ret    
   1400235ad:	int3   
   1400235ae:	int3   
   1400235af:	int3   
   1400235b0:	test   rcx,rcx
   1400235b3:	je     0x1400235ba
   1400235b5:	lea    rax,[rcx-0x11]
   1400235b9:	ret    
   1400235ba:	xor    eax,eax
   1400235bc:	ret    
   1400235bd:	int3   
   1400235be:	int3   
   1400235bf:	int3   
   1400235c0:	mov    QWORD PTR [rsp+0x10],rdx
   1400235c5:	push   rbx
   1400235c6:	sub    rsp,0x30
   1400235ca:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400235d3:	mov    rbx,rdx
   1400235d6:	lea    rcx,[rdx+0x20]
   1400235da:	call   0x140017040
   1400235df:	nop
   1400235e0:	cmp    QWORD PTR [rbx+0x18],0x10
   1400235e5:	jb     0x1400235ef
   1400235e7:	mov    rcx,QWORD PTR [rbx]
   1400235ea:	call   0x140030282
   1400235ef:	mov    QWORD PTR [rbx+0x18],0xf
   1400235f7:	mov    QWORD PTR [rbx+0x10],0x0
   1400235ff:	mov    BYTE PTR [rbx],0x0
   140023602:	mov    rcx,rbx
   140023605:	add    rsp,0x30
   140023609:	pop    rbx
   14002360a:	jmp    0x140030282
   14002360f:	int3   
   140023610:	xor    eax,eax
   140023612:	test   rcx,rcx
   140023615:	je     0x140023623
   140023617:	add    rcx,0xffffffffffffffef
   14002361b:	cmp    QWORD PTR [rcx+0x18],rax
   14002361f:	sete   al
   140023622:	ret    
   140023623:	cmp    QWORD PTR [rax+0x18],rax
   140023627:	mov    rcx,rax
   14002362a:	sete   al
   14002362d:	ret    
   14002362e:	int3   
   14002362f:	int3   
   140023630:	test   rcx,rcx
   140023633:	je     0x14002363a
   140023635:	mov    rax,QWORD PTR [rcx-0x9]
   140023639:	ret    
   14002363a:	xor    eax,eax
   14002363c:	mov    rax,QWORD PTR [rax+0x8]
   140023640:	ret    
   140023641:	int3   
   140023642:	int3   
   140023643:	int3   
   140023644:	int3   
   140023645:	int3   
   140023646:	int3   
   140023647:	int3   
   140023648:	int3   
   140023649:	int3   
   14002364a:	int3   
   14002364b:	int3   
   14002364c:	int3   
   14002364d:	int3   
   14002364e:	int3   
   14002364f:	int3   
   140023650:	rex push rbx
   140023652:	sub    rsp,0x20
   140023656:	mov    rbx,rdx
   140023659:	test   rcx,rcx
   14002365c:	je     0x140023662
   14002365e:	add    rcx,0xffffffffffffffef
   140023662:	xor    eax,eax
   140023664:	movzx  r9d,al
   140023668:	call   0x14000a020
   14002366d:	mov    rax,rbx
   140023670:	add    rsp,0x20
   140023674:	pop    rbx
   140023675:	ret    
   140023676:	int3   
   140023677:	int3   
   140023678:	int3   
   140023679:	int3   
   14002367a:	int3   
   14002367b:	int3   
   14002367c:	int3   
   14002367d:	int3   
   14002367e:	int3   
   14002367f:	int3   
   140023680:	test   rcx,rcx
   140023683:	je     0x14002368a
   140023685:	mov    rax,QWORD PTR [rcx+0x7]
   140023689:	ret    
   14002368a:	xor    eax,eax
   14002368c:	mov    rax,QWORD PTR [rax+0x18]
   140023690:	ret    
   140023691:	int3   
   140023692:	int3   
   140023693:	int3   
   140023694:	int3   
   140023695:	int3   
   140023696:	int3   
   140023697:	int3   
   140023698:	int3   
   140023699:	int3   
   14002369a:	int3   
   14002369b:	int3   
   14002369c:	int3   
   14002369d:	int3   
   14002369e:	int3   
   14002369f:	int3   
   1400236a0:	mov    QWORD PTR [rsp+0x10],rbx
   1400236a5:	mov    QWORD PTR [rsp+0x18],rbp
   1400236aa:	mov    QWORD PTR [rsp+0x20],rsi
   1400236af:	push   rdi
   1400236b0:	sub    rsp,0x20
   1400236b4:	mov    rdi,rdx
   1400236b7:	mov    rdx,r8
   1400236ba:	mov    rbp,r8
   1400236bd:	mov    rsi,rcx
   1400236c0:	call   0x14001d1b0
   1400236c5:	mov    rbx,rax
   1400236c8:	cmp    rax,QWORD PTR [rsi]
   1400236cb:	je     0x1400236e4
   1400236cd:	lea    rdx,[rax+0x20]
   1400236d1:	mov    rcx,rbp
   1400236d4:	call   0x140020910
   1400236d9:	test   eax,eax
   1400236db:	js     0x1400236e4
   1400236dd:	mov    QWORD PTR [rsp+0x30],rbx
   1400236e2:	jmp    0x1400236ec
   1400236e4:	mov    rax,QWORD PTR [rsi]
   1400236e7:	mov    QWORD PTR [rsp+0x30],rax
   1400236ec:	mov    rbx,QWORD PTR [rsp+0x38]
   1400236f1:	mov    rbp,QWORD PTR [rsp+0x40]
   1400236f6:	mov    rsi,QWORD PTR [rsp+0x48]
   1400236fb:	lea    rax,[rsp+0x30]
   140023700:	mov    rax,QWORD PTR [rax]
   140023703:	mov    QWORD PTR [rdi],rax
   140023706:	mov    rax,rdi
   140023709:	add    rsp,0x20
   14002370d:	pop    rdi
   14002370e:	ret    
   14002370f:	int3   
   140023710:	rex push rbx
   140023712:	sub    rsp,0x30
   140023716:	mov    r9,r8
   140023719:	mov    r8,QWORD PTR [rcx+0x20]
   14002371d:	xor    ecx,ecx
   14002371f:	mov    rbx,rdx
   140023722:	test   r8,r8
   140023725:	je     0x140023733
   140023727:	add    r8,0x11
   14002372b:	je     0x140023736
   14002372d:	lea    rax,[r8-0x11]
   140023731:	jmp    0x140023739
   140023733:	mov    r8,rcx
   140023736:	mov    rax,rcx
   140023739:	mov    r10,QWORD PTR [rax+0x8]
   14002373d:	lea    rax,[r8-0x11]
   140023741:	test   r8,r8
   140023744:	jne    0x140023749
   140023746:	mov    rax,rcx
   140023749:	mov    rax,QWORD PTR [rax+0x8]
   14002374d:	mov    rdx,QWORD PTR [rax+0x48]
   140023751:	and    rdx,0xfffffffffffffffe
   140023755:	je     0x14002375b
   140023757:	lea    rcx,[rdx-0x48]
   14002375b:	lea    rax,[r8+0x1]
   14002375f:	mov    rdx,r10
   140023762:	mov    QWORD PTR [rsp+0x20],rax
   140023767:	call   0x14000a7f0
   14002376c:	mov    QWORD PTR [rbx],rax
   14002376f:	mov    rax,rbx
   140023772:	add    rsp,0x30
   140023776:	pop    rbx
   140023777:	ret    
   140023778:	int3   
   140023779:	int3   
   14002377a:	int3   
   14002377b:	int3   
   14002377c:	int3   
   14002377d:	int3   
   14002377e:	int3   
   14002377f:	int3   
   140023780:	rex push rbx
   140023782:	sub    rsp,0x30
   140023786:	mov    r9,r8
   140023789:	mov    r8,QWORD PTR [rcx+0x20]
   14002378d:	xor    ecx,ecx
   14002378f:	mov    rbx,rdx
   140023792:	test   r8,r8
   140023795:	je     0x1400237a3
   140023797:	add    r8,0x11
   14002379b:	je     0x1400237a6
   14002379d:	lea    rax,[r8-0x11]
   1400237a1:	jmp    0x1400237a9
   1400237a3:	mov    r8,rcx
   1400237a6:	mov    rax,rcx
   1400237a9:	mov    r10,QWORD PTR [rax+0x8]
   1400237ad:	lea    rax,[r8-0x11]
   1400237b1:	test   r8,r8
   1400237b4:	jne    0x1400237b9
   1400237b6:	mov    rax,rcx
   1400237b9:	mov    rax,QWORD PTR [rax+0x8]
   1400237bd:	mov    rdx,QWORD PTR [rax+0x48]
   1400237c1:	and    rdx,0xfffffffffffffffe
   1400237c5:	je     0x1400237cb
   1400237c7:	lea    rcx,[rdx-0x48]
   1400237cb:	lea    rax,[r8+0x1]
   1400237cf:	mov    rdx,r10
   1400237d2:	mov    QWORD PTR [rsp+0x20],rax
   1400237d7:	call   0x14000a7f0
   1400237dc:	mov    QWORD PTR [rbx],rax
   1400237df:	mov    rax,rbx
   1400237e2:	add    rsp,0x30
   1400237e6:	pop    rbx
   1400237e7:	ret    
   1400237e8:	int3   
   1400237e9:	int3   
   1400237ea:	int3   
   1400237eb:	int3   
   1400237ec:	int3   
   1400237ed:	int3   
   1400237ee:	int3   
   1400237ef:	int3   
   1400237f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400237f5:	mov    QWORD PTR [rsp+0x10],rbp
   1400237fa:	mov    QWORD PTR [rsp+0x18],rsi
   1400237ff:	push   rdi
   140023800:	sub    rsp,0x20
   140023804:	mov    rbx,QWORD PTR [rcx+0x10]
   140023808:	movzx  ebp,dl
   14002380b:	mov    rsi,rcx
   14002380e:	cmp    r8,rbx
   140023811:	jae    0x14002386d
   140023813:	sub    rbx,r8
   140023816:	cmp    rbx,0x1
   14002381a:	jb     0x14002386d
   14002381c:	cmp    QWORD PTR [rcx+0x18],0x10
   140023821:	jb     0x140023828
   140023823:	mov    rax,QWORD PTR [rcx]
   140023826:	jmp    0x14002382b
   140023828:	mov    rax,rcx
   14002382b:	lea    rdi,[rax+r8*1]
   14002382f:	nop
   140023830:	test   rbx,rbx
   140023833:	je     0x14002386d
   140023835:	movsx  edx,bpl
   140023839:	mov    r8,rbx
   14002383c:	mov    rcx,rdi
   14002383f:	call   QWORD PTR [rip+0x12c2b]        # 0x140036470
   140023845:	test   rax,rax
   140023848:	je     0x14002386d
   14002384a:	cmp    BYTE PTR [rax],bpl
   14002384d:	je     0x14002385e
   14002384f:	sub    rdi,rax
   140023852:	dec    rdi
   140023855:	add    rbx,rdi
   140023858:	lea    rdi,[rax+0x1]
   14002385c:	jmp    0x140023830
   14002385e:	cmp    QWORD PTR [rsi+0x18],0x10
   140023863:	jb     0x140023868
   140023865:	mov    rsi,QWORD PTR [rsi]
   140023868:	sub    rax,rsi
   14002386b:	jmp    0x140023871
   14002386d:	or     rax,0xffffffffffffffff
   140023871:	mov    rbx,QWORD PTR [rsp+0x30]
   140023876:	mov    rbp,QWORD PTR [rsp+0x38]
   14002387b:	mov    rsi,QWORD PTR [rsp+0x40]
   140023880:	add    rsp,0x20
   140023884:	pop    rdi
   140023885:	ret    
   140023886:	int3   
   140023887:	int3   
   140023888:	int3   
   140023889:	int3   
   14002388a:	int3   
   14002388b:	int3   
   14002388c:	int3   
   14002388d:	int3   
   14002388e:	int3   
   14002388f:	int3   
   140023890:	rex push rbp
   140023892:	push   r14
   140023894:	push   r15
   140023896:	sub    rsp,0x20
   14002389a:	mov    rbp,r9
   14002389d:	mov    r15,rdx
   1400238a0:	mov    r14,rcx
   1400238a3:	test   r9,r9
   1400238a6:	jne    0x1400238bb
   1400238a8:	cmp    r8,QWORD PTR [rcx+0x10]
   1400238ac:	ja     0x1400238bb
   1400238ae:	mov    rax,r8
   1400238b1:	add    rsp,0x20
   1400238b5:	pop    r15
   1400238b7:	pop    r14
   1400238b9:	pop    rbp
   1400238ba:	ret    
   1400238bb:	mov    QWORD PTR [rsp+0x40],rbx
   1400238c0:	mov    rbx,QWORD PTR [rcx+0x10]
   1400238c4:	mov    QWORD PTR [rsp+0x48],rsi
   1400238c9:	mov    QWORD PTR [rsp+0x50],rdi
   1400238ce:	cmp    r8,rbx
   1400238d1:	jae    0x140023955
   1400238d7:	sub    rbx,r8
   1400238da:	cmp    r9,rbx
   1400238dd:	ja     0x140023955
   1400238df:	mov    eax,0x1
   1400238e4:	sub    rax,r9
   1400238e7:	add    rbx,rax
   1400238ea:	cmp    QWORD PTR [rcx+0x18],0x10
   1400238ef:	jb     0x1400238f6
   1400238f1:	mov    rax,QWORD PTR [rcx]
   1400238f4:	jmp    0x1400238f9
   1400238f6:	mov    rax,rcx
   1400238f9:	lea    rsi,[rax+r8*1]
   1400238fd:	nop    DWORD PTR [rax]
   140023900:	test   rbx,rbx
   140023903:	je     0x140023955
   140023905:	movsx  edx,BYTE PTR [r15]
   140023909:	mov    r8,rbx
   14002390c:	mov    rcx,rsi
   14002390f:	call   QWORD PTR [rip+0x12b5b]        # 0x140036470
   140023915:	mov    rdi,rax
   140023918:	test   rax,rax
   14002391b:	je     0x140023955
   14002391d:	test   rbp,rbp
   140023920:	je     0x140023943
   140023922:	mov    r8,rbp
   140023925:	mov    rdx,r15
   140023928:	mov    rcx,rax
   14002392b:	call   0x140030484
   140023930:	test   eax,eax
   140023932:	je     0x140023943
   140023934:	sub    rsi,rdi
   140023937:	dec    rsi
   14002393a:	add    rbx,rsi
   14002393d:	lea    rsi,[rdi+0x1]
   140023941:	jmp    0x140023900
   140023943:	cmp    QWORD PTR [r14+0x18],0x10
   140023948:	jb     0x14002394d
   14002394a:	mov    r14,QWORD PTR [r14]
   14002394d:	sub    rdi,r14
   140023950:	mov    rax,rdi
   140023953:	jmp    0x140023959
   140023955:	or     rax,0xffffffffffffffff
   140023959:	mov    rsi,QWORD PTR [rsp+0x48]
   14002395e:	mov    rbx,QWORD PTR [rsp+0x40]
   140023963:	mov    rdi,QWORD PTR [rsp+0x50]
   140023968:	add    rsp,0x20
   14002396c:	pop    r15
   14002396e:	pop    r14
   140023970:	pop    rbp
   140023971:	ret    
   140023972:	int3   
   140023973:	int3   
   140023974:	int3   
   140023975:	int3   
   140023976:	int3   
   140023977:	int3   
   140023978:	int3   
   140023979:	int3   
   14002397a:	int3   
   14002397b:	int3   
   14002397c:	int3   
   14002397d:	int3   
   14002397e:	int3   
   14002397f:	int3   
   140023980:	mov    rax,r8
   140023983:	mov    r8,rdx
   140023986:	test   rdx,rdx
   140023989:	jne    0x14002398e
   14002398b:	xor    eax,eax
   14002398d:	ret    
   14002398e:	movsx  edx,BYTE PTR [rax]
   140023991:	rex.W jmp QWORD PTR [rip+0x12ad8]        # 0x140036470
   140023998:	int3   
   140023999:	int3   
   14002399a:	int3   
   14002399b:	int3   
   14002399c:	int3   
   14002399d:	int3   
   14002399e:	int3   
   14002399f:	int3   
   1400239a0:	mov    r9,rdx
   1400239a3:	cmp    rdx,QWORD PTR [rcx+0x30]
   1400239a7:	jne    0x1400239ae
   1400239a9:	mov    rax,QWORD PTR [rcx+0x38]
   1400239ad:	ret    
   1400239ae:	mov    r8,QWORD PTR [rcx+0x20]
   1400239b2:	mov    rcx,QWORD PTR [rcx+0x28]
   1400239b6:	shl    rcx,0x4
   1400239ba:	sar    rcx,0x4
   1400239be:	test   rcx,rcx
   1400239c1:	jle    0x140023a03
   1400239c3:	nop    DWORD PTR [rax+0x0]
   1400239c7:	nop    WORD PTR [rax+rax*1+0x0]
   1400239d0:	mov    rax,rcx
   1400239d3:	cqo    
   1400239d5:	sub    rax,rdx
   1400239d8:	sar    rax,1
   1400239db:	mov    rdx,rax
   1400239de:	add    rax,rax
   1400239e1:	cmp    QWORD PTR [r8+rax*8],r9
   1400239e5:	jae    0x1400239fb
   1400239e7:	lea    r8,[r8+rax*8]
   1400239eb:	or     rax,0xffffffffffffffff
   1400239ef:	sub    rax,rdx
   1400239f2:	add    r8,0x10
   1400239f6:	add    rcx,rax
   1400239f9:	jmp    0x1400239fe
   1400239fb:	mov    rcx,rdx
   1400239fe:	test   rcx,rcx
   140023a01:	jg     0x1400239d0
   140023a03:	mov    rax,QWORD PTR [r8+0x8]
   140023a07:	ret    
   140023a08:	int3   
   140023a09:	int3   
   140023a0a:	int3   
   140023a0b:	int3   
   140023a0c:	int3   
   140023a0d:	int3   
   140023a0e:	int3   
   140023a0f:	int3   
   140023a10:	mov    QWORD PTR [rsp+0x18],rsi
   140023a15:	mov    QWORD PTR [rsp+0x20],rdi
   140023a1a:	push   r14
   140023a1c:	sub    rsp,0x20
   140023a20:	cmp    QWORD PTR [rdx+0x18],0x10
   140023a25:	mov    rsi,QWORD PTR [rdx+0x10]
   140023a29:	mov    r14,rdx
   140023a2c:	mov    rdi,rcx
   140023a2f:	jb     0x140023a34
   140023a31:	mov    r14,QWORD PTR [rdx]
   140023a34:	mov    rax,QWORD PTR [rcx+0x10]
   140023a38:	mov    QWORD PTR [rsp+0x30],rbx
   140023a3d:	mov    QWORD PTR [rsp+0x38],rbp
   140023a42:	cmp    r8,rax
   140023a45:	jae    0x140023a95
   140023a47:	mov    rcx,QWORD PTR [rcx+0x18]
   140023a4b:	cmp    rcx,0x10
   140023a4f:	jb     0x140023a56
   140023a51:	mov    rdx,QWORD PTR [rdi]
   140023a54:	jmp    0x140023a59
   140023a56:	mov    rdx,rdi
   140023a59:	lea    rbp,[rax+rdx*1]
   140023a5d:	cmp    rcx,0x10
   140023a61:	jb     0x140023a68
   140023a63:	mov    rax,QWORD PTR [rdi]
   140023a66:	jmp    0x140023a6b
   140023a68:	mov    rax,rdi
   140023a6b:	lea    rbx,[rax+r8*1]
   140023a6f:	cmp    rbx,rbp
   140023a72:	jae    0x140023a95
   140023a74:	test   rsi,rsi
   140023a77:	je     0x140023ab4
   140023a79:	movsx  edx,BYTE PTR [rbx]
   140023a7c:	mov    r8,rsi
   140023a7f:	mov    rcx,r14
   140023a82:	call   QWORD PTR [rip+0x129e8]        # 0x140036470
   140023a88:	test   rax,rax
   140023a8b:	je     0x140023ab4
   140023a8d:	inc    rbx
   140023a90:	cmp    rbx,rbp
   140023a93:	jb     0x140023a74
   140023a95:	or     rax,0xffffffffffffffff
   140023a99:	mov    rbp,QWORD PTR [rsp+0x38]
   140023a9e:	mov    rbx,QWORD PTR [rsp+0x30]
   140023aa3:	mov    rsi,QWORD PTR [rsp+0x40]
   140023aa8:	mov    rdi,QWORD PTR [rsp+0x48]
   140023aad:	add    rsp,0x20
   140023ab1:	pop    r14
   140023ab3:	ret    
   140023ab4:	cmp    QWORD PTR [rdi+0x18],0x10
   140023ab9:	jb     0x140023abe
   140023abb:	mov    rdi,QWORD PTR [rdi]
   140023abe:	sub    rbx,rdi
   140023ac1:	mov    rax,rbx
   140023ac4:	jmp    0x140023a99
   140023ac6:	int3   
   140023ac7:	int3   
   140023ac8:	int3   
   140023ac9:	int3   
   140023aca:	int3   
   140023acb:	int3   
   140023acc:	int3   
   140023acd:	int3   
   140023ace:	int3   
   140023acf:	int3   
   140023ad0:	mov    QWORD PTR [rsp+0x8],rbx
   140023ad5:	mov    QWORD PTR [rsp+0x10],rbp
   140023ada:	mov    QWORD PTR [rsp+0x18],rsi
   140023adf:	mov    QWORD PTR [rsp+0x20],rdi
   140023ae4:	push   r14
   140023ae6:	sub    rsp,0x20
   140023aea:	mov    rsi,r9
   140023aed:	mov    r9,QWORD PTR [rcx+0x10]
   140023af1:	mov    r14,rdx
   140023af4:	mov    rdi,rcx
   140023af7:	cmp    r8,r9
   140023afa:	jae    0x140023b45
   140023afc:	mov    rax,QWORD PTR [rcx+0x18]
   140023b00:	cmp    rax,0x10
   140023b04:	jb     0x140023b09
   140023b06:	mov    rcx,QWORD PTR [rcx]
   140023b09:	lea    rbp,[r9+rcx*1]
   140023b0d:	cmp    rax,0x10
   140023b11:	jb     0x140023b18
   140023b13:	mov    rax,QWORD PTR [rdi]
   140023b16:	jmp    0x140023b1b
   140023b18:	mov    rax,rdi
   140023b1b:	lea    rbx,[rax+r8*1]
   140023b1f:	cmp    rbx,rbp
   140023b22:	jae    0x140023b45
   140023b24:	test   rsi,rsi
   140023b27:	je     0x140023b64
   140023b29:	movsx  edx,BYTE PTR [rbx]
   140023b2c:	mov    r8,rsi
   140023b2f:	mov    rcx,r14
   140023b32:	call   QWORD PTR [rip+0x12938]        # 0x140036470
   140023b38:	test   rax,rax
   140023b3b:	je     0x140023b64
   140023b3d:	inc    rbx
   140023b40:	cmp    rbx,rbp
   140023b43:	jb     0x140023b24
   140023b45:	or     rax,0xffffffffffffffff
   140023b49:	mov    rbx,QWORD PTR [rsp+0x30]
   140023b4e:	mov    rbp,QWORD PTR [rsp+0x38]
   140023b53:	mov    rsi,QWORD PTR [rsp+0x40]
   140023b58:	mov    rdi,QWORD PTR [rsp+0x48]
   140023b5d:	add    rsp,0x20
   140023b61:	pop    r14
   140023b63:	ret    
   140023b64:	cmp    QWORD PTR [rdi+0x18],0x10
   140023b69:	jb     0x140023b6e
   140023b6b:	mov    rdi,QWORD PTR [rdi]
   140023b6e:	sub    rbx,rdi
   140023b71:	mov    rax,rbx
   140023b74:	jmp    0x140023b49
   140023b76:	int3   
   140023b77:	int3   
   140023b78:	int3   
   140023b79:	int3   
   140023b7a:	int3   
   140023b7b:	int3   
   140023b7c:	int3   
   140023b7d:	int3   
   140023b7e:	int3   
   140023b7f:	int3   
   140023b80:	mov    rax,rcx
   140023b83:	ret    
   140023b84:	int3   
   140023b85:	int3   
   140023b86:	int3   
   140023b87:	int3   
   140023b88:	int3   
   140023b89:	int3   
   140023b8a:	int3   
   140023b8b:	int3   
   140023b8c:	int3   
   140023b8d:	int3   
   140023b8e:	int3   
   140023b8f:	int3   
   140023b90:	mov    QWORD PTR [rsp+0x10],rdx
   140023b95:	mov    QWORD PTR [rsp+0x8],rcx
   140023b9a:	push   rbp
   140023b9b:	push   rbx
   140023b9c:	push   rsi
   140023b9d:	push   rdi
   140023b9e:	lea    rbp,[rsp-0x3f]
   140023ba3:	sub    rsp,0xd8
   140023baa:	mov    QWORD PTR [rbp+0x27],0xfffffffffffffffe
   140023bb2:	mov    rdi,rdx
   140023bb5:	mov    rbx,rcx
   140023bb8:	mov    DWORD PTR [rbp+0x77],0x0
   140023bbf:	mov    rcx,rdx
   140023bc2:	call   0x14002c870
   140023bc7:	test   al,al
   140023bc9:	jne    0x140023e6f
   140023bcf:	lea    rdx,[rbp-0x79]
   140023bd3:	mov    rcx,rdi
   140023bd6:	call   0x140029940
   140023bdb:	nop
   140023bdc:	mov    rax,QWORD PTR [rbx+0x20]
   140023be0:	test   rax,rax
   140023be3:	je     0x140023bf1
   140023be5:	add    rax,0x11
   140023be9:	je     0x140023bf1
   140023beb:	lea    rcx,[rax-0x11]
   140023bef:	jmp    0x140023bf3
   140023bf1:	xor    ecx,ecx
   140023bf3:	mov    r9,QWORD PTR [rcx+0x8]
   140023bf7:	mov    QWORD PTR [rbp-0x59],r9
   140023bfb:	test   rax,rax
   140023bfe:	je     0x140023c04
   140023c00:	add    rax,0xffffffffffffffef
   140023c04:	mov    rax,QWORD PTR [rax+0x8]
   140023c08:	mov    rbx,QWORD PTR [rax+0x48]
   140023c0c:	and    rbx,0xfffffffffffffffe
   140023c10:	je     0x140023c18
   140023c12:	add    rbx,0xffffffffffffffb8
   140023c16:	jmp    0x140023c1a
   140023c18:	xor    ebx,ebx
   140023c1a:	mov    QWORD PTR [rbp+0x7f],r9
   140023c1e:	test   rbx,rbx
   140023c21:	je     0x140023d22
   140023c27:	mov    r10,QWORD PTR [rbp-0x61]
   140023c2b:	mov    rsi,QWORD PTR [rbp-0x69]
   140023c2f:	mov    r11,QWORD PTR [rbp-0x79]
   140023c33:	nop    DWORD PTR [rax+0x0]
   140023c37:	nop    WORD PTR [rax+rax*1+0x0]
   140023c40:	lea    rdx,[rbp-0x79]
   140023c44:	cmp    r10,0x10
   140023c48:	cmovae rdx,r11
   140023c4c:	mov    rdi,QWORD PTR [rbx+0x10]
   140023c50:	cmp    QWORD PTR [rbx+0x18],0x10
   140023c55:	jb     0x140023c5c
   140023c57:	mov    rcx,QWORD PTR [rbx]
   140023c5a:	jmp    0x140023c5f
   140023c5c:	mov    rcx,rbx
   140023c5f:	mov    r8,rsi
   140023c62:	cmp    rdi,rsi
   140023c65:	cmovb  r8,rdi
   140023c69:	test   r8,r8
   140023c6c:	jne    0x140023c72
   140023c6e:	xor    eax,eax
   140023c70:	jmp    0x140023c83
   140023c72:	call   0x140030484
   140023c77:	mov    r9,QWORD PTR [rbp+0x7f]
   140023c7b:	mov    r10,QWORD PTR [rbp-0x61]
   140023c7f:	mov    r11,QWORD PTR [rbp-0x79]
   140023c83:	cdqe   
   140023c85:	test   rax,rax
   140023c88:	jne    0x140023c9c
   140023c8a:	cmp    rdi,rsi
   140023c8d:	jae    0x140023c94
   140023c8f:	or     eax,0xffffffff
   140023c92:	jmp    0x140023c9c
   140023c94:	xor    eax,eax
   140023c96:	cmp    rdi,rsi
   140023c99:	setne  al
   140023c9c:	test   eax,eax
   140023c9e:	js     0x140023cad
   140023ca0:	mov    r9,rbx
   140023ca3:	mov    QWORD PTR [rbp+0x7f],rbx
   140023ca7:	mov    rbx,QWORD PTR [rbx+0x50]
   140023cab:	jmp    0x140023cb1
   140023cad:	mov    rbx,QWORD PTR [rbx+0x58]
   140023cb1:	test   rbx,rbx
   140023cb4:	je     0x140023cbf
   140023cb6:	add    rbx,0xffffffffffffffb8
   140023cba:	test   rbx,rbx
   140023cbd:	jne    0x140023c40
   140023cbf:	mov    rdi,QWORD PTR [rbp-0x59]
   140023cc3:	cmp    r9,rdi
   140023cc6:	je     0x140023d25
   140023cc8:	mov    rbx,QWORD PTR [r9+0x10]
   140023ccc:	cmp    QWORD PTR [r9+0x18],0x10
   140023cd1:	jb     0x140023cd8
   140023cd3:	mov    rdx,QWORD PTR [r9]
   140023cd6:	jmp    0x140023cdb
   140023cd8:	mov    rdx,r9
   140023cdb:	lea    rcx,[rbp-0x79]
   140023cdf:	cmp    r10,0x10
   140023ce3:	cmovae rcx,r11
   140023ce7:	mov    r8,rbx
   140023cea:	cmp    rsi,rbx
   140023ced:	cmovb  r8,rsi
   140023cf1:	test   r8,r8
   140023cf4:	jne    0x140023cfa
   140023cf6:	xor    eax,eax
   140023cf8:	jmp    0x140023d03
   140023cfa:	call   0x140030484
   140023cff:	mov    r9,QWORD PTR [rbp+0x7f]
   140023d03:	cdqe   
   140023d05:	test   rax,rax
   140023d08:	jne    0x140023d1c
   140023d0a:	cmp    rsi,rbx
   140023d0d:	jae    0x140023d14
   140023d0f:	or     eax,0xffffffff
   140023d12:	jmp    0x140023d1c
   140023d14:	xor    eax,eax
   140023d16:	cmp    rsi,rbx
   140023d19:	setne  al
   140023d1c:	test   eax,eax
   140023d1e:	js     0x140023d25
   140023d20:	jmp    0x140023d28
   140023d22:	mov    rdi,r9
   140023d25:	mov    r9,rdi
   140023d28:	mov    rdi,QWORD PTR [rbp+0x67]
   140023d2c:	mov    rax,QWORD PTR [rdi+0x20]
   140023d30:	test   rax,rax
   140023d33:	je     0x140023d43
   140023d35:	add    rax,0x11
   140023d39:	je     0x140023d43
   140023d3b:	add    rax,0xffffffffffffffef
   140023d3f:	xor    esi,esi
   140023d41:	jmp    0x140023d47
   140023d43:	xor    esi,esi
   140023d45:	mov    eax,esi
   140023d47:	cmp    r9,QWORD PTR [rax+0x8]
   140023d4b:	jne    0x140023dc6
   140023d4d:	lea    rcx,[rbp-0x49]
   140023d51:	call   0x140010e90
   140023d56:	mov    rbx,rax
   140023d59:	mov    DWORD PTR [rbp+0x77],0x1
   140023d60:	mov    QWORD PTR [rbp-0x9],0xf
   140023d68:	mov    QWORD PTR [rbp-0x11],rsi
   140023d6c:	mov    BYTE PTR [rbp-0x21],0x0
   140023d70:	or     r9,0xffffffffffffffff
   140023d74:	xor    r8d,r8d
   140023d77:	lea    rdx,[rbp-0x79]
   140023d7b:	lea    rcx,[rbp-0x21]
   140023d7f:	call   0x14001ef20
   140023d84:	nop
   140023d85:	mov    rdx,rbx
   140023d88:	lea    rcx,[rbp-0x1]
   140023d8c:	call   0x140010e10
   140023d91:	nop
   140023d92:	mov    ebx,0x3
   140023d97:	mov    DWORD PTR [rbp+0x77],ebx
   140023d9a:	mov    rcx,QWORD PTR [rdi+0x20]
   140023d9e:	add    rcx,0x11
   140023da2:	lea    r8,[rcx-0x11]
   140023da6:	jne    0x140023dab
   140023da8:	mov    r8,rsi
   140023dab:	lea    r9,[rbp-0x21]
   140023daf:	mov    r8,QWORD PTR [r8+0x8]
   140023db3:	lea    rdx,[rbp-0x59]
   140023db7:	call   0x1400252b0
   140023dbc:	mov    rdi,QWORD PTR [rbp-0x59]
   140023dc0:	add    rdi,0x20
   140023dc4:	jmp    0x140023dcd
   140023dc6:	lea    rdi,[r9+0x20]
   140023dca:	mov    ebx,DWORD PTR [rbp+0x77]
   140023dcd:	test   bl,0x2
   140023dd0:	je     0x140023e02
   140023dd2:	and    ebx,0xfffffffd
   140023dd5:	mov    DWORD PTR [rbp+0x77],ebx
   140023dd8:	lea    rcx,[rbp-0x1]
   140023ddc:	call   0x140017040
   140023de1:	nop
   140023de2:	cmp    QWORD PTR [rbp-0x9],0x10
   140023de7:	jb     0x140023df2
   140023de9:	mov    rcx,QWORD PTR [rbp-0x21]
   140023ded:	call   0x140030282
   140023df2:	mov    QWORD PTR [rbp-0x9],0xf
   140023dfa:	mov    QWORD PTR [rbp-0x11],rsi
   140023dfe:	mov    BYTE PTR [rbp-0x21],0x0
   140023e02:	test   bl,0x1
   140023e05:	je     0x140023e50
   140023e07:	mov    rbx,QWORD PTR [rbp-0x29]
   140023e0b:	mov    QWORD PTR [rbp+0x77],rbx
   140023e0f:	test   rbx,rbx
   140023e12:	je     0x140023e30
   140023e14:	lea    rcx,[rbx+0x11]
   140023e18:	call   0x1400221d0
   140023e1d:	nop
   140023e1e:	mov    rcx,QWORD PTR [rbx+0x8]
   140023e22:	call   0x140030282
   140023e27:	mov    rcx,rbx
   140023e2a:	call   0x140030282
   140023e2f:	nop
   140023e30:	cmp    QWORD PTR [rbp-0x31],0x10
   140023e35:	jb     0x140023e40
   140023e37:	mov    rcx,QWORD PTR [rbp-0x49]
   140023e3b:	call   0x140030282
   140023e40:	mov    QWORD PTR [rbp-0x31],0xf
   140023e48:	mov    QWORD PTR [rbp-0x39],rsi
   140023e4c:	mov    BYTE PTR [rbp-0x49],0x0
   140023e50:	mov    rdx,QWORD PTR [rbp+0x6f]
   140023e54:	mov    rcx,rdi
   140023e57:	call   0x140023b90
   140023e5c:	mov    rbx,rax
   140023e5f:	cmp    QWORD PTR [rbp-0x61],0x10
   140023e64:	jb     0x140023e6f
   140023e66:	mov    rcx,QWORD PTR [rbp-0x79]
   140023e6a:	call   0x140030282
   140023e6f:	mov    rax,rbx
   140023e72:	add    rsp,0xd8
   140023e79:	pop    rdi
   140023e7a:	pop    rsi
   140023e7b:	pop    rbx
   140023e7c:	pop    rbp
   140023e7d:	ret    
   140023e7e:	int3   
   140023e7f:	int3   
   140023e80:	mov    QWORD PTR [rsp+0x8],rbx
   140023e85:	mov    QWORD PTR [rsp+0x10],rsi
   140023e8a:	push   rdi
   140023e8b:	sub    rsp,0x30
   140023e8f:	mov    rax,QWORD PTR [rdx]
   140023e92:	movzx  edi,WORD PTR [rcx]
   140023e95:	mov    rsi,rdx
   140023e98:	movsxd rcx,DWORD PTR [rax+0x4]
   140023e9c:	add    rcx,rdx
   140023e9f:	mov    dl,0x30
   140023ea1:	call   QWORD PTR [rip+0x122e1]        # 0x140036188
   140023ea7:	lea    rcx,[rsp+0x20]
   140023eac:	mov    edx,0x2
   140023eb1:	movzx  ebx,al
   140023eb4:	call   QWORD PTR [rip+0x1225e]        # 0x140036118
   140023eba:	mov    rcx,QWORD PTR [rsi]
   140023ebd:	movsxd rcx,DWORD PTR [rcx+0x4]
   140023ec1:	mov    rdx,QWORD PTR [rax+0x8]
   140023ec5:	add    rcx,rsi
   140023ec8:	call   QWORD PTR [rax]
   140023eca:	mov    rax,QWORD PTR [rsi]
   140023ecd:	movzx  edx,di
   140023ed0:	movsxd rcx,DWORD PTR [rax+0x4]
   140023ed4:	mov    BYTE PTR [rcx+rsi*1+0x58],bl
   140023ed8:	mov    rcx,rsi
   140023edb:	call   QWORD PTR [rip+0x1226f]        # 0x140036150
   140023ee1:	mov    rbx,QWORD PTR [rsp+0x40]
   140023ee6:	mov    rax,rsi
   140023ee9:	mov    rsi,QWORD PTR [rsp+0x48]
   140023eee:	add    rsp,0x30
   140023ef2:	pop    rdi
   140023ef3:	ret    
   140023ef4:	int3   
   140023ef5:	int3   
   140023ef6:	int3   
   140023ef7:	int3   
   140023ef8:	int3   
   140023ef9:	int3   
   140023efa:	int3   
   140023efb:	int3   
   140023efc:	int3   
   140023efd:	int3   
   140023efe:	int3   
   140023eff:	int3   
   140023f00:	mov    rax,rsp
   140023f03:	push   rbp
   140023f04:	push   r12
   140023f06:	push   r14
   140023f08:	lea    rbp,[rax-0x58]
   140023f0c:	sub    rsp,0x140
   140023f13:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140023f1c:	mov    QWORD PTR [rax+0x8],rbx
   140023f20:	mov    QWORD PTR [rax+0x10],rsi
   140023f24:	mov    QWORD PTR [rax+0x18],rdi
   140023f28:	mov    edi,r9d
   140023f2b:	mov    rbx,r8
   140023f2e:	mov    r14,rdx
   140023f31:	mov    rsi,rcx
   140023f34:	mov    DWORD PTR [rsp+0x20],0x0
   140023f3c:	lea    rax,[rip+0x16b1d]        # 0x14003aa60
   140023f43:	mov    QWORD PTR [rsp+0x30],rax
   140023f48:	lea    rax,[rip+0x16b19]        # 0x14003aa68
   140023f4f:	mov    QWORD PTR [rsp+0x40],rax
   140023f54:	mov    rax,QWORD PTR [rip+0x120f5]        # 0x140036050
   140023f5b:	mov    QWORD PTR [rbp-0x38],rax
   140023f5f:	mov    DWORD PTR [rsp+0x20],0x2
   140023f67:	xor    r8d,r8d
   140023f6a:	lea    rdx,[rsp+0x48]
   140023f6f:	lea    rcx,[rsp+0x30]
   140023f74:	call   QWORD PTR [rip+0x121ae]        # 0x140036128
   140023f7a:	nop
   140023f7b:	mov    rax,QWORD PTR [rsp+0x30]
   140023f80:	movsxd rcx,DWORD PTR [rax+0x4]
   140023f84:	lea    r12,[rip+0x16acd]        # 0x14003aa58
   140023f8b:	mov    QWORD PTR [rsp+rcx*1+0x30],r12
   140023f90:	mov    rax,QWORD PTR [rsp+0x30]
   140023f95:	movsxd rcx,DWORD PTR [rax+0x4]
   140023f99:	lea    edx,[rcx-0x98]
   140023f9f:	mov    DWORD PTR [rsp+rcx*1+0x2c],edx
   140023fa3:	lea    rcx,[rsp+0x48]
   140023fa8:	call   QWORD PTR [rip+0x1224a]        # 0x1400361f8
   140023fae:	nop
   140023faf:	lea    rax,[rip+0x16a22]        # 0x14003a9d8
   140023fb6:	mov    QWORD PTR [rsp+0x48],rax
   140023fbb:	mov    QWORD PTR [rbp-0x50],0x0
   140023fc3:	mov    DWORD PTR [rbp-0x48],0x0
   140023fca:	cmp    QWORD PTR [rbx+0x10],0x0
   140023fcf:	jne    0x140023fda
   140023fd1:	lea    rbx,[rip+0x16a98]        # 0x14003aa70
   140023fd8:	jmp    0x140023fe4
   140023fda:	cmp    QWORD PTR [rbx+0x18],0x10
   140023fdf:	jb     0x140023fe4
   140023fe1:	mov    rbx,QWORD PTR [rbx]
   140023fe4:	mov    rdx,rbx
   140023fe7:	lea    rcx,[rsp+0x40]
   140023fec:	call   0x140002f70
   140023ff1:	test   edi,edi
   140023ff3:	je     0x140024016
   140023ff5:	mov    dl,0x28
   140023ff7:	lea    rcx,[rsp+0x40]
   140023ffc:	call   0x140002db0
   140024001:	mov    rcx,rax
   140024004:	mov    edx,edi
   140024006:	call   QWORD PTR [rip+0x12134]        # 0x140036140
   14002400c:	mov    rcx,rax
   14002400f:	mov    dl,0x29
   140024011:	call   0x140002db0
   140024016:	lea    rdx,[rip+0x166a3]        # 0x14003a6c0
   14002401d:	lea    rcx,[rsp+0x40]
   140024022:	call   0x140002f70
   140024027:	mov    rcx,rax
   14002402a:	mov    rdx,r14
   14002402d:	call   0x140002ba0
   140024032:	mov    rdx,rsi
   140024035:	lea    rcx,[rsp+0x30]
   14002403a:	call   0x14002cb00
   14002403f:	nop
   140024040:	mov    rax,QWORD PTR [rsp+0x30]
   140024045:	movsxd rcx,DWORD PTR [rax+0x4]
   140024049:	mov    QWORD PTR [rsp+rcx*1+0x30],r12
   14002404e:	mov    rax,QWORD PTR [rsp+0x30]
   140024053:	movsxd rcx,DWORD PTR [rax+0x4]
   140024057:	lea    edx,[rcx-0x98]
   14002405d:	mov    DWORD PTR [rsp+rcx*1+0x2c],edx
   140024061:	lea    rcx,[rsp+0x48]
   140024066:	call   0x140017170
   14002406b:	lea    rcx,[rsp+0x50]
   140024070:	call   QWORD PTR [rip+0x120aa]        # 0x140036120
   140024076:	mov    rax,QWORD PTR [rip+0x11fe3]        # 0x140036060
   14002407d:	mov    QWORD PTR [rbp-0x38],rax
   140024081:	lea    rcx,[rbp-0x38]
   140024085:	call   QWORD PTR [rip+0x12245]        # 0x1400362d0
   14002408b:	mov    rax,rsi
   14002408e:	lea    r11,[rsp+0x140]
   140024096:	mov    rbx,QWORD PTR [r11+0x20]
   14002409a:	mov    rsi,QWORD PTR [r11+0x28]
   14002409e:	mov    rdi,QWORD PTR [r11+0x30]
   1400240a2:	mov    rsp,r11
   1400240a5:	pop    r14
   1400240a7:	pop    r12
   1400240a9:	pop    rbp
   1400240aa:	ret    
   1400240ab:	int3   
   1400240ac:	int3   
   1400240ad:	int3   
   1400240ae:	int3   
   1400240af:	int3   
   1400240b0:	mov    rax,rcx
   1400240b3:	ret    
   1400240b4:	int3   
   1400240b5:	int3   
   1400240b6:	int3   
   1400240b7:	int3   
   1400240b8:	int3   
   1400240b9:	int3   
   1400240ba:	int3   
   1400240bb:	int3   
   1400240bc:	int3   
   1400240bd:	int3   
   1400240be:	int3   
   1400240bf:	int3   
   1400240c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400240c5:	mov    QWORD PTR [rsp+0x18],rsi
   1400240ca:	push   rdi
   1400240cb:	sub    rsp,0x20
   1400240cf:	lea    ebx,[rdx+0x7d2c]
   1400240d5:	mov    rsi,rcx
   1400240d8:	mov    eax,0x396b06bd
   1400240dd:	lea    edx,[rbx*4+0x3]
   1400240e4:	mul    edx
   1400240e6:	mov    r9d,edx
   1400240e9:	shr    r9d,0xf
   1400240ed:	imul   eax,r9d,0x23ab1
   1400240f4:	imul   di,r9w,0x64
   1400240f9:	shr    eax,0x2
   1400240fc:	sub    ebx,eax
   1400240fe:	mov    eax,0x166db073
   140024103:	lea    r8d,[rbx*4+0x3]
   14002410b:	mul    r8d
   14002410e:	mov    r8d,edx
   140024111:	shr    r8d,0x7
   140024115:	imul   eax,r8d,0x5b5
   14002411c:	shr    eax,0x2
   14002411f:	sub    ebx,eax
   140024121:	mov    eax,0xd62b80d7
   140024126:	lea    ecx,[rbx*4+0x2]
   14002412d:	add    ecx,ebx
   14002412f:	mul    ecx
   140024131:	mov    eax,0xcccccccd
   140024136:	mov    r10d,edx
   140024139:	shr    r10d,0x7
   14002413d:	imul   ecx,r10d,0x99
   140024144:	add    ecx,0x2
   140024147:	mul    ecx
   140024149:	mov    eax,0xcccccccd
   14002414e:	shr    edx,0x2
   140024151:	sub    bx,dx
   140024154:	mul    r10d
   140024157:	mov    eax,0x12c0
   14002415c:	inc    bx
   14002415f:	shr    edx,0x3
   140024162:	add    di,dx
   140024165:	add    di,r8w
   140024169:	sub    di,ax
   14002416c:	movzx  eax,di
   14002416f:	inc    eax
   140024171:	cmp    eax,0x579
   140024176:	jl     0x1400241d3
   140024178:	mov    eax,0x2710
   14002417d:	cmp    di,ax
   140024180:	ja     0x1400241e4
   140024182:	movzx  eax,bx
   140024185:	inc    eax
   140024187:	cmp    eax,0x2
   14002418a:	jl     0x1400241f8
   14002418c:	cmp    bx,0x1f
   140024190:	ja     0x140024209
   140024192:	movzx  eax,dx
   140024195:	add    dx,dx
   140024198:	lea    rcx,[rsp+0x38]
   14002419d:	add    ax,dx
   1400241a0:	shl    ax,0x2
   1400241a4:	sub    r10w,ax
   1400241a8:	lea    edx,[r10+0x3]
   1400241ac:	call   QWORD PTR [rip+0x1235e]        # 0x140036510
   1400241b2:	mov    WORD PTR [rsi+0x4],bx
   1400241b6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400241bb:	movzx  eax,WORD PTR [rax]
   1400241be:	mov    WORD PTR [rsi],di
   1400241c1:	mov    WORD PTR [rsi+0x2],ax
   1400241c5:	mov    rax,rsi
   1400241c8:	mov    rsi,QWORD PTR [rsp+0x40]
   1400241cd:	add    rsp,0x20
   1400241d1:	pop    rdi
   1400241d2:	ret    
   1400241d3:	mov    ecx,0x578
   1400241d8:	xor    r8d,r8d
   1400241db:	movzx  edx,di
   1400241de:	call   0x140026710
   1400241e3:	int3   
   1400241e4:	mov    ecx,0x578
   1400241e9:	mov    r8d,0x1
   1400241ef:	movzx  edx,di
   1400241f2:	call   0x140026710
   1400241f7:	int3   
   1400241f8:	mov    ecx,0x1
   1400241fd:	xor    r8d,r8d
   140024200:	movzx  edx,bx
   140024203:	call   0x140026650
   140024208:	int3   
   140024209:	mov    ecx,0x1
   14002420e:	movzx  edx,bx
   140024211:	mov    r8d,ecx
   140024214:	call   0x140026650
   140024219:	int3   
   14002421a:	int3   
   14002421b:	int3   
   14002421c:	int3   
   14002421d:	int3   
   14002421e:	int3   
   14002421f:	int3   
   140024220:	test   rcx,rcx
   140024223:	je     0x14002422a
   140024225:	lea    rax,[rcx-0x48]
   140024229:	ret    
   14002422a:	xor    eax,eax
   14002422c:	ret    
   14002422d:	int3   
   14002422e:	int3   
   14002422f:	int3   
   140024230:	test   rcx,rcx
   140024233:	je     0x14002423a
   140024235:	lea    rax,[rcx-0x60]
   140024239:	ret    
   14002423a:	xor    eax,eax
   14002423c:	ret    
   14002423d:	int3   
   14002423e:	int3   
   14002423f:	int3   
   140024240:	mov    QWORD PTR [rsp+0x10],rdx
   140024245:	push   rdi
   140024246:	sub    rsp,0x30
   14002424a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140024253:	mov    QWORD PTR [rsp+0x40],rbx
   140024258:	mov    rbx,rdx
   14002425b:	mov    rdi,rcx
   14002425e:	xor    r8d,r8d
   140024261:	call   0x14000aa20
   140024266:	nop
   140024267:	cmp    QWORD PTR [rbx+0x18],0x10
   14002426c:	jb     0x140024276
   14002426e:	mov    rcx,QWORD PTR [rbx]
   140024271:	call   0x140030282
   140024276:	mov    QWORD PTR [rbx+0x18],0xf
   14002427e:	mov    QWORD PTR [rbx+0x10],0x0
   140024286:	mov    BYTE PTR [rbx],0x0
   140024289:	mov    rax,rdi
   14002428c:	mov    rbx,QWORD PTR [rsp+0x40]
   140024291:	add    rsp,0x30
   140024295:	pop    rdi
   140024296:	ret    
   140024297:	int3   
   140024298:	int3   
   140024299:	int3   
   14002429a:	int3   
   14002429b:	int3   
   14002429c:	int3   
   14002429d:	int3   
   14002429e:	int3   
   14002429f:	int3   
   1400242a0:	mov    rax,QWORD PTR [rcx]
   1400242a3:	mov    rcx,QWORD PTR [rax]
   1400242a6:	mov    rax,QWORD PTR [rcx]
   1400242a9:	mov    rax,QWORD PTR [rax+0x10]
   1400242ad:	ret    
   1400242ae:	int3   
   1400242af:	int3   
   1400242b0:	mov    rax,QWORD PTR [rcx]
   1400242b3:	mov    rax,QWORD PTR [rax]
   1400242b6:	add    rax,0x10
   1400242ba:	ret    
   1400242bb:	int3   
   1400242bc:	int3   
   1400242bd:	int3   
   1400242be:	int3   
   1400242bf:	int3   
   1400242c0:	lea    rax,[rip+0x30d39]        # 0x140055000
   1400242c7:	ret    
   1400242c8:	int3   
   1400242c9:	int3   
   1400242ca:	int3   
   1400242cb:	int3   
   1400242cc:	int3   
   1400242cd:	int3   
   1400242ce:	int3   
   1400242cf:	int3   
   1400242d0:	mov    rax,QWORD PTR [rcx]
   1400242d3:	ret    
   1400242d4:	int3   
   1400242d5:	int3   
   1400242d6:	int3   
   1400242d7:	int3   
   1400242d8:	int3   
   1400242d9:	int3   
   1400242da:	int3   
   1400242db:	int3   
   1400242dc:	int3   
   1400242dd:	int3   
   1400242de:	int3   
   1400242df:	int3   
   1400242e0:	mov    rax,QWORD PTR [rcx]
   1400242e3:	ret    
   1400242e4:	int3   
   1400242e5:	int3   
   1400242e6:	int3   
   1400242e7:	int3   
   1400242e8:	int3   
   1400242e9:	int3   
   1400242ea:	int3   
   1400242eb:	int3   
   1400242ec:	int3   
   1400242ed:	int3   
   1400242ee:	int3   
   1400242ef:	int3   
   1400242f0:	mov    rax,QWORD PTR [rcx]
   1400242f3:	ret    
   1400242f4:	int3   
   1400242f5:	int3   
   1400242f6:	int3   
   1400242f7:	int3   
   1400242f8:	int3   
   1400242f9:	int3   
   1400242fa:	int3   
   1400242fb:	int3   
   1400242fc:	int3   
   1400242fd:	int3   
   1400242fe:	int3   
   1400242ff:	int3   
   140024300:	mov    rax,QWORD PTR [rcx+0x8]
   140024304:	ret    
   140024305:	int3   
   140024306:	int3   
   140024307:	int3   
   140024308:	int3   
   140024309:	int3   
   14002430a:	int3   
   14002430b:	int3   
   14002430c:	int3   
   14002430d:	int3   
   14002430e:	int3   
   14002430f:	int3   
   140024310:	mov    rax,QWORD PTR [rcx+0x8]
   140024314:	ret    
   140024315:	int3   
   140024316:	int3   
   140024317:	int3   
   140024318:	int3   
   140024319:	int3   
   14002431a:	int3   
   14002431b:	int3   
   14002431c:	int3   
   14002431d:	int3   
   14002431e:	int3   
   14002431f:	int3   
   140024320:	lea    rax,[rcx+0x8]
   140024324:	ret    
   140024325:	int3   
   140024326:	int3   
   140024327:	int3   
   140024328:	int3   
   140024329:	int3   
   14002432a:	int3   
   14002432b:	int3   
   14002432c:	int3   
   14002432d:	int3   
   14002432e:	int3   
   14002432f:	int3   
   140024330:	mov    rax,QWORD PTR [rcx]
   140024333:	ret    
   140024334:	int3   
   140024335:	int3   
   140024336:	int3   
   140024337:	int3   
   140024338:	int3   
   140024339:	int3   
   14002433a:	int3   
   14002433b:	int3   
   14002433c:	int3   
   14002433d:	int3   
   14002433e:	int3   
   14002433f:	int3   
   140024340:	mov    rax,QWORD PTR [rcx]
   140024343:	ret    
   140024344:	int3   
   140024345:	int3   
   140024346:	int3   
   140024347:	int3   
   140024348:	int3   
   140024349:	int3   
   14002434a:	int3   
   14002434b:	int3   
   14002434c:	int3   
   14002434d:	int3   
   14002434e:	int3   
   14002434f:	int3   
   140024350:	mov    rax,QWORD PTR [rcx]
   140024353:	ret    
   140024354:	int3   
   140024355:	int3   
   140024356:	int3   
   140024357:	int3   
   140024358:	int3   
   140024359:	int3   
   14002435a:	int3   
   14002435b:	int3   
   14002435c:	int3   
   14002435d:	int3   
   14002435e:	int3   
   14002435f:	int3   
   140024360:	mov    rax,QWORD PTR [rcx]
   140024363:	ret    
   140024364:	int3   
   140024365:	int3   
   140024366:	int3   
   140024367:	int3   
   140024368:	int3   
   140024369:	int3   
   14002436a:	int3   
   14002436b:	int3   
   14002436c:	int3   
   14002436d:	int3   
   14002436e:	int3   
   14002436f:	int3   
   140024370:	mov    rax,rdx
   140024373:	ret    
   140024374:	int3   
   140024375:	int3   
   140024376:	int3   
   140024377:	int3   
   140024378:	int3   
   140024379:	int3   
   14002437a:	int3   
   14002437b:	int3   
   14002437c:	int3   
   14002437d:	int3   
   14002437e:	int3   
   14002437f:	int3   
   140024380:	rex push rdi
   140024382:	sub    rsp,0x60
   140024386:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14002438f:	mov    QWORD PTR [rsp+0x70],rbx
   140024394:	mov    QWORD PTR [rsp+0x78],rsi
   140024399:	mov    rdi,r8
   14002439c:	mov    rbx,rdx
   14002439f:	mov    rsi,rcx
   1400243a2:	xor    eax,eax
   1400243a4:	mov    DWORD PTR [rsp+0x20],eax
   1400243a8:	mov    QWORD PTR [rsp+0x48],0xf
   1400243b1:	mov    QWORD PTR [rsp+0x40],rax
   1400243b6:	mov    BYTE PTR [rsp+0x30],al
   1400243ba:	or     r9,0xffffffffffffffff
   1400243be:	xor    r8d,r8d
   1400243c1:	mov    rdx,rdi
   1400243c4:	lea    rcx,[rsp+0x30]
   1400243c9:	call   0x14001ef20
   1400243ce:	movzx  eax,BYTE PTR [rdi+0x20]
   1400243d2:	mov    BYTE PTR [rsp+0x50],al
   1400243d6:	lea    rdx,[rsp+0x30]
   1400243db:	cmp    QWORD PTR [rsp+0x48],0x10
   1400243e1:	cmovae rdx,QWORD PTR [rsp+0x30]
   1400243e7:	mov    rax,QWORD PTR [rdi+0x28]
   1400243eb:	cmp    QWORD PTR [rdi+0x18],0x10
   1400243f0:	jb     0x1400243f5
   1400243f2:	mov    rdi,QWORD PTR [rdi]
   1400243f5:	sub    rax,rdi
   1400243f8:	add    rax,rdx
   1400243fb:	mov    QWORD PTR [rsp+0x58],rax
   140024400:	lea    rdx,[rsp+0x30]
   140024405:	mov    rcx,rsi
   140024408:	call   0x14002e2e0
   14002440d:	mov    rcx,rax
   140024410:	mov    BYTE PTR [rbx],0x0
   140024413:	test   rax,rax
   140024416:	je     0x140024427
   140024418:	lea    rax,[rbx+0x8]
   14002441c:	test   rax,rax
   14002441f:	je     0x140024424
   140024421:	mov    QWORD PTR [rax],rcx
   140024424:	mov    BYTE PTR [rbx],0x1
   140024427:	cmp    QWORD PTR [rsp+0x48],0x10
   14002442d:	jb     0x140024439
   14002442f:	mov    rcx,QWORD PTR [rsp+0x30]
   140024434:	call   0x140030282
   140024439:	mov    rax,rbx
   14002443c:	mov    rbx,QWORD PTR [rsp+0x70]
   140024441:	mov    rsi,QWORD PTR [rsp+0x78]
   140024446:	add    rsp,0x60
   14002444a:	pop    rdi
   14002444b:	ret    
   14002444c:	int3   
   14002444d:	int3   
   14002444e:	int3   
   14002444f:	int3   
   140024450:	rex push rdi
   140024452:	sub    rsp,0x60
   140024456:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14002445f:	mov    QWORD PTR [rsp+0x70],rbx
   140024464:	mov    QWORD PTR [rsp+0x78],rsi
   140024469:	mov    rdi,r8
   14002446c:	mov    rbx,rdx
   14002446f:	mov    rsi,rcx
   140024472:	xor    eax,eax
   140024474:	mov    DWORD PTR [rsp+0x20],eax
   140024478:	mov    QWORD PTR [rsp+0x48],0xf
   140024481:	mov    QWORD PTR [rsp+0x40],rax
   140024486:	mov    BYTE PTR [rsp+0x30],al
   14002448a:	or     r9,0xffffffffffffffff
   14002448e:	xor    r8d,r8d
   140024491:	mov    rdx,rdi
   140024494:	lea    rcx,[rsp+0x30]
   140024499:	call   0x14001ef20
   14002449e:	movzx  eax,BYTE PTR [rdi+0x20]
   1400244a2:	mov    BYTE PTR [rsp+0x50],al
   1400244a6:	lea    rdx,[rsp+0x30]
   1400244ab:	cmp    QWORD PTR [rsp+0x48],0x10
   1400244b1:	cmovae rdx,QWORD PTR [rsp+0x30]
   1400244b7:	mov    rax,QWORD PTR [rdi+0x28]
   1400244bb:	cmp    QWORD PTR [rdi+0x18],0x10
   1400244c0:	jb     0x1400244c5
   1400244c2:	mov    rdi,QWORD PTR [rdi]
   1400244c5:	sub    rax,rdi
   1400244c8:	add    rax,rdx
   1400244cb:	mov    QWORD PTR [rsp+0x58],rax
   1400244d0:	lea    rdx,[rsp+0x30]
   1400244d5:	mov    rcx,rsi
   1400244d8:	call   0x14002e2e0
   1400244dd:	mov    rcx,rax
   1400244e0:	mov    BYTE PTR [rbx],0x0
   1400244e3:	test   rax,rax
   1400244e6:	je     0x1400244f7
   1400244e8:	lea    rax,[rbx+0x8]
   1400244ec:	test   rax,rax
   1400244ef:	je     0x1400244f4
   1400244f1:	mov    QWORD PTR [rax],rcx
   1400244f4:	mov    BYTE PTR [rbx],0x1
   1400244f7:	cmp    QWORD PTR [rsp+0x48],0x10
   1400244fd:	jb     0x140024509
   1400244ff:	mov    rcx,QWORD PTR [rsp+0x30]
   140024504:	call   0x140030282
   140024509:	mov    rax,rbx
   14002450c:	mov    rbx,QWORD PTR [rsp+0x70]
   140024511:	mov    rsi,QWORD PTR [rsp+0x78]
   140024516:	add    rsp,0x60
   14002451a:	pop    rdi
   14002451b:	ret    
   14002451c:	int3   
   14002451d:	int3   
   14002451e:	int3   
   14002451f:	int3   
   140024520:	xor    eax,eax
   140024522:	ret    
   140024523:	int3   
   140024524:	int3   
   140024525:	int3   
   140024526:	int3   
   140024527:	int3   
   140024528:	int3   
   140024529:	int3   
   14002452a:	int3   
   14002452b:	int3   
   14002452c:	int3   
   14002452d:	int3   
   14002452e:	int3   
   14002452f:	int3   
   140024530:	xor    eax,eax
   140024532:	ret    
   140024533:	int3   
   140024534:	int3   
   140024535:	int3   
   140024536:	int3   
   140024537:	int3   
   140024538:	int3   
   140024539:	int3   
   14002453a:	int3   
   14002453b:	int3   
   14002453c:	int3   
   14002453d:	int3   
   14002453e:	int3   
   14002453f:	int3   
   140024540:	xor    eax,eax
   140024542:	ret    
   140024543:	int3   
   140024544:	int3   
   140024545:	int3   
   140024546:	int3   
   140024547:	int3   
   140024548:	int3   
   140024549:	int3   
   14002454a:	int3   
   14002454b:	int3   
   14002454c:	int3   
   14002454d:	int3   
   14002454e:	int3   
   14002454f:	int3   
   140024550:	xor    eax,eax
   140024552:	ret    
   140024553:	int3   
   140024554:	int3   
   140024555:	int3   
   140024556:	int3   
   140024557:	int3   
   140024558:	int3   
   140024559:	int3   
   14002455a:	int3   
   14002455b:	int3   
   14002455c:	int3   
   14002455d:	int3   
   14002455e:	int3   
   14002455f:	int3   
   140024560:	mov    QWORD PTR [rsp+0x8],rbx
   140024565:	mov    QWORD PTR [rsp+0x10],rsi
   14002456a:	push   rdi
   14002456b:	sub    rsp,0x20
   14002456f:	mov    rax,QWORD PTR [rcx+0x58]
   140024573:	xor    esi,esi
   140024575:	mov    rdi,rdx
   140024578:	mov    BYTE PTR [rcx+rax*1+0x14],0x80
   14002457d:	inc    QWORD PTR [rcx+0x58]
   140024581:	cmp    QWORD PTR [rcx+0x58],0x40
   140024586:	mov    rbx,rcx
   140024589:	jne    0x140024594
   14002458b:	mov    QWORD PTR [rcx+0x58],rsi
   14002458f:	call   0x1400280b0
   140024594:	mov    rax,QWORD PTR [rbx+0x58]
   140024598:	cmp    rax,0x38
   14002459c:	jbe    0x1400245f9
   14002459e:	test   rax,rax
   1400245a1:	je     0x1400245c9
   1400245a3:	mov    rax,QWORD PTR [rbx+0x58]
   1400245a7:	mov    BYTE PTR [rbx+rax*1+0x14],sil
   1400245ac:	inc    QWORD PTR [rbx+0x58]
   1400245b0:	cmp    QWORD PTR [rbx+0x58],0x40
   1400245b5:	jne    0x1400245c3
   1400245b7:	mov    rcx,rbx
   1400245ba:	mov    QWORD PTR [rbx+0x58],rsi
   1400245be:	call   0x1400280b0
   1400245c3:	cmp    QWORD PTR [rbx+0x58],rsi
   1400245c7:	jne    0x1400245a3
   1400245c9:	cmp    QWORD PTR [rbx+0x58],0x38
   1400245ce:	jae    0x140024627
   1400245d0:	mov    rax,QWORD PTR [rbx+0x58]
   1400245d4:	mov    BYTE PTR [rbx+rax*1+0x14],sil
   1400245d9:	inc    QWORD PTR [rbx+0x58]
   1400245dd:	cmp    QWORD PTR [rbx+0x58],0x40
   1400245e2:	jne    0x1400245f0
   1400245e4:	mov    rcx,rbx
   1400245e7:	mov    QWORD PTR [rbx+0x58],rsi
   1400245eb:	call   0x1400280b0
   1400245f0:	cmp    QWORD PTR [rbx+0x58],0x38
   1400245f5:	jb     0x1400245d0
   1400245f7:	jmp    0x140024627
   1400245f9:	jae    0x140024627
   1400245fb:	nop    DWORD PTR [rax+rax*1+0x0]
   140024600:	mov    rax,QWORD PTR [rbx+0x58]
   140024604:	mov    BYTE PTR [rbx+rax*1+0x14],sil
   140024609:	inc    QWORD PTR [rbx+0x58]
   14002460d:	cmp    QWORD PTR [rbx+0x58],0x40
   140024612:	jne    0x140024620
   140024614:	mov    rcx,rbx
   140024617:	mov    QWORD PTR [rbx+0x58],rsi
   14002461b:	call   0x1400280b0
   140024620:	cmp    QWORD PTR [rbx+0x58],0x38
   140024625:	jb     0x140024600
   140024627:	mov    rcx,QWORD PTR [rbx+0x58]
   14002462b:	movzx  eax,BYTE PTR [rbx+0x6b]
   14002462f:	mov    BYTE PTR [rbx+rcx*1+0x14],al
   140024633:	inc    QWORD PTR [rbx+0x58]
   140024637:	cmp    QWORD PTR [rbx+0x58],0x40
   14002463c:	jne    0x14002464a
   14002463e:	mov    rcx,rbx
   140024641:	mov    QWORD PTR [rbx+0x58],rsi
   140024645:	call   0x1400280b0
   14002464a:	mov    rcx,QWORD PTR [rbx+0x58]
   14002464e:	movzx  eax,BYTE PTR [rbx+0x6a]
   140024652:	mov    BYTE PTR [rbx+rcx*1+0x14],al
   140024656:	inc    QWORD PTR [rbx+0x58]
   14002465a:	cmp    QWORD PTR [rbx+0x58],0x40
   14002465f:	jne    0x14002466d
   140024661:	mov    rcx,rbx
   140024664:	mov    QWORD PTR [rbx+0x58],rsi
   140024668:	call   0x1400280b0
   14002466d:	mov    rcx,QWORD PTR [rbx+0x58]
   140024671:	movzx  eax,BYTE PTR [rbx+0x69]
   140024675:	mov    BYTE PTR [rbx+rcx*1+0x14],al
   140024679:	inc    QWORD PTR [rbx+0x58]
   14002467d:	cmp    QWORD PTR [rbx+0x58],0x40
   140024682:	jne    0x140024690
   140024684:	mov    rcx,rbx
   140024687:	mov    QWORD PTR [rbx+0x58],rsi
   14002468b:	call   0x1400280b0
   140024690:	mov    rcx,QWORD PTR [rbx+0x58]
   140024694:	movzx  eax,BYTE PTR [rbx+0x68]
   140024698:	mov    BYTE PTR [rbx+rcx*1+0x14],al
   14002469c:	inc    QWORD PTR [rbx+0x58]
   1400246a0:	cmp    QWORD PTR [rbx+0x58],0x40
   1400246a5:	jne    0x1400246b3
   1400246a7:	mov    rcx,rbx
   1400246aa:	mov    QWORD PTR [rbx+0x58],rsi
   1400246ae:	call   0x1400280b0
   1400246b3:	mov    rcx,QWORD PTR [rbx+0x58]
   1400246b7:	movzx  eax,BYTE PTR [rbx+0x63]
   1400246bb:	mov    BYTE PTR [rbx+rcx*1+0x14],al
   1400246bf:	inc    QWORD PTR [rbx+0x58]
   1400246c3:	cmp    QWORD PTR [rbx+0x58],0x40
   1400246c8:	jne    0x1400246d6
   1400246ca:	mov    rcx,rbx
   1400246cd:	mov    QWORD PTR [rbx+0x58],rsi
   1400246d1:	call   0x1400280b0
   1400246d6:	mov    rcx,QWORD PTR [rbx+0x58]
   1400246da:	movzx  eax,BYTE PTR [rbx+0x62]
   1400246de:	mov    BYTE PTR [rbx+rcx*1+0x14],al
   1400246e2:	inc    QWORD PTR [rbx+0x58]
   1400246e6:	cmp    QWORD PTR [rbx+0x58],0x40
   1400246eb:	jne    0x1400246f9
   1400246ed:	mov    rcx,rbx
   1400246f0:	mov    QWORD PTR [rbx+0x58],rsi
   1400246f4:	call   0x1400280b0
   1400246f9:	mov    rcx,QWORD PTR [rbx+0x58]
   1400246fd:	movzx  eax,BYTE PTR [rbx+0x61]
   140024701:	mov    BYTE PTR [rbx+rcx*1+0x14],al
   140024705:	inc    QWORD PTR [rbx+0x58]
   140024709:	cmp    QWORD PTR [rbx+0x58],0x40
   14002470e:	jne    0x14002471c
   140024710:	mov    rcx,rbx
   140024713:	mov    QWORD PTR [rbx+0x58],rsi
   140024717:	call   0x1400280b0
   14002471c:	mov    rcx,QWORD PTR [rbx+0x58]
   140024720:	movzx  eax,BYTE PTR [rbx+0x60]
   140024724:	mov    BYTE PTR [rbx+rcx*1+0x14],al
   140024728:	inc    QWORD PTR [rbx+0x58]
   14002472c:	cmp    QWORD PTR [rbx+0x58],0x40
   140024731:	jne    0x14002473f
   140024733:	mov    rcx,rbx
   140024736:	mov    QWORD PTR [rbx+0x58],rsi
   14002473a:	call   0x1400280b0
   14002473f:	mov    eax,DWORD PTR [rbx]
   140024741:	mov    rsi,QWORD PTR [rsp+0x38]
   140024746:	mov    DWORD PTR [rdi],eax
   140024748:	mov    eax,DWORD PTR [rbx+0x4]
   14002474b:	mov    DWORD PTR [rdi+0x4],eax
   14002474e:	mov    eax,DWORD PTR [rbx+0x8]
   140024751:	mov    DWORD PTR [rdi+0x8],eax
   140024754:	mov    eax,DWORD PTR [rbx+0xc]
   140024757:	mov    DWORD PTR [rdi+0xc],eax
   14002475a:	mov    eax,DWORD PTR [rbx+0x10]
   14002475d:	mov    rbx,QWORD PTR [rsp+0x30]
   140024762:	mov    DWORD PTR [rdi+0x10],eax
   140024765:	add    rsp,0x20
   140024769:	pop    rdi
   14002476a:	ret    
   14002476b:	int3   
   14002476c:	int3   
   14002476d:	int3   
   14002476e:	int3   
   14002476f:	int3   
   140024770:	mov    rax,rcx
   140024773:	ret    
   140024774:	int3   
   140024775:	int3   
   140024776:	int3   
   140024777:	int3   
   140024778:	int3   
   140024779:	int3   
   14002477a:	int3   
   14002477b:	int3   
   14002477c:	int3   
   14002477d:	int3   
   14002477e:	int3   
   14002477f:	int3   
   140024780:	mov    rax,QWORD PTR [rcx+0x8]
   140024784:	ret    
   140024785:	int3   
   140024786:	int3   
   140024787:	int3   
   140024788:	int3   
   140024789:	int3   
   14002478a:	int3   
   14002478b:	int3   
   14002478c:	int3   
   14002478d:	int3   
   14002478e:	int3   
   14002478f:	int3   
   140024790:	mov    rax,QWORD PTR [rcx+0x8]
   140024794:	ret    
   140024795:	int3   
   140024796:	int3   
   140024797:	int3   
   140024798:	int3   
   140024799:	int3   
   14002479a:	int3   
   14002479b:	int3   
   14002479c:	int3   
   14002479d:	int3   
   14002479e:	int3   
   14002479f:	int3   
   1400247a0:	lea    rax,[rcx+0x8]
   1400247a4:	ret    
   1400247a5:	int3   
   1400247a6:	int3   
   1400247a7:	int3   
   1400247a8:	int3   
   1400247a9:	int3   
   1400247aa:	int3   
   1400247ab:	int3   
   1400247ac:	int3   
   1400247ad:	int3   
   1400247ae:	int3   
   1400247af:	int3   
   1400247b0:	mov    rax,QWORD PTR [rcx]
   1400247b3:	ret    
   1400247b4:	int3   
   1400247b5:	int3   
   1400247b6:	int3   
   1400247b7:	int3   
   1400247b8:	int3   
   1400247b9:	int3   
   1400247ba:	int3   
   1400247bb:	int3   
   1400247bc:	int3   
   1400247bd:	int3   
   1400247be:	int3   
   1400247bf:	int3   
   1400247c0:	mov    rax,QWORD PTR [rcx]
   1400247c3:	ret    
   1400247c4:	int3   
   1400247c5:	int3   
   1400247c6:	int3   
   1400247c7:	int3   
   1400247c8:	int3   
   1400247c9:	int3   
   1400247ca:	int3   
   1400247cb:	int3   
   1400247cc:	int3   
   1400247cd:	int3   
   1400247ce:	int3   
   1400247cf:	int3   
   1400247d0:	lea    rax,[rcx+0x8]
   1400247d4:	ret    
   1400247d5:	int3   
   1400247d6:	int3   
   1400247d7:	int3   
   1400247d8:	int3   
   1400247d9:	int3   
   1400247da:	int3   
   1400247db:	int3   
   1400247dc:	int3   
   1400247dd:	int3   
   1400247de:	int3   
   1400247df:	int3   
   1400247e0:	lea    rax,[rcx+0x8]
   1400247e4:	ret    
   1400247e5:	int3   
   1400247e6:	int3   
   1400247e7:	int3   
   1400247e8:	int3   
   1400247e9:	int3   
   1400247ea:	int3   
   1400247eb:	int3   
   1400247ec:	int3   
   1400247ed:	int3   
   1400247ee:	int3   
   1400247ef:	int3   
   1400247f0:	lea    rax,[rcx+0x8]
   1400247f4:	ret    
   1400247f5:	int3   
   1400247f6:	int3   
   1400247f7:	int3   
   1400247f8:	int3   
   1400247f9:	int3   
   1400247fa:	int3   
   1400247fb:	int3   
   1400247fc:	int3   
   1400247fd:	int3   
   1400247fe:	int3   
   1400247ff:	int3   
   140024800:	mov    rax,QWORD PTR [rcx+0x78]
   140024804:	mov    r10,rcx
   140024807:	mov    rcx,QWORD PTR [rcx+0x18]
   14002480b:	mov    rdx,QWORD PTR [rax]
   14002480e:	mov    rax,QWORD PTR [rdx]
   140024811:	mov    r8,QWORD PTR [rax+0x10]
   140024815:	mov    rax,QWORD PTR [r8+0x50]
   140024819:	movsxd r9,DWORD PTR [rax]
   14002481c:	mov    rax,QWORD PTR [r8+0x38]
   140024820:	mov    rdx,QWORD PTR [rax]
   140024823:	add    r9,QWORD PTR [rax]
   140024826:	mov    rax,QWORD PTR [r8+0x18]
   14002482a:	mov    rax,QWORD PTR [rax]
   14002482d:	sub    r9d,edx
   140024830:	mov    QWORD PTR [rcx],rax
   140024833:	mov    rax,QWORD PTR [r10+0x38]
   140024837:	mov    QWORD PTR [rax],rdx
   14002483a:	mov    rax,QWORD PTR [r10+0x50]
   14002483e:	mov    DWORD PTR [rax],r9d
   140024841:	mov    rax,QWORD PTR [r10+0x78]
   140024845:	mov    rcx,QWORD PTR [rax]
   140024848:	mov    rax,QWORD PTR [rcx]
   14002484b:	mov    rcx,QWORD PTR [rax+0x10]
   14002484f:	mov    rax,QWORD PTR [rcx+0x58]
   140024853:	movsxd rdx,DWORD PTR [rax]
   140024856:	mov    rax,QWORD PTR [rcx+0x40]
   14002485a:	add    rdx,QWORD PTR [rax]
   14002485d:	mov    rax,QWORD PTR [rcx+0x20]
   140024861:	mov    rcx,QWORD PTR [rax]
   140024864:	mov    rax,QWORD PTR [r10+0x20]
   140024868:	mov    QWORD PTR [rax],rcx
   14002486b:	mov    rax,QWORD PTR [r10+0x40]
   14002486f:	sub    edx,ecx
   140024871:	mov    QWORD PTR [rax],rcx
   140024874:	mov    rax,QWORD PTR [r10+0x58]
   140024878:	mov    DWORD PTR [rax],edx
   14002487a:	mov    rax,QWORD PTR [r10+0x78]
   14002487e:	mov    rcx,QWORD PTR [rax]
   140024881:	mov    rax,QWORD PTR [rcx]
   140024884:	mov    rax,QWORD PTR [rax+0x10]
   140024888:	mov    rcx,QWORD PTR [rax+0x40]
   14002488c:	mov    rax,QWORD PTR [rax+0x20]
   140024890:	mov    edx,DWORD PTR [rcx]
   140024892:	sub    edx,DWORD PTR [rax]
   140024894:	mov    rax,QWORD PTR [r10+0x58]
   140024898:	sub    DWORD PTR [rax],edx
   14002489a:	mov    rcx,QWORD PTR [r10+0x40]
   14002489e:	movsxd rax,edx
   1400248a1:	add    QWORD PTR [rcx],rax
   1400248a4:	ret    
   1400248a5:	int3   
   1400248a6:	int3   
   1400248a7:	int3   
   1400248a8:	int3   
   1400248a9:	int3   
   1400248aa:	int3   
   1400248ab:	int3   
   1400248ac:	int3   
   1400248ad:	int3   
   1400248ae:	int3   
   1400248af:	int3   
   1400248b0:	lea    rax,[rcx+0x8]
   1400248b4:	ret    
   1400248b5:	int3   
   1400248b6:	int3   
   1400248b7:	int3   
   1400248b8:	int3   
   1400248b9:	int3   
   1400248ba:	int3   
   1400248bb:	int3   
   1400248bc:	int3   
   1400248bd:	int3   
   1400248be:	int3   
   1400248bf:	int3   
   1400248c0:	lea    rax,[rcx+0x1]
   1400248c4:	ret    
   1400248c5:	int3   
   1400248c6:	int3   
   1400248c7:	int3   
   1400248c8:	int3   
   1400248c9:	int3   
   1400248ca:	int3   
   1400248cb:	int3   
   1400248cc:	int3   
   1400248cd:	int3   
   1400248ce:	int3   
   1400248cf:	int3   
   1400248d0:	mov    rax,rdx
   1400248d3:	ret    
   1400248d4:	int3   
   1400248d5:	int3   
   1400248d6:	int3   
   1400248d7:	int3   
   1400248d8:	int3   
   1400248d9:	int3   
   1400248da:	int3   
   1400248db:	int3   
   1400248dc:	int3   
   1400248dd:	int3   
   1400248de:	int3   
   1400248df:	int3   
   1400248e0:	mov    QWORD PTR [rsp+0x8],rcx
   1400248e5:	sub    rsp,0x48
   1400248e9:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400248f2:	lea    rcx,[rsp+0x50]
   1400248f7:	call   QWORD PTR [rip+0x11aeb]        # 0x1400363e8
   1400248fd:	lea    rcx,[rsp+0x50]
   140024902:	call   QWORD PTR [rip+0x11ae8]        # 0x1400363f0
   140024908:	test   rax,rax
   14002490b:	jne    0x140024940
   14002490d:	lea    rax,[rip+0x1623c]        # 0x14003ab50
   140024914:	mov    QWORD PTR [rsp+0x58],rax
   140024919:	lea    rdx,[rsp+0x58]
   14002491e:	lea    rcx,[rsp+0x28]
   140024923:	call   QWORD PTR [rip+0x11b27]        # 0x140036450
   140024929:	lea    rax,[rip+0x15d28]        # 0x14003a658
   140024930:	mov    QWORD PTR [rsp+0x28],rax
   140024935:	lea    rcx,[rsp+0x28]
   14002493a:	call   0x14000e030
   14002493f:	nop
   140024940:	add    rsp,0x48
   140024944:	ret    
   140024945:	int3   
   140024946:	int3   
   140024947:	int3   
   140024948:	int3   
   140024949:	int3   
   14002494a:	int3   
   14002494b:	int3   
   14002494c:	int3   
   14002494d:	int3   
   14002494e:	int3   
   14002494f:	int3   
   140024950:	xor    eax,eax
   140024952:	ret    
   140024953:	int3   
   140024954:	int3   
   140024955:	int3   
   140024956:	int3   
   140024957:	int3   
   140024958:	int3   
   140024959:	int3   
   14002495a:	int3   
   14002495b:	int3   
   14002495c:	int3   
   14002495d:	int3   
   14002495e:	int3   
   14002495f:	int3   
   140024960:	xor    eax,eax
   140024962:	ret    
   140024963:	int3   
   140024964:	int3   
   140024965:	int3   
   140024966:	int3   
   140024967:	int3   
   140024968:	int3   
   140024969:	int3   
   14002496a:	int3   
   14002496b:	int3   
   14002496c:	int3   
   14002496d:	int3   
   14002496e:	int3   
   14002496f:	int3   
   140024970:	xor    eax,eax
   140024972:	ret    
   140024973:	int3   
   140024974:	int3   
   140024975:	int3   
   140024976:	int3   
   140024977:	int3   
   140024978:	int3   
   140024979:	int3   
   14002497a:	int3   
   14002497b:	int3   
   14002497c:	int3   
   14002497d:	int3   
   14002497e:	int3   
   14002497f:	int3   
   140024980:	xor    eax,eax
   140024982:	ret    
   140024983:	int3   
   140024984:	int3   
   140024985:	int3   
   140024986:	int3   
   140024987:	int3   
   140024988:	int3   
   140024989:	int3   
   14002498a:	int3   
   14002498b:	int3   
   14002498c:	int3   
   14002498d:	int3   
   14002498e:	int3   
   14002498f:	int3   
   140024990:	rex push rbx
   140024992:	sub    rsp,0x30
   140024996:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14002499f:	mov    rax,r8
   1400249a2:	mov    rbx,rdx
   1400249a5:	xor    edx,edx
   1400249a7:	mov    DWORD PTR [rsp+0x20],edx
   1400249ab:	mov    BYTE PTR [rbx],dl
   1400249ad:	lea    rcx,[rbx+0x8]
   1400249b1:	mov    QWORD PTR [rsp+0x48],rcx
   1400249b6:	mov    QWORD PTR [rsp+0x58],rcx
   1400249bb:	test   rcx,rcx
   1400249be:	je     0x1400249de
   1400249c0:	mov    QWORD PTR [rcx+0x18],0xf
   1400249c8:	mov    QWORD PTR [rcx+0x10],rdx
   1400249cc:	mov    BYTE PTR [rcx],dl
   1400249ce:	or     r9,0xffffffffffffffff
   1400249d2:	xor    r8d,r8d
   1400249d5:	mov    rdx,rax
   1400249d8:	call   0x14001ef20
   1400249dd:	nop
   1400249de:	mov    BYTE PTR [rbx],0x1
   1400249e1:	mov    rax,rbx
   1400249e4:	add    rsp,0x30
   1400249e8:	pop    rbx
   1400249e9:	ret    
   1400249ea:	int3   
   1400249eb:	int3   
   1400249ec:	int3   
   1400249ed:	int3   
   1400249ee:	int3   
   1400249ef:	int3   
   1400249f0:	mov    rax,QWORD PTR [rcx]
   1400249f3:	and    rax,0xfffffffffffffffe
   1400249f7:	ret    
   1400249f8:	int3   
   1400249f9:	int3   
   1400249fa:	int3   
   1400249fb:	int3   
   1400249fc:	int3   
   1400249fd:	int3   
   1400249fe:	int3   
   1400249ff:	int3   
   140024a00:	mov    rax,QWORD PTR [rcx]
   140024a03:	and    rax,0xfffffffffffffffe
   140024a07:	ret    
   140024a08:	int3   
   140024a09:	int3   
   140024a0a:	int3   
   140024a0b:	int3   
   140024a0c:	int3   
   140024a0d:	int3   
   140024a0e:	int3   
   140024a0f:	int3   
   140024a10:	mov    QWORD PTR [rsp+0x10],rdx
   140024a15:	sub    rsp,0x48
   140024a19:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140024a22:	call   QWORD PTR [rip+0x119c8]        # 0x1400363f0
   140024a28:	test   rax,rax
   140024a2b:	jne    0x140024a60
   140024a2d:	lea    rax,[rip+0x1611c]        # 0x14003ab50
   140024a34:	mov    QWORD PTR [rsp+0x58],rax
   140024a39:	lea    rdx,[rsp+0x58]
   140024a3e:	lea    rcx,[rsp+0x28]
   140024a43:	call   QWORD PTR [rip+0x11a07]        # 0x140036450
   140024a49:	lea    rax,[rip+0x15c08]        # 0x14003a658
   140024a50:	mov    QWORD PTR [rsp+0x28],rax
   140024a55:	lea    rcx,[rsp+0x28]
   140024a5a:	call   0x14000e030
   140024a5f:	nop
   140024a60:	add    rsp,0x48
   140024a64:	ret    
   140024a65:	int3   
   140024a66:	int3   
   140024a67:	int3   
   140024a68:	int3   
   140024a69:	int3   
   140024a6a:	int3   
   140024a6b:	int3   
   140024a6c:	int3   
   140024a6d:	int3   
   140024a6e:	int3   
   140024a6f:	int3   
   140024a70:	rex push rbx
   140024a72:	sub    rsp,0x30
   140024a76:	mov    rax,QWORD PTR [rcx]
   140024a79:	mov    rbx,rdx
   140024a7c:	mov    DWORD PTR [rsp+0x20],0x0
   140024a84:	call   QWORD PTR [rax+0x28]
   140024a87:	mov    rax,rbx
   140024a8a:	add    rsp,0x30
   140024a8e:	pop    rbx
   140024a8f:	ret    
   140024a90:	mov    al,0x1
   140024a92:	ret    
   140024a93:	int3   
   140024a94:	int3   
   140024a95:	int3   
   140024a96:	int3   
   140024a97:	int3   
   140024a98:	int3   
   140024a99:	int3   
   140024a9a:	int3   
   140024a9b:	int3   
   140024a9c:	int3   
   140024a9d:	int3   
   140024a9e:	int3   
   140024a9f:	int3   
   140024aa0:	movzx  eax,BYTE PTR [rcx]
   140024aa3:	and    al,0x1
   140024aa5:	ret    
   140024aa6:	int3   
   140024aa7:	int3   
   140024aa8:	int3   
   140024aa9:	int3   
   140024aaa:	int3   
   140024aab:	int3   
   140024aac:	int3   
   140024aad:	int3   
   140024aae:	int3   
   140024aaf:	int3   
   140024ab0:	mov    rax,QWORD PTR [rcx+0x8]
   140024ab4:	ret    
   140024ab5:	int3   
   140024ab6:	int3   
   140024ab7:	int3   
   140024ab8:	int3   
   140024ab9:	int3   
   140024aba:	int3   
   140024abb:	int3   
   140024abc:	int3   
   140024abd:	int3   
   140024abe:	int3   
   140024abf:	int3   
   140024ac0:	test   rcx,rcx
   140024ac3:	je     0x140024aca
   140024ac5:	mov    rax,QWORD PTR [rcx-0x9]
   140024ac9:	ret    
   140024aca:	xor    eax,eax
   140024acc:	mov    rax,QWORD PTR [rax+0x8]
   140024ad0:	ret    
   140024ad1:	int3   
   140024ad2:	int3   
   140024ad3:	int3   
   140024ad4:	int3   
   140024ad5:	int3   
   140024ad6:	int3   
   140024ad7:	int3   
   140024ad8:	int3   
   140024ad9:	int3   
   140024ada:	int3   
   140024adb:	int3   
   140024adc:	int3   
   140024add:	int3   
   140024ade:	int3   
   140024adf:	int3   
   140024ae0:	test   rcx,rcx
   140024ae3:	je     0x140024aea
   140024ae5:	mov    rax,QWORD PTR [rcx-0x9]
   140024ae9:	ret    
   140024aea:	xor    eax,eax
   140024aec:	mov    rax,QWORD PTR [rax+0x8]
   140024af0:	ret    
   140024af1:	int3   
   140024af2:	int3   
   140024af3:	int3   
   140024af4:	int3   
   140024af5:	int3   
   140024af6:	int3   
   140024af7:	int3   
   140024af8:	int3   
   140024af9:	int3   
   140024afa:	int3   
   140024afb:	int3   
   140024afc:	int3   
   140024afd:	int3   
   140024afe:	int3   
   140024aff:	int3   
   140024b00:	ret    0x0
   140024b03:	int3   
   140024b04:	int3   
   140024b05:	int3   
   140024b06:	int3   
   140024b07:	int3   
   140024b08:	int3   
   140024b09:	int3   
   140024b0a:	int3   
   140024b0b:	int3   
   140024b0c:	int3   
   140024b0d:	int3   
   140024b0e:	int3   
   140024b0f:	int3   
   140024b10:	mov    QWORD PTR [rsp+0x8],rbx
   140024b15:	push   rdi
   140024b16:	sub    rsp,0x20
   140024b1a:	mov    rbx,rcx
   140024b1d:	mov    rcx,rdx
   140024b20:	call   0x14000e510
   140024b25:	mov    rcx,rax
   140024b28:	mov    rdi,rax
   140024b2b:	call   QWORD PTR [rip+0x11757]        # 0x140036288
   140024b31:	test   al,al
   140024b33:	je     0x140024b48
   140024b35:	mov    QWORD PTR [rbx+0x78],0x0
   140024b3d:	mov    rbx,QWORD PTR [rsp+0x30]
   140024b42:	add    rsp,0x20
   140024b46:	pop    rdi
   140024b47:	ret    
   140024b48:	mov    rcx,rbx
   140024b4b:	mov    QWORD PTR [rbx+0x78],rdi
   140024b4f:	mov    rbx,QWORD PTR [rsp+0x30]
   140024b54:	add    rsp,0x20
   140024b58:	pop    rdi
   140024b59:	rex.W jmp QWORD PTR [rip+0x11648]        # 0x1400361a8
   140024b60:	sub    rsp,0x28
   140024b64:	test   BYTE PTR [rcx+0xa8],0x1
   140024b6b:	je     0x140024baa
   140024b6d:	mov    rcx,QWORD PTR [rcx+0x88]
   140024b74:	test   rcx,rcx
   140024b77:	je     0x140024baa
   140024b79:	mov    r8,rdx
   140024b7c:	lea    rdx,[rsp+0x30]
   140024b81:	call   QWORD PTR [rip+0x11661]        # 0x1400361e8
   140024b87:	mov    rcx,QWORD PTR [rsp+0x30]
   140024b8c:	test   rcx,rcx
   140024b8f:	je     0x140024baa
   140024b91:	mov    rax,QWORD PTR [rcx]
   140024b94:	call   QWORD PTR [rax+0x10]
   140024b97:	test   rax,rax
   140024b9a:	je     0x140024baa
   140024b9c:	mov    r8,QWORD PTR [rax]
   140024b9f:	mov    edx,0x1
   140024ba4:	mov    rcx,rax
   140024ba7:	call   QWORD PTR [r8]
   140024baa:	add    rsp,0x28
   140024bae:	ret    
   140024baf:	int3   
   140024bb0:	sub    rsp,0x28
   140024bb4:	test   BYTE PTR [rcx+0xa8],0x1
   140024bbb:	je     0x140024bfa
   140024bbd:	mov    rcx,QWORD PTR [rcx+0x88]
   140024bc4:	test   rcx,rcx
   140024bc7:	je     0x140024bfa
   140024bc9:	mov    r8,rdx
   140024bcc:	lea    rdx,[rsp+0x30]
   140024bd1:	call   QWORD PTR [rip+0x11611]        # 0x1400361e8
   140024bd7:	mov    rcx,QWORD PTR [rsp+0x30]
   140024bdc:	test   rcx,rcx
   140024bdf:	je     0x140024bfa
   140024be1:	mov    rax,QWORD PTR [rcx]
   140024be4:	call   QWORD PTR [rax+0x10]
   140024be7:	test   rax,rax
   140024bea:	je     0x140024bfa
   140024bec:	mov    r8,QWORD PTR [rax]
   140024bef:	mov    edx,0x1
   140024bf4:	mov    rcx,rax
   140024bf7:	call   QWORD PTR [r8]
   140024bfa:	add    rsp,0x28
   140024bfe:	ret    
   140024bff:	int3   
   140024c00:	sub    rsp,0x28
   140024c04:	test   BYTE PTR [rcx+0x98],0x1
   140024c0b:	je     0x140024c47
   140024c0d:	mov    rcx,QWORD PTR [rcx+0x78]
   140024c11:	test   rcx,rcx
   140024c14:	je     0x140024c47
   140024c16:	mov    r8,rdx
   140024c19:	lea    rdx,[rsp+0x30]
   140024c1e:	call   QWORD PTR [rip+0x115c4]        # 0x1400361e8
   140024c24:	mov    rcx,QWORD PTR [rsp+0x30]
   140024c29:	test   rcx,rcx
   140024c2c:	je     0x140024c47
   140024c2e:	mov    rax,QWORD PTR [rcx]
   140024c31:	call   QWORD PTR [rax+0x10]
   140024c34:	test   rax,rax
   140024c37:	je     0x140024c47
   140024c39:	mov    r8,QWORD PTR [rax]
   140024c3c:	mov    edx,0x1
   140024c41:	mov    rcx,rax
   140024c44:	call   QWORD PTR [r8]
   140024c47:	add    rsp,0x28
   140024c4b:	ret    
   140024c4c:	int3   
   140024c4d:	int3   
   140024c4e:	int3   
   140024c4f:	int3   
   140024c50:	mov    QWORD PTR [rsp+0x10],rbx
   140024c55:	push   rdi
   140024c56:	sub    rsp,0x20
   140024c5a:	test   BYTE PTR [rcx+0xa0],0x1
   140024c61:	mov    rdi,rdx
   140024c64:	mov    rbx,rcx
   140024c67:	je     0x140024ce5
   140024c69:	mov    r8,QWORD PTR [rcx+0x70]
   140024c6d:	mov    rax,QWORD PTR [r8]
   140024c70:	movsxd rcx,DWORD PTR [rax+0x4]
   140024c74:	add    rcx,r8
   140024c77:	mov    r8,rdx
   140024c7a:	lea    rdx,[rsp+0x30]
   140024c7f:	call   QWORD PTR [rip+0x1150b]        # 0x140036190
   140024c85:	mov    rcx,QWORD PTR [rsp+0x30]
   140024c8a:	test   rcx,rcx
   140024c8d:	je     0x140024ca8
   140024c8f:	mov    rax,QWORD PTR [rcx]
   140024c92:	call   QWORD PTR [rax+0x10]
   140024c95:	test   rax,rax
   140024c98:	je     0x140024ca8
   140024c9a:	mov    r8,QWORD PTR [rax]
   140024c9d:	mov    edx,0x1
   140024ca2:	mov    rcx,rax
   140024ca5:	call   QWORD PTR [r8]
   140024ca8:	mov    rcx,QWORD PTR [rbx+0x80]
   140024caf:	test   rcx,rcx
   140024cb2:	je     0x140024ce5
   140024cb4:	lea    rdx,[rsp+0x30]
   140024cb9:	mov    r8,rdi
   140024cbc:	call   QWORD PTR [rip+0x11526]        # 0x1400361e8
   140024cc2:	mov    rcx,QWORD PTR [rsp+0x30]
   140024cc7:	test   rcx,rcx
   140024cca:	je     0x140024ce5
   140024ccc:	mov    rax,QWORD PTR [rcx]
   140024ccf:	call   QWORD PTR [rax+0x10]
   140024cd2:	test   rax,rax
   140024cd5:	je     0x140024ce5
   140024cd7:	mov    r8,QWORD PTR [rax]
   140024cda:	mov    edx,0x1
   140024cdf:	mov    rcx,rax
   140024ce2:	call   QWORD PTR [r8]
   140024ce5:	mov    rbx,QWORD PTR [rsp+0x38]
   140024cea:	add    rsp,0x20
   140024cee:	pop    rdi
   140024cef:	ret    
   140024cf0:	test   rcx,rcx
   140024cf3:	je     0x140024cfa
   140024cf5:	lea    rax,[rcx+0x48]
   140024cf9:	ret    
   140024cfa:	xor    eax,eax
   140024cfc:	ret    
   140024cfd:	int3   
   140024cfe:	int3   
   140024cff:	int3   
   140024d00:	test   rcx,rcx
   140024d03:	je     0x140024d0a
   140024d05:	lea    rax,[rcx+0x60]
   140024d09:	ret    
   140024d0a:	xor    eax,eax
   140024d0c:	ret    
   140024d0d:	int3   
   140024d0e:	int3   
   140024d0f:	int3   
   140024d10:	lea    rax,[rcx+0x90]
   140024d17:	ret    
   140024d18:	int3   
   140024d19:	int3   
   140024d1a:	int3   
   140024d1b:	int3   
   140024d1c:	int3   
   140024d1d:	int3   
   140024d1e:	int3   
   140024d1f:	int3   
   140024d20:	lea    rax,[rcx+0x90]
   140024d27:	ret    
   140024d28:	int3   
   140024d29:	int3   
   140024d2a:	int3   
   140024d2b:	int3   
   140024d2c:	int3   
   140024d2d:	int3   
   140024d2e:	int3   
   140024d2f:	int3   
   140024d30:	lea    rax,[rcx+0x80]
   140024d37:	ret    
   140024d38:	int3   
   140024d39:	int3   
   140024d3a:	int3   
   140024d3b:	int3   
   140024d3c:	int3   
   140024d3d:	int3   
   140024d3e:	int3   
   140024d3f:	int3   
   140024d40:	lea    rax,[rcx+0x88]
   140024d47:	ret    
   140024d48:	int3   
   140024d49:	int3   
   140024d4a:	int3   
   140024d4b:	int3   
   140024d4c:	int3   
   140024d4d:	int3   
   140024d4e:	int3   
   140024d4f:	int3   
   140024d50:	mov    QWORD PTR [rsp+0x8],rbx
   140024d55:	push   rdi
   140024d56:	sub    rsp,0x20
   140024d5a:	mov    rbx,QWORD PTR [rcx]
   140024d5d:	mov    rdi,rcx
   140024d60:	cmp    DWORD PTR [rbx+0x14],0x5
   140024d64:	jl     0x140024d75
   140024d66:	mov    rcx,rbx
   140024d69:	call   0x14002c670
   140024d6e:	mov    DWORD PTR [rbx+0x14],0x0
   140024d75:	movsxd rdx,DWORD PTR [rbx+0x14]
   140024d79:	mov    r8d,DWORD PTR [rbx+rdx*4]
   140024d7d:	lea    eax,[rdx+0x1]
   140024d80:	mov    DWORD PTR [rbx+0x14],eax
   140024d83:	mov    rbx,QWORD PTR [rsp+0x30]
   140024d88:	mov    DWORD PTR [rdi+0x8],r8d
   140024d8c:	add    rsp,0x20
   140024d90:	pop    rdi
   140024d91:	ret    
   140024d92:	int3   
   140024d93:	int3   
   140024d94:	int3   
   140024d95:	int3   
   140024d96:	int3   
   140024d97:	int3   
   140024d98:	int3   
   140024d99:	int3   
   140024d9a:	int3   
   140024d9b:	int3   
   140024d9c:	int3   
   140024d9d:	int3   
   140024d9e:	int3   
   140024d9f:	int3   
   140024da0:	mov    BYTE PTR [rcx+0x8],0x0
   140024da4:	ret    
   140024da5:	int3   
   140024da6:	int3   
   140024da7:	int3   
   140024da8:	int3   
   140024da9:	int3   
   140024daa:	int3   
   140024dab:	int3   
   140024dac:	int3   
   140024dad:	int3   
   140024dae:	int3   
   140024daf:	int3   
   140024db0:	inc    QWORD PTR [rcx]
   140024db3:	ret    
   140024db4:	int3   
   140024db5:	int3   
   140024db6:	int3   
   140024db7:	int3   
   140024db8:	int3   
   140024db9:	int3   
   140024dba:	int3   
   140024dbb:	int3   
   140024dbc:	int3   
   140024dbd:	int3   
   140024dbe:	int3   
   140024dbf:	int3   
   140024dc0:	mov    rax,QWORD PTR [rcx]
   140024dc3:	test   rax,rax
   140024dc6:	je     0x140024dcc
   140024dc8:	add    rax,0x60
   140024dcc:	mov    rax,QWORD PTR [rax+0x8]
   140024dd0:	test   rax,rax
   140024dd3:	je     0x140024ddd
   140024dd5:	add    rax,0xffffffffffffffa0
   140024dd9:	mov    QWORD PTR [rcx],rax
   140024ddc:	ret    
   140024ddd:	mov    QWORD PTR [rcx],0x0
   140024de4:	ret    
   140024de5:	int3   
   140024de6:	int3   
   140024de7:	int3   
   140024de8:	int3   
   140024de9:	int3   
   140024dea:	int3   
   140024deb:	int3   
   140024dec:	int3   
   140024ded:	int3   
   140024dee:	int3   
   140024def:	int3   
   140024df0:	mov    rax,QWORD PTR [rcx]
   140024df3:	test   rax,rax
   140024df6:	je     0x140024dfc
   140024df8:	add    rax,0x60
   140024dfc:	mov    rax,QWORD PTR [rax+0x8]
   140024e00:	test   rax,rax
   140024e03:	je     0x140024e0d
   140024e05:	add    rax,0xffffffffffffffa0
   140024e09:	mov    QWORD PTR [rcx],rax
   140024e0c:	ret    
   140024e0d:	mov    QWORD PTR [rcx],0x0
   140024e14:	ret    
   140024e15:	int3   
   140024e16:	int3   
   140024e17:	int3   
   140024e18:	int3   
   140024e19:	int3   
   140024e1a:	int3   
   140024e1b:	int3   
   140024e1c:	int3   
   140024e1d:	int3   
   140024e1e:	int3   
   140024e1f:	int3   
   140024e20:	mov    rax,QWORD PTR [rcx]
   140024e23:	mov    rdx,QWORD PTR [rax+0x8]
   140024e27:	mov    QWORD PTR [rcx],rdx
   140024e2a:	ret    
   140024e2b:	int3   
   140024e2c:	int3   
   140024e2d:	int3   
   140024e2e:	int3   
   140024e2f:	int3   
   140024e30:	rex push rbx
   140024e32:	sub    rsp,0x20
   140024e36:	mov    r8,QWORD PTR [rcx+0x58]
   140024e3a:	lea    r9,[rcx+0x68]
   140024e3e:	lea    rdx,[rcx+0x50]
   140024e42:	mov    rbx,rcx
   140024e45:	call   0x140003720
   140024e4a:	mov    BYTE PTR [rbx+0x60],al
   140024e4d:	add    rsp,0x20
   140024e51:	pop    rbx
   140024e52:	ret    
   140024e53:	int3   
   140024e54:	int3   
   140024e55:	int3   
   140024e56:	int3   
   140024e57:	int3   
   140024e58:	int3   
   140024e59:	int3   
   140024e5a:	int3   
   140024e5b:	int3   
   140024e5c:	int3   
   140024e5d:	int3   
   140024e5e:	int3   
   140024e5f:	int3   
   140024e60:	mov    BYTE PTR [rcx+0x8],0x0
   140024e64:	ret    
   140024e65:	int3   
   140024e66:	int3   
   140024e67:	int3   
   140024e68:	int3   
   140024e69:	int3   
   140024e6a:	int3   
   140024e6b:	int3   
   140024e6c:	int3   
   140024e6d:	int3   
   140024e6e:	int3   
   140024e6f:	int3   
   140024e70:	mov    BYTE PTR [rcx+0x10],0x0
   140024e74:	ret    
   140024e75:	int3   
   140024e76:	int3   
   140024e77:	int3   
   140024e78:	int3   
   140024e79:	int3   
   140024e7a:	int3   
   140024e7b:	int3   
   140024e7c:	int3   
   140024e7d:	int3   
   140024e7e:	int3   
   140024e7f:	int3   
   140024e80:	mov    rax,QWORD PTR [rcx+0x18]
   140024e84:	mov    rdx,QWORD PTR [rcx+0x90]
   140024e8b:	mov    QWORD PTR [rax],rdx
   140024e8e:	mov    rax,QWORD PTR [rcx+0x38]
   140024e92:	mov    QWORD PTR [rax],rdx
   140024e95:	mov    rax,QWORD PTR [rcx+0x50]
   140024e99:	sub    edx,edx
   140024e9b:	mov    DWORD PTR [rax],edx
   140024e9d:	ret    
   140024e9e:	int3   
   140024e9f:	int3   
   140024ea0:	mov    rax,QWORD PTR [rcx+0x18]
   140024ea4:	mov    rdx,QWORD PTR [rcx+0x90]
   140024eab:	mov    QWORD PTR [rax],rdx
   140024eae:	mov    rax,QWORD PTR [rcx+0x38]
   140024eb2:	mov    QWORD PTR [rax],rdx
   140024eb5:	mov    rax,QWORD PTR [rcx+0x50]
   140024eb9:	sub    edx,edx
   140024ebb:	mov    DWORD PTR [rax],edx
   140024ebd:	ret    
   140024ebe:	int3   
   140024ebf:	int3   
   140024ec0:	sub    rsp,0x18
   140024ec4:	mov    QWORD PTR [rsp],0xfffffffffffffffe
   140024ecc:	mov    rdx,QWORD PTR [rcx+0x80]
   140024ed3:	mov    rax,QWORD PTR [rcx+0x18]
   140024ed7:	mov    QWORD PTR [rax],rdx
   140024eda:	mov    rax,QWORD PTR [rcx+0x38]
   140024ede:	mov    QWORD PTR [rax],rdx
   140024ee1:	sub    edx,edx
   140024ee3:	mov    rax,QWORD PTR [rcx+0x50]
   140024ee7:	mov    DWORD PTR [rax],edx
   140024ee9:	add    rsp,0x18
   140024eed:	ret    
   140024eee:	int3   
   140024eef:	int3   
   140024ef0:	sub    rsp,0x18
   140024ef4:	mov    QWORD PTR [rsp],0xfffffffffffffffe
   140024efc:	mov    rdx,QWORD PTR [rcx+0x88]
   140024f03:	mov    rax,QWORD PTR [rcx+0x18]
   140024f07:	mov    QWORD PTR [rax],rdx
   140024f0a:	mov    rax,QWORD PTR [rcx+0x38]
   140024f0e:	mov    QWORD PTR [rax],rdx
   140024f11:	sub    edx,edx
   140024f13:	mov    rax,QWORD PTR [rcx+0x50]
   140024f17:	mov    DWORD PTR [rax],edx
   140024f19:	add    rsp,0x18
   140024f1d:	ret    
   140024f1e:	int3   
   140024f1f:	int3   
   140024f20:	mov    eax,DWORD PTR [rcx+0xa8]
   140024f26:	shr    eax,1
   140024f28:	test   al,0x1
   140024f2a:	mov    rax,QWORD PTR [rcx+0x20]
   140024f2e:	je     0x140024f56
   140024f30:	mov    rdx,QWORD PTR [rcx+0x90]
   140024f37:	mov    r8,QWORD PTR [rcx+0x98]
   140024f3e:	mov    QWORD PTR [rax],rdx
   140024f41:	mov    rax,QWORD PTR [rcx+0x40]
   140024f45:	add    r8,rdx
   140024f48:	mov    QWORD PTR [rax],rdx
   140024f4b:	mov    rax,QWORD PTR [rcx+0x58]
   140024f4f:	sub    r8d,edx
   140024f52:	mov    DWORD PTR [rax],r8d
   140024f55:	ret    
   140024f56:	xor    edx,edx
   140024f58:	mov    QWORD PTR [rax],rdx
   140024f5b:	mov    rax,QWORD PTR [rcx+0x40]
   140024f5f:	mov    QWORD PTR [rax],rdx
   140024f62:	mov    rax,QWORD PTR [rcx+0x58]
   140024f66:	mov    DWORD PTR [rax],edx
   140024f68:	ret    
   140024f69:	int3   
   140024f6a:	int3   
   140024f6b:	int3   
   140024f6c:	int3   
   140024f6d:	int3   
   140024f6e:	int3   
   140024f6f:	int3   
   140024f70:	mov    eax,DWORD PTR [rcx+0xa8]
   140024f76:	shr    eax,1
   140024f78:	test   al,0x1
   140024f7a:	mov    rax,QWORD PTR [rcx+0x20]
   140024f7e:	je     0x140024fa6
   140024f80:	mov    rdx,QWORD PTR [rcx+0x90]
   140024f87:	mov    r8,QWORD PTR [rcx+0x98]
   140024f8e:	mov    QWORD PTR [rax],rdx
   140024f91:	mov    rax,QWORD PTR [rcx+0x40]
   140024f95:	add    r8,rdx
   140024f98:	mov    QWORD PTR [rax],rdx
   140024f9b:	mov    rax,QWORD PTR [rcx+0x58]
   140024f9f:	sub    r8d,edx
   140024fa2:	mov    DWORD PTR [rax],r8d
   140024fa5:	ret    
   140024fa6:	xor    edx,edx
   140024fa8:	mov    QWORD PTR [rax],rdx
   140024fab:	mov    rax,QWORD PTR [rcx+0x40]
   140024faf:	mov    QWORD PTR [rax],rdx
   140024fb2:	mov    rax,QWORD PTR [rcx+0x58]
   140024fb6:	mov    DWORD PTR [rax],edx
   140024fb8:	ret    
   140024fb9:	int3   
   140024fba:	int3   
   140024fbb:	int3   
   140024fbc:	int3   
   140024fbd:	int3   
   140024fbe:	int3   
   140024fbf:	int3   
   140024fc0:	mov    eax,DWORD PTR [rcx+0x98]
   140024fc6:	shr    eax,1
   140024fc8:	test   al,0x1
   140024fca:	mov    rax,QWORD PTR [rcx+0x20]
   140024fce:	je     0x140024ff6
   140024fd0:	mov    rdx,QWORD PTR [rcx+0x80]
   140024fd7:	mov    r8,QWORD PTR [rcx+0x88]
   140024fde:	mov    QWORD PTR [rax],rdx
   140024fe1:	mov    rax,QWORD PTR [rcx+0x40]
   140024fe5:	add    r8,rdx
   140024fe8:	mov    QWORD PTR [rax],rdx
   140024feb:	mov    rax,QWORD PTR [rcx+0x58]
   140024fef:	sub    r8d,edx
   140024ff2:	mov    DWORD PTR [rax],r8d
   140024ff5:	ret    
   140024ff6:	xor    edx,edx
   140024ff8:	mov    QWORD PTR [rax],rdx
   140024ffb:	mov    rax,QWORD PTR [rcx+0x40]
   140024fff:	mov    QWORD PTR [rax],rdx
   140025002:	mov    rax,QWORD PTR [rcx+0x58]
   140025006:	mov    DWORD PTR [rax],edx
   140025008:	ret    
   140025009:	int3   
   14002500a:	int3   
   14002500b:	int3   
   14002500c:	int3   
   14002500d:	int3   
   14002500e:	int3   
   14002500f:	int3   
   140025010:	mov    eax,DWORD PTR [rcx+0xa0]
   140025016:	shr    eax,1
   140025018:	test   al,0x1
   14002501a:	mov    rax,QWORD PTR [rcx+0x20]
   14002501e:	je     0x140025046
   140025020:	mov    rdx,QWORD PTR [rcx+0x88]
   140025027:	mov    r8,QWORD PTR [rcx+0x90]
   14002502e:	mov    QWORD PTR [rax],rdx
   140025031:	mov    rax,QWORD PTR [rcx+0x40]
   140025035:	add    r8,rdx
   140025038:	mov    QWORD PTR [rax],rdx
   14002503b:	mov    rax,QWORD PTR [rcx+0x58]
   14002503f:	sub    r8d,edx
   140025042:	mov    DWORD PTR [rax],r8d
   140025045:	ret    
   140025046:	xor    edx,edx
   140025048:	mov    QWORD PTR [rax],rdx
   14002504b:	mov    rax,QWORD PTR [rcx+0x40]
   14002504f:	mov    QWORD PTR [rax],rdx
   140025052:	mov    rax,QWORD PTR [rcx+0x58]
   140025056:	mov    DWORD PTR [rax],edx
   140025058:	ret    
   140025059:	int3   
   14002505a:	int3   
   14002505b:	int3   
   14002505c:	int3   
   14002505d:	int3   
   14002505e:	int3   
   14002505f:	int3   
   140025060:	rex push rbx
   140025062:	sub    rsp,0x20
   140025066:	cmp    BYTE PTR [rcx+0x60],0x0
   14002506a:	mov    rbx,rcx
   14002506d:	jne    0x140025096
   14002506f:	mov    rax,QWORD PTR [rcx+0x58]
   140025073:	lea    rdx,[rcx+0x50]
   140025077:	cmp    QWORD PTR [rdx],rax
   14002507a:	je     0x140025091
   14002507c:	lea    r9,[rcx+0x68]
   140025080:	mov    r8,rax
   140025083:	call   0x140003720
   140025088:	mov    BYTE PTR [rbx+0x60],al
   14002508b:	add    rsp,0x20
   14002508f:	pop    rbx
   140025090:	ret    
   140025091:	xor    eax,eax
   140025093:	mov    BYTE PTR [rbx+0x60],al
   140025096:	add    rsp,0x20
   14002509a:	pop    rbx
   14002509b:	ret    
   14002509c:	int3   
   14002509d:	int3   
   14002509e:	int3   
   14002509f:	int3   
   1400250a0:	mov    QWORD PTR [rsp+0x18],rbx
   1400250a5:	push   rbp
   1400250a6:	push   rsi
   1400250a7:	push   r14
   1400250a9:	sub    rsp,0x20
   1400250ad:	mov    rbx,rcx
   1400250b0:	mov    rcx,QWORD PTR [rcx+0x10]
   1400250b4:	mov    r14,r9
   1400250b7:	mov    rsi,r8
   1400250ba:	mov    rbp,rdx
   1400250bd:	cmp    rcx,rdx
   1400250c0:	jb     0x140025209
   1400250c6:	mov    rax,QWORD PTR [r8+0x10]
   1400250ca:	cmp    rax,r9
   1400250cd:	jb     0x140025209
   1400250d3:	sub    rax,r9
   1400250d6:	mov    QWORD PTR [rsp+0x40],rdi
   1400250db:	mov    rdi,QWORD PTR [rsp+0x60]
   1400250e0:	cmp    rax,rdi
   1400250e3:	cmovb  rdi,rax
   1400250e7:	or     rax,0xffffffffffffffff
   1400250eb:	sub    rax,rcx
   1400250ee:	cmp    rax,rdi
   1400250f1:	ja     0x140025101
   1400250f3:	lea    rcx,[rip+0x1781e]        # 0x14003c918
   1400250fa:	call   QWORD PTR [rip+0x11120]        # 0x140036220
   140025100:	int3   
   140025101:	test   rdi,rdi
   140025104:	je     0x1400251f3
   14002510a:	mov    QWORD PTR [rsp+0x48],r15
   14002510f:	lea    r15,[rcx+rdi*1]
   140025113:	xor    r8d,r8d
   140025116:	mov    rdx,r15
   140025119:	mov    rcx,rbx
   14002511c:	call   0x14001cc40
   140025121:	test   al,al
   140025123:	je     0x1400251ee
   140025129:	mov    rax,QWORD PTR [rbx+0x18]
   14002512d:	cmp    rax,0x10
   140025131:	jb     0x140025138
   140025133:	mov    rcx,QWORD PTR [rbx]
   140025136:	jmp    0x14002513b
   140025138:	mov    rcx,rbx
   14002513b:	cmp    rax,0x10
   14002513f:	jb     0x140025146
   140025141:	mov    rax,QWORD PTR [rbx]
   140025144:	jmp    0x140025149
   140025146:	mov    rax,rbx
   140025149:	mov    r8,QWORD PTR [rbx+0x10]
   14002514d:	sub    r8,rbp
   140025150:	je     0x140025163
   140025152:	lea    rdx,[rcx+rbp*1]
   140025156:	lea    rcx,[rax+rbp*1]
   14002515a:	add    rcx,rdi
   14002515d:	call   QWORD PTR [rip+0x112fd]        # 0x140036460
   140025163:	cmp    rbx,rsi
   140025166:	jne    0x1400251a8
   140025168:	cmp    rbp,r14
   14002516b:	jae    0x140025170
   14002516d:	add    r14,rdi
   140025170:	mov    rax,QWORD PTR [rbx+0x18]
   140025174:	cmp    rax,0x10
   140025178:	jb     0x14002517f
   14002517a:	mov    rcx,QWORD PTR [rbx]
   14002517d:	jmp    0x140025182
   14002517f:	mov    rcx,rbx
   140025182:	cmp    rax,0x10
   140025186:	jb     0x14002518d
   140025188:	mov    rax,QWORD PTR [rbx]
   14002518b:	jmp    0x140025190
   14002518d:	mov    rax,rbx
   140025190:	test   rdi,rdi
   140025193:	je     0x1400251d6
   140025195:	lea    rdx,[rcx+r14*1]
   140025199:	lea    rcx,[rax+rbp*1]
   14002519d:	mov    r8,rdi
   1400251a0:	call   QWORD PTR [rip+0x112ba]        # 0x140036460
   1400251a6:	jmp    0x1400251d6
   1400251a8:	cmp    QWORD PTR [rsi+0x18],0x10
   1400251ad:	jb     0x1400251b2
   1400251af:	mov    rsi,QWORD PTR [rsi]
   1400251b2:	cmp    QWORD PTR [rbx+0x18],0x10
   1400251b7:	jb     0x1400251be
   1400251b9:	mov    rax,QWORD PTR [rbx]
   1400251bc:	jmp    0x1400251c1
   1400251be:	mov    rax,rbx
   1400251c1:	test   rdi,rdi
   1400251c4:	je     0x1400251d6
   1400251c6:	lea    rdx,[rsi+r14*1]
   1400251ca:	lea    rcx,[rax+rbp*1]
   1400251ce:	mov    r8,rdi
   1400251d1:	call   0x14003048a
   1400251d6:	cmp    QWORD PTR [rbx+0x18],0x10
   1400251db:	mov    QWORD PTR [rbx+0x10],r15
   1400251df:	jb     0x1400251e6
   1400251e1:	mov    rax,QWORD PTR [rbx]
   1400251e4:	jmp    0x1400251e9
   1400251e6:	mov    rax,rbx
   1400251e9:	mov    BYTE PTR [rax+r15*1],0x0
   1400251ee:	mov    r15,QWORD PTR [rsp+0x48]
   1400251f3:	mov    rdi,QWORD PTR [rsp+0x40]
   1400251f8:	mov    rax,rbx
   1400251fb:	mov    rbx,QWORD PTR [rsp+0x50]
   140025200:	add    rsp,0x20
   140025204:	pop    r14
   140025206:	pop    rsi
   140025207:	pop    rbp
   140025208:	ret    
   140025209:	lea    rcx,[rip+0x17718]        # 0x14003c928
   140025210:	call   QWORD PTR [rip+0x11012]        # 0x140036228
   140025216:	int3   
   140025217:	int3   
   140025218:	int3   
   140025219:	int3   
   14002521a:	int3   
   14002521b:	int3   
   14002521c:	int3   
   14002521d:	int3   
   14002521e:	int3   
   14002521f:	int3   
   140025220:	sub    rsp,0x38
   140025224:	xor    r9d,r9d
   140025227:	mov    QWORD PTR [rsp+0x20],0xffffffffffffffff
   140025230:	call   0x1400250a0
   140025235:	add    rsp,0x38
   140025239:	ret    
   14002523a:	int3   
   14002523b:	int3   
   14002523c:	int3   
   14002523d:	int3   
   14002523e:	int3   
   14002523f:	int3   
   140025240:	jmp    0x140002f70
   140025245:	int3   
   140025246:	int3   
   140025247:	int3   
   140025248:	int3   
   140025249:	int3   
   14002524a:	int3   
   14002524b:	int3   
   14002524c:	int3   
   14002524d:	int3   
   14002524e:	int3   
   14002524f:	int3   
   140025250:	jmp    0x140002f70
   140025255:	int3   
   140025256:	int3   
   140025257:	int3   
   140025258:	int3   
   140025259:	int3   
   14002525a:	int3   
   14002525b:	int3   
   14002525c:	int3   
   14002525d:	int3   
   14002525e:	int3   
   14002525f:	int3   
   140025260:	jmp    0x140002f70
   140025265:	int3   
   140025266:	int3   
   140025267:	int3   
   140025268:	int3   
   140025269:	int3   
   14002526a:	int3   
   14002526b:	int3   
   14002526c:	int3   
   14002526d:	int3   
   14002526e:	int3   
   14002526f:	int3   
   140025270:	jmp    0x140002f70
   140025275:	int3   
   140025276:	int3   
   140025277:	int3   
   140025278:	int3   
   140025279:	int3   
   14002527a:	int3   
   14002527b:	int3   
   14002527c:	int3   
   14002527d:	int3   
   14002527e:	int3   
   14002527f:	int3   
   140025280:	mov    edx,DWORD PTR [rdx]
   140025282:	rex.W jmp QWORD PTR [rip+0x10ebf]        # 0x140036148
   140025289:	int3   
   14002528a:	int3   
   14002528b:	int3   
   14002528c:	int3   
   14002528d:	int3   
   14002528e:	int3   
   14002528f:	int3   
   140025290:	mov    rax,QWORD PTR [rcx]
   140025293:	movsxd r8,DWORD PTR [rax+0x4]
   140025297:	or     DWORD PTR [r8+rcx*1+0x18],0x4000
   1400252a0:	rex.W jmp QWORD PTR [rip+0x10eb1]        # 0x140036158
   1400252a7:	int3   
   1400252a8:	int3   
   1400252a9:	int3   
   1400252aa:	int3   
   1400252ab:	int3   
   1400252ac:	int3   
   1400252ad:	int3   
   1400252ae:	int3   
   1400252af:	int3   
   1400252b0:	mov    QWORD PTR [rsp+0x10],rbx
   1400252b5:	mov    QWORD PTR [rsp+0x20],rbp
   1400252ba:	mov    QWORD PTR [rsp+0x18],r8
   1400252bf:	push   rsi
   1400252c0:	push   rdi
   1400252c1:	push   r14
   1400252c3:	sub    rsp,0x20
   1400252c7:	xor    ebx,ebx
   1400252c9:	mov    rax,r9
   1400252cc:	mov    r14,rdx
   1400252cf:	mov    rdi,rcx
   1400252d2:	lea    rsi,[rcx-0x11]
   1400252d6:	test   rcx,rcx
   1400252d9:	jne    0x1400252dd
   1400252db:	mov    esi,ebx
   1400252dd:	xor    ecx,ecx
   1400252df:	lea    rbp,[rsi+0x11]
   1400252e3:	lea    r8,[rsp+0x40]
   1400252e8:	movzx  r9d,cl
   1400252ec:	mov    rdx,rax
   1400252ef:	mov    rcx,rbp
   1400252f2:	mov    QWORD PTR [rsp+0x40],rbx
   1400252f7:	call   0x14000a0d0
   1400252fc:	mov    r8,rax
   1400252ff:	mov    rax,QWORD PTR [rsp+0x40]
   140025304:	cmp    r8,rax
   140025307:	jne    0x1400253ab
   14002530d:	lea    rcx,[rbp-0x11]
   140025311:	test   rbp,rbp
   140025314:	jne    0x140025319
   140025316:	mov    rcx,rbx
   140025319:	mov    rdx,QWORD PTR [rcx+0x8]
   14002531d:	test   rdx,rdx
   140025320:	je     0x140025328
   140025322:	add    rdx,0x60
   140025326:	jmp    0x14002532b
   140025328:	mov    rdx,rbx
   14002532b:	lea    rcx,[rax+0x60]
   14002532f:	test   rax,rax
   140025332:	jne    0x140025337
   140025334:	mov    rcx,rbx
   140025337:	mov    rax,QWORD PTR [rdx]
   14002533a:	mov    QWORD PTR [rcx+0x8],rdx
   14002533e:	mov    r9b,0x1
   140025341:	mov    QWORD PTR [rcx],rax
   140025344:	mov    QWORD PTR [rdx],rcx
   140025347:	mov    rax,QWORD PTR [rcx]
   14002534a:	mov    QWORD PTR [rax+0x8],rcx
   14002534e:	inc    QWORD PTR [rsi+0x18]
   140025352:	test   rdi,rdi
   140025355:	je     0x14002535d
   140025357:	add    rdi,0xffffffffffffffef
   14002535b:	jmp    0x140025360
   14002535d:	mov    rdi,rbx
   140025360:	mov    rax,QWORD PTR [rsp+0x50]
   140025365:	cmp    rax,QWORD PTR [rdi+0x8]
   140025369:	je     0x1400253ae
   14002536b:	lea    rdx,[r8+0x60]
   14002536f:	test   r8,r8
   140025372:	jne    0x140025377
   140025374:	mov    rdx,rbx
   140025377:	test   rax,rax
   14002537a:	je     0x140025380
   14002537c:	lea    rbx,[rax+0x60]
   140025380:	mov    rcx,QWORD PTR [rdx]
   140025383:	mov    rax,QWORD PTR [rdx+0x8]
   140025387:	mov    QWORD PTR [rcx+0x8],rax
   14002538b:	mov    rax,QWORD PTR [rdx]
   14002538e:	mov    rcx,QWORD PTR [rdx+0x8]
   140025392:	mov    QWORD PTR [rcx],rax
   140025395:	mov    rax,QWORD PTR [rbx]
   140025398:	mov    QWORD PTR [rdx+0x8],rbx
   14002539c:	mov    QWORD PTR [rdx],rax
   14002539f:	mov    QWORD PTR [rbx],rdx
   1400253a2:	mov    rax,QWORD PTR [rdx]
   1400253a5:	mov    QWORD PTR [rax+0x8],rdx
   1400253a9:	jmp    0x1400253ae
   1400253ab:	xor    r9b,r9b
   1400253ae:	mov    rbx,QWORD PTR [rsp+0x48]
   1400253b3:	mov    rbp,QWORD PTR [rsp+0x58]
   1400253b8:	mov    QWORD PTR [r14],r8
   1400253bb:	mov    BYTE PTR [r14+0x8],r9b
   1400253bf:	mov    rax,r14
   1400253c2:	add    rsp,0x20
   1400253c6:	pop    r14
   1400253c8:	pop    rdi
   1400253c9:	pop    rsi
   1400253ca:	ret    
   1400253cb:	int3   
   1400253cc:	int3   
   1400253cd:	int3   
   1400253ce:	int3   
   1400253cf:	int3   
   1400253d0:	mov    QWORD PTR [rsp+0x18],r8
   1400253d5:	mov    QWORD PTR [rsp+0x8],rcx
   1400253da:	push   rdi
   1400253db:	sub    rsp,0x30
   1400253df:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400253e8:	mov    QWORD PTR [rsp+0x48],rbx
   1400253ed:	mov    QWORD PTR [rsp+0x58],rsi
   1400253f2:	mov    rdi,r8
   1400253f5:	mov    rsi,rdx
   1400253f8:	mov    ecx,0x70
   1400253fd:	call   0x14003027c
   140025402:	mov    rbx,rax
   140025405:	test   rax,rax
   140025408:	jne    0x140025411
   14002540a:	call   QWORD PTR [rip+0x10e08]        # 0x140036218
   140025410:	int3   
   140025411:	mov    QWORD PTR [rdi],rax
   140025414:	mov    QWORD PTR [rsp+0x40],rax
   140025419:	mov    QWORD PTR [rsp+0x28],rax
   14002541e:	mov    QWORD PTR [rax+0x18],0xf
   140025426:	mov    QWORD PTR [rax+0x10],0x0
   14002542e:	mov    BYTE PTR [rax],0x0
   140025431:	or     r9,0xffffffffffffffff
   140025435:	xor    r8d,r8d
   140025438:	mov    rdx,rsi
   14002543b:	mov    rcx,rax
   14002543e:	call   0x14001ef20
   140025443:	nop
   140025444:	lea    rdx,[rsi+0x20]
   140025448:	lea    rcx,[rbx+0x20]
   14002544c:	call   0x140010e10
   140025451:	nop
   140025452:	mov    rax,QWORD PTR [rdi]
   140025455:	mov    rbx,QWORD PTR [rsp+0x48]
   14002545a:	mov    rsi,QWORD PTR [rsp+0x58]
   14002545f:	add    rsp,0x30
   140025463:	pop    rdi
   140025464:	ret    
   140025465:	int3   
   140025466:	int3   
   140025467:	int3   
   140025468:	int3   
   140025469:	int3   
   14002546a:	int3   
   14002546b:	int3   
   14002546c:	int3   
   14002546d:	int3   
   14002546e:	int3   
   14002546f:	int3   
   140025470:	rex push rbx
   140025472:	sub    rsp,0x20
   140025476:	xor    eax,eax
   140025478:	mov    rbx,rdx
   14002547b:	movzx  r9d,al
   14002547f:	call   0x14000a020
   140025484:	mov    rax,rbx
   140025487:	add    rsp,0x20
   14002548b:	pop    rbx
   14002548c:	ret    
   14002548d:	int3   
   14002548e:	int3   
   14002548f:	int3   
   140025490:	lea    rax,[rip+0x2fb71]        # 0x140055008
   140025497:	ret    
   140025498:	int3   
   140025499:	int3   
   14002549a:	int3   
   14002549b:	int3   
   14002549c:	int3   
   14002549d:	int3   
   14002549e:	int3   
   14002549f:	int3   
   1400254a0:	mov    rax,QWORD PTR [rcx]
   1400254a3:	mov    eax,DWORD PTR [rax+0x30]
   1400254a6:	and    eax,0x1
   1400254a9:	ret    
   1400254aa:	int3   
   1400254ab:	int3   
   1400254ac:	int3   
   1400254ad:	int3   
   1400254ae:	int3   
   1400254af:	int3   
   1400254b0:	mov    rax,QWORD PTR [rcx+0x8]
   1400254b4:	mov    rcx,QWORD PTR [rax]
   1400254b7:	mov    eax,DWORD PTR [rcx+0x30]
   1400254ba:	and    eax,0x1
   1400254bd:	ret    
   1400254be:	int3   
   1400254bf:	int3   
   1400254c0:	movzx  eax,BYTE PTR [rcx+0x88]
   1400254c7:	ret    
   1400254c8:	int3   
   1400254c9:	int3   
   1400254ca:	int3   
   1400254cb:	int3   
   1400254cc:	int3   
   1400254cd:	int3   
   1400254ce:	int3   
   1400254cf:	int3   
   1400254d0:	sub    rsp,0x28
   1400254d4:	mov    rdx,rcx
   1400254d7:	lea    rcx,[rsp+0x38]
   1400254dc:	xor    r8d,r8d
   1400254df:	call   QWORD PTR [rip+0x1105b]        # 0x140036540
   1400254e5:	cmp    DWORD PTR [rax],0x3
   1400254e8:	sete   al
   1400254eb:	add    rsp,0x28
   1400254ef:	ret    
   1400254f0:	cmp    ecx,0x3
   1400254f3:	sete   al
   1400254f6:	ret    
   1400254f7:	int3   
   1400254f8:	int3   
   1400254f9:	int3   
   1400254fa:	int3   
   1400254fb:	int3   
   1400254fc:	int3   
   1400254fd:	int3   
   1400254fe:	int3   
   1400254ff:	int3   
   140025500:	sub    rsp,0x28
   140025504:	cmp    QWORD PTR [rcx+0x30],0x0
   140025509:	je     0x140025523
   14002550b:	add    rcx,0x20
   14002550f:	xor    r8d,r8d
   140025512:	call   0x1400237f0
   140025517:	cmp    rax,0xffffffffffffffff
   14002551b:	setne  al
   14002551e:	add    rsp,0x28
   140025522:	ret    
   140025523:	cmp    BYTE PTR [rcx+0x41],0x0
   140025527:	je     0x14002553c
   140025529:	movsx  ecx,dl
   14002552c:	call   QWORD PTR [rip+0x10ede]        # 0x140036410
   140025532:	test   eax,eax
   140025534:	setne  al
   140025537:	add    rsp,0x28
   14002553b:	ret    
   14002553c:	xor    al,al
   14002553e:	add    rsp,0x28
   140025542:	ret    
   140025543:	int3   
   140025544:	int3   
   140025545:	int3   
   140025546:	int3   
   140025547:	int3   
   140025548:	int3   
   140025549:	int3   
   14002554a:	int3   
   14002554b:	int3   
   14002554c:	int3   
   14002554d:	int3   
   14002554e:	int3   
   14002554f:	int3   
   140025550:	movzx  eax,BYTE PTR [rcx]
   140025553:	ret    
   140025554:	int3   
   140025555:	int3   
   140025556:	int3   
   140025557:	int3   
   140025558:	int3   
   140025559:	int3   
   14002555a:	int3   
   14002555b:	int3   
   14002555c:	int3   
   14002555d:	int3   
   14002555e:	int3   
   14002555f:	int3   
   140025560:	movzx  eax,BYTE PTR [rcx]
   140025563:	ret    
   140025564:	int3   
   140025565:	int3   
   140025566:	int3   
   140025567:	int3   
   140025568:	int3   
   140025569:	int3   
   14002556a:	int3   
   14002556b:	int3   
   14002556c:	int3   
   14002556d:	int3   
   14002556e:	int3   
   14002556f:	int3   
   140025570:	movzx  eax,BYTE PTR [rcx]
   140025573:	ret    
   140025574:	int3   
   140025575:	int3   
   140025576:	int3   
   140025577:	int3   
   140025578:	int3   
   140025579:	int3   
   14002557a:	int3   
   14002557b:	int3   
   14002557c:	int3   
   14002557d:	int3   
   14002557e:	int3   
   14002557f:	int3   
   140025580:	sub    rsp,0x28
   140025584:	cmp    QWORD PTR [rcx+0x10],0x0
   140025589:	je     0x14002559f
   14002558b:	xor    r8d,r8d
   14002558e:	call   0x1400237f0
   140025593:	cmp    rax,0xffffffffffffffff
   140025597:	setne  al
   14002559a:	add    rsp,0x28
   14002559e:	ret    
   14002559f:	cmp    BYTE PTR [rcx+0x40],0x0
   1400255a3:	je     0x1400255b8
   1400255a5:	movsx  ecx,dl
   1400255a8:	call   QWORD PTR [rip+0x10e5a]        # 0x140036408
   1400255ae:	test   eax,eax
   1400255b0:	setne  al
   1400255b3:	add    rsp,0x28
   1400255b7:	ret    
   1400255b8:	xor    al,al
   1400255ba:	add    rsp,0x28
   1400255be:	ret    
   1400255bf:	int3   
   1400255c0:	movzx  r8d,cx
   1400255c4:	mov    eax,r8d
   1400255c7:	and    eax,0x80000003
   1400255cc:	jge    0x1400255d5
   1400255ce:	dec    eax
   1400255d0:	or     eax,0xfffffffc
   1400255d3:	inc    eax
   1400255d5:	test   eax,eax
   1400255d7:	jne    0x140025613
   1400255d9:	mov    eax,0x51eb851f
   1400255de:	imul   r8d
   1400255e1:	sar    edx,0x5
   1400255e4:	mov    ecx,edx
   1400255e6:	shr    ecx,0x1f
   1400255e9:	add    edx,ecx
   1400255eb:	imul   edx,edx,0x64
   1400255ee:	cmp    r8d,edx
   1400255f1:	jne    0x140025610
   1400255f3:	mov    eax,0x51eb851f
   1400255f8:	imul   r8d
   1400255fb:	sar    edx,0x7
   1400255fe:	mov    eax,edx
   140025600:	shr    eax,0x1f
   140025603:	add    edx,eax
   140025605:	imul   eax,edx,0x190
   14002560b:	cmp    r8d,eax
   14002560e:	jne    0x140025613
   140025610:	mov    al,0x1
   140025612:	ret    
   140025613:	xor    al,al
   140025615:	ret    
   140025616:	int3   
   140025617:	int3   
   140025618:	int3   
   140025619:	int3   
   14002561a:	int3   
   14002561b:	int3   
   14002561c:	int3   
   14002561d:	int3   
   14002561e:	int3   
   14002561f:	int3   
   140025620:	test   ecx,ecx
   140025622:	sete   al
   140025625:	ret    
   140025626:	int3   
   140025627:	int3   
   140025628:	int3   
   140025629:	int3   
   14002562a:	int3   
   14002562b:	int3   
   14002562c:	int3   
   14002562d:	int3   
   14002562e:	int3   
   14002562f:	int3   
   140025630:	xor    eax,eax
   140025632:	cmp    DWORD PTR [rcx],eax
   140025634:	sete   al
   140025637:	ret    
   140025638:	int3   
   140025639:	int3   
   14002563a:	int3   
   14002563b:	int3   
   14002563c:	int3   
   14002563d:	int3   
   14002563e:	int3   
   14002563f:	int3   
   140025640:	cmp    DWORD PTR [rcx],0xfffffffe
   140025643:	sete   al
   140025646:	ret    
   140025647:	int3   
   140025648:	int3   
   140025649:	int3   
   14002564a:	int3   
   14002564b:	int3   
   14002564c:	int3   
   14002564d:	int3   
   14002564e:	int3   
   14002564f:	int3   
   140025650:	cmp    ecx,0xfffffffe
   140025653:	sete   al
   140025656:	ret    
   140025657:	int3   
   140025658:	int3   
   140025659:	int3   
   14002565a:	int3   
   14002565b:	int3   
   14002565c:	int3   
   14002565d:	int3   
   14002565e:	int3   
   14002565f:	int3   
   140025660:	mov    eax,DWORD PTR [rcx+0xa8]
   140025666:	and    eax,0x1
   140025669:	ret    
   14002566a:	int3   
   14002566b:	int3   
   14002566c:	int3   
   14002566d:	int3   
   14002566e:	int3   
   14002566f:	int3   
   140025670:	mov    eax,DWORD PTR [rcx+0xa8]
   140025676:	and    eax,0x1
   140025679:	ret    
   14002567a:	int3   
   14002567b:	int3   
   14002567c:	int3   
   14002567d:	int3   
   14002567e:	int3   
   14002567f:	int3   
   140025680:	mov    eax,DWORD PTR [rcx+0x98]
   140025686:	and    eax,0x1
   140025689:	ret    
   14002568a:	int3   
   14002568b:	int3   
   14002568c:	int3   
   14002568d:	int3   
   14002568e:	int3   
   14002568f:	int3   
   140025690:	mov    eax,DWORD PTR [rcx+0xa0]
   140025696:	and    eax,0x1
   140025699:	ret    
   14002569a:	int3   
   14002569b:	int3   
   14002569c:	int3   
   14002569d:	int3   
   14002569e:	int3   
   14002569f:	int3   
   1400256a0:	cmp    ecx,0xffffffff
   1400256a3:	sete   al
   1400256a6:	ret    
   1400256a7:	int3   
   1400256a8:	int3   
   1400256a9:	int3   
   1400256aa:	int3   
   1400256ab:	int3   
   1400256ac:	int3   
   1400256ad:	int3   
   1400256ae:	int3   
   1400256af:	int3   
   1400256b0:	cmp    DWORD PTR [rcx],0xffffffff
   1400256b3:	sete   al
   1400256b6:	ret    
   1400256b7:	int3   
   1400256b8:	int3   
   1400256b9:	int3   
   1400256ba:	int3   
   1400256bb:	int3   
   1400256bc:	int3   
   1400256bd:	int3   
   1400256be:	int3   
   1400256bf:	int3   
   1400256c0:	movzx  eax,BYTE PTR [rcx+0x8c]
   1400256c7:	ret    
   1400256c8:	int3   
   1400256c9:	int3   
   1400256ca:	int3   
   1400256cb:	int3   
   1400256cc:	int3   
   1400256cd:	int3   
   1400256ce:	int3   
   1400256cf:	int3   
   1400256d0:	sub    rsp,0x28
   1400256d4:	movsx  ecx,cl
   1400256d7:	call   QWORD PTR [rip+0x10d2b]        # 0x140036408
   1400256dd:	test   eax,eax
   1400256df:	setne  al
   1400256e2:	add    rsp,0x28
   1400256e6:	ret    
   1400256e7:	int3   
   1400256e8:	int3   
   1400256e9:	int3   
   1400256ea:	int3   
   1400256eb:	int3   
   1400256ec:	int3   
   1400256ed:	int3   
   1400256ee:	int3   
   1400256ef:	int3   
   1400256f0:	sub    rsp,0x28
   1400256f4:	movsx  ecx,cl
   1400256f7:	call   QWORD PTR [rip+0x10d0b]        # 0x140036408
   1400256fd:	test   eax,eax
   1400256ff:	setne  al
   140025702:	add    rsp,0x28
   140025706:	ret    
   140025707:	int3   
   140025708:	int3   
   140025709:	int3   
   14002570a:	int3   
   14002570b:	int3   
   14002570c:	int3   
   14002570d:	int3   
   14002570e:	int3   
   14002570f:	int3   
   140025710:	sub    rsp,0x28
   140025714:	movsx  ecx,cl
   140025717:	call   QWORD PTR [rip+0x10cf3]        # 0x140036410
   14002571d:	test   eax,eax
   14002571f:	setne  al
   140025722:	add    rsp,0x28
   140025726:	ret    
   140025727:	int3   
   140025728:	int3   
   140025729:	int3   
   14002572a:	int3   
   14002572b:	int3   
   14002572c:	int3   
   14002572d:	int3   
   14002572e:	int3   
   14002572f:	int3   
   140025730:	sub    rsp,0x28
   140025734:	movsx  ecx,cl
   140025737:	call   QWORD PTR [rip+0x10cd3]        # 0x140036410
   14002573d:	test   eax,eax
   14002573f:	setne  al
   140025742:	add    rsp,0x28
   140025746:	ret    
   140025747:	int3   
   140025748:	int3   
   140025749:	int3   
   14002574a:	int3   
   14002574b:	int3   
   14002574c:	int3   
   14002574d:	int3   
   14002574e:	int3   
   14002574f:	int3   
   140025750:	lea    rax,[rcx+0x50]
   140025754:	ret    
   140025755:	int3   
   140025756:	int3   
   140025757:	int3   
   140025758:	int3   
   140025759:	int3   
   14002575a:	int3   
   14002575b:	int3   
   14002575c:	int3   
   14002575d:	int3   
   14002575e:	int3   
   14002575f:	int3   
   140025760:	lea    rax,[rcx+0x8]
   140025764:	ret    
   140025765:	int3   
   140025766:	int3   
   140025767:	int3   
   140025768:	int3   
   140025769:	int3   
   14002576a:	int3   
   14002576b:	int3   
   14002576c:	int3   
   14002576d:	int3   
   14002576e:	int3   
   14002576f:	int3   
   140025770:	mov    r8d,ecx
   140025773:	mov    ecx,0x20
   140025778:	sub    cl,dl
   14002577a:	mov    eax,r8d
   14002577d:	shr    eax,cl
   14002577f:	mov    rcx,rdx
   140025782:	shl    r8d,cl
   140025785:	xor    eax,r8d
   140025788:	ret    
   140025789:	int3   
   14002578a:	int3   
   14002578b:	int3   
   14002578c:	int3   
   14002578d:	int3   
   14002578e:	int3   
   14002578f:	int3   
   140025790:	test   rcx,rcx
   140025793:	je     0x14002579b
   140025795:	lea    rax,[rcx-0x11]
   140025799:	jmp    0x14002579d
   14002579b:	xor    eax,eax
   14002579d:	mov    rax,QWORD PTR [rax+0x8]
   1400257a1:	mov    rax,QWORD PTR [rax+0x50]
   1400257a5:	test   rax,rax
   1400257a8:	je     0x1400257af
   1400257aa:	add    rax,0xffffffffffffffb8
   1400257ae:	ret    
   1400257af:	ret    
   1400257b0:	mov    rax,QWORD PTR [rcx+0x10]
   1400257b4:	ret    
   1400257b5:	int3   
   1400257b6:	int3   
   1400257b7:	int3   
   1400257b8:	int3   
   1400257b9:	int3   
   1400257ba:	int3   
   1400257bb:	int3   
   1400257bc:	int3   
   1400257bd:	int3   
   1400257be:	int3   
   1400257bf:	int3   
   1400257c0:	cmp    BYTE PTR [rcx],0x0
   1400257c3:	jne    0x1400257c8
   1400257c5:	xor    eax,eax
   1400257c7:	ret    
   1400257c8:	or     rax,0xffffffffffffffff
   1400257cc:	nop    DWORD PTR [rax+0x0]
   1400257d0:	inc    rax
   1400257d3:	cmp    BYTE PTR [rcx+rax*1],0x0
   1400257d7:	jne    0x1400257d0
   1400257d9:	ret    
   1400257da:	int3   
   1400257db:	int3   
   1400257dc:	int3   
   1400257dd:	int3   
   1400257de:	int3   
   1400257df:	int3   
   1400257e0:	test   edx,edx
   1400257e2:	jne    0x140025802
   1400257e4:	mov    QWORD PTR [r8+0x8],rcx
   1400257e8:	cmp    r8,r9
   1400257eb:	jne    0x1400257f6
   1400257ed:	and    QWORD PTR [r9],0x1
   1400257f1:	or     QWORD PTR [r9],rcx
   1400257f4:	jmp    0x14002580c
   1400257f6:	cmp    r8,QWORD PTR [r9+0x8]
   1400257fa:	jne    0x140025810
   1400257fc:	mov    QWORD PTR [r9+0x8],rcx
   140025800:	jmp    0x140025810
   140025802:	mov    QWORD PTR [r8+0x10],rcx
   140025806:	cmp    r8,QWORD PTR [r9+0x10]
   14002580a:	jne    0x140025810
   14002580c:	mov    QWORD PTR [r9+0x10],rcx
   140025810:	and    QWORD PTR [rcx],0x1
   140025814:	or     QWORD PTR [rcx],r8
   140025817:	xor    eax,eax
   140025819:	mov    rdx,r9
   14002581c:	mov    QWORD PTR [rcx+0x8],rax
   140025820:	mov    QWORD PTR [rcx+0x10],rax
   140025824:	jmp    0x140029670
   140025829:	int3   
   14002582a:	int3   
   14002582b:	int3   
   14002582c:	int3   
   14002582d:	int3   
   14002582e:	int3   
   14002582f:	int3   
   140025830:	xor    r8d,r8d
   140025833:	lea    rax,[rcx-0x11]
   140025837:	test   rcx,rcx
   14002583a:	jne    0x14002583f
   14002583c:	mov    eax,r8d
   14002583f:	mov    rcx,QWORD PTR [rax+0x8]
   140025843:	test   rcx,rcx
   140025846:	je     0x14002584e
   140025848:	add    rcx,0x60
   14002584c:	jmp    0x140025851
   14002584e:	mov    rcx,r8
   140025851:	test   rdx,rdx
   140025854:	je     0x14002585a
   140025856:	lea    r8,[rdx+0x60]
   14002585a:	mov    rax,QWORD PTR [rcx]
   14002585d:	mov    QWORD PTR [r8+0x8],rcx
   140025861:	mov    QWORD PTR [r8],rax
   140025864:	mov    QWORD PTR [rcx],r8
   140025867:	mov    rax,QWORD PTR [r8]
   14002586a:	mov    QWORD PTR [rax+0x8],r8
   14002586e:	ret    
   14002586f:	int3   
   140025870:	mov    rax,QWORD PTR [rdx]
   140025873:	mov    QWORD PTR [rcx+0x8],rdx
   140025877:	mov    QWORD PTR [rcx],rax
   14002587a:	mov    QWORD PTR [rdx],rcx
   14002587d:	mov    rax,QWORD PTR [rcx]
   140025880:	mov    QWORD PTR [rax+0x8],rcx
   140025884:	ret    
   140025885:	int3   
   140025886:	int3   
   140025887:	int3   
   140025888:	int3   
   140025889:	int3   
   14002588a:	int3   
   14002588b:	int3   
   14002588c:	int3   
   14002588d:	int3   
   14002588e:	int3   
   14002588f:	int3   
   140025890:	rex push rbp
   140025892:	push   r12
   140025894:	sub    rsp,0x28
   140025898:	mov    QWORD PTR [rsp+0x40],rbx
   14002589d:	mov    QWORD PTR [rsp+0x58],r14
   1400258a2:	mov    r12,r8
   1400258a5:	mov    r14,rdx
   1400258a8:	test   rcx,rcx
   1400258ab:	je     0x1400258b3
   1400258ad:	lea    rax,[rcx-0x11]
   1400258b1:	jmp    0x1400258b5
   1400258b3:	xor    eax,eax
   1400258b5:	mov    rbp,QWORD PTR [rax+0x8]
   1400258b9:	test   rcx,rcx
   1400258bc:	je     0x1400258c4
   1400258be:	lea    rax,[rcx-0x11]
   1400258c2:	jmp    0x1400258c6
   1400258c4:	xor    eax,eax
   1400258c6:	mov    rax,QWORD PTR [rax+0x8]
   1400258ca:	mov    rbx,QWORD PTR [rax+0x48]
   1400258ce:	and    rbx,0xfffffffffffffffe
   1400258d2:	je     0x1400258da
   1400258d4:	add    rbx,0xffffffffffffffb8
   1400258d8:	jmp    0x1400258dc
   1400258da:	xor    ebx,ebx
   1400258dc:	mov    cl,0x1
   1400258de:	test   rbx,rbx
   1400258e1:	je     0x140025982
   1400258e7:	mov    QWORD PTR [rsp+0x48],rsi
   1400258ec:	mov    rsi,QWORD PTR [rdx+0x10]
   1400258f0:	mov    QWORD PTR [rsp+0x50],rdi
   1400258f5:	mov    QWORD PTR [rsp+0x20],r15
   1400258fa:	mov    r15,QWORD PTR [rdx+0x18]
   1400258fe:	xchg   ax,ax
   140025900:	cmp    QWORD PTR [rbx+0x18],0x10
   140025905:	mov    rdi,QWORD PTR [rbx+0x10]
   140025909:	mov    rbp,rbx
   14002590c:	jb     0x140025913
   14002590e:	mov    rdx,QWORD PTR [rbx]
   140025911:	jmp    0x140025916
   140025913:	mov    rdx,rbx
   140025916:	cmp    r15,0x10
   14002591a:	jb     0x140025921
   14002591c:	mov    rcx,QWORD PTR [r14]
   14002591f:	jmp    0x140025924
   140025921:	mov    rcx,r14
   140025924:	cmp    rsi,rdi
   140025927:	mov    r8,rdi
   14002592a:	cmovb  r8,rsi
   14002592e:	test   r8,r8
   140025931:	jne    0x140025937
   140025933:	xor    eax,eax
   140025935:	jmp    0x14002593c
   140025937:	call   0x140030484
   14002593c:	cdqe   
   14002593e:	test   rax,rax
   140025941:	jne    0x140025955
   140025943:	cmp    rsi,rdi
   140025946:	jae    0x14002594d
   140025948:	or     eax,0xffffffff
   14002594b:	jmp    0x140025955
   14002594d:	xor    eax,eax
   14002594f:	cmp    rsi,rdi
   140025952:	setne  al
   140025955:	test   eax,eax
   140025957:	sets   cl
   14002595a:	test   cl,cl
   14002595c:	je     0x140025964
   14002595e:	mov    rbx,QWORD PTR [rbx+0x50]
   140025962:	jmp    0x140025968
   140025964:	mov    rbx,QWORD PTR [rbx+0x58]
   140025968:	test   rbx,rbx
   14002596b:	je     0x140025973
   14002596d:	add    rbx,0xffffffffffffffb8
   140025971:	jne    0x140025900
   140025973:	mov    rdi,QWORD PTR [rsp+0x50]
   140025978:	mov    rsi,QWORD PTR [rsp+0x48]
   14002597d:	mov    r15,QWORD PTR [rsp+0x20]
   140025982:	mov    r14,QWORD PTR [rsp+0x58]
   140025987:	mov    rbx,QWORD PTR [rsp+0x40]
   14002598c:	xor    eax,eax
   14002598e:	test   cl,cl
   140025990:	sete   al
   140025993:	mov    DWORD PTR [r12],eax
   140025997:	test   rbp,rbp
   14002599a:	je     0x1400259af
   14002599c:	lea    rax,[rbp+0x48]
   1400259a0:	mov    QWORD PTR [r12+0x8],rax
   1400259a5:	mov    al,0x1
   1400259a7:	add    rsp,0x28
   1400259ab:	pop    r12
   1400259ad:	pop    rbp
   1400259ae:	ret    
   1400259af:	mov    QWORD PTR [r12+0x8],0x0
   1400259b8:	mov    al,0x1
   1400259ba:	add    rsp,0x28
   1400259be:	pop    r12
   1400259c0:	pop    rbp
   1400259c1:	ret    
   1400259c2:	int3   
   1400259c3:	int3   
   1400259c4:	int3   
   1400259c5:	int3   
   1400259c6:	int3   
   1400259c7:	int3   
   1400259c8:	int3   
   1400259c9:	int3   
   1400259ca:	int3   
   1400259cb:	int3   
   1400259cc:	int3   
   1400259cd:	int3   
   1400259ce:	int3   
   1400259cf:	int3   
   1400259d0:	mov    rax,QWORD PTR [rcx]
   1400259d3:	ret    
   1400259d4:	int3   
   1400259d5:	int3   
   1400259d6:	int3   
   1400259d7:	int3   
   1400259d8:	int3   
   1400259d9:	int3   
   1400259da:	int3   
   1400259db:	int3   
   1400259dc:	int3   
   1400259dd:	int3   
   1400259de:	int3   
   1400259df:	int3   
   1400259e0:	mov    rax,QWORD PTR [rcx]
   1400259e3:	ret    
   1400259e4:	int3   
   1400259e5:	int3   
   1400259e6:	int3   
   1400259e7:	int3   
   1400259e8:	int3   
   1400259e9:	int3   
   1400259ea:	int3   
   1400259eb:	int3   
   1400259ec:	int3   
   1400259ed:	int3   
   1400259ee:	int3   
   1400259ef:	int3   
   1400259f0:	rex push rbx
   1400259f2:	sub    rsp,0x20
   1400259f6:	mov    rbx,rdx
   1400259f9:	mov    rdx,r8
   1400259fc:	call   0x14001d1b0
   140025a01:	mov    QWORD PTR [rbx],rax
   140025a04:	mov    rax,rbx
   140025a07:	add    rsp,0x20
   140025a0b:	pop    rbx
   140025a0c:	ret    
   140025a0d:	int3   
   140025a0e:	int3   
   140025a0f:	int3   
   140025a10:	cmp    BYTE PTR [rcx],0x0
   140025a13:	mov    r8,rcx
   140025a16:	jne    0x140025a27
   140025a18:	mov    eax,0x1999
   140025a1d:	cmp    ax,WORD PTR [rcx+0x2]
   140025a21:	jb     0x140025a27
   140025a23:	xor    edx,edx
   140025a25:	jmp    0x140025a2c
   140025a27:	mov    edx,0x1
   140025a2c:	movzx  r11d,WORD PTR [rcx+0x2]
   140025a31:	mov    BYTE PTR [rcx],dl
   140025a33:	movzx  eax,r11w
   140025a37:	shl    ax,0x2
   140025a3b:	add    r11w,ax
   140025a3f:	mov    rax,QWORD PTR [rcx+0x18]
   140025a43:	add    r11w,r11w
   140025a47:	mov    WORD PTR [rcx+0x2],r11w
   140025a4c:	movsx  ecx,BYTE PTR [rax]
   140025a4f:	movzx  r10d,r11w
   140025a53:	lea    eax,[rcx-0x30]
   140025a56:	sub    cl,0x30
   140025a59:	imul   r10w,ax
   140025a5e:	cmp    cl,0x9
   140025a61:	ja     0x140025a9a
   140025a63:	test   ax,ax
   140025a66:	je     0x140025a8f
   140025a68:	test   dl,dl
   140025a6a:	jne    0x140025a9a
   140025a6c:	movzx  ecx,ax
   140025a6f:	mov    r9d,0xffff
   140025a75:	mov    eax,r9d
   140025a78:	cdq    
   140025a79:	idiv   ecx
   140025a7b:	cmp    ax,r11w
   140025a7f:	jb     0x140025a9a
   140025a81:	mov    rax,QWORD PTR [r8+0x8]
   140025a85:	sub    r9w,r10w
   140025a89:	cmp    r9w,WORD PTR [rax]
   140025a8d:	jb     0x140025a9a
   140025a8f:	mov    rax,QWORD PTR [r8+0x8]
   140025a93:	add    WORD PTR [rax],r10w
   140025a97:	mov    al,0x1
   140025a99:	ret    
   140025a9a:	xor    al,al
   140025a9c:	ret    
   140025a9d:	int3   
   140025a9e:	int3   
   140025a9f:	int3   
   140025aa0:	mov    rax,QWORD PTR [rcx+0x10]
   140025aa4:	cmp    QWORD PTR [rcx+0x18],rax
   140025aa8:	jb     0x140025b4c
   140025aae:	mov    r11d,0x1999
   140025ab4:	cmp    BYTE PTR [rcx],0x0
   140025ab7:	jne    0x140025ac5
   140025ab9:	cmp    r11w,WORD PTR [rcx+0x2]
   140025abe:	jb     0x140025ac5
   140025ac0:	xor    r8d,r8d
   140025ac3:	jmp    0x140025acb
   140025ac5:	mov    r8d,0x1
   140025acb:	movzx  r9d,WORD PTR [rcx+0x2]
   140025ad0:	mov    BYTE PTR [rcx],r8b
   140025ad3:	movzx  eax,r9w
   140025ad7:	shl    ax,0x2
   140025adb:	add    r9w,ax
   140025adf:	mov    rax,QWORD PTR [rcx+0x18]
   140025ae3:	add    r9w,r9w
   140025ae7:	mov    WORD PTR [rcx+0x2],r9w
   140025aec:	movsx  edx,BYTE PTR [rax]
   140025aef:	movzx  r10d,r9w
   140025af3:	lea    eax,[rdx-0x30]
   140025af6:	sub    dl,0x30
   140025af9:	imul   r10w,ax
   140025afe:	cmp    dl,0x9
   140025b01:	ja     0x140025b4f
   140025b03:	test   ax,ax
   140025b06:	je     0x140025b32
   140025b08:	test   r8b,r8b
   140025b0b:	jne    0x140025b4f
   140025b0d:	movzx  r8d,ax
   140025b11:	mov    eax,0xffff
   140025b16:	cdq    
   140025b17:	idiv   r8d
   140025b1a:	cmp    ax,r9w
   140025b1e:	jb     0x140025b4f
   140025b20:	mov    rdx,QWORD PTR [rcx+0x8]
   140025b24:	mov    eax,0xffff
   140025b29:	sub    ax,r10w
   140025b2d:	cmp    ax,WORD PTR [rdx]
   140025b30:	jb     0x140025b4f
   140025b32:	mov    rax,QWORD PTR [rcx+0x8]
   140025b36:	add    WORD PTR [rax],r10w
   140025b3a:	dec    QWORD PTR [rcx+0x18]
   140025b3e:	mov    rax,QWORD PTR [rcx+0x18]
   140025b42:	cmp    rax,QWORD PTR [rcx+0x10]
   140025b46:	jae    0x140025ab4
   140025b4c:	mov    al,0x1
   140025b4e:	ret    
   140025b4f:	xor    al,al
   140025b51:	ret    
   140025b52:	int3   
   140025b53:	int3   
   140025b54:	int3   
   140025b55:	int3   
   140025b56:	int3   
   140025b57:	int3   
   140025b58:	int3   
   140025b59:	int3   
   140025b5a:	int3   
   140025b5b:	int3   
   140025b5c:	int3   
   140025b5d:	int3   
   140025b5e:	int3   
   140025b5f:	int3   
   140025b60:	lea    rax,[rip+0x2f4a1]        # 0x140055008
   140025b67:	mov    DWORD PTR [rcx],edx
   140025b69:	mov    QWORD PTR [rcx+0x8],rax
   140025b6d:	mov    rax,rcx
   140025b70:	ret    
   140025b71:	int3   
   140025b72:	int3   
   140025b73:	int3   
   140025b74:	int3   
   140025b75:	int3   
   140025b76:	int3   
   140025b77:	int3   
   140025b78:	int3   
   140025b79:	int3   
   140025b7a:	int3   
   140025b7b:	int3   
   140025b7c:	int3   
   140025b7d:	int3   
   140025b7e:	int3   
   140025b7f:	int3   
   140025b80:	mov    QWORD PTR [rdx],r8
   140025b83:	mov    rax,rdx
   140025b86:	ret    
   140025b87:	int3   
   140025b88:	int3   
   140025b89:	int3   
   140025b8a:	int3   
   140025b8b:	int3   
   140025b8c:	int3   
   140025b8d:	int3   
   140025b8e:	int3   
   140025b8f:	int3   
   140025b90:	mov    QWORD PTR [rdx],r8
   140025b93:	mov    rax,rdx
   140025b96:	ret    
   140025b97:	int3   
   140025b98:	int3   
   140025b99:	int3   
   140025b9a:	int3   
   140025b9b:	int3   
   140025b9c:	int3   
   140025b9d:	int3   
   140025b9e:	int3   
   140025b9f:	int3   
   140025ba0:	mov    QWORD PTR [rdx],r8
   140025ba3:	mov    rax,rdx
   140025ba6:	ret    
   140025ba7:	int3   
   140025ba8:	int3   
   140025ba9:	int3   
   140025baa:	int3   
   140025bab:	int3   
   140025bac:	int3   
   140025bad:	int3   
   140025bae:	int3   
   140025baf:	int3   
   140025bb0:	mov    QWORD PTR [rdx],r8
   140025bb3:	mov    rax,rdx
   140025bb6:	ret    
   140025bb7:	int3   
   140025bb8:	int3   
   140025bb9:	int3   
   140025bba:	int3   
   140025bbb:	int3   
   140025bbc:	int3   
   140025bbd:	int3   
   140025bbe:	int3   
   140025bbf:	int3   
   140025bc0:	mov    eax,0x1f
   140025bc5:	ret    
   140025bc6:	int3   
   140025bc7:	int3   
   140025bc8:	int3   
   140025bc9:	int3   
   140025bca:	int3   
   140025bcb:	int3   
   140025bcc:	int3   
   140025bcd:	int3   
   140025bce:	int3   
   140025bcf:	int3   
   140025bd0:	mov    eax,0x2710
   140025bd5:	ret    
   140025bd6:	int3   
   140025bd7:	int3   
   140025bd8:	int3   
   140025bd9:	int3   
   140025bda:	int3   
   140025bdb:	int3   
   140025bdc:	int3   
   140025bdd:	int3   
   140025bde:	int3   
   140025bdf:	int3   
   140025be0:	or     eax,0xffffffff
   140025be3:	ret    
   140025be4:	int3   
   140025be5:	int3   
   140025be6:	int3   
   140025be7:	int3   
   140025be8:	int3   
   140025be9:	int3   
   140025bea:	int3   
   140025beb:	int3   
   140025bec:	int3   
   140025bed:	int3   
   140025bee:	int3   
   140025bef:	int3   
   140025bf0:	mov    eax,0xffff
   140025bf5:	ret    
   140025bf6:	int3   
   140025bf7:	int3   
   140025bf8:	int3   
   140025bf9:	int3   
   140025bfa:	int3   
   140025bfb:	int3   
   140025bfc:	int3   
   140025bfd:	int3   
   140025bfe:	int3   
   140025bff:	int3   
   140025c00:	or     eax,0xffffffff
   140025c03:	ret    
   140025c04:	int3   
   140025c05:	int3   
   140025c06:	int3   
   140025c07:	int3   
   140025c08:	int3   
   140025c09:	int3   
   140025c0a:	int3   
   140025c0b:	int3   
   140025c0c:	int3   
   140025c0d:	int3   
   140025c0e:	int3   
   140025c0f:	int3   
   140025c10:	or     eax,0xffffffff
   140025c13:	ret    
   140025c14:	int3   
   140025c15:	int3   
   140025c16:	int3   
   140025c17:	int3   
   140025c18:	int3   
   140025c19:	int3   
   140025c1a:	int3   
   140025c1b:	int3   
   140025c1c:	int3   
   140025c1d:	int3   
   140025c1e:	int3   
   140025c1f:	int3   
   140025c20:	mov    eax,0x1f
   140025c25:	ret    
   140025c26:	int3   
   140025c27:	int3   
   140025c28:	int3   
   140025c29:	int3   
   140025c2a:	int3   
   140025c2b:	int3   
   140025c2c:	int3   
   140025c2d:	int3   
   140025c2e:	int3   
   140025c2f:	int3   
   140025c30:	mov    eax,0x2710
   140025c35:	ret    
   140025c36:	int3   
   140025c37:	int3   
   140025c38:	int3   
   140025c39:	int3   
   140025c3a:	int3   
   140025c3b:	int3   
   140025c3c:	int3   
   140025c3d:	int3   
   140025c3e:	int3   
   140025c3f:	int3   
   140025c40:	or     rax,0xffffffffffffffff
   140025c44:	ret    
   140025c45:	int3   
   140025c46:	int3   
   140025c47:	int3   
   140025c48:	int3   
   140025c49:	int3   
   140025c4a:	int3   
   140025c4b:	int3   
   140025c4c:	int3   
   140025c4d:	int3   
   140025c4e:	int3   
   140025c4f:	int3   
   140025c50:	movabs rax,0xaaaaaaaaaaaaaaa
   140025c5a:	ret    
   140025c5b:	int3   
   140025c5c:	int3   
   140025c5d:	int3   
   140025c5e:	int3   
   140025c5f:	int3   
   140025c60:	movabs rax,0x555555555555555
   140025c6a:	ret    
   140025c6b:	int3   
   140025c6c:	int3   
   140025c6d:	int3   
   140025c6e:	int3   
   140025c6f:	int3   
   140025c70:	movabs rax,0x2aaaaaaaaaaaaaa
   140025c7a:	ret    
   140025c7b:	int3   
   140025c7c:	int3   
   140025c7d:	int3   
   140025c7e:	int3   
   140025c7f:	int3   
   140025c80:	movabs rax,0x7ffffffffffffff
   140025c8a:	ret    
   140025c8b:	int3   
   140025c8c:	int3   
   140025c8d:	int3   
   140025c8e:	int3   
   140025c8f:	int3   
   140025c90:	or     rax,0xffffffffffffffff
   140025c94:	ret    
   140025c95:	int3   
   140025c96:	int3   
   140025c97:	int3   
   140025c98:	int3   
   140025c99:	int3   
   140025c9a:	int3   
   140025c9b:	int3   
   140025c9c:	int3   
   140025c9d:	int3   
   140025c9e:	int3   
   140025c9f:	int3   
   140025ca0:	movabs rax,0xaaaaaaaaaaaaaaa
   140025caa:	ret    
   140025cab:	int3   
   140025cac:	int3   
   140025cad:	int3   
   140025cae:	int3   
   140025caf:	int3   
   140025cb0:	movabs rax,0x555555555555555
   140025cba:	ret    
   140025cbb:	int3   
   140025cbc:	int3   
   140025cbd:	int3   
   140025cbe:	int3   
   140025cbf:	int3   
   140025cc0:	movabs rax,0x2aaaaaaaaaaaaaa
   140025cca:	ret    
   140025ccb:	int3   
   140025ccc:	int3   
   140025ccd:	int3   
   140025cce:	int3   
   140025ccf:	int3   
   140025cd0:	movabs rax,0x7ffffffffffffff
   140025cda:	ret    
   140025cdb:	int3   
   140025cdc:	int3   
   140025cdd:	int3   
   140025cde:	int3   
   140025cdf:	int3   
   140025ce0:	or     rax,0xffffffffffffffff
   140025ce4:	ret    
   140025ce5:	int3   
   140025ce6:	int3   
   140025ce7:	int3   
   140025ce8:	int3   
   140025ce9:	int3   
   140025cea:	int3   
   140025ceb:	int3   
   140025cec:	int3   
   140025ced:	int3   
   140025cee:	int3   
   140025cef:	int3   
   140025cf0:	movabs rax,0xaaaaaaaaaaaaaaa
   140025cfa:	ret    
   140025cfb:	int3   
   140025cfc:	int3   
   140025cfd:	int3   
   140025cfe:	int3   
   140025cff:	int3   
   140025d00:	movabs rax,0x555555555555555
   140025d0a:	ret    
   140025d0b:	int3   
   140025d0c:	int3   
   140025d0d:	int3   
   140025d0e:	int3   
   140025d0f:	int3   
   140025d10:	movabs rax,0x2aaaaaaaaaaaaaa
   140025d1a:	ret    
   140025d1b:	int3   
   140025d1c:	int3   
   140025d1d:	int3   
   140025d1e:	int3   
   140025d1f:	int3   
   140025d20:	movabs rax,0x7ffffffffffffff
   140025d2a:	ret    
   140025d2b:	int3   
   140025d2c:	int3   
   140025d2d:	int3   
   140025d2e:	int3   
   140025d2f:	int3   
   140025d30:	mov    rax,0xfffffffffffffffe
   140025d37:	ret    
   140025d38:	int3   
   140025d39:	int3   
   140025d3a:	int3   
   140025d3b:	int3   
   140025d3c:	int3   
   140025d3d:	int3   
   140025d3e:	int3   
   140025d3f:	int3   
   140025d40:	movabs rax,0xaaaaaaaaaaaaaaa
   140025d4a:	ret    
   140025d4b:	int3   
   140025d4c:	int3   
   140025d4d:	int3   
   140025d4e:	int3   
   140025d4f:	int3   
   140025d50:	movabs rax,0x555555555555555
   140025d5a:	ret    
   140025d5b:	int3   
   140025d5c:	int3   
   140025d5d:	int3   
   140025d5e:	int3   
   140025d5f:	int3   
   140025d60:	movabs rax,0x2aaaaaaaaaaaaaa
   140025d6a:	ret    
   140025d6b:	int3   
   140025d6c:	int3   
   140025d6d:	int3   
   140025d6e:	int3   
   140025d6f:	int3   
   140025d70:	movabs rax,0x7ffffffffffffff
   140025d7a:	ret    
   140025d7b:	int3   
   140025d7c:	int3   
   140025d7d:	int3   
   140025d7e:	int3   
   140025d7f:	int3   
   140025d80:	cmp    BYTE PTR [rcx+0x8a],0x0
   140025d87:	je     0x140025d8f
   140025d89:	mov    eax,0x7d00
   140025d8e:	ret    
   140025d8f:	xor    eax,eax
   140025d91:	cmp    BYTE PTR [rcx+0x8b],al
   140025d97:	sete   al
   140025d9a:	ret    
   140025d9b:	int3   
   140025d9c:	int3   
   140025d9d:	int3   
   140025d9e:	int3   
   140025d9f:	int3   
   140025da0:	rex.W jmp QWORD PTR [rip+0x106c9]        # 0x140036470
   140025da7:	int3   
   140025da8:	int3   
   140025da9:	int3   
   140025daa:	int3   
   140025dab:	int3   
   140025dac:	int3   
   140025dad:	int3   
   140025dae:	int3   
   140025daf:	int3   
   140025db0:	mov    QWORD PTR [rsp+0x8],rbx
   140025db5:	push   rdi
   140025db6:	sub    rsp,0x30
   140025dba:	xor    ebx,ebx
   140025dbc:	mov    ecx,r8d
   140025dbf:	mov    rdi,rdx
   140025dc2:	mov    DWORD PTR [rsp+0x20],ebx
   140025dc6:	call   QWORD PTR [rip+0x104f4]        # 0x1400362c0
   140025dcc:	mov    QWORD PTR [rdi+0x18],0xf
   140025dd4:	test   rax,rax
   140025dd7:	mov    QWORD PTR [rdi+0x10],rbx
   140025ddb:	lea    rdx,[rip+0x1493e]        # 0x14003a720
   140025de2:	cmovne rdx,rax
   140025de6:	mov    BYTE PTR [rdi],bl
   140025de8:	cmp    BYTE PTR [rdx],bl
   140025dea:	je     0x140025df9
   140025dec:	or     rbx,0xffffffffffffffff
   140025df0:	inc    rbx
   140025df3:	cmp    BYTE PTR [rdx+rbx*1],0x0
   140025df7:	jne    0x140025df0
   140025df9:	mov    r8,rbx
   140025dfc:	mov    rcx,rdi
   140025dff:	call   0x14001f070
   140025e04:	mov    rbx,QWORD PTR [rsp+0x40]
   140025e09:	mov    rax,rdi
   140025e0c:	add    rsp,0x30
   140025e10:	pop    rdi
   140025e11:	ret    
   140025e12:	int3   
   140025e13:	int3   
   140025e14:	int3   
   140025e15:	int3   
   140025e16:	int3   
   140025e17:	int3   
   140025e18:	int3   
   140025e19:	int3   
   140025e1a:	int3   
   140025e1b:	int3   
   140025e1c:	int3   
   140025e1d:	int3   
   140025e1e:	int3   
   140025e1f:	int3   
   140025e20:	rex push rbx
   140025e22:	sub    rsp,0x30
   140025e26:	xor    eax,eax
   140025e28:	mov    rbx,rdx
   140025e2b:	mov    DWORD PTR [rsp+0x20],eax
   140025e2f:	cmp    r8d,0x1
   140025e33:	jne    0x140025e5f
   140025e35:	mov    QWORD PTR [rdx+0x18],0xf
   140025e3d:	mov    QWORD PTR [rdx+0x10],rax
   140025e41:	mov    BYTE PTR [rdx],al
   140025e43:	lea    rdx,[rip+0x1492e]        # 0x14003a778
   140025e4a:	lea    r8d,[rax+0x15]
   140025e4e:	mov    rcx,rbx
   140025e51:	call   0x14001f070
   140025e56:	mov    rax,rbx
   140025e59:	add    rsp,0x30
   140025e5d:	pop    rbx
   140025e5e:	ret    
   140025e5f:	call   0x140025db0
   140025e64:	mov    rax,rbx
   140025e67:	add    rsp,0x30
   140025e6b:	pop    rbx
   140025e6c:	ret    
   140025e6d:	int3   
   140025e6e:	int3   
   140025e6f:	int3   
   140025e70:	mov    QWORD PTR [rsp+0x8],rbx
   140025e75:	push   rdi
   140025e76:	sub    rsp,0x30
   140025e7a:	xor    ebx,ebx
   140025e7c:	mov    ecx,r8d
   140025e7f:	mov    rdi,rdx
   140025e82:	mov    DWORD PTR [rsp+0x20],ebx
   140025e86:	call   QWORD PTR [rip+0x1043c]        # 0x1400362c8
   140025e8c:	mov    QWORD PTR [rdi+0x18],0xf
   140025e94:	test   rax,rax
   140025e97:	mov    QWORD PTR [rdi+0x10],rbx
   140025e9b:	lea    rdx,[rip+0x1487e]        # 0x14003a720
   140025ea2:	cmovne rdx,rax
   140025ea6:	mov    BYTE PTR [rdi],bl
   140025ea8:	cmp    BYTE PTR [rdx],bl
   140025eaa:	je     0x140025eb9
   140025eac:	or     rbx,0xffffffffffffffff
   140025eb0:	inc    rbx
   140025eb3:	cmp    BYTE PTR [rdx+rbx*1],0x0
   140025eb7:	jne    0x140025eb0
   140025eb9:	mov    r8,rbx
   140025ebc:	mov    rcx,rdi
   140025ebf:	call   0x14001f070
   140025ec4:	mov    rbx,QWORD PTR [rsp+0x40]
   140025ec9:	mov    rax,rdi
   140025ecc:	add    rsp,0x30
   140025ed0:	pop    rdi
   140025ed1:	ret    
   140025ed2:	int3   
   140025ed3:	int3   
   140025ed4:	int3   
   140025ed5:	int3   
   140025ed6:	int3   
   140025ed7:	int3   
   140025ed8:	int3   
   140025ed9:	int3   
   140025eda:	int3   
   140025edb:	int3   
   140025edc:	int3   
   140025edd:	int3   
   140025ede:	int3   
   140025edf:	int3   
   140025ee0:	rex push rbx
   140025ee2:	sub    rsp,0x30
   140025ee6:	mov    r8d,DWORD PTR [rcx]
   140025ee9:	mov    rcx,QWORD PTR [rcx+0x8]
   140025eed:	mov    rbx,rdx
   140025ef0:	mov    rax,QWORD PTR [rcx]
   140025ef3:	mov    DWORD PTR [rsp+0x20],0x0
   140025efb:	call   QWORD PTR [rax+0x10]
   140025efe:	mov    rax,rbx
   140025f01:	add    rsp,0x30
   140025f05:	pop    rbx
   140025f06:	ret    
   140025f07:	int3   
   140025f08:	int3   
   140025f09:	int3   
   140025f0a:	int3   
   140025f0b:	int3   
   140025f0c:	int3   
   140025f0d:	int3   
   140025f0e:	int3   
   140025f0f:	int3   
   140025f10:	mov    eax,0x1
   140025f15:	ret    
   140025f16:	int3   
   140025f17:	int3   
   140025f18:	int3   
   140025f19:	int3   
   140025f1a:	int3   
   140025f1b:	int3   
   140025f1c:	int3   
   140025f1d:	int3   
   140025f1e:	int3   
   140025f1f:	int3   
   140025f20:	mov    eax,0x578
   140025f25:	ret    
   140025f26:	int3   
   140025f27:	int3   
   140025f28:	int3   
   140025f29:	int3   
   140025f2a:	int3   
   140025f2b:	int3   
   140025f2c:	int3   
   140025f2d:	int3   
   140025f2e:	int3   
   140025f2f:	int3   
   140025f30:	xor    eax,eax
   140025f32:	ret    
   140025f33:	int3   
   140025f34:	int3   
   140025f35:	int3   
   140025f36:	int3   
   140025f37:	int3   
   140025f38:	int3   
   140025f39:	int3   
   140025f3a:	int3   
   140025f3b:	int3   
   140025f3c:	int3   
   140025f3d:	int3   
   140025f3e:	int3   
   140025f3f:	int3   
   140025f40:	xor    eax,eax
   140025f42:	ret    
   140025f43:	int3   
   140025f44:	int3   
   140025f45:	int3   
   140025f46:	int3   
   140025f47:	int3   
   140025f48:	int3   
   140025f49:	int3   
   140025f4a:	int3   
   140025f4b:	int3   
   140025f4c:	int3   
   140025f4d:	int3   
   140025f4e:	int3   
   140025f4f:	int3   
   140025f50:	xor    eax,eax
   140025f52:	ret    
   140025f53:	int3   
   140025f54:	int3   
   140025f55:	int3   
   140025f56:	int3   
   140025f57:	int3   
   140025f58:	int3   
   140025f59:	int3   
   140025f5a:	int3   
   140025f5b:	int3   
   140025f5c:	int3   
   140025f5d:	int3   
   140025f5e:	int3   
   140025f5f:	int3   
   140025f60:	mov    eax,0x1
   140025f65:	ret    
   140025f66:	int3   
   140025f67:	int3   
   140025f68:	int3   
   140025f69:	int3   
   140025f6a:	int3   
   140025f6b:	int3   
   140025f6c:	int3   
   140025f6d:	int3   
   140025f6e:	int3   
   140025f6f:	int3   
   140025f70:	mov    eax,0x578
   140025f75:	ret    
   140025f76:	int3   
   140025f77:	int3   
   140025f78:	int3   
   140025f79:	int3   
   140025f7a:	int3   
   140025f7b:	int3   
   140025f7c:	int3   
   140025f7d:	int3   
   140025f7e:	int3   
   140025f7f:	int3   
   140025f80:	cmp    BYTE PTR [rcx+0x8b],0x0
   140025f87:	jne    0x140025f96
   140025f89:	cmp    QWORD PTR [rcx+0x60],0x0
   140025f8e:	jne    0x140025f96
   140025f90:	mov    eax,0x1
   140025f95:	ret    
   140025f96:	xor    eax,eax
   140025f98:	ret    
   140025f99:	int3   
   140025f9a:	int3   
   140025f9b:	int3   
   140025f9c:	int3   
   140025f9d:	int3   
   140025f9e:	int3   
   140025f9f:	int3   
   140025fa0:	xor    eax,eax
   140025fa2:	ret    
   140025fa3:	int3   
   140025fa4:	int3   
   140025fa5:	int3   
   140025fa6:	int3   
   140025fa7:	int3   
   140025fa8:	int3   
   140025fa9:	int3   
   140025faa:	int3   
   140025fab:	int3   
   140025fac:	int3   
   140025fad:	int3   
   140025fae:	int3   
   140025faf:	int3   
   140025fb0:	mov    al,0x2d
   140025fb2:	ret    
   140025fb3:	int3   
   140025fb4:	int3   
   140025fb5:	int3   
   140025fb6:	int3   
   140025fb7:	int3   
   140025fb8:	int3   
   140025fb9:	int3   
   140025fba:	int3   
   140025fbb:	int3   
   140025fbc:	int3   
   140025fbd:	int3   
   140025fbe:	int3   
   140025fbf:	int3   
   140025fc0:	test   r8,r8
   140025fc3:	jne    0x140025fc9
   140025fc5:	mov    rax,rcx
   140025fc8:	ret    
   140025fc9:	rex.W jmp QWORD PTR [rip+0x10490]        # 0x140036460
   140025fd0:	mov    rax,rcx
   140025fd3:	ret    
   140025fd4:	int3   
   140025fd5:	int3   
   140025fd6:	int3   
   140025fd7:	int3   
   140025fd8:	int3   
   140025fd9:	int3   
   140025fda:	int3   
   140025fdb:	int3   
   140025fdc:	int3   
   140025fdd:	int3   
   140025fde:	int3   
   140025fdf:	int3   
   140025fe0:	mov    rax,rsp
   140025fe3:	push   rbp
   140025fe4:	lea    rbp,[rax-0x5f]
   140025fe8:	sub    rsp,0xf0
   140025fef:	mov    QWORD PTR [rbp+0x4f],0xfffffffffffffffe
   140025ff7:	mov    QWORD PTR [rax+0x8],rbx
   140025ffb:	mov    QWORD PTR [rax+0x10],rsi
   140025fff:	mov    QWORD PTR [rax+0x18],rdi
   140026003:	mov    rbx,rdx
   140026006:	mov    rdi,rcx
   140026009:	xor    esi,esi
   14002600b:	mov    DWORD PTR [rbp-0x39],esi
   14002600e:	cmp    QWORD PTR [rcx+0x28],rsi
   140026012:	mov    rdx,QWORD PTR [rip+0x106a7]        # 0x1400366c0
   140026019:	je     0x14002601f
   14002601b:	lea    rdx,[rcx+0x18]
   14002601f:	cmp    QWORD PTR [rcx+0x60],rsi
   140026023:	je     0x1400261a8
   140026029:	cmp    QWORD PTR [rcx+0x78],rsi
   14002602d:	je     0x1400261a8
   140026033:	mov    r8,rdx
   140026036:	lea    rdx,[rip+0x16a2b]        # 0x14003ca68
   14002603d:	lea    rcx,[rbp-0x11]
   140026041:	call   0x140003600
   140026046:	nop
   140026047:	lea    r8,[rip+0x16a16]        # 0x14003ca64
   14002604e:	mov    rdx,rax
   140026051:	lea    rcx,[rbp+0x2f]
   140026055:	call   0x1400034d0
   14002605a:	nop
   14002605b:	lea    r8,[rdi+0x68]
   14002605f:	mov    rdx,rax
   140026062:	lea    rcx,[rbp-0x31]
   140026066:	call   0x140003490
   14002606b:	nop
   14002606c:	lea    r8,[rip+0x169ed]        # 0x14003ca60
   140026073:	mov    rdx,rax
   140026076:	lea    rcx,[rbp-0x59]
   14002607a:	call   0x1400034d0
   14002607f:	nop
   140026080:	cmp    QWORD PTR [rbp-0x19],0x10
   140026085:	jb     0x140026090
   140026087:	mov    rcx,QWORD PTR [rbp-0x31]
   14002608b:	call   0x140030282
   140026090:	mov    QWORD PTR [rbp-0x19],0xf
   140026098:	mov    QWORD PTR [rbp-0x21],rsi
   14002609c:	mov    BYTE PTR [rbp-0x31],0x0
   1400260a0:	cmp    QWORD PTR [rbp+0x47],0x10
   1400260a5:	jb     0x1400260b0
   1400260a7:	mov    rcx,QWORD PTR [rbp+0x2f]
   1400260ab:	call   0x140030282
   1400260b0:	mov    QWORD PTR [rbp+0x47],0xf
   1400260b8:	mov    QWORD PTR [rbp+0x3f],rsi
   1400260bc:	mov    BYTE PTR [rbp+0x2f],0x0
   1400260c0:	cmp    QWORD PTR [rbp+0x7],0x10
   1400260c5:	jb     0x1400260d0
   1400260c7:	mov    rcx,QWORD PTR [rbp-0x11]
   1400260cb:	call   0x140030282
   1400260d0:	mov    QWORD PTR [rbp+0x7],0xf
   1400260d8:	mov    QWORD PTR [rbp-0x1],rsi
   1400260dc:	mov    BYTE PTR [rbp-0x11],0x0
   1400260e0:	cmp    QWORD PTR [rdi+0x38],0x0
   1400260e5:	je     0x14002615b
   1400260e7:	cmp    QWORD PTR [rdi+0x50],0x0
   1400260ec:	je     0x14002615b
   1400260ee:	lea    r8,[rdi+0x40]
   1400260f2:	lea    rdx,[rip+0x16977]        # 0x14003ca70
   1400260f9:	lea    rcx,[rbp+0xf]
   1400260fd:	call   0x140003600
   140026102:	nop
   140026103:	lea    r8,[rip+0x16962]        # 0x14003ca6c
   14002610a:	mov    rdx,rax
   14002610d:	lea    rcx,[rbp-0x79]
   140026111:	call   0x1400034d0
   140026116:	nop
   140026117:	or     r9,0xffffffffffffffff
   14002611b:	xor    r8d,r8d
   14002611e:	mov    rdx,rax
   140026121:	lea    rcx,[rbp-0x59]
   140026125:	call   0x14001eaf0
   14002612a:	nop
   14002612b:	cmp    QWORD PTR [rbp-0x61],0x10
   140026130:	jb     0x14002613b
   140026132:	mov    rcx,QWORD PTR [rbp-0x79]
   140026136:	call   0x140030282
   14002613b:	mov    QWORD PTR [rbp-0x61],0xf
   140026143:	mov    QWORD PTR [rbp-0x69],rsi
   140026147:	mov    BYTE PTR [rbp-0x79],0x0
   14002614b:	cmp    QWORD PTR [rbp+0x27],0x10
   140026150:	jb     0x14002615b
   140026152:	mov    rcx,QWORD PTR [rbp+0xf]
   140026156:	call   0x140030282
   14002615b:	mov    QWORD PTR [rbx+0x18],0xf
   140026163:	mov    QWORD PTR [rbx+0x10],rsi
   140026167:	mov    BYTE PTR [rbx],0x0
   14002616a:	mov    rcx,QWORD PTR [rbp-0x41]
   14002616e:	cmp    rcx,0x10
   140026172:	jae    0x140026190
   140026174:	mov    r8,QWORD PTR [rbp-0x49]
   140026178:	inc    r8
   14002617b:	je     0x140026197
   14002617d:	lea    rdx,[rbp-0x59]
   140026181:	mov    rcx,rbx
   140026184:	call   QWORD PTR [rip+0x102d6]        # 0x140036460
   14002618a:	mov    rcx,QWORD PTR [rbp-0x41]
   14002618e:	jmp    0x140026197
   140026190:	mov    rax,QWORD PTR [rbp-0x59]
   140026194:	mov    QWORD PTR [rbx],rax
   140026197:	mov    rax,QWORD PTR [rbp-0x49]
   14002619b:	mov    QWORD PTR [rbx+0x10],rax
   14002619f:	mov    QWORD PTR [rbx+0x18],rcx
   1400261a3:	jmp    0x140026239
   1400261a8:	cmp    QWORD PTR [rcx+0x38],rsi
   1400261ac:	je     0x14002621b
   1400261ae:	cmp    QWORD PTR [rcx+0x50],rsi
   1400261b2:	je     0x14002621b
   1400261b4:	lea    r8,[rip+0x168b5]        # 0x14003ca70
   1400261bb:	lea    rcx,[rbp+0xf]
   1400261bf:	call   0x140003520
   1400261c4:	nop
   1400261c5:	lea    r8,[rdi+0x40]
   1400261c9:	mov    rdx,rax
   1400261cc:	lea    rcx,[rbp-0x79]
   1400261d0:	call   0x140003490
   1400261d5:	nop
   1400261d6:	lea    r8,[rip+0x1688f]        # 0x14003ca6c
   1400261dd:	mov    rdx,rax
   1400261e0:	mov    rcx,rbx
   1400261e3:	call   0x1400034d0
   1400261e8:	nop
   1400261e9:	cmp    QWORD PTR [rbp-0x61],0x10
   1400261ee:	jb     0x1400261f9
   1400261f0:	mov    rcx,QWORD PTR [rbp-0x79]
   1400261f4:	call   0x140030282
   1400261f9:	mov    QWORD PTR [rbp-0x61],0xf
   140026201:	mov    QWORD PTR [rbp-0x69],rsi
   140026205:	mov    BYTE PTR [rbp-0x79],0x0
   140026209:	cmp    QWORD PTR [rbp+0x27],0x10
   14002620e:	jb     0x140026239
   140026210:	mov    rcx,QWORD PTR [rbp+0xf]
   140026214:	call   0x140030282
   140026219:	jmp    0x140026239
   14002621b:	mov    QWORD PTR [rbx+0x18],0xf
   140026223:	mov    QWORD PTR [rbx+0x10],rsi
   140026227:	mov    BYTE PTR [rbx],sil
   14002622a:	or     r9,0xffffffffffffffff
   14002622e:	xor    r8d,r8d
   140026231:	mov    rcx,rbx
   140026234:	call   0x14001ef20
   140026239:	mov    rax,rbx
   14002623c:	lea    r11,[rsp+0xf0]
   140026244:	mov    rbx,QWORD PTR [r11+0x10]
   140026248:	mov    rsi,QWORD PTR [r11+0x18]
   14002624c:	mov    rdi,QWORD PTR [r11+0x20]
   140026250:	mov    rsp,r11
   140026253:	pop    rbp
   140026254:	ret    
   140026255:	int3   
   140026256:	int3   
   140026257:	int3   
   140026258:	int3   
   140026259:	int3   
   14002625a:	int3   
   14002625b:	int3   
   14002625c:	int3   
   14002625d:	int3   
   14002625e:	int3   
   14002625f:	int3   
   140026260:	lea    rax,[rip+0x144b1]        # 0x14003a718
   140026267:	ret    
   140026268:	int3   
   140026269:	int3   
   14002626a:	int3   
   14002626b:	int3   
   14002626c:	int3   
   14002626d:	int3   
   14002626e:	int3   
   14002626f:	int3   
   140026270:	lea    rax,[rip+0x144f1]        # 0x14003a768
   140026277:	ret    
   140026278:	int3   
   140026279:	int3   
   14002627a:	int3   
   14002627b:	int3   
   14002627c:	int3   
   14002627d:	int3   
   14002627e:	int3   
   14002627f:	int3   
   140026280:	lea    rax,[rip+0x14541]        # 0x14003a7c8
   140026287:	ret    
   140026288:	int3   
   140026289:	int3   
   14002628a:	int3   
   14002628b:	int3   
   14002628c:	int3   
   14002628d:	int3   
   14002628e:	int3   
   14002628f:	int3   
   140026290:	mov    r11,rsp
   140026293:	push   rdi
   140026294:	sub    rsp,0x70
   140026298:	mov    QWORD PTR [r11-0x50],0xfffffffffffffffe
   1400262a0:	mov    QWORD PTR [r11+0x8],rbx
   1400262a4:	mov    QWORD PTR [r11+0x10],rsi
   1400262a8:	mov    rdi,rdx
   1400262ab:	xor    esi,esi
   1400262ad:	mov    DWORD PTR [rsp+0x20],esi
   1400262b1:	mov    rax,QWORD PTR [rcx]
   1400262b4:	test   rax,rax
   1400262b7:	jne    0x1400262d3
   1400262b9:	mov    QWORD PTR [r11-0x10],0xf
   1400262c1:	mov    QWORD PTR [r11-0x18],rsi
   1400262c5:	mov    BYTE PTR [rsp+0x50],sil
   1400262ca:	lea    rdx,[r11-0x28]
   1400262ce:	lea    ebx,[rsi+0x1]
   1400262d1:	jmp    0x14002631e
   1400262d3:	mov    rdx,QWORD PTR [rax+0x28]
   1400262d7:	test   rdx,rdx
   1400262da:	jne    0x1400262e0
   1400262dc:	lea    rdx,[rax+0x30]
   1400262e0:	mov    QWORD PTR [rsp+0x48],0xf
   1400262e9:	mov    QWORD PTR [rsp+0x40],rsi
   1400262ee:	mov    BYTE PTR [rsp+0x30],sil
   1400262f3:	cmp    BYTE PTR [rdx],sil
   1400262f6:	jne    0x1400262fd
   1400262f8:	mov    r8,rsi
   1400262fb:	jmp    0x14002630a
   1400262fd:	or     r8,0xffffffffffffffff
   140026301:	inc    r8
   140026304:	cmp    BYTE PTR [rdx+r8*1],sil
   140026308:	jne    0x140026301
   14002630a:	lea    rcx,[rsp+0x30]
   14002630f:	call   0x14001f070
   140026314:	lea    rdx,[rsp+0x30]
   140026319:	mov    ebx,0x2
   14002631e:	mov    rcx,rdi
   140026321:	call   0x140011010
   140026326:	or     ebx,0x4
   140026329:	test   bl,0x2
   14002632c:	je     0x140026356
   14002632e:	and    ebx,0xfffffffd
   140026331:	cmp    QWORD PTR [rsp+0x48],0x10
   140026337:	jb     0x140026343
   140026339:	mov    rcx,QWORD PTR [rsp+0x30]
   14002633e:	call   0x140030282
   140026343:	mov    QWORD PTR [rsp+0x48],0xf
   14002634c:	mov    QWORD PTR [rsp+0x40],rsi
   140026351:	mov    BYTE PTR [rsp+0x30],0x0
   140026356:	test   bl,0x1
   140026359:	je     0x14002636d
   14002635b:	cmp    QWORD PTR [rsp+0x68],0x10
   140026361:	jb     0x14002636d
   140026363:	mov    rcx,QWORD PTR [rsp+0x50]
   140026368:	call   0x140030282
   14002636d:	mov    rax,rdi
   140026370:	lea    r11,[rsp+0x70]
   140026375:	mov    rbx,QWORD PTR [r11+0x10]
   140026379:	mov    rsi,QWORD PTR [r11+0x18]
   14002637d:	mov    rsp,r11
   140026380:	pop    rdi
   140026381:	ret    
   140026382:	int3   
   140026383:	int3   
   140026384:	int3   
   140026385:	int3   
   140026386:	int3   
   140026387:	int3   
   140026388:	int3   
   140026389:	int3   
   14002638a:	int3   
   14002638b:	int3   
   14002638c:	int3   
   14002638d:	int3   
   14002638e:	int3   
   14002638f:	int3   
   140026390:	mov    DWORD PTR [rcx],0x0
   140026396:	mov    rax,rcx
   140026399:	ret    
   14002639a:	int3   
   14002639b:	int3   
   14002639c:	int3   
   14002639d:	int3   
   14002639e:	int3   
   14002639f:	int3   
   1400263a0:	lea    rax,[rip+0x16ce9]        # 0x14003d090
   1400263a7:	ret    
   1400263a8:	int3   
   1400263a9:	int3   
   1400263aa:	int3   
   1400263ab:	int3   
   1400263ac:	int3   
   1400263ad:	int3   
   1400263ae:	int3   
   1400263af:	int3   
   1400263b0:	mov    rax,QWORD PTR [rcx+0x88]
   1400263b7:	ret    
   1400263b8:	int3   
   1400263b9:	int3   
   1400263ba:	int3   
   1400263bb:	int3   
   1400263bc:	int3   
   1400263bd:	int3   
   1400263be:	int3   
   1400263bf:	int3   
   1400263c0:	mov    rax,QWORD PTR [rcx+0x88]
   1400263c7:	ret    
   1400263c8:	int3   
   1400263c9:	int3   
   1400263ca:	int3   
   1400263cb:	int3   
   1400263cc:	int3   
   1400263cd:	int3   
   1400263ce:	int3   
   1400263cf:	int3   
   1400263d0:	mov    rax,QWORD PTR [rcx+0x78]
   1400263d4:	ret    
   1400263d5:	int3   
   1400263d6:	int3   
   1400263d7:	int3   
   1400263d8:	int3   
   1400263d9:	int3   
   1400263da:	int3   
   1400263db:	int3   
   1400263dc:	int3   
   1400263dd:	int3   
   1400263de:	int3   
   1400263df:	int3   
   1400263e0:	mov    rax,QWORD PTR [rcx+0x80]
   1400263e7:	ret    
   1400263e8:	int3   
   1400263e9:	int3   
   1400263ea:	int3   
   1400263eb:	int3   
   1400263ec:	int3   
   1400263ed:	int3   
   1400263ee:	int3   
   1400263ef:	int3   
   1400263f0:	lea    rax,[rcx+0x68]
   1400263f4:	ret    
   1400263f5:	int3   
   1400263f6:	int3   
   1400263f7:	int3   
   1400263f8:	int3   
   1400263f9:	int3   
   1400263fa:	int3   
   1400263fb:	int3   
   1400263fc:	int3   
   1400263fd:	int3   
   1400263fe:	int3   
   1400263ff:	int3   
   140026400:	lea    rax,[rcx+0x8]
   140026404:	ret    
   140026405:	int3   
   140026406:	int3   
   140026407:	int3   
   140026408:	int3   
   140026409:	int3   
   14002640a:	int3   
   14002640b:	int3   
   14002640c:	int3   
   14002640d:	int3   
   14002640e:	int3   
   14002640f:	int3   
   140026410:	ret    0x0
   140026413:	int3   
   140026414:	int3   
   140026415:	int3   
   140026416:	int3   
   140026417:	int3   
   140026418:	int3   
   140026419:	int3   
   14002641a:	int3   
   14002641b:	int3   
   14002641c:	int3   
   14002641d:	int3   
   14002641e:	int3   
   14002641f:	int3   
   140026420:	mov    eax,DWORD PTR [rcx+0x9bc]
   140026426:	xor    eax,DWORD PTR [rcx+0x630]
   14002642c:	jns    0x14002643a
   14002642e:	xor    eax,0x1908b0df
   140026433:	add    eax,eax
   140026435:	or     eax,0x1
   140026438:	jmp    0x14002643c
   14002643a:	add    eax,eax
   14002643c:	and    DWORD PTR [rcx],0x80000000
   140026442:	btr    eax,0x1f
   140026446:	or     DWORD PTR [rcx],eax
   140026448:	xor    eax,eax
   14002644a:	nop    WORD PTR [rax+rax*1+0x0]
   140026450:	cmp    DWORD PTR [rcx+rax*4],0x0
   140026454:	jne    0x140026467
   140026456:	inc    rax
   140026459:	cmp    rax,0x270
   14002645f:	jb     0x140026450
   140026461:	mov    DWORD PTR [rcx],0x80000000
   140026467:	ret    
   140026468:	int3   
   140026469:	int3   
   14002646a:	int3   
   14002646b:	int3   
   14002646c:	int3   
   14002646d:	int3   
   14002646e:	int3   
   14002646f:	int3   
   140026470:	lea    rax,[rip+0x16bf9]        # 0x14003d070
   140026477:	ret    
   140026478:	int3   
   140026479:	int3   
   14002647a:	int3   
   14002647b:	int3   
   14002647c:	int3   
   14002647d:	int3   
   14002647e:	int3   
   14002647f:	int3   
   140026480:	mov    DWORD PTR [rcx],0xfffffffe
   140026486:	mov    rax,rcx
   140026489:	ret    
   14002648a:	int3   
   14002648b:	int3   
   14002648c:	int3   
   14002648d:	int3   
   14002648e:	int3   
   14002648f:	int3   
   140026490:	xor    eax,eax
   140026492:	cmp    DWORD PTR [rcx],0xffffffff
   140026495:	cmovne eax,DWORD PTR [rcx]
   140026498:	ret    
   140026499:	int3   
   14002649a:	int3   
   14002649b:	int3   
   14002649c:	int3   
   14002649d:	int3   
   14002649e:	int3   
   14002649f:	int3   
   1400264a0:	mov    rax,QWORD PTR [rcx+0x20]
   1400264a4:	test   rax,rax
   1400264a7:	je     0x1400264be
   1400264a9:	add    rax,0x11
   1400264ad:	je     0x1400264be
   1400264af:	add    rax,0xffffffffffffffef
   1400264b3:	mov    rax,QWORD PTR [rax+0x8]
   1400264b7:	mov    QWORD PTR [rdx],rax
   1400264ba:	mov    rax,rdx
   1400264bd:	ret    
   1400264be:	xor    eax,eax
   1400264c0:	mov    rax,QWORD PTR [rax+0x8]
   1400264c4:	mov    QWORD PTR [rdx],rax
   1400264c7:	mov    rax,rdx
   1400264ca:	ret    
   1400264cb:	int3   
   1400264cc:	int3   
   1400264cd:	int3   
   1400264ce:	int3   
   1400264cf:	int3   
   1400264d0:	mov    rax,QWORD PTR [rcx+0x20]
   1400264d4:	test   rax,rax
   1400264d7:	je     0x1400264ee
   1400264d9:	add    rax,0x11
   1400264dd:	je     0x1400264ee
   1400264df:	add    rax,0xffffffffffffffef
   1400264e3:	mov    rax,QWORD PTR [rax+0x8]
   1400264e7:	mov    QWORD PTR [rdx],rax
   1400264ea:	mov    rax,rdx
   1400264ed:	ret    
   1400264ee:	xor    eax,eax
   1400264f0:	mov    rax,QWORD PTR [rax+0x8]
   1400264f4:	mov    QWORD PTR [rdx],rax
   1400264f7:	mov    rax,rdx
   1400264fa:	ret    
   1400264fb:	int3   
   1400264fc:	int3   
   1400264fd:	int3   
   1400264fe:	int3   
   1400264ff:	int3   
   140026500:	mov    rax,QWORD PTR [rcx]
   140026503:	mov    rcx,QWORD PTR [rax+0x10]
   140026507:	test   rcx,rcx
   14002650a:	je     0x140026513
   14002650c:	mov    rax,QWORD PTR [rcx]
   14002650f:	rex.W jmp QWORD PTR [rax+0x8]
   140026513:	ret    
   140026514:	int3   
   140026515:	int3   
   140026516:	int3   
   140026517:	int3   
   140026518:	int3   
   140026519:	int3   
   14002651a:	int3   
   14002651b:	int3   
   14002651c:	int3   
   14002651d:	int3   
   14002651e:	int3   
   14002651f:	int3   
   140026520:	ret    0x0
   140026523:	int3   
   140026524:	int3   
   140026525:	int3   
   140026526:	int3   
   140026527:	int3   
   140026528:	int3   
   140026529:	int3   
   14002652a:	int3   
   14002652b:	int3   
   14002652c:	int3   
   14002652d:	int3   
   14002652e:	int3   
   14002652f:	int3   
   140026530:	rex push rdi
   140026532:	sub    rsp,0x40
   140026536:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002653f:	mov    QWORD PTR [rsp+0x58],rbx
   140026544:	mov    rbx,rdx
   140026547:	mov    rdi,rcx
   14002654a:	test   rdx,rdx
   14002654d:	je     0x140026583
   14002654f:	mov    rcx,QWORD PTR [rdx]
   140026552:	test   rcx,rcx
   140026555:	je     0x14002655f
   140026557:	mov    rax,QWORD PTR [rcx]
   14002655a:	call   QWORD PTR [rax+0x8]
   14002655d:	jmp    0x140026566
   14002655f:	lea    rax,[rip+0x2ebca]        # 0x140055130
   140026566:	lea    rdx,[rip+0x2ec63]        # 0x1400551d0
   14002656d:	mov    rcx,rax
   140026570:	call   QWORD PTR [rip+0xfeba]        # 0x140036430
   140026576:	test   al,al
   140026578:	je     0x140026583
   14002657a:	mov    rbx,QWORD PTR [rbx]
   14002657d:	add    rbx,0x8
   140026581:	jmp    0x140026585
   140026583:	xor    ebx,ebx
   140026585:	mov    rcx,QWORD PTR [rdi+0x10]
   140026589:	test   rcx,rcx
   14002658c:	je     0x1400265a2
   14002658e:	cmp    rcx,rbx
   140026591:	je     0x1400265a2
   140026593:	or     r9,0xffffffffffffffff
   140026597:	xor    r8d,r8d
   14002659a:	mov    rdx,rbx
   14002659d:	call   0x14001ef20
   1400265a2:	cmp    QWORD PTR [rdi+0x90],0x0
   1400265aa:	je     0x1400265fc
   1400265ac:	mov    rax,QWORD PTR [rdi+0x90]
   1400265b3:	test   rax,rax
   1400265b6:	jne    0x1400265eb
   1400265b8:	lea    rax,[rip+0x142d9]        # 0x14003a898
   1400265bf:	mov    QWORD PTR [rsp+0x50],rax
   1400265c4:	lea    rdx,[rsp+0x50]
   1400265c9:	lea    rcx,[rsp+0x28]
   1400265ce:	call   QWORD PTR [rip+0xfe7c]        # 0x140036450
   1400265d4:	lea    rax,[rip+0x142ad]        # 0x14003a888
   1400265db:	mov    QWORD PTR [rsp+0x28],rax
   1400265e0:	lea    rcx,[rsp+0x28]
   1400265e5:	call   0x14000deb0
   1400265ea:	nop
   1400265eb:	and    rax,0xfffffffffffffffe
   1400265ef:	lea    rcx,[rdi+0x98]
   1400265f6:	mov    rdx,rbx
   1400265f9:	call   QWORD PTR [rax+0x8]
   1400265fc:	mov    rbx,QWORD PTR [rsp+0x58]
   140026601:	add    rsp,0x40
   140026605:	pop    rdi
   140026606:	ret    
   140026607:	int3   
   140026608:	int3   
   140026609:	int3   
   14002660a:	int3   
   14002660b:	int3   
   14002660c:	int3   
   14002660d:	int3   
   14002660e:	int3   
   14002660f:	int3   
   140026610:	lea    rax,[rcx+0x70]
   140026614:	ret    
   140026615:	int3   
   140026616:	int3   
   140026617:	int3   
   140026618:	int3   
   140026619:	int3   
   14002661a:	int3   
   14002661b:	int3   
   14002661c:	int3   
   14002661d:	int3   
   14002661e:	int3   
   14002661f:	int3   
   140026620:	lea    rax,[rcx+0x70]
   140026624:	ret    
   140026625:	int3   
   140026626:	int3   
   140026627:	int3   
   140026628:	int3   
   140026629:	int3   
   14002662a:	int3   
   14002662b:	int3   
   14002662c:	int3   
   14002662d:	int3   
   14002662e:	int3   
   14002662f:	int3   
   140026630:	lea    rax,[rcx+0x70]
   140026634:	ret    
   140026635:	int3   
   140026636:	int3   
   140026637:	int3   
   140026638:	int3   
   140026639:	int3   
   14002663a:	int3   
   14002663b:	int3   
   14002663c:	int3   
   14002663d:	int3   
   14002663e:	int3   
   14002663f:	int3   
   140026640:	lea    rax,[rcx+0x70]
   140026644:	ret    
   140026645:	int3   
   140026646:	int3   
   140026647:	int3   
   140026648:	int3   
   140026649:	int3   
   14002664a:	int3   
   14002664b:	int3   
   14002664c:	int3   
   14002664d:	int3   
   14002664e:	int3   
   14002664f:	int3   
   140026650:	sub    rsp,0x68
   140026654:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002665d:	mov    QWORD PTR [rsp+0x58],0xf
   140026666:	mov    QWORD PTR [rsp+0x50],0x0
   14002666f:	mov    BYTE PTR [rsp+0x40],0x0
   140026674:	mov    r8d,0x28
   14002667a:	lea    rdx,[rip+0x14437]        # 0x14003aab8
   140026681:	lea    rcx,[rsp+0x40]
   140026686:	call   0x14001f070
   14002668b:	nop
   14002668c:	lea    rax,[rsp+0x40]
   140026691:	cmp    QWORD PTR [rsp+0x58],0x10
   140026697:	cmovae rax,QWORD PTR [rsp+0x40]
   14002669d:	mov    QWORD PTR [rsp+0x88],rax
   1400266a5:	lea    rdx,[rsp+0x88]
   1400266ad:	lea    rcx,[rsp+0x28]
   1400266b2:	call   QWORD PTR [rip+0xfd98]        # 0x140036450
   1400266b8:	lea    rax,[rip+0x13f81]        # 0x14003a640
   1400266bf:	mov    QWORD PTR [rsp+0x28],rax
   1400266c4:	cmp    QWORD PTR [rsp+0x58],0x10
   1400266ca:	jb     0x1400266d6
   1400266cc:	mov    rcx,QWORD PTR [rsp+0x40]
   1400266d1:	call   0x140030282
   1400266d6:	mov    QWORD PTR [rsp+0x58],0xf
   1400266df:	mov    QWORD PTR [rsp+0x50],0x0
   1400266e8:	mov    BYTE PTR [rsp+0x40],0x0
   1400266ed:	lea    rax,[rip+0x143b4]        # 0x14003aaa8
   1400266f4:	mov    QWORD PTR [rsp+0x28],rax
   1400266f9:	lea    rcx,[rsp+0x28]
   1400266fe:	call   0x14000de30
   140026703:	int3   
   140026704:	int3   
   140026705:	int3   
   140026706:	int3   
   140026707:	int3   
   140026708:	int3   
   140026709:	int3   
   14002670a:	int3   
   14002670b:	int3   
   14002670c:	int3   
   14002670d:	int3   
   14002670e:	int3   
   14002670f:	int3   
   140026710:	sub    rsp,0x68
   140026714:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002671d:	mov    QWORD PTR [rsp+0x58],0xf
   140026726:	mov    QWORD PTR [rsp+0x50],0x0
   14002672f:	mov    BYTE PTR [rsp+0x40],0x0
   140026734:	mov    r8d,0x27
   14002673a:	lea    rdx,[rip+0x143bf]        # 0x14003ab00
   140026741:	lea    rcx,[rsp+0x40]
   140026746:	call   0x14001f070
   14002674b:	nop
   14002674c:	lea    rax,[rsp+0x40]
   140026751:	cmp    QWORD PTR [rsp+0x58],0x10
   140026757:	cmovae rax,QWORD PTR [rsp+0x40]
   14002675d:	mov    QWORD PTR [rsp+0x88],rax
   140026765:	lea    rdx,[rsp+0x88]
   14002676d:	lea    rcx,[rsp+0x28]
   140026772:	call   QWORD PTR [rip+0xfcd8]        # 0x140036450
   140026778:	lea    rax,[rip+0x13ec1]        # 0x14003a640
   14002677f:	mov    QWORD PTR [rsp+0x28],rax
   140026784:	cmp    QWORD PTR [rsp+0x58],0x10
   14002678a:	jb     0x140026796
   14002678c:	mov    rcx,QWORD PTR [rsp+0x40]
   140026791:	call   0x140030282
   140026796:	mov    QWORD PTR [rsp+0x58],0xf
   14002679f:	mov    QWORD PTR [rsp+0x50],0x0
   1400267a8:	mov    BYTE PTR [rsp+0x40],0x0
   1400267ad:	lea    rax,[rip+0x1433c]        # 0x14003aaf0
   1400267b4:	mov    QWORD PTR [rsp+0x28],rax
   1400267b9:	lea    rcx,[rsp+0x28]
   1400267be:	call   0x14000de70
   1400267c3:	int3   
   1400267c4:	int3   
   1400267c5:	int3   
   1400267c6:	int3   
   1400267c7:	int3   
   1400267c8:	int3   
   1400267c9:	int3   
   1400267ca:	int3   
   1400267cb:	int3   
   1400267cc:	int3   
   1400267cd:	int3   
   1400267ce:	int3   
   1400267cf:	int3   
   1400267d0:	rex push rdi
   1400267d2:	sub    rsp,0x30
   1400267d6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400267df:	mov    QWORD PTR [rsp+0x48],rbx
   1400267e4:	mov    eax,r8d
   1400267e7:	mov    r10,rdx
   1400267ea:	mov    rbx,rcx
   1400267ed:	cmp    QWORD PTR [rcx+0x90],0x0
   1400267f5:	jne    0x1400268ce
   1400267fb:	mov    r8d,r9d
   1400267fe:	mov    edx,eax
   140026800:	mov    rcx,r10
   140026803:	call   QWORD PTR [rip+0xf907]        # 0x140036110
   140026809:	mov    rdi,rax
   14002680c:	test   rax,rax
   14002680f:	je     0x1400268ce
   140026815:	mov    BYTE PTR [rbx+0x88],0x1
   14002681c:	mov    BYTE PTR [rbx+0x81],0x0
   140026823:	mov    rcx,rbx
   140026826:	call   QWORD PTR [rip+0xf97c]        # 0x1400361a8
   14002682c:	lea    rcx,[rdi+0x10]
   140026830:	lea    rdx,[rdi+0x8]
   140026834:	mov    QWORD PTR [rbx+0x18],rcx
   140026838:	mov    QWORD PTR [rbx+0x20],rcx
   14002683c:	mov    QWORD PTR [rbx+0x38],rdi
   140026840:	mov    QWORD PTR [rbx+0x40],rdi
   140026844:	mov    QWORD PTR [rbx+0x50],rdx
   140026848:	mov    QWORD PTR [rbx+0x58],rdx
   14002684c:	mov    QWORD PTR [rbx+0x90],rdi
   140026853:	mov    eax,DWORD PTR [rip+0x31167]        # 0x1400579c0
   140026859:	mov    DWORD PTR [rbx+0x84],eax
   14002685f:	mov    QWORD PTR [rbx+0x78],0x0
   140026867:	lea    rdx,[rsp+0x40]
   14002686c:	mov    rcx,rbx
   14002686f:	call   QWORD PTR [rip+0xf96b]        # 0x1400361e0
   140026875:	nop
   140026876:	mov    rcx,rax
   140026879:	call   0x14000e510
   14002687e:	mov    rdi,rax
   140026881:	mov    rcx,rax
   140026884:	call   QWORD PTR [rip+0xf9fe]        # 0x140036288
   14002688a:	test   al,al
   14002688c:	je     0x140026898
   14002688e:	mov    QWORD PTR [rbx+0x78],0x0
   140026896:	jmp    0x1400268a6
   140026898:	mov    QWORD PTR [rbx+0x78],rdi
   14002689c:	mov    rcx,rbx
   14002689f:	call   QWORD PTR [rip+0xf903]        # 0x1400361a8
   1400268a5:	nop
   1400268a6:	mov    rcx,QWORD PTR [rsp+0x40]
   1400268ab:	test   rcx,rcx
   1400268ae:	je     0x1400268c9
   1400268b0:	mov    rax,QWORD PTR [rcx]
   1400268b3:	call   QWORD PTR [rax+0x10]
   1400268b6:	test   rax,rax
   1400268b9:	je     0x1400268c9
   1400268bb:	mov    r8,QWORD PTR [rax]
   1400268be:	mov    edx,0x1
   1400268c3:	mov    rcx,rax
   1400268c6:	call   QWORD PTR [r8]
   1400268c9:	mov    rax,rbx
   1400268cc:	jmp    0x1400268d0
   1400268ce:	xor    eax,eax
   1400268d0:	mov    rbx,QWORD PTR [rsp+0x48]
   1400268d5:	add    rsp,0x30
   1400268d9:	pop    rdi
   1400268da:	ret    
   1400268db:	int3   
   1400268dc:	int3   
   1400268dd:	int3   
   1400268de:	int3   
   1400268df:	int3   
   1400268e0:	mov    r11,rsp
   1400268e3:	push   rdi
   1400268e4:	sub    rsp,0x40
   1400268e8:	mov    QWORD PTR [r11-0x28],0xfffffffffffffffe
   1400268f0:	mov    QWORD PTR [r11+0x8],rbx
   1400268f4:	mov    QWORD PTR [r11+0x10],rsi
   1400268f8:	mov    rsi,rdx
   1400268fb:	mov    rdi,rcx
   1400268fe:	mov    eax,0x80
   140026903:	cmp    r8,0xffffffffffffffff
   140026907:	cmove  r8,rax
   14002690b:	mov    r10d,0x4
   140026911:	cmp    r9,0xffffffffffffffff
   140026915:	cmovne r10,r9
   140026919:	mov    QWORD PTR [r11+0x20],r10
   14002691d:	mov    QWORD PTR [r11+0x18],0x2
   140026925:	lea    rax,[r11+0x20]
   140026929:	lea    rcx,[r11+0x18]
   14002692d:	cmp    r10,0x2
   140026931:	cmovle rax,rcx
   140026935:	mov    rcx,QWORD PTR [rax]
   140026938:	mov    QWORD PTR [rdi+0xa0],rcx
   14002693f:	mov    eax,0x1
   140026944:	test   r8,r8
   140026947:	cmovne rax,r8
   14002694b:	add    rax,rcx
   14002694e:	movsxd rbx,eax
   140026951:	cmp    QWORD PTR [rdi+0x98],rbx
   140026958:	je     0x14002699a
   14002695a:	xor    eax,eax
   14002695c:	test   rbx,rbx
   14002695f:	je     0x14002697b
   140026961:	cmp    rbx,0xffffffffffffffff
   140026965:	ja     0x140026974
   140026967:	mov    rcx,rbx
   14002696a:	call   0x14003027c
   14002696f:	test   rax,rax
   140026972:	jne    0x14002697b
   140026974:	call   QWORD PTR [rip+0xf89e]        # 0x140036218
   14002697a:	int3   
   14002697b:	mov    QWORD PTR [rdi+0x98],rbx
   140026982:	mov    rcx,QWORD PTR [rdi+0x90]
   140026989:	mov    QWORD PTR [rdi+0x90],rax
   140026990:	test   rcx,rcx
   140026993:	je     0x14002699a
   140026995:	call   0x140030282
   14002699a:	mov    rax,QWORD PTR [rdi]
   14002699d:	mov    rcx,rdi
   1400269a0:	call   QWORD PTR [rax+0xb0]
   1400269a6:	mov    rax,QWORD PTR [rsi]
   1400269a9:	mov    QWORD PTR [rsp+0x28],rax
   1400269ae:	mov    rax,QWORD PTR [rsi+0x8]
   1400269b2:	mov    QWORD PTR [rsp+0x30],rax
   1400269b7:	test   rax,rax
   1400269ba:	je     0x1400269c0
   1400269bc:	lock inc DWORD PTR [rax+0x8]
   1400269c0:	lea    rcx,[rdi+0x70]
   1400269c4:	lea    rdx,[rsp+0x28]
   1400269c9:	call   0x14002a420
   1400269ce:	nop
   1400269cf:	mov    rcx,QWORD PTR [rsp+0x30]
   1400269d4:	test   rcx,rcx
   1400269d7:	je     0x1400269fe
   1400269d9:	lock dec DWORD PTR [rcx+0x8]
   1400269dd:	jne    0x1400269fe
   1400269df:	mov    rbx,QWORD PTR [rsp+0x30]
   1400269e4:	mov    rax,QWORD PTR [rbx]
   1400269e7:	mov    rcx,rbx
   1400269ea:	call   QWORD PTR [rax+0x8]
   1400269ed:	lock dec DWORD PTR [rbx+0xc]
   1400269f1:	jne    0x1400269fe
   1400269f3:	mov    rcx,QWORD PTR [rsp+0x30]
   1400269f8:	mov    rax,QWORD PTR [rcx]
   1400269fb:	call   QWORD PTR [rax+0x10]
   1400269fe:	or     DWORD PTR [rdi+0xa8],0x1
   140026a05:	and    DWORD PTR [rdi+0x68],0xfffffff8
   140026a09:	mov    rbx,QWORD PTR [rsp+0x50]
   140026a0e:	mov    rsi,QWORD PTR [rsp+0x58]
   140026a13:	add    rsp,0x40
   140026a17:	pop    rdi
   140026a18:	ret    
   140026a19:	int3   
   140026a1a:	int3   
   140026a1b:	int3   
   140026a1c:	int3   
   140026a1d:	int3   
   140026a1e:	int3   
   140026a1f:	int3   
   140026a20:	mov    r11,rsp
   140026a23:	push   rdi
   140026a24:	sub    rsp,0x40
   140026a28:	mov    QWORD PTR [r11-0x28],0xfffffffffffffffe
   140026a30:	mov    QWORD PTR [r11+0x8],rbx
   140026a34:	mov    QWORD PTR [r11+0x10],rsi
   140026a38:	mov    rsi,rdx
   140026a3b:	mov    rdi,rcx
   140026a3e:	mov    eax,0x80
   140026a43:	cmp    r8,0xffffffffffffffff
   140026a47:	cmove  r8,rax
   140026a4b:	mov    r10d,0x4
   140026a51:	cmp    r9,0xffffffffffffffff
   140026a55:	cmovne r10,r9
   140026a59:	mov    QWORD PTR [r11+0x20],r10
   140026a5d:	mov    QWORD PTR [r11+0x18],0x2
   140026a65:	lea    rax,[r11+0x20]
   140026a69:	lea    rcx,[r11+0x18]
   140026a6d:	cmp    r10,0x2
   140026a71:	cmovle rax,rcx
   140026a75:	mov    rcx,QWORD PTR [rax]
   140026a78:	mov    QWORD PTR [rdi+0xa0],rcx
   140026a7f:	mov    eax,0x1
   140026a84:	test   r8,r8
   140026a87:	cmovne rax,r8
   140026a8b:	add    rax,rcx
   140026a8e:	movsxd rbx,eax
   140026a91:	cmp    QWORD PTR [rdi+0x98],rbx
   140026a98:	je     0x140026ada
   140026a9a:	xor    eax,eax
   140026a9c:	test   rbx,rbx
   140026a9f:	je     0x140026abb
   140026aa1:	cmp    rbx,0xffffffffffffffff
   140026aa5:	ja     0x140026ab4
   140026aa7:	mov    rcx,rbx
   140026aaa:	call   0x14003027c
   140026aaf:	test   rax,rax
   140026ab2:	jne    0x140026abb
   140026ab4:	call   QWORD PTR [rip+0xf75e]        # 0x140036218
   140026aba:	int3   
   140026abb:	mov    QWORD PTR [rdi+0x98],rbx
   140026ac2:	mov    rcx,QWORD PTR [rdi+0x90]
   140026ac9:	mov    QWORD PTR [rdi+0x90],rax
   140026ad0:	test   rcx,rcx
   140026ad3:	je     0x140026ada
   140026ad5:	call   0x140030282
   140026ada:	mov    rax,QWORD PTR [rdi]
   140026add:	mov    rcx,rdi
   140026ae0:	call   QWORD PTR [rax+0xb0]
   140026ae6:	mov    rax,QWORD PTR [rsi]
   140026ae9:	mov    QWORD PTR [rsp+0x28],rax
   140026aee:	mov    rax,QWORD PTR [rsi+0x8]
   140026af2:	mov    QWORD PTR [rsp+0x30],rax
   140026af7:	test   rax,rax
   140026afa:	je     0x140026b00
   140026afc:	lock inc DWORD PTR [rax+0x8]
   140026b00:	lea    rcx,[rdi+0x70]
   140026b04:	lea    rdx,[rsp+0x28]
   140026b09:	call   0x14002a500
   140026b0e:	nop
   140026b0f:	mov    rcx,QWORD PTR [rsp+0x30]
   140026b14:	test   rcx,rcx
   140026b17:	je     0x140026b3e
   140026b19:	lock dec DWORD PTR [rcx+0x8]
   140026b1d:	jne    0x140026b3e
   140026b1f:	mov    rbx,QWORD PTR [rsp+0x30]
   140026b24:	mov    rax,QWORD PTR [rbx]
   140026b27:	mov    rcx,rbx
   140026b2a:	call   QWORD PTR [rax+0x8]
   140026b2d:	lock dec DWORD PTR [rbx+0xc]
   140026b31:	jne    0x140026b3e
   140026b33:	mov    rcx,QWORD PTR [rsp+0x30]
   140026b38:	mov    rax,QWORD PTR [rcx]
   140026b3b:	call   QWORD PTR [rax+0x10]
   140026b3e:	or     DWORD PTR [rdi+0xa8],0x1
   140026b45:	and    DWORD PTR [rdi+0x68],0xfffffff8
   140026b49:	mov    rbx,QWORD PTR [rsp+0x50]
   140026b4e:	mov    rsi,QWORD PTR [rsp+0x58]
   140026b53:	add    rsp,0x40
   140026b57:	pop    rdi
   140026b58:	ret    
   140026b59:	int3   
   140026b5a:	int3   
   140026b5b:	int3   
   140026b5c:	int3   
   140026b5d:	int3   
   140026b5e:	int3   
   140026b5f:	int3   
   140026b60:	mov    QWORD PTR [rsp+0x8],rbx
   140026b65:	push   rdi
   140026b66:	sub    rsp,0x20
   140026b6a:	cmp    r8,0xffffffffffffffff
   140026b6e:	mov    rbx,rcx
   140026b71:	mov    eax,0x1000
   140026b76:	cmove  r8,rax
   140026b7a:	cmp    r9,0xffffffffffffffff
   140026b7e:	lea    rcx,[rsp+0x40]
   140026b83:	mov    edx,0x4
   140026b88:	lea    rax,[rsp+0x48]
   140026b8d:	mov    QWORD PTR [rsp+0x40],0x2
   140026b96:	cmovne rdx,r9
   140026b9a:	cmp    rdx,0x2
   140026b9e:	mov    QWORD PTR [rsp+0x48],rdx
   140026ba3:	cmovle rax,rcx
   140026ba7:	test   r8,r8
   140026baa:	mov    rcx,QWORD PTR [rax]
   140026bad:	mov    eax,0x1
   140026bb2:	cmovne rax,r8
   140026bb6:	mov    QWORD PTR [rbx+0x90],rcx
   140026bbd:	add    rax,rcx
   140026bc0:	movsxd rdi,eax
   140026bc3:	cmp    QWORD PTR [rbx+0x88],rdi
   140026bca:	je     0x140026c0c
   140026bcc:	xor    eax,eax
   140026bce:	test   rdi,rdi
   140026bd1:	je     0x140026bed
   140026bd3:	cmp    rdi,0xffffffffffffffff
   140026bd7:	ja     0x140026be6
   140026bd9:	mov    rcx,rdi
   140026bdc:	call   0x14003027c
   140026be1:	test   rax,rax
   140026be4:	jne    0x140026bed
   140026be6:	call   QWORD PTR [rip+0xf62c]        # 0x140036218
   140026bec:	int3   
   140026bed:	mov    QWORD PTR [rbx+0x88],rdi
   140026bf4:	mov    rcx,QWORD PTR [rbx+0x80]
   140026bfb:	mov    QWORD PTR [rbx+0x80],rax
   140026c02:	test   rcx,rcx
   140026c05:	je     0x140026c0c
   140026c07:	call   0x140030282
   140026c0c:	mov    rax,QWORD PTR [rbx]
   140026c0f:	mov    rcx,rbx
   140026c12:	call   QWORD PTR [rax+0xb0]
   140026c18:	cmp    BYTE PTR [rbx+0x71],0x0
   140026c1c:	je     0x140026c22
   140026c1e:	mov    BYTE PTR [rbx+0x71],0x0
   140026c22:	movzx  eax,BYTE PTR [rsp+0x48]
   140026c27:	mov    BYTE PTR [rbx+0x70],al
   140026c2a:	mov    BYTE PTR [rbx+0x71],0x1
   140026c2e:	or     DWORD PTR [rbx+0x98],0x1
   140026c35:	and    DWORD PTR [rbx+0x68],0xfffffff8
   140026c39:	mov    rbx,QWORD PTR [rsp+0x30]
   140026c3e:	add    rsp,0x20
   140026c42:	pop    rdi
   140026c43:	ret    
   140026c44:	int3   
   140026c45:	int3   
   140026c46:	int3   
   140026c47:	int3   
   140026c48:	int3   
   140026c49:	int3   
   140026c4a:	int3   
   140026c4b:	int3   
   140026c4c:	int3   
   140026c4d:	int3   
   140026c4e:	int3   
   140026c4f:	int3   
   140026c50:	mov    QWORD PTR [rsp+0x8],rbx
   140026c55:	mov    QWORD PTR [rsp+0x10],rsi
   140026c5a:	push   rdi
   140026c5b:	sub    rsp,0x20
   140026c5f:	cmp    r8,0xffffffffffffffff
   140026c63:	mov    rbx,rcx
   140026c66:	mov    eax,0x1000
   140026c6b:	cmove  r8,rax
   140026c6f:	cmp    r9,0xffffffffffffffff
   140026c73:	lea    rcx,[rsp+0x40]
   140026c78:	mov    r10d,0x4
   140026c7e:	lea    rax,[rsp+0x48]
   140026c83:	mov    QWORD PTR [rsp+0x40],0x2
   140026c8c:	cmovne r10,r9
   140026c90:	mov    rsi,rdx
   140026c93:	cmp    r10,0x2
   140026c97:	mov    QWORD PTR [rsp+0x48],r10
   140026c9c:	cmovle rax,rcx
   140026ca0:	test   r8,r8
   140026ca3:	mov    rcx,QWORD PTR [rax]
   140026ca6:	mov    eax,0x1
   140026cab:	cmovne rax,r8
   140026caf:	mov    QWORD PTR [rbx+0x98],rcx
   140026cb6:	add    rax,rcx
   140026cb9:	movsxd rdi,eax
   140026cbc:	cmp    QWORD PTR [rbx+0x90],rdi
   140026cc3:	je     0x140026d05
   140026cc5:	xor    eax,eax
   140026cc7:	test   rdi,rdi
   140026cca:	je     0x140026ce6
   140026ccc:	cmp    rdi,0xffffffffffffffff
   140026cd0:	ja     0x140026cdf
   140026cd2:	mov    rcx,rdi
   140026cd5:	call   0x14003027c
   140026cda:	test   rax,rax
   140026cdd:	jne    0x140026ce6
   140026cdf:	call   QWORD PTR [rip+0xf533]        # 0x140036218
   140026ce5:	int3   
   140026ce6:	mov    QWORD PTR [rbx+0x90],rdi
   140026ced:	mov    rcx,QWORD PTR [rbx+0x88]
   140026cf4:	mov    QWORD PTR [rbx+0x88],rax
   140026cfb:	test   rcx,rcx
   140026cfe:	je     0x140026d05
   140026d00:	call   0x140030282
   140026d05:	mov    rax,QWORD PTR [rbx]
   140026d08:	mov    rcx,rbx
   140026d0b:	call   QWORD PTR [rax+0xb0]
   140026d11:	cmp    BYTE PTR [rbx+0x78],0x0
   140026d15:	mov    rax,QWORD PTR [rsi]
   140026d18:	je     0x140026d1e
   140026d1a:	mov    BYTE PTR [rbx+0x78],0x0
   140026d1e:	mov    rsi,QWORD PTR [rsp+0x38]
   140026d23:	mov    QWORD PTR [rbx+0x70],rax
   140026d27:	mov    BYTE PTR [rbx+0x78],0x1
   140026d2b:	or     DWORD PTR [rbx+0xa0],0x1
   140026d32:	and    DWORD PTR [rbx+0x68],0xfffffff8
   140026d36:	mov    rbx,QWORD PTR [rsp+0x30]
   140026d3b:	add    rsp,0x20
   140026d3f:	pop    rdi
   140026d40:	ret    
   140026d41:	int3   
   140026d42:	int3   
   140026d43:	int3   
   140026d44:	int3   
   140026d45:	int3   
   140026d46:	int3   
   140026d47:	int3   
   140026d48:	int3   
   140026d49:	int3   
   140026d4a:	int3   
   140026d4b:	int3   
   140026d4c:	int3   
   140026d4d:	int3   
   140026d4e:	int3   
   140026d4f:	int3   
   140026d50:	sub    rsp,0x78
   140026d54:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140026d5d:	test   BYTE PTR [rcx+0x98],0x1
   140026d64:	je     0x140026db2
   140026d66:	mov    DWORD PTR [rsp+0x30],0x1
   140026d6e:	lea    rax,[rip+0x2e293]        # 0x140055008
   140026d75:	mov    QWORD PTR [rsp+0x38],rax
   140026d7a:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140026d7f:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140026d85:	lea    r8,[rip+0x1860c]        # 0x14003f398
   140026d8c:	lea    rdx,[rsp+0x30]
   140026d91:	lea    rcx,[rsp+0x40]
   140026d96:	call   0x140016bb0
   140026d9b:	lea    rax,[rip+0x13a36]        # 0x14003a7d8
   140026da2:	mov    QWORD PTR [rsp+0x40],rax
   140026da7:	lea    rcx,[rsp+0x40]
   140026dac:	call   0x14000df70
   140026db1:	nop
   140026db2:	lea    rdx,[rsp+0x88]
   140026dba:	add    rsp,0x78
   140026dbe:	jmp    0x140026b60
   140026dc3:	int3   
   140026dc4:	int3   
   140026dc5:	int3   
   140026dc6:	int3   
   140026dc7:	int3   
   140026dc8:	int3   
   140026dc9:	int3   
   140026dca:	int3   
   140026dcb:	int3   
   140026dcc:	int3   
   140026dcd:	int3   
   140026dce:	int3   
   140026dcf:	int3   
   140026dd0:	sub    rsp,0x78
   140026dd4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140026ddd:	test   BYTE PTR [rcx+0xa8],0x1
   140026de4:	je     0x140026e32
   140026de6:	mov    DWORD PTR [rsp+0x30],0x1
   140026dee:	lea    rax,[rip+0x2e213]        # 0x140055008
   140026df5:	mov    QWORD PTR [rsp+0x38],rax
   140026dfa:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140026dff:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140026e05:	lea    r8,[rip+0x1858c]        # 0x14003f398
   140026e0c:	lea    rdx,[rsp+0x30]
   140026e11:	lea    rcx,[rsp+0x40]
   140026e16:	call   0x140016bb0
   140026e1b:	lea    rax,[rip+0x139b6]        # 0x14003a7d8
   140026e22:	mov    QWORD PTR [rsp+0x40],rax
   140026e27:	lea    rcx,[rsp+0x40]
   140026e2c:	call   0x14000df70
   140026e31:	nop
   140026e32:	add    rsp,0x78
   140026e36:	jmp    0x1400268e0
   140026e3b:	int3   
   140026e3c:	int3   
   140026e3d:	int3   
   140026e3e:	int3   
   140026e3f:	int3   
   140026e40:	sub    rsp,0x78
   140026e44:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140026e4d:	test   BYTE PTR [rcx+0xa8],0x1
   140026e54:	je     0x140026ea2
   140026e56:	mov    DWORD PTR [rsp+0x30],0x1
   140026e5e:	lea    rax,[rip+0x2e1a3]        # 0x140055008
   140026e65:	mov    QWORD PTR [rsp+0x38],rax
   140026e6a:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140026e6f:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140026e75:	lea    r8,[rip+0x1851c]        # 0x14003f398
   140026e7c:	lea    rdx,[rsp+0x30]
   140026e81:	lea    rcx,[rsp+0x40]
   140026e86:	call   0x140016bb0
   140026e8b:	lea    rax,[rip+0x13946]        # 0x14003a7d8
   140026e92:	mov    QWORD PTR [rsp+0x40],rax
   140026e97:	lea    rcx,[rsp+0x40]
   140026e9c:	call   0x14000df70
   140026ea1:	nop
   140026ea2:	add    rsp,0x78
   140026ea6:	jmp    0x140026a20
   140026eab:	int3   
   140026eac:	int3   
   140026ead:	int3   
   140026eae:	int3   
   140026eaf:	int3   
   140026eb0:	sub    rsp,0x78
   140026eb4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140026ebd:	test   BYTE PTR [rcx+0x98],0x1
   140026ec4:	je     0x140026f12
   140026ec6:	mov    DWORD PTR [rsp+0x30],0x1
   140026ece:	lea    rax,[rip+0x2e133]        # 0x140055008
   140026ed5:	mov    QWORD PTR [rsp+0x38],rax
   140026eda:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140026edf:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140026ee5:	lea    r8,[rip+0x184ac]        # 0x14003f398
   140026eec:	lea    rdx,[rsp+0x30]
   140026ef1:	lea    rcx,[rsp+0x40]
   140026ef6:	call   0x140016bb0
   140026efb:	lea    rax,[rip+0x138d6]        # 0x14003a7d8
   140026f02:	mov    QWORD PTR [rsp+0x40],rax
   140026f07:	lea    rcx,[rsp+0x40]
   140026f0c:	call   0x14000df70
   140026f11:	nop
   140026f12:	add    rsp,0x78
   140026f16:	jmp    0x140026b60
   140026f1b:	int3   
   140026f1c:	int3   
   140026f1d:	int3   
   140026f1e:	int3   
   140026f1f:	int3   
   140026f20:	sub    rsp,0x78
   140026f24:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140026f2d:	test   BYTE PTR [rcx+0xa0],0x1
   140026f34:	je     0x140026f82
   140026f36:	mov    DWORD PTR [rsp+0x30],0x1
   140026f3e:	lea    rax,[rip+0x2e0c3]        # 0x140055008
   140026f45:	mov    QWORD PTR [rsp+0x38],rax
   140026f4a:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140026f4f:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140026f55:	lea    r8,[rip+0x1843c]        # 0x14003f398
   140026f5c:	lea    rdx,[rsp+0x30]
   140026f61:	lea    rcx,[rsp+0x40]
   140026f66:	call   0x140016bb0
   140026f6b:	lea    rax,[rip+0x13866]        # 0x14003a7d8
   140026f72:	mov    QWORD PTR [rsp+0x40],rax
   140026f77:	lea    rcx,[rsp+0x40]
   140026f7c:	call   0x14000df70
   140026f81:	nop
   140026f82:	add    rsp,0x78
   140026f86:	jmp    0x140026c50
   140026f8b:	int3   
   140026f8c:	int3   
   140026f8d:	int3   
   140026f8e:	int3   
   140026f8f:	int3   
   140026f90:	mov    QWORD PTR [rsp+0x8],rbx
   140026f95:	push   rdi
   140026f96:	sub    rsp,0x20
   140026f9a:	mov    rbx,rdx
   140026f9d:	mov    rdi,rcx
   140026fa0:	call   QWORD PTR [rip+0xf6e2]        # 0x140036688
   140026fa6:	mov    QWORD PTR [rdi+0x80],rbx
   140026fad:	mov    rbx,QWORD PTR [rsp+0x30]
   140026fb2:	mov    rax,rdi
   140026fb5:	add    rsp,0x20
   140026fb9:	pop    rdi
   140026fba:	ret    
   140026fbb:	int3   
   140026fbc:	int3   
   140026fbd:	int3   
   140026fbe:	int3   
   140026fbf:	int3   
   140026fc0:	lea    rax,[rcx+0x90]
   140026fc7:	ret    
   140026fc8:	int3   
   140026fc9:	int3   
   140026fca:	int3   
   140026fcb:	int3   
   140026fcc:	int3   
   140026fcd:	int3   
   140026fce:	int3   
   140026fcf:	int3   
   140026fd0:	lea    rax,[rcx+0x90]
   140026fd7:	ret    
   140026fd8:	int3   
   140026fd9:	int3   
   140026fda:	int3   
   140026fdb:	int3   
   140026fdc:	int3   
   140026fdd:	int3   
   140026fde:	int3   
   140026fdf:	int3   
   140026fe0:	lea    rax,[rcx+0x80]
   140026fe7:	ret    
   140026fe8:	int3   
   140026fe9:	int3   
   140026fea:	int3   
   140026feb:	int3   
   140026fec:	int3   
   140026fed:	int3   
   140026fee:	int3   
   140026fef:	int3   
   140026ff0:	lea    rax,[rcx+0x88]
   140026ff7:	ret    
   140026ff8:	int3   
   140026ff9:	int3   
   140026ffa:	int3   
   140026ffb:	int3   
   140026ffc:	int3   
   140026ffd:	int3   
   140026ffe:	int3   
   140026fff:	int3   
   140027000:	mov    eax,DWORD PTR [rcx+0xa8]
   140027006:	shr    eax,1
   140027008:	and    eax,0x1
   14002700b:	ret    
   14002700c:	int3   
   14002700d:	int3   
   14002700e:	int3   
   14002700f:	int3   
   140027010:	mov    eax,DWORD PTR [rcx+0xa8]
   140027016:	shr    eax,1
   140027018:	and    eax,0x1
   14002701b:	ret    
   14002701c:	int3   
   14002701d:	int3   
   14002701e:	int3   
   14002701f:	int3   
   140027020:	mov    eax,DWORD PTR [rcx+0x98]
   140027026:	shr    eax,1
   140027028:	and    eax,0x1
   14002702b:	ret    
   14002702c:	int3   
   14002702d:	int3   
   14002702e:	int3   
   14002702f:	int3   
   140027030:	mov    eax,DWORD PTR [rcx+0xa0]
   140027036:	shr    eax,1
   140027038:	and    eax,0x1
   14002703b:	ret    
   14002703c:	int3   
   14002703d:	int3   
   14002703e:	int3   
   14002703f:	int3   
   140027040:	mov    rax,rsp
   140027043:	push   rbp
   140027044:	push   rdi
   140027045:	push   r12
   140027047:	push   r14
   140027049:	push   r15
   14002704b:	mov    rbp,rsp
   14002704e:	sub    rsp,0x70
   140027052:	mov    QWORD PTR [rbp-0x28],0xfffffffffffffffe
   14002705a:	mov    QWORD PTR [rax+0x8],rbx
   14002705e:	mov    QWORD PTR [rax+0x10],rsi
   140027062:	mov    r14d,edx
   140027065:	mov    rdi,rcx
   140027068:	cmp    edx,0xffffffff
   14002706b:	jne    0x140027074
   14002706d:	xor    eax,eax
   14002706f:	jmp    0x140027302
   140027074:	mov    rax,QWORD PTR [rcx+0x40]
   140027078:	mov    rcx,QWORD PTR [rax]
   14002707b:	test   rcx,rcx
   14002707e:	je     0x1400270af
   140027080:	mov    rdx,QWORD PTR [rdi+0x58]
   140027084:	movsxd r8,DWORD PTR [rdx]
   140027087:	lea    rax,[rcx+r8*1]
   14002708b:	cmp    rcx,rax
   14002708e:	jae    0x1400270af
   140027090:	lea    eax,[r8-0x1]
   140027094:	mov    DWORD PTR [rdx],eax
   140027096:	mov    rcx,QWORD PTR [rdi+0x40]
   14002709a:	mov    rdx,QWORD PTR [rcx]
   14002709d:	lea    rax,[rdx+0x1]
   1400270a1:	mov    QWORD PTR [rcx],rax
   1400270a4:	mov    BYTE PTR [rdx],r14b
   1400270a7:	mov    eax,r14d
   1400270aa:	jmp    0x140027302
   1400270af:	cmp    QWORD PTR [rdi+0x90],0x0
   1400270b7:	jne    0x1400270c2
   1400270b9:	or     rax,0xffffffffffffffff
   1400270bd:	jmp    0x140027302
   1400270c2:	mov    rax,QWORD PTR [rdi+0x18]
   1400270c6:	mov    rcx,QWORD PTR [rax]
   1400270c9:	lea    rax,[rdi+0x80]
   1400270d0:	cmp    rcx,rax
   1400270d3:	jne    0x1400270e9
   1400270d5:	mov    rdx,QWORD PTR [rdi+0x68]
   1400270d9:	mov    r9,QWORD PTR [rdi+0x70]
   1400270dd:	mov    r8,rdx
   1400270e0:	mov    rcx,rdi
   1400270e3:	call   QWORD PTR [rip+0xf0cf]        # 0x1400361b8
   1400270e9:	cmp    QWORD PTR [rdi+0x78],0x0
   1400270ee:	jne    0x140027110
   1400270f0:	movsx  ecx,r14b
   1400270f4:	mov    rdx,QWORD PTR [rdi+0x90]
   1400270fb:	call   QWORD PTR [rip+0xf1df]        # 0x1400362e0
   140027101:	or     rsi,0xffffffffffffffff
   140027105:	cmp    eax,esi
   140027107:	cmovne esi,r14d
   14002710b:	jmp    0x140027300
   140027110:	mov    BYTE PTR [rbp-0x30],r14b
   140027114:	mov    edx,0xf
   140027119:	mov    QWORD PTR [rbp-0x8],rdx
   14002711d:	mov    BYTE PTR [rbp-0x20],0x0
   140027121:	xor    ecx,ecx
   140027123:	mov    QWORD PTR [rbp-0x20],rcx
   140027127:	mov    QWORD PTR [rbp-0x10],0x8
   14002712f:	lea    rax,[rbp-0x20]
   140027133:	cmp    rdx,0x10
   140027137:	cmovae rax,rcx
   14002713b:	mov    BYTE PTR [rax+0x8],cl
   14002713e:	or     rsi,0xffffffffffffffff
   140027142:	xor    r12d,r12d
   140027145:	mov    rdx,QWORD PTR [rbp-0x8]
   140027149:	mov    r8,QWORD PTR [rbp-0x10]
   14002714d:	nop    DWORD PTR [rax]
   140027150:	lea    rax,[rbp-0x20]
   140027154:	cmp    rdx,0x10
   140027158:	cmovae rax,QWORD PTR [rbp-0x20]
   14002715d:	lea    rcx,[rbp-0x20]
   140027161:	cmovae rcx,QWORD PTR [rbp-0x20]
   140027166:	add    rax,r8
   140027169:	lea    rdx,[rbp+0x40]
   14002716d:	mov    QWORD PTR [rsp+0x38],rdx
   140027172:	mov    QWORD PTR [rsp+0x30],rax
   140027177:	mov    QWORD PTR [rsp+0x28],rcx
   14002717c:	lea    rax,[rbp+0x48]
   140027180:	mov    QWORD PTR [rsp+0x20],rax
   140027185:	lea    r9,[rbp-0x2f]
   140027189:	lea    r8,[rbp-0x30]
   14002718d:	lea    rdx,[rdi+0x84]
   140027194:	mov    rcx,QWORD PTR [rdi+0x78]
   140027198:	call   QWORD PTR [rip+0xf10a]        # 0x1400362a8
   14002719e:	test   eax,eax
   1400271a0:	js     0x1400272ed
   1400271a6:	cmp    eax,0x1
   1400271a9:	jg     0x1400272d0
   1400271af:	lea    rax,[rbp-0x20]
   1400271b3:	mov    r9,QWORD PTR [rbp-0x20]
   1400271b7:	mov    rdx,QWORD PTR [rbp-0x8]
   1400271bb:	cmp    rdx,0x10
   1400271bf:	cmovae rax,r9
   1400271c3:	mov    rbx,QWORD PTR [rbp+0x40]
   1400271c7:	sub    rbx,rax
   1400271ca:	je     0x1400271fa
   1400271cc:	lea    rcx,[rbp-0x20]
   1400271d0:	cmp    rdx,0x10
   1400271d4:	cmovae rcx,r9
   1400271d8:	mov    r9,QWORD PTR [rdi+0x90]
   1400271df:	mov    r8,rbx
   1400271e2:	mov    edx,0x1
   1400271e7:	call   QWORD PTR [rip+0xf30b]        # 0x1400364f8
   1400271ed:	mov    rdx,QWORD PTR [rbp-0x8]
   1400271f1:	cmp    rbx,rax
   1400271f4:	jne    0x1400272f1
   1400271fa:	mov    BYTE PTR [rdi+0x81],0x1
   140027201:	lea    rax,[rbp-0x30]
   140027205:	cmp    QWORD PTR [rbp+0x48],rax
   140027209:	jne    0x1400272cb
   14002720f:	mov    r8,QWORD PTR [rbp-0x10]
   140027213:	test   rbx,rbx
   140027216:	jne    0x140027150
   14002721c:	cmp    r8,0x20
   140027220:	jae    0x1400272f1
   140027226:	mov    rax,rsi
   140027229:	sub    rax,r8
   14002722c:	cmp    rax,0x8
   140027230:	jbe    0x1400272bd
   140027236:	lea    rbx,[r8+0x8]
   14002723a:	cmp    rbx,0xfffffffffffffffe
   14002723e:	ja     0x1400272af
   140027240:	cmp    rdx,rbx
   140027243:	jae    0x14002725b
   140027245:	mov    rdx,rbx
   140027248:	lea    rcx,[rbp-0x20]
   14002724c:	call   0x14001c600
   140027251:	mov    rdx,QWORD PTR [rbp-0x8]
   140027255:	mov    r8,QWORD PTR [rbp-0x10]
   140027259:	jmp    0x140027279
   14002725b:	test   rbx,rbx
   14002725e:	jne    0x140027282
   140027260:	mov    QWORD PTR [rbp-0x10],r12
   140027264:	lea    rax,[rbp-0x20]
   140027268:	cmp    rdx,0x10
   14002726c:	cmovae rax,QWORD PTR [rbp-0x20]
   140027271:	mov    BYTE PTR [rax],r12b
   140027274:	jmp    0x140027145
   140027279:	test   rbx,rbx
   14002727c:	je     0x140027150
   140027282:	lea    rax,[rbp-0x20]
   140027286:	cmp    rdx,0x10
   14002728a:	cmovae rax,QWORD PTR [rbp-0x20]
   14002728f:	xor    ecx,ecx
   140027291:	mov    QWORD PTR [r8+rax*1],rcx
   140027295:	mov    QWORD PTR [rbp-0x10],rbx
   140027299:	lea    rax,[rbp-0x20]
   14002729d:	cmp    QWORD PTR [rbp-0x8],0x10
   1400272a2:	cmovae rax,QWORD PTR [rbp-0x20]
   1400272a7:	mov    BYTE PTR [rbx+rax*1],cl
   1400272aa:	jmp    0x140027145
   1400272af:	lea    rcx,[rip+0x15662]        # 0x14003c918
   1400272b6:	call   QWORD PTR [rip+0xef64]        # 0x140036220
   1400272bc:	int3   
   1400272bd:	lea    rcx,[rip+0x15654]        # 0x14003c918
   1400272c4:	call   QWORD PTR [rip+0xef56]        # 0x140036220
   1400272ca:	int3   
   1400272cb:	mov    esi,r14d
   1400272ce:	jmp    0x1400272f1
   1400272d0:	cmp    eax,0x3
   1400272d3:	jne    0x1400272ed
   1400272d5:	movsx  ecx,BYTE PTR [rbp-0x30]
   1400272d9:	mov    rdx,QWORD PTR [rdi+0x90]
   1400272e0:	call   QWORD PTR [rip+0xeffa]        # 0x1400362e0
   1400272e6:	cmp    eax,0xffffffff
   1400272e9:	cmovne esi,r14d
   1400272ed:	mov    rdx,QWORD PTR [rbp-0x8]
   1400272f1:	cmp    rdx,0x10
   1400272f5:	jb     0x140027300
   1400272f7:	mov    rcx,QWORD PTR [rbp-0x20]
   1400272fb:	call   0x140030282
   140027300:	mov    eax,esi
   140027302:	lea    r11,[rsp+0x70]
   140027307:	mov    rbx,QWORD PTR [r11+0x30]
   14002730b:	mov    rsi,QWORD PTR [r11+0x38]
   14002730f:	mov    rsp,r11
   140027312:	pop    r15
   140027314:	pop    r14
   140027316:	pop    r12
   140027318:	pop    rdi
   140027319:	pop    rbp
   14002731a:	ret    
   14002731b:	int3   
   14002731c:	int3   
   14002731d:	int3   
   14002731e:	int3   
   14002731f:	int3   
   140027320:	rex push rbx
   140027322:	push   r14
   140027324:	sub    rsp,0x28
   140027328:	mov    eax,DWORD PTR [rcx+0x70]
   14002732b:	mov    r14d,edx
   14002732e:	mov    rbx,rcx
   140027331:	test   al,0x2
   140027333:	je     0x140027340
   140027335:	or     eax,0xffffffff
   140027338:	add    rsp,0x28
   14002733c:	pop    r14
   14002733e:	pop    rbx
   14002733f:	ret    
   140027340:	cmp    edx,0xffffffff
   140027343:	jne    0x14002734f
   140027345:	xor    eax,eax
   140027347:	add    rsp,0x28
   14002734b:	pop    r14
   14002734d:	pop    rbx
   14002734e:	ret    
   14002734f:	test   al,0x8
   140027351:	je     0x14002737e
   140027353:	mov    r9,QWORD PTR [rcx+0x40]
   140027357:	mov    rdx,QWORD PTR [r9]
   14002735a:	test   rdx,rdx
   14002735d:	je     0x14002737e
   14002735f:	mov    r8,QWORD PTR [rcx+0x68]
   140027363:	cmp    rdx,r8
   140027366:	jae    0x14002737e
   140027368:	mov    rax,QWORD PTR [rcx+0x58]
   14002736c:	movsxd rcx,DWORD PTR [rax]
   14002736f:	mov    QWORD PTR [r9],r8
   140027372:	mov    rax,QWORD PTR [rbx+0x58]
   140027376:	add    rcx,rdx
   140027379:	sub    ecx,r8d
   14002737c:	mov    DWORD PTR [rax],ecx
   14002737e:	mov    rax,QWORD PTR [rbx+0x40]
   140027382:	mov    rdx,QWORD PTR [rax]
   140027385:	test   rdx,rdx
   140027388:	je     0x1400273b0
   14002738a:	mov    rax,QWORD PTR [rbx+0x58]
   14002738e:	movsxd rcx,DWORD PTR [rax]
   140027391:	add    rcx,rdx
   140027394:	cmp    rdx,rcx
   140027397:	jae    0x1400273b0
   140027399:	mov    rcx,rbx
   14002739c:	call   QWORD PTR [rip+0xee0e]        # 0x1400361b0
   1400273a2:	mov    BYTE PTR [rax],r14b
   1400273a5:	mov    eax,r14d
   1400273a8:	add    rsp,0x28
   1400273ac:	pop    r14
   1400273ae:	pop    rbx
   1400273af:	ret    
   1400273b0:	mov    QWORD PTR [rsp+0x50],rdi
   1400273b5:	test   rdx,rdx
   1400273b8:	jne    0x1400273be
   1400273ba:	xor    edi,edi
   1400273bc:	jmp    0x1400273cf
   1400273be:	mov    rax,QWORD PTR [rbx+0x58]
   1400273c2:	movsxd rdi,DWORD PTR [rax]
   1400273c5:	mov    rax,QWORD PTR [rbx+0x18]
   1400273c9:	sub    rdi,QWORD PTR [rax]
   1400273cc:	add    rdi,rdx
   1400273cf:	mov    rcx,rdi
   1400273d2:	shr    rcx,1
   1400273d5:	cmp    rcx,0x20
   1400273d9:	jae    0x1400273e2
   1400273db:	mov    ecx,0x20
   1400273e0:	jmp    0x1400273f0
   1400273e2:	test   rcx,rcx
   1400273e5:	je     0x140027407
   1400273e7:	nop    WORD PTR [rax+rax*1+0x0]
   1400273f0:	mov    eax,0x7fffffff
   1400273f5:	sub    rax,rcx
   1400273f8:	cmp    rax,rdi
   1400273fb:	jae    0x140027402
   1400273fd:	shr    rcx,1
   140027400:	jne    0x1400273f0
   140027402:	test   rcx,rcx
   140027405:	jne    0x140027417
   140027407:	or     eax,0xffffffff
   14002740a:	mov    rdi,QWORD PTR [rsp+0x50]
   14002740f:	add    rsp,0x28
   140027413:	pop    r14
   140027415:	pop    rbx
   140027416:	ret    
   140027417:	mov    QWORD PTR [rsp+0x40],rbp
   14002741c:	lea    rbp,[rcx+rdi*1]
   140027420:	mov    QWORD PTR [rsp+0x48],rsi
   140027425:	xor    esi,esi
   140027427:	test   rbp,rbp
   14002742a:	je     0x140027449
   14002742c:	cmp    rbp,0xffffffffffffffff
   140027430:	ja     0x140027442
   140027432:	mov    rcx,rbp
   140027435:	call   0x14003027c
   14002743a:	mov    rsi,rax
   14002743d:	test   rax,rax
   140027440:	jne    0x140027449
   140027442:	call   QWORD PTR [rip+0xedd0]        # 0x140036218
   140027448:	int3   
   140027449:	mov    rax,QWORD PTR [rbx+0x18]
   14002744d:	mov    QWORD PTR [rsp+0x20],r15
   140027452:	mov    r15,QWORD PTR [rax]
   140027455:	test   rdi,rdi
   140027458:	je     0x14002746d
   14002745a:	mov    r8,rdi
   14002745d:	mov    rdx,r15
   140027460:	mov    rcx,rsi
   140027463:	call   0x14003048a
   140027468:	test   rdi,rdi
   14002746b:	jne    0x1400274ba
   14002746d:	mov    rax,QWORD PTR [rbx+0x20]
   140027471:	mov    QWORD PTR [rbx+0x68],rsi
   140027475:	mov    QWORD PTR [rax],rsi
   140027478:	mov    rax,QWORD PTR [rbx+0x40]
   14002747c:	mov    QWORD PTR [rax],rsi
   14002747f:	mov    rax,QWORD PTR [rbx+0x58]
   140027483:	mov    DWORD PTR [rax],ebp
   140027485:	mov    rax,QWORD PTR [rbx+0x18]
   140027489:	test   BYTE PTR [rbx+0x70],0x4
   14002748d:	mov    QWORD PTR [rax],rsi
   140027490:	mov    rax,QWORD PTR [rbx+0x38]
   140027494:	je     0x1400274a8
   140027496:	mov    QWORD PTR [rax],0x0
   14002749d:	mov    rax,QWORD PTR [rbx+0x50]
   1400274a1:	mov    DWORD PTR [rax],esi
   1400274a3:	jmp    0x140027540
   1400274a8:	mov    QWORD PTR [rax],rsi
   1400274ab:	mov    rax,QWORD PTR [rbx+0x50]
   1400274af:	mov    DWORD PTR [rax],0x1
   1400274b5:	jmp    0x140027540
   1400274ba:	mov    rcx,QWORD PTR [rbx+0x20]
   1400274be:	mov    rax,rsi
   1400274c1:	sub    rax,r15
   1400274c4:	add    QWORD PTR [rbx+0x68],rax
   1400274c8:	mov    rax,QWORD PTR [rbx+0x40]
   1400274cc:	mov    rdx,QWORD PTR [rax]
   1400274cf:	mov    rax,rsi
   1400274d2:	sub    rax,r15
   1400274d5:	sub    rdx,r15
   1400274d8:	add    QWORD PTR [rcx],rax
   1400274db:	mov    rax,QWORD PTR [rbx+0x40]
   1400274df:	add    rdx,rsi
   1400274e2:	mov    QWORD PTR [rax],rdx
   1400274e5:	mov    rax,QWORD PTR [rbx+0x58]
   1400274e9:	mov    ecx,esi
   1400274eb:	sub    ecx,edx
   1400274ed:	add    ecx,ebp
   1400274ef:	mov    DWORD PTR [rax],ecx
   1400274f1:	test   BYTE PTR [rbx+0x70],0x4
   1400274f5:	je     0x140027511
   1400274f7:	mov    rax,QWORD PTR [rbx+0x18]
   1400274fb:	mov    QWORD PTR [rax],rsi
   1400274fe:	mov    rax,QWORD PTR [rbx+0x38]
   140027502:	mov    QWORD PTR [rax],0x0
   140027509:	mov    rax,QWORD PTR [rbx+0x50]
   14002750d:	mov    DWORD PTR [rax],esi
   14002750f:	jmp    0x140027540
   140027511:	mov    rax,QWORD PTR [rbx+0x40]
   140027515:	mov    r8,QWORD PTR [rax]
   140027518:	mov    rax,QWORD PTR [rbx+0x38]
   14002751c:	mov    rdx,QWORD PTR [rax]
   14002751f:	mov    rax,QWORD PTR [rbx+0x18]
   140027523:	mov    QWORD PTR [rax],rsi
   140027526:	mov    rax,QWORD PTR [rbx+0x38]
   14002752a:	sub    rdx,r15
   14002752d:	add    rdx,rsi
   140027530:	mov    QWORD PTR [rax],rdx
   140027533:	mov    rax,QWORD PTR [rbx+0x50]
   140027537:	sub    r8d,edx
   14002753a:	inc    r8d
   14002753d:	mov    DWORD PTR [rax],r8d
   140027540:	test   BYTE PTR [rbx+0x70],0x1
   140027544:	je     0x14002754e
   140027546:	mov    rcx,r15
   140027549:	call   0x140030282
   14002754e:	or     DWORD PTR [rbx+0x70],0x1
   140027552:	mov    rcx,rbx
   140027555:	call   QWORD PTR [rip+0xec55]        # 0x1400361b0
   14002755b:	mov    r15,QWORD PTR [rsp+0x20]
   140027560:	mov    rsi,QWORD PTR [rsp+0x48]
   140027565:	mov    rbp,QWORD PTR [rsp+0x40]
   14002756a:	mov    rdi,QWORD PTR [rsp+0x50]
   14002756f:	mov    BYTE PTR [rax],r14b
   140027572:	mov    eax,r14d
   140027575:	add    rsp,0x28
   140027579:	pop    r14
   14002757b:	pop    rbx
   14002757c:	ret    
   14002757d:	int3   
   14002757e:	int3   
   14002757f:	int3   
   140027580:	rex push rdi
   140027582:	sub    rsp,0x30
   140027586:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002758f:	mov    QWORD PTR [rsp+0x48],rbx
   140027594:	mov    ebx,edx
   140027596:	mov    rdi,rcx
   140027599:	mov    QWORD PTR [rsp+0x40],rcx
   14002759e:	call   0x14002c4f0
   1400275a3:	nop
   1400275a4:	mov    rax,QWORD PTR [rdi+0x78]
   1400275a8:	mov    rax,QWORD PTR [rax]
   1400275ab:	mov    rax,QWORD PTR [rax]
   1400275ae:	mov    rcx,QWORD PTR [rax+0x10]
   1400275b2:	mov    rax,QWORD PTR [rcx]
   1400275b5:	mov    edx,ebx
   1400275b7:	call   QWORD PTR [rax+0x18]
   1400275ba:	mov    ebx,eax
   1400275bc:	mov    rcx,rdi
   1400275bf:	call   0x140024800
   1400275c4:	mov    eax,ebx
   1400275c6:	mov    rbx,QWORD PTR [rsp+0x48]
   1400275cb:	add    rsp,0x30
   1400275cf:	pop    rdi
   1400275d0:	ret    
   1400275d1:	int3   
   1400275d2:	int3   
   1400275d3:	int3   
   1400275d4:	int3   
   1400275d5:	int3   
   1400275d6:	int3   
   1400275d7:	int3   
   1400275d8:	int3   
   1400275d9:	int3   
   1400275da:	int3   
   1400275db:	int3   
   1400275dc:	int3   
   1400275dd:	int3   
   1400275de:	int3   
   1400275df:	int3   
   1400275e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400275e5:	push   rdi
   1400275e6:	sub    rsp,0x20
   1400275ea:	mov    eax,DWORD PTR [rcx+0xa8]
   1400275f0:	mov    edi,edx
   1400275f2:	mov    rbx,rcx
   1400275f5:	shr    eax,1
   1400275f7:	test   al,0x1
   1400275f9:	je     0x14002760e
   1400275fb:	mov    rax,QWORD PTR [rcx+0x40]
   1400275ff:	cmp    QWORD PTR [rax],0x0
   140027603:	jne    0x14002760e
   140027605:	mov    rax,QWORD PTR [rcx]
   140027608:	call   QWORD PTR [rax+0xb8]
   14002760e:	cmp    edi,0xffffffff
   140027611:	je     0x1400276af
   140027617:	mov    eax,DWORD PTR [rbx+0xa8]
   14002761d:	shr    eax,1
   14002761f:	test   al,0x1
   140027621:	je     0x14002767b
   140027623:	mov    rax,QWORD PTR [rbx+0x40]
   140027627:	mov    rdx,QWORD PTR [rax]
   14002762a:	mov    rax,QWORD PTR [rbx+0x58]
   14002762e:	movsxd rcx,DWORD PTR [rax]
   140027631:	add    rcx,rdx
   140027634:	cmp    rdx,rcx
   140027637:	jne    0x140027657
   140027639:	mov    rcx,rbx
   14002763c:	call   0x14002cf50
   140027641:	mov    rax,QWORD PTR [rbx+0x40]
   140027645:	mov    rdx,QWORD PTR [rax]
   140027648:	mov    rax,QWORD PTR [rbx+0x58]
   14002764c:	movsxd rcx,DWORD PTR [rax]
   14002764f:	add    rcx,rdx
   140027652:	cmp    rdx,rcx
   140027655:	je     0x1400276a1
   140027657:	mov    rax,QWORD PTR [rbx+0x40]
   14002765b:	mov    rcx,QWORD PTR [rax]
   14002765e:	mov    BYTE PTR [rcx],dil
   140027661:	mov    rax,QWORD PTR [rbx+0x58]
   140027665:	dec    DWORD PTR [rax]
   140027667:	mov    rax,QWORD PTR [rbx+0x40]
   14002766b:	inc    QWORD PTR [rax]
   14002766e:	mov    eax,edi
   140027670:	mov    rbx,QWORD PTR [rsp+0x30]
   140027675:	add    rsp,0x20
   140027679:	pop    rdi
   14002767a:	ret    
   14002767b:	mov    rdx,QWORD PTR [rbx+0x88]
   140027682:	lea    rcx,[rbx+0x70]
   140027686:	lea    r8,[rsp+0x38]
   14002768b:	mov    r9d,0x1
   140027691:	mov    BYTE PTR [rsp+0x38],dil
   140027696:	call   0x14000ed00
   14002769b:	cmp    rax,0x1
   14002769f:	je     0x1400276b1
   1400276a1:	or     eax,0xffffffff
   1400276a4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400276a9:	add    rsp,0x20
   1400276ad:	pop    rdi
   1400276ae:	ret    
   1400276af:	xor    edi,edi
   1400276b1:	mov    eax,edi
   1400276b3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400276b8:	add    rsp,0x20
   1400276bc:	pop    rdi
   1400276bd:	ret    
   1400276be:	int3   
   1400276bf:	int3   
   1400276c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400276c5:	push   rdi
   1400276c6:	sub    rsp,0x20
   1400276ca:	mov    eax,DWORD PTR [rcx+0xa8]
   1400276d0:	mov    edi,edx
   1400276d2:	mov    rbx,rcx
   1400276d5:	shr    eax,1
   1400276d7:	test   al,0x1
   1400276d9:	je     0x1400276ee
   1400276db:	mov    rax,QWORD PTR [rcx+0x40]
   1400276df:	cmp    QWORD PTR [rax],0x0
   1400276e3:	jne    0x1400276ee
   1400276e5:	mov    rax,QWORD PTR [rcx]
   1400276e8:	call   QWORD PTR [rax+0xb8]
   1400276ee:	cmp    edi,0xffffffff
   1400276f1:	je     0x14002778f
   1400276f7:	mov    eax,DWORD PTR [rbx+0xa8]
   1400276fd:	shr    eax,1
   1400276ff:	test   al,0x1
   140027701:	je     0x14002775b
   140027703:	mov    rax,QWORD PTR [rbx+0x40]
   140027707:	mov    rdx,QWORD PTR [rax]
   14002770a:	mov    rax,QWORD PTR [rbx+0x58]
   14002770e:	movsxd rcx,DWORD PTR [rax]
   140027711:	add    rcx,rdx
   140027714:	cmp    rdx,rcx
   140027717:	jne    0x140027737
   140027719:	mov    rcx,rbx
   14002771c:	call   0x14002d020
   140027721:	mov    rax,QWORD PTR [rbx+0x40]
   140027725:	mov    rdx,QWORD PTR [rax]
   140027728:	mov    rax,QWORD PTR [rbx+0x58]
   14002772c:	movsxd rcx,DWORD PTR [rax]
   14002772f:	add    rcx,rdx
   140027732:	cmp    rdx,rcx
   140027735:	je     0x140027781
   140027737:	mov    rax,QWORD PTR [rbx+0x40]
   14002773b:	mov    rcx,QWORD PTR [rax]
   14002773e:	mov    BYTE PTR [rcx],dil
   140027741:	mov    rax,QWORD PTR [rbx+0x58]
   140027745:	dec    DWORD PTR [rax]
   140027747:	mov    rax,QWORD PTR [rbx+0x40]
   14002774b:	inc    QWORD PTR [rax]
   14002774e:	mov    eax,edi
   140027750:	mov    rbx,QWORD PTR [rsp+0x30]
   140027755:	add    rsp,0x20
   140027759:	pop    rdi
   14002775a:	ret    
   14002775b:	mov    rdx,QWORD PTR [rbx+0x88]
   140027762:	lea    rcx,[rbx+0x70]
   140027766:	lea    r8,[rsp+0x38]
   14002776b:	mov    r9d,0x1
   140027771:	mov    BYTE PTR [rsp+0x38],dil
   140027776:	call   0x14000ee70
   14002777b:	cmp    rax,0x1
   14002777f:	je     0x140027791
   140027781:	or     eax,0xffffffff
   140027784:	mov    rbx,QWORD PTR [rsp+0x30]
   140027789:	add    rsp,0x20
   14002778d:	pop    rdi
   14002778e:	ret    
   14002778f:	xor    edi,edi
   140027791:	mov    eax,edi
   140027793:	mov    rbx,QWORD PTR [rsp+0x30]
   140027798:	add    rsp,0x20
   14002779c:	pop    rdi
   14002779d:	ret    
   14002779e:	int3   
   14002779f:	int3   
   1400277a0:	rex push rdi
   1400277a2:	sub    rsp,0x50
   1400277a6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400277af:	mov    QWORD PTR [rsp+0x60],rbx
   1400277b4:	mov    edi,edx
   1400277b6:	mov    rbx,rcx
   1400277b9:	mov    eax,DWORD PTR [rcx+0x98]
   1400277bf:	shr    eax,1
   1400277c1:	test   al,0x1
   1400277c3:	je     0x1400277d8
   1400277c5:	mov    rax,QWORD PTR [rcx+0x40]
   1400277c9:	cmp    QWORD PTR [rax],0x0
   1400277cd:	jne    0x1400277d8
   1400277cf:	mov    rax,QWORD PTR [rcx]
   1400277d2:	call   QWORD PTR [rax+0xb8]
   1400277d8:	cmp    edi,0xffffffff
   1400277db:	je     0x140027852
   1400277dd:	mov    eax,DWORD PTR [rbx+0x98]
   1400277e3:	shr    eax,1
   1400277e5:	test   al,0x1
   1400277e7:	je     0x14002783e
   1400277e9:	mov    rax,QWORD PTR [rbx+0x40]
   1400277ed:	mov    rdx,QWORD PTR [rax]
   1400277f0:	mov    rax,QWORD PTR [rbx+0x58]
   1400277f4:	movsxd r8,DWORD PTR [rax]
   1400277f7:	add    r8,rdx
   1400277fa:	cmp    rdx,r8
   1400277fd:	jne    0x14002782c
   1400277ff:	mov    rax,QWORD PTR [rbx+0x20]
   140027803:	mov    rcx,rdx
   140027806:	sub    rcx,QWORD PTR [rax]
   140027809:	test   rcx,rcx
   14002780c:	jle    0x140027822
   14002780e:	lea    rcx,[rsp+0x28]
   140027813:	call   0x14001fa80
   140027818:	nop
   140027819:	mov    rcx,rax
   14002781c:	call   0x14000df70
   140027821:	nop
   140027822:	cmp    rdx,r8
   140027825:	jne    0x14002782c
   140027827:	or     eax,0xffffffff
   14002782a:	jmp    0x140027856
   14002782c:	mov    BYTE PTR [rdx],dil
   14002782f:	mov    rax,QWORD PTR [rbx+0x58]
   140027833:	dec    DWORD PTR [rax]
   140027835:	mov    rax,QWORD PTR [rbx+0x40]
   140027839:	inc    QWORD PTR [rax]
   14002783c:	jmp    0x140027854
   14002783e:	lea    rcx,[rsp+0x28]
   140027843:	call   0x14001fa80
   140027848:	nop
   140027849:	mov    rcx,rax
   14002784c:	call   0x14000df70
   140027851:	nop
   140027852:	xor    edi,edi
   140027854:	mov    eax,edi
   140027856:	mov    rbx,QWORD PTR [rsp+0x60]
   14002785b:	add    rsp,0x50
   14002785f:	pop    rdi
   140027860:	ret    
   140027861:	int3   
   140027862:	int3   
   140027863:	int3   
   140027864:	int3   
   140027865:	int3   
   140027866:	int3   
   140027867:	int3   
   140027868:	int3   
   140027869:	int3   
   14002786a:	int3   
   14002786b:	int3   
   14002786c:	int3   
   14002786d:	int3   
   14002786e:	int3   
   14002786f:	int3   
   140027870:	rex push rdi
   140027872:	sub    rsp,0x50
   140027876:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002787f:	mov    QWORD PTR [rsp+0x60],rbx
   140027884:	mov    edi,edx
   140027886:	mov    rbx,rcx
   140027889:	mov    eax,DWORD PTR [rcx+0xa0]
   14002788f:	shr    eax,1
   140027891:	test   al,0x1
   140027893:	je     0x1400278a8
   140027895:	mov    rax,QWORD PTR [rcx+0x40]
   140027899:	cmp    QWORD PTR [rax],0x0
   14002789d:	jne    0x1400278a8
   14002789f:	mov    rax,QWORD PTR [rcx]
   1400278a2:	call   QWORD PTR [rax+0xb8]
   1400278a8:	cmp    edi,0xffffffff
   1400278ab:	je     0x140027922
   1400278ad:	mov    eax,DWORD PTR [rbx+0xa0]
   1400278b3:	shr    eax,1
   1400278b5:	test   al,0x1
   1400278b7:	je     0x14002790e
   1400278b9:	mov    rax,QWORD PTR [rbx+0x40]
   1400278bd:	mov    rdx,QWORD PTR [rax]
   1400278c0:	mov    rax,QWORD PTR [rbx+0x58]
   1400278c4:	movsxd r8,DWORD PTR [rax]
   1400278c7:	add    r8,rdx
   1400278ca:	cmp    rdx,r8
   1400278cd:	jne    0x1400278fc
   1400278cf:	mov    rax,QWORD PTR [rbx+0x20]
   1400278d3:	mov    rcx,rdx
   1400278d6:	sub    rcx,QWORD PTR [rax]
   1400278d9:	test   rcx,rcx
   1400278dc:	jle    0x1400278f2
   1400278de:	lea    rcx,[rsp+0x28]
   1400278e3:	call   0x14001fa80
   1400278e8:	nop
   1400278e9:	mov    rcx,rax
   1400278ec:	call   0x14000df70
   1400278f1:	nop
   1400278f2:	cmp    rdx,r8
   1400278f5:	jne    0x1400278fc
   1400278f7:	or     eax,0xffffffff
   1400278fa:	jmp    0x140027926
   1400278fc:	mov    BYTE PTR [rdx],dil
   1400278ff:	mov    rax,QWORD PTR [rbx+0x58]
   140027903:	dec    DWORD PTR [rax]
   140027905:	mov    rax,QWORD PTR [rbx+0x40]
   140027909:	inc    QWORD PTR [rax]
   14002790c:	jmp    0x140027924
   14002790e:	lea    rcx,[rsp+0x28]
   140027913:	call   0x14001fa80
   140027918:	nop
   140027919:	mov    rcx,rax
   14002791c:	call   0x14000df70
   140027921:	nop
   140027922:	xor    edi,edi
   140027924:	mov    eax,edi
   140027926:	mov    rbx,QWORD PTR [rsp+0x60]
   14002792b:	add    rsp,0x50
   14002792f:	pop    rdi
   140027930:	ret    
   140027931:	int3   
   140027932:	int3   
   140027933:	int3   
   140027934:	int3   
   140027935:	int3   
   140027936:	int3   
   140027937:	int3   
   140027938:	int3   
   140027939:	int3   
   14002793a:	int3   
   14002793b:	int3   
   14002793c:	int3   
   14002793d:	int3   
   14002793e:	int3   
   14002793f:	int3   
   140027940:	lea    rax,[rcx+0x48]
   140027944:	mov    QWORD PTR [rdx],rax
   140027947:	mov    rax,rdx
   14002794a:	ret    
   14002794b:	int3   
   14002794c:	int3   
   14002794d:	int3   
   14002794e:	int3   
   14002794f:	int3   
   140027950:	mov    QWORD PTR [rdx],rcx
   140027953:	mov    rax,rdx
   140027956:	ret    
   140027957:	int3   
   140027958:	int3   
   140027959:	int3   
   14002795a:	int3   
   14002795b:	int3   
   14002795c:	int3   
   14002795d:	int3   
   14002795e:	int3   
   14002795f:	int3   
   140027960:	mov    rax,rsp
   140027963:	push   rbp
   140027964:	lea    rbp,[rsp-0x80]
   140027969:	sub    rsp,0x180
   140027970:	mov    QWORD PTR [rsp+0x68],0xfffffffffffffffe
   140027979:	mov    QWORD PTR [rax+0x8],rbx
   14002797d:	mov    QWORD PTR [rax+0x18],rsi
   140027981:	mov    QWORD PTR [rax+0x20],rdi
   140027985:	mov    rbx,rdx
   140027988:	mov    rdi,rcx
   14002798b:	xor    esi,esi
   14002798d:	mov    DWORD PTR [rsp+0x40],esi
   140027991:	mov    eax,DWORD PTR [rip+0x30011]        # 0x1400579a8
   140027997:	test   al,0x1
   140027999:	jne    0x140027a4a
   14002799f:	or     eax,0x1
   1400279a2:	mov    DWORD PTR [rip+0x30000],eax        # 0x1400579a8
   1400279a8:	mov    QWORD PTR [rip+0x2ffed],0x7        # 0x1400579a0
   1400279b3:	mov    QWORD PTR [rip+0x2ffde],rsi        # 0x140057998
   1400279ba:	mov    WORD PTR [rip+0x2ffc7],si        # 0x140057988
   1400279c1:	mov    QWORD PTR [rsp+0x38],0xf
   1400279ca:	mov    QWORD PTR [rsp+0x30],rsi
   1400279cf:	mov    BYTE PTR [rsp+0x20],sil
   1400279d4:	lea    r8d,[rsi+0x25]
   1400279d8:	lea    rdx,[rip+0x14791]        # 0x14003c170
   1400279df:	lea    rcx,[rsp+0x20]
   1400279e4:	call   0x14001f070
   1400279e9:	nop
   1400279ea:	call   QWORD PTR [rip+0xeb40]        # 0x140036530
   1400279f0:	mov    r10,QWORD PTR [rsp+0x30]
   1400279f5:	test   r10,r10
   1400279f8:	je     0x140027a2a
   1400279fa:	lea    rdx,[rsp+0x20]
   1400279ff:	cmp    QWORD PTR [rsp+0x38],0x10
   140027a05:	cmovae rdx,QWORD PTR [rsp+0x20]
   140027a0b:	lea    rcx,[rsp+0x20]
   140027a10:	cmovae rcx,QWORD PTR [rsp+0x20]
   140027a16:	add    rdx,r10
   140027a19:	mov    r9,rax
   140027a1c:	lea    r8,[rip+0x2ff65]        # 0x140057988
   140027a23:	call   QWORD PTR [rip+0xeb57]        # 0x140036580
   140027a29:	nop
   140027a2a:	cmp    QWORD PTR [rsp+0x38],0x10
   140027a30:	jb     0x140027a3d
   140027a32:	mov    rcx,QWORD PTR [rsp+0x20]
   140027a37:	call   0x140030282
   140027a3c:	nop
   140027a3d:	lea    rcx,[rip+0xdf8c]        # 0x1400359d0
   140027a44:	call   0x140030388
   140027a49:	nop
   140027a4a:	mov    QWORD PTR [rsp+0x60],0x7
   140027a53:	mov    QWORD PTR [rsp+0x58],rsi
   140027a58:	mov    WORD PTR [rsp+0x48],si
   140027a5d:	call   QWORD PTR [rip+0xeacd]        # 0x140036530
   140027a63:	mov    r8,QWORD PTR [rbx+0x10]
   140027a67:	test   r8,r8
   140027a6a:	je     0x140027a9e
   140027a6c:	mov    rcx,QWORD PTR [rbx+0x18]
   140027a70:	cmp    rcx,0x10
   140027a74:	jb     0x140027a7b
   140027a76:	mov    rdx,QWORD PTR [rbx]
   140027a79:	jmp    0x140027a7e
   140027a7b:	mov    rdx,rbx
   140027a7e:	cmp    rcx,0x10
   140027a82:	jb     0x140027a89
   140027a84:	mov    rcx,QWORD PTR [rbx]
   140027a87:	jmp    0x140027a8c
   140027a89:	mov    rcx,rbx
   140027a8c:	add    rdx,r8
   140027a8f:	mov    r9,rax
   140027a92:	lea    r8,[rsp+0x48]
   140027a97:	call   QWORD PTR [rip+0xeae3]        # 0x140036580
   140027a9d:	nop
   140027a9e:	xor    r8d,r8d
   140027aa1:	lea    rdx,[rsp+0x48]
   140027aa6:	lea    rcx,[rbp+0x98]
   140027aad:	call   QWORD PTR [rip+0xea8d]        # 0x140036540
   140027ab3:	cmp    DWORD PTR [rax],0x1
   140027ab6:	jbe    0x140027b30
   140027ab8:	xor    r8d,r8d
   140027abb:	lea    rdx,[rsp+0x48]
   140027ac0:	lea    rcx,[rbp+0x98]
   140027ac7:	call   QWORD PTR [rip+0xea73]        # 0x140036540
   140027acd:	cmp    DWORD PTR [rax],0x3
   140027ad0:	jne    0x140027b30
   140027ad2:	lea    rcx,[rsp+0x70]
   140027ad7:	call   0x140021900
   140027adc:	mov    rbx,rax
   140027adf:	lea    r8,[rip+0x2fea2]        # 0x140057988
   140027ae6:	lea    rdx,[rsp+0x48]
   140027aeb:	lea    rcx,[rsp+0x20]
   140027af0:	call   0x14001a170
   140027af5:	nop
   140027af6:	mov    r8,rbx
   140027af9:	mov    rdx,rax
   140027afc:	mov    rcx,rdi
   140027aff:	call   0x14001f9f0
   140027b04:	nop
   140027b05:	lea    rcx,[rsp+0x20]
   140027b0a:	call   QWORD PTR [rip+0xea28]        # 0x140036538
   140027b10:	nop
   140027b11:	lea    rcx,[rsp+0x70]
   140027b16:	call   QWORD PTR [rip+0xea1c]        # 0x140036538
   140027b1c:	nop
   140027b1d:	lea    rcx,[rsp+0x48]
   140027b22:	call   QWORD PTR [rip+0xea10]        # 0x140036538
   140027b28:	mov    rax,rdi
   140027b2b:	jmp    0x140027c05
   140027b30:	lea    rax,[rip+0x14671]        # 0x14003c1a8
   140027b37:	mov    QWORD PTR [rbp-0x70],rax
   140027b3b:	lea    rcx,[rbp+0x18]
   140027b3f:	call   QWORD PTR [rip+0xe63b]        # 0x140036180
   140027b45:	nop
   140027b46:	mov    DWORD PTR [rsp+0x40],0x2
   140027b4e:	xor    r9d,r9d
   140027b51:	xor    r8d,r8d
   140027b54:	lea    rdx,[rbp-0x68]
   140027b58:	lea    rcx,[rbp-0x70]
   140027b5c:	call   QWORD PTR [rip+0xe616]        # 0x140036178
   140027b62:	nop
   140027b63:	mov    rax,QWORD PTR [rbp-0x70]
   140027b67:	movsxd rcx,DWORD PTR [rax+0x4]
   140027b6b:	lea    rax,[rip+0x1462e]        # 0x14003c1a0
   140027b72:	mov    QWORD PTR [rbp+rcx*1-0x70],rax
   140027b77:	mov    rax,QWORD PTR [rbp-0x70]
   140027b7b:	movsxd rcx,DWORD PTR [rax+0x4]
   140027b7f:	lea    r8d,[rcx-0x88]
   140027b86:	mov    DWORD PTR [rbp+rcx*1-0x74],r8d
   140027b8b:	mov    edx,0x2
   140027b90:	lea    rcx,[rbp-0x68]
   140027b94:	call   0x1400112a0
   140027b99:	nop
   140027b9a:	lea    rdx,[rip+0x1460f]        # 0x14003c1b0
   140027ba1:	lea    rcx,[rbp-0x70]
   140027ba5:	call   0x140002f70
   140027baa:	mov    rcx,rax
   140027bad:	mov    rdx,rbx
   140027bb0:	call   0x140002ba0
   140027bb5:	lea    rdx,[rsp+0x70]
   140027bba:	lea    rcx,[rbp-0x70]
   140027bbe:	call   0x14002c9e0
   140027bc3:	nop
   140027bc4:	cmp    QWORD PTR [rax+0x18],0x10
   140027bc9:	jb     0x140027bce
   140027bcb:	mov    rax,QWORD PTR [rax]
   140027bce:	mov    QWORD PTR [rbp+0x98],rax
   140027bd5:	lea    rdx,[rbp+0x98]
   140027bdc:	lea    rcx,[rsp+0x20]
   140027be1:	call   QWORD PTR [rip+0xe869]        # 0x140036450
   140027be7:	lea    rax,[rip+0x12a3a]        # 0x14003a628
   140027bee:	mov    QWORD PTR [rsp+0x20],rax
   140027bf3:	lea    rdx,[rip+0x28516]        # 0x140050110
   140027bfa:	lea    rcx,[rsp+0x20]
   140027bff:	call   0x140030478
   140027c04:	nop
   140027c05:	lea    r11,[rsp+0x180]
   140027c0d:	mov    rbx,QWORD PTR [r11+0x10]
   140027c11:	mov    rsi,QWORD PTR [r11+0x20]
   140027c15:	mov    rdi,QWORD PTR [r11+0x28]
   140027c19:	mov    rsp,r11
   140027c1c:	pop    rbp
   140027c1d:	ret    
   140027c1e:	int3   
   140027c1f:	int3   
   140027c20:	mov    QWORD PTR [rsp+0x8],rbx
   140027c25:	push   rdi
   140027c26:	sub    rsp,0x20
   140027c2a:	mov    rax,QWORD PTR [rcx+0x38]
   140027c2e:	mov    rdi,rcx
   140027c31:	mov    ebx,edx
   140027c33:	mov    rcx,QWORD PTR [rax]
   140027c36:	test   rcx,rcx
   140027c39:	je     0x140027c71
   140027c3b:	mov    rax,QWORD PTR [rdi+0x18]
   140027c3f:	cmp    QWORD PTR [rax],rcx
   140027c42:	jae    0x140027c71
   140027c44:	cmp    edx,0xffffffff
   140027c47:	je     0x140027c51
   140027c49:	movzx  eax,BYTE PTR [rcx-0x1]
   140027c4d:	cmp    eax,edx
   140027c4f:	jne    0x140027c71
   140027c51:	mov    rax,QWORD PTR [rdi+0x50]
   140027c55:	inc    DWORD PTR [rax]
   140027c57:	mov    rax,QWORD PTR [rdi+0x38]
   140027c5b:	dec    QWORD PTR [rax]
   140027c5e:	xor    eax,eax
   140027c60:	cmp    edx,0xffffffff
   140027c63:	cmovne eax,edx
   140027c66:	mov    rbx,QWORD PTR [rsp+0x30]
   140027c6b:	add    rsp,0x20
   140027c6f:	pop    rdi
   140027c70:	ret    
   140027c71:	mov    rdx,QWORD PTR [rdi+0x90]
   140027c78:	test   rdx,rdx
   140027c7b:	je     0x140027cbe
   140027c7d:	cmp    ebx,0xffffffff
   140027c80:	je     0x140027cbe
   140027c82:	cmp    QWORD PTR [rdi+0x78],0x0
   140027c87:	jne    0x140027c97
   140027c89:	movzx  ecx,bl
   140027c8c:	call   QWORD PTR [rip+0xe806]        # 0x140036498
   140027c92:	cmp    eax,0xffffffff
   140027c95:	jne    0x140027cb1
   140027c97:	mov    rax,QWORD PTR [rdi+0x38]
   140027c9b:	lea    rcx,[rdi+0x80]
   140027ca2:	cmp    QWORD PTR [rax],rcx
   140027ca5:	je     0x140027cbe
   140027ca7:	mov    BYTE PTR [rcx],bl
   140027ca9:	mov    rcx,rdi
   140027cac:	call   0x14001d690
   140027cb1:	mov    eax,ebx
   140027cb3:	mov    rbx,QWORD PTR [rsp+0x30]
   140027cb8:	add    rsp,0x20
   140027cbc:	pop    rdi
   140027cbd:	ret    
   140027cbe:	or     eax,0xffffffff
   140027cc1:	mov    rbx,QWORD PTR [rsp+0x30]
   140027cc6:	add    rsp,0x20
   140027cca:	pop    rdi
   140027ccb:	ret    
   140027ccc:	int3   
   140027ccd:	int3   
   140027cce:	int3   
   140027ccf:	int3   
   140027cd0:	mov    rax,QWORD PTR [rcx+0x38]
   140027cd4:	mov    r8,QWORD PTR [rax]
   140027cd7:	test   r8,r8
   140027cda:	je     0x140027d19
   140027cdc:	mov    rax,QWORD PTR [rcx+0x18]
   140027ce0:	cmp    r8,QWORD PTR [rax]
   140027ce3:	jbe    0x140027d19
   140027ce5:	cmp    edx,0xffffffff
   140027ce8:	je     0x140027cf6
   140027cea:	cmp    dl,BYTE PTR [r8-0x1]
   140027cee:	je     0x140027cf6
   140027cf0:	test   BYTE PTR [rcx+0x70],0x2
   140027cf4:	jne    0x140027d19
   140027cf6:	mov    rax,QWORD PTR [rcx+0x50]
   140027cfa:	inc    DWORD PTR [rax]
   140027cfc:	mov    rax,QWORD PTR [rcx+0x38]
   140027d00:	dec    QWORD PTR [rax]
   140027d03:	cmp    edx,0xffffffff
   140027d06:	je     0x140027d14
   140027d08:	mov    rax,QWORD PTR [rcx+0x38]
   140027d0c:	mov    rcx,QWORD PTR [rax]
   140027d0f:	mov    eax,edx
   140027d11:	mov    BYTE PTR [rcx],dl
   140027d13:	ret    
   140027d14:	xor    edx,edx
   140027d16:	mov    eax,edx
   140027d18:	ret    
   140027d19:	or     eax,0xffffffff
   140027d1c:	ret    
   140027d1d:	int3   
   140027d1e:	int3   
   140027d1f:	int3   
   140027d20:	rex push rdi
   140027d22:	sub    rsp,0x30
   140027d26:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140027d2f:	mov    QWORD PTR [rsp+0x48],rbx
   140027d34:	mov    ebx,edx
   140027d36:	mov    rdi,rcx
   140027d39:	mov    QWORD PTR [rsp+0x40],rcx
   140027d3e:	call   0x14002c4f0
   140027d43:	nop
   140027d44:	mov    rax,QWORD PTR [rdi+0x78]
   140027d48:	mov    rax,QWORD PTR [rax]
   140027d4b:	mov    rax,QWORD PTR [rax]
   140027d4e:	mov    rcx,QWORD PTR [rax+0x10]
   140027d52:	mov    rax,QWORD PTR [rcx]
   140027d55:	mov    edx,ebx
   140027d57:	call   QWORD PTR [rax+0x20]
   140027d5a:	mov    ebx,eax
   140027d5c:	mov    rcx,rdi
   140027d5f:	call   0x140024800
   140027d64:	mov    eax,ebx
   140027d66:	mov    rbx,QWORD PTR [rsp+0x48]
   140027d6b:	add    rsp,0x30
   140027d6f:	pop    rdi
   140027d70:	ret    
   140027d71:	int3   
   140027d72:	int3   
   140027d73:	int3   
   140027d74:	int3   
   140027d75:	int3   
   140027d76:	int3   
   140027d77:	int3   
   140027d78:	int3   
   140027d79:	int3   
   140027d7a:	int3   
   140027d7b:	int3   
   140027d7c:	int3   
   140027d7d:	int3   
   140027d7e:	int3   
   140027d7f:	int3   
   140027d80:	sub    rsp,0x58
   140027d84:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140027d8d:	mov    rax,QWORD PTR [rcx+0x38]
   140027d91:	mov    r8,QWORD PTR [rax]
   140027d94:	mov    rax,QWORD PTR [rcx+0x18]
   140027d98:	cmp    r8,QWORD PTR [rax]
   140027d9b:	je     0x140027dc0
   140027d9d:	mov    rax,QWORD PTR [rcx+0x50]
   140027da1:	inc    DWORD PTR [rax]
   140027da3:	mov    rax,QWORD PTR [rcx+0x38]
   140027da7:	dec    QWORD PTR [rax]
   140027daa:	cmp    edx,0xffffffff
   140027dad:	je     0x140027dba
   140027daf:	mov    rax,QWORD PTR [rcx+0x38]
   140027db3:	mov    rcx,QWORD PTR [rax]
   140027db6:	mov    BYTE PTR [rcx],dl
   140027db8:	jmp    0x140027dbc
   140027dba:	xor    edx,edx
   140027dbc:	mov    eax,edx
   140027dbe:	jmp    0x140027dd4
   140027dc0:	lea    rcx,[rsp+0x28]
   140027dc5:	call   0x14001f4e0
   140027dca:	nop
   140027dcb:	mov    rcx,rax
   140027dce:	call   0x14000df70
   140027dd3:	nop
   140027dd4:	add    rsp,0x58
   140027dd8:	ret    
   140027dd9:	int3   
   140027dda:	int3   
   140027ddb:	int3   
   140027ddc:	int3   
   140027ddd:	int3   
   140027dde:	int3   
   140027ddf:	int3   
   140027de0:	sub    rsp,0x58
   140027de4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140027ded:	mov    rax,QWORD PTR [rcx+0x38]
   140027df1:	mov    r8,QWORD PTR [rax]
   140027df4:	mov    rax,QWORD PTR [rcx+0x18]
   140027df8:	cmp    r8,QWORD PTR [rax]
   140027dfb:	je     0x140027e20
   140027dfd:	mov    rax,QWORD PTR [rcx+0x50]
   140027e01:	inc    DWORD PTR [rax]
   140027e03:	mov    rax,QWORD PTR [rcx+0x38]
   140027e07:	dec    QWORD PTR [rax]
   140027e0a:	cmp    edx,0xffffffff
   140027e0d:	je     0x140027e1a
   140027e0f:	mov    rax,QWORD PTR [rcx+0x38]
   140027e13:	mov    rcx,QWORD PTR [rax]
   140027e16:	mov    BYTE PTR [rcx],dl
   140027e18:	jmp    0x140027e1c
   140027e1a:	xor    edx,edx
   140027e1c:	mov    eax,edx
   140027e1e:	jmp    0x140027e34
   140027e20:	lea    rcx,[rsp+0x28]
   140027e25:	call   0x14001f4e0
   140027e2a:	nop
   140027e2b:	mov    rcx,rax
   140027e2e:	call   0x14000df70
   140027e33:	nop
   140027e34:	add    rsp,0x58
   140027e38:	ret    
   140027e39:	int3   
   140027e3a:	int3   
   140027e3b:	int3   
   140027e3c:	int3   
   140027e3d:	int3   
   140027e3e:	int3   
   140027e3f:	int3   
   140027e40:	sub    rsp,0x58
   140027e44:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140027e4d:	mov    rax,QWORD PTR [rcx+0x38]
   140027e51:	mov    r8,QWORD PTR [rax]
   140027e54:	mov    rax,QWORD PTR [rcx+0x18]
   140027e58:	cmp    r8,QWORD PTR [rax]
   140027e5b:	je     0x140027e80
   140027e5d:	mov    rax,QWORD PTR [rcx+0x50]
   140027e61:	inc    DWORD PTR [rax]
   140027e63:	mov    rax,QWORD PTR [rcx+0x38]
   140027e67:	dec    QWORD PTR [rax]
   140027e6a:	cmp    edx,0xffffffff
   140027e6d:	je     0x140027e7a
   140027e6f:	mov    rax,QWORD PTR [rcx+0x38]
   140027e73:	mov    rcx,QWORD PTR [rax]
   140027e76:	mov    BYTE PTR [rcx],dl
   140027e78:	jmp    0x140027e7c
   140027e7a:	xor    edx,edx
   140027e7c:	mov    eax,edx
   140027e7e:	jmp    0x140027e94
   140027e80:	lea    rcx,[rsp+0x28]
   140027e85:	call   0x14001f4e0
   140027e8a:	nop
   140027e8b:	mov    rcx,rax
   140027e8e:	call   0x14000df70
   140027e93:	nop
   140027e94:	add    rsp,0x58
   140027e98:	ret    
   140027e99:	int3   
   140027e9a:	int3   
   140027e9b:	int3   
   140027e9c:	int3   
   140027e9d:	int3   
   140027e9e:	int3   
   140027e9f:	int3   
   140027ea0:	sub    rsp,0x58
   140027ea4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140027ead:	mov    rax,QWORD PTR [rcx+0x38]
   140027eb1:	mov    r8,QWORD PTR [rax]
   140027eb4:	mov    rax,QWORD PTR [rcx+0x18]
   140027eb8:	cmp    r8,QWORD PTR [rax]
   140027ebb:	je     0x140027ee0
   140027ebd:	mov    rax,QWORD PTR [rcx+0x50]
   140027ec1:	inc    DWORD PTR [rax]
   140027ec3:	mov    rax,QWORD PTR [rcx+0x38]
   140027ec7:	dec    QWORD PTR [rax]
   140027eca:	cmp    edx,0xffffffff
   140027ecd:	je     0x140027eda
   140027ecf:	mov    rax,QWORD PTR [rcx+0x38]
   140027ed3:	mov    rcx,QWORD PTR [rax]
   140027ed6:	mov    BYTE PTR [rcx],dl
   140027ed8:	jmp    0x140027edc
   140027eda:	xor    edx,edx
   140027edc:	mov    eax,edx
   140027ede:	jmp    0x140027ef4
   140027ee0:	lea    rcx,[rsp+0x28]
   140027ee5:	call   0x14001f4e0
   140027eea:	nop
   140027eeb:	mov    rcx,rax
   140027eee:	call   0x14000df70
   140027ef3:	nop
   140027ef4:	add    rsp,0x58
   140027ef8:	ret    
   140027ef9:	int3   
   140027efa:	int3   
   140027efb:	int3   
   140027efc:	int3   
   140027efd:	int3   
   140027efe:	int3   
   140027eff:	int3   
   140027f00:	xor    r8d,r8d
   140027f03:	rex.W jmp QWORD PTR [rip+0xe64e]        # 0x140036558
   140027f0a:	int3   
   140027f0b:	int3   
   140027f0c:	int3   
   140027f0d:	int3   
   140027f0e:	int3   
   140027f0f:	int3   
   140027f10:	mov    rax,rcx
   140027f13:	ret    
   140027f14:	int3   
   140027f15:	int3   
   140027f16:	int3   
   140027f17:	int3   
   140027f18:	int3   
   140027f19:	int3   
   140027f1a:	int3   
   140027f1b:	int3   
   140027f1c:	int3   
   140027f1d:	int3   
   140027f1e:	int3   
   140027f1f:	int3   
   140027f20:	mov    QWORD PTR [rsp+0x8],rbx
   140027f25:	push   rdi
   140027f26:	sub    rsp,0x20
   140027f2a:	mov    rdi,rcx
   140027f2d:	mov    rcx,QWORD PTR [rcx]
   140027f30:	mov    eax,DWORD PTR [rcx+0x30]
   140027f33:	shr    eax,0x2
   140027f36:	test   al,0x1
   140027f38:	je     0x140027f3f
   140027f3a:	call   0x140020620
   140027f3f:	mov    rax,QWORD PTR [rdi]
   140027f42:	mov    rdx,QWORD PTR [rax]
   140027f45:	mov    rax,QWORD PTR [rdx+0x8]
   140027f49:	xor    edx,edx
   140027f4b:	mov    rbx,QWORD PTR [rax+0x10]
   140027f4f:	mov    QWORD PTR [rax+0x10],0x0
   140027f57:	mov    rax,QWORD PTR [rbx]
   140027f5a:	mov    rcx,rbx
   140027f5d:	call   QWORD PTR [rax+0x90]
   140027f63:	mov    rax,QWORD PTR [rbx]
   140027f66:	xor    edx,edx
   140027f68:	mov    rcx,rbx
   140027f6b:	call   QWORD PTR [rax+0x78]
   140027f6e:	mov    rax,QWORD PTR [rbx]
   140027f71:	mov    edx,0x1
   140027f76:	mov    rcx,rbx
   140027f79:	call   QWORD PTR [rax]
   140027f7b:	mov    r8,QWORD PTR [rdi]
   140027f7e:	mov    rax,QWORD PTR [r8]
   140027f81:	mov    rcx,QWORD PTR [rax+0x8]
   140027f85:	mov    rdx,QWORD PTR [rcx+0x8]
   140027f89:	mov    rax,QWORD PTR [rcx]
   140027f8c:	mov    QWORD PTR [rdx],rax
   140027f8f:	mov    rdx,QWORD PTR [rcx]
   140027f92:	mov    rax,QWORD PTR [rcx+0x8]
   140027f96:	mov    QWORD PTR [rdx+0x8],rax
   140027f9a:	dec    QWORD PTR [r8+0x8]
   140027f9e:	call   0x140030282
   140027fa3:	mov    rax,QWORD PTR [rdi]
   140027fa6:	and    DWORD PTR [rax+0x30],0xfffffffe
   140027faa:	mov    rdx,QWORD PTR [rdi]
   140027fad:	mov    ecx,DWORD PTR [rdx+0x30]
   140027fb0:	mov    eax,ecx
   140027fb2:	shr    eax,0x2
   140027fb5:	test   al,0x1
   140027fb7:	jne    0x140027fc0
   140027fb9:	cmp    QWORD PTR [rdx+0x8],0x0
   140027fbe:	jne    0x140027fc6
   140027fc0:	and    ecx,0xfffffffd
   140027fc3:	mov    DWORD PTR [rdx+0x30],ecx
   140027fc6:	mov    rbx,QWORD PTR [rsp+0x30]
   140027fcb:	add    rsp,0x20
   140027fcf:	pop    rdi
   140027fd0:	ret    
   140027fd1:	int3   
   140027fd2:	int3   
   140027fd3:	int3   
   140027fd4:	int3   
   140027fd5:	int3   
   140027fd6:	int3   
   140027fd7:	int3   
   140027fd8:	int3   
   140027fd9:	int3   
   140027fda:	int3   
   140027fdb:	int3   
   140027fdc:	int3   
   140027fdd:	int3   
   140027fde:	int3   
   140027fdf:	int3   
   140027fe0:	mov    rcx,QWORD PTR [rcx+0x8]
   140027fe4:	jmp    0x140027f20
   140027fe9:	int3   
   140027fea:	int3   
   140027feb:	int3   
   140027fec:	int3   
   140027fed:	int3   
   140027fee:	int3   
   140027fef:	int3   
   140027ff0:	mov    rax,QWORD PTR [rcx]
   140027ff3:	mov    r8,rcx
   140027ff6:	mov    rcx,QWORD PTR [rax+0x8]
   140027ffa:	mov    rdx,QWORD PTR [rcx+0x8]
   140027ffe:	mov    rax,QWORD PTR [rcx]
   140028001:	mov    QWORD PTR [rdx],rax
   140028004:	mov    rdx,QWORD PTR [rcx]
   140028007:	mov    rax,QWORD PTR [rcx+0x8]
   14002800b:	mov    QWORD PTR [rdx+0x8],rax
   14002800f:	dec    QWORD PTR [r8+0x8]
   140028013:	jmp    0x140030282
   140028018:	int3   
   140028019:	int3   
   14002801a:	int3   
   14002801b:	int3   
   14002801c:	int3   
   14002801d:	int3   
   14002801e:	int3   
   14002801f:	int3   
   140028020:	mov    DWORD PTR [rcx],0xffffffff
   140028026:	mov    rax,rcx
   140028029:	ret    
   14002802a:	int3   
   14002802b:	int3   
   14002802c:	int3   
   14002802d:	int3   
   14002802e:	int3   
   14002802f:	int3   
   140028030:	lea    rax,[rip+0x15049]        # 0x14003d080
   140028037:	ret    
   140028038:	int3   
   140028039:	int3   
   14002803a:	int3   
   14002803b:	int3   
   14002803c:	int3   
   14002803d:	int3   
   14002803e:	int3   
   14002803f:	int3   
   140028040:	sub    rsp,0x28
   140028044:	movups xmm2,XMMWORD PTR [rcx]
   140028047:	movsd  xmm0,QWORD PTR [rcx+0x10]
   14002804c:	mov    rax,QWORD PTR [rcx+0x8]
   140028050:	mov    rdx,rcx
   140028053:	movups xmm1,xmm2
   140028056:	psrldq xmm2,0x8
   14002805b:	movsd  QWORD PTR [rsp+0x10],xmm0
   140028061:	psrldq xmm1,0x8
   140028066:	movsd  QWORD PTR [rsp+0x10],xmm0
   14002806c:	movq   rcx,xmm1
   140028071:	sub    rax,rcx
   140028074:	movq   rcx,xmm2
   140028079:	add    rax,QWORD PTR [rdx]
   14002807c:	add    rax,rcx
   14002807f:	add    rsp,0x28
   140028083:	ret    
   140028084:	int3   
   140028085:	int3   
   140028086:	int3   
   140028087:	int3   
   140028088:	int3   
   140028089:	int3   
   14002808a:	int3   
   14002808b:	int3   
   14002808c:	int3   
   14002808d:	int3   
   14002808e:	int3   
   14002808f:	int3   
   140028090:	lea    rax,[rcx+0x60]
   140028094:	ret    
   140028095:	int3   
   140028096:	int3   
   140028097:	int3   
   140028098:	int3   
   140028099:	int3   
   14002809a:	int3   
   14002809b:	int3   
   14002809c:	int3   
   14002809d:	int3   
   14002809e:	int3   
   14002809f:	int3   
   1400280a0:	mov    rax,rcx
   1400280a3:	ret    
   1400280a4:	int3   
   1400280a5:	int3   
   1400280a6:	int3   
   1400280a7:	int3   
   1400280a8:	int3   
   1400280a9:	int3   
   1400280aa:	int3   
   1400280ab:	int3   
   1400280ac:	int3   
   1400280ad:	int3   
   1400280ae:	int3   
   1400280af:	int3   
   1400280b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400280b5:	mov    QWORD PTR [rsp+0x10],rbp
   1400280ba:	mov    QWORD PTR [rsp+0x18],rsi
   1400280bf:	push   rdi
   1400280c0:	push   r12
   1400280c2:	push   r13
   1400280c4:	push   r14
   1400280c6:	push   r15
   1400280c8:	sub    rsp,0x140
   1400280cf:	mov    rdi,rcx
   1400280d2:	lea    r8,[rcx+0x15]
   1400280d6:	lea    rcx,[rsp]
   1400280da:	sub    rcx,rdi
   1400280dd:	mov    r9d,0x10
   1400280e3:	nop    DWORD PTR [rax+0x0]
   1400280e7:	nop    WORD PTR [rax+rax*1+0x0]
   1400280f0:	movzx  eax,BYTE PTR [r8]
   1400280f4:	movzx  edx,BYTE PTR [r8-0x1]
   1400280f9:	lea    r8,[r8+0x4]
   1400280fd:	shl    edx,0x8
   140028100:	or     edx,eax
   140028102:	movzx  eax,BYTE PTR [r8-0x3]
   140028107:	shl    edx,0x8
   14002810a:	or     edx,eax
   14002810c:	movzx  eax,BYTE PTR [r8-0x2]
   140028111:	shl    edx,0x8
   140028114:	or     edx,eax
   140028116:	mov    DWORD PTR [rcx+r8*1-0x19],edx
   14002811b:	dec    r9
   14002811e:	jne    0x1400280f0
   140028120:	lea    rdx,[rsp+0x8]
   140028125:	lea    r8d,[r9+0x40]
   140028129:	nop    DWORD PTR [rax+0x0]
   140028130:	mov    eax,DWORD PTR [rdx+0x2c]
   140028133:	lea    rdx,[rdx+0x4]
   140028137:	xor    eax,DWORD PTR [rdx+0x14]
   14002813a:	xor    eax,DWORD PTR [rdx-0xc]
   14002813d:	xor    eax,DWORD PTR [rdx-0x4]
   140028140:	mov    ecx,eax
   140028142:	add    eax,eax
   140028144:	shr    ecx,0x1f
   140028147:	xor    ecx,eax
   140028149:	mov    DWORD PTR [rdx+0x34],ecx
   14002814c:	dec    r8
   14002814f:	jne    0x140028130
   140028151:	mov    r14d,DWORD PTR [rdi]
   140028154:	mov    r15d,DWORD PTR [rdi+0x4]
   140028158:	mov    r12d,DWORD PTR [rdi+0x8]
   14002815c:	mov    r13d,DWORD PTR [rdi+0xc]
   140028160:	mov    ebp,DWORD PTR [rdi+0x10]
   140028163:	mov    esi,r14d
   140028166:	mov    edx,r15d
   140028169:	mov    r8d,r12d
   14002816c:	xor    r9d,r9d
   14002816f:	mov    r10d,r13d
   140028172:	cmp    r9,0x14
   140028176:	jae    0x14002818e
   140028178:	mov    eax,edx
   14002817a:	mov    ecx,r8d
   14002817d:	mov    r11d,0x5a827999
   140028183:	not    eax
   140028185:	and    ecx,edx
   140028187:	and    eax,r10d
   14002818a:	or     eax,ecx
   14002818c:	jmp    0x1400281c7
   14002818e:	cmp    r9,0x28
   140028192:	jae    0x14002819c
   140028194:	mov    r11d,0x6ed9eba1
   14002819a:	jmp    0x1400281bf
   14002819c:	cmp    r9,0x3c
   1400281a0:	jae    0x1400281b9
   1400281a2:	mov    eax,r8d
   1400281a5:	mov    ecx,r8d
   1400281a8:	mov    r11d,0x8f1bbcdc
   1400281ae:	or     eax,edx
   1400281b0:	and    ecx,edx
   1400281b2:	and    eax,r10d
   1400281b5:	or     eax,ecx
   1400281b7:	jmp    0x1400281c7
   1400281b9:	mov    r11d,0xca62c1d6
   1400281bf:	mov    eax,r10d
   1400281c2:	xor    eax,r8d
   1400281c5:	xor    eax,edx
   1400281c7:	mov    ebx,esi
   1400281c9:	mov    ecx,esi
   1400281cb:	inc    r9
   1400281ce:	shr    ebx,0x1b
   1400281d1:	shl    ecx,0x5
   1400281d4:	xor    ebx,ecx
   1400281d6:	add    ebx,DWORD PTR [rsp+r9*4-0x4]
   1400281db:	add    ebx,r11d
   1400281de:	add    ebx,eax
   1400281e0:	add    ebx,ebp
   1400281e2:	mov    ebp,r10d
   1400281e5:	mov    r10d,r8d
   1400281e8:	mov    r8d,edx
   1400281eb:	shr    edx,0x2
   1400281ee:	shl    r8d,0x1e
   1400281f2:	xor    r8d,edx
   1400281f5:	mov    edx,esi
   1400281f7:	mov    esi,ebx
   1400281f9:	cmp    r9,0x50
   1400281fd:	jb     0x140028172
   140028203:	add    DWORD PTR [rdi+0x10],ebp
   140028206:	lea    eax,[r14+rbx*1]
   14002820a:	lea    r11,[rsp+0x140]
   140028212:	mov    rbx,QWORD PTR [r11+0x30]
   140028216:	mov    rbp,QWORD PTR [r11+0x38]
   14002821a:	mov    rsi,QWORD PTR [r11+0x40]
   14002821e:	mov    DWORD PTR [rdi],eax
   140028220:	lea    eax,[r15+rdx*1]
   140028224:	mov    DWORD PTR [rdi+0x4],eax
   140028227:	lea    eax,[r12+r8*1]
   14002822b:	mov    DWORD PTR [rdi+0x8],eax
   14002822e:	lea    eax,[r10+r13*1]
   140028232:	mov    DWORD PTR [rdi+0xc],eax
   140028235:	mov    rsp,r11
   140028238:	pop    r15
   14002823a:	pop    r14
   14002823c:	pop    r13
   14002823e:	pop    r12
   140028240:	pop    rdi
   140028241:	ret    
   140028242:	int3   
   140028243:	int3   
   140028244:	int3   
   140028245:	int3   
   140028246:	int3   
   140028247:	int3   
   140028248:	int3   
   140028249:	int3   
   14002824a:	int3   
   14002824b:	int3   
   14002824c:	int3   
   14002824d:	int3   
   14002824e:	int3   
   14002824f:	int3   
   140028250:	cmp    rdx,r8
   140028253:	je     0x140028373
   140028259:	mov    rax,rsp
   14002825c:	push   rdi
   14002825d:	push   r14
   14002825f:	push   r15
   140028261:	sub    rsp,0x80
   140028268:	mov    QWORD PTR [rax-0x78],0xfffffffffffffffe
   140028270:	mov    QWORD PTR [rax+0x8],rbx
   140028274:	mov    QWORD PTR [rax+0x18],rbp
   140028278:	mov    QWORD PTR [rax+0x20],rsi
   14002827c:	mov    rsi,r8
   14002827f:	mov    rdi,rdx
   140028282:	mov    rbx,rcx
   140028285:	xor    ebp,ebp
   140028287:	mov    r14d,0xfffffff8
   14002828d:	mov    r15d,0xfffffffe
   140028293:	nop    DWORD PTR [rax+0x0]
   140028297:	nop    WORD PTR [rax+rax*1+0x0]
   1400282a0:	movzx  ecx,BYTE PTR [rdi]
   1400282a3:	mov    rax,QWORD PTR [rbx+0x58]
   1400282a7:	mov    BYTE PTR [rax+rbx*1+0x14],cl
   1400282ab:	inc    QWORD PTR [rbx+0x58]
   1400282af:	cmp    QWORD PTR [rbx+0x58],0x40
   1400282b4:	jne    0x1400282c2
   1400282b6:	mov    QWORD PTR [rbx+0x58],rbp
   1400282ba:	mov    rcx,rbx
   1400282bd:	call   0x1400280b0
   1400282c2:	mov    rax,QWORD PTR [rbx+0x60]
   1400282c6:	cmp    rax,r14
   1400282c9:	jae    0x1400282d5
   1400282cb:	add    rax,0x8
   1400282cf:	mov    QWORD PTR [rbx+0x60],rax
   1400282d3:	jmp    0x1400282e9
   1400282d5:	mov    QWORD PTR [rbx+0x60],rbp
   1400282d9:	mov    rax,QWORD PTR [rbx+0x68]
   1400282dd:	cmp    rax,r15
   1400282e0:	ja     0x1400282f3
   1400282e2:	inc    rax
   1400282e5:	mov    QWORD PTR [rbx+0x68],rax
   1400282e9:	inc    rdi
   1400282ec:	cmp    rdi,rsi
   1400282ef:	jne    0x1400282a0
   1400282f1:	jmp    0x140028357
   1400282f3:	lea    rax,[rip+0x1292e]        # 0x14003ac28
   1400282fa:	mov    QWORD PTR [rsp+0xa8],rax
   140028302:	lea    rdx,[rsp+0xa8]
   14002830a:	lea    rcx,[rsp+0x28]
   14002830f:	call   QWORD PTR [rip+0xe13b]        # 0x140036450
   140028315:	lea    rax,[rip+0x1233c]        # 0x14003a658
   14002831c:	mov    QWORD PTR [rsp+0x28],rax
   140028321:	lea    rdx,[rsp+0x28]
   140028326:	lea    rcx,[rsp+0x40]
   14002832b:	call   0x140008070
   140028330:	nop
   140028331:	lea    rcx,[rip+0x128a8]        # 0x14003abe0
   140028338:	mov    QWORD PTR [rax+0x28],rcx
   14002833c:	lea    rcx,[rip+0x1283d]        # 0x14003ab80
   140028343:	mov    QWORD PTR [rax+0x30],rcx
   140028347:	mov    DWORD PTR [rax+0x38],0x89
   14002834e:	mov    rcx,rax
   140028351:	call   0x14000ddb0
   140028356:	nop
   140028357:	lea    r11,[rsp+0x80]
   14002835f:	mov    rbx,QWORD PTR [r11+0x20]
   140028363:	mov    rbp,QWORD PTR [r11+0x30]
   140028367:	mov    rsi,QWORD PTR [r11+0x38]
   14002836b:	mov    rsp,r11
   14002836e:	pop    r15
   140028370:	pop    r14
   140028372:	pop    rdi
   140028373:	ret    
   140028374:	int3   
   140028375:	int3   
   140028376:	int3   
   140028377:	int3   
   140028378:	int3   
   140028379:	int3   
   14002837a:	int3   
   14002837b:	int3   
   14002837c:	int3   
   14002837d:	int3   
   14002837e:	int3   
   14002837f:	int3   
   140028380:	rex push rbx
   140028382:	sub    rsp,0x80
   140028389:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140028392:	mov    rbx,rcx
   140028395:	mov    rax,QWORD PTR [rcx+0x58]
   140028399:	mov    BYTE PTR [rcx+rax*1+0x14],dl
   14002839d:	inc    QWORD PTR [rcx+0x58]
   1400283a1:	cmp    QWORD PTR [rcx+0x58],0x40
   1400283a6:	jne    0x1400283b5
   1400283a8:	mov    QWORD PTR [rcx+0x58],0x0
   1400283b0:	call   0x1400280b0
   1400283b5:	mov    rax,QWORD PTR [rbx+0x60]
   1400283b9:	mov    ecx,0xfffffff8
   1400283be:	cmp    rax,rcx
   1400283c1:	jae    0x1400283d0
   1400283c3:	add    rax,0x8
   1400283c7:	mov    QWORD PTR [rbx+0x60],rax
   1400283cb:	jmp    0x140028453
   1400283d0:	mov    QWORD PTR [rbx+0x60],0x0
   1400283d8:	mov    rax,QWORD PTR [rbx+0x68]
   1400283dc:	mov    ecx,0xfffffffe
   1400283e1:	cmp    rax,rcx
   1400283e4:	ja     0x1400283ef
   1400283e6:	inc    rax
   1400283e9:	mov    QWORD PTR [rbx+0x68],rax
   1400283ed:	jmp    0x140028453
   1400283ef:	lea    rax,[rip+0x12832]        # 0x14003ac28
   1400283f6:	mov    QWORD PTR [rsp+0x90],rax
   1400283fe:	lea    rdx,[rsp+0x90]
   140028406:	lea    rcx,[rsp+0x28]
   14002840b:	call   QWORD PTR [rip+0xe03f]        # 0x140036450
   140028411:	lea    rax,[rip+0x12240]        # 0x14003a658
   140028418:	mov    QWORD PTR [rsp+0x28],rax
   14002841d:	lea    rdx,[rsp+0x28]
   140028422:	lea    rcx,[rsp+0x40]
   140028427:	call   0x140008070
   14002842c:	nop
   14002842d:	lea    rcx,[rip+0x127ac]        # 0x14003abe0
   140028434:	mov    QWORD PTR [rax+0x28],rcx
   140028438:	lea    rcx,[rip+0x12741]        # 0x14003ab80
   14002843f:	mov    QWORD PTR [rax+0x30],rcx
   140028443:	mov    DWORD PTR [rax+0x38],0x89
   14002844a:	mov    rcx,rax
   14002844d:	call   0x14000ddb0
   140028452:	nop
   140028453:	add    rsp,0x80
   14002845a:	pop    rbx
   14002845b:	ret    
   14002845c:	int3   
   14002845d:	int3   
   14002845e:	int3   
   14002845f:	int3   
   140028460:	mov    rax,QWORD PTR [rcx+0x58]
   140028464:	mov    BYTE PTR [rcx+rax*1+0x14],dl
   140028468:	inc    QWORD PTR [rcx+0x58]
   14002846c:	cmp    QWORD PTR [rcx+0x58],0x40
   140028471:	jne    0x140028480
   140028473:	mov    QWORD PTR [rcx+0x58],0x0
   14002847b:	jmp    0x1400280b0
   140028480:	ret    
   140028481:	int3   
   140028482:	int3   
   140028483:	int3   
   140028484:	int3   
   140028485:	int3   
   140028486:	int3   
   140028487:	int3   
   140028488:	int3   
   140028489:	int3   
   14002848a:	int3   
   14002848b:	int3   
   14002848c:	int3   
   14002848d:	int3   
   14002848e:	int3   
   14002848f:	int3   
   140028490:	add    r8,rdx
   140028493:	jmp    0x140028250
   140028498:	int3   
   140028499:	int3   
   14002849a:	int3   
   14002849b:	int3   
   14002849c:	int3   
   14002849d:	int3   
   14002849e:	int3   
   14002849f:	int3   
   1400284a0:	lea    rax,[rcx+0x10]
   1400284a4:	ret    
   1400284a5:	int3   
   1400284a6:	int3   
   1400284a7:	int3   
   1400284a8:	int3   
   1400284a9:	int3   
   1400284aa:	int3   
   1400284ab:	int3   
   1400284ac:	int3   
   1400284ad:	int3   
   1400284ae:	int3   
   1400284af:	int3   
   1400284b0:	rex push rbx
   1400284b2:	sub    rsp,0x30
   1400284b6:	mov    rcx,QWORD PTR [rcx+0x20]
   1400284ba:	mov    r9,r8
   1400284bd:	mov    rbx,rdx
   1400284c0:	add    rcx,0x11
   1400284c4:	je     0x1400284cc
   1400284c6:	lea    r8,[rcx-0x11]
   1400284ca:	jmp    0x1400284cf
   1400284cc:	xor    r8d,r8d
   1400284cf:	mov    r8,QWORD PTR [r8+0x8]
   1400284d3:	lea    rdx,[rsp+0x20]
   1400284d8:	call   0x1400252b0
   1400284dd:	mov    rax,QWORD PTR [rsp+0x20]
   1400284e2:	mov    QWORD PTR [rbx],rax
   1400284e5:	mov    rax,rbx
   1400284e8:	add    rsp,0x30
   1400284ec:	pop    rbx
   1400284ed:	ret    
   1400284ee:	int3   
   1400284ef:	int3   
   1400284f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400284f5:	push   rdi
   1400284f6:	sub    rsp,0x20
   1400284fa:	mov    rdi,QWORD PTR [rcx]
   1400284fd:	mov    r9,rdx
   140028500:	mov    rbx,rcx
   140028503:	mov    r8,QWORD PTR [rdi+0x8]
   140028507:	mov    rdx,rdi
   14002850a:	call   0x140003e60
   14002850f:	movabs rdx,0xaaaaaaaaaaaaaa9
   140028519:	mov    r8,rax
   14002851c:	mov    rax,QWORD PTR [rbx+0x8]
   140028520:	sub    rdx,rax
   140028523:	cmp    rdx,0x1
   140028527:	jae    0x140028537
   140028529:	lea    rcx,[rip+0x16228]        # 0x14003e758
   140028530:	call   QWORD PTR [rip+0xdcea]        # 0x140036220
   140028536:	int3   
   140028537:	inc    rax
   14002853a:	mov    QWORD PTR [rbx+0x8],rax
   14002853e:	mov    rbx,QWORD PTR [rsp+0x30]
   140028543:	mov    QWORD PTR [rdi+0x8],r8
   140028547:	mov    rax,QWORD PTR [r8+0x8]
   14002854b:	mov    QWORD PTR [rax],r8
   14002854e:	add    rsp,0x20
   140028552:	pop    rdi
   140028553:	ret    
   140028554:	int3   
   140028555:	int3   
   140028556:	int3   
   140028557:	int3   
   140028558:	int3   
   140028559:	int3   
   14002855a:	int3   
   14002855b:	int3   
   14002855c:	int3   
   14002855d:	int3   
   14002855e:	int3   
   14002855f:	int3   
   140028560:	rex push rbx
   140028562:	sub    rsp,0x20
   140028566:	mov    r9,r8
   140028569:	mov    rbx,rdx
   14002856c:	test   rcx,rcx
   14002856f:	je     0x140028587
   140028571:	lea    r8,[rcx-0x11]
   140028575:	mov    r8,QWORD PTR [rcx-0x9]
   140028579:	call   0x1400252b0
   14002857e:	mov    rax,rbx
   140028581:	add    rsp,0x20
   140028585:	pop    rbx
   140028586:	ret    
   140028587:	xor    r8d,r8d
   14002858a:	mov    r8,QWORD PTR [r8+0x8]
   14002858e:	call   0x1400252b0
   140028593:	mov    rax,rbx
   140028596:	add    rsp,0x20
   14002859a:	pop    rbx
   14002859b:	ret    
   14002859c:	int3   
   14002859d:	int3   
   14002859e:	int3   
   14002859f:	int3   
   1400285a0:	rex push rbp
   1400285a2:	push   rsi
   1400285a3:	push   rdi
   1400285a4:	sub    rsp,0x30
   1400285a8:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400285b1:	mov    QWORD PTR [rsp+0x60],rbx
   1400285b6:	mov    rbx,rdx
   1400285b9:	mov    rdi,rcx
   1400285bc:	mov    rax,QWORD PTR [rcx+0x8]
   1400285c0:	cmp    rdx,rax
   1400285c3:	jae    0x14002865e
   1400285c9:	mov    rcx,QWORD PTR [rcx]
   1400285cc:	cmp    rcx,rdx
   1400285cf:	ja     0x14002865e
   1400285d5:	sub    rbx,rcx
   1400285d8:	cmp    rax,QWORD PTR [rdi+0x10]
   1400285dc:	jne    0x1400285eb
   1400285de:	mov    edx,0x1
   1400285e3:	mov    rcx,rdi
   1400285e6:	call   0x14001d5b0
   1400285eb:	and    rbx,0xffffffffffffffe0
   1400285ef:	add    rbx,QWORD PTR [rdi]
   1400285f2:	mov    rsi,QWORD PTR [rdi+0x8]
   1400285f6:	mov    QWORD PTR [rsp+0x50],rsi
   1400285fb:	mov    QWORD PTR [rsp+0x58],rsi
   140028600:	test   rsi,rsi
   140028603:	je     0x14002865c
   140028605:	mov    QWORD PTR [rsi+0x18],0xf
   14002860d:	xor    ebp,ebp
   14002860f:	mov    QWORD PTR [rsi+0x10],rbp
   140028613:	mov    BYTE PTR [rsi],bpl
   140028616:	cmp    QWORD PTR [rbx+0x18],0x10
   14002861b:	jae    0x140028634
   14002861d:	mov    r8,QWORD PTR [rbx+0x10]
   140028621:	inc    r8
   140028624:	je     0x14002863d
   140028626:	mov    rdx,rbx
   140028629:	mov    rcx,rsi
   14002862c:	call   QWORD PTR [rip+0xde2e]        # 0x140036460
   140028632:	jmp    0x14002863d
   140028634:	mov    rax,QWORD PTR [rbx]
   140028637:	mov    QWORD PTR [rsi],rax
   14002863a:	mov    QWORD PTR [rbx],rbp
   14002863d:	mov    rax,QWORD PTR [rbx+0x10]
   140028641:	mov    QWORD PTR [rsi+0x10],rax
   140028645:	mov    rax,QWORD PTR [rbx+0x18]
   140028649:	mov    QWORD PTR [rsi+0x18],rax
   14002864d:	mov    QWORD PTR [rbx+0x18],0xf
   140028655:	mov    QWORD PTR [rbx+0x10],rbp
   140028659:	mov    BYTE PTR [rbx],bpl
   14002865c:	jmp    0x1400286db
   14002865e:	cmp    rax,QWORD PTR [rdi+0x10]
   140028662:	jne    0x140028671
   140028664:	mov    edx,0x1
   140028669:	mov    rcx,rdi
   14002866c:	call   0x14001d5b0
   140028671:	mov    rsi,QWORD PTR [rdi+0x8]
   140028675:	mov    QWORD PTR [rsp+0x50],rsi
   14002867a:	mov    QWORD PTR [rsp+0x58],rsi
   14002867f:	test   rsi,rsi
   140028682:	je     0x1400286db
   140028684:	mov    QWORD PTR [rsi+0x18],0xf
   14002868c:	xor    ebp,ebp
   14002868e:	mov    QWORD PTR [rsi+0x10],rbp
   140028692:	mov    BYTE PTR [rsi],bpl
   140028695:	cmp    QWORD PTR [rbx+0x18],0x10
   14002869a:	jae    0x1400286b3
   14002869c:	mov    r8,QWORD PTR [rbx+0x10]
   1400286a0:	inc    r8
   1400286a3:	je     0x1400286bc
   1400286a5:	mov    rdx,rbx
   1400286a8:	mov    rcx,rsi
   1400286ab:	call   QWORD PTR [rip+0xddaf]        # 0x140036460
   1400286b1:	jmp    0x1400286bc
   1400286b3:	mov    rax,QWORD PTR [rbx]
   1400286b6:	mov    QWORD PTR [rsi],rax
   1400286b9:	mov    QWORD PTR [rbx],rbp
   1400286bc:	mov    rax,QWORD PTR [rbx+0x10]
   1400286c0:	mov    QWORD PTR [rsi+0x10],rax
   1400286c4:	mov    rax,QWORD PTR [rbx+0x18]
   1400286c8:	mov    QWORD PTR [rsi+0x18],rax
   1400286cc:	mov    QWORD PTR [rbx+0x18],0xf
   1400286d4:	mov    QWORD PTR [rbx+0x10],rbp
   1400286d8:	mov    BYTE PTR [rbx],bpl
   1400286db:	add    QWORD PTR [rdi+0x8],0x20
   1400286e0:	mov    rbx,QWORD PTR [rsp+0x60]
   1400286e5:	add    rsp,0x30
   1400286e9:	pop    rdi
   1400286ea:	pop    rsi
   1400286eb:	pop    rbp
   1400286ec:	ret    
   1400286ed:	int3   
   1400286ee:	int3   
   1400286ef:	int3   
   1400286f0:	mov    QWORD PTR [rsp+0x18],r8
   1400286f5:	push   rbp
   1400286f6:	push   rsi
   1400286f7:	push   rdi
   1400286f8:	push   r12
   1400286fa:	push   r13
   1400286fc:	push   r14
   1400286fe:	push   r15
   140028700:	lea    rbp,[rsp-0x27]
   140028705:	sub    rsp,0xd0
   14002870c:	mov    QWORD PTR [rbp+0xf],0xfffffffffffffffe
   140028714:	mov    QWORD PTR [rsp+0x110],rbx
   14002871c:	mov    rbx,rdx
   14002871f:	mov    rdi,rcx
   140028722:	mov    QWORD PTR [rbp-0x51],0xf
   14002872a:	mov    QWORD PTR [rbp-0x59],0x0
   140028732:	mov    BYTE PTR [rbp-0x69],0x0
   140028736:	or     r9,0xffffffffffffffff
   14002873a:	xor    r8d,r8d
   14002873d:	lea    rcx,[rbp-0x69]
   140028741:	call   0x14001ef20
   140028746:	movzx  eax,BYTE PTR [rbx+0x20]
   14002874a:	mov    BYTE PTR [rbp-0x49],al
   14002874d:	lea    rax,[rbp-0x69]
   140028751:	cmp    QWORD PTR [rbp-0x51],0x10
   140028756:	cmovae rax,QWORD PTR [rbp-0x69]
   14002875b:	mov    rcx,QWORD PTR [rbx+0x28]
   14002875f:	cmp    QWORD PTR [rbx+0x18],0x10
   140028764:	jb     0x140028769
   140028766:	mov    rbx,QWORD PTR [rbx]
   140028769:	sub    rcx,rbx
   14002876c:	add    rax,rcx
   14002876f:	mov    QWORD PTR [rbp-0x41],rax
   140028773:	lea    rdx,[rbp-0x69]
   140028777:	mov    rcx,rdi
   14002877a:	call   0x140023b90
   14002877f:	mov    rbx,rax
   140028782:	mov    QWORD PTR [rbp+0x6f],rax
   140028786:	lea    rdx,[rsp+0x20]
   14002878b:	lea    rcx,[rbp-0x69]
   14002878f:	call   0x140029940
   140028794:	nop
   140028795:	mov    rax,QWORD PTR [rbx+0x20]
   140028799:	test   rax,rax
   14002879c:	je     0x1400287ad
   14002879e:	lea    rcx,[rax+0x11]
   1400287a2:	test   rcx,rcx
   1400287a5:	je     0x1400287af
   1400287a7:	lea    rax,[rcx-0x11]
   1400287ab:	jmp    0x1400287b1
   1400287ad:	xor    ecx,ecx
   1400287af:	xor    eax,eax
   1400287b1:	mov    r13,QWORD PTR [rax+0x8]
   1400287b5:	test   rcx,rcx
   1400287b8:	je     0x1400287c0
   1400287ba:	lea    rax,[rcx-0x11]
   1400287be:	jmp    0x1400287c2
   1400287c0:	xor    eax,eax
   1400287c2:	mov    rax,QWORD PTR [rax+0x8]
   1400287c6:	mov    rbx,QWORD PTR [rax+0x48]
   1400287ca:	and    rbx,0xfffffffffffffffe
   1400287ce:	je     0x1400287d6
   1400287d0:	add    rbx,0xffffffffffffffb8
   1400287d4:	jmp    0x1400287d8
   1400287d6:	xor    ebx,ebx
   1400287d8:	mov    r14,r13
   1400287db:	test   rbx,rbx
   1400287de:	je     0x1400288bb
   1400287e4:	mov    r15,QWORD PTR [rbp-0x71]
   1400287e8:	mov    rsi,QWORD PTR [rbp-0x79]
   1400287ec:	mov    r12,QWORD PTR [rsp+0x20]
   1400287f1:	lea    rdx,[rsp+0x20]
   1400287f6:	cmp    r15,0x10
   1400287fa:	cmovae rdx,r12
   1400287fe:	mov    rdi,QWORD PTR [rbx+0x10]
   140028802:	cmp    QWORD PTR [rbx+0x18],0x10
   140028807:	jb     0x14002880e
   140028809:	mov    rcx,QWORD PTR [rbx]
   14002880c:	jmp    0x140028811
   14002880e:	mov    rcx,rbx
   140028811:	mov    r8,rsi
   140028814:	cmp    rdi,rsi
   140028817:	cmovb  r8,rdi
   14002881b:	test   r8,r8
   14002881e:	jne    0x140028824
   140028820:	xor    eax,eax
   140028822:	jmp    0x140028829
   140028824:	call   0x140030484
   140028829:	cdqe   
   14002882b:	test   rax,rax
   14002882e:	jne    0x140028842
   140028830:	cmp    rdi,rsi
   140028833:	jae    0x14002883a
   140028835:	or     eax,0xffffffff
   140028838:	jmp    0x140028842
   14002883a:	xor    eax,eax
   14002883c:	cmp    rdi,rsi
   14002883f:	setne  al
   140028842:	test   eax,eax
   140028844:	js     0x14002884f
   140028846:	mov    r14,rbx
   140028849:	mov    rbx,QWORD PTR [rbx+0x50]
   14002884d:	jmp    0x140028853
   14002884f:	mov    rbx,QWORD PTR [rbx+0x58]
   140028853:	test   rbx,rbx
   140028856:	je     0x140028861
   140028858:	add    rbx,0xffffffffffffffb8
   14002885c:	test   rbx,rbx
   14002885f:	jne    0x1400287f1
   140028861:	cmp    r14,r13
   140028864:	je     0x1400288bb
   140028866:	mov    rbx,QWORD PTR [r14+0x10]
   14002886a:	cmp    QWORD PTR [r14+0x18],0x10
   14002886f:	jb     0x140028876
   140028871:	mov    rdx,QWORD PTR [r14]
   140028874:	jmp    0x140028879
   140028876:	mov    rdx,r14
   140028879:	lea    rcx,[rsp+0x20]
   14002887e:	cmp    r15,0x10
   140028882:	cmovae rcx,r12
   140028886:	mov    r8,rbx
   140028889:	cmp    rsi,rbx
   14002888c:	cmovb  r8,rsi
   140028890:	test   r8,r8
   140028893:	jne    0x140028899
   140028895:	xor    eax,eax
   140028897:	jmp    0x14002889e
   140028899:	call   0x140030484
   14002889e:	cdqe   
   1400288a0:	test   rax,rax
   1400288a3:	jne    0x1400288b7
   1400288a5:	cmp    rsi,rbx
   1400288a8:	jae    0x1400288af
   1400288aa:	or     eax,0xffffffff
   1400288ad:	jmp    0x1400288b7
   1400288af:	xor    eax,eax
   1400288b1:	cmp    rsi,rbx
   1400288b4:	setne  al
   1400288b7:	test   eax,eax
   1400288b9:	jns    0x1400288be
   1400288bb:	mov    r14,r13
   1400288be:	mov    rbx,QWORD PTR [rbp+0x6f]
   1400288c2:	mov    rax,QWORD PTR [rbx+0x20]
   1400288c6:	test   rax,rax
   1400288c9:	je     0x1400288d7
   1400288cb:	add    rax,0x11
   1400288cf:	je     0x1400288d7
   1400288d1:	add    rax,0xffffffffffffffef
   1400288d5:	jmp    0x1400288d9
   1400288d7:	xor    eax,eax
   1400288d9:	cmp    r14,QWORD PTR [rax+0x8]
   1400288dd:	je     0x1400288f4
   1400288df:	lea    rcx,[r14+0x20]
   1400288e3:	mov    rdx,QWORD PTR [rbp+0x77]
   1400288e7:	call   0x1400193b0
   1400288ec:	mov    rbx,rax
   1400288ef:	jmp    0x140028986
   1400288f4:	mov    QWORD PTR [rbp-0x21],0xf
   1400288fc:	mov    QWORD PTR [rbp-0x29],0x0
   140028904:	mov    BYTE PTR [rbp-0x39],0x0
   140028908:	or     r9,0xffffffffffffffff
   14002890c:	xor    r8d,r8d
   14002890f:	lea    rdx,[rsp+0x20]
   140028914:	lea    rcx,[rbp-0x39]
   140028918:	call   0x14001ef20
   14002891d:	nop
   14002891e:	mov    rdx,QWORD PTR [rbp+0x77]
   140028922:	lea    rcx,[rbp-0x19]
   140028926:	call   0x140010e10
   14002892b:	nop
   14002892c:	mov    rcx,QWORD PTR [rbx+0x20]
   140028930:	add    rcx,0x11
   140028934:	je     0x14002893c
   140028936:	lea    r8,[rcx-0x11]
   14002893a:	jmp    0x14002893f
   14002893c:	xor    r8d,r8d
   14002893f:	lea    r9,[rbp-0x39]
   140028943:	mov    r8,QWORD PTR [r8+0x8]
   140028947:	lea    rdx,[rbp+0x17]
   14002894b:	call   0x1400252b0
   140028950:	mov    rbx,QWORD PTR [rbp+0x17]
   140028954:	add    rbx,0x20
   140028958:	lea    rcx,[rbp-0x19]
   14002895c:	call   0x140017040
   140028961:	nop
   140028962:	cmp    QWORD PTR [rbp-0x21],0x10
   140028967:	jb     0x140028972
   140028969:	mov    rcx,QWORD PTR [rbp-0x39]
   14002896d:	call   0x140030282
   140028972:	mov    QWORD PTR [rbp-0x21],0xf
   14002897a:	mov    QWORD PTR [rbp-0x29],0x0
   140028982:	mov    BYTE PTR [rbp-0x39],0x0
   140028986:	cmp    QWORD PTR [rbp-0x71],0x10
   14002898b:	jb     0x140028997
   14002898d:	mov    rcx,QWORD PTR [rsp+0x20]
   140028992:	call   0x140030282
   140028997:	mov    QWORD PTR [rbp-0x71],0xf
   14002899f:	mov    QWORD PTR [rbp-0x79],0x0
   1400289a7:	mov    BYTE PTR [rsp+0x20],0x0
   1400289ac:	cmp    QWORD PTR [rbp-0x51],0x10
   1400289b1:	jb     0x1400289bc
   1400289b3:	mov    rcx,QWORD PTR [rbp-0x69]
   1400289b7:	call   0x140030282
   1400289bc:	mov    rax,rbx
   1400289bf:	mov    rbx,QWORD PTR [rsp+0x110]
   1400289c7:	add    rsp,0xd0
   1400289ce:	pop    r15
   1400289d0:	pop    r14
   1400289d2:	pop    r13
   1400289d4:	pop    r12
   1400289d6:	pop    rdi
   1400289d7:	pop    rsi
   1400289d8:	pop    rbp
   1400289d9:	ret    
   1400289da:	int3   
   1400289db:	int3   
   1400289dc:	int3   
   1400289dd:	int3   
   1400289de:	int3   
   1400289df:	int3   
   1400289e0:	rex push rbx
   1400289e2:	sub    rsp,0x30
   1400289e6:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   1400289ef:	mov    rax,r8
   1400289f2:	mov    rbx,rdx
   1400289f5:	xor    edx,edx
   1400289f7:	mov    DWORD PTR [rsp+0x20],edx
   1400289fb:	mov    BYTE PTR [rbx],dl
   1400289fd:	lea    rcx,[rbx+0x8]
   140028a01:	mov    QWORD PTR [rsp+0x48],rcx
   140028a06:	mov    QWORD PTR [rsp+0x58],rcx
   140028a0b:	test   rcx,rcx
   140028a0e:	je     0x140028a2e
   140028a10:	mov    QWORD PTR [rcx+0x18],0xf
   140028a18:	mov    QWORD PTR [rcx+0x10],rdx
   140028a1c:	mov    BYTE PTR [rcx],dl
   140028a1e:	or     r9,0xffffffffffffffff
   140028a22:	xor    r8d,r8d
   140028a25:	mov    rdx,rax
   140028a28:	call   0x14001ef20
   140028a2d:	nop
   140028a2e:	mov    BYTE PTR [rbx],0x1
   140028a31:	mov    rax,rbx
   140028a34:	add    rsp,0x30
   140028a38:	pop    rbx
   140028a39:	ret    
   140028a3a:	int3   
   140028a3b:	int3   
   140028a3c:	int3   
   140028a3d:	int3   
   140028a3e:	int3   
   140028a3f:	int3   
   140028a40:	mov    rax,rsp
   140028a43:	push   rbp
   140028a44:	push   rdi
   140028a45:	push   r14
   140028a47:	lea    rbp,[rax-0x58]
   140028a4b:	sub    rsp,0x140
   140028a52:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   140028a5b:	mov    QWORD PTR [rax+0x10],rbx
   140028a5f:	mov    QWORD PTR [rax+0x18],rsi
   140028a63:	mov    rsi,r8
   140028a66:	mov    rdi,rdx
   140028a69:	mov    rbx,rcx
   140028a6c:	mov    DWORD PTR [rsp+0x20],0x0
   140028a74:	lea    rax,[rip+0x1372d]        # 0x14003c1a8
   140028a7b:	mov    QWORD PTR [rsp+0x50],rax
   140028a80:	mov    rax,QWORD PTR [rip+0xd5c9]        # 0x140036050
   140028a87:	mov    QWORD PTR [rbp-0x28],rax
   140028a8b:	mov    DWORD PTR [rsp+0x20],0x2
   140028a93:	xor    r9d,r9d
   140028a96:	xor    r8d,r8d
   140028a99:	lea    rdx,[rsp+0x58]
   140028a9e:	lea    rcx,[rsp+0x50]
   140028aa3:	call   QWORD PTR [rip+0xd6cf]        # 0x140036178
   140028aa9:	nop
   140028aaa:	mov    rax,QWORD PTR [rsp+0x50]
   140028aaf:	movsxd rcx,DWORD PTR [rax+0x4]
   140028ab3:	lea    r14,[rip+0x136e6]        # 0x14003c1a0
   140028aba:	mov    QWORD PTR [rsp+rcx*1+0x50],r14
   140028abf:	mov    rax,QWORD PTR [rsp+0x50]
   140028ac4:	movsxd rcx,DWORD PTR [rax+0x4]
   140028ac8:	lea    r8d,[rcx-0x88]
   140028acf:	mov    DWORD PTR [rsp+rcx*1+0x4c],r8d
   140028ad4:	mov    edx,0x2
   140028ad9:	lea    rcx,[rsp+0x58]
   140028ade:	call   0x1400112a0
   140028ae3:	nop
   140028ae4:	mov    rax,QWORD PTR [rsp+0x50]
   140028ae9:	movsxd rcx,DWORD PTR [rax+0x4]
   140028aed:	lea    rdx,[rsp+0x50]
   140028af2:	add    rcx,rdx
   140028af5:	mov    r8,rbx
   140028af8:	lea    rdx,[rbp+0x60]
   140028afc:	call   QWORD PTR [rip+0xd68e]        # 0x140036190
   140028b02:	mov    rcx,QWORD PTR [rbp+0x60]
   140028b06:	test   rcx,rcx
   140028b09:	je     0x140028b24
   140028b0b:	mov    rax,QWORD PTR [rcx]
   140028b0e:	call   QWORD PTR [rax+0x10]
   140028b11:	test   rax,rax
   140028b14:	je     0x140028b24
   140028b16:	mov    r8,QWORD PTR [rax]
   140028b19:	mov    edx,0x1
   140028b1e:	mov    rcx,rax
   140028b21:	call   QWORD PTR [r8]
   140028b24:	mov    rdx,rsi
   140028b27:	lea    rcx,[rsp+0x50]
   140028b2c:	call   0x140002f70
   140028b31:	mov    rcx,QWORD PTR [rsp+0x50]
   140028b36:	movsxd rax,DWORD PTR [rcx+0x4]
   140028b3a:	test   BYTE PTR [rsp+rax*1+0x60],0x6
   140028b3f:	jne    0x140028bd6
   140028b45:	lea    rdx,[rsp+0x28]
   140028b4a:	lea    rcx,[rsp+0x50]
   140028b4f:	call   0x14002c9e0
   140028b54:	mov    BYTE PTR [rdi],0x0
   140028b57:	lea    rcx,[rdi+0x8]
   140028b5b:	test   rcx,rcx
   140028b5e:	je     0x140028b68
   140028b60:	mov    rdx,rax
   140028b63:	call   0x140011010
   140028b68:	mov    BYTE PTR [rdi],0x1
   140028b6b:	cmp    QWORD PTR [rsp+0x40],0x10
   140028b71:	jb     0x140028b7d
   140028b73:	mov    rcx,QWORD PTR [rsp+0x28]
   140028b78:	call   0x140030282
   140028b7d:	mov    QWORD PTR [rsp+0x40],0xf
   140028b86:	mov    QWORD PTR [rsp+0x38],0x0
   140028b8f:	mov    BYTE PTR [rsp+0x28],0x0
   140028b94:	mov    rax,QWORD PTR [rsp+0x50]
   140028b99:	movsxd rcx,DWORD PTR [rax+0x4]
   140028b9d:	mov    QWORD PTR [rsp+rcx*1+0x50],r14
   140028ba2:	mov    rax,QWORD PTR [rsp+0x50]
   140028ba7:	movsxd rcx,DWORD PTR [rax+0x4]
   140028bab:	lea    edx,[rcx-0x88]
   140028bb1:	mov    DWORD PTR [rsp+rcx*1+0x4c],edx
   140028bb5:	lea    rcx,[rsp+0x58]
   140028bba:	call   0x140017170
   140028bbf:	lea    rcx,[rsp+0x60]
   140028bc4:	call   QWORD PTR [rip+0xd5a6]        # 0x140036170
   140028bca:	lea    rcx,[rbp-0x28]
   140028bce:	call   QWORD PTR [rip+0xd5cc]        # 0x1400361a0
   140028bd4:	jmp    0x140028c1f
   140028bd6:	mov    BYTE PTR [rdi],0x0
   140028bd9:	movsxd rax,DWORD PTR [rcx+0x4]
   140028bdd:	mov    QWORD PTR [rsp+rax*1+0x50],r14
   140028be2:	mov    rax,QWORD PTR [rsp+0x50]
   140028be7:	movsxd rcx,DWORD PTR [rax+0x4]
   140028beb:	lea    edx,[rcx-0x88]
   140028bf1:	mov    DWORD PTR [rsp+rcx*1+0x4c],edx
   140028bf5:	lea    rcx,[rsp+0x58]
   140028bfa:	call   0x140017170
   140028bff:	lea    rcx,[rsp+0x60]
   140028c04:	call   QWORD PTR [rip+0xd566]        # 0x140036170
   140028c0a:	mov    rax,QWORD PTR [rip+0xd44f]        # 0x140036060
   140028c11:	mov    QWORD PTR [rbp-0x28],rax
   140028c15:	lea    rcx,[rbp-0x28]
   140028c19:	call   QWORD PTR [rip+0xd6b1]        # 0x1400362d0
   140028c1f:	mov    rax,rdi
   140028c22:	lea    r11,[rsp+0x140]
   140028c2a:	mov    rbx,QWORD PTR [r11+0x28]
   140028c2e:	mov    rsi,QWORD PTR [r11+0x30]
   140028c32:	mov    rsp,r11
   140028c35:	pop    r14
   140028c37:	pop    rdi
   140028c38:	pop    rbp
   140028c39:	ret    
   140028c3a:	int3   
   140028c3b:	int3   
   140028c3c:	int3   
   140028c3d:	int3   
   140028c3e:	int3   
   140028c3f:	int3   
   140028c40:	mov    rax,rsp
   140028c43:	push   rbp
   140028c44:	push   rdi
   140028c45:	push   r14
   140028c47:	lea    rbp,[rax-0x58]
   140028c4b:	sub    rsp,0x140
   140028c52:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   140028c5b:	mov    QWORD PTR [rax+0x10],rbx
   140028c5f:	mov    QWORD PTR [rax+0x18],rsi
   140028c63:	mov    rsi,r8
   140028c66:	mov    rdi,rdx
   140028c69:	mov    rbx,rcx
   140028c6c:	mov    DWORD PTR [rsp+0x20],0x0
   140028c74:	lea    rax,[rip+0x1352d]        # 0x14003c1a8
   140028c7b:	mov    QWORD PTR [rsp+0x50],rax
   140028c80:	mov    rax,QWORD PTR [rip+0xd3c9]        # 0x140036050
   140028c87:	mov    QWORD PTR [rbp-0x28],rax
   140028c8b:	mov    DWORD PTR [rsp+0x20],0x2
   140028c93:	xor    r9d,r9d
   140028c96:	xor    r8d,r8d
   140028c99:	lea    rdx,[rsp+0x58]
   140028c9e:	lea    rcx,[rsp+0x50]
   140028ca3:	call   QWORD PTR [rip+0xd4cf]        # 0x140036178
   140028ca9:	nop
   140028caa:	mov    rax,QWORD PTR [rsp+0x50]
   140028caf:	movsxd rcx,DWORD PTR [rax+0x4]
   140028cb3:	lea    r14,[rip+0x134e6]        # 0x14003c1a0
   140028cba:	mov    QWORD PTR [rsp+rcx*1+0x50],r14
   140028cbf:	mov    rax,QWORD PTR [rsp+0x50]
   140028cc4:	movsxd rcx,DWORD PTR [rax+0x4]
   140028cc8:	lea    r8d,[rcx-0x88]
   140028ccf:	mov    DWORD PTR [rsp+rcx*1+0x4c],r8d
   140028cd4:	mov    edx,0x2
   140028cd9:	lea    rcx,[rsp+0x58]
   140028cde:	call   0x1400112a0
   140028ce3:	nop
   140028ce4:	mov    rax,QWORD PTR [rsp+0x50]
   140028ce9:	movsxd rcx,DWORD PTR [rax+0x4]
   140028ced:	lea    rdx,[rsp+0x50]
   140028cf2:	add    rcx,rdx
   140028cf5:	mov    r8,rbx
   140028cf8:	lea    rdx,[rbp+0x60]
   140028cfc:	call   QWORD PTR [rip+0xd48e]        # 0x140036190
   140028d02:	mov    rcx,QWORD PTR [rbp+0x60]
   140028d06:	test   rcx,rcx
   140028d09:	je     0x140028d24
   140028d0b:	mov    rax,QWORD PTR [rcx]
   140028d0e:	call   QWORD PTR [rax+0x10]
   140028d11:	test   rax,rax
   140028d14:	je     0x140028d24
   140028d16:	mov    r8,QWORD PTR [rax]
   140028d19:	mov    edx,0x1
   140028d1e:	mov    rcx,rax
   140028d21:	call   QWORD PTR [r8]
   140028d24:	mov    rdx,rsi
   140028d27:	lea    rcx,[rsp+0x50]
   140028d2c:	call   0x140002f70
   140028d31:	mov    rcx,QWORD PTR [rsp+0x50]
   140028d36:	movsxd rax,DWORD PTR [rcx+0x4]
   140028d3a:	test   BYTE PTR [rsp+rax*1+0x60],0x6
   140028d3f:	jne    0x140028dd6
   140028d45:	lea    rdx,[rsp+0x28]
   140028d4a:	lea    rcx,[rsp+0x50]
   140028d4f:	call   0x14002c9e0
   140028d54:	mov    BYTE PTR [rdi],0x0
   140028d57:	lea    rcx,[rdi+0x8]
   140028d5b:	test   rcx,rcx
   140028d5e:	je     0x140028d68
   140028d60:	mov    rdx,rax
   140028d63:	call   0x140011010
   140028d68:	mov    BYTE PTR [rdi],0x1
   140028d6b:	cmp    QWORD PTR [rsp+0x40],0x10
   140028d71:	jb     0x140028d7d
   140028d73:	mov    rcx,QWORD PTR [rsp+0x28]
   140028d78:	call   0x140030282
   140028d7d:	mov    QWORD PTR [rsp+0x40],0xf
   140028d86:	mov    QWORD PTR [rsp+0x38],0x0
   140028d8f:	mov    BYTE PTR [rsp+0x28],0x0
   140028d94:	mov    rax,QWORD PTR [rsp+0x50]
   140028d99:	movsxd rcx,DWORD PTR [rax+0x4]
   140028d9d:	mov    QWORD PTR [rsp+rcx*1+0x50],r14
   140028da2:	mov    rax,QWORD PTR [rsp+0x50]
   140028da7:	movsxd rcx,DWORD PTR [rax+0x4]
   140028dab:	lea    edx,[rcx-0x88]
   140028db1:	mov    DWORD PTR [rsp+rcx*1+0x4c],edx
   140028db5:	lea    rcx,[rsp+0x58]
   140028dba:	call   0x140017170
   140028dbf:	lea    rcx,[rsp+0x60]
   140028dc4:	call   QWORD PTR [rip+0xd3a6]        # 0x140036170
   140028dca:	lea    rcx,[rbp-0x28]
   140028dce:	call   QWORD PTR [rip+0xd3cc]        # 0x1400361a0
   140028dd4:	jmp    0x140028e1f
   140028dd6:	mov    BYTE PTR [rdi],0x0
   140028dd9:	movsxd rax,DWORD PTR [rcx+0x4]
   140028ddd:	mov    QWORD PTR [rsp+rax*1+0x50],r14
   140028de2:	mov    rax,QWORD PTR [rsp+0x50]
   140028de7:	movsxd rcx,DWORD PTR [rax+0x4]
   140028deb:	lea    edx,[rcx-0x88]
   140028df1:	mov    DWORD PTR [rsp+rcx*1+0x4c],edx
   140028df5:	lea    rcx,[rsp+0x58]
   140028dfa:	call   0x140017170
   140028dff:	lea    rcx,[rsp+0x60]
   140028e04:	call   QWORD PTR [rip+0xd366]        # 0x140036170
   140028e0a:	mov    rax,QWORD PTR [rip+0xd24f]        # 0x140036060
   140028e11:	mov    QWORD PTR [rbp-0x28],rax
   140028e15:	lea    rcx,[rbp-0x28]
   140028e19:	call   QWORD PTR [rip+0xd4b1]        # 0x1400362d0
   140028e1f:	mov    rax,rdi
   140028e22:	lea    r11,[rsp+0x140]
   140028e2a:	mov    rbx,QWORD PTR [r11+0x28]
   140028e2e:	mov    rsi,QWORD PTR [r11+0x30]
   140028e32:	mov    rsp,r11
   140028e35:	pop    r14
   140028e37:	pop    rdi
   140028e38:	pop    rbp
   140028e39:	ret    
   140028e3a:	int3   
   140028e3b:	int3   
   140028e3c:	int3   
   140028e3d:	int3   
   140028e3e:	int3   
   140028e3f:	int3   
   140028e40:	mov    rax,rsp
   140028e43:	push   rbp
   140028e44:	push   rdi
   140028e45:	push   r14
   140028e47:	lea    rbp,[rax-0x58]
   140028e4b:	sub    rsp,0x140
   140028e52:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   140028e5b:	mov    QWORD PTR [rax+0x10],rbx
   140028e5f:	mov    QWORD PTR [rax+0x18],rsi
   140028e63:	mov    rsi,r8
   140028e66:	mov    rdi,rdx
   140028e69:	mov    rbx,rcx
   140028e6c:	mov    DWORD PTR [rsp+0x20],0x0
   140028e74:	lea    rax,[rip+0x1332d]        # 0x14003c1a8
   140028e7b:	mov    QWORD PTR [rsp+0x50],rax
   140028e80:	mov    rax,QWORD PTR [rip+0xd1c9]        # 0x140036050
   140028e87:	mov    QWORD PTR [rbp-0x28],rax
   140028e8b:	mov    DWORD PTR [rsp+0x20],0x2
   140028e93:	xor    r9d,r9d
   140028e96:	xor    r8d,r8d
   140028e99:	lea    rdx,[rsp+0x58]
   140028e9e:	lea    rcx,[rsp+0x50]
   140028ea3:	call   QWORD PTR [rip+0xd2cf]        # 0x140036178
   140028ea9:	nop
   140028eaa:	mov    rax,QWORD PTR [rsp+0x50]
   140028eaf:	movsxd rcx,DWORD PTR [rax+0x4]
   140028eb3:	lea    r14,[rip+0x132e6]        # 0x14003c1a0
   140028eba:	mov    QWORD PTR [rsp+rcx*1+0x50],r14
   140028ebf:	mov    rax,QWORD PTR [rsp+0x50]
   140028ec4:	movsxd rcx,DWORD PTR [rax+0x4]
   140028ec8:	lea    r8d,[rcx-0x88]
   140028ecf:	mov    DWORD PTR [rsp+rcx*1+0x4c],r8d
   140028ed4:	mov    edx,0x2
   140028ed9:	lea    rcx,[rsp+0x58]
   140028ede:	call   0x1400112a0
   140028ee3:	nop
   140028ee4:	mov    rax,QWORD PTR [rsp+0x50]
   140028ee9:	movsxd rcx,DWORD PTR [rax+0x4]
   140028eed:	lea    rdx,[rsp+0x50]
   140028ef2:	add    rcx,rdx
   140028ef5:	mov    r8,rbx
   140028ef8:	lea    rdx,[rbp+0x60]
   140028efc:	call   QWORD PTR [rip+0xd28e]        # 0x140036190
   140028f02:	mov    rcx,QWORD PTR [rbp+0x60]
   140028f06:	test   rcx,rcx
   140028f09:	je     0x140028f24
   140028f0b:	mov    rax,QWORD PTR [rcx]
   140028f0e:	call   QWORD PTR [rax+0x10]
   140028f11:	test   rax,rax
   140028f14:	je     0x140028f24
   140028f16:	mov    r8,QWORD PTR [rax]
   140028f19:	mov    edx,0x1
   140028f1e:	mov    rcx,rax
   140028f21:	call   QWORD PTR [r8]
   140028f24:	mov    rdx,rsi
   140028f27:	lea    rcx,[rsp+0x50]
   140028f2c:	call   0x140002f70
   140028f31:	mov    rcx,QWORD PTR [rsp+0x50]
   140028f36:	movsxd rax,DWORD PTR [rcx+0x4]
   140028f3a:	test   BYTE PTR [rsp+rax*1+0x60],0x6
   140028f3f:	jne    0x140028fd6
   140028f45:	lea    rdx,[rsp+0x28]
   140028f4a:	lea    rcx,[rsp+0x50]
   140028f4f:	call   0x14002c9e0
   140028f54:	mov    BYTE PTR [rdi],0x0
   140028f57:	lea    rcx,[rdi+0x8]
   140028f5b:	test   rcx,rcx
   140028f5e:	je     0x140028f68
   140028f60:	mov    rdx,rax
   140028f63:	call   0x140011010
   140028f68:	mov    BYTE PTR [rdi],0x1
   140028f6b:	cmp    QWORD PTR [rsp+0x40],0x10
   140028f71:	jb     0x140028f7d
   140028f73:	mov    rcx,QWORD PTR [rsp+0x28]
   140028f78:	call   0x140030282
   140028f7d:	mov    QWORD PTR [rsp+0x40],0xf
   140028f86:	mov    QWORD PTR [rsp+0x38],0x0
   140028f8f:	mov    BYTE PTR [rsp+0x28],0x0
   140028f94:	mov    rax,QWORD PTR [rsp+0x50]
   140028f99:	movsxd rcx,DWORD PTR [rax+0x4]
   140028f9d:	mov    QWORD PTR [rsp+rcx*1+0x50],r14
   140028fa2:	mov    rax,QWORD PTR [rsp+0x50]
   140028fa7:	movsxd rcx,DWORD PTR [rax+0x4]
   140028fab:	lea    edx,[rcx-0x88]
   140028fb1:	mov    DWORD PTR [rsp+rcx*1+0x4c],edx
   140028fb5:	lea    rcx,[rsp+0x58]
   140028fba:	call   0x140017170
   140028fbf:	lea    rcx,[rsp+0x60]
   140028fc4:	call   QWORD PTR [rip+0xd1a6]        # 0x140036170
   140028fca:	lea    rcx,[rbp-0x28]
   140028fce:	call   QWORD PTR [rip+0xd1cc]        # 0x1400361a0
   140028fd4:	jmp    0x14002901f
   140028fd6:	mov    BYTE PTR [rdi],0x0
   140028fd9:	movsxd rax,DWORD PTR [rcx+0x4]
   140028fdd:	mov    QWORD PTR [rsp+rax*1+0x50],r14
   140028fe2:	mov    rax,QWORD PTR [rsp+0x50]
   140028fe7:	movsxd rcx,DWORD PTR [rax+0x4]
   140028feb:	lea    edx,[rcx-0x88]
   140028ff1:	mov    DWORD PTR [rsp+rcx*1+0x4c],edx
   140028ff5:	lea    rcx,[rsp+0x58]
   140028ffa:	call   0x140017170
   140028fff:	lea    rcx,[rsp+0x60]
   140029004:	call   QWORD PTR [rip+0xd166]        # 0x140036170
   14002900a:	mov    rax,QWORD PTR [rip+0xd04f]        # 0x140036060
   140029011:	mov    QWORD PTR [rbp-0x28],rax
   140029015:	lea    rcx,[rbp-0x28]
   140029019:	call   QWORD PTR [rip+0xd2b1]        # 0x1400362d0
   14002901f:	mov    rax,rdi
   140029022:	lea    r11,[rsp+0x140]
   14002902a:	mov    rbx,QWORD PTR [r11+0x28]
   14002902e:	mov    rsi,QWORD PTR [r11+0x30]
   140029032:	mov    rsp,r11
   140029035:	pop    r14
   140029037:	pop    rdi
   140029038:	pop    rbp
   140029039:	ret    
   14002903a:	int3   
   14002903b:	int3   
   14002903c:	int3   
   14002903d:	int3   
   14002903e:	int3   
   14002903f:	int3   
   140029040:	mov    rax,rsp
   140029043:	push   rbp
   140029044:	push   rdi
   140029045:	push   r14
   140029047:	lea    rbp,[rax-0x58]
   14002904b:	sub    rsp,0x140
   140029052:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   14002905b:	mov    QWORD PTR [rax+0x10],rbx
   14002905f:	mov    QWORD PTR [rax+0x18],rsi
   140029063:	mov    rsi,r8
   140029066:	mov    rdi,rdx
   140029069:	mov    rbx,rcx
   14002906c:	mov    DWORD PTR [rsp+0x20],0x0
   140029074:	lea    rax,[rip+0x1312d]        # 0x14003c1a8
   14002907b:	mov    QWORD PTR [rsp+0x50],rax
   140029080:	mov    rax,QWORD PTR [rip+0xcfc9]        # 0x140036050
   140029087:	mov    QWORD PTR [rbp-0x28],rax
   14002908b:	mov    DWORD PTR [rsp+0x20],0x2
   140029093:	xor    r9d,r9d
   140029096:	xor    r8d,r8d
   140029099:	lea    rdx,[rsp+0x58]
   14002909e:	lea    rcx,[rsp+0x50]
   1400290a3:	call   QWORD PTR [rip+0xd0cf]        # 0x140036178
   1400290a9:	nop
   1400290aa:	mov    rax,QWORD PTR [rsp+0x50]
   1400290af:	movsxd rcx,DWORD PTR [rax+0x4]
   1400290b3:	lea    r14,[rip+0x130e6]        # 0x14003c1a0
   1400290ba:	mov    QWORD PTR [rsp+rcx*1+0x50],r14
   1400290bf:	mov    rax,QWORD PTR [rsp+0x50]
   1400290c4:	movsxd rcx,DWORD PTR [rax+0x4]
   1400290c8:	lea    r8d,[rcx-0x88]
   1400290cf:	mov    DWORD PTR [rsp+rcx*1+0x4c],r8d
   1400290d4:	mov    edx,0x2
   1400290d9:	lea    rcx,[rsp+0x58]
   1400290de:	call   0x1400112a0
   1400290e3:	nop
   1400290e4:	mov    rax,QWORD PTR [rsp+0x50]
   1400290e9:	movsxd rcx,DWORD PTR [rax+0x4]
   1400290ed:	lea    rdx,[rsp+0x50]
   1400290f2:	add    rcx,rdx
   1400290f5:	mov    r8,rbx
   1400290f8:	lea    rdx,[rbp+0x60]
   1400290fc:	call   QWORD PTR [rip+0xd08e]        # 0x140036190
   140029102:	mov    rcx,QWORD PTR [rbp+0x60]
   140029106:	test   rcx,rcx
   140029109:	je     0x140029124
   14002910b:	mov    rax,QWORD PTR [rcx]
   14002910e:	call   QWORD PTR [rax+0x10]
   140029111:	test   rax,rax
   140029114:	je     0x140029124
   140029116:	mov    r8,QWORD PTR [rax]
   140029119:	mov    edx,0x1
   14002911e:	mov    rcx,rax
   140029121:	call   QWORD PTR [r8]
   140029124:	mov    rdx,rsi
   140029127:	lea    rcx,[rsp+0x50]
   14002912c:	call   0x140002f70
   140029131:	mov    rcx,QWORD PTR [rsp+0x50]
   140029136:	movsxd rax,DWORD PTR [rcx+0x4]
   14002913a:	test   BYTE PTR [rsp+rax*1+0x60],0x6
   14002913f:	jne    0x1400291d6
   140029145:	lea    rdx,[rsp+0x28]
   14002914a:	lea    rcx,[rsp+0x50]
   14002914f:	call   0x14002c9e0
   140029154:	mov    BYTE PTR [rdi],0x0
   140029157:	lea    rcx,[rdi+0x8]
   14002915b:	test   rcx,rcx
   14002915e:	je     0x140029168
   140029160:	mov    rdx,rax
   140029163:	call   0x140011010
   140029168:	mov    BYTE PTR [rdi],0x1
   14002916b:	cmp    QWORD PTR [rsp+0x40],0x10
   140029171:	jb     0x14002917d
   140029173:	mov    rcx,QWORD PTR [rsp+0x28]
   140029178:	call   0x140030282
   14002917d:	mov    QWORD PTR [rsp+0x40],0xf
   140029186:	mov    QWORD PTR [rsp+0x38],0x0
   14002918f:	mov    BYTE PTR [rsp+0x28],0x0
   140029194:	mov    rax,QWORD PTR [rsp+0x50]
   140029199:	movsxd rcx,DWORD PTR [rax+0x4]
   14002919d:	mov    QWORD PTR [rsp+rcx*1+0x50],r14
   1400291a2:	mov    rax,QWORD PTR [rsp+0x50]
   1400291a7:	movsxd rcx,DWORD PTR [rax+0x4]
   1400291ab:	lea    edx,[rcx-0x88]
   1400291b1:	mov    DWORD PTR [rsp+rcx*1+0x4c],edx
   1400291b5:	lea    rcx,[rsp+0x58]
   1400291ba:	call   0x140017170
   1400291bf:	lea    rcx,[rsp+0x60]
   1400291c4:	call   QWORD PTR [rip+0xcfa6]        # 0x140036170
   1400291ca:	lea    rcx,[rbp-0x28]
   1400291ce:	call   QWORD PTR [rip+0xcfcc]        # 0x1400361a0
   1400291d4:	jmp    0x14002921f
   1400291d6:	mov    BYTE PTR [rdi],0x0
   1400291d9:	movsxd rax,DWORD PTR [rcx+0x4]
   1400291dd:	mov    QWORD PTR [rsp+rax*1+0x50],r14
   1400291e2:	mov    rax,QWORD PTR [rsp+0x50]
   1400291e7:	movsxd rcx,DWORD PTR [rax+0x4]
   1400291eb:	lea    edx,[rcx-0x88]
   1400291f1:	mov    DWORD PTR [rsp+rcx*1+0x4c],edx
   1400291f5:	lea    rcx,[rsp+0x58]
   1400291fa:	call   0x140017170
   1400291ff:	lea    rcx,[rsp+0x60]
   140029204:	call   QWORD PTR [rip+0xcf66]        # 0x140036170
   14002920a:	mov    rax,QWORD PTR [rip+0xce4f]        # 0x140036060
   140029211:	mov    QWORD PTR [rbp-0x28],rax
   140029215:	lea    rcx,[rbp-0x28]
   140029219:	call   QWORD PTR [rip+0xd0b1]        # 0x1400362d0
   14002921f:	mov    rax,rdi
   140029222:	lea    r11,[rsp+0x140]
   14002922a:	mov    rbx,QWORD PTR [r11+0x28]
   14002922e:	mov    rsi,QWORD PTR [r11+0x30]
   140029232:	mov    rsp,r11
   140029235:	pop    r14
   140029237:	pop    rdi
   140029238:	pop    rbp
   140029239:	ret    
   14002923a:	int3   
   14002923b:	int3   
   14002923c:	int3   
   14002923d:	int3   
   14002923e:	int3   
   14002923f:	int3   
   140029240:	mov    rax,rsp
   140029243:	push   rbp
   140029244:	push   rdi
   140029245:	push   r14
   140029247:	lea    rbp,[rax-0x58]
   14002924b:	sub    rsp,0x140
   140029252:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   14002925b:	mov    QWORD PTR [rax+0x10],rbx
   14002925f:	mov    QWORD PTR [rax+0x18],rsi
   140029263:	mov    rsi,r8
   140029266:	mov    rdi,rdx
   140029269:	mov    rbx,rcx
   14002926c:	mov    DWORD PTR [rsp+0x20],0x0
   140029274:	lea    rax,[rip+0x12f2d]        # 0x14003c1a8
   14002927b:	mov    QWORD PTR [rsp+0x50],rax
   140029280:	mov    rax,QWORD PTR [rip+0xcdc9]        # 0x140036050
   140029287:	mov    QWORD PTR [rbp-0x28],rax
   14002928b:	mov    DWORD PTR [rsp+0x20],0x2
   140029293:	xor    r9d,r9d
   140029296:	xor    r8d,r8d
   140029299:	lea    rdx,[rsp+0x58]
   14002929e:	lea    rcx,[rsp+0x50]
   1400292a3:	call   QWORD PTR [rip+0xcecf]        # 0x140036178
   1400292a9:	nop
   1400292aa:	mov    rax,QWORD PTR [rsp+0x50]
   1400292af:	movsxd rcx,DWORD PTR [rax+0x4]
   1400292b3:	lea    r14,[rip+0x12ee6]        # 0x14003c1a0
   1400292ba:	mov    QWORD PTR [rsp+rcx*1+0x50],r14
   1400292bf:	mov    rax,QWORD PTR [rsp+0x50]
   1400292c4:	movsxd rcx,DWORD PTR [rax+0x4]
   1400292c8:	lea    r8d,[rcx-0x88]
   1400292cf:	mov    DWORD PTR [rsp+rcx*1+0x4c],r8d
   1400292d4:	mov    edx,0x2
   1400292d9:	lea    rcx,[rsp+0x58]
   1400292de:	call   0x1400112a0
   1400292e3:	nop
   1400292e4:	mov    rax,QWORD PTR [rsp+0x50]
   1400292e9:	movsxd rcx,DWORD PTR [rax+0x4]
   1400292ed:	lea    rdx,[rsp+0x50]
   1400292f2:	add    rcx,rdx
   1400292f5:	mov    r8,rbx
   1400292f8:	lea    rdx,[rbp+0x60]
   1400292fc:	call   QWORD PTR [rip+0xce8e]        # 0x140036190
   140029302:	mov    rcx,QWORD PTR [rbp+0x60]
   140029306:	test   rcx,rcx
   140029309:	je     0x140029324
   14002930b:	mov    rax,QWORD PTR [rcx]
   14002930e:	call   QWORD PTR [rax+0x10]
   140029311:	test   rax,rax
   140029314:	je     0x140029324
   140029316:	mov    r8,QWORD PTR [rax]
   140029319:	mov    edx,0x1
   14002931e:	mov    rcx,rax
   140029321:	call   QWORD PTR [r8]
   140029324:	mov    edx,DWORD PTR [rsi]
   140029326:	lea    rcx,[rsp+0x50]
   14002932b:	call   QWORD PTR [rip+0xce17]        # 0x140036148
   140029331:	mov    rcx,QWORD PTR [rsp+0x50]
   140029336:	movsxd rax,DWORD PTR [rcx+0x4]
   14002933a:	test   BYTE PTR [rsp+rax*1+0x60],0x6
   14002933f:	jne    0x1400293d6
   140029345:	lea    rdx,[rsp+0x28]
   14002934a:	lea    rcx,[rsp+0x50]
   14002934f:	call   0x14002c9e0
   140029354:	mov    BYTE PTR [rdi],0x0
   140029357:	lea    rcx,[rdi+0x8]
   14002935b:	test   rcx,rcx
   14002935e:	je     0x140029368
   140029360:	mov    rdx,rax
   140029363:	call   0x140011010
   140029368:	mov    BYTE PTR [rdi],0x1
   14002936b:	cmp    QWORD PTR [rsp+0x40],0x10
   140029371:	jb     0x14002937d
   140029373:	mov    rcx,QWORD PTR [rsp+0x28]
   140029378:	call   0x140030282
   14002937d:	mov    QWORD PTR [rsp+0x40],0xf
   140029386:	mov    QWORD PTR [rsp+0x38],0x0
   14002938f:	mov    BYTE PTR [rsp+0x28],0x0
   140029394:	mov    rax,QWORD PTR [rsp+0x50]
   140029399:	movsxd rcx,DWORD PTR [rax+0x4]
   14002939d:	mov    QWORD PTR [rsp+rcx*1+0x50],r14
   1400293a2:	mov    rax,QWORD PTR [rsp+0x50]
   1400293a7:	movsxd rcx,DWORD PTR [rax+0x4]
   1400293ab:	lea    edx,[rcx-0x88]
   1400293b1:	mov    DWORD PTR [rsp+rcx*1+0x4c],edx
   1400293b5:	lea    rcx,[rsp+0x58]
   1400293ba:	call   0x140017170
   1400293bf:	lea    rcx,[rsp+0x60]
   1400293c4:	call   QWORD PTR [rip+0xcda6]        # 0x140036170
   1400293ca:	lea    rcx,[rbp-0x28]
   1400293ce:	call   QWORD PTR [rip+0xcdcc]        # 0x1400361a0
   1400293d4:	jmp    0x14002941f
   1400293d6:	mov    BYTE PTR [rdi],0x0
   1400293d9:	movsxd rax,DWORD PTR [rcx+0x4]
   1400293dd:	mov    QWORD PTR [rsp+rax*1+0x50],r14
   1400293e2:	mov    rax,QWORD PTR [rsp+0x50]
   1400293e7:	movsxd rcx,DWORD PTR [rax+0x4]
   1400293eb:	lea    edx,[rcx-0x88]
   1400293f1:	mov    DWORD PTR [rsp+rcx*1+0x4c],edx
   1400293f5:	lea    rcx,[rsp+0x58]
   1400293fa:	call   0x140017170
   1400293ff:	lea    rcx,[rsp+0x60]
   140029404:	call   QWORD PTR [rip+0xcd66]        # 0x140036170
   14002940a:	mov    rax,QWORD PTR [rip+0xcc4f]        # 0x140036060
   140029411:	mov    QWORD PTR [rbp-0x28],rax
   140029415:	lea    rcx,[rbp-0x28]
   140029419:	call   QWORD PTR [rip+0xceb1]        # 0x1400362d0
   14002941f:	mov    rax,rdi
   140029422:	lea    r11,[rsp+0x140]
   14002942a:	mov    rbx,QWORD PTR [r11+0x28]
   14002942e:	mov    rsi,QWORD PTR [r11+0x30]
   140029432:	mov    rsp,r11
   140029435:	pop    r14
   140029437:	pop    rdi
   140029438:	pop    rbp
   140029439:	ret    
   14002943a:	int3   
   14002943b:	int3   
   14002943c:	int3   
   14002943d:	int3   
   14002943e:	int3   
   14002943f:	int3   
   140029440:	mov    rax,rsp
   140029443:	push   rbp
   140029444:	push   rdi
   140029445:	push   r14
   140029447:	lea    rbp,[rax-0x68]
   14002944b:	sub    rsp,0x150
   140029452:	mov    QWORD PTR [rbp+0x40],0xfffffffffffffffe
   14002945a:	mov    QWORD PTR [rax+0x10],rbx
   14002945e:	mov    QWORD PTR [rax+0x18],rsi
   140029462:	mov    rsi,r8
   140029465:	mov    rdi,rdx
   140029468:	mov    rbx,rcx
   14002946b:	mov    DWORD PTR [rsp+0x20],0x0
   140029473:	lea    rax,[rip+0x12d2e]        # 0x14003c1a8
   14002947a:	mov    QWORD PTR [rsp+0x50],rax
   14002947f:	mov    rax,QWORD PTR [rip+0xcbca]        # 0x140036050
   140029486:	mov    QWORD PTR [rbp-0x28],rax
   14002948a:	mov    DWORD PTR [rsp+0x20],0x2
   140029492:	xor    r9d,r9d
   140029495:	xor    r8d,r8d
   140029498:	lea    rdx,[rsp+0x58]
   14002949d:	lea    rcx,[rsp+0x50]
   1400294a2:	call   QWORD PTR [rip+0xccd0]        # 0x140036178
   1400294a8:	nop
   1400294a9:	mov    rax,QWORD PTR [rsp+0x50]
   1400294ae:	movsxd rcx,DWORD PTR [rax+0x4]
   1400294b2:	lea    r14,[rip+0x12ce7]        # 0x14003c1a0
   1400294b9:	mov    QWORD PTR [rsp+rcx*1+0x50],r14
   1400294be:	mov    rax,QWORD PTR [rsp+0x50]
   1400294c3:	movsxd rcx,DWORD PTR [rax+0x4]
   1400294c7:	lea    r8d,[rcx-0x88]
   1400294ce:	mov    DWORD PTR [rsp+rcx*1+0x4c],r8d
   1400294d3:	mov    edx,0x2
   1400294d8:	lea    rcx,[rsp+0x58]
   1400294dd:	call   0x1400112a0
   1400294e2:	nop
   1400294e3:	mov    rax,QWORD PTR [rsp+0x50]
   1400294e8:	movsxd rcx,DWORD PTR [rax+0x4]
   1400294ec:	lea    rdx,[rsp+0x50]
   1400294f1:	add    rcx,rdx
   1400294f4:	mov    r8,rbx
   1400294f7:	lea    rdx,[rbp+0x70]
   1400294fb:	call   QWORD PTR [rip+0xcc8f]        # 0x140036190
   140029501:	mov    rcx,QWORD PTR [rbp+0x70]
   140029505:	test   rcx,rcx
   140029508:	je     0x140029523
   14002950a:	mov    rax,QWORD PTR [rcx]
   14002950d:	call   QWORD PTR [rax+0x10]
   140029510:	test   rax,rax
   140029513:	je     0x140029523
   140029515:	mov    r8,QWORD PTR [rax]
   140029518:	mov    edx,0x1
   14002951d:	mov    rcx,rax
   140029520:	call   QWORD PTR [r8]
   140029523:	mov    rax,QWORD PTR [rsp+0x50]
   140029528:	movsxd rcx,DWORD PTR [rax+0x4]
   14002952c:	or     DWORD PTR [rsp+rcx*1+0x68],0x4000
   140029534:	movzx  edx,BYTE PTR [rsi]
   140029537:	lea    rcx,[rsp+0x50]
   14002953c:	call   QWORD PTR [rip+0xcc16]        # 0x140036158
   140029542:	mov    rcx,QWORD PTR [rsp+0x50]
   140029547:	movsxd rax,DWORD PTR [rcx+0x4]
   14002954b:	test   BYTE PTR [rsp+rax*1+0x60],0x6
   140029550:	jne    0x1400295b1
   140029552:	lea    rdx,[rsp+0x28]
   140029557:	lea    rcx,[rsp+0x50]
   14002955c:	call   0x14002c9e0
   140029561:	mov    BYTE PTR [rdi],0x0
   140029564:	lea    rcx,[rdi+0x8]
   140029568:	test   rcx,rcx
   14002956b:	je     0x140029575
   14002956d:	mov    rdx,rax
   140029570:	call   0x140011010
   140029575:	mov    BYTE PTR [rdi],0x1
   140029578:	cmp    QWORD PTR [rsp+0x40],0x10
   14002957e:	jb     0x14002958a
   140029580:	mov    rcx,QWORD PTR [rsp+0x28]
   140029585:	call   0x140030282
   14002958a:	mov    QWORD PTR [rsp+0x40],0xf
   140029593:	mov    QWORD PTR [rsp+0x38],0x0
   14002959c:	mov    BYTE PTR [rsp+0x28],0x0
   1400295a1:	mov    rax,QWORD PTR [rsp+0x50]
   1400295a6:	movsxd rcx,DWORD PTR [rax+0x4]
   1400295aa:	mov    QWORD PTR [rsp+rcx*1+0x50],r14
   1400295af:	jmp    0x1400295bd
   1400295b1:	mov    BYTE PTR [rdi],0x0
   1400295b4:	movsxd rax,DWORD PTR [rcx+0x4]
   1400295b8:	mov    QWORD PTR [rsp+rax*1+0x50],r14
   1400295bd:	mov    rax,QWORD PTR [rsp+0x50]
   1400295c2:	movsxd rcx,DWORD PTR [rax+0x4]
   1400295c6:	lea    edx,[rcx-0x88]
   1400295cc:	mov    DWORD PTR [rsp+rcx*1+0x4c],edx
   1400295d0:	lea    rcx,[rsp+0x58]
   1400295d5:	call   0x140017170
   1400295da:	lea    rcx,[rsp+0x60]
   1400295df:	call   QWORD PTR [rip+0xcb8b]        # 0x140036170
   1400295e5:	lea    rcx,[rbp-0x28]
   1400295e9:	call   QWORD PTR [rip+0xcbb1]        # 0x1400361a0
   1400295ef:	mov    rax,rdi
   1400295f2:	lea    r11,[rsp+0x150]
   1400295fa:	mov    rbx,QWORD PTR [r11+0x28]
   1400295fe:	mov    rsi,QWORD PTR [r11+0x30]
   140029602:	mov    rsp,r11
   140029605:	pop    r14
   140029607:	pop    rdi
   140029608:	pop    rbp
   140029609:	ret    
   14002960a:	int3   
   14002960b:	int3   
   14002960c:	int3   
   14002960d:	int3   
   14002960e:	int3   
   14002960f:	int3   
   140029610:	mov    rax,QWORD PTR [rcx]
   140029613:	mov    QWORD PTR [rdx],rax
   140029616:	mov    rax,rdx
   140029619:	ret    
   14002961a:	int3   
   14002961b:	int3   
   14002961c:	int3   
   14002961d:	int3   
   14002961e:	int3   
   14002961f:	int3   
   140029620:	lea    rax,[rcx+0x18]
   140029624:	ret    
   140029625:	int3   
   140029626:	int3   
   140029627:	int3   
   140029628:	int3   
   140029629:	int3   
   14002962a:	int3   
   14002962b:	int3   
   14002962c:	int3   
   14002962d:	int3   
   14002962e:	int3   
   14002962f:	int3   
   140029630:	xor    eax,eax
   140029632:	ret    
   140029633:	int3   
   140029634:	int3   
   140029635:	int3   
   140029636:	int3   
   140029637:	int3   
   140029638:	int3   
   140029639:	int3   
   14002963a:	int3   
   14002963b:	int3   
   14002963c:	int3   
   14002963d:	int3   
   14002963e:	int3   
   14002963f:	int3   
   140029640:	sub    rsp,0x28
   140029644:	mov    r9,QWORD PTR [rcx]
   140029647:	mov    rax,QWORD PTR [r9]
   14002964a:	movsxd rcx,DWORD PTR [rax+0x4]
   14002964e:	mov    rcx,QWORD PTR [rcx+r9*1+0x48]
   140029653:	call   QWORD PTR [rip+0xcb77]        # 0x1400361d0
   140029659:	or     rcx,0xffffffffffffffff
   14002965d:	test   rax,rax
   140029660:	cmovne rcx,rax
   140029664:	mov    rax,rcx
   140029667:	add    rsp,0x28
   14002966b:	ret    
   14002966c:	int3   
   14002966d:	int3   
   14002966e:	int3   
   14002966f:	int3   
   140029670:	and    QWORD PTR [rcx],0xfffffffffffffffe
   140029674:	mov    QWORD PTR [rsp+0x10],rdx
   140029679:	mov    rax,QWORD PTR [rdx]
   14002967c:	and    rax,0xfffffffffffffffe
   140029680:	mov    r8,rcx
   140029683:	cmp    rcx,rax
   140029686:	je     0x14002992c
   14002968c:	nop    DWORD PTR [rax+0x0]
   140029690:	mov    rax,QWORD PTR [r8]
   140029693:	and    rax,0xfffffffffffffffe
   140029697:	test   BYTE PTR [rax],0x1
   14002969a:	jne    0x14002992c
   1400296a0:	mov    r9,QWORD PTR [rax]
   1400296a3:	and    r9,0xfffffffffffffffe
   1400296a7:	mov    rcx,QWORD PTR [r9+0x8]
   1400296ab:	cmp    rax,rcx
   1400296ae:	jne    0x1400297d9
   1400296b4:	mov    rcx,QWORD PTR [r9+0x10]
   1400296b8:	test   rcx,rcx
   1400296bb:	je     0x1400296c6
   1400296bd:	test   BYTE PTR [rcx],0x1
   1400296c0:	je     0x1400297e3
   1400296c6:	cmp    r8,QWORD PTR [rax+0x10]
   1400296ca:	jne    0x140029736
   1400296cc:	mov    rcx,QWORD PTR [rax+0x10]
   1400296d0:	mov    r8,rax
   1400296d3:	mov    rax,QWORD PTR [rcx+0x8]
   1400296d7:	mov    QWORD PTR [r8+0x10],rax
   1400296db:	mov    rax,QWORD PTR [rcx+0x8]
   1400296df:	test   rax,rax
   1400296e2:	je     0x1400296eb
   1400296e4:	and    QWORD PTR [rax],0x1
   1400296e8:	or     QWORD PTR [rax],r8
   1400296eb:	mov    eax,DWORD PTR [rcx]
   1400296ed:	xor    eax,DWORD PTR [r8]
   1400296f0:	and    eax,0x1
   1400296f3:	xor    rax,QWORD PTR [r8]
   1400296f6:	mov    QWORD PTR [rcx],rax
   1400296f9:	mov    r9,QWORD PTR [rdx]
   1400296fc:	mov    rax,r9
   1400296ff:	and    rax,0xfffffffffffffffe
   140029703:	cmp    r8,rax
   140029706:	jne    0x140029714
   140029708:	and    r9d,0x1
   14002970c:	or     r9,rcx
   14002970f:	mov    QWORD PTR [rdx],r9
   140029712:	jmp    0x14002972b
   140029714:	mov    rax,QWORD PTR [r8]
   140029717:	and    rax,0xfffffffffffffffe
   14002971b:	cmp    r8,QWORD PTR [rax+0x8]
   14002971f:	jne    0x140029727
   140029721:	mov    QWORD PTR [rax+0x8],rcx
   140029725:	jmp    0x14002972b
   140029727:	mov    QWORD PTR [rax+0x10],rcx
   14002972b:	mov    QWORD PTR [rcx+0x8],r8
   14002972f:	and    QWORD PTR [r8],0x1
   140029733:	or     QWORD PTR [r8],rcx
   140029736:	mov    rax,QWORD PTR [r8]
   140029739:	and    rax,0xfffffffffffffffe
   14002973d:	or     QWORD PTR [rax],0x1
   140029741:	mov    rax,QWORD PTR [r8]
   140029744:	and    rax,0xfffffffffffffffe
   140029748:	mov    rax,QWORD PTR [rax]
   14002974b:	and    rax,0xfffffffffffffffe
   14002974f:	and    QWORD PTR [rax],0xfffffffffffffffe
   140029753:	mov    rax,QWORD PTR [r8]
   140029756:	mov    rcx,QWORD PTR [rsp+0x10]
   14002975b:	and    rax,0xfffffffffffffffe
   14002975f:	mov    rdx,QWORD PTR [rax]
   140029762:	and    rdx,0xfffffffffffffffe
   140029766:	mov    r9,QWORD PTR [rdx+0x8]
   14002976a:	mov    rax,QWORD PTR [r9+0x10]
   14002976e:	mov    QWORD PTR [rdx+0x8],rax
   140029772:	mov    rax,QWORD PTR [r9+0x10]
   140029776:	test   rax,rax
   140029779:	je     0x140029782
   14002977b:	and    QWORD PTR [rax],0x1
   14002977f:	or     QWORD PTR [rax],rdx
   140029782:	mov    eax,DWORD PTR [r9]
   140029785:	xor    eax,DWORD PTR [rdx]
   140029787:	and    eax,0x1
   14002978a:	xor    rax,QWORD PTR [rdx]
   14002978d:	mov    QWORD PTR [r9],rax
   140029790:	mov    r10,QWORD PTR [rcx]
   140029793:	mov    rax,r10
   140029796:	and    rax,0xfffffffffffffffe
   14002979a:	cmp    rdx,rax
   14002979d:	jne    0x1400297b2
   14002979f:	and    r10d,0x1
   1400297a3:	or     r10,r9
   1400297a6:	mov    QWORD PTR [rcx],r10
   1400297a9:	mov    QWORD PTR [r9+0x10],rdx
   1400297ad:	jmp    0x140029910
   1400297b2:	mov    rax,QWORD PTR [rdx]
   1400297b5:	and    rax,0xfffffffffffffffe
   1400297b9:	cmp    rdx,QWORD PTR [rax+0x10]
   1400297bd:	jne    0x1400297cc
   1400297bf:	mov    QWORD PTR [rax+0x10],r9
   1400297c3:	mov    QWORD PTR [r9+0x10],rdx
   1400297c7:	jmp    0x140029910
   1400297cc:	mov    QWORD PTR [rax+0x8],r9
   1400297d0:	mov    QWORD PTR [r9+0x10],rdx
   1400297d4:	jmp    0x140029910
   1400297d9:	test   rcx,rcx
   1400297dc:	je     0x140029810
   1400297de:	test   BYTE PTR [rcx],0x1
   1400297e1:	jne    0x140029810
   1400297e3:	or     QWORD PTR [rax],0x1
   1400297e7:	or     QWORD PTR [rcx],0x1
   1400297eb:	mov    rax,QWORD PTR [r8]
   1400297ee:	and    rax,0xfffffffffffffffe
   1400297f2:	mov    rax,QWORD PTR [rax]
   1400297f5:	and    rax,0xfffffffffffffffe
   1400297f9:	and    QWORD PTR [rax],0xfffffffffffffffe
   1400297fd:	mov    r8,QWORD PTR [r8]
   140029800:	and    r8,0xfffffffffffffffe
   140029804:	mov    r8,QWORD PTR [r8]
   140029807:	and    r8,0xfffffffffffffffe
   14002980b:	jmp    0x140029917
   140029810:	cmp    r8,QWORD PTR [rax+0x8]
   140029814:	jne    0x140029880
   140029816:	mov    rcx,QWORD PTR [rax+0x8]
   14002981a:	mov    r8,rax
   14002981d:	mov    rax,QWORD PTR [rcx+0x10]
   140029821:	mov    QWORD PTR [r8+0x8],rax
   140029825:	mov    rax,QWORD PTR [rcx+0x10]
   140029829:	test   rax,rax
   14002982c:	je     0x140029835
   14002982e:	and    QWORD PTR [rax],0x1
   140029832:	or     QWORD PTR [rax],r8
   140029835:	mov    eax,DWORD PTR [rcx]
   140029837:	xor    eax,DWORD PTR [r8]
   14002983a:	and    eax,0x1
   14002983d:	xor    rax,QWORD PTR [r8]
   140029840:	mov    QWORD PTR [rcx],rax
   140029843:	mov    r9,QWORD PTR [rdx]
   140029846:	mov    rax,r9
   140029849:	and    rax,0xfffffffffffffffe
   14002984d:	cmp    r8,rax
   140029850:	jne    0x14002985e
   140029852:	and    r9d,0x1
   140029856:	or     r9,rcx
   140029859:	mov    QWORD PTR [rdx],r9
   14002985c:	jmp    0x140029875
   14002985e:	mov    rax,QWORD PTR [r8]
   140029861:	and    rax,0xfffffffffffffffe
   140029865:	cmp    r8,QWORD PTR [rax+0x10]
   140029869:	jne    0x140029871
   14002986b:	mov    QWORD PTR [rax+0x10],rcx
   14002986f:	jmp    0x140029875
   140029871:	mov    QWORD PTR [rax+0x8],rcx
   140029875:	mov    QWORD PTR [rcx+0x10],r8
   140029879:	and    QWORD PTR [r8],0x1
   14002987d:	or     QWORD PTR [r8],rcx
   140029880:	mov    rax,QWORD PTR [r8]
   140029883:	and    rax,0xfffffffffffffffe
   140029887:	or     QWORD PTR [rax],0x1
   14002988b:	mov    rax,QWORD PTR [r8]
   14002988e:	and    rax,0xfffffffffffffffe
   140029892:	mov    rax,QWORD PTR [rax]
   140029895:	and    rax,0xfffffffffffffffe
   140029899:	and    QWORD PTR [rax],0xfffffffffffffffe
   14002989d:	mov    rax,QWORD PTR [r8]
   1400298a0:	mov    rcx,QWORD PTR [rsp+0x10]
   1400298a5:	and    rax,0xfffffffffffffffe
   1400298a9:	mov    rdx,QWORD PTR [rax]
   1400298ac:	and    rdx,0xfffffffffffffffe
   1400298b0:	mov    r9,QWORD PTR [rdx+0x10]
   1400298b4:	mov    rax,QWORD PTR [r9+0x8]
   1400298b8:	mov    QWORD PTR [rdx+0x10],rax
   1400298bc:	mov    rax,QWORD PTR [r9+0x8]
   1400298c0:	test   rax,rax
   1400298c3:	je     0x1400298cc
   1400298c5:	and    QWORD PTR [rax],0x1
   1400298c9:	or     QWORD PTR [rax],rdx
   1400298cc:	mov    eax,DWORD PTR [rdx]
   1400298ce:	xor    eax,DWORD PTR [r9]
   1400298d1:	and    eax,0x1
   1400298d4:	xor    rax,QWORD PTR [rdx]
   1400298d7:	mov    QWORD PTR [r9],rax
   1400298da:	mov    r10,QWORD PTR [rcx]
   1400298dd:	mov    rax,r10
   1400298e0:	and    rax,0xfffffffffffffffe
   1400298e4:	cmp    rdx,rax
   1400298e7:	jne    0x1400298f5
   1400298e9:	and    r10d,0x1
   1400298ed:	or     r10,r9
   1400298f0:	mov    QWORD PTR [rcx],r10
   1400298f3:	jmp    0x14002990c
   1400298f5:	mov    rax,QWORD PTR [rdx]
   1400298f8:	and    rax,0xfffffffffffffffe
   1400298fc:	cmp    rdx,QWORD PTR [rax+0x8]
   140029900:	jne    0x140029908
   140029902:	mov    QWORD PTR [rax+0x8],r9
   140029906:	jmp    0x14002990c
   140029908:	mov    QWORD PTR [rax+0x10],r9
   14002990c:	mov    QWORD PTR [r9+0x8],rdx
   140029910:	and    QWORD PTR [rdx],0x1
   140029914:	or     QWORD PTR [rdx],r9
   140029917:	mov    rdx,QWORD PTR [rsp+0x10]
   14002991c:	mov    rax,QWORD PTR [rdx]
   14002991f:	and    rax,0xfffffffffffffffe
   140029923:	cmp    r8,rax
   140029926:	jne    0x140029690
   14002992c:	mov    rax,QWORD PTR [rdx]
   14002992f:	and    rax,0xfffffffffffffffe
   140029933:	or     QWORD PTR [rax],0x1
   140029937:	ret    
   140029938:	int3   
   140029939:	int3   
   14002993a:	int3   
   14002993b:	int3   
   14002993c:	int3   
   14002993d:	int3   
   14002993e:	int3   
   14002993f:	int3   
   140029940:	mov    rax,rsp
   140029943:	push   rbp
   140029944:	push   rdi
   140029945:	push   r14
   140029947:	lea    rbp,[rax-0x5f]
   14002994b:	sub    rsp,0x100
   140029952:	mov    QWORD PTR [rbp-0x9],0xfffffffffffffffe
   14002995a:	mov    QWORD PTR [rax+0x10],rbx
   14002995e:	mov    QWORD PTR [rax+0x20],rsi
   140029962:	mov    rsi,rdx
   140029965:	mov    rbx,rcx
   140029968:	xor    edi,edi
   14002996a:	mov    DWORD PTR [rbp-0x71],edi
   14002996d:	cmp    QWORD PTR [rcx+0x18],0x10
   140029972:	jb     0x140029977
   140029974:	mov    rcx,QWORD PTR [rcx]
   140029977:	mov    r14,QWORD PTR [rbx+0x10]
   14002997b:	add    r14,rcx
   14002997e:	mov    rcx,QWORD PTR [rbx+0x28]
   140029982:	movzx  edx,BYTE PTR [rbx+0x20]
   140029986:	mov    r8,r14
   140029989:	sub    r8,rcx
   14002998c:	call   QWORD PTR [rip+0xcade]        # 0x140036470
   140029992:	test   rax,rax
   140029995:	cmovne r14,rax
   140029999:	mov    QWORD PTR [rbp-0x51],0xf
   1400299a1:	mov    QWORD PTR [rbp-0x59],rdi
   1400299a5:	mov    BYTE PTR [rbp-0x69],dil
   1400299a9:	movzx  r9d,BYTE PTR [rbp+0x67]
   1400299ae:	mov    r8,r14
   1400299b1:	mov    rdx,QWORD PTR [rbx+0x28]
   1400299b5:	lea    rcx,[rbp-0x69]
   1400299b9:	call   0x140003ea0
   1400299be:	nop
   1400299bf:	mov    QWORD PTR [rbx+0x28],r14
   1400299c3:	cmp    QWORD PTR [rbx+0x18],0x10
   1400299c8:	jb     0x1400299cf
   1400299ca:	mov    rcx,QWORD PTR [rbx]
   1400299cd:	jmp    0x1400299d2
   1400299cf:	mov    rcx,rbx
   1400299d2:	mov    rax,QWORD PTR [rbx+0x10]
   1400299d6:	add    rax,rcx
   1400299d9:	cmp    r14,rax
   1400299dc:	je     0x1400299e2
   1400299de:	inc    QWORD PTR [rbx+0x28]
   1400299e2:	lea    rcx,[rbx+0x21]
   1400299e6:	lea    r8,[rbp-0x69]
   1400299ea:	lea    rdx,[rsp+0x20]
   1400299ef:	call   0x140024990
   1400299f4:	nop
   1400299f5:	cmp    BYTE PTR [rsp+0x20],0x0
   1400299fa:	je     0x140029a67
   1400299fc:	mov    QWORD PTR [rsi+0x18],0xf
   140029a04:	mov    QWORD PTR [rsi+0x10],rdi
   140029a08:	mov    BYTE PTR [rsi],0x0
   140029a0b:	or     r9,0xffffffffffffffff
   140029a0f:	xor    r8d,r8d
   140029a12:	lea    rdx,[rsp+0x28]
   140029a17:	mov    rcx,rsi
   140029a1a:	call   0x14001ef20
   140029a1f:	nop
   140029a20:	cmp    BYTE PTR [rsp+0x20],0x0
   140029a25:	je     0x140029a4f
   140029a27:	cmp    QWORD PTR [rbp-0x79],0x10
   140029a2c:	jb     0x140029a38
   140029a2e:	mov    rcx,QWORD PTR [rsp+0x28]
   140029a33:	call   0x140030282
   140029a38:	mov    QWORD PTR [rbp-0x79],0xf
   140029a40:	mov    QWORD PTR [rsp+0x38],rdi
   140029a45:	mov    BYTE PTR [rsp+0x28],0x0
   140029a4a:	mov    BYTE PTR [rsp+0x20],0x0
   140029a4f:	cmp    QWORD PTR [rbp-0x51],0x10
   140029a54:	jb     0x140029a5f
   140029a56:	mov    rcx,QWORD PTR [rbp-0x69]
   140029a5a:	call   0x140030282
   140029a5f:	mov    rax,rsi
   140029a62:	jmp    0x140029b4f
   140029a67:	mov    QWORD PTR [rbp-0x11],0xf
   140029a6f:	mov    QWORD PTR [rbp-0x19],rdi
   140029a73:	mov    BYTE PTR [rbp-0x29],0x0
   140029a77:	mov    r8d,0x11
   140029a7d:	lea    rdx,[rip+0x1546c]        # 0x14003eef0
   140029a84:	lea    rcx,[rbp-0x29]
   140029a88:	call   0x14001f070
   140029a8d:	nop
   140029a8e:	mov    r8,rbx
   140029a91:	lea    rdx,[rbp-0x29]
   140029a95:	lea    rcx,[rbp-0x49]
   140029a99:	call   0x14000af10
   140029a9e:	nop
   140029a9f:	cmp    QWORD PTR [rax+0x18],0x10
   140029aa4:	jb     0x140029aa9
   140029aa6:	mov    rax,QWORD PTR [rax]
   140029aa9:	mov    QWORD PTR [rbp+0x67],rax
   140029aad:	lea    rdx,[rbp+0x67]
   140029ab1:	lea    rcx,[rsp+0x20]
   140029ab6:	call   QWORD PTR [rip+0xc994]        # 0x140036450
   140029abc:	lea    rax,[rip+0x10eb5]        # 0x14003a978
   140029ac3:	mov    QWORD PTR [rsp+0x20],rax
   140029ac8:	cmp    QWORD PTR [rbp-0x31],0x10
   140029acd:	jb     0x140029ad8
   140029acf:	mov    rcx,QWORD PTR [rbp-0x49]
   140029ad3:	call   0x140030282
   140029ad8:	mov    QWORD PTR [rbp-0x31],0xf
   140029ae0:	mov    QWORD PTR [rbp-0x39],rdi
   140029ae4:	mov    BYTE PTR [rbp-0x49],0x0
   140029ae8:	lea    rax,[rip+0x10eb9]        # 0x14003a9a8
   140029aef:	mov    QWORD PTR [rsp+0x20],rax
   140029af4:	mov    ecx,0x38
   140029af9:	call   0x14003027c
   140029afe:	mov    QWORD PTR [rbp+0x77],rax
   140029b02:	test   rax,rax
   140029b05:	je     0x140029b15
   140029b07:	mov    rdx,rbx
   140029b0a:	mov    rcx,rax
   140029b0d:	call   0x140013fb0
   140029b12:	mov    rdi,rax
   140029b15:	mov    QWORD PTR [rsp+0x38],rdi
   140029b1a:	lea    rdx,[rsp+0x20]
   140029b1f:	lea    rcx,[rbp-0x1]
   140029b23:	call   0x140008050
   140029b28:	nop
   140029b29:	lea    rcx,[rip+0x15250]        # 0x14003ed80
   140029b30:	mov    QWORD PTR [rax+0x30],rcx
   140029b34:	lea    rcx,[rip+0x151d5]        # 0x14003ed10
   140029b3b:	mov    QWORD PTR [rax+0x38],rcx
   140029b3f:	mov    DWORD PTR [rax+0x40],0xfe
   140029b46:	mov    rcx,rax
   140029b49:	call   0x14000dd70
   140029b4e:	nop
   140029b4f:	lea    r11,[rsp+0x100]
   140029b57:	mov    rbx,QWORD PTR [r11+0x28]
   140029b5b:	mov    rsi,QWORD PTR [r11+0x38]
   140029b5f:	mov    rsp,r11
   140029b62:	pop    r14
   140029b64:	pop    rdi
   140029b65:	pop    rbp
   140029b66:	ret    
   140029b67:	int3   
   140029b68:	int3   
   140029b69:	int3   
   140029b6a:	int3   
   140029b6b:	int3   
   140029b6c:	int3   
   140029b6d:	int3   
   140029b6e:	int3   
   140029b6f:	int3   
   140029b70:	mov    rax,rcx
   140029b73:	ret    
   140029b74:	int3   
   140029b75:	int3   
   140029b76:	int3   
   140029b77:	int3   
   140029b78:	int3   
   140029b79:	int3   
   140029b7a:	int3   
   140029b7b:	int3   
   140029b7c:	int3   
   140029b7d:	int3   
   140029b7e:	int3   
   140029b7f:	int3   
   140029b80:	mov    rax,QWORD PTR [rcx]
   140029b83:	mov    QWORD PTR [rax+0x10],rdx
   140029b87:	ret    
   140029b88:	int3   
   140029b89:	int3   
   140029b8a:	int3   
   140029b8b:	int3   
   140029b8c:	int3   
   140029b8d:	int3   
   140029b8e:	int3   
   140029b8f:	int3   
   140029b90:	mov    rax,QWORD PTR [rcx]
   140029b93:	mov    QWORD PTR [rcx],0x0
   140029b9a:	ret    
   140029b9b:	int3   
   140029b9c:	int3   
   140029b9d:	int3   
   140029b9e:	int3   
   140029b9f:	int3   
   140029ba0:	mov    rax,QWORD PTR [rcx]
   140029ba3:	mov    QWORD PTR [rcx],0x0
   140029baa:	ret    
   140029bab:	int3   
   140029bac:	int3   
   140029bad:	int3   
   140029bae:	int3   
   140029baf:	int3   
   140029bb0:	mov    rax,QWORD PTR [rcx]
   140029bb3:	mov    QWORD PTR [rcx],0x0
   140029bba:	ret    
   140029bbb:	int3   
   140029bbc:	int3   
   140029bbd:	int3   
   140029bbe:	int3   
   140029bbf:	int3   
   140029bc0:	mov    BYTE PTR [rcx+0x40],0x1
   140029bc4:	ret    
   140029bc5:	int3   
   140029bc6:	int3   
   140029bc7:	int3   
   140029bc8:	int3   
   140029bc9:	int3   
   140029bca:	int3   
   140029bcb:	int3   
   140029bcc:	int3   
   140029bcd:	int3   
   140029bce:	int3   
   140029bcf:	int3   
   140029bd0:	rex push rbx
   140029bd2:	sub    rsp,0x20
   140029bd6:	mov    rbx,rcx
   140029bd9:	mov    rcx,QWORD PTR [rcx]
   140029bdc:	test   rcx,rcx
   140029bdf:	je     0x140029bf2
   140029be1:	mov    rax,QWORD PTR [rcx]
   140029be4:	call   QWORD PTR [rax+0x20]
   140029be7:	test   al,al
   140029be9:	je     0x140029bf2
   140029beb:	mov    QWORD PTR [rbx],0x0
   140029bf2:	add    rsp,0x20
   140029bf6:	pop    rbx
   140029bf7:	ret    
   140029bf8:	int3   
   140029bf9:	int3   
   140029bfa:	int3   
   140029bfb:	int3   
   140029bfc:	int3   
   140029bfd:	int3   
   140029bfe:	int3   
   140029bff:	int3   
   140029c00:	mov    QWORD PTR [rsp+0x8],rbx
   140029c05:	push   rdi
   140029c06:	sub    rsp,0x20
   140029c0a:	lock dec DWORD PTR [rcx+0x8]
   140029c0e:	mov    rbx,rcx
   140029c11:	jne    0x140029c28
   140029c13:	mov    rax,QWORD PTR [rcx]
   140029c16:	call   QWORD PTR [rax+0x8]
   140029c19:	lock dec DWORD PTR [rbx+0xc]
   140029c1d:	jne    0x140029c28
   140029c1f:	mov    rax,QWORD PTR [rbx]
   140029c22:	mov    rcx,rbx
   140029c25:	call   QWORD PTR [rax+0x10]
   140029c28:	mov    rbx,QWORD PTR [rsp+0x30]
   140029c2d:	add    rsp,0x20
   140029c31:	pop    rdi
   140029c32:	ret    
   140029c33:	int3   
   140029c34:	int3   
   140029c35:	int3   
   140029c36:	int3   
   140029c37:	int3   
   140029c38:	int3   
   140029c39:	int3   
   140029c3a:	int3   
   140029c3b:	int3   
   140029c3c:	int3   
   140029c3d:	int3   
   140029c3e:	int3   
   140029c3f:	int3   
   140029c40:	xor    r8d,r8d
   140029c43:	test   rdx,rdx
   140029c46:	je     0x140029c4e
   140029c48:	add    rdx,0x60
   140029c4c:	jmp    0x140029c51
   140029c4e:	mov    rdx,r8
   140029c51:	test   rcx,rcx
   140029c54:	je     0x140029c5a
   140029c56:	lea    r8,[rcx+0x60]
   140029c5a:	mov    rcx,QWORD PTR [rdx]
   140029c5d:	mov    rax,QWORD PTR [rdx+0x8]
   140029c61:	mov    QWORD PTR [rcx+0x8],rax
   140029c65:	mov    rax,QWORD PTR [rdx]
   140029c68:	mov    rcx,QWORD PTR [rdx+0x8]
   140029c6c:	mov    QWORD PTR [rcx],rax
   140029c6f:	mov    rax,QWORD PTR [r8]
   140029c72:	mov    QWORD PTR [rdx+0x8],r8
   140029c76:	mov    QWORD PTR [rdx],rax
   140029c79:	mov    QWORD PTR [r8],rdx
   140029c7c:	mov    rax,QWORD PTR [rdx]
   140029c7f:	mov    QWORD PTR [rax+0x8],rdx
   140029c83:	ret    
   140029c84:	int3   
   140029c85:	int3   
   140029c86:	int3   
   140029c87:	int3   
   140029c88:	int3   
   140029c89:	int3   
   140029c8a:	int3   
   140029c8b:	int3   
   140029c8c:	int3   
   140029c8d:	int3   
   140029c8e:	int3   
   140029c8f:	int3   
   140029c90:	mov    r8,QWORD PTR [rdx]
   140029c93:	mov    rax,QWORD PTR [rdx+0x8]
   140029c97:	mov    QWORD PTR [r8+0x8],rax
   140029c9b:	mov    rax,QWORD PTR [rdx]
   140029c9e:	mov    r8,QWORD PTR [rdx+0x8]
   140029ca2:	mov    QWORD PTR [r8],rax
   140029ca5:	mov    rax,QWORD PTR [rcx]
   140029ca8:	mov    QWORD PTR [rdx+0x8],rcx
   140029cac:	mov    QWORD PTR [rdx],rax
   140029caf:	mov    QWORD PTR [rcx],rdx
   140029cb2:	mov    rax,QWORD PTR [rdx]
   140029cb5:	mov    QWORD PTR [rax+0x8],rdx
   140029cb9:	ret    
   140029cba:	int3   
   140029cbb:	int3   
   140029cbc:	int3   
   140029cbd:	int3   
   140029cbe:	int3   
   140029cbf:	int3   
   140029cc0:	mov    rax,QWORD PTR [rcx]
   140029cc3:	mov    rcx,QWORD PTR [rax]
   140029cc6:	mov    rax,rdx
   140029cc9:	mov    QWORD PTR [rdx],rcx
   140029ccc:	ret    
   140029ccd:	int3   
   140029cce:	int3   
   140029ccf:	int3   
   140029cd0:	rex push rbx
   140029cd2:	sub    rsp,0x30
   140029cd6:	mov    rax,QWORD PTR [rsp+0x60]
   140029cdb:	mov    rbx,rcx
   140029cde:	cmp    r9,rax
   140029ce1:	jne    0x140029d20
   140029ce3:	cmp    QWORD PTR [rcx+0x18],0x10
   140029ce8:	jb     0x140029cef
   140029cea:	mov    rax,QWORD PTR [rcx]
   140029ced:	jmp    0x140029cf2
   140029cef:	mov    rax,rcx
   140029cf2:	xor    ecx,ecx
   140029cf4:	test   r8,r8
   140029cf7:	jne    0x140029cfe
   140029cf9:	mov    r8d,ecx
   140029cfc:	jmp    0x140029d01
   140029cfe:	sub    r8,rdx
   140029d01:	test   rdx,rdx
   140029d04:	je     0x140029d0c
   140029d06:	mov    rcx,rdx
   140029d09:	sub    rcx,rax
   140029d0c:	mov    rdx,rcx
   140029d0f:	mov    rcx,rbx
   140029d12:	call   0x140023080
   140029d17:	mov    rax,rbx
   140029d1a:	add    rsp,0x30
   140029d1e:	pop    rbx
   140029d1f:	ret    
   140029d20:	cmp    QWORD PTR [rcx+0x18],0x10
   140029d25:	jb     0x140029d2c
   140029d27:	mov    r10,QWORD PTR [rcx]
   140029d2a:	jmp    0x140029d2f
   140029d2c:	mov    r10,rcx
   140029d2f:	xor    ecx,ecx
   140029d31:	test   r8,r8
   140029d34:	jne    0x140029d3b
   140029d36:	mov    r8d,ecx
   140029d39:	jmp    0x140029d3e
   140029d3b:	sub    r8,rdx
   140029d3e:	test   rdx,rdx
   140029d41:	je     0x140029d49
   140029d43:	mov    rcx,rdx
   140029d46:	sub    rcx,r10
   140029d49:	sub    rax,r9
   140029d4c:	mov    rdx,rcx
   140029d4f:	mov    rcx,rbx
   140029d52:	mov    QWORD PTR [rsp+0x20],rax
   140029d57:	call   0x14002a190
   140029d5c:	mov    rax,rbx
   140029d5f:	add    rsp,0x30
   140029d63:	pop    rbx
   140029d64:	ret    
   140029d65:	int3   
   140029d66:	int3   
   140029d67:	int3   
   140029d68:	int3   
   140029d69:	int3   
   140029d6a:	int3   
   140029d6b:	int3   
   140029d6c:	int3   
   140029d6d:	int3   
   140029d6e:	int3   
   140029d6f:	int3   
   140029d70:	rex push rbx
   140029d72:	sub    rsp,0x30
   140029d76:	mov    rax,QWORD PTR [rsp+0x60]
   140029d7b:	mov    rbx,rcx
   140029d7e:	cmp    r9,rax
   140029d81:	jne    0x140029dc0
   140029d83:	cmp    QWORD PTR [rcx+0x18],0x10
   140029d88:	jb     0x140029d8f
   140029d8a:	mov    rax,QWORD PTR [rcx]
   140029d8d:	jmp    0x140029d92
   140029d8f:	mov    rax,rcx
   140029d92:	xor    ecx,ecx
   140029d94:	test   r8,r8
   140029d97:	jne    0x140029d9e
   140029d99:	mov    r8d,ecx
   140029d9c:	jmp    0x140029da1
   140029d9e:	sub    r8,rdx
   140029da1:	test   rdx,rdx
   140029da4:	je     0x140029dac
   140029da6:	mov    rcx,rdx
   140029da9:	sub    rcx,rax
   140029dac:	mov    rdx,rcx
   140029daf:	mov    rcx,rbx
   140029db2:	call   0x140023080
   140029db7:	mov    rax,rbx
   140029dba:	add    rsp,0x30
   140029dbe:	pop    rbx
   140029dbf:	ret    
   140029dc0:	cmp    QWORD PTR [rcx+0x18],0x10
   140029dc5:	jb     0x140029dcc
   140029dc7:	mov    r10,QWORD PTR [rcx]
   140029dca:	jmp    0x140029dcf
   140029dcc:	mov    r10,rcx
   140029dcf:	xor    ecx,ecx
   140029dd1:	test   r8,r8
   140029dd4:	jne    0x140029ddb
   140029dd6:	mov    r8d,ecx
   140029dd9:	jmp    0x140029dde
   140029ddb:	sub    r8,rdx
   140029dde:	test   rdx,rdx
   140029de1:	je     0x140029de9
   140029de3:	mov    rcx,rdx
   140029de6:	sub    rcx,r10
   140029de9:	sub    rax,r9
   140029dec:	mov    rdx,rcx
   140029def:	mov    rcx,rbx
   140029df2:	mov    QWORD PTR [rsp+0x20],rax
   140029df7:	call   0x14002a190
   140029dfc:	mov    rax,rbx
   140029dff:	add    rsp,0x30
   140029e03:	pop    rbx
   140029e04:	ret    
   140029e05:	int3   
   140029e06:	int3   
   140029e07:	int3   
   140029e08:	int3   
   140029e09:	int3   
   140029e0a:	int3   
   140029e0b:	int3   
   140029e0c:	int3   
   140029e0d:	int3   
   140029e0e:	int3   
   140029e0f:	int3   
   140029e10:	rex push rbx
   140029e12:	push   rbp
   140029e13:	push   rsi
   140029e14:	push   r12
   140029e16:	push   r15
   140029e18:	sub    rsp,0x20
   140029e1c:	mov    rbx,rcx
   140029e1f:	mov    rcx,QWORD PTR [rcx+0x10]
   140029e23:	mov    r15,r9
   140029e26:	mov    rbp,r8
   140029e29:	mov    rsi,rdx
   140029e2c:	cmp    rcx,rdx
   140029e2f:	jb     0x14002a17b
   140029e35:	mov    rax,QWORD PTR [r9+0x10]
   140029e39:	mov    r12,QWORD PTR [rsp+0x70]
   140029e3e:	cmp    rax,r12
   140029e41:	jb     0x14002a17b
   140029e47:	mov    QWORD PTR [rsp+0x50],rdi
   140029e4c:	mov    rdi,QWORD PTR [rsp+0x78]
   140029e51:	mov    QWORD PTR [rsp+0x60],r14
   140029e56:	mov    r14,rcx
   140029e59:	sub    r14,rdx
   140029e5c:	mov    rdx,rcx
   140029e5f:	cmp    r14,r8
   140029e62:	cmovb  rbp,r14
   140029e66:	sub    rax,r12
   140029e69:	cmp    rax,rdi
   140029e6c:	cmovb  rdi,rax
   140029e70:	or     rax,0xffffffffffffffff
   140029e74:	sub    rdx,rbp
   140029e77:	sub    rax,rdi
   140029e7a:	cmp    rax,rdx
   140029e7d:	ja     0x140029e8d
   140029e7f:	lea    rcx,[rip+0x12a92]        # 0x14003c918
   140029e86:	call   QWORD PTR [rip+0xc394]        # 0x140036220
   140029e8c:	int3   
   140029e8d:	mov    QWORD PTR [rsp+0x58],r13
   140029e92:	lea    r13,[rdx+rdi*1]
   140029e96:	sub    r14,rbp
   140029e99:	cmp    rcx,r13
   140029e9c:	jae    0x140029eac
   140029e9e:	xor    r8d,r8d
   140029ea1:	mov    rdx,r13
   140029ea4:	mov    rcx,rbx
   140029ea7:	call   0x14001cc40
   140029eac:	cmp    rbx,r15
   140029eaf:	je     0x140029f24
   140029eb1:	mov    rax,QWORD PTR [rbx+0x18]
   140029eb5:	cmp    rax,0x10
   140029eb9:	jb     0x140029ec0
   140029ebb:	mov    rcx,QWORD PTR [rbx]
   140029ebe:	jmp    0x140029ec3
   140029ec0:	mov    rcx,rbx
   140029ec3:	cmp    rax,0x10
   140029ec7:	jb     0x140029ece
   140029ec9:	mov    rax,QWORD PTR [rbx]
   140029ecc:	jmp    0x140029ed1
   140029ece:	mov    rax,rbx
   140029ed1:	test   r14,r14
   140029ed4:	je     0x140029eed
   140029ed6:	lea    rdx,[rcx+rsi*1]
   140029eda:	lea    rcx,[rax+rsi*1]
   140029ede:	mov    r8,r14
   140029ee1:	add    rcx,rdi
   140029ee4:	add    rdx,rbp
   140029ee7:	call   QWORD PTR [rip+0xc573]        # 0x140036460
   140029eed:	cmp    QWORD PTR [r15+0x18],0x10
   140029ef2:	jb     0x140029ef7
   140029ef4:	mov    r15,QWORD PTR [r15]
   140029ef7:	cmp    QWORD PTR [rbx+0x18],0x10
   140029efc:	jb     0x140029f03
   140029efe:	mov    rax,QWORD PTR [rbx]
   140029f01:	jmp    0x140029f06
   140029f03:	mov    rax,rbx
   140029f06:	test   rdi,rdi
   140029f09:	je     0x14002a145
   140029f0f:	lea    rdx,[r15+r12*1]
   140029f13:	lea    rcx,[rax+rsi*1]
   140029f17:	mov    r8,rdi
   140029f1a:	call   0x14003048a
   140029f1f:	jmp    0x14002a145
   140029f24:	cmp    rdi,rbp
   140029f27:	ja     0x140029f9e
   140029f29:	mov    rax,QWORD PTR [rbx+0x18]
   140029f2d:	cmp    rax,0x10
   140029f31:	jb     0x140029f38
   140029f33:	mov    rcx,QWORD PTR [rbx]
   140029f36:	jmp    0x140029f3b
   140029f38:	mov    rcx,rbx
   140029f3b:	cmp    rax,0x10
   140029f3f:	jb     0x140029f46
   140029f41:	mov    rax,QWORD PTR [rbx]
   140029f44:	jmp    0x140029f49
   140029f46:	mov    rax,rbx
   140029f49:	test   rdi,rdi
   140029f4c:	je     0x140029f5f
   140029f4e:	lea    rdx,[rcx+r12*1]
   140029f52:	lea    rcx,[rax+rsi*1]
   140029f56:	mov    r8,rdi
   140029f59:	call   QWORD PTR [rip+0xc501]        # 0x140036460
   140029f5f:	mov    rax,QWORD PTR [rbx+0x18]
   140029f63:	cmp    rax,0x10
   140029f67:	jb     0x140029f6e
   140029f69:	mov    rcx,QWORD PTR [rbx]
   140029f6c:	jmp    0x140029f71
   140029f6e:	mov    rcx,rbx
   140029f71:	cmp    rax,0x10
   140029f75:	jb     0x140029f7c
   140029f77:	mov    rax,QWORD PTR [rbx]
   140029f7a:	jmp    0x140029f7f
   140029f7c:	mov    rax,rbx
   140029f7f:	test   r14,r14
   140029f82:	je     0x14002a145
   140029f88:	lea    rdx,[rcx+rsi*1]
   140029f8c:	lea    rcx,[rax+rsi*1]
   140029f90:	mov    r8,r14
   140029f93:	add    rdx,rbp
   140029f96:	add    rcx,rdi
   140029f99:	jmp    0x14002a13f
   140029f9e:	cmp    r12,rsi
   140029fa1:	ja     0x14002a018
   140029fa3:	mov    rax,QWORD PTR [rbx+0x18]
   140029fa7:	cmp    rax,0x10
   140029fab:	jb     0x140029fb2
   140029fad:	mov    rcx,QWORD PTR [rbx]
   140029fb0:	jmp    0x140029fb5
   140029fb2:	mov    rcx,rbx
   140029fb5:	cmp    rax,0x10
   140029fb9:	jb     0x140029fc0
   140029fbb:	mov    rax,QWORD PTR [rbx]
   140029fbe:	jmp    0x140029fc3
   140029fc0:	mov    rax,rbx
   140029fc3:	test   r14,r14
   140029fc6:	je     0x140029fdf
   140029fc8:	lea    rdx,[rcx+rsi*1]
   140029fcc:	lea    rcx,[rax+rsi*1]
   140029fd0:	mov    r8,r14
   140029fd3:	add    rcx,rdi
   140029fd6:	add    rdx,rbp
   140029fd9:	call   QWORD PTR [rip+0xc481]        # 0x140036460
   140029fdf:	mov    rax,QWORD PTR [rbx+0x18]
   140029fe3:	cmp    rax,0x10
   140029fe7:	jb     0x140029fee
   140029fe9:	mov    rcx,QWORD PTR [rbx]
   140029fec:	jmp    0x140029ff1
   140029fee:	mov    rcx,rbx
   140029ff1:	cmp    rax,0x10
   140029ff5:	jb     0x140029ffc
   140029ff7:	mov    rax,QWORD PTR [rbx]
   140029ffa:	jmp    0x140029fff
   140029ffc:	mov    rax,rbx
   140029fff:	test   rdi,rdi
   14002a002:	je     0x14002a145
   14002a008:	lea    rdx,[rcx+r12*1]
   14002a00c:	mov    r8,rdi
   14002a00f:	lea    rcx,[rax+rsi*1]
   14002a013:	jmp    0x14002a13f
   14002a018:	lea    rax,[rsi+rbp*1]
   14002a01c:	cmp    rax,r12
   14002a01f:	mov    rax,QWORD PTR [rbx+0x18]
   14002a023:	ja     0x14002a09b
   14002a025:	cmp    rax,0x10
   14002a029:	jb     0x14002a030
   14002a02b:	mov    rcx,QWORD PTR [rbx]
   14002a02e:	jmp    0x14002a033
   14002a030:	mov    rcx,rbx
   14002a033:	cmp    rax,0x10
   14002a037:	jb     0x14002a03e
   14002a039:	mov    rax,QWORD PTR [rbx]
   14002a03c:	jmp    0x14002a041
   14002a03e:	mov    rax,rbx
   14002a041:	test   r14,r14
   14002a044:	je     0x14002a05d
   14002a046:	lea    rdx,[rcx+rsi*1]
   14002a04a:	lea    rcx,[rax+rsi*1]
   14002a04e:	mov    r8,r14
   14002a051:	add    rcx,rdi
   14002a054:	add    rdx,rbp
   14002a057:	call   QWORD PTR [rip+0xc403]        # 0x140036460
   14002a05d:	mov    rax,QWORD PTR [rbx+0x18]
   14002a061:	cmp    rax,0x10
   14002a065:	jb     0x14002a06c
   14002a067:	mov    rdx,QWORD PTR [rbx]
   14002a06a:	jmp    0x14002a06f
   14002a06c:	mov    rdx,rbx
   14002a06f:	cmp    rax,0x10
   14002a073:	jb     0x14002a07a
   14002a075:	mov    rax,QWORD PTR [rbx]
   14002a078:	jmp    0x14002a07d
   14002a07a:	mov    rax,rbx
   14002a07d:	test   rdi,rdi
   14002a080:	je     0x14002a145
   14002a086:	sub    rdx,rbp
   14002a089:	lea    rcx,[rax+rsi*1]
   14002a08d:	mov    r8,rdi
   14002a090:	add    rdx,r12
   14002a093:	add    rdx,rdi
   14002a096:	jmp    0x14002a13f
   14002a09b:	cmp    rax,0x10
   14002a09f:	jb     0x14002a0a6
   14002a0a1:	mov    rcx,QWORD PTR [rbx]
   14002a0a4:	jmp    0x14002a0a9
   14002a0a6:	mov    rcx,rbx
   14002a0a9:	cmp    rax,0x10
   14002a0ad:	jb     0x14002a0b4
   14002a0af:	mov    rax,QWORD PTR [rbx]
   14002a0b2:	jmp    0x14002a0b7
   14002a0b4:	mov    rax,rbx
   14002a0b7:	test   rbp,rbp
   14002a0ba:	je     0x14002a0cd
   14002a0bc:	lea    rdx,[rcx+r12*1]
   14002a0c0:	lea    rcx,[rax+rsi*1]
   14002a0c4:	mov    r8,rbp
   14002a0c7:	call   QWORD PTR [rip+0xc393]        # 0x140036460
   14002a0cd:	mov    rax,QWORD PTR [rbx+0x18]
   14002a0d1:	cmp    rax,0x10
   14002a0d5:	jb     0x14002a0dc
   14002a0d7:	mov    rcx,QWORD PTR [rbx]
   14002a0da:	jmp    0x14002a0df
   14002a0dc:	mov    rcx,rbx
   14002a0df:	cmp    rax,0x10
   14002a0e3:	jb     0x14002a0ea
   14002a0e5:	mov    rax,QWORD PTR [rbx]
   14002a0e8:	jmp    0x14002a0ed
   14002a0ea:	mov    rax,rbx
   14002a0ed:	test   r14,r14
   14002a0f0:	je     0x14002a109
   14002a0f2:	lea    rdx,[rcx+rsi*1]
   14002a0f6:	lea    rcx,[rax+rsi*1]
   14002a0fa:	mov    r8,r14
   14002a0fd:	add    rcx,rdi
   14002a100:	add    rdx,rbp
   14002a103:	call   QWORD PTR [rip+0xc357]        # 0x140036460
   14002a109:	mov    rax,QWORD PTR [rbx+0x18]
   14002a10d:	cmp    rax,0x10
   14002a111:	jb     0x14002a118
   14002a113:	mov    rcx,QWORD PTR [rbx]
   14002a116:	jmp    0x14002a11b
   14002a118:	mov    rcx,rbx
   14002a11b:	cmp    rax,0x10
   14002a11f:	jb     0x14002a126
   14002a121:	mov    rax,QWORD PTR [rbx]
   14002a124:	jmp    0x14002a129
   14002a126:	mov    rax,rbx
   14002a129:	mov    r8,rdi
   14002a12c:	sub    r8,rbp
   14002a12f:	je     0x14002a145
   14002a131:	lea    rdx,[rcx+r12*1]
   14002a135:	lea    rcx,[rax+rsi*1]
   14002a139:	add    rdx,rdi
   14002a13c:	add    rcx,rbp
   14002a13f:	call   QWORD PTR [rip+0xc31b]        # 0x140036460
   14002a145:	cmp    QWORD PTR [rbx+0x18],0x10
   14002a14a:	mov    QWORD PTR [rbx+0x10],r13
   14002a14e:	jb     0x14002a155
   14002a150:	mov    rax,QWORD PTR [rbx]
   14002a153:	jmp    0x14002a158
   14002a155:	mov    rax,rbx
   14002a158:	mov    rdi,QWORD PTR [rsp+0x50]
   14002a15d:	mov    r14,QWORD PTR [rsp+0x60]
   14002a162:	mov    BYTE PTR [rax+r13*1],0x0
   14002a167:	mov    r13,QWORD PTR [rsp+0x58]
   14002a16c:	mov    rax,rbx
   14002a16f:	add    rsp,0x20
   14002a173:	pop    r15
   14002a175:	pop    r12
   14002a177:	pop    rsi
   14002a178:	pop    rbp
   14002a179:	pop    rbx
   14002a17a:	ret    
   14002a17b:	lea    rcx,[rip+0x127a6]        # 0x14003c928
   14002a182:	call   QWORD PTR [rip+0xc0a0]        # 0x140036228
   14002a188:	int3   
   14002a189:	int3   
   14002a18a:	int3   
   14002a18b:	int3   
   14002a18c:	int3   
   14002a18d:	int3   
   14002a18e:	int3   
   14002a18f:	int3   
   14002a190:	mov    QWORD PTR [rsp+0x20],rbx
   14002a195:	push   rsi
   14002a196:	push   r12
   14002a198:	push   r15
   14002a19a:	sub    rsp,0x30
   14002a19e:	mov    r15,r9
   14002a1a1:	mov    rsi,r8
   14002a1a4:	mov    r12,rdx
   14002a1a7:	mov    rbx,rcx
   14002a1aa:	test   r9,r9
   14002a1ad:	je     0x14002a215
   14002a1af:	mov    r8,QWORD PTR [rcx+0x18]
   14002a1b3:	cmp    r8,0x10
   14002a1b7:	jb     0x14002a1be
   14002a1b9:	mov    rax,QWORD PTR [rcx]
   14002a1bc:	jmp    0x14002a1c1
   14002a1be:	mov    rax,rcx
   14002a1c1:	cmp    r9,rax
   14002a1c4:	jb     0x14002a215
   14002a1c6:	cmp    r8,0x10
   14002a1ca:	jb     0x14002a1cf
   14002a1cc:	mov    rcx,QWORD PTR [rcx]
   14002a1cf:	add    rcx,QWORD PTR [rbx+0x10]
   14002a1d3:	cmp    rcx,r9
   14002a1d6:	jbe    0x14002a215
   14002a1d8:	cmp    r8,0x10
   14002a1dc:	jb     0x14002a1e3
   14002a1de:	mov    rax,QWORD PTR [rbx]
   14002a1e1:	jmp    0x14002a1e6
   14002a1e3:	mov    rax,rbx
   14002a1e6:	sub    r15,rax
   14002a1e9:	mov    rax,QWORD PTR [rsp+0x70]
   14002a1ee:	mov    r9,rbx
   14002a1f1:	mov    QWORD PTR [rsp+0x28],rax
   14002a1f6:	mov    r8,rsi
   14002a1f9:	mov    rcx,rbx
   14002a1fc:	mov    QWORD PTR [rsp+0x20],r15
   14002a201:	call   0x140029e10
   14002a206:	mov    rbx,QWORD PTR [rsp+0x68]
   14002a20b:	add    rsp,0x30
   14002a20f:	pop    r15
   14002a211:	pop    r12
   14002a213:	pop    rsi
   14002a214:	ret    
   14002a215:	mov    rcx,QWORD PTR [rbx+0x10]
   14002a219:	cmp    rcx,rdx
   14002a21c:	jae    0x14002a22c
   14002a21e:	lea    rcx,[rip+0x12703]        # 0x14003c928
   14002a225:	call   QWORD PTR [rip+0xbffd]        # 0x140036228
   14002a22b:	int3   
   14002a22c:	mov    QWORD PTR [rsp+0x50],rbp
   14002a231:	mov    rbp,QWORD PTR [rsp+0x70]
   14002a236:	mov    QWORD PTR [rsp+0x60],r14
   14002a23b:	mov    r14,rcx
   14002a23e:	sub    r14,rdx
   14002a241:	cmp    r14,rsi
   14002a244:	cmovb  rsi,r14
   14002a248:	or     rax,0xffffffffffffffff
   14002a24c:	sub    rax,rbp
   14002a24f:	sub    rcx,rsi
   14002a252:	cmp    rax,rcx
   14002a255:	ja     0x14002a265
   14002a257:	lea    rcx,[rip+0x126ba]        # 0x14003c918
   14002a25e:	call   QWORD PTR [rip+0xbfbc]        # 0x140036220
   14002a264:	int3   
   14002a265:	sub    r14,rsi
   14002a268:	cmp    rbp,rsi
   14002a26b:	jae    0x14002a2a8
   14002a26d:	mov    rax,QWORD PTR [rbx+0x18]
   14002a271:	cmp    rax,0x10
   14002a275:	jb     0x14002a27c
   14002a277:	mov    rcx,QWORD PTR [rbx]
   14002a27a:	jmp    0x14002a27f
   14002a27c:	mov    rcx,rbx
   14002a27f:	cmp    rax,0x10
   14002a283:	jb     0x14002a28a
   14002a285:	mov    rax,QWORD PTR [rbx]
   14002a288:	jmp    0x14002a28d
   14002a28a:	mov    rax,rbx
   14002a28d:	test   r14,r14
   14002a290:	je     0x14002a2a8
   14002a292:	add    rdx,rcx
   14002a295:	lea    rcx,[rax+r12*1]
   14002a299:	mov    r8,r14
   14002a29c:	add    rcx,rbp
   14002a29f:	add    rdx,rsi
   14002a2a2:	call   QWORD PTR [rip+0xc1b8]        # 0x140036460
   14002a2a8:	mov    QWORD PTR [rsp+0x58],rdi
   14002a2ad:	test   rbp,rbp
   14002a2b0:	jne    0x14002a2bb
   14002a2b2:	test   rsi,rsi
   14002a2b5:	je     0x14002a393
   14002a2bb:	mov    r8,QWORD PTR [rbx+0x10]
   14002a2bf:	mov    rdi,r8
   14002a2c2:	sub    rdi,rsi
   14002a2c5:	add    rdi,rbp
   14002a2c8:	cmp    rdi,0xfffffffffffffffe
   14002a2cc:	jbe    0x14002a2dc
   14002a2ce:	lea    rcx,[rip+0x12643]        # 0x14003c918
   14002a2d5:	call   QWORD PTR [rip+0xbf45]        # 0x140036220
   14002a2db:	int3   
   14002a2dc:	mov    rax,QWORD PTR [rbx+0x18]
   14002a2e0:	cmp    rax,rdi
   14002a2e3:	jae    0x14002a30d
   14002a2e5:	mov    rdx,rdi
   14002a2e8:	mov    rcx,rbx
   14002a2eb:	call   0x14001c600
   14002a2f0:	test   rdi,rdi
   14002a2f3:	je     0x14002a393
   14002a2f9:	cmp    rsi,rbp
   14002a2fc:	jae    0x14002a359
   14002a2fe:	mov    rax,QWORD PTR [rbx+0x18]
   14002a302:	cmp    rax,0x10
   14002a306:	jb     0x14002a32c
   14002a308:	mov    rcx,QWORD PTR [rbx]
   14002a30b:	jmp    0x14002a32f
   14002a30d:	test   rdi,rdi
   14002a310:	jne    0x14002a2f9
   14002a312:	mov    QWORD PTR [rbx+0x10],rdi
   14002a316:	cmp    rax,0x10
   14002a31a:	jb     0x14002a324
   14002a31c:	mov    rax,QWORD PTR [rbx]
   14002a31f:	mov    BYTE PTR [rax],dil
   14002a322:	jmp    0x14002a393
   14002a324:	mov    rax,rbx
   14002a327:	mov    BYTE PTR [rbx],0x0
   14002a32a:	jmp    0x14002a393
   14002a32c:	mov    rcx,rbx
   14002a32f:	cmp    rax,0x10
   14002a333:	jb     0x14002a33a
   14002a335:	mov    rax,QWORD PTR [rbx]
   14002a338:	jmp    0x14002a33d
   14002a33a:	mov    rax,rbx
   14002a33d:	test   r14,r14
   14002a340:	je     0x14002a359
   14002a342:	lea    rdx,[rcx+r12*1]
   14002a346:	lea    rcx,[rax+r12*1]
   14002a34a:	mov    r8,r14
   14002a34d:	add    rcx,rbp
   14002a350:	add    rdx,rsi
   14002a353:	call   QWORD PTR [rip+0xc107]        # 0x140036460
   14002a359:	cmp    QWORD PTR [rbx+0x18],0x10
   14002a35e:	jb     0x14002a365
   14002a360:	mov    rax,QWORD PTR [rbx]
   14002a363:	jmp    0x14002a368
   14002a365:	mov    rax,rbx
   14002a368:	test   rbp,rbp
   14002a36b:	je     0x14002a37c
   14002a36d:	lea    rcx,[rax+r12*1]
   14002a371:	mov    r8,rbp
   14002a374:	mov    rdx,r15
   14002a377:	call   0x14003048a
   14002a37c:	cmp    QWORD PTR [rbx+0x18],0x10
   14002a381:	mov    QWORD PTR [rbx+0x10],rdi
   14002a385:	jb     0x14002a38c
   14002a387:	mov    rax,QWORD PTR [rbx]
   14002a38a:	jmp    0x14002a38f
   14002a38c:	mov    rax,rbx
   14002a38f:	mov    BYTE PTR [rax+rdi*1],0x0
   14002a393:	mov    rdi,QWORD PTR [rsp+0x58]
   14002a398:	mov    rbp,QWORD PTR [rsp+0x50]
   14002a39d:	mov    r14,QWORD PTR [rsp+0x60]
   14002a3a2:	mov    rax,rbx
   14002a3a5:	mov    rbx,QWORD PTR [rsp+0x68]
   14002a3aa:	add    rsp,0x30
   14002a3ae:	pop    r15
   14002a3b0:	pop    r12
   14002a3b2:	pop    rsi
   14002a3b3:	ret    
   14002a3b4:	int3   
   14002a3b5:	int3   
   14002a3b6:	int3   
   14002a3b7:	int3   
   14002a3b8:	int3   
   14002a3b9:	int3   
   14002a3ba:	int3   
   14002a3bb:	int3   
   14002a3bc:	int3   
   14002a3bd:	int3   
   14002a3be:	int3   
   14002a3bf:	int3   
   14002a3c0:	mov    QWORD PTR [rsp+0x8],rbx
   14002a3c5:	push   rdi
   14002a3c6:	sub    rsp,0x20
   14002a3ca:	mov    rdi,QWORD PTR [rcx+0x10]
   14002a3ce:	mov    rbx,rcx
   14002a3d1:	cmp    rdi,rdx
   14002a3d4:	ja     0x14002a3fa
   14002a3d6:	cmp    QWORD PTR [rcx+0x18],rdx
   14002a3da:	je     0x14002a3fa
   14002a3dc:	mov    r8b,0x1
   14002a3df:	call   0x14001cc40
   14002a3e4:	test   al,al
   14002a3e6:	je     0x14002a3fa
   14002a3e8:	cmp    QWORD PTR [rbx+0x18],0x10
   14002a3ed:	mov    QWORD PTR [rbx+0x10],rdi
   14002a3f1:	jb     0x14002a3f6
   14002a3f3:	mov    rbx,QWORD PTR [rbx]
   14002a3f6:	mov    BYTE PTR [rbx+rdi*1],0x0
   14002a3fa:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a3ff:	add    rsp,0x20
   14002a403:	pop    rdi
   14002a404:	ret    
   14002a405:	int3   
   14002a406:	int3   
   14002a407:	int3   
   14002a408:	int3   
   14002a409:	int3   
   14002a40a:	int3   
   14002a40b:	int3   
   14002a40c:	int3   
   14002a40d:	int3   
   14002a40e:	int3   
   14002a40f:	int3   
   14002a410:	ret    0x0
   14002a413:	int3   
   14002a414:	int3   
   14002a415:	int3   
   14002a416:	int3   
   14002a417:	int3   
   14002a418:	int3   
   14002a419:	int3   
   14002a41a:	int3   
   14002a41b:	int3   
   14002a41c:	int3   
   14002a41d:	int3   
   14002a41e:	int3   
   14002a41f:	int3   
   14002a420:	rex push rbx
   14002a422:	sub    rsp,0x20
   14002a426:	cmp    BYTE PTR [rcx+0x10],0x0
   14002a42a:	mov    QWORD PTR [rsp+0x40],r14
   14002a42f:	mov    rbx,rcx
   14002a432:	mov    r14,rdx
   14002a435:	je     0x14002a476
   14002a437:	mov    QWORD PTR [rsp+0x38],rdi
   14002a43c:	mov    rdi,QWORD PTR [rcx+0x8]
   14002a440:	test   rdi,rdi
   14002a443:	je     0x14002a46d
   14002a445:	lock dec DWORD PTR [rdi+0x8]
   14002a449:	mov    QWORD PTR [rsp+0x30],rsi
   14002a44e:	jne    0x14002a468
   14002a450:	mov    rax,QWORD PTR [rdi]
   14002a453:	mov    rcx,rdi
   14002a456:	call   QWORD PTR [rax+0x8]
   14002a459:	lock dec DWORD PTR [rdi+0xc]
   14002a45d:	jne    0x14002a468
   14002a45f:	mov    rax,QWORD PTR [rdi]
   14002a462:	mov    rcx,rdi
   14002a465:	call   QWORD PTR [rax+0x10]
   14002a468:	mov    rsi,QWORD PTR [rsp+0x30]
   14002a46d:	mov    rdi,QWORD PTR [rsp+0x38]
   14002a472:	mov    BYTE PTR [rbx+0x10],0x0
   14002a476:	mov    rax,QWORD PTR [r14]
   14002a479:	mov    QWORD PTR [rbx],rax
   14002a47c:	mov    rax,QWORD PTR [r14+0x8]
   14002a480:	mov    r14,QWORD PTR [rsp+0x40]
   14002a485:	mov    QWORD PTR [rbx+0x8],rax
   14002a489:	test   rax,rax
   14002a48c:	je     0x14002a492
   14002a48e:	lock inc DWORD PTR [rax+0x8]
   14002a492:	mov    BYTE PTR [rbx+0x10],0x1
   14002a496:	add    rsp,0x20
   14002a49a:	pop    rbx
   14002a49b:	ret    
   14002a49c:	int3   
   14002a49d:	int3   
   14002a49e:	int3   
   14002a49f:	int3   
   14002a4a0:	rex push rdi
   14002a4a2:	sub    rsp,0x20
   14002a4a6:	cmp    BYTE PTR [rcx+0x10],0x0
   14002a4aa:	mov    rdi,rcx
   14002a4ad:	je     0x14002a4ee
   14002a4af:	mov    QWORD PTR [rsp+0x30],rbx
   14002a4b4:	mov    rbx,QWORD PTR [rcx+0x8]
   14002a4b8:	test   rbx,rbx
   14002a4bb:	je     0x14002a4e5
   14002a4bd:	lock dec DWORD PTR [rbx+0x8]
   14002a4c1:	mov    QWORD PTR [rsp+0x38],rsi
   14002a4c6:	jne    0x14002a4e0
   14002a4c8:	mov    rax,QWORD PTR [rbx]
   14002a4cb:	mov    rcx,rbx
   14002a4ce:	call   QWORD PTR [rax+0x8]
   14002a4d1:	lock dec DWORD PTR [rbx+0xc]
   14002a4d5:	jne    0x14002a4e0
   14002a4d7:	mov    rax,QWORD PTR [rbx]
   14002a4da:	mov    rcx,rbx
   14002a4dd:	call   QWORD PTR [rax+0x10]
   14002a4e0:	mov    rsi,QWORD PTR [rsp+0x38]
   14002a4e5:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a4ea:	mov    BYTE PTR [rdi+0x10],0x0
   14002a4ee:	add    rsp,0x20
   14002a4f2:	pop    rdi
   14002a4f3:	ret    
   14002a4f4:	int3   
   14002a4f5:	int3   
   14002a4f6:	int3   
   14002a4f7:	int3   
   14002a4f8:	int3   
   14002a4f9:	int3   
   14002a4fa:	int3   
   14002a4fb:	int3   
   14002a4fc:	int3   
   14002a4fd:	int3   
   14002a4fe:	int3   
   14002a4ff:	int3   
   14002a500:	rex push rbx
   14002a502:	sub    rsp,0x20
   14002a506:	cmp    BYTE PTR [rcx+0x10],0x0
   14002a50a:	mov    QWORD PTR [rsp+0x40],r14
   14002a50f:	mov    rbx,rcx
   14002a512:	mov    r14,rdx
   14002a515:	je     0x14002a556
   14002a517:	mov    QWORD PTR [rsp+0x38],rdi
   14002a51c:	mov    rdi,QWORD PTR [rcx+0x8]
   14002a520:	test   rdi,rdi
   14002a523:	je     0x14002a54d
   14002a525:	lock dec DWORD PTR [rdi+0x8]
   14002a529:	mov    QWORD PTR [rsp+0x30],rsi
   14002a52e:	jne    0x14002a548
   14002a530:	mov    rax,QWORD PTR [rdi]
   14002a533:	mov    rcx,rdi
   14002a536:	call   QWORD PTR [rax+0x8]
   14002a539:	lock dec DWORD PTR [rdi+0xc]
   14002a53d:	jne    0x14002a548
   14002a53f:	mov    rax,QWORD PTR [rdi]
   14002a542:	mov    rcx,rdi
   14002a545:	call   QWORD PTR [rax+0x10]
   14002a548:	mov    rsi,QWORD PTR [rsp+0x30]
   14002a54d:	mov    rdi,QWORD PTR [rsp+0x38]
   14002a552:	mov    BYTE PTR [rbx+0x10],0x0
   14002a556:	mov    rax,QWORD PTR [r14]
   14002a559:	mov    QWORD PTR [rbx],rax
   14002a55c:	mov    rax,QWORD PTR [r14+0x8]
   14002a560:	mov    r14,QWORD PTR [rsp+0x40]
   14002a565:	mov    QWORD PTR [rbx+0x8],rax
   14002a569:	test   rax,rax
   14002a56c:	je     0x14002a572
   14002a56e:	lock inc DWORD PTR [rax+0x8]
   14002a572:	mov    BYTE PTR [rbx+0x10],0x1
   14002a576:	add    rsp,0x20
   14002a57a:	pop    rbx
   14002a57b:	ret    
   14002a57c:	int3   
   14002a57d:	int3   
   14002a57e:	int3   
   14002a57f:	int3   
   14002a580:	rex push rdi
   14002a582:	sub    rsp,0x20
   14002a586:	cmp    BYTE PTR [rcx+0x10],0x0
   14002a58a:	mov    rdi,rcx
   14002a58d:	je     0x14002a5ce
   14002a58f:	mov    QWORD PTR [rsp+0x30],rbx
   14002a594:	mov    rbx,QWORD PTR [rcx+0x8]
   14002a598:	test   rbx,rbx
   14002a59b:	je     0x14002a5c5
   14002a59d:	lock dec DWORD PTR [rbx+0x8]
   14002a5a1:	mov    QWORD PTR [rsp+0x38],rsi
   14002a5a6:	jne    0x14002a5c0
   14002a5a8:	mov    rax,QWORD PTR [rbx]
   14002a5ab:	mov    rcx,rbx
   14002a5ae:	call   QWORD PTR [rax+0x8]
   14002a5b1:	lock dec DWORD PTR [rbx+0xc]
   14002a5b5:	jne    0x14002a5c0
   14002a5b7:	mov    rax,QWORD PTR [rbx]
   14002a5ba:	mov    rcx,rbx
   14002a5bd:	call   QWORD PTR [rax+0x10]
   14002a5c0:	mov    rsi,QWORD PTR [rsp+0x38]
   14002a5c5:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a5ca:	mov    BYTE PTR [rdi+0x10],0x0
   14002a5ce:	add    rsp,0x20
   14002a5d2:	pop    rdi
   14002a5d3:	ret    
   14002a5d4:	int3   
   14002a5d5:	int3   
   14002a5d6:	int3   
   14002a5d7:	int3   
   14002a5d8:	int3   
   14002a5d9:	int3   
   14002a5da:	int3   
   14002a5db:	int3   
   14002a5dc:	int3   
   14002a5dd:	int3   
   14002a5de:	int3   
   14002a5df:	int3   
   14002a5e0:	cmp    BYTE PTR [rcx+0x1],0x0
   14002a5e4:	je     0x14002a5ea
   14002a5e6:	mov    BYTE PTR [rcx+0x1],0x0
   14002a5ea:	movzx  eax,BYTE PTR [rdx]
   14002a5ed:	mov    BYTE PTR [rcx],al
   14002a5ef:	mov    BYTE PTR [rcx+0x1],0x1
   14002a5f3:	ret    
   14002a5f4:	int3   
   14002a5f5:	int3   
   14002a5f6:	int3   
   14002a5f7:	int3   
   14002a5f8:	int3   
   14002a5f9:	int3   
   14002a5fa:	int3   
   14002a5fb:	int3   
   14002a5fc:	int3   
   14002a5fd:	int3   
   14002a5fe:	int3   
   14002a5ff:	int3   
   14002a600:	cmp    BYTE PTR [rcx+0x1],0x0
   14002a604:	je     0x14002a60a
   14002a606:	mov    BYTE PTR [rcx+0x1],0x0
   14002a60a:	ret    
   14002a60b:	int3   
   14002a60c:	int3   
   14002a60d:	int3   
   14002a60e:	int3   
   14002a60f:	int3   
   14002a610:	cmp    BYTE PTR [rcx+0x8],0x0
   14002a614:	je     0x14002a61a
   14002a616:	mov    BYTE PTR [rcx+0x8],0x0
   14002a61a:	mov    rax,QWORD PTR [rdx]
   14002a61d:	mov    QWORD PTR [rcx],rax
   14002a620:	mov    BYTE PTR [rcx+0x8],0x1
   14002a624:	ret    
   14002a625:	int3   
   14002a626:	int3   
   14002a627:	int3   
   14002a628:	int3   
   14002a629:	int3   
   14002a62a:	int3   
   14002a62b:	int3   
   14002a62c:	int3   
   14002a62d:	int3   
   14002a62e:	int3   
   14002a62f:	int3   
   14002a630:	cmp    BYTE PTR [rcx+0x8],0x0
   14002a634:	je     0x14002a63a
   14002a636:	mov    BYTE PTR [rcx+0x8],0x0
   14002a63a:	ret    
   14002a63b:	int3   
   14002a63c:	int3   
   14002a63d:	int3   
   14002a63e:	int3   
   14002a63f:	int3   
   14002a640:	mov    QWORD PTR [rsp+0x8],rbx
   14002a645:	mov    QWORD PTR [rsp+0x10],rbp
   14002a64a:	mov    QWORD PTR [rsp+0x18],rsi
   14002a64f:	push   rdi
   14002a650:	sub    rsp,0x20
   14002a654:	mov    rdi,QWORD PTR [rcx]
   14002a657:	xor    ebp,ebp
   14002a659:	mov    rsi,rcx
   14002a65c:	mov    rbx,QWORD PTR [rdi]
   14002a65f:	cmp    rbx,rdi
   14002a662:	je     0x14002a69d
   14002a664:	mov    eax,DWORD PTR [rsi+0x30]
   14002a667:	test   al,0x1
   14002a669:	je     0x14002a66f
   14002a66b:	test   al,0x4
   14002a66d:	jne    0x14002a67e
   14002a66f:	mov    rcx,QWORD PTR [rbx+0x10]
   14002a673:	xor    edx,edx
   14002a675:	mov    rax,QWORD PTR [rcx]
   14002a678:	call   QWORD PTR [rax+0x90]
   14002a67e:	mov    rcx,QWORD PTR [rbx+0x10]
   14002a682:	mov    QWORD PTR [rbx+0x10],rbp
   14002a686:	test   rcx,rcx
   14002a689:	je     0x14002a695
   14002a68b:	mov    rax,QWORD PTR [rcx]
   14002a68e:	mov    edx,0x1
   14002a693:	call   QWORD PTR [rax]
   14002a695:	mov    rbx,QWORD PTR [rbx]
   14002a698:	cmp    rbx,rdi
   14002a69b:	jne    0x14002a664
   14002a69d:	mov    rax,QWORD PTR [rsi]
   14002a6a0:	mov    rcx,QWORD PTR [rax]
   14002a6a3:	mov    QWORD PTR [rax],rax
   14002a6a6:	mov    rax,QWORD PTR [rsi]
   14002a6a9:	mov    QWORD PTR [rax+0x8],rax
   14002a6ad:	mov    QWORD PTR [rsi+0x8],rbp
   14002a6b1:	cmp    rcx,QWORD PTR [rsi]
   14002a6b4:	je     0x14002a6c6
   14002a6b6:	mov    rbx,QWORD PTR [rcx]
   14002a6b9:	call   0x140030282
   14002a6be:	mov    rcx,rbx
   14002a6c1:	cmp    rbx,QWORD PTR [rsi]
   14002a6c4:	jne    0x14002a6b6
   14002a6c6:	and    DWORD PTR [rsi+0x30],0xfffffffc
   14002a6ca:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a6cf:	mov    rbp,QWORD PTR [rsp+0x38]
   14002a6d4:	mov    rsi,QWORD PTR [rsp+0x40]
   14002a6d9:	add    rsp,0x20
   14002a6dd:	pop    rdi
   14002a6de:	ret    
   14002a6df:	int3   
   14002a6e0:	xor    eax,eax
   14002a6e2:	mov    DWORD PTR [rcx],0x67452301
   14002a6e8:	mov    DWORD PTR [rcx+0x4],0xefcdab89
   14002a6ef:	mov    DWORD PTR [rcx+0x8],0x98badcfe
   14002a6f6:	mov    DWORD PTR [rcx+0xc],0x10325476
   14002a6fd:	mov    DWORD PTR [rcx+0x10],0xc3d2e1f0
   14002a704:	mov    QWORD PTR [rcx+0x58],rax
   14002a708:	mov    QWORD PTR [rcx+0x60],rax
   14002a70c:	mov    QWORD PTR [rcx+0x68],rax
   14002a710:	ret    
   14002a711:	int3   
   14002a712:	int3   
   14002a713:	int3   
   14002a714:	int3   
   14002a715:	int3   
   14002a716:	int3   
   14002a717:	int3   
   14002a718:	int3   
   14002a719:	int3   
   14002a71a:	int3   
   14002a71b:	int3   
   14002a71c:	int3   
   14002a71d:	int3   
   14002a71e:	int3   
   14002a71f:	int3   
   14002a720:	mov    QWORD PTR [rsp+0x8],rbx
   14002a725:	push   rdi
   14002a726:	sub    rsp,0x20
   14002a72a:	movsxd rbx,edx
   14002a72d:	mov    rdi,rcx
   14002a730:	cmp    QWORD PTR [rcx+0x8],rbx
   14002a734:	je     0x14002a76a
   14002a736:	xor    eax,eax
   14002a738:	test   edx,edx
   14002a73a:	je     0x14002a756
   14002a73c:	cmp    rbx,0xffffffffffffffff
   14002a740:	ja     0x14002a74f
   14002a742:	mov    rcx,rbx
   14002a745:	call   0x14003027c
   14002a74a:	test   rax,rax
   14002a74d:	jne    0x14002a756
   14002a74f:	call   QWORD PTR [rip+0xbac3]        # 0x140036218
   14002a755:	int3   
   14002a756:	mov    QWORD PTR [rdi+0x8],rbx
   14002a75a:	mov    rcx,QWORD PTR [rdi]
   14002a75d:	mov    QWORD PTR [rdi],rax
   14002a760:	test   rcx,rcx
   14002a763:	je     0x14002a76a
   14002a765:	call   0x140030282
   14002a76a:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a76f:	add    rsp,0x20
   14002a773:	pop    rdi
   14002a774:	ret    
   14002a775:	int3   
   14002a776:	int3   
   14002a777:	int3   
   14002a778:	movsxd rax,DWORD PTR [rcx-0x4]
   14002a77c:	sub    rcx,rax
   14002a77f:	jmp    0x14002a790
   14002a784:	int3   
   14002a785:	int3   
   14002a786:	int3   
   14002a787:	int3   
   14002a788:	int3   
   14002a789:	int3   
   14002a78a:	int3   
   14002a78b:	int3   
   14002a78c:	int3   
   14002a78d:	int3   
   14002a78e:	int3   
   14002a78f:	int3   
   14002a790:	mov    r11,rsp
   14002a793:	push   rbx
   14002a794:	sub    rsp,0x80
   14002a79b:	mov    QWORD PTR [r11-0x68],0xfffffffffffffffe
   14002a7a3:	mov    DWORD PTR [r11+0x8],0x0
   14002a7ab:	lea    rbx,[rcx-0x50]
   14002a7af:	lea    rax,[rip+0x12212]        # 0x14003c9c8
   14002a7b6:	mov    QWORD PTR [r11-0x20],rax
   14002a7ba:	lea    rax,[rip+0x10087]        # 0x14003a848
   14002a7c1:	mov    QWORD PTR [r11-0x10],rax
   14002a7c5:	mov    DWORD PTR [r11+0x8],0x1
   14002a7cd:	mov    rdx,rbx
   14002a7d0:	lea    rcx,[r11-0x60]
   14002a7d4:	call   QWORD PTR [rip+0xbc6e]        # 0x140036448
   14002a7da:	lea    rax,[rip+0x102c7]        # 0x14003aaa8
   14002a7e1:	mov    QWORD PTR [rsp+0x28],rax
   14002a7e6:	test   rbx,rbx
   14002a7e9:	je     0x14002a7ef
   14002a7eb:	add    rbx,0x18
   14002a7ef:	lea    rax,[rip+0x10042]        # 0x14003a838
   14002a7f6:	mov    QWORD PTR [rsp+0x40],rax
   14002a7fb:	mov    rcx,QWORD PTR [rbx+0x8]
   14002a7ff:	mov    QWORD PTR [rsp+0x48],rcx
   14002a804:	test   rcx,rcx
   14002a807:	je     0x14002a80f
   14002a809:	mov    rax,QWORD PTR [rcx]
   14002a80c:	call   QWORD PTR [rax+0x18]
   14002a80f:	mov    rax,QWORD PTR [rbx+0x10]
   14002a813:	mov    QWORD PTR [rsp+0x50],rax
   14002a818:	mov    rax,QWORD PTR [rbx+0x18]
   14002a81c:	mov    QWORD PTR [rsp+0x58],rax
   14002a821:	mov    eax,DWORD PTR [rbx+0x20]
   14002a824:	mov    DWORD PTR [rsp+0x60],eax
   14002a828:	lea    rax,[rip+0x12159]        # 0x14003c988
   14002a82f:	mov    QWORD PTR [rsp+0x28],rax
   14002a834:	lea    rax,[rip+0x12165]        # 0x14003c9a0
   14002a83b:	mov    QWORD PTR [rsp+0x40],rax
   14002a840:	mov    rax,QWORD PTR [rsp+0x68]
   14002a845:	movsxd rcx,DWORD PTR [rax+0x4]
   14002a849:	lea    rax,[rip+0x12160]        # 0x14003c9b0
   14002a850:	mov    QWORD PTR [rsp+rcx*1+0x68],rax
   14002a855:	mov    rax,QWORD PTR [rsp+0x68]
   14002a85a:	movsxd rcx,DWORD PTR [rax+0x4]
   14002a85e:	mov    DWORD PTR [rsp+rcx*1+0x64],0x0
   14002a866:	lea    rdx,[rip+0x259bb]        # 0x140050228
   14002a86d:	lea    rcx,[rsp+0x28]
   14002a872:	call   0x140030478
   14002a877:	int3   
   14002a878:	movsxd rax,DWORD PTR [rcx-0x4]
   14002a87c:	sub    rcx,rax
   14002a87f:	jmp    0x14002a890
   14002a884:	int3   
   14002a885:	int3   
   14002a886:	int3   
   14002a887:	int3   
   14002a888:	int3   
   14002a889:	int3   
   14002a88a:	int3   
   14002a88b:	int3   
   14002a88c:	int3   
   14002a88d:	int3   
   14002a88e:	int3   
   14002a88f:	int3   
   14002a890:	mov    r11,rsp
   14002a893:	push   rbx
   14002a894:	sub    rsp,0x80
   14002a89b:	mov    QWORD PTR [r11-0x68],0xfffffffffffffffe
   14002a8a3:	mov    DWORD PTR [r11+0x8],0x0
   14002a8ab:	lea    rbx,[rcx-0x50]
   14002a8af:	lea    rax,[rip+0x127b2]        # 0x14003d068
   14002a8b6:	mov    QWORD PTR [r11-0x20],rax
   14002a8ba:	lea    rax,[rip+0xff87]        # 0x14003a848
   14002a8c1:	mov    QWORD PTR [r11-0x10],rax
   14002a8c5:	mov    DWORD PTR [r11+0x8],0x1
   14002a8cd:	mov    rdx,rbx
   14002a8d0:	lea    rcx,[r11-0x60]
   14002a8d4:	call   QWORD PTR [rip+0xbb6e]        # 0x140036448
   14002a8da:	lea    rax,[rip+0x1020f]        # 0x14003aaf0
   14002a8e1:	mov    QWORD PTR [rsp+0x28],rax
   14002a8e6:	test   rbx,rbx
   14002a8e9:	je     0x14002a8ef
   14002a8eb:	add    rbx,0x18
   14002a8ef:	lea    rax,[rip+0xff42]        # 0x14003a838
   14002a8f6:	mov    QWORD PTR [rsp+0x40],rax
   14002a8fb:	mov    rcx,QWORD PTR [rbx+0x8]
   14002a8ff:	mov    QWORD PTR [rsp+0x48],rcx
   14002a904:	test   rcx,rcx
   14002a907:	je     0x14002a90f
   14002a909:	mov    rax,QWORD PTR [rcx]
   14002a90c:	call   QWORD PTR [rax+0x18]
   14002a90f:	mov    rax,QWORD PTR [rbx+0x10]
   14002a913:	mov    QWORD PTR [rsp+0x50],rax
   14002a918:	mov    rax,QWORD PTR [rbx+0x18]
   14002a91c:	mov    QWORD PTR [rsp+0x58],rax
   14002a921:	mov    eax,DWORD PTR [rbx+0x20]
   14002a924:	mov    DWORD PTR [rsp+0x60],eax
   14002a928:	lea    rax,[rip+0x126f9]        # 0x14003d028
   14002a92f:	mov    QWORD PTR [rsp+0x28],rax
   14002a934:	lea    rax,[rip+0x12705]        # 0x14003d040
   14002a93b:	mov    QWORD PTR [rsp+0x40],rax
   14002a940:	mov    rax,QWORD PTR [rsp+0x68]
   14002a945:	movsxd rcx,DWORD PTR [rax+0x4]
   14002a949:	lea    rax,[rip+0x12700]        # 0x14003d050
   14002a950:	mov    QWORD PTR [rsp+rcx*1+0x68],rax
   14002a955:	mov    rax,QWORD PTR [rsp+0x68]
   14002a95a:	movsxd rcx,DWORD PTR [rax+0x4]
   14002a95e:	mov    DWORD PTR [rsp+rcx*1+0x64],0x0
   14002a966:	lea    rdx,[rip+0x25b23]        # 0x140050490
   14002a96d:	lea    rcx,[rsp+0x28]
   14002a972:	call   0x140030478
   14002a977:	int3   
   14002a978:	movsxd rax,DWORD PTR [rcx-0x4]
   14002a97c:	sub    rcx,rax
   14002a97f:	jmp    0x14002a990
   14002a984:	int3   
   14002a985:	int3   
   14002a986:	int3   
   14002a987:	int3   
   14002a988:	int3   
   14002a989:	int3   
   14002a98a:	int3   
   14002a98b:	int3   
   14002a98c:	int3   
   14002a98d:	int3   
   14002a98e:	int3   
   14002a98f:	int3   
   14002a990:	mov    r11,rsp
   14002a993:	push   rbx
   14002a994:	sub    rsp,0x80
   14002a99b:	mov    QWORD PTR [r11-0x68],0xfffffffffffffffe
   14002a9a3:	mov    DWORD PTR [r11+0x8],0x0
   14002a9ab:	lea    rbx,[rcx-0x50]
   14002a9af:	lea    rax,[rip+0x12c52]        # 0x14003d608
   14002a9b6:	mov    QWORD PTR [r11-0x20],rax
   14002a9ba:	lea    rax,[rip+0xfe87]        # 0x14003a848
   14002a9c1:	mov    QWORD PTR [r11-0x10],rax
   14002a9c5:	mov    DWORD PTR [r11+0x8],0x1
   14002a9cd:	mov    rdx,rbx
   14002a9d0:	lea    rcx,[r11-0x60]
   14002a9d4:	call   QWORD PTR [rip+0xba6e]        # 0x140036448
   14002a9da:	lea    rax,[rip+0xfea7]        # 0x14003a888
   14002a9e1:	mov    QWORD PTR [rsp+0x28],rax
   14002a9e6:	test   rbx,rbx
   14002a9e9:	je     0x14002a9ef
   14002a9eb:	add    rbx,0x18
   14002a9ef:	lea    rax,[rip+0xfe42]        # 0x14003a838
   14002a9f6:	mov    QWORD PTR [rsp+0x40],rax
   14002a9fb:	mov    rcx,QWORD PTR [rbx+0x8]
   14002a9ff:	mov    QWORD PTR [rsp+0x48],rcx
   14002aa04:	test   rcx,rcx
   14002aa07:	je     0x14002aa0f
   14002aa09:	mov    rax,QWORD PTR [rcx]
   14002aa0c:	call   QWORD PTR [rax+0x18]
   14002aa0f:	mov    rax,QWORD PTR [rbx+0x10]
   14002aa13:	mov    QWORD PTR [rsp+0x50],rax
   14002aa18:	mov    rax,QWORD PTR [rbx+0x18]
   14002aa1c:	mov    QWORD PTR [rsp+0x58],rax
   14002aa21:	mov    eax,DWORD PTR [rbx+0x20]
   14002aa24:	mov    DWORD PTR [rsp+0x60],eax
   14002aa28:	lea    rax,[rip+0x12b99]        # 0x14003d5c8
   14002aa2f:	mov    QWORD PTR [rsp+0x28],rax
   14002aa34:	lea    rax,[rip+0x12ba5]        # 0x14003d5e0
   14002aa3b:	mov    QWORD PTR [rsp+0x40],rax
   14002aa40:	mov    rax,QWORD PTR [rsp+0x68]
   14002aa45:	movsxd rcx,DWORD PTR [rax+0x4]
   14002aa49:	lea    rax,[rip+0x12ba0]        # 0x14003d5f0
   14002aa50:	mov    QWORD PTR [rsp+rcx*1+0x68],rax
   14002aa55:	mov    rax,QWORD PTR [rsp+0x68]
   14002aa5a:	movsxd rcx,DWORD PTR [rax+0x4]
   14002aa5e:	mov    DWORD PTR [rsp+rcx*1+0x64],0x0
   14002aa66:	lea    rdx,[rip+0x25b03]        # 0x140050570
   14002aa6d:	lea    rcx,[rsp+0x28]
   14002aa72:	call   0x140030478
   14002aa77:	int3   
   14002aa78:	movsxd rax,DWORD PTR [rcx-0x4]
   14002aa7c:	sub    rcx,rax
   14002aa7f:	jmp    0x14002aa90
   14002aa84:	int3   
   14002aa85:	int3   
   14002aa86:	int3   
   14002aa87:	int3   
   14002aa88:	int3   
   14002aa89:	int3   
   14002aa8a:	int3   
   14002aa8b:	int3   
   14002aa8c:	int3   
   14002aa8d:	int3   
   14002aa8e:	int3   
   14002aa8f:	int3   
   14002aa90:	mov    r11,rsp
   14002aa93:	push   rbx
   14002aa94:	sub    rsp,0x90
   14002aa9b:	mov    QWORD PTR [r11-0x78],0xfffffffffffffffe
   14002aaa3:	mov    DWORD PTR [r11+0x8],0x0
   14002aaab:	lea    rbx,[rcx-0x60]
   14002aaaf:	lea    rax,[rip+0x12bca]        # 0x14003d680
   14002aab6:	mov    QWORD PTR [r11-0x20],rax
   14002aaba:	lea    rax,[rip+0xfd87]        # 0x14003a848
   14002aac1:	mov    QWORD PTR [r11-0x10],rax
   14002aac5:	mov    DWORD PTR [r11+0x8],0x1
   14002aacd:	mov    rdx,rbx
   14002aad0:	lea    rcx,[r11-0x70]
   14002aad4:	call   QWORD PTR [rip+0xb946]        # 0x140036420
   14002aada:	lea    rax,[rip+0xfddf]        # 0x14003a8c0
   14002aae1:	mov    QWORD PTR [rsp+0x28],rax
   14002aae6:	mov    rax,QWORD PTR [rbx+0x18]
   14002aaea:	mov    QWORD PTR [rsp+0x40],rax
   14002aaef:	mov    rax,QWORD PTR [rbx+0x20]
   14002aaf3:	mov    QWORD PTR [rsp+0x48],rax
   14002aaf8:	lea    rax,[rip+0xfd39]        # 0x14003a838
   14002aaff:	mov    QWORD PTR [rsp+0x50],rax
   14002ab04:	mov    rcx,QWORD PTR [rbx+0x30]
   14002ab08:	mov    QWORD PTR [rsp+0x58],rcx
   14002ab0d:	test   rcx,rcx
   14002ab10:	je     0x14002ab18
   14002ab12:	mov    rax,QWORD PTR [rcx]
   14002ab15:	call   QWORD PTR [rax+0x18]
   14002ab18:	mov    rax,QWORD PTR [rbx+0x38]
   14002ab1c:	mov    QWORD PTR [rsp+0x60],rax
   14002ab21:	mov    rax,QWORD PTR [rbx+0x40]
   14002ab25:	mov    QWORD PTR [rsp+0x68],rax
   14002ab2a:	mov    eax,DWORD PTR [rbx+0x48]
   14002ab2d:	mov    DWORD PTR [rsp+0x70],eax
   14002ab31:	lea    rax,[rip+0x12b08]        # 0x14003d640
   14002ab38:	mov    QWORD PTR [rsp+0x28],rax
   14002ab3d:	lea    rax,[rip+0x12b14]        # 0x14003d658
   14002ab44:	mov    QWORD PTR [rsp+0x50],rax
   14002ab49:	mov    rax,QWORD PTR [rsp+0x78]
   14002ab4e:	movsxd rcx,DWORD PTR [rax+0x4]
   14002ab52:	lea    rax,[rip+0x12b0f]        # 0x14003d668
   14002ab59:	mov    QWORD PTR [rsp+rcx*1+0x78],rax
   14002ab5e:	mov    rax,QWORD PTR [rsp+0x78]
   14002ab63:	movsxd rcx,DWORD PTR [rax+0x4]
   14002ab67:	mov    DWORD PTR [rsp+rcx*1+0x74],0x0
   14002ab6f:	lea    rdx,[rip+0x25ad2]        # 0x140050648
   14002ab76:	lea    rcx,[rsp+0x28]
   14002ab7b:	call   0x140030478
   14002ab80:	int3   
   14002ab81:	int3   
   14002ab82:	int3   
   14002ab83:	int3   
   14002ab84:	movsxd rax,DWORD PTR [rcx-0x4]
   14002ab88:	sub    rcx,rax
   14002ab8b:	jmp    0x14002ab90
   14002ab90:	mov    r11,rsp
   14002ab93:	push   rbx
   14002ab94:	sub    rsp,0x90
   14002ab9b:	mov    QWORD PTR [r11-0x78],0xfffffffffffffffe
   14002aba3:	mov    DWORD PTR [r11+0x8],0x0
   14002abab:	lea    rbx,[rcx-0x60]
   14002abaf:	lea    rax,[rip+0x14d2a]        # 0x14003f8e0
   14002abb6:	mov    QWORD PTR [r11-0x20],rax
   14002abba:	lea    rax,[rip+0xfc87]        # 0x14003a848
   14002abc1:	mov    QWORD PTR [r11-0x10],rax
   14002abc5:	mov    DWORD PTR [r11+0x8],0x1
   14002abcd:	mov    rdx,rbx
   14002abd0:	lea    rcx,[r11-0x70]
   14002abd4:	call   QWORD PTR [rip+0xb86e]        # 0x140036448
   14002abda:	movups xmm0,XMMWORD PTR [rbx+0x18]
   14002abde:	movups XMMWORD PTR [rsp+0x40],xmm0
   14002abe3:	lea    rax,[rip+0xfbee]        # 0x14003a7d8
   14002abea:	mov    QWORD PTR [rsp+0x28],rax
   14002abef:	lea    rax,[rip+0xfc42]        # 0x14003a838
   14002abf6:	mov    QWORD PTR [rsp+0x50],rax
   14002abfb:	mov    rcx,QWORD PTR [rbx+0x30]
   14002abff:	mov    QWORD PTR [rsp+0x58],rcx
   14002ac04:	test   rcx,rcx
   14002ac07:	je     0x14002ac0f
   14002ac09:	mov    rax,QWORD PTR [rcx]
   14002ac0c:	call   QWORD PTR [rax+0x18]
   14002ac0f:	mov    rax,QWORD PTR [rbx+0x38]
   14002ac13:	mov    QWORD PTR [rsp+0x60],rax
   14002ac18:	mov    rax,QWORD PTR [rbx+0x40]
   14002ac1c:	mov    QWORD PTR [rsp+0x68],rax
   14002ac21:	mov    eax,DWORD PTR [rbx+0x48]
   14002ac24:	mov    DWORD PTR [rsp+0x70],eax
   14002ac28:	lea    rax,[rip+0x14c71]        # 0x14003f8a0
   14002ac2f:	mov    QWORD PTR [rsp+0x28],rax
   14002ac34:	lea    rax,[rip+0x14c7d]        # 0x14003f8b8
   14002ac3b:	mov    QWORD PTR [rsp+0x50],rax
   14002ac40:	mov    rax,QWORD PTR [rsp+0x78]
   14002ac45:	movsxd rcx,DWORD PTR [rax+0x4]
   14002ac49:	lea    rax,[rip+0x14c78]        # 0x14003f8c8
   14002ac50:	mov    QWORD PTR [rsp+rcx*1+0x78],rax
   14002ac55:	mov    rax,QWORD PTR [rsp+0x78]
   14002ac5a:	movsxd rcx,DWORD PTR [rax+0x4]
   14002ac5e:	mov    DWORD PTR [rsp+rcx*1+0x74],0x0
   14002ac66:	lea    rdx,[rip+0x25e63]        # 0x140050ad0
   14002ac6d:	lea    rcx,[rsp+0x28]
   14002ac72:	call   0x140030478
   14002ac77:	int3   
   14002ac78:	movsxd rax,DWORD PTR [rcx-0x4]
   14002ac7c:	sub    rcx,rax
   14002ac7f:	jmp    0x14002ac90
   14002ac84:	int3   
   14002ac85:	int3   
   14002ac86:	int3   
   14002ac87:	int3   
   14002ac88:	int3   
   14002ac89:	int3   
   14002ac8a:	int3   
   14002ac8b:	int3   
   14002ac8c:	int3   
   14002ac8d:	int3   
   14002ac8e:	int3   
   14002ac8f:	int3   
   14002ac90:	mov    r11,rsp
   14002ac93:	push   rbx
   14002ac94:	sub    rsp,0x80
   14002ac9b:	mov    QWORD PTR [r11-0x68],0xfffffffffffffffe
   14002aca3:	mov    DWORD PTR [r11+0x8],0x0
   14002acab:	lea    rbx,[rcx-0x50]
   14002acaf:	lea    rax,[rip+0x1233a]        # 0x14003cff0
   14002acb6:	mov    QWORD PTR [r11-0x20],rax
   14002acba:	lea    rax,[rip+0xfb87]        # 0x14003a848
   14002acc1:	mov    QWORD PTR [r11-0x10],rax
   14002acc5:	mov    DWORD PTR [r11+0x8],0x1
   14002accd:	mov    rdx,rbx
   14002acd0:	lea    rcx,[r11-0x60]
   14002acd4:	call   QWORD PTR [rip+0xb76e]        # 0x140036448
   14002acda:	lea    rax,[rip+0xf947]        # 0x14003a628
   14002ace1:	mov    QWORD PTR [rsp+0x28],rax
   14002ace6:	test   rbx,rbx
   14002ace9:	je     0x14002acef
   14002aceb:	add    rbx,0x18
   14002acef:	lea    rax,[rip+0xfb42]        # 0x14003a838
   14002acf6:	mov    QWORD PTR [rsp+0x40],rax
   14002acfb:	mov    rcx,QWORD PTR [rbx+0x8]
   14002acff:	mov    QWORD PTR [rsp+0x48],rcx
   14002ad04:	test   rcx,rcx
   14002ad07:	je     0x14002ad0f
   14002ad09:	mov    rax,QWORD PTR [rcx]
   14002ad0c:	call   QWORD PTR [rax+0x18]
   14002ad0f:	mov    rax,QWORD PTR [rbx+0x10]
   14002ad13:	mov    QWORD PTR [rsp+0x50],rax
   14002ad18:	mov    rax,QWORD PTR [rbx+0x18]
   14002ad1c:	mov    QWORD PTR [rsp+0x58],rax
   14002ad21:	mov    eax,DWORD PTR [rbx+0x20]
   14002ad24:	mov    DWORD PTR [rsp+0x60],eax
   14002ad28:	lea    rax,[rip+0x12281]        # 0x14003cfb0
   14002ad2f:	mov    QWORD PTR [rsp+0x28],rax
   14002ad34:	lea    rax,[rip+0x1228d]        # 0x14003cfc8
   14002ad3b:	mov    QWORD PTR [rsp+0x40],rax
   14002ad40:	mov    rax,QWORD PTR [rsp+0x68]
   14002ad45:	movsxd rcx,DWORD PTR [rax+0x4]
   14002ad49:	lea    rax,[rip+0x12288]        # 0x14003cfd8
   14002ad50:	mov    QWORD PTR [rsp+rcx*1+0x68],rax
   14002ad55:	mov    rax,QWORD PTR [rsp+0x68]
   14002ad5a:	movsxd rcx,DWORD PTR [rax+0x4]
   14002ad5e:	mov    DWORD PTR [rsp+rcx*1+0x64],0x0
   14002ad66:	lea    rdx,[rip+0x25673]        # 0x1400503e0
   14002ad6d:	lea    rcx,[rsp+0x28]
   14002ad72:	call   0x140030478
   14002ad77:	int3   
   14002ad78:	movsxd rax,DWORD PTR [rcx-0x4]
   14002ad7c:	sub    rcx,rax
   14002ad7f:	jmp    0x14002ad90
   14002ad84:	int3   
   14002ad85:	int3   
   14002ad86:	int3   
   14002ad87:	int3   
   14002ad88:	int3   
   14002ad89:	int3   
   14002ad8a:	int3   
   14002ad8b:	int3   
   14002ad8c:	int3   
   14002ad8d:	int3   
   14002ad8e:	int3   
   14002ad8f:	int3   
   14002ad90:	mov    r11,rsp
   14002ad93:	push   rbx
   14002ad94:	sub    rsp,0x80
   14002ad9b:	mov    QWORD PTR [r11-0x68],0xfffffffffffffffe
   14002ada3:	mov    DWORD PTR [r11+0x8],0x0
   14002adab:	lea    rbx,[rcx-0x50]
   14002adaf:	lea    rax,[rip+0x14692]        # 0x14003f448
   14002adb6:	mov    QWORD PTR [r11-0x20],rax
   14002adba:	lea    rax,[rip+0xfa87]        # 0x14003a848
   14002adc1:	mov    QWORD PTR [r11-0x10],rax
   14002adc5:	mov    DWORD PTR [r11+0x8],0x1
   14002adcd:	mov    rdx,rbx
   14002add0:	lea    rcx,[r11-0x60]
   14002add4:	call   QWORD PTR [rip+0xb66e]        # 0x140036448
   14002adda:	lea    rax,[rip+0xf82f]        # 0x14003a610
   14002ade1:	mov    QWORD PTR [rsp+0x28],rax
   14002ade6:	test   rbx,rbx
   14002ade9:	je     0x14002adef
   14002adeb:	add    rbx,0x18
   14002adef:	lea    rax,[rip+0xfa42]        # 0x14003a838
   14002adf6:	mov    QWORD PTR [rsp+0x40],rax
   14002adfb:	mov    rcx,QWORD PTR [rbx+0x8]
   14002adff:	mov    QWORD PTR [rsp+0x48],rcx
   14002ae04:	test   rcx,rcx
   14002ae07:	je     0x14002ae0f
   14002ae09:	mov    rax,QWORD PTR [rcx]
   14002ae0c:	call   QWORD PTR [rax+0x18]
   14002ae0f:	mov    rax,QWORD PTR [rbx+0x10]
   14002ae13:	mov    QWORD PTR [rsp+0x50],rax
   14002ae18:	mov    rax,QWORD PTR [rbx+0x18]
   14002ae1c:	mov    QWORD PTR [rsp+0x58],rax
   14002ae21:	mov    eax,DWORD PTR [rbx+0x20]
   14002ae24:	mov    DWORD PTR [rsp+0x60],eax
   14002ae28:	lea    rax,[rip+0x145d9]        # 0x14003f408
   14002ae2f:	mov    QWORD PTR [rsp+0x28],rax
   14002ae34:	lea    rax,[rip+0x145e5]        # 0x14003f420
   14002ae3b:	mov    QWORD PTR [rsp+0x40],rax
   14002ae40:	mov    rax,QWORD PTR [rsp+0x68]
   14002ae45:	movsxd rcx,DWORD PTR [rax+0x4]
   14002ae49:	lea    rax,[rip+0x145e0]        # 0x14003f430
   14002ae50:	mov    QWORD PTR [rsp+rcx*1+0x68],rax
   14002ae55:	mov    rax,QWORD PTR [rsp+0x68]
   14002ae5a:	movsxd rcx,DWORD PTR [rax+0x4]
   14002ae5e:	mov    DWORD PTR [rsp+rcx*1+0x64],0x0
   14002ae66:	lea    rdx,[rip+0x25a8b]        # 0x1400508f8
   14002ae6d:	lea    rcx,[rsp+0x28]
   14002ae72:	call   0x140030478
   14002ae77:	int3   
   14002ae78:	movsxd rax,DWORD PTR [rcx-0x4]
   14002ae7c:	sub    rcx,rax
   14002ae7f:	jmp    0x14002ae90
   14002ae84:	int3   
   14002ae85:	int3   
   14002ae86:	int3   
   14002ae87:	int3   
   14002ae88:	int3   
   14002ae89:	int3   
   14002ae8a:	int3   
   14002ae8b:	int3   
   14002ae8c:	int3   
   14002ae8d:	int3   
   14002ae8e:	int3   
   14002ae8f:	int3   
   14002ae90:	mov    r11,rsp
   14002ae93:	sub    rsp,0x98
   14002ae9a:	mov    QWORD PTR [r11-0x78],0xfffffffffffffffe
   14002aea2:	mov    DWORD PTR [r11+0x8],0x0
   14002aeaa:	lea    rdx,[rcx-0x58]
   14002aeae:	lea    rax,[rip+0x1463b]        # 0x14003f4f0
   14002aeb5:	mov    QWORD PTR [r11-0x28],rax
   14002aeb9:	lea    rax,[rip+0xf988]        # 0x14003a848
   14002aec0:	mov    QWORD PTR [r11-0x18],rax
   14002aec4:	mov    DWORD PTR [r11+0x8],0x1
   14002aecc:	lea    rcx,[r11-0x70]
   14002aed0:	call   0x1400139b0
   14002aed5:	lea    rax,[rip+0x145d4]        # 0x14003f4b0
   14002aedc:	mov    QWORD PTR [rsp+0x28],rax
   14002aee1:	lea    rax,[rip+0x145e0]        # 0x14003f4c8
   14002aee8:	mov    QWORD PTR [rsp+0x48],rax
   14002aeed:	mov    rax,QWORD PTR [rsp+0x70]
   14002aef2:	movsxd rcx,DWORD PTR [rax+0x4]
   14002aef6:	lea    rax,[rip+0x145db]        # 0x14003f4d8
   14002aefd:	mov    QWORD PTR [rsp+rcx*1+0x70],rax
   14002af02:	mov    rax,QWORD PTR [rsp+0x70]
   14002af07:	movsxd rcx,DWORD PTR [rax+0x4]
   14002af0b:	mov    DWORD PTR [rsp+rcx*1+0x6c],0x0
   14002af13:	lea    rdx,[rip+0x25a86]        # 0x1400509a0
   14002af1a:	lea    rcx,[rsp+0x28]
   14002af1f:	call   0x140030478
   14002af24:	int3   
   14002af25:	int3   
   14002af26:	int3   
   14002af27:	int3   
   14002af28:	movsxd rax,DWORD PTR [rcx-0x4]
   14002af2c:	sub    rcx,rax
   14002af2f:	jmp    0x14002af40
   14002af34:	int3   
   14002af35:	int3   
   14002af36:	int3   
   14002af37:	int3   
   14002af38:	int3   
   14002af39:	int3   
   14002af3a:	int3   
   14002af3b:	int3   
   14002af3c:	int3   
   14002af3d:	int3   
   14002af3e:	int3   
   14002af3f:	int3   
   14002af40:	mov    r11,rsp
   14002af43:	sub    rsp,0x98
   14002af4a:	mov    QWORD PTR [r11-0x78],0xfffffffffffffffe
   14002af52:	mov    DWORD PTR [r11+0x8],0x0
   14002af5a:	lea    rdx,[rcx-0x58]
   14002af5e:	lea    rax,[rip+0x149f3]        # 0x14003f958
   14002af65:	mov    QWORD PTR [r11-0x28],rax
   14002af69:	lea    rax,[rip+0xf8d8]        # 0x14003a848
   14002af70:	mov    QWORD PTR [r11-0x18],rax
   14002af74:	mov    DWORD PTR [r11+0x8],0x1
   14002af7c:	lea    rcx,[r11-0x70]
   14002af80:	call   0x140013af0
   14002af85:	lea    rax,[rip+0x1498c]        # 0x14003f918
   14002af8c:	mov    QWORD PTR [rsp+0x28],rax
   14002af91:	lea    rax,[rip+0x14998]        # 0x14003f930
   14002af98:	mov    QWORD PTR [rsp+0x48],rax
   14002af9d:	mov    rax,QWORD PTR [rsp+0x70]
   14002afa2:	movsxd rcx,DWORD PTR [rax+0x4]
   14002afa6:	lea    rax,[rip+0x14993]        # 0x14003f940
   14002afad:	mov    QWORD PTR [rsp+rcx*1+0x70],rax
   14002afb2:	mov    rax,QWORD PTR [rsp+0x70]
   14002afb7:	movsxd rcx,DWORD PTR [rax+0x4]
   14002afbb:	mov    DWORD PTR [rsp+rcx*1+0x6c],0x0
   14002afc3:	lea    rdx,[rip+0x25bc6]        # 0x140050b90
   14002afca:	lea    rcx,[rsp+0x28]
   14002afcf:	call   0x140030478
   14002afd4:	int3   
   14002afd5:	int3   
   14002afd6:	int3   
   14002afd7:	int3   
   14002afd8:	movsxd rax,DWORD PTR [rcx-0x4]
   14002afdc:	sub    rcx,rax
   14002afdf:	jmp    0x14002aff0
   14002afe4:	int3   
   14002afe5:	int3   
   14002afe6:	int3   
   14002afe7:	int3   
   14002afe8:	int3   
   14002afe9:	int3   
   14002afea:	int3   
   14002afeb:	int3   
   14002afec:	int3   
   14002afed:	int3   
   14002afee:	int3   
   14002afef:	int3   
   14002aff0:	mov    r11,rsp
   14002aff3:	push   rbx
   14002aff4:	sub    rsp,0x80
   14002affb:	mov    QWORD PTR [r11-0x68],0xfffffffffffffffe
   14002b003:	mov    DWORD PTR [r11+0x8],0x0
   14002b00b:	lea    rbx,[rcx-0x50]
   14002b00f:	lea    rax,[rip+0x11a2a]        # 0x14003ca40
   14002b016:	mov    QWORD PTR [r11-0x20],rax
   14002b01a:	lea    rax,[rip+0xf827]        # 0x14003a848
   14002b021:	mov    QWORD PTR [r11-0x10],rax
   14002b025:	mov    DWORD PTR [r11+0x8],0x1
   14002b02d:	mov    rdx,rbx
   14002b030:	lea    rcx,[r11-0x60]
   14002b034:	call   QWORD PTR [rip+0xb40e]        # 0x140036448
   14002b03a:	lea    rax,[rip+0xf617]        # 0x14003a658
   14002b041:	mov    QWORD PTR [rsp+0x28],rax
   14002b046:	test   rbx,rbx
   14002b049:	je     0x14002b04f
   14002b04b:	add    rbx,0x18
   14002b04f:	lea    rax,[rip+0xf7e2]        # 0x14003a838
   14002b056:	mov    QWORD PTR [rsp+0x40],rax
   14002b05b:	mov    rcx,QWORD PTR [rbx+0x8]
   14002b05f:	mov    QWORD PTR [rsp+0x48],rcx
   14002b064:	test   rcx,rcx
   14002b067:	je     0x14002b06f
   14002b069:	mov    rax,QWORD PTR [rcx]
   14002b06c:	call   QWORD PTR [rax+0x18]
   14002b06f:	mov    rax,QWORD PTR [rbx+0x10]
   14002b073:	mov    QWORD PTR [rsp+0x50],rax
   14002b078:	mov    rax,QWORD PTR [rbx+0x18]
   14002b07c:	mov    QWORD PTR [rsp+0x58],rax
   14002b081:	mov    eax,DWORD PTR [rbx+0x20]
   14002b084:	mov    DWORD PTR [rsp+0x60],eax
   14002b088:	lea    rax,[rip+0x11971]        # 0x14003ca00
   14002b08f:	mov    QWORD PTR [rsp+0x28],rax
   14002b094:	lea    rax,[rip+0x1197d]        # 0x14003ca18
   14002b09b:	mov    QWORD PTR [rsp+0x40],rax
   14002b0a0:	mov    rax,QWORD PTR [rsp+0x68]
   14002b0a5:	movsxd rcx,DWORD PTR [rax+0x4]
   14002b0a9:	lea    rax,[rip+0x11978]        # 0x14003ca28
   14002b0b0:	mov    QWORD PTR [rsp+rcx*1+0x68],rax
   14002b0b5:	mov    rax,QWORD PTR [rsp+0x68]
   14002b0ba:	movsxd rcx,DWORD PTR [rax+0x4]
   14002b0be:	mov    DWORD PTR [rsp+rcx*1+0x64],0x0
   14002b0c6:	lea    rdx,[rip+0x2526b]        # 0x140050338
   14002b0cd:	lea    rcx,[rsp+0x28]
   14002b0d2:	call   0x140030478
   14002b0d7:	int3   
   14002b0d8:	movsxd rax,DWORD PTR [rcx-0x4]
   14002b0dc:	sub    rcx,rax
   14002b0df:	jmp    0x14002b0f0
   14002b0e4:	int3   
   14002b0e5:	int3   
   14002b0e6:	int3   
   14002b0e7:	int3   
   14002b0e8:	int3   
   14002b0e9:	int3   
   14002b0ea:	int3   
   14002b0eb:	int3   
   14002b0ec:	int3   
   14002b0ed:	int3   
   14002b0ee:	int3   
   14002b0ef:	int3   
   14002b0f0:	mov    rax,rsp
   14002b0f3:	push   rbp
   14002b0f4:	lea    rbp,[rax-0x5f]
   14002b0f8:	sub    rsp,0xd0
   14002b0ff:	mov    QWORD PTR [rbp+0x47],0xfffffffffffffffe
   14002b107:	mov    QWORD PTR [rax+0x10],rbx
   14002b10b:	mov    QWORD PTR [rax+0x18],rdi
   14002b10f:	xor    edi,edi
   14002b111:	mov    DWORD PTR [rbp+0x67],edi
   14002b114:	lea    rbx,[rcx-0x98]
   14002b11b:	lea    rax,[rip+0x135ce]        # 0x14003e6f0
   14002b122:	mov    QWORD PTR [rbp+0x2f],rax
   14002b126:	lea    rax,[rip+0xf71b]        # 0x14003a848
   14002b12d:	mov    QWORD PTR [rbp+0x3f],rax
   14002b131:	mov    DWORD PTR [rbp+0x67],0x1
   14002b138:	mov    rdx,rbx
   14002b13b:	lea    rcx,[rbp-0x59]
   14002b13f:	call   QWORD PTR [rip+0xb303]        # 0x140036448
   14002b145:	nop
   14002b146:	lea    rax,[rip+0xf873]        # 0x14003a9c0
   14002b14d:	mov    QWORD PTR [rbp-0x59],rax
   14002b151:	mov    QWORD PTR [rbp-0x29],0xf
   14002b159:	mov    QWORD PTR [rbp-0x31],rdi
   14002b15d:	mov    BYTE PTR [rbp-0x41],dil
   14002b161:	lea    rdx,[rbx+0x18]
   14002b165:	or     r9,0xffffffffffffffff
   14002b169:	xor    r8d,r8d
   14002b16c:	lea    rcx,[rbp-0x41]
   14002b170:	call   0x14001ef20
   14002b175:	nop
   14002b176:	mov    QWORD PTR [rbp-0x9],0xf
   14002b17e:	mov    QWORD PTR [rbp-0x11],rdi
   14002b182:	mov    BYTE PTR [rbp-0x21],dil
   14002b186:	lea    rdx,[rbx+0x38]
   14002b18a:	or     r9,0xffffffffffffffff
   14002b18e:	xor    r8d,r8d
   14002b191:	lea    rcx,[rbp-0x21]
   14002b195:	call   0x14001ef20
   14002b19a:	mov    eax,DWORD PTR [rbx+0x58]
   14002b19d:	mov    DWORD PTR [rbp-0x1],eax
   14002b1a0:	lea    rax,[rip+0xf8e9]        # 0x14003aa90
   14002b1a7:	mov    QWORD PTR [rbp-0x59],rax
   14002b1ab:	lea    rax,[rip+0xf686]        # 0x14003a838
   14002b1b2:	mov    QWORD PTR [rbp+0x7],rax
   14002b1b6:	mov    rcx,QWORD PTR [rbx+0x68]
   14002b1ba:	mov    QWORD PTR [rbp+0xf],rcx
   14002b1be:	test   rcx,rcx
   14002b1c1:	je     0x14002b1c9
   14002b1c3:	mov    rax,QWORD PTR [rcx]
   14002b1c6:	call   QWORD PTR [rax+0x18]
   14002b1c9:	mov    rax,QWORD PTR [rbx+0x70]
   14002b1cd:	mov    QWORD PTR [rbp+0x17],rax
   14002b1d1:	mov    rax,QWORD PTR [rbx+0x78]
   14002b1d5:	mov    QWORD PTR [rbp+0x1f],rax
   14002b1d9:	mov    eax,DWORD PTR [rbx+0x80]
   14002b1df:	mov    DWORD PTR [rbp+0x27],eax
   14002b1e2:	lea    rax,[rip+0x134c7]        # 0x14003e6b0
   14002b1e9:	mov    QWORD PTR [rbp-0x59],rax
   14002b1ed:	lea    rax,[rip+0x134d4]        # 0x14003e6c8
   14002b1f4:	mov    QWORD PTR [rbp+0x7],rax
   14002b1f8:	mov    rax,QWORD PTR [rbp+0x2f]
   14002b1fc:	movsxd rcx,DWORD PTR [rax+0x4]
   14002b200:	lea    rax,[rip+0x134d1]        # 0x14003e6d8
   14002b207:	mov    QWORD PTR [rbp+rcx*1+0x2f],rax
   14002b20c:	mov    rax,QWORD PTR [rbp+0x2f]
   14002b210:	movsxd rcx,DWORD PTR [rax+0x4]
   14002b214:	mov    DWORD PTR [rbp+rcx*1+0x2b],edi
   14002b218:	lea    rdx,[rip+0x25551]        # 0x140050770
   14002b21f:	lea    rcx,[rbp-0x59]
   14002b223:	call   0x140030478
   14002b228:	int3   
   14002b229:	int3   
   14002b22a:	int3   
   14002b22b:	int3   
   14002b22c:	int3   
   14002b22d:	int3   
   14002b22e:	int3   
   14002b22f:	int3   
   14002b230:	lea    rax,[rcx+0x58]
   14002b234:	ret    
   14002b235:	int3   
   14002b236:	int3   
   14002b237:	int3   
   14002b238:	int3   
   14002b239:	int3   
   14002b23a:	int3   
   14002b23b:	int3   
   14002b23c:	int3   
   14002b23d:	int3   
   14002b23e:	int3   
   14002b23f:	int3   
   14002b240:	lea    rax,[rcx+0x10]
   14002b244:	ret    
   14002b245:	int3   
   14002b246:	int3   
   14002b247:	int3   
   14002b248:	int3   
   14002b249:	int3   
   14002b24a:	int3   
   14002b24b:	int3   
   14002b24c:	int3   
   14002b24d:	int3   
   14002b24e:	int3   
   14002b24f:	int3   
   14002b250:	test   rcx,rcx
   14002b253:	je     0x14002b25b
   14002b255:	lea    rax,[rcx-0x11]
   14002b259:	jmp    0x14002b25d
   14002b25b:	xor    eax,eax
   14002b25d:	mov    rax,QWORD PTR [rax+0x8]
   14002b261:	mov    rax,QWORD PTR [rax+0x58]
   14002b265:	test   rax,rax
   14002b268:	je     0x14002b26f
   14002b26a:	add    rax,0xffffffffffffffb8
   14002b26e:	ret    
   14002b26f:	ret    
   14002b270:	test   rcx,rcx
   14002b273:	je     0x14002b27b
   14002b275:	lea    rax,[rcx-0x11]
   14002b279:	jmp    0x14002b27d
   14002b27b:	xor    eax,eax
   14002b27d:	mov    rax,QWORD PTR [rax+0x8]
   14002b281:	mov    rax,QWORD PTR [rax+0x48]
   14002b285:	and    rax,0xfffffffffffffffe
   14002b289:	je     0x14002b290
   14002b28b:	add    rax,0xffffffffffffffb8
   14002b28f:	ret    
   14002b290:	xor    eax,eax
   14002b292:	ret    
   14002b293:	int3   
   14002b294:	int3   
   14002b295:	int3   
   14002b296:	int3   
   14002b297:	int3   
   14002b298:	int3   
   14002b299:	int3   
   14002b29a:	int3   
   14002b29b:	int3   
   14002b29c:	int3   
   14002b29d:	int3   
   14002b29e:	int3   
   14002b29f:	int3   
   14002b2a0:	mov    r8,QWORD PTR [rcx+0x10]
   14002b2a4:	mov    QWORD PTR [rsp+0x10],rdx
   14002b2a9:	mov    rdx,rcx
   14002b2ac:	mov    rax,QWORD PTR [r8+0x8]
   14002b2b0:	mov    QWORD PTR [rcx+0x10],rax
   14002b2b4:	mov    rax,QWORD PTR [r8+0x8]
   14002b2b8:	test   rax,rax
   14002b2bb:	je     0x14002b2c4
   14002b2bd:	and    QWORD PTR [rax],0x1
   14002b2c1:	or     QWORD PTR [rax],rcx
   14002b2c4:	mov    eax,DWORD PTR [r8]
   14002b2c7:	xor    eax,DWORD PTR [rcx]
   14002b2c9:	and    eax,0x1
   14002b2cc:	xor    rax,QWORD PTR [rcx]
   14002b2cf:	mov    QWORD PTR [r8],rax
   14002b2d2:	mov    rax,QWORD PTR [rsp+0x10]
   14002b2d7:	mov    r9,QWORD PTR [rax]
   14002b2da:	mov    rcx,r9
   14002b2dd:	and    rcx,0xfffffffffffffffe
   14002b2e1:	cmp    rdx,rcx
   14002b2e4:	jne    0x14002b2fc
   14002b2e6:	and    r9d,0x1
   14002b2ea:	or     r9,r8
   14002b2ed:	mov    QWORD PTR [rax],r9
   14002b2f0:	mov    QWORD PTR [r8+0x8],rdx
   14002b2f4:	and    QWORD PTR [rdx],0x1
   14002b2f8:	or     QWORD PTR [rdx],r8
   14002b2fb:	ret    
   14002b2fc:	mov    rax,QWORD PTR [rdx]
   14002b2ff:	and    rax,0xfffffffffffffffe
   14002b303:	cmp    rdx,QWORD PTR [rax+0x8]
   14002b307:	jne    0x14002b319
   14002b309:	mov    QWORD PTR [rax+0x8],r8
   14002b30d:	mov    QWORD PTR [r8+0x8],rdx
   14002b311:	and    QWORD PTR [rdx],0x1
   14002b315:	or     QWORD PTR [rdx],r8
   14002b318:	ret    
   14002b319:	mov    QWORD PTR [rax+0x10],r8
   14002b31d:	mov    QWORD PTR [r8+0x8],rdx
   14002b321:	and    QWORD PTR [rdx],0x1
   14002b325:	or     QWORD PTR [rdx],r8
   14002b328:	ret    
   14002b329:	int3   
   14002b32a:	int3   
   14002b32b:	int3   
   14002b32c:	int3   
   14002b32d:	int3   
   14002b32e:	int3   
   14002b32f:	int3   
   14002b330:	mov    r8,QWORD PTR [rcx+0x8]
   14002b334:	mov    QWORD PTR [rsp+0x10],rdx
   14002b339:	mov    rdx,rcx
   14002b33c:	mov    rax,QWORD PTR [r8+0x10]
   14002b340:	mov    QWORD PTR [rcx+0x8],rax
   14002b344:	mov    rax,QWORD PTR [r8+0x10]
   14002b348:	test   rax,rax
   14002b34b:	je     0x14002b354
   14002b34d:	and    QWORD PTR [rax],0x1
   14002b351:	or     QWORD PTR [rax],rcx
   14002b354:	mov    eax,DWORD PTR [r8]
   14002b357:	xor    eax,DWORD PTR [rcx]
   14002b359:	and    eax,0x1
   14002b35c:	xor    rax,QWORD PTR [rcx]
   14002b35f:	mov    QWORD PTR [r8],rax
   14002b362:	mov    rax,QWORD PTR [rsp+0x10]
   14002b367:	mov    r9,QWORD PTR [rax]
   14002b36a:	mov    rcx,r9
   14002b36d:	and    rcx,0xfffffffffffffffe
   14002b371:	cmp    rdx,rcx
   14002b374:	jne    0x14002b38c
   14002b376:	and    r9d,0x1
   14002b37a:	or     r9,r8
   14002b37d:	mov    QWORD PTR [rax],r9
   14002b380:	mov    QWORD PTR [r8+0x10],rdx
   14002b384:	and    QWORD PTR [rdx],0x1
   14002b388:	or     QWORD PTR [rdx],r8
   14002b38b:	ret    
   14002b38c:	mov    rax,QWORD PTR [rdx]
   14002b38f:	and    rax,0xfffffffffffffffe
   14002b393:	cmp    rdx,QWORD PTR [rax+0x10]
   14002b397:	jne    0x14002b3a9
   14002b399:	mov    QWORD PTR [rax+0x10],r8
   14002b39d:	mov    QWORD PTR [r8+0x10],rdx
   14002b3a1:	and    QWORD PTR [rdx],0x1
   14002b3a5:	or     QWORD PTR [rdx],r8
   14002b3a8:	ret    
   14002b3a9:	mov    QWORD PTR [rax+0x8],r8
   14002b3ad:	mov    QWORD PTR [r8+0x10],rdx
   14002b3b1:	and    QWORD PTR [rdx],0x1
   14002b3b5:	or     QWORD PTR [rdx],r8
   14002b3b8:	ret    
   14002b3b9:	int3   
   14002b3ba:	int3   
   14002b3bb:	int3   
   14002b3bc:	int3   
   14002b3bd:	int3   
   14002b3be:	int3   
   14002b3bf:	int3   
   14002b3c0:	mov    rax,rsp
   14002b3c3:	push   rdi
   14002b3c4:	push   r14
   14002b3c6:	push   r15
   14002b3c8:	sub    rsp,0x70
   14002b3cc:	mov    QWORD PTR [rax-0x60],0xfffffffffffffffe
   14002b3d4:	mov    QWORD PTR [rax+0x10],rbx
   14002b3d8:	mov    QWORD PTR [rax+0x18],rbp
   14002b3dc:	mov    QWORD PTR [rax+0x20],rsi
   14002b3e0:	mov    rdi,rdx
   14002b3e3:	mov    rbx,rcx
   14002b3e6:	xor    r15d,r15d
   14002b3e9:	mov    DWORD PTR [rsp+0x20],r15d
   14002b3ee:	call   QWORD PTR [rip+0xb28c]        # 0x140036680
   14002b3f4:	mov    ebp,eax
   14002b3f6:	mov    r14,QWORD PTR [rbx+0x80]
   14002b3fd:	xorps  xmm0,xmm0
   14002b400:	movdqu XMMWORD PTR [rsp+0x48],xmm0
   14002b406:	mov    QWORD PTR [rsp+0x58],r15
   14002b40b:	mov    QWORD PTR [rsp+0x60],r14
   14002b410:	mov    DWORD PTR [rsp+0x68],eax
   14002b414:	lea    rdx,[rsp+0x30]
   14002b419:	mov    rcx,rbx
   14002b41c:	call   QWORD PTR [rip+0xb26e]        # 0x140036690
   14002b422:	nop
   14002b423:	lea    rcx,[rsp+0x48]
   14002b428:	cmp    rcx,rax
   14002b42b:	je     0x14002b454
   14002b42d:	mov    rbx,QWORD PTR [rax]
   14002b430:	mov    QWORD PTR [rsp+0x48],rbx
   14002b435:	mov    rsi,QWORD PTR [rax+0x8]
   14002b439:	mov    QWORD PTR [rsp+0x50],rsi
   14002b43e:	mov    rcx,QWORD PTR [rax+0x10]
   14002b442:	mov    QWORD PTR [rsp+0x58],rcx
   14002b447:	mov    QWORD PTR [rax],r15
   14002b44a:	mov    QWORD PTR [rax+0x8],r15
   14002b44e:	mov    QWORD PTR [rax+0x10],r15
   14002b452:	jmp    0x14002b45e
   14002b454:	mov    rsi,QWORD PTR [rsp+0x50]
   14002b459:	mov    rbx,QWORD PTR [rsp+0x48]
   14002b45e:	mov    rcx,QWORD PTR [rsp+0x30]
   14002b463:	test   rcx,rcx
   14002b466:	je     0x14002b48d
   14002b468:	movzx  r9d,BYTE PTR [rsp+0x90]
   14002b471:	lea    r8,[rsp+0x90]
   14002b479:	mov    rdx,QWORD PTR [rsp+0x38]
   14002b47e:	call   0x1400042e0
   14002b483:	mov    rcx,QWORD PTR [rsp+0x30]
   14002b488:	call   0x140030282
   14002b48d:	lea    rdx,[rsp+0x48]
   14002b492:	mov    rcx,rdi
   14002b495:	call   0x140015650
   14002b49a:	mov    QWORD PTR [rdi+0x18],r14
   14002b49e:	mov    DWORD PTR [rdi+0x20],ebp
   14002b4a1:	test   rbx,rbx
   14002b4a4:	je     0x14002b4ca
   14002b4a6:	movzx  r9d,BYTE PTR [rsp+0x90]
   14002b4af:	lea    r8,[rsp+0x90]
   14002b4b7:	mov    rdx,rsi
   14002b4ba:	mov    rcx,rbx
   14002b4bd:	call   0x1400042e0
   14002b4c2:	mov    rcx,rbx
   14002b4c5:	call   0x140030282
   14002b4ca:	mov    rax,rdi
   14002b4cd:	lea    r11,[rsp+0x70]
   14002b4d2:	mov    rbx,QWORD PTR [r11+0x28]
   14002b4d6:	mov    rbp,QWORD PTR [r11+0x30]
   14002b4da:	mov    rsi,QWORD PTR [r11+0x38]
   14002b4de:	mov    rsp,r11
   14002b4e1:	pop    r15
   14002b4e3:	pop    r14
   14002b4e5:	pop    rdi
   14002b4e6:	ret    
   14002b4e7:	int3   
   14002b4e8:	int3   
   14002b4e9:	int3   
   14002b4ea:	int3   
   14002b4eb:	int3   
   14002b4ec:	int3   
   14002b4ed:	int3   
   14002b4ee:	int3   
   14002b4ef:	int3   
   14002b4f0:	mov    rax,rcx
   14002b4f3:	ret    
   14002b4f4:	int3   
   14002b4f5:	int3   
   14002b4f6:	int3   
   14002b4f7:	int3   
   14002b4f8:	int3   
   14002b4f9:	int3   
   14002b4fa:	int3   
   14002b4fb:	int3   
   14002b4fc:	int3   
   14002b4fd:	int3   
   14002b4fe:	int3   
   14002b4ff:	int3   
   14002b500:	mov    eax,DWORD PTR [rdx]
   14002b502:	mov    QWORD PTR [rcx+0x9c0],0x1
   14002b50d:	mov    DWORD PTR [rcx],eax
   14002b50f:	nop
   14002b510:	mov    rax,QWORD PTR [rcx+0x9c0]
   14002b517:	mov    edx,DWORD PTR [rcx+rax*4-0x4]
   14002b51b:	lea    r8,[rcx+rax*4]
   14002b51f:	shr    edx,0x1e
   14002b522:	xor    edx,DWORD PTR [r8-0x4]
   14002b526:	imul   eax,edx,0x6c078965
   14002b52c:	add    eax,DWORD PTR [rcx+0x9c0]
   14002b532:	mov    DWORD PTR [r8],eax
   14002b535:	inc    QWORD PTR [rcx+0x9c0]
   14002b53c:	cmp    QWORD PTR [rcx+0x9c0],0x270
   14002b547:	jb     0x14002b510
   14002b549:	mov    eax,DWORD PTR [rcx+0x9bc]
   14002b54f:	xor    eax,DWORD PTR [rcx+0x630]
   14002b555:	jns    0x14002b563
   14002b557:	xor    eax,0x1908b0df
   14002b55c:	add    eax,eax
   14002b55e:	or     eax,0x1
   14002b561:	jmp    0x14002b565
   14002b563:	add    eax,eax
   14002b565:	and    DWORD PTR [rcx],0x80000000
   14002b56b:	btr    eax,0x1f
   14002b56f:	or     DWORD PTR [rcx],eax
   14002b571:	xor    eax,eax
   14002b573:	cmp    DWORD PTR [rcx+rax*4],0x0
   14002b577:	jne    0x14002b58a
   14002b579:	inc    rax
   14002b57c:	cmp    rax,0x270
   14002b582:	jb     0x14002b573
   14002b584:	mov    DWORD PTR [rcx],0x80000000
   14002b58a:	ret    
   14002b58b:	int3   
   14002b58c:	int3   
   14002b58d:	int3   
   14002b58e:	int3   
   14002b58f:	int3   
   14002b590:	lea    rdx,[rip+0x11379]        # 0x14003c910
   14002b597:	jmp    0x14002b500
   14002b59c:	int3   
   14002b59d:	int3   
   14002b59e:	int3   
   14002b59f:	int3   
   14002b5a0:	mov    QWORD PTR [rsp+0x10],rbx
   14002b5a5:	mov    QWORD PTR [rsp+0x18],rbp
   14002b5aa:	push   rsi
   14002b5ab:	push   rdi
   14002b5ac:	push   r14
   14002b5ae:	sub    rsp,0x60
   14002b5b2:	mov    rax,QWORD PTR [rcx+0x38]
   14002b5b6:	mov    ebp,DWORD PTR [rsp+0xa0]
   14002b5bd:	mov    rdi,r8
   14002b5c0:	mov    r8,QWORD PTR [rax]
   14002b5c3:	mov    esi,r9d
   14002b5c6:	mov    r14,rdx
   14002b5c9:	mov    rbx,rcx
   14002b5cc:	test   r8,r8
   14002b5cf:	je     0x14002b634
   14002b5d1:	cmp    r9d,0x1
   14002b5d5:	jne    0x14002b634
   14002b5d7:	cmp    ebp,r9d
   14002b5da:	jne    0x14002b634
   14002b5dc:	mov    rax,QWORD PTR [rcx+0x18]
   14002b5e0:	mov    rcx,QWORD PTR [rax]
   14002b5e3:	sub    rcx,r8
   14002b5e6:	cmp    rcx,rdi
   14002b5e9:	jg     0x14002b634
   14002b5eb:	mov    rdx,QWORD PTR [rbx+0x50]
   14002b5ef:	movsxd rcx,DWORD PTR [rdx]
   14002b5f2:	cmp    rdi,rcx
   14002b5f5:	jg     0x14002b634
   14002b5f7:	sub    ecx,edi
   14002b5f9:	movsxd rax,edi
   14002b5fc:	mov    DWORD PTR [rdx],ecx
   14002b5fe:	mov    rcx,QWORD PTR [rbx+0x38]
   14002b602:	lea    rdx,[rbx+0x70]
   14002b606:	add    QWORD PTR [rcx],rax
   14002b609:	movzx  eax,BYTE PTR [rsp+0x80]
   14002b611:	mov    r8,QWORD PTR [rbx+0x88]
   14002b618:	mov    BYTE PTR [rsp+0x30],al
   14002b61c:	mov    DWORD PTR [rsp+0x28],r9d
   14002b621:	mov    DWORD PTR [rsp+0x20],r9d
   14002b626:	lea    rcx,[rsp+0x40]
   14002b62b:	xor    r9d,r9d
   14002b62e:	call   0x14000d570
   14002b633:	int3   
   14002b634:	mov    rax,QWORD PTR [rbx+0x40]
   14002b638:	cmp    QWORD PTR [rax],0x0
   14002b63c:	je     0x14002b647
   14002b63e:	mov    rcx,rbx
   14002b641:	call   QWORD PTR [rip+0xab91]        # 0x1400361d8
   14002b647:	cmp    esi,0x1
   14002b64a:	jne    0x14002b660
   14002b64c:	mov    rax,QWORD PTR [rbx+0x38]
   14002b650:	cmp    QWORD PTR [rax],0x0
   14002b654:	je     0x14002b660
   14002b656:	mov    rax,QWORD PTR [rbx+0x50]
   14002b65a:	movsxd rcx,DWORD PTR [rax]
   14002b65d:	sub    rdi,rcx
   14002b660:	mov    rax,QWORD PTR [rbx+0x18]
   14002b664:	xor    ecx,ecx
   14002b666:	lea    rdx,[rbx+0x70]
   14002b66a:	mov    QWORD PTR [rax],rcx
   14002b66d:	mov    rax,QWORD PTR [rbx+0x38]
   14002b671:	mov    r9,rdi
   14002b674:	mov    QWORD PTR [rax],rcx
   14002b677:	mov    rax,QWORD PTR [rbx+0x50]
   14002b67b:	mov    DWORD PTR [rax],ecx
   14002b67d:	mov    rax,QWORD PTR [rbx+0x20]
   14002b681:	mov    QWORD PTR [rax],rcx
   14002b684:	mov    rax,QWORD PTR [rbx+0x40]
   14002b688:	mov    QWORD PTR [rax],rcx
   14002b68b:	mov    rax,QWORD PTR [rbx+0x58]
   14002b68f:	mov    DWORD PTR [rax],ecx
   14002b691:	movzx  eax,BYTE PTR [rsp+0x80]
   14002b699:	mov    r8,QWORD PTR [rbx+0x88]
   14002b6a0:	mov    BYTE PTR [rsp+0x30],al
   14002b6a4:	mov    rcx,r14
   14002b6a7:	mov    DWORD PTR [rsp+0x28],ebp
   14002b6ab:	mov    DWORD PTR [rsp+0x20],esi
   14002b6af:	call   0x14000d570
   14002b6b4:	int3   
   14002b6b5:	int3   
   14002b6b6:	int3   
   14002b6b7:	int3   
   14002b6b8:	int3   
   14002b6b9:	int3   
   14002b6ba:	int3   
   14002b6bb:	int3   
   14002b6bc:	int3   
   14002b6bd:	int3   
   14002b6be:	int3   
   14002b6bf:	int3   
   14002b6c0:	mov    QWORD PTR [rsp+0x10],rbx
   14002b6c5:	mov    QWORD PTR [rsp+0x18],rbp
   14002b6ca:	push   rsi
   14002b6cb:	push   rdi
   14002b6cc:	push   r14
   14002b6ce:	sub    rsp,0x60
   14002b6d2:	mov    rax,QWORD PTR [rcx+0x38]
   14002b6d6:	mov    ebp,DWORD PTR [rsp+0xa0]
   14002b6dd:	mov    rdi,r8
   14002b6e0:	mov    r8,QWORD PTR [rax]
   14002b6e3:	mov    esi,r9d
   14002b6e6:	mov    r14,rdx
   14002b6e9:	mov    rbx,rcx
   14002b6ec:	test   r8,r8
   14002b6ef:	je     0x14002b754
   14002b6f1:	cmp    r9d,0x1
   14002b6f5:	jne    0x14002b754
   14002b6f7:	cmp    ebp,r9d
   14002b6fa:	jne    0x14002b754
   14002b6fc:	mov    rax,QWORD PTR [rcx+0x18]
   14002b700:	mov    rcx,QWORD PTR [rax]
   14002b703:	sub    rcx,r8
   14002b706:	cmp    rcx,rdi
   14002b709:	jg     0x14002b754
   14002b70b:	mov    rdx,QWORD PTR [rbx+0x50]
   14002b70f:	movsxd rcx,DWORD PTR [rdx]
   14002b712:	cmp    rdi,rcx
   14002b715:	jg     0x14002b754
   14002b717:	sub    ecx,edi
   14002b719:	movsxd rax,edi
   14002b71c:	mov    DWORD PTR [rdx],ecx
   14002b71e:	mov    rcx,QWORD PTR [rbx+0x38]
   14002b722:	lea    rdx,[rbx+0x70]
   14002b726:	add    QWORD PTR [rcx],rax
   14002b729:	movzx  eax,BYTE PTR [rsp+0x80]
   14002b731:	mov    r8,QWORD PTR [rbx+0x88]
   14002b738:	mov    BYTE PTR [rsp+0x30],al
   14002b73c:	mov    DWORD PTR [rsp+0x28],r9d
   14002b741:	mov    DWORD PTR [rsp+0x20],r9d
   14002b746:	lea    rcx,[rsp+0x40]
   14002b74b:	xor    r9d,r9d
   14002b74e:	call   0x14000d5d0
   14002b753:	int3   
   14002b754:	mov    rax,QWORD PTR [rbx+0x40]
   14002b758:	cmp    QWORD PTR [rax],0x0
   14002b75c:	je     0x14002b767
   14002b75e:	mov    rcx,rbx
   14002b761:	call   QWORD PTR [rip+0xaa71]        # 0x1400361d8
   14002b767:	cmp    esi,0x1
   14002b76a:	jne    0x14002b780
   14002b76c:	mov    rax,QWORD PTR [rbx+0x38]
   14002b770:	cmp    QWORD PTR [rax],0x0
   14002b774:	je     0x14002b780
   14002b776:	mov    rax,QWORD PTR [rbx+0x50]
   14002b77a:	movsxd rcx,DWORD PTR [rax]
   14002b77d:	sub    rdi,rcx
   14002b780:	mov    rax,QWORD PTR [rbx+0x18]
   14002b784:	xor    ecx,ecx
   14002b786:	lea    rdx,[rbx+0x70]
   14002b78a:	mov    QWORD PTR [rax],rcx
   14002b78d:	mov    rax,QWORD PTR [rbx+0x38]
   14002b791:	mov    r9,rdi
   14002b794:	mov    QWORD PTR [rax],rcx
   14002b797:	mov    rax,QWORD PTR [rbx+0x50]
   14002b79b:	mov    DWORD PTR [rax],ecx
   14002b79d:	mov    rax,QWORD PTR [rbx+0x20]
   14002b7a1:	mov    QWORD PTR [rax],rcx
   14002b7a4:	mov    rax,QWORD PTR [rbx+0x40]
   14002b7a8:	mov    QWORD PTR [rax],rcx
   14002b7ab:	mov    rax,QWORD PTR [rbx+0x58]
   14002b7af:	mov    DWORD PTR [rax],ecx
   14002b7b1:	movzx  eax,BYTE PTR [rsp+0x80]
   14002b7b9:	mov    r8,QWORD PTR [rbx+0x88]
   14002b7c0:	mov    BYTE PTR [rsp+0x30],al
   14002b7c4:	mov    rcx,r14
   14002b7c7:	mov    DWORD PTR [rsp+0x28],ebp
   14002b7cb:	mov    DWORD PTR [rsp+0x20],esi
   14002b7cf:	call   0x14000d5d0
   14002b7d4:	int3   
   14002b7d5:	int3   
   14002b7d6:	int3   
   14002b7d7:	int3   
   14002b7d8:	int3   
   14002b7d9:	int3   
   14002b7da:	int3   
   14002b7db:	int3   
   14002b7dc:	int3   
   14002b7dd:	int3   
   14002b7de:	int3   
   14002b7df:	int3   
   14002b7e0:	mov    QWORD PTR [rsp+0x10],rbx
   14002b7e5:	mov    QWORD PTR [rsp+0x18],rbp
   14002b7ea:	push   rsi
   14002b7eb:	push   rdi
   14002b7ec:	push   r14
   14002b7ee:	sub    rsp,0x50
   14002b7f2:	mov    rax,QWORD PTR [rcx+0x38]
   14002b7f6:	mov    ebp,DWORD PTR [rsp+0x90]
   14002b7fd:	mov    rdi,r8
   14002b800:	mov    r8,QWORD PTR [rax]
   14002b803:	mov    esi,r9d
   14002b806:	mov    r14,rdx
   14002b809:	mov    rbx,rcx
   14002b80c:	test   r8,r8
   14002b80f:	je     0x14002b865
   14002b811:	cmp    r9d,0x1
   14002b815:	jne    0x14002b865
   14002b817:	cmp    ebp,r9d
   14002b81a:	jne    0x14002b865
   14002b81c:	mov    rax,QWORD PTR [rcx+0x18]
   14002b820:	mov    rcx,QWORD PTR [rax]
   14002b823:	sub    rcx,r8
   14002b826:	cmp    rcx,rdi
   14002b829:	jg     0x14002b865
   14002b82b:	mov    rdx,QWORD PTR [rbx+0x50]
   14002b82f:	movsxd rcx,DWORD PTR [rdx]
   14002b832:	cmp    rdi,rcx
   14002b835:	jg     0x14002b865
   14002b837:	sub    ecx,edi
   14002b839:	movsxd rax,edi
   14002b83c:	xor    r8d,r8d
   14002b83f:	mov    DWORD PTR [rdx],ecx
   14002b841:	mov    rcx,QWORD PTR [rbx+0x38]
   14002b845:	lea    rdx,[rbx+0x70]
   14002b849:	add    QWORD PTR [rcx],rax
   14002b84c:	movzx  eax,BYTE PTR [rsp+0x70]
   14002b851:	lea    rcx,[rsp+0x30]
   14002b856:	mov    BYTE PTR [rsp+0x28],al
   14002b85a:	mov    DWORD PTR [rsp+0x20],r9d
   14002b85f:	call   0x14000d600
   14002b864:	int3   
   14002b865:	mov    rax,QWORD PTR [rbx+0x40]
   14002b869:	cmp    QWORD PTR [rax],0x0
   14002b86d:	je     0x14002b878
   14002b86f:	mov    rcx,rbx
   14002b872:	call   QWORD PTR [rip+0xa960]        # 0x1400361d8
   14002b878:	cmp    esi,0x1
   14002b87b:	jne    0x14002b891
   14002b87d:	mov    rax,QWORD PTR [rbx+0x38]
   14002b881:	cmp    QWORD PTR [rax],0x0
   14002b885:	je     0x14002b891
   14002b887:	mov    rax,QWORD PTR [rbx+0x50]
   14002b88b:	movsxd rcx,DWORD PTR [rax]
   14002b88e:	sub    rdi,rcx
   14002b891:	mov    rax,QWORD PTR [rbx+0x18]
   14002b895:	xor    ecx,ecx
   14002b897:	lea    rdx,[rbx+0x70]
   14002b89b:	mov    QWORD PTR [rax],rcx
   14002b89e:	mov    rax,QWORD PTR [rbx+0x38]
   14002b8a2:	mov    r9d,esi
   14002b8a5:	mov    QWORD PTR [rax],rcx
   14002b8a8:	mov    rax,QWORD PTR [rbx+0x50]
   14002b8ac:	mov    r8,rdi
   14002b8af:	mov    DWORD PTR [rax],ecx
   14002b8b1:	mov    rax,QWORD PTR [rbx+0x20]
   14002b8b5:	mov    QWORD PTR [rax],rcx
   14002b8b8:	mov    rax,QWORD PTR [rbx+0x40]
   14002b8bc:	mov    QWORD PTR [rax],rcx
   14002b8bf:	mov    rax,QWORD PTR [rbx+0x58]
   14002b8c3:	mov    DWORD PTR [rax],ecx
   14002b8c5:	movzx  eax,BYTE PTR [rsp+0x70]
   14002b8ca:	mov    rcx,r14
   14002b8cd:	mov    BYTE PTR [rsp+0x28],al
   14002b8d1:	mov    DWORD PTR [rsp+0x20],ebp
   14002b8d5:	call   0x14000d600
   14002b8da:	int3   
   14002b8db:	int3   
   14002b8dc:	int3   
   14002b8dd:	int3   
   14002b8de:	int3   
   14002b8df:	int3   
   14002b8e0:	mov    QWORD PTR [rsp+0x10],rbx
   14002b8e5:	mov    QWORD PTR [rsp+0x18],rbp
   14002b8ea:	push   rsi
   14002b8eb:	push   rdi
   14002b8ec:	push   r14
   14002b8ee:	sub    rsp,0x50
   14002b8f2:	mov    rax,QWORD PTR [rcx+0x38]
   14002b8f6:	mov    ebp,DWORD PTR [rsp+0x90]
   14002b8fd:	mov    rdi,r8
   14002b900:	mov    r8,QWORD PTR [rax]
   14002b903:	mov    esi,r9d
   14002b906:	mov    r14,rdx
   14002b909:	mov    rbx,rcx
   14002b90c:	test   r8,r8
   14002b90f:	je     0x14002b965
   14002b911:	cmp    r9d,0x1
   14002b915:	jne    0x14002b965
   14002b917:	cmp    ebp,r9d
   14002b91a:	jne    0x14002b965
   14002b91c:	mov    rax,QWORD PTR [rcx+0x18]
   14002b920:	mov    rcx,QWORD PTR [rax]
   14002b923:	sub    rcx,r8
   14002b926:	cmp    rcx,rdi
   14002b929:	jg     0x14002b965
   14002b92b:	mov    rdx,QWORD PTR [rbx+0x50]
   14002b92f:	movsxd rcx,DWORD PTR [rdx]
   14002b932:	cmp    rdi,rcx
   14002b935:	jg     0x14002b965
   14002b937:	sub    ecx,edi
   14002b939:	movsxd rax,edi
   14002b93c:	xor    r8d,r8d
   14002b93f:	mov    DWORD PTR [rdx],ecx
   14002b941:	mov    rcx,QWORD PTR [rbx+0x38]
   14002b945:	lea    rdx,[rbx+0x70]
   14002b949:	add    QWORD PTR [rcx],rax
   14002b94c:	movzx  eax,BYTE PTR [rsp+0x70]
   14002b951:	lea    rcx,[rsp+0x30]
   14002b956:	mov    BYTE PTR [rsp+0x28],al
   14002b95a:	mov    DWORD PTR [rsp+0x20],r9d
   14002b95f:	call   0x14000d740
   14002b964:	int3   
   14002b965:	mov    rax,QWORD PTR [rbx+0x40]
   14002b969:	cmp    QWORD PTR [rax],0x0
   14002b96d:	je     0x14002b978
   14002b96f:	mov    rcx,rbx
   14002b972:	call   QWORD PTR [rip+0xa860]        # 0x1400361d8
   14002b978:	cmp    esi,0x1
   14002b97b:	jne    0x14002b991
   14002b97d:	mov    rax,QWORD PTR [rbx+0x38]
   14002b981:	cmp    QWORD PTR [rax],0x0
   14002b985:	je     0x14002b991
   14002b987:	mov    rax,QWORD PTR [rbx+0x50]
   14002b98b:	movsxd rcx,DWORD PTR [rax]
   14002b98e:	sub    rdi,rcx
   14002b991:	mov    rax,QWORD PTR [rbx+0x18]
   14002b995:	xor    ecx,ecx
   14002b997:	lea    rdx,[rbx+0x70]
   14002b99b:	mov    QWORD PTR [rax],rcx
   14002b99e:	mov    rax,QWORD PTR [rbx+0x38]
   14002b9a2:	mov    r9d,esi
   14002b9a5:	mov    QWORD PTR [rax],rcx
   14002b9a8:	mov    rax,QWORD PTR [rbx+0x50]
   14002b9ac:	mov    r8,rdi
   14002b9af:	mov    DWORD PTR [rax],ecx
   14002b9b1:	mov    rax,QWORD PTR [rbx+0x20]
   14002b9b5:	mov    QWORD PTR [rax],rcx
   14002b9b8:	mov    rax,QWORD PTR [rbx+0x40]
   14002b9bc:	mov    QWORD PTR [rax],rcx
   14002b9bf:	mov    rax,QWORD PTR [rbx+0x58]
   14002b9c3:	mov    DWORD PTR [rax],ecx
   14002b9c5:	movzx  eax,BYTE PTR [rsp+0x70]
   14002b9ca:	mov    rcx,r14
   14002b9cd:	mov    BYTE PTR [rsp+0x28],al
   14002b9d1:	mov    DWORD PTR [rsp+0x20],ebp
   14002b9d5:	call   0x14000d740
   14002b9da:	int3   
   14002b9db:	int3   
   14002b9dc:	int3   
   14002b9dd:	int3   
   14002b9de:	int3   
   14002b9df:	int3   
   14002b9e0:	mov    QWORD PTR [rsp+0x10],rbx
   14002b9e5:	mov    QWORD PTR [rsp+0x18],rbp
   14002b9ea:	push   rsi
   14002b9eb:	push   rdi
   14002b9ec:	push   r14
   14002b9ee:	sub    rsp,0x20
   14002b9f2:	mov    rax,QWORD PTR [rcx+0x38]
   14002b9f6:	lea    r14,[rcx+0x80]
   14002b9fd:	mov    ebp,r9d
   14002ba00:	mov    rsi,r8
   14002ba03:	mov    rdi,rdx
   14002ba06:	mov    rbx,rcx
   14002ba09:	cmp    QWORD PTR [rax],r14
   14002ba0c:	jne    0x14002ba1e
   14002ba0e:	cmp    r9d,0x1
   14002ba12:	jne    0x14002ba1e
   14002ba14:	cmp    QWORD PTR [rcx+0x78],0x0
   14002ba19:	jne    0x14002ba1e
   14002ba1b:	dec    rsi
   14002ba1e:	cmp    QWORD PTR [rcx+0x90],0x0
   14002ba26:	je     0x14002baa1
   14002ba28:	call   0x14001c790
   14002ba2d:	test   al,al
   14002ba2f:	je     0x14002baa1
   14002ba31:	test   rsi,rsi
   14002ba34:	jne    0x14002ba3b
   14002ba36:	cmp    ebp,0x1
   14002ba39:	je     0x14002ba52
   14002ba3b:	mov    rcx,QWORD PTR [rbx+0x90]
   14002ba42:	mov    r8d,ebp
   14002ba45:	mov    rdx,rsi
   14002ba48:	call   QWORD PTR [rip+0xa89a]        # 0x1400362e8
   14002ba4e:	test   eax,eax
   14002ba50:	jne    0x14002baa1
   14002ba52:	mov    rcx,QWORD PTR [rbx+0x90]
   14002ba59:	lea    rdx,[rsp+0x40]
   14002ba5e:	call   QWORD PTR [rip+0xaa7c]        # 0x1400364e0
   14002ba64:	test   eax,eax
   14002ba66:	jne    0x14002baa1
   14002ba68:	mov    rax,QWORD PTR [rbx+0x18]
   14002ba6c:	cmp    QWORD PTR [rax],r14
   14002ba6f:	jne    0x14002ba8b
   14002ba71:	mov    rcx,QWORD PTR [rbx+0x68]
   14002ba75:	mov    rdx,QWORD PTR [rbx+0x70]
   14002ba79:	mov    QWORD PTR [rax],rcx
   14002ba7c:	mov    rax,QWORD PTR [rbx+0x38]
   14002ba80:	sub    edx,ecx
   14002ba82:	mov    QWORD PTR [rax],rcx
   14002ba85:	mov    rax,QWORD PTR [rbx+0x50]
   14002ba89:	mov    DWORD PTR [rax],edx
   14002ba8b:	xor    eax,eax
   14002ba8d:	mov    QWORD PTR [rdi],rax
   14002ba90:	mov    rax,QWORD PTR [rsp+0x40]
   14002ba95:	mov    QWORD PTR [rdi+0x8],rax
   14002ba99:	mov    eax,DWORD PTR [rbx+0x84]
   14002ba9f:	jmp    0x14002bab4
   14002baa1:	mov    rax,QWORD PTR [rip+0xa5e0]        # 0x140036088
   14002baa8:	mov    rcx,QWORD PTR [rax]
   14002baab:	xor    eax,eax
   14002baad:	mov    QWORD PTR [rdi],rcx
   14002bab0:	mov    QWORD PTR [rdi+0x8],rax
   14002bab4:	mov    rbx,QWORD PTR [rsp+0x48]
   14002bab9:	mov    rbp,QWORD PTR [rsp+0x50]
   14002babe:	mov    DWORD PTR [rdi+0x10],eax
   14002bac1:	mov    rax,rdi
   14002bac4:	add    rsp,0x20
   14002bac8:	pop    r14
   14002baca:	pop    rdi
   14002bacb:	pop    rsi
   14002bacc:	ret    
   14002bacd:	int3   
   14002bace:	int3   
   14002bacf:	int3   
   14002bad0:	mov    QWORD PTR [rsp+0x10],rbx
   14002bad5:	push   rdi
   14002bad6:	mov    rdi,QWORD PTR [rcx+0x40]
   14002bada:	mov    r11,rdx
   14002badd:	mov    r10,rcx
   14002bae0:	mov    rax,QWORD PTR [rdi]
   14002bae3:	test   rax,rax
   14002bae6:	je     0x14002baf2
   14002bae8:	cmp    QWORD PTR [rcx+0x68],rax
   14002baec:	jae    0x14002baf2
   14002baee:	mov    QWORD PTR [rcx+0x68],rax
   14002baf2:	mov    ebx,DWORD PTR [rsp+0x30]
   14002baf6:	mov    QWORD PTR [rsp+0x10],rsi
   14002bafb:	test   bl,0x1
   14002bafe:	je     0x14002bbbe
   14002bb04:	mov    rsi,QWORD PTR [rcx+0x38]
   14002bb08:	mov    rcx,QWORD PTR [rsi]
   14002bb0b:	test   rcx,rcx
   14002bb0e:	je     0x14002bbbe
   14002bb14:	mov    rdx,QWORD PTR [rip+0xa56d]        # 0x140036088
   14002bb1b:	cmp    r9d,0x2
   14002bb1f:	jne    0x14002bb31
   14002bb21:	mov    rax,QWORD PTR [r10+0x18]
   14002bb25:	mov    rcx,QWORD PTR [r10+0x68]
   14002bb29:	sub    rcx,QWORD PTR [rax]
   14002bb2c:	add    r8,rcx
   14002bb2f:	jmp    0x14002bb50
   14002bb31:	cmp    r9d,0x1
   14002bb35:	jne    0x14002bb48
   14002bb37:	test   bl,0x2
   14002bb3a:	jne    0x14002bb4d
   14002bb3c:	mov    rax,QWORD PTR [r10+0x18]
   14002bb40:	sub    rcx,QWORD PTR [rax]
   14002bb43:	add    r8,rcx
   14002bb46:	jmp    0x14002bb50
   14002bb48:	test   r9d,r9d
   14002bb4b:	je     0x14002bb50
   14002bb4d:	mov    r8,QWORD PTR [rdx]
   14002bb50:	test   r8,r8
   14002bb53:	js     0x14002bc30
   14002bb59:	mov    rcx,QWORD PTR [r10+0x18]
   14002bb5d:	mov    rax,QWORD PTR [r10+0x68]
   14002bb61:	sub    rax,QWORD PTR [rcx]
   14002bb64:	cmp    r8,rax
   14002bb67:	jg     0x14002bc30
   14002bb6d:	mov    edx,DWORD PTR [rcx]
   14002bb6f:	mov    rax,QWORD PTR [r10+0x50]
   14002bb73:	sub    edx,DWORD PTR [rsi]
   14002bb75:	add    edx,r8d
   14002bb78:	sub    DWORD PTR [rax],edx
   14002bb7a:	mov    rcx,QWORD PTR [r10+0x38]
   14002bb7e:	movsxd rax,edx
   14002bb81:	add    QWORD PTR [rcx],rax
   14002bb84:	test   bl,0x2
   14002bb87:	je     0x14002bc44
   14002bb8d:	mov    r9,QWORD PTR [r10+0x40]
   14002bb91:	mov    rcx,QWORD PTR [r9]
   14002bb94:	test   rcx,rcx
   14002bb97:	je     0x14002bc44
   14002bb9d:	mov    rax,QWORD PTR [r10+0x58]
   14002bba1:	movsxd rdx,DWORD PTR [rax]
   14002bba4:	mov    rax,QWORD PTR [r10+0x38]
   14002bba8:	add    rdx,rcx
   14002bbab:	mov    rcx,QWORD PTR [rax]
   14002bbae:	mov    QWORD PTR [r9],rcx
   14002bbb1:	mov    rax,QWORD PTR [r10+0x58]
   14002bbb5:	sub    edx,ecx
   14002bbb7:	mov    DWORD PTR [rax],edx
   14002bbb9:	jmp    0x14002bc44
   14002bbbe:	test   bl,0x2
   14002bbc1:	je     0x14002bc35
   14002bbc3:	mov    rcx,QWORD PTR [rdi]
   14002bbc6:	test   rcx,rcx
   14002bbc9:	je     0x14002bc35
   14002bbcb:	mov    rdx,QWORD PTR [rip+0xa4b6]        # 0x140036088
   14002bbd2:	cmp    r9d,0x2
   14002bbd6:	jne    0x14002bbe8
   14002bbd8:	mov    rax,QWORD PTR [r10+0x18]
   14002bbdc:	mov    rcx,QWORD PTR [r10+0x68]
   14002bbe0:	sub    rcx,QWORD PTR [rax]
   14002bbe3:	add    r8,rcx
   14002bbe6:	jmp    0x14002bc02
   14002bbe8:	cmp    r9d,0x1
   14002bbec:	jne    0x14002bbfa
   14002bbee:	mov    rax,QWORD PTR [r10+0x18]
   14002bbf2:	sub    rcx,QWORD PTR [rax]
   14002bbf5:	add    r8,rcx
   14002bbf8:	jmp    0x14002bc02
   14002bbfa:	test   r9d,r9d
   14002bbfd:	je     0x14002bc02
   14002bbff:	mov    r8,QWORD PTR [rdx]
   14002bc02:	test   r8,r8
   14002bc05:	js     0x14002bc30
   14002bc07:	mov    rcx,QWORD PTR [r10+0x18]
   14002bc0b:	mov    rax,QWORD PTR [r10+0x68]
   14002bc0f:	sub    rax,QWORD PTR [rcx]
   14002bc12:	cmp    r8,rax
   14002bc15:	jg     0x14002bc30
   14002bc17:	mov    edx,DWORD PTR [rcx]
   14002bc19:	mov    rax,QWORD PTR [r10+0x58]
   14002bc1d:	sub    edx,DWORD PTR [rdi]
   14002bc1f:	add    edx,r8d
   14002bc22:	sub    DWORD PTR [rax],edx
   14002bc24:	mov    rcx,QWORD PTR [r10+0x40]
   14002bc28:	movsxd rax,edx
   14002bc2b:	add    QWORD PTR [rcx],rax
   14002bc2e:	jmp    0x14002bc44
   14002bc30:	mov    r8,QWORD PTR [rdx]
   14002bc33:	jmp    0x14002bc44
   14002bc35:	test   r8,r8
   14002bc38:	je     0x14002bc44
   14002bc3a:	mov    rax,QWORD PTR [rip+0xa447]        # 0x140036088
   14002bc41:	mov    r8,QWORD PTR [rax]
   14002bc44:	mov    rsi,QWORD PTR [rsp+0x10]
   14002bc49:	mov    rbx,QWORD PTR [rsp+0x18]
   14002bc4e:	xor    eax,eax
   14002bc50:	mov    QWORD PTR [r11+0x8],rax
   14002bc54:	mov    DWORD PTR [r11+0x10],eax
   14002bc58:	mov    QWORD PTR [r11],r8
   14002bc5b:	mov    rax,r11
   14002bc5e:	pop    rdi
   14002bc5f:	ret    
   14002bc60:	rex push rdi
   14002bc62:	sub    rsp,0x40
   14002bc66:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14002bc6f:	mov    QWORD PTR [rsp+0x58],rbx
   14002bc74:	mov    QWORD PTR [rsp+0x60],rbp
   14002bc79:	mov    QWORD PTR [rsp+0x68],rsi
   14002bc7e:	mov    ebx,r9d
   14002bc81:	mov    rdi,r8
   14002bc84:	mov    rbp,rdx
   14002bc87:	mov    rsi,rcx
   14002bc8a:	mov    QWORD PTR [rsp+0x50],rcx
   14002bc8f:	call   0x14002c4f0
   14002bc94:	nop
   14002bc95:	mov    rax,QWORD PTR [rsi+0x78]
   14002bc99:	mov    rax,QWORD PTR [rax]
   14002bc9c:	mov    rax,QWORD PTR [rax]
   14002bc9f:	mov    rcx,QWORD PTR [rax+0x10]
   14002bca3:	mov    r10,QWORD PTR [rcx]
   14002bca6:	mov    eax,DWORD PTR [rsp+0x70]
   14002bcaa:	mov    DWORD PTR [rsp+0x20],eax
   14002bcae:	mov    r9d,ebx
   14002bcb1:	mov    r8,rdi
   14002bcb4:	mov    rdx,rbp
   14002bcb7:	call   QWORD PTR [r10+0x50]
   14002bcbb:	nop
   14002bcbc:	mov    rcx,rsi
   14002bcbf:	call   0x140024800
   14002bcc4:	mov    rax,rbp
   14002bcc7:	mov    rbx,QWORD PTR [rsp+0x58]
   14002bccc:	mov    rbp,QWORD PTR [rsp+0x60]
   14002bcd1:	mov    rsi,QWORD PTR [rsp+0x68]
   14002bcd6:	add    rsp,0x40
   14002bcda:	pop    rdi
   14002bcdb:	ret    
   14002bcdc:	int3   
   14002bcdd:	int3   
   14002bcde:	int3   
   14002bcdf:	int3   
   14002bce0:	sub    rsp,0x38
   14002bce4:	mov    eax,DWORD PTR [rsp+0x60]
   14002bce8:	mov    DWORD PTR [rsp+0x20],eax
   14002bcec:	call   0x14002b5a0
   14002bcf1:	int3   
   14002bcf2:	int3   
   14002bcf3:	int3   
   14002bcf4:	int3   
   14002bcf5:	int3   
   14002bcf6:	int3   
   14002bcf7:	int3   
   14002bcf8:	int3   
   14002bcf9:	int3   
   14002bcfa:	int3   
   14002bcfb:	int3   
   14002bcfc:	int3   
   14002bcfd:	int3   
   14002bcfe:	int3   
   14002bcff:	int3   
   14002bd00:	sub    rsp,0x38
   14002bd04:	mov    eax,DWORD PTR [rsp+0x60]
   14002bd08:	mov    DWORD PTR [rsp+0x20],eax
   14002bd0c:	call   0x14002b6c0
   14002bd11:	int3   
   14002bd12:	int3   
   14002bd13:	int3   
   14002bd14:	int3   
   14002bd15:	int3   
   14002bd16:	int3   
   14002bd17:	int3   
   14002bd18:	int3   
   14002bd19:	int3   
   14002bd1a:	int3   
   14002bd1b:	int3   
   14002bd1c:	int3   
   14002bd1d:	int3   
   14002bd1e:	int3   
   14002bd1f:	int3   
   14002bd20:	sub    rsp,0x38
   14002bd24:	mov    eax,DWORD PTR [rsp+0x60]
   14002bd28:	mov    DWORD PTR [rsp+0x20],eax
   14002bd2c:	call   0x14002b7e0
   14002bd31:	int3   
   14002bd32:	int3   
   14002bd33:	int3   
   14002bd34:	int3   
   14002bd35:	int3   
   14002bd36:	int3   
   14002bd37:	int3   
   14002bd38:	int3   
   14002bd39:	int3   
   14002bd3a:	int3   
   14002bd3b:	int3   
   14002bd3c:	int3   
   14002bd3d:	int3   
   14002bd3e:	int3   
   14002bd3f:	int3   
   14002bd40:	sub    rsp,0x38
   14002bd44:	mov    eax,DWORD PTR [rsp+0x60]
   14002bd48:	mov    DWORD PTR [rsp+0x20],eax
   14002bd4c:	call   0x14002b8e0
   14002bd51:	int3   
   14002bd52:	int3   
   14002bd53:	int3   
   14002bd54:	int3   
   14002bd55:	int3   
   14002bd56:	int3   
   14002bd57:	int3   
   14002bd58:	int3   
   14002bd59:	int3   
   14002bd5a:	int3   
   14002bd5b:	int3   
   14002bd5c:	int3   
   14002bd5d:	int3   
   14002bd5e:	int3   
   14002bd5f:	int3   
   14002bd60:	mov    QWORD PTR [rsp+0x10],rbx
   14002bd65:	mov    QWORD PTR [rsp+0x18],rsi
   14002bd6a:	mov    QWORD PTR [rsp+0x20],rdi
   14002bd6f:	push   r14
   14002bd71:	sub    rsp,0x20
   14002bd75:	cmp    QWORD PTR [rcx+0x90],0x0
   14002bd7d:	mov    rax,QWORD PTR [r8+0x8]
   14002bd81:	mov    rsi,QWORD PTR [r8]
   14002bd84:	mov    QWORD PTR [rsp+0x30],rax
   14002bd89:	mov    r14,r8
   14002bd8c:	mov    rbx,rdx
   14002bd8f:	mov    rdi,rcx
   14002bd92:	je     0x14002be0e
   14002bd94:	call   0x14001c790
   14002bd99:	test   al,al
   14002bd9b:	je     0x14002be0e
   14002bd9d:	mov    rcx,QWORD PTR [rdi+0x90]
   14002bda4:	lea    rdx,[rsp+0x30]
   14002bda9:	call   QWORD PTR [rip+0xa541]        # 0x1400362f0
   14002bdaf:	test   eax,eax
   14002bdb1:	jne    0x14002be0e
   14002bdb3:	test   rsi,rsi
   14002bdb6:	je     0x14002bdd0
   14002bdb8:	mov    rcx,QWORD PTR [rdi+0x90]
   14002bdbf:	lea    r8d,[rax+0x1]
   14002bdc3:	mov    rdx,rsi
   14002bdc6:	call   QWORD PTR [rip+0xa51c]        # 0x1400362e8
   14002bdcc:	test   eax,eax
   14002bdce:	jne    0x14002be0e
   14002bdd0:	mov    rcx,QWORD PTR [rdi+0x90]
   14002bdd7:	lea    rdx,[rsp+0x30]
   14002bddc:	call   QWORD PTR [rip+0xa6fe]        # 0x1400364e0
   14002bde2:	test   eax,eax
   14002bde4:	jne    0x14002be0e
   14002bde6:	mov    eax,DWORD PTR [r14+0x10]
   14002bdea:	mov    rcx,rdi
   14002bded:	mov    DWORD PTR [rdi+0x84],eax
   14002bdf3:	call   0x14001d640
   14002bdf8:	xor    eax,eax
   14002bdfa:	mov    QWORD PTR [rbx],rax
   14002bdfd:	mov    rax,QWORD PTR [rsp+0x30]
   14002be02:	mov    QWORD PTR [rbx+0x8],rax
   14002be06:	mov    eax,DWORD PTR [rdi+0x84]
   14002be0c:	jmp    0x14002be21
   14002be0e:	mov    rax,QWORD PTR [rip+0xa273]        # 0x140036088
   14002be15:	mov    rcx,QWORD PTR [rax]
   14002be18:	xor    eax,eax
   14002be1a:	mov    QWORD PTR [rbx],rcx
   14002be1d:	mov    QWORD PTR [rbx+0x8],rax
   14002be21:	mov    rsi,QWORD PTR [rsp+0x40]
   14002be26:	mov    rdi,QWORD PTR [rsp+0x48]
   14002be2b:	mov    DWORD PTR [rbx+0x10],eax
   14002be2e:	mov    rax,rbx
   14002be31:	mov    rbx,QWORD PTR [rsp+0x38]
   14002be36:	add    rsp,0x20
   14002be3a:	pop    r14
   14002be3c:	ret    
   14002be3d:	int3   
   14002be3e:	int3   
   14002be3f:	int3   
   14002be40:	rex push rbx
   14002be42:	mov    r10,QWORD PTR [r8+0x8]
   14002be46:	mov    rbx,rdx
   14002be49:	mov    r11,rcx
   14002be4c:	add    r10,QWORD PTR [r8]
   14002be4f:	mov    r8,QWORD PTR [rcx+0x40]
   14002be53:	mov    rax,QWORD PTR [r8]
   14002be56:	test   rax,rax
   14002be59:	je     0x14002be65
   14002be5b:	cmp    QWORD PTR [rcx+0x68],rax
   14002be5f:	jae    0x14002be65
   14002be61:	mov    QWORD PTR [rcx+0x68],rax
   14002be65:	mov    rax,QWORD PTR [rip+0xa21c]        # 0x140036088
   14002be6c:	mov    rcx,QWORD PTR [rax]
   14002be6f:	cmp    r10,rcx
   14002be72:	je     0x14002bf34
   14002be78:	mov    QWORD PTR [rsp+0x10],rdi
   14002be7d:	test   r9b,0x1
   14002be81:	je     0x14002bef1
   14002be83:	mov    rdi,QWORD PTR [r11+0x38]
   14002be87:	cmp    QWORD PTR [rdi],0x0
   14002be8b:	je     0x14002bef1
   14002be8d:	test   r10,r10
   14002be90:	js     0x14002bf2c
   14002be96:	mov    rdx,QWORD PTR [r11+0x18]
   14002be9a:	mov    rax,QWORD PTR [r11+0x68]
   14002be9e:	sub    rax,QWORD PTR [rdx]
   14002bea1:	cmp    r10,rax
   14002bea4:	jg     0x14002bf2c
   14002beaa:	mov    edx,DWORD PTR [rdx]
   14002beac:	mov    rax,QWORD PTR [r11+0x50]
   14002beb0:	sub    edx,DWORD PTR [rdi]
   14002beb2:	add    edx,r10d
   14002beb5:	sub    DWORD PTR [rax],edx
   14002beb7:	mov    rcx,QWORD PTR [r11+0x38]
   14002bebb:	movsxd rax,edx
   14002bebe:	add    QWORD PTR [rcx],rax
   14002bec1:	test   r9b,0x2
   14002bec5:	je     0x14002bf2f
   14002bec7:	mov    r8,QWORD PTR [r11+0x40]
   14002becb:	mov    rcx,QWORD PTR [r8]
   14002bece:	test   rcx,rcx
   14002bed1:	je     0x14002bf2f
   14002bed3:	mov    rax,QWORD PTR [r11+0x58]
   14002bed7:	movsxd rdx,DWORD PTR [rax]
   14002beda:	mov    rax,QWORD PTR [r11+0x38]
   14002bede:	add    rdx,rcx
   14002bee1:	mov    rcx,QWORD PTR [rax]
   14002bee4:	mov    QWORD PTR [r8],rcx
   14002bee7:	mov    rax,QWORD PTR [r11+0x58]
   14002beeb:	sub    edx,ecx
   14002beed:	mov    DWORD PTR [rax],edx
   14002beef:	jmp    0x14002bf2f
   14002bef1:	test   r9b,0x2
   14002bef5:	je     0x14002bf2c
   14002bef7:	cmp    QWORD PTR [r8],0x0
   14002befb:	je     0x14002bf2c
   14002befd:	test   r10,r10
   14002bf00:	js     0x14002bf2c
   14002bf02:	mov    rdx,QWORD PTR [r11+0x18]
   14002bf06:	mov    rax,QWORD PTR [r11+0x68]
   14002bf0a:	sub    rax,QWORD PTR [rdx]
   14002bf0d:	cmp    r10,rax
   14002bf10:	jg     0x14002bf2c
   14002bf12:	mov    edx,DWORD PTR [rdx]
   14002bf14:	mov    rax,QWORD PTR [r11+0x58]
   14002bf18:	sub    edx,DWORD PTR [r8]
   14002bf1b:	add    edx,r10d
   14002bf1e:	sub    DWORD PTR [rax],edx
   14002bf20:	mov    rcx,QWORD PTR [r11+0x40]
   14002bf24:	movsxd rax,edx
   14002bf27:	add    QWORD PTR [rcx],rax
   14002bf2a:	jmp    0x14002bf2f
   14002bf2c:	mov    r10,rcx
   14002bf2f:	mov    rdi,QWORD PTR [rsp+0x10]
   14002bf34:	xor    eax,eax
   14002bf36:	mov    QWORD PTR [rbx],r10
   14002bf39:	mov    QWORD PTR [rbx+0x8],rax
   14002bf3d:	mov    DWORD PTR [rbx+0x10],eax
   14002bf40:	mov    rax,rbx
   14002bf43:	pop    rbx
   14002bf44:	ret    
   14002bf45:	int3   
   14002bf46:	int3   
   14002bf47:	int3   
   14002bf48:	int3   
   14002bf49:	int3   
   14002bf4a:	int3   
   14002bf4b:	int3   
   14002bf4c:	int3   
   14002bf4d:	int3   
   14002bf4e:	int3   
   14002bf4f:	int3   
   14002bf50:	rex push rdi
   14002bf52:	sub    rsp,0x50
   14002bf56:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002bf5f:	mov    QWORD PTR [rsp+0x68],rbx
   14002bf64:	mov    QWORD PTR [rsp+0x70],rbp
   14002bf69:	mov    QWORD PTR [rsp+0x78],rsi
   14002bf6e:	mov    edi,r9d
   14002bf71:	mov    rbx,r8
   14002bf74:	mov    rbp,rdx
   14002bf77:	mov    rsi,rcx
   14002bf7a:	mov    QWORD PTR [rsp+0x60],rcx
   14002bf7f:	call   0x14002c4f0
   14002bf84:	nop
   14002bf85:	mov    rax,QWORD PTR [rsi+0x78]
   14002bf89:	mov    rax,QWORD PTR [rax]
   14002bf8c:	mov    rax,QWORD PTR [rax]
   14002bf8f:	mov    rcx,QWORD PTR [rax+0x10]
   14002bf93:	movups xmm0,XMMWORD PTR [rbx]
   14002bf96:	movaps XMMWORD PTR [rsp+0x30],xmm0
   14002bf9b:	movsd  xmm1,QWORD PTR [rbx+0x10]
   14002bfa0:	movsd  QWORD PTR [rsp+0x40],xmm1
   14002bfa6:	mov    rax,QWORD PTR [rcx]
   14002bfa9:	mov    r9d,edi
   14002bfac:	lea    r8,[rsp+0x30]
   14002bfb1:	mov    rdx,rbp
   14002bfb4:	call   QWORD PTR [rax+0x58]
   14002bfb7:	nop
   14002bfb8:	mov    rcx,rsi
   14002bfbb:	call   0x140024800
   14002bfc0:	mov    rax,rbp
   14002bfc3:	mov    rbx,QWORD PTR [rsp+0x68]
   14002bfc8:	mov    rbp,QWORD PTR [rsp+0x70]
   14002bfcd:	mov    rsi,QWORD PTR [rsp+0x78]
   14002bfd2:	add    rsp,0x50
   14002bfd6:	pop    rdi
   14002bfd7:	ret    
   14002bfd8:	int3   
   14002bfd9:	int3   
   14002bfda:	int3   
   14002bfdb:	int3   
   14002bfdc:	int3   
   14002bfdd:	int3   
   14002bfde:	int3   
   14002bfdf:	int3   
   14002bfe0:	mov    rax,QWORD PTR [rcx+0x8]
   14002bfe4:	ret    
   14002bfe5:	int3   
   14002bfe6:	int3   
   14002bfe7:	int3   
   14002bfe8:	int3   
   14002bfe9:	int3   
   14002bfea:	int3   
   14002bfeb:	int3   
   14002bfec:	int3   
   14002bfed:	int3   
   14002bfee:	int3   
   14002bfef:	int3   
   14002bff0:	mov    QWORD PTR [rsp+0x10],rbx
   14002bff5:	mov    QWORD PTR [rsp+0x18],rbp
   14002bffa:	mov    QWORD PTR [rsp+0x20],rsi
   14002bfff:	push   rdi
   14002c000:	sub    rsp,0x60
   14002c004:	movups xmm3,XMMWORD PTR [r8]
   14002c008:	movsd  xmm0,QWORD PTR [r8+0x10]
   14002c00e:	mov    esi,r9d
   14002c011:	mov    rbp,rdx
   14002c014:	mov    rbx,rcx
   14002c017:	movups xmm1,xmm3
   14002c01a:	movups xmm2,xmm3
   14002c01d:	movq   rdi,xmm3
   14002c022:	psrldq xmm1,0x8
   14002c027:	psrldq xmm2,0x8
   14002c02c:	psrldq xmm3,0x8
   14002c031:	movq   rax,xmm1
   14002c036:	movsd  QWORD PTR [rsp+0x50],xmm0
   14002c03c:	movsd  QWORD PTR [rsp+0x50],xmm0
   14002c042:	sub    rdi,rax
   14002c045:	movq   rax,xmm2
   14002c04a:	movsd  QWORD PTR [rsp+0x50],xmm0
   14002c050:	add    rdi,rax
   14002c053:	movq   rax,xmm3
   14002c058:	add    rdi,rax
   14002c05b:	mov    rax,QWORD PTR [rcx+0x40]
   14002c05f:	cmp    QWORD PTR [rax],0x0
   14002c063:	je     0x14002c06b
   14002c065:	call   QWORD PTR [rip+0xa16d]        # 0x1400361d8
   14002c06b:	mov    rax,QWORD PTR [rbx+0x18]
   14002c06f:	xor    ecx,ecx
   14002c071:	lea    rdx,[rbx+0x70]
   14002c075:	mov    QWORD PTR [rax],rcx
   14002c078:	mov    rax,QWORD PTR [rbx+0x38]
   14002c07c:	mov    r9,rdi
   14002c07f:	mov    QWORD PTR [rax],rcx
   14002c082:	mov    rax,QWORD PTR [rbx+0x50]
   14002c086:	mov    DWORD PTR [rax],ecx
   14002c088:	mov    rax,QWORD PTR [rbx+0x20]
   14002c08c:	mov    QWORD PTR [rax],rcx
   14002c08f:	mov    rax,QWORD PTR [rbx+0x40]
   14002c093:	mov    QWORD PTR [rax],rcx
   14002c096:	mov    rax,QWORD PTR [rbx+0x58]
   14002c09a:	mov    DWORD PTR [rax],ecx
   14002c09c:	movzx  eax,BYTE PTR [rsp+0x70]
   14002c0a1:	mov    r8,QWORD PTR [rbx+0x88]
   14002c0a8:	mov    BYTE PTR [rsp+0x30],al
   14002c0ac:	mov    DWORD PTR [rsp+0x28],esi
   14002c0b0:	mov    DWORD PTR [rsp+0x20],ecx
   14002c0b4:	mov    rcx,rbp
   14002c0b7:	call   0x14000d570
   14002c0bc:	int3   
   14002c0bd:	int3   
   14002c0be:	int3   
   14002c0bf:	int3   
   14002c0c0:	mov    QWORD PTR [rsp+0x10],rbx
   14002c0c5:	mov    QWORD PTR [rsp+0x18],rbp
   14002c0ca:	mov    QWORD PTR [rsp+0x20],rsi
   14002c0cf:	push   rdi
   14002c0d0:	sub    rsp,0x60
   14002c0d4:	movups xmm3,XMMWORD PTR [r8]
   14002c0d8:	movsd  xmm0,QWORD PTR [r8+0x10]
   14002c0de:	mov    esi,r9d
   14002c0e1:	mov    rbp,rdx
   14002c0e4:	mov    rbx,rcx
   14002c0e7:	movups xmm1,xmm3
   14002c0ea:	movups xmm2,xmm3
   14002c0ed:	movq   rdi,xmm3
   14002c0f2:	psrldq xmm1,0x8
   14002c0f7:	psrldq xmm2,0x8
   14002c0fc:	psrldq xmm3,0x8
   14002c101:	movq   rax,xmm1
   14002c106:	movsd  QWORD PTR [rsp+0x50],xmm0
   14002c10c:	movsd  QWORD PTR [rsp+0x50],xmm0
   14002c112:	sub    rdi,rax
   14002c115:	movq   rax,xmm2
   14002c11a:	movsd  QWORD PTR [rsp+0x50],xmm0
   14002c120:	add    rdi,rax
   14002c123:	movq   rax,xmm3
   14002c128:	add    rdi,rax
   14002c12b:	mov    rax,QWORD PTR [rcx+0x40]
   14002c12f:	cmp    QWORD PTR [rax],0x0
   14002c133:	je     0x14002c13b
   14002c135:	call   QWORD PTR [rip+0xa09d]        # 0x1400361d8
   14002c13b:	mov    rax,QWORD PTR [rbx+0x18]
   14002c13f:	xor    ecx,ecx
   14002c141:	lea    rdx,[rbx+0x70]
   14002c145:	mov    QWORD PTR [rax],rcx
   14002c148:	mov    rax,QWORD PTR [rbx+0x38]
   14002c14c:	mov    r9,rdi
   14002c14f:	mov    QWORD PTR [rax],rcx
   14002c152:	mov    rax,QWORD PTR [rbx+0x50]
   14002c156:	mov    DWORD PTR [rax],ecx
   14002c158:	mov    rax,QWORD PTR [rbx+0x20]
   14002c15c:	mov    QWORD PTR [rax],rcx
   14002c15f:	mov    rax,QWORD PTR [rbx+0x40]
   14002c163:	mov    QWORD PTR [rax],rcx
   14002c166:	mov    rax,QWORD PTR [rbx+0x58]
   14002c16a:	mov    DWORD PTR [rax],ecx
   14002c16c:	movzx  eax,BYTE PTR [rsp+0x70]
   14002c171:	mov    r8,QWORD PTR [rbx+0x88]
   14002c178:	mov    BYTE PTR [rsp+0x30],al
   14002c17c:	mov    DWORD PTR [rsp+0x28],esi
   14002c180:	mov    DWORD PTR [rsp+0x20],ecx
   14002c184:	mov    rcx,rbp
   14002c187:	call   0x14000d5d0
   14002c18c:	int3   
   14002c18d:	int3   
   14002c18e:	int3   
   14002c18f:	int3   
   14002c190:	mov    QWORD PTR [rsp+0x10],rbx
   14002c195:	mov    QWORD PTR [rsp+0x18],rbp
   14002c19a:	mov    QWORD PTR [rsp+0x20],rsi
   14002c19f:	push   rdi
   14002c1a0:	sub    rsp,0x50
   14002c1a4:	movups xmm3,XMMWORD PTR [r8]
   14002c1a8:	movsd  xmm0,QWORD PTR [r8+0x10]
   14002c1ae:	mov    esi,r9d
   14002c1b1:	mov    rbp,rdx
   14002c1b4:	mov    rbx,rcx
   14002c1b7:	movups xmm1,xmm3
   14002c1ba:	movups xmm2,xmm3
   14002c1bd:	movq   rdi,xmm3
   14002c1c2:	psrldq xmm1,0x8
   14002c1c7:	psrldq xmm2,0x8
   14002c1cc:	psrldq xmm3,0x8
   14002c1d1:	movq   rax,xmm1
   14002c1d6:	movsd  QWORD PTR [rsp+0x40],xmm0
   14002c1dc:	movsd  QWORD PTR [rsp+0x40],xmm0
   14002c1e2:	sub    rdi,rax
   14002c1e5:	movq   rax,xmm2
   14002c1ea:	movsd  QWORD PTR [rsp+0x40],xmm0
   14002c1f0:	add    rdi,rax
   14002c1f3:	movq   rax,xmm3
   14002c1f8:	add    rdi,rax
   14002c1fb:	mov    rax,QWORD PTR [rcx+0x40]
   14002c1ff:	cmp    QWORD PTR [rax],0x0
   14002c203:	je     0x14002c20b
   14002c205:	call   QWORD PTR [rip+0x9fcd]        # 0x1400361d8
   14002c20b:	mov    rax,QWORD PTR [rbx+0x18]
   14002c20f:	xor    ecx,ecx
   14002c211:	lea    rdx,[rbx+0x70]
   14002c215:	mov    QWORD PTR [rax],rcx
   14002c218:	mov    rax,QWORD PTR [rbx+0x38]
   14002c21c:	xor    r9d,r9d
   14002c21f:	mov    QWORD PTR [rax],rcx
   14002c222:	mov    rax,QWORD PTR [rbx+0x50]
   14002c226:	mov    r8,rdi
   14002c229:	mov    DWORD PTR [rax],ecx
   14002c22b:	mov    rax,QWORD PTR [rbx+0x20]
   14002c22f:	mov    QWORD PTR [rax],rcx
   14002c232:	mov    rax,QWORD PTR [rbx+0x40]
   14002c236:	mov    QWORD PTR [rax],rcx
   14002c239:	mov    rax,QWORD PTR [rbx+0x58]
   14002c23d:	mov    DWORD PTR [rax],ecx
   14002c23f:	movzx  eax,BYTE PTR [rsp+0x60]
   14002c244:	mov    rcx,rbp
   14002c247:	mov    BYTE PTR [rsp+0x28],al
   14002c24b:	mov    DWORD PTR [rsp+0x20],esi
   14002c24f:	call   0x14000d600
   14002c254:	int3   
   14002c255:	int3   
   14002c256:	int3   
   14002c257:	int3   
   14002c258:	int3   
   14002c259:	int3   
   14002c25a:	int3   
   14002c25b:	int3   
   14002c25c:	int3   
   14002c25d:	int3   
   14002c25e:	int3   
   14002c25f:	int3   
   14002c260:	mov    QWORD PTR [rsp+0x10],rbx
   14002c265:	mov    QWORD PTR [rsp+0x18],rbp
   14002c26a:	mov    QWORD PTR [rsp+0x20],rsi
   14002c26f:	push   rdi
   14002c270:	sub    rsp,0x50
   14002c274:	movups xmm3,XMMWORD PTR [r8]
   14002c278:	movsd  xmm0,QWORD PTR [r8+0x10]
   14002c27e:	mov    esi,r9d
   14002c281:	mov    rbp,rdx
   14002c284:	mov    rbx,rcx
   14002c287:	movups xmm1,xmm3
   14002c28a:	movups xmm2,xmm3
   14002c28d:	movq   rdi,xmm3
   14002c292:	psrldq xmm1,0x8
   14002c297:	psrldq xmm2,0x8
   14002c29c:	psrldq xmm3,0x8
   14002c2a1:	movq   rax,xmm1
   14002c2a6:	movsd  QWORD PTR [rsp+0x40],xmm0
   14002c2ac:	movsd  QWORD PTR [rsp+0x40],xmm0
   14002c2b2:	sub    rdi,rax
   14002c2b5:	movq   rax,xmm2
   14002c2ba:	movsd  QWORD PTR [rsp+0x40],xmm0
   14002c2c0:	add    rdi,rax
   14002c2c3:	movq   rax,xmm3
   14002c2c8:	add    rdi,rax
   14002c2cb:	mov    rax,QWORD PTR [rcx+0x40]
   14002c2cf:	cmp    QWORD PTR [rax],0x0
   14002c2d3:	je     0x14002c2db
   14002c2d5:	call   QWORD PTR [rip+0x9efd]        # 0x1400361d8
   14002c2db:	mov    rax,QWORD PTR [rbx+0x18]
   14002c2df:	xor    ecx,ecx
   14002c2e1:	lea    rdx,[rbx+0x70]
   14002c2e5:	mov    QWORD PTR [rax],rcx
   14002c2e8:	mov    rax,QWORD PTR [rbx+0x38]
   14002c2ec:	xor    r9d,r9d
   14002c2ef:	mov    QWORD PTR [rax],rcx
   14002c2f2:	mov    rax,QWORD PTR [rbx+0x50]
   14002c2f6:	mov    r8,rdi
   14002c2f9:	mov    DWORD PTR [rax],ecx
   14002c2fb:	mov    rax,QWORD PTR [rbx+0x20]
   14002c2ff:	mov    QWORD PTR [rax],rcx
   14002c302:	mov    rax,QWORD PTR [rbx+0x40]
   14002c306:	mov    QWORD PTR [rax],rcx
   14002c309:	mov    rax,QWORD PTR [rbx+0x58]
   14002c30d:	mov    DWORD PTR [rax],ecx
   14002c30f:	movzx  eax,BYTE PTR [rsp+0x60]
   14002c314:	mov    rcx,rbp
   14002c317:	mov    BYTE PTR [rsp+0x28],al
   14002c31b:	mov    DWORD PTR [rsp+0x20],esi
   14002c31f:	call   0x14000d740
   14002c324:	int3   
   14002c325:	int3   
   14002c326:	int3   
   14002c327:	int3   
   14002c328:	int3   
   14002c329:	int3   
   14002c32a:	int3   
   14002c32b:	int3   
   14002c32c:	int3   
   14002c32d:	int3   
   14002c32e:	int3   
   14002c32f:	int3   
   14002c330:	mov    rax,rdx
   14002c333:	ret    
   14002c334:	int3   
   14002c335:	int3   
   14002c336:	int3   
   14002c337:	int3   
   14002c338:	int3   
   14002c339:	int3   
   14002c33a:	int3   
   14002c33b:	int3   
   14002c33c:	int3   
   14002c33d:	int3   
   14002c33e:	int3   
   14002c33f:	int3   
   14002c340:	mov    rax,rdx
   14002c343:	ret    
   14002c344:	int3   
   14002c345:	int3   
   14002c346:	int3   
   14002c347:	int3   
   14002c348:	int3   
   14002c349:	int3   
   14002c34a:	int3   
   14002c34b:	int3   
   14002c34c:	int3   
   14002c34d:	int3   
   14002c34e:	int3   
   14002c34f:	int3   
   14002c350:	mov    rax,rdx
   14002c353:	ret    
   14002c354:	int3   
   14002c355:	int3   
   14002c356:	int3   
   14002c357:	int3   
   14002c358:	int3   
   14002c359:	int3   
   14002c35a:	int3   
   14002c35b:	int3   
   14002c35c:	int3   
   14002c35d:	int3   
   14002c35e:	int3   
   14002c35f:	int3   
   14002c360:	mov    rax,rdx
   14002c363:	ret    
   14002c364:	int3   
   14002c365:	int3   
   14002c366:	int3   
   14002c367:	int3   
   14002c368:	int3   
   14002c369:	int3   
   14002c36a:	int3   
   14002c36b:	int3   
   14002c36c:	int3   
   14002c36d:	int3   
   14002c36e:	int3   
   14002c36f:	int3   
   14002c370:	mov    rax,rdx
   14002c373:	ret    
   14002c374:	int3   
   14002c375:	int3   
   14002c376:	int3   
   14002c377:	int3   
   14002c378:	int3   
   14002c379:	int3   
   14002c37a:	int3   
   14002c37b:	int3   
   14002c37c:	int3   
   14002c37d:	int3   
   14002c37e:	int3   
   14002c37f:	int3   
   14002c380:	mov    rax,rdx
   14002c383:	ret    
   14002c384:	int3   
   14002c385:	int3   
   14002c386:	int3   
   14002c387:	int3   
   14002c388:	int3   
   14002c389:	int3   
   14002c38a:	int3   
   14002c38b:	int3   
   14002c38c:	int3   
   14002c38d:	int3   
   14002c38e:	int3   
   14002c38f:	int3   
   14002c390:	mov    rax,rcx
   14002c393:	ret    
   14002c394:	int3   
   14002c395:	int3   
   14002c396:	int3   
   14002c397:	int3   
   14002c398:	int3   
   14002c399:	int3   
   14002c39a:	int3   
   14002c39b:	int3   
   14002c39c:	int3   
   14002c39d:	int3   
   14002c39e:	int3   
   14002c39f:	int3   
   14002c3a0:	mov    rax,rcx
   14002c3a3:	ret    
   14002c3a4:	int3   
   14002c3a5:	int3   
   14002c3a6:	int3   
   14002c3a7:	int3   
   14002c3a8:	int3   
   14002c3a9:	int3   
   14002c3aa:	int3   
   14002c3ab:	int3   
   14002c3ac:	int3   
   14002c3ad:	int3   
   14002c3ae:	int3   
   14002c3af:	int3   
   14002c3b0:	mov    rax,rcx
   14002c3b3:	ret    
   14002c3b4:	int3   
   14002c3b5:	int3   
   14002c3b6:	int3   
   14002c3b7:	int3   
   14002c3b8:	int3   
   14002c3b9:	int3   
   14002c3ba:	int3   
   14002c3bb:	int3   
   14002c3bc:	int3   
   14002c3bd:	int3   
   14002c3be:	int3   
   14002c3bf:	int3   
   14002c3c0:	mov    r9,QWORD PTR [rcx]
   14002c3c3:	lea    rax,[r9+rdx*1]
   14002c3c7:	mov    QWORD PTR [rcx+0x10],rax
   14002c3cb:	lea    rax,[r9+r8*1]
   14002c3cf:	mov    QWORD PTR [rcx+0x18],rax
   14002c3d3:	ret    
   14002c3d4:	int3   
   14002c3d5:	int3   
   14002c3d6:	int3   
   14002c3d7:	int3   
   14002c3d8:	int3   
   14002c3d9:	int3   
   14002c3da:	int3   
   14002c3db:	int3   
   14002c3dc:	int3   
   14002c3dd:	int3   
   14002c3de:	int3   
   14002c3df:	int3   
   14002c3e0:	mov    rax,QWORD PTR [rcx]
   14002c3e3:	rex.W jmp QWORD PTR [rax+0x90]
   14002c3ea:	int3   
   14002c3eb:	int3   
   14002c3ec:	int3   
   14002c3ed:	int3   
   14002c3ee:	int3   
   14002c3ef:	int3   
   14002c3f0:	and    DWORD PTR [rcx+0xa8],0xfffffffb
   14002c3f7:	neg    dl
   14002c3f9:	sbb    eax,eax
   14002c3fb:	and    eax,0x4
   14002c3fe:	or     DWORD PTR [rcx+0xa8],eax
   14002c404:	ret    
   14002c405:	int3   
   14002c406:	int3   
   14002c407:	int3   
   14002c408:	int3   
   14002c409:	int3   
   14002c40a:	int3   
   14002c40b:	int3   
   14002c40c:	int3   
   14002c40d:	int3   
   14002c40e:	int3   
   14002c40f:	int3   
   14002c410:	and    DWORD PTR [rcx+0xa8],0xfffffffb
   14002c417:	neg    dl
   14002c419:	sbb    eax,eax
   14002c41b:	and    eax,0x4
   14002c41e:	or     DWORD PTR [rcx+0xa8],eax
   14002c424:	ret    
   14002c425:	int3   
   14002c426:	int3   
   14002c427:	int3   
   14002c428:	int3   
   14002c429:	int3   
   14002c42a:	int3   
   14002c42b:	int3   
   14002c42c:	int3   
   14002c42d:	int3   
   14002c42e:	int3   
   14002c42f:	int3   
   14002c430:	and    DWORD PTR [rcx+0x98],0xfffffffb
   14002c437:	neg    dl
   14002c439:	sbb    eax,eax
   14002c43b:	and    eax,0x4
   14002c43e:	or     DWORD PTR [rcx+0x98],eax
   14002c444:	ret    
   14002c445:	int3   
   14002c446:	int3   
   14002c447:	int3   
   14002c448:	int3   
   14002c449:	int3   
   14002c44a:	int3   
   14002c44b:	int3   
   14002c44c:	int3   
   14002c44d:	int3   
   14002c44e:	int3   
   14002c44f:	int3   
   14002c450:	and    DWORD PTR [rcx+0xa0],0xfffffffb
   14002c457:	neg    dl
   14002c459:	sbb    eax,eax
   14002c45b:	and    eax,0x4
   14002c45e:	or     DWORD PTR [rcx+0xa0],eax
   14002c464:	ret    
   14002c465:	int3   
   14002c466:	int3   
   14002c467:	int3   
   14002c468:	int3   
   14002c469:	int3   
   14002c46a:	int3   
   14002c46b:	int3   
   14002c46c:	int3   
   14002c46d:	int3   
   14002c46e:	int3   
   14002c46f:	int3   
   14002c470:	mov    QWORD PTR [rcx+0x8],rdx
   14002c474:	mov    rax,QWORD PTR [rdx]
   14002c477:	mov    QWORD PTR [rax+0x10],rcx
   14002c47b:	ret    
   14002c47c:	int3   
   14002c47d:	int3   
   14002c47e:	int3   
   14002c47f:	int3   
   14002c480:	and    DWORD PTR [rcx+0x68],0xfffffff9
   14002c484:	ret    
   14002c485:	int3   
   14002c486:	int3   
   14002c487:	int3   
   14002c488:	int3   
   14002c489:	int3   
   14002c48a:	int3   
   14002c48b:	int3   
   14002c48c:	int3   
   14002c48d:	int3   
   14002c48e:	int3   
   14002c48f:	int3   
   14002c490:	mov    rax,QWORD PTR [rcx]
   14002c493:	rex.W jmp QWORD PTR [rax+0x78]
   14002c497:	int3   
   14002c498:	int3   
   14002c499:	int3   
   14002c49a:	int3   
   14002c49b:	int3   
   14002c49c:	int3   
   14002c49d:	int3   
   14002c49e:	int3   
   14002c49f:	int3   
   14002c4a0:	mov    QWORD PTR [rcx+0x88],rdx
   14002c4a7:	ret    
   14002c4a8:	int3   
   14002c4a9:	int3   
   14002c4aa:	int3   
   14002c4ab:	int3   
   14002c4ac:	int3   
   14002c4ad:	int3   
   14002c4ae:	int3   
   14002c4af:	int3   
   14002c4b0:	mov    QWORD PTR [rcx+0x88],rdx
   14002c4b7:	ret    
   14002c4b8:	int3   
   14002c4b9:	int3   
   14002c4ba:	int3   
   14002c4bb:	int3   
   14002c4bc:	int3   
   14002c4bd:	int3   
   14002c4be:	int3   
   14002c4bf:	int3   
   14002c4c0:	mov    QWORD PTR [rcx+0x78],rdx
   14002c4c4:	ret    
   14002c4c5:	int3   
   14002c4c6:	int3   
   14002c4c7:	int3   
   14002c4c8:	int3   
   14002c4c9:	int3   
   14002c4ca:	int3   
   14002c4cb:	int3   
   14002c4cc:	int3   
   14002c4cd:	int3   
   14002c4ce:	int3   
   14002c4cf:	int3   
   14002c4d0:	mov    QWORD PTR [rcx+0x80],rdx
   14002c4d7:	ret    
   14002c4d8:	int3   
   14002c4d9:	int3   
   14002c4da:	int3   
   14002c4db:	int3   
   14002c4dc:	int3   
   14002c4dd:	int3   
   14002c4de:	int3   
   14002c4df:	int3   
   14002c4e0:	ret    0x0
   14002c4e3:	int3   
   14002c4e4:	int3   
   14002c4e5:	int3   
   14002c4e6:	int3   
   14002c4e7:	int3   
   14002c4e8:	int3   
   14002c4e9:	int3   
   14002c4ea:	int3   
   14002c4eb:	int3   
   14002c4ec:	int3   
   14002c4ed:	int3   
   14002c4ee:	int3   
   14002c4ef:	int3   
   14002c4f0:	mov    rax,QWORD PTR [rcx+0x38]
   14002c4f4:	mov    r10,rcx
   14002c4f7:	mov    r9,QWORD PTR [rax]
   14002c4fa:	mov    rax,QWORD PTR [rcx+0x50]
   14002c4fe:	movsxd r8,DWORD PTR [rax]
   14002c501:	mov    rax,QWORD PTR [rcx+0x78]
   14002c505:	mov    rdx,QWORD PTR [rax]
   14002c508:	add    r8,r9
   14002c50b:	mov    rax,QWORD PTR [rdx]
   14002c50e:	sub    r8d,r9d
   14002c511:	mov    rdx,QWORD PTR [rax+0x10]
   14002c515:	mov    rax,QWORD PTR [rcx+0x18]
   14002c519:	mov    rax,QWORD PTR [rax]
   14002c51c:	mov    rcx,QWORD PTR [rdx+0x18]
   14002c520:	mov    QWORD PTR [rcx],rax
   14002c523:	mov    rax,QWORD PTR [rdx+0x38]
   14002c527:	mov    QWORD PTR [rax],r9
   14002c52a:	mov    rax,QWORD PTR [rdx+0x50]
   14002c52e:	mov    DWORD PTR [rax],r8d
   14002c531:	mov    rax,QWORD PTR [r10+0x58]
   14002c535:	movsxd r8,DWORD PTR [rax]
   14002c538:	mov    rax,QWORD PTR [r10+0x40]
   14002c53c:	add    r8,QWORD PTR [rax]
   14002c53f:	mov    rax,QWORD PTR [r10+0x20]
   14002c543:	mov    rdx,QWORD PTR [rax]
   14002c546:	mov    rax,QWORD PTR [r10+0x78]
   14002c54a:	mov    rcx,QWORD PTR [rax]
   14002c54d:	sub    r8d,edx
   14002c550:	mov    rax,QWORD PTR [rcx]
   14002c553:	mov    rcx,QWORD PTR [rax+0x10]
   14002c557:	mov    rax,QWORD PTR [rcx+0x20]
   14002c55b:	mov    QWORD PTR [rax],rdx
   14002c55e:	mov    rax,QWORD PTR [rcx+0x40]
   14002c562:	mov    QWORD PTR [rax],rdx
   14002c565:	mov    rax,QWORD PTR [rcx+0x58]
   14002c569:	mov    DWORD PTR [rax],r8d
   14002c56c:	mov    rax,QWORD PTR [r10+0x78]
   14002c570:	mov    rcx,QWORD PTR [rax]
   14002c573:	mov    rax,QWORD PTR [rcx]
   14002c576:	mov    rcx,QWORD PTR [r10+0x40]
   14002c57a:	mov    r8,QWORD PTR [rax+0x10]
   14002c57e:	mov    rax,QWORD PTR [r10+0x20]
   14002c582:	mov    edx,DWORD PTR [rcx]
   14002c584:	sub    edx,DWORD PTR [rax]
   14002c586:	mov    rax,QWORD PTR [r8+0x58]
   14002c58a:	sub    DWORD PTR [rax],edx
   14002c58c:	mov    rcx,QWORD PTR [r8+0x40]
   14002c590:	movsxd rax,edx
   14002c593:	add    QWORD PTR [rcx],rax
   14002c596:	ret    
   14002c597:	int3   
   14002c598:	int3   
   14002c599:	int3   
   14002c59a:	int3   
   14002c59b:	int3   
   14002c59c:	int3   
   14002c59d:	int3   
   14002c59e:	int3   
   14002c59f:	int3   
   14002c5a0:	and    DWORD PTR [rcx+0x68],0xfffffffe
   14002c5a4:	xor    eax,eax
   14002c5a6:	test   dl,dl
   14002c5a8:	setne  al
   14002c5ab:	or     DWORD PTR [rcx+0x68],eax
   14002c5ae:	ret    
   14002c5af:	int3   
   14002c5b0:	rex push rbx
   14002c5b2:	sub    rsp,0x20
   14002c5b6:	mov    rbx,rcx
   14002c5b9:	mov    rcx,QWORD PTR [rcx+0x90]
   14002c5c0:	mov    r9,r8
   14002c5c3:	test   rcx,rcx
   14002c5c6:	je     0x14002c659
   14002c5cc:	test   rdx,rdx
   14002c5cf:	jne    0x14002c5dc
   14002c5d1:	test   r8,r8
   14002c5d4:	jne    0x14002c5dc
   14002c5d6:	lea    r8d,[r9+0x4]
   14002c5da:	jmp    0x14002c5df
   14002c5dc:	xor    r8d,r8d
   14002c5df:	call   QWORD PTR [rip+0x9ebb]        # 0x1400364a0
   14002c5e5:	test   eax,eax
   14002c5e7:	jne    0x14002c659
   14002c5e9:	mov    rcx,rbx
   14002c5ec:	mov    QWORD PTR [rsp+0x30],rdi
   14002c5f1:	mov    rdi,QWORD PTR [rbx+0x90]
   14002c5f8:	mov    BYTE PTR [rbx+0x88],0x1
   14002c5ff:	mov    BYTE PTR [rbx+0x81],al
   14002c605:	call   QWORD PTR [rip+0x9b9d]        # 0x1400361a8
   14002c60b:	test   rdi,rdi
   14002c60e:	je     0x14002c630
   14002c610:	lea    rax,[rdi+0x10]
   14002c614:	mov    QWORD PTR [rbx+0x38],rdi
   14002c618:	mov    QWORD PTR [rbx+0x40],rdi
   14002c61c:	mov    QWORD PTR [rbx+0x18],rax
   14002c620:	mov    QWORD PTR [rbx+0x20],rax
   14002c624:	lea    rax,[rdi+0x8]
   14002c628:	mov    QWORD PTR [rbx+0x50],rax
   14002c62c:	mov    QWORD PTR [rbx+0x58],rax
   14002c630:	mov    QWORD PTR [rbx+0x90],rdi
   14002c637:	mov    eax,DWORD PTR [rip+0x2b383]        # 0x1400579c0
   14002c63d:	mov    rdi,QWORD PTR [rsp+0x30]
   14002c642:	mov    DWORD PTR [rbx+0x84],eax
   14002c648:	mov    QWORD PTR [rbx+0x78],0x0
   14002c650:	mov    rax,rbx
   14002c653:	add    rsp,0x20
   14002c657:	pop    rbx
   14002c658:	ret    
   14002c659:	xor    eax,eax
   14002c65b:	add    rsp,0x20
   14002c65f:	pop    rbx
   14002c660:	ret    
   14002c661:	int3   
   14002c662:	int3   
   14002c663:	int3   
   14002c664:	int3   
   14002c665:	int3   
   14002c666:	int3   
   14002c667:	int3   
   14002c668:	int3   
   14002c669:	int3   
   14002c66a:	int3   
   14002c66b:	int3   
   14002c66c:	int3   
   14002c66d:	int3   
   14002c66e:	int3   
   14002c66f:	int3   
   14002c670:	mov    QWORD PTR [rsp+0x18],rbx
   14002c675:	push   rbp
   14002c676:	lea    rbp,[rsp-0x57]
   14002c67b:	sub    rsp,0xb0
   14002c682:	movups xmm0,XMMWORD PTR [rip+0x2b2e7]        # 0x140057970
   14002c689:	xor    eax,eax
   14002c68b:	mov    rbx,rcx
   14002c68e:	mov    QWORD PTR [rbp+0x3f],rax
   14002c692:	mov    QWORD PTR [rbp+0x47],rax
   14002c696:	mov    QWORD PTR [rbp+0x4f],rax
   14002c69a:	movups XMMWORD PTR [rbp-0x39],xmm0
   14002c69e:	lea    rax,[rip+0x2b2cb]        # 0x140057970
   14002c6a5:	lea    r8,[rbp-0x25]
   14002c6a9:	lea    rdx,[rbp-0x39]
   14002c6ad:	mov    QWORD PTR [rbp+0x6f],rax
   14002c6b1:	mov    eax,DWORD PTR [rip+0x2b2c9]        # 0x140057980
   14002c6b7:	lea    rcx,[rbp-0x19]
   14002c6bb:	mov    DWORD PTR [rbp-0x19],0x67452301
   14002c6c2:	mov    DWORD PTR [rbp-0x15],0xefcdab89
   14002c6c9:	mov    DWORD PTR [rbp-0x11],0x98badcfe
   14002c6d0:	mov    DWORD PTR [rbp-0x29],eax
   14002c6d3:	mov    DWORD PTR [rbp-0xd],0x10325476
   14002c6da:	mov    DWORD PTR [rbp-0x9],0xc3d2e1f0
   14002c6e1:	call   0x140028250
   14002c6e6:	lea    r8,[rbp+0x77]
   14002c6ea:	lea    rdx,[rbp+0x6f]
   14002c6ee:	lea    rcx,[rbp-0x19]
   14002c6f2:	call   0x140028250
   14002c6f7:	xor    ecx,ecx
   14002c6f9:	call   QWORD PTR [rip+0x9ce9]        # 0x1400363e8
   14002c6ff:	lea    r8,[rbp+0x6f]
   14002c703:	lea    rdx,[rbp+0x67]
   14002c707:	lea    rcx,[rbp-0x19]
   14002c70b:	mov    QWORD PTR [rbp+0x67],rax
   14002c70f:	call   0x140028250
   14002c714:	call   QWORD PTR [rip+0x9cde]        # 0x1400363f8
   14002c71a:	lea    r8,[rbp+0x6b]
   14002c71e:	lea    rdx,[rbp+0x67]
   14002c722:	lea    rcx,[rbp-0x19]
   14002c726:	mov    DWORD PTR [rbp+0x67],eax
   14002c729:	call   0x140028250
   14002c72e:	call   QWORD PTR [rip+0x9d44]        # 0x140036478
   14002c734:	mov    DWORD PTR [rbp-0x39],eax
   14002c737:	call   QWORD PTR [rip+0x9d3b]        # 0x140036478
   14002c73d:	mov    DWORD PTR [rbp-0x35],eax
   14002c740:	call   QWORD PTR [rip+0x9d32]        # 0x140036478
   14002c746:	lea    r8,[rbp-0x2d]
   14002c74a:	lea    rdx,[rbp-0x39]
   14002c74e:	lea    rcx,[rbp-0x19]
   14002c752:	mov    DWORD PTR [rbp-0x31],eax
   14002c755:	call   0x140028250
   14002c75a:	mov    r9,QWORD PTR [rbx+0x18]
   14002c75e:	test   r9,r9
   14002c761:	je     0x14002c776
   14002c763:	mov    edx,0x1
   14002c768:	lea    rcx,[rbp-0x39]
   14002c76c:	lea    r8d,[rdx+0x13]
   14002c770:	call   QWORD PTR [rip+0x9d7a]        # 0x1400364f0
   14002c776:	lea    r8,[rbp-0x25]
   14002c77a:	lea    rdx,[rbp-0x39]
   14002c77e:	lea    rcx,[rbp-0x19]
   14002c782:	call   0x140028250
   14002c787:	mov    ecx,0x4
   14002c78c:	call   0x14003027c
   14002c791:	lea    rcx,[rbp-0x19]
   14002c795:	lea    r8,[rax+0x4]
   14002c799:	mov    rdx,rax
   14002c79c:	mov    QWORD PTR [rbp+0x67],rax
   14002c7a0:	call   0x140028250
   14002c7a5:	lea    r8,[rbp+0x6f]
   14002c7a9:	lea    rdx,[rbp+0x67]
   14002c7ad:	lea    rcx,[rbp-0x19]
   14002c7b1:	call   0x140028250
   14002c7b6:	mov    rcx,QWORD PTR [rbp+0x67]
   14002c7ba:	call   0x140030282
   14002c7bf:	lea    r8,[rbx+0x14]
   14002c7c3:	lea    rcx,[rbp-0x19]
   14002c7c7:	mov    rdx,rbx
   14002c7ca:	call   0x140028250
   14002c7cf:	lea    rdx,[rbp-0x39]
   14002c7d3:	lea    rcx,[rbp-0x19]
   14002c7d7:	call   0x140024560
   14002c7dc:	mov    rcx,QWORD PTR [rbp+0x6f]
   14002c7e0:	mov    eax,DWORD PTR [rbp-0x39]
   14002c7e3:	xor    DWORD PTR [rcx],eax
   14002c7e5:	xor    DWORD PTR [rbx],eax
   14002c7e7:	mov    eax,DWORD PTR [rbp-0x35]
   14002c7ea:	xor    DWORD PTR [rcx+0x4],eax
   14002c7ed:	xor    DWORD PTR [rbx+0x4],eax
   14002c7f0:	mov    eax,DWORD PTR [rbp-0x31]
   14002c7f3:	xor    DWORD PTR [rcx+0x8],eax
   14002c7f6:	xor    DWORD PTR [rbx+0x8],eax
   14002c7f9:	mov    eax,DWORD PTR [rbp-0x2d]
   14002c7fc:	xor    DWORD PTR [rcx+0xc],eax
   14002c7ff:	xor    DWORD PTR [rbx+0xc],eax
   14002c802:	mov    eax,DWORD PTR [rbp-0x29]
   14002c805:	xor    DWORD PTR [rcx+0x10],eax
   14002c808:	xor    DWORD PTR [rbx+0x10],eax
   14002c80b:	mov    rbx,QWORD PTR [rsp+0xd0]
   14002c813:	add    rsp,0xb0
   14002c81a:	pop    rbp
   14002c81b:	ret    
   14002c81c:	int3   
   14002c81d:	int3   
   14002c81e:	int3   
   14002c81f:	int3   
   14002c820:	lea    rax,[rip+0x2b149]        # 0x140057970
   14002c827:	ret    
   14002c828:	int3   
   14002c829:	int3   
   14002c82a:	int3   
   14002c82b:	int3   
   14002c82c:	int3   
   14002c82d:	int3   
   14002c82e:	int3   
   14002c82f:	int3   
   14002c830:	xor    al,al
   14002c832:	ret    
   14002c833:	int3   
   14002c834:	int3   
   14002c835:	int3   
   14002c836:	int3   
   14002c837:	int3   
   14002c838:	int3   
   14002c839:	int3   
   14002c83a:	int3   
   14002c83b:	int3   
   14002c83c:	int3   
   14002c83d:	int3   
   14002c83e:	int3   
   14002c83f:	int3   
   14002c840:	xor    al,al
   14002c842:	ret    
   14002c843:	int3   
   14002c844:	int3   
   14002c845:	int3   
   14002c846:	int3   
   14002c847:	int3   
   14002c848:	int3   
   14002c849:	int3   
   14002c84a:	int3   
   14002c84b:	int3   
   14002c84c:	int3   
   14002c84d:	int3   
   14002c84e:	int3   
   14002c84f:	int3   
   14002c850:	xor    al,al
   14002c852:	ret    
   14002c853:	int3   
   14002c854:	int3   
   14002c855:	int3   
   14002c856:	int3   
   14002c857:	int3   
   14002c858:	int3   
   14002c859:	int3   
   14002c85a:	int3   
   14002c85b:	int3   
   14002c85c:	int3   
   14002c85d:	int3   
   14002c85e:	int3   
   14002c85f:	int3   
   14002c860:	xor    al,al
   14002c862:	ret    
   14002c863:	int3   
   14002c864:	int3   
   14002c865:	int3   
   14002c866:	int3   
   14002c867:	int3   
   14002c868:	int3   
   14002c869:	int3   
   14002c86a:	int3   
   14002c86b:	int3   
   14002c86c:	int3   
   14002c86d:	int3   
   14002c86e:	int3   
   14002c86f:	int3   
   14002c870:	mov    QWORD PTR [rsp+0x8],rbx
   14002c875:	push   rdi
   14002c876:	sub    rsp,0x20
   14002c87a:	mov    rax,rcx
   14002c87d:	mov    rcx,QWORD PTR [rcx+0x28]
   14002c881:	mov    r8,QWORD PTR [rax+0x18]
   14002c885:	cmp    r8,0x10
   14002c889:	jb     0x14002c890
   14002c88b:	mov    rdx,QWORD PTR [rax]
   14002c88e:	jmp    0x14002c893
   14002c890:	mov    rdx,rax
   14002c893:	mov    r9,QWORD PTR [rax+0x10]
   14002c897:	lea    rbx,[r9+rdx*1]
   14002c89b:	cmp    r8,0x10
   14002c89f:	jb     0x14002c8a6
   14002c8a1:	mov    rdx,QWORD PTR [rax]
   14002c8a4:	jmp    0x14002c8a9
   14002c8a6:	mov    rdx,rax
   14002c8a9:	lea    rdi,[r9+rdx*1]
   14002c8ad:	movzx  edx,BYTE PTR [rax+0x20]
   14002c8b1:	mov    r8,rdi
   14002c8b4:	sub    r8,rcx
   14002c8b7:	call   QWORD PTR [rip+0x9bb3]        # 0x140036470
   14002c8bd:	test   rax,rax
   14002c8c0:	cmovne rdi,rax
   14002c8c4:	cmp    rdi,rbx
   14002c8c7:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c8cc:	sete   al
   14002c8cf:	add    rsp,0x20
   14002c8d3:	pop    rdi
   14002c8d4:	ret    
   14002c8d5:	int3   
   14002c8d6:	int3   
   14002c8d7:	int3   
   14002c8d8:	int3   
   14002c8d9:	int3   
   14002c8da:	int3   
   14002c8db:	int3   
   14002c8dc:	int3   
   14002c8dd:	int3   
   14002c8de:	int3   
   14002c8df:	int3   
   14002c8e0:	mov    rax,QWORD PTR [rcx+0x8]
   14002c8e4:	ret    
   14002c8e5:	int3   
   14002c8e6:	int3   
   14002c8e7:	int3   
   14002c8e8:	int3   
   14002c8e9:	int3   
   14002c8ea:	int3   
   14002c8eb:	int3   
   14002c8ec:	int3   
   14002c8ed:	int3   
   14002c8ee:	int3   
   14002c8ef:	int3   
   14002c8f0:	mov    rax,QWORD PTR [rcx+0x10]
   14002c8f4:	ret    
   14002c8f5:	int3   
   14002c8f6:	int3   
   14002c8f7:	int3   
   14002c8f8:	int3   
   14002c8f9:	int3   
   14002c8fa:	int3   
   14002c8fb:	int3   
   14002c8fc:	int3   
   14002c8fd:	int3   
   14002c8fe:	int3   
   14002c8ff:	int3   
   14002c900:	test   rcx,rcx
   14002c903:	je     0x14002c90a
   14002c905:	mov    rax,QWORD PTR [rcx+0x7]
   14002c909:	ret    
   14002c90a:	xor    eax,eax
   14002c90c:	mov    rax,QWORD PTR [rax+0x18]
   14002c910:	ret    
   14002c911:	int3   
   14002c912:	int3   
   14002c913:	int3   
   14002c914:	int3   
   14002c915:	int3   
   14002c916:	int3   
   14002c917:	int3   
   14002c918:	int3   
   14002c919:	int3   
   14002c91a:	int3   
   14002c91b:	int3   
   14002c91c:	int3   
   14002c91d:	int3   
   14002c91e:	int3   
   14002c91f:	int3   
   14002c920:	mov    rdx,QWORD PTR [rcx+0x8]
   14002c924:	movabs rax,0x2aaaaaaaaaaaaaab
   14002c92e:	sub    rdx,QWORD PTR [rcx]
   14002c931:	imul   rdx
   14002c934:	sar    rdx,0x4
   14002c938:	mov    rax,rdx
   14002c93b:	shr    rax,0x3f
   14002c93f:	add    rax,rdx
   14002c942:	ret    
   14002c943:	int3   
   14002c944:	int3   
   14002c945:	int3   
   14002c946:	int3   
   14002c947:	int3   
   14002c948:	int3   
   14002c949:	int3   
   14002c94a:	int3   
   14002c94b:	int3   
   14002c94c:	int3   
   14002c94d:	int3   
   14002c94e:	int3   
   14002c94f:	int3   
   14002c950:	mov    rax,QWORD PTR [rcx+0x8]
   14002c954:	sub    rax,QWORD PTR [rcx]
   14002c957:	sar    rax,0x5
   14002c95b:	ret    
   14002c95c:	int3   
   14002c95d:	int3   
   14002c95e:	int3   
   14002c95f:	int3   
   14002c960:	mov    eax,0x10
   14002c965:	ret    
   14002c966:	int3   
   14002c967:	int3   
   14002c968:	int3   
   14002c969:	int3   
   14002c96a:	int3   
   14002c96b:	int3   
   14002c96c:	int3   
   14002c96d:	int3   
   14002c96e:	int3   
   14002c96f:	int3   
   14002c970:	mov    rax,QWORD PTR [rcx+0x18]
   14002c974:	ret    
   14002c975:	int3   
   14002c976:	int3   
   14002c977:	int3   
   14002c978:	int3   
   14002c979:	int3   
   14002c97a:	int3   
   14002c97b:	int3   
   14002c97c:	int3   
   14002c97d:	int3   
   14002c97e:	int3   
   14002c97f:	int3   
   14002c980:	mov    QWORD PTR [rsp+0x8],rcx
   14002c985:	mov    QWORD PTR [rsp+0x10],rdx
   14002c98a:	mov    QWORD PTR [rsp+0x18],r8
   14002c98f:	mov    QWORD PTR [rsp+0x20],r9
   14002c994:	ret    
   14002c995:	int3   
   14002c996:	int3   
   14002c997:	int3   
   14002c998:	int3   
   14002c999:	int3   
   14002c99a:	int3   
   14002c99b:	int3   
   14002c99c:	int3   
   14002c99d:	int3   
   14002c99e:	int3   
   14002c99f:	int3   
   14002c9a0:	mov    eax,DWORD PTR [rcx+0x10]
   14002c9a3:	ret    
   14002c9a4:	int3   
   14002c9a5:	int3   
   14002c9a6:	int3   
   14002c9a7:	int3   
   14002c9a8:	int3   
   14002c9a9:	int3   
   14002c9aa:	int3   
   14002c9ab:	int3   
   14002c9ac:	int3   
   14002c9ad:	int3   
   14002c9ae:	int3   
   14002c9af:	int3   
   14002c9b0:	mov    rax,QWORD PTR [rcx]
   14002c9b3:	add    rax,0x40
   14002c9b7:	ret    
   14002c9b8:	int3   
   14002c9b9:	int3   
   14002c9ba:	int3   
   14002c9bb:	int3   
   14002c9bc:	int3   
   14002c9bd:	int3   
   14002c9be:	int3   
   14002c9bf:	int3   
   14002c9c0:	mov    rax,QWORD PTR [rcx]
   14002c9c3:	add    rax,0x48
   14002c9c7:	ret    
   14002c9c8:	int3   
   14002c9c9:	int3   
   14002c9ca:	int3   
   14002c9cb:	int3   
   14002c9cc:	int3   
   14002c9cd:	int3   
   14002c9ce:	int3   
   14002c9cf:	int3   
   14002c9d0:	mov    eax,0x10
   14002c9d5:	ret    
   14002c9d6:	int3   
   14002c9d7:	int3   
   14002c9d8:	int3   
   14002c9d9:	int3   
   14002c9da:	int3   
   14002c9db:	int3   
   14002c9dc:	int3   
   14002c9dd:	int3   
   14002c9de:	int3   
   14002c9df:	int3   
   14002c9e0:	rex push rbx
   14002c9e2:	sub    rsp,0x30
   14002c9e6:	add    rcx,0x8
   14002c9ea:	mov    rbx,rdx
   14002c9ed:	mov    DWORD PTR [rsp+0x20],0x0
   14002c9f5:	call   0x14002ca10
   14002c9fa:	mov    rax,rbx
   14002c9fd:	add    rsp,0x30
   14002ca01:	pop    rbx
   14002ca02:	ret    
   14002ca03:	int3   
   14002ca04:	int3   
   14002ca05:	int3   
   14002ca06:	int3   
   14002ca07:	int3   
   14002ca08:	int3   
   14002ca09:	int3   
   14002ca0a:	int3   
   14002ca0b:	int3   
   14002ca0c:	int3   
   14002ca0d:	int3   
   14002ca0e:	int3   
   14002ca0f:	int3   
   14002ca10:	mov    QWORD PTR [rsp+0x8],rbx
   14002ca15:	mov    QWORD PTR [rsp+0x10],rdi
   14002ca1a:	push   rbp
   14002ca1b:	mov    rbp,rsp
   14002ca1e:	sub    rsp,0x50
   14002ca22:	xor    edi,edi
   14002ca24:	mov    rbx,rdx
   14002ca27:	mov    edx,DWORD PTR [rcx+0x70]
   14002ca2a:	mov    DWORD PTR [rbp-0x30],edi
   14002ca2d:	test   dl,0x2
   14002ca30:	jne    0x14002ca6e
   14002ca32:	mov    rax,QWORD PTR [rcx+0x40]
   14002ca36:	mov    r9,QWORD PTR [rax]
   14002ca39:	test   r9,r9
   14002ca3c:	je     0x14002ca6e
   14002ca3e:	mov    r8,QWORD PTR [rcx+0x68]
   14002ca42:	mov    rax,QWORD PTR [rcx+0x20]
   14002ca46:	cmp    r8,r9
   14002ca49:	cmovb  r8,r9
   14002ca4d:	mov    rdx,QWORD PTR [rax]
   14002ca50:	lea    rcx,[rbp-0x28]
   14002ca54:	mov    QWORD PTR [rbp-0x10],0xf
   14002ca5c:	sub    r8,rdx
   14002ca5f:	mov    QWORD PTR [rbp-0x18],rdi
   14002ca63:	mov    BYTE PTR [rbp-0x28],dil
   14002ca67:	call   0x14001f070
   14002ca6c:	jmp    0x14002ca9f
   14002ca6e:	test   dl,0x4
   14002ca71:	jne    0x14002ca8f
   14002ca73:	mov    rax,QWORD PTR [rcx+0x38]
   14002ca77:	mov    rdx,QWORD PTR [rax]
   14002ca7a:	test   rdx,rdx
   14002ca7d:	je     0x14002ca8f
   14002ca7f:	mov    rax,QWORD PTR [rcx+0x50]
   14002ca83:	movsxd r8,DWORD PTR [rax]
   14002ca86:	mov    rax,QWORD PTR [rcx+0x18]
   14002ca8a:	add    r8,rdx
   14002ca8d:	jmp    0x14002ca4d
   14002ca8f:	mov    QWORD PTR [rbp-0x10],0xf
   14002ca97:	mov    QWORD PTR [rbp-0x18],rdi
   14002ca9b:	mov    BYTE PTR [rbp-0x28],dil
   14002ca9f:	mov    QWORD PTR [rbx+0x18],0xf
   14002caa7:	mov    QWORD PTR [rbx+0x10],rdi
   14002caab:	mov    BYTE PTR [rbx],dil
   14002caae:	mov    rcx,QWORD PTR [rbp-0x10]
   14002cab2:	cmp    rcx,0x10
   14002cab6:	jae    0x14002cad4
   14002cab8:	mov    r8,QWORD PTR [rbp-0x18]
   14002cabc:	inc    r8
   14002cabf:	je     0x14002cadb
   14002cac1:	lea    rdx,[rbp-0x28]
   14002cac5:	mov    rcx,rbx
   14002cac8:	call   QWORD PTR [rip+0x9992]        # 0x140036460
   14002cace:	mov    rcx,QWORD PTR [rbp-0x10]
   14002cad2:	jmp    0x14002cadb
   14002cad4:	mov    rax,QWORD PTR [rbp-0x28]
   14002cad8:	mov    QWORD PTR [rbx],rax
   14002cadb:	mov    rax,QWORD PTR [rbp-0x18]
   14002cadf:	mov    rdi,QWORD PTR [rsp+0x68]
   14002cae4:	mov    QWORD PTR [rbx+0x18],rcx
   14002cae8:	mov    QWORD PTR [rbx+0x10],rax
   14002caec:	mov    rax,rbx
   14002caef:	mov    rbx,QWORD PTR [rsp+0x60]
   14002caf4:	add    rsp,0x50
   14002caf8:	pop    rbp
   14002caf9:	ret    
   14002cafa:	int3   
   14002cafb:	int3   
   14002cafc:	int3   
   14002cafd:	int3   
   14002cafe:	int3   
   14002caff:	int3   
   14002cb00:	rex push rbx
   14002cb02:	sub    rsp,0x30
   14002cb06:	add    rcx,0x18
   14002cb0a:	mov    rbx,rdx
   14002cb0d:	mov    DWORD PTR [rsp+0x20],0x0
   14002cb15:	call   0x14002ca10
   14002cb1a:	mov    rax,rbx
   14002cb1d:	add    rsp,0x30
   14002cb21:	pop    rbx
   14002cb22:	ret    
   14002cb23:	int3   
   14002cb24:	int3   
   14002cb25:	int3   
   14002cb26:	int3   
   14002cb27:	int3   
   14002cb28:	int3   
   14002cb29:	int3   
   14002cb2a:	int3   
   14002cb2b:	int3   
   14002cb2c:	int3   
   14002cb2d:	int3   
   14002cb2e:	int3   
   14002cb2f:	int3   
   14002cb30:	mov    rax,QWORD PTR [rcx+0x8]
   14002cb34:	ret    
   14002cb35:	int3   
   14002cb36:	int3   
   14002cb37:	int3   
   14002cb38:	int3   
   14002cb39:	int3   
   14002cb3a:	int3   
   14002cb3b:	int3   
   14002cb3c:	int3   
   14002cb3d:	int3   
   14002cb3e:	int3   
   14002cb3f:	int3   
   14002cb40:	rex push rbx
   14002cb42:	sub    rsp,0x30
   14002cb46:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002cb4f:	mov    rbx,rcx
   14002cb52:	call   0x14002cf50
   14002cb57:	mov    rcx,QWORD PTR [rbx+0x88]
   14002cb5e:	test   rcx,rcx
   14002cb61:	je     0x14002cb69
   14002cb63:	call   QWORD PTR [rip+0x966f]        # 0x1400361d8
   14002cb69:	xor    al,al
   14002cb6b:	jmp    0x14002cb6f
   14002cb6d:	xor    al,al
   14002cb6f:	add    rsp,0x30
   14002cb73:	pop    rbx
   14002cb74:	ret    
   14002cb75:	int3   
   14002cb76:	int3   
   14002cb77:	int3   
   14002cb78:	int3   
   14002cb79:	int3   
   14002cb7a:	int3   
   14002cb7b:	int3   
   14002cb7c:	int3   
   14002cb7d:	int3   
   14002cb7e:	int3   
   14002cb7f:	int3   
   14002cb80:	rex push rbx
   14002cb82:	sub    rsp,0x30
   14002cb86:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002cb8f:	mov    rbx,rcx
   14002cb92:	call   0x14002d020
   14002cb97:	mov    rcx,QWORD PTR [rbx+0x88]
   14002cb9e:	test   rcx,rcx
   14002cba1:	je     0x14002cba9
   14002cba3:	call   QWORD PTR [rip+0x962f]        # 0x1400361d8
   14002cba9:	xor    al,al
   14002cbab:	jmp    0x14002cbaf
   14002cbad:	xor    al,al
   14002cbaf:	add    rsp,0x30
   14002cbb3:	pop    rbx
   14002cbb4:	ret    
   14002cbb5:	int3   
   14002cbb6:	int3   
   14002cbb7:	int3   
   14002cbb8:	int3   
   14002cbb9:	int3   
   14002cbba:	int3   
   14002cbbb:	int3   
   14002cbbc:	int3   
   14002cbbd:	int3   
   14002cbbe:	int3   
   14002cbbf:	int3   
   14002cbc0:	rex push rbx
   14002cbc2:	sub    rsp,0x50
   14002cbc6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002cbcf:	mov    rax,QWORD PTR [rcx+0x40]
   14002cbd3:	mov    rdx,QWORD PTR [rax]
   14002cbd6:	mov    rax,QWORD PTR [rcx+0x20]
   14002cbda:	sub    rdx,QWORD PTR [rax]
   14002cbdd:	test   rdx,rdx
   14002cbe0:	jle    0x14002cbf6
   14002cbe2:	lea    rcx,[rsp+0x28]
   14002cbe7:	call   0x14001fa80
   14002cbec:	nop
   14002cbed:	mov    rcx,rax
   14002cbf0:	call   0x14000df70
   14002cbf5:	nop
   14002cbf6:	mov    rcx,QWORD PTR [rcx+0x78]
   14002cbfa:	mov    bl,0x1
   14002cbfc:	test   rcx,rcx
   14002cbff:	je     0x14002cc12
   14002cc01:	call   QWORD PTR [rip+0x95d1]        # 0x1400361d8
   14002cc07:	movzx  ebx,bl
   14002cc0a:	xor    ecx,ecx
   14002cc0c:	cmp    eax,0xffffffff
   14002cc0f:	cmove  ebx,ecx
   14002cc12:	movzx  eax,bl
   14002cc15:	jmp    0x14002cc19
   14002cc17:	xor    al,al
   14002cc19:	add    rsp,0x50
   14002cc1d:	pop    rbx
   14002cc1e:	ret    
   14002cc1f:	int3   
   14002cc20:	rex push rbx
   14002cc22:	sub    rsp,0x50
   14002cc26:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002cc2f:	mov    rax,QWORD PTR [rcx+0x40]
   14002cc33:	mov    rdx,QWORD PTR [rax]
   14002cc36:	mov    rax,QWORD PTR [rcx+0x20]
   14002cc3a:	sub    rdx,QWORD PTR [rax]
   14002cc3d:	test   rdx,rdx
   14002cc40:	jle    0x14002cc56
   14002cc42:	lea    rcx,[rsp+0x28]
   14002cc47:	call   0x14001fa80
   14002cc4c:	nop
   14002cc4d:	mov    rcx,rax
   14002cc50:	call   0x14000df70
   14002cc55:	nop
   14002cc56:	mov    rcx,QWORD PTR [rcx+0x80]
   14002cc5d:	mov    bl,0x1
   14002cc5f:	test   rcx,rcx
   14002cc62:	je     0x14002cc75
   14002cc64:	call   QWORD PTR [rip+0x956e]        # 0x1400361d8
   14002cc6a:	movzx  ebx,bl
   14002cc6d:	xor    ecx,ecx
   14002cc6f:	cmp    eax,0xffffffff
   14002cc72:	cmove  ebx,ecx
   14002cc75:	movzx  eax,bl
   14002cc78:	jmp    0x14002cc7c
   14002cc7a:	xor    al,al
   14002cc7c:	add    rsp,0x50
   14002cc80:	pop    rbx
   14002cc81:	ret    
   14002cc82:	int3   
   14002cc83:	int3   
   14002cc84:	int3   
   14002cc85:	int3   
   14002cc86:	int3   
   14002cc87:	int3   
   14002cc88:	int3   
   14002cc89:	int3   
   14002cc8a:	int3   
   14002cc8b:	int3   
   14002cc8c:	int3   
   14002cc8d:	int3   
   14002cc8e:	int3   
   14002cc8f:	int3   
   14002cc90:	rex push rbx
   14002cc92:	sub    rsp,0x20
   14002cc96:	mov    rbx,rcx
   14002cc99:	call   QWORD PTR [rip+0x99d9]        # 0x140036678
   14002cc9f:	mov    rax,rbx
   14002cca2:	add    rsp,0x20
   14002cca6:	pop    rbx
   14002cca7:	ret    
   14002cca8:	int3   
   14002cca9:	int3   
   14002ccaa:	int3   
   14002ccab:	int3   
   14002ccac:	int3   
   14002ccad:	int3   
   14002ccae:	int3   
   14002ccaf:	int3   
   14002ccb0:	mov    QWORD PTR [rsp+0x8],rbx
   14002ccb5:	push   rdi
   14002ccb6:	sub    rsp,0x20
   14002ccba:	mov    rbx,rdx
   14002ccbd:	mov    rdi,rcx
   14002ccc0:	cmp    rcx,rdx
   14002ccc3:	je     0x14002ccea
   14002ccc5:	call   0x14001d6f0
   14002ccca:	mov    rax,QWORD PTR [rbx+0x10]
   14002ccce:	mov    r8,QWORD PTR [rdi+0x10]
   14002ccd2:	mov    QWORD PTR [rdi+0x10],rax
   14002ccd6:	mov    QWORD PTR [rbx+0x10],r8
   14002ccda:	mov    rax,QWORD PTR [rbx+0x18]
   14002ccde:	mov    rcx,QWORD PTR [rdi+0x18]
   14002cce2:	mov    QWORD PTR [rdi+0x18],rax
   14002cce6:	mov    QWORD PTR [rbx+0x18],rcx
   14002ccea:	mov    rax,QWORD PTR [rbx+0x20]
   14002ccee:	mov    rcx,QWORD PTR [rdi+0x20]
   14002ccf2:	mov    QWORD PTR [rdi+0x20],rax
   14002ccf6:	mov    QWORD PTR [rbx+0x20],rcx
   14002ccfa:	mov    rbx,QWORD PTR [rsp+0x30]
   14002ccff:	add    rsp,0x20
   14002cd03:	pop    rdi
   14002cd04:	ret    
   14002cd05:	int3   
   14002cd06:	int3   
   14002cd07:	int3   
   14002cd08:	int3   
   14002cd09:	int3   
   14002cd0a:	int3   
   14002cd0b:	int3   
   14002cd0c:	int3   
   14002cd0d:	int3   
   14002cd0e:	int3   
   14002cd0f:	int3   
   14002cd10:	cmp    rcx,rdx
   14002cd13:	je     0x14002cd54
   14002cd15:	mov    QWORD PTR [rsp+0x8],rbx
   14002cd1a:	push   rdi
   14002cd1b:	sub    rsp,0x20
   14002cd1f:	mov    rbx,rdx
   14002cd22:	mov    rdi,rcx
   14002cd25:	call   0x14001d6f0
   14002cd2a:	mov    rax,QWORD PTR [rbx+0x10]
   14002cd2e:	mov    r8,QWORD PTR [rdi+0x10]
   14002cd32:	mov    QWORD PTR [rdi+0x10],rax
   14002cd36:	mov    QWORD PTR [rbx+0x10],r8
   14002cd3a:	mov    rax,QWORD PTR [rbx+0x18]
   14002cd3e:	mov    rcx,QWORD PTR [rdi+0x18]
   14002cd42:	mov    QWORD PTR [rdi+0x18],rax
   14002cd46:	mov    QWORD PTR [rbx+0x18],rcx
   14002cd4a:	mov    rbx,QWORD PTR [rsp+0x30]
   14002cd4f:	add    rsp,0x20
   14002cd53:	pop    rdi
   14002cd54:	ret    
   14002cd55:	int3   
   14002cd56:	int3   
   14002cd57:	int3   
   14002cd58:	int3   
   14002cd59:	int3   
   14002cd5a:	int3   
   14002cd5b:	int3   
   14002cd5c:	int3   
   14002cd5d:	int3   
   14002cd5e:	int3   
   14002cd5f:	int3   
   14002cd60:	mov    rax,QWORD PTR [rdx]
   14002cd63:	mov    r8,QWORD PTR [rcx]
   14002cd66:	mov    QWORD PTR [rcx],rax
   14002cd69:	mov    QWORD PTR [rdx],r8
   14002cd6c:	mov    rax,rcx
   14002cd6f:	ret    
   14002cd70:	mov    rax,QWORD PTR [rcx]
   14002cd73:	mov    r8,QWORD PTR [rdx]
   14002cd76:	mov    QWORD PTR [rdx],rax
   14002cd79:	mov    QWORD PTR [rcx],r8
   14002cd7c:	ret    
   14002cd7d:	int3   
   14002cd7e:	int3   
   14002cd7f:	int3   
   14002cd80:	rex push rbx
   14002cd82:	sub    rsp,0x20
   14002cd86:	cmp    QWORD PTR [rcx+0x90],0x0
   14002cd8e:	mov    rbx,rcx
   14002cd91:	je     0x14002cdbb
   14002cd93:	mov    rax,QWORD PTR [rcx]
   14002cd96:	or     edx,0xffffffff
   14002cd99:	call   QWORD PTR [rax+0x18]
   14002cd9c:	cmp    eax,0xffffffff
   14002cd9f:	je     0x14002cdbb
   14002cda1:	mov    rcx,QWORD PTR [rbx+0x90]
   14002cda8:	call   QWORD PTR [rip+0x9722]        # 0x1400364d0
   14002cdae:	test   eax,eax
   14002cdb0:	jns    0x14002cdbb
   14002cdb2:	or     eax,0xffffffff
   14002cdb5:	add    rsp,0x20
   14002cdb9:	pop    rbx
   14002cdba:	ret    
   14002cdbb:	xor    eax,eax
   14002cdbd:	add    rsp,0x20
   14002cdc1:	pop    rbx
   14002cdc2:	ret    
   14002cdc3:	int3   
   14002cdc4:	int3   
   14002cdc5:	int3   
   14002cdc6:	int3   
   14002cdc7:	int3   
   14002cdc8:	int3   
   14002cdc9:	int3   
   14002cdca:	int3   
   14002cdcb:	int3   
   14002cdcc:	int3   
   14002cdcd:	int3   
   14002cdce:	int3   
   14002cdcf:	int3   
   14002cdd0:	rex push rdi
   14002cdd2:	sub    rsp,0x30
   14002cdd6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002cddf:	mov    QWORD PTR [rsp+0x48],rbx
   14002cde4:	mov    rdi,rcx
   14002cde7:	mov    QWORD PTR [rsp+0x40],rcx
   14002cdec:	call   0x14002c4f0
   14002cdf1:	nop
   14002cdf2:	mov    rax,QWORD PTR [rdi+0x78]
   14002cdf6:	mov    rax,QWORD PTR [rax]
   14002cdf9:	mov    rax,QWORD PTR [rax]
   14002cdfc:	mov    rcx,QWORD PTR [rax+0x10]
   14002ce00:	mov    rax,QWORD PTR [rcx]
   14002ce03:	call   QWORD PTR [rax+0x68]
   14002ce06:	mov    ebx,eax
   14002ce08:	mov    rcx,rdi
   14002ce0b:	call   0x140024800
   14002ce10:	mov    eax,ebx
   14002ce12:	mov    rbx,QWORD PTR [rsp+0x48]
   14002ce17:	add    rsp,0x30
   14002ce1b:	pop    rdi
   14002ce1c:	ret    
   14002ce1d:	int3   
   14002ce1e:	int3   
   14002ce1f:	int3   
   14002ce20:	rex push rbx
   14002ce22:	sub    rsp,0x30
   14002ce26:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002ce2f:	mov    rbx,rcx
   14002ce32:	call   0x14002cf50
   14002ce37:	mov    rcx,QWORD PTR [rbx+0x88]
   14002ce3e:	test   rcx,rcx
   14002ce41:	je     0x14002ce49
   14002ce43:	call   QWORD PTR [rip+0x938f]        # 0x1400361d8
   14002ce49:	xor    eax,eax
   14002ce4b:	jmp    0x14002ce50
   14002ce4d:	or     eax,0xffffffff
   14002ce50:	add    rsp,0x30
   14002ce54:	pop    rbx
   14002ce55:	ret    
   14002ce56:	int3   
   14002ce57:	int3   
   14002ce58:	int3   
   14002ce59:	int3   
   14002ce5a:	int3   
   14002ce5b:	int3   
   14002ce5c:	int3   
   14002ce5d:	int3   
   14002ce5e:	int3   
   14002ce5f:	int3   
   14002ce60:	rex push rbx
   14002ce62:	sub    rsp,0x30
   14002ce66:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002ce6f:	mov    rbx,rcx
   14002ce72:	call   0x14002d020
   14002ce77:	mov    rcx,QWORD PTR [rbx+0x88]
   14002ce7e:	test   rcx,rcx
   14002ce81:	je     0x14002ce89
   14002ce83:	call   QWORD PTR [rip+0x934f]        # 0x1400361d8
   14002ce89:	xor    eax,eax
   14002ce8b:	jmp    0x14002ce90
   14002ce8d:	or     eax,0xffffffff
   14002ce90:	add    rsp,0x30
   14002ce94:	pop    rbx
   14002ce95:	ret    
   14002ce96:	int3   
   14002ce97:	int3   
   14002ce98:	int3   
   14002ce99:	int3   
   14002ce9a:	int3   
   14002ce9b:	int3   
   14002ce9c:	int3   
   14002ce9d:	int3   
   14002ce9e:	int3   
   14002ce9f:	int3   
   14002cea0:	sub    rsp,0x58
   14002cea4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002cead:	mov    rax,QWORD PTR [rcx+0x40]
   14002ceb1:	mov    rdx,QWORD PTR [rax]
   14002ceb4:	mov    rax,QWORD PTR [rcx+0x20]
   14002ceb8:	sub    rdx,QWORD PTR [rax]
   14002cebb:	test   rdx,rdx
   14002cebe:	jle    0x14002ced4
   14002cec0:	lea    rcx,[rsp+0x28]
   14002cec5:	call   0x14001fa80
   14002ceca:	nop
   14002cecb:	mov    rcx,rax
   14002cece:	call   0x14000df70
   14002ced3:	nop
   14002ced4:	mov    rcx,QWORD PTR [rcx+0x78]
   14002ced8:	test   rcx,rcx
   14002cedb:	je     0x14002cee3
   14002cedd:	call   QWORD PTR [rip+0x92f5]        # 0x1400361d8
   14002cee3:	xor    eax,eax
   14002cee5:	jmp    0x14002ceea
   14002cee7:	or     eax,0xffffffff
   14002ceea:	add    rsp,0x58
   14002ceee:	ret    
   14002ceef:	int3   
   14002cef0:	sub    rsp,0x58
   14002cef4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002cefd:	mov    rax,QWORD PTR [rcx+0x40]
   14002cf01:	mov    rdx,QWORD PTR [rax]
   14002cf04:	mov    rax,QWORD PTR [rcx+0x20]
   14002cf08:	sub    rdx,QWORD PTR [rax]
   14002cf0b:	test   rdx,rdx
   14002cf0e:	jle    0x14002cf24
   14002cf10:	lea    rcx,[rsp+0x28]
   14002cf15:	call   0x14001fa80
   14002cf1a:	nop
   14002cf1b:	mov    rcx,rax
   14002cf1e:	call   0x14000df70
   14002cf23:	nop
   14002cf24:	mov    rcx,QWORD PTR [rcx+0x80]
   14002cf2b:	test   rcx,rcx
   14002cf2e:	je     0x14002cf36
   14002cf30:	call   QWORD PTR [rip+0x92a2]        # 0x1400361d8
   14002cf36:	xor    eax,eax
   14002cf38:	jmp    0x14002cf3d
   14002cf3a:	or     eax,0xffffffff
   14002cf3d:	add    rsp,0x58
   14002cf41:	ret    
   14002cf42:	int3   
   14002cf43:	int3   
   14002cf44:	int3   
   14002cf45:	int3   
   14002cf46:	int3   
   14002cf47:	int3   
   14002cf48:	int3   
   14002cf49:	int3   
   14002cf4a:	int3   
   14002cf4b:	int3   
   14002cf4c:	int3   
   14002cf4d:	int3   
   14002cf4e:	int3   
   14002cf4f:	int3   
   14002cf50:	mov    QWORD PTR [rsp+0x8],rbx
   14002cf55:	push   rdi
   14002cf56:	sub    rsp,0x20
   14002cf5a:	mov    rax,QWORD PTR [rcx+0x20]
   14002cf5e:	mov    rbx,rcx
   14002cf61:	mov    r8,QWORD PTR [rax]
   14002cf64:	mov    rax,QWORD PTR [rcx+0x40]
   14002cf68:	mov    rdi,QWORD PTR [rax]
   14002cf6b:	sub    rdi,r8
   14002cf6e:	test   rdi,rdi
   14002cf71:	jle    0x14002d007
   14002cf77:	mov    rdx,QWORD PTR [rbx+0x88]
   14002cf7e:	add    rcx,0x70
   14002cf82:	mov    r9,rdi
   14002cf85:	call   0x14000ed00
   14002cf8a:	mov    rdx,QWORD PTR [rbx+0x98]
   14002cf91:	mov    rcx,rax
   14002cf94:	cmp    rax,rdi
   14002cf97:	jne    0x14002cfc4
   14002cf99:	mov    rcx,QWORD PTR [rbx+0x90]
   14002cfa0:	mov    rax,QWORD PTR [rbx+0x20]
   14002cfa4:	mov    QWORD PTR [rax],rcx
   14002cfa7:	mov    rax,QWORD PTR [rbx+0x40]
   14002cfab:	add    rdx,rcx
   14002cfae:	mov    QWORD PTR [rax],rcx
   14002cfb1:	mov    rax,QWORD PTR [rbx+0x58]
   14002cfb5:	sub    edx,ecx
   14002cfb7:	mov    DWORD PTR [rax],edx
   14002cfb9:	mov    rbx,QWORD PTR [rsp+0x30]
   14002cfbe:	add    rsp,0x20
   14002cfc2:	pop    rdi
   14002cfc3:	ret    
   14002cfc4:	mov    rax,QWORD PTR [rbx+0x40]
   14002cfc8:	add    rcx,QWORD PTR [rbx+0x90]
   14002cfcf:	add    rdx,QWORD PTR [rbx+0x90]
   14002cfd6:	mov    r8,QWORD PTR [rax]
   14002cfd9:	mov    rax,QWORD PTR [rbx+0x20]
   14002cfdd:	sub    edx,ecx
   14002cfdf:	mov    QWORD PTR [rax],rcx
   14002cfe2:	mov    rax,QWORD PTR [rbx+0x40]
   14002cfe6:	mov    QWORD PTR [rax],rcx
   14002cfe9:	mov    rax,QWORD PTR [rbx+0x58]
   14002cfed:	mov    DWORD PTR [rax],edx
   14002cfef:	mov    rax,QWORD PTR [rbx+0x40]
   14002cff3:	sub    r8d,DWORD PTR [rax]
   14002cff6:	mov    rax,QWORD PTR [rbx+0x58]
   14002cffa:	sub    DWORD PTR [rax],r8d
   14002cffd:	mov    rcx,QWORD PTR [rbx+0x40]
   14002d001:	movsxd rax,r8d
   14002d004:	add    QWORD PTR [rcx],rax
   14002d007:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d00c:	add    rsp,0x20
   14002d010:	pop    rdi
   14002d011:	ret    
   14002d012:	int3   
   14002d013:	int3   
   14002d014:	int3   
   14002d015:	int3   
   14002d016:	int3   
   14002d017:	int3   
   14002d018:	int3   
   14002d019:	int3   
   14002d01a:	int3   
   14002d01b:	int3   
   14002d01c:	int3   
   14002d01d:	int3   
   14002d01e:	int3   
   14002d01f:	int3   
   14002d020:	mov    QWORD PTR [rsp+0x8],rbx
   14002d025:	push   rdi
   14002d026:	sub    rsp,0x20
   14002d02a:	mov    rax,QWORD PTR [rcx+0x20]
   14002d02e:	mov    rbx,rcx
   14002d031:	mov    r8,QWORD PTR [rax]
   14002d034:	mov    rax,QWORD PTR [rcx+0x40]
   14002d038:	mov    rdi,QWORD PTR [rax]
   14002d03b:	sub    rdi,r8
   14002d03e:	test   rdi,rdi
   14002d041:	jle    0x14002d0d7
   14002d047:	mov    rdx,QWORD PTR [rbx+0x88]
   14002d04e:	add    rcx,0x70
   14002d052:	mov    r9,rdi
   14002d055:	call   0x14000ee70
   14002d05a:	mov    rdx,QWORD PTR [rbx+0x98]
   14002d061:	mov    rcx,rax
   14002d064:	cmp    rax,rdi
   14002d067:	jne    0x14002d094
   14002d069:	mov    rcx,QWORD PTR [rbx+0x90]
   14002d070:	mov    rax,QWORD PTR [rbx+0x20]
   14002d074:	mov    QWORD PTR [rax],rcx
   14002d077:	mov    rax,QWORD PTR [rbx+0x40]
   14002d07b:	add    rdx,rcx
   14002d07e:	mov    QWORD PTR [rax],rcx
   14002d081:	mov    rax,QWORD PTR [rbx+0x58]
   14002d085:	sub    edx,ecx
   14002d087:	mov    DWORD PTR [rax],edx
   14002d089:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d08e:	add    rsp,0x20
   14002d092:	pop    rdi
   14002d093:	ret    
   14002d094:	mov    rax,QWORD PTR [rbx+0x40]
   14002d098:	add    rcx,QWORD PTR [rbx+0x90]
   14002d09f:	add    rdx,QWORD PTR [rbx+0x90]
   14002d0a6:	mov    r8,QWORD PTR [rax]
   14002d0a9:	mov    rax,QWORD PTR [rbx+0x20]
   14002d0ad:	sub    edx,ecx
   14002d0af:	mov    QWORD PTR [rax],rcx
   14002d0b2:	mov    rax,QWORD PTR [rbx+0x40]
   14002d0b6:	mov    QWORD PTR [rax],rcx
   14002d0b9:	mov    rax,QWORD PTR [rbx+0x58]
   14002d0bd:	mov    DWORD PTR [rax],edx
   14002d0bf:	mov    rax,QWORD PTR [rbx+0x40]
   14002d0c3:	sub    r8d,DWORD PTR [rax]
   14002d0c6:	mov    rax,QWORD PTR [rbx+0x58]
   14002d0ca:	sub    DWORD PTR [rax],r8d
   14002d0cd:	mov    rcx,QWORD PTR [rbx+0x40]
   14002d0d1:	movsxd rax,r8d
   14002d0d4:	add    QWORD PTR [rcx],rax
   14002d0d7:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d0dc:	add    rsp,0x20
   14002d0e0:	pop    rdi
   14002d0e1:	ret    
   14002d0e2:	int3   
   14002d0e3:	int3   
   14002d0e4:	int3   
   14002d0e5:	int3   
   14002d0e6:	int3   
   14002d0e7:	int3   
   14002d0e8:	int3   
   14002d0e9:	int3   
   14002d0ea:	int3   
   14002d0eb:	int3   
   14002d0ec:	int3   
   14002d0ed:	int3   
   14002d0ee:	int3   
   14002d0ef:	int3   
   14002d0f0:	sub    rsp,0x58
   14002d0f4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002d0fd:	mov    rax,QWORD PTR [rcx+0x40]
   14002d101:	mov    rdx,QWORD PTR [rax]
   14002d104:	mov    rax,QWORD PTR [rcx+0x20]
   14002d108:	sub    rdx,QWORD PTR [rax]
   14002d10b:	test   rdx,rdx
   14002d10e:	jle    0x14002d124
   14002d110:	lea    rcx,[rsp+0x28]
   14002d115:	call   0x14001fa80
   14002d11a:	nop
   14002d11b:	mov    rcx,rax
   14002d11e:	call   0x14000df70
   14002d123:	nop
   14002d124:	add    rsp,0x58
   14002d128:	ret    
   14002d129:	int3   
   14002d12a:	int3   
   14002d12b:	int3   
   14002d12c:	int3   
   14002d12d:	int3   
   14002d12e:	int3   
   14002d12f:	int3   
   14002d130:	sub    rsp,0x58
   14002d134:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002d13d:	mov    rax,QWORD PTR [rcx+0x40]
   14002d141:	mov    rdx,QWORD PTR [rax]
   14002d144:	mov    rax,QWORD PTR [rcx+0x20]
   14002d148:	sub    rdx,QWORD PTR [rax]
   14002d14b:	test   rdx,rdx
   14002d14e:	jle    0x14002d164
   14002d150:	lea    rcx,[rsp+0x28]
   14002d155:	call   0x14001fa80
   14002d15a:	nop
   14002d15b:	mov    rcx,rax
   14002d15e:	call   0x14000df70
   14002d163:	nop
   14002d164:	add    rsp,0x58
   14002d168:	ret    
   14002d169:	int3   
   14002d16a:	int3   
   14002d16b:	int3   
   14002d16c:	int3   
   14002d16d:	int3   
   14002d16e:	int3   
   14002d16f:	int3   
   14002d170:	lea    rax,[rip+0x27e99]        # 0x140055010
   14002d177:	ret    
   14002d178:	int3   
   14002d179:	int3   
   14002d17a:	int3   
   14002d17b:	int3   
   14002d17c:	int3   
   14002d17d:	int3   
   14002d17e:	int3   
   14002d17f:	int3   
   14002d180:	rex push rbx
   14002d182:	sub    rsp,0x30
   14002d186:	xor    r8d,r8d
   14002d189:	mov    rbx,rcx
   14002d18c:	mov    DWORD PTR [rsp+0x20],0x0
   14002d194:	call   QWORD PTR [rip+0x93c6]        # 0x140036560
   14002d19a:	mov    rax,rbx
   14002d19d:	add    rsp,0x30
   14002d1a1:	pop    rbx
   14002d1a2:	ret    
   14002d1a3:	int3   
   14002d1a4:	int3   
   14002d1a5:	int3   
   14002d1a6:	int3   
   14002d1a7:	int3   
   14002d1a8:	int3   
   14002d1a9:	int3   
   14002d1aa:	int3   
   14002d1ab:	int3   
   14002d1ac:	int3   
   14002d1ad:	int3   
   14002d1ae:	int3   
   14002d1af:	int3   
   14002d1b0:	mov    rax,QWORD PTR [rcx]
   14002d1b3:	rex.W jmp QWORD PTR [rax+0x20]
   14002d1b7:	int3   
   14002d1b8:	int3   
   14002d1b9:	int3   
   14002d1ba:	int3   
   14002d1bb:	int3   
   14002d1bc:	int3   
   14002d1bd:	int3   
   14002d1be:	int3   
   14002d1bf:	int3   
   14002d1c0:	ret    0x0
   14002d1c3:	int3   
   14002d1c4:	int3   
   14002d1c5:	int3   
   14002d1c6:	int3   
   14002d1c7:	int3   
   14002d1c8:	int3   
   14002d1c9:	int3   
   14002d1ca:	int3   
   14002d1cb:	int3   
   14002d1cc:	int3   
   14002d1cd:	int3   
   14002d1ce:	int3   
   14002d1cf:	int3   
   14002d1d0:	lea    eax,[rcx+0x30]
   14002d1d3:	cmp    rcx,0x9
   14002d1d7:	jbe    0x14002d1dc
   14002d1d9:	lea    eax,[rcx+0x57]
   14002d1dc:	ret    
   14002d1dd:	int3   
   14002d1de:	int3   
   14002d1df:	int3   
   14002d1e0:	movzx  eax,BYTE PTR [rcx]
   14002d1e3:	ret    
   14002d1e4:	int3   
   14002d1e5:	int3   
   14002d1e6:	int3   
   14002d1e7:	int3   
   14002d1e8:	int3   
   14002d1e9:	int3   
   14002d1ea:	int3   
   14002d1eb:	int3   
   14002d1ec:	int3   
   14002d1ed:	int3   
   14002d1ee:	int3   
   14002d1ef:	int3   
   14002d1f0:	movzx  eax,BYTE PTR [rcx]
   14002d1f3:	ret    
   14002d1f4:	int3   
   14002d1f5:	int3   
   14002d1f6:	int3   
   14002d1f7:	int3   
   14002d1f8:	int3   
   14002d1f9:	int3   
   14002d1fa:	int3   
   14002d1fb:	int3   
   14002d1fc:	int3   
   14002d1fd:	int3   
   14002d1fe:	int3   
   14002d1ff:	int3   
   14002d200:	rex push rbx
   14002d202:	sub    rsp,0x30
   14002d206:	mov    rbx,rcx
   14002d209:	mov    DWORD PTR [rsp+0x20],0x0
   14002d211:	call   0x14000e260
   14002d216:	mov    rax,rbx
   14002d219:	add    rsp,0x30
   14002d21d:	pop    rbx
   14002d21e:	ret    
   14002d21f:	int3   
   14002d220:	mov    QWORD PTR [rsp+0x8],rcx
   14002d225:	push   rsi
   14002d226:	push   rdi
   14002d227:	push   r12
   14002d229:	push   r14
   14002d22b:	push   r15
   14002d22d:	sub    rsp,0x30
   14002d231:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14002d23a:	mov    QWORD PTR [rsp+0x68],rbx
   14002d23f:	mov    QWORD PTR [rsp+0x70],rbp
   14002d244:	mov    rbp,rdx
   14002d247:	mov    rbx,rcx
   14002d24a:	xor    r12d,r12d
   14002d24d:	mov    DWORD PTR [rsp+0x20],r12d
   14002d252:	mov    QWORD PTR [rcx+0x18],0xf
   14002d25a:	mov    QWORD PTR [rcx+0x10],r12
   14002d25e:	mov    BYTE PTR [rcx],r12b
   14002d261:	mov    DWORD PTR [rsp+0x20],0x1
   14002d269:	cmp    r12,0x24
   14002d26d:	ja     0x14002d2a0
   14002d26f:	mov    rax,QWORD PTR [rcx+0x18]
   14002d273:	cmp    rax,0x24
   14002d277:	je     0x14002d2a0
   14002d279:	jae    0x14002d288
   14002d27b:	mov    r8d,r12d
   14002d27e:	lea    edx,[r12+0x24]
   14002d283:	call   0x14001c600
   14002d288:	mov    QWORD PTR [rbx+0x10],r12
   14002d28c:	cmp    QWORD PTR [rbx+0x18],0x10
   14002d291:	jb     0x14002d298
   14002d293:	mov    rax,QWORD PTR [rbx]
   14002d296:	jmp    0x14002d29b
   14002d298:	mov    rax,rbx
   14002d29b:	mov    BYTE PTR [rax+r12*1],0x0
   14002d2a0:	mov    r14,r12
   14002d2a3:	lea    r15,[rbp+0x10]
   14002d2a7:	cmp    rbp,r15
   14002d2aa:	je     0x14002d4e8
   14002d2b0:	movzx  edi,BYTE PTR [r14+rbp*1]
   14002d2b5:	shr    rdi,0x4
   14002d2b9:	cmp    rdi,0x9
   14002d2bd:	ja     0x14002d2c5
   14002d2bf:	add    dil,0x30
   14002d2c3:	jmp    0x14002d2c9
   14002d2c5:	add    dil,0x57
   14002d2c9:	mov    r8,QWORD PTR [rbx+0x10]
   14002d2cd:	or     rax,0xffffffffffffffff
   14002d2d1:	sub    rax,r8
   14002d2d4:	cmp    rax,0x1
   14002d2d8:	jbe    0x14002d4da
   14002d2de:	lea    rsi,[r8+0x1]
   14002d2e2:	cmp    rsi,0xfffffffffffffffe
   14002d2e6:	ja     0x14002d4cc
   14002d2ec:	mov    rax,QWORD PTR [rbx+0x18]
   14002d2f0:	cmp    rax,rsi
   14002d2f3:	jae    0x14002d302
   14002d2f5:	mov    rdx,rsi
   14002d2f8:	mov    rcx,rbx
   14002d2fb:	call   0x14001c600
   14002d300:	jmp    0x14002d31e
   14002d302:	test   rsi,rsi
   14002d305:	jne    0x14002d323
   14002d307:	mov    QWORD PTR [rbx+0x10],r12
   14002d30b:	cmp    rax,0x10
   14002d30f:	jb     0x14002d316
   14002d311:	mov    rax,QWORD PTR [rbx]
   14002d314:	jmp    0x14002d319
   14002d316:	mov    rax,rbx
   14002d319:	mov    BYTE PTR [rax],0x0
   14002d31c:	jmp    0x14002d351
   14002d31e:	test   rsi,rsi
   14002d321:	je     0x14002d351
   14002d323:	mov    rcx,QWORD PTR [rbx+0x10]
   14002d327:	cmp    QWORD PTR [rbx+0x18],0x10
   14002d32c:	jb     0x14002d333
   14002d32e:	mov    rax,QWORD PTR [rbx]
   14002d331:	jmp    0x14002d336
   14002d333:	mov    rax,rbx
   14002d336:	mov    BYTE PTR [rax+rcx*1],dil
   14002d33a:	mov    QWORD PTR [rbx+0x10],rsi
   14002d33e:	cmp    QWORD PTR [rbx+0x18],0x10
   14002d343:	jb     0x14002d34a
   14002d345:	mov    rax,QWORD PTR [rbx]
   14002d348:	jmp    0x14002d34d
   14002d34a:	mov    rax,rbx
   14002d34d:	mov    BYTE PTR [rax+rsi*1],0x0
   14002d351:	movzx  edi,BYTE PTR [r14+rbp*1]
   14002d356:	and    edi,0xf
   14002d359:	cmp    rdi,0x9
   14002d35d:	ja     0x14002d365
   14002d35f:	add    dil,0x30
   14002d363:	jmp    0x14002d369
   14002d365:	add    dil,0x57
   14002d369:	mov    r8,QWORD PTR [rbx+0x10]
   14002d36d:	or     rax,0xffffffffffffffff
   14002d371:	sub    rax,r8
   14002d374:	cmp    rax,0x1
   14002d378:	jbe    0x14002d4be
   14002d37e:	lea    rsi,[r8+0x1]
   14002d382:	cmp    rsi,0xfffffffffffffffe
   14002d386:	ja     0x14002d4b0
   14002d38c:	mov    rax,QWORD PTR [rbx+0x18]
   14002d390:	cmp    rax,rsi
   14002d393:	jae    0x14002d3a2
   14002d395:	mov    rdx,rsi
   14002d398:	mov    rcx,rbx
   14002d39b:	call   0x14001c600
   14002d3a0:	jmp    0x14002d3be
   14002d3a2:	test   rsi,rsi
   14002d3a5:	jne    0x14002d3c3
   14002d3a7:	mov    QWORD PTR [rbx+0x10],r12
   14002d3ab:	cmp    rax,0x10
   14002d3af:	jb     0x14002d3b6
   14002d3b1:	mov    rax,QWORD PTR [rbx]
   14002d3b4:	jmp    0x14002d3b9
   14002d3b6:	mov    rax,rbx
   14002d3b9:	mov    BYTE PTR [rax],0x0
   14002d3bc:	jmp    0x14002d3f1
   14002d3be:	test   rsi,rsi
   14002d3c1:	je     0x14002d3f1
   14002d3c3:	mov    rcx,QWORD PTR [rbx+0x10]
   14002d3c7:	cmp    QWORD PTR [rbx+0x18],0x10
   14002d3cc:	jb     0x14002d3d3
   14002d3ce:	mov    rax,QWORD PTR [rbx]
   14002d3d1:	jmp    0x14002d3d6
   14002d3d3:	mov    rax,rbx
   14002d3d6:	mov    BYTE PTR [rax+rcx*1],dil
   14002d3da:	mov    QWORD PTR [rbx+0x10],rsi
   14002d3de:	cmp    QWORD PTR [rbx+0x18],0x10
   14002d3e3:	jb     0x14002d3ea
   14002d3e5:	mov    rax,QWORD PTR [rbx]
   14002d3e8:	jmp    0x14002d3ed
   14002d3ea:	mov    rax,rbx
   14002d3ed:	mov    BYTE PTR [rax+rsi*1],0x0
   14002d3f1:	lea    rax,[r14-0x3]
   14002d3f5:	test   rax,0xfffffffffffffff9
   14002d3fb:	jne    0x14002d485
   14002d401:	mov    r8,QWORD PTR [rbx+0x10]
   14002d405:	or     rax,0xffffffffffffffff
   14002d409:	sub    rax,r8
   14002d40c:	cmp    rax,0x1
   14002d410:	jbe    0x14002d4a2
   14002d416:	lea    rdi,[r8+0x1]
   14002d41a:	cmp    rdi,0xfffffffffffffffe
   14002d41e:	ja     0x14002d494
   14002d420:	mov    rax,QWORD PTR [rbx+0x18]
   14002d424:	cmp    rax,rdi
   14002d427:	jae    0x14002d436
   14002d429:	mov    rdx,rdi
   14002d42c:	mov    rcx,rbx
   14002d42f:	call   0x14001c600
   14002d434:	jmp    0x14002d452
   14002d436:	test   rdi,rdi
   14002d439:	jne    0x14002d457
   14002d43b:	mov    QWORD PTR [rbx+0x10],r12
   14002d43f:	cmp    rax,0x10
   14002d443:	jb     0x14002d44a
   14002d445:	mov    rax,QWORD PTR [rbx]
   14002d448:	jmp    0x14002d44d
   14002d44a:	mov    rax,rbx
   14002d44d:	mov    BYTE PTR [rax],0x0
   14002d450:	jmp    0x14002d485
   14002d452:	test   rdi,rdi
   14002d455:	je     0x14002d485
   14002d457:	mov    rcx,QWORD PTR [rbx+0x10]
   14002d45b:	cmp    QWORD PTR [rbx+0x18],0x10
   14002d460:	jb     0x14002d467
   14002d462:	mov    rax,QWORD PTR [rbx]
   14002d465:	jmp    0x14002d46a
   14002d467:	mov    rax,rbx
   14002d46a:	mov    BYTE PTR [rcx+rax*1],0x2d
   14002d46e:	mov    QWORD PTR [rbx+0x10],rdi
   14002d472:	cmp    QWORD PTR [rbx+0x18],0x10
   14002d477:	jb     0x14002d47e
   14002d479:	mov    rax,QWORD PTR [rbx]
   14002d47c:	jmp    0x14002d481
   14002d47e:	mov    rax,rbx
   14002d481:	mov    BYTE PTR [rdi+rax*1],0x0
   14002d485:	inc    r14
   14002d488:	lea    rax,[r14+rbp*1]
   14002d48c:	cmp    rax,r15
   14002d48f:	jmp    0x14002d2aa
   14002d494:	lea    rcx,[rip+0xf47d]        # 0x14003c918
   14002d49b:	call   QWORD PTR [rip+0x8d7f]        # 0x140036220
   14002d4a1:	int3   
   14002d4a2:	lea    rcx,[rip+0xf46f]        # 0x14003c918
   14002d4a9:	call   QWORD PTR [rip+0x8d71]        # 0x140036220
   14002d4af:	int3   
   14002d4b0:	lea    rcx,[rip+0xf461]        # 0x14003c918
   14002d4b7:	call   QWORD PTR [rip+0x8d63]        # 0x140036220
   14002d4bd:	int3   
   14002d4be:	lea    rcx,[rip+0xf453]        # 0x14003c918
   14002d4c5:	call   QWORD PTR [rip+0x8d55]        # 0x140036220
   14002d4cb:	int3   
   14002d4cc:	lea    rcx,[rip+0xf445]        # 0x14003c918
   14002d4d3:	call   QWORD PTR [rip+0x8d47]        # 0x140036220
   14002d4d9:	int3   
   14002d4da:	lea    rcx,[rip+0xf437]        # 0x14003c918
   14002d4e1:	call   QWORD PTR [rip+0x8d39]        # 0x140036220
   14002d4e7:	int3   
   14002d4e8:	mov    rax,rbx
   14002d4eb:	mov    rbx,QWORD PTR [rsp+0x68]
   14002d4f0:	mov    rbp,QWORD PTR [rsp+0x70]
   14002d4f5:	add    rsp,0x30
   14002d4f9:	pop    r15
   14002d4fb:	pop    r14
   14002d4fd:	pop    r12
   14002d4ff:	pop    rdi
   14002d500:	pop    rsi
   14002d501:	ret    
   14002d502:	int3   
   14002d503:	int3   
   14002d504:	int3   
   14002d505:	int3   
   14002d506:	int3   
   14002d507:	int3   
   14002d508:	int3   
   14002d509:	int3   
   14002d50a:	int3   
   14002d50b:	int3   
   14002d50c:	int3   
   14002d50d:	int3   
   14002d50e:	int3   
   14002d50f:	int3   
   14002d510:	mov    eax,ecx
   14002d512:	ret    
   14002d513:	int3   
   14002d514:	int3   
   14002d515:	int3   
   14002d516:	int3   
   14002d517:	int3   
   14002d518:	int3   
   14002d519:	int3   
   14002d51a:	int3   
   14002d51b:	int3   
   14002d51c:	int3   
   14002d51d:	int3   
   14002d51e:	int3   
   14002d51f:	int3   
   14002d520:	mov    eax,ecx
   14002d522:	ret    
   14002d523:	int3   
   14002d524:	int3   
   14002d525:	int3   
   14002d526:	int3   
   14002d527:	int3   
   14002d528:	int3   
   14002d529:	int3   
   14002d52a:	int3   
   14002d52b:	int3   
   14002d52c:	int3   
   14002d52d:	int3   
   14002d52e:	int3   
   14002d52f:	int3   
   14002d530:	mov    eax,DWORD PTR [rcx+0x68]
   14002d533:	and    eax,0x1
   14002d536:	ret    
   14002d537:	int3   
   14002d538:	int3   
   14002d539:	int3   
   14002d53a:	int3   
   14002d53b:	int3   
   14002d53c:	int3   
   14002d53d:	int3   
   14002d53e:	int3   
   14002d53f:	int3   
   14002d540:	rex push rbx
   14002d542:	sub    rsp,0x60
   14002d546:	cmp    QWORD PTR [rcx+0x18],0x10
   14002d54b:	mov    rbx,rdx
   14002d54e:	jb     0x14002d555
   14002d550:	mov    r8,QWORD PTR [rcx]
   14002d553:	jmp    0x14002d558
   14002d555:	mov    r8,rcx
   14002d558:	mov    rax,QWORD PTR [rcx+0x10]
   14002d55c:	mov    QWORD PTR [rsp+0x28],r8
   14002d561:	lea    rcx,[r8+rax*1]
   14002d565:	mov    QWORD PTR [rsp+0x30],rcx
   14002d56a:	cmp    r8,rcx
   14002d56d:	je     0x14002d5d1
   14002d56f:	movzx  eax,BYTE PTR [r8]
   14002d573:	mov    QWORD PTR [rsp+0x70],rdi
   14002d578:	cmp    al,0x2d
   14002d57a:	sete   dil
   14002d57e:	test   dil,dil
   14002d581:	jne    0x14002d587
   14002d583:	cmp    al,0x2b
   14002d585:	jne    0x14002d58a
   14002d587:	inc    r8
   14002d58a:	mov    QWORD PTR [rsp+0x50],rcx
   14002d58f:	mov    eax,0x1
   14002d594:	lea    rcx,[rsp+0x38]
   14002d599:	mov    BYTE PTR [rsp+0x38],0x0
   14002d59e:	mov    QWORD PTR [rsp+0x40],rdx
   14002d5a3:	mov    QWORD PTR [rsp+0x48],r8
   14002d5a8:	mov    WORD PTR [rsp+0x3a],ax
   14002d5ad:	call   0x1400210d0
   14002d5b2:	test   dil,dil
   14002d5b5:	mov    rdi,QWORD PTR [rsp+0x70]
   14002d5ba:	je     0x14002d5c5
   14002d5bc:	movzx  ecx,WORD PTR [rbx]
   14002d5bf:	neg    cx
   14002d5c2:	mov    WORD PTR [rbx],cx
   14002d5c5:	test   al,al
   14002d5c7:	je     0x14002d5d1
   14002d5c9:	mov    al,0x1
   14002d5cb:	add    rsp,0x60
   14002d5cf:	pop    rbx
   14002d5d0:	ret    
   14002d5d1:	xor    al,al
   14002d5d3:	add    rsp,0x60
   14002d5d7:	pop    rbx
   14002d5d8:	ret    
   14002d5d9:	int3   
   14002d5da:	int3   
   14002d5db:	int3   
   14002d5dc:	int3   
   14002d5dd:	int3   
   14002d5de:	int3   
   14002d5df:	int3   
   14002d5e0:	sub    rsp,0x28
   14002d5e4:	xor    edx,edx
   14002d5e6:	cmp    DWORD PTR [rip+0x27a43],0x2        # 0x140055030
   14002d5ed:	mov    r9,rcx
   14002d5f0:	jl     0x14002d691
   14002d5f6:	movdqa xmm3,XMMWORD PTR [rip+0x123c2]        # 0x14003f9c0
   14002d5fe:	movdqa xmm4,XMMWORD PTR [rip+0x123ca]        # 0x14003f9d0
   14002d606:	mov    eax,0x1
   14002d60b:	movaps XMMWORD PTR [rsp+0x10],xmm6
   14002d610:	movdqa xmm6,XMMWORD PTR [rip+0x123c8]        # 0x14003f9e0
   14002d618:	movd   xmm5,eax
   14002d61c:	lea    rax,[rcx+0x4]
   14002d620:	lea    ecx,[rdx+0x37]
   14002d623:	mov    edx,0xdc
   14002d628:	movaps XMMWORD PTR [rsp],xmm7
   14002d62c:	movdqa xmm7,XMMWORD PTR [rip+0x1234c]        # 0x14003f980
   14002d634:	nop    DWORD PTR [rax+0x0]
   14002d638:	nop    DWORD PTR [rax+rax*1+0x0]
   14002d640:	movdqu xmm1,XMMWORD PTR [rax]
   14002d644:	movdqu xmm2,XMMWORD PTR [rax-0x4]
   14002d649:	movdqa xmm0,xmm3
   14002d64d:	lea    rax,[rax+0x10]
   14002d651:	pand   xmm0,xmm1
   14002d655:	pand   xmm2,xmm4
   14002d659:	por    xmm2,xmm0
   14002d65d:	psrld  xmm2,xmm5
   14002d661:	movdqa xmm0,xmm7
   14002d665:	pand   xmm0,xmm1
   14002d669:	pmulld xmm0,xmm6
   14002d66e:	pxor   xmm2,xmm0
   14002d672:	movdqu xmm0,XMMWORD PTR [rax+0x620]
   14002d67a:	pxor   xmm2,xmm0
   14002d67e:	movdqu XMMWORD PTR [rax-0x14],xmm2
   14002d683:	dec    rcx
   14002d686:	jne    0x14002d640
   14002d688:	movaps xmm7,XMMWORD PTR [rsp]
   14002d68c:	movaps xmm6,XMMWORD PTR [rsp+0x10]
   14002d691:	lea    rax,[r9+0x4]
   14002d695:	mov    r8d,0xde
   14002d69b:	lea    rax,[rax+rdx*4]
   14002d69f:	sub    r8,rdx
   14002d6a2:	mov    ecx,DWORD PTR [rax]
   14002d6a4:	lea    rax,[rax+0x4]
   14002d6a8:	mov    edx,ecx
   14002d6aa:	and    ecx,0x1
   14002d6ad:	xor    edx,DWORD PTR [rax-0x8]
   14002d6b0:	and    edx,0x7ffffffe
   14002d6b6:	xor    edx,DWORD PTR [rax-0x8]
   14002d6b9:	imul   ecx,ecx,0x9908b0df
   14002d6bf:	shr    edx,1
   14002d6c1:	xor    edx,ecx
   14002d6c3:	xor    edx,DWORD PTR [rax+0x62c]
   14002d6c9:	mov    DWORD PTR [rax-0x8],edx
   14002d6cc:	dec    r8
   14002d6cf:	jne    0x14002d6a2
   14002d6d1:	mov    eax,DWORD PTR [r9+0x37c]
   14002d6d8:	mov    ecx,DWORD PTR [r9+0x378]
   14002d6df:	lea    rdx,[r9+0x390]
   14002d6e6:	xor    ecx,eax
   14002d6e8:	and    eax,0x1
   14002d6eb:	mov    r8d,0x18c
   14002d6f1:	and    ecx,0x7ffffffe
   14002d6f7:	xor    ecx,DWORD PTR [r9+0x378]
   14002d6fe:	imul   eax,eax,0x9908b0df
   14002d704:	shr    ecx,1
   14002d706:	xor    ecx,eax
   14002d708:	mov    eax,DWORD PTR [r9+0x380]
   14002d70f:	xor    ecx,DWORD PTR [r9+0x9ac]
   14002d716:	mov    DWORD PTR [r9+0x378],ecx
   14002d71d:	mov    ecx,DWORD PTR [r9+0x37c]
   14002d724:	xor    ecx,eax
   14002d726:	and    eax,0x1
   14002d729:	and    ecx,0x7ffffffe
   14002d72f:	xor    ecx,DWORD PTR [r9+0x37c]
   14002d736:	shr    ecx,1
   14002d738:	imul   eax,eax,0x9908b0df
   14002d73e:	xor    ecx,eax
   14002d740:	mov    eax,DWORD PTR [r9+0x384]
   14002d747:	xor    ecx,DWORD PTR [r9+0x9b0]
   14002d74e:	mov    DWORD PTR [r9+0x37c],ecx
   14002d755:	mov    ecx,eax
   14002d757:	and    eax,0x1
   14002d75a:	xor    ecx,DWORD PTR [r9+0x380]
   14002d761:	imul   eax,eax,0x9908b0df
   14002d767:	and    ecx,0x7ffffffe
   14002d76d:	xor    ecx,DWORD PTR [r9+0x380]
   14002d774:	shr    ecx,1
   14002d776:	xor    ecx,eax
   14002d778:	mov    eax,DWORD PTR [r9+0x388]
   14002d77f:	xor    ecx,DWORD PTR [r9+0x9b4]
   14002d786:	mov    DWORD PTR [r9+0x380],ecx
   14002d78d:	mov    ecx,eax
   14002d78f:	and    eax,0x1
   14002d792:	xor    ecx,DWORD PTR [r9+0x384]
   14002d799:	imul   eax,eax,0x9908b0df
   14002d79f:	and    ecx,0x7ffffffe
   14002d7a5:	xor    ecx,DWORD PTR [r9+0x384]
   14002d7ac:	shr    ecx,1
   14002d7ae:	xor    ecx,eax
   14002d7b0:	mov    eax,DWORD PTR [r9+0x38c]
   14002d7b7:	xor    ecx,DWORD PTR [r9+0x9b8]
   14002d7be:	mov    DWORD PTR [r9+0x384],ecx
   14002d7c5:	mov    ecx,eax
   14002d7c7:	and    eax,0x1
   14002d7ca:	xor    ecx,DWORD PTR [r9+0x388]
   14002d7d1:	imul   eax,eax,0x9908b0df
   14002d7d7:	and    ecx,0x7ffffffe
   14002d7dd:	xor    ecx,DWORD PTR [r9+0x388]
   14002d7e4:	shr    ecx,1
   14002d7e6:	xor    ecx,eax
   14002d7e8:	xor    ecx,DWORD PTR [r9+0x9bc]
   14002d7ef:	mov    DWORD PTR [r9+0x388],ecx
   14002d7f6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14002d800:	mov    eax,DWORD PTR [rdx]
   14002d802:	lea    rdx,[rdx+0x4]
   14002d806:	mov    ecx,eax
   14002d808:	and    eax,0x1
   14002d80b:	xor    ecx,DWORD PTR [rdx-0x8]
   14002d80e:	and    ecx,0x7ffffffe
   14002d814:	xor    ecx,DWORD PTR [rdx-0x8]
   14002d817:	imul   eax,eax,0x9908b0df
   14002d81d:	shr    ecx,1
   14002d81f:	xor    ecx,eax
   14002d821:	xor    ecx,DWORD PTR [rdx-0x394]
   14002d827:	mov    DWORD PTR [rdx-0x8],ecx
   14002d82a:	dec    r8
   14002d82d:	jne    0x14002d800
   14002d82f:	mov    eax,DWORD PTR [r9]
   14002d832:	mov    ecx,DWORD PTR [r9+0x9bc]
   14002d839:	mov    QWORD PTR [r9+0x9c0],r8
   14002d840:	xor    ecx,eax
   14002d842:	and    eax,0x1
   14002d845:	and    ecx,0x7ffffffe
   14002d84b:	xor    ecx,DWORD PTR [r9+0x9bc]
   14002d852:	imul   eax,eax,0x9908b0df
   14002d858:	shr    ecx,1
   14002d85a:	xor    ecx,eax
   14002d85c:	xor    ecx,DWORD PTR [r9+0x630]
   14002d863:	mov    DWORD PTR [r9+0x9bc],ecx
   14002d86a:	add    rsp,0x28
   14002d86e:	ret    
   14002d86f:	int3   
   14002d870:	lea    rax,[rip+0x27959]        # 0x1400551d0
   14002d877:	ret    
   14002d878:	int3   
   14002d879:	int3   
   14002d87a:	int3   
   14002d87b:	int3   
   14002d87c:	int3   
   14002d87d:	int3   
   14002d87e:	int3   
   14002d87f:	int3   
   14002d880:	lea    rax,[rip+0x28999]        # 0x140056220
   14002d887:	ret    
   14002d888:	int3   
   14002d889:	int3   
   14002d88a:	int3   
   14002d88b:	int3   
   14002d88c:	int3   
   14002d88d:	int3   
   14002d88e:	int3   
   14002d88f:	int3   
   14002d890:	mov    rcx,QWORD PTR [rcx]
   14002d893:	test   rcx,rcx
   14002d896:	je     0x14002d89f
   14002d898:	mov    rax,QWORD PTR [rcx]
   14002d89b:	rex.W jmp QWORD PTR [rax+0x8]
   14002d89f:	lea    rax,[rip+0x2788a]        # 0x140055130
   14002d8a6:	ret    
   14002d8a7:	int3   
   14002d8a8:	int3   
   14002d8a9:	int3   
   14002d8aa:	int3   
   14002d8ab:	int3   
   14002d8ac:	int3   
   14002d8ad:	int3   
   14002d8ae:	int3   
   14002d8af:	int3   
   14002d8b0:	rex push rbp
   14002d8b2:	push   rsi
   14002d8b3:	push   rdi
   14002d8b4:	push   r14
   14002d8b6:	push   r15
   14002d8b8:	mov    rbp,rsp
   14002d8bb:	sub    rsp,0x70
   14002d8bf:	mov    QWORD PTR [rbp-0x28],0xfffffffffffffffe
   14002d8c7:	mov    QWORD PTR [rsp+0xb0],rbx
   14002d8cf:	mov    rdi,rcx
   14002d8d2:	mov    rax,QWORD PTR [rcx+0x38]
   14002d8d6:	mov    rcx,QWORD PTR [rax]
   14002d8d9:	test   rcx,rcx
   14002d8dc:	je     0x14002d90a
   14002d8de:	mov    rdx,QWORD PTR [rdi+0x50]
   14002d8e2:	movsxd r8,DWORD PTR [rdx]
   14002d8e5:	lea    rax,[rcx+r8*1]
   14002d8e9:	cmp    rcx,rax
   14002d8ec:	jae    0x14002d90a
   14002d8ee:	lea    eax,[r8-0x1]
   14002d8f2:	mov    DWORD PTR [rdx],eax
   14002d8f4:	mov    rcx,QWORD PTR [rdi+0x38]
   14002d8f8:	mov    rdx,QWORD PTR [rcx]
   14002d8fb:	lea    rax,[rdx+0x1]
   14002d8ff:	mov    QWORD PTR [rcx],rax
   14002d902:	movzx  eax,BYTE PTR [rdx]
   14002d905:	jmp    0x14002db6d
   14002d90a:	cmp    QWORD PTR [rdi+0x90],0x0
   14002d912:	jne    0x14002d91d
   14002d914:	or     rax,0xffffffffffffffff
   14002d918:	jmp    0x14002db6d
   14002d91d:	mov    rax,QWORD PTR [rdi+0x18]
   14002d921:	mov    rcx,QWORD PTR [rax]
   14002d924:	lea    rax,[rdi+0x80]
   14002d92b:	cmp    rcx,rax
   14002d92e:	jne    0x14002d944
   14002d930:	mov    rdx,QWORD PTR [rdi+0x68]
   14002d934:	mov    r9,QWORD PTR [rdi+0x70]
   14002d938:	mov    r8,rdx
   14002d93b:	mov    rcx,rdi
   14002d93e:	call   QWORD PTR [rip+0x8874]        # 0x1400361b8
   14002d944:	cmp    QWORD PTR [rdi+0x78],0x0
   14002d949:	jne    0x14002d96e
   14002d94b:	mov    rcx,QWORD PTR [rdi+0x90]
   14002d952:	call   QWORD PTR [rip+0x8b80]        # 0x1400364d8
   14002d958:	cmp    eax,0xffffffff
   14002d95b:	je     0x14002d965
   14002d95d:	movzx  esi,al
   14002d960:	jmp    0x14002db6b
   14002d965:	or     rsi,0xffffffffffffffff
   14002d969:	jmp    0x14002db6b
   14002d96e:	mov    QWORD PTR [rbp-0x8],0xf
   14002d976:	xor    r15d,r15d
   14002d979:	mov    QWORD PTR [rbp-0x10],r15
   14002d97d:	mov    BYTE PTR [rbp-0x20],r15b
   14002d981:	mov    rcx,QWORD PTR [rdi+0x90]
   14002d988:	call   QWORD PTR [rip+0x8b4a]        # 0x1400364d8
   14002d98e:	or     rsi,0xffffffffffffffff
   14002d992:	cmp    eax,0xffffffff
   14002d995:	mov    r14d,eax
   14002d998:	je     0x14002db5b
   14002d99e:	mov    rcx,rsi
   14002d9a1:	mov    rdx,QWORD PTR [rbp-0x10]
   14002d9a5:	sub    rcx,rdx
   14002d9a8:	cmp    rcx,0x1
   14002d9ac:	jbe    0x14002db4d
   14002d9b2:	lea    rbx,[rdx+0x1]
   14002d9b6:	cmp    rbx,0xfffffffffffffffe
   14002d9ba:	ja     0x14002db3f
   14002d9c0:	mov    r9,QWORD PTR [rbp-0x8]
   14002d9c4:	cmp    r9,rbx
   14002d9c7:	jae    0x14002d9da
   14002d9c9:	mov    r8,rdx
   14002d9cc:	mov    rdx,rbx
   14002d9cf:	lea    rcx,[rbp-0x20]
   14002d9d3:	call   0x14001c600
   14002d9d8:	jmp    0x14002d9f2
   14002d9da:	test   rbx,rbx
   14002d9dd:	jne    0x14002d9ff
   14002d9df:	mov    QWORD PTR [rbp-0x10],r15
   14002d9e3:	lea    rax,[rbp-0x20]
   14002d9e7:	cmp    r9,0x10
   14002d9eb:	cmovae rax,QWORD PTR [rbp-0x20]
   14002d9f0:	mov    BYTE PTR [rax],bl
   14002d9f2:	mov    rdx,QWORD PTR [rbp-0x10]
   14002d9f6:	mov    r9,QWORD PTR [rbp-0x8]
   14002d9fa:	test   rbx,rbx
   14002d9fd:	je     0x14002da2e
   14002d9ff:	lea    rax,[rbp-0x20]
   14002da03:	cmp    r9,0x10
   14002da07:	cmovae rax,QWORD PTR [rbp-0x20]
   14002da0c:	mov    BYTE PTR [rax+rdx*1],r14b
   14002da10:	mov    QWORD PTR [rbp-0x10],rbx
   14002da14:	lea    rax,[rbp-0x20]
   14002da18:	cmp    QWORD PTR [rbp-0x8],0x10
   14002da1d:	cmovae rax,QWORD PTR [rbp-0x20]
   14002da22:	mov    BYTE PTR [rax+rbx*1],0x0
   14002da26:	mov    r9,QWORD PTR [rbp-0x8]
   14002da2a:	mov    rdx,QWORD PTR [rbp-0x10]
   14002da2e:	lea    rcx,[rbp-0x20]
   14002da32:	cmp    r9,0x10
   14002da36:	cmovae rcx,QWORD PTR [rbp-0x20]
   14002da3b:	lea    r8,[rbp-0x20]
   14002da3f:	cmovae r8,QWORD PTR [rbp-0x20]
   14002da44:	lea    r9,[rcx+rdx*1]
   14002da48:	lea    rdx,[rdi+0x84]
   14002da4f:	lea    rax,[rbp+0x38]
   14002da53:	mov    QWORD PTR [rsp+0x38],rax
   14002da58:	lea    rax,[rbp-0x2f]
   14002da5c:	mov    QWORD PTR [rsp+0x30],rax
   14002da61:	lea    rax,[rbp-0x30]
   14002da65:	mov    QWORD PTR [rsp+0x28],rax
   14002da6a:	lea    rax,[rbp+0x30]
   14002da6e:	mov    QWORD PTR [rsp+0x20],rax
   14002da73:	mov    rcx,QWORD PTR [rdi+0x78]
   14002da77:	call   QWORD PTR [rip+0x8823]        # 0x1400362a0
   14002da7d:	test   eax,eax
   14002da7f:	js     0x14002db5b
   14002da85:	cmp    eax,0x1
   14002da88:	jle    0x14002da9c
   14002da8a:	cmp    eax,0x3
   14002da8d:	jne    0x14002db5b
   14002da93:	cmp    QWORD PTR [rbp-0x10],0x1
   14002da98:	jae    0x14002dad8
   14002da9a:	jmp    0x14002dac6
   14002da9c:	lea    rax,[rbp-0x30]
   14002daa0:	lea    rcx,[rbp-0x20]
   14002daa4:	cmp    QWORD PTR [rbp+0x38],rax
   14002daa8:	jne    0x14002dafe
   14002daaa:	lea    rax,[rbp-0x20]
   14002daae:	cmp    QWORD PTR [rbp-0x8],0x10
   14002dab3:	cmovae rax,QWORD PTR [rbp-0x20]
   14002dab8:	mov    r8,QWORD PTR [rbp+0x30]
   14002dabc:	sub    r8,rax
   14002dabf:	xor    edx,edx
   14002dac1:	call   0x140023080
   14002dac6:	mov    rcx,QWORD PTR [rdi+0x90]
   14002dacd:	call   QWORD PTR [rip+0x8a05]        # 0x1400364d8
   14002dad3:	jmp    0x14002d992
   14002dad8:	lea    r8,[rbp-0x20]
   14002dadc:	cmp    QWORD PTR [rbp-0x8],0x10
   14002dae1:	cmovae r8,QWORD PTR [rbp-0x20]
   14002dae6:	mov    edx,0x1
   14002daeb:	mov    r9d,edx
   14002daee:	lea    rcx,[rbp-0x30]
   14002daf2:	call   QWORD PTR [rip+0x8970]        # 0x140036468
   14002daf8:	movzx  esi,BYTE PTR [rbp-0x30]
   14002dafc:	jmp    0x14002db5b
   14002dafe:	cmp    QWORD PTR [rbp-0x8],0x10
   14002db03:	cmovae rcx,QWORD PTR [rbp-0x20]
   14002db08:	mov    eax,DWORD PTR [rbp-0x10]
   14002db0b:	mov    rdx,QWORD PTR [rbp+0x30]
   14002db0f:	sub    eax,edx
   14002db11:	add    eax,ecx
   14002db13:	movsxd rbx,eax
   14002db16:	test   eax,eax
   14002db18:	jle    0x14002daf8
   14002db1a:	nop    WORD PTR [rax+rax*1+0x0]
   14002db20:	dec    rbx
   14002db23:	movsx  ecx,BYTE PTR [rbx+rdx*1]
   14002db27:	mov    rdx,QWORD PTR [rdi+0x90]
   14002db2e:	call   QWORD PTR [rip+0x8964]        # 0x140036498
   14002db34:	test   rbx,rbx
   14002db37:	jle    0x14002daf8
   14002db39:	mov    rdx,QWORD PTR [rbp+0x30]
   14002db3d:	jmp    0x14002db20
   14002db3f:	lea    rcx,[rip+0xedd2]        # 0x14003c918
   14002db46:	call   QWORD PTR [rip+0x86d4]        # 0x140036220
   14002db4c:	int3   
   14002db4d:	lea    rcx,[rip+0xedc4]        # 0x14003c918
   14002db54:	call   QWORD PTR [rip+0x86c6]        # 0x140036220
   14002db5a:	nop
   14002db5b:	cmp    QWORD PTR [rbp-0x8],0x10
   14002db60:	jb     0x14002db6b
   14002db62:	mov    rcx,QWORD PTR [rbp-0x20]
   14002db66:	call   0x140030282
   14002db6b:	mov    eax,esi
   14002db6d:	mov    rbx,QWORD PTR [rsp+0xb0]
   14002db75:	add    rsp,0x70
   14002db79:	pop    r15
   14002db7b:	pop    r14
   14002db7d:	pop    rdi
   14002db7e:	pop    rsi
   14002db7f:	pop    rbp
   14002db80:	ret    
   14002db81:	int3   
   14002db82:	int3   
   14002db83:	int3   
   14002db84:	int3   
   14002db85:	int3   
   14002db86:	int3   
   14002db87:	int3   
   14002db88:	int3   
   14002db89:	int3   
   14002db8a:	int3   
   14002db8b:	int3   
   14002db8c:	int3   
   14002db8d:	int3   
   14002db8e:	int3   
   14002db8f:	int3   
   14002db90:	rex push rbx
   14002db92:	sub    rsp,0x20
   14002db96:	mov    rax,QWORD PTR [rcx+0x38]
   14002db9a:	mov    rbx,rcx
   14002db9d:	mov    rcx,QWORD PTR [rax]
   14002dba0:	test   rcx,rcx
   14002dba3:	je     0x14002dbbd
   14002dba5:	mov    rax,QWORD PTR [rbx+0x50]
   14002dba9:	movsxd rdx,DWORD PTR [rax]
   14002dbac:	add    rdx,rcx
   14002dbaf:	cmp    rcx,rdx
   14002dbb2:	jae    0x14002dbbd
   14002dbb4:	movzx  eax,BYTE PTR [rcx]
   14002dbb7:	add    rsp,0x20
   14002dbbb:	pop    rbx
   14002dbbc:	ret    
   14002dbbd:	mov    rax,QWORD PTR [rbx]
   14002dbc0:	mov    rcx,rbx
   14002dbc3:	mov    QWORD PTR [rsp+0x30],rdi
   14002dbc8:	call   QWORD PTR [rax+0x38]
   14002dbcb:	mov    edi,eax
   14002dbcd:	cmp    eax,0xffffffff
   14002dbd0:	jne    0x14002dbdf
   14002dbd2:	or     eax,eax
   14002dbd4:	mov    rdi,QWORD PTR [rsp+0x30]
   14002dbd9:	add    rsp,0x20
   14002dbdd:	pop    rbx
   14002dbde:	ret    
   14002dbdf:	mov    rax,QWORD PTR [rbx]
   14002dbe2:	mov    edx,edi
   14002dbe4:	mov    rcx,rbx
   14002dbe7:	call   QWORD PTR [rax+0x20]
   14002dbea:	mov    eax,edi
   14002dbec:	mov    rdi,QWORD PTR [rsp+0x30]
   14002dbf1:	add    rsp,0x20
   14002dbf5:	pop    rbx
   14002dbf6:	ret    
   14002dbf7:	int3   
   14002dbf8:	int3   
   14002dbf9:	int3   
   14002dbfa:	int3   
   14002dbfb:	int3   
   14002dbfc:	int3   
   14002dbfd:	int3   
   14002dbfe:	int3   
   14002dbff:	int3   
   14002dc00:	mov    r9,QWORD PTR [rcx+0x38]
   14002dc04:	mov    rdx,QWORD PTR [r9]
   14002dc07:	test   rdx,rdx
   14002dc0a:	je     0x14002dc5b
   14002dc0c:	mov    r10,QWORD PTR [rcx+0x50]
   14002dc10:	movsxd rax,DWORD PTR [r10]
   14002dc13:	add    rax,rdx
   14002dc16:	cmp    rdx,rax
   14002dc19:	jae    0x14002dc1f
   14002dc1b:	movzx  eax,BYTE PTR [rdx]
   14002dc1e:	ret    
   14002dc1f:	test   BYTE PTR [rcx+0x70],0x4
   14002dc23:	jne    0x14002dc5b
   14002dc25:	mov    rax,QWORD PTR [rcx+0x40]
   14002dc29:	mov    r8,QWORD PTR [rax]
   14002dc2c:	test   r8,r8
   14002dc2f:	je     0x14002dc5b
   14002dc31:	cmp    r8,rdx
   14002dc34:	ja     0x14002dc3c
   14002dc36:	cmp    QWORD PTR [rcx+0x68],rdx
   14002dc3a:	jbe    0x14002dc5b
   14002dc3c:	cmp    QWORD PTR [rcx+0x68],r8
   14002dc40:	jae    0x14002dc46
   14002dc42:	mov    QWORD PTR [rcx+0x68],r8
   14002dc46:	mov    rax,QWORD PTR [rcx+0x68]
   14002dc4a:	sub    eax,DWORD PTR [r9]
   14002dc4d:	mov    DWORD PTR [r10],eax
   14002dc50:	mov    rax,QWORD PTR [rcx+0x38]
   14002dc54:	mov    rcx,QWORD PTR [rax]
   14002dc57:	movzx  eax,BYTE PTR [rcx]
   14002dc5a:	ret    
   14002dc5b:	or     eax,0xffffffff
   14002dc5e:	ret    
   14002dc5f:	int3   
   14002dc60:	rex push rdi
   14002dc62:	sub    rsp,0x30
   14002dc66:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002dc6f:	mov    QWORD PTR [rsp+0x48],rbx
   14002dc74:	mov    rdi,rcx
   14002dc77:	mov    QWORD PTR [rsp+0x40],rcx
   14002dc7c:	call   0x14002c4f0
   14002dc81:	nop
   14002dc82:	mov    rax,QWORD PTR [rdi+0x78]
   14002dc86:	mov    rax,QWORD PTR [rax]
   14002dc89:	mov    rax,QWORD PTR [rax]
   14002dc8c:	mov    rcx,QWORD PTR [rax+0x10]
   14002dc90:	mov    rax,QWORD PTR [rcx]
   14002dc93:	call   QWORD PTR [rax+0x30]
   14002dc96:	mov    ebx,eax
   14002dc98:	mov    rcx,rdi
   14002dc9b:	call   0x140024800
   14002dca0:	mov    eax,ebx
   14002dca2:	mov    rbx,QWORD PTR [rsp+0x48]
   14002dca7:	add    rsp,0x30
   14002dcab:	pop    rdi
   14002dcac:	ret    
   14002dcad:	int3   
   14002dcae:	int3   
   14002dcaf:	int3   
   14002dcb0:	rex push rbx
   14002dcb2:	sub    rsp,0x20
   14002dcb6:	mov    rax,QWORD PTR [rcx+0x38]
   14002dcba:	mov    rbx,rcx
   14002dcbd:	cmp    QWORD PTR [rax],0x0
   14002dcc1:	jne    0x14002dccc
   14002dcc3:	mov    rax,QWORD PTR [rcx]
   14002dcc6:	call   QWORD PTR [rax+0xb0]
   14002dccc:	mov    rax,QWORD PTR [rbx+0x38]
   14002dcd0:	mov    rdx,QWORD PTR [rax]
   14002dcd3:	mov    rax,QWORD PTR [rbx+0x50]
   14002dcd7:	movsxd rcx,DWORD PTR [rax]
   14002dcda:	add    rcx,rdx
   14002dcdd:	cmp    rdx,rcx
   14002dce0:	jae    0x14002dceb
   14002dce2:	movzx  eax,BYTE PTR [rdx]
   14002dce5:	add    rsp,0x20
   14002dce9:	pop    rbx
   14002dcea:	ret    
   14002dceb:	mov    rax,QWORD PTR [rbx+0x18]
   14002dcef:	mov    QWORD PTR [rsp+0x38],rsi
   14002dcf4:	mov    rcx,rdx
   14002dcf7:	sub    rcx,QWORD PTR [rax]
   14002dcfa:	mov    QWORD PTR [rsp+0x40],rdi
   14002dcff:	lea    rdi,[rbx+0xa0]
   14002dd06:	cmp    QWORD PTR [rdi],rcx
   14002dd09:	lea    rax,[rsp+0x30]
   14002dd0e:	mov    QWORD PTR [rsp+0x30],rcx
   14002dd13:	cmovl  rax,rdi
   14002dd17:	mov    rsi,QWORD PTR [rax]
   14002dd1a:	test   rsi,rsi
   14002dd1d:	je     0x14002dd38
   14002dd1f:	mov    rcx,QWORD PTR [rdi]
   14002dd22:	sub    rdx,rsi
   14002dd25:	mov    r8,rsi
   14002dd28:	sub    rcx,rsi
   14002dd2b:	add    rcx,QWORD PTR [rbx+0x90]
   14002dd32:	call   QWORD PTR [rip+0x8728]        # 0x140036460
   14002dd38:	mov    rax,QWORD PTR [rdi]
   14002dd3b:	mov    rcx,QWORD PTR [rbx+0x90]
   14002dd42:	lea    rdx,[rcx+rax*1]
   14002dd46:	sub    rcx,rsi
   14002dd49:	add    rcx,rax
   14002dd4c:	mov    rax,QWORD PTR [rbx+0x18]
   14002dd50:	mov    QWORD PTR [rax],rcx
   14002dd53:	mov    rax,QWORD PTR [rbx+0x38]
   14002dd57:	lea    rcx,[rbx+0x70]
   14002dd5b:	mov    QWORD PTR [rax],rdx
   14002dd5e:	mov    rax,QWORD PTR [rbx+0x50]
   14002dd62:	sub    edx,edx
   14002dd64:	mov    DWORD PTR [rax],edx
   14002dd66:	mov    r9,QWORD PTR [rbx+0x98]
   14002dd6d:	mov    r8,QWORD PTR [rbx+0x90]
   14002dd74:	sub    r9,QWORD PTR [rdi]
   14002dd77:	add    r8,QWORD PTR [rdi]
   14002dd7a:	mov    rdx,QWORD PTR [rbx+0x88]
   14002dd81:	call   0x14000ceb0
   14002dd86:	mov    rsi,QWORD PTR [rsp+0x38]
   14002dd8b:	mov    rdx,rax
   14002dd8e:	cmp    rax,0xffffffffffffffff
   14002dd92:	jne    0x14002dd9a
   14002dd94:	or     DWORD PTR [rbx+0x68],0x1
   14002dd98:	xor    edx,edx
   14002dd9a:	mov    rcx,QWORD PTR [rdi]
   14002dd9d:	mov    rax,QWORD PTR [rbx+0x38]
   14002dda1:	mov    rdi,QWORD PTR [rsp+0x40]
   14002dda6:	add    rcx,QWORD PTR [rbx+0x90]
   14002ddad:	add    rcx,rdx
   14002ddb0:	sub    ecx,DWORD PTR [rax]
   14002ddb2:	mov    rax,QWORD PTR [rbx+0x50]
   14002ddb6:	mov    DWORD PTR [rax],ecx
   14002ddb8:	test   rdx,rdx
   14002ddbb:	je     0x14002ddcd
   14002ddbd:	mov    rax,QWORD PTR [rbx+0x38]
   14002ddc1:	mov    rcx,QWORD PTR [rax]
   14002ddc4:	movzx  eax,BYTE PTR [rcx]
   14002ddc7:	add    rsp,0x20
   14002ddcb:	pop    rbx
   14002ddcc:	ret    
   14002ddcd:	or     eax,0xffffffff
   14002ddd0:	add    rsp,0x20
   14002ddd4:	pop    rbx
   14002ddd5:	ret    
   14002ddd6:	int3   
   14002ddd7:	int3   
   14002ddd8:	int3   
   14002ddd9:	int3   
   14002ddda:	int3   
   14002dddb:	int3   
   14002dddc:	int3   
   14002dddd:	int3   
   14002ddde:	int3   
   14002dddf:	int3   
   14002dde0:	rex push rbx
   14002dde2:	sub    rsp,0x20
   14002dde6:	mov    rax,QWORD PTR [rcx+0x38]
   14002ddea:	mov    rbx,rcx
   14002dded:	cmp    QWORD PTR [rax],0x0
   14002ddf1:	jne    0x14002ddfc
   14002ddf3:	mov    rax,QWORD PTR [rcx]
   14002ddf6:	call   QWORD PTR [rax+0xb0]
   14002ddfc:	mov    rax,QWORD PTR [rbx+0x38]
   14002de00:	mov    rdx,QWORD PTR [rax]
   14002de03:	mov    rax,QWORD PTR [rbx+0x50]
   14002de07:	movsxd rcx,DWORD PTR [rax]
   14002de0a:	add    rcx,rdx
   14002de0d:	cmp    rdx,rcx
   14002de10:	jae    0x14002de1b
   14002de12:	movzx  eax,BYTE PTR [rdx]
   14002de15:	add    rsp,0x20
   14002de19:	pop    rbx
   14002de1a:	ret    
   14002de1b:	mov    rax,QWORD PTR [rbx+0x18]
   14002de1f:	mov    QWORD PTR [rsp+0x38],rsi
   14002de24:	mov    rcx,rdx
   14002de27:	sub    rcx,QWORD PTR [rax]
   14002de2a:	mov    QWORD PTR [rsp+0x40],rdi
   14002de2f:	lea    rdi,[rbx+0xa0]
   14002de36:	cmp    QWORD PTR [rdi],rcx
   14002de39:	lea    rax,[rsp+0x30]
   14002de3e:	mov    QWORD PTR [rsp+0x30],rcx
   14002de43:	cmovl  rax,rdi
   14002de47:	mov    rsi,QWORD PTR [rax]
   14002de4a:	test   rsi,rsi
   14002de4d:	je     0x14002de68
   14002de4f:	mov    rcx,QWORD PTR [rdi]
   14002de52:	sub    rdx,rsi
   14002de55:	mov    r8,rsi
   14002de58:	sub    rcx,rsi
   14002de5b:	add    rcx,QWORD PTR [rbx+0x90]
   14002de62:	call   QWORD PTR [rip+0x85f8]        # 0x140036460
   14002de68:	mov    rax,QWORD PTR [rdi]
   14002de6b:	mov    rcx,QWORD PTR [rbx+0x90]
   14002de72:	lea    rdx,[rcx+rax*1]
   14002de76:	sub    rcx,rsi
   14002de79:	add    rcx,rax
   14002de7c:	mov    rax,QWORD PTR [rbx+0x18]
   14002de80:	mov    QWORD PTR [rax],rcx
   14002de83:	mov    rax,QWORD PTR [rbx+0x38]
   14002de87:	lea    rcx,[rbx+0x70]
   14002de8b:	mov    QWORD PTR [rax],rdx
   14002de8e:	mov    rax,QWORD PTR [rbx+0x50]
   14002de92:	sub    edx,edx
   14002de94:	mov    DWORD PTR [rax],edx
   14002de96:	mov    r9,QWORD PTR [rbx+0x98]
   14002de9d:	mov    r8,QWORD PTR [rbx+0x90]
   14002dea4:	sub    r9,QWORD PTR [rdi]
   14002dea7:	add    r8,QWORD PTR [rdi]
   14002deaa:	mov    rdx,QWORD PTR [rbx+0x88]
   14002deb1:	call   0x14000d070
   14002deb6:	mov    rsi,QWORD PTR [rsp+0x38]
   14002debb:	mov    rdx,rax
   14002debe:	cmp    rax,0xffffffffffffffff
   14002dec2:	jne    0x14002deca
   14002dec4:	or     DWORD PTR [rbx+0x68],0x1
   14002dec8:	xor    edx,edx
   14002deca:	mov    rcx,QWORD PTR [rdi]
   14002decd:	mov    rax,QWORD PTR [rbx+0x38]
   14002ded1:	mov    rdi,QWORD PTR [rsp+0x40]
   14002ded6:	add    rcx,QWORD PTR [rbx+0x90]
   14002dedd:	add    rcx,rdx
   14002dee0:	sub    ecx,DWORD PTR [rax]
   14002dee2:	mov    rax,QWORD PTR [rbx+0x50]
   14002dee6:	mov    DWORD PTR [rax],ecx
   14002dee8:	test   rdx,rdx
   14002deeb:	je     0x14002defd
   14002deed:	mov    rax,QWORD PTR [rbx+0x38]
   14002def1:	mov    rcx,QWORD PTR [rax]
   14002def4:	movzx  eax,BYTE PTR [rcx]
   14002def7:	add    rsp,0x20
   14002defb:	pop    rbx
   14002defc:	ret    
   14002defd:	or     eax,0xffffffff
   14002df00:	add    rsp,0x20
   14002df04:	pop    rbx
   14002df05:	ret    
   14002df06:	int3   
   14002df07:	int3   
   14002df08:	int3   
   14002df09:	int3   
   14002df0a:	int3   
   14002df0b:	int3   
   14002df0c:	int3   
   14002df0d:	int3   
   14002df0e:	int3   
   14002df0f:	int3   
   14002df10:	rex push rbx
   14002df12:	sub    rsp,0x20
   14002df16:	mov    rax,QWORD PTR [rcx+0x38]
   14002df1a:	mov    rbx,rcx
   14002df1d:	cmp    QWORD PTR [rax],0x0
   14002df21:	jne    0x14002df2c
   14002df23:	mov    rax,QWORD PTR [rcx]
   14002df26:	call   QWORD PTR [rax+0xb0]
   14002df2c:	mov    rax,QWORD PTR [rbx+0x38]
   14002df30:	mov    rdx,QWORD PTR [rax]
   14002df33:	mov    rax,QWORD PTR [rbx+0x50]
   14002df37:	movsxd rcx,DWORD PTR [rax]
   14002df3a:	add    rcx,rdx
   14002df3d:	cmp    rdx,rcx
   14002df40:	jae    0x14002df4b
   14002df42:	movzx  eax,BYTE PTR [rdx]
   14002df45:	add    rsp,0x20
   14002df49:	pop    rbx
   14002df4a:	ret    
   14002df4b:	mov    rax,QWORD PTR [rbx+0x18]
   14002df4f:	mov    QWORD PTR [rsp+0x38],rsi
   14002df54:	lea    rsi,[rbx+0x90]
   14002df5b:	mov    rcx,rdx
   14002df5e:	mov    QWORD PTR [rsp+0x40],rdi
   14002df63:	sub    rcx,QWORD PTR [rax]
   14002df66:	lea    rax,[rsp+0x30]
   14002df6b:	cmp    QWORD PTR [rsi],rcx
   14002df6e:	mov    QWORD PTR [rsp+0x30],rcx
   14002df73:	cmovl  rax,rsi
   14002df77:	mov    rdi,QWORD PTR [rax]
   14002df7a:	test   rdi,rdi
   14002df7d:	je     0x14002df98
   14002df7f:	mov    rcx,QWORD PTR [rsi]
   14002df82:	sub    rdx,rdi
   14002df85:	mov    r8,rdi
   14002df88:	sub    rcx,rdi
   14002df8b:	add    rcx,QWORD PTR [rbx+0x80]
   14002df92:	call   QWORD PTR [rip+0x84c8]        # 0x140036460
   14002df98:	mov    rax,QWORD PTR [rsi]
   14002df9b:	mov    rcx,QWORD PTR [rbx+0x80]
   14002dfa2:	lea    rdx,[rcx+rax*1]
   14002dfa6:	sub    rcx,rdi
   14002dfa9:	mov    rdi,QWORD PTR [rsp+0x40]
   14002dfae:	add    rcx,rax
   14002dfb1:	mov    rax,QWORD PTR [rbx+0x18]
   14002dfb5:	mov    QWORD PTR [rax],rcx
   14002dfb8:	mov    rax,QWORD PTR [rbx+0x38]
   14002dfbc:	mov    QWORD PTR [rax],rdx
   14002dfbf:	mov    rax,QWORD PTR [rbx+0x50]
   14002dfc3:	sub    edx,edx
   14002dfc5:	mov    DWORD PTR [rax],edx
   14002dfc7:	mov    rcx,QWORD PTR [rsi]
   14002dfca:	mov    rax,QWORD PTR [rbx+0x38]
   14002dfce:	add    rcx,QWORD PTR [rbx+0x80]
   14002dfd5:	mov    rsi,QWORD PTR [rsp+0x38]
   14002dfda:	sub    ecx,DWORD PTR [rax]
   14002dfdc:	mov    rax,QWORD PTR [rbx+0x50]
   14002dfe0:	mov    DWORD PTR [rax],ecx
   14002dfe2:	or     eax,0xffffffff
   14002dfe5:	add    rsp,0x20
   14002dfe9:	pop    rbx
   14002dfea:	ret    
   14002dfeb:	int3   
   14002dfec:	int3   
   14002dfed:	int3   
   14002dfee:	int3   
   14002dfef:	int3   
   14002dff0:	rex push rbx
   14002dff2:	sub    rsp,0x20
   14002dff6:	mov    rax,QWORD PTR [rcx+0x38]
   14002dffa:	mov    rbx,rcx
   14002dffd:	cmp    QWORD PTR [rax],0x0
   14002e001:	jne    0x14002e00c
   14002e003:	mov    rax,QWORD PTR [rcx]
   14002e006:	call   QWORD PTR [rax+0xb0]
   14002e00c:	mov    rax,QWORD PTR [rbx+0x38]
   14002e010:	mov    rdx,QWORD PTR [rax]
   14002e013:	mov    rax,QWORD PTR [rbx+0x50]
   14002e017:	movsxd rcx,DWORD PTR [rax]
   14002e01a:	add    rcx,rdx
   14002e01d:	cmp    rdx,rcx
   14002e020:	jae    0x14002e02b
   14002e022:	movzx  eax,BYTE PTR [rdx]
   14002e025:	add    rsp,0x20
   14002e029:	pop    rbx
   14002e02a:	ret    
   14002e02b:	mov    rax,QWORD PTR [rbx+0x18]
   14002e02f:	mov    QWORD PTR [rsp+0x38],rsi
   14002e034:	mov    rcx,rdx
   14002e037:	sub    rcx,QWORD PTR [rax]
   14002e03a:	mov    QWORD PTR [rsp+0x40],rdi
   14002e03f:	lea    rdi,[rbx+0x98]
   14002e046:	cmp    QWORD PTR [rdi],rcx
   14002e049:	lea    rax,[rsp+0x30]
   14002e04e:	mov    QWORD PTR [rsp+0x30],rcx
   14002e053:	cmovl  rax,rdi
   14002e057:	mov    rsi,QWORD PTR [rax]
   14002e05a:	test   rsi,rsi
   14002e05d:	je     0x14002e078
   14002e05f:	mov    rcx,QWORD PTR [rdi]
   14002e062:	sub    rdx,rsi
   14002e065:	mov    r8,rsi
   14002e068:	sub    rcx,rsi
   14002e06b:	add    rcx,QWORD PTR [rbx+0x88]
   14002e072:	call   QWORD PTR [rip+0x83e8]        # 0x140036460
   14002e078:	mov    rax,QWORD PTR [rdi]
   14002e07b:	mov    rcx,QWORD PTR [rbx+0x88]
   14002e082:	lea    rdx,[rcx+rax*1]
   14002e086:	sub    rcx,rsi
   14002e089:	add    rcx,rax
   14002e08c:	mov    rax,QWORD PTR [rbx+0x18]
   14002e090:	mov    QWORD PTR [rax],rcx
   14002e093:	mov    rax,QWORD PTR [rbx+0x38]
   14002e097:	mov    QWORD PTR [rax],rdx
   14002e09a:	mov    rax,QWORD PTR [rbx+0x50]
   14002e09e:	sub    edx,edx
   14002e0a0:	mov    DWORD PTR [rax],edx
   14002e0a2:	mov    r9,QWORD PTR [rbx+0x70]
   14002e0a6:	mov    r8,QWORD PTR [rbx+0x90]
   14002e0ad:	mov    rax,QWORD PTR [r9]
   14002e0b0:	mov    rdx,QWORD PTR [rbx+0x88]
   14002e0b7:	sub    r8,QWORD PTR [rdi]
   14002e0ba:	movsxd rcx,DWORD PTR [rax+0x4]
   14002e0be:	add    rdx,QWORD PTR [rdi]
   14002e0c1:	mov    rcx,QWORD PTR [rcx+r9*1+0x48]
   14002e0c6:	call   QWORD PTR [rip+0x8104]        # 0x1400361d0
   14002e0cc:	mov    rsi,QWORD PTR [rsp+0x38]
   14002e0d1:	or     r8,0xffffffffffffffff
   14002e0d5:	test   rax,rax
   14002e0d8:	mov    rdx,r8
   14002e0db:	cmovne rdx,rax
   14002e0df:	cmp    rdx,r8
   14002e0e2:	jne    0x14002e0ea
   14002e0e4:	or     DWORD PTR [rbx+0x68],0x1
   14002e0e8:	xor    edx,edx
   14002e0ea:	mov    rcx,QWORD PTR [rdi]
   14002e0ed:	mov    rax,QWORD PTR [rbx+0x38]
   14002e0f1:	mov    rdi,QWORD PTR [rsp+0x40]
   14002e0f6:	add    rcx,QWORD PTR [rbx+0x88]
   14002e0fd:	add    rcx,rdx
   14002e100:	sub    ecx,DWORD PTR [rax]
   14002e102:	mov    rax,QWORD PTR [rbx+0x50]
   14002e106:	mov    DWORD PTR [rax],ecx
   14002e108:	test   rdx,rdx
   14002e10b:	je     0x14002e118
   14002e10d:	mov    rax,QWORD PTR [rbx+0x38]
   14002e111:	mov    rcx,QWORD PTR [rax]
   14002e114:	movzx  r8d,BYTE PTR [rcx]
   14002e118:	mov    eax,r8d
   14002e11b:	add    rsp,0x20
   14002e11f:	pop    rbx
   14002e120:	ret    
   14002e121:	int3   
   14002e122:	int3   
   14002e123:	int3   
   14002e124:	int3   
   14002e125:	int3   
   14002e126:	int3   
   14002e127:	int3   
   14002e128:	int3   
   14002e129:	int3   
   14002e12a:	int3   
   14002e12b:	int3   
   14002e12c:	int3   
   14002e12d:	int3   
   14002e12e:	int3   
   14002e12f:	int3   
   14002e130:	rex push rbx
   14002e132:	sub    rsp,0x20
   14002e136:	mov    rbx,rcx
   14002e139:	lea    rcx,[rsp+0x30]
   14002e13e:	call   0x14002e160
   14002e143:	mov    rcx,rax
   14002e146:	call   0x140021a50
   14002e14b:	mov    DWORD PTR [rbx],eax
   14002e14d:	mov    rax,rbx
   14002e150:	add    rsp,0x20
   14002e154:	pop    rbx
   14002e155:	ret    
   14002e156:	int3   
   14002e157:	int3   
   14002e158:	int3   
   14002e159:	int3   
   14002e15a:	int3   
   14002e15b:	int3   
   14002e15c:	int3   
   14002e15d:	int3   
   14002e15e:	int3   
   14002e15f:	int3   
   14002e160:	rex push rdi
   14002e162:	sub    rsp,0x40
   14002e166:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002e16f:	mov    QWORD PTR [rsp+0x50],rbx
   14002e174:	mov    QWORD PTR [rsp+0x68],rsi
   14002e179:	mov    rsi,rcx
   14002e17c:	lea    rcx,[rsp+0x58]
   14002e181:	call   QWORD PTR [rip+0x8261]        # 0x1400363e8
   14002e187:	lea    rcx,[rsp+0x58]
   14002e18c:	call   QWORD PTR [rip+0x825e]        # 0x1400363f0
   14002e192:	mov    rdx,rax
   14002e195:	test   rax,rax
   14002e198:	jne    0x14002e1cd
   14002e19a:	lea    rax,[rip+0xc9af]        # 0x14003ab50
   14002e1a1:	mov    QWORD PTR [rsp+0x60],rax
   14002e1a6:	lea    rdx,[rsp+0x60]
   14002e1ab:	lea    rcx,[rsp+0x28]
   14002e1b0:	call   QWORD PTR [rip+0x829a]        # 0x140036450
   14002e1b6:	lea    rax,[rip+0xc49b]        # 0x14003a658
   14002e1bd:	mov    QWORD PTR [rsp+0x28],rax
   14002e1c2:	lea    rcx,[rsp+0x28]
   14002e1c7:	call   0x14000e030
   14002e1cc:	nop
   14002e1cd:	movzx  edi,WORD PTR [rax+0xc]
   14002e1d1:	lea    eax,[rdi+0x1]
   14002e1d4:	cmp    eax,0x2
   14002e1d7:	jge    0x14002e1ea
   14002e1d9:	mov    ecx,0x1
   14002e1de:	xor    r8d,r8d
   14002e1e1:	movzx  edx,di
   14002e1e4:	call   0x140026650
   14002e1e9:	int3   
   14002e1ea:	cmp    di,0x1f
   14002e1ee:	jbe    0x14002e201
   14002e1f0:	mov    ecx,0x1
   14002e1f5:	mov    r8d,ecx
   14002e1f8:	movzx  edx,di
   14002e1fb:	call   0x140026650
   14002e200:	int3   
   14002e201:	mov    eax,0x76c
   14002e206:	movzx  ebx,WORD PTR [rdx+0x14]
   14002e20a:	add    bx,ax
   14002e20d:	movzx  eax,bx
   14002e210:	inc    eax
   14002e212:	cmp    eax,0x579
   14002e217:	jge    0x14002e22a
   14002e219:	mov    ecx,0x578
   14002e21e:	xor    r8d,r8d
   14002e221:	movzx  edx,bx
   14002e224:	call   0x140026710
   14002e229:	int3   
   14002e22a:	mov    eax,0x2710
   14002e22f:	cmp    bx,ax
   14002e232:	jbe    0x14002e248
   14002e234:	mov    ecx,0x578
   14002e239:	mov    r8d,0x1
   14002e23f:	movzx  edx,bx
   14002e242:	call   0x140026710
   14002e247:	int3   
   14002e248:	movzx  edx,WORD PTR [rdx+0x10]
   14002e24c:	inc    dx
   14002e24f:	lea    rcx,[rsp+0x58]
   14002e254:	call   QWORD PTR [rip+0x82b6]        # 0x140036510
   14002e25a:	movzx  eax,WORD PTR [rax]
   14002e25d:	mov    WORD PTR [rsi],bx
   14002e260:	mov    WORD PTR [rsi+0x2],ax
   14002e264:	mov    WORD PTR [rsi+0x4],di
   14002e268:	mov    rax,rsi
   14002e26b:	mov    rbx,QWORD PTR [rsp+0x50]
   14002e270:	mov    rsi,QWORD PTR [rsp+0x68]
   14002e275:	add    rsp,0x40
   14002e279:	pop    rdi
   14002e27a:	ret    
   14002e27b:	int3   
   14002e27c:	int3   
   14002e27d:	int3   
   14002e27e:	int3   
   14002e27f:	int3   
   14002e280:	mov    rdx,QWORD PTR [rcx]
   14002e283:	mov    rax,QWORD PTR [rcx+0x8]
   14002e287:	mov    QWORD PTR [rdx+0x8],rax
   14002e28b:	mov    rdx,QWORD PTR [rcx+0x8]
   14002e28f:	mov    rax,QWORD PTR [rcx]
   14002e292:	mov    QWORD PTR [rdx],rax
   14002e295:	ret    
   14002e296:	int3   
   14002e297:	int3   
   14002e298:	int3   
   14002e299:	int3   
   14002e29a:	int3   
   14002e29b:	int3   
   14002e29c:	int3   
   14002e29d:	int3   
   14002e29e:	int3   
   14002e29f:	int3   
   14002e2a0:	mov    rax,rcx
   14002e2a3:	ret    
   14002e2a4:	int3   
   14002e2a5:	int3   
   14002e2a6:	int3   
   14002e2a7:	int3   
   14002e2a8:	int3   
   14002e2a9:	int3   
   14002e2aa:	int3   
   14002e2ab:	int3   
   14002e2ac:	int3   
   14002e2ad:	int3   
   14002e2ae:	int3   
   14002e2af:	int3   
   14002e2b0:	mov    eax,DWORD PTR [rcx]
   14002e2b2:	ret    
   14002e2b3:	int3   
   14002e2b4:	int3   
   14002e2b5:	int3   
   14002e2b6:	int3   
   14002e2b7:	int3   
   14002e2b8:	int3   
   14002e2b9:	int3   
   14002e2ba:	int3   
   14002e2bb:	int3   
   14002e2bc:	int3   
   14002e2bd:	int3   
   14002e2be:	int3   
   14002e2bf:	int3   
   14002e2c0:	mov    eax,DWORD PTR [rcx]
   14002e2c2:	ret    
   14002e2c3:	int3   
   14002e2c4:	int3   
   14002e2c5:	int3   
   14002e2c6:	int3   
   14002e2c7:	int3   
   14002e2c8:	int3   
   14002e2c9:	int3   
   14002e2ca:	int3   
   14002e2cb:	int3   
   14002e2cc:	int3   
   14002e2cd:	int3   
   14002e2ce:	int3   
   14002e2cf:	int3   
   14002e2d0:	lea    rax,[rip+0x26ef9]        # 0x1400551d0
   14002e2d7:	ret    
   14002e2d8:	int3   
   14002e2d9:	int3   
   14002e2da:	int3   
   14002e2db:	int3   
   14002e2dc:	int3   
   14002e2dd:	int3   
   14002e2de:	int3   
   14002e2df:	int3   
   14002e2e0:	mov    QWORD PTR [rsp+0x10],rdx
   14002e2e5:	push   rbp
   14002e2e6:	push   rsi
   14002e2e7:	push   rdi
   14002e2e8:	sub    rsp,0x50
   14002e2ec:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14002e2f5:	mov    QWORD PTR [rsp+0x70],rbx
   14002e2fa:	mov    r9,rdx
   14002e2fd:	mov    rbx,rcx
   14002e300:	cmp    QWORD PTR [rdx+0x18],0x10
   14002e305:	jb     0x14002e30c
   14002e307:	mov    r8,QWORD PTR [rdx]
   14002e30a:	jmp    0x14002e30f
   14002e30c:	mov    r8,rdx
   14002e30f:	mov    rax,QWORD PTR [rdx+0x10]
   14002e313:	add    rax,r8
   14002e316:	cmp    QWORD PTR [rdx+0x28],rax
   14002e31a:	jne    0x14002e324
   14002e31c:	mov    rax,rcx
   14002e31f:	jmp    0x14002e4f5
   14002e324:	lea    rdx,[rsp+0x30]
   14002e329:	mov    rcx,r9
   14002e32c:	call   0x140029940
   14002e331:	nop
   14002e332:	mov    rax,QWORD PTR [rbx+0x20]
   14002e336:	mov    QWORD PTR [rsp+0x20],rax
   14002e33b:	xor    esi,esi
   14002e33d:	test   rax,rax
   14002e340:	je     0x14002e34e
   14002e342:	add    rax,0x11
   14002e346:	je     0x14002e351
   14002e348:	lea    rcx,[rax-0x11]
   14002e34c:	jmp    0x14002e354
   14002e34e:	mov    rax,rsi
   14002e351:	mov    rcx,rsi
   14002e354:	mov    r9,QWORD PTR [rcx+0x8]
   14002e358:	mov    QWORD PTR [rsp+0x88],r9
   14002e360:	test   rax,rax
   14002e363:	je     0x14002e36b
   14002e365:	add    rax,0xffffffffffffffef
   14002e369:	jmp    0x14002e36e
   14002e36b:	mov    rax,rsi
   14002e36e:	mov    rax,QWORD PTR [rax+0x8]
   14002e372:	mov    rbx,QWORD PTR [rax+0x48]
   14002e376:	and    rbx,0xfffffffffffffffe
   14002e37a:	je     0x14002e382
   14002e37c:	add    rbx,0xffffffffffffffb8
   14002e380:	jmp    0x14002e385
   14002e382:	mov    rbx,rsi
   14002e385:	mov    QWORD PTR [rsp+0x80],r9
   14002e38d:	test   rbx,rbx
   14002e390:	je     0x14002e4aa
   14002e396:	mov    rbp,QWORD PTR [rsp+0x40]
   14002e39b:	mov    r10,QWORD PTR [rsp+0x48]
   14002e3a0:	mov    r11,QWORD PTR [rsp+0x30]
   14002e3a5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14002e3b0:	lea    rdx,[rsp+0x30]
   14002e3b5:	cmp    r10,0x10
   14002e3b9:	cmovae rdx,r11
   14002e3bd:	mov    rdi,QWORD PTR [rbx+0x10]
   14002e3c1:	cmp    QWORD PTR [rbx+0x18],0x10
   14002e3c6:	jb     0x14002e3cd
   14002e3c8:	mov    rcx,QWORD PTR [rbx]
   14002e3cb:	jmp    0x14002e3d0
   14002e3cd:	mov    rcx,rbx
   14002e3d0:	mov    r8,rbp
   14002e3d3:	cmp    rdi,rbp
   14002e3d6:	cmovb  r8,rdi
   14002e3da:	test   r8,r8
   14002e3dd:	jne    0x14002e3e3
   14002e3df:	mov    eax,esi
   14002e3e1:	jmp    0x14002e3fa
   14002e3e3:	call   0x140030484
   14002e3e8:	mov    r9,QWORD PTR [rsp+0x80]
   14002e3f0:	mov    r10,QWORD PTR [rsp+0x48]
   14002e3f5:	mov    r11,QWORD PTR [rsp+0x30]
   14002e3fa:	cdqe   
   14002e3fc:	test   rax,rax
   14002e3ff:	jne    0x14002e413
   14002e401:	cmp    rdi,rbp
   14002e404:	jae    0x14002e40b
   14002e406:	or     eax,0xffffffff
   14002e409:	jmp    0x14002e413
   14002e40b:	mov    eax,esi
   14002e40d:	cmp    rdi,rbp
   14002e410:	setne  al
   14002e413:	test   eax,eax
   14002e415:	js     0x14002e428
   14002e417:	mov    r9,rbx
   14002e41a:	mov    QWORD PTR [rsp+0x80],rbx
   14002e422:	mov    rbx,QWORD PTR [rbx+0x50]
   14002e426:	jmp    0x14002e42c
   14002e428:	mov    rbx,QWORD PTR [rbx+0x58]
   14002e42c:	test   rbx,rbx
   14002e42f:	je     0x14002e43e
   14002e431:	add    rbx,0xffffffffffffffb8
   14002e435:	test   rbx,rbx
   14002e438:	jne    0x14002e3b0
   14002e43e:	mov    rdi,QWORD PTR [rsp+0x88]
   14002e446:	cmp    r9,rdi
   14002e449:	je     0x14002e4ad
   14002e44b:	mov    rbx,QWORD PTR [r9+0x10]
   14002e44f:	cmp    QWORD PTR [r9+0x18],0x10
   14002e454:	jb     0x14002e45b
   14002e456:	mov    rdx,QWORD PTR [r9]
   14002e459:	jmp    0x14002e45e
   14002e45b:	mov    rdx,r9
   14002e45e:	lea    rcx,[rsp+0x30]
   14002e463:	cmp    r10,0x10
   14002e467:	cmovae rcx,r11
   14002e46b:	mov    r8,rbx
   14002e46e:	cmp    rbp,rbx
   14002e471:	cmovb  r8,rbp
   14002e475:	test   r8,r8
   14002e478:	jne    0x14002e47e
   14002e47a:	mov    eax,esi
   14002e47c:	jmp    0x14002e48b
   14002e47e:	call   0x140030484
   14002e483:	mov    r9,QWORD PTR [rsp+0x80]
   14002e48b:	cdqe   
   14002e48d:	test   rax,rax
   14002e490:	jne    0x14002e4a4
   14002e492:	cmp    rbp,rbx
   14002e495:	jae    0x14002e49c
   14002e497:	or     eax,0xffffffff
   14002e49a:	jmp    0x14002e4a4
   14002e49c:	mov    eax,esi
   14002e49e:	cmp    rbp,rbx
   14002e4a1:	setne  al
   14002e4a4:	test   eax,eax
   14002e4a6:	js     0x14002e4ad
   14002e4a8:	jmp    0x14002e4b0
   14002e4aa:	mov    rdi,r9
   14002e4ad:	mov    r9,rdi
   14002e4b0:	mov    rax,QWORD PTR [rsp+0x20]
   14002e4b5:	test   rax,rax
   14002e4b8:	je     0x14002e4c6
   14002e4ba:	add    rax,0x11
   14002e4be:	je     0x14002e4c6
   14002e4c0:	add    rax,0xffffffffffffffef
   14002e4c4:	jmp    0x14002e4c9
   14002e4c6:	mov    rax,rsi
   14002e4c9:	cmp    r9,QWORD PTR [rax+0x8]
   14002e4cd:	je     0x14002e4e0
   14002e4cf:	lea    rcx,[r9+0x20]
   14002e4d3:	mov    rdx,QWORD PTR [rsp+0x78]
   14002e4d8:	call   0x14002e2e0
   14002e4dd:	mov    rsi,rax
   14002e4e0:	cmp    QWORD PTR [rsp+0x48],0x10
   14002e4e6:	jb     0x14002e4f2
   14002e4e8:	mov    rcx,QWORD PTR [rsp+0x30]
   14002e4ed:	call   0x140030282
   14002e4f2:	mov    rax,rsi
   14002e4f5:	mov    rbx,QWORD PTR [rsp+0x70]
   14002e4fa:	add    rsp,0x50
   14002e4fe:	pop    rdi
   14002e4ff:	pop    rsi
   14002e500:	pop    rbp
   14002e501:	ret    
   14002e502:	int3   
   14002e503:	int3   
   14002e504:	int3   
   14002e505:	int3   
   14002e506:	int3   
   14002e507:	int3   
   14002e508:	int3   
   14002e509:	int3   
   14002e50a:	int3   
   14002e50b:	int3   
   14002e50c:	int3   
   14002e50d:	int3   
   14002e50e:	int3   
   14002e50f:	int3   
   14002e510:	lock dec DWORD PTR [rcx+0xc]
   14002e514:	jne    0x14002e51d
   14002e516:	mov    rax,QWORD PTR [rcx]
   14002e519:	rex.W jmp QWORD PTR [rax+0x10]
   14002e51d:	ret    
   14002e51e:	int3   
   14002e51f:	int3   
   14002e520:	lea    rax,[rip+0xc3b9]        # 0x14003a8e0
   14002e527:	ret    
   14002e528:	int3   
   14002e529:	int3   
   14002e52a:	int3   
   14002e52b:	int3   
   14002e52c:	int3   
   14002e52d:	int3   
   14002e52e:	int3   
   14002e52f:	int3   
   14002e530:	mov    edx,DWORD PTR [rcx+0x18]
   14002e533:	test   edx,edx
   14002e535:	je     0x14002e56f
   14002e537:	dec    edx
   14002e539:	je     0x14002e567
   14002e53b:	dec    edx
   14002e53d:	je     0x14002e55f
   14002e53f:	dec    edx
   14002e541:	je     0x14002e557
   14002e543:	dec    edx
   14002e545:	jne    0x14002e54f
   14002e547:	lea    rax,[rip+0xc872]        # 0x14003adc0
   14002e54e:	ret    
   14002e54f:	lea    rax,[rip+0xc7aa]        # 0x14003ad00
   14002e556:	ret    
   14002e557:	lea    rax,[rip+0xc83a]        # 0x14003ad98
   14002e55e:	ret    
   14002e55f:	lea    rax,[rip+0xc812]        # 0x14003ad78
   14002e566:	ret    
   14002e567:	lea    rax,[rip+0xc7d2]        # 0x14003ad40
   14002e56e:	ret    
   14002e56f:	lea    rax,[rip+0xc7a2]        # 0x14003ad18
   14002e576:	ret    
   14002e577:	int3   
   14002e578:	int3   
   14002e579:	int3   
   14002e57a:	int3   
   14002e57b:	int3   
   14002e57c:	int3   
   14002e57d:	int3   
   14002e57e:	int3   
   14002e57f:	int3   
   14002e580:	mov    QWORD PTR [rsp+0x8],rbx
   14002e585:	mov    QWORD PTR [rsp+0x10],rsi
   14002e58a:	mov    QWORD PTR [rsp+0x18],rdi
   14002e58f:	push   r14
   14002e591:	sub    rsp,0x20
   14002e595:	xor    ebx,ebx
   14002e597:	mov    rdi,r8
   14002e59a:	mov    rsi,rdx
   14002e59d:	mov    r14,rcx
   14002e5a0:	test   r8,r8
   14002e5a3:	jle    0x14002e5cb
   14002e5a5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14002e5b0:	mov    rcx,QWORD PTR [r14]
   14002e5b3:	mov    r8,rdi
   14002e5b6:	lea    rdx,[rbx+rsi*1]
   14002e5ba:	sub    r8,rbx
   14002e5bd:	call   QWORD PTR [rip+0x7bfd]        # 0x1400361c0
   14002e5c3:	add    rbx,rax
   14002e5c6:	cmp    rbx,rdi
   14002e5c9:	jl     0x14002e5b0
   14002e5cb:	mov    rsi,QWORD PTR [rsp+0x38]
   14002e5d0:	mov    rdi,QWORD PTR [rsp+0x40]
   14002e5d5:	mov    rax,rbx
   14002e5d8:	mov    rbx,QWORD PTR [rsp+0x30]
   14002e5dd:	add    rsp,0x20
   14002e5e1:	pop    r14
   14002e5e3:	ret    
   14002e5e4:	int3   
   14002e5e5:	int3   
   14002e5e6:	int3   
   14002e5e7:	int3   
   14002e5e8:	int3   
   14002e5e9:	int3   
   14002e5ea:	int3   
   14002e5eb:	int3   
   14002e5ec:	int3   
   14002e5ed:	int3   
   14002e5ee:	int3   
   14002e5ef:	int3   
   14002e5f0:	mov    QWORD PTR [rsp+0x8],rbx
   14002e5f5:	mov    QWORD PTR [rsp+0x10],rsi
   14002e5fa:	mov    QWORD PTR [rsp+0x18],rdi
   14002e5ff:	push   r14
   14002e601:	sub    rsp,0x20
   14002e605:	xor    ebx,ebx
   14002e607:	mov    rdi,r8
   14002e60a:	mov    rsi,rdx
   14002e60d:	mov    r14,rcx
   14002e610:	test   r8,r8
   14002e613:	jle    0x14002e642
   14002e615:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14002e620:	mov    rax,QWORD PTR [r14]
   14002e623:	mov    r8,rdi
   14002e626:	lea    rdx,[rbx+rsi*1]
   14002e62a:	mov    rcx,QWORD PTR [rax]
   14002e62d:	sub    r8,rbx
   14002e630:	add    rcx,0x18
   14002e634:	call   QWORD PTR [rip+0x7b86]        # 0x1400361c0
   14002e63a:	add    rbx,rax
   14002e63d:	cmp    rbx,rdi
   14002e640:	jl     0x14002e620
   14002e642:	mov    rsi,QWORD PTR [rsp+0x38]
   14002e647:	mov    rdi,QWORD PTR [rsp+0x40]
   14002e64c:	mov    rax,rbx
   14002e64f:	mov    rbx,QWORD PTR [rsp+0x30]
   14002e654:	add    rsp,0x20
   14002e658:	pop    r14
   14002e65a:	ret    
   14002e65b:	int3   
   14002e65c:	int3   
   14002e65d:	int3   
   14002e65e:	int3   
   14002e65f:	int3   
   14002e660:	rex push rbx
   14002e662:	sub    rsp,0x20
   14002e666:	mov    rax,QWORD PTR [r8+0x8]
   14002e66a:	mov    r10,r8
   14002e66d:	mov    rbx,rdx
   14002e670:	cmp    QWORD PTR [r8],rax
   14002e673:	jne    0x14002e6aa
   14002e675:	cmp    QWORD PTR [rcx+0x60],0x0
   14002e67a:	je     0x14002e6aa
   14002e67c:	mov    rcx,QWORD PTR [rcx+0x60]
   14002e680:	test   rcx,rcx
   14002e683:	je     0x14002e68d
   14002e685:	mov    rax,QWORD PTR [rcx]
   14002e688:	call   QWORD PTR [rax+0x10]
   14002e68b:	jmp    0x14002e68f
   14002e68d:	xor    eax,eax
   14002e68f:	mov    rcx,QWORD PTR [rbx]
   14002e692:	mov    QWORD PTR [rbx],rax
   14002e695:	test   rcx,rcx
   14002e698:	je     0x14002e6c2
   14002e69a:	mov    rax,QWORD PTR [rcx]
   14002e69d:	mov    edx,0x1
   14002e6a2:	add    rsp,0x20
   14002e6a6:	pop    rbx
   14002e6a7:	rex.W jmp QWORD PTR [rax]
   14002e6aa:	xor    r9d,r9d
   14002e6ad:	xor    r8d,r8d
   14002e6b0:	mov    rdx,r10
   14002e6b3:	mov    rcx,rbx
   14002e6b6:	add    rsp,0x20
   14002e6ba:	pop    rbx
   14002e6bb:	rex.W jmp QWORD PTR [rip+0x7f7e]        # 0x140036640
   14002e6c2:	add    rsp,0x20
   14002e6c6:	pop    rbx
   14002e6c7:	ret    
   14002e6c8:	int3   
   14002e6c9:	int3   
   14002e6ca:	int3   
   14002e6cb:	int3   
   14002e6cc:	int3   
   14002e6cd:	int3   
   14002e6ce:	int3   
   14002e6cf:	int3   
   14002e6d0:	rex push rdi
   14002e6d2:	sub    rsp,0x30
   14002e6d6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002e6df:	mov    QWORD PTR [rsp+0x48],rbx
   14002e6e4:	mov    QWORD PTR [rsp+0x50],rsi
   14002e6e9:	mov    rbx,r8
   14002e6ec:	mov    rdi,rdx
   14002e6ef:	mov    rsi,rcx
   14002e6f2:	mov    QWORD PTR [rsp+0x40],rcx
   14002e6f7:	call   0x14002c4f0
   14002e6fc:	nop
   14002e6fd:	mov    rax,QWORD PTR [rsi+0x78]
   14002e701:	mov    rax,QWORD PTR [rax]
   14002e704:	mov    rax,QWORD PTR [rax]
   14002e707:	mov    rcx,QWORD PTR [rax+0x10]
   14002e70b:	mov    rax,QWORD PTR [rcx]
   14002e70e:	mov    r8,rbx
   14002e711:	mov    rdx,rdi
   14002e714:	call   QWORD PTR [rax+0x40]
   14002e717:	mov    rbx,rax
   14002e71a:	mov    rcx,rsi
   14002e71d:	call   0x140024800
   14002e722:	mov    rax,rbx
   14002e725:	mov    rbx,QWORD PTR [rsp+0x48]
   14002e72a:	mov    rsi,QWORD PTR [rsp+0x50]
   14002e72f:	add    rsp,0x30
   14002e733:	pop    rdi
   14002e734:	ret    
   14002e735:	int3   
   14002e736:	int3   
   14002e737:	int3   
   14002e738:	int3   
   14002e739:	int3   
   14002e73a:	int3   
   14002e73b:	int3   
   14002e73c:	int3   
   14002e73d:	int3   
   14002e73e:	int3   
   14002e73f:	int3   
   14002e740:	rex push rdi
   14002e742:	sub    rsp,0x30
   14002e746:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002e74f:	mov    QWORD PTR [rsp+0x48],rbx
   14002e754:	mov    QWORD PTR [rsp+0x50],rsi
   14002e759:	mov    rbx,r8
   14002e75c:	mov    rdi,rdx
   14002e75f:	mov    rsi,rcx
   14002e762:	mov    QWORD PTR [rsp+0x40],rcx
   14002e767:	call   0x14002c4f0
   14002e76c:	nop
   14002e76d:	mov    rax,QWORD PTR [rsi+0x78]
   14002e771:	mov    rax,QWORD PTR [rax]
   14002e774:	mov    rax,QWORD PTR [rax]
   14002e777:	mov    rcx,QWORD PTR [rax+0x10]
   14002e77b:	mov    rax,QWORD PTR [rcx]
   14002e77e:	mov    r8,rbx
   14002e781:	mov    rdx,rdi
   14002e784:	call   QWORD PTR [rax+0x48]
   14002e787:	mov    rbx,rax
   14002e78a:	mov    rcx,rsi
   14002e78d:	call   0x140024800
   14002e792:	mov    rax,rbx
   14002e795:	mov    rbx,QWORD PTR [rsp+0x48]
   14002e79a:	mov    rsi,QWORD PTR [rsp+0x50]
   14002e79f:	add    rsp,0x30
   14002e7a3:	pop    rdi
   14002e7a4:	ret    
   14002e7a5:	int3   
   14002e7a6:	int3   
   14002e7a7:	int3   
   14002e7a8:	int3   
   14002e7a9:	int3   
   14002e7aa:	int3   
   14002e7ab:	int3   
   14002e7ac:	int3   
   14002e7ad:	int3   
   14002e7ae:	int3   
   14002e7af:	int3   
   14002e7b0:	rex push rbx
   14002e7b2:	sub    rsp,0x20
   14002e7b6:	mov    rbx,rdx
   14002e7b9:	mov    edx,DWORD PTR [rcx]
   14002e7bb:	mov    rcx,rbx
   14002e7be:	call   0x1400240c0
   14002e7c3:	mov    rax,rbx
   14002e7c6:	add    rsp,0x20
   14002e7ca:	pop    rbx
   14002e7cb:	ret    
   14002e7cc:	int3   
   14002e7cd:	int3   
   14002e7ce:	int3   
   14002e7cf:	int3   
   14002e7d0:	rex push rbp
   14002e7d2:	push   rsi
   14002e7d3:	push   rdi
   14002e7d4:	push   r14
   14002e7d6:	push   r15
   14002e7d8:	lea    rbp,[rsp-0x40]
   14002e7dd:	sub    rsp,0x140
   14002e7e4:	mov    QWORD PTR [rbp+0x20],0xfffffffffffffffe
   14002e7ec:	mov    QWORD PTR [rsp+0x180],rbx
   14002e7f4:	mov    rsi,rdx
   14002e7f7:	mov    r14,rcx
   14002e7fa:	mov    DWORD PTR [rsp+0x20],0x0
   14002e802:	lea    rax,[rip+0xd99f]        # 0x14003c1a8
   14002e809:	mov    QWORD PTR [rsp+0x30],rax
   14002e80e:	lea    rcx,[rbp-0x48]
   14002e812:	call   QWORD PTR [rip+0x7968]        # 0x140036180
   14002e818:	nop
   14002e819:	mov    DWORD PTR [rsp+0x20],0x2
   14002e821:	xor    r9d,r9d
   14002e824:	xor    r8d,r8d
   14002e827:	lea    rdx,[rsp+0x38]
   14002e82c:	lea    rcx,[rsp+0x30]
   14002e831:	call   QWORD PTR [rip+0x7941]        # 0x140036178
   14002e837:	nop
   14002e838:	mov    rax,QWORD PTR [rsp+0x30]
   14002e83d:	movsxd rcx,DWORD PTR [rax+0x4]
   14002e841:	lea    r15,[rip+0xd958]        # 0x14003c1a0
   14002e848:	mov    QWORD PTR [rsp+rcx*1+0x30],r15
   14002e84d:	mov    rax,QWORD PTR [rsp+0x30]
   14002e852:	movsxd rcx,DWORD PTR [rax+0x4]
   14002e856:	lea    edx,[rcx-0x88]
   14002e85c:	mov    DWORD PTR [rsp+rcx*1+0x2c],edx
   14002e860:	mov    edx,0x2
   14002e865:	lea    rcx,[rsp+0x38]
   14002e86a:	call   0x1400112a0
   14002e86f:	nop
   14002e870:	call   QWORD PTR [rip+0x79fa]        # 0x140036270
   14002e876:	mov    r8,rax
   14002e879:	mov    rax,QWORD PTR [rsp+0x30]
   14002e87e:	movsxd rcx,DWORD PTR [rax+0x4]
   14002e882:	lea    rdx,[rsp+0x30]
   14002e887:	add    rcx,rdx
   14002e88a:	lea    rdx,[rbp+0x70]
   14002e88e:	call   QWORD PTR [rip+0x78fc]        # 0x140036190
   14002e894:	mov    rcx,QWORD PTR [rbp+0x70]
   14002e898:	test   rcx,rcx
   14002e89b:	je     0x14002e8b6
   14002e89d:	mov    rax,QWORD PTR [rcx]
   14002e8a0:	call   QWORD PTR [rax+0x10]
   14002e8a3:	test   rax,rax
   14002e8a6:	je     0x14002e8b6
   14002e8a8:	mov    r8,QWORD PTR [rax]
   14002e8ab:	mov    edx,0x1
   14002e8b0:	mov    rcx,rax
   14002e8b3:	call   QWORD PTR [r8]
   14002e8b6:	movzx  edx,WORD PTR [rsi]
   14002e8b9:	lea    rcx,[rsp+0x30]
   14002e8be:	call   QWORD PTR [rip+0x788c]        # 0x140036150
   14002e8c4:	mov    cl,0x1
   14002e8c6:	call   QWORD PTR [rip+0x79ac]        # 0x140036278
   14002e8cc:	mov    QWORD PTR [rbp+0x70],rax
   14002e8d0:	mov    rax,QWORD PTR [rsp+0x30]
   14002e8d5:	movsxd rcx,DWORD PTR [rax+0x4]
   14002e8d9:	lea    rdx,[rsp+0x30]
   14002e8de:	add    rcx,rdx
   14002e8e1:	lea    r8,[rbp+0x70]
   14002e8e5:	lea    rdx,[rbp+0x78]
   14002e8e9:	call   QWORD PTR [rip+0x78a1]        # 0x140036190
   14002e8ef:	mov    rcx,QWORD PTR [rbp+0x78]
   14002e8f3:	test   rcx,rcx
   14002e8f6:	je     0x14002e912
   14002e8f8:	mov    rax,QWORD PTR [rcx]
   14002e8fb:	call   QWORD PTR [rax+0x10]
   14002e8fe:	test   rax,rax
   14002e901:	je     0x14002e912
   14002e903:	mov    r8,QWORD PTR [rax]
   14002e906:	mov    edx,0x1
   14002e90b:	mov    rcx,rax
   14002e90e:	call   QWORD PTR [r8]
   14002e911:	nop
   14002e912:	mov    rcx,QWORD PTR [rbp+0x70]
   14002e916:	test   rcx,rcx
   14002e919:	je     0x14002e934
   14002e91b:	mov    rax,QWORD PTR [rcx]
   14002e91e:	call   QWORD PTR [rax+0x10]
   14002e921:	test   rax,rax
   14002e924:	je     0x14002e934
   14002e926:	mov    r8,QWORD PTR [rax]
   14002e929:	mov    edx,0x1
   14002e92e:	mov    rcx,rax
   14002e931:	call   QWORD PTR [r8]
   14002e934:	mov    dl,0x2d
   14002e936:	lea    rcx,[rsp+0x30]
   14002e93b:	call   0x140002db0
   14002e940:	movzx  edi,WORD PTR [rsi+0x2]
   14002e944:	mov    rax,QWORD PTR [rsp+0x30]
   14002e949:	movsxd rcx,DWORD PTR [rax+0x4]
   14002e94d:	lea    rax,[rsp+0x30]
   14002e952:	add    rcx,rax
   14002e955:	mov    dl,0x30
   14002e957:	call   QWORD PTR [rip+0x782b]        # 0x140036188
   14002e95d:	movzx  ebx,al
   14002e960:	mov    edx,0x2
   14002e965:	lea    rcx,[rbp+0x28]
   14002e969:	call   QWORD PTR [rip+0x77a9]        # 0x140036118
   14002e96f:	mov    rcx,QWORD PTR [rsp+0x30]
   14002e974:	movsxd r8,DWORD PTR [rcx+0x4]
   14002e978:	lea    rcx,[rsp+0x30]
   14002e97d:	add    rcx,r8
   14002e980:	mov    rdx,QWORD PTR [rax+0x8]
   14002e984:	call   QWORD PTR [rax]
   14002e986:	mov    rax,QWORD PTR [rsp+0x30]
   14002e98b:	movsxd rcx,DWORD PTR [rax+0x4]
   14002e98f:	mov    BYTE PTR [rbp+rcx*1-0x78],bl
   14002e993:	movzx  edx,di
   14002e996:	lea    rcx,[rsp+0x30]
   14002e99b:	call   QWORD PTR [rip+0x77af]        # 0x140036150
   14002e9a1:	mov    dl,0x2d
   14002e9a3:	lea    rcx,[rsp+0x30]
   14002e9a8:	call   0x140002db0
   14002e9ad:	movzx  edi,WORD PTR [rsi+0x4]
   14002e9b1:	mov    rax,QWORD PTR [rsp+0x30]
   14002e9b6:	movsxd rcx,DWORD PTR [rax+0x4]
   14002e9ba:	lea    rax,[rsp+0x30]
   14002e9bf:	add    rcx,rax
   14002e9c2:	mov    dl,0x30
   14002e9c4:	call   QWORD PTR [rip+0x77be]        # 0x140036188
   14002e9ca:	movzx  ebx,al
   14002e9cd:	mov    edx,0x2
   14002e9d2:	lea    rcx,[rbp+0x28]
   14002e9d6:	call   QWORD PTR [rip+0x773c]        # 0x140036118
   14002e9dc:	mov    rcx,QWORD PTR [rsp+0x30]
   14002e9e1:	movsxd r8,DWORD PTR [rcx+0x4]
   14002e9e5:	lea    rcx,[rsp+0x30]
   14002e9ea:	add    rcx,r8
   14002e9ed:	mov    rdx,QWORD PTR [rax+0x8]
   14002e9f1:	call   QWORD PTR [rax]
   14002e9f3:	mov    rax,QWORD PTR [rsp+0x30]
   14002e9f8:	movsxd rcx,DWORD PTR [rax+0x4]
   14002e9fc:	mov    BYTE PTR [rbp+rcx*1-0x78],bl
   14002ea00:	movzx  edx,di
   14002ea03:	lea    rcx,[rsp+0x30]
   14002ea08:	call   QWORD PTR [rip+0x7742]        # 0x140036150
   14002ea0e:	mov    rdx,r14
   14002ea11:	lea    rcx,[rsp+0x30]
   14002ea16:	call   0x14002c9e0
   14002ea1b:	nop
   14002ea1c:	mov    rax,QWORD PTR [rsp+0x30]
   14002ea21:	movsxd rcx,DWORD PTR [rax+0x4]
   14002ea25:	mov    QWORD PTR [rsp+rcx*1+0x30],r15
   14002ea2a:	mov    rax,QWORD PTR [rsp+0x30]
   14002ea2f:	movsxd rcx,DWORD PTR [rax+0x4]
   14002ea33:	lea    edx,[rcx-0x88]
   14002ea39:	mov    DWORD PTR [rsp+rcx*1+0x2c],edx
   14002ea3d:	lea    rcx,[rsp+0x38]
   14002ea42:	call   0x140017170
   14002ea47:	mov    rax,QWORD PTR [rsp+0x30]
   14002ea4c:	movsxd rcx,DWORD PTR [rax+0x4]
   14002ea50:	mov    rax,QWORD PTR [rip+0x75f1]        # 0x140036048
   14002ea57:	mov    QWORD PTR [rsp+rcx*1+0x30],rax
   14002ea5c:	mov    rax,QWORD PTR [rsp+0x30]
   14002ea61:	movsxd rcx,DWORD PTR [rax+0x4]
   14002ea65:	lea    edx,[rcx-0x10]
   14002ea68:	mov    DWORD PTR [rsp+rcx*1+0x2c],edx
   14002ea6c:	mov    rax,QWORD PTR [rip+0x75ed]        # 0x140036060
   14002ea73:	mov    QWORD PTR [rbp-0x48],rax
   14002ea77:	lea    rcx,[rbp-0x48]
   14002ea7b:	call   QWORD PTR [rip+0x784f]        # 0x1400362d0
   14002ea81:	mov    rax,r14
   14002ea84:	mov    rbx,QWORD PTR [rsp+0x180]
   14002ea8c:	add    rsp,0x140
   14002ea93:	pop    r15
   14002ea95:	pop    r14
   14002ea97:	pop    rdi
   14002ea98:	pop    rsi
   14002ea99:	pop    rbp
   14002ea9a:	ret    
   14002ea9b:	int3   
   14002ea9c:	int3   
   14002ea9d:	int3   
   14002ea9e:	int3   
   14002ea9f:	int3   
   14002eaa0:	rex.W jmp QWORD PTR [rip+0x7949]        # 0x1400363f0
   14002eaa7:	int3   
   14002eaa8:	int3   
   14002eaa9:	int3   
   14002eaaa:	int3   
   14002eaab:	int3   
   14002eaac:	int3   
   14002eaad:	int3   
   14002eaae:	int3   
   14002eaaf:	int3   
   14002eab0:	rex.W jmp QWORD PTR [rip+0x7a09]        # 0x1400364c0
   14002eab7:	int3   
   14002eab8:	int3   
   14002eab9:	int3   
   14002eaba:	int3   
   14002eabb:	int3   
   14002eabc:	int3   
   14002eabd:	int3   
   14002eabe:	int3   
   14002eabf:	int3   
   14002eac0:	mov    QWORD PTR [rsp+0x10],rdx
   14002eac5:	mov    DWORD PTR [rsp+0x8],ecx
   14002eac9:	push   rbx
   14002eaca:	push   rsi
   14002eacb:	push   rdi
   14002eacc:	push   r12
   14002eace:	push   r13
   14002ead0:	push   r14
   14002ead2:	push   r15
   14002ead4:	sub    rsp,0x660
   14002eadb:	mov    QWORD PTR [rsp+0x450],0xfffffffffffffffe
   14002eae7:	mov    rdi,rdx
   14002eaea:	xor    r13d,r13d
   14002eaed:	mov    DWORD PTR [rsp+0x40],r13d
   14002eaf2:	lea    rcx,[rsp+0x48]
   14002eaf7:	call   0x14002e160
   14002eafc:	mov    rcx,rax
   14002eaff:	call   0x140021a50
   14002eb04:	mov    DWORD PTR [rsp+0x58],eax
   14002eb08:	lea    rdx,[rsp+0x58]
   14002eb0d:	lea    rcx,[rsp+0x380]
   14002eb15:	call   0x14002d200
   14002eb1a:	nop
   14002eb1b:	mov    BYTE PTR [rsp+0x6b0],r13b
   14002eb23:	mov    BYTE PTR [rsp+0x31],r13b
   14002eb28:	mov    BYTE PTR [rsp+0x30],r13b
   14002eb2d:	mov    BYTE PTR [rsp+0x6b8],r13b
   14002eb35:	mov    ecx,0x9c8
   14002eb3a:	call   0x14003027c
   14002eb3f:	mov    rbx,rax
   14002eb42:	test   rax,rax
   14002eb45:	je     0x14002eb58
   14002eb47:	lea    rdx,[rip+0xddc2]        # 0x14003c910
   14002eb4e:	mov    rcx,rax
   14002eb51:	call   0x14002b500
   14002eb56:	jmp    0x14002eb5b
   14002eb58:	mov    rbx,r13
   14002eb5b:	lea    rax,[rsp+0x100]
   14002eb63:	mov    QWORD PTR [rsp+0x50],rax
   14002eb68:	mov    QWORD PTR [rsp+0x100],rbx
   14002eb70:	mov    QWORD PTR [rsp+0x108],r13
   14002eb78:	lea    r8,[rsp+0x108]
   14002eb80:	mov    rdx,rbx
   14002eb83:	lea    rcx,[rsp+0x100]
   14002eb8b:	call   0x14000dac0
   14002eb90:	nop
   14002eb91:	mov    DWORD PTR [rsp+0x38],r13d
   14002eb96:	mov    DWORD PTR [rsp+0x3c],0xffffffff
   14002eb9e:	mov    rcx,QWORD PTR [rsp+0x100]
   14002eba6:	mov    QWORD PTR [rsp+0x110],rcx
   14002ebae:	mov    rax,QWORD PTR [rsp+0x38]
   14002ebb3:	mov    QWORD PTR [rsp+0x118],rax
   14002ebbb:	call   0x14000d430
   14002ebc0:	nop
   14002ebc1:	lea    rdx,[rsp+0x480]
   14002ebc9:	lea    rcx,[rsp+0x100]
   14002ebd1:	call   0x14001a210
   14002ebd6:	nop
   14002ebd7:	mov    rbx,QWORD PTR [rsp+0x108]
   14002ebdf:	test   rbx,rbx
   14002ebe2:	je     0x14002ec02
   14002ebe4:	lock dec DWORD PTR [rbx+0x8]
   14002ebe8:	jne    0x14002ec02
   14002ebea:	mov    rax,QWORD PTR [rbx]
   14002ebed:	mov    rcx,rbx
   14002ebf0:	call   QWORD PTR [rax+0x8]
   14002ebf3:	lock dec DWORD PTR [rbx+0xc]
   14002ebf7:	jne    0x14002ec02
   14002ebf9:	mov    rax,QWORD PTR [rbx]
   14002ebfc:	mov    rcx,rbx
   14002ebff:	call   QWORD PTR [rax+0x10]
   14002ec02:	lea    rdx,[rsp+0x480]
   14002ec0a:	lea    rcx,[rsp+0xa0]
   14002ec12:	call   0x14002d220
   14002ec17:	nop
   14002ec18:	mov    QWORD PTR [rsp+0x78],0xf
   14002ec21:	mov    QWORD PTR [rsp+0x70],r13
   14002ec26:	mov    BYTE PTR [rsp+0x60],0x0
   14002ec2b:	mov    r8d,0xe
   14002ec31:	lea    rdx,[rip+0xd628]        # 0x14003c260
   14002ec38:	lea    rcx,[rsp+0x60]
   14002ec3d:	call   0x14001f070
   14002ec42:	nop
   14002ec43:	lea    rcx,[rsp+0x500]
   14002ec4b:	call   0x140021900
   14002ec50:	mov    rbx,rax
   14002ec53:	mov    QWORD PTR [rsp+0x2f8],0x7
   14002ec5f:	mov    QWORD PTR [rsp+0x2f0],r13
   14002ec67:	mov    WORD PTR [rsp+0x2e0],r13w
   14002ec70:	call   QWORD PTR [rip+0x78ba]        # 0x140036530
   14002ec76:	mov    r9,rax
   14002ec79:	lea    r8,[rsp+0x2e0]
   14002ec81:	xor    edx,edx
   14002ec83:	mov    rcx,QWORD PTR [rdi]
   14002ec86:	call   QWORD PTR [rip+0x78f4]        # 0x140036580
   14002ec8c:	nop
   14002ec8d:	lea    rdx,[rsp+0x2e0]
   14002ec95:	lea    rcx,[rsp+0x5a0]
   14002ec9d:	call   0x14002d180
   14002eca2:	nop
   14002eca3:	mov    r8,rbx
   14002eca6:	mov    rdx,rax
   14002eca9:	lea    rcx,[rsp+0x428]
   14002ecb1:	call   0x14001f9f0
   14002ecb6:	nop
   14002ecb7:	lea    rcx,[rsp+0x5a0]
   14002ecbf:	call   QWORD PTR [rip+0x7873]        # 0x140036538
   14002ecc5:	nop
   14002ecc6:	lea    rcx,[rsp+0x2e0]
   14002ecce:	call   QWORD PTR [rip+0x7864]        # 0x140036538
   14002ecd4:	nop
   14002ecd5:	lea    rcx,[rsp+0x500]
   14002ecdd:	call   QWORD PTR [rip+0x7855]        # 0x140036538
   14002ece3:	lea    rdx,[rsp+0x580]
   14002eceb:	lea    rcx,[rsp+0x428]
   14002ecf3:	call   QWORD PTR [rip+0x782f]        # 0x140036528
   14002ecf9:	nop
   14002ecfa:	lea    rdx,[rsp+0x240]
   14002ed02:	mov    rcx,rax
   14002ed05:	call   QWORD PTR [rip+0x786d]        # 0x140036578
   14002ed0b:	nop
   14002ed0c:	lea    rcx,[rsp+0x580]
   14002ed14:	call   QWORD PTR [rip+0x781e]        # 0x140036538
   14002ed1a:	lea    rdx,[rsp+0x520]
   14002ed22:	lea    rcx,[rsp+0x428]
   14002ed2a:	call   QWORD PTR [rip+0x77f0]        # 0x140036520
   14002ed30:	nop
   14002ed31:	lea    rdx,[rsp+0x560]
   14002ed39:	mov    rcx,rax
   14002ed3c:	call   QWORD PTR [rip+0x77de]        # 0x140036520
   14002ed42:	nop
   14002ed43:	lea    rdx,[rsp+0x540]
   14002ed4b:	mov    rcx,rax
   14002ed4e:	call   QWORD PTR [rip+0x77cc]        # 0x140036520
   14002ed54:	nop
   14002ed55:	lea    rdx,[rsp+0x170]
   14002ed5d:	mov    rcx,rax
   14002ed60:	call   QWORD PTR [rip+0x7812]        # 0x140036578
   14002ed66:	nop
   14002ed67:	lea    rcx,[rsp+0x540]
   14002ed6f:	call   QWORD PTR [rip+0x77c3]        # 0x140036538
   14002ed75:	nop
   14002ed76:	lea    rcx,[rsp+0x560]
   14002ed7e:	call   QWORD PTR [rip+0x77b4]        # 0x140036538
   14002ed84:	nop
   14002ed85:	lea    rcx,[rsp+0x520]
   14002ed8d:	call   QWORD PTR [rip+0x77a5]        # 0x140036538
   14002ed93:	lea    r8,[rsp+0x240]
   14002ed9b:	lea    rdx,[rip+0xd4de]        # 0x14003c280
   14002eda2:	lea    rcx,[rsp+0x360]
   14002edaa:	call   0x140003600
   14002edaf:	nop
   14002edb0:	lea    r8,[rip+0xd4b9]        # 0x14003c270
   14002edb7:	mov    rdx,rax
   14002edba:	lea    rcx,[rsp+0x2a0]
   14002edc2:	call   0x1400034d0
   14002edc7:	nop
   14002edc8:	mov    rcx,QWORD PTR [rip+0x78f9]        # 0x1400366c8
   14002edcf:	mov    r8d,DWORD PTR [rcx]
   14002edd2:	mov    r9d,r8d
   14002edd5:	shr    r9d,1
   14002edd8:	mov    rdx,rax
   14002eddb:	lea    rcx,[rsp+0x5c0]
   14002ede3:	call   QWORD PTR [rip+0x783f]        # 0x140036628
   14002ede9:	nop
   14002edea:	cmp    QWORD PTR [rsp+0x2b8],0x10
   14002edf3:	jb     0x14002ee02
   14002edf5:	mov    rcx,QWORD PTR [rsp+0x2a0]
   14002edfd:	call   0x140030282
   14002ee02:	mov    QWORD PTR [rsp+0x2b8],0xf
   14002ee0e:	mov    QWORD PTR [rsp+0x2b0],r13
   14002ee16:	mov    BYTE PTR [rsp+0x2a0],0x0
   14002ee1e:	cmp    QWORD PTR [rsp+0x378],0x10
   14002ee27:	jb     0x14002ee36
   14002ee29:	mov    rcx,QWORD PTR [rsp+0x360]
   14002ee31:	call   0x140030282
   14002ee36:	mov    QWORD PTR [rsp+0x378],0xf
   14002ee42:	mov    QWORD PTR [rsp+0x370],r13
   14002ee4a:	mov    BYTE PTR [rsp+0x360],0x0
   14002ee52:	mov    ecx,0xb8
   14002ee57:	call   0x14003027c
   14002ee5c:	mov    r15,rax
   14002ee5f:	test   rax,rax
   14002ee62:	je     0x14002eef0
   14002ee68:	mov    rcx,rax
   14002ee6b:	call   QWORD PTR [rip+0x7867]        # 0x1400366d8
   14002ee71:	lea    r14,[rip+0xd418]        # 0x14003c290
   14002ee78:	mov    QWORD PTR [r15],r14
   14002ee7b:	lea    rbx,[rip+0xd466]        # 0x14003c2e8
   14002ee82:	mov    QWORD PTR [r15+0x8],rbx
   14002ee86:	lea    rax,[rsp+0x60]
   14002ee8b:	mov    QWORD PTR [r15+0x10],rax
   14002ee8f:	mov    QWORD PTR [r15+0x30],0xf
   14002ee97:	mov    QWORD PTR [r15+0x28],r13
   14002ee9b:	mov    BYTE PTR [r15+0x18],0x0
   14002eea0:	mov    QWORD PTR [r15+0x38],r13
   14002eea4:	mov    QWORD PTR [r15+0x58],0xf
   14002eeac:	mov    QWORD PTR [r15+0x50],r13
   14002eeb0:	mov    BYTE PTR [r15+0x40],0x0
   14002eeb5:	mov    QWORD PTR [r15+0x60],r13
   14002eeb9:	mov    QWORD PTR [r15+0x80],0xf
   14002eec4:	mov    QWORD PTR [r15+0x78],r13
   14002eec8:	mov    BYTE PTR [r15+0x68],0x0
   14002eecd:	mov    BYTE PTR [r15+0x88],0x0
   14002eed5:	mov    WORD PTR [r15+0x8a],0x0
   14002eedf:	mov    BYTE PTR [r15+0x8c],0x0
   14002eee7:	mov    QWORD PTR [r15+0x90],r13
   14002eeee:	jmp    0x14002ef01
   14002eef0:	mov    r15,r13
   14002eef3:	lea    r14,[rip+0xd396]        # 0x14003c290
   14002eefa:	lea    rbx,[rip+0xd3e7]        # 0x14003c2e8
   14002ef01:	mov    ecx,0xb8
   14002ef06:	call   0x14003027c
   14002ef0b:	mov    r12,rax
   14002ef0e:	test   rax,rax
   14002ef11:	je     0x14002efa6
   14002ef17:	mov    rcx,rax
   14002ef1a:	call   QWORD PTR [rip+0x77b8]        # 0x1400366d8
   14002ef20:	mov    QWORD PTR [r12],r14
   14002ef24:	mov    QWORD PTR [r12+0x8],rbx
   14002ef29:	lea    rax,[rsp+0xa0]
   14002ef31:	mov    QWORD PTR [r12+0x10],rax
   14002ef36:	mov    QWORD PTR [r12+0x30],0xf
   14002ef3f:	mov    QWORD PTR [r12+0x28],r13
   14002ef44:	mov    BYTE PTR [r12+0x18],0x0
   14002ef4a:	mov    QWORD PTR [r12+0x38],r13
   14002ef4f:	mov    QWORD PTR [r12+0x58],0xf
   14002ef58:	mov    QWORD PTR [r12+0x50],r13
   14002ef5d:	mov    BYTE PTR [r12+0x40],0x0
   14002ef63:	mov    QWORD PTR [r12+0x60],r13
   14002ef68:	mov    QWORD PTR [r12+0x80],0xf
   14002ef74:	mov    QWORD PTR [r12+0x78],r13
   14002ef79:	mov    BYTE PTR [r12+0x68],0x0
   14002ef7f:	mov    BYTE PTR [r12+0x88],0x0
   14002ef88:	mov    WORD PTR [r12+0x8a],0x0
   14002ef93:	mov    BYTE PTR [r12+0x8c],0x0
   14002ef9c:	mov    QWORD PTR [r12+0x90],r13
   14002efa4:	jmp    0x14002efa9
   14002efa6:	mov    r12,r13
   14002efa9:	mov    ecx,0xb8
   14002efae:	call   0x14003027c
   14002efb3:	mov    r13,rax
   14002efb6:	test   rax,rax
   14002efb9:	je     0x14002f034
   14002efbb:	mov    rcx,rax
   14002efbe:	call   QWORD PTR [rip+0x7714]        # 0x1400366d8
   14002efc4:	mov    QWORD PTR [r13+0x0],r14
   14002efc8:	mov    QWORD PTR [r13+0x8],rbx
   14002efcc:	lea    rax,[rsp+0xa0]
   14002efd4:	mov    QWORD PTR [r13+0x10],rax
   14002efd8:	mov    QWORD PTR [r13+0x30],0xf
   14002efe0:	xor    eax,eax
   14002efe2:	mov    QWORD PTR [r13+0x28],rax
   14002efe6:	mov    BYTE PTR [r13+0x18],al
   14002efea:	mov    QWORD PTR [r13+0x38],rax
   14002efee:	mov    QWORD PTR [r13+0x58],0xf
   14002eff6:	mov    QWORD PTR [r13+0x50],rax
   14002effa:	mov    BYTE PTR [r13+0x40],al
   14002effe:	mov    QWORD PTR [r13+0x60],rax
   14002f002:	mov    QWORD PTR [r13+0x80],0xf
   14002f00d:	mov    QWORD PTR [r13+0x78],rax
   14002f011:	mov    BYTE PTR [r13+0x68],al
   14002f015:	mov    BYTE PTR [r13+0x88],al
   14002f01c:	mov    WORD PTR [r13+0x8a],ax
   14002f024:	mov    BYTE PTR [r13+0x8c],al
   14002f02b:	mov    QWORD PTR [r13+0x90],rax
   14002f032:	jmp    0x14002f037
   14002f034:	mov    r13,rax
   14002f037:	mov    ecx,0xb8
   14002f03c:	call   0x14003027c
   14002f041:	mov    rdi,rax
   14002f044:	mov    QWORD PTR [rsp+0x38],rax
   14002f049:	test   rax,rax
   14002f04c:	je     0x14002f0c2
   14002f04e:	mov    rcx,rax
   14002f051:	call   QWORD PTR [rip+0x7681]        # 0x1400366d8
   14002f057:	mov    QWORD PTR [rdi],r14
   14002f05a:	mov    QWORD PTR [rdi+0x8],rbx
   14002f05e:	lea    rax,[rsp+0x380]
   14002f066:	mov    QWORD PTR [rdi+0x10],rax
   14002f06a:	mov    QWORD PTR [rdi+0x30],0xf
   14002f072:	xor    eax,eax
   14002f074:	mov    QWORD PTR [rdi+0x28],rax
   14002f078:	mov    BYTE PTR [rdi+0x18],al
   14002f07b:	mov    QWORD PTR [rdi+0x38],rax
   14002f07f:	mov    QWORD PTR [rdi+0x58],0xf
   14002f087:	mov    QWORD PTR [rdi+0x50],rax
   14002f08b:	mov    BYTE PTR [rdi+0x40],al
   14002f08e:	mov    QWORD PTR [rdi+0x60],rax
   14002f092:	mov    QWORD PTR [rdi+0x80],0xf
   14002f09d:	mov    QWORD PTR [rdi+0x78],rax
   14002f0a1:	mov    BYTE PTR [rdi+0x68],al
   14002f0a4:	mov    BYTE PTR [rdi+0x88],al
   14002f0aa:	mov    WORD PTR [rdi+0x8a],ax
   14002f0b1:	mov    BYTE PTR [rdi+0x8c],al
   14002f0b7:	mov    QWORD PTR [rdi+0x90],rax
   14002f0be:	xor    edi,edi
   14002f0c0:	jmp    0x14002f0c9
   14002f0c2:	xor    edi,edi
   14002f0c4:	mov    QWORD PTR [rsp+0x38],rdi
   14002f0c9:	mov    ecx,0xb8
   14002f0ce:	call   0x14003027c
   14002f0d3:	mov    rbx,rax
   14002f0d6:	mov    QWORD PTR [rsp+0x48],rax
   14002f0db:	test   rax,rax
   14002f0de:	je     0x14002f15e
   14002f0e0:	mov    rcx,rax
   14002f0e3:	call   QWORD PTR [rip+0x75ef]        # 0x1400366d8
   14002f0e9:	mov    QWORD PTR [rbx],r14
   14002f0ec:	lea    rax,[rip+0xd1f5]        # 0x14003c2e8
   14002f0f3:	mov    QWORD PTR [rbx+0x8],rax
   14002f0f7:	lea    rax,[rsp+0x170]
   14002f0ff:	mov    QWORD PTR [rbx+0x10],rax
   14002f103:	mov    QWORD PTR [rbx+0x30],0xf
   14002f10b:	mov    QWORD PTR [rbx+0x28],rdi
   14002f10f:	mov    BYTE PTR [rbx+0x18],0x0
   14002f113:	mov    QWORD PTR [rbx+0x38],rdi
   14002f117:	mov    QWORD PTR [rbx+0x58],0xf
   14002f11f:	mov    QWORD PTR [rbx+0x50],rdi
   14002f123:	mov    BYTE PTR [rbx+0x40],0x0
   14002f127:	mov    QWORD PTR [rbx+0x60],rdi
   14002f12b:	mov    QWORD PTR [rbx+0x80],0xf
   14002f136:	mov    QWORD PTR [rbx+0x78],rdi
   14002f13a:	mov    BYTE PTR [rbx+0x68],0x0
   14002f13e:	mov    BYTE PTR [rbx+0x88],0x0
   14002f145:	mov    WORD PTR [rbx+0x8a],0x0
   14002f14e:	mov    BYTE PTR [rbx+0x8c],0x0
   14002f155:	mov    QWORD PTR [rbx+0x90],rdi
   14002f15c:	jmp    0x14002f163
   14002f15e:	mov    QWORD PTR [rsp+0x48],rdi
   14002f163:	lea    rcx,[rsp+0x30]
   14002f168:	call   QWORD PTR [rip+0x757a]        # 0x1400366e8
   14002f16e:	mov    r14,rax
   14002f171:	lea    rcx,[rsp+0x6b8]
   14002f179:	call   QWORD PTR [rip+0x7569]        # 0x1400366e8
   14002f17f:	mov    rsi,rax
   14002f182:	lea    rcx,[rsp+0x31]
   14002f187:	call   QWORD PTR [rip+0x755b]        # 0x1400366e8
   14002f18d:	mov    rdi,rax
   14002f190:	lea    rcx,[rsp+0x6b0]
   14002f198:	call   QWORD PTR [rip+0x754a]        # 0x1400366e8
   14002f19e:	mov    rbx,rax
   14002f1a1:	lea    rdx,[rsp+0x448]
   14002f1a9:	lea    rcx,[rsp+0x5c0]
   14002f1b1:	call   QWORD PTR [rip+0x7479]        # 0x140036630
   14002f1b7:	mov    rcx,rax
   14002f1ba:	lea    r8,[rip+0xd137]        # 0x14003c2f8
   14002f1c1:	lea    rdx,[rip+0xd144]        # 0x14003c30c
   14002f1c8:	call   QWORD PTR [rip+0x744a]        # 0x140036618
   14002f1ce:	mov    rcx,rax
   14002f1d1:	lea    r9,[rip+0xd148]        # 0x14003c320
   14002f1d8:	mov    r8,QWORD PTR [rsp+0x48]
   14002f1dd:	lea    rdx,[rip+0xd1ec]        # 0x14003c3d0
   14002f1e4:	call   QWORD PTR [rip+0x7436]        # 0x140036620
   14002f1ea:	mov    rcx,rax
   14002f1ed:	lea    r9,[rip+0xd1ec]        # 0x14003c3e0
   14002f1f4:	mov    r8,QWORD PTR [rsp+0x38]
   14002f1f9:	lea    rdx,[rip+0xd248]        # 0x14003c448
   14002f200:	call   QWORD PTR [rip+0x741a]        # 0x140036620
   14002f206:	mov    rcx,rax
   14002f209:	lea    r9,[rip+0xd250]        # 0x14003c460
   14002f210:	mov    r8,r13
   14002f213:	lea    rdx,[rip+0xd2de]        # 0x14003c4f8
   14002f21a:	call   QWORD PTR [rip+0x7400]        # 0x140036620
   14002f220:	mov    rcx,rax
   14002f223:	lea    r9,[rip+0xd2e6]        # 0x14003c510
   14002f22a:	mov    r8,r12
   14002f22d:	lea    rdx,[rip+0xd354]        # 0x14003c588
   14002f234:	call   QWORD PTR [rip+0x73e6]        # 0x140036620
   14002f23a:	mov    rcx,rax
   14002f23d:	lea    r9,[rip+0xd35c]        # 0x14003c5a0
   14002f244:	mov    r8,rbx
   14002f247:	lea    rdx,[rip+0xd39a]        # 0x14003c5e8
   14002f24e:	call   QWORD PTR [rip+0x73cc]        # 0x140036620
   14002f254:	mov    rcx,rax
   14002f257:	lea    r9,[rip+0xd3a2]        # 0x14003c600
   14002f25e:	mov    r8,rdi
   14002f261:	lea    rdx,[rip+0xd3e8]        # 0x14003c650
   14002f268:	call   QWORD PTR [rip+0x73b2]        # 0x140036620
   14002f26e:	mov    rcx,rax
   14002f271:	lea    r9,[rip+0xd3e8]        # 0x14003c660
   14002f278:	mov    r8,r15
   14002f27b:	lea    rdx,[rip+0xd406]        # 0x14003c688
   14002f282:	call   QWORD PTR [rip+0x7398]        # 0x140036620
   14002f288:	mov    rcx,rax
   14002f28b:	lea    r9,[rip+0xd40e]        # 0x14003c6a0
   14002f292:	mov    r8,rsi
   14002f295:	lea    rdx,[rip+0xd444]        # 0x14003c6e0
   14002f29c:	call   QWORD PTR [rip+0x737e]        # 0x140036620
   14002f2a2:	mov    rcx,rax
   14002f2a5:	lea    r9,[rip+0xd43c]        # 0x14003c6e8
   14002f2ac:	mov    r8,r14
   14002f2af:	lea    rdx,[rip+0xd472]        # 0x14003c728
   14002f2b6:	call   QWORD PTR [rip+0x7364]        # 0x140036620
   14002f2bc:	nop
   14002f2bd:	lea    rcx,[rsp+0x4c0]
   14002f2c5:	call   QWORD PTR [rip+0x7395]        # 0x140036660
   14002f2cb:	nop
   14002f2cc:	xor    edi,edi
   14002f2ce:	mov    QWORD PTR [rsp+0x630],rdi
   14002f2d6:	lea    rax,[rsp+0x630]
   14002f2de:	mov    QWORD PTR [rsp+0x28],rax
   14002f2e3:	mov    DWORD PTR [rsp+0x20],edi
   14002f2e7:	lea    r9,[rsp+0x5c0]
   14002f2ef:	mov    r8,QWORD PTR [rsp+0x6a8]
   14002f2f7:	mov    ebx,DWORD PTR [rsp+0x6a0]
   14002f2fe:	mov    edx,ebx
   14002f300:	lea    rcx,[rsp+0x490]
   14002f308:	call   0x14000a8e0
   14002f30d:	nop
   14002f30e:	xor    r8d,r8d
   14002f311:	lea    rdx,[rsp+0x4c0]
   14002f319:	mov    rcx,rax
   14002f31c:	call   QWORD PTR [rip+0x7326]        # 0x140036648
   14002f322:	nop
   14002f323:	mov    rcx,QWORD PTR [rsp+0x490]
   14002f32b:	test   rcx,rcx
   14002f32e:	je     0x14002f358
   14002f330:	movzx  r9d,BYTE PTR [rsp+0x6a8]
   14002f339:	lea    r8,[rsp+0x32]
   14002f33e:	mov    rdx,QWORD PTR [rsp+0x498]
   14002f346:	call   0x1400042e0
   14002f34b:	mov    rcx,QWORD PTR [rsp+0x490]
   14002f353:	call   0x140030282
   14002f358:	lea    rcx,[rsp+0x4c0]
   14002f360:	call   QWORD PTR [rip+0x72ea]        # 0x140036650
   14002f366:	mov    QWORD PTR [rsp+0x238],0xf
   14002f372:	mov    QWORD PTR [rsp+0x230],rdi
   14002f37a:	mov    BYTE PTR [rsp+0x220],0x0
   14002f382:	mov    r8d,0x4
   14002f388:	lea    rdx,[rip+0xd3a5]        # 0x14003c734
   14002f38f:	lea    rcx,[rsp+0x220]
   14002f397:	call   0x14001f070
   14002f39c:	nop
   14002f39d:	mov    DWORD PTR [rsp+0x40],0x1
   14002f3a5:	lea    rdx,[rsp+0x220]
   14002f3ad:	lea    rcx,[rsp+0x4d0]
   14002f3b5:	call   QWORD PTR [rip+0x729d]        # 0x140036658
   14002f3bb:	test   rax,rax
   14002f3be:	jne    0x14002f3c9
   14002f3c0:	cmp    ebx,0x1
   14002f3c3:	je     0x14002f3c9
   14002f3c5:	xor    bl,bl
   14002f3c7:	jmp    0x14002f3cb
   14002f3c9:	mov    bl,0x1
   14002f3cb:	cmp    QWORD PTR [rsp+0x238],0x10
   14002f3d4:	jb     0x14002f3e3
   14002f3d6:	mov    rcx,QWORD PTR [rsp+0x220]
   14002f3de:	call   0x140030282
   14002f3e3:	test   bl,bl
   14002f3e5:	je     0x14002f417
   14002f3e7:	lea    rdx,[rsp+0x5c0]
   14002f3ef:	mov    rcx,QWORD PTR [rip+0x6c4a]        # 0x140036040
   14002f3f6:	call   QWORD PTR [rip+0x723c]        # 0x140036638
   14002f3fc:	lea    rdx,[rip+0xfffffffffffd92cd]        # 0x1400086d0
   14002f403:	mov    rcx,rax
   14002f406:	call   QWORD PTR [rip+0x6d54]        # 0x140036160
   14002f40c:	mov    ecx,0x1
   14002f411:	call   QWORD PTR [rip+0x7069]        # 0x140036480
   14002f417:	lea    rdx,[rsp+0x170]
   14002f41f:	lea    rcx,[rsp+0x3a0]
   14002f427:	call   0x140027960
   14002f42c:	nop
   14002f42d:	mov    QWORD PTR [rsp+0x3d8],0xf
   14002f439:	mov    QWORD PTR [rsp+0x3d0],rdi
   14002f441:	mov    BYTE PTR [rsp+0x3c0],0x0
   14002f449:	or     r9,0xffffffffffffffff
   14002f44d:	xor    r8d,r8d
   14002f450:	lea    rdx,[rsp+0x380]
   14002f458:	lea    rcx,[rsp+0x3c0]
   14002f460:	call   0x14001ef20
   14002f465:	lea    rdx,[rsp+0x3c0]
   14002f46d:	lea    rcx,[rsp+0x38]
   14002f472:	call   0x140024240
   14002f477:	lea    rcx,[rsp+0x400]
   14002f47f:	call   0x140010e90
   14002f484:	nop
   14002f485:	mov    QWORD PTR [rsp+0x138],0xf
   14002f491:	mov    QWORD PTR [rsp+0x130],rdi
   14002f499:	mov    BYTE PTR [rsp+0x120],0x0
   14002f4a1:	mov    r8d,0x6
   14002f4a7:	lea    rdx,[rip+0xd28e]        # 0x14003c73c
   14002f4ae:	lea    rcx,[rsp+0x120]
   14002f4b6:	call   0x14001f070
   14002f4bb:	nop
   14002f4bc:	xor    r9d,r9d
   14002f4bf:	xor    r8d,r8d
   14002f4c2:	lea    rdx,[rsp+0x120]
   14002f4ca:	lea    rcx,[rsp+0x400]
   14002f4d2:	call   0x14001e4e0
   14002f4d7:	mov    rbx,rax
   14002f4da:	cmp    QWORD PTR [rsp+0x138],0x10
   14002f4e3:	jb     0x14002f4f2
   14002f4e5:	mov    rcx,QWORD PTR [rsp+0x120]
   14002f4ed:	call   0x140030282
   14002f4f2:	mov    QWORD PTR [rsp+0x138],0xf
   14002f4fe:	mov    QWORD PTR [rsp+0x130],rdi
   14002f506:	mov    BYTE PTR [rsp+0x120],0x0
   14002f50e:	mov    QWORD PTR [rsp+0x208],0xf
   14002f51a:	mov    QWORD PTR [rsp+0x200],rdi
   14002f522:	mov    BYTE PTR [rsp+0x1f0],0x0
   14002f52a:	mov    r8d,0xf
   14002f530:	lea    rdx,[rip+0xd231]        # 0x14003c768
   14002f537:	lea    rcx,[rsp+0x1f0]
   14002f53f:	call   0x14001f070
   14002f544:	mov    BYTE PTR [rsp+0x210],0x2e
   14002f54c:	lea    rax,[rsp+0x1f0]
   14002f554:	cmp    QWORD PTR [rsp+0x208],0x10
   14002f55d:	cmovae rax,QWORD PTR [rsp+0x1f0]
   14002f566:	mov    QWORD PTR [rsp+0x218],rax
   14002f56e:	lea    r8,[rip+0xd1d3]        # 0x14003c748
   14002f575:	lea    rdx,[rsp+0x1f0]
   14002f57d:	mov    rcx,rbx
   14002f580:	call   0x14000b530
   14002f585:	nop
   14002f586:	cmp    QWORD PTR [rsp+0x208],0x10
   14002f58f:	jb     0x14002f59e
   14002f591:	mov    rcx,QWORD PTR [rsp+0x1f0]
   14002f599:	call   0x140030282
   14002f59e:	mov    QWORD PTR [rsp+0x1a8],0xf
   14002f5aa:	mov    QWORD PTR [rsp+0x1a0],rdi
   14002f5b2:	mov    BYTE PTR [rsp+0x190],0x0
   14002f5ba:	mov    r8d,0x1c
   14002f5c0:	lea    rdx,[rip+0xd1e1]        # 0x14003c7a8
   14002f5c7:	lea    rcx,[rsp+0x190]
   14002f5cf:	call   0x14001f070
   14002f5d4:	mov    BYTE PTR [rsp+0x1b0],0x2e
   14002f5dc:	lea    rax,[rsp+0x190]
   14002f5e4:	cmp    QWORD PTR [rsp+0x1a8],0x10
   14002f5ed:	cmovae rax,QWORD PTR [rsp+0x190]
   14002f5f6:	mov    QWORD PTR [rsp+0x1b8],rax
   14002f5fe:	lea    r8,[rip+0xd173]        # 0x14003c778
   14002f605:	lea    rdx,[rsp+0x190]
   14002f60d:	mov    rcx,rbx
   14002f610:	call   0x14000b990
   14002f615:	nop
   14002f616:	cmp    QWORD PTR [rsp+0x1a8],0x10
   14002f61f:	jb     0x14002f62e
   14002f621:	mov    rcx,QWORD PTR [rsp+0x190]
   14002f629:	call   0x140030282
   14002f62e:	mov    QWORD PTR [rsp+0x1d8],0xf
   14002f63a:	mov    QWORD PTR [rsp+0x1d0],rdi
   14002f642:	mov    BYTE PTR [rsp+0x1c0],0x0
   14002f64a:	mov    r8d,0x13
   14002f650:	lea    rdx,[rip+0xd1a1]        # 0x14003c7f8
   14002f657:	lea    rcx,[rsp+0x1c0]
   14002f65f:	call   0x14001f070
   14002f664:	mov    BYTE PTR [rsp+0x1e0],0x2e
   14002f66c:	lea    rax,[rsp+0x1c0]
   14002f674:	cmp    QWORD PTR [rsp+0x1d8],0x10
   14002f67d:	cmovae rax,QWORD PTR [rsp+0x1c0]
   14002f686:	mov    QWORD PTR [rsp+0x1e8],rax
   14002f68e:	lea    r8,[rip+0xd133]        # 0x14003c7c8
   14002f695:	lea    rdx,[rsp+0x1c0]
   14002f69d:	mov    rcx,rbx
   14002f6a0:	call   0x14000b760
   14002f6a5:	nop
   14002f6a6:	cmp    QWORD PTR [rsp+0x1d8],0x10
   14002f6af:	jb     0x14002f6be
   14002f6b1:	mov    rcx,QWORD PTR [rsp+0x1c0]
   14002f6b9:	call   0x140030282
   14002f6be:	mov    QWORD PTR [rsp+0x98],0xf
   14002f6ca:	mov    QWORD PTR [rsp+0x90],rdi
   14002f6d2:	mov    BYTE PTR [rsp+0x80],0x0
   14002f6da:	mov    r8d,0x4
   14002f6e0:	lea    rdx,[rip+0xd125]        # 0x14003c80c
   14002f6e7:	lea    rcx,[rsp+0x80]
   14002f6ef:	call   0x14001f070
   14002f6f4:	nop
   14002f6f5:	xor    r9d,r9d
   14002f6f8:	xor    r8d,r8d
   14002f6fb:	lea    rdx,[rsp+0x80]
   14002f703:	mov    rcx,rbx
   14002f706:	call   0x14001e4e0
   14002f70b:	mov    rbx,rax
   14002f70e:	cmp    QWORD PTR [rsp+0x98],0x10
   14002f717:	jb     0x14002f726
   14002f719:	mov    rcx,QWORD PTR [rsp+0x80]
   14002f721:	call   0x140030282
   14002f726:	mov    QWORD PTR [rsp+0x98],0xf
   14002f732:	mov    QWORD PTR [rsp+0x90],rdi
   14002f73a:	mov    BYTE PTR [rsp+0x80],0x0
   14002f742:	cmp    BYTE PTR [rsp+0x6b8],0x0
   14002f74a:	jne    0x14002f985
   14002f750:	mov    QWORD PTR [rsp+0x298],0xf
   14002f75c:	mov    QWORD PTR [rsp+0x290],rdi
   14002f764:	mov    BYTE PTR [rsp+0x280],0x0
   14002f76c:	mov    r8d,0x6
   14002f772:	lea    rdx,[rip+0xca6b]        # 0x14003c1e4
   14002f779:	lea    rcx,[rsp+0x280]
   14002f781:	call   0x14001f070
   14002f786:	nop
   14002f787:	mov    QWORD PTR [rsp+0xf8],0xf
   14002f793:	mov    QWORD PTR [rsp+0xf0],rdi
   14002f79b:	mov    BYTE PTR [rsp+0xe0],0x0
   14002f7a3:	mov    r8d,0xe
   14002f7a9:	lea    rdx,[rip+0xd068]        # 0x14003c818
   14002f7b0:	lea    rcx,[rsp+0xe0]
   14002f7b8:	call   0x14001f070
   14002f7bd:	nop
   14002f7be:	mov    QWORD PTR [rsp+0x3f8],0xf
   14002f7ca:	mov    QWORD PTR [rsp+0x3f0],rdi
   14002f7d2:	mov    BYTE PTR [rsp+0x3e0],0x0
   14002f7da:	or     r9,0xffffffffffffffff
   14002f7de:	xor    r8d,r8d
   14002f7e1:	lea    rdx,[rsp+0xa0]
   14002f7e9:	lea    rcx,[rsp+0x3e0]
   14002f7f1:	call   0x14001ef20
   14002f7f6:	mov    BYTE PTR [rsp+0x28],0x0
   14002f7fb:	mov    BYTE PTR [rsp+0x20],0x0
   14002f800:	lea    r9,[rsp+0x3e0]
   14002f808:	lea    r8,[rsp+0x280]
   14002f810:	lea    rdx,[rsp+0xe0]
   14002f818:	mov    rcx,rbx
   14002f81b:	call   0x140005e30
   14002f820:	nop
   14002f821:	cmp    QWORD PTR [rsp+0xf8],0x10
   14002f82a:	jb     0x14002f839
   14002f82c:	mov    rcx,QWORD PTR [rsp+0xe0]
   14002f834:	call   0x140030282
   14002f839:	mov    QWORD PTR [rsp+0xf8],0xf
   14002f845:	mov    QWORD PTR [rsp+0xf0],rdi
   14002f84d:	mov    BYTE PTR [rsp+0xe0],0x0
   14002f855:	cmp    QWORD PTR [rsp+0x298],0x10
   14002f85e:	jb     0x14002f86d
   14002f860:	mov    rcx,QWORD PTR [rsp+0x280]
   14002f868:	call   0x140030282
   14002f86d:	mov    QWORD PTR [rsp+0x278],0xf
   14002f879:	mov    QWORD PTR [rsp+0x270],rdi
   14002f881:	mov    BYTE PTR [rsp+0x260],0x0
   14002f889:	mov    r8d,0x4
   14002f88f:	lea    rdx,[rip+0xc99a]        # 0x14003c230
   14002f896:	lea    rcx,[rsp+0x260]
   14002f89e:	call   0x14001f070
   14002f8a3:	nop
   14002f8a4:	mov    QWORD PTR [rsp+0xd8],0xf
   14002f8b0:	mov    QWORD PTR [rsp+0xd0],rdi
   14002f8b8:	mov    BYTE PTR [rsp+0xc0],0x0
   14002f8c0:	mov    r8d,0x5
   14002f8c6:	lea    rdx,[rip+0xc96b]        # 0x14003c238
   14002f8cd:	lea    rcx,[rsp+0xc0]
   14002f8d5:	call   0x14001f070
   14002f8da:	nop
   14002f8db:	mov    BYTE PTR [rsp+0x28],0x0
   14002f8e0:	mov    BYTE PTR [rsp+0x20],0x0
   14002f8e5:	movzx  r9d,BYTE PTR [rsp+0x6b0]
   14002f8ee:	lea    r8,[rsp+0x260]
   14002f8f6:	lea    rdx,[rsp+0xc0]
   14002f8fe:	mov    rcx,rbx
   14002f901:	call   0x1400060c0
   14002f906:	nop
   14002f907:	cmp    QWORD PTR [rsp+0xd8],0x10
   14002f910:	jb     0x14002f91f
   14002f912:	mov    rcx,QWORD PTR [rsp+0xc0]
   14002f91a:	call   0x140030282
   14002f91f:	mov    QWORD PTR [rsp+0xd8],0xf
   14002f92b:	mov    QWORD PTR [rsp+0xd0],rdi
   14002f933:	mov    BYTE PTR [rsp+0xc0],0x0
   14002f93b:	cmp    QWORD PTR [rsp+0x278],0x10
   14002f944:	jb     0x14002f953
   14002f946:	mov    rcx,QWORD PTR [rsp+0x260]
   14002f94e:	call   0x140030282
   14002f953:	movzx  eax,BYTE PTR [rsp+0x31]
   14002f958:	mov    BYTE PTR [rsp+0x28],al
   14002f95c:	movzx  eax,BYTE PTR [rsp+0x6b0]
   14002f964:	mov    BYTE PTR [rsp+0x20],al
   14002f968:	lea    r9,[rsp+0x60]
   14002f96d:	lea    r8,[rsp+0x380]
   14002f975:	lea    rdx,[rsp+0xa0]
   14002f97d:	mov    rcx,rbx
   14002f980:	call   0x14001e0a0
   14002f985:	lea    rdx,[rip+0xce9c]        # 0x14003c828
   14002f98c:	lea    rcx,[rsp+0x320]
   14002f994:	call   0x14000e9f0
   14002f999:	nop
   14002f99a:	mov    BYTE PTR [rsp+0x140],0x20
   14002f9a2:	mov    QWORD PTR [rsp+0x148],0x4
   14002f9ae:	mov    QWORD PTR [rsp+0x168],0xf
   14002f9ba:	mov    QWORD PTR [rsp+0x160],rdi
   14002f9c2:	mov    BYTE PTR [rsp+0x150],0x0
   14002f9ca:	or     r9,0xffffffffffffffff
   14002f9ce:	xor    r8d,r8d
   14002f9d1:	mov    rdx,rax
   14002f9d4:	lea    rcx,[rsp+0x150]
   14002f9dc:	call   0x14001ef20
   14002f9e1:	nop
   14002f9e2:	cmp    QWORD PTR [rsp+0x338],0x10
   14002f9eb:	jb     0x14002f9fa
   14002f9ed:	mov    rcx,QWORD PTR [rsp+0x320]
   14002f9f5:	call   0x140030282
   14002f9fa:	mov    QWORD PTR [rsp+0x338],0xf
   14002fa06:	mov    QWORD PTR [rsp+0x330],rdi
   14002fa0e:	mov    BYTE PTR [rsp+0x320],0x0
   14002fa16:	cmp    BYTE PTR [rsp+0x30],0x0
   14002fa1b:	jne    0x14002fb13
   14002fa21:	lea    rdx,[rsp+0x3a0]
   14002fa29:	lea    rcx,[rsp+0x460]
   14002fa31:	call   QWORD PTR [rip+0x6b31]        # 0x140036568
   14002fa37:	nop
   14002fa38:	xor    r8d,r8d
   14002fa3b:	mov    edx,0x1080
   14002fa40:	lea    rcx,[rsp+0x460]
   14002fa48:	call   QWORD PTR [rip+0x6b0a]        # 0x140036558
   14002fa4e:	nop
   14002fa4f:	mov    cl,0x1
   14002fa51:	call   QWORD PTR [rip+0x6821]        # 0x140036278
   14002fa57:	mov    QWORD PTR [rsp+0x50],rax
   14002fa5c:	lea    rdx,[rsp+0x2c0]
   14002fa64:	lea    rcx,[rsp+0x3a0]
   14002fa6c:	call   QWORD PTR [rip+0x6b06]        # 0x140036578
   14002fa72:	nop
   14002fa73:	lea    r9,[rsp+0x140]
   14002fa7b:	lea    r8,[rsp+0x50]
   14002fa80:	lea    rdx,[rsp+0x400]
   14002fa88:	mov    rcx,rax
   14002fa8b:	call   0x14000f1a0
   14002fa90:	nop
   14002fa91:	cmp    QWORD PTR [rsp+0x2d8],0x10
   14002fa9a:	jb     0x14002faa9
   14002fa9c:	mov    rcx,QWORD PTR [rsp+0x2c0]
   14002faa4:	call   0x140030282
   14002faa9:	mov    QWORD PTR [rsp+0x2d8],0xf
   14002fab5:	mov    QWORD PTR [rsp+0x2d0],rdi
   14002fabd:	mov    BYTE PTR [rsp+0x2c0],0x0
   14002fac5:	mov    rcx,QWORD PTR [rsp+0x50]
   14002faca:	test   rcx,rcx
   14002facd:	je     0x14002fae9
   14002facf:	mov    rax,QWORD PTR [rcx]
   14002fad2:	call   QWORD PTR [rax+0x10]
   14002fad5:	test   rax,rax
   14002fad8:	je     0x14002fae9
   14002fada:	mov    r8,QWORD PTR [rax]
   14002fadd:	mov    edx,0x1
   14002fae2:	mov    rcx,rax
   14002fae5:	call   QWORD PTR [r8]
   14002fae8:	nop
   14002fae9:	xor    r8d,r8d
   14002faec:	mov    edx,0x2080
   14002faf1:	lea    rcx,[rsp+0x460]
   14002faf9:	call   QWORD PTR [rip+0x6a59]        # 0x140036558
   14002faff:	nop
   14002fb00:	lea    rcx,[rsp+0x460]
   14002fb08:	call   QWORD PTR [rip+0x6a2a]        # 0x140036538
   14002fb0e:	jmp    0x14002fc28
   14002fb13:	lea    rdx,[rip+0xcd16]        # 0x14003c830
   14002fb1a:	mov    rcx,QWORD PTR [rip+0x651f]        # 0x140036040
   14002fb21:	call   0x140002f70
   14002fb26:	lea    rdx,[rip+0xfffffffffffd8ba3]        # 0x1400086d0
   14002fb2d:	mov    rcx,rax
   14002fb30:	call   QWORD PTR [rip+0x662a]        # 0x140036160
   14002fb36:	lea    rdx,[rip+0xcd0b]        # 0x14003c848
   14002fb3d:	mov    rcx,QWORD PTR [rip+0x64fc]        # 0x140036040
   14002fb44:	call   0x140002f70
   14002fb49:	mov    rbx,rax
   14002fb4c:	lea    rdx,[rsp+0x300]
   14002fb54:	lea    rcx,[rsp+0x3a0]
   14002fb5c:	call   0x14000db40
   14002fb61:	nop
   14002fb62:	mov    r9b,0x22
   14002fb65:	mov    r8b,0x26
   14002fb68:	mov    rdx,rax
   14002fb6b:	mov    rcx,rbx
   14002fb6e:	call   0x140006530
   14002fb73:	mov    rbx,rax
   14002fb76:	cmp    QWORD PTR [rsp+0x318],0x10
   14002fb7f:	jb     0x14002fb8e
   14002fb81:	mov    rcx,QWORD PTR [rsp+0x300]
   14002fb89:	call   0x140030282
   14002fb8e:	mov    QWORD PTR [rsp+0x318],0xf
   14002fb9a:	mov    QWORD PTR [rsp+0x310],rdi
   14002fba2:	mov    BYTE PTR [rsp+0x300],0x0
   14002fbaa:	lea    rdx,[rip+0xfffffffffffd8b1f]        # 0x1400086d0
   14002fbb1:	mov    rcx,rbx
   14002fbb4:	call   QWORD PTR [rip+0x65a6]        # 0x140036160
   14002fbba:	mov    QWORD PTR [rsp+0x358],0xf
   14002fbc6:	mov    QWORD PTR [rsp+0x350],rdi
   14002fbce:	mov    BYTE PTR [rsp+0x340],0x0
   14002fbd6:	lea    r9,[rsp+0x140]
   14002fbde:	lea    r8,[rsp+0x340]
   14002fbe6:	lea    rdx,[rsp+0x400]
   14002fbee:	mov    rcx,QWORD PTR [rip+0x644b]        # 0x140036040
   14002fbf5:	call   0x14000ff50
   14002fbfa:	nop
   14002fbfb:	cmp    QWORD PTR [rsp+0x358],0x10
   14002fc04:	jb     0x14002fc13
   14002fc06:	mov    rcx,QWORD PTR [rsp+0x340]
   14002fc0e:	call   0x140030282
   14002fc13:	lea    rdx,[rip+0xfffffffffffd8ab6]        # 0x1400086d0
   14002fc1a:	mov    rcx,QWORD PTR [rip+0x641f]        # 0x140036040
   14002fc21:	call   QWORD PTR [rip+0x6539]        # 0x140036160
   14002fc27:	nop
   14002fc28:	cmp    QWORD PTR [rsp+0x168],0x10
   14002fc31:	jb     0x14002fc40
   14002fc33:	mov    rcx,QWORD PTR [rsp+0x150]
   14002fc3b:	call   0x140030282
   14002fc40:	mov    QWORD PTR [rsp+0x168],0xf
   14002fc4c:	mov    QWORD PTR [rsp+0x160],rdi
   14002fc54:	mov    BYTE PTR [rsp+0x150],0x0
   14002fc5c:	lea    rcx,[rsp+0x400]
   14002fc64:	call   0x140017040
   14002fc69:	nop
   14002fc6a:	lea    rcx,[rsp+0x3a0]
   14002fc72:	call   QWORD PTR [rip+0x68c0]        # 0x140036538
   14002fc78:	nop
   14002fc79:	lea    rcx,[rsp+0x4c0]
   14002fc81:	call   QWORD PTR [rip+0x69e1]        # 0x140036668
   14002fc87:	nop
   14002fc88:	lea    rcx,[rsp+0x5c0]
   14002fc90:	call   QWORD PTR [rip+0x6a4a]        # 0x1400366e0
   14002fc96:	nop
   14002fc97:	cmp    QWORD PTR [rsp+0x188],0x10
   14002fca0:	jb     0x14002fcaf
   14002fca2:	mov    rcx,QWORD PTR [rsp+0x170]
   14002fcaa:	call   0x140030282
   14002fcaf:	mov    QWORD PTR [rsp+0x188],0xf
   14002fcbb:	mov    QWORD PTR [rsp+0x180],rdi
   14002fcc3:	mov    BYTE PTR [rsp+0x170],0x0
   14002fccb:	cmp    QWORD PTR [rsp+0x258],0x10
   14002fcd4:	jb     0x14002fce3
   14002fcd6:	mov    rcx,QWORD PTR [rsp+0x240]
   14002fcde:	call   0x140030282
   14002fce3:	mov    QWORD PTR [rsp+0x258],0xf
   14002fcef:	mov    QWORD PTR [rsp+0x250],rdi
   14002fcf7:	mov    BYTE PTR [rsp+0x240],0x0
   14002fcff:	lea    rcx,[rsp+0x428]
   14002fd07:	call   QWORD PTR [rip+0x682b]        # 0x140036538
   14002fd0d:	nop
   14002fd0e:	cmp    QWORD PTR [rsp+0x78],0x10
   14002fd14:	jb     0x14002fd20
   14002fd16:	mov    rcx,QWORD PTR [rsp+0x60]
   14002fd1b:	call   0x140030282
   14002fd20:	mov    QWORD PTR [rsp+0x78],0xf
   14002fd29:	mov    QWORD PTR [rsp+0x70],rdi
   14002fd2e:	mov    BYTE PTR [rsp+0x60],0x0
   14002fd33:	cmp    QWORD PTR [rsp+0xb8],0x10
   14002fd3c:	jb     0x14002fd4b
   14002fd3e:	mov    rcx,QWORD PTR [rsp+0xa0]
   14002fd46:	call   0x140030282
   14002fd4b:	mov    QWORD PTR [rsp+0xb8],0xf
   14002fd57:	mov    QWORD PTR [rsp+0xb0],rdi
   14002fd5f:	mov    BYTE PTR [rsp+0xa0],0x0
   14002fd67:	cmp    QWORD PTR [rsp+0x398],0x10
   14002fd70:	jb     0x14002fd7f
   14002fd72:	mov    rcx,QWORD PTR [rsp+0x380]
   14002fd7a:	call   0x140030282
   14002fd7f:	xor    eax,eax
   14002fd81:	add    rsp,0x660
   14002fd88:	pop    r15
   14002fd8a:	pop    r14
   14002fd8c:	pop    r13
   14002fd8e:	pop    r12
   14002fd90:	pop    rdi
   14002fd91:	pop    rsi
   14002fd92:	pop    rbx
   14002fd93:	ret    
   14002fd94:	int3   
   14002fd95:	int3   
   14002fd96:	int3   
   14002fd97:	int3   
   14002fd98:	int3   
   14002fd99:	int3   
   14002fd9a:	int3   
   14002fd9b:	int3   
   14002fd9c:	int3   
   14002fd9d:	int3   
   14002fd9e:	int3   
   14002fd9f:	int3   
   14002fda0:	rex.W jmp QWORD PTR [rip+0x6641]        # 0x1400363e8
   14002fda7:	int3   
   14002fda8:	int3   
   14002fda9:	int3   
   14002fdaa:	int3   
   14002fdab:	int3   
   14002fdac:	int3   
   14002fdad:	int3   
   14002fdae:	int3   
   14002fdaf:	int3   
   14002fdb0:	rex push rbx
   14002fdb2:	sub    rsp,0x20
   14002fdb6:	add    r8,r8
   14002fdb9:	mov    rbx,rcx
   14002fdbc:	call   0x14003048a
   14002fdc1:	mov    rax,rbx
   14002fdc4:	add    rsp,0x20
   14002fdc8:	pop    rbx
   14002fdc9:	ret    
   14002fdca:	jmp    QWORD PTR [rip+0x6740]        # 0x140036510
   14002fdd0:	jmp    QWORD PTR [rip+0x6732]        # 0x140036508
   14002fdd6:	jmp    QWORD PTR [rip+0x67a4]        # 0x140036580
   14002fddc:	jmp    QWORD PTR [rip+0x6786]        # 0x140036568
   14002fde2:	jmp    QWORD PTR [rip+0x6788]        # 0x140036570
   14002fde8:	jmp    QWORD PTR [rip+0x678a]        # 0x140036578
   14002fdee:	jmp    QWORD PTR [rip+0x672c]        # 0x140036520
   14002fdf4:	jmp    QWORD PTR [rip+0x672e]        # 0x140036528
   14002fdfa:	jmp    QWORD PTR [rip+0x6730]        # 0x140036530
   14002fe00:	jmp    QWORD PTR [rip+0x6732]        # 0x140036538
   14002fe06:	jmp    QWORD PTR [rip+0x6734]        # 0x140036540
   14002fe0c:	jmp    QWORD PTR [rip+0x6736]        # 0x140036548
   14002fe12:	jmp    QWORD PTR [rip+0x6738]        # 0x140036550
   14002fe18:	jmp    QWORD PTR [rip+0x673a]        # 0x140036558
   14002fe1e:	jmp    QWORD PTR [rip+0x673c]        # 0x140036560
   14002fe24:	jmp    QWORD PTR [rip+0x67de]        # 0x140036608
   14002fe2a:	jmp    QWORD PTR [rip+0x67c0]        # 0x1400365f0
   14002fe30:	jmp    QWORD PTR [rip+0x67c2]        # 0x1400365f8
   14002fe36:	jmp    QWORD PTR [rip+0x67c4]        # 0x140036600
   14002fe3c:	jmp    QWORD PTR [rip+0x674e]        # 0x140036590
   14002fe42:	jmp    QWORD PTR [rip+0x6750]        # 0x140036598
   14002fe48:	jmp    QWORD PTR [rip+0x6752]        # 0x1400365a0
   14002fe4e:	jmp    QWORD PTR [rip+0x6754]        # 0x1400365a8
   14002fe54:	jmp    QWORD PTR [rip+0x6756]        # 0x1400365b0
   14002fe5a:	jmp    QWORD PTR [rip+0x6878]        # 0x1400366d8
   14002fe60:	jmp    QWORD PTR [rip+0x686a]        # 0x1400366d0
   14002fe66:	jmp    QWORD PTR [rip+0x687c]        # 0x1400366e8
   14002fe6c:	jmp    QWORD PTR [rip+0x67ce]        # 0x140036640
   14002fe72:	jmp    QWORD PTR [rip+0x67a0]        # 0x140036618
   14002fe78:	jmp    QWORD PTR [rip+0x67a2]        # 0x140036620
   14002fe7e:	jmp    QWORD PTR [rip+0x67a4]        # 0x140036628
   14002fe84:	jmp    QWORD PTR [rip+0x67a6]        # 0x140036630
   14002fe8a:	jmp    QWORD PTR [rip+0x67a8]        # 0x140036638
   14002fe90:	jmp    QWORD PTR [rip+0x684a]        # 0x1400366e0
   14002fe96:	jmp    QWORD PTR [rip+0x67ac]        # 0x140036648
   14002fe9c:	jmp    QWORD PTR [rip+0x67ae]        # 0x140036650
   14002fea2:	jmp    QWORD PTR [rip+0x67b0]        # 0x140036658
   14002fea8:	jmp    QWORD PTR [rip+0x67b2]        # 0x140036660
   14002feae:	jmp    QWORD PTR [rip+0x67b4]        # 0x140036668
   14002feb4:	jmp    QWORD PTR [rip+0x67b6]        # 0x140036670
   14002feba:	jmp    QWORD PTR [rip+0x67b8]        # 0x140036678
   14002fec0:	jmp    QWORD PTR [rip+0x67ba]        # 0x140036680
   14002fec6:	jmp    QWORD PTR [rip+0x67bc]        # 0x140036688
   14002fecc:	jmp    QWORD PTR [rip+0x67be]        # 0x140036690
   14002fed2:	jmp    QWORD PTR [rip+0x67c0]        # 0x140036698
   14002fed8:	jmp    QWORD PTR [rip+0x67c2]        # 0x1400366a0
   14002fede:	jmp    QWORD PTR [rip+0x67c4]        # 0x1400366a8
   14002fee4:	jmp    QWORD PTR [rip+0x67c6]        # 0x1400366b0
   14002feea:	jmp    QWORD PTR [rip+0x6810]        # 0x140036700
   14002fef0:	jmp    QWORD PTR [rip+0x6802]        # 0x1400366f8
   14002fef6:	jmp    QWORD PTR [rip+0x6304]        # 0x140036200
   14002fefc:	jmp    QWORD PTR [rip+0x6306]        # 0x140036208
   14002ff02:	jmp    QWORD PTR [rip+0x6308]        # 0x140036210
   14002ff08:	jmp    0x14003027c
   14002ff0d:	int3   
   14002ff0e:	jmp    QWORD PTR [rip+0x6304]        # 0x140036218
   14002ff14:	jmp    QWORD PTR [rip+0x6306]        # 0x140036220
   14002ff1a:	jmp    QWORD PTR [rip+0x6308]        # 0x140036228
   14002ff20:	jmp    QWORD PTR [rip+0x630a]        # 0x140036230
   14002ff26:	jmp    QWORD PTR [rip+0x630c]        # 0x140036238
   14002ff2c:	jmp    QWORD PTR [rip+0x630e]        # 0x140036240
   14002ff32:	jmp    QWORD PTR [rip+0x6310]        # 0x140036248
   14002ff38:	jmp    QWORD PTR [rip+0x6312]        # 0x140036250
   14002ff3e:	int3   
   14002ff3f:	int3   
   14002ff40:	mov    QWORD PTR [rcx],rdx
   14002ff43:	mov    QWORD PTR [rcx+0x8],r8
   14002ff47:	mov    rax,rcx
   14002ff4a:	ret    
   14002ff4b:	int3   
   14002ff4c:	sub    rsp,0x28
   14002ff50:	mov    rcx,QWORD PTR [rcx+0x8]
   14002ff54:	mov    rax,QWORD PTR [rcx]
   14002ff57:	call   QWORD PTR [rax+0x10]
   14002ff5a:	test   rax,rax
   14002ff5d:	je     0x14002ff6d
   14002ff5f:	mov    r8,QWORD PTR [rax]
   14002ff62:	mov    edx,0x1
   14002ff67:	mov    rcx,rax
   14002ff6a:	call   QWORD PTR [r8]
   14002ff6d:	add    rsp,0x28
   14002ff71:	ret    
   14002ff72:	int3   
   14002ff73:	int3   
   14002ff74:	rex push rbx
   14002ff76:	sub    rsp,0x20
   14002ff7a:	jmp    0x14002ffab
   14002ff7c:	mov    rax,QWORD PTR [rbx]
   14002ff7f:	mov    rcx,QWORD PTR [rbx+0x8]
   14002ff83:	mov    QWORD PTR [rip+0x27abe],rax        # 0x140057a48
   14002ff8a:	mov    rax,QWORD PTR [rcx]
   14002ff8d:	call   QWORD PTR [rax+0x10]
   14002ff90:	test   rax,rax
   14002ff93:	je     0x14002ffa3
   14002ff95:	mov    r8,QWORD PTR [rax]
   14002ff98:	mov    edx,0x1
   14002ff9d:	mov    rcx,rax
   14002ffa0:	call   QWORD PTR [r8]
   14002ffa3:	mov    rcx,rbx
   14002ffa6:	call   0x140030282
   14002ffab:	mov    rbx,QWORD PTR [rip+0x27a96]        # 0x140057a48
   14002ffb2:	test   rbx,rbx
   14002ffb5:	jne    0x14002ff7c
   14002ffb7:	add    rsp,0x20
   14002ffbb:	pop    rbx
   14002ffbc:	ret    
   14002ffbd:	int3   
   14002ffbe:	int3   
   14002ffbf:	int3   
   14002ffc0:	mov    QWORD PTR [rsp+0x8],rbx
   14002ffc5:	push   rdi
   14002ffc6:	sub    rsp,0x20
   14002ffca:	mov    rbx,rcx
   14002ffcd:	mov    rcx,QWORD PTR [rcx+0x8]
   14002ffd1:	mov    edi,edx
   14002ffd3:	mov    rax,QWORD PTR [rcx]
   14002ffd6:	call   QWORD PTR [rax+0x10]
   14002ffd9:	test   rax,rax
   14002ffdc:	je     0x14002ffec
   14002ffde:	mov    r8,QWORD PTR [rax]
   14002ffe1:	mov    edx,0x1
   14002ffe6:	mov    rcx,rax
   14002ffe9:	call   QWORD PTR [r8]
   14002ffec:	test   dil,0x1
   14002fff0:	je     0x14002fffa
   14002fff2:	mov    rcx,rbx
   14002fff5:	call   0x140030282
   14002fffa:	mov    rax,rbx
   14002fffd:	mov    rbx,QWORD PTR [rsp+0x30]
   140030002:	add    rsp,0x20
   140030006:	pop    rdi
   140030007:	ret    
   140030008:	rex push rbx
   14003000a:	sub    rsp,0x20
   14003000e:	mov    rbx,rcx
   140030011:	mov    ecx,0x10
   140030016:	call   0x14003027c
   14003001b:	test   rax,rax
   14003001e:	je     0x14003002e
   140030020:	mov    rdx,QWORD PTR [rip+0x27a21]        # 0x140057a48
   140030027:	mov    QWORD PTR [rax+0x8],rbx
   14003002b:	mov    QWORD PTR [rax],rdx
   14003002e:	mov    QWORD PTR [rip+0x27a13],rax        # 0x140057a48
   140030035:	add    rsp,0x20
   140030039:	pop    rbx
   14003003a:	ret    
   14003003b:	int3   
   14003003c:	jmp    QWORD PTR [rip+0x6216]        # 0x140036258
   140030042:	jmp    QWORD PTR [rip+0x6218]        # 0x140036260
   140030048:	jmp    QWORD PTR [rip+0x621a]        # 0x140036268
   14003004e:	jmp    QWORD PTR [rip+0x621c]        # 0x140036270
   140030054:	jmp    QWORD PTR [rip+0x621e]        # 0x140036278
   14003005a:	jmp    QWORD PTR [rip+0x6220]        # 0x140036280
   140030060:	jmp    QWORD PTR [rip+0x6222]        # 0x140036288
   140030066:	jmp    QWORD PTR [rip+0x6224]        # 0x140036290
   14003006c:	jmp    QWORD PTR [rip+0x6226]        # 0x140036298
   140030072:	jmp    QWORD PTR [rip+0x6228]        # 0x1400362a0
   140030078:	jmp    QWORD PTR [rip+0x622a]        # 0x1400362a8
   14003007e:	jmp    QWORD PTR [rip+0x622c]        # 0x1400362b0
   140030084:	jmp    QWORD PTR [rip+0x622e]        # 0x1400362b8
   14003008a:	jmp    QWORD PTR [rip+0x6230]        # 0x1400362c0
   140030090:	jmp    QWORD PTR [rip+0x6232]        # 0x1400362c8
   140030096:	jmp    QWORD PTR [rip+0x6234]        # 0x1400362d0
   14003009c:	jmp    QWORD PTR [rip+0x6156]        # 0x1400361f8
   1400300a2:	jmp    QWORD PTR [rip+0x6148]        # 0x1400361f0
   1400300a8:	jmp    QWORD PTR [rip+0x613a]        # 0x1400361e8
   1400300ae:	jmp    QWORD PTR [rip+0x612c]        # 0x1400361e0
   1400300b4:	jmp    QWORD PTR [rip+0x611e]        # 0x1400361d8
   1400300ba:	jmp    QWORD PTR [rip+0x6110]        # 0x1400361d0
   1400300c0:	jmp    QWORD PTR [rip+0x6102]        # 0x1400361c8
   1400300c6:	jmp    QWORD PTR [rip+0x60f4]        # 0x1400361c0
   1400300cc:	jmp    QWORD PTR [rip+0x60e6]        # 0x1400361b8
   1400300d2:	jmp    QWORD PTR [rip+0x60d8]        # 0x1400361b0
   1400300d8:	jmp    QWORD PTR [rip+0x60ca]        # 0x1400361a8
   1400300de:	jmp    QWORD PTR [rip+0x60bc]        # 0x1400361a0
   1400300e4:	jmp    QWORD PTR [rip+0x60ae]        # 0x140036198
   1400300ea:	jmp    QWORD PTR [rip+0x60a0]        # 0x140036190
   1400300f0:	jmp    QWORD PTR [rip+0x6092]        # 0x140036188
   1400300f6:	jmp    QWORD PTR [rip+0x6084]        # 0x140036180
   1400300fc:	jmp    QWORD PTR [rip+0x6076]        # 0x140036178
   140030102:	jmp    QWORD PTR [rip+0x6068]        # 0x140036170
   140030108:	jmp    QWORD PTR [rip+0x605a]        # 0x140036168
   14003010e:	jmp    QWORD PTR [rip+0x604c]        # 0x140036160
   140030114:	jmp    QWORD PTR [rip+0x603e]        # 0x140036158
   14003011a:	jmp    QWORD PTR [rip+0x6030]        # 0x140036150
   140030120:	jmp    QWORD PTR [rip+0x6022]        # 0x140036148
   140030126:	jmp    QWORD PTR [rip+0x6014]        # 0x140036140
   14003012c:	jmp    QWORD PTR [rip+0x6006]        # 0x140036138
   140030132:	jmp    QWORD PTR [rip+0x5ff8]        # 0x140036130
   140030138:	jmp    QWORD PTR [rip+0x5fea]        # 0x140036128
   14003013e:	jmp    QWORD PTR [rip+0x5fdc]        # 0x140036120
   140030144:	jmp    QWORD PTR [rip+0x5fce]        # 0x140036118
   14003014a:	jmp    QWORD PTR [rip+0x5fc0]        # 0x140036110
   140030150:	jmp    QWORD PTR [rip+0x5fb2]        # 0x140036108
   140030156:	jmp    QWORD PTR [rip+0x5fa4]        # 0x140036100
   14003015c:	jmp    QWORD PTR [rip+0x5f96]        # 0x1400360f8
   140030162:	jmp    QWORD PTR [rip+0x5f88]        # 0x1400360f0
   140030168:	jmp    QWORD PTR [rip+0x5f7a]        # 0x1400360e8
   14003016e:	jmp    QWORD PTR [rip+0x5f6c]        # 0x1400360e0
   140030174:	jmp    QWORD PTR [rip+0x5f5e]        # 0x1400360d8
   14003017a:	jmp    QWORD PTR [rip+0x5f50]        # 0x1400360d0
   140030180:	jmp    QWORD PTR [rip+0x5f42]        # 0x1400360c8
   140030186:	jmp    QWORD PTR [rip+0x5f34]        # 0x1400360c0
   14003018c:	jmp    QWORD PTR [rip+0x5f26]        # 0x1400360b8
   140030192:	jmp    QWORD PTR [rip+0x5f18]        # 0x1400360b0
   140030198:	jmp    QWORD PTR [rip+0x5f0a]        # 0x1400360a8
   14003019e:	jmp    QWORD PTR [rip+0x5efc]        # 0x1400360a0
   1400301a4:	jmp    QWORD PTR [rip+0x5eee]        # 0x140036098
   1400301aa:	jmp    QWORD PTR [rip+0x5ee0]        # 0x140036090
   1400301b0:	mov    rax,rsp
   1400301b3:	mov    QWORD PTR [rax+0x20],r9
   1400301b7:	mov    DWORD PTR [rax+0x18],r8d
   1400301bb:	mov    QWORD PTR [rax+0x10],rdx
   1400301bf:	push   rbx
   1400301c0:	push   rsi
   1400301c1:	push   rdi
   1400301c2:	push   r14
   1400301c4:	sub    rsp,0x38
   1400301c8:	mov    r14,r9
   1400301cb:	movsxd rdi,r8d
   1400301ce:	mov    rsi,rdx
   1400301d1:	and    DWORD PTR [rax-0x38],0x0
   1400301d5:	mov    rbx,rdi
   1400301d8:	imul   rbx,rdx
   1400301dc:	add    rbx,rcx
   1400301df:	mov    QWORD PTR [rax+0x8],rbx
   1400301e3:	dec    edi
   1400301e5:	mov    DWORD PTR [rsp+0x70],edi
   1400301e9:	js     0x1400301fb
   1400301eb:	sub    rbx,rsi
   1400301ee:	mov    QWORD PTR [rsp+0x60],rbx
   1400301f3:	mov    rcx,rbx
   1400301f6:	call   r14
   1400301f9:	jmp    0x1400301e3
   1400301fb:	mov    DWORD PTR [rsp+0x20],0x1
   140030203:	add    rsp,0x38
   140030207:	pop    r14
   140030209:	pop    rdi
   14003020a:	pop    rsi
   14003020b:	pop    rbx
   14003020c:	ret    
   14003020d:	int3   
   14003020e:	int3   
   14003020f:	int3   
   140030210:	sub    rsp,0x28
   140030214:	mov    rax,QWORD PTR [rcx]
   140030217:	cmp    DWORD PTR [rax],0xe06d7363
   14003021d:	je     0x140030226
   14003021f:	xor    eax,eax
   140030221:	add    rsp,0x28
   140030225:	ret    
   140030226:	call   0x1400309d6
   14003022b:	int3   
   14003022c:	mov    QWORD PTR [rsp+0x10],rbx
   140030231:	mov    DWORD PTR [rsp+0x18],r8d
   140030236:	mov    QWORD PTR [rsp+0x8],rcx
   14003023b:	push   rsi
   14003023c:	push   rdi
   14003023d:	push   r14
   14003023f:	sub    rsp,0x40
   140030243:	mov    rsi,r9
   140030246:	mov    edi,r8d
   140030249:	mov    r14,rdx
   14003024c:	mov    rbx,rcx
   14003024f:	dec    edi
   140030251:	mov    DWORD PTR [rsp+0x70],edi
   140030255:	js     0x140030266
   140030257:	sub    rbx,r14
   14003025a:	mov    QWORD PTR [rsp+0x60],rbx
   14003025f:	mov    rcx,rbx
   140030262:	call   rsi
   140030264:	jmp    0x14003024f
   140030266:	jmp    0x140030268
   140030268:	mov    rbx,QWORD PTR [rsp+0x68]
   14003026d:	add    rsp,0x40
   140030271:	pop    r14
   140030273:	pop    rdi
   140030274:	pop    rsi
   140030275:	ret    
   140030276:	jmp    QWORD PTR [rip+0x622c]        # 0x1400364a8
   14003027c:	jmp    QWORD PTR [rip+0x622e]        # 0x1400364b0
   140030282:	jmp    QWORD PTR [rip+0x6230]        # 0x1400364b8
   140030288:	rex push rbx
   14003028a:	sub    rsp,0x20
   14003028e:	cmp    QWORD PTR [rip+0x27832],0x0        # 0x140057ac8
   140030296:	jne    0x1400302ce
   140030298:	mov    edx,0x8
   14003029d:	lea    ecx,[rdx+0x18]
   1400302a0:	call   QWORD PTR [rip+0x60ea]        # 0x140036390
   1400302a6:	mov    rcx,rax
   1400302a9:	mov    rbx,rax
   1400302ac:	call   QWORD PTR [rip+0x5d76]        # 0x140036028
   1400302b2:	mov    QWORD PTR [rip+0x2780f],rax        # 0x140057ac8
   1400302b9:	mov    QWORD PTR [rip+0x27800],rax        # 0x140057ac0
   1400302c0:	test   rbx,rbx
   1400302c3:	jne    0x1400302ca
   1400302c5:	lea    eax,[rbx+0x18]
   1400302c8:	jmp    0x1400302d0
   1400302ca:	and    QWORD PTR [rbx],0x0
   1400302ce:	xor    eax,eax
   1400302d0:	add    rsp,0x20
   1400302d4:	pop    rbx
   1400302d5:	ret    
   1400302d6:	int3   
   1400302d7:	int3   
   1400302d8:	rex push rbx
   1400302da:	sub    rsp,0x20
   1400302de:	mov    rbx,rcx
   1400302e1:	mov    rcx,QWORD PTR [rip+0x277e0]        # 0x140057ac8
   1400302e8:	call   QWORD PTR [rip+0x5d32]        # 0x140036020
   1400302ee:	mov    QWORD PTR [rsp+0x38],rax
   1400302f3:	cmp    rax,0xffffffffffffffff
   1400302f7:	jne    0x140030304
   1400302f9:	mov    rcx,rbx
   1400302fc:	call   QWORD PTR [rip+0x607e]        # 0x140036380
   140030302:	jmp    0x140030382
   140030304:	mov    ecx,0x8
   140030309:	call   0x1400309e2
   14003030e:	nop
   14003030f:	mov    rcx,QWORD PTR [rip+0x277b2]        # 0x140057ac8
   140030316:	call   QWORD PTR [rip+0x5d04]        # 0x140036020
   14003031c:	mov    QWORD PTR [rsp+0x38],rax
   140030321:	mov    rcx,QWORD PTR [rip+0x27798]        # 0x140057ac0
   140030328:	call   QWORD PTR [rip+0x5cf2]        # 0x140036020
   14003032e:	mov    QWORD PTR [rsp+0x40],rax
   140030333:	mov    rcx,rbx
   140030336:	call   QWORD PTR [rip+0x5cec]        # 0x140036028
   14003033c:	mov    rcx,rax
   14003033f:	lea    r8,[rsp+0x40]
   140030344:	lea    rdx,[rsp+0x38]
   140030349:	call   0x1400309f4
   14003034e:	mov    rbx,rax
   140030351:	mov    rcx,QWORD PTR [rsp+0x38]
   140030356:	call   QWORD PTR [rip+0x5ccc]        # 0x140036028
   14003035c:	mov    QWORD PTR [rip+0x27765],rax        # 0x140057ac8
   140030363:	mov    rcx,QWORD PTR [rsp+0x40]
   140030368:	call   QWORD PTR [rip+0x5cba]        # 0x140036028
   14003036e:	mov    QWORD PTR [rip+0x2774b],rax        # 0x140057ac0
   140030375:	mov    ecx,0x8
   14003037a:	call   0x1400309e8
   14003037f:	mov    rax,rbx
   140030382:	add    rsp,0x20
   140030386:	pop    rbx
   140030387:	ret    
   140030388:	sub    rsp,0x28
   14003038c:	call   0x1400302d8
   140030391:	neg    rax
   140030394:	sbb    eax,eax
   140030396:	neg    eax
   140030398:	dec    eax
   14003039a:	add    rsp,0x28
   14003039e:	ret    
   14003039f:	int3   
   1400303a0:	jmp    QWORD PTR [rip+0x611a]        # 0x1400364c0
   1400303a6:	jmp    QWORD PTR [rip+0x611c]        # 0x1400364c8
   1400303ac:	jmp    QWORD PTR [rip+0x611e]        # 0x1400364d0
   1400303b2:	jmp    QWORD PTR [rip+0x6120]        # 0x1400364d8
   1400303b8:	jmp    QWORD PTR [rip+0x6122]        # 0x1400364e0
   1400303be:	jmp    QWORD PTR [rip+0x6124]        # 0x1400364e8
   1400303c4:	jmp    QWORD PTR [rip+0x5f16]        # 0x1400362e0
   1400303ca:	jmp    QWORD PTR [rip+0x6120]        # 0x1400364f0
   1400303d0:	jmp    QWORD PTR [rip+0x5f1a]        # 0x1400362f0
   1400303d6:	jmp    QWORD PTR [rip+0x5f0c]        # 0x1400362e8
   1400303dc:	jmp    QWORD PTR [rip+0x6116]        # 0x1400364f8
   1400303e2:	jmp    QWORD PTR [rip+0x60b8]        # 0x1400364a0
   1400303e8:	jmp    QWORD PTR [rip+0x60aa]        # 0x140036498
   1400303ee:	jmp    QWORD PTR [rip+0x609c]        # 0x140036490
   1400303f4:	jmp    QWORD PTR [rip+0x608e]        # 0x140036488
   1400303fa:	jmp    QWORD PTR [rip+0x6080]        # 0x140036480
   140030400:	jmp    QWORD PTR [rip+0x6072]        # 0x140036478
   140030406:	jmp    QWORD PTR [rip+0x6064]        # 0x140036470
   14003040c:	jmp    QWORD PTR [rip+0x6056]        # 0x140036468
   140030412:	jmp    QWORD PTR [rip+0x6048]        # 0x140036460
   140030418:	jmp    QWORD PTR [rip+0x603a]        # 0x140036458
   14003041e:	jmp    QWORD PTR [rip+0x602c]        # 0x140036450
   140030424:	jmp    QWORD PTR [rip+0x601e]        # 0x140036448
   14003042a:	jmp    QWORD PTR [rip+0x6010]        # 0x140036440
   140030430:	jmp    QWORD PTR [rip+0x6002]        # 0x140036438
   140030436:	jmp    QWORD PTR [rip+0x5ff4]        # 0x140036430
   14003043c:	jmp    QWORD PTR [rip+0x5fe6]        # 0x140036428
   140030442:	jmp    QWORD PTR [rip+0x5fd8]        # 0x140036420
   140030448:	jmp    QWORD PTR [rip+0x5fca]        # 0x140036418
   14003044e:	jmp    QWORD PTR [rip+0x5fbc]        # 0x140036410
   140030454:	jmp    QWORD PTR [rip+0x5fae]        # 0x140036408
   14003045a:	jmp    QWORD PTR [rip+0x5fa0]        # 0x140036400
   140030460:	jmp    QWORD PTR [rip+0x5f92]        # 0x1400363f8
   140030466:	jmp    QWORD PTR [rip+0x5f84]        # 0x1400363f0
   14003046c:	jmp    QWORD PTR [rip+0x5f76]        # 0x1400363e8
   140030472:	jmp    QWORD PTR [rip+0x5f68]        # 0x1400363e0
   140030478:	jmp    QWORD PTR [rip+0x5f5a]        # 0x1400363d8
   14003047e:	jmp    QWORD PTR [rip+0x5f4c]        # 0x1400363d0
   140030484:	jmp    QWORD PTR [rip+0x5f3e]        # 0x1400363c8
   14003048a:	jmp    QWORD PTR [rip+0x5f30]        # 0x1400363c0
   140030490:	jmp    QWORD PTR [rip+0x5f22]        # 0x1400363b8
   140030496:	int3   
   140030497:	int3   
   140030498:	lea    rcx,[rip+0x275b9]        # 0x140057a58
   14003049f:	jmp    0x140030a00
   1400304a4:	lea    rax,[rip+0xf5e5]        # 0x14003fa90
   1400304ab:	mov    QWORD PTR [rcx],rax
   1400304ae:	mov    rax,rcx
   1400304b1:	ret    
   1400304b2:	int3   
   1400304b3:	int3   
   1400304b4:	mov    rax,rcx
   1400304b7:	ret    
   1400304b8:	mov    QWORD PTR [rsp+0x8],rbx
   1400304bd:	mov    QWORD PTR [rsp+0x10],rsi
   1400304c2:	push   rdi
   1400304c3:	sub    rsp,0x20
   1400304c7:	mov    esi,edx
   1400304c9:	mov    rbx,rcx
   1400304cc:	test   dl,0x2
   1400304cf:	je     0x1400304fc
   1400304d1:	lea    rdi,[rcx-0x8]
   1400304d5:	lea    r9,[rip+0x7b8]        # 0x140030c94
   1400304dc:	mov    edx,0x18
   1400304e1:	mov    r8d,DWORD PTR [rdi]
   1400304e4:	call   0x1400301b0
   1400304e9:	test   sil,0x1
   1400304ed:	je     0x1400304f7
   1400304ef:	mov    rcx,rdi
   1400304f2:	call   0x140030282
   1400304f7:	mov    rax,rdi
   1400304fa:	jmp    0x140030512
   1400304fc:	call   0x140030c94
   140030501:	test   sil,0x1
   140030505:	je     0x14003050f
   140030507:	mov    rcx,rbx
   14003050a:	call   0x140030282
   14003050f:	mov    rax,rbx
   140030512:	mov    rbx,QWORD PTR [rsp+0x30]
   140030517:	mov    rsi,QWORD PTR [rsp+0x38]
   14003051c:	add    rsp,0x20
   140030520:	pop    rdi
   140030521:	ret    
   140030522:	int3   
   140030523:	int3   
   140030524:	mov    QWORD PTR [rsp+0x8],rbx
   140030529:	mov    QWORD PTR [rsp+0x10],rbp
   14003052e:	mov    QWORD PTR [rsp+0x18],rsi
   140030533:	push   rdi
   140030534:	sub    rsp,0x10
   140030538:	xor    ecx,ecx
   14003053a:	xor    eax,eax
   14003053c:	xor    edi,edi
   14003053e:	cpuid  
   140030540:	mov    DWORD PTR [rip+0x24aea],0x2        # 0x140055034
   14003054a:	mov    DWORD PTR [rip+0x24adc],0x1        # 0x140055030
   140030554:	mov    r11d,ebx
   140030557:	mov    ebx,ecx
   140030559:	mov    r8d,edx
   14003055c:	xor    ebx,0x6c65746e
   140030562:	mov    r9d,edx
   140030565:	mov    edx,r11d
   140030568:	xor    r8d,0x49656e69
   14003056f:	xor    edx,0x756e6547
   140030575:	mov    ebp,eax
   140030577:	or     r8d,ebx
   14003057a:	lea    eax,[rdi+0x1]
   14003057d:	or     r8d,edx
   140030580:	sete   r10b
   140030584:	xor    r11d,0x68747541
   14003058b:	xor    r9d,0x69746e65
   140030592:	or     r11d,r9d
   140030595:	xor    ecx,0x444d4163
   14003059b:	or     r11d,ecx
   14003059e:	sete   sil
   1400305a2:	xor    ecx,ecx
   1400305a4:	cpuid  
   1400305a6:	mov    r11d,ecx
   1400305a9:	mov    r9d,eax
   1400305ac:	mov    DWORD PTR [rsp+0x4],ebx
   1400305b0:	mov    DWORD PTR [rsp+0xc],edx
   1400305b4:	test   r10b,r10b
   1400305b7:	je     0x140030608
   1400305b9:	mov    edx,eax
   1400305bb:	and    edx,0xfff3ff0
   1400305c1:	cmp    edx,0x106c0
   1400305c7:	je     0x1400305f4
   1400305c9:	cmp    edx,0x20660
   1400305cf:	je     0x1400305f4
   1400305d1:	cmp    edx,0x20670
   1400305d7:	je     0x1400305f4
   1400305d9:	add    edx,0xfffcf9b0
   1400305df:	cmp    edx,0x20
   1400305e2:	ja     0x140030608
   1400305e4:	movabs rcx,0x100010001
   1400305ee:	bt     rcx,rdx
   1400305f2:	jae    0x140030608
   1400305f4:	mov    r8d,DWORD PTR [rip+0x2746d]        # 0x140057a68
   1400305fb:	or     r8d,0x1
   1400305ff:	mov    DWORD PTR [rip+0x27462],r8d        # 0x140057a68
   140030606:	jmp    0x14003060f
   140030608:	mov    r8d,DWORD PTR [rip+0x27459]        # 0x140057a68
   14003060f:	test   sil,sil
   140030612:	je     0x14003062f
   140030614:	and    r9d,0xff00f00
   14003061b:	cmp    r9d,0x600f00
   140030622:	jl     0x14003062f
   140030624:	or     r8d,0x4
   140030628:	mov    DWORD PTR [rip+0x27439],r8d        # 0x140057a68
   14003062f:	mov    eax,0x7
   140030634:	cmp    ebp,eax
   140030636:	jl     0x14003065a
   140030638:	xor    ecx,ecx
   14003063a:	cpuid  
   14003063c:	mov    edi,ebx
   14003063e:	mov    DWORD PTR [rsp],eax
   140030641:	mov    DWORD PTR [rsp+0x8],ecx
   140030645:	mov    DWORD PTR [rsp+0xc],edx
   140030649:	bt     ebx,0x9
   14003064d:	jae    0x14003065a
   14003064f:	or     r8d,0x2
   140030653:	mov    DWORD PTR [rip+0x2740e],r8d        # 0x140057a68
   14003065a:	bt     r11d,0x14
   14003065f:	jae    0x1400306b1
   140030661:	mov    DWORD PTR [rip+0x249c5],0x2        # 0x140055030
   14003066b:	mov    DWORD PTR [rip+0x249bf],0x6        # 0x140055034
   140030675:	bt     r11d,0x1b
   14003067a:	jae    0x1400306b1
   14003067c:	bt     r11d,0x1c
   140030681:	jae    0x1400306b1
   140030683:	mov    DWORD PTR [rip+0x249a3],0x3        # 0x140055030
   14003068d:	mov    DWORD PTR [rip+0x2499d],0xe        # 0x140055034
   140030697:	test   dil,0x20
   14003069b:	je     0x1400306b1
   14003069d:	mov    DWORD PTR [rip+0x24989],0x5        # 0x140055030
   1400306a7:	mov    DWORD PTR [rip+0x24983],0x2e        # 0x140055034
   1400306b1:	mov    rbx,QWORD PTR [rsp+0x20]
   1400306b6:	mov    rbp,QWORD PTR [rsp+0x28]
   1400306bb:	mov    rsi,QWORD PTR [rsp+0x30]
   1400306c0:	xor    eax,eax
   1400306c2:	add    rsp,0x10
   1400306c6:	pop    rdi
   1400306c7:	ret    
   1400306c8:	sub    rsp,0x28
   1400306cc:	mov    eax,0x5a4d
   1400306d1:	cmp    WORD PTR [rip+0xfffffffffffcf928],ax        # 0x140000000
   1400306d8:	je     0x1400306de
   1400306da:	xor    ecx,ecx
   1400306dc:	jmp    0x140030716
   1400306de:	movsxd rax,DWORD PTR [rip+0xfffffffffffcf957]        # 0x14000003c
   1400306e5:	lea    rcx,[rip+0xfffffffffffcf914]        # 0x140000000
   1400306ec:	add    rax,rcx
   1400306ef:	cmp    DWORD PTR [rax],0x4550
   1400306f5:	jne    0x1400306da
   1400306f7:	mov    ecx,0x20b
   1400306fc:	cmp    WORD PTR [rax+0x18],cx
   140030700:	jne    0x1400306da
   140030702:	xor    ecx,ecx
   140030704:	cmp    DWORD PTR [rax+0x84],0xe
   14003070b:	jbe    0x140030716
   14003070d:	cmp    DWORD PTR [rax+0xf8],ecx
   140030713:	setne  cl
   140030716:	mov    DWORD PTR [rip+0x2735c],ecx        # 0x140057a78
   14003071c:	mov    ecx,0x1
   140030721:	call   QWORD PTR [rip+0x5c29]        # 0x140036350
   140030727:	or     rcx,0xffffffffffffffff
   14003072b:	call   QWORD PTR [rip+0x58f7]        # 0x140036028
   140030731:	mov    rcx,QWORD PTR [rip+0x5bd8]        # 0x140036310
   140030738:	mov    QWORD PTR [rip+0x27381],rax        # 0x140057ac0
   14003073f:	mov    QWORD PTR [rip+0x27382],rax        # 0x140057ac8
   140030746:	mov    eax,DWORD PTR [rip+0x27358]        # 0x140057aa4
   14003074c:	mov    DWORD PTR [rcx],eax
   14003074e:	mov    rdx,QWORD PTR [rip+0x5bb3]        # 0x140036308
   140030755:	mov    eax,DWORD PTR [rip+0x2733d]        # 0x140057a98
   14003075b:	mov    DWORD PTR [rdx],eax
   14003075d:	call   0x140030c0c
   140030762:	call   0x140030a64
   140030767:	cmp    DWORD PTR [rip+0x248ce],0x0        # 0x14005503c
   14003076e:	jne    0x14003077d
   140030770:	lea    rcx,[rip+0x491]        # 0x140030c08
   140030777:	call   QWORD PTR [rip+0x5bb3]        # 0x140036330
   14003077d:	cmp    DWORD PTR [rip+0x248bc],0xffffffff        # 0x140055040
   140030784:	jne    0x14003078f
   140030786:	or     ecx,0xffffffff
   140030789:	call   QWORD PTR [rip+0x5ba9]        # 0x140036338
   14003078f:	xor    eax,eax
   140030791:	add    rsp,0x28
   140030795:	ret    
   140030796:	int3   
   140030797:	int3   
   140030798:	sub    rsp,0x38
   14003079c:	lea    rcx,[rip+0x4a1]        # 0x140030c44
   1400307a3:	call   0x140030388
   1400307a8:	mov    eax,DWORD PTR [rip+0x272f2]        # 0x140057aa0
   1400307ae:	mov    r9d,DWORD PTR [rip+0x272e7]        # 0x140057a9c
   1400307b5:	mov    DWORD PTR [rip+0x272d9],eax        # 0x140057a94
   1400307bb:	lea    rax,[rip+0x272d2]        # 0x140057a94
   1400307c2:	lea    r8,[rip+0x272bf]        # 0x140057a88
   1400307c9:	lea    rdx,[rip+0x272b0]        # 0x140057a80
   1400307d0:	lea    rcx,[rip+0x272a5]        # 0x140057a7c
   1400307d7:	mov    QWORD PTR [rsp+0x20],rax
   1400307dc:	call   QWORD PTR [rip+0x5b76]        # 0x140036358
   1400307e2:	mov    DWORD PTR [rip+0x272a8],eax        # 0x140057a90
   1400307e8:	test   eax,eax
   1400307ea:	jns    0x1400307f6
   1400307ec:	mov    ecx,0x8
   1400307f1:	call   0x140030a5e
   1400307f6:	add    rsp,0x38
   1400307fa:	ret    
   1400307fb:	int3   
   1400307fc:	mov    rax,QWORD PTR gs:0x30
   140030805:	ret    
   140030806:	int3   
   140030807:	int3   
   140030808:	rex push rdi
   14003080a:	sub    rsp,0x20
   14003080e:	mov    rax,QWORD PTR gs:0x30
   140030817:	mov    rcx,QWORD PTR [rax+0x8]
   14003081b:	xor    edi,edi
   14003081d:	xor    eax,eax
   14003081f:	lock cmpxchg QWORD PTR [rip+0x27280],rcx        # 0x140057aa8
   140030828:	je     0x140030838
   14003082a:	cmp    rax,rcx
   14003082d:	jne    0x140030836
   14003082f:	mov    edi,0x1
   140030834:	jmp    0x140030838
   140030836:	jmp    0x14003081d
   140030838:	mov    eax,DWORD PTR [rip+0x27272]        # 0x140057ab0
   14003083e:	cmp    eax,0x1
   140030841:	jne    0x14003084d
   140030843:	lea    ecx,[rax+0x1e]
   140030846:	call   0x140030a5e
   14003084b:	jmp    0x14003088c
   14003084d:	mov    eax,DWORD PTR [rip+0x2725d]        # 0x140057ab0
   140030853:	test   eax,eax
   140030855:	jne    0x140030882
   140030857:	mov    DWORD PTR [rip+0x2724f],0x1        # 0x140057ab0
   140030861:	lea    rdx,[rip+0x5f28]        # 0x140036790
   140030868:	lea    rcx,[rip+0x5ef9]        # 0x140036768
   14003086f:	call   0x140030c88
   140030874:	test   eax,eax
   140030876:	je     0x14003088c
   140030878:	mov    eax,0xff
   14003087d:	jmp    0x140030972
   140030882:	mov    DWORD PTR [rip+0x271e4],0x1        # 0x140057a70
   14003088c:	mov    eax,DWORD PTR [rip+0x2721e]        # 0x140057ab0
   140030892:	cmp    eax,0x1
   140030895:	jne    0x1400308b4
   140030897:	lea    rdx,[rip+0x5ec2]        # 0x140036760
   14003089e:	lea    rcx,[rip+0x5e6b]        # 0x140036710
   1400308a5:	call   0x140030c8e
   1400308aa:	mov    DWORD PTR [rip+0x271fc],0x2        # 0x140057ab0
   1400308b4:	test   edi,edi
   1400308b6:	jne    0x1400308c1
   1400308b8:	xor    eax,eax
   1400308ba:	xchg   QWORD PTR [rip+0x271e7],rax        # 0x140057aa8
   1400308c1:	cmp    QWORD PTR [rip+0x271ef],0x0        # 0x140057ab8
   1400308c9:	je     0x1400308ed
   1400308cb:	lea    rcx,[rip+0x271e6]        # 0x140057ab8
   1400308d2:	call   0x140030ad0
   1400308d7:	test   eax,eax
   1400308d9:	je     0x1400308ed
   1400308db:	xor    r8d,r8d
   1400308de:	lea    edx,[r8+0x2]
   1400308e2:	xor    ecx,ecx
   1400308e4:	mov    rax,QWORD PTR [rip+0x271cd]        # 0x140057ab8
   1400308eb:	call   rax
   1400308ed:	mov    rcx,QWORD PTR [rip+0x27194]        # 0x140057a88
   1400308f4:	mov    rax,QWORD PTR [rip+0x5a1d]        # 0x140036318
   1400308fb:	mov    QWORD PTR [rax],rcx
   1400308fe:	mov    r8,QWORD PTR [rip+0x27183]        # 0x140057a88
   140030905:	mov    rdx,QWORD PTR [rip+0x27174]        # 0x140057a80
   14003090c:	mov    ecx,DWORD PTR [rip+0x2716a]        # 0x140057a7c
   140030912:	call   0x14002eac0
   140030917:	mov    DWORD PTR [rip+0x27157],eax        # 0x140057a74
   14003091d:	cmp    DWORD PTR [rip+0x27154],0x0        # 0x140057a78
   140030924:	jne    0x14003092e
   140030926:	mov    ecx,eax
   140030928:	call   QWORD PTR [rip+0x5b52]        # 0x140036480
   14003092e:	cmp    DWORD PTR [rip+0x2713b],0x0        # 0x140057a70
   140030935:	jne    0x140030943
   140030937:	call   QWORD PTR [rip+0x5a03]        # 0x140036340
   14003093d:	mov    eax,DWORD PTR [rip+0x27131]        # 0x140057a74
   140030943:	jmp    0x140030972
   140030945:	mov    DWORD PTR [rip+0x27129],eax        # 0x140057a74
   14003094b:	cmp    DWORD PTR [rip+0x27126],0x0        # 0x140057a78
   140030952:	jne    0x14003095d
   140030954:	mov    ecx,eax
   140030956:	call   QWORD PTR [rip+0x59ec]        # 0x140036348
   14003095c:	int3   
   14003095d:	cmp    DWORD PTR [rip+0x2710c],0x0        # 0x140057a70
   140030964:	jne    0x140030972
   140030966:	call   QWORD PTR [rip+0x59d4]        # 0x140036340
   14003096c:	mov    eax,DWORD PTR [rip+0x27102]        # 0x140057a74
   140030972:	add    rsp,0x20
   140030976:	pop    rdi
   140030977:	ret    
   140030978:	mov    eax,0x5a4d
   14003097d:	cmp    WORD PTR [rip+0xfffffffffffcf67c],ax        # 0x140000000
   140030984:	je     0x140030989
   140030986:	xor    eax,eax
   140030988:	ret    
   140030989:	movsxd rcx,DWORD PTR [rip+0xfffffffffffcf6ac]        # 0x14000003c
   140030990:	lea    rax,[rip+0xfffffffffffcf669]        # 0x140000000
   140030997:	add    rcx,rax
   14003099a:	cmp    DWORD PTR [rcx],0x4550
   1400309a0:	jne    0x140030986
   1400309a2:	mov    eax,0x20b
   1400309a7:	cmp    WORD PTR [rcx+0x18],ax
   1400309ab:	jne    0x140030986
   1400309ad:	xor    eax,eax
   1400309af:	cmp    DWORD PTR [rcx+0x84],0xe
   1400309b6:	jbe    0x1400309c1
   1400309b8:	cmp    DWORD PTR [rcx+0xf8],eax
   1400309be:	setne  al
   1400309c1:	ret    
   1400309c2:	int3   
   1400309c3:	int3   
   1400309c4:	sub    rsp,0x28
   1400309c8:	call   0x140030b5c
   1400309cd:	add    rsp,0x28
   1400309d1:	jmp    0x140030808
   1400309d6:	jmp    QWORD PTR [rip+0x59d4]        # 0x1400363b0
   1400309dc:	jmp    QWORD PTR [rip+0x59c6]        # 0x1400363a8
   1400309e2:	jmp    QWORD PTR [rip+0x59b8]        # 0x1400363a0
   1400309e8:	jmp    QWORD PTR [rip+0x59aa]        # 0x140036398
   1400309ee:	jmp    QWORD PTR [rip+0x599c]        # 0x140036390
   1400309f4:	jmp    QWORD PTR [rip+0x598e]        # 0x140036388
   1400309fa:	jmp    QWORD PTR [rip+0x5978]        # 0x140036378
   140030a00:	jmp    QWORD PTR [rip+0x596a]        # 0x140036370
   140030a06:	int3   
   140030a07:	int3   
   140030a08:	sub    rsp,0x28
   140030a0c:	mov    rax,QWORD PTR [rcx]
   140030a0f:	cmp    DWORD PTR [rax],0xe06d7363
   140030a15:	jne    0x140030a33
   140030a17:	cmp    DWORD PTR [rax+0x18],0x4
   140030a1b:	jne    0x140030a33
   140030a1d:	mov    ecx,DWORD PTR [rax+0x20]
   140030a20:	lea    eax,[rcx-0x19930520]
   140030a26:	cmp    eax,0x2
   140030a29:	jbe    0x140030a3a
   140030a2b:	cmp    ecx,0x1994000
   140030a31:	je     0x140030a3a
   140030a33:	xor    eax,eax
   140030a35:	add    rsp,0x28
   140030a39:	ret    
   140030a3a:	call   0x1400309d6
   140030a3f:	int3   
   140030a40:	sub    rsp,0x28
   140030a44:	lea    rcx,[rip+0xffffffffffffffbd]        # 0x140030a08
   140030a4b:	call   0x140030c9a
   140030a50:	xor    eax,eax
   140030a52:	add    rsp,0x28
   140030a56:	ret    
   140030a57:	int3   
   140030a58:	jmp    QWORD PTR [rip+0x590a]        # 0x140036368
   140030a5e:	jmp    QWORD PTR [rip+0x58fc]        # 0x140036360
   140030a64:	xor    eax,eax
   140030a66:	ret    
   140030a67:	int3   
   140030a68:	jmp    QWORD PTR [rip+0x58ea]        # 0x140036358
   140030a6e:	jmp    QWORD PTR [rip+0x58dc]        # 0x140036350
   140030a74:	int3   
   140030a75:	int3   
   140030a76:	int3   
   140030a77:	int3   
   140030a78:	int3   
   140030a79:	int3   
   140030a7a:	int3   
   140030a7b:	int3   
   140030a7c:	int3   
   140030a7d:	int3   
   140030a7e:	int3   
   140030a7f:	int3   
   140030a80:	movsxd r8,DWORD PTR [rcx+0x3c]
   140030a84:	xor    r9d,r9d
   140030a87:	mov    r10,rdx
   140030a8a:	add    r8,rcx
   140030a8d:	movzx  eax,WORD PTR [r8+0x14]
   140030a92:	movzx  r11d,WORD PTR [r8+0x6]
   140030a97:	add    rax,0x18
   140030a9b:	add    rax,r8
   140030a9e:	test   r11d,r11d
   140030aa1:	je     0x140030ac1
   140030aa3:	mov    edx,DWORD PTR [rax+0xc]
   140030aa6:	cmp    r10,rdx
   140030aa9:	jb     0x140030ab5
   140030aab:	mov    ecx,DWORD PTR [rax+0x8]
   140030aae:	add    ecx,edx
   140030ab0:	cmp    r10,rcx
   140030ab3:	jb     0x140030ac3
   140030ab5:	inc    r9d
   140030ab8:	add    rax,0x28
   140030abc:	cmp    r9d,r11d
   140030abf:	jb     0x140030aa3
   140030ac1:	xor    eax,eax
   140030ac3:	ret    
   140030ac4:	int3   
   140030ac5:	int3   
   140030ac6:	int3   
   140030ac7:	int3   
   140030ac8:	int3   
   140030ac9:	int3   
   140030aca:	int3   
   140030acb:	int3   
   140030acc:	int3   
   140030acd:	int3   
   140030ace:	int3   
   140030acf:	int3   
   140030ad0:	mov    QWORD PTR [rsp+0x8],rbx
   140030ad5:	push   rdi
   140030ad6:	sub    rsp,0x20
   140030ada:	mov    rbx,rcx
   140030add:	lea    rdi,[rip+0xfffffffffffcf51c]        # 0x140000000
   140030ae4:	mov    rcx,rdi
   140030ae7:	call   0x140030b20
   140030aec:	test   eax,eax
   140030aee:	je     0x140030b12
   140030af0:	sub    rbx,rdi
   140030af3:	mov    rdx,rbx
   140030af6:	mov    rcx,rdi
   140030af9:	call   0x140030a80
   140030afe:	test   rax,rax
   140030b01:	je     0x140030b12
   140030b03:	mov    eax,DWORD PTR [rax+0x24]
   140030b06:	shr    eax,0x1f
   140030b09:	not    eax
   140030b0b:	and    eax,0x1
   140030b0e:	jmp    0x140030b12
   140030b10:	xor    eax,eax
   140030b12:	mov    rbx,QWORD PTR [rsp+0x30]
   140030b17:	add    rsp,0x20
   140030b1b:	pop    rdi
   140030b1c:	ret    
   140030b1d:	int3   
   140030b1e:	int3   
   140030b1f:	int3   
   140030b20:	mov    rax,rcx
   140030b23:	mov    ecx,0x5a4d
   140030b28:	cmp    WORD PTR [rax],cx
   140030b2b:	je     0x140030b30
   140030b2d:	xor    eax,eax
   140030b2f:	ret    
   140030b30:	movsxd rcx,DWORD PTR [rax+0x3c]
   140030b34:	add    rcx,rax
   140030b37:	xor    eax,eax
   140030b39:	cmp    DWORD PTR [rcx],0x4550
   140030b3f:	jne    0x140030b4d
   140030b41:	mov    edx,0x20b
   140030b46:	cmp    WORD PTR [rcx+0x18],dx
   140030b4a:	sete   al
   140030b4d:	ret    
   140030b4e:	jmp    QWORD PTR [rip+0x57f4]        # 0x140036348
   140030b54:	jmp    QWORD PTR [rip+0x57e6]        # 0x140036340
   140030b5a:	int3   
   140030b5b:	int3   
   140030b5c:	mov    QWORD PTR [rsp+0x20],rbx
   140030b61:	push   rbp
   140030b62:	mov    rbp,rsp
   140030b65:	sub    rsp,0x20
   140030b69:	mov    rax,QWORD PTR [rip+0x244d8]        # 0x140055048
   140030b70:	and    QWORD PTR [rbp+0x18],0x0
   140030b75:	movabs rbx,0x2b992ddfa232
   140030b7f:	cmp    rax,rbx
   140030b82:	jne    0x140030bf3
   140030b84:	lea    rcx,[rbp+0x18]
   140030b88:	call   QWORD PTR [rip+0x5472]        # 0x140036000
   140030b8e:	mov    rax,QWORD PTR [rbp+0x18]
   140030b92:	mov    QWORD PTR [rbp+0x10],rax
   140030b96:	call   QWORD PTR [rip+0x546c]        # 0x140036008
   140030b9c:	mov    eax,eax
   140030b9e:	xor    QWORD PTR [rbp+0x10],rax
   140030ba2:	call   QWORD PTR [rip+0x5468]        # 0x140036010
   140030ba8:	lea    rcx,[rbp+0x20]
   140030bac:	mov    eax,eax
   140030bae:	xor    QWORD PTR [rbp+0x10],rax
   140030bb2:	call   QWORD PTR [rip+0x5460]        # 0x140036018
   140030bb8:	mov    eax,DWORD PTR [rbp+0x20]
   140030bbb:	shl    rax,0x20
   140030bbf:	lea    rcx,[rbp+0x10]
   140030bc3:	xor    rax,QWORD PTR [rbp+0x20]
   140030bc7:	xor    rax,QWORD PTR [rbp+0x10]
   140030bcb:	xor    rax,rcx
   140030bce:	movabs rcx,0xffffffffffff
   140030bd8:	and    rax,rcx
   140030bdb:	movabs rcx,0x2b992ddfa233
   140030be5:	cmp    rax,rbx
   140030be8:	cmove  rax,rcx
   140030bec:	mov    QWORD PTR [rip+0x24455],rax        # 0x140055048
   140030bf3:	mov    rbx,QWORD PTR [rsp+0x48]
   140030bf8:	not    rax
   140030bfb:	mov    QWORD PTR [rip+0x2444e],rax        # 0x140055050
   140030c02:	add    rsp,0x20
   140030c06:	pop    rbp
   140030c07:	ret    
   140030c08:	xor    eax,eax
   140030c0a:	ret    
   140030c0b:	int3   
   140030c0c:	mov    QWORD PTR [rsp+0x8],rbx
   140030c11:	push   rdi
   140030c12:	sub    rsp,0x20
   140030c16:	lea    rbx,[rip+0x127e3]        # 0x140043400
   140030c1d:	lea    rdi,[rip+0x127dc]        # 0x140043400
   140030c24:	jmp    0x140030c34
   140030c26:	mov    rax,QWORD PTR [rbx]
   140030c29:	test   rax,rax
   140030c2c:	je     0x140030c30
   140030c2e:	call   rax
   140030c30:	add    rbx,0x8
   140030c34:	cmp    rbx,rdi
   140030c37:	jb     0x140030c26
   140030c39:	mov    rbx,QWORD PTR [rsp+0x30]
   140030c3e:	add    rsp,0x20
   140030c42:	pop    rdi
   140030c43:	ret    
   140030c44:	mov    QWORD PTR [rsp+0x8],rbx
   140030c49:	push   rdi
   140030c4a:	sub    rsp,0x20
   140030c4e:	lea    rbx,[rip+0x127bb]        # 0x140043410
   140030c55:	lea    rdi,[rip+0x127b4]        # 0x140043410
   140030c5c:	jmp    0x140030c6c
   140030c5e:	mov    rax,QWORD PTR [rbx]
   140030c61:	test   rax,rax
   140030c64:	je     0x140030c68
   140030c66:	call   rax
   140030c68:	add    rbx,0x8
   140030c6c:	cmp    rbx,rdi
   140030c6f:	jb     0x140030c5e
   140030c71:	mov    rbx,QWORD PTR [rsp+0x30]
   140030c76:	add    rsp,0x20
   140030c7a:	pop    rdi
   140030c7b:	ret    
   140030c7c:	jmp    QWORD PTR [rip+0x56b6]        # 0x140036338
   140030c82:	jmp    QWORD PTR [rip+0x56a8]        # 0x140036330
   140030c88:	jmp    QWORD PTR [rip+0x569a]        # 0x140036328
   140030c8e:	jmp    QWORD PTR [rip+0x568c]        # 0x140036320
   140030c94:	jmp    QWORD PTR [rip+0x5666]        # 0x140036300
   140030c9a:	jmp    QWORD PTR [rip+0x5658]        # 0x1400362f8
   140030ca0:	jmp    QWORD PTR [rip+0x5382]        # 0x140036028
   140030ca6:	jmp    QWORD PTR [rip+0x5374]        # 0x140036020
   140030cac:	jmp    QWORD PTR [rip+0x5366]        # 0x140036018
   140030cb2:	jmp    QWORD PTR [rip+0x5358]        # 0x140036010
   140030cb8:	jmp    QWORD PTR [rip+0x534a]        # 0x140036008
   140030cbe:	jmp    QWORD PTR [rip+0x533c]        # 0x140036000
   140030cc4:	int3   
   140030cc5:	int3   
   140030cc6:	int3   
   140030cc7:	int3   
   140030cc8:	int3   
   140030cc9:	int3   
   140030cca:	int3   
   140030ccb:	int3   
   140030ccc:	int3   
   140030ccd:	int3   
   140030cce:	int3   
   140030ccf:	int3   
   140030cd0:	mov    rcx,QWORD PTR [rdx+0x60]
   140030cd7:	jmp    0x140017140
   140030cdc:	lea    rcx,[rdx+0x28]
   140030ce3:	jmp    0x140017100
   140030ce8:	int3   
   140030ce9:	int3   
   140030cea:	int3   
   140030ceb:	int3   
   140030cec:	int3   
   140030ced:	int3   
   140030cee:	int3   
   140030cef:	int3   
   140030cf0:	mov    rcx,QWORD PTR [rdx+0x40]
   140030cf7:	jmp    0x140017100
   140030cfc:	int3   
   140030cfd:	int3   
   140030cfe:	int3   
   140030cff:	int3   
   140030d00:	mov    rcx,QWORD PTR [rdx+0x40]
   140030d07:	jmp    0x140017100
   140030d0c:	int3   
   140030d0d:	int3   
   140030d0e:	int3   
   140030d0f:	int3   
   140030d10:	mov    rcx,QWORD PTR [rdx+0x40]
   140030d17:	jmp    0x140030282
   140030d1c:	mov    rcx,QWORD PTR [rdx+0x40]
   140030d23:	add    rcx,0x8
   140030d27:	jmp    0x140019310
   140030d2c:	int3   
   140030d2d:	int3   
   140030d2e:	int3   
   140030d2f:	int3   
   140030d30:	mov    rcx,QWORD PTR [rdx+0x40]
   140030d37:	jmp    0x140018df0
   140030d3c:	int3   
   140030d3d:	int3   
   140030d3e:	int3   
   140030d3f:	int3   
   140030d40:	mov    rcx,QWORD PTR [rdx+0x40]
   140030d47:	jmp    0x140017140
   140030d4c:	int3   
   140030d4d:	int3   
   140030d4e:	int3   
   140030d4f:	int3   
   140030d50:	mov    rcx,QWORD PTR [rdx+0x40]
   140030d57:	add    rcx,0x8
   140030d5b:	jmp    0x140019310
   140030d60:	mov    QWORD PTR [rsp+0x10],rdx
   140030d65:	push   rbx
   140030d66:	push   rbp
   140030d67:	sub    rsp,0x28
   140030d6b:	mov    rbp,rdx
   140030d6e:	mov    rbx,QWORD PTR [rbp+0x48]
   140030d72:	test   rbx,rbx
   140030d75:	je     0x140030d87
   140030d77:	mov    rcx,rbx
   140030d7a:	call   0x140018f40
   140030d7f:	mov    rcx,rbx
   140030d82:	call   0x140030282
   140030d87:	xor    edx,edx
   140030d89:	xor    ecx,ecx
   140030d8b:	call   0x140030478
   140030d90:	nop
   140030d91:	int3   
   140030d92:	int3   
   140030d93:	int3   
   140030d94:	int3   
   140030d95:	int3   
   140030d96:	int3   
   140030d97:	int3   
   140030d98:	int3   
   140030d99:	int3   
   140030d9a:	int3   
   140030d9b:	int3   
   140030d9c:	int3   
   140030d9d:	int3   
   140030d9e:	int3   
   140030d9f:	int3   
   140030da0:	mov    rcx,QWORD PTR [rdx+0x40]
   140030da7:	add    rcx,0x8
   140030dab:	jmp    0x140019310
   140030db0:	mov    QWORD PTR [rsp+0x10],rdx
   140030db5:	push   rbp
   140030db6:	sub    rsp,0x20
   140030dba:	mov    rbp,rdx
   140030dbd:	mov    rcx,QWORD PTR [rbp+0x48]
   140030dc1:	call   0x1400066d0
   140030dc6:	xor    edx,edx
   140030dc8:	xor    ecx,ecx
   140030dca:	call   0x140030478
   140030dcf:	nop
   140030dd0:	mov    rcx,QWORD PTR [rdx+0x40]
   140030dd7:	add    rcx,0x8
   140030ddb:	jmp    0x140019310
   140030de0:	mov    QWORD PTR [rsp+0x10],rdx
   140030de5:	push   rbp
   140030de6:	sub    rsp,0x20
   140030dea:	mov    rbp,rdx
   140030ded:	mov    rcx,QWORD PTR [rbp+0x48]
   140030df1:	call   0x140006720
   140030df6:	xor    edx,edx
   140030df8:	xor    ecx,ecx
   140030dfa:	call   0x140030478
   140030dff:	nop
   140030e00:	mov    rcx,QWORD PTR [rdx+0x40]
   140030e07:	jmp    0x140030282
   140030e0c:	mov    rcx,QWORD PTR [rdx+0x40]
   140030e13:	add    rcx,0x8
   140030e17:	jmp    0x140019310
   140030e1c:	int3   
   140030e1d:	int3   
   140030e1e:	int3   
   140030e1f:	int3   
   140030e20:	mov    rcx,QWORD PTR [rdx+0x50]
   140030e27:	rex.W jmp QWORD PTR [rip+0x57ca]        # 0x1400365f8
   140030e2e:	mov    rcx,QWORD PTR [rdx+0x50]
   140030e35:	jmp    0x140018db0
   140030e3a:	int3   
   140030e3b:	int3   
   140030e3c:	int3   
   140030e3d:	int3   
   140030e3e:	int3   
   140030e3f:	int3   
   140030e40:	mov    rcx,QWORD PTR [rdx+0x40]
   140030e47:	jmp    0x140030282
   140030e4c:	mov    rcx,QWORD PTR [rdx+0x40]
   140030e53:	jmp    0x1400191d0
   140030e58:	int3   
   140030e59:	int3   
   140030e5a:	int3   
   140030e5b:	int3   
   140030e5c:	int3   
   140030e5d:	int3   
   140030e5e:	int3   
   140030e5f:	int3   
   140030e60:	mov    rcx,QWORD PTR [rdx+0x40]
   140030e67:	jmp    0x140017140
   140030e6c:	int3   
   140030e6d:	int3   
   140030e6e:	int3   
   140030e6f:	int3   
   140030e70:	mov    rcx,QWORD PTR [rdx+0x40]
   140030e77:	jmp    0x140019260
   140030e7c:	int3   
   140030e7d:	int3   
   140030e7e:	int3   
   140030e7f:	int3   
   140030e80:	mov    rcx,QWORD PTR [rdx+0x40]
   140030e87:	add    rcx,0x8
   140030e8b:	jmp    0x140019310
   140030e90:	mov    QWORD PTR [rsp+0x10],rdx
   140030e95:	push   rbp
   140030e96:	sub    rsp,0x20
   140030e9a:	mov    rbp,rdx
   140030e9d:	mov    rcx,QWORD PTR [rbp+0x48]
   140030ea1:	call   0x140030282
   140030ea6:	xor    edx,edx
   140030ea8:	xor    ecx,ecx
   140030eaa:	call   0x140030478
   140030eaf:	nop
   140030eb0:	mov    rcx,QWORD PTR [rdx+0x40]
   140030eb7:	jmp    0x140030282
   140030ebc:	int3   
   140030ebd:	int3   
   140030ebe:	int3   
   140030ebf:	int3   
   140030ec0:	lea    rcx,[rdx+0x28]
   140030ec7:	jmp    0x140017100
   140030ecc:	mov    rcx,QWORD PTR [rdx+0x60]
   140030ed3:	jmp    0x140019260
   140030ed8:	mov    rcx,QWORD PTR [rdx+0x78]
   140030edf:	jmp    0x140030282
   140030ee4:	int3   
   140030ee5:	int3   
   140030ee6:	int3   
   140030ee7:	int3   
   140030ee8:	int3   
   140030ee9:	int3   
   140030eea:	int3   
   140030eeb:	int3   
   140030eec:	int3   
   140030eed:	int3   
   140030eee:	int3   
   140030eef:	int3   
   140030ef0:	mov    rcx,QWORD PTR [rdx+0x40]
   140030ef7:	jmp    0x140019260
   140030efc:	int3   
   140030efd:	int3   
   140030efe:	int3   
   140030eff:	int3   
   140030f00:	lea    rcx,[rdx+0x28]
   140030f07:	jmp    0x140017100
   140030f0c:	int3   
   140030f0d:	int3   
   140030f0e:	int3   
   140030f0f:	int3   
   140030f10:	lea    rcx,[rdx+0x28]
   140030f17:	jmp    0x140018e90
   140030f1c:	lea    rcx,[rdx+0x28]
   140030f23:	jmp    0x1400192b0
   140030f28:	mov    QWORD PTR [rsp+0x10],rdx
   140030f2d:	push   rbp
   140030f2e:	sub    rsp,0x20
   140030f32:	mov    rbp,rdx
   140030f35:	mov    rdx,QWORD PTR [rbp+0x70]
   140030f39:	mov    rax,QWORD PTR [rdx]
   140030f3c:	movsxd rcx,DWORD PTR [rax+0x4]
   140030f40:	add    rcx,rdx
   140030f43:	mov    r8b,0x1
   140030f46:	mov    edx,0x4
   140030f4b:	call   QWORD PTR [rip+0x5247]        # 0x140036198
   140030f51:	nop
   140030f52:	lea    rax,[rip+0xfffffffffffd1da9]        # 0x140002d02
   140030f59:	add    rsp,0x20
   140030f5d:	pop    rbp
   140030f5e:	ret    
   140030f5f:	int3   
   140030f60:	lea    rcx,[rdx+0x28]
   140030f67:	jmp    0x140018e90
   140030f6c:	lea    rcx,[rdx+0x28]
   140030f73:	jmp    0x1400192b0
   140030f78:	mov    QWORD PTR [rsp+0x10],rdx
   140030f7d:	push   rbp
   140030f7e:	sub    rsp,0x20
   140030f82:	mov    rbp,rdx
   140030f85:	mov    rdx,QWORD PTR [rbp+0x70]
   140030f89:	mov    rax,QWORD PTR [rdx]
   140030f8c:	movsxd rcx,DWORD PTR [rax+0x4]
   140030f90:	add    rcx,rdx
   140030f93:	mov    r8b,0x1
   140030f96:	mov    edx,0x4
   140030f9b:	call   QWORD PTR [rip+0x51f7]        # 0x140036198
   140030fa1:	nop
   140030fa2:	lea    rax,[rip+0xfffffffffffd1f43]        # 0x140002eec
   140030fa9:	add    rsp,0x20
   140030fad:	pop    rbp
   140030fae:	ret    
   140030faf:	int3   
   140030fb0:	lea    rcx,[rdx+0x28]
   140030fb7:	jmp    0x140018e90
   140030fbc:	lea    rcx,[rdx+0x28]
   140030fc3:	jmp    0x1400192b0
   140030fc8:	mov    QWORD PTR [rsp+0x10],rdx
   140030fcd:	push   rbp
   140030fce:	sub    rsp,0x20
   140030fd2:	mov    rbp,rdx
   140030fd5:	mov    rdx,QWORD PTR [rbp+0x70]
   140030fd9:	mov    rax,QWORD PTR [rdx]
   140030fdc:	movsxd rcx,DWORD PTR [rax+0x4]
   140030fe0:	add    rcx,rdx
   140030fe3:	mov    r8b,0x1
   140030fe6:	mov    edx,0x4
   140030feb:	call   QWORD PTR [rip+0x51a7]        # 0x140036198
   140030ff1:	nop
   140030ff2:	lea    rax,[rip+0xfffffffffffd20e0]        # 0x1400030d9
   140030ff9:	add    rsp,0x20
   140030ffd:	pop    rbp
   140030ffe:	ret    
   140030fff:	int3   
   140031000:	rex push rbp
   140031002:	sub    rsp,0x20
   140031006:	mov    rbp,rdx
   140031009:	mov    eax,DWORD PTR [rbp+0x20]
   14003100c:	and    eax,0x1
   14003100f:	test   eax,eax
   140031011:	je     0x140031020
   140031013:	and    DWORD PTR [rbp+0x20],0xfffffffe
   140031017:	mov    rcx,QWORD PTR [rbp+0x50]
   14003101b:	call   0x140017100
   140031020:	add    rsp,0x20
   140031024:	pop    rbp
   140031025:	ret    
   140031026:	int3   
   140031027:	int3   
   140031028:	int3   
   140031029:	int3   
   14003102a:	int3   
   14003102b:	int3   
   14003102c:	int3   
   14003102d:	int3   
   14003102e:	int3   
   14003102f:	int3   
   140031030:	rex push rbp
   140031032:	sub    rsp,0x20
   140031036:	mov    rbp,rdx
   140031039:	mov    eax,DWORD PTR [rbp+0x20]
   14003103c:	and    eax,0x1
   14003103f:	test   eax,eax
   140031041:	je     0x140031050
   140031043:	and    DWORD PTR [rbp+0x20],0xfffffffe
   140031047:	mov    rcx,QWORD PTR [rbp+0x50]
   14003104b:	call   0x140017100
   140031050:	add    rsp,0x20
   140031054:	pop    rbp
   140031055:	ret    
   140031056:	int3   
   140031057:	int3   
   140031058:	int3   
   140031059:	int3   
   14003105a:	int3   
   14003105b:	int3   
   14003105c:	int3   
   14003105d:	int3   
   14003105e:	int3   
   14003105f:	int3   
   140031060:	rex push rbp
   140031062:	sub    rsp,0x20
   140031066:	mov    rbp,rdx
   140031069:	mov    rdx,QWORD PTR [rbp+0x30]
   14003106d:	mov    rcx,QWORD PTR [rbp+0x38]
   140031071:	call   0x1400193a0
   140031076:	add    rsp,0x20
   14003107a:	pop    rbp
   14003107b:	ret    
   14003107c:	mov    QWORD PTR [rsp+0x10],rdx
   140031081:	push   rbp
   140031082:	sub    rsp,0x20
   140031086:	mov    rbp,rdx
   140031089:	mov    rcx,QWORD PTR [rbp+0x20]
   14003108d:	call   0x140030282
   140031092:	xor    edx,edx
   140031094:	xor    ecx,ecx
   140031096:	call   0x140030478
   14003109b:	nop
   14003109c:	int3   
   14003109d:	int3   
   14003109e:	int3   
   14003109f:	int3   
   1400310a0:	mov    QWORD PTR [rsp+0x10],rdx
   1400310a5:	push   rbp
   1400310a6:	sub    rsp,0x20
   1400310aa:	mov    rbp,rdx
   1400310ad:	mov    rcx,QWORD PTR [rbp+0x20]
   1400310b1:	call   0x140030282
   1400310b6:	xor    edx,edx
   1400310b8:	xor    ecx,ecx
   1400310ba:	call   0x140030478
   1400310bf:	nop
   1400310c0:	mov    QWORD PTR [rsp+0x10],rdx
   1400310c5:	push   rbx
   1400310c6:	push   rbp
   1400310c7:	sub    rsp,0x28
   1400310cb:	mov    rbp,rdx
   1400310ce:	mov    rbx,QWORD PTR [rbp+0x50]
   1400310d2:	cmp    QWORD PTR [rbx+0x18],0x10
   1400310d7:	jb     0x1400310e1
   1400310d9:	mov    rcx,QWORD PTR [rbx]
   1400310dc:	call   0x140030282
   1400310e1:	mov    QWORD PTR [rbx+0x18],0xf
   1400310e9:	mov    QWORD PTR [rbx+0x10],0x0
   1400310f1:	mov    BYTE PTR [rbx],0x0
   1400310f4:	xor    edx,edx
   1400310f6:	xor    ecx,ecx
   1400310f8:	call   0x140030478
   1400310fd:	nop
   1400310fe:	int3   
   1400310ff:	int3   
   140031100:	mov    QWORD PTR [rsp+0x10],rdx
   140031105:	push   rbx
   140031106:	push   rbp
   140031107:	sub    rsp,0x28
   14003110b:	mov    rbp,rdx
   14003110e:	mov    rbx,QWORD PTR [rbp+0x60]
   140031112:	cmp    QWORD PTR [rbx+0x18],0x10
   140031117:	jb     0x140031121
   140031119:	mov    rcx,QWORD PTR [rbx]
   14003111c:	call   0x140030282
   140031121:	mov    QWORD PTR [rbx+0x18],0xf
   140031129:	mov    QWORD PTR [rbx+0x10],0x0
   140031131:	mov    BYTE PTR [rbx],0x0
   140031134:	xor    edx,edx
   140031136:	xor    ecx,ecx
   140031138:	call   0x140030478
   14003113d:	nop
   14003113e:	int3   
   14003113f:	int3   
   140031140:	mov    QWORD PTR [rsp+0x10],rdx
   140031145:	push   rbp
   140031146:	sub    rsp,0x30
   14003114a:	mov    rbp,rdx
   14003114d:	mov    rcx,QWORD PTR [rbp+0x50]
   140031151:	call   0x14001d990
   140031156:	xor    edx,edx
   140031158:	xor    ecx,ecx
   14003115a:	call   0x140030478
   14003115f:	nop
   140031160:	mov    QWORD PTR [rsp+0x10],rdx
   140031165:	push   rbx
   140031166:	push   rbp
   140031167:	sub    rsp,0x28
   14003116b:	mov    rbp,rdx
   14003116e:	mov    rbx,QWORD PTR [rbp+0x50]
   140031172:	cmp    QWORD PTR [rbx+0x18],0x10
   140031177:	jb     0x140031181
   140031179:	mov    rcx,QWORD PTR [rbx]
   14003117c:	call   0x140030282
   140031181:	mov    QWORD PTR [rbx+0x18],0xf
   140031189:	mov    QWORD PTR [rbx+0x10],0x0
   140031191:	mov    BYTE PTR [rbx],0x0
   140031194:	xor    edx,edx
   140031196:	xor    ecx,ecx
   140031198:	call   0x140030478
   14003119d:	nop
   14003119e:	int3   
   14003119f:	int3   
   1400311a0:	mov    QWORD PTR [rsp+0x10],rdx
   1400311a5:	push   rbx
   1400311a6:	push   rbp
   1400311a7:	push   rsi
   1400311a8:	push   rdi
   1400311a9:	push   r14
   1400311ab:	sub    rsp,0x20
   1400311af:	mov    rbp,rdx
   1400311b2:	mov    rdi,QWORD PTR [rbp+0x78]
   1400311b6:	mov    r14,QWORD PTR [rbp+0x70]
   1400311ba:	cmp    rdi,r14
   1400311bd:	je     0x140031226
   1400311bf:	mov    rsi,QWORD PTR [rbp+0x60]
   1400311c3:	nop    DWORD PTR [rax+0x0]
   1400311c7:	nop    WORD PTR [rax+rax*1+0x0]
   1400311d0:	mov    rbx,QWORD PTR [rbp+0x68]
   1400311d4:	mov    rbx,QWORD PTR [rbx+0x8]
   1400311d8:	mov    rcx,QWORD PTR [rbx+0x8]
   1400311dc:	mov    rax,QWORD PTR [rbx]
   1400311df:	mov    QWORD PTR [rcx],rax
   1400311e2:	mov    rcx,QWORD PTR [rbx]
   1400311e5:	mov    rax,QWORD PTR [rbx+0x8]
   1400311e9:	mov    QWORD PTR [rcx+0x8],rax
   1400311ed:	cmp    QWORD PTR [rbx+0x28],0x10
   1400311f2:	jb     0x1400311fd
   1400311f4:	mov    rcx,QWORD PTR [rbx+0x10]
   1400311f8:	call   0x140030282
   1400311fd:	mov    QWORD PTR [rbx+0x28],0xf
   140031205:	mov    QWORD PTR [rbx+0x20],0x0
   14003120d:	mov    BYTE PTR [rbx+0x10],0x0
   140031211:	mov    rcx,rbx
   140031214:	call   0x140030282
   140031219:	dec    QWORD PTR [rsi+0x8]
   14003121d:	add    rdi,0x20
   140031221:	cmp    rdi,r14
   140031224:	jne    0x1400311d0
   140031226:	xor    edx,edx
   140031228:	xor    ecx,ecx
   14003122a:	call   0x140030478
   14003122f:	nop
   140031230:	rex push rbp
   140031232:	sub    rsp,0x20
   140031236:	mov    rbp,rdx
   140031239:	mov    rdx,QWORD PTR [rbp+0x70]
   14003123d:	mov    rcx,QWORD PTR [rbp+0x68]
   140031241:	call   0x1400193a0
   140031246:	add    rsp,0x20
   14003124a:	pop    rbp
   14003124b:	ret    
   14003124c:	mov    rcx,QWORD PTR [rdx+0x68]
   140031253:	jmp    0x140017100
   140031258:	mov    rcx,QWORD PTR [rdx+0x68]
   14003125f:	add    rcx,0x28
   140031263:	jmp    0x140018d60
   140031268:	mov    QWORD PTR [rsp+0x10],rdx
   14003126d:	push   rbx
   14003126e:	push   rbp
   14003126f:	push   rsi
   140031270:	push   rdi
   140031271:	sub    rsp,0x28
   140031275:	mov    rbp,rdx
   140031278:	mov    rbx,QWORD PTR [rbp+0x60]
   14003127c:	mov    rdi,QWORD PTR [rbp+0x70]
   140031280:	cmp    rbx,rdi
   140031283:	je     0x1400312a4
   140031285:	mov    rsi,QWORD PTR [rbp+0x78]
   140031289:	nop    DWORD PTR [rax+0x0]
   140031290:	mov    rdx,rbx
   140031293:	mov    rcx,rsi
   140031296:	call   0x140007820
   14003129b:	add    rbx,0x60
   14003129f:	cmp    rbx,rdi
   1400312a2:	jne    0x140031290
   1400312a4:	xor    edx,edx
   1400312a6:	xor    ecx,ecx
   1400312a8:	call   0x140030478
   1400312ad:	nop
   1400312ae:	int3   
   1400312af:	int3   
   1400312b0:	rex push rbp
   1400312b2:	sub    rsp,0x20
   1400312b6:	mov    rbp,rdx
   1400312b9:	mov    rdx,QWORD PTR [rbp+0x70]
   1400312bd:	mov    rcx,QWORD PTR [rbp+0x68]
   1400312c1:	call   0x1400193a0
   1400312c6:	add    rsp,0x20
   1400312ca:	pop    rbp
   1400312cb:	ret    
   1400312cc:	mov    QWORD PTR [rsp+0x10],rdx
   1400312d1:	push   rbx
   1400312d2:	push   rbp
   1400312d3:	push   rsi
   1400312d4:	push   rdi
   1400312d5:	sub    rsp,0x28
   1400312d9:	mov    rbp,rdx
   1400312dc:	mov    rbx,QWORD PTR [rbp+0x60]
   1400312e0:	mov    rdi,QWORD PTR [rbp+0x70]
   1400312e4:	cmp    rbx,rdi
   1400312e7:	je     0x140031304
   1400312e9:	mov    rsi,QWORD PTR [rbp+0x78]
   1400312ed:	nop    DWORD PTR [rax]
   1400312f0:	mov    rdx,rbx
   1400312f3:	mov    rcx,rsi
   1400312f6:	call   0x140007950
   1400312fb:	add    rbx,0x20
   1400312ff:	cmp    rbx,rdi
   140031302:	jne    0x1400312f0
   140031304:	xor    edx,edx
   140031306:	xor    ecx,ecx
   140031308:	call   0x140030478
   14003130d:	nop
   14003130e:	int3   
   14003130f:	int3   
   140031310:	rex push rbp
   140031312:	sub    rsp,0x20
   140031316:	mov    rbp,rdx
   140031319:	mov    rdx,QWORD PTR [rbp+0x70]
   14003131d:	mov    rcx,QWORD PTR [rbp+0x30]
   140031321:	call   0x1400193a0
   140031326:	add    rsp,0x20
   14003132a:	pop    rbp
   14003132b:	ret    
   14003132c:	mov    rcx,QWORD PTR [rdx+0x30]
   140031333:	jmp    0x140017100
   140031338:	mov    rcx,QWORD PTR [rdx+0x30]
   14003133f:	add    rcx,0x28
   140031343:	jmp    0x140018d60
   140031348:	mov    QWORD PTR [rsp+0x10],rdx
   14003134d:	push   rbx
   14003134e:	push   rbp
   14003134f:	push   rsi
   140031350:	push   rdi
   140031351:	sub    rsp,0x28
   140031355:	mov    rbp,rdx
   140031358:	mov    rbx,QWORD PTR [rbp+0x20]
   14003135c:	mov    rdi,QWORD PTR [rbp+0x70]
   140031360:	cmp    rbx,rdi
   140031363:	je     0x140031384
   140031365:	mov    rsi,QWORD PTR [rbp+0x78]
   140031369:	nop    DWORD PTR [rax+0x0]
   140031370:	mov    rdx,rbx
   140031373:	mov    rcx,rsi
   140031376:	call   0x140007820
   14003137b:	add    rbx,0x60
   14003137f:	cmp    rbx,rdi
   140031382:	jne    0x140031370
   140031384:	xor    edx,edx
   140031386:	xor    ecx,ecx
   140031388:	call   0x140030478
   14003138d:	nop
   14003138e:	int3   
   14003138f:	int3   
   140031390:	mov    QWORD PTR [rsp+0x10],rdx
   140031395:	push   rbx
   140031396:	push   rbp
   140031397:	push   rsi
   140031398:	push   rdi
   140031399:	sub    rsp,0x28
   14003139d:	mov    rbp,rdx
   1400313a0:	mov    rbx,QWORD PTR [rbp+0x50]
   1400313a4:	mov    rdi,QWORD PTR [rbp+0x60]
   1400313a8:	cmp    rbx,rdi
   1400313ab:	je     0x1400313c5
   1400313ad:	mov    rsi,QWORD PTR [rbp+0x68]
   1400313b1:	mov    rdx,rbx
   1400313b4:	mov    rcx,rsi
   1400313b7:	call   0x140007950
   1400313bc:	add    rbx,0x20
   1400313c0:	cmp    rbx,rdi
   1400313c3:	jne    0x1400313b1
   1400313c5:	xor    edx,edx
   1400313c7:	xor    ecx,ecx
   1400313c9:	call   0x140030478
   1400313ce:	nop
   1400313cf:	int3   
   1400313d0:	mov    rcx,QWORD PTR [rdx+0x30]
   1400313d7:	jmp    0x140019170
   1400313dc:	lea    rcx,[rdx+0x38]
   1400313e3:	jmp    0x140018960
   1400313e8:	int3   
   1400313e9:	int3   
   1400313ea:	int3   
   1400313eb:	int3   
   1400313ec:	int3   
   1400313ed:	int3   
   1400313ee:	int3   
   1400313ef:	int3   
   1400313f0:	mov    rcx,QWORD PTR [rdx+0x88]
   1400313f7:	jmp    0x140018960
   1400313fc:	lea    rcx,[rdx+0x30]
   140031403:	jmp    0x140017040
   140031408:	lea    rcx,[rdx+0x30]
   14003140f:	jmp    0x140017100
   140031414:	mov    rcx,QWORD PTR [rdx+0x20]
   14003141b:	add    rcx,0x8
   14003141f:	jmp    0x140017f90
   140031424:	int3   
   140031425:	int3   
   140031426:	int3   
   140031427:	int3   
   140031428:	int3   
   140031429:	int3   
   14003142a:	int3   
   14003142b:	int3   
   14003142c:	int3   
   14003142d:	int3   
   14003142e:	int3   
   14003142f:	int3   
   140031430:	lea    rcx,[rdx+0x80]
   140031437:	jmp    0x140017100
   14003143c:	lea    rcx,[rdx+0x50]
   140031443:	jmp    0x140018a80
   140031448:	lea    rcx,[rdx+0x20]
   14003144f:	jmp    0x140018a80
   140031454:	lea    rcx,[rdx+0x20]
   14003145b:	jmp    0x140018a80
   140031460:	lea    rcx,[rdx+0x20]
   140031467:	jmp    0x140018a80
   14003146c:	lea    rcx,[rdx+0x20]
   140031473:	jmp    0x140018a80
   140031478:	int3   
   140031479:	int3   
   14003147a:	int3   
   14003147b:	int3   
   14003147c:	int3   
   14003147d:	int3   
   14003147e:	int3   
   14003147f:	int3   
   140031480:	mov    rcx,QWORD PTR [rdx+0xe8]
   140031487:	jmp    0x140017100
   14003148c:	lea    rcx,[rdx+0x80]
   140031493:	jmp    0x140017100
   140031498:	lea    rcx,[rdx+0x50]
   14003149f:	jmp    0x140018a80
   1400314a4:	lea    rcx,[rdx+0x20]
   1400314ab:	jmp    0x140018a80
   1400314b0:	lea    rcx,[rdx+0x20]
   1400314b7:	jmp    0x140018a80
   1400314bc:	lea    rcx,[rdx+0x20]
   1400314c3:	jmp    0x140018a80
   1400314c8:	lea    rcx,[rdx+0x20]
   1400314cf:	jmp    0x140018a80
   1400314d4:	int3   
   1400314d5:	int3   
   1400314d6:	int3   
   1400314d7:	int3   
   1400314d8:	int3   
   1400314d9:	int3   
   1400314da:	int3   
   1400314db:	int3   
   1400314dc:	int3   
   1400314dd:	int3   
   1400314de:	int3   
   1400314df:	int3   
   1400314e0:	lea    rcx,[rdx+0x80]
   1400314e7:	jmp    0x140017100
   1400314ec:	lea    rcx,[rdx+0x50]
   1400314f3:	jmp    0x140018a80
   1400314f8:	lea    rcx,[rdx+0x20]
   1400314ff:	jmp    0x140018a80
   140031504:	lea    rcx,[rdx+0x20]
   14003150b:	jmp    0x140018a80
   140031510:	lea    rcx,[rdx+0x20]
   140031517:	jmp    0x140018a80
   14003151c:	lea    rcx,[rdx+0x20]
   140031523:	jmp    0x140018a80
   140031528:	int3   
   140031529:	int3   
   14003152a:	int3   
   14003152b:	int3   
   14003152c:	int3   
   14003152d:	int3   
   14003152e:	int3   
   14003152f:	int3   
   140031530:	mov    rcx,QWORD PTR [rdx+0x40]
   140031537:	rex.W jmp QWORD PTR [rip+0x50ba]        # 0x1400365f8
   14003153e:	int3   
   14003153f:	int3   
   140031540:	mov    rcx,QWORD PTR [rdx+0x40]
   140031547:	rex.W jmp QWORD PTR [rip+0x50aa]        # 0x1400365f8
   14003154e:	int3   
   14003154f:	int3   
   140031550:	mov    QWORD PTR [rsp+0x10],rdx
   140031555:	push   rbp
   140031556:	sub    rsp,0x30
   14003155a:	mov    rbp,rdx
   14003155d:	mov    rcx,QWORD PTR [rbp+0x80]
   140031564:	call   0x140020890
   140031569:	nop
   14003156a:	xor    edx,edx
   14003156c:	xor    ecx,ecx
   14003156e:	call   0x140030478
   140031573:	nop
   140031574:	mov    QWORD PTR [rsp+0x10],rdx
   140031579:	push   rbp
   14003157a:	sub    rsp,0x30
   14003157e:	mov    rbp,rdx
   140031581:	lea    rax,[rip+0xffffffffffffffe2]        # 0x14003156a
   140031588:	add    rsp,0x30
   14003158c:	pop    rbp
   14003158d:	ret    
   14003158e:	int3   
   14003158f:	int3   
   140031590:	mov    QWORD PTR [rsp+0x10],rdx
   140031595:	push   rbp
   140031596:	sub    rsp,0x30
   14003159a:	mov    rbp,rdx
   14003159d:	mov    rcx,QWORD PTR [rbp+0x80]
   1400315a4:	call   0x1400208c0
   1400315a9:	nop
   1400315aa:	xor    edx,edx
   1400315ac:	xor    ecx,ecx
   1400315ae:	call   0x140030478
   1400315b3:	nop
   1400315b4:	mov    QWORD PTR [rsp+0x10],rdx
   1400315b9:	push   rbp
   1400315ba:	sub    rsp,0x30
   1400315be:	mov    rbp,rdx
   1400315c1:	lea    rax,[rip+0xffffffffffffffe2]        # 0x1400315aa
   1400315c8:	add    rsp,0x30
   1400315cc:	pop    rbp
   1400315cd:	ret    
   1400315ce:	int3   
   1400315cf:	int3   
   1400315d0:	mov    QWORD PTR [rsp+0x10],rdx
   1400315d5:	push   rbp
   1400315d6:	sub    rsp,0x20
   1400315da:	mov    rbp,rdx
   1400315dd:	mov    rax,QWORD PTR [rbp+0x48]
   1400315e1:	mov    QWORD PTR [rbp+0x48],rax
   1400315e5:	mov    r8d,0x2
   1400315eb:	lea    rdx,[rbp+0x48]
   1400315ef:	mov    rcx,QWORD PTR [rbp+0x40]
   1400315f3:	call   0x140006a10
   1400315f8:	nop
   1400315f9:	xor    edx,edx
   1400315fb:	xor    ecx,ecx
   1400315fd:	call   0x140030478
   140031602:	nop
   140031603:	mov    QWORD PTR [rsp+0x10],rdx
   140031608:	push   rbp
   140031609:	sub    rsp,0x20
   14003160d:	mov    rbp,rdx
   140031610:	lea    rax,[rip+0xffffffffffffffe2]        # 0x1400315f9
   140031617:	add    rsp,0x20
   14003161b:	pop    rbp
   14003161c:	ret    
   14003161d:	int3   
   14003161e:	int3   
   14003161f:	int3   
   140031620:	mov    QWORD PTR [rsp+0x10],rdx
   140031625:	push   rbp
   140031626:	sub    rsp,0x20
   14003162a:	mov    rbp,rdx
   14003162d:	mov    rax,QWORD PTR [rbp+0x48]
   140031631:	mov    QWORD PTR [rbp+0x48],rax
   140031635:	mov    r8d,0x2
   14003163b:	lea    rdx,[rbp+0x48]
   14003163f:	mov    rcx,QWORD PTR [rbp+0x40]
   140031643:	call   0x140006b60
   140031648:	nop
   140031649:	xor    edx,edx
   14003164b:	xor    ecx,ecx
   14003164d:	call   0x140030478
   140031652:	nop
   140031653:	mov    QWORD PTR [rsp+0x10],rdx
   140031658:	push   rbp
   140031659:	sub    rsp,0x20
   14003165d:	mov    rbp,rdx
   140031660:	lea    rax,[rip+0xffffffffffffffe2]        # 0x140031649
   140031667:	add    rsp,0x20
   14003166b:	pop    rbp
   14003166c:	ret    
   14003166d:	int3   
   14003166e:	int3   
   14003166f:	int3   
   140031670:	mov    QWORD PTR [rsp+0x10],rdx
   140031675:	push   rbp
   140031676:	sub    rsp,0x20
   14003167a:	mov    rbp,rdx
   14003167d:	xor    edx,edx
   14003167f:	xor    ecx,ecx
   140031681:	call   0x140030478
   140031686:	nop
   140031687:	mov    QWORD PTR [rsp+0x10],rdx
   14003168c:	push   rbp
   14003168d:	sub    rsp,0x20
   140031691:	mov    rbp,rdx
   140031694:	lea    rax,[rip+0xffffffffffffffe2]        # 0x14003167d
   14003169b:	add    rsp,0x20
   14003169f:	pop    rbp
   1400316a0:	ret    
   1400316a1:	int3   
   1400316a2:	int3   
   1400316a3:	int3   
   1400316a4:	int3   
   1400316a5:	int3   
   1400316a6:	int3   
   1400316a7:	int3   
   1400316a8:	int3   
   1400316a9:	int3   
   1400316aa:	int3   
   1400316ab:	int3   
   1400316ac:	int3   
   1400316ad:	int3   
   1400316ae:	int3   
   1400316af:	int3   
   1400316b0:	mov    QWORD PTR [rsp+0x10],rdx
   1400316b5:	push   rbp
   1400316b6:	sub    rsp,0x20
   1400316ba:	mov    rbp,rdx
   1400316bd:	xor    edx,edx
   1400316bf:	xor    ecx,ecx
   1400316c1:	call   0x140030478
   1400316c6:	nop
   1400316c7:	mov    QWORD PTR [rsp+0x10],rdx
   1400316cc:	push   rbp
   1400316cd:	sub    rsp,0x20
   1400316d1:	mov    rbp,rdx
   1400316d4:	lea    rax,[rip+0xffffffffffffffe2]        # 0x1400316bd
   1400316db:	add    rsp,0x20
   1400316df:	pop    rbp
   1400316e0:	ret    
   1400316e1:	int3   
   1400316e2:	int3   
   1400316e3:	int3   
   1400316e4:	int3   
   1400316e5:	int3   
   1400316e6:	int3   
   1400316e7:	int3   
   1400316e8:	int3   
   1400316e9:	int3   
   1400316ea:	int3   
   1400316eb:	int3   
   1400316ec:	int3   
   1400316ed:	int3   
   1400316ee:	int3   
   1400316ef:	int3   
   1400316f0:	mov    QWORD PTR [rsp+0x10],rdx
   1400316f5:	push   rbp
   1400316f6:	sub    rsp,0x20
   1400316fa:	mov    rbp,rdx
   1400316fd:	mov    rax,QWORD PTR [rbp+0x40]
   140031701:	mov    rdx,QWORD PTR [rax]
   140031704:	mov    rax,QWORD PTR [rdx]
   140031707:	movsxd rcx,DWORD PTR [rax+0x4]
   14003170b:	mov    rcx,QWORD PTR [rcx+rdx*1+0x48]
   140031710:	call   QWORD PTR [rip+0x4ac2]        # 0x1400361d8
   140031716:	nop
   140031717:	xor    edx,edx
   140031719:	xor    ecx,ecx
   14003171b:	call   0x140030478
   140031720:	nop
   140031721:	mov    QWORD PTR [rsp+0x10],rdx
   140031726:	push   rbp
   140031727:	sub    rsp,0x20
   14003172b:	mov    rbp,rdx
   14003172e:	lea    rax,[rip+0xffffffffffffffe2]        # 0x140031717
   140031735:	add    rsp,0x20
   140031739:	pop    rbp
   14003173a:	ret    
   14003173b:	int3   
   14003173c:	int3   
   14003173d:	int3   
   14003173e:	int3   
   14003173f:	int3   
   140031740:	mov    QWORD PTR [rsp+0x10],rdx
   140031745:	push   rbp
   140031746:	sub    rsp,0x20
   14003174a:	mov    rbp,rdx
   14003174d:	mov    rax,QWORD PTR [rbp+0x40]
   140031751:	mov    rcx,QWORD PTR [rax]
   140031754:	add    rcx,0x18
   140031758:	call   QWORD PTR [rip+0x4a7a]        # 0x1400361d8
   14003175e:	nop
   14003175f:	xor    edx,edx
   140031761:	xor    ecx,ecx
   140031763:	call   0x140030478
   140031768:	nop
   140031769:	mov    QWORD PTR [rsp+0x10],rdx
   14003176e:	push   rbp
   14003176f:	sub    rsp,0x20
   140031773:	mov    rbp,rdx
   140031776:	lea    rax,[rip+0xffffffffffffffe2]        # 0x14003175f
   14003177d:	add    rsp,0x20
   140031781:	pop    rbp
   140031782:	ret    
   140031783:	int3   
   140031784:	int3   
   140031785:	int3   
   140031786:	int3   
   140031787:	int3   
   140031788:	int3   
   140031789:	int3   
   14003178a:	int3   
   14003178b:	int3   
   14003178c:	int3   
   14003178d:	int3   
   14003178e:	int3   
   14003178f:	int3   
   140031790:	mov    QWORD PTR [rsp+0x10],rdx
   140031795:	push   rbp
   140031796:	sub    rsp,0x20
   14003179a:	mov    rbp,rdx
   14003179d:	xor    edx,edx
   14003179f:	xor    ecx,ecx
   1400317a1:	call   0x140030478
   1400317a6:	nop
   1400317a7:	mov    QWORD PTR [rsp+0x10],rdx
   1400317ac:	push   rbp
   1400317ad:	sub    rsp,0x20
   1400317b1:	mov    rbp,rdx
   1400317b4:	lea    rax,[rip+0xffffffffffffffe2]        # 0x14003179d
   1400317bb:	add    rsp,0x20
   1400317bf:	pop    rbp
   1400317c0:	ret    
   1400317c1:	int3   
   1400317c2:	int3   
   1400317c3:	int3   
   1400317c4:	int3   
   1400317c5:	int3   
   1400317c6:	int3   
   1400317c7:	int3   
   1400317c8:	int3   
   1400317c9:	int3   
   1400317ca:	int3   
   1400317cb:	int3   
   1400317cc:	int3   
   1400317cd:	int3   
   1400317ce:	int3   
   1400317cf:	int3   
   1400317d0:	rex push rbp
   1400317d2:	sub    rsp,0x20
   1400317d6:	mov    rbp,rdx
   1400317d9:	mov    rdx,QWORD PTR [rbp+0x40]
   1400317dd:	mov    rcx,QWORD PTR [rbp+0x50]
   1400317e1:	call   0x1400193a0
   1400317e6:	add    rsp,0x20
   1400317ea:	pop    rbp
   1400317eb:	ret    
   1400317ec:	mov    rcx,QWORD PTR [rdx+0x50]
   1400317f3:	jmp    0x140017100
   1400317f8:	int3   
   1400317f9:	int3   
   1400317fa:	int3   
   1400317fb:	int3   
   1400317fc:	int3   
   1400317fd:	int3   
   1400317fe:	int3   
   1400317ff:	int3   
   140031800:	rex push rbp
   140031802:	sub    rsp,0x20
   140031806:	mov    rbp,rdx
   140031809:	mov    rdx,QWORD PTR [rbp+0x48]
   14003180d:	mov    rcx,QWORD PTR [rbp+0x58]
   140031811:	call   0x1400193a0
   140031816:	add    rsp,0x20
   14003181a:	pop    rbp
   14003181b:	ret    
   14003181c:	int3   
   14003181d:	int3   
   14003181e:	int3   
   14003181f:	int3   
   140031820:	rex push rbp
   140031822:	sub    rsp,0x20
   140031826:	mov    rbp,rdx
   140031829:	mov    rdx,QWORD PTR [rbp+0x48]
   14003182d:	mov    rcx,QWORD PTR [rbp+0x58]
   140031831:	call   0x1400193a0
   140031836:	add    rsp,0x20
   14003183a:	pop    rbp
   14003183b:	ret    
   14003183c:	int3   
   14003183d:	int3   
   14003183e:	int3   
   14003183f:	int3   
   140031840:	rex push rbp
   140031842:	sub    rsp,0x20
   140031846:	mov    rbp,rdx
   140031849:	mov    rdx,QWORD PTR [rbp+0x48]
   14003184d:	mov    rcx,QWORD PTR [rbp+0x58]
   140031851:	call   0x1400193a0
   140031856:	add    rsp,0x20
   14003185a:	pop    rbp
   14003185b:	ret    
   14003185c:	int3   
   14003185d:	int3   
   14003185e:	int3   
   14003185f:	int3   
   140031860:	rex push rbp
   140031862:	sub    rsp,0x20
   140031866:	mov    rbp,rdx
   140031869:	mov    rdx,QWORD PTR [rbp+0x48]
   14003186d:	mov    rcx,QWORD PTR [rbp+0x58]
   140031871:	call   0x1400193a0
   140031876:	add    rsp,0x20
   14003187a:	pop    rbp
   14003187b:	ret    
   14003187c:	int3   
   14003187d:	int3   
   14003187e:	int3   
   14003187f:	int3   
   140031880:	rex push rbp
   140031882:	sub    rsp,0x20
   140031886:	mov    rbp,rdx
   140031889:	mov    rdx,QWORD PTR [rbp+0x48]
   14003188d:	mov    rcx,QWORD PTR [rbp+0x58]
   140031891:	call   0x1400193a0
   140031896:	add    rsp,0x20
   14003189a:	pop    rbp
   14003189b:	ret    
   14003189c:	int3   
   14003189d:	int3   
   14003189e:	int3   
   14003189f:	int3   
   1400318a0:	rex push rbp
   1400318a2:	sub    rsp,0x20
   1400318a6:	mov    rbp,rdx
   1400318a9:	mov    rdx,QWORD PTR [rbp+0x48]
   1400318ad:	mov    rcx,QWORD PTR [rbp+0x58]
   1400318b1:	call   0x1400193a0
   1400318b6:	add    rsp,0x20
   1400318ba:	pop    rbp
   1400318bb:	ret    
   1400318bc:	int3   
   1400318bd:	int3   
   1400318be:	int3   
   1400318bf:	int3   
   1400318c0:	rex push rbp
   1400318c2:	sub    rsp,0x20
   1400318c6:	mov    rbp,rdx
   1400318c9:	mov    rdx,QWORD PTR [rbp+0x48]
   1400318cd:	mov    rcx,QWORD PTR [rbp+0x58]
   1400318d1:	call   0x1400193a0
   1400318d6:	add    rsp,0x20
   1400318da:	pop    rbp
   1400318db:	ret    
   1400318dc:	int3   
   1400318dd:	int3   
   1400318de:	int3   
   1400318df:	int3   
   1400318e0:	rex push rbp
   1400318e2:	sub    rsp,0x20
   1400318e6:	mov    rbp,rdx
   1400318e9:	mov    rdx,QWORD PTR [rbp+0x48]
   1400318ed:	mov    rcx,QWORD PTR [rbp+0x58]
   1400318f1:	call   0x1400193a0
   1400318f6:	add    rsp,0x20
   1400318fa:	pop    rbp
   1400318fb:	ret    
   1400318fc:	int3   
   1400318fd:	int3   
   1400318fe:	int3   
   1400318ff:	int3   
   140031900:	rex push rbp
   140031902:	sub    rsp,0x20
   140031906:	mov    rbp,rdx
   140031909:	mov    rdx,QWORD PTR [rbp+0x48]
   14003190d:	mov    rcx,QWORD PTR [rbp+0x58]
   140031911:	call   0x1400193a0
   140031916:	add    rsp,0x20
   14003191a:	pop    rbp
   14003191b:	ret    
   14003191c:	int3   
   14003191d:	int3   
   14003191e:	int3   
   14003191f:	int3   
   140031920:	rex push rbp
   140031922:	sub    rsp,0x20
   140031926:	mov    rbp,rdx
   140031929:	mov    rdx,QWORD PTR [rbp+0x48]
   14003192d:	mov    rcx,QWORD PTR [rbp+0x58]
   140031931:	call   0x1400193a0
   140031936:	add    rsp,0x20
   14003193a:	pop    rbp
   14003193b:	ret    
   14003193c:	int3   
   14003193d:	int3   
   14003193e:	int3   
   14003193f:	int3   
   140031940:	rex push rbp
   140031942:	sub    rsp,0x20
   140031946:	mov    rbp,rdx
   140031949:	mov    rdx,QWORD PTR [rbp+0x48]
   14003194d:	mov    rcx,QWORD PTR [rbp+0x58]
   140031951:	call   0x1400193a0
   140031956:	add    rsp,0x20
   14003195a:	pop    rbp
   14003195b:	ret    
   14003195c:	int3   
   14003195d:	int3   
   14003195e:	int3   
   14003195f:	int3   
   140031960:	rex push rbp
   140031962:	sub    rsp,0x20
   140031966:	mov    rbp,rdx
   140031969:	mov    rdx,QWORD PTR [rbp+0x48]
   14003196d:	mov    rcx,QWORD PTR [rbp+0x58]
   140031971:	call   0x1400193a0
   140031976:	add    rsp,0x20
   14003197a:	pop    rbp
   14003197b:	ret    
   14003197c:	int3   
   14003197d:	int3   
   14003197e:	int3   
   14003197f:	int3   
   140031980:	lea    rcx,[rdx+0x28]
   140031987:	jmp    0x140016e70
   14003198c:	int3   
   14003198d:	int3   
   14003198e:	int3   
   14003198f:	int3   
   140031990:	mov    rcx,QWORD PTR [rdx+0x40]
   140031997:	jmp    0x140017100
   14003199c:	int3   
   14003199d:	int3   
   14003199e:	int3   
   14003199f:	int3   
   1400319a0:	lea    rcx,[rdx+0x20]
   1400319a7:	jmp    0x140017100
   1400319ac:	lea    rcx,[rdx+0x60]
   1400319b3:	jmp    0x140017100
   1400319b8:	lea    rcx,[rdx+0x40]
   1400319bf:	jmp    0x140017100
   1400319c4:	lea    rcx,[rdx+0x40]
   1400319cb:	jmp    0x140017100
   1400319d0:	lea    rcx,[rdx+0x90]
   1400319d7:	jmp    0x140017100
   1400319dc:	lea    rcx,[rdx+0xd0]
   1400319e3:	jmp    0x140017100
   1400319e8:	lea    rcx,[rdx+0x110]
   1400319ef:	jmp    0x140017100
   1400319f4:	lea    rcx,[rdx+0xb0]
   1400319fb:	jmp    0x140017100
   140031a00:	lea    rcx,[rdx+0xf0]
   140031a07:	jmp    0x140017100
   140031a0c:	lea    rcx,[rdx+0x130]
   140031a13:	jmp    0x140017100
   140031a18:	int3   
   140031a19:	int3   
   140031a1a:	int3   
   140031a1b:	int3   
   140031a1c:	int3   
   140031a1d:	int3   
   140031a1e:	int3   
   140031a1f:	int3   
   140031a20:	mov    QWORD PTR [rsp+0x10],rdx
   140031a25:	push   rbp
   140031a26:	sub    rsp,0x30
   140031a2a:	mov    rbp,rdx
   140031a2d:	mov    rcx,QWORD PTR [rbp+0x78]
   140031a31:	call   0x140006e90
   140031a36:	nop
   140031a37:	xor    edx,edx
   140031a39:	xor    ecx,ecx
   140031a3b:	call   0x140030478
   140031a40:	nop
   140031a41:	mov    QWORD PTR [rsp+0x10],rdx
   140031a46:	push   rbp
   140031a47:	sub    rsp,0x30
   140031a4b:	mov    rbp,rdx
   140031a4e:	lea    rax,[rip+0xffffffffffffffe2]        # 0x140031a37
   140031a55:	add    rsp,0x30
   140031a59:	pop    rbp
   140031a5a:	ret    
   140031a5b:	int3   
   140031a5c:	int3   
   140031a5d:	int3   
   140031a5e:	int3   
   140031a5f:	int3   
   140031a60:	mov    QWORD PTR [rsp+0x10],rdx
   140031a65:	push   rbp
   140031a66:	sub    rsp,0x20
   140031a6a:	mov    rbp,rdx
   140031a6d:	mov    rcx,QWORD PTR [rbp+0x70]
   140031a71:	call   0x140006e60
   140031a76:	nop
   140031a77:	xor    edx,edx
   140031a79:	xor    ecx,ecx
   140031a7b:	call   0x140030478
   140031a80:	nop
   140031a81:	mov    QWORD PTR [rsp+0x10],rdx
   140031a86:	push   rbp
   140031a87:	sub    rsp,0x20
   140031a8b:	mov    rbp,rdx
   140031a8e:	lea    rax,[rip+0xffffffffffffffe2]        # 0x140031a77
   140031a95:	add    rsp,0x20
   140031a99:	pop    rbp
   140031a9a:	ret    
   140031a9b:	int3   
   140031a9c:	int3   
   140031a9d:	int3   
   140031a9e:	int3   
   140031a9f:	int3   
   140031aa0:	mov    QWORD PTR [rsp+0x10],rdx
   140031aa5:	push   rbp
   140031aa6:	sub    rsp,0x20
   140031aaa:	mov    rbp,rdx
   140031aad:	mov    rcx,QWORD PTR [rbp+0x58]
   140031ab1:	call   0x14001a3f0
   140031ab6:	nop
   140031ab7:	xor    edx,edx
   140031ab9:	xor    ecx,ecx
   140031abb:	call   0x140030478
   140031ac0:	nop
   140031ac1:	mov    QWORD PTR [rsp+0x10],rdx
   140031ac6:	push   rbp
   140031ac7:	sub    rsp,0x20
   140031acb:	mov    rbp,rdx
   140031ace:	lea    rax,[rip+0xffffffffffffffe2]        # 0x140031ab7
   140031ad5:	add    rsp,0x20
   140031ad9:	pop    rbp
   140031ada:	ret    
   140031adb:	int3   
   140031adc:	int3   
   140031add:	int3   
   140031ade:	int3   
   140031adf:	int3   
   140031ae0:	mov    QWORD PTR [rsp+0x10],rdx
   140031ae5:	push   rbp
   140031ae6:	sub    rsp,0x20
   140031aea:	mov    rbp,rdx
   140031aed:	lea    rcx,[rbp+0x70]
   140031af1:	call   0x14001a4a0
   140031af6:	nop
   140031af7:	xor    edx,edx
   140031af9:	xor    ecx,ecx
   140031afb:	call   0x140030478
   140031b00:	nop
   140031b01:	mov    QWORD PTR [rsp+0x10],rdx
   140031b06:	push   rbp
   140031b07:	sub    rsp,0x20
   140031b0b:	mov    rbp,rdx
   140031b0e:	lea    rax,[rip+0xffffffffffffffe2]        # 0x140031af7
   140031b15:	add    rsp,0x20
   140031b19:	pop    rbp
   140031b1a:	ret    
   140031b1b:	int3   
   140031b1c:	int3   
   140031b1d:	int3   
   140031b1e:	int3   
   140031b1f:	int3   
   140031b20:	mov    QWORD PTR [rsp+0x10],rdx
   140031b25:	push   rbp
   140031b26:	sub    rsp,0x20
   140031b2a:	mov    rbp,rdx
   140031b2d:	mov    rax,QWORD PTR [rbp+0x78]
   140031b31:	mov    DWORD PTR [rax],0x0
   140031b37:	xor    edx,edx
   140031b39:	xor    ecx,ecx
   140031b3b:	call   0x140030478
   140031b40:	nop
   140031b41:	mov    QWORD PTR [rsp+0x10],rdx
   140031b46:	push   rbp
   140031b47:	sub    rsp,0x20
   140031b4b:	mov    rbp,rdx
   140031b4e:	lea    rax,[rip+0xffffffffffffffe2]        # 0x140031b37
   140031b55:	add    rsp,0x20
   140031b59:	pop    rbp
   140031b5a:	ret    
   140031b5b:	int3   
   140031b5c:	int3   
   140031b5d:	int3   
   140031b5e:	int3   
   140031b5f:	int3   
   140031b60:	mov    QWORD PTR [rsp+0x10],rdx
   140031b65:	push   rbp
   140031b66:	sub    rsp,0x20
   140031b6a:	mov    rbp,rdx
   140031b6d:	lea    rcx,[rbp+0x70]
   140031b71:	call   0x14001a500
   140031b76:	nop
   140031b77:	xor    edx,edx
   140031b79:	xor    ecx,ecx
   140031b7b:	call   0x140030478
   140031b80:	nop
   140031b81:	mov    QWORD PTR [rsp+0x10],rdx
   140031b86:	push   rbp
   140031b87:	sub    rsp,0x20
   140031b8b:	mov    rbp,rdx
   140031b8e:	lea    rax,[rip+0xffffffffffffffe2]        # 0x140031b77
   140031b95:	add    rsp,0x20
   140031b99:	pop    rbp
   140031b9a:	ret    
   140031b9b:	int3   
   140031b9c:	int3   
   140031b9d:	int3   
   140031b9e:	int3   
   140031b9f:	int3   
   140031ba0:	mov    QWORD PTR [rsp+0x10],rdx
   140031ba5:	push   rbp
   140031ba6:	sub    rsp,0x20
   140031baa:	mov    rbp,rdx
   140031bad:	mov    rax,QWORD PTR [rbp+0x78]
   140031bb1:	mov    DWORD PTR [rax],0x0
   140031bb7:	xor    edx,edx
   140031bb9:	xor    ecx,ecx
   140031bbb:	call   0x140030478
   140031bc0:	nop
   140031bc1:	mov    QWORD PTR [rsp+0x10],rdx
   140031bc6:	push   rbp
   140031bc7:	sub    rsp,0x20
   140031bcb:	mov    rbp,rdx
   140031bce:	lea    rax,[rip+0xffffffffffffffe2]        # 0x140031bb7
   140031bd5:	add    rsp,0x20
   140031bd9:	pop    rbp
   140031bda:	ret    
   140031bdb:	int3   
   140031bdc:	int3   
   140031bdd:	int3   
   140031bde:	int3   
   140031bdf:	int3   
   140031be0:	mov    QWORD PTR [rsp+0x10],rdx
   140031be5:	push   rbp
   140031be6:	sub    rsp,0x20
   140031bea:	mov    rbp,rdx
   140031bed:	mov    rax,QWORD PTR [rbp+0x70]
   140031bf1:	cmp    BYTE PTR [rax+0x1],0x0
   140031bf5:	je     0x140031bfb
   140031bf7:	mov    BYTE PTR [rax+0x1],0x0
   140031bfb:	xor    edx,edx
   140031bfd:	xor    ecx,ecx
   140031bff:	call   0x140030478
   140031c04:	nop
   140031c05:	mov    QWORD PTR [rsp+0x10],rdx
   140031c0a:	push   rbp
   140031c0b:	sub    rsp,0x20
   140031c0f:	mov    rbp,rdx
   140031c12:	lea    rax,[rip+0xffffffffffffffe2]        # 0x140031bfb
   140031c19:	add    rsp,0x20
   140031c1d:	pop    rbp
   140031c1e:	ret    
   140031c1f:	int3   
   140031c20:	mov    QWORD PTR [rsp+0x10],rdx
   140031c25:	push   rbp
   140031c26:	sub    rsp,0x20
   140031c2a:	mov    rbp,rdx
   140031c2d:	mov    rax,QWORD PTR [rbp+0x78]
   140031c31:	mov    DWORD PTR [rax],0x0
   140031c37:	xor    edx,edx
   140031c39:	xor    ecx,ecx
   140031c3b:	call   0x140030478
   140031c40:	nop
   140031c41:	mov    QWORD PTR [rsp+0x10],rdx
   140031c46:	push   rbp
   140031c47:	sub    rsp,0x20
   140031c4b:	mov    rbp,rdx
   140031c4e:	lea    rax,[rip+0xffffffffffffffe2]        # 0x140031c37
   140031c55:	add    rsp,0x20
   140031c59:	pop    rbp
   140031c5a:	ret    
   140031c5b:	int3   
   140031c5c:	int3   
   140031c5d:	int3   
   140031c5e:	int3   
   140031c5f:	int3   
   140031c60:	mov    QWORD PTR [rsp+0x10],rdx
   140031c65:	push   rbp
   140031c66:	sub    rsp,0x20
   140031c6a:	mov    rbp,rdx
   140031c6d:	mov    rax,QWORD PTR [rbp+0x70]
   140031c71:	cmp    BYTE PTR [rax+0x8],0x0
   140031c75:	je     0x140031c7b
   140031c77:	mov    BYTE PTR [rax+0x8],0x0
   140031c7b:	xor    edx,edx
   140031c7d:	xor    ecx,ecx
   140031c7f:	call   0x140030478
   140031c84:	nop
   140031c85:	mov    QWORD PTR [rsp+0x10],rdx
   140031c8a:	push   rbp
   140031c8b:	sub    rsp,0x20
   140031c8f:	mov    rbp,rdx
   140031c92:	lea    rax,[rip+0xffffffffffffffe2]        # 0x140031c7b
   140031c99:	add    rsp,0x20
   140031c9d:	pop    rbp
   140031c9e:	ret    
   140031c9f:	int3   
   140031ca0:	mov    QWORD PTR [rsp+0x10],rdx
   140031ca5:	push   rbp
   140031ca6:	sub    rsp,0x20
   140031caa:	mov    rbp,rdx
   140031cad:	mov    rax,QWORD PTR [rbp+0x78]
   140031cb1:	mov    DWORD PTR [rax],0x0
   140031cb7:	xor    edx,edx
   140031cb9:	xor    ecx,ecx
   140031cbb:	call   0x140030478
   140031cc0:	nop
   140031cc1:	mov    QWORD PTR [rsp+0x10],rdx
   140031cc6:	push   rbp
   140031cc7:	sub    rsp,0x20
   140031ccb:	mov    rbp,rdx
   140031cce:	lea    rax,[rip+0xffffffffffffffe2]        # 0x140031cb7
   140031cd5:	add    rsp,0x20
   140031cd9:	pop    rbp
   140031cda:	ret    
   140031cdb:	int3   
   140031cdc:	int3   
   140031cdd:	int3   
   140031cde:	int3   
   140031cdf:	int3   
   140031ce0:	mov    QWORD PTR [rsp+0x10],rdx
   140031ce5:	push   rbp
   140031ce6:	sub    rsp,0x20
   140031cea:	mov    rbp,rdx
   140031ced:	mov    rdx,QWORD PTR [rbp+0x58]
   140031cf1:	mov    rdx,QWORD PTR [rdx]
   140031cf4:	mov    QWORD PTR [rbp+0x58],rdx
   140031cf8:	mov    r9d,DWORD PTR [rbp+0x68]
   140031cfc:	mov    r8,QWORD PTR [rbp+0x60]
   140031d00:	lea    rcx,[rbp+0x20]
   140031d04:	call   0x140008e80
   140031d09:	nop
   140031d0a:	xor    edx,edx
   140031d0c:	xor    ecx,ecx
   140031d0e:	call   0x140030478
   140031d13:	nop
   140031d14:	mov    QWORD PTR [rsp+0x10],rdx
   140031d19:	push   rbp
   140031d1a:	sub    rsp,0x20
   140031d1e:	mov    rbp,rdx
   140031d21:	lea    rax,[rip+0xffffffffffffffe2]        # 0x140031d0a
   140031d28:	add    rsp,0x20
   140031d2c:	pop    rbp
   140031d2d:	ret    
   140031d2e:	int3   
   140031d2f:	int3   
   140031d30:	mov    QWORD PTR [rsp+0x10],rdx
   140031d35:	push   rbp
   140031d36:	sub    rsp,0x20
   140031d3a:	mov    rbp,rdx
   140031d3d:	mov    rdx,QWORD PTR [rbp+0x58]
   140031d41:	mov    rdx,QWORD PTR [rdx+0x8]
   140031d45:	mov    QWORD PTR [rbp+0x58],rdx
   140031d49:	mov    r9d,DWORD PTR [rbp+0x68]
   140031d4d:	mov    r8,QWORD PTR [rbp+0x60]
   140031d51:	lea    rcx,[rbp+0x20]
   140031d55:	call   0x140008f30
   140031d5a:	nop
   140031d5b:	xor    edx,edx
   140031d5d:	xor    ecx,ecx
   140031d5f:	call   0x140030478
   140031d64:	nop
   140031d65:	mov    QWORD PTR [rsp+0x10],rdx
   140031d6a:	push   rbp
   140031d6b:	sub    rsp,0x20
   140031d6f:	mov    rbp,rdx
   140031d72:	lea    rax,[rip+0xffffffffffffffe2]        # 0x140031d5b
   140031d79:	add    rsp,0x20
   140031d7d:	pop    rbp
   140031d7e:	ret    
   140031d7f:	int3   
   140031d80:	lea    rcx,[rdx+0x28]
   140031d87:	jmp    0x140019160
   140031d8c:	int3   
   140031d8d:	int3   
   140031d8e:	int3   
   140031d8f:	int3   
   140031d90:	lea    rcx,[rdx+0x28]
   140031d97:	jmp    0x140018320
   140031d9c:	lea    rcx,[rdx+0x50]
   140031da3:	jmp    0x140017100
   140031da8:	lea    rcx,[rdx+0x98]
   140031daf:	jmp    0x140017100
   140031db4:	lea    rcx,[rdx+0x28]
   140031dbb:	jmp    0x140017100
   140031dc0:	lea    rcx,[rdx+0x70]
   140031dc7:	jmp    0x140019260
   140031dcc:	lea    rcx,[rdx+0x70]
   140031dd3:	jmp    0x1400191e0
   140031dd8:	lea    rcx,[rdx+0xb8]
   140031ddf:	jmp    0x140017d40
   140031de4:	int3   
   140031de5:	int3   
   140031de6:	int3   
   140031de7:	int3   
   140031de8:	int3   
   140031de9:	int3   
   140031dea:	int3   
   140031deb:	int3   
   140031dec:	int3   
   140031ded:	int3   
   140031dee:	int3   
   140031def:	int3   
   140031df0:	lea    rcx,[rdx+0x40]
   140031df7:	jmp    0x140018f10
   140031dfc:	int3   
   140031dfd:	int3   
   140031dfe:	int3   
   140031dff:	int3   
   140031e00:	rex push rbp
   140031e02:	sub    rsp,0x20
   140031e06:	mov    rbp,rdx
   140031e09:	mov    eax,DWORD PTR [rbp+0x20]
   140031e0c:	and    eax,0x1
   140031e0f:	test   eax,eax
   140031e11:	je     0x140031e20
   140031e13:	and    DWORD PTR [rbp+0x20],0xfffffffe
   140031e17:	mov    rcx,QWORD PTR [rbp+0x60]
   140031e1b:	call   0x140018d60
   140031e20:	add    rsp,0x20
   140031e24:	pop    rbp
   140031e25:	ret    
   140031e26:	lea    rcx,[rdx+0x30]
   140031e2d:	jmp    0x140017100
   140031e32:	int3   
   140031e33:	int3   
   140031e34:	int3   
   140031e35:	int3   
   140031e36:	int3   
   140031e37:	int3   
   140031e38:	int3   
   140031e39:	int3   
   140031e3a:	int3   
   140031e3b:	int3   
   140031e3c:	int3   
   140031e3d:	int3   
   140031e3e:	int3   
   140031e3f:	int3   
   140031e40:	lea    rcx,[rdx+0x38]
   140031e47:	jmp    0x140017100
   140031e4c:	lea    rcx,[rdx+0x28]
   140031e53:	jmp    0x140018610
   140031e58:	int3   
   140031e59:	int3   
   140031e5a:	int3   
   140031e5b:	int3   
   140031e5c:	int3   
   140031e5d:	int3   
   140031e5e:	int3   
   140031e5f:	int3   
   140031e60:	mov    rcx,QWORD PTR [rdx+0x128]
   140031e67:	jmp    0x140017f10
   140031e6c:	mov    rcx,QWORD PTR [rdx+0x118]
   140031e73:	jmp    0x140017f10
   140031e78:	lea    rcx,[rdx+0x58]
   140031e7f:	jmp    0x140016e80
   140031e84:	rex push rbp
   140031e86:	sub    rsp,0x20
   140031e8a:	mov    rbp,rdx
   140031e8d:	mov    eax,DWORD PTR [rbp+0x20]
   140031e90:	and    eax,0x1
   140031e93:	test   eax,eax
   140031e95:	je     0x140031ea7
   140031e97:	and    DWORD PTR [rbp+0x20],0xfffffffe
   140031e9b:	mov    rcx,QWORD PTR [rbp+0x100]
   140031ea2:	call   0x140017000
   140031ea7:	add    rsp,0x20
   140031eab:	pop    rbp
   140031eac:	ret    
   140031ead:	int3   
   140031eae:	int3   
   140031eaf:	int3   
   140031eb0:	lea    rcx,[rdx+0x20]
   140031eb7:	jmp    0x140017100
   140031ebc:	lea    rcx,[rdx+0x40]
   140031ec3:	jmp    0x140017100
   140031ec8:	lea    rcx,[rdx+0x40]
   140031ecf:	add    rcx,0x20
   140031ed3:	jmp    0x140017100
   140031ed8:	lea    rcx,[rdx+0x40]
   140031edf:	jmp    0x1400173c0
   140031ee4:	mov    rcx,QWORD PTR [rdx+0x268]
   140031eeb:	jmp    0x140017100
   140031ef0:	lea    rcx,[rdx+0x90]
   140031ef7:	jmp    0x140018bc0
   140031efc:	lea    rcx,[rdx+0xf0]
   140031f03:	jmp    0x140018b40
   140031f08:	int3   
   140031f09:	int3   
   140031f0a:	int3   
   140031f0b:	int3   
   140031f0c:	int3   
   140031f0d:	int3   
   140031f0e:	int3   
   140031f0f:	int3   
   140031f10:	lea    rcx,[rdx+0x70]
   140031f17:	jmp    0x140017100
   140031f1c:	lea    rcx,[rdx+0x50]
   140031f23:	jmp    0x140017100
   140031f28:	lea    rcx,[rdx+0x30]
   140031f2f:	jmp    0x140017100
   140031f34:	int3   
   140031f35:	int3   
   140031f36:	int3   
   140031f37:	int3   
   140031f38:	int3   
   140031f39:	int3   
   140031f3a:	int3   
   140031f3b:	int3   
   140031f3c:	int3   
   140031f3d:	int3   
   140031f3e:	int3   
   140031f3f:	int3   
   140031f40:	lea    rcx,[rdx+0x30]
   140031f47:	jmp    0x1400191a0
   140031f4c:	mov    rcx,QWORD PTR [rdx+0x70]
   140031f53:	jmp    0x140030282
   140031f58:	lea    rcx,[rdx+0x20]
   140031f5f:	jmp    0x140016df0
   140031f64:	int3   
   140031f65:	int3   
   140031f66:	int3   
   140031f67:	int3   
   140031f68:	int3   
   140031f69:	int3   
   140031f6a:	int3   
   140031f6b:	int3   
   140031f6c:	int3   
   140031f6d:	int3   
   140031f6e:	int3   
   140031f6f:	int3   
   140031f70:	lea    rcx,[rdx+0x30]
   140031f77:	jmp    0x1400191a0
   140031f7c:	mov    rcx,QWORD PTR [rdx+0x70]
   140031f83:	jmp    0x140030282
   140031f88:	lea    rcx,[rdx+0x20]
   140031f8f:	jmp    0x140016e10
   140031f94:	int3   
   140031f95:	int3   
   140031f96:	int3   
   140031f97:	int3   
   140031f98:	int3   
   140031f99:	int3   
   140031f9a:	int3   
   140031f9b:	int3   
   140031f9c:	int3   
   140031f9d:	int3   
   140031f9e:	int3   
   140031f9f:	int3   
   140031fa0:	lea    rcx,[rdx+0x30]
   140031fa7:	jmp    0x1400191a0
   140031fac:	mov    rcx,QWORD PTR [rdx+0x70]
   140031fb3:	jmp    0x140030282
   140031fb8:	lea    rcx,[rdx+0x20]
   140031fbf:	jmp    0x140016e30
   140031fc4:	int3   
   140031fc5:	int3   
   140031fc6:	int3   
   140031fc7:	int3   
   140031fc8:	int3   
   140031fc9:	int3   
   140031fca:	int3   
   140031fcb:	int3   
   140031fcc:	int3   
   140031fcd:	int3   
   140031fce:	int3   
   140031fcf:	int3   
   140031fd0:	mov    rcx,QWORD PTR [rdx+0x30]
   140031fd7:	jmp    0x140019170
   140031fdc:	lea    rcx,[rdx+0x38]
   140031fe3:	jmp    0x140018990
   140031fe8:	int3   
   140031fe9:	int3   
   140031fea:	int3   
   140031feb:	int3   
   140031fec:	int3   
   140031fed:	int3   
   140031fee:	int3   
   140031fef:	int3   
   140031ff0:	mov    rcx,QWORD PTR [rdx+0x98]
   140031ff7:	jmp    0x140018990
   140031ffc:	lea    rcx,[rdx+0x30]
   140032003:	jmp    0x140018300
   140032008:	lea    rcx,[rdx+0x40]
   14003200f:	jmp    0x140017040
   140032014:	lea    rcx,[rdx+0x40]
   14003201b:	jmp    0x140017100
   140032020:	mov    rcx,QWORD PTR [rdx+0x20]
   140032027:	add    rcx,0x8
   14003202b:	jmp    0x140017f90
   140032030:	mov    rcx,QWORD PTR [rdx+0x30]
   140032037:	jmp    0x140019170
   14003203c:	lea    rcx,[rdx+0x38]
   140032043:	jmp    0x1400189c0
   140032048:	int3   
   140032049:	int3   
   14003204a:	int3   
   14003204b:	int3   
   14003204c:	int3   
   14003204d:	int3   
   14003204e:	int3   
   14003204f:	int3   
   140032050:	mov    rcx,QWORD PTR [rdx+0x98]
   140032057:	jmp    0x1400189c0
   14003205c:	lea    rcx,[rdx+0x30]
   140032063:	jmp    0x140018300
   140032068:	lea    rcx,[rdx+0x40]
   14003206f:	jmp    0x140017040
   140032074:	lea    rcx,[rdx+0x40]
   14003207b:	jmp    0x140017100
   140032080:	mov    rcx,QWORD PTR [rdx+0x20]
   140032087:	add    rcx,0x8
   14003208b:	jmp    0x140017f90
   140032090:	mov    rcx,QWORD PTR [rdx+0x30]
   140032097:	jmp    0x140019170
   14003209c:	lea    rcx,[rdx+0x38]
   1400320a3:	jmp    0x1400189f0
   1400320a8:	int3   
   1400320a9:	int3   
   1400320aa:	int3   
   1400320ab:	int3   
   1400320ac:	int3   
   1400320ad:	int3   
   1400320ae:	int3   
   1400320af:	int3   
   1400320b0:	mov    rcx,QWORD PTR [rdx+0x98]
   1400320b7:	jmp    0x1400189f0
   1400320bc:	lea    rcx,[rdx+0x30]
   1400320c3:	jmp    0x140018300
   1400320c8:	lea    rcx,[rdx+0x40]
   1400320cf:	jmp    0x140017040
   1400320d4:	lea    rcx,[rdx+0x40]
   1400320db:	jmp    0x140017100
   1400320e0:	mov    rcx,QWORD PTR [rdx+0x20]
   1400320e7:	add    rcx,0x8
   1400320eb:	jmp    0x140017f90
   1400320f0:	mov    rcx,QWORD PTR [rdx+0x30]
   1400320f7:	jmp    0x140019170
   1400320fc:	lea    rcx,[rdx+0x38]
   140032103:	jmp    0x140018a20
   140032108:	int3   
   140032109:	int3   
   14003210a:	int3   
   14003210b:	int3   
   14003210c:	int3   
   14003210d:	int3   
   14003210e:	int3   
   14003210f:	int3   
   140032110:	mov    rcx,QWORD PTR [rdx+0x98]
   140032117:	jmp    0x140018a20
   14003211c:	lea    rcx,[rdx+0x30]
   140032123:	jmp    0x140018300
   140032128:	lea    rcx,[rdx+0x40]
   14003212f:	jmp    0x140017040
   140032134:	lea    rcx,[rdx+0x40]
   14003213b:	jmp    0x140017100
   140032140:	mov    rcx,QWORD PTR [rdx+0x20]
   140032147:	add    rcx,0x8
   14003214b:	jmp    0x140017f90
   140032150:	lea    rcx,[rdx+0x30]
   140032157:	jmp    0x140018300
   14003215c:	lea    rcx,[rdx+0x40]
   140032163:	jmp    0x140017040
   140032168:	lea    rcx,[rdx+0x40]
   14003216f:	jmp    0x140017100
   140032174:	mov    rcx,QWORD PTR [rdx+0x28]
   14003217b:	add    rcx,0x8
   14003217f:	jmp    0x140017f90
   140032184:	int3   
   140032185:	int3   
   140032186:	int3   
   140032187:	int3   
   140032188:	int3   
   140032189:	int3   
   14003218a:	int3   
   14003218b:	int3   
   14003218c:	int3   
   14003218d:	int3   
   14003218e:	int3   
   14003218f:	int3   
   140032190:	mov    rcx,QWORD PTR [rdx+0x30]
   140032197:	jmp    0x140019170
   14003219c:	lea    rcx,[rdx+0x38]
   1400321a3:	jmp    0x140018a50
   1400321a8:	int3   
   1400321a9:	int3   
   1400321aa:	int3   
   1400321ab:	int3   
   1400321ac:	int3   
   1400321ad:	int3   
   1400321ae:	int3   
   1400321af:	int3   
   1400321b0:	mov    rcx,QWORD PTR [rdx+0x98]
   1400321b7:	jmp    0x140018a50
   1400321bc:	lea    rcx,[rdx+0x30]
   1400321c3:	jmp    0x140018300
   1400321c8:	lea    rcx,[rdx+0x40]
   1400321cf:	jmp    0x140017040
   1400321d4:	lea    rcx,[rdx+0x40]
   1400321db:	jmp    0x140017100
   1400321e0:	mov    rcx,QWORD PTR [rdx+0x20]
   1400321e7:	add    rcx,0x8
   1400321eb:	jmp    0x140017f90
   1400321f0:	mov    rcx,QWORD PTR [rdx+0x140]
   1400321f7:	jmp    0x140018960
   1400321fc:	lea    rcx,[rdx+0x20]
   140032203:	jmp    0x140018320
   140032208:	lea    rcx,[rdx+0x88]
   14003220f:	jmp    0x140018ed0
   140032214:	lea    rcx,[rdx+0x48]
   14003221b:	jmp    0x140017100
   140032220:	lea    rcx,[rdx+0xb8]
   140032227:	jmp    0x140017100
   14003222c:	lea    rcx,[rdx+0x98]
   140032233:	jmp    0x140017100
   140032238:	lea    rcx,[rdx+0x68]
   14003223f:	jmp    0x140019260
   140032244:	lea    rcx,[rdx+0x68]
   14003224b:	jmp    0x1400191e0
   140032250:	lea    rcx,[rdx+0xd8]
   140032257:	jmp    0x140017d40
   14003225c:	int3   
   14003225d:	int3   
   14003225e:	int3   
   14003225f:	int3   
   140032260:	mov    rcx,QWORD PTR [rdx+0x140]
   140032267:	jmp    0x140018990
   14003226c:	lea    rcx,[rdx+0x20]
   140032273:	jmp    0x140018320
   140032278:	lea    rcx,[rdx+0x88]
   14003227f:	jmp    0x140018ed0
   140032284:	lea    rcx,[rdx+0x48]
   14003228b:	jmp    0x140017100
   140032290:	lea    rcx,[rdx+0xb8]
   140032297:	jmp    0x140017100
   14003229c:	lea    rcx,[rdx+0x98]
   1400322a3:	jmp    0x140017100
   1400322a8:	lea    rcx,[rdx+0x68]
   1400322af:	jmp    0x140019260
   1400322b4:	lea    rcx,[rdx+0x68]
   1400322bb:	jmp    0x1400191e0
   1400322c0:	lea    rcx,[rdx+0xd8]
   1400322c7:	jmp    0x140017d40
   1400322cc:	int3   
   1400322cd:	int3   
   1400322ce:	int3   
   1400322cf:	int3   
   1400322d0:	mov    rcx,QWORD PTR [rdx+0x140]
   1400322d7:	jmp    0x1400189c0
   1400322dc:	lea    rcx,[rdx+0x20]
   1400322e3:	jmp    0x140018320
   1400322e8:	lea    rcx,[rdx+0x88]
   1400322ef:	jmp    0x140018ed0
   1400322f4:	lea    rcx,[rdx+0x48]
   1400322fb:	jmp    0x140017100
   140032300:	lea    rcx,[rdx+0xb8]
   140032307:	jmp    0x140017100
   14003230c:	lea    rcx,[rdx+0x98]
   140032313:	jmp    0x140017100
   140032318:	lea    rcx,[rdx+0x68]
   14003231f:	jmp    0x140019260
   140032324:	lea    rcx,[rdx+0x68]
   14003232b:	jmp    0x1400191e0
   140032330:	lea    rcx,[rdx+0xd8]
   140032337:	jmp    0x140017d40
   14003233c:	int3   
   14003233d:	int3   
   14003233e:	int3   
   14003233f:	int3   
   140032340:	mov    rcx,QWORD PTR [rdx+0x140]
   140032347:	jmp    0x1400189f0
   14003234c:	lea    rcx,[rdx+0x20]
   140032353:	jmp    0x140018320
   140032358:	lea    rcx,[rdx+0x88]
   14003235f:	jmp    0x140018ed0
   140032364:	lea    rcx,[rdx+0x48]
   14003236b:	jmp    0x140017100
   140032370:	lea    rcx,[rdx+0xb8]
   140032377:	jmp    0x140017100
   14003237c:	lea    rcx,[rdx+0x98]
   140032383:	jmp    0x140017100
   140032388:	lea    rcx,[rdx+0x68]
   14003238f:	jmp    0x140019260
   140032394:	lea    rcx,[rdx+0x68]
   14003239b:	jmp    0x1400191e0
   1400323a0:	lea    rcx,[rdx+0xd8]
   1400323a7:	jmp    0x140017d40
   1400323ac:	int3   
   1400323ad:	int3   
   1400323ae:	int3   
   1400323af:	int3   
   1400323b0:	mov    rcx,QWORD PTR [rdx+0x140]
   1400323b7:	jmp    0x140018a20
   1400323bc:	lea    rcx,[rdx+0x20]
   1400323c3:	jmp    0x140018320
   1400323c8:	lea    rcx,[rdx+0x88]
   1400323cf:	jmp    0x140018ed0
   1400323d4:	lea    rcx,[rdx+0x48]
   1400323db:	jmp    0x140017100
   1400323e0:	lea    rcx,[rdx+0xb8]
   1400323e7:	jmp    0x140017100
   1400323ec:	lea    rcx,[rdx+0x98]
   1400323f3:	jmp    0x140017100
   1400323f8:	lea    rcx,[rdx+0x68]
   1400323ff:	jmp    0x140019260
   140032404:	lea    rcx,[rdx+0x68]
   14003240b:	jmp    0x1400191e0
   140032410:	lea    rcx,[rdx+0xd8]
   140032417:	jmp    0x140017d40
   14003241c:	int3   
   14003241d:	int3   
   14003241e:	int3   
   14003241f:	int3   
   140032420:	lea    rcx,[rdx+0x20]
   140032427:	jmp    0x140018320
   14003242c:	lea    rcx,[rdx+0x88]
   140032433:	jmp    0x140018ed0
   140032438:	lea    rcx,[rdx+0x48]
   14003243f:	jmp    0x140017100
   140032444:	lea    rcx,[rdx+0xb8]
   14003244b:	jmp    0x140017100
   140032450:	lea    rcx,[rdx+0x98]
   140032457:	jmp    0x140017100
   14003245c:	lea    rcx,[rdx+0x68]
   140032463:	jmp    0x140019260
   140032468:	lea    rcx,[rdx+0x68]
   14003246f:	jmp    0x1400191e0
   140032474:	lea    rcx,[rdx+0xd8]
   14003247b:	jmp    0x140017d40
   140032480:	mov    rcx,QWORD PTR [rdx+0x140]
   140032487:	jmp    0x140018a50
   14003248c:	lea    rcx,[rdx+0x20]
   140032493:	jmp    0x140018320
   140032498:	lea    rcx,[rdx+0x88]
   14003249f:	jmp    0x140018ed0
   1400324a4:	lea    rcx,[rdx+0x48]
   1400324ab:	jmp    0x140017100
   1400324b0:	lea    rcx,[rdx+0xb8]
   1400324b7:	jmp    0x140017100
   1400324bc:	lea    rcx,[rdx+0x98]
   1400324c3:	jmp    0x140017100
   1400324c8:	lea    rcx,[rdx+0x68]
   1400324cf:	jmp    0x140019260
   1400324d4:	lea    rcx,[rdx+0x68]
   1400324db:	jmp    0x1400191e0
   1400324e0:	lea    rcx,[rdx+0xd8]
   1400324e7:	jmp    0x140017d40
   1400324ec:	int3   
   1400324ed:	int3   
   1400324ee:	int3   
   1400324ef:	int3   
   1400324f0:	lea    rcx,[rdx+0x50]
   1400324f7:	jmp    0x140019290
   1400324fc:	int3   
   1400324fd:	int3   
   1400324fe:	int3   
   1400324ff:	int3   
   140032500:	lea    rcx,[rdx+0x28]
   140032507:	jmp    0x140019030
   14003250c:	int3   
   14003250d:	int3   
   14003250e:	int3   
   14003250f:	int3   
   140032510:	lea    rcx,[rdx+0x28]
   140032517:	jmp    0x140019030
   14003251c:	int3   
   14003251d:	int3   
   14003251e:	int3   
   14003251f:	int3   
   140032520:	lea    rcx,[rdx+0x28]
   140032527:	jmp    0x140019030
   14003252c:	int3   
   14003252d:	int3   
   14003252e:	int3   
   14003252f:	int3   
   140032530:	lea    rcx,[rdx+0x28]
   140032537:	jmp    0x140019030
   14003253c:	int3   
   14003253d:	int3   
   14003253e:	int3   
   14003253f:	int3   
   140032540:	lea    rcx,[rdx+0x88]
   140032547:	jmp    0x140017d40
   14003254c:	int3   
   14003254d:	int3   
   14003254e:	int3   
   14003254f:	int3   
   140032550:	lea    rcx,[rdx+0x88]
   140032557:	jmp    0x140017db0
   14003255c:	int3   
   14003255d:	int3   
   14003255e:	int3   
   14003255f:	int3   
   140032560:	lea    rcx,[rdx+0x80]
   140032567:	jmp    0x140017e20
   14003256c:	int3   
   14003256d:	int3   
   14003256e:	int3   
   14003256f:	int3   
   140032570:	lea    rcx,[rdx+0xc8]
   140032577:	jmp    0x140017e70
   14003257c:	int3   
   14003257d:	int3   
   14003257e:	int3   
   14003257f:	int3   
   140032580:	lea    rcx,[rdx+0x80]
   140032587:	jmp    0x140017b00
   14003258c:	int3   
   14003258d:	int3   
   14003258e:	int3   
   14003258f:	int3   
   140032590:	lea    rcx,[rdx+0x80]
   140032597:	jmp    0x140017b50
   14003259c:	int3   
   14003259d:	int3   
   14003259e:	int3   
   14003259f:	int3   
   1400325a0:	lea    rcx,[rdx+0x80]
   1400325a7:	jmp    0x140017ba0
   1400325ac:	int3   
   1400325ad:	int3   
   1400325ae:	int3   
   1400325af:	int3   
   1400325b0:	lea    rcx,[rdx+0x90]
   1400325b7:	jmp    0x140017bf0
   1400325bc:	int3   
   1400325bd:	int3   
   1400325be:	int3   
   1400325bf:	int3   
   1400325c0:	lea    rcx,[rdx+0x90]
   1400325c7:	jmp    0x140017c50
   1400325cc:	int3   
   1400325cd:	int3   
   1400325ce:	int3   
   1400325cf:	int3   
   1400325d0:	lea    rcx,[rdx+0x80]
   1400325d7:	jmp    0x140017ca0
   1400325dc:	int3   
   1400325dd:	int3   
   1400325de:	int3   
   1400325df:	int3   
   1400325e0:	lea    rcx,[rdx+0x80]
   1400325e7:	jmp    0x140017cf0
   1400325ec:	int3   
   1400325ed:	int3   
   1400325ee:	int3   
   1400325ef:	int3   
   1400325f0:	lea    rcx,[rdx+0x80]
   1400325f7:	jmp    0x140017e20
   1400325fc:	int3   
   1400325fd:	int3   
   1400325fe:	int3   
   1400325ff:	int3   
   140032600:	lea    rcx,[rdx+0x28]
   140032607:	jmp    0x140017d40
   14003260c:	int3   
   14003260d:	int3   
   14003260e:	int3   
   14003260f:	int3   
   140032610:	lea    rcx,[rdx+0x28]
   140032617:	jmp    0x140017db0
   14003261c:	int3   
   14003261d:	int3   
   14003261e:	int3   
   14003261f:	int3   
   140032620:	lea    rcx,[rdx+0x28]
   140032627:	jmp    0x140017e20
   14003262c:	int3   
   14003262d:	int3   
   14003262e:	int3   
   14003262f:	int3   
   140032630:	lea    rcx,[rdx+0x28]
   140032637:	jmp    0x140017e70
   14003263c:	int3   
   14003263d:	int3   
   14003263e:	int3   
   14003263f:	int3   
   140032640:	rex push rbp
   140032642:	sub    rsp,0x20
   140032646:	mov    rbp,rdx
   140032649:	mov    eax,DWORD PTR [rbp+0x20]
   14003264c:	and    eax,0x1
   14003264f:	test   eax,eax
   140032651:	je     0x140032660
   140032653:	and    DWORD PTR [rbp+0x20],0xfffffffe
   140032657:	mov    rcx,QWORD PTR [rbp+0x60]
   14003265b:	call   0x140018d60
   140032660:	add    rsp,0x20
   140032664:	pop    rbp
   140032665:	ret    
   140032666:	lea    rcx,[rdx+0x30]
   14003266d:	jmp    0x140017100
   140032672:	int3   
   140032673:	int3   
   140032674:	int3   
   140032675:	int3   
   140032676:	int3   
   140032677:	int3   
   140032678:	int3   
   140032679:	int3   
   14003267a:	int3   
   14003267b:	int3   
   14003267c:	int3   
   14003267d:	int3   
   14003267e:	int3   
   14003267f:	int3   
   140032680:	lea    rcx,[rdx+0x50]
   140032687:	rex.W jmp QWORD PTR [rip+0x3b7a]        # 0x140036208
   14003268e:	int3   
   14003268f:	int3   
   140032690:	lea    rcx,[rdx+0x50]
   140032697:	rex.W jmp QWORD PTR [rip+0x3b6a]        # 0x140036208
   14003269e:	int3   
   14003269f:	int3   
   1400326a0:	lea    rcx,[rdx+0x60]
   1400326a7:	rex.W jmp QWORD PTR [rip+0x3b5a]        # 0x140036208
   1400326ae:	int3   
   1400326af:	int3   
   1400326b0:	rex push rbp
   1400326b2:	sub    rsp,0x20
   1400326b6:	mov    rbp,rdx
   1400326b9:	mov    eax,DWORD PTR [rbp+0x20]
   1400326bc:	and    eax,0x1
   1400326bf:	test   eax,eax
   1400326c1:	je     0x1400326d0
   1400326c3:	and    DWORD PTR [rbp+0x20],0xfffffffe
   1400326c7:	mov    rcx,QWORD PTR [rbp+0x50]
   1400326cb:	call   0x140017100
   1400326d0:	add    rsp,0x20
   1400326d4:	pop    rbp
   1400326d5:	ret    
   1400326d6:	int3   
   1400326d7:	int3   
   1400326d8:	int3   
   1400326d9:	int3   
   1400326da:	int3   
   1400326db:	int3   
   1400326dc:	int3   
   1400326dd:	int3   
   1400326de:	int3   
   1400326df:	int3   
   1400326e0:	rex push rbp
   1400326e2:	sub    rsp,0x20
   1400326e6:	mov    rbp,rdx
   1400326e9:	mov    eax,DWORD PTR [rbp+0x20]
   1400326ec:	and    eax,0x1
   1400326ef:	test   eax,eax
   1400326f1:	je     0x140032700
   1400326f3:	and    DWORD PTR [rbp+0x20],0xfffffffe
   1400326f7:	mov    rcx,QWORD PTR [rbp+0x50]
   1400326fb:	call   0x140017100
   140032700:	add    rsp,0x20
   140032704:	pop    rbp
   140032705:	ret    
   140032706:	int3   
   140032707:	int3   
   140032708:	int3   
   140032709:	int3   
   14003270a:	int3   
   14003270b:	int3   
   14003270c:	int3   
   14003270d:	int3   
   14003270e:	int3   
   14003270f:	int3   
   140032710:	lea    rcx,[rdx+0x28]
   140032717:	jmp    0x140019030
   14003271c:	int3   
   14003271d:	int3   
   14003271e:	int3   
   14003271f:	int3   
   140032720:	lea    rcx,[rdx+0x28]
   140032727:	jmp    0x140019030
   14003272c:	int3   
   14003272d:	int3   
   14003272e:	int3   
   14003272f:	int3   
   140032730:	lea    rcx,[rdx+0x28]
   140032737:	jmp    0x140019030
   14003273c:	int3   
   14003273d:	int3   
   14003273e:	int3   
   14003273f:	int3   
   140032740:	lea    rcx,[rdx+0x28]
   140032747:	jmp    0x140019030
   14003274c:	int3   
   14003274d:	int3   
   14003274e:	int3   
   14003274f:	int3   
   140032750:	lea    rcx,[rdx+0x28]
   140032757:	jmp    0x140017100
   14003275c:	int3   
   14003275d:	int3   
   14003275e:	int3   
   14003275f:	int3   
   140032760:	lea    rcx,[rdx+0xe0]
   140032767:	jmp    0x14001a780
   14003276c:	lea    rcx,[rdx+0x30]
   140032773:	jmp    0x140017100
   140032778:	lea    rcx,[rdx+0x50]
   14003277f:	jmp    0x140017100
   140032784:	lea    rcx,[rdx+0x70]
   14003278b:	jmp    0x140019260
   140032790:	lea    rcx,[rdx+0x70]
   140032797:	add    rcx,0x18
   14003279b:	jmp    0x140017100
   1400327a0:	lea    rcx,[rdx+0x70]
   1400327a7:	jmp    0x140019380
   1400327ac:	lea    rcx,[rdx+0x1f0]
   1400327b3:	jmp    0x140017e70
   1400327b8:	int3   
   1400327b9:	int3   
   1400327ba:	int3   
   1400327bb:	int3   
   1400327bc:	int3   
   1400327bd:	int3   
   1400327be:	int3   
   1400327bf:	int3   
   1400327c0:	rex push rbp
   1400327c2:	mov    rbp,rdx
   1400327c5:	mov    eax,DWORD PTR [rip+0x25225]        # 0x1400579f0
   1400327cb:	and    eax,0xfffffffe
   1400327ce:	mov    DWORD PTR [rip+0x2521c],eax        # 0x1400579f0
   1400327d4:	pop    rbp
   1400327d5:	ret    
   1400327d6:	rex push rbp
   1400327d8:	mov    rbp,rdx
   1400327db:	mov    eax,DWORD PTR [rip+0x25237]        # 0x140057a18
   1400327e1:	and    eax,0xfffffffe
   1400327e4:	mov    DWORD PTR [rip+0x2522e],eax        # 0x140057a18
   1400327ea:	pop    rbp
   1400327eb:	ret    
   1400327ec:	lea    rcx,[rdx+0x38]
   1400327f3:	jmp    0x140017100
   1400327f8:	lea    rcx,[rdx+0x38]
   1400327ff:	jmp    0x140017100
   140032804:	rex push rbp
   140032806:	mov    rbp,rdx
   140032809:	mov    eax,DWORD PTR [rip+0x251e1]        # 0x1400579f0
   14003280f:	and    eax,0xfffffffe
   140032812:	mov    DWORD PTR [rip+0x251d8],eax        # 0x1400579f0
   140032818:	pop    rbp
   140032819:	ret    
   14003281a:	lea    rcx,[rdx+0x98]
   140032821:	jmp    0x140018a80
   140032826:	lea    rcx,[rdx+0x38]
   14003282d:	jmp    0x140018310
   140032832:	lea    rcx,[rdx+0x58]
   140032839:	jmp    0x140017100
   14003283e:	lea    rcx,[rdx+0x78]
   140032845:	jmp    0x140017100
   14003284a:	lea    rcx,[rdx+0x78]
   140032851:	jmp    0x140017100
   140032856:	lea    rcx,[rdx+0x38]
   14003285d:	jmp    0x140017100
   140032862:	lea    rcx,[rdx+0x58]
   140032869:	jmp    0x140017100
   14003286e:	rex push rbp
   140032870:	mov    rbp,rdx
   140032873:	mov    eax,DWORD PTR [rip+0x25177]        # 0x1400579f0
   140032879:	and    eax,0xfffffffe
   14003287c:	mov    DWORD PTR [rip+0x2516e],eax        # 0x1400579f0
   140032882:	pop    rbp
   140032883:	ret    
   140032884:	rex push rbp
   140032886:	mov    rbp,rdx
   140032889:	mov    eax,DWORD PTR [rip+0x251b1]        # 0x140057a40
   14003288f:	and    eax,0xfffffffe
   140032892:	mov    DWORD PTR [rip+0x251a8],eax        # 0x140057a40
   140032898:	pop    rbp
   140032899:	ret    
   14003289a:	lea    rcx,[rdx+0x58]
   1400328a1:	jmp    0x140017100
   1400328a6:	lea    rcx,[rdx+0x38]
   1400328ad:	jmp    0x140017100
   1400328b2:	rex push rbp
   1400328b4:	mov    rbp,rdx
   1400328b7:	mov    eax,DWORD PTR [rip+0x2515b]        # 0x140057a18
   1400328bd:	and    eax,0xfffffffe
   1400328c0:	mov    DWORD PTR [rip+0x25152],eax        # 0x140057a18
   1400328c6:	pop    rbp
   1400328c7:	ret    
   1400328c8:	lea    rcx,[rdx+0x78]
   1400328cf:	jmp    0x140017100
   1400328d4:	lea    rcx,[rdx+0x38]
   1400328db:	jmp    0x140017100
   1400328e0:	lea    rcx,[rdx+0x58]
   1400328e7:	jmp    0x140017100
   1400328ec:	int3   
   1400328ed:	int3   
   1400328ee:	int3   
   1400328ef:	int3   
   1400328f0:	lea    rcx,[rdx+0x28]
   1400328f7:	jmp    0x140017100
   1400328fc:	int3   
   1400328fd:	int3   
   1400328fe:	int3   
   1400328ff:	int3   
   140032900:	lea    rcx,[rdx+0x50]
   140032907:	jmp    0x140017100
   14003290c:	lea    rcx,[rdx+0x30]
   140032913:	jmp    0x140017100
   140032918:	lea    rcx,[rdx+0x30]
   14003291f:	jmp    0x140017100
   140032924:	lea    rcx,[rdx+0x50]
   14003292b:	jmp    0x140017100
   140032930:	lea    rcx,[rdx+0x30]
   140032937:	jmp    0x140017100
   14003293c:	lea    rcx,[rdx+0x70]
   140032943:	jmp    0x140019260
   140032948:	lea    rcx,[rdx+0x70]
   14003294f:	add    rcx,0x18
   140032953:	jmp    0x140017100
   140032958:	lea    rcx,[rdx+0x70]
   14003295f:	jmp    0x140019380
   140032964:	lea    rcx,[rdx+0xd8]
   14003296b:	jmp    0x140017e70
   140032970:	lea    rcx,[rdx+0x28]
   140032977:	jmp    0x140017100
   14003297c:	int3   
   14003297d:	int3   
   14003297e:	int3   
   14003297f:	int3   
   140032980:	rex push rbp
   140032982:	mov    rbp,rdx
   140032985:	mov    eax,DWORD PTR [rip+0x25065]        # 0x1400579f0
   14003298b:	and    eax,0xfffffffe
   14003298e:	mov    DWORD PTR [rip+0x2505c],eax        # 0x1400579f0
   140032994:	pop    rbp
   140032995:	ret    
   140032996:	int3   
   140032997:	int3   
   140032998:	int3   
   140032999:	int3   
   14003299a:	int3   
   14003299b:	int3   
   14003299c:	int3   
   14003299d:	int3   
   14003299e:	int3   
   14003299f:	int3   
   1400329a0:	rex push rbp
   1400329a2:	mov    rbp,rdx
   1400329a5:	mov    eax,DWORD PTR [rip+0x25095]        # 0x140057a40
   1400329ab:	and    eax,0xfffffffe
   1400329ae:	mov    DWORD PTR [rip+0x2508c],eax        # 0x140057a40
   1400329b4:	pop    rbp
   1400329b5:	ret    
   1400329b6:	int3   
   1400329b7:	int3   
   1400329b8:	int3   
   1400329b9:	int3   
   1400329ba:	int3   
   1400329bb:	int3   
   1400329bc:	int3   
   1400329bd:	int3   
   1400329be:	int3   
   1400329bf:	int3   
   1400329c0:	rex push rbp
   1400329c2:	mov    rbp,rdx
   1400329c5:	mov    eax,DWORD PTR [rip+0x2504d]        # 0x140057a18
   1400329cb:	and    eax,0xfffffffe
   1400329ce:	mov    DWORD PTR [rip+0x25044],eax        # 0x140057a18
   1400329d4:	pop    rbp
   1400329d5:	ret    
   1400329d6:	int3   
   1400329d7:	int3   
   1400329d8:	int3   
   1400329d9:	int3   
   1400329da:	int3   
   1400329db:	int3   
   1400329dc:	int3   
   1400329dd:	int3   
   1400329de:	int3   
   1400329df:	int3   
   1400329e0:	lea    rcx,[rdx+0x40]
   1400329e7:	jmp    0x140018d60
   1400329ec:	lea    rcx,[rdx+0x28]
   1400329f3:	jmp    0x140018d60
   1400329f8:	int3   
   1400329f9:	int3   
   1400329fa:	int3   
   1400329fb:	int3   
   1400329fc:	int3   
   1400329fd:	int3   
   1400329fe:	int3   
   1400329ff:	int3   
   140032a00:	mov    rcx,QWORD PTR [rdx+0x40]
   140032a07:	rex.W jmp QWORD PTR [rip+0x37e2]        # 0x1400361f0
   140032a0e:	int3   
   140032a0f:	int3   
   140032a10:	rex push rbp
   140032a12:	sub    rsp,0x20
   140032a16:	mov    rbp,rdx
   140032a19:	mov    eax,DWORD PTR [rbp+0x60]
   140032a1c:	and    eax,0x1
   140032a1f:	test   eax,eax
   140032a21:	je     0x140032a38
   140032a23:	and    DWORD PTR [rbp+0x60],0xfffffffe
   140032a27:	mov    rcx,QWORD PTR [rbp+0x50]
   140032a2b:	add    rcx,0xa8
   140032a32:	call   QWORD PTR [rip+0x3768]        # 0x1400361a0
   140032a38:	add    rsp,0x20
   140032a3c:	pop    rbp
   140032a3d:	ret    
   140032a3e:	mov    rcx,QWORD PTR [rdx+0x50]
   140032a45:	add    rcx,0x10
   140032a49:	rex.W jmp QWORD PTR [rip+0x3720]        # 0x140036170
   140032a50:	mov    rcx,QWORD PTR [rdx+0x28]
   140032a57:	rex.W jmp QWORD PTR [rip+0x3792]        # 0x1400361f0
   140032a5e:	mov    rcx,QWORD PTR [rdx+0x50]
   140032a65:	add    rcx,0x8
   140032a69:	jmp    0x140016e90
   140032a6e:	int3   
   140032a6f:	int3   
   140032a70:	mov    rcx,QWORD PTR [rdx+0x40]
   140032a77:	jmp    0x140017100
   140032a7c:	mov    rcx,QWORD PTR [rdx+0x40]
   140032a83:	add    rcx,0x28
   140032a87:	jmp    0x140018d60
   140032a8c:	int3   
   140032a8d:	int3   
   140032a8e:	int3   
   140032a8f:	int3   
   140032a90:	rex push rbp
   140032a92:	sub    rsp,0x20
   140032a96:	mov    rbp,rdx
   140032a99:	mov    eax,DWORD PTR [rbp+0x48]
   140032a9c:	and    eax,0x1
   140032a9f:	test   eax,eax
   140032aa1:	je     0x140032ab8
   140032aa3:	and    DWORD PTR [rbp+0x48],0xfffffffe
   140032aa7:	mov    rcx,QWORD PTR [rbp+0x40]
   140032aab:	add    rcx,0x88
   140032ab2:	call   QWORD PTR [rip+0x36e8]        # 0x1400361a0
   140032ab8:	add    rsp,0x20
   140032abc:	pop    rbp
   140032abd:	ret    
   140032abe:	mov    rcx,QWORD PTR [rdx+0x40]
   140032ac5:	add    rcx,0x10
   140032ac9:	rex.W jmp QWORD PTR [rip+0x36a0]        # 0x140036170
   140032ad0:	mov    rcx,QWORD PTR [rdx+0x40]
   140032ad7:	jmp    0x140017100
   140032adc:	mov    rcx,QWORD PTR [rdx+0x48]
   140032ae3:	jmp    0x140030282
   140032ae8:	int3   
   140032ae9:	int3   
   140032aea:	int3   
   140032aeb:	int3   
   140032aec:	int3   
   140032aed:	int3   
   140032aee:	int3   
   140032aef:	int3   
   140032af0:	mov    rcx,QWORD PTR [rdx+0x40]
   140032af7:	jmp    0x140017100
   140032afc:	mov    rcx,QWORD PTR [rdx+0x48]
   140032b03:	jmp    0x140030282
   140032b08:	int3   
   140032b09:	int3   
   140032b0a:	int3   
   140032b0b:	int3   
   140032b0c:	int3   
   140032b0d:	int3   
   140032b0e:	int3   
   140032b0f:	int3   
   140032b10:	mov    rcx,QWORD PTR [rdx+0x48]
   140032b17:	add    rcx,0x8
   140032b1b:	jmp    0x140019310
   140032b20:	mov    rcx,QWORD PTR [rdx+0x40]
   140032b27:	jmp    0x140018650
   140032b2c:	int3   
   140032b2d:	int3   
   140032b2e:	int3   
   140032b2f:	int3   
   140032b30:	mov    rcx,QWORD PTR [rdx+0x40]
   140032b37:	rex.W jmp QWORD PTR [rip+0x36b2]        # 0x1400361f0
   140032b3e:	int3   
   140032b3f:	int3   
   140032b40:	mov    rcx,QWORD PTR [rdx+0x40]
   140032b47:	rex.W jmp QWORD PTR [rip+0x36a2]        # 0x1400361f0
   140032b4e:	int3   
   140032b4f:	int3   
   140032b50:	rex push rbp
   140032b52:	sub    rsp,0x20
   140032b56:	mov    rbp,rdx
   140032b59:	mov    eax,DWORD PTR [rbp+0x68]
   140032b5c:	and    eax,0x1
   140032b5f:	test   eax,eax
   140032b61:	je     0x140032b78
   140032b63:	and    DWORD PTR [rbp+0x68],0xfffffffe
   140032b67:	mov    rcx,QWORD PTR [rbp+0x50]
   140032b6b:	add    rcx,0x98
   140032b72:	call   QWORD PTR [rip+0x3628]        # 0x1400361a0
   140032b78:	add    rsp,0x20
   140032b7c:	pop    rbp
   140032b7d:	ret    
   140032b7e:	mov    rcx,QWORD PTR [rdx+0x50]
   140032b85:	add    rcx,0x20
   140032b89:	rex.W jmp QWORD PTR [rip+0x3590]        # 0x140036120
   140032b90:	rex push rbp
   140032b92:	sub    rsp,0x20
   140032b96:	mov    rbp,rdx
   140032b99:	mov    eax,DWORD PTR [rbp+0x50]
   140032b9c:	and    eax,0x1
   140032b9f:	test   eax,eax
   140032ba1:	je     0x140032bb8
   140032ba3:	and    DWORD PTR [rbp+0x50],0xfffffffe
   140032ba7:	mov    rcx,QWORD PTR [rbp+0x40]
   140032bab:	add    rcx,0x98
   140032bb2:	call   QWORD PTR [rip+0x35e8]        # 0x1400361a0
   140032bb8:	add    rsp,0x20
   140032bbc:	pop    rbp
   140032bbd:	ret    
   140032bbe:	mov    rcx,QWORD PTR [rdx+0x40]
   140032bc5:	add    rcx,0x20
   140032bc9:	rex.W jmp QWORD PTR [rip+0x3550]        # 0x140036120
   140032bd0:	mov    rcx,QWORD PTR [rdx+0x58]
   140032bd7:	jmp    0x140030282
   140032bdc:	mov    rcx,QWORD PTR [rdx+0x58]
   140032be3:	jmp    0x140018df0
   140032be8:	mov    rcx,QWORD PTR [rdx+0x58]
   140032bef:	add    rcx,0x8
   140032bf3:	jmp    0x140019310
   140032bf8:	int3   
   140032bf9:	int3   
   140032bfa:	int3   
   140032bfb:	int3   
   140032bfc:	int3   
   140032bfd:	int3   
   140032bfe:	int3   
   140032bff:	int3   
   140032c00:	mov    rcx,QWORD PTR [rdx+0x40]
   140032c07:	jmp    0x140030282
   140032c0c:	mov    rcx,QWORD PTR [rdx+0x40]
   140032c13:	add    rcx,0x8
   140032c17:	jmp    0x140019310
   140032c1c:	int3   
   140032c1d:	int3   
   140032c1e:	int3   
   140032c1f:	int3   
   140032c20:	mov    rcx,QWORD PTR [rdx+0x40]
   140032c27:	rex.W jmp QWORD PTR [rip+0x35c2]        # 0x1400361f0
   140032c2e:	mov    rcx,QWORD PTR [rdx+0x40]
   140032c35:	add    rcx,0x68
   140032c39:	jmp    0x140016de0
   140032c3e:	int3   
   140032c3f:	int3   
   140032c40:	mov    rcx,QWORD PTR [rdx+0x40]
   140032c47:	jmp    0x140017100
   140032c4c:	int3   
   140032c4d:	int3   
   140032c4e:	int3   
   140032c4f:	int3   
   140032c50:	mov    rcx,QWORD PTR [rdx+0x40]
   140032c57:	jmp    0x140017100
   140032c5c:	mov    rcx,QWORD PTR [rdx+0x40]
   140032c63:	add    rcx,0x20
   140032c67:	jmp    0x140017100
   140032c6c:	int3   
   140032c6d:	int3   
   140032c6e:	int3   
   140032c6f:	int3   
   140032c70:	rex push rbp
   140032c72:	sub    rsp,0x20
   140032c76:	mov    rbp,rdx
   140032c79:	mov    eax,DWORD PTR [rbp+0x58]
   140032c7c:	and    eax,0x1
   140032c7f:	test   eax,eax
   140032c81:	je     0x140032c94
   140032c83:	and    DWORD PTR [rbp+0x58],0xfffffffe
   140032c87:	mov    rcx,QWORD PTR [rbp+0x40]
   140032c8b:	add    rcx,0x50
   140032c8f:	call   0x140018fc0
   140032c94:	add    rsp,0x20
   140032c98:	pop    rbp
   140032c99:	ret    
   140032c9a:	mov    rcx,QWORD PTR [rdx+0x40]
   140032ca1:	jmp    0x140017b00
   140032ca6:	int3   
   140032ca7:	int3   
   140032ca8:	int3   
   140032ca9:	int3   
   140032caa:	int3   
   140032cab:	int3   
   140032cac:	int3   
   140032cad:	int3   
   140032cae:	int3   
   140032caf:	int3   
   140032cb0:	rex push rbp
   140032cb2:	sub    rsp,0x20
   140032cb6:	mov    rbp,rdx
   140032cb9:	mov    eax,DWORD PTR [rbp+0x50]
   140032cbc:	and    eax,0x1
   140032cbf:	test   eax,eax
   140032cc1:	je     0x140032cd4
   140032cc3:	and    DWORD PTR [rbp+0x50],0xfffffffe
   140032cc7:	mov    rcx,QWORD PTR [rbp+0x40]
   140032ccb:	add    rcx,0x50
   140032ccf:	call   0x140018fc0
   140032cd4:	add    rsp,0x20
   140032cd8:	pop    rbp
   140032cd9:	ret    
   140032cda:	mov    rcx,QWORD PTR [rdx+0x40]
   140032ce1:	jmp    0x140017b00
   140032ce6:	int3   
   140032ce7:	int3   
   140032ce8:	int3   
   140032ce9:	int3   
   140032cea:	int3   
   140032ceb:	int3   
   140032cec:	int3   
   140032ced:	int3   
   140032cee:	int3   
   140032cef:	int3   
   140032cf0:	rex push rbp
   140032cf2:	sub    rsp,0x20
   140032cf6:	mov    rbp,rdx
   140032cf9:	mov    eax,DWORD PTR [rbp+0x50]
   140032cfc:	and    eax,0x1
   140032cff:	test   eax,eax
   140032d01:	je     0x140032d14
   140032d03:	and    DWORD PTR [rbp+0x50],0xfffffffe
   140032d07:	mov    rcx,QWORD PTR [rbp+0x40]
   140032d0b:	add    rcx,0x50
   140032d0f:	call   0x140018fc0
   140032d14:	add    rsp,0x20
   140032d18:	pop    rbp
   140032d19:	ret    
   140032d1a:	int3   
   140032d1b:	int3   
   140032d1c:	int3   
   140032d1d:	int3   
   140032d1e:	int3   
   140032d1f:	int3   
   140032d20:	rex push rbp
   140032d22:	sub    rsp,0x20
   140032d26:	mov    rbp,rdx
   140032d29:	mov    eax,DWORD PTR [rbp+0x58]
   140032d2c:	and    eax,0x1
   140032d2f:	test   eax,eax
   140032d31:	je     0x140032d44
   140032d33:	and    DWORD PTR [rbp+0x58],0xfffffffe
   140032d37:	mov    rcx,QWORD PTR [rbp+0x40]
   140032d3b:	add    rcx,0x50
   140032d3f:	call   0x140018fc0
   140032d44:	add    rsp,0x20
   140032d48:	pop    rbp
   140032d49:	ret    
   140032d4a:	mov    rcx,QWORD PTR [rdx+0x40]
   140032d51:	jmp    0x140017b50
   140032d56:	int3   
   140032d57:	int3   
   140032d58:	int3   
   140032d59:	int3   
   140032d5a:	int3   
   140032d5b:	int3   
   140032d5c:	int3   
   140032d5d:	int3   
   140032d5e:	int3   
   140032d5f:	int3   
   140032d60:	rex push rbp
   140032d62:	sub    rsp,0x20
   140032d66:	mov    rbp,rdx
   140032d69:	mov    eax,DWORD PTR [rbp+0x50]
   140032d6c:	and    eax,0x1
   140032d6f:	test   eax,eax
   140032d71:	je     0x140032d84
   140032d73:	and    DWORD PTR [rbp+0x50],0xfffffffe
   140032d77:	mov    rcx,QWORD PTR [rbp+0x40]
   140032d7b:	add    rcx,0x50
   140032d7f:	call   0x140018fc0
   140032d84:	add    rsp,0x20
   140032d88:	pop    rbp
   140032d89:	ret    
   140032d8a:	mov    rcx,QWORD PTR [rdx+0x40]
   140032d91:	jmp    0x140017b50
   140032d96:	int3   
   140032d97:	int3   
   140032d98:	int3   
   140032d99:	int3   
   140032d9a:	int3   
   140032d9b:	int3   
   140032d9c:	int3   
   140032d9d:	int3   
   140032d9e:	int3   
   140032d9f:	int3   
   140032da0:	rex push rbp
   140032da2:	sub    rsp,0x20
   140032da6:	mov    rbp,rdx
   140032da9:	mov    eax,DWORD PTR [rbp+0x50]
   140032dac:	and    eax,0x1
   140032daf:	test   eax,eax
   140032db1:	je     0x140032dc4
   140032db3:	and    DWORD PTR [rbp+0x50],0xfffffffe
   140032db7:	mov    rcx,QWORD PTR [rbp+0x40]
   140032dbb:	add    rcx,0x50
   140032dbf:	call   0x140018fc0
   140032dc4:	add    rsp,0x20
   140032dc8:	pop    rbp
   140032dc9:	ret    
   140032dca:	int3   
   140032dcb:	int3   
   140032dcc:	int3   
   140032dcd:	int3   
   140032dce:	int3   
   140032dcf:	int3   
   140032dd0:	rex push rbp
   140032dd2:	sub    rsp,0x20
   140032dd6:	mov    rbp,rdx
   140032dd9:	mov    eax,DWORD PTR [rbp+0x58]
   140032ddc:	and    eax,0x1
   140032ddf:	test   eax,eax
   140032de1:	je     0x140032df4
   140032de3:	and    DWORD PTR [rbp+0x58],0xfffffffe
   140032de7:	mov    rcx,QWORD PTR [rbp+0x40]
   140032deb:	add    rcx,0x50
   140032def:	call   0x140018fc0
   140032df4:	add    rsp,0x20
   140032df8:	pop    rbp
   140032df9:	ret    
   140032dfa:	mov    rcx,QWORD PTR [rdx+0x40]
   140032e01:	jmp    0x140017ba0
   140032e06:	int3   
   140032e07:	int3   
   140032e08:	int3   
   140032e09:	int3   
   140032e0a:	int3   
   140032e0b:	int3   
   140032e0c:	int3   
   140032e0d:	int3   
   140032e0e:	int3   
   140032e0f:	int3   
   140032e10:	rex push rbp
   140032e12:	sub    rsp,0x20
   140032e16:	mov    rbp,rdx
   140032e19:	mov    eax,DWORD PTR [rbp+0x50]
   140032e1c:	and    eax,0x1
   140032e1f:	test   eax,eax
   140032e21:	je     0x140032e34
   140032e23:	and    DWORD PTR [rbp+0x50],0xfffffffe
   140032e27:	mov    rcx,QWORD PTR [rbp+0x40]
   140032e2b:	add    rcx,0x50
   140032e2f:	call   0x140018fc0
   140032e34:	add    rsp,0x20
   140032e38:	pop    rbp
   140032e39:	ret    
   140032e3a:	mov    rcx,QWORD PTR [rdx+0x40]
   140032e41:	jmp    0x140017ba0
   140032e46:	int3   
   140032e47:	int3   
   140032e48:	int3   
   140032e49:	int3   
   140032e4a:	int3   
   140032e4b:	int3   
   140032e4c:	int3   
   140032e4d:	int3   
   140032e4e:	int3   
   140032e4f:	int3   
   140032e50:	rex push rbp
   140032e52:	sub    rsp,0x20
   140032e56:	mov    rbp,rdx
   140032e59:	mov    eax,DWORD PTR [rbp+0x50]
   140032e5c:	and    eax,0x1
   140032e5f:	test   eax,eax
   140032e61:	je     0x140032e74
   140032e63:	and    DWORD PTR [rbp+0x50],0xfffffffe
   140032e67:	mov    rcx,QWORD PTR [rbp+0x40]
   140032e6b:	add    rcx,0x50
   140032e6f:	call   0x140018fc0
   140032e74:	add    rsp,0x20
   140032e78:	pop    rbp
   140032e79:	ret    
   140032e7a:	int3   
   140032e7b:	int3   
   140032e7c:	int3   
   140032e7d:	int3   
   140032e7e:	int3   
   140032e7f:	int3   
   140032e80:	rex push rbp
   140032e82:	sub    rsp,0x20
   140032e86:	mov    rbp,rdx
   140032e89:	mov    eax,DWORD PTR [rbp+0x58]
   140032e8c:	and    eax,0x1
   140032e8f:	test   eax,eax
   140032e91:	je     0x140032ea4
   140032e93:	and    DWORD PTR [rbp+0x58],0xfffffffe
   140032e97:	mov    rcx,QWORD PTR [rbp+0x40]
   140032e9b:	add    rcx,0x60
   140032e9f:	call   0x140018fc0
   140032ea4:	add    rsp,0x20
   140032ea8:	pop    rbp
   140032ea9:	ret    
   140032eaa:	mov    rcx,QWORD PTR [rdx+0x40]
   140032eb1:	jmp    0x140017bf0
   140032eb6:	int3   
   140032eb7:	int3   
   140032eb8:	int3   
   140032eb9:	int3   
   140032eba:	int3   
   140032ebb:	int3   
   140032ebc:	int3   
   140032ebd:	int3   
   140032ebe:	int3   
   140032ebf:	int3   
   140032ec0:	rex push rbp
   140032ec2:	sub    rsp,0x20
   140032ec6:	mov    rbp,rdx
   140032ec9:	mov    eax,DWORD PTR [rbp+0x50]
   140032ecc:	and    eax,0x1
   140032ecf:	test   eax,eax
   140032ed1:	je     0x140032ee4
   140032ed3:	and    DWORD PTR [rbp+0x50],0xfffffffe
   140032ed7:	mov    rcx,QWORD PTR [rbp+0x40]
   140032edb:	add    rcx,0x60
   140032edf:	call   0x140018fc0
   140032ee4:	add    rsp,0x20
   140032ee8:	pop    rbp
   140032ee9:	ret    
   140032eea:	mov    rcx,QWORD PTR [rdx+0x40]
   140032ef1:	jmp    0x140017bf0
   140032ef6:	int3   
   140032ef7:	int3   
   140032ef8:	int3   
   140032ef9:	int3   
   140032efa:	int3   
   140032efb:	int3   
   140032efc:	int3   
   140032efd:	int3   
   140032efe:	int3   
   140032eff:	int3   
   140032f00:	rex push rbp
   140032f02:	sub    rsp,0x20
   140032f06:	mov    rbp,rdx
   140032f09:	mov    eax,DWORD PTR [rbp+0x50]
   140032f0c:	and    eax,0x1
   140032f0f:	test   eax,eax
   140032f11:	je     0x140032f24
   140032f13:	and    DWORD PTR [rbp+0x50],0xfffffffe
   140032f17:	mov    rcx,QWORD PTR [rbp+0x40]
   140032f1b:	add    rcx,0x60
   140032f1f:	call   0x140018fc0
   140032f24:	add    rsp,0x20
   140032f28:	pop    rbp
   140032f29:	ret    
   140032f2a:	int3   
   140032f2b:	int3   
   140032f2c:	int3   
   140032f2d:	int3   
   140032f2e:	int3   
   140032f2f:	int3   
   140032f30:	rex push rbp
   140032f32:	sub    rsp,0x20
   140032f36:	mov    rbp,rdx
   140032f39:	mov    eax,DWORD PTR [rbp+0x58]
   140032f3c:	and    eax,0x1
   140032f3f:	test   eax,eax
   140032f41:	je     0x140032f54
   140032f43:	and    DWORD PTR [rbp+0x58],0xfffffffe
   140032f47:	mov    rcx,QWORD PTR [rbp+0x40]
   140032f4b:	add    rcx,0x60
   140032f4f:	call   0x140018fc0
   140032f54:	add    rsp,0x20
   140032f58:	pop    rbp
   140032f59:	ret    
   140032f5a:	mov    rcx,QWORD PTR [rdx+0x40]
   140032f61:	jmp    0x140017c50
   140032f66:	int3   
   140032f67:	int3   
   140032f68:	int3   
   140032f69:	int3   
   140032f6a:	int3   
   140032f6b:	int3   
   140032f6c:	int3   
   140032f6d:	int3   
   140032f6e:	int3   
   140032f6f:	int3   
   140032f70:	rex push rbp
   140032f72:	sub    rsp,0x20
   140032f76:	mov    rbp,rdx
   140032f79:	mov    eax,DWORD PTR [rbp+0x50]
   140032f7c:	and    eax,0x1
   140032f7f:	test   eax,eax
   140032f81:	je     0x140032f94
   140032f83:	and    DWORD PTR [rbp+0x50],0xfffffffe
   140032f87:	mov    rcx,QWORD PTR [rbp+0x40]
   140032f8b:	add    rcx,0x60
   140032f8f:	call   0x140018fc0
   140032f94:	add    rsp,0x20
   140032f98:	pop    rbp
   140032f99:	ret    
   140032f9a:	mov    rcx,QWORD PTR [rdx+0x40]
   140032fa1:	jmp    0x140017c50
   140032fa6:	int3   
   140032fa7:	int3   
   140032fa8:	int3   
   140032fa9:	int3   
   140032faa:	int3   
   140032fab:	int3   
   140032fac:	int3   
   140032fad:	int3   
   140032fae:	int3   
   140032faf:	int3   
   140032fb0:	rex push rbp
   140032fb2:	sub    rsp,0x20
   140032fb6:	mov    rbp,rdx
   140032fb9:	mov    eax,DWORD PTR [rbp+0x50]
   140032fbc:	and    eax,0x1
   140032fbf:	test   eax,eax
   140032fc1:	je     0x140032fd4
   140032fc3:	and    DWORD PTR [rbp+0x50],0xfffffffe
   140032fc7:	mov    rcx,QWORD PTR [rbp+0x40]
   140032fcb:	add    rcx,0x60
   140032fcf:	call   0x140018fc0
   140032fd4:	add    rsp,0x20
   140032fd8:	pop    rbp
   140032fd9:	ret    
   140032fda:	int3   
   140032fdb:	int3   
   140032fdc:	int3   
   140032fdd:	int3   
   140032fde:	int3   
   140032fdf:	int3   
   140032fe0:	rex push rbp
   140032fe2:	sub    rsp,0x20
   140032fe6:	mov    rbp,rdx
   140032fe9:	mov    eax,DWORD PTR [rbp+0x58]
   140032fec:	and    eax,0x1
   140032fef:	test   eax,eax
   140032ff1:	je     0x140033004
   140032ff3:	and    DWORD PTR [rbp+0x58],0xfffffffe
   140032ff7:	mov    rcx,QWORD PTR [rbp+0x40]
   140032ffb:	add    rcx,0x50
   140032fff:	call   0x140018fc0
   140033004:	add    rsp,0x20
   140033008:	pop    rbp
   140033009:	ret    
   14003300a:	mov    rcx,QWORD PTR [rdx+0x40]
   140033011:	jmp    0x140017ca0
   140033016:	int3   
   140033017:	int3   
   140033018:	int3   
   140033019:	int3   
   14003301a:	int3   
   14003301b:	int3   
   14003301c:	int3   
   14003301d:	int3   
   14003301e:	int3   
   14003301f:	int3   
   140033020:	rex push rbp
   140033022:	sub    rsp,0x20
   140033026:	mov    rbp,rdx
   140033029:	mov    eax,DWORD PTR [rbp+0x50]
   14003302c:	and    eax,0x1
   14003302f:	test   eax,eax
   140033031:	je     0x140033044
   140033033:	and    DWORD PTR [rbp+0x50],0xfffffffe
   140033037:	mov    rcx,QWORD PTR [rbp+0x40]
   14003303b:	add    rcx,0x50
   14003303f:	call   0x140018fc0
   140033044:	add    rsp,0x20
   140033048:	pop    rbp
   140033049:	ret    
   14003304a:	mov    rcx,QWORD PTR [rdx+0x40]
   140033051:	jmp    0x140017ca0
   140033056:	int3   
   140033057:	int3   
   140033058:	int3   
   140033059:	int3   
   14003305a:	int3   
   14003305b:	int3   
   14003305c:	int3   
   14003305d:	int3   
   14003305e:	int3   
   14003305f:	int3   
   140033060:	rex push rbp
   140033062:	sub    rsp,0x20
   140033066:	mov    rbp,rdx
   140033069:	mov    eax,DWORD PTR [rbp+0x50]
   14003306c:	and    eax,0x1
   14003306f:	test   eax,eax
   140033071:	je     0x140033084
   140033073:	and    DWORD PTR [rbp+0x50],0xfffffffe
   140033077:	mov    rcx,QWORD PTR [rbp+0x40]
   14003307b:	add    rcx,0x50
   14003307f:	call   0x140018fc0
   140033084:	add    rsp,0x20
   140033088:	pop    rbp
   140033089:	ret    
   14003308a:	int3   
   14003308b:	int3   
   14003308c:	int3   
   14003308d:	int3   
   14003308e:	int3   
   14003308f:	int3   
   140033090:	rex push rbp
   140033092:	sub    rsp,0x20
   140033096:	mov    rbp,rdx
   140033099:	mov    eax,DWORD PTR [rbp+0x58]
   14003309c:	and    eax,0x1
   14003309f:	test   eax,eax
   1400330a1:	je     0x1400330b4
   1400330a3:	and    DWORD PTR [rbp+0x58],0xfffffffe
   1400330a7:	mov    rcx,QWORD PTR [rbp+0x40]
   1400330ab:	add    rcx,0x50
   1400330af:	call   0x140018fc0
   1400330b4:	add    rsp,0x20
   1400330b8:	pop    rbp
   1400330b9:	ret    
   1400330ba:	mov    rcx,QWORD PTR [rdx+0x40]
   1400330c1:	jmp    0x140017cf0
   1400330c6:	int3   
   1400330c7:	int3   
   1400330c8:	int3   
   1400330c9:	int3   
   1400330ca:	int3   
   1400330cb:	int3   
   1400330cc:	int3   
   1400330cd:	int3   
   1400330ce:	int3   
   1400330cf:	int3   
   1400330d0:	rex push rbp
   1400330d2:	sub    rsp,0x20
   1400330d6:	mov    rbp,rdx
   1400330d9:	mov    eax,DWORD PTR [rbp+0x50]
   1400330dc:	and    eax,0x1
   1400330df:	test   eax,eax
   1400330e1:	je     0x1400330f4
   1400330e3:	and    DWORD PTR [rbp+0x50],0xfffffffe
   1400330e7:	mov    rcx,QWORD PTR [rbp+0x40]
   1400330eb:	add    rcx,0x50
   1400330ef:	call   0x140018fc0
   1400330f4:	add    rsp,0x20
   1400330f8:	pop    rbp
   1400330f9:	ret    
   1400330fa:	mov    rcx,QWORD PTR [rdx+0x40]
   140033101:	jmp    0x140017cf0
   140033106:	int3   
   140033107:	int3   
   140033108:	int3   
   140033109:	int3   
   14003310a:	int3   
   14003310b:	int3   
   14003310c:	int3   
   14003310d:	int3   
   14003310e:	int3   
   14003310f:	int3   
   140033110:	rex push rbp
   140033112:	sub    rsp,0x20
   140033116:	mov    rbp,rdx
   140033119:	mov    eax,DWORD PTR [rbp+0x50]
   14003311c:	and    eax,0x1
   14003311f:	test   eax,eax
   140033121:	je     0x140033134
   140033123:	and    DWORD PTR [rbp+0x50],0xfffffffe
   140033127:	mov    rcx,QWORD PTR [rbp+0x40]
   14003312b:	add    rcx,0x50
   14003312f:	call   0x140018fc0
   140033134:	add    rsp,0x20
   140033138:	pop    rbp
   140033139:	ret    
   14003313a:	int3   
   14003313b:	int3   
   14003313c:	int3   
   14003313d:	int3   
   14003313e:	int3   
   14003313f:	int3   
   140033140:	rex push rbp
   140033142:	sub    rsp,0x20
   140033146:	mov    rbp,rdx
   140033149:	mov    eax,DWORD PTR [rbp+0x58]
   14003314c:	and    eax,0x1
   14003314f:	test   eax,eax
   140033151:	je     0x140033164
   140033153:	and    DWORD PTR [rbp+0x58],0xfffffffe
   140033157:	mov    rcx,QWORD PTR [rbp+0x40]
   14003315b:	add    rcx,0x58
   14003315f:	call   0x140018fc0
   140033164:	add    rsp,0x20
   140033168:	pop    rbp
   140033169:	ret    
   14003316a:	mov    rcx,QWORD PTR [rdx+0x40]
   140033171:	jmp    0x140017d40
   140033176:	int3   
   140033177:	int3   
   140033178:	int3   
   140033179:	int3   
   14003317a:	int3   
   14003317b:	int3   
   14003317c:	int3   
   14003317d:	int3   
   14003317e:	int3   
   14003317f:	int3   
   140033180:	rex push rbp
   140033182:	sub    rsp,0x20
   140033186:	mov    rbp,rdx
   140033189:	mov    eax,DWORD PTR [rbp+0x50]
   14003318c:	and    eax,0x1
   14003318f:	test   eax,eax
   140033191:	je     0x1400331a4
   140033193:	and    DWORD PTR [rbp+0x50],0xfffffffe
   140033197:	mov    rcx,QWORD PTR [rbp+0x40]
   14003319b:	add    rcx,0x58
   14003319f:	call   0x140018fc0
   1400331a4:	add    rsp,0x20
   1400331a8:	pop    rbp
   1400331a9:	ret    
   1400331aa:	mov    rcx,QWORD PTR [rdx+0x40]
   1400331b1:	jmp    0x140017d40
   1400331b6:	int3   
   1400331b7:	int3   
   1400331b8:	int3   
   1400331b9:	int3   
   1400331ba:	int3   
   1400331bb:	int3   
   1400331bc:	int3   
   1400331bd:	int3   
   1400331be:	int3   
   1400331bf:	int3   
   1400331c0:	rex push rbp
   1400331c2:	sub    rsp,0x20
   1400331c6:	mov    rbp,rdx
   1400331c9:	mov    eax,DWORD PTR [rbp+0x50]
   1400331cc:	and    eax,0x1
   1400331cf:	test   eax,eax
   1400331d1:	je     0x1400331e4
   1400331d3:	and    DWORD PTR [rbp+0x50],0xfffffffe
   1400331d7:	mov    rcx,QWORD PTR [rbp+0x40]
   1400331db:	add    rcx,0x58
   1400331df:	call   0x140018fc0
   1400331e4:	add    rsp,0x20
   1400331e8:	pop    rbp
   1400331e9:	ret    
   1400331ea:	int3   
   1400331eb:	int3   
   1400331ec:	int3   
   1400331ed:	int3   
   1400331ee:	int3   
   1400331ef:	int3   
   1400331f0:	rex push rbp
   1400331f2:	sub    rsp,0x20
   1400331f6:	mov    rbp,rdx
   1400331f9:	mov    eax,DWORD PTR [rbp+0x58]
   1400331fc:	and    eax,0x1
   1400331ff:	test   eax,eax
   140033201:	je     0x140033214
   140033203:	and    DWORD PTR [rbp+0x58],0xfffffffe
   140033207:	mov    rcx,QWORD PTR [rbp+0x40]
   14003320b:	add    rcx,0x58
   14003320f:	call   0x140018fc0
   140033214:	add    rsp,0x20
   140033218:	pop    rbp
   140033219:	ret    
   14003321a:	mov    rcx,QWORD PTR [rdx+0x40]
   140033221:	jmp    0x140017db0
   140033226:	int3   
   140033227:	int3   
   140033228:	int3   
   140033229:	int3   
   14003322a:	int3   
   14003322b:	int3   
   14003322c:	int3   
   14003322d:	int3   
   14003322e:	int3   
   14003322f:	int3   
   140033230:	rex push rbp
   140033232:	sub    rsp,0x20
   140033236:	mov    rbp,rdx
   140033239:	mov    eax,DWORD PTR [rbp+0x50]
   14003323c:	and    eax,0x1
   14003323f:	test   eax,eax
   140033241:	je     0x140033254
   140033243:	and    DWORD PTR [rbp+0x50],0xfffffffe
   140033247:	mov    rcx,QWORD PTR [rbp+0x40]
   14003324b:	add    rcx,0x58
   14003324f:	call   0x140018fc0
   140033254:	add    rsp,0x20
   140033258:	pop    rbp
   140033259:	ret    
   14003325a:	mov    rcx,QWORD PTR [rdx+0x40]
   140033261:	jmp    0x140017db0
   140033266:	int3   
   140033267:	int3   
   140033268:	int3   
   140033269:	int3   
   14003326a:	int3   
   14003326b:	int3   
   14003326c:	int3   
   14003326d:	int3   
   14003326e:	int3   
   14003326f:	int3   
   140033270:	rex push rbp
   140033272:	sub    rsp,0x20
   140033276:	mov    rbp,rdx
   140033279:	mov    eax,DWORD PTR [rbp+0x50]
   14003327c:	and    eax,0x1
   14003327f:	test   eax,eax
   140033281:	je     0x140033294
   140033283:	and    DWORD PTR [rbp+0x50],0xfffffffe
   140033287:	mov    rcx,QWORD PTR [rbp+0x40]
   14003328b:	add    rcx,0x58
   14003328f:	call   0x140018fc0
   140033294:	add    rsp,0x20
   140033298:	pop    rbp
   140033299:	ret    
   14003329a:	int3   
   14003329b:	int3   
   14003329c:	int3   
   14003329d:	int3   
   14003329e:	int3   
   14003329f:	int3   
   1400332a0:	rex push rbp
   1400332a2:	sub    rsp,0x20
   1400332a6:	mov    rbp,rdx
   1400332a9:	mov    eax,DWORD PTR [rbp+0x58]
   1400332ac:	and    eax,0x1
   1400332af:	test   eax,eax
   1400332b1:	je     0x1400332c4
   1400332b3:	and    DWORD PTR [rbp+0x58],0xfffffffe
   1400332b7:	mov    rcx,QWORD PTR [rbp+0x40]
   1400332bb:	add    rcx,0x50
   1400332bf:	call   0x140018fc0
   1400332c4:	add    rsp,0x20
   1400332c8:	pop    rbp
   1400332c9:	ret    
   1400332ca:	mov    rcx,QWORD PTR [rdx+0x40]
   1400332d1:	jmp    0x140017e20
   1400332d6:	int3   
   1400332d7:	int3   
   1400332d8:	int3   
   1400332d9:	int3   
   1400332da:	int3   
   1400332db:	int3   
   1400332dc:	int3   
   1400332dd:	int3   
   1400332de:	int3   
   1400332df:	int3   
   1400332e0:	rex push rbp
   1400332e2:	sub    rsp,0x20
   1400332e6:	mov    rbp,rdx
   1400332e9:	mov    eax,DWORD PTR [rbp+0x50]
   1400332ec:	and    eax,0x1
   1400332ef:	test   eax,eax
   1400332f1:	je     0x140033304
   1400332f3:	and    DWORD PTR [rbp+0x50],0xfffffffe
   1400332f7:	mov    rcx,QWORD PTR [rbp+0x40]
   1400332fb:	add    rcx,0x50
   1400332ff:	call   0x140018fc0
   140033304:	add    rsp,0x20
   140033308:	pop    rbp
   140033309:	ret    
   14003330a:	mov    rcx,QWORD PTR [rdx+0x40]
   140033311:	jmp    0x140017e20
   140033316:	int3   
   140033317:	int3   
   140033318:	int3   
   140033319:	int3   
   14003331a:	int3   
   14003331b:	int3   
   14003331c:	int3   
   14003331d:	int3   
   14003331e:	int3   
   14003331f:	int3   
   140033320:	rex push rbp
   140033322:	sub    rsp,0x20
   140033326:	mov    rbp,rdx
   140033329:	mov    eax,DWORD PTR [rbp+0x50]
   14003332c:	and    eax,0x1
   14003332f:	test   eax,eax
   140033331:	je     0x140033344
   140033333:	and    DWORD PTR [rbp+0x50],0xfffffffe
   140033337:	mov    rcx,QWORD PTR [rbp+0x40]
   14003333b:	add    rcx,0x50
   14003333f:	call   0x140018fc0
   140033344:	add    rsp,0x20
   140033348:	pop    rbp
   140033349:	ret    
   14003334a:	int3   
   14003334b:	int3   
   14003334c:	int3   
   14003334d:	int3   
   14003334e:	int3   
   14003334f:	int3   
   140033350:	rex push rbp
   140033352:	sub    rsp,0x20
   140033356:	mov    rbp,rdx
   140033359:	mov    eax,DWORD PTR [rbp+0x58]
   14003335c:	and    eax,0x1
   14003335f:	test   eax,eax
   140033361:	je     0x140033377
   140033363:	and    DWORD PTR [rbp+0x58],0xfffffffe
   140033367:	mov    rcx,QWORD PTR [rbp+0x40]
   14003336b:	add    rcx,0x98
   140033372:	call   0x140018fc0
   140033377:	add    rsp,0x20
   14003337b:	pop    rbp
   14003337c:	ret    
   14003337d:	mov    rcx,QWORD PTR [rdx+0x40]
   140033384:	jmp    0x140017e70
   140033389:	int3   
   14003338a:	int3   
   14003338b:	int3   
   14003338c:	int3   
   14003338d:	int3   
   14003338e:	int3   
   14003338f:	int3   
   140033390:	rex push rbp
   140033392:	sub    rsp,0x20
   140033396:	mov    rbp,rdx
   140033399:	mov    eax,DWORD PTR [rbp+0x50]
   14003339c:	and    eax,0x1
   14003339f:	test   eax,eax
   1400333a1:	je     0x1400333b7
   1400333a3:	and    DWORD PTR [rbp+0x50],0xfffffffe
   1400333a7:	mov    rcx,QWORD PTR [rbp+0x40]
   1400333ab:	add    rcx,0x98
   1400333b2:	call   0x140018fc0
   1400333b7:	add    rsp,0x20
   1400333bb:	pop    rbp
   1400333bc:	ret    
   1400333bd:	mov    rcx,QWORD PTR [rdx+0x40]
   1400333c4:	jmp    0x140017e70
   1400333c9:	int3   
   1400333ca:	int3   
   1400333cb:	int3   
   1400333cc:	int3   
   1400333cd:	int3   
   1400333ce:	int3   
   1400333cf:	int3   
   1400333d0:	rex push rbp
   1400333d2:	sub    rsp,0x20
   1400333d6:	mov    rbp,rdx
   1400333d9:	mov    eax,DWORD PTR [rbp+0x50]
   1400333dc:	and    eax,0x1
   1400333df:	test   eax,eax
   1400333e1:	je     0x1400333f7
   1400333e3:	and    DWORD PTR [rbp+0x50],0xfffffffe
   1400333e7:	mov    rcx,QWORD PTR [rbp+0x40]
   1400333eb:	add    rcx,0x98
   1400333f2:	call   0x140018fc0
   1400333f7:	add    rsp,0x20
   1400333fb:	pop    rbp
   1400333fc:	ret    
   1400333fd:	int3   
   1400333fe:	int3   
   1400333ff:	int3   
   140033400:	mov    rcx,QWORD PTR [rdx+0x40]
   140033407:	jmp    0x140018ef0
   14003340c:	int3   
   14003340d:	int3   
   14003340e:	int3   
   14003340f:	int3   
   140033410:	mov    rcx,QWORD PTR [rdx+0x40]
   140033417:	jmp    0x140018f30
   14003341c:	int3   
   14003341d:	int3   
   14003341e:	int3   
   14003341f:	int3   
   140033420:	mov    rcx,QWORD PTR [rdx+0x40]
   140033427:	jmp    0x140018f00
   14003342c:	int3   
   14003342d:	int3   
   14003342e:	int3   
   14003342f:	int3   
   140033430:	mov    rcx,QWORD PTR [rdx+0x40]
   140033437:	jmp    0x140018f10
   14003343c:	int3   
   14003343d:	int3   
   14003343e:	int3   
   14003343f:	int3   
   140033440:	mov    rcx,QWORD PTR [rdx+0x40]
   140033447:	jmp    0x140019030
   14003344c:	int3   
   14003344d:	int3   
   14003344e:	int3   
   14003344f:	int3   
   140033450:	mov    rcx,QWORD PTR [rdx+0x40]
   140033457:	jmp    0x140019160
   14003345c:	int3   
   14003345d:	int3   
   14003345e:	int3   
   14003345f:	int3   
   140033460:	mov    rcx,QWORD PTR [rdx+0x40]
   140033467:	jmp    0x1400191a0
   14003346c:	int3   
   14003346d:	int3   
   14003346e:	int3   
   14003346f:	int3   
   140033470:	mov    rcx,QWORD PTR [rdx+0x40]
   140033477:	jmp    0x140019260
   14003347c:	mov    rcx,QWORD PTR [rdx+0x40]
   140033483:	jmp    0x1400191e0
   140033488:	int3   
   140033489:	int3   
   14003348a:	int3   
   14003348b:	int3   
   14003348c:	int3   
   14003348d:	int3   
   14003348e:	int3   
   14003348f:	int3   
   140033490:	mov    rcx,QWORD PTR [rdx+0x40]
   140033497:	jmp    0x140019260
   14003349c:	int3   
   14003349d:	int3   
   14003349e:	int3   
   14003349f:	int3   
   1400334a0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400334a7:	jmp    0x140019260
   1400334ac:	mov    rcx,QWORD PTR [rdx+0x40]
   1400334b3:	jmp    0x140019220
   1400334b8:	int3   
   1400334b9:	int3   
   1400334ba:	int3   
   1400334bb:	int3   
   1400334bc:	int3   
   1400334bd:	int3   
   1400334be:	int3   
   1400334bf:	int3   
   1400334c0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400334c7:	jmp    0x140019260
   1400334cc:	int3   
   1400334cd:	int3   
   1400334ce:	int3   
   1400334cf:	int3   
   1400334d0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400334d7:	jmp    0x140019280
   1400334dc:	int3   
   1400334dd:	int3   
   1400334de:	int3   
   1400334df:	int3   
   1400334e0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400334e7:	jmp    0x140019380
   1400334ec:	int3   
   1400334ed:	int3   
   1400334ee:	int3   
   1400334ef:	int3   
   1400334f0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400334f7:	jmp    0x1400191d0
   1400334fc:	int3   
   1400334fd:	int3   
   1400334fe:	int3   
   1400334ff:	int3   
   140033500:	mov    rcx,QWORD PTR [rdx+0x40]
   140033507:	jmp    0x1400191d0
   14003350c:	int3   
   14003350d:	int3   
   14003350e:	int3   
   14003350f:	int3   
   140033510:	mov    rcx,QWORD PTR [rdx+0x50]
   140033517:	jmp    0x140016dd0
   14003351c:	int3   
   14003351d:	int3   
   14003351e:	int3   
   14003351f:	int3   
   140033520:	mov    rcx,QWORD PTR [rdx+0xb0]
   140033527:	add    rcx,0x8
   14003352b:	jmp    0x140017f90
   140033530:	lea    rcx,[rdx+0x30]
   140033537:	jmp    0x140017a30
   14003353c:	lea    rcx,[rdx+0x30]
   140033543:	add    rcx,0x10
   140033547:	jmp    0x140016e50
   14003354c:	int3   
   14003354d:	int3   
   14003354e:	int3   
   14003354f:	int3   
   140033550:	mov    rcx,QWORD PTR [rdx+0x40]
   140033557:	rex.W jmp QWORD PTR [rip+0x2d0a]        # 0x140036268
   14003355e:	int3   
   14003355f:	int3   
   140033560:	rex push rbp
   140033562:	sub    rsp,0x20
   140033566:	mov    rbp,rdx
   140033569:	mov    rdx,QWORD PTR [rbp+0x40]
   14003356d:	mov    rcx,QWORD PTR [rbp+0x50]
   140033571:	call   0x1400193a0
   140033576:	add    rsp,0x20
   14003357a:	pop    rbp
   14003357b:	ret    
   14003357c:	int3   
   14003357d:	int3   
   14003357e:	int3   
   14003357f:	int3   
   140033580:	rex push rbp
   140033582:	sub    rsp,0x20
   140033586:	mov    rbp,rdx
   140033589:	mov    rdx,QWORD PTR [rbp+0x40]
   14003358d:	mov    rcx,QWORD PTR [rbp+0x50]
   140033591:	call   0x1400193a0
   140033596:	add    rsp,0x20
   14003359a:	pop    rbp
   14003359b:	ret    
   14003359c:	int3   
   14003359d:	int3   
   14003359e:	int3   
   14003359f:	int3   
   1400335a0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400335a7:	jmp    0x140017100
   1400335ac:	int3   
   1400335ad:	int3   
   1400335ae:	int3   
   1400335af:	int3   
   1400335b0:	mov    rcx,QWORD PTR [rdx+0x90]
   1400335b7:	jmp    0x140018020
   1400335bc:	lea    rcx,[rdx+0x40]
   1400335c3:	jmp    0x140017230
   1400335c8:	lea    rcx,[rdx+0x50]
   1400335cf:	jmp    0x140019030
   1400335d4:	int3   
   1400335d5:	int3   
   1400335d6:	int3   
   1400335d7:	int3   
   1400335d8:	int3   
   1400335d9:	int3   
   1400335da:	int3   
   1400335db:	int3   
   1400335dc:	int3   
   1400335dd:	int3   
   1400335de:	int3   
   1400335df:	int3   
   1400335e0:	mov    rcx,QWORD PTR [rdx+0x90]
   1400335e7:	jmp    0x1400180b0
   1400335ec:	lea    rcx,[rdx+0x40]
   1400335f3:	jmp    0x140017270
   1400335f8:	lea    rcx,[rdx+0x50]
   1400335ff:	jmp    0x140019030
   140033604:	int3   
   140033605:	int3   
   140033606:	int3   
   140033607:	int3   
   140033608:	int3   
   140033609:	int3   
   14003360a:	int3   
   14003360b:	int3   
   14003360c:	int3   
   14003360d:	int3   
   14003360e:	int3   
   14003360f:	int3   
   140033610:	mov    rcx,QWORD PTR [rdx+0x90]
   140033617:	jmp    0x140018180
   14003361c:	lea    rcx,[rdx+0x40]
   140033623:	jmp    0x140019030
   140033628:	int3   
   140033629:	int3   
   14003362a:	int3   
   14003362b:	int3   
   14003362c:	int3   
   14003362d:	int3   
   14003362e:	int3   
   14003362f:	int3   
   140033630:	mov    rcx,QWORD PTR [rdx+0x40]
   140033637:	jmp    0x1400173c0
   14003363c:	int3   
   14003363d:	int3   
   14003363e:	int3   
   14003363f:	int3   
   140033640:	mov    rcx,QWORD PTR [rdx+0x58]
   140033647:	jmp    0x1400173c0
   14003364c:	mov    rcx,QWORD PTR [rdx+0x50]
   140033653:	jmp    0x1400173c0
   140033658:	mov    rcx,QWORD PTR [rdx+0x50]
   14003365f:	add    rcx,0x68
   140033663:	jmp    0x140017100
   140033668:	int3   
   140033669:	int3   
   14003366a:	int3   
   14003366b:	int3   
   14003366c:	int3   
   14003366d:	int3   
   14003366e:	int3   
   14003366f:	int3   
   140033670:	mov    QWORD PTR [rsp+0x10],rdx
   140033675:	push   rbp
   140033676:	sub    rsp,0x30
   14003367a:	mov    rbp,rdx
   14003367d:	mov    rcx,QWORD PTR [rbp+0x50]
   140033681:	call   0x14001d990
   140033686:	xor    edx,edx
   140033688:	xor    ecx,ecx
   14003368a:	call   0x140030478
   14003368f:	nop
   140033690:	mov    QWORD PTR [rsp+0x10],rdx
   140033695:	push   rbp
   140033696:	sub    rsp,0x30
   14003369a:	mov    rbp,rdx
   14003369d:	mov    rcx,QWORD PTR [rbp+0x50]
   1400336a1:	call   0x14001d9d0
   1400336a6:	xor    edx,edx
   1400336a8:	xor    ecx,ecx
   1400336aa:	call   0x140030478
   1400336af:	nop
   1400336b0:	mov    rcx,QWORD PTR [rdx+0x50]
   1400336b7:	rex.W jmp QWORD PTR [rip+0x2f3a]        # 0x1400365f8
   1400336be:	int3   
   1400336bf:	int3   
   1400336c0:	mov    rcx,QWORD PTR [rdx+0x60]
   1400336c7:	rex.W jmp QWORD PTR [rip+0x2f2a]        # 0x1400365f8
   1400336ce:	int3   
   1400336cf:	int3   
   1400336d0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400336d7:	rex.W jmp QWORD PTR [rip+0x2e5a]        # 0x140036538
   1400336de:	int3   
   1400336df:	int3   
   1400336e0:	lea    rcx,[rdx+0x60]
   1400336e7:	jmp    0x140017100
   1400336ec:	int3   
   1400336ed:	int3   
   1400336ee:	int3   
   1400336ef:	int3   
   1400336f0:	lea    rcx,[rdx+0x28]
   1400336f7:	jmp    0x140017100
   1400336fc:	int3   
   1400336fd:	int3   
   1400336fe:	int3   
   1400336ff:	int3   
   140033700:	lea    rcx,[rdx+0x28]
   140033707:	jmp    0x140017100
   14003370c:	int3   
   14003370d:	int3   
   14003370e:	int3   
   14003370f:	int3   
   140033710:	lea    rcx,[rdx+0x48]
   140033717:	jmp    0x140017100
   14003371c:	lea    rcx,[rdx+0x30]
   140033723:	jmp    0x140018ef0
   140033728:	int3   
   140033729:	int3   
   14003372a:	int3   
   14003372b:	int3   
   14003372c:	int3   
   14003372d:	int3   
   14003372e:	int3   
   14003372f:	int3   
   140033730:	mov    rcx,QWORD PTR [rdx+0x40]
   140033737:	jmp    0x140019260
   14003373c:	mov    rcx,QWORD PTR [rdx+0x40]
   140033743:	add    rcx,0x18
   140033747:	jmp    0x140017100
   14003374c:	int3   
   14003374d:	int3   
   14003374e:	int3   
   14003374f:	int3   
   140033750:	lea    rcx,[rdx+0x30]
   140033757:	jmp    0x140017100
   14003375c:	mov    rcx,QWORD PTR [rdx+0x60]
   140033763:	jmp    0x140019260
   140033768:	mov    rcx,QWORD PTR [rdx+0x60]
   14003376f:	add    rcx,0x18
   140033773:	jmp    0x140017100
   140033778:	int3   
   140033779:	int3   
   14003377a:	int3   
   14003377b:	int3   
   14003377c:	int3   
   14003377d:	int3   
   14003377e:	int3   
   14003377f:	int3   
   140033780:	mov    rcx,QWORD PTR [rdx+0x40]
   140033787:	jmp    0x140019260
   14003378c:	int3   
   14003378d:	int3   
   14003378e:	int3   
   14003378f:	int3   
   140033790:	mov    rcx,QWORD PTR [rdx+0x40]
   140033797:	jmp    0x140019260
   14003379c:	int3   
   14003379d:	int3   
   14003379e:	int3   
   14003379f:	int3   
   1400337a0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400337a7:	jmp    0x140018e90
   1400337ac:	int3   
   1400337ad:	int3   
   1400337ae:	int3   
   1400337af:	int3   
   1400337b0:	lea    rcx,[rdx+0x40]
   1400337b7:	jmp    0x140017100
   1400337bc:	lea    rcx,[rdx+0x80]
   1400337c3:	jmp    0x140017100
   1400337c8:	int3   
   1400337c9:	int3   
   1400337ca:	int3   
   1400337cb:	int3   
   1400337cc:	int3   
   1400337cd:	int3   
   1400337ce:	int3   
   1400337cf:	int3   
   1400337d0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400337d7:	jmp    0x140017100
   1400337dc:	mov    rcx,QWORD PTR [rdx+0x48]
   1400337e3:	add    rcx,0x8
   1400337e7:	jmp    0x140017f90
   1400337ec:	int3   
   1400337ed:	int3   
   1400337ee:	int3   
   1400337ef:	int3   
   1400337f0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400337f7:	rex.W jmp QWORD PTR [rip+0x29f2]        # 0x1400361f0
   1400337fe:	mov    rcx,QWORD PTR [rdx+0x40]
   140033805:	add    rcx,0x68
   140033809:	jmp    0x140016de0
   14003380e:	int3   
   14003380f:	int3   
   140033810:	mov    rcx,QWORD PTR [rdx+0x50]
   140033817:	add    rcx,0x10
   14003381b:	jmp    0x140016e50
   140033820:	mov    rcx,QWORD PTR [rdx+0x58]
   140033827:	jmp    0x140017100
   14003382c:	int3   
   14003382d:	int3   
   14003382e:	int3   
   14003382f:	int3   
   140033830:	mov    rcx,QWORD PTR [rdx+0x40]
   140033837:	jmp    0x140017350
   14003383c:	int3   
   14003383d:	int3   
   14003383e:	int3   
   14003383f:	int3   
   140033840:	mov    rcx,QWORD PTR [rdx+0x40]
   140033847:	jmp    0x1400181f0
   14003384c:	int3   
   14003384d:	int3   
   14003384e:	int3   
   14003384f:	int3   
   140033850:	mov    rcx,QWORD PTR [rdx+0x40]
   140033857:	jmp    0x1400181f0
   14003385c:	int3   
   14003385d:	int3   
   14003385e:	int3   
   14003385f:	int3   
   140033860:	mov    rcx,QWORD PTR [rdx+0x40]
   140033867:	add    rcx,0x8
   14003386b:	jmp    0x140017f90
   140033870:	mov    rcx,QWORD PTR [rdx+0x40]
   140033877:	jmp    0x140017100
   14003387c:	int3   
   14003387d:	int3   
   14003387e:	int3   
   14003387f:	int3   
   140033880:	mov    rcx,QWORD PTR [rdx+0x60]
   140033887:	jmp    0x140018020
   14003388c:	mov    QWORD PTR [rsp+0x10],rdx
   140033891:	push   rbp
   140033892:	sub    rsp,0x20
   140033896:	mov    rbp,rdx
   140033899:	lea    rax,[rip+0xfffffffffffe4ebd]        # 0x14001875d
   1400338a0:	add    rsp,0x20
   1400338a4:	pop    rbp
   1400338a5:	ret    
   1400338a6:	int3   
   1400338a7:	int3   
   1400338a8:	int3   
   1400338a9:	int3   
   1400338aa:	int3   
   1400338ab:	int3   
   1400338ac:	int3   
   1400338ad:	int3   
   1400338ae:	int3   
   1400338af:	int3   
   1400338b0:	mov    rcx,QWORD PTR [rdx+0x60]
   1400338b7:	jmp    0x1400180b0
   1400338bc:	mov    QWORD PTR [rsp+0x10],rdx
   1400338c1:	push   rbp
   1400338c2:	sub    rsp,0x20
   1400338c6:	mov    rbp,rdx
   1400338c9:	lea    rax,[rip+0xfffffffffffe4f1d]        # 0x1400187ed
   1400338d0:	add    rsp,0x20
   1400338d4:	pop    rbp
   1400338d5:	ret    
   1400338d6:	int3   
   1400338d7:	int3   
   1400338d8:	int3   
   1400338d9:	int3   
   1400338da:	int3   
   1400338db:	int3   
   1400338dc:	int3   
   1400338dd:	int3   
   1400338de:	int3   
   1400338df:	int3   
   1400338e0:	mov    rcx,QWORD PTR [rdx+0x60]
   1400338e7:	jmp    0x140018140
   1400338ec:	mov    QWORD PTR [rsp+0x10],rdx
   1400338f1:	push   rbp
   1400338f2:	sub    rsp,0x20
   1400338f6:	mov    rbp,rdx
   1400338f9:	lea    rax,[rip+0xfffffffffffe4f7d]        # 0x14001887d
   140033900:	add    rsp,0x20
   140033904:	pop    rbp
   140033905:	ret    
   140033906:	int3   
   140033907:	int3   
   140033908:	int3   
   140033909:	int3   
   14003390a:	int3   
   14003390b:	int3   
   14003390c:	int3   
   14003390d:	int3   
   14003390e:	int3   
   14003390f:	int3   
   140033910:	mov    rcx,QWORD PTR [rdx+0x60]
   140033917:	jmp    0x140018180
   14003391c:	mov    QWORD PTR [rsp+0x10],rdx
   140033921:	push   rbp
   140033922:	sub    rsp,0x20
   140033926:	mov    rbp,rdx
   140033929:	lea    rax,[rip+0xfffffffffffe4ffd]        # 0x14001892d
   140033930:	add    rsp,0x20
   140033934:	pop    rbp
   140033935:	ret    
   140033936:	int3   
   140033937:	int3   
   140033938:	int3   
   140033939:	int3   
   14003393a:	int3   
   14003393b:	int3   
   14003393c:	int3   
   14003393d:	int3   
   14003393e:	int3   
   14003393f:	int3   
   140033940:	mov    rcx,QWORD PTR [rdx+0x40]
   140033947:	rex.W jmp QWORD PTR [rip+0x2d82]        # 0x1400366d0
   14003394e:	mov    rcx,QWORD PTR [rdx+0x40]
   140033955:	add    rcx,0x8
   140033959:	jmp    0x140019370
   14003395e:	mov    rcx,QWORD PTR [rdx+0x40]
   140033965:	add    rcx,0x18
   140033969:	jmp    0x140017100
   14003396e:	mov    rcx,QWORD PTR [rdx+0x40]
   140033975:	add    rcx,0x38
   140033979:	jmp    0x140018ed0
   14003397e:	mov    rcx,QWORD PTR [rdx+0x40]
   140033985:	add    rcx,0x40
   140033989:	jmp    0x140017100
   14003398e:	mov    rcx,QWORD PTR [rdx+0x40]
   140033995:	add    rcx,0x60
   140033999:	jmp    0x140018ed0
   14003399e:	mov    rcx,QWORD PTR [rdx+0x40]
   1400339a5:	add    rcx,0x68
   1400339a9:	jmp    0x140017100
   1400339ae:	int3   
   1400339af:	int3   
   1400339b0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400339b7:	rex.W jmp QWORD PTR [rip+0x2c3a]        # 0x1400365f8
   1400339be:	int3   
   1400339bf:	int3   
   1400339c0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400339c7:	rex.W jmp QWORD PTR [rip+0x2c2a]        # 0x1400365f8
   1400339ce:	int3   
   1400339cf:	int3   
   1400339d0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400339d7:	rex.W jmp QWORD PTR [rip+0x2b5a]        # 0x140036538
   1400339de:	int3   
   1400339df:	int3   
   1400339e0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400339e7:	jmp    0x140018200
   1400339ec:	mov    QWORD PTR [rsp+0x10],rdx
   1400339f1:	push   rbp
   1400339f2:	sub    rsp,0x20
   1400339f6:	mov    rbp,rdx
   1400339f9:	lea    rax,[rip+0xfffffffffffe5563]        # 0x140018f63
   140033a00:	add    rsp,0x20
   140033a04:	pop    rbp
   140033a05:	ret    
   140033a06:	int3   
   140033a07:	mov    QWORD PTR [rsp+0x10],rdx
   140033a0c:	push   rbp
   140033a0d:	sub    rsp,0x20
   140033a11:	mov    rbp,rdx
   140033a14:	lea    rax,[rip+0xfffffffffffe5558]        # 0x140018f73
   140033a1b:	add    rsp,0x20
   140033a1f:	pop    rbp
   140033a20:	ret    
   140033a21:	int3   
   140033a22:	int3   
   140033a23:	int3   
   140033a24:	int3   
   140033a25:	int3   
   140033a26:	int3   
   140033a27:	int3   
   140033a28:	int3   
   140033a29:	int3   
   140033a2a:	int3   
   140033a2b:	int3   
   140033a2c:	int3   
   140033a2d:	int3   
   140033a2e:	int3   
   140033a2f:	int3   
   140033a30:	mov    rcx,QWORD PTR [rdx+0x40]
   140033a37:	rex.W jmp QWORD PTR [rip+0x2bba]        # 0x1400365f8
   140033a3e:	int3   
   140033a3f:	int3   
   140033a40:	mov    rcx,QWORD PTR [rdx+0x40]
   140033a47:	rex.W jmp QWORD PTR [rip+0x2baa]        # 0x1400365f8
   140033a4e:	int3   
   140033a4f:	int3   
   140033a50:	lea    rcx,[rdx+0x28]
   140033a57:	jmp    0x140017100
   140033a5c:	mov    rcx,QWORD PTR [rdx+0x60]
   140033a63:	jmp    0x140030282
   140033a68:	lea    rcx,[rdx+0x28]
   140033a6f:	jmp    0x140017040
   140033a74:	lea    rcx,[rdx+0x28]
   140033a7b:	jmp    0x140017100
   140033a80:	mov    rcx,QWORD PTR [rdx+0x60]
   140033a87:	add    rcx,0x8
   140033a8b:	jmp    0x140017f90
   140033a90:	rex push rbp
   140033a92:	sub    rsp,0x20
   140033a96:	mov    rbp,rdx
   140033a99:	mov    eax,DWORD PTR [rbp+0xa0]
   140033a9f:	and    eax,0x1
   140033aa2:	test   eax,eax
   140033aa4:	je     0x140033ab6
   140033aa6:	and    DWORD PTR [rbp+0xa0],0xfffffffe
   140033aad:	lea    rcx,[rbp+0x68]
   140033ab1:	call   0x140017100
   140033ab6:	add    rsp,0x20
   140033aba:	pop    rbp
   140033abb:	ret    
   140033abc:	rex push rbp
   140033abe:	sub    rsp,0x20
   140033ac2:	mov    rbp,rdx
   140033ac5:	mov    eax,DWORD PTR [rbp+0xa0]
   140033acb:	and    eax,0x2
   140033ace:	test   eax,eax
   140033ad0:	je     0x140033ae2
   140033ad2:	and    DWORD PTR [rbp+0xa0],0xfffffffd
   140033ad9:	lea    rcx,[rbp+0x48]
   140033add:	call   0x140017100
   140033ae2:	add    rsp,0x20
   140033ae6:	pop    rbp
   140033ae7:	ret    
   140033ae8:	int3   
   140033ae9:	int3   
   140033aea:	int3   
   140033aeb:	int3   
   140033aec:	int3   
   140033aed:	int3   
   140033aee:	int3   
   140033aef:	int3   
   140033af0:	lea    rcx,[rdx+0x30]
   140033af7:	rex.W jmp QWORD PTR [rip+0x2a3a]        # 0x140036538
   140033afe:	int3   
   140033aff:	int3   
   140033b00:	lea    rcx,[rdx+0x28]
   140033b07:	jmp    0x140018f00
   140033b0c:	int3   
   140033b0d:	int3   
   140033b0e:	int3   
   140033b0f:	int3   
   140033b10:	lea    rcx,[rdx+0x20]
   140033b17:	jmp    0x140018fd0
   140033b1c:	int3   
   140033b1d:	int3   
   140033b1e:	int3   
   140033b1f:	int3   
   140033b20:	mov    rcx,QWORD PTR [rdx+0x40]
   140033b27:	jmp    0x140017350
   140033b2c:	int3   
   140033b2d:	int3   
   140033b2e:	int3   
   140033b2f:	int3   
   140033b30:	mov    rcx,QWORD PTR [rdx+0x40]
   140033b37:	add    rcx,0x8
   140033b3b:	jmp    0x140017f90
   140033b40:	mov    rcx,QWORD PTR [rdx+0x40]
   140033b47:	jmp    0x140017100
   140033b4c:	int3   
   140033b4d:	int3   
   140033b4e:	int3   
   140033b4f:	int3   
   140033b50:	mov    rcx,QWORD PTR [rdx+0x40]
   140033b57:	rex.W jmp QWORD PTR [rip+0x2a9a]        # 0x1400365f8
   140033b5e:	int3   
   140033b5f:	int3   
   140033b60:	mov    rcx,QWORD PTR [rdx+0x40]
   140033b67:	rex.W jmp QWORD PTR [rip+0x2a8a]        # 0x1400365f8
   140033b6e:	int3   
   140033b6f:	int3   
   140033b70:	lea    rcx,[rdx+0x40]
   140033b77:	jmp    0x140017100
   140033b7c:	lea    rcx,[rdx+0x60]
   140033b83:	jmp    0x140017100
   140033b88:	lea    rcx,[rdx+0x80]
   140033b8f:	jmp    0x140017100
   140033b94:	lea    rcx,[rdx+0xa0]
   140033b9b:	jmp    0x140017100
   140033ba0:	lea    rcx,[rdx+0xc0]
   140033ba7:	jmp    0x140017100
   140033bac:	lea    rcx,[rdx+0xe0]
   140033bb3:	jmp    0x140017100
   140033bb8:	lea    rcx,[rdx+0x100]
   140033bbf:	jmp    0x140017100
   140033bc4:	lea    rcx,[rdx+0x120]
   140033bcb:	jmp    0x140017100
   140033bd0:	lea    rcx,[rdx+0x140]
   140033bd7:	jmp    0x140017100
   140033bdc:	lea    rcx,[rdx+0x160]
   140033be3:	jmp    0x140017100
   140033be8:	lea    rcx,[rdx+0x180]
   140033bef:	jmp    0x140017100
   140033bf4:	lea    rcx,[rdx+0x1a0]
   140033bfb:	jmp    0x140017100
   140033c00:	lea    rcx,[rdx+0x1c0]
   140033c07:	jmp    0x140017100
   140033c0c:	lea    rcx,[rdx+0x1e0]
   140033c13:	jmp    0x140017100
   140033c18:	lea    rcx,[rdx+0x200]
   140033c1f:	jmp    0x140017100
   140033c24:	lea    rcx,[rdx+0x220]
   140033c2b:	jmp    0x140017100
   140033c30:	lea    rcx,[rdx+0x240]
   140033c37:	jmp    0x140017100
   140033c3c:	lea    rcx,[rdx+0x260]
   140033c43:	jmp    0x140017100
   140033c48:	lea    rcx,[rdx+0x280]
   140033c4f:	jmp    0x140017100
   140033c54:	lea    rcx,[rdx+0x2a0]
   140033c5b:	jmp    0x140017100
   140033c60:	lea    rcx,[rdx+0x2c0]
   140033c67:	jmp    0x140017100
   140033c6c:	lea    rcx,[rdx+0x2e0]
   140033c73:	jmp    0x140017100
   140033c78:	lea    rcx,[rdx+0x300]
   140033c7f:	jmp    0x140017100
   140033c84:	lea    rcx,[rdx+0x320]
   140033c8b:	jmp    0x140017100
   140033c90:	lea    rcx,[rdx+0x340]
   140033c97:	jmp    0x140017100
   140033c9c:	lea    rcx,[rdx+0x360]
   140033ca3:	jmp    0x140017100
   140033ca8:	lea    rcx,[rdx+0x380]
   140033caf:	jmp    0x140017100
   140033cb4:	lea    rcx,[rdx+0x3a0]
   140033cbb:	jmp    0x140017100
   140033cc0:	lea    rcx,[rdx+0x3c0]
   140033cc7:	jmp    0x140017100
   140033ccc:	lea    rcx,[rdx+0x3e0]
   140033cd3:	jmp    0x140017100
   140033cd8:	lea    rcx,[rdx+0x400]
   140033cdf:	jmp    0x140017100
   140033ce4:	lea    rcx,[rdx+0x420]
   140033ceb:	jmp    0x140017100
   140033cf0:	lea    rcx,[rdx+0x440]
   140033cf7:	jmp    0x140017100
   140033cfc:	lea    rcx,[rdx+0x460]
   140033d03:	jmp    0x140017100
   140033d08:	lea    rcx,[rdx+0x480]
   140033d0f:	jmp    0x140017100
   140033d14:	lea    rcx,[rdx+0x4a0]
   140033d1b:	jmp    0x140017100
   140033d20:	lea    rcx,[rdx+0x4c0]
   140033d27:	jmp    0x140017100
   140033d2c:	lea    rcx,[rdx+0x4e0]
   140033d33:	jmp    0x140017100
   140033d38:	lea    rcx,[rdx+0x500]
   140033d3f:	jmp    0x140017100
   140033d44:	lea    rcx,[rdx+0x520]
   140033d4b:	jmp    0x140017100
   140033d50:	lea    rcx,[rdx+0x540]
   140033d57:	jmp    0x140017100
   140033d5c:	lea    rcx,[rdx+0x560]
   140033d63:	jmp    0x140017100
   140033d68:	lea    rcx,[rdx+0x580]
   140033d6f:	jmp    0x140017100
   140033d74:	lea    rcx,[rdx+0x5a0]
   140033d7b:	jmp    0x140017100
   140033d80:	lea    rcx,[rdx+0x5c0]
   140033d87:	jmp    0x140017100
   140033d8c:	lea    rcx,[rdx+0x5e0]
   140033d93:	jmp    0x140017100
   140033d98:	lea    rcx,[rdx+0x600]
   140033d9f:	jmp    0x140017100
   140033da4:	lea    rcx,[rdx+0x620]
   140033dab:	jmp    0x140017100
   140033db0:	lea    rcx,[rdx+0x640]
   140033db7:	jmp    0x140017100
   140033dbc:	lea    rcx,[rdx+0x660]
   140033dc3:	jmp    0x140017100
   140033dc8:	lea    rcx,[rdx+0x680]
   140033dcf:	jmp    0x140017100
   140033dd4:	lea    rcx,[rdx+0x6a0]
   140033ddb:	jmp    0x140017100
   140033de0:	lea    rcx,[rdx+0x6c0]
   140033de7:	jmp    0x140017100
   140033dec:	lea    rcx,[rdx+0x6e0]
   140033df3:	jmp    0x140017100
   140033df8:	lea    rcx,[rdx+0x700]
   140033dff:	jmp    0x140017100
   140033e04:	lea    rcx,[rdx+0x720]
   140033e0b:	jmp    0x140017100
   140033e10:	lea    rcx,[rdx+0x740]
   140033e17:	jmp    0x140017100
   140033e1c:	lea    rcx,[rdx+0x760]
   140033e23:	jmp    0x140017100
   140033e28:	lea    rcx,[rdx+0x780]
   140033e2f:	jmp    0x140017100
   140033e34:	lea    rcx,[rdx+0x7a0]
   140033e3b:	jmp    0x140017100
   140033e40:	lea    rcx,[rdx+0x7c0]
   140033e47:	jmp    0x140017100
   140033e4c:	lea    rcx,[rdx+0x7e0]
   140033e53:	jmp    0x140017100
   140033e58:	lea    rcx,[rdx+0x800]
   140033e5f:	jmp    0x140017100
   140033e64:	lea    rcx,[rdx+0x820]
   140033e6b:	jmp    0x140017100
   140033e70:	lea    rcx,[rdx+0x840]
   140033e77:	jmp    0x140017100
   140033e7c:	lea    rcx,[rdx+0x860]
   140033e83:	jmp    0x140017100
   140033e88:	lea    rcx,[rdx+0x880]
   140033e8f:	jmp    0x140017100
   140033e94:	lea    rcx,[rdx+0x8a0]
   140033e9b:	jmp    0x140017100
   140033ea0:	lea    rcx,[rdx+0x8c0]
   140033ea7:	jmp    0x140017100
   140033eac:	lea    rcx,[rdx+0x8e0]
   140033eb3:	jmp    0x140017100
   140033eb8:	lea    rcx,[rdx+0x900]
   140033ebf:	jmp    0x140017100
   140033ec4:	lea    rcx,[rdx+0x920]
   140033ecb:	jmp    0x140017100
   140033ed0:	lea    rcx,[rdx+0x940]
   140033ed7:	jmp    0x140017100
   140033edc:	lea    rcx,[rdx+0x960]
   140033ee3:	jmp    0x140017100
   140033ee8:	lea    rcx,[rdx+0x980]
   140033eef:	jmp    0x140017100
   140033ef4:	lea    rcx,[rdx+0x9a0]
   140033efb:	jmp    0x140017100
   140033f00:	lea    rcx,[rdx+0x9c0]
   140033f07:	jmp    0x140017100
   140033f0c:	rex push rbp
   140033f0e:	sub    rsp,0x20
   140033f12:	mov    rbp,rdx
   140033f15:	lea    r9,[rip+0xfffffffffffe31e4]        # 0x140017100
   140033f1c:	mov    r8d,0x4e
   140033f22:	mov    edx,0x20
   140033f27:	lea    rcx,[rbp+0x40]
   140033f2b:	call   0x1400301b0
   140033f30:	add    rsp,0x20
   140033f34:	pop    rbp
   140033f35:	ret    
   140033f36:	int3   
   140033f37:	int3   
   140033f38:	int3   
   140033f39:	int3   
   140033f3a:	int3   
   140033f3b:	int3   
   140033f3c:	int3   
   140033f3d:	int3   
   140033f3e:	int3   
   140033f3f:	int3   
   140033f40:	mov    QWORD PTR [rsp+0x10],rdx
   140033f45:	push   rbp
   140033f46:	sub    rsp,0x20
   140033f4a:	mov    rbp,rdx
   140033f4d:	mov    rcx,QWORD PTR [rbp+0x58]
   140033f51:	call   0x140030282
   140033f56:	xor    edx,edx
   140033f58:	xor    ecx,ecx
   140033f5a:	call   0x140030478
   140033f5f:	nop
   140033f60:	mov    QWORD PTR [rsp+0x10],rdx
   140033f65:	push   rbp
   140033f66:	sub    rsp,0x20
   140033f6a:	mov    rbp,rdx
   140033f6d:	mov    rcx,QWORD PTR [rbp+0x58]
   140033f71:	call   0x140030282
   140033f76:	xor    edx,edx
   140033f78:	xor    ecx,ecx
   140033f7a:	call   0x140030478
   140033f7f:	nop
   140033f80:	mov    QWORD PTR [rsp+0x10],rdx
   140033f85:	push   rbp
   140033f86:	sub    rsp,0x20
   140033f8a:	mov    rbp,rdx
   140033f8d:	mov    rcx,QWORD PTR [rbp+0x68]
   140033f91:	mov    QWORD PTR [rbp+0x68],rcx
   140033f95:	xor    eax,eax
   140033f97:	inc    rcx
   140033f9a:	je     0x140033fb2
   140033f9c:	cmp    rcx,0xffffffffffffffff
   140033fa0:	ja     0x140033fac
   140033fa2:	call   0x14003027c
   140033fa7:	test   rax,rax
   140033faa:	jne    0x140033fb2
   140033fac:	call   QWORD PTR [rip+0x2266]        # 0x140036218
   140033fb2:	mov    QWORD PTR [rbp+0x78],rax
   140033fb6:	lea    rax,[rip+0xfffffffffffe86d9]        # 0x14001c696
   140033fbd:	add    rsp,0x20
   140033fc1:	pop    rbp
   140033fc2:	ret    
   140033fc3:	int3   
   140033fc4:	mov    QWORD PTR [rsp+0x10],rdx
   140033fc9:	push   rbx
   140033fca:	push   rbp
   140033fcb:	sub    rsp,0x28
   140033fcf:	mov    rbp,rdx
   140033fd2:	mov    rbx,QWORD PTR [rbp+0x60]
   140033fd6:	cmp    QWORD PTR [rbx+0x18],0x10
   140033fdb:	jb     0x140033fe5
   140033fdd:	mov    rcx,QWORD PTR [rbx]
   140033fe0:	call   0x140030282
   140033fe5:	mov    QWORD PTR [rbx+0x18],0xf
   140033fed:	mov    QWORD PTR [rbx+0x10],0x0
   140033ff5:	mov    BYTE PTR [rbx],0x0
   140033ff8:	xor    edx,edx
   140033ffa:	xor    ecx,ecx
   140033ffc:	call   0x140030478
   140034001:	nop
   140034002:	int3   
   140034003:	int3   
   140034004:	int3   
   140034005:	int3   
   140034006:	int3   
   140034007:	int3   
   140034008:	int3   
   140034009:	int3   
   14003400a:	int3   
   14003400b:	int3   
   14003400c:	int3   
   14003400d:	int3   
   14003400e:	int3   
   14003400f:	int3   
   140034010:	lea    rcx,[rdx+0x38]
   140034017:	jmp    0x140017100
   14003401c:	int3   
   14003401d:	int3   
   14003401e:	int3   
   14003401f:	int3   
   140034020:	mov    rcx,QWORD PTR [rdx+0xc0]
   140034027:	jmp    0x140030282
   14003402c:	rex push rbp
   14003402e:	sub    rsp,0x20
   140034032:	mov    rbp,rdx
   140034035:	mov    eax,DWORD PTR [rbp+0xb0]
   14003403b:	and    eax,0x1
   14003403e:	test   eax,eax
   140034040:	je     0x140034053
   140034042:	and    DWORD PTR [rbp+0xb0],0xfffffffe
   140034049:	lea    rcx,[rbp+0x28]
   14003404d:	call   QWORD PTR [rip+0x21ed]        # 0x140036240
   140034053:	add    rsp,0x20
   140034057:	pop    rbp
   140034058:	ret    
   140034059:	int3   
   14003405a:	int3   
   14003405b:	int3   
   14003405c:	int3   
   14003405d:	int3   
   14003405e:	int3   
   14003405f:	int3   
   140034060:	mov    QWORD PTR [rsp+0x10],rdx
   140034065:	push   rbp
   140034066:	sub    rsp,0x20
   14003406a:	mov    rbp,rdx
   14003406d:	mov    rcx,QWORD PTR [rbp+0x90]
   140034074:	call   0x14001d960
   140034079:	xor    edx,edx
   14003407b:	xor    ecx,ecx
   14003407d:	call   0x140030478
   140034082:	nop
   140034083:	int3   
   140034084:	int3   
   140034085:	int3   
   140034086:	int3   
   140034087:	int3   
   140034088:	int3   
   140034089:	int3   
   14003408a:	int3   
   14003408b:	int3   
   14003408c:	int3   
   14003408d:	int3   
   14003408e:	int3   
   14003408f:	int3   
   140034090:	mov    rcx,QWORD PTR [rdx+0x70]
   140034097:	jmp    0x140017100
   14003409c:	lea    rcx,[rdx+0x30]
   1400340a3:	jmp    0x140017100
   1400340a8:	int3   
   1400340a9:	int3   
   1400340aa:	int3   
   1400340ab:	int3   
   1400340ac:	int3   
   1400340ad:	int3   
   1400340ae:	int3   
   1400340af:	int3   
   1400340b0:	mov    QWORD PTR [rsp+0x10],rdx
   1400340b5:	push   rbp
   1400340b6:	sub    rsp,0x30
   1400340ba:	mov    rbp,rdx
   1400340bd:	mov    rcx,QWORD PTR [rbp+0x80]
   1400340c4:	call   0x140030282
   1400340c9:	xor    edx,edx
   1400340cb:	xor    ecx,ecx
   1400340cd:	call   0x140030478
   1400340d2:	nop
   1400340d3:	int3   
   1400340d4:	int3   
   1400340d5:	int3   
   1400340d6:	int3   
   1400340d7:	int3   
   1400340d8:	int3   
   1400340d9:	int3   
   1400340da:	int3   
   1400340db:	int3   
   1400340dc:	int3   
   1400340dd:	int3   
   1400340de:	int3   
   1400340df:	int3   
   1400340e0:	lea    rcx,[rdx+0x20]
   1400340e7:	jmp    0x140018a80
   1400340ec:	lea    rcx,[rdx+0x50]
   1400340f3:	jmp    0x140017100
   1400340f8:	lea    rcx,[rdx+0x70]
   1400340ff:	jmp    0x140017100
   140034104:	lea    rcx,[rdx+0x70]
   14003410b:	jmp    0x1400184b0
   140034110:	lea    rcx,[rdx+0x70]
   140034117:	jmp    0x140017100
   14003411c:	int3   
   14003411d:	int3   
   14003411e:	int3   
   14003411f:	int3   
   140034120:	rex push rbp
   140034122:	sub    rsp,0x20
   140034126:	mov    rbp,rdx
   140034129:	mov    eax,DWORD PTR [rbp+0x238]
   14003412f:	and    eax,0x1
   140034132:	test   eax,eax
   140034134:	je     0x140034151
   140034136:	and    DWORD PTR [rbp+0x238],0xfffffffe
   14003413d:	lea    rcx,[rbp+0xd0]
   140034144:	add    rcx,0x98
   14003414b:	call   QWORD PTR [rip+0x204f]        # 0x1400361a0
   140034151:	add    rsp,0x20
   140034155:	pop    rbp
   140034156:	ret    
   140034157:	lea    rcx,[rdx+0xd0]
   14003415e:	add    rcx,0x20
   140034162:	rex.W jmp QWORD PTR [rip+0x1fb7]        # 0x140036120
   140034169:	mov    rcx,QWORD PTR [rdx+0x1f8]
   140034170:	rex.W jmp QWORD PTR [rip+0x2079]        # 0x1400361f0
   140034177:	lea    rcx,[rdx+0xd0]
   14003417e:	jmp    0x14001a880
   140034183:	lea    rcx,[rdx+0x30]
   14003418a:	jmp    0x140017100
   14003418f:	lea    rcx,[rdx+0x50]
   140034196:	jmp    0x140017100
   14003419b:	lea    rcx,[rdx+0x70]
   1400341a2:	jmp    0x140017100
   1400341a7:	lea    rcx,[rdx+0x30]
   1400341ae:	jmp    0x140017100
   1400341b3:	lea    rcx,[rdx+0x90]
   1400341ba:	jmp    0x140017100
   1400341bf:	lea    rcx,[rdx+0xb0]
   1400341c6:	jmp    0x140017100
   1400341cb:	int3   
   1400341cc:	int3   
   1400341cd:	int3   
   1400341ce:	int3   
   1400341cf:	int3   
   1400341d0:	lea    rcx,[rdx+0x58]
   1400341d7:	jmp    0x140017100
   1400341dc:	lea    rcx,[rdx+0x38]
   1400341e3:	jmp    0x140017100
   1400341e8:	lea    rcx,[rdx+0x58]
   1400341ef:	jmp    0x140017100
   1400341f4:	lea    rcx,[rdx+0x38]
   1400341fb:	jmp    0x140017100
   140034200:	lea    rcx,[rdx+0x58]
   140034207:	jmp    0x140017100
   14003420c:	lea    rcx,[rdx+0x38]
   140034213:	jmp    0x140017100
   140034218:	lea    rcx,[rdx+0x58]
   14003421f:	jmp    0x140017100
   140034224:	lea    rcx,[rdx+0x38]
   14003422b:	jmp    0x140017100
   140034230:	lea    rcx,[rdx+0x38]
   140034237:	jmp    0x140017100
   14003423c:	lea    rcx,[rdx+0x78]
   140034243:	jmp    0x140017100
   140034248:	lea    rcx,[rdx+0x58]
   14003424f:	jmp    0x140017100
   140034254:	int3   
   140034255:	int3   
   140034256:	int3   
   140034257:	int3   
   140034258:	int3   
   140034259:	int3   
   14003425a:	int3   
   14003425b:	int3   
   14003425c:	int3   
   14003425d:	int3   
   14003425e:	int3   
   14003425f:	int3   
   140034260:	lea    rcx,[rdx+0x28]
   140034267:	jmp    0x140018a80
   14003426c:	lea    rcx,[rdx+0x58]
   140034273:	jmp    0x140018a80
   140034278:	lea    rcx,[rdx+0x58]
   14003427f:	jmp    0x140018a80
   140034284:	lea    rcx,[rdx+0x58]
   14003428b:	jmp    0x140018a80
   140034290:	lea    rcx,[rdx+0x30]
   140034297:	jmp    0x140018b40
   14003429c:	int3   
   14003429d:	int3   
   14003429e:	int3   
   14003429f:	int3   
   1400342a0:	mov    rcx,QWORD PTR [rdx+0x48]
   1400342a7:	jmp    0x140030282
   1400342ac:	int3   
   1400342ad:	int3   
   1400342ae:	int3   
   1400342af:	int3   
   1400342b0:	mov    rcx,QWORD PTR [rdx+0x48]
   1400342b7:	jmp    0x140030282
   1400342bc:	int3   
   1400342bd:	int3   
   1400342be:	int3   
   1400342bf:	int3   
   1400342c0:	mov    rcx,QWORD PTR [rdx+0x48]
   1400342c7:	jmp    0x140030282
   1400342cc:	int3   
   1400342cd:	int3   
   1400342ce:	int3   
   1400342cf:	int3   
   1400342d0:	mov    rcx,QWORD PTR [rdx+0x48]
   1400342d7:	jmp    0x140030282
   1400342dc:	int3   
   1400342dd:	int3   
   1400342de:	int3   
   1400342df:	int3   
   1400342e0:	mov    rcx,QWORD PTR [rdx+0x48]
   1400342e7:	jmp    0x140030282
   1400342ec:	int3   
   1400342ed:	int3   
   1400342ee:	int3   
   1400342ef:	int3   
   1400342f0:	mov    rcx,QWORD PTR [rdx+0x48]
   1400342f7:	jmp    0x140030282
   1400342fc:	int3   
   1400342fd:	int3   
   1400342fe:	int3   
   1400342ff:	int3   
   140034300:	mov    rcx,QWORD PTR [rdx+0x48]
   140034307:	jmp    0x140030282
   14003430c:	int3   
   14003430d:	int3   
   14003430e:	int3   
   14003430f:	int3   
   140034310:	mov    rcx,QWORD PTR [rdx+0x48]
   140034317:	jmp    0x140030282
   14003431c:	int3   
   14003431d:	int3   
   14003431e:	int3   
   14003431f:	int3   
   140034320:	mov    rcx,QWORD PTR [rdx+0x48]
   140034327:	jmp    0x140030282
   14003432c:	int3   
   14003432d:	int3   
   14003432e:	int3   
   14003432f:	int3   
   140034330:	mov    rcx,QWORD PTR [rdx+0x48]
   140034337:	jmp    0x140030282
   14003433c:	int3   
   14003433d:	int3   
   14003433e:	int3   
   14003433f:	int3   
   140034340:	mov    rcx,QWORD PTR [rdx+0x48]
   140034347:	jmp    0x140030282
   14003434c:	int3   
   14003434d:	int3   
   14003434e:	int3   
   14003434f:	int3   
   140034350:	rex push rbp
   140034352:	sub    rsp,0x20
   140034356:	mov    rbp,rdx
   140034359:	mov    rdx,QWORD PTR [rbp+0x58]
   14003435d:	mov    rcx,QWORD PTR [rbp+0x60]
   140034361:	call   0x1400193a0
   140034366:	add    rsp,0x20
   14003436a:	pop    rbp
   14003436b:	ret    
   14003436c:	mov    rcx,QWORD PTR [rdx+0x60]
   140034373:	jmp    0x140017100
   140034378:	mov    QWORD PTR [rsp+0x10],rdx
   14003437d:	push   rbp
   14003437e:	sub    rsp,0x20
   140034382:	mov    rbp,rdx
   140034385:	mov    rcx,QWORD PTR [rbp+0x50]
   140034389:	mov    rax,QWORD PTR [rcx+0x28]
   14003438d:	add    rax,rax
   140034390:	mov    rcx,QWORD PTR [rcx+0x20]
   140034394:	mov    rcx,QWORD PTR [rcx+rax*8+0x8]
   140034399:	call   0x140030282
   14003439e:	xor    edx,edx
   1400343a0:	xor    ecx,ecx
   1400343a2:	call   0x140030478
   1400343a7:	nop
   1400343a8:	int3   
   1400343a9:	int3   
   1400343aa:	int3   
   1400343ab:	int3   
   1400343ac:	int3   
   1400343ad:	int3   
   1400343ae:	int3   
   1400343af:	int3   
   1400343b0:	mov    rcx,QWORD PTR [rdx+0x48]
   1400343b7:	jmp    0x140030282
   1400343bc:	mov    rcx,QWORD PTR [rdx+0x48]
   1400343c3:	jmp    0x1400191d0
   1400343c8:	int3   
   1400343c9:	int3   
   1400343ca:	int3   
   1400343cb:	int3   
   1400343cc:	int3   
   1400343cd:	int3   
   1400343ce:	int3   
   1400343cf:	int3   
   1400343d0:	mov    rcx,QWORD PTR [rdx+0x48]
   1400343d7:	jmp    0x140030282
   1400343dc:	int3   
   1400343dd:	int3   
   1400343de:	int3   
   1400343df:	int3   
   1400343e0:	lea    rcx,[rdx+0x20]
   1400343e7:	jmp    0x140018800
   1400343ec:	mov    QWORD PTR [rsp+0x10],rdx
   1400343f1:	push   rbp
   1400343f2:	sub    rsp,0x20
   1400343f6:	mov    rbp,rdx
   1400343f9:	mov    rdx,QWORD PTR [rbp+0xe0]
   140034400:	mov    rdx,QWORD PTR [rdx]
   140034403:	mov    r9d,0x2
   140034409:	mov    r8,rdx
   14003440c:	mov    rdx,QWORD PTR [rdx]
   14003440f:	lea    rcx,[rbp+0xe0]
   140034416:	call   0x140008e80
   14003441b:	nop
   14003441c:	xor    edx,edx
   14003441e:	xor    ecx,ecx
   140034420:	call   0x140030478
   140034425:	nop
   140034426:	mov    QWORD PTR [rsp+0x10],rdx
   14003442b:	push   rbp
   14003442c:	sub    rsp,0x20
   140034430:	mov    rbp,rdx
   140034433:	lea    rax,[rip+0xffffffffffffffe2]        # 0x14003441c
   14003443a:	add    rsp,0x20
   14003443e:	pop    rbp
   14003443f:	ret    
   140034440:	int3   
   140034441:	int3   
   140034442:	int3   
   140034443:	int3   
   140034444:	int3   
   140034445:	int3   
   140034446:	int3   
   140034447:	int3   
   140034448:	int3   
   140034449:	int3   
   14003444a:	int3   
   14003444b:	int3   
   14003444c:	int3   
   14003444d:	int3   
   14003444e:	int3   
   14003444f:	int3   
   140034450:	rex push rbp
   140034452:	sub    rsp,0x20
   140034456:	mov    rbp,rdx
   140034459:	mov    eax,DWORD PTR [rbp+0x30]
   14003445c:	and    eax,0x2
   14003445f:	test   eax,eax
   140034461:	je     0x14003447b
   140034463:	and    DWORD PTR [rbp+0x30],0xfffffffd
   140034467:	lea    rcx,[rbp+0x140]
   14003446e:	add    rcx,0x98
   140034475:	call   QWORD PTR [rip+0x1d25]        # 0x1400361a0
   14003447b:	add    rsp,0x20
   14003447f:	pop    rbp
   140034480:	ret    
   140034481:	lea    rcx,[rdx+0x140]
   140034488:	add    rcx,0x20
   14003448c:	rex.W jmp QWORD PTR [rip+0x1c8d]        # 0x140036120
   140034493:	mov    rcx,QWORD PTR [rdx+0x340]
   14003449a:	rex.W jmp QWORD PTR [rip+0x1d4f]        # 0x1400361f0
   1400344a1:	lea    rcx,[rdx+0x140]
   1400344a8:	jmp    0x14001a880
   1400344ad:	rex push rbp
   1400344af:	sub    rsp,0x20
   1400344b3:	mov    rbp,rdx
   1400344b6:	mov    eax,DWORD PTR [rbp+0x30]
   1400344b9:	and    eax,0x4
   1400344bc:	test   eax,eax
   1400344be:	je     0x1400344d8
   1400344c0:	and    DWORD PTR [rbp+0x30],0xfffffffb
   1400344c4:	lea    rcx,[rbp+0x240]
   1400344cb:	add    rcx,0x98
   1400344d2:	call   QWORD PTR [rip+0x1cc8]        # 0x1400361a0
   1400344d8:	add    rsp,0x20
   1400344dc:	pop    rbp
   1400344dd:	ret    
   1400344de:	lea    rcx,[rdx+0x240]
   1400344e5:	add    rcx,0x20
   1400344e9:	rex.W jmp QWORD PTR [rip+0x1c30]        # 0x140036120
   1400344f0:	mov    rcx,QWORD PTR [rdx+0x3a8]
   1400344f7:	rex.W jmp QWORD PTR [rip+0x1cf2]        # 0x1400361f0
   1400344fe:	lea    rcx,[rdx+0x240]
   140034505:	jmp    0x14001a880
   14003450a:	lea    rcx,[rdx+0x80]
   140034511:	rex.W jmp QWORD PTR [rip+0x1cd8]        # 0x1400361f0
   140034518:	lea    rcx,[rdx+0x80]
   14003451f:	add    rcx,0x68
   140034523:	jmp    0x140016de0
   140034528:	lea    rcx,[rdx+0x80]
   14003452f:	jmp    0x140017ec0
   140034534:	mov    rcx,QWORD PTR [rdx+0x3a8]
   14003453b:	jmp    0x140030282
   140034540:	mov    rcx,QWORD PTR [rdx+0x3a8]
   140034547:	rex.W jmp QWORD PTR [rip+0x20aa]        # 0x1400365f8
   14003454e:	mov    rcx,QWORD PTR [rdx+0x3a8]
   140034555:	jmp    0x140018db0
   14003455a:	mov    rcx,QWORD PTR [rdx+0x3a8]
   140034561:	add    rcx,0x8
   140034565:	jmp    0x140019310
   14003456a:	lea    rcx,[rdx+0x38]
   140034571:	jmp    0x140017230
   140034576:	rex push rbp
   140034578:	sub    rsp,0x20
   14003457c:	mov    rbp,rdx
   14003457f:	mov    eax,DWORD PTR [rbp+0x30]
   140034582:	and    eax,0x1
   140034585:	test   eax,eax
   140034587:	je     0x140034599
   140034589:	and    DWORD PTR [rbp+0x30],0xfffffffe
   14003458d:	mov    rcx,QWORD PTR [rbp+0x3a0]
   140034594:	call   0x140017100
   140034599:	add    rsp,0x20
   14003459d:	pop    rbp
   14003459e:	ret    
   14003459f:	lea    rcx,[rdx+0x80]
   1400345a6:	jmp    0x140017350
   1400345ab:	lea    rcx,[rdx+0x80]
   1400345b2:	rex.W jmp QWORD PTR [rip+0x1c37]        # 0x1400361f0
   1400345b9:	lea    rcx,[rdx+0x80]
   1400345c0:	add    rcx,0x68
   1400345c4:	jmp    0x140016de0
   1400345c9:	int3   
   1400345ca:	int3   
   1400345cb:	int3   
   1400345cc:	int3   
   1400345cd:	int3   
   1400345ce:	int3   
   1400345cf:	int3   
   1400345d0:	rex push rbp
   1400345d2:	sub    rsp,0x20
   1400345d6:	mov    rbp,rdx
   1400345d9:	mov    rdx,QWORD PTR [rbp+0x48]
   1400345dd:	mov    rcx,QWORD PTR [rbp+0x58]
   1400345e1:	call   0x1400193a0
   1400345e6:	add    rsp,0x20
   1400345ea:	pop    rbp
   1400345eb:	ret    
   1400345ec:	int3   
   1400345ed:	int3   
   1400345ee:	int3   
   1400345ef:	int3   
   1400345f0:	rex push rbp
   1400345f2:	sub    rsp,0x20
   1400345f6:	mov    rbp,rdx
   1400345f9:	mov    rdx,QWORD PTR [rbp+0x48]
   1400345fd:	mov    rcx,QWORD PTR [rbp+0x58]
   140034601:	call   0x1400193a0
   140034606:	add    rsp,0x20
   14003460a:	pop    rbp
   14003460b:	ret    
   14003460c:	int3   
   14003460d:	int3   
   14003460e:	int3   
   14003460f:	int3   
   140034610:	rex push rbp
   140034612:	sub    rsp,0x20
   140034616:	mov    rbp,rdx
   140034619:	mov    rdx,QWORD PTR [rbp+0x40]
   14003461d:	mov    rcx,QWORD PTR [rbp+0x50]
   140034621:	call   0x1400193a0
   140034626:	add    rsp,0x20
   14003462a:	pop    rbp
   14003462b:	ret    
   14003462c:	int3   
   14003462d:	int3   
   14003462e:	int3   
   14003462f:	int3   
   140034630:	lea    rcx,[rdx+0x80]
   140034637:	jmp    0x140019170
   14003463c:	lea    rcx,[rdx+0x28]
   140034643:	jmp    0x140017100
   140034648:	int3   
   140034649:	int3   
   14003464a:	int3   
   14003464b:	int3   
   14003464c:	int3   
   14003464d:	int3   
   14003464e:	int3   
   14003464f:	int3   
   140034650:	mov    rcx,QWORD PTR [rdx+0x68]
   140034657:	jmp    0x140017100
   14003465c:	lea    rcx,[rdx+0x60]
   140034663:	jmp    0x140019170
   140034668:	int3   
   140034669:	int3   
   14003466a:	int3   
   14003466b:	int3   
   14003466c:	int3   
   14003466d:	int3   
   14003466e:	int3   
   14003466f:	int3   
   140034670:	lea    rcx,[rdx+0x40]
   140034677:	jmp    0x140018510
   14003467c:	lea    rcx,[rdx+0x48]
   140034683:	jmp    0x140018510
   140034688:	int3   
   140034689:	int3   
   14003468a:	int3   
   14003468b:	int3   
   14003468c:	int3   
   14003468d:	int3   
   14003468e:	int3   
   14003468f:	int3   
   140034690:	lea    rcx,[rdx+0x30]
   140034697:	jmp    0x140017100
   14003469c:	mov    QWORD PTR [rsp+0x10],rdx
   1400346a1:	push   rbp
   1400346a2:	sub    rsp,0x20
   1400346a6:	mov    rbp,rdx
   1400346a9:	mov    rax,QWORD PTR [rbp+0xa0]
   1400346b0:	mov    QWORD PTR [rax+0x18],0xf
   1400346b8:	mov    QWORD PTR [rax+0x10],0x0
   1400346c0:	mov    BYTE PTR [rax],0x0
   1400346c3:	lea    rax,[rip+0xfffffffffffed646]        # 0x140021d10
   1400346ca:	add    rsp,0x20
   1400346ce:	pop    rbp
   1400346cf:	ret    
   1400346d0:	int3   
   1400346d1:	int3   
   1400346d2:	int3   
   1400346d3:	int3   
   1400346d4:	int3   
   1400346d5:	int3   
   1400346d6:	int3   
   1400346d7:	int3   
   1400346d8:	int3   
   1400346d9:	int3   
   1400346da:	int3   
   1400346db:	int3   
   1400346dc:	int3   
   1400346dd:	int3   
   1400346de:	int3   
   1400346df:	int3   
   1400346e0:	rex push rbp
   1400346e2:	sub    rsp,0x20
   1400346e6:	mov    rbp,rdx
   1400346e9:	mov    eax,DWORD PTR [rbp+0x20]
   1400346ec:	and    eax,0x2
   1400346ef:	test   eax,eax
   1400346f1:	je     0x14003470b
   1400346f3:	and    DWORD PTR [rbp+0x20],0xfffffffd
   1400346f7:	lea    rcx,[rbp+0x110]
   1400346fe:	add    rcx,0x98
   140034705:	call   QWORD PTR [rip+0x1a95]        # 0x1400361a0
   14003470b:	add    rsp,0x20
   14003470f:	pop    rbp
   140034710:	ret    
   140034711:	lea    rcx,[rdx+0x110]
   140034718:	add    rcx,0x20
   14003471c:	rex.W jmp QWORD PTR [rip+0x19fd]        # 0x140036120
   140034723:	mov    rcx,QWORD PTR [rdx+0x310]
   14003472a:	rex.W jmp QWORD PTR [rip+0x1abf]        # 0x1400361f0
   140034731:	lea    rcx,[rdx+0x110]
   140034738:	jmp    0x14001a880
   14003473d:	rex push rbp
   14003473f:	sub    rsp,0x20
   140034743:	mov    rbp,rdx
   140034746:	mov    eax,DWORD PTR [rbp+0x20]
   140034749:	and    eax,0x4
   14003474c:	test   eax,eax
   14003474e:	je     0x140034768
   140034750:	and    DWORD PTR [rbp+0x20],0xfffffffb
   140034754:	lea    rcx,[rbp+0x210]
   14003475b:	add    rcx,0x98
   140034762:	call   QWORD PTR [rip+0x1a38]        # 0x1400361a0
   140034768:	add    rsp,0x20
   14003476c:	pop    rbp
   14003476d:	ret    
   14003476e:	lea    rcx,[rdx+0x210]
   140034775:	add    rcx,0x20
   140034779:	rex.W jmp QWORD PTR [rip+0x19a0]        # 0x140036120
   140034780:	mov    rcx,QWORD PTR [rdx+0x378]
   140034787:	rex.W jmp QWORD PTR [rip+0x1a62]        # 0x1400361f0
   14003478e:	lea    rcx,[rdx+0x210]
   140034795:	jmp    0x14001a880
   14003479a:	lea    rcx,[rdx+0x50]
   1400347a1:	rex.W jmp QWORD PTR [rip+0x1a48]        # 0x1400361f0
   1400347a8:	lea    rcx,[rdx+0x50]
   1400347af:	add    rcx,0x68
   1400347b3:	jmp    0x140016de0
   1400347b8:	lea    rcx,[rdx+0x50]
   1400347bf:	jmp    0x140017ec0
   1400347c4:	mov    rcx,QWORD PTR [rdx+0x378]
   1400347cb:	jmp    0x140030282
   1400347d0:	mov    rcx,QWORD PTR [rdx+0x378]
   1400347d7:	jmp    0x140018df0
   1400347dc:	mov    rcx,QWORD PTR [rdx+0x378]
   1400347e3:	add    rcx,0x8
   1400347e7:	jmp    0x140019310
   1400347ec:	lea    rcx,[rdx+0x28]
   1400347f3:	jmp    0x140017270
   1400347f8:	rex push rbp
   1400347fa:	sub    rsp,0x20
   1400347fe:	mov    rbp,rdx
   140034801:	mov    eax,DWORD PTR [rbp+0x20]
   140034804:	and    eax,0x1
   140034807:	test   eax,eax
   140034809:	je     0x14003481b
   14003480b:	and    DWORD PTR [rbp+0x20],0xfffffffe
   14003480f:	mov    rcx,QWORD PTR [rbp+0x370]
   140034816:	call   0x140017100
   14003481b:	add    rsp,0x20
   14003481f:	pop    rbp
   140034820:	ret    
   140034821:	lea    rcx,[rdx+0x50]
   140034828:	jmp    0x140017350
   14003482d:	lea    rcx,[rdx+0x50]
   140034834:	rex.W jmp QWORD PTR [rip+0x19b5]        # 0x1400361f0
   14003483b:	lea    rcx,[rdx+0x50]
   140034842:	add    rcx,0x68
   140034846:	jmp    0x140016de0
   14003484b:	int3   
   14003484c:	int3   
   14003484d:	int3   
   14003484e:	int3   
   14003484f:	int3   
   140034850:	mov    rcx,QWORD PTR [rdx+0x40]
   140034857:	jmp    0x140017100
   14003485c:	int3   
   14003485d:	int3   
   14003485e:	int3   
   14003485f:	int3   
   140034860:	mov    rcx,QWORD PTR [rdx+0x48]
   140034867:	jmp    0x140017100
   14003486c:	int3   
   14003486d:	int3   
   14003486e:	int3   
   14003486f:	int3   
   140034870:	mov    rcx,QWORD PTR [rdx+0x48]
   140034877:	jmp    0x140017100
   14003487c:	int3   
   14003487d:	int3   
   14003487e:	int3   
   14003487f:	int3   
   140034880:	mov    rcx,QWORD PTR [rdx+0x40]
   140034887:	rex.W jmp QWORD PTR [rip+0x1d6a]        # 0x1400365f8
   14003488e:	int3   
   14003488f:	int3   
   140034890:	mov    rcx,QWORD PTR [rdx+0x40]
   140034897:	rex.W jmp QWORD PTR [rip+0x1d5a]        # 0x1400365f8
   14003489e:	int3   
   14003489f:	int3   
   1400348a0:	lea    rcx,[rdx+0x30]
   1400348a7:	jmp    0x140017100
   1400348ac:	mov    QWORD PTR [rsp+0x10],rdx
   1400348b1:	push   rbp
   1400348b2:	sub    rsp,0x20
   1400348b6:	mov    rbp,rdx
   1400348b9:	mov    rax,QWORD PTR [rbp+0xa0]
   1400348c0:	mov    QWORD PTR [rax+0x18],0xf
   1400348c8:	mov    QWORD PTR [rax+0x10],0x0
   1400348d0:	mov    BYTE PTR [rax],0x0
   1400348d3:	lea    rax,[rip+0xfffffffffffee2ed]        # 0x140022bc7
   1400348da:	add    rsp,0x20
   1400348de:	pop    rbp
   1400348df:	ret    
   1400348e0:	int3   
   1400348e1:	int3   
   1400348e2:	int3   
   1400348e3:	int3   
   1400348e4:	int3   
   1400348e5:	int3   
   1400348e6:	int3   
   1400348e7:	int3   
   1400348e8:	int3   
   1400348e9:	int3   
   1400348ea:	int3   
   1400348eb:	int3   
   1400348ec:	int3   
   1400348ed:	int3   
   1400348ee:	int3   
   1400348ef:	int3   
   1400348f0:	lea    rcx,[rdx+0x30]
   1400348f7:	jmp    0x140018b40
   1400348fc:	int3   
   1400348fd:	int3   
   1400348fe:	int3   
   1400348ff:	int3   
   140034900:	mov    rcx,QWORD PTR [rdx+0x68]
   140034907:	jmp    0x140017f10
   14003490c:	int3   
   14003490d:	int3   
   14003490e:	int3   
   14003490f:	int3   
   140034910:	mov    rcx,QWORD PTR [rdx+0x48]
   140034917:	jmp    0x140017100
   14003491c:	int3   
   14003491d:	int3   
   14003491e:	int3   
   14003491f:	int3   
   140034920:	lea    rcx,[rdx+0x20]
   140034927:	jmp    0x140017100
   14003492c:	rex push rbp
   14003492e:	sub    rsp,0x20
   140034932:	mov    rbp,rdx
   140034935:	mov    eax,DWORD PTR [rbp+0x110]
   14003493b:	and    eax,0x1
   14003493e:	test   eax,eax
   140034940:	je     0x140034952
   140034942:	and    DWORD PTR [rbp+0x110],0xfffffffe
   140034949:	lea    rcx,[rbp+0x50]
   14003494d:	call   0x140017040
   140034952:	add    rsp,0x20
   140034956:	pop    rbp
   140034957:	ret    
   140034958:	lea    rcx,[rdx+0x78]
   14003495f:	jmp    0x140017100
   140034964:	rex push rbp
   140034966:	sub    rsp,0x20
   14003496a:	mov    rbp,rdx
   14003496d:	mov    eax,DWORD PTR [rbp+0x110]
   140034973:	and    eax,0x2
   140034976:	test   eax,eax
   140034978:	je     0x14003498a
   14003497a:	and    DWORD PTR [rbp+0x110],0xfffffffd
   140034981:	lea    rcx,[rbp+0x78]
   140034985:	call   0x1400184b0
   14003498a:	add    rsp,0x20
   14003498e:	pop    rbp
   14003498f:	ret    
   140034990:	lea    rcx,[rdx+0x78]
   140034997:	jmp    0x140017100
   14003499c:	lea    rcx,[rdx+0x50]
   1400349a3:	jmp    0x140017100
   1400349a8:	mov    rcx,QWORD PTR [rdx+0x110]
   1400349af:	add    rcx,0x8
   1400349b3:	jmp    0x140017f90
   1400349b8:	int3   
   1400349b9:	int3   
   1400349ba:	int3   
   1400349bb:	int3   
   1400349bc:	int3   
   1400349bd:	int3   
   1400349be:	int3   
   1400349bf:	int3   
   1400349c0:	rex push rbp
   1400349c2:	sub    rsp,0x20
   1400349c6:	mov    rbp,rdx
   1400349c9:	mov    eax,DWORD PTR [rbp+0x20]
   1400349cc:	and    eax,0x2
   1400349cf:	test   eax,eax
   1400349d1:	je     0x1400349e8
   1400349d3:	and    DWORD PTR [rbp+0x20],0xfffffffd
   1400349d7:	lea    rcx,[rbp+0x30]
   1400349db:	add    rcx,0x98
   1400349e2:	call   QWORD PTR [rip+0x17b8]        # 0x1400361a0
   1400349e8:	add    rsp,0x20
   1400349ec:	pop    rbp
   1400349ed:	ret    
   1400349ee:	lea    rcx,[rdx+0x30]
   1400349f5:	add    rcx,0x20
   1400349f9:	rex.W jmp QWORD PTR [rip+0x1720]        # 0x140036120
   140034a00:	mov    rcx,QWORD PTR [rdx+0x130]
   140034a07:	rex.W jmp QWORD PTR [rip+0x17e2]        # 0x1400361f0
   140034a0e:	lea    rcx,[rdx+0x30]
   140034a15:	jmp    0x14001a880
   140034a1a:	int3   
   140034a1b:	int3   
   140034a1c:	int3   
   140034a1d:	int3   
   140034a1e:	int3   
   140034a1f:	int3   
   140034a20:	mov    rcx,QWORD PTR [rdx+0x48]
   140034a27:	jmp    0x140017100
   140034a2c:	int3   
   140034a2d:	int3   
   140034a2e:	int3   
   140034a2f:	int3   
   140034a30:	lea    rcx,[rdx+0x30]
   140034a37:	jmp    0x140018a80
   140034a3c:	int3   
   140034a3d:	int3   
   140034a3e:	int3   
   140034a3f:	int3   
   140034a40:	lea    rcx,[rdx+0x30]
   140034a47:	jmp    0x140018a80
   140034a4c:	int3   
   140034a4d:	int3   
   140034a4e:	int3   
   140034a4f:	int3   
   140034a50:	lea    rcx,[rdx+0x28]
   140034a57:	jmp    0x140019280
   140034a5c:	int3   
   140034a5d:	int3   
   140034a5e:	int3   
   140034a5f:	int3   
   140034a60:	rex push rbp
   140034a62:	sub    rsp,0x20
   140034a66:	mov    rbp,rdx
   140034a69:	mov    rdx,QWORD PTR [rbp+0x48]
   140034a6d:	mov    rcx,QWORD PTR [rbp+0x58]
   140034a71:	call   0x1400193a0
   140034a76:	add    rsp,0x20
   140034a7a:	pop    rbp
   140034a7b:	ret    
   140034a7c:	int3   
   140034a7d:	int3   
   140034a7e:	int3   
   140034a7f:	int3   
   140034a80:	lea    rcx,[rdx+0x28]
   140034a87:	jmp    0x140019280
   140034a8c:	int3   
   140034a8d:	int3   
   140034a8e:	int3   
   140034a8f:	int3   
   140034a90:	rex push rbp
   140034a92:	sub    rsp,0x20
   140034a96:	mov    rbp,rdx
   140034a99:	mov    rdx,QWORD PTR [rbp+0x40]
   140034a9d:	mov    rcx,QWORD PTR [rbp+0x28]
   140034aa1:	call   0x1400193a0
   140034aa6:	add    rsp,0x20
   140034aaa:	pop    rbp
   140034aab:	ret    
   140034aac:	mov    rcx,QWORD PTR [rdx+0x28]
   140034ab3:	jmp    0x140017100
   140034ab8:	mov    QWORD PTR [rsp+0x10],rdx
   140034abd:	push   rbp
   140034abe:	sub    rsp,0x20
   140034ac2:	mov    rbp,rdx
   140034ac5:	mov    rcx,QWORD PTR [rbp+0x50]
   140034ac9:	mov    rcx,QWORD PTR [rcx]
   140034acc:	call   0x140030282
   140034ad1:	xor    edx,edx
   140034ad3:	xor    ecx,ecx
   140034ad5:	call   0x140030478
   140034ada:	nop
   140034adb:	int3   
   140034adc:	int3   
   140034add:	int3   
   140034ade:	int3   
   140034adf:	int3   
   140034ae0:	lea    rcx,[rdx+0x88]
   140034ae7:	jmp    0x140017100
   140034aec:	lea    rcx,[rdx+0xc8]
   140034af3:	jmp    0x140017100
   140034af8:	lea    rcx,[rdx+0x68]
   140034aff:	jmp    0x140017100
   140034b04:	lea    rcx,[rdx+0x40]
   140034b0b:	jmp    0x140017100
   140034b10:	lea    rcx,[rdx+0xa8]
   140034b17:	jmp    0x140017100
   140034b1c:	lea    rcx,[rdx+0x20]
   140034b23:	jmp    0x140017100
   140034b28:	lea    rcx,[rdx+0xa8]
   140034b2f:	jmp    0x140017100
   140034b34:	lea    rcx,[rdx+0x20]
   140034b3b:	jmp    0x140017100
   140034b40:	rex push rbp
   140034b42:	sub    rsp,0x20
   140034b46:	mov    rbp,rdx
   140034b49:	mov    eax,DWORD PTR [rbp+0x20]
   140034b4c:	and    eax,0x1
   140034b4f:	test   eax,eax
   140034b51:	je     0x140034b60
   140034b53:	and    DWORD PTR [rbp+0x20],0xfffffffe
   140034b57:	lea    rcx,[rbp+0x50]
   140034b5b:	call   0x140017100
   140034b60:	add    rsp,0x20
   140034b64:	pop    rbp
   140034b65:	ret    
   140034b66:	int3   
   140034b67:	int3   
   140034b68:	int3   
   140034b69:	int3   
   140034b6a:	int3   
   140034b6b:	int3   
   140034b6c:	int3   
   140034b6d:	int3   
   140034b6e:	int3   
   140034b6f:	int3   
   140034b70:	lea    rcx,[rdx+0x28]
   140034b77:	jmp    0x140018f00
   140034b7c:	int3   
   140034b7d:	int3   
   140034b7e:	int3   
   140034b7f:	int3   
   140034b80:	lea    rcx,[rdx+0x40]
   140034b87:	jmp    0x140017100
   140034b8c:	lea    rcx,[rdx+0x28]
   140034b93:	jmp    0x140018ef0
   140034b98:	int3   
   140034b99:	int3   
   140034b9a:	int3   
   140034b9b:	int3   
   140034b9c:	int3   
   140034b9d:	int3   
   140034b9e:	int3   
   140034b9f:	int3   
   140034ba0:	lea    rcx,[rdx+0x40]
   140034ba7:	jmp    0x140017100
   140034bac:	lea    rcx,[rdx+0x28]
   140034bb3:	jmp    0x140018f30
   140034bb8:	int3   
   140034bb9:	int3   
   140034bba:	int3   
   140034bbb:	int3   
   140034bbc:	int3   
   140034bbd:	int3   
   140034bbe:	int3   
   140034bbf:	int3   
   140034bc0:	lea    rcx,[rdx+0x40]
   140034bc7:	jmp    0x140019170
   140034bcc:	int3   
   140034bcd:	int3   
   140034bce:	int3   
   140034bcf:	int3   
   140034bd0:	lea    rcx,[rdx+0x28]
   140034bd7:	jmp    0x1400179b0
   140034bdc:	int3   
   140034bdd:	int3   
   140034bde:	int3   
   140034bdf:	int3   
   140034be0:	lea    rcx,[rdx+0x28]
   140034be7:	jmp    0x1400179f0
   140034bec:	int3   
   140034bed:	int3   
   140034bee:	int3   
   140034bef:	int3   
   140034bf0:	lea    rcx,[rdx+0x40]
   140034bf7:	jmp    0x140019030
   140034bfc:	int3   
   140034bfd:	int3   
   140034bfe:	int3   
   140034bff:	int3   
   140034c00:	lea    rcx,[rdx+0x40]
   140034c07:	jmp    0x140019030
   140034c0c:	int3   
   140034c0d:	int3   
   140034c0e:	int3   
   140034c0f:	int3   
   140034c10:	lea    rcx,[rdx+0x40]
   140034c17:	jmp    0x140019030
   140034c1c:	int3   
   140034c1d:	int3   
   140034c1e:	int3   
   140034c1f:	int3   
   140034c20:	lea    rcx,[rdx+0x40]
   140034c27:	jmp    0x140019030
   140034c2c:	int3   
   140034c2d:	int3   
   140034c2e:	int3   
   140034c2f:	int3   
   140034c30:	lea    rcx,[rdx+0x40]
   140034c37:	jmp    0x140019030
   140034c3c:	int3   
   140034c3d:	int3   
   140034c3e:	int3   
   140034c3f:	int3   
   140034c40:	lea    rcx,[rdx+0x50]
   140034c47:	jmp    0x140017100
   140034c4c:	int3   
   140034c4d:	int3   
   140034c4e:	int3   
   140034c4f:	int3   
   140034c50:	lea    rcx,[rdx+0x40]
   140034c57:	jmp    0x140019300
   140034c5c:	int3   
   140034c5d:	int3   
   140034c5e:	int3   
   140034c5f:	int3   
   140034c60:	lea    rcx,[rdx+0x28]
   140034c67:	jmp    0x140019030
   140034c6c:	lea    rcx,[rdx+0x28]
   140034c73:	jmp    0x140019030
   140034c78:	int3   
   140034c79:	int3   
   140034c7a:	int3   
   140034c7b:	int3   
   140034c7c:	int3   
   140034c7d:	int3   
   140034c7e:	int3   
   140034c7f:	int3   
   140034c80:	lea    rcx,[rdx+0x28]
   140034c87:	jmp    0x140019030
   140034c8c:	lea    rcx,[rdx+0x28]
   140034c93:	jmp    0x140019030
   140034c98:	int3   
   140034c99:	int3   
   140034c9a:	int3   
   140034c9b:	int3   
   140034c9c:	int3   
   140034c9d:	int3   
   140034c9e:	int3   
   140034c9f:	int3   
   140034ca0:	rex push rbp
   140034ca2:	mov    rbp,rdx
   140034ca5:	mov    eax,DWORD PTR [rip+0x22cfd]        # 0x1400579a8
   140034cab:	and    eax,0xfffffffe
   140034cae:	mov    DWORD PTR [rip+0x22cf4],eax        # 0x1400579a8
   140034cb4:	pop    rbp
   140034cb5:	ret    
   140034cb6:	lea    rcx,[rip+0x22ccb]        # 0x140057988
   140034cbd:	jmp    0x140017140
   140034cc2:	lea    rcx,[rdx+0x20]
   140034cc9:	jmp    0x140017100
   140034cce:	lea    rcx,[rdx+0x48]
   140034cd5:	jmp    0x140017140
   140034cda:	lea    rcx,[rdx+0x48]
   140034ce1:	rex.W jmp QWORD PTR [rip+0x1850]        # 0x140036538
   140034ce8:	rex push rbp
   140034cea:	sub    rsp,0x20
   140034cee:	mov    rbp,rdx
   140034cf1:	mov    eax,DWORD PTR [rbp+0x40]
   140034cf4:	and    eax,0x2
   140034cf7:	test   eax,eax
   140034cf9:	je     0x140034d13
   140034cfb:	and    DWORD PTR [rbp+0x40],0xfffffffd
   140034cff:	lea    rcx,[rbp+0x90]
   140034d06:	add    rcx,0x88
   140034d0d:	call   QWORD PTR [rip+0x148d]        # 0x1400361a0
   140034d13:	add    rsp,0x20
   140034d17:	pop    rbp
   140034d18:	ret    
   140034d19:	lea    rcx,[rdx+0x90]
   140034d20:	add    rcx,0x10
   140034d24:	rex.W jmp QWORD PTR [rip+0x1445]        # 0x140036170
   140034d2b:	lea    rcx,[rdx+0x90]
   140034d32:	jmp    0x14001a800
   140034d37:	lea    rcx,[rdx+0x70]
   140034d3e:	jmp    0x140017100
   140034d43:	lea    rcx,[rdx+0x70]
   140034d4a:	rex.W jmp QWORD PTR [rip+0x17e7]        # 0x140036538
   140034d51:	lea    rcx,[rdx+0x20]
   140034d58:	rex.W jmp QWORD PTR [rip+0x17d9]        # 0x140036538
   140034d5f:	int3   
   140034d60:	lea    rcx,[rdx+0x40]
   140034d67:	jmp    0x140019300
   140034d6c:	int3   
   140034d6d:	int3   
   140034d6e:	int3   
   140034d6f:	int3   
   140034d70:	lea    rcx,[rdx+0x28]
   140034d77:	jmp    0x140019030
   140034d7c:	int3   
   140034d7d:	int3   
   140034d7e:	int3   
   140034d7f:	int3   
   140034d80:	lea    rcx,[rdx+0x28]
   140034d87:	jmp    0x140019030
   140034d8c:	int3   
   140034d8d:	int3   
   140034d8e:	int3   
   140034d8f:	int3   
   140034d90:	lea    rcx,[rdx+0x28]
   140034d97:	jmp    0x140019030
   140034d9c:	int3   
   140034d9d:	int3   
   140034d9e:	int3   
   140034d9f:	int3   
   140034da0:	lea    rcx,[rdx+0x28]
   140034da7:	jmp    0x140019030
   140034dac:	int3   
   140034dad:	int3   
   140034dae:	int3   
   140034daf:	int3   
   140034db0:	lea    rcx,[rdx+0x28]
   140034db7:	jmp    0x140019280
   140034dbc:	lea    rcx,[rdx+0x40]
   140034dc3:	jmp    0x140017e20
   140034dc8:	int3   
   140034dc9:	int3   
   140034dca:	int3   
   140034dcb:	int3   
   140034dcc:	int3   
   140034dcd:	int3   
   140034dce:	int3   
   140034dcf:	int3   
   140034dd0:	lea    rcx,[rdx+0x28]
   140034dd7:	jmp    0x140019280
   140034ddc:	lea    rcx,[rdx+0x40]
   140034de3:	jmp    0x140017e20
   140034de8:	int3   
   140034de9:	int3   
   140034dea:	int3   
   140034deb:	int3   
   140034dec:	int3   
   140034ded:	int3   
   140034dee:	int3   
   140034def:	int3   
   140034df0:	rex push rbp
   140034df2:	sub    rsp,0x20
   140034df6:	mov    rbp,rdx
   140034df9:	mov    rdx,QWORD PTR [rbp+0x50]
   140034dfd:	mov    rcx,QWORD PTR [rbp+0x58]
   140034e01:	call   0x1400193a0
   140034e06:	add    rsp,0x20
   140034e0a:	pop    rbp
   140034e0b:	ret    
   140034e0c:	rex push rbp
   140034e0e:	sub    rsp,0x20
   140034e12:	mov    rbp,rdx
   140034e15:	mov    rdx,QWORD PTR [rbp+0x50]
   140034e19:	mov    rcx,QWORD PTR [rbp+0x58]
   140034e1d:	call   0x1400193a0
   140034e22:	add    rsp,0x20
   140034e26:	pop    rbp
   140034e27:	ret    
   140034e28:	int3   
   140034e29:	int3   
   140034e2a:	int3   
   140034e2b:	int3   
   140034e2c:	int3   
   140034e2d:	int3   
   140034e2e:	int3   
   140034e2f:	int3   
   140034e30:	lea    rcx,[rdx+0x40]
   140034e37:	jmp    0x140018a80
   140034e3c:	lea    rcx,[rdx+0x20]
   140034e43:	jmp    0x140017100
   140034e48:	lea    rcx,[rdx+0x70]
   140034e4f:	jmp    0x140017100
   140034e54:	lea    rcx,[rdx+0x70]
   140034e5b:	jmp    0x1400184b0
   140034e60:	lea    rcx,[rdx+0x70]
   140034e67:	jmp    0x140017100
   140034e6c:	int3   
   140034e6d:	int3   
   140034e6e:	int3   
   140034e6f:	int3   
   140034e70:	rex push rbp
   140034e72:	sub    rsp,0x20
   140034e76:	mov    rbp,rdx
   140034e79:	mov    rdx,QWORD PTR [rbp+0x48]
   140034e7d:	mov    rcx,QWORD PTR [rbp+0x58]
   140034e81:	call   0x1400193a0
   140034e86:	add    rsp,0x20
   140034e8a:	pop    rbp
   140034e8b:	ret    
   140034e8c:	int3   
   140034e8d:	int3   
   140034e8e:	int3   
   140034e8f:	int3   
   140034e90:	rex push rbp
   140034e92:	sub    rsp,0x20
   140034e96:	mov    rbp,rdx
   140034e99:	mov    eax,DWORD PTR [rbp+0x20]
   140034e9c:	and    eax,0x2
   140034e9f:	test   eax,eax
   140034ea1:	je     0x140034eb8
   140034ea3:	and    DWORD PTR [rbp+0x20],0xfffffffd
   140034ea7:	lea    rcx,[rbp+0x50]
   140034eab:	add    rcx,0x88
   140034eb2:	call   QWORD PTR [rip+0x12e8]        # 0x1400361a0
   140034eb8:	add    rsp,0x20
   140034ebc:	pop    rbp
   140034ebd:	ret    
   140034ebe:	lea    rcx,[rdx+0x50]
   140034ec5:	add    rcx,0x10
   140034ec9:	rex.W jmp QWORD PTR [rip+0x12a0]        # 0x140036170
   140034ed0:	lea    rcx,[rdx+0x50]
   140034ed7:	jmp    0x14001a800
   140034edc:	int3   
   140034edd:	int3   
   140034ede:	int3   
   140034edf:	int3   
   140034ee0:	rex push rbp
   140034ee2:	sub    rsp,0x20
   140034ee6:	mov    rbp,rdx
   140034ee9:	mov    eax,DWORD PTR [rbp+0x20]
   140034eec:	and    eax,0x2
   140034eef:	test   eax,eax
   140034ef1:	je     0x140034f08
   140034ef3:	and    DWORD PTR [rbp+0x20],0xfffffffd
   140034ef7:	lea    rcx,[rbp+0x50]
   140034efb:	add    rcx,0x88
   140034f02:	call   QWORD PTR [rip+0x1298]        # 0x1400361a0
   140034f08:	add    rsp,0x20
   140034f0c:	pop    rbp
   140034f0d:	ret    
   140034f0e:	lea    rcx,[rdx+0x50]
   140034f15:	add    rcx,0x10
   140034f19:	rex.W jmp QWORD PTR [rip+0x1250]        # 0x140036170
   140034f20:	lea    rcx,[rdx+0x50]
   140034f27:	jmp    0x14001a800
   140034f2c:	int3   
   140034f2d:	int3   
   140034f2e:	int3   
   140034f2f:	int3   
   140034f30:	rex push rbp
   140034f32:	sub    rsp,0x20
   140034f36:	mov    rbp,rdx
   140034f39:	mov    eax,DWORD PTR [rbp+0x20]
   140034f3c:	and    eax,0x2
   140034f3f:	test   eax,eax
   140034f41:	je     0x140034f58
   140034f43:	and    DWORD PTR [rbp+0x20],0xfffffffd
   140034f47:	lea    rcx,[rbp+0x50]
   140034f4b:	add    rcx,0x88
   140034f52:	call   QWORD PTR [rip+0x1248]        # 0x1400361a0
   140034f58:	add    rsp,0x20
   140034f5c:	pop    rbp
   140034f5d:	ret    
   140034f5e:	lea    rcx,[rdx+0x50]
   140034f65:	add    rcx,0x10
   140034f69:	rex.W jmp QWORD PTR [rip+0x1200]        # 0x140036170
   140034f70:	lea    rcx,[rdx+0x50]
   140034f77:	jmp    0x14001a800
   140034f7c:	int3   
   140034f7d:	int3   
   140034f7e:	int3   
   140034f7f:	int3   
   140034f80:	rex push rbp
   140034f82:	sub    rsp,0x20
   140034f86:	mov    rbp,rdx
   140034f89:	mov    eax,DWORD PTR [rbp+0x20]
   140034f8c:	and    eax,0x2
   140034f8f:	test   eax,eax
   140034f91:	je     0x140034fa8
   140034f93:	and    DWORD PTR [rbp+0x20],0xfffffffd
   140034f97:	lea    rcx,[rbp+0x50]
   140034f9b:	add    rcx,0x88
   140034fa2:	call   QWORD PTR [rip+0x11f8]        # 0x1400361a0
   140034fa8:	add    rsp,0x20
   140034fac:	pop    rbp
   140034fad:	ret    
   140034fae:	lea    rcx,[rdx+0x50]
   140034fb5:	add    rcx,0x10
   140034fb9:	rex.W jmp QWORD PTR [rip+0x11b0]        # 0x140036170
   140034fc0:	lea    rcx,[rdx+0x50]
   140034fc7:	jmp    0x14001a800
   140034fcc:	int3   
   140034fcd:	int3   
   140034fce:	int3   
   140034fcf:	int3   
   140034fd0:	rex push rbp
   140034fd2:	sub    rsp,0x20
   140034fd6:	mov    rbp,rdx
   140034fd9:	mov    eax,DWORD PTR [rbp+0x20]
   140034fdc:	and    eax,0x2
   140034fdf:	test   eax,eax
   140034fe1:	je     0x140034ff8
   140034fe3:	and    DWORD PTR [rbp+0x20],0xfffffffd
   140034fe7:	lea    rcx,[rbp+0x50]
   140034feb:	add    rcx,0x88
   140034ff2:	call   QWORD PTR [rip+0x11a8]        # 0x1400361a0
   140034ff8:	add    rsp,0x20
   140034ffc:	pop    rbp
   140034ffd:	ret    
   140034ffe:	lea    rcx,[rdx+0x50]
   140035005:	add    rcx,0x10
   140035009:	rex.W jmp QWORD PTR [rip+0x1160]        # 0x140036170
   140035010:	lea    rcx,[rdx+0x50]
   140035017:	jmp    0x14001a800
   14003501c:	int3   
   14003501d:	int3   
   14003501e:	int3   
   14003501f:	int3   
   140035020:	rex push rbp
   140035022:	sub    rsp,0x20
   140035026:	mov    rbp,rdx
   140035029:	mov    eax,DWORD PTR [rbp+0x20]
   14003502c:	and    eax,0x2
   14003502f:	test   eax,eax
   140035031:	je     0x140035048
   140035033:	and    DWORD PTR [rbp+0x20],0xfffffffd
   140035037:	lea    rcx,[rbp+0x50]
   14003503b:	add    rcx,0x88
   140035042:	call   QWORD PTR [rip+0x1158]        # 0x1400361a0
   140035048:	add    rsp,0x20
   14003504c:	pop    rbp
   14003504d:	ret    
   14003504e:	lea    rcx,[rdx+0x50]
   140035055:	add    rcx,0x10
   140035059:	rex.W jmp QWORD PTR [rip+0x1110]        # 0x140036170
   140035060:	lea    rcx,[rdx+0x50]
   140035067:	jmp    0x14001a800
   14003506c:	int3   
   14003506d:	int3   
   14003506e:	int3   
   14003506f:	int3   
   140035070:	lea    rcx,[rdx+0x50]
   140035077:	jmp    0x140017100
   14003507c:	lea    rcx,[rdx+0x20]
   140035083:	jmp    0x140018320
   140035088:	lea    rcx,[rdx+0x90]
   14003508f:	jmp    0x140017100
   140035094:	lea    rcx,[rdx+0x70]
   14003509b:	jmp    0x140017100
   1400350a0:	lea    rcx,[rdx+0x20]
   1400350a7:	jmp    0x140019260
   1400350ac:	mov    rcx,QWORD PTR [rdx+0x130]
   1400350b3:	jmp    0x140030282
   1400350b8:	lea    rcx,[rdx+0x20]
   1400350bf:	jmp    0x140019220
   1400350c4:	lea    rcx,[rdx+0xb8]
   1400350cb:	jmp    0x140017db0
   1400350d0:	rex push rbp
   1400350d2:	sub    rsp,0x20
   1400350d6:	mov    rbp,rdx
   1400350d9:	mov    eax,DWORD PTR [rbp+0x90]
   1400350df:	and    eax,0x1
   1400350e2:	test   eax,eax
   1400350e4:	je     0x1400350fa
   1400350e6:	and    DWORD PTR [rbp+0x90],0xfffffffe
   1400350ed:	lea    rcx,[rbp+0x28]
   1400350f1:	add    rcx,0x50
   1400350f5:	call   0x140018fc0
   1400350fa:	add    rsp,0x20
   1400350fe:	pop    rbp
   1400350ff:	ret    
   140035100:	lea    rcx,[rdx+0x28]
   140035107:	jmp    0x140018ef0
   14003510c:	int3   
   14003510d:	int3   
   14003510e:	int3   
   14003510f:	int3   
   140035110:	rex push rbp
   140035112:	sub    rsp,0x20
   140035116:	mov    rbp,rdx
   140035119:	mov    eax,DWORD PTR [rbp+0x90]
   14003511f:	and    eax,0x1
   140035122:	test   eax,eax
   140035124:	je     0x14003513a
   140035126:	and    DWORD PTR [rbp+0x90],0xfffffffe
   14003512d:	lea    rcx,[rbp+0x28]
   140035131:	add    rcx,0x50
   140035135:	call   0x140018fc0
   14003513a:	add    rsp,0x20
   14003513e:	pop    rbp
   14003513f:	ret    
   140035140:	lea    rcx,[rdx+0x28]
   140035147:	jmp    0x140018f30
   14003514c:	int3   
   14003514d:	int3   
   14003514e:	int3   
   14003514f:	int3   
   140035150:	rex push rbp
   140035152:	sub    rsp,0x20
   140035156:	mov    rbp,rdx
   140035159:	mov    eax,DWORD PTR [rbp+0x90]
   14003515f:	and    eax,0x1
   140035162:	test   eax,eax
   140035164:	je     0x14003517a
   140035166:	and    DWORD PTR [rbp+0x90],0xfffffffe
   14003516d:	lea    rcx,[rbp+0x28]
   140035171:	add    rcx,0x50
   140035175:	call   0x140018fc0
   14003517a:	add    rsp,0x20
   14003517e:	pop    rbp
   14003517f:	ret    
   140035180:	lea    rcx,[rdx+0x28]
   140035187:	jmp    0x140018f00
   14003518c:	int3   
   14003518d:	int3   
   14003518e:	int3   
   14003518f:	int3   
   140035190:	rex push rbp
   140035192:	sub    rsp,0x20
   140035196:	mov    rbp,rdx
   140035199:	mov    eax,DWORD PTR [rbp+0xa0]
   14003519f:	and    eax,0x1
   1400351a2:	test   eax,eax
   1400351a4:	je     0x1400351ba
   1400351a6:	and    DWORD PTR [rbp+0xa0],0xfffffffe
   1400351ad:	lea    rcx,[rbp+0x28]
   1400351b1:	add    rcx,0x60
   1400351b5:	call   0x140018fc0
   1400351ba:	add    rsp,0x20
   1400351be:	pop    rbp
   1400351bf:	ret    
   1400351c0:	lea    rcx,[rdx+0x28]
   1400351c7:	jmp    0x140018f10
   1400351cc:	int3   
   1400351cd:	int3   
   1400351ce:	int3   
   1400351cf:	int3   
   1400351d0:	rex push rbp
   1400351d2:	sub    rsp,0x20
   1400351d6:	mov    rbp,rdx
   1400351d9:	mov    eax,DWORD PTR [rbp+0xa0]
   1400351df:	and    eax,0x1
   1400351e2:	test   eax,eax
   1400351e4:	je     0x1400351fa
   1400351e6:	and    DWORD PTR [rbp+0xa0],0xfffffffe
   1400351ed:	lea    rcx,[rbp+0x28]
   1400351f1:	add    rcx,0x60
   1400351f5:	call   0x140018fc0
   1400351fa:	add    rsp,0x20
   1400351fe:	pop    rbp
   1400351ff:	ret    
   140035200:	lea    rcx,[rdx+0x28]
   140035207:	jmp    0x140019030
   14003520c:	int3   
   14003520d:	int3   
   14003520e:	int3   
   14003520f:	int3   
   140035210:	rex push rbp
   140035212:	sub    rsp,0x20
   140035216:	mov    rbp,rdx
   140035219:	mov    eax,DWORD PTR [rbp+0x90]
   14003521f:	and    eax,0x1
   140035222:	test   eax,eax
   140035224:	je     0x14003523a
   140035226:	and    DWORD PTR [rbp+0x90],0xfffffffe
   14003522d:	lea    rcx,[rbp+0x28]
   140035231:	add    rcx,0x50
   140035235:	call   0x140018fc0
   14003523a:	add    rsp,0x20
   14003523e:	pop    rbp
   14003523f:	ret    
   140035240:	lea    rcx,[rdx+0x28]
   140035247:	jmp    0x140019160
   14003524c:	int3   
   14003524d:	int3   
   14003524e:	int3   
   14003524f:	int3   
   140035250:	rex push rbp
   140035252:	sub    rsp,0x20
   140035256:	mov    rbp,rdx
   140035259:	mov    eax,DWORD PTR [rbp+0x90]
   14003525f:	and    eax,0x1
   140035262:	test   eax,eax
   140035264:	je     0x14003527a
   140035266:	and    DWORD PTR [rbp+0x90],0xfffffffe
   14003526d:	lea    rcx,[rbp+0x28]
   140035271:	add    rcx,0x50
   140035275:	call   0x140018fc0
   14003527a:	add    rsp,0x20
   14003527e:	pop    rbp
   14003527f:	ret    
   140035280:	lea    rcx,[rdx+0x28]
   140035287:	jmp    0x1400191a0
   14003528c:	int3   
   14003528d:	int3   
   14003528e:	int3   
   14003528f:	int3   
   140035290:	rex push rbp
   140035292:	sub    rsp,0x20
   140035296:	mov    rbp,rdx
   140035299:	mov    eax,DWORD PTR [rbp+0xa0]
   14003529f:	and    eax,0x1
   1400352a2:	test   eax,eax
   1400352a4:	je     0x1400352ba
   1400352a6:	and    DWORD PTR [rbp+0xa0],0xfffffffe
   1400352ad:	lea    rcx,[rbp+0x28]
   1400352b1:	add    rcx,0x58
   1400352b5:	call   0x140018fc0
   1400352ba:	add    rsp,0x20
   1400352be:	pop    rbp
   1400352bf:	ret    
   1400352c0:	rex push rbp
   1400352c2:	sub    rsp,0x20
   1400352c6:	mov    rbp,rdx
   1400352c9:	mov    eax,DWORD PTR [rbp+0xa0]
   1400352cf:	and    eax,0x1
   1400352d2:	test   eax,eax
   1400352d4:	je     0x1400352ea
   1400352d6:	and    DWORD PTR [rbp+0xa0],0xfffffffe
   1400352dd:	lea    rcx,[rbp+0x28]
   1400352e1:	add    rcx,0x58
   1400352e5:	call   0x140018fc0
   1400352ea:	add    rsp,0x20
   1400352ee:	pop    rbp
   1400352ef:	ret    
   1400352f0:	rex push rbp
   1400352f2:	sub    rsp,0x20
   1400352f6:	mov    rbp,rdx
   1400352f9:	mov    eax,DWORD PTR [rbp+0x90]
   1400352ff:	and    eax,0x1
   140035302:	test   eax,eax
   140035304:	je     0x14003531a
   140035306:	and    DWORD PTR [rbp+0x90],0xfffffffe
   14003530d:	lea    rcx,[rbp+0x28]
   140035311:	add    rcx,0x50
   140035315:	call   0x140018fc0
   14003531a:	add    rsp,0x20
   14003531e:	pop    rbp
   14003531f:	ret    
   140035320:	lea    rcx,[rdx+0x28]
   140035327:	jmp    0x140019280
   14003532c:	int3   
   14003532d:	int3   
   14003532e:	int3   
   14003532f:	int3   
   140035330:	rex push rbp
   140035332:	sub    rsp,0x20
   140035336:	mov    rbp,rdx
   140035339:	mov    eax,DWORD PTR [rbp+0xe0]
   14003533f:	and    eax,0x1
   140035342:	test   eax,eax
   140035344:	je     0x14003535d
   140035346:	and    DWORD PTR [rbp+0xe0],0xfffffffe
   14003534d:	lea    rcx,[rbp+0x20]
   140035351:	add    rcx,0x98
   140035358:	call   0x140018fc0
   14003535d:	add    rsp,0x20
   140035361:	pop    rbp
   140035362:	ret    
   140035363:	lea    rcx,[rdx+0x20]
   14003536a:	jmp    0x140019260
   14003536f:	lea    rcx,[rdx+0x20]
   140035376:	add    rcx,0x18
   14003537a:	jmp    0x140017100
   14003537f:	lea    rcx,[rdx+0x20]
   140035386:	jmp    0x140019380
   14003538b:	int3   
   14003538c:	int3   
   14003538d:	int3   
   14003538e:	int3   
   14003538f:	int3   
   140035390:	lea    rcx,[rdx+0x48]
   140035397:	jmp    0x140017000
   14003539c:	lea    rcx,[rdx+0x30]
   1400353a3:	jmp    0x140018d20
   1400353a8:	int3   
   1400353a9:	int3   
   1400353aa:	int3   
   1400353ab:	int3   
   1400353ac:	int3   
   1400353ad:	int3   
   1400353ae:	int3   
   1400353af:	int3   
   1400353b0:	lea    rcx,[rdx+0x50]
   1400353b7:	jmp    0x140019300
   1400353bc:	int3   
   1400353bd:	int3   
   1400353be:	int3   
   1400353bf:	int3   
   1400353c0:	lea    rcx,[rdx+0x60]
   1400353c7:	jmp    0x140019300
   1400353cc:	int3   
   1400353cd:	int3   
   1400353ce:	int3   
   1400353cf:	int3   
   1400353d0:	mov    QWORD PTR [rsp+0x10],rdx
   1400353d5:	push   rbp
   1400353d6:	sub    rsp,0x20
   1400353da:	mov    rbp,rdx
   1400353dd:	lea    rax,[rip+0xffffffffffff7789]        # 0x14002cb6d
   1400353e4:	add    rsp,0x20
   1400353e8:	pop    rbp
   1400353e9:	ret    
   1400353ea:	int3   
   1400353eb:	int3   
   1400353ec:	int3   
   1400353ed:	int3   
   1400353ee:	int3   
   1400353ef:	int3   
   1400353f0:	mov    QWORD PTR [rsp+0x10],rdx
   1400353f5:	push   rbp
   1400353f6:	sub    rsp,0x20
   1400353fa:	mov    rbp,rdx
   1400353fd:	lea    rax,[rip+0xffffffffffff77a9]        # 0x14002cbad
   140035404:	add    rsp,0x20
   140035408:	pop    rbp
   140035409:	ret    
   14003540a:	int3   
   14003540b:	int3   
   14003540c:	int3   
   14003540d:	int3   
   14003540e:	int3   
   14003540f:	int3   
   140035410:	lea    rcx,[rdx+0x28]
   140035417:	jmp    0x140019030
   14003541c:	mov    QWORD PTR [rsp+0x10],rdx
   140035421:	push   rbp
   140035422:	sub    rsp,0x20
   140035426:	mov    rbp,rdx
   140035429:	lea    rax,[rip+0xffffffffffff77e7]        # 0x14002cc17
   140035430:	add    rsp,0x20
   140035434:	pop    rbp
   140035435:	ret    
   140035436:	int3   
   140035437:	int3   
   140035438:	int3   
   140035439:	int3   
   14003543a:	int3   
   14003543b:	int3   
   14003543c:	int3   
   14003543d:	int3   
   14003543e:	int3   
   14003543f:	int3   
   140035440:	lea    rcx,[rdx+0x28]
   140035447:	jmp    0x140019030
   14003544c:	mov    QWORD PTR [rsp+0x10],rdx
   140035451:	push   rbp
   140035452:	sub    rsp,0x20
   140035456:	mov    rbp,rdx
   140035459:	lea    rax,[rip+0xffffffffffff781a]        # 0x14002cc7a
   140035460:	add    rsp,0x20
   140035464:	pop    rbp
   140035465:	ret    
   140035466:	int3   
   140035467:	int3   
   140035468:	int3   
   140035469:	int3   
   14003546a:	int3   
   14003546b:	int3   
   14003546c:	int3   
   14003546d:	int3   
   14003546e:	int3   
   14003546f:	int3   
   140035470:	lea    rcx,[rdx+0x40]
   140035477:	jmp    0x140019300
   14003547c:	int3   
   14003547d:	int3   
   14003547e:	int3   
   14003547f:	int3   
   140035480:	mov    QWORD PTR [rsp+0x10],rdx
   140035485:	push   rbp
   140035486:	sub    rsp,0x20
   14003548a:	mov    rbp,rdx
   14003548d:	lea    rax,[rip+0xffffffffffff79b9]        # 0x14002ce4d
   140035494:	add    rsp,0x20
   140035498:	pop    rbp
   140035499:	ret    
   14003549a:	int3   
   14003549b:	int3   
   14003549c:	int3   
   14003549d:	int3   
   14003549e:	int3   
   14003549f:	int3   
   1400354a0:	mov    QWORD PTR [rsp+0x10],rdx
   1400354a5:	push   rbp
   1400354a6:	sub    rsp,0x20
   1400354aa:	mov    rbp,rdx
   1400354ad:	lea    rax,[rip+0xffffffffffff79d9]        # 0x14002ce8d
   1400354b4:	add    rsp,0x20
   1400354b8:	pop    rbp
   1400354b9:	ret    
   1400354ba:	int3   
   1400354bb:	int3   
   1400354bc:	int3   
   1400354bd:	int3   
   1400354be:	int3   
   1400354bf:	int3   
   1400354c0:	lea    rcx,[rdx+0x28]
   1400354c7:	jmp    0x140019030
   1400354cc:	mov    QWORD PTR [rsp+0x10],rdx
   1400354d1:	push   rbp
   1400354d2:	sub    rsp,0x20
   1400354d6:	mov    rbp,rdx
   1400354d9:	lea    rax,[rip+0xffffffffffff7a07]        # 0x14002cee7
   1400354e0:	add    rsp,0x20
   1400354e4:	pop    rbp
   1400354e5:	ret    
   1400354e6:	int3   
   1400354e7:	int3   
   1400354e8:	int3   
   1400354e9:	int3   
   1400354ea:	int3   
   1400354eb:	int3   
   1400354ec:	int3   
   1400354ed:	int3   
   1400354ee:	int3   
   1400354ef:	int3   
   1400354f0:	lea    rcx,[rdx+0x28]
   1400354f7:	jmp    0x140019030
   1400354fc:	mov    QWORD PTR [rsp+0x10],rdx
   140035501:	push   rbp
   140035502:	sub    rsp,0x20
   140035506:	mov    rbp,rdx
   140035509:	lea    rax,[rip+0xffffffffffff7a2a]        # 0x14002cf3a
   140035510:	add    rsp,0x20
   140035514:	pop    rbp
   140035515:	ret    
   140035516:	int3   
   140035517:	int3   
   140035518:	int3   
   140035519:	int3   
   14003551a:	int3   
   14003551b:	int3   
   14003551c:	int3   
   14003551d:	int3   
   14003551e:	int3   
   14003551f:	int3   
   140035520:	lea    rcx,[rdx+0x28]
   140035527:	jmp    0x140019030
   14003552c:	int3   
   14003552d:	int3   
   14003552e:	int3   
   14003552f:	int3   
   140035530:	lea    rcx,[rdx+0x28]
   140035537:	jmp    0x140019030
   14003553c:	int3   
   14003553d:	int3   
   14003553e:	int3   
   14003553f:	int3   
   140035540:	rex push rbp
   140035542:	sub    rsp,0x20
   140035546:	mov    rbp,rdx
   140035549:	mov    eax,DWORD PTR [rbp+0x20]
   14003554c:	and    eax,0x1
   14003554f:	test   eax,eax
   140035551:	je     0x140035560
   140035553:	and    DWORD PTR [rbp+0x20],0xfffffffe
   140035557:	mov    rcx,QWORD PTR [rbp+0x60]
   14003555b:	call   0x140017100
   140035560:	add    rsp,0x20
   140035564:	pop    rbp
   140035565:	ret    
   140035566:	int3   
   140035567:	int3   
   140035568:	int3   
   140035569:	int3   
   14003556a:	int3   
   14003556b:	int3   
   14003556c:	int3   
   14003556d:	int3   
   14003556e:	int3   
   14003556f:	int3   
   140035570:	lea    rcx,[rdx+0x50]
   140035577:	jmp    0x140017100
   14003557c:	int3   
   14003557d:	int3   
   14003557e:	int3   
   14003557f:	int3   
   140035580:	lea    rcx,[rdx+0x40]
   140035587:	jmp    0x140019300
   14003558c:	int3   
   14003558d:	int3   
   14003558e:	int3   
   14003558f:	int3   
   140035590:	lea    rcx,[rdx+0x28]
   140035597:	jmp    0x140019280
   14003559c:	int3   
   14003559d:	int3   
   14003559e:	int3   
   14003559f:	int3   
   1400355a0:	lea    rcx,[rdx+0x30]
   1400355a7:	jmp    0x140017100
   1400355ac:	int3   
   1400355ad:	int3   
   1400355ae:	int3   
   1400355af:	int3   
   1400355b0:	lea    rcx,[rdx+0x40]
   1400355b7:	jmp    0x140019300
   1400355bc:	int3   
   1400355bd:	int3   
   1400355be:	int3   
   1400355bf:	int3   
   1400355c0:	lea    rcx,[rdx+0x40]
   1400355c7:	jmp    0x140019300
   1400355cc:	int3   
   1400355cd:	int3   
   1400355ce:	int3   
   1400355cf:	int3   
   1400355d0:	rex push rbp
   1400355d2:	sub    rsp,0x20
   1400355d6:	mov    rbp,rdx
   1400355d9:	mov    eax,DWORD PTR [rbp+0x20]
   1400355dc:	and    eax,0x2
   1400355df:	test   eax,eax
   1400355e1:	je     0x1400355f8
   1400355e3:	and    DWORD PTR [rbp+0x20],0xfffffffd
   1400355e7:	lea    rcx,[rbp+0x30]
   1400355eb:	add    rcx,0x88
   1400355f2:	call   QWORD PTR [rip+0xba8]        # 0x1400361a0
   1400355f8:	add    rsp,0x20
   1400355fc:	pop    rbp
   1400355fd:	ret    
   1400355fe:	lea    rcx,[rdx+0x30]
   140035605:	add    rcx,0x10
   140035609:	rex.W jmp QWORD PTR [rip+0xb60]        # 0x140036170
   140035610:	lea    rcx,[rdx+0x30]
   140035617:	jmp    0x14001a800
   14003561c:	lea    rcx,[rdx+0x170]
   140035623:	jmp    0x140019170
   140035628:	int3   
   140035629:	int3   
   14003562a:	int3   
   14003562b:	int3   
   14003562c:	int3   
   14003562d:	int3   
   14003562e:	int3   
   14003562f:	int3   
   140035630:	lea    rcx,[rdx+0x380]
   140035637:	jmp    0x140017100
   14003563c:	mov    rcx,QWORD PTR [rdx+0x50]
   140035643:	add    rcx,0x8
   140035647:	jmp    0x140019310
   14003564c:	lea    rcx,[rdx+0x100]
   140035653:	jmp    0x140018650
   140035658:	lea    rcx,[rdx+0x100]
   14003565f:	jmp    0x1400170c0
   140035664:	lea    rcx,[rdx+0xa0]
   14003566b:	jmp    0x140017100
   140035670:	lea    rcx,[rdx+0x60]
   140035677:	jmp    0x140017100
   14003567c:	lea    rcx,[rdx+0x500]
   140035683:	rex.W jmp QWORD PTR [rip+0xeae]        # 0x140036538
   14003568a:	lea    rcx,[rdx+0x2e0]
   140035691:	jmp    0x140017140
   140035696:	lea    rcx,[rdx+0x2e0]
   14003569d:	rex.W jmp QWORD PTR [rip+0xe94]        # 0x140036538
   1400356a4:	lea    rcx,[rdx+0x5a0]
   1400356ab:	rex.W jmp QWORD PTR [rip+0xe86]        # 0x140036538
   1400356b2:	lea    rcx,[rdx+0x428]
   1400356b9:	rex.W jmp QWORD PTR [rip+0xe78]        # 0x140036538
   1400356c0:	lea    rcx,[rdx+0x580]
   1400356c7:	rex.W jmp QWORD PTR [rip+0xe6a]        # 0x140036538
   1400356ce:	lea    rcx,[rdx+0x240]
   1400356d5:	jmp    0x140017100
   1400356da:	lea    rcx,[rdx+0x520]
   1400356e1:	rex.W jmp QWORD PTR [rip+0xe50]        # 0x140036538
   1400356e8:	lea    rcx,[rdx+0x560]
   1400356ef:	rex.W jmp QWORD PTR [rip+0xe42]        # 0x140036538
   1400356f6:	lea    rcx,[rdx+0x540]
   1400356fd:	rex.W jmp QWORD PTR [rip+0xe34]        # 0x140036538
   140035704:	lea    rcx,[rdx+0x170]
   14003570b:	jmp    0x140017100
   140035710:	lea    rcx,[rdx+0x360]
   140035717:	jmp    0x140017100
   14003571c:	lea    rcx,[rdx+0x2a0]
   140035723:	jmp    0x140017100
   140035728:	lea    rcx,[rdx+0x5c0]
   14003572f:	rex.W jmp QWORD PTR [rip+0xfaa]        # 0x1400366e0
   140035736:	lea    rcx,[rdx+0x4c0]
   14003573d:	rex.W jmp QWORD PTR [rip+0xf24]        # 0x140036668
   140035744:	lea    rcx,[rdx+0x490]
   14003574b:	jmp    0x140017000
   140035750:	rex push rbp
   140035752:	sub    rsp,0x20
   140035756:	mov    rbp,rdx
   140035759:	mov    eax,DWORD PTR [rbp+0x40]
   14003575c:	and    eax,0x1
   14003575f:	test   eax,eax
   140035761:	je     0x140035773
   140035763:	and    DWORD PTR [rbp+0x40],0xfffffffe
   140035767:	lea    rcx,[rbp+0x220]
   14003576e:	call   0x140017100
   140035773:	add    rsp,0x20
   140035777:	pop    rbp
   140035778:	ret    
   140035779:	lea    rcx,[rdx+0x3a0]
   140035780:	rex.W jmp QWORD PTR [rip+0xdb1]        # 0x140036538
   140035787:	lea    rcx,[rdx+0x400]
   14003578e:	jmp    0x140017040
   140035793:	lea    rcx,[rdx+0x120]
   14003579a:	jmp    0x140017100
   14003579f:	lea    rcx,[rdx+0x1f0]
   1400357a6:	jmp    0x140018a80
   1400357ab:	lea    rcx,[rdx+0x190]
   1400357b2:	jmp    0x140018a80
   1400357b7:	lea    rcx,[rdx+0x1c0]
   1400357be:	jmp    0x140018a80
   1400357c3:	lea    rcx,[rdx+0x80]
   1400357ca:	jmp    0x140017100
   1400357cf:	lea    rcx,[rdx+0x280]
   1400357d6:	jmp    0x140017100
   1400357db:	lea    rcx,[rdx+0xe0]
   1400357e2:	jmp    0x140017100
   1400357e7:	lea    rcx,[rdx+0x260]
   1400357ee:	jmp    0x140017100
   1400357f3:	lea    rcx,[rdx+0xc0]
   1400357fa:	jmp    0x140017100
   1400357ff:	lea    rcx,[rdx+0x320]
   140035806:	jmp    0x140017100
   14003580b:	lea    rcx,[rdx+0x140]
   140035812:	jmp    0x140018d70
   140035817:	lea    rcx,[rdx+0x460]
   14003581e:	rex.W jmp QWORD PTR [rip+0xd13]        # 0x140036538
   140035825:	lea    rcx,[rdx+0x460]
   14003582c:	jmp    0x140018e30
   140035831:	lea    rcx,[rdx+0x50]
   140035838:	jmp    0x140019170
   14003583d:	lea    rcx,[rdx+0x2c0]
   140035844:	jmp    0x140017100
   140035849:	lea    rcx,[rdx+0x460]
   140035850:	rex.W jmp QWORD PTR [rip+0xce1]        # 0x140036538
   140035857:	lea    rcx,[rdx+0x300]
   14003585e:	jmp    0x140017100
   140035863:	lea    rcx,[rdx+0x340]
   14003586a:	jmp    0x140017100
   14003586f:	mov    QWORD PTR [rsp+0x10],rdx
   140035874:	push   rbp
   140035875:	sub    rsp,0x30
   140035879:	mov    rbp,rdx
   14003587c:	mov    rcx,QWORD PTR [rbp+0x458]
   140035883:	mov    rax,QWORD PTR [rcx]
   140035886:	call   QWORD PTR [rax+0x8]
   140035889:	mov    rdx,rax
   14003588c:	mov    rcx,QWORD PTR [rip+0x7a5]        # 0x140036038
   140035893:	call   0x140002f70
   140035898:	mov    rcx,rax
   14003589b:	lea    rdx,[rip+0xfffffffffffd2e2e]        # 0x1400086d0
   1400358a2:	call   QWORD PTR [rip+0x8b8]        # 0x140036160
   1400358a8:	lea    rdx,[rbp+0x5c0]
   1400358af:	mov    rcx,QWORD PTR [rip+0x782]        # 0x140036038
   1400358b6:	call   QWORD PTR [rip+0xd7c]        # 0x140036638
   1400358bc:	mov    rcx,rax
   1400358bf:	lea    rdx,[rip+0xfffffffffffd2e0a]        # 0x1400086d0
   1400358c6:	call   QWORD PTR [rip+0x894]        # 0x140036160
   1400358cc:	mov    ecx,0x1
   1400358d1:	call   QWORD PTR [rip+0xba9]        # 0x140036480
   1400358d7:	nop
   1400358d8:	rex push rbp
   1400358da:	sub    rsp,0x20
   1400358de:	mov    rbp,rdx
   1400358e1:	cmp    DWORD PTR [rbp+0x20],0x0
   1400358e5:	jne    0x1400358fd
   1400358e7:	mov    r9,QWORD PTR [rbp+0x78]
   1400358eb:	mov    r8d,DWORD PTR [rbp+0x70]
   1400358ef:	mov    rdx,QWORD PTR [rbp+0x68]
   1400358f3:	mov    rcx,QWORD PTR [rbp+0x60]
   1400358f7:	call   0x14003022c
   1400358fc:	nop
   1400358fd:	add    rsp,0x20
   140035901:	pop    rbp
   140035902:	ret    
   140035903:	int3   
   140035904:	rex push rbp
   140035906:	sub    rsp,0x20
   14003590a:	mov    rbp,rdx
   14003590d:	mov    QWORD PTR [rbp+0x38],rcx
   140035911:	mov    QWORD PTR [rbp+0x28],rcx
   140035915:	mov    rax,QWORD PTR [rbp+0x28]
   140035919:	mov    rcx,QWORD PTR [rax]
   14003591c:	mov    QWORD PTR [rbp+0x30],rcx
   140035920:	mov    rax,QWORD PTR [rbp+0x30]
   140035924:	cmp    DWORD PTR [rax],0xe06d7363
   14003592a:	je     0x140035938
   14003592c:	mov    DWORD PTR [rbp+0x20],0x0
   140035933:	mov    eax,DWORD PTR [rbp+0x20]
   140035936:	jmp    0x14003593e
   140035938:	call   0x1400309d6
   14003593d:	nop
   14003593e:	add    rsp,0x20
   140035942:	pop    rbp
   140035943:	ret    
   140035944:	int3   
   140035945:	rex push rbp
   140035947:	sub    rsp,0x20
   14003594b:	mov    rbp,rdx
   14003594e:	mov    ecx,0x8
   140035953:	call   0x1400309e8
   140035958:	nop
   140035959:	add    rsp,0x20
   14003595d:	pop    rbp
   14003595e:	ret    
   14003595f:	int3   
   140035960:	rex push rbp
   140035962:	sub    rsp,0x20
   140035966:	mov    rbp,rdx
   140035969:	mov    rax,QWORD PTR [rcx]
   14003596c:	mov    rdx,rcx
   14003596f:	mov    ecx,DWORD PTR [rax]
   140035971:	call   0x140030a58
   140035976:	nop
   140035977:	add    rsp,0x20
   14003597b:	pop    rbp
   14003597c:	ret    
   14003597d:	int3   
   14003597e:	int3   
   14003597f:	int3   
   140035980:	rex push rbp
   140035982:	sub    rsp,0x20
   140035986:	mov    rbp,rdx
   140035989:	mov    rax,QWORD PTR [rcx]
   14003598c:	xor    ecx,ecx
   14003598e:	cmp    DWORD PTR [rax],0xc0000005
   140035994:	sete   cl
   140035997:	mov    eax,ecx
   140035999:	add    rsp,0x20
   14003599d:	pop    rbp
   14003599e:	ret    
   14003599f:	int3   
   1400359a0:	lea    rax,[rip+0x4cd1]        # 0x14003a678
   1400359a7:	mov    QWORD PTR [rip+0x1f652],rax        # 0x140055000
   1400359ae:	ret    
   1400359af:	int3   
   1400359b0:	lea    rax,[rip+0x4cc1]        # 0x14003a678
   1400359b7:	mov    QWORD PTR [rip+0x1f64a],rax        # 0x140055008
   1400359be:	ret    
   1400359bf:	int3   
   1400359c0:	lea    rax,[rip+0x4cb1]        # 0x14003a678
   1400359c7:	mov    QWORD PTR [rip+0x1f642],rax        # 0x140055010
   1400359ce:	ret    
   1400359cf:	int3   
   1400359d0:	lea    rcx,[rip+0x21fb1]        # 0x140057988
   1400359d7:	rex.W jmp QWORD PTR [rip+0xb5a]        # 0x140036538
   1400359de:	int3   
   1400359df:	int3   
   1400359e0:	rex push rbx
   1400359e2:	push   rsi
   1400359e3:	push   r14
   1400359e5:	sub    rsp,0x40
   1400359e9:	mov    rax,QWORD PTR [rip+0x21f48]        # 0x140057938
   1400359f0:	xor    r14d,r14d
   1400359f3:	mov    rsi,QWORD PTR [rax]
   1400359f6:	mov    QWORD PTR [rax],rax
   1400359f9:	mov    rax,QWORD PTR [rip+0x21f38]        # 0x140057938
   140035a00:	mov    QWORD PTR [rax+0x8],rax
   140035a04:	mov    rbx,QWORD PTR [rip+0x21f2d]        # 0x140057938
   140035a0b:	mov    QWORD PTR [rip+0x21f2e],r14        # 0x140057940
   140035a12:	cmp    rsi,rbx
   140035a15:	je     0x140035ae0
   140035a1b:	mov    QWORD PTR [rsp+0x38],rbp
   140035a20:	mov    QWORD PTR [rsp+0x30],rdi
   140035a25:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140035a30:	mov    rbp,QWORD PTR [rsi]
   140035a33:	lea    rcx,[rsp+0x60]
   140035a38:	call   0x140010640
   140035a3d:	lea    rcx,[rsp+0x60]
   140035a42:	mov    rdx,rsi
   140035a45:	call   0x140007740
   140035a4a:	lea    rcx,[rsp+0x68]
   140035a4f:	call   0x140010640
   140035a54:	lea    rdx,[rsi+0x8]
   140035a58:	lea    rcx,[rsp+0x68]
   140035a5d:	call   0x140007740
   140035a62:	lea    rcx,[rsp+0x78]
   140035a67:	call   0x140010640
   140035a6c:	cmp    QWORD PTR [rsi+0x28],0x10
   140035a71:	jb     0x140035aa1
   140035a73:	mov    rbx,QWORD PTR [rsi+0x10]
   140035a77:	lea    rcx,[rsp+0x70]
   140035a7c:	call   0x140010620
   140035a81:	lea    rdx,[rsi+0x10]
   140035a85:	lea    rcx,[rsp+0x70]
   140035a8a:	call   0x1400076e0
   140035a8f:	lea    rcx,[rsp+0x20]
   140035a94:	call   0x140010620
   140035a99:	mov    rcx,rbx
   140035a9c:	call   0x140030282
   140035aa1:	mov    QWORD PTR [rsi+0x28],0xf
   140035aa9:	mov    QWORD PTR [rsi+0x20],r14
   140035aad:	lea    rcx,[rsp+0x21]
   140035ab2:	mov    BYTE PTR [rsi+0x10],r14b
   140035ab6:	call   0x140010640
   140035abb:	mov    rcx,rsi
   140035abe:	call   0x140030282
   140035ac3:	mov    rbx,QWORD PTR [rip+0x21e6e]        # 0x140057938
   140035aca:	mov    rsi,rbp
   140035acd:	cmp    rbp,rbx
   140035ad0:	jne    0x140035a30
   140035ad6:	mov    rdi,QWORD PTR [rsp+0x30]
   140035adb:	mov    rbp,QWORD PTR [rsp+0x38]
   140035ae0:	lea    rcx,[rsp+0x60]
   140035ae5:	call   0x140010640
   140035aea:	lea    rcx,[rsp+0x60]
   140035aef:	mov    rdx,rbx
   140035af2:	call   0x140007740
   140035af7:	lea    rcx,[rsp+0x60]
   140035afc:	call   0x140010640
   140035b01:	lea    rdx,[rbx+0x8]
   140035b05:	lea    rcx,[rsp+0x60]
   140035b0a:	call   0x140007740
   140035b0f:	lea    rcx,[rsp+0x60]
   140035b14:	call   0x140010640
   140035b19:	mov    rcx,rbx
   140035b1c:	call   0x140030282
   140035b21:	add    rsp,0x40
   140035b25:	pop    r14
   140035b27:	pop    rsi
   140035b28:	pop    rbx
   140035b29:	ret    
   140035b2a:	int3   
   140035b2b:	int3   
   140035b2c:	int3   
   140035b2d:	int3   
   140035b2e:	int3   
   140035b2f:	int3   
   140035b30:	sub    rsp,0x28
   140035b34:	cmp    QWORD PTR [rip+0x21eac],0x10        # 0x1400579e8
   140035b3c:	jb     0x140035b7c
   140035b3e:	lea    rcx,[rsp+0x30]
   140035b43:	mov    QWORD PTR [rsp+0x20],rbx
   140035b48:	mov    rbx,QWORD PTR [rip+0x21e81]        # 0x1400579d0
   140035b4f:	call   0x140010620
   140035b54:	lea    rdx,[rip+0x21e75]        # 0x1400579d0
   140035b5b:	lea    rcx,[rsp+0x30]
   140035b60:	call   0x1400076e0
   140035b65:	lea    rcx,[rsp+0x30]
   140035b6a:	call   0x140010620
   140035b6f:	mov    rcx,rbx
   140035b72:	call   0x140030282
   140035b77:	mov    rbx,QWORD PTR [rsp+0x20]
   140035b7c:	mov    QWORD PTR [rip+0x21e61],0xf        # 0x1400579e8
   140035b87:	mov    QWORD PTR [rip+0x21e4e],0x0        # 0x1400579e0
   140035b92:	mov    BYTE PTR [rip+0x21e37],0x0        # 0x1400579d0
   140035b99:	add    rsp,0x28
   140035b9d:	ret    
   140035b9e:	int3   
   140035b9f:	int3   
   140035ba0:	sub    rsp,0x28
   140035ba4:	cmp    QWORD PTR [rip+0x21e8c],0x10        # 0x140057a38
   140035bac:	jb     0x140035bec
   140035bae:	lea    rcx,[rsp+0x30]
   140035bb3:	mov    QWORD PTR [rsp+0x20],rbx
   140035bb8:	mov    rbx,QWORD PTR [rip+0x21e61]        # 0x140057a20
   140035bbf:	call   0x140010620
   140035bc4:	lea    rdx,[rip+0x21e55]        # 0x140057a20
   140035bcb:	lea    rcx,[rsp+0x30]
   140035bd0:	call   0x1400076e0
   140035bd5:	lea    rcx,[rsp+0x30]
   140035bda:	call   0x140010620
   140035bdf:	mov    rcx,rbx
   140035be2:	call   0x140030282
   140035be7:	mov    rbx,QWORD PTR [rsp+0x20]
   140035bec:	mov    QWORD PTR [rip+0x21e41],0xf        # 0x140057a38
   140035bf7:	mov    QWORD PTR [rip+0x21e2e],0x0        # 0x140057a30
   140035c02:	mov    BYTE PTR [rip+0x21e17],0x0        # 0x140057a20
   140035c09:	add    rsp,0x28
   140035c0d:	ret    
   140035c0e:	int3   
   140035c0f:	int3   
   140035c10:	sub    rsp,0x28
   140035c14:	cmp    QWORD PTR [rip+0x21df4],0x10        # 0x140057a10
   140035c1c:	jb     0x140035c5c
   140035c1e:	lea    rcx,[rsp+0x30]
   140035c23:	mov    QWORD PTR [rsp+0x20],rbx
   140035c28:	mov    rbx,QWORD PTR [rip+0x21dc9]        # 0x1400579f8
   140035c2f:	call   0x140010620
   140035c34:	lea    rdx,[rip+0x21dbd]        # 0x1400579f8
   140035c3b:	lea    rcx,[rsp+0x30]
   140035c40:	call   0x1400076e0
   140035c45:	lea    rcx,[rsp+0x30]
   140035c4a:	call   0x140010620
   140035c4f:	mov    rcx,rbx
   140035c52:	call   0x140030282
   140035c57:	mov    rbx,QWORD PTR [rsp+0x20]
   140035c5c:	mov    QWORD PTR [rip+0x21da9],0xf        # 0x140057a10
   140035c67:	mov    QWORD PTR [rip+0x21d96],0x0        # 0x140057a08
   140035c72:	mov    BYTE PTR [rip+0x21d7f],0x0        # 0x1400579f8
   140035c79:	add    rsp,0x28
   140035c7d:	ret    
   140035c7e:	int3   
   140035c7f:	int3   
   140035c80:	rex push rbx
   140035c82:	sub    rsp,0x20
   140035c86:	jmp    0x140035cb7
   140035c88:	mov    rax,QWORD PTR [rbx]
   140035c8b:	mov    rcx,QWORD PTR [rbx+0x8]
   140035c8f:	mov    QWORD PTR [rip+0x21db2],rax        # 0x140057a48
   140035c96:	mov    rax,QWORD PTR [rcx]
   140035c99:	call   QWORD PTR [rax+0x10]
   140035c9c:	test   rax,rax
   140035c9f:	je     0x140035caf
   140035ca1:	mov    r8,QWORD PTR [rax]
   140035ca4:	mov    edx,0x1
   140035ca9:	mov    rcx,rax
   140035cac:	call   QWORD PTR [r8]
   140035caf:	mov    rcx,rbx
   140035cb2:	call   0x140030282
   140035cb7:	mov    rbx,QWORD PTR [rip+0x21d8a]        # 0x140057a48
   140035cbe:	test   rbx,rbx
   140035cc1:	jne    0x140035c88
   140035cc3:	add    rsp,0x20
   140035cc7:	pop    rbx
   140035cc8:	ret    
