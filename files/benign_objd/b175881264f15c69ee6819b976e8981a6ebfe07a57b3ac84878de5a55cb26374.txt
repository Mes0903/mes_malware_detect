
b175881264f15c69ee6819b976e8981a6ebfe07a57b3ac84878de5a55cb26374.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
	...
   140001008:	mov    QWORD PTR [rsp+0x8],rbx
   14000100d:	push   rdi
   14000100e:	sub    rsp,0x30
   140001012:	xor    eax,eax
   140001014:	mov    rbx,r8
   140001017:	mov    rdi,rcx
   14000101a:	test   r8,r8
   14000101d:	je     0x140001091
   14000101f:	cmp    WORD PTR [r8],ax
   140001023:	je     0x140001091
   140001025:	or     r9d,0xffffffff
   140001029:	mov    DWORD PTR [rsp+0x20],0x1
   140001031:	or     edx,r9d
   140001034:	lea    r8,[rip+0x1175]        # 0x1400021b0
   14000103b:	mov    rcx,rbx
   14000103e:	call   QWORD PTR [rip+0x101c]        # 0x140002060
   140001044:	cmp    eax,0x2
   140001047:	jne    0x14000105c
   140001049:	xor    r9d,r9d
   14000104c:	xor    r8d,r8d
   14000104f:	mov    rdx,rdi
   140001052:	xor    ecx,ecx
   140001054:	call   QWORD PTR [rip+0x1016]        # 0x140002070
   14000105a:	jmp    0x140001091
   14000105c:	or     r9d,0xffffffff
   140001060:	mov    DWORD PTR [rsp+0x20],0x1
   140001068:	or     edx,r9d
   14000106b:	lea    r8,[rip+0x112e]        # 0x1400021a0
   140001072:	mov    rcx,rbx
   140001075:	call   QWORD PTR [rip+0xfe5]        # 0x140002060
   14000107b:	cmp    eax,0x2
   14000107e:	jne    0x140001091
   140001080:	xor    r9d,r9d
   140001083:	xor    r8d,r8d
   140001086:	mov    rdx,rdi
   140001089:	xor    ecx,ecx
   14000108b:	call   QWORD PTR [rip+0xfe7]        # 0x140002078
   140001091:	xor    eax,eax
   140001093:	mov    rbx,QWORD PTR [rsp+0x40]
   140001098:	add    rsp,0x30
   14000109c:	pop    rdi
   14000109d:	ret    
   14000109e:	int3   
   14000109f:	int3   
   1400010a0:	int3   
   1400010a1:	int3   
   1400010a2:	int3   
   1400010a3:	int3   
   1400010a4:	int3   
   1400010a5:	int3   
   1400010a6:	int3   
   1400010a7:	int3   
   1400010a8:	int3   
   1400010a9:	int3   
   1400010aa:	int3   
   1400010ab:	int3   
   1400010ac:	int3   
   1400010ad:	int3   
   1400010ae:	int3   
   1400010af:	int3   
   1400010b0:	sub    rsp,0x28
   1400010b4:	mov    eax,0x5a4d
   1400010b9:	cmp    WORD PTR [rip+0xffffffffffffef40],ax        # 0x140000000
   1400010c0:	je     0x1400010c6
   1400010c2:	xor    eax,eax
   1400010c4:	jmp    0x140001115
   1400010c6:	movsxd rcx,DWORD PTR [rip+0xffffffffffffef6f]        # 0x14000003c
   1400010cd:	lea    rax,[rip+0xffffffffffffef2c]        # 0x140000000
   1400010d4:	add    rcx,rax
   1400010d7:	cmp    DWORD PTR [rcx],0x4550
   1400010dd:	jne    0x1400010c2
   1400010df:	movzx  eax,WORD PTR [rcx+0x18]
   1400010e3:	cmp    eax,0x10b
   1400010e8:	je     0x140001104
   1400010ea:	cmp    eax,0x20b
   1400010ef:	jne    0x1400010c2
   1400010f1:	xor    eax,eax
   1400010f3:	cmp    DWORD PTR [rcx+0x84],0xe
   1400010fa:	jbe    0x140001115
   1400010fc:	cmp    DWORD PTR [rcx+0xf8],eax
   140001102:	jmp    0x140001112
   140001104:	xor    eax,eax
   140001106:	cmp    DWORD PTR [rcx+0x74],0xe
   14000110a:	jbe    0x140001115
   14000110c:	cmp    DWORD PTR [rcx+0xe8],eax
   140001112:	setne  al
   140001115:	mov    ecx,0x2
   14000111a:	mov    DWORD PTR [rip+0x1f20],eax        # 0x140003040
   140001120:	call   0x140001588
   140001125:	mov    ecx,eax
   140001127:	call   QWORD PTR [rip+0xfb3]        # 0x1400020e0
   14000112d:	mov    rcx,QWORD PTR [rip+0xf6c]        # 0x1400020a0
   140001134:	or     rax,0xffffffffffffffff
   140001138:	mov    QWORD PTR [rip+0x2491],rax        # 0x1400035d0
   14000113f:	mov    QWORD PTR [rip+0x2492],rax        # 0x1400035d8
   140001146:	mov    eax,DWORD PTR [rip+0x1f08]        # 0x140003054
   14000114c:	mov    DWORD PTR [rcx],eax
   14000114e:	mov    rcx,QWORD PTR [rip+0xf43]        # 0x140002098
   140001155:	mov    eax,DWORD PTR [rip+0x1eed]        # 0x140003048
   14000115b:	mov    DWORD PTR [rcx],eax
   14000115d:	call   0x1400015e0
   140001162:	cmp    DWORD PTR [rip+0x1e97],0x0        # 0x140003000
   140001169:	jne    0x140001178
   14000116b:	lea    rcx,[rip+0x46e]        # 0x1400015e0
   140001172:	call   QWORD PTR [rip+0xf48]        # 0x1400020c0
   140001178:	xor    eax,eax
   14000117a:	add    rsp,0x28
   14000117e:	ret    
   14000117f:	int3   
   140001180:	int3   
   140001181:	int3   
   140001182:	int3   
   140001183:	int3   
   140001184:	int3   
   140001185:	int3   
   140001186:	int3   
   140001187:	int3   
   140001188:	int3   
   140001189:	int3   
   14000118a:	int3   
   14000118b:	int3   
   14000118c:	int3   
   14000118d:	int3   
   14000118e:	int3   
   14000118f:	int3   
   140001190:	sub    rsp,0x38
   140001194:	mov    eax,DWORD PTR [rip+0x1eb6]        # 0x140003050
   14000119a:	lea    r8,[rip+0x1e97]        # 0x140003038
   1400011a1:	mov    r9d,DWORD PTR [rip+0x1ea4]        # 0x14000304c
   1400011a8:	lea    rdx,[rip+0x1e81]        # 0x140003030
   1400011af:	mov    DWORD PTR [rip+0x1e8f],eax        # 0x140003044
   1400011b5:	lea    rcx,[rip+0x1e6c]        # 0x140003028
   1400011bc:	lea    rax,[rip+0x1e81]        # 0x140003044
   1400011c3:	mov    QWORD PTR [rsp+0x20],rax
   1400011c8:	call   QWORD PTR [rip+0xf1a]        # 0x1400020e8
   1400011ce:	mov    DWORD PTR [rip+0x1e58],eax        # 0x14000302c
   1400011d4:	add    rsp,0x38
   1400011d8:	ret    
   1400011d9:	int3   
   1400011da:	int3   
   1400011db:	int3   
   1400011dc:	int3   
   1400011dd:	int3   
   1400011de:	int3   
   1400011df:	int3   
   1400011e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400011e5:	mov    QWORD PTR [rsp+0x10],rsi
   1400011ea:	mov    QWORD PTR [rsp+0x18],rdi
   1400011ef:	push   r12
   1400011f1:	push   r14
   1400011f3:	push   r15
   1400011f5:	sub    rsp,0xb0
   1400011fc:	xor    r15d,r15d
   1400011ff:	mov    DWORD PTR [rsp+0x20],r15d
   140001204:	lea    rcx,[rsp+0x40]
   140001209:	call   QWORD PTR [rip+0xe41]        # 0x140002050
   14000120f:	nop
   140001210:	mov    rax,QWORD PTR gs:0x30
   140001219:	mov    rbx,QWORD PTR [rax+0x8]
   14000121d:	mov    r14d,r15d
   140001220:	xor    eax,eax
   140001222:	lock cmpxchg QWORD PTR [rip+0x23b5],rbx        # 0x1400035e0
   14000122b:	je     0x140001249
   14000122d:	cmp    rax,rbx
   140001230:	jne    0x14000123c
   140001232:	mov    edi,0x1
   140001237:	mov    r14d,edi
   14000123a:	jmp    0x14000124e
   14000123c:	mov    ecx,0x3e8
   140001241:	call   QWORD PTR [rip+0xe11]        # 0x140002058
   140001247:	jmp    0x140001220
   140001249:	mov    edi,0x1
   14000124e:	mov    eax,DWORD PTR [rip+0x2394]        # 0x1400035e8
   140001254:	cmp    eax,edi
   140001256:	jne    0x140001266
   140001258:	mov    esi,0x1f
   14000125d:	mov    ecx,esi
   14000125f:	call   0x1400015d4
   140001264:	jmp    0x1400012d7
   140001266:	mov    eax,DWORD PTR [rip+0x237c]        # 0x1400035e8
   14000126c:	test   eax,eax
   14000126e:	jne    0x1400012cc
   140001270:	mov    DWORD PTR [rip+0x2372],edi        # 0x1400035e8
   140001276:	lea    r12,[rip+0xee3]        # 0x140002160
   14000127d:	lea    rbx,[rip+0xec4]        # 0x140002148
   140001284:	mov    QWORD PTR [rsp+0x30],rbx
   140001289:	mov    eax,r15d
   14000128c:	mov    DWORD PTR [rsp+0x24],eax
   140001290:	cmp    rbx,r12
   140001293:	jae    0x1400012be
   140001295:	test   eax,eax
   140001297:	jne    0x1400012c2
   140001299:	mov    rsi,QWORD PTR [rbx]
   14000129c:	test   rsi,rsi
   14000129f:	je     0x1400012b3
   1400012a1:	mov    rcx,rsi
   1400012a4:	mov    rax,QWORD PTR [rip+0xe75]        # 0x140002120
   1400012ab:	call   rax
   1400012ad:	call   rsi
   1400012af:	mov    DWORD PTR [rsp+0x24],eax
   1400012b3:	add    rbx,0x8
   1400012b7:	mov    QWORD PTR [rsp+0x30],rbx
   1400012bc:	jmp    0x140001290
   1400012be:	test   eax,eax
   1400012c0:	je     0x1400012d2
   1400012c2:	mov    eax,0xff
   1400012c7:	jmp    0x140001433
   1400012cc:	mov    DWORD PTR [rip+0x1d52],edi        # 0x140003024
   1400012d2:	mov    esi,0x1f
   1400012d7:	mov    eax,DWORD PTR [rip+0x230b]        # 0x1400035e8
   1400012dd:	cmp    eax,edi
   1400012df:	jne    0x1400012fe
   1400012e1:	lea    rdx,[rip+0xe58]        # 0x140002140
   1400012e8:	lea    rcx,[rip+0xe41]        # 0x140002130
   1400012ef:	call   0x1400017aa
   1400012f4:	mov    DWORD PTR [rip+0x22ea],0x2        # 0x1400035e8
   1400012fe:	test   r14d,r14d
   140001301:	jne    0x14000130d
   140001303:	mov    rax,r15
   140001306:	xchg   QWORD PTR [rip+0x22d3],rax        # 0x1400035e0
   14000130d:	cmp    QWORD PTR [rip+0x22dc],r15        # 0x1400035f0
   140001314:	je     0x140001344
   140001316:	lea    rcx,[rip+0x22d3]        # 0x1400035f0
   14000131d:	call   0x140001640
   140001322:	test   eax,eax
   140001324:	je     0x140001344
   140001326:	mov    rbx,QWORD PTR [rip+0x22c3]        # 0x1400035f0
   14000132d:	mov    rcx,rbx
   140001330:	mov    rax,QWORD PTR [rip+0xde9]        # 0x140002120
   140001337:	call   rax
   140001339:	xor    r8d,r8d
   14000133c:	lea    edx,[r8+0x2]
   140001340:	xor    ecx,ecx
   140001342:	call   rbx
   140001344:	mov    rax,QWORD PTR [rip+0xd5d]        # 0x1400020a8
   14000134b:	mov    rdx,QWORD PTR [rax]
   14000134e:	test   rdx,rdx
   140001351:	jne    0x14000135d
   140001353:	mov    eax,0xff
   140001358:	jmp    0x140001433
   14000135d:	mov    QWORD PTR [rsp+0x28],rdx
   140001362:	mov    ecx,DWORD PTR [rsp+0x20]
   140001366:	cmp    WORD PTR [rdx],0x20
   14000136a:	ja     0x1400013e4
   14000136c:	cmp    WORD PTR [rdx],r15w
   140001370:	je     0x140001376
   140001372:	test   ecx,ecx
   140001374:	jne    0x1400013e4
   140001376:	movzx  eax,WORD PTR [rdx]
   140001379:	sub    ax,di
   14000137c:	cmp    ax,si
   14000137f:	ja     0x14000138c
   140001381:	add    rdx,0x2
   140001385:	mov    QWORD PTR [rsp+0x28],rdx
   14000138a:	jmp    0x140001376
   14000138c:	mov    ecx,DWORD PTR [rsp+0x7c]
   140001390:	movzx  eax,WORD PTR [rsp+0x80]
   140001398:	mov    r9d,0xa
   14000139e:	and    cl,dil
   1400013a1:	cmovne r9d,eax
   1400013a5:	mov    r8,rdx
   1400013a8:	xor    edx,edx
   1400013aa:	lea    rcx,[rip+0xffffffffffffec4f]        # 0x140000000
   1400013b1:	call   0x140001008
   1400013b6:	mov    DWORD PTR [rip+0x1c64],eax        # 0x140003020
   1400013bc:	cmp    DWORD PTR [rip+0x1c7d],r15d        # 0x140003040
   1400013c3:	jne    0x1400013cd
   1400013c5:	mov    ecx,eax
   1400013c7:	call   QWORD PTR [rip+0xd0b]        # 0x1400020d8
   1400013cd:	cmp    DWORD PTR [rip+0x1c50],r15d        # 0x140003024
   1400013d4:	jne    0x1400013e2
   1400013d6:	call   QWORD PTR [rip+0xcec]        # 0x1400020c8
   1400013dc:	mov    eax,DWORD PTR [rip+0x1c3e]        # 0x140003020
   1400013e2:	jmp    0x140001433
   1400013e4:	cmp    WORD PTR [rdx],0x22
   1400013e8:	jne    0x1400013f8
   1400013ea:	mov    eax,r15d
   1400013ed:	test   ecx,ecx
   1400013ef:	sete   al
   1400013f2:	mov    ecx,eax
   1400013f4:	mov    DWORD PTR [rsp+0x20],eax
   1400013f8:	add    rdx,0x2
   1400013fc:	mov    QWORD PTR [rsp+0x28],rdx
   140001401:	jmp    0x140001366
   140001406:	mov    DWORD PTR [rip+0x1c14],eax        # 0x140003020
   14000140c:	cmp    DWORD PTR [rip+0x1c2d],0x0        # 0x140003040
   140001413:	jne    0x14000141e
   140001415:	mov    ecx,eax
   140001417:	call   QWORD PTR [rip+0xcb3]        # 0x1400020d0
   14000141d:	int3   
   14000141e:	cmp    DWORD PTR [rip+0x1bff],0x0        # 0x140003024
   140001425:	jne    0x140001433
   140001427:	call   QWORD PTR [rip+0xc9b]        # 0x1400020c8
   14000142d:	mov    eax,DWORD PTR [rip+0x1bed]        # 0x140003020
   140001433:	lea    r11,[rsp+0xb0]
   14000143b:	mov    rbx,QWORD PTR [r11+0x20]
   14000143f:	mov    rsi,QWORD PTR [r11+0x28]
   140001443:	mov    rdi,QWORD PTR [r11+0x30]
   140001447:	mov    rsp,r11
   14000144a:	pop    r15
   14000144c:	pop    r14
   14000144e:	pop    r12
   140001450:	ret    
   140001451:	int3   
   140001452:	int3   
   140001453:	int3   
   140001454:	int3   
   140001455:	int3   
   140001456:	int3   
   140001457:	int3   
   140001458:	int3   
   140001459:	int3   
   14000145a:	int3   
   14000145b:	int3   
   14000145c:	int3   
   14000145d:	int3   
   14000145e:	int3   
   14000145f:	int3   
   140001460:	sub    rsp,0x28
   140001464:	call   0x1400016d4
   140001469:	add    rsp,0x28
   14000146d:	jmp    0x1400011e0
   140001472:	int3   
   140001473:	int3   
   140001474:	int3   
   140001475:	int3   
   140001476:	int3   
   140001477:	int3   
   140001478:	int3   
   140001479:	int3   
   14000147a:	int3   
   14000147b:	int3   
   14000147c:	int3   
   14000147d:	int3   
   14000147e:	int3   
   14000147f:	int3   
   140001480:	int3   
   140001481:	int3   
   140001482:	int3   
   140001483:	int3   
   140001484:	int3   
   140001485:	int3   
   140001486:	data16 nop WORD PTR [rax+rax*1+0x0]
   140001490:	cmp    rcx,QWORD PTR [rip+0x1b71]        # 0x140003008
   140001497:	jne    0x1400014a9
   140001499:	rol    rcx,0x10
   14000149d:	test   cx,0xffff
   1400014a2:	jne    0x1400014a5
   1400014a4:	ret    
   1400014a5:	ror    rcx,0x10
   1400014a9:	jmp    0x140001820
   1400014ae:	int3   
   1400014af:	int3   
   1400014b0:	int3   
   1400014b1:	int3   
   1400014b2:	int3   
   1400014b3:	int3   
   1400014b4:	int3   
   1400014b5:	int3   
   1400014b6:	int3   
   1400014b7:	int3   
   1400014b8:	int3   
   1400014b9:	int3   
   1400014ba:	int3   
   1400014bb:	int3   
   1400014bc:	int3   
   1400014bd:	int3   
   1400014be:	int3   
   1400014bf:	int3   
   1400014c0:	sub    rsp,0x28
   1400014c4:	mov    rax,QWORD PTR [rcx]
   1400014c7:	cmp    DWORD PTR [rax],0xe06d7363
   1400014cd:	jne    0x1400014f2
   1400014cf:	cmp    DWORD PTR [rax+0x18],0x4
   1400014d3:	jne    0x1400014f2
   1400014d5:	mov    ecx,DWORD PTR [rax+0x20]
   1400014d8:	lea    eax,[rcx-0x19930520]
   1400014de:	cmp    eax,0x2
   1400014e1:	jbe    0x1400014eb
   1400014e3:	cmp    ecx,0x1994000
   1400014e9:	jne    0x1400014f2
   1400014eb:	call   QWORD PTR [rip+0xb9f]        # 0x140002090
   1400014f1:	int3   
   1400014f2:	xor    eax,eax
   1400014f4:	add    rsp,0x28
   1400014f8:	ret    
   1400014f9:	int3   
   1400014fa:	int3   
   1400014fb:	int3   
   1400014fc:	int3   
   1400014fd:	int3   
   1400014fe:	int3   
   1400014ff:	int3   
   140001500:	sub    rsp,0x28
   140001504:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x1400014c0
   14000150b:	call   QWORD PTR [rip+0xb37]        # 0x140002048
   140001511:	xor    eax,eax
   140001513:	add    rsp,0x28
   140001517:	ret    
   140001518:	int3   
   140001519:	int3   
   14000151a:	int3   
   14000151b:	int3   
   14000151c:	int3   
   14000151d:	int3   
   14000151e:	jmp    QWORD PTR [rip+0xb64]        # 0x140002088
   140001524:	int3   
   140001525:	int3   
   140001526:	int3   
   140001527:	int3   
   140001528:	int3   
   140001529:	int3   
   14000152a:	int3   
   14000152b:	int3   
   14000152c:	sub    rsp,0x18
   140001530:	xor    edx,edx
   140001532:	lea    rax,[rcx-0x1]
   140001536:	cmp    rax,0xfffffffffffffffd
   14000153a:	ja     0x140001578
   14000153c:	mov    eax,0x5a4d
   140001541:	cmp    WORD PTR [rcx],ax
   140001544:	jne    0x140001570
   140001546:	cmp    DWORD PTR [rcx+0x3c],edx
   140001549:	jl     0x140001570
   14000154b:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   140001552:	jae    0x140001570
   140001554:	movsxd rax,DWORD PTR [rcx+0x3c]
   140001558:	add    rax,rcx
   14000155b:	mov    QWORD PTR [rsp],rax
   14000155f:	cmp    DWORD PTR [rax],0x4550
   140001565:	cmovne rax,rdx
   140001569:	mov    rdx,rax
   14000156c:	mov    QWORD PTR [rsp],rax
   140001570:	jmp    0x140001578
   140001572:	xor    edx,edx
   140001574:	mov    QWORD PTR [rsp],rdx
   140001578:	mov    rax,rdx
   14000157b:	add    rsp,0x18
   14000157f:	ret    
   140001580:	int3   
   140001581:	int3   
   140001582:	int3   
   140001583:	int3   
   140001584:	int3   
   140001585:	int3   
   140001586:	int3   
   140001587:	int3   
   140001588:	rex push rbx
   14000158a:	sub    rsp,0x20
   14000158e:	mov    ebx,ecx
   140001590:	xor    ecx,ecx
   140001592:	call   QWORD PTR [rip+0xaa8]        # 0x140002040
   140001598:	test   rax,rax
   14000159b:	je     0x1400015c5
   14000159d:	mov    rcx,rax
   1400015a0:	call   0x14000152c
   1400015a5:	test   rax,rax
   1400015a8:	je     0x1400015c5
   1400015aa:	mov    ecx,0x2
   1400015af:	cmp    WORD PTR [rax+0x5c],cx
   1400015b3:	jne    0x1400015b9
   1400015b5:	mov    eax,ecx
   1400015b7:	jmp    0x1400015c7
   1400015b9:	cmp    WORD PTR [rax+0x5c],0x3
   1400015be:	mov    eax,0x1
   1400015c3:	je     0x1400015c7
   1400015c5:	mov    eax,ebx
   1400015c7:	add    rsp,0x20
   1400015cb:	pop    rbx
   1400015cc:	ret    
   1400015cd:	int3   
   1400015ce:	int3   
   1400015cf:	int3   
   1400015d0:	int3   
   1400015d1:	int3   
   1400015d2:	int3   
   1400015d3:	int3   
   1400015d4:	jmp    QWORD PTR [rip+0xb16]        # 0x1400020f0
   1400015da:	int3   
   1400015db:	int3   
   1400015dc:	int3   
   1400015dd:	int3   
   1400015de:	int3   
   1400015df:	int3   
   1400015e0:	xor    eax,eax
   1400015e2:	ret    
   1400015e3:	int3   
   1400015e4:	int3   
   1400015e5:	int3   
   1400015e6:	int3   
   1400015e7:	int3   
   1400015e8:	int3   
   1400015e9:	int3   
   1400015ea:	int3   
   1400015eb:	int3   
   1400015ec:	int3   
   1400015ed:	int3   
   1400015ee:	int3   
   1400015ef:	int3   
   1400015f0:	movsxd r8,DWORD PTR [rcx+0x3c]
   1400015f4:	xor    r9d,r9d
   1400015f7:	add    r8,rcx
   1400015fa:	mov    r10,rdx
   1400015fd:	movzx  eax,WORD PTR [r8+0x14]
   140001602:	movzx  r11d,WORD PTR [r8+0x6]
   140001607:	add    rax,0x18
   14000160b:	add    rax,r8
   14000160e:	test   r11d,r11d
   140001611:	je     0x140001631
   140001613:	mov    edx,DWORD PTR [rax+0xc]
   140001616:	cmp    r10,rdx
   140001619:	jb     0x140001625
   14000161b:	mov    ecx,DWORD PTR [rax+0x8]
   14000161e:	add    ecx,edx
   140001620:	cmp    r10,rcx
   140001623:	jb     0x140001633
   140001625:	inc    r9d
   140001628:	add    rax,0x28
   14000162c:	cmp    r9d,r11d
   14000162f:	jb     0x140001613
   140001631:	xor    eax,eax
   140001633:	ret    
   140001634:	int3   
   140001635:	int3   
   140001636:	int3   
   140001637:	int3   
   140001638:	int3   
   140001639:	int3   
   14000163a:	int3   
   14000163b:	int3   
   14000163c:	int3   
   14000163d:	int3   
   14000163e:	int3   
   14000163f:	int3   
   140001640:	mov    QWORD PTR [rsp+0x8],rbx
   140001645:	push   rdi
   140001646:	sub    rsp,0x20
   14000164a:	mov    rbx,rcx
   14000164d:	lea    rdi,[rip+0xffffffffffffe9ac]        # 0x140000000
   140001654:	mov    rcx,rdi
   140001657:	call   0x1400016a0
   14000165c:	test   eax,eax
   14000165e:	je     0x140001682
   140001660:	sub    rbx,rdi
   140001663:	mov    rdx,rbx
   140001666:	mov    rcx,rdi
   140001669:	call   0x1400015f0
   14000166e:	test   rax,rax
   140001671:	je     0x140001682
   140001673:	mov    eax,DWORD PTR [rax+0x24]
   140001676:	shr    eax,0x1f
   140001679:	not    eax
   14000167b:	and    eax,0x1
   14000167e:	jmp    0x140001682
   140001680:	xor    eax,eax
   140001682:	mov    rbx,QWORD PTR [rsp+0x30]
   140001687:	add    rsp,0x20
   14000168b:	pop    rdi
   14000168c:	ret    
   14000168d:	int3   
   14000168e:	int3   
   14000168f:	int3   
   140001690:	int3   
   140001691:	int3   
   140001692:	int3   
   140001693:	int3   
   140001694:	int3   
   140001695:	int3   
   140001696:	int3   
   140001697:	int3   
   140001698:	int3   
   140001699:	int3   
   14000169a:	int3   
   14000169b:	int3   
   14000169c:	int3   
   14000169d:	int3   
   14000169e:	int3   
   14000169f:	int3   
   1400016a0:	mov    rax,rcx
   1400016a3:	mov    ecx,0x5a4d
   1400016a8:	cmp    WORD PTR [rax],cx
   1400016ab:	je     0x1400016b0
   1400016ad:	xor    eax,eax
   1400016af:	ret    
   1400016b0:	movsxd rcx,DWORD PTR [rax+0x3c]
   1400016b4:	add    rcx,rax
   1400016b7:	xor    eax,eax
   1400016b9:	cmp    DWORD PTR [rcx],0x4550
   1400016bf:	jne    0x1400016cd
   1400016c1:	mov    edx,0x20b
   1400016c6:	cmp    WORD PTR [rcx+0x18],dx
   1400016ca:	sete   al
   1400016cd:	ret    
   1400016ce:	int3   
   1400016cf:	int3   
   1400016d0:	int3   
   1400016d1:	int3   
   1400016d2:	int3   
   1400016d3:	int3   
   1400016d4:	mov    QWORD PTR [rsp+0x20],rbx
   1400016d9:	push   rbp
   1400016da:	mov    rbp,rsp
   1400016dd:	sub    rsp,0x20
   1400016e1:	and    QWORD PTR [rbp+0x18],0x0
   1400016e6:	movabs rbx,0x2b992ddfa232
   1400016f0:	mov    rax,QWORD PTR [rip+0x1911]        # 0x140003008
   1400016f7:	cmp    rax,rbx
   1400016fa:	jne    0x14000178f
   140001700:	lea    rcx,[rbp+0x18]
   140001704:	call   QWORD PTR [rip+0x916]        # 0x140002020
   14000170a:	mov    rax,QWORD PTR [rbp+0x18]
   14000170e:	mov    QWORD PTR [rbp+0x10],rax
   140001712:	call   QWORD PTR [rip+0x918]        # 0x140002030
   140001718:	mov    eax,eax
   14000171a:	xor    QWORD PTR [rbp+0x10],rax
   14000171e:	call   QWORD PTR [rip+0x904]        # 0x140002028
   140001724:	mov    eax,eax
   140001726:	xor    QWORD PTR [rbp+0x10],rax
   14000172a:	call   QWORD PTR [rip+0x8e8]        # 0x140002018
   140001730:	mov    eax,eax
   140001732:	shl    rax,0x18
   140001736:	xor    QWORD PTR [rbp+0x10],rax
   14000173a:	call   QWORD PTR [rip+0x8d8]        # 0x140002018
   140001740:	mov    eax,eax
   140001742:	lea    rcx,[rbp+0x10]
   140001746:	xor    rax,QWORD PTR [rbp+0x10]
   14000174a:	xor    rax,rcx
   14000174d:	lea    rcx,[rbp+0x20]
   140001751:	mov    QWORD PTR [rbp+0x10],rax
   140001755:	call   QWORD PTR [rip+0x8dd]        # 0x140002038
   14000175b:	mov    eax,DWORD PTR [rbp+0x20]
   14000175e:	movabs rcx,0xffffffffffff
   140001768:	shl    rax,0x20
   14000176c:	xor    rax,QWORD PTR [rbp+0x20]
   140001770:	xor    rax,QWORD PTR [rbp+0x10]
   140001774:	and    rax,rcx
   140001777:	movabs rcx,0x2b992ddfa233
   140001781:	cmp    rax,rbx
   140001784:	cmove  rax,rcx
   140001788:	mov    QWORD PTR [rip+0x1879],rax        # 0x140003008
   14000178f:	mov    rbx,QWORD PTR [rsp+0x48]
   140001794:	not    rax
   140001797:	mov    QWORD PTR [rip+0x1872],rax        # 0x140003010
   14000179e:	add    rsp,0x20
   1400017a2:	pop    rbp
   1400017a3:	ret    
   1400017a4:	int3   
   1400017a5:	int3   
   1400017a6:	int3   
   1400017a7:	int3   
   1400017a8:	int3   
   1400017a9:	int3   
   1400017aa:	jmp    QWORD PTR [rip+0x908]        # 0x1400020b8
   1400017b0:	int3   
   1400017b1:	int3   
   1400017b2:	int3   
   1400017b3:	int3   
   1400017b4:	int3   
   1400017b5:	int3   
   1400017b6:	jmp    QWORD PTR [rip+0x8f4]        # 0x1400020b0
   1400017bc:	int3   
   1400017bd:	int3   
   1400017be:	int3   
   1400017bf:	int3   
   1400017c0:	int3   
   1400017c1:	int3   
   1400017c2:	int3   
   1400017c3:	int3   
   1400017c4:	int3   
   1400017c5:	int3   
   1400017c6:	int3   
   1400017c7:	int3   
   1400017c8:	int3   
   1400017c9:	int3   
   1400017ca:	int3   
   1400017cb:	int3   
   1400017cc:	int3   
   1400017cd:	int3   
   1400017ce:	int3   
   1400017cf:	int3   
   1400017d0:	ret    0x0
   1400017d3:	int3   
   1400017d4:	int3   
   1400017d5:	int3   
   1400017d6:	int3   
   1400017d7:	int3   
   1400017d8:	int3   
   1400017d9:	int3   
   1400017da:	int3   
   1400017db:	int3   
   1400017dc:	rex push rbx
   1400017de:	sub    rsp,0x20
   1400017e2:	mov    rbx,rcx
   1400017e5:	xor    ecx,ecx
   1400017e7:	call   QWORD PTR [rip+0x85b]        # 0x140002048
   1400017ed:	mov    rcx,rbx
   1400017f0:	call   QWORD PTR [rip+0x81a]        # 0x140002010
   1400017f6:	call   QWORD PTR [rip+0x80c]        # 0x140002008
   1400017fc:	mov    rcx,rax
   1400017ff:	mov    edx,0xc0000409
   140001804:	add    rsp,0x20
   140001808:	pop    rbx
   140001809:	rex.W jmp QWORD PTR [rip+0x7f0]        # 0x140002000
   140001810:	int3   
   140001811:	int3   
   140001812:	int3   
   140001813:	int3   
   140001814:	int3   
   140001815:	int3   
   140001816:	int3   
   140001817:	int3   
   140001818:	int3   
   140001819:	int3   
   14000181a:	int3   
   14000181b:	int3   
   14000181c:	int3   
   14000181d:	int3   
   14000181e:	int3   
   14000181f:	int3   
   140001820:	mov    QWORD PTR [rsp+0x8],rcx
   140001825:	sub    rsp,0x88
   14000182c:	lea    rcx,[rip+0x18cd]        # 0x140003100
   140001833:	call   QWORD PTR [rip+0x8cf]        # 0x140002108
   140001839:	mov    rax,QWORD PTR [rip+0x19b8]        # 0x1400031f8
   140001840:	mov    QWORD PTR [rsp+0x48],rax
   140001845:	xor    r8d,r8d
   140001848:	lea    rdx,[rsp+0x50]
   14000184d:	mov    rcx,QWORD PTR [rsp+0x48]
   140001852:	call   QWORD PTR [rip+0x8b8]        # 0x140002110
   140001858:	mov    QWORD PTR [rsp+0x40],rax
   14000185d:	cmp    QWORD PTR [rsp+0x40],0x0
   140001863:	je     0x1400018a7
   140001865:	mov    QWORD PTR [rsp+0x38],0x0
   14000186e:	lea    rax,[rsp+0x58]
   140001873:	mov    QWORD PTR [rsp+0x30],rax
   140001878:	lea    rax,[rsp+0x60]
   14000187d:	mov    QWORD PTR [rsp+0x28],rax
   140001882:	lea    rax,[rip+0x1877]        # 0x140003100
   140001889:	mov    QWORD PTR [rsp+0x20],rax
   14000188e:	mov    r9,QWORD PTR [rsp+0x40]
   140001893:	mov    r8,QWORD PTR [rsp+0x48]
   140001898:	mov    rdx,QWORD PTR [rsp+0x50]
   14000189d:	xor    ecx,ecx
   14000189f:	call   QWORD PTR [rip+0x85b]        # 0x140002100
   1400018a5:	jmp    0x1400018ca
   1400018a7:	mov    rax,QWORD PTR [rip+0x18ea]        # 0x140003198
   1400018ae:	mov    rax,QWORD PTR [rax]
   1400018b1:	mov    QWORD PTR [rip+0x1940],rax        # 0x1400031f8
   1400018b8:	mov    rax,QWORD PTR [rip+0x18d9]        # 0x140003198
   1400018bf:	add    rax,0x8
   1400018c3:	mov    QWORD PTR [rip+0x18ce],rax        # 0x140003198
   1400018ca:	mov    rax,QWORD PTR [rip+0x1927]        # 0x1400031f8
   1400018d1:	mov    QWORD PTR [rip+0x1798],rax        # 0x140003070
   1400018d8:	mov    rax,QWORD PTR [rsp+0x90]
   1400018e0:	mov    QWORD PTR [rip+0x1899],rax        # 0x140003180
   1400018e7:	mov    DWORD PTR [rip+0x176f],0xc0000409        # 0x140003060
   1400018f1:	mov    DWORD PTR [rip+0x1769],0x1        # 0x140003064
   1400018fb:	mov    DWORD PTR [rip+0x1773],0x3        # 0x140003078
   140001905:	mov    eax,0x8
   14000190a:	imul   rax,rax,0x0
   14000190e:	lea    rcx,[rip+0x176b]        # 0x140003080
   140001915:	mov    QWORD PTR [rcx+rax*1],0x2
   14000191d:	mov    eax,0x8
   140001922:	imul   rax,rax,0x1
   140001926:	lea    rcx,[rip+0x1753]        # 0x140003080
   14000192d:	mov    rdx,QWORD PTR [rip+0x16d4]        # 0x140003008
   140001934:	mov    QWORD PTR [rcx+rax*1],rdx
   140001938:	mov    eax,0x8
   14000193d:	imul   rax,rax,0x2
   140001941:	lea    rcx,[rip+0x1738]        # 0x140003080
   140001948:	mov    rdx,QWORD PTR [rip+0x16c1]        # 0x140003010
   14000194f:	mov    QWORD PTR [rcx+rax*1],rdx
   140001953:	mov    eax,0x8
   140001958:	imul   rax,rax,0x0
   14000195c:	mov    rcx,QWORD PTR [rip+0x16a5]        # 0x140003008
   140001963:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140001968:	mov    eax,0x8
   14000196d:	imul   rax,rax,0x1
   140001971:	mov    rcx,QWORD PTR [rip+0x1698]        # 0x140003010
   140001978:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   14000197d:	lea    rcx,[rip+0x80c]        # 0x140002190
   140001984:	call   0x1400017dc
   140001989:	add    rsp,0x88
   140001990:	ret    
   140001991:	int3   
   140001992:	int3   
   140001993:	int3   
   140001994:	int3   
   140001995:	int3   
   140001996:	int3   
   140001997:	int3   
   140001998:	int3   
   140001999:	int3   
   14000199a:	int3   
   14000199b:	int3   
   14000199c:	int3   
   14000199d:	int3   
   14000199e:	int3   
   14000199f:	int3   
   1400019a0:	int3   
   1400019a1:	int3   
   1400019a2:	int3   
   1400019a3:	int3   
   1400019a4:	int3   
   1400019a5:	int3   
   1400019a6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400019b0:	jmp    rax
   1400019b2:	int3   
   1400019b3:	int3   
   1400019b4:	int3   
   1400019b5:	int3   
   1400019b6:	int3   
   1400019b7:	int3   
   1400019b8:	int3   
   1400019b9:	int3   
   1400019ba:	int3   
   1400019bb:	int3   
   1400019bc:	int3   
   1400019bd:	int3   
   1400019be:	int3   
   1400019bf:	int3   
   1400019c0:	int3   
   1400019c1:	int3   
   1400019c2:	int3   
   1400019c3:	int3   
   1400019c4:	int3   
   1400019c5:	int3   
   1400019c6:	rex push rbp
   1400019c8:	sub    rsp,0x20
   1400019cc:	mov    rbp,rdx
   1400019cf:	mov    rax,QWORD PTR [rcx]
   1400019d2:	mov    rdx,rcx
   1400019d5:	mov    ecx,DWORD PTR [rax]
   1400019d7:	call   0x14000151e
   1400019dc:	nop
   1400019dd:	add    rsp,0x20
   1400019e1:	pop    rbp
   1400019e2:	ret    
   1400019e3:	int3   
   1400019e4:	int3   
   1400019e5:	int3   
   1400019e6:	int3   
   1400019e7:	int3   
   1400019e8:	int3   
   1400019e9:	int3   
   1400019ea:	int3   
   1400019eb:	int3   
   1400019ec:	int3   
   1400019ed:	int3   
   1400019ee:	int3   
   1400019ef:	int3   
   1400019f0:	rex push rbp
   1400019f2:	sub    rsp,0x20
   1400019f6:	mov    rbp,rdx
   1400019f9:	mov    rax,QWORD PTR [rcx]
   1400019fc:	xor    ecx,ecx
   1400019fe:	cmp    DWORD PTR [rax],0xc0000005
   140001a04:	sete   cl
   140001a07:	mov    eax,ecx
   140001a09:	add    rsp,0x20
   140001a0d:	pop    rbp
   140001a0e:	ret    
   140001a0f:	int3   

Disassembly of section .rdata:

0000000140002000 <.rdata>:
   140002000:	rex.WX sub QWORD PTR [rax],rax
   140002003:	add    BYTE PTR [rax],al
   140002005:	add    BYTE PTR [rax],al
   140002007:	add    BYTE PTR [rsi],dh
   140002009:	sub    DWORD PTR [rax],eax
   14000200b:	add    BYTE PTR [rax],al
   14000200d:	add    BYTE PTR [rax],al
   14000200f:	add    BYTE PTR [rdx],bl
   140002011:	sub    DWORD PTR [rax],eax
   140002013:	add    BYTE PTR [rax],al
   140002015:	add    BYTE PTR [rax],al
   140002017:	add    BYTE PTR [rdx],cl
   140002019:	sub    DWORD PTR [rax],eax
   14000201b:	add    BYTE PTR [rax],al
   14000201d:	add    BYTE PTR [rax],al
   14000201f:	add    al,dh
   140002021:	sub    BYTE PTR [rax],al
   140002023:	add    BYTE PTR [rax],al
   140002025:	add    BYTE PTR [rax],al
   140002027:	add    dl,bl
   140002029:	sub    BYTE PTR [rax],al
   14000202b:	add    BYTE PTR [rax],al
   14000202d:	add    BYTE PTR [rax],al
   14000202f:	add    ah,al
   140002031:	sub    BYTE PTR [rax],al
   140002033:	add    BYTE PTR [rax],al
   140002035:	add    BYTE PTR [rax],al
   140002037:	add    BYTE PTR [rdx+0x28],ch
   14000203d:	add    BYTE PTR [rax],al
   14000203f:	add    BYTE PTR [rsi+0x28],dl
   140002045:	add    BYTE PTR [rax],al
   140002047:	add    BYTE PTR [rax+0x28],bh
   14000204a:	add    BYTE PTR [rax],al
   14000204c:	add    BYTE PTR [rax],al
   14000204e:	add    BYTE PTR [rax],al
   140002050:	data16 sub BYTE PTR [rax],al
   140002053:	add    BYTE PTR [rax],al
   140002055:	add    BYTE PTR [rax],al
   140002057:	add    BYTE PTR [rsi+0x28],bl
   14000205a:	add    BYTE PTR [rax],al
   14000205c:	add    BYTE PTR [rax],al
   14000205e:	add    BYTE PTR [rax],al
   140002060:	rex.RX sub BYTE PTR [rax],r8b
	...
   14000206f:	add    BYTE PTR [rcx+rbp*1+0x0],ch
   140002073:	add    BYTE PTR [rax],al
   140002075:	add    BYTE PTR [rax],al
   140002077:	add    BYTE PTR [rax+0x29],al
	...
   140002085:	add    BYTE PTR [rax],al
   140002087:	add    BYTE PTR [rax],ch
   140002089:	(bad)  
   14000208a:	add    BYTE PTR [rax],al
   14000208c:	add    BYTE PTR [rax],al
   14000208e:	add    BYTE PTR [rax],al
   140002090:	fisub  DWORD PTR [rdi]
   140002092:	add    BYTE PTR [rax],al
   140002094:	add    BYTE PTR [rax],al
   140002096:	add    BYTE PTR [rax],al
   140002098:	(bad)  
   140002099:	(bad)  
   14000209a:	add    BYTE PTR [rax],al
   14000209c:	add    BYTE PTR [rax],al
   14000209e:	add    BYTE PTR [rax],al
   1400020a0:	(bad)  
   1400020a1:	(bad)  
   1400020a2:	add    BYTE PTR [rax],al
   1400020a4:	add    BYTE PTR [rax],al
   1400020a6:	add    BYTE PTR [rax],al
   1400020a8:	mov    edx,0x27
   1400020ad:	add    BYTE PTR [rax],al
   1400020af:	add    BYTE PTR [rdx+0x27],ah
   1400020b5:	add    BYTE PTR [rax],al
   1400020b7:	add    BYTE PTR [rsi+0x27],dl
   1400020bd:	add    BYTE PTR [rax],al
   1400020bf:	add    BYTE PTR [rdx+0x27],al
   1400020c5:	add    BYTE PTR [rax],al
   1400020c7:	add    BYTE PTR [rax+0x27],bh
   1400020ca:	add    BYTE PTR [rax],al
   1400020cc:	add    BYTE PTR [rax],al
   1400020ce:	add    BYTE PTR [rax],al
   1400020d0:	jo     0x1400020f9
   1400020d2:	add    BYTE PTR [rax],al
   1400020d4:	add    BYTE PTR [rax],al
   1400020d6:	add    BYTE PTR [rax],al
   1400020d8:	push   0x27
   1400020dd:	add    BYTE PTR [rax],al
   1400020df:	add    BYTE PTR [rsi+0x27],dl
   1400020e2:	add    BYTE PTR [rax],al
   1400020e4:	add    BYTE PTR [rax],al
   1400020e6:	add    BYTE PTR [rax],al
   1400020e8:	rex.R (bad) 
   1400020ea:	add    BYTE PTR [rax],al
   1400020ec:	add    BYTE PTR [rax],al
   1400020ee:	add    BYTE PTR [rax],al
   1400020f0:	ss (bad) 
	...
   1400020fe:	add    BYTE PTR [rax],al
   140002100:	sub    BYTE PTR [rax],ch
   140002102:	add    BYTE PTR [rax],al
   140002104:	add    BYTE PTR [rax],al
   140002106:	add    BYTE PTR [rax],al
   140002108:	cli    
   140002109:	(bad)  
   14000210a:	add    BYTE PTR [rax],al
   14000210c:	add    BYTE PTR [rax],al
   14000210e:	add    BYTE PTR [rax],al
   140002110:	(bad)  
   140002111:	sub    BYTE PTR [rax],al
	...
   14000211f:	add    al,dl
   140002121:	(bad)  
   140002122:	add    BYTE PTR [rax+0x1],al
   140002125:	add    BYTE PTR [rax],al
   140002127:	add    BYTE PTR [rax+0x1400019],dh
	...
   140002135:	add    BYTE PTR [rax],al
   140002137:	add    BYTE PTR [rax+0x1400011],dl
	...
   14000214d:	add    BYTE PTR [rax],al
   14000214f:	add    BYTE PTR [rax+0x1400010],dh
   140002155:	add    BYTE PTR [rax],al
   140002157:	add    BYTE PTR [rax],al
   140002159:	adc    eax,0x14000
	...
   140002166:	add    BYTE PTR [rax],al
   140002168:	mov    al,0x10
   14000216a:	add    BYTE PTR [rax],al
   14000216c:	nop
   14000216d:	adc    DWORD PTR [rax],eax
   14000216f:	add    BYTE PTR [rax+0x14],ah
   140002172:	add    BYTE PTR [rax],al
   140002174:	rcl    BYTE PTR [rax+rax*1],0x0
   140002178:	add    BYTE PTR [rip+0x15e00000],dl        # 0x155e0217e
   14000217e:	add    BYTE PTR [rax],al
   140002180:	rcl    BYTE PTR [rdi],1
   140002182:	add    BYTE PTR [rax],al
   140002184:	and    BYTE PTR [rax],bl
	...
   14000218e:	add    BYTE PTR [rax],al
   140002190:	(bad)  
   140002191:	xor    BYTE PTR [rax],al
   140002193:	rex add DWORD PTR [rax],eax
   140002196:	add    BYTE PTR [rax],al
   140002198:	add    BYTE PTR [rcx],dh
   14000219a:	add    BYTE PTR [rax+0x1],al
   14000219d:	add    BYTE PTR [rax],al
   14000219f:	add    BYTE PTR [rbx+0x0],dl
   1400021a2:	je     0x1400021a4
   1400021a4:	outs   dx,DWORD PTR ds:[rsi]
   1400021a5:	add    BYTE PTR [rax+0x0],dh
	...
   1400021b0:	push   rbx
   1400021b1:	add    BYTE PTR [rax+rax*1+0x61],dh
   1400021b5:	add    BYTE PTR [rdx+0x0],dh
   1400021b8:	je     0x1400021ba
	...
   1400021c2:	add    BYTE PTR [rax],al
   1400021c4:	rex.WRX cmp QWORD PTR [rdi+0x55],r11
   1400021cb:	add    BYTE PTR [rdx],al
   1400021cd:	add    BYTE PTR [rax],al
   1400021cf:	add    BYTE PTR [rsi],ah
   1400021d1:	add    BYTE PTR [rax],al
   1400021d3:	add    al,al
   1400021d5:	and    al,BYTE PTR [rax]
   1400021d7:	add    al,al
   1400021d9:	adc    al,BYTE PTR [rax]
   1400021db:	add    BYTE PTR [rax],al
   1400021dd:	add    BYTE PTR [rax],al
   1400021df:	add    BYTE PTR [rsi+0x39],cl
   1400021e2:	lahf   
   1400021e3:	push   rbp
   1400021e4:	add    BYTE PTR [rax],al
   1400021e6:	add    BYTE PTR [rax],al
   1400021e8:	or     eax,0xe0000000
   1400021ed:	add    DWORD PTR [rax],eax
   1400021ef:	add    ah,bh
   1400021f1:	and    al,BYTE PTR [rax]
   1400021f3:	add    ah,bh
   1400021f5:	adc    al,BYTE PTR [rax]
	...
   14000221f:	add    BYTE PTR [rax+0x0],ah
	...
   140002275:	add    BYTE PTR [rax],al
   140002277:	add    BYTE PTR [rax],cl
   140002279:	xor    BYTE PTR [rax],al
   14000227b:	rex add DWORD PTR [rax],eax
	...
   14000228e:	add    BYTE PTR [rax],al
   140002290:	and    BYTE PTR [rcx],ah
   140002292:	add    BYTE PTR [rax+0x1],al
   140002295:	add    BYTE PTR [rax],al
   140002297:	add    BYTE PTR [rax],ch
   140002299:	and    DWORD PTR [rax],eax
   14000229b:	rex add DWORD PTR [rax],eax
   14000229e:	add    BYTE PTR [rax],al
   1400022a0:	push   0x1400021
   1400022a5:	add    BYTE PTR [rax],al
   1400022a7:	add    BYTE PTR [rax],cl
	...
   1400022b1:	xor    eax,0x0
	...
   1400022be:	add    BYTE PTR [rax],al
   1400022c0:	push   rdx
   1400022c1:	push   rbx
   1400022c2:	rex.R push rbx
   1400022c4:	cld    
   1400022c5:	mov    esi,eax
   1400022c7:	jp     0x1400022d0
   1400022c9:	pop    rbp
   1400022ca:	cmp    DWORD PTR [rdx-0x53],ecx
   1400022cd:	jb     0x1400022ea
   1400022cf:	movabs ds:0x165997540,eax
   1400022d8:	rex.WRB push r11
   1400022da:	movsxd ebp,DWORD PTR [rax+0x65]
   1400022dd:	fs rex.RB js 0x140002346
   1400022e1:	cs jo  0x140002348
   1400022e4:	(bad)  
	...
   1400022f9:	add    BYTE PTR [rax],al
   1400022fb:	add    BYTE PTR [rdi+0x43],al
   1400022fe:	push   rsp
   1400022ff:	rex.WR add BYTE PTR [rax],r10b
   140002302:	add    BYTE PTR [rax],al
   140002304:	movabs al,ds:0x747865742e000009
   14000230d:	and    al,0x6d
   14000230f:	outs   dx,BYTE PTR ds:[rsi]
   140002310:	add    BYTE PTR [rax],al
   140002312:	add    BYTE PTR [rax],al
   140002314:	movabs al,ds:0x2e00000012000019
   14000231d:	je     0x140002384
   14000231f:	js     0x140002395
   140002321:	and    al,0x6d
   140002323:	outs   dx,BYTE PTR ds:[rsi]
   140002324:	and    al,0x30
   140002326:	xor    BYTE PTR [rax],al
   140002328:	rcr    BYTE PTR [rcx],0x0
   14000232b:	add    BYTE PTR [rax+0x0],dl
   14000232e:	add    BYTE PTR [rax],al
   140002330:	cs je  0x140002398
   140002333:	js     0x1400023a9
   140002335:	and    al,0x78
   140002337:	add    BYTE PTR [rax],al
   140002339:	and    BYTE PTR [rax],al
   14000233b:	add    BYTE PTR [rax],ah
   14000233d:	add    DWORD PTR [rax],eax
   14000233f:	add    BYTE PTR [rsi],ch
   140002341:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x352461
   140002349:	add    BYTE PTR [rax],al
   14000234b:	add    BYTE PTR [rax],ah
   14000234d:	and    DWORD PTR [rax],eax
   14000234f:	add    BYTE PTR [rax],dl
   140002351:	add    BYTE PTR [rax],al
   140002353:	add    BYTE PTR [rsi],ch
   140002355:	xor    BYTE PTR [rax],dh
   140002357:	movsxd esp,DWORD PTR [rsi+0x67]
   14000235a:	add    BYTE PTR [rax],al
   14000235c:	xor    BYTE PTR [rcx],ah
   14000235e:	add    BYTE PTR [rax],al
   140002360:	or     BYTE PTR [rax],al
   140002362:	add    BYTE PTR [rax],al
   140002364:	cs rex.XB push r10
   140002367:	push   rsp
   140002368:	and    al,0x58
   14000236a:	rex.XB
   14000236b:	add    BYTE PTR [r8],al
   14000236e:	add    BYTE PTR [rax],al
   140002370:	cmp    BYTE PTR [rcx],ah
   140002372:	add    BYTE PTR [rax],al
   140002374:	or     BYTE PTR [rax],al
   140002376:	add    BYTE PTR [rax],al
   140002378:	cs rex.XB push r10
   14000237b:	push   rsp
   14000237c:	and    al,0x58
   14000237e:	rex.XB
   14000237f:	rex.B
   140002380:	add    BYTE PTR [r8],al
   140002383:	add    BYTE PTR [rax+0x21],al
   140002386:	add    BYTE PTR [rax],al
   140002388:	or     BYTE PTR [rax],al
   14000238a:	add    BYTE PTR [rax],al
   14000238c:	cs rex.XB push r10
   14000238f:	push   rsp
   140002390:	and    al,0x58
   140002392:	rex.XB pop r10
   140002394:	add    BYTE PTR [rax],al
   140002396:	add    BYTE PTR [rax],al
   140002398:	and    QWORD PTR [rax],rax
   14000239b:	add    BYTE PTR [rax],cl
   14000239d:	add    BYTE PTR [rax],al
   14000239f:	add    BYTE PTR [rsi],ch
   1400023a1:	rex.XB push r10
   1400023a3:	push   rsp
   1400023a4:	and    al,0x58
   1400023a6:	rex.WB
   1400023a7:	add    BYTE PTR [r8],al
   1400023aa:	add    BYTE PTR [rax],al
   1400023ac:	push   rax
   1400023ad:	and    DWORD PTR [rax],eax
   1400023af:	add    BYTE PTR [rax],cl
   1400023b1:	add    BYTE PTR [rax],al
   1400023b3:	add    BYTE PTR [rsi],ch
   1400023b5:	rex.XB push r10
   1400023b7:	push   rsp
   1400023b8:	and    al,0x58
   1400023ba:	rex.WB
   1400023bb:	rex.B
   1400023bc:	add    BYTE PTR [r8],al
   1400023bf:	add    BYTE PTR [rax+0x21],bl
   1400023c2:	add    BYTE PTR [rax],al
   1400023c4:	or     BYTE PTR [rax],al
   1400023c6:	add    BYTE PTR [rax],al
   1400023c8:	cs rex.XB push r10
   1400023cb:	push   rsp
   1400023cc:	and    al,0x58
   1400023ce:	rex.WB pop r9
   1400023d0:	add    BYTE PTR [rax],al
   1400023d2:	add    BYTE PTR [rax],al
   1400023d4:	(bad)  
   1400023d5:	and    DWORD PTR [rax],eax
   1400023d7:	add    BYTE PTR [rax],cl
   1400023d9:	add    BYTE PTR [rax],al
   1400023db:	add    BYTE PTR [rsi],ch
   1400023dd:	rex.XB push r10
   1400023df:	push   rsp
   1400023e0:	and    al,0x58
   1400023e2:	rex.WB pop r10
   1400023e4:	add    BYTE PTR [rax],al
   1400023e6:	add    BYTE PTR [rax],al
   1400023e8:	push   0x20000021
   1400023ed:	add    BYTE PTR [rax],al
   1400023ef:	add    BYTE PTR [rsi],ch
   1400023f1:	imul   sp,WORD PTR [ebx+esi*2+0x24],0x78
   1400023f9:	add    BYTE PTR [rax],al
   1400023fb:	add    BYTE PTR [rax+0x30000021],dl
   140002401:	add    DWORD PTR [rax],eax
   140002403:	add    BYTE PTR [rsi],ch
   140002405:	jb     0x14000246b
   140002407:	(bad)  
   140002408:	je     0x14000246b
   14000240a:	add    BYTE PTR [rax],al
   14000240c:	shl    BYTE PTR [rdx],0x0
   14000240f:	add    BYTE PTR [rdx+rax*1],bl
   140002412:	add    BYTE PTR [rax],al
   140002414:	cs jb  0x14000247b
   140002417:	(bad)  
   140002418:	je     0x14000247b
   14000241a:	and    al,0x7a
   14000241c:	jp     0x140002498
   14000241e:	fs (bad) 
   140002420:	add    BYTE PTR [eax],al
   140002423:	add    al,ah
   140002425:	and    al,0x0
   140002427:	add    ah,al
   140002429:	add    BYTE PTR [rax],al
   14000242b:	add    BYTE PTR [rsi],ch
   14000242d:	js     0x140002493
   14000242f:	(bad)  
   140002430:	je     0x140002493
   140002432:	add    BYTE PTR [rax],al
   140002434:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140002435:	and    eax,0x500000
   14000243a:	add    BYTE PTR [rax],al
   14000243c:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x322461
   140002445:	add    BYTE PTR [rax],al
   140002447:	add    ah,dh
   140002449:	and    eax,0x140000
   14000244e:	add    BYTE PTR [rax],al
   140002450:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   140002459:	add    BYTE PTR [rax],al
   14000245b:	add    BYTE PTR [rax],cl
   14000245d:	add    BYTE PTR es:[rax],al
   140002460:	and    BYTE PTR [rcx],al
   140002462:	add    BYTE PTR [rax],al
   140002464:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x342461
   14000246d:	add    BYTE PTR [rax],al
   14000246f:	add    BYTE PTR [rax],ch
   140002471:	(bad)  
   140002472:	add    BYTE PTR [rax],al
   140002474:	jl     0x140002478
   140002476:	add    BYTE PTR [rax],al
   140002478:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x362461
   140002481:	add    BYTE PTR [rax],al
   140002483:	add    BYTE PTR [rax],al
   140002485:	xor    BYTE PTR [rax],al
   140002487:	add    BYTE PTR [rax],ah
   140002489:	add    BYTE PTR [rax],al
   14000248b:	add    BYTE PTR [rsi],ch
   14000248d:	fs (bad) 
   14000248f:	je     0x1400024f2
   140002491:	add    BYTE PTR [rax],al
   140002493:	add    BYTE PTR [rax],ah
   140002495:	xor    BYTE PTR [rax],al
   140002497:	add    al,bl
   140002499:	add    eax,0x622e0000
   14000249e:	jae    0x140002513
   1400024a0:	add    BYTE PTR [rax],al
   1400024a2:	add    BYTE PTR [rax],al
   1400024a4:	add    BYTE PTR [rax+0x0],al
   1400024a7:	add    ah,cl
   1400024a9:	add    BYTE PTR [rax],al
   1400024ab:	add    BYTE PTR [rsi],ch
   1400024ad:	jo     0x140002513
   1400024af:	(bad)  
   1400024b0:	je     0x140002513
   1400024b2:	add    BYTE PTR [rax],al
   1400024b4:	add    BYTE PTR [rax+0x0],dl
   1400024b7:	add    BYTE PTR [rax],dh
   1400024b9:	add    eax,DWORD PTR [rax]
   1400024bb:	add    BYTE PTR [rsi],ch
   1400024bd:	jb     0x140002532
   1400024bf:	jb     0x140002524
   1400024c1:	and    al,0x30
   1400024c3:	xor    DWORD PTR [rax],eax
   1400024c5:	add    BYTE PTR [rax],al
   1400024c7:	add    BYTE PTR [rax],dh
   1400024c9:	push   rbx
   1400024ca:	add    BYTE PTR [rax],al
   1400024cc:	(bad)  
   1400024cd:	and    al,BYTE PTR [rcx]
   1400024cf:	add    BYTE PTR [rsi],ch
   1400024d1:	jb     0x140002546
   1400024d3:	jb     0x140002538
   1400024d5:	and    al,0x30
   1400024d7:	xor    al,BYTE PTR [rax]
   1400024d9:	add    BYTE PTR [rax],al
   1400024db:	add    BYTE PTR [rax],al
   1400024dd:	add    BYTE PTR [rax],al
   1400024df:	add    BYTE PTR [rcx],al
   1400024e1:	or     al,BYTE PTR [rax+rax*1]
   1400024e4:	or     dh,BYTE PTR [rax+rcx*1]
   1400024e7:	add    BYTE PTR [rdx],cl
   1400024e9:	push   rdx
   1400024ea:	(bad)  
   1400024eb:	jo     0x1400024ee
   1400024ed:	add    al,0x1
   1400024ef:	add    BYTE PTR [rdx+rax*2],al
   1400024f2:	add    BYTE PTR [rax],al
   1400024f4:	add    DWORD PTR [rcx+rax*1],eax
   1400024f7:	add    BYTE PTR [rdx+riz*2],al
   1400024fa:	add    BYTE PTR [rax],al
   1400024fc:	or     DWORD PTR [rbx+rcx*1],ebx
   1400024ff:	add    BYTE PTR [rsp+rsi*2],bl
   140002502:	sbb    al,0x0
   140002504:	sbb    al,0x64
   140002506:	sbb    eax,DWORD PTR [rax]
   140002508:	sbb    al,0x34
   14000250a:	sbb    al,BYTE PTR [rax]
   14000250c:	sbb    al,0x1
   14000250e:	(bad)  
   14000250f:	add    BYTE PTR [rip+0x11e013f0],dl        # 0x151e03905
   140002515:	rol    BYTE PTR [rax],0x0
   140002518:	mov    dh,0x17
   14000251a:	add    BYTE PTR [rax],al
   14000251c:	add    DWORD PTR [rax],eax
   14000251e:	add    BYTE PTR [rax],al
   140002520:	adc    BYTE PTR [rdx],dl
   140002522:	add    BYTE PTR [rax],al
   140002524:	(bad)  
   140002525:	adc    al,0x0
   140002527:	add    dh,al
   140002529:	sbb    DWORD PTR [rax],eax
   14000252b:	add    BYTE PTR [rsi],al
   14000252d:	adc    al,0x0
   14000252f:	add    BYTE PTR [rcx],al
   140002531:	add    BYTE PTR [rax],al
   140002533:	add    BYTE PTR [rcx],cl
   140002535:	add    al,0x1
   140002537:	add    BYTE PTR [rdx+riz*1],al
   14000253a:	add    BYTE PTR [rax],al
   14000253c:	mov    dh,0x17
   14000253e:	add    BYTE PTR [rax],al
   140002540:	add    DWORD PTR [rax],eax
   140002542:	add    BYTE PTR [rax],al
   140002544:	cmp    al,0x15
   140002546:	add    BYTE PTR [rax],al
   140002548:	jb     0x14000255f
   14000254a:	add    BYTE PTR [rax],al
   14000254c:	add    DWORD PTR [rax],eax
   14000254e:	add    BYTE PTR [rax],al
   140002550:	jb     0x140002567
   140002552:	add    BYTE PTR [rax],al
   140002554:	add    DWORD PTR [rsi],eax
   140002556:	add    al,BYTE PTR [rax]
   140002558:	(bad)  
   140002559:	xor    al,BYTE PTR [rdx]
   14000255b:	xor    BYTE PTR [rcx],cl
   14000255d:	or     al,BYTE PTR [rax+rax*1]
   140002560:	or     dh,BYTE PTR [rsi+rax*1]
   140002563:	add    BYTE PTR [rdx],cl
   140002565:	xor    al,BYTE PTR [rsi]
   140002567:	jo     0x14000251f
   140002569:	(bad)  
   14000256a:	add    BYTE PTR [rax],al
   14000256c:	add    DWORD PTR [rax],eax
   14000256e:	add    BYTE PTR [rax],al
   140002570:	rex.WRB (bad) 
   140002572:	add    BYTE PTR [rax],al
   140002574:	adc    BYTE PTR [rsi],0x0
   140002577:	add    al,dh
   140002579:	sbb    DWORD PTR [rax],eax
   14000257b:	add    BYTE PTR [rax+0x1000016],al
   140002581:	(bad)  
   140002582:	add    al,BYTE PTR [rax]
   140002584:	(bad)  
   140002585:	xor    al,BYTE PTR [rdx]
   140002587:	push   rax
   140002588:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740d2592
   14000258e:	or     DWORD PTR [rax],eax
   140002590:	or     eax,0x1500632
   140002595:	or     al,0x2
   140002597:	add    BYTE PTR [rcx+rax*1],cl
   14000259a:	adc    DWORD PTR [rax],eax
   14000259c:	add    BYTE PTR [rax],al
   14000259e:	add    BYTE PTR [rax],al
   1400025a0:	add    DWORD PTR [rax],eax
   1400025a2:	add    BYTE PTR [rax],al
   1400025a4:	nop
   1400025a5:	add    BYTE PTR es:[rax],al
	...
   1400025b0:	out    dx,al
   1400025b1:	(bad)  
   1400025b2:	add    BYTE PTR [rax],al
   1400025b4:	mov    BYTE PTR [rax],ah
   1400025b6:	add    BYTE PTR [rax],al
   1400025b8:	or     BYTE PTR [rdi],ah
	...
   1400025c2:	add    BYTE PTR [rax],al
   1400025c4:	cmp    al,0x28
   1400025c6:	add    BYTE PTR [rax],al
   1400025c8:	add    BYTE PTR [rcx],ah
   1400025ca:	add    BYTE PTR [rax],al
   1400025cc:	or     BYTE PTR [rsi],ah
	...
   1400025d6:	add    BYTE PTR [rax],al
   1400025d8:	pop    rsi
   1400025d9:	sub    DWORD PTR [rax],eax
   1400025db:	add    BYTE PTR [rax],al
   1400025dd:	and    BYTE PTR [rax],al
   1400025df:	add    BYTE PTR [rax+0x26],bh
	...
   1400025ea:	add    BYTE PTR [rax],al
   1400025ec:	xchg   edx,eax
   1400025ed:	sub    DWORD PTR [rax],eax
   1400025ef:	add    BYTE PTR [rax+0x20],dh
	...
   140002606:	add    BYTE PTR [rax],al
   140002608:	rex.WX sub QWORD PTR [rax],rax
   14000260b:	add    BYTE PTR [rax],al
   14000260d:	add    BYTE PTR [rax],al
   14000260f:	add    BYTE PTR [rsi],dh
   140002611:	sub    DWORD PTR [rax],eax
   140002613:	add    BYTE PTR [rax],al
   140002615:	add    BYTE PTR [rax],al
   140002617:	add    BYTE PTR [rdx],bl
   140002619:	sub    DWORD PTR [rax],eax
   14000261b:	add    BYTE PTR [rax],al
   14000261d:	add    BYTE PTR [rax],al
   14000261f:	add    BYTE PTR [rdx],cl
   140002621:	sub    DWORD PTR [rax],eax
   140002623:	add    BYTE PTR [rax],al
   140002625:	add    BYTE PTR [rax],al
   140002627:	add    al,dh
   140002629:	sub    BYTE PTR [rax],al
   14000262b:	add    BYTE PTR [rax],al
   14000262d:	add    BYTE PTR [rax],al
   14000262f:	add    dl,bl
   140002631:	sub    BYTE PTR [rax],al
   140002633:	add    BYTE PTR [rax],al
   140002635:	add    BYTE PTR [rax],al
   140002637:	add    ah,al
   140002639:	sub    BYTE PTR [rax],al
   14000263b:	add    BYTE PTR [rax],al
   14000263d:	add    BYTE PTR [rax],al
   14000263f:	add    BYTE PTR [rdx+0x28],ch
   140002645:	add    BYTE PTR [rax],al
   140002647:	add    BYTE PTR [rsi+0x28],dl
   14000264d:	add    BYTE PTR [rax],al
   14000264f:	add    BYTE PTR [rax+0x28],bh
   140002652:	add    BYTE PTR [rax],al
   140002654:	add    BYTE PTR [rax],al
   140002656:	add    BYTE PTR [rax],al
   140002658:	data16 sub BYTE PTR [rax],al
   14000265b:	add    BYTE PTR [rax],al
   14000265d:	add    BYTE PTR [rax],al
   14000265f:	add    BYTE PTR [rsi+0x28],bl
   140002662:	add    BYTE PTR [rax],al
   140002664:	add    BYTE PTR [rax],al
   140002666:	add    BYTE PTR [rax],al
   140002668:	rex.RX sub BYTE PTR [rax],r8b
	...
   140002677:	add    BYTE PTR [rcx+rbp*1+0x0],ch
   14000267b:	add    BYTE PTR [rax],al
   14000267d:	add    BYTE PTR [rax],al
   14000267f:	add    BYTE PTR [rax+0x29],al
	...
   14000268d:	add    BYTE PTR [rax],al
   14000268f:	add    BYTE PTR [rax],ch
   140002691:	(bad)  
   140002692:	add    BYTE PTR [rax],al
   140002694:	add    BYTE PTR [rax],al
   140002696:	add    BYTE PTR [rax],al
   140002698:	fisub  DWORD PTR [rdi]
   14000269a:	add    BYTE PTR [rax],al
   14000269c:	add    BYTE PTR [rax],al
   14000269e:	add    BYTE PTR [rax],al
   1400026a0:	(bad)  
   1400026a1:	(bad)  
   1400026a2:	add    BYTE PTR [rax],al
   1400026a4:	add    BYTE PTR [rax],al
   1400026a6:	add    BYTE PTR [rax],al
   1400026a8:	(bad)  
   1400026a9:	(bad)  
   1400026aa:	add    BYTE PTR [rax],al
   1400026ac:	add    BYTE PTR [rax],al
   1400026ae:	add    BYTE PTR [rax],al
   1400026b0:	mov    edx,0x27
   1400026b5:	add    BYTE PTR [rax],al
   1400026b7:	add    BYTE PTR [rdx+0x27],ah
   1400026bd:	add    BYTE PTR [rax],al
   1400026bf:	add    BYTE PTR [rsi+0x27],dl
   1400026c5:	add    BYTE PTR [rax],al
   1400026c7:	add    BYTE PTR [rdx+0x27],al
   1400026cd:	add    BYTE PTR [rax],al
   1400026cf:	add    BYTE PTR [rax+0x27],bh
   1400026d2:	add    BYTE PTR [rax],al
   1400026d4:	add    BYTE PTR [rax],al
   1400026d6:	add    BYTE PTR [rax],al
   1400026d8:	jo     0x140002701
   1400026da:	add    BYTE PTR [rax],al
   1400026dc:	add    BYTE PTR [rax],al
   1400026de:	add    BYTE PTR [rax],al
   1400026e0:	push   0x27
   1400026e5:	add    BYTE PTR [rax],al
   1400026e7:	add    BYTE PTR [rsi+0x27],dl
   1400026ea:	add    BYTE PTR [rax],al
   1400026ec:	add    BYTE PTR [rax],al
   1400026ee:	add    BYTE PTR [rax],al
   1400026f0:	rex.R (bad) 
   1400026f2:	add    BYTE PTR [rax],al
   1400026f4:	add    BYTE PTR [rax],al
   1400026f6:	add    BYTE PTR [rax],al
   1400026f8:	ss (bad) 
	...
   140002706:	add    BYTE PTR [rax],al
   140002708:	sub    BYTE PTR [rax],ch
   14000270a:	add    BYTE PTR [rax],al
   14000270c:	add    BYTE PTR [rax],al
   14000270e:	add    BYTE PTR [rax],al
   140002710:	cli    
   140002711:	(bad)  
   140002712:	add    BYTE PTR [rax],al
   140002714:	add    BYTE PTR [rax],al
   140002716:	add    BYTE PTR [rax],al
   140002718:	(bad)  
   140002719:	sub    BYTE PTR [rax],al
	...
   140002727:	add    BYTE PTR [rbp+0x0],dl
   14000272a:	pop    rdi
   14000272b:	pop    rax
   14000272c:	movsxd esi,DWORD PTR [rax+0x74]
   14000272f:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   140002738:	pop    rdi
   140002739:	(bad)  
   14000273a:	ins    DWORD PTR es:[rdi],dx
   14000273b:	jae    0x1400027a4
   14000273d:	pop    rdi
   14000273e:	gs js  0x1400027aa
   140002741:	je     0x140002743
   140002743:	add    BYTE PTR [rbp+0x775f5f00],bl
   140002749:	addr32 gs je 0x1400027ba
   14000274d:	(bad)  
   14000274e:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   140002755:	add    BYTE PTR [rsi+0x735f5f00],cl
   14000275b:	gs je  0x1400027bd
   14000275e:	(bad)  
   14000275f:	jo     0x1400027d1
   140002761:	pop    rdi
   140002762:	je     0x1400027dd
   140002764:	jo     0x1400027cb
   140002766:	add    BYTE PTR [rax],al
   140002768:	xor    al,BYTE PTR [riz*2+0x746978]
   14000276f:	add    BYTE PTR [rsi],cl
   140002771:	add    DWORD PTR [rdi+0x65],ebx
   140002774:	js     0x1400027df
   140002776:	je     0x140002778
   140002778:	rol    DWORD PTR [rax],0x5f
   14000277b:	movsxd esp,DWORD PTR [rbp+0x78]
   14000277e:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0090
   140002786:	jae    0x1400027ed
   140002788:	je     0x1400027ff
   14000278a:	jae    0x1400027f1
   14000278c:	jb     0x1400027fb
   14000278e:	(bad)  
   14000278f:	je     0x1400027f9
   140002791:	gs jb  0x140002806
   140002794:	add    BYTE PTR [rax],al
   140002796:	jge    0x140002799
   140002798:	pop    rdi
   140002799:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   1400027a0:	ins    DWORD PTR es:[rdi],dx
   1400027a1:	add    BYTE PTR [rdi+0x0],dl
   1400027a4:	pop    rdi
   1400027a5:	pop    rdi
   1400027a6:	rex.XB pop r15
   1400027a8:	jae    0x14000281a
   1400027aa:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   1400027ae:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   1400027b5:	ins    BYTE PTR es:[rdi],dx
   1400027b6:	gs jb  0x1400027b9
   1400027b9:	add    BYTE PTR [rdx+0x63775f03],al
   1400027bf:	ins    DWORD PTR es:[rdi],dx
   1400027c0:	fs ins BYTE PTR es:[rdi],dx
   1400027c2:	outs   dx,BYTE PTR ds:[rsi]
   1400027c3:	add    BYTE PTR [rdi],ah
   1400027c5:	add    DWORD PTR [rdi+0x66],ebx
   1400027c8:	ins    DWORD PTR es:[rdi],dx
   1400027c9:	outs   dx,DWORD PTR ds:[rsi]
   1400027ca:	fs add BYTE PTR gs:[rax],al
   1400027ce:	rol    BYTE PTR [rax],cl
   1400027d0:	pop    rdi
   1400027d1:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400027d4:	ins    DWORD PTR es:[rdi],dx
   1400027d5:	outs   dx,DWORD PTR ds:[rsi]
   1400027d6:	fs add BYTE PTR gs:[rax],al
   1400027da:	(bad)  
   1400027db:	add    BYTE PTR [rdi],bh
   1400027dd:	je     0x140002844
   1400027df:	jb     0x14000284e
   1400027e1:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   1400027e8:	pop    rcx
   1400027e9:	pop    r8
   1400027eb:	pop    rax
   1400027ec:	pop    rdx
   1400027ed:	add    BYTE PTR [rbp+0x73],ch
   1400027f0:	jbe    0x140002855
   1400027f2:	jb     0x140002868
   1400027f4:	cs fs ins BYTE PTR es:[rdi],dx
   1400027f7:	ins    BYTE PTR es:[rdi],dx
   1400027f8:	add    BYTE PTR [rax],al
   1400027fa:	mov    BYTE PTR [rdx],0x52
   1400027fd:	je     0x14000286b
   1400027ff:	rex.XB (bad) 
   140002801:	jo     0x140002877
   140002803:	jne    0x140002877
   140002805:	rex.XB outs dx,DWORD PTR gs:[rsi]
   140002808:	outs   dx,BYTE PTR ds:[rsi]
   140002809:	je     0x140002870
   14000280b:	js     0x140002881
   14000280d:	add    BYTE PTR [rdi+0x4],dh
   140002810:	push   rdx
   140002811:	je     0x14000287f
   140002813:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140002815:	outs   dx,DWORD PTR ds:[rsi]
   140002816:	imul   esi,DWORD PTR [rbp+0x70],0x46
   14000281a:	jne    0x14000288a
   14000281c:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140002820:	outs   dx,BYTE PTR ds:[rsi]
   140002821:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140002823:	je     0x140002897
   140002825:	jns    0x140002827
   140002827:	add    BYTE PTR [rbx+0x6c745205],cl
   14000282d:	push   rsi
   14000282e:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   140002835:	outs   dx,BYTE PTR ds:[rsi]
   140002836:	ja     0x1400028a1
   140002838:	outs   dx,BYTE PTR ds:[rsi]
   140002839:	add    BYTE PTR fs:[rax],al
   14000283c:	outs   dx,BYTE PTR ds:[rsi]
   14000283d:	je     0x1400028a3
   14000283f:	ins    BYTE PTR es:[rdi],dx
   140002840:	ins    BYTE PTR es:[rdi],dx
   140002841:	cs fs ins BYTE PTR es:[rdi],dx
   140002844:	ins    BYTE PTR es:[rdi],dx
   140002845:	add    BYTE PTR [rax+0x6d6f4300],dl
   14000284b:	jo     0x1400028ae
   14000284d:	jb     0x1400028b4
   14000284f:	push   rbx
   140002850:	je     0x1400028c4
   140002852:	imul   ebp,DWORD PTR [rsi+0x67],0x6964724f
   140002859:	outs   dx,BYTE PTR ds:[rsi]
   14000285a:	(bad)  
   14000285b:	ins    BYTE PTR es:[rdi],dx
   14000285c:	add    BYTE PTR [rax],al
   14000285e:	ins    DWORD PTR es:[rdi],dx
   14000285f:	add    eax,0x65656c53
   140002864:	jo     0x140002866
   140002866:	mov    DWORD PTR [rdx],0x53746547
   14000286c:	je     0x1400028cf
   14000286e:	jb     0x1400028e4
   140002870:	jne    0x1400028e2
   140002872:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140002874:	outs   dx,WORD PTR ds:[rsi]
   140002876:	push   rdi
   140002877:	add    BYTE PTR [rsi+0x5],bl
   14000287a:	push   rbx
   14000287b:	gs je  0x1400028d3
   14000287e:	outs   dx,BYTE PTR ds:[rsi]
   14000287f:	push   0x6c646e61
   140002884:	gs fs rex.RB js 0x1400028ec
   140002889:	gs jo  0x140002900
   14000288c:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140002893:	gs jb  0x140002896
   140002896:	outs   dx,BYTE PTR ds:[rsi]
   140002897:	add    al,BYTE PTR [rdi+0x65]
   14000289a:	je     0x1400028e9
   14000289c:	outs   dx,DWORD PTR ds:[rsi]
   14000289d:	fs jne 0x14000290c
   1400028a0:	gs rex.W (bad) 
   1400028a3:	outs   dx,BYTE PTR ds:[rsi]
   1400028a4:	fs ins BYTE PTR es:[rdi],dx
   1400028a6:	gs push rdi
   1400028a8:	add    BYTE PTR [rax],al
   1400028aa:	ss add al,0x51
   1400028ad:	jne    0x140002914
   1400028af:	jb     0x14000292a
   1400028b1:	push   rax
   1400028b2:	gs jb  0x14000291b
   1400028b5:	outs   dx,DWORD PTR ds:[rsi]
   1400028b6:	jb     0x140002925
   1400028b8:	(bad)  
   1400028b9:	outs   dx,BYTE PTR ds:[rsi]
   1400028ba:	movsxd esp,DWORD PTR [rbp+0x43]
   1400028bd:	outs   dx,DWORD PTR ds:[rsi]
   1400028be:	jne    0x14000292e
   1400028c0:	je     0x140002927
   1400028c2:	jb     0x1400028c4
   1400028c4:	adc    DWORD PTR [rdx],eax
   1400028c6:	rex.RXB
   1400028c7:	gs je  0x14000290d
   1400028ca:	jne    0x14000293e
   1400028cc:	jb     0x140002933
   1400028ce:	outs   dx,BYTE PTR ds:[rsi]
   1400028cf:	je     0x140002921
   1400028d1:	jb     0x140002942
   1400028d3:	movsxd esp,DWORD PTR [rbp+0x73]
   1400028d6:	jae    0x140002921
   1400028d8:	add    BYTE PTR fs:[rip+0x74654702],dl        # 0x1b4656fe1
   1400028df:	rex.XB jne 0x140002954
   1400028e2:	jb     0x140002949
   1400028e4:	outs   dx,BYTE PTR ds:[rsi]
   1400028e5:	je     0x14000293b
   1400028e7:	push   0x64616572
   1400028ec:	rex.WB
   1400028ed:	add    BYTE PTR fs:[rax],al
   1400028f0:	loopne 0x1400028f4
   1400028f2:	rex.RXB
   1400028f3:	gs je  0x140002949
   1400028f6:	jns    0x14000296b
   1400028f8:	je     0x14000295f
   1400028fa:	ins    DWORD PTR es:[rdi],dx
   1400028fb:	push   rsp
   1400028fc:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   140002903:	ins    BYTE PTR es:[rdi],dx
   140002904:	gs push rsp
   140002906:	imul   ebp,DWORD PTR [rbp+0x65],0x4702fd00
   14000290d:	gs je  0x140002964
   140002910:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   140002917:	je     0x140002919
   140002919:	add    BYTE PTR [rsi+0x686e5505],bl
   14000291f:	(bad)  
   140002920:	outs   dx,BYTE PTR ds:[rsi]
   140002921:	fs ins BYTE PTR es:[rdi],dx
   140002923:	gs fs rex.RB js 0x14000298b
   140002928:	gs jo  0x14000299f
   14000292b:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140002932:	gs jb  0x140002935
   140002935:	add    BYTE PTR [rax],dl
   140002937:	add    al,BYTE PTR [rdi+0x65]
   14000293a:	je     0x14000297f
   14000293c:	jne    0x1400029b0
   14000293e:	jb     0x1400029a5
   140002940:	outs   dx,BYTE PTR ds:[rsi]
   140002941:	je     0x140002993
   140002943:	jb     0x1400029b4
   140002945:	movsxd esp,DWORD PTR [rbp+0x73]
   140002948:	jae    0x14000294a
   14000294a:	jl     0x140002951
   14000294c:	push   rsp
   14000294d:	gs jb  0x1400029bd
   140002950:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   140002957:	outs   dx,DWORD PTR ds:[rsi]
   140002958:	movsxd esp,DWORD PTR [rbp+0x73]
   14000295b:	jae    0x14000295d
   14000295d:	add    BYTE PTR [rbx+0x45],cl
   140002960:	push   rdx
   140002961:	rex.WRX
   140002962:	rex.RB
   140002963:	xor    r14,QWORD PTR [rdx]
   140002966:	cs fs ins BYTE PTR es:[rdi],dx
   140002969:	ins    BYTE PTR es:[rdi],dx
   14000296a:	add    BYTE PTR [rax],al
   14000296c:	add    al,0x0
   14000296e:	push   rbx
   14000296f:	je     0x1400029d2
   140002971:	jb     0x1400029e7
   140002973:	rex.WRB (bad) 
   140002975:	imul   ebp,DWORD PTR [rsi+0x74],0x6e616e65
   14000297c:	movsxd esp,DWORD PTR [rbp+0x0]
   14000297f:	add    BYTE PTR [rip+0x6f745300],al        # 0x1af747c85
   140002985:	jo     0x1400029d4
   140002987:	(bad)  
   140002988:	imul   ebp,DWORD PTR [rsi+0x74],0x6e616e65
   14000298f:	movsxd esp,DWORD PTR [rbp+0x0]
   140002992:	rex.WRB (bad) 
   140002994:	imul   ebp,DWORD PTR [rsi+0x74],0x6e616e65
   14000299b:	movsxd esp,DWORD PTR [rbp+0x55]
   14000299e:	rex.WB
   14000299f:	cs fs ins BYTE PTR es:[rdi],dx
   1400029a2:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .data:

0000000140003000 <.data>:
   140003000:	add    DWORD PTR [rax],eax
   140003002:	add    BYTE PTR [rax],al
   140003004:	add    BYTE PTR [rax],al
   140003006:	add    BYTE PTR [rax],al
   140003008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000300e:	add    BYTE PTR [rax],al
   140003010:	int    0x5d
   140003012:	and    dl,dl
   140003014:	data16 (bad) 
   140003016:	(bad)  
   140003017:	inc    DWORD PTR [rax]
	...

Disassembly of section .pdata:

0000000140004000 <.pdata>:
   140004000:	or     BYTE PTR [rax],dl
   140004002:	add    BYTE PTR [rax],al
   140004004:	sahf   
   140004005:	adc    BYTE PTR [rax],al
   140004007:	add    al,ah
   140004009:	and    al,0x0
   14000400b:	add    BYTE PTR [rax+0x7f000010],dh
   140004011:	adc    DWORD PTR [rax],eax
   140004013:	add    ah,ch
   140004015:	and    al,0x0
   140004017:	add    BYTE PTR [rax-0x26ffffef],dl
   14000401d:	adc    DWORD PTR [rax],eax
   14000401f:	add    ah,dh
   140004021:	and    al,0x0
   140004023:	add    al,ah
   140004025:	adc    DWORD PTR [rax],eax
   140004027:	add    BYTE PTR [rcx+0x14],dl
   14000402a:	add    BYTE PTR [rax],al
   14000402c:	cld    
   14000402d:	and    al,0x0
   14000402f:	add    BYTE PTR [rax+0x14],ah
   140004032:	add    BYTE PTR [rax],al
   140004034:	jb     0x14000404a
   140004036:	add    BYTE PTR [rax],al
   140004038:	in     al,dx
   140004039:	and    al,0x0
   14000403b:	add    BYTE PTR [rax-0x51ffffec],dl
   140004041:	adc    al,0x0
   140004043:	add    BYTE PTR [rax],dh
   140004045:	and    eax,0x14c00000
   14000404a:	add    BYTE PTR [rax],al
   14000404c:	stc    
   14000404d:	adc    al,0x0
   14000404f:	add    ah,ch
   140004051:	and    al,0x0
   140004053:	add    BYTE PTR [rax],al
   140004055:	adc    eax,0x15180000
   14000405a:	add    BYTE PTR [rax],al
   14000405c:	in     al,dx
   14000405d:	and    al,0x0
   14000405f:	add    BYTE PTR [rdx*1+0x15800000],ch
   140004066:	add    BYTE PTR [rax],al
   140004068:	xor    al,0x25
   14000406a:	add    BYTE PTR [rax],al
   14000406c:	mov    BYTE PTR [rip+0x15cd0000],dl        # 0x155cd4072
   140004072:	add    BYTE PTR [rax],al
   140004074:	push   rsp
   140004075:	and    eax,0x16400000
   14000407a:	add    BYTE PTR [rax],al
   14000407c:	lea    edx,[rsi]
   14000407e:	add    BYTE PTR [rax],al
   140004080:	pop    rsp
   140004081:	and    eax,0x16d40000
   140004086:	add    BYTE PTR [rax],al
   140004088:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140004089:	(bad)  
   14000408a:	add    BYTE PTR [rax],al
   14000408c:	mov    BYTE PTR [rip+0x17dc0000],ah        # 0x157dc4092
   140004092:	add    BYTE PTR [rax],al
   140004094:	adc    BYTE PTR [rax],bl
   140004096:	add    BYTE PTR [rax],al
   140004098:	push   rsp
   140004099:	and    eax,0x18200000
   14000409e:	add    BYTE PTR [rax],al
   1400040a0:	xchg   ecx,eax
   1400040a1:	sbb    DWORD PTR [rax],eax
   1400040a3:	add    BYTE PTR [rbp+riz*1+0x19b00000],dl
   1400040aa:	add    BYTE PTR [rax],al
   1400040ac:	mov    dl,0x19
   1400040ae:	add    BYTE PTR [rax],al
   1400040b0:	movabs al,ds:0xe4000019c6000025
   1400040b9:	sbb    DWORD PTR [rax],eax
   1400040bb:	add    BYTE PTR [rax-0xfffffdb],al
   1400040c1:	sbb    DWORD PTR [rax],eax
   1400040c3:	add    BYTE PTR [rax],dl
   1400040c5:	sbb    al,BYTE PTR [rax]
   1400040c7:	.byte 0x0
   1400040c8:	.byte 0x80
   1400040c9:	.byte 0x25
	...

Disassembly of section .rsrc:

0000000140005000 <.rsrc>:
	...
   14000500c:	add    DWORD PTR [rax],eax
   14000500e:	add    al,0x0
   140005010:	sub    BYTE PTR [rbx],al
   140005012:	add    BYTE PTR [rax-0x7fffffc8],al
   140005018:	add    eax,DWORD PTR [rax]
   14000501a:	add    BYTE PTR [rax],al
   14000501c:	push   rax
   14000501d:	add    BYTE PTR [rax],al
   14000501f:	or     BYTE PTR [rsi],0x0
   140005022:	add    BYTE PTR [rax],al
   140005024:	mov    al,0x0
   140005026:	add    BYTE PTR [rax+0x10],al
   14000502c:	enter  0x0,0x80
   140005030:	sbb    BYTE PTR [rax],al
   140005032:	add    BYTE PTR [rax],al
   140005034:	loopne 0x140005036
   140005036:	add    BYTE PTR [rax+0x0],al
	...
   140005044:	add    BYTE PTR [rax],al
   140005046:	add    DWORD PTR [rax],eax
   140005048:	add    DWORD PTR [rax],eax
   14000504a:	add    BYTE PTR [rax],al
   14000504c:	clc    
   14000504d:	add    BYTE PTR [rax],al
   14000504f:	add    BYTE PTR [rax],0x0
	...
   14000505e:	or     al,BYTE PTR [rax]
   140005060:	add    DWORD PTR [rax],eax
   140005062:	add    BYTE PTR [rax],al
   140005064:	adc    BYTE PTR [rcx],al
   140005066:	add    BYTE PTR [rax+0x2],al
   14000506c:	sub    BYTE PTR [rcx],al
   14000506e:	add    BYTE PTR [rax+0x3],al
   140005074:	rex add DWORD PTR [rax],eax
   140005077:	add    BYTE PTR [rax+rax*1],0x0
   14000507b:	add    BYTE PTR [rax+0x1],bl
   14000507e:	add    BYTE PTR [rax+0x5],al
   140005084:	jo     0x140005087
   140005086:	add    BYTE PTR [rax+0x6],al
   14000508c:	mov    BYTE PTR [rcx],al
   14000508e:	add    BYTE PTR [rax+0x7],al
   140005094:	movabs al,ds:0xb800000008800001
   14000509d:	add    DWORD PTR [rax],eax
   14000509f:	or     BYTE PTR [rcx],0x0
   1400050a2:	add    BYTE PTR [rax],al
   1400050a4:	rol    BYTE PTR [rcx],1
   1400050a6:	add    BYTE PTR [rax+0xa],al
   1400050ac:	call   0x1408050b2
	...
   1400050bd:	add    BYTE PTR [rcx],al
   1400050bf:	add    BYTE PTR [rcx+0x1f],al
   1400050c2:	add    BYTE PTR [rax],al
   1400050c4:	add    BYTE PTR [rdx],al
   1400050c6:	add    BYTE PTR [rax+0x0],al
	...
   1400050d4:	add    BYTE PTR [rax],al
   1400050d6:	add    DWORD PTR [rax],eax
   1400050d8:	add    DWORD PTR [rax],eax
   1400050da:	add    BYTE PTR [rax],al
   1400050dc:	sbb    BYTE PTR [rdx],al
   1400050de:	add    BYTE PTR [rax+0x0],al
	...
   1400050ec:	add    BYTE PTR [rax],al
   1400050ee:	add    DWORD PTR [rax],eax
   1400050f0:	add    DWORD PTR [rax],eax
   1400050f2:	add    BYTE PTR [rax],al
   1400050f4:	xor    BYTE PTR [rdx],al
   1400050f6:	add    BYTE PTR [rax+0x0],al
	...
   140005104:	add    BYTE PTR [rax],al
   140005106:	add    DWORD PTR [rax],eax
   140005108:	or     DWORD PTR [rax+rax*1],eax
   14000510b:	add    BYTE PTR [rax+0x2],cl
	...
   14000511e:	add    DWORD PTR [rax],eax
   140005120:	or     DWORD PTR [rax+rax*1],eax
   140005123:	add    BYTE PTR [rax+0x2],bl
	...
   140005136:	add    DWORD PTR [rax],eax
   140005138:	or     DWORD PTR [rax+rax*1],eax
   14000513b:	add    BYTE PTR [rax+0x2],ch
	...
   14000514e:	add    DWORD PTR [rax],eax
   140005150:	or     DWORD PTR [rax+rax*1],eax
   140005153:	add    BYTE PTR [rax+0x2],bh
	...
   140005166:	add    DWORD PTR [rax],eax
   140005168:	or     DWORD PTR [rax+rax*1],eax
   14000516b:	add    BYTE PTR [rax+0x2],cl
	...
   14000517d:	add    BYTE PTR [rcx],al
   14000517f:	add    BYTE PTR [rcx],cl
   140005181:	add    al,0x0
   140005183:	add    BYTE PTR [rax+0x2],bl
	...
   140005195:	add    BYTE PTR [rcx],al
   140005197:	add    BYTE PTR [rcx],cl
   140005199:	add    al,0x0
   14000519b:	add    BYTE PTR [rax+0x2],ch
	...
   1400051ad:	add    BYTE PTR [rcx],al
   1400051af:	add    BYTE PTR [rcx],cl
   1400051b1:	add    al,0x0
   1400051b3:	add    BYTE PTR [rax+0x2],bh
	...
   1400051c5:	add    BYTE PTR [rcx],al
   1400051c7:	add    BYTE PTR [rcx],cl
   1400051c9:	add    al,0x0
   1400051cb:	add    al,cl
   1400051cd:	add    al,BYTE PTR [rax]
	...
   1400051db:	add    BYTE PTR [rax],al
   1400051dd:	add    BYTE PTR [rcx],al
   1400051df:	add    BYTE PTR [rcx],cl
   1400051e1:	add    al,0x0
   1400051e3:	add    al,bl
   1400051e5:	add    al,BYTE PTR [rax]
	...
   1400051f3:	add    BYTE PTR [rax],al
   1400051f5:	add    BYTE PTR [rcx],al
   1400051f7:	add    BYTE PTR [rcx],cl
   1400051f9:	add    al,0x0
   1400051fb:	add    al,ch
   1400051fd:	add    al,BYTE PTR [rax]
	...
   14000520b:	add    BYTE PTR [rax],al
   14000520d:	add    BYTE PTR [rcx],al
   14000520f:	add    BYTE PTR [rcx],cl
   140005211:	add    al,0x0
   140005213:	add    al,bh
   140005215:	add    al,BYTE PTR [rax]
	...
   140005223:	add    BYTE PTR [rax],al
   140005225:	add    BYTE PTR [rcx],al
   140005227:	add    BYTE PTR [rcx],cl
   140005229:	add    al,0x0
   14000522b:	add    BYTE PTR [rax],cl
   14000522d:	add    eax,DWORD PTR [rax]
	...
   14000523b:	add    BYTE PTR [rax],al
   14000523d:	add    BYTE PTR [rcx],al
   14000523f:	add    BYTE PTR [rcx],cl
   140005241:	add    al,0x0
   140005243:	add    BYTE PTR [rax],bl
   140005245:	add    eax,DWORD PTR [rax]
   140005247:	add    al,al
   140005249:	je     0x14000524c
   14000524b:	add    al,dl
	...
   140005255:	add    BYTE PTR [rax],al
   140005257:	add    al,cl
   140005259:	push   rsi
   14000525a:	add    BYTE PTR [rax],al
   14000525c:	push   0x6
   140005261:	add    BYTE PTR [rax],al
   140005263:	add    BYTE PTR [rax],al
   140005265:	add    BYTE PTR [rax],al
   140005267:	add    BYTE PTR [rax],dh
   140005269:	pop    rbp
   14000526a:	add    BYTE PTR [rax],al
   14000526c:	call   0x140005273
   140005271:	add    BYTE PTR [rax],al
   140005273:	add    BYTE PTR [rax],al
   140005275:	add    BYTE PTR [rax],al
   140005277:	add    BYTE PTR [rax],bl
   140005279:	(bad)  
   14000527a:	add    BYTE PTR [rax],al
   14000527c:	sub    BYTE PTR [rcx],al
	...
   140005286:	add    BYTE PTR [rax],al
   140005288:	rex (bad) 
   14000528a:	add    BYTE PTR [rax],al
   14000528c:	test   al,0xe
	...
   140005296:	add    BYTE PTR [rax],al
   140005298:	call   0xe800530c
   14000529d:	or     BYTE PTR [rax],al
	...
   1400052a7:	add    BYTE PTR [rax+0x68000078],dl
   1400052ad:	add    eax,0x0
   1400052b2:	add    BYTE PTR [rax],al
   1400052b4:	add    BYTE PTR [rax],al
   1400052b6:	add    BYTE PTR [rax],al
   1400052b8:	clc    
   1400052b9:	jge    0x1400052bb
   1400052bb:	add    al,ch
   1400052bd:	mov    bh,0x0
	...
   1400052c7:	add    al,ah
   1400052c9:	xor    eax,0x25a80001
	...
   1400052d6:	add    BYTE PTR [rax],al
   1400052d8:	mov    BYTE PTR [rbx+0x1],bl
   1400052db:	add    BYTE PTR [rax+0x10],ch
   1400052e1:	add    BYTE PTR [rax],al
   1400052e3:	add    BYTE PTR [rax],al
   1400052e5:	add    BYTE PTR [rax],al
   1400052e7:	add    BYTE PTR [rax],dh
   1400052e9:	ins    BYTE PTR es:[rdi],dx
   1400052ea:	add    DWORD PTR [rax],eax
   1400052ec:	push   0x4
   1400052f1:	add    BYTE PTR [rax],al
   1400052f3:	add    BYTE PTR [rax],al
   1400052f5:	add    BYTE PTR [rax],al
   1400052f7:	add    BYTE PTR [rax-0x6dfffe90],bl
	...
   140005305:	add    BYTE PTR [rax],al
   140005307:	add    BYTE PTR [rax],dh
   140005309:	jno    0x14000530c
   14000530b:	add    BYTE PTR [rax+0x3],dl
   140005311:	add    BYTE PTR [rax],al
   140005313:	add    BYTE PTR [rax],al
   140005315:	add    BYTE PTR [rax],al
   140005317:	add    BYTE PTR [rax],dh
   140005319:	push   rbx
   14000531a:	add    BYTE PTR [rax],al
   14000531c:	xchg   edx,eax
   14000531d:	add    eax,DWORD PTR [rax]
	...
   140005327:	add    BYTE PTR [rbx],al
   140005329:	add    BYTE PTR [rbp+0x0],cl
   14000532c:	push   rbp
   14000532d:	add    BYTE PTR [rcx+0x0],cl
   140005330:	cmp    al,0x3f
   140005332:	js     0x1400053a1
   140005334:	ins    BYTE PTR es:[rdi],dx
   140005335:	and    BYTE PTR [rsi+0x65],dh
   140005338:	jb     0x1400053ad
   14000533a:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   140005341:	xor    BYTE PTR [rdx],ah
   140005343:	and    BYTE PTR [rbp+0x6e],ah
   140005346:	movsxd ebp,DWORD PTR [rdi+0x64]
   140005349:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   140005350:	rex.RX sub eax,0x73202238
   140005356:	je     0x1400053b9
   140005358:	outs   dx,BYTE PTR ds:[rsi]
   140005359:	fs (bad) 
   14000535b:	ins    BYTE PTR es:[rdi],dx
   14000535c:	outs   dx,DWORD PTR ds:[rsi]
   14000535d:	outs   dx,BYTE PTR ds:[rsi]
   14000535e:	gs cmp eax,0x73657922
   140005364:	and    bh,BYTE PTR [rdi]
   140005366:	ds or  eax,0x2d213c0a
   14000536c:	sub    eax,0x706f4320
   140005371:	jns    0x1400053e5
   140005373:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   14000537a:	sub    DWORD PTR [rax],esp
   14000537c:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   140005384:	je     0x1400053a6
   140005386:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140005388:	jb     0x1400053fa
   14000538a:	outs   dx,DWORD PTR ds:[rsi]
   14000538b:	jb     0x1400053ee
   14000538d:	je     0x1400053f8
   14000538f:	outs   dx,DWORD PTR ds:[rsi]
   140005390:	outs   dx,BYTE PTR ds:[rsi]
   140005391:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0d91c4
   140005397:	cmp    al,0x61
   140005399:	jae    0x14000540e
   14000539b:	gs ins DWORD PTR es:[rdi],dx
   14000539d:	(bad)  
   14000539e:	ins    BYTE PTR es:[rdi],dx
   14000539f:	jns    0x1400053c1
   1400053a1:	js     0x140005410
   1400053a3:	ins    BYTE PTR es:[rdi],dx
   1400053a4:	outs   dx,BYTE PTR ds:[rsi]
   1400053a5:	jae    0x1400053e4
   1400053a7:	and    dh,BYTE PTR [rbp+0x72]
   1400053aa:	outs   dx,BYTE PTR ds:[rsi]
   1400053ab:	cmp    dh,BYTE PTR [rbx+0x63]
   1400053ae:	push   0x73616d65
   1400053b3:	sub    eax,0x7263696d
   1400053b8:	outs   dx,DWORD PTR ds:[rsi]
   1400053b9:	jae    0x14000542a
   1400053bb:	data16 je 0x1400053eb
   1400053be:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400053c1:	cmp    ah,BYTE PTR [rcx+0x73]
   1400053c4:	ins    DWORD PTR es:[rdi],dx
   1400053c5:	cs jbe 0x1400053f9
   1400053c8:	and    ah,BYTE PTR [rax]
   1400053ca:	and    BYTE PTR [rax+0x6d],bh
   1400053cd:	ins    BYTE PTR es:[rdi],dx
   1400053ce:	outs   dx,BYTE PTR ds:[rsi]
   1400053cf:	jae    0x14000540b
   1400053d1:	(bad)  
   1400053d2:	jae    0x140005441
   1400053d4:	jbe    0x140005409
   1400053d6:	cmp    eax,0x6e727522
   1400053db:	cmp    dh,BYTE PTR [rbx+0x63]
   1400053de:	push   0x73616d65
   1400053e3:	sub    eax,0x7263696d
   1400053e8:	outs   dx,DWORD PTR ds:[rsi]
   1400053e9:	jae    0x14000545a
   1400053eb:	data16 je 0x14000541b
   1400053ee:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400053f1:	cmp    ah,BYTE PTR [rcx+0x73]
   1400053f4:	ins    DWORD PTR es:[rdi],dx
   1400053f5:	cs jbe 0x14000542b
   1400053f8:	and    ah,BYTE PTR [rax]
   1400053fa:	ins    DWORD PTR es:[rdi],dx
   1400053fb:	(bad)  
   1400053fc:	outs   dx,BYTE PTR ds:[rsi]
   1400053fd:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   140005404:	jb     0x140005479
   140005406:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000540d:	xor    BYTE PTR [rdx],ah
   14000540f:	ds or  eax,0x73613c0a
   140005415:	jae    0x14000547c
   140005417:	ins    DWORD PTR es:[rdi],dx
   140005418:	(bad)  
   140005419:	ins    BYTE PTR es:[rdi],dx
   14000541a:	jns    0x140005465
   14000541c:	fs outs dx,BYTE PTR gs:[rsi]
   14000541f:	je     0x14000548a
   140005421:	je     0x14000549c
   140005423:	or     eax,0x7270090a
   140005428:	outs   dx,DWORD PTR ds:[rsi]
   140005429:	movsxd esp,DWORD PTR [rbp+0x73]
   14000542c:	jae    0x14000549d
   14000542e:	jb     0x140005471
   140005430:	jb     0x140005495
   140005432:	push   0x63657469
   140005437:	je     0x1400054ae
   140005439:	jb     0x1400054a0
   14000543b:	cmp    eax,0x646d6122
   140005440:	ss xor al,0x22
   140005443:	or     eax,0x6576090a
   140005448:	jb     0x1400054bd
   14000544a:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e35223d
   140005451:	xor    DWORD PTR [rsi],ebp
   140005453:	xor    BYTE PTR [rsi],ch
   140005455:	xor    BYTE PTR [rdx],ah
   140005457:	or     eax,0x616e090a
   14000545c:	ins    DWORD PTR es:[rdi],dx
   14000545d:	gs cmp eax,0x63694d22
   140005463:	jb     0x1400054d4
   140005465:	jae    0x1400054d6
   140005467:	data16 je 0x140005498
   14000546a:	push   rdi
   14000546b:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   140005472:	rex.WRB push r11
   140005474:	movsxd ebp,DWORD PTR [rax+0x65]
   140005477:	fs rex.RB js 0x1400054e0
   14000547b:	and    ah,BYTE PTR [rax]
   14000547d:	je     0x1400054f8
   14000547f:	jo     0x1400054e6
   140005481:	cmp    eax,0x6e697722
   140005486:	xor    esi,DWORD PTR [rdx]
   140005488:	and    ah,BYTE PTR [rax]
   14000548a:	(bad)  
   14000548b:	ds or  eax,0x65643c0a
   140005491:	jae    0x1400054f6
   140005493:	jb     0x1400054fe
   140005495:	jo     0x14000550b
   140005497:	imul   ebp,DWORD PTR [rdi+0x6e],0x7475413e
   14000549e:	outs   dx,DWORD PTR ds:[rsi]
   14000549f:	ins    DWORD PTR es:[rdi],dx
   1400054a0:	(bad)  
   1400054a1:	je     0x14000550c
   1400054a3:	movsxd esp,DWORD PTR [rax]
   1400054a5:	rex.WRB (bad) 
   1400054a7:	imul   ebp,DWORD PTR [rsi+0x74],0x6e616e65
   1400054ae:	movsxd esp,DWORD PTR [rbp+0x3c]
   1400054b1:	(bad)  
   1400054b2:	fs gs jae 0x140005519
   1400054b6:	jb     0x140005521
   1400054b8:	jo     0x14000552e
   1400054ba:	imul   ebp,DWORD PTR [rdi+0x6e],0x3c0a0d3e
   1400054c1:	je     0x140005535
   1400054c3:	jne    0x140005538
   1400054c5:	je     0x140005510
   1400054c7:	outs   dx,BYTE PTR ds:[rsi]
   1400054c8:	outs   dx,WORD PTR ds:[rsi]
   1400054ca:	and    BYTE PTR [rax+0x6d],bh
   1400054cd:	ins    BYTE PTR es:[rdi],dx
   1400054ce:	outs   dx,BYTE PTR ds:[rsi]
   1400054cf:	jae    0x14000550e
   1400054d1:	and    dh,BYTE PTR [rbp+0x72]
   1400054d4:	outs   dx,BYTE PTR ds:[rsi]
   1400054d5:	cmp    dh,BYTE PTR [rbx+0x63]
   1400054d8:	push   0x73616d65
   1400054dd:	sub    eax,0x7263696d
   1400054e2:	outs   dx,DWORD PTR ds:[rsi]
   1400054e3:	jae    0x140005554
   1400054e5:	data16 je 0x140005515
   1400054e8:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400054eb:	cmp    ah,BYTE PTR [rcx+0x73]
   1400054ee:	ins    DWORD PTR es:[rdi],dx
   1400054ef:	cs jbe 0x140005525
   1400054f2:	and    bh,BYTE PTR [rsi]
   1400054f4:	or     eax,0x2020200a
   1400054f9:	and    BYTE PTR [rbx+rsi*2],bh
   1400054fc:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140005500:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   140005508:	and    BYTE PTR [rax],ah
   14000550a:	and    BYTE PTR [rax],ah
   14000550c:	and    BYTE PTR [rax],ah
   14000550e:	cmp    al,0x72
   140005510:	gs jno 0x140005588
   140005513:	gs jae 0x14000558a
   140005516:	gs fs push rax
   140005519:	jb     0x140005584
   14000551b:	jbe    0x140005586
   14000551d:	ins    BYTE PTR es:[rdi],dx
   14000551e:	gs addr32 gs jae 0x140005561
   140005523:	or     eax,0x2020200a
   140005528:	and    BYTE PTR [rax],ah
   14000552a:	and    BYTE PTR [rax],ah
   14000552c:	and    BYTE PTR [rax],ah
   14000552e:	and    BYTE PTR [rax],ah
   140005530:	and    BYTE PTR [rdx+rsi*2],bh
   140005533:	gs jno 0x1400055ab
   140005536:	gs jae 0x1400055ad
   140005539:	gs fs rex.RB js 0x1400055a3
   14000553e:	movsxd esi,DWORD PTR [rbp+0x74]
   140005541:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   140005548:	ins    BYTE PTR es:[rdi],dx
   140005549:	or     eax,0x2020200a
   14000554e:	and    BYTE PTR [rax],ah
   140005550:	and    BYTE PTR [rax],ah
   140005552:	and    BYTE PTR [rax],ah
   140005554:	and    BYTE PTR [rax],ah
   140005556:	and    BYTE PTR [rax],ah
   140005558:	and    BYTE PTR [rax],ah
   14000555a:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14000555e:	gs ins BYTE PTR es:[rdi],dx
   140005560:	cmp    eax,0x71657222
   140005565:	jne    0x1400055d0
   140005567:	jb     0x1400055ce
   140005569:	rex.B
   14000556a:	fs ins DWORD PTR es:[rdi],dx
   14000556c:	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
   140005573:	je     0x1400055e4
   140005575:	jb     0x140005599
   140005577:	or     eax,0x2020200a
   14000557c:	and    BYTE PTR [rax],ah
   14000557e:	and    BYTE PTR [rax],ah
   140005580:	and    BYTE PTR [rax],ah
   140005582:	and    BYTE PTR [rax],ah
   140005584:	and    BYTE PTR [rax],ah
   140005586:	and    BYTE PTR [rax],ah
   140005588:	and    BYTE PTR [rbp+0x69],dh
   14000558b:	movsxd esp,DWORD PTR [r11+0x65]
   14000558f:	jae    0x140005604
   140005591:	cmp    eax,0x6c616622
   140005596:	jae    0x1400055fd
   140005598:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x1602075a8
   14000559e:	and    BYTE PTR [rax],ah
   1400055a0:	and    BYTE PTR [rax],ah
   1400055a2:	and    BYTE PTR [rax],ah
   1400055a4:	and    BYTE PTR [rax],ah
   1400055a6:	and    BYTE PTR [rdi],ch
   1400055a8:	ds or  eax,0x2020200a
   1400055ae:	and    BYTE PTR [rax],ah
   1400055b0:	and    BYTE PTR [rax],ah
   1400055b2:	and    BYTE PTR [rdi+rbp*1],bh
   1400055b5:	jb     0x14000561c
   1400055b7:	jno    0x14000562e
   1400055b9:	gs jae 0x140005630
   1400055bc:	gs fs push rax
   1400055bf:	jb     0x14000562a
   1400055c1:	jbe    0x14000562c
   1400055c3:	ins    BYTE PTR es:[rdi],dx
   1400055c4:	gs addr32 gs jae 0x140005607
   1400055c9:	or     eax,0x2020200a
   1400055ce:	and    BYTE PTR [rdi+rbp*1],bh
   1400055d1:	jae    0x140005638
   1400055d3:	movsxd esi,DWORD PTR [rbp+0x72]
   1400055d6:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x2f3c0a0d
   1400055de:	je     0x140005652
   1400055e0:	jne    0x140005655
   1400055e2:	je     0x14000562d
   1400055e4:	outs   dx,BYTE PTR ds:[rsi]
   1400055e5:	outs   dx,WORD PTR ds:[rsi]
   1400055e7:	ds or  eax,0x73613c0a
   1400055ed:	ins    DWORD PTR es:[rdi],dx
   1400055ee:	jbe    0x140005623
   1400055f0:	cmp    ah,BYTE PTR [rcx+0x70]
   1400055f3:	jo     0x140005661
   1400055f5:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   1400055fc:	ds or  eax,0x2020200a
   140005602:	cmp    al,0x61
   140005604:	jae    0x140005673
   140005606:	jbe    0x14000563b
   140005608:	cmp    dh,BYTE PTR [rdi+0x69]
   14000560b:	outs   dx,BYTE PTR ds:[rsi]
   14000560c:	outs   dx,DWORD PTR fs:[rsi]
   14000560e:	ja     0x140005683
   140005610:	push   rbx
   140005611:	gs je  0x140005688
   140005614:	imul   ebp,DWORD PTR [rsi+0x67],0x6d782073
   14000561b:	ins    BYTE PTR es:[rdi],dx
   14000561c:	outs   dx,BYTE PTR ds:[rsi]
   14000561d:	jae    0x14000565c
   14000561f:	and    ch,BYTE PTR [rax+0x74]
   140005622:	je     0x140005694
   140005624:	cmp    ch,BYTE PTR [rdi]
   140005626:	(bad)  
   140005627:	jae    0x14000568c
   140005629:	push   0x73616d65
   14000562e:	cs ins DWORD PTR es:[rdi],dx
   140005630:	imul   esp,DWORD PTR [rbx+0x72],0x666f736f
   140005637:	je     0x140005667
   140005639:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000563c:	(bad)  
   14000563d:	push   rbx
   14000563e:	rex.WRB
   14000563f:	rex.WB (bad) 
   140005641:	xor    dh,BYTE PTR [rax]
   140005643:	xor    BYTE PTR [rip+0x6e69572f],dh        # 0x1ae69ad78
   140005649:	outs   dx,DWORD PTR fs:[rsi]
   14000564b:	ja     0x1400056c0
   14000564d:	push   rbx
   14000564e:	gs je  0x1400056c5
   140005651:	imul   ebp,DWORD PTR [rsi+0x67],0xd3e2273
   140005658:	or     ah,BYTE PTR [rax]
   14000565a:	and    BYTE PTR [rax],ah
   14000565c:	and    BYTE PTR [rax],ah
   14000565e:	and    BYTE PTR [rax],ah
   140005660:	and    BYTE PTR [rcx+riz*2],bh
   140005663:	jne    0x1400056d9
   140005665:	outs   dx,DWORD PTR ds:[rsi]
   140005666:	rex.RB ins BYTE PTR es:[rdi],dx
   140005668:	gs jbe 0x1400056cc
   14000566b:	je     0x1400056d2
   14000566d:	ds je  0x1400056e2
   140005670:	jne    0x1400056d7
   140005672:	cmp    al,0x2f
   140005674:	(bad)  
   140005675:	jne    0x1400056eb
   140005677:	outs   dx,DWORD PTR ds:[rsi]
   140005678:	rex.RB ins BYTE PTR es:[rdi],dx
   14000567a:	gs jbe 0x1400056de
   14000567d:	je     0x1400056e4
   14000567f:	ds or  eax,0x2020200a
   140005685:	cmp    al,0x2f
   140005687:	(bad)  
   140005688:	jae    0x1400056f7
   14000568a:	jbe    0x1400056bf
   14000568c:	cmp    dh,BYTE PTR [rdi+0x69]
   14000568f:	outs   dx,BYTE PTR ds:[rsi]
   140005690:	outs   dx,DWORD PTR fs:[rsi]
   140005692:	ja     0x140005707
   140005694:	push   rbx
   140005695:	gs je  0x14000570c
   140005698:	imul   ebp,DWORD PTR [rsi+0x67],0xa0d3e73
   14000569f:	cmp    al,0x2f
   1400056a1:	(bad)  
   1400056a2:	jae    0x140005711
   1400056a4:	jbe    0x1400056d9
   1400056a6:	cmp    ah,BYTE PTR [rcx+0x70]
   1400056a9:	jo     0x140005717
   1400056ab:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   1400056b2:	ds or  eax,0x612f3c0a
   1400056b8:	jae    0x14000572d
   1400056ba:	gs ins DWORD PTR es:[rdi],dx
   1400056bc:	(bad)  
   1400056bd:	ins    BYTE PTR es:[rdi],dx
   1400056be:	jns    0x1400056fe
   1400056c0:	or     eax,0xa
   1400056c5:	add    BYTE PTR [rax],al
   1400056c7:	add    BYTE PTR [rax],ch
   1400056c9:	add    BYTE PTR [rax],al
   1400056cb:	add    BYTE PTR [rax],dh
   1400056cd:	add    BYTE PTR [rax],al
   1400056cf:	add    BYTE PTR [rax+0x0],ah
   1400056d2:	add    BYTE PTR [rax],al
   1400056d4:	add    DWORD PTR [rax],eax
   1400056d6:	add    al,0x0
   1400056d8:	add    BYTE PTR [rax],al
   1400056da:	add    BYTE PTR [rax],al
   1400056dc:	add    BYTE PTR [rax+rax*1],0x0
	...
   1400056f4:	add    BYTE PTR [rax],al
   1400056f6:	add    BYTE PTR [rax],0x0
   1400056f9:	add    BYTE PTR [rax],0x0
   1400056fc:	add    BYTE PTR [rax+0x800080],al
   140005702:	add    BYTE PTR [rax],al
   140005704:	add    BYTE PTR [rax],0x80
   140005707:	add    BYTE PTR [rax-0x7fffff80],al
   14000570d:	add    BYTE PTR [rax-0x3f3f4000],0x0
   140005714:	add    BYTE PTR [rax],al
   140005716:	inc    DWORD PTR [rax]
   140005718:	add    bh,bh
   14000571a:	add    BYTE PTR [rax],al
   14000571c:	add    bh,bh
   14000571e:	inc    DWORD PTR [rax]
   140005720:	inc    DWORD PTR [rax]
   140005722:	add    BYTE PTR [rax],al
   140005724:	inc    DWORD PTR [rax]
   140005726:	inc    DWORD PTR [rax]
   140005728:	(bad)  
   140005729:	inc    DWORD PTR [rax]
   14000572b:	add    bh,bh
   14000572d:	(bad)  
   14000572e:	inc    DWORD PTR [rax]
	...
   140005784:	or     BYTE PTR [rax+0x8888],cl
	...
   14000579a:	add    BYTE PTR [rax-0x7070071],cl
   1400057a0:	mov    BYTE PTR [rax+0x0],cl
	...
   1400057b2:	mov    al,bh
   1400057b4:	clc    
   1400057b5:	mov    BYTE PTR [rax-0x77770771],cl
	...
   1400057c7:	add    BYTE PTR [rax],al
   1400057c9:	mov    BYTE PTR [rax-0x70000778],cl
   1400057cf:	(bad)
   1400057d3:	jo     0x1400057d5
	...
   1400057dd:	add    BYTE PTR [rax],al
   1400057df:	add    BYTE PTR [rax],cl
   1400057e1:	mov    BYTE PTR [rax-0x7777008],cl
   1400057e7:	mov    BYTE PTR [rax+0x877888],cl
	...
   1400057f5:	add    BYTE PTR [rax],al
   1400057f7:	add    BYTE PTR [rax],cl
   1400057f9:	mov    BYTE PTR [rax-0x77070778],cl
   1400057ff:	vpmacssdql xmm0,xmm14,xmm0,XMMWORD PTR [r15+0x0]
   140005809:	add    BYTE PTR [rax],al
   14000580b:	add    BYTE PTR [rax],al
   14000580d:	add    BYTE PTR [rax],al
   14000580f:	add    BYTE PTR [rax],cl
   140005811:	mov    BYTE PTR [rax-0x77077778],cl
   140005817:	mov    BYTE PTR [rax+0x887777],cl
	...
   140005825:	add    BYTE PTR [rax],al
   140005827:	add    BYTE PTR [rax],cl
   140005829:	mov    BYTE PTR [rax-0x7777778],cl
   14000582f:	mov    BYTE PTR [rdi+0x878787],al
   140005835:	add    BYTE PTR [rax],al
   140005837:	add    BYTE PTR [rax],al
   140005839:	(bad)  
   14000583a:	ja     0x14000583c
   14000583c:	add    BYTE PTR [rax],al
   14000583e:	add    BYTE PTR [rax],al
   140005840:	add    BYTE PTR [rax-0x77777778],cl
   140005846:	mov    BYTE PTR [rax+0x77],bh
   140005849:	ja     0x1400058c3
   14000584b:	js     0x140005855
   14000584d:	add    BYTE PTR [rax],0x0
   140005850:	add    BYTE PTR [rax+0x7f],bh
   140005853:	xchg   DWORD PTR [rcx+0x77],esi
   140005856:	jo     0x140005858
   140005858:	add    BYTE PTR [rax],cl
   14000585a:	js     0x1400057e4
   14000585c:	mov    BYTE PTR [rdi+0x77077777],al
   140005862:	mov    BYTE PTR [rax+0x8088],cl
   140005868:	or     BYTE PTR [rdi+0x77778878],al
   14000586e:	clc    
   14000586f:	jo     0x140005871
   140005871:	add    BYTE PTR [rax],cl
   140005873:	ja     0x1400057fc
   140005875:	ja     0x1400058ee
   140005877:	ja     0x140005800
   140005879:	mov    BYTE PTR [rax+0x808888],cl
   14000587f:	add    BYTE PTR [rax],cl
   140005881:	mov    BYTE PTR [rax-0x78],bh
   140005884:	mov    BYTE PTR [rdi+0x77],dh
   140005887:	mov    BYTE PTR [rax+0x0],dh
   14000588a:	add    BYTE PTR [rax],al
   14000588c:	xchg   DWORD PTR [rdi+0x77],esi
   14000588f:	js     0x140005909
   140005891:	mov    BYTE PTR [rax+0x808888],cl
   140005897:	add    BYTE PTR [rax],cl
   140005899:	js     0x140005823
   14000589b:	mov    BYTE PTR [rax-0x7888871],cl
   1400058a1:	jo     0x1400058a3
   1400058a3:	xchg   DWORD PTR [rdi-0x79],esi
   1400058a6:	xchg   DWORD PTR [rax+0x6c7c8888],ecx
   1400058ac:	mov    BYTE PTR [rax-0x77f80000],cl
   1400058b2:	js     0x14000583b
   1400058b4:	js     0x14000583e
   1400058b6:	push   QWORD PTR [rdi+0x77]
   1400058b9:	js     0x140005933
   1400058bb:	js     0x140005844
   1400058bd:	mov    BYTE PTR [rax-0x79],bh
   1400058c0:	jl     0x14000590e
   1400058c2:	rex.R (bad) 
   1400058c4:	mov    BYTE PTR [rax-0x77f80000],cl
   1400058ca:	mov    BYTE PTR [rdi-0x78888879],al
   1400058d0:	js     0x14000585a
   1400058d2:	mov    BYTE PTR [rdi-0x3b9b8379],al
   1400058d8:	(bad)  
   1400058d9:	ins    BYTE PTR es:[rdi],dx
   1400058da:	ins    BYTE PTR es:[rdi],dx
   1400058db:	mov    BYTE PTR fs:[rdi-0x77f80000],al
   1400058e2:	mov    BYTE PTR [rdi+0x78877778],al
   1400058e8:	mov    BYTE PTR [rdi+0x444c5677],al
   1400058ee:	rex.R
   1400058ef:	rex.WR ins BYTE PTR es:[rdi],dx
   1400058f1:	pop    rsp
   1400058f2:	jl     0x140005950
   1400058f4:	mov    BYTE PTR [rax-0x77f80000],cl
   1400058fa:	mov    BYTE PTR [rax-0x78778788],cl
   140005900:	jbe    0x140005956
   140005902:	rex.R
   140005903:	rex.R
   140005904:	rex.R
   140005905:	rex.R mov edi,0xc6c6c647
   14000590c:	jg     0x140005895
   14000590e:	add    BYTE PTR [rax],al
   140005910:	or     BYTE PTR [rax-0x78777878],cl
   140005916:	rex.RX
   140005917:	rex.R
   140005918:	rex.R
   140005919:	rex.R
   14000591a:	rex.R
   14000591b:	rex.WR
   14000591c:	rex.R
   14000591d:	fs rex.WR ins BYTE PTR es:[rdi],dx
   140005920:	jl     0x14000599e
   140005922:	jl     0x1400059a0
   140005924:	js     0x1400058ae
   140005926:	add    BYTE PTR [rax],al
   140005928:	or     BYTE PTR [rax-0x78787878],cl
   14000592e:	rex.R
   14000592f:	rex.R
   140005930:	rex.R
   140005931:	rex.R
   140005932:	rex.WR
   140005933:	rex.R push 0x7c7cc784
   140005939:	jl     0x1400058c7
   14000593b:	mov    WORD PTR [rax-0x78],?
   14000593e:	add    BYTE PTR [rax],al
   140005940:	or     al,bh
   140005942:	mov    BYTE PTR [rax+0x56448878],cl
   140005948:	(bad)  
   140005949:	rex.RX
   14000594a:	rex.R
   14000594b:	rex.RX mov BYTE PTR [rdi-0x737383b4],r8b
   140005952:	out    0xc8,eax
   140005954:	iret   
   140005955:	xchg   DWORD PTR [rax],eax
   140005957:	add    BYTE PTR [rax],cl
   140005959:	mov    BYTE PTR [rax+0x46888887],cl
   14000595f:	(bad)  
   140005960:	je     0x1400059ae
   140005962:	rex.R push 0xffffffffc8488888
   140005968:	enter  0xc8e7,0x7c
   14000596c:	mov    al,bh
   14000596e:	add    BYTE PTR [rax],al
   140005970:	or     BYTE PTR [rax-0x77777788],cl
   140005976:	push   rsp
   140005977:	je     0x1400059bf
   140005979:	push   rsp
   14000597a:	rex.RX vpmacsswd xmm1,xmm14,xmm8,XMMWORD PTR [r12+r9*4-0x37717379]
   140005986:	add    BYTE PTR [rax],0x8
   140005989:	mov    BYTE PTR [rax+0x64888888],cl
   14000598f:	jl     0x140005a0d
   140005991:	fs js  0x140005993
   140005994:	pop    rsp
   140005995:	jg     0x14000598e
   140005997:	js     0x140005981
   140005999:	enter  0x7878,0x78
   14000599d:	test   DWORD PTR [rax+0x78880800],0x74888888
   1400059a7:	jl     0x140005a1d
   1400059a9:	rex.R pop QWORD PTR [rdi-0x3707373c]
   1400059b0:	js     0x140005939
   1400059b2:	ja     0x140005a2c
   1400059b4:	enter  0x8088,0x0
   1400059b8:	or     BYTE PTR [rax-0x77777788],cl
   1400059be:	jl     0x140005a34
   1400059c0:	jl     0x140005a0e
   1400059c2:	ja     0x140005988
   1400059c4:	mov    BYTE PTR [rdi-0x71],0x88
   1400059c8:	ja     0x140005951
   1400059ca:	mov    cs,WORD PTR [rax+0x808888]
   1400059d0:	or     BYTE PTR [rax-0x78],bh
   1400059d3:	mov    BYTE PTR [rax+0x767c8488],cl
   1400059d9:	rex.R (bad) 
   1400059db:	ins    BYTE PTR es:[rdi],dx
   1400059dc:	rex.WR int3 
   1400059de:	(bad)  
   1400059df:	test   DWORD PTR [rdi-0x18787272],0x70f8
   1400059e9:	jp     0x140005a63
   1400059eb:	mov    BYTE PTR [rax-0x3a887b78],cl
   1400059f1:	rex.R
   1400059f2:	rex.WR
   1400059f3:	rex.WR ins BYTE PTR es:[rdi],dx
   1400059f5:	rex.WR js 0x1400059f0
   1400059f8:	js     0x140005982
   1400059fa:	mov    al,ch
   1400059fc:	mov    BYTE PTR [rax+0x33000080],cl
   140005a02:	js     0x1400059fc
   140005a04:	clc    
   140005a05:	clc    
   140005a06:	test   BYTE PTR [rax+0x6c],bh
   140005a09:	rex.WR ins BYTE PTR es:[rdi],dx
   140005a0b:	rex.WR
   140005a0c:	rex.WR ins BYTE PTR es:[rdi],dx
   140005a0e:	mov    BYTE PTR [rdi-0x77777779],cl
   140005a14:	xchg   DWORD PTR [rax+0x70000070],ecx
   140005a1a:	js     0x1400059a4
   140005a1c:	mov    BYTE PTR [rdi+0x46c4c887],cl
   140005a22:	(bad)  
   140005a23:	(bad)  
   140005a24:	int3   
   140005a25:	(bad)  
   140005a26:	mov    BYTE PTR [rax-0x77777709],cl
   140005a2c:	mov    BYTE PTR [rdi+0x74000070],cl
   140005a32:	js     0x140005a2c
   140005a34:	(bad)
   140005a38:	rex.WR
   140005a39:	rex.WR
   140005a3a:	rex.WR ins BYTE PTR es:[rdi],dx
   140005a3c:	mov    bh,0x88
   140005a3f:	mov    BYTE PTR [rax-0x77777788],cl
   140005a45:	mov    BYTE PTR [rax-0x77890000],cl
   140005a4b:	(bad)  
   140005a4c:	clc    
   140005a4d:	pop    QWORD PTR [rdi+0x6c4cc4c7]
   140005a53:	(bad)  
   140005a54:	int3   
   140005a55:	enter  0x8888,0x88
   140005a59:	mov    BYTE PTR [rax+0x788f888f],cl
   140005a5f:	add    BYTE PTR [rax],al
   140005a61:	js     0xc8005a66
   140005a67:	(bad)  
   140005a68:	rex.WR ins BYTE PTR es:[rdi],dx
   140005a6a:	rex.WR
   140005a6b:	rex.WR int3 
   140005a6d:	enter  0xf8f8,0x88
   140005a71:	mov    BYTE PTR [rax-0x77700108],cl
   140005a77:	add    BYTE PTR [rax],al
   140005a79:	add    BYTE PTR [rax],al
   140005a7b:	mov    BYTE PTR [rax-0x3bbb7701],cl
   140005a81:	rex.WR ins BYTE PTR es:[rdi],dx
   140005a83:	mov    dh,0xcf
   140005a86:	(bad)
   140005a8a:	mov    al,bh
   140005a8c:	clc    
   140005a8d:	pop    QWORD PTR [rdi+0x0]
   140005a93:	add    BYTE PTR [rax],cl
   140005a95:	mov    BYTE PTR [rax+0x4c6c4c44],cl
   140005a9b:	ins    BYTE PTR es:[rdi],dx
   140005a9c:	int3   
   140005a9d:	mov    al,bh
   140005a9f:	(bad)  
   140005aa0:	clc    
   140005aa1:	mov    al,bh
   140005aa3:	(bad)  
   140005aa4:	clc    
   140005aa5:	(bad)
   140005aa9:	add    BYTE PTR [rax],al
   140005aab:	add    BYTE PTR [rax],al
   140005aad:	add    BYTE PTR [rax-0x333bbbb4],cl
   140005ab3:	int3   
   140005ab4:	ins    BYTE PTR es:[rdi],dx
   140005ab5:	(bad)  
   140005ab6:	(bad)  
   140005ab7:	(bad)  
   140005ab8:	(bad)  
   140005ab9:	dec    DWORD PTR [rdi-0x78707778]
   140005abf:	add    BYTE PTR [rax],al
   140005ac1:	add    BYTE PTR [rax],al
   140005ac3:	add    BYTE PTR [rax],al
   140005ac5:	add    BYTE PTR [rax],cl
   140005ac7:	rex.R mov sil,0xc6
   140005acb:	(bad)  
   140005acc:	int3   
   140005acd:	(bad)  
   140005ace:	clc    
   140005acf:	clc    
   140005ad0:	mov    BYTE PTR [rsi-0x10771778],cl
   140005ad6:	mov    BYTE PTR [rax],al
   140005ad8:	add    BYTE PTR [rax],al
   140005ada:	add    BYTE PTR [rax],al
   140005adc:	add    BYTE PTR [rax],al
   140005ade:	or     BYTE PTR [rsp+rax*2-0x3c],ah
   140005ae2:	int3   
   140005ae3:	int3   
   140005ae4:	int3   
   140005ae5:	call   0xc8e8e378
   140005aea:	mov    al,bh
   140005aec:	clc    
   140005aed:	inc    DWORD PTR [rax+0x0]
   140005af3:	add    BYTE PTR [rax],al
   140005af5:	add    BYTE PTR [rax],cl
   140005af7:	pop    rsp
   140005af8:	rex.WR
   140005af9:	rex.WR
   140005afa:	fs jbe 0x140005a84
   140005afd:	mov    BYTE PTR [rax-0x70707078],cl
   140005b03:	add    BYTE PTR [rax],0x0
	...
   140005b0e:	or     BYTE PTR [rsi+0x77],dh
   140005b11:	mov    BYTE PTR [rax-0x70777071],cl
   140005b17:	add    BYTE PTR [rax],0x0
	...
   140005b26:	or     BYTE PTR [rax-0x7f707778],cl
	...
   140005b3c:	add    BYTE PTR [rax],al
   140005b3e:	add    al,dh
	...
   140005bb0:	(bad)  
   140005bb1:	(bad)  
   140005bb2:	(bad)  
   140005bb3:	(bad)  
   140005bb4:	(bad)  
   140005bb5:	inc    DWORD PTR [rax]
   140005bb7:	add    bh,bh
   140005bb9:	(bad)  
   140005bba:	(bad)  
   140005bbb:	(bad)  
   140005bbc:	(bad)  
   140005bbd:	inc    DWORD PTR [rax]
   140005bbf:	add    bh,bh
   140005bc1:	(bad)  
   140005bc2:	(bad)  
   140005bc3:	(bad)  
   140005bc4:	(bad)  
   140005bc5:	inc    DWORD PTR [rax]
   140005bc7:	add    bh,bh
   140005bc9:	(bad)  
   140005bca:	inc    DWORD PTR [rax+0xffff]
   140005bd0:	(bad)  
   140005bd1:	(bad)  
   140005bd2:	cld    
   140005bd3:	add    BYTE PTR [rdi],cl
   140005bd5:	inc    DWORD PTR [rax]
   140005bd7:	add    bh,bh
   140005bd9:	push   rax
   140005bdb:	add    BYTE PTR [rbx],al
   140005bdd:	inc    DWORD PTR [rax]
   140005bdf:	add    bh,bh
   140005be1:	inc    eax
   140005be3:	add    BYTE PTR [rcx],al
   140005be5:	inc    DWORD PTR [rax]
   140005be7:	add    bh,bh
   140005be9:	inc    DWORD PTR [rax+0xff0000]
   140005bef:	add    bh,bh
   140005bf1:	inc    DWORD PTR [rax+0xff0000]
   140005bf7:	add    bh,bh
   140005bf9:	inc    DWORD PTR [rax+0xff0000]
   140005bff:	add    bh,bh
   140005c01:	inc    DWORD PTR [rax+0xff0000]
   140005c07:	add    bl,ah
   140005c09:	inc    eax
   140005c0b:	add    BYTE PTR [rax],al
   140005c0d:	lahf   
   140005c0e:	add    BYTE PTR [rax],al
   140005c10:	rol    BYTE PTR [rdi],0xe0
   140005c13:	add    BYTE PTR [rax],al
   140005c15:	(bad)  
   140005c16:	add    BYTE PTR [rax],al
   140005c18:	add    BYTE PTR [rcx],0xf8
   140005c1b:	add    BYTE PTR [rax],al
   140005c1d:	(bad)  
   140005c1e:	add    BYTE PTR [rax],al
   140005c20:	add    BYTE PTR [rax],0x7f
   140005c23:	add    BYTE PTR [rax],al
   140005c25:	(bad)  
   140005c26:	add    BYTE PTR [rax],al
   140005c28:	add    BYTE PTR [rax],0x1c
   140005c2b:	add    BYTE PTR [rax],al
   140005c2d:	sldt   WORD PTR [rax]
   140005c30:	add    BYTE PTR [rax],0x0
   140005c33:	add    BYTE PTR [rax],al
   140005c35:	sldt   WORD PTR [rax]
   140005c38:	add    BYTE PTR [rax],0x0
   140005c3b:	add    BYTE PTR [rax],al
   140005c3d:	sldt   WORD PTR [rax]
   140005c40:	add    BYTE PTR [rax],0x0
   140005c43:	add    BYTE PTR [rax],al
   140005c45:	sldt   WORD PTR [rax]
   140005c48:	add    BYTE PTR [rax],0x0
   140005c4b:	add    BYTE PTR [rax],al
   140005c4d:	sldt   WORD PTR [rax]
   140005c50:	add    BYTE PTR [rax],0x0
   140005c53:	add    BYTE PTR [rax],al
   140005c55:	sldt   WORD PTR [rax]
   140005c58:	add    BYTE PTR [rax],0x0
   140005c5b:	add    BYTE PTR [rax],al
   140005c5d:	sldt   WORD PTR [rax]
   140005c60:	add    BYTE PTR [rax],0x0
   140005c63:	add    BYTE PTR [rax],al
   140005c65:	sldt   WORD PTR [rax]
   140005c68:	add    BYTE PTR [rax],0x0
   140005c6b:	add    BYTE PTR [rax],al
   140005c6d:	sldt   WORD PTR [rax]
   140005c70:	add    BYTE PTR [rax],0x0
   140005c73:	add    BYTE PTR [rax],al
   140005c75:	(bad)  
   140005c76:	add    BYTE PTR [rax],al
   140005c78:	add    BYTE PTR [rax],0x0
   140005c7b:	add    BYTE PTR [rax],al
   140005c7d:	(bad)  
   140005c7e:	add    BYTE PTR [rax],al
   140005c80:	add    BYTE PTR [rax],0x0
   140005c83:	add    BYTE PTR [rax],al
   140005c85:	(bad)  
   140005c86:	add    BYTE PTR [rax],al
   140005c88:	add    BYTE PTR [rax],0x0
   140005c8b:	add    BYTE PTR [rax],al
   140005c8d:	(bad)  
   140005c8e:	add    BYTE PTR [rax],al
   140005c90:	add    BYTE PTR [rax],0x0
   140005c93:	add    BYTE PTR [rax],al
   140005c95:	(bad)  
   140005c96:	add    BYTE PTR [rax],al
   140005c98:	rol    BYTE PTR [rax],0x0
   140005c9b:	add    BYTE PTR [rax],al
   140005c9d:	(bad)  
   140005c9e:	add    BYTE PTR [rax],al
   140005ca0:	rol    BYTE PTR [rax],0x0
   140005ca3:	add    BYTE PTR [rax],al
   140005ca5:	(bad)  
   140005ca6:	add    BYTE PTR [rax],al
   140005ca8:	rol    BYTE PTR [rax],0x0
   140005cab:	add    BYTE PTR [rax],al
   140005cad:	(bad)  
   140005cae:	add    BYTE PTR [rax],al
   140005cb0:	rol    BYTE PTR [rax],0x0
   140005cb3:	add    BYTE PTR [rax],al
   140005cb5:	add    eax,DWORD PTR [rax]
   140005cb7:	add    al,al
   140005cb9:	add    BYTE PTR [rax],al
   140005cbb:	add    BYTE PTR [rax],al
   140005cbd:	add    eax,DWORD PTR [rax]
   140005cbf:	add    al,ah
   140005cc1:	add    BYTE PTR [rax],al
   140005cc3:	add    BYTE PTR [rax],al
   140005cc5:	add    eax,DWORD PTR [rax]
   140005cc7:	add    ah,bh
   140005cc9:	add    BYTE PTR [rax],al
   140005ccb:	add    BYTE PTR [rax],al
   140005ccd:	add    eax,DWORD PTR [rax]
   140005ccf:	add    bh,bh
   140005cd1:	add    BYTE PTR [rax],0x0
   140005cd4:	add    BYTE PTR [rbx],al
   140005cd6:	add    BYTE PTR [rax],al
   140005cd8:	push   rax
   140005cda:	add    BYTE PTR [rax],al
   140005cdc:	add    BYTE PTR [rbx],al
   140005cde:	add    BYTE PTR [rax],al
   140005ce0:	(bad)  
   140005ce1:	clc    
   140005ce2:	add    BYTE PTR [rax],al
   140005ce4:	add    BYTE PTR [rbx],al
   140005ce6:	add    BYTE PTR [rax],al
   140005ce8:	(bad)  
   140005ce9:	clc    
   140005cea:	add    BYTE PTR [rax],al
   140005cec:	add    BYTE PTR [rdi],al
   140005cee:	add    BYTE PTR [rax],al
   140005cf0:	(bad)  
   140005cf1:	clc    
   140005cf2:	add    BYTE PTR [rax],al
   140005cf4:	add    edi,edi
   140005cf6:	add    BYTE PTR [rax],al
   140005cf8:	(bad)  
   140005cf9:	clc    
   140005cfa:	add    BYTE PTR [rcx],al
   140005cfc:	(bad)  
   140005cfd:	inc    DWORD PTR [rax]
   140005cff:	add    bh,bh
   140005d01:	clc    
   140005d02:	add    edi,edi
   140005d04:	(bad)  
   140005d05:	inc    DWORD PTR [rax]
   140005d07:	add    bh,bh
   140005d09:	std    
   140005d0a:	(bad)  
   140005d0b:	(bad)  
   140005d0c:	(bad)  
   140005d0d:	inc    DWORD PTR [rax]
   140005d0f:	add    bh,bh
   140005d11:	(bad)  
   140005d12:	(bad)  
   140005d13:	(bad)  
   140005d14:	(bad)  
   140005d15:	inc    DWORD PTR [rax]
   140005d17:	add    bh,bh
   140005d19:	(bad)  
   140005d1a:	(bad)  
   140005d1b:	(bad)  
   140005d1c:	(bad)  
   140005d1d:	inc    DWORD PTR [rax]
   140005d1f:	add    bh,bh
   140005d21:	(bad)  
   140005d22:	(bad)  
   140005d23:	(bad)  
   140005d24:	(bad)  
   140005d25:	inc    DWORD PTR [rax]
   140005d27:	add    bh,bh
   140005d29:	(bad)  
   140005d2a:	(bad)  
   140005d2b:	(bad)  
   140005d2c:	(bad)  
   140005d2d:	inc    DWORD PTR [rax]
   140005d2f:	add    BYTE PTR [rax],ch
   140005d31:	add    BYTE PTR [rax],al
   140005d33:	add    BYTE PTR [rax],ah
   140005d35:	add    BYTE PTR [rax],al
   140005d37:	add    BYTE PTR [rax+0x0],al
   140005d3a:	add    BYTE PTR [rax],al
   140005d3c:	add    DWORD PTR [rax],eax
   140005d3e:	add    al,0x0
   140005d40:	add    BYTE PTR [rax],al
   140005d42:	add    BYTE PTR [rax],al
   140005d44:	add    BYTE PTR [rdx],al
	...
   140005d5e:	add    BYTE PTR [rax],0x0
   140005d61:	add    BYTE PTR [rax],0x0
   140005d64:	add    BYTE PTR [rax+0x800080],al
   140005d6a:	add    BYTE PTR [rax],al
   140005d6c:	add    BYTE PTR [rax],0x80
   140005d6f:	add    BYTE PTR [rax-0x7fffff80],al
   140005d75:	add    BYTE PTR [rax-0x3f3f4000],0x0
   140005d7c:	add    BYTE PTR [rax],al
   140005d7e:	inc    DWORD PTR [rax]
   140005d80:	add    bh,bh
   140005d82:	add    BYTE PTR [rax],al
   140005d84:	add    bh,bh
   140005d86:	inc    DWORD PTR [rax]
   140005d88:	inc    DWORD PTR [rax]
   140005d8a:	add    BYTE PTR [rax],al
   140005d8c:	inc    DWORD PTR [rax]
   140005d8e:	inc    DWORD PTR [rax]
   140005d90:	(bad)  
   140005d91:	inc    DWORD PTR [rax]
   140005d93:	add    bh,bh
   140005d95:	(bad)  
   140005d96:	inc    DWORD PTR [rax]
	...
   140005dc0:	or     BYTE PTR [rdi+0x88],cl
	...
   140005dce:	add    BYTE PTR [rax],cl
   140005dd0:	(bad)  
   140005dd1:	clc    
   140005dd2:	(bad)
	...
   140005dde:	or     BYTE PTR [rdi-0x77707771],cl
   140005de4:	mov    BYTE PTR [rax],al
	...
   140005dee:	mov    BYTE PTR [rax-0x77777071],cl
   140005df4:	mov    BYTE PTR [rax+0x0],al
   140005dfa:	add    BYTE PTR [rax],al
   140005dfc:	add    BYTE PTR [rax],al
   140005dfe:	mov    BYTE PTR [rax-0x77770708],cl
   140005e04:	xchg   DWORD PTR [rax+0x0],eax
   140005e0a:	add    BYTE PTR [rax],al
   140005e0c:	add    BYTE PTR [rax],al
   140005e0e:	mov    BYTE PTR [rax-0x78777778],cl
   140005e14:	ja     0x140005d96
   140005e16:	add    BYTE PTR [rax],al
   140005e18:	add    BYTE PTR [rdi+0x70],dh
   140005e1b:	add    BYTE PTR [rax],al
   140005e1d:	add    BYTE PTR [rax],cl
   140005e1f:	mov    BYTE PTR [rax+0x78777788],cl
   140005e25:	mov    BYTE PTR [rax-0x877f900],al
   140005e2b:	ja     0x140005ea5
   140005e2d:	add    BYTE PTR [rax],al
   140005e2f:	or     BYTE PTR [rax+0x77],bh
   140005e32:	ja     0x140005eab
   140005e34:	mov    BYTE PTR [rdi-0x78f8ff78],cl
   140005e3a:	mov    BYTE PTR [rdi+0x8777],al
   140005e40:	xchg   DWORD PTR [rdi+0x78],esi
   140005e43:	clc    
   140005e44:	clc    
   140005e45:	js     0x140005dcf
   140005e47:	add    BYTE PTR [rax],cl
   140005e49:	xchg   DWORD PTR [rax+0x7777f778],ecx
   140005e4f:	mov    BYTE PTR [rax+0x447c8888],cl
   140005e55:	(bad)  
   140005e56:	mov    BYTE PTR [rax],al
   140005e58:	(bad)  
   140005e59:	mov    BYTE PTR [rax+0x77],bh
   140005e5c:	js     0x140005ded
   140005e5e:	clc    
   140005e5f:	mov    BYTE PTR [rdi+0x44],dh
   140005e62:	rex.R
   140005e63:	rex.R mov dil,0xf8
   140005e67:	add    BYTE PTR [rax],cl
   140005e69:	mov    BYTE PTR [rdi+0x74878888],al
   140005e6f:	rex.R
   140005e70:	rex.R
   140005e71:	rex.WR ins BYTE PTR es:[rdi],dx
   140005e73:	mov    edi,0x70088c7
   140005e79:	mov    BYTE PTR [rax+0x78],bh
   140005e7c:	je     0x140005ec2
   140005e7e:	rex.R
   140005e7f:	rex.R
   140005e80:	rex.RX
   140005e81:	rex.WR ja 0x140005e4b
   140005e84:	mov    edi,0x880800f7
   140005e8a:	mov    BYTE PTR [rax+0x44],bh
   140005e8d:	rex.R
   140005e8e:	rex.R
   140005e8f:	mov    BYTE PTR [rax+r9*8-0x38],r8b
   140005e94:	enter  0x88ce,0x0
   140005e98:	(bad)  
   140005e99:	test   DWORD PTR [rax+0x64657488],0x7c77f848
   140005ea3:	mov    ?,WORD PTR [rdi+0x77]
   140005ea6:	clc    
   140005ea7:	add    BYTE PTR [rax],cl
   140005ea9:	xchg   DWORD PTR [rax+0x47c77488],ecx
   140005eaf:	(bad)  
   140005eb0:	pop    rax
   140005eb1:	xchg   DWORD PTR [rax-0x77833738],ecx
   140005eb7:	add    BYTE PTR [rdi],al
   140005eb9:	xchg   DWORD PTR [rax+0x787c8488],ecx
   140005ebf:	test   ah,0xf8
   140005ec2:	enter  0x8888,0x88
   140005ec6:	mov    BYTE PTR [rax],al
   140005ec8:	(bad)  
   140005ec9:	xchg   DWORD PTR [rax-0x39887b78],ecx
   140005ecf:	push   rsp
   140005ed0:	(bad)  
   140005ed1:	jg     0x140005e5a
   140005ed3:	xchg   DWORD PTR [rsi+0x780f88c],ecx
   140005ed9:	mov    bh,0x88
   140005edb:	mov    BYTE PTR [rsp+rdi*2-0x37333bbc],al
   140005ee2:	test   DWORD PTR [rax-0x7f777778],0x888f2707
   140005eec:	hlt    
   140005eed:	test   BYTE PTR [rsp+rcx*2+0x6c],cl
   140005ef1:	push   0xffffffff8888688f
   140005ef6:	mov    BYTE PTR [rax-0x7077b8f9],al
   140005efc:	xchg   esp,eax
   140005efe:	mov    dh,0xcc
   140005f01:	iret   
   140005f02:	mov    BYTE PTR [rax+0x70888888],cl
   140005f08:	or     BYTE PTR [rax-0x1],bh
   140005f0b:	clc    
   140005f0c:	xchg   DWORD PTR [rsp+rbp*2+0x4c],eax
   140005f10:	int3   
   140005f11:	(bad)
   140005f15:	clc    
   140005f16:	pop    QWORD PTR [rax-0x77f800]
   140005f1c:	xchg   DWORD PTR [rsp+rcx*2-0x3a],ecx
   140005f20:	int3   
   140005f21:	(bad)
   140005f25:	dec    DWORD PTR [rax+0x80]
   140005f2b:	mov    BYTE PTR [rdi-0x3333b9b4],al
   140005f31:	(bad)  
   140005f32:	dec    DWORD PTR [rax-0x7f107771]
   140005f38:	add    BYTE PTR [rax],al
   140005f3a:	add    BYTE PTR [rax],al
   140005f3c:	mov    BYTE PTR [rsp+rcx*8+0x4c],al
   140005f40:	(bad)  
   140005f41:	mov    BYTE PTR [rax-0x70777178],cl
   140005f47:	add    BYTE PTR [rax],0x0
   140005f4a:	add    BYTE PTR [rax],al
   140005f4c:	or     BYTE PTR [rsp+rcx*2+0x67],al
   140005f50:	enter  0x8888,0x88
   140005f54:	(bad)  
   140005f55:	(bad)  
   140005f56:	inc    DWORD PTR [rax]
   140005f58:	add    BYTE PTR [rax],al
   140005f5a:	add    BYTE PTR [rax],al
   140005f5c:	or     BYTE PTR [rax-0x78],bh
   140005f5f:	(bad)  
   140005f60:	(bad)
	...
   140005f6c:	or     al,bh
	...
   140005f96:	add    BYTE PTR [rax],al
   140005f98:	(bad)  
   140005f99:	(bad)  
   140005f9a:	(bad)  
   140005f9b:	(bad)  
   140005f9c:	(bad)  
   140005f9d:	(bad)  
   140005f9e:	(bad)  
   140005f9f:	(bad)  
   140005fa0:	(bad)  
   140005fa1:	inc    DWORD PTR [rbx+0xfeffff]
   140005fa7:	(bad)  
   140005fa8:	(bad)  
   140005fa9:	clc    
   140005faa:	add    BYTE PTR [rdi],bh
   140005fac:	push   rax
   140005fae:	add    BYTE PTR [rdi],bl
   140005fb0:	push   rax
   140005fb2:	add    BYTE PTR [rdi],bl
   140005fb4:	push   rax
   140005fb6:	add    BYTE PTR [rdi],bl
   140005fb8:	xbegin 0x17e8066be
   140005fbe:	add    BYTE PTR [rbx],al
   140005fc0:	or     BYTE PTR [rdi],0x0
   140005fc3:	add    eax,DWORD PTR [rax-0x7ffd0000]
   140005fc9:	add    BYTE PTR [rax],al
   140005fcb:	add    eax,DWORD PTR [rax-0x7ffd0000]
   140005fd1:	add    BYTE PTR [rax],al
   140005fd3:	add    eax,DWORD PTR [rax-0x7ffd0000]
   140005fd9:	add    BYTE PTR [rax],al
   140005fdb:	add    eax,DWORD PTR [rax-0x7ffd0000]
   140005fe1:	add    BYTE PTR [rax],al
   140005fe3:	add    eax,DWORD PTR [rax-0x7fff0000]
   140005fe9:	add    BYTE PTR [rax],al
   140005feb:	add    DWORD PTR [rax-0x7fff0000],eax
   140005ff1:	add    BYTE PTR [rax],al
   140005ff3:	add    DWORD PTR [rax-0x1fff0000],eax
   140005ff9:	add    BYTE PTR [rax],al
   140005ffb:	add    esp,edi
   140005ffd:	add    BYTE PTR [rax],al
   140005fff:	add    edi,edi
   140006001:	add    BYTE PTR [rax],al
   140006003:	add    edi,edi
   140006005:	add    BYTE PTR [rax],0x3
   140006008:	inc    DWORD PTR [rax-0x700000f9]
   14000600e:	(bad)  
   14000600f:	(bad)  
   140006010:	(bad)  
   140006011:	(bad)  
   140006012:	(bad)  
   140006013:	(bad)  
   140006014:	(bad)  
   140006015:	(bad)  
   140006016:	(bad)  
   140006017:	jmp    FWORD PTR [rax]
   140006019:	add    BYTE PTR [rax],al
   14000601b:	add    BYTE PTR [rax],dl
   14000601d:	add    BYTE PTR [rax],al
   14000601f:	add    BYTE PTR [rax],ah
   140006021:	add    BYTE PTR [rax],al
   140006023:	add    BYTE PTR [rcx],al
   140006025:	add    BYTE PTR [rax+rax*1],al
   140006028:	add    BYTE PTR [rax],al
   14000602a:	add    BYTE PTR [rax],al
   14000602c:	add    BYTE PTR [rax],0x0
	...
   140006043:	add    BYTE PTR [rax],al
   140006045:	add    BYTE PTR [rax+0x800000],al
   14000604b:	add    BYTE PTR [rax],al
   14000604d:	add    BYTE PTR [rax+0x8000],0x0
   140006054:	add    BYTE PTR [rax],0x80
   140006057:	add    BYTE PTR [rax-0x7fffff80],al
   14000605d:	add    BYTE PTR [rax-0x3f3f4000],0x0
   140006064:	add    BYTE PTR [rax],al
   140006066:	inc    DWORD PTR [rax]
   140006068:	add    bh,bh
   14000606a:	add    BYTE PTR [rax],al
   14000606c:	add    bh,bh
   14000606e:	inc    DWORD PTR [rax]
   140006070:	inc    DWORD PTR [rax]
   140006072:	add    BYTE PTR [rax],al
   140006074:	inc    DWORD PTR [rax]
   140006076:	inc    DWORD PTR [rax]
   140006078:	(bad)  
   140006079:	inc    DWORD PTR [rax]
   14000607b:	add    bh,bh
   14000607d:	(bad)  
   14000607e:	inc    DWORD PTR [rax]
	...
   140006088:	ja     0x1400060fa
   14000608a:	add    BYTE PTR [rax+0x808787],cl
   140006090:	xchg   DWORD PTR [rax-0x78770800],eax
   140006096:	add    BYTE PTR [rax],al
   140006098:	mov    BYTE PTR [rax+0x70870000],al
   14000609e:	add    BYTE PTR [rax],al
   1400060a0:	mov    BYTE PTR [rax-0x77777778],cl
   1400060a6:	js     0x140006120
   1400060a8:	mov    BYTE PTR [rax-0x77777778],cl
   1400060ae:	mov    BYTE PTR [rax-0x3b7b7778],cl
   1400060b4:	rex.RXB int3 
   1400060b6:	(bad)  
   1400060b7:	mov    BYTE PTR [rax-0x78837b78],cl
   1400060bd:	(bad)  
   1400060be:	int3   
   1400060bf:	mov    BYTE PTR [rdx-0x307988],cl
   1400060c5:	mov    WORD PTR [rsi-0x7a877e78],es
   1400060cb:	push   0xffffffff88c8f7c7
   1400060d0:	mov    BYTE PTR [rdi-0x70333384],cl
   1400060d6:	(bad)  
   1400060d7:	mov    BYTE PTR [rax],al
   1400060d9:	or     BYTE PTR [rsi+rax*8-0x77733032],al
   1400060e0:	add    BYTE PTR [rax],cl
   1400060e2:	mov    esp,cs
   1400060e4:	enter  0xe777,0x88
   1400060e8:	add    BYTE PTR [rax],cl
   1400060ea:	xchg   DWORD PTR [rax-0x77777788],ecx
   1400060f0:	add    BYTE PTR [rax],cl
   1400060f2:	mov    BYTE PTR [rax-0x70777778],cl
	...
   140006100:	(bad)  
   140006101:	inc    DWORD PTR [rax]
   140006103:	add    BYTE PTR [rdi+rax*1],bl
   140006106:	add    BYTE PTR [rax],al
   140006108:	sbb    al,0xf
   14000610a:	add    BYTE PTR [rax],al
   14000610c:	(bad)  
   14000610d:	(bad)  
	...
   14000612a:	add    BYTE PTR [rax],al
   14000612c:	loopne 0x14000612e
   14000612e:	add    BYTE PTR [rax],al
   140006130:	loopne 0x140006132
   140006132:	add    BYTE PTR [rax],al
   140006134:	loopne 0x140006136
   140006136:	add    BYTE PTR [rax],al
   140006138:	loopne 0x14000613a
   14000613a:	add    BYTE PTR [rax],al
   14000613c:	(bad)  
   14000613d:	inc    DWORD PTR [rax]
   14000613f:	add    BYTE PTR [rax],ch
   140006141:	add    BYTE PTR [rax],al
   140006143:	add    BYTE PTR [rax],dh
   140006145:	add    BYTE PTR [rax],al
   140006147:	add    BYTE PTR [rax+0x0],ah
   14000614a:	add    BYTE PTR [rax],al
   14000614c:	add    DWORD PTR [rax],eax
   14000614e:	or     BYTE PTR [rax],al
   140006150:	add    BYTE PTR [rax],al
   140006152:	add    BYTE PTR [rax],al
   140006154:	add    BYTE PTR [rcx],cl
	...
   14000615e:	add    BYTE PTR [rax],al
   140006160:	add    BYTE PTR [rcx],al
   140006162:	add    BYTE PTR [rax],al
   140006164:	add    BYTE PTR [rcx],al
   140006166:	add    BYTE PTR [rax],al
   140006168:	add    BYTE PTR [rax],al
   14000616a:	add    BYTE PTR [rax],al
   14000616c:	(bad)  
   14000616d:	add    BYTE PTR [rdx],al
   14000616f:	add    BYTE PTR [rax+rax*1+0x0],bh
   140006173:	add    BYTE PTR [rdx+0x18],bh
   140006176:	or     eax,0x1a237c00
   14000617b:	add    BYTE PTR [rdi+0x30],bh
   14000617e:	(bad)  
   14000617f:	add    BYTE PTR [rsi],al
   140006181:	push   rsp
   140006182:	sbb    eax,DWORD PTR [rax]
   140006184:	rex.WRX
   140006185:	rex.WRX
   140006186:	rex.WRX add BYTE PTR [rbx+r9*2+0x43],r10b
   14000618b:	add    BYTE PTR [rbp+0x5e],bl
   14000618e:	pop    rsi
   14000618f:	add    BYTE PTR [rbx+0x44],ah
   140006192:	push   rbp
   140006193:	add    BYTE PTR [rbx+0x63],ah
   140006196:	movsxd eax,DWORD PTR [rax]
   140006198:	push   0x66006564
   14000619d:	addr32 push 0x6a6a6a00
   1400061a3:	add    BYTE PTR [rbp+rbp*2+0x6c],bh
   1400061a7:	add    BYTE PTR [rcx+0x71],dh
   1400061aa:	jno    0x1400061ac
   1400061ac:	jge    0x140006220
   1400061ae:	je     0x1400061b0
   1400061b0:	js     0x14000622a
   1400061b2:	ja     0x1400061b4
   1400061b4:	jnp    0x140006231
   1400061b6:	jnp    0x1400061b8
   1400061b8:	mov    BYTE PTR [rdi],al
   1400061ba:	add    BYTE PTR [rax],al
   1400061bc:	xchg   esi,eax
   1400061bd:	or     al,BYTE PTR [rax]
   1400061bf:	add    BYTE PTR [rcx-0x66fff6ed],cl
   1400061c5:	adc    al,BYTE PTR [rax+rax*1]
   1400061c8:	lea    ebx,[rdx*1+0x111a9000]
   1400061cf:	add    BYTE PTR [rax+rcx*1+0xab60000],ah
   1400061d6:	add    BYTE PTR [rax],al
   1400061d8:	test   al,0x15
   1400061da:	add    DWORD PTR [rax],eax
   1400061dc:	mov    eax,0xb4000018
   1400061e1:	sbb    DWORD PTR [rbx],edx
   1400061e3:	add    BYTE PTR [rbx-0x68ffe3dc],cl
   1400061e9:	es sbb al,0x0
   1400061ec:	lods   al,BYTE PTR ds:[rsi]
   1400061ed:	and    BYTE PTR [rax+rax*1],cl
   1400061f0:	mov    ebp,0xaa000c22
   1400061f5:	(bad)  
   1400061f6:	(bad)  
   1400061f7:	add    BYTE PTR [rbx-0x47ffe8d6],dh
   1400061fd:	xor    DWORD PTR [rip+0x262b9700],ebx        # 0x1662bf903
   140006203:	add    BYTE PTR [rbp-0x69ffd6ce],al
   140006209:	xor    eax,0x3c8b002d
   14000620e:	add    BYTE PTR ss:[rax-0x46ffccc7],bl
   140006215:	(bad)  
   140006216:	add    BYTE PTR es:[rsi-0x39ffcdc4],ah
   14000621d:	sbb    eax,DWORD PTR [rax]
   14000621f:	add    ah,dl
   140006221:	sbb    eax,DWORD PTR [rax]
   140006223:	add    cl,dh
   140006225:	or     eax,DWORD PTR [rax]
   140006227:	add    cl,ch
   140006229:	sbb    al,BYTE PTR [rax]
   14000622b:	add    dl,al
   14000622d:	and    ecx,DWORD PTR [rcx]
   14000622f:	add    bh,dl
   140006231:	and    al,BYTE PTR [rax]
   140006233:	add    bh,al
   140006235:	cs adc al,0x0
   140006238:	out    0x23,al
   14000623a:	add    BYTE PTR [rax],al
   14000623c:	repz and al,0x0
   14000623f:	add    dh,ah
   140006241:	cmp    eax,0x37f5001d
   140006246:	adc    DWORD PTR [rax],eax
   140006248:	(bad)  
   140006249:	cmp    eax,0x3bd1002a
   14000624e:	and    al,BYTE PTR [rax]
   140006250:	rex.X
   140006251:	rex.X
   140006252:	add    BYTE PTR ss:[rdx+rax*2+0x43bc003a],ah
   14000625a:	xor    eax,DWORD PTR [rax]
   14000625c:	mov    DWORD PTR [rdx+0x2c],0x3448c900
   140006263:	add    dh,dl
   140006265:	rex.WRX (bad) 
   140006267:	add    dl,cl
   140006269:	push   rcx
   14000626a:	ds add dh,dh
   14000626d:	push   rsi
   14000626e:	xor    al,0x0
   140006270:	xchg   esp,eax
   140006271:	rex.WR
   140006272:	rex.RXB add BYTE PTR [r9-0x59ffadaa],r11b
   140006279:	rex.WX
   14000627a:	rex.RX add BYTE PTR [rcx-0x4bffb7b0],r13b
   140006281:	push   rcx
   140006282:	add    BYTE PTR [rbp-0x4dffada7],r13b
   140006289:	pop    rsp
   14000628a:	push   rbp
   14000628b:	add    BYTE PTR [rbp-0x57ffa69f],bl
   140006291:	(bad)  
   140006292:	pop    rbp
   140006293:	add    BYTE PTR [rsi-0x76ffa69d],dh
   140006299:	fs (bad) 
   14000629b:	add    BYTE PTR [rdi-0x63ff9a9a],dl
   1400062a1:	jno    0x140006310
   1400062a3:	add    BYTE PTR [rsi-0x56ff8f8b],bl
   1400062a9:	push   0x61
   1400062ab:	add    BYTE PTR [rdi-0x57ff9592],dh
   1400062b1:	jb     0x14000631c
   1400062b3:	add    BYTE PTR [rcx-0x58ff948c],bh
   1400062b9:	jg     0x140006335
   1400062bb:	add    BYTE PTR [rsi-0x37ff8d86],bh
   1400062c1:	push   rbp
   1400062c2:	add    spl,r10b
   1400062c5:	pop    rcx
   1400062c6:	add    r12b,r12b
   1400062c9:	pop    rdi
   1400062ca:	rex.RXB add r14b,r9b
   1400062cd:	(bad)  
   1400062ce:	rex.WRX add spl,r10b
   1400062d1:	(bad)  
   1400062d2:	rex.WRB add r9b,r9b
   1400062d5:	addr32 pop rax
   1400062d7:	add    dl,bl
   1400062d9:	push   0x6ce50054
   1400062de:	push   rsi
   1400062df:	add    bl,ah
   1400062e1:	jb     0x140006340
   1400062e3:	add    dh,dh
   1400062e5:	jb     0x14000633f
   1400062e7:	add    al,cl
   1400062e9:	jbe    0x140006355
   1400062eb:	add    dh,bl
   1400062ed:	js     0x140006356
   1400062ef:	add    dh,dl
   1400062f1:	jg     0x140006364
   1400062f3:	add    dh,ah
   1400062f5:	jnp    0x14000635f
   1400062f7:	add    BYTE PTR [rsi],bh
   1400062f9:	xchg   esp,eax
   1400062fa:	add    BYTE PTR [ecx*8-0xffff82],dh
   140006302:	imul   eax,DWORD PTR [rax],0xffffff84
   140006305:	cmp    BYTE PTR [rsi+0x0],0xad
   140006309:	cmp    DWORD PTR [rax+rax*1-0x3a],0xffffff84
   14000630e:	jp     0x140006310
   140006310:	jmp    0x140006293
   140006312:	ins    BYTE PTR es:[rdi],dx
   140006313:	add    ah,dh
   140006315:	sub    DWORD PTR [rdx+0x0],0x7587ea
   14000631c:	cmc    
   14000631d:	lea    edi,[rcx+0x0]
   140006320:	clc    
   140006321:	xchg   ecx,eax
   140006322:	jl     0x140006324
   140006324:	jg     0x1400063a5
   140006326:	add    DWORD PTR [rax],0x807f9c
   14000632c:	jg     0x1400062af
   14000632e:	add    DWORD PTR [rax],0x91a37a
   140006334:	je     0x1400062ed
   140006336:	fwait
   140006337:	add    BYTE PTR [rcx-0x25],ah
   14000633a:	pushf  
   14000633b:	add    BYTE PTR [rbx+rax*4-0x7a7aff7c],al
   140006342:	mov    DWORD PTR [rax],eax
   140006344:	mov    BYTE PTR [rdi-0x7474ff76],al
   14000634a:	mov    WORD PTR [rax],es
   14000634c:	popf   
   14000634d:	mov    DWORD PTR [rdx-0x706e7000],ecx
   140006353:	add    BYTE PTR [rbp+rcx*4-0x706dff6e],cl
   14000635a:	xchg   ebp,eax
   14000635b:	add    BYTE PTR [rbx-0x6cff686d],cl
   140006361:	xchg   ebx,eax
   140006362:	xchg   ebx,eax
   140006363:	add    BYTE PTR [rax-0x6cff6869],bl
   140006369:	xchg   edi,eax
   14000636a:	fwait
   14000636b:	add    BYTE PTR [rax-0x6aff646a],bl
   140006371:	cdq    
   140006372:	popf   
   140006373:	add    BYTE PTR [rbx-0x56ff6466],bl
   140006379:	mov    ecx,DWORD PTR [rax-0x7f784800]
   14000637f:	add    BYTE PTR [rbx-0x5bff746e],ah
   140006385:	pushf  
   140006386:	fwait
   140006387:	add    BYTE PTR [rbp-0x6aff6b69],dh
   14000638d:	test   eax,0xa0a4009d
   140006392:	lahf   
   140006393:	add    BYTE PTR [rax-0x66ff625f],bh
   140006399:	popf   
   14000639a:	movabs ds:0xaca79800a09ca900,al
   1400063a3:	add    BYTE PTR [rcx-0x5cff5845],dl
   1400063a9:	movabs ds:0xa9a900a5a5a800a3,eax
   1400063b2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400063b3:	add    BYTE PTR [rsi+riz*4-0x575bff56],ah
   1400063ba:	lods   al,BYTE PTR ds:[rsi]
   1400063bb:	add    BYTE PTR [rbx+rbp*4-0x5b4fff54],ch
   1400063c2:	movabs ds:0xa4a9bc00a0a2b900,eax
   1400063cb:	add    BYTE PTR [rbx-0x4eff5759],dh
   1400063d1:	lods   al,BYTE PTR ds:[rsi]
   1400063d2:	lods   al,BYTE PTR ds:[rsi]
   1400063d3:	add    BYTE PTR [rdx-0x4dff5454],bh
   1400063d9:	mov    al,0xae
   1400063db:	add    BYTE PTR [rdi+rbp*4-0x5254ff4d],ah
   1400063e2:	mov    al,0x0
   1400063e4:	mov    cl,0xaf
   1400063e6:	mov    al,0x0
   1400063e8:	mov    esp,0xa300b4ae
   1400063ed:	mov    al,0xb4
   1400063ef:	add    BYTE PTR [rax-0x56ff484e],ch
   1400063f5:	mov    dh,0xbc
   1400063f7:	add    BYTE PTR [rsi-0x4bff4446],ch
   1400063fd:	mov    bl,0xb3
   1400063ff:	add    BYTE PTR [rbx-0x43ff4c4d],bh
   140006405:	mov    eax,0xb6b000b5
   14000640a:	mov    edx,0xbab9b500
   14000640f:	add    BYTE PTR [rbx-0x3bff4446],bh
   140006415:	nop
   140006416:	mov    DWORD PTR [rax],eax
   140006418:	(bad)  
   140006419:	(bad)  
   14000641a:	xchg   ecx,eax
   14000641b:	add    dl,ch
   14000641d:	xchg   ebp,eax
   14000641e:	test   DWORD PTR [rax],eax
   140006420:	neg    BYTE PTR [rcx-0x6012ff79]
   140006426:	nop
   140006427:	add    al,cl
   140006429:	movabs ds:0xa4e8009ba8db009e,eax
   140006432:	mov    es,WORD PTR [rax]
   140006434:	cmc    
   140006435:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140006436:	mov    es,WORD PTR [rax]
   140006438:	(bad)  
   140006439:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000643a:	xchg   esp,eax
   14000643b:	add    al,bh
   14000643d:	test   al,0x98
   14000643f:	add    bl,ch
   140006441:	mov    ch,0x9e
   140006443:	add    bl,bh
   140006445:	mov    bl,0x95
   140006447:	add    ah,al
   140006449:	stos   BYTE PTR es:[rdi],al
   14000644a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000644b:	add    bl,bl
   14000644d:	lods   al,BYTE PTR ds:[rsi]
   14000644e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000644f:	add    dh,al
   140006451:	mov    dl,0xac
   140006453:	add    dh,dl
   140006455:	mov    dh,0xac
   140006457:	add    ch,al
   140006459:	test   eax,0xb0c600b6
   14000645e:	mov    al,0x0
   140006460:	leave  
   140006461:	mov    eax,0xbcc300b6
   140006466:	mov    esp,0xbcbdcc00
   14000646b:	add    cl,dl
   14000646d:	mov    ebp,0xbae800ba
   140006472:	test   eax,0xa6b7fd00
   140006477:	add    ch,bh
   140006479:	mov    edi,0xc1b900b3
   14000647e:	mov    esi,0xb8c1da00
   140006483:	add    dh,bh
   140006485:	ret    
   140006486:	stos   DWORD PTR es:[rdi],eax
   140006487:	add    bh,ah
   140006489:	(bad)
   14000648c:	std    
   14000648d:	enter  0xb6,0xff
   140006491:	sar    DWORD PTR [rbp-0x3d425200],1
   140006497:	add    BYTE PTR [rdi-0x3cff3d41],dh
   14000649d:	mov    ebp,0xc2ba00c1
   1400064a2:	ret    
   1400064a3:	add    BYTE PTR [rbx-0x44ff373d],dh
   1400064a9:	(bad)  
   1400064aa:	leave  
   1400064ab:	add    BYTE PTR [rdi-0x44ff3438],dh
   1400064b1:	retf   0xcd
   1400064b4:	ret    
   1400064b5:	ret    
   1400064b6:	(bad)  
   1400064b7:	add    bl,cl
   1400064b9:	(bad)  
   1400064ba:	(bad)
   1400064bd:	enter  0xc7,0xc4
   1400064c1:	(bad)  
   1400064c2:	leave  
   1400064c3:	add    ah,cl
   1400064c5:	(bad)  
   1400064c6:	enter  0xc100,0xc9
   1400064ca:	retf   
   1400064cb:	add    bl,cl
   1400064cd:	retf   
   1400064ce:	retf   
   1400064cf:	add    ch,dl
   1400064d1:	retf   0xc7
   1400064d4:	(bad)  
   1400064d5:	ror    edi,1
   1400064d7:	add    ch,al
   1400064d9:	(bad)  
   1400064da:	rol    BYTE PTR [rax],cl
   1400064dc:	iret   
   1400064dd:	iret   
   1400064de:	rol    BYTE PTR [rax],1
   1400064e0:	(bad)
   1400064e3:	add    ch,cl
   1400064e5:	rcl    ah,cl
   1400064e7:	add    dh,cl
   1400064e9:	(bad)  
   1400064ea:	fadd   DWORD PTR [rax]
   1400064ec:	retf   0xdcda
   1400064ef:	add    dl,dl
   1400064f1:	rcl    ebx,cl
   1400064f3:	add    dl,bl
   1400064f5:	(bad)  
   1400064f6:	rol    DWORD PTR [rax],cl
   1400064f8:	(bad)  
   1400064f9:	xlat   BYTE PTR ds:[rbx]
   1400064fa:	fadd   DWORD PTR [rax]
   1400064fc:	(bad)  
   1400064fd:	(bad)  
   1400064ff:	add    bl,bl
   140006501:	fcmovnu st,st(3)
   140006503:	add    dh,bh
   140006505:	(bad)  
   140006506:	(bad)  
   140006507:	add    ch,ch
   140006509:	xlat   BYTE PTR ds:[rbx]
   14000650a:	int    0x0
   14000650c:	(bad)  
   14000650d:	(bad)  
   14000650e:	mov    DWORD PTR [rax],0xd2dcfe
   140006514:	jmp    rsp
   140006516:	fiadd  DWORD PTR [rax]
   140006518:	(bad)  
   140006519:	fsubrp st(1),st
   14000651b:	add    bl,dl
   14000651d:	fsubrp st(1),st
   14000651f:	add    dl,bl
   140006521:	(bad)  
   140006523:	add    cl,bl
   140006525:	loop   0x14000650a
   140006527:	add    dl,ah
   140006529:	jrcxz  0x14000650e
   14000652b:	add    cl,ch
   14000652d:	out    0xe6,eax
   14000652f:	add    cl,ah
   140006531:	out    0xea,eax
   140006533:	add    bh,ah
   140006535:	jmp    0x12beb6623
   14000653a:	jmp    0x14000653c
   14000653c:	(bad)  
   14000653d:	jmp    0x140006524
   14000653f:	add    bh,bh
   140006541:	lock (bad) 
   140006543:	add    bh,ah
   140006545:	out    dx,al
   140006546:	lock add dh,ch
   140006549:	repnz cmc 
   14000654b:	add    bl,dh
   14000654d:	hlt    
   14000654e:	hlt    
   14000654f:	add    bh,bh
   140006551:	cmc    
   140006552:	lock add dh,dh
   140006555:	clc    
   140006556:	stc    
   140006557:	add    dh,bh
   140006559:	(bad)  
   14000655a:	inc    BYTE PTR [rax]
	...
   140006564:	(bad)  
   140006565:	(bad)  
   140006566:	inc    DWORD PTR [rax]
	...
   140006610:	add    ch,bl
   140006612:	fstp   st(5)
   140006614:	fstp   st(5)
   140006616:	stos   BYTE PTR es:[rdi],al
   140006617:	int    0x0
	...
   14000663d:	add    ch,bl
   14000663f:	fstp   st(5)
   140006641:	lock icebp 
   140006643:	lock lock out 0xe6,al
   140006647:	out    0xdd,al
   140006649:	rcl    DWORD PTR [rbp+0xd3],cl
	...
   14000666b:	add    BYTE PTR [rdx-0x19192223],ch
   140006671:	out    0xe6,al
   140006673:	in     al,0xdd
   140006675:	fstp   st(5)
   140006677:	lock out 0xd3,al
   14000667a:	stos   BYTE PTR es:[rdi],al
   14000667b:	fst    QWORD PTR [rbp+0x95]
	...
   140006699:	add    bl,dl
   14000669b:	fstp   st(5)
   14000669d:	fstp   st(5)
   14000669f:	fucom  st(6)
   1400066a1:	out    0xe6,al
   1400066a3:	out    0xdd,al
   1400066a5:	fstp   st(5)
   1400066a7:	lock fstp QWORD PTR [rbx+rdx*8-0x7c2c552a]
	...
   1400066c7:	add    BYTE PTR [rax],al
   1400066c9:	fst    st(3)
   1400066cb:	ror    ebp,cl
   1400066cd:	(bad)  
   1400066ce:	(bad)  
   1400066d0:	fucom  st(6)
   1400066d2:	out    0xf0,al
   1400066d4:	fstp   st(1)
   1400066d6:	(bad)  
   1400066d8:	int    0xd3
   1400066da:	fldenv [rbp+0x78d39595]
	...
   1400066f8:	add    BYTE PTR [rdi-0x29325556],ah
   1400066fe:	(bad)  
   140006700:	out    0xe6,al
   140006702:	out    0xe6,al
   140006704:	fstp   st(1)
   140006706:	(bad)  
   140006707:	ffree  st(5)
   140006709:	int    0xa5
   14000670b:	pushf  
   14000670c:	xchg   edx,eax
   14000670d:	adc    DWORD PTR [rax+0x8a],0x0
	...
   140006728:	add    BYTE PTR [rdx-0x403a5557],ch
   14000672e:	int    0xd9
   140006730:	(bad)  
   140006732:	out    0xdd,al
   140006734:	fst    st(3)
   140006736:	(bad)  
   140006737:	int    0xc5
   140006739:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000673a:	xchg   ebp,eax
   14000673b:	nop
   14000673c:	jle    0x1400067b8
   14000673e:	nop
   14000673f:	nop
	...
   140006758:	add    ch,bl
   14000675a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000675b:	stos   BYTE PTR es:[rdi],al
   14000675c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000675d:	(bad)
   140006760:	(bad)  
   140006762:	(bad)  
   140006764:	fxch   st(5)
   140006766:	int    0xa7
   140006768:	pushf  
   140006769:	nop
   14000676a:	jle    0x1400067e6
   14000676c:	jp     0x1400067ed
   14000676e:	lahf   
   14000676f:	jle    0x140006771
	...
   140006779:	add    BYTE PTR [rax],al
   14000677b:	outs   dx,DWORD PTR ds:[rsi]
   14000677c:	jp     0x1400067ed
	...
   14000678a:	xchg   ebp,eax
   14000678b:	fst    st(3)
   14000678d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000678e:	test   eax,0xcdc5cdc5
   140006793:	mov    edi,0x7f909ca9
   140006798:	jne    0x1400067aa
   14000679a:	or     eax,0x95907e71
   14000679f:	nop
   1400067a0:	add    BYTE PTR [rax+0xd3],dl
   1400067a6:	add    BYTE PTR [rax],al
   1400067a8:	add    BYTE PTR [rax],al
   1400067aa:	(bad)  
   1400067ab:	pushf  
   1400067ac:	xor    eax,0xffffffe4
   1400067af:	or     al,0xe
   1400067b1:	(bad)  
   1400067b2:	or     al,0x90
   1400067b4:	outs   dx,DWORD PTR ds:[rsi]
   1400067b5:	add    BYTE PTR [rax],al
   1400067b7:	add    BYTE PTR [rax],al
   1400067b9:	add    BYTE PTR [rax],al
   1400067bb:	nop
   1400067bc:	xchg   ebp,eax
   1400067bd:	(bad)  
   1400067be:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400067bf:	pushf  
   1400067c0:	nop
   1400067c1:	nop
   1400067c2:	nop
   1400067c3:	jg     0x14000683c
   1400067c5:	adc    edx,DWORD PTR [rax]
   1400067c7:	or     eax,0x83750d09
   1400067cc:	xchg   ebp,eax
   1400067cd:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400067ce:	stos   BYTE PTR es:[rdi],al
   1400067cf:	stos   BYTE PTR es:[rdi],al
   1400067d0:	out    0xe6,al
   1400067d2:	nop
   1400067d3:	add    BYTE PTR [rax],al
   1400067d5:	add    BYTE PTR [rax],al
   1400067d7:	add    BYTE PTR [rax],al
   1400067d9:	(bad)  
   1400067da:	pushf  
   1400067db:	xchg   ecx,eax
   1400067dc:	jle    0x140006777
   1400067de:	fst    st(3)
   1400067e0:	jle    0x14000685a
   1400067e2:	adc    BYTE PTR [rdi-0x23],bh
   1400067e5:	int    0x13
   1400067e7:	add    BYTE PTR [rax],al
   1400067e9:	add    BYTE PTR [rax],al
   1400067eb:	add    BYTE PTR [rax],al
   1400067ed:	jle    0x14000686e
   1400067ef:	nop
   1400067f0:	xchg   edx,eax
   1400067f1:	nop
   1400067f2:	adc    edx,DWORD PTR [edx]
   1400067f5:	adc    esi,DWORD PTR [rcx+0x77]
   1400067f8:	mov    dl,BYTE PTR [rsp+rbx*4-0x315a5661]
   1400067ff:	(bad)  
   140006801:	mov    edi,0x90
   140006806:	add    BYTE PTR [rax],al
   140006808:	add    bl,dl
   14000680a:	xchg   ecx,eax
   14000680b:	pushf  
   14000680c:	sbb    DWORD PTR [rdi-0x566a6a23],0x78
   140006813:	(bad)  
   140006814:	jno    0x140006895
   140006816:	(bad)  [rdx+0x71]
   14000681c:	add    BYTE PTR [rax],al
   14000681e:	add    BYTE PTR [rax],al
   140006820:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140006821:	jg     0x14000689a
   140006823:	ja     0x14000689f
   140006825:	jp     0x1400068a6
   140006827:	mov    dl,BYTE PTR [rbp+rbx*4-0x131e2e5c]
   14000682e:	in     al,0xda
   140006830:	fst    st(3)
   140006832:	xchg   ebp,eax
   140006833:	add    BYTE PTR [rax],al
   140006835:	add    BYTE PTR [rax],al
   140006837:	add    BYTE PTR [rax],al
   140006839:	xlat   BYTE PTR ds:[rbx]
   14000683a:	xchg   ebp,eax
   14000683b:	pushf  
   14000683c:	xchg   ecx,eax
   14000683d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000683e:	int    0xa9
   140006840:	stos   BYTE PTR es:[rdi],al
   140006841:	pushf  
   140006842:	(bad)  
   140006844:	xchg   edx,eax
   140006845:	adc    ch,BYTE PTR [rdi+0x7a]
   140006848:	stc    
   140006849:	nop
   14000684a:	jne    0x14000684c
   14000684c:	add    BYTE PTR [rax],al
   14000684e:	lahf   
   14000684f:	mov    WORD PTR [rsi+0x78],?
   140006852:	js     0x1400068ce
   140006854:	jge    0x1400068d3
   140006856:	mov    cs,ebx
   140006858:	(bad)  
   14000685a:	(bad)  
   14000685b:	mov    ecx,0x1e2d3e62
   140006860:	cwde   
   140006861:	loope  0x1400067f3
   140006863:	fld    QWORD PTR [rax]
   140006865:	add    BYTE PTR [rax],al
   140006867:	add    BYTE PTR [rax],al
   140006869:	shl    DWORD PTR [rax-0x55586359],cl
   14000686f:	js     0x1400067f4
   140006871:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140006872:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140006873:	int    0xf4
   140006875:	stc    
   140006876:	jp     0x140006884
   140006878:	or     eax,0x90908377
   14000687d:	mov    WORD PTR [rax-0x5e717d81],es
   140006883:	lahf   
   140006884:	pushf  
   140006885:	mov    ebp,0x245b69b0
   14000688a:	sbb    ebx,DWORD PTR [rdx]
   14000688c:	sbb    bl,BYTE PTR [rdx+rbx*1]
   14000688f:	sbb    al,0x8b
   140006891:	loope  0x140006828
   140006893:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140006894:	add    BYTE PTR [rax],al
   140006896:	add    BYTE PTR [rax],al
   140006898:	add    dh,dl
   14000689a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000689b:	mov    edi,0x8ccdcd99
   1400068a0:	jg     0x140006920
   1400068a2:	jg     0x140006922
   1400068a4:	jle    0x140006925
   1400068a6:	jg     0x140006834
   1400068a8:	xchg   ebx,eax
   1400068a9:	xchg   esp,eax
   1400068aa:	popf   
   1400068ab:	movabs ds:0x4651ab9899a4cba2,al
   1400068b4:	and    DWORD PTR [rdx],ebx
   1400068b6:	sbb    bl,BYTE PTR [rdx]
   1400068b8:	sbb    ah,BYTE PTR [rcx]
   1400068ba:	and    esp,DWORD PTR [rbx]
   1400068bc:	and    al,0x23
   1400068be:	and    DWORD PTR [rdx],esp
   1400068c0:	stos   DWORD PTR es:[rdi],eax
   1400068c1:	in     al,dx
   1400068c2:	pushf  
   1400068c3:	xchg   ebp,eax
   1400068c4:	add    BYTE PTR [rax],al
   1400068c6:	add    BYTE PTR [rax],al
   1400068c8:	add    bl,dl
   1400068ca:	int    0xcd
   1400068cc:	xchg   ebp,eax
   1400068cd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400068ce:	test   eax,0x7a838a83
   1400068d3:	jle    0x14000694f
   1400068d5:	jb     0x140006863
   1400068d7:	movabs eax,ds:0x2644518598d3d2ce
   1400068e0:	adc    eax,0x15141414
   1400068e5:	(bad)  
   1400068e6:	and    esp,DWORD PTR [rip+0x25242523]        # 0x165248e0f
   1400068ec:	and    eax,0x69222525
   1400068f1:	in     al,dx
   1400068f2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400068f3:	xchg   ebp,eax
   1400068f4:	add    BYTE PTR [rax],al
   1400068f6:	add    BYTE PTR [rax],al
   1400068f8:	add    dh,dl
   1400068fa:	(bad)  
   1400068fb:	(bad)  
   1400068fc:	pushf  
   1400068fd:	stos   BYTE PTR es:[rdi],al
   1400068fe:	int    0x83
   140006900:	mov    bl,BYTE PTR [rdi-0x34347d81]
   140006906:	pushf  
   140006907:	test   BYTE PTR [rdx+0x44],cl
   14000690a:	es (bad) 
   14000690c:	add    al,BYTE PTR [rdx]
   14000690e:	add    al,BYTE PTR [rdx]
   140006910:	adc    al,0x15
   140006912:	sbb    bl,BYTE PTR [rdx]
   140006914:	(bad)  
   140006915:	and    al,0x2b
   140006917:	sub    ebp,DWORD PTR [rbx]
   140006919:	sub    edi,DWORD PTR [rax]
   14000691b:	cmp    BYTE PTR [rax],bh
   14000691d:	cmp    eax,0xec60333d
   140006922:	stos   BYTE PTR es:[rdi],al
   140006923:	nop
   140006924:	add    BYTE PTR [rax],al
   140006926:	add    BYTE PTR [rax],al
   140006928:	add    bl,dl
   14000692a:	(bad)  
   14000692c:	pushf  
   14000692d:	stos   BYTE PTR es:[rdi],al
   14000692e:	stos   BYTE PTR es:[rdi],al
   14000692f:	nop
   140006930:	nop
   140006931:	lahf   
   140006932:	popf   
   140006933:	jns    0x14000695e
   140006935:	es (bad) 
   140006937:	adc    al,0x2
   140006939:	add    al,BYTE PTR [rdx]
   14000693b:	add    al,BYTE PTR [rdx]
   14000693d:	(bad)  
   14000693e:	adc    eax,0x3041517
   140006943:	(bad)  
   140006944:	sbb    al,0x25
   140006946:	cmp    al,0x3c
   140006948:	cmp    al,0x3e
   14000694a:	ds ds ds (bad) 
   14000694e:	(bad)  
   14000694f:	cmp    DWORD PTR [rax-0x22],esp
   140006952:	(bad)  
   140006953:	nop
   140006954:	add    BYTE PTR [rax],al
   140006956:	add    BYTE PTR [rax],al
   140006958:	add    ah,dl
   14000695a:	(bad)  
   14000695b:	(bad)  
   14000695c:	lahf   
   14000695d:	stos   BYTE PTR es:[rdi],al
   14000695e:	int    0x90
   140006960:	nop
   140006961:	lahf   
   140006962:	movabs ds:0x1616161616020286,al
   14000696b:	(bad)  
   14000696c:	adc    al,0x14
   14000696e:	(bad)  
   14000696f:	(bad)  
   140006970:	add    eax,0x1c039092
   140006975:	cmp    al,0x56
   140006977:	push   rsi
   140006978:	rex
   140006979:	rex push rdi
   14000697b:	push   rdi
   14000697c:	push   rdi
   14000697d:	push   rdi
   14000697e:	pop    rdx
   14000697f:	(bad)  
   140006980:	pop    rdx
   140006981:	fstp   st(5)
   140006983:	mov    al,BYTE PTR [rax]
   140006985:	add    BYTE PTR [rax],al
   140006987:	add    BYTE PTR [rax],al
   140006989:	rcl    ebp,cl
   14000698b:	(bad)  
   14000698c:	lahf   
   14000698d:	stos   BYTE PTR es:[rdi],al
   14000698e:	int    0x94
   140006990:	xchg   ebp,eax
   140006991:	xchg   ebp,eax
   140006992:	int    0x93
   140006994:	(bad)  
   140006995:	sbb    DWORD PTR [rax],esp
   140006997:	sbb    BYTE PTR [rax],bl
   140006999:	(bad)  
   14000699a:	(bad)  
   14000699b:	(bad)  
   14000699c:	adc    al,0x17
   14000699e:	adc    eax,0xaaa99904
   1400069a3:	and    QWORD PTR [rax+0x59],r8
   1400069a7:	pop    rcx
   1400069a8:	pop    rdx
   1400069a9:	pop    rdx
   1400069aa:	pop    rsp
   1400069ab:	pop    rdx
   1400069ac:	pop    rbp
   1400069ad:	pop    rsp
   1400069ae:	pop    rbp
   1400069af:	pop    rax
   1400069b0:	pop    rax
   1400069b1:	fucom  st(0)
   1400069b3:	add    DWORD PTR [rax],0x0
   1400069b6:	add    BYTE PTR [rax],al
   1400069b8:	add    dh,dl
   1400069ba:	(bad)  
   1400069bb:	xlat   BYTE PTR ds:[rbx]
   1400069bc:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400069bd:	stos   BYTE PTR es:[rdi],al
   1400069be:	rcl    DWORD PTR [rbp-0x5d31606e],cl
   1400069c4:	(bad)  
   1400069c5:	sbb    DWORD PTR [rsi],esp
   1400069c7:	and    BYTE PTR [rax],ah
   1400069c9:	sbb    BYTE PTR [rax],bl
   1400069cb:	(bad)  
   1400069cc:	adc    eax,0xe29b2817
   1400069d1:	fxch   st(5)
   1400069d3:	fldenv [rdi]
   1400069d5:	pop    rcx
   1400069d6:	pop    rsp
   1400069d7:	pop    rsp
   1400069d8:	pop    rsi
   1400069d9:	pop    rsi
   1400069da:	pop    rsi
   1400069db:	pop    rsi
   1400069dc:	pop    rsi
   1400069dd:	pop    rsi
   1400069de:	movsxd ebx,DWORD PTR [rbp+0x5d]
   1400069e1:	(bad)  
   1400069e2:	in     eax,dx
   1400069e3:	nop
   1400069e4:	add    BYTE PTR [rax],al
   1400069e6:	add    BYTE PTR [rax],al
   1400069e8:	add    dh,dl
   1400069ea:	xlat   BYTE PTR ds:[rbx]
   1400069eb:	int    0x90
   1400069ed:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400069ee:	rcr    DWORD PTR [rbp+riz*4+0x29ccd3aa],cl
   1400069f5:	sbb    DWORD PTR [rdx],ebp
   1400069f7:	es es and BYTE PTR es:[rdi],dl
   1400069fc:	adc    al,0x5
   1400069fe:	int    0xf4
   140006a00:	out    0x88,al
   140006a02:	mov    esi,0x614896e6
   140006a07:	(bad)  
   140006a08:	(bad)  
   140006a09:	movsxd esp,DWORD PTR [rbx+0x63]
   140006a0c:	push   0x6a
   140006a0e:	imul   ebp,DWORD PTR [rbx+0x5d],0xffffffc1
   140006a12:	in     eax,dx
   140006a13:	xchg   ecx,eax
   140006a14:	(bad)  
   140006a15:	add    BYTE PTR [rax],al
   140006a17:	add    BYTE PTR [rax],al
   140006a19:	rcl    esp,cl
   140006a1b:	mov    edi,0xa9dda587
   140006a20:	test   eax,0x43d0d3aa
   140006a25:	sbb    DWORD PTR [rbx],edi
   140006a27:	sub    ch,BYTE PTR [rdx]
   140006a29:	sub    BYTE PTR [rax],ah
   140006a2b:	(bad)  
   140006a2c:	sub    ebp,ebx
   140006a2e:	cld    
   140006a2f:	hlt    
   140006a30:	and    QWORD PTR [r11-0x1a],rdx
   140006a34:	stc    
   140006a35:	push   rsp
   140006a36:	(bad)  
   140006a37:	ins    BYTE PTR es:[rdi],dx
   140006a38:	ins    BYTE PTR es:[rdi],dx
   140006a39:	ins    BYTE PTR es:[rdi],dx
   140006a3a:	ins    BYTE PTR es:[rdi],dx
   140006a3b:	ins    BYTE PTR es:[rdi],dx
   140006a3c:	ins    DWORD PTR es:[rdi],dx
   140006a3d:	ins    DWORD PTR es:[rdi],dx
   140006a3e:	ins    BYTE PTR es:[rdi],dx
   140006a3f:	outs   dx,BYTE PTR ds:[rsi]
   140006a40:	pop    rdi
   140006a41:	mov    ebx,0xa595ed
   140006a46:	add    BYTE PTR [rax],al
   140006a48:	add    bl,dl
   140006a4a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140006a4b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140006a4c:	sbb    DWORD PTR [rdi-0x32555523],0xffffffd6
   140006a53:	(bad)  
   140006a54:	sbb    QWORD PTR [r13+0x3b],r8
   140006a58:	cmp    edi,DWORD PTR [rbx]
   140006a5a:	(bad)  
   140006a5b:	(bad)  
   140006a5c:	mov    esi,0x1c50f1fc
   140006a61:	sbb    eax,0xe6f9c025
   140006a66:	push   rdx
   140006a67:	lods   eax,DWORD PTR ds:[rsi]
   140006a68:	lods   eax,DWORD PTR ds:[rsi]
   140006a69:	lods   eax,DWORD PTR ds:[rsi]
   140006a6a:	scas   al,BYTE PTR es:[rdi]
   140006a6b:	scas   al,BYTE PTR es:[rdi]
   140006a6c:	scas   al,BYTE PTR es:[rdi]
   140006a6d:	scas   al,BYTE PTR es:[rdi]
   140006a6e:	scas   al,BYTE PTR es:[rdi]
   140006a6f:	mov    ch,0x6b
   140006a71:	mov    cl,0xef
   140006a73:	test   eax,0x95
   140006a78:	add    dh,dl
   140006a7a:	movabs al,ds:0xd6d6d3d3dd9f8dbc
   140006a83:	fdiv   DWORD PTR [rax+0x18]
   140006a86:	rex.RXB
   140006a87:	rex.R
   140006a88:	rex.RB sub al,0x15
   140006a8b:	(bad)  
   140006a8c:	cmp    al,BYTE PTR [rbp+0x2d1d213a]
   140006a92:	sbb    eax,0x9bfcf348
   140006a97:	imul   ebp,DWORD PTR [rsi-0x4c4a5051],0x6eb5b5b5
   140006aa1:	scas   eax,DWORD PTR es:[rdi]
   140006aa2:	in     eax,dx
   140006aa3:	(bad)
   140006aa6:	add    BYTE PTR [rax],al
   140006aa8:	add    ah,dl
   140006aaa:	mov    DWORD PTR [rdi+rcx*4-0x44],esi
   140006aae:	fcompp 
   140006ab0:	rcr    ecx,cl
   140006ab2:	(bad)  
   140006ab4:	lea    ebx,[rdi]
   140006ab6:	rex.RXB
   140006ab7:	rex.RXB
   140006ab8:	rex.W and BYTE PTR [rip+0x1c1c1c17],dl        # 0x15c1c86d6
   140006abf:	sbb    eax,0x2d2d2d1d
   140006ac4:	mov    edx,0xb484fcf9
   140006ac9:	mov    ch,0xb5
   140006acb:	mov    ch,0xb5
   140006acd:	mov    ch,0xb5
   140006acf:	ret    
   140006ad0:	scas   al,BYTE PTR es:[rdi]
   140006ad1:	scas   eax,DWORD PTR es:[rdi]
   140006ad2:	out    dx,eax
   140006ad3:	rcl    DWORD PTR [rax+0x0],cl
   140006ad9:	add    BYTE PTR [rbp+0x66],ah
   140006adc:	jae    0x140006a9a
   140006ade:	in     al,0xd9
   140006ae0:	(bad)  
   140006ae2:	(bad)  
   140006ae4:	pushf  
   140006ae5:	sub    BYTE PTR [rax+0x4b],cl
   140006ae8:	rex.WXB (bad) 
   140006aea:	adc    eax,0x211c1c1c
   140006aef:	sbb    eax,0x332d2d2d
   140006af4:	imul   ebx,ebx,0xc368f4f9
   140006afa:	ret    
   140006afb:	ret    
   140006afc:	(bad)
   140006b00:	mov    ch,0xb3
   140006b02:	out    0xdd,al
   140006b04:	add    DWORD PTR [rax],0x0
   140006b07:	add    BYTE PTR [rax],al
   140006b09:	add    BYTE PTR [rsi+rax*1+0x11],ah
   140006b0d:	int    0xe3
   140006b0f:	(bad)  
   140006b10:	fstp   st(1)
   140006b12:	(bad)  
   140006b14:	stos   BYTE PTR es:[rdi],al
   140006b15:	sub    al,BYTE PTR [rdi+0x55]
   140006b18:	rex.RB adc eax,0x1c1c1c17
   140006b1e:	sbb    eax,0x2e322d2d
   140006b23:	ss mov ch,0xb0
   140006b26:	loop   0x140006b21
   140006b28:	int    0xac
   140006b2a:	(bad)  
   140006b2b:	(bad)  
   140006b2c:	(bad)  
   140006b2d:	leave  
   140006b2e:	(bad)  
   140006b2f:	retf   0xafc7
   140006b32:	lock fnstsw WORD PTR [rsi+0x0]
   140006b36:	add    BYTE PTR [rax],al
   140006b38:	add    BYTE PTR [rax],al
   140006b3a:	or     al,BYTE PTR [rcx]
   140006b3c:	bswap  ebp
   140006b3e:	in     eax,0xde
   140006b40:	(bad)  
   140006b41:	fstp   st(5)
   140006b43:	out    0xaa,al
   140006b45:	sub    cl,BYTE PTR [rbx+0x69]
   140006b48:	and    BYTE PTR [rdx],bl
   140006b4a:	sbb    al,0x1c
   140006b4c:	sbb    eax,0x32322d2d
   140006b51:	xor    al,0x30
   140006b53:	rex.B (bad) 
   140006b55:	leave  
   140006b56:	(bad)  
   140006b59:	xchg   edx,eax
   140006b5b:	retf   0xcaca
   140006b5e:	retf   0xcae7
   140006b61:	mov    bl,0xe3
   140006b63:	loop   0x140006ae8
   140006b65:	add    BYTE PTR [rax],al
   140006b67:	add    BYTE PTR [rax],al
   140006b69:	add    BYTE PTR [rax+rcx*1],cl
   140006b6c:	jno    0x140006b0d
   140006b6e:	lock (bad) 
   140006b70:	fstp   st(5)
   140006b72:	fucom  st(6)
   140006b74:	(bad)
   140006b77:	push   rbx
   140006b78:	sbb    al,0x1a
   140006b7a:	sbb    al,0x1d
   140006b7c:	sbb    eax,0x32322e2d
   140006b81:	xor    al,0x30
   140006b83:	pop    rdi
   140006b84:	out    0xe7,eax
   140006b86:	enter  0xd99b,0xe6
   140006b8a:	xchg   cl,cl
   140006b8c:	out    0xe9,eax
   140006b8e:	jmp    0x11ab8557c
   140006b93:	out    dx,eax
   140006b94:	adc    esi,0x0
   140006b97:	add    BYTE PTR [rax],al
   140006b99:	add    BYTE PTR [rdx+0x7e],bh
   140006b9c:	and    esi,0xfffffffc
   140006b9f:	cld    
   140006ba0:	lock out 0xdd,al
   140006ba3:	loop   0x140006b7d
   140006ba5:	rex.XB
   140006ba6:	rex.WXB
   140006ba7:	rex.RX adc eax,0x2d1d1c1c
   140006bad:	sub    eax,0x3032322e
   140006bb2:	xor    eax,0xe9e9ea6e
   140006bb7:	mov    ebx,0x86ddd3a7
   140006bbc:	jmp    0x12beb56ab
   140006bc1:	(bad)  
   140006bc2:	enter  0x90f3,0xaa
   140006bc6:	add    BYTE PTR [rax],al
   140006bc8:	add    BYTE PTR [rax],al
   140006bca:	add    al,dh
   140006bcc:	stos   BYTE PTR es:[rdi],al
   140006bcd:	fucomp st(7)
   140006bcf:	stc    
   140006bd0:	cld    
   140006bd1:	cld    
   140006bd2:	cld    
   140006bd3:	hlt    
   140006bd4:	fimul  WORD PTR [rsi+0x3b]
   140006bd7:	and    al,0x15
   140006bd9:	sbb    al,0x1d
   140006bdb:	sbb    eax,0x322e2d2d
   140006be0:	xor    al,0x34
   140006be2:	(bad)  
   140006be3:	ret    
   140006be4:	jmp    0x140006bd0
   140006be6:	(bad)  
   140006be7:	(bad)  
   140006be8:	mov    edx,0xbe9fd39c
   140006bed:	jmp    0x140006bda
   140006bef:	jmp    0x140006bdc
   140006bf1:	leave  
   140006bf2:	enter  0x95f7,0xa9
	...
   140006bfe:	(bad)  [rdx-0x3061d23]
   140006c04:	in     eax,0x84
   140006c06:	adc    eax,0x1d1c1c1a
   140006c0b:	sbb    eax,0x32322e2d
   140006c10:	xor    eax,0xf5e74134
   140006c15:	(bad)  
   140006c16:	(bad)  
   140006c17:	(bad)  
   140006c18:	(bad)  
   140006c19:	mov    edx,0xebe89ba7
   140006c1e:	jmp    0x140006c0b
   140006c20:	test   dl,0xc8
   140006c23:	stc    
   140006c24:	test   eax,0x92
	...
   140006c31:	(bad)  [rdx+0x28bddd6]
   140006c37:	sbb    bl,BYTE PTR [rsp+rbx*1]
   140006c3a:	sbb    eax,0x322e2e1d
   140006c3f:	xor    dh,BYTE PTR [rsi*1-0x150a14a1]
   140006c46:	cmc    
   140006c47:	jmp    0x140006c3e
   140006c49:	jmp    0x140006c36
   140006c4b:	cmc    
   140006c4c:	jmp    0x140006c44
   140006c4e:	div    dh
   140006c50:	cli    
   140006c51:	jmp    0x140006c1b
   140006c53:	sti    
   140006c54:	(bad)  
   140006c55:	nop
	...
   140006c62:	add    BYTE PTR [rax],al
   140006c64:	fcomp  DWORD PTR [rsi+rdx*1+0x1d1c1c15]
   140006c6b:	sub    eax,0x34322e2d
   140006c70:	xor    eax,0xf5f66e34
   140006c75:	cmc    
   140006c76:	cmc    
   140006c77:	cmc    
   140006c78:	div    dh
   140006c7a:	div    dh
   140006c7c:	cmc    
   140006c7d:	jmp    0x140006c6a
   140006c7f:	jmp    0x140006c6a
   140006c81:	(bad)  
   140006c82:	mov    dl,0xf9
   140006c84:	loop   0x140006d00
	...
   140006c92:	add    BYTE PTR [rax],al
   140006c94:	add    BYTE PTR [rcx+0x211a1a16],ch
   140006c9a:	sbb    eax,0x32312e1d
   140006c9f:	xor    al,0x35
   140006ca1:	(bad)  
   140006ca2:	(bad)  
   140006ca3:	cld    
   140006ca4:	cmc    
   140006ca5:	jmp    0x140006c91
   140006ca7:	jmp    0x107ca3793
   140006cac:	(bad)  
   140006cad:	mov    dh,0xb6
   140006caf:	ret    0xc8c8
   140006cb2:	enter  0xf0f9,0x7f
	...
   140006cc2:	add    BYTE PTR [rax],al
   140006cc4:	add    dh,cl
   140006cc6:	sub    DWORD PTR [rip+0x2d1d1d1d],edx        # 0x16d1d89e9
   140006ccc:	xor    ch,BYTE PTR [rsi]
   140006cce:	xor    BYTE PTR [rax],dh
   140006cd0:	(bad)  
   140006cd1:	xor    eax,0xb4afb66d
   140006cd6:	mov    ah,0xb9
   140006cd8:	mov    ebx,0xdac8c8c6
   140006cdd:	fcmovu st,st(3)
   140006cdf:	out    0xe6,al
   140006ce1:	out    0xf2,al
   140006ce3:	xrelease lock add BYTE PTR [rax],al
	...
   140006cf3:	add    BYTE PTR [rax],al
   140006cf5:	rol    DWORD PTR [rdx+0x1a],1
   140006cf8:	sbb    bl,BYTE PTR [rbx]
   140006cfa:	sbb    ebx,DWORD PTR [rbx]
   140006cfc:	sbb    eax,0x53593e25
   140006d01:	stos   DWORD PTR es:[rdi],eax
   140006d02:	mov    ebx,0xddddd5c1
   140006d07:	fstp   st(5)
   140006d09:	loop   0x140006cec
   140006d0b:	in     eax,0xe6
   140006d0d:	lock xrelease add BYTE PTR [rax],al
	...
   140006d25:	(bad)  
   140006d26:	rex.WRXB (bad) 
   140006d28:	rex.XB push r12
   140006d2a:	mov    BYTE PTR [rcx-0x21212e59],dl
   140006d30:	loope  0x140006d17
   140006d32:	fsubrp st(2),st
   140006d34:	out    0xe6,al
   140006d36:	lock add BYTE PTR [rax],al
	...
   140006d55:	stos   BYTE PTR es:[rdi],al
   140006d56:	(bad)  
   140006d57:	rcr    dh,cl
   140006d59:	(bad)  
   140006d5b:	in     al,0xe4
   140006d5d:	out    0xef,al
	...
   140006d83:	add    BYTE PTR [rax],al
   140006d85:	add    dh,ah
	...
   140006e67:	add    bh,bh
   140006e69:	(bad)  
   140006e6a:	(bad)  
   140006e6b:	(bad)  
   140006e6c:	(bad)  
   140006e6d:	inc    DWORD PTR [rax]
   140006e6f:	add    bh,bh
   140006e71:	(bad)  
   140006e72:	(bad)  
   140006e73:	(bad)  
   140006e74:	(bad)  
   140006e75:	inc    DWORD PTR [rax]
   140006e77:	add    bh,bh
   140006e79:	(bad)  
   140006e7a:	(bad)  
   140006e7b:	(bad)  
   140006e7c:	(bad)  
   140006e7d:	inc    DWORD PTR [rax]
   140006e7f:	add    bh,bh
   140006e81:	(bad)  
   140006e82:	inc    DWORD PTR [rax+0xffff]
   140006e88:	(bad)  
   140006e89:	(bad)  
   140006e8a:	cld    
   140006e8b:	add    BYTE PTR [rdi],cl
   140006e8d:	inc    DWORD PTR [rax]
   140006e8f:	add    bh,bh
   140006e91:	push   rax
   140006e93:	add    BYTE PTR [rbx],al
   140006e95:	inc    DWORD PTR [rax]
   140006e97:	add    bh,bh
   140006e99:	inc    eax
   140006e9b:	add    BYTE PTR [rcx],al
   140006e9d:	inc    DWORD PTR [rax]
   140006e9f:	add    bh,bh
   140006ea1:	inc    DWORD PTR [rax+0xff0000]
   140006ea7:	add    bh,bh
   140006ea9:	inc    DWORD PTR [rax+0xff0000]
   140006eaf:	add    bh,bh
   140006eb1:	inc    DWORD PTR [rax+0xff0000]
   140006eb7:	add    bh,bh
   140006eb9:	inc    DWORD PTR [rax+0xff0000]
   140006ebf:	add    bl,ah
   140006ec1:	inc    eax
   140006ec3:	add    BYTE PTR [rax],al
   140006ec5:	lahf   
   140006ec6:	add    BYTE PTR [rax],al
   140006ec8:	rol    BYTE PTR [rdi],0xe0
   140006ecb:	add    BYTE PTR [rax],al
   140006ecd:	(bad)  
   140006ece:	add    BYTE PTR [rax],al
   140006ed0:	add    BYTE PTR [rcx],0xf8
   140006ed3:	add    BYTE PTR [rax],al
   140006ed5:	(bad)  
   140006ed6:	add    BYTE PTR [rax],al
   140006ed8:	add    BYTE PTR [rax],0x7f
   140006edb:	add    BYTE PTR [rax],al
   140006edd:	(bad)  
   140006ede:	add    BYTE PTR [rax],al
   140006ee0:	add    BYTE PTR [rax],0x1c
   140006ee3:	add    BYTE PTR [rax],al
   140006ee5:	sldt   WORD PTR [rax]
   140006ee8:	add    BYTE PTR [rax],0x0
   140006eeb:	add    BYTE PTR [rax],al
   140006eed:	sldt   WORD PTR [rax]
   140006ef0:	add    BYTE PTR [rax],0x0
   140006ef3:	add    BYTE PTR [rax],al
   140006ef5:	sldt   WORD PTR [rax]
   140006ef8:	add    BYTE PTR [rax],0x0
   140006efb:	add    BYTE PTR [rax],al
   140006efd:	sldt   WORD PTR [rax]
   140006f00:	add    BYTE PTR [rax],0x0
   140006f03:	add    BYTE PTR [rax],al
   140006f05:	sldt   WORD PTR [rax]
   140006f08:	add    BYTE PTR [rax],0x0
   140006f0b:	add    BYTE PTR [rax],al
   140006f0d:	sldt   WORD PTR [rax]
   140006f10:	add    BYTE PTR [rax],0x0
   140006f13:	add    BYTE PTR [rax],al
   140006f15:	sldt   WORD PTR [rax]
   140006f18:	add    BYTE PTR [rax],0x0
   140006f1b:	add    BYTE PTR [rax],al
   140006f1d:	sldt   WORD PTR [rax]
   140006f20:	add    BYTE PTR [rax],0x0
   140006f23:	add    BYTE PTR [rax],al
   140006f25:	sldt   WORD PTR [rax]
   140006f28:	add    BYTE PTR [rax],0x0
   140006f2b:	add    BYTE PTR [rax],al
   140006f2d:	(bad)  
   140006f2e:	add    BYTE PTR [rax],al
   140006f30:	add    BYTE PTR [rax],0x0
   140006f33:	add    BYTE PTR [rax],al
   140006f35:	(bad)  
   140006f36:	add    BYTE PTR [rax],al
   140006f38:	add    BYTE PTR [rax],0x0
   140006f3b:	add    BYTE PTR [rax],al
   140006f3d:	(bad)  
   140006f3e:	add    BYTE PTR [rax],al
   140006f40:	add    BYTE PTR [rax],0x0
   140006f43:	add    BYTE PTR [rax],al
   140006f45:	(bad)  
   140006f46:	add    BYTE PTR [rax],al
   140006f48:	add    BYTE PTR [rax],0x0
   140006f4b:	add    BYTE PTR [rax],al
   140006f4d:	(bad)  
   140006f4e:	add    BYTE PTR [rax],al
   140006f50:	rol    BYTE PTR [rax],0x0
   140006f53:	add    BYTE PTR [rax],al
   140006f55:	(bad)  
   140006f56:	add    BYTE PTR [rax],al
   140006f58:	rol    BYTE PTR [rax],0x0
   140006f5b:	add    BYTE PTR [rax],al
   140006f5d:	(bad)  
   140006f5e:	add    BYTE PTR [rax],al
   140006f60:	rol    BYTE PTR [rax],0x0
   140006f63:	add    BYTE PTR [rax],al
   140006f65:	(bad)  
   140006f66:	add    BYTE PTR [rax],al
   140006f68:	rol    BYTE PTR [rax],0x0
   140006f6b:	add    BYTE PTR [rax],al
   140006f6d:	add    eax,DWORD PTR [rax]
   140006f6f:	add    al,al
   140006f71:	add    BYTE PTR [rax],al
   140006f73:	add    BYTE PTR [rax],al
   140006f75:	add    eax,DWORD PTR [rax]
   140006f77:	add    al,ah
   140006f79:	add    BYTE PTR [rax],al
   140006f7b:	add    BYTE PTR [rax],al
   140006f7d:	add    eax,DWORD PTR [rax]
   140006f7f:	add    ah,bh
   140006f81:	add    BYTE PTR [rax],al
   140006f83:	add    BYTE PTR [rax],al
   140006f85:	add    eax,DWORD PTR [rax]
   140006f87:	add    bh,bh
   140006f89:	add    BYTE PTR [rax],0x0
   140006f8c:	add    BYTE PTR [rbx],al
   140006f8e:	add    BYTE PTR [rax],al
   140006f90:	push   rax
   140006f92:	add    BYTE PTR [rax],al
   140006f94:	add    BYTE PTR [rbx],al
   140006f96:	add    BYTE PTR [rax],al
   140006f98:	(bad)  
   140006f99:	clc    
   140006f9a:	add    BYTE PTR [rax],al
   140006f9c:	add    BYTE PTR [rbx],al
   140006f9e:	add    BYTE PTR [rax],al
   140006fa0:	(bad)  
   140006fa1:	clc    
   140006fa2:	add    BYTE PTR [rax],al
   140006fa4:	add    BYTE PTR [rdi],al
   140006fa6:	add    BYTE PTR [rax],al
   140006fa8:	(bad)  
   140006fa9:	clc    
   140006faa:	add    BYTE PTR [rax],al
   140006fac:	add    edi,edi
   140006fae:	add    BYTE PTR [rax],al
   140006fb0:	(bad)  
   140006fb1:	clc    
   140006fb2:	add    BYTE PTR [rcx],al
   140006fb4:	(bad)  
   140006fb5:	inc    DWORD PTR [rax]
   140006fb7:	add    bh,bh
   140006fb9:	clc    
   140006fba:	add    edi,edi
   140006fbc:	(bad)  
   140006fbd:	inc    DWORD PTR [rax]
   140006fbf:	add    bh,bh
   140006fc1:	std    
   140006fc2:	(bad)  
   140006fc3:	(bad)  
   140006fc4:	(bad)  
   140006fc5:	inc    DWORD PTR [rax]
   140006fc7:	add    bh,bh
   140006fc9:	(bad)  
   140006fca:	(bad)  
   140006fcb:	(bad)  
   140006fcc:	(bad)  
   140006fcd:	inc    DWORD PTR [rax]
   140006fcf:	add    bh,bh
   140006fd1:	(bad)  
   140006fd2:	(bad)  
   140006fd3:	(bad)  
   140006fd4:	(bad)  
   140006fd5:	inc    DWORD PTR [rax]
   140006fd7:	add    bh,bh
   140006fd9:	(bad)  
   140006fda:	(bad)  
   140006fdb:	(bad)  
   140006fdc:	(bad)  
   140006fdd:	inc    DWORD PTR [rax]
   140006fdf:	add    bh,bh
   140006fe1:	(bad)  
   140006fe2:	(bad)  
   140006fe3:	(bad)  
   140006fe4:	(bad)  
   140006fe5:	inc    DWORD PTR [rax]
   140006fe7:	add    BYTE PTR [rax],ch
   140006fe9:	add    BYTE PTR [rax],al
   140006feb:	add    BYTE PTR [rax],ah
   140006fed:	add    BYTE PTR [rax],al
   140006fef:	add    BYTE PTR [rax+0x0],al
   140006ff2:	add    BYTE PTR [rax],al
   140006ff4:	add    DWORD PTR [rax],eax
   140006ff6:	or     BYTE PTR [rax],al
   140006ff8:	add    BYTE PTR [rax],al
   140006ffa:	add    BYTE PTR [rax],al
   140006ffc:	add    BYTE PTR [rax+rax*1],al
	...
   140007007:	add    BYTE PTR [rax],al
   140007009:	add    DWORD PTR [rax],eax
   14000700b:	add    BYTE PTR [rax],al
   14000700d:	add    DWORD PTR [rax],eax
   14000700f:	add    BYTE PTR [rax],al
   140007011:	add    BYTE PTR [rax],al
   140007013:	add    BYTE PTR [rax+rax*1+0x0],dh
   140007017:	add    BYTE PTR [rax+rax*1+0x0],bh
   14000701b:	add    BYTE PTR [rdi+0x1d],dh
   14000701e:	(bad)  
   14000701f:	add    BYTE PTR [rdi+0x22],dh
   140007022:	sbb    DWORD PTR [rax],eax
   140007024:	jns    0x14000704a
   140007026:	sbb    al,BYTE PTR [rax]
   140007028:	rex.RXB
   140007029:	es sub eax,0x222b6f00
   14000702f:	add    BYTE PTR [rdi+rbp*1+0x2a],bh
   140007033:	add    BYTE PTR [rax],al
   140007035:	jnp    0x140007070
   140007037:	add    BYTE PTR [rcx+0x49],cl
   14000703a:	rex.WB add BYTE PTR [r11+0x52],dl
   14000703e:	push   rdx
   14000703f:	add    BYTE PTR [rdx+0x5f],bh
   140007042:	add    BYTE PTR [edi+0x66],ah
   140007046:	data16 add BYTE PTR [rcx+0x69],ch
   14000704a:	imul   eax,DWORD PTR [rax],0x697862
   140007050:	je     0x1400070c5
   140007052:	je     0x140007054
   140007054:	jp     0x1400070ca
   140007056:	ja     0x140007058
   140007058:	jns    0x1400070d3
   14000705a:	jnp    0x14000705c
   14000705c:	add    DWORD PTR [rax],0x0
   14000705f:	add    BYTE PTR [rbx-0x74000000],cl
   140007065:	or     al,0x5
   140007067:	add    BYTE PTR [rax-0x64fffefe],dl
   14000706d:	add    DWORD PTR [rax],eax
   14000706f:	add    BYTE PTR [rcx+rcx*1+0x148b0000],bl
   140007076:	or     DWORD PTR [rax],eax
   140007078:	nop
   140007079:	adc    DWORD PTR [rbx],eax
   14000707b:	add    BYTE PTR [rcx-0x71fffff0],bl
   140007081:	adc    dl,BYTE PTR [rbx]
   140007083:	add    BYTE PTR [rsi-0x6affeee6],cl
   140007089:	sbb    DWORD PTR [rdx],edx
   14000708b:	add    BYTE PTR [rcx-0x51000000],ah
   140007091:	add    eax,0xba20000
   140007096:	add    BYTE PTR [rax],al
   140007098:	stos   DWORD PTR es:[rdi],eax
   140007099:	or     eax,DWORD PTR [rax]
   14000709b:	add    BYTE PTR [rsi-0x5afffef6],dh
   1400070a1:	adc    DWORD PTR [rax],eax
   1400070a3:	add    BYTE PTR [rdx-0x52ffffeb],ch
   1400070a9:	sbb    BYTE PTR [rcx],al
   1400070ab:	add    BYTE PTR [rbx-0x4afff5e3],ch
   1400070b1:	(bad)  
   1400070b2:	add    BYTE PTR [rax],al
   1400070b4:	mov    ch,0x19
   1400070b6:	add    BYTE PTR [rax],al
   1400070b8:	mov    ebp,0xb800001a
   1400070bd:	(bad)  
   1400070be:	or     eax,DWORD PTR [rax]
   1400070c0:	mov    ch,0x1e
   1400070c2:	or     eax,DWORD PTR [rax]
   1400070c4:	(bad)  
   1400070c5:	and    DWORD PTR [rdx],ebx
   1400070c7:	add    BYTE PTR [rdx-0x5dffe2d8],dl
   1400070cd:	sub    DWORD PTR [rdi],edx
   1400070cf:	add    BYTE PTR [rdx-0x42ffe7d4],dh
   1400070d5:	sub    al,0x1c
   1400070d7:	add    BYTE PTR [rdi-0x78ffe2cf],ch
   1400070dd:	sub    ah,BYTE PTR [rax+rax*1]
   1400070e0:	xchg   ebp,eax
   1400070e1:	sub    esp,DWORD PTR [rax+rax*1]
   1400070e4:	xchg   esp,eax
   1400070e5:	xor    ch,BYTE PTR [rcx]
   1400070e7:	add    BYTE PTR [rbx-0x67ffcecc],dl
   1400070ed:	xor    eax,0x3a9c0033
   1400070f2:	xor    al,0x0
   1400070f4:	movabs ds:0xb7002336ad00202b,al
   1400070fd:	cmp    eax,0x3dbd002b
   140007102:	sub    eax,DWORD PTR [rax]
   140007104:	stos   DWORD PTR es:[rdi],eax
   140007105:	xor    eax,0xac60033
   14000710a:	add    BYTE PTR [rax],al
   14000710c:	(bad)  
   14000710d:	or     al,BYTE PTR [rax]
   14000710f:	add    ch,al
   140007111:	sbb    al,0x1
   140007113:	add    cl,ch
   140007115:	(bad)  
   140007116:	add    BYTE PTR [rax],al
   140007118:	lock (bad) 
   14000711a:	add    BYTE PTR [rax],al
   14000711c:	jrcxz  0x140007135
   14000711e:	add    BYTE PTR [rax],al
   140007120:	iret   
   140007121:	and    BYTE PTR [rax],al
   140007123:	add    bh,dl
   140007125:	and    eax,DWORD PTR [rax]
   140007127:	add    al,cl
   140007129:	sub    DWORD PTR [rax],edx
   14000712b:	add    bl,ah
   14000712d:	and    BYTE PTR [rax],al
   14000712f:	add    bh,dh
   140007131:	sub    DWORD PTR [rdx],eax
   140007133:	add    BYTE PTR [rbp-0x3bffc2be],dl
   140007139:	rex.X sub al,0x0
   14000713c:	(bad)  
   14000713d:	rex.R sub eax,0x394ac800
   140007143:	add    cl,dl
   140007145:	push   rdx
   140007146:	ds add ah,dh
   140007149:	rex.WX sub BYTE PTR [rax],al
   14000714c:	nop
   14000714d:	rex.XB
   14000714e:	add    BYTE PTR [rbx-0x70ffbab2],r10b
   140007155:	pop    rbp
   140007156:	pop    rax
   140007157:	add    BYTE PTR [rbx-0x5affaca7],bl
   14000715d:	rex.WB
   14000715e:	rex.X add BYTE PTR [rcx-0x4fffb3ad],bpl
   140007165:	push   rdx
   140007166:	rex.WB add BYTE PTR [r10-0x4bffadb0],spl
   14000716d:	pop    rbp
   14000716e:	pop    rbp
   14000716f:	add    BYTE PTR [rbp-0x4affa69f],dl
   140007175:	(bad)  
   140007176:	push   rbp
   140007177:	add    BYTE PTR [rsi-0x65ff918e],bl
   14000717d:	jbe    0x1400071f8
   14000717f:	add    BYTE PTR [rbp-0x41ff9d99],dh
   140007185:	jo     0x1400071ef
   140007187:	add    BYTE PTR [rdi-0x4fff8a83],ah
   14000718d:	je     0x140007201
   14000718f:	add    BYTE PTR [rbx-0x2aff8a83],bh
   140007195:	push   rsi
   140007196:	rex.XB add r14b,spl
   140007199:	pop    rdi
   14000719a:	rex.RXB add r15b,r10b
   14000719d:	(bad)  
   14000719e:	rex.WRX add bpl,r8b
   1400071a1:	imul   ebx,DWORD PTR [rcx+0x0],0x5165d5
   1400071a8:	loop   0x140007212
   1400071aa:	push   rbx
   1400071ab:	add    bl,ch
   1400071ad:	jae    0x14000720b
   1400071af:	add    bl,bh
   1400071b1:	ja     0x140007210
   1400071b3:	add    ah,cl
   1400071b5:	je     0x14000721e
   1400071b7:	add    cl,bl
   1400071b9:	js     0x140007223
   1400071bb:	add    cl,dl
   1400071bd:	jl     0x140007239
   1400071bf:	add    ah,ah
   1400071c1:	ja     0x140007227
   1400071c3:	add    ah,dh
   1400071c5:	js     0x14000722a
   1400071c7:	add    bl,cl
   1400071c9:	mov    edi,DWORD PTR [rdi+0x0]
   1400071cc:	(bad)  
   1400071cd:	xchg   DWORD PTR [rsi+0x0],esi
   1400071d0:	cmc    
   1400071d1:	mov    WORD PTR [rdi+0x0],?
   1400071d4:	(bad)  
   1400071d5:	jns    0x140007157
   1400071d7:	add    BYTE PTR [rdi-0x74],bh
   1400071da:	mov    es,WORD PTR [rax]
   1400071dc:	jg     0x140007172
   1400071de:	mov    al,BYTE PTR [rax]
   1400071e0:	adc    eax,0x4b0085f2
   1400071e5:	(bad)  
   1400071e6:	mov    es,WORD PTR [rax]
   1400071e8:	(bad)  
   1400071e9:	(bad)  
   1400071ea:	add    DWORD PTR [rax],0xffffff89
   1400071ed:	xchg   DWORD PTR [rdi-0x71727200],eax
   1400071f3:	add    BYTE PTR [rcx-0x75ff777b],bl
   1400071f9:	(bad)  
   1400071fa:	xchg   esp,eax
   1400071fb:	add    BYTE PTR [rcx-0x63ff6d72],dl
   140007201:	(bad)  
   140007202:	xchg   edi,eax
   140007203:	add    BYTE PTR [rax-0x77ff6c63],cl
   140007209:	xchg   ecx,eax
   14000720a:	cwde   
   14000720b:	add    BYTE PTR [rbx+rdx*4-0x6b64ff6c],dl
   140007212:	xchg   ebp,eax
   140007213:	add    BYTE PTR [rcx-0x69ff6a65],dl
   140007219:	cdq    
   14000721a:	(bad)  
   14000721b:	add    BYTE PTR [rbx+rbx*4-0x7358ff65],bl
   140007222:	xchg   BYTE PTR [rax],al
   140007224:	mov    esp,0xad00848a
   140007229:	xchg   ecx,eax
   14000722a:	lea    eax,[rax]
   14000722c:	mov    ch,0x91
   14000722e:	mov    eax,DWORD PTR [rax]
   140007230:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140007231:	popf   
   140007232:	pushf  
   140007233:	add    BYTE PTR [rdi+rbx*4-0x5c52ff62],bh
   14000723a:	lahf   
   14000723b:	add    BYTE PTR [rbp-0x73ff695f],bh
   140007241:	pushf  
   140007242:	movabs ds:0xa09e9c00a19d9500,eax
   14000724b:	add    BYTE PTR [rsi-0x68ff514c],dl
   140007251:	scas   eax,DWORD PTR es:[rdi]
   140007252:	mov    bh,0x0
   140007254:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140007255:	movabs ds:0xa7a800a7a6a800a3,eax
   14000725e:	lods   al,BYTE PTR ds:[rsi]
   14000725f:	add    BYTE PTR [rdx+rbp*4-0x5352ff55],ah
   140007266:	lods   al,BYTE PTR ds:[rsi]
   140007267:	add    BYTE PTR [rcx-0x45ff5a59],dh
   14000726d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000726e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000726f:	add    BYTE PTR [rcx-0x45ff5353],dh
   140007275:	lods   eax,DWORD PTR ds:[rsi]
   140007276:	stos   DWORD PTR es:[rdi],eax
   140007277:	add    BYTE PTR [rsi-0x46ff5150],ch
   14000727d:	mov    al,0xae
   14000727f:	add    BYTE PTR [rcx-0x58ff4f51],dh
   140007285:	mov    ch,0xb6
   140007287:	add    BYTE PTR [rdx-0x52ff4b4f],ch
   14000728d:	mov    ebp,0xb3b400be
   140007292:	mov    bl,0x0
   140007294:	mov    ebx,0xb600b4b7
   140007299:	mov    edx,0xb6b000b7
   14000729e:	mov    edx,0xb9b5ba00
   1400072a3:	add    BYTE PTR [rcx-0x43ff4346],dh
   1400072a9:	mov    esp,0x89c700bc
   1400072ae:	add    BYTE PTR [rax],0xc8
   1400072b1:	xchg   esi,eax
   1400072b2:	mov    es,WORD PTR [rax]
   1400072b4:	loop   0x140007245
   1400072b6:	(bad)  
   1400072b7:	add    dh,ch
   1400072b9:	cwde   
   1400072ba:	xchg   DWORD PTR [rax],eax
   1400072bc:	neg    BYTE PTR [rbx-0x5606ff77]
   1400072c2:	cdq    
   1400072c3:	add    ch,bh
   1400072c5:	mov    ah,0x9c
   1400072c7:	add    ah,al
   1400072c9:	scas   al,BYTE PTR es:[rdi]
   1400072ca:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400072cb:	add    bh,al
   1400072cd:	lods   al,BYTE PTR ds:[rsi]
   1400072ce:	stos   BYTE PTR es:[rdi],al
   1400072cf:	add    ch,dl
   1400072d1:	lods   eax,DWORD PTR ds:[rsi]
   1400072d2:	movabs ds:0xa7b1d400abb3c400,eax
   1400072db:	add    al,dl
   1400072dd:	mov    bl,0xad
   1400072df:	add    ch,al
   1400072e1:	mov    bh,0xb5
   1400072e3:	add    bl,cl
   1400072e5:	mov    esp,0xb4cc00b6
   1400072ea:	mov    esi,0xbbbac000
   1400072ef:	add    al,cl
   1400072f1:	mov    ebp,0xb7e300bc
   1400072f6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400072f7:	add    dl,bh
   1400072f9:	mov    eax,0xbfed00a8
   1400072fe:	mov    bh,0x0
   140007300:	test   edx,0xc4e200ac
   140007306:	mov    esp,0xb5c7fb00
   14000730b:	add    BYTE PTR [rsi-0x20ff3b41],dh
   140007311:	test   al,0xc4
   140007313:	add    BYTE PTR [rbp-0x4eff3237],ch
   140007319:	ret    0xc7
   14000731c:	mov    esi,0xb700c0c0
   140007321:	(bad)  
   140007322:	retf   
   140007323:	add    BYTE PTR [rbp-0x46ff373a],bh
   140007329:	retf   0xcc
   14000732c:	mov    dh,0xcc
   14000732e:	rol    BYTE PTR [rax],cl
   140007330:	mov    edx,0xbe00d2ce
   140007335:	rcl    bl,1
   140007337:	add    BYTE PTR [rdx-0x43ff272f],bh
   14000733d:	loopne 0x140007324
   14000733f:	add    ah,al
   140007341:	(bad)  
   140007342:	(bad)  
   140007343:	add    dl,cl
   140007345:	(bad)  
   140007346:	(bad)
   140007349:	(bad)  
   14000734a:	leave  
   14000734b:	add    ch,al
   14000734d:	retf   
   14000734e:	retf   0xcb00
   140007351:	int3   
   140007352:	int3   
   140007353:	add    ch,dl
   140007355:	mov    bl,0x0
   140007358:	ror    esp,cl
   14000735a:	int3   
   14000735b:	add    ch,cl
   14000735d:	ror    dh,1
   14000735f:	add    bl,al
   140007361:	iret   
   140007362:	rol    BYTE PTR [rax],cl
   140007364:	fadd   st,st(4)
   140007366:	rol    BYTE PTR [rax],1
   140007368:	ret    0xd5d1
   14000736b:	add    cl,cl
   14000736d:	rcl    bl,1
   14000736f:	add    dl,al
   140007371:	(bad)  
   140007372:	fild   DWORD PTR [rax]
   140007374:	retf   
   140007375:	xlat   BYTE PTR ds:[rbx]
   140007376:	fild   DWORD PTR [rax]
   140007378:	ret    
   140007379:	(bad)  
   14000737b:	add    ch,cl
   14000737d:	(bad)  
   14000737f:	add    bl,dl
   140007381:	rcl    ebx,cl
   140007383:	add    dl,bl
   140007385:	(bad)  
   140007386:	(bad)  
   140007387:	add    dh,bl
   140007389:	(bad)  
   14000738a:	fadd   DWORD PTR [rax]
   14000738c:	xlat   BYTE PTR ds:[rbx]
   14000738d:	fcmovu st,st(1)
   14000738f:	add    bl,bl
   140007391:	(bad)  
   140007393:	add    bl,ah
   140007395:	int3   
   140007396:	(bad)  
   140007397:	add    ah,bh
   140007399:	fmul   st,st(1)
   14000739b:	add    bh,ah
   14000739d:	fstp   st(0)
   14000739f:	add    dh,bh
   1400073a1:	fst    st(3)
   1400073a3:	add    dh,ch
   1400073a5:	loop   0x140007381
   1400073a7:	add    dh,bh
   1400073a9:	jrcxz  0x140007382
   1400073ab:	add    cl,dl
   1400073ad:	fsubrp st(1),st
   1400073af:	add    bl,al
   1400073b1:	loopne 0x140007397
   1400073b3:	add    bl,cl
   1400073b5:	in     al,0xe5
   1400073b7:	add    dh,al
   1400073b9:	out    0xea,al
   1400073bb:	add    dl,cl
   1400073bd:	out    0xeb,al
   1400073bf:	add    dh,al
   1400073c1:	jmp    0x129cf74b3
   1400073c6:	in     al,dx
   1400073c7:	add    cl,dl
   1400073c9:	loope  0x1400073af
   1400073cb:	add    dl,bl
   1400073cd:	in     al,0xe6
   1400073cf:	add    bl,bl
   1400073d1:	in     eax,0xe8
   1400073d3:	add    ah,bl
   1400073d5:	in     al,dx
   1400073d6:	in     eax,dx
   1400073d7:	add    ah,al
   1400073d9:	jmp    0x1400073cd
   1400073db:	add    ah,dl
   1400073dd:	out    dx,al
   1400073de:	hlt    
   1400073df:	add    ah,bl
   1400073e1:	sti    
   1400073e2:	std    
   1400073e3:	add    cl,ah
   1400073e5:	loope  0x1400073c8
   1400073e7:	add    cl,ch
   1400073e9:	in     eax,0xe4
   1400073eb:	add    al,ah
   1400073ed:	call   0x12bec74dc
   1400073f2:	(bad)  
   1400073f3:	add    cl,bh
   1400073f5:	jmp    0x131ff74df
   1400073fa:	in     eax,dx
   1400073fb:	add    ch,dh
   1400073fd:	div    ch
   1400073ff:	add    bh,bh
   140007401:	clc    
   140007402:	test   BYTE PTR [rax],0xf5
   140007405:	idiv   cl
   140007407:	add    dh,bh
   140007409:	(bad)  
   14000740a:	inc    BYTE PTR [rax]
   14000740c:	(bad)  
   14000740d:	(bad)  
   14000740e:	inc    DWORD PTR [rax]
	...
   140007460:	add    ah,bl
   140007462:	(bad)  
   140007464:	iret   
   140007465:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
	...
   14000747e:	add    bh,cl
   140007480:	fnstsw ax
   140007482:	cmc    
   140007483:	loopne 0x140007464
   140007485:	loopne 0x140007454
   140007487:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
	...
   14000749c:	add    BYTE PTR [rdx-0xa1f2120],ah
   1400074a2:	cmc    
   1400074a3:	rcl    ebx,cl
   1400074a5:	clc    
   1400074a6:	iret   
   1400074a7:	rcr    esp,cl
   1400074a9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
	...
   1400074ba:	add    BYTE PTR [rax],al
   1400074bc:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400074bd:	fmul   st(5),st
   1400074bf:	(bad)  
   1400074c0:	fdivr  st(5),st
   1400074c2:	cmc    
   1400074c3:	(bad)  
   1400074c5:	loopne 0x14000747e
   1400074c7:	int    0xa2
   1400074c9:	int    0x9a
	...
   1400074db:	add    BYTE PTR [rsi-0x2332595e],ah
   1400074e1:	loopne 0x1400074c3
   1400074e3:	ror    ebp,cl
   1400074e5:	iret   
   1400074e6:	int    0xa6
   1400074e8:	cmp    DWORD PTR [rax-0x31],0x0
	...
   1400074fc:	iret   
   1400074fd:	rol    ebx,cl
   1400074ff:	ret    
   140007500:	int    0xd3
   140007502:	(bad)  
   140007504:	int    0xc3
   140007506:	xchg   ecx,eax
   140007507:	jbe    0x14000757f
   140007509:	add    DWORD PTR [rbx+0x0],0x0
   140007510:	add    BYTE PTR [rax],al
   140007512:	adc    dh,BYTE PTR [rdi+0x7f]
	...
   14000751d:	movabs ds:0xe7683989ca4cfd3,al
   140007526:	or     ecx,DWORD PTR [rip+0xffffffff9c95a27f]        # 0xdc9617ab
   14000752c:	int    0x0
   14000752e:	add    BYTE PTR [rax],al
   140007530:	add    BYTE PTR [rbx-0x7c1f5d7d],al
   140007536:	or     cl,BYTE PTR [rsi]
   140007538:	xchg   ecx,eax
   140007539:	add    DWORD PTR [rax],0x0
   14000753c:	add    BYTE PTR [rax],al
   14000753e:	add    BYTE PTR [rax+0x10108391],al
   140007544:	adc    BYTE PTR [rsi-0x72],dh
   140007547:	(bad)  
   140007548:	(bad)  
   140007549:	fsubr  st,st(5)
   14000754b:	out    dx,eax
   14000754c:	fcom   QWORD PTR [rbp+0x7f000000]
   140007552:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140007553:	js     0x1400074ea
   140007555:	fmul   st(5),st
   140007557:	(bad)  
   140007558:	jbe    0x1400075d9
   14000755a:	xchg   ebp,eax
   14000755b:	jg     0x14000755d
   14000755d:	add    BYTE PTR [rax],al
   14000755f:	add    BYTE PTR [rbp-0x6f738186],dl
   140007565:	fsubr  st,st(0)
   140007567:	out    dx,al
   140007568:	fdiv   QWORD PTR [rdx-0x3c3a4a95]
   14000756e:	add    BYTE PTR [rax],al
   140007570:	add    BYTE PTR [rax-0x6a6a775a],al
   140007576:	xchg   ebp,eax
   140007577:	iret   
   140007578:	loopne 0x1400074fd
   14000757a:	or     eax,0xc28d1076
   14000757f:	mov    ecx,0xafb4c5c1
   140007585:	test   al,0x64
   140007587:	xor    DWORD PTR [rax],esp
   140007589:	(bad)  
   14000758a:	(bad)  
   14000758b:	test   eax,ebp
   14000758d:	movabs ds:0x919a91cd83000000,al
   140007596:	jg     0x140007613
   140007598:	jb     0x140007529
   14000759a:	enter  0xf4f3,0xee
   14000759e:	int    0x89
   1400075a0:	(bad)  
   1400075a1:	push   rdi
   1400075a2:	cmp    eax,0x1f1f1721
   1400075a7:	and    DWORD PTR [rdi],esp
   1400075a9:	xor    BYTE PTR [rax],ch
   1400075ab:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400075ac:	(bad)  
   1400075ad:	xchg   ecx,eax
   1400075ae:	add    BYTE PTR [rax],al
   1400075b0:	add    BYTE PTR [rbx-0x6c65752d],al
   1400075b6:	jg     0x14000754d
   1400075b8:	popf   
   1400075b9:	(bad)  
   1400075ba:	xchg   edi,eax
   1400075bb:	pop    rdi
   1400075bc:	push   rsi
   1400075bd:	(bad)  
   1400075be:	sbb    al,0x13
   1400075c0:	adc    edx,DWORD PTR [rbx]
   1400075c2:	adc    al,0x17
   1400075c4:	xor    bh,BYTE PTR [rbx]
   1400075c6:	cmp    al,0x3c
   1400075c8:	rex.WX
   1400075c9:	rex.WX
   1400075ca:	rex.RX imul r13d,esp,0x8a
   1400075d1:	mov    ch,bl
   1400075d3:	xchg   ecx,eax
   1400075d4:	(bad)  
   1400075d5:	xchg   ebp,eax
   1400075d6:	adc    esi,0x4f
   1400075d9:	sbb    eax,0x1010215
   1400075de:	add    dl,BYTE PTR [rsp+rax*1]
   1400075e1:	(bad)  
   1400075e2:	sbb    esp,DWORD PTR [rsi]
   1400075e4:	rex.WR
   1400075e5:	rex.WR
   1400075e6:	rex.WR
   1400075e7:	rex.WRB
   1400075e8:	rex.WRB (bad) 
   1400075ea:	rex.WXB
   1400075eb:	gs in  al,dx
   1400075ed:	xchg   ebx,eax
   1400075ee:	add    BYTE PTR [rax],al
   1400075f0:	add    BYTE PTR [rbx-0x636a6c22],al
   1400075f6:	mov    gs,eax
   1400075f8:	xor    eax,DWORD PTR [rdx]
   1400075fa:	sbb    al,0x19
   1400075fc:	sbb    DWORD PTR [rcx],ebx
   1400075fe:	sbb    DWORD PTR [rip+0x2c03a296],eax        # 0x16c04189a
   140007604:	gs gs gs gs data16 data16 (bad) 
   14000760b:	data16 out dx,al
   14000760d:	xchg   esp,eax
   14000760e:	add    BYTE PTR [rax],al
   140007610:	add    BYTE PTR [rsi-0x5b637721],cl
   140007616:	xchg   ecx,eax
   140007617:	(bad)  
   140007618:	push   rcx
   140007619:	sbb    al,0x35
   14000761b:	cs sbb al,BYTE PTR cs:[rbx]
   14000761f:	mov    ah,0xe0
   140007621:	int    0x79
   140007623:	(bad)  
   140007624:	push   0x6a
   140007626:	ins    BYTE PTR es:[rdi],dx
   140007627:	ins    BYTE PTR es:[rdi],dx
   140007628:	ins    BYTE PTR es:[rdi],dx
   140007629:	ins    BYTE PTR es:[rdi],dx
   14000762a:	addr32 addr32 out 0x9a,eax
   14000762e:	add    BYTE PTR [rax],al
   140007630:	add    BYTE PTR [rax-0x3c65772d],cl
   140007636:	movabs ds:0xd208353838195bd4,al
   14000763f:	sti    
   140007640:	pop    rax
   140007641:	xchg   ebp,esi
   140007643:	push   rcx
   140007644:	test   eax,0x6f6f6f6f
   140007649:	jo     0x1400076bb
   14000764b:	ins    DWORD PTR es:[rdi],dx
   14000764c:	fcomp  QWORD PTR [rdi-0x7d000000]
   140007652:	mov    dh,0x79
   140007654:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140007655:	iret   
   140007656:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140007657:	(bad)  
   140007658:	sub    BYTE PTR [rsi],0x53
   14000765b:	push   rbp
   14000765c:	push   rbx
   14000765d:	sar    ecx,cl
   14000765f:	push   rax
   140007660:	sub    DWORD PTR [rdx],edi
   140007662:	cmc    
   140007663:	fstp   QWORD PTR [rsi-0x56]
   140007666:	stos   BYTE PTR es:[rdi],al
   140007667:	stos   BYTE PTR es:[rdi],al
   140007668:	stos   DWORD PTR es:[rdi],eax
   140007669:	lods   al,BYTE PTR ds:[rsi]
   14000766a:	lods   al,BYTE PTR ds:[rsi]
   14000766b:	jo     0x14000762a
   14000766d:	mov    DWORD PTR [rax],0x967c0000
   140007673:	jle    0x14000762c
   140007675:	rol    ebx,cl
   140007677:	(bad)  
   140007678:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140007679:	xor    edx,DWORD PTR [rbp+0x57]
   14000767c:	(bad)  
   14000767d:	push   rsp
   14000767e:	xor    eax,0x5c2a2826
   140007683:	call   FWORD PTR [rbx-0x52535392]
   140007689:	lods   eax,DWORD PTR ds:[rsi]
   14000768a:	lods   eax,DWORD PTR ds:[rsi]
   14000768b:	jo     0x140007648
   14000768d:	fmul   st,st(5)
   14000768f:	add    BYTE PTR [rax],al
   140007691:	jge    0x140007707
   140007693:	jne    0x140007655
   140007695:	fmul   st(5),st
   140007697:	(bad)  
   140007698:	vsubsd xmm10,xmm9,QWORD PTR [rbp+0x16]
   14000769d:	and    al,0x25
   14000769f:	sub    DWORD PTR [rdx],ebp
   1400076a1:	rex.R
   1400076a2:	rex.RX sar edi,1
   1400076a5:	test   BYTE PTR [rdx-0x41454546],bh
   1400076ab:	lods   eax,DWORD PTR ds:[rsi]
   1400076ac:	mov    ebx,0x95d6
   1400076b1:	jae    0x1400076bc
   1400076b3:	pmullw mm3,mm7
   1400076b6:	(bad)  
   1400076b7:	ror    eax,cl
   1400076b9:	ss pop rbp
   1400076bb:	cmp    DWORD PTR [rdi],edx
   1400076bd:	sub    al,BYTE PTR es:[rbp+rax*2+0x43]
   1400076c2:	rex.RXB mov r8b,0xe0
   1400076c5:	cmc    
   1400076c6:	test   BYTE PTR [rsi-0x411d1d1e],bh
   1400076cc:	mov    esp,0x8ed6
   1400076d1:	jno    0x1400076d9
   1400076d3:	or     al,0xce
   1400076d5:	(bad)  
   1400076d7:	ror    ecx,cl
   1400076d9:	rex.WB pop r9
   1400076db:	sbb    BYTE PTR [rip+0x45442a28],ah        # 0x18544a109
   1400076e1:	rex.B
   1400076e2:	rex.WRX out 0xaf,al
   1400076e5:	loopne 0x14000768d
   1400076e7:	mov    esp,edx
   1400076e9:	loop   0x1400076cd
   1400076eb:	loop   0x1400076a9
   1400076ed:	fild   DWORD PTR [rdx+0x10b70000]
   1400076f3:	xchg   ebp,eax
   1400076f4:	std    
   1400076f5:	(bad)  
   1400076f6:	out    dx,eax
   1400076f7:	(bad)  
   1400076f9:	push   rdx
   1400076fa:	(bad)  
   1400076fb:	(bad)  
   1400076fc:	sub    BYTE PTR [rdx],ch
   1400076fe:	rex.R
   1400076ff:	rex.R
   140007700:	rex.RXB
   140007701:	rex.X push 0xffffffffdcb1e2fb
   140007707:	mov    ch,BYTE PTR [rdi-0x411b191c]
   14000770d:	loopne 0x14000769d
   14000770f:	add    BYTE PTR [rax],al
   140007711:	add    BYTE PTR [rax],al
   140007713:	ret    
   140007714:	movabs ds:0x28241452e7ffffdf,al
   14000771d:	sub    al,BYTE PTR [rbp+rax*2+0x47]
   140007721:	rex.X lods eax,DWORD PTR ds:[rsi]
   140007723:	sti    
   140007724:	in     al,0xe3
   140007726:	cwde   
   140007727:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140007728:	mov    bh,cl
   14000772a:	cli    
   14000772b:	cli    
   14000772c:	loop   0x140007724
   14000772e:	xchg   esp,eax
   14000772f:	add    BYTE PTR [rax],al
   140007731:	add    BYTE PTR [rax],al
   140007733:	add    BYTE PTR [rax],al
   140007735:	add    BYTE PTR [rdx+0x145ad4a2],ah
   14000773b:	and    eax,0x45442a29
   140007740:	rex.RXB
   140007741:	rex.W in al,0xff
   140007744:	cli    
   140007745:	stc    
   140007746:	in     eax,0xe5
   140007748:	jrcxz  0x14000772e
   14000774a:	out    0xe2,al
   14000774c:	lods   eax,DWORD PTR ds:[rsi]
   14000774d:	stc    
   14000774e:	lahf   
	...
   140007757:	add    bh,cl
   140007759:	mov    BYTE PTR [rsi],dl
   14000775b:	and    ah,BYTE PTR [rbx]
   14000775d:	ds (bad) 
   14000775f:	rex.B
   140007760:	rex.B
   140007761:	rex.W in al,0xe2
   140007764:	mov    esi,0xbabcbcbe
   140007769:	mov    ecx,0xfbe1bdb9
   14000776e:	iret   
	...
   140007777:	add    BYTE PTR [rax],al
   140007779:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000777a:	adc    ebx,DWORD PTR [rdi]
   14000777c:	and    ebp,DWORD PTR [rbx]
   14000777e:	xor    DWORD PTR [rcx+riz*2+0x6a],ecx
   140007782:	mov    al,0xb3
   140007784:	mov    bl,0xb8
   140007786:	iret   
   140007787:	rcl    ebx,cl
   140007789:	fucomi st,st(6)
   14000778b:	div    ecx
   14000778d:	test   BYTE PTR [rax],0x0
	...
   140007798:	add    BYTE PTR [rdi-0x596679a6],bh
   14000779e:	(bad)  
   14000779f:	retf   
   1400077a0:	in     al,dx
   1400077a1:	repnz out dx,al
   1400077a3:	out    dx,eax
   1400077a4:	test   DWORD PTR [rax],0x0
	...
   1400077b6:	add    BYTE PTR [rax],al
   1400077b8:	add    ah,bl
   1400077ba:	icebp  
   1400077bb:	icebp  
	...
   140007810:	(bad)  
   140007811:	(bad)  
   140007812:	(bad)  
   140007813:	(bad)  
   140007814:	(bad)  
   140007815:	(bad)  
   140007816:	(bad)  
   140007817:	(bad)  
   140007818:	(bad)  
   140007819:	inc    DWORD PTR [rbx+0xfeffff]
   14000781f:	(bad)  
   140007820:	(bad)  
   140007821:	clc    
   140007822:	add    BYTE PTR [rdi],bh
   140007824:	push   rax
   140007826:	add    BYTE PTR [rdi],bl
   140007828:	push   rax
   14000782a:	add    BYTE PTR [rdi],bl
   14000782c:	push   rax
   14000782e:	add    BYTE PTR [rdi],bl
   140007830:	xbegin 0x17e807f36
   140007836:	add    BYTE PTR [rbx],al
   140007838:	or     BYTE PTR [rdi],0x0
   14000783b:	add    eax,DWORD PTR [rax-0x7ffd0000]
   140007841:	add    BYTE PTR [rax],al
   140007843:	add    eax,DWORD PTR [rax-0x7ffd0000]
   140007849:	add    BYTE PTR [rax],al
   14000784b:	add    eax,DWORD PTR [rax-0x7ffd0000]
   140007851:	add    BYTE PTR [rax],al
   140007853:	add    eax,DWORD PTR [rax-0x7ffd0000]
   140007859:	add    BYTE PTR [rax],al
   14000785b:	add    eax,DWORD PTR [rax-0x7fff0000]
   140007861:	add    BYTE PTR [rax],al
   140007863:	add    DWORD PTR [rax-0x7fff0000],eax
   140007869:	add    BYTE PTR [rax],al
   14000786b:	add    DWORD PTR [rax-0x1fff0000],eax
   140007871:	add    BYTE PTR [rax],al
   140007873:	add    esp,edi
   140007875:	add    BYTE PTR [rax],al
   140007877:	add    edi,edi
   140007879:	add    BYTE PTR [rax],al
   14000787b:	add    edi,edi
   14000787d:	add    BYTE PTR [rax],0x3
   140007880:	inc    DWORD PTR [rax-0x700000f9]
   140007886:	(bad)  
   140007887:	(bad)  
   140007888:	(bad)  
   140007889:	(bad)  
   14000788a:	(bad)  
   14000788b:	(bad)  
   14000788c:	(bad)  
   14000788d:	(bad)  
   14000788e:	(bad)  
   14000788f:	jmp    FWORD PTR [rax]
   140007891:	add    BYTE PTR [rax],al
   140007893:	add    BYTE PTR [rax],dl
   140007895:	add    BYTE PTR [rax],al
   140007897:	add    BYTE PTR [rax],ah
   140007899:	add    BYTE PTR [rax],al
   14000789b:	add    BYTE PTR [rcx],al
   14000789d:	add    BYTE PTR [rax],cl
   14000789f:	add    BYTE PTR [rax],al
   1400078a1:	add    BYTE PTR [rax],al
   1400078a3:	add    BYTE PTR [rax],al
   1400078a5:	add    DWORD PTR [rax],eax
	...
   1400078af:	add    BYTE PTR [rax],al
   1400078b1:	add    DWORD PTR [rax],eax
   1400078b3:	add    BYTE PTR [rax],al
   1400078b5:	add    DWORD PTR [rax],eax
   1400078b7:	add    BYTE PTR [rax],al
   1400078b9:	add    BYTE PTR [rax],al
   1400078bb:	add    BYTE PTR [rax+0x44],cl
   1400078be:	rex.XB add BYTE PTR [r11+0x79],dil
   1400078c2:	jns    0x1400078c4
   1400078c4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400078c5:	(bad)  
   1400078c6:	verw   WORD PTR [rax-0x54fff1f2]
   1400078cd:	adc    ecx,DWORD PTR [rip+0xc1db900]        # 0x14c1e31d3
   1400078d3:	add    BYTE PTR [rcx-0x4dffdfe0],ch
   1400078d9:	sub    al,0x23
   1400078db:	add    BYTE PTR [rdi+rbp*1+0x2fbc0022],dh
   1400078e2:	and    al,0x0
   1400078e4:	mov    bl,0x31
   1400078e6:	and    al,BYTE PTR [rax]
   1400078e8:	mov    ah,0x3f
   1400078ea:	(bad)  
   1400078eb:	add    dl,cl
   1400078ed:	add    al,0x4
   1400078ef:	add    ah,bl
   1400078f1:	sldt   WORD PTR [rax]
   1400078f4:	(bad)
   1400078f7:	add    ch,al
   1400078f9:	sbb    al,0x9
   1400078fb:	add    ah,dl
   1400078fd:	sbb    DWORD PTR [rcx],eax
   1400078ff:	add    ah,dl
   140007901:	sbb    eax,0x1ad80001
   140007906:	add    BYTE PTR [rax],al
   140007908:	fstp   DWORD PTR [rip+0x12e80000]        # 0x152e8790e
   14000790e:	add    BYTE PTR [rax],al
   140007910:	out    0x1b,al
   140007912:	add    BYTE PTR [rax],al
   140007914:	in     eax,dx
   140007915:	sbb    al,BYTE PTR [rax]
   140007917:	add    bh,dh
   140007919:	(bad)  
   14000791a:	add    BYTE PTR [rax],al
   14000791c:	retf   
   14000791d:	and    eax,0x3bdd0003
   140007922:	adc    BYTE PTR [rax],al
   140007924:	jrcxz  0x14000794c
   140007926:	add    BYTE PTR [rax],al
   140007928:	mov    ah,0x40
   14000792a:	xor    eax,0x3a43b800
   14000792f:	add    dh,bl
   140007931:	rex and eax,0x2c47d700
   140007937:	add    dh,bl
   140007939:	rex.WRXB sub rax,0x3441c000
   14000793f:	add    bl,bl
   140007941:	pop    rax
   140007942:	cmp    eax,DWORD PTR [rax]
   140007944:	jrcxz  0x14000798a
   140007946:	(bad)  
   140007947:	add    bh,bh
   140007949:	pop    rcx
   14000794a:	ss add bh,bh
   14000794d:	xor    DWORD PTR gs:[rax],eax
   140007950:	jmp    FWORD PTR [rdx+0x3d]
   140007953:	add    bh,bh
   140007955:	jg     0x140007993
   140007957:	add    ch,bl
   140007959:	pop    rsp
   14000795a:	add    r10b,bl
   14000795d:	(bad)  
   14000795e:	rex.W add dil,bl
   140007961:	jae    0x1400079a6
   140007963:	add    dh,dl
   140007965:	push   0x53
   140007967:	add    ch,dl
   140007969:	ins    BYTE PTR es:[rdi],dx
   14000796a:	pop    rcx
   14000796b:	add    bh,bh
   14000796d:	imul   ecx,DWORD PTR [rax+0x0],0xffffffff
   140007971:	jo     0x1400079be
   140007973:	add    ah,cl
   140007975:	jno    0x1400079da
   140007977:	add    BYTE PTR [rax],al
   140007979:	repnz rex.W add dl,bl
   14000797d:	adc    DWORD PTR [rcx+0x0],0x5983d7
   140007984:	(bad)  
   140007985:	(bad)  
   140007986:	pop    rsp
   140007987:	add    ah,dl
   140007989:	(bad)  
   14000798a:	jne    0x14000798c
   14000798c:	(bad)  
   14000798e:	(bad)  
   14000798f:	add    BYTE PTR [rdx-0x6eff7576],cl
   140007995:	nop
   140007996:	nop
   140007997:	add    BYTE PTR [rsp+rdx*4-0x6364ff6c],dl
   14000799e:	pushf  
   14000799f:	add    BYTE PTR [rsi-0x4cff6162],bl
   1400079a5:	lea    eax,[rdi-0x5f5f6100]
   1400079ab:	add    BYTE PTR [rcx-0x5fff5a41],bl
   1400079b1:	movabs al,ds:0xaaaa00a4a4a400a0
   1400079ba:	stos   BYTE PTR es:[rdi],al
   1400079bb:	add    BYTE PTR [rbx-0x52ff5354],ch
   1400079c1:	lods   eax,DWORD PTR ds:[rsi]
   1400079c2:	lods   eax,DWORD PTR ds:[rsi]
   1400079c3:	add    BYTE PTR [rax-0x4bff4e4f],dh
   1400079c9:	mov    ch,0xb5
   1400079cb:	add    BYTE PTR [rax-0x44ff4647],bh
   1400079d1:	mov    esp,0xbebe00bc
   1400079d6:	mov    esi,0x90a4f300
   1400079db:	add    al,al
   1400079dd:	mov    edx,0xc0c000b8
   1400079e2:	rol    BYTE PTR [rax],0xc4
   1400079e5:	mov    dh,0x0
   1400079e8:	leave  
   1400079e9:	(bad)
   1400079ec:	(bad)
   1400079ef:	add    al,cl
   1400079f1:	retf   0xca
   1400079f4:	leave  
   1400079f5:	retf   
   1400079f6:	int3   
   1400079f7:	add    dl,cl
   1400079f9:	int3   
   1400079fa:	int3   
   1400079fb:	add    ah,cl
   1400079fd:	(bad)  
   1400079fe:	(bad)  
   1400079ff:	add    ah,bl
   140007a01:	retf   0xc9
   140007a04:	(bad)  
   140007a05:	rcl    al,1
   140007a07:	add    al,dl
   140007a09:	rcl    edx,1
   140007a0b:	add    dh,dl
   140007a0d:	(bad)  
   140007a0e:	(bad)  
   140007a0f:	add    cl,bl
   140007a11:	(bad)  
   140007a13:	add    bh,bl
   140007a15:	(bad)  
   140007a17:	add    cl,ah
   140007a19:	loope  0x1400079fc
   140007a1b:	add    al,ch
   140007a1d:	call   0x12eee7b0a
   140007a22:	out    dx,al
   140007a23:	add    al,bh
   140007a25:	clc    
   140007a26:	clc    
	...
   140007cb3:	add    bh,bh
   140007cb5:	(bad)  
   140007cb6:	inc    DWORD PTR [rax]
	...
   140007cc8:	(bad)  
   140007cc9:	add    dh,BYTE PTR [rdi]
   140007ccb:	add    BYTE PTR [rax],al
   140007ccd:	add    BYTE PTR [rsi+0x46],al
   140007cd0:	cmp    DWORD PTR [rcx],r15d
   140007cd3:	cmp    al,0x3e
   140007cd5:	add    BYTE PTR [rax],al
   140007cd7:	add    BYTE PTR [rdx+0x37],cl
   140007cda:	add    BYTE PTR [rax],r8b
   140007cdd:	add    BYTE PTR [rcx+0x4e],bl
   140007ce0:	rex.WX
   140007ce1:	rex.RX
   140007ce2:	rex
   140007ce3:	add    BYTE PTR ds:[rax],al
   140007ce6:	add    BYTE PTR [rax],al
   140007ce8:	rex
   140007ce9:	rex.WX
   140007cea:	add    BYTE PTR ds:[rax],al
   140007ced:	add    BYTE PTR [rax],al
   140007cef:	add    BYTE PTR [rsi+0x36],al
   140007cf2:	cmp    DWORD PTR [rax],eax
   140007cf4:	add    BYTE PTR [rax],al
   140007cf6:	add    BYTE PTR [rax],al
   140007cf8:	rex.R push rsp
   140007cfa:	rex pop rax
   140007cfc:	rex.WX
   140007cfd:	rex.RX
   140007cfe:	rex.RX
   140007cff:	rex.RX
   140007d00:	rex.R
   140007d01:	rex
   140007d02:	rex
   140007d03:	ds ds ds ds rex.WRX
   140007d08:	rex push rsp
   140007d0a:	rex push rbx
   140007d0c:	push   rbx
   140007d0d:	push   rbx
   140007d0e:	rex.WRX
   140007d0f:	rex.WRX
   140007d10:	rex.WRX
   140007d11:	rex.WRX
   140007d12:	rex.WRX
   140007d13:	rex.WRX
   140007d14:	rex.WRX
   140007d15:	rex.WRX
   140007d16:	cmp    QWORD PTR [rsp+r10*2+0x40],r8
   140007d1b:	push   rbx
   140007d1c:	rex add eax,DWORD PTR [rbx]
   140007d1f:	add    eax,DWORD PTR [rdi]
   140007d21:	or     al,0x12
   140007d23:	adc    dl,BYTE PTR [rcx+rbx*1]
   140007d26:	rex.WX
   140007d27:	ds rex.XB push r12
   140007d2a:	rex push rsp
   140007d2c:	rex or DWORD PTR [rcx],ecx
   140007d2f:	(bad)  
   140007d30:	rex.WR (bad) 
   140007d32:	(bad)  
   140007d33:	(bad)  
   140007d34:	and    ebx,DWORD PTR [rdx]
   140007d36:	rex.WRX
   140007d37:	ds cmp eax,0x40543530
   140007d3d:	sbb    al,0x9
   140007d3f:	push   rsi
   140007d40:	pop    rcx
   140007d41:	pop    rbx
   140007d42:	cmp    esp,DWORD PTR [rdx]
   140007d44:	sub    BYTE PTR [rax],ah
   140007d46:	rex.WRX
   140007d47:	rex add DWORD PTR ds:[rdx],eax
   140007d4b:	push   rsp
   140007d4c:	ds sbb eax,0x34145221
   140007d52:	pop    rbx
   140007d53:	sub    al,0x2c
   140007d55:	sub    DWORD PTR [rsi+0x40],ecx
   140007d58:	push   rsi
   140007d59:	rex.RX push rsp
   140007d5b:	push   rsp
   140007d5c:	or     dl,BYTE PTR ds:[rax]
   140007d5f:	adc    al,0x16
   140007d61:	and    al,0x48
   140007d63:	push   rsi
   140007d64:	es and eax,0x404e
   140007d6a:	add    BYTE PTR [rsi+rdi*1+0x10],dl
   140007d6e:	adc    bl,BYTE PTR [rbx]
   140007d70:	(bad)  
   140007d71:	cs sub eax,0x4e264958
   140007d77:	add    BYTE PTR [rax],r8b
   140007d7a:	add    BYTE PTR [rsi+rdi*1+0xd],dl
   140007d7e:	(bad)  
   140007d7f:	adc    eax,0x33332718
   140007d84:	xor    DWORD PTR [rdx],ebp
   140007d86:	rex.WRX
   140007d87:	add    BYTE PTR [rax],r8b
   140007d8a:	add    BYTE PTR [rsi+rdi*1+0x3e],dl
   140007d8e:	ds ds (bad) 
   140007d91:	rex
   140007d92:	rex.R
   140007d93:	rex.R
   140007d94:	rex.R
   140007d95:	rex.RX
   140007d96:	rex.WRX
   140007d97:	add    BYTE PTR [rax],r8b
   140007d9a:	add    BYTE PTR [rax+0x54],bl
   140007d9d:	push   rsp
   140007d9e:	push   rsp
   140007d9f:	push   rsp
   140007da0:	push   rsp
   140007da1:	push   rsp
   140007da2:	rex.WRX
   140007da3:	rex.WRX push rbx
   140007da5:	rex.WRX
   140007da6:	rex.WRX push rsi
	...
   140007db8:	(bad)  
   140007db9:	inc    DWORD PTR [rax]
   140007dbb:	add    BYTE PTR [rdi+rax*1],bl
   140007dbe:	add    BYTE PTR [rax],al
   140007dc0:	sbb    al,0xf
   140007dc2:	add    BYTE PTR [rax],al
   140007dc4:	(bad)  
   140007dc5:	(bad)  
	...
   140007de2:	add    BYTE PTR [rax],al
   140007de4:	loopne 0x140007de6
   140007de6:	add    BYTE PTR [rax],al
   140007de8:	loopne 0x140007dea
   140007dea:	add    BYTE PTR [rax],al
   140007dec:	loopne 0x140007dee
   140007dee:	add    BYTE PTR [rax],al
   140007df0:	loopne 0x140007df2
   140007df2:	add    BYTE PTR [rax],al
   140007df4:	(bad)  
   140007df5:	inc    DWORD PTR [rax]
   140007df7:	add    BYTE PTR [rcx+0xd474e50],cl
   140007dfd:	or     bl,BYTE PTR [rdx]
   140007dff:	or     al,BYTE PTR [rax]
   140007e01:	add    BYTE PTR [rax],al
   140007e03:	or     eax,0x52444849
   140007e08:	add    BYTE PTR [rax],al
   140007e0a:	add    DWORD PTR [rax],eax
   140007e0c:	add    BYTE PTR [rax],al
   140007e0e:	add    DWORD PTR [rax],eax
   140007e10:	or     BYTE PTR [rsi],al
   140007e12:	add    BYTE PTR [rax],al
   140007e14:	add    BYTE PTR [rdx+rsi*2-0x58],bl
   140007e18:	data16 add BYTE PTR [rax],al
   140007e1b:	and    BYTE PTR [rax],al
   140007e1d:	rex.WB
   140007e1e:	rex.R
   140007e1f:	push   r12
   140007e21:	js     0x140007dbf
   140007e23:	in     al,dx
   140007e24:	mov    ebp,0xc92cb059
   140007e29:	jns    0x140007e0a
   140007e2b:	test   ebx,0x4fdeaacc
   140007e31:	neg    DWORD PTR [rcx-0x12]
   140007e34:	cmp    eax,DWORD PTR ds:[rsi]
   140007e37:	sbb    DWORD PTR [rcx],0x0
   140007e3a:	add    al,0x41
   140007e3c:	(bad)  
   140007e3d:	rex pop rax
   140007e3f:	add    BYTE PTR [rdi],dl
   140007e41:	or     DWORD PTR [rax],edx
   140007e43:	add    DWORD PTR [rcx-0x29a4daec],ecx
   140007e49:	sbb    dl,BYTE PTR [rsi+0x3f2ae0ed]
   140007e4f:	(bad)  
   140007e51:	mov    ebx,0x41ea37ad
   140007e56:	and    DWORD PTR [rip+0xffffffffd17a1c38],edi        # 0x1117a9a94
   140007e5c:	add    esp,DWORD PTR [rip+0xffffffff8a1c9f87]        # 0xca1d1de9
   140007e62:	mov    al,0xb5
   140007e64:	adc    dh,BYTE PTR [rcx+rax*1]
   140007e67:	adc    ah,BYTE PTR [rax]
   140007e69:	or     BYTE PTR [rdx+0x20067018],al
   140007e6f:	data16 add BYTE PTR [rcx],0x6
   140007e73:	mov    bl,0xdf
   140007e75:	mov    ecx,0x3e967afb
   140007e7a:	mov    ebp,0x7e9992d4
   140007e7f:	enter  0xeacc,0xac
   140007e83:	(bad)  
   140007e84:	ds neg esi
   140007e87:	xor    esi,DWORD PTR [rbx+0x7]
   140007e8a:	or     edx,ebp
   140007e8c:	pop    rdi
   140007e8d:	rex.R lahf 
   140007e8f:	rcr    DWORD PTR [rbp-0x6b],cl
   140007e92:	mov    ch,0x65
   140007e94:	in     eax,0xf7
   140007e96:	iret   
   140007e97:	push   QWORD PTR [rdi+0x65ac2664]
   140007e9d:	sub    eax,0x5acb596b
   140007ea2:	(bad)  
   140007ea3:	mov    dl,0x96
   140007ea5:	mov    ch,0xac
   140007ea7:	gs sub eax,0x5acb596b
   140007ead:	(bad)  
   140007eae:	mov    dl,0x96
   140007eb0:	mov    ch,0xac
   140007eb2:	gs sub eax,0x5acb596b
   140007eb8:	(bad)  
   140007eb9:	mov    dl,0x96
   140007ebb:	mov    ch,0xac
   140007ebd:	gs sub eax,0x5acb596b
   140007ec3:	(bad)  
   140007ec4:	mov    dl,0x96
   140007ec6:	mov    ch,0xac
   140007ec8:	gs sub eax,0x5acb596b
   140007ece:	(bad)  
   140007ecf:	mov    dl,0x96
   140007ed1:	mov    ch,0xac
   140007ed3:	gs sub eax,0x5acb596b
   140007ed9:	(bad)  
   140007eda:	mov    dl,0x96
   140007edc:	mov    ch,0xac
   140007ede:	gs sub eax,0x5acb596b
   140007ee4:	(bad)  
   140007ee5:	mov    dl,0x96
   140007ee7:	mov    ch,0xac
   140007ee9:	gs sub eax,0x5acb596b
   140007eef:	(bad)  
   140007ef0:	mov    dl,0x96
   140007ef2:	mov    ch,0xac
   140007ef4:	gs sub eax,0x5acb596b
   140007efa:	(bad)  
   140007efb:	mov    dl,0x96
   140007efd:	mov    ch,0xac
   140007eff:	gs sub eax,0x5acb596b
   140007f05:	(bad)  
   140007f06:	mov    dl,0x96
   140007f08:	mov    ch,0xac
   140007f0a:	gs sub eax,0x5acb596b
   140007f10:	(bad)  
   140007f11:	mov    dl,0x96
   140007f13:	mov    ch,0xac
   140007f15:	gs sub eax,0x5acb596b
   140007f1b:	(bad)  
   140007f1c:	mov    dl,0x96
   140007f1e:	mov    ch,0xac
   140007f20:	gs sub eax,0x5acb596b
   140007f26:	(bad)  
   140007f27:	mov    dl,0x96
   140007f29:	mov    ch,0xac
   140007f2b:	gs sub eax,0x5acb596b
   140007f31:	(bad)  
   140007f32:	mov    dl,0x96
   140007f34:	mov    ch,0xac
   140007f36:	gs sub eax,0x5acb596b
   140007f3c:	(bad)  
   140007f3d:	mov    dl,0x96
   140007f3f:	mov    ch,0xac
   140007f41:	gs sub eax,0x5acb596b
   140007f47:	(bad)  
   140007f48:	mov    dl,0x96
   140007f4a:	mov    ch,0xac
   140007f4c:	gs sub eax,0xc452396b
   140007f52:	psubq  mm0,QWORD PTR [rsi]
   140007f55:	jle    0x140007f73
   140007f57:	in     eax,0x7f
   140007f59:	jmp    QWORD PTR [rdi-0x1]
   140007f5c:	lods   al,BYTE PTR ds:[rsi]
   140007f5d:	mov    edi,0x3ea5b5b5
   140007f62:	cld    
   140007f63:	hlt    
   140007f64:	sar    DWORD PTR [rsp+rsi*8],cl
   140007f67:	enter  0x7923,0xb7
   140007f6b:	xlat   BYTE PTR ds:[rbx]
   140007f6c:	xor    edi,DWORD PTR [rbp+0x61ff2f5e]
   140007f72:	(bad)  
   140007f74:	pop    rdx
   140007f75:	(bad)  
   140007f76:	jb     0x140007fd4
   140007f78:	pop    rcx
   140007f79:	add    eax,eax
   140007f7b:	xor    ebp,esp
   140007f7d:	repz mov edi,0xd5a27bf7
   140007f83:	push   0xfffffffffffffffd
   140007f85:	mov    ss,WORD PTR [rax]
   140007f87:	loop   0x140007fec
   140007f89:	(bad)  
   140007f8a:	fimul  DWORD PTR [rbx+0x42]
   140007f8d:	mov    bl,cl
   140007f8f:	mov    bl,0xc9
   140007f91:	in     al,0x5a
   140007f93:	pop    rcx
   140007f94:	adc    al,0x37
   140007f96:	rcl    DWORD PTR [rsi-0x15],cl
   140007f99:	(bad)  
   140007f9a:	(bad)  
   140007f9b:	and    al,0xdf
   140007f9d:	jnp    0x140007f92
   140007f9f:	cmc    
   140007fa0:	xlat   BYTE PTR ds:[rbx]
   140007fa1:	pop    rdi
   140007fa2:	mov    esi,0x18c2e17c
   140007fa7:	cwde   
   140007fa8:	std    
   140007fa9:	outs   dx,DWORD PTR ds:[rsi]
   140007faa:	push   rsp
   140007fac:	lahf   
   140007fad:	(bad)  
   140007fae:	jle    0x140007f88
   140007fb0:	idiv   DWORD PTR [rsi+rdx*4+0x6b251cb5]
   140007fb7:	add    BYTE PTR [rax],bh
   140007fb9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140007fba:	cld    
   140007fbb:	rcr    DWORD PTR [rdi],0xfc
   140007fbe:	push   r15
   140007fc0:	rex.WB stc 
   140007fc2:	jge    0x140007fe5
   140007fc4:	(bad)
   140007fc8:	push   rcx
   140007fc9:	adc    BYTE PTR [rax+0xa],0x21
   140007fcd:	add    al,0xd6
   140007fcf:	pop    rdx
   140007fd0:	retf   0xc8a2
   140007fd3:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140007fd4:	xchg   ebx,eax
   140007fd5:	rex.WB cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140007fd7:	mov    ch,0xbe
   140007fd9:	outs   dx,BYTE PTR ds:[rsi]
   140007fda:	mov    WORD PTR [rcx+0x7d],?
   140007fdd:	ss popf 
   140007fdf:	mov    esi,0xbfdfde35
   140007fe4:	outs   dx,BYTE PTR ds:[rsi]
   140007fe5:	lods   eax,DWORD PTR ds:[rsi]
   140007fe6:	mov    ebp,0x79798c68
   140007feb:	mov    esp,0x70e17fbf
   140007ff0:	cmp    al,0xbe
   140007ff2:	and    eax,0xafff1885
   140007ff7:	mov    edi,0xfd95bf5
   140007ffc:	sti    
   140007ffd:	jns    0x140007fd5
   140007fff:	repnz pop rdi
   140008001:	mov    dh,0xac
   140008003:	add    eax,esp
   140008005:	cwde   
   140008006:	repnz movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140008008:	(bad)  
   140008009:	jge    0x140007ff4
   14000800b:	xor    al,0xf0
   14000800d:	sub    dh,BYTE PTR [rax]
   14000800f:	xchg   rbx,rax
   140008011:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140008012:	mov    esi,0x594c0853
   140008017:	xchg   edx,eax
   140008018:	out    0x39,eax
   14000801a:	(bad)  
   14000801b:	adc    BYTE PTR [rdx+0x20],al
   14000801e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000801f:	sub    ebp,r12d
   140008022:	jbe    0x140007fa7
   140008024:	sub    ebx,ecx
   140008026:	xor    dl,bl
   140008028:	pop    rdx
   140008029:	out    dx,eax
   14000802a:	add    DWORD PTR [rdi+0x77b8b80b],ebp
   140008030:	sti    
   140008031:	test   ch,0xc9
   140008034:	loope  0x140008017
   140008036:	sub    eax,0x70c6d6e0
   14000803b:	js     0x1400080ad
   14000803d:	repz cli 
   14000803f:	cmc    
   140008040:	sbb    ecx,0x74
   140008043:	mov    edx,0x8fa3e0fb
   140008048:	out    dx,al
   140008049:	in     eax,dx
   14000804a:	pushf  
   14000804b:	cmp    al,0x39
   14000804d:	(bad)  
   14000804e:	out    0xd7,al
   140008050:	mov    esi,0x93fa7e36
   140008055:	lahf   
   140008056:	pushf  
   140008057:	cld    
   140008058:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140008059:	rex.WRXB jge 0x140008006
   14000805c:	cld    
   14000805d:	sar    DWORD PTR [rsi],0xe9
   140008060:	pop    rdx
   140008061:	dec    BYTE PTR [rbx-0x70]
   140008064:	xor    eax,0xfe531c00
   140008069:	loopne 0x140008076
   14000806b:	pop    rdi
   14000806c:	clc    
   14000806d:	rex.WB test rax,0x2b40b3d4
   140008073:	rex.WRB push r11
   140008075:	mov    bh,0xd1
   140008077:	pop    rdx
   140008078:	lods   al,BYTE PTR ds:[rsi]
   140008079:	jo     0x1400080d0
   14000807b:	test   eax,0xcb2c92cb
   140008080:	mov    al,0xd6
   140008082:	and    al,BYTE PTR [rbp+0x85dbf00]
   140008088:	adc    DWORD PTR [rdx+rdx*1+0x28024084],0x25021485
   140008093:	and    eax,0x4210492a
   140008098:	push   rax
   140008099:	push   0xffffffffffffff8d
   14000809b:	(bad)  
   14000809c:	sbb    ch,BYTE PTR [rcx]
   14000809e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000809f:	rex.RX mov dl,r8b
   1400080a2:	pop    rdx
   1400080a3:	pop    rbx
   1400080a4:	push   0xffffffffffffffad
   1400080a6:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400080a7:	xchg   r10,rax
   1400080a9:	mov    esp,0x34bca521
   1400080ae:	lahf   
   1400080af:	rex.WRX (bad) 
   1400080b1:	(bad)  
   1400080b2:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400080b3:	rcl    edi,cl
   1400080b5:	mov    bh,0x4f
   1400080b7:	sahf   
   1400080b8:	cmp    al,0xf
   1400080ba:	pop    rsp
   1400080bb:	jge    0x1400080b0
   1400080bd:	(bad)  
   1400080be:	push   rdi
   1400080bf:	fistp  QWORD PTR [rdx]
   1400080c1:	jno    0x1400080bd
   1400080c3:	hlt    
   1400080c4:	in     eax,dx
   1400080c5:	pop    rdi
   1400080c6:	clc    
   1400080c7:	int3   
   1400080c8:	addr32 out 0x3f,al
   1400080cb:	mov    WORD PTR [rdx-0x407034a8],?
   1400080d1:	lods   al,BYTE PTR ds:[rsi]
   1400080d2:	add    eax,esp
   1400080d4:	cwde   
   1400080d5:	repnz stc 
   1400080d7:	(bad)  
   1400080d8:	jl     0x1400080bb
   1400080da:	out    0x12,eax
   1400080dc:	sub    edi,edi
   1400080de:	adc    BYTE PTR [rcx],ah
   1400080e0:	fs retf 
   1400080e2:	add    eax,DWORD PTR [rax+0x7917f68d]
   1400080e8:	rex.WRX xchg rcx,rax
   1400080ea:	out    0x58,eax
   1400080ec:	jmp    0x1400080a4
   1400080ee:	or     ch,BYTE PTR [rcx]
   1400080f0:	adc    DWORD PTR [rsi],ebx
   1400080f2:	add    al,0xa4
   1400080f4:	adc    BYTE PTR [rax],ah
   1400080f6:	and    eax,0x7ef15f02
   1400080fb:	pop    rdi
   1400080fc:	add    BYTE PTR [rdx],cl
   1400080fe:	adc    esi,edi
   140008100:	sti    
   140008101:	std    
   140008102:	(bad)  
   140008103:	lahf   
   140008104:	add    DWORD PTR [rdi+rbp*1-0x69acffd5],esp
   14000810b:	and    BYTE PTR [rsi+rbp*1+0x2108998d],al
   140008112:	sub    DWORD PTR cs:[rcx],esp
   140008115:	scas   al,BYTE PTR es:[rdi]
   140008116:	sbb    BYTE PTR [rax+0x1afb580],bh
   14000811c:	(bad)  
   14000811d:	xchg   ebp,eax
   14000811e:	adc    BYTE PTR [rdi-0x7b],dl
   140008121:	xchg   esp,eax
   140008122:	scas   eax,DWORD PTR es:[rdi]
   140008123:	sbb    ah,BYTE PTR [rbx-0x52]
   140008126:	or     ch,BYTE PTR [rcx]
   140008128:	addr32 jg 0x14000810c
   14000812b:	adc    ebx,DWORD PTR [rdi-0x4a784ca8]
   140008131:	lods   al,BYTE PTR ds:[rsi]
   140008132:	xchg   esp,eax
   140008133:	in     al,0xee
   140008135:	rex.RB (bad) 
   140008137:	adc    cl,BYTE PTR [rbx-0x5e]
   14000813a:	(bad)  
   14000813b:	enter  0x231a,0xe5
   14000813f:	mov    bh,BYTE PTR [rbp+0x2]
   140008142:	xor    dh,al
   140008144:	(bad)  
   140008145:	ins    BYTE PTR es:[rdi],dx
   140008146:	add    al,0x9
   140008148:	(bad)  
   140008149:	cmp    BYTE PTR [rsi],dl
   14000814b:	and    BYTE PTR [rip+0x31a45ac6],ah        # 0x171a4dc17
   140008151:	pop    rax
   140008152:	jg     0x140008108
   140008154:	lock int3 
   140008156:	rcr    DWORD PTR [rdx-0x75],0xc0
   14000815a:	add    DWORD PTR [rcx-0x8],ecx
   14000815d:	outs   dx,DWORD PTR ds:[rsi]
   14000815e:	movabs eax,ds:0x5d9fc480a98c2cce
   140008167:	and    eax,0xc6343249
   14000816c:	or     al,0x8d
   14000816e:	mov    ch,0xef
   140008170:	seta   BYTE PTR [rbx-0x3dd296c0]
   140008177:	cwde   
   140008178:	cdq    
   140008179:	test   BYTE PTR [rbp+0x6b],bh
   14000817c:	int3   
   14000817d:	test   DWORD PTR [rdi+0x15ccf33f],ebp
   140008183:	and    ebp,esp
   140008185:	test   DWORD PTR [rbp-0xd6fa84b],0x4dea52b2
   14000818f:	imul   ebp,ebp,0x2b
   140008192:	rex
   140008193:	test   BYTE PTR cs:[rax],ch
   140008196:	test   DWORD PTR [rax],edx
   140008198:	(bad)
   14000819b:	repnz adc DWORD PTR [rbp+0x5f],edi
   14000819f:	sub    ebp,DWORD PTR [rdx+0x2d]
   1400081a2:	(bad)  
   1400081a3:	(bad)  
   1400081a4:	mov    dl,0x6
   1400081a6:	and    BYTE PTR [rbx-0x76],0xd1
   1400081aa:	cli    
   1400081ab:	test   BYTE PTR [rax],cl
   1400081ad:	mov    ebp,0xad695e35
   1400081b2:	lods   eax,DWORD PTR ds:[rsi]
   1400081b3:	xchg   esp,eax
   1400081b4:	push   rsi
   1400081b5:	or     BYTE PTR [rcx+0x2b],al
   1400081b8:	adc    QWORD PTR [r10+0x60],r8
   1400081bc:	lods   al,BYTE PTR ds:[rsi]
   1400081bd:	(bad)
   1400081c0:	fadd   DWORD PTR [rax-0x62d6f74b]
   1400081c6:	mov    dl,0x1b
   1400081c8:	add    edx,DWORD PTR [rdx-0x7e]
   1400081cb:	mov    ch,0xa0
   1400081cd:	xor    eax,0x16674a46
   1400081d2:	pop    rax
   1400081d3:	pop    rbx
   1400081d4:	movsxd eax,DWORD PTR [rdx]
   1400081d6:	add    BYTE PTR [rsi-0x294cb2fb],al
   1400081dc:	push   rsi
   1400081dd:	xlat   BYTE PTR ds:[rbx]
   1400081de:	(bad)
   1400081e1:	xor    ebp,edx
   1400081e3:	cmp    eax,0x59ce9d40
   1400081e8:	imul   edi,DWORD PTR [rbx+0x7108ba06],0xffffffc6
   1400081ef:	xchg   esp,eax
   1400081f0:	(bad)
   1400081f4:	xor    DWORD PTR [rax+0x63],ebx
   1400081f7:	rex.WX and rbp,rsp
   1400081fa:	rex.R ret 0x95a1
   1400081fe:	jb     0x14000820c
   140008200:	in     al,dx
   140008201:	jle    0x1400081f6
   140008203:	(bad)  
   140008206:	(bad)  
   140008207:	mov    BYTE PTR [rdx-0x78],0x3d
   14000820b:	and    esp,eax
   14000820d:	ins    DWORD PTR es:[rdi],dx
   14000820e:	(bad)  
   14000820f:	(bad)  
   140008211:	or     bh,BYTE PTR [rdx+riz*1-0x27ec877c]
   140008218:	(bad)  
   140008219:	data16 (bad) 
   14000821b:	(bad)  
   14000821c:	lock xchg edi,edx
   14000821f:	rex icebp 
   140008221:	out    0x48,eax
   140008223:	(bad)  
   140008224:	add    BYTE PTR [rax+0x4c],dh
   140008227:	xor    esi,eax
   140008229:	ins    BYTE PTR es:[rdi],dx
   14000822a:	add    DWORD PTR [rbx+rcx*1],esp
   14000822d:	(bad)  
   14000822e:	(bad)  
   14000822f:	or     BYTE PTR [rcx-0x59],al
   140008232:	fucom  st(6)
   140008234:	lea    esi,[rdi]
   140008236:	(bad)  
   140008238:	(bad)  
   140008239:	mov    edi,0xddba45f2
   14000823e:	xchg   esp,eax
   14000823f:	loope  0x1400082b1
   140008241:	xchg   ebx,eax
   140008242:	lods   eax,DWORD PTR ds:[rsi]
   140008243:	lods   eax,DWORD PTR ds:[rsi]
   140008244:	sbb    eax,0xfa4dc346
   140008249:	or     DWORD PTR [rip+0x2d16ad5a],0xffffffd5        # 0x16d172faa
   140008250:	es ins DWORD PTR es:[rdi],dx
   140008252:	mov    ch,0x2b
   140008254:	pop    rdx
   140008255:	(bad)  
   140008256:	mov    ch,0x60
   140008258:	mov    WORD PTR [rbx+0x1],fs
   14000825b:	rex.X mov eax,0xa45adf1e
   140008261:	(bad)  
   140008262:	or     eax,DWORD PTR [rdx-0x67]
   140008265:	add    BYTE PTR [rax],cl
   140008267:	jle    0x1400082e8
   140008269:	adc    bl,ch
   14000826b:	scas   eax,DWORD PTR es:[rdi]
   14000826c:	sub    eax,0x20c0b97c
   140008271:	loop   0x140008270
   140008273:	and    al,BYTE PTR [rdx]
   140008275:	adc    cl,BYTE PTR [rcx+rcx*1+0x66304de7]
   14000827c:	test   DWORD PTR fs:[rax],ebx
   14000827f:	(bad)
   140008282:	sub    edi,DWORD PTR [rcx+0xd]
   140008285:	sbb    bl,BYTE PTR [rax-0x31fff1f]
   14000828b:	repz iret 
   14000828d:	(bad)  
   14000828e:	call   FWORD PTR [rdx+0xe22e210]
   140008294:	sbb    al,0x5e
   140008296:	add    ebx,esi
   140008298:	adc    al,0x42
   14000829a:	pop    rsp
   14000829b:	(bad)  
   14000829c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000829d:	(bad)  
   14000829e:	cli    
   14000829f:	rol    BYTE PTR [rdi+0x1f8d51d6],1
   1400082a5:	xor    ebx,DWORD PTR [rcx+0x3]
   1400082a8:	shl    BYTE PTR [rcx],0x45
   1400082ab:	sub    DWORD PTR [rbp-0x1abae9a3],esi
   1400082b1:	rol    bl,1
   1400082b3:	test   edx,0xc1ca56ad
   1400082b9:	rcr    DWORD PTR [rax+0x5df9f4ff],0xa6
   1400082c0:	xor    eax,DWORD PTR [rbp-0x51]
   1400082c3:	jae    0x14000824e
   1400082c5:	rol    DWORD PTR [rsi+0x46],1
   1400082c8:	mov    edi,0xb69d05b
   1400082cd:	rex.WRX in al,dx
   1400082cf:	or     al,0xd9
   1400082d1:	(bad)  
   1400082d3:	(bad)  
   1400082d4:	jae    0x1400082aa
   1400082d6:	cmp    BYTE PTR [edx+esi*4],bl
   1400082da:	mov    ebp,0x68d1827d
   1400082df:	xchg   ebx,eax
   1400082e0:	lea    ecx,[rbp-0x68b162df]
   1400082e6:	and    al,0x6d
   1400082e8:	xchg   ecx,eax
   1400082e9:	mov    ah,0x5a
   1400082eb:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400082ec:	rex.WB mov sil,BYTE PTR [r9+0x7057ac06]
   1400082f3:	add    ebx,DWORD PTR [rax-0x15]
   1400082f6:	(bad)  
   1400082f7:	loope  0x140008351
   1400082f9:	in     al,dx
   1400082fb:	jae    0x140008305
   1400082fd:	xlat   BYTE PTR ds:[rbx]
   1400082fe:	scas   eax,DWORD PTR es:[rdi]
   1400082ff:	jle    0x1400082c3
   140008301:	add    dl,BYTE PTR [rsp+rdi*8]
   140008304:	jle    0x1400082b7
   140008306:	rex.X mov cl,0x2b
   140008309:	(bad)  
   14000830a:	mov    dl,0xe2
   14000830c:	sbb    DWORD PTR [rbx+0x4c],ebp
   14000830f:	add    edx,DWORD PTR [rbp+rsi*4+0x18842076]
   140008316:	add    BYTE PTR [rdi],cl
   140008318:	add    BYTE PTR [rdi-0x7f30eb94],bl
   14000831e:	cmp    DWORD PTR [rax-0x17],esi
   140008321:	fcmovnu st,st(7)
   140008323:	(bad)  
   140008324:	imul   BYTE PTR [rbx-0x3bdeda40]
   14000832a:	adc    eax,0x22e015e0
   14000832f:	jo     0x140008382
   140008331:	or     BYTE PTR [rcx+0x13],dh
   140008334:	cwde   
   140008335:	jl     0x140008327
   140008337:	sbb    DWORD PTR [rdi],0xffffffb4
   14000833a:	lods   al,BYTE PTR ds:[rsi]
   14000833b:	in     eax,0x47
   14000833d:	rex.WX (bad) 
   14000833f:	add    BYTE PTR [rax+0x4c],dh
   140008342:	mov    cl,0xc6
   140008344:	mov    esp,0x1acf7c07
   140008349:	jp     0x1400083b2
   14000834b:	and    bl,BYTE PTR [rax-0x10518d33]
   140008352:	(bad)  
   140008353:	adc    al,0xd3
   140008355:	fnstcw WORD PTR [rcx]
   140008357:	lods   al,BYTE PTR ds:[rsi]
   140008358:	sub    al,0xe0
   14000835a:	jp     0x1400082e5
   14000835c:	adc    al,0x86
   14000835e:	rex.R int 0x69
   140008361:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140008362:	movsxd ebx,DWORD PTR [rdx-0x37]
   140008365:	sbb    BYTE PTR [rbp+0x75c9a4a6],ah
   14000836b:	cli    
   14000836c:	mov    ebp,0x86da74eb
   140008371:	jbe    0x14000837e
   140008373:	mov    dh,0xb7
   140008375:	ficomp DWORD PTR [rcx+rdi*1-0x548c982f]
   14000837c:	ret    
   14000837d:	jo     0x140008357
   14000837f:	cmp    BYTE PTR gs:[rax-0x2f],ch
   140008383:	jmp    0x1400083ab
   140008385:	je     0x1400083c1
   140008387:	or     ebp,ebx
   140008389:	outs   dx,BYTE PTR ds:[rsi]
   14000838a:	fwait
   14000838b:	outs   dx,BYTE PTR ds:[rsi]
   14000838c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000838d:	rex.WRXB fisubr DWORD PTR [r10-0x2d]
   140008391:	push   0x75
   140008393:	push   0x49243ab5
   140008398:	rex.WX xchg rdx,rax
   14000839a:	sub    BYTE PTR [rsp+rcx*2+0x6b41cf9c],dl
   1400083a1:	je     0x1400083a3
   1400083a3:	(bad)  
   1400083a4:	fistp  WORD PTR [rbx+0x358166c7]
   1400083aa:	(bad)  
   1400083ab:	loope  0x1400083c6
   1400083ad:	mov    ecx,DWORD PTR [rip+0xffffffffe0a084be]        # 0x120a10871
   1400083b3:	shl    DWORD PTR [rbx],1
   1400083b5:	(bad)  
   1400083b6:	mov    bl,bh
   1400083b8:	add    BYTE PTR [rcx+0x5b6bed3b],al
   1400083be:	imul   ebx,ebx,0x42
   1400083c1:	mov    BYTE PTR [rcx],dl
   1400083c3:	lock add esi,0x3d82c37e
   1400083ca:	mov    esp,0x2f8be2f2
   1400083cf:	pop    rsi
   1400083d0:	(bad)  
   1400083d1:	cs js  0x140008414
   1400083d4:	fadd   DWORD PTR [rbx]
   1400083d6:	mov    al,0xbe
   1400083d9:	adc    BYTE PTR [rdx-0x29],ah
   1400083dc:	jg     0x1400083fd
   1400083de:	add    edi,DWORD PTR [rbx+0x42]
   1400083e1:	mov    cl,ch
   1400083e3:	push   rbx
   1400083e4:	rex.WRXB cmp rax,0xfffffffffe5c76b5
   1400083ea:	add    BYTE PTR [rbp+rcx*1+0x0],ah
   1400083ee:	(bad)  
   1400083ef:	nop
   1400083f0:	(bad)  
   1400083f2:	popf   
   1400083f3:	fild   QWORD PTR [rcx-0x6b]
   1400083f6:	pop    rdx
   1400083f7:	jg     0x1400083a9
   1400083f9:	(bad)  
   1400083fa:	std    
   1400083fb:	mov    ebp,0xa14a25b2
   140008400:	lods   eax,DWORD PTR ds:[rsi]
   140008401:	out    0xd6,al
   140008403:	lods   eax,DWORD PTR ds:[rsi]
   140008404:	sub    DWORD PTR [rbp-0x67],esp
   140008407:	(bad)  
   140008408:	rex.RB loope 0x140008477
   14000840b:	jl     0x140008447
   14000840d:	sbb    BYTE PTR [rbx+0x5c88f5c8],ch
   140008413:	(bad)  
   140008414:	sub    BYTE PTR [rbx-0x27e7fe92],0xc5
   14000841b:	(bad)  
   14000841c:	outs   dx,DWORD PTR ds:[rsi]
   14000841d:	sbb    BYTE PTR [rax],sil
   140008420:	and    eax,0xf4d08050
   140008425:	cmp    eax,DWORD PTR [rdi+0x7487db74]
   14000842b:	cmp    esi,DWORD PTR [rbx+0x7a]
   14000842e:	popf   
   14000842f:	cmp    ebx,eax
   140008431:	fisub  WORD PTR [rcx]
   140008433:	mov    ebp,0x276e8cf6
   140008438:	jrcxz  0x14000841e
   14000843a:	rex.WRX (bad) 
   14000843c:	popf   
   14000843d:	in     eax,dx
   14000843e:	add    DWORD PTR [rbx],ebx
   140008440:	sbb    ebx,DWORD PTR [rip+0xffffffffd83736b6]        # 0x11837bafc
   140008446:	(bad)  
   140008448:	movabs ds:0xdedd218d8321fd7,al
   140008451:	rex.W push rsp
   140008453:	mov    dl,BYTE PTR [rdx+rcx*4+0x24]
   140008457:	icebp  
   140008458:	adc    DWORD PTR [rdx],ecx
   14000845a:	movsxd ebx,DWORD PTR [rcx+rbx*4+0x1a9efe01]
   140008461:	retf   0x92cc
   140008464:	out    dx,eax
   140008465:	loopne 0x140008454
   140008467:	add    al,0x51
   14000846a:	mov    edi,0xd6b7d025
   14000846f:	test   BYTE PTR [rbp+0x2a8ee710],0x8b
   140008476:	xor    esi,DWORD PTR [rbx]
   140008478:	rex.WX call FWORD PTR [rcx]
   14000847b:	add    esp,edi
   14000847d:	pop    rdi
   14000847e:	jp     0x140008469
   140008480:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140008481:	stos   DWORD PTR es:[rdi],eax
   140008482:	rcr    BYTE PTR [rbx-0x4873b3d4],0x80
   140008489:	(bad)  
   14000848a:	add    BYTE PTR [rbx],0x21
   14000848d:	(bad)  
   14000848e:	cld    
   14000848f:	jge    0x140008480
   140008491:	jnp    0x140008472
   140008493:	(bad)  
   140008494:	rex.WRB fadd QWORD PTR [r15]
   140008497:	pop    rcx
   140008498:	add    eax,eax
   14000849a:	xor    DWORD PTR [rbp+riz*1+0x49],eax
   14000849e:	xlat   BYTE PTR ds:[rbx]
   14000849f:	push   0xfffffffffffffffd
   1400084a1:	push   rax
   1400084a2:	(bad)  
   1400084a3:	js     0x1400084e8
   1400084a5:	mov    WORD PTR [rdi+0x29],ds
   1400084a8:	mov    WORD PTR [rsi],gs
   1400084aa:	mov    ecx,0x368c737e
   1400084af:	fwait
   1400084b0:	mov    esi,0x16e5074
   1400084b5:	ret    0x2d7a
   1400084b8:	mov    ebp,eax
   1400084ba:	mov    edx,0x122060f0
   1400084bf:	call   QWORD PTR [rcx-0x67dfebe0]
   1400084c5:	xchg   esp,eax
   1400084c6:	or     DWORD PTR [rbx-0x38273dbe],edx
   1400084cc:	add    al,0x64
   1400084ce:	xchg   BYTE PTR [rax+0x5272251a],dl
   1400084d4:	xor    eax,0xd2ee9da1
   1400084d9:	rex.WRX (bad) 
   1400084db:	je     0x140008537
   1400084dd:	xchg   DWORD PTR [rbx+rdi*2],ecx
   1400084e0:	mov    bh,0x18
   1400084e2:	or     eax,0x737a0ce6
   1400084e7:	jbe    0x14000849f
   1400084e9:	pop    rdx
   1400084ea:	in     al,dx
   1400084eb:	ins    BYTE PTR es:[rdi],dx
   1400084ec:	neg    DWORD PTR [rax]
   1400084ee:	neg    bl
   1400084f0:	ins    BYTE PTR es:[rdi],dx
   1400084f1:	ins    DWORD PTR es:[rdi],dx
   1400084f2:	outs   dx,DWORD PTR ds:[rsi]
   1400084f3:	mov    al,0xb5
   1400084f5:	cmp    DWORD PTR [rax+rsi*1+0x18],esp
   1400084f9:	mov    dl,0x31
   1400084fb:	sbb    cl,dl
   1400084fd:	sbb    ebp,DWORD PTR [rax+rdx*4+0x24]
   140008501:	sub    eax,0x396ad5a
   140008506:	(bad)  
   140008507:	outs   dx,DWORD PTR ds:[rsi]
   140008508:	es pop rax
   14000850a:	rcr    BYTE PTR [rax],0x1f
   14000850d:	mov    dl,0x14
   14000850f:	xchg   edx,eax
   140008510:	(bad)
   140008513:	call   0x17cce9a5c
   140008518:	(bad)  
   140008519:	and    eax,0x556fb51c
   14000851e:	fnstcw WORD PTR [rbx]
   140008520:	in     al,dx
   140008521:	push   rbx
   140008522:	rex.X or BYTE PTR [rip+0x718071b4],al        # 0x1b180f6dd
   140008529:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000852a:	add    DWORD PTR [rax],edx
   14000852c:	loopne 0x14000856e
   14000852e:	(bad)
   140008533:	mov    esi,0x6fcbf2fc
   140008538:	loope  0x14000854c
   14000853a:	mov    dl,0x2e
   14000853c:	or     esp,DWORD PTR [rcx]
   14000853e:	add    DWORD PTR cs:[rdi],ebp
   140008541:	add    edx,edi
   140008543:	sub    esp,0x589e2789
   140008549:	(bad)  
   14000854a:	retf   
   14000854b:	mov    eax,0xc0035947
   140008550:	xor    DWORD PTR [rcx+rdx*2],esp
   140008553:	(bad)  
   140008554:	rex.WR test rax,0xffffffffe3c43f75
   14000855a:	add    ecx,DWORD PTR [rbx]
   14000855c:	adc    BYTE PTR [rdx+0x60],al
   14000855f:	mov    ecx,fs
   140008561:	retf   0xdbd5
   140008564:	push   0xffffffffd98f73b3
   140008569:	adc    eax,0x42660771
   14000856e:	loopne 0x14000858f
   140008570:	adc    BYTE PTR [rax],ah
   140008572:	mov    ch,0xdb
   140008574:	rex.RX loop 0x140008578
   140008577:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140008578:	out    0xc3,eax
   14000857a:	jnp    0x140008506
   14000857c:	push   rdx
   14000857d:	(bad)  
   14000857e:	int3   
   14000857f:	mov    ah,0x84
   140008581:	mov    ecx,0x2adc8bf
   140008586:	rex.R
   140008587:	rex.WRX movabs ds:0x5a74fb2768c89472,al
   140008591:	jnp    0x140008587
   140008593:	pop    rdx
   140008594:	(bad)  
   140008595:	or     al,0x7a
   140008597:	xlat   BYTE PTR ds:[rbx]
   140008598:	sbb    esi,esi
   14000859a:	(bad)  
   14000859b:	mov    bl,0xd1
   14000859d:	fwait
   14000859e:	mov    cl,0xb3
   1400085a0:	sub    eax,ebx
   1400085a2:	fisubr DWORD PTR [rbx+rsi*1+0x1a]
   1400085a6:	neg    cl
   1400085a8:	fcomp  QWORD PTR [rax+rsi*4]
   1400085ab:	mov    bl,0xbd
   1400085ad:	leave  
   1400085ae:	jo     0x140008553
   1400085b0:	iret   
   1400085b1:	push   0x3468c1b4
   1400085b6:	rex
   1400085b7:	rex.WX mov QWORD PTR [rdx+0x9],rdx
   1400085bb:	rex.X mov bpl,0x91
   1400085be:	xor    al,BYTE PTR [rcx+0x48]
   1400085c1:	adc    DWORD PTR [rdx-0x73b5bdd7],0xc41815b1
   1400085cb:	rex.WRX enter 0x4f95,0x75
   1400085d0:	(bad)  
   1400085d1:	adc    BYTE PTR [rax-0x2b],dh
   1400085d4:	div    BYTE PTR [rsi+0xc050e4c]
   1400085da:	and    DWORD PTR [rcx+0x15c9f6b5],0xe053100
   1400085e4:	sub    DWORD PTR [rbx],0xeafabeaf
   1400085ea:	jns    0x140008628
   1400085ec:	cmp    al,ah
   1400085ee:	jl     0x140008602
   1400085f0:	scas   eax,DWORD PTR es:[rdi]
   1400085f1:	jrcxz  0x1400085cb
   1400085f3:	(bad)  
   1400085f4:	or     al,0x28
   1400085f6:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400085f7:	xchg   esp,eax
   1400085f8:	(bad)
   1400085fb:	cmp    eax,0xb0668eb6
   140008600:	(bad)  
   140008601:	and    BYTE PTR [rbx+0x49],0x91
   140008605:	out    0x3f,eax
   140008607:	and    eax,0x60ab6885
   14000860c:	add    al,BYTE PTR [rax]
   14000860e:	or     BYTE PTR [rcx-0x1b3675ae],al
   140008614:	nop
   140008615:	fstp   TBYTE PTR [rbx-0x70b551e7]
   14000861b:	jb     0x1400085cc
   14000861d:	sbb    eax,0x99b28257
   140008622:	(bad)  
   140008623:	pop    rdx
   140008624:	mov    dl,dl
   140008626:	mov    cl,0x5
   140008628:	add    BYTE PTR [rdx-0x59],al
   14000862b:	fldenv [rcx-0x6d4b5edc]
   140008631:	sub    al,0x57
   140008633:	sbb    al,0xe4
   140008635:	(bad)  
   140008636:	(bad)  
   140008637:	jbe    0x14000866e
   140008639:	mov    BYTE PTR [rdx],al
   14000863b:	sub    DWORD PTR [rbx-0x5c],ecx
   14000863e:	sub    BYTE PTR [rcx+0x272a4e62],dl
   140008644:	and    al,0x6a
   140008646:	rex.WX (bad) 
   140008648:	sub    eax,0xfa4bb4e8
   14000864d:	fstp   QWORD PTR [rbx+0x30aef46c]
   140008653:	sbb    dl,BYTE PTR [rsp+rcx*4-0x3ca4dafa]
   14000865a:	mov    WORD PTR [rbp+0x7bf430d],gs
   140008660:	mov    ebp,0x6830628e
   140008665:	mov    bl,0x39
   140008667:	fisub  DWORD PTR [rax+0x1a30183f]
   14000866d:	ins    DWORD PTR es:[rdi],dx
   14000866e:	mov    cl,0xb1
   140008670:	mov    cl,0x49
   140008672:	xchg   edx,eax
   140008673:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140008674:	xchg   rbp,rax
   140008676:	loopne 0x1400086aa
   140008678:	and    DWORD PTR [rip+0x343ee7d6],eax        # 0x1743f6e54
   14000867e:	add    DWORD PTR [rdx-0x490e0f57],esp
   140008684:	clc    
   140008685:	not    DWORD PTR [rcx+0x0]
   140008688:	jno    0x1400086de
   14000868a:	mov    ecx,0x80f5f623
   14000868f:	(bad)  
   140008690:	jo     0x14000869c
   140008692:	clc    
   140008693:	jo     0x140008638
   140008695:	mov    QWORD PTR [rbx],rax
   140008698:	mov    BYTE PTR [rcx],bl
   14000869a:	mov    al,0x67
   14000869c:	lods   eax,DWORD PTR ds:[rsi]
   14000869d:	mov    ebp,0x6f1bc6f5
   1400086a2:	mov    WORD PTR [rbp-0x77bd78f0],es
   1400086a8:	fild   DWORD PTR [rdx-0x78]
   1400086ab:	jge    0x140008649
   1400086ad:	lahf   
   1400086ae:	loop   0x1400086dd
   1400086b0:	sub    ebp,esp
   1400086b2:	fwait
   1400086b3:	sar    BYTE PTR [rcx-0x41],0x7d
   1400086b7:	jb     0x1400086a7
   1400086b9:	fdivr  QWORD PTR [rcx]
   1400086bb:	ret    
   1400086bc:	lahf   
   1400086bd:	movsxd ebx,DWORD PTR [rcx+0x3]
   1400086c0:	shl    BYTE PTR [rcx],0x44
   1400086c3:	sar    BYTE PTR [rbx-0x5c],0x94
   1400086c7:	rex.W lahf 
   1400086c9:	(bad)  
   1400086ca:	sbb    edi,ebx
   1400086cc:	add    BYTE PTR [rsi],cl
   1400086ce:	cmpxchg8b QWORD PTR [rsi+riz*2+0x12]
   1400086d3:	lods   al,BYTE PTR ds:[rsi]
   1400086d4:	jp     0x1400086ed
   1400086d6:	repz sub ecx,DWORD PTR [rip+0xffffffffc7040958]        # 0x107049035
   1400086dd:	popf   
   1400086de:	(bad)  
   1400086df:	xor    edx,DWORD PTR [rax]
   1400086e1:	and    BYTE PTR [rdi+rbx*8-0x1ab63412],dh
   1400086e8:	mov    bh,0x3b
   1400086ea:	(bad)  
   1400086eb:	test   BYTE PTR [rcx+0x3722ac0a],dh
   1400086f1:	adc    dh,BYTE PTR [rsp+riz*2+0x2870133f]
   1400086f8:	rcr    BYTE PTR [rdx],0xef
   1400086fb:	or     BYTE PTR [rsp+rcx*2+0x42],dh
   1400086ff:	leave  
   140008700:	sub    DWORD PTR [rcx-0x395c5bc6],ecx
   140008706:	je     0x140008762
   140008708:	sti    
   140008709:	mov    WORD PTR [rdx-0x49],?
   14000870c:	fcomp  st(2)
   14000870e:	mov    eax,0x12e0d6c9
   140008713:	fwait
   140008714:	sbb    ebx,DWORD PTR [rdx+0x27042733]
   14000871a:	rex.WRXB je 0x140008736
   14000871d:	outs   dx,BYTE PTR ds:[rsi]
   14000871e:	je     0x1400086f9
   140008720:	ficomp WORD PTR [rdx]
   140008722:	xor    bl,BYTE PTR [rsi+rsi*8]
   140008725:	jmp    0x1460d42a0
   14000872a:	add    edi,edx
   14000872c:	std    
   14000872d:	and    DWORD PTR [rdx+0x25],edx
   140008730:	test   rax,0x21049248
   140008736:	pop    rsp
   140008737:	fiadd  WORD PTR [rbx+0x45130631]
   14000873d:	sub    ebp,esi
   14000873f:	(bad)  
   140008740:	and    bl,BYTE PTR [rdx-0x3bfea91b]
   140008746:	xor    DWORD PTR [rbp-0x6d],ecx
   140008749:	or     BYTE PTR [rcx],r14b
   14000874c:	(bad)  
   14000874d:	xor    DWORD PTR [rax-0x40a2b82d],ecx
   140008753:	loope  0x14000870d
   140008755:	pushf  
   140008756:	add    BYTE PTR [rdi-0x1a8d46a4],ch
   14000875c:	sub    eax,0xaaf2e39c
   140008761:	adc    dl,ah
   140008763:	sti    
   140008764:	ficomp WORD PTR [rdi]
   140008766:	jno    0x1400087c1
   140008768:	or     BYTE PTR [rcx-0x361b0d81],dh
   14000876e:	(bad)  
   14000876f:	sti    
   140008770:	mov    al,0xe7
   140008772:	sbb    al,BYTE PTR [rax]
   140008774:	mov    fs,WORD PTR [rcx]
   140008776:	push   rdx
   140008777:	test   eax,0xe5a7c107
   14000877c:	add    cl,BYTE PTR [rax]
   14000877e:	add    DWORD PTR [rip+0x49800054],0xdf95eb89        # 0x1898087dc
   140008788:	imul   esp,DWORD PTR [rdi-0xe7be7ef],0xe7bb7be7
   140008792:	or     dl,0xbc
   140008795:	or     bl,bl
   140008797:	test   al,dh
   140008799:	or     al,0xc2
   14000879b:	sti    
   14000879c:	(bad)  
   14000879d:	lods   al,BYTE PTR ds:[rsi]
   14000879e:	add    cl,dl
   1400087a0:	add    dl,cl
   1400087a2:	add    DWORD PTR [rdx+rbx*1],esp
   1400087a5:	add    DWORD PTR [rsi],0x9fd92d32
   1400087ab:	or     DWORD PTR [rsi-0x4729791b],ebp
   1400087b1:	movabs al,ds:0x9adcec17e8d9ced7
   1400087ba:	xor    DWORD PTR [rdx+0x7746c870],edi
   1400087c0:	rex.X mov edi,0x3bc0c073
   1400087c6:	sub    al,0x3b
   1400087c8:	jmp    0xccdd8df2
   1400087cd:	lea    eax,[rcx+0x184ddfa0]
   1400087d3:	(bad)  
   1400087d4:	sti    
   1400087d5:	or     al,0x7a
   1400087d7:	sbb    eax,0x830ebd7a
   1400087dc:	inc    BYTE PTR [rax+0x2108e18d]
   1400087e2:	adc    eax,0x5448492a
   1400087e7:	(bad)  
   1400087e8:	nop
   1400087e9:	retf   0xa7e1
   1400087ec:	mov    ch,0x18
   1400087ee:	mov    ebx,0x58a3e050
   1400087f3:	rex.R in eax,dx
   1400087f5:	leave  
   1400087f6:	mov    ?,WORD PTR [rax]
   1400087f8:	sbb    eax,0xc4626b8e
   1400087fd:	adc    ch,BYTE PTR [rsi+0x42918c6d]
   140008803:	mov    BYTE PTR [rsi],bh
   140008805:	rol    bh,1
   140008807:	mov    cl,0x89
   140008809:	lahf   
   14000880a:	imul   ebx,DWORD PTR [rbx+rsi*1-0x3f9bbde9],0xde6f375b
   140008815:	jl     0x140008822
   140008817:	addr32 (bad) 
   140008819:	pushf  
   14000881a:	xchg   edi,eax
   14000881b:	push   rdx
   14000881c:	mov    esi,0x8021c1ee
   140008821:	(bad)  
   140008824:	sbb    al,0xfe
   140008826:	enter  0x199b,0x6b
   14000882a:	add    BYTE PTR [rax-0x302206b9],bh
   140008830:	jge    0x140008880
   140008832:	sbb    BYTE PTR [rbx-0x22],ah
   140008835:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140008836:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140008837:	je     0x140008882
   140008839:	rex fisub WORD PTR [rbx+0x521012e]
   140008840:	jnp    0x1400088bd
   140008842:	(bad)  
   140008843:	mov    WORD PTR [rdi],cs
   140008845:	adc    ebp,esi
   140008847:	lods   eax,DWORD PTR ds:[rsi]
   140008848:	outs   dx,DWORD PTR ds:[rsi]
   140008849:	cmp    eax,DWORD PTR [rdx-0x54]
   14000884c:	out    dx,eax
   14000884d:	rol    ebx,0xff
   140008850:	ja     0x1400088af
   140008852:	mov    WORD PTR [rdi],es
   140008854:	add    ecx,DWORD PTR [rip+0xcace748]        # 0x14cad6fa2
   14000885a:	(bad)  
   14000885b:	(bad)  
   14000885c:	add    ah,BYTE PTR [rcx]
   14000885e:	rex.B leave 
   140008860:	xchg   esp,eax
   140008861:	push   rsi
   140008862:	mov    ebx,0xd11dd245
   140008867:	out    dx,al
   140008868:	or     edi,DWORD PTR [rdx]
   14000886a:	and    eax,DWORD PTR [rbp-0x45]
   14000886d:	shrd   DWORD PTR [rsi],ebx,cl
   140008870:	test   al,0xb6
   140008872:	and    eax,0x25052597
   140008877:	sti    
   140008878:	mov    edx,0x8278c6e0
   14000887d:	sbb    al,0x8f
   14000887f:	ror    esp,0x10
   140008882:	jbe    0x1400088d0
   140008884:	rex.WXB mov cs,WORD PTR [r9+0x55]
   140008888:	rex.WRX cmp r15,QWORD PTR [rcx-0x728a44b3]
   14000888f:	jle    0x1400088a8
   140008891:	cli    
   140008892:	mov    ebp,0x8751cd84
   140008897:	pop    r15
   140008899:	ror    DWORD PTR [rsi+0x2d],1
   14000889c:	lods   eax,DWORD PTR ds:[rsi]
   14000889d:	xchg   esi,eax
   14000889e:	movabs ds:0x5c4d2484d2b452dd,al
   1400088a7:	cwde   
   1400088a8:	xor    ebp,DWORD PTR [rbp+0x39]
   1400088ab:	(bad)  
   1400088ac:	movabs eax,ds:0x59f9a24c569a5412
   1400088b5:	push   rsp
   1400088b6:	fwait
   1400088b7:	push   rbx
   1400088b8:	out    dx,al
   1400088b9:	cwde   
   1400088ba:	sbb    DWORD PTR [rdi+rsi*8],esi
   1400088bd:	xor    eax,0xb1df87bf
   1400088c2:	xor    al,0x81
   1400088c4:	and    al,0xde
   1400088c6:	(bad)  
   1400088c7:	or     DWORD PTR [rbx-0x35],0x3e02db5a
   1400088ce:	or     BYTE PTR [rax+rsi*1+0x6],bh
   1400088d2:	sub    eax,0xb1c58421
   1400088d7:	xchg   DWORD PTR [rbx-0x40],ebx
   1400088da:	(bad)
   1400088dd:	or     DWORD PTR [rbx-0x3ff435ae],0x15
   1400088e4:	outs   dx,DWORD PTR ds:[rsi]
   1400088e5:	outs   dx,BYTE PTR ds:[rsi]
   1400088e6:	sbb    al,0x0
   1400088e8:	mov    ebx,0x9038e4de
   1400088ed:	push   rdx
   1400088ee:	out    dx,al
   1400088ef:	jrcxz  0x1400088b3
   1400088f1:	sahf   
   1400088f2:	pop    rcx
   1400088f3:	stos   DWORD PTR es:[rdi],eax
   1400088f4:	(bad)  
   1400088f5:	cli    
   1400088f6:	movabs eax,ds:0x6a528f7000d72e38
   1400088ff:	fisttp QWORD PTR [rcx-0x6c]
   140008902:	jp     0x1400088ce
   140008904:	pop    rdx
   140008905:	mov    ecx,DWORD PTR [rdx+0x12]
   140008908:	rex.WR pop rcx
   14000890a:	mov    edx,0xd14d3fde
   14000890f:	pop    rdx
   140008910:	jae    0x140008907
   140008912:	fisubr DWORD PTR [rip+0xffffffff97d0d966]        # 0xd7d1627e
   140008918:	mov    esi,0xcaf01817
   14000891d:	lods   ax,WORD PTR ds:[rsi]
   14000891f:	push   rdi
   140008920:	mov    esp,0xd754901f
   140008925:	mov    eax,DWORD PTR [rsi+0x1d]
   140008928:	lods   al,BYTE PTR ds:[rsi]
   140008929:	add    al,0x1c
   14000892b:	(bad)  
   14000892c:	ds rex.B
   14000892e:	rex.WB
   14000892f:	rex.XB (bad) 
   140008931:	or     BYTE PTR [rdx-0x79293293],bh
   140008937:	loop   0x1400088ba
   140008939:	xchg   ebx,eax
   14000893a:	xchg   esi,eax
   14000893b:	adc    ebx,DWORD PTR [rbx-0x7e]
   14000893e:	int    0x21
   140008940:	ins    BYTE PTR es:[rdi],dx
   140008941:	ins    BYTE PTR es:[rdi],dx
   140008942:	or     dl,dl
   140008944:	and    al,0xc5
   140008946:	xchg   edx,eax
   140008947:	movabs ds:0x94b3e8521ca29775,al
   140008950:	sbb    dh,dl
   140008952:	adc    cl,BYTE PTR [rdx-0x4cf2f5ee]
   140008958:	adc    cl,dl
   14000895a:	movabs ds:0x994c4b379415ecc4,al
   140008963:	and    ebp,ebp
   140008965:	cwde   
   140008966:	push   rsp
   140008967:	(bad)  
   140008968:	rex.W (bad) 
   14000896a:	pushf  
   14000896b:	outs   dx,BYTE PTR ds:[rsi]
   14000896c:	mov    edx,0x27dd374f
   140008971:	xchg   ebp,eax
   140008972:	jae    0x1400089ae
   140008974:	jmp    0x1a732e00d
   140008979:	rcl    BYTE PTR [rbx+0x6c],1
   14000897c:	or     al,0x5a
   14000897e:	or     al,0xfa
   140008980:	pop    rbp
   140008981:	jp     0x140008960
   140008983:	cs in  eax,dx
   140008985:	rex.WRX
   140008986:	fwait
   140008987:	shl    DWORD PTR [rax+0x48],0x7f
   14000898b:	xor    BYTE PTR [rax],ah
   14000898d:	rex.WB sbb al,0x28
   140008990:	and    al,0x49
   140008992:	(bad)  
   140008993:	push   rdx
   140008994:	or     esi,edx
   140008996:	sbb    dh,BYTE PTR [rsi+rsi*1-0x47fa4db9]
   14000899d:	jae    0x140008943
   14000899f:	and    bh,ah
   1400089a1:	setns  BYTE PTR [rax-0x876dfb3]
   1400089a8:	sbb    eax,0x2e308be5
   1400089ad:	in     eax,0x5b
   1400089af:	sub    QWORD PTR [rbx-0x4f5e1dd1],rax
   1400089b6:	pop    rbp
   1400089b7:	cli    
   1400089b8:	adc    al,0xf0
   1400089ba:	call   0x12108e49b
   1400089bf:	jrcxz  0x14000897f
   1400089c1:	rex.WR or rbx,0x115c5145
   1400089c8:	rex.X mov esp,0x97146384
   1400089ce:	jl     0x140008986
   1400089d0:	in     eax,0xcb
   1400089d2:	(bad)  
   1400089d3:	cs pop rsp
   1400089d5:	cmp    BYTE PTR [rax-0x1c],bh
   1400089d8:	xchg   ecx,eax
   1400089d9:	rex.RXB fidiv WORD PTR [r13+0x6b9ed1]
   1400089e0:	mov    eax,0xdbb56947
   1400089e5:	(bad)  
   1400089e6:	xor    BYTE PTR [rsi+0x47],ah
   1400089e9:	js     0x140008992
   1400089eb:	lahf   
   1400089ec:	cmc    
   1400089ed:	jns    0x1400089eb
   1400089ef:	and    edi,esp
   1400089f1:	jmp    rsi
   1400089f3:	int    0x5d
   1400089f5:	(bad)
   1400089fb:	sbb    bh,BYTE PTR gs:[rdi-0x59]
   1400089ff:	fdivr  QWORD PTR [rbx+0x6b8d29fb]
   140008a05:	push   rsp
   140008a06:	retf   0x36fd
   140008a09:	scas   eax,DWORD PTR es:[rdi]
   140008a0a:	out    dx,eax
   140008a0b:	xchg   BYTE PTR [rax],dl
   140008a0d:	nop
   140008a0e:	sub    BYTE PTR [rcx-0x59],al
   140008a11:	add    eax,ebx
   140008a13:	or     eax,0x9f74d9d8
   140008a18:	lods   eax,DWORD PTR ds:[rsi]
   140008a19:	adc    DWORD PTR [rsp+rbx*4+0x6b0c301f],esi
   140008a20:	movabs al,ds:0xff71b5f942cda034
   140008a29:	repz xor ah,BYTE PTR [rcx+0x40da09d0]
   140008a30:	pop    rsi
   140008a31:	rex pop rsi
   140008a33:	out    dx,al
   140008a34:	mov    eax,0x141c0532
   140008a39:	mov    al,0x67
   140008a3b:	rex.WX
   140008a3c:	rex.WR test rax,0xffffffff8a19f391
   140008a42:	or     DWORD PTR [rdx+0x77],ebp
   140008a45:	(bad)  
   140008a46:	loop   0x1400089d8
   140008a48:	xchg   esi,eax
   140008a49:	mov    eax,0xd21d4745
   140008a4e:	rex.WRX (bad) 
   140008a50:	hlt    
   140008a51:	pop    rdx
   140008a52:	xchg   edi,eax
   140008a53:	jmp    0xceddc3fc
   140008a58:	movabs al,ds:0x6dba74fa0e194bdf
   140008a61:	cmp    ch,ch
   140008a63:	(bad)  
   140008a64:	sbb    eax,ebx
   140008a66:	and    ebp,ebx
   140008a68:	outs   dx,BYTE PTR ds:[rsi]
   140008a69:	lahf   
   140008a6a:	push   rsi
   140008a6b:	retf   
   140008a6c:	mov    cl,0x7
   140008a6e:	xchg   ebp,eax
   140008a6f:	and    al,0x28
   140008a71:	jmp    0x17746bc72
   140008a76:	(bad)  
   140008a77:	push   0xffffffffc2b5b5c5
   140008a7c:	scas   eax,DWORD PTR es:[rdi]
   140008a7d:	mov    al,0x54
   140008a7f:	add    eax,0x32777d8d
   140008a84:	cmp    DWORD PTR [rsi-0x63],edx
   140008a87:	ret    
   140008a88:	add    r15d,DWORD PTR [rcx-0x529a8684]
   140008a8f:	push   rbp
   140008a90:	(bad)  
   140008a91:	cwde   
   140008a92:	mov    dh,0x94
   140008a94:	jb     0x140008af6
   140008a96:	lods   eax,DWORD PTR ds:[rsi]
   140008a97:	cmp    eax,0xf014fc05
   140008a9c:	mov    esp,ecx
   140008a9e:	pop    rdx
   140008a9f:	rex.X or BYTE PTR [rbx],al
   140008aa2:	rex.WR (bad) 
   140008aa4:	jrcxz  0x140008a97
   140008aa6:	in     eax,0xaf
   140008aa8:	jge    0x140008a97
   140008aaa:	imul   edi,DWORD PTR [rdi-0x14a9521],0xffffffd9
   140008ab1:	ror    DWORD PTR [rdi+0x3f],cl
   140008ab4:	jge    0x140008a97
   140008ab6:	js     0x140008ae7
   140008ab8:	out    dx,eax
   140008ab9:	out    dx,al
   140008aba:	mov    dl,0x6
   140008abc:	cmp    BYTE PTR [rbx+0x14],0xa3
   140008ac0:	cmc    
   140008ac1:	jnp    0x140008a67
   140008ac3:	adc    ch,ch
   140008ac5:	and    al,0x49
   140008ac7:	nop
   140008ac8:	push   rdx
   140008ac9:	and    ah,BYTE PTR [rbp-0x6d74a4bc]
   140008acf:	adc    ch,BYTE PTR [rsi+riz*8+0x4a038dfa]
   140008ad6:	jge    0x140008a72
   140008ad8:	stos   BYTE PTR es:[rdi],al
   140008ad9:	imul   DWORD PTR [rdi-0xa]
   140008adc:	stos   BYTE PTR es:[rdi],al
   140008add:	out    dx,eax
   140008ade:	lods   eax,DWORD PTR ss:[rsi]
   140008ae0:	mov    bh,0x81
   140008ae2:	(bad)  
   140008ae3:	(bad)  
   140008ae4:	xlat   BYTE PTR ds:[rbx]
   140008ae5:	mov    edi,0xd254177f
   140008aea:	sub    DWORD PTR [rbx-0x41],edi
   140008aed:	add    eax,ebx
   140008aef:	add    DWORD PTR [rbp+rcx*1+0x61],ebp
   140008af3:	addr32 add al,0xed
   140008af6:	ss sub ch,ah
   140008af9:	cs addr32 xor al,0x68
   140008afd:	or     eax,esi
   140008aff:	cmp    al,BYTE PTR [rax]
   140008b01:	rcr    BYTE PTR [rsi],1
   140008b03:	or     al,0xb4
   140008b05:	jbe    0x140008b27
   140008b07:	push   rax
   140008b08:	cli    
   140008b09:	std    
   140008b0a:	add    DWORD PTR [rdx+rcx*2],ebx
   140008b0d:	sbb    eax,0x4eb401c0
   140008b12:	sub    BYTE PTR [rdx+rax*2+0x56],cl
   140008b16:	mov    ah,0x29
   140008b18:	cmc    
   140008b19:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140008b1a:	fistp  DWORD PTR [rdi-0x3e]
   140008b1d:	(bad)  
   140008b1e:	or     DWORD PTR [rbx-0x5d],esp
   140008b21:	mov    cl,0xba
   140008b23:	test   cl,ch
   140008b25:	pushf  
   140008b26:	xchg   esp,eax
   140008b27:	rex.XB (bad) 
   140008b29:	rol    DWORD PTR [rax*8+0x45b8b694],0x4b
   140008b31:	sbb    al,0xd2
   140008b33:	rex.WRX imul cl
   140008b36:	mov    ch,0xae
   140008b38:	ror    DWORD PTR [rdx+0x32],cl
   140008b3b:	fisubr DWORD PTR [rcx]
   140008b3d:	or     al,0x7a
   140008b3f:	ins    DWORD PTR es:[rdi],dx
   140008b40:	xchg   BYTE PTR [rbx],bl
   140008b42:	cmp    eax,0x6e949d3a
   140008b47:	mov    bh,0xcd
   140008b49:	jo     0x140008bae
   140008b4b:	mov    dil,0xdb
   140008b4e:	movabs ds:0x42112168b4b8eedd,eax
   140008b57:	and    al,BYTE PTR [rbp-0x36c64c0c]
   140008b5d:	stos   BYTE PTR es:[rdi],al
   140008b5e:	xchg   edi,eax
   140008b5f:	or     al,BYTE PTR ds:[rdx+riz*2]
   140008b63:	gs (bad) 
   140008b66:	frstor [rdx+rax*1+0x61]
   140008b6a:	pop    rdi
   140008b6b:	sbb    BYTE PTR [rdx+0x4efe3cdd],bh
   140008b71:	mov    esi,0x23001589
   140008b76:	mov    ch,0xd6
   140008b78:	sbb    esp,edi
   140008b7a:	iret   
   140008b7b:	lahf   
   140008b7c:	jg     0x140008bf0
   140008b7e:	ja     0x140008bf7
   140008b80:	test   ecx,0xea7a9ea7
   140008b86:	addr32 mov edi,0xfc6f8df1
   140008b8c:	(bad)  
   140008b8d:	rex.WRXB (bad) 
   140008b8f:	std    
   140008b90:	hlt    
   140008b91:	or     esi,edi
   140008b93:	jmp    0x1406b8e2d
   140008b98:	mov    eax,0x7f5a3167
   140008b9d:	rex
   140008b9e:	sub    QWORD PTR [rbp+0x4a55a94f],rsp
   140008ba5:	mov    ecx,0xfb14ad97
   140008baa:	sti    
   140008bab:	mov    bh,0xb9
   140008bad:	mov    ebp,0x8ecac927
   140008bb2:	add    BYTE PTR [ebx],ch
   140008bb5:	(bad)  
   140008bb6:	(bad)  
   140008bb7:	fsubr  QWORD PTR [rdi+0x28c1613b]
   140008bbd:	loopne 0x140008b9c
   140008bbf:	movsxd edx,DWORD PTR [rip+0xffffffffb11b8b06]        # 0xf11c16cb
   140008bc5:	sbb    BYTE PTR [rsi],al
   140008bc7:	sub    ecx,DWORD PTR [rbx+0x1]
   140008bca:	imul   ecx,DWORD PTR [rdx],0xfa0c36dd
   140008bd0:	xor    BYTE PTR [rdx],bl
   140008bd2:	cmp    al,BYTE PTR [rax+0x50]
   140008bd5:	push   0xffffffffffffff91
   140008bd7:	sbb    BYTE PTR [rcx-0x44],ch
   140008bda:	rex.RB (bad) 
   140008bdc:	or     al,0x94
   140008bde:	(bad)  
   140008bdf:	jnp    0x140008be1
   140008be1:	add    ah,BYTE PTR [rbx-0x24]
   140008be4:	(bad)  
   140008be5:	shr    BYTE PTR [rbx],cl
   140008be7:	mov    edi,0x94318e31
   140008bec:	jp     0x140008baf
   140008bee:	(bad)  
   140008bef:	ret    0xd2be
   140008bf2:	add    BYTE PTR cs:[rdx+0x28d28a34],ah
   140008bf9:	repnz movabs ds:0xd284a2995547a14d,al
   140008c03:	pop    rax
   140008c04:	(bad)  
   140008c05:	(bad)  
   140008c06:	out    0xa6,al
   140008c08:	sub    DWORD PTR [rax],edx
   140008c0a:	xchg   BYTE PTR gs:[rax],ch
   140008c0d:	xor    cl,ah
   140008c0f:	cmp    BYTE PTR [rbx+0x5c],al
   140008c12:	popf   
   140008c13:	and    cl,BYTE PTR [rsi+rax*2+0x22]
   140008c17:	or     bh,BYTE PTR [rdx-0x17]
   140008c1a:	pushf  
   140008c1b:	outs   dx,BYTE PTR ds:[rsi]
   140008c1c:	jp     0x140008ba1
   140008c1e:	jbe    0x140008c72
   140008c20:	shr    BYTE PTR [rbx+0x69],cl
   140008c23:	cli    
   140008c24:	popf   
   140008c25:	xchg   edx,eax
   140008c26:	pop    rsi
   140008c27:	retf   
   140008c28:	ror    BYTE PTR [rdx+0x5],1
   140008c2b:	in     eax,dx
   140008c2c:	xchg   esi,eax
   140008c2d:	and    cl,BYTE PTR [rbp+0x14]
   140008c30:	rex.WX sub QWORD PTR [rdx],rdi
   140008c33:	popf   
   140008c34:	cs mov ebp,0xaf5e80fe
   140008c3a:	rex.WRXB stos QWORD PTR es:[rdi],rax
   140008c3c:	fnsave [rsi+0x26]
   140008c3f:	xchg   BYTE PTR [rdi+0x13],ah
   140008c42:	mov    cl,0x92
   140008c44:	(bad)  
   140008c45:	gs push rsi
   140008c47:	test   ch,ch
   140008c49:	ficomp WORD PTR [rax+rbp*4]
   140008c4c:	or     eax,0x43826aae
   140008c51:	clc    
   140008c52:	(bad)  
   140008c53:	(bad)  
   140008c54:	fild   WORD PTR [rdx+rax*4]
   140008c57:	cmp    al,0xcf
   140008c59:	(bad)  
   140008c5b:	fucom  st(5)
   140008c5d:	imul   ch
   140008c5f:	fistp  DWORD PTR [rsp+rdi*4+0x78]
   140008c63:	icebp  
   140008c64:	ret    
   140008c65:	(bad)  
   140008c67:	cld    
   140008c68:	lock out 0x9e,eax
   140008c6b:	jnp    0x140008c5b
   140008c6d:	mov    ecx,0xc7d8fe5f
   140008c72:	imul   BYTE PTR ds:[rbp-0x28690a05]
   140008c79:	add    BYTE PTR [rax-0x71],dh
   140008c7c:	movabs ds:0xee3e3d718c31e492,al
   140008c85:	test   DWORD PTR [rdx],ebp
   140008c87:	sub    DWORD PTR [rcx+0x52],edx
   140008c8a:	jb     0x140008cbc
   140008c8c:	fsubrp st(7),st
   140008c8e:	neg    BYTE PTR [rsi-0x21790640]
   140008c94:	mov    DWORD PTR [rsp+rbp*2],esi
   140008c97:	jae    0x140008d01
   140008c99:	hlt    
   140008c9a:	in     al,0xf7
   140008c9c:	leave  
   140008c9d:	push   rdi
   140008c9e:	adc    ah,bh
   140008ca0:	add    BYTE PTR [rip+0xffffffffa42ad876],dl        # 0xe42b651c
   140008ca6:	mov    ecx,0x3ee02318
   140008cab:	(bad)  
   140008cac:	cmp    dh,BYTE PTR [rdx-0x5f]
   140008caf:	mov    ebp,0x845d62f2
   140008cb4:	xor    DWORD PTR [rcx-0x30],edx
   140008cb7:	rex.WRX movabs rax,ds:0x3b8b0d93a92482d3
   140008cc1:	xor    WORD PTR [rax+0x4c6b1dc9],ax
   140008cc8:	std    
   140008cc9:	mov    ebx,0x2ec1c189
   140008cce:	fadd   DWORD PTR [rdx+0x60]
   140008cd1:	adc    DWORD PTR [rbp-0x47],esp
   140008cd4:	xor    BYTE PTR [rcx],ch
   140008cd6:	mov    WORD PTR [rdi],?
   140008cd8:	and    eax,0xae5ca8ca
   140008cdd:	imul   eax,DWORD PTR [r9-0x66baf64f],0x50
   140008ce5:	call   0x18a846718
   140008cea:	(bad)  
   140008ceb:	and    BYTE PTR [rbp+0x9],ah
   140008cee:	sti    
   140008cef:	and    eax,0xcd8d6aec
   140008cf4:	rex.WXB int3 
   140008cf6:	mov    esp,0x484dee40
   140008cfb:	(bad)  
   140008cfc:	test   BYTE PTR [rcx+rdi*1+0x5740791d],al
   140008d03:	out    dx,al
   140008d04:	xchg   ebx,eax
   140008d05:	xor    BYTE PTR [rdi-0x58167363],ah
   140008d0b:	(bad)  
   140008d0c:	push   0x22692525
   140008d11:	sbb    ah,dh
   140008d13:	mov    ebx,0x3a1dbb74
   140008d18:	in     eax,dx
   140008d19:	(bad)  
   140008d1a:	(bad)  [rsi-0x69]
   140008d1d:	(bad)  
   140008d1e:	(bad)  
   140008d1f:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   140008d21:	(bad)  [rcx-0x7d]
   140008d24:	mov    bh,0x92
   140008d26:	adc    al,0xa5
   140008d28:	pop    rsp
   140008d29:	mov    eax,0xab0f6633
   140008d2e:	and    BYTE PTR [rdx],0x96
   140008d31:	cwde   
   140008d32:	cmp    eax,0xa6fd7b34
   140008d37:	fbld   TBYTE PTR [rcx-0xc19f5d8]
   140008d3d:	cmp    DWORD PTR [rcx-0x6e],ecx
   140008d40:	jo     0x140008d27
   140008d42:	retf   0x8615
   140008d45:	ret    
   140008d46:	loope  0x140008d4b
   140008d48:	fwait
   140008d49:	fwait
   140008d4a:	fwait
   140008d4b:	dec    DWORD PTR [rbx]
   140008d4d:	lock imul esi,edi,0xffffffa7
   140008d51:	and    DWORD PTR [rcx+rax*1-0x253a2120],ebp
   140008d58:	rex.RXB
   140008d59:	rex.X ror BYTE PTR [rdi+0x10],cl
   140008d5d:	test   eax,0xe295214
   140008d62:	mov    DWORD PTR [rdi-0x29d273e4],0xc675e3ca
   140008d6c:	ret    0x30ba
   140008d6f:	pop    rsp
   140008d70:	rex.RB fucomip st,st(7)
   140008d73:	fcmovne st,st(5)
   140008d75:	push   rdx
   140008d76:	mov    edi,0xde4ac091
   140008d7b:	(bad)  
   140008d7c:	pop    rbx
   140008d7d:	mov    BYTE PTR [rbx+0x71],bh
   140008d80:	lea    ebx,[rbx]
   140008d82:	je     0x140008de8
   140008d84:	fdivr  QWORD PTR [rcx]
   140008d86:	xchg   esp,eax
   140008d87:	add    al,0x95
   140008d89:	clc    
   140008d8a:	rex.WRXB adc r8,QWORD PTR [r8]
   140008d8d:	ins    BYTE PTR es:[rdi],dx
   140008d8e:	std    
   140008d8f:	jnp    0x140008d91
   140008d91:	test   DWORD PTR [rax+0x3a3d60b9],edx
   140008d97:	cwde   
   140008d98:	call   0xdb424db0
   140008d9d:	add    eax,0x30a00408
   140008da2:	mov    dh,0xe
   140008da4:	(bad)  
   140008da5:	mov    r9d,0x498a9943
   140008dab:	rex.R sub al,0xc3
   140008dae:	clc    
   140008daf:	repz mov eax,0x14630aed
   140008db5:	mov    ecx,0x397936e
   140008dba:	or     bh,BYTE PTR [rdi-0x519ed741]
   140008dc0:	or     eax,0x535894c6
   140008dc5:	nop
   140008dc6:	in     al,0x13
   140008dc8:	xchg   edx,eax
   140008dc9:	fdiv   QWORD PTR [rcx+0x3ec1ee87]
   140008dcf:	ins    DWORD PTR es:[rdi],dx
   140008dd0:	mov    ecx,0xda73348f
   140008dd5:	(bad)  
   140008dd6:	sbb    BYTE PTR [rsi-0x15],0x2d
   140008dda:	pop    rdx
   140008ddb:	retf   0xa4a0
   140008dde:	shr    BYTE PTR gs:[rbx-0x2d],1
   140008de2:	jmp    0x140008e5b
   140008de4:	jmp    0x1baf4c99d
   140008de9:	pop    rbp
   140008dea:	(bad)  
   140008deb:	and    DWORD PTR [rcx],0xffffff9d
   140008dee:	outs   dx,BYTE PTR ds:[rsi]
   140008def:	xchg   edi,eax
   140008df0:	rex.WRX cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   140008df2:	rex.WXB movabs r11,0x790fa4a904a946dd
   140008dfc:	or     bl,BYTE PTR [rdx+0x1e88d058]
   140008e02:	push   rsp
   140008e03:	fbld   TBYTE PTR [rbx+0x30]
   140008e06:	leave  
   140008e07:	repz mov esp,0xe18c6b2a
   140008e0d:	fidiv  DWORD PTR [rbp-0x5cb97395]
   140008e13:	mov    edi,0xcf73dcf8
   140008e18:	jne    0x140008e58
   140008e1a:	div    BYTE PTR [rcx-0x38e82271]
   140008e20:	loopne 0x140008e3c
   140008e22:	add    dh,ch
   140008e24:	rex.B (bad) 
   140008e26:	jrcxz  0x140008ea7
   140008e28:	cld    
   140008e29:	(bad)
   140008e2d:	mov    ebp,0xf4a702
   140008e32:	push   rsp
   140008e33:	jbe    0x140008dd1
   140008e35:	in     eax,0xd6
   140008e37:	in     eax,dx
   140008e38:	cmp    eax,0x1f5da70e
   140008e3d:	push   rbx
   140008e3e:	paddw  mm3,QWORD PTR [rsi-0x33]
   140008e42:	add    DWORD PTR [rax],edx
   140008e44:	and    eax,0xf9bdc4ee
   140008e49:	jge    0x140008def
   140008e4b:	out    dx,al
   140008e4c:	(bad)  
   140008e4d:	cli    
   140008e4e:	imul   eax,edi,0xffffffe6
   140008e51:	sar    DWORD PTR [rip+0x939181d],0x1b        # 0x14939a675
   140008e58:	test   DWORD PTR [rbx+rbp*8-0x17494b77],0x961792d2
   140008e63:	cmp    al,0x77
   140008e65:	rex.WX movsxd rsi,esp
   140008e68:	ret    0x21ad
   140008e6b:	jno    0x140008ed3
   140008e6d:	rex
   140008e6e:	repz jbe 0x140008e5b
   140008e71:	mov    al,BYTE PTR [eax-0x3f539040]
   140008e78:	shr    DWORD PTR [rsi],0xb6
   140008e7b:	cdq    
   140008e7c:	js     0x140008ed9
   140008e7e:	or     al,0xc
   140008e80:	jle    0x140008e3d
   140008e82:	mov    es,WORD PTR [rax]
   140008e84:	sub    DWORD PTR [rsi],eax
   140008e86:	(bad)  
   140008e87:	jrcxz  0x140008e26
   140008e89:	nop
   140008e8a:	(bad)  
   140008e8b:	out    dx,eax
   140008e8c:	cwde   
   140008e8d:	pop    rcx
   140008e8e:	call   0x150c17e58
   140008e93:	ret    0xeef1
   140008e96:	mov    ebx,0xa5169b44
   140008e9b:	outs   dx,BYTE PTR ds:[rsi]
   140008e9c:	xchg   ecx,eax
   140008e9d:	xchg   edi,eax
   140008e9e:	jge    0x140008ef7
   140008ea0:	(bad)  
   140008ea1:	sti    
   140008ea2:	and    BYTE PTR [rsi],ah
   140008ea4:	(bad)  
   140008ea5:	(bad)  
   140008ea6:	mov    WORD PTR [rsi],es
   140008ea8:	xchg   ebx,eax
   140008ea9:	xchg   ebx,eax
   140008eaa:	mov    BYTE PTR [rcx],ch
   140008eac:	rex.WX iretq 
   140008eae:	push   rcx
   140008eaf:	cmp    ah,BYTE PTR [rbx]
   140008eb1:	fnstsw WORD PTR [rbx]
   140008eb3:	rex.R in al,dx
   140008eb5:	cmp    ah,BYTE PTR [rax-0x5896b3b0]
   140008ebb:	(bad)  
   140008ebc:	and    al,0x52
   140008ebe:	xchg   ebx,eax
   140008ebf:	rex.W ret 
   140008ec1:	rex.RX
   140008ec2:	rex.WRXB xor r8,r13
   140008ec5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140008ec6:	hlt    
   140008ec7:	mov    edx,0xebdfa2d
   140008ecc:	in     eax,dx
   140008ecd:	jbe    0x140008e5a
   140008ecf:	rex.R and eax,0xda424924
   140008ed5:	push   0xffffffffffffff91
   140008ed7:	and    al,0x2d
   140008ed9:	rcl    BYTE PTR [rsi-0x65],cl
   140008edc:	shl    DWORD PTR [rax-0x50],0x70
   140008ee0:	sub    BYTE PTR [rbx+0x5a608500],dh
   140008ee6:	sbb    al,0x1e
   140008ee8:	(bad)  
   140008ee9:	movabs ds:0x8f1e314a50254bb5,al
   140008ef2:	cdq    
   140008ef3:	rex.WR
   140008ef4:	es (bad) 
   140008ef7:	(bad)  
   140008ef8:	add    DWORD PTR [rdi-0x20523c90],0xffffffb1
   140008eff:	lods   al,BYTE PTR ds:[rsi]
   140008f00:	add    eax,esp
   140008f02:	(bad)  
   140008f03:	and    al,0x4d
   140008f05:	shr    DWORD PTR [rbp+0x9],cl
   140008f08:	out    dx,eax
   140008f09:	xor    edx,esi
   140008f0b:	add    BYTE PTR cs:[rax],al
   140008f0e:	stos   BYTE PTR es:[rdi],al
   140008f0f:	movabs eax,ds:0x506d9662ddaed7b6
   140008f18:	mov    bl,0xcb
   140008f1a:	jrcxz  0x140008f8c
   140008f1c:	fcmovnu st,st(3)
   140008f1e:	jb     0x140008f20
   140008f20:	rex.RX out 0x40,al
   140008f23:	ror    DWORD PTR [rax+rsi*4],cl
   140008f26:	jle    0x140008ec7
   140008f28:	cmp    BYTE PTR [rsi-0x31],cl
   140008f2b:	mov    esi,0x2803c14a
   140008f30:	ror    DWORD PTR [rax-0x6c9577ea],1
   140008f36:	add    eax,0xcc33d61f
   140008f3b:	xor    ecx,ecx
   140008f3d:	cmp    al,0xb3
   140008f3f:	int3   
   140008f40:	xor    ecx,DWORD PTR [rbx+0x5e]
   140008f43:	or     BYTE PTR [rdx+0x53],cl
   140008f46:	push   rdi
   140008f47:	hlt    
   140008f48:	fmul   DWORD PTR [rax+rbx*2]
   140008f4b:	in     eax,0x7f
   140008f4d:	ins    BYTE PTR es:[rdi],dx
   140008f4e:	ret    0x7c52
   140008f51:	lods   al,BYTE PTR ds:[rsi]
   140008f52:	mov    DWORD PTR [rdx],ecx
   140008f54:	fdivr  DWORD PTR [rax+0x6ae857ac]
   140008f5a:	jnp    0x140008f6f
   140008f5c:	cmp    BYTE PTR [rdx],bl
   140008f5e:	mov    edi,0x303db44d
   140008f63:	or     eax,0x8af85383
   140008f68:	(bad)  
   140008f69:	rex.R
   140008f6a:	rex adc DWORD PTR [rbx],eax
   140008f6d:	rex.WB push r8
   140008f6f:	jl     0x140008fdc
   140008f71:	(bad)  
   140008f72:	mov    WORD PTR [rbx+0x246312d4],fs
   140008f78:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140008f79:	sub    r11,r9
   140008f7c:	inc    dl
   140008f7e:	rex.WRXB (bad) 
   140008f80:	(bad)  
   140008f81:	rex.WR and rax,0xffffffff9750e12f
   140008f87:	push   0xffffffff8d4b625d
   140008f8c:	fstp   QWORD PTR [rdi-0x4ef089df]
   140008f92:	in     eax,0x1c
   140008f94:	imul   ecx,DWORD PTR [rsi],0xa47dcae9
   140008f9a:	cdq    
   140008f9b:	movabs eax,ds:0x4b4e84ed209848c8
   140008fa4:	icebp  
   140008fa5:	mov    bh,0xff
   140008fa7:	neg    bh
   140008fa9:	rex.X test eax,0x1fef52ee
   140008faf:	cld    
   140008fb0:	add    al,0xb7
   140008fb2:	outs   dx,BYTE PTR ds:[rsi]
   140008fb3:	frstor [rdx]
   140008fb5:	iret   
   140008fb6:	jae    0x14000900a
   140008fb8:	(bad)  
   140008fb9:	ret    
   140008fba:	push   rsp
   140008fbb:	pop    rcx
   140008fbc:	xchg   esi,eax
   140008fbd:	in     al,dx
   140008fbe:	out    dx,al
   140008fbf:	out    dx,al
   140008fc0:	mov    dh,0x37
   140008fc2:	ss ss (bad) 
   140008fc5:	movsxd ecx,DWORD PTR [rip+0x79503f00]        # 0x1b950cecb
   140008fcb:	rex.W
   140008fcc:	rex.W fst DWORD PTR [rcx-0x2a]
   140008fd0:	(bad)  
   140008fd1:	(bad)  
   140008fd2:	int    0x87
   140008fd4:	add    BYTE PTR [rdi-0x30dc24a2],ch
   140008fda:	rex.WRXB
   140008fdb:	lock (bad) 
   140008fdd:	ins    BYTE PTR es:[rdi],dx
   140008fde:	hlt    
   140008fdf:	add    BYTE PTR [rsi],dl
   140008fe1:	(bad)  
   140008fe2:	test   BYTE PTR [rdx+0x28],ch
   140008fe5:	in     al,0x3b
   140008fe7:	xchg   esp,eax
   140008fe8:	pop    rdx
   140008fe9:	scas   al,BYTE PTR es:[rdi]
   140008fea:	shl    DWORD PTR [rcx-0x68],0x87
   140008fee:	jne    0x140008fba
   140008ff0:	fs sub al,0x46
   140008ff3:	or     ecx,DWORD PTR [rdx+0x20cf32c2]
   140008ff9:	retf   
   140008ffa:	pop    rbp
   140008ffb:	movabs ds:0xe82dde0283b340f,eax
   140009004:	movabs ds:0x18ef9f583772a5f1,al
   14000900d:	mov    ecx,0x8f5be21f
   140009012:	lea    esp,[rbx+0x2e220c55]
   140009018:	sbb    eax,DWORD PTR [rbx+0x23e5541]
   14000901e:	xchg   eax,ebx
   140009020:	in     al,dx
   140009021:	mov    al,0xd4
   140009023:	pop    rcx
   140009024:	rex.R (bad) 
   140009026:	or     al,0xc1
   140009028:	push   rdi
   140009029:	shl    DWORD PTR [rsi+rbx*2-0x3a],1
   14000902d:	mov    WORD PTR [rdx-0x590fc8ce],fs
   140009033:	xchg   ecx,eax
   140009034:	rex.WB cld 
   140009036:	(bad)  
   140009037:	repnz mov dl,0x4f
   14000903a:	pop    rsi
   14000903b:	sahf   
   14000903c:	movabs al,ds:0xe7cc373bb01590d0
   140009045:	and    eax,0x9f20acb3
   14000904a:	rex.WRXB cmp BYTE PTR [rip+0x3727e05e],r12b        # 0x1772870af
   140009051:	scas   eax,DWORD PTR es:[rdi]
   140009052:	xchg   edx,eax
   140009053:	and    al,0x49
   140009055:	xchg   ebp,eax
   140009056:	and    bl,BYTE PTR [rip+0xffffffffdb61fef7]        # 0x11b628f53
   14000905c:	ins    BYTE PTR es:[rdi],dx
   14000905d:	ss pop rbx
   14000905f:	retf   0xc83b
   140009062:	mov    dl,0xcc
   140009064:	pop    rax
   140009065:	imul   ebp,edi,0x5b
   140009068:	pop    rsi
   140009069:	rcr    BYTE PTR [rdx],0x0
   14000906c:	out    dx,al
   14000906d:	rex.B je 0x1400090c9
   140009070:	mov    esi,0x895ab547
   140009075:	push   rsp
   140009076:	retf   0x9185
   140009079:	lods   al,BYTE PTR ds:[rsi]
   14000907a:	fwait
   14000907b:	jl     0x1400090c0
   14000907d:	rex.WX
   14000907e:	rex.WB sahf 
   140009080:	iret   
   140009081:	mov    ecx,0x5cca6376
   140009086:	mov    bh,0x8f
   140009088:	ja     0x14000905c
   14000908a:	pop    rax
   14000908b:	shr    DWORD PTR [rbp+0x40c98778],0x31
   140009092:	ror    DWORD PTR [rax+0x577bf47b],cl
   140009098:	hlt    
   140009099:	sbb    bh,al
   14000909b:	rex.R neg DWORD PTR [rax+0x39]
   14000909f:	in     eax,dx
   1400090a0:	mov    ah,0x8b
   1400090a2:	fbld   TBYTE PTR [rdi+0x5]
   1400090a5:	int3   
   1400090a6:	jae    0x140009070
   1400090a8:	jae    0x140009119
   1400090aa:	sbb    DWORD PTR [rbx],0x6f
   1400090ad:	iret   
   1400090ae:	stos   DWORD PTR es:[rdi],eax
   1400090af:	vpmaxsw xmm13,xmm2,XMMWORD PTR [rax]
   1400090b3:	sub    esi,esi
   1400090b5:	(bad)  
   1400090b6:	sbb    eax,0xd222cd88
   1400090bb:	(bad)  
   1400090bc:	mov    bh,0x8a
   1400090be:	rex.B sbb al,0xc9
   1400090c1:	sub    bl,BYTE PTR [rdx]
   1400090c3:	sti    
   1400090c4:	xchg   esi,eax
   1400090c5:	fadd   DWORD PTR [rbx]
   1400090c7:	or     esp,DWORD PTR [rax-0x78]
   1400090ca:	cdq    
   1400090cb:	rex.R int3 
   1400090cd:	and    BYTE PTR [rdx],al
   1400090cf:	imul   ebp,DWORD PTR [rax+0x186220c0],0x1
   1400090d6:	sbb    al,0x82
   1400090d8:	pop    rcx
   1400090d9:	push   rdx
   1400090da:	cdq    
   1400090db:	sbb    ch,ah
   1400090dd:	and    al,BYTE PTR [rdx+0x11]
   1400090e0:	add    al,ah
   1400090e2:	xor    BYTE PTR [rbx-0x1ce90cb4],dl
   1400090e8:	jns    0x140009075
   1400090ea:	mov    ebp,0xd89e9f71
   1400090ef:	out    0x91,al
   1400090f1:	xchg   DWORD PTR [rbx-0x2e],edx
   1400090f4:	xor    al,0xa5
   1400090f6:	sub    al,0xb5
   1400090f8:	scas   eax,DWORD PTR es:[rdi]
   1400090f9:	cmp    DWORD PTR [rdx+0x44],0xffffffa1
   1400090fd:	hlt    
   1400090fe:	jmp    0x14000914b
   140009100:	xor    al,0x23
   140009102:	or     DWORD PTR [rbp+0x59],esp
   140009105:	(bad)  
   140009106:	pop    rdx
   140009107:	jmp    0x1400090e4
   140009109:	ja     0x1400090b4
   14000910b:	in     eax,0x7b
   14000910d:	xchg   esi,eax
   14000910e:	xor    eax,0x2883dc00
   140009113:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140009114:	fiadd  WORD PTR [rdi+0x200735b5]
   14000911a:	mov    eax,0x6f374041
   14000911f:	in     al,dx
   140009120:	jno    0x14000910d
   140009122:	sbb    BYTE PTR ss:[rbx+0x3c02111e],dl
   140009129:	(bad)  
   14000912a:	(bad)  
   14000912b:	fistp  WORD PTR [rbp+0x56]
   14000912e:	xchg   ebp,eax
   14000912f:	mov    ch,0xbc
   140009131:	jrcxz  0x140009117
   140009133:	movabs ds:0x58f823bfab7c1c0a,al
   14000913c:	mov    WORD PTR [rip+0x265b31be],ss        # 0x1665bc300
   140009142:	push   rbx
   140009143:	ret    
   140009144:	sub    bl,BYTE PTR fs:[rax-0x41a6fa34]
   14000914b:	call   0x1b0a42459
   140009150:	ins    BYTE PTR es:[rdi],dx
   140009151:	(bad)  
   140009152:	in     eax,dx
   140009153:	(bad)  
   140009155:	jbe    0x1400090f2
   140009157:	mov    ebx,0xa2f8a444
   14000915c:	push   rcx
   14000915d:	loopne 0x1400091cd
   14000915f:	clc    
   140009160:	push   rsi
   140009161:	push   rbp
   140009162:	jns    0x140009170
   140009164:	(bad)  
   140009165:	jbe    0x14000912c
   140009167:	ja     0x1400091e8
   140009169:	out    dx,eax
   14000916a:	loope  0x140009104
   14000916c:	cmp    BYTE PTR es:[rdx+rsi*2-0x4bbc7eb],al
   140009174:	lea    esp,[rdi+0x1]
   140009177:	and    DWORD PTR [rdx+0x62],ebx
   14000917a:	lods   al,BYTE PTR ds:[rsi]
   14000917b:	push   rbx
   14000917c:	cld    
   14000917d:	ret    0xc083
   140009180:	cmp    al,0x87
   140009182:	ret    
   140009183:	sbb    DWORD PTR [rdi+riz*2+0x368052d0],ecx
   14000918a:	or     al,0xed
   14000918c:	pushf  
   14000918d:	lea    eax,[rcx+0xf]
   140009190:	sub    DWORD PTR [rsi+rdx*8],esp
   140009193:	xchg   esi,eax
   140009194:	sub    esi,ebx
   140009196:	(bad)  
   140009197:	repnz cmp al,0x67
   14000919a:	jg     0x14000921b
   14000919c:	mov    edi,0x4a520006
   1400091a1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400091a2:	shr    DWORD PTR [rcx-0x41082103],cl
   1400091a8:	mov    bh,0x66
   1400091aa:	add    BYTE PTR [rdi],bh
   1400091ac:	rex.W
   1400091ad:	xchg   r10,rax
   1400091af:	in     al,0xa4
   1400091b1:	rcr    edx,1
   1400091b3:	lea    eax,[rcx]
   1400091b5:	mov    BYTE PTR [rsi+0x1],al
   1400091b8:	sub    ch,BYTE PTR [rcx]
   1400091ba:	cmp    DWORD PTR [rax],edi
   1400091bc:	fsub   DWORD PTR [rdi-0x1]
   1400091bf:	xor    bpl,0xc3
   1400091c3:	and    BYTE PTR [rbx+0x7b],0xff
   1400091c7:	pop    rsi
   1400091c8:	jns    0x14000923b
   1400091ca:	fsub   QWORD PTR [rdx]
   1400091cc:	imul   eax,edi,0xffffffbd
   1400091cf:	popf   
   1400091d0:	fidivr WORD PTR [rax+rax*4]
   1400091d3:	xor    ecx,0x1a
   1400091d6:	sbb    DWORD PTR [rbx],edi
   1400091d8:	sbb    eax,0x2cb4aa6b
   1400091dd:	movabs eax,ds:0x14b68c16b18e3755
   1400091e6:	add    eax,0xce9832cc
   1400091eb:	sub    eax,0x163b9b3
   1400091f0:	test   DWORD PTR [rsi+0x61c9a796],eax
   1400091f6:	cmp    al,BYTE PTR [rbx-0x30e4c606]
   1400091fc:	fcmovu st,st(4)
   1400091fe:	(bad)  
   1400091ff:	xchg   esp,eax
   140009200:	jrcxz  0x1400091bc
   140009202:	xor    bl,BYTE PTR [rdx+0x10011e87]
   140009208:	rex.WRB
   140009209:	repz and edi,DWORD PTR [rsi]
   14000920c:	push   rdi
   14000920d:	add    BYTE PTR [rcx-0x4f9d9a1a],al
   140009213:	mov    ch,cl
   140009215:	mov    bh,BYTE PTR [rax+0x7f]
   140009218:	xor    BYTE PTR [rip+0xfffffffff5a10662],ah        # 0x135a19880
   14000921e:	and    bh,cl
   140009220:	imul   edx,esi,0x2912d172
   140009226:	fdivr  QWORD PTR [rsi+0x75f4d73c]
   14000922c:	xchg   BYTE PTR [rdx-0x63],dl
   14000922f:	push   0x10
   140009231:	push   rsp
   140009232:	rex.WR std 
   140009234:	rex.XB cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140009236:	imul   ebx,DWORD PTR [rcx-0x6a],0x2fefefec
   14000923d:	and    eax,0xf7ad6914
   140009242:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140009243:	shr    ecx,cl
   140009245:	mov    ch,0xbb
   140009247:	(bad)  
   140009248:	sar    BYTE PTR [rip+0xffffffffee001acb],cl        # 0x12e00ad19
   14000924e:	rex.B lods al,BYTE PTR ds:[rsi]
   140009250:	mov    ch,0x43
   140009252:	and    dh,0x52
   140009255:	(bad)  
   140009256:	rex.X
   140009257:	rex.WX mov BYTE PTR [rdi+0x130e0e13],0x17
   14000925f:	sbb    bh,BYTE PTR [rbx]
   140009261:	lea    ecx,ss:[rdi-0x41388763]
   140009268:	sub    edi,DWORD PTR [rdi-0x54]
   14000926b:	xor    WORD PTR [rdi],ax
   14000926e:	sar    DWORD PTR [rbp+0x7575131c],0x95
   140009275:	(bad)  
   140009276:	fcomp  QWORD PTR [rcx-0x26a4c7b7]
   14000927c:	push   rdx
   14000927d:	xchg   esp,eax
   14000927e:	or     dh,BYTE PTR cs:[rax]
   140009281:	iret   
   140009282:	(bad)  
   140009283:	sahf   
   140009284:	cmp    eax,DWORD PTR [rdi+0x60]
   140009287:	mov    BYTE PTR [rax],cl
   140009289:	sbb    BYTE PTR [rbx],cl
   14000928b:	mov    dl,0x79
   14000928d:	(bad)  
   14000928e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000928f:	add    bl,dh
   140009291:	add    eax,0xf8b79a7f
   140009296:	mov    dh,0xc4
   140009298:	(bad)  
   140009299:	pop    rdi
   14000929a:	xchg   esi,eax
   14000929b:	and    eax,0x90a468c6
   1400092a0:	push   rsp
   1400092a1:	sub    edi,DWORD PTR [rax]
   1400092a3:	xor    eax,0xc808ddaf
   1400092a8:	(bad)  
   1400092a9:	pop    rax
   1400092aa:	sub    al,0x1b
   1400092ac:	shl    BYTE PTR [rax-0x724a2e7c],0x75
   1400092b3:	jbe    0x140009315
   1400092b5:	xchg   esp,eax
   1400092b6:	movsxd eax,DWORD PTR [rsi+0x4a]
   1400092b9:	mov    ebx,0xe42516f3
   1400092be:	(bad)  
   1400092bf:	pop    rdx
   1400092c0:	cmp    DWORD PTR [rdx+rdx*4+0x182a7e92],esi
   1400092c7:	(bad)  
   1400092c8:	(bad)  
   1400092c9:	xor    DWORD PTR [rdx+0x3f1b25c],edi
   1400092cf:	and    BYTE PTR [rax-0x53],ch
   1400092d2:	xchg   edi,eax
   1400092d3:	idiv   cl
   1400092d5:	out    dx,eax
   1400092d6:	push   rdi
   1400092d7:	test   BYTE PTR [rax],dl
   1400092d9:	imul   eax,DWORD PTR [rsi],0xfffffff0
   1400092dc:	adc    DWORD PTR [rcx+riz*1],0xffffffe5
   1400092e0:	mov    dh,0xd1
   1400092e2:	sbb    bl,BYTE PTR [rcx]
   1400092e4:	add    eax,DWORD PTR [rax-0x6794a7f0]
   1400092ea:	rex.WRX out 0x1c,al
   1400092ed:	(bad)  
   1400092ee:	jp     0x1400092f8
   1400092f0:	(bad)  
   1400092f1:	sbb    eax,0x94b66c8d
   1400092f6:	(bad)  
   1400092f7:	jge    0x140009316
   1400092f9:	call   0x13c2de4da
   1400092fe:	(bad)  
   1400092ff:	lods   eax,DWORD PTR ds:[rsi]
   140009300:	jg     0x140009327
   140009302:	sub    edi,DWORD PTR [rax]
   140009304:	(bad)  
   140009305:	clc    
   140009306:	movabs ds:0xf0321ed53dc6874c,eax
   14000930f:	loopne 0x1400092cb
   140009311:	(bad)  
   140009312:	pop    rbx
   140009313:	imul   edx,DWORD PTR [rcx],0xffffffd6
   140009316:	movabs ds:0x18eb73ccb6b408d,al
   14000931f:	int3   
   140009320:	sbb    al,0x10
   140009322:	adc    al,0xe5
   140009324:	ret    0x500c
   140009327:	repnz or BYTE PTR [rbx],dh
   14000932a:	loopne 0x140009364
   14000932c:	push   rdx
   14000932d:	stos   DWORD PTR es:[rdi],eax
   14000932e:	ret    
   14000932f:	and    ecx,DWORD PTR [rax+0x64d511cf]
   140009335:	lea    esp,[rcx+0x6f]
   140009338:	out    dx,eax
   140009339:	es xchg edi,eax
   14000933b:	cs mov esp,0x5f37f9ce
   140009341:	and    ecx,edi
   140009343:	xor    edx,DWORD PTR [rdx+rdx*2+0x3c9b870c]
   14000934a:	idiv   al
   14000934c:	xchg   ebx,eax
   14000934d:	pushf  
   14000934e:	cmp    al,0xfd
   140009350:	add    ch,bh
   140009352:	rol    DWORD PTR [rsi-0x13],0x52
   140009356:	icebp  
   140009357:	xor    eax,0xaed6a402
   14000935c:	fnstsw WORD PTR [rax+0x8be559f]
   140009362:	lock (bad) 
   140009364:	pop    rcx
   140009365:	enter  0xf073,0xaf
   140009369:	rex.WX clc 
   14000936b:	pop    rsi
   14000936c:	mov    edi,0x9ffa3895
   140009371:	sub    BYTE PTR [rax-0x55],ch
   140009374:	(bad)  
   140009375:	pop    rsi
   140009376:	push   0x19
   140009378:	or     al,0x6
   14000937a:	xchg   esp,eax
   14000937b:	movsxd esi,DWORD PTR ds:[rax-0x2b]
   14000937f:	cld    
   140009380:	(bad)  
   140009381:	jns    0x140009337
   140009383:	mov    edx,0x781dbc54
   140009388:	jmp    0x1400093a9
   14000938a:	inc    bl
   14000938c:	jg     0x1400093e6
   14000938e:	lods   al,BYTE PTR ds:[rsi]
   14000938f:	mov    eax,0x6b25b785
   140009394:	add    BYTE PTR [rax+0x73ee7c8b],bh
   14000939a:	lahf   
   14000939b:	xchg   ebx,eax
   14000939c:	rex.WX retf 0x2513
   1400093a0:	ds (bad) 
   1400093a2:	and    BYTE PTR [rax+rbp*1-0x21238d64],bh
   1400093a9:	popf   
   1400093aa:	xor    bl,BYTE PTR [rdi-0x22b1af47]
   1400093b0:	(bad)  
   1400093b1:	(bad)  
   1400093b2:	mov    ss,WORD PTR [rsi]
   1400093b4:	xor    al,0x4c
   1400093b6:	xchg   DWORD PTR [rax-0x1825b87c],esp
   1400093bc:	add    DWORD PTR [rdx+rax*1+0x28],edx
   1400093c0:	js     0x1400093e8
   1400093c2:	ror    DWORD PTR [rsp+rbx*1+0x55f9d12c],1
   1400093c9:	(bad)  
   1400093ca:	(bad)  
   1400093cc:	(bad)  
   1400093cd:	cmp    BYTE PTR [rcx+rbx*2+0x6d],bh
   1400093d1:	(bad)  
   1400093d2:	sbb    BYTE PTR [rbx+0x6ccb0a28],ch
   1400093d8:	outs   dx,BYTE PTR ds:[rsi]
   1400093d9:	cdq    
   1400093da:	(bad)  
   1400093db:	sub    al,0x87
   1400093dd:	xor    ecx,ebx
   1400093df:	je     0x14000940f
   1400093e1:	enter  0x2832,0x3b
   1400093e5:	or     ecx,DWORD PTR [rdi+0x79]
   1400093e8:	lea    esp,[rcx-0x5]
   1400093eb:	push   rbx
   1400093ec:	or     dh,BYTE PTR [rcx-0x15c64e50]
   1400093f2:	xchg   ecx,eax
   1400093f3:	out    dx,al
   1400093f4:	push   rdx
   1400093f5:	cmp    eax,0xfc39c470
   1400093fa:	mov    dh,0xd9
   1400093fc:	je     0x1400093c0
   1400093fe:	sbb    ebp,DWORD PTR [rdi+0x5bbd877e]
   140009404:	(bad)  
   140009405:	push   rax
   140009406:	shl    al,cl
   140009408:	shr    cl,0xa1
   14000940b:	mov    bh,0xd6
   14000940d:	fdiv   QWORD PTR [rbx+0x45eb795c]
   140009413:	pop    rsi
   140009414:	jns    0x1400093ff
   140009416:	pop    rbx
   140009417:	ins    BYTE PTR es:[rdi],dx
   140009418:	in     eax,dx
   140009419:	pushf  
   14000941a:	in     eax,0xa9
   14000941c:	lahf   
   14000941d:	clc    
   14000941e:	or     BYTE PTR [rbx+0x4abb90c1],al
   140009424:	test   al,0x86
   140009426:	(bad)  
   140009427:	jne    0x1400093c4
   140009429:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000942a:	rex.RX and eax,0xc17d516a
   140009430:	sub    al,0x50
   140009432:	ror    BYTE PTR [rip+0x3033f2a6],cl        # 0x1703486de
   140009438:	movabs al,ds:0x345aa49205f2e944
   140009441:	rex.RX mov ebx,0xa76b20f5
   140009447:	(bad)  
   140009448:	rex.WRX cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   14000944a:	mov    ch,0x8
   14000944c:	rex.B and al,0xaf
   14000944f:	(bad)  
   140009451:	(bad)  
   140009452:	out    dx,eax
   140009453:	pop    rbp
   140009454:	(bad)  
   140009455:	add    BYTE PTR [rax+0x17],dh
   140009458:	xor    esi,eax
   14000945a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000945b:	mov    edx,0x10a5372c
   140009460:	cmc    
   140009461:	ja     0x140009491
   140009463:	add    al,0x58
   140009465:	int    0xed
   140009467:	mov    ebp,0xd7b8ac8c
   14000946c:	adc    al,0xe0
   14000946e:	rex.RX (bad) 
   140009471:	rex.WRXB stc 
   140009473:	add    DWORD PTR [rdi+0x29],eax
   140009476:	repz cmp eax,0xae38516a
   14000947c:	shr    cl,cl
   14000947e:	out    0x71,al
   140009480:	jno    0x140009411
   140009482:	outs   dx,DWORD PTR ds:[rsi]
   140009483:	shr    BYTE PTR [rdx-0x46a4f086],0x5
   14000948a:	sub    al,0x5a
   14000948c:	or     esi,DWORD PTR [rdx+0x1f]
   14000948f:	or     bl,BYTE PTR [rbp+rcx*8+0x14068bad]
   140009496:	ds in  eax,dx
   140009498:	push   rsi
   140009499:	cmp    ebp,edx
   14000949b:	mov    ebx,0xc2c104b4
   1400094a0:	gs mov dl,0x5a
   1400094a3:	xchg   ecx,eax
   1400094a4:	pop    rdx
   1400094a6:	retf   0x52c8
   1400094a9:	test   eax,0x5f4a467e
   1400094ae:	popf   
   1400094af:	rcr    BYTE PTR [rax-0x3a],cl
   1400094b2:	(bad)  
   1400094b3:	mov    ebx,0x6785f77c
   1400094b8:	nop
   1400094b9:	retw   0xd7a0
   1400094bd:	es iret 
   1400094bf:	jae    0x1400094a7
   1400094c1:	repz pop rcx
   1400094c3:	in     eax,0xb4
   1400094c5:	mov    ch,0xd6
   1400094c7:	xchg   edx,eax
   1400094c8:	mov    dh,BYTE PTR es:[rbx-0x3a1bb959]
   1400094cf:	add    DWORD PTR [rdi],ebp
   1400094d1:	cmp    al,0xf7
   1400094d3:	gs (bad) 
   1400094d5:	js     0x1400094bb
   1400094d7:	sub    DWORD PTR [rsi],ebx
   1400094d9:	jle    0x1400094cf
   1400094db:	mov    DWORD PTR [rip+0xffffffffb912e327],esp        # 0xf9137808
   1400094e1:	push   0xffffffffe355a86c
   1400094e6:	pop    rbp
   1400094e7:	pushf  
   1400094e8:	cdq    
   1400094e9:	stos   DWORD PTR es:[rdi],eax
   1400094ea:	fadd   st(1),st
   1400094ec:	or     DWORD PTR [rip+0x1c183089],esp        # 0x15c18c57b
   1400094f2:	mov    bl,0x3a
   1400094f4:	sub    ch,BYTE PTR [rbp+0x78]
   1400094f7:	xchg   ebp,eax
   1400094f8:	or     eax,esp
   1400094fa:	in     eax,0xad
   1400094fc:	movabs ds:0xfcad4737797c7aaf,eax
   140009505:	mov    ecx,0x524c6b10
   14000950a:	xchg   esp,eax
   14000950b:	in     eax,0x96
   14000950d:	push   rsp
   14000950e:	stos   BYTE PTR es:[rdi],al
   14000950f:	div    BYTE PTR [rdx]
   140009511:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009512:	xchg   esp,eax
   140009513:	pop    rax
   140009514:	sub    al,0xb7
   140009516:	outs   dx,BYTE PTR ds:[rsi]
   140009517:	in     eax,0xe8
   140009519:	movabs ds:0x306878e3ae578361,al
   140009522:	xchg   ecx,eax
   140009523:	es xor al,0xa5
   140009526:	rcl    DWORD PTR [rbx],1
   140009528:	pop    rbx
   140009529:	sbb    bl,BYTE PTR [rdx+0x73]
   14000952c:	scas   eax,DWORD PTR es:[rdi]
   14000952d:	pop    rbp
   14000952e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000952f:	pop    rbp
   140009530:	pop    rsp
   140009531:	jnp    0x140009518
   140009533:	xor    DWORD PTR [rbx],ebp
   140009535:	jp     0x140009532
   140009537:	cmp    ebx,esi
   140009539:	xlat   BYTE PTR ds:[rbx]
   14000953a:	movabs ds:0xf72cdb14ab6b5ac,al
   140009543:	add    BYTE PTR [rcx+0x6646b25],bl
   140009549:	cs test esi,esp
   14000954c:	loop   0x1400095a9
   14000954e:	mov    cl,BYTE PTR [rdi+0x69]
   140009551:	(bad)  
   140009552:	sti    
   140009553:	loop   0x140009590
   140009555:	scas   al,BYTE PTR es:[rdi]
   140009556:	(bad)  
   140009557:	(bad)  
   140009558:	movabs ds:0x57eb8dfbfe32aacf,al
   140009561:	clc    
   140009562:	(bad)  
   140009563:	mov    bh,0xfe
   140009565:	cwde   
   140009566:	jle    0x1400095af
   140009568:	shr    ebp,cl
   14000956a:	mov    dh,0xc9
   14000956c:	xor    dh,BYTE PTR [rdi]
   14000956e:	rex.WXB push r15
   140009570:	enter  0x8bb0,0x29
   140009574:	imul   BYTE PTR [rsi+rsi*1+0x23]
   140009578:	push   rcx
   140009579:	xchg   edx,eax
   14000957a:	in     eax,dx
   14000957b:	push   rcx
   14000957c:	xchg   edi,edx
   14000957e:	mov    edi,0x7ccf1cff
   140009583:	cmc    
   140009584:	rex.WXB xchg r12,rax
   140009586:	gs jo  0x14000956c
   140009589:	push   rbx
   14000958a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000958b:	(bad)  
   14000958c:	scas   eax,DWORD PTR es:[rdi]
   14000958d:	mov    edx,0xd5a55c5e
   140009592:	xlat   BYTE PTR ds:[rbx]
   140009593:	(bad)  
   140009594:	jae    0x140009543
   140009596:	jp     0x14000955c
   140009598:	fidiv  DWORD PTR [rcx]
   14000959a:	(bad)  
   14000959b:	adc    al,0x33
   14000959d:	rex.RX ret 
   14000959f:	mov    DWORD PTR ds:[rdx-0x56],ecx
   1400095a3:	rex.B
   1400095a4:	rex.XB
   1400095a5:	rex in eax,dx
   1400095a7:	jnp    0x140009541
   1400095a9:	rex.RX in eax,dx
   1400095ab:	mov    BYTE PTR [rcx-0xf106877],dl
   1400095b1:	mov    dl,0x8e
   1400095b3:	sub    eax,0x8bb8006b
   1400095b8:	and    al,0x69
   1400095ba:	jp     0x1400095fe
   1400095bc:	or     dh,BYTE PTR [rcx]
   1400095be:	mov    bl,BYTE PTR [rip+0x427d649]        # 0x144286c0d
   1400095c4:	(bad)  
   1400095c5:	sub    eax,0xb05a6fd7
   1400095ca:	sub    eax,0x8e5f4316
   1400095cf:	sub    esp,DWORD PTR [rsi]
   1400095d1:	fcom   DWORD PTR [rbx]
   1400095d3:	loope  0x1400095c1
   1400095d5:	sub    ecx,edx
   1400095d7:	lods   al,BYTE PTR ds:[rsi]
   1400095d8:	(bad)  
   1400095d9:	mov    ch,0x89
   1400095db:	add    dh,al
   1400095dd:	rex.R mov ebx,0x6af2508e
   1400095e3:	pop    rbx
   1400095e4:	adc    ebp,DWORD PTR [rax+0x7ef11122]
   1400095ea:	adc    edx,DWORD PTR [rip+0x302395b3]        # 0x170242ba3
   1400095f0:	iret   
   1400095f1:	or     eax,0x9932ccd3
   1400095f6:	pop    rcx
   1400095f7:	fimul  WORD PTR es:[rdi]
   1400095fa:	nop
   1400095fb:	out    0x51,eax
   1400095fd:	push   rdx
   1400095fe:	nop
   1400095ff:	push   rdi
   140009600:	movabs al,ds:0xe14d7b98cdfe3955
   140009609:	(bad)  
   14000960a:	fimul  DWORD PTR [rdi+0x74]
   14000960d:	mov    esi,0xc0d6fce8
   140009612:	cmc    
   140009613:	stos   DWORD PTR es:[rdi],eax
   140009614:	xchg   edi,eax
   140009615:	js     0x14000960c
   140009617:	jnp    0x140009698
   140009619:	retf   0xe7b0
   14000961c:	es es int 0xf3
   140009620:	jl     0x14000962b
   140009622:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009623:	fwait
   140009624:	lahf   
   140009625:	cmp    al,0xcf
   140009627:	leave  
   140009628:	mov    dl,0x8c
   14000962a:	xchg   DWORD PTR [rdi],ebx
   14000962c:	cmp    al,0x7
   14000962e:	in     eax,0x1e
   140009630:	iret   
   140009631:	xrelease xchg DWORD PTR ds:[rip+0xffffffffebf8b6d5],edx        # 0x12bf94d0e
   140009639:	push   rax
   14000963a:	mov    edi,0x68504ad6
   14000963f:	fcomp  QWORD PTR [rdi+0xd]
   140009642:	scas   al,BYTE PTR es:[rdi]
   140009643:	std    
   140009644:	mov    ?,WORD PTR [rax]
   140009646:	shr    DWORD PTR [rax],0x8c
   140009649:	(bad)  
   14000964a:	adc    al,0x66
   14000964c:	(bad)  
   14000964d:	jo     0x1400095f2
   14000964f:	xchg   DWORD PTR [rdx+rbp*4+0x31f0f252],edx
   140009656:	(bad)  
   140009657:	push   rsp
   140009658:	test   eax,0xf98961bf
   14000965d:	(bad)  
   14000965e:	add    ebp,DWORD PTR [rax]
   140009660:	mov    ecx,0x1ac026cf
   140009665:	add    dh,ch
   140009667:	cs rex.WRXB
   140009669:	sub    QWORD PTR [rbx+0x15],rdi
   14000966d:	add    BYTE PTR [rax+0x37],bl
   140009670:	cmp    BYTE PTR [rsi],dl
   140009672:	jmp    0x12f6f9729
   140009677:	imul   edx,DWORD PTR [rax],0x94094a09
   14000967d:	adc    cl,BYTE PTR [rax-0x54f1ea36]
   140009683:	jnp    0x140009669
   140009685:	cmp    esi,ebp
   140009687:	call   0xeeaa35ed
   14000968c:	mov    ch,0xd8
   14000968e:	(bad)  
   14000968f:	call   FWORD PTR [rsi-0x4b]
   140009692:	lods   eax,DWORD PTR ds:[rsi]
   140009693:	shl    DWORD PTR [rsi],0x56
   140009696:	pop    rbp
   140009697:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140009698:	push   rsi
   140009699:	mov    dh,0x79
   14000969b:	scas   al,BYTE PTR es:[rdi]
   14000969c:	or     BYTE PTR [rdx+rbx*4-0x23],cl
   1400096a0:	mov    eax,0xb18d86ef
   1400096a5:	xchg   esp,eax
   1400096a6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400096a7:	and    eax,0x39b30ccf
   1400096ac:	rex.WR
   1400096ad:	addr32 out dx,al
   1400096af:	jg     0x140009697
   1400096b1:	ret    
   1400096b2:	xor    DWORD PTR [rcx-0x2],0xfd594d7d
   1400096b9:	sub    DWORD PTR [rdx+0x3eabfbb9],ebx
   1400096bf:	rex.RXB add r8b,BYTE PTR [r10+0x54]
   1400096c3:	and    eax,0xedeec2d6
   1400096c8:	sbb    edi,DWORD PTR [rbp+rsi*8-0xb930c26]
   1400096cf:	pop    rsp
   1400096d0:	cli    
   1400096d1:	ins    BYTE PTR es:[rdi],dx
   1400096d2:	pop    rcx
   1400096d3:	xchg   esi,eax
   1400096d4:	sub    edx,DWORD PTR [rip+0xffffffffd909f9be]        # 0x1190a9098
   1400096da:	ja     0x140009663
   1400096dc:	xchg   DWORD PTR [rbx-0x32],esp
   1400096df:	pushf  
   1400096e0:	fisub  DWORD PTR [rcx]
   1400096e2:	fsubrp st(2),st
   1400096e5:	cmp    ebx,edi
   1400096e7:	stc    
   1400096e8:	xor    esi,DWORD PTR [rdx-0x53]
   1400096eb:	jmp    0x14000966d
   1400096ed:	adc    al,0x7d
   1400096ef:	pop    rdi
   1400096f0:	jne    0x140009751
   1400096f2:	jno    0x140009721
   1400096f4:	push   rsi
   1400096f5:	and    BYTE PTR [rip+0x59ed5d55],dl        # 0x199edf450
   1400096fb:	and    eax,DWORD PTR [rax]
   1400096fd:	mov    al,0x3a
   1400096ff:	pop    rdi
   140009700:	jmp    0xdeff06fa
   140009705:	iret   
   140009706:	out    0xb5,eax
   140009708:	mov    DWORD PTR [rbp+rdi*4-0x34],edx
   14000970c:	xor    bl,0xcd
   14000970f:	(bad)  
   140009710:	out    dx,eax
   140009711:	rex.R (bad) 
   140009713:	add    BYTE PTR [rax+0x17],dh
   140009716:	sub    ebx,ecx
   140009718:	repnz (bad) 
   14000971a:	sub    dil,bpl
   14000971d:	add    BYTE PTR [rdi+rbp*4],cl
   140009720:	rex.WX movabs rcx,0xa241121a270e0ca4
   14000972a:	and    al,0xed
   14000972c:	rex.R xchg edx,eax
   14000972e:	es push 0xffffffffffffffd9
   140009731:	(bad)  
   140009732:	mov    esi,0xf8fcc493
   140009737:	mov    ss,WORD PTR [rsp+rdi*4-0x47]
   14000973b:	dec    DWORD PTR [rsi+0x65]
   14000973e:	sbb    esp,DWORD PTR [rax-0x510c5890]
   140009744:	xor    al,BYTE PTR [rbx]
   140009746:	mov    gs,WORD PTR [rax]
   140009748:	outs   dx,DWORD PTR ds:[rsi]
   140009749:	jno    0x14000974e
   14000974b:	xor    edx,0x12
   14000974e:	mov    dl,0xdc
   140009750:	rex.RX loope 0x140009793
   140009753:	xchg   edi,eax
   140009754:	adc    eax,0x720a1ba8
   140009759:	push   rsp
   14000975a:	(bad)  
   14000975b:	pop    rdi
   14000975c:	frstor [rdx-0x2c]
   14000975f:	mov    ebx,0x2af5e936
   140009764:	jae    0x140009788
   140009766:	sub    bl,ah
   140009768:	clc    
   140009769:	lock xor BYTE PTR [rdi],0x5e
   14000976d:	stc    
   14000976e:	xor    ebx,DWORD PTR [rdx+0x2a]
   140009771:	scas   eax,DWORD PTR es:[rdi]
   140009772:	sub    DWORD PTR [rdi+0x18],edi
   140009775:	data16 jmp 0x14000974e
   140009778:	cmp    BYTE PTR [rax-0x6b],dl
   14000977b:	shl    BYTE PTR [rdi],cl
   14000977d:	rex.XB imul eax,r9d,0x39e796e1
   140009784:	rex.WRXB outs dx,DWORD PTR ds:[esi]
   140009787:	jae    0x14000976a
   140009789:	int    0x97
   14000978b:	fnstcw WORD PTR [rbx+0x3b096b7d]
   140009791:	movsxd ebp,eax
   140009793:	scas   al,BYTE PTR es:[rdi]
   140009794:	sub    DWORD PTR [rbx],edi
   140009796:	mov    ecx,DWORD PTR [rax+rcx*8]
   140009799:	and    eax,0x2009a553
   14000979e:	shl    DWORD PTR [rax],1
   1400097a0:	and    al,0x17
   1400097a2:	sub    DWORD PTR [rcx],esi
   1400097a4:	mov    ah,0x5b
   1400097a6:	sub    DWORD PTR [rbp+0x59],esp
   1400097a9:	(bad)  
   1400097aa:	sub    BYTE PTR [rdi+0x73],bh
   1400097ad:	scas   al,BYTE PTR es:[rdi]
   1400097ae:	ret    
   1400097af:	movabs ds:0x3f75c421004c9628,al
   1400097b8:	scas   eax,DWORD PTR es:[rdi]
   1400097b9:	loopne 0x140009838
   1400097bb:	xchg   ebx,eax
   1400097bc:	mov    ch,0x13
   1400097be:	lock movabs cs:0xcedf5b2434387a94,al
   1400097c9:	int    0x5b
   1400097cb:	mov    ebx,0x54681c1c
   1400097d0:	movabs ds:0xc259424ead0476e8,al
   1400097d9:	ins    BYTE PTR es:[rdi],dx
   1400097da:	enterw 0xeb0a,0xd7
   1400097df:	in     eax,dx
   1400097e0:	mov    ah,0x54
   1400097e2:	ss mov esi,0x34494df5
   1400097e8:	repz in ax,dx
   1400097eb:	jb     0x1400097a9
   1400097ed:	retf   
   1400097ee:	fiadd  DWORD PTR [rbp+0x5e2f7069]
   1400097f4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400097f5:	sub    ah,BYTE PTR [rdi-0x3a319120]
   1400097fb:	cmp    esp,ebp
   1400097fd:	in     eax,dx
   1400097fe:	rex.RX jrcxz 0x140009811
   140009801:	ret    0x457d
   140009804:	fidivr WORD PTR [rax]
   140009806:	imul   eax,DWORD PTR [riz*2+0x5a047789],0xffffffa6
   14000980e:	jae    0x14000983a
   140009810:	(bad)  
   140009811:	nop
   140009812:	jnp    0x14000985b
   140009814:	movabs al,ds:0x571a89c9e24efe12
   14000981d:	stos   BYTE PTR es:[rdi],al
   14000981e:	mov    ch,0xeb
   140009820:	adc    BYTE PTR [rdi+0x3f],bh
   140009823:	ret    0x1819
   140009826:	(bad)  
   140009827:	sbb    al,0x41
   140009829:	out    0xb3,al
   14000982b:	or     edi,ebx
   14000982d:	jge    0x14000982d
   14000982f:	stos   DWORD PTR es:[rdi],eax
   140009830:	hlt    
   140009831:	sar    BYTE PTR [rcx+rsi*1+0x29],cl
   140009835:	mov    edi,DWORD PTR [rdi+0x3f]
   140009838:	(bad)  
   140009839:	xor    DWORD PTR [rbp+0x2cd35ab0],ecx
   14000983f:	or     bl,bl
   140009841:	add    DWORD PTR [rdx-0x3c2cf163],edi
   140009847:	jge    0x1400097f7
   140009849:	pop    rdi
   14000984a:	mov    ebx,0x45b868ca
   14000984f:	xchg   edx,eax
   140009850:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140009851:	cmc    
   140009852:	xlat   BYTE PTR ds:[rbx]
   140009853:	sar    BYTE PTR [rdi+rbp*2-0x178e6081],cl
   14000985a:	xor    BYTE PTR [rsi+0x46],bh
   14000985d:	rex.WXB movabs r13,0x93a5b52839e78fe7
   140009867:	sbb    BYTE PTR [rsi-0x5d],al
   14000986a:	push   rcx
   14000986b:	in     eax,0xe4
   14000986d:	pop    rbx
   14000986e:	jp     0x1400098ce
   140009870:	lahf   
   140009871:	adc    BYTE PTR [rbp+riz*2-0x7fe35527],dl
   140009878:	or     eax,eax
   14000987a:	jge    0x140009819
   14000987c:	cmp    al,0x74
   14000987e:	or     eax,0xb5884700
   140009883:	div    BYTE PTR [rcx+rbx*2-0x6a]
   140009887:	lahf   
   140009888:	js     0x140009888
   14000988a:	pop    rbx
   14000988b:	(bad)  
   14000988d:	fwait
   14000988e:	sti    
   14000988f:	jnp    0x14000990c
   140009891:	outs   dx,BYTE PTR ds:[rsi]
   140009892:	sbb    eax,0x90422080
   140009897:	test   al,0x84
   140009899:	sbb    edx,edi
   14000989b:	outs   dx,DWORD PTR ds:[rsi]
   14000989c:	mov    cl,0xb7
   14000989e:	scas   eax,DWORD PTR es:[rdi]
   14000989f:	xchg   r13,rax
   1400098a1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400098a2:	fisttp WORD PTR [rdi-0x28]
   1400098a5:	fsubr  QWORD PTR [rbx+rdx*2+0x6a]
   1400098a9:	mov    eax,0xc6605bbd
   1400098ae:	add    eax,0x19434e59
   1400098b3:	(bad)  
   1400098b4:	push   rdx
   1400098b5:	loop   0x14000985f
   1400098b7:	retf   
   1400098b8:	ins    BYTE PTR es:[rdi],dx
   1400098b9:	jp     0x1400098a5
   1400098bb:	sub    eax,0x8af736de
   1400098c0:	imul   eax,DWORD PTR [rbx-0x15],0xffffffb3
   1400098c4:	lods   al,BYTE PTR ds:[rsi]
   1400098c5:	(bad)  
   1400098c6:	cwde   
   1400098c7:	shl    BYTE PTR [rbp-0x3b],1
   1400098ca:	cmp    DWORD PTR [rdi+0x2c],0x51
   1400098ce:	mov    esi,DWORD PTR [rbp-0x323a09d5]
   1400098d4:	mov    bh,0xc1
   1400098d6:	or     BYTE PTR [rdx+0x4583751c],ch
   1400098dc:	mov    eax,0x7585f431
   1400098e1:	jle    0x140009863
   1400098e3:	test   eax,0x4c133261
   1400098e8:	xor    ecx,eax
   1400098ea:	jae    0x1400098cd
   1400098ec:	xor    ah,al
   1400098ee:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400098ef:	(bad)  
   1400098f0:	sbb    eax,0xe7638922
   1400098f6:	int    0xf4
   1400098f8:	xor    DWORD PTR [rax+0x45],0xffffffbb
   1400098fc:	jp     0x14000997d
   1400098fe:	cld    
   1400098ff:	mov    BYTE PTR [rbp-0x67],ah
   140009902:	repz retf 0xcf4b
   140009906:	and    ebp,ecx
   140009908:	cwde   
   140009909:	rex.WRX
   14000990a:	xor    DWORD PTR [edx+0x4929572c],0xffffffad
   140009912:	xchg   edi,eax
   140009913:	pop    QWORD PTR [rcx]
   140009915:	movabs al,ds:0xbee72e24924f4b39
   14000991e:	sub    BYTE PTR [rax-0x18b3d8b4],bl
   140009924:	jae    0x140009920
   140009926:	sub    dh,BYTE PTR [rcx-0x11]
   140009929:	mov    edx,0x57cde0a1
   14000992e:	mov    eax,0x3162b184
   140009933:	fsubr  DWORD PTR [rax]
   140009935:	test   BYTE PTR [rcx+0x6e83d184],0x7e
   14000993c:	rex.R adc DWORD PTR [rdx+0x5],0xffffffad
   140009941:	push   rsi
   140009942:	stos   DWORD PTR es:[rdi],eax
   140009943:	retf   0x5801
   140009946:	xchg   ebp,eax
   140009947:	in     al,dx
   140009948:	push   rbx
   140009949:	adc    al,0x5
   14000994b:	jnp    0x1400099c8
   14000994d:	jnp    0x14000999a
   14000994f:	(bad)  
   140009950:	add    eax,0xbf9bfabc
   140009955:	stc    
   140009956:	fwait
   140009957:	rex.WXB jbe 0x14000991b
   14000995a:	cmp    edx,DWORD PTR [rcx-0x5dbbffcb]
   140009960:	retf   
   140009961:	repnz sub al,0xf0
   140009964:	repz (bad) 
   140009966:	(bad)  
   140009967:	stos   BYTE PTR es:[rdi],al
   140009968:	sar    edx,1
   14000996a:	scas   eax,DWORD PTR es:[rdi]
   14000996b:	imul   ebp,DWORD PTR [rbp+0x1f2d5a77],0xffffffe2
   140009972:	mov    edx,DWORD PTR [rax+rcx*2]
   140009975:	clc    
   140009976:	or     al,al
   140009978:	lea    ebx,[rbx+0x454ac9b7]
   14000997e:	(bad)  
   14000997f:	or     bl,dl
   140009981:	in     eax,dx
   140009982:	test   cl,ah
   140009984:	mov    al,0xd
   140009986:	or     BYTE PTR [rdx+0x26b9b202],cl
   14000998c:	(bad)  
   14000998d:	mov    ah,0xcb
   14000998f:	adc    BYTE PTR [rcx+rsi*2-0x7cb4f051],dh
   140009996:	outs   dx,BYTE PTR ds:[rsi]
   140009997:	push   0x12
   140009999:	shl    edi,cl
   14000999b:	mov    ebx,0xb837ed8d
   1400099a0:	test   DWORD PTR [rdx-0x78],eax
   1400099a3:	rex movabs eax,ds:0xb88d7c47026c2a19
   1400099ad:	xor    eax,0x570dd75b
   1400099b2:	rex.RB xchg r14d,eax
   1400099b4:	cdq    
   1400099b5:	rex.WX mov BYTE PTR [rax+r13*8],al
   1400099b9:	shl    BYTE PTR [rbp-0x3e5e78fb],cl
   1400099bf:	pop    rcx
   1400099c0:	out    dx,al
   1400099c1:	sahf   
   1400099c2:	mov    ecx,0x2dee2ed4
   1400099c7:	rex.R cmp eax,0x9e53581c
   1400099cd:	jo     0x140009995
   1400099cf:	rex.RX cwde 
   1400099d1:	out    dx,eax
   1400099d2:	outs   dx,BYTE PTR ds:[rsi]
   1400099d3:	movabs ds:0xf624f3caf1bc975,al
   1400099dc:	sbb    DWORD PTR [rsi+rcx*1+0x29],ebp
   1400099e0:	mov    al,dl
   1400099e2:	(bad)  
   1400099e3:	mov    dh,0xa8
   1400099e5:	jge    0x1400099c9
   1400099e7:	ins    DWORD PTR es:[rdi],dx
   1400099e8:	int    0xef
   1400099ea:	movabs eax,ds:0x95e03060c1660dc7
   1400099f3:	push   rdi
   1400099f4:	ffreep st(0)
   1400099f6:	fadd   DWORD PTR [rsp+rax*2+0x4d9dd9b9]
   1400099fd:	push   rax
   1400099fe:	enter  0x7dc6,0xad
   140009a02:	retf   0x8841
   140009a05:	stos   DWORD PTR es:[rdi],eax
   140009a06:	or     edx,DWORD PTR [rbx]
   140009a08:	jns    0x140009a6b
   140009a0a:	cmp    al,0xf5
   140009a0c:	scas   eax,DWORD PTR es:[rdi]
   140009a0d:	out    0x1b,al
   140009a0f:	lock ret 
   140009a11:	xchg   DWORD PTR [rbp+0x56554836],ecx
   140009a17:	(bad)  
   140009a18:	mov    edi,0x3eb6dcea
   140009a1d:	rex.RXB movabs al,ds:0xd2e017b12e1c51f3
   140009a27:	mov    ebp,0xcbbdd6d5
   140009a2c:	jg     0x1400099ff
   140009a2e:	add    BYTE PTR [rax+0x16],dl
   140009a31:	rex.RB (bad) 
   140009a33:	cmp    BYTE PTR [rcx],ch
   140009a35:	test   al,bh
   140009a37:	xchg   esp,eax
   140009a38:	mov    ch,0xf6
   140009a3a:	outs   dx,DWORD PTR ds:[rsi]
   140009a3b:	sbb    ah,BYTE PTR [rbx+0x3e]
   140009a3e:	lods   al,BYTE PTR gs:[rsi]
   140009a40:	sbb    eax,0xb3d54f59
   140009a45:	sub    al,0x27
   140009a47:	iret   
   140009a48:	repz fisub DWORD PTR [rax]
   140009a4b:	and    BYTE PTR [rbx],cl
   140009a4d:	rex.W
   140009a4e:	rex.WRXB shr QWORD PTR [r14-0x23],cl
   140009a52:	fcmovb st,st(5)
   140009a54:	rol    BYTE PTR [rsi+0x29],cl
   140009a57:	rex.B stos DWORD PTR es:[rdi],eax
   140009a59:	and    eax,0x5413f419
   140009a5e:	movabs ds:0xae64c171e335cd98,al
   140009a67:	shl    esi,1
   140009a69:	outs   dx,BYTE PTR ds:[rsi]
   140009a6a:	(bad)  
   140009a6b:	cmp    eax,0x6bb3733e
   140009a70:	icebp  
   140009a71:	rex.WX pop rbx
   140009a73:	sub    DWORD PTR [rbx+0x0],esp
   140009a76:	test   DWORD PTR [rip+0x3cedddc7],edx        # 0x17cee7843
   140009a7c:	rex.WXB
   140009a7d:	mov    ?,WORD PTR gs:[rax]
   140009a80:	lods   al,BYTE PTR cs:[rsi]
   140009a82:	adc    eax,0x82809b60
   140009a87:	xor    eax,DWORD PTR [rbx]
   140009a89:	lods   al,BYTE PTR ds:[rsi]
   140009a8a:	imul   ecx,DWORD PTR [r9+0x51],0xffffffba
   140009a8f:	jno    0x140009a92
   140009a91:	and    DWORD PTR [rax+rbx*4],edx
   140009a94:	jnp    0x140009a96
   140009a96:	xchg   rbx,rax
   140009a98:	test   DWORD PTR [rip+0xffffffffd363384c],ebx        # 0x11363d2ea
   140009a9e:	(bad)  
   140009aa0:	push   0x29aa5b58
   140009aa5:	mov    edi,0x7fefd5e1
   140009aaa:	mov    edi,DWORD PTR [rdx+rsi*2-0x6f]
   140009aae:	int    0x61
   140009ab0:	scas   eax,DWORD PTR es:[rdi]
   140009ab1:	(bad)  
   140009ab2:	repz fisttp WORD PTR [rbp-0x17]
   140009ab6:	jrcxz  0x140009aa1
   140009ab8:	mov    bh,0x42
   140009aba:	(bad)
   140009abe:	fucomi st,st(5)
   140009ac0:	mov    dl,0xbf
   140009ac2:	mov    edi,0xbdaf2bcf
   140009ac7:	(bad)
   140009aca:	and    DWORD PTR [rdx],edi
   140009acc:	fnstsw WORD PTR [rsi]
   140009ace:	push   rdx
   140009acf:	sub    al,BYTE PTR [rdx+riz*4]
   140009ad2:	(bad)  
   140009ad3:	jg     0x140009b15
   140009ad5:	xor    al,0xab
   140009ad7:	out    0xe,eax
   140009ad9:	(bad)  
   140009adb:	jo     0x140009ae8
   140009add:	(bad)  
   140009ade:	(bad)  
   140009adf:	xor    BYTE PTR [rcx],al
   140009ae1:	ins    DWORD PTR es:[rdi],dx
   140009ae2:	cmp    eax,0xd19a9408
   140009ae7:	mov    DWORD PTR [rcx],eax
   140009ae9:	push   rdx
   140009aea:	sub    DWORD PTR [rdi+rax*1-0x7f66aa50],ecx
   140009af1:	pop    rdx
   140009af2:	jmp    0x140009a99
   140009af4:	cdq    
   140009af5:	test   BYTE PTR [rbp-0x621ffe54],bh
   140009afb:	xchg   rsi,rax
   140009afd:	gs (bad) 
   140009aff:	add    eax,0xbf820cfc
   140009b04:	add    dl,ah
   140009b06:	jno    0x140009b75
   140009b08:	hlt    
   140009b09:	(bad)  
   140009b0a:	lods   al,BYTE PTR ds:[rsi]
   140009b0b:	mov    ch,0xf
   140009b0d:	pop    rbx
   140009b0e:	imul   eax,DWORD PTR [rdi],0xffffffd6
   140009b11:	pop    rdx
   140009b12:	xchg   edi,eax
   140009b13:	cdq    
   140009b14:	(bad)
   140009b17:	xor    ebx,DWORD PTR [rbx+0x24c5814e]
   140009b1d:	and    ch,dl
   140009b1f:	rex.WXB xchg r10,rax
   140009b21:	adc    ah,BYTE PTR [rbx+0x34]
   140009b24:	out    0xdf,eax
   140009b26:	mov    edx,0x920fb581
   140009b2b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009b2c:	shr    BYTE PTR [rcx-0x5],1
   140009b2f:	pop    rcx
   140009b30:	(bad)  
   140009b31:	cli    
   140009b32:	sub    eax,0x3e32d2ca
   140009b37:	sub    al,0x19
   140009b39:	rex.WRXB
   140009b3a:	rex.WX mov spl,0x6e
   140009b3d:	div    BYTE PTR [rsi+0x8f82521]
   140009b43:	(bad)  
   140009b44:	mov    al,0x96
   140009b46:	push   0x66
   140009b48:	lahf   
   140009b49:	and    eax,0xf1255e25
   140009b4e:	stc    
   140009b4f:	fwait
   140009b50:	out    0x8c,eax
   140009b52:	(bad)  
   140009b53:	(bad)  
   140009b54:	sub    eax,0x7de37bf9
   140009b59:	rex.WRB push r8
   140009b5b:	icebp  
   140009b5c:	fisttp DWORD PTR [rbp+rbp*4+0x142eb2ef]
   140009b63:	pop    rax
   140009b64:	push   0x4b
   140009b66:	xchg   esi,eax
   140009b67:	sbb    DWORD PTR [rsi+0x73],esp
   140009b6a:	shl    ecx,0xcc
   140009b6d:	test   DWORD PTR [rdi+riz*8],eax
   140009b70:	mov    ecx,0x2690171b
   140009b75:	cs (bad) 
   140009b77:	fisub  WORD PTR [rcx]
   140009b79:	gs jrcxz 0x140009bb2
   140009b7c:	std    
   140009b7d:	lods   eax,DWORD PTR ds:[rsi]
   140009b7e:	sbb    eax,0x1478705
   140009b83:	ret    
   140009b84:	(bad)  
   140009b85:	mov    ebp,DWORD PTR [rdi+0x6fdbe31]
   140009b8b:	rex.WRXB outs dx,DWORD PTR ds:[esi]
   140009b8e:	push   rsi
   140009b8f:	cmp    eax,0x3be5007f
   140009b94:	sub    edx,edi
   140009b96:	stos   BYTE PTR es:[rdi],al
   140009b97:	std    
   140009b98:	outs   dx,BYTE PTR ds:[rsi]
   140009b99:	repnz iret 
   140009b9b:	(bad)  
   140009b9c:	repz jns 0x140009b65
   140009b9f:	xlat   BYTE PTR ds:[rbx]
   140009ba0:	lahf   
   140009ba1:	jge    0x140009ba4
   140009ba3:	stos   DWORD PTR es:[rdi],eax
   140009ba4:	cli    
   140009ba5:	pushf  
   140009ba6:	cmp    BYTE PTR [rcx-0x6a],bh
   140009ba9:	(bad)  
   140009baa:	(bad)  
   140009bab:	rex.W (bad) 
   140009bae:	(bad)  
   140009baf:	lods   eax,DWORD PTR ds:[rsi]
   140009bb0:	test   al,0xc8
   140009bb2:	rcr    BYTE PTR [rbp-0x569f49f4],cl
   140009bb8:	pop    rcx
   140009bb9:	jg     0x140009b9e
   140009bbb:	ror    DWORD PTR [rcx+rcx*4-0x49a8017],0x17
   140009bc3:	(bad)  
   140009bc4:	rex.RXB (bad) 
   140009bc6:	jne    0x140009b8e
   140009bc8:	out    0xb0,al
   140009bca:	(bad)  
   140009bcb:	hlt    
   140009bcc:	or     ebp,DWORD PTR [rsi+0x278efd06]
   140009bd2:	or     BYTE PTR [rbp+0x1335652],dl
   140009bd8:	xor    eax,0x16e0c000
   140009bdd:	cmp    al,0xbd
   140009bdf:	scas   eax,DWORD PTR es:[rdi]
   140009be0:	repnz out 0x1e,eax
   140009be3:	add    BYTE PTR [rdx-0x3f4c4d4],dh
   140009be9:	cmp    al,0xf0
   140009beb:	repz (bad) 
   140009bed:	fidivr DWORD PTR [rdi-0x2f86539f]
   140009bf3:	cli    
   140009bf4:	sahf   
   140009bf5:	int3   
   140009bf6:	cli    
   140009bf7:	scas   al,BYTE PTR es:[rdi]
   140009bf8:	retf   0xfff8
   140009bfb:	outs   dx,BYTE PTR ds:[rsi]
   140009bfc:	jnp    0x140009bae
   140009bfe:	adc    eax,0x84c99305
   140009c03:	jns    0x140009b9b
   140009c05:	(bad)  
   140009c06:	and    DWORD PTR [rcx+0x5c67278b],esi
   140009c0c:	mov    ebp,0x16884536
   140009c11:	rex.WB loop 0x140009c2c
   140009c14:	rex stos DWORD PTR es:[rdi],eax
   140009c16:	lods   eax,DWORD PTR ds:[rsi]
   140009c17:	call   0x1b946b013
   140009c1c:	mov    edx,ecx
   140009c1e:	rex.RX mov r11d,DWORD PTR [rbx-0x13]
   140009c22:	cmp    DWORD PTR [rcx-0x12],ebx
   140009c25:	popf   
   140009c26:	cmp    eax,0xd1b9152b
   140009c2b:	pop    rbx
   140009c2c:	(bad)  
   140009c2d:	sbb    esp,eax
   140009c2f:	mov    dh,0x61
   140009c31:	repz mov ebp,eax
   140009c34:	ja     0x140009c8a
   140009c36:	cs js  0x140009be0
   140009c39:	stos   BYTE PTR es:[rdi],al
   140009c3a:	loope  0x140009c04
   140009c3c:	fidiv  WORD PTR [rax+rdx*1]
   140009c3f:	int    0x6b
   140009c41:	(bad)  
   140009c42:	jle    0x140009bc4
   140009c44:	push   rbp
   140009c45:	sti    
   140009c46:	movabs ds:0x419d7e31ab3e42e3,al
   140009c4f:	mov    al,0x78
   140009c51:	adc    eax,eax
   140009c53:	sbb    BYTE PTR [rdx+0x171ba42],cl
   140009c59:	xor    ecx,ebx
   140009c5b:	ins    BYTE PTR es:[rdi],dx
   140009c5c:	data16 fdivr QWORD PTR [rax-0x59ada380]
   140009c63:	or     esi,DWORD PTR [rbx]
   140009c65:	movabs al,ds:0xa6857abb0b005696
   140009c6e:	mov    ecx,DWORD PTR [rax-0x77]
   140009c71:	(bad)  
   140009c72:	lods   eax,DWORD PTR ds:[rsi]
   140009c73:	mov    ebx,0xbb12e375
   140009c78:	(bad)  
   140009c79:	pop    rsi
   140009c7a:	loope  0x140009c50
   140009c7c:	mov    DWORD PTR [rbp+0x6d8cb7aa],ecx
   140009c82:	cld    
   140009c83:	(bad)
   140009c86:	rex.WRB sbb QWORD PTR [r8-0x6e],0xffffffffeddba124
   140009c8e:	xor    cl,bh
   140009c90:	xor    bl,BYTE PTR [rsi-0x1ba40987]
   140009c96:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140009c97:	ret    
   140009c98:	movabs ds:0xfe9a73bdb1f79ef,eax
   140009ca1:	rex.RX
   140009ca2:	cqo    
   140009ca4:	(bad)  
   140009ca5:	data16 (bad) 
   140009ca7:	add    ch,BYTE PTR [rdx+0x69]
   140009caa:	retf   
   140009cab:	icebp  
   140009cac:	jmp    0x16215dd4b
   140009cb1:	sbb    DWORD PTR [rsi-0x61cffc7b],edx
   140009cb7:	(bad)  
   140009cb8:	int3   
   140009cb9:	int    0x9d
   140009cbb:	push   rax
   140009cbc:	movabs al,ds:0x54e6b5b45853be24
   140009cc5:	jrcxz  0x140009cc2
   140009cc7:	sti    
   140009cc8:	sti    
   140009cc9:	adc    al,0x45
   140009ccb:	push   rcx
   140009ccc:	(bad)  
   140009ccd:	(bad)  
   140009cce:	in     al,0x9c
   140009cd0:	jg     0x140009cc9
   140009cd2:	xor    eax,0x9cfe100b
   140009cd7:	add    al,BYTE PTR [rax-0x6a]
   140009cda:	int    0x1f
   140009cdc:	add    bh,BYTE PTR [rsi]
   140009cde:	gs loope 0x140009d10
   140009ce1:	pop    rbx
   140009ce2:	imul   edi,esi,0xffffff86
   140009ce5:	mov    ch,0x76
   140009ce7:	xor    ebp,DWORD PTR [rax]
   140009ce9:	jl     0x140009ce0
   140009ceb:	xor    DWORD PTR [rsi-0x6abffe86],esp
   140009cf1:	xchg   edi,eax
   140009cf2:	sbb    eax,0xae318018
   140009cf7:	(bad)  
   140009cf8:	sub    ebx,esi
   140009cfa:	(bad)  
   140009cfb:	and    al,0xa9
   140009cfd:	fcmovnbe st,st(0)
   140009cff:	rex.WX sub rsi,rsi
   140009d02:	imul   BYTE PTR [rsi+0x70]
   140009d05:	xor    BYTE PTR [rsi],dl
   140009d07:	pop    rax
   140009d08:	fwait
   140009d09:	cli    
   140009d0a:	jl     0x140009d7b
   140009d0c:	xchg   r10,rax
   140009d0e:	rex.W fisubr DWORD PTR [rcx+0x61c30263]
   140009d15:	rex.WX stos QWORD PTR es:[rdi],rax
   140009d17:	xchg   ebp,eax
   140009d18:	and    BYTE PTR [rbp-0x610768ba],dl
   140009d1e:	(bad)  
   140009d1f:	push   0xffffffff97bb2c39
   140009d24:	(bad)  
   140009d25:	(bad)  
   140009d26:	ds (bad) 
   140009d28:	repz icebp 
   140009d2a:	test   eax,0x812ed2b
   140009d2f:	fcom   DWORD PTR [rip+0xffffffffbbee69e7]        # 0xfbef071c
   140009d35:	shl    DWORD PTR [rcx+0x4d],cl
   140009d38:	movabs al,ds:0x6306b4e7cb51e709
   140009d41:	and    al,0xc6
   140009d43:	mov    eax,0x672ca004
   140009d48:	cmp    DWORD PTR [rip+0xffffffffab019bd8],esp        # 0xeb023926
   140009d4e:	xchg   esi,eax
   140009d4f:	rex.W pop rsp
   140009d51:	xchg   ebp,eax
   140009d52:	cli    
   140009d53:	pop    rbx
   140009d54:	sti    
   140009d55:	sbb    ebp,ebp
   140009d57:	fistp  QWORD PTR [rbx-0x50747c83]
   140009d5d:	jg     0x140009cea
   140009d5f:	xor    esp,DWORD PTR [rdi]
   140009d61:	fimul  DWORD PTR [rax]
   140009d63:	rex.B adc eax,0xe7bd8bee
   140009d69:	rex.WRB
   140009d6a:	addr32 pop rdi
   140009d6c:	cmp    al,0xb3
   140009d6e:	rex.WRX ins BYTE PTR es:[rdi],dx
   140009d70:	push   rdi
   140009d71:	sub    esp,DWORD PTR [rbp-0x1b850a18]
   140009d77:	jns    0x140009d3a
   140009d79:	xlat   BYTE PTR ds:[rbx]
   140009d7a:	push   rsp
   140009d7c:	jns    0x140009de4
   140009d7e:	jns    0x140009d4a
   140009d80:	movabs ds:0x9f6cb3a9cec93f8f,eax
   140009d89:	cmp    al,0x4d
   140009d8b:	mov    ebx,0x7336c3d3
   140009d90:	jle    0x140009de9
   140009d92:	pop    rcx
   140009d93:	rex.WB xor al,0xb6
   140009d96:	mov    cl,0xa8
   140009d98:	ds ja  0x140009d48
   140009d9b:	add    eax,0xf5032fed
   140009da0:	xlat   BYTE PTR ds:[rbx]
   140009da1:	push   rax
   140009da2:	sbb    BYTE PTR [rax+0x3d54b4e4],dl
   140009da8:	retf   
   140009da9:	scas   eax,DWORD PTR es:[rdi]
   140009daa:	cmp    DWORD PTR [rax],ecx
   140009dac:	rex.W or BYTE PTR [rcx-0x3437efcc],sil
   140009db3:	add    DWORD PTR [rax+0x7d],esi
   140009db6:	mov    ecx,0xfc99df46
   140009dbb:	fadd   DWORD PTR [rbx]
   140009dbd:	shr    BYTE PTR [rsi+rsi*1-0x13],0x3
   140009dc2:	rex.WRXB add BYTE PTR [r15-0x3bf3827e],r9b
   140009dc9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140009dca:	(bad)  
   140009dcb:	(bad)  
   140009dcc:	jg     0x140009d9f
   140009dce:	(bad)  
   140009dcf:	(bad)  
   140009dd0:	mov    edi,?
   140009dd2:	(bad)  
   140009dd3:	sbb    BYTE PTR [rdi],bh
   140009dd5:	push   0x35b7283b
   140009dda:	push   rcx
   140009ddb:	iret   
   140009ddc:	iret   
   140009ddd:	add    dl,BYTE PTR [rax]
   140009ddf:	add    BYTE PTR [rax],cl
   140009de1:	(bad)  
   140009de2:	enter  0x2184,0x99
   140009de6:	(bad)  
   140009de7:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140009de8:	mov    esp,0x892bd023
   140009ded:	push   rdx
   140009dee:	mov    bl,ch
   140009df0:	mov    ebp,0x400f763d
   140009df5:	or     dl,BYTE PTR [rbp+0x31]
   140009df8:	add    BYTE PTR [rcx+rcx*2-0x6e],0x44
   140009dfd:	shr    bl,1
   140009dff:	mov    WORD PTR es:[rsi+0x2906362d],es
   140009e06:	jrcxz  0x140009dcb
   140009e08:	(bad)  
   140009e09:	mov    ecx,0x725d836
   140009e0e:	fist   DWORD PTR [rcx-0x37]
   140009e11:	add    cl,BYTE PTR [rip+0xfffffffff6bcac05]        # 0x136bd4a1c
   140009e17:	adc    DWORD PTR [r11+r9*8-0x6f],r12d
   140009e1c:	lods   eax,DWORD PTR ds:[rsi]
   140009e1d:	mov    ch,0x3a
   140009e1f:	ss push 0x74
   140009e22:	hlt    
   140009e23:	sub    eax,0x20000063
   140009e28:	add    BYTE PTR [rcx+0x44],cl
   140009e2b:	push   r12
   140009e2d:	popf   
   140009e2e:	rex.WXB add BYTE PTR [r8-0x3c3ba676],sil
   140009e35:	xchg   esp,eax
   140009e36:	sub    eax,0xeb976f75
   140009e3b:	mov    ecx,0x72c86d4a
   140009e40:	shr    DWORD PTR [rsi+rbp*1-0x68],0xcd
   140009e45:	sub    eax,0x9592ccb3
   140009e4a:	xchg   esi,eax
   140009e4b:	scas   al,BYTE PTR es:[rdi]
   140009e4c:	jbe    0x140009ddf
   140009e4e:	add    dl,BYTE PTR [rbx]
   140009e50:	mov    bl,0x80
   140009e52:	clc    
   140009e53:	xchg   esi,eax
   140009e54:	(bad)  
   140009e55:	ins    BYTE PTR es:[rdi],dx
   140009e56:	ret    0x5a5d
   140009e59:	mov    BYTE PTR [rbp-0x66247afe],al
   140009e5f:	iret   
   140009e60:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140009e61:	mov    esp,0x3837caf1
   140009e66:	mov    ebp,0xa8a5209d
   140009e6b:	sub    BYTE PTR [rcx-0x18],dh
   140009e6e:	std    
   140009e6f:	out    dx,eax
   140009e70:	vmovsd xmm8,xmm15,xmm0
   140009e74:	and    BYTE PTR [rax],ch
   140009e76:	mov    edi,0xbf678631
   140009e7b:	stc    
   140009e7c:	add    bh,BYTE PTR [rbx-0x101c329d]
   140009e82:	sti    
   140009e83:	add    bl,bl
   140009e85:	cmp    esp,DWORD PTR [rdi+0x38]
   140009e88:	jno    0x140009e7c
   140009e8a:	sub    al,0xbd
   140009e8c:	(bad)  
   140009e8d:	rcl    BYTE PTR [rdi+0x1625106d],1
   140009e93:	neg    DWORD PTR [rdi-0xd]
   140009e96:	or     eax,esi
   140009e98:	neg    DWORD PTR [rsi]
   140009e9a:	(bad)  
   140009e9b:	sbb    edx,DWORD PTR [rcx+0x12]
   140009e9e:	push   rsp
   140009e9f:	xchg   esp,eax
   140009ea0:	sbb    BYTE PTR [rip+0x28a90122],dl        # 0x168a99fc8
   140009ea6:	jmp    0x150a6711f
   140009eab:	(bad)  
   140009eac:	push   rbx
   140009ead:	(bad)  [rbx+0x2f6258a2]
   140009eb3:	rex.X mov BYTE PTR [rdi+0x44befb80],sil
   140009eba:	fmul   DWORD PTR [rdi+0x66cc0025]
   140009ec0:	rcl    DWORD PTR [rbx-0x40],cl
   140009ec3:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140009ec4:	sar    dh,0x9c
   140009ec7:	mov    ch,0xf6
   140009ec9:	(bad)  
   140009eca:	mov    al,0xe6
   140009ecc:	xor    DWORD PTR [rbx+0x6d],ebp
   140009ecf:	retf   
   140009ed0:	jp     0x140009e77
   140009ed2:	mov    dh,0xa6
   140009ed4:	rex.WRX mov cl,0x82
   140009ed7:	jb     0x140009f34
   140009ed9:	ins    BYTE PTR es:[rdi],dx
   140009eda:	(bad)  
   140009edb:	sar    DWORD PTR [rbx-0x12f3c0a2],cl
   140009ee1:	jb     0x140009eb6
   140009ee3:	cmp    BYTE PTR [rbx-0x2e524adb],bh
   140009ee9:	fs stc 
   140009eeb:	pushf  
   140009eec:	fldcw  WORD PTR [rsi+rdi*4-0x18]
   140009ef0:	jne    0x140009ee2
   140009ef2:	int3   
   140009ef3:	pop    rax
   140009ef4:	or     dl,dl
   140009ef6:	and    al,0xe1
   140009ef8:	(bad)  
   140009ef9:	(bad)  
   140009efa:	fdivr  QWORD PTR [rdx-0x6fb56f53]
   140009f01:	and    al,0x4e
   140009f03:	icebp  
   140009f04:	xchg   ebp,eax
   140009f05:	(bad)  
   140009f06:	ficom  WORD PTR [rsi]
   140009f08:	(bad)  
   140009f09:	shr    DWORD PTR [rax-0x7499293b],1
   140009f0f:	fnstsw WORD PTR [rbp-0x6b4b5d74]
   140009f15:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140009f16:	mov    ebx,0xc7228583
   140009f1b:	fisttp WORD PTR [rdi-0x15e6258e]
   140009f21:	retf   0x1419
   140009f24:	repnz or BYTE PTR [rbx],dh
   140009f27:	mov    al,0x38
   140009f2a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140009f2b:	jbe    0x140009efb
   140009f2d:	adc    eax,0x7dd77e8a
   140009f32:	(bad)  
   140009f33:	cdq    
   140009f34:	adc    al,0x95
   140009f36:	repnz mov ebx,0xd4eae32
   140009f3c:	pop    rdx
   140009f3d:	rex.XB xchg r14d,eax
   140009f3f:	rex.WXB
   140009f40:	es xor eax,ebx
   140009f43:	loope  0x140009f99
   140009f45:	xor    BYTE PTR [rbp+0xb8319fb],bl
   140009f4b:	rex.WXB xchg r9,rax
   140009f4d:	or     BYTE PTR [rdi],dh
   140009f4f:	add    ch,BYTE PTR [rsi+0x16024981]
   140009f55:	sub    esp,DWORD PTR [rdi+0x45635845]
   140009f5b:	mov    ebp,0xbce4595c
   140009f60:	cmc    
   140009f61:	cli    
   140009f62:	or     ebp,esp
   140009f64:	mov    WORD PTR [rdi*4+0x28a2975e],gs
   140009f6b:	push   rsi
   140009f6c:	xchg   ch,dh
   140009f6e:	push   rsi
   140009f6f:	sub    BYTE PTR [rcx-0x33],cl
   140009f72:	xchg   esi,eax
   140009f73:	(bad)  
   140009f74:	addr32 pop rdi
   140009f76:	idiv   ebx
   140009f78:	jge    0x140009f0e
   140009f7a:	push   rdx
   140009f7b:	cmp    al,0xfb
   140009f7d:	(bad)  
   140009f7e:	out    0xb9,eax
   140009f80:	jb     0x140009fe5
   140009f82:	retf   0x8f63
   140009f85:	inc    DWORD PTR [rbx+rbx*8]
   140009f88:	cmp    esp,DWORD PTR [rdi-0x718ac627]
   140009f8e:	outs   dx,BYTE PTR ds:[rsi]
   140009f8f:	outs   dx,DWORD PTR ds:[rsi]
   140009f90:	mov    BYTE PTR [rbp-0x42e012fe],dh
   140009f96:	jb     0x140009ff2
   140009f98:	push   rdx
   140009f99:	test   DWORD PTR [rbx],0x78de82ac
   140009f9f:	jnp    0x140009f6d
   140009fa1:	add    dl,al
   140009fa3:	int3   
   140009fa4:	rex
   140009fa5:	rex.RX (bad) 
   140009fa7:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140009fa8:	(bad)  
   140009fa9:	(bad)  
   140009faa:	rex.WXB call 0x1484ad979
   140009fb0:	mov    ah,0xa9
   140009fb2:	(bad)  
   140009fb3:	std    
   140009fb4:	(bad)  
   140009fb5:	lods   al,BYTE PTR ds:[rsi]
   140009fb6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140009fb7:	sub    al,0xcb
   140009fb9:	sub    al,BYTE PTR [rdx]
   140009fbb:	adc    BYTE PTR [rdi],bh
   140009fbd:	(bad)  
   140009fbe:	lock fisubr DWORD PTR [rdi-0x4]
   140009fc2:	(bad)  
   140009fc3:	outs   dx,DWORD PTR ds:[rsi]
   140009fc4:	fdiv   QWORD PTR [rdi+0x7e41c061]
   140009fca:	ins    BYTE PTR es:[rdi],dx
   140009fcb:	add    BYTE PTR [rax+0x3a],ah
   140009fce:	cmp    eax,0x34f8107c
   140009fd3:	mov    BYTE PTR [rdi+0x75fcc6b1],bl
   140009fd9:	imul   ecx,ebp,0xffffffd9
   140009fdc:	movabs al,ds:0x35803db6f74504f0
   140009fe5:	sahf   
   140009fe6:	(bad)  
   140009fe7:	fwait
   140009fe8:	add    eax,0x8c58c7ad
   140009fed:	out    0xa5,eax
   140009fef:	push   rdx
   140009ff0:	rex.WX push rsp
   140009ff2:	xchg   edx,eax
   140009ff3:	and    bh,BYTE PTR [rdi+rbp*2-0x5e]
   140009ff7:	retf   
   140009ff8:	xchg   edx,eax
   140009ff9:	cmp    al,0x9b
   140009ffb:	movabs ds:0xe098975a2c6302cb,eax
   14000a004:	lea    ecx,[rip+0xffffffffa7e0b82b]        # 0xe7e15835
   14000a00a:	loopne 0x14000a03c
   14000a00c:	xchg   BYTE PTR [rbx],bl
   14000a00e:	(bad)  
   14000a00f:	outs   dx,BYTE PTR ds:[rsi]
   14000a010:	xchg   ebx,eax
   14000a011:	xchg   edi,eax
   14000a012:	cmp    eax,0xa516a54
   14000a017:	lahf   
   14000a018:	(bad)  
   14000a019:	in     al,dx
   14000a01a:	pop    rdx
   14000a01b:	nop
   14000a01c:	xchg   edx,eax
   14000a01d:	shr    BYTE PTR [rbp+0x2b],1
   14000a020:	ss (bad) 
   14000a022:	sub    DWORD PTR [rbp-0x598b3db2],ebx
   14000a028:	sub    DWORD PTR [rdi-0x59497e64],edx
   14000a02e:	pop    rax
   14000a02f:	rex.WRX (bad) 
   14000a031:	(bad)  
   14000a032:	(bad)  
   14000a034:	adc    al,0xa2
   14000a036:	cmp    ch,BYTE PTR [rsi]
   14000a038:	out    dx,al
   14000a039:	xchg   edx,eax
   14000a03a:	push   rsi
   14000a03b:	cmc    
   14000a03c:	fcom   st(5)
   14000a03e:	ss mov edi,0x8abafda
   14000a044:	mov    ds,WORD PTR [rsi+0x32]
   14000a047:	lods   al,BYTE PTR ds:[rsi]
   14000a048:	loope  0x14000a066
   14000a04a:	pop    rsp
   14000a04b:	(bad)  
   14000a04c:	sbb    edx,DWORD PTR [rcx+0x71d50079]
   14000a052:	(bad)  
   14000a053:	fsubr  DWORD PTR [rdx-0x3]
   14000a056:	mov    edi,0x80d9773c
   14000a05b:	pop    rcx
   14000a05c:	(bad)  
   14000a05d:	jns    0x14000a0cd
   14000a05f:	sub    DWORD PTR [rbx+0x51],ecx
   14000a062:	rex.WRB ret 
   14000a064:	lea    ebx,[rax+0x26]
   14000a067:	cmp    dh,BYTE PTR [rbp+0xd69b45e]
   14000a06d:	add    DWORD PTR [rsi+0x6b],eax
   14000a070:	cs pop rbp
   14000a072:	js     0x14000a08d
   14000a074:	cmp    eax,0x43cec2bf
   14000a079:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a07a:	cdq    
   14000a07b:	iret   
   14000a07c:	out    0x95,eax
   14000a07e:	(bad)  
   14000a07f:	add    al,0xa5
   14000a081:	mov    BYTE PTR [rbp-0x2c0f6644],dl
   14000a087:	rex.WR mov bl,0xed
   14000a08a:	cmc    
   14000a08b:	jp     0x14000a101
   14000a08d:	cmp    bl,BYTE PTR [rip+0xffffffff979dfdbe]        # 0xd79e9e51
   14000a093:	js     0x14000a08a
   14000a095:	int    0x1b
   14000a097:	cmp    al,0xf8
   14000a099:	call   0x17feddca5
   14000a09e:	rex.XB scas eax,DWORD PTR es:[rdi]
   14000a0a0:	(bad)  
   14000a0a1:	add    al,0x21
   14000a0a3:	imul   esp,DWORD PTR [rcx+0x552f88c8],0x55
   14000a0aa:	sbb    eax,0xecb20e4f
   14000a0af:	cwde   
   14000a0b0:	pop    rdi
   14000a0b1:	push   rsp
   14000a0b2:	sbb    eax,0x9868d5d6
   14000a0b7:	cmp    edx,DWORD PTR [rax-0x25]
   14000a0ba:	js     0x14000a11e
   14000a0bc:	push   rcx
   14000a0bd:	mov    edx,DWORD PTR [rdx]
   14000a0bf:	cmp    DWORD PTR [rdx+0x2b],ebx
   14000a0c2:	lods   al,BYTE PTR ds:[rsi]
   14000a0c3:	pop    rcx
   14000a0c4:	int    0x0
   14000a0c6:	rex.X add al,0x20
   14000a0c9:	sahf   
   14000a0ca:	or     ch,BYTE PTR [rdx+rdi*2]
   14000a0cd:	sahf   
   14000a0ce:	sti    
   14000a0cf:	(bad)  
   14000a0d0:	add    DWORD PTR [rax-0x67ff9ee1],eax
   14000a0d6:	rex.WR (bad) 
   14000a0d8:	ins    DWORD PTR es:[rdi],dx
   14000a0d9:	loopne 0x14000a107
   14000a0db:	lock imul esp,eax,0x7f31ac17
   14000a0e2:	int    0xc2
   14000a0e4:	mov    al,0x8a
   14000a0e6:	movabs eax,ds:0xda82c781cabb0e46
   14000a0ef:	push   rdi
   14000a0f0:	push   rsp
   14000a0f1:	(bad)  
   14000a0f2:	push   0x5d
   14000a0f4:	push   rdx
   14000a0f5:	xchg   r12,rax
   14000a0f7:	push   0xffffffff84e135b9
   14000a0fc:	rex jmp 0x14000a091
   14000a0ff:	xor    cl,bl
   14000a101:	sar    BYTE PTR [rdx+0x5ee31b40],1
   14000a107:	or     al,0x6e
   14000a109:	(bad)  
   14000a10a:	xchg   r14,rax
   14000a10c:	xchg   edi,eax
   14000a10d:	pop    rax
   14000a10e:	xchg   esi,eax
   14000a10f:	out    0x1,eax
   14000a111:	or     BYTE PTR [rcx+rdx*8-0x748d41a4],r9b
   14000a119:	shl    dh,cl
   14000a11b:	rex.WB movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14000a11d:	rex.WXB add rcx,QWORD PTR [r14-0x6c]
   14000a121:	rex.R jns 0x14000a161
   14000a124:	xchg   ebx,eax
   14000a125:	rex.X xchg eax,eax
   14000a127:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a128:	xchg   edx,eax
   14000a129:	shl    DWORD PTR [rax],0x65
   14000a12c:	movsxd esp,DWORD PTR [rbx]
   14000a12e:	loope  0x14000a1a0
   14000a130:	push   rdx
   14000a131:	nop
   14000a132:	(bad)  
   14000a133:	sbb    dh,BYTE PTR [rbx-0x2fa8152c]
   14000a139:	imul   dl
   14000a13b:	imul   eax,DWORD PTR [rbx+0x71],0xffffff9b
   14000a13f:	(bad)  
   14000a140:	pop    rdx
   14000a141:	xchg   esi,eax
   14000a142:	pop    rcx
   14000a143:	rex
   14000a144:	rex.WRB add r10b,r8b
   14000a147:	rcl    BYTE PTR [rdx+0x4f],0x5f
   14000a14b:	adc    eax,0xe1a84189
   14000a150:	cmp    ecx,DWORD PTR [rax]
   14000a152:	(bad)  
   14000a153:	and    eax,edx
   14000a155:	mov    ebp,0x6b009cb8
   14000a15a:	add    eax,0xb59eb842
   14000a15f:	sub    al,0xd
   14000a161:	jns    0x14000a184
   14000a163:	push   0x29
   14000a165:	shl    DWORD PTR [rcx+0x45],0x9e
   14000a169:	xor    BYTE PTR [rcx],ch
   14000a16b:	rex.RX
   14000a16c:	rex.RB
   14000a16d:	rex.W (bad) 
   14000a16f:	pop    rdi
   14000a170:	imul   esi,DWORD PTR [rdi-0x4e63d5d3],0xffffffdc
   14000a177:	mov    eax,0xbf331e76
   14000a17c:	int3   
   14000a17d:	cdq    
   14000a17e:	push   rbx
   14000a17f:	fwait
   14000a180:	mov    ch,0x85
   14000a182:	xor    DWORD PTR [rdx-0x1b],esp
   14000a185:	mov    cs,WORD PTR [rbp-0x80]
   14000a188:	push   rbp
   14000a189:	and    al,ah
   14000a18b:	(bad)  
   14000a18c:	int    0xba
   14000a18e:	(bad)  
   14000a18f:	jl     0x14000a18b
   14000a191:	jge    0x14000a1f1
   14000a193:	jge    0x14000a182
   14000a195:	or     eax,0xafdbecfe
   14000a19a:	jo     0x14000a17e
   14000a19c:	int3   
   14000a19d:	jnp    0x14000a1d8
   14000a19f:	jno    0x14000a18b
   14000a1a1:	sbb    al,0x5b
   14000a1a3:	(bad)  [rdi+0x11360c18]
   14000a1a9:	pop    rsi
   14000a1aa:	stc    
   14000a1ab:	sub    eax,0xba2ac6ee
   14000a1b0:	fild   QWORD PTR [rax+0x68fd1355]
   14000a1b6:	mov    esi,0xab2ab8b1
   14000a1bb:	or     BYTE PTR [rax],al
   14000a1bd:	adc    DWORD PTR [rax],ecx
   14000a1bf:	push   rsp
   14000a1c0:	retf   
   14000a1c1:	movabs al,ds:0x933b6ad5a0b4d219
   14000a1ca:	xchg   esp,eax
   14000a1cb:	cmp    dh,ch
   14000a1cd:	(bad)  
   14000a1ce:	adc    eax,0x4ca9ab8
   14000a1d3:	push   0x6efb9c30
   14000a1d8:	inc    ebx
   14000a1da:	(bad)  
   14000a1db:	adc    BYTE PTR [rax],al
   14000a1dd:	sbb    al,0x4e
   14000a1df:	(bad)  
   14000a1e0:	and    eax,DWORD PTR [rcx]
   14000a1e2:	lahf   
   14000a1e3:	(bad)
   14000a1e6:	mov    dh,0xf0
   14000a1e8:	test   al,0xb5
   14000a1ea:	test   BYTE PTR [rbx],0xd6
   14000a1ed:	fadd   st,st(7)
   14000a1ef:	lods   al,BYTE PTR ds:[rsi]
   14000a1f0:	mov    ch,0xbd
   14000a1f2:	rcl    BYTE PTR [rbx-0x564297d1],1
   14000a1f8:	sub    DWORD PTR [rsi-0x1b],edi
   14000a1fb:	(bad)
   14000a1fe:	loope  0x14000a26c
   14000a200:	cmc    
   14000a201:	and    al,0x41
   14000a203:	or     BYTE PTR [rip+0xfffffffff1ac60d6],al        # 0x131ad02df
   14000a209:	icebp  
   14000a20a:	(bad)  
   14000a20b:	adc    ch,BYTE PTR [rbx+0x34]
   14000a20e:	ficomp DWORD PTR [rax]
   14000a210:	out    0x8c,eax
   14000a212:	xor    DWORD PTR [rsi],eax
   14000a214:	ins    DWORD PTR es:[rdi],dx
   14000a215:	sub    al,0x79
   14000a217:	push   rcx
   14000a218:	rex.RX movabs ds:0xd7d79b36789e5cb3,eax
   14000a222:	outs   dx,DWORD PTR ds:[rsi]
   14000a223:	ret    
   14000a224:	xor    eax,0xce4bad38
   14000a229:	mov    edi,0xfd68bb5
   14000a22e:	movabs ds:0x652044d20a92414,al
   14000a237:	push   0xa
   14000a239:	imul   ebp,DWORD PTR [rdx],0x6c5b0e19
   14000a23f:	(bad)  
   14000a240:	ficomp DWORD PTR [rsp+rcx*4]
   14000a243:	or     esp,esi
   14000a245:	jae    0x14000a28a
   14000a247:	pop    rsi
   14000a248:	fadd   DWORD PTR [rsi]
   14000a24a:	(bad)  
   14000a24b:	outs   dx,BYTE PTR ds:[rsi]
   14000a24c:	(bad)  
   14000a24d:	add    DWORD PTR [rax-0x5b],edi
   14000a250:	pop    rbx
   14000a251:	shr    DWORD PTR [r11+0x54],1
   14000a255:	jl     0x14000a2ac
   14000a257:	xor    ebp,DWORD PTR [rsi+rbp*2-0x71]
   14000a25b:	(bad)  
   14000a25c:	sub    eax,0x92abca6e
   14000a261:	(bad)  
   14000a262:	movabs ds:0xc98e0ded06ebaae3,al
   14000a26b:	jp     0x14000a25f
   14000a26d:	xchg   edx,eax
   14000a26e:	cmc    
   14000a26f:	add    eax,DWORD PTR [rbx+0x366599e6]
   14000a275:	jae    0x14000a248
   14000a277:	cmp    BYTE PTR [rcx+0x16],0xcc
   14000a27b:	add    BYTE PTR [rax-0x5b],ch
   14000a27e:	pop    rsi
   14000a27f:	movsxd ebx,DWORD PTR [r14-0x6e2d1b24]
   14000a286:	lods   eax,DWORD PTR ds:[rsi]
   14000a287:	lea    esi,[rbp-0x3d412114]
   14000a28d:	in     eax,dx
   14000a28e:	imul   ebx,edi,0xffffffe5
   14000a291:	icebp  
   14000a292:	rex.RXB mov r14b,0xfd
   14000a295:	xchg   esp,eax
   14000a296:	pop    rsi
   14000a297:	retf   
   14000a298:	imul   edi,DWORD PTR [rsi-0x653985d5],0xd478205f
   14000a2a2:	shl    DWORD PTR [riz*2-0x1e8de3c8],cl
   14000a2a9:	ret    0x9e45
   14000a2ac:	jns    0x14000a2a4
   14000a2ae:	xchg   BYTE PTR [r11],r15b
   14000a2b1:	(bad)  
   14000a2b3:	out    0x81,al
   14000a2b5:	(bad)  
   14000a2b6:	fcomp  st(4)
   14000a2b8:	cmp    cl,cl
   14000a2ba:	jo     0x14000a270
   14000a2bc:	add    eax,DWORD PTR [rdx+0x55]
   14000a2bf:	sub    al,0x25
   14000a2c1:	fadd   QWORD PTR [rax+rsi*1+0x1]
   14000a2c5:	loop   0x14000a2a2
   14000a2c7:	jne    0x14000a329
   14000a2c9:	push   rdi
   14000a2ca:	scas   eax,DWORD PTR es:[rdi]
   14000a2cb:	scas   al,BYTE PTR es:[rdi]
   14000a2cc:	nop
   14000a2cd:	adc    al,0x14
   14000a2cf:	sti    
   14000a2d0:	(bad)  
   14000a2d1:	add    cl,BYTE PTR [rax+0x4]
   14000a2d4:	(bad)  
   14000a2d5:	pop    rdi
   14000a2d6:	lods   eax,DWORD PTR ds:[rsi]
   14000a2d7:	pop    rdi
   14000a2d8:	call   0xe635e1f4
   14000a2dd:	movabs al,ds:0x853d7e3b5ab4a6a3
   14000a2e6:	in     eax,0x85
   14000a2e8:	test   QWORD PTR [rax],rdx
   14000a2eb:	fs pop rcx
   14000a2ed:	push   rsi
   14000a2ee:	lea    ecx,[rax]
   14000a2f0:	ins    BYTE PTR es:[rdi],dx
   14000a2f1:	enter  0xaade,0x8d
   14000a2f5:	out    dx,eax
   14000a2f6:	push   rsp
   14000a2f7:	jle    0x14000a2a1
   14000a2f9:	add    BYTE PTR [rax+0x38],dh
   14000a2fc:	fidivr WORD PTR [rdi]
   14000a2fe:	(bad)  
   14000a2ff:	cld    
   14000a300:	add    al,BYTE PTR [rdx+0x3e63584f]
   14000a306:	movsxd ebp,DWORD PTR [rbp+rdi*2+0x68e846dc]
   14000a30d:	sbb    ebx,esi
   14000a30f:	ror    BYTE PTR [rdx-0xf],cl
   14000a312:	add    ebx,esp
   14000a314:	out    0x5f,eax
   14000a316:	mov    dl,0xd6
   14000a318:	sub    eax,0x8102cfd
   14000a31d:	sub    DWORD PTR [rcx+0x49],edx
   14000a320:	or     ebp,DWORD PTR [rcx+0x36810224]
   14000a326:	(bad)  
   14000a327:	and    bl,BYTE PTR [rbx-0x87a69af]
   14000a32d:	or     eax,0xd0bc142c
   14000a332:	and    eax,0x6a525e45
   14000a337:	pop    rbp
   14000a338:	or     eax,edi
   14000a33a:	adc    BYTE PTR [rbx+0x64],0x6b
   14000a33e:	sub    eax,0xccb4c6f3
   14000a343:	(bad)  
   14000a344:	(bad)  
   14000a345:	or     BYTE PTR [rax+0x32],ch
   14000a348:	sbb    DWORD PTR [rbx-0xd],esi
   14000a34b:	mov    cx,dx
   14000a34e:	sub    DWORD PTR [rdx+0x5a],edx
   14000a351:	adc    ah,BYTE PTR [rip+0xffffffffa2d44a90]        # 0xe2d4ede7
   14000a357:	js     0x14000a39b
   14000a359:	rex.X mov dil,0x23
   14000a35c:	popf   
   14000a35d:	xor    esi,DWORD PTR [rax+0x283e329f]
   14000a363:	leave  
   14000a364:	or     edi,DWORD PTR [rbp-0x4faaacc8]
   14000a36a:	pop    rcx
   14000a36b:	sub    esi,DWORD PTR [rsi-0x6bd1220f]
   14000a371:	outs   dx,DWORD PTR ds:[rsi]
   14000a372:	or     DWORD PTR [rdx+rbx*1],edx
   14000a375:	mov    bl,BYTE PTR [rax+rdi*2]
   14000a378:	test   al,0x68
   14000a37a:	add    BYTE PTR [rcx+rsi*1+0x667d135e],cl
   14000a381:	fist   WORD PTR [rdx-0x37c9cdbd]
   14000a387:	gs (bad) 
   14000a389:	and    eax,0x7b4670b
   14000a38e:	movsxd ebx,eax
   14000a390:	xchg   DWORD PTR [rbx+rax*2],eax
   14000a393:	rex.WRXB push r15
   14000a395:	xchg   esi,eax
   14000a396:	xchg   BYTE PTR [rax+rdx*1+0xce733cc],ch
   14000a39d:	pushf  
   14000a39e:	xchg   BYTE PTR [eax+edx*2-0x12a1932],ch
   14000a3a6:	xor    BYTE PTR [rcx+0x17],dh
   14000a3a9:	movabs ds:0x579b9f74f9c5bb82,al
   14000a3b2:	mov    esi,0xb4eda9cb
   14000a3b7:	push   rdx
   14000a3b8:	out    0xa6,al
   14000a3ba:	cmp    eax,0x6ff6cabf
   14000a3bf:	xchg   BYTE PTR [rbx+rax*1],al
   14000a3c2:	push   0x6e43870c
   14000a3c7:	fnstsw WORD PTR [rdx-0x1280e033]
   14000a3cd:	jns    0x14000a423
   14000a3cf:	xchg   DWORD PTR [ebx+0xf],esi
   14000a3d3:	cmp    al,0xce
   14000a3d5:	out    0xd6,al
   14000a3d7:	sub    DWORD PTR [rsi+0x5b],eax
   14000a3da:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a3db:	adc    BYTE PTR [rcx-0x48],dl
   14000a3de:	(bad)  
   14000a3df:	mov    esi,0x82000aa7
   14000a3e4:	(bad)  
   14000a3e5:	mov    bl,0xc0
   14000a3e7:	jrcxz  0x14000a3cf
   14000a3e9:	sar    BYTE PTR [rbp+rdx*2+0x5eaa9d01],0x4c
   14000a3f1:	xchg   esp,eax
   14000a3f2:	add    esp,eax
   14000a3f4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a3f5:	(bad)  
   14000a3f6:	(bad)  
   14000a3f7:	in     al,0x48
   14000a3f9:	cmp    ebp,DWORD PTR [rdi-0x6cb7d140]
   14000a3ff:	add    eax,0xca63c78c
   14000a404:	mov    dl,0x5c
   14000a406:	data16 sahf 
   14000a408:	mov    al,0x7f
   14000a40a:	rex.R in eax,dx
   14000a40c:	mov    ebp,0x381f923
   14000a411:	shl    cl,0x78
   14000a414:	call   QWORD PTR [rcx-0x20]
   14000a417:	rcl    DWORD PTR [rsi],cl
   14000a419:	imul   ebp,DWORD PTR ds:[rbp+0x396365fd],0xd8f8515d
   14000a424:	sub    ebx,DWORD PTR [rdi]
   14000a426:	in     al,dx
   14000a427:	jns    0x14000a474
   14000a429:	hlt    
   14000a42a:	jnp    0x14000a46d
   14000a42c:	cmc    
   14000a42d:	lods   eax,DWORD PTR ds:[rsi]
   14000a42e:	icebp  
   14000a42f:	movabs eax,ds:0x2ca68d0c7d26e91e
   14000a438:	or     esi,DWORD PTR [rdx+0x39de73b9]
   14000a43e:	test   DWORD PTR [rdi],ecx
   14000a440:	cmp    esp,ebp
   14000a442:	xchg   BYTE PTR [rdx-0x6d75d6d8],ah
   14000a448:	push   rdx
   14000a449:	fwait
   14000a44a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000a44b:	jmp    0x11dffbae6
   14000a450:	cmc    
   14000a451:	(bad)  
   14000a453:	ss ret 0x925a
   14000a457:	mov    BYTE PTR [rax+riz*4+0x52],0x4a
   14000a45c:	(bad)  
   14000a45d:	mov    BYTE PTR [rdi],0xec
   14000a460:	(bad)  
   14000a461:	pop    rdx
   14000a462:	sub    al,0xa
   14000a464:	jmp    0x146d1a456
   14000a469:	add    DWORD PTR [rbx+0x54ad0051],0x32
   14000a470:	call   0x14906b11c
   14000a475:	in     eax,dx
   14000a476:	mov    dh,0xe4
   14000a478:	jo     0x14000a420
   14000a47a:	pop    rcx
   14000a47b:	out    dx,al
   14000a47c:	lea    ebx,[rbx]
   14000a47e:	imul   eax,ecx,0x7d5e1db1
   14000a484:	scas   eax,DWORD PTR es:[rdi]
   14000a485:	jbe    0x14000a45d
   14000a487:	call   0x1b3630204
   14000a48c:	(bad)  
   14000a48d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a48e:	hlt    
   14000a48f:	rex.WRB mov r14b,0x10
   14000a492:	cmp    DWORD PTR [rcx],ecx
   14000a494:	xchg   edi,eax
   14000a495:	mov    ds,WORD PTR [rbp-0x3b]
   14000a498:	add    ah,BYTE PTR [rdx+0xa986d7b]
   14000a49e:	(bad)  
   14000a49f:	cmp    edi,DWORD PTR [rax+0xf9c2f2]
   14000a4a5:	mov    dl,0x82
   14000a4a7:	retf   0x69e1
   14000a4aa:	xor    al,0x18
   14000a4ac:	jmp    0x111d74a9b
   14000a4b1:	rex.RB fcom DWORD PTR [r11]
   14000a4b4:	mov    esi,0x3719f3e4
   14000a4b9:	scas   al,BYTE PTR es:[rdi]
   14000a4ba:	jl     0x14000a45b
   14000a4bc:	xchg   ebx,eax
   14000a4bd:	pop    rbx
   14000a4be:	(bad)  
   14000a4bf:	lods   eax,DWORD PTR ds:[rsi]
   14000a4c0:	int    0xad
   14000a4c2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000a4c3:	xor    al,0xdf
   14000a4c5:	push   rbp
   14000a4c6:	movabs eax,ds:0x44c5db9d55d750be
   14000a4cf:	(bad)  
   14000a4d0:	fcmovnu st,st(3)
   14000a4d2:	fisttp DWORD PTR [rsi+riz*1+0x13]
   14000a4d6:	(bad)  
   14000a4d7:	call   0xee618487
   14000a4dc:	cmp    edi,DWORD PTR [rsi+rsi*8]
   14000a4df:	fdivr  st,st(3)
   14000a4e1:	sbb    BYTE PTR [rbp-0x63],ch
   14000a4e4:	fs mov ah,0x79
   14000a4e7:	add    ah,BYTE PTR [rbp+0x44fdfad2]
   14000a4ed:	xor    eax,0x4c4ad550
   14000a4f2:	test   DWORD PTR [rip+0xffffffffa3d9114b],0xc5daccaa        # 0xe3d9b647
   14000a4fc:	nop
   14000a4fd:	loopne 0x14000a559
   14000a4ff:	(bad)  
   14000a500:	add    BYTE PTR [rsi],0x61
   14000a503:	or     bl,dl
   14000a505:	mov    DWORD PTR [rsi+0x2c],esi
   14000a508:	movabs eax,ds:0x1255529439e12681
   14000a511:	ror    BYTE PTR [rdx],1
   14000a513:	add    BYTE PTR [rax],bh
   14000a515:	pop    rsp
   14000a516:	mov    esi,0xef2e77eb
   14000a51b:	sub    al,BYTE PTR [rax]
   14000a51d:	in     al,dx
   14000a51e:	out    dx,eax
   14000a51f:	out    dx,eax
   14000a520:	jbe    0x14000a4a7
   14000a522:	adc    BYTE PTR [rdi+0x8],cl
   14000a525:	sar    DWORD PTR [rbx-0x53],0xe5
   14000a529:	push   rcx
   14000a52a:	add    DWORD PTR [rdi-0x6d0325d0],ebx
   14000a530:	(bad)
   14000a533:	sub    ch,BYTE PTR [rdi+0x63]
   14000a536:	rex.RXB pop r14
   14000a538:	add    al,0x0
   14000a53a:	jne    0x14000a59c
   14000a53c:	add    dl,ah
   14000a53e:	adc    BYTE PTR [rax-0x7f0d4cf4],dl
   14000a544:	shl    DWORD PTR [rip+0xffffffffeb44bcf9],1        # 0x12b456243
   14000a54a:	add    ah,BYTE PTR [rbx-0x74]
   14000a54d:	ja     0x14000a5a1
   14000a54f:	imul   ebx,DWORD PTR [rdi-0x5a2e594b],0x42f5ff76
   14000a559:	jmp    0xd5597db5
   14000a55e:	sbb    BYTE PTR [rbx+0x30],ah
   14000a561:	pop    rdx
   14000a562:	movabs ds:0xa9407353a77692cb,eax
   14000a56b:	rex.R jno 0x14000a569
   14000a56e:	(bad)  
   14000a56f:	(bad)  
   14000a570:	sti    
   14000a571:	jnp    0x14000a53d
   14000a573:	(bad)  
   14000a574:	inc    BYTE PTR [rbp-0x3f16b705]
   14000a57a:	ret    
   14000a57b:	sub    al,0x5a
   14000a57d:	xchg   edi,eax
   14000a57e:	rex.WX and al,0xbd
   14000a581:	pop    rsi
   14000a582:	ret    0xd868
   14000a585:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a586:	(bad)  
   14000a588:	fstp   DWORD PTR [rdi]
   14000a58a:	xchg   edi,eax
   14000a58b:	(bad)  
   14000a58c:	sbb    DWORD PTR [rax-0x3dc0f3ec],edi
   14000a592:	mov    dl,0x8c
   14000a594:	popf   
   14000a595:	xor    DWORD PTR [rip+0xffffffffb68d809f],0xacf55235        # 0xf68e263e
   14000a59f:	(bad)  
   14000a5a0:	push   rdi
   14000a5a1:	fcom   QWORD PTR [rdx+0x4089302b]
   14000a5a7:	movabs eax,ds:0xdccabe4a6a01ec6
   14000a5b0:	(bad)  
   14000a5b1:	test   al,0xa6
   14000a5b3:	or     esi,ebx
   14000a5b5:	mov    esi,0x450c6d00
   14000a5ba:	sub    ecx,ecx
   14000a5bc:	jb     0x14000a589
   14000a5be:	sub    al,0xb
   14000a5c0:	and    eax,DWORD PTR [rbx]
   14000a5c2:	sub    eax,0x860477b9
   14000a5c7:	ss sub al,0x1a
   14000a5ca:	pop    rax
   14000a5cb:	push   rbx
   14000a5cc:	mov    cl,0x2
   14000a5ce:	jmp    0x14000a642
   14000a5d0:	cld    
   14000a5d1:	(bad)  
   14000a5d2:	mov    esp,0x36a73cf1
   14000a5d7:	addr32 pushf 
   14000a5d9:	fcomp  st(1)
   14000a5db:	lods   al,BYTE PTR ds:[rsi]
   14000a5dc:	int    0xe8
   14000a5de:	adc    esp,DWORD PTR [rcx+rcx*1+0x10677104]
   14000a5e5:	shl    DWORD PTR [rbp+0x6b],cl
   14000a5e8:	sub    eax,0xeb9ba1c3
   14000a5ed:	out    dx,eax
   14000a5ee:	rex.WRXB sahf 
   14000a5f0:	stc    
   14000a5f1:	xor    ebp,DWORD PTR [rsi-0x14]
   14000a5f4:	(bad)  
   14000a5f5:	cmp    al,0xf2
   14000a5f7:	ficomp WORD PTR [rdi+0x14eb7364]
   14000a5fd:	pop    rbx
   14000a5fe:	pop    rbx
   14000a5ff:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a600:	push   0xffffffffa295bbb5
   14000a605:	scas   al,BYTE PTR es:[rdi]
   14000a606:	lods   al,BYTE PTR ds:[rsi]
   14000a607:	out    dx,al
   14000a608:	push   0x6b48d373
   14000a60d:	mov    esi,0xe32838a2
   14000a612:	scas   al,BYTE PTR es:[rdi]
   14000a613:	mov    ebp,0x663a0060
   14000a618:	add    dh,bl
   14000a61a:	or     al,0x30
   14000a61c:	cmp    ah,bl
   14000a61e:	(bad)  
   14000a61f:	(bad)  
   14000a620:	nop
   14000a621:	and    al,0x4d
   14000a623:	sub    edx,ecx
   14000a625:	ins    BYTE PTR es:[rdi],dx
   14000a626:	leave  
   14000a627:	add    al,0x8
   14000a629:	mov    DWORD PTR [rax-0x33],eax
   14000a62c:	add    DWORD PTR [rsi-0x2f],ecx
   14000a62f:	retf   
   14000a630:	stc    
   14000a631:	shl    DWORD PTR [rdi],1
   14000a633:	add    esi,esi
   14000a635:	div    DWORD PTR [rdi+0x15]
   14000a638:	jo     0x14000a644
   14000a63a:	clc    
   14000a63b:	add    eax,0x3e5893e0
   14000a640:	lods   eax,DWORD PTR gs:[rsi]
   14000a642:	jge    0x14000a610
   14000a644:	pop    rax
   14000a645:	(bad)  [rdx-0x32]
   14000a648:	mov    ecx,0x888776c8
   14000a64d:	loop   0x14000a696
   14000a64f:	and    DWORD PTR [rbx-0x4bf05138],edi
   14000a655:	ds rex.WB push r10
   14000a658:	push   rsp
   14000a659:	xchg   edx,eax
   14000a65a:	add    dh,cl
   14000a65c:	add    DWORD PTR [rdi-0x669ae699],edx
   14000a662:	(bad)  
   14000a663:	retf   0x6f1b
   14000a666:	jrcxz  0x14000a5ff
   14000a668:	xchg   BYTE PTR [rdi+rbp*1],bh
   14000a66b:	enter  0x128b,0x1d
   14000a66f:	rex.X jg 0x14000a670
   14000a672:	ins    DWORD PTR es:[rdi],dx
   14000a673:	mov    ebx,0x8fa75446
   14000a678:	int    0x91
   14000a67a:	pop    rax
   14000a67b:	mov    al,0x50
   14000a67d:	cdq    
   14000a67e:	cmp    al,0xcf
   14000a680:	sub    DWORD PTR [rdx-0x2bdd4afe],ecx
   14000a686:	je     0x14000a66d
   14000a688:	(bad)  
   14000a689:	rex.WRB test r15b,0x6d
   14000a68d:	adc    al,0x6
   14000a68f:	add    eax,0x6f784a24
   14000a694:	ja     0x14000a65e
   14000a696:	sub    eax,0x67026cf0
   14000a69b:	(bad)  
   14000a69c:	ins    BYTE PTR es:[rdi],dx
   14000a69d:	(bad)  
   14000a69e:	pop    rbp
   14000a69f:	(bad)  
   14000a6a0:	shr    BYTE PTR [rbp-0x64a5e625],1
   14000a6a6:	test   edx,ebp
   14000a6a8:	(bad)  
   14000a6a9:	sub    DWORD PTR [rbp-0x2c],esi
   14000a6ac:	jrcxz  0x14000a6b8
   14000a6ae:	scas   eax,DWORD PTR es:[rdi]
   14000a6af:	ins    BYTE PTR es:[rdi],dx
   14000a6b0:	mov    ch,0x9c
   14000a6b2:	add    eax,0xb016220c
   14000a6b8:	fs iret 
   14000a6ba:	(bad)  
   14000a6bb:	or     DWORD PTR [rcx+rdx*8],edi
   14000a6be:	xchg   esp,eax
   14000a6bf:	loope  0x14000a6d6
   14000a6c1:	fwait
   14000a6c2:	push   0xffffffffce891686
   14000a6c7:	(bad)  
   14000a6c8:	add    eax,DWORD PTR [rdi+rdi*4+0x4113259d]
   14000a6cf:	js     0x14000a6dd
   14000a6d1:	jo     0x14000a6c4
   14000a6d3:	(bad)  
   14000a6d4:	mov    esp,0x9873cc30
   14000a6d9:	(bad)  
   14000a6da:	or     eax,0xe7cc39f3
   14000a6df:	xchg   edx,eax
   14000a6e0:	mov    esp,0x29402c70
   14000a6e5:	push   rdi
   14000a6e6:	rex.WRX test BYTE PTR [rcx],r11b
   14000a6e9:	xor    DWORD PTR [rbx+0x73fa0e4a],esp
   14000a6ef:	cmc    
   14000a6f0:	shr    BYTE PTR [rbx-0x3b1f23dc],cl
   14000a6f6:	(bad)  
   14000a6f7:	fldcw  WORD PTR [rdx+0x7d6937f1]
   14000a6fd:	in     al,dx
   14000a6fe:	and    BYTE PTR [rbx+0x4e],ch
   14000a701:	xchg   ebp,eax
   14000a702:	adc    eax,0x3060f903
   14000a707:	movabs al,ds:0xabc73dafd5f0e9d3
   14000a710:	out    0x6f,eax
   14000a712:	repz shl BYTE PTR [rbx],0x1f
   14000a716:	fs imul edi,ebx,0xc
   14000a71a:	movabs ds:0x7567e8b71da453ed,eax
   14000a723:	pop    rsp
   14000a724:	clc    
   14000a725:	shl    DWORD PTR [rdx+rax*2],cl
   14000a728:	sub    eax,DWORD PTR [rsi+rax*4+0x72]
   14000a72c:	mov    edx,DWORD PTR [rcx+rdx*4-0x26]
   14000a730:	cmp    DWORD PTR [rdx-0x2c298cb],eax
   14000a736:	scas   eax,DWORD PTR es:[rdi]
   14000a737:	rex.RX add BYTE PTR [rdx-0x6],r15b
   14000a73b:	pop    rdi
   14000a73c:	adc    al,0x90
   14000a73e:	cwde   
   14000a73f:	or     DWORD PTR [rbx+0x1e3bcb5e],eax
   14000a745:	(bad)  
   14000a746:	int3   
   14000a747:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000a748:	stc    
   14000a749:	jl     0x14000a6de
   14000a74b:	leave  
   14000a74c:	fs push rbp
   14000a74e:	js     0x14000a783
   14000a750:	(bad)  
   14000a751:	out    dx,al
   14000a752:	fld    TBYTE PTR [rdx+0x40]
   14000a755:	mov    cl,0xbc
   14000a757:	movsxd eax,DWORD PTR [rax]
   14000a759:	sbb    BYTE PTR [rdi-0xd29a509],cl
   14000a75f:	pop    rcx
   14000a760:	pushf  
   14000a761:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a762:	(bad)  
   14000a763:	jrcxz  0x14000a77b
   14000a765:	ds push 0x2f061dad
   14000a76b:	cmp    eax,0xc671422c
   14000a770:	sbb    bh,dh
   14000a772:	loop   0x14000a717
   14000a774:	sahf   
   14000a775:	fidivr WORD PTR [rcx]
   14000a777:	rex.WRX mov WORD PTR [rbx],gs
   14000a77a:	movsxd edx,DWORD PTR [rdi]
   14000a77c:	mov    ah,0xbe
   14000a77e:	xchg   ebp,eax
   14000a77f:	mov    dh,0xdd
   14000a781:	rex.X sbb al,0xde
   14000a784:	jmp    0x1bc4f44bf
   14000a789:	mov    dh,cl
   14000a78b:	push   rsp
   14000a78c:	pushf  
   14000a78d:	rcr    BYTE PTR [rax+0x4b],cl
   14000a790:	pop    rcx
   14000a791:	xchg   esp,eax
   14000a792:	fs pop rcx
   14000a794:	rex.WRX movabs rax,ds:0x6a6228dea1649fb5
   14000a79e:	jg     0x14000a7ef
   14000a7a0:	(bad)  
   14000a7a1:	pop    rbp
   14000a7a2:	out    dx,al
   14000a7a3:	jg     0x14000a7b7
   14000a7a5:	(bad)  
   14000a7a6:	jp     0x14000a7c7
   14000a7a8:	sub    DWORD PTR [rbx+0x26f9a65b],ecx
   14000a7ae:	pop    rcx
   14000a7af:	rol    DWORD PTR [rsi],1
   14000a7b1:	(bad)  
   14000a7b2:	push   rcx
   14000a7b3:	ret    0xa4a2
   14000a7b6:	rex.RB
   14000a7b7:	rex.WX add rbp,0xffffffffffffffd4
   14000a7bb:	pushf  
   14000a7bc:	nop
   14000a7bd:	add    BYTE PTR [rdx],ch
   14000a7bf:	adc    DWORD PTR [rdx+rdi*1+0x9],esi
   14000a7c3:	cmp    DWORD PTR [rsi+0x42],0xffffffab
   14000a7c7:	and    eax,0x81c6e799
   14000a7cc:	push   rbx
   14000a7cd:	(bad)  
   14000a7ce:	(bad)  
   14000a7cf:	(bad)  
   14000a7d0:	add    DWORD PTR [rax-0x3a95413b],eax
   14000a7d6:	loope  0x14000a82d
   14000a7d8:	movsxd eax,DWORD PTR [rbx]
   14000a7da:	(bad)  
   14000a7db:	or     al,BYTE PTR [rax]
   14000a7dd:	(bad)  
   14000a7de:	cmc    
   14000a7df:	mov    dh,0xda
   14000a7e1:	xor    eax,0xa26336fc
   14000a7e6:	(bad)  
   14000a7e7:	jnp    0x14000a776
   14000a7e9:	jb     0x14000a76c
   14000a7eb:	inc    edx
   14000a7ed:	add    ah,BYTE PTR [rax]
   14000a7ef:	rex.R
   14000a7f0:	fs (bad) 
   14000a7f2:	test   BYTE PTR [rax+rax*2+0x760d561d],cl
   14000a7f9:	add    DWORD PTR [rdx-0x2d35fd4e],0x52
   14000a800:	push   0x41
   14000a802:	loop   0x14000a7ab
   14000a804:	or     DWORD PTR [rsi-0x1c2b4fba],edx
   14000a80a:	or     bl,al
   14000a80c:	mov    ebx,0xcb8a0975
   14000a811:	mov    esp,0xc4b3f1ef
   14000a816:	cmp    rbp,QWORD PTR [r14+0x58efdcfa]
   14000a81d:	jmp    0x13d8a2d85
   14000a822:	add    al,0xc1
   14000a824:	sbb    ecx,DWORD PTR fs:[rbp-0x641c83ba]
   14000a82b:	(bad)  
   14000a82c:	lock popf 
   14000a82e:	xchg   edi,eax
   14000a82f:	cs jno 0x14000a824
   14000a832:	in     al,dx
   14000a833:	adc    ebx,DWORD PTR [rax+rdi*1-0x2464ff0b]
   14000a83a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a83b:	call   0x1bd412fb6
   14000a840:	mov    esi,ebp
   14000a842:	movabs al,ds:0x6db44ed55afbcdb4
   14000a84b:	adc    al,0xf3
   14000a84d:	(bad)  
   14000a84e:	(bad)  
   14000a84f:	(bad)  
   14000a850:	addr32 jo 0x14000a855
   14000a853:	xchg   cl,cl
   14000a855:	rex.B loop 0x14000a8bd
   14000a858:	retf   
   14000a859:	mov    ch,0x81
   14000a85b:	cs push rbx
   14000a85d:	and    al,0xab
   14000a85f:	xchg   DWORD PTR [rax],eax
   14000a861:	xchg   DWORD PTR [rdi+0x2a],esp
   14000a864:	retf   
   14000a865:	xchg   edx,eax
   14000a866:	add    DWORD PTR [rbx-0x581faa7d],0xffffff81
   14000a86d:	icebp  
   14000a86e:	repnz popf 
   14000a870:	mov    ebp,0xdb7973
   14000a875:	push   rax
   14000a876:	adc    al,0xf9
   14000a878:	xchg   esi,esp
   14000a87a:	repz (bad) 
   14000a87d:	add    eax,0x9295d7f1
   14000a882:	(bad)  
   14000a883:	rex.WRX xchg rsp,rax
   14000a885:	jb     0x14000a89a
   14000a887:	sbb    eax,0x3274c35a
   14000a88c:	movabs eax,ds:0x1bce74816706ded0
   14000a895:	rex.WRXB (bad) 
   14000a897:	add    al,0xa8
   14000a899:	fisub  DWORD PTR [rbx-0x4766f5ae]
   14000a89f:	(bad)  
   14000a8a0:	cdq    
   14000a8a1:	(bad)  
   14000a8a2:	sub    bl,cl
   14000a8a4:	(bad)  
   14000a8a5:	leave  
   14000a8a6:	hlt    
   14000a8a7:	shr    BYTE PTR [rbp+0x460d6ab8],1
   14000a8ad:	fwait
   14000a8ae:	or     dl,BYTE PTR [rax-0xe]
   14000a8b1:	movabs ds:0xa1f4d9d2f272cf24,al
   14000a8ba:	rex.X
   14000a8bb:	fwait
   14000a8bc:	mov    bl,0xbf
   14000a8be:	fmul   QWORD PTR [rbx+0x2f6b6384]
   14000a8c4:	(bad)
   14000a8c7:	loopne 0x14000a8c9
   14000a8c9:	pop    rsp
   14000a8ca:	sbb    bh,dh
   14000a8cc:	outs   dx,BYTE PTR ds:[rsi]
   14000a8cd:	sbb    BYTE PTR [rax-0x4b43a3cb],dh
   14000a8d3:	mov    edx,esi
   14000a8d5:	ins    DWORD PTR es:[rdi],dx
   14000a8d6:	pop    rdx
   14000a8d7:	ins    DWORD PTR es:[rdi],dx
   14000a8d8:	out    0xfc,eax
   14000a8da:	xchg   ebx,eax
   14000a8db:	rex.WX loop 0x14000a8e1
   14000a8de:	add    BYTE PTR [rax],bl
   14000a8e0:	stos   DWORD PTR es:[rdi],eax
   14000a8e1:	std    
   14000a8e2:	jae    0x14000a92d
   14000a8e4:	rcr    BYTE PTR [rcx+0x64b69d05],0x63
   14000a8eb:	nop
   14000a8ec:	shr    ch,cl
   14000a8ee:	sub    ah,BYTE PTR [rsi-0x2b6598cd]
   14000a8f4:	pop    rcx
   14000a8f5:	ror    BYTE PTR [rdx+0x3e57b5b5],0x46
   14000a8fc:	fsubr  st(3),st
   14000a8fe:	rex.RXB
   14000a8ff:	cs in  al,dx
   14000a901:	push   rbp
   14000a902:	sub    al,0x20
   14000a904:	out    0xd9,al
   14000a906:	push   rbp
   14000a907:	cmp    al,0x1f
   14000a909:	(bad)  
   14000a90a:	cdq    
   14000a90b:	or     DWORD PTR [rbp+0x2df35fd6],0x889702ac
   14000a915:	pop    rcx
   14000a916:	clc    
   14000a917:	in     eax,dx
   14000a918:	(bad)  
   14000a919:	jp     0x14000a8aa
   14000a91b:	ja     0x14000a97e
   14000a91d:	cmp    eax,0x85149013
   14000a922:	rex.WXB or rdx,r14
   14000a925:	(bad)  
   14000a926:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000a927:	push   rbx
   14000a928:	rex.WXB movabs r9,0xaeb709b36407fc22
   14000a932:	jge    0x14000a8cb
   14000a934:	(bad)  
   14000a935:	(bad)  
   14000a936:	jmp    0x14000a909
   14000a938:	push   0xffffffffffffffb5
   14000a93a:	enter  0xacb2,0x9a
   14000a93e:	enter  0x7833,0xf2
   14000a942:	jrcxz  0x14000a922
   14000a944:	ds mov esp,0x102a38df
   14000a94a:	ficom  WORD PTR [rdi-0x66]
   14000a94d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a94e:	mov    WORD PTR [rsi+0x23],es
   14000a951:	pop    rsi
   14000a952:	cli    
   14000a953:	(bad)  
   14000a954:	stos   DWORD PTR es:[rdi],eax
   14000a955:	jl     0x14000a944
   14000a957:	mov    ecx,0xf5b1b3ef
   14000a95c:	adc    BYTE PTR [rdi],ah
   14000a95e:	rex.WRXB cmp rax,0x69f6d6c4
   14000a964:	(bad)  
   14000a965:	sbb    ebx,DWORD PTR [rbx-0x80]
   14000a968:	je     0x14000a8f4
   14000a96a:	fst    DWORD PTR [rsi+rsi*8+0x66]
   14000a96e:	cmc    
   14000a96f:	(bad)  
   14000a970:	(bad)  
   14000a971:	mov    ch,0xba
   14000a973:	imul   BYTE PTR [rbx-0x6a58fdd1]
   14000a979:	mov    cl,0x18
   14000a97b:	jrcxz  0x14000a933
   14000a97d:	push   rbp
   14000a97e:	data16 or BYTE PTR [rip+0xffffffffba5b934b],0x69        # 0xfa5c3cd1
   14000a986:	rol    esi,0x46
   14000a989:	scas   eax,DWORD PTR es:[rdi]
   14000a98a:	mov    dl,0xff
   14000a98c:	push   rdi
   14000a98d:	or     eax,0xd6d6b607
   14000a992:	out    0x35,al
   14000a994:	mov    edx,ds
   14000a996:	jb     0x14000a961
   14000a998:	(bad)
   14000a99c:	hlt    
   14000a99d:	rex.WRXB push r12
   14000a9a0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a9a1:	(bad)  
   14000a9a2:	(bad)  
   14000a9a3:	icebp  
   14000a9a4:	(bad)  
   14000a9a5:	dec    edi
   14000a9a7:	(bad)  
   14000a9a8:	call   0xffe4a6cc
   14000a9ad:	xor    bl,BYTE PTR [rbp+0x1ee0bb4e]
   14000a9b3:	(bad)  
   14000a9b4:	xor    BYTE PTR [rax],bl
   14000a9b6:	jo     0x14000a9b2
   14000a9b8:	hlt    
   14000a9b9:	imul   ebx,esi,0xf9c7defb
   14000a9bf:	hlt    
   14000a9c0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a9c1:	push   QWORD PTR [rdx]
   14000a9c3:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a9c4:	rex.WRX popf 
   14000a9c6:	and    al,0xcb
   14000a9c8:	xor    cl,BYTE PTR [rsi]
   14000a9ca:	div    BYTE PTR [rsi+0x29]
   14000a9cd:	retf   0xeab2
   14000a9d0:	stc    
   14000a9d1:	shr    DWORD PTR [rcx],0x7b
   14000a9d4:	xchg   edx,eax
   14000a9d5:	mov    dh,0x5c
   14000a9d7:	adc    cl,BYTE PTR [rsi]
   14000a9d9:	cs mov cl,0x46
   14000a9dc:	jmp    0x14000a970
   14000a9de:	and    cl,bl
   14000a9e0:	cwde   
   14000a9e1:	xchg   ebp,eax
   14000a9e2:	push   rbx
   14000a9e3:	mov    ecx,ss
   14000a9e5:	ds cmp al,0xe7
   14000a9e8:	(bad)  
   14000a9e9:	iretw  
   14000a9eb:	repnz (bad) 
   14000a9ed:	cmp    al,0xcf
   14000a9ef:	xor    esi,eax
   14000a9f1:	iret   
   14000a9f2:	rex.WXB cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   14000a9f4:	retf   
   14000a9f5:	or     cl,ch
   14000a9f7:	fwait
   14000a9f8:	(bad)  
   14000a9f9:	jrcxz  0x14000a99e
   14000a9fb:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a9fc:	test   eax,0xb850abe8
   14000aa01:	sub    cl,BYTE PTR [rbx]
   14000aa03:	rex.WR
   14000aa04:	addr32 mov bl,0x25
   14000aa07:	rex.RXB mov WORD PTR [r10+r8*4+0x74b9ccb2],ss
   14000aa0f:	jns    0x14000aa1b
   14000aa11:	ins    BYTE PTR es:[rdi],dx
   14000aa12:	and    ah,BYTE PTR [rbp-0x3dac0135]
   14000aa18:	(bad)  
   14000aa19:	in     al,dx
   14000aa1a:	stos   BYTE PTR es:[rdi],al
   14000aa1b:	jl     0x14000aa34
   14000aa1d:	pop    rsi
   14000aa1e:	jns    0x14000aa90
   14000aa20:	rex.WRX int3 
   14000aa22:	xor    al,0x15
   14000aa24:	ins    BYTE PTR es:[rdi],dx
   14000aa25:	or     al,0x24
   14000aa27:	fwait
   14000aa28:	rex.XB leave 
   14000aa2a:	je     0x14000aa16
   14000aa2c:	out    dx,al
   14000aa2d:	pop    rdi
   14000aa2e:	imul   ecx,DWORD PTR [rbx],0x22
   14000aa31:	icebp  
   14000aa32:	lea    ebp,[rsi]
   14000aa34:	sub    BYTE PTR [rsp+rbx*8-0x6],bh
   14000aa38:	mov    esp,0xcb40d9f2
   14000aa3d:	xor    eax,0xab00f5b5
   14000aa42:	adc    eax,0xf5bd1a38
   14000aa47:	push   rdx
   14000aa48:	test   al,0x2f
   14000aa4a:	(bad)  
   14000aa4b:	or     al,0x8c
   14000aa4d:	rex.WRB (bad) 
   14000aa4f:	jg     0x14000aa2f
   14000aa51:	sbb    cl,BYTE PTR [rbx]
   14000aa53:	mov    ch,cl
   14000aa55:	xchg   DWORD PTR [rax-0x22],esi
   14000aa58:	nop
   14000aa59:	fs in  al,0xbf
   14000aa5c:	xchg   DWORD PTR [rbx-0x4e],edi
   14000aa5f:	(bad)  
   14000aa60:	or     al,0xb5
   14000aa62:	push   rsi
   14000aa63:	outs   dx,BYTE PTR ds:[rsi]
   14000aa64:	or     eax,0x9d30ccbc
   14000aa69:	pop    rbx
   14000aa6a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000aa6b:	cdq    
   14000aa6c:	and    ebx,ecx
   14000aa6e:	and    al,0xb9
   14000aa70:	syscall 
   14000aa72:	or     ch,BYTE PTR [rdx+rdx*2]
   14000aa75:	(bad)  
   14000aa76:	rex push rsp
   14000aa78:	imul   eax,DWORD PTR [rsi],0x5c6e6ac6
   14000aa7e:	stc    
   14000aa7f:	(bad)  
   14000aa80:	setg   BYTE PTR [rbp-0x4f]
   14000aa84:	mov    cl,0xd1
   14000aa86:	scas   eax,DWORD PTR es:[rdi]
   14000aa87:	test   al,0x7f
   14000aa89:	push   rax
   14000aa8a:	clc    
   14000aa8b:	mov    eax,0x7e958fc7
   14000aa90:	push   rbp
   14000aa91:	mov    eax,0xd6c5294f
   14000aa96:	(bad)  
   14000aa97:	(bad)  
   14000aa98:	(bad)  
   14000aa99:	(bad)  
   14000aa9a:	pop    rsi
   14000aa9b:	out    0xcb,al
   14000aa9d:	pop    rdi
   14000aa9e:	jge    0x14000aa3e
   14000aaa0:	mov    ah,0x7b
   14000aaa2:	mov    dl,bl
   14000aaa4:	addr32 ffreep st(3)
   14000aaa7:	(bad)  
   14000aaa8:	(bad)  
   14000aaa9:	sbb    DWORD PTR [rdx-0x3],edi
   14000aaac:	sub    eax,0x50e855ac
   14000aab1:	add    ecx,DWORD PTR [rip+0x2834bf8a]        # 0x168356a41
   14000aab7:	sub    DWORD PTR [rax-0x5],edx
   14000aaba:	push   rbp
   14000aabb:	int    0xa2
   14000aabd:	(bad)
   14000aac3:	add    bh,BYTE PTR [rsi+rsi*1]
   14000aac6:	(bad)  
   14000aac7:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000aac8:	pop    rdi
   14000aac9:	call   QWORD PTR gs:[rdi-0x588fe792]
   14000aad0:	scas   eax,DWORD PTR es:[rdi]
   14000aad1:	sbb    DWORD PTR [rsi-0x22baeb7a],ecx
   14000aad7:	adc    DWORD PTR [ebx],ebp
   14000aada:	jnp    0x14000ab2d
   14000aadc:	adc    al,0x47
   14000aade:	lods   eax,DWORD PTR ds:[rsi]
   14000aadf:	add    eax,0xa3f0af0
   14000aae4:	rex.WRX ror BYTE PTR [rdi-0x405c0b82],0xa8
   14000aaec:	mov    ch,0xfe
   14000aaee:	ja     0x14000ab4f
   14000aaf0:	cld    
   14000aaf1:	loop   0x14000ab0a
   14000aaf3:	(bad)  [rcx+0x31]
   14000aaf6:	adc    DWORD PTR [rsi-0x55],0xffffffc5
   14000aafa:	addr32 (bad) 
   14000aafc:	sti    
   14000aafd:	pop    rcx
   14000aafe:	scas   al,BYTE PTR es:[rdi]
   14000aaff:	pop    rbp
   14000ab00:	mov    ebx,0xf0be17c6
   14000ab05:	add    eax,0xebfc1084
   14000ab0a:	jg     0x14000ab09
   14000ab0c:	outs   dx,DWORD PTR ds:[rsi]
   14000ab0d:	clc    
   14000ab0e:	int3   
   14000ab0f:	addr32 ds ret 
   14000ab12:	(bad)  
   14000ab14:	sti    
   14000ab15:	jg     0x14000aab6
   14000ab17:	jae    0x14000ab00
   14000ab19:	(bad)  
   14000ab1a:	jno    0x14000ab0f
   14000ab1c:	(bad)  
   14000ab1d:	xor    eax,0xdab4d68c
   14000ab22:	sbb    eax,0xb792e537
   14000ab27:	in     eax,0xb3
   14000ab29:	stc    
   14000ab2a:	mov    WORD PTR [rbx+rcx*8],?
   14000ab2d:	mov    esp,0x766c1009
   14000ab32:	rex.XB test eax,0x4679f30d
   14000ab38:	xchg   esi,eax
   14000ab39:	gs cs and edi,eax
   14000ab3d:	fwait
   14000ab3e:	adc    eax,DWORD PTR [rdx+0x50]
   14000ab41:	imul   eax,DWORD PTR [rax],0x77
   14000ab44:	xchg   edx,eax
   14000ab45:	jnp    0x14000ab98
   14000ab47:	hlt    
   14000ab48:	push   rbp
   14000ab49:	add    DWORD PTR gs:[rax+rsi*2-0x6db6bf37],edx
   14000ab51:	push   rsp
   14000ab52:	or     ah,BYTE PTR [rdx-0x53]
   14000ab55:	or     r14b,BYTE PTR [r15+0x58c1f01a]
   14000ab5c:	(bad)  
   14000ab5d:	ins    DWORD PTR es:[rdi],dx
   14000ab5e:	(bad)  
   14000ab5f:	adc    al,0xa0
   14000ab61:	xchg   esp,eax
   14000ab62:	rex.R
   14000ab63:	rex.WX and QWORD PTR [rax],0x76c0d650
   14000ab6a:	ror    BYTE PTR [rdx],0xe7
   14000ab6d:	(bad)  
   14000ab6e:	nop
   14000ab6f:	add    bh,BYTE PTR [rdx]
   14000ab71:	in     eax,dx
   14000ab72:	test   BYTE PTR [rbp+0x2bb74241],cl
   14000ab78:	cwde   
   14000ab79:	int    0xd
   14000ab7b:	mov    edx,0xa74b60d4
   14000ab80:	nop
   14000ab81:	and    al,BYTE PTR [rcx]
   14000ab83:	cdq    
   14000ab84:	add    dl,dl
   14000ab86:	test   edx,0x222bef71
   14000ab8c:	and    eax,0x5aee0bb5
   14000ab91:	cmc    
   14000ab92:	out    dx,al
   14000ab93:	stos   DWORD PTR es:[rdi],eax
   14000ab94:	(bad)  
   14000ab95:	sti    
   14000ab96:	cmp    r15,QWORD PTR [r15+0x24288152]
   14000ab9d:	call   0x14163ff71
   14000aba2:	(bad)  
   14000aba3:	sub    edi,DWORD PTR [rsp+riz*8+0xa]
   14000aba7:	stos   DWORD PTR es:[rdi],eax
   14000aba8:	pop    rax
   14000aba9:	rex.XB jl 0x14000abe9
   14000abac:	jmp    0x15e524989
   14000abb1:	nop
   14000abb2:	test   DWORD PTR [rdi-0x60cf2fdd],ebx
   14000abb8:	or     ebx,DWORD PTR [rdi]
   14000abba:	or     eax,0xb540a670
   14000abbf:	(bad)  
   14000abc0:	(bad)  
   14000abc1:	mov    al,0x50
   14000abc3:	cmp    bh,BYTE PTR [rdi]
   14000abc5:	int3   
   14000abc6:	lea    ebp,[rbx-0x51]
   14000abc9:	ror    BYTE PTR [rbp+0x6f],cl
   14000abcc:	repz sar BYTE PTR [rcx-0x4d34d7f9],0xf2
   14000abd4:	faddp  st(7),st
   14000abd6:	and    esp,edx
   14000abd8:	loop   0x14000abea
   14000abda:	(bad)  
   14000abdb:	or     al,0x0
   14000abdd:	icebp  
   14000abde:	mov    ebx,0xd184924c
   14000abe3:	push   0xffffffffe63c78c4
   14000abe8:	mov    edi,DWORD PTR [rdi-0xc]
   14000abeb:	sbb    al,0x99
   14000abed:	out    dx,al
   14000abee:	repz rol BYTE PTR [rbx-0x71],1
   14000abf2:	xor    edx,ebx
   14000abf4:	cmp    cl,BYTE PTR [rbp+0x7f]
   14000abf7:	mov    eax,0x785a4a83
   14000abfc:	(bad)  
   14000abfd:	adc    esi,DWORD PTR [rip+0xffffffffb576242b]        # 0xf576d02e
   14000ac03:	rex.R (bad) 
   14000ac05:	sbb    al,BYTE PTR [rbx+0x99352c1]
   14000ac0b:	(bad)  
   14000ac0c:	(bad)  
   14000ac0d:	mov    dh,0x7
   14000ac0f:	and    bl,BYTE PTR [rbx+0x39]
   14000ac12:	add    bl,ah
   14000ac14:	sbb    al,0x80
   14000ac16:	shl    bh,cl
   14000ac18:	add    al,ch
   14000ac1a:	xchg   edx,eax
   14000ac1b:	push   rsp
   14000ac1c:	int3   
   14000ac1d:	nop
   14000ac1e:	rex.X movabs ds:0xe3c75ecc4fa07d75,al
   14000ac28:	icebp  
   14000ac29:	stos   BYTE PTR es:[rdi],al
   14000ac2a:	(bad)  
   14000ac2b:	rol    BYTE PTR [rax],0x6f
   14000ac2e:	std    
   14000ac2f:	cli    
   14000ac30:	scas   eax,DWORD PTR es:[rdi]
   14000ac31:	(bad)  
   14000ac32:	jp     0x14000ac0d
   14000ac34:	fdivr  QWORD PTR [rax+0x3f]
   14000ac37:	in     al,0x58
   14000ac39:	add    BYTE PTR [rax],ah
   14000ac3b:	test   al,bh
   14000ac3d:	lahf   
   14000ac3e:	lods   al,BYTE PTR ds:[rsi]
   14000ac3f:	mov    ch,0xed
   14000ac41:	shr    DWORD PTR [rax-0x3c],1
   14000ac44:	jo     0x14000ac7e
   14000ac46:	in     al,0xf0
   14000ac48:	lock adc BYTE PTR [rcx],ch
   14000ac4b:	and    eax,0xfeeffb7f
   14000ac50:	cmp    eax,0xbf018306
   14000ac55:	(bad)  
   14000ac56:	stos   DWORD PTR es:[rdi],eax
   14000ac57:	mov    edi,0xe13264c2
   14000ac5c:	fidiv  DWORD PTR [rbp+0x6ff6fc6b]
   14000ac62:	push   QWORD PTR [rsi]
   14000ac64:	mov    edi,0xcbbfbbfb
   14000ac69:	(bad)  
   14000ac6a:	jmp    rdi
   14000ac6c:	call   FWORD PTR [rdi+rcx*4-0x9961383]
   14000ac73:	div    dh
   14000ac75:	sub    edx,esi
   14000ac77:	mov    ecx,gs
   14000ac79:	in     al,0x90
   14000ac7b:	and    cl,bh
   14000ac7d:	cmp    eax,0xbe942fca
   14000ac82:	sub    BYTE PTR [rbx+rsi*4],dh
   14000ac85:	stc    
   14000ac86:	pushf  
   14000ac87:	jns    0x14000ac1f
   14000ac89:	jnp    0x14000acaf
   14000ac8b:	je     0x14000ac22
   14000ac8d:	mov    ah,0x68
   14000ac8f:	or     bh,al
   14000ac91:	movabs ds:0xc6c84381bb9277f6,eax
   14000ac9a:	(bad)  
   14000ac9b:	mov    ch,0x5a
   14000ac9d:	test   BYTE PTR [rax+riz*4],al
   14000aca0:	jo     0x14000acd1
   14000aca2:	xchg   ebx,eax
   14000aca3:	pop    rcx
   14000aca4:	shl    ecx,0xd4
   14000aca7:	sub    DWORD PTR [rcx+0x202f2e14],ebp
   14000acad:	and    QWORD PTR [rbp-0xd],r10
   14000acb1:	in     al,dx
   14000acb2:	pop    rdx
   14000acb3:	ror    BYTE PTR [rdx+0x4d2ffb2a],0x5
   14000acba:	std    
   14000acbb:	pop    rsi
   14000acbc:	rex.WX scas rax,QWORD PTR es:[rdi]
   14000acbe:	fwait
   14000acbf:	xor    BYTE PTR [rsi],bh
   14000acc1:	sub    al,0xc8
   14000acc3:	ret    
   14000acc4:	xor    BYTE PTR [rcx+0xc],ah
   14000acc7:	fadd   st,st(2)
   14000acc9:	jne    0x14000ace8
   14000accb:	rex.X js 0x14000ad29
   14000acce:	pop    rbx
   14000accf:	loope  0x14000ad4b
   14000acd1:	(bad)  
   14000acd2:	(bad)  
   14000acd3:	cmp    eax,0x96589ee6
   14000acd8:	ret    
   14000acd9:	jnp    0x14000ad28
   14000acdb:	(bad)  
   14000acdc:	adc    dl,cl
   14000acde:	adc    DWORD PTR [rbp-0x5dff0595],edx
   14000ace4:	std    
   14000ace5:	rex.RXB cmp r10b,BYTE PTR [r10]
   14000ace8:	jrcxz  0x14000aca6
   14000acea:	xor    al,0x1d
   14000aced:	ret    0x41ec
   14000acf0:	(bad)  
   14000acf1:	pop    rdx
   14000acf2:	(bad)  
   14000acf3:	shl    BYTE PTR [rsp+rsi*8+0x7f3805eb],cl
   14000acfa:	rex push rcx
   14000acfc:	pop    rax
   14000acfd:	je     0x14000ad28
   14000acff:	rol    BYTE PTR [rsi],1
   14000ad01:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ad02:	mov    ch,0x9e
   14000ad04:	cmp    BYTE PTR [rax+0x6e0f8eeb],bh
   14000ad0a:	rex jno 0x14000ac8e
   14000ad0d:	(bad)  
   14000ad0e:	lahf   
   14000ad0f:	cmp    BYTE PTR [rcx+0x789b7ef6],cl
   14000ad15:	push   rcx
   14000ad16:	int3   
   14000ad17:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000ad18:	movabs ds:0x8060c18004d080c7,al
   14000ad21:	adc    BYTE PTR [rdx-0x140681d1],al
   14000ad27:	pop    rsp
   14000ad28:	mov    ebx,0x23e0f25d
   14000ad2d:	rex.WRXB mov r10b,0xbd
   14000ad30:	jae    0x14000acc8
   14000ad32:	loope  0x14000ad1c
   14000ad34:	add    al,0x69
   14000ad36:	shr    BYTE PTR [rcx-0x552a0f9b],cl
   14000ad3c:	sub    BYTE PTR [rdx-0x741b6a46],ch
   14000ad42:	rex.RX xchg ebp,eax
   14000ad44:	test   BYTE PTR [rsi-0x4f],dh
   14000ad47:	(bad)  
   14000ad48:	pop    rbx
   14000ad49:	pop    rsp
   14000ad4a:	mov    esi,0x8bd00916
   14000ad4f:	pushf  
   14000ad50:	add    BYTE PTR [rcx+rax*2+0x27],ch
   14000ad54:	lods   eax,DWORD PTR ds:[rsi]
   14000ad55:	rex.RXB mov r12b,0x56
   14000ad58:	add    eax,0x6501c1c1
   14000ad5e:	pop    rcx
   14000ad5f:	test   DWORD PTR cs:[rsi-0x5054547f],ebx
   14000ad66:	cli    
   14000ad67:	(bad)  
   14000ad68:	in     eax,0xb8
   14000ad6a:	es rex iret 
   14000ad6d:	sbb    bl,al
   14000ad6f:	leave  
   14000ad70:	xchg   ebx,eax
   14000ad71:	(bad)  
   14000ad72:	jns    0x14000ad6e
   14000ad74:	jmp    0x146c58b20
   14000ad79:	(bad)  
   14000ad7a:	xor    eax,0x43fdbdc8
   14000ad7f:	sahf   
   14000ad80:	jl     0x14000ad74
   14000ad82:	rex.WB scas al,BYTE PTR es:[rdi]
   14000ad84:	pop    rsi
   14000ad85:	mov    ebp,0xcedbedca
   14000ad8a:	(bad)  
   14000ad8b:	jns    0x14000ad7a
   14000ad8d:	fidiv  DWORD PTR [rip+0xfffffffff93fc9fe]        # 0x139407791
   14000ad93:	(bad)  
   14000ad94:	cld    
   14000ad95:	(bad)  
   14000ad96:	outs   dx,DWORD PTR ds:[rsi]
   14000ad97:	std    
   14000ad98:	(bad)  
   14000ad99:	rex.WRXB cmp rax,0x7b0714f5
   14000ad9f:	mov    bh,0xc9
   14000ada1:	xor    dh,BYTE PTR [rdi]
   14000ada3:	fnsave [rcx-0x57]
   14000ada6:	xor    eax,0x273a5945
   14000adab:	pop    rsi
   14000adac:	pop    rsi
   14000adad:	nop
   14000adae:	out    0x45,eax
   14000adb0:	lods   eax,DWORD PTR ds:[rsi]
   14000adb1:	(bad)  
   14000adb2:	cmp    BYTE PTR [rsi+0x40121f2d],ch
   14000adb8:	push   rsi
   14000adb9:	jp     0x14000adb1
   14000adbb:	out    dx,eax
   14000adbc:	test   esi,esi
   14000adbe:	(bad)  
   14000adbf:	(bad)  
   14000adc0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000adc1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000adc2:	(bad)  
   14000adc3:	pop    rcx
   14000adc4:	xchg   esi,eax
   14000adc5:	xor    eax,ebx
   14000adc7:	pop    rax
   14000adc8:	lods   al,BYTE PTR ds:[rsi]
   14000adc9:	and    esp,DWORD PTR [rdi+0x71]
   14000adcc:	and    eax,eax
   14000adce:	stc    
   14000adcf:	mov    esp,0x713f7f60
   14000add4:	or     al,0x5c
   14000add6:	rex.WX xchg rdi,rax
   14000add8:	add    esp,DWORD PTR [rax+0x42aaab5c]
   14000adde:	rex.WR sbb BYTE PTR [rax],r14b
   14000ade1:	jle    0x14000adf5
   14000ade3:	push   rcx
   14000ade4:	(bad)  
   14000ade6:	xchg   esp,eax
   14000ade7:	jb     0x14000ad92
   14000ade9:	rol    ebx,0x8d
   14000adec:	(bad)  
   14000aded:	(bad)  
   14000adee:	jrcxz  0x14000adcc
   14000adf0:	mov    cl,0x80
   14000adf2:	(bad)  
   14000adf3:	xchg   bh,bl
   14000adf5:	iret   
   14000adf6:	test   eax,0xe5083031
   14000adfc:	sbb    BYTE PTR [rdx+0x1bbe9ed1],al
   14000ae02:	(bad)  
   14000ae03:	ss mov esi,0x51becfaa
   14000ae09:	imul   esp,ecx,0xffffffb1
   14000ae0c:	test   eax,0x2c4db440
   14000ae11:	scas   al,BYTE PTR es:[rdi]
   14000ae12:	ret    
   14000ae13:	stos   BYTE PTR es:[rdi],al
   14000ae14:	rex.W
   14000ae15:	rex.X push rbp
   14000ae17:	movabs ds:0xe10485d93413c62c,eax
   14000ae20:	rex.RX cmp BYTE PTR [rdx+0x2b],r11b
   14000ae24:	rcr    dl,1
   14000ae26:	nop
   14000ae27:	(bad)  
   14000ae28:	push   0xffffffffffffffc1
   14000ae2a:	add    dh,BYTE PTR [rdx+0x41]
   14000ae2d:	pop    rsi
   14000ae2e:	or     BYTE PTR [rdx+0x2d],cl
   14000ae31:	nop
   14000ae32:	jle    0x14000ae75
   14000ae34:	mov    DWORD PTR gs:[rip+0xffffffffdfec26cf],esp        # 0x11fecd50a
   14000ae3b:	jp     0x14000adce
   14000ae3d:	(bad)  
   14000ae3e:	(bad)  
   14000ae3f:	jmp    0xd8b81d14
   14000ae44:	int    0x66
   14000ae46:	xchg   ebp,eax
   14000ae47:	jrcxz  0x14000adf8
   14000ae49:	fxch   st(3)
   14000ae4b:	(bad)  
   14000ae4c:	add    DWORD PTR [rax],esp
   14000ae4e:	(bad)  
   14000ae4f:	sbb    eax,0xd3a76798
   14000ae54:	loope  0x14000aea1
   14000ae56:	pop    rdi
   14000ae57:	(bad)  
   14000ae58:	adc    edi,DWORD PTR [rsi+0x4e2ddaff]
   14000ae5e:	(bad)  
   14000ae5f:	lock jle 0x14000aed8
   14000ae62:	rex.WRX
   14000ae63:	ds enter 0xfb68,0x34
   14000ae68:	lods   eax,DWORD PTR ds:[rsi]
   14000ae69:	rex.WRX fbld TBYTE PTR [rip+0xffffffffc7e5e8fa]        # 0x107e6976a
   14000ae70:	stos   BYTE PTR es:[rdi],al
   14000ae71:	hlt    
   14000ae72:	cmp    al,0x6
   14000ae74:	cmp    DWORD PTR [rax+0x67],0xf9616090
   14000ae7b:	out    dx,eax
   14000ae7c:	rex.RXB cli 
   14000ae7e:	push   rdi
   14000ae7f:	rex.RB add DWORD PTR [r9],0x58
   14000ae83:	out    dx,eax
   14000ae84:	or     esi,DWORD PTR [rax-0x65bfacf5]
   14000ae8a:	sub    DWORD PTR [rdi+0x49247a77],esp
   14000ae90:	mov    dh,BYTE PTR [rbp-0x14450ba7]
   14000ae96:	in     eax,dx
   14000ae97:	jno    0x14000ae6e
   14000ae99:	rex.WR rcr BYTE PTR [rsi-0x22],0x5c
   14000ae9e:	mov    ch,0xf1
   14000aea0:	jle    0x14000ae6a
   14000aea2:	cmp    eax,0x3ec7c003
   14000aea7:	div    BYTE PTR [rcx-0x21f527ec]
   14000aead:	retf   0x7c2f
   14000aeb0:	loope  0x14000aebd
   14000aeb2:	fs pop rcx
   14000aeb4:	rex.RX mov edi,0x9fe3e03f
   14000aeba:	clc    
   14000aebb:	jns    0x14000af37
   14000aebd:	fnstsw WORD PTR [rsi]
   14000aebf:	rex.WRXB
   14000aec0:	ds stc 
   14000aec2:	and    al,0x9f
   14000aec4:	cld    
   14000aec5:	in     al,0x27
   14000aec7:	(bad)  
   14000aec9:	(bad)  
   14000aeca:	loopne 0x14000ae91
   14000aecc:	(bad)  
   14000aecd:	mov    edi,0xbeafabc3
   14000aed2:	retf   0xafeb
   14000aed5:	mov    edi,0x97fcbfce
   14000aeda:	call   QWORD PTR [rdx-0x1d00e81]
   14000aee0:	add    eax,0xed725979
   14000aee5:	cli    
   14000aee6:	int    0x5a
   14000aee8:	fisubr DWORD PTR [rip+0xffffffffed447788]        # 0x12d452676
   14000aeee:	fild   QWORD PTR [rcx-0x539a383e]
   14000aef4:	jg     0x14000aeb1
   14000aef6:	add    bh,BYTE PTR [rdi+rbp*4-0x12]
   14000aefa:	mov    bh,0xe3
   14000aefc:	fiadd  DWORD PTR [rax-0x5e]
   14000aeff:	adc    al,0x7
   14000af01:	(bad)  
   14000af02:	push   rbx
   14000af03:	test   BYTE PTR [rdi],0xdc
   14000af06:	adc    BYTE PTR [rbp+0x29],dl
   14000af09:	pop    rbp
   14000af0a:	adc    dl,BYTE PTR [rax-0x758a3d6e]
   14000af10:	ss int3 
   14000af12:	sub    dl,BYTE PTR [rsp+rbp*2]
   14000af15:	ja     0x14000af18
   14000af17:	enter  0xd1aa,0x74
   14000af1b:	mov    ebx,0x36a39b09
   14000af20:	sti    
   14000af21:	(bad)  
   14000af22:	cmp    ebx,esp
   14000af24:	ret    
   14000af25:	add    bl,BYTE PTR [rbp-0x3a]
   14000af28:	fst    QWORD PTR [rdx+0x6c]
   14000af2b:	xchg   ebx,eax
   14000af2c:	(bad)  
   14000af2d:	movsxd edi,ebx
   14000af2f:	ficom  WORD PTR [rax+rsi*4-0x48]
   14000af33:	xor    dl,BYTE PTR [rbp-0x56]
   14000af36:	(bad)  
   14000af37:	add    al,0x23
   14000af39:	jno    0x14000af87
   14000af3b:	and    ecx,esi
   14000af3d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000af3e:	rex.R ret 0xc7b2
   14000af42:	sahf   
   14000af43:	cmp    cl,BYTE PTR [rax]
   14000af45:	push   rsp
   14000af46:	mov    edi,0x5405e457
   14000af4b:	loopne 0x14000af5d
   14000af4d:	stc    
   14000af4e:	or     ch,BYTE PTR [rdx-0x4e3cf887]
   14000af54:	sbb    ecx,DWORD PTR [r15+rcx*2-0x7aebedfa]
   14000af5c:	gs ds ja 0x14000af8b
   14000af60:	(bad)  
   14000af61:	int    0xe6
   14000af63:	xchg   BYTE PTR [rax+rdx*4+0x75a594],bh
   14000af6a:	sub    DWORD PTR [rsi+rax*1],ebp
   14000af6d:	mov    eax,0x9c7bfd75
   14000af72:	cmp    esp,DWORD PTR [rip+0xffffffffd51adad8]        # 0x1151b8a50
   14000af78:	rex.RX clc 
   14000af7a:	(bad)
   14000af7d:	sub    al,0x94
   14000af7f:	mov    esp,0xfe17f199
   14000af84:	(bad)  
   14000af85:	rex.WB ret 0x3870
   14000af89:	in     al,0x85
   14000af8b:	(bad)  
   14000af8c:	pop    rsi
   14000af8d:	in     al,0x6b
   14000af8f:	iret   
   14000af90:	mov    esi,0x71e770cc
   14000af95:	mov    dh,0x4f
   14000af97:	ds (bad) 
   14000af99:	(bad)  
   14000af9a:	lock and al,0xad
   14000af9d:	push   rsi
   14000af9e:	mov    edi,0xa477b596
   14000afa3:	cmp    eax,0x62d15e1f
   14000afa8:	rcl    DWORD PTR [rdx-0x493d9fc7],cl
   14000afae:	xchg   BYTE PTR [rsi-0x2a],cl
   14000afb1:	(bad)  
   14000afb2:	sbb    DWORD PTR [rcx+0x3ffc7100],ebx
   14000afb8:	(bad)  
   14000afb9:	add    DWORD PTR [rax],edx
   14000afbb:	jbe    0x14000af87
   14000afbd:	push   0x55df4ce0
   14000afc2:	or     al,0x20
   14000afc4:	cld    
   14000afc5:	ds (bad) 
   14000afc7:	sbb    dh,BYTE PTR [rax]
   14000afc9:	adc    bh,0x56
   14000afcc:	ins    DWORD PTR es:[rdi],dx
   14000afcd:	mov    esp,0x61c721f
   14000afd2:	and    BYTE PTR [rcx-0x5f6847d2],al
   14000afd8:	mov    ch,0xf6
   14000afda:	xor    DWORD PTR [rip+0x61851426],0x2f        # 0x1a185c407
   14000afe1:	(bad)  
   14000afe2:	loopne 0x14000afc3
   14000afe4:	(bad)  
   14000afe5:	sti    
   14000afe6:	inc    eax
   14000afe8:	(bad)  
   14000afe9:	(bad)  
   14000afea:	ss (bad) 
   14000afec:	sti    
   14000afed:	mov    bl,0x3f
   14000afef:	(bad)  
   14000aff0:	(bad)  
   14000aff1:	(bad)  
   14000aff2:	loop   0x14000b023
   14000aff4:	icebp  
   14000aff5:	int3   
   14000aff6:	xor    ecx,edi
   14000aff8:	lock sti 
   14000affa:	mov    edi,0xf6f679ff
   14000afff:	imul   BYTE PTR [rax]
   14000b001:	retf   
   14000b002:	xchg   edx,eax
   14000b003:	jmp    0x1b8c27e7c
   14000b008:	rex.X xchg edx,eax
   14000b00a:	sub    al,0x53
   14000b00c:	mov    ebp,0x4528e4a3
   14000b011:	cmp    eax,0xe51fba8a
   14000b016:	or     al,0xbc
   14000b018:	(bad)  
   14000b019:	ror    BYTE PTR [rax],0xdf
   14000b01c:	retf   
   14000b01d:	movabs ds:0x34f8c70728924920,al
   14000b026:	movsxd eax,ebp
   14000b028:	js     0x14000afc6
   14000b02a:	xor    DWORD PTR [rbx+0x12000f0b],ebx
   14000b030:	and    DWORD PTR [rbp+0x54],eax
   14000b033:	(bad)  
   14000b034:	xor    eax,0x5ee9caf4
   14000b039:	pop    rbx
   14000b03a:	sub    dl,BYTE PTR [rdi-0x70]
   14000b03d:	es xchg edx,eax
   14000b03f:	outs   dx,BYTE PTR ds:[rsi]
   14000b040:	rex.RXB xor r8d,r13d
   14000b043:	and    eax,0x2c8a5ab4
   14000b048:	(bad)  
   14000b049:	fsub   QWORD PTR [rcx+riz*4-0x69e28bb5]
   14000b050:	xor    bh,cl
   14000b052:	push   0x14
   14000b054:	lahf   
   14000b055:	test   al,0xbc
   14000b057:	jne    0x14000b0a5
   14000b059:	movabs eax,ds:0xc82bf2587d170902
   14000b062:	(bad)  
   14000b063:	pop    rdx
   14000b064:	and    al,0xd4
   14000b066:	rex.RXB (bad) 
   14000b068:	push   rsi
   14000b069:	xchg   ebp,eax
   14000b06a:	mov    al,0xf8
   14000b06c:	ins    DWORD PTR es:[rdi],dx
   14000b06d:	sub    eax,0x978899b5
   14000b072:	sbb    al,0x82
   14000b074:	mov    ebx,esp
   14000b076:	add    al,0x5b
   14000b078:	cmp    DWORD PTR [rsi+0x7d],esp
   14000b07b:	push   rdx
   14000b07c:	push   rax
   14000b07d:	and    esp,edi
   14000b07f:	movabs al,ds:0x8216825a58753720
   14000b088:	fstp   QWORD PTR [rbx]
   14000b08a:	fbld   TBYTE PTR [rbx-0x55]
   14000b08d:	jg     0x14000b04f
   14000b08f:	rex.XB setl BYTE PTR [r9-0x2cb2c416]
   14000b097:	xchg   ebp,eax
   14000b098:	cmp    eax,0x9a2edc7d
   14000b09d:	shl    BYTE PTR [rax+0x18306294],0x70
   14000b0a4:	loope  0x14000b088
   14000b0a6:	and    eax,0x9e0fef7e
   14000b0ab:	and    eax,0xc4e69f69
   14000b0b0:	jmp    0xdd1989fc
   14000b0b5:	movabs ds:0x347adc5cac611bd3,al
   14000b0be:	mov    al,0xb2
   14000b0c0:	data16 (bad) 
   14000b0c2:	sti    
   14000b0c3:	(bad)  
   14000b0c4:	scas   al,BYTE PTR es:[rdi]
   14000b0c5:	cmp    eax,0xde3bb47e
   14000b0ca:	pop    rax
   14000b0cb:	or     esp,DWORD PTR [rsi+0x22d502f8]
   14000b0d1:	test   al,0x51
   14000b0d3:	loope  0x14000b0af
   14000b0d5:	cmp    al,0x80
   14000b0d7:	mov    edx,0x398a040e
   14000b0dc:	rex.X sub al,0x56
   14000b0df:	std    
   14000b0e0:	pop    rcx
   14000b0e1:	rex.RB inc DWORD PTR [r11-0x4bbd4627]
   14000b0e8:	adc    dl,ah
   14000b0ea:	pop    rbp
   14000b0eb:	sbb    DWORD PTR [rcx],ecx
   14000b0ed:	or     bh,al
   14000b0ef:	(bad)  
   14000b0f0:	add    DWORD PTR [rsp+rdx*8],esi
   14000b0f3:	jmp    0xe28345aa
   14000b0f8:	pop    rsp
   14000b0f9:	xor    al,0xe0
   14000b0fb:	repz out 0xcf,eax
   14000b0fe:	push   rbx
   14000b0ff:	adc    al,0x5
   14000b101:	(bad)  
   14000b103:	hlt    
   14000b104:	adc    ch,ch
   14000b106:	mov    dh,0x9b
   14000b108:	and    eax,0xcb3abeb7
   14000b10d:	popf   
   14000b10e:	xchg   ebp,eax
   14000b10f:	(bad)  
   14000b110:	in     eax,dx
   14000b111:	cmp    ch,bh
   14000b113:	out    dx,al
   14000b114:	(bad)  
   14000b115:	rcr    edi,cl
   14000b117:	jmp    0x14000b18a
   14000b119:	(bad)  
   14000b11a:	pop    rdx
   14000b11b:	out    0x59,al
   14000b11d:	out    0x12,al
   14000b11f:	(bad)  
   14000b120:	and    ah,BYTE PTR [rbp-0x5b6dbf50]
   14000b126:	in     al,dx
   14000b127:	(bad)  
   14000b128:	out    0xd8,eax
   14000b12a:	pop    rsp
   14000b12b:	movabs al,ds:0x4c061fa4a72fce7a
   14000b134:	(bad)  
   14000b135:	add    BYTE PTR [rcx-0x6c27782e],dl
   14000b13b:	(bad)  
   14000b13c:	loop   0x14000b169
   14000b13e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000b13f:	movabs al,ds:0xc52dda53f5e84ed3
   14000b148:	rex.R xchg esi,eax
   14000b14a:	cmp    DWORD PTR cs:[rbp+0x78974bc9],esp
   14000b151:	es jno 0x14000b0f5
   14000b154:	clc    
   14000b155:	data16 (bad) 
   14000b157:	pop    rbp
   14000b158:	push   rdi
   14000b159:	sub    eax,0x66a965c6
   14000b15e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b15f:	test   al,0x9c
   14000b161:	jg     0x14000b0f4
   14000b163:	adc    DWORD PTR [rcx+0x78],0xffffff96
   14000b167:	and    BYTE PTR [rbx],dl
   14000b169:	and    BYTE PTR [rbp-0x50],bl
   14000b16c:	(bad)  
   14000b16d:	rex.XB and ebp,r11d
   14000b170:	and    eax,0x32222266
   14000b175:	(bad)  
   14000b176:	cld    
   14000b177:	cmp    eax,0x6245834a
   14000b17c:	mov    ch,0x41
   14000b17e:	xchg   edi,eax
   14000b17f:	outs   dx,BYTE PTR ds:[rsi]
   14000b180:	movabs ds:0xca5a5d0002a0bcd0,al
   14000b189:	xor    cl,r11b
   14000b18c:	mov    ebp,0xe15e5b44
   14000b191:	mov    cl,0x47
   14000b193:	rex.WRX movabs al,ds:0x547dca9b5d52aa94
   14000b19d:	iret   
   14000b19e:	(bad)  
   14000b19f:	jle    0x14000b1a8
   14000b1a1:	in     eax,0x9f
   14000b1a3:	rex.WR
   14000b1a4:	es jl  0x14000b195
   14000b1a7:	idiv   DWORD PTR [rsi-0x1a299e36]
   14000b1ad:	rol    DWORD PTR [rdi-0x22],0xc3
   14000b1b1:	(bad)  
   14000b1b2:	out    0x69,al
   14000b1b4:	cli    
   14000b1b5:	sub    DWORD PTR [rip+0xffffffffc0dc4884],0xffffff9d        # 0x100dcfa40
   14000b1bc:	push   rax
   14000b1bd:	gs fdivrp st(7),st
   14000b1c0:	pop    rcx
   14000b1c1:	movsxd esi,esi
   14000b1c3:	lea    edi,[rcx+0xa]
   14000b1c6:	push   rdi
   14000b1c7:	cmp    DWORD PTR [rcx],eax
   14000b1c9:	rex.RB mov r12b,0x3f
   14000b1cc:	scas   al,BYTE PTR es:[rdi]
   14000b1cd:	imul   dl
   14000b1cf:	adc    eax,0x9917f85
   14000b1d4:	push   rcx
   14000b1d5:	sub    DWORD PTR [rdi-0x47],edi
   14000b1d8:	enter  0x801,0x8c
   14000b1dc:	movabs al,ds:0x3abd4a5d070c149f
   14000b1e5:	add    dl,BYTE PTR [rax]
   14000b1e7:	jl     0x14000b1ec
   14000b1e9:	int    0xa5
   14000b1eb:	int    0xfc
   14000b1ed:	repz iret 
   14000b1ef:	jns    0x14000b188
   14000b1f1:	xchg   BYTE PTR [rdx],al
   14000b1f3:	ret    
   14000b1f4:	xor    DWORD PTR [rax],eax
   14000b1f6:	or     BYTE PTR [rcx+0x38a08d80],spl
   14000b1fd:	xor    DWORD PTR [rdx+0x60738515],ecx
   14000b203:	add    eax,0x9a230f54
   14000b208:	jp     0x14000b1c7
   14000b20a:	(bad)  
   14000b20b:	imul   ebx,DWORD PTR [rdx-0x7070e1ce],0x2f74e51c
   14000b215:	mov    bh,BYTE PTR [rsi-0x41]
   14000b218:	retf   0xbde
   14000b21b:	sbb    BYTE PTR [rax],ch
   14000b21d:	sub    DWORD PTR [rcx+0x52],edx
   14000b220:	movabs ds:0x610a387dbcf85a95,al
   14000b229:	mov    ecx,0xa31f757a
   14000b22e:	add    eax,0xc3e10089
   14000b233:	and    cl,0x9c
   14000b236:	mov    BYTE PTR [rax+0x215f2190],0x6e
   14000b23d:	jns    0x14000b2bd
   14000b23f:	rex.RX and BYTE PTR [rbx],r9b
   14000b242:	lods   eax,DWORD PTR ds:[rsi]
   14000b243:	xchg   esi,eax
   14000b244:	cmp    BYTE PTR fs:[rax+0x19],cl
   14000b248:	hlt    
   14000b249:	push   rbx
   14000b24a:	(bad)  
   14000b24b:	ud2    
   14000b24d:	out    0x5a,al
   14000b24f:	movsxd ebp,DWORD PTR [rbp+0x48]
   14000b252:	xchg   ebp,eax
   14000b253:	mov    ebp,DWORD PTR [rdi+rsi*8-0x60]
   14000b257:	test   BYTE PTR [rsi+0x46],dl
   14000b25a:	sub    eax,0x5408057a
   14000b25f:	ss mov ecx,0x6c43a5ef
   14000b265:	stos   BYTE PTR es:[rdi],al
   14000b266:	(bad)  
   14000b267:	mov    ch,0xe3
   14000b269:	and    DWORD PTR [rsi-0x7afb6426],edi
   14000b26f:	(bad)  
   14000b270:	mov    BYTE PTR [rdx],al
   14000b272:	fs out 0x8e,al
   14000b275:	(bad)  
   14000b276:	cmp    edi,ebx
   14000b278:	mov    WORD PTR [rdi],es
   14000b27a:	(bad)  
   14000b27b:	ret    0x9b1
   14000b27e:	push   rbp
   14000b27f:	sub    bl,BYTE PTR [rdi-0x10]
   14000b282:	rex.RXB or BYTE PTR [r15+0x76],r12b
   14000b286:	pop    rax
   14000b287:	xchg   ebx,eax
   14000b288:	and    BYTE PTR [rdi+rbx*4+0x6e30b027],dl
   14000b28f:	xor    BYTE PTR [rax+0x26],dl
   14000b292:	cdq    
   14000b293:	addr32 mov eax,0x942501b1
   14000b299:	jrcxz  0x14000b2f8
   14000b29b:	in     al,dx
   14000b29c:	cld    
   14000b29d:	sti    
   14000b29e:	jl     0x14000b288
   14000b2a0:	rex.XB (bad) 
   14000b2a2:	call   0x12536ae9e
   14000b2a7:	xchg   DWORD PTR [rip+0x6055fb5],eax        # 0x146061262
   14000b2ad:	rex.B ret 0x6eef
   14000b2b1:	xlat   BYTE PTR ds:[rbx]
   14000b2b2:	sub    eax,0x5f7bfec3
   14000b2b7:	clc    
   14000b2b8:	movsxd ebp,DWORD PTR [rsi]
   14000b2ba:	pop    rsp
   14000b2bb:	leave  
   14000b2bc:	cmp    bl,dh
   14000b2be:	rol    BYTE PTR [rdi],0x18
   14000b2c1:	ins    DWORD PTR es:[rdi],dx
   14000b2c2:	sahf   
   14000b2c3:	movabs eax,ds:0xb5ff9536a946d83b
   14000b2cc:	test   eax,0x5efbf1b4
   14000b2d1:	xor    eax,0xa851aed0
   14000b2d6:	stos   BYTE PTR es:[rdi],al
   14000b2d7:	mov    dl,0x88
   14000b2d9:	mov    ebp,ss
   14000b2db:	(bad)  
   14000b2dc:	adc    r11,QWORD PTR [r11+0x44c00cf1]
   14000b2e3:	jmp    0x14000b2e5
   14000b2e5:	cli    
   14000b2e6:	rex.WB
   14000b2e7:	rex je 0x14000b34b
   14000b2ea:	sbb    DWORD PTR [rdx+rsi*2-0x4b0c8ca],esi
   14000b2f1:	and    DWORD PTR [rdi+0x75],0xcb9c6047
   14000b2f8:	ror    ah,1
   14000b2fa:	jo     0x14000b2f0
   14000b2fc:	jb     0x14000b317
   14000b2fe:	mov    eax,0xefaee2b1
   14000b303:	mov    ebx,DWORD PTR [rdi+rax*4]
   14000b306:	add    DWORD PTR [rax+rax*8-0x2d7b4ff2],esp
   14000b30d:	test   DWORD PTR [rcx-0x6953261c],esi
   14000b313:	iret   
   14000b314:	ins    BYTE PTR es:[rdi],dx
   14000b315:	lods   eax,DWORD PTR ds:[rsi]
   14000b316:	or     edx,ebx
   14000b318:	sub    QWORD PTR [rcx+0x18d5e7cf],rbx
   14000b31f:	out    0x55,eax
   14000b321:	pandn  mm7,mm4
   14000b324:	jge    0x14000b35d
   14000b326:	cmp    edi,DWORD PTR [rdi+0x1f194299]
   14000b32c:	mov    bl,0xca
   14000b32e:	or     al,0xb8
   14000b330:	(bad)  
   14000b331:	fcmovu st,st(7)
   14000b333:	add    al,0xb6
   14000b335:	stos   BYTE PTR es:[rdi],al
   14000b336:	mov    esp,0x482118b5
   14000b33b:	test   DWORD PTR [rbx],ecx
   14000b33d:	pop    rbp
   14000b33e:	pop    rsi
   14000b33f:	mov    edx,0xea641b7c
   14000b344:	cld    
   14000b345:	(bad)  
   14000b346:	(bad)  
   14000b348:	sti    
   14000b349:	sbb    ebp,DWORD PTR [rbx-0x6f]
   14000b34c:	(bad)  
   14000b34d:	(bad)  
   14000b34e:	in     al,dx
   14000b34f:	retf   0x7385
   14000b352:	leave  
   14000b353:	(bad)  
   14000b355:	pop    rax
   14000b356:	sbb    al,0x63
   14000b358:	(bad)  
   14000b359:	je     0x14000b36e
   14000b35b:	cli    
   14000b35c:	mov    ebp,0x924b7684
   14000b361:	adc    eax,0x8aca35da
   14000b366:	push   rsi
   14000b367:	(bad)  
   14000b368:	(bad)  
   14000b369:	adc    bh,bl
   14000b36b:	in     al,dx
   14000b36c:	and    bh,bl
   14000b36e:	scas   al,BYTE PTR es:[rdi]
   14000b36f:	fisub  WORD PTR [rbp+0x11]
   14000b372:	shl    DWORD PTR [rbp+0x51],1
   14000b375:	(bad)  
   14000b376:	pop    rbx
   14000b377:	sbb    ebp,DWORD PTR [rsp+rdx*1-0x29]
   14000b37b:	rex.RXB xor BYTE PTR [rip+0x4dfde3e2],r13b        # 0x18dfe9764
   14000b382:	pop    rbx
   14000b383:	loope  0x14000b3d2
   14000b385:	mov    edx,edx
   14000b387:	mov    bl,0xa
   14000b389:	fdivr  QWORD PTR [rcx]
   14000b38b:	mov    esp,0xacf0032f
   14000b390:	and    DWORD PTR [rdi+rsi*2+0x3e],ebp
   14000b394:	or     BYTE PTR [rbx],ah
   14000b396:	adc    eax,0xb22948ba
   14000b39b:	(bad)  
   14000b39c:	fldcw  WORD PTR [riz*2-0x4d36b4c2]
   14000b3a3:	xchg   esp,eax
   14000b3a4:	jl     0x14000b414
   14000b3a6:	sub    DWORD PTR [rdi],ecx
   14000b3a8:	mov    edi,0x6a7fc7cd
   14000b3ad:	(bad)  
   14000b3ae:	(bad)  
   14000b3af:	mov    ds,WORD PTR [rbx]
   14000b3b1:	in     al,0x13
   14000b3b3:	addr32 cli 
   14000b3b5:	xor    eax,0xedc6f987
   14000b3ba:	movabs ds:0xf29a6929a6970d99,eax
   14000b3c3:	xchg   DWORD PTR [rdi-0x2],ebx
   14000b3c6:	sbb    bl,bh
   14000b3c8:	jl     0x14000b3ab
   14000b3ca:	adc    bl,BYTE PTR [rbx-0x59]
   14000b3cd:	sahf   
   14000b3ce:	(bad)  
   14000b3d0:	sti    
   14000b3d1:	sbb    al,0x1b
   14000b3d3:	fwait
   14000b3d4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000b3d5:	rcr    QWORD PTR [rsi+0x7d],cl
   14000b3d9:	enter  0x472e,0x58
   14000b3dd:	rex.WR (bad) 
   14000b3df:	stc    
   14000b3e0:	loop   0x14000b401
   14000b3e2:	mov    edx,DWORD PTR [rdi]
   14000b3e4:	push   rbp
   14000b3e5:	mov    ebp,0xae5cbd72
   14000b3ea:	rex.RX (bad) 
   14000b3ec:	push   rsi
   14000b3ed:	pop    rax
   14000b3ee:	cdq    
   14000b3ef:	adc    eax,0xf86fed
   14000b3f4:	mov    WORD PTR [rsi],?
   14000b3f6:	je     0x14000b432
   14000b3f8:	push   rbx
   14000b3f9:	xchg   edi,eax
   14000b3fa:	rex.XB xchg r10d,eax
   14000b3fc:	sbb    eax,0x4700026d
   14000b401:	cdq    
   14000b402:	add    BYTE PTR [rdi+0x72],ch
   14000b405:	lahf   
   14000b406:	push   rdi
   14000b407:	add    ecx,DWORD PTR [rdx+0xc38e5]
   14000b40d:	shr    BYTE PTR [rsi],0x53
   14000b410:	xor    al,0x89
   14000b412:	rex.WR pop rdx
   14000b414:	mov    WORD PTR [rdi-0x22],gs
   14000b417:	test   al,0x7a
   14000b419:	clc    
   14000b41a:	push   rbp
   14000b41b:	pop    rsi
   14000b41c:	(bad)  
   14000b41e:	ins    BYTE PTR es:[rdi],dx
   14000b41f:	js     0x14000b448
   14000b421:	jb     0x14000b44a
   14000b423:	jo     0x14000b48d
   14000b425:	(bad)  
   14000b426:	rcr    BYTE PTR [rbp+0x16de2540],0x8b
   14000b42d:	(bad)  
   14000b42e:	(bad)  
   14000b42f:	and    cl,bh
   14000b431:	and    ecx,DWORD PTR [rdi]
   14000b433:	mov    ?,WORD PTR ds:[rsi-0x794a7ad5]
   14000b43a:	sub    edx,DWORD PTR [rdi+0x6e]
   14000b43d:	movsxd esp,ebp
   14000b43f:	jbe    0x14000b3d6
   14000b441:	add    al,0x24
   14000b443:	sbb    r9b,r14b
   14000b446:	(bad)  
   14000b447:	(bad)  
   14000b448:	and    eax,0xad84e3f8
   14000b44d:	cmp    ah,ah
   14000b44f:	ror    dl,1
   14000b451:	sbb    al,0xb3
   14000b453:	(bad)  
   14000b454:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b455:	mov    DWORD PTR [rdx+0x77684dd7],esp
   14000b45b:	adc    al,0x49
   14000b45d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b45e:	leave  
   14000b45f:	rex.WRB in al,0x68
   14000b462:	or     edx,DWORD PTR [rdx]
   14000b464:	(bad)  
   14000b465:	(bad)  
   14000b466:	xchg   edi,eax
   14000b467:	xchg   edx,eax
   14000b468:	js     0x14000b42c
   14000b46a:	cmp    DWORD PTR [rbx+0x2bbf715a],ebp
   14000b470:	adc    dl,cl
   14000b472:	xor    al,0x21
   14000b474:	and    ah,BYTE PTR [rdi+0x63]
   14000b477:	int    0xbe
   14000b479:	(bad)  
   14000b47a:	jge    0x14000b47d
   14000b47c:	loope  0x14000b49a
   14000b47e:	xchg   esi,eax
   14000b47f:	or     r10d,DWORD PTR [r15]
   14000b482:	rol    edi,1
   14000b484:	jmp    FWORD PTR [rsi+0x3eea9bca]
   14000b48a:	sub    eax,0xca1a5d16
   14000b48f:	pop    rsp
   14000b490:	push   rbx
   14000b491:	in     al,0x5
   14000b493:	rex.RB sahf 
   14000b495:	xchg   edx,eax
   14000b496:	sub    DWORD PTR [edi-0x6e0c5045],eax
   14000b49d:	mul    DWORD PTR [rdi]
   14000b49f:	pushf  
   14000b4a0:	cmp    DWORD PTR [rbp+0x77ff7b5d],edi
   14000b4a6:	jmp    0x14000b49d
   14000b4a8:	rex.XB add dl,BYTE PTR [r8-0x28]
   14000b4ac:	sahf   
   14000b4ad:	and    al,0x9
   14000b4af:	mov    ebp,0x5f178f5e
   14000b4b4:	jl     0x14000b43f
   14000b4b6:	(bad)  
   14000b4b7:	jge    0x14000b49e
   14000b4b9:	rex.RB mov r10d,0xdad987c3
   14000b4bf:	jns    0x14000b451
   14000b4c1:	loope  0x14000b4a9
   14000b4c3:	imul   edi,DWORD PTR [rdx],0x54c20d9d
   14000b4c9:	fdivrp st(1),st
   14000b4cb:	sub    edx,DWORD PTR [rbx]
   14000b4cd:	ficom  WORD PTR [rsi-0x71]
   14000b4d0:	mov    bh,0x55
   14000b4d2:	mov    ch,0xb5
   14000b4d4:	retf   0x82c2
   14000b4d7:	and    eax,0xeb655ec5
   14000b4dc:	push   rdi
   14000b4dd:	scas   al,BYTE PTR es:[rdi]
   14000b4de:	nop
   14000b4df:	rex.RX in eax,dx
   14000b4e1:	xchg   DWORD PTR [rax],ecx
   14000b4e3:	nop
   14000b4e4:	mov    esi,esp
   14000b4e6:	add    dl,ah
   14000b4e8:	ds (bad) 
   14000b4ea:	movabs al,ds:0xf0bfece5a6c48495
   14000b4f3:	cmp    eax,0x22b6072c
   14000b4f8:	fwait
   14000b4f9:	cmc    
   14000b4fa:	retf   0xfdaf
   14000b4fd:	fisubr DWORD PTR [rdi-0x86f23cb]
   14000b503:	rex.WRXB mov es,WORD PTR [r11]
   14000b506:	add    BYTE PTR [rdx],ah
   14000b508:	and    BYTE PTR [rdi+0x6d],dl
   14000b50b:	xchg   BYTE PTR [rax+0x23],sil
   14000b50f:	mov    edi,0x95af5d0a
   14000b514:	adc    BYTE PTR [rdx+0x63eb6309],ch
   14000b51a:	je     0x14000b557
   14000b51c:	stos   BYTE PTR es:[rdi],al
   14000b51d:	idiv   DWORD PTR [rdi-0x45]
   14000b520:	mov    dh,0xfc
   14000b522:	popf   
   14000b523:	in     al,0xb8
   14000b525:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b526:	movabs ds:0x77801f6320516514,al
   14000b530:	ds int 0xe7
   14000b533:	jae    0x14000b4e3
   14000b535:	pop    rbp
   14000b536:	fwait
   14000b537:	cmp    BYTE PTR [rax],0x85
   14000b53a:	movabs al,ds:0x34cfc609f9454494
   14000b544:	in     al,dx
   14000b545:	xchg   edx,eax
   14000b546:	jnp    0x14000b55e
   14000b548:	out    0xad,eax
   14000b54a:	sub    DWORD PTR [rcx-0x102e3f8b],edx
   14000b550:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000b551:	hlt    
   14000b552:	mov    ebx,0x4969d309
   14000b557:	pop    rcx
   14000b558:	pop    rdx
   14000b559:	mov    WORD PTR [rsi-0x2ee3735f],fs
   14000b55f:	push   rdx
   14000b560:	ret    
   14000b561:	stc    
   14000b562:	loop   0x14000b5c2
   14000b564:	(bad)  
   14000b565:	hlt    
   14000b566:	loop   0x14000b506
   14000b568:	mov    bh,0x6c
   14000b56b:	movabs ds:0x653c2bb1c6a9da72,al
   14000b574:	adc    eax,0x17ef0450
   14000b579:	sub    al,0x32
   14000b57b:	adc    bl,al
   14000b57d:	in     eax,0xc3
   14000b57f:	jne    0x14000b5dd
   14000b581:	jns    0x14000b51a
   14000b583:	(bad)  
   14000b584:	jrcxz  0x14000b55c
   14000b586:	rex.B sub al,0x4a
   14000b589:	(bad)  
   14000b58a:	(bad)  
   14000b58b:	and    bl,cl
   14000b58d:	loope  0x14000b5ef
   14000b58f:	(bad)  
   14000b590:	cmp    al,0xef
   14000b592:	jg     0x14000b574
   14000b594:	and    BYTE PTR [rdi],0x9f
   14000b597:	js     0x14000b53b
   14000b599:	pop    rdx
   14000b59a:	(bad)  
   14000b59b:	stos   DWORD PTR es:[rdi],eax
   14000b59c:	fnstcw WORD PTR [rax+0x3fb44ef]
   14000b5a2:	or     BYTE PTR [rbx+0x29],0xe9
   14000b5a6:	idiv   ebx
   14000b5a8:	fdivr  QWORD PTR [rax-0x2206c87]
   14000b5ae:	cld    
   14000b5af:	xor    ebp,DWORD PTR [rax-0x4f]
   14000b5b2:	(bad)
   14000b5b5:	jae    0x14000b5c3
   14000b5b7:	(bad)  
   14000b5b8:	jbe    0x14000b5a2
   14000b5ba:	mov    ah,0x86
   14000b5bc:	cwde   
   14000b5bd:	push   rdx
   14000b5be:	and    BYTE PTR [rcx+rbp*4-0x4d5756d7],al
   14000b5c5:	jbe    0x14000b589
   14000b5c7:	leave  
   14000b5c8:	loop   0x14000b569
   14000b5ca:	mov    ch,0x82
   14000b5cc:	jne    0x14000b5c4
   14000b5ce:	mov    edi,0x92686cc2
   14000b5d3:	mov    cl,0xf8
   14000b5d5:	rex.WRB (bad) 
   14000b5d7:	mov    edi,0xd1bd283
   14000b5dc:	cmp    al,BYTE PTR [rbx]
   14000b5de:	cmp    eax,0x7a0a7283
   14000b5e3:	cmp    al,0x67
   14000b5e5:	out    0xd1,eax
   14000b5e7:	xchg   esp,eax
   14000b5e8:	and    al,0x49
   14000b5ea:	xor    DWORD PTR [rsi],esp
   14000b5ec:	pop    rbx
   14000b5ed:	repnz inc bh
   14000b5f0:	iret   
   14000b5f1:	jle    0x14000b647
   14000b5f3:	adc    dl,al
   14000b5f5:	rol    BYTE PTR [rcx],cl
   14000b5f7:	not    DWORD PTR [rcx-0x72]
   14000b5fa:	movsxd eax,DWORD PTR [rdx]
   14000b5fc:	pushf  
   14000b5fd:	(bad)  
   14000b5fe:	rex.X mov spl,0x57
   14000b601:	cmc    
   14000b602:	loop   0x14000b65d
   14000b604:	scas   al,BYTE PTR es:[rdi]
   14000b605:	sub    DWORD PTR [rdx-0x61],ecx
   14000b608:	ret    0x5388
   14000b60b:	test   cl,bh
   14000b60d:	jl     0x14000b65d
   14000b60f:	scas   eax,DWORD PTR es:[rdi]
   14000b610:	xlat   BYTE PTR ds:[rbx]
   14000b611:	rex.RXB sub r15d,r14d
   14000b614:	repnz div edi
   14000b617:	imul   ecx
   14000b619:	cmc    
   14000b61a:	jp     0x14000b5d1
   14000b61c:	jrcxz  0x14000b5ac
   14000b61e:	sbb    esp,DWORD PTR [rsi+0x4826555b]
   14000b624:	mov    bl,0x4c
   14000b626:	ins    BYTE PTR es:[rdi],dx
   14000b627:	or     bl,ah
   14000b629:	test   eax,0x7f298ff7
   14000b62e:	clc    
   14000b62f:	scas   al,BYTE PTR es:[rdi]
   14000b630:	lea    eax,[rcx+0x6]
   14000b633:	idiv   QWORD PTR [rbp-0x1d2a549a]
   14000b63a:	retf   0xb7d5
   14000b63d:	fcomp  st(5)
   14000b63f:	ja     0x14000b60b
   14000b641:	and    eax,0xe0123e04
   14000b646:	iret   
   14000b647:	addr32 (bad) 
   14000b649:	cmp    eax,0x6621158e
   14000b64e:	pmaddwd mm6,mm7
   14000b651:	in     eax,dx
   14000b652:	jp     0x14000b6a2
   14000b654:	add    DWORD PTR [rbx+rdi*1-0x76],esi
   14000b658:	loope  0x14000b60a
   14000b65a:	(bad)
   14000b65d:	and    bl,cl
   14000b65f:	xor    eax,0x60673579
   14000b664:	call   0x1be510dc6
   14000b669:	jmp    0x14000b600
   14000b66b:	xor    DWORD PTR [rax],ebp
   14000b66d:	imul   edx,DWORD PTR [rbp-0x62],0x15
   14000b671:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b672:	rex movabs ds:0x2363a7357fc38fa7,eax
   14000b67c:	fldenv [rdi]
   14000b67e:	div    dl
   14000b680:	push   rdi
   14000b681:	cmp    al,0x3a
   14000b683:	(bad)  
   14000b684:	add    DWORD PTR [rcx],edx
   14000b686:	add    DWORD PTR [rax+0x6b40acf],0x30285c6d
   14000b690:	retf   
   14000b691:	or     al,0xb3
   14000b693:	fld    DWORD PTR [rcx]
   14000b695:	out    0xb6,eax
   14000b697:	scas   eax,DWORD PTR es:[rdi]
   14000b698:	icebp  
   14000b699:	ror    DWORD PTR [rdi],1
   14000b69b:	mov    edi,0x5dbb7687
   14000b6a0:	rex.WRB jo 0x14000b654
   14000b6a3:	(bad)  
   14000b6a4:	jge    0x14000b6dc
   14000b6a6:	pop    rcx
   14000b6a7:	adc    eax,DWORD PTR [r10+rbx*8]
   14000b6ab:	in     eax,dx
   14000b6ac:	ss repz stc 
   14000b6af:	pushf  
   14000b6b0:	(bad)  
   14000b6b1:	cld    
   14000b6b2:	mov    ecx,0x86e5732f
   14000b6b7:	in     eax,0xcc
   14000b6b9:	mov    ecx,0x4f0e1987
   14000b6be:	shr    ebx,1
   14000b6c0:	outs   dx,DWORD PTR ds:[rsi]
   14000b6c1:	cmp    DWORD PTR [rsi+0x70ceb157],esi
   14000b6c7:	outs   dx,DWORD PTR ds:[rsi]
   14000b6c8:	mov    ebp,DWORD PTR [rdx]
   14000b6ca:	test   al,0xba
   14000b6cc:	out    dx,eax
   14000b6cd:	clc    
   14000b6ce:	jp     0x14000b65b
   14000b6d0:	or     edx,edi
   14000b6d2:	mov    bh,0x35
   14000b6d4:	(bad)  
   14000b6d5:	cwde   
   14000b6d6:	pop    rax
   14000b6d7:	cli    
   14000b6d8:	jb     0x14000b68e
   14000b6da:	rex.WB (bad) 
   14000b6dc:	in     eax,dx
   14000b6dd:	and    bh,bh
   14000b6df:	(bad)  
   14000b6e1:	std    
   14000b6e2:	outs   dx,BYTE PTR ds:[rsi]
   14000b6e3:	xor    DWORD PTR [rax+0x165d00a2],edx
   14000b6e9:	or     al,0x7
   14000b6eb:	lods   eax,DWORD PTR ds:[rsi]
   14000b6ec:	(bad)
   14000b6ef:	jbe    0x14000b72a
   14000b6f1:	sbb    DWORD PTR [rax],ebp
   14000b6f3:	mov    WORD PTR [rcx+0x381cb158],es
   14000b6f9:	mov    esp,0xc4818b0b
   14000b6fe:	jb     0x14000b71c
   14000b700:	add    BYTE PTR [rax+0x11],ch
   14000b703:	(bad)  
   14000b704:	stos   BYTE PTR es:[rdi],al
   14000b705:	(bad)  
   14000b706:	sbb    al,0x95
   14000b708:	fsubrp st(3),st
   14000b70a:	sbb    esp,DWORD PTR [rsp+rcx*2]
   14000b70d:	mov    esi,0xefc5b4d1
   14000b712:	xchg   esi,eax
   14000b713:	scas   eax,DWORD PTR es:[rdi]
   14000b714:	movq   mm3,QWORD PTR [rdi]
   14000b717:	adc    al,0xee
   14000b719:	xor    eax,0xfda7707a
   14000b71e:	(bad)  
   14000b71f:	sbb    BYTE PTR [rdx],cl
   14000b721:	movsxd ebp,DWORD PTR [rax]
   14000b723:	repnz pushf 
   14000b725:	xor    al,0x4d
   14000b727:	pop    rbp
   14000b728:	scas   al,BYTE PTR es:[rdi]
   14000b729:	mov    ecx,0x695a89ef
   14000b72e:	retf   0x9bad
   14000b731:	sti    
   14000b732:	sbb    al,0x1e
   14000b734:	add    BYTE PTR [rdx],dh
   14000b736:	rex.WR add r12b,dl
   14000b739:	jge    0x14000b73b
   14000b73b:	(bad)  
   14000b73c:	mov    edi,0x1c45d8d8
   14000b741:	adc    al,0x4c
   14000b743:	or     BYTE PTR [rdi-0x3],cl
   14000b746:	pop    rsp
   14000b747:	(bad)  
   14000b748:	sbb    al,0x1c
   14000b74a:	test   BYTE PTR [rdx],ch
   14000b74c:	xchg   ecx,eax
   14000b74d:	je     0x14000b78a
   14000b74f:	or     DWORD PTR [rbp-0x5b1e3d92],edi
   14000b755:	and    al,0xa7
   14000b757:	fs in  eax,0x2a
   14000b75a:	ds push rbp
   14000b75c:	outs   dx,DWORD PTR ds:[rsi]
   14000b75d:	(bad)  
   14000b75e:	fbstp  TBYTE PTR [rbx-0x5d]
   14000b761:	rex.WR std 
   14000b763:	or     DWORD PTR [rcx+0x50],ebx
   14000b766:	cmc    
   14000b767:	lock fld TBYTE PTR [rsi+0x19871ed8]
   14000b76e:	pop    rcx
   14000b76f:	ss add eax,0x7e23ec6a
   14000b775:	test   al,0xd8
   14000b777:	and    al,0x71
   14000b779:	or     eax,0x5aef5f17
   14000b77e:	mov    ebx,0xdddbd921
   14000b783:	push   rdi
   14000b784:	clc    
   14000b785:	hlt    
   14000b786:	iret   
   14000b787:	ds (bad) 
   14000b789:	jmp    0x11d28df61
   14000b78e:	je     0x14000b758
   14000b790:	rex.RXB (bad) 
   14000b792:	(bad)  
   14000b793:	pop    rdx
   14000b794:	vcmpps xmm15,xmm15,xmm7,0x24
   14000b799:	rex.WB
   14000b79a:	xchg   rdx,rax
   14000b79c:	test   BYTE PTR [rdi],bh
   14000b79e:	cld    
   14000b79f:	repnz xor edi,DWORD PTR [rbx+rdi*8-0x45]
   14000b7a4:	xlat   BYTE PTR ds:[rbx]
   14000b7a5:	fnstcw WORD PTR [rdx]
   14000b7a7:	icebp  
   14000b7a8:	and    al,0xc3
   14000b7aa:	int    0x53
   14000b7ac:	or     al,0xaa
   14000b7ae:	xor    al,0xdf
   14000b7b0:	fcom   DWORD PTR [rsi-0x67104572]
   14000b7b6:	sub    al,0xe1
   14000b7b8:	(bad)  
   14000b7b9:	imul   eax,DWORD PTR [rax+riz*8],0x33f036c7
   14000b7c0:	or     al,0x6f
   14000b7c2:	data16 loope 0x14000b7bb
   14000b7c5:	mov    BYTE PTR [rsi+0x37],bh
   14000b7c8:	stos   DWORD PTR es:[rdi],eax
   14000b7c9:	jbe    0x14000b760
   14000b7cb:	cmp    DWORD PTR [rcx],eax
   14000b7cd:	fimul  WORD PTR [rcx]
   14000b7cf:	test   al,0x3d
   14000b7d1:	add    ecx,DWORD PTR [rax+0x66d680c2]
   14000b7d7:	and    al,0xca
   14000b7d9:	push   rsp
   14000b7da:	jae    0x14000b82d
   14000b7dc:	mov    eax,0xe0db9663
   14000b7e1:	jl     0x14000b821
   14000b7e3:	pop    rdi
   14000b7e4:	in     eax,0x24
   14000b7e6:	mov    bh,0xbc
   14000b7e8:	mov    edx,DWORD PTR [rcx]
   14000b7ea:	add    BYTE PTR [rax],bh
   14000b7ec:	sahf   
   14000b7ed:	or     DWORD PTR [rax-0x4],esp
   14000b7f0:	inc    DWORD PTR [rbp-0x51]
   14000b7f3:	or     DWORD PTR [rax-0x2d792f5b],eax
   14000b7f9:	(bad)  
   14000b7fa:	jne    0x14000b810
   14000b7fc:	sub    dh,BYTE PTR [rax+0x15]
   14000b7ff:	mov    ebp,0x7707480b
   14000b804:	mov    dh,0xe5
   14000b806:	sbb    DWORD PTR [rdi+rsi*2],0x5f
   14000b80a:	jae    0x14000b7e7
   14000b80c:	sub    dl,BYTE PTR [rsi]
   14000b80e:	jo     0x14000b7b7
   14000b810:	movsxd esp,DWORD PTR [rbp-0xb4d676c]
   14000b816:	(bad)  [rbp+0x7f57357e]
   14000b81c:	dec    DWORD PTR [rcx-0x66]
   14000b81f:	jo     0x14000b804
   14000b821:	out    0x2d,al
   14000b823:	(bad)  
   14000b824:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b825:	ror    BYTE PTR [rip+0x12e116e],cl        # 0x1412ec999
   14000b82b:	sub    BYTE PTR [rdx+rbx*1+0x1b87426c],ch
   14000b832:	out    dx,al
   14000b833:	bswap  edi
   14000b835:	add    ch,BYTE PTR [rdx]
   14000b837:	pop    rdi
   14000b838:	add    BYTE PTR [rax],cl
   14000b83b:	(bad)  
   14000b83c:	sub    BYTE PTR [rdx-0x47],cl
   14000b83f:	nop
   14000b840:	(bad)  
   14000b841:	mov    bh,0x93
   14000b843:	ror    BYTE PTR [rdx+0x25],1
   14000b846:	mov    bl,0xc
   14000b848:	mov    edi,0x2868815e
   14000b84d:	call   0x12b564534
   14000b852:	(bad)  
   14000b853:	xor    al,0x3d
   14000b855:	jp     0x14000b862
   14000b857:	mov    ch,0x32
   14000b859:	add    edx,0x23837ec7
   14000b85f:	sbb    DWORD PTR [rdx+0x74],eax
   14000b862:	(bad)  
   14000b863:	fucompp 
   14000b865:	sbb    bh,BYTE PTR [rsi+0x7d31a583]
   14000b86b:	jne    0x14000b89d
   14000b86d:	xor    DWORD PTR [rsi+0x60],eax
   14000b870:	mov    ah,0x61
   14000b872:	mov    bl,0x73
   14000b874:	cdq    
   14000b875:	pop    rdi
   14000b876:	cli    
   14000b877:	rex.WXB add rbx,QWORD PTR [r14]
   14000b87a:	jle    0x14000b86c
   14000b87c:	fs (bad) 
   14000b87e:	fld    TBYTE PTR [rbp+0x3aabc65a]
   14000b884:	retf   
   14000b885:	adc    edi,ebx
   14000b887:	xchg   ebp,eax
   14000b888:	push   rdx
   14000b889:	mov    ah,0x5a
   14000b88b:	sub    eax,0xcbeefc5e
   14000b890:	jl     0x14000b883
   14000b892:	(bad)  
   14000b893:	mov    esi,0x11e36f43
   14000b898:	rex.RX pop rbx
   14000b89a:	sbb    BYTE PTR [edi+ecx*2],cl
   14000b89e:	xchg   ecx,eax
   14000b89f:	mov    dh,0x17
   14000b8a1:	leave  
   14000b8a2:	movabs ds:0x237342b677c47a8a,al
   14000b8ac:	push   rbx
   14000b8ad:	int3   
   14000b8ae:	xchg   BYTE PTR [rbp+0x62],ch
   14000b8b1:	push   rcx
   14000b8b2:	(bad)  
   14000b8b3:	(bad)  
   14000b8b4:	test   al,0x85
   14000b8b6:	mov    eax,0x7d8b6f
   14000b8bb:	push   rcx
   14000b8bc:	mov    ch,0xad
   14000b8be:	xchg   edx,eax
   14000b8bf:	push   0x49
   14000b8c1:	jo     0x14000b87e
   14000b8c3:	mov    al,0xff
   14000b8c5:	rex.WXB or rax,0xffffffff96ed2509
   14000b8cb:	hlt    
   14000b8cc:	mov    ?,ecx
   14000b8ce:	sbb    BYTE PTR [rax-0x6b99b65e],dh
   14000b8d4:	(bad)  
   14000b8d5:	ja     0x14000b94e
   14000b8d7:	ja     0x14000b92e
   14000b8d9:	sbb    dh,BYTE PTR [rax+0x1]
   14000b8dc:	pop    rsp
   14000b8dd:	pop    rcx
   14000b8de:	jge    0x14000b8a5
   14000b8e0:	sti    
   14000b8e1:	and    ebp,DWORD PTR [rdi-0x75]
   14000b8e4:	add    DWORD PTR [rsi+rdi*1+0x0],edx
   14000b8e8:	scas   eax,DWORD PTR es:[rdi]
   14000b8e9:	lock pop rcx
   14000b8eb:	loope  0x14000b939
   14000b8ed:	cmp    BYTE PTR [rax-0xbef7b92],0x7a
   14000b8f4:	cmp    eax,0x28a12492
   14000b8f9:	or     ah,BYTE PTR [rsi]
   14000b8fb:	xchg   ebx,eax
   14000b8fc:	or     DWORD PTR [rbx+0x2e9ee8d1],esp
   14000b902:	je     0x14000b960
   14000b904:	pop    rdi
   14000b905:	rcr    BYTE PTR [rbp+0x4a77ff3c],0xe
   14000b90c:	push   0xffffffffffffff9e
   14000b90e:	rex.WRXB or BYTE PTR [r9-0x17],r8b
   14000b912:	(bad)  
   14000b913:	cmp    DWORD PTR [rcx+0x636a0873],eax
   14000b919:	call   0x1ab1994d2
   14000b91e:	js     0x14000b903
   14000b920:	int    0xeb
   14000b922:	call   0xfb6b4199
   14000b927:	clc    
   14000b928:	jg     0x14000b8f2
   14000b92a:	add    DWORD PTR [rax+0x4e100604],esi
   14000b930:	(bad)  
   14000b931:	jp     0x14000b8cd
   14000b933:	mov    dl,BYTE PTR [rcx+0x2b9b810a]
   14000b939:	shr    BYTE PTR [rcx],0x52
   14000b93c:	push   0x4bb6ad6c
   14000b941:	pmaxsw mm3,QWORD PTR [rsi]
   14000b944:	and    al,0x4c
   14000b946:	and    ax,0x3585
   14000b94a:	(bad)  
   14000b94b:	jrcxz  0x14000b9c6
   14000b94d:	add    ah,BYTE PTR [rdx+0xfa6fbfc]
   14000b953:	(bad)  
   14000b954:	(bad)  
   14000b955:	sbb    al,BYTE PTR [rbx-0x7fa0cb]
   14000b95b:	pop    rbp
   14000b95c:	or     ecx,DWORD PTR [rbx]
   14000b95e:	fadd   DWORD PTR ss:[rbx+rsi*8+0x1c]
   14000b963:	push   rbp
   14000b964:	scas   eax,DWORD PTR es:[rdi]
   14000b965:	out    dx,eax
   14000b966:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000b967:	adc    eax,0x1845cdaf
   14000b96c:	fisttp DWORD PTR [rsi]
   14000b96e:	jbe    0x14000b9e1
   14000b970:	mov    esp,0xd6b6414f
   14000b975:	rcl    BYTE PTR [rsi+0x7],1
   14000b978:	jl     0x14000b960
   14000b97a:	addr32 data16 cld 
   14000b97d:	fsub   QWORD PTR [rdi]
   14000b97f:	jle    0x14000b923
   14000b981:	movabs ds:0xafd3a69070274dfe,al
   14000b98a:	test   eax,0x874e9dfc
   14000b98f:	rex.WXB xchg r15,rax
   14000b991:	scas   al,BYTE PTR es:[rdi]
   14000b992:	lock (bad) 
   14000b994:	(bad)  
   14000b995:	repz push rdi
   14000b997:	enter  0x16f5,0x67
   14000b99b:	mov    bh,0x1e
   14000b99d:	(bad)  
   14000b99e:	xor    BYTE PTR [rax],bh
   14000b9a0:	rex.RB stos DWORD PTR es:[rdi],eax
   14000b9a2:	mov    ebp,0xeab23181
   14000b9a7:	ins    BYTE PTR es:[rdi],dx
   14000b9a8:	sub    dh,BYTE PTR [rsi-0x3ce293d1]
   14000b9ae:	push   rsi
   14000b9af:	mov    dl,0x8d
   14000b9b1:	pop    rdx
   14000b9b2:	or     esp,DWORD PTR [rbp+0x51]
   14000b9b5:	ins    BYTE PTR es:[rdi],dx
   14000b9b6:	rcr    esp,0x16
   14000b9b9:	ins    DWORD PTR es:[rdi],dx
   14000b9ba:	movabs eax,ds:0xaa2e13f5dfb5037a
   14000b9c3:	cmp    eax,0xfc28019e
   14000b9c8:	iret   
   14000b9c9:	or     ebp,eax
   14000b9cb:	jbe    0x14000b9f9
   14000b9cd:	addr32 iret 
   14000b9cf:	in     al,dx
   14000b9d0:	push   rax
   14000b9d1:	xchg   esi,eax
   14000b9d2:	retf   
   14000b9d3:	adc    DWORD PTR [rax+0x534d3bf0],eax
   14000b9d9:	out    0xf3,al
   14000b9db:	stc    
   14000b9dc:	sub    dl,BYTE PTR [rbx+0x617036f6]
   14000b9e2:	vpxor  ymm3,ymm13,YMMWORD PTR [rbx-0x63fe78e4]
   14000b9ea:	add    bl,BYTE PTR [rdx-0x3f]
   14000b9ed:	sub    ebp,DWORD PTR [rbx]
   14000b9ef:	movabs ds:0xbd656a3a3ca5deee,al
   14000b9f8:	shl    ch,cl
   14000b9fa:	jns    0x14000b9bd
   14000b9fc:	push   0xffffffff854a42d4
   14000ba01:	(bad)  
   14000ba02:	jae    0x14000b9aa
   14000ba04:	shr    ecx,cl
   14000ba06:	xchg   ecx,eax
   14000ba07:	(bad)  
   14000ba08:	cld    
   14000ba09:	popf   
   14000ba0a:	mov    dl,0x0
   14000ba0c:	mov    eax,0x788058f3
   14000ba11:	lahf   
   14000ba12:	jg     0x14000b9aa
   14000ba14:	xchg   ebp,eax
   14000ba15:	mov    eax,es
   14000ba17:	sbb    BYTE PTR [rbx+0x3e],al
   14000ba1a:	lahf   
   14000ba1b:	push   rdi
   14000ba1c:	imul   eax,DWORD PTR [rip+0x3f309800],0xffffff9b        # 0x17f315223
   14000ba23:	xor    eax,0x87b4ba5c
   14000ba28:	xor    eax,0x4821d75d
   14000ba2d:	or     DWORD PTR [rsp+riz*2-0x5b],0x1acc2617
   14000ba35:	loope  0x14000b9cc
   14000ba37:	fbstp  TBYTE PTR [rbp-0x3e]
   14000ba3a:	pop    rsi
   14000ba3b:	fld    DWORD PTR [rip+0x46b16158]        # 0x186b21b99
   14000ba41:	jp     0x14000baa3
   14000ba43:	adc    BYTE PTR [rax-0x1d],bl
   14000ba46:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000ba47:	adc    ebp,edi
   14000ba49:	je     0x14000baa7
   14000ba4b:	rex.W jo 0x14000babd
   14000ba4e:	pop    rdi
   14000ba4f:	push   rax
   14000ba50:	push   0xffffffffffffffa7
   14000ba52:	rex.W mov bpl,0x89
   14000ba55:	cmp    DWORD PTR [rcx-0x727f2e73],esi
   14000ba5b:	sahf   
   14000ba5c:	sti    
   14000ba5d:	rex.W pop rdi
   14000ba5f:	sbb    bh,0xb6
   14000ba62:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ba63:	in     al,0xbe
   14000ba65:	(bad)  
   14000ba66:	pmaxub mm7,QWORD PTR [rsi+0x1b]
   14000ba6a:	cmp    edx,eax
   14000ba6c:	loop   0x14000ba16
   14000ba6e:	rex
   14000ba6f:	rex.W add al,0x8a
   14000ba72:	sbb    eax,0xae517a85
   14000ba77:	jbe    0x14000bab7
   14000ba79:	mov    DWORD PTR [rcx+rdi*1],edx
   14000ba7c:	(bad)  
   14000ba7d:	jns    0x14000ba71
   14000ba7f:	xor    bh,BYTE PTR [rdi-0x1d]
   14000ba82:	scas   eax,DWORD PTR es:[rdi]
   14000ba83:	mov    esp,0x418d8d9f
   14000ba88:	gs iret 
   14000ba8a:	(bad)  
   14000ba8b:	(bad)  
   14000ba8c:	mov    esp,0xda363d98
   14000ba91:	push   rsi
   14000ba92:	in     eax,dx
   14000ba93:	jnp    0x14000ba40
   14000ba95:	(bad)  
   14000ba96:	(bad)  
   14000ba97:	cmp    al,0x3e
   14000ba99:	in     al,0x77
   14000ba9b:	(bad)  
   14000ba9c:	mov    edi,0x4deae63f
   14000baa1:	leave  
   14000baa2:	cdq    
   14000baa3:	jae    0x14000ba34
   14000baa5:	rcr    bh,1
   14000baa7:	fsub   DWORD PTR [rsi+0x25c4dfd3]
   14000baad:	sti    
   14000baae:	(bad)  
   14000baaf:	stos   BYTE PTR es:[rdi],al
   14000bab0:	(bad)  
   14000bab1:	mov    fs,WORD PTR [rbx]
   14000bab3:	stos   BYTE PTR es:[rdi],al
   14000bab4:	mov    edi,DWORD PTR [rax+0x5b]
   14000bab7:	push   rsp
   14000bab8:	(bad)  
   14000bab9:	mov    esi,0x88aca2cc
   14000babe:	jp     0x14000bb37
   14000bac0:	fistp  QWORD PTR [rsi-0x33]
   14000bac3:	movabs ds:0x16e0adf3a23ed568,al
   14000bacc:	xor    eax,0x2330800
   14000bad1:	xchg   DWORD PTR [rcx+0x436dfa80],ebx
   14000bad7:	mov    bh,0xd3
   14000bad9:	data16 sahf 
   14000badb:	sub    eax,0x155b01a6
   14000bae0:	jbe    0x14000bab0
   14000bae2:	mov    dl,0x6c
   14000bae4:	push   rbp
   14000bae5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000bae6:	ja     0x14000bb06
   14000bae8:	cwde   
   14000bae9:	sub    al,0x55
   14000baeb:	fdivr  DWORD PTR [rbp-0x6c]
   14000baee:	jrcxz  0x14000bb20
   14000baf0:	adc    BYTE PTR [rip+0xffffffffec1aea90],0x6c        # 0x12c1ba587
   14000baf7:	mov    edx,DWORD PTR ss:[rsi-0x3f]
   14000bafb:	(bad)
   14000bafe:	out    0x2c,al
   14000bb00:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000bb01:	leave  
   14000bb02:	pop    rsi
   14000bb03:	sbb    eax,0xb41fbbfe
   14000bb08:	dec    DWORD PTR [rsi-0x19]
   14000bb0b:	pop    rbx
   14000bb0c:	add    eax,0xc79d4710
   14000bb11:	pop    rdx
   14000bb12:	(bad)  
   14000bb13:	add    eax,ebp
   14000bb15:	jl     0x14000bb55
   14000bb17:	rex.RXB
   14000bb18:	rex.RB mov WORD PTR [r9-0x5],es
   14000bb1c:	xor    al,0x60
   14000bb1e:	ins    DWORD PTR es:[rdi],dx
   14000bb1f:	xor    al,0x97
   14000bb21:	scas   eax,DWORD PTR es:[rdi]
   14000bb22:	rex.WR adc BYTE PTR [rdx-0x7c],r14b
   14000bb26:	adc    dh,dl
   14000bb28:	mov    cl,0xfb
   14000bb2a:	(bad)  
   14000bb2b:	pop    rax
   14000bb2c:	(bad)  
   14000bb2d:	in     al,dx
   14000bb2e:	xchg   ecx,eax
   14000bb2f:	or     eax,eax
   14000bb31:	loop   0x14000bb5c
   14000bb33:	mov    ebp,0x41023970
   14000bb38:	or     DWORD PTR [rbp+0x68080a8d],ebp
   14000bb3e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000bb3f:	mov    cl,BYTE PTR [rsi-0x25]
   14000bb42:	cdq    
   14000bb43:	add    DWORD PTR [rcx+0x61],ebx
   14000bb46:	mov    al,0x21
   14000bb48:	movabs eax,ds:0xd8a5effadaebd6a7
   14000bb51:	jle    0x14000bba6
   14000bb53:	and    DWORD PTR [rdx-0x438e923a],esp
   14000bb59:	push   rsp
   14000bb5a:	rex.RX (bad) 
   14000bb5c:	and    eax,0x71f11a98
   14000bb61:	xchg   esi,eax
   14000bb62:	jp     0x14000bb42
   14000bb64:	mov    edi,0xcaaefc58
   14000bb69:	add    eax,0xd3e08060
   14000bb6e:	add    BYTE PTR [rcx],cl
   14000bb70:	(bad)  
   14000bb72:	shr    BYTE PTR [rcx-0x2035030d],0x39
   14000bb79:	(bad)  
   14000bb7a:	and    ecx,DWORD PTR [rdi]
   14000bb7c:	lahf   
   14000bb7d:	scas   al,BYTE PTR es:[rdi]
   14000bb7e:	(bad)  
   14000bb7f:	repz test al,0x29
   14000bb82:	mov    esp,0x5c21128f
   14000bb87:	mov    esp,0x97cd6b5f
   14000bb8c:	mov    edi,0xf9df2cf2
   14000bb91:	fimul  WORD PTR [rbp+0x76]
   14000bb94:	rex.WRX jge 0x14000bb27
   14000bb97:	(bad)  
   14000bb98:	loope  0x14000bbc3
   14000bb9a:	(bad)  
   14000bb9b:	sbb    esp,DWORD PTR [rdi]
   14000bb9d:	xchg   rdx,rax
   14000bb9f:	(bad)  
   14000bba0:	movabs ds:0xc282fedc5c7babae,al
   14000bba9:	(bad)  
   14000bbaa:	iret   
   14000bbab:	sbb    bl,BYTE PTR [rbx+0x35]
   14000bbae:	push   rcx
   14000bbaf:	out    dx,eax
   14000bbb0:	cs pushf 
   14000bbb2:	xor    DWORD PTR [rax+0x653f23c0],esi
   14000bbb8:	pushf  
   14000bbb9:	(bad)  
   14000bbba:	(bad)  
   14000bbbb:	js     0x14000bbcd
   14000bbbd:	(bad)  
   14000bbbe:	outs   dx,BYTE PTR ds:[rsi]
   14000bbbf:	mov    ss,WORD PTR [rbp+0x3a308d97]
   14000bbc5:	sar    bh,1
   14000bbc7:	fcom   DWORD PTR [rdi]
   14000bbc9:	and    BYTE PTR [rsi+rax*8+0x1cb4bd58],ch
   14000bbd0:	pop    rax
   14000bbd1:	sub    al,0xcd
   14000bbd3:	test   eax,0xba3aa2c0
   14000bbd8:	imul   BYTE PTR [rbx+0x2babfabf]
   14000bbde:	out    0x8,eax
   14000bbe0:	mov    edi,0x61c725f
   14000bbe5:	push   rax
   14000bbe6:	fnstsw WORD PTR [rbp+0x59]
   14000bbe9:	xchg   esi,eax
   14000bbea:	(bad)  
   14000bbeb:	sub    eax,0xd3e450a2
   14000bbf0:	(bad)  
   14000bbf1:	(bad)  
   14000bbf2:	cli    
   14000bbf3:	jg     0x14000bbf3
   14000bbf5:	or     eax,0x46b125b2
   14000bbfa:	push   rsp
   14000bbfb:	xchg   ebp,eax
   14000bbfc:	mov    bl,0x6a
   14000bbfe:	je     0x14000bbd7
   14000bc00:	fld    QWORD PTR [rdx+0x76]
   14000bc03:	(bad)  
   14000bc04:	xchg   ecx,eax
   14000bc05:	jnp    0x14000bbf8
   14000bc07:	add    esp,eax
   14000bc09:	fucomi st,st(6)
   14000bc0b:	je     0x14000bc2b
   14000bc0d:	(bad)  
   14000bc0e:	jl     0x14000bc58
   14000bc10:	sub    DWORD PTR [rcx],ebp
   14000bc12:	mov    ch,0x26
   14000bc14:	mov    DWORD PTR [rsi-0x5a],esp
   14000bc17:	or     ebx,esi
   14000bc19:	add    bl,BYTE PTR [rsp+rbx*1]
   14000bc1c:	in     al,dx
   14000bc1d:	jae    0x14000bc02
   14000bc1f:	xchg   esi,eax
   14000bc20:	rcr    edx,0xd4
   14000bc23:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000bc24:	add    BYTE PTR [rdi],ch
   14000bc26:	rex.X sub BYTE PTR [rsi+0x5d],0x82
   14000bc2b:	rol    BYTE PTR [rbx],1
   14000bc2d:	push   rbx
   14000bc2e:	cmp    DWORD PTR [rbx],eax
   14000bc30:	sbb    ecx,0x69
   14000bc33:	add    DWORD PTR [rdi+rsi*1+0x2078c91],eax
   14000bc3a:	fisttp WORD PTR [rdx]
   14000bc3c:	xchg   ebp,eax
   14000bc3d:	adc    dh,BYTE PTR [rbx+rdi*4+0xe]
   14000bc41:	add    al,0xe6
   14000bc43:	cdq    
   14000bc44:	es (bad) 
   14000bc46:	jp     0x14000bc4d
   14000bc48:	(bad)  
   14000bc49:	xor    DWORD PTR [rbp+0x6f],ebx
   14000bc4c:	int3   
   14000bc4d:	(bad)  
   14000bc4e:	rex.WR lods al,BYTE PTR ds:[rsi]
   14000bc50:	(bad)  
   14000bc51:	rex.WRB push r11
   14000bc53:	and    BYTE PTR [rdx-0x53],ch
   14000bc56:	add    BYTE PTR ss:[rax+0x73],cl
   14000bc5a:	jl     0x14000bc9d
   14000bc5c:	(bad)  
   14000bc5d:	sub    eax,0x3d09871
   14000bc62:	push   rax
   14000bc63:	or     eax,0x81519a7c
   14000bc68:	sub    ch,al
   14000bc6a:	sbb    bl,cl
   14000bc6c:	rex.RX idiv DWORD PTR [rdx]
   14000bc6f:	mov    edi,0x3e52b7f2
   14000bc74:	stc    
   14000bc75:	pop    rdi
   14000bc76:	cmp    eax,0xa8ea5286
   14000bc7b:	test   BYTE PTR [rsi-0xa0e75c5],dl
   14000bc81:	lods   al,BYTE PTR ds:[rsi]
   14000bc82:	xchg   esp,eax
   14000bc83:	loop   0x14000bc0a
   14000bc85:	outs   dx,DWORD PTR ds:[rsi]
   14000bc86:	mov    edi,0xf8ff97c4
   14000bc8b:	and    eax,0x61ef9bfa
   14000bc90:	movsxd esi,DWORD PTR [rdx+rcx*4-0x22]
   14000bc94:	(bad)  
   14000bc95:	(bad)  
   14000bc96:	xchg   ebp,eax
   14000bc97:	not    al
   14000bc99:	mov    BYTE PTR [rsi+0x2a],0xbd
   14000bc9d:	sar    BYTE PTR [rax-0x4f],1
   14000bca0:	test   al,0xfa
   14000bca2:	or     al,BYTE PTR [rbp+rax*2+0x5e2d0265]
   14000bca9:	lea    edi,[rbx]
   14000bcab:	push   0xffffffffffffffc1
   14000bcad:	pop    rsp
   14000bcae:	stos   DWORD PTR es:[rdi],eax
   14000bcaf:	(bad)  
   14000bcb0:	cmp    eax,0x76a21e6a
   14000bcb5:	out    dx,al
   14000bcb6:	rex.RB fistp DWORD PTR [r8+0x20]
   14000bcba:	(bad)
   14000bcbd:	stos   BYTE PTR es:[rdi],al
   14000bcbe:	xchg   esp,eax
   14000bcbf:	(bad)  
   14000bcc0:	movabs ds:0x2cf46cb4ba0965ff,al
   14000bcc9:	push   rdx
   14000bcca:	(bad)  
   14000bccb:	rex jrcxz 0x14000bcbd
   14000bcce:	(bad)  
   14000bccf:	mov    bh,0xaf
   14000bcd1:	rcl    BYTE PTR [rax+0x2af1e3c6],0x47
   14000bcd8:	jmp    0x101b038d6
   14000bcdd:	mov    bh,0x27
   14000bcdf:	(bad)  
   14000bce0:	int    0x4
   14000bce2:	je     0x14000bd4d
   14000bce4:	pushf  
   14000bce5:	rex.X mov edx,0x9fdecdf5
   14000bceb:	mov    cl,0xf3
   14000bced:	movabs eax,ds:0xcc1b2fe675e4d90e
   14000bcf6:	in     eax,dx
   14000bcf7:	(bad)  
   14000bcf8:	sbb    BYTE PTR [rcx+0x5285056c],al
   14000bcfe:	mov    ah,0xdb
   14000bd00:	sub    eax,0x4cc70f0e
   14000bd05:	es xchg ebx,eax
   14000bd07:	(bad)  
   14000bd08:	sub    eax,0x3d092f7e
   14000bd0d:	ja     0x14000bd62
   14000bd0f:	call   0xd3413ff7
   14000bd14:	xchg   esi,eax
   14000bd15:	ret    0x6d02
   14000bd18:	lea    esi,[rcx]
   14000bd1a:	in     al,0x59
   14000bd1c:	out    0x22,al
   14000bd1e:	add    ch,bh
   14000bd20:	jle    0x14000bd27
   14000bd22:	repz (bad) 
   14000bd24:	(bad)  
   14000bd25:	xor    dh,BYTE PTR [rcx-0x17]
   14000bd28:	repnz add eax,0xc402de6e
   14000bd2e:	(bad)  
   14000bd2f:	rex.WR adc QWORD PTR [rcx+riz*4+0x29cad8b9],0x55
   14000bd38:	cmp    DWORD PTR [rcx],edi
   14000bd3a:	ret    
   14000bd3b:	sbb    DWORD PTR [rdx-0x40111360],0x6d
   14000bd42:	int3   
   14000bd43:	rex.WRB and rax,0xffffffff97eda584
   14000bd49:	adc    eax,0x4a0acd9f
   14000bd4e:	ins    DWORD PTR es:[rdi],dx
   14000bd4f:	rcl    BYTE PTR [rbp-0x4dd630ed],1
   14000bd55:	xchg   esp,eax
   14000bd56:	(bad)  
   14000bd57:	rex.R adc DWORD PTR [rsi+rax*1+0x21],0x4c8df13
   14000bd60:	(bad)  
   14000bd61:	ret    0x3547
   14000bd64:	rol    BYTE PTR ss:[rsp+rcx*4],1
   14000bd68:	mov    BYTE PTR [rdx+0xac10c87],ch
   14000bd6e:	sub    esp,DWORD PTR [rdx+0x2690801c]
   14000bd74:	sbb    al,0xa8
   14000bd76:	jg     0x14000bddd
   14000bd78:	jbe    0x14000bdae
   14000bd7a:	xor    cl,BYTE PTR [rdx]
   14000bd7c:	sub    edx,DWORD PTR [rax]
   14000bd7e:	jo     0x14000bd21
   14000bd80:	shl    DWORD PTR [rsi+0x3a],0xe7
   14000bd84:	scas   eax,DWORD PTR es:[rdi]
   14000bd85:	std    
   14000bd86:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000bd87:	cmp    edi,edi
   14000bd89:	cmc    
   14000bd8a:	(bad)  
   14000bd8b:	jle    0x14000bd1d
   14000bd8d:	jbe    0x14000bd4a
   14000bd8f:	jne    0x14000bd58
   14000bd91:	sahf   
   14000bd92:	outs   dx,BYTE PTR ds:[rsi]
   14000bd93:	xchg   ebp,eax
   14000bd94:	add    al,0x1a
   14000bd96:	sub    al,0xa5
   14000bd98:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000bd99:	shr    ecx,cl
   14000bd9b:	jo     0x14000bd9a
   14000bd9d:	cli    
   14000bd9e:	sub    eax,0x5ff3f77e
   14000bda3:	(bad)  
   14000bda4:	(bad)  
   14000bda5:	fucomi st,st(4)
   14000bda7:	ins    BYTE PTR es:[rdi],dx
   14000bda8:	sahf   
   14000bda9:	movabs ds:0xa0fc6219dda1dfdb,eax
   14000bdb2:	test   eax,0xb85f7d1a
   14000bdb7:	pushf  
   14000bdb8:	(bad)  
   14000bdb9:	mov    ebp,0x1636cc72
   14000bdbe:	push   rdi
   14000bdbf:	and    DWORD PTR [rax+0x528188a5],eax
   14000bdc5:	(bad)  
   14000bdc6:	mov    ?,WORD PTR [rdi]
   14000bdc8:	sbb    edx,DWORD PTR [rbp+0x422040f5]
   14000bdce:	jmp    0x10d02e1eb
   14000bdd3:	mov    ebx,DWORD PTR [rcx-0x63dc97da]
   14000bdd9:	jrcxz  0x14000bdaa
   14000bddb:	jg     0x14000bd67
   14000bddd:	adc    cl,BYTE PTR [rdx-0x6815ccae]
   14000bde3:	or     dl,bl
   14000bde5:	mov    ch,0xe7
   14000bde7:	lea    edi,[rdi+0x15c021c7]
   14000bded:	sbb    eax,0x21abbd5
   14000bdf2:	test   bl,ah
   14000bdf4:	add    eax,eax
   14000bdf6:	sub    eax,esi
   14000bdf8:	or     DWORD PTR [rsi],edi
   14000bdfa:	mov    rbp,r11
   14000bdfd:	(bad)  
   14000bdfe:	mov    edi,0x3397fb48
   14000be03:	jle    0x14000bdf6
   14000be05:	addr32 (bad) 
   14000be07:	rol    DWORD PTR [rbx-0x8736c7d],0x27
   14000be0e:	mov    esp,0x7c1ba5fe
   14000be13:	sti    
   14000be14:	pop    rdi
   14000be15:	in     eax,dx
   14000be16:	xor    DWORD PTR [rbp+0x524242e0],edi
   14000be1c:	mov    edx,0xbad6afd8
   14000be21:	repnz add DWORD PTR [rdx+rbp*2-0x43cc08e4],ebp
   14000be29:	ja     0x14000be62
   14000be2b:	cmp    ebx,DWORD PTR [rdi]
   14000be2d:	ja     0x14000bdca
   14000be2f:	fild   QWORD PTR [rbp+0x200000]
   14000be35:	rex.WB
   14000be36:	rex.R
   14000be37:	push   r12
   14000be39:	push   rsi
   14000be3a:	fwait
   14000be3b:	add    edx,DWORD PTR [rdx-0x46]
   14000be3e:	pop    rcx
   14000be3f:	outs   dx,BYTE PTR ds:[rsi]
   14000be40:	stos   BYTE PTR es:[rdi],al
   14000be41:	xchg   ebp,eax
   14000be42:	pop    rcx
   14000be43:	and    esp,DWORD PTR [rdi-0x23d965a2]
   14000be49:	mov    eax,0xb1839b71
   14000be4e:	hlt    
   14000be4f:	mov    ecx,0xc5f95e36
   14000be54:	loop   0x14000be30
   14000be56:	jno    0x14000be60
   14000be58:	mov    al,0xb2
   14000be5a:	int3   
   14000be5b:	in     eax,dx
   14000be5c:	(bad)  
   14000be5d:	(bad)  
   14000be5e:	mov    esi,0x4066c541
   14000be63:	call   0x1b4935337
   14000be68:	cmp    cl,BYTE PTR [rdx-0x46af5a4c]
   14000be6e:	rex.RX jnp 0x14000be3e
   14000be71:	xchg   esi,eax
   14000be72:	adc    cl,BYTE PTR [rsi-0x63]
   14000be75:	enter  0xb538,0x93
   14000be79:	jno    0x14000be71
   14000be7b:	mov    ah,0xe5
   14000be7d:	shl    DWORD PTR [rbx+0x7d],0xba
   14000be81:	fld    QWORD PTR [rcx+rsi*8+0x4b85ce61]
   14000be88:	xchg   DWORD PTR [rdi+rbp*8+0x15],edi
   14000be8c:	retf   
   14000be8d:	cmc    
   14000be8e:	fst    QWORD PTR [rbx]
   14000be90:	push   0xffffffffbd95d693
   14000be95:	xchg   edx,eax
   14000be96:	js     0x14000be34
   14000be98:	and    BYTE PTR [rax+0x39],0x2a
   14000be9c:	ror    BYTE PTR [rsp+rsi*1-0xa6a3dd4],1
   14000bea3:	jmp    0x14732156a
   14000bea8:	(bad)  
   14000bea9:	add    bl,BYTE PTR [rdi]
   14000beab:	jp     0x14000bea9
   14000bead:	(bad)  
   14000beae:	mov    edi,0xc63ddff1
   14000beb3:	mov    ecx,0x50b83bb3
   14000beb8:	loopne 0x14000bea4
   14000beba:	icebp  
   14000bebb:	(bad)  
   14000bebc:	icebp  
   14000bebd:	cmp    ebp,DWORD PTR [rcx+0x6e]
   14000bec0:	mov    bh,0xd6
   14000bec2:	in     eax,0x59
   14000bec4:	in     al,0x79
   14000bec6:	(bad)  
   14000bec7:	(bad)  
   14000bec8:	push   rax
   14000beca:	jmp    0x14000be88
   14000becc:	jne    0x14000be87
   14000bece:	in     al,0xf4
   14000bed0:	fld    DWORD PTR [rdi-0x18]
   14000bed3:	je     0x14000be8c
   14000bed5:	call   0x1a459054e
   14000beda:	ins    DWORD PTR es:[rdi],dx
   14000bedb:	mov    edx,0x38588475
   14000bee0:	hlt    
   14000bee1:	in     al,dx
   14000bee2:	(bad)  
   14000bee3:	xchg   ecx,eax
   14000bee4:	or     cl,dl
   14000bee6:	xor    BYTE PTR [rbx+0x44],ch
   14000bee9:	add    eax,DWORD PTR [rsp+rdi*1]
   14000beec:	js     0x14000be77
   14000beee:	(bad)
   14000bef1:	retf   0xfb2e
   14000bef4:	or     ebp,DWORD PTR [rdx+rax*8]
   14000bef7:	out    dx,eax
   14000bef8:	pop    rdi
   14000bef9:	rex.WR sbb rax,0xb72a226
   14000beff:	xchg   esi,eax
   14000bf00:	(bad)  
   14000bf01:	jl     0x14000bf03
   14000bf03:	(bad)  
   14000bf04:	js     0x14000bf06
   14000bf06:	in     eax,dx
   14000bf07:	xchg   BYTE PTR [rax+0x1b],cl
   14000bf0a:	pop    rbp
   14000bf0b:	movabs ds:0xd9bf7b35dba94664,al
   14000bf14:	xchg   esi,eax
   14000bf15:	(bad)
   14000bf19:	mov    ebx,0x6384021c
   14000bf1e:	data16 add al,BYTE PTR [rdx-0x125261ad]
   14000bf25:	ins    DWORD PTR es:[rdi],dx
   14000bf26:	(bad)  
   14000bf27:	mov    esi,0xff9718f9
   14000bf2c:	hlt    
   14000bf2d:	adc    eax,0xa79faebe
   14000bf32:	test   DWORD PTR [rcx-0x49d8cf1],0xdffd3f24
   14000bf3c:	hlt    
   14000bf3d:	imul   ebp,DWORD PTR [rdi+0x5c],0xf8ff4be2
   14000bf44:	xor    dl,bl
   14000bf46:	leave  
   14000bf47:	add    al,0xa5
   14000bf49:	(bad)  
   14000bf4a:	rcl    BYTE PTR es:[rcx+0x15],0xb0
   14000bf4f:	rex.WX mov ds,WORD PTR [rbx]
   14000bf52:	cli    
   14000bf53:	imul   ebp,esi,0xfffffff7
   14000bf56:	idiv   DWORD PTR [rdi+rcx*8-0x29]
   14000bf5a:	push   rdx
   14000bf5b:	rex.WX xchg rcx,rax
   14000bf5d:	sti    
   14000bf5e:	mov    DWORD PTR [rax+0x63],eax
   14000bf61:	rex.X sbb eax,0xaf57821c
   14000bf67:	fisub  WORD PTR [rdx+0x3e]
   14000bf6a:	in     eax,dx
   14000bf6b:	rex push 0xffffffffffffff91
   14000bf6e:	(bad)  
   14000bf6f:	sbb    al,BYTE PTR [rax]
   14000bf71:	xor    al,0xf3
   14000bf73:	(bad)  
   14000bf74:	stos   BYTE PTR es:[rdi],al
   14000bf75:	outs   dx,BYTE PTR ss:[rsi]
   14000bf77:	(bad)  
   14000bf78:	and    DWORD PTR [rax-0x7c],eax
   14000bf7b:	ret    0x51fa
   14000bf7e:	and    eax,0x45431ae
   14000bf83:	adc    al,0x29
   14000bf85:	movabs eax,ds:0x82d36613b4e84add
   14000bf8e:	sbb    al,0xcb
   14000bf90:	(bad)  
   14000bf91:	(bad)  
   14000bf92:	(bad)  
   14000bf93:	(bad)  
   14000bf94:	sahf   
   14000bf95:	enter  0x2bf8,0x9f
   14000bf99:	cmp    al,cl
   14000bf9b:	rex.RXB jg 0x14000bf88
   14000bf9e:	jge    0x14000bf3c
   14000bfa0:	cmp    DWORD PTR [rbx-0x542850b3],esi
   14000bfa6:	sahf   
   14000bfa7:	sub    eax,0xf85e73cf
   14000bfac:	idiv   BYTE PTR [rcx-0x2]
   14000bfaf:	out    dx,eax
   14000bfb0:	jg     0x14000bfa9
   14000bfb2:	jge    0x14000bfb2
   14000bfb4:	in     al,0xb9
   14000bfb6:	cs sar esp,cl
   14000bfb9:	add    al,0x96
   14000bfbb:	(bad)  
   14000bfbc:	or     ah,al
   14000bfbe:	(bad)  
   14000bfbf:	ret    
   14000bfc0:	mov    dl,BYTE PTR [rdx]
   14000bfc2:	rex.RXB mov r13d,0xb35fd859
   14000bfc8:	and    ah,dl
   14000bfca:	sahf   
   14000bfcb:	xor    BYTE PTR [rdx],dh
   14000bfcd:	adc    ebp,DWORD PTR [rdx]
   14000bfcf:	jg     0x14000bf91
   14000bfd1:	ret    0xb829
   14000bfd4:	xor    edi,DWORD PTR [rsi+rcx*8+0x6edff0ff]
   14000bfdb:	lock in al,0x13
   14000bfde:	sub    esp,DWORD PTR [eax-0x19704191]
   14000bfe5:	jmp    QWORD PTR [rsi]
   14000bfe7:	or     BYTE PTR [rbp+riz*2-0x1edb6d44],al
   14000bfee:	imul   ebx,DWORD PTR [rdi-0x1],0x33
   14000bff2:	(bad)  
   14000bff3:	in     al,0xeb
   14000bff5:	scas   eax,DWORD PTR es:[rdi]
   14000bff6:	xor    ebx,edx
   14000bff8:	jp     0x14000c039
   14000bffa:	std    
   14000bffb:	lea    edx,[rbx]
   14000bffd:	hlt    
   14000bffe:	jp     0x14000c05b
   14000c000:	rex.W fptan 
   14000c003:	cmc    
   14000c004:	sbb    eax,DWORD PTR [rbx-0x1d394065]
   14000c00a:	addr32 cmc 
   14000c00c:	pop    rsp
   14000c00d:	mov    ebx,DWORD PTR [rsi]
   14000c00f:	jge    0x14000c032
   14000c011:	cmc    
   14000c012:	movabs ds:0x48e00c14223cee,al
   14000c01b:	cmp    DWORD PTR [rdx-0x727bd05f],0xc075a022
   14000c025:	or     BYTE PTR [rdi+0x59ff46e1],cl
   14000c02b:	mov    edi,0xfff0a818
   14000c030:	sub    eax,0x46d26b46
   14000c035:	(bad)  
   14000c036:	rex xchg eax,eax
   14000c038:	push   rax
   14000c039:	(bad)  
   14000c03a:	rex.WX sub rsi,rsi
   14000c03d:	div    edi
   14000c03f:	push   rdi
   14000c040:	test   DWORD PTR [rax],eax
   14000c042:	xor    eax,0xbbd0206e
   14000c047:	sub    al,bh
   14000c049:	sahf   
   14000c04a:	adc    al,0x54
   14000c04c:	imul   ecx,ebp,0xffffffe9
   14000c04f:	mov    bl,0xa7
   14000c051:	clc    
   14000c052:	in     al,dx
   14000c053:	(bad)  
   14000c054:	jg     0x14000bfdf
   14000c056:	(bad)  
   14000c057:	iret   
   14000c058:	mov    edi,0x5e67a5ce
   14000c05d:	jrcxz  0x14000c0ba
   14000c05f:	iret   
   14000c060:	mov    esp,0x31b1e0c4
   14000c065:	(bad)  
   14000c066:	jg     0x14000c00a
   14000c068:	rex.WRXB push QWORD PTR [r9+0x38]
   14000c06c:	stc    
   14000c06d:	mov    QWORD PTR [r14+0xd2c6883],rbx
   14000c074:	jnp    0x14000c052
   14000c076:	cmp    al,r15b
   14000c079:	fst    st(6)
   14000c07b:	fmul   QWORD PTR [rdi]
   14000c07d:	jne    0x14000c08f
   14000c07f:	cmp    BYTE PTR [rdx-0xc207bfb],cl
   14000c085:	fxch   st(4)
   14000c087:	(bad)  
   14000c088:	adc    DWORD PTR [rsi-0x63],ebx
   14000c08b:	add    al,0x21
   14000c08d:	and    eax,0x3cde6ac6
   14000c092:	jg     0x14000c0af
   14000c094:	rex.R (bad) 
   14000c097:	icebp  
   14000c098:	stc    
   14000c099:	inc    DWORD PTR [rdx]
   14000c09b:	movabs eax,ds:0x7f0b33961a061ba4
   14000c0a4:	add    al,0x95
   14000c0a6:	push   rbx
   14000c0a7:	rcl    BYTE PTR [rdx],1
   14000c0a9:	sbb    cl,BYTE PTR [rdx-0x7bb3e361]
   14000c0af:	mov    al,0xa1
   14000c0b1:	add    al,0xab
   14000c0b3:	mov    cl,0x3e
   14000c0b5:	mov    esi,ss
   14000c0b7:	outs   dx,BYTE PTR ds:[rsi]
   14000c0b8:	rex.WB cli 
   14000c0ba:	jge    0x14000c081
   14000c0bc:	je     0x14000c068
   14000c0be:	sbb    BYTE PTR [rsi+0x4c],ch
   14000c0c1:	stc    
   14000c0c2:	stos   DWORD PTR es:[rdi],eax
   14000c0c3:	jg     0x14000c11e
   14000c0c5:	icebp  
   14000c0c6:	ja     0x14000c0c6
   14000c0c8:	out    0xd3,al
   14000c0ca:	cmp    al,0xfe
   14000c0cc:	sahf   
   14000c0cd:	rex.RXB stos DWORD PTR es:[rdi],eax
   14000c0cf:	in     eax,0xad
   14000c0d1:	jrcxz  0x14000c08b
   14000c0d3:	mov    edx,0x1f079294
   14000c0d8:	jl     0x14000c06a
   14000c0da:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000c0db:	(bad)  
   14000c0dc:	cli    
   14000c0dd:	pop    rsi
   14000c0de:	(bad)  
   14000c0df:	(bad)  
   14000c0e1:	lock cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000c0e3:	cld    
   14000c0e4:	pop    rdi
   14000c0e5:	push   rsi
   14000c0e7:	rex.WRB fidivr WORD PTR [r10-0x5939ef0a]
   14000c0ee:	sub    al,0xa5
   14000c0f0:	out    dx,al
   14000c0f1:	scas   al,BYTE PTR es:[rdi]
   14000c0f2:	or     al,0xfd
   14000c0f4:	stc    
   14000c0f5:	push   rsi
   14000c0f6:	mov    ebp,0xa231d972
   14000c0fb:	std    
   14000c0fc:	(bad)  
   14000c0fd:	push   rsp
   14000c0fe:	ret    0xf3e
   14000c101:	adc    bl,BYTE PTR [rbp+0x7e67ce56]
   14000c107:	es out 0xb3,eax
   14000c10a:	lahf   
   14000c10b:	dec    BYTE PTR [rcx-0x46]
   14000c10e:	fnsave [rsi+0x6d]
   14000c111:	rex.X retf 
   14000c113:	push   rbp
   14000c114:	mov    ebp,0xb1cf5c7c
   14000c119:	sub    rcx,rbp
   14000c11c:	jbe    0x14000c0d9
   14000c11e:	pop    rsp
   14000c11f:	mov    esi,0xffcf9572
   14000c124:	(bad)  
   14000c125:	(bad)  
   14000c126:	mov    cl,0xea
   14000c128:	xor    al,0xfd
   14000c12a:	loope  0x14000c185
   14000c12c:	pop    rdx
   14000c12d:	popf   
   14000c12e:	rex.WRB
   14000c12f:	fs shl cl,cl
   14000c132:	jmp    0x14000c16f
   14000c134:	xor    al,0x7a
   14000c136:	hlt    
   14000c137:	enter  0xb10d,0xe8
   14000c13b:	mov    eax,0xcfbc9445
   14000c140:	rex.X shr DWORD PTR [rbx+0x503675fd],0xa9
   14000c148:	mov    dl,0x8
   14000c14a:	adc    al,0xbf
   14000c14c:	jmp    0x1440f496c
   14000c151:	outs   dx,DWORD PTR ds:[rsi]
   14000c152:	ds (bad) 
   14000c154:	mov    WORD PTR [rdx],0xadc0
   14000c159:	jne    0x14000c104
   14000c15b:	fsubr  QWORD PTR [rsi+0x65]
   14000c15e:	fs mov bh,0x66
   14000c161:	(bad)  
   14000c162:	pop    rcx
   14000c163:	rex.WX mov al,0x13
   14000c166:	rex.RX ret 
   14000c168:	xor    BYTE PTR [rsi-0x7f4e575c],cl
   14000c16e:	push   rax
   14000c16f:	(bad)  
   14000c170:	rex.WX sub QWORD PTR [rdx-0xf759a94],rsi
   14000c177:	xchg   esp,eax
   14000c178:	(bad)  
   14000c179:	and    eax,0x1382013
   14000c17e:	sub    DWORD PTR [rip+0xfffffffff119da3d],0x53        # 0x1311a9bc2
   14000c185:	cmp    ecx,DWORD PTR [rdi-0xd]
   14000c188:	movabs eax,ds:0xbdaf32eb7a5ca3e2
   14000c191:	clc    
   14000c192:	xor    dl,bh
   14000c194:	mov    edi,0xf35b897a
   14000c199:	stos   DWORD PTR es:[rdi],eax
   14000c19a:	int3   
   14000c19b:	scas   al,BYTE PTR es:[rdi]
   14000c19c:	es and al,0x3f
   14000c19f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000c1a0:	nop
   14000c1a1:	push   rdx
   14000c1a2:	xchg   ecx,eax
   14000c1a3:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000c1a4:	sub    eax,0x46551084
   14000c1a9:	pop    rax
   14000c1aa:	nop
   14000c1ab:	jrcxz  0x14000c1a5
   14000c1ad:	add    dh,ch
   14000c1af:	gs pop rbx
   14000c1b1:	mov    eax,0x503d55b7
   14000c1b6:	repz cmp dh,cl
   14000c1b9:	jae    0x14000c17b
   14000c1bb:	ret    0x3027
   14000c1be:	pop    rdi
   14000c1bf:	cmp    DWORD PTR [rbx],edx
   14000c1c1:	mov    al,0x4b
   14000c1c3:	jne    0x14000c182
   14000c1c5:	jo     0x14000c1b8
   14000c1c7:	add    BYTE PTR [rax],bl
   14000c1c9:	cli    
   14000c1ca:	ins    DWORD PTR es:[rdi],dx
   14000c1cb:	add    DWORD PTR cs:[rax-0x8],ecx
   14000c1cf:	imul   ebx,DWORD PTR [rax+0x21d948],0x42
   14000c1d6:	int3   
   14000c1d7:	js     0x14000c1f9
   14000c1d9:	and    BYTE PTR [rbx+0x5ae33a1b],al
   14000c1df:	mov    al,0x63
   14000c1e1:	add    DWORD PTR [rsi],ecx
   14000c1e3:	add    al,0x64
   14000c1e5:	and    ch,BYTE PTR [rax-0x49]
   14000c1e8:	adc    eax,0x7e684ea7
   14000c1ed:	(bad)  
   14000c1ee:	adc    ebp,DWORD PTR [rcx]
   14000c1f0:	mov    edi,0x9c7fdff2
   14000c1f5:	(bad)  
   14000c1f6:	(bad)  
   14000c1f7:	jnp    0x14000c205
   14000c1f9:	jo     0x14000c249
   14000c1fb:	xlat   BYTE PTR ds:[rbx]
   14000c1fc:	js     0x14000c1aa
   14000c1fe:	js     0x14000c1b0
   14000c200:	(bad)  
   14000c201:	shl    DWORD PTR [riz*8-0x1de1785f],cl
   14000c208:	(bad)  
   14000c209:	jg     0x14000c278
   14000c20b:	xchg   DWORD PTR [rdi-0xdd0dc1],esp
   14000c211:	(bad)  
   14000c212:	mov    edi,0x3caf967a
   14000c217:	cmp    esp,DWORD PTR [rdi+rdx*8]
   14000c21a:	fcomi  st,st(5)
   14000c21c:	push   rdi
   14000c21d:	sbb    edx,DWORD PTR [rdx-0x76]
   14000c220:	rex.XB and ecx,DWORD PTR [r15+0x3695849d]
   14000c227:	jns    0x14000c2a8
   14000c229:	rex movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000c22b:	pop    rcx
   14000c22c:	or     eax,0xbd5420a7
   14000c231:	mov    edi,0x4f43e4a0
   14000c236:	in     al,dx
   14000c237:	repz fwait
   14000c239:	jmp    rax
   14000c23b:	or     DWORD PTR [rsi+0x79aa36b7],esi
   14000c241:	std    
   14000c242:	loop   0x14000c2bb
   14000c244:	mov    ebx,0xfaaf5dea
   14000c249:	fsubp  st(5),st
   14000c24b:	jbe    0x14000c216
   14000c24d:	repz pushf 
   14000c24f:	(bad)  
   14000c250:	cld    
   14000c251:	(bad)  
   14000c252:	xlat   BYTE PTR ds:[rbx]
   14000c253:	mov    ecx,0xe670d578
   14000c258:	rol    DWORD PTR [rdi-0x17],0x74
   14000c25c:	ss push 0xffffffffddbc3677
   14000c262:	iret   
   14000c263:	(bad)  
   14000c264:	out    dx,al
   14000c265:	(bad)  
   14000c266:	cli    
   14000c267:	sub    al,0xc2
   14000c269:	lods   eax,DWORD PTR ds:[rsi]
   14000c26a:	mov    ecx,0x73cc5d7a
   14000c26f:	mov    edx,0x8884df30
   14000c274:	cwde   
   14000c275:	rex.X int 0xef
   14000c278:	loop   0x14000c205
   14000c27a:	rex.RX iret 
   14000c27c:	(bad)  
   14000c27d:	mul    DWORD PTR [rip+0xffffffffc9aa4375]        # 0x109ab05f8
   14000c283:	cmp    al,0xfc
   14000c285:	lea    ecx,[rax-0x4f272278]
   14000c28b:	add    dh,BYTE PTR [rax+0x2c03d6ad]
   14000c291:	mov    rsi,QWORD PTR [r15+r8*4+0x308cd274]
   14000c299:	jg     0x14000c27d
   14000c29b:	stos   BYTE PTR es:[rdi],al
   14000c29c:	cli    
   14000c29d:	or     bl,dh
   14000c29f:	and    esi,DWORD PTR [rax*2-0x7bd04ef8]
   14000c2a6:	js     0x14000c2ff
   14000c2a8:	rex.XB xor BYTE PTR [r8+0x3c],0x6
   14000c2ad:	mov    al,0x13
   14000c2af:	pushf  
   14000c2b0:	xor    eax,0xad1b76ed
   14000c2b5:	or     eax,0xb1b39965
   14000c2ba:	xor    eax,esp
   14000c2bc:	in     al,dx
   14000c2bd:	and    esp,DWORD PTR [rdi]
   14000c2bf:	jns    0x14000c2b1
   14000c2c1:	cmp    eax,0x30da30e7
   14000c2c6:	lahf   
   14000c2c7:	(bad)  
   14000c2c8:	cmp    DWORD PTR [rax],edi
   14000c2ca:	fsub   QWORD PTR [rdi+0x30]
   14000c2cd:	sbb    al,0x54
   14000c2cf:	cmp    eax,esp
   14000c2d1:	rex.RB push r9
   14000c2d3:	push   rsp
   14000c2d4:	imul   ebx,DWORD PTR [rsi-0x3fe0a241],0xffffffdd
   14000c2db:	mov    dh,0x1d
   14000c2dd:	mov    ch,0xff
   14000c2df:	pop    rsi
   14000c2e0:	jge    0x14000c2e4
   14000c2e2:	popf   
   14000c2e3:	rex.WRX (bad) 
   14000c2e5:	or     eax,0x1ad34d57
   14000c2ea:	and    edx,DWORD PTR [rsi+0x4a]
   14000c2ed:	xchg   ecx,eax
   14000c2ee:	addr32 sbb edi,edx
   14000c2f1:	scas   al,BYTE PTR es:[rdi]
   14000c2f2:	iret   
   14000c2f3:	icebp  
   14000c2f4:	movabs ds:0xb3d5009b2d2ebda1,eax
   14000c2fd:	jns    0x14000c284
   14000c2ff:	outs   dx,DWORD PTR ds:[rsi]
   14000c300:	push   rdx
   14000c301:	(bad)  
   14000c302:	jrcxz  0x14000c341
   14000c304:	out    0x36,eax
   14000c306:	add    BYTE PTR [rax+0xbd36bf5],0xb7
   14000c30d:	(bad)  
   14000c30e:	push   rcx
   14000c30f:	cmp    edi,ebp
   14000c311:	jmp    QWORD PTR [rax-0x4203e01a]
   14000c317:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000c318:	jns    0x14000c2fe
   14000c31a:	xchg   ecx,eax
   14000c31b:	rex.RXB adc BYTE PTR [r10+0x54],r8b
   14000c31f:	icebp  
   14000c320:	loope  0x14000c377
   14000c322:	rcl    DWORD PTR [rax+rsi*1-0x2448915d],1
   14000c329:	in     eax,0x67
   14000c32b:	jg     0x14000c313
   14000c32d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000c32e:	jns    0x14000c31f
   14000c330:	jrcxz  0x14000c341
   14000c332:	icebp  
   14000c333:	scas   eax,DWORD PTR es:[rdi]
   14000c334:	jle    0x14000c331
   14000c336:	rex.WXB cld 
   14000c338:	lahf   
   14000c339:	push   rsi
   14000c33b:	add    ah,bl
   14000c33d:	fld    DWORD PTR [rbx-0x28]
   14000c340:	(bad)  
   14000c342:	lea    ebx,[rdx+0x7a]
   14000c345:	int    0x14
   14000c347:	push   0x3482fa86
   14000c34c:	cld    
   14000c34d:	add    DWORD PTR [rbp-0x17279023],edx
   14000c353:	fsubr  st(4),st
   14000c355:	out    dx,eax
   14000c356:	std    
   14000c357:	repnz mov BYTE PTR [rdi+0x46ae77de],ah
   14000c35e:	std    
   14000c35f:	jrcxz  0x14000c35b
   14000c361:	(bad)  
   14000c362:	jmp    0x14000c3a0
   14000c364:	jl     0x14000c348
   14000c366:	cli    
   14000c367:	(bad)  
   14000c368:	jne    0x14000c308
   14000c36a:	and    al,0x9
   14000c36c:	pop    rdi
   14000c36d:	dec    dl
   14000c36f:	mov    bl,0xfc
   14000c371:	jmp    0x11c32f2ad
   14000c376:	jp     0x14000c30a
   14000c378:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14000c37a:	xchg   ebx,eax
   14000c37b:	jbe    0x14000c3e4
   14000c37d:	add    al,0xc8
   14000c37f:	(bad)
   14000c382:	adc    eax,0xfbed8f65
   14000c387:	mov    eax,0x5337580d
   14000c38c:	rex.WRB
   14000c38d:	fild   WORD PTR gs:[rdi-0x61153389]
   14000c394:	pop    rbx
   14000c395:	(bad)  
   14000c396:	adc    eax,0x9a39c3e
   14000c39b:	add    ah,BYTE PTR [rcx+0x539da8ba]
   14000c3a1:	rex.R jne 0x14000c38b
   14000c3a4:	mov    esi,0xe8801356
   14000c3a9:	jp     0x14000c3d9
   14000c3ab:	and    BYTE PTR [rsi+rax*4+0x14],0xf3
   14000c3b0:	mov    ah,BYTE PTR [rip+0x2d6b12ac]        # 0x16d6bd662
   14000c3b6:	mov    bl,0xd9
   14000c3b8:	ins    BYTE PTR es:[rdi],dx
   14000c3b9:	imul   edi,eax,0xcc6210b3
   14000c3bf:	and    ah,dh
   14000c3c1:	cli    
   14000c3c2:	scas   al,BYTE PTR es:[rdi]
   14000c3c3:	leave  
   14000c3c4:	jno    0x14000c3de
   14000c3c6:	rol    BYTE PTR [rsi+0x0],0x0
   14000c3ca:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000c3cb:	adc    ch,BYTE PTR [rdi-0x44896dfc]
   14000c3d1:	ret    
   14000c3d2:	push   rdi
   14000c3d3:	mov    esi,0x9d3a45f2
   14000c3d8:	ds (bad) 
   14000c3da:	(bad)  
   14000c3db:	lock shl DWORD PTR [rdi+rax*1+0x1d],cl
   14000c3e0:	cli    
   14000c3e1:	rex.XB (bad) 
   14000c3e3:	call   0x1b75ef9af
   14000c3e8:	cld    
   14000c3e9:	push   rcx
   14000c3ea:	or     BYTE PTR [rax-0x6c],bh
   14000c3ed:	fmul   QWORD PTR [rbp-0xf]
   14000c3f0:	out    dx,eax
   14000c3f1:	(bad)  
   14000c3f2:	(bad)  
   14000c3f3:	adc    BYTE PTR [rdi-0x5],bl
   14000c3f6:	mov    fs,WORD PTR [rax]
   14000c3f8:	movabs al,ds:0x5bc77bdd4fffc535
   14000c401:	xchg   esi,eax
   14000c402:	pop    rbp
   14000c403:	cmc    
   14000c404:	popf   
   14000c405:	fistp  QWORD PTR [rbp-0x32]
   14000c408:	mov    ecx,0x2f58bef9
   14000c40d:	(bad)  
   14000c40e:	stos   DWORD PTR es:[rdi],eax
   14000c40f:	push   rdi
   14000c410:	movabs eax,ds:0xd5b51a2dd5abbabb
   14000c419:	sub    eax,0x92d1259
   14000c41e:	and    eax,0x49196324
   14000c423:	(bad)  
   14000c424:	test   BYTE PTR [rdx],al
   14000c426:	add    ch,BYTE PTR [rsi+rax*8-0x2]
   14000c42a:	int3   
   14000c42b:	mov    ebx,fs
   14000c42d:	(bad)  
   14000c42e:	iret   
   14000c42f:	or     al,0x1f
   14000c431:	movsxd ecx,DWORD PTR [rdi+0x3481c01c]
   14000c437:	mul    BYTE PTR [rax-0x7d]
   14000c43a:	(bad)  
   14000c43b:	data16 xchg BYTE PTR [rax-0x40],ah
   14000c43f:	(bad)  
   14000c440:	(bad)  
   14000c441:	or     BYTE PTR [rax],0x2
   14000c444:	fld    DWORD PTR [rdx+0x6a]
   14000c447:	or     DWORD PTR [rcx+0x74],ecx
   14000c44a:	mov    bh,0x3a
   14000c44c:	ja     0x14000c4c3
   14000c44e:	push   rbp
   14000c44f:	xchg   DWORD PTR [rdx-0x51],ecx
   14000c452:	repnz stos DWORD PTR es:[rdi],eax
   14000c454:	jp     0x14000c44f
   14000c456:	out    0x7b,al
   14000c458:	ret    0x3f9e
   14000c45b:	jbe    0x14000c495
   14000c45d:	sti    
   14000c45e:	pushf  
   14000c45f:	jnp    0x14000c4bf
   14000c461:	push   rbp
   14000c462:	mov    ebp,0xef1aaa92
   14000c467:	rex.WRXB movabs r13,0xb7eb5af67d8727ba
   14000c471:	ret    0x2b5e
   14000c474:	or     al,0x29
   14000c476:	xchg   ebp,eax
   14000c477:	retf   
   14000c478:	out    dx,al
   14000c479:	or     eax,0x6c4a9729
   14000c47e:	ins    BYTE PTR es:[rdi],dx
   14000c47f:	outs   dx,BYTE PTR ds:[rsi]
   14000c480:	mov    dl,0xb1
   14000c482:	sub    DWORD PTR [rax+0x63ef57d2],edx
   14000c488:	push   rsp
   14000c489:	add    dl,dl
   14000c48b:	(bad)  
   14000c48c:	xor    eax,0x453f6864
   14000c491:	add    BYTE PTR [rcx+0x4109a00a],ch
   14000c497:	call   0x1a948d58f
   14000c49c:	and    ch,dh
   14000c49e:	(bad)  
   14000c49f:	mov    esi,0x3783796a
   14000c4a4:	mov    ebp,0xdd772f61
   14000c4a9:	jne    0x14000c4d2
   14000c4ab:	in     eax,0x72
   14000c4ad:	(bad)  [rsi]
   14000c4af:	or     al,0xf3
   14000c4b1:	mov    WORD PTR [rcx+0x57],?
   14000c4b4:	stos   BYTE PTR es:[rdi],al
   14000c4b5:	pop    rcx
   14000c4b6:	(bad)  
   14000c4b7:	ret    
   14000c4b8:	shl    BYTE PTR [rdx+0x7ff5ff81],1
   14000c4be:	stc    
   14000c4bf:	add    BYTE PTR [rbx-0x5],cl
   14000c4c2:	mov    esi,0xc7fccfc0
   14000c4c7:	rcr    DWORD PTR [rax+rbx*2-0x43],cl
   14000c4cb:	add    DWORD PTR [rdx+rbx*4+0x4f],0xffffff9c
   14000c4d0:	push   rcx
   14000c4d1:	hlt    
   14000c4d2:	sbb    DWORD PTR [rbp-0x3],esi
   14000c4d5:	mov    ecx,0xd8737e56
   14000c4da:	test   al,0xf1
   14000c4dc:	iret   
   14000c4dd:	mul    DWORD PTR [rbx]
   14000c4df:	fdivp  st(1),st
   14000c4e1:	out    0x21,al
   14000c4e3:	(bad)  
   14000c4e4:	cld    
   14000c4e5:	test   bl,0x94
   14000c4e8:	rex.WX
   14000c4e9:	rex.WX jp 0x14000c4d1
   14000c4ec:	and    eax,0xfee9158
   14000c4f1:	sub    DWORD PTR [rdx+0x31],esi
   14000c4f4:	stc    
   14000c4f5:	cld    
   14000c4f6:	jmp    0x14000c4ed
   14000c4f8:	cmp    ah,BYTE PTR [rdi+0xfe59f4f]
   14000c4fe:	(bad)  
   14000c4ff:	jmp    0x14000c494
   14000c501:	adc    ah,ch
   14000c503:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000c504:	cmp    DWORD PTR [rcx],esi
   14000c506:	rex.WRXB movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14000c508:	xor    al,BYTE PTR [rcx+0x32755417]
   14000c50e:	movabs ds:0x322cbd7d8ac4c7ac,eax
   14000c517:	(bad)  
   14000c519:	cmc    
   14000c51a:	ss xchg ecx,eax
   14000c51c:	xor    al,BYTE PTR [rdi]
   14000c51e:	xchg   esi,esp
   14000c520:	rex.RX ins BYTE PTR es:[rdi],dx
   14000c522:	add    esp,DWORD PTR [rsi+0x18ee451f]
   14000c528:	mov    bl,0x20
   14000c52a:	int    0xf5
   14000c52c:	jb     0x14000c4e4
   14000c52e:	add    DWORD PTR [rdx],0x2224907c
   14000c534:	xor    eax,0x152ac5fe
   14000c539:	pop    rdx
   14000c53a:	adc    al,0x42
   14000c53c:	lods   eax,DWORD PTR ds:[rsi]
   14000c53d:	adc    al,0x33
   14000c53f:	xor    edi,DWORD PTR [rip+0xfffffffff264636e]        # 0x1326528b3
   14000c545:	xchg   BYTE PTR [rax-0x2d],al
   14000c548:	(bad)  
   14000c549:	outs   dx,BYTE PTR ds:[rsi]
   14000c54a:	xor    eax,0x6f1be720
   14000c54f:	movabs ds:0x48020ddb696f8142,eax
   14000c558:	mov    dl,0x83
   14000c55a:	iret   
   14000c55b:	mov    bl,0x86
   14000c55d:	xor    ch,ah
   14000c55f:	imul   ebp
   14000c561:	add    ch,BYTE PTR [rdx-0x3ff86b21]
   14000c567:	shl    DWORD PTR [rsi],cl
   14000c569:	sbb    BYTE PTR [rbp+0x3d7d7b67],0xb0
   14000c570:	jg     0x14000c5a9
   14000c572:	sti    
   14000c573:	int    0xb2
   14000c575:	mov    ecx,0x2176c8ff
   14000c57a:	call   0xc60dc174
   14000c57f:	rex.XB xchg r13d,eax
   14000c581:	or     DWORD PTR [rax+0x6f],ebx
   14000c584:	xchg   ebx,eax
   14000c585:	push   rdx
   14000c586:	push   rdx
   14000c587:	scas   al,BYTE PTR es:[rdi]
   14000c588:	xchg   esp,eax
   14000c589:	cmp    DWORD PTR [rdi-0x6],edi
   14000c58c:	and    dl,BYTE PTR [rdi+0x57]
   14000c58f:	push   rbx
   14000c590:	leave  
   14000c591:	and    DWORD PTR [rdi+rcx*1+0x40],ebx
   14000c595:	(bad)  
   14000c596:	mov    ah,0x7b
   14000c598:	fisttp QWORD PTR [rcx+0x6]
   14000c59b:	or     eax,0x965b7768
   14000c5a0:	icebp  
   14000c5a1:	imul   ebx,eax,0xf4143c29
   14000c5a7:	push   rdi
   14000c5a8:	test   BYTE PTR [rax],ch
   14000c5aa:	adc    DWORD PTR [rdx+rsi*2],esp
   14000c5ad:	enter  0xd8e4,0x80
   14000c5b1:	mov    ebx,0x5aa1ef0f
   14000c5b6:	lods   eax,DWORD PTR ds:[rsi]
   14000c5b7:	data16 cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000c5b9:	iret   
   14000c5ba:	out    0xfb,al
   14000c5bc:	scas   al,BYTE PTR es:[rdi]
   14000c5bd:	call   0x10de1ae99
   14000c5c2:	xchg   bx,ax
   14000c5c4:	rex.WRXB jl 0x14000c5b3
   14000c5c7:	cmp    eax,0x927a581c
   14000c5cc:	lahf   
   14000c5cd:	cld    
   14000c5ce:	ja     0x14000c5ff
   14000c5d0:	lock in al,dx
   14000c5d2:	or     rax,QWORD PTR [r9+r10*2-0x12de8ca7]
   14000c5da:	(bad)  
   14000c5db:	xor    esi,DWORD PTR [rbx+riz*2]
   14000c5de:	xor    cl,BYTE PTR [rip+0x4563d2db]        # 0x1856498bf
   14000c5e4:	rex.WR rcl BYTE PTR [rcx+0xb],0xa4
   14000c5e9:	(bad)  
   14000c5ea:	(bad)  
   14000c5ec:	xlat   BYTE PTR ds:[rbx]
   14000c5ed:	clc    
   14000c5ee:	lahf   
   14000c5ef:	jg     0x14000c5d1
   14000c5f1:	xor    eax,0x598d8d8c
   14000c5f6:	loop   0x14000c627
   14000c5f8:	(bad)  
   14000c5f9:	cld    
   14000c5fa:	rex.RB mov r15d,0xa73cd966
   14000c600:	rex.WX in eax,dx
   14000c602:	cmc    
   14000c603:	sub    BYTE PTR [rbx],ch
   14000c605:	imul   eax,DWORD PTR [rcx],0xfffffff3
   14000c608:	jnp    0x14000c601
   14000c60a:	push   rcx
   14000c60b:	test   eax,0x8caa524c
   14000c610:	xchg   ecx,eax
   14000c611:	(bad)
   14000c615:	js     0x14000c620
   14000c617:	(bad)  
   14000c618:	shl    DWORD PTR [rbp+0x736f47c3],1
   14000c61e:	xchg   ecx,eax
   14000c61f:	adc    BYTE PTR [rsp+riz*4+0x59970cb6],0x4a
   14000c627:	push   rdx
   14000c628:	rex.XB lahf 
   14000c62a:	je     0x14000c65b
   14000c62c:	movabs ds:0xcfc35489184e4101,al
   14000c635:	fmul   DWORD PTR [rdx]
   14000c637:	or     ah,BYTE PTR [rsi+rdx*4-0x6c]
   14000c63b:	sub    esp,esi
   14000c63d:	(bad)  
   14000c63e:	jg     0x14000c5ea
   14000c640:	rex.X jb 0x14000c60b
   14000c643:	fdivr  DWORD PTR [rax-0x69]
   14000c646:	mov    ecx,0x5c061559
   14000c64b:	add    BYTE PTR fs:[rdi],dh
   14000c64e:	(bad)  
   14000c650:	adc    al,0x44
   14000c652:	int    0x31
   14000c654:	clc    
   14000c655:	cmc    
   14000c656:	out    dx,eax
   14000c657:	(bad)  
   14000c658:	(bad)  
   14000c659:	out    dx,eax
   14000c65a:	mov    edi,0xb04041a5
   14000c65f:	sti    
   14000c660:	test   BYTE PTR [rax],ah
   14000c662:	(bad)  
   14000c663:	(bad)  
   14000c664:	xor    al,0xf
   14000c666:	push   0x6
   14000c668:	imul   edi,DWORD PTR [rsi],0xc0b667c9
   14000c66e:	rex.XB push r9
   14000c670:	rex.WB in al,0x1b
   14000c673:	cmp    ebp,0x6bf223d7
   14000c679:	popf   
   14000c67a:	push   rbx
   14000c67b:	mov    ah,0x6c
   14000c67d:	fisub  WORD PTR [rip+0x1e7987a3]        # 0x15e7a4e26
   14000c683:	(bad)  
   14000c684:	mov    edi,0xee003d6f
   14000c689:	mov    cl,0xe5
   14000c68b:	jb     0x14000c626
   14000c68d:	stos   DWORD PTR es:[rdi],eax
   14000c68e:	stos   DWORD PTR es:[rdi],eax
   14000c68f:	pop    rbx
   14000c690:	mov    ah,0xdb
   14000c692:	sahf   
   14000c693:	(bad)  
   14000c694:	mov    DWORD PTR [rbx],ebp
   14000c696:	test   BYTE PTR [rsi+0x4b8ea40c],bl
   14000c69c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c69d:	rex.R and al,0xd9
   14000c6a0:	jmp    0x14000c709
   14000c6a2:	jne    0x14000c723
   14000c6a4:	in     al,dx
   14000c6a5:	mov    dl,0xdd
   14000c6a7:	rex.WRX movabs ds:0xcc4990225af40363,al
   14000c6b1:	movabs al,ds:0x8d6172e5cb27a2af
   14000c6ba:	js     0x14000c68f
   14000c6bc:	lahf   
   14000c6bd:	scas   al,BYTE PTR es:[rdi]
   14000c6be:	sub    eax,0x63a2adc3
   14000c6c3:	je     0x14000c6b6
   14000c6c5:	jb     0x14000c680
   14000c6c7:	int3   
   14000c6c8:	mov    ebx,0xf626f5df
   14000c6cd:	cs rex.WR icebp 
   14000c6d0:	movabs ds:0x2209d1e17c27f13f,eax
   14000c6d9:	cmp    DWORD PTR [rcx+0x529999bf],esp
   14000c6df:	lods   al,BYTE PTR ds:[rsi]
   14000c6e0:	and    eax,0x50615164
   14000c6e5:	xlat   BYTE PTR ds:[rbx]
   14000c6e6:	cli    
   14000c6e7:	out    dx,eax
   14000c6e8:	rex.R sbb eax,0xf9b78d4e
   14000c6ee:	sahf   
   14000c6ef:	div    DWORD PTR [rdi]
   14000c6f1:	mov    eax,0xb12a35ef
   14000c6f6:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000c6f7:	rex.WXB cld 
   14000c6f9:	rex.RB mov r15d,0xb6600aae
   14000c6ff:	sbb    DWORD PTR [rbp+0x3e7df7c5],edx
   14000c705:	idiv   ecx
   14000c707:	rex.RXB jns 0x14000c704
   14000c70a:	stc    
   14000c70b:	sub    ecx,DWORD PTR [rsp+rcx*2-0x23]
   14000c70f:	rex.WXB movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14000c711:	ss rex.RB test eax,0xd6f80e3c
   14000c718:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000c719:	(bad)  
   14000c71a:	mov    cl,0xf6
   14000c71c:	pop    rbx
   14000c71d:	imul   edi,DWORD PTR [rbp+0x2a],0xffffff95
   14000c721:	push   rbx
   14000c722:	(bad)  
   14000c723:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000c724:	ja     0x14000c6b5
   14000c726:	loopne 0x14000c79f
   14000c728:	rep lods eax,DWORD PTR ds:[rsi]
   14000c72a:	frstor [rbx-0xb]
   14000c72d:	mov    ecx,0x1bca0546
   14000c732:	(bad)  
   14000c733:	in     eax,dx
   14000c734:	movabs eax,ds:0x2ea787b92bd21de9
   14000c73d:	(bad)  
   14000c73e:	cmc    
   14000c73f:	pop    rbp
   14000c740:	test   esi,ecx
   14000c742:	(bad)  
   14000c743:	and    al,0xd3
   14000c745:	lods   al,BYTE PTR ds:[rsi]
   14000c746:	rex
   14000c747:	rex.WB
   14000c748:	rex.X loopne 0x14000c7c2
   14000c74b:	or     DWORD PTR [rdx+0x367ec239],eax
   14000c751:	movabs eax,ds:0xd55aef3cf1be98f
   14000c75a:	push   0xffffffffaed0db9b
   14000c75f:	(bad)  
   14000c760:	(bad)  
   14000c761:	(bad)  
   14000c762:	xlat   BYTE PTR ds:[rbx]
   14000c763:	or     al,0x57
   14000c765:	xchg   esi,eax
   14000c766:	xor    dl,cl
   14000c768:	pop    rcx
   14000c769:	jno    0x14000c757
   14000c76b:	sahf   
   14000c76c:	adc    DWORD PTR [rip+0xffffffffaae8cd55],edi        # 0xeae994c7
   14000c772:	loopne 0x14000c7ed
   14000c774:	(bad)  
   14000c775:	mov    ebp,0x489b2f5e
   14000c77a:	(bad)  
   14000c77b:	imul   eax,DWORD PTR [rbp-0x6e],0xeb5da8a2
   14000c782:	(bad)  
   14000c784:	sub    al,0xbb
   14000c786:	div    DWORD PTR [rbx]
   14000c788:	(bad)  
   14000c789:	movsxd edi,DWORD PTR [rax]
   14000c78b:	sbb    al,0x2a
   14000c78d:	(bad)  
   14000c78e:	adc    eax,edx
   14000c790:	stc    
   14000c791:	loopne 0x14000c795
   14000c793:	(bad)  
   14000c794:	lock fldcw WORD PTR [rsi+0xd]
   14000c798:	rex.W movabs ds:0xd2cd257ff564d98a,al
   14000c7a2:	add    dl,BYTE PTR [rsi-0x2b668b5a]
   14000c7a8:	cmp    ah,BYTE PTR [rcx+0x7f230e91]
   14000c7ae:	mov    cl,0x2a
   14000c7b0:	and    bl,BYTE PTR [rdx-0x5be3153c]
   14000c7b6:	and    al,0x49
   14000c7b8:	jl     0x14000c794
   14000c7ba:	pop    rbp
   14000c7bb:	lahf   
   14000c7bc:	sub    edx,DWORD PTR [rdi+0x55]
   14000c7bf:	rcl    BYTE PTR [rcx+rbp*4+0x54],0x2
   14000c7c4:	shr    BYTE PTR [rcx],cl
   14000c7c6:	mov    cl,0x26
   14000c7c8:	rex.WX (bad) 
   14000c7ca:	jge    0x14000c83a
   14000c7cc:	xlat   BYTE PTR ds:[rbx]
   14000c7cd:	(bad)  
   14000c7ce:	outs   dx,BYTE PTR ds:[rsi]
   14000c7cf:	cli    
   14000c7d0:	pop    rsp
   14000c7d1:	rex.WX imul rsp,QWORD PTR [rbx+0x19],0x5e9be9be
   14000c7d9:	ret    
   14000c7da:	rex.WRXB (bad) 
   14000c7dc:	fcomp  DWORD PTR [rdi-0x20]
   14000c7df:	mov    ebx,0xb29b62ff
   14000c7e4:	ja     0x14000c7ff
   14000c7e6:	lods   al,BYTE PTR ds:[rsi]
   14000c7e7:	shr    DWORD PTR [rbx],1
   14000c7e9:	push   rcx
   14000c7ea:	retf   
   14000c7eb:	sub    DWORD PTR [rdi-0x42fdbcbd],esi
   14000c7f1:	pushf  
   14000c7f2:	cmp    bl,bl
   14000c7f4:	add    DWORD PTR [rcx-0x219df5b0],ebx
   14000c7fa:	cli    
   14000c7fb:	push   rax
   14000c7fc:	enter  0xbe07,0xfd
   14000c800:	mov    al,0x8a
   14000c802:	cwde   
   14000c803:	(bad)  
   14000c804:	test   BYTE PTR [rdi+0x45b3ddf4],0x3c
   14000c80b:	int    0xf3
   14000c80d:	mov    ecx,0xa9354cdb
   14000c812:	rex.RX movabs ds:0xff3edff0ce272bc1,eax
   14000c81c:	cmp    al,0x22
   14000c81e:	pop    rax
   14000c81f:	movabs al,ds:0x2af7c71d52a598de
   14000c828:	and    al,0xb1
   14000c82a:	mov    ah,0xfe
   14000c82c:	je     0x14000c833
   14000c82e:	stos   DWORD PTR es:[rdi],eax
   14000c82f:	fidiv  DWORD PTR gs:[rdi-0x22aa4046]
   14000c836:	cmp    eax,0xb0256ebd
   14000c83b:	fcmovnb st,st(7)
   14000c83d:	out    0x7c,al
   14000c83f:	addr32 mov ebx,0x115acc54
   14000c845:	test   eax,0x1e94dcca
   14000c84a:	lahf   
   14000c84b:	call   0x137ef4eaa
   14000c850:	push   rsp
   14000c851:	(bad)  
   14000c852:	mov    ecx,0xe7dcfcb3
   14000c857:	xor    bh,BYTE PTR [rdi+0x52]
   14000c85a:	push   0xffffffffffffffc2
   14000c85c:	(bad)  
   14000c85d:	adc    edx,DWORD PTR [rdx-0x2b022a8]
   14000c863:	rex.RB xor al,0xaa
   14000c866:	adc    DWORD PTR [rsi-0x5cece179],ebx
   14000c86c:	in     eax,0xc0
   14000c86e:	cmp    eax,0xeddba3cf
   14000c873:	fidivr DWORD PTR [rcx+rcx*4]
   14000c876:	mov    ecx,0x814a4b76
   14000c87b:	in     eax,0xdb
   14000c87d:	outs   dx,BYTE PTR ds:[rsi]
   14000c87e:	adc    BYTE PTR [rax+0x3],al
   14000c881:	mov    al,0x11
   14000c883:	pop    rbx
   14000c884:	or     BYTE PTR [rsi-0x78],0x99
   14000c888:	(bad)  
   14000c889:	cs mov esi,0x772fce9f
   14000c88f:	push   rcx
   14000c890:	and    edi,0x1d3a7479
   14000c896:	jmp    0x14000c8a1
   14000c898:	mov    eax,0x1be00d96
   14000c89d:	or     eax,0xce5a77fb
   14000c8a2:	adc    BYTE PTR [rip+0x385b7d28],cl        # 0x1785c45d0
   14000c8a8:	pop    rdx
   14000c8a9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000c8aa:	push   rsp
   14000c8ab:	test   BYTE PTR [rsi],0x35
   14000c8ae:	or     eax,0x25c64438
   14000c8b3:	or     BYTE PTR [rcx+rax*2-0x56c5ba37],dl
   14000c8ba:	fs iret 
   14000c8bc:	pop    rbx
   14000c8bd:	std    
   14000c8be:	mov    cl,0x56
   14000c8c0:	imul   ax,WORD PTR [rdx+rsi*4],0xffb6
   14000c8c5:	add    BYTE PTR [rbp-0x70],dh
   14000c8c8:	(bad)  
   14000c8c9:	mov    bl,0xb2
   14000c8cb:	and    al,0xc1
   14000c8cd:	and    ecx,DWORD PTR [rsi]
   14000c8cf:	(bad)  
   14000c8d0:	jns    0x14000c8c6
   14000c8d2:	icebp  
   14000c8d3:	sar    DWORD PTR [rdi+rsi*8+0x42765adb],cl
   14000c8da:	lea    ebx,[rbx]
   14000c8dc:	and    DWORD PTR [rsi+0x422d0313],esi
   14000c8e2:	rex.XB xchg BYTE PTR [r9-0x778bc5e3],spl
   14000c8e9:	jg     0x14000c8e4
   14000c8eb:	rex.WRXB (bad) 
   14000c8ed:	int3   
   14000c8ee:	int3   
   14000c8ef:	hlt    
   14000c8f0:	addr32 clc 
   14000c8f2:	(bad)  
   14000c8f3:	mov    edi,0xb47e9176
   14000c8f8:	rex.W push rsi
   14000c8fa:	jp     0x14000c966
   14000c8fc:	jnp    0x14000c87e
   14000c8fe:	xchg   ebx,eax
   14000c8ff:	in     eax,0x27
   14000c901:	test   esi,edi
   14000c903:	add    al,BYTE PTR [rbx-0x2211f1f4]
   14000c909:	loop   0x14000c8ba
   14000c90b:	jle    0x14000c901
   14000c90d:	and    BYTE PTR [rbx-0x4d],dh
   14000c910:	xchg   ebx,eax
   14000c911:	xchg   esi,eax
   14000c912:	lock scas eax,DWORD PTR es:[rdi]
   14000c914:	(bad)
   14000c917:	in     eax,dx
   14000c918:	out    0x37,al
   14000c91a:	rex.WB adc al,r14b
   14000c91d:	mov    edi,0x7cdab569
   14000c923:	out    0xb3,al
   14000c925:	(bad)  
   14000c926:	mov    bl,0xb6
   14000c928:	push   rbp
   14000c929:	(bad)  
   14000c92a:	iret   
   14000c92b:	fdivr  QWORD PTR [rsi]
   14000c92d:	rex.WX xchg rbp,rax
   14000c92f:	xor    DWORD PTR [rdx-0x5ffd5660],eax
   14000c935:	mov    WORD PTR [rbx],ss
   14000c937:	rex.X mov WORD PTR [rsi],?
   14000c93a:	out    0x88,al
   14000c93c:	(bad)  
   14000c93d:	movabs al,ds:0x859f5411a120e9b0
   14000c946:	dec    BYTE PTR [rcx-0x3a]
   14000c949:	add    al,0xe0
   14000c94b:	fadd   DWORD PTR [rsi-0x30]
   14000c94e:	out    dx,eax
   14000c94f:	out    dx,al
   14000c950:	rex.W sti 
   14000c952:	imul   ebx,ebp,0xffffffd8
   14000c955:	xor    bl,bh
   14000c957:	xor    al,0x4
   14000c959:	pop    rax
   14000c95a:	adc    al,BYTE PTR [rsi+0x10]
   14000c95d:	xchg   DWORD PTR [rip+0x28352e0e],edi        # 0x16835f771
   14000c963:	xchg   edi,eax
   14000c964:	rex.WXB
   14000c965:	rex.W fstp DWORD PTR [rdi]
   14000c968:	jmp    0xc5d38984
   14000c96d:	mov    cl,0x89
   14000c96f:	in     al,0xda
   14000c971:	fimul  DWORD PTR [rsi+0x6f]
   14000c974:	clc    
   14000c975:	lea    ebp,[rbx+rdi*4+0x41]
   14000c979:	add    BYTE PTR [rcx],al
   14000c97b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c97c:	xor    BYTE PTR [rbp+rsi*2+0x74],dl
   14000c980:	ds push rcx
   14000c982:	test   eax,eax
   14000c984:	cbw    
   14000c986:	(bad)  
   14000c987:	jg     0x14000c9a2
   14000c989:	fs push rsi
   14000c98b:	movabs al,ds:0xd3bb9d14d06f5e2b
   14000c994:	(bad)  
   14000c995:	sbb    ebx,ecx
   14000c997:	pop    rsi
   14000c998:	mov    ah,0x2f
   14000c99a:	mov    DWORD PTR [rbx+0x35],esp
   14000c99d:	jmp    0x14000c9ce
   14000c99f:	or     BYTE PTR [rcx+riz*2+0xf],dl
   14000c9a3:	cdq    
   14000c9a4:	xchg   BYTE PTR [rdi-0x151f6106],ah
   14000c9aa:	pop    rdx
   14000c9ab:	add    dh,BYTE PTR [rdx+0x5a56064c]
   14000c9b1:	movabs ds:0x22928825e4da5694,al
   14000c9ba:	pop    rdx
   14000c9bb:	or     bl,BYTE PTR [rdx+0x2e339375]
   14000c9c1:	rex.WX adc rbp,QWORD PTR [rax+0x44]
   14000c9c5:	pop    rdx
   14000c9c6:	retf   0x7f09
   14000c9c9:	xchg   edx,eax
   14000c9ca:	scas   eax,DWORD PTR es:[rdi]
   14000c9cb:	ds mov esi,0xf2fd2fcd
   14000c9d1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000c9d2:	imul   esi,DWORD PTR [rbp+0x172a16da],0x6a76da19
   14000c9dc:	scas   al,BYTE PTR es:[rdi]
   14000c9dd:	add    al,0x8e
   14000c9df:	movabs ds:0x3f18d8d8cfbf7e88,al
   14000c9e8:	hlt    
   14000c9e9:	mov    bh,0xdf
   14000c9eb:	(bad)  
   14000c9ec:	(bad)  
   14000c9ee:	ror    DWORD PTR [rcx],0x1a
   14000c9f1:	in     eax,0xf3
   14000c9f3:	and    BYTE PTR [rbx+0x4d],ah
   14000c9f6:	hlt    
   14000c9f7:	rex.RX
   14000c9f8:	repnz movabs ds:0x63b2bf7a97f4add6,eax
   14000ca02:	xor    al,0x6b
   14000ca04:	sbb    eax,0x153de3be
   14000ca09:	(bad)  
   14000ca0a:	mov    eax,0x724ad17f
   14000ca0f:	mov    bh,0x90
   14000ca11:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000ca12:	sub    ebp,ecx
   14000ca14:	fnstsw WORD PTR [rbp+0x2e]
   14000ca17:	rex.X mov BYTE PTR [rdx-0x73468d78],spl
   14000ca1e:	out    dx,eax
   14000ca1f:	sti    
   14000ca20:	cmp    al,0xf2
   14000ca22:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000ca23:	(bad)  
   14000ca24:	js     0x14000ca1c
   14000ca26:	call   0x183f25755
   14000ca2b:	xchg   esp,eax
   14000ca2c:	stos   DWORD PTR es:[rdi],eax
   14000ca2d:	push   rbx
   14000ca2e:	xchg   esp,eax
   14000ca2f:	sub    edx,DWORD PTR [rbx]
   14000ca31:	mov    al,BYTE PTR [rcx]
   14000ca33:	push   0xffffffffffffffa9
   14000ca35:	sbb    eax,edi
   14000ca37:	push   rdx
   14000ca38:	test   DWORD PTR [rdi+0x252bb0ae],0xb1d29691
   14000ca42:	out    dx,al
   14000ca43:	push   rbx
   14000ca44:	in     eax,0x6b
   14000ca46:	(bad)  
   14000ca47:	xchg   ecx,eax
   14000ca48:	cld    
   14000ca49:	rex.WRX lahf 
   14000ca4b:	imul   ebp,DWORD PTR [rcx-0x64],0xffffff97
   14000ca4f:	lock mov cl,0x73
   14000ca52:	rex.WR adc al,0x27
   14000ca55:	(bad)  
   14000ca56:	ds out 0x7a,al
   14000ca59:	jp     0x14000cab6
   14000ca5b:	adc    al,0x4b
   14000ca5d:	cmp    eax,0x9ea4799
   14000ca62:	cmp    eax,0x32486a29
   14000ca67:	out    dx,eax
   14000ca68:	jmp    0x14000cab4
   14000ca6a:	jnp    0x14000ca15
   14000ca6c:	jmp    0x14000ca6f
   14000ca6e:	push   0x3
   14000ca70:	(bad)  
   14000ca71:	add    al,0xc8
   14000ca73:	(bad)  
   14000ca74:	xchg   ebx,eax
   14000ca75:	jrcxz  0x14000ca78
   14000ca77:	mov    dl,0xc0
   14000ca79:	add    eax,0x9e419a68
   14000ca7e:	cmp    ecx,DWORD PTR [rax]
   14000ca80:	ret    
   14000ca81:	(bad)  
   14000ca82:	sbb    edi,edx
   14000ca84:	loopne 0x14000cae5
   14000ca86:	fisttp DWORD PTR [ebp-0x42bccfef]
   14000ca8d:	(bad)  
   14000ca8e:	movabs eax,ds:0x364772b49f23fcf3
   14000ca97:	jge    0x14000caf6
   14000ca99:	cmp    eax,0x8ddb68be
   14000ca9e:	sahf   
   14000ca9f:	push   rbx
   14000caa0:	mov    ah,0xfd
   14000caa2:	pop    rdx
   14000caa3:	push   0xffffffffa2681140
   14000caa8:	push   0x1
   14000caaa:	test   al,0x8d
   14000caac:	rex.W push rsp
   14000caae:	and    eax,0x6c6c9020
   14000cab3:	or     al,0x50
   14000cab5:	(bad)  
   14000cab6:	add    BYTE PTR [rcx+0x61a2042d],dl
   14000cabc:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000cabd:	xor    eax,0xafd15955
   14000cac2:	or     BYTE PTR [rbx+0x4a],cl
   14000cac5:	(bad)  
   14000cac6:	or     eax,0x182d14c8
   14000cacb:	adc    eax,0x1c830a55
   14000cad0:	(bad)
   14000cad4:	and    dh,dh
   14000cad6:	repz retf 
   14000cad8:	mov    edi,0xe18312fe
   14000cadd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000cade:	clc    
   14000cadf:	imul   edi,DWORD PTR [rdi],0xfffffff8
   14000cae2:	pop    rbp
   14000cae3:	mov    WORD PTR [rdi-0x45fda671],cs
   14000cae9:	pop    rsi
   14000caea:	sub    eax,DWORD PTR [rdx+0x7]
   14000caed:	xchg   BYTE PTR [rax],cl
   14000caef:	fwait
   14000caf0:	int    0x26
   14000caf2:	jg     0x14000caef
   14000caf4:	jg     0x14000cb70
   14000caf6:	(bad)  
   14000caf7:	(bad)  
   14000caf8:	cli    
   14000caf9:	and    edi,esp
   14000cafb:	(bad)  
   14000cafc:	iret   
   14000cafd:	popf   
   14000cafe:	movabs ds:0xdc05f646fd8fdfd5,eax
   14000cb07:	and    BYTE PTR [rcx],ah
   14000cb09:	gs or  al,0xf4
   14000cb0c:	cld    
   14000cb0d:	cwde   
   14000cb0e:	(bad)  
   14000cb0f:	fdivr  QWORD PTR [rdi]
   14000cb11:	in     al,0xe3
   14000cb13:	jg     0x14000cb0e
   14000cb15:	jne    0x14000cb2f
   14000cb17:	xchg   edi,eax
   14000cb18:	fisttp WORD PTR [rsi+0x25]
   14000cb1b:	scas   al,BYTE PTR es:[rdi]
   14000cb1c:	mov    esi,DWORD PTR [rsi-0x2abf8c67]
   14000cb22:	repnz cmp edi,esi
   14000cb25:	loop   0x14000cb70
   14000cb27:	ds test eax,0xa8e60871
   14000cb2e:	(bad)  
   14000cb2f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000cb30:	sub    BYTE PTR [rdi-0x39],dl
   14000cb33:	shr    BYTE PTR [rbx],0xd9
   14000cb36:	and    al,0x2c
   14000cb38:	outs   dx,BYTE PTR ds:[rsi]
   14000cb39:	adc    ebx,edx
   14000cb3b:	rex.WB loop 0x14000cafa
   14000cb3e:	and    DWORD PTR [rcx+0x5c],ebp
   14000cb41:	mov    esi,0x23693667
   14000cb46:	popf   
   14000cb47:	movsxd esi,DWORD PTR [rax]
   14000cb49:	xchg   esp,eax
   14000cb4a:	or     al,BYTE PTR [rip+0xffffffffe35a8cb8]        # 0x1235b5808
   14000cb50:	xor    DWORD PTR [rdi+rdx*2],edi
   14000cb53:	and    BYTE PTR [rcx+0x43],bl
   14000cb56:	movabs ds:0xa0e8191bb125523b,al
   14000cb5f:	movabs eax,ds:0xcdd0cd17dfd10a2c
   14000cb68:	lahf   
   14000cb69:	sub    DWORD PTR [rdi],eax
   14000cb6b:	es sti 
   14000cb6d:	xchg   esp,eax
   14000cb6e:	std    
   14000cb6f:	(bad)  
   14000cb70:	mov    BYTE PTR [rax],0x98
   14000cb73:	out    dx,eax
   14000cb74:	sub    ebp,DWORD PTR [rcx]
   14000cb76:	xchg   ebp,eax
   14000cb77:	or     esi,DWORD PTR [rax]
   14000cb79:	(bad)  
   14000cb7a:	jle    0x14000cb71
   14000cb7c:	cli    
   14000cb7d:	stc    
   14000cb7e:	xchg   ecx,eax
   14000cb7f:	(bad)  
   14000cb80:	mov    ecx,0x46d76d05
   14000cb85:	sar    BYTE PTR [rbp+rax*1-0x2b0c2c2d],0x95
   14000cb8d:	jnp    0x14000cbbf
   14000cb8f:	rex.WRB
   14000cb90:	data16 (bad) 
   14000cb92:	hlt    
   14000cb93:	fs xchg ebx,eax
   14000cb95:	or     ecx,esi
   14000cb97:	xor    eax,0xcddbe608
   14000cb9c:	sbb    ch,dh
   14000cb9e:	jbe    0x14000cbab
   14000cba0:	sti    
   14000cba1:	ja     0x14000cb7d
   14000cba3:	addr32 (bad) 
   14000cba5:	push   0x72aac71c
   14000cbaa:	mov    cl,0x26
   14000cbac:	push   rax
   14000cbad:	or     DWORD PTR [rsi+0x5aeaf192],esi
   14000cbb3:	(bad)  
   14000cbb4:	cmp    al,0xdf
   14000cbb6:	(bad)  
   14000cbb7:	adc    ah,0x58
   14000cbba:	push   0xfffffffff703ada4
   14000cbbf:	pop    rbp
   14000cbc0:	(bad)  
   14000cbc1:	xlat   BYTE PTR ds:[rbx]
   14000cbc2:	or     edx,edx
   14000cbc4:	test   al,0x7
   14000cbc6:	out    0xda,al
   14000cbc8:	sar    BYTE PTR [rcx],cl
   14000cbca:	push   rsi
   14000cbcb:	or     BYTE PTR [rbp+0x10],ah
   14000cbce:	adc    al,0x6a
   14000cbd0:	movabs ds:0xffe5f83b84821490,al
   14000cbd9:	jl     0x14000cb5d
   14000cbdb:	lods   eax,DWORD PTR ds:[rsi]
   14000cbdc:	lods   eax,DWORD PTR ds:[rsi]
   14000cbdd:	inc    esp
   14000cbdf:	pop    rdi
   14000cbe0:	sti    
   14000cbe1:	ror    DWORD PTR [rdi],0xb0
   14000cbe4:	mov    eax,0x79e780b8
   14000cbe9:	mov    edx,0x2dced312
   14000cbee:	(bad)  
   14000cbef:	pop    rbp
   14000cbf0:	int3   
   14000cbf1:	and    edx,DWORD PTR ss:[rcx+0x7f2ad5ab]
   14000cbf8:	in     eax,dx
   14000cbf9:	scas   eax,DWORD PTR es:[rdi]
   14000cbfa:	mov    esp,0x4be54a93
   14000cbff:	cld    
   14000cc00:	mov    edi,DWORD PTR [rdi-0x4d]
   14000cc03:	int3   
   14000cc04:	jbe    0x14000cbf5
   14000cc06:	rex
   14000cc07:	rex.WX
   14000cc08:	rex.WR (bad) 
   14000cc0a:	sub    BYTE PTR [rax-0x6f7555dc],bl
   14000cc10:	data16 add bh,bl
   14000cc13:	mov    bx,0xfc7c
   14000cc17:	mov    ebx,0x33d99816
   14000cc1c:	xchg   esi,eax
   14000cc1d:	shl    edi,1
   14000cc1f:	pop    rbp
   14000cc20:	adc    eax,0xbadbaf20
   14000cc25:	sub    eax,0x9c455449
   14000cc2a:	test   eax,0xb7b629a9
   14000cc2f:	pop    rbx
   14000cc30:	cld    
   14000cc31:	out    dx,al
   14000cc32:	addr32 (bad) 
   14000cc34:	ins    DWORD PTR es:[edi],dx
   14000cc36:	stos   DWORD PTR es:[rdi],eax
   14000cc37:	(bad)  
   14000cc38:	hlt    
   14000cc39:	in     al,dx
   14000cc3a:	adc    dl,BYTE PTR [rbp+0x5f8114ca]
   14000cc40:	xlat   BYTE PTR ds:[rbx]
   14000cc41:	mov    ecx,0xe063a414
   14000cc46:	jae    0x14000cca8
   14000cc48:	ja     0x14000cc2c
   14000cc4a:	sbb    dh,dl
   14000cc4c:	int3   
   14000cc4d:	mov    ebx,0x718abe41
   14000cc52:	push   0x7b
   14000cc54:	(bad)  
   14000cc55:	push   rsp
   14000cc56:	fwait
   14000cc57:	(bad)  
   14000cc58:	adc    al,0xd4
   14000cc5a:	(bad)  
   14000cc5b:	and    eax,0xc30c3a42
   14000cc60:	fsubr  QWORD PTR [rbx]
   14000cc62:	xchg   esp,ebp
   14000cc64:	jne    0x14000cbf6
   14000cc66:	(bad)  
   14000cc67:	nop
   14000cc68:	fisubr DWORD PTR [rbp+0x5e763868]
   14000cc6e:	adc    eax,0x8d0836b0
   14000cc73:	adc    al,0x62
   14000cc75:	adc    eax,0x50461809
   14000cc7a:	cs (bad) 
   14000cc7c:	int3   
   14000cc7d:	(bad)  
   14000cc7e:	xor    al,0x9
   14000cc80:	jne    0x14000ccd4
   14000cc82:	xchg   esp,eax
   14000cc83:	cmp    al,0xfa
   14000cc85:	add    al,0x15
   14000cc87:	(bad)  
   14000cc88:	loope  0x14000cc44
   14000cc8a:	add    BYTE PTR [rbp-0x748f6911],bl
   14000cc90:	adc    eax,DWORD PTR [rcx+0x8537698]
   14000cc96:	rex push 0x9
   14000cc99:	addr32 (bad) 
   14000cc9b:	std    
   14000cc9c:	xor    r15,QWORD PTR [r10]
   14000cc9f:	mov    edi,0xc046565a
   14000cca4:	push   rdx
   14000cca5:	rex.WB stc 
   14000cca7:	(bad)  
   14000cca8:	xchg   ebx,eax
   14000ccaa:	loope  0x14000ccb4
   14000ccac:	icebp  
   14000ccad:	out    dx,al
   14000ccae:	rex.R fsub st,st(6)
   14000ccb1:	cld    
   14000ccb2:	fnsave [rdx]
   14000ccb4:	add    edi,esi
   14000ccb6:	mov    esp,0xe3a2e5a2
   14000ccbb:	fadd   QWORD PTR [rcx-0x14]
   14000ccbe:	or     DWORD PTR [rcx-0x3d],esp
   14000ccc1:	mov    esi,0xa9509265
   14000ccc6:	push   rsi
   14000ccc7:	mov    BYTE PTR [rbx],dl
   14000ccc9:	leave  
   14000ccca:	(bad)  
   14000cccb:	(bad)  
   14000cccc:	add    DWORD PTR [rax+0x4d],edi
   14000cccf:	add    BYTE PTR [rcx+riz*4],bh
   14000ccd2:	push   rdx
   14000ccd3:	(bad)  
   14000ccd4:	and    DWORD PTR [rsp+riz*8+0x69],esi
   14000ccd8:	in     al,dx
   14000ccd9:	(bad)  
   14000ccda:	stc    
   14000ccdb:	stos   BYTE PTR es:[rdi],al
   14000ccdc:	(bad)  
   14000ccdd:	pop    rsp
   14000ccde:	imul   esp,DWORD PTR [rsi],0xd23d94ed
   14000cce4:	mov    cl,al
   14000cce6:	mov    WORD PTR [rdx+0x2],cs
   14000cce9:	js     0x14000cd29
   14000cceb:	cmp    BYTE PTR ss:[rax+0x2195e104],cl
   14000ccf2:	cmp    ah,cl
   14000ccf4:	outs   dx,DWORD PTR ds:[rsi]
   14000ccf5:	cld    
   14000ccf6:	(bad)  
   14000ccf7:	xor    ch,BYTE PTR [rdi+0x7e79fc9c]
   14000ccfd:	call   0x1479149f1
   14000cd02:	pop    rsi
   14000cd03:	ja     0x14000cd24
   14000cd05:	xchg   ebp,eax
   14000cd06:	(bad)
   14000cd0a:	neg    BYTE PTR [rbx+0x30]
   14000cd0d:	mov    dl,0x9e
   14000cd0f:	push   QWORD PTR [rip+0xffffffffb972bb46]        # 0xf973885b
   14000cd15:	int3   
   14000cd16:	(bad)  
   14000cd17:	ds cli 
   14000cd19:	push   rsi
   14000cd1a:	xchg   edx,eax
   14000cd1b:	cmp    cl,ah
   14000cd1d:	pop    rdi
   14000cd1e:	dec    ah
   14000cd20:	pop    rcx
   14000cd21:	pop    rdx
   14000cd22:	std    
   14000cd23:	add    ebp,DWORD PTR [rcx]
   14000cd25:	rcr    DWORD PTR [rax],1
   14000cd27:	(bad)  
   14000cd28:	movabs al,ds:0xa3bdf780eaf50246
   14000cd31:	(bad)  
   14000cd32:	pop    rbx
   14000cd33:	fidivr WORD PTR [rax-0x464ded31]
   14000cd39:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000cd3a:	fwait
   14000cd3b:	shl    DWORD PTR [rsi],0xaf
   14000cd3e:	out    0xbb,eax
   14000cd40:	sub    eax,0xb56a430c
   14000cd45:	sbb    al,BYTE PTR [rcx+0x10]
   14000cd48:	lock jnp 0x14000ccea
   14000cd4b:	stc    
   14000cd4c:	sub    cl,bh
   14000cd4e:	(bad)  
   14000cd4f:	(bad)  [rsp+rbp*2-0x6]
   14000cd53:	xor    eax,0xf8932a94
   14000cd58:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000cd59:	mov    DWORD PTR es:[rdx+rcx*2],edx
   14000cd5d:	je     0x14000cd09
   14000cd5f:	pop    QWORD PTR [rdx+0x2babfab5]
   14000cd65:	(bad)  
   14000cd66:	sub    eax,0x834e76f7
   14000cd6b:	sub    ebx,DWORD PTR [rbp-0x5c80773]
   14000cd71:	mov    ebp,0xb9c84933
   14000cd76:	xchg   al,cl
   14000cd78:	adc    DWORD PTR [rbx+0x7a],edi
   14000cd7b:	pushf  
   14000cd7c:	rex.WXB cmc 
   14000cd7e:	cmp    DWORD PTR [rcx],esp
   14000cd80:	and    al,0xdc
   14000cd82:	in     eax,dx
   14000cd83:	in     al,0x9a
   14000cd85:	(bad)  
   14000cd86:	or     al,BYTE PTR [rdx+0x1b]
   14000cd89:	adc    edx,DWORD PTR [rbp-0x3516e8b6]
   14000cd8f:	enter  0x50e1,0x32
   14000cd93:	fld1   
   14000cd95:	xor    DWORD PTR [rdi],edi
   14000cd97:	(bad)  
   14000cd98:	rex.RXB sbb BYTE PTR [r14+0x2c68adc8],r12b
   14000cd9f:	mov    edx,0xfb9da753
   14000cda4:	ja     0x14000cd27
   14000cda6:	push   rdi
   14000cda7:	bnd ja 0x14000cd67
   14000cdaa:	adc    eax,0xa008376d
   14000cdaf:	add    al,0x4a
   14000cdb1:	cli    
   14000cdb2:	add    eax,0x9307a041
   14000cdb7:	sub    DWORD PTR [rdx],ebx
   14000cdb9:	(bad)  
   14000cdba:	(bad)  
   14000cdbb:	jb     0x14000cd93
   14000cdbd:	push   rbx
   14000cdbe:	jrcxz  0x14000cd60
   14000cdc0:	mov    cl,0x76
   14000cdc2:	mov    edx,0x8888b630
   14000cdc7:	mov    ebx,edx
   14000cdc9:	outs   dx,BYTE PTR ds:[rsi]
   14000cdca:	cwde   
   14000cdcb:	ror    BYTE PTR [rbp-0x8a06462],0xb5
   14000cdd2:	pop    rdi
   14000cdd3:	rex.WRXB or r12b,BYTE PTR [r9+0x56a98067]
   14000cdda:	scas   al,BYTE PTR es:[rdi]
   14000cddb:	push   rsp
   14000cddc:	push   0xffffffffb76cbab5
   14000cde1:	shl    bh,cl
   14000cde3:	jbe    0x14000cd8a
   14000cde5:	xchg   ecx,eax
   14000cde6:	mov    al,BYTE PTR [rcx]
   14000cde8:	jo     0x14000ce0f
   14000cdea:	cmp    eax,0xecc8199a
   14000cdef:	mov    edx,0x4301d574
   14000cdf4:	sub    al,0xe
   14000cdf6:	pop    rdx
   14000cdf7:	mov    BYTE PTR [rbx],dl
   14000cdf9:	lea    edi,[rdx]
   14000cdfb:	xor    al,0x12
   14000cdfd:	rex.W shl BYTE PTR [rbx-0x3bc5a07e],0x57
   14000ce05:	(bad)  
   14000ce06:	cmp    ecx,edi
   14000ce08:	repnz (bad) 
   14000ce0b:	adc    eax,0xde87f87e
   14000ce10:	retf   
   14000ce11:	mov    ebx,0x5b16fddf
   14000ce16:	jns    0x14000ce41
   14000ce18:	call   FWORD PTR [rsi+0x36fce5f9]
   14000ce1e:	xor    DWORD PTR [rsi+rax*1-0x7d],0x1
   14000ce23:	adc    r8b,sil
   14000ce26:	jge    0x14000ce47
   14000ce28:	jg     0x14000ce45
   14000ce2a:	xchg   edx,eax
   14000ce2b:	(bad)  
   14000ce2c:	icebp  
   14000ce2d:	(bad)  
   14000ce2e:	dec    ch
   14000ce30:	pop    rcx
   14000ce31:	cmp    al,bl
   14000ce33:	add    ebx,eax
   14000ce35:	movabs al,ds:0xc1f771113cd92d20
   14000ce3e:	ss jg  0x14000ce26
   14000ce41:	movsxd esi,edi
   14000ce43:	push   rcx
   14000ce44:	test   eax,0xbb4e6c94
   14000ce49:	and    bl,BYTE PTR [rbx+0x16764eca]
   14000ce4f:	ret    
   14000ce50:	and    al,0x26
   14000ce52:	(bad)  
   14000ce53:	(bad)  
   14000ce54:	cmp    edx,edi
   14000ce56:	ret    0x3e09
   14000ce59:	test   DWORD PTR [rbp+0x3cfe9097],0x4a1eeae5
   14000ce63:	xchg   ebp,eax
   14000ce64:	jno    0x14000ce76
   14000ce66:	sbb    DWORD PTR [rsi+0x54fa68f9],0xa5a78813
   14000ce70:	xor    al,0x9e
   14000ce72:	rex.WXB mov r10b,0x39
   14000ce75:	jrcxz  0x14000ce15
   14000ce77:	xchg   dh,ch
   14000ce79:	test   eax,0x88846258
   14000ce7e:	in     eax,dx
   14000ce7f:	jno    0x14000ceef
   14000ce81:	lods   al,BYTE PTR ds:[rsi]
   14000ce82:	rex cli 
   14000ce84:	or     eax,0x2679784
   14000ce89:	jns    0x14000ce3f
   14000ce8b:	loope  0x14000ce9d
   14000ce8d:	ins    BYTE PTR es:[rdi],dx
   14000ce8e:	out    0x30,al
   14000ce90:	imul   edi,DWORD PTR [rdi+0x25],0xd8e14b10
   14000ce97:	(bad)  
   14000ce98:	add    al,0x32
   14000ce9a:	xchg   ecx,eax
   14000ce9b:	xchg   esp,eax
   14000ce9c:	std    
   14000ce9d:	(bad)  
   14000ce9e:	sahf   
   14000ce9f:	xchg   edi,eax
   14000cea0:	stos   BYTE PTR es:[rdi],al
   14000cea1:	(bad)  
   14000cea2:	cmp    ecx,DWORD PTR [rbp-0x294dc32f]
   14000cea8:	ins    DWORD PTR es:[rdi],dx
   14000cea9:	xchg   ebp,eax
   14000ceaa:	fnsetpm(287 only) 
   14000ceac:	(bad)  
   14000cead:	fmul   QWORD PTR [rip+0xffffffffc31ba802]        # 0x1031c76b5
   14000ceb3:	pop    rax
   14000ceb4:	mov    ecx,0x6603d26c
   14000ceb9:	adc    DWORD PTR [rsp+rdx*2-0x58],0x6f
   14000cebe:	add    DWORD PTR ss:[rsi+rax*2-0x45],esp
   14000cec3:	sub    al,BYTE PTR [rax-0x280499bf]
   14000cec9:	movsxd ebx,ecx
   14000cecb:	mov    edi,0x16bfc49e
   14000ced0:	adc    eax,eax
   14000ced2:	call   0x19744fd7f
   14000ced7:	cmp    ebp,DWORD PTR [rcx+0x3d9ccb94]
   14000cedd:	ja     0x14000ce60
   14000cedf:	outs   dx,BYTE PTR ds:[rsi]
   14000cee0:	(bad)  
   14000cee1:	mov    cl,0x28
   14000cee3:	fnstenv [rbx]
   14000cee5:	rex.X enter 0x6140,0x99
   14000ceea:	pop    rsi
   14000ceeb:	retf   
   14000ceec:	or     BYTE PTR [rbx+rbp*1],ah
   14000ceef:	fnstenv [rcx-0x77]
   14000cef2:	(bad)  
   14000cef3:	(bad)  
   14000cef5:	movabs al,ds:0x24e90f7f229b7485
   14000cefe:	ficom  DWORD PTR [rax+0x27c27878]
   14000cf04:	test   al,0xec
   14000cf06:	in     eax,0xa5
   14000cf08:	push   rbx
   14000cf09:	and    eax,0xfc8ffefe
   14000cf0e:	and    DWORD PTR [rdi-0x9],edi
   14000cf11:	loop   0x14000cf3d
   14000cf13:	(bad)  
   14000cf14:	stc    
   14000cf15:	lock jnp 0x14000cf81
   14000cf18:	xor    al,0xea
   14000cf1a:	test   BYTE PTR [rcx+0x38],ah
   14000cf1d:	push   rdx
   14000cf1e:	ins    BYTE PTR es:[rdi],dx
   14000cf1f:	jb     0x14000cf48
   14000cf21:	fs nop
   14000cf23:	(bad)  
   14000cf24:	add    QWORD PTR [rsi+r15*4],0xffffffffffffffff
   14000cf29:	jrcxz  0x14000cf9a
   14000cf2b:	movabs ds:0xa79fdfea7e63ffdf,eax
   14000cf34:	(bad)  
   14000cf35:	out    dx,al
   14000cf36:	(bad)  
   14000cf37:	out    0x15,al
   14000cf39:	adc    BYTE PTR [rdx+0x1f3ea999],al
   14000cf3f:	std    
   14000cf40:	rcr    BYTE PTR [rbx+rdi*2],1
   14000cf43:	out    0x9b,eax
   14000cf45:	xchg   esi,eax
   14000cf46:	loope  0x14000cf5c
   14000cf48:	adc    DWORD PTR [rsp+rcx*4],edi
   14000cf4b:	(bad)  
   14000cf4c:	std    
   14000cf4d:	pop    di
   14000cf4f:	sbb    BYTE PTR [rsi-0x4d313134],al
   14000cf55:	mov    ch,0xdd
   14000cf57:	out    0x53,al
   14000cf59:	mov    edi,0xd79728f3
   14000cf5e:	stos   BYTE PTR es:[rdi],al
   14000cf5f:	int3   
   14000cf60:	cs in  al,dx
   14000cf62:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000cf63:	push   rsp
   14000cf64:	(bad)  
   14000cf65:	and    ecx,DWORD PTR [rax]
   14000cf67:	stos   BYTE PTR es:[rdi],al
   14000cf68:	and    al,0x89
   14000cf6a:	(bad)  
   14000cf6b:	(bad)  
   14000cf6c:	out    0x48,al
   14000cf6e:	xor    edx,DWORD PTR [rsi+0x54]
   14000cf71:	(bad)  
   14000cf72:	test   eax,0xba773e88
   14000cf77:	mov    dl,0xea
   14000cf79:	movabs ds:0x93b4322dfd3f5e4c,eax
   14000cf82:	mov    eax,0x63d904aa
   14000cf87:	int    0x82
   14000cf89:	cmp    eax,0x41813216
   14000cf8e:	jp     0x14000cff6
   14000cf90:	fs (bad) 
   14000cf92:	sbb    eax,0xd597a828
   14000cf97:	dec    ebp
   14000cf99:	js     0x14000cfed
   14000cf9b:	jg     0x14000cf73
   14000cf9d:	cdqe   
   14000cf9f:	rex.W in eax,0xa
   14000cfa2:	rex.WR
   14000cfa3:	rex.X (bad) 
   14000cfa5:	sbb    ah,BYTE PTR [rcx]
   14000cfa7:	(bad)  
   14000cfa8:	(bad)  
   14000cfa9:	xchg   BYTE PTR [rbx],dh
   14000cfab:	(bad)  
   14000cfac:	(bad)  [rbx-0x24]
   14000cfaf:	rex.X cmp dil,BYTE PTR [rcx-0x1be7e98a]
   14000cfb6:	(bad)  
   14000cfb7:	fimul  WORD PTR [rdx-0x7fe4d44a]
   14000cfbd:	jmp    0x14000cfbd
   14000cfbf:	xor    dl,BYTE PTR [rax]
   14000cfc1:	fbld   TBYTE PTR [rip+0xfffffffff77efcf4]        # 0x1377fccbb
   14000cfc7:	cmp    al,0xb7
   14000cfc9:	pop    rbp
   14000cfca:	rex.WXB jp 0x14000cfac
   14000cfcd:	test   al,0x3e
   14000cfcf:	pop    rdi
   14000cfd0:	(bad)  
   14000cfd1:	outs   dx,BYTE PTR ds:[rsi]
   14000cfd2:	xchg   esp,eax
   14000cfd3:	imul   esp,DWORD PTR [rsi+rbx*4+0xf],0x94ac4b52
   14000cfdb:	(bad)  
   14000cfdc:	add    eax,0xcd1abaf8
   14000cfe1:	mov    ecx,0x76e91773
   14000cfe6:	adc    esi,eax
   14000cfe8:	rex.R
   14000cfe9:	es out dx,eax
   14000cfeb:	xchg   BYTE PTR [rdx-0x69],dl
   14000cfee:	mov    ch,0x51
   14000cff0:	retf   0x7348
   14000cff3:	test   eax,0x7a48d988
   14000cff8:	mov    bl,0xcd
   14000cffa:	xor    BYTE PTR [rbp-0x4d0aaf6c],dl
   14000d000:	je     0x14000cfd3
   14000d002:	rex.XB (bad) 
   14000d004:	(bad)  
   14000d005:	rex.RB
   14000d006:	rex.R ins DWORD PTR es:[rdi],dx
   14000d008:	loop   0x14000d01a
   14000d00a:	cmp    al,0x2
   14000d00c:	(bad)  
   14000d00d:	movabs al,ds:0xfd1f8966eae69e5c
   14000d016:	icebp  
   14000d017:	(bad)  
   14000d018:	cmp    BYTE PTR [rdi+0x7e],bh
   14000d01b:	cmp    DWORD PTR [rdi-0x74414803],0xffffffe9
   14000d022:	test   eax,0xf23cccc9
   14000d027:	popf   
   14000d028:	movabs al,ds:0xca9f18d7e637dbbf
   14000d031:	in     eax,0x32
   14000d033:	inc    ebx
   14000d035:	(bad)  
   14000d037:	sub    ebx,DWORD PTR [rbp-0x100ce012]
   14000d03d:	jle    0x14000d0a0
   14000d03f:	test   DWORD PTR [rcx+0x32],esp
   14000d042:	cmpps  xmm4,XMMWORD PTR [rbx-0x690671ae],0x87
   14000d04a:	add    al,0xdf
   14000d04c:	stc    
   14000d04d:	xchg   edi,eax
   14000d04e:	out    dx,al
   14000d04f:	(bad)  
   14000d050:	cmp    BYTE PTR [rsi+rcx*4],bl
   14000d053:	call   0x181bbbf53
   14000d058:	(bad)  
   14000d059:	stc    
   14000d05a:	(bad)  
   14000d05b:	sbb    eax,0xebd4870e
   14000d060:	jne    0x14000d08c
   14000d062:	xchg   ebp,eax
   14000d063:	or     bh,bh
   14000d065:	fucomip st,st(7)
   14000d067:	jle    0x14000cfea
   14000d069:	(bad)  
   14000d06a:	lahf   
   14000d06b:	outs   dx,DWORD PTR ds:[rsi]
   14000d06c:	rcr    DWORD PTR [rax],1
   14000d06e:	mov    ebx,0x279529b
   14000d073:	(bad)  
   14000d074:	sbb    BYTE PTR [rbx],ah
   14000d076:	mov    al,BYTE PTR [rax+0x8]
   14000d079:	xor    ecx,DWORD PTR [rdi+0x7b7d435f]
   14000d07f:	or     eax,0x64530961
   14000d084:	je     0x14000d083
   14000d086:	xor    al,0x60
   14000d088:	(bad)  
   14000d089:	jge    0x14000d0c6
   14000d08b:	rex.RB pushf 
   14000d08d:	xchg   BYTE PTR [rcx-0x141db60],cl
   14000d093:	mov    eax,0xf3cd9896
   14000d098:	(bad)  
   14000d099:	sbb    BYTE PTR [rdi-0x52fe2bb9],ah
   14000d09f:	push   rsi
   14000d0a0:	or     BYTE PTR [rbx-0x5b6416e6],ah
   14000d0a6:	and    edi,DWORD PTR [rip+0xffffffffe776f10d]        # 0x12777c1b9
   14000d0ac:	add    DWORD PTR [rcx+rdx*4-0xe],eax
   14000d0b0:	(bad)  
   14000d0b1:	or     al,0x87
   14000d0b3:	add    ecx,DWORD PTR [rsi]
   14000d0b5:	cs rex.WRB push r10
   14000d0b8:	cs xchg edi,eax
   14000d0ba:	rex.W pop rdx
   14000d0bc:	std    
   14000d0bd:	int3   
   14000d0be:	(bad)  
   14000d0bf:	jo     0x14000d0aa
   14000d0c1:	ret    0x6df4
   14000d0c4:	cmp    esi,r11d
   14000d0c7:	jge    0x14000d0a8
   14000d0c9:	idiv   DWORD PTR [rbp-0x49]
   14000d0cc:	jl     0x14000d0ec
   14000d0ce:	add    ah,bl
   14000d0d0:	(bad)  
   14000d0d1:	je     0x14000d133
   14000d0d3:	shl    edx,cl
   14000d0d5:	or     al,0x41
   14000d0d7:	ins    DWORD PTR es:[rdi],dx
   14000d0d8:	xor    esp,ecx
   14000d0da:	mov    edi,0x2c8f3b64
   14000d0df:	loope  0x14000d09a
   14000d0e1:	nop
   14000d0e2:	call   0x10e00754d
   14000d0e7:	rex.W cld 
   14000d0e9:	popf   
   14000d0ea:	ins    BYTE PTR es:[rdi],dx
   14000d0eb:	add    DWORD PTR [rsi-0x2e54ec11],edi
   14000d0f1:	push   0xffffffff92913f89
   14000d0f6:	mov    dl,0xef
   14000d0f8:	adc    eax,DWORD PTR [rsi+rdi*1]
   14000d0fb:	xchg   edi,eax
   14000d0fc:	cs scas eax,DWORD PTR es:[rdi]
   14000d0fe:	adc    esi,edi
   14000d100:	add    eax,0x31ca3554
   14000d105:	out    dx,eax
   14000d106:	sub    al,0x35
   14000d108:	add    edx,DWORD PTR [rax+0x1e6b4129]
   14000d10e:	loop   0x14000d158
   14000d110:	jg     0x14000d117
   14000d112:	adc    dh,BYTE PTR [rbx]
   14000d114:	or     al,0x81
   14000d116:	hlt    
   14000d117:	js     0x14000d145
   14000d119:	push   rcx
   14000d11a:	cdq    
   14000d11b:	movsxd esp,DWORD PTR [rbx+0x10]
   14000d11e:	(bad)  
   14000d11f:	rex.R jnp 0x14000d128
   14000d122:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d123:	push   rsp
   14000d124:	add    edi,DWORD PTR [rcx]
   14000d126:	or     BYTE PTR [rsp+rdi*4],bh
   14000d129:	test   al,0x49
   14000d12b:	mov    ebx,0xf0ff887f
   14000d130:	rex.WXB out 0xd9,eax
   14000d133:	fdiv   st(2),st
   14000d135:	adc    eax,0xfeffc1fe
   14000d13a:	adc    DWORD PTR [rsi+0x66],esp
   14000d13d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d13e:	ins    DWORD PTR es:[rdi],dx
   14000d13f:	adc    BYTE PTR [rbp-0x42],0x9f
   14000d143:	mov    esp,DWORD PTR [rax]
   14000d145:	jns    0x14000d1c5
   14000d147:	jnp    0x14000d0f8
   14000d149:	xlat   BYTE PTR ds:[rbx]
   14000d14a:	movabs ds:0xb9dbfafe37f0a952,eax
   14000d153:	mov    edx,0xfafc07fa
   14000d158:	out    dx,eax
   14000d159:	ins    DWORD PTR es:[rdi],dx
   14000d15a:	adc    ecx,ecx
   14000d15c:	jno    0x14000d0ec
   14000d15e:	fcom   QWORD PTR [rcx+0x3eeff1f0]
   14000d164:	test   bh,ch
   14000d166:	sti    
   14000d167:	je     0x14000d124
   14000d169:	(bad)  
   14000d16b:	ja     0x14000d1e4
   14000d16d:	adc    DWORD PTR [rax+0x54798ef9],eax
   14000d173:	(bad)  
   14000d174:	cwde   
   14000d175:	shl    ah,cl
   14000d177:	hlt    
   14000d178:	xor    al,0x2f
   14000d17a:	sbb    al,0x3b
   14000d17c:	(bad)
   14000d17f:	jae    0x14000d10d
   14000d181:	(bad)  
   14000d182:	mov    esp,0x1a7944c0
   14000d187:	iret   
   14000d188:	outs   dx,DWORD PTR ds:[rsi]
   14000d189:	and    dl,BYTE PTR [rbx]
   14000d18b:	pop    rdi
   14000d18c:	rex.WXB (bad) 
   14000d18e:	cld    
   14000d18f:	cwde   
   14000d190:	mov    dl,0x77
   14000d192:	shl    DWORD PTR [rax-0x5e6d9eff],0xa
   14000d199:	push   rax
   14000d19a:	adc    DWORD PTR [rdx+0x6],edi
   14000d19d:	rol    BYTE PTR [rbx-0x6ae7dd15],cl
   14000d1a3:	or     eax,0x4f5718e6
   14000d1a8:	adc    BYTE PTR [rcx],ch
   14000d1aa:	jae    0x14000d174
   14000d1ac:	xor    DWORD PTR [rdx+0x6e409b51],eax
   14000d1b2:	fisttp DWORD PTR [rsi]
   14000d1b4:	mov    dl,0x47
   14000d1b6:	pop    rdx
   14000d1b7:	jmp    0x14000d178
   14000d1b9:	jb     0x14000d216
   14000d1bb:	xchg   BYTE PTR [rcx],ah
   14000d1bd:	and    al,0x71
   14000d1bf:	(bad)
   14000d1c3:	xchg   BYTE PTR [rbp-0x1ee4ee78],bh
   14000d1c9:	pop    rcx
   14000d1ca:	fs xor edx,ecx
   14000d1cd:	in     eax,dx
   14000d1ce:	je     0x14000d1c1
   14000d1d0:	fnstsw WORD PTR [rsi+0x11a6edf1]
   14000d1d6:	sbb    dh,0xa
   14000d1d9:	jp     0x14000d18b
   14000d1db:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d1dc:	sti    
   14000d1dd:	mov    bl,0x89
   14000d1df:	and    ch,bl
   14000d1e1:	add    BYTE PTR [rdi-0x42811ec4],al
   14000d1e7:	xchg   esi,eax
   14000d1e8:	std    
   14000d1e9:	fwait
   14000d1ea:	xchg   ecx,eax
   14000d1eb:	clc    
   14000d1ec:	rex.RB push 0x40
   14000d1ef:	cmp    BYTE PTR [rdx+rbp*2],bl
   14000d1f2:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d1f3:	(bad)  
   14000d1f4:	mov    ch,0x64
   14000d1f6:	push   rdi
   14000d1f7:	stc    
   14000d1f8:	jmp    0x139716b0f
   14000d1fd:	bnd ss ret 0x5b2b
   14000d202:	xchg   edi,eax
   14000d203:	push   rcx
   14000d204:	jp     0x14000d1a3
   14000d206:	sub    al,0x8c
   14000d208:	xchg   DWORD PTR [rdx+rsi*1],esi
   14000d20b:	or     al,0x2b
   14000d20d:	and    DWORD PTR [rdx+0xa4180aa],esi
   14000d213:	jns    0x14000d239
   14000d215:	(bad)  
   14000d216:	cbw    
   14000d218:	rex.WB
   14000d219:	rex.WB (bad) 
   14000d21b:	pop    rdx
   14000d21c:	push   rax
   14000d21d:	or     BYTE PTR [rdx],dl
   14000d21f:	in     eax,dx
   14000d220:	adc    eax,0x2f813df0
   14000d225:	add    al,0x91
   14000d227:	push   rdi
   14000d228:	data16 adc bh,ch
   14000d22b:	out    0xd7,eax
   14000d22d:	jg     0x14000d22a
   14000d22f:	and    ch,BYTE PTR [rbp-0x700ed00a]
   14000d235:	inc    cl
   14000d237:	div    DWORD PTR [rax+0x7e816fb4]
   14000d23d:	mov    edi,0x6370536f
   14000d242:	out    dx,eax
   14000d243:	pop    rbx
   14000d244:	rex.WR hlt 
   14000d246:	jns    0x14000d230
   14000d248:	outs   dx,BYTE PTR ds:[rsi]
   14000d249:	cwde   
   14000d24a:	ror    BYTE PTR [rdi],0xfd
   14000d24d:	int    0x6f
   14000d24f:	gs ins DWORD PTR es:[rdi],dx
   14000d251:	jrcxz  0x14000d246
   14000d253:	cmp    al,0xfa
   14000d255:	je     0x14000d219
   14000d257:	mov    ebx,0x3cf3ade
   14000d25c:	imul   edi
   14000d25e:	(bad)  
   14000d25f:	leave  
   14000d260:	pop    rsi
   14000d261:	mov    bl,0xd2
   14000d263:	fisttp QWORD PTR [rbp+0xd49dc3e]
   14000d269:	sbb    BYTE PTR [rsi],cl
   14000d26b:	xchg   esp,ecx
   14000d26d:	(bad)  
   14000d26e:	(bad)  
   14000d26f:	shr    BYTE PTR [rdx+0x75],cl
   14000d272:	stc    
   14000d273:	test   DWORD PTR [rdi-0x3],ebx
   14000d276:	xor    ah,BYTE PTR [rdi+0x2e]
   14000d279:	xchg   esp,eax
   14000d27a:	cdq    
   14000d27b:	pop    rbp
   14000d27c:	cwde   
   14000d27d:	(bad)
   14000d280:	sub    DWORD PTR [rax-0x4e01c658],0x44d71d09
   14000d28a:	es and al,0x32
   14000d28d:	xchg   ecx,eax
   14000d28e:	js     0x14000d2fe
   14000d290:	xor    eax,0x56a9dd63
   14000d295:	ret    0xeddb
   14000d298:	(bad)  
   14000d299:	(bad)  
   14000d29a:	lahf   
   14000d29b:	stos   BYTE PTR es:[rdi],al
   14000d29c:	rex.WR push rsi
   14000d29e:	(bad)  
   14000d29f:	adc    bl,BYTE PTR [ecx+ecx*2]
   14000d2a3:	in     al,dx
   14000d2a4:	ins    BYTE PTR es:[rdi],dx
   14000d2a5:	rex push rdi
   14000d2a7:	rcr    BYTE PTR [rbx-0x1f],0x94
   14000d2ab:	and    eax,0xe22651fa
   14000d2b0:	sbb    dl,BYTE PTR [rip+0x6100ee65]        # 0x1a101c11b
   14000d2b6:	mov    edi,0x890065af
   14000d2bb:	and    al,0x4e
   14000d2bd:	cmp    al,0x3c
   14000d2bf:	jp     0x14000d315
   14000d2c1:	rex.WXB cmp rax,0xffffffffea2c006b
   14000d2c7:	stos   DWORD PTR es:[rdi],eax
   14000d2c8:	jmp    0x14000d2ea
   14000d2ca:	fistp  DWORD PTR [rbx+0x5a]
   14000d2cd:	or     eax,eax
   14000d2cf:	ins    DWORD PTR es:[rdi],dx
   14000d2d0:	mov    ebx,0x43e90042
   14000d2d5:	(bad)  
   14000d2d6:	cmp    dl,BYTE PTR [rcx+rsi*1+0x2d39e65b]
   14000d2dd:	cld    
   14000d2de:	xchg   ecx,eax
   14000d2df:	jb     0x14000d29a
   14000d2e1:	jb     0x14000d29c
   14000d2e3:	(bad)  
   14000d2e4:	adc    BYTE PTR [rsp+rax*8+0x70d6ef8d],cl
   14000d2eb:	div    ebp
   14000d2ed:	sub    al,0x5f
   14000d2ef:	out    dx,eax
   14000d2f0:	cmp    BYTE PTR [rbx-0x4160a7fe],ah
   14000d2f6:	xchg   esp,eax
   14000d2f7:	push   rsp
   14000d2f8:	sub    dl,BYTE PTR [rip+0xfffffffff9623892]        # 0x139630b90
   14000d2fe:	in     al,dx
   14000d2ff:	(bad)  
   14000d300:	xchg   edx,eax
   14000d301:	data16 stos BYTE PTR es:[rdi],al
   14000d303:	rex.XB mov sil,r12b
   14000d306:	jp     0x14000d291
   14000d308:	xchg   ebx,eax
   14000d309:	add    al,0xd5
   14000d30b:	or     al,0x6
   14000d30d:	fwait
   14000d30e:	sbb    al,0xcc
   14000d310:	adc    BYTE PTR gs:[rsi],cl
   14000d313:	add    cl,BYTE PTR [rax+0x5]
   14000d316:	mov    edi,0x55129ebb
   14000d31b:	(bad)  
   14000d31c:	rex.X push rdx
   14000d31e:	or     DWORD PTR [rdx],ebx
   14000d320:	out    0x6a,al
   14000d322:	ret    
   14000d323:	xchg   edi,eax
   14000d324:	out    dx,eax
   14000d325:	sbb    DWORD PTR [rdi],0x7b
   14000d328:	and    al,0x9
   14000d32a:	test   cl,cl
   14000d32c:	adc    bh,BYTE PTR [rdi-0x49ea2609]
   14000d332:	mov    dh,0xff
   14000d334:	adc    edi,DWORD PTR [rdi]
   14000d336:	cli    
   14000d337:	leave  
   14000d338:	out    dx,eax
   14000d339:	loope  0x14000d2e9
   14000d33b:	mov    ebx,0xb76ed00e
   14000d340:	rex.RXB cwde 
   14000d342:	rex cli 
   14000d344:	pop    rsp
   14000d345:	imul   esp,esp,0x3ca1e63
   14000d34b:	je     0x14000d308
   14000d34d:	pop    rbp
   14000d34e:	(bad)  
   14000d34f:	cmc    
   14000d350:	or     bh,BYTE PTR [rdi]
   14000d352:	hlt    
   14000d353:	(bad)  
   14000d354:	fmulp  st(0),st
   14000d356:	mov    bl,0x47
   14000d358:	(bad)  
   14000d359:	jno    0x14000d33f
   14000d35b:	scas   al,BYTE PTR es:[rdi]
   14000d35c:	cmp    eax,0xc2c3870c
   14000d361:	jns    0x14000d361
   14000d363:	rex.RB int3 
   14000d365:	(bad)  
   14000d366:	mov    ebp,0xa03060fe
   14000d36b:	pop    rsi
   14000d36c:	scas   eax,DWORD PTR es:[rdi]
   14000d36d:	shr    DWORD PTR [rsi+rsi*1-0x7],cl
   14000d371:	(bad)  
   14000d372:	pop    rdi
   14000d373:	inc    DWORD PTR [rdx]
   14000d375:	jg     0x14000d369
   14000d377:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d378:	imul   edx,DWORD PTR [rax-0x46],0x13
   14000d37c:	iret   
   14000d37d:	fwait
   14000d37e:	add    BYTE PTR [rdi+0x48668ba1],bh
   14000d384:	test   dh,dh
   14000d386:	out    dx,eax
   14000d387:	in     eax,0x89
   14000d389:	xor    edx,DWORD PTR [rcx]
   14000d38b:	xchg   cl,ah
   14000d38d:	cmp    BYTE PTR [rcx+rbp*2-0x7def8c02],al
   14000d394:	popf   
   14000d395:	cmc    
   14000d396:	xchg   edi,eax
   14000d397:	xor    DWORD PTR [rdx],edi
   14000d399:	rex.WXB xor rax,0xfffffffff4eac1d5
   14000d39f:	cli    
   14000d3a0:	(bad)  
   14000d3a1:	rex.WX jge 0x14000d3bb
   14000d3a4:	or     esp,esp
   14000d3a6:	or     eax,DWORD PTR [rcx-0x2c7dd9e8]
   14000d3ac:	push   rdx
   14000d3ad:	(bad)  
   14000d3ae:	xor    DWORD PTR [rdx],esi
   14000d3b0:	pop    rsp
   14000d3b1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d3b2:	(bad)  
   14000d3b3:	bnd ret 0x609
   14000d3b7:	xchg   edx,eax
   14000d3b8:	test   BYTE PTR [rcx-0x6771a55c],dl
   14000d3be:	lahf   
   14000d3bf:	lods   eax,DWORD PTR ds:[rsi]
   14000d3c0:	(bad)  
   14000d3c1:	(bad)  
   14000d3c2:	ret    
   14000d3c3:	push   rsp
   14000d3c4:	xlat   BYTE PTR ds:[rbx]
   14000d3c5:	rex.WB push r13
   14000d3c7:	add    BYTE PTR [rbx],dh
   14000d3c9:	xadd   BYTE PTR [rip+0xffffffff9c714292],dl        # 0xdc721662
   14000d3d0:	outs   dx,BYTE PTR gs:[rsi]
   14000d3d2:	push   rbx
   14000d3d3:	(bad)  [rbp+0x1c]
   14000d3d6:	out    0xe4,al
   14000d3d9:	and    BYTE PTR [rbx],bl
   14000d3db:	jmp    0xea083a87
   14000d3e0:	psraw  mm4,QWORD PTR [rdx]
   14000d3e3:	(bad)  
   14000d3e4:	and    esp,edi
   14000d3e6:	ret    0xe050
   14000d3e9:	jmp    0x14000d40c
   14000d3eb:	(bad)  
   14000d3ec:	fwait
   14000d3ed:	pop    rbp
   14000d3ee:	jbe    0x14000d39f
   14000d3f0:	jmp    0x17ed24f33
   14000d3f5:	xor    al,0x3
   14000d3f7:	test   al,0x54
   14000d3f9:	sub    bl,BYTE PTR [rcx]
   14000d3fb:	cs pop rbp
   14000d3fd:	scas   eax,DWORD PTR es:[rdi]
   14000d3fe:	xlat   BYTE PTR ds:[rbx]
   14000d3ff:	jmp    0x1b2bd4ff9
   14000d404:	push   0x1b
   14000d406:	(bad)  
   14000d407:	xor    al,0x9e
   14000d409:	xchg   BYTE PTR [rbp-0x39abc2a6],bl
   14000d40f:	sbb    eax,0xd9fc6661
   14000d414:	rex.WXB test rax,0xffffffffe7f10e9d
   14000d41a:	(bad)  
   14000d41b:	mov    edi,0xddcc088b
   14000d420:	adc    al,BYTE PTR [rdi+0x426fd490]
   14000d426:	and    al,BYTE PTR [rip+0x2a7c19d2]        # 0x16a7cedfe
   14000d42c:	or     DWORD PTR [rcx-0x33bec817],ebp
   14000d432:	add    bl,BYTE PTR [rdi-0x4]
   14000d435:	(bad)  
   14000d436:	push   rbp
   14000d437:	(bad)  
   14000d438:	fimul  WORD PTR [rdi]
   14000d43a:	call   FWORD PTR [rdx]
   14000d43c:	jmp    rdx
   14000d43e:	lahf   
   14000d43f:	jge    0x14000d478
   14000d441:	neg    DWORD PTR [rcx+rdi*1]
   14000d444:	rex.R cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d446:	shl    DWORD PTR [rcx-0x54a324ee],cl
   14000d44c:	sub    BYTE PTR [rdi+rdx*8-0x14],ah
   14000d450:	ja     0x14000d3e1
   14000d452:	lea    esp,[rdx-0x6c423a78]
   14000d458:	sub    al,0xee
   14000d45a:	popf   
   14000d45b:	xor    BYTE PTR fs:[rax],bl
   14000d45e:	fs jb  0x14000d499
   14000d461:	out    0x99,al
   14000d463:	rex.RX shl DWORD PTR [rsi-0x40],1
   14000d467:	xor    cl,BYTE PTR [rcx+rbx*8+0x799e59d9]
   14000d46e:	out    dx,al
   14000d46f:	add    al,0xbf
   14000d471:	repnz pop rdi
   14000d473:	sahf   
   14000d474:	movsxd esi,DWORD PTR [rbx-0xb1b36cd]
   14000d47a:	cmp    BYTE PTR [rcx],cl
   14000d47c:	xor    eax,0x461050e2
   14000d481:	or     DWORD PTR [rcx+0x20],eax
   14000d484:	nop
   14000d485:	mov    cl,0xa3
   14000d487:	rex.WRX movabs rcx,0xda806aa5b10c2dd4
   14000d491:	sub    al,0x1c
   14000d493:	ret    0x7616
   14000d496:	jg     0x14000d4a2
   14000d498:	ror    DWORD PTR [rip+0xffffffffb6a572a3],cl        # 0xf6a64741
   14000d49e:	mov    ecx,0xf6031ea0
   14000d4a3:	jb     0x14000d43b
   14000d4a5:	sub    ebp,DWORD PTR [rbx-0x77c4df40]
   14000d4ab:	add    eax,0xb6c8ba29
   14000d4b0:	hlt    
   14000d4b1:	cdq    
   14000d4b2:	shr    bl,cl
   14000d4b4:	stos   BYTE PTR es:[rdi],al
   14000d4b5:	jp     0x14000d447
   14000d4b7:	xor    dl,ch
   14000d4b9:	inc    DWORD PTR [rbx+0x49]
   14000d4bc:	sbb    BYTE PTR [rsi],ah
   14000d4be:	mov    WORD PTR [rdi+0x12],ss
   14000d4c1:	test   dh,0x4f
   14000d4c4:	adc    DWORD PTR [rsi-0x1f],eax
   14000d4c7:	mov    BYTE PTR [rdx],cl
   14000d4c9:	(bad)  
   14000d4ca:	pop    rdx
   14000d4cb:	mov    ecx,0x7373665c
   14000d4d0:	xor    eax,ebx
   14000d4d2:	add    ah,dh
   14000d4d4:	cmp    BYTE PTR [rip+0x1321b70],bl        # 0x14132f04a
   14000d4da:	cdq    
   14000d4db:	mov    dh,0x1b
   14000d4dd:	add    al,0xe0
   14000d4df:	rex.WB test rax,0x41063792
   14000d4e5:	movabs al,ds:0xe9c6e5cd33f9bf25
   14000d4ee:	rex.RXB xor eax,0x25145a1d
   14000d4f4:	out    0xb6,al
   14000d4f6:	pop    rbx
   14000d4f7:	add    eax,0xcfb5aff5
   14000d4fc:	popf   
   14000d4fd:	shr    BYTE PTR [rdx],cl
   14000d4ff:	sbb    al,0xa2
   14000d501:	sub    al,0x57
   14000d503:	sub    ebp,DWORD PTR [rsi+rbp*4+0x2dbdb1ae]
   14000d50a:	pushf  
   14000d50b:	add    DWORD PTR [rdi+0x3892673e],edx
   14000d511:	nop
   14000d512:	shl    BYTE PTR [rip+0xffffffffe91e9904],1        # 0x1291f6e1c
   14000d518:	es or  cl,cl
   14000d51b:	rex.X jg 0x14000d545
   14000d51e:	and    BYTE PTR [rax+0x64],cl
   14000d521:	(bad)  
   14000d522:	add    dh,BYTE PTR [rbp-0x62]
   14000d525:	mov    DWORD PTR [rcx],ecx
   14000d527:	sar    BYTE PTR [rcx+0x3],1
   14000d52a:	sar    BYTE PTR [rcx+0x8],1
   14000d52d:	test   DWORD PTR [rdx],esi
   14000d52f:	mov    ch,BYTE PTR [rcx-0x6776fabd]
   14000d535:	jrcxz  0x14000d4e8
   14000d537:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d538:	xlat   BYTE PTR ds:[rbx]
   14000d539:	clc    
   14000d53a:	loope  0x14000d5bb
   14000d53c:	clc    
   14000d53d:	sub    DWORD PTR [rsi-0x16],edi
   14000d540:	pop    rdi
   14000d541:	jge    0x14000d4c7
   14000d543:	cmp    ecx,DWORD PTR [rsi]
   14000d545:	in     eax,dx
   14000d546:	movsxd edi,DWORD PTR [rbx+0x7b]
   14000d549:	cmp    esp,DWORD PTR [rbx+0x5d]
   14000d54c:	(bad)  
   14000d54d:	xor    eax,DWORD PTR [rax]
   14000d54f:	ja     0x14000d537
   14000d551:	pop    rcx
   14000d552:	(bad)  
   14000d553:	rcr    BYTE PTR [rbx+0x113b23e4],cl
   14000d559:	jp     0x14000d52c
   14000d55b:	fadd   QWORD PTR [rdi+rsi*4]
   14000d55e:	jg     0x14000d567
   14000d560:	add    DWORD PTR [rcx],0x73
   14000d563:	jae    0x14000d5d8
   14000d565:	mov    ah,0x3b
   14000d567:	cmp    eax,0xfe5fdffe
   14000d56c:	xor    ah,BYTE PTR [rdi-0x1a07fa32]
   14000d572:	sbb    eax,esi
   14000d574:	(bad)  
   14000d575:	xchg   ecx,eax
   14000d576:	push   rsp
   14000d577:	mov    BYTE PTR [rdx+0x55],ah
   14000d57a:	rex.RX cmp al,0x8e
   14000d57d:	xchg   ebp,eax
   14000d57e:	movabs al,ds:0x806b8bc66ec42390
   14000d587:	jae    0x14000d5aa
   14000d589:	mov    esi,0x5e5c5833
   14000d58e:	xor    BYTE PTR [rdx-0x42],dh
   14000d591:	jnp    0x14000d523
   14000d593:	mov    ah,0x8b
   14000d595:	pop    rcx
   14000d596:	push   rbp
   14000d597:	rex.X jg 0x14000d5b5
   14000d59a:	out    0xfb,eax
   14000d59c:	pop    rcx
   14000d59d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d59e:	(bad)  
   14000d59f:	sub    esi,eax
   14000d5a1:	shl    BYTE PTR [rcx],cl
   14000d5a3:	loope  0x14000d5de
   14000d5a5:	enter  0x7cc4,0x53
   14000d5a9:	push   rbp
   14000d5aa:	or     eax,eax
   14000d5ac:	rex.WR cmp r10b,BYTE PTR [rdx-0x3a]
   14000d5b0:	rcl    BYTE PTR [rdx+0x200fc7d7],0xec
   14000d5b7:	lea    edx,[rsi+0x3]
   14000d5ba:	xor    bh,ch
   14000d5bc:	jmp    0x1114fd4bc
   14000d5c1:	popf   
   14000d5c2:	sbb    eax,0xc768a560
   14000d5c7:	lods   eax,DWORD PTR ds:[rsi]
   14000d5c8:	push   0x4d0061bb
   14000d5cd:	ret    
   14000d5ce:	add    BYTE PTR [rdi+rdi*4+0x64],bh
   14000d5d2:	cmp    DWORD PTR [rdi+0x84250f9],esi
   14000d5d8:	sbb    eax,0xfff5980d
   14000d5dd:	(bad)  
   14000d5de:	jmp    0xcdf7cf72
   14000d5e3:	test   dl,bh
   14000d5e5:	cmp    ebx,DWORD PTR [rbp+0x77]
   14000d5e8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d5e9:	repz (bad) 
   14000d5eb:	pop    rbp
   14000d5ec:	jrcxz  0x14000d5ae
   14000d5ee:	cld    
   14000d5ef:	rex.WB test rax,0x6ab54f0c
   14000d5f5:	xchg   ebp,eax
   14000d5f6:	adc    esp,DWORD PTR [rdi]
   14000d5f8:	ss push 0xffffffff82564bb5
   14000d5fe:	fadd   DWORD PTR [rcx]
   14000d600:	fs call 0x132d19944
   14000d606:	rex.W and BYTE PTR [rbx-0x8],cl
   14000d60a:	xchg   esi,eax
   14000d60b:	loopne 0x14000d62e
   14000d60d:	mov    ebx,0xb7cee49c
   14000d612:	int3   
   14000d613:	and    al,BYTE PTR [rbp-0x76ef5719]
   14000d61a:	cs (bad) 
   14000d61c:	in     al,0x4a
   14000d61e:	adc    al,0xf
   14000d620:	sub    esi,esi
   14000d622:	lock mov ch,0x67
   14000d625:	loope  0x14000d66e
   14000d627:	ds stc 
   14000d629:	sub    DWORD PTR [rsi-0x6],edi
   14000d62c:	(bad)  
   14000d62d:	(bad)  
   14000d62e:	(bad)  
   14000d62f:	fsub   st(4),st
   14000d631:	xor    al,0x1b
   14000d633:	sbb    ebx,DWORD PTR [rbx]
   14000d635:	push   0xffffffffffffffaf
   14000d637:	out    0x8d,eax
   14000d639:	pop    rax
   14000d63a:	lock repz push rdx
   14000d63d:	mov    ebx,0xd7702548
   14000d642:	mov    esp,DWORD PTR [rax-0x3ff0c442]
   14000d648:	xor    BYTE PTR [rcx],cl
   14000d64a:	movsxd esi,ebp
   14000d64c:	lahf   
   14000d64d:	cwde   
   14000d64e:	cwde   
   14000d64f:	loopne 0x14000d668
   14000d651:	jg     0x14000d638
   14000d653:	or     edi,DWORD PTR [rsi+rdi*8-0x35]
   14000d657:	push   rdi
   14000d658:	or     DWORD PTR [rbx+0x24d13c25],edx
   14000d65e:	movabs eax,ds:0xb58a858e262389aa
   14000d667:	(bad)  
   14000d668:	push   rdx
   14000d669:	sti    
   14000d66a:	sti    
   14000d66b:	sbb    eax,0x6cf5aec9
   14000d670:	xchg   ecx,eax
   14000d671:	leave  
   14000d672:	mov    edx,0xedcfc963
   14000d677:	jp     0x14000d660
   14000d679:	js     0x14000d6c2
   14000d67b:	mov    edx,0xc920461b
   14000d680:	xor    DWORD PTR [rax],edx
   14000d682:	out    0x72,eax
   14000d684:	xchg   esi,eax
   14000d685:	xchg   BYTE PTR [rip+0xffffffffd31748b3],dh        # 0x113181f3e
   14000d68b:	imul   eax,DWORD PTR [rdx],0x45
   14000d68e:	rex.RX rol DWORD PTR [rsp+r15*8+0x2e761278],0x48
   14000d697:	ins    BYTE PTR es:[rdi],dx
   14000d698:	rol    BYTE PTR [rcx-0x721cf63b],cl
   14000d69e:	sbb    BYTE PTR [rdi+0x24bdbc98],cl
   14000d6a4:	outs   dx,DWORD PTR ds:[rsi]
   14000d6a5:	movabs ds:0xbaf67eeae829ebe9,eax
   14000d6ae:	(bad)  
   14000d6af:	mov    eax,0xb8402e4d
   14000d6b4:	or     DWORD PTR [rbx],esp
   14000d6b6:	and    BYTE PTR [rcx+rcx*8-0x7f6e4cc3],ah
   14000d6bd:	data16 neg BYTE PTR [rdi-0x251b2665]
   14000d6c4:	pop    rcx
   14000d6c5:	sub    DWORD PTR [rdi-0x7b],0x692d7fbe
   14000d6cc:	lahf   
   14000d6cd:	pop    rdi
   14000d6ce:	idiv   DWORD PTR [rdi+rcx*4]
   14000d6d1:	sahf   
   14000d6d2:	(bad)  
   14000d6d3:	scas   eax,DWORD PTR es:[rdi]
   14000d6d4:	xchg   ebp,eax
   14000d6d5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d6d6:	push   rax
   14000d6d7:	(bad)  
   14000d6d9:	mov    DWORD PTR [rdx],ebp
   14000d6db:	iret   
   14000d6dc:	sahf   
   14000d6dd:	pop    rbp
   14000d6de:	movabs eax,ds:0xff09c08e40652ad3
   14000d6e7:	int    0x41
   14000d6e9:	(bad)  
   14000d6ea:	in     al,dx
   14000d6eb:	mov    dh,0x3c
   14000d6ed:	shr    DWORD PTR [rbx-0x1b156aff],1
   14000d6f3:	ret    0x2739
   14000d6f6:	rex.RB (bad) 
   14000d6f8:	jbe    0x14000d6d3
   14000d6fa:	xor    BYTE PTR [rcx+riz*2],ah
   14000d6fd:	push   rax
   14000d6fe:	add    BYTE PTR [rax],cl
   14000d700:	movabs eax,ds:0x335f50cbb48c8098
   14000d709:	(bad)  
   14000d70a:	xchg   BYTE PTR [rdi],ch
   14000d70c:	(bad)  
   14000d70d:	jbe    0x14000d6a4
   14000d70f:	(bad)  
   14000d710:	stc    
   14000d711:	in     al,0x7f
   14000d713:	loope  0x14000d6dc
   14000d715:	jg     0x14000d703
   14000d717:	movsxd esi,DWORD PTR [rbx+rbx*4]
   14000d71a:	rex.WRB mov r14b,0xb6
   14000d71d:	mov    dh,0x9c
   14000d71f:	jnp    0x14000d70e
   14000d721:	lods   al,BYTE PTR ds:[rsi]
   14000d722:	mov    bh,0x17
   14000d724:	movabs eax,ds:0xbf10d021bcbefc83
   14000d72d:	cmp    esp,DWORD PTR [rdi]
   14000d72f:	and    BYTE PTR [rsi-0x2613099d],cl
   14000d735:	ret    
   14000d736:	repz rex.RXB iret 
   14000d739:	lock test eax,0xd5a31f4f
   14000d73f:	popf   
   14000d740:	(bad)  
   14000d741:	sub    ecx,DWORD PTR [rdi+0x22]
   14000d744:	rex.RB and DWORD PTR [r9+rdx*1],0xffffff84
   14000d749:	push   rcx
   14000d74a:	rex.R adc al,0x79
   14000d74d:	rex.R push rcx
   14000d74f:	rex.X sbb BYTE PTR [rcx+0x84f7f20],bpl
   14000d756:	lock int3 
   14000d758:	test   DWORD PTR [rax+0x25],0x197efdbd
   14000d75f:	pop    rbx
   14000d760:	and    BYTE PTR [rdx+0x36],0xe
   14000d764:	(bad)  
   14000d766:	out    dx,eax
   14000d767:	out    0xd9,al
   14000d769:	movsxd esp,DWORD PTR [rcx]
   14000d76b:	popf   
   14000d76c:	(bad)  
   14000d76d:	pop    rax
   14000d76e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d76f:	rex.WX movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d771:	ret    0x65ca
   14000d774:	(bad)  
   14000d775:	rex.RB enter 0x6d40,0x1f
   14000d77a:	cmc    
   14000d77b:	push   rsp
   14000d77c:	fs xchg ecx,eax
   14000d77e:	movabs al,ds:0x4489aa01eaa404ca
   14000d787:	add    DWORD PTR [rcx-0x34],0xffffffa1
   14000d78b:	add    esp,DWORD PTR [rbx+0x54]
   14000d78e:	sub    ah,BYTE PTR [rip+0xffffffffb9fbb6b6]        # 0xf9fc8e4a
   14000d794:	jrcxz  0x14000d7e9
   14000d796:	(bad)  
   14000d797:	cmp    BYTE PTR [rcx+0x12],cl
   14000d79a:	ss (bad) 
   14000d79c:	(bad)  
   14000d79d:	mov    ecx,DWORD PTR [rdx-0x760d437f]
   14000d7a3:	rex.WRXB jl 0x14000d788
   14000d7a6:	fidiv  DWORD PTR [rcx]
   14000d7a8:	(bad)  
   14000d7aa:	shl    BYTE PTR [rsi+0x4ba0376b],0xcc
   14000d7b1:	cs push rbx
   14000d7b3:	jo     0x14000d7ac
   14000d7b5:	in     eax,0x97
   14000d7b7:	and    DWORD PTR [rbx],ecx
   14000d7b9:	or     esp,0xfffffffa
   14000d7bc:	(bad)  
   14000d7bd:	fimul  DWORD PTR [rsi]
   14000d7bf:	(bad)  
   14000d7c0:	scas   al,BYTE PTR es:[rdi]
   14000d7c1:	jae    0x14000d7e6
   14000d7c3:	sti    
   14000d7c4:	rex jge 0x14000d761
   14000d7c7:	iretq  
   14000d7c9:	popf   
   14000d7ca:	(bad)  
   14000d7cb:	push   rax
   14000d7cc:	push   rax
   14000d7cd:	or     DWORD PTR es:[rsi-0x5b],edi
   14000d7d1:	(bad)  
   14000d7d2:	rex.R jb 0x14000d7c3
   14000d7d5:	cld    
   14000d7d6:	cmp    dh,BYTE PTR [rdx]
   14000d7d8:	sub    al,BYTE PTR [rbx-0x27]
   14000d7db:	cmp    eax,0xe839d85f
   14000d7e0:	out    dx,al
   14000d7e1:	mov    ebx,0x61c7c258
   14000d7e6:	or     BYTE PTR [rcx-0x29],bh
   14000d7e9:	(bad)  
   14000d7ea:	test   eax,0xb810c0cd
   14000d7ef:	cmp    DWORD PTR [rdi],edi
   14000d7f1:	add    ecx,DWORD PTR [rsi+0x2c280432]
   14000d7f7:	mov    cl,0x4b
   14000d7f9:	push   rsp
   14000d7fa:	cwde   
   14000d7fb:	jle    0x14000d819
   14000d7fd:	rex.XB pop r10
   14000d7ff:	ror    DWORD PTR [rdi+0x0],cl
   14000d802:	(bad)  
   14000d803:	xor    DWORD PTR [rbx+0x2b8bee7c],esi
   14000d809:	cld    
   14000d80a:	jrcxz  0x14000d82b
   14000d80c:	std    
   14000d80d:	adc    al,0xff
   14000d80f:	cld    
   14000d810:	lahf   
   14000d811:	jle    0x14000d7a7
   14000d813:	rex.RX movabs ds:0xe5245cefba30f361,eax
   14000d81d:	repz (bad) 
   14000d820:	and    eax,0x1419976e
   14000d825:	in     eax,dx
   14000d826:	(bad)  
   14000d827:	xchg   ebp,eax
   14000d828:	xlat   BYTE PTR ds:[rbx]
   14000d829:	jle    0x14000d891
   14000d82b:	data16 xchg BYTE PTR [rax],ch
   14000d82e:	rex.WX clc 
   14000d830:	(bad)
   14000d833:	xor    ch,BYTE PTR [rdi]
   14000d835:	lahf   
   14000d836:	xchg   edx,eax
   14000d837:	and    al,0x4c
   14000d839:	loope  0x14000d7c4
   14000d83b:	es enter 0x4932,0x2c
   14000d840:	mov    edx,eax
   14000d842:	test   BYTE PTR [rax],ch
   14000d844:	rex.WX hlt 
   14000d846:	sub    al,0x3c
   14000d848:	rex.RB enter 0x279e,0xf0
   14000d84d:	adc    ah,BYTE PTR [rcx-0x78ab0eeb]
   14000d853:	mov    bh,0x7a
   14000d855:	mov    esp,0x3666ef50
   14000d85a:	pop    QWORD PTR [rsi-0x1824f507]
   14000d860:	xchg   esi,eax
   14000d861:	movabs al,ds:0x12e1e65cf7ceac45
   14000d86a:	(bad)  
   14000d86b:	call   0x14e544369
   14000d870:	pop    rsi
   14000d871:	or     bh,al
   14000d873:	rex.W pop rax
   14000d875:	lods   al,BYTE PTR ds:[rsi]
   14000d876:	(bad)  
   14000d877:	and    edx,ecx
   14000d879:	xor    ecx,DWORD PTR [rbx]
   14000d87b:	and    esp,DWORD PTR [rcx+0x67]
   14000d87e:	add    al,BYTE PTR [rsi-0x76366f1f]
   14000d884:	mov    bh,BYTE PTR [rbp-0x4e]
   14000d887:	cmp    al,0x93
   14000d889:	xchg   ebp,eax
   14000d88a:	xor    ch,BYTE PTR [rbp+0x5632e893]
   14000d890:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d891:	sub    eax,0xd6eddf17
   14000d896:	mov    ah,0x9b
   14000d898:	jb     0x14000d89d
   14000d89a:	or     ah,cl
   14000d89c:	xchg   ebx,eax
   14000d89d:	rex.WRX add rax,0x47fb2316
   14000d8a3:	(bad)  
   14000d8a4:	(bad)  
   14000d8a5:	and    eax,esp
   14000d8a7:	mov    bh,0x53
   14000d8a9:	mov    ebx,0x9f6f841d
   14000d8ae:	adc    edx,edx
   14000d8b0:	or     DWORD PTR [rsi],esi
   14000d8b2:	rex.WB movabs ds:0x78b90e167eb47003,al
   14000d8bc:	mov    ecx,0xf0a95e0d
   14000d8c1:	cmp    DWORD PTR [rbx],esi
   14000d8c3:	or     al,0xc0
   14000d8c5:	jns    0x14000d93d
   14000d8c7:	mov    bl,0x9e
   14000d8c9:	(bad)  
   14000d8ca:	or     dl,dl
   14000d8cc:	icebp  
   14000d8cd:	or     al,0xa4
   14000d8cf:	movabs eax,ds:0xbacde89621144e83
   14000d8d8:	retf   
   14000d8d9:	rex.R in al,dx
   14000d8db:	lods   eax,DWORD PTR ds:[rsi]
   14000d8dc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d8dd:	and    al,BYTE PTR [rdx]
   14000d8df:	iret   
   14000d8e0:	push   rbx
   14000d8e1:	adc    ecx,DWORD PTR [rdi-0x70]
   14000d8e4:	xchg   BYTE PTR [rax-0x2c],cl
   14000d8e7:	add    BYTE PTR [rdi-0x840e31c],cl
   14000d8ed:	fxch   st(3)
   14000d8ef:	mov    WORD PTR [rbp-0x360c903],cs
   14000d8f5:	xchg   ecx,eax
   14000d8f6:	out    dx,eax
   14000d8f7:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d8f8:	push   rsi
   14000d8f9:	stos   DWORD PTR es:[rdi],eax
   14000d8fa:	shr    DWORD PTR [rsi-0x49],1
   14000d8fd:	ins    DWORD PTR es:[rdi],dx
   14000d8fe:	xor    dl,dh
   14000d900:	movabs ds:0x14edffc84a13b8c1,al
   14000d909:	or     al,0x14
   14000d90b:	xchg   BYTE PTR [rcx],ah
   14000d90d:	adc    BYTE PTR [r8],sil
   14000d910:	xor    esi,DWORD PTR [rbx]
   14000d912:	ret    
   14000d913:	outs   dx,DWORD PTR ds:[rsi]
   14000d914:	(bad)  
   14000d915:	out    dx,al
   14000d916:	jrcxz  0x14000d994
   14000d918:	loope  0x14000d8e5
   14000d91a:	push   rdi
   14000d91b:	sbb    dh,al
   14000d91d:	or     ecx,DWORD PTR [rax+0x29a80c60]
   14000d923:	sbb    WORD PTR [rbx+0x3d],cx
   14000d927:	sbb    eax,0x8589263a
   14000d92c:	jb     0x14000d8c3
   14000d92e:	jns    0x14000d916
   14000d930:	fisubr DWORD PTR [rdx]
   14000d932:	cmp    eax,0xf630feba
   14000d937:	pop    rbp
   14000d938:	cmp    al,0x83
   14000d93a:	jo     0x14000d8c0
   14000d93c:	imul   ebx,esp,0x23
   14000d93f:	or     esi,ebp
   14000d941:	cmc    
   14000d942:	jbe    0x14000d8dd
   14000d944:	test   eax,0x5d09aecb
   14000d949:	sbb    al,BYTE PTR [rsi-0x58b41a0]
   14000d94f:	in     eax,dx
   14000d950:	mov    bl,0xf8
   14000d952:	rol    DWORD PTR [rcx+0x1],0x90
   14000d956:	(bad)  
   14000d957:	add    bl,BYTE PTR [rcx]
   14000d959:	add    BYTE PTR [rdx-0x30],dl
   14000d95c:	xchg   esp,eax
   14000d95d:	adc    DWORD PTR [rax+0x33],edx
   14000d960:	rex.R sbb eax,0x31c49007
   14000d966:	sub    DWORD PTR [rdi],0xc801ebaf
   14000d96c:	sbb    BYTE PTR [rdx-0x310d124d],ah
   14000d972:	ja     0x14000d970
   14000d974:	(bad)  
   14000d975:	mov    bh,0x9b
   14000d977:	or     BYTE PTR [rdx+rdx*1],al
   14000d97a:	ss (bad) 
   14000d97c:	mov    ebp,0x455bd3fa
   14000d981:	stos   BYTE PTR es:[rdi],al
   14000d982:	neg    DWORD PTR [rbx-0x6afe041a]
   14000d988:	rex.WX add rax,0xffffffffa53bf9d3
   14000d98e:	add    eax,0x7565d9bb
   14000d993:	(bad)  
   14000d995:	adc    edi,DWORD PTR [rsi-0x3e3c0e25]
   14000d99b:	add    BYTE PTR [rbx+rbx*4+0x91553c0],al
   14000d9a2:	or     eax,0x966721a3
   14000d9a7:	pop    rbx
   14000d9a8:	rex.W mul al
   14000d9ab:	data16 int3 
   14000d9ad:	xchg   ebp,eax
   14000d9ae:	sub    BYTE PTR [rdx],ah
   14000d9b0:	rex.WRX jb 0x14000d9c6
   14000d9b3:	sbb    esi,DWORD PTR [rbx-0x77a60bc]
   14000d9b9:	sbb    DWORD PTR [rdi-0x6faab9a0],edx
   14000d9bf:	mov    cs,WORD PTR [rip+0x62237520]        # 0x1a2244ee5
   14000d9c5:	jle    0x14000da18
   14000d9c7:	(bad)  
   14000d9c8:	and    eax,0xe867a449
   14000d9cd:	jmp    0x1283562ed
   14000d9d2:	sub    BYTE PTR [rbx],ch
   14000d9d4:	sahf   
   14000d9d5:	add    al,0x61
   14000d9d7:	xor    cl,bh
   14000d9d9:	outs   dx,DWORD PTR ds:[rsi]
   14000d9da:	cld    
   14000d9db:	mul    BYTE PTR [rip+0xffffffffc7bf9ac6]        # 0x107c074a7
   14000d9e1:	(bad)  
   14000d9e3:	mov    ebx,0x3870c1df
   14000d9e8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d9e9:	fucomi st,st(5)
   14000d9eb:	data16 (bad) 
   14000d9ed:	or     dl,BYTE PTR [rcx+rbp*8]
   14000d9f0:	std    
   14000d9f1:	cmp    ecx,DWORD PTR [rcx-0x8]
   14000d9f4:	popf   
   14000d9f5:	sbb    BYTE PTR [rdx+0x60c1bf9],al
   14000d9fb:	sub    al,0x2e
   14000d9fd:	cs jb  0x14000d9e1
   14000da00:	ret    0xbf1a
   14000da03:	stc    
   14000da04:	cmp    ecx,edi
   14000da06:	mov    cl,0xd9
   14000da08:	(bad)  
   14000da09:	add    ebp,DWORD PTR [rdi+0xc]
   14000da0c:	rex.R pop rbp
   14000da0e:	(bad)  
   14000da0f:	rex.WR xchg rax,rax
   14000da11:	mov    DWORD PTR [rsi-0x3c6646c],esi
   14000da17:	retf   0xe810
   14000da1a:	add    DWORD PTR [rsi-0xbb43fd1],ebx
   14000da20:	sub    esp,DWORD PTR [rbp+riz*1-0x50]
   14000da24:	and    al,0x3f
   14000da26:	(bad)  
   14000da27:	pop    rax
   14000da28:	xor    DWORD PTR [rbx-0x4b451ec],edi
   14000da2e:	out    dx,al
   14000da2f:	sahf   
   14000da30:	enter  0x671d,0x2d
   14000da34:	jmp    FWORD PTR [rsi]
   14000da36:	cld    
   14000da37:	(bad)  
   14000da38:	div    DWORD PTR [rax+0x5d]
   14000da3b:	xchg   DWORD PTR [rsi],ecx
   14000da3d:	movsxd esi,DWORD PTR [rax]
   14000da3f:	mov    BYTE PTR [rcx-0x5a],al
   14000da42:	xlat   BYTE PTR ds:[rbx]
   14000da43:	mov    cl,0x53
   14000da45:	mov    edi,0x750d7b85
   14000da4a:	sahf   
   14000da4b:	sbb    al,BYTE PTR [rdi]
   14000da4d:	(bad)  
   14000da4e:	or     BYTE PTR [rax+0x2258a2fe],ch
   14000da54:	rex.R
   14000da55:	rex.X mov ebp,0xc5c51312
   14000da5b:	leave  
   14000da5c:	pop    rbx
   14000da5d:	add    BYTE PTR [rbx-0x248a34df],bl
   14000da63:	cmp    ch,ch
   14000da65:	iret   
   14000da66:	add    dl,BYTE PTR ds:[rax+0xc]
   14000da6a:	shl    BYTE PTR [rdi+0x12],0x7f
   14000da6e:	(bad)  
   14000da6f:	(bad)  
   14000da70:	or     al,0x9e
   14000da72:	xchg   BYTE PTR [rdx-0x5867a2da],dh
   14000da78:	retf   
   14000da79:	sub    DWORD PTR [rcx-0x2f3cf1e9],0xffffffce
   14000da80:	xor    rcx,QWORD PTR [rsp+r12*1]
   14000da84:	scas   eax,DWORD PTR es:[rdi]
   14000da85:	add    ch,ah
   14000da87:	sbb    WORD PTR [rsi-0x72],bp
   14000da8b:	lock pop rbp
   14000da8d:	sub    esi,DWORD PTR [rsi-0x76d9fe8f]
   14000da93:	repnz rex.WXB (bad) 
   14000da96:	jno    0x14000dae4
   14000da98:	test   eax,0x7b7b665c
   14000da9d:	fwait
   14000da9e:	or     edx,DWORD PTR [rdi]
   14000daa0:	xchg   DWORD PTR [rdx-0x779dad75],edi
   14000daa6:	movabs ds:0x52fcc503f04c3084,al
   14000daaf:	sbb    bl,BYTE PTR [rsi*8-0x30fdd40d]
   14000dab6:	mov    BYTE PTR [rip+0x51819964],0xd        # 0x191827421
   14000dabd:	sbb    al,0xe9
   14000dabf:	imul   ecx,DWORD PTR [rdi-0x376e298b],0x38
   14000dac6:	ret    0xd6ce
   14000dac9:	add    edx,edx
   14000dacb:	or     bh,BYTE PTR [rip+0x69bf0e66]        # 0x1a9bfe937
   14000dad1:	(bad)  
   14000dad2:	std    
   14000dad3:	jo     0x14000da56
   14000dad5:	pop    rdi
   14000dad6:	clc    
   14000dad7:	(bad)  
   14000dad8:	gs addr32 mov si,0xf7c0
   14000dade:	jg     0x14000dac2
   14000dae0:	popf   
   14000dae1:	or     al,0x6
   14000dae3:	add    eax,DWORD PTR [rsi]
   14000dae5:	add    ecx,0x8
   14000dae8:	adc    ecx,eax
   14000daea:	xor    eax,DWORD PTR [rdx+0x2bbf9f22]
   14000daf0:	stc    
   14000daf1:	repz jns 0x14000daf4
   14000daf4:	jp     0x14000dab3
   14000daf6:	(bad)  
   14000daf7:	adc    edx,DWORD PTR [rbx]
   14000daf9:	adc    edx,esp
   14000dafb:	jmp    0x14000db4a
   14000dafd:	inc    bl
   14000daff:	(bad)  
   14000db00:	cld    
   14000db01:	and    DWORD PTR [rdi-0x71],eax
   14000db04:	cmovs  esp,esp
   14000db07:	or     al,0x88
   14000db09:	mov    BYTE PTR es:[rdx-0x6f6db946],dl
   14000db10:	xor    DWORD PTR [rcx-0x14],r10d
   14000db14:	sub    edx,DWORD PTR [rip+0x23888a20]        # 0x16389653a
   14000db1a:	movabs eax,ds:0x4360756241492172
   14000db23:	lods   al,BYTE PTR ds:[rsi]
   14000db24:	pop    rdx
   14000db25:	rex.WX jp 0x14000dab8
   14000db28:	push   rbp
   14000db29:	or     esi,DWORD PTR [rax-0x78]
   14000db2c:	(bad)
   14000db2f:	(bad)  
   14000db30:	(bad)  
   14000db31:	retf   
   14000db32:	(bad)  
   14000db33:	rol    DWORD PTR [edx+0x66],1
   14000db37:	sbb    ebp,ecx
   14000db39:	xor    eax,0xf74fdc2c
   14000db3e:	jns    0x14000db09
   14000db40:	test   al,0xb8
   14000db42:	(bad)  
   14000db43:	outs   dx,BYTE PTR ds:[rsi]
   14000db44:	rex.RX loop 0x14000db13
   14000db47:	fstp   QWORD PTR ds:[rdi]
   14000db4a:	ror    BYTE PTR [rip+0x23884e03],cl        # 0x163892953
   14000db50:	lock cmp eax,0x112f1898
   14000db56:	(bad)  
   14000db57:	jb     0x14000dadd
   14000db59:	add    DWORD PTR [rax-0x3b56ad0b],ebx
   14000db5f:	(bad)  
   14000db60:	(bad)  
   14000db61:	xchg   esi,eax
   14000db62:	int    0xe6
   14000db64:	in     al,dx
   14000db65:	cmp    al,0x5b
   14000db67:	enter  0x746d,0x1
   14000db6b:	ret    0x864d
   14000db6e:	add    bh,BYTE PTR [rbx-0x62]
   14000db71:	(bad)  
   14000db72:	rex.X
   14000db73:	rex.WR jp 0x14000db05
   14000db76:	out    0xba,al
   14000db78:	scas   al,BYTE PTR es:[rdi]
   14000db79:	jp     0x14000db1b
   14000db7b:	xchg   BYTE PTR ds:[rbx-0x22472f04],bl
   14000db82:	pop    rsp
   14000db83:	cmp    eax,edx
   14000db85:	cmc    
   14000db86:	lods   al,BYTE PTR ds:[rsi]
   14000db87:	cmc    
   14000db88:	xlat   BYTE PTR ds:[rbx]
   14000db89:	pop    rbx
   14000db8a:	jbe    0x14000db2b
   14000db8c:	(bad)
   14000db8f:	lods   eax,DWORD PTR ds:[rsi]
   14000db90:	cmc    
   14000db91:	rex.W (bad) 
   14000db93:	xchg   ebx,eax
   14000db94:	(bad)  
   14000db95:	rex.WB in al,dx
   14000db97:	movabs eax,ds:0xbdb56937575700a3
   14000dba0:	xor    al,0xef
   14000dba2:	test   ah,dl
   14000dba4:	rcr    DWORD PTR [rsi],0x5e
   14000dba7:	sub    rsi,r14
   14000dbaa:	hlt    
   14000dbab:	add    BYTE PTR [rip+0xffffffffcdfd23f7],dh        # 0x10dfdffa8
   14000dbb1:	shr    DWORD PTR [rbx+rcx*2+0x53],0x96
   14000dbb6:	call   0x185263f8d
   14000dbbb:	mov    al,0xdf
   14000dbbd:	adc    BYTE PTR [rsi-0x4a322af5],bh
   14000dbc3:	push   rbp
   14000dbc4:	xor    DWORD PTR [rcx],edx
   14000dbc6:	cmp    edi,DWORD PTR [rdi+0x46]
   14000dbc9:	es fs mov dl,0xf9
   14000dbcd:	(bad)  
   14000dbcf:	rcr    DWORD PTR [rcx],cl
   14000dbd1:	in     al,dx
   14000dbd2:	in     eax,0x5f
   14000dbd4:	(bad)  
   14000dbd5:	fcom   QWORD PTR [rcx+0x66]
   14000dbd8:	data16 (bad) 
   14000dbda:	js     0x14000dbbb
   14000dbdc:	mov    bh,0xbd
   14000dbde:	sahf   
   14000dbdf:	jae    0x14000dbc8
   14000dbe1:	(bad)  
   14000dbe2:	xor    DWORD PTR [rax],ebx
   14000dbe4:	or     al,0x32
   14000dbe6:	rex.WB pop r10
   14000dbe8:	ja     0x14000dc1c
   14000dbea:	cli    
   14000dbeb:	in     eax,0x89
   14000dbed:	mov    esi,0xc37cd968
   14000dbf2:	jge    0x14000dbef
   14000dbf4:	div    cl
   14000dbf6:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000dbf7:	(bad)  
   14000dbf8:	mov    ebp,0xdbfe67c8
   14000dbfd:	imul   eax,DWORD PTR [rsi],0xfd251ed1
   14000dc03:	test   eax,0x44914ca4
   14000dc08:	movabs eax,ds:0xf127fd3d8e263880
   14000dc11:	mov    esp,0x97878904
   14000dc16:	and    al,0xc6
   14000dc18:	sbb    DWORD PTR [rdi-0x5efdfd9f],ecx
   14000dc1e:	jb     0x14000dc96
   14000dc20:	pop    rcx
   14000dc21:	(bad)  
   14000dc22:	push   rsp
   14000dc23:	adc    DWORD PTR [rdi-0x57],edi
   14000dc26:	sbb    ecx,esi
   14000dc28:	sbb    eax,0x6801d263
   14000dc2d:	imul   ebx,DWORD PTR [rdi-0x5aad541b],0x1ce39ddb
   14000dc37:	rex.RX and BYTE PTR [rbx],r14b
   14000dc3a:	test   BYTE PTR [rip+0xffffffffe9636e3d],0xd0        # 0x129644a7e
   14000dc41:	mov    ebp,0x55a876ab
   14000dc46:	push   rbp
   14000dc47:	adc    eax,0x8901274a
   14000dc4c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000dc4d:	(bad)  
   14000dc4e:	add    ah,al
   14000dc50:	xchg   esp,eax
   14000dc51:	jl     0x14000dc88
   14000dc53:	sub    edx,eax
   14000dc55:	sbb    bl,bh
   14000dc57:	fdivr  st(1),st
   14000dc59:	addr32 mov ds:0x623d8b4c,eax
   14000dc5f:	add    ebp,DWORD PTR [rsi+0x53]
   14000dc62:	and    dl,BYTE PTR [rax]
   14000dc64:	shl    DWORD PTR [rsi-0x73],cl
   14000dc67:	add    BYTE PTR [rsp+riz*8-0x4d53f32],cl
   14000dc6e:	fwait
   14000dc6f:	mov    bh,0x1
   14000dc71:	js     0x14000dc8c
   14000dc73:	(bad)  
   14000dc74:	(bad)  
   14000dc75:	(bad)  
   14000dc76:	clc    
   14000dc77:	or     DWORD PTR [rax],edi
   14000dc79:	sub    al,ch
   14000dc7b:	mov    ch,0xb3
   14000dc7d:	xchg   esp,eax
   14000dc7e:	in     eax,dx
   14000dc7f:	(bad)  
   14000dc80:	add    al,0x6e
   14000dc82:	fs lahf 
   14000dc84:	jns    0x14000dcb4
   14000dc86:	jae    0x14000dc47
   14000dc88:	movabs eax,ds:0x81f512fe96a4d3d6
   14000dc91:	sub    dl,BYTE PTR [rbp+0x5c2f6732]
   14000dc97:	mov    bx,0xd815
   14000dc9b:	xlat   BYTE PTR ds:[rbx]
   14000dc9c:	push   rbx
   14000dc9d:	(bad)
   14000dca1:	xor    dl,dl
   14000dca3:	iret   
   14000dca4:	sbb    eax,0xb81e938
   14000dca9:	or     BYTE PTR [rdi+riz*8],bl
   14000dcac:	pop    rbp
   14000dcad:	xor    eax,DWORD PTR [rsi+rcx*2]
   14000dcb0:	jbe    0x14000dc6d
   14000dcb2:	cmp    DWORD PTR [rsi],edi
   14000dcb4:	mov    ch,0x21
   14000dcb6:	in     al,dx
   14000dcb7:	mov    al,0x5d
   14000dcb9:	rex.WX movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000dcbb:	sbb    eax,edi
   14000dcbd:	rol    BYTE PTR [rax-0x23],cl
   14000dcc0:	add    al,0x64
   14000dcc2:	adc    DWORD PTR [rdx],edx
   14000dcc4:	sub    BYTE PTR [rcx+0x47e05ad1],dh
   14000dcca:	jg     0x14000dcc8
   14000dccc:	rex.WRXB cqo 
   14000dcce:	sahf   
   14000dccf:	outs   dx,BYTE PTR ds:[rsi]
   14000dcd0:	repnz cli 
   14000dcd2:	(bad)  
   14000dcd3:	out    dx,al
   14000dcd4:	in     al,0xd4
   14000dcd6:	test   eax,0x38990053
   14000dcdb:	hlt    
   14000dcdc:	and    dl,BYTE PTR [rip+0x40cc7ae0]        # 0x180cd57c2
   14000dce2:	rex.WX xor rax,0xffffffff81c0e08f
   14000dce8:	add    esi,esp
   14000dcea:	jp     0x14000dcfd
   14000dcec:	mov    edi,0x738f1bf2
   14000dcf1:	jmp    0xcde9f640
   14000dcf6:	adc    edi,0x0
   14000dcf9:	add    dh,ch
   14000dcfb:	cmp    al,0x52
   14000dcfd:	fdiv   DWORD PTR [rdx+rbx*2]
   14000dd00:	stos   BYTE PTR es:[rdi],al
   14000dd01:	js     0x14000dca9
   14000dd03:	repnz (bad) 
   14000dd05:	(bad)  
   14000dd06:	mov    DWORD PTR [rdi-0x61dd6e59],ecx
   14000dd0c:	cmp    BYTE PTR [rax],0x25
   14000dd0f:	cmp    ch,bl
   14000dd11:	adc    eax,0xfba7efb4
   14000dd16:	push   rdi
   14000dd17:	rex.W
   14000dd18:	rex.WRB movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000dd1a:	out    0x1d,al
   14000dd1c:	sar    DWORD PTR [rax-0x7a],cl
   14000dd1f:	xor    al,0x69
   14000dd21:	xchg   DWORD PTR [rbx-0x6a4e8bdc],eax
   14000dd27:	sub    al,0x5a
   14000dd29:	xor    BYTE PTR [rdi-0x12d14cd],dl
   14000dd2f:	or     dl,BYTE PTR [rbx+0x1061c82a]
   14000dd35:	rex.X or BYTE PTR [rdx],sil
   14000dd38:	jne    0x14000dd43
   14000dd3a:	repnz push 0xffffffffffffff80
   14000dd3d:	push   rsp
   14000dd3e:	cmc    
   14000dd3f:	add    BYTE PTR [rbx+0x1467bd44],dl
   14000dd45:	sub    DWORD PTR [rdi],0x22
   14000dd48:	xchg   edx,eax
   14000dd49:	and    al,0x24
   14000dd4b:	mov    ?,WORD PTR [rdx+0x78ee6581]
   14000dd51:	hlt    
   14000dd52:	cmp    al,0xcf
   14000dd54:	(bad)  
   14000dd55:	pop    rsp
   14000dd56:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000dd57:	iret   
   14000dd58:	and    eax,0x2d02ae00
   14000dd5d:	outs   dx,BYTE PTR ds:[rsi]
   14000dd5e:	movsxd edi,DWORD PTR [rbx-0x5f5ffb97]
   14000dd64:	mov    ebp,0xdf78219f
   14000dd69:	(bad)  
   14000dd6a:	nop
   14000dd6b:	lea    ecx,ds:[rbx]
   14000dd6e:	xor    BYTE PTR [rax+rbx*2+0x2d1d049],bl
   14000dd75:	adc    al,BYTE PTR [rsi]
   14000dd77:	(bad)  
   14000dd78:	fwait
   14000dd79:	rcr    DWORD PTR [rax-0x6faf6fd1],0x2d
   14000dd80:	gs push rdi
   14000dd82:	rex.WR sar BYTE PTR [rip+0x1c2dbf2f],0xc        # 0x15c2e9cb9
   14000dd8a:	mov    dl,0xbe
   14000dd8c:	outs   dx,BYTE PTR ds:[rsi]
   14000dd8d:	(bad)  
   14000dd8e:	push   0x1
   14000dd90:	xchg   esp,eax
   14000dd91:	cmp    BYTE PTR [rbx-0x1a],dh
   14000dd94:	sub    ah,BYTE PTR [rcx+0x37]
   14000dd97:	mov    al,0x1e
   14000dd99:	add    BYTE PTR [rax+0x5b],al
   14000dd9c:	jl     0x14000ddb1
   14000dd9e:	cmp    al,0x2f
   14000dda0:	rex.RX
   14000dda1:	es xchg edx,eax
   14000dda3:	xchg   edx,eax
   14000dda4:	xchg   esp,eax
   14000dda5:	js     0x14000dde8
   14000dda7:	or     cl,bl
   14000dda9:	mov    bl,0x44
   14000ddab:	rex.WRXB
   14000ddac:	data16 add BYTE PTR [rax*1+0x7a2277db],ah
   14000ddb4:	jae    0x14000dd65
   14000ddb6:	movabs ds:0xbde8b700ee752965,al
   14000ddbf:	sub    DWORD PTR [rax+0x5895d21],esp
   14000ddc5:	push   rax
   14000ddc6:	out    0xd2,al
   14000ddc8:	(bad)  
   14000ddc9:	pop    rcx
   14000ddca:	dec    BYTE PTR [rdi+0x7e39f67f]
   14000ddd0:	out    0xa7,al
   14000ddd2:	ds enter 0xe2e2,0x22
   14000ddd7:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000ddd8:	rex.WRXB lahf 
   14000ddda:	mov    dh,0x36
   14000dddc:	pushf  
   14000dddd:	and    ah,BYTE PTR [rbx]
   14000dddf:	lahf   
   14000dde0:	xchg   ecx,eax
   14000dde1:	pop    rdx
   14000dde2:	xlat   BYTE PTR ds:[rbx]
   14000dde3:	(bad)  
   14000dde4:	or     al,0xfd
   14000dde6:	jle    0x14000dd87
   14000dde8:	jp     0x14000dda7
   14000ddea:	(bad)  
   14000ddeb:	cld    
   14000ddec:	cld    
   14000dded:	cmp    al,0xbf
   14000ddef:	clc    
   14000ddf0:	lahf   
   14000ddf1:	mov    esi,0x6f4f13c8
   14000ddf6:	xchg   ebx,eax
   14000ddf7:	mov    BYTE PTR [rip+0x54cdfd0d],al        # 0x194cedb0a
   14000ddfd:	jno    0x14000dd88
   14000ddff:	rex.WR (bad) 
   14000de01:	fs or  al,0x89
   14000de04:	hlt    
   14000de05:	rex.W loop 0x14000de50
   14000de08:	gs int3 
   14000de0a:	mov    DWORD PTR [rdx-0x1e],esp
   14000de0d:	sub    dl,al
   14000de0f:	test   DWORD PTR [rdx],0x802654a4
   14000de15:	in     al,dx
   14000de16:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000de17:	fwait
   14000de18:	(bad)  
   14000de19:	call   0x14459015e
   14000de1e:	movabs al,ds:0x605aa168bf694c27
   14000de27:	push   rax
   14000de28:	mov    esi,0xb5e909e2
   14000de2d:	mov    ch,0x88
   14000de2f:	and    dl,bh
   14000de31:	rex.WB (bad) 
   14000de33:	pop    rdi
   14000de34:	cmp    al,ch
   14000de36:	and    bh,BYTE PTR [rbp-0x6c]
   14000de39:	retf   0x545a
   14000de3c:	mov    esp,0x200000
   14000de41:	rex.WB
   14000de42:	rex.R
   14000de43:	push   r12
   14000de45:	sbb    al,0x53
   14000de47:	(bad)
   14000de4a:	int    0x39
   14000de4c:	sbb    ch,al
   14000de4e:	rex.X and eax,0x8d258904
   14000de54:	pop    rdx
   14000de55:	lahf   
   14000de56:	mov    DWORD PTR [rcx+0xd817132],esi
   14000de5c:	shl    BYTE PTR [rbp-0x5c],0x3b
   14000de60:	mov    eax,0x7d024f00
   14000de65:	outs   dx,BYTE PTR ds:[rsi]
   14000de66:	movsxd ebx,ebx
   14000de68:	push   rbp
   14000de69:	ins    DWORD PTR es:[rdi],dx
   14000de6a:	rex and eax,edx
   14000de6d:	mov    edx,0x1801b1bd
   14000de72:	imul   esp,DWORD PTR [rsi+0x210f74e9],0x1c
   14000de79:	(bad)  
   14000de7a:	in     al,dx
   14000de7b:	cld    
   14000de7c:	rex.WB cqo 
   14000de7e:	pop    rdx
   14000de7f:	rex.RX ja 0x14000deb4
   14000de82:	mov    es,WORD PTR [rax+0x36]
   14000de85:	push   rdx
   14000de86:	or     eax,0xf20bd8c8
   14000de8b:	xlat   BYTE PTR ds:[rbx]
   14000de8c:	xor    eax,edi
   14000de8e:	in     eax,dx
   14000de8f:	push   rsi
   14000de90:	test   DWORD PTR [rdi],0x83063835
   14000de96:	add    DWORD PTR [rax-0x6b],ecx
   14000de99:	adc    al,0xd2
   14000de9b:	(bad)  
   14000de9c:	sbb    cl,BYTE PTR [rdi+0x8]
   14000de9f:	jl     0x14000df00
   14000dea1:	jo     0x14000de99
   14000dea3:	fsub   QWORD PTR [rsi]
   14000dea5:	sub    dl,BYTE PTR [rcx]
   14000dea7:	push   0x24b1c5b6
   14000deac:	or     al,0x63
   14000deae:	sub    BYTE PTR [rcx],al
   14000deb0:	adc    DWORD PTR [rsp-0x15eb85aa],edx
   14000deb7:	imul   dl
   14000deb9:	pop    rdi
   14000deba:	xchg   al,ch
   14000debc:	in     eax,dx
   14000debd:	mov    cl,0xe4
   14000debf:	mov    bh,0x39
   14000dec1:	sti    
   14000dec2:	jbe    0x14000df06
   14000dec4:	(bad)  
   14000dec5:	(bad)  
   14000dec6:	rex.WRB cmp r14b,r15b
   14000dec9:	outs   dx,BYTE PTR ds:[rsi]
   14000deca:	xor    eax,0x4c3a5a6
   14000decf:	rcl    ah,cl
   14000ded1:	ins    BYTE PTR es:[rdi],dx
   14000ded2:	mov    BYTE PTR [rdx],bl
   14000ded4:	(bad)  
   14000ded5:	xchg   esi,eax
   14000ded6:	(bad)  
   14000ded7:	stc    
   14000ded8:	(bad)  
   14000ded9:	lahf   
   14000deda:	cld    
   14000dedb:	add    edi,esi
   14000dedd:	in     eax,dx
   14000dede:	(bad)  
   14000dedf:	stc    
   14000dee0:	(bad)  
   14000dee1:	(bad)  
   14000dee2:	(bad)  
   14000dee3:	(bad)  
   14000dee4:	cmp    DWORD PTR [rbx-0x1a],esi
   14000dee7:	or     al,0xa5
   14000dee9:	push   rdx
   14000deea:	leave  
   14000deeb:	adc    bh,BYTE PTR [rbx-0x37745147]
   14000def1:	repnz fisttp DWORD PTR [rbp+0x3f]
   14000def5:	fwait
   14000def6:	cmp    al,BYTE PTR [rbp-0x1ee371b9]
   14000defc:	clc    
   14000defd:	rex.WXB out 0xf9,eax
   14000df00:	lods   eax,DWORD PTR ds:[rsi]
   14000df01:	fistp  QWORD PTR [rip+0xffffffffae3fbb46]        # 0xee409a4d
   14000df07:	xor    esp,DWORD PTR [rsi]
   14000df09:	push   rbp
   14000df0a:	pushf  
   14000df0b:	(bad)  
   14000df0d:	rex.WXB mov QWORD PTR [r10+0x47b1c45f],rsi
   14000df14:	adc    al,0xc5
   14000df16:	mov    DWORD PTR [rax],r12d
   14000df19:	mov    ah,BYTE PTR [rdx+0x3c]
   14000df1c:	(bad)  
   14000df1e:	rex.WRXB and BYTE PTR [rip+0xfffffffffd7c88df],r15b        # 0x13d7d6804
   14000df25:	ins    DWORD PTR es:[rdi],dx
   14000df26:	int    0xf9
   14000df28:	jns    0x14000df13
   14000df2a:	call   0x12035e3d1
   14000df2f:	mov    dl,0x99
   14000df31:	jle    0x14000df90
   14000df33:	(bad)  
   14000df34:	nop
   14000df35:	rex.X jnp 0x14000df35
   14000df38:	and    BYTE PTR ss:[rdx+rdi*8+0x11bb7681],bl
   14000df40:	ss stc 
   14000df42:	jnp    0x14000deea
   14000df44:	or     al,0x43
   14000df46:	mov    ecx,0x8e5af515
   14000df4b:	outs   dx,DWORD PTR ds:[rsi]
   14000df4c:	pop    rax
   14000df4d:	sbb    eax,DWORD PTR [rax+0x22]
   14000df50:	or     ebx,esp
   14000df52:	test   BYTE PTR [rax],bh
   14000df54:	xchg   BYTE PTR [rax],ah
   14000df56:	sbb    dl,dl
   14000df58:	push   0x76644834
   14000df5d:	and    dl,BYTE PTR [rax-0x30c2d7d5]
   14000df63:	movabs ds:0xef7ccf001917efdf,eax
   14000df6c:	idiv   DWORD PTR [rsi-0x11]
   14000df6f:	(bad)  
   14000df70:	(bad)  
   14000df71:	jno    0x14000df7e
   14000df73:	fisubr DWORD PTR [rsi-0x4e]
   14000df76:	add    dl,BYTE PTR [rdi+0x6ad494a5]
   14000df7c:	or     eax,0x8652a54a
   14000df81:	test   al,0x5c
   14000df83:	or     ebx,0xffffffc8
   14000df86:	(bad)  
   14000df87:	xor    bh,BYTE PTR [rbx-0x7c]
   14000df8a:	sbb    eax,DWORD PTR [rbx+rdx*4]
   14000df8d:	test   DWORD PTR [rsi-0x1a],eax
   14000df90:	mov    bh,0x68
   14000df92:	cmp    ebp,DWORD PTR [rax-0x6ebae73f]
   14000df98:	std    
   14000df99:	sub    ebp,DWORD PTR [rdx]
   14000df9b:	rex.W mov cl,0xd3
   14000df9e:	xor    eax,0xc6a5d68a
   14000dfa3:	jrcxz  0x14000dfa8
   14000dfa5:	std    
   14000dfa6:	adc    DWORD PTR [rsp+rax*2],edx
   14000dfa9:	(bad)  
   14000dfaa:	sub    DWORD PTR [rdi-0xd1ccb8c],ebp
   14000dfb0:	mov    ecx,0xc8ca880e
   14000dfb5:	rex.RXB push r15
   14000dfb7:	iret   
   14000dfb8:	movabs ds:0xb003d6eb26c98090,eax
   14000dfc1:	jg     0x14000df89
   14000dfc3:	(bad)  
   14000dfc4:	rex.WR
   14000dfc5:	rex.WX int3 
   14000dfc7:	es (bad) 
   14000dfc9:	jl     0x14000dfed
   14000dfcb:	adc    ecx,DWORD PTR [rbx-0x4]
   14000dfce:	data16 (bad) 
   14000dfd0:	movabs eax,ds:0x34f6e9b5cc9897dd
   14000dfd9:	repnz (bad) 
   14000dfdb:	push   rcx
   14000dfdc:	and    eax,0xc1084246
   14000dfe1:	rex.WRX jnp 0x14000e019
   14000dfe4:	sti    
   14000dfe5:	lods   al,BYTE PTR ds:[rsi]
   14000dfe6:	or     DWORD PTR [rcx-0x74],esi
   14000dfe9:	addr32 pop rsi
   14000dfeb:	test   al,0xf2
   14000dfed:	(bad)  
   14000dfee:	dec    cl
   14000dff0:	out    dx,eax
   14000dff1:	push   rdx
   14000dff2:	test   eax,0x999999d4
   14000dff7:	mov    cl,0x73
   14000dff9:	xor    edx,DWORD PTR [rdx+0x59c6b124]
   14000dfff:	add    edx,ecx
   14000e001:	frstor [rbp-0x6d]
   14000e004:	rol    esi,1
   14000e006:	hlt    
   14000e007:	jge    0x14000dfc0
   14000e009:	(bad)  [rbp+0x7e]
   14000e00c:	jle    0x14000dfac
   14000e00e:	push   0xffffffffffffffb5
   14000e010:	(bad)  
   14000e011:	(bad)  
   14000e012:	(bad)  
   14000e013:	ficom  DWORD PTR [rdi+0x59]
   14000e016:	mov    esi,0xa93783e8
   14000e01b:	sbb    BYTE PTR [rax+0x49e7e928],al
   14000e021:	push   rdx
   14000e022:	jmp    0x1239823d2
   14000e027:	cmp    BYTE PTR [rcx],ah
   14000e029:	xchg   ebx,eax
   14000e02a:	movabs eax,ds:0x365efb63f8b93637
   14000e033:	shr    DWORD PTR [rsi+0x271bd4ce],cl
   14000e039:	or     DWORD PTR [rcx],ecx
   14000e03b:	xchg   edx,eax
   14000e03c:	pop    rax
   14000e03d:	rex.WX (bad) 
   14000e03f:	cdq    
   14000e040:	call   0xc6fa07a4
   14000e045:	in     eax,dx
   14000e046:	lahf   
   14000e047:	jl     0x14000e0b6
   14000e049:	xchg   BYTE PTR [rbp+rdx*8+0x5c],al
   14000e04d:	mov    bl,dl
   14000e04f:	mov    esi,0x9bf6734c
   14000e054:	test   eax,0x23ab52bb
   14000e059:	(bad)  
   14000e05a:	xor    esi,ecx
   14000e05c:	mov    ch,0xd4
   14000e05e:	ja     0x14000dff2
   14000e060:	fnstcw WORD PTR [rbp+0x3a]
   14000e063:	shl    DWORD PTR [rax+0x3afacb34],cl
   14000e069:	retf   0xa9cd
   14000e06c:	scas   al,BYTE PTR es:[rdi]
   14000e06d:	sub    esp,DWORD PTR [rdi+rcx*1+0x4f]
   14000e071:	enter  0x6a0c,0x73
   14000e075:	fwait
   14000e076:	leave  
   14000e077:	movabs eax,ds:0xf3c0e5e5bc1083b1
   14000e080:	ins    DWORD PTR es:[rdi],dx
   14000e081:	(bad)  
   14000e082:	or     BYTE PTR [rax-0x7efbdada],ah
   14000e088:	scas   eax,DWORD PTR es:[rdi]
   14000e089:	imul   eax,DWORD PTR [rbx],0x1a
   14000e08c:	add    dh,bh
   14000e08e:	xor    al,0x2
   14000e090:	push   rax
   14000e091:	cmc    
   14000e092:	repnz xchg edx,eax
   14000e094:	sbb    DWORD PTR [rdx],r8d
   14000e097:	push   rbx
   14000e098:	adc    eax,0xddb52b20
   14000e09d:	mov    edi,0xccfa18dd
   14000e0a2:	mov    edx,0x144133f9
   14000e0a7:	stc    
   14000e0a8:	jnp    0x14000e0be
   14000e0aa:	jo     0x14000e081
   14000e0ac:	xchg   ecx,eax
   14000e0ad:	jmp    0x14000e047
   14000e0af:	ins    DWORD PTR es:[rdi],dx
   14000e0b0:	std    
   14000e0b1:	jle    0x14000e0f2
   14000e0b3:	xchg   ebp,eax
   14000e0b4:	jo     0x14000e0b0
   14000e0b6:	mov    edx,0x890952e5
   14000e0bb:	loopne 0x14000e0b9
   14000e0bd:	test   DWORD PTR [rsi],ecx
   14000e0bf:	mov    BYTE PTR [rdx],bh
   14000e0c1:	pop    rcx
   14000e0c2:	mov    ebp,0xc344b54f
   14000e0c7:	(bad)  
   14000e0c8:	sub    BYTE PTR [rdx-0x666afce8],dl
   14000e0ce:	add    al,0x95
   14000e0d0:	rex.X jp 0x14000e0c8
   14000e0d3:	fisttp WORD PTR [rsi+0x30]
   14000e0d6:	pop    rdi
   14000e0d7:	rex.WX jnp 0x14000e06e
   14000e0da:	and    eax,0x32faf480
   14000e0df:	jae    0x14000e06d
   14000e0e1:	rex.WXB jrcxz 0x14000e0bd
   14000e0e4:	(bad)  
   14000e0e5:	mov    DWORD PTR [rbp+0x32d07b],edx
   14000e0eb:	ins    DWORD PTR es:[rdi],dx
   14000e0ec:	(bad)  
   14000e0ed:	mov    al,0xd7
   14000e0ef:	cmp    dh,BYTE PTR ss:[rcx]
   14000e0f2:	and    al,0x4c
   14000e0f4:	repnz vminsd xmm12,xmm8,xmm3
   14000e0f9:	(bad)  
   14000e0fa:	(bad)  
   14000e0fb:	(bad)  
   14000e0fc:	out    dx,eax
   14000e0fd:	repz (bad) 
   14000e0ff:	jmp    rcx
   14000e101:	ja     0x14000e0d3
   14000e103:	in     eax,dx
   14000e104:	jbe    0x14000e15f
   14000e106:	pop    rbx
   14000e107:	pop    rbx
   14000e108:	movabs ds:0x701d5749308f2e5c,eax
   14000e111:	adc    eax,eax
   14000e113:	(bad)  
   14000e114:	xor    BYTE PTR [rax-0xf8cd1a4],ah
   14000e11a:	loopne 0x14000e15d
   14000e11c:	repz fldenv ds:[rdi+0x78]
   14000e121:	in     al,0xcb
   14000e123:	xchg   edi,eax
   14000e124:	mov    BYTE PTR [rdx-0x74085afb],dl
   14000e12a:	sbb    bl,BYTE PTR [rcx-0x23]
   14000e12d:	pop    rdx
   14000e12e:	cmc    
   14000e12f:	mov    edx,DWORD PTR [rdx+rbp*1-0x6405dd31]
   14000e136:	(bad)
   14000e139:	(bad)  
   14000e13a:	outs   dx,DWORD PTR ds:[rsi]
   14000e13b:	mov    esp,0xaf83369a
   14000e140:	cmp    DWORD PTR [rdi-0x11],edx
   14000e143:	adc    BYTE PTR [rdx+0x1b],al
   14000e146:	gs popf 
   14000e148:	retf   
   14000e149:	fidivr DWORD PTR [rsi+0x5c392936]
   14000e14f:	fcomp  DWORD PTR [rsi+0x17d08a2]
   14000e155:	sti    
   14000e156:	out    dx,al
   14000e157:	(bad)  
   14000e158:	(bad)  
   14000e159:	xchg   ebp,eax
   14000e15a:	in     al,0x5c
   14000e15c:	(bad)  
   14000e15d:	rex.X and esp,DWORD PTR [rdi-0x199263c]
   14000e164:	(bad)  
   14000e165:	mov    esi,0x1d0ff98e
   14000e16a:	xlat   BYTE PTR ds:[rbx]
   14000e16b:	nop
   14000e16c:	jp     0x14000e16f
   14000e16e:	loop   0x14000e1b8
   14000e170:	adc    al,BYTE PTR [rdi+0x43133331]
   14000e176:	add    bl,BYTE PTR [rdi+0x31]
   14000e179:	(bad)  
   14000e17a:	and    ah,cl
   14000e17c:	push   rbx
   14000e17d:	sub    dl,BYTE PTR [rbp+0x2eb34ec]
   14000e183:	jnp    0x14000e15c
   14000e185:	out    0xc8,al
   14000e187:	(bad)  
   14000e188:	mov    esi,0xa626edc5
   14000e18d:	add    ecx,DWORD PTR [rbx]
   14000e18f:	cmp    al,0xcf
   14000e191:	mov    bh,0x7a
   14000e193:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e194:	jmp    0x14000e158
   14000e196:	push   rcx
   14000e197:	cmc    
   14000e198:	add    dl,bl
   14000e19a:	(bad)  
   14000e19b:	push   rsp
   14000e19c:	fnsave fs:[rdi-0x5f]
   14000e1a0:	out    0xf5,al
   14000e1a2:	or     al,0x7e
   14000e1a4:	out    0x1c,al
   14000e1a6:	(bad)  
   14000e1a7:	ds cdq 
   14000e1a9:	ins    DWORD PTR es:[rdi],dx
   14000e1aa:	out    dx,al
   14000e1ab:	cmc    
   14000e1ac:	fsubr  st(6),st
   14000e1ae:	sbb    dl,BYTE PTR [rbx]
   14000e1b0:	(bad)  
   14000e1b2:	mov    ss,WORD PTR [ebx]
   14000e1b5:	retf   0x67dd
   14000e1b8:	mov    ah,BYTE PTR [rdi+0x78]
   14000e1bb:	jno    0x14000e149
   14000e1bd:	adc    al,0x6a
   14000e1bf:	pop    rsi
   14000e1c0:	rex lods eax,DWORD PTR ds:[rsi]
   14000e1c2:	pop    rsi
   14000e1c3:	movabs ds:0x174eb68ebeb01ddb,eax
   14000e1cc:	jae    0x14000e240
   14000e1ce:	rex.RB movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e1d0:	test   eax,0x8613c9fb
   14000e1d5:	(bad)  
   14000e1d6:	shl    bh,cl
   14000e1d8:	xchg   BYTE PTR [rdx],ah
   14000e1da:	movabs ds:0xb35479bfa5e347cf,al
   14000e1e3:	ret    
   14000e1e4:	(bad)  
   14000e1e5:	mov    esp,ebx
   14000e1e7:	add    esp,0x59
   14000e1ea:	cmp    eax,0x1d192455
   14000e1ef:	cmp    DWORD PTR [rip+0xffffffff99288279],eax        # 0xd929646e
   14000e1f5:	out    0x77,al
   14000e1f7:	ds jae 0x14000e17f
   14000e1fa:	(bad)  
   14000e1fc:	iret   
   14000e1fd:	repz (bad) 
   14000e1ff:	inc    edi
   14000e201:	ja     0x14000e1d4
   14000e203:	outs   dx,BYTE PTR ds:[rsi]
   14000e204:	mov    bh,0xe9
   14000e206:	je     0x14000e242
   14000e208:	(bad)  
   14000e209:	push   0xffffffffffffffb5
   14000e20b:	adc    DWORD PTR [rbp-0x37e6c0c1],edi
   14000e211:	and    BYTE PTR [rbp-0x64411045],al
   14000e217:	or     edx,DWORD PTR [rdi+0x4ff5f8b6]
   14000e21d:	cmp    eax,0x9a776c3
   14000e222:	movabs ds:0x942f338063a519a1,al
   14000e22b:	rex.W pop rbp
   14000e22d:	sti    
   14000e22e:	push   rsp
   14000e22f:	or     DWORD PTR [rsi+0x28a720d8],eax
   14000e235:	not    BYTE PTR es:[rax+0xe]
   14000e239:	or     al,0xd5
   14000e23b:	jnp    0x14000e233
   14000e23d:	sbb    DWORD PTR [rip+0xffffffffc6e3a731],ecx        # 0x106e48974
   14000e243:	xor    DWORD PTR [rdx+riz*2-0x55e98220],esi
   14000e24a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e24b:	jrcxz  0x14000e1da
   14000e24d:	int3   
   14000e24e:	mov    cl,0xe9
   14000e250:	mov    esi,0x96dabaec
   14000e255:	push   rbp
   14000e256:	xor    esi,DWORD PTR [rdx]
   14000e258:	jp     0x14000e219
   14000e25a:	jp     0x14000e1dd
   14000e25c:	int3   
   14000e25d:	(bad)  
   14000e25e:	stos   DWORD PTR es:[rdi],eax
   14000e25f:	push   rbp
   14000e260:	call   0x1b5466bd2
   14000e265:	retf   0xafff
   14000e268:	xchg   edx,eax
   14000e269:	xor    esp,0x93677239
   14000e26f:	push   0xffffffffffffffb5
   14000e271:	rex.WR scas rax,QWORD PTR es:[rdi]
   14000e273:	scas   eax,DWORD PTR es:[rdi]
   14000e274:	adc    ch,BYTE PTR [rcx+0x7a01f3e4]
   14000e27a:	sahf   
   14000e27b:	rex.RXB stos DWORD PTR es:[rdi],eax
   14000e27d:	(bad)  
   14000e27e:	sbb    dh,BYTE PTR [rcx+0x1]
   14000e281:	(bad)  
   14000e282:	mov    dh,0x91
   14000e284:	fbstp  TBYTE PTR [rax-0x55]
   14000e287:	fisttp DWORD PTR [rbp+0x5]
   14000e28a:	add    ah,BYTE PTR [rbp+0x2e044185]
   14000e290:	or     eax,0xc698292b
   14000e295:	test   al,0x1b
   14000e297:	(bad)  
   14000e298:	imul   ebx,DWORD PTR [rdx-0x6f],0x7
   14000e29c:	movabs al,ds:0xb88973d864ef6a48
   14000e2a5:	mov    BYTE PTR [rax+0x172c06f3],dh
   14000e2ab:	and    DWORD PTR [rax+0x3601061e],edi
   14000e2b1:	push   fs
   14000e2b3:	jno    0x14000e2b8
   14000e2b5:	or     cl,bh
   14000e2b7:	and    ecx,DWORD PTR [rdx+0x3a8dea63]
   14000e2bd:	fucomp st(6)
   14000e2bf:	nop
   14000e2c0:	outs   dx,BYTE PTR ds:[rsi]
   14000e2c1:	mov    edi,0xd3ff085a
   14000e2c6:	addr32 push rdx
   14000e2c8:	nop
   14000e2c9:	(bad)
   14000e2cd:	rex.W
   14000e2ce:	rex.WRXB icebp 
   14000e2d0:	mov    edi,DWORD PTR [rbx+rdi*8-0x76190332]
   14000e2d7:	fist   DWORD PTR [rbp-0x21028616]
   14000e2dd:	cmp    eax,0xa99a86f7
   14000e2e2:	in     al,dx
   14000e2e3:	movsxd edi,DWORD PTR [rbx]
   14000e2e5:	add    ch,BYTE PTR [rdi+rsi*2+0x501de300]
   14000e2ec:	(bad)  
   14000e2ed:	or     al,0xe3
   14000e2ef:	pop    rcx
   14000e2f0:	jle    0x14000e2db
   14000e2f2:	(bad)  
   14000e2f3:	lahf   
   14000e2f4:	in     eax,0xce
   14000e2f6:	cmp    ebx,DWORD PTR [rsi-0x4090621b]
   14000e2fc:	xchg   DWORD PTR [rdi],esp
   14000e2fe:	lahf   
   14000e2ff:	jl     0x14000e293
   14000e301:	outs   dx,BYTE PTR ds:[rsi]
   14000e302:	mov    bh,0x4b
   14000e304:	test   eax,0x2831da54
   14000e309:	rex.W
   14000e30a:	rex.WX adc rax,0x3f3f33f0
   14000e310:	iret   
   14000e311:	(bad)  
   14000e312:	(bad)  
   14000e313:	and    al,0xff
   14000e315:	idiv   bh
   14000e317:	(bad)  
   14000e318:	pop    rbp
   14000e319:	mov    ?,WORD PTR [rbp+0x57b2403c]
   14000e31f:	(bad)  
   14000e320:	std    
   14000e321:	mov    eax,0x3cd8815
   14000e326:	sbb    BYTE PTR [rax],ah
   14000e328:	xchg   edx,eax
   14000e329:	call   0x1891f06c8
   14000e32e:	in     al,dx
   14000e32f:	pop    rcx
   14000e330:	push   rbp
   14000e331:	mov    DWORD PTR es:[rbx],edx
   14000e334:	push   rsp
   14000e335:	outs   dx,DWORD PTR ds:[rsi]
   14000e336:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000e337:	jbe    0x14000e35c
   14000e339:	push   rbx
   14000e33a:	sub    DWORD PTR [rcx],edi
   14000e33c:	sbb    eax,0x445b0213
   14000e341:	push   rbp
   14000e342:	test   al,0x80
   14000e344:	(bad)  
   14000e345:	imul   esi,esp,0xef8e8cf5
   14000e34b:	(bad)  
   14000e34c:	outs   dx,DWORD PTR ds:[rsi]
   14000e34d:	rol    BYTE PTR [rax-0x66f6a3df],1
   14000e353:	movabs al,ds:0x18e1607ee0d6d722
   14000e35c:	(bad)  
   14000e35d:	xor    ebx,DWORD PTR [rbp+0x199aaeab]
   14000e363:	movabs ds:0xe2821351155a2412,eax
   14000e36c:	add    al,0x92
   14000e36e:	js     0x14000e330
   14000e370:	(bad)  
   14000e371:	rex.R (bad) 
   14000e373:	(bad)  
   14000e374:	movabs eax,ds:0xe73eababc66d861b
   14000e37d:	fwait
   14000e37e:	adc    dl,ah
   14000e380:	mov    dh,0x94
   14000e382:	add    esi,DWORD PTR [rbx-0x25]
   14000e385:	rex.WRB movabs r10,0xec98e462cbf9dd01
   14000e38f:	jb     0x14000e3e7
   14000e391:	add    eax,0xf29a1bc8
   14000e396:	sub    BYTE PTR [rax-0x49],ah
   14000e399:	mov    esi,0x1d15b77c
   14000e39e:	jrcxz  0x14000e3ee
   14000e3a0:	lea    esi,[rbp+0x19]
   14000e3a3:	sub    DWORD PTR [rcx+0x10e8400],0x4c8c7116
   14000e3ad:	adc    ch,dl
   14000e3af:	mov    ch,0x1a
   14000e3b1:	pop    rbx
   14000e3b2:	popf   
   14000e3b3:	nop
   14000e3b4:	pop    rsi
   14000e3b5:	mov    edi,0xd7d4ea94
   14000e3ba:	push   0x69034066
   14000e3bf:	jp     0x14000e3be
   14000e3c1:	sbb    eax,0xbafd5b88
   14000e3c6:	(bad)  
   14000e3c7:	sub    eax,0x29b8732d
   14000e3cc:	ret    0x3ccf
   14000e3cf:	rex.W add al,dl
   14000e3d2:	push   rbp
   14000e3d3:	(bad)  
   14000e3d4:	shl    BYTE PTR [rcx+rdi*4],0xcc
   14000e3d8:	(bad)  
   14000e3d9:	cld    
   14000e3da:	adc    BYTE PTR [rbx+rdi*2-0x403b038d],dh
   14000e3e1:	jle    0x14000e365
   14000e3e3:	add    edi,ebx
   14000e3e5:	div    DWORD PTR [rax-0x21]
   14000e3e8:	jge    0x14000e3e1
   14000e3ea:	icebp  
   14000e3eb:	in     al,0x93
   14000e3ed:	rex.WRXB adc r8b,BYTE PTR [r13-0x6f]
   14000e3f1:	or     eax,0xa77fca88
   14000e3f6:	loope  0x14000e468
   14000e3f8:	test   rax,0xffffffffa1d0e254
   14000e3fe:	cmp    edi,eax
   14000e400:	mov    ebp,0xe7c53ccf
   14000e405:	mov    esi,0xd9289178
   14000e40a:	add    edi,DWORD PTR [rsi+0x53]
   14000e40d:	(bad)  [rcx+0x24]
   14000e410:	rex.WXB mov QWORD PTR fs:[r11+0x49df4807],rbx
   14000e418:	push   0xffffffffffffffc6
   14000e41a:	sbb    al,0x27
   14000e41c:	sahf   
   14000e41d:	(bad)  
   14000e41e:	mov    ebx,0xc55488d
   14000e423:	(bad)  
   14000e424:	pop    rax
   14000e425:	clc    
   14000e426:	test   eax,edx
   14000e428:	sahf   
   14000e429:	and    al,0xe9
   14000e42b:	mov    gs,WORD PTR [rip+0xffffffff9e44263d]        # 0xde450a6e
   14000e431:	lock push rbp
   14000e433:	lods   eax,DWORD PTR ds:[rsi]
   14000e434:	(bad)  
   14000e435:	(bad)  
   14000e436:	sbb    DWORD PTR [rdi-0x2f4afb35],ebp
   14000e43c:	add    ch,cl
   14000e43e:	adc    ah,dh
   14000e440:	sti    
   14000e441:	or     BYTE PTR [rcx-0x1744f67a],dl
   14000e447:	outs   dx,BYTE PTR ds:[rsi]
   14000e448:	(bad)  
   14000e449:	cmc    
   14000e44a:	xor    DWORD PTR [rbp+0x7],edx
   14000e44d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e44e:	sti    
   14000e44f:	rex.WX push rsi
   14000e451:	cli    
   14000e452:	mov    ebx,0x39130af5
   14000e457:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e458:	push   rdx
   14000e459:	icebp  
   14000e45a:	rex.RX mov esi,0x529659b9
   14000e460:	rex.RB cdq 
   14000e462:	(bad)  
   14000e463:	add    r10b,r13b
   14000e466:	cmc    
   14000e467:	fucomi st,st(2)
   14000e469:	add    al,BYTE PTR [rbx+rbx*4-0x11cbfb74]
   14000e470:	cmp    eax,0xaccc40e1
   14000e475:	xchg   esp,eax
   14000e476:	push   rbp
   14000e477:	popf   
   14000e478:	out    dx,eax
   14000e479:	sti    
   14000e47a:	pop    rsi
   14000e47b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e47c:	xor    BYTE PTR [rax+0x648cb83b],cl
   14000e482:	jbe    0x14000e459
   14000e484:	add    DWORD PTR [rdi-0xb4d89ad],esi
   14000e48a:	out    dx,eax
   14000e48b:	mov    ah,0xe
   14000e48d:	mov    WORD PTR [rax-0x2a],?
   14000e490:	and    dl,BYTE PTR [rbp+0x28db42c1]
   14000e496:	rcl    BYTE PTR [rbp-0x187bec83],cl
   14000e49c:	imul   eax,esp,0x358c682c
   14000e4a2:	cmp    BYTE PTR [rcx+0x2f41857c],bh
   14000e4a8:	rex jmp 0x157c4cb51
   14000e4ae:	sub    esp,edx
   14000e4b0:	xor    al,BYTE PTR [rcx+0x23a01518]
   14000e4b6:	gs xchg esi,eax
   14000e4b8:	cdq    
   14000e4b9:	gs sub eax,0x7cbaa3ff
   14000e4bf:	jbe    0x14000e441
   14000e4c1:	pop    rsp
   14000e4c2:	movabs ds:0x3605def2d9b46ff3,eax
   14000e4cb:	add    ebx,ecx
   14000e4cd:	add    al,0x24
   14000e4cf:	loopne 0x14000e484
   14000e4d1:	mov    dl,0x36
   14000e4d3:	ret    
   14000e4d4:	(bad)  
   14000e4d5:	jg     0x14000e4cb
   14000e4d7:	repz cld 
   14000e4d9:	(bad)  
   14000e4da:	(bad)  
   14000e4db:	mul    DWORD PTR [rcx+0x1e]
   14000e4de:	jl     0x14000e4d0
   14000e4e0:	rex.B sahf 
   14000e4e2:	js     0x14000e4c6
   14000e4e4:	or     DWORD PTR [rsi],eax
   14000e4e6:	add    DWORD PTR [rcx],0xffffffb5
   14000e4e9:	pop    rdx
   14000e4ea:	or     eax,0x3094d548
   14000e4ef:	or     al,0x19
   14000e4f1:	(bad)  
   14000e4f2:	xchg   esp,ebx
   14000e4f4:	jae    0x14000e4c5
   14000e4f6:	cmp    eax,0xceb73d9c
   14000e4fb:	scas   eax,DWORD PTR es:[rdi]
   14000e4fc:	inc    dh
   14000e4fe:	xchg   ebx,eax
   14000e4ff:	ins    BYTE PTR es:[rdi],dx
   14000e500:	mov    bh,0x1b
   14000e502:	and    BYTE PTR [rdx-0x40ecb2c0],bl
   14000e508:	jle    0x14000e4bb
   14000e50a:	mov    esp,0x886ad554
   14000e50f:	and    dl,BYTE PTR [rsi]
   14000e511:	in     eax,0x16
   14000e513:	push   rsp
   14000e514:	add    BYTE PTR ss:[rcx-0x1c],al
   14000e518:	or     DWORD PTR [rdx],eax
   14000e51a:	popf   
   14000e51b:	xor    ecx,edi
   14000e51d:	data16 (bad) 
   14000e51f:	adc    al,BYTE PTR [rdx]
   14000e521:	xor    dl,al
   14000e523:	cmp    al,0x15
   14000e525:	and    BYTE PTR [rsi-0x2ce95aa0],al
   14000e52b:	mov    dh,al
   14000e52d:	lea    eax,[rbp+0x4ba3c4de]
   14000e533:	jnp    0x14000e5b1
   14000e535:	rex.RX pop rsi
   14000e537:	cmp    ebp,ebx
   14000e539:	(bad)  
   14000e53a:	fistp  WORD PTR [rdi-0x18]
   14000e53d:	gs sub al,bl
   14000e540:	outs   dx,BYTE PTR ds:[rsi]
   14000e541:	lahf   
   14000e542:	rex.RXB
   14000e543:	fs pop rdi
   14000e545:	sub    eax,0xcf4d0231
   14000e54a:	add    al,0xc
   14000e54c:	movabs eax,ds:0x618338e0ebb98b59
   14000e555:	mov    cl,0x7
   14000e557:	sar    BYTE PTR [rdi+rbp*2+0x33],0x3f
   14000e55c:	and    edi,DWORD PTR [rbx+0x7f]
   14000e55f:	rex.X outs dx,BYTE PTR ds:[rsi]
   14000e561:	push   rbx
   14000e562:	cmp    eax,0x4ddb740
   14000e567:	add    eax,DWORD PTR [rax]
   14000e569:	iret   
   14000e56a:	or     esi,esp
   14000e56c:	push   rsp
   14000e56d:	(bad)  
   14000e56e:	ja     0x14000e59e
   14000e570:	and    BYTE PTR [rcx+0xe],0xa9
   14000e574:	(bad)  
   14000e575:	lods   al,BYTE PTR ds:[rsi]
   14000e576:	out    0x2,al
   14000e578:	push   rsp
   14000e579:	in     eax,dx
   14000e57a:	jle    0x14000e553
   14000e57c:	rcl    BYTE PTR [rdi+rdx*4-0xccf7902],0x2a
   14000e584:	or     DWORD PTR [rbx-0x14],0xb7770279
   14000e58b:	out    0x91,eax
   14000e58d:	ret    
   14000e58e:	rex.WRX (bad) 
   14000e590:	or     ah,BYTE PTR [rcx]
   14000e592:	adc    BYTE PTR [rsi+0x1bf9f2a7],bl
   14000e598:	enter  0x7fab,0x7d
   14000e59c:	fbld   TBYTE PTR [rdi+0x72]
   14000e59f:	jb     0x14000e52b
   14000e5a1:	int    0xcd
   14000e5a3:	out    0x29,eax
   14000e5a5:	jns    0x14000e5ee
   14000e5a7:	rex.WB (bad) 
   14000e5a9:	ds (bad) 
   14000e5ab:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e5ac:	rex push rsi
   14000e5ae:	xchg   r14d,eax
   14000e5b0:	rcl    BYTE PTR [rdi-0x1938a5e6],0xa2
   14000e5b7:	or     rsi,QWORD PTR [rcx-0x6b]
   14000e5bb:	xor    eax,0xdc408b39
   14000e5c0:	sti    
   14000e5c1:	out    0xa5,al
   14000e5c3:	jmp    FWORD PTR [rip+0x25db5268]        # 0x165dc3831
   14000e5c9:	rex.RX cwde 
   14000e5cb:	or     BYTE PTR [rax-0x2b],0x1
   14000e5cf:	or     ecx,edi
   14000e5d1:	sub    ebx,DWORD PTR [rdi+rdi*1]
   14000e5d4:	push   rcx
   14000e5d5:	out    0xef,eax
   14000e5d7:	(bad)  
   14000e5d8:	outs   dx,DWORD PTR ds:[rsi]
   14000e5d9:	mov    edi,0xf3fe4fc5
   14000e5de:	psllw  mm6,mm0
   14000e5e1:	ret    
   14000e5e2:	psllq  mm3,mm4
   14000e5e5:	jae    0x14000e5b6
   14000e5e7:	jno    0x14000e5de
   14000e5e9:	(bad)  
   14000e5ea:	push   rbp
   14000e5eb:	and    ch,cl
   14000e5ed:	and    eax,0x771e79e0
   14000e5f2:	fistp  QWORD PTR [rbp+0x37]
   14000e5f5:	xor    esi,DWORD PTR [rbx]
   14000e5f7:	repz cld 
   14000e5f9:	int3   
   14000e5fa:	mov    edi,0x9c4e4dff
   14000e5ff:	mov    ss,WORD PTR [rcx-0x2a5665e]
   14000e605:	push   rbp
   14000e606:	(bad)  
   14000e607:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e608:	(bad)  
   14000e609:	push   0x5be8fdd
   14000e60e:	(bad)  
   14000e60f:	ror    BYTE PTR [rbx+0x74],cl
   14000e612:	sub    al,0x80
   14000e614:	sub    bl,BYTE PTR [rbx-0x6eceb8e3]
   14000e61a:	(bad)  
   14000e61b:	hlt    
   14000e61c:	sahf   
   14000e61d:	adc    al,0x8e
   14000e61f:	jle    0x14000e68e
   14000e621:	(bad)  
   14000e622:	(bad)  
   14000e623:	rex.RX push rbp
   14000e625:	xchg   edi,eax
   14000e626:	clc    
   14000e627:	lods   al,BYTE PTR ds:[rsi]
   14000e628:	xchg   edx,eax
   14000e629:	out    dx,al
   14000e62a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000e62b:	mov    bh,0xb2
   14000e62d:	rex.B (bad) 
   14000e62f:	imul   edi,DWORD PTR [rcx+rcx*4+0x2b],0x822af294
   14000e637:	add    al,BYTE PTR [rdx]
   14000e639:	mov    ?,esp
   14000e63b:	mov    bh,0xaa
   14000e63d:	cmp    bl,0x51
   14000e640:	push   rdx
   14000e641:	fild   DWORD PTR [rbx+0x26]
   14000e644:	(bad)  
   14000e645:	movabs al,ds:0x6d2006d6a4fb2e7e
   14000e64e:	xor    eax,0x98f189a0
   14000e653:	mov    ebp,0xb0a20df3
   14000e658:	push   rdi
   14000e659:	clc    
   14000e65a:	jns    0x14000e5e8
   14000e65c:	shr    BYTE PTR [rbx-0x4b],0x5a
   14000e660:	sbb    DWORD PTR [rsp+rbp*4+0x156c045b],esp
   14000e667:	sahf   
   14000e668:	js     0x14000e675
   14000e66a:	fisttp DWORD PTR [rbp+0x4c]
   14000e66d:	(bad)  
   14000e66e:	div    BYTE PTR [rsp+rcx*2]
   14000e671:	xor    ebx,DWORD PTR [rax+rdi*1-0x55]
   14000e675:	rex.RXB (bad) 
   14000e677:	(bad)  
   14000e678:	push   rbp
   14000e679:	pop    rcx
   14000e67a:	rex.W sahf 
   14000e67c:	ja     0x14000e66d
   14000e67e:	in     eax,0xd
   14000e680:	jne    0x14000e6e8
   14000e682:	jg     0x14000e695
   14000e684:	and    dh,BYTE PTR [rax-0x51]
   14000e687:	jae    0x14000e6b6
   14000e689:	clc    
   14000e68a:	lahf   
   14000e68b:	addr32 sbb cl,bh
   14000e68e:	jae    0x14000e6cd
   14000e690:	and    DWORD PTR [rax-0x15f5d55c],ecx
   14000e696:	stc    
   14000e697:	mov    esi,0x84920752
   14000e69c:	pop    rdx
   14000e69d:	lods   eax,DWORD PTR ds:[rsi]
   14000e69e:	rex.RX pushf 
   14000e6a0:	or     BYTE PTR [rsi-0x203426e4],cl
   14000e6a6:	stc    
   14000e6a7:	fwait
   14000e6a8:	sti    
   14000e6a9:	pop    rcx
   14000e6aa:	ds jnp 0x14000e646
   14000e6ad:	in     eax,0xe5
   14000e6af:	jrcxz  0x14000e70d
   14000e6b1:	pop    rdx
   14000e6b2:	test   eax,0xa355beb0
   14000e6b7:	(bad)  
   14000e6b8:	pushf  
   14000e6b9:	and    al,0xe
   14000e6bb:	test   DWORD PTR [rax+0x4d2a26c],0x8240a7b
   14000e6c5:	nop
   14000e6c6:	xor    al,BYTE PTR [rdx-0x6e]
   14000e6c9:	and    BYTE PTR [rdx-0x1c3176f8],dl
   14000e6cf:	xchg   ebx,eax
   14000e6d0:	xchg   ecx,eax
   14000e6d1:	not    bh
   14000e6d3:	xor    BYTE PTR [rax],ch
   14000e6d5:	jl     0x14000e6fa
   14000e6d7:	pop    rbx
   14000e6d8:	and    DWORD PTR [rbx],edx
   14000e6da:	and    BYTE PTR [rbp+0x7],dl
   14000e6dd:	nop
   14000e6de:	sbb    BYTE PTR [rbx-0x1c315b5f],ah
   14000e6e4:	rex.WRXB (bad) 
   14000e6e6:	jl     0x14000e6e4
   14000e6e8:	scas   eax,DWORD PTR es:[rdi]
   14000e6e9:	(bad)  
   14000e6ea:	sub    bl,bh
   14000e6ec:	push   QWORD PTR [rcx+0x3f97f2d7]
   14000e6f2:	hlt    
   14000e6f3:	adc    BYTE PTR [rbp+0x572b874e],bl
   14000e6f9:	scas   al,BYTE PTR es:[rdi]
   14000e6fa:	fdivr  DWORD PTR [rcx]
   14000e6fc:	adc    dl,BYTE PTR [rbx+0x53]
   14000e6ff:	push   rbx
   14000e700:	js     0x14000e780
   14000e702:	popf   
   14000e703:	lahf   
   14000e704:	sti    
   14000e705:	(bad)  
   14000e706:	lahf   
   14000e707:	in     eax,0x8f
   14000e709:	(bad)  
   14000e70a:	cmp    DWORD PTR [rdi-0x3e],ecx
   14000e70d:	sub    al,0xd0
   14000e70f:	rex stc 
   14000e711:	cld    
   14000e712:	sbb    eax,0x5412d18
   14000e717:	jmp    0x10d462fb4
   14000e71c:	adc    al,0x2c
   14000e71e:	jrcxz  0x14000e6f3
   14000e720:	sub    BYTE PTR [rcx+0x5b],cl
   14000e723:	(bad)  
   14000e724:	and    cl,BYTE PTR gs:[rcx+0x3e305189]
   14000e72b:	or     eax,edi
   14000e72d:	test   DWORD PTR [rdx+rbp*8+0x6f54bd79],edx
   14000e734:	(bad)  
   14000e735:	and    esp,DWORD PTR [rsp+0x32]
   14000e739:	ret    
   14000e73a:	adc    ah,dl
   14000e73c:	scas   eax,DWORD PTR es:[rdi]
   14000e73d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e73e:	out    dx,eax
   14000e73f:	xchg   ebp,eax
   14000e740:	mov    eax,0xf810084c
   14000e745:	and    ah,cl
   14000e747:	mov    bh,0xc8
   14000e749:	stos   DWORD PTR es:[rdi],eax
   14000e74a:	lods   al,BYTE PTR ds:[rsi]
   14000e74b:	rcr    BYTE PTR [rsi+0x28917f6f],cl
   14000e751:	ficom  WORD PTR [rbx]
   14000e753:	jmp    0x14000e7c4
   14000e755:	xchg   esi,eax
   14000e756:	sar    ebp,cl
   14000e758:	shl    DWORD PTR [rbx+0x25d32094],cl
   14000e75e:	rcl    DWORD PTR [rdx+0x7f25244],0x4
   14000e765:	and    eax,0x9c53af41
   14000e76a:	stos   BYTE PTR es:[rdi],al
   14000e76b:	cmp    eax,0x63733e3f
   14000e770:	cmp    cl,ah
   14000e772:	iret   
   14000e773:	mov    esi,0xf686800a
   14000e778:	out    0xa3,al
   14000e77a:	mov    ecx,0xee1316c6
   14000e77f:	jmp    0x14000e7ba
   14000e781:	rex.R pushf 
   14000e783:	rex.WX je 0x14000e719
   14000e786:	adc    DWORD PTR [rsi],0x2e00a8c8
   14000e78c:	rex.WR jb 0x14000e7ca
   14000e78f:	in     al,0x5a
   14000e791:	mov    BYTE PTR [rax],al
   14000e793:	jbe    0x14000e7bb
   14000e795:	out    dx,al
   14000e796:	cld    
   14000e797:	jno    0x14000e792
   14000e799:	in     eax,dx
   14000e79a:	data16 lahf 
   14000e79c:	icebp  
   14000e79d:	jno    0x14000e7aa
   14000e79f:	add    eax,0xd29e1069
   14000e7a4:	rex.WRB (bad) 
   14000e7a6:	jg     0x14000e79c
   14000e7a8:	push   rcx
   14000e7a9:	xchg   esi,eax
   14000e7aa:	imul   bh
   14000e7ac:	out    0x7,eax
   14000e7ae:	jle    0x14000e790
   14000e7b0:	(bad)  
   14000e7b1:	xchg   r10,rax
   14000e7b3:	cwde   
   14000e7b4:	jle    0x14000e765
   14000e7b6:	(bad)  
   14000e7b7:	jmp    0x1317196ef
   14000e7bc:	loop   0x14000e803
   14000e7be:	(bad)  
   14000e7bf:	(bad)  
   14000e7c0:	pop    rdx
   14000e7c1:	pop    rsp
   14000e7c2:	pop    rsi
   14000e7c3:	imul   esi,DWORD PTR [rbx-0x1a345184],0xcdf5922b
   14000e7cd:	test   ch,dh
   14000e7cf:	rex.WRB
   14000e7d0:	rex.WB scas rax,QWORD PTR es:[rdi]
   14000e7d2:	push   rdi
   14000e7d3:	add    dh,BYTE PTR [rcx]
   14000e7d5:	(bad)  
   14000e7d6:	mov    dl,0x81
   14000e7d8:	xchg   esp,eax
   14000e7d9:	movsxd ebp,DWORD PTR [rdx-0x30]
   14000e7dc:	adc    ebp,DWORD PTR [rbx]
   14000e7de:	leave  
   14000e7df:	and    al,0xe2
   14000e7e1:	push   rsp
   14000e7e2:	xor    ah,dh
   14000e7e4:	sub    esi,edx
   14000e7e6:	pop    rsi
   14000e7e7:	retf   
   14000e7e8:	retf   0xf5f8
   14000e7eb:	xor    al,0x73
   14000e7ed:	mov    edi,0xea3a5454
   14000e7f2:	sbb    dh,0x66
   14000e7f5:	cli    
   14000e7f6:	xchg   ecx,eax
   14000e7f7:	(bad)  
   14000e7f8:	addr32 (bad) 
   14000e7fa:	jp     0x14000e7f8
   14000e7fc:	in     al,0xff
   14000e7fe:	cmc    
   14000e7ff:	sbb    al,0x9f
   14000e801:	sti    
   14000e802:	ret    0xde71
   14000e805:	repz mov fs,WORD PTR [rbx]
   14000e808:	sbb    al,0xb9
   14000e80a:	jnp    0x14000e83b
   14000e80c:	xchg   ebp,eax
   14000e80d:	retf   0x6b18
   14000e810:	jmp    0x14000e84f
   14000e812:	sahf   
   14000e813:	jns    0x14000e803
   14000e815:	and    eax,0x1dbfe8fe
   14000e81a:	in     eax,0x89
   14000e81c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e81d:	(bad)  
   14000e81e:	or     BYTE PTR [rbx+0x1bf92d69],dl
   14000e824:	mov    ds,WORD PTR [rdx-0x1f]
   14000e827:	rex.X movsxd eax,DWORD PTR [rdi-0x37f3ce10]
   14000e82e:	rcr    edx,cl
   14000e830:	push   rbx
   14000e831:	(bad)  
   14000e832:	rex.WRB mov BYTE PTR [r13+0x5a],r14b
   14000e836:	jo     0x14000e80d
   14000e838:	pushf  
   14000e839:	and    al,0xa0
   14000e83b:	out    0x5b,al
   14000e83d:	sbb    ebp,DWORD PTR [rax-0x226aef9c]
   14000e843:	outs   dx,DWORD PTR ds:[rsi]
   14000e844:	ins    BYTE PTR es:[rdi],dx
   14000e845:	add    ecx,esi
   14000e847:	test   ebp,0xc7b0f8b8
   14000e84d:	(bad)  
   14000e84f:	and    DWORD PTR [rdx],esp
   14000e851:	retf   0x6e48
   14000e854:	cmc    
   14000e855:	jrcxz  0x14000e878
   14000e857:	ins    BYTE PTR es:[rdi],dx
   14000e858:	retf   0x74ee
   14000e85b:	mov    ebx,0xd655c1d0
   14000e860:	cmc    
   14000e861:	call   0x11f717c5a
   14000e866:	adc    ebp,eax
   14000e868:	ror    BYTE PTR [rsp+rbx*1+0x42],0x1c
   14000e86d:	rex.WXB movabs ds:0x5b1509e052666630,al
   14000e877:	movabs al,ds:0x3b8efa995056433e
   14000e880:	in     al,0x1
   14000e882:	fsub   st,st(0)
   14000e884:	iret   
   14000e885:	xor    al,BYTE PTR [rbx]
   14000e887:	jo     0x14000e824
   14000e889:	sub    cl,BYTE PTR [rdi]
   14000e88b:	retw   0xd381
   14000e88f:	mov    ?,WORD PTR [rdi-0x1d]
   14000e892:	add    al,al
   14000e894:	movabs al,ds:0xfdf7c430c3809485
   14000e89d:	imul   edi,DWORD PTR [rdx+0x0],0xffffffcc
   14000e8a1:	mul    BYTE PTR [rdx]
   14000e8a3:	js     0x14000e904
   14000e8a5:	(bad)  
   14000e8a6:	adc    BYTE PTR [rsi-0x2d],dh
   14000e8a9:	lods   al,BYTE PTR ds:[rsi]
   14000e8aa:	int    0x41
   14000e8ac:	or     dl,bh
   14000e8ae:	mov    ebp,0xe8941a9e
   14000e8b3:	shl    BYTE PTR [rax-0x58],cl
   14000e8b6:	enter  0xcbc0,0x17
   14000e8ba:	(bad)  
   14000e8bb:	jb     0x14000e8b6
   14000e8bd:	loop   0x14000e904
   14000e8bf:	cmp    al,0xdf
   14000e8c1:	(bad)  
   14000e8c2:	idiv   DWORD PTR [rdx+rbp*4]
   14000e8c5:	mov    ch,0x1a
   14000e8c7:	jae    0x14000e8bc
   14000e8c9:	repz mov esp,0x3443c1e1
   14000e8cf:	(bad)  
   14000e8d0:	or     eax,0xe52af56a
   14000e8d5:	mov    dl,0x8f
   14000e8d7:	and    BYTE PTR [rcx+0x6b],ah
   14000e8da:	mov    ebx,0xbecfb3cd
   14000e8df:	ror    cl,0x93
   14000e8e2:	retf   
   14000e8e3:	sub    al,0x2f
   14000e8e5:	lahf   
   14000e8e6:	out    0xe5,eax
   14000e8e8:	adc    edx,DWORD PTR [rdi+0x39]
   14000e8eb:	jnp    0x14000e88e
   14000e8ed:	(bad)  
   14000e8ee:	push   rsi
   14000e8ef:	stos   DWORD PTR es:[rdi],eax
   14000e8f0:	rex.RX cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e8f2:	(bad)  
   14000e8f3:	mov    DWORD PTR [rbx+rsi*8-0x6d77d2f6],edx
   14000e8fa:	xchg   ebx,eax
   14000e8fb:	hlt    
   14000e8fc:	and    al,BYTE PTR [rsi]
   14000e8fe:	sbb    DWORD PTR [rcx],edi
   14000e900:	jg     0x14000e95c
   14000e902:	(bad)  
   14000e903:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e904:	rex.WRXB jns 0x14000e95a
   14000e907:	out    dx,eax
   14000e908:	ss shr ah,cl
   14000e90b:	sub    BYTE PTR [rsi-0x52],dh
   14000e90e:	addr32 (bad) 
   14000e910:	add    ebx,eax
   14000e912:	add    al,0xb4
   14000e914:	(bad)  
   14000e915:	rex.WRX (bad) 
   14000e917:	jmp    0x1bd1eec29
   14000e91c:	jb     0x14000e8b9
   14000e91e:	addr32 (bad) 
   14000e920:	ds ret 
   14000e922:	js     0x14000e917
   14000e924:	rex.WB push 0x35
   14000e927:	(bad)  
   14000e928:	pop    rsi
   14000e929:	outs   dx,DWORD PTR ds:[rsi]
   14000e92a:	enter  0x76e6,0x48
   14000e92e:	jg     0x14000e980
   14000e930:	(bad)  
   14000e931:	xor    DWORD PTR [rdi-0x1d976368],esp
   14000e937:	sbb    dl,BYTE PTR [rcx+rsi*1]
   14000e93a:	rex.R in al,0x64
   14000e93d:	sub    BYTE PTR [rdx-0xd5eff98],dh
   14000e943:	dec    BYTE PTR [rcx-0x7f]
   14000e946:	rex.WR add al,0x49
   14000e949:	sub    al,0x90
   14000e94b:	xor    esp,eax
   14000e94d:	mov    DWORD PTR [rdx+0x6860181d],ebx
   14000e953:	int3   
   14000e954:	xor    eax,0x99f679c6
   14000e959:	test   DWORD PTR [rcx],esp
   14000e95b:	rex.X
   14000e95c:	addr32 lahf 
   14000e95e:	shl    ecx,1
   14000e960:	(bad)  
   14000e961:	ds xchg ecx,eax
   14000e963:	(bad)  
   14000e965:	movabs ds:0x44f6fa85bf0b02d1,al
   14000e96e:	sti    
   14000e96f:	jl     0x14000e9e7
   14000e971:	adc    esp,DWORD PTR [rax+0x63]
   14000e974:	adc    ah,dl
   14000e976:	(bad)  
   14000e977:	xchg   esp,eax
   14000e978:	mov    bh,0x15
   14000e97a:	mov    WORD PTR [rdi],?
   14000e97c:	mov    DWORD PTR [rbx],edi
   14000e97e:	sbb    edx,DWORD PTR [rax+0x32]
   14000e981:	sbb    al,0xf4
   14000e983:	mov    ecx,0xaa31aee7
   14000e988:	adc    eax,0x5464cd9f
   14000e98d:	and    eax,0x1b374505
   14000e992:	sbb    ebx,DWORD PTR [rbx]
   14000e994:	xchg   esi,eax
   14000e995:	(bad)  
   14000e996:	jb     0x14000e985
   14000e998:	adc    eax,0xdbc04d54
   14000e99d:	fisubr DWORD PTR [rsi+0x32]
   14000e9a0:	and    edx,DWORD PTR [rax-0x47b4eccd]
   14000e9a6:	(bad)  
   14000e9a7:	or     al,0xe5
   14000e9a9:	shl    BYTE PTR [rcx+0x47172742],cl
   14000e9af:	in     eax,dx
   14000e9b0:	rex.WX cld 
   14000e9b2:	popf   
   14000e9b3:	and    al,0x3c
   14000e9b5:	push   0x5cedee98
   14000e9ba:	push   rsp
   14000e9bb:	sar    ebp,0xdb
   14000e9be:	add    DWORD PTR [rsi+0x15],ecx
   14000e9c1:	rex.WX jge 0x14000e97f
   14000e9c4:	rex.WRB cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e9c6:	push   rcx
   14000e9c7:	sbb    BYTE PTR [rsi+0x36],0x25
   14000e9cb:	mov    bl,0xd5
   14000e9cd:	jge    0x14000e962
   14000e9cf:	cmp    BYTE PTR [rsi],ah
   14000e9d1:	shl    DWORD PTR [rcx+0x1b1b9b02],1
   14000e9d7:	retf   0xeb82
   14000e9da:	sti    
   14000e9db:	xchg   esp,eax
   14000e9dc:	stos   DWORD PTR es:[rdi],eax
   14000e9dd:	push   rbp
   14000e9de:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e9df:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e9e0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e9e1:	imul   esi,DWORD PTR [rsi],0x4d4e4c9b
   14000e9e7:	icebp  
   14000e9e8:	sub    eax,0xef30f2df
   14000e9ed:	std    
   14000e9ee:	mov    dh,0xf7
   14000e9f0:	adc    al,BYTE PTR [rsi+0x21]
   14000e9f3:	popf   
   14000e9f4:	rex.WRX mov r10,QWORD PTR [rbx-0x59]
   14000e9f8:	pop    rsi
   14000e9f9:	data16 stc 
   14000e9fb:	int3   
   14000e9fc:	pop    rcx
   14000e9fd:	rex.WRX sahf 
   14000e9ff:	cmp    cl,bh
   14000ea01:	ror    edi,cl
   14000ea03:	ds (bad) 
   14000ea05:	repnz (bad) [rax-0xa7aa953]
   14000ea0c:	in     eax,dx
   14000ea0d:	or     edx,esp
   14000ea0f:	push   0x20e3782f
   14000ea14:	jmp    0x14000ea40
   14000ea16:	add    bh,0x4f
   14000ea19:	mov    al,0x4c
   14000ea1b:	and    DWORD PTR [rcx],ebx
   14000ea1d:	add    BYTE PTR [rcx],dl
   14000ea1f:	and    al,0x11
   14000ea21:	(bad)  
   14000ea22:	sub    eax,0xa6f5cc38
   14000ea27:	(bad)  
   14000ea28:	test   ebx,eax
   14000ea2a:	jns    0x14000ea43
   14000ea2c:	and    DWORD PTR [rdx+0x5ad23809],ebx
   14000ea32:	push   rsp
   14000ea33:	nop
   14000ea34:	jb     0x14000e9d0
   14000ea36:	out    dx,al
   14000ea37:	movabs al,ds:0x220c42cf53dfb749
   14000ea40:	add    BYTE PTR [rdi-0x560bf57c],bh
   14000ea46:	xchg   ebx,eax
   14000ea47:	sbb    eax,0xe8098632
   14000ea4c:	gs retf 
   14000ea4e:	add    al,0xcc
   14000ea50:	(bad)  
   14000ea51:	int3   
   14000ea52:	jnp    0x14000eacc
   14000ea54:	push   rsi
   14000ea55:	add    eax,0x8c811248
   14000ea5a:	and    eax,0x85884889
   14000ea5f:	xchg   edi,ebp
   14000ea61:	push   0x2a
   14000ea63:	add    ah,bh
   14000ea65:	cdq    
   14000ea66:	test   BYTE PTR [rbp+0x4f5cc2d0],dl
   14000ea6c:	fistp  DWORD PTR [rbx-0x50]
   14000ea6f:	test   al,0x20
   14000ea71:	mov    ebp,0xcf21a8d7
   14000ea76:	and    BYTE PTR [rdx],cl
   14000ea78:	enter  0xc86,0x67
   14000ea7c:	(bad)  
   14000ea7d:	mov    edx,DWORD PTR [rax]
   14000ea7f:	ret    0xf171
   14000ea82:	rex.RB neg BYTE PTR [r10]
   14000ea85:	or     cl,BYTE PTR [rax+0x4e096de4]
   14000ea8b:	xlat   BYTE PTR ds:[rbx]
   14000ea8c:	movabs ds:0x88924c028e915d6c,al
   14000ea95:	test   eax,0x8c664a89
   14000ea9a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000ea9b:	lahf   
   14000ea9c:	and    DWORD PTR [rbx+0x37076c0a],ebx
   14000eaa2:	loopne 0x14000ea69
   14000eaa4:	(bad)  
   14000eaa5:	jg     0x14000eaa3
   14000eaa7:	jrcxz  0x14000ea60
   14000eaa9:	rol    BYTE PTR [rdx+0x54],cl
   14000eaac:	fsubr  DWORD PTR [rsi+0x32]
   14000eaaf:	(bad)  
   14000eab0:	and    bl,0x53
   14000eab3:	iret   
   14000eab4:	sbb    BYTE PTR [rbx],dh
   14000eab6:	mov    dl,0x1f
   14000eab8:	ret    0x1c35
   14000eabb:	(bad)  
   14000eabc:	xchg   edi,eax
   14000eabd:	iret   
   14000eabe:	mov    ebx,0x9f495cfd
   14000eac3:	rex.WRXB and r11b,BYTE PTR [r10-0xc]
   14000eac7:	or     al,0x79
   14000eac9:	retf   
   14000eaca:	stos   BYTE PTR es:[rdi],al
   14000eacb:	stos   DWORD PTR es:[rdi],eax
   14000eacc:	rex.WX movabs rax,0x5dbaf483fe5be5c7
   14000ead6:	pop    rbp
   14000ead7:	jne    0x14000eb3f
   14000ead9:	je     0x14000eb3a
   14000eadb:	pop    rsi
   14000eadc:	in     eax,0xb0
   14000eade:	(bad)  
   14000eadf:	fsub   QWORD PTR [rcx+riz*2]
   14000eae2:	shr    bh,1
   14000eae4:	jae    0x14000ead7
   14000eae6:	cld    
   14000eae7:	jns    0x14000eb3e
   14000eae9:	(bad)
   14000eaed:	xchg   ebp,eax
   14000eaee:	rex.WX (bad) 
   14000eaf0:	(bad)  
   14000eaf1:	jne    0x14000eab9
   14000eaf3:	(bad)  
   14000eaf4:	(bad)  
   14000eaf5:	cdq    
   14000eaf6:	sahf   
   14000eaf7:	sahf   
   14000eaf8:	data16 (bad) 
   14000eafa:	(bad)  
   14000eafb:	mov    ebx,0xdffbe6f9
   14000eb00:	and    bh,0x9
   14000eb03:	cmp    bl,ch
   14000eb05:	imul   ebp,DWORD PTR ss:[rbx-0x69],0xffffffb9
   14000eb0a:	js     0x14000eaed
   14000eb0c:	add    ch,BYTE PTR [rdi]
   14000eb0e:	mov    edi,0xcf33ccb2
   14000eb13:	sahf   
   14000eb14:	in     al,0xe4
   14000eb16:	jmp    0x1a5ec5651
   14000eb1b:	ss mov dh,0xa7
   14000eb1e:	fldcw  WORD PTR [rdi+rcx*2+0x20]
   14000eb22:	(bad)  
   14000eb23:	gs nop
   14000eb25:	adc    eax,0xabc03528
   14000eb2a:	sub    BYTE PTR [rdi],0x40
   14000eb2d:	or     al,0x41
   14000eb2f:	xchg   BYTE PTR [rax-0x58],al
   14000eb32:	sbb    BYTE PTR [rbx+0x755498c],al
   14000eb38:	lods   eax,DWORD PTR ds:[rsi]
   14000eb39:	retf   
   14000eb3a:	out    dx,eax
   14000eb3b:	xchg   BYTE PTR [rcx],bh
   14000eb3d:	pop    rax
   14000eb3e:	out    dx,eax
   14000eb3f:	xor    BYTE PTR [rbx-0x76],0x9d
   14000eb43:	rex.RB test al,0xf5
   14000eb46:	ins    DWORD PTR es:[rdi],dx
   14000eb47:	test   BYTE PTR [rdx+0x2a],al
   14000eb4a:	add    al,0x28
   14000eb4c:	xlat   BYTE PTR ds:[rbx]
   14000eb4d:	sahf   
   14000eb4e:	imul   edx,eax,0xb
   14000eb51:	(bad)  
   14000eb52:	(bad)  
   14000eb53:	mov    cs,WORD PTR [rdx]
   14000eb55:	(bad)  
   14000eb56:	outs   dx,DWORD PTR ds:[rsi]
   14000eb57:	popf   
   14000eb58:	ret    0xa47c
   14000eb5b:	mov    dh,0x1
   14000eb5d:	in     al,0x1e
   14000eb5f:	leave  
   14000eb60:	adc    bh,BYTE PTR [rdi+0x4812344c]
   14000eb66:	rex.W jl 0x14000eaea
   14000eb69:	mov    ch,dl
   14000eb6b:	xor    edi,DWORD PTR [rax+0x76]
   14000eb6e:	test   DWORD PTR cs:[rcx-0x57e729a2],edi
   14000eb75:	rex.RXB or BYTE PTR [r14],r13b
   14000eb78:	mov    bl,0xb1
   14000eb7a:	scas   al,BYTE PTR es:[rdi]
   14000eb7b:	ret    
   14000eb7c:	rex.WR add al,0x66
   14000eb7f:	cs mov dh,0x5f
   14000eb82:	mov    edx,0x9ae7406e
   14000eb87:	cdq    
   14000eb88:	outs   dx,BYTE PTR ds:[rsi]
   14000eb89:	retf   
   14000eb8a:	mov    ds,WORD PTR [rbx]
   14000eb8c:	xor    DWORD PTR [rax-0x6],0x62e32776
   14000eb93:	sbb    bh,BYTE PTR [rbp+0x2303a669]
   14000eb99:	(bad)  
   14000eb9a:	(bad)  
   14000eb9b:	stos   BYTE PTR es:[rdi],al
   14000eb9c:	(bad)  
   14000eb9d:	ret    
   14000eb9e:	(bad)  
   14000eb9f:	pop    rax
   14000eba0:	cmp    BYTE PTR [rsi-0xd],cl
   14000eba3:	jae    0x14000ec01
   14000eba5:	or     bl,dl
   14000eba7:	ins    DWORD PTR es:[rdi],dx
   14000eba8:	lsl    eax,WORD PTR [rsi-0x56ffbb65]
   14000ebaf:	mov    ebx,0x47310b2f
   14000ebb4:	ins    DWORD PTR es:[rdi],dx
   14000ebb5:	add    BYTE PTR [rsi-0x3e],ch
   14000ebb8:	nop
   14000ebb9:	lods   al,BYTE PTR ds:[rsi]
   14000ebba:	(bad)  
   14000ebbb:	call   0x191d3edf2
   14000ebc0:	jns    0x14000eb97
   14000ebc2:	and    BYTE PTR [rdi],ch
   14000ebc4:	in     eax,0x8b
   14000ebc6:	mov    WORD PTR [rdi+0x46],?
   14000ebc9:	lahf   
   14000ebca:	retf   0xf470
   14000ebcd:	pushf  
   14000ebce:	ficom  DWORD PTR [rax-0x14af0181]
   14000ebd4:	(bad)  
   14000ebd5:	imul   esp,DWORD PTR [rcx],0x797e1b93
   14000ebdb:	in     eax,dx
   14000ebdc:	jmp    0x150e5f4d7
   14000ebe1:	(bad)  
   14000ebe2:	(bad)  
   14000ebe3:	andnps xmm4,xmm3
   14000ebe6:	jge    0x14000ec5b
   14000ebe8:	jae    0x14000eb7d
   14000ebea:	jae    0x14000eb93
   14000ebec:	rex.WRXB
   14000ebed:	repz rex.X mov ecx,0xa254a94c
   14000ebf4:	push   rdx
   14000ebf5:	lods   eax,DWORD PTR ds:[rsi]
   14000ebf6:	xor    bh,BYTE PTR [rsi]
   14000ebf8:	rex.WRX lods rax,QWORD PTR ds:[rsi]
   14000ebfb:	pop    rsi
   14000ebfc:	addr32 jb 0x14000ec71
   14000ebff:	xor    DWORD PTR [rdi-0x42],0x7bef30e3
   14000ec06:	(bad)  
   14000ec08:	lock cmp eax,0x65d870c9
   14000ec0e:	jne    0x14000ebbd
   14000ec10:	(bad)
   14000ec13:	sub    eax,0x9cfa3636
   14000ec18:	ds mov ebx,0xbccfd3c9
   14000ec1e:	ret    0xbb9
   14000ec21:	pop    rbx
   14000ec22:	ins    BYTE PTR es:[rdi],dx
   14000ec23:	mov    bh,0x7c
   14000ec25:	scas   al,BYTE PTR es:[rdi]
   14000ec26:	outs   dx,BYTE PTR ds:[rsi]
   14000ec27:	rex.WR and bl,r8b
   14000ec2a:	sbb    eax,esi
   14000ec2c:	sbb    esp,DWORD PTR [rax]
   14000ec2e:	es and al,dh
   14000ec31:	ror    DWORD PTR [rbx+0x208fac35],0xd1
   14000ec38:	or     al,0x22
   14000ec3a:	sbb    DWORD PTR [rdx],ebp
   14000ec3c:	movabs ds:0x2d323dfb22ffb133,al
   14000ec45:	leave  
   14000ec46:	rex.WRB (bad) 
   14000ec48:	ss rex.WR shr dl,0xed
   14000ec4d:	scas   al,BYTE PTR es:[rdi]
   14000ec4e:	mov    ah,0xb
   14000ec50:	mov    dl,0xb0
   14000ec52:	xlat   BYTE PTR ds:[rbx]
   14000ec53:	xor    cl,BYTE PTR [rsi-0xb4342dc]
   14000ec59:	sub    al,0x4d
   14000ec5b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000ec5c:	fiadd  WORD PTR [rip+0xffffffff84568157]        # 0xc4576db9
   14000ec62:	and    BYTE PTR fs:[rsi-0x5656648e],bh
   14000ec69:	mov    bl,0x71
   14000ec6b:	adc    ah,bl
   14000ec6d:	(bad)
   14000ec70:	cmc    
   14000ec71:	rex.WRB adc QWORD PTR [rip+0xffffffffee9db78b],0xffffffffadb5e996        # 0x12e9ea407
   14000ec7c:	jge    0x14000ec3e
   14000ec7e:	fcomp  QWORD PTR [rdi-0x71]
   14000ec81:	adc    eax,0xb420c452
   14000ec86:	stc    
   14000ec87:	xor    eax,0x82a7afaf
   14000ec8c:	rex.WB ja 0x14000ec14
   14000ec8f:	mov    ecx,0x7333ed9e
   14000ec94:	cwde   
   14000ec95:	xor    al,0x47
   14000ec97:	addr32 lahf 
   14000ec99:	(bad)
   14000ec9c:	stos   BYTE PTR es:[rdi],al
   14000ec9d:	(bad)  
   14000ec9e:	xor    eax,0x46102453
   14000eca3:	push   rax
   14000eca4:	scas   eax,DWORD PTR es:[rdi]
   14000eca5:	rex.WB out dx,al
   14000eca7:	cmp    dl,ah
   14000eca9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ecaa:	fild   QWORD PTR [rdi]
   14000ecac:	scas   al,BYTE PTR es:[rdi]
   14000ecad:	add    eax,0x35f7c660
   14000ecb2:	(bad)  
   14000ecb3:	add    BYTE PTR [rsi-0x72],cl
   14000ecb6:	pushf  
   14000ecb7:	je     0x14000ecd4
   14000ecb9:	fimul  DWORD PTR [rbp-0x1a]
   14000ecbc:	add    al,0x34
   14000ecbe:	mov    edx,0x2af981bd
   14000ecc3:	rex.RB xchg r13d,eax
   14000ecc5:	mov    dl,0x1
   14000ecc7:	mov    BYTE PTR [rip+0x613949ce],bl        # 0x1a13a369b
   14000eccd:	(bad)  
   14000ecce:	and    bl,BYTE PTR [rcx-0xd0f451a]
   14000ecd4:	rex.R popf 
   14000ecd6:	xlat   BYTE PTR ds:[rbx]
   14000ecd7:	test   eax,0xc8aab0f2
   14000ecdc:	push   rax
   14000ecdd:	push   0x431188d4
   14000ece2:	int3   
   14000ece3:	(bad)  
   14000ece4:	loopne 0x14000ed2e
   14000ece6:	xchg   BYTE PTR [rbx],bl
   14000ece8:	outs   dx,DWORD PTR ds:[rsi]
   14000ece9:	add    cl,BYTE PTR [rax-0x2d0a671e]
   14000ecef:	adc    eax,0xc42207ca
   14000ecf4:	xor    BYTE PTR [rax],ah
   14000ecf6:	mov    ecx,0x1a954d3a
   14000ecfb:	sahf   
   14000ecfc:	outs   dx,DWORD PTR ds:[rsi]
   14000ecfd:	(bad)  
   14000ecfe:	xlat   BYTE PTR ds:[rbx]
   14000ecff:	adc    eax,DWORD PTR [rsi-0x50b0fcc6]
   14000ed05:	fisttp DWORD PTR [rbp-0x4d]
   14000ed08:	or     eax,0x9972a501
   14000ed0d:	push   rdx
   14000ed0e:	adc    al,dl
   14000ed10:	sbb    al,0x1b
   14000ed12:	movsxd esp,DWORD PTR [rsi+0x76]
   14000ed15:	xchg   esi,eax
   14000ed16:	(bad)  
   14000ed17:	pop    rsi
   14000ed18:	mov    bh,0x8f
   14000ed1a:	icebp  
   14000ed1b:	mov    DWORD PTR [rcx-0x16],esi
   14000ed1e:	mov    ch,0xa
   14000ed20:	and    DWORD PTR [rcx-0x61],0x4e
   14000ed24:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000ed25:	(bad)
   14000ed28:	retf   
   14000ed29:	cmp    al,0xfd
   14000ed2b:	hlt    
   14000ed2c:	jno    0x14000ed8c
   14000ed2e:	jl     0x14000ed21
   14000ed30:	add    ch,BYTE PTR [rdi]
   14000ed32:	popf   
   14000ed33:	fsub   st,st(6)
   14000ed35:	in     al,dx
   14000ed36:	add    eax,0x126d5958
   14000ed3b:	jbe    0x14000ece3
   14000ed3d:	rcr    DWORD PTR [rdi+0x2fcc082],0x48
   14000ed44:	rex.W jp 0x14000ed67
   14000ed47:	(bad)  
   14000ed48:	adc    BYTE PTR [rdi],cl
   14000ed4a:	(bad)  
   14000ed4b:	mov    dl,0x55
   14000ed4d:	and    DWORD PTR [rax+rbx*8-0x55],ebx
   14000ed51:	jg     0x14000ecde
   14000ed53:	and    al,BYTE PTR [rsi]
   14000ed55:	lea    edx,[rdi-0x40]
   14000ed58:	xor    dl,BYTE PTR [rcx+0x30cf0754]
   14000ed5e:	adc    ebp,DWORD PTR [rcx+0x18e78791]
   14000ed64:	adc    eax,0x5f404c33
   14000ed69:	or     esp,DWORD PTR [rcx-0x2322a44a]
   14000ed6f:	movabs al,ds:0xf13fff3d13df052c
   14000ed78:	rex.R push 0xffffffffffffffd0
   14000ed7b:	jae    0x14000ed90
   14000ed7d:	js     0x14000ede5
   14000ed7f:	adc    BYTE PTR [rbx+rdi*2-0xe608b23],ah
   14000ed86:	sbb    ah,BYTE PTR [rsp+rcx*1+0x80aa721]
   14000ed8d:	xchg   DWORD PTR [rax+0x592efba5],ecx
   14000ed93:	out    0x20,al
   14000ed95:	xor    edx,edx
   14000ed97:	(bad)  
   14000ed99:	rex.X iret 
   14000ed9b:	xor    ecx,eax
   14000ed9d:	xor    DWORD PTR [rbx-0x5be7f66c],esp
   14000eda3:	movabs ds:0x5354e017289c5a18,al
   14000edac:	mov    dl,0x6f
   14000edae:	outs   dx,DWORD PTR ds:[rsi]
   14000edaf:	xchg   ebx,eax
   14000edb0:	xor    dl,ch
   14000edb2:	out    dx,al
   14000edb3:	mov    BYTE PTR [rax],ch
   14000edb5:	rex.WRB (bad) 
   14000edb7:	stos   BYTE PTR es:[rdi],al
   14000edb8:	cld    
   14000edb9:	std    
   14000edba:	je     0x14000edf7
   14000edbc:	ret    
   14000edbd:	stos   DWORD PTR es:[rdi],eax
   14000edbe:	shr    BYTE PTR [rsi-0x26],1
   14000edc1:	or     BYTE PTR [rax+0x5b36ffa6],bl
   14000edc7:	pop    rbp
   14000edc8:	rex.X iret 
   14000edca:	rex.WX pop rdi
   14000edcc:	jrcxz  0x14000eddd
   14000edce:	ja     0x14000ed59
   14000edd0:	mov    bh,0x8
   14000edd2:	add    eax,0xef9b04b8
   14000edd7:	(bad)  
   14000edd8:	mov    esp,0x8c74507a
   14000eddd:	mov    ecx,0x5bce59a7
   14000ede2:	pop    rbx
   14000ede3:	or     eax,0x68a3097a
   14000ede8:	neg    DWORD PTR [rdx-0x4b]
   14000edeb:	xchg   esp,eax
   14000edec:	or     BYTE PTR [rdx+rdi*1],bh
   14000edef:	mov    dl,0x45
   14000edf1:	mov    eax,0xf7932aff
   14000edf6:	push   rsp
   14000edf7:	or     bl,bl
   14000edf9:	xchg   edx,eax
   14000edfa:	mov    al,0x53
   14000edfc:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000edfd:	fisubr DWORD PTR [rsi+0x3928b1a5]
   14000ee03:	in     al,0x11
   14000ee05:	add    al,0x41
   14000ee07:	pop    rdx
   14000ee08:	add    DWORD PTR [rdi+0x3f],eax
   14000ee0b:	fcmovnbe st,st(6)
   14000ee0d:	out    0x26,al
   14000ee0f:	imul   ebp,DWORD PTR [rbx+0x6b],0xfffffff6
   14000ee13:	jns    0x14000edbf
   14000ee15:	fisubr DWORD PTR [rsi-0x3ecec6d0]
   14000ee1b:	rcl    dl,cl
   14000ee1d:	pop    rbp
   14000ee1e:	jl     0x14000ee13
   14000ee20:	(bad)  
   14000ee21:	mov    edi,0xa2884801
   14000ee26:	add    DWORD PTR [rbx],ebp
   14000ee28:	xchg   edi,eax
   14000ee29:	(bad)  
   14000ee2a:	repnz (bad) 
   14000ee2c:	rol    edi,cl
   14000ee2e:	pop    rax
   14000ee2f:	pop    rsi
   14000ee30:	mov    esi,0x9d2f8bcc
   14000ee35:	out    0xb9,al
   14000ee37:	(bad)  
   14000ee38:	sahf   
   14000ee39:	addr32 in eax,0x6a
   14000ee3c:	test   DWORD PTR [rbp+0x7b2426ed],ebp
   14000ee42:	rcr    BYTE PTR [rbx-0x1aa380fe],0xa2
   14000ee49:	sub    cl,BYTE PTR [rcx]
   14000ee4b:	rex.WRB cdqe 
   14000ee4d:	xchg   BYTE PTR [rcx],bl
   14000ee4f:	je     0x14000ee6e
   14000ee51:	xchg   esp,eax
   14000ee52:	(bad)  
   14000ee53:	(bad)  
   14000ee54:	(bad)  
   14000ee55:	adc    ch,ch
   14000ee57:	pop    rsi
   14000ee58:	shl    DWORD PTR [rax+0x5e],cl
   14000ee5b:	call   0x1443d34d3
   14000ee60:	cmp    edi,DWORD PTR [rax+0x2a]
   14000ee63:	adc    al,bh
   14000ee65:	repnz out dx,eax
   14000ee67:	stos   BYTE PTR es:[rdi],al
   14000ee68:	adc    edx,ebp
   14000ee6a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000ee6b:	cmc    
   14000ee6c:	jns    0x14000eea7
   14000ee6e:	fild   DWORD PTR [rax-0x4e6abbac]
   14000ee74:	inc    esp
   14000ee76:	test   al,0x7b
   14000ee78:	(bad)  
   14000ee79:	sub    dl,BYTE PTR [rsi]
   14000ee7b:	and    BYTE PTR [rbx],ch
   14000ee7d:	loope  0x14000ee24
   14000ee7f:	out    dx,al
   14000ee80:	stos   DWORD PTR es:[rdi],eax
   14000ee81:	pop    rsp
   14000ee82:	sbb    al,0xbf
   14000ee84:	push   rsi
   14000ee85:	rex.WXB
   14000ee86:	fs add edx,edx
   14000ee89:	mov    cl,0xde
   14000ee8b:	or     DWORD PTR [rdx+rdi*8+0x22406580],0xfffffff3
   14000ee93:	ds pop rdx
   14000ee95:	push   0x1dca7569
   14000ee9a:	mov    bl,0x19
   14000ee9c:	fwait
   14000ee9d:	movsxd ecx,DWORD PTR [rsi-0x3f1e47ef]
   14000eea3:	push   rdx
   14000eea4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000eea5:	mov    bl,0x5
   14000eea7:	add    ah,BYTE PTR gs:[rip+0x24a9406f]        # 0x164aa2f1d
   14000eeae:	sbb    ah,dh
   14000eeb0:	movsxd ebx,ebp
   14000eeb2:	rex.WRB fst DWORD PTR [r8+0x60]
   14000eeb6:	push   rax
   14000eeb7:	(bad)  
   14000eeb8:	or     BYTE PTR [rdx-0x1bcfeafc],0xcf
   14000eebf:	mov    edx,0x47900a
   14000eec4:	out    dx,al
   14000eec5:	sbb    ebp,DWORD PTR fs:[rcx]
   14000eec8:	mov    cl,0xdb
   14000eeca:	push   rbx
   14000eecb:	enter  0x8f9f,0xe9
   14000eecf:	push   rsi
   14000eed0:	sub    eax,0x25c2789f
   14000eed5:	sbb    BYTE PTR [rdi+0x2],dh
   14000eed8:	rex.WX (bad) 
   14000eeda:	retf   0xd5e7
   14000eedd:	and    DWORD PTR [rdx+0x4d58a063],0x70
   14000eee4:	test   DWORD PTR [rcx-0x57],0x5cde818a
   14000eeeb:	adc    edx,DWORD PTR [rax]
   14000eeed:	and    al,0x6c
   14000eeef:	je     0x14000eea8
   14000eef1:	sub    BYTE PTR [rbp-0x6b],ch
   14000eef4:	sub    DWORD PTR [rbp-0x5be358b],eax
   14000eefa:	jp     0x14000ef0e
   14000eefc:	je     0x14000ee96
   14000eefe:	test   eax,0x2638d77e
   14000ef03:	or     al,BYTE PTR [rbx+0x4a]
   14000ef06:	jp     0x14000eece
   14000ef08:	popf   
   14000ef09:	(bad)  
   14000ef0a:	add    al,0x7e
   14000ef0c:	adc    BYTE PTR [rax+0x39fa8759],ch
   14000ef12:	movabs ds:0x70bc5c8bc5d2e228,eax
   14000ef1b:	add    edi,ecx
   14000ef1d:	repz sub BYTE PTR [rdi+0x2a],dl
   14000ef21:	xor    al,0x9b
   14000ef23:	rex.WRB mov r14b,0xc6
   14000ef27:	sbb    BYTE PTR [rdi],bl
   14000ef29:	(bad)  
   14000ef2a:	out    0x6d,eax
   14000ef2c:	outs   dx,DWORD PTR ds:[rsi]
   14000ef2d:	jge    0x14000ef5a
   14000ef2f:	sar    DWORD PTR [rbx],0x7d
   14000ef32:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ef33:	mov    ecx,gs
   14000ef35:	mov    ah,0xb7
   14000ef37:	cmp    BYTE PTR [rcx+0x72],dh
   14000ef3a:	cdq    
   14000ef3b:	rex.WXB xchg r15,rax
   14000ef3d:	(bad)  
   14000ef3e:	mov    eax,0x89cbb170
   14000ef43:	push   rbx
   14000ef44:	fistp  DWORD PTR [rsi+rdi*4-0x4e]
   14000ef48:	(bad)  
   14000ef49:	cli    
   14000ef4a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000ef4b:	in     al,0xd2
   14000ef4d:	push   rbp
   14000ef4e:	fsubr  DWORD PTR [rdi+rax*1+0x24]
   14000ef52:	std    
   14000ef53:	rex sbb DWORD PTR [rbx],ebx
   14000ef56:	std    
   14000ef57:	jge    0x14000eef3
   14000ef59:	sub    DWORD PTR [rax+rax*8+0x19063150],eax
   14000ef60:	rex.XB adc al,BYTE PTR [r10]
   14000ef63:	push   rcx
   14000ef64:	rex.WRX jge 0x14000ef97
   14000ef67:	rex.WR rcr al,0x5
   14000ef6b:	mov    esp,0x3b677bec
   14000ef70:	xor    bl,ch
   14000ef72:	sub    al,0x74
   14000ef74:	pushf  
   14000ef75:	mov    ebp,0x523a8724
   14000ef7a:	fild   DWORD PTR [rax+0x528ea44c]
   14000ef80:	(bad)  
   14000ef81:	jae    0x14000efb8
   14000ef83:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ef84:	ror    BYTE PTR [rbx+0x12],0xf5
   14000ef88:	sub    BYTE PTR [rsi+0x2fa472c9],bl
   14000ef8e:	cwde   
   14000ef8f:	xchg   ecx,eax
   14000ef90:	repnz cmp DWORD PTR [rbx-0x351bbc42],ecx
   14000ef97:	add    al,0x60
   14000ef99:	mov    ecx,0xa7a5d66e
   14000ef9e:	outs   dx,DWORD PTR ds:[rsi]
   14000ef9f:	scas   eax,DWORD PTR es:[rdi]
   14000efa0:	(bad)  
   14000efa1:	loop   0x14000ef37
   14000efa3:	(bad)  
   14000efa4:	jmp    0x19e95dc24
   14000efa9:	cmp    al,0x1d
   14000efab:	retf   
   14000efac:	fnstenv [rcx]
   14000efae:	in     al,dx
   14000efaf:	fimul  DWORD PTR [rcx]
   14000efb1:	sub    al,0x33
   14000efb3:	add    bl,ch
   14000efb5:	(bad)  
   14000efb6:	mov    WORD PTR [rsi+0x47bb309],es
   14000efbc:	mov    esi,0xa9451317
   14000efc1:	ffree  st(0)
   14000efc3:	add    dh,BYTE PTR gs:[rcx+0x1c]
   14000efc7:	(bad)  
   14000efc8:	rex.WR movabs ds:0xb7b6e410550b5a77,rax
   14000efd2:	frstor [rax]
   14000efd4:	add    BYTE PTR [rcx],cl
   14000efd6:	in     al,0xf4
   14000efd8:	jg     0x14000efd1
   14000efda:	rex.RB push r10
   14000efdc:	(bad)  
   14000efdd:	nop
   14000efde:	(bad)  
   14000efdf:	jnp    0x14000f018
   14000efe1:	add    al,0x9b
   14000efe3:	adc    bh,BYTE PTR [rax]
   14000efe5:	fcom   QWORD PTR [rax+0xfdae441]
   14000efeb:	xchg   edx,eax
   14000efec:	jmp    0x14000f032
   14000efee:	push   rdi
   14000efef:	rex.RB mov r8d,0x48a28b5e
   14000eff5:	xor    DWORD PTR [rax+0x24b7b89b],eax
   14000effb:	movabs eax,ds:0xad5a524f6b518fe9
   14000f004:	xor    cl,dh
   14000f006:	(bad)  
   14000f007:	(bad)  
   14000f008:	js     0x14000f05c
   14000f00a:	or     DWORD PTR [rbx],edi
   14000f00c:	cmp    eax,0x2861ddf8
   14000f011:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f012:	stos   BYTE PTR es:[rdi],al
   14000f013:	cwde   
   14000f014:	jrcxz  0x14000f01d
   14000f016:	push   0xffffffffffffff82
   14000f018:	mov    BYTE PTR [rcx+0x3c],cl
   14000f01b:	and    bh,BYTE PTR [rdi+rcx*4]
   14000f01e:	fsub   DWORD PTR [rcx-0x58]
   14000f021:	mov    esi,0xab5411e7
   14000f026:	cli    
   14000f027:	(bad)  
   14000f028:	adc    BYTE PTR [rsp+rsi*4-0x2127494a],0xdc
   14000f030:	in     al,0x5c
   14000f032:	rex.WRX push rbp
   14000f034:	stos   BYTE PTR es:[rdi],al
   14000f035:	push   rsp
   14000f036:	sub    cl,BYTE PTR [rsp+rcx*2+0x4e]
   14000f03a:	lock xchg BYTE PTR [rdi+0x66d6f896],al
   14000f041:	xor    DWORD PTR [rcx-0x3475654f],0x20
   14000f048:	(bad)  
   14000f049:	jne    0x14000f0c0
   14000f04b:	adc    DWORD PTR [rdi-0x3436c5a2],0x27
   14000f052:	xchg   esi,eax
   14000f053:	jns    0x14000f036
   14000f055:	clc    
   14000f056:	pop    rcx
   14000f057:	mov    esi,0x6b2ae4f6
   14000f05c:	jmp    0x14000f083
   14000f05e:	ss mov dh,0xc7
   14000f061:	and    BYTE PTR [rsi+0x414d285],bl
   14000f067:	rex.WRB test al,0xf8
   14000f06a:	mov    al,al
   14000f06c:	rex.RB movabs ds:0xc9aed02555274291,al
   14000f076:	rex.R ret 
   14000f078:	ja     0x14000f01b
   14000f07a:	and    ebx,DWORD PTR [rbp-0x54e1098e]
   14000f080:	add    al,0x5b
   14000f082:	add    al,0xa1
   14000f084:	and    DWORD PTR [rbp-0x62ac3edd],edi
   14000f08a:	pop    rcx
   14000f08b:	iret   
   14000f08c:	mov    ebp,0x24921d40
   14000f091:	(bad)  
   14000f092:	mov    eax,edx
   14000f094:	test   BYTE PTR [rdi*1+0x4a1534cb],ch
   14000f09b:	xor    al,BYTE PTR [rcx+0x4a]
   14000f09e:	sub    DWORD PTR [rbx],esi
   14000f0a0:	push   rax
   14000f0a1:	cmp    ecx,ecx
   14000f0a3:	ds rex.XB add al,r10b
   14000f0a7:	sbb    cl,ch
   14000f0a9:	in     al,dx
   14000f0aa:	movsxd edi,DWORD PTR [rcx]
   14000f0ac:	shl    DWORD PTR [rbx+0x46],0xd
   14000f0b0:	mov    al,0xdd
   14000f0b2:	out    0xa8,eax
   14000f0b4:	adc    eax,0x10ecdc66
   14000f0b9:	(bad)  
   14000f0ba:	sub    al,0x65
   14000f0bc:	and    esi,DWORD PTR ds:[rcx-0x54abe32d]
   14000f0c3:	add    ah,BYTE PTR es:[rip+0xffffffffaf11070c]        # 0xef11f7d6
   14000f0ca:	mov    ebp,0xc56a8c67
   14000f0cf:	movsxd edi,DWORD PTR [rip+0xffffffff974ea2ca]        # 0xd74f939f
   14000f0d5:	or     DWORD PTR [rax+0x59828038],ebx
   14000f0db:	mov    al,0xcb
   14000f0dd:	shl    BYTE PTR [rsi-0xf],0xd
   14000f0e1:	outs   dx,DWORD PTR ds:[rsi]
   14000f0e2:	ins    DWORD PTR es:[rdi],dx
   14000f0e3:	fisttp DWORD PTR [rip+0xffffffffe10b6802]        # 0x1210c58eb
   14000f0e9:	xor    DWORD PTR [rax],ebx
   14000f0eb:	hlt    
   14000f0ec:	push   rbp
   14000f0ed:	(bad)  
   14000f0ee:	push   rbx
   14000f0ef:	leave  
   14000f0f0:	je     0x14000f168
   14000f0f2:	(bad)  
   14000f0f3:	(bad)  
   14000f0f4:	sub    ecx,DWORD PTR [rsi+0xf]
   14000f0f7:	or     ch,BYTE PTR [rcx-0x5a]
   14000f0fa:	rex.WR and BYTE PTR [rbp+0x1b93bef],r8b
   14000f101:	mov    ebp,DWORD PTR [rcx+rdi*8+0x3b0542d7]
   14000f108:	sub    eax,0x75173517
   14000f10d:	js     0x14000f0cd
   14000f10f:	(bad)  
   14000f110:	(bad)  
   14000f111:	pushf  
   14000f112:	lahf   
   14000f113:	sub    BYTE PTR [rbp+rbx*4+0xe],dh
   14000f117:	rex
   14000f118:	rex.WX
   14000f119:	rex.WB
   14000f11a:	xchg   r14,rax
   14000f11c:	cmp    ah,cl
   14000f11e:	(bad)  
   14000f11f:	adc    DWORD PTR [rsi-0x13],ebx
   14000f122:	push   rcx
   14000f123:	xchg   edx,eax
   14000f124:	push   rbp
   14000f125:	(bad)  
   14000f126:	movabs al,ds:0x8062219bc6b64c4c
   14000f12f:	cmp    BYTE PTR [rdx+0x3cac7190],cl
   14000f135:	(bad)  
   14000f136:	sahf   
   14000f137:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f138:	push   0xf
   14000f13a:	and    al,0x89
   14000f13c:	lods   eax,DWORD PTR ds:[rsi]
   14000f13d:	and    cx,WORD PTR [rbp+0x1f]
   14000f141:	cwde   
   14000f142:	(bad)  [rax-0x112f7be8]
   14000f148:	leave  
   14000f149:	shr    ch,0x37
   14000f14c:	ins    DWORD PTR es:[rdi],dx
   14000f14d:	pop    rdi
   14000f14e:	mov    eax,0xcb02fe78
   14000f153:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f154:	iret   
   14000f155:	add    al,ah
   14000f157:	(bad)  
   14000f158:	add    DWORD PTR [rbp-0xe4e66b6],edx
   14000f15e:	jno    0x14000f146
   14000f160:	out    0x66,al
   14000f162:	jns    0x14000f141
   14000f164:	jmp    0x14000f154
   14000f166:	jrcxz  0x14000f185
   14000f168:	out    dx,eax
   14000f169:	jl     0x14000f183
   14000f16b:	fs rex.WR mov dil,0xd7
   14000f16f:	out    0xec,al
   14000f171:	(bad)  [rbx-0x64]
   14000f174:	cmp    BYTE PTR [rcx-0x6a],dh
   14000f177:	scas   eax,DWORD PTR es:[rdi]
   14000f178:	cmp    eax,0x9ea78e71
   14000f17d:	pop    rbp
   14000f17e:	out    0xdc,al
   14000f180:	stc    
   14000f181:	mov    BYTE PTR [rbx],ch
   14000f183:	sbb    ecx,DWORD PTR [rip+0xffffffffb2a4cec2]        # 0xf2a5c04b
   14000f189:	(bad)  
   14000f18a:	xchg   esp,eax
   14000f18b:	movabs eax,es:0x1d0946810854a0bc
   14000f195:	mov    BYTE PTR [rip+0x85eb043],dh        # 0x1485fa1de
   14000f19b:	std    
   14000f19c:	je     0x14000f160
   14000f19e:	ja     0x14000f13e
   14000f1a0:	xor    al,0x7d
   14000f1a2:	rex.WRXB cmc 
   14000f1a4:	loopne 0x14000f1f8
   14000f1a6:	jmp    0x14000f184
   14000f1a8:	jns    0x14000f15f
   14000f1aa:	rex out 0x6,eax
   14000f1ad:	rol    BYTE PTR [rbx],0x3d
   14000f1b0:	(bad)  
   14000f1b1:	and    BYTE PTR [rcx],dh
   14000f1b3:	rcr    BYTE PTR [rsi+riz*1+0x2a],1
   14000f1b7:	sbb    eax,0xc61c1597
   14000f1bc:	test   al,0x27
   14000f1be:	shl    ecx,cl
   14000f1c0:	and    eax,0xe386dd84
   14000f1c5:	jp     0x14000f17d
   14000f1c7:	(bad)  
   14000f1c8:	mov    ebp,0xdd69321d
   14000f1cd:	(bad)  
   14000f1ce:	adc    DWORD PTR [rip+0x48e81ec1],edx        # 0x188e91095
   14000f1d4:	je     0x14000f199
   14000f1d6:	and    al,0x4
   14000f1d8:	(bad)  
   14000f1d9:	and    edx,DWORD PTR [rsi+rbx*2+0x7725974c]
   14000f1e0:	out    0xba,al
   14000f1e2:	fdiv   st,st(7)
   14000f1e4:	mov    ch,0xb9
   14000f1e6:	(bad)  
   14000f1e7:	(bad)  
   14000f1e8:	ja     0x14000f173
   14000f1ea:	jrcxz  0x14000f17c
   14000f1ec:	leave  
   14000f1ed:	mov    DWORD PTR [rdx+0x66],edi
   14000f1f0:	data16 ins BYTE PTR es:[rdi],dx
   14000f1f2:	adc    DWORD PTR [rdx-0xb],edi
   14000f1f5:	cmp    al,0x8f
   14000f1f7:	push   rax
   14000f1f8:	(bad)  
   14000f1f9:	movabs ds:0xac7d8fb1ff3b5c9,al
   14000f202:	or     eax,DWORD PTR [rip+0x2bb6eade]        # 0x16bb7dce6
   14000f208:	add    al,0x20
   14000f20a:	test   al,dl
   14000f20c:	rex.WB xor al,0xc
   14000f20f:	push   rcx
   14000f210:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f211:	cmp    ebp,ebp
   14000f213:	(bad)  
   14000f214:	shl    BYTE PTR [rcx],cl
   14000f216:	(bad)  
   14000f217:	jmp    0x13b761213
   14000f21c:	in     eax,dx
   14000f21d:	adc    al,0xaf
   14000f21f:	jg     0x14000f1fe
   14000f221:	(bad)  
   14000f222:	enter  0x579d,0xe4
   14000f226:	and    DWORD PTR [rax],ebp
   14000f228:	(bad)
   14000f22d:	rex.WX push 0xffffffffffffffcd
   14000f230:	es xchg ebp,eax
   14000f232:	push   0x55
   14000f234:	gs stos BYTE PTR es:[rdi],al
   14000f236:	lea    esp,[rdx]
   14000f238:	(bad)  
   14000f239:	std    
   14000f23a:	ds push rcx
   14000f23c:	sbb    al,0xdb
   14000f23e:	imul   esp,DWORD PTR [r14-0x52],0xffffffe1
   14000f243:	adc    ah,BYTE PTR [rdi-0x676c7202]
   14000f249:	(bad)  
   14000f24a:	pop    rax
   14000f24b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f24c:	adc    al,0x56
   14000f24e:	je     0x14000f20e
   14000f250:	sti    
   14000f251:	sub    BYTE PTR [rip+0x11f7f97f],bl        # 0x151f8ebd6
   14000f257:	push   0xffffffffffffffa0
   14000f259:	test   BYTE PTR [rcx-0x5c],dl
   14000f25c:	hlt    
   14000f25d:	(bad)  
   14000f25e:	sub    DWORD PTR [rbp-0x39db8e0f],ebp
   14000f264:	xor    eax,DWORD PTR [rip+0x52d34de5]        # 0x192d44050
   14000f26b:	and    al,0x7f
   14000f26d:	pushf  
   14000f26e:	push   rax
   14000f26f:	jno    0x14000f27c
   14000f271:	adc    eax,0x2e5ca7df
   14000f276:	movsxd esi,DWORD PTR [rdx+0x3dbbf4f6]
   14000f27c:	fcmovu st,st(3)
   14000f27e:	sub    eax,0x833e9ece
   14000f283:	adc    dl,al
   14000f285:	mov    edx,0x2e2ef726
   14000f28a:	xor    dh,BYTE PTR [rip+0xffffffffdfc3c935]        # 0x11fc4bbc5
   14000f290:	repnz out 0x79,eax
   14000f293:	(bad)  
   14000f294:	sti    
   14000f295:	(bad)  
   14000f297:	jo     0x14000f269
   14000f299:	gs jae 0x14000f24f
   14000f29c:	(bad)
   14000f29f:	lahf   
   14000f2a0:	loope  0x14000f29b
   14000f2a2:	movabs ds:0xf4bf8e15c5e17917,eax
   14000f2ab:	xor    dl,BYTE PTR [rdi]
   14000f2ad:	cs (bad) 
   14000f2af:	fldz   
   14000f2b1:	out    dx,eax
   14000f2b2:	and    DWORD PTR [rdx-0x7f28efb5],ecx
   14000f2b8:	or     DWORD PTR [rax],ecx
   14000f2ba:	test   BYTE PTR [rax+0x10],0x80
   14000f2be:	sbb    BYTE PTR [rax],al
   14000f2c0:	add    edx,DWORD PTR [rdi+rdx*8-0x388efc5f]
   14000f2c7:	cmp    al,0x30
   14000f2c9:	sbb    BYTE PTR [rdi],bh
   14000f2cb:	mov    edi,0x2f6e4944
   14000f2d0:	popf   
   14000f2d1:	(bad)  
   14000f2d2:	push   rdi
   14000f2d3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f2d4:	(bad)  
   14000f2d5:	test   al,0x70
   14000f2d7:	imul   ebx,edi,0x2224cfba
   14000f2dd:	int    0x8
   14000f2df:	sub    al,0x13
   14000f2e1:	shl    DWORD PTR gs:[rdi+0x24],0x7f
   14000f2e6:	stos   BYTE PTR es:[rdi],al
   14000f2e7:	jae    0x14000f2a4
   14000f2e9:	rex.WR add BYTE PTR [rbx+0x3cfd5d30],r9b
   14000f2f0:	rex.XB push r12
   14000f2f2:	and    dh,BYTE PTR [rbp-0x411727fb]
   14000f2f8:	or     al,0xf1
   14000f2fa:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f2fb:	cmp    bl,BYTE PTR [rbx-0x1db924b7]
   14000f301:	rex.WR sub al,0x12
   14000f304:	out    dx,al
   14000f305:	cmc    
   14000f306:	mov    WORD PTR [rdx-0x2b44dd1c],cs
   14000f30c:	mov    al,0x99
   14000f30e:	and    al,0x1e
   14000f310:	xor    cl,BYTE PTR [rcx+0x66357a8]
   14000f316:	and    ecx,0xffffff8e
   14000f319:	(bad)  
   14000f31a:	and    al,0x8
   14000f31c:	(bad)  
   14000f31d:	imul   esp,DWORD PTR [rbp+0x3],0xffffffbe
   14000f321:	push   rsp
   14000f322:	js     0x14000f2f6
   14000f324:	ins    DWORD PTR es:[rdi],dx
   14000f325:	push   0x381d3537
   14000f32a:	popf   
   14000f32b:	or     DWORD PTR [rax+0x7c],ebx
   14000f32e:	pushf  
   14000f32f:	cmp    edi,0x120e5100
   14000f335:	sbb    DWORD PTR [rdx],esp
   14000f337:	sub    al,0x22
   14000f339:	pop    rsp
   14000f33a:	idiv   DWORD PTR [rsi]
   14000f33c:	out    dx,al
   14000f33d:	mov    esi,0xa8df113c
   14000f342:	xor    DWORD PTR [rax-0xc],esi
   14000f345:	mov    ecx,0x894b2f4
   14000f34a:	rex.WRXB stc 
   14000f34c:	lock rex.WXB push r10
   14000f34f:	push   rdx
   14000f350:	test   eax,0xad2501d7
   14000f355:	cmc    
   14000f356:	rex.RB
   14000f357:	lock jne 0x14000f340
   14000f35a:	(bad)  
   14000f35b:	shl    DWORD PTR [rax+0x40],0xac
   14000f35f:	shl    DWORD PTR [rcx-0x67],cl
   14000f362:	sti    
   14000f363:	test   ecx,edx
   14000f365:	shl    BYTE PTR [rcx+0x6f7abb32],1
   14000f36b:	data16 js 0x14000f347
   14000f36e:	ss or  al,0x43
   14000f371:	rex.WX
   14000f372:	rex.B (bad) 
   14000f374:	(bad)  
   14000f375:	mov    cl,0xd0
   14000f377:	xchg   edx,eax
   14000f378:	pop    rdi
   14000f379:	(bad)  
   14000f37a:	out    0x30,eax
   14000f37c:	test   DWORD PTR [rsp+rdx*8-0x7d],0x1675e36a
   14000f384:	adc    eax,0x1d4ff2a5
   14000f389:	sub    esi,DWORD PTR [rip+0xffffffff8f3cf704]        # 0xcf3dea93
   14000f38f:	push   rdx
   14000f390:	mov    ecx,0x512a504c
   14000f395:	test   eax,0x4938854
   14000f39a:	sbb    edi,eax
   14000f39c:	je     0x14000f379
   14000f39e:	ins    DWORD PTR es:[rdi],dx
   14000f39f:	pop    rsi
   14000f3a0:	cmp    bh,BYTE PTR [rsi-0x24]
   14000f3a3:	mov    edx,0x2ad5aa9d
   14000f3a8:	(bad)  
   14000f3a9:	push   0xffffffffffffff95
   14000f3ab:	out    0xf8,al
   14000f3ad:	sbb    ch,cl
   14000f3af:	rex.RX xor DWORD PTR [rdi+0x7d],0xffffffeb
   14000f3b4:	mov    ebp,0x3a6df3bc
   14000f3b9:	sub    DWORD PTR [rbp-0x42829f21],eax
   14000f3bf:	retf   
   14000f3c0:	jbe    0x14000f3ed
   14000f3c2:	out    0xea,al
   14000f3c4:	pop    rdx
   14000f3c5:	(bad)  
   14000f3c6:	retf   
   14000f3c7:	scas   eax,DWORD PTR es:[rdi]
   14000f3c8:	lods   al,BYTE PTR ds:[rsi]
   14000f3c9:	jb     0x14000f3c7
   14000f3cb:	in     eax,0xd3
   14000f3cd:	mov    esp,0xc5cbaa7c
   14000f3d2:	sub    ecx,DWORD PTR [rip+0xffffffff854576a2]        # 0xc5466a7a
   14000f3d8:	add    BYTE PTR [rdi-0x7b4d5e59],dl
   14000f3de:	xor    eax,0xef2b1200
   14000f3e3:	sbb    DWORD PTR [rax+rbp*1],0xffffffc6
   14000f3e7:	nop
   14000f3e8:	hlt    
   14000f3e9:	push   rax
   14000f3ea:	rex.RX (bad) 
   14000f3ec:	ins    DWORD PTR es:[rdi],dx
   14000f3ed:	rex.WRXB xor BYTE PTR [r14],r14b
   14000f3f0:	test   DWORD PTR [rdx*4-0x665bc04],eax
   14000f3f7:	repz pop rdx
   14000f3f9:	cmovg  edi,DWORD PTR [riz*4-0x20b747fe]
   14000f401:	hlt    
   14000f402:	test   eax,0x9e50c35a
   14000f407:	mov    eax,DWORD PTR [rsi]
   14000f409:	xchg   esp,eax
   14000f40a:	mov    edx,0x52679b9f
   14000f40f:	(bad)  
   14000f410:	rcl    DWORD PTR [rdi-0x33],1
   14000f413:	mov    eax,0x827b5d2e
   14000f418:	ret    
   14000f419:	cmp    al,0x2c
   14000f41b:	(bad)  
   14000f41c:	cmp    edi,DWORD PTR [rip+0x3e61909c]        # 0x17e6284be
   14000f422:	out    0x50,al
   14000f424:	(bad)  
   14000f425:	mov    edx,0x89884ca3
   14000f42a:	retf   0xd50a
   14000f42d:	push   0x1e1c8e08
   14000f432:	sbb    esi,DWORD PTR [rcx+0x1]
   14000f435:	mov    edx,0x7df7d3e3
   14000f43a:	fwait
   14000f43b:	jp     0x14000f3ea
   14000f43d:	movabs al,ds:0x4a9bb476f1b45cbd
   14000f446:	or     BYTE PTR [rdx+0x238d66fe],dl
   14000f44c:	movabs ds:0xec02a85868a21f70,eax
   14000f455:	adc    al,0xe5
   14000f457:	out    0xc6,eax
   14000f459:	adc    al,al
   14000f45b:	(bad)  
   14000f45c:	or     al,0xe1
   14000f45e:	jp     0x14000f4ca
   14000f460:	rex sahf 
   14000f462:	adc    DWORD PTR [rax*1+0x2ab90a],edx
   14000f469:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f46a:	xor    BYTE PTR [rax+0x68],dl
   14000f46d:	rex.WB pop r11
   14000f46f:	or     eax,0xa6a7c602
   14000f474:	adc    al,0x8c
   14000f476:	xlat   BYTE PTR ds:[rbx]
   14000f477:	shl    BYTE PTR [rsi-0x7aed1229],cl
   14000f47d:	and    DWORD PTR [rcx+0x18],esp
   14000f480:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f481:	out    0xbb,eax
   14000f483:	(bad)  
   14000f484:	fucomp st(5)
   14000f486:	and    eax,0x22893dbd
   14000f48b:	and    ch,BYTE PTR [rbp+0x4]
   14000f48e:	adc    bh,BYTE PTR [rcx+0x2a8e9167]
   14000f494:	lea    ecx,fs:[rax+0x62c65842]
   14000f49b:	mov    cs,WORD PTR [rbp-0x64]
   14000f49e:	imul   ebx,DWORD PTR [rdx+0x7d38c30c],0xffffffe9
   14000f4a5:	and    ch,BYTE PTR [rbx]
   14000f4a7:	loope  0x14000f4a4
   14000f4a9:	mov    al,cl
   14000f4ab:	xchg   ebp,eax
   14000f4ac:	retf   
   14000f4ad:	rex.R push rcx
   14000f4af:	rex.R mov edi,0xebd7a7df
   14000f4b5:	rcl    ebx,1
   14000f4b7:	imul   eax,eax,0xcd3c35cc
   14000f4bd:	add    al,0x1b
   14000f4bf:	lea    ebx,[rdx]
   14000f4c1:	jrcxz  0x14000f4a6
   14000f4c3:	jrcxz  0x14000f4b1
   14000f4c5:	fnstsw WORD PTR [rbx]
   14000f4c7:	iret   
   14000f4c8:	jge    0x14000f4c1
   14000f4ca:	rex.WR
   14000f4cb:	repz fstp QWORD PTR [rdi]
   14000f4ce:	mov    edx,0xb413df07
   14000f4d3:	cmp    eax,DWORD PTR [rbx]
   14000f4d5:	pop    rsi
   14000f4d6:	ds jno 0x14000f46a
   14000f4d9:	out    0x8f,eax
   14000f4db:	scas   al,BYTE PTR es:[rdi]
   14000f4dc:	jo     0x14000f4d2
   14000f4de:	fcom   DWORD PTR [rbp-0x62]
   14000f4e1:	jp     0x14000f4e1
   14000f4e3:	sbb    al,0x27
   14000f4e5:	rex.WRXB or QWORD PTR [r10],r15
   14000f4e8:	in     eax,dx
   14000f4e9:	(bad)  
   14000f4ea:	rex.R xor eax,0x6543cea8
   14000f4f0:	sbb    al,BYTE PTR [rdx-0x2bcaabee]
   14000f4f6:	(bad)  
   14000f4f7:	cmp    cl,dl
   14000f4f9:	sti    
   14000f4fa:	adc    BYTE PTR [rdi+0x52112fd4],dh
   14000f500:	(bad)  
   14000f501:	ss jmp 0x14000f4b2
   14000f504:	adc    al,0xc6
   14000f506:	push   rbp
   14000f507:	sub    al,0xc0
   14000f509:	rex.WRXB adc r8b,r15b
   14000f50c:	or     BYTE PTR [rbx],dl
   14000f50e:	jno    0x14000f4f7
   14000f510:	rex.X jle 0x14000f57a
   14000f513:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f514:	jmp    0x16c64cb67
   14000f519:	addr32 mov al,ds:0x1343dcb3
   14000f51f:	scas   eax,DWORD PTR es:[rdi]
   14000f520:	xor    BYTE PTR [rax],ch
   14000f522:	ret    0x5c1d
   14000f525:	(bad)  
   14000f526:	(bad)  
   14000f527:	cdq    
   14000f528:	stc    
   14000f529:	rex.X fdivr DWORD PTR [rbx+0x65]
   14000f52d:	or     eax,0xa34a8e7d
   14000f532:	(bad)  
   14000f533:	mov    DWORD PTR [rdx],esp
   14000f535:	mov    esi,0x428066a2
   14000f53a:	sbb    al,0x9
   14000f53c:	(bad)  
   14000f53d:	rex.WRB pop r8
   14000f53f:	pop    rdx
   14000f540:	ins    BYTE PTR es:[rdi],dx
   14000f541:	adc    BYTE PTR [rbp-0x63],al
   14000f544:	sbb    eax,0xfbef9dc7
   14000f549:	mov    ah,0xdb
   14000f54b:	ins    DWORD PTR es:[rdi],dx
   14000f54c:	movabs ds:0x8dcee3eb0184ca28,al
   14000f555:	fsubrp st(1),st
   14000f557:	div    BYTE PTR [rbx+rbx*4-0x3ce5fc8e]
   14000f55e:	fidiv  WORD PTR [rbp+0x6b2ade5a]
   14000f564:	fcomp  QWORD PTR [rbp-0x53]
   14000f567:	push   rsi
   14000f568:	retf   
   14000f569:	fiadd  DWORD PTR [rax]
   14000f56b:	repnz sbb DWORD PTR [rbx-0x76],edx
   14000f56f:	or     al,bl
   14000f571:	mov    eax,0xf37dcd00
   14000f576:	(bad)  
   14000f577:	test   BYTE PTR [rbp+0x116b8254],bl
   14000f57d:	jle    0x14000f510
   14000f57f:	popf   
   14000f580:	rcr    ebp,0xf
   14000f583:	sub    DWORD PTR [rbx+0x18],esi
   14000f586:	(bad)  
   14000f587:	xchg   DWORD PTR [rax],ecx
   14000f589:	iret   
   14000f58a:	and    ecx,DWORD PTR [rax]
   14000f58c:	add    al,BYTE PTR [rdi+rbp*8-0x52c2cecd]
   14000f593:	rex.WX xchg QWORD PTR [rip+0x479ef887],rcx        # 0x1879fee21
   14000f59a:	mov    bh,0xdb
   14000f59c:	gs fsubr st,st(7)
   14000f59f:	adc    eax,DWORD PTR [rdi+0x11]
   14000f5a2:	movabs eax,ds:0x76ebd0eb145a584e
   14000f5ab:	or     DWORD PTR [rbx+0x25],ecx
   14000f5ae:	add    ch,BYTE PTR [rbp+0x7f]
   14000f5b1:	lock xor eax,0x6652291
   14000f5b7:	xor    eax,0x66994328
   14000f5bc:	add    dl,dl
   14000f5be:	sbb    esp,esp
   14000f5c0:	cli    
   14000f5c1:	cmp    BYTE PTR [rbx],ah
   14000f5c3:	stc    
   14000f5c4:	int    0x7b
   14000f5c6:	fdiv   DWORD PTR [rbx+riz*8-0x1a]
   14000f5ca:	(bad)  
   14000f5cb:	mov    bh,0xdf
   14000f5cd:	rex.WRB add BYTE PTR [r10-0x2dca3ad0],0x96
   14000f5d5:	and    al,0x9
   14000f5d7:	fcmovnu st,st(3)
   14000f5d9:	ins    DWORD PTR es:[rdi],dx
   14000f5da:	mov    dh,0xb6
   14000f5dc:	pop    rdx
   14000f5dd:	pushf  
   14000f5de:	cmp    DWORD PTR [rbx-0x2a],esi
   14000f5e1:	movabs ds:0xfb04e4c4ccb97285,al
   14000f5ea:	paddsb mm4,mm7
   14000f5ed:	(bad)  
   14000f5ee:	mov    esi,0xf7be5eef
   14000f5f3:	movabs ds:0xe5585fce3d291e7f,eax
   14000f5fc:	xchg   ebp,eax
   14000f5fd:	push   rbx
   14000f5fe:	fwait
   14000f5ff:	sbb    al,0x3b
   14000f601:	mov    esi,0xbf1e57c2
   14000f606:	shl    BYTE PTR [rcx+0x63645f17],0xab
   14000f60d:	retf   0xab70
   14000f610:	(bad)  
   14000f611:	jb     0x14000f62f
   14000f613:	rex.WX jrcxz 0x14000f666
   14000f616:	sahf   
   14000f617:	test   DWORD PTR [rax-0x51],esp
   14000f61a:	push   rsi
   14000f61b:	or     DWORD PTR [rsi+0x4991b490],eax
   14000f621:	or     edx,DWORD PTR [rcx-0x46ad6e8c]
   14000f627:	and    eax,0xa5892c65
   14000f62c:	shl    bh,0x63
   14000f62f:	xchg   esp,eax
   14000f630:	pop    rbp
   14000f631:	and    DWORD PTR [rbp+0x4b],esi
   14000f634:	sub    bl,al
   14000f636:	out    dx,al
   14000f637:	imul   edx,DWORD PTR [rdx+0x7963bdd5],0x7d129c5e
   14000f641:	out    0x5b,al
   14000f643:	mov    ebx,0x5b7f408c
   14000f648:	stos   DWORD PTR es:[rdi],eax
   14000f649:	xchg   esp,eax
   14000f64a:	mov    ebx,0xfa6dde92
   14000f64f:	cli    
   14000f650:	not    BYTE PTR [rbx+riz*4]
   14000f653:	ret    0xe2b8
   14000f656:	ficomp WORD PTR [rbp-0x58cdd62b]
   14000f65c:	rex.WX test rax,0xffffffff9fbe3d3c
   14000f662:	push   rax
   14000f663:	sub    DWORD PTR [rbx+0xc],edi
   14000f666:	(bad)  
   14000f667:	fnstenv [rdi+rsi*8+0x4a971f6e]
   14000f66e:	and    eax,0x492eddba
   14000f673:	xchg   edx,eax
   14000f674:	pop    rax
   14000f675:	(bad)  
   14000f676:	movabs al,ds:0x9b8001e4abcc5bc7
   14000f67f:	je     0x14000f684
   14000f681:	stos   BYTE PTR es:[rdi],al
   14000f682:	cmc    
   14000f683:	jl     0x14000f631
   14000f685:	mov    esi,0xcc6dd9b
   14000f68a:	rex movabs ds:0xf95491c7899380e,eax
   14000f694:	loopne 0x14000f707
   14000f696:	pop    rbx
   14000f697:	fimul  WORD PTR [rax+0x74086452]
   14000f69d:	scas   eax,DWORD PTR es:[rdi]
   14000f69e:	xchg   ebp,eax
   14000f69f:	(bad)  
   14000f6a0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f6a1:	adc    rax,0xffffffff9db6d6b8
   14000f6a7:	test   BYTE PTR [rbx+0x75c6d292],0x38
   14000f6ae:	sbb    BYTE PTR [rax+0x1041edd2],ch
   14000f6b4:	loopne 0x14000f6b1
   14000f6b6:	ds (bad) 
   14000f6b8:	jp     0x14000f657
   14000f6ba:	mov    DWORD PTR [rcx+0x50e1c229],ebp
   14000f6c0:	rex.WRB
   14000f6c1:	bnd jo 0x14000f6ee
   14000f6c4:	out    dx,eax
   14000f6c5:	or     al,0x7
   14000f6c7:	add    esp,DWORD PTR [rdx]
   14000f6c9:	or     eax,0x2430a2fb
   14000f6ce:	mov    ah,BYTE PTR [rbx+0x6]
   14000f6d1:	cmp    ah,BYTE PTR [rbx-0x757bd84f]
   14000f6d7:	adc    eax,edx
   14000f6d9:	xchg   ebx,eax
   14000f6da:	mov    cs,WORD PTR [rdi+riz*4-0x6cddec40]
   14000f6e1:	or     al,0x30
   14000f6e3:	repz jl 0x14000f6cf
   14000f6e6:	rex.RX cmc 
   14000f6e8:	out    dx,al
   14000f6e9:	(bad)  
   14000f6ea:	mov    dl,0xd9
   14000f6ec:	ds (bad) 
   14000f6ee:	xchg   DWORD PTR [rax+0x19],eax
   14000f6f1:	or     al,bl
   14000f6f3:	loope  0x14000f6a5
   14000f6f5:	add    BYTE PTR [rax],0xb2
   14000f6f8:	or     bl,cl
   14000f6fa:	or     al,0xcc
   14000f6fc:	sub    BYTE PTR [rdx+0x7690c308],cl
   14000f702:	stos   DWORD PTR es:[rdi],eax
   14000f703:	vpmulhw xmm6,xmm4,XMMWORD PTR [rbx-0x5ab04108]
   14000f70b:	push   rdx
   14000f70c:	movabs eax,ds:0x39af3f7fb4b1af5e
   14000f715:	cmp    al,0xcd
   14000f717:	(bad)  
   14000f718:	fistp  QWORD PTR [rbx+0x37]
   14000f71b:	(bad)  
   14000f71c:	std    
   14000f71d:	retf   
   14000f71e:	add    DWORD PTR [rbp+0x2b8b9f56],ebp
   14000f724:	sub    eax,0xe1dcbf8e
   14000f729:	cld    
   14000f72a:	jns    0x14000f6f5
   14000f72c:	(bad)  
   14000f72d:	out    0x90,al
   14000f72f:	(bad)  
   14000f730:	mov    ch,0xf3
   14000f732:	pushf  
   14000f733:	ds (bad) 
   14000f735:	pop    rcx
   14000f736:	fisttp WORD PTR [rdx]
   14000f738:	fsubr  DWORD PTR [rsi+0x7]
   14000f73b:	ror    BYTE PTR [rdi],1
   14000f73d:	nop
   14000f73e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f73f:	cmp    eax,0x36328ac8
   14000f744:	or     ch,BYTE PTR [rdi]
   14000f746:	and    al,0x10
   14000f748:	add    esp,DWORD PTR [rsp+rcx*4+0x2110e588]
   14000f74f:	sti    
   14000f750:	retf   0x20c6
   14000f753:	movsxd eax,DWORD PTR [rdx+riz*2-0x76]
   14000f757:	push   0x2a
   14000f759:	fwait
   14000f75a:	(bad)  
   14000f75b:	jo     0x14000f75f
   14000f75d:	xchg   ebx,eax
   14000f75e:	lods   al,BYTE PTR ds:[rsi]
   14000f75f:	hlt    
   14000f760:	ja     0x14000f6e5
   14000f762:	jnp    0x14000f796
   14000f764:	sub    ah,BYTE PTR [rax+0x48100f6b]
   14000f76a:	push   rbx
   14000f76b:	xchg   DWORD PTR [rdx+0x4],esp
   14000f76e:	(bad)  
   14000f76f:	(bad)  
   14000f770:	test   BYTE PTR [rdx+rcx*2-0x75],0xe9
   14000f775:	jne    0x14000f703
   14000f777:	cmp    dl,BYTE PTR [rsi+0x74]
   14000f77a:	mov    esp,0x2ca863b2
   14000f77f:	(bad)
   14000f782:	(bad)  
   14000f783:	test   al,0x3e
   14000f785:	push   rbx
   14000f786:	shr    BYTE PTR [rbp-0x2c],0x3d
   14000f78a:	pop    rbp
   14000f78b:	(bad)  
   14000f78c:	in     eax,0xe6
   14000f78e:	pop    rsp
   14000f78f:	push   rbp
   14000f790:	push   rdi
   14000f791:	mov    bh,0x1e
   14000f793:	(bad)  
   14000f794:	mov    ebp,0x76d30021
   14000f799:	(bad)  
   14000f79a:	repnz rex.RB int 0x30
   14000f79e:	sub    DWORD PTR [rbx+0x45],0x3eeb5e02
   14000f7a5:	out    0x1a,al
   14000f7a7:	add    eax,0x5618581d
   14000f7ac:	jl     0x14000f759
   14000f7ae:	pop    rbx
   14000f7af:	test   al,0xd5
   14000f7b1:	or     BYTE PTR [rsi+0x47],0x19
   14000f7b5:	(bad)
   14000f7b8:	sbb    dl,BYTE PTR [rbx-0x2d]
   14000f7bb:	rcl    esp,cl
   14000f7bd:	jmp    0x14000f834
   14000f7bf:	adc    cl,BYTE PTR [rbp-0x1c]
   14000f7c2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f7c3:	push   rdx
   14000f7c4:	or     edi,ebx
   14000f7c6:	not    ebx
   14000f7c8:	cli    
   14000f7c9:	add    ebx,edx
   14000f7cb:	xchg   esi,eax
   14000f7cc:	xor    BYTE PTR [rax],bl
   14000f7ce:	or     al,0xe8
   14000f7d0:	jne    0x14000f80c
   14000f7d2:	or     bh,BYTE PTR [rip+0xfffffffff50c060c]        # 0x1350cfde4
   14000f7d8:	in     al,0x23
   14000f7da:	iret   
   14000f7db:	repz or BYTE PTR [rdx+0x25],cl
   14000f7df:	jnp    0x14000f83f
   14000f7e1:	rex.RX std 
   14000f7e3:	rex.WB pop r15
   14000f7e5:	xor    BYTE PTR [rbx-0x4],al
   14000f7e8:	out    0x9d,al
   14000f7ea:	fstp   QWORD PTR [rdi+0x57]
   14000f7ed:	jge    0x14000f77f
   14000f7ef:	push   rdx
   14000f7f0:	rex.WRB (bad) 
   14000f7f2:	mov    al,ch
   14000f7f4:	test   al,0xe1
   14000f7f6:	jno    0x14000f79f
   14000f7f8:	out    dx,ax
   14000f7fa:	jmp    0x14000f875
   14000f7fc:	jbe    0x14000f87c
   14000f7fe:	pop    rsp
   14000f7ff:	sbb    BYTE PTR [rsi+0x590e6e6c],al
   14000f805:	pop    rbx
   14000f806:	pop    rbx
   14000f807:	mov    bh,0x52
   14000f809:	lods   al,BYTE PTR ds:[rsi]
   14000f80a:	push   rsp
   14000f80b:	sub    dl,BYTE PTR [rcx+0x2a]
   14000f80e:	add    eax,0xe25ca54
   14000f813:	(bad)  
   14000f814:	push   rsi
   14000f815:	jns    0x14000f7ea
   14000f817:	add    esi,DWORD PTR [rbx]
   14000f819:	xor    al,0xea
   14000f81b:	movsxd edx,DWORD PTR [rdx+rbp*2-0x75]
   14000f81f:	rex.WR
   14000f820:	rex.WRX iretq 
   14000f822:	shr    ebx,cl
   14000f824:	cmc    
   14000f825:	cmp    DWORD PTR [rsi+0x62],esi
   14000f828:	fwait
   14000f829:	movabs ds:0x4bccbd3fa5f26c2f,eax
   14000f832:	(bad)  
   14000f833:	jp     0x14000f7e1
   14000f835:	lods   eax,DWORD PTR ds:[rsi]
   14000f836:	or     eax,0x88c777e8
   14000f83b:	(bad)  
   14000f83c:	cmp    ah,dl
   14000f83e:	(bad)  
   14000f83f:	add    al,0xd5
   14000f841:	add    eax,0xbcaaa0fc
   14000f846:	(bad)  
   14000f847:	xor    al,BYTE PTR [rdx-0x491dfc90]
   14000f84d:	push   rdx
   14000f84e:	(bad)  
   14000f84f:	movabs ds:0x4219a0a6d661822e,al
   14000f858:	rex.RX lahf 
   14000f85a:	(bad)  
   14000f85b:	shr    BYTE PTR [rax+0x664faa97],1
   14000f861:	(bad)  
   14000f862:	int    0x8b
   14000f864:	and    BYTE PTR [rax-0x2d],dl
   14000f867:	test   BYTE PTR [rbp+0x67],cl
   14000f86a:	cmp    cl,BYTE PTR [rcx+rax*2-0x1c]
   14000f86e:	stc    
   14000f86f:	out    0xd,al
   14000f871:	hlt    
   14000f872:	xchg   ebx,eax
   14000f873:	mov    dh,0x45
   14000f875:	test   BYTE PTR [rcx],dl
   14000f877:	int3   
   14000f878:	out    dx,al
   14000f879:	test   eax,0x3526fbe2
   14000f87e:	pop    rsp
   14000f87f:	push   rsi
   14000f880:	mov    eax,0x24d163b8
   14000f885:	add    cl,cl
   14000f887:	(bad)  
   14000f888:	iret   
   14000f889:	or     eax,eax
   14000f88b:	xchg   ebp,eax
   14000f88c:	jmp    0x14000f86d
   14000f88e:	lock (bad) 
   14000f890:	mov    ah,0x9b
   14000f892:	retf   0xa408
   14000f895:	pop    rdx
   14000f896:	ficomp WORD PTR [rax-0x4a2ec599]
   14000f89c:	repnz stos DWORD PTR es:[rdi],eax
   14000f89e:	cmc    
   14000f89f:	cmp    al,0x7a
   14000f8a1:	push   rax
   14000f8a2:	(bad)  
   14000f8a3:	pop    rdi
   14000f8a4:	fist   DWORD PTR [rbx]
   14000f8a6:	mov    al,0x13
   14000f8a8:	pushf  
   14000f8a9:	(bad)  
   14000f8aa:	xor    cl,BYTE PTR [rsi+riz*8]
   14000f8ad:	out    0x3,eax
   14000f8af:	mov    eax,0xe42188ad
   14000f8b4:	out    dx,eax
   14000f8b5:	jns    0x14000f864
   14000f8b7:	std    
   14000f8b8:	xlat   BYTE PTR ds:[rbx]
   14000f8b9:	repnz cmp cl,BYTE PTR [rax+0x29]
   14000f8bd:	adc    eax,0x514d4fe1
   14000f8c2:	xlat   BYTE PTR ds:[rbx]
   14000f8c3:	xchg   BYTE PTR [rbx+rax*2-0x4],al
   14000f8c7:	rex.X or dl,bl
   14000f8ca:	in     eax,dx
   14000f8cb:	lods   eax,DWORD PTR ss:[rsi]
   14000f8cd:	push   rsi
   14000f8ce:	mov    ebx,DWORD PTR [rsi-0x51]
   14000f8d1:	rex.RXB test eax,0x68d9a65c
   14000f8d7:	push   rax
   14000f8d8:	stos   DWORD PTR es:[rdi],eax
   14000f8d9:	(bad)  
   14000f8da:	sbb    BYTE PTR [rbx-0x7474c4aa],ch
   14000f8e0:	mov    esp,DWORD PTR [rbp-0x11a95296]
   14000f8e6:	idiv   DWORD PTR [rdx+0x6c]
   14000f8e9:	outs   dx,DWORD PTR ds:[rsi]
   14000f8ea:	outs   dx,DWORD PTR ds:[rsi]
   14000f8eb:	mov    bl,0xbd
   14000f8ed:	mov    ch,0x45
   14000f8ef:	mov    bh,0xdb
   14000f8f1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f8f2:	fucomip st,st(3)
   14000f8f4:	shr    edi,1
   14000f8f6:	imul   DWORD PTR [rbp-0x7efbeb76]
   14000f8fc:	sub    eax,0x374191e2
   14000f901:	outs   dx,BYTE PTR ds:[rsi]
   14000f902:	lahf   
   14000f903:	adc    al,0xf4
   14000f905:	pop    rdi
   14000f906:	sahf   
   14000f907:	leave  
   14000f908:	jp     0x14000f94c
   14000f90a:	adc    bh,ch
   14000f90c:	(bad)  
   14000f90d:	jmp    0x1446c94f8
   14000f912:	ss sub eax,0x83061249
   14000f918:	and    DWORD PTR [rbx-0x12526f3f],eax
   14000f91e:	ss out 0xcf,eax
   14000f921:	lods   eax,DWORD PTR ds:[rsi]
   14000f922:	and    BYTE PTR [rcx+0x79],dl
   14000f925:	out    dx,eax
   14000f926:	(bad)  
   14000f927:	cmc    
   14000f928:	sbb    ah,bl
   14000f92a:	adc    edx,DWORD PTR [rbx]
   14000f92c:	sub    al,0x2e
   14000f92e:	(bad)  
   14000f92f:	repz cmp eax,0xef9a697f
   14000f935:	sti    
   14000f936:	enter  0xca21,0xa5
   14000f93a:	es retf 
   14000f93c:	(bad)  
   14000f93d:	(bad)  
   14000f93e:	stc    
   14000f93f:	fcmovbe st,st(3)
   14000f941:	fwait
   14000f942:	mov    esp,0x4f0aec70
   14000f947:	sbb    eax,0xc9cce75b
   14000f94c:	xchg   ebx,eax
   14000f94d:	lods   al,BYTE PTR ds:[rsi]
   14000f94e:	ins    DWORD PTR es:[rdi],dx
   14000f94f:	ss (bad) 
   14000f951:	pop    rax
   14000f952:	xchg   dl,dh
   14000f954:	sbb    BYTE PTR [rsi+0x63],bl
   14000f957:	divps  xmm7,XMMWORD PTR [rcx-0x3a]
   14000f95b:	mov    ?,WORD PTR [rip+0xc396e2f]        # 0x14c3a6790
   14000f961:	movabs eax,ds:0x996cc2134a4d6765
   14000f96a:	rex
   14000f96b:	rol    BYTE PTR cs:[rdi-0x68],0x6d
   14000f970:	jmp    0x133ac5929
   14000f975:	imul   esp,DWORD PTR [rsi-0x60],0x7b
   14000f979:	or     ah,BYTE PTR [rcx+rsi*4-0x5c]
   14000f97d:	mov    bh,0x3c
   14000f97f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f980:	test   al,0x25
   14000f982:	retf   0x1b68
   14000f985:	(bad)  
   14000f986:	xor    ebp,edx
   14000f988:	mov    al,BYTE PTR [rax+0x26]
   14000f98b:	sub    esp,edi
   14000f98d:	(bad)  
   14000f98e:	rex.X movabs ds:0x628b76edd09249,al
   14000f998:	movabs eax,cs:0xa0041bb6955f0122
   14000f9a2:	sti    
   14000f9a3:	jmp    0x18de18402
   14000f9a9:	(bad)  
   14000f9aa:	or     edx,ebp
   14000f9ac:	xchg   esp,eax
   14000f9ad:	pop    rbx
   14000f9ae:	(bad)  
   14000f9af:	rex.WRB cli 
   14000f9b1:	cdq    
   14000f9b2:	mov    ebx,0x8a952380
   14000f9b7:	mov    dh,0x5f
   14000f9b9:	mov    esp,DWORD PTR [rcx]
   14000f9bb:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f9bc:	mul    DWORD PTR [rsi+0x47]
   14000f9bf:	(bad)  
   14000f9c0:	int3   
   14000f9c1:	movabs ds:0xbd7b96bf93862283,eax
   14000f9ca:	movabs ds:0x254a96610c455796,al
   14000f9d3:	es (bad) 
   14000f9d5:	(bad)  
   14000f9d6:	cdq    
   14000f9d7:	cwde   
   14000f9d8:	cwde   
   14000f9d9:	mov    al,0xc8
   14000f9db:	(bad)  
   14000f9dc:	mov    ah,0x38
   14000f9de:	mov    gs,WORD PTR [rcx-0x49]
   14000f9e1:	fld    TBYTE PTR [rsi+rbp*2+0x6e]
   14000f9e5:	adc    al,bh
   14000f9e7:	xor    ebp,esp
   14000f9e9:	jb     0x14000f984
   14000f9eb:	rex.WX movabs rcx,0x9bf1ebd7a43870cc
   14000f9f5:	mov    edi,0x7dbf9bf9
   14000f9fa:	jmp    0xffe09fd1
   14000f9ff:	out    dx,eax
   14000fa00:	mov    esi,0xdaf8defb
   14000fa05:	xlat   BYTE PTR ds:[rbx]
   14000fa06:	mov    esi,0xef7bcef6
   14000fa0b:	mov    ebp,0x87fdbef7
   14000fa10:	(bad)  
   14000fa11:	sbb    eax,0x2640ca40
   14000fa16:	rex.WB adc BYTE PTR [r13+0x11],al
   14000fa1a:	in     eax,dx
   14000fa1b:	push   rsi
   14000fa1c:	mov    ebp,DWORD PTR [rbp-0x2425d253]
   14000fa22:	fcomi  st,st(4)
   14000fa24:	je     0x14000fa14
   14000fa26:	add    cl,bh
   14000fa28:	rep ins BYTE PTR es:[rdi],dx
   14000fa2a:	or     al,0x43
   14000fa2c:	cmps   DWORD PTR es:[rsi],DWORD PTR es:[rdi]
   14000fa2e:	pushf  
   14000fa2f:	sti    
   14000fa30:	(bad)  
   14000fa31:	add    eax,0xfa5022ef
   14000fa36:	mov    al,0x4c
   14000fa38:	xchg   edx,eax
   14000fa39:	sbb    eax,0xb4cdf3c7
   14000fa3e:	jl     0x14000fabf
   14000fa40:	mov    edx,0xa74e9d36
   14000fa45:	rex.RXB mov r11d,0xd9dce5dd
   14000fa4b:	repz js 0x14000fa90
   14000fa4e:	push   rax
   14000fa4f:	stos   DWORD PTR es:[rdi],eax
   14000fa50:	push   rbp
   14000fa51:	test   eax,0xd9ecea37
   14000fa56:	xor    ecx,ebp
   14000fa58:	mov    ebx,0xf807cdf
   14000fa5d:	mov    esi,0xd2fc1ef7
   14000fa62:	and    al,0xad
   14000fa64:	not    BYTE PTR [rax-0x1e26c0d1]
   14000fa6a:	in     al,dx
   14000fa6b:	test   eax,0xd89d8e55
   14000fa70:	loop   0x14000fa23
   14000fa72:	(bad)  
   14000fa73:	rex.WRX rcr dl,1
   14000fa76:	mov    ds,WORD PTR [rax]
   14000fa78:	(bad)  
   14000fa79:	jne    0x14000fa01
   14000fa7b:	rex.WB or rax,0x37804d19
   14000fa81:	or     eax,0x9afc7995
   14000fa86:	xchg   edi,eax
   14000fa88:	add    BYTE PTR [rdi+0x445dc43e],cl
   14000fa8e:	mov    esp,0x548318a5
   14000fa93:	imul   ebx,edx,0xf79a1114
   14000fa99:	push   rdi
   14000fa9a:	push   0xffffffffe2b4da40
   14000fa9f:	out    dx,al
   14000faa0:	fwait
   14000faa1:	mov    ebp,DWORD PTR [rbp+rdi*2+0x49a0ac80]
   14000faa8:	push   rbp
   14000faa9:	add    dl,dl
   14000faab:	or     al,cl
   14000faad:	mov    ecx,0x1528938e
   14000fab2:	add    BYTE PTR [rcx],ch
   14000fab4:	or     esp,edi
   14000fab6:	test   BYTE PTR [rsi+0x3f],bh
   14000fab9:	cmp    edx,DWORD PTR [rbp+0x4d1e3f3f]
   14000fabf:	adc    al,0x60
   14000fac1:	adc    DWORD PTR [rax-0x702e00c6],0x39e6f47e
   14000facb:	repz xlat BYTE PTR ds:[rbx]
   14000facd:	fnstenv [rsi-0x7d]
   14000fad0:	add    dl,bh
   14000fad2:	sahf   
   14000fad3:	out    0xd9,eax
   14000fad5:	stos   BYTE PTR es:[rdi],al
   14000fad6:	xor    DWORD PTR [rsi-0x2e],eax
   14000fad9:	sbb    ecx,DWORD PTR [rcx]
   14000fadb:	scas   eax,DWORD PTR es:[rdi]
   14000fadc:	or     BYTE PTR [rbx],bh
   14000fade:	test   edi,esi
   14000fae0:	push   0x40
   14000fae2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000fae3:	(bad)  
   14000fae4:	xor    eax,0x420953cf
   14000fae9:	lea    edi,[rbx]
   14000faeb:	int    0x6d
   14000faed:	rex.RB
   14000faee:	rex.RX shl BYTE PTR [rdx+0x6ffba376],0xc8
   14000faf6:	adc    eax,0xf97d8d78
   14000fafb:	data16 or BYTE PTR [rdi+0x33312a54],bh
   14000fb02:	xor    eax,ebx
   14000fb04:	clc    
   14000fb05:	clc    
   14000fb06:	cmp    ch,ah
   14000fb08:	jb     0x14000fb43
   14000fb0a:	xchg   ebx,eax
   14000fb0b:	fadd   QWORD PTR [rax+riz*2]
   14000fb0e:	jnp    0x14000fb8b
   14000fb10:	fwait
   14000fb11:	lods   eax,DWORD PTR ds:[rsi]
   14000fb12:	lods   eax,DWORD PTR ds:[rsi]
   14000fb13:	sub    eax,0x7c77855b
   14000fb18:	jl     0x14000fab6
   14000fb1a:	push   0xffffffffffffffb5
   14000fb1c:	rex.WX adc BYTE PTR [rsi+r14*8],al
   14000fb20:	(bad)  
   14000fb21:	pop    rdx
   14000fb22:	adc    ch,BYTE PTR [rdi+rdi*1-0xa]
   14000fb26:	fsub   DWORD PTR [rbx-0x39]
   14000fb29:	(bad)  
   14000fb2a:	jnp    0x14000fb18
   14000fb2c:	mov    cl,0x53
   14000fb2e:	adc    BYTE PTR [rdi-0x55],0xd5
   14000fb32:	(bad)  
   14000fb33:	mov    ecx,DWORD PTR [rbx-0x59598475]
   14000fb39:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000fb3a:	es (bad) 
   14000fb3c:	es neg BYTE PTR es:[rax+rdi*1]
   14000fb41:	jo     0x14000fba3
   14000fb43:	outs   dx,BYTE PTR ds:[rsi]
   14000fb44:	call   rdx
   14000fb46:	shl    dl,cl
   14000fb48:	add    edi,DWORD PTR [rdi-0x12]
   14000fb4b:	iret   
   14000fb4c:	mov    ebp,0x8585cee6
   14000fb51:	or     ebp,0x66
   14000fb54:	jae    0x14000fb78
   14000fb56:	(bad)  
   14000fb57:	rex.XB
   14000fb58:	ss (bad) 
   14000fb5a:	(bad)  
   14000fb5b:	fstp   DWORD PTR [rax+0x5f]
   14000fb5e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000fb5f:	movabs ds:0xdafb712d8e388755,eax
   14000fb68:	xchg   esi,eax
   14000fb69:	(bad)  
   14000fb6a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000fb6b:	pop    rax
   14000fb6c:	scas   al,BYTE PTR es:[rdi]
   14000fb6d:	(bad)  
   14000fb6e:	std    
   14000fb6f:	and    BYTE PTR [rax-0x4f],dl
   14000fb72:	(bad)  
   14000fb73:	mov    bh,0xa1
   14000fb75:	in     eax,0xed
   14000fb77:	or     al,BYTE PTR [rdx]
   14000fb79:	or     bl,al
   14000fb7b:	mov    BYTE PTR [rbp-0x2829d273],cl
   14000fb81:	(bad)  
   14000fb82:	cmp    ecx,esi
   14000fb84:	retf   0x4a29
   14000fb87:	in     eax,0x32
   14000fb89:	mov    ch,0x7a
   14000fb8b:	xchg   ebp,eax
   14000fb8c:	mov    cl,0xb1
   14000fb8e:	xor    esi,ebp
   14000fb90:	sahf   
   14000fb91:	fwait
   14000fb92:	in     al,0xc1
   14000fb94:	mov    ebx,0xfbe77c1b
   14000fb99:	(bad)  
   14000fb9a:	adc    BYTE PTR [rcx+rbx*1],dh
   14000fb9d:	(bad)  
   14000fb9e:	gs (bad) 
   14000fba0:	(bad)  
   14000fba1:	add    esi,DWORD PTR [rsi-0x416344c9]
   14000fba7:	nop
   14000fba8:	jo     0x14000fc1f
   14000fbaa:	jne    0x14000fb37
   14000fbac:	scas   eax,DWORD PTR es:[rdi]
   14000fbad:	(bad)  
   14000fbae:	sbb    eax,0x36f9ec72
   14000fbb3:	fld    TBYTE PTR [rbp-0xf9a05fc]
   14000fbb9:	jge    0x14000fb63
   14000fbbb:	(bad)  
   14000fbbc:	loop   0x14000fc13
   14000fbbe:	sbb    edi,DWORD PTR [rdx]
   14000fbc0:	cld    
   14000fbc1:	and    BYTE PTR [rcx],al
   14000fbc3:	sbb    DWORD PTR [rcx],esp
   14000fbc5:	loop   0x14000fbc8
   14000fbc7:	and    al,0x2d
   14000fbc9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000fbca:	rex.WX cdqe 
   14000fbcc:	and    BYTE PTR [rsi],ah
   14000fbce:	sbb    eax,0x988362b7
   14000fbd3:	test   BYTE PTR [rax+0x46],al
   14000fbd6:	or     DWORD PTR [rcx],ebx
   14000fbd8:	mul    DWORD PTR [rdx]
   14000fbda:	rex.RX xor r9d,eax
   14000fbdd:	xor    DWORD PTR [rcx],eax
   14000fbdf:	sbb    al,0xc1
   14000fbe1:	xchg   ebx,eax
   14000fbe2:	outs   dx,BYTE PTR ds:[rsi]
   14000fbe3:	rex.WB cqo 
   14000fbe5:	outs   dx,BYTE PTR ds:[rsi]
   14000fbe6:	lods   al,BYTE PTR ds:[rsi]
   14000fbe7:	ret    0x380
   14000fbea:	rex.WRXB xor r9b,r8b
   14000fbed:	push   0x0
   14000fbef:	jbe    0x14000fc0d
   14000fbf1:	xchg   esi,eax
   14000fbf2:	retf   
   14000fbf3:	stos   BYTE PTR es:[rdi],al
   14000fbf4:	(bad)  
   14000fbf5:	pop    rsp
   14000fbf6:	mov    esi,0xa76ea636
   14000fbfb:	mov    esi,0x7afebe9e
   14000fc00:	fld    TBYTE PTR [rsi+0x10]
   14000fc03:	rex pop rdi
   14000fc05:	or     BYTE PTR [rcx-0x49],al
   14000fc08:	fist   DWORD PTR [rcx-0x3f]
   14000fc0b:	(bad)  
   14000fc0c:	xor    ch,BYTE PTR [rip+0x749aa563]        # 0x1b49ba175
   14000fc12:	cwde   
   14000fc13:	sbb    BYTE PTR [rcx+0x4f],0x89
   14000fc17:	ret    
   14000fc18:	or     al,0x8a
   14000fc1a:	imul   esp,DWORD PTR [rsp+rax*2],0xffffffb8
   14000fc1e:	test   eax,0xd7b4e796
   14000fc23:	xor    ch,dl
   14000fc25:	pop    rbp
   14000fc26:	psubd  mm2,QWORD PTR [rdi]
   14000fc29:	xor    DWORD PTR [rcx+0x54a98e38],eax
   14000fc2f:	sub    cl,ah
   14000fc31:	int    0xcd
   14000fc33:	xor    DWORD PTR [rip+0xfffffffff7676d3d],edi        # 0x137686976
   14000fc39:	mov    ecx,0x5b5bcd61
   14000fc3e:	pop    rbx
   14000fc3f:	lods   al,BYTE PTR ds:[rsi]
   14000fc40:	scas   eax,DWORD PTR es:[rdi]
   14000fc41:	scas   eax,DWORD PTR es:[rdi]
   14000fc42:	rcl    ebp,cl
   14000fc44:	mov    bl,0xff
   14000fc46:	es (bad) 
   14000fc48:	(bad)  
   14000fc49:	imul   esi,DWORD PTR [rsi],0x841969b
   14000fc4f:	and    DWORD PTR [rax],ecx
   14000fc51:	ret    
   14000fc52:	nop
   14000fc53:	retf   
   14000fc54:	xchg   edi,eax
   14000fc55:	(bad)  
   14000fc56:	xor    ebx,DWORD PTR [rax]
   14000fc58:	or     al,0x90
   14000fc5a:	push   rdx
   14000fc5b:	not    BYTE PTR [rcx-0x27]
   14000fc5e:	xor    eax,0xf5ec801a
   14000fc63:	jp     0x14000fc56
   14000fc65:	leave  
   14000fc66:	xchg   ebx,eax
   14000fc67:	(bad)  
   14000fc68:	(bad)  
   14000fc69:	movabs ds:0x6ad514cce8c7434a,al
   14000fc72:	mov    ch,0x31
   14000fc74:	(bad)  
   14000fc75:	(bad)  
   14000fc76:	(bad)  
   14000fc77:	stc    
   14000fc78:	xchg   esi,eax
   14000fc79:	mov    bh,0xbc
   14000fc7b:	in     eax,0x75
   14000fc7d:	(bad)  
   14000fc7e:	(bad)  
   14000fc7f:	(bad)  
   14000fc80:	cmp    al,0xfc
   14000fc82:	rol    BYTE PTR [rbx-0xf8621f1],1
   14000fc88:	lock loope 0x14000fc86
   14000fc8b:	sbb    esi,ebp
   14000fc8d:	cli    
   14000fc8e:	sbb    BYTE PTR [rbp-0x54],r8b
   14000fc92:	scas   eax,DWORD PTR es:[rdi]
   14000fc93:	scas   al,BYTE PTR es:[rdi]
   14000fc94:	mov    dl,0xb2
   14000fc96:	mov    dl,0x42
   14000fc98:	mov    bh,0xdd
   14000fc9a:	push   rsi
   14000fc9b:	icebp  
   14000fc9c:	or     cl,BYTE PTR [rcx+0x42]
   14000fc9f:	movabs al,ds:0x61ae0ad6d90d8251
   14000fca8:	sar    BYTE PTR [rbx],0xc
   14000fcab:	ret    0xde5b
   14000fcae:	mov    WORD PTR [rcx+0x74dcf5d3],es
   14000fcb4:	cmp    edi,DWORD PTR [rip+0x573edd7a]        # 0x1973fda34
   14000fcba:	scas   eax,DWORD PTR es:[rdi]
   14000fcbb:	lods   al,BYTE PTR ds:[rsi]
   14000fcbc:	and    al,BYTE PTR [rax+riz*1+0x1bd40528]
   14000fcc3:	xor    eax,0x98262726
   14000fcc8:	(bad)  
   14000fcc9:	(bad)  
   14000fcca:	loopne 0x14000fc9a
   14000fccc:	xlat   BYTE PTR ds:[rbx]
   14000fccd:	(bad)  
   14000fcce:	lock (bad) 
   14000fcd0:	mov    edi,0xe37a816d
   14000fcd5:	and    ch,bl
   14000fcd7:	or     edi,0xc78f7ada
   14000fcdd:	pop    rsi
   14000fcde:	call   0x1adb2efd6
   14000fce3:	sahf   
   14000fce4:	cmp    DWORD PTR [rdx-0x72],edi
   14000fce7:	rex.RXB mov r14d,0xd6ee9972
   14000fced:	sbb    bh,BYTE PTR [rbp+0x75c424de]
   14000fcf3:	test   al,0x8f
   14000fcf5:	rex.B jne 0x14000fcfa
   14000fcf8:	scas   eax,DWORD PTR es:[rdi]
   14000fcf9:	mov    dl,0xf
   14000fcfb:	scas   eax,DWORD PTR es:[rdi]
   14000fcfc:	out    dx,al
   14000fcfd:	test   eax,0x1b519199
   14000fd02:	ret    0x4475
   14000fd05:	mov    ah,0xe1
   14000fd07:	rex.WR mov ds,WORD PTR [rdx]
   14000fd0a:	movabs ds:0xbdc6404048d3d528,al
   14000fd13:	cwde   
   14000fd14:	jns    0x14000fd86
   14000fd16:	cmp    eax,0x53155d9e
   14000fd1b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000fd1c:	add    eax,DWORD PTR [rbx]
   14000fd1e:	and    BYTE PTR [rdx-0x78794e7],cl
   14000fd24:	or     DWORD PTR [rdi+0x373d4e24],0xf7dd48e6
   14000fd2e:	std    
   14000fd2f:	jle    0x14000fcf0
   14000fd31:	jo     0x14000fd5d
   14000fd33:	xor    BYTE PTR [rdi-0x2cbfd32e],ch
   14000fd39:	jbe    0x14000fcbe
   14000fd3b:	add    BYTE PTR [rsi+rdx*2+0x17],al
   14000fd3f:	push   rdi
   14000fd40:	cs cdq 
   14000fd42:	push   rsp
   14000fd43:	add    ah,BYTE PTR [rsi-0x3]
   14000fd46:	rcl    DWORD PTR [rax+0x506c495],1
   14000fd4c:	mov    eax,0xb7eb402e
   14000fd51:	(bad)  
   14000fd52:	movabs ds:0xcf3bf256edb73dee,eax
   14000fd5b:	ins    BYTE PTR es:[rdi],dx
   14000fd5c:	idiv   DWORD PTR [rbx+0x4579eeeb]
   14000fd62:	jmp    0x14000fd4a
   14000fd64:	sbb    DWORD PTR [rbx+0x7a7a6020],eax
   14000fd6a:	(bad)  
   14000fd6b:	(bad)
   14000fd6e:	sbb    cl,BYTE PTR [rbp+0x6823cd86]
   14000fd74:	and    BYTE PTR [rdi-0x45],bh
   14000fd77:	fucom  st(6)
   14000fd79:	ret    0xb85
   14000fd7c:	je     0x14000fdb8
   14000fd7e:	sbb    eax,0x76602082
   14000fd83:	jbe    0x14000fddb
   14000fd85:	and    eax,0x19b274d1
   14000fd8a:	(bad)
   14000fd8d:	cli    
   14000fd8e:	cli    
   14000fd8f:	cmp    dl,BYTE PTR [rdi+0x6b625d2e]
   14000fd95:	imul   ecx,DWORD PTR [rbx],0xffffffcf
   14000fd98:	repz fcomp st(2)
   14000fd9b:	fcmovu st,st(2)
   14000fd9d:	rex xchg ebp,eax
   14000fd9f:	(bad)  
   14000fda0:	xor    eax,0x9b23cea3
   14000fda5:	(bad)
   14000fda9:	mov    edi,0xcf6797df
   14000fdae:	sahf   
   14000fdaf:	pop    rbp
   14000fdb0:	cmp    edi,DWORD PTR [rbx-0xa]
   14000fdb3:	in     al,dx
   14000fdb4:	(bad)  
   14000fdb5:	add    cl,BYTE PTR [rcx+0x10]
   14000fdb8:	add    al,0xd5
   14000fdba:	(bad)
   14000fdbd:	cdq    
   14000fdbe:	xchg   DWORD PTR [rsi],ebx
   14000fdc0:	jp     0x14000fdaa
   14000fdc2:	(bad)  
   14000fdc3:	cdq    
   14000fdc4:	cdq    
   14000fdc5:	cdq    
   14000fdc6:	mov    ebx,0x87e1e5be
   14000fdcb:	out    dx,eax
   14000fdcc:	mov    ebx,0x1f3bcee3
   14000fdd1:	sbb    BYTE PTR [rdi],bl
   14000fdd3:	sbb    ebx,DWORD PTR [rbx]
   14000fdd5:	sbb    eax,DWORD PTR [rsi-0x4e4a405f]
   14000fddb:	sar    edx,0xda
   14000fdde:	sbb    ch,ch
   14000fde0:	push   rsi
   14000fde1:	rex.WXB sbb QWORD PTR [r10],rbx
   14000fde4:	jnp    0x14000fda3
   14000fde6:	or     al,0xfa
   14000fde8:	xor    cl,BYTE PTR [rax]
   14000fdea:	out    dx,al
   14000fdeb:	jbe    0x14000fe05
   14000fded:	rex.WB scas rax,QWORD PTR es:[rdi]
   14000fdef:	xlat   BYTE PTR ds:[rbx]
   14000fdf0:	or     al,0x72
   14000fdf2:	adc    DWORD PTR [rsi+0x278b9167],ebx
   14000fdf8:	cmp    al,0x86
   14000fdfa:	std    
   14000fdfb:	nop
   14000fdfc:	stos   DWORD PTR es:[rdi],eax
   14000fdfd:	ret    
   14000fdfe:	jne    0x14000fdae
   14000fe00:	scas   al,BYTE PTR es:[rdi]
   14000fe01:	outs   dx,BYTE PTR ds:[rsi]
   14000fe02:	jo     0x14000fde6
   14000fe04:	in     al,0x59
   14000fe06:	sub    dl,BYTE PTR [rbp-0x72a54af6]
   14000fe0c:	icebp  
   14000fe0d:	icebp  
   14000fe0e:	xor    DWORD PTR [rsi],edx
   14000fe10:	test   dh,0xf3
   14000fe13:	out    dx,al
   14000fe14:	xlat   BYTE PTR ds:[rbx]
   14000fe15:	rex.WRXB
   14000fe16:	repz fucomp st(7)
   14000fe19:	pop    rdx
   14000fe1a:	and    al,0xe6
   14000fe1c:	xor    bl,bl
   14000fe1e:	lods   eax,DWORD PTR ds:[rsi]
   14000fe1f:	test   BYTE PTR [rbx+0x6b],cl
   14000fe22:	sub    eax,0xc7a4fcbe
   14000fe27:	jae    0x14000fe78
   14000fe29:	mov    ebp,0x163f1fc8
   14000fe2e:	jae    0x14000fea5
   14000fe30:	stc    
   14000fe31:	adc    eax,0x447b3636
   14000fe36:	popf   
   14000fe37:	xor    DWORD PTR [rax],ebp
   14000fe39:	(bad)  
   14000fe3a:	push   rbp
   14000fe3b:	test   al,0x73
   14000fe3d:	cmc    
   14000fe3e:	and    BYTE PTR [rdi+rcx*1-0x7d],dl
   14000fe42:	out    dx,eax
   14000fe43:	jrcxz  0x14000fe0e
   14000fe45:	xor    ebp,DWORD PTR [rax+0xc8b4]
   14000fe4b:	and    BYTE PTR [rax],al
   14000fe4d:	rex.WB
   14000fe4e:	rex.R
   14000fe4f:	push   r12
   14000fe51:	(bad)  
   14000fe52:	and    bl,dl
   14000fe54:	test   BYTE PTR [rax+0xb],bh
   14000fe57:	adc    DWORD PTR [rbp+0x23],ebp
   14000fe5a:	jrcxz  0x14000fe12
   14000fe5c:	sahf   
   14000fe5d:	sbb    al,0xa5
   14000fe5f:	cdq    
   14000fe60:	(bad)  
   14000fe61:	lock mov ah,0x8d
   14000fe64:	rol    BYTE PTR [rcx+0x53],0x40
   14000fe68:	xchg   BYTE PTR [rcx],dh
   14000fe6a:	or     BYTE PTR [rcx],al
   14000fe6c:	push   rdx
   14000fe6d:	xor    eax,DWORD PTR [rsi-0x500839dc]
   14000fe73:	lods   eax,DWORD PTR ds:[rsi]
   14000fe74:	outs   dx,BYTE PTR ds:[rsi]
   14000fe75:	cli    
   14000fe76:	mov    esi,0x25dbb74f
   14000fe7b:	mov    fs,WORD PTR [rbx-0x75]
   14000fe7e:	(bad)  
   14000fe7f:	(bad)  
   14000fe80:	gs add al,0xc0
   14000fe83:	in     eax,0x5b
   14000fe85:	(bad)  
   14000fe86:	leave  
   14000fe87:	(bad)  
   14000fe88:	shr    BYTE PTR [rsi+0x2a],1
   14000fe8b:	and    DWORD PTR [rax-0x37750b6f],ecx
   14000fe91:	rex.WRB add r8b,BYTE PTR [r11+rdx*4+0x25]
   14000fe96:	and    eax,0x5a67e51b
   14000fe9b:	mov    esi,0x2b91400e
   14000fea0:	out    dx,eax
   14000fea1:	pop    rdx
   14000fea2:	test   BYTE PTR [rsp+rax*4+0x1a],bl
   14000fea6:	jbe    0x14000ff1a
   14000fea8:	add    DWORD PTR [rsi],edx
   14000feaa:	in     eax,dx
   14000feab:	iret   
   14000feac:	(bad)  
   14000fead:	rex.WRXB adc QWORD PTR [r9],r10
   14000feb0:	sbb    dh,ah
   14000feb2:	push   rbx
   14000feb3:	scas   eax,DWORD PTR es:[rdi]
   14000feb4:	xlat   BYTE PTR ds:[rbx]
   14000feb5:	cdq    
   14000feb6:	cwde   
   14000feb7:	cwde   
   14000feb8:	(bad)  
   14000feb9:	pop    rdx
   14000feba:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000febb:	(bad)  
   14000febc:	xor    bh,bl
   14000febe:	rex mov ecx,0xb6b6b701
   14000fec4:	fcomp  st(0)
   14000fec6:	fsub   DWORD PTR [rax-0x54ae1429]
   14000fecc:	(bad)  
   14000fecd:	pop    rax
   14000fece:	pop    rsp
   14000fecf:	pop    rsp
   14000fed0:	fs jl  0x14000ff4f
   14000fed3:	fcomp  QWORD PTR [rdx]
   14000fed5:	jmp    0x14000feb9
   14000fed7:	cmp    BYTE PTR [rsi-0x4e4d1225],ah
   14000fedd:	mov    cl,0xc1
   14000fedf:	xchg   ebp,eax
   14000fee0:	sub    edx,DWORD PTR [rdi+0x68]
   14000fee3:	mov    bh,0xdb
   14000fee5:	lods   al,BYTE PTR ds:[rsi]
   14000fee6:	scas   eax,DWORD PTR es:[rdi]
   14000fee7:	scas   eax,DWORD PTR es:[rdi]
   14000fee8:	pop    rdi
   14000fee9:	pop    rcx
   14000feea:	pop    rsi
   14000feeb:	pop    rsi
   14000feec:	jle    0x14000fed8
   14000feee:	(bad)  
   14000feef:	test   eax,0xf17e5f53
   14000fef4:	(bad)
   14000fef7:	rex and DWORD PTR [rax],eax
   14000fefa:	sti    
   14000fefb:	push   0xffffffffab485fb9
   14000ff00:	ins    BYTE PTR es:[rdi],dx
   14000ff01:	add    al,0x40
   14000ff03:	sbb    DWORD PTR [rax-0x79e6ebaf],edx
   14000ff09:	mov    al,0x2
   14000ff0b:	jl     0x14000fefe
   14000ff0d:	out    0x7f,eax
   14000ff0f:	(bad)  
   14000ff10:	out    0xab,eax
   14000ff12:	rcl    ebx,cl
   14000ff14:	rcl    DWORD PTR [rbx-0x1f07c1f1],cl
   14000ff1a:	and    DWORD PTR [rbp+0xfbba5a5],0x687c3e1f
   14000ff24:	ins    BYTE PTR es:[rdi],dx
   14000ff25:	ins    BYTE PTR es:[rdi],dx
   14000ff26:	ins    BYTE PTR es:[rdi],dx
   14000ff27:	jbe    0x14000ff8a
   14000ff29:	jle    0x14000ffa9
   14000ff2b:	sub    ch,BYTE PTR [rax]
   14000ff2d:	xchg   ebp,eax
   14000ff2e:	retfw  0x3041
   14000ff32:	jrcxz  0x14000ffad
   14000ff34:	pop    rsi
   14000ff35:	xor    BYTE PTR [rsi+rcx*1],bl
   14000ff38:	imul   ebx,DWORD PTR [rcx],0x84a8025b
   14000ff3e:	sub    BYTE PTR [rcx-0x7c],dl
   14000ff41:	lock cmp al,0x3b
   14000ff44:	(bad)  
   14000ff45:	loope  0x14000ff1c
   14000ff47:	(bad)  
   14000ff48:	or     dh,BYTE PTR [rsi-0x64]
   14000ff4b:	loopne 0x14000ff6d
   14000ff4d:	addr32 rex.RXB pop r8
   14000ff50:	js     0x14000ff10
   14000ff52:	rex.WRXB sbb al,0x45
   14000ff55:	mov    ah,0xdb
   14000ff57:	ins    DWORD PTR es:[rdi],dx
   14000ff58:	(bad)  
   14000ff5a:	ss xchg edi,eax
   14000ff5c:	cs pop rbp
   14000ff5e:	(bad)  
   14000ff5f:	and    DWORD PTR [rbp+0x6cd9a25],esi
   14000ff65:	mov    bl,0xf3
   14000ff67:	xor    ecx,DWORD PTR [rdi+rcx*4+0x6f5df18d]
   14000ff6e:	(bad)  
   14000ff6f:	repz xchg ecx,eax
   14000ff71:	neg    ebp
   14000ff73:	rex.RB cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000ff75:	pop    rdi
   14000ff76:	rex.XB and al,0x9
   14000ff79:	(bad)  
   14000ff7a:	sbb    eax,0x89f6790b
   14000ff7f:	stos   DWORD PTR es:[rdi],eax
   14000ff80:	pop    rsp
   14000ff81:	pop    rsi
   14000ff82:	pop    rbp
   14000ff83:	out    0xdc,eax
   14000ff85:	rex.WX enter 0xcaca,0xcb
   14000ff8a:	pushf  
   14000ff8b:	mov    esi,0xc41c24d4
   14000ff90:	stos   BYTE PTR es:[rdi],al
   14000ff91:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000ff92:	mov    r15d,0xa879a504
   14000ff98:	in     al,dx
   14000ff99:	push   rdi
   14000ff9a:	fiadd  WORD PTR [rsi-0x27]
   14000ff9d:	and    DWORD PTR [rdi+rcx*1-0x48eee0b7],0xffffff91
   14000ffa5:	jb     0x14000ff4f
   14000ffa7:	and    bl,BYTE PTR [rbx+riz*8]
   14000ffaa:	or     cl,BYTE PTR ds:[rcx+rcx*2+0x74e2f654]
   14000ffb2:	(bad)  
   14000ffb3:	test   BYTE PTR [rcx+0x34844050],cl
   14000ffb9:	push   0xffffffffffffffa1
   14000ffbb:	(bad)  
   14000ffbc:	mov    ch,al
   14000ffbe:	push   rcx
   14000ffbf:	stos   BYTE PTR es:[rdi],al
   14000ffc0:	es inc ch
   14000ffc3:	ins    DWORD PTR es:[rdi],dx
   14000ffc4:	cli    
   14000ffc5:	mov    eax,0xa8bdff3e
   14000ffca:	add    BYTE PTR [rsi-0x2271c0db],ch
   14000ffd0:	fidiv  DWORD PTR [rcx-0x52]
   14000ffd3:	cmc    
   14000ffd4:	xor    ecx,ecx
   14000ffd6:	rex.WR test QWORD PTR [rbp+0x7e4ec8e3],0x37fd2570
   14000ffe1:	push   rdx
   14000ffe2:	add    eax,0x799b7af8
   14000ffe7:	(bad)  
   14000ffe8:	iret   
   14000ffe9:	repz cwde 
   14000ffeb:	cwde   
   14000ffec:	cwde   
   14000ffed:	(bad)  
   14000ffee:	outs   dx,BYTE PTR ds:[rsi]
   14000ffef:	outs   dx,BYTE PTR ds:[rsi]
   14000fff0:	mov    cs,ecx
   14000fff2:	leave  
   14000fff3:	rex.WB (bad) 
   14000fff5:	and    al,cl
   14000fff7:	and    BYTE PTR [rdx-0x2a3a54aa],bl
   14000fffd:	stos   DWORD PTR es:[rdi],eax
   14000fffe:	push   rdi
   14000ffff:	pop    rcx
   140010000:	pop    rbx
   140010001:	pop    rbx
   140010002:	rex.XB
   140010003:	rex.WX leave 
   140010005:	(bad)  
   140010006:	(bad)  
   140010007:	adc    al,0x8b
   140010009:	mov    ecx,DWORD PTR [rbx-0x732a54ac]
   14001000f:	xchg   ecx,eax
   140010010:	jo     0x14001007f
   140010012:	ins    DWORD PTR es:[rdi],dx
   140010013:	lea    ecx,[rbx]
   140010015:	(bad)  
   140010016:	cs mov al,0xba
   140010019:	mov    edx,0x643870ca
   14001001e:	jnp    0x14001009b
   140010020:	sti    
   140010021:	loop   0x14000ffd4
   140010023:	movsxd eax,edi
   140010025:	(bad)  
   140010026:	loopne 0x140010001
   140010028:	addr32 lahf 
   14001002a:	std    
   14001002b:	jrcxz  0x14000fffa
   14001002d:	int    0xcd
   14001002f:	push   rbp
   140010030:	(bad)  
   140010031:	mov    eax,0x61b53931
   140010036:	xchg   esp,eax
   140010037:	clc    
   140010038:	mov    ebx,DWORD PTR [rax+0x7dd67481]
   14001003e:	jge    0x1400100be
   140010040:	cmp    eax,0x75649249
   140010045:	jne    0x14000fffc
   140010047:	cmc    
   140010048:	fxch   st(7)
   14001004a:	jle    0x140010042
   14001004c:	pop    rcx
   14001004d:	loopne 0x140010098
   14001004f:	jge    0x14001001e
   140010051:	jb     0x14000fff8
   140010053:	push   rdx
   140010054:	or     DWORD PTR [rdx],ebp
   140010056:	xchg   ebp,eax
   140010057:	rex.WX stc 
   140010059:	cmc    
   14001005a:	scas   eax,DWORD PTR es:[rdi]
   14001005b:	jg     0x14001005a
   14001005d:	rcr    BYTE PTR [rbp-0x7862189],cl
   140010063:	rol    BYTE PTR [rcx-0x64288fd],0xcd
   14001006a:	outs   dx,DWORD PTR ds:[rsi]
   14001006b:	jle    0x1400100dd
   14001006d:	iret   
   14001006e:	sahf   
   14001006f:	cmp    eax,0x468d1afb
   140010074:	mov    ch,0xb5
   140010076:	mov    ch,0xc5
   140010078:	(bad)  
   140010079:	stos   DWORD PTR es:[rdi],eax
   14001007a:	push   rdi
   14001007b:	(bad)  
   14001007d:	fsub   DWORD PTR [rax+0x7b]
   140010080:	jnp    0x1400100dd
   140010082:	int    0x85
   140010084:	shl    BYTE PTR [rcx],1
   140010086:	stos   BYTE PTR es:[rdi],al
   140010087:	stc    
   140010088:	(bad)  
   140010089:	mov    bl,bh
   14001008b:	nop
   14001008c:	ds (bad) 
   14001008e:	mov    ebp,0xaecae66c
   140010093:	add    al,cl
   140010095:	popf   
   140010096:	adc    DWORD PTR [rdx+rbp*1-0x62d7ae56],0xffffffdb
   14001009e:	and    BYTE PTR [rbx-0x4e4de3d0],ch
   1400100a4:	ds (bad) 
   1400100a6:	ins    DWORD PTR es:[rdi],dx
   1400100a7:	jge    0x140010106
   1400100a9:	cmp    eax,0x95b236b3
   1400100ae:	retf   0x413e
   1400100b1:	push   rax
   1400100b2:	(bad)  
   1400100b4:	mov    edx,0x991f43c9
   1400100b9:	(bad)  
   1400100ba:	test   al,0x1c
   1400100bc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400100bd:	push   rsp
   1400100be:	outs   dx,BYTE PTR ds:[rsi]
   1400100bf:	push   rdx
   1400100c0:	cs xchg ebp,eax
   1400100c2:	mov    DWORD PTR [rbp-0x40],esp
   1400100c5:	(bad)  
   1400100c6:	xor    al,ah
   1400100c8:	jae    0x140010129
   1400100ca:	mov    edi,DWORD PTR [rcx-0x12]
   1400100cd:	icebp  
   1400100ce:	xchg   ebx,eax
   1400100cf:	cmp    al,0x72
   1400100d1:	adc    al,0x5e
   1400100d3:	jns    0x1400100b6
   1400100d5:	sub    bl,BYTE PTR [rbx-0x62db5415]
   1400100db:	xor    eax,esi
   1400100dd:	retf   
   1400100de:	rcr    al,1
   1400100e0:	add    esi,ebp
   1400100e2:	ret    
   1400100e3:	mov    BYTE PTR [rax+0x2a4af082],ah
   1400100e9:	mov    esp,0xd10ab879
   1400100ee:	(bad)  
   1400100ef:	sbb    r9d,eax
   1400100f2:	jo     0x140010107
   1400100f4:	push   rax
   1400100f5:	icebp  
   1400100f6:	or     ah,BYTE PTR [rax+0x1b56e012]
   1400100fc:	xchg   edx,eax
   1400100fd:	sti    
   1400100fe:	out    dx,al
   1400100ff:	imul   esi,DWORD PTR [rax],0xe4818a74
   140010105:	mov    ebp,0x5befbe56
   14001010a:	xor    al,0x6
   14001010c:	sbb    ecx,esp
   14001010e:	shl    esi,cl
   140010110:	push   rbp
   140010111:	retf   0x6003
   140010114:	fisubr DWORD PTR [rsi+0x25aa00bd]
   14001011a:	(bad)  
   14001011b:	fcom   DWORD PTR [rbp+0x55]
   14001011e:	adc    al,0x97
   140010120:	mov    al,0x5d
   140010122:	add    cl,BYTE PTR [rdi-0x6e]
   140010125:	cwde   
   140010126:	cmp    dh,cl
   140010128:	xor    al,BYTE PTR [rax]
   14001012a:	xlat   BYTE PTR ds:[rbx]
   14001012b:	(bad)  
   14001012c:	lock cmc 
   14001012e:	stos   BYTE PTR es:[rdi],al
   14001012f:	add    BYTE PTR [rdi],dh
   140010131:	loop   0x140010168
   140010133:	sub    BYTE PTR [rdx-0x9912662],bh
   140010139:	(bad)  
   14001013a:	push   0x35
   14001013c:	imul   bh
   14001013e:	fistp  WORD PTR [rdi+0x5f66ef81]
   140010144:	scas   eax,DWORD PTR es:[rdi]
   140010145:	xlat   BYTE PTR ds:[rbx]
   140010146:	jrcxz  0x140010144
   140010148:	stc    
   140010149:	rep lods al,BYTE PTR ds:[rsi]
   14001014b:	scas   al,BYTE PTR es:[rdi]
   14001014c:	scas   al,BYTE PTR es:[rdi]
   14001014d:	xchg   edx,eax
   14001014e:	and    al,0x9
   140010150:	rcl    ebx,cl
   140010152:	shr    DWORD PTR [rbp*1+0x56ad512d],cl
   140010159:	xor    esi,edi
   14001015b:	outs   dx,BYTE PTR ds:[rsi]
   14001015c:	mov    ch,0x5a
   14001015e:	pushf  
   14001015f:	cmp    eax,0xe5e5967b
   140010164:	gs loop 0x14001019f
   140010167:	es or  al,0xc3
   14001016a:	rcl    DWORD PTR [rbx+0x4f],0x3d
   14001016e:	cmc    
   14001016f:	imul   ecx,edi,0x3d
   140010172:	neg    esp
   140010174:	(bad)  
   140010175:	ins    DWORD PTR es:[rdi],dx
   140010176:	ins    BYTE PTR es:[rdi],dx
   140010177:	ins    BYTE PTR es:[rdi],dx
   140010178:	lods   al,BYTE PTR ds:[rsi]
   140010179:	movabs eax,ds:0xb8b912eba129b8a4
   140010182:	(bad)  
   140010183:	scas   eax,DWORD PTR es:[rdi]
   140010184:	fcomi  st,st(7)
   140010186:	sar    cl,cl
   140010188:	push   rbx
   140010189:	rex.WX lods al,BYTE PTR ds:[rsi]
   14001018b:	(bad)  
   14001018c:	or     BYTE PTR [rbp-0x43],ah
   14001018f:	sub    eax,0x60c1801
   140010194:	leave  
   140010195:	(bad)  
   140010196:	xor    al,ch
   140010198:	cmp    eax,0xc723c8f2
   14001019d:	(bad)  
   14001019e:	jns    0x140010184
   1400101a0:	xchg   ecx,eax
   1400101a1:	add    DWORD PTR [ecx-0x51],edx
   1400101a5:	xlat   BYTE PTR ds:[rbx]
   1400101a6:	(bad)  
   1400101a7:	out    dx,al
   1400101a8:	cmp    al,0x7c
   1400101aa:	js     0x1400101a2
   1400101ac:	fwait
   1400101ad:	out    dx,eax
   1400101ae:	mov    edi,0x47239eff
   1400101b3:	mov    ds,esp
   1400101b5:	sti    
   1400101b6:	lock ret 
   1400101b8:	(bad)  
   1400101ba:	jo     0x140010220
   1400101bc:	(bad)  
   1400101bd:	loope  0x14001019f
   1400101bf:	clc    
   1400101c0:	clc    
   1400101c1:	js     0x140010180
   1400101c3:	shr    DWORD PTR [rsi-0x4d],cl
   1400101c6:	jp     0x1400101bd
   1400101c8:	sub    bl,BYTE PTR [rbp-0x4a0a78b2]
   1400101ce:	xor    eax,0x4daedd7a
   1400101d3:	pop    rdi
   1400101d4:	in     eax,dx
   1400101d5:	(bad)  
   1400101d6:	push   rsp
   1400101d7:	xor    al,0x7d
   1400101d9:	mov    bh,0xdb
   1400101db:	xchg   esi,eax
   1400101dc:	(bad)  
   1400101dd:	js     0x140010163
   1400101df:	jno    0x1400101b4
   1400101e1:	adc    eax,0x526a2bec
   1400101e6:	fisubr DWORD PTR [rcx+0x7b8516a5]
   1400101ec:	sahf   
   1400101ed:	rcr    BYTE PTR [rdi-0x6a5b667c],cl
   1400101f3:	nop
   1400101f4:	hlt    
   1400101f5:	adc    eax,DWORD PTR [rsi]
   1400101f7:	test   BYTE PTR [rbx+rbx*8+0x5797965d],dh
   1400101fe:	push   rsp
   1400101ff:	lods   al,BYTE PTR ds:[rsi]
   140010200:	rex.X movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010202:	rex.R movabs ds:0xf03e65d94a7a60d1,eax
   14001020c:	xchg   esi,eax
   14001020d:	rex.WB
   14001020e:	ds (bad) 
   140010210:	(bad)  
   140010211:	mov    esi,0x625c7e99
   140010216:	rcl    BYTE PTR [rbx-0x6f1a1284],1
   14001021c:	scas   eax,DWORD PTR es:[rdi]
   14001021d:	dec    cl
   14001021f:	sbb    ch,BYTE PTR [rbx]
   140010221:	sub    esp,DWORD PTR [rdi-0x49503c08]
   140010227:	mov    eax,0xed18f27a
   14001022c:	mov    ch,0x6
   14001022e:	jb     0x1400101d8
   140010230:	sbb    edx,eax
   140010232:	fdivr  DWORD PTR [rsp+rdx*8]
   140010235:	punpcklwd mm6,DWORD PTR [rdx]
   140010238:	and    DWORD PTR [rbx-0x2f],edi
   14001023b:	cmp    al,BYTE PTR [rbx+rbx*4+0x10]
   14001023f:	scas   al,BYTE PTR es:[rdi]
   140010240:	shl    BYTE PTR [rax-0x7d],0x5a
   140010244:	lods   eax,DWORD PTR ds:[rsi]
   140010245:	ret    
   140010246:	loop   0x14001020a
   140010248:	sbb    bl,al
   14001024a:	mov    al,0xef
   14001024c:	cmp    al,0xee
   14001024e:	sub    dl,dh
   140010250:	ins    BYTE PTR es:[rdi],dx
   140010251:	mov    bh,0xdb
   140010253:	rex.RB mov WORD PTR [r13+0x1b],?
   140010257:	(bad)  
   140010258:	icebp  
   140010259:	loopne 0x140010206
   14001025b:	shl    BYTE PTR [rsi+0x65],1
   14001025e:	add    al,0x4
   140010260:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010261:	test   DWORD PTR [rdi],0x8d1a0306
   140010267:	xchg   BYTE PTR [rsi-0x1ffba603],al
   14001026d:	sbb    bh,dh
   14001026f:	fsub   st(7),st
   140010271:	imul   ebp,DWORD PTR [rdx],0xf54516a1
   140010277:	in     eax,0xdb
   140010279:	lea    ebp,[rdx+0x4c7a3700]
   14001027f:	fidiv  WORD PTR [rax]
   140010281:	push   0xffffffffd9b37e24
   140010286:	mov    ah,0x7a
   140010288:	mov    ebx,0xfecccdd1
   14001028d:	rex.WRX cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   14001028f:	ret    
   140010290:	retf   0x8aca
   140010293:	and    eax,0x49c9c9fc
   140010298:	(bad)  
   140010299:	(bad)  
   14001029a:	(bad)  
   14001029b:	sbb    BYTE PTR [rbx],bl
   14001029d:	sbb    ecx,ebx
   14001029f:	and    al,0x79
   1400102a1:	fcomp  st(6)
   1400102a3:	fsubrp st(6),st
   1400102a5:	fdivr  QWORD PTR [rcx+0x7cbe5c73]
   1400102ab:	cdq    
   1400102ac:	rex.WRX cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   1400102ae:	ret    
   1400102af:	div    dh
   1400102b1:	div    dh
   1400102b3:	repnz repnz repnz push rdi
   1400102b7:	mov    ds,WORD PTR [rdi]
   1400102b9:	(bad)  
   1400102ba:	(bad)  
   1400102bb:	fnstenv [rbx]
   1400102bd:	addr32 (bad) 
   1400102bf:	mov    esp,0xa6d02284
   1400102c4:	mov    ecx,0x9042053d
   1400102c9:	sub    al,0xd1
   1400102cb:	jrcxz  0x1400102e9
   1400102cd:	fwait
   1400102ce:	dec    ebp
   1400102d0:	xor    eax,DWORD PTR [rdx+0x36a37efc]
   1400102d6:	call   0x168056975
   1400102db:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400102dc:	and    edi,DWORD PTR [rbx-0xb8b9123]
   1400102e2:	stc    
   1400102e3:	out    0x2f,eax
   1400102e5:	sbb    al,0x7d
   1400102e7:	(bad)  
   1400102e8:	stc    
   1400102e9:	push   rbx
   1400102ea:	shl    BYTE PTR [rdi+0x6a],0xb5
   1400102ee:	pop    rdx
   1400102ef:	jae    0x14001035f
   1400102f1:	outs   dx,BYTE PTR ds:[rsi]
   1400102f2:	outs   dx,BYTE PTR ds:[rsi]
   1400102f3:	cli    
   1400102f4:	movabs eax,ds:0x3ff7fdff783a1e87
   1400102fd:	hlt    
   1400102fe:	out    0xdf,eax
   140010300:	hlt    
   140010301:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010302:	xlat   BYTE PTR ds:[rbx]
   140010303:	in     al,dx
   140010304:	fnsave [rdi+0x7743ceef]
   14001030a:	fcom   QWORD PTR [rcx-0x69]
   14001030d:	push   rax
   14001030e:	sbb    DWORD PTR [rbx+rdi*4-0xc],esi
   140010312:	(bad)  
   140010313:	add    esp,DWORD PTR [rbp-0x45]
   140010316:	fcomp  st(0)
   140010318:	mov    al,0xf6
   14001031a:	getsec 
   14001031c:	(bad)  
   14001031d:	cmp    DWORD PTR [rbp-0x73fc8ef1],ebp
   140010323:	sbb    esp,DWORD PTR [r11]
   140010326:	popf   
   140010327:	pop    fs
   140010329:	fnsave [rdx+rbx*8+0x10]
   14001032d:	and    ah,BYTE PTR [rip+0xffffffff9a8a44d2]        # 0xda8b4805
   140010333:	ins    DWORD PTR es:[rdi],dx
   140010334:	out    0x1c,al
   140010336:	int    0x30
   140010338:	pop    rsp
   140010339:	adc    DWORD PTR [rcx+0x178db6bf],0x410bf774
   140010343:	adc    al,0x25
   140010345:	ins    BYTE PTR es:[rdi],dx
   140010346:	ins    DWORD PTR es:[rdi],dx
   140010347:	outs   dx,BYTE PTR ds:[rsi]
   140010348:	mov    bl,0xb9
   14001034a:	mov    cl,0x5
   14001034c:	rex.X jo 0x14001038b
   14001034f:	or     BYTE PTR [rax-0x7073346c],ch
   140010355:	xor    eax,0xf38c4e68
   14001035a:	out    0x96,eax
   14001035c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001035d:	jns    0x140010356
   14001035f:	fistp  WORD PTR [rcx+0x76c2de04]
   140010365:	rex.WRXB mov r8b,0xba
   140010368:	fsubrp st(5),st
   14001036a:	idiv   DWORD PTR [rdi-0x198a4e16]
   140010370:	sub    al,0xbf
   140010372:	call   FWORD PTR [rax-0x75]
   140010375:	push   rdi
   140010376:	sahf   
   140010377:	cmp    DWORD PTR [rdx-0x41],ecx
   14001037a:	mov    ebx,0x46993f45
   14001037f:	xor    esp,DWORD PTR es:[rcx+rsi*8]
   140010383:	adc    al,0x88
   140010385:	rex.RB test al,0x1f
   140010388:	test   BYTE PTR [rdx+0x9],ch
   14001038b:	outs   dx,DWORD PTR ds:[rsi]
   14001038c:	cld    
   14001038d:	adc    eax,0xbf490d9a
   140010392:	xlat   BYTE PTR ds:[rbx]
   140010393:	rex.B
   140010394:	gs xor dl,cl
   140010397:	stos   BYTE PTR es:[rdi],al
   140010398:	add    BYTE PTR [rsi],ah
   14001039a:	xchg   esi,eax
   14001039b:	movsxd edi,DWORD PTR [rax]
   14001039d:	sub    al,0x9c
   14001039f:	sub    eax,ebx
   1400103a1:	(bad)  
   1400103a2:	pop    rsi
   1400103a3:	xchg   ebp,eax
   1400103a4:	imul   eax,eax,0xdd2eda6
   1400103aa:	test   al,0x2a
   1400103ac:	movabs al,ds:0x3452d29ca41d7af4
   1400103b5:	(bad)  
   1400103b6:	mov    eax,0x401b5d03
   1400103bb:	push   0xfffffffffffffff4
   1400103bd:	shl    DWORD PTR [rdi],cl
   1400103bf:	or     al,BYTE PTR [rdx-0x5d5646b4]
   1400103c5:	jbe    0x140010404
   1400103c7:	movsxd ebx,edi
   1400103c9:	mov    ch,0x8e
   1400103cb:	(bad)  
   1400103cc:	xor    dh,ah
   1400103ce:	adc    eax,0xb56ab1c1
   1400103d3:	retf   0xe4e4
   1400103d6:	and    al,0xe3
   1400103d8:	jrcxz  0x1400103bd
   1400103da:	mov    WORD PTR [rbp+0xfa8598d],cs
   1400103e0:	shr    bh,1
   1400103e2:	neg    ecx
   1400103e4:	fcomp  st(0)
   1400103e6:	(bad)  
   1400103e7:	movsxd esp,DWORD PTR [rbx-0x7d]
   1400103ea:	push   rsi
   1400103eb:	stos   DWORD PTR es:[rdi],eax
   1400103ec:	rex.RB mov r13b,0x5a
   1400103ef:	imul   ebp,DWORD PTR gs:[rcx-0x77],0xea49c9c9
   1400103f7:	cmc    
   1400103f8:	mov    edx,0x4e9d0745
   1400103fd:	xchg   DWORD PTR [rbx-0x1a8dd0e9],ecx
   140010403:	retf   0x5615
   140010406:	push   rsi
   140010407:	push   rsi
   140010408:	push   0xffffffffa5e15ab5
   14001040d:	rex.WXB xchg r15,rax
   14001040f:	sahf   
   140010410:	js     0x14001040b
   140010412:	in     eax,0x97
   140010414:	mov    edi,0x85c2e176
   140010419:	out    0x37,eax
   14001041b:	(bad)  
   14001041c:	(bad)  
   14001041d:	(bad)  
   14001041e:	movabs eax,ds:0x7cd2c50a3ccd63c6
   140010427:	rex.RXB
   140010428:	fs int3 
   14001042a:	sub    BYTE PTR [rbx],dh
   14001042c:	enter  0x2a3,0x59
   140010430:	mov    al,0x2f
   140010432:	sub    eax,ebx
   140010434:	addr32 jle 0x140010444
   140010437:	push   rbx
   140010438:	test   al,0xa0
   14001043a:	cmp    eax,0xcbcbcb0f
   14001043f:	push   rdi
   140010440:	xchg   edi,eax
   140010441:	xchg   edi,eax
   140010442:	xchg   edi,eax
   140010443:	(bad)  
   140010444:	(bad)  
   140010445:	(bad)  
   140010446:	outs   dx,DWORD PTR ds:[rsi]
   140010447:	std    
   140010448:	(bad)  
   140010449:	push   rdi
   14001044a:	sub    dl,BYTE PTR [rbp-0x54a952b6]
   140010450:	(bad)  
   140010451:	(bad)  
   140010452:	(bad)  
   140010453:	(bad)  
   140010454:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010455:	out    0xe6,eax
   140010457:	out    0xe6,al
   140010459:	imul   DWORD PTR [rsi]
   14001045b:	mov    cs,WORD PTR cs:[rbp-0x42307071]
   140010462:	std    
   140010463:	ins    DWORD PTR es:[rdi],dx
   140010464:	outs   dx,DWORD PTR ds:[rsi]
   140010465:	sti    
   140010466:	call   0x100f141a2
   14001046b:	je     0x140010426
   14001046d:	push   rsp
   14001046e:	and    dl,BYTE PTR [rcx+0x75cea192]
   140010474:	cmp    BYTE PTR [rax],bl
   140010476:	or     al,0xb8
   140010478:	jp     0x14001045f
   14001047a:	or     bh,BYTE PTR [rbp+0x39854f5e]
   140010480:	xchg   ecx,esp
   140010482:	mov    ?,WORD PTR [rsi]
   140010484:	add    eax,0xe28270f3
   140010489:	mov    ?,WORD PTR [rax-0x227653d1]
   14001048f:	jge    0x1400104da
   140010491:	(bad)  
   140010492:	sub    eax,0xd99155a8
   140010497:	outs   dx,BYTE PTR ds:[rsi]
   140010498:	scas   al,BYTE PTR es:[rdi]
   140010499:	fwait
   14001049a:	sbb    DWORD PTR [rdi],esi
   14001049c:	(bad)  
   14001049d:	std    
   14001049e:	add    eax,0x1bc35c20
   1400104a3:	push   0x76
   1400104a5:	out    0xd5,al
   1400104a7:	cmc    
   1400104a8:	rex.WRB push r14
   1400104aa:	push   rsi
   1400104ab:	xlat   BYTE PTR ds:[rbx]
   1400104ac:	pop    rcx
   1400104ad:	ds jge 0x140010446
   1400104b0:	rex out 0x6a,eax
   1400104b3:	ins    BYTE PTR es:[rdi],dx
   1400104b4:	xor    al,0xaa
   1400104b6:	xor    al,0x9b
   1400104b8:	or     eax,0x250df3be
   1400104bd:	stos   BYTE PTR es:[rdi],al
   1400104be:	(bad)  
   1400104c0:	loopne 0x1400104c9
   1400104c2:	ds jno 0x1400104cc
   1400104c5:	sahf   
   1400104c6:	cmp    al,0xc2
   1400104c8:	data16 rex.WRXB jo 0x1400104b5
   1400104cc:	jb     0x14001049a
   1400104ce:	(bad)  
   1400104cf:	(bad)  
   1400104d0:	(bad)  
   1400104d1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400104d2:	cs clc 
   1400104d4:	mov    ah,0x36
   1400104d6:	scas   eax,DWORD PTR es:[rdi]
   1400104d7:	lock jmp 0x13f3a9c0c
   1400104dd:	in     al,dx
   1400104de:	rex.RB out dx,al
   1400104e0:	pop    rsi
   1400104e1:	in     al,dx
   1400104e2:	push   rcx
   1400104e3:	test   eax,0x8ce9d02c
   1400104e8:	jle    0x14001052c
   1400104ea:	jrcxz  0x140010526
   1400104ec:	ss jbe 0x140010490
   1400104ef:	add    ah,BYTE PTR [rdx+rdi*4]
   1400104f2:	push   rsi
   1400104f3:	cs xchg edi,eax
   1400104f5:	rex.XB pop r14
   1400104f7:	vrcpss xmm13,xmm1,DWORD PTR [rdx]
   1400104fb:	adc    BYTE PTR [rcx+rcx*4-0x5239fb6b],0xa4
   140010503:	rol    BYTE PTR [rax-0x2a],1
   140010506:	(bad)  
   140010507:	loopne 0x1400104bf
   140010509:	rex.WX movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14001050b:	movabs ds:0x19ebb6ec0a9d1b8f,al
   140010514:	imul   BYTE PTR [rsi-0x452eb389]
   14001051a:	or     DWORD PTR [rbp+0x5d],ebx
   14001051d:	pop    rax
   14001051e:	pop    rax
   14001051f:	(bad)  
   140010520:	jbe    0x140010598
   140010522:	ss xchg ebx,eax
   140010524:	fwait
   140010525:	int    0xec
   140010527:	mov    edi,0x9712e974
   14001052c:	(bad)  
   14001052d:	pop    rdi
   14001052e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001052f:	xlat   BYTE PTR ds:[rbx]
   140010530:	jmp    0x140010503
   140010532:	push   0xffffffffaeebb834
   140010537:	mov    ebx,0xcd9d9d98
   14001053c:	fs (bad) 
   14001053e:	mov    fs,WORD PTR [rdx-0x31188c78]
   140010544:	jno    0x14001053a
   140010546:	call   0x177383b9c
   14001054b:	or     DWORD PTR [rbx-0xb],eax
   14001054e:	in     eax,dx
   14001054f:	ret    0x6c30
   140010552:	popf   
   140010553:	(bad)  
   140010554:	jg     0x140010554
   140010556:	fcomp  DWORD PTR [rcx-0x156198cd]
   14001055c:	je     0x140010598
   14001055e:	sub    ebp,DWORD PTR [rax]
   140010560:	and    dh,BYTE PTR [rbx]
   140010562:	test   eax,0xe6510c74
   140010567:	jne    0x140010567
   140010569:	fnsave [rsp+rdx*8+0x168a3d59]
   140010570:	mov    cl,BYTE PTR [rax-0x32240c4]
   140010576:	out    0xd5,al
   140010578:	(bad)  
   140010579:	adc    DWORD PTR [rdx],0xffffffa2
   14001057c:	shl    DWORD PTR [rax-0x30],0x1f
   140010580:	or     al,0x6
   140010582:	fistp  DWORD PTR [rbx-0x38946465]
   140010588:	mov    ds,WORD PTR [rip+0xffffffffef77b73b]        # 0x12f78bcc9
   14001058e:	fdivrp st(1),st
   140010590:	cmp    ebp,edi
   140010592:	mov    esp,0xab5ea973
   140010597:	mov    ebp,0x9fa7a9f3
   14001059c:	sahf   
   14001059d:	outs   dx,BYTE PTR ds:[rsi]
   14001059e:	call   0x156fc089f
   1400105a3:	(bad)  
   1400105a4:	cdq    
   1400105a5:	popf   
   1400105a6:	popf   
   1400105a7:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400105a8:	fldcw  WORD PTR [rdx+rsi*2-0x31]
   1400105ac:	mov    ebp,0x849322f7
   1400105b1:	mov    ch,0xd5
   1400105b3:	push   rbp
   1400105b4:	mov    dh,0xb6
   1400105b6:	mov    dh,0x58
   1400105b8:	pop    rbx
   1400105b9:	pop    rbp
   1400105ba:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400105bb:	(bad)  [rdx+0x11]
   1400105be:	rex.RB xchg r9d,eax
   1400105c0:	rex.WX jle 0x1400105ec
   1400105c3:	and    eax,0x59a42e5e
   1400105c8:	test   al,0x4e
   1400105ca:	iret   
   1400105cb:	adc    BYTE PTR [rbp+0x6ff966fd],dh
   1400105d1:	ins    DWORD PTR es:[rdi],dx
   1400105d2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400105d3:	xchg   DWORD PTR [rcx+0x2],eax
   1400105d6:	mov    ecx,0x9191a7e0
   1400105db:	xchg   ecx,eax
   1400105dc:	movsxd edi,DWORD PTR [rsi+rbp*2]
   1400105df:	(bad)  
   1400105e0:	rex.R mov fs,WORD PTR gs:[rdi+0x4b9510b2]
   1400105e8:	and    eax,0x25252015
   1400105ed:	and    ecx,0xffffff90
   1400105f0:	(bad)  
   1400105f1:	(bad)  
   1400105f2:	sar    dl,0xfa
   1400105f5:	xchg   esi,eax
   1400105f6:	cmp    eax,0x280e5caf
   1400105fb:	push   rbp
   1400105fc:	retf   0xaad4
   1400105ff:	gs out dx,al
   140010601:	cwde   
   140010602:	fwait
   140010603:	loopne 0x1400105c6
   140010605:	xlat   BYTE PTR ds:[rbx]
   140010606:	xor    QWORD PTR [rcx],r14
   140010609:	faddp  st(0),st
   14001060b:	or     esi,esi
   14001060d:	repnz leave 
   14001060f:	enter  0xd3a3,0xbe
   140010613:	xor    DWORD PTR [rbp-0x527ce113],0xffffffd3
   14001061a:	(bad)  
   14001061b:	jno    0x14001059f
   14001061d:	out    dx,eax
   14001061e:	(bad)  
   14001061f:	movabs eax,es:0xc85fbf7e80820d
   140010629:	jl     0x14001060a
   14001062b:	(bad)  
   14001062d:	rol    BYTE PTR [rdi+0x1aaaf43e],1
   140010633:	(bad)  
   140010634:	jbe    0x14001061b
   140010636:	(bad)  
   140010637:	je     0x1400106b6
   140010639:	movabs eax,ds:0xd4ff660375c7e826
   140010642:	ss cmc 
   140010644:	in     eax,dx
   140010645:	and    al,0x63
   140010647:	movsxd esp,DWORD PTR [rbx-0x6]
   14001064a:	mov    esp,0xbca0366c
   14001064f:	gs jle 0x140010679
   140010652:	xlat   BYTE PTR ds:[rbx]
   140010653:	pop    rsp
   140010654:	mov    esi,0xee10a915
   140010659:	mov    edx,0x2a5bc4cd
   14001065e:	mov    cl,0x67
   140010660:	iret   
   140010661:	(bad)  
   140010662:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010663:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010664:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010665:	imul   esi,DWORD PTR [rdx+rbx*1],0x71c66b99
   14001066c:	ins    BYTE PTR es:[rdi],dx
   14001066d:	sub    eax,0x8b56adf5
   140010672:	jp     0x140010631
   140010674:	(bad)  
   140010675:	sbb    eax,0xc2c1dc77
   14001067a:	ret    0xf502
   14001067d:	jp     0x14001065c
   14001067f:	fisub  WORD PTR [rbx-0x60]
   140010682:	movabs eax,ds:0x92e974b92793c9f0
   14001068b:	rex.WRX mov r10b,BYTE PTR [rdx-0x56ad4ece]
   140010692:	xor    al,0xfd
   140010694:	xchg   esi,eax
   140010695:	mov    bh,0xbc
   140010697:	in     eax,0x7
   140010699:	(bad)  
   14001069b:	fdivrp st(7),st
   14001069d:	jle    0x140010686
   14001069f:	cdq    
   1400106a0:	xor    esp,DWORD PTR [rdi+0x3e]
   1400106a3:	call   rsp
   1400106a5:	push   rbx
   1400106a6:	rex.WRXB cmp rax,0xfffffffff1f8fc7a
   1400106ac:	push   rbx
   1400106ad:	fcmovu st,st(7)
   1400106af:	pop    rdi
   1400106b0:	(bad)  
   1400106b1:	push   rsp
   1400106b2:	clc    
   1400106b3:	mov    ecx,0x7aedd7cb
   1400106b8:	out    0xd8,eax
   1400106ba:	and    bh,BYTE PTR [rax-0x6c]
   1400106bd:	fistp  WORD PTR [rdi+0x674ae1e6]
   1400106c3:	adc    DWORD PTR [rbx-0x1bb0bef8],edi
   1400106c9:	(bad)  
   1400106ca:	add    al,0x12
   1400106cc:	fcomip st,st(7)
   1400106ce:	retf   
   1400106cf:	or     ecx,DWORD PTR [rbx]
   1400106d1:	or     ecx,DWORD PTR [rbx]
   1400106d3:	neg    ebp
   1400106d5:	ja     0x1400106b6
   1400106d7:	loope  0x1400106ca
   1400106d9:	icebp  
   1400106da:	icebp  
   1400106db:	cmp    ebp,esi
   1400106dd:	mov    edi,0x4bc3feff
   1400106e2:	rex.WXB
   1400106e3:	rex.WXB fist WORD PTR [r15+r13*4-0x29]
   1400106e8:	(bad)  
   1400106e9:	imul   esi,DWORD PTR [rbp+0x638e355a],0x2e
   1400106f0:	pop    rsp
   1400106f1:	mov    eax,0x2793c9c0
   1400106f6:	pop    rcx
   1400106f7:	pop    rcx
   1400106f8:	pop    rcx
   1400106f9:	loope  0x1400106d3
   1400106fb:	or     ebp,DWORD PTR [rdi]
   1400106fd:	push   rax
   1400106fe:	sub    dl,BYTE PTR [rbp-0x13142858]
   140010704:	(bad)  [rdi+0x59d9d98f]
   14001070a:	data16 cmp WORD PTR [eax-0x39],di
   140010710:	sbb    eax,0x8e475dc
   140010715:	add    ch,al
   140010717:	cmc    
   140010718:	sti    
   140010719:	pop    rsp
   14001071a:	pop    rcx
   14001071b:	pop    rcx
   14001071c:	movabs eax,ds:0xa6caebeb1b16add
   140010725:	cmp    cl,BYTE PTR [rsi+0x41]
   140010728:	movabs al,ds:0xef84f2f46c6d77f5
   140010731:	stos   BYTE PTR es:[rdi],al
   140010732:	imul   ecx,esi,0x4b
   140010735:	gs or  bl,bl
   140010738:	gs (bad) 
   14001073a:	es cli 
   14001073c:	shl    BYTE PTR [rbp+0x38eb980f],1
   140010742:	jno    0x140010754
   140010744:	nop
   140010745:	mov    edx,0xb7b7b71d
   14001074a:	sbb    DWORD PTR [rsi],ecx
   14001074c:	xchg   DWORD PTR [rbx+rcx*8+0x59d51b65],edx
   140010753:	sub    dl,BYTE PTR [rbp-0x51fb66d8]
   140010759:	(bad)  
   14001075a:	imul   esp,DWORD PTR [rip+0x311060c0],0x6fac4418        # 0x171116824
   140010764:	mov    ah,0x39
   140010766:	jno    0x14001075a
   140010768:	mov    esp,0x3531ec4d
   14001076d:	cmp    esi,eax
   14001076f:	clc    
   140010770:	(bad)  
   140010771:	add    al,0x7b
   140010773:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010774:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010775:	cmp    DWORD PTR [rbp+0x3f6b7121],esi
   14001077b:	out    0x63,al
   14001077d:	push   rbx
   14001077e:	jp     0x14001073d
   140010780:	fimul  WORD PTR [rax-0x56ad4ff5]
   140010786:	lock (bad) 
   140010788:	push   rbx
   140010789:	rex.WRXB mov r13b,0x8b
   14001078c:	(bad)  
   14001078d:	stc    
   14001078e:	in     eax,dx
   14001078f:	imul   edi,DWORD PTR [rbx-0x4bbcffbf],0x6f
   140010796:	(bad)  
   140010797:	or     al,0x87
   140010799:	(bad)  
   14001079a:	nop
   14001079b:	movsxd eax,DWORD PTR [rdi-0x588ef3f0]
   1400107a1:	movsxd ebx,DWORD PTR [rbx-0x1b]
   1400107a4:	rex.B iret 
   1400107a6:	(bad)  
   1400107a7:	jmp    0x16d7d70c7
   1400107ac:	mov    bh,0x9e
   1400107ae:	stos   DWORD PTR es:[rdi],eax
   1400107af:	rex.RX in al,dx
   1400107b1:	je     0x1400107ff
   1400107b3:	(bad)  
   1400107b4:	js     0x140010769
   1400107b6:	outs   dx,BYTE PTR ds:[rsi]
   1400107b7:	hlt    
   1400107b8:	sti    
   1400107b9:	pop    rdx
   1400107ba:	lods   eax,DWORD PTR ds:[rsi]
   1400107bb:	rex.RX mov bl,0xd9
   1400107be:	fs iret 
   1400107c0:	sahf   
   1400107c1:	cmp    eax,0xb9b5e4b6
   1400107c6:	jg     0x140010787
   1400107c8:	fbld   TBYTE PTR [rdi-0x4d4e952b]
   1400107ce:	mov    dl,0x42
   1400107d0:	sbb    BYTE PTR [rsi+0xe75ebd4],al
   1400107d6:	(bad)  
   1400107d7:	ds int3 
   1400107d9:	(bad)  
   1400107db:	pushf  
   1400107dc:	mov    ch,0xea
   1400107de:	sbb    edi,ebp
   1400107e0:	jle    0x140010855
   1400107e2:	jae    0x140010777
   1400107e4:	adc    esp,DWORD PTR [rdi]
   1400107e6:	rex.WRX jo 0x1400107ca
   1400107e9:	ret    0x8605
   1400107ec:	rex.XB cmc 
   1400107ee:	fiadd  WORD PTR [rsi]
   1400107f0:	cmc    
   1400107f1:	sbb    bh,bh
   1400107f3:	jp     0x140010805
   1400107f5:	add    al,0x2c
   1400107f7:	cs cs jb 0x1400107df
   1400107fb:	enter  0xa991,0xb7
   1400107ff:	mov    edi,0xf5dfedfd
   140010804:	ror    DWORD PTR [rdi],0x7e
   140010807:	lock add ebp,DWORD PTR [rdi]
   14001080a:	mov    esi,0x9f73e2f8
   14001080f:	(bad)  
   140010810:	hlt    
   140010811:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010812:	push   rax
   140010814:	cdq    
   140010815:	addr32 sahf 
   140010817:	jns    0x140010843
   140010819:	push   rsp
   14001081a:	push   rax
   14001081b:	sar    eax,0x90
   14001081e:	repnz pushf 
   140010820:	mov    dl,0x88
   140010822:	adc    DWORD PTR [rax-0x158511fe],edi
   140010828:	sub    DWORD PTR [rcx+0x5e],0xe8973ec1
   14001082f:	xchg   DWORD PTR [rbp+0x313aa952],esp
   140010835:	xor    DWORD PTR [rcx-0x42211099],esi
   14001083b:	or     ecx,DWORD PTR [rbx+0x4b]
   14001083e:	rex.WXB sti 
   140010840:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010841:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010842:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010843:	out    0x5e,eax
   140010845:	sti    
   140010846:	fcmovbe st,st(7)
   140010848:	(bad)  
   140010849:	pop    rdx
   14001084a:	pop    rdx
   14001084b:	pop    rdx
   14001084c:	jp     0x14001082b
   14001084e:	clc    
   14001084f:	clc    
   140010850:	clc    
   140010851:	test   BYTE PTR [rbx-0x1a523d4c],bl
   140010857:	mov    eax,0xad40b0b0
   14001085c:	push   rsi
   14001085d:	jrcxz  0x14001083b
   14001085f:	mov    ecx,0x6adbb473
   140010864:	int3   
   140010865:	jbe    0x140010822
   140010867:	pop    rbp
   140010868:	mov    ds,WORD PTR [rdi]
   14001086a:	(bad)  
   14001086b:	(bad)  
   14001086c:	mov    ebp,DWORD PTR [rdi]
   14001086e:	mov    esi,0xfcc21968
   140010873:	cld    
   140010874:	mov    esp,0x68d1179a
   140010879:	xor    BYTE PTR [rcx],dh
   14001087b:	ds (bad) 
   14001087d:	mov    esi,0x7839fbfd
   140010882:	(bad)  
   140010883:	sbb    eax,0x6ed04278
   140010888:	mov    ch,0xe8
   14001088a:	je     0x1400108c6
   14001088c:	ss (bad) 
   14001088e:	shl    DWORD PTR [rax+0x30],0xb0
   140010892:	and    rsi,r10
   140010895:	div    ebx
   140010897:	sbb    DWORD PTR [rbp+0x83996f2],eax
   14001089d:	xchg   ecx,eax
   14001089e:	rex.WX icebp 
   1400108a0:	pushf  
   1400108a1:	(bad)  
   1400108a2:	and    dl,dh
   1400108a4:	or     al,0xc4
   1400108a6:	repz push rdx
   1400108a8:	data16 loopne 0x14001084b
   1400108ab:	or     ebp,DWORD PTR [rcx-0x1bcf3c29]
   1400108b1:	loopne 0x140010834
   1400108b3:	add    edx,DWORD PTR [rbx+rbp*1-0x512245eb]
   1400108ba:	jb     0x140010847
   1400108bc:	or     DWORD PTR es:[rbp-0x5c996892],ebx
   1400108c3:	xchg   ecx,eax
   1400108c4:	xor    cl,BYTE PTR [rdi+rax*4]
   1400108c7:	mov    ch,bl
   1400108c9:	cmp    esp,edi
   1400108cb:	push   rcx
   1400108cc:	adc    al,0x71
   1400108ce:	in     eax,0xea
   1400108d0:	cmp    dl,BYTE PTR [rdi-0x7df6a9a9]
   1400108d6:	gs cmp eax,0xb191bc0e
   1400108dc:	imul   ebp,esp,0x5f053b24
   1400108e2:	vhaddpd xmm11,xmm1,xmm3
   1400108e6:	stos   DWORD PTR es:[rdi],eax
   1400108e7:	add    edi,esp
   1400108e9:	fld    TBYTE PTR [rsi+0x10]
   1400108ec:	rex bswap esp
   1400108ef:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400108f0:	xchg   BYTE PTR [rsi],cl
   1400108f2:	push   rdx
   1400108f3:	es rex.R push rcx
   1400108f6:	push   0xfffffffffffffff4
   1400108f8:	push   rbx
   1400108f9:	test   BYTE PTR [rcx+0x22],ah
   1400108fc:	in     al,0xd2
   1400108fe:	jl     0x14001096e
   140010900:	push   rdx
   140010901:	mov    ebx,0xbd448c4c
   140010906:	adc    eax,0x6197406e
   14001090b:	rex.WR
   14001090c:	rex.WR
   14001090d:	rex.WR xor BYTE PTR [rbx],r14b
   140010910:	xor    eax,DWORD PTR [rbx-0x53]
   140010913:	push   rsi
   140010914:	mov    bl,0x1c
   140010916:	xlat   BYTE PTR ds:[rbx]
   140010917:	and    BYTE PTR [rsi+0x5675f5f5],cl
   14001091d:	push   rsi
   14001091e:	push   rsi
   14001091f:	push   0xffffffffbef8dbb7
   140010924:	iret   
   140010925:	(bad)  
   140010927:	sbb    al,0x7b
   140010929:	imul   esi
   14001092b:	mov    ch,0xf3
   14001092d:	(bad)  
   14001092f:	(bad)  
   140010930:	pop    rbx
   140010931:	pop    rbx
   140010932:	pop    rbx
   140010933:	jrcxz  0x1400108ba
   140010935:	(bad)  
   140010936:	pop    rsi
   140010937:	loopne 0x14001091b
   140010939:	(bad)
   14001093c:	sti    
   14001093d:	jge    0x140010939
   14001093f:	std    
   140010940:	mov    esi,0x60618ebd
   140010945:	cs icebp 
   140010947:	fbstp  TBYTE PTR [rbp-0x29]
   14001094a:	pop    rbp
   14001094b:	sbb    al,0x3a
   14001094d:	je     0x1400108d7
   14001094f:	mov    DWORD PTR [rcx-0x3d95e5f7],ecx
   140010955:	rex.WRXB xor BYTE PTR [r11],r15b
   140010958:	cmp    edi,ebx
   14001095a:	cli    
   14001095b:	xlat   BYTE PTR ds:[rbx]
   14001095c:	mov    ebp,0x7faf75ee
   140010961:	(bad)  
   140010962:	test   eax,0xb3f6bea7
   140010967:	(bad)  
   140010968:	sti    
   140010969:	mov    bl,0xff
   14001096b:	jbe    0x1400109d2
   14001096d:	gs in  eax,0xa
   140010970:	retf   0x6f5a
   140010973:	es push rax
   140010975:	and    al,0xce
   140010977:	xor    ah,BYTE PTR [rcx+rbx*1+0x41]
   14001097b:	jbe    0x140010913
   14001097d:	rex.WXB (bad) 
   14001097f:	(bad)  
   140010980:	out    0xd1,eax
   140010982:	outs   dx,DWORD PTR ds:[rsi]
   140010983:	sar    DWORD PTR [rdx],1
   140010985:	cli    
   140010986:	fiadd  DWORD PTR [rbx]
   140010988:	rex int3 
   14001098a:	iret   
   14001098b:	iret   
   14001098c:	iret   
   14001098d:	mov    esp,0x7b6f6ded
   140010992:	jmp    0x14001092f
   140010994:	(bad)  
   140010996:	out    0x37,al
   140010998:	iret   
   140010999:	int3   
   14001099a:	int3   
   14001099b:	fcomp  QWORD PTR [rbp+0x2e]
   14001099e:	xchg   edi,eax
   14001099f:	imul   edx,ebp,0x6a
   1400109a2:	(bad)  
   1400109a3:	adc    eax,DWORD PTR [rdx+0x58]
   1400109a6:	(bad)  
   1400109a7:	out    dx,eax
   1400109a8:	jbe    0x1400109f1
   1400109aa:	repz fstp DWORD PTR [rbx-0x5271c721]
   1400109b1:	pop    rdx
   1400109b2:	je     0x1400109aa
   1400109b4:	in     al,dx
   1400109b5:	pop    rcx
   1400109b6:	sbb    edx,eax
   1400109b8:	in     al,0x66
   1400109ba:	mov    ecx,0x9cbb76ed
   1400109bf:	cmp    BYTE PTR [rcx-0x3e],dh
   1400109c2:	xor    ah,BYTE PTR [rax-0x2d]
   1400109c5:	rex.RXB
   1400109c6:	adc    BYTE PTR [r8],sil
   1400109c9:	xor    eax,0xa5bec535
   1400109ce:	and    eax,0xb34f4cf6
   1400109d3:	je     0x1400109c5
   1400109d5:	and    ch,cl
   1400109d7:	rex.RX ret 
   1400109d9:	or     al,BYTE PTR [rcx-0x5344892]
   1400109df:	ficomp DWORD PTR [rdx]
   1400109e1:	std    
   1400109e2:	pop    rsi
   1400109e3:	(bad)  
   1400109e4:	jbe    0x1400109a1
   1400109e6:	rex.WRB
   1400109e7:	rex.WRXB (bad) 
   1400109e9:	int3   
   1400109ea:	and    al,0x86
   1400109ec:	leave  
   1400109ed:	or     al,BYTE PTR [rcx+0x671d90d4]
   1400109f3:	(bad)  
   1400109f4:	mov    ebp,0xdea0d71
   1400109f9:	(bad)  
   1400109fa:	fstp   TBYTE PTR [rcx]
   1400109fc:	stos   BYTE PTR es:[rdi],al
   1400109fd:	rex.RB
   1400109fe:	rex.RX or eax,0x23c10cd4
   140010a04:	rex.RB movabs al,ds:0xa94134f4f4f818a0
   140010a0e:	adc    r8b,dil
   140010a11:	(bad)  
   140010a12:	stc    
   140010a13:	jne    0x140010a1c
   140010a15:	mov    edx,0x6122a536
   140010a1a:	in     al,0x4e
   140010a1c:	outs   dx,DWORD PTR ds:[rsi]
   140010a1d:	ja     0x140010a5c
   140010a1f:	rex.WRB stc 
   140010a21:	movsxd edi,DWORD PTR [rip+0xffffffffe9d3a3cf]        # 0x129d4adf6
   140010a27:	mov    WORD PTR [rdi+rbx*1-0x5454fefc],ds
   140010a2e:	stos   DWORD PTR es:[rdi],eax
   140010a2f:	imul   edi,DWORD PTR [rdx+rcx*8+0x3a6a6ed],0x27
   140010a37:	mov    DWORD PTR [rcx+0x5e391fe],edx
   140010a3d:	push   rax
   140010a3e:	movsxd ebx,edx
   140010a40:	sbb    BYTE PTR [rcx+rax*2],al
   140010a43:	jge    0x140010a50
   140010a45:	iret   
   140010a46:	repz xchg ecx,eax
   140010a48:	xor    cl,cl
   140010a4a:	or     al,0x96
   140010a4c:	sbb    ecx,ecx
   140010a4e:	add    edx,DWORD PTR [rax-0x7b121e89]
   140010a54:	or     ah,bl
   140010a56:	loopne 0x1400109f5
   140010a58:	jmp    0x167277446
   140010a5d:	(bad)  
   140010a5e:	rex.RXB
   140010a5f:	repnz mov cl,0x77
   140010a62:	cmp    bl,BYTE PTR [rip+0x59575756]        # 0x1995861be
   140010a68:	pop    rdi
   140010a69:	pop    rdi
   140010a6a:	rex.RXB or BYTE PTR [r9+0x7d],r12b
   140010a6e:	clc    
   140010a6f:	xchg   ebx,eax
   140010a70:	xchg   ebx,eax
   140010a71:	xchg   ebx,eax
   140010a72:	cli    
   140010a73:	cmp    DWORD PTR [rbp-0x42],esi
   140010a76:	(bad)  
   140010a77:	lods   eax,DWORD PTR ds:[rsi]
   140010a78:	sub    eax,0xcd3e9f4e
   140010a7d:	jmp    0x184eeb255
   140010a82:	sahf   
   140010a83:	xchg   ebp,eax
   140010a84:	xchg   ebp,eax
   140010a85:	xchg   ebp,eax
   140010a86:	movabs ds:0xc7f7df23fd1e8f47,eax
   140010a8f:	out    0xe6,eax
   140010a91:	out    0xee,al
   140010a93:	fidiv  WORD PTR [rdi-0x566e2091]
   140010a99:	test   eax,0xa952c5a9
   140010a9e:	and    al,0xc2
   140010aa0:	xor    BYTE PTR [rsi+rsi*2+0x76],ah
   140010aa4:	xchg   esi,eax
   140010aa5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010aa6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010aa7:	and    eax,0xca6ad1d
   140010aac:	mov    edi,ebp
   140010aae:	jle    0x140010b0f
   140010ab0:	xchg   r14,rax
   140010ab2:	xor    ah,ah
   140010ab4:	lea    ebp,[rdi+0x7c]
   140010ab7:	jrcxz  0x140010ad4
   140010ab9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010aba:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010abb:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010abc:	dec    cl
   140010abe:	rex.WRXB push r12
   140010ac1:	rex.WRXB inc r12
   140010ac4:	cdq    
   140010ac5:	xor    esp,DWORD PTR [rdi+0x4e]
   140010ac8:	movabs ds:0xb72fcd6ee1818090,al
   140010ad1:	mov    ecx,0xbf39ee84
   140010ad6:	xor    dl,cl
   140010ad8:	sbb    al,0x32
   140010ada:	frstor [rdi-0x2857c651]
   140010ae0:	jmp    0x140010b45
   140010ae2:	(bad)  
   140010ae4:	cld    
   140010ae5:	lock mov ebx,0x37c6f8de
   140010aeb:	mov    esi,0xefbbeee1
   140010af0:	jle    0x140010b62
   140010af2:	jb     0x140010b66
   140010af4:	jb     0x140010ac8
   140010af6:	xor    DWORD PTR fs:[rdx],esi
   140010af9:	test   BYTE PTR [rdi-0x1c],dl
   140010afc:	sbb    eax,0xddcdfb71
   140010b01:	outs   dx,DWORD PTR ds:[rsi]
   140010b02:	pop    rsp
   140010b03:	(bad)  
   140010b04:	sti    
   140010b05:	imul   edi
   140010b07:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010b08:	push   rsp
   140010b09:	sub    dh,BYTE PTR [rcx+0x18e1b1b1]
   140010b0f:	jp     0x140010b76
   140010b11:	xchg   BYTE PTR [rcx],ah
   140010b13:	mov    eax,0xc71c562a
   140010b18:	pushf  
   140010b19:	(bad)  
   140010b1a:	jg     0x140010aba
   140010b1c:	in     eax,0xe5
   140010b1e:	cmp    eax,DWORD PTR gs:[rbp+0xccccf78]
   140010b25:	mov    bl,0x33
   140010b27:	xor    ebp,esp
   140010b29:	fnstenv [rbx+0x585f987]
   140010b2f:	neg    BYTE PTR [rdi]
   140010b31:	cmp    BYTE PTR [rax-0x31],ah
   140010b34:	in     eax,dx
   140010b35:	cmc    
   140010b36:	jp     0x140010b61
   140010b38:	pop    rdx
   140010b39:	call   0xfb75f4b4
   140010b3e:	sub    ah,BYTE PTR [rbx]
   140010b40:	xchg   ebx,eax
   140010b41:	(bad)  
   140010b42:	(bad)  
   140010b43:	mov    esi,0x19ccb289
   140010b48:	add    ebp,ecx
   140010b4a:	ja     0x140010b80
   140010b4c:	popf   
   140010b4d:	out    0x22,eax
   140010b4f:	(bad)  
   140010b50:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010b51:	mov    ah,0xd0
   140010b53:	fisub  WORD PTR [rbp+rdi*2-0x7b850915]
   140010b5a:	push   rcx
   140010b5b:	rex.R movabs al,ds:0x47ede4191a27b453
   140010b65:	out    dx,al
   140010b66:	clc    
   140010b67:	sub    BYTE PTR [rdx-0x5af0a2cb],dh
   140010b6d:	(bad)  
   140010b6e:	pop    rcx
   140010b6f:	cmp    BYTE PTR [rcx+0x15],0xc6
   140010b73:	repz cmp al,0x56
   140010b76:	push   rdi
   140010b77:	push   rdi
   140010b78:	pop    rdi
   140010b79:	(bad)  
   140010b7a:	sub    BYTE PTR [rax-0x28],al
   140010b7d:	add    eax,0xc0820803
   140010b82:	jmp    0x10d0ca0a7
   140010b87:	pop    rax
   140010b88:	std    
   140010b89:	rcl    DWORD PTR [rsi+0x3c210132],cl
   140010b8f:	ret    0xc870
   140010b92:	jo     0x140010b6c
   140010b94:	(bad)  
   140010b95:	(bad)  
   140010b96:	adc    DWORD PTR [rax+0x51800554],eax
   140010b9c:	std    
   140010b9d:	outs   dx,DWORD PTR ds:[rsi]
   140010b9f:	shr    DWORD PTR [rdi],1
   140010ba1:	pop    rdx
   140010ba2:	lock fcomp QWORD PTR ss:[rdi+rbx*2]
   140010ba7:	lods   eax,DWORD PTR ds:[rsi]
   140010ba8:	push   rsi
   140010ba9:	cdq    
   140010baa:	fwait
   140010bab:	fwait
   140010bac:	mov    bl,0xb1
   140010bae:	imul   esi
   140010bb0:	mov    cl,0x9d
   140010bb2:	rex.WRX xchg rbx,r9
   140010bb5:	xchg   edi,eax
   140010bb6:	(bad)  
   140010bb7:	mov    bl,0xbd
   140010bb9:	mov    ebp,0x3d92948d
   140010bbe:	jnp    0x140010bb6
   140010bc0:	fsubr  DWORD PTR [rax+0x3132373d]
   140010bc6:	or     al,0x43
   140010bc8:	pop    rsi
   140010bc9:	jp     0x140010bb4
   140010bcb:	and    eax,0x493c9e4e
   140010bd0:	mov    bh,0xdb
   140010bd2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010bd3:	xlat   BYTE PTR ds:[rbx]
   140010bd4:	jmp    0x140010bfb
   140010bd6:	push   rdi
   140010bd7:	scas   al,BYTE PTR es:[rdi]
   140010bd8:	pop    rsp
   140010bd9:	jns    0x140010bc9
   140010bdb:	vmaxsd xmm15,xmm13,xmm4
   140010bdf:	loop   0x140010b7a
   140010be1:	xor    esp,DWORD PTR [rdi-0x72]
   140010be4:	(bad)  
   140010be5:	jno    0x140010c03
   140010be7:	add    dh,dl
   140010be9:	(bad)  
   140010bea:	mov    DWORD PTR [rbx],edx
   140010bec:	pop    rdi
   140010bed:	adc    DWORD PTR [rdx+0x54],eax
   140010bf0:	xchg   edi,eax
   140010bf1:	xchg   esi,eax
   140010bf2:	xchg   esi,eax
   140010bf3:	(bad)  
   140010bf4:	sbb    al,0x3c
   140010bf6:	js     0x140010be8
   140010bf8:	jne    0x140010c69
   140010bfa:	jp     0x140010bcf
   140010bfc:	fwait
   140010bfd:	mov    esi,0x43a1d0e5
   140010c02:	push   rbx
   140010c03:	mov    ch,0x5a
   140010c05:	lea    esi,[rcx-0x6ad5ce4f]
   140010c0b:	or     bh,BYTE PTR [rbp-0x3ca330a2]
   140010c11:	cs (bad) 
   140010c13:	sub    eax,0xc8fa1d2d
   140010c18:	rex.RXB
   140010c19:	repnz xlat BYTE PTR ds:[rbx]
   140010c1c:	jg     0x140010c00
   140010c1e:	(bad)  
   140010c1f:	jle    0x140010c03
   140010c21:	xchg   ebx,esp
   140010c23:	cmp    BYTE PTR [rsi],dh
   140010c25:	movabs eax,ds:0x676e0145a6faba65
   140010c2e:	in     al,0x19
   140010c30:	sub    bh,0x2c
   140010c33:	fwait
   140010c34:	repnz ds out dx,al
   140010c37:	(bad)  
   140010c38:	sbb    BYTE PTR [rax],bl
   140010c3a:	jp     0x140010bda
   140010c3c:	push   rdi
   140010c3d:	fwait
   140010c3e:	popf   
   140010c3f:	popf   
   140010c40:	popf   
   140010c41:	jle    0x140010c26
   140010c43:	sbb    ebx,edi
   140010c45:	clc    
   140010c46:	sar    BYTE PTR [rbx],1
   140010c48:	fdivrp st(1),st
   140010c4a:	mov    ?,WORD PTR [rdi+0x1d]
   140010c4d:	ds jl  0x140010c48
   140010c50:	fwait
   140010c51:	rex.WR xor rax,0x53a74e9a
   140010c57:	fsubr  DWORD PTR [rdi+0x777c23d7]
   140010c5d:	(bad)  
   140010c5f:	sti    
   140010c60:	ret    0x2c2
   140010c63:	in     eax,0x72
   140010c65:	pop    rcx
   140010c66:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010c67:	(bad)  
   140010c68:	and    ecx,DWORD PTR [rip+0x437fc9d0]        # 0x18380d63e
   140010c6e:	mov    bl,0xec
   140010c70:	rex.WX retf 0x8a28
   140010c74:	mov    eax,0xcb3cfe70
   140010c79:	addr32 (bad) 
   140010c7b:	and    BYTE PTR [rax+riz*4+0x35332e5c],al
   140010c82:	xor    eax,0x8668cc5
   140010c87:	(bad)  
   140010c88:	nop    DWORD PTR [rsp+rdi*2+0x62]
   140010c8d:	(bad)  
   140010c8e:	or     DWORD PTR [rdi+0x43870f91],eax
   140010c94:	mov    edx,0x329daedd
   140010c99:	sbb    eax,0x91c21146
   140010c9e:	in     al,0x9
   140010ca0:	(bad)  
   140010ca1:	sub    dh,al
   140010ca3:	int3   
   140010ca4:	sub    al,0x40
   140010ca6:	lods   al,BYTE PTR ds:[rsi]
   140010ca7:	fisub  DWORD PTR [rax]
   140010ca9:	rex.W ins DWORD PTR es:[rdi],dx
   140010cab:	add    al,0xa6
   140010cad:	lock imul esp,DWORD PTR [rdi+0x28f34edd],0xffffffc6
   140010cb5:	mov    cl,0x99
   140010cb7:	movabs ds:0x832d75ef36946851,eax
   140010cc0:	jae    0x140010c93
   140010cc2:	ds repz jmp 0x140010cf8
   140010cc6:	add    bh,dh
   140010cc8:	mov    bh,0x54
   140010cca:	sub    bh,BYTE PTR [rbp+0x4d40c96a]
   140010cd0:	mov    ebx,0xf1700661
   140010cd5:	loop   0x140010c9c
   140010cd7:	sub    ecx,DWORD PTR [rbx+0x4a7a8b8b]
   140010cdd:	stos   DWORD PTR es:[rdi],eax
   140010cde:	push   rdx
   140010cdf:	add    DWORD PTR [rdi+riz*1+0x1c54bcc0],ecx
   140010ce6:	rex.WXB sbb rax,0xffffffffba3aa418
   140010cec:	shr    DWORD PTR [rcx-0x27],cl
   140010cef:	fdiv   DWORD PTR [rbx-0x6d]
   140010cf2:	sbb    BYTE PTR [rbx],ah
   140010cf4:	outs   dx,DWORD PTR ds:[rsi]
   140010cf5:	add    al,0x74
   140010cf7:	fcomi  st,st(5)
   140010cf9:	fadd   QWORD PTR [rax+0x691ab066]
   140010cff:	pop    rbx
   140010d00:	stos   DWORD PTR es:[rdi],eax
   140010d01:	(bad)  
   140010d02:	xor    dl,BYTE PTR [rax-0x21]
   140010d05:	rex.W nop
   140010d07:	sub    eax,0xbd7a503d
   140010d0c:	(bad)  
   140010d0d:	cmc    
   140010d0e:	jp     0x140010cad
   140010d10:	add    eax,DWORD PTR [rdi]
   140010d12:	(bad)  
   140010d13:	shr    BYTE PTR [rsi+rsi*1+0x2d],1
   140010d17:	xchg   ebx,eax
   140010d18:	xor    cl,bh
   140010d1a:	fst    DWORD PTR [rdi+0x59599797]
   140010d20:	pop    rcx
   140010d21:	(bad)  
   140010d22:	ins    DWORD PTR es:[rdi],dx
   140010d23:	ins    DWORD PTR es:[rdi],dx
   140010d24:	lea    ecx,[rbp-0x4949f273]
   140010d2a:	mov    dh,0xce
   140010d2c:	lahf   
   140010d2d:	ds jge 0x140010d2a
   140010d30:	mov    DWORD PTR [rbx-0x69],ecx
   140010d33:	cs popf 
   140010d35:	pop    rax
   140010d36:	pop    rcx
   140010d37:	pop    rcx
   140010d38:	jns    0x140010d5f
   140010d3a:	xchg   r10,rax
   140010d3c:	or     BYTE PTR [rip+0xffffffff82284bdb],al        # 0xc229591d
   140010d42:	in     eax,dx
   140010d43:	out    dx,eax
   140010d44:	fistp  QWORD PTR [rdi-0x10421e81]
   140010d4a:	jge    0x140010d3b
   140010d4c:	fwait
   140010d4d:	out    dx,al
   140010d4e:	mov    ecx,0x87839ee7
   140010d53:	nop    DWORD PTR [rsi-0x46]
   140010d57:	xor    edi,esi
   140010d59:	ss ss ss adc al,0x8c
   140010d5e:	(bad)  
   140010d5f:	jo     0x140010db7
   140010d61:	rex.RXB add r14b,BYTE PTR [r14-0x61]
   140010d65:	jns    0x140010d4d
   140010d67:	cdq    
   140010d68:	rex.RXB sahf 
   140010d6a:	jge    0x140010d62
   140010d6c:	fnstcw WORD PTR [rdi]
   140010d6e:	(bad)  
   140010d6f:	add    edx,0x48
   140010d72:	dec    BYTE PTR [rax]
   140010d74:	ins    DWORD PTR es:[rdi],dx
   140010d75:	mov    BYTE PTR [rbx+0x54],ah
   140010d78:	sbb    eax,0x30db8970
   140010d7d:	add    BYTE PTR [rdi-0x27],dh
   140010d80:	rex.RB add al,0x83
   140010d83:	stc    
   140010d84:	stc    
   140010d85:	stc    
   140010d86:	stc    
   140010d87:	xchg   DWORD PTR [rdi],ebx
   140010d89:	jle    0x140010d83
   140010d8b:	fistp  DWORD PTR [rdi]
   140010d8d:	js     0x140010d6f
   140010d8f:	xor    DWORD PTR [rdi-0xf87c3e4],0xc9c9c9ae
   140010d99:	icebp  
   140010d9a:	cmp    al,0xd1
   140010d9c:	out    0x9,eax
   140010d9e:	jge    0x140010dc7
   140010da0:	push   ax
   140010da2:	mov    ah,0x2d
   140010da4:	outs   dx,DWORD PTR ds:[rsi]
   140010da5:	adc    DWORD PTR [edx-0x28],eax
   140010da9:	push   0x231d0dc9
   140010dae:	push   rax
   140010daf:	mov    ebp,DWORD PTR fs:[rcx]
   140010db2:	(bad)  
   140010db3:	fiadd  WORD PTR [rsi]
   140010db5:	cmp    bl,BYTE PTR [rbx+0x1c71b90c]
   140010dbb:	jae    0x140010db6
   140010dbd:	repnz gs (bad) 
   140010dc0:	popf   
   140010dc1:	push   rbx
   140010dc2:	rex.WB jno 0x140010d8f
   140010dc5:	in     eax,0x32
   140010dc7:	(bad)  
   140010dc8:	push   0xffffffffffffffd5
   140010dca:	fidiv  DWORD PTR [rax-0x74]
   140010dcd:	retf   
   140010dce:	jbe    0x140010e3e
   140010dd0:	jle    0x140010db0
   140010dd2:	xor    bl,BYTE PTR [rsi]
   140010dd4:	push   rbx
   140010dd5:	fisubr WORD PTR [rbp+0xd13efd7]
   140010ddb:	xchg   DWORD PTR [rdx+rax*8],ecx
   140010dde:	nop
   140010ddf:	scas   al,BYTE PTR es:[rdi]
   140010de0:	mov    dh,0x2b
   140010de2:	and    al,0x52
   140010de4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010de5:	rex.WRXB (bad) 
   140010de7:	cmc    
   140010de8:	(bad)  
   140010de9:	xor    al,0xc
   140010deb:	add    eax,0x63fd1cd2
   140010df0:	movsxd esp,DWORD PTR [rbx+0x24]
   140010df3:	(bad)  
   140010df4:	ins    DWORD PTR es:[rdi],dx
   140010df5:	mov    ah,0xdb
   140010df7:	ss pop rbp
   140010df9:	ja     0x140010da0
   140010dfb:	push   rdx
   140010dfc:	sbb    DWORD PTR [rcx-0x62],eax
   140010dff:	outs   dx,BYTE PTR ds:[rsi]
   140010e00:	pop    rdi
   140010e01:	fmul   QWORD PTR [rbx+rdx*1]
   140010e04:	jo     0x140010e31
   140010e06:	pop    rdx
   140010e07:	cdq    
   140010e08:	imul   edx,DWORD PTR [rbx+rcx*8-0x3162c59b],0xffffffd5
   140010e10:	out    0x9e,eax
   140010e12:	jnp    0x140010e02
   140010e14:	or     DWORD PTR [rdx-0x212423ba],esi
   140010e1a:	jbe    0x140010ddf
   140010e1c:	add    BYTE PTR [rsi],al
   140010e1e:	(bad)  
   140010e1f:	(bad)  
   140010e20:	sbb    al,0x60
   140010e22:	xor    BYTE PTR [rax],bl
   140010e24:	call   0x1890a55fd
   140010e29:	adc    ah,BYTE PTR [rbp+0x6c]
   140010e2c:	add    dh,al
   140010e2e:	xor    esp,DWORD PTR [rax-0x58218d4]
   140010e34:	std    
   140010e35:	(bad)  
   140010e36:	(bad)  
   140010e37:	(bad)  
   140010e38:	and    BYTE PTR [rax+riz*2+0x175e1c38],al
   140010e3f:	(bad)  
   140010e40:	out    dx,eax
   140010e41:	fs in  al,0x4b
   140010e44:	xchg   edx,eax
   140010e45:	test   BYTE PTR [rdx-0x47],dh
   140010e48:	int3   
   140010e49:	clc    
   140010e4a:	clc    
   140010e4b:	cmp    bl,dl
   140010e4d:	rcl    ebx,cl
   140010e4f:	jbe    0x140010ddb
   140010e51:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010e52:	cmp    DWORD PTR [rsi+0x38],esi
   140010e55:	sbb    al,0xb2
   140010e57:	mov    ch,0xb5
   140010e59:	gs rex.XB jo 0x140010dea
   140010e5d:	xchg   ebp,eax
   140010e5e:	jp     0x140010ece
   140010e60:	outs   dx,BYTE PTR ds:[rsi]
   140010e61:	(bad)  
   140010e62:	(bad)  
   140010e63:	lods   al,BYTE PTR ds:[rsi]
   140010e64:	cwde   
   140010e65:	jmp    0x19d2fa632
   140010e6a:	loop   0x140010e01
   140010e6c:	push   rdi
   140010e6d:	pop    rsi
   140010e6e:	(bad)  
   140010e6f:	jns    0x140010eea
   140010e71:	fldenv [rcx*8+0x71389eec]
   140010e78:	loop   0x140010e09
   140010e7a:	mov    ds,WORD PTR [rdi]
   140010e7c:	(bad)  
   140010e7d:	(bad)  
   140010e7e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010e7f:	pop    rsi
   140010e80:	scas   eax,DWORD PTR es:[rdi]
   140010e81:	xlat   BYTE PTR ds:[rbx]
   140010e82:	sar    ch,cl
   140010e84:	push   rdx
   140010e85:	sar    BYTE PTR [rdi+0x9],cl
   140010e88:	xor    BYTE PTR [rdi+rbx*4-0x30866061],bl
   140010e8f:	jnp    0x140010e6f
   140010e91:	repz lock mov ebx,0xb7eefddf
   140010e98:	out    dx,eax
   140010e99:	(bad)  [rdi+0x2082c6f]
   140010e9f:	retf   0x10ba
   140010ea2:	call   0x1a3613f07
   140010ea7:	movsxd eax,DWORD PTR [rbx-0x66944892]
   140010ead:	rex.WRXB adc al,0x45
   140010eb0:	cmp    al,0xf1
   140010eb2:	(bad)  
   140010eb3:	adc    ebx,DWORD PTR [rdi-0x8]
   140010eb6:	cld    
   140010eb7:	out    0x3f,eax
   140010eb9:	(bad)  
   140010eba:	jmp    0x140010ea3
   140010ebc:	(bad)  
   140010ebd:	popf   
   140010ebe:	cmp    eax,DWORD PTR [rbp+0x451f7a22]
   140010ec4:	clc    
   140010ec5:	adc    DWORD PTR [rdx-0xa],ebp
   140010ec8:	mov    DWORD PTR [rcx+0x1],eax
   140010ecb:	adc    DWORD PTR [rbx],edi
   140010ecd:	xor    eax,DWORD PTR [rax-0xa640ec4]
   140010ed3:	mov    r11b,0xd9
   140010ed6:	ins    BYTE PTR es:[rdi],dx
   140010ed7:	jle    0x140010ec1
   140010ed9:	rex.XB (bad) 
   140010edb:	cli    
   140010edc:	sahf   
   140010edd:	ja     0x140010e9d
   140010edf:	repz popf 
   140010ee1:	(bad)  
   140010ee2:	(bad)  
   140010ee3:	cdq    
   140010ee4:	cdq    
   140010ee5:	fnstenv [rdi]
   140010ee7:	(bad)  
   140010ee8:	imul   ecx,ecx,0x8676edda
   140010eee:	or     bl,dh
   140010ef0:	add    al,0x79
   140010ef2:	movabs ds:0x76abb5953e5a6fc4,eax
   140010efb:	sbb    DWORD PTR [rbp-0x40],esi
   140010efe:	sub    eax,0x65ee6178
   140010f03:	pop    rsp
   140010f04:	ret    0x22e
   140010f07:	xor    bh,bl
   140010f09:	sub    al,0x9f
   140010f0b:	hlt    
   140010f0c:	(bad)  
   140010f0d:	int3   
   140010f0e:	pushf  
   140010f0f:	mov    ebx,fs
   140010f11:	fmul   st,st(6)
   140010f13:	scas   al,BYTE PTR es:[rdi]
   140010f14:	je     0x140010e9b
   140010f16:	rex.RB test eax,0x62626254
   140010f1c:	(bad)  
   140010f1d:	stc    
   140010f1e:	stc    
   140010f1f:	jns    0x140010f87
   140010f21:	addr32 addr32 pop rcx
   140010f24:	pop    rsp
   140010f25:	pop    rsp
   140010f26:	fistp  QWORD PTR fs:[rsi+0x4c4c4c7d]
   140010f2d:	push   rax
   140010f2e:	sub    dl,BYTE PTR [rbp-0x1e0885ac]
   140010f34:	shl    BYTE PTR [rsi+0x5b],1
   140010f37:	(bad)  
   140010f38:	je     0x140010ef5
   140010f3a:	or     al,0xb5
   140010f3c:	jge    0x140010f01
   140010f3e:	jp     0x140010f5f
   140010f40:	hlt    
   140010f41:	jge    0x140010f0a
   140010f43:	mov    bh,0xed
   140010f46:	jnp    0x140010f30
   140010f48:	test   al,0x4d
   140010f4a:	xchg   ebp,eax
   140010f4b:	fmulp  st(5),st
   140010f4d:	mov    esi,ebp
   140010f4f:	fmul   QWORD PTR [rcx-0x5e]
   140010f52:	out    dx,eax
   140010f53:	xchg   esi,eax
   140010f54:	or     esp,esp
   140010f56:	fucom  st(2)
   140010f58:	xchg   ebp,eax
   140010f59:	rex.WX test QWORD PTR [rdx-0x5b],rcx
   140010f5d:	ret    0xf2f2
   140010f60:	bnd jg 0x140010fe0
   140010f63:	jmp    0xd02fa70d
   140010f68:	rex.RX jno 0x140010f05
   140010f6b:	mov    edi,0x6e39629d
   140010f70:	movabs r11,0x52d807befbe00661
   140010f7a:	(bad)  
   140010f7b:	jno    0x140010fe9
   140010f7d:	ret    0xb381
   140010f80:	sub    al,BYTE PTR [rax-0x16dff656]
   140010f86:	jbe    0x140010f63
   140010f88:	cmp    dh,BYTE PTR [rdi+0x59d2345c]
   140010f8e:	adc    r11b,r10b
   140010f91:	rex.RB add al,0xf9
   140010f94:	add    DWORD PTR [rbx],ebx
   140010f96:	add    al,0x81
   140010f98:	popf   
   140010f99:	xchg   edi,ebp
   140010f9b:	(bad)  
   140010f9c:	adc    ebx,DWORD PTR [rax]
   140010f9e:	and    edx,esi
   140010fa0:	cli    
   140010fa1:	cli    
   140010fa2:	cmp    bl,BYTE PTR [rbx]
   140010fa4:	sbb    ebx,DWORD PTR [rbx]
   140010fa6:	or     al,0x6
   140010fa8:	add    eax,esi
   140010faa:	mov    dh,0xd8
   140010fad:	mov    bh,0x6f
   140010faf:	(bad)  
   140010fb0:	push   rbx
   140010fb1:	push   rbx
   140010fb2:	push   rbx
   140010fb3:	xchg   esi,eax
   140010fb4:	movabs ds:0x795e79fcfe76c19b,eax
   140010fbd:	in     eax,0x15
   140010fbf:	push   rsi
   140010fc0:	push   rsi
   140010fc1:	push   rsi
   140010fc2:	mov    WORD PTR [rcx-0x51],?
   140010fc5:	jnp    0x140010fb5
   140010fc7:	fdivr  QWORD PTR [rcx-0xd034251]
   140010fcd:	retf   
   140010fce:	pop    rdi
   140010fcf:	pop    rsp
   140010fd0:	pop    rbp
   140010fd1:	pop    rbp
   140010fd2:	mov    ebp,0x26f82280
   140010fd7:	(bad)  
   140010fd8:	and    eax,DWORD PTR [rax+rbp*1+0x58]
   140010fdc:	pop    rbp
   140010fdd:	stc    
   140010fde:	rol    BYTE PTR [rdi],0x3e
   140010fe1:	lock mov esi,0xfdffbff7
   140010fe7:	out    dx,eax
   140010fe8:	pop    rcx
   140010fe9:	pop    rax
   140010fea:	pop    rax
   140010feb:	cwde   
   140010fec:	sub    BYTE PTR [rdi+0x356ad4cb],dl
   140010ff2:	fwait
   140010ff3:	xchg   edi,eax
   140010ff4:	jg     0x140011071
   140010ff6:	jnp    0x140010fd3
   140010ff8:	movabs ds:0x1716ad5a6deded8d,al
   140011001:	cs pop rsp
   140011003:	js     0x140010fee
   140011005:	sub    ebx,DWORD PTR [rdi-0x7]
   140011008:	retf   0x3c1f
   14001100b:	cli    
   14001100c:	call   0xe4a19fb4
   140011011:	jl     0x140011058
   140011013:	call   FWORD PTR [rdx]
   140011015:	movabs ds:0xc0a830332dbfb5d7,al
   14001101e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001101f:	xor    al,0x83
   140011021:	pop    rsi
   140011022:	pop    rbp
   140011023:	movabs ds:0xf43d0f43c435f4f7,al
   14001102c:	loopne 0x140010fb5
   14001102e:	(bad)  
   14001102f:	cld    
   140011030:	loope  0x140010ff1
   140011032:	jno    0x140011023
   140011034:	mov    ebp,0xd7b9bef7
   140011039:	jmp    0x140011014
   14001103b:	fs stos DWORD PTR es:[rdi],eax
   14001103d:	outs   dx,BYTE PTR ds:[rsi]
   14001103e:	mov    edi,0xaeaf13b9
   140011043:	add    eax,0x4c7aff3
   140011048:	repnz (bad) 
   14001104b:	mov    ebp,0x4cfbefa6
   140011050:	rex.WRB
   140011051:	rex.WRB mov r9b,0xbd
   140011054:	mov    ebp,0x79a58d6d
   140011059:	call   0x14dda18cd
   14001105e:	add    al,0x73
   140011060:	jg     0x14001108f
   140011062:	jl     0x1400110db
   140011064:	lods   al,BYTE PTR ds:[rsi]
   140011065:	in     eax,dx
   140011066:	stc    
   140011067:	pop    rsp
   140011068:	or     edx,DWORD PTR [rdx+0x4a]
   14001106b:	ss ss ss pop rax
   14001106f:	pop    rbp
   140011070:	pop    rbp
   140011071:	rex.RB
   140011072:	rex.WX xchg rbp,rax
   140011074:	outs   dx,BYTE PTR ds:[rsi]
   140011075:	int    0x44
   140011077:	jb     0x140011067
   140011079:	fnstsw WORD PTR [rbx-0x8040269]
   14001107f:	mov    bl,0xb0
   140011081:	mov    al,0x40
   140011083:	movabs ds:0x4da5290a6a6a60d1,eax
   14001108c:	mov    edi,0xd7e9d1d6
   140011091:	(bad)  
   140011092:	cmp    al,BYTE PTR [rdi+0x60f79982]
   140011098:	out    dx,al
   140011099:	scas   al,BYTE PTR es:[edi]
   14001109b:	in     eax,0x32
   14001109d:	sbb    al,0x77
   14001109f:	mov    ebp,fs
   1400110a1:	sti    
   1400110a2:	(bad)  
   1400110a3:	(bad)  
   1400110a4:	rex.WR sar BYTE PTR [rax-0x72],0xc
   1400110a9:	jb     0x140011058
   1400110ab:	xlat   BYTE PTR ds:[rbx]
   1400110ac:	jmp    0x1400110b2
   1400110ae:	rcr    BYTE PTR [r15-0x3603604],0x91
   1400110b6:	jle    0x140011077
   1400110b8:	sub    BYTE PTR [rcx+riz*2-0x191dca28],0x3b
   1400110c0:	(bad)  
   1400110c1:	sbb    ecx,esi
   1400110c3:	or     al,0x76
   1400110c5:	movsxd eax,DWORD PTR [rsp+rbx*2]
   1400110c8:	(bad)  
   1400110c9:	(bad)  
   1400110ca:	ds sbb ah,dh
   1400110cd:	xchg   ecx,eax
   1400110ce:	xor    cl,ch
   1400110d0:	or     BYTE PTR [rbx],0xa9
   1400110d3:	sbb    edx,DWORD PTR [rax-0x3f]
   1400110d6:	lock (bad) 
   1400110d8:	add    DWORD PTR [rcx+0xf],0x69
   1400110dc:	jmp    0x1400110b8
   1400110de:	stos   DWORD PTR es:[rdi],eax
   1400110df:	data16 adc ch,BYTE PTR [rdx-0x66]
   1400110e3:	jrcxz  0x1400110c1
   1400110e5:	mov    cs,esp
   1400110e7:	ja     0x140011089
   1400110e9:	out    dx,eax
   1400110ea:	sti    
   1400110eb:	(bad)  
   1400110ec:	push   0x35
   1400110ee:	stos   BYTE PTR es:[rdi],al
   1400110ef:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400110f0:	int3   
   1400110f1:	mov    dh,0x76
   1400110f3:	in     eax,0x99
   1400110f5:	(bad)  
   1400110f6:	(bad)  
   1400110f7:	in     eax,dx
   1400110f8:	jbe    0x1400110e3
   1400110fa:	idiv   ebx
   1400110fc:	ins    BYTE PTR es:[rdi],dx
   1400110fd:	outs   dx,BYTE PTR ds:[rsi]
   1400110fe:	outs   dx,BYTE PTR ds:[rsi]
   1400110ff:	adc    al,BYTE PTR [rbp+0x11]
   140011102:	cmc    
   140011103:	jp     0x1400110a2
   140011105:	cdq    
   140011106:	cdq    
   140011107:	sbb    ebx,ebp
   140011109:	retf   0xad33
   14001110c:	(bad)  [rsi-0x4d]
   14001110f:	mov    cl,0xb1
   140011111:	shl    ebp,0xcb
   140011114:	xchg   edi,eax
   140011115:	cmp    DWORD PTR [rbx-0x1a],esi
   140011118:	or     al,0xdd
   14001111a:	outs   dx,BYTE PTR ds:[rsi]
   14001111b:	push   rdi
   14001111c:	outs   dx,BYTE PTR ds:[rsi]
   14001111d:	outs   dx,DWORD PTR ds:[rsi]
   14001111e:	outs   dx,DWORD PTR ds:[rsi]
   14001111f:	pop    rdi
   140011120:	mov    esi,0xcbf2f97c
   140011125:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011126:	rex.WRX popf 
   140011128:	cli    
   140011129:	rcr    dl,cl
   14001112b:	fcmovu st,st(2)
   14001112d:	and    eax,0x5f196114
   140011132:	(bad)  
   140011133:	add    al,0x24
   140011135:	(bad)  
   140011136:	nop    esp
   140011139:	jg     0x14001111f
   14001113b:	enter  0x8391,0x6f
   14001113f:	jge    0x14001112c
   140011141:	pop    rbx
   140011142:	pop    rdi
   140011143:	jmp    rax
   140011145:	or     DWORD PTR [rdi],0xffffffde
   140011148:	imul   esp,DWORD PTR [rax-0x42],0x21
   14001114c:	jl     0x140011151
   14001114e:	cmc    
   14001114f:	(bad)  
   140011150:	(bad)  
   140011151:	(bad)  
   140011152:	jmp    0xefad8c4c
   140011157:	scas   eax,DWORD PTR es:[rdi]
   140011158:	rex.RXB cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001115a:	rex.WRXB lahf 
   14001115c:	jle    0x140011147
   14001115e:	mov    ecx,0xe47b9ee7
   140011163:	icebp  
   140011164:	(bad)  
   140011165:	(bad)  
   140011166:	call   QWORD PTR [rdx+0x18]
   140011169:	xchg   BYTE PTR [rbp-0x23],ch
   14001116c:	mov    edi,0x94436886
   140011171:	push   rbp
   140011172:	ds jb  0x14001110b
   140011175:	rex.XB push r10
   140011177:	add    al,0x90
   140011179:	(bad)  
   14001117a:	or     dh,ah
   14001117c:	push   rbp
   14001117d:	sbb    BYTE PTR [rax+0x6fbdbfff],0x8f
   140011184:	xchg   ecx,eax
   140011185:	movabs ds:0xbba7bbf555fcf73a,eax
   14001118e:	out    0xe5,eax
   140011190:	sbb    DWORD PTR [rbx+0x6c],edi
   140011193:	cmp    al,0xbe
   140011195:	mov    dh,0x31
   140011197:	ss fsub st,st(6)
   14001119a:	jno    0x140011133
   14001119c:	cwde   
   14001119d:	add    al,BYTE PTR [rcx-0x4b767ca0]
   1400111a4:	and    DWORD PTR [rcx+0x50],edx
   1400111a7:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400111a8:	(bad)  
   1400111aa:	(bad)  
   1400111ab:	push   rdi
   1400111ac:	mov    ecx,0xae89bdd2
   1400111b1:	push   rsi
   1400111b2:	rex.WX push rsi
   1400111b4:	and    BYTE PTR [rcx],dl
   1400111b6:	push   rsi
   1400111b7:	pop    rcx
   1400111b8:	loopne 0x140011180
   1400111ba:	and    BYTE PTR [rcx-0x5bb269d5],ah
   1400111c0:	fwait
   1400111c1:	(bad)  
   1400111c2:	out    0x46,al
   1400111c4:	mov    al,BYTE PTR [rdx-0x30]
   1400111c7:	pop    rbp
   1400111c8:	imul   edx,DWORD PTR [rip+0x4c20d864],0x836c4dae        # 0x18c21ea36
   1400111d2:	jns    0x140011198
   1400111d4:	(bad)  
   1400111d5:	int3   
   1400111d6:	loopne 0x1400111b0
   1400111d8:	jrcxz  0x1400111f3
   1400111da:	jnp    0x14001123a
   1400111dc:	fnstsw WORD PTR [rip+0xffffffffeee9eeaf]        # 0x12eeb0091
   1400111e2:	jno    0x14001125b
   1400111e4:	cmc    
   1400111e5:	movabs ds:0xbfaafee8ff7aabba,eax
   1400111ee:	ds jae 0x14001119b
   1400111f1:	jnp    0x1400111b9
   1400111f3:	fadd   DWORD PTR [rax+rdx*4-0x515ab606]
   1400111fa:	(bad)  
   1400111fb:	test   eax,0xf5d553aa
   140011200:	std    
   140011201:	mov    esi,0x39cef9c7
   140011206:	xor    BYTE PTR [rcx+0x7baed76b],0xee
   14001120d:	mov    ebp,0x7c6fdef7
   140011212:	icebp  
   140011213:	mov    ebx,DWORD PTR [rdi-0x4]
   140011216:	add    BYTE PTR es:[rdi-0x6dba0fb4],ch
   14001121d:	xchg   ebp,eax
   14001121e:	mov    ecx,0x9b0fb255
   140011223:	scas   eax,DWORD PTR es:[rdi]
   140011224:	mov    bh,0x72
   140011226:	add    eax,edi
   140011228:	xor    eax,0x870ffcc8
   14001122d:	ret    
   14001122e:	(bad)  
   14001122f:	jbe    0x1400111e6
   140011231:	pop    rdx
   140011232:	mov    ch,0xbe
   140011234:	or     eax,0x8517711e
   140011239:	sahf   
   14001123a:	scas   al,BYTE PTR es:[rdi]
   14001123b:	mov    edi,DWORD PTR [r8+0x4c]
   14001123f:	lods   al,BYTE PTR ds:[rsi]
   140011240:	(bad)  
   140011241:	lea    esp,[rsi-0x1a370ab4]
   140011247:	jb     0x1400112a1
   140011249:	pop    rsp
   14001124a:	pop    rsp
   14001124b:	(bad)  
   14001124c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001124d:	rex.WXB xchg r15,rax
   14001124f:	adc    BYTE PTR [rcx+0x60c1044],cl
   140011255:	rcl    ebp,1
   140011257:	(bad)  
   140011258:	test   ebp,edx
   14001125a:	stos   DWORD PTR es:[rdi],eax
   14001125b:	push   rdi
   14001125c:	movabs ds:0x822448b812c7a7a7,eax
   140011265:	(bad)  
   140011266:	(bad)  
   140011267:	mov    r10,QWORD PTR [rax+r9*8+0x3d]
   14001126c:	movabs ds:0x93e9d799c5312584,eax
   140011275:	nop
   140011276:	sub    BYTE PTR [rbx+0xd0b813e],0xe
   14001127d:	adc    ecx,DWORD PTR [rsi+rax*1]
   140011280:	movabs eax,ds:0x7bde87c7c7c60a28
   140011289:	out    dx,eax
   14001128a:	mov    ebp,0x78da883
   14001128f:	rex.B
   140011290:	rex.B (bad) 
   140011292:	rol    DWORD PTR [rdx],1
   140011294:	xor    BYTE PTR [rip+0xffffffffb85ddcdb],ah        # 0xf85eef75
   14001129a:	sub    ah,BYTE PTR [rax+rsi*4+0x12]
   14001129e:	add    dl,al
   1400112a0:	call   0xdd66de46
   1400112a5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400112a6:	add    edi,edx
   1400112a8:	or     BYTE PTR ds:[rdx+0x45],0x87
   1400112ad:	(bad)  
   1400112ae:	push   rsp
   1400112af:	push   rax
   1400112b0:	sub    dl,BYTE PTR [rip+0xb58b8b1]        # 0x14b59cb67
   1400112b6:	(bad)  
   1400112b7:	push   rcx
   1400112b8:	sbb    DWORD PTR [rdx+0x29],edi
   1400112bb:	(bad)  
   1400112bc:	xchg   BYTE PTR [rbx+rdx*8],ch
   1400112bf:	sub    BYTE PTR [rax+0x23],al
   1400112c2:	rcr    BYTE PTR [rsp+rcx*1],cl
   1400112c5:	(bad)  
   1400112c6:	rcr    ebx,1
   1400112c8:	fisttp DWORD PTR [rbx]
   1400112ca:	mov    edi,0x50f96fdf
   1400112cf:	hlt    
   1400112d0:	push   rcx
   1400112d1:	push   rbx
   1400112d2:	rex.R mov edi,0xcd582850
   1400112d8:	cmp    BYTE PTR [rbx],al
   1400112da:	add    eax,DWORD PTR [rbx]
   1400112dc:	(bad)  
   1400112dd:	rex (bad) 
   1400112df:	hlt    
   1400112e0:	adc    DWORD PTR [rdx+rcx*1],0x8d8d8c05
   1400112e7:	(bad)  
   1400112e8:	je     0x14001135e
   1400112ea:	adc    al,0xb9
   1400112ec:	pop    rsp
   1400112ed:	(bad)  
   1400112ee:	in     eax,0x72
   1400112f0:	sbb    DWORD PTR [rbx],ecx
   1400112f2:	or     ecx,DWORD PTR [rbx]
   1400112f4:	ret    
   1400112f5:	ret    
   1400112f6:	ret    
   1400112f7:	ret    
   1400112f8:	(bad)  
   1400112f9:	ds (bad) 
   1400112fb:	(bad)  
   1400112fc:	(bad)  
   1400112fd:	stos   DWORD PTR es:[rdi],eax
   1400112fe:	push   rsp
   1400112ff:	sub    al,BYTE PTR [rbp-0x60]
   140011302:	sub    DWORD PTR [rbp-0x49],ebx
   140011305:	or     al,0xa0
   140011307:	(bad)  
   140011309:	fistp  QWORD PTR [rdi-0xa01416]
   14001130f:	cli    
   140011310:	std    
   140011311:	mov    ebx,0x72feef77
   140011316:	ja     0x14001138f
   140011318:	mov    bh,0xdb
   14001131a:	out    dx,eax
   14001131b:	test   ebx,0x7159f3e7
   140011321:	add    ebp,edx
   140011323:	(bad)  
   140011324:	rex.WX movabs ds:0xf878786369d3a4ff,rax
   14001132e:	fdivr  st,st(3)
   140011330:	out    dx,eax
   140011331:	mov    edi,0x6a6a607f
   140011336:	push   0xffffffffffffffcc
   140011338:	xor    al,0x4d
   14001133a:	or     eax,0x445d8d0d
   14001133f:	rex.XB shr r11d,cl
   140011342:	pop    rax
   140011343:	rex.WX add spl,bl
   140011346:	add    eax,0x91001190
   14001134b:	rex (bad) 
   14001134d:	int    0x9a
   14001134f:	xor    eax,0xfa3e8fdd
   140011354:	call   0x112fb726c
   140011359:	xchg   edi,eax
   14001135a:	mov    esi,0xc34dc007
   14001135f:	test   BYTE PTR [rcx],dl
   140011361:	in     al,dx
   140011362:	and    dl,dl
   140011364:	sbb    al,0xe2
   140011366:	(bad)  
   140011367:	sub    ebp,esi
   140011369:	outs   dx,DWORD PTR ds:[rsi]
   14001136a:	rex.RXB add al,0xb2
   14001136d:	jge    0x140011343
   14001136f:	pushf  
   140011370:	out    0x72,eax
   140011372:	mov    ecx,0x65d5d5d0
   140011377:	xchg   ebp,eax
   140011378:	movabs ds:0x3aa426b97e98591,eax
   140011381:	scas   eax,DWORD PTR es:[rdi]
   140011382:	mov    bh,0xb8
   140011384:	rex.WRB scas al,BYTE PTR es:[rdi]
   140011386:	or     ebp,0x4c
   140011389:	cmp    cl,BYTE PTR [rbp-0x5c]
   14001138c:	rex.B
   14001138d:	rex.WX
   14001138e:	rex.B xlat BYTE PTR ds:[rbx]
   140011390:	jne    0x14001135e
   140011392:	int    0xcd
   140011394:	(bad)  
   140011395:	jbe    0x14001140d
   140011397:	(bad)  
   140011398:	rex.WX fsub DWORD PTR [rcx]
   14001139b:	and    DWORD PTR [rdi+rdx*8],esp
   14001139e:	jno    0x140011375
   1400113a0:	stos   BYTE PTR es:[rdi],al
   1400113a1:	push   rbp
   1400113a2:	pop    rax
   1400113a3:	mov    bl,0x66
   1400113a5:	rex.WRB lods rax,QWORD PTR ds:[rsi]
   1400113a7:	stc    
   1400113a8:	scas   eax,DWORD PTR es:[rdi]
   1400113a9:	adc    dh,BYTE PTR ds:[rbx]
   1400113ac:	add    eax,0x84fe6927
   1400113b1:	(bad)  
   1400113b3:	push   0x57d50311
   1400113b8:	pushf  
   1400113b9:	popf   
   1400113ba:	(bad)  
   1400113bb:	mov    edi,0xd0091947
   1400113c0:	(bad)  
   1400113c1:	pop    rcx
   1400113c2:	sub    DWORD PTR [rdi+rbp*4+0x7c],esi
   1400113c6:	ds pop rdi
   1400113c8:	jns    0x1400113b3
   1400113ca:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400113cb:	xchg   edi,eax
   1400113cc:	sahf   
   1400113cd:	pushf  
   1400113ce:	sahf   
   1400113cf:	sahf   
   1400113d0:	(bad)  
   1400113d1:	movabs eax,ds:0x5401197e145c25d6
   1400113da:	ror    DWORD PTR [rax],1
   1400113dc:	add    BYTE PTR [rbx],al
   1400113de:	int    0x96
   1400113e0:	loop   0x140011409
   1400113e2:	and    al,BYTE PTR [rdx+0x3d401095]
   1400113e8:	jp     0x140011397
   1400113ea:	sub    BYTE PTR [rip+0xffffffffa00b26c1],dh        # 0xe00c3ab1
   1400113f0:	(bad)  
   1400113f1:	jb     0x14001139d
   1400113f3:	jmp    0x14001143a
   1400113f5:	and    al,0x93
   1400113f7:	xor    ebp,DWORD PTR [rax-0x73cf35ac]
   1400113fd:	or     dl,BYTE PTR [rbp+rdx*2-0x7b]
   140011401:	(bad)  
   140011402:	push   rsp
   140011403:	lods   al,BYTE PTR ds:[rsi]
   140011404:	and    BYTE PTR [rax],ah
   140011406:	std    
   140011407:	rex.WB movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011409:	add    eax,0xac4847f8
   14001140e:	rex.WRXB
   14001140f:	rex.B lahf 
   140011411:	and    BYTE PTR [rax-0x5b5d703c],sil
   140011418:	sbb    al,0x1a
   14001141a:	pop    rax
   14001141b:	xchg   ecx,eax
   14001141c:	mov    dl,0xfb
   14001141e:	rex.X movabs eax,ds:0x3930e5cb90c7d350
   140011428:	cmp    DWORD PTR [rcx-0x5bb63637],ecx
   14001142e:	shr    DWORD PTR [rcx+0x54],cl
   140011431:	sub    dl,BYTE PTR [rip+0xffffffffe9d9b364]        # 0x129dac79b
   140011437:	push   0xffffffffc8c1fa34
   14001143c:	enter  0x7c8,0xba
   140011440:	scas   al,BYTE PTR es:[rdi]
   140011441:	push   rbx
   140011442:	jbe    0x1400113e2
   140011444:	jge    0x12deb7061
   14001144a:	in     eax,dx
   14001144b:	in     eax,dx
   14001144c:	fnstcw WORD PTR [rbx-0x10681089]
   140011452:	mov    ebx,0xd73bbeef
   140011457:	scas   al,BYTE PTR es:[rdi]
   140011458:	pop    rbp
   140011459:	sbb    esp,DWORD PTR [rcx]
   14001145b:	pop    rdi
   14001145c:	int    0xeb
   14001145e:	cmc    
   14001145f:	movabs ds:0x9b23641f5b232e5c,al
   140011468:	int    0x5a
   14001146a:	sbb    eax,0xe7e7e67f
   14001146f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011470:	fidivr WORD PTR [rbx+rsi*8-0x33]
   140011474:	pop    rdi
   140011475:	lea    ecx,[rsp+rcx*4-0x6aa85564]
   14001147c:	add    al,0x96
   14001147e:	or     edi,DWORD PTR [rip+0xffffffffc9b7175f]        # 0x109b82be3
   140011484:	add    eax,0x594166a0
   140011489:	xchg   ebx,eax
   14001148a:	(bad)  
   14001148b:	jno    0x14001145c
   14001148d:	sahf   
   14001148e:	cmp    eax,0xe8fa3d77
   140011493:	movabs ds:0x9c940beab55aac2f,eax
   14001149c:	rex.XB scas al,BYTE PTR es:[rdi]
   14001149e:	push   rax
   14001149f:	sub    ebp,ebp
   1400114a1:	or     dh,BYTE PTR cs:[rdi+rdi*2]
   1400114a5:	fbld   TBYTE PTR [rdx+0x45d72f60]
   1400114ab:	push   0xffffffffc4886965
   1400114b0:	loopne 0x1400114a5
   1400114b2:	stc    
   1400114b3:	lods   al,BYTE PTR ds:[rsi]
   1400114b4:	call   FWORD PTR [rbp+0x2e5ca088]
   1400114ba:	movabs ds:0xc3c3592a54a02850,eax
   1400114c3:	mov    DWORD PTR [rdx],ecx
   1400114c5:	adc    DWORD PTR [rbx-0x145e8d40],0x9f3e7c3a
   1400114cf:	(bad)  
   1400114d0:	out    0x84,eax
   1400114d2:	xchg   ebx,eax
   1400114d3:	rex.WX movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   1400114d5:	push   rdx
   1400114d6:	cmp    bl,BYTE PTR [r13+0x2c2c2c6]
   1400114dd:	mov    dh,0xc6
   1400114e0:	(bad)  
   1400114e1:	rex.XB pushf 
   1400114e3:	(bad)  
   1400114e4:	rcr    ebp,1
   1400114e6:	fisttp QWORD PTR [rbp-0xbc14142]
   1400114ec:	div    dh
   1400114ee:	pop    rdx
   1400114ef:	rex.WRB movabs r8,0x4072806c569d9d9d
   1400114f9:	rex.WX movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   1400114fb:	xchg   edx,eax
   1400114fc:	xor    eax,0x7e170fa2
   140011501:	icebp  
   140011502:	cmp    edx,DWORD PTR [rsi-0x14287bef]
   140011508:	mov    ch,0x5c
   14001150a:	push   rcx
   14001150b:	mov    bh,0xdb
   14001150d:	lea    esp,[rbx-0x90170b9]
   140011513:	popf   
   140011514:	ja     0x1400114f4
   140011516:	jns    0x140011527
   140011518:	rex movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001151a:	pop    rsi
   14001151b:	jne    0x14001151b
   14001151d:	mov    edi,0x75f39093
   140011522:	rex.WX fst DWORD PTR [rsi+0x4b027565]
   140011529:	movsxd eax,DWORD PTR [rsi]
   14001152b:	sub    eax,edx
   14001152d:	rex.WX adc al,BYTE PTR [rcx-0x5517fe1a]
   140011534:	stos   BYTE PTR es:[rdi],al
   140011535:	clc    
   140011536:	or     al,0xa3
   140011538:	(bad)  
   14001153a:	and    ebp,edi
   14001153c:	std    
   14001153d:	push   rdi
   14001153e:	sub    ah,ch
   140011540:	(bad)  
   140011541:	(bad)  
   140011542:	(bad)  
   140011543:	jp     0x140011570
   140011545:	add    BYTE PTR [rax+0x73],al
   140011548:	or     BYTE PTR [rdx+0x64c99cdf],dl
   14001154e:	push   0x35
   140011550:	gs jg  0x14001150d
   140011553:	stos   BYTE PTR es:[rdi],al
   140011554:	stos   BYTE PTR es:[rdi],al
   140011555:	(bad)  
   140011556:	xor    BYTE PTR [rdx+0x64],bl
   140011559:	rex.RX adc r13b,BYTE PTR [rax]
   14001155c:	imul   ebp,DWORD PTR [rdi],0xffffff99
   14001155f:	rex.WR pop rdx
   140011561:	leave  
   140011562:	adc    al,0xa1
   140011564:	push   rax
   140011565:	or     BYTE PTR [rbx],al
   140011567:	add    eax,DWORD PTR [rbx]
   140011569:	rex.WRB (bad) 
   14001156b:	paddq  mm7,QWORD PTR [rsi]
   14001156e:	sbb    BYTE PTR [rax+0x2c],0x86
   140011572:	jae    0x14001155b
   140011574:	(bad)  
   140011575:	and    DWORD PTR [rbx-0x282caf37],edx
   14001157b:	rex.X xor al,0x1a
   14001157e:	cmp    eax,0xa5d2e97c
   140011583:	ud2    
   140011585:	test   DWORD PTR [rdx+0xe],eax
   140011588:	lea    ebp,[rsi]
   14001158a:	mov    ecx,0xba670cd4
   14001158f:	(bad)  [rsi-0x21]
   140011592:	imul   ch
   140011594:	fld    TBYTE PTR [rdi-0x4]
   140011597:	(bad)  
   140011598:	ja     0x140011558
   14001159a:	repz cmc 
   14001159c:	sbb    ebp,DWORD PTR [rsi-0x48]
   14001159f:	(bad)  
   1400115a0:	xor    eax,0x142604d
   1400115a5:	and    edx,esi
   1400115a7:	scas   eax,DWORD PTR es:[rdi]
   1400115a8:	rex.WB jmp 0x14001157a
   1400115ab:	iret   
   1400115ac:	iret   
   1400115ad:	movsxd esp,DWORD PTR [rsi+0x66]
   1400115b0:	data16 div ah
   1400115b3:	jmp    0x13480c58b
   1400115b8:	rol    DWORD PTR [rdi-0x39],1
   1400115bb:	repnz stc 
   1400115bd:	cld    
   1400115be:	and    bl,BYTE PTR [rax+0x53]
   1400115c1:	sbb    al,0x9a
   1400115c3:	jge    0x140011640
   1400115c5:	(bad)  
   1400115c7:	rex.WXB add rax,0xffffffff917ffd4b
   1400115cd:	add    BYTE PTR [rdx+rdi*1],dl
   1400115d0:	jle    0x1400115d1
   1400115d2:	std    
   1400115d3:	neg    edi
   1400115d5:	repz clc 
   1400115d7:	jrcxz  0x140011568
   1400115d9:	mov    edi,0xbb972e5a
   1400115de:	retf   
   1400115df:	in     eax,0xf2
   1400115e1:	xchg   edx,eax
   1400115e2:	adc    DWORD PTR [rdx+0x75c57eed],eax
   1400115e8:	jno    0x140011609
   1400115ea:	(bad)  
   1400115eb:	and    al,BYTE PTR cs:[rsi+rcx*2]
   1400115ef:	rcr    ah,cl
   1400115f1:	mov    WORD PTR [rdi],ss
   1400115f3:	test   esi,ebx
   1400115f5:	cs mov dh,0x60
   1400115f8:	rex.RXB adc al,0x94
   1400115fb:	sbb    BYTE PTR [rsp+riz*4+0x15],al
   1400115ff:	mov    DWORD PTR [rsp+rbp*1-0xd],eax
   140011603:	fwait
   140011604:	(bad)  
   140011605:	rex.WX leave 
   140011607:	(bad)  
   140011608:	out    0xf7,eax
   14001160a:	pop    rdi
   14001160b:	add    DWORD PTR cs:[rax+0x142851eb],edx
   140011612:	lods   al,BYTE PTR ds:[rsi]
   140011613:	add    DWORD PTR [rax+rdi*2-0x75],ebx
   140011617:	add    ebp,DWORD PTR [rip+0x4d34589c]        # 0x18d356eb9
   14001161d:	rex.XB
   14001161e:	cs xchg edi,eax
   140011620:	rex.XB sub al,0x16
   140011623:	mov    bl,0xc6
   140011625:	jp     0x140011613
   140011627:	jmp    0x140011614
   140011629:	cmp    BYTE PTR [r14+r8*2],bl
   14001162d:	sub    BYTE PTR [rdx+rax*2],dl
   140011630:	xor    BYTE PTR [rax],bl
   140011632:	and    BYTE PTR [rax],r10b
   140011635:	mov    al,0xd2
   140011637:	(bad)  
   140011638:	sub    esi,ebx
   14001163a:	(bad)  
   14001163b:	fwait
   14001163c:	ja     0x140011667
   14001163e:	xchg   esi,eax
   14001163f:	and    BYTE PTR [rsi],bh
   140011641:	stos   DWORD PTR es:[rdi],eax
   140011642:	rex.W pop rsi
   140011644:	xor    al,0xb2
   140011646:	jae    0x140011672
   140011648:	xchg   ebp,eax
   140011649:	ret    0xfdfe
   14001164c:	sti    
   14001164d:	jmp    FWORD PTR [rdi-0x5b]
   140011650:	push   rdx
   140011651:	jno    0x1400115f4
   140011653:	adc    DWORD PTR [rax+0x26],esp
   140011656:	movabs eax,ds:0xd001922eb65c8516
   14001165f:	rex.WR (bad) 
   140011661:	ror    BYTE PTR [rdx],0x89
   140011664:	(bad)  
   140011665:	fld    DWORD PTR [rax+riz*2]
   140011668:	sbb    BYTE PTR [rsi-0x54a952af],al
   14001166e:	and    BYTE PTR [rdx+0x31],0xa4
   140011672:	(bad)  
   140011673:	push   rsp
   140011674:	(bad)  
   140011675:	ficomp DWORD PTR [rbx]
   140011677:	rex.WRB (bad) 
   140011679:	rex.WRXB in eax,dx
   14001167b:	test   ebp,edx
   14001167d:	rol    BYTE PTR [rax-0x46505337],cl
   140011683:	or     DWORD PTR [rip+0x2ba8a7c6],ecx        # 0x16ba9be4f
   140011689:	stc    
   14001168a:	rex.RX mov esp,0xdd469f0d
   140011690:	leave  
   140011691:	xlat   BYTE PTR ds:[rbx]
   140011692:	sti    
   140011693:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011694:	push   rbx
   140011695:	scas   eax,DWORD PTR es:[rdi]
   140011696:	cmp    al,0x8a
   140011698:	or     DWORD PTR [rax+0x56ad5539],edx
   14001169e:	sub    eax,0x48913edf
   1400116a3:	and    BYTE PTR [rdi+0x2c58a1cb],dl
   1400116a9:	push   0xfffffffffffffff1
   1400116ab:	js     0x1400116a9
   1400116ad:	je     0x1400116d1
   1400116af:	xchg   ecx,eax
   1400116b0:	sbb    BYTE PTR [rdi+0x58],bl
   1400116b3:	pop    rax
   1400116b4:	cwde   
   1400116b5:	(bad)  
   1400116b6:	xor    al,0x2d
   1400116b8:	test   DWORD PTR [rdx+0x10d107e0],ebx
   1400116be:	jl     0x14001173d
   1400116c0:	fnstsw WORD PTR [rdx-0x941e48b]
   1400116c6:	mov    ch,0xaf
   1400116c8:	jge    0x1400116c3
   1400116ca:	(bad)  
   1400116cb:	sbb    ebp,DWORD PTR [rdi-0x24]
   1400116ce:	mov    al,0x79
   1400116d0:	repz out 0x35,al
   1400116d3:	popf   
   1400116d4:	popf   
   1400116d5:	popf   
   1400116d6:	xchg   esi,eax
   1400116d7:	fstp   DWORD PTR [rax-0x49]
   1400116da:	sbb    dl,BYTE PTR [rax+0x2c]
   1400116dd:	(bad)  
   1400116de:	mov    cl,0xb8
   1400116e0:	mov    eax,0x59d9d988
   1400116e5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400116e6:	shr    ecx,cl
   1400116e8:	(bad)  
   1400116e9:	call   0xcf8affd6
   1400116ee:	(bad)  
   1400116ef:	(bad)  
   1400116f0:	clc    
   1400116f1:	std    
   1400116f2:	mov    DWORD PTR [rcx-0x60cf077],ecx
   1400116f8:	cld    
   1400116f9:	add    bl,BYTE PTR [rdx]
   1400116fb:	mov    esi,0x316c1739
   140011700:	rol    bh,1
   140011702:	test   DWORD PTR [rbp-0x132e8184],ebx
   140011708:	out    0xc2,eax
   14001170a:	pop    rdi
   14001170b:	add    eax,0x6db6d950
   140011710:	fwait
   140011711:	out    dx,eax
   140011712:	movabs eax,ds:0xfeefbbeef27a1e87
   14001171b:	rex.RXB pop r13
   14001171d:	xlat   BYTE PTR ds:[rbx]
   14001171e:	mov    ebx,0x256a92c9
   140011723:	cld    
   140011724:	sbb    al,0x76
   140011726:	and    BYTE PTR [rbx],r15b
   140011729:	xchg   edi,eax
   14001172a:	cvtps2pd xmm1,xmm2
   14001172d:	(bad)  
   14001172e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001172f:	icebp  
   140011730:	mov    ecx,0xb3615f99
   140011735:	and    DWORD PTR [rcx+0x64170596],ecx
   14001173b:	push   rcx
   14001173c:	rex.W fsubr QWORD PTR [rsi+0x37]
   140011740:	cld    
   140011741:	(bad)  
   140011742:	fisub  DWORD PTR [rax-0x2fbd2360]
   140011748:	jmp    0x1400116db
   14001174a:	cld    
   14001174b:	push   rdx
   14001174c:	test   eax,0x672e5c84
   140011751:	or     DWORD PTR [rdx-0x184d1308],ebx
   140011757:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011758:	rcr    DWORD PTR [rax+0x49],0x91
   14001175c:	enter  0x9116,0xc
   140011760:	call   0xec5d71a0
   140011765:	gs in  eax,0x26
   140011768:	xchg   ebx,eax
   140011769:	rex.WB jmp 0x1400117a7
   14001176c:	and    BYTE PTR [rbx],cl
   14001176e:	shr    bh,1
   140011770:	mul    DWORD PTR [rbx]
   140011772:	xchg   ebx,eax
   140011773:	leave  
   140011774:	or     al,0xb9
   140011776:	fucomp st(6)
   140011778:	mov    ecx,0xdfd7ebf5
   14001177d:	mov    dh,0x76
   14001177f:	in     eax,dx
   140011780:	fisubr DWORD PTR [rsi-0x61]
   140011783:	iret   
   140011784:	out    0x2a,eax
   140011786:	adc    al,0xa
   140011788:	shl    BYTE PTR [rbp-0x23],1
   14001178b:	pop    rdx
   14001178c:	sub    al,ch
   14001178e:	rex.W out dx,al
   140011790:	rex.XB and BYTE PTR [r8],dl
   140011793:	mov    al,0xac
   140011795:	xchg   edx,eax
   140011796:	push   0xffffffffe7f97a34
   14001179b:	(bad)  
   14001179c:	(bad)  
   14001179d:	stc    
   14001179e:	mov    bl,0xa7
   1400117a0:	rex.WRX popf 
   1400117a2:	cmp    cl,BYTE PTR [rsi+0x26e7f686]
   1400117a8:	ds ja  0x1400117ac
   1400117ab:	(bad)  
   1400117ac:	cmc    
   1400117ad:	push   rsi
   1400117ae:	out    dx,al
   1400117af:	sub    DWORD PTR [rdx],0xddae8f39
   1400117b5:	(bad)  
   1400117b6:	retf   
   1400117b7:	or     BYTE PTR es:[rbx-0x2231d0e9],0x72
   1400117bf:	retf   
   1400117c0:	sub    eax,0xf2e5cbba
   1400117c5:	push   rbx
   1400117c6:	and    al,0xd5
   1400117c8:	xor    al,0xd
   1400117ca:	(bad)  
   1400117cb:	(bad)  
   1400117cc:	retf   0xda6b
   1400117cf:	sahf   
   1400117d0:	(bad)  
   1400117d1:	add    eax,0xb65f026b
   1400117d6:	(bad)  
   1400117d7:	add    ah,bh
   1400117d9:	rex.XB icebp 
   1400117db:	(bad)  
   1400117dc:	adc    esi,DWORD PTR [rax]
   1400117de:	(bad)  
   1400117df:	pop    rsi
   1400117e0:	jns    0x1400117a7
   1400117e2:	(bad)  
   1400117e4:	mov    ah,BYTE PTR [rbx+rbx*1+0x30608186]
   1400117eb:	mov    BYTE PTR [rcx+0x75740181],al
   1400117f1:	jne    0x1400117b4
   1400117f3:	jmp    0x1400117ea
   1400117f5:	pop    rdx
   1400117f6:	(bad)
   1400117fa:	xchg   ebx,eax
   1400117fb:	xchg   ebx,eax
   1400117fc:	xchg   ebx,eax
   1400117fd:	mov    ch,al
   1400117ff:	(bad)  
   140011800:	(bad)  
   140011801:	ficomp WORD PTR [rbp-0x37]
   140011804:	out    0xf3,eax
   140011806:	(bad)  
   140011807:	xchg   DWORD PTR [rsi+0x264cde86],eax
   14001180d:	xchg   ebx,eax
   14001180e:	xchg   ebx,eax
   14001180f:	test   al,0x9
   140011811:	(bad)  
   140011812:	cmc    
   140011813:	xchg   DWORD PTR [rdi+0x7777a697],esp
   140011819:	ja     0x140011812
   14001181b:	fdiv   QWORD PTR [rdi-0x21]
   14001181e:	jge    0x140011897
   140011820:	cmp    al,0xf4
   140011822:	rol    BYTE PTR [rbx+0x77],1
   140011825:	outs   dx,BYTE PTR ds:[rsi]
   140011826:	fdivr  QWORD PTR [rax-0x5dc1bbcf]
   14001182c:	(bad)  
   14001182d:	jrcxz  0x1400117e0
   14001182f:	es cli 
   140011831:	sub    BYTE PTR [rdx+rcx*1],dl
   140011834:	push   rsi
   140011835:	loopne 0x140011867
   140011837:	popf   
   140011838:	movsxd r14,DWORD PTR [rsp+r14*2+0x74]
   14001183d:	call   0xef94e226
   140011842:	mov    WORD PTR [rdi+0x3511ff8f],cs
   140011848:	mov    edi,0x88b8989e
   14001184d:	lods   ax,WORD PTR ds:[rsi]
   14001184f:	iret   
   140011850:	or     DWORD PTR [rax-0x2c],eax
   140011853:	hlt    
   140011854:	mov    ah,0x90
   140011856:	ror    BYTE PTR [rbx-0x6029bfb7],0xbb
   14001185d:	movsxd eax,edi
   14001185f:	mov    es,eax
   140011861:	push   rbx
   140011862:	rex.WRXB cmp rax,0x3d3daff5
   140011868:	cmp    eax,0x5a69a37f
   14001186d:	sar    DWORD PTR [rdi+rax*1+0x2b7f34ed],cl
   140011874:	or     esp,DWORD PTR [rax+0x39]
   140011877:	out    0x88,eax
   140011879:	in     eax,0x85
   14001187b:	imul   ebp,DWORD PTR [rsi+rdx*4-0x17db4408],0x92269cd4
   140011886:	add    bl,BYTE PTR [rcx+0x12]
   140011889:	mov    esp,0x6090b8bc
   14001188e:	jp     0x14001184d
   140011890:	faddp  st(6),st
   140011892:	cld    
   140011893:	or     dh,BYTE PTR [rbp+0x52]
   140011896:	enter  0x72e5,0xd0
   14001189a:	xor    al,0xcd
   14001189c:	pop    rdx
   14001189d:	mov    QWORD PTR [rax-0x48ab1413],rcx
   1400118a4:	rex.X movabs eax,ds:0x3af8008edf54560
   1400118ae:	lea    eax,[rax]
   1400118b0:	movs   DWORD PTR es:[rdi],DWORD PTR gs:[rsi]
   1400118b2:	push   rdx
   1400118b3:	mov    cl,0x12
   1400118b5:	sub    DWORD PTR [rdx-0x4f],0xffffffae
   1400118b9:	xor    dh,BYTE PTR [rdi+0x2d]
   1400118bc:	cmp    ebx,DWORD PTR [rdi+0x78]
   1400118bf:	loope  0x140011846
   1400118c1:	push   QWORD PTR [rsi]
   1400118c3:	xor    eax,0xf7bc9535
   1400118c8:	fidivr WORD PTR [rbx-0x49]
   1400118cb:	in     eax,dx
   1400118cc:	fdiv   DWORD PTR [rcx-0x4110501d]
   1400118d2:	sti    
   1400118d3:	out    dx,al
   1400118d4:	ins    DWORD PTR es:[rdi],dx
   1400118d5:	add    eax,DWORD PTR [rbx]
   1400118d7:	add    ebx,DWORD PTR [rbx-0x5]
   1400118da:	sti    
   1400118db:	sti    
   1400118dc:	(bad)  
   1400118dd:	rex.X movabs eax,ds:0xf52341328c088790
   1400118e7:	out    0xc6,al
   1400118e9:	mov    DWORD PTR [rcx+0x2f8bec89],ecx
   1400118ef:	mov    esi,0x87c3fdf8
   1400118f4:	movsx  ecx,WORD PTR [rcx-0x4d8c0f66]
   1400118fb:	xchg   edi,eax
   1400118fc:	cdq    
   1400118fd:	std    
   1400118fe:	xor    dh,BYTE PTR [rdx]
   140011900:	loopne 0x140011884
   140011902:	scas   al,BYTE PTR es:[rdi]
   140011903:	mov    al,0xf2
   140011905:	je     0x1400118a3
   140011907:	xchg   esp,eax
   140011908:	or     BYTE PTR [rdi-0x3f6d25e6],dh
   14001190e:	rex.WX sub al,0x0
   140011911:	mov    bl,0xd9
   140011913:	xchg   DWORD PTR [rax+rax*2],esi
   140011916:	in     eax,dx
   140011917:	(bad)  
   140011918:	cmc    
   140011919:	iret   
   14001191a:	add    ebp,ecx
   14001191c:	add    eax,DWORD PTR [rdx-0x12b715cc]
   140011922:	lock jl 0x14001198b
   140011925:	push   rsp
   140011926:	rcr    BYTE PTR [rax],cl
   140011928:	hlt    
   140011929:	xchg   edx,eax
   14001192a:	imul   ecx,DWORD PTR [rdi*1-0x1280b8e6],0xeee8b5da
   140011935:	out    dx,al
   140011936:	outs   dx,BYTE PTR ds:[rsi]
   140011937:	sbb    dh,BYTE PTR [rdx+riz*4+0x3e]
   14001193b:	movabs al,ds:0x8a34688f3f9fce26
   140011944:	rex.X movabs eax,ds:0xaf0b85c2fe5c7f40
   14001194e:	rex.WRXB
   14001194f:	rex.WRX
   140011950:	rex.WRX sahf 
   140011952:	rex.RX
   140011953:	rex.WRB sub BYTE PTR [rip+0xffffffff90cc2468],r15b        # 0xd0cd3dc2
   14001195a:	xchg   dh,dh
   14001195c:	in     al,dx
   14001195d:	fnstsw WORD PTR [rbx-0x7205409]
   140011963:	(bad)  
   140011964:	(bad)  
   140011965:	out    dx,al
   140011966:	mov    ecx,0x22ebbaee
   14001196b:	in     al,0x9b
   14001196d:	xchg   ecx,eax
   14001196e:	lahf   
   14001196f:	rex.WX (bad) 
   140011971:	lahf   
   140011972:	iret   
   140011973:	out    0x31,eax
   140011975:	(bad)  
   140011976:	(bad)  
   140011977:	xchg   DWORD PTR [rcx+0x122429a9],ebp
   14001197d:	mov    esp,eax
   14001197f:	mov    ecx,0x777ee773
   140011984:	(bad)  
   140011985:	(bad)  
   140011986:	test   eax,0x3ea8f503
   14001198b:	xor    eax,0x2f2d71cd
   140011990:	adc    al,BYTE PTR [rax]
   140011992:	sub    eax,0x66a5fb06
   140011997:	rex.RB pop r10
   140011999:	(bad)  
   14001199a:	xchg   ebx,eax
   14001199b:	jg     0x140011a15
   14001199d:	fs mov bh,0xfa
   1400119a0:	enter  0x8f23,0x3c
   1400119a4:	fst    st(5)
   1400119a6:	(bad)  
   1400119a7:	cmc    
   1400119a8:	(bad)  
   1400119a9:	xor    al,0x93
   1400119ab:	or     al,0x60
   1400119ad:	(bad)  
   1400119ae:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400119af:	jbe    0x1400119c1
   1400119b1:	mov    DWORD PTR [rax+0x25],esp
   1400119b4:	rex.X (bad) 
   1400119b6:	sahf   
   1400119b7:	ret    
   1400119b8:	and    ebx,esi
   1400119ba:	xlat   BYTE PTR ds:[rbx]
   1400119bb:	sub    eax,edi
   1400119bd:	rex.WX and rsp,QWORD PTR [rsi]
   1400119c0:	jae    0x1400119ad
   1400119c2:	cmp    ah,0x7e
   1400119c5:	(bad)  
   1400119c6:	(bad)  
   1400119c7:	fs rex.RXB add r11b,r12b
   1400119cb:	lods   eax,DWORD PTR ds:[rsi]
   1400119cc:	movabs al,ds:0x37777741e3c79138
   1400119d5:	mov    edx,0xa951bbbb
   1400119da:	push   rsp
   1400119db:	lods   al,BYTE PTR ds:[rsi]
   1400119dc:	(bad)  
   1400119dd:	sbb    eax,0xb029df32
   1400119e2:	sub    BYTE PTR [rdx+0x16e97523],dl
   1400119e8:	movsxd eax,DWORD PTR [rcx]
   1400119ea:	mov    dl,0x67
   1400119ec:	movabs ds:0xf9cdc1ebc677d3ba,eax
   1400119f5:	(bad)  
   1400119f7:	fimul  WORD PTR [rip+0x77eefddf]        # 0x1b7f017dc
   1400119fd:	jmp    FWORD PTR [rcx-0x21]
   140011a00:	mov    esi,0x703fdf7d
   140011a05:	loopne 0x1400119c7
   140011a07:	(bad)  
   140011a08:	(bad)  
   140011a09:	sbb    al,0x38
   140011a0b:	jo     0x1400119ff
   140011a0d:	vmaxsd xmm14,xmm13,xmm4
   140011a11:	cli    
   140011a12:	std    
   140011a13:	(bad)  
   140011a14:	loopne 0x140011a03
   140011a16:	mov    bh,0xdf
   140011a18:	jle    0x1400119f7
   140011a1a:	imul   ch
   140011a1c:	fld    TBYTE PTR [rdi-0x41]
   140011a1f:	repz (bad) 
   140011a21:	cmp    esi,DWORD PTR [rdi-0x6432194]
   140011a27:	cli    
   140011a28:	xor    eax,0x3f5cd66b
   140011a2d:	cmp    BYTE PTR [rax],bh
   140011a2f:	call   0x167146769
   140011a34:	rex.WRXB sahf 
   140011a36:	int3   
   140011a37:	in     al,dx
   140011a38:	(bad)  [rdi-0x7038f811]
   140011a3e:	(bad)  
   140011a3f:	(bad)  
   140011a40:	add    ah,BYTE PTR [rax+0x44dafea7]
   140011a46:	loop   0x140011a2f
   140011a48:	or     esi,DWORD PTR [rsp+r8*1]
   140011a4c:	pop    rcx
   140011a4d:	adc    DWORD PTR [rsi+0x6201b93],ecx
   140011a53:	or     BYTE PTR [rcx+0x59cec1ac],ch
   140011a59:	push   rsi
   140011a5a:	imul   eax,ecx,0x4a
   140011a5d:	(bad)  
   140011a5e:	add    BYTE PTR [rbp+0x45],ah
   140011a61:	push   rcx
   140011a62:	ror    BYTE PTR [rdx+0x436a44a2],cl
   140011a68:	jge    0x140011a83
   140011a6a:	rex.WRB
   140011a6b:	rex.B
   140011a6c:	out    dx,al
   140011a6e:	xor    edx,edx
   140011a70:	rex.WXB
   140011a71:	sub    eax,DWORD PTR es:[rcx+0x43e9618]
   140011a78:	xor    al,bl
   140011a7a:	push   0x3ebd5ae4
   140011a7f:	out    dx,eax
   140011a80:	pop    rsi
   140011a81:	rex.RXB
   140011a82:	rex.RXB xchg DWORD PTR [rip+0xffffffffde452720],r14d        # 0x11e4641a9
   140011a89:	imul   ecx,DWORD PTR [rax-0x1b],0xf9893264
   140011a90:	stc    
   140011a91:	jns    0x140011a57
   140011a93:	jrcxz  0x140011b06
   140011a95:	retf   
   140011a96:	pop    rsp
   140011a97:	jae    0x140011a52
   140011a99:	pop    rsp
   140011a9a:	call   0xef820387
   140011a9f:	xchg   BYTE PTR [rdi-0x140a053],ch
   140011aa5:	scas   eax,DWORD PTR es:[rdi]
   140011aa6:	jrcxz  0x140011a99
   140011aa8:	clc    
   140011aa9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011aaa:	retf   
   140011aab:	xchg   edi,eax
   140011aac:	(bad)  
   140011aad:	(bad)  
   140011aae:	or     eax,DWORD PTR [rbp+0x2a54ba42]
   140011ab4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011ab5:	push   rdi
   140011ab6:	scas   eax,DWORD PTR es:[rdi]
   140011ab7:	pop    rsi
   140011ab8:	sbb    eax,0x1b86e1be
   140011abd:	(bad)  
   140011abe:	fbstp  TBYTE PTR [rbp-0x29]
   140011ac1:	pop    rbp
   140011ac2:	(bad)  
   140011ac3:	fbstp  TBYTE PTR [rbp-0x29]
   140011ac6:	pop    rbp
   140011ac7:	pop    rbx
   140011ac8:	sub    BYTE PTR [rbx-0x70],dh
   140011acb:	add    al,0x9f
   140011acd:	(bad)  
   140011ace:	adc    ebp,DWORD PTR [rcx-0x44]
   140011ad1:	mov    edi,0xd1812244
   140011ad6:	rcl    ecx,1
   140011ad8:	icebp  
   140011ad9:	leave  
   140011ada:	leave  
   140011adb:	leave  
   140011adc:	(bad)  
   140011add:	mov    WORD PTR [rsp+rcx*4-0x2c58b2e4],cs
   140011ae4:	xor    esi,esi
   140011ae6:	ror    BYTE PTR [rbx+0x68],cl
   140011ae9:	add    al,0xf3
   140011aeb:	rex.R (bad) 
   140011aed:	pop    rdi
   140011aee:	(bad)  
   140011aef:	cli    
   140011af0:	retf   
   140011af1:	adc    edx,edi
   140011af3:	and    eax,0xef77bfc2
   140011af8:	fisubr WORD PTR [rdi-0xc462312]
   140011afe:	(bad)  
   140011aff:	sub    al,bl
   140011b01:	addr32 div ecx
   140011b04:	mov    bl,BYTE PTR [rdi]
   140011b06:	ds jge 0x140011ab9
   140011b09:	cmp    al,0x2a
   140011b0b:	sub    eax,0x79e2fc7e
   140011b10:	add    BYTE PTR [rsi-0x69c8d094],dl
   140011b16:	mov    al,0xb
   140011b19:	loopne 0x140011b2c
   140011b1b:	rcl    edx,0x77
   140011b1e:	rex.B
   140011b1f:	rex.R rol BYTE PTR [rdi+0x16],0x12
   140011b24:	movsxd ecx,DWORD PTR [rdx+riz*1]
   140011b27:	sbb    eax,esi
   140011b29:	movsxd ebp,DWORD PTR [rsi-0x49]
   140011b2c:	fcmovne st,st(2)
   140011b2e:	out    0x34,al
   140011b30:	or     al,0xc3
   140011b32:	rex.WX cld 
   140011b34:	movabs ds:0xe5c80d6a6f4c87ef,al
   140011b3d:	jb     0x140011b27
   140011b3f:	(bad)  
   140011b40:	(bad)  
   140011b41:	xchg   edx,eax
   140011b42:	pop    rdx
   140011b43:	rex.WRX adc al,0x93
   140011b46:	movabs al,ds:0x113800892972001c
   140011b4f:	nop
   140011b50:	xchg   ebp,eax
   140011b51:	push   rax
   140011b52:	sub    dl,BYTE PTR [rbp-0x391c8e50]
   140011b58:	fistp  DWORD PTR [rsi+0x7f89e278]
   140011b5e:	(bad)  
   140011b5f:	jmp    0x16fbb9ab3
   140011b64:	sbb    cl,BYTE PTR [rbp+0x152a56ce]
   140011b6a:	push   rdi
   140011b6b:	cs xchg edi,eax
   140011b6d:	ror    DWORD PTR [rdi+0x7232391c],cl
   140011b73:	in     al,0xc8
   140011b75:	xchg   ecx,eax
   140011b76:	movabs eax,ds:0x183060ee67ecfd9f
   140011b7f:	mov    eax,0xfedbb6ed
   140011b84:	(bad)  
   140011b85:	out    0x9b,al
   140011b87:	outs   dx,DWORD PTR ds:[rsi]
   140011b88:	ficomp WORD PTR [rsi]
   140011b8a:	or     BYTE PTR [rsi+rdx*8],al
   140011b8d:	sbb    eax,0xddf47a3d
   140011b92:	xchg   ebx,eax
   140011b93:	(bad)  
   140011b94:	rex.WRXB (bad) 
   140011b96:	add    edx,eax
   140011b98:	leave  
   140011b99:	(bad)  
   140011b9a:	outs   dx,DWORD PTR ds:[rsi]
   140011b9b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011b9c:	(bad)
   140011b9f:	sub    eax,0xf2020b
   140011ba4:	and    DWORD PTR [rdi],esp
   140011ba6:	add    DWORD PTR [rdx+0x49],esi
   140011ba9:	test   eax,0xa40cb72c
   140011bae:	pop    rax
   140011baf:	(bad)  
   140011bb0:	ja     0x140011c12
   140011bb2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011bb3:	adc    al,0x45
   140011bb5:	fld    st(0)
   140011bb7:	std    
   140011bb8:	jg     0x140011bd4
   140011bba:	adc    al,0x94
   140011bbc:	(bad)  
   140011bbd:	push   0x1f6a00b2
   140011bc2:	fwait
   140011bc3:	imul   esi,DWORD PTR [rbp+0x16],0x86c20ca2
   140011bca:	sti    
   140011bcb:	shr    al,1
   140011bcd:	pop    rcx
   140011bce:	(bad)  
   140011bcf:	(bad)  
   140011bd0:	xchg   DWORD PTR [rbp-0x6054a48a],ebp
   140011bd6:	mov    eax,0x37799b5a
   140011bdb:	(bad)  
   140011bdc:	(bad)  
   140011bdd:	movsxd esp,DWORD PTR [rdx+0x62]
   140011be0:	add    ch,BYTE PTR [rcx-0x75dd35ac]
   140011be6:	(bad)  
   140011be7:	xor    BYTE PTR [rax+0x608c3870],cl
   140011bed:	xor    BYTE PTR [rax-0x717bd7b0],cl
   140011bf3:	mov    cs,WORD PTR [rsi]
   140011bf5:	xchg   edi,eax
   140011bf6:	iret   
   140011bf7:	out    0xb,eax
   140011bf9:	add    DWORD PTR [rax+0x5ecd9b3e],edi
   140011bff:	pop    rdi
   140011c00:	out    dx,eax
   140011c01:	cmc    
   140011c02:	addr32 mov eax,0xc3c2eedd
   140011c08:	(bad)  
   140011c0a:	in     al,dx
   140011c0b:	jmp    0x140011bf8
   140011c0d:	jmp    0x140011c02
   140011c0f:	add    al,0x83
   140011c11:	rex.B js 0x140011bd1
   140011c14:	pop    rsi
   140011c15:	retf   
   140011c16:	(bad)  
   140011c17:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011c18:	in     al,0x90
   140011c1a:	(bad)
   140011c1d:	rex.WR
   140011c1e:	rex.WRX
   140011c1f:	rex.WRX and r11b,BYTE PTR [rdx]
   140011c22:	lea    esp,[rdx]
   140011c24:	(bad)  
   140011c25:	(bad)  
   140011c26:	setge  BYTE PTR [rip+0xffffffffd4c0f67b]        # 0x114c212a8
   140011c2d:	(bad)  
   140011c2e:	(bad)  
   140011c2f:	rex.RXB xchg BYTE PTR [r9+0x64],r12b
   140011c33:	ror    BYTE PTR [rax],1
   140011c35:	mov    ah,0x14
   140011c37:	mov    al,0x34
   140011c39:	(bad)  
   140011c3a:	outs   dx,DWORD PTR ds:[rsi]
   140011c3b:	xchg   edi,eax
   140011c3c:	shl    DWORD PTR [rdi],1
   140011c3e:	cli    
   140011c3f:	mul    BYTE PTR [rdx-0xfdb2081]
   140011c45:	in     al,dx
   140011c46:	std    
   140011c47:	push   rsi
   140011c48:	imul   ebp
   140011c4a:	(bad)  [rdi-0x29]
   140011c4d:	sbb    eax,0xdbf1dc77
   140011c52:	(bad)  
   140011c54:	sbb    BYTE PTR [rbx+rbx*8],dl
   140011c57:	retf   0x57e9
   140011c5a:	pop    rsp
   140011c5b:	out    0xd6,eax
   140011c5d:	adc    edi,edi
   140011c5f:	xchg   ebp,eax
   140011c60:	xchg   ebp,eax
   140011c61:	adc    DWORD PTR [rdi+0x333c32f3],ecx
   140011c67:	iret   
   140011c68:	mov    es,WORD PTR [rax+rdi*8+0x39]
   140011c6c:	push   rsi
   140011c6d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011c6e:	ins    DWORD PTR es:[rdi],dx
   140011c6f:	pop    rdx
   140011c70:	sbb    bh,al
   140011c72:	cmp    ah,BYTE PTR [rbp+0x156f35f]
   140011c78:	cli    
   140011c79:	pop    rsi
   140011c7a:	mov    eax,0x81922cff
   140011c7f:	sbb    eax,0x11d59039
   140011c84:	or     BYTE PTR [rdx+rbx*4],al
   140011c87:	fmul   QWORD PTR [rdi]
   140011c89:	rex.WRB rcl QWORD PTR [r8-0x326e9933],cl
   140011c90:	xchg   cx,ax
   140011c92:	leave  
   140011c93:	movabs al,fs:0x91faac7a7a7a0a28
   140011c9d:	push   rbp
   140011c9e:	push   r9
   140011ca0:	jns    0x140011cd0
   140011ca2:	hlt    
   140011ca3:	je     0x140011c41
   140011ca5:	(bad)  
   140011ca6:	sbb    edi,DWORD PTR [rcx-0x653bbfe]
   140011cac:	jl     0x140011ccc
   140011cae:	pop    rbx
   140011caf:	mov    dh,0x6c
   140011cb1:	fprem1 
   140011cb3:	(bad)  
   140011cb4:	adc    ecx,DWORD PTR [rdi-0x4]
   140011cb7:	(bad)  
   140011cb8:	(bad)  
   140011cb9:	lahf   
   140011cba:	jl     0x140011cae
   140011cbc:	jnp    0x140011c49
   140011cbe:	mov    ecx,DWORD PTR [rbx-0x1d56e5e6]
   140011cc4:	(bad)  
   140011cc5:	push   0xffffffffffffffb5
   140011cc7:	push   0x68
   140011cc9:	(bad)  
   140011cca:	data16 (bad) 
   140011ccc:	cmp    esi,DWORD PTR [rsi-0x14]
   140011ccf:	ret    0x63b1
   140011cd2:	(bad)  
   140011cd3:	ds scas al,BYTE PTR es:[rdi]
   140011cd5:	push   rdi
   140011cd7:	(bad)  
   140011cd8:	(bad)  
   140011cd9:	test   BYTE PTR [rdi-0x2cae8895],bl
   140011cdf:	mov    eax,DWORD PTR [rax+rax*1]
   140011ce2:	sub    al,0xd
   140011ce4:	adc    BYTE PTR [rdx+0x3245f9a],cl
   140011cea:	xor    DWORD PTR [rax],ebp
   140011cec:	rex.W (bad) 
   140011cee:	add    eax,edx
   140011cf0:	(bad)  
   140011cf1:	add    al,0x56
   140011cf3:	add    BYTE PTR [rdx-0x4cb75b5e],r9b
   140011cfa:	mov    eax,DWORD PTR [rcx-0x41]
   140011cfd:	fidiv  DWORD PTR [rsi-0x5c99a13f]
   140011d03:	ror    DWORD PTR [rsi],cl
   140011d05:	mov    ch,0xa1
   140011d07:	sbb    eax,DWORD PTR [rsi+0x1b1bb561]
   140011d0d:	xchg   BYTE PTR [rcx-0x173c790],al
   140011d13:	(bad)  
   140011d14:	jle    0x140011d01
   140011d16:	pop    fs
   140011d18:	mov    dl,0xe5
   140011d1a:	jb     0x140011d35
   140011d1c:	movabs ds:0x3eb6431b1b18a3a3,eax
   140011d25:	ret    0x9d0c
   140011d28:	rex.WXB cmp r10,rsp
   140011d2b:	fs and eax,edx
   140011d2e:	(bad)  
   140011d2f:	scas   eax,DWORD PTR es:[rdi]
   140011d30:	jmp    0x140011dac
   140011d32:	jge    0x140011ce2
   140011d34:	sti    
   140011d35:	(bad)  
   140011d36:	test   bl,al
   140011d38:	(bad)  
   140011d39:	or     al,0xc
   140011d3b:	or     al,0xb8
   140011d3d:	cmp    bh,BYTE PTR [rdx]
   140011d3f:	cmp    al,BYTE PTR [rdx-0x55]
   140011d42:	push   rdi
   140011d43:	scas   eax,DWORD PTR es:[rdi]
   140011d44:	rex.RX xor BYTE PTR [rax],r11b
   140011d47:	test   bh,bl
   140011d49:	out    dx,eax
   140011d4a:	xchg   DWORD PTR [rcx+0x18],esp
   140011d4d:	rex.WRB int 0x79
   140011d50:	xchg   edi,eax
   140011d51:	cs pop rbp
   140011d53:	rex.X cmp al,0x1e
   140011d56:	(bad)  
   140011d57:	cld    
   140011d58:	cld    
   140011d59:	jl     0x140011dd5
   140011d5b:	push   0xbe5e868
   140011d60:	(bad)  
   140011d61:	cs mov esp,0xe20dad5d
   140011d67:	rex.B (bad) 
   140011d69:	xchg   edi,eax
   140011d6a:	int3   
   140011d6b:	jns    0x140011db7
   140011d6d:	ficom  DWORD PTR [rcx]
   140011d6f:	xor    eax,0x12000f3e
   140011d74:	fist   DWORD PTR [rdx+0x699a2f9f]
   140011d7a:	movabs ds:0xa12bcaf2bfaf83f0,al
   140011d83:	rex.W and al,0xf2
   140011d86:	mov    edi,0x2e0b4d34
   140011d8b:	(bad)  
   140011d8c:	in     al,dx
   140011d8d:	xchg   edi,eax
   140011d8e:	sbb    eax,0xb10723b3
   140011d93:	mov    esp,0x49103dcc
   140011d98:	ret    0x22ce
   140011d9b:	loopne 0x140011d3a
   140011d9d:	mov    edx,0x86113f68
   140011da2:	cwde   
   140011da3:	rex.RB mov DWORD PTR [r11-0x2071ab7e],0x45030793
   140011dae:	xor    ah,BYTE PTR [rax]
   140011db0:	rcl    DWORD PTR [rbx],0x5b
   140011db3:	sub    BYTE PTR [rdi+rdx*4-0x55faa33a],ch
   140011dba:	(bad)  
   140011dbb:	rex.WRB xlat BYTE PTR ds:[rbx]
   140011dbd:	push   rsi
   140011dbe:	sub    dl,BYTE PTR [rbp-0x539b3670]
   140011dc4:	sub    al,0xcd
   140011dc6:	rex.W and al,0x62
   140011dc9:	rex.RB loop 0x140011e45
   140011dcc:	rex.X xchg edx,eax
   140011dce:	push   0xffffffff89598945
   140011dd3:	push   rsp
   140011dd4:	rex.WRX adc BYTE PTR [ebp-0x2914febe],r8b
   140011ddc:	lods   eax,DWORD PTR ds:[rsi]
   140011ddd:	mov    ebx,0x9dcee77e
   140011de2:	pop    rdi
   140011de3:	cmp    BYTE PTR [rsi-0x14],dh
   140011de6:	fdivr  DWORD PTR [rdi+0x43cc96a3]
   140011dec:	add    al,BYTE PTR [rdi-0x3e]
   140011def:	rex.RXB and r14d,DWORD PTR [r15]
   140011df2:	mov    edi,DWORD PTR [rsi-0x118e27c2]
   140011df8:	fcomi  st,st(3)
   140011dfa:	outs   dx,DWORD PTR ds:[rsi]
   140011dfb:	or     DWORD PTR [rbx],0xffffffb0
   140011dfe:	mov    dl,dh
   140011e00:	fisttp WORD PTR [rsi]
   140011e02:	mov    edi,0xbf37bf2f
   140011e07:	(bad)  
   140011e08:	rex.B
   140011e09:	rex.WX add cl,bl
   140011e0c:	add    BYTE PTR es:[rbp-0x29],bl
   140011e10:	stos   DWORD PTR es:[rdi],eax
   140011e11:	add    BYTE PTR [rdx-0x66e44892],dl
   140011e17:	rex.WR sbb r14b,BYTE PTR [rbx-0x1417cc4d]
   140011e1e:	jmp    0x140011e27
   140011e20:	rex.WRB (bad) 
   140011e23:	call   0x142726a4a
   140011e28:	mov    ch,0x69
   140011e2a:	ds je  0x140011dcb
   140011e2d:	jle    0x140011e18
   140011e2f:	jbe    0x140011dec
   140011e31:	rex.B cmp eax,0xb82cf8e8
   140011e37:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011e38:	push   rdx
   140011e39:	or     ecx,edx
   140011e3b:	push   0xffffffff93939314
   140011e40:	pop    rax
   140011e41:	pop    rax
   140011e42:	pop    rax
   140011e43:	and    BYTE PTR [rbx],dh
   140011e45:	shr    DWORD PTR [rax],1
   140011e47:	xchg   edi,eax
   140011e48:	retf   
   140011e49:	fiadd  WORD PTR cs:[rsi+rdx*2]
   140011e4d:	lods   eax,DWORD PTR ds:[rsi]
   140011e4e:	push   rsi
   140011e4f:	push   rcx
   140011e50:	sub    bh,bl
   140011e52:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011e53:	mov    al,0x32
   140011e55:	add    BYTE PTR [rax],al
   140011e57:	(bad)  
   140011e58:	jae    0x140011ea3
   140011e5a:	rex.R
   140011e5b:	push   r12
   140011e5d:	xchg   ebp,eax
   140011e5e:	lods   al,BYTE PTR ds:[rsi]
   140011e5f:	(bad)  
   140011e60:	xchg   ebp,eax
   140011e61:	xor    al,0x3b
   140011e63:	cdq    
   140011e64:	jae    0x140011ea4
   140011e66:	lahf   
   140011e67:	(bad)  
   140011e69:	jge    0x140011ee8
   140011e6b:	push   rsi
   140011e6c:	add    al,BYTE PTR [rsi-0x5d4a1429]
   140011e72:	retf   0x2f97
   140011e75:	pop    rdi
   140011e76:	rex.RX cmp r11b,BYTE PTR [rbp+0x8c8c8c6]
   140011e7d:	es (bad) 
   140011e7f:	(bad)  
   140011e80:	jae    0x140011e33
   140011e82:	pop    rax
   140011e83:	in     al,dx
   140011e84:	call   0x12bf20f79
   140011e89:	cdq    
   140011e8a:	rex.WR
   140011e8b:	es (bad) 
   140011e8d:	pop    rsi
   140011e8e:	stos   BYTE PTR es:[rdi],al
   140011e8f:	lods   al,BYTE PTR ds:[rsi]
   140011e90:	int    0x5e
   140011e92:	(bad)  
   140011e93:	mov    WORD PTR [rdi+0x66],es
   140011e96:	mov    esi,0xb2abdc18
   140011e9b:	imul   ebx,ecx,0x6a
   140011e9e:	jl     0x140011e9e
   140011ea0:	jle    0x140011ee5
   140011ea2:	movabs eax,ds:0xeb4ed9bb4d340fd0
   140011eab:	fisttp DWORD PTR [rcx]
   140011ead:	fs sub ebp,ebx
   140011eb0:	and    BYTE PTR [rax],0x5b
   140011eb3:	xchg   edi,eax
   140011eb4:	jge    0x140011e9e
   140011eb6:	jbe    0x140011e9e
   140011eb8:	mov    dl,0x78
   140011eba:	or     eax,0x36ad4d00
   140011ebf:	rcl    BYTE PTR [rdx+0x4b],0x0
   140011ec3:	push   0x49ae0b26
   140011ec8:	rex.RB (bad) 
   140011eca:	and    dl,al
   140011ecc:	and    DWORD PTR [rdx],esi
   140011ece:	and    BYTE PTR [rdi-0x6f],dl
   140011ed1:	xchg   esp,eax
   140011ed2:	(bad)  
   140011ed3:	iret   
   140011ed4:	rcl    BYTE PTR [rbx],1
   140011ed6:	sti    
   140011ed7:	loopne 0x140011f4c
   140011ed9:	movabs ds:0xb01b2b7efdfb7ba0,al
   140011ee2:	push   rsp
   140011ee3:	sub    bl,BYTE PTR [rcx-0x2d]
   140011ee6:	mov    eax,0xeb51baf1
   140011eeb:	adc    al,0xd5
   140011eed:	rex.B and al,0x2a
   140011ef0:	rex.WRX
   140011ef1:	fs cld 
   140011ef3:	xchg   edi,eax
   140011ef4:	xchg   esp,eax
   140011ef5:	fiadd  WORD PTR [rbx-0x1f07c1f1]
   140011efb:	jnp    0x140011eec
   140011efd:	mov    ebp,0xf9acc477
   140011f02:	rcl    BYTE PTR [rbp+rcx*8-0x1332d3f9],0x3
   140011f0a:	(bad)  
   140011f0b:	mov    edi,0xae02e03
   140011f10:	in     al,0xa
   140011f12:	(bad)  
   140011f13:	(bad)  
   140011f14:	rex.WRB xchg BYTE PTR [r8-0x62],r10b
   140011f18:	scas   al,BYTE PTR es:[rdi]
   140011f19:	and    eax,0xb2686c4e
   140011f1e:	jae    0x140011ec8
   140011f20:	or     bl,BYTE PTR ds:[rdx+0x358e8749]
   140011f27:	(bad)  
   140011f28:	rex.RB jrcxz 0x140011f2c
   140011f2b:	mov    esp,0xcfdbf6fd
   140011f30:	out    dx,eax
   140011f31:	fnstsw WORD PTR [rbx+0x52a57777]
   140011f37:	jmp    0x148779a79
   140011f3c:	pop    rbp
   140011f3d:	pop    rbp
   140011f3e:	fnstsw WORD PTR [rax-0x14c4310d]
   140011f44:	xchg   ecx,eax
   140011f45:	stc    
   140011f46:	jb     0x140011edb
   140011f48:	or     esp,DWORD PTR [rax+0x47db5aa]
   140011f4e:	push   0xffffffffffffffe7
   140011f50:	and    eax,0xccb4a501
   140011f55:	jp     0x140011f71
   140011f57:	sub    eax,0x31676766
   140011f5c:	cmp    edi,DWORD PTR [rbx]
   140011f5e:	mov    ebp,DWORD PTR [rsi+rsi*1+0xb]
   140011f62:	push   rbp
   140011f63:	push   rbp
   140011f64:	xchg   ecx,eax
   140011f65:	leave  
   140011f66:	fs (bad) 
   140011f68:	sbb    BYTE PTR [rdi+0x72e74fc7],cl
   140011f6e:	mov    ecx,0xfd358004
   140011f73:	std    
   140011f74:	std    
   140011f75:	ja     0x140011efb
   140011f77:	rex.X movabs eax,ds:0xed4d4c69478f1e4d
   140011f81:	imul   esp,DWORD PTR [rdx],0xfe812200
   140011f87:	(bad)  
   140011f88:	jle    0x140011f1e
   140011f8a:	rex.WX and rax,0xffffffff981e3c78
   140011f90:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011f91:	mov    DWORD PTR [rdx+rbp*1-0x7b],edx
   140011f95:	push   rsp
   140011f96:	sub    al,BYTE PTR [rbp+0xa119191]
   140011f9c:	lock lea ecx,[rdi+rcx*1]
   140011fa0:	ud0    edi,DWORD PTR [rsi+0x7e]
   140011fa4:	jle    0x140011fa4
   140011fa6:	push   rsp
   140011fa7:	cs xchg edi,eax
   140011fa9:	mov    esi,DWORD PTR [rbx+0x79cc813f]
   140011faf:	xchg   ecx,eax
   140011fb0:	add    BYTE PTR [rcx+rdx*8+0x7c],ah
   140011fb4:	sar    al,cl
   140011fb6:	(bad)  
   140011fb7:	xor    al,0x5f
   140011fb9:	(bad)  
   140011fba:	adc    al,0xd3
   140011fbc:	xor    ah,BYTE PTR [rax]
   140011fbe:	repz mov ebx,0x736efddf
   140011fc4:	movabs eax,ds:0x265984edb68c7850
   140011fcd:	fmul   st,st(3)
   140011fcf:	and    eax,0xd45d710a
   140011fd4:	bnd jl 0x140011f72
   140011fd7:	or     eax,DWORD PTR [rsi-0x6f8fad18]
   140011fdd:	movabs al,ds:0xc9fb65ff73168690
   140011fe6:	jl     0x140011fcf
   140011fe8:	pop    rcx
   140011fe9:	jbe    0x14001204d
   140011feb:	mov    ebp,0xd5af5ebc
   140011ff0:	cld    
   140011ff1:	rex.RX scas al,BYTE PTR es:[rdi]
   140011ff3:	add    DWORD PTR [rdi+0x410d0021],ecx
   140011ff9:	in     al,0xf7
   140011ffb:	jrcxz  0x140011ff4
   140011ffd:	movabs eax,ds:0xa29b1259e3c7b260
   140012006:	test   DWORD PTR [rax-0x80],ecx
   140012009:	xchg   ebx,eax
   14001200a:	or     esi,DWORD PTR [rdi+0x73f3f832]
   140012010:	sub    esp,DWORD PTR [rax-0x389dd3a8]
   140012016:	mov    ds,WORD PTR [rip+0xfffffffff0fc3cf7]        # 0x130fd5d13
   14001201c:	ret    
   14001201d:	(bad)  
   14001201f:	mov    edi,0xa8abff7f
   140012024:	leave  
   140012025:	xchg   ecx,eax
   140012026:	popf   
   140012027:	mov    ecx,0x310b340e
   14001202c:	outs   dx,DWORD PTR ds:[rsi]
   14001202d:	mov    bl,0xe7
   14001202f:	jle    0x14001206d
   140012031:	and    BYTE PTR [rdi],ah
   140012033:	paddd  mm1,mm3
   140012036:	lods   eax,DWORD PTR ds:[rsi]
   140012037:	add    cl,BYTE PTR [rax-0x36]
   14001203a:	leave  
   14001203b:	sub    al,0x9
   14001203d:	xchg   edi,eax
   14001203e:	jo     0x140011fec
   140012040:	jmp    0x141127c60
   140012045:	rex.WR
   140012046:	rex.WRB
   140012047:	rex.WRB jge 0x1400120c2
   14001204a:	icebp  
   14001204b:	loop   0x140012012
   14001204d:	push   QWORD PTR [rdx-0x68492493]
   140012053:	mov    eax,ebp
   140012055:	movabs ds:0xa14fa7d3873f3f3a,al
   14001205e:	push   rsp
   14001205f:	sub    al,cl
   140012061:	out    dx,eax
   140012062:	scas   eax,DWORD PTR es:[rdi]
   140012063:	in     eax,0xd7
   140012065:	jo     0x1400120dd
   140012067:	scas   eax,DWORD PTR es:[rdi]
   140012068:	cmc    
   140012069:	sbb    DWORD PTR [rax+0x73625cbd],ebp
   14001206f:	movabs al,ds:0x53c8ea2cca6811a1
   140012078:	(bad)  
   14001207a:	(bad)  
   14001207b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001207c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001207d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001207e:	(bad)  
   14001207f:	mov    WORD PTR [rbp+0x2e507d8d],cs
   140012085:	xchg   edi,eax
   140012086:	rex.WXB cmc 
   140012088:	cmp    cl,BYTE PTR [rsi]
   14001208a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001208b:	push   rdx
   14001208c:	test   eax,0xc89123f7
   140012091:	xchg   dh,cl
   140012093:	(bad)  
   140012094:	(bad)  
   140012095:	call   rax
   140012097:	rcl    ebx,cl
   140012099:	mov    bl,0xcb
   14001209b:	jmp    0x140012092
   14001209d:	jbe    0x1400120ef
   14001209f:	xor    BYTE PTR [rdi+0x72e5c008],al
   1400120a5:	pop    rcx
   1400120a6:	add    eax,DWORD PTR [rbx+0x78152a54]
   1400120ac:	cmp    al,0x1e
   1400120ae:	or     ch,dl
   1400120b0:	(bad)  
   1400120b1:	jl     0x14001212f
   1400120b3:	sbb    al,0xd1
   1400120b5:	push   0x74747c74
   1400120ba:	je     0x14001213b
   1400120bc:	sub    al,0x16
   1400120be:	jnp    0x14001209f
   1400120c0:	xor    al,0x4d
   1400120c2:	sbb    cl,BYTE PTR [rsi-0x8c74b77]
   1400120c8:	in     eax,dx
   1400120c9:	(bad)
   1400120cc:	mov    cl,0xd3
   1400120ce:	mov    gs,WORD PTR [rcx+rcx*1+0x28bd0b8f]
   1400120d5:	call   0xc5b24407
   1400120da:	rex.X (bad) 
   1400120dc:	xchg   edi,eax
   1400120dd:	movabs ds:0xd4af7856dc36d428,al
   1400120e6:	rex.WX and BYTE PTR [rax+0x3f18aebe],cl
   1400120ed:	adc    bl,bl
   1400120ef:	leave  
   1400120f0:	stc    
   1400120f1:	cmp    eax,0xe24a1e9a
   1400120f6:	push   QWORD PTR [rbx+0x41]
   1400120f9:	(bad)  
   1400120fa:	rex.B adc al,0x4d
   1400120fd:	imul   ebx,esi,0x933e2b9c
   140012103:	sub    BYTE PTR [rax-0x284363cc],al
   140012109:	jmp    0x1400120c0
   14001210b:	lods   al,BYTE PTR ds:[rsi]
   14001210c:	add    bl,BYTE PTR [rcx-0x12]
   14001210f:	rex.B sub eax,0xba68d4f3
   140012115:	(bad)  
   140012116:	call   QWORD PTR [rsi]
   140012118:	rex.RB ret 0xcd10
   14001211c:	jle    0x1400120cf
   14001211e:	movsxd edx,DWORD PTR [rdx]
   140012120:	(bad)  
   140012121:	(bad)  
   140012122:	pop    rbx
   140012123:	(bad)  
   140012124:	mov    WORD PTR [rax-0x6c],fs
   140012127:	(bad)  
   140012128:	(bad)  
   140012129:	jl     0x14001211b
   14001212b:	xchg   ecx,eax
   14001212c:	(bad)  
   14001212d:	fidivr WORD PTR [rax-0x1d]
   140012130:	push   rax
   140012131:	test   eax,0x59a32a54
   140012136:	xor    BYTE PTR [rcx+0x33b51696],bh
   14001213c:	lods   eax,DWORD PTR ds:[rsi]
   14001213d:	fwait
   14001213e:	push   0xffffffffeb5ccc2d
   140012143:	mov    bh,0x13
   140012145:	jp     0x140012105
   140012147:	cs jae 0x140012183
   14001214a:	test   al,0x4f
   14001214c:	leave  
   14001214d:	xchg   edx,eax
   14001214e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001214f:	rcl    DWORD PTR [rip+0xfffffffffbf4088f],0xdf        # 0x13bf529e5
   140012156:	(bad)  
   140012157:	(bad)  
   140012158:	(bad)  
   140012159:	clc    
   14001215a:	jl     0x14001211a
   14001215c:	popf   
   14001215d:	fwait
   14001215e:	ss ins DWORD PTR es:[rdi],dx
   140012160:	cli    
   140012161:	movabs eax,ds:0xaaaa81999998aaaa
   14001216a:	or     BYTE PTR [rbp+0x5858582a],al
   140012170:	and    al,0x12
   140012173:	mov    cl,0xcc
   140012175:	jp     0x140012171
   140012177:	ds test al,0x59
   14001217a:	mov    BYTE PTR [rsi+0x5e],bl
   14001217d:	ds lahf 
   14001217f:	(bad)  
   140012180:	in     al,dx
   140012181:	in     al,dx
   140012182:	lods   al,BYTE PTR ds:[rsi]
   140012183:	(bad)  
   140012184:	jne    0x14001213d
   140012186:	(bad)  
   140012187:	(bad)  
   140012188:	leave  
   140012189:	mov    edx,DWORD PTR [rdi]
   14001218b:	(bad)  
   14001218c:	(bad)  
   14001218d:	es (bad) 
   14001218f:	mov    ebx,DWORD PTR [rbp-0x70c28a2f]
   140012195:	pop    rdx
   140012196:	jo     0x14001211d
   140012198:	xor    ch,ah
   14001219a:	push   rax
   14001219b:	lods   eax,DWORD PTR ds:[rsi]
   14001219c:	push   rsi
   14001219d:	mov    ecx,DWORD PTR [rbx+0x17678b8b]
   1400121a3:	(bad)  
   1400121a4:	(bad)  
   1400121a5:	xchg   DWORD PTR [rdx-0x313e1b37],edx
   1400121ab:	(bad)  
   1400121ac:	(bad)  
   1400121ad:	pop    rbx
   1400121ae:	and    dl,BYTE PTR [rcx+0x60c18dc8]
   1400121b4:	jo     0x140012151
   1400121b6:	(bad)  
   1400121b7:	sbb    BYTE PTR [rsi+0x4a],bl
   1400121ba:	movabs ax,ds:0x2cececc5ebd79f20
   1400121c4:	mov    ds,WORD PTR [rdi]
   1400121c6:	(bad)  
   1400121c7:	mov    fs,WORD PTR [rdx+rsi*1+0x59]
   1400121cb:	sahf   
   1400121cc:	sahf   
   1400121cd:	sahf   
   1400121ce:	cmp    BYTE PTR ds:[rsp+rdi*1],bh
   1400121d2:	cld    
   1400121d3:	outs   dx,DWORD PTR ds:[rsi]
   1400121d4:	test   DWORD PTR [rdx+0x61],eax
   1400121d7:	scas   al,BYTE PTR es:[rdi]
   1400121d8:	(bad)  
   1400121d9:	fcomp  QWORD PTR [rbx+riz*8-0xd]
   1400121dd:	out    0x3c,al
   1400121df:	mov    cl,0x29
   1400121e1:	pop    QWORD PTR [rdi]
   1400121e3:	idiv   DWORD PTR [rax-0x19754850]
   1400121e9:	jae    0x14001219f
   1400121eb:	adc    al,0xfe
   1400121ed:	cmp    dh,BYTE PTR [rsi+0x2]
   1400121f0:	lods   eax,DWORD PTR ds:[rsi]
   1400121f1:	rex.WRB jne 0x14001222f
   1400121f4:	sub    al,0x47
   1400121f6:	repz repz mov dl,0x32
   1400121fa:	loope  0x140012213
   1400121fc:	xor    eax,0xe012ccbe
   140012201:	mul    eax
   140012203:	es mov esi,0x34dcf028
   140012209:	(bad)  
   14001220a:	test   DWORD PTR [rdi-0x66f47fb8],0x5f82d5ac
   140012214:	xchg   DWORD PTR [rdi-0x36ee0459],edx
   14001221a:	xchg   ebx,eax
   14001221b:	rex.RB push r8
   14001221d:	sub    dl,BYTE PTR [rbp+0x324809a4]
   140012223:	jae    0x1400121c3
   140012225:	mov    ah,0x3d
   140012227:	(bad)  
   140012228:	or     DWORD PTR [rdx-0x17d32ffd],ebp
   14001222e:	movabs ds:0x41a3eae54bafc04b,al
   140012237:	ins    DWORD PTR es:[rdi],dx
   140012238:	mov    eax,0x6f9be6f9
   14001223d:	cmp    al,0x71
   14001223f:	loop   0x140012205
   140012241:	sbb    esp,edx
   140012243:	(bad)  
   140012244:	jge    0x1400122a2
   140012246:	clc    
   140012247:	js     0x1400122a9
   140012249:	addps  xmm5,XMMWORD PTR [rdx+0x5]
   14001224d:	lock (bad) 
   14001224f:	rex.W mov sil,0xce
   140012252:	add    eax,0x713955b8
   140012257:	popf   
   140012258:	outs   dx,DWORD PTR ds:[rsi]
   140012259:	jae    0x1400121e6
   14001225b:	sub    DWORD PTR [rbx+rcx*1+0x1315bd7e],0x7aa00280
   140012266:	in     al,dx
   140012267:	fdiv   DWORD PTR [rcx+0x5f3e7ce7]
   14001226d:	ja     0x1400122ee
   14001226f:	jg     0x140012270
   140012271:	mov    bh,0x5d
   140012273:	cs push rdi
   140012275:	syscall 
   140012277:	xlat   BYTE PTR ds:[rbx]
   140012278:	xchg   BYTE PTR [rsi-0x4912a732],al
   14001227e:	pop    rsi
   14001227f:	scas   eax,DWORD PTR es:[rdi]
   140012280:	xlat   BYTE PTR ds:[rbx]
   140012281:	push   0xffffffffffffffae
   140012283:	movabs ds:0xb11cb972eb32803f,eax
   14001228c:	js     0x14001228c
   14001228e:	repnz in eax,0xcb
   140012291:	(bad)  
   140012292:	xor    al,0x4d
   140012294:	mov    ebx,0xf3333330
   140012299:	out    dx,al
   14001229a:	ret    0x42c2
   14001229d:	adc    al,0x80
   14001229f:	mov    edi,0x9db695e
   1400122a4:	adc    esi,edx
   1400122a6:	stc    
   1400122a7:	cld    
   1400122a8:	(bad)  
   1400122ab:	jg     0x14001232b
   1400122ad:	jbe    0x140012325
   1400122af:	(bad)  
   1400122b0:	adc    ecx,DWORD PTR [rax]
   1400122b2:	add    al,0xd6
   1400122b4:	ja     0x14001232d
   1400122b6:	ja     0x1400122a7
   1400122b8:	or     al,BYTE PTR [rsi]
   1400122ba:	cmp    DWORD PTR [rbp+0x3e],0xffffff9f
   1400122be:	scas   eax,DWORD PTR es:[rdi]
   1400122bf:	iret   
   1400122c0:	in     eax,0x72
   1400122c2:	lods   eax,DWORD PTR ds:[rsi]
   1400122c3:	fwait
   1400122c4:	fwait
   1400122c5:	fwait
   1400122c6:	jmp    0x14001229e
   1400122c8:	xor    al,0x4d
   1400122ca:	mov    edi,eax
   1400122cc:	jrcxz  0x1400122a1
   1400122ce:	mov    cl,0x58
   1400122d0:	in     al,dx
   1400122d1:	(bad)  
   1400122d3:	jae    0x140012348
   1400122d5:	xchg   DWORD PTR [rbx-0x2ee01b37],edx
   1400122db:	adc    BYTE PTR [rsi-0x66],al
   1400122de:	hlt    
   1400122df:	lea    esi,[rdi-0x32]
   1400122e2:	loope  0x140012326
   1400122e4:	(bad)  
   1400122e5:	rex.WXB shl QWORD PTR [r13+0x7cc9ea0b],cl
   1400122ec:	jnp    0x140012297
   1400122ee:	mov    edi,0xaf6bc325
   1400122f3:	mov    ebp,0x55f006e6
   1400122f8:	jmp    0x1400122ff
   1400122fa:	mov    bh,0xf0
   1400122fc:	in     eax,dx
   1400122fd:	gs sti 
   1400122ff:	gs push rcx
   140012301:	jg     0x1400122dc
   140012303:	mov    dh,0xcc
   140012305:	out    0x27,eax
   140012307:	or     ecx,DWORD PTR [rdx-0x19127472]
   14001230d:	jbe    0x1400122fc
   14001230f:	call   0xdf9b8736
   140012314:	or     esp,DWORD PTR [rdi*8-0x57670301]
   14001231b:	imul   ecx,DWORD PTR [rcx],0xbe014c7c
   140012321:	(bad)  
   140012322:	rex.WRB js 0x14001238f
   140012325:	push   rcx
   140012326:	movabs al,ds:0xefc184e2596a2de4
   14001232f:	(bad)
   140012332:	in     eax,0x24
   140012334:	sar    bl,0xa6
   140012337:	mov    BYTE PTR [rcx],dh
   140012339:	or     bh,BYTE PTR [rsi+0x6f]
   14001233c:	icebp  
   14001233d:	fldcw  WORD PTR [rcx+0x56eddb8c]
   140012343:	ja     0x140012333
   140012345:	fdivr  QWORD PTR [rcx+0x1389c4eb]
   14001234b:	(bad)  
   14001234c:	rex.X scas al,BYTE PTR es:[rdi]
   14001234e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001234f:	stc    
   140012350:	mov    bh,0x40
   140012352:	jmp    0x140012330
   140012354:	and    dh,BYTE PTR [rax]
   140012356:	mov    cl,0xd4
   140012358:	or     eax,0x7ae9d710
   14001235d:	mov    dl,0x72
   14001235f:	mov    dl,0xfd
   140012361:	cld    
   140012362:	sbb    cl,BYTE PTR [rdx+0x4ac26964]
   140012368:	or     DWORD PTR [rax+0x66c9400a],esp
   14001236e:	mov    bl,0xb9
   140012370:	push   rdi
   140012371:	pop    rdi
   140012372:	jge    0x140012369
   140012374:	jnp    0x1400122f9
   140012376:	add    DWORD PTR [rbx+0x2be57e2f],0x5f
   14001237d:	jns    0x14001232d
   14001237f:	movabs ds:0x14a953e1a45be3a3,eax
   140012388:	(bad)  
   140012389:	(bad)  
   14001238a:	(bad)  
   14001238b:	xchg   esi,eax
   14001238c:	jl     0x14001232e
   14001238e:	xchg   BYTE PTR [rcx+0x20],ah
   140012391:	xchg   ebx,eax
   140012392:	leave  
   140012393:	(bad)  
   140012394:	jle    0x140012414
   140012396:	(bad)  
   140012397:	outs   dx,BYTE PTR ds:[rsi]
   140012398:	mov    bh,0xbb
   14001239a:	stos   BYTE PTR es:[rdi],al
   14001239b:	imul   ebx,edx,0xc3c3c3db
   1400123a1:	mov    edi,0x513264ce
   1400123a6:	shl    DWORD PTR [rsi*2+0x1bbe34d4],cl
   1400123ad:	xor    eax,0x655e5c21
   1400123b2:	stos   BYTE PTR es:[rdi],al
   1400123b3:	(bad)  
   1400123b4:	push   rdx
   1400123b5:	ds lahf 
   1400123b7:	(bad)  
   1400123b8:	cmp    BYTE PTR [rdi-0x1ffd6031],bl
   1400123be:	push   rsi
   1400123bf:	adc    al,0xc5
   1400123c1:	jmp    0x140012435
   1400123c3:	mov    ecx,0x3d3d3dfc
   1400123c8:	sbb    edi,DWORD PTR [rbp-0x32890a2]
   1400123ce:	cld    
   1400123cf:	cld    
   1400123d0:	rex.WB pop r13
   1400123d2:	xlat   BYTE PTR ds:[rbx]
   1400123d3:	out    0xd0,eax
   1400123d5:	(bad)  
   1400123d6:	rex.X out dx,al
   1400123d8:	iret   
   1400123d9:	xchg   ebx,eax
   1400123da:	(bad)  
   1400123db:	out    0x2,eax
   1400123dd:	iret   
   1400123de:	add    edi,DWORD PTR [rbx+0x62]
   1400123e1:	es push rsi
   1400123e3:	cmp    esp,DWORD PTR [rcx+0x72d3df17]
   1400123e9:	lahf   
   1400123ea:	(bad)  
   1400123eb:	popf   
   1400123ec:	movabs ds:0xf1a56d0472cb728,al
   1400123f5:	adc    bh,cl
   1400123f7:	in     eax,0x64
   1400123f9:	rex.B ins DWORD PTR es:[rdi],dx
   1400123fb:	ffreep st(0)
   1400123fd:	push   rdx
   1400123fe:	xchg   ebx,eax
   1400123ff:	lahf   
   140012400:	xchg   ebx,eax
   140012401:	sub    DWORD PTR [rsi+rax*1],0x28ae0a20
   140012408:	lock and al,0x74
   14001240b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001240c:	lods   eax,DWORD PTR ds:[rsi]
   14001240d:	rex.WB movabs al,ds:0x3272bac5654045b8
   140012417:	movabs eax,ds:0x2899f17eccb0027a
   140012420:	rex.XB xchg r12d,eax
   140012422:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012423:	adc    esi,DWORD PTR [rbx-0x7f]
   140012426:	(bad)  
   140012427:	lods   eax,DWORD PTR ds:[rsi]
   140012428:	adc    ebx,DWORD PTR [rsi]
   14001242a:	xor    al,0x14
   14001242c:	mov    ebx,0x29cf8b2c
   140012431:	mov    dh,0x18
   140012433:	lock jne 0x140012436
   140012436:	sub    BYTE PTR [rdi+0x7dbed8cb],dl
   14001243c:	sti    
   14001243d:	ss mov bh,0xdb
   140012440:	fst    QWORD PTR [rcx-0x57]
   140012443:	push   rsp
   140012444:	in     al,dx
   140012445:	rex.WR jno 0x140012496
   140012448:	add    BYTE PTR [rsi+0x6e],dh
   14001244b:	movabs ds:0x4839d65b84cbfa68,al
   140012454:	mov    ah,0x30
   140012456:	(bad)  
   140012457:	mov    bl,0x2e
   140012459:	sub    edx,DWORD PTR [rbx+0x7b]
   14001245c:	mov    edi,0xc0658ee2
   140012461:	jp     0x14001240b
   140012463:	test   eax,0x5f91a9a9
   140012468:	(bad)  
   140012469:	cli    
   14001246a:	xlat   BYTE PTR ds:[rbx]
   14001246b:	(bad)  
   14001246c:	in     al,dx
   14001246d:	fnstenv [rbx+0x6db69fe7]
   140012473:	fcomi  st,st(6)
   140012475:	mov    eax,0xde7e1861
   14001247a:	movsxd ecx,DWORD PTR [rdx+0x3e765e83]
   140012480:	lahf   
   140012481:	jg     0x1400124e6
   140012483:	data16 data16 out 0xd5,al
   140012487:	pop    rax
   140012488:	sub    al,0xf6
   14001248a:	xchg   ecx,eax
   14001248b:	imul   ebx,DWORD PTR [rdx-0x191ce5f6],0x2ea0ae17
   140012495:	sbb    al,0xa5
   140012497:	push   0xffffffffffffffb5
   140012499:	pop    rdx
   14001249a:	lods   al,BYTE PTR ds:[rsi]
   14001249b:	push   rsp
   14001249c:	sub    bl,BYTE PTR [rcx+0x28f9f9f9]
   1400124a2:	push   0xffffffffffffff82
   1400124a4:	rex.WRB iretq 
   1400124a6:	(bad)  
   1400124a7:	(bad)  
   1400124a8:	ret    
   1400124a9:	and    eax,0xfcdcf3ae
   1400124ae:	push   rsi
   1400124af:	es (bad) 
   1400124b1:	mov    dl,0x82
   1400124b3:	jp     0x1400124e0
   1400124b5:	sbb    ebx,0x186f5eed
   1400124bb:	xchg   BYTE PTR [rdi+0x132ff99d],ah
   1400124c1:	mul    ch
   1400124c3:	(bad)  
   1400124c4:	or     ah,BYTE PTR [rdx+rax*2-0x2a]
   1400124c8:	retf   0xe032
   1400124cb:	sbb    DWORD PTR cs:[rbp+0x23efc00b],0x2e74fad3
   1400124d6:	(bad)  
   1400124d7:	stos   DWORD PTR es:[rdi],eax
   1400124d8:	or     DWORD PTR [rsp+rcx*1-0x517ca8bc],ebx
   1400124df:	rex.RXB jrcxz 0x140012531
   1400124e2:	shl    BYTE PTR [rip+0x7143ce29],cl        # 0x1b144f311
   1400124e8:	and    al,0x3b
   1400124ea:	retf   
   1400124eb:	and    DWORD PTR [rdx+0x102b14fd],0xf9f2005d
   1400124f5:	test   eax,0x7603593c
   1400124fa:	popf   
   1400124fb:	sahf   
   1400124fc:	(bad)  
   1400124fd:	jecxz  0x1400124f7
   140012500:	and    eax,0x83060842
   140012505:	mov    ebp,0xcfdbb76e
   14001250a:	mov    edx,0x4d4b0397
   14001250f:	ins    DWORD PTR es:[rdi],dx
   140012510:	scas   al,BYTE PTR es:[rdi]
   140012511:	stc    
   140012512:	ror    DWORD PTR [rsi+0x2e26291],0x4e
   140012519:	xlat   BYTE PTR ds:[rbx]
   14001251a:	loopne 0x1400124dd
   14001251c:	cmp    al,0x22
   14001251e:	xchg   ecx,eax
   14001251f:	gs pop rbx
   140012521:	xchg   esi,eax
   140012522:	adc    dl,BYTE PTR [rax+0x2b84d1d5]
   140012528:	sbb    dl,BYTE PTR [rip+0xffffffffa2ab0eb8]        # 0xe2ac33e6
   14001252e:	(bad)  
   14001252f:	nop    esp
   140012532:	out    dx,eax
   140012533:	icebp  
   140012534:	js     0x140012532
   140012536:	mov    ch,0xc1
   140012538:	rol    ecx,0xbf
   14001253b:	pop    rbx
   14001253c:	mov    edi,0xdcb7fd7e
   140012541:	outs   dx,BYTE PTR ds:[rsi]
   140012542:	ja     0x140012583
   140012544:	outs   dx,DWORD PTR ds:[rsi]
   140012545:	sub    dl,BYTE PTR es:[rdi+0x264c95cb]
   14001254c:	xor    esi,DWORD PTR [rdx-0x2]
   14001254f:	cld    
   140012550:	stc    
   140012551:	pop    rdi
   140012552:	pushf  
   140012553:	cmp    esi,DWORD PTR [rdi-0x12]
   140012556:	cmc    
   140012557:	mov    edx,0x18d007e0
   14001255c:	sub    al,0xe3
   14001255e:	push   0xffffffffffffff82
   140012560:	or     ebp,DWORD PTR [rbx-0x337125c8]
   140012566:	scas   eax,DWORD PTR es:[rdi]
   140012567:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012568:	(bad)  
   140012569:	mov    esi,esi
   14001256b:	add    ecx,DWORD PTR [rbx+0x9]
   14001256e:	add    BYTE PTR [rax+0x4627f633],dl
   140012574:	addr32 addr32 addr32 and al,0x93
   140012579:	leave  
   14001257a:	pop    rax
   14001257b:	(bad)  
   14001257c:	stos   DWORD PTR es:[rdi],eax
   14001257d:	xchg   ebp,eax
   14001257e:	push   rax
   14001257f:	mov    bh,0x13
   140012581:	cld    
   140012582:	push   rsi
   140012583:	(bad)  
   140012584:	lahf   
   140012585:	or     ebx,DWORD PTR [rcx-0x4cd2a168]
   14001258b:	add    BYTE PTR [rbx+rcx*4+0x58],ah
   14001258f:	(bad)  
   140012590:	push   rcx
   140012591:	sub    BYTE PTR [rax-0x40],cl
   140012594:	js     0x1400125ef
   140012596:	xor    edx,edi
   140012598:	or     bh,BYTE PTR cs:[rdi]
   14001259b:	(bad)  
   14001259c:	xchg   DWORD PTR [rbx+0x731f32b4],eax
   1400125a2:	xchg   edx,eax
   1400125a3:	adc    bh,BYTE PTR [rax-0x58]
   1400125a6:	xor    eax,0x28808ec9
   1400125ab:	(bad)  
   1400125ac:	or     bh,0x71
   1400125af:	rex mul esi
   1400125b2:	jne    0x140012595
   1400125b4:	add    DWORD PTR [rdi],edi
   1400125b6:	jp     0x1400125c7
   1400125b8:	mov    esp,0xd6e64265
   1400125bd:	enter  0xd4a0,0xe6
   1400125c1:	or     al,0xa7
   1400125c3:	icebp  
   1400125c4:	(bad)  
   1400125c5:	(bad)  
   1400125c6:	rex lahf 
   1400125c8:	test   al,0x38
   1400125ca:	adc    r12b,BYTE PTR [rax-0x3d1c234]
   1400125d1:	jbe    0x1400125be
   1400125d3:	lods   eax,DWORD PTR ds:[rsi]
   1400125d4:	test   BYTE PTR [rdi+0x39],bh
   1400125d7:	fbld   TBYTE PTR [rbx-0x3a82c7d4]
   1400125dd:	add    al,0xc0
   1400125df:	rex.WRB unpckhps xmm8,XMMWORD PTR [r8]
   1400125e3:	(bad)  
   1400125e4:	popf   
   1400125e5:	cmp    esi,DWORD PTR [rdi-0x16]
   1400125e8:	fdivr  QWORD PTR [rcx+0x7a7aa773]
   1400125ee:	jp     0x14001258e
   1400125f0:	pop    rdi
   1400125f1:	mov    ch,0x6a
   1400125f3:	(bad)  
   1400125f4:	lods   eax,DWORD PTR ds:[rsi]
   1400125f5:	movabs eax,ds:0x5ab56ade801d6850
   1400125fe:	pop    rax
   1400125ff:	pop    rax
   140012600:	pop    rax
   140012601:	clc    
   140012602:	js     0x14001267a
   140012604:	jbe    0x14001267c
   140012606:	pop    rax
   140012607:	xlat   BYTE PTR ds:[rbx]
   140012608:	jne    0x140012617
   14001260a:	mov    ch,0xc4
   14001260c:	mov    DWORD PTR [rsi-0x7faa01c2],edx
   140012612:	leave  
   140012613:	jle    0x14001268e
   140012615:	loopne 0x140012665
   140012617:	xchg   esi,eax
   140012618:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012619:	ja     0x1400125c0
   14001261b:	data16 (bad) 
   14001261d:	push   rbp
   14001261e:	sbb    ebx,0xa07936ed
   140012624:	ins    BYTE PTR es:[rdi],dx
   140012625:	cmp    DWORD PTR [rdx],eax
   140012627:	fimul  WORD PTR [rdx-0x65]
   14001262a:	fistp  DWORD PTR [rbp-0x45ca37f9]
   140012630:	int3   
   140012631:	in     al,dx
   140012632:	(bad)  
   140012633:	xlat   BYTE PTR ds:[rbx]
   140012634:	pop    rbx
   140012635:	pop    rbp
   140012636:	lahf   
   140012637:	imul   ecx,DWORD PTR [rbp+0x59],0xffffff82
   14001263b:	lea    ebp,[rax+0x9]
   14001263e:	mov    ch,cl
   140012640:	jne    0x1400125cc
   140012642:	movabs ds:0x46310d27aa00212c,al
   14001264b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001264c:	(bad)  
   14001264d:	xor    eax,0x5000531f
   140012652:	or     al,0x1a
   140012654:	push   rdx
   140012655:	jge    0x14001263f
   140012657:	(bad)  
   140012659:	cmp    al,BYTE PTR [rcx+rsi*1+0x2]
   14001265d:	out    dx,al
   14001265e:	sbb    dh,al
   140012660:	ins    BYTE PTR es:[rdi],dx
   140012661:	and    r8b,BYTE PTR [rcx+rbx*2]
   140012665:	nop
   140012666:	nop
   140012667:	pop    rdi
   140012668:	xchg   ebx,eax
   140012669:	(bad)  
   14001266a:	xor    edi,DWORD PTR [rbp+0x52a54a87]
   140012670:	lods   al,BYTE PTR ds:[rsi]
   140012671:	outs   dx,DWORD PTR ds:[rsi]
   140012672:	push   rbx
   140012673:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012674:	fucomp st(6)
   140012676:	pop    rbx
   140012677:	and    ah,BYTE PTR [rcx]
   140012679:	out    0xda,al
   14001267b:	pop    rdi
   14001267c:	xor    al,0xed
   14001267e:	and    DWORD PTR [rcx+0x17],ebx
   140012681:	ror    DWORD PTR [rcx-0x4485080],0x6e
   140012688:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012689:	fucomip st,st(7)
   14001268b:	(bad)  
   14001268c:	mov    cl,0x0
   14001268e:	clc    
   14001268f:	add    eax,0x5494ad89
   140012694:	sub    dh,BYTE PTR [rip+0x26a54a99]        # 0x166a67133
   14001269a:	test   DWORD PTR [rbx+0x7e],esp
   14001269d:	(bad)  
   14001269e:	xor    ah,BYTE PTR [rbx-0x5665724]
   1400126a4:	lods   eax,DWORD PTR ds:[rsi]
   1400126a5:	and    bl,BYTE PTR [rax-0x3c1dfb61]
   1400126ab:	mov    al,dl
   1400126ad:	rex.WRB (bad) 
   1400126af:	sahf   
   1400126b0:	pop    rsi
   1400126b1:	push   rdx
   1400126b2:	stos   DWORD PTR es:[rdi],eax
   1400126b3:	xor    al,0x5d
   1400126b5:	icebp  
   1400126b6:	(bad)  
   1400126b7:	xlat   BYTE PTR ds:[rbx]
   1400126b8:	add    al,0xe3
   1400126ba:	jrcxz  0x14001269f
   1400126bc:	rex.WX pop rdi
   1400126be:	pop    rdi
   1400126bf:	pop    rdi
   1400126c0:	xchg   ebx,eax
   1400126c1:	push   rsi
   1400126c2:	add    ebp,esp
   1400126c4:	fld    QWORD PTR [rax]
   1400126c6:	cdq    
   1400126c7:	xchg   esi,eax
   1400126c8:	(bad)  
   1400126c9:	retf   
   1400126ca:	mov    esp,DWORD PTR [rbp-0x47]
   1400126cd:	sbb    DWORD PTR [rsi+0x676f4d1c],edi
   1400126d3:	cli    
   1400126d4:	fcmovnu st,st(5)
   1400126d6:	sbb    ebx,DWORD PTR [rax+0x2a]
   1400126d9:	and    al,0x76
   1400126db:	(bad)
   1400126df:	jno    0x140012719
   1400126e1:	ja     0x1400126bd
   1400126e3:	rex.RXB
   1400126e4:	ds cmp eax,0x4a95f099
   1400126ea:	add    eax,0xcadfbf7e
   1400126ef:	call   0xface5bc7
   1400126f4:	xchg   esi,eax
   1400126f5:	sub    al,0xf2
   1400126f7:	rex.WRXB (bad) 
   1400126f9:	add    DWORD PTR [rcx+0x2250750c],edx
   1400126ff:	add    ah,BYTE PTR [rax]
   140012701:	(bad)
   140012706:	(bad)  
   140012707:	mov    WORD PTR [rbx-0xa],es
   14001270a:	scas   al,BYTE PTR es:[rdi]
   14001270b:	pop    rbp
   14001270c:	cs (bad) 
   14001270e:	adc    cl,BYTE PTR [rcx+0x5cb94cc4]
   140012714:	(bad)  
   140012715:	shr    DWORD PTR [rbx+rcx*2],1
   140012718:	movabs ds:0x8f993951ea0b2fdf,al
   140012721:	cs adc esp,esp
   140012724:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012725:	xlat   BYTE PTR ds:[rbx]
   140012726:	sub    eax,0xf1f6cafc
   14001272b:	imul   ecx,DWORD PTR [rax+0x4f85acd6],0x42
   140012732:	add    BYTE PTR [rdx-0x1932fef6],dh
   140012738:	nop
   140012739:	retf   0xc9d6
   14001273c:	fdiv   QWORD PTR [rsi-0x52a3aff5]
   140012742:	jp     0x1400126cc
   140012744:	(bad)  
   140012745:	rex.RB jl 0x140012749
   140012748:	mov    esp,0x975c542d
   14001274d:	pop    rbp
   14001274e:	out    dx,eax
   14001274f:	(bad)  
   140012750:	and    bl,BYTE PTR [rcx-0x52a969b4]
   140012756:	pop    rdx
   140012757:	(bad)  
   140012758:	push   rsi
   140012759:	rex.W
   14001275a:	fs cmp esp,edi
   14001275d:	lods   eax,DWORD PTR ds:[rsi]
   14001275e:	retf   0x72f3
   140012761:	retf   
   140012762:	adc    eax,0xdd8cb17e
   140012767:	cmc    
   140012768:	in     eax,dx
   140012769:	add    al,0x8e
   14001276b:	fldenv [rdx+0x79]
   14001276f:	xor    ecx,ecx
   140012771:	rex.RX lods al,BYTE PTR ds:[rsi]
   140012773:	movabs ds:0x40ac04d3834961a8,eax
   14001277c:	ins    DWORD PTR es:[rdi],dx
   14001277d:	rcl    BYTE PTR [rdi],1
   14001277f:	rex.WX and al,0xb
   140012782:	add    al,0x2
   140012784:	push   rsi
   140012785:	xchg   ebx,eax
   140012786:	mov    dl,0x9d
   140012788:	cdq    
   140012789:	cs out dx,al
   14001278b:	movabs ds:0xbe20d5b8548882d1,eax
   140012794:	(bad)  
   140012795:	mov    ebx,0x7b6bf2ba
   14001279a:	mov    ebp,0x7f3f9c5e
   14001279f:	jle    0x14001274f
   1400127a1:	(bad)  
   1400127a2:	(bad)  
   1400127a3:	out    dx,al
   1400127a4:	movabs al,ds:0xb97d52cbdb59a3ea
   1400127ad:	rex.WRXB iretq 
   1400127af:	shr    edx,1
   1400127b1:	jnp    0x140012766
   1400127b3:	or     esp,DWORD PTR [rdx+rcx*8]
   1400127b6:	adc    al,0x97
   1400127b8:	sbb    bh,al
   1400127ba:	xor    al,BYTE PTR [rbp+0xd5c2d73]
   1400127c0:	add    ah,al
   1400127c2:	mov    cr1,rdx
   1400127c5:	adc    ebx,ebp
   1400127c7:	(bad)  
   1400127c8:	adc    bh,BYTE PTR cs:[rcx+0x35]
   1400127cc:	test   DWORD PTR [rdi-0x34507829],ebx
   1400127d2:	sbb    BYTE PTR [rcx+0x76],dl
   1400127d5:	rex.WR jbe 0x1400127d6
   1400127d8:	xor    eax,0x1e5cb947
   1400127dd:	shl    DWORD PTR [rcx*2+0x1d02040b],cl
   1400127e4:	mov    dl,0xc4
   1400127e6:	cwde   
   1400127e7:	jbe    0x1400127eb
   1400127e9:	sub    DWORD PTR [rbx-0x46297e6],esi
   1400127ef:	test   DWORD PTR [rcx+rdx*8],0xb1d7e7cc
   1400127f6:	and    ecx,DWORD PTR [rdx]
   1400127f8:	(bad)  
   1400127f9:	xor    DWORD PTR [rbp-0x6a],edi
   1400127fc:	(bad)  
   1400127fd:	lahf   
   1400127fe:	icebp  
   1400127ff:	std    
   140012800:	pop    rsp
   140012801:	loopne 0x1400127c8
   140012803:	jmp    0x14001278e
   140012805:	add    ah,BYTE PTR [rdi]
   140012807:	mov    edx,0xa8009c01
   14001280c:	retf   
   14001280d:	(bad)  
   14001280e:	pop    rbp
   14001280f:	(bad)  
   140012810:	lahf   
   140012811:	iret   
   140012812:	add    eax,DWORD PTR [rax]
   140012814:	cld    
   140012815:	jle    0x140012856
   140012817:	rex.X movabs eax,ds:0x9d804e35b76edc10
   140012821:	cmp    eax,eax
   140012823:	scas   eax,DWORD PTR es:[rdi]
   140012824:	rex.WXB xor QWORD PTR [r10],rax
   140012827:	mov    dh,BYTE PTR [rcx]
   140012829:	mov    BYTE PTR [rbp-0x5e],dh
   14001282c:	cli    
   14001282d:	mov    BYTE PTR [rcx+0x46],cl
   140012830:	jbe    0x140012856
   140012832:	mov    eax,0x4698b8b8
   140012837:	lods   eax,DWORD PTR ds:[rsi]
   140012838:	add    eax,0x89dc678b
   14001283d:	out    0x3d,al
   14001283f:	mul    edi
   140012841:	scas   eax,DWORD PTR es:[rdi]
   140012842:	(bad)  
   140012843:	(bad)  
   140012844:	mov    bh,0xfb
   140012846:	rex.WRX
   140012847:	fbstp  TBYTE PTR gs:[rbx-0x36ec13d7]
   14001284e:	movabs al,ds:0x8d056da002c2d709
   140012857:	pop    rsp
   140012858:	data16 (bad) 
   14001285a:	sub    al,dh
   14001285c:	xlat   BYTE PTR ds:[rbx]
   14001285d:	(bad)  
   14001285e:	add    ah,al
   140012860:	ins    DWORD PTR es:[rdi],dx
   140012861:	cmp    edi,DWORD PTR [rdi-0x18]
   140012864:	push   rbx
   140012865:	adc    eax,0x34d30e7a
   14001286a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001286b:	repnz stc 
   14001286d:	cld    
   14001286e:	leave  
   14001286f:	rex.W and al,0xf2
   140012872:	adc    eax,0xfd11e33e
   140012877:	mov    dh,0x13
   140012879:	jb     0x1400128ec
   14001287b:	pop    rbp
   14001287c:	(bad)  
   14001287d:	mov    edx,0xd5a488ad
   140012882:	jle    0x140012892
   140012884:	fisub  WORD PTR [rsi]
   140012886:	or     dl,BYTE PTR cs:[rip+0x248bfbf]        # 0x14249e84c
   14001288d:	mov    dl,0x32
   14001288f:	push   rsp
   140012890:	(bad)  
   140012891:	(bad)  
   140012892:	(bad)  
   140012893:	add    BYTE PTR [rdx-0x26],ch
   140012896:	cdq    
   140012897:	sti    
   140012898:	fadd   QWORD PTR [rax]
   14001289a:	lods   al,BYTE PTR ds:[rsi]
   14001289b:	mov    dh,0x7e
   14001289d:	sbb    cl,BYTE PTR [rbp-0x66]
   1400128a0:	scas   al,BYTE PTR es:[rdi]
   1400128a1:	rex.WXB cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400128a3:	jg     0x1400128ec
   1400128a5:	rex.RXB (bad) 
   1400128a7:	cmp    bh,BYTE PTR [rdx]
   1400128a9:	cmp    ah,al
   1400128ab:	idiv   ebx
   1400128ad:	lods   eax,DWORD PTR ds:[rsi]
   1400128ae:	fisub  WORD PTR [rdx+0x9c1eaad]
   1400128b4:	(bad)  
   1400128b5:	(bad)  
   1400128b6:	jae    0x140012842
   1400128b8:	cmp    DWORD PTR [rdx],eax
   1400128ba:	(bad)  
   1400128bc:	nop
   1400128bd:	int3   
   1400128be:	pop    rdx
   1400128bf:	bnd jp 0x14001287f
   1400128c2:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   1400128c4:	rcl    DWORD PTR [rbp-0x6030180d],cl
   1400128ca:	rex.RXB int 0xbd
   1400128cd:	in     eax,0xc2
   1400128cf:	cs mov bl,0x74
   1400128d2:	fistp  WORD PTR gs:[rax-0xc4bc414]
   1400128d9:	jmp    0x16e7b75cb
   1400128de:	in     al,0x7c
   1400128e0:	pop    rbp
   1400128e1:	ins    BYTE PTR es:[rdi],dx
   1400128e2:	rcl    DWORD PTR [rdx+0x7b120676],1
   1400128e8:	or     al,0x5d
   1400128ea:	or     eax,0x31007ab4
   1400128ef:	mov    edx,0x45835c6e
   1400128f4:	(bad)  
   1400128f5:	jp     0x140012899
   1400128f7:	jmp    0x18ff0ff20
   1400128fc:	xchg   bh,al
   1400128fe:	(bad)  
   1400128ff:	jg     0x1400128dd
   140012901:	(bad)  
   140012902:	xor    al,0xed
   140012904:	in     eax,dx
   140012905:	rex.W and al,0x62
   140012908:	jmp    0x140012969
   14001290a:	mov    bh,0xf3
   14001290c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001290d:	gs (bad) 
   14001290f:	(bad)  
   140012910:	xchg   edi,eax
   140012911:	outs   dx,DWORD PTR ds:[rsi]
   140012912:	mov    bh,0xdf
   140012914:	mov    ds,WORD PTR [rax]
   140012916:	mov    BYTE PTR [rax+riz*1-0x62],r8b
   14001291b:	mov    ebx,0xe78a6b92
   140012920:	jno    0x14001298d
   140012922:	test   esi,edx
   140012924:	push   rbp
   140012925:	push   rbp
   140012926:	mov    ch,0x86
   140012928:	rcl    BYTE PTR [rsi],cl
   14001292a:	iret   
   14001292b:	loope  0x1400128c3
   14001292d:	add    DWORD PTR [rip+0xffffffff9fe7c21c],ecx        # 0xdfe8eb4f
   140012933:	pop    rsp
   140012934:	(bad)  
   140012935:	call   0x16862bd98
   14001293a:	pop    rbx
   14001293b:	fs (bad) 
   14001293d:	adc    ebx,ebp
   14001293f:	jae    0x1400129ab
   140012941:	push   0x6a
   140012943:	xor    dl,BYTE PTR [rsi]
   140012945:	mov    ecx,ebp
   140012947:	movabs ds:0xc5a767652b73f331,eax
   140012950:	in     eax,dx
   140012951:	(bad)  
   140012952:	iret   
   140012953:	mov    dl,0x63
   140012955:	nop
   140012956:	sbb    al,0x13
   140012958:	test   DWORD PTR [rsp+rdi*8+0x15],ebx
   14001295c:	sbb    ebp,0x4d
   14001295f:	mov    eax,0x2bc00416
   140012964:	fldl2e 
   140012966:	rcr    DWORD PTR [rdx+0x3d],0xf8
   14001296a:	(bad)  
   14001296b:	pop    rcx
   14001296c:	pop    rdx
   14001296d:	rex.RB
   14001296e:	rep ins DWORD PTR es:[rdi],dx
   140012970:	and    DWORD PTR [rcx],0x7f
   140012973:	rex.WX
   140012974:	fs mov bl,0xd9
   140012977:	mov    bl,0xb9
   140012979:	pop    rsp
   14001297a:	(bad)  
   14001297b:	cmp    eax,0xf3523d3d
   140012980:	cwde   
   140012981:	call   QWORD PTR [rdx]
   140012983:	fisubr DWORD PTR [rcx-0x1]
   140012986:	push   rsi
   140012987:	xchg   esi,eax
   140012988:	add    BYTE PTR [rdi],ch
   14001298a:	and    edx,DWORD PTR [rbx]
   14001298c:	rex.WX scas al,BYTE PTR es:[rdi]
   14001298e:	sub    DWORD PTR [rbp+0x5a],esp
   140012991:	mov    ah,0x95
   140012993:	mov    esp,DWORD PTR [rax+0x47]
   140012996:	or     BYTE PTR [rdx-0x3337ec86],dh
   14001299c:	xchg   esi,eax
   14001299d:	sub    eax,0x7069134
   1400129a2:	imul   esp,DWORD PTR [rdi+0x1a],0x3329664
   1400129a9:	push   rdi
   1400129aa:	lods   eax,DWORD PTR ds:[rsi]
   1400129ab:	pop    rdx
   1400129ac:	lea    edi,gs:[rcx]
   1400129af:	shr    dh,1
   1400129b1:	sahf   
   1400129b2:	loop   0x1400129f2
   1400129b4:	adc    bh,BYTE PTR [rax+0x3e]
   1400129b7:	pushf  
   1400129b8:	cmp    BYTE PTR [rip+0x7534ba62],ch        # 0x1b535e420
   1400129be:	imul   edi,edi,0xfe0f83e0
   1400129c4:	(bad)  
   1400129c5:	(bad)  
   1400129c6:	add    WORD PTR [rdx+0x39],si
   1400129ca:	xchg   edx,eax
   1400129cb:	mov    ecx,0x526fb298
   1400129d0:	push   rsi
   1400129d1:	mov    dh,0x9d
   1400129d3:	sbb    DWORD PTR [rdi+0x4a],ebp
   1400129d6:	(bad)  
   1400129d7:	(bad)  
   1400129d8:	rcl    BYTE PTR [rsi],1
   1400129da:	fwait
   1400129db:	mov    dh,0x6d
   1400129dd:	pop    rbp
   1400129de:	(bad)  
   1400129df:	imul   eax,DWORD PTR [rbp+0x0],0x1c
   1400129e3:	xlat   BYTE PTR ds:[rbx]
   1400129e4:	rex.X enter 0x74af,0xf9
   1400129e9:	rex.WR movabs ds:0xa4ecf67b3e1ead5a,al
   1400129f3:	movabs ds:0x59603eb5edede828,al
   1400129fc:	sub    ch,BYTE PTR [rsi-0x39c3a494]
   140012a02:	test   DWORD PTR [rsi+0x24],ebx
   140012a05:	add    bl,BYTE PTR [rcx+0x59]
   140012a08:	(bad)  
   140012a09:	mov    eax,0x2a6d5cbe
   140012a0e:	xchg   esi,eax
   140012a0f:	mov    bl,0x23
   140012a11:	or     al,0xbb
   140012a13:	jp     0x140012a87
   140012a15:	rcl    BYTE PTR [rbx],cl
   140012a17:	sub    eax,0x8ddbb701
   140012a1c:	(bad)  
   140012a1d:	(bad)  
   140012a1e:	(bad)  
   140012a1f:	and    eax,0xdad554f7
   140012a24:	sbb    BYTE PTR [rbx],dl
   140012a26:	leave  
   140012a27:	ror    BYTE PTR fs:[rdx],cl
   140012a2a:	(bad)  
   140012a2b:	jns    0x140012a69
   140012a2d:	(bad)  
   140012a2e:	hlt    
   140012a2f:	cmc    
   140012a30:	cmc    
   140012a31:	xor    eax,0x8e456f95
   140012a36:	mov    dl,0x67
   140012a38:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012a39:	jnp    0x140012aad
   140012a3b:	and    ah,al
   140012a3d:	out    dx,eax
   140012a3e:	shr    ch,cl
   140012a40:	jbe    0x140012a65
   140012a42:	sbb    al,0xe
   140012a44:	jrcxz  0x140012a12
   140012a46:	cdq    
   140012a47:	xor    edx,DWORD PTR [rdi]
   140012a49:	(bad)  
   140012a4a:	(bad)  
   140012a4b:	ds jl  0x140012a5e
   140012a4e:	lea    edi,[rsi]
   140012a50:	add    al,al
   140012a52:	push   rdx
   140012a53:	int    0xbc
   140012a55:	push   rdx
   140012a56:	or     eax,0x4a3d1b2f
   140012a5b:	adc    al,0x72
   140012a5d:	cs (bad) 
   140012a5f:	cmp    al,0xcf
   140012a61:	test   esi,ecx
   140012a63:	xchg   edi,eax
   140012a64:	jne    0x140012ac6
   140012a66:	mov    bl,0xfd
   140012a68:	and    edi,DWORD PTR [rdi]
   140012a6a:	or     eax,0x6d07002
   140012a6f:	(bad)  
   140012a70:	cmp    eax,0x9f2258f6
   140012a75:	iret   
   140012a76:	push   rbx
   140012a78:	rcl    al,1
   140012a7a:	adc    BYTE PTR [rax-0x4e],ch
   140012a7d:	shl    ebp,1
   140012a7f:	push   0x3b31d931
   140012a84:	retf   
   140012a85:	rex pop rsp
   140012a87:	xchg   edi,eax
   140012a88:	or     DWORD PTR [rcx-0x45],ebp
   140012a8b:	jmp    0x140012a80
   140012a8d:	div    BYTE PTR [rcx+0x31]
   140012a90:	push   rcx
   140012a91:	xchg   al,dl
   140012a93:	sub    al,BYTE PTR [rsi+0x60]
   140012a96:	mov    bh,0x2d
   140012a98:	cli    
   140012a99:	in     eax,0xa2
   140012a9b:	(bad)  
   140012a9c:	rex.X jae 0x140012aaf
   140012a9f:	repnz imul edx,DWORD PTR [rbx-0x67],0xfffffffa
   140012aa4:	test   BYTE PTR [rdi],ch
   140012aa6:	xchg   esi,eax
   140012aa7:	adc    eax,0x84941341
   140012aac:	ret    
   140012aad:	loope  0x140012a65
   140012aaf:	out    dx,eax
   140012ab0:	mov    al,0x95
   140012ab2:	mov    eax,esp
   140012ab4:	mov    DWORD PTR [rax-0x69e5fea4],eax
   140012aba:	rex.WR xlat BYTE PTR ds:[rbx]
   140012abc:	jne    0x140012ada
   140012abe:	cmp    al,0x78
   140012ac0:	lock mov al,0xa6
   140012ac3:	imul   ecx,ecx,0xc8e229fa
   140012ac9:	rex.WRXB retf 
   140012acb:	rcr    eax,1
   140012acd:	mov    dl,0x63
   140012acf:	xor    ch,ch
   140012ad1:	sub    eax,0xb71542f6
   140012ad6:	(bad)  
   140012ad9:	jmp    0x140012b55
   140012adb:	pop    rbx
   140012adc:	mov    edx,edi
   140012ade:	and    DWORD PTR [rax+0x2e5c08cf],eax
   140012ae4:	xlat   BYTE PTR ds:[rbx]
   140012ae5:	(bad)  
   140012ae6:	xchg   edx,eax
   140012ae7:	leave  
   140012ae8:	in     al,0x7b
   140012aea:	addr32 iret 
   140012aec:	sahf   
   140012aed:	rex.RB pop r15
   140012aef:	pop    rdi
   140012af0:	lahf   
   140012af1:	data16 fidivr DWORD PTR gs:[rbp-0x4c]
   140012af6:	jbe    0x140012ade
   140012af8:	mov    bh,0xac
   140012afa:	pushf  
   140012afb:	or     al,0xed
   140012afd:	mov    ?,ebx
   140012aff:	movsxd ebp,DWORD PTR [rbx]
   140012b01:	cmc    
   140012b02:	stos   DWORD PTR es:[rdi],eax
   140012b03:	xchg   edi,eax
   140012b04:	jnp    0x140012b62
   140012b06:	je     0x140012b3f
   140012b08:	add    BYTE PTR [rcx+0x57],bh
   140012b0b:	fs push rbp
   140012b0d:	push   rbp
   140012b0e:	lods   eax,DWORD PTR ds:[rsi]
   140012b0f:	icebp  
   140012b10:	inc    ch
   140012b12:	mov    edx,0x4a8aaaab
   140012b17:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012b18:	(bad)  
   140012b19:	retf   
   140012b1a:	xchg   edi,eax
   140012b1b:	(bad)  
   140012b1c:	(bad)  
   140012b1d:	popf   
   140012b1e:	xlat   BYTE PTR ds:[rbx]
   140012b1f:	fcmovnu st,st(3)
   140012b21:	imul   ecx,ebp,0x54
   140012b24:	(bad)  
   140012b25:	out    dx,al
   140012b26:	fld    st(4)
   140012b28:	ja     0x140012aeb
   140012b2a:	sub    eax,0x543a6a12
   140012b2f:	push   rbp
   140012b30:	(bad)  
   140012b31:	and    dl,BYTE PTR [rbp-0x1d565657]
   140012b37:	test   DWORD PTR [rbx],ecx
   140012b39:	(bad)  
   140012b3a:	ds rex.X sub eax,0x36b5ce88
   140012b41:	pop    rdi
   140012b42:	xchg   edi,eax
   140012b43:	or     DWORD PTR [rsi+0x576eff9d],edi
   140012b49:	(bad)  
   140012b4a:	adc    dh,dl
   140012b4c:	mov    ecx,0x498e2f6f
   140012b51:	(bad)  
   140012b52:	(bad)  
   140012b53:	test   eax,0xf2d6d105
   140012b58:	jne    0x140012b62
   140012b5a:	loopne 0x140012b8f
   140012b5c:	(bad)  
   140012b5d:	(bad)  
   140012b5e:	(bad)  
   140012b5f:	jnp    0x140012b0d
   140012b61:	in     al,0x72
   140012b63:	mov    ecx,0x7c7c7efe
   140012b68:	cld    
   140012b69:	jl     0x140012b8d
   140012b6b:	xchg   ecx,eax
   140012b6c:	sar    dl,0xf5
   140012b6f:	jmp    0x140012b08
   140012b71:	clc    
   140012b72:	mov    bl,0x32
   140012b74:	movabs eax,ds:0xaef3bb6afe89f715
   140012b7d:	(bad)  
   140012b7e:	pop    rdx
   140012b7f:	mov    ecx,0x16761c00
   140012b84:	mov    DWORD PTR [rax],edi
   140012b86:	add    BYTE PTR [rdi-0x39df31d4],ah
   140012b8c:	add    al,ah
   140012b8e:	addr32 mov eax,ds:0xbb689ed1
   140012b94:	pop    rdx
   140012b95:	lods   eax,DWORD PTR ds:[rsi]
   140012b96:	pop    rdx
   140012b97:	xor    edi,edi
   140012b99:	mov    BYTE PTR [rsi-0x7a],ch
   140012b9c:	pop    rbp
   140012b9d:	popf   
   140012b9e:	xlat   BYTE PTR fs:[rbx]
   140012ba0:	(bad)  
   140012ba1:	add    BYTE PTR [rdi+0x387083c7],cl
   140012ba7:	or     al,0xc3
   140012ba9:	xor    BYTE PTR [rax],dl
   140012bab:	mov    eax,ebp
   140012bad:	or     bh,bl
   140012baf:	imul   edi
   140012bb1:	(bad)  
   140012bb2:	fcomip st,st(5)
   140012bb4:	movabs eax,ds:0xd94288be13d681e7
   140012bbd:	push   0xffffffffffffffdd
   140012bbf:	rex.WRX movabs ds:0x5dd53131f953bd8b,rax
   140012bc9:	ss push rsi
   140012bcb:	rex.RB
   140012bcc:	rex.WXB movabs r8,0xc1e0e1e9f07015da
   140012bd6:	or     DWORD PTR [rcx-0x1f87e1f9],0xffffffb7
   140012bdd:	icebp  
   140012bde:	js     0x140012bdc
   140012be0:	(bad)  
   140012be1:	sti    
   140012be2:	jl     0x140012ba2
   140012be4:	rcl    BYTE PTR [rsi+0x19ac5b2d],1
   140012bea:	outs   dx,DWORD PTR ds:[rsi]
   140012beb:	in     al,dx
   140012bec:	xor    al,0x23
   140012bee:	sar    al,1
   140012bf0:	(bad)  
   140012bf1:	jns    0x140012c4e
   140012bf3:	mov    edx,0xaf80fc5d
   140012bf8:	mov    edi,DWORD PTR [rsi-0x20e71348]
   140012bfe:	addr32 ficom WORD PTR [ebx]
   140012c02:	(bad)  
   140012c03:	(bad)  
   140012c04:	rex.B in eax,dx
   140012c06:	(bad)  
   140012c07:	jmp    0x1ad6c01a6
   140012c0c:	out    0x5c,al
   140012c0e:	xor    DWORD PTR [rip+0xffffffff9a367c58],esp        # 0xda37a86c
   140012c14:	(bad)  
   140012c15:	pop    rsp
   140012c16:	(bad)  
   140012c17:	fidiv  WORD PTR [rbp+rbx*4+0x42]
   140012c1b:	movabs eax,ds:0x9a672d4d6cb97280
   140012c24:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012c25:	xor    eax,0x58b1502a
   140012c2a:	ins    BYTE PTR es:[rdi],dx
   140012c2b:	sbb    cl,BYTE PTR [rbx-0x5120a080]
   140012c31:	leave  
   140012c32:	mov    dl,0xde
   140012c34:	in     eax,0x17
   140012c36:	popf   
   140012c37:	popf   
   140012c38:	popf   
   140012c39:	xor    al,0xf3
   140012c3b:	push   rsp
   140012c3c:	stc    
   140012c3d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012c3e:	xchg   edi,eax
   140012c3f:	pop    rsi
   140012c40:	jp     0x140012c28
   140012c42:	fnsave [rdi-0x21]
   140012c45:	jge    0x140012c4a
   140012c47:	xor    eax,0xe8265fdf
   140012c4c:	pop    rsp
   140012c4d:	rex.W
   140012c4e:	rex.RB movabs eax,ds:0xf2132edf997c13b4
   140012c58:	push   rsi
   140012c59:	in     al,0xc2
   140012c5b:	add    eax,DWORD PTR [rcx+0x1898b3ad]
   140012c61:	sbb    al,0x2
   140012c63:	clc    
   140012c64:	mov    ecx,fs
   140012c66:	loopne 0x140012c29
   140012c68:	or     DWORD PTR [rbx+0x56ef77bb],0x66
   140012c6f:	data16 data16 imul BYTE PTR [rax]
   140012c73:	mov    al,BYTE PTR [rdx+0x5a371b8d]
   140012c79:	xor    ecx,esi
   140012c7b:	mov    BYTE PTR [rdx-0x10304bf6],al
   140012c81:	(bad)  
   140012c82:	test   DWORD PTR [rcx-0x42f66e32],ebx
   140012c88:	in     al,dx
   140012c89:	cmp    bh,ah
   140012c8b:	pop    rsi
   140012c8c:	lods   eax,DWORD PTR ds:[rsi]
   140012c8d:	and    BYTE PTR [rbx],dl
   140012c8f:	and    bh,BYTE PTR [rbx-0x4d9d8b22]
   140012c95:	(bad)  
   140012c96:	push   rax
   140012c97:	rex.WXB in al,dx
   140012c99:	xchg   ecx,eax
   140012c9a:	adc    DWORD PTR [rax],eax
   140012c9c:	push   r9
   140012c9e:	sbb    dl,BYTE PTR [rbx+0x73]
   140012ca1:	leave  
   140012ca2:	(bad)  
   140012ca3:	rex.XB xlat BYTE PTR ds:[rbx]
   140012ca5:	movabs eax,ds:0x36ad5ab05329a391
   140012cae:	lea    ecx,[rbx]
   140012cb0:	leave  
   140012cb1:	push   rbx
   140012cb2:	scas   al,BYTE PTR es:[rdi]
   140012cb3:	pop    rbx
   140012cb4:	mov    ecx,0xc269a638
   140012cb9:	out    dx,eax
   140012cba:	mul    DWORD PTR [rbx-0x65ec4c4d]
   140012cc0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012cc1:	(bad)  
   140012cc2:	jp     0x140012d3e
   140012cc4:	fidivr DWORD PTR [rbp+rbp*8-0x4b]
   140012cc8:	xlat   BYTE PTR ds:[rbx]
   140012cc9:	sahf   
   140012cca:	jge    0x140012cb3
   140012ccc:	popf   
   140012ccd:	ja     0x140012d2d
   140012ccf:	rex.RXB lods eax,DWORD PTR ds:[rsi]
   140012cd1:	fstp   QWORD PTR [rdi+0xd327082]
   140012cd7:	(bad)  
   140012cd8:	int    0x77
   140012cda:	xchg   ecx,eax
   140012cdb:	sbb    al,0xec
   140012cdd:	add    bh,BYTE PTR [rdx+0x32]
   140012ce0:	push   rbx
   140012ce1:	fmulp  st(6),st
   140012ce3:	mov    esp,0x2a87dd17
   140012ce8:	mov    ebx,0xdd828aef
   140012ced:	(bad)  
   140012cee:	add    DWORD PTR [rsi+rax*1+0x71],edi
   140012cf2:	call   0x136f8cec7
   140012cf7:	in     al,dx
   140012cf8:	fst    DWORD PTR [rbx]
   140012cfa:	mov    al,bh
   140012cfc:	jrcxz  0x140012d75
   140012cfe:	add    eax,eax
   140012d00:	mov    dh,0x6d
   140012d02:	fneni(8087 only) 
   140012d04:	jbe    0x140012cc1
   140012d06:	shl    edi,0xa
   140012d09:	push   0xffffffffcaeda9a5
   140012d0e:	mov    ah,0x23
   140012d10:	(bad)  
   140012d11:	sbb    ecx,eax
   140012d13:	enter  0xd62,0xad
   140012d17:	and    BYTE PTR [rsi],ah
   140012d19:	repz mov ah,0x5a
   140012d1c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012d1d:	jmp    0x140012cb1
   140012d1f:	mov    al,0xd9
   140012d21:	mov    ch,0xe3
   140012d23:	repz push rsi
   140012d25:	adc    DWORD PTR [rdx-0x3],ecx
   140012d28:	in     eax,0xd7
   140012d2a:	adc    bh,cl
   140012d2c:	sub    DWORD PTR [rdi+0x5c94d6cb],edx
   140012d32:	(bad)  
   140012d33:	push   0xffffffffffffffa3
   140012d35:	(bad)  
   140012d36:	(bad)  
   140012d37:	out    dx,eax
   140012d38:	rex.WRB sub BYTE PTR [r11-0x2e5920f1],r13b
   140012d3f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012d40:	shr    ecx,cl
   140012d42:	xor    al,0x12
   140012d44:	mov    DWORD PTR [rsi+rcx*2],eax
   140012d47:	lahf   
   140012d48:	ds std 
   140012d4a:	(bad)  
   140012d4b:	sub    ebp,DWORD PTR [rdi+0x1a22f2bc]
   140012d51:	jae    0x140012d4d
   140012d53:	mov    ch,0x12
   140012d55:	pop    rax
   140012d56:	cmp    esi,DWORD PTR [rbx+0x7f]
   140012d59:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012d5a:	cmp    DWORD PTR [rip+0x1271ebbb],0xc0899a00        # 0x15273191f
   140012d64:	and    DWORD PTR [rax+0x1d0e03cf],eax
   140012d6a:	cmp    dh,BYTE PTR [rax+rsi*8-0x7f]
   140012d6e:	(bad)  
   140012d6f:	(bad)  
   140012d70:	cmp    BYTE PTR [rsi],dh
   140012d72:	(bad)  
   140012d73:	(bad)  
   140012d74:	mov    edi,0x5c489135
   140012d79:	xlat   BYTE PTR ds:[rbx]
   140012d7a:	rcl    ebx,cl
   140012d7c:	add    ecx,0xffffffc1
   140012d7f:	rex.B retf 
   140012d81:	(bad)  
   140012d82:	add    eax,0x7600ba96
   140012d87:	ret    0x8edb
   140012d8a:	xor    BYTE PTR [rsp+rax*2+0x20],ah
   140012d8e:	fcmovnbe st,st(7)
   140012d90:	(bad)  
   140012d91:	xor    ah,BYTE PTR [rcx-0x4e]
   140012d94:	xor    edi,ebp
   140012d96:	(bad)
   140012d99:	adc    BYTE PTR [rax-0x55],ch
   140012d9c:	js     0x140012da0
   140012d9e:	add    eax,0x50332946
   140012da3:	jbe    0x140012e24
   140012da5:	xor    bl,ch
   140012da7:	leave  
   140012da8:	ins    DWORD PTR es:[rdi],dx
   140012da9:	movabs ds:0xb8829d44349e5fb4,al
   140012db2:	pop    rbx
   140012db3:	ret    
   140012db4:	add    eax,0x63119a9f
   140012db9:	mov    cl,0x18
   140012dbb:	loop   0x140012dae
   140012dbd:	clc    
   140012dbe:	in     al,dx
   140012dbf:	movabs eax,ds:0xfe378de37e9e8743
   140012dc8:	rex.RB xlat BYTE PTR ds:[rbx]
   140012dca:	jne    0x140012e3d
   140012dcc:	sub    al,0x9
   140012dce:	fldcw  WORD PTR [rdi-0x55]
   140012dd1:	rex.RB xor al,0xf7
   140012dd4:	(bad)
   140012dd7:	pop    rcx
   140012dd8:	push   rdx
   140012dd9:	rex.WRX
   140012dda:	sub    ax,0x2488
   140012dde:	jo     0x140012da5
   140012de0:	int    0xdc
   140012de2:	(bad)  
   140012de3:	add    DWORD PTR [rsi+rax*4-0xf],edi
   140012de7:	(bad)  
   140012de8:	pop    rbx
   140012de9:	outs   dx,DWORD PTR ds:[rsi]
   140012dea:	(bad)  
   140012deb:	out    dx,eax
   140012dec:	fidivr WORD PTR [rbp-0x6ad5af05]
   140012df2:	cli    
   140012df3:	(bad)  
   140012df4:	jrcxz  0x140012dd9
   140012df6:	jrcxz  0x140012e35
   140012df8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012df9:	imul   esp,DWORD PTR [rdx-0x15],0x8708add6
   140012e00:	ret    
   140012e01:	(bad)  
   140012e02:	rex.WR cmp spl,r11b
   140012e05:	pushf  
   140012e06:	mov    bh,0x13
   140012e08:	outs   dx,BYTE PTR ds:[rsi]
   140012e09:	fidiv  DWORD PTR [rsi-0x1dba06cd]
   140012e0f:	adc    bl,cl
   140012e11:	mov    bh,al
   140012e13:	or     BYTE PTR [rdx],dh
   140012e15:	ins    DWORD PTR es:[rdi],dx
   140012e16:	(bad)  
   140012e17:	or     dh,BYTE PTR [rdi+0x475e2eb8]
   140012e1d:	xor    al,0xd3
   140012e1f:	gs xbegin 0xc05793db
   140012e26:	in     al,dx
   140012e27:	jle    0x140012e6d
   140012e29:	add    dl,BYTE PTR [rsp+rbx*8-0x6e00843d]
   140012e30:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012e31:	shl    DWORD PTR [rdi-0x9],0x75
   140012e35:	mov    ecx,0x2244885c
   140012e3a:	or     BYTE PTR [rbp+0x52a54842],al
   140012e40:	cwde   
   140012e41:	pushf  
   140012e42:	pushf  
   140012e43:	and    r10b,BYTE PTR [rcx-0x40a80708]
   140012e4a:	cli    
   140012e4b:	(bad)  
   140012e4c:	jg     0x140012e48
   140012e4e:	loopne 0x140012dd3
   140012e50:	divps  xmm5,XMMWORD PTR [rbx-0x37f074f1]
   140012e57:	add    eax,0x8713ef99
   140012e5c:	xchg   ebp,eax
   140012e5d:	mov    bl,0x2b
   140012e5f:	outs   dx,DWORD PTR ds:[rsi]
   140012e60:	(bad)  
   140012e61:	loopne 0x140012e0f
   140012e63:	sub    al,0xb0
   140012e65:	(bad)  
   140012e66:	jg     0x140012ec3
   140012e68:	or     ebp,edi
   140012e6a:	mov    cl,BYTE PTR [rcx-0x40]
   140012e6d:	and    DWORD PTR [rax+0x7ade38cf],eax
   140012e73:	jmp    0x140012e22
   140012e75:	int3   
   140012e76:	add    ecx,DWORD PTR [rdi]
   140012e78:	cmp    al,0xb0
   140012e7a:	mov    edi,0xc60ead5a
   140012e7f:	(bad)  
   140012e81:	fwait
   140012e82:	mov    dl,0xd9
   140012e84:	sub    al,0x6
   140012e86:	(bad)  
   140012e87:	(bad)  
   140012e88:	mov    cl,0x6e
   140012e8a:	fnstsw WORD PTR [rdx]
   140012e8c:	stos   DWORD PTR es:[rdi],eax
   140012e8d:	and    ecx,DWORD PTR [rdi+rbx*4]
   140012e90:	and    BYTE PTR [rbp-0x47],0xd6
   140012e94:	add    BYTE PTR [rdi+0x3b],al
   140012e97:	mov    bh,0x80
   140012e99:	dec    DWORD PTR [rdx+0x64c789e7]
   140012e9f:	stc    
   140012ea0:	add    DWORD PTR [rdx-0x1c12ce0],esp
   140012ea6:	retf   
   140012ea7:	out    0x16,eax
   140012ea9:	adc    al,0xef
   140012eab:	ror    ebx,0x52
   140012eae:	mov    bl,0x1f
   140012eb0:	in     eax,0xfd
   140012eb2:	repz xor dh,BYTE PTR [rdx]
   140012eb5:	push   rdx
   140012eb6:	sub    BYTE PTR [rbp+0x33c4d64a],dl
   140012ebc:	in     al,0xe
   140012ebe:	sar    BYTE PTR [rip+0x2861a7a8],1        # 0x16862d66c
   140012ec4:	adc    al,0xb2
   140012ec6:	data16 adc BYTE PTR [rdx+0x4d22f178],bh
   140012ecd:	rex.RXB jg 0x140012ece
   140012ed0:	xchg   edi,eax
   140012ed1:	mov    edi,0x2fb7e5fc
   140012ed6:	pop    rsi
   140012ed7:	mov    esp,0x708011f8
   140012edc:	std    
   140012edd:	jb     0x140012f11
   140012edf:	xor    edi,DWORD PTR [rdi+0x39]
   140012ee2:	es mov edi,0xa76f4f9d
   140012ee8:	jmp    0x13807a1da
   140012eed:	add    edx,DWORD PTR [rsi-0x7b]
   140012ef0:	fild   QWORD PTR [rbx]
   140012ef2:	ret    0x6bd5
   140012ef5:	or     esi,DWORD PTR [rdx+0x70]
   140012ef8:	int    0xf1
   140012efa:	in     al,dx
   140012efb:	mov    bl,0xcf
   140012efd:	(bad)  
   140012efe:	lods   eax,DWORD PTR ds:[rsi]
   140012eff:	scas   al,BYTE PTR es:[rdi]
   140012f00:	jmp    0x140012f01
   140012f02:	xor    eax,0xbcef0e1c
   140012f07:	jmp    0x1b9b1cab2
   140012f0c:	repz data16 je 0x140012f85
   140012f10:	jne    0x140012f33
   140012f12:	fwait
   140012f13:	int    0x5a
   140012f15:	xchg   ebx,eax
   140012f16:	fwait
   140012f17:	repnz mov ah,0x5a
   140012f1a:	push   rcx
   140012f1b:	clc    
   140012f1c:	in     eax,dx
   140012f1d:	(bad)  
   140012f1e:	stc    
   140012f1f:	loopne 0x140012efc
   140012f21:	movabs ds:0x6cbad00165684125,al
   140012f2a:	rex
   140012f2b:	rex.WRX
   140012f2c:	ds (bad) 
   140012f2e:	(bad)  
   140012f2f:	out    dx,eax
   140012f30:	add    BYTE PTR [rsi+rcx*1],ah
   140012f33:	fldln2 
   140012f35:	cmc    
   140012f36:	jp     0x140012f49
   140012f38:	mov    DWORD PTR [rsp+rbp*2-0x23],eax
   140012f3c:	(bad)  
   140012f3d:	mov    esi,0x212a54af
   140012f42:	cdq    
   140012f43:	rex.WR
   140012f44:	ss sbb eax,0xafc3ef13
   140012f4a:	rex.WRB fld QWORD PTR [r15-0x1bbc1307]
   140012f51:	jbe    0x140012f57
   140012f53:	add    al,BYTE PTR [rcx]
   140012f55:	call   0x17a75be14
   140012f5a:	(bad)  
   140012f5b:	stc    
   140012f5c:	stc    
   140012f5d:	jns    0x140012fab
   140012f5f:	rex.WRXB
   140012f60:	rex.WRXB jge 0xffffbdf5
   140012f67:	jrcxz  0x140012f30
   140012f69:	(bad)  
   140012f6a:	dec    ebx
   140012f6c:	clc    
   140012f6d:	clc    
   140012f6e:	clc    
   140012f6f:	sub    al,0x1a
   140012f71:	mov    bl,0x4b
   140012f73:	sub    ebp,DWORD PTR [rax+0x4c]
   140012f76:	mov    eax,0xabb9a0a1
   140012f7b:	mov    ebx,0x6df3f6ca
   140012f80:	movabs al,ds:0x5f1459003cc4c659
   140012f89:	xchg   esi,eax
   140012f8a:	(bad)  
   140012f8b:	and    bl,dh
   140012f8d:	out    dx,eax
   140012f8e:	in     eax,dx
   140012f8f:	add    al,0x7f
   140012f91:	test   r8b,r12b
   140012f94:	adc    al,al
   140012f96:	lahf   
   140012f97:	sbb    esi,esi
   140012f99:	in     eax,dx
   140012f9a:	fist   DWORD PTR [rdi]
   140012f9c:	xor    al,0xc
   140012f9e:	jrcxz  0x140012f8f
   140012fa0:	sub    edx,DWORD PTR [rbp-0x60c19c36]
   140012fa6:	outs   dx,DWORD PTR ds:[rsi]
   140012fa7:	fst    st(6)
   140012fa9:	lods   eax,DWORD PTR ds:[rsi]
   140012faa:	pop    rbx
   140012fab:	jno    0x140012f88
   140012fad:	ins    DWORD PTR es:[rdi],dx
   140012fae:	mov    bh,0x61
   140012fb0:	int    0x9a
   140012fb2:	xor    eax,0x988b1628
   140012fb7:	lahf   
   140012fb8:	lahf   
   140012fb9:	xchg   DWORD PTR [rsi+0x2bcf9669],esp
   140012fbf:	imul   esp,DWORD PTR [rip+0xffffffffe6fca710],0x63        # 0x126fdd6d6
   140012fc6:	or     eax,0x65e0b270
   140012fcb:	adc    BYTE PTR fs:[rip+0x3e481455],al        # 0x17e494427
   140012fd2:	(bad)  
   140012fd4:	(bad)  
   140012fd5:	mov    BYTE PTR [rdi-0x23],0x1
   140012fd9:	rcl    ah,1
   140012fdb:	fsub   QWORD PTR [rsi]
   140012fdd:	and    eax,DWORD PTR [rax]
   140012fdf:	jle    0x14001300f
   140012fe1:	lods   eax,DWORD PTR ds:[rsi]
   140012fe2:	(bad)  
   140012fe3:	cs shl DWORD PTR cs:[rcx+r13*1],cl
   140012fe9:	fnop   
   140012feb:	xor    eax,0xbf685d79
   140012ff0:	xlat   BYTE PTR ds:[rbx]
   140012ff1:	jmp    0x140012fa8
   140012ff3:	es lahf 
   140012ff5:	(bad)  
   140012ff6:	xor    al,0xd
   140012ff8:	movabs ds:0xe7cf839b9b98a3a3,eax
   140013001:	sub    ecx,DWORD PTR [rdi-0xf437374]
   140013007:	repnz retf 
   140013009:	(bad)  
   14001300a:	(bad)  
   14001300b:	xchg   ebx,eax
   14001300c:	retf   
   14001300d:	in     eax,0x8a
   14001300f:	cmc    
   140013010:	fist   DWORD PTR [rbx-0x1e]
   140013013:	adc    edx,0x119166
   140013019:	(bad)  
   14001301a:	iret   
   14001301b:	jp     0x140013039
   14001301d:	sub    al,0x15
   14001301f:	outs   dx,BYTE PTR ds:[rsi]
   140013020:	mov    ebx,0xc72f3ea8
   140013025:	iret   
   140013026:	xchg   edi,eax
   140013027:	(bad)  
   140013028:	adc    eax,0xc2dbfb36
   14001302d:	and    DWORD PTR [rax-0x703acc1],eax
   140013033:	(bad)  
   140013034:	(bad)  
   140013035:	mov    esi,0xa7cd34ce
   14001303a:	jne    0x140013099
   14001303c:	(bad)  
   14001303d:	cmp    ebx,DWORD PTR [rdi-0x64b27831]
   140013043:	ss loope 0x140012fe4
   140013046:	jnp    0x140013036
   140013048:	rcr    edx,0xb5
   14001304b:	imul   ebp,DWORD PTR [rbp-0x162c6b27],0xffffffb4
   140013052:	in     eax,0xe7
   140013054:	repnz sub eax,ebx
   140013057:	(bad)  
   140013058:	xor    DWORD PTR [rdx],eax
   14001305a:	(bad)
   14001305d:	rex.WRB sub BYTE PTR fs:[r13-0x31418234],0x97
   140013066:	jbe    0x14001306c
   140013068:	and    BYTE PTR [rsi],bl
   14001306a:	jmp    0x140013056
   14001306c:	(bad)  
   14001306d:	mov    dl,0xf6
   14001306f:	leave  
   140013070:	out    dx,al
   140013071:	rcr    ebp,0x83
   140013074:	rex.X movabs eax,ds:0x27a13272a2067560
   14001307e:	jb     0x140013071
   140013080:	sti    
   140013081:	std    
   140013082:	xor    al,0x93
   140013084:	xor    al,0x32
   140013086:	cdq    
   140013087:	or     al,0xa2
   140013089:	shr    DWORD PTR [rax],1
   14001308b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001308c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001308d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001308e:	sub    DWORD PTR [rdi],edi
   140013090:	loopne 0x1400130c9
   140013092:	out    dx,eax
   140013093:	mov    esp,0x7cffcef3
   140013098:	jmp    0x140013047
   14001309a:	mov    bh,0xde
   14001309c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001309d:	push   rdi
   14001309e:	and    BYTE PTR [rbp-0x753463e6],0xa8
   1400130a5:	loope  0x14001310c
   1400130a7:	pop    rdx
   1400130a8:	pop    rdi
   1400130a9:	jbe    0x140013049
   1400130ab:	push   rbp
   1400130ac:	pop    rbp
   1400130ad:	fsubr  DWORD PTR [rbx+0x7a]
   1400130b0:	xchg   ebx,eax
   1400130b1:	xchg   ebp,eax
   1400130b2:	imul   esp,DWORD PTR [rdi-0x1a],0xdff3227f
   1400130b9:	scas   al,BYTE PTR es:[rdi]
   1400130ba:	jb     0x1400130ca
   1400130bc:	dec    BYTE PTR [rax+rsi*8+0x3ccf33cc]
   1400130c3:	(bad)  
   1400130c4:	(bad)  
   1400130c5:	out    0xf7,al
   1400130c7:	retf   
   1400130c8:	in     eax,0xf2
   1400130ca:	in     eax,dx
   1400130cb:	shl    DWORD PTR [rax-0x30],0xb7
   1400130cf:	gs retf 
   1400130d1:	(bad)  
   1400130d2:	fdivr  QWORD PTR [rdx-0x15]
   1400130d5:	lods   eax,DWORD PTR ds:[rsi]
   1400130d6:	pop    rax
   1400130d7:	mov    edi,0xb5543d7e
   1400130dc:	lea    edx,ss:[rbp+0x3a]
   1400130e0:	popf   
   1400130e1:	rex.RX
   1400130e2:	ss fwait
   1400130e4:	ins    DWORD PTR es:[rdi],dx
   1400130e5:	(bad)  
   1400130e6:	fisttp WORD PTR [rsi+0x29]
   1400130e9:	scas   al,BYTE PTR es:[rdi]
   1400130ea:	cmp    BYTE PTR [rax+riz*2],0xc8
   1400130ee:	jg     0x1400130b5
   1400130f0:	jne    0x140013074
   1400130f2:	sbb    BYTE PTR [rbx+rdx*4+0x9],dh
   1400130f6:	stos   DWORD PTR es:[rdi],eax
   1400130f7:	mov    eax,0xa28767cd
   1400130fc:	jrcxz  0x140013152
   1400130fe:	xchg   BYTE PTR [rdx+0x41c8cb44],bh
   140013104:	xor    al,0xed
   140013106:	retf   
   140013107:	in     eax,0x32
   140013109:	xor    bl,BYTE PTR [rcx-0xf26ecb4]
   14001310f:	fnstcw WORD PTR [rcx+rax*4+0x5a]
   140013113:	(bad)  
   140013114:	pop    rdi
   140013115:	sub    BYTE PTR [rdx+rsi*4],dl
   140013118:	cli    
   140013119:	push   rsi
   14001311a:	push   0xffffffff8989869a
   14001311f:	or     DWORD PTR [rsp+rcx*2+0x4c],ecx
   140013123:	rex xlat BYTE PTR ds:[rbx]
   140013125:	jne    0x14001316a
   140013127:	push   rbp
   140013128:	(bad)  
   140013129:	mov    ebx,DWORD PTR [rsi-0x51]
   14001312c:	test   DWORD PTR [rdi],0xfe1fc3f
   140013132:	cmpxchg bh,al
   140013135:	mov    dl,0x93
   140013137:	or     DWORD PTR [rcx-0x65],edx
   14001313a:	mov    eax,edx
   14001313c:	or     bh,BYTE PTR cs:[rbp+0x3b]
   140013140:	add    dl,BYTE PTR [rax-0x65d90967]
   140013146:	test   esi,edi
   140013148:	(bad)  
   140013149:	or     DWORD PTR [rsi],edi
   14001314b:	shl    DWORD PTR [rcx],0x80
   14001314e:	iret   
   14001314f:	add    DWORD PTR [rsi-0x4a960582],ebx
   140013155:	pop    rdx
   140013156:	lods   eax,DWORD PTR ds:[rsi]
   140013157:	ficom  WORD PTR [rcx+rbp*4+0x54]
   14001315b:	out    dx,al
   14001315c:	push   rdi
   14001315d:	push   rbp
   14001315e:	cmc    
   14001315f:	fstp   TBYTE PTR [rdx-0x505e8052]
   140013165:	scas   eax,DWORD PTR es:[rdi]
   140013166:	rex.WRXB sbb rax,0x7541c1c
   14001316c:	(bad)  
   14001316d:	(bad)  
   14001316e:	xchg   esp,eax
   14001316f:	int    0x9b
   140013171:	(bad)  
   140013172:	movabs ds:0xd1a687511acfafaf,eax
   14001317b:	out    0x2,al
   14001317d:	ret    
   14001317e:	int    0x7e
   140013180:	mov    ebx,0x1e406254
   140013185:	fst    DWORD PTR [rdi]
   140013187:	test   ebx,edx
   140013189:	outs   dx,BYTE PTR ds:[rsi]
   14001318a:	fwait
   14001318b:	mov    ebx,0xe8023205
   140013190:	call   0x13a9be27d
   140013195:	rex.R ja 0x1400131da
   140013198:	mov    esp,0x581861a7
   14001319d:	pop    rsp
   14001319e:	pop    rsp
   14001319f:	mov    ah,0x82
   1400131a1:	xor    DWORD PTR [rcx+riz*8],0x4c1e8d2c
   1400131a8:	in     al,0x37
   1400131aa:	(bad)  
   1400131ab:	(bad)  
   1400131ac:	xchg   DWORD PTR [rcx+0x65cb1999],ebx
   1400131b2:	shl    BYTE PTR [rbp-0x3],1
   1400131b5:	movsxd edx,DWORD PTR [rdi+0x5573f5cb]
   1400131bb:	push   rbp
   1400131bc:	rex.WRXB add r11,QWORD PTR [r8]
   1400131bf:	cli    
   1400131c0:	ror    DWORD PTR [rdi-0x436c6b82],1
   1400131c6:	push   rdx
   1400131c7:	add    eax,0x6513210d
   1400131cc:	test   BYTE PTR [rsi+0x155d6c29],cl
   1400131d2:	mov    cs,WORD PTR [rbx+0x6e89e7]
   1400131d8:	pop    rdi
   1400131d9:	xchg   edi,eax
   1400131da:	imul   edi,edx,0x4f82e6b
   1400131e0:	xchg   DWORD PTR [rax],eax
   1400131e2:	ds addr32 cwde 
   1400131e5:	sahf   
   1400131e6:	sahf   
   1400131e7:	jbe    0x140013208
   1400131e9:	cmp    dh,BYTE PTR [rax+rbp*2+0x57]
   1400131ed:	cmp    al,0x1e
   1400131ef:	(bad)  
   1400131f0:	fistp  DWORD PTR [rax+0x2c]
   1400131f3:	imul   BYTE PTR [rip+0xffffffff9dc35555]        # 0xddc4874e
   1400131f9:	popf   
   1400131fa:	popf   
   1400131fb:	out    dx,al
   1400131fc:	sbb    ebp,DWORD PTR [rdi-0x44]
   1400131ff:	push   rcx
   140013200:	fnstenv [rcx+0x6e360763]
   140013206:	fmul   QWORD PTR [rax-0x2be94790]
   14001320c:	cs xchg ebp,eax
   14001320e:	rex.WX shl BYTE PTR [r9*1-0x6531a347],1
   140013216:	mov    bp,WORD PTR [rsp+rax*1]
   14001321a:	cmp    esi,DWORD PTR [rdx]
   14001321c:	add    BYTE PTR [rsi-0x48a0c1f6],dl
   140013222:	mov    bl,0x2
   140013224:	mov    eax,0x3f0a2fd9
   140013229:	sub    eax,0x54e2c024
   14001322e:	pop    rdi
   14001322f:	jl     0x1400131c9
   140013231:	lock jb 0x1400131ed
   140013234:	fdiv   QWORD PTR [rdx+rcx*4]
   140013237:	adc    BYTE PTR [rbp+0x22],cl
   14001323a:	sbb    cl,BYTE PTR [rsi+rax*1]
   14001323d:	push   rcx
   14001323e:	lods   eax,DWORD PTR ds:[rsi]
   14001323f:	push   rsi
   140013240:	push   rcx
   140013241:	sub    al,0x16
   140013243:	xor    DWORD PTR [rip+0xffffffff974b8d3d],edi        # 0xd74cbf86
   140013249:	cs pop rcx
   14001324b:	icebp  
   14001324c:	adc    BYTE PTR [rax],al
   14001324e:	and    eax,0xa6f5cb97
   140013253:	stos   BYTE PTR es:[rdi],al
   140013254:	stos   BYTE PTR es:[rdi],al
   140013255:	mov    edi,0xb5f55551
   14001325a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001325b:	sahf   
   14001325c:	jp     0x140013288
   14001325e:	mov    ebx,0x8adad7c2
   140013263:	adc    BYTE PTR [rbx+rdi*8-0x26],ah
   140013267:	ins    DWORD PTR es:[rdi],dx
   140013268:	scas   eax,DWORD PTR es:[rdi]
   140013269:	and    al,0x9a
   14001326b:	jg     0x140013242
   14001326d:	test   DWORD PTR [rsi-0x307fde3d],ebx
   140013273:	xor    DWORD PTR [rsi-0xa4dc6e4],ecx
   140013279:	shl    BYTE PTR [rbp+0x1b1cdf4b],cl
   14001327f:	sbb    edi,DWORD PTR [rbx+0x38]
   140013282:	popf   
   140013283:	rex.WRX out dx,eax
   140013285:	jb     0x140013242
   140013287:	fisttp QWORD PTR [rdx+0x28]
   14001328a:	adc    al,0x52
   14001328c:	ss ins DWORD PTR es:[rdi],dx
   14001328e:	fiadd  DWORD PTR [rbx+rbx*2+0x1b05b96e]
   140013295:	ss ins BYTE PTR es:[rdi],dx
   140013297:	rex outs dx,DWORD PTR ds:[rsi]
   140013299:	outs   dx,DWORD PTR ds:[rsi]
   14001329a:	scas   eax,DWORD PTR es:[rdi]
   14001329b:	and    eax,0xa0efd4e4
   1400132a0:	push   rax
   1400132a1:	sub    BYTE PTR [rax+0x79],bl
   1400132a4:	div    DWORD PTR [rdx-0x12f78c67]
   1400132aa:	mov    ah,0x3e
   1400132ac:	(bad)  
   1400132ad:	sti    
   1400132ae:	gs sti 
   1400132b0:	(bad)
   1400132b3:	fucomip st,st(7)
   1400132b5:	mov    bh,0x86
   1400132b7:	icebp  
   1400132b8:	(bad)  
   1400132b9:	pop    rbx
   1400132ba:	or     dl,BYTE PTR [rax*2-0xcf7794f]
   1400132c1:	js     0x1400132ff
   1400132c3:	lock sti 
   1400132c5:	std    
   1400132c6:	(bad)  
   1400132c7:	cwde   
   1400132c8:	add    BYTE PTR [rcx+0x53530e5c],bh
   1400132ce:	push   rbx
   1400132cf:	mov    BYTE PTR [rsi-0x5d],al
   1400132d2:	rex.W and al,0x12
   1400132d5:	enter  0x72e5,0x34
   1400132d9:	or     edx,ecx
   1400132db:	rex.R pop rbp
   1400132dd:	lock jg 0x1400132d1
   1400132e0:	int3   
   1400132e1:	xor    ecx,edi
   1400132e3:	pushf  
   1400132e4:	mov    edx,0x95b8af06
   1400132e9:	mov    ebx,0x397b6ad0
   1400132ee:	sar    esp,1
   1400132f0:	jbe    0x1400132b9
   1400132f2:	scas   al,BYTE PTR es:[rdi]
   1400132f3:	or     bl,BYTE PTR [rdx+rax*1]
   1400132f6:	clc    
   1400132f7:	or     eax,DWORD PTR [rax+0x22]
   1400132fa:	xchg   ecx,eax
   1400132fb:	lock jl 0x1400132f6
   1400132fe:	loope  0x140013287
   140013300:	mov    ebx,0xbde8d1a3
   140013305:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013306:	push   rdx
   140013307:	imul   edx,ebx,0x26cccccc
   14001330d:	rex.WRB shl QWORD PTR [r14-0x4e265966],cl
   140013314:	jp     0x14001330b
   140013316:	push   0x6c
   140013318:	fnstsw WORD PTR [rdx-0x20202eb]
   14001331e:	mov    BYTE PTR [rdx+riz*1-0x78],al
   140013322:	and    r9b,BYTE PTR [rax]
   140013325:	xchg   ebx,eax
   140013327:	rex.WRB ret 
   140013329:	outs   dx,DWORD PTR ds:[rsi]
   14001332a:	sar    DWORD PTR [rax],cl
   14001332c:	jns    0x1400133aa
   14001332e:	(bad)  
   14001332f:	sub    eax,0xdc24c8d2
   140013334:	jl     0x1400133ac
   140013336:	sbb    eax,0x63100f1e
   14001333b:	add    eax,DWORD PTR [rax-0x5d]
   14001333e:	fstp   QWORD PTR [rsi-0x34]
   140013341:	cmp    eax,0xf7bea0
   140013346:	(bad)  
   140013347:	rex.RX jrcxz 0x1400132eb
   14001334a:	jmp    0x140013363
   14001334c:	or     al,BYTE PTR [rip+0xffffffffe479f3e4]        # 0x1247b2736
   140013352:	jb     0x14001338d
   140013354:	in     al,0x72
   140013356:	cmp    DWORD PTR [rsp+rbp*1],ebp
   140013359:	sub    al,0x20
   14001335b:	xchg   ecx,eax
   14001335c:	rex.W and BYTE PTR [rbp+0x2850a34e],bl
   140013363:	add    DWORD PTR fs:[rcx+rdi*4+0x5c],ecx
   140013368:	scas   al,BYTE PTR es:[rdi]
   140013369:	sub    DWORD PTR [rbp+0x55],edx
   14001336c:	rex.RXB push r13
   14001336e:	push   rbp
   14001336f:	cmp    eax,0x7ddde000
   140013374:	sti    
   140013375:	imul   BYTE PTR [rbp+0x14afdb54]
   14001337b:	push   rdi
   14001337c:	pop    rbx
   14001337d:	xchg   BYTE PTR [rsi+0x3873d0b9],ch
   140013383:	add    al,0xf0
   140013385:	(bad)  
   140013386:	mov    BYTE PTR [rsi+rsi*1-0x15],ch
   14001338a:	fwait
   14001338b:	cwde   
   14001338c:	cwde   
   14001338d:	pop    rax
   14001338e:	xor    esi,DWORD PTR [rip+0x34677535]        # 0x17468a8c9
   140013394:	sbb    bl,ch
   140013396:	jne    0x140013379
   140013398:	ret    0xfb85
   14001339b:	or     eax,DWORD PTR [rbp+0x10016c2]
   1400133a1:	mov    edi,0xdfbf0fdf
   1400133a6:	imul   edx,edi
   1400133a9:	mov    ebx,DWORD PTR [rsi+0x5bac1e9e]
   1400133af:	mov    bh,0xe
   1400133b1:	mov    ebp,0xeee8bdbd
   1400133b6:	out    dx,al
   1400133b7:	rex.RX push rdi
   1400133b9:	push   rdi
   1400133ba:	(bad)  
   1400133bb:	jp     0x140013438
   1400133bd:	jnp    0x1400133ec
   1400133bf:	sub    eax,0xcef3aadc
   1400133c4:	jb     0x140013406
   1400133c6:	(bad)  
   1400133c7:	rex.WRB movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400133c9:	movabs ds:0x48b366c89f15baeb,al
   1400133d2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400133d3:	push   rdx
   1400133d4:	xchg   esi,eax
   1400133d5:	and    BYTE PTR [rdi+0x32],0x19
   1400133d9:	stos   DWORD PTR es:[rdi],eax
   1400133da:	rex.RXB pop r15
   1400133dc:	popf   
   1400133dd:	ins    BYTE PTR es:[rdi],dx
   1400133de:	je     0x1400133e0
   1400133e0:	out    0x5c,eax
   1400133e2:	xlat   BYTE PTR cs:[rbx]
   1400133e4:	or     DWORD PTR [rbp+0x55],edx
   1400133e7:	rex.WRXB movabs r8,0xf73ccca28a83ae5c
   1400133f1:	fdiv   QWORD PTR [rbx-0xe]
   1400133f4:	cmp    al,0xe1
   1400133f6:	rex.WRXB paddusb mm3,QWORD PTR [r13-0x60]
   1400133fb:	ins    DWORD PTR es:[rdi],dx
   1400133fc:	sbb    DWORD PTR [rsi],edi
   1400133fe:	push   rbp
   1400133ff:	mov    r15b,0x83
   140013402:	rex.XB add BYTE PTR [r14],cl
   140013405:	nop
   140013406:	rex.W and al,0xfc
   140013409:	rex.XB
   14001340a:	rex.XB
   14001340b:	sbb    esi,DWORD PTR [r13+r11*2-0x41]
   140013410:	and    eax,0x3cde8d1a
   140013415:	ss test BYTE PTR ss:[rip+0x32653700],0x99        # 0x172666b1e
   14001341e:	sahf   
   14001341f:	(bad)  
   140013421:	sbb    BYTE PTR [rsp+rdx*1+0x5],dl
   140013425:	add    DWORD PTR [rax-0x40],0x4d4b5aea
   14001342c:	push   0x5d
   14001342e:	pop    rbp
   14001342f:	pop    rbp
   140013430:	(bad)  
   140013431:	inc    BYTE PTR [rax+0x20]
   140013434:	add    BYTE PTR [rax+0x20],0x60
   140013438:	rex.WRB cmp r13b,BYTE PTR [r10-0x3c172d8]
   14001343f:	xchg   BYTE PTR [rcx+0x40],ah
   140013442:	shl    DWORD PTR [rbx+rcx*8],cl
   140013445:	adc    ch,BYTE PTR [rax]
   140013447:	(bad)  
   140013448:	mov    edx,DWORD PTR [rsi+0x42]
   14001344b:	mov    fs,WORD PTR [rsi+0xd34d069]
   140013451:	stc    
   140013452:	jl     0x140013472
   140013454:	test   DWORD PTR [rdx-0x3f],eax
   140013457:	sbb    ah,dl
   140013459:	fwait
   14001345a:	lods   al,BYTE PTR ds:[rsi]
   14001345b:	or     eax,DWORD PTR [rax]
   14001345d:	jo     0x140013418
   14001345f:	pop    rsp
   140013460:	mov    edx,0xaa8baaaa
   140013465:	stos   BYTE PTR es:[rdi],al
   140013466:	jle    0x140013410
   140013468:	stos   BYTE PTR es:[rdi],al
   140013469:	(bad)  
   14001346a:	sbb    DWORD PTR [rax],eax
   14001346c:	(bad)  
   14001346d:	push   rsp
   14001346e:	push   rbp
   14001346f:	cmp    eax,0xf0ca28a9
   140013474:	repz iret 
   140013476:	(bad)  
   140013477:	jg     0x14001342e
   140013479:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001347a:	xchg   esi,eax
   14001347b:	sti    
   14001347c:	mov    eax,DWORD PTR [rdx-0x69f1ffbd]
   140013482:	and    BYTE PTR [rbp-0x3cf346b6],dl
   140013488:	or     BYTE PTR [rbp+0x75667339],bl
   14001348e:	test   eax,0x30d5ba54
   140013493:	mov    ebp,cs
   140013495:	addr32 iret 
   140013497:	sahf   
   140013498:	pop    rbp
   140013499:	xchg   ebx,eax
   14001349a:	int    0x66
   14001349c:	(bad)  
   14001349d:	cdq    
   14001349e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001349f:	mov    ecx,0x3ecd34d9
   1400134a4:	pop    rbp
   1400134a5:	xlat   BYTE PTR ds:[rbx]
   1400134a6:	jge    0x14001346d
   1400134a8:	(bad)
   1400134ad:	(bad)  
   1400134ae:	push   0xffffffffffffffb5
   1400134b0:	(bad)  
   1400134b1:	xor    cl,BYTE PTR [rbx+rax*2]
   1400134b4:	push   rbp
   1400134b5:	push   rbp
   1400134b6:	push   rbp
   1400134b7:	and    eax,0xdd75d721
   1400134bc:	rex.WX
   1400134bd:	rex.RX push rdx
   1400134bf:	adc    al,0xc5
   1400134c1:	retf   0xa7f3
   1400134c4:	(bad)  
   1400134c5:	(bad)  
   1400134c6:	mov    ecx,0x29ea365c
   1400134cb:	mov    edx,0x1528a286
   1400134d0:	push   rbp
   1400134d1:	push   rbp
   1400134d2:	rex.WRB push r13
   1400134d4:	push   rbp
   1400134d5:	sub    ebp,DWORD PTR [rdx+0x5554c6aa]
   1400134db:	lea    eax,[rdx]
   1400134dd:	mov    BYTE PTR [rbx+0x28ae3aaa],ch
   1400134e3:	retf   0x4505
   1400134e6:	push   rcx
   1400134e7:	add    DWORD PTR cs:[rax],ebx
   1400134ea:	jnp    0x1400134cd
   1400134ec:	test   DWORD PTR [rdi],edx
   1400134ee:	cs (bad) 
   1400134f0:	jmp    0x153e8ffd3
   1400134f5:	(bad)  
   1400134f6:	add    DWORD PTR [rax],edi
   1400134f8:	pop    rax
   1400134f9:	ss push rdx
   1400134fb:	test   eax,0x43a00294
   140013500:	push   rbp
   140013501:	push   rbp
   140013502:	rex.WRXB
   140013503:	es xchg ebx,eax
   140013505:	icebp  
   140013506:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140013507:	shr    ecx,cl
   140013509:	cs rex.RB push r9
   14001350c:	jl     0x1400134b6
   14001350e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001350f:	retf   
   140013510:	jp     0x14001355e
   140013512:	ror    DWORD PTR [rcx+rax*1],cl
   140013515:	push   rax
   140013516:	push   rsp
   140013517:	push   rbp
   140013518:	lods   eax,DWORD PTR ds:[rsi]
   140013519:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001351a:	shr    DWORD PTR [rcx+0x77],cl
   14001351d:	sub    dl,BYTE PTR [rbp-0x5d75d7f6]
   140013523:	mov    eax,0xbaf32e5c
   140013528:	jmp    0x1400134d8
   14001352a:	retf   
   14001352b:	test   eax,0x55aaa
   140013530:	xchg   edi,eax
   140013531:	retf   
   140013532:	push   rbp
   140013533:	cmp    DWORD PTR [rdx-0xc],edi
   140013536:	test   al,0x76
   140013538:	loop   0x1400134fe
   14001353a:	mov    DWORD PTR [rdx+0x28],ebp
   14001353d:	adc    al,0xca
   14001353f:	mov    ebx,0xa29cae5c
   140013544:	sub    BYTE PTR [rip+0x51457900],al        # 0x19146ae4a
   14001354a:	or     bh,BYTE PTR [rdi]
   14001354c:	stc    
   14001354d:	leave  
   14001354e:	rex.WRXB (bad) 
   140013550:	(bad)  
   140013551:	mov    sp,0x703
   140013555:	(bad)  
   140013556:	sbb    al,0x38
   140013558:	jo     0x14001353a
   14001355a:	rol    BYTE PTR [rcx+0x1c0e0703],0x38
   140013561:	jo     0x140013543
   140013563:	rol    BYTE PTR [rcx+0x1c0e0703],0x38
   14001356a:	jo     0x14001354c
   14001356c:	rol    BYTE PTR [rcx+0x1c0e0703],0x38
   140013573:	jo     0x140013555
   140013575:	rol    BYTE PTR [rcx+0x1c0e0703],0x38
   14001357c:	jo     0x14001355e
   14001357e:	rol    BYTE PTR [rcx+0x1c0e0703],0x38
   140013585:	jo     0x140013567
   140013587:	rol    BYTE PTR [rcx+0x1c0e0703],0x38
   14001358e:	jo     0x140013570
   140013590:	rol    BYTE PTR [rcx+0x1c0e0703],0x38
   140013597:	jo     0x140013579
   140013599:	rol    BYTE PTR [rcx+0x1c0e0703],0x38
   1400135a0:	jo     0x140013582
   1400135a2:	rol    BYTE PTR [rcx+0x1c0e0703],0x38
   1400135a9:	jo     0x14001358b
   1400135ab:	rol    BYTE PTR [rcx+0x1c0e0703],0x38
   1400135b2:	jo     0x140013594
   1400135b4:	rol    BYTE PTR [rcx+0x1c0e0703],0x38
   1400135bb:	jo     0x14001359d
   1400135bd:	rol    BYTE PTR [rcx+0x1c0e0703],0x38
   1400135c4:	jo     0x1400135a6
   1400135c6:	rol    cl,0x15
   1400135c9:	loopne 0x1400135ca
   1400135cb:	add    eax,DWORD PTR [rsi]
   1400135cd:	shl    eax,0x29
   1400135d0:	xor    ecx,DWORD PTR [rbx+0x68]
   1400135d3:	inc    BYTE PTR [rax]
   1400135d5:	add    BYTE PTR [rax],al
   1400135d7:	add    BYTE PTR [rcx+0x45],cl
   1400135da:	rex.WRX
   1400135db:	rex.R scas al,BYTE PTR es:[rdi]
   1400135dd:	rex.X (bad) 
   1400135df:	(bad)  
   1400135e0:	sub    BYTE PTR [rax],al
   1400135e2:	add    BYTE PTR [rax],al
   1400135e4:	xor    BYTE PTR [rax],al
   1400135e6:	add    BYTE PTR [rax],al
   1400135e8:	(bad)  
   1400135e9:	add    BYTE PTR [rax],al
   1400135eb:	add    BYTE PTR [rcx],al
   1400135ed:	add    BYTE PTR [rax],ah
   1400135ef:	add    BYTE PTR [rax],al
   1400135f1:	add    BYTE PTR [rax],al
   1400135f3:	add    BYTE PTR [rax+0x25],al
	...
   14001389d:	add    BYTE PTR [rax],al
   14001389f:	add    BYTE PTR [rcx-0x44fa4e4f],dh
   1400138a5:	mov    ebx,0xb3b31cbb
   1400138aa:	mov    bl,0x55
   1400138ac:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400138ad:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400138ae:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400138af:	xor    BYTE PTR [rcx-0x4d704e4f],0xb2
   1400138b6:	mov    dl,0x96
   1400138b8:	mov    ah,0xb4
   1400138ba:	mov    ah,0x99
   1400138bc:	stos   DWORD PTR es:[rdi],eax
   1400138bd:	stos   DWORD PTR es:[rdi],eax
   1400138be:	stos   DWORD PTR es:[rdi],eax
   1400138bf:	xchg   edi,eax
   1400138c0:	lea    ecx,[rbp-0x7d7d6d73]
   1400138c6:	(bad)  
   1400138c7:	(bad)  
   1400138c8:	jns    0x140013943
   1400138ca:	jns    0x140013928
   1400138cc:	jb     0x140013940
   1400138ce:	jb     0x1400138f3
   1400138d0:	add    DWORD PTR [rcx+0x781],0x0
	...
   140013956:	add    BYTE PTR [rax],al
   140013958:	lea    ecx,[rbp-0x5757e573]
   14001395e:	test   al,0x75
   140013960:	mov    esp,0xcdd1bcbc
   140013965:	int    0xcd
   140013967:	call   rbp
   140013969:	(bad)  
   14001396a:	(bad)  
   14001396b:	(bad)  
   14001396c:	(bad)  
   14001396e:	(bad)  
   140013970:	in     eax,0xe5
   140013972:	in     eax,0xff
   140013974:	in     eax,0xe5
   140013976:	in     eax,0xff
   140013978:	loope  0x14001395b
   14001397a:	loope  0x14001397b
   14001397c:	(bad)  
   14001397e:	fdiv   st(7),st
   140013980:	fstp   st(5)
   140013982:	(bad)  
   140013984:	(bad)  
   140013986:	fdivp  st(7),st
   140013988:	rcl    ebx,cl
   14001398a:	sar    edi,cl
   14001398c:	rol    al,0xc0
   14001398f:	jmp    QWORD PTR [rcx-0x731f5e5f]
   140013995:	mov    WORD PTR [rdi+rax*4+0x22969696],cs
	...
   1400139ac:	add    BYTE PTR [rax],al
   1400139ae:	add    BYTE PTR [rdx],al
   1400139b0:	add    BYTE PTR [rax],al
   1400139b2:	add    BYTE PTR [rdx],al
   1400139b4:	add    BYTE PTR [rax],al
   1400139b6:	add    BYTE PTR [rcx],al
	...
   140013a14:	(bad)  
   140013a15:	(bad)  
   140013a16:	(bad)  
   140013a17:	addr32 mov bh,0xb7
   140013a1a:	mov    bh,0xea
   140013a1c:	(bad)  
   140013a1d:	(bad)  
   140013a1e:	(bad)  
   140013a1f:	call   rdi
   140013a21:	xlat   BYTE PTR ds:[rbx]
   140013a22:	xlat   BYTE PTR ds:[rbx]
   140013a23:	(bad)  
   140013a24:	fcmovnu st,st(3)
   140013a26:	(bad)  
   140013a28:	(bad)  
   140013a2a:	fdiv   st(7),st
   140013a2c:	fcmovnu st,st(3)
   140013a2e:	(bad)  
   140013a30:	fcmovu st,st(2)
   140013a32:	(bad)  
   140013a34:	(bad)  
   140013a35:	(bad)  
   140013a36:	(bad)  
   140013a37:	call   rcx
   140013a39:	rcl    ecx,1
   140013a3b:	dec    ecx
   140013a3d:	leave  
   140013a3e:	leave  
   140013a3f:	dec    esp
   140013a41:	int3   
   140013a42:	int3   
   140013a43:	(bad)  
   140013a44:	(bad)  
   140013a46:	(bad)  
   140013a48:	(bad)  
   140013a4a:	fcos   
   140013a4c:	ret    0xc2c2
   140013a4f:	(bad)  
   140013a50:	mov    edi,0xc9ffbfbf
   140013a55:	leave  
   140013a56:	leave  
   140013a57:	jmp    FWORD PTR [rbp+0x63f9adad]
   140013a5d:	movsxd esp,DWORD PTR [rbx-0x7a]
   140013a60:	xor    eax,0xf3535
   140013a65:	add    BYTE PTR [rax],al
   140013a67:	add    BYTE PTR [rax],al
   140013a69:	add    BYTE PTR [rax],al
   140013a6b:	(bad)  
   140013a6c:	add    BYTE PTR [rax],al
   140013a6e:	add    BYTE PTR [rcx],bl
   140013a70:	add    BYTE PTR [rax],al
   140013a72:	add    BYTE PTR [rdi],dl
   140013a74:	add    BYTE PTR [rax],al
   140013a76:	add    BYTE PTR [rip+0x4000000],cl        # 0x144013a7c
   140013a7c:	add    BYTE PTR [rax],al
   140013a7e:	add    BYTE PTR [rdx],al
   140013a80:	add    BYTE PTR [rax],al
   140013a82:	add    BYTE PTR [rcx],al
	...
   140013ad0:	movabs ds:0xd0ffcacacaa6a2a2,al
   140013ad9:	rcl    al,1
   140013adb:	dec    ebx
   140013add:	retf   
   140013ade:	retf   
   140013adf:	dec    ebx
   140013ae1:	retf   
   140013ae2:	retf   
   140013ae3:	call   rax
   140013ae5:	rcl    al,1
   140013ae7:	call   rdi
   140013ae9:	xlat   BYTE PTR ds:[rbx]
   140013aea:	xlat   BYTE PTR ds:[rbx]
   140013aeb:	(bad)  
   140013aec:	fcmovu st,st(2)
   140013aee:	(bad)  
   140013af0:	fcmovnu st,st(3)
   140013af2:	(bad)  
   140013af4:	fcmovu st,st(2)
   140013af6:	(bad)  
   140013af8:	(bad)  
   140013af9:	(bad)  
   140013afa:	(bad)  
   140013afb:	dec    ebx
   140013afd:	retf   
   140013afe:	retf   
   140013aff:	call   rdx
   140013b01:	rcl    dl,cl
   140013b03:	jmp    rsp
   140013b05:	in     al,0xe4
   140013b07:	dec    ebp
   140013b09:	int    0xcd
   140013b0b:	push   QWORD PTR [rdx-0x3b004d4e]
   140013b11:	(bad)  
   140013b12:	(bad)  
   140013b13:	dec    eax
   140013b15:	enter  0xffc8,0xb9
   140013b19:	mov    ecx,0xc4c4ffb9
   140013b1e:	(bad)  
   140013b1f:	(bad)  
   140013b20:	jle    0x140013ba0
   140013b22:	jle    0x140013aec
   140013b24:	or     eax,0x3d0d0d
   140013b29:	add    BYTE PTR [rax],al
   140013b2b:	xor    DWORD PTR [rax],eax
   140013b2d:	add    BYTE PTR [rax],al
   140013b2f:	cmp    eax,0x32000000
   140013b34:	add    BYTE PTR [rax],al
   140013b36:	add    BYTE PTR [rdx],ah
   140013b38:	add    BYTE PTR [rax],al
   140013b3a:	add    BYTE PTR [rbx],dl
   140013b3c:	add    BYTE PTR [rax],al
   140013b3e:	add    BYTE PTR [rax],cl
   140013b40:	add    BYTE PTR [rax],al
   140013b42:	add    BYTE PTR [rax+rax*1],al
   140013b45:	add    BYTE PTR [rax],al
   140013b47:	add    DWORD PTR [rax],eax
	...
   140013b89:	add    BYTE PTR [rax],al
   140013b8b:	add    BYTE PTR [rbp-0x3a7a6263],bl
   140013b91:	(bad)
   140013b94:	(bad)  
   140013b95:	(bad)  
   140013b96:	(bad)  
   140013b97:	inc    ecx
   140013b99:	rol    ecx,0xff
   140013b9c:	mov    edi,0xccccffc7
   140013ba2:	int3   
   140013ba3:	call   rax
   140013ba5:	rcl    al,1
   140013ba7:	call   rdi
   140013ba9:	xlat   BYTE PTR ds:[rbx]
   140013baa:	xlat   BYTE PTR ds:[rbx]
   140013bab:	(bad)  
   140013bac:	(bad)  
   140013bae:	fdiv   st(7),st
   140013bb0:	fstp   st(5)
   140013bb2:	(bad)  
   140013bb4:	(bad)  
   140013bb6:	fdiv   st(7),st
   140013bb8:	(bad)  
   140013bb9:	(bad)  
   140013bba:	(bad)  
   140013bbb:	dec    eax
   140013bbd:	enter  0xffc8,0xd3
   140013bc1:	rcl    ebx,cl
   140013bc3:	(bad)  
   140013bc4:	(bad)  
   140013bc6:	fdivp  st(7),st
   140013bc8:	rol    ecx,0xc1
   140013bcb:	inc    edx
   140013bcd:	ret    0xffc2
   140013bd0:	retf   0xcaca
   140013bd3:	push   QWORD PTR [rbp-0x53004a4b]
   140013bd9:	lods   al,BYTE PTR ds:[rsi]
   140013bda:	lods   al,BYTE PTR ds:[rsi]
   140013bdb:	jmp    FWORD PTR [rsp+rbp*4-0x3d3d0054]
   140013be2:	ret    0x6eff
   140013be5:	outs   dx,BYTE PTR ds:[rsi]
   140013be6:	outs   dx,BYTE PTR ds:[rsi]
   140013be7:	enter  0x0,0x0
   140013beb:	rex.W add BYTE PTR [rax],al
   140013bee:	add    BYTE PTR [rbx+0x0],cl
   140013bf1:	add    BYTE PTR [rax],al
   140013bf3:	add    BYTE PTR [rax],al
   140013bf6:	add    BYTE PTR [rdx],dh
   140013bf8:	add    BYTE PTR [rax],al
   140013bfa:	add    BYTE PTR [rax+rax*1],ah
   140013bfd:	add    BYTE PTR [rax],al
   140013bff:	adc    eax,0xb000000
   140013c04:	add    BYTE PTR [rax],al
   140013c06:	add    BYTE PTR [rip+0x0],al        # 0x140013c0c
	...
   140013c4c:	mov    dh,0xb6
   140013c4e:	mov    dh,0xee
   140013c50:	mov    ebp,0xbdffbdbd
   140013c55:	mov    ebp,0xc1c1ffbd
   140013c5a:	sar    edi,0xc4
   140013c5d:	(bad)  
   140013c5e:	(bad)  
   140013c5f:	dec    eax
   140013c61:	enter  0xffc8,0xce
   140013c65:	(bad)  
   140013c66:	(bad)  
   140013c67:	call   rbp
   140013c69:	(bad)  
   140013c6a:	(bad)  
   140013c6b:	(bad)  
   140013c6c:	(bad)  
   140013c6e:	fdiv   st(7),st
   140013c70:	fstp   st(5)
   140013c72:	(bad)  
   140013c74:	fcmovu st,st(2)
   140013c76:	(bad)  
   140013c78:	rcl    dl,cl
   140013c7a:	sar    bh,cl
   140013c7c:	mov    edi,0xcdcdffc7
   140013c82:	int    0xff
   140013c84:	int    0xcd
   140013c86:	int    0xff
   140013c88:	rol    ecx,0xc1
   140013c8b:	inc    edx
   140013c8d:	ret    0xffc2
   140013c90:	mov    ah,0xb4
   140013c92:	mov    ah,0xff
   140013c94:	scas   eax,DWORD PTR es:[rdi]
   140013c95:	scas   eax,DWORD PTR es:[rdi]
   140013c96:	scas   eax,DWORD PTR es:[rdi]
   140013c97:	jmp    FWORD PTR [rax-0x66005758]
   140013c9d:	cdq    
   140013c9e:	cdq    
   140013c9f:	jmp    QWORD PTR [rsi-0x6800595a]
   140013ca5:	xchg   edi,eax
   140013ca6:	xchg   edi,eax
   140013ca7:	in     al,dx
   140013ca8:	or     eax,0x5e0d0d
   140013cad:	add    BYTE PTR [rax],al
   140013caf:	add    BYTE PTR [r8],al
   140013cb2:	add    BYTE PTR [rax+rax*1+0x0],al
   140013cb6:	add    BYTE PTR [rsi],dh
   140013cb8:	add    BYTE PTR [rax],al
   140013cba:	add    BYTE PTR [rdi],ah
   140013cbc:	add    BYTE PTR [rax],al
   140013cbe:	add    BYTE PTR [rax+rax*1],bl
   140013cc1:	add    BYTE PTR [rax],al
   140013cc3:	adc    al,BYTE PTR [rax]
   140013cc5:	add    BYTE PTR [rax],al
   140013cc7:	or     DWORD PTR [rax],eax
	...
   140013d09:	add    BYTE PTR [rax],al
   140013d0b:	add    BYTE PTR [rsi-0x4813494a],dh
   140013d11:	mov    bh,0xb7
   140013d13:	(bad)  
   140013d14:	mov    edx,0xbdffbaba
   140013d19:	mov    ebp,0xc0c0ffbd
   140013d1e:	sar    bh,0xc4
   140013d21:	(bad)  
   140013d22:	(bad)  
   140013d23:	dec    ecx
   140013d25:	leave  
   140013d26:	leave  
   140013d27:	dec    edi
   140013d29:	iret   
   140013d2a:	iret   
   140013d2b:	call   rsi
   140013d2d:	(bad)  
   140013d2e:	(bad)  
   140013d2f:	call   rdi
   140013d31:	xlat   BYTE PTR ds:[rbx]
   140013d32:	xlat   BYTE PTR ds:[rbx]
   140013d33:	call   rbp
   140013d35:	(bad)  
   140013d36:	(bad)  
   140013d37:	dec    ebp
   140013d39:	int    0xcd
   140013d3b:	inc    esp
   140013d3d:	(bad)  
   140013d3e:	(bad)  
   140013d3f:	inc    ebp
   140013d41:	(bad)
   140013d44:	rol    al,0xc0
   140013d47:	(bad)  
   140013d48:	mov    ebp,0xb6ffbdbd
   140013d4d:	mov    dh,0xb6
   140013d4f:	jmp    FWORD PTR [rsi-0x5d005152]
   140013d55:	movabs ds:0x9090ff949494ffa2,al
   140013d5e:	nop
   140013d5f:	jmp    QWORD PTR [rbp-0x62005a5b]
   140013d65:	popf   
   140013d66:	popf   
   140013d67:	out    dx,eax
   140013d68:	(bad)  
   140013d69:	(bad)  
   140013d6a:	(bad)  
   140013d6b:	pop    rax
   140013d6c:	add    BYTE PTR [rax],al
   140013d6e:	add    BYTE PTR [rdx],dh
   140013d70:	add    BYTE PTR [rax],al
   140013d72:	add    BYTE PTR [rbx],bh
   140013d74:	add    BYTE PTR [rax],al
   140013d76:	add    BYTE PTR [rcx],dh
   140013d78:	add    BYTE PTR [rax],al
   140013d7a:	add    BYTE PTR [rsi],ah
   140013d7c:	add    BYTE PTR [rax],al
   140013d7e:	add    BYTE PTR [rax+rax*1],bl
   140013d81:	add    BYTE PTR [rax],al
   140013d83:	adc    al,BYTE PTR [rax]
   140013d85:	add    BYTE PTR [rax],al
   140013d87:	or     DWORD PTR [rax],eax
	...
   140013dc9:	add    BYTE PTR [rax],al
   140013dcb:	add    BYTE PTR [rdx-0x44524d4e],dh
   140013dd1:	mov    ebx,0xb9b9ffbb
   140013dd6:	mov    ecx,0xb9b9b9ff
   140013ddb:	(bad)  
   140013ddc:	mov    esi,0xc0ffbebe
   140013de1:	rol    al,0xff
   140013de4:	(bad)  
   140013de5:	(bad)  
   140013de6:	(bad)  
   140013de7:	inc    edi
   140013de9:	mov    edi,0xccccccff
   140013def:	dec    esi
   140013df1:	(bad)  
   140013df2:	(bad)  
   140013df3:	dec    esp
   140013df5:	int3   
   140013df6:	int3   
   140013df7:	inc    edi
   140013df9:	mov    edi,0xc3c3c3ff
   140013dff:	inc    eax
   140013e01:	rol    al,0xff
   140013e04:	mov    edx,0xb0ffbaba
   140013e09:	mov    al,0xb0
   140013e0b:	jmp    QWORD PTR [rbx-0x6b005c5d]
   140013e11:	xchg   esp,eax
   140013e12:	xchg   esp,eax
   140013e13:	dec    DWORD PTR [rsi-0x6e007172]
   140013e19:	xchg   ecx,eax
   140013e1a:	xchg   ecx,eax
   140013e1b:	call   QWORD PTR [rdi-0x50006869]
   140013e21:	scas   eax,DWORD PTR es:[rdi]
   140013e22:	scas   eax,DWORD PTR es:[rdi]
   140013e23:	push   QWORD PTR [rsp+rsi*2+0x74]
   140013e27:	ret    
   140013e28:	add    BYTE PTR [rax],al
   140013e2a:	add    BYTE PTR [rdx],ah
   140013e2c:	add    BYTE PTR [rax],al
   140013e2e:	add    BYTE PTR [rdx],ah
   140013e30:	or     eax,0x300d0d
   140013e35:	add    BYTE PTR [rax],al
   140013e37:	sub    DWORD PTR [rax],eax
   140013e39:	add    BYTE PTR [rax],al
   140013e3b:	and    DWORD PTR [rax],eax
   140013e3d:	add    BYTE PTR [rax],al
   140013e3f:	sbb    BYTE PTR [rax],al
   140013e41:	add    BYTE PTR [rax],al
   140013e43:	sldt   WORD PTR [rax]
   140013e46:	add    BYTE PTR [rax],cl
	...
   140013e50:	sub    ch,BYTE PTR [rdx]
   140013e52:	sub    DWORD PTR [rcx],ebp
   140013e54:	outs   dx,DWORD PTR ds:[rsi]
   140013e55:	ins    DWORD PTR es:[rdi],dx
   140013e56:	outs   dx,DWORD PTR ds:[rsi]
   140013e57:	loop   0x140013dec
   140013e59:	nop
   140013e5a:	xchg   ecx,eax
   140013e5b:	call   FWORD PTR [rax+0x59]
   140013e5e:	pop    rcx
   140013e5f:	(bad)
   140013e62:	(bad)  
   140013e63:	rex.WX add BYTE PTR [rax],al
   140013e66:	add    BYTE PTR [rdx],bl
   140013e68:	add    BYTE PTR [rax],al
   140013e6a:	add    BYTE PTR [rip+0x27000000],ah        # 0x167013e70
   140013e70:	add    BYTE PTR [rax],al
   140013e72:	add    BYTE PTR [rax],bh
   140013e74:	add    al,BYTE PTR [rdx]
   140013e76:	add    DWORD PTR [rdx],edi
   140013e78:	add    BYTE PTR [rax],al
   140013e7a:	add    BYTE PTR [rax],cl
	...
   140013e8c:	mov    eax,0x9e18b8b8
   140013e91:	sahf   
   140013e92:	sahf   
   140013e93:	(bad)  
   140013e94:	retf   0xcaca
   140013e97:	inc    esp
   140013e99:	(bad)  
   140013e9a:	(bad)  
   140013e9b:	(bad)  
   140013e9c:	mov    eax,0xbaffb8b8
   140013ea1:	mov    edx,0xbebeffba
   140013ea6:	mov    esi,0xc0c0c0ff
   140013eab:	inc    ecx
   140013ead:	rol    ecx,0xff
   140013eb0:	rol    ecx,0xc1
   140013eb3:	inc    eax
   140013eb5:	rol    al,0xff
   140013eb8:	mov    eax,0xafffb8b8
   140013ebd:	scas   eax,DWORD PTR es:[rdi]
   140013ebe:	scas   eax,DWORD PTR es:[rdi]
   140013ebf:	jmp    QWORD PTR [rbx-0x67005c5d]
   140013ec5:	cwde   
   140013ec6:	cwde   
   140013ec7:	inc    DWORD PTR [rbx+0x6dff8383]
   140013ecd:	ins    DWORD PTR es:[rdi],dx
   140013ece:	ins    DWORD PTR es:[rdi],dx
   140013ecf:	jmp    FWORD PTR [rcx+0x69]
   140013ed2:	imul   edi,edi,0xff81817f
   140013ed8:	xchg   ebx,eax
   140013ed9:	xchg   edx,eax
   140013eda:	xchg   edx,eax
   140013edb:	jmp    QWORD PTR [rbx-0x55005c5d]
   140013ee1:	lods   al,BYTE PTR ds:[rsi]
   140013ee2:	lods   al,BYTE PTR ds:[rsi]
   140013ee3:	cld    
   140013ee4:	pop    rsp
   140013ee5:	pop    rsp
   140013ee6:	pop    rsp
   140013ee7:	xchg   edx,eax
   140013ee8:	rex.WRX
   140013ee9:	rex.WRX
   140013eea:	rex.WRXB js 0x140013f57
   140013eed:	push   0x6b
   140013eef:	xchg   esi,eax
   140013ef0:	add    DWORD PTR [rbx+0x2f2f8084],0x2f
   140013ef7:	sub    DWORD PTR [rax],eax
   140013ef9:	add    BYTE PTR [rax],al
   140013efb:	(bad)  
   140013efc:	add    BYTE PTR [rax],al
   140013efe:	add    BYTE PTR [rcx],dl
   140013f00:	add    BYTE PTR [rax],al
   140013f02:	add    BYTE PTR [rcx],cl
   140013f04:	add    BYTE PTR [rax],al
   140013f06:	add    BYTE PTR [rax+rax*1],al
   140013f09:	add    BYTE PTR [rax],al
   140013f0b:	add    BYTE PTR [rbp+0x64],ah
   140013f0e:	xor    ebx,DWORD PTR gs:[rdi+0x5f]
   140013f12:	pop    rsi
   140013f13:	jmp    0x140013ec7
   140013f15:	mov    al,0xb0
   140013f17:	call   FWORD PTR [rsi-0x1c006666]
   140013f1d:	loope  0x140013f00
   140013f1f:	(bad)  
   140013f20:	fcomp  st(0)
   140013f22:	fcos   
   140013f24:	rex.RX
   140013f25:	rex.RX
   140013f26:	rex.RX rol DWORD PTR [rip+0xe9a0505],cl        # 0x14e9b4432
   140013f2d:	(bad)  
   140013f2e:	(bad)  
   140013f2f:	mov    ebx,0xff636363
   140013f34:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013f35:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013f36:	movabs ds:0x80b0abd4a4c4bff,eax
   140013f3f:	push   rbp
   140013f40:	add    BYTE PTR [rax],al
   140013f42:	add    BYTE PTR [rcx],dl
	...
   140013f50:	pop    rdx
   140013f51:	pop    rdx
   140013f52:	pop    rdx
   140013f53:	(bad)  
   140013f55:	push   rax
   140013f56:	push   rax
   140013f57:	and    BYTE PTR [rsi-0x380d595a],0xc7
   140013f5e:	(bad)  
   140013f5f:	(bad)  
   140013f60:	mov    ecx,0xadffb9b9
   140013f65:	lods   eax,DWORD PTR ds:[rsi]
   140013f66:	lods   eax,DWORD PTR ds:[rsi]
   140013f67:	jmp    QWORD PTR [rbp-0x5b005a5b]
   140013f6d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013f6e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013f6f:	jmp    QWORD PTR [rsp+riz*4-0x6868005c]
   140013f76:	xchg   edi,eax
   140013f77:	dec    DWORD PTR [rcx+0x7dff8989]
   140013f7d:	jge    0x140013ffa
   140013f7f:	push   QWORD PTR [rcx+0x71]
   140013f82:	jno    0x140013f83
   140013f84:	gs gs call FWORD PTR gs:[rbp+0x5e]
   140013f8a:	pop    rsi
   140013f8b:	jmp    FWORD PTR [rcx+0x69]
   140013f8e:	push   0xffffffffffffffff
   140013f90:	(bad)  
   140013f91:	(bad)  
   140013f92:	cmp    edi,0xffffff9a
   140013f95:	(bad)  
   140013f96:	fwait
   140013f97:	jmp    FWORD PTR [rbp-0x49005155]
   140013f9d:	mov    dh,0xb5
   140013f9f:	(bad)  
   140013fa0:	mov    ecx,0xb8f8b7b7
   140013fa5:	mov    dh,0xb6
   140013fa7:	out    dx,al
   140013fa8:	(bad)  
   140013faa:	(bad)  
   140013fac:	fcmovnu st,st(3)
   140013fae:	(bad)  
   140013fb0:	lahf   
   140013fb1:	lahf   
   140013fb2:	lahf   
   140013fb3:	clc    
   140013fb4:	jg     0x140014035
   140013fb6:	jle    0x140013fe4
   140013fb8:	add    BYTE PTR [rax],al
   140013fba:	add    BYTE PTR [rbx],al
   140013fbc:	add    BYTE PTR [rax],al
   140013fbe:	add    BYTE PTR [rip+0x3000000],al        # 0x143013fc4
   140013fc4:	add    BYTE PTR [rax],al
   140013fc6:	add    BYTE PTR [rcx],al
   140013fc8:	add    BYTE PTR [rax],al
   140013fca:	add    BYTE PTR [rax],al
   140013fcc:	cdq    
   140013fcd:	cwde   
   140013fce:	fwait
   140013fcf:	mov    dh,BYTE PTR [rax-0x57005354]
   140013fd5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013fd6:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013fd7:	call   QWORD PTR [rsi-0x54006e6f]
   140013fdd:	stos   BYTE PTR es:[rdi],al
   140013fde:	stos   DWORD PTR es:[rdi],eax
   140013fdf:	dec    edi
   140013fe1:	iret   
   140013fe2:	sar    bh,1
   140013fe4:	ret    0xc2c2
   140013fe7:	call   FWORD PTR [rax-0x74006768]
   140013fed:	mov    ecx,DWORD PTR [rbx+0x5e5e5eff]
   140013ff3:	loop   0x140014062
   140013ff5:	ins    DWORD PTR es:[rdi],dx
   140013ff6:	ins    DWORD PTR es:[rdi],dx
   140013ff7:	mov    bl,0xd1
   140013ff9:	rcl    ecx,1
   140013ffb:	stc    
   140013ffc:	(bad)
   140013fff:	call   QWORD PTR [rbp+0x55]
   140014002:	push   rsp
   140014003:	leave  
   140014004:	adc    dl,BYTE PTR [rdx]
   140014006:	adc    BYTE PTR [rdi+0x0],bl
   140014009:	add    BYTE PTR [rax],al
   14001400b:	adc    eax,DWORD PTR [rax]
	...
   140014015:	add    BYTE PTR [rax],al
   140014017:	add    BYTE PTR [rbx+0x43],al
   14001401a:	rex.XB
   14001401b:	cs rex.WRX
   14001401d:	rex.WRX
   14001401e:	rex.WRB cqo 
   140014020:	lea    ecx,[rbp-0x5e5e1972]
   140014026:	movabs eax,ds:0x9e9f9fffa5a6a6ff
   14001402f:	inc    DWORD PTR [rbp+0x78ff8585]
   140014035:	js     0x1400140ae
   140014037:	(bad)  
   140014038:	jp     0x1400140b4
   14001403a:	jns    0x14001403b
   14001403c:	jp     0x1400140b9
   14001403e:	jl     0x14001403f
   140014040:	jg     0x1400140c1
   140014042:	cmp    edi,0xff8a8988
   140014048:	popf   
   140014049:	popf   
   14001404a:	lahf   
   14001404b:	jmp    FWORD PTR [rbx-0x50005255]
   140014051:	scas   al,BYTE PTR es:[rdi]
   140014052:	scas   al,BYTE PTR es:[rdi]
   140014053:	push   QWORD PTR [rcx-0x49004f51]
   140014059:	mov    bh,0xb7
   14001405b:	push   QWORD PTR [rbx-0x46004b4c]
   140014061:	ret    
   140014062:	vshufps ymm2,ymm0,ymm3,0xd4
   140014067:	inc    edx
   140014069:	ret    
   14001406a:	(bad)  
   14001406d:	mov    esi,0xa7a7febe
   140014072:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140014073:	push   QWORD PTR [rax+0x70]
   140014076:	jo     0x1400140c1
	...
   14001408c:	nop
   14001408d:	(bad)  
   14001408e:	xchg   ecx,eax
   14001408f:	sub    DWORD PTR [rdx-0x50005859],0xffffffaa
   140014096:	stos   BYTE PTR es:[rdi],al
   140014097:	call   FWORD PTR [rdi-0x4d006364]
   14001409d:	mov    al,0xb2
   14001409f:	dec    eax
   1400140a1:	enter  0xffcc,0xab
   1400140a5:	lods   al,BYTE PTR ds:[rsi]
   1400140a6:	lods   al,BYTE PTR ds:[rsi]
   1400140a7:	jmp    FWORD PTR [rbp-0x47005354]
   1400140ad:	mov    eax,0x8484ffb8
   1400140b2:	test   cl,dh
   1400140b4:	cs cs cs mov ch,0x19
   1400140b9:	sbb    DWORD PTR [rcx],ebx
   1400140bb:	(bad)  
   1400140bc:	jno    0x140014130
   1400140be:	jae    0x140014077
   1400140c0:	rcl    dl,cl
   1400140c2:	shl    ah,cl
   1400140c4:	mov    bh,0xb7
   1400140c6:	mov    bh,0xff
   1400140c8:	push   rsi
   1400140c9:	push   rsi
   1400140ca:	push   rbx
   1400140cb:	mov    esi,0x6b181818
   1400140d0:	add    BYTE PTR [rax],al
   1400140d2:	add    BYTE PTR [rdi],ah
   1400140d4:	add    BYTE PTR [rax],al
   1400140d6:	add    BYTE PTR [rsi],al
	...
   1400140e0:	(bad)  
   1400140e1:	and    BYTE PTR [rax],ah
   1400140e3:	or     BYTE PTR [rcx],bh
   1400140e5:	cmp    DWORD PTR [rdx],edi
   1400140e7:	xor    al,0x79
   1400140e9:	jns    0x140014166
   1400140eb:	(bad)  
   1400140ec:	xchg   esp,eax
   1400140ed:	xchg   ebp,eax
   1400140ee:	xchg   ebp,eax
   1400140ef:	cli    
   1400140f0:	test   DWORD PTR [rbp-0x75740077],eax
   1400140f6:	(bad)  
   1400140f7:	dec    DWORD PTR [rsi-0x6e006d72]
   1400140fd:	nop
   1400140fe:	xchg   ebp,eax
   1400140ff:	call   QWORD PTR [rdi-0x5e006569]
   140014105:	movabs eax,ds:0xada8ffacaaaaffa4
   14001410e:	mov    al,0xff
   140014110:	scas   eax,DWORD PTR es:[rdi]
   140014111:	mov    ecx,0xc8b7ffbc
   140014116:	retf   
   140014117:	dec    eax
   140014119:	fcomp  st(3)
   14001411b:	call   rcx
   14001411d:	fsubrp st(1),st
   14001411f:	(bad)  
   140014120:	(bad)  
   140014122:	(bad)  
   140014123:	(bad)  
   140014124:	(bad)  
   140014126:	leave  
   140014127:	dec    ebx
   140014129:	retf   0xfec8
   14001412c:	rol    ebp,0xc5
   14001412f:	cld    
   140014130:	stos   BYTE PTR es:[rdi],al
   140014131:	test   al,0xa8
   140014133:	inc    DWORD PTR [rsi+0x6d8686]
	...
   140014149:	add    BYTE PTR [rax],al
   14001414b:	add    BYTE PTR [rcx-0x517c6d70],dl
   140014151:	stos   BYTE PTR es:[rdi],al
   140014152:	stos   DWORD PTR es:[rdi],eax
   140014153:	push   QWORD PTR [rbp-0x58004e50]
   140014159:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001415a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001415b:	push   QWORD PTR [rsi-0x3f00494c]
   140014161:	mov    edi,0xb8b8ffc0
   140014166:	mov    eax,0xbababaff
   14001416b:	jmp    FWORD PTR [rdi-0x32005051]
   140014171:	int    0xcd
   140014173:	(bad)  
   140014174:	jmp    0xe9012b62
   140014179:	test   al,0xa8
   14001417b:	cli    
   14001417c:	cmp    DWORD PTR [rax],edi
   14001417e:	cmp    BYTE PTR [rbx-0x69e1e3e4],dh
   140014184:	add    DWORD PTR [rbx-0x90a257c],0xfffffff5
   14001418b:	jmp    QWORD PTR [rbx+0x19ffa2a2]
   140014191:	(bad)  
   140014192:	(bad)  
   140014193:	test   DWORD PTR [rdi],edx
   140014195:	(bad)  
   140014196:	sbb    BYTE PTR [rsi],ah
   140014198:	rex.W
   140014199:	rex.W
   14001419a:	rex.WX
   14001419b:	rex jae 0x140014211
   14001419e:	ja     0x140014214
   1400141a0:	add    DWORD PTR [rcx-0x77775a7a],0xffffff8c
   1400141a7:	int3   
   1400141a8:	mov    cl,BYTE PTR [rcx-0x75751373]
   1400141ae:	mov    ?,edi
   1400141b0:	mov    WORD PTR [rdx+rdx*4-0x6b707401],cs
   1400141b7:	dec    DWORD PTR [rbx-0x7300696f]
   1400141bd:	xchg   esi,eax
   1400141be:	pushf  
   1400141bf:	call   FWORD PTR [rdx-0x4e005258]
   1400141c5:	mov    edi,0xd1c7ffc3
   1400141ca:	(bad)  
   1400141cb:	call   rcx
   1400141cd:	rcl    edx,1
   1400141cf:	call   rbx
   1400141d1:	sar    DWORD PTR [rsi-0x5b532401],0xff
   1400141d8:	(bad)  
   1400141d9:	jg     0x14001424d
   1400141db:	dec    edx
   1400141dd:	rex.W xor al,0xff
   1400141e0:	rcl    BYTE PTR [rip+0x19b4ff06],0x13        # 0x159b640ed
   1400141e7:	(bad)  
   1400141e8:	mov    esp,0xc9ffa4a9
   1400141ed:	(bad)  
   1400141ef:	cld    
   1400141f0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400141f1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400141f2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400141f3:	call   FWORD PTR [rdi+0x8d9f9f]
	...
   140014209:	add    BYTE PTR [rax],al
   14001420b:	add    BYTE PTR [rdx-0x497c6c70],dl
   140014211:	mov    cl,0xb2
   140014213:	(bad)  
   140014214:	mov    ebp,0xb0ffb9b8
   140014219:	stos   BYTE PTR es:[rdi],al
   14001421a:	lods   eax,DWORD PTR ds:[rsi]
   14001421b:	(bad)  
   14001421c:	mov    esi,0xbbffbdbc
   140014221:	mov    ebx,0x8e8effbb
   140014226:	mov    ?,edi
   140014228:	(bad)  
   140014229:	(bad)  
   14001422a:	(bad)  
   14001422b:	push   QWORD PTR [rbp-0x4a004a4b]
   140014231:	mov    ch,0xb5
   140014233:	inc    eax
   140014235:	rol    al,0xff
   140014238:	jmp    0x140014225
   14001423a:	jmp    0x14001423b
   14001423c:	cmc    
   14001423d:	cmc    
   14001423e:	cmc    
   14001423f:	call   QWORD PTR [rax+0x55f69090]
   140014245:	push   rbp
   140014246:	push   rsi
   140014247:	in     eax,dx
   140014248:	(bad)  
   140014249:	(bad)  
   14001424a:	(bad)  
   14001424b:	hlt    
   14001424c:	jno    0x1400142be
   14001424e:	jae    0x140014225
   140014250:	mov    DWORD PTR [rdi-0x60602775],eax
   140014256:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140014257:	cmc    
   140014258:	lahf   
   140014259:	lahf   
   14001425a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001425b:	call   FWORD PTR [rdx-0x6d005e63]
   140014261:	xchg   edi,eax
   140014262:	fwait
   140014263:	call   QWORD PTR [rax-0x6e006269]
   140014269:	popf   
   14001426a:	movabs eax,ds:0xb4b0a3ffaca796ff
   140014273:	jmp    FWORD PTR [rbp-0x46005052]
   140014279:	test   eax,0xb0c6ffab
   14001427e:	mov    al,0xff
   140014280:	enter  0x9ea3,0xff
   140014284:	enter  0x7e87,0xff
   140014288:	leave  
   140014289:	(bad)  {k3}{z}
   14001428e:	(bad)  
   14001428f:	push   QWORD PTR [rbx+rcx*1+0x8abff00]
   140014296:	add    bh,bh
   140014298:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140014299:	or     DWORD PTR [rax],eax
   14001429b:	jmp    QWORD PTR [rdx-0x5c00ffee]
   1400142a1:	(bad)  
   1400142a2:	add    bh,bh
   1400142a4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400142a5:	adc    al,0x1
   1400142a7:	(bad)  
   1400142a8:	mov    ebp,0xcdff9b9e
   1400142ad:	fstp   st(7)
   1400142af:	(bad)  
   1400142b0:	stos   BYTE PTR es:[rdi],al
   1400142b1:	test   eax,0x9999ffa9
   1400142b6:	cdq    
   1400142b7:	mov    cl,0x0
	...
   1400142c9:	add    BYTE PTR [rax],al
   1400142cb:	add    BYTE PTR [rcx-0x417c6c6e],dl
   1400142d1:	mov    bh,0xb7
   1400142d3:	inc    ecx
   1400142d5:	mov    edx,0xaaaeffbd
   1400142da:	lods   al,BYTE PTR ds:[rsi]
   1400142db:	(bad)  
   1400142dc:	mov    esp,0xbcffbbba
   1400142e1:	mov    esp,0x9f9fffbf
   1400142e6:	lahf   
   1400142e7:	call   FWORD PTR [rax-0x6f006768]
   1400142ed:	nop
   1400142ee:	nop
   1400142ef:	call   FWORD PTR [rax-0x6b006668]
   1400142f5:	xchg   ebx,eax
   1400142f6:	xchg   ebp,eax
   1400142f7:	call   QWORD PTR [rcx-0x67006c6f]
   1400142fd:	(bad)  
   1400142fe:	(bad)  
   1400142ff:	call   FWORD PTR [rax-0x6300646a]
   140014305:	fwait
   140014306:	movabs eax,ds:0xada9a4ffaaa6a4ff
   14001430f:	jmp    QWORD PTR [rsi-0x57004d51]
   140014315:	mov    dl,0xb7
   140014317:	jmp    FWORD PTR [rcx-0x5100434a]
   14001431d:	mov    ebp,0xb8afffc2
   140014322:	mov    edx,0xa8a7b3ff
   140014327:	inc    ecx
   140014329:	movabs ds:0x6fbbff8e90c4ffa0,al
   140014332:	push   0xffffffffffffffff
   140014334:	mov    ah,0x46
   140014336:	cmp    al,0xff
   140014338:	test   eax,0xa1ff1625
   14001433d:	or     al,BYTE PTR [rax]
   14001433f:	jmp    QWORD PTR [rcx-0x5e00fffa]
   140014345:	(bad)  
   140014346:	add    bh,bh
   140014348:	movabs ds:0xa8ff0a1ba6ff000e,al
   140014351:	and    DWORD PTR [rdx],edx
   140014353:	jmp    FWORD PTR [rbp+riz*1+0x28b1ff13]
   14001435a:	adc    al,0xff
   14001435c:	mov    dl,0x29
   14001435e:	adc    eax,0x1024b3ff
   140014363:	push   QWORD PTR [rbp-0x3e00f6e3]
   140014369:	xchg   edi,eax
   14001436a:	xchg   ecx,eax
   14001436b:	dec    edi
   14001436d:	(bad)  
   14001436f:	(bad)  
   140014370:	mov    cl,0xae
   140014372:	scas   al,BYTE PTR es:[rdi]
   140014373:	call   FWORD PTR [rdx+0xcc9b9b]
	...
   140014389:	add    BYTE PTR [rax],al
   14001438b:	add    BYTE PTR [rbx-0x3b7a6b6f],dl
   140014391:	mov    esi,0xbec6ffbf
   140014396:	sar    edi,0xb0
   140014399:	lods   al,BYTE PTR ds:[rsi]
   14001439a:	stos   DWORD PTR es:[rdi],eax
   14001439b:	(bad)  
   14001439c:	mov    ebp,0xbbffbbba
   1400143a1:	mov    ebx,0x9d9dffbc
   1400143a6:	popf   
   1400143a7:	call   FWORD PTR [rbp-0x62006263]
   1400143ad:	popf   
   1400143ae:	lahf   
   1400143af:	dec    DWORD PTR [rsi-0x6d006d72]
   1400143b5:	(bad)  
   1400143b6:	xchg   ebp,eax
   1400143b7:	dec    DWORD PTR [rdx+0x7aff9392]
   1400143bd:	movabs ds:0xafa2ffa39f92ff91,eax
   1400143c6:	mov    ah,0xff
   1400143c8:	mov    bl,0xc3
   1400143ca:	enter  0xc0ff,0xce
   1400143ce:	iret   
   1400143cf:	inc    ecx
   1400143d1:	ret    0xffc1
   1400143d4:	mov    ecx,0xbaffa0a2
   1400143d9:	xchg   DWORD PTR [rax+0x6b6db3ff],eax
   1400143df:	jmp    QWORD PTR [rdi-0x6100b5b4]
   1400143e5:	sub    al,0x24
   1400143e7:	call   FWORD PTR [rax-0x7400fff2]
   1400143ed:	add    BYTE PTR [rax],al
   1400143ef:	dec    DWORD PTR [rbx-0x70010000]
   1400143f5:	add    BYTE PTR [rax],al
   1400143f7:	call   QWORD PTR [rbx-0x6000fffb]
   1400143fd:	sbb    ecx,DWORD PTR [rdx]
   1400143ff:	jmp    FWORD PTR [rbx-0x5100e3d5]
   140014405:	sub    al,0x1c
   140014407:	push   QWORD PTR [rcx-0x4c00e3d2]
   14001440d:	xor    BYTE PTR [rbx],bl
   14001440f:	push   QWORD PTR [rbp-0x4700e3d1]
   140014415:	xor    BYTE PTR [rip+0x1f31baff],bl        # 0x15f32ff1a
   14001441b:	(bad)  
   14001441c:	mov    esp,0xbdff1f33
   140014421:	xor    bl,BYTE PTR [rdi]
   140014423:	(bad)  
   140014424:	mov    ebp,0xc3ff0c22
   140014429:	mov    BYTE PTR [rdi-0x1],bh
   14001442c:	(bad)  
   14001442d:	fsubrp st(1),st
   14001442f:	push   QWORD PTR [rbp-0x65004b4b]
   140014435:	cdq    
   140014436:	cdq    
   140014437:	fld    QWORD PTR [rax]
	...
   140014449:	add    BYTE PTR [rax],al
   14001444b:	add    BYTE PTR [rcx-0x35796a6e],dl
   140014451:	ret    
   140014452:	ret    
   140014453:	dec    edx
   140014455:	(bad)  
   140014456:	(bad)  
   140014457:	push   QWORD PTR [rcx-0x42005354]
   14001445d:	mov    edx,0xbbbbffbb
   140014462:	mov    esp,0x9d9d9dff
   140014467:	call   FWORD PTR [rdi-0x4d006061]
   14001446d:	mov    dl,0xb3
   14001446f:	call   QWORD PTR [rsi-0x6a006569]
   140014475:	cdq    
   140014476:	popf   
   140014477:	jmp    FWORD PTR [rbp+rdi*4-0x3c4b0043]
   14001447e:	mov    edi,0xacabb5ff
   140014483:	jmp    FWORD PTR [rbp-0x57007c7a]
   140014489:	(bad)  
   14001448a:	pop    rbp
   14001448b:	jmp    QWORD PTR [rdx-0x6900bab9]
   140014491:	sub    eax,0x138dff2c
   140014496:	(bad)  
   140014497:	inc    DWORD PTR [rax+rax*1+0x7aff00]
   14001449e:	add    bh,bh
   1400144a0:	jl     0x1400144a2
   1400144a2:	add    bh,bh
   1400144a4:	test   DWORD PTR [rax],eax
   1400144a6:	add    bh,bh
   1400144a8:	mov    al,BYTE PTR [rip+0xf92ff00]        # 0x14f9443ae
   1400144ae:	add    bh,bh
   1400144b0:	xchg   edi,eax
   1400144b1:	adc    BYTE PTR [rax],al
   1400144b3:	call   FWORD PTR [rcx+rdx*1+0x12a2ff00]
   1400144ba:	add    bh,bh
   1400144bc:	scas   al,BYTE PTR es:[rdi]
   1400144bd:	sub    BYTE PTR [rsi],dl
   1400144bf:	push   QWORD PTR [rsi-0x4900d9c9]
   1400144c5:	ss and eax,0x2638b8ff
   1400144cb:	(bad)  
   1400144cc:	mov    ebx,0xbfff2737
   1400144d1:	cmp    esp,DWORD PTR [rdi]
   1400144d3:	inc    edx
   1400144d5:	cmp    al,0x29
   1400144d7:	inc    esp
   1400144d9:	ds sub bh,bh
   1400144dc:	(bad)  
   1400144dd:	(bad)  
   1400144de:	sub    edi,edi
   1400144e0:	mov    DWORD PTR [rdx+0x2c],0x142ec7ff
   1400144e7:	inc    edi
   1400144e9:	js     0x140014558
   1400144eb:	dec    edi
   1400144ed:	fstp   st(7)
   1400144ef:	(bad)  
   1400144f0:	mov    ecx,0x9affbbbb
   1400144f5:	cdq    
   1400144f6:	cdq    
   1400144f7:	(bad)  
	...
   14001450c:	xchg   edx,eax
   14001450d:	xchg   ecx,eax
   14001450e:	xchg   ebp,eax
   14001450f:	xchg   ah,cl
   140014511:	mov    edi,0xc6c6ccff
   140014517:	push   QWORD PTR [rbx-0x44005152]
   14001451d:	mov    ebx,0xbcbcffbd
   140014522:	mov    ebp,0xa1a0a0ff
   140014527:	jmp    QWORD PTR [rcx-0x4c005e5f]
   14001452d:	mov    bl,0xb3
   14001452f:	jmp    QWORD PTR [rax+rbp*4-0x705d0054]
   140014536:	mov    ?,edi
   140014538:	xchg   esi,eax
   140014539:	cmp    DWORD PTR [rax],edi
   14001453b:	call   QWORD PTR [rsi-0x7100d7db]
   140014541:	sbb    dl,BYTE PTR [rdi+rdi*8]
   140014544:	mov    BYTE PTR [rbx],cl
   140014546:	add    bh,bh
   140014548:	add    BYTE PTR [rax],0x0
   14001454b:	(bad)  
   14001454c:	jl     0x14001454e
   14001454e:	add    bh,bh
   140014550:	jge    0x140014552
   140014552:	add    bh,bh
   140014554:	jg     0x140014556
   140014556:	add    bh,bh
   140014558:	add    DWORD PTR [rdi],0xd87ff00
   14001455e:	add    bh,bh
   140014560:	mov    cs,WORD PTR [rdi]
   140014562:	add    bh,bh
   140014564:	nop
   140014565:	(bad)  
   140014567:	call   QWORD PTR [rbx+0x7eff010f]
   14001456d:	and    bl,BYTE PTR [rax]
   14001456f:	(bad)  
   140014570:	jp     0x14001458a
   140014572:	or     eax,0x119fff
   140014577:	jmp    FWORD PTR [rax-0x4b00feec]
   14001457d:	xor    DWORD PTR [rdi],ebx
   14001457f:	(bad)  
   140014580:	mov    esp,0xbfff3242
   140014585:	rex.X xor edi,edi
   140014588:	ret    
   140014589:	xor    edi,r15d
   14001458c:	mov    BYTE PTR [rsi+0x32],0xff
   140014590:	enter  0x3448,0xff
   140014594:	retf   
   140014595:	rex.WB xor rax,0x364bcdff
   14001459b:	dec    edi
   14001459d:	rex.WR (bad) 
   14001459f:	call   rax
   1400145a1:	rex.WRXB cmp r15b,r15b
   1400145a4:	sar    DWORD PTR [rbx],1
   1400145a6:	and    bh,bh
   1400145a8:	retf   0x5e6c
   1400145ab:	dec    ebp
   1400145ad:	xlat   BYTE PTR ds:[rbx]
   1400145ae:	fdivr  st,st(7)
   1400145b0:	(bad)  
   1400145b1:	enter  0xffc8,0x9b
   1400145b5:	(bad)  
   1400145b6:	(bad)  
   1400145b7:	lock add BYTE PTR [rax],al
	...
   1400145ca:	add    BYTE PTR [rax],al
   1400145cc:	xchg   ebx,eax
   1400145cd:	nop
   1400145ce:	xchg   esp,eax
   1400145cf:	xchg   al,dl
   1400145d1:	leave  
   1400145d2:	enter  0xcfff,0xc9
   1400145d6:	retf   0xb3ff
   1400145d9:	mov    al,0xb1
   1400145db:	(bad)  
   1400145dc:	mov    ebx,0xbfffbbb9
   1400145e1:	mov    edi,0xa6a6ffbf
   1400145e6:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400145e7:	jmp    QWORD PTR [rbp-0x50005a5b]
   1400145ed:	scas   eax,DWORD PTR es:[rdi]
   1400145ee:	scas   eax,DWORD PTR es:[rdi]
   1400145ef:	push   QWORD PTR [rdx-0x62004448]
   1400145f5:	mov    DWORD PTR [rdx+0x7cff],ecx
   1400145fb:	inc    DWORD PTR [rdx-0x7600ffff]
   140014601:	(bad)  
   140014602:	(bad)  
   140014603:	dec    DWORD PTR [rcx-0x7700f8ef]
   140014609:	adc    cl,BYTE PTR [rax]
   14001460b:	inc    DWORD PTR [rdi-0x7900f8ef]
   140014611:	(bad)  
   140014613:	inc    DWORD PTR [rbp-0x7800fef5]
   140014619:	or     al,0x0
   14001461b:	dec    DWORD PTR [rbp-0x6d00fff3]
   140014621:	(bad)  
   140014622:	add    bh,bh
   140014624:	xchg   esp,eax
   140014625:	(bad)  
   140014627:	(bad)  
   140014628:	jg     0x14001465a
   14001462a:	(bad)  
   14001462b:	jmp    FWORD PTR [rax-0x5b00595a]
   140014631:	movabs al,ds:0x18acff0d1983ff9f
   14001463a:	add    eax,0x3041bfff
   14001463f:	inc    esi
   140014641:	push   rdx
   140014642:	dec    r9d
   140014645:	push   rcx
   140014646:	rex dec ebp
   140014649:	push   rbx
   14001464a:	(bad)  
   14001464b:	call   rax
   14001464d:	push   rbp
   14001464e:	rex call rdx
   140014651:	push   rdi
   140014652:	rex.XB call r12
   140014655:	pop    rax
   140014656:	rex.R call rsi
   140014659:	pop    rdx
   14001465a:	rex.RB (bad) 
   14001465c:	fcomp  DWORD PTR [rbx+0x46]
   14001465f:	(bad)  
   140014660:	fstp   DWORD PTR [rsi+0x49]
   140014663:	(bad)  
   140014664:	fmul   QWORD PTR [rsi+0x35]
   140014667:	call   rbx
   140014669:	movsxd edx,DWORD PTR [rax-0x1]
   14001466c:	int    0xcd
   14001466e:	int3   
   14001466f:	dec    esp
   140014671:	rcl    ebx,cl
   140014673:	call   FWORD PTR [rsp+rbx*4-0x67680b64]
   14001467a:	cwde   
   14001467b:	adc    eax,DWORD PTR [rax]
	...
   140014689:	add    BYTE PTR [rax],al
   14001468b:	add    BYTE PTR [rbx-0x2f796c70],dl
   140014691:	leave  
   140014692:	retf   0xceff
   140014695:	enter  0xffc9,0xb3
   140014699:	scas   eax,DWORD PTR es:[rdi]
   14001469a:	mov    al,0xff
   14001469c:	mov    ebx,0xbfffbab9
   1400146a1:	mov    edi,0xa9a9ffc1
   1400146a6:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400146a7:	jmp    FWORD PTR [rcx-0x53005657]
   1400146ad:	lods   al,BYTE PTR ds:[rsi]
   1400146ae:	lods   al,BYTE PTR ds:[rsi]
   1400146af:	(bad)  
   1400146b0:	mov    edx,0xa4ffbdbc
   1400146b5:	movabs ds:0x1b90ff050e82ffa5,al
   1400146be:	adc    bh,bh
   1400146c0:	xchg   edx,eax
   1400146c1:	and    eax,0x1e8eff1d
   1400146c6:	adc    eax,0x121b8cff
   1400146cb:	dec    DWORD PTR [rbx-0x7600f1e9]
   1400146d1:	adc    al,0xc
   1400146d3:	dec    DWORD PTR [rcx-0x7200f9ee]
   1400146d9:	or     eax,0xd91ff00
   1400146de:	add    bh,bh
   1400146e0:	xchg   ebp,eax
   1400146e1:	(bad)  
   1400146e3:	(bad)  
   1400146e4:	jnp    0x14001470b
   1400146e6:	sbb    al,0xff
   1400146e8:	mov    bl,0xaa
   1400146ea:	test   eax,0xb6b6b6ff
   1400146ef:	(bad)  
   1400146f0:	mov    esi,0x89ffbebe
   1400146f5:	fs (bad) 
   1400146f7:	jmp    QWORD PTR [rbx-0x3700f5e3]
   1400146fd:	push   rax
   1400146fe:	ds dec esi
   140014701:	(bad)  
   140014702:	rex.WRX call rcx
   140014705:	pop    rsi
   140014706:	rex.WR call rbp
   140014709:	(bad)  
   14001470a:	rex.WRB call r15
   14001470d:	(bad)  
   14001470e:	rex.WRX (bad) 
   140014710:	fldenv [rax+rdx*2-0x1]
   140014714:	(bad)  [rbp+0x50]
   140014717:	(bad)  
   140014718:	fisub  WORD PTR [rsi+0x51]
   14001471b:	(bad)  
   14001471c:	fbld   TBYTE PTR [rdi+0x52]
   14001471f:	jmp    rcx
   140014721:	ins    BYTE PTR es:[rdi],dx
   140014722:	push   rdi
   140014723:	jmp    rsp
   140014725:	pop    rdi
   140014726:	rex.RXB (bad) 
   140014728:	fsub   QWORD PTR [rbp+0x50]
   14001472b:	dec    edi
   14001472d:	leave  
   14001472e:	(bad)  
   14001472f:	call   rax
   140014731:	(bad)  
   140014733:	call   FWORD PTR [rdi-0x65016262]
   140014739:	(bad)  
   14001473a:	(bad)  
   14001473b:	(bad)  
	...
   14001474c:	xchg   ebx,eax
   14001474d:	xchg   ebx,eax
   14001474e:	xchg   ebp,eax
   14001474f:	xchg   bh,cl
   140014751:	enter  0xffc7,0xcc
   140014755:	(bad)
   140014758:	mov    dl,0xb1
   14001475a:	scas   al,BYTE PTR es:[rdi]
   14001475b:	(bad)  
   14001475c:	mov    ebx,0xc2ffbbba
   140014761:	ret    0xffc3
   140014764:	lods   al,BYTE PTR ds:[rsi]
   140014765:	stos   BYTE PTR es:[rdi],al
   140014766:	stos   DWORD PTR es:[rdi],eax
   140014767:	jmp    FWORD PTR [rdx-0x4f005556]
   14001476d:	mov    al,0xb0
   14001476f:	inc    eax
   140014771:	rol    ecx,0xff
   140014774:	mov    al,0xb6
   140014776:	mov    edx,0x1f2487ff
   14001477b:	call   QWORD PTR [rcx-0x6800ede4]
   140014781:	cs (bad) 
   140014783:	call   QWORD PTR [rbx-0x6e00e1da]
   140014789:	and    ebx,DWORD PTR [rbx]
   14001478b:	dec    DWORD PTR [rsi-0x7000e8e1]
   140014791:	(bad)  
   140014792:	(bad)  
   140014793:	dec    DWORD PTR [rdi-0x7000f7eb]
   140014799:	or     eax,DWORD PTR [rax]
   14001479b:	call   QWORD PTR [rbp-0x6c00fff2]
   1400147a1:	cmp    BYTE PTR [rsi],ch
   1400147a3:	(bad)  
   1400147a4:	mov    ebp,0xd4ffadaf
   1400147a9:	(bad)  
   1400147aa:	(bad)  
   1400147ab:	dec    ecx
   1400147ad:	leave  
   1400147ae:	leave  
   1400147af:	inc    edx
   1400147b1:	ret    0xffc2
   1400147b4:	enter  0xc5c5,0xff
   1400147b8:	xchg   BYTE PTR [rdi],dh
   1400147ba:	sub    edi,edi
   1400147bc:	shl    DWORD PTR [rax+0x4e],1
   1400147bf:	call   rsi
   1400147c1:	ins    DWORD PTR es:[rdi],dx
   1400147c2:	pop    rbx
   1400147c3:	(bad)  
   1400147c4:	fldcw  WORD PTR [rbx+0x58]
   1400147c7:	(bad)  
   1400147c8:	fld    TBYTE PTR [rbp+0x5a]
   1400147cb:	(bad)  
   1400147cc:	fisubr WORD PTR [rsi+0x5b]
   1400147cf:	jmp    rax
   1400147d1:	jo     0x140014830
   1400147d3:	jmp    rbx
   1400147d5:	jno    0x140014834
   1400147d7:	jmp    rbp
   1400147d9:	jae    0x140014839
   1400147db:	jmp    rsi
   1400147dd:	je     0x14001483e
   1400147df:	jmp    rdi
   1400147e1:	js     0x140014846
   1400147e3:	(bad)  
   1400147e4:	call   0x12500a057
   1400147e9:	push   0x54
   1400147eb:	call   rdx
   1400147ed:	(bad)
   1400147f0:	(bad)  
   1400147f1:	fstp   st(7)
   1400147f3:	jmp    QWORD PTR [rdx+riz*4-0x6666005e]
   1400147fa:	cdq    
   1400147fb:	push   0x0
	...
   14001480c:	xchg   ebx,eax
   14001480d:	xchg   edx,eax
   14001480e:	xchg   esi,eax
   14001480f:	xchg   ah,cl
   140014811:	(bad)  
   140014812:	enter  0xc6ff,0xbe
   140014816:	sar    bh,0xa5
   140014819:	movabs ds:0xc4c6ffb7b6b9ffa0,eax
   140014822:	(bad)  
   140014823:	push   QWORD PTR [rcx-0x4d004f51]
   140014829:	mov    bl,0xb2
   14001482b:	(bad)  
   14001482c:	mov    ecx,0xc3ffb9b9
   140014831:	ret    
   140014832:	ret    
   140014833:	push   QWORD PTR [rsi-0x71003b41]
   140014839:	ds cmp edi,edi
   14001483c:	xchg   ecx,eax
   14001483d:	sbb    edx,DWORD PTR [rcx]
   14001483f:	call   FWORD PTR [rax+rdi*1+0x2f97ff31]
   140014846:	sub    bh,bh
   140014848:	xchg   ebp,eax
   140014849:	sub    esp,DWORD PTR [rip+0x212994ff]        # 0x1612add4e
   14001484f:	call   QWORD PTR [rsi-0x6e00e2d8]
   140014855:	adc    BYTE PTR [rdi+rdi*8],al
   140014858:	(bad)  
   140014859:	or     eax,0x3085ff00
   14001485e:	(bad)  
   14001485f:	dec    edx
   140014861:	mov    esp,0xececffbb
   140014866:	in     al,dx
   140014867:	(bad)  
   140014868:	(bad)  
   14001486a:	(bad)  
   14001486b:	push   QWORD PTR [rdi-0x3a006f6c]
   140014871:	mov    edx,0xdedeffb8
   140014876:	fdivp  st(7),st
   140014878:	mov    dl,0xa1
   14001487a:	lahf   
   14001487b:	push   QWORD PTR [rdx-0x2200aea0]
   140014881:	jns    0x1400148ec
   140014883:	(bad)  
   140014884:	fbstp  TBYTE PTR [rdi+0x66]
   140014887:	jmp    rdx
   140014889:	jns    0x1400148f2
   14001488b:	jmp    rsi
   14001488d:	jnp    0x1400148f7
   14001488f:	jmp    rsi
   140014891:	jl     0x1400148fc
   140014893:	(bad)  
   140014894:	call   0x12b00b316
   140014899:	jg     0x140014906
   14001489b:	(bad)  
   14001489c:	jmp    0x14001481e
   14001489e:	ins    BYTE PTR es:[rdi],dx
   14001489f:	(bad)  
   1400148a0:	in     al,dx
   1400148a1:	(bad)  
   1400148a2:	ins    DWORD PTR es:[rdi],dx
   1400148a3:	push   rax
   1400148a5:	sub    BYTE PTR [rbx-0x1],0xea
   1400148a9:	ins    DWORD PTR es:[rdi],dx
   1400148aa:	push   rbp
   1400148ab:	call   rdx
   1400148ad:	mov    esp,0xdfd5ffb7
   1400148b2:	loope  0x1400148b3
   1400148b4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400148b5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400148b6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400148b7:	call   FWORD PTR [rcx+0x8b9999]
	...
   1400148c9:	add    BYTE PTR [rax],al
   1400148cb:	add    BYTE PTR [rdx+rdx*4-0x3f39796c],dl
   1400148d2:	sar    bh,0xbe
   1400148d5:	mov    ebx,0x9fa3ffbb
   1400148da:	lahf   
   1400148db:	push   QWORD PTR [rsi-0x36004a4c]
   1400148e1:	retf   
   1400148e2:	leave  
   1400148e3:	(bad)  
   1400148e4:	mov    ecx,0xb9ffb9bb
   1400148e9:	mov    ecx,0xbcbcffb9
   1400148ee:	mov    esp,0xc7c6c6ff
   1400148f3:	(bad)  
   1400148f4:	mov    ecx,0x99ffc7c3
   1400148f9:	push   rsi
   1400148fa:	push   rdx
   1400148fb:	call   QWORD PTR [rcx-0x5c00eee6]
   140014901:	rex.R cmp eax,0x32379cff
   140014907:	call   FWORD PTR [rdx-0x6200d0ca]
   14001490d:	cmp    BYTE PTR [rdi],ch
   14001490f:	call   FWORD PTR [rbx-0x7500e5da]
   140014915:	(bad)  
   140014916:	add    edi,edi
   140014918:	cmp    DWORD PTR [rip+0xffffffffd4daff36],0xffffffd3        # 0x114dc4858
   140014922:	(bad)  
   140014923:	(bad)  
   140014924:	out    dx,al
   140014925:	out    dx,al
   140014926:	out    dx,al
   140014927:	call   FWORD PTR [rdi-0x5300a69e]
   14001492d:	and    BYTE PTR [rdi+rdi*8],cl
   140014930:	mov    bl,0x77
   140014932:	outs   dx,BYTE PTR ds:[rsi]
   140014933:	jmp    rax
   140014935:	loopne 0x140014917
   140014937:	(bad)  
   140014938:	out    dx,al
   140014939:	out    dx,al
   14001493a:	out    dx,al
   14001493b:	jmp    QWORD PTR [rax-0x28008581]
   140014941:	jg     0x1400149b3
   140014943:	jmp    rbp
   140014945:	test   BYTE PTR [rbx-0x1],dh
   140014948:	jmp    0x12b00bed3
   14001494d:	xchg   DWORD PTR [rbp-0x1],esi
   140014950:	in     al,dx
   140014951:	mov    DWORD PTR [rdi-0x1],esi
   140014954:	out    dx,al
   140014955:	mov    bh,BYTE PTR [rax-0x1]
   140014958:	lock mov edi,DWORD PTR [rcx-0x1]
   14001495c:	icebp  
   14001495d:	lea    edi,[rdx-0x1]
   140014960:	repnz (bad) 
   140014962:	jl     0x140014963
   140014964:	not    BYTE PTR [rcx+0x74f3ff7d]
   14001496a:	pop    rbp
   14001496b:	(bad)  
   14001496c:	fdiv   DWORD PTR [rdx-0x1d2a0056]
   140014972:	in     al,0xff
   140014974:	test   eax,0x96ffaaaa
   140014979:	xchg   esi,eax
   14001497a:	xchg   esi,eax
   14001497b:	mov    bl,0x0
	...
   140014989:	add    BYTE PTR [rax],al
   14001498b:	add    BYTE PTR [rdx-0x43796a6d],dl
   140014991:	mov    eax,0xb2bbffba
   140014996:	mov    ah,0xff
   140014998:	movabs eax,ds:0xccffb4b2b4ff9a99
   1400149a1:	int    0xcf
   1400149a3:	(bad)  
   1400149a4:	mov    esi,0xbdffbec0
   1400149a9:	mov    ebp,0xbfbfffbd
   1400149ae:	mov    edi,0xc6c6c6ff
   1400149b3:	(bad)  
   1400149b4:	mov    edx,0x97ffc7c4
   1400149b9:	call   WORD PTR gs:[rcx-0x5700ede6]
   1400149c1:	push   rax
   1400149c2:	rex.W jmp QWORD PTR [rcx-0x5e00c2be]
   1400149c9:	rex.X cmp edi,edi
   1400149cc:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400149cd:	rex.X cmp dil,dil
   1400149d0:	xchg   ebp,eax
   1400149d1:	(bad)  
   1400149d2:	or     bh,bh
   1400149d4:	(bad)  
   1400149d5:	and    bl,BYTE PTR [rdx]
   1400149d7:	dec    ecx
   1400149d9:	mov    eax,0xffffffb6
   1400149de:	(bad)  
   1400149df:	(bad)  
   1400149e0:	jmp    0xea0130cc
   1400149e5:	push   0x61
   1400149e7:	jmp    FWORD PTR [rcx-0x4600fae6]
   1400149ed:	sbb    BYTE PTR [rax],al
   1400149ef:	push   QWORD PTR [rax-0x2e00e4d2]
   1400149f5:	mov    edi,0xf2f2ffbd
   1400149fa:	bnd jmp rdx
   1400149fd:	loope  0x1400149e0
   1400149ff:	jmp    FWORD PTR [rax-0x1400968e]
   140014a05:	xchg   edx,eax
   140014a06:	cmp    edi,0xff8393ee
   140014a0c:	out    dx,eax
   140014a0d:	xchg   ebp,eax
   140014a0e:	test   bh,bh
   140014a10:	icebp  
   140014a11:	xchg   esi,eax
   140014a12:	test   edi,edi
   140014a14:	repz xchg edi,eax
   140014a16:	xchg   bh,bh
   140014a18:	cmc    
   140014a19:	cwde   
   140014a1a:	xchg   edi,edi
   140014a1c:	cmc    
   140014a1d:	cdq    
   140014a1e:	mov    bh,bh
   140014a20:	neg    BYTE PTR [rdx-0x5f060077]
   140014a26:	mov    ?,edi
   140014a28:	stc    
   140014a29:	(bad)  
   140014a2a:	push   0xffffffffffffffff
   140014a2c:	(bad)  [rbp-0x1d270066]
   140014a32:	in     al,0xff
   140014a34:	mov    ch,0xb5
   140014a36:	mov    ch,0xff
   140014a38:	xchg   edi,eax
   140014a39:	xchg   edi,eax
   140014a3a:	xchg   edi,eax
   140014a3b:	leave  
	...
   140014a4c:	xchg   ebx,eax
   140014a4d:	xchg   edx,eax
   140014a4e:	xchg   ebp,eax
   140014a4f:	xchg   BYTE PTR [rsi+rbp*4-0x553c004c],bh
   140014a56:	mov    dl,0xff
   140014a58:	test   eax,0xb3ffa09c
   140014a5d:	mov    cl,0xb6
   140014a5f:	dec    ebp
   140014a61:	iret   
   140014a62:	iret   
   140014a63:	inc    ebx
   140014a65:	(bad)  
   140014a69:	ret    0xffc2
   140014a6c:	(bad)  
   140014a6d:	(bad)  
   140014a6e:	(bad)  
   140014a6f:	inc    esi
   140014a71:	mov    dh,0xff
   140014a74:	mov    esi,0x9cffc8c6
   140014a79:	jg     0x1400149fb
   140014a7b:	dec    DWORD PTR [rdi-0x5200e8e2]
   140014a81:	pop    rax
   140014a82:	push   rcx
   140014a83:	jmp    QWORD PTR [rbp-0x5400b8b4]
   140014a89:	push   rcx
   140014a8a:	rex.WB jmp QWORD PTR [r14-0x6d00cdc4]
   140014a91:	or     eax,DWORD PTR [rax]
   140014a93:	call   QWORD PTR [rdi-0x6600fbee]
   140014a99:	rex.B
   140014a9a:	push   QWORD PTR ss:[rsi-0x62007f79]
   140014aa1:	rex.XB
   140014aa2:	jmp    FWORD PTR ss:[rsi-0x4800fae6]
   140014aa9:	sbb    BYTE PTR [rax],al
   140014aab:	(bad)  
   140014aac:	mov    esi,0xc4ff001b
   140014ab1:	sbb    al,BYTE PTR [rax]
   140014ab3:	push   QWORD PTR [rcx-0x1700aea4]
   140014ab9:	call   0x13dff4aa6
   140014abe:	std    
   140014abf:	(bad)  
   140014ac0:	mov    esi,0xcdffb0b2
   140014ac5:	mov    BYTE PTR [rbx-0x1],bh
   140014ac8:	icebp  
   140014ac9:	sahf   
   140014aca:	mov    ?,edi
   140014acc:	repz movabs al,ds:0xa2f7ff90a1f5ff90
   140014ad6:	xchg   ecx,eax
   140014ad7:	(bad)  
   140014ad8:	clc    
   140014ad9:	movabs ds:0xa4faff93a4f9ff92,eax
   140014ae2:	xchg   esp,eax
   140014ae3:	(bad)  
   140014ae4:	sti    
   140014ae5:	stos   DWORD PTR es:[rdi],eax
   140014ae6:	fwait
   140014ae7:	(bad)  
   140014ae8:	dec    DWORD PTR [rdi-0x621c0087]
   140014aee:	(bad)  
   140014aef:	(bad)  
   140014af0:	fcomp  st(7)
   140014af2:	loop   0x140014af3
   140014af4:	mov    esi,0x96ffc0c0
   140014af9:	xchg   esi,eax
   140014afa:	xchg   esi,eax
   140014afb:	(bad)  
	...
   140014b0c:	pushf  
   140014b0d:	mov    WORD PTR [rsi-0x62566a7a],ss
   140014b13:	jmp    QWORD PTR [rcx-0x25]
   140014b16:	pushf  
   140014b17:	call   QWORD PTR [rcx-0x3c005845]
   140014b1d:	lods   al,BYTE PTR ds:[rsi]
   140014b1e:	mov    eax,0xd1d1d0ff
   140014b23:	inc    edi
   140014b25:	mov    edi,0xc6c6c6ff
   140014b2b:	inc    edi
   140014b2d:	mov    edi,0xc9c9c9ff
   140014b33:	inc    edx
   140014b35:	(bad)  
   140014b36:	retf   0xa9ff
   140014b39:	(bad)  
   140014b3a:	(bad)  
   140014b3b:	dec    DWORD PTR [rbp-0x5000e2da]
   140014b41:	pop    rbx
   140014b42:	push   rbp
   140014b43:	jmp    FWORD PTR [rcx+rbx*2+0x5db2ff51]
   140014b4a:	push   rsp
   140014b4b:	call   FWORD PTR [rbp-0x6c00e4d7]
   140014b51:	or     DWORD PTR [rax],eax
   140014b53:	call   FWORD PTR [rbp-0x5a00ffef]
   140014b59:	adc    eax,DWORD PTR [rax]
   140014b5b:	jmp    FWORD PTR [rcx-0x5100f9e6]
   140014b61:	(bad)  
   140014b62:	add    bh,bh
   140014b64:	mov    ch,0x18
   140014b66:	add    bh,bh
   140014b68:	mov    ebx,0xc3ff0019
   140014b6d:	sbb    eax,DWORD PTR [rax]
   140014b6f:	inc    edi
   140014b71:	sbb    BYTE PTR [rax],al
   140014b73:	inc    edx
   140014b75:	and    ecx,DWORD PTR [rcx]
   140014b77:	dec    edx
   140014b79:	scas   eax,DWORD PTR es:[rdi]
   140014b7a:	stos   BYTE PTR es:[rdi],al
   140014b7b:	push   rdx
   140014b7d:	repnz repnz (bad) 
   140014b80:	sti    
   140014b81:	sti    
   140014b82:	sti    
   140014b83:	jmp    FWORD PTR [rcx-0x12007773]
   140014b89:	movabs ds:0xabf9ff9aa9f7ff95,al
   140014b92:	fwait
   140014b93:	(bad)  
   140014b94:	stc    
   140014b95:	lods   al,BYTE PTR ds:[rsi]
   140014b96:	pushf  
   140014b97:	(bad)  
   140014b98:	sti    
   140014b99:	lods   eax,DWORD PTR ds:[rsi]
   140014b9a:	sahf   
   140014b9b:	(bad)  
   140014b9c:	cld    
   140014b9d:	scas   al,BYTE PTR es:[rdi]
   140014b9e:	sahf   
   140014b9f:	(bad)  
   140014ba0:	std    
   140014ba1:	scas   al,BYTE PTR es:[rdi]
   140014ba2:	lahf   
   140014ba3:	(bad)  
   140014ba4:	(bad)  
   140014ba5:	mov    ch,0xa5
   140014ba7:	(bad)  
   140014ba8:	call   FWORD PTR [rbp-0x60120077]
   140014bae:	nop
   140014baf:	(bad)  
   140014bb0:	fchs   
   140014bb2:	loopne 0x140014bb3
   140014bb4:	ret    
   140014bb5:	mov    bh,0xff
   140014bb8:	xchg   esi,eax
   140014bb9:	xchg   ebp,eax
   140014bba:	xchg   ebp,eax
   140014bbb:	in     al,0x0
	...
   140014bc9:	add    BYTE PTR [rax],al
   140014bcb:	add    BYTE PTR [rdi+0x347d9a8b],bl
   140014bd1:	int    0x7e
   140014bd3:	inc    DWORD PTR [rax]
   140014bd5:	jmp    FWORD PTR [rbx-0x1]
   140014bd8:	je     0x140014b91
   140014bda:	fwait
   140014bdb:	dec    edx
   140014bdd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140014bde:	mov    edx,0xd3d3d3ff
   140014be3:	dec    ebx
   140014be5:	retf   
   140014be6:	retf   
   140014be7:	dec    ecx
   140014be9:	leave  
   140014bea:	leave  
   140014beb:	dec    ebx
   140014bed:	retf   
   140014bee:	retf   
   140014bef:	dec    ebx
   140014bf1:	retf   
   140014bf2:	retf   
   140014bf3:	dec    edx
   140014bf5:	int    0xcf
   140014bf7:	push   QWORD PTR [rdx-0x6e005052]
   140014bfd:	xor    BYTE PTR [rdx],ch
   140014bff:	push   QWORD PTR [rcx-0x4b00aaa6]
   140014c05:	addr32 pop rdi
   140014c07:	push   QWORD PTR [rbp-0x6800a9a1]
   140014c0d:	(bad)  
   140014c0e:	or     bh,bh
   140014c10:	cwde   
   140014c11:	or     al,BYTE PTR [rax]
   140014c13:	jmp    QWORD PTR [rcx-0x5800ffee]
   140014c19:	adc    al,0x0
   140014c1b:	jmp    FWORD PTR [rbp+rdx*1+0x16b2ff00]
   140014c22:	add    bh,bh
   140014c24:	mov    bh,0x18
   140014c26:	add    bh,bh
   140014c28:	mov    esi,0xc4ff001a
   140014c2d:	sbb    al,0x0
   140014c2f:	dec    ecx
   140014c31:	(bad)  
   140014c32:	add    bh,bh
   140014c34:	shl    BYTE PTR [rdi],cl
   140014c36:	or     bh,bh
   140014c38:	ret    0x7481
   140014c3b:	(bad)  
   140014c3c:	fcom   st(3)
   140014c3e:	sar    edi,cl
   140014c40:	cmc    
   140014c41:	cmc    
   140014c42:	cmc    
   140014c43:	(bad)  
   140014c44:	in     al,dx
   140014c45:	jmp    0x140014c32
   140014c47:	jmp    FWORD PTR [rbp-0x600837d]
   140014c4d:	mov    bl,0xa5
   140014c4f:	(bad)  
   140014c50:	sti    
   140014c51:	mov    ah,0xa5
   140014c53:	(bad)  
   140014c54:	cld    
   140014c55:	mov    dh,0xa7
   140014c57:	(bad)  
   140014c58:	(bad)  
   140014c59:	mov    bh,0xa7
   140014c5b:	(bad)  
   140014c5c:	(bad)  
   140014c5d:	mov    eax,0xb7ffffa8
   140014c62:	test   eax,0xafbdffff
   140014c67:	(bad)  
   140014c68:	jmp    FWORD PTR [rbp-0x5e110066]
   140014c6e:	(bad)  
   140014c6f:	(bad)  
   140014c70:	fcmovnu st,st(6)
   140014c72:	fdivp  st(7),st
   140014c74:	enter  0xcdcb,0xff
   140014c78:	xchg   ebp,eax
   140014c79:	xchg   ebp,eax
   140014c7a:	xchg   ebp,eax
   140014c7b:	lock fwait
   140014c7d:	fwait
   140014c7e:	fwait
   140014c7f:	and    BYTE PTR [rax],al
	...
   140014c89:	add    BYTE PTR [rax],al
   140014c8b:	add    BYTE PTR [rdx+0x3e6e9f9a],bl
   140014c91:	xchg   esp,eax
   140014c92:	inc    DWORD PTR [esi]
   140014c95:	push   rsp
   140014c96:	sbb    edi,edi
   140014c98:	jge    0x140014d0c
   140014c9a:	je     0x140014c9b
   140014c9c:	ret    
   140014c9d:	mov    edx,0xd8d5ffc3
   140014ca2:	fcos   
   140014ca4:	iret   
   140014ca5:	iret   
   140014ca6:	iret   
   140014ca7:	dec    esp
   140014ca9:	int3   
   140014caa:	int3   
   140014cab:	dec    ebp
   140014cad:	int    0xcd
   140014caf:	dec    esi
   140014cb1:	(bad)  
   140014cb2:	(bad)  
   140014cb3:	call   rax
   140014cb5:	rcl    esp,cl
   140014cb7:	(bad)  
   140014cb8:	mov    esp,0x96ffbbb8
   140014cbd:	cmp    dh,BYTE PTR [rdi+rdi*8]
   140014cc0:	mov    cl,0x5c
   140014cc2:	push   rbp
   140014cc3:	(bad)  
   140014cc4:	mov    esi,0xacff727a
   140014cc9:	rex.WR
   140014cca:	rex.X call QWORD PTR [rbp-0x6100fff7]
   140014cd1:	(bad)  
   140014cd3:	jmp    QWORD PTR [rbp-0x5600ffed]
   140014cd9:	adc    al,0x0
   140014cdb:	push   QWORD PTR [rax-0x4700ffea]
   140014ce1:	sbb    DWORD PTR [rax],eax
   140014ce3:	inc    ebx
   140014ce5:	sbb    eax,DWORD PTR [rax]
   140014ce7:	dec    ebx
   140014ce9:	(bad)  
   140014cea:	add    bh,bh
   140014cec:	rcr    DWORD PTR [rdi],cl
   140014cee:	add    bh,bh
   140014cf0:	ficom  DWORD PTR [rdi]
   140014cf2:	add    bh,bh
   140014cf4:	out    0x3d,al
   140014cf6:	sbb    eax,0x99aaf7ff
   140014cfb:	(bad)  
   140014cfc:	mov    edi,0xd7ff9ba2
   140014d01:	xlat   BYTE PTR ds:[rbx]
   140014d02:	xlat   BYTE PTR ds:[rbx]
   140014d03:	(bad)  
   140014d04:	out    dx,eax
   140014d05:	out    dx,eax
   140014d06:	out    dx,eax
   140014d07:	inc    esi
   140014d09:	mov    edi,0x9dcdffbd
   140014d0e:	xchg   ecx,eax
   140014d0f:	(bad)  
   140014d10:	inc    edx
   140014d12:	mov    cl,0xff
   140014d14:	inc    ebx
   140014d16:	mov    bl,0xff
   140014d18:	inc    ebp
   140014d1a:	mov    bl,0xff
   140014d1c:	inc    esi
   140014d1e:	mov    ah,0xff
   140014d20:	inc    edi
   140014d22:	mov    ch,0xff
   140014d24:	dec    edx
   140014d26:	mov    ecx,0xadc2ffff
   140014d2b:	push   rcx
   140014d2d:	test   eax,0xdadeff8f
   140014d32:	fcos   
   140014d34:	int    0xd1
   140014d36:	sar    edi,cl
   140014d38:	xchg   esi,eax
   140014d39:	xchg   esi,eax
   140014d3a:	xchg   esi,eax
   140014d3b:	cld    
   140014d3c:	fwait
   140014d3d:	fwait
   140014d3e:	fwait
   140014d3f:	rex.WX add BYTE PTR [rax],al
	...
   140014d4a:	add    BYTE PTR [rax],al
   140014d4c:	cdq    
   140014d4d:	xchg   edi,eax
   140014d4e:	pushf  
   140014d4f:	outs   dx,BYTE PTR ds:[rsi]
   140014d50:	movsxd eax,DWORD PTR [rbp+rdx*2-0x1]
   140014d54:	(bad)  
   140014d55:	add    BYTE PTR [rdx],al
   140014d57:	(bad)  
   140014d58:	jl     0x140014dc7
   140014d5a:	ins    BYTE PTR es:[rdi],dx
   140014d5b:	(bad)  
   140014d5c:	mov    ebp,0xd5ffc1c0
   140014d61:	(bad)  
   140014d62:	xlat   BYTE PTR ds:[rbx]
   140014d63:	call   rax
   140014d65:	rcl    al,1
   140014d67:	dec    edi
   140014d69:	iret   
   140014d6a:	iret   
   140014d6b:	call   rcx
   140014d6d:	rcl    ecx,1
   140014d6f:	call   rdx
   140014d71:	rcl    dl,cl
   140014d73:	call   rsi
   140014d75:	xlat   BYTE PTR ds:[rbx]
   140014d76:	fdivr  st,st(7)
   140014d78:	mov    ebx,0x95ffbcbb
   140014d7d:	cmp    al,0x34
   140014d7f:	push   QWORD PTR [rdi+rbx*2-0x7f3b00a7]
   140014d86:	jp     0x140014d87
   140014d88:	lahf   
   140014d89:	sub    bl,BYTE PTR [rip+0x799ff]        # 0x14008e78e
   140014d8f:	jmp    QWORD PTR [rsi-0x5100ffee]
   140014d95:	adc    eax,0x18b6ff00
   140014d9a:	add    bh,bh
   140014d9c:	ret    0x1b
   140014d9f:	dec    edx
   140014da1:	(bad)  
   140014da2:	add    bh,bh
   140014da4:	shl    BYTE PTR [rax],cl
   140014da6:	add    bh,bh
   140014da8:	(bad)  [rdx]
   140014daa:	add    bh,bh
   140014dac:	loop   0x140014dd0
   140014dae:	add    bh,bh
   140014db0:	call   0x135004dd0
   140014db5:	pop    rcx
   140014db6:	(bad)  
   140014db7:	(bad)  
   140014db8:	std    
   140014db9:	mov    edi,0xc4f5ffb3
   140014dbe:	mov    ecx,0xaaaec1ff
   140014dc3:	dec    edi
   140014dc5:	iret   
   140014dc6:	iret   
   140014dc7:	jmp    rax
   140014dc9:	loopne 0x140014dab
   140014dcb:	jmp    FWORD PTR [rcx-0x17006663]
   140014dd1:	mov    edx,0xccffffab
   140014dd6:	mov    esp,0xbdceffff
   140014ddb:	(bad)  
   140014ddc:	dec    edi
   140014dde:	mov    esi,0xbed0ffff
   140014de3:	(bad)  
   140014de4:	call   rsp
   140014de6:	ret    0xffff
   140014de9:	sar    DWORD PTR [rdi+rdi*8-0x70520a],1
   140014df0:	(bad)  
   140014df2:	sar    edi,1
   140014df4:	rcl    edi,cl
   140014df6:	fcos   
   140014df8:	cwde   
   140014df9:	xchg   edi,eax
   140014dfa:	xchg   edi,eax
   140014dfb:	call   FWORD PTR [rdx+0x719a9a]
	...
   140014e09:	add    BYTE PTR [rax],al
   140014e0b:	add    BYTE PTR [rsi+0x6879a19d],bl
   140014e11:	fs call QWORD PTR gs:[rbx+rcx*2+0x43]
   140014e17:	inc    DWORD PTR [rdi-0x52008080]
   140014e1d:	scas   al,BYTE PTR es:[rdi]
   140014e1e:	mov    cl,0xff
   140014e20:	loope  0x140014e03
   140014e22:	loop   0x140014e23
   140014e24:	iret   
   140014e25:	iret   
   140014e26:	iret   
   140014e27:	dec    eax
   140014e29:	enter  0xffc8,0xce
   140014e2d:	(bad)  
   140014e2e:	(bad)  
   140014e2f:	call   rdx
   140014e31:	rcl    dl,cl
   140014e33:	(bad)  
   140014e34:	fcmovnu st,st(3)
   140014e36:	(bad)  
   140014e38:	mov    ebx,0x8fffc1c0
   140014e3d:	ds cmp edi,edi
   140014e40:	mov    ecx,0xbfff5d65
   140014e45:	jb     0x140014eb0
   140014e47:	call   FWORD PTR [rax+rdx*1+0xfa5ff04]
   140014e4e:	add    bh,bh
   140014e50:	lods   eax,DWORD PTR ds:[rsi]
   140014e51:	adc    eax,0x17b5ff00
   140014e56:	add    bh,bh
   140014e58:	mov    esi,0xc6ff001a
   140014e5d:	sbb    al,0x0
   140014e5f:	dec    ebp
   140014e61:	(bad)  
   140014e62:	add    bh,bh
   140014e64:	(bad)  
   140014e65:	and    DWORD PTR [rax],eax
   140014e67:	(bad)  
   140014e68:	(bad)  [rbx]
   140014e6a:	add    bh,bh
   140014e6c:	jrcxz  0x140014e90
   140014e6e:	add    bh,bh
   140014e70:	jmp    0x140014e91
   140014e72:	add    bh,bh
   140014e74:	div    BYTE PTR [rdx+0x56]
   140014e77:	(bad)  
   140014e78:	dec    dh
   140014e7a:	(bad)  
   140014e7b:	(bad)  
   140014e7c:	dec    esi
   140014e7e:	(bad)  
   140014e81:	shl    DWORD PTR [rdi-0x4f4d4401],0xff
   140014e88:	leave  
   140014e89:	leave  
   140014e8a:	leave  
   140014e8b:	(bad)  
   140014e8c:	fcomp  st(0)
   140014e8e:	fdivr  st,st(7)
   140014e90:	movabs al,ds:0xffffbdccf5ff8a90
   140014e99:	(bad)  
   140014e9a:	(bad)  
   140014e9d:	(bad)  
   140014e9e:	(bad)  
   140014ea1:	(bad)  
   140014ea2:	(bad)  
   140014ea3:	(bad)  
   140014ea4:	(bad)  
   140014ea5:	fmul   st,st(1)
   140014ea7:	(bad)  
   140014ea8:	(bad)  
   140014ea9:	fcmove st,st(2)
   140014eab:	(bad)  
   140014eac:	sti    
   140014ead:	mov    bl,0x95
   140014eaf:	(bad)  
   140014eb0:	(bad)  
   140014eb2:	(bad)  
   140014eb3:	(bad)  
   140014eb4:	fsubr  st(0),st
   140014eb6:	loop   0x140014eb7
   140014eb8:	(bad)  
   140014eb9:	fwait
   140014eba:	fwait
   140014ebb:	call   FWORD PTR [rcx+0x8b9999]
	...
   140014ec9:	add    BYTE PTR [rax],al
   140014ecb:	add    BYTE PTR [rbp-0x6fc55a5e],ah
   140014ed1:	xchg   ecx,eax
   140014ed2:	(bad)  
   140014ed3:	call   QWORD PTR [rdx-0x61006e6c]
   140014ed9:	cdq    
   140014eda:	pushf  
   140014edb:	(bad)  
   140014edc:	fcmovu st,st(0)
   140014ede:	(bad)  
   140014ee0:	(bad)  
   140014ee1:	(bad)  
   140014ee2:	(bad)  
   140014ee3:	(bad)  
   140014ee4:	clc    
   140014ee5:	clc    
   140014ee6:	clc    
   140014ee7:	jmp    rbp
   140014ee9:	in     eax,0xe5
   140014eeb:	(bad)  
   140014eec:	(bad)  
   140014eee:	fcos   
   140014ef0:	rcl    ebx,cl
   140014ef2:	sar    edi,cl
   140014ef4:	rcl    ebx,cl
   140014ef6:	sar    edi,cl
   140014ef8:	ror    al,0xc9
   140014efb:	call   QWORD PTR [rcx-0x4400b5b1]
   140014f01:	(bad)  
   140014f02:	push   rdi
   140014f03:	push   QWORD PTR [rcx+rdx*2+0x69cff44]
   140014f0a:	add    bh,bh
   140014f0c:	test   al,0x13
   140014f0e:	add    bh,bh
   140014f10:	scas   eax,DWORD PTR es:[rdi]
   140014f11:	adc    eax,0x18b8ff00
   140014f16:	add    bh,bh
   140014f18:	rcr    BYTE PTR [rbx],0x0
   140014f1b:	inc    edi
   140014f1d:	sbb    eax,0x20d0ff00
   140014f22:	add    bh,bh
   140014f24:	xlat   BYTE PTR ds:[rbx]
   140014f25:	and    DWORD PTR [rax],eax
   140014f27:	(bad)  
   140014f28:	fisub  WORD PTR [rbx]
   140014f2a:	add    bh,bh
   140014f2c:	call   0x130004f4f
   140014f31:	(bad)  
   140014f32:	add    edi,edi
   140014f34:	cli    
   140014f35:	xchg   ecx,eax
   140014f36:	jnp    0x140014f37
   140014f38:	(bad)  
   140014f39:	fcmovnbe st,st(4)
   140014f3b:	(bad)  
   140014f3c:	call   rbp
   140014f3e:	retf   
   140014f3f:	(bad)  
   140014f40:	call   rsp
   140014f42:	leave  
   140014f43:	call   rsi
   140014f45:	mov    bh,0xae
   140014f47:	push   QWORD PTR [rdi-0x39004c4c]
   140014f4d:	mov    dh,0xff
   140014f50:	retf   
   140014f51:	retf   
   140014f52:	retf   
   140014f53:	jmp    QWORD PTR [rsi-0x600726c]
   140014f59:	(bad)  
   140014f5a:	(bad)  
   140014f5b:	(bad)  
   140014f5c:	(bad)  
   140014f5d:	fmul   st(5),st
   140014f5f:	(bad)  
   140014f60:	(bad)  
   140014f61:	fmul   st(6),st
   140014f63:	(bad)  
   140014f64:	(bad)  
   140014f65:	(bad)  
   140014f67:	(bad)  
   140014f68:	jmp    rsp
   140014f6a:	xlat   BYTE PTR ds:[rbx]
   140014f6b:	(bad)  
   140014f6c:	(bad)  
   140014f6d:	mov    esi,0xc6e0ffa2
   140014f72:	mov    ebp,0xeae7e1ff
   140014f77:	jmp    QWORD PTR [rax-0x66005f60]
   140014f7d:	cdq    
   140014f7e:	cdq    
   140014f7f:	sahf   
	...
   140014f90:	mov    ah,0xb4
   140014f92:	mov    bl,0x41
   140014f94:	int3   
   140014f95:	(bad)  
   140014f96:	iret   
   140014f97:	xchg   esi,eax
   140014f98:	mov    bl,0xb6
   140014f9a:	mov    bh,0xf1
   140014f9c:	(bad)  
   140014f9d:	(bad)  
   140014f9e:	(bad)  
   140014f9f:	(bad)  
   140014fa0:	(bad)  
   140014fa2:	(bad)  
   140014fa4:	hlt    
   140014fa5:	hlt    
   140014fa6:	hlt    
   140014fa7:	(bad)  
   140014fa8:	(bad)  
   140014fa9:	(bad)  
   140014faa:	(bad)  
   140014fab:	(bad)  
   140014fac:	(bad)  
   140014fad:	(bad)  
   140014fae:	(bad)  
   140014faf:	(bad)  
   140014fb0:	sti    
   140014fb1:	cli    
   140014fb2:	cli    
   140014fb3:	(bad)  
   140014fb4:	(bad)  
   140014fb5:	(bad)  
   140014fb6:	(bad)  
   140014fb7:	inc    ebp
   140014fb9:	(bad)  
   140014fba:	sar    bh,cl
   140014fbc:	pushf  
   140014fbd:	jno    0x14001502c
   140014fbf:	jmp    FWORD PTR [rdx-0x5900c7be]
   140014fc5:	sub    ebx,DWORD PTR [rsi]
   140014fc7:	call   FWORD PTR [rdi-0x5400fff8]
   140014fcd:	(bad)  
   140014fce:	add    bh,bh
   140014fd0:	mov    dl,0x16
   140014fd2:	add    bh,bh
   140014fd4:	mov    edx,0xc2ff001a
   140014fd9:	sbb    al,0x0
   140014fdb:	dec    ebx
   140014fdd:	(bad)  
   140014fde:	add    bh,bh
   140014fe0:	rcr    DWORD PTR [rdi],cl
   140014fe2:	add    bh,bh
   140014fe4:	fisub  DWORD PTR [rdx]
   140014fe6:	add    bh,bh
   140014fe8:	jrcxz  0x14001500e
   140014fea:	add    bh,bh
   140014fec:	in     al,dx
   140014fed:	(bad)  
   140014fee:	add    bh,bh
   140014ff0:	repz (bad) 
   140014ff2:	adc    edi,edi
   140014ff4:	(bad)  
   140014ff5:	mov    dl,0xa2
   140014ff7:	(bad)  
   140014ff8:	jmp    rbx
   140014ffa:	fdiv   st(7),st
   140014ffc:	(bad)  
   140014ffd:	fcmovbe st,st(1)
   140014fff:	(bad)  
   140015000:	(bad)  
   140015001:	fcmovbe st,st(0)
   140015003:	(bad)  
   140015004:	(bad)  
   140015005:	fcmovnbe st,st(0)
   140015007:	dec    eax
   140015009:	mov    ah,0xad
   14001500b:	push   QWORD PTR [rdx-0x39004e4f]
   140015011:	mov    dh,0xff
   140015014:	mov    dl,0xb0
   140015016:	scas   eax,DWORD PTR es:[rdi]
   140015017:	call   rcx
   140015019:	mov    ecx,0xe2ffffaf
   14001501e:	(bad)  
   14001501f:	(bad)  
   140015020:	jmp    rdx
   140015022:	(bad)  
   140015023:	(bad)  
   140015024:	jmp    rbp
   140015026:	fdivr  st,st(7)
   140015028:	(bad)  
   140015029:	jmp    0x10901500d
   14001502e:	mov    al,0xff
   140015030:	call   0x128010afd
   140015035:	out    dx,al
   140015036:	lock jmp FWORD PTR [rdx-0x69005556]
   14001503d:	xchg   esi,eax
   14001503e:	xchg   esi,eax
   14001503f:	scas   eax,DWORD PTR es:[rdi]
	...
   140015058:	scas   eax,DWORD PTR es:[rdi]
   140015059:	mov    ah,0xb4
   14001505b:	sub    dh,BYTE PTR [rcx-0x50bf4c4d]
   140015061:	mov    al,0xb0
   140015063:	mov    DWORD PTR [rdx-0x37004344],edi
   140015069:	retf   0xffca
   14001506c:	fcmovu st,st(3)
   14001506e:	(bad)  
   140015070:	repz hlt 
   140015072:	hlt    
   140015073:	(bad)  
   140015074:	(bad)  
   140015075:	(bad)  
   140015076:	(bad)  
   140015077:	call   rbp
   140015079:	(bad)  
   14001507b:	jmp    FWORD PTR [rbx+rcx*4+0xb91ff8a]
   140015082:	add    bh,bh
   140015084:	sahf   
   140015085:	(bad)  
   140015087:	jmp    QWORD PTR [rcx+rdx*1+0x15acff00]
   14001508e:	add    bh,bh
   140015090:	mov    ch,0x17
   140015092:	add    bh,bh
   140015094:	mov    ebp,0xc4ff0019
   140015099:	sbb    al,0x0
   14001509b:	dec    esi
   14001509d:	(bad)  
   14001509e:	add    bh,bh
   1400150a0:	(bad)  
   1400150a1:	and    BYTE PTR [rax],al
   1400150a3:	(bad)  
   1400150a4:	fsub   QWORD PTR [rbx]
   1400150a6:	add    bh,bh
   1400150a8:	out    0x24,al
   1400150aa:	add    bh,bh
   1400150ac:	out    dx,al
   1400150ad:	sbb    al,0x0
   1400150af:	(bad)  
   1400150b0:	clc    
   1400150b1:	push   rsp
   1400150b2:	xor    bh,bh
   1400150b4:	call   rcx
   1400150b6:	(bad)  
   1400150b7:	(bad)  
   1400150b8:	jmp    rdi
   1400150ba:	loop   0x1400150bb
   1400150bc:	(bad)  
   1400150bd:	(bad)  
   1400150bf:	(bad)  
   1400150c0:	(bad)  
   1400150c1:	(bad)  
   1400150c3:	(bad)  
   1400150c4:	jmp    rax
   1400150c6:	xlat   BYTE PTR ds:[rbx]
   1400150c7:	(bad)  
   1400150c8:	cli    
   1400150c9:	fst    st(4)
   1400150cb:	inc    edx
   1400150cd:	mov    dl,0xad
   1400150cf:	(bad)  
   1400150d0:	mov    esp,0xb9ffb5b8
   1400150d5:	scas   al,BYTE PTR es:[rdi]
   1400150d6:	test   eax,0xcdd7edff
   1400150db:	(bad)  
   1400150dc:	jmp    rdi
   1400150de:	(bad)  
   1400150e0:	jmp    rdi
   1400150e2:	fdivp  st(7),st
   1400150e4:	(bad)  
   1400150e5:	jmp    0x12e0150c8
   1400150ea:	out    0xff,al
   1400150ec:	call   rbp
   1400150ee:	sar    edi,0xe9
   1400150f1:	(bad)  
   1400150f2:	mov    eax,0xf5f2eeff
   1400150f7:	(bad)  
   1400150f8:	mov    ecx,0x93ffb9b9
   1400150fd:	xchg   ebx,eax
   1400150fe:	xchg   ebx,eax
   1400150ff:	mov    BYTE PTR [rax],0x0
	...
   140015122:	add    BYTE PTR [rax],al
   140015124:	scas   eax,DWORD PTR es:[rdi]
   140015125:	mov    dl,0xb2
   140015127:	sbb    eax,0x3db3b3b1
   14001512c:	scas   eax,DWORD PTR es:[rdi]
   14001512d:	mov    bl,0xb2
   14001512f:	cwde   
   140015130:	mov    ecx,0xc6ffbbbb
   140015135:	mov    edi,0xd7d5ceff
   14001513b:	push   QWORD PTR [rcx-0x79006766]
   140015141:	add    BYTE PTR [rax],al
   140015143:	call   FWORD PTR [rbp-0x5900fff6]
   140015149:	adc    eax,0x15aeff00
   14001514e:	add    bh,bh
   140015150:	mov    bh,0x17
   140015152:	add    bh,bh
   140015154:	mov    esi,0xc6ff001b
   140015159:	sbb    al,0x0
   14001515b:	call   rax
   14001515d:	(bad)  
   14001515e:	add    bh,bh
   140015160:	fsub   DWORD PTR [rdx]
   140015162:	add    bh,bh
   140015164:	fisub  WORD PTR [rbx]
   140015166:	add    bh,bh
   140015168:	call   0x131005190
   14001516d:	and    BYTE PTR [rax],al
   14001516f:	(bad)  
   140015170:	cli    
   140015171:	jb     0x1400151c9
   140015173:	(bad)  
   140015174:	jmp    rbx
   140015176:	fdivp  st(7),st
   140015178:	jmp    rdi
   14001517a:	loope  0x14001517b
   14001517c:	jmp    rsp
   14001517e:	(bad)  
   140015180:	jmp    rsp
   140015182:	fdiv   st(7),st
   140015184:	jmp    rsp
   140015186:	fdiv   st(7),st
   140015188:	jmp    rsi
   14001518a:	(bad)  
   14001518c:	(bad)  
   14001518d:	call   0x12a015170
   140015192:	(bad)  
   140015194:	(bad)  
   140015195:	jmp    0x12c01517a
   14001519a:	in     al,0xff
   14001519c:	(bad)  
   14001519d:	in     eax,dx
   14001519e:	in     eax,0xff
   1400151a0:	(bad)  
   1400151a1:	out    dx,eax
   1400151a2:	call   0x129f151a6
   1400151a7:	(bad)  
   1400151a8:	push   rbp
   1400151aa:	lock (bad) 
   1400151ac:	jmp    rbx
   1400151ae:	(bad)  
   1400151af:	(bad)  
   1400151b0:	jmp    0x140015178
   1400151b2:	mov    ch,0xff
   1400151b4:	repnz cmc 
   1400151b6:	idiv   edi
   1400151b8:	(bad)  
   1400151b9:	(bad)
   1400151bc:	xchg   edx,eax
   1400151bd:	xchg   edx,eax
   1400151be:	xchg   edx,eax
   1400151bf:	ficomp DWORD PTR [rbx+0xf9b9b]
	...
   1400151ed:	add    BYTE PTR [rax],al
   1400151ef:	add    BYTE PTR [rbx-0x53f3494a],dh
   1400151f5:	mov    al,0xb0
   1400151f7:	and    edi,DWORD PTR [rdx+rax*8-0x544d243b]
   1400151fe:	test   eax,0x986ff
   140015203:	jmp    QWORD PTR [rcx-0x5800fff9]
   140015209:	adc    eax,0x16afff00
   14001520e:	add    bh,bh
   140015210:	mov    eax,0xbfff0018
   140015215:	sbb    al,BYTE PTR [rax]
   140015217:	dec    eax
   140015219:	sbb    eax,0x1fd2ff00
   14001521e:	add    bh,bh
   140015220:	(bad)  [rcx]
   140015222:	add    bh,bh
   140015224:	loope  0x14001524a
   140015226:	add    bh,bh
   140015228:	(bad)  
   140015229:	and    al,BYTE PTR [rax]
   14001522b:	push   rbx
   14001522d:	and    eax,0x95feff00
   140015232:	cmp    bh,0xff
   140015235:	repnz in eax,dx
   140015237:	(bad)  
   140015238:	(bad)  
   140015239:	jmp    0x140015222
   14001523b:	(bad)  
   14001523c:	(bad)  
   14001523d:	jmp    0x140015224
   14001523f:	(bad)  
   140015240:	(bad)  
   140015241:	in     eax,dx
   140015242:	out    0xff,eax
   140015244:	(bad)  
   140015245:	out    dx,al
   140015246:	jmp    0x12af2524a
   14001524b:	(bad)  
   14001524c:	push   rax
   14001524e:	(bad)  
   14001524f:	(bad)  
   140015250:	push   rax
   140015252:	call   0x129f15256
   140015257:	(bad)  
   140015258:	(bad)  
   140015259:	out    dx,al
   14001525a:	in     eax,0xff
   14001525c:	(bad)  
   14001525d:	jmp    0x14001523f
   14001525f:	(bad)  
   140015260:	jmp    rsi
   140015262:	fcos   
   140015264:	(bad)  
   140015265:	(bad)  
   140015267:	(bad)  
   140015268:	(bad)  
   140015269:	fcmovne st,st(4)
   14001526b:	(bad)  
   14001526c:	inc    bh
   14001526e:	lods   al,BYTE PTR ds:[rsi]
   14001526f:	jmp    rbx
   140015271:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140015272:	(bad)  
   140015273:	push   rdx
   140015275:	cmc    
   140015276:	idiv   edi
   140015278:	rcl    bl,cl
   14001527a:	sar    edi,cl
   14001527c:	lea    ecx,[rbp-0x66660f73]
   140015282:	cdq    
   140015283:	xor    al,0x0
	...
   1400152b5:	add    BYTE PTR [rax],al
   1400152b7:	add    bh,al
   1400152b9:	(bad)  
   1400152ba:	shl    DWORD PTR [rbx-0x49],1
   1400152bd:	mov    ebx,0x1b8affba
   1400152c2:	adc    eax,0x1a1ff
   1400152c7:	jmp    FWORD PTR [rax-0x4f00ffeb]
   1400152cd:	(bad)  
   1400152ce:	add    bh,bh
   1400152d0:	mov    ecx,0xc0ff0019
   1400152d5:	sbb    eax,DWORD PTR [rax]
   1400152d7:	dec    ecx
   1400152d9:	(bad)  
   1400152da:	add    bh,bh
   1400152dc:	shl    DWORD PTR [rdx],cl
   1400152de:	add    bh,bh
   1400152e0:	(bad)  [rax+rax*1]
   1400152e3:	jmp    rbx
   1400152e5:	(bad)  
   1400152e6:	add    bh,bh
   1400152e8:	in     al,dx
   1400152e9:	and    DWORD PTR [rax],eax
   1400152eb:	(bad)  
   1400152ec:	clc    
   1400152ed:	cmp    BYTE PTR [rdx],dl
   1400152ef:	(bad)  
   1400152f0:	(bad)  
   1400152f1:	mov    ebp,0xfdffffae
   1400152f6:	sti    
   1400152f7:	(bad)  
   1400152f8:	(bad)  
   1400152f9:	jmp    0x1400152e0
   1400152fb:	(bad)  
   1400152fc:	jmp    rsp
   1400152fe:	(bad)  
   140015300:	(bad)  
   140015301:	(bad)  
   140015303:	(bad)  
   140015304:	(bad)  
   140015305:	fmul   st,st(0)
   140015307:	(bad)  
   140015308:	call   rdx
   14001530a:	mov    esi,0xb8cbfeff
   14001530f:	(bad)  
   140015310:	std    
   140015311:	(bad)  
   140015312:	mov    cl,0xff
   140015314:	inc    dl
   140015316:	test   eax,0xa0bbf7ff
   14001531b:	(bad)  
   14001531c:	out    dx,al
   14001531d:	mov    dh,0x9d
   14001531f:	(bad)  
   140015320:	jmp    0x12a00f2da
   140015325:	mov    ebx,0xc1eaffa7
   14001532a:	mov    al,0xff
   14001532c:	in     eax,dx
   14001532d:	(bad)  
   14001532e:	mov    dl,0xff
   140015330:	faddp  st(2),st
   140015332:	mov    ch,0xff
   140015334:	idiv   al
   140015336:	stc    
   140015337:	(bad)  
   140015338:	(bad)  
   14001533a:	loopne 0x14001533b
   14001533c:	xchg   esp,eax
   14001533d:	xchg   esp,eax
   14001533e:	xchg   esp,eax
   14001533f:	std    
   140015340:	lods   al,BYTE PTR ds:[rsi]
   140015341:	lods   al,BYTE PTR ds:[rsi]
   140015342:	lods   al,BYTE PTR ds:[rsi]
   140015343:	sub    al,BYTE PTR [rax]
	...
   140015375:	add    BYTE PTR [rax],al
   140015377:	add    al,cl
   140015379:	int3   
   14001537a:	(bad)  
   14001537b:	cmp    eax,0xffc4c4b8
   140015380:	(bad)  
   140015381:	(bad)  
   140015382:	xor    edi,edi
   140015384:	popf   
   140015385:	add    BYTE PTR [rax],al
   140015387:	jmp    FWORD PTR [rcx-0x4d00ffe9]
   14001538d:	sbb    BYTE PTR [rax],al
   14001538f:	(bad)  
   140015390:	mov    esi,0xc5ff001b
   140015395:	sbb    al,BYTE PTR [rax]
   140015397:	call   rcx
   140015399:	sbb    al,BYTE PTR [rax]
   14001539b:	(bad)  
   14001539c:	fst    QWORD PTR [rsi]
   14001539e:	add    bh,bh
   1400153a0:	jrcxz  0x1400153b5
   1400153a2:	add    bh,bh
   1400153a4:	(bad)  
   1400153a5:	adc    BYTE PTR [rax],al
   1400153a7:	push   rcx
   1400153a9:	or     eax,DWORD PTR [rax]
   1400153ab:	push   rsi
   1400153ad:	(bad)  
   1400153ae:	add    bh,bh
   1400153b0:	clc    
   1400153b1:	mov    WORD PTR [rbp-0x1],?
   1400153b4:	icebp  
   1400153b5:	scas   eax,DWORD PTR es:[rdi]
   1400153b6:	lahf   
   1400153b7:	(bad)  
   1400153b8:	in     al,dx
   1400153b9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400153ba:	xchg   ebp,eax
   1400153bb:	(bad)  
   1400153bc:	jmp    0x140015365
   1400153be:	xchg   ebx,eax
   1400153bf:	jmp    rsi
   1400153c1:	test   al,0x95
   1400153c3:	(bad)  
   1400153c4:	fsubr  QWORD PTR [rbx-0x48250063]
   1400153ca:	stos   DWORD PTR es:[rdi],eax
   1400153cb:	(bad)  
   1400153cc:	faddp  st(1),st
   1400153ce:	mov    bh,0xff
   1400153d0:	in     al,0xc9
   1400153d2:	mov    ebp,0xbfc8e3ff
   1400153d7:	(bad)  
   1400153d8:	fmul   st(0),st
   1400153da:	sar    bh,0xd5
   1400153dd:	retf   0xffc4
   1400153e0:	(bad)  
   1400153e1:	ror    edi,1
   1400153e3:	(bad)  
   1400153e4:	fcomp  st(1)
   1400153e6:	fdivr  st,st(7)
   1400153e8:	fcmovnu st,st(6)
   1400153ea:	(bad)  
   1400153ec:	(bad)  
   1400153ee:	in     al,0xff
   1400153f0:	fsubrp st(6),st
   1400153f2:	jmp    0x125e739ed
   1400153f7:	jrcxz  0x1400153d7
   1400153f9:	(bad)  
   1400153fb:	mov    edi,0x62bbbbbb
	...
   140015438:	ret    0xc6c3
   14001543b:	(bad)  
   14001543c:	mov    ecx,0x98ffcac7
   140015441:	rex.WB
   140015442:	rex.RB call FWORD PTR [r13-0x55010000]
   140015449:	add    eax,0x4afff00
   14001544e:	add    bh,bh
   140015450:	mov    bh,0x7
   140015452:	add    bh,bh
   140015454:	mov    bh,0xc
   140015456:	add    bh,bh
   140015458:	mov    edx,0xbbff011b
   14001545d:	xor    BYTE PTR [rdx],bl
   14001545f:	(bad)  
   140015460:	mov    esi,0xcaff3448
   140015465:	pop    rsi
   140015466:	rex.WRB dec r10
   140015469:	jne    0x1400154d3
   14001546b:	inc    esp
   14001546d:	nop
   14001546e:	test   edi,edi
   140015470:	retf   0xaab0
   140015473:	dec    esi
   140015475:	mov    edi,0xc7cfffbd
   14001547a:	(bad)  
   14001547b:	call   rbx
   14001547d:	(bad)  
   14001547e:	(bad)  
   14001547f:	call   rax
   140015481:	iret   
   140015482:	iret   
   140015483:	dec    edi
   140015485:	rcl    ebx,1
   140015487:	dec    edi
   140015489:	rcl    ebp,cl
   14001548b:	dec    edi
   14001548d:	(bad)  
   14001548e:	(bad)  
   14001548f:	clc    
   140015490:	(bad)  
   140015491:	rcl    ebp,cl
   140015493:	icebp  
   140015494:	(bad)  
   140015495:	rcl    esi,cl
   140015497:	(bad)  
   140015499:	(bad)  
   14001549a:	xlat   BYTE PTR ds:[rbx]
   14001549b:	retf   0xd9d3
   14001549e:	fld    TBYTE PTR [rcx-0x7427282d]
   1400154a4:	rcl    ebp,cl
   1400154a6:	fcomp  DWORD PTR [rsi-0x35]
   1400154a9:	int3   
   1400154aa:	int    0x36
   1400154ac:	rcl    cl,1
   1400154ae:	rcr    DWORD PTR [rdx+rbx*8],1
   1400154b1:	fcmovu st,st(2)
   1400154b3:	(bad)  
   1400154b4:	(bad)  
   1400154b6:	fcom   QWORD PTR [rax]
   1400154b8:	(bad)  
   1400154ba:	fiadd  WORD PTR [rdi]
	...
   1400154f8:	rol    edx,0xc4
   1400154fb:	adc    dh,BYTE PTR [rsi-0x61123d42]
   140015501:	jne    0x140015573
   140015503:	inc    DWORD PTR [rbp-0x6400d6d0]
   140015509:	(bad)  
   14001550a:	pop    rdx
   14001550b:	jmp    FWORD PTR [rsi-0x4d008581]
   140015511:	xchg   edx,eax
   140015512:	nop
   140015513:	push   QWORD PTR [rax-0x4a005c5c]
   140015519:	mov    eax,0xc8bbffb9
   14001551e:	int3   
   14001551f:	inc    ecx
   140015521:	rcl    ch,cl
   140015523:	dec    eax
   140015525:	fcomp  st(2)
   140015527:	dec    ebx
   140015529:	fcmovnu st,st(4)
   14001552b:	dec    ebx
   14001552d:	fcomp  st(2)
   14001552f:	clc    
   140015530:	retf   
   140015531:	rcl    ah,cl
   140015533:	out    0xcb,eax
   140015535:	iret   
   140015536:	rcr    cl,1
   140015538:	retf   
   140015539:	(bad)  
   14001553a:	iret   
   14001553b:	leave  
   14001553c:	leave  
   14001553d:	int    0xce
   14001553f:	stos   DWORD PTR es:[rdi],eax
   140015540:	int    0xcf
   140015542:	rcl    BYTE PTR [rax+0x75d0cecd],1
   140015548:	(bad)  
   140015549:	(bad)  
   14001554a:	(bad)  
   14001554b:	rex.RB leave 
   14001554d:	retf   
   14001554e:	retf   0xc828
   140015551:	enter  0x9c8,0x0
	...
   1400155b5:	add    BYTE PTR [rax],al
   1400155b7:	add    BYTE PTR [rax-0x4dee5459],ch
   1400155bd:	mov    cl,0xb3
   1400155bf:	in     eax,0xc0
   1400155c1:	leave  
   1400155c2:	retf   0xbcff
   1400155c5:	int3   
   1400155c6:	iret   
   1400155c7:	inc    esp
   1400155c9:	rcl    dh,cl
   1400155cb:	inc    ebp
   1400155cd:	rcl    esp,1
   1400155cf:	test   bh,0xcf
   1400155d2:	shr    al,cl
   1400155d4:	leave  
   1400155d5:	iret   
   1400155d6:	rcl    ah,1
   1400155d8:	enter  0xcbcb,0xbe
   1400155dc:	enter  0xcbc9,0xab
   1400155e0:	(bad)  
   1400155e1:	enter  0x92c8,0xc9
   1400155e5:	retf   0x72ca
   1400155e8:	leave  
   1400155e9:	leave  
   1400155ea:	leave  
   1400155eb:	pop    rax
   1400155ec:	retf   
   1400155ed:	retf   
   1400155ee:	int3   
   1400155ef:	(bad)  
   1400155f0:	retf   0xcaca
   1400155f3:	sbb    BYTE PTR [rax],al
	...
   140015675:	add    BYTE PTR [rax],al
   140015677:	add    BYTE PTR [rbx-0x58fb6065],bl
   14001567d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001567e:	test   eax,0xc4c2c466
   140015683:	nop
   140015684:	sar    BYTE PTR [rsi-0x44448641],0xbd
   14001568b:	pop    rdx
   14001568c:	mov    edi,0xc33dbfbd
   140015691:	ret    
   140015692:	ret    
   140015693:	(bad)  
   140015694:	enter  0xc9c8,0xc
	...
   14001573c:	stos   DWORD PTR es:[rdi],eax
   14001573d:	stos   DWORD PTR es:[rdi],eax
   14001573e:	lods   eax,DWORD PTR ds:[rsi]
   14001573f:	or     dl,dl
   140015741:	rcl    edx,1
   140015743:	(bad)  
   140015745:	ret    0x3c3
   140015748:	mov    ebx,0x1bdbb
	...
   140015a05:	add    BYTE PTR [rax],al
   140015a07:	add    bh,bh
   140015a09:	(bad)  
   140015a0a:	(bad)  
   140015a0b:	(bad)  
   140015a0c:	(bad)  
   140015a0d:	inc    DWORD PTR [rax]
   140015a0f:	add    bh,bh
   140015a11:	(bad)  
   140015a12:	(bad)  
   140015a13:	(bad)  
   140015a14:	(bad)  
   140015a15:	inc    DWORD PTR [rax]
   140015a17:	add    bh,bh
   140015a19:	(bad)  
   140015a1a:	(bad)  
   140015a1b:	(bad)  
   140015a1c:	(bad)  
   140015a1d:	inc    DWORD PTR [rax]
   140015a1f:	add    bh,bh
   140015a21:	(bad)  
   140015a22:	cld    
   140015a23:	add    BYTE PTR [rdi],bl
   140015a25:	inc    DWORD PTR [rax]
   140015a27:	add    bh,bh
   140015a29:	push   rax
   140015a2b:	add    BYTE PTR [rdi],al
   140015a2d:	pop    QWORD PTR [rax]
   140015a2f:	add    bh,bh
   140015a31:	jmp    rax
   140015a33:	add    BYTE PTR [rcx],al
   140015a35:	add    DWORD PTR [rax],eax
   140015a37:	add    bh,bh
   140015a39:	inc    eax
   140015a3b:	add    BYTE PTR [rax],al
   140015a3d:	add    BYTE PTR [rax],al
   140015a3f:	add    bh,bh
   140015a41:	inc    DWORD PTR [rax+0x0]
   140015a47:	add    bh,bh
   140015a49:	inc    DWORD PTR [rax+0x0]
   140015a4f:	add    bh,bh
   140015a51:	inc    DWORD PTR [rax+0x0]
   140015a57:	add    bh,bh
   140015a59:	inc    DWORD PTR [rax+0x0]
   140015a5f:	add    al,al
   140015a61:	(bad)  
   140015a62:	add    BYTE PTR [rax],0x0
   140015a65:	add    BYTE PTR [rax],al
   140015a67:	add    BYTE PTR [rax+0xc001],al
   140015a6d:	add    BYTE PTR [rax],al
   140015a6f:	add    BYTE PTR [rax+0x7000],al
   140015a75:	sldt   WORD PTR [rax]
   140015a78:	add    BYTE PTR [rax],0xc
   140015a7b:	add    BYTE PTR [rax],al
   140015a7d:	sldt   WORD PTR [rax]
   140015a80:	add    BYTE PTR [rax],0x0
   140015a83:	add    BYTE PTR [rax],al
   140015a85:	sldt   WORD PTR [rax]
   140015a88:	add    BYTE PTR [rax],0x0
   140015a8b:	add    BYTE PTR [rax],al
   140015a8d:	sldt   WORD PTR [rax]
   140015a90:	add    BYTE PTR [rax],0x0
   140015a93:	add    BYTE PTR [rax],al
   140015a95:	sldt   WORD PTR [rax]
   140015a98:	add    BYTE PTR [rax],0x0
   140015a9b:	add    BYTE PTR [rax],al
   140015a9d:	sldt   WORD PTR [rax]
   140015aa0:	add    BYTE PTR [rax],0x0
   140015aa3:	add    BYTE PTR [rax],al
   140015aa5:	sldt   WORD PTR [rax]
   140015aa8:	add    BYTE PTR [rax],0x0
   140015aab:	add    BYTE PTR [rax],al
   140015aad:	sldt   WORD PTR [rax]
   140015ab0:	add    BYTE PTR [rax],0x0
   140015ab3:	add    BYTE PTR [rax],al
   140015ab5:	(bad)  
   140015ab6:	add    BYTE PTR [rax],al
   140015ab8:	add    BYTE PTR [rax],0x0
   140015abb:	add    BYTE PTR [rax],al
   140015abd:	(bad)  
   140015abe:	add    BYTE PTR [rax],al
   140015ac0:	add    BYTE PTR [rax],0x0
   140015ac3:	add    BYTE PTR [rax],al
   140015ac5:	(bad)  
   140015ac6:	add    BYTE PTR [rax],al
   140015ac8:	add    BYTE PTR [rax],0x0
   140015acb:	add    BYTE PTR [rax],al
   140015acd:	(bad)  
   140015ace:	add    BYTE PTR [rax],al
   140015ad0:	add    BYTE PTR [rax],0x0
   140015ad3:	add    BYTE PTR [rax],al
   140015ad5:	(bad)  
   140015ad6:	add    BYTE PTR [rax],al
   140015ad8:	add    BYTE PTR [rax],0x0
   140015adb:	add    BYTE PTR [rax],al
   140015add:	(bad)  
   140015ade:	add    BYTE PTR [rax],al
   140015ae0:	add    BYTE PTR [rax],0x0
   140015ae3:	add    BYTE PTR [rax],al
   140015ae5:	(bad)  
   140015ae6:	add    BYTE PTR [rax],al
   140015ae8:	add    BYTE PTR [rax],0x0
   140015aeb:	add    BYTE PTR [rax],al
   140015aed:	(bad)  
   140015aee:	add    BYTE PTR [rax],al
   140015af0:	add    BYTE PTR [rax],0x0
   140015af3:	add    BYTE PTR [rax],al
   140015af5:	add    eax,DWORD PTR [rax]
   140015af7:	add    BYTE PTR [rax+0x0],al
   140015afd:	add    eax,DWORD PTR [rax]
   140015aff:	add    BYTE PTR [rax+0x0],al
   140015b05:	add    eax,DWORD PTR [rax]
   140015b07:	add    BYTE PTR [rax+0x0],al
   140015b0d:	add    eax,DWORD PTR [rax]
   140015b0f:	add    BYTE PTR [rax+0x0],al
   140015b15:	add    eax,DWORD PTR [rax]
   140015b17:	add    al,al
   140015b19:	add    BYTE PTR [rax],al
   140015b1b:	add    BYTE PTR [rax],al
   140015b1d:	add    eax,DWORD PTR [rax]
   140015b1f:	add    al,dh
   140015b21:	add    BYTE PTR [rax],al
   140015b23:	add    BYTE PTR [rax],al
   140015b25:	add    eax,DWORD PTR [rax]
   140015b27:	add    dh,bh
   140015b29:	add    BYTE PTR [rax],al
   140015b2b:	add    BYTE PTR [rax],al
   140015b2d:	add    DWORD PTR [rax],eax
   140015b2f:	add    bh,bh
   140015b31:	rol    BYTE PTR [rax],0x0
   140015b34:	add    BYTE PTR [rcx],al
   140015b36:	add    BYTE PTR [rax],al
   140015b38:	push   rax
   140015b3a:	add    BYTE PTR [rax],al
   140015b3c:	add    BYTE PTR [rcx],al
   140015b3e:	add    BYTE PTR [rax],al
   140015b40:	push   rax
   140015b42:	add    BYTE PTR [rax],al
   140015b44:	add    BYTE PTR [rbx],al
   140015b46:	add    BYTE PTR [rax],al
   140015b48:	push   rax
   140015b4a:	add    BYTE PTR [rax],al
   140015b4c:	add    BYTE PTR [rdi],al
   140015b4e:	add    BYTE PTR [rax],al
   140015b50:	push   rax
   140015b52:	add    BYTE PTR [rax],al
   140015b54:	(bad)  
   140015b55:	inc    DWORD PTR [rax]
   140015b57:	add    bh,bh
   140015b59:	lock add BYTE PTR [rdi],bl
   140015b5c:	(bad)  
   140015b5d:	inc    DWORD PTR [rax]
   140015b5f:	add    bh,bh
   140015b61:	lock ud0 edi,edi
   140015b65:	inc    DWORD PTR [rax]
   140015b67:	add    bh,bh
   140015b69:	clc    
   140015b6a:	jg     0x140015b6b
   140015b6c:	(bad)  
   140015b6d:	inc    DWORD PTR [rax]
   140015b6f:	add    bh,bh
   140015b71:	(bad)  
   140015b72:	(bad)  
   140015b73:	(bad)  
   140015b74:	(bad)  
   140015b75:	inc    DWORD PTR [rax]
   140015b77:	add    bh,bh
   140015b79:	(bad)  
   140015b7a:	(bad)  
   140015b7b:	(bad)  
   140015b7c:	(bad)  
   140015b7d:	inc    DWORD PTR [rax]
   140015b7f:	add    bh,bh
   140015b81:	(bad)  
   140015b82:	(bad)  
   140015b83:	(bad)  
   140015b84:	(bad)  
   140015b85:	inc    DWORD PTR [rax]
   140015b87:	add    BYTE PTR [rax],ch
   140015b89:	add    BYTE PTR [rax],al
   140015b8b:	add    BYTE PTR [rax],ah
   140015b8d:	add    BYTE PTR [rax],al
   140015b8f:	add    BYTE PTR [rax+0x0],al
   140015b92:	add    BYTE PTR [rax],al
   140015b94:	add    DWORD PTR [rax],eax
   140015b96:	and    BYTE PTR [rax],al
   140015b98:	add    BYTE PTR [rax],al
   140015b9a:	add    BYTE PTR [rax],al
   140015b9c:	adc    BYTE PTR [rax],0x0
	...
   140015ceb:	add    BYTE PTR [rax-0x47fb4f50],dh
   140015cf1:	mov    eax,0xaaaa4ab8
   140015cf6:	stos   BYTE PTR es:[rdi],al
   140015cf7:	xchg   BYTE PTR [rsi-0x4669494a],dh
   140015cfd:	mov    ecx,0xa1a195b9
   140015d02:	movabs eax,ds:0x7777778781818195
   140015d0b:	rex.WRX jbe 0x140015d84
   140015d0e:	jbe    0x140015d16
	...
   140015d68:	sahf   
   140015d69:	sahf   
   140015d6a:	sahf   
   140015d6b:	fs mov edi,0xd5d5d9c7
   140015d72:	(bad)  
   140015d73:	(bad)  
   140015d74:	fstp   st(5)
   140015d76:	(bad)  
   140015d78:	loop   0x140015d5c
   140015d7a:	loop   0x140015d7b
   140015d7c:	fcmovu st,st(2)
   140015d7e:	(bad)  
   140015d80:	(bad)  
   140015d81:	(bad)  
   140015d82:	(bad)  
   140015d83:	(bad)  
   140015d84:	(bad)  
   140015d86:	fdiv   st(7),st
   140015d88:	enter  0xc8c8,0xff
   140015d8c:	movabs ds:0x5f979797bda2a2,al
	...
   140015da1:	add    BYTE PTR [rax],al
   140015da3:	add    al,BYTE PTR [rax]
   140015da5:	add    BYTE PTR [rax],al
   140015da7:	add    DWORD PTR [rax],eax
	...
   140015ddd:	add    BYTE PTR [rax],al
   140015ddf:	add    BYTE PTR [rdi-0x50f46869],dl
   140015de5:	scas   eax,DWORD PTR es:[rdi]
   140015de6:	scas   eax,DWORD PTR es:[rdi]
   140015de7:	out    0xd9,eax
   140015de9:	(bad)  
   140015deb:	(bad)  
   140015dec:	(bad)  
   140015dee:	fcos   
   140015df0:	(bad)  
   140015df2:	fdiv   st(7),st
   140015df4:	loopne 0x140015dd6
   140015df6:	loopne 0x140015df7
   140015df8:	(bad)  
   140015dfa:	(bad)  
   140015dfc:	rcl    al,1
   140015dfe:	sar    bh,1
   140015e00:	iret   
   140015e01:	iret   
   140015e02:	iret   
   140015e03:	(bad)  
   140015e04:	(bad)  
   140015e05:	(bad)  
   140015e06:	(bad)  
   140015e07:	dec    ebp
   140015e09:	int    0xcd
   140015e0b:	dec    esi
   140015e0d:	(bad)  
   140015e0e:	(bad)  
   140015e0f:	call   rax
   140015e11:	rcl    al,1
   140015e13:	jmp    QWORD PTR [rax+0x1daca0a0]
   140015e19:	sbb    eax,0x361d
   140015e1e:	add    BYTE PTR [rcx],cl
   140015e20:	add    BYTE PTR [rax],al
   140015e22:	add    BYTE PTR [rcx],ch
   140015e24:	add    BYTE PTR [rax],al
   140015e26:	add    BYTE PTR [rsi],dl
   140015e28:	add    BYTE PTR [rax],al
   140015e2a:	add    BYTE PTR [rax+rax*1],al
	...
   140015e5d:	add    BYTE PTR [rax],al
   140015e5f:	add    BYTE PTR [rbx-0x2c184c4d],dh
   140015e65:	rcl    ebx,cl
   140015e67:	inc    edi
   140015e69:	mov    edi,0xc8c8c8ff
   140015e6f:	call   rsp
   140015e71:	(bad)  
   140015e72:	(bad)  
   140015e73:	(bad)  
   140015e74:	(bad)  
   140015e76:	(bad)  
   140015e78:	loope  0x140015e5b
   140015e7a:	loope  0x140015e7b
   140015e7c:	rcl    dl,cl
   140015e7e:	sar    bh,cl
   140015e80:	iret   
   140015e81:	iret   
   140015e82:	iret   
   140015e83:	(bad)  
   140015e84:	fcmovu st,st(2)
   140015e86:	(bad)  
   140015e88:	mov    ebp,0xc3ffbdbd
   140015e8d:	ret    
   140015e8e:	ret    
   140015e8f:	push   QWORD PTR [rsi-0x3a00494a]
   140015e95:	(bad)
   140015e98:	mov    al,0xb0
   140015e9a:	mov    al,0xff
   140015e9c:	add    BYTE PTR [rax],al
   140015e9e:	add    BYTE PTR [rax+rax*1+0x0],dl
   140015ea2:	add    BYTE PTR [rdx],bh
   140015ea4:	add    BYTE PTR [rax],al
   140015ea6:	add    BYTE PTR [rsi],ch
   140015ea8:	add    BYTE PTR [rax],al
   140015eaa:	add    BYTE PTR [rdi],dl
   140015eac:	add    BYTE PTR [rax],al
   140015eae:	add    BYTE PTR [rdx],cl
	...
   140015edc:	stos   BYTE PTR es:[rdi],al
   140015edd:	stos   BYTE PTR es:[rdi],al
   140015ede:	stos   BYTE PTR es:[rdi],al
   140015edf:	cs mov ebp,0xb7ffbdbd
   140015ee5:	mov    bh,0xb7
   140015ee7:	(bad)  
   140015ee8:	mov    esi,0xc6ffbebe
   140015eed:	mov    dh,0xff
   140015ef0:	iret   
   140015ef1:	iret   
   140015ef2:	iret   
   140015ef3:	(bad)  
   140015ef4:	fcmovu st,st(2)
   140015ef6:	(bad)  
   140015ef8:	fcmovnu st,st(3)
   140015efa:	(bad)  
   140015efc:	iret   
   140015efd:	iret   
   140015efe:	iret   
   140015eff:	inc    edi
   140015f01:	mov    edi,0xcacacaff
   140015f07:	inc    esi
   140015f09:	mov    dh,0xff
   140015f0c:	mov    ecx,0x9effb9b9
   140015f11:	sahf   
   140015f12:	sahf   
   140015f13:	dec    DWORD PTR [rsi-0x36007172]
   140015f19:	leave  
   140015f1a:	leave  
   140015f1b:	jmp    QWORD PTR [rcx]
   140015f1d:	and    DWORD PTR [rcx],esp
   140015f1f:	jno    0x140015f21
   140015f21:	add    BYTE PTR [rax],al
   140015f23:	and    DWORD PTR [rax],eax
   140015f25:	add    BYTE PTR [rax],al
   140015f27:	xor    al,BYTE PTR [rax]
   140015f29:	add    BYTE PTR [rax],al
   140015f2b:	(bad)  
   140015f2c:	add    BYTE PTR [rax],al
   140015f2e:	add    BYTE PTR [rdx],dl
	...
   140015f60:	(bad)
   140015f63:	loope  0x140015f33
   140015f65:	(bad)  
   140015f66:	(bad)  
   140015f67:	(bad)  
   140015f68:	mov    edi,0xbfffbfbf
   140015f6d:	mov    edi,0xc9c9ffbf
   140015f72:	leave  
   140015f73:	call   rax
   140015f75:	rcl    al,1
   140015f77:	call   rdx
   140015f79:	rcl    ah,cl
   140015f7b:	dec    edi
   140015f7d:	iret   
   140015f7e:	iret   
   140015f7f:	inc    esi
   140015f81:	mov    dh,0xff
   140015f84:	mov    esi,0xa2ffbebe
   140015f89:	movabs ds:0x8484ff858585ffa2,al
   140015f92:	test   bh,bh
   140015f94:	fwait
   140015f95:	fwait
   140015f96:	fwait
   140015f97:	call   QWORD PTR [rbp+0xef9595]
   140015f9d:	add    BYTE PTR [rax],al
   140015f9f:	(bad)  
   140015fa0:	or     al,0xc
   140015fa2:	or     al,0x18
   140015fa4:	or     BYTE PTR [rax],cl
   140015fa6:	or     DWORD PTR [rip+0x13000000],edx        # 0x153015fac
   140015fac:	add    BYTE PTR [rax],al
   140015fae:	add    BYTE PTR [rax+rax*1],cl
   140015fb1:	add    BYTE PTR [rax],al
   140015fb3:	add    BYTE PTR [rcx],bh
   140015fb5:	cmp    edi,DWORD PTR [rdx+rbx*1]
   140015fb8:	push   rbp
   140015fb9:	push   rbp
   140015fba:	push   rdi
   140015fbb:	enter  0x8789,0x87
   140015fbf:	call   QWORD PTR [rcx+0x50]
   140015fc2:	push   rax
   140015fc3:	sahf   
   140015fc4:	add    DWORD PTR [rcx],eax
   140015fc6:	add    DWORD PTR [rdx],edi
   140015fc8:	add    BYTE PTR [rax],al
   140015fca:	add    BYTE PTR [rsi],dh
   140015fcc:	adc    edx,DWORD PTR [rbx]
   140015fce:	adc    esi,DWORD PTR [rcx+0x14]
   140015fd1:	adc    al,0x14
   140015fd3:	fs rex.XB
   140015fd5:	rex.XB
   140015fd6:	rex.B or eax,0x0
	...
   140015fe4:	mov    DWORD PTR [rcx-0x2c2c5c77],ecx
   140015fea:	(bad)  
   140015feb:	dec    ebx
   140015fed:	retf   
   140015fee:	retf   
   140015fef:	push   QWORD PTR [rsi-0x4f004a4a]
   140015ff5:	mov    al,0xb0
   140015ff7:	jmp    FWORD PTR [rdi-0x65005251]
   140015ffd:	cdq    
   140015ffe:	cdq    
   140015fff:	inc    DWORD PTR [rbx+0x6aff8384]
   140016005:	push   0x6a
   140016007:	call   QWORD PTR [rbx+0x52]
   14001600a:	push   rdx
   14001600b:	jmp    QWORD PTR [rdi+0x67]
   14001600e:	call   QWORD PTR [ebp-0x4b006c6d]
   140016015:	mov    ah,0xb5
   140016017:	jmp    QWORD PTR [rcx+riz*4-0x5d5a215f]
   14001601e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001601f:	fcmovnb st,st(3)
   140016021:	ret    
   140016022:	(bad)  
   140016023:	call   FWORD PTR [rdi+0x5f]
   140016026:	pop    rbp
   140016027:	pop    rdx
   140016028:	add    BYTE PTR [rax],al
   14001602a:	add    BYTE PTR [rax],al
   14001602c:	add    BYTE PTR [rax],al
   14001602e:	add    BYTE PTR [rip+0x0],al        # 0x140016034
   140016034:	jge    0x1400160b2
   140016036:	jge    0x140016000
   140016038:	sahf   
   140016039:	fwait
   14001603a:	cdq    
   14001603b:	push   QWORD PTR [rdi-0x1f004e4e]
   140016041:	loopne 0x140016024
   140016043:	call   FWORD PTR [rbx+0x47ff9b9b]
   140016049:	rex.RXB
   14001604a:	rex.RXB sti 
   14001604c:	push   0xffffffffa5ff6868
   140016051:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140016052:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140016053:	clc    
   140016054:	lea    ecx,[rbp+0x1e1eda8b]
   14001605a:	sbb    eax,0x4d4c4c73
   14001605f:	(bad)  
	...
   140016068:	and    DWORD PTR [rax],esp
   14001606a:	(bad)  
   14001606b:	rex.WB jb 0x1400160e0
   14001606e:	jo     0x14001602e
   140016070:	fwait
   140016071:	fwait
   140016072:	fwait
   140016073:	out    dx,al
   140016074:	pushf  
   140016075:	(bad)  
   140016076:	cdq    
   140016077:	push   QWORD PTR [rdi+0x77]
   14001607a:	jne    0x14001607b
   14001607c:	jae    0x1400160ee
   14001607e:	jae    0x14001607f
   140016080:	je     0x1400160f3
   140016082:	je     0x140016083
   140016084:	add    BYTE PTR [rcx-0x6061007d],0xa1
   14001608b:	jmp    FWORD PTR [rbx-0x4800494e]
   140016091:	(bad)  
   140016092:	retf   
   140016093:	inc    eax
   140016095:	(bad)  
   140016097:	dec    edi
   140016099:	jmp    0x124de608a
   14001609e:	out    0xff,al
   1400160a0:	rcl    ebx,cl
   1400160a2:	(bad)  
   1400160a3:	call   FWORD PTR [rsi+0x5e]
   1400160a6:	pop    rsi
   1400160a7:	add    BYTE PTR [rax],0x0
	...
   1400160b2:	add    BYTE PTR [rax],al
   1400160b4:	lea    ecx,[rbp+rcx*4-0x4b484417]
   1400160bb:	dec    DWORD PTR [rsi-0x52007173]
   1400160c1:	lods   eax,DWORD PTR ds:[rsi]
   1400160c2:	scas   al,BYTE PTR es:[rdi]
   1400160c3:	call   rdx
   1400160c5:	(bad)  
   1400160c6:	sar    bh,cl
   1400160c8:	(bad)  
   1400160c9:	(bad)  
   1400160ca:	(bad)  
   1400160cb:	call   QWORD PTR [rax+0x52ec9190]
   1400160d1:	push   rdx
   1400160d2:	push   rdx
   1400160d3:	mov    edx,0xc87a7979
   1400160d8:	lods   al,BYTE PTR ds:[rsi]
   1400160d9:	lods   al,BYTE PTR ds:[rsi]
   1400160da:	lods   eax,DWORD PTR ds:[rsi]
   1400160db:	stc    
   1400160dc:	mov    BYTE PTR [rax+0x2b2be68a],cl
   1400160e2:	sub    edi,DWORD PTR [rcx+0x0]
   1400160e5:	add    BYTE PTR [rax],al
   1400160e7:	or     al,BYTE PTR [rax]
   1400160e9:	add    BYTE PTR [rax],al
   1400160eb:	add    BYTE PTR [rbx],dh
   1400160ed:	xor    DWORD PTR [rip+0x6663631f],esi        # 0x1a664c412
   1400160f3:	test   BYTE PTR [rdx-0x77026b71],cl
   1400160f9:	xchg   ecx,eax
   1400160fa:	cwde   
   1400160fb:	dec    DWORD PTR [rsp+rbx*4-0x5068005d]
   140016102:	mov    bh,0xff
   140016104:	mov    ecx,0xcbffd9d3
   140016109:	in     al,0xe5
   14001610b:	call   rax
   14001610d:	fsubrp st(0),st
   14001610f:	call   rbp
   140016111:	rcl    al,cl
   140016113:	call   rsp
   140016115:	mov    cl,0xa7
   140016117:	call   rcx
   140016119:	jl     0x140016195
   14001611b:	dec    ebx
   14001611d:	mov    esp,0xc8bbffb6
   140016122:	enter  0x93ff,0x93
   140016126:	xchg   ecx,eax
   140016127:	cwde   
	...
   140016134:	xchg   DWORD PTR [rbp-0x453f267b],eax
   14001613a:	mov    ebx,0xa4a1a4ff
   14001613f:	jmp    FWORD PTR [rbp-0x51005354]
   140016145:	scas   al,BYTE PTR es:[rdi]
   140016146:	lods   eax,DWORD PTR ds:[rsi]
   140016147:	jmp    FWORD PTR [rdx-0x30005657]
   14001614d:	iret   
   14001614e:	iret   
   14001614f:	call   rdi
   140016151:	xlat   BYTE PTR ds:[rbx]
   140016152:	xlat   BYTE PTR ds:[rbx]
   140016153:	dec    DWORD PTR [rbx+rcx*4+0x5153dd8c]
   14001615a:	push   rdx
   14001615b:	loope  0x1400160e1
   14001615d:	add    DWORD PTR [rdi+rdi*8-0xe919396],0xffffff8d
   140016165:	xchg   esi,eax
   140016166:	(bad)  
   140016167:	in     eax,dx
   140016168:	mov    cl,0xc2
   14001616a:	(bad)  
   14001616b:	push   QWORD PTR [rbp-0x53002b33]
   140016171:	enter  0xffce,0xae
   140016175:	retf   
   140016176:	int3   
   140016177:	(bad)  
   140016178:	mov    ebp,0xc5ffc8c6
   14001617d:	mov    bh,0xb5
   14001617f:	inc    edi
   140016181:	lods   al,BYTE PTR ds:[rsi]
   140016182:	stos   BYTE PTR es:[rdi],al
   140016183:	dec    eax
   140016185:	xchg   esi,eax
   140016186:	mov    ?,edi
   140016188:	vmulpd xmm15,xmm2,xmm7
   14001618c:	mov    ebx,0xafff1e2d
   140016191:	add    eax,0xa3ff00
   140016196:	add    bh,bh
   140016198:	cdq    
   140016199:	add    BYTE PTR [rax],al
   14001619b:	(bad)  
   14001619c:	mov    esp,0xc3ff848a
   1400161a1:	loopne 0x140016187
   1400161a3:	call   FWORD PTR [rax+0xb59494]
	...
   1400161b1:	add    BYTE PTR [rax],al
   1400161b3:	add    BYTE PTR [rdx+rcx*4-0x3b352375],cl
   1400161ba:	(bad)  
   1400161bd:	movabs ds:0xa4a2ffaeadacffa5,eax
   1400161c6:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400161c7:	call   QWORD PTR [rdx-0x6e006e6f]
   1400161cd:	mov    ss,WORD PTR [rdx-0x71738001]
   1400161d3:	call   QWORD PTR [rsi-0x4600514c]
   1400161d9:	(bad)  
   1400161da:	sar    edi,cl
   1400161dc:	(bad)  
   1400161dd:	out    dx,al
   1400161de:	hlt    
   1400161df:	(bad)  
   1400161e0:	fdiv   st(3),st
   1400161e2:	std    
   1400161e3:	call   rax
   1400161e5:	loope  0x1400161ca
   1400161e7:	inc    esi
   1400161e9:	rol    al,0xff
   1400161ec:	mov    esp,0xbbff9e9f
   1400161f1:	jge    0x140016268
   1400161f3:	push   QWORD PTR [rbp+rbx*2+0x35abff5d]
   1400161fa:	xor    edi,edi
   1400161fc:	movabs al,ds:0xa1ff0000a0ff000c
   140016205:	add    BYTE PTR [rax],al
   140016207:	jmp    QWORD PTR [rdx-0x5b010000]
   14001620d:	or     eax,DWORD PTR [rax]
   14001620f:	jmp    FWORD PTR [rbx-0x4d00f5e3]
   140016215:	sub    al,0x18
   140016217:	push   QWORD PTR [rdi-0x3800ffea]
   14001621d:	mov    DWORD PTR [rax-0x15193901],eax
   140016223:	call   QWORD PTR [rdx+0xcc8e8f]
	...
   140016231:	add    BYTE PTR [rax],al
   140016233:	add    BYTE PTR [rcx-0x2d1f7173],dl
   140016239:	int    0xcc
   14001623b:	jmp    QWORD PTR [rsi-0x51005e5e]
   140016241:	lods   al,BYTE PTR ds:[rsi]
   140016242:	scas   eax,DWORD PTR es:[rdi]
   140016243:	jmp    FWORD PTR [rcx-0x68005657]
   140016249:	xchg   edi,eax
   14001624a:	xchg   edi,eax
   14001624b:	jmp    FWORD PTR [rax-0x58005359]
   140016251:	mov    ch,0xb6
   140016253:	inc    eax
   140016255:	iret   
   140016256:	retf   0xbaff
   140016259:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001625a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001625b:	push   QWORD PTR [rax-0x5d008d8c]
   140016261:	push   rax
   140016262:	push   rdx
   140016263:	call   FWORD PTR [rax-0x7100cccb]
   140016269:	adc    DWORD PTR [rax],edx
   14001626b:	inc    DWORD PTR [rbp-0x7e010000]
   140016271:	add    BYTE PTR [rax],al
   140016273:	inc    DWORD PTR [rbx-0x7200feff]
   140016279:	add    BYTE PTR [rax],al
   14001627b:	call   FWORD PTR [rdx-0x5000fffe]
   140016281:	xor    DWORD PTR [rip+0x2b3db7ff],ebx        # 0x16b3f1a86
   140016287:	(bad)  
   140016288:	mov    ebx,0xbfff293c
   14001628d:	(bad)  
   14001628e:	sub    eax,0x2d41c2ff
   140016293:	inc    esi
   140016295:	rex.XB sub al,0xff
   140016298:	enter  0x1029,0xff
   14001629c:	int3   
   14001629d:	je     0x140016306
   14001629f:	inc    esi
   1400162a1:	jmp    0xd3996293
   1400162a6:	xchg   edx,eax
   1400162a7:	(bad)  
	...
   1400162b4:	xchg   ebx,eax
   1400162b5:	(bad)  
   1400162b6:	xchg   edx,eax
   1400162b7:	loope  0x140016293
   1400162b9:	rcl    dl,cl
   1400162bb:	jmp    QWORD PTR [rsi-0x53005a5c]
   1400162c1:	scas   al,BYTE PTR es:[rdi]
   1400162c2:	scas   eax,DWORD PTR es:[rdi]
   1400162c3:	jmp    FWORD PTR [rdx+rbp*4-0x63630054]
   1400162ca:	pushf  
   1400162cb:	inc    edx
   1400162cd:	rcl    edi,cl
   1400162cf:	call   QWORD PTR [rax-0x7100bbbd]
   1400162d5:	adc    al,0x17
   1400162d7:	dec    DWORD PTR [rsp+rcx*1+0x7cff05]
   1400162de:	add    bh,bh
   1400162e0:	je     0x1400162e2
   1400162e2:	add    bh,bh
   1400162e4:	jne    0x1400162e6
   1400162e6:	add    bh,bh
   1400162e8:	jnp    0x1400162ea
   1400162ea:	add    bh,bh
   1400162ec:	mov    DWORD PTR [rbx],eax
   1400162ee:	add    bh,bh
   1400162f0:	ja     0x140016314
   1400162f2:	sbb    edi,edi
   1400162f4:	outs   dx,DWORD PTR ds:[rsi]
   1400162f5:	sub    esp,DWORD PTR [rdx]
   1400162f7:	call   FWORD PTR [rcx-0x5200fff0]
   1400162fd:	sbb    BYTE PTR [rcx],al
   1400162ff:	inc    eax
   140016301:	cmp    rdi,rdi
   140016304:	(bad)
   140016307:	dec    edx
   140016309:	rex.WXB cmp dil,r15b
   14001630c:	(bad)  
   14001630d:	rex.WRXB cmp al,0xff
   140016310:	rcl    DWORD PTR [rdx+0x3e],1
   140016313:	call   rsp
   140016315:	push   rsi
   140016316:	call   r14
   140016319:	rex.R sub eax,0x5367d2ff
   14001631f:	dec    edx
   140016321:	out    0xeb,al
   140016323:	call   FWORD PTR [rbp-0x6c196162]
   140016329:	xchg   ebx,eax
   14001632a:	xchg   ebx,eax
   14001632b:	adc    al,BYTE PTR [rax]
   14001632d:	add    BYTE PTR [rax],al
   14001632f:	add    BYTE PTR [rax],al
   140016331:	add    BYTE PTR [rax],al
   140016333:	add    BYTE PTR [rcx-0x211e6d6f],dl
   140016339:	(bad)  
   14001633a:	fdivr  st,st(7)
   14001633c:	test   al,0xa6
   14001633e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001633f:	jmp    FWORD PTR [rsi-0x4e005150]
   140016345:	mov    al,0xb1
   140016347:	jmp    QWORD PTR [rax-0x38005f60]
   14001634d:	fcmovu st,st(7)
   14001634f:	inc    DWORD PTR [rcx+0x7fff272b]
   140016355:	add    BYTE PTR [rax],al
   140016357:	dec    DWORD PTR [rbp-0x7400f6eb]
   14001635d:	sbb    BYTE PTR [rdi],cl
   14001635f:	dec    DWORD PTR [rbx-0x7600f3e9]
   140016365:	adc    BYTE PTR [rip+0x1090ff],al        # 0x14011f46a
   14001636b:	(bad)  
   14001636c:	jns    0x140016392
   14001636e:	sbb    bh,bh
   140016370:	mov    cl,0xa7
   140016372:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140016373:	push   QWORD PTR [rsp+rsi*4+0x1e76ffb4]
   14001637a:	(bad)  
   14001637b:	push   QWORD PTR [rbp-0x2e00f4e2]
   140016381:	gs push rdx
   140016383:	call   rbx
   140016385:	fs push rdx
   140016387:	call   rdi
   140016389:	(bad)  
   14001638a:	rex.WRX (bad) 
   14001638c:	fisub  DWORD PTR [rax+rdx*2-0x1]
   140016390:	frstor [rdi+0x52]
   140016393:	jmp    rax
   140016395:	imul   edx,DWORD PTR [rbp-0x1],0xff475fe6
   14001639c:	in     al,0x68
   14001639e:	push   rdx
   14001639f:	call   rax
   1400163a1:	in     eax,0xe6
   1400163a3:	jmp    QWORD PTR [rdx-0x6b005658]
   1400163a9:	nop
   1400163aa:	nop
   1400163ab:	add    BYTE PTR cs:[rax],al
   1400163ae:	add    BYTE PTR [rax],al
   1400163b0:	add    BYTE PTR [rax],al
   1400163b2:	add    BYTE PTR [rax],al
   1400163b4:	xchg   ebx,eax
   1400163b5:	nop
   1400163b6:	xchg   edx,eax
   1400163b7:	loope  0x140016397
   1400163b9:	(bad)  
   1400163ba:	(bad)  
   1400163bb:	jmp    QWORD PTR [rbp-0x4f005b5d]
   1400163c1:	scas   eax,DWORD PTR es:[rdi]
   1400163c2:	scas   eax,DWORD PTR es:[rdi]
   1400163c3:	push   QWORD PTR [rsp+rsi*4-0x5959004b]
   1400163ca:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400163cb:	inc    ebx
   1400163cd:	rcl    dl,1
   1400163cf:	dec    DWORD PTR [rdi-0x7100a7a3]
   1400163d5:	adc    ecx,DWORD PTR [rax]
   1400163d7:	call   FWORD PTR [rax-0x6c00d6d1]
   1400163dd:	(bad)  
   1400163de:	and    bh,bh
   1400163e0:	xchg   edx,eax
   1400163e1:	sub    BYTE PTR [rip+0x71391ff],bl        # 0x14714f5e6
   1400163e7:	(bad)  
   1400163e8:	js     0x140016407
   1400163ea:	(bad)  
   1400163eb:	inc    ebp
   1400163ed:	mov    bh,0xb5
   1400163ef:	(bad)  
   1400163f0:	(bad)  
   1400163f2:	(bad)  
   1400163f4:	(bad)
   1400163f7:	call   FWORD PTR [rbp-0x5c007878]
   1400163fd:	sub    edx,DWORD PTR [rsi]
   1400163ff:	(bad)  
   140016400:	fnstsw WORD PTR [rdx+0x6b]
   140016403:	(bad)  
   140016404:	fnsave [rdx+riz*2-0x1]
   140016408:	loopne 0x14001647e
   14001640a:	(bad)  
   14001640b:	jmp    rbx
   14001640d:	ja     0x140016472
   14001640f:	jmp    rsi
   140016411:	js     0x140016477
   140016413:	(bad)  
   140016414:	jmp    0x12c00cc94
   140016419:	ja     0x140016479
   14001641b:	(bad)  
   14001641c:	in     al,dx
   14001641d:	jo     0x140016479
   14001641f:	call   rbx
   140016421:	fsubrp st(1),st
   140016423:	jmp    FWORD PTR [rcx-0x6d004d4f]
   140016429:	xchg   ecx,eax
   14001642a:	xchg   ecx,eax
   14001642b:	rex.WB add BYTE PTR [r8],al
   14001642e:	add    BYTE PTR [rax],al
   140016430:	add    BYTE PTR [rax],al
   140016432:	add    BYTE PTR [rax],al
   140016434:	xchg   edx,eax
   140016435:	mov    ss,WORD PTR [rax-0x32322e1f]
   14001643b:	call   FWORD PTR [rbp-0x4d006465]
   140016441:	mov    cl,0xb1
   140016443:	(bad)  
   140016444:	mov    edi,0xb3ffc0c0
   140016449:	mov    bl,0xb3
   14001644b:	dec    eax
   14001644d:	rcl    ebx,1
   14001644f:	call   FWORD PTR [rdx-0x7100868a]
   140016455:	sbb    dl,BYTE PTR [rcx]
   140016457:	call   FWORD PTR [rsi-0x6400cdc6]
   14001645d:	cmp    dh,BYTE PTR [rsi]
   14001645f:	call   QWORD PTR [rdi+0x7cff2731]
   140016465:	(bad)  
   140016466:	sub    bh,bh
   140016468:	xlat   BYTE PTR ds:[rbx]
   140016469:	int3   
   14001646a:	retf   
   14001646b:	push   rsi
   14001646d:	div    dh
   14001646f:	call   FWORD PTR [rbx-0x4a00a49d]
   140016475:	xchg   ecx,eax
   140016476:	mov    edi,edi
   140016478:	(bad)  
   14001647a:	(bad)  
   14001647c:	nop
   14001647d:	(bad)  
   14001647e:	pop    rax
   14001647f:	jmp    rdx
   140016481:	pop    QWORD PTR [rdx+0x7485e6ff]
   140016487:	(bad)  
   140016488:	jmp    0x12c00da14
   14001648d:	mov    DWORD PTR [rdi-0x1],esi
   140016490:	out    dx,al
   140016491:	mov    bh,BYTE PTR [rcx-0x1]
   140016494:	lock lea edi,[rdx-0x1]
   140016498:	repz (bad) 
   14001649a:	jns    0x14001649b
   14001649c:	hlt    
   14001649d:	js     0x140016502
   14001649f:	call   rbp
   1400164a1:	rcl    cl,cl
   1400164a3:	jmp    FWORD PTR [rbp-0x6e004143]
   1400164a9:	mov    cs,WORD PTR [rbp+0x5d]
   1400164af:	add    BYTE PTR [rax],al
   1400164b1:	add    BYTE PTR [rax],al
   1400164b3:	add    BYTE PTR [rcx-0x331e6d72],dl
   1400164b9:	mov    ah,0xbe
   1400164bb:	call   QWORD PTR [rbp-0x4900757d]
   1400164c1:	mov    edx,0xcbcbffb7
   1400164c6:	retf   
   1400164c7:	(bad)  
   1400164c8:	mov    ebx,0xc6ffbbba
   1400164cd:	retf   
   1400164ce:	int    0xff
   1400164d0:	lahf   
   1400164d1:	xchg   edx,eax
   1400164d2:	xchg   esp,eax
   1400164d3:	dec    DWORD PTR [rdi-0x5900e5df]
   1400164d9:	rex.WB
   1400164da:	rex.XB jmp FWORD PTR [r11-0x5b00b3ab]
   1400164e1:	rex.WB
   1400164e2:	call   r12
   1400164e5:	int3   
   1400164e6:	int3   
   1400164e7:	(bad)  
   1400164e8:	out    dx,al
   1400164e9:	in     al,dx
   1400164ea:	jmp    0x1400164eb
   1400164ec:	xchg   ebx,eax
   1400164ed:	rex.WRX
   1400164ee:	rex.RB jmp FWORD PTR [r13-0x5200fce8]
   1400164f5:	ss and edi,edi
   1400164f8:	out    0xdf,eax
   1400164fa:	(bad)  
   1400164fc:	fcom   st(6)
   1400164fe:	(bad)  
   1400164ff:	jmp    QWORD PTR [rdi-0x11008a83]
   140016505:	cwde   
   140016506:	xchg   edi,edi
   140016508:	lock cdq 
   14001650a:	mov    edi,edi
   14001650c:	repz fwait
   14001650e:	mov    bh,bh
   140016510:	neg    BYTE PTR [rbp-0x61080074]
   140016516:	(bad)  
   140016517:	(bad)  
   140016518:	cli    
   140016519:	movabs ds:0xc4e1ff7289fcff91,al
   140016522:	mov    edi,0xd0ccb7ff
   140016527:	call   QWORD PTR [rcx+0x678d8d]
   14001652d:	add    BYTE PTR [rax],al
   14001652f:	add    BYTE PTR [rax],al
   140016531:	add    BYTE PTR [rax],al
   140016533:	add    BYTE PTR [rdi-0x501e757f],cl
   140016539:	stos   BYTE PTR es:[rdi],al
   14001653a:	test   al,0xff
   14001653c:	xchg   ecx,eax
   14001653d:	fwait
   14001653e:	xchg   ebp,eax
   14001653f:	(bad)  
   140016540:	mov    ebp,0xcdffbbb4
   140016545:	ror    dh,1
   140016547:	(bad)  
   140016548:	mov    edi,0xc1ffbfbd
   14001654d:	(bad)
   140016550:	mov    al,0xb6
   140016552:	mov    edx,0x212a8eff
   140016557:	jmp    FWORD PTR [rsi-0x4c00b0aa]
   14001655d:	(bad)  
   14001655e:	push   rdi
   14001655f:	call   QWORD PTR [rbp-0x5b00ede7]
   140016565:	push   rax
   140016566:	rex.WX call QWORD PTR [rsi+r14*1+0x16aaff28]
   14001656e:	add    edi,edi
   140016570:	mov    bh,0x17
   140016572:	add    bh,bh
   140016574:	rcr    BYTE PTR [rcx],0x1
   140016577:	push   QWORD PTR [rbx-0x9a98]
   14001657d:	(bad)  
   14001657e:	(bad)  
   14001657f:	(bad)  
   140016580:	mov    ecx,0xcbffaeb0
   140016585:	mov    edi,DWORD PTR [rdi-0x1]
   140016588:	cmc    
   140016589:	test   al,0x99
   14001658b:	(bad)  
   14001658c:	clc    
   14001658d:	stos   BYTE PTR es:[rdi],al
   14001658e:	fwait
   14001658f:	(bad)  
   140016590:	cli    
   140016591:	lods   eax,DWORD PTR ds:[rsi]
   140016592:	pushf  
   140016593:	(bad)  
   140016594:	std    
   140016595:	scas   al,BYTE PTR es:[rdi]
   140016596:	popf   
   140016597:	(bad)  
   140016598:	push   QWORD PTR [rcx-0x6600005b]
   14001659e:	cmp    edi,0xffffffed
   1400165a1:	mov    edi,0xd0bcffb7
   1400165a6:	fdivr  st,st(7)
   1400165a8:	xchg   ecx,eax
   1400165a9:	mov    cs,WORD PTR [rbp+0x81]
   1400165af:	add    BYTE PTR [rax],al
   1400165b1:	add    BYTE PTR [rax],al
   1400165b3:	add    BYTE PTR [rsi-0x72],dh
   1400165b6:	sbb    ebp,0x15
   1400165b9:	repnz test edi,edi
   1400165bc:	rex.WXB (bad) 
   1400165be:	mov    ?,edi
   1400165c0:	fild   QWORD PTR [rax-0x282e003c]
   1400165c6:	(bad)  
   1400165c7:	inc    ebp
   1400165c9:	(bad)
   1400165cc:	(bad)  
   1400165cd:	enter  0xffc9,0xba
   1400165d1:	retf   0xffce
   1400165d4:	xchg   ecx,eax
   1400165d5:	xor    DWORD PTR [rip+0x6067b8ff],ebp        # 0x1a0691eda
   1400165db:	push   QWORD PTR [rax-0x6f00b6ae]
   1400165e1:	add    BYTE PTR [rax],al
   1400165e3:	jmp    QWORD PTR [rbx+rdx*1+0x15aaff00]
   1400165ea:	add    bh,bh
   1400165ec:	mov    ah,0x18
   1400165ee:	add    bh,bh
   1400165f0:	ret    0x1c
   1400165f3:	dec    ecx
   1400165f5:	sbb    al,BYTE PTR [rax]
   1400165f7:	inc    ebp
   1400165f9:	(bad)  
   1400165fa:	(bad)  
   1400165fb:	call   rbp
   1400165fd:	mov    bl,0xff
   140016600:	std    
   140016601:	std    
   140016602:	std    
   140016603:	jmp    FWORD PTR [rax-0xd007471]
   140016609:	mov    cl,0xa3
   14001660b:	(bad)  
   14001660c:	std    
   14001660d:	mov    ebx,0xbdfeffac
   140016612:	lods   eax,DWORD PTR ds:[rsi]
   140016613:	(bad)  
   140016614:	(bad)  
   140016615:	mov    edi,0xc3ffffae
   14001661a:	mov    dh,0xff
   14001661c:	push   QWORD PTR [rdx-0x3d0f0066]
   140016622:	mov    ch,0xff
   140016624:	rcl    ah,0xda
   140016627:	call   QWORD PTR [rax+0xb98b8d]
   14001662d:	add    BYTE PTR [rax],al
   14001662f:	add    BYTE PTR [rax],al
   140016631:	add    BYTE PTR [rax],al
   140016633:	add    BYTE PTR [rax-0x7f],ch
   140016636:	jbe    0x140016610
   140016638:	add    BYTE PTR [rbx+0x39],bh
   14001663b:	jmp    QWORD PTR [rdx+0x78]
   14001663e:	imul   edi,edi,0xffd0c4d8
   140016644:	xlat   BYTE PTR ds:[rbx]
   140016645:	(bad)  
   140016647:	dec    edx
   140016649:	retf   0xffca
   14001664c:	int    0xcd
   14001664e:	(bad)  
   14001664f:	(bad)  
   140016650:	mov    esp,0x93ffd1ce
   140016655:	xor    al,0x31
   140016657:	(bad)  
   140016658:	mov    esi,0xa2ff6870
   14001665d:	sub    esp,DWORD PTR [rax]
   14001665f:	call   FWORD PTR [rbx-0x5100ffff]
   140016665:	sbb    BYTE PTR [rax],al
   140016667:	(bad)  
   140016668:	mov    esi,0xcaff0019
   14001666d:	sbb    eax,0x24d6ff00
   140016672:	add    bh,bh
   140016674:	loopne 0x14001668c
   140016676:	add    bh,bh
   140016678:	lock sub al,0x4
   14001667b:	call   rbp
   14001667d:	lods   eax,DWORD PTR ds:[rsi]
   14001667e:	movabs ds:0xe0e0e0ffdcdde0ff,eax
   140016687:	jmp    QWORD PTR [rdi-0x7d76]
   14001668d:	(bad)  
   14001668e:	mov    ebx,0xbcccffff
   140016693:	(bad)  
   140016694:	dec    edi
   140016696:	mov    ebp,0xc5d5ffff
   14001669b:	(bad)  
   14001669c:	dec    ecx
   14001669e:	mov    cl,0xff
   1400166a0:	hlt    
   1400166a1:	ret    
   1400166a2:	lods   eax,DWORD PTR ds:[rsi]
   1400166a3:	inc    ebp
   1400166a5:	(bad)  
   1400166a6:	fdiv   st(7),st
   1400166a8:	xchg   ecx,eax
   1400166a9:	(bad)  
   1400166aa:	(bad)  
   1400166ab:	loopne 0x140016644
   1400166ad:	xchg   edi,eax
   1400166ae:	xchg   edi,eax
   1400166af:	or     eax,DWORD PTR [rax]
   1400166b1:	add    BYTE PTR [rax],al
   1400166b3:	add    BYTE PTR [rdx+rbp*2+0x71],dh
   1400166b7:	in     al,0x47
   1400166b9:	es sub eax,0x675f7aff
   1400166bf:	inc    eax
   1400166c1:	mov    bh,0xff
   1400166c4:	xlat   BYTE PTR ds:[rbx]
   1400166c5:	fcomp  st(0)
   1400166c7:	inc    ebx
   1400166c9:	ret    
   1400166ca:	ret    
   1400166cb:	call   rax
   1400166cd:	rcl    cl,1
   1400166cf:	(bad)  
   1400166d0:	mov    esi,0x95ffd3d0
   1400166d5:	rex.X cmp eax,0x5461b7ff
   1400166db:	call   FWORD PTR [rcx+rcx*1+0xfaaff00]
   1400166e2:	add    bh,bh
   1400166e4:	mov    bh,0x19
   1400166e6:	add    bh,bh
   1400166e8:	(bad)  
   1400166e9:	sbb    al,0x0
   1400166eb:	call   rax
   1400166ed:	and    BYTE PTR [rax],al
   1400166ef:	(bad)  
   1400166f0:	(bad)  [rsi]
   1400166f2:	add    bh,bh
   1400166f4:	out    0xe,eax
   1400166f6:	add    bh,bh
   1400166f8:	hlt    
   1400166f9:	rex.WX sub dil,dil
   1400166fc:	(bad)  
   1400166fd:	loopne 0x1400166d7
   1400166ff:	inc    esp
   140016701:	scas   al,BYTE PTR es:[rdi]
   140016702:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140016703:	(bad)  
   140016704:	(bad)  
   140016706:	fdivp  st(7),st
   140016708:	mov    esi,0xbdffbabb
   14001670d:	movabs eax,ds:0xd9ffffc8d8ffff96
   140016716:	leave  
   140016717:	(bad)  
   140016718:	(bad)  
   140016719:	fcmovne st,st(6)
   14001671b:	(bad)  
   14001671c:	(bad)  
   14001671d:	fadd   st,st(3)
   14001671f:	(bad)  
   140016720:	stc    
   140016721:	ret    0xffa9
   140016724:	retf   
   140016725:	xlat   BYTE PTR ds:[rbx]
   140016726:	(bad)  
   140016728:	xchg   ebx,eax
   140016729:	xchg   esi,eax
   14001672a:	xchg   edi,eax
   14001672b:	not    BYTE PTR [rsi+0x189596]
   140016731:	add    BYTE PTR [rax],al
   140016733:	add    BYTE PTR [rsi+0x7a9e8d8b],cl
   140016739:	je     0x1400167b2
   14001673b:	jmp    FWORD PTR [rbp-0xa005354]
   140016741:	idiv   cl
   140016743:	(bad)  
   140016744:	(bad)  
   140016745:	(bad)  
   140016746:	(bad)  
   140016747:	jmp    rcx
   140016749:	loope  0x14001672c
   14001674b:	call   rdi
   14001674d:	xlat   BYTE PTR ds:[rbx]
   14001674e:	xlat   BYTE PTR ds:[rbx]
   14001674f:	inc    ecx
   140016751:	rcl    bh,cl
   140016753:	call   FWORD PTR [rbx-0x5e00aca8]
   140016759:	sub    BYTE PTR [rcx],bl
   14001675b:	call   FWORD PTR [rdi-0x5000fffc]
   140016761:	(bad)  
   140016762:	add    bh,bh
   140016764:	mov    ebx,0xc7ff001a
   140016769:	sbb    eax,0x20d3ff00
   14001676e:	add    bh,bh
   140016770:	fbld   TBYTE PTR [rsi]
   140016772:	add    bh,bh
   140016774:	jmp    0x14001677f
   140016776:	add    bh,bh
   140016778:	sti    
   140016779:	ja     0x1400167d8
   14001677b:	(bad)  
   14001677c:	push   rcx
   14001677e:	out    dx,eax
   14001677f:	(bad)  
   140016780:	clc    
   140016781:	(bad)  
   140016782:	enter  0xc0ff,0xb3
   140016786:	scas   eax,DWORD PTR es:[rdi]
   140016787:	call   rsp
   140016789:	(bad)  
   14001678a:	(bad)  
   14001678b:	jmp    QWORD PTR [rdi-0x36005e5d]
   140016791:	mov    bl,0xa8
   140016793:	(bad)  
   140016794:	cld    
   140016795:	(bad)  
   140016797:	(bad)  
   140016798:	jmp    rsp
   14001679a:	(bad)  
   14001679c:	jmp    rbx
   14001679e:	(bad)  
   14001679f:	(bad)  
   1400167a0:	dec    edx
   1400167a2:	mov    bl,0xff
   1400167a4:	fcmovu st,st(6)
   1400167a6:	fdivp  st(7),st
   1400167a8:	fwait
   1400167a9:	popf   
   1400167aa:	movabs al,ds:0x21909293ff
   1400167b3:	add    BYTE PTR [rcx-0x4ef66667],bl
   1400167b9:	mov    ah,0xb2
   1400167bb:	push   rcx
   1400167bc:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400167bd:	test   al,0xa9
   1400167bf:	mov    eax,0xffb7b7b6
   1400167c4:	fcomp  st(0)
   1400167c6:	fdivr  st,st(7)
   1400167c8:	cld    
   1400167c9:	cld    
   1400167ca:	cld    
   1400167cb:	(bad)  
   1400167cc:	(bad)  
   1400167cd:	(bad)  
   1400167ce:	(bad)  
   1400167cf:	call   rax
   1400167d1:	fsubrp st(3),st
   1400167d3:	call   FWORD PTR [rbx+rbx*2+0x8cff53]
   1400167da:	add    bh,bh
   1400167dc:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400167dd:	adc    BYTE PTR [rax],al
   1400167df:	push   QWORD PTR [rdx-0x4000ffe9]
   1400167e5:	sbb    eax,DWORD PTR [rax]
   1400167e7:	dec    ebx
   1400167e9:	(bad)  
   1400167ea:	add    bh,bh
   1400167ec:	xlat   BYTE PTR ds:[rbx]
   1400167ed:	and    al,0x0
   1400167ef:	jmp    rbx
   1400167f1:	and    BYTE PTR [rax],al
   1400167f3:	push   rax
   1400167f5:	(bad)  
   1400167f6:	add    bh,bh
   1400167f8:	push   QWORD PTR [rax-0x7000063]
   1400167fe:	idiv   bh
   140016800:	(bad)  
   140016801:	(bad)  
   140016803:	push   rax
   140016805:	xlat   BYTE PTR ds:[rbx]
   140016806:	iret   
   140016807:	push   QWORD PTR [rbx-0x42005554]
   14001680d:	mov    ebp,0xa3adffbd
   140016812:	lahf   
   140016813:	(bad)  
   140016814:	stc    
   140016815:	out    0xe2,eax
   140016817:	(bad)  
   140016818:	push   rdx
   14001681a:	in     al,dx
   14001681b:	(bad)  
   14001681c:	push   rbx
   14001681e:	out    dx,al
   14001681f:	(bad)  
   140016820:	(bad)  
   140016821:	fadd   st,st(6)
   140016823:	(bad)  
   140016824:	jmp    0xe7014d0e
   140016829:	lods   al,BYTE PTR ds:[rsi]
   14001682a:	scas   al,BYTE PTR es:[rdi]
   14001682b:	call   QWORD PTR [rax+0x2c8f90]
	...
   140016839:	add    BYTE PTR [rax],al
   14001683b:	add    BYTE PTR [rsi+riz*4-0x5f60fa5a],ah
   140016842:	movabs al,ds:0x9a9a996291919017
   14001684b:	mov    eax,0xf3b4b4b3
   140016850:	ret    
   140016851:	iret   
   140016852:	sar    bh,cl
   140016854:	sahf   
   140016855:	jb     0x1400168c4
   140016857:	dec    DWORD PTR [rbp-0x57010000]
   14001685d:	adc    eax,DWORD PTR [rax]
   14001685f:	push   QWORD PTR [rbp-0x3e00ffe4]
   140016865:	(bad)  
   140016866:	add    bh,bh
   140016868:	iret   
   140016869:	and    BYTE PTR [rax],al
   14001686b:	(bad)  
   14001686c:	(bad)  [rsi]
   14001686e:	add    bh,bh
   140016870:	out    0x18,al
   140016872:	add    bh,bh
   140016874:	clc    
   140016875:	and    al,0x0
   140016877:	(bad)  
   140016878:	jmp    rdx
   14001687a:	xlat   BYTE PTR ds:[rbx]
   14001687b:	(bad)  
   14001687c:	(bad)  
   14001687d:	(bad)  
   14001687e:	(bad)  
   14001687f:	(bad)  
   140016880:	(bad)  
   140016881:	in     eax,dx
   140016882:	jmp    0x12bf26886
   140016887:	(bad)  
   140016888:	out    dx,al
   140016889:	loop   0x140016865
   14001688b:	(bad)  
   14001688c:	jmp    0x12d013f6f
   140016891:	fcmovnbe st,st(2)
   140016893:	(bad)  
   140016894:	std    
   140016895:	out    0xdb,al
   140016897:	(bad)  
   140016898:	jmp    rbp
   14001689a:	(bad)  
   14001689b:	(bad)  
   14001689c:	(bad)  
   14001689d:	fmul   st(1),st
   14001689f:	(bad)  
   1400168a0:	sti    
   1400168a1:	mov    ebx,0xe9f3ff9e
   1400168a6:	in     al,0xff
   1400168a8:	mov    cl,0xba
   1400168aa:	mov    esp,0x8a8b8dff
   1400168af:	push   rax
	...
   1400168cc:	xchg   esi,eax
   1400168cd:	xchg   esi,eax
   1400168ce:	xchg   esi,eax
   1400168cf:	or     al,0xae
   1400168d1:	mov    dh,0xb9
   1400168d3:	lods   al,BYTE PTR ds:[rsi]
   1400168d4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400168d5:	popf   
   1400168d6:	pushf  
   1400168d7:	call   QWORD PTR [rcx-0x5200fdfb]
   1400168dd:	or     BYTE PTR [rax],al
   1400168df:	(bad)  
   1400168e0:	mov    edx,0xc6ff000d
   1400168e5:	or     al,BYTE PTR [rax]
   1400168e7:	call   rsp
   1400168e9:	or     al,BYTE PTR [rax]
   1400168eb:	jmp    rbx
   1400168ed:	or     BYTE PTR [rax],al
   1400168ef:	(bad)  
   1400168f0:	out    dx,eax
   1400168f1:	add    BYTE PTR [rax],al
   1400168f3:	(bad)  
   1400168f4:	jmp    FWORD PTR [rbx]
   1400168f6:	add    bh,bh
   1400168f8:	(bad)  
   1400168f9:	fcmovnbe st,st(0)
   1400168fb:	(bad)  
   1400168fc:	std    
   1400168fd:	fxch   st(7)
   1400168ff:	(bad)  
   140016900:	inc    esi
   140016902:	mov    ch,0xff
   140016904:	cli    
   140016905:	(bad)  
   140016906:	mov    cl,0xff
   140016908:	hlt    
   140016909:	ret    0xffb0
   14001690c:	clc    
   14001690d:	shr    DWORD PTR [rdi-0x5b440b01],0xff
   140016914:	out    0xb4,al
   140016916:	movabs eax,ds:0xb9c5e3ffacbae0ff
   14001691f:	jmp    rbx
   140016921:	int3   
   140016922:	(bad)  
   140016923:	push   rbp
   140016925:	div    ch
   140016927:	inc    esp
   140016929:	(bad)  
   14001692a:	leave  
   14001692b:	call   FWORD PTR [rbp+0x3b9b9c]
	...
   14001694d:	add    BYTE PTR [rax],al
   14001694f:	add    BYTE PTR [rdx-0x4e924348],dh
   140016955:	mov    edx,0x85ffbd
   14001695a:	add    bh,bh
   14001695c:	movabs eax,ds:0xb8ff0308b3ff0000
   140016965:	(bad)  
   140016966:	or     edi,edi
   140016968:	mov    edi,0xccff1a2c
   14001696d:	xor    rdi,rdi
   140016970:	(bad)  
   140016971:	push   rdi
   140016972:	rex.RB call r9
   140016975:	jl     0x1400169e2
   140016977:	call   rbp
   140016979:	scas   al,BYTE PTR es:[rdi]
   14001697a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001697b:	call   rcx
   14001697d:	mov    dl,0xac
   14001697f:	call   rax
   140016981:	mov    ch,0xaf
   140016983:	dec    eax
   140016985:	mov    ebp,0xcac7ffbc
   14001698a:	retf   0xcbff
   14001698d:	rcl    dl,1
   14001698f:	dec    edx
   140016991:	rcl    esp,1
   140016993:	dec    ecx
   140016995:	(bad)  
   140016996:	fucompp 
   140016998:	retf   
   140016999:	fchs   
   14001699b:	int    0xc7
   14001699d:	xlat   BYTE PTR ds:[rbx]
   14001699e:	fsub   QWORD PTR [rdx-0x70242937]
   1400169a4:	iret   
   1400169a5:	rcl    ebx,1
   1400169a7:	mov    ecx,edx
   1400169a9:	(bad)  
   1400169aa:	(bad)  
   1400169ab:	push   rcx
	...
   1400169d0:	mov    bl,0xb5
   1400169d2:	mov    ecx,0xc4bfb664
   1400169d7:	call   FWORD PTR [rdi-0x5200908d]
   1400169dd:	xchg   ecx,eax
   1400169de:	(bad)  
   1400169df:	(bad)  
   1400169e0:	mov    edx,0xb8ffabad
   1400169e5:	mov    ebx,0xceb8ffb8
   1400169ea:	iret   
   1400169eb:	(bad)  
   1400169ec:	mov    esp,0xc1ffe5e0
   1400169f1:	in     eax,dx
   1400169f2:	repz test eax,0xc4dfefe7
   1400169f9:	xlat   BYTE PTR ds:[rbx]
   1400169fa:	fidivr DWORD PTR [rdi-0x5f252a3c]
   140016a00:	(bad)
   140016a03:	test   eax,ecx
   140016a05:	rcl    ebp,1
   140016a07:	jae    0x1400169d1
   140016a09:	int    0xce
   140016a0b:	push   rsp
   140016a0c:	(bad)  
   140016a0d:	retf   
   140016a0e:	int3   
   140016a0f:	(bad)  
   140016a10:	(bad)  
   140016a11:	int3   
   140016a12:	int    0x39
   140016a14:	enter  0xcdca,0x25
   140016a18:	(bad)  
   140016a19:	leave  
   140016a1a:	enter  0xc61d,0xc8
   140016a1e:	leave  
   140016a1f:	shufps xmm1,xmm0,0xc9
   140016a23:	or     eax,0x4c9c8c3
   140016a28:	(bad)  
   140016a29:	leave  
   140016a2a:	retf   
   140016a2b:	(bad)  
   140016a2c:	retf   
   140016a2d:	iret   
   140016a2e:	rol    BYTE PTR [rdx],cl
	...
   140016a50:	(bad)  
   140016a51:	cdq    
   140016a52:	pushf  
   140016a53:	or     al,0xba
   140016a55:	mov    esp,0xe6cea3bd
   140016a5a:	call   0x123e3331d
   140016a5f:	xchg   esi,eax
   140016a60:	leave  
   140016a61:	fstp   st(7)
   140016a63:	imul   ecx,edx,0xffffffdd
   140016a66:	loope  0x140016ab7
   140016a68:	retf   
   140016a69:	xlat   BYTE PTR ds:[rbx]
   140016a6a:	fidivr DWORD PTR [rax]
   140016a6c:	retf   0xd2d1
   140016a6f:	cs enter 0xcccd,0x1e
   140016a74:	enter  0xcac9,0xe
	...
   140016bb0:	(bad)  
   140016bb1:	(bad)  
   140016bb2:	(bad)  
   140016bb3:	(bad)  
   140016bb4:	(bad)  
   140016bb5:	(bad)  
   140016bb6:	(bad)  
   140016bb7:	(bad)  
   140016bb8:	(bad)  
   140016bb9:	inc    BYTE PTR [rax]
   140016bbb:	(bad)  
   140016bbc:	(bad)  
   140016bbd:	cld    
   140016bbe:	add    BYTE PTR [rbx-0x1],dh
   140016bc1:	lock add BYTE PTR [rcx],al
   140016bc4:	push   rax
   140016bc6:	add    BYTE PTR [rax],al
   140016bc8:	jmp    rax
   140016bca:	add    BYTE PTR [rax],al
   140016bcc:	push   rax
   140016bce:	add    BYTE PTR [rax],al
   140016bd0:	cmp    BYTE PTR [rax],0x0
   140016bd3:	add    al,BYTE PTR [rax-0x7ffcfff4]
   140016bd9:	add    al,BYTE PTR [rax]
   140016bdb:	add    eax,DWORD PTR [rax-0x7ffd0000]
   140016be1:	add    BYTE PTR [rax],al
   140016be3:	add    eax,DWORD PTR [rax-0x7ffd0000]
   140016be9:	add    BYTE PTR [rax],al
   140016beb:	add    DWORD PTR [rax-0x7fff0000],eax
   140016bf1:	add    BYTE PTR [rax],al
   140016bf3:	add    DWORD PTR [rax-0x7fff0000],eax
   140016bf9:	add    BYTE PTR [rax],al
   140016bfb:	add    DWORD PTR [rax-0x7fff0000],eax
   140016c01:	add    BYTE PTR [rax],al
   140016c03:	add    DWORD PTR [rax-0x80000000],eax
   140016c09:	add    BYTE PTR [rax],al
   140016c0b:	add    BYTE PTR [rax-0x80000000],al
   140016c11:	add    BYTE PTR [rax],al
   140016c13:	add    al,ah
   140016c15:	add    BYTE PTR [rax],al
   140016c17:	add    dh,bh
   140016c19:	add    BYTE PTR [rax],al
   140016c1b:	add    bh,bh
   140016c1d:	add    BYTE PTR [rax],al
   140016c1f:	add    edi,edi
   140016c21:	add    BYTE PTR [rax],al
   140016c23:	add    bh,bh
   140016c25:	add    BYTE PTR [rdi],bh
   140016c27:	(bad)  
   140016c28:	(bad)  
   140016c29:	(bad)  
   140016c2a:	(bad)  
   140016c2b:	(bad)  
   140016c2c:	(bad)  
   140016c2d:	(bad)  
   140016c2e:	(bad)  
   140016c2f:	jmp    FWORD PTR [rax]
   140016c31:	add    BYTE PTR [rax],al
   140016c33:	add    BYTE PTR [rax],dl
   140016c35:	add    BYTE PTR [rax],al
   140016c37:	add    BYTE PTR [rax],ah
   140016c39:	add    BYTE PTR [rax],al
   140016c3b:	add    BYTE PTR [rcx],al
   140016c3d:	add    BYTE PTR [rax],ah
   140016c3f:	add    BYTE PTR [rax],al
   140016c41:	add    BYTE PTR [rax],al
   140016c43:	add    BYTE PTR [rax+0x4],al
	...
   140016c96:	add    BYTE PTR [rax],al
   140016c98:	xchg   ecx,eax
   140016c99:	nop
   140016c9a:	nop
   140016c9b:	(bad)  
   140016c9c:	jnp    0x140016d17
   140016c9e:	jns    0x140016c9f
   140016ca0:	xchg   ecx,eax
   140016ca1:	nop
   140016ca2:	nop
   140016ca3:	inc    DWORD PTR [rax]
	...
   140016cad:	add    BYTE PTR [rax],al
   140016caf:	add    BYTE PTR [rbx-0x44004344],bh
   140016cb5:	mov    esp,0xb5b4ffbc
   140016cba:	mov    ch,0xff
   140016cbc:	fwait
   140016cbd:	pushf  
   140016cbe:	pushf  
   140016cbf:	call   FWORD PTR [rbx-0x60006364]
   140016cc5:	movabs al,ds:0xffa0a0a0ffa0
	...
   140016cd6:	add    BYTE PTR [rax],al
   140016cd8:	mov    ah,0xb4
   140016cda:	mov    ah,0xd3
   140016cdc:	xchg   esp,eax
   140016cdd:	xchg   esp,eax
   140016cde:	xchg   esp,eax
   140016cdf:	call   FWORD PTR [rsi+0xcd9e9e]
	...
   140016ced:	add    BYTE PTR [rax],al
   140016cef:	add    dl,dl
   140016cf1:	rcl    dl,cl
   140016cf3:	(bad)  
   140016cf4:	enter  0xc9c9,0xff
   140016cf8:	(bad)  
   140016cf9:	mov    dh,0xff
   140016cfc:	mov    ecx,0xaaffbaba
   140016d01:	stos   DWORD PTR es:[rdi],eax
   140016d02:	stos   DWORD PTR es:[rdi],eax
   140016d03:	jmp    QWORD PTR [rax-0x5f005f60]
   140016d09:	movabs al,ds:0x61a0
   140016d12:	add    BYTE PTR [rax],al
   140016d14:	add    BYTE PTR [rax],al
   140016d16:	add    BYTE PTR [rax],al
   140016d18:	stos   DWORD PTR es:[rdi],eax
   140016d19:	stos   DWORD PTR es:[rdi],eax
   140016d1a:	stos   DWORD PTR es:[rdi],eax
   140016d1b:	idiv   DWORD PTR [rdi-0x5a004041]
   140016d21:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140016d22:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140016d23:	inc    DWORD PTR [rax]
	...
   140016d31:	add    BYTE PTR [rax],al
   140016d33:	add    dh,bl
   140016d35:	(bad)  
   140016d37:	ss mov ecx,0x8affbaba
   140016d3d:	mov    cl,BYTE PTR [rdx-0x68686801]
   140016d43:	in     al,dx
   140016d44:	movabs al,ds:0x36a0a0
	...
   140016d55:	add    BYTE PTR [rax],al
   140016d57:	add    BYTE PTR [rsi-0x2e085152],ch
   140016d5d:	rcl    ecx,1
   140016d5f:	jmp    FWORD PTR [rbx-0x3c005455]
   140016d65:	(bad)  
   140016d66:	(bad)  
   140016d67:	xchg   al,al
   140016d69:	rol    ecx,0xff
   140016d6c:	mov    esi,0xbbffbfbf
   140016d71:	mov    esp,0xb9b8ffbc
   140016d76:	mov    ecx,0xb6b6b5ff
   140016d7b:	jmp    FWORD PTR [rdx-0x57005556]
   140016d81:	test   al,0xa8
   140016d83:	jmp    QWORD PTR [rsi-0x5b00595a]
   140016d89:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140016d8a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140016d8b:	jmp    QWORD PTR [rdx-0x5f005d5e]
   140016d91:	movabs al,ds:0xadad95a0a0a0ffa0
   140016d9a:	lods   eax,DWORD PTR ds:[rsi]
   140016d9b:	not    ecx
   140016d9d:	rcl    ecx,1
   140016d9f:	jmp    FWORD PTR [rbx-0x32005455]
   140016da5:	iret   
   140016da6:	iret   
   140016da7:	dec    ebp
   140016da9:	iret   
   140016daa:	iret   
   140016dab:	dec    ebp
   140016dad:	(bad)  
   140016dae:	iret   
   140016daf:	dec    esp
   140016db1:	(bad)  
   140016db2:	(bad)  
   140016db3:	dec    ebx
   140016db5:	int    0xcd
   140016db7:	dec    edx
   140016db9:	int3   
   140016dba:	int3   
   140016dbb:	inc    edi
   140016dbd:	leave  
   140016dbe:	leave  
   140016dbf:	inc    esi
   140016dc1:	leave  
   140016dc2:	leave  
   140016dc3:	inc    esi
   140016dc5:	leave  
   140016dc6:	leave  
   140016dc7:	inc    ebp
   140016dc9:	enter  0xffc8,0xc5
   140016dcd:	enter  0xffc8,0xc4
   140016dd1:	mov    edi,0xa0a0a0ff
   140016dd7:	jmp    FWORD PTR [rbp-0x2e085253]
   140016ddd:	rcl    ecx,1
   140016ddf:	jmp    FWORD PTR [rbx-0x31005455]
   140016de5:	rcl    al,1
   140016de7:	jmp    FWORD PTR [rbp-0x58005152]
   140016ded:	(bad)  
   140016dee:	ud0    ebp,DWORD PTR [rbx-0x5700f2ed]
   140016df5:	(bad)  
   140016df6:	(bad)  
   140016df7:	jmp    FWORD PTR [rcx-0x4b00dfe0]
   140016dfd:	(bad)  
   140016dfe:	(bad)  
   140016dff:	call   rsp
   140016e01:	sbb    eax,DWORD PTR [rcx]
   140016e03:	call   rsp
   140016e05:	sbb    eax,0x1dd8ff01
   140016e0a:	add    bh,bh
   140016e0c:	retf   
   140016e0d:	and    eax,0xc8c5ff03
   140016e12:	enter  0xa1ff,0xa1
   140016e16:	movabs eax,ds:0xd1d1d1f7aeaeaeff
   140016e1f:	jmp    FWORD PTR [rsp+rbp*4-0x2e300054]
   140016e26:	sar    edi,1
   140016e28:	stos   DWORD PTR es:[rdi],eax
   140016e29:	lods   al,BYTE PTR ds:[rsi]
   140016e2a:	lods   al,BYTE PTR ds:[rsi]
   140016e2b:	push   QWORD PTR [rdx-0x4c00dcd4]
   140016e31:	xor    DWORD PTR [rdx],esp
   140016e33:	(bad)  
   140016e34:	mov    ecx,0xc9ff0c1d
   140016e39:	(bad)
   140016e3c:	int3   
   140016e3d:	jno    0x140016ea2
   140016e3f:	call   rdi
   140016e41:	rex.RXB sub al,0xff
   140016e44:	fiadd  WORD PTR [rax+0x25]
   140016e47:	jmp    rbx
   140016e49:	rex.R (bad) 
   140016e4b:	(bad)  
   140016e4c:	fnstsw WORD PTR [rbx]
   140016e4e:	adc    bh,bh
   140016e50:	(bad)  
   140016e51:	mov    edi,0xa3a3a3ff
   140016e57:	call   QWORD PTR [rsi+0xf7a3bd]
   140016e5d:	bnd rex.W jmp QWORD PTR [rdx-0x3e]
   140016e62:	(bad)  
   140016e63:	dec    edi
   140016e65:	rcl    ecx,1
   140016e67:	jmp    FWORD PTR [rcx-0x4b005657]
   140016e6d:	rex xor eax,0x222fb4ff
   140016e73:	call   rdi
   140016e75:	(bad)  
   140016e76:	(bad)  
   140016e77:	(bad)  
   140016e78:	out    dx,al
   140016e79:	out    dx,al
   140016e7a:	out    dx,al
   140016e7b:	(bad)  
   140016e7c:	clc    
   140016e7d:	clc    
   140016e7e:	clc    
   140016e7f:	push   QWORD PTR [rbx-0x24007873]
   140016e85:	pop    rax
   140016e86:	cmp    edi,edi
   140016e88:	fstp   QWORD PTR [rcx+rax*2-0x1]
   140016e8c:	fimul  WORD PTR [rdi+0x2d]
   140016e8f:	inc    ebp
   140016e91:	enter  0xffc8,0xa5
   140016e95:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140016e96:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140016e97:	jmp    FWORD PTR [rbx+0x48f7abab]
   140016e9d:	rex.R
   140016e9e:	rex.XB (bad) 
   140016ea0:	jnp    0x140016f1b
   140016ea2:	jns    0x140016ea3
   140016ea4:	rcl    edx,1
   140016ea6:	sar    bh,cl
   140016ea8:	movabs ds:0xc0ff3a43b8ffa3a3,eax
   140016eb1:	rex.B xor al,0xff
   140016eb4:	fmul   st(2),st
   140016eb6:	leave  
   140016eb7:	(bad)  
   140016eb8:	fcomp  DWORD PTR [rdx]
   140016eba:	add    bh,bh
   140016ebc:	(bad)  
   140016ebd:	(bad)  
   140016ebe:	jne    0x140016ebf
   140016ec0:	(bad)  
   140016ec1:	(bad)  
   140016ec2:	(bad)  
   140016ec3:	call   rsi
   140016ec5:	push   0x53
   140016ec7:	call   rbp
   140016ec9:	ins    BYTE PTR es:[rdi],dx
   140016eca:	pop    rcx
   140016ecb:	(bad)  
   140016ecc:	fisub  DWORD PTR [rdx+0x48]
   140016ecf:	inc    edi
   140016ed1:	retf   0xffca
   140016ed4:	stos   DWORD PTR es:[rdi],eax
   140016ed5:	stos   DWORD PTR es:[rdi],eax
   140016ed6:	stos   DWORD PTR es:[rdi],eax
   140016ed7:	(bad)  
   140016ed8:	mov    esi,0xbe94bebe
   140016edd:	mov    esi,0xbebeffbe
   140016ee2:	mov    esi,0xd2d2d0c0
   140016ee7:	jmp    QWORD PTR [rdx-0x43005d5e]
   140016eed:	(bad)  
   140016eee:	and    al,0xff
   140016ef0:	(bad)
   140016ef3:	(bad)  
   140016ef4:	ficomp DWORD PTR [rsi]
   140016ef6:	add    bh,bh
   140016ef8:	out    0x1b,al
   140016efa:	add    bh,bh
   140016efc:	call   FWORD PTR [rcx+0x36]
   140016eff:	push   rbx
   140016f01:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140016f02:	nop
   140016f03:	(bad)  
   140016f04:	(bad)  
   140016f06:	fcos   
   140016f08:	jmp    FWORD PTR [rdx+0x3c]
   140016f0b:	(bad)  
   140016f0c:	jmp    QWORD PTR [rbp+0x31]
   140016f0f:	inc    edi
   140016f11:	retf   0xffca
   140016f14:	lods   eax,DWORD PTR ds:[rsi]
   140016f15:	scas   al,BYTE PTR es:[rdi]
   140016f16:	scas   al,BYTE PTR es:[rdi]
   140016f17:	inc    DWORD PTR [rax]
	...
   140016f21:	add    BYTE PTR [rax],al
   140016f23:	add    cl,dl
   140016f25:	rcl    bl,cl
   140016f27:	jmp    QWORD PTR [rax-0x3a005f60]
   140016f2d:	sbb    BYTE PTR [rdi],al
   140016f2f:	call   rsp
   140016f31:	sbb    BYTE PTR [rcx],al
   140016f33:	jmp    rbx
   140016f35:	es add bh,bh
   140016f38:	in     eax,dx
   140016f39:	sbb    al,BYTE PTR [rax]
   140016f3b:	(bad)  
   140016f3c:	push   QWORD PTR [rax+0x4b]
   140016f3f:	(bad)  
   140016f40:	jmp    FWORD PTR [rbx+0x48]
   140016f43:	jmp    rcx
   140016f45:	loope  0x140016f28
   140016f47:	inc    eax
   140016f49:	mov    edx,0x6bffffb8
   140016f4e:	(bad)  
   140016f4f:	dec    eax
   140016f51:	retf   0xffcb
   140016f54:	mov    al,0xb1
   140016f56:	mov    cl,0xff
	...
   140016f64:	rcl    edx,1
   140016f66:	sar    edi,cl
   140016f68:	movabs al,ds:0xdcff0404caffa0a0
   140016f71:	(bad)  
   140016f73:	(bad)  
   140016f74:	call   0x138006f8b
   140016f79:	(bad)  
   140016f7a:	add    bh,bh
   140016f7c:	(bad)  
   140016f7d:	jg     0x140016fbb
   140016f7f:	call   rsi
   140016f81:	(bad)  
   140016f82:	pop    rsp
   140016f83:	call   rdi
   140016f85:	sbb    DWORD PTR [rcx-0x1],0xffffffda
   140016f89:	adc    DWORD PTR [rcx-0x1],0xff4373df
   140016f90:	leave  
   140016f91:	retf   
   140016f92:	retf   
   140016f93:	push   QWORD PTR [rdx+0xffb3b3]
	...
   140016fa1:	add    BYTE PTR [rax],al
   140016fa3:	add    cl,dl
   140016fa5:	rcl    bl,cl
   140016fa7:	jmp    QWORD PTR [rax-0x5f005f60]
   140016fad:	movabs al,ds:0xa2a2ffa0a0a0ffa0
   140016fb6:	movabs ds:0xaeaeadffa4a4a4ff,al
   140016fbf:	push   QWORD PTR [rax-0x4d004f50]
   140016fc5:	mov    bl,0xb3
   140016fc7:	push   QWORD PTR [rbp-0x4700494a]
   140016fcd:	mov    ecx,0xcbc9ffb9
   140016fd2:	int3   
   140016fd3:	push   QWORD PTR [rbp+0xffb6b6]
	...
   140016fe1:	add    BYTE PTR [rax],al
   140016fe3:	add    cl,dl
   140016fe5:	rcl    bl,cl
   140016fe7:	js     0x140016fba
   140016fe9:	rcl    bl,cl
   140016feb:	call   rcx
   140016fed:	rcl    bl,cl
   140016fef:	call   rcx
   140016ff1:	rcl    bl,cl
   140016ff3:	call   rax
   140016ff5:	rcl    dl,cl
   140016ff7:	call   rax
   140016ff9:	rcl    edx,1
   140016ffb:	dec    esi
   140016ffd:	rcl    al,1
   140016fff:	dec    ebp
   140017001:	iret   
   140017002:	iret   
   140017003:	dec    ebp
   140017005:	iret   
   140017006:	iret   
   140017007:	dec    esp
   140017009:	(bad)  
   14001700a:	(bad)  
   14001700b:	dec    ebx
   14001700d:	int    0xcd
   14001700f:	dec    edx
   140017011:	int3   
   140017012:	int3   
   140017013:	(bad)  
   140017014:	mov    eax,0x95b9b9
	...
   140017055:	add    BYTE PTR [rax],al
   140017057:	add    bh,bh
   140017059:	inc    DWORD PTR [rax]
   14001705b:	add    BYTE PTR [rdi+rax*1],bl
   14001705e:	add    BYTE PTR [rax],al
   140017060:	sbb    al,0x7
   140017062:	add    BYTE PTR [rax],al
   140017064:	(bad)  
   140017065:	sldt   WORD PTR [rax]
	...
   140017084:	loopne 0x140017086
   140017086:	add    BYTE PTR [rax],al
   140017088:	loopne 0x14001708a
   14001708a:	add    BYTE PTR [rax],al
   14001708c:	loopne 0x14001708e
   14001708e:	add    BYTE PTR [rax],al
   140017090:	loopne 0x140017092
   140017092:	add    BYTE PTR [rax],al
   140017094:	(bad)  
   140017095:	inc    DWORD PTR [rax]
   140017097:	add    BYTE PTR [rax],al
   140017099:	add    BYTE PTR [rcx],al
   14001709b:	add    BYTE PTR [rdx],cl
   14001709d:	add    BYTE PTR [rax],dh
   14001709f:	xor    BYTE PTR [rax],dl
   1400170a1:	add    BYTE PTR [rcx],al
   1400170a3:	add    BYTE PTR [rax+rax*1],al
   1400170a6:	push   0x1000006
   1400170ab:	add    BYTE PTR [rax],ah
   1400170ad:	and    BYTE PTR [rax],dl
   1400170af:	add    BYTE PTR [rcx],al
   1400170b1:	add    BYTE PTR [rax+rax*1],al
   1400170b4:	call   0x1420170bb
   1400170b9:	add    BYTE PTR [rax],dl
   1400170bb:	adc    BYTE PTR [rax],dl
   1400170bd:	add    BYTE PTR [rcx],al
   1400170bf:	add    BYTE PTR [rax+rax*1],al
   1400170c2:	sub    BYTE PTR [rcx],al
   1400170c4:	add    BYTE PTR [rax],al
   1400170c6:	add    eax,DWORD PTR [rax]
   1400170c8:	xor    BYTE PTR [rax],dh
   1400170ca:	add    BYTE PTR [rax],al
   1400170cc:	add    DWORD PTR [rax],eax
   1400170ce:	or     BYTE PTR [rax],al
   1400170d0:	test   al,0xe
   1400170d2:	add    BYTE PTR [rax],al
   1400170d4:	add    al,0x0
   1400170d6:	and    BYTE PTR [rax],ah
   1400170d8:	add    BYTE PTR [rax],al
   1400170da:	add    DWORD PTR [rax],eax
   1400170dc:	or     BYTE PTR [rax],al
   1400170de:	test   al,0x8
   1400170e0:	add    BYTE PTR [rax],al
   1400170e2:	add    eax,0x101000
   1400170e7:	add    BYTE PTR [rcx],al
   1400170e9:	add    BYTE PTR [rax],cl
   1400170eb:	add    BYTE PTR [rax+0x5],ch
   1400170ee:	add    BYTE PTR [rax],al
   1400170f0:	(bad)  
   1400170f1:	add    BYTE PTR [rax],al
   1400170f3:	add    BYTE PTR [rax],al
   1400170f5:	add    BYTE PTR [rcx],al
   1400170f7:	add    BYTE PTR [rax],ah
   1400170f9:	add    al,ch
   1400170fb:	mov    bh,0x0
   1400170fd:	add    BYTE PTR [rdi],al
   1400170ff:	add    BYTE PTR [rax],dh
   140017101:	xor    BYTE PTR [rax],al
   140017103:	add    BYTE PTR [rcx],al
   140017105:	add    BYTE PTR [rax],ah
   140017107:	add    BYTE PTR [rax+0x8000025],ch
   14001710d:	add    BYTE PTR [rax],ah
   14001710f:	and    BYTE PTR [rax],al
   140017111:	add    BYTE PTR [rcx],al
   140017113:	add    BYTE PTR [rax],ah
   140017115:	add    BYTE PTR [rax+0x9000010],ch
   14001711b:	add    BYTE PTR [rax],dl
   14001711d:	adc    BYTE PTR [rax],al
   14001711f:	add    BYTE PTR [rcx],al
   140017121:	add    BYTE PTR [rax],ah
   140017123:	add    BYTE PTR [rax+0x4],ch
   140017126:	add    BYTE PTR [rax],al
   140017128:	or     al,BYTE PTR [rax]
   14001712a:	add    BYTE PTR [rax],al
   14001712c:	add    BYTE PTR [rax],al
   14001712e:	add    BYTE PTR [rax],al
   140017130:	nop
   140017131:	add    esi,DWORD PTR [rax+rax*1]
   140017134:	add    BYTE PTR [rax],al
   140017136:	push   rsi
   140017137:	add    BYTE PTR [rbx+0x0],dl
   14001713a:	pop    rdi
   14001713b:	add    BYTE PTR [rsi+0x0],dl
   14001713e:	add    BYTE PTR [r10+0x0],r10b
   140017142:	push   rbx
   140017143:	add    BYTE PTR [rcx+0x0],cl
   140017146:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14001714a:	pop    rdi
   14001714b:	add    BYTE PTR [rcx+0x0],cl
   14001714e:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   140017152:	rex.WRXB add BYTE PTR [r8],r8b
   140017155:	add    BYTE PTR [rax],al
   140017157:	add    BYTE PTR [rbp+0xfeef04],bh
   14001715d:	add    BYTE PTR [rcx],al
   14001715f:	add    BYTE PTR [rax],al
   140017161:	add    BYTE PTR [rdx],cl
   140017163:	add    BYTE PTR [rax],al
   140017165:	add    BYTE PTR [rax],bpl
   140017168:	add    BYTE PTR [rax],al
   14001716a:	or     al,BYTE PTR [rax]
   14001716c:	add    BYTE PTR [rax+0x0],al
   14001716f:	sub    BYTE PTR [rdi],bh
   140017171:	add    BYTE PTR [rax],al
   140017173:	add    BYTE PTR [rax],al
   140017175:	add    BYTE PTR [rax],al
   140017177:	add    BYTE PTR [rax+rax*1],al
   14001717a:	add    al,0x0
   14001717c:	add    DWORD PTR [rax],eax
	...
   14001718a:	add    BYTE PTR [rax],al
   14001718c:	out    dx,al
   14001718d:	add    al,BYTE PTR [rax]
   14001718f:	add    BYTE PTR [rcx],al
   140017191:	add    BYTE PTR [rbx+0x0],dl
   140017194:	je     0x140017196
   140017196:	jb     0x140017198
   140017198:	imul   eax,DWORD PTR [rax],0x67006e
   14001719e:	rex.RX add BYTE PTR [rcx+0x0],r13b
   1400171a2:	ins    BYTE PTR es:[rdi],dx
   1400171a3:	add    BYTE PTR [rbp+0x0],ah
   1400171a6:	rex.WB add BYTE PTR [r14+0x0],bpl
   1400171aa:	data16 add BYTE PTR [rdi+0x0],ch
   1400171ae:	add    BYTE PTR [rax],al
   1400171b0:	retf   0x2
   1400171b3:	add    BYTE PTR [rcx],al
   1400171b5:	add    BYTE PTR [rax],dh
   1400171b7:	add    BYTE PTR [rax+rax*1],dh
   1400171ba:	xor    BYTE PTR [rax],al
   1400171bc:	cmp    DWORD PTR [rax],eax
   1400171be:	xor    BYTE PTR [rax],al
   1400171c0:	xor    al,0x0
   1400171c2:	rex.X add BYTE PTR [rax],sil
   1400171c5:	add    BYTE PTR [rax],al
   1400171c7:	add    BYTE PTR [rax+rax*1+0x16],cl
   1400171cb:	add    BYTE PTR [rcx],al
   1400171cd:	add    BYTE PTR [rbx+0x0],al
   1400171d0:	outs   dx,DWORD PTR ds:[rsi]
   1400171d1:	add    BYTE PTR [rbp+0x0],ch
   1400171d4:	jo     0x1400171d6
   1400171d6:	(bad)  
   1400171d7:	add    BYTE PTR [rsi+0x0],ch
   1400171da:	jns    0x1400171dc
   1400171dc:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   1400171e0:	ins    DWORD PTR es:[rdi],dx
   1400171e1:	add    BYTE PTR [rbp+0x0],ah
   1400171e4:	add    BYTE PTR [rax],al
   1400171e6:	add    BYTE PTR [rax],al
   1400171e8:	rex.WRB add BYTE PTR [r9+0x0],r13b
   1400171ec:	movsxd eax,DWORD PTR [rax]
   1400171ee:	jb     0x1400171f0
   1400171f0:	outs   dx,DWORD PTR ds:[rsi]
   1400171f1:	add    BYTE PTR [rbx+0x0],dh
   1400171f4:	outs   dx,DWORD PTR ds:[rsi]
   1400171f5:	add    BYTE PTR [rsi+0x0],ah
   1400171f8:	je     0x1400171fa
   1400171fa:	and    BYTE PTR [rax],al
   1400171fc:	rex.XB add BYTE PTR [r15+0x0],bpl
   140017200:	jb     0x140017202
   140017202:	jo     0x140017204
   140017204:	outs   dx,DWORD PTR ds:[rsi]
   140017205:	add    BYTE PTR [rdx+0x0],dh
   140017208:	(bad)  
   140017209:	add    BYTE PTR [rax+rax*1+0x69],dh
   14001720d:	add    BYTE PTR [rdi+0x0],ch
   140017210:	outs   dx,BYTE PTR ds:[rsi]
   140017211:	add    BYTE PTR [rax],al
   140017213:	add    BYTE PTR [rax+rax*1+0x16],dl
   140017217:	add    BYTE PTR [rcx],al
   140017219:	add    BYTE PTR [rsi+0x0],al
   14001721c:	imul   eax,DWORD PTR [rax],0x65006c
   140017222:	add    BYTE PTR [rbp+0x0],r12b
   140017226:	jae    0x140017228
   140017228:	movsxd eax,DWORD PTR [rax]
   14001722a:	jb     0x14001722c
   14001722c:	imul   eax,DWORD PTR [rax],0x740070
   140017232:	imul   eax,DWORD PTR [rax],0x6e006f
   140017238:	add    BYTE PTR [rax],al
   14001723a:	add    BYTE PTR [rax],al
   14001723c:	add    BYTE PTR [r13+0x0],sil
   140017240:	je     0x140017242
   140017242:	outs   dx,DWORD PTR ds:[rsi]
   140017243:	add    BYTE PTR [rbp+0x0],ch
   140017246:	(bad)  
   140017247:	add    BYTE PTR [rax+rax*1+0x69],dh
   14001724b:	add    BYTE PTR [rbx+0x0],ah
   14001724e:	and    BYTE PTR [rax],al
   140017250:	rex.WRB add BYTE PTR [r9+0x0],r12b
   140017254:	imul   eax,DWORD PTR [rax],0x74006e
   14001725a:	add    BYTE PTR gs:[rsi+0x0],ch
   14001725e:	(bad)  
   14001725f:	add    BYTE PTR [rsi+0x0],ch
   140017262:	movsxd eax,DWORD PTR [rax]
   140017264:	add    BYTE PTR gs:[rax],al
   140017267:	add    BYTE PTR [rsi+0x0],ah
   14001726a:	and    eax,DWORD PTR [rax]
   14001726c:	add    DWORD PTR [rax],eax
   14001726e:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140017272:	ins    BYTE PTR es:[rdi],dx
   140017273:	add    BYTE PTR [rbp+0x0],ah
   140017276:	push   rsi
   140017277:	add    BYTE PTR [rbp+0x0],ah
   14001727a:	jb     0x14001727c
   14001727c:	jae    0x14001727e
   14001727e:	imul   eax,DWORD PTR [rax],0x6e006f
   140017284:	add    BYTE PTR [rax],al
   140017286:	add    BYTE PTR [rax],al
   140017288:	xor    DWORD PTR [rax],eax
   14001728a:	xor    BYTE PTR [rax],al
   14001728c:	add    BYTE PTR cs:[rax],dh
   14001728f:	add    BYTE PTR [rsi],ch
   140017291:	add    BYTE PTR [rcx],dh
   140017293:	add    BYTE PTR [rax],dh
   140017295:	add    BYTE PTR [rdx],dh
   140017297:	add    BYTE PTR [rax+rax*1],dh
   14001729a:	xor    BYTE PTR [rax],al
   14001729c:	add    BYTE PTR cs:[rcx],dh
   14001729f:	add    BYTE PTR [rsi],dh
   1400172a1:	add    BYTE PTR [rbx],dh
   1400172a3:	add    BYTE PTR [rax],bh
   1400172a5:	add    BYTE PTR [rax+rax*1],dh
   1400172a8:	and    BYTE PTR [rax],al
   1400172aa:	sub    BYTE PTR [rax],al
   1400172ac:	je     0x1400172ae
   1400172ae:	push   0x2e003100
   1400172b3:	add    BYTE PTR [rcx],dh
   1400172b5:	add    BYTE PTR [rip+0x37003000],dh        # 0x17701a2bb
   1400172bb:	add    BYTE PTR [rax],dh
   1400172bd:	add    BYTE PTR [rcx],bh
   1400172bf:	add    BYTE PTR [rip+0x37003100],ch        # 0x17701a3c5
   1400172c5:	add    BYTE PTR [rax],dh
   1400172c7:	add    BYTE PTR [rax],dh
   1400172c9:	add    BYTE PTR [rcx],ch
   1400172cb:	add    BYTE PTR [rax],al
   1400172cd:	add    BYTE PTR [rax],al
   1400172cf:	add    BYTE PTR [rax+rax*1],dh
   1400172d2:	or     al,BYTE PTR [rax]
   1400172d4:	add    DWORD PTR [rax],eax
   1400172d6:	rex.WB add BYTE PTR [r14+0x0],bpl
   1400172da:	je     0x1400172dc
   1400172dc:	add    BYTE PTR gs:[rdx+0x0],dh
   1400172e0:	outs   dx,BYTE PTR ds:[rsi]
   1400172e1:	add    BYTE PTR [rcx+0x0],ah
   1400172e4:	ins    BYTE PTR es:[rdi],dx
   1400172e5:	add    BYTE PTR [rsi+0x0],cl
   1400172e8:	(bad)  
   1400172e9:	add    BYTE PTR [rbp+0x0],ch
   1400172ec:	add    BYTE PTR gs:[rax],al
   1400172ef:	add    BYTE PTR [rbp+0x0],cl
   1400172f2:	push   rbx
   1400172f3:	add    BYTE PTR [rbx+0x0],ah
   1400172f6:	push   0x64006500
   1400172fb:	add    BYTE PTR [rbp+0x0],al
   1400172fe:	js     0x140017300
   140017300:	add    BYTE PTR gs:[rax],al
   140017303:	add    BYTE PTR [rax+0x1002e00],al
   140017309:	add    BYTE PTR [rax+rax*1+0x65],cl
   14001730d:	add    BYTE PTR [rdi+0x0],ah
   140017310:	(bad)  
   140017311:	add    BYTE PTR [rax+rax*1+0x43],ch
   140017315:	add    BYTE PTR [rdi+0x0],ch
   140017318:	jo     0x14001731a
   14001731a:	jns    0x14001731c
   14001731c:	jb     0x14001731e
   14001731e:	imul   eax,DWORD PTR [rax],0x680067
   140017324:	je     0x140017326
   140017326:	add    BYTE PTR [rax],al
   140017328:	test   eax,0x4d002000
   14001732d:	add    BYTE PTR [rcx+0x0],ch
   140017330:	movsxd eax,DWORD PTR [rax]
   140017332:	jb     0x140017334
   140017334:	outs   dx,DWORD PTR ds:[rsi]
   140017335:	add    BYTE PTR [rbx+0x0],dh
   140017338:	outs   dx,DWORD PTR ds:[rsi]
   140017339:	add    BYTE PTR [rsi+0x0],ah
   14001733c:	je     0x14001733e
   14001733e:	and    BYTE PTR [rax],al
   140017340:	rex.XB add BYTE PTR [r15+0x0],bpl
   140017344:	jb     0x140017346
   140017346:	jo     0x140017348
   140017348:	outs   dx,DWORD PTR ds:[rsi]
   140017349:	add    BYTE PTR [rdx+0x0],dh
   14001734c:	(bad)  
   14001734d:	add    BYTE PTR [rax+rax*1+0x69],dh
   140017351:	add    BYTE PTR [rdi+0x0],ch
   140017354:	outs   dx,BYTE PTR ds:[rsi]
   140017355:	add    BYTE PTR [rsi],ch
   140017357:	add    BYTE PTR [rax],ah
   140017359:	add    BYTE PTR [rcx+0x0],al
   14001735c:	ins    BYTE PTR es:[rdi],dx
   14001735d:	add    BYTE PTR [rax+rax*1+0x20],ch
   140017361:	add    BYTE PTR [rdx+0x0],dh
   140017364:	imul   eax,DWORD PTR [rax],0x680067
   14001736a:	je     0x14001736c
   14001736c:	jae    0x14001736e
   14001736e:	and    BYTE PTR [rax],al
   140017370:	jb     0x140017372
   140017372:	add    BYTE PTR gs:[rbx+0x0],dh
   140017376:	add    BYTE PTR gs:[rdx+0x0],dh
   14001737a:	jbe    0x14001737c
   14001737c:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   140017381:	add    BYTE PTR [rax],al
   140017383:	add    BYTE PTR [rax+rax*1+0xe],al
   140017387:	add    BYTE PTR [rcx],al
   140017389:	add    BYTE PTR [rdi+0x0],cl
   14001738c:	jb     0x14001738e
   14001738e:	imul   eax,DWORD PTR [rax],0x690067
   140017394:	outs   dx,BYTE PTR ds:[rsi]
   140017395:	add    BYTE PTR [rcx+0x0],ah
   140017398:	ins    BYTE PTR es:[rdi],dx
   140017399:	add    BYTE PTR [rsi+0x0],al
   14001739c:	imul   eax,DWORD PTR [rax],0x65006c
   1400173a2:	outs   dx,BYTE PTR ds:[rsi]
   1400173a3:	add    BYTE PTR [rcx+0x0],ah
   1400173a6:	ins    DWORD PTR es:[rdi],dx
   1400173a7:	add    BYTE PTR [rbp+0x0],ah
   1400173aa:	add    BYTE PTR [rax],al
   1400173ac:	rex.WRB add BYTE PTR [r11+0x0],r10b
   1400173b0:	movsxd eax,DWORD PTR [rax]
   1400173b2:	push   0x64006500
   1400173b7:	add    BYTE PTR [rbp+0x0],al
   1400173ba:	js     0x1400173bc
   1400173bc:	add    BYTE PTR gs:[rsi],ch
   1400173bf:	add    BYTE PTR [rbp+0x0],al
   1400173c2:	pop    rax
   1400173c3:	add    BYTE PTR [rbp+0x0],al
   1400173c6:	add    BYTE PTR [rax],al
   1400173c8:	push   0x0
   1400173ca:	and    eax,0x50000100
   1400173cf:	add    BYTE PTR [rdx+0x0],dh
   1400173d2:	outs   dx,DWORD PTR ds:[rsi]
   1400173d3:	add    BYTE PTR [rax+rax*1+0x75],ah
   1400173d7:	add    BYTE PTR [rbx+0x0],ah
   1400173da:	je     0x1400173dc
   1400173dc:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   1400173e0:	ins    DWORD PTR es:[rdi],dx
   1400173e1:	add    BYTE PTR [rbp+0x0],ah
   1400173e4:	add    BYTE PTR [rax],al
   1400173e6:	add    BYTE PTR [rax],al
   1400173e8:	rex.WRB add BYTE PTR [r9+0x0],r13b
   1400173ec:	movsxd eax,DWORD PTR [rax]
   1400173ee:	jb     0x1400173f0
   1400173f0:	outs   dx,DWORD PTR ds:[rsi]
   1400173f1:	add    BYTE PTR [rbx+0x0],dh
   1400173f4:	outs   dx,DWORD PTR ds:[rsi]
   1400173f5:	add    BYTE PTR [rsi+0x0],ah
   1400173f8:	je     0x1400173fa
   1400173fa:	scas   al,BYTE PTR es:[rdi]
   1400173fb:	add    BYTE PTR [rax],ah
   1400173fd:	add    BYTE PTR [rdi+0x0],dl
   140017400:	imul   eax,DWORD PTR [rax],0x64006e
   140017406:	outs   dx,DWORD PTR ds:[rsi]
   140017407:	add    BYTE PTR [rdi+0x0],dh
   14001740a:	jae    0x14001740c
   14001740c:	scas   al,BYTE PTR es:[rdi]
   14001740d:	add    BYTE PTR [rax],ah
   14001740f:	add    BYTE PTR [rdi+0x0],cl
   140017412:	jo     0x140017414
   140017414:	add    BYTE PTR gs:[rdx+0x0],dh
   140017418:	(bad)  
   140017419:	add    BYTE PTR [rax+rax*1+0x69],dh
   14001741d:	add    BYTE PTR [rsi+0x0],ch
   140017420:	add    BYTE PTR [eax],ah
   140017423:	add    BYTE PTR [rbx+0x0],dl
   140017426:	jns    0x140017428
   140017428:	jae    0x14001742a
   14001742a:	je     0x14001742c
   14001742c:	add    BYTE PTR gs:[rbp+0x0],ch
   140017430:	add    BYTE PTR [rax],al
   140017432:	add    BYTE PTR [rax],al
   140017434:	rex.RX add BYTE PTR [rcx],r10b
   140017437:	add    BYTE PTR [rcx],al
   140017439:	add    BYTE PTR [rax+0x0],dl
   14001743c:	jb     0x14001743e
   14001743e:	outs   dx,DWORD PTR ds:[rsi]
   14001743f:	add    BYTE PTR [rax+rax*1+0x75],ah
   140017443:	add    BYTE PTR [rbx+0x0],ah
   140017446:	je     0x140017448
   140017448:	push   rsi
   140017449:	add    BYTE PTR [rbp+0x0],ah
   14001744c:	jb     0x14001744e
   14001744e:	jae    0x140017450
   140017450:	imul   eax,DWORD PTR [rax],0x6e006f
   140017456:	add    BYTE PTR [rax],al
   140017458:	xor    DWORD PTR [rax],eax
   14001745a:	xor    BYTE PTR [rax],al
   14001745c:	add    BYTE PTR cs:[rax],dh
   14001745f:	add    BYTE PTR [rsi],ch
   140017461:	add    BYTE PTR [rcx],dh
   140017463:	add    BYTE PTR [rax],dh
   140017465:	add    BYTE PTR [rdx],dh
   140017467:	add    BYTE PTR [rax+rax*1],dh
   14001746a:	xor    BYTE PTR [rax],al
   14001746c:	add    BYTE PTR cs:[rcx],dh
   14001746f:	add    BYTE PTR [rsi],dh
   140017471:	add    BYTE PTR [rbx],dh
   140017473:	add    BYTE PTR [rax],bh
   140017475:	add    BYTE PTR [rax+rax*1],dh
   140017478:	add    BYTE PTR [rax],al
   14001747a:	add    BYTE PTR [rax],al
   14001747c:	add    BYTE PTR [rax],r8b
   14001747f:	add    BYTE PTR [rcx],al
   140017481:	add    BYTE PTR [rsi+0x0],dl
   140017484:	(bad)  
   140017485:	add    BYTE PTR [rdx+0x0],dh
   140017488:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14001748c:	ins    BYTE PTR es:[rdi],dx
   14001748d:	add    BYTE PTR [rbp+0x0],ah
   140017490:	rex.WB add BYTE PTR [r14+0x0],bpl
   140017494:	data16 add BYTE PTR [rdi+0x0],ch
   140017498:	add    BYTE PTR [rax],al
   14001749a:	add    BYTE PTR [rax],al
   14001749c:	and    al,0x0
   14001749e:	add    al,0x0
   1400174a0:	add    BYTE PTR [rax],al
   1400174a2:	push   rsp
   1400174a3:	add    BYTE PTR [rdx+0x0],dh
   1400174a6:	(bad)  
   1400174a7:	add    BYTE PTR [rsi+0x0],ch
   1400174aa:	jae    0x1400174ac
   1400174ac:	ins    BYTE PTR es:[rdi],dx
   1400174ad:	add    BYTE PTR [rcx+0x0],ah
   1400174b0:	je     0x1400174b2
   1400174b2:	imul   eax,DWORD PTR [rax],0x6e006f
   1400174b8:	add    BYTE PTR [rax],al
   1400174ba:	add    BYTE PTR [rax],al
   1400174bc:	or     DWORD PTR [rax+rsi*4],eax
   1400174bf:	add    al,0xcd
   1400174c1:	dec    ch
   1400174c3:	(bad)  
   1400174c4:	rol    BYTE PTR [rax],1
   1400174c6:	add    BYTE PTR [rax],al
   1400174c8:	add    BYTE PTR [rax],al
   1400174ca:	add    DWORD PTR [rax],eax
   1400174cc:	add    BYTE PTR [rax],al
   1400174ce:	add    BYTE PTR [rax],al
   1400174d0:	adc    DWORD PTR [rax],eax
   1400174d2:	add    BYTE PTR [rax],al
   1400174d4:	add    BYTE PTR [rax],al
   1400174d6:	add    BYTE PTR [rax],al
   1400174d8:	add    al,BYTE PTR [rax]
   1400174da:	add    BYTE PTR [rax],al
   1400174dc:	sbb    eax,0xf84239b6
   1400174e1:	(bad)  
   1400174e3:	retf   
   1400174e4:	cmp    eax,0x78b6d4cd
   1400174e9:	retf   
   1400174ea:	(bad)  
   1400174eb:	(bad)  
   1400174ec:	fst    DWORD PTR [rbp+0x3c]
   1400174ef:	rex
   1400174f0:	rex.WX mov al,0x23
   1400174f3:	ja     0x14001754c
   1400174f5:	xor    esi,edi
   1400174f7:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400174f8:	adc    DWORD PTR [rcx+rcx*1+0x92],eax
	...
   140017513:	add    BYTE PTR [rax+0xe000000],cl
   140017519:	add    BYTE PTR [rax],al
   14001751b:	add    BYTE PTR [rax+0x10000000],bl
   140017521:	add    BYTE PTR [rax],al
   140017523:	add    BYTE PTR [rax+0xe000000],ch
   140017529:	add    BYTE PTR [rax],al
   14001752b:	add    BYTE PTR [rax+0x8000000],bh
	...
   140017539:	add    BYTE PTR [rax],al
   14001753b:	add    al,al
   14001753d:	add    BYTE PTR [rax],al
   14001753f:	add    BYTE PTR [rax+rax*1],cl
   140017542:	add    BYTE PTR [rax],al
   140017544:	add    BYTE PTR [rax],al
   140017546:	add    BYTE PTR [rax],al
   140017548:	rex.WRB add BYTE PTR [r13+0x0],r10b
   14001754c:	rex.WB add BYTE PTR [r8],al
	...
   140017557:	add    BYTE PTR [rbx],al
   140017559:	add    BYTE PTR [rax],al
   14001755b:	add    BYTE PTR [rsi],cl
   14001755d:	add    BYTE PTR [rax],al
   14001755f:	add    BYTE PTR [rax],dl
   140017561:	add    BYTE PTR [rax],al
   140017563:	add    BYTE PTR [rax],bl
   140017565:	add    BYTE PTR [rax],al
   140017567:	add    BYTE PTR [rbp+0x0],cl
   14001756a:	push   rbp
   14001756b:	add    BYTE PTR [rcx+0x0],cl
	...
   140017576:	add    BYTE PTR [rax],al
   140017578:	(bad)  
   140017579:	add    BYTE PTR [rax],al
   14001757b:	add    BYTE PTR [rax],dl
   14001757d:	add    BYTE PTR [rax],al
   14001757f:	add    BYTE PTR [rbp+0x0],ah
   140017582:	outs   dx,BYTE PTR ds:[rsi]
   140017583:	add    BYTE PTR [rip+0x53005500],ch        # 0x19301ca89
   140017589:	add    BYTE PTR [rax],al
   14001758b:	add    BYTE PTR [rax],al
   14001758d:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

0000000140018000 <.reloc>:
   140018000:	add    BYTE PTR [rax],ah
   140018002:	add    BYTE PTR [rax],al
   140018004:	and    BYTE PTR [rax],al
   140018006:	add    BYTE PTR [rax],al
   140018008:	and    BYTE PTR [rcx-0x5ec75ed8],ah
   14001800e:	push   rax
   14001800f:	movabs eax,ds:0xa278a198a190a158
   140018018:	nop
   140018019:	.byte 0xa2
   14001801a:	cwde   
   14001801b:	.byte 0xa2
   14001801c:	.byte 0xa0
   14001801d:	.byte 0xa2
	...
