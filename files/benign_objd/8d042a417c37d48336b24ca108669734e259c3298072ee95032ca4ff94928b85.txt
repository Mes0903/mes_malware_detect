
8d042a417c37d48336b24ca108669734e259c3298072ee95032ca4ff94928b85.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	cmp    rdx,r8
   140001003:	je     0x14000108e
   140001009:	mov    QWORD PTR [rsp+0x18],rbp
   14000100e:	mov    QWORD PTR [rsp+0x20],rdi
   140001013:	push   r12
   140001015:	sub    rsp,0x20
   140001019:	mov    QWORD PTR [rsp+0x30],rbx
   14000101e:	mov    rbp,r9
   140001021:	mov    r12,r8
   140001024:	mov    QWORD PTR [rsp+0x38],rsi
   140001029:	mov    rdi,rdx
   14000102c:	nop    DWORD PTR [rax+0x0]
   140001030:	mov    ecx,0x10
   140001035:	call   0x14002952a
   14000103a:	mov    rsi,rax
   14000103d:	test   rax,rax
   140001040:	je     0x140001062
   140001042:	mov    rbx,QWORD PTR [rbp+0x0]
   140001046:	mov    rcx,rax
   140001049:	mov    rdx,rbx
   14000104c:	call   QWORD PTR [rip+0x2a84e]        # 0x14002b8a0
   140001052:	lea    rdx,[rbx+0x8]
   140001056:	lea    rcx,[rsi+0x8]
   14000105a:	call   QWORD PTR [rip+0x2a840]        # 0x14002b8a0
   140001060:	jmp    0x140001064
   140001062:	xor    esi,esi
   140001064:	mov    QWORD PTR [rdi],rsi
   140001067:	add    rdi,0x8
   14000106b:	add    rbp,0x8
   14000106f:	cmp    rdi,r12
   140001072:	jne    0x140001030
   140001074:	mov    rsi,QWORD PTR [rsp+0x38]
   140001079:	mov    rbx,QWORD PTR [rsp+0x30]
   14000107e:	mov    rbp,QWORD PTR [rsp+0x40]
   140001083:	mov    rdi,QWORD PTR [rsp+0x48]
   140001088:	add    rsp,0x20
   14000108c:	pop    r12
   14000108e:	repz ret 
   140001090:	mov    rax,rsp
   140001093:	mov    QWORD PTR [rax+0x8],rcx
   140001097:	push   r12
   140001099:	push   r13
   14000109b:	push   r14
   14000109d:	sub    rsp,0x50
   1400010a1:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   1400010aa:	mov    QWORD PTR [rax+0x10],rbx
   1400010ae:	mov    QWORD PTR [rax+0x18],rsi
   1400010b2:	mov    QWORD PTR [rax+0x20],rdi
   1400010b6:	mov    r14,rdx
   1400010b9:	mov    rsi,rcx
   1400010bc:	xor    ebx,ebx
   1400010be:	mov    DWORD PTR [rax-0x48],ebx
   1400010c1:	xor    eax,eax
   1400010c3:	or     rcx,0xffffffffffffffff
   1400010c7:	mov    rdi,rdx
   1400010ca:	repnz scas al,BYTE PTR es:[rdi]
   1400010cc:	not    rcx
   1400010cf:	lea    r13,[rcx-0x1]
   1400010d3:	mov    rax,QWORD PTR [rsi]
   1400010d6:	movsxd rcx,DWORD PTR [rax+0x4]
   1400010da:	mov    rdi,QWORD PTR [rcx+rsi*1+0x28]
   1400010df:	test   rdi,rdi
   1400010e2:	jle    0x1400010ee
   1400010e4:	cmp    rdi,r13
   1400010e7:	jle    0x1400010ee
   1400010e9:	sub    rdi,r13
   1400010ec:	jmp    0x1400010f0
   1400010ee:	xor    edi,edi
   1400010f0:	mov    r12,rsi
   1400010f3:	mov    QWORD PTR [rsp+0x38],rsi
   1400010f8:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   1400010fd:	test   rcx,rcx
   140001100:	je     0x14000110c
   140001102:	add    rcx,0x8
   140001106:	call   QWORD PTR [rip+0x29f8c]        # 0x14002b098
   14000110c:	mov    rax,QWORD PTR [rsi]
   14000110f:	movsxd rcx,DWORD PTR [rax+0x4]
   140001113:	cmp    DWORD PTR [rcx+rsi*1+0x10],ebx
   140001117:	jne    0x140001129
   140001119:	mov    rcx,QWORD PTR [rcx+rsi*1+0x50]
   14000111e:	test   rcx,rcx
   140001121:	je     0x140001129
   140001123:	call   QWORD PTR [rip+0x29f1f]        # 0x14002b048
   140001129:	mov    rax,QWORD PTR [rsi]
   14000112c:	movsxd rcx,DWORD PTR [rax+0x4]
   140001130:	cmp    DWORD PTR [rcx+rsi*1+0x10],ebx
   140001134:	sete   al
   140001137:	test   al,al
   140001139:	jne    0x140001145
   14000113b:	mov    ebx,0x4
   140001140:	jmp    0x140001214
   140001145:	mov    rax,QWORD PTR [rsi]
   140001148:	movsxd rcx,DWORD PTR [rax+0x4]
   14000114c:	mov    eax,DWORD PTR [rcx+rsi*1+0x18]
   140001150:	and    eax,0x1c0
   140001155:	cmp    eax,0x40
   140001158:	je     0x140001198
   14000115a:	nop    WORD PTR [rax+rax*1+0x0]
   140001160:	test   rdi,rdi
   140001163:	jle    0x140001194
   140001165:	mov    rax,QWORD PTR [rsi]
   140001168:	movsxd rcx,DWORD PTR [rax+0x4]
   14000116c:	movzx  edx,BYTE PTR [rcx+rsi*1+0x58]
   140001171:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   140001176:	call   QWORD PTR [rip+0x29ef4]        # 0x14002b070
   14000117c:	cmp    eax,0xffffffff
   14000117f:	jne    0x14000118a
   140001181:	or     ebx,0x4
   140001184:	mov    DWORD PTR [rsp+0x20],ebx
   140001188:	jmp    0x140001194
   14000118a:	dec    rdi
   14000118d:	mov    QWORD PTR [rsp+0x28],rdi
   140001192:	jmp    0x140001160
   140001194:	test   ebx,ebx
   140001196:	jne    0x1400011f4
   140001198:	mov    rax,QWORD PTR [rsi]
   14000119b:	movsxd rcx,DWORD PTR [rax+0x4]
   14000119f:	mov    r8,r13
   1400011a2:	mov    rdx,r14
   1400011a5:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   1400011aa:	call   QWORD PTR [rip+0x29eb8]        # 0x14002b068
   1400011b0:	cmp    rax,r13
   1400011b3:	je     0x1400011c0
   1400011b5:	mov    ebx,0x4
   1400011ba:	mov    DWORD PTR [rsp+0x20],ebx
   1400011be:	jmp    0x1400011f4
   1400011c0:	test   rdi,rdi
   1400011c3:	jle    0x1400011f4
   1400011c5:	mov    rax,QWORD PTR [rsi]
   1400011c8:	movsxd rcx,DWORD PTR [rax+0x4]
   1400011cc:	movzx  edx,BYTE PTR [rcx+rsi*1+0x58]
   1400011d1:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   1400011d6:	call   QWORD PTR [rip+0x29e94]        # 0x14002b070
   1400011dc:	cmp    eax,0xffffffff
   1400011df:	jne    0x1400011ea
   1400011e1:	or     ebx,0x4
   1400011e4:	mov    DWORD PTR [rsp+0x20],ebx
   1400011e8:	jmp    0x1400011f4
   1400011ea:	dec    rdi
   1400011ed:	mov    QWORD PTR [rsp+0x28],rdi
   1400011f2:	jmp    0x1400011c0
   1400011f4:	mov    rax,QWORD PTR [rsi]
   1400011f7:	movsxd rcx,DWORD PTR [rax+0x4]
   1400011fb:	mov    QWORD PTR [rcx+rsi*1+0x28],0x0
   140001204:	jmp    0x140001214
   140001206:	mov    rsi,QWORD PTR [rsp+0x70]
   14000120b:	mov    ebx,DWORD PTR [rsp+0x20]
   14000120f:	mov    r12,QWORD PTR [rsp+0x38]
   140001214:	mov    rax,QWORD PTR [rsi]
   140001217:	movsxd rcx,DWORD PTR [rax+0x4]
   14000121b:	add    rcx,rsi
   14000121e:	xor    r8d,r8d
   140001221:	mov    edx,ebx
   140001223:	call   QWORD PTR [rip+0x29e37]        # 0x14002b060
   140001229:	call   QWORD PTR [rip+0x29e29]        # 0x14002b058
   14000122f:	test   al,al
   140001231:	jne    0x14000123c
   140001233:	mov    rcx,r12
   140001236:	call   QWORD PTR [rip+0x29e14]        # 0x14002b050
   14000123c:	mov    rax,QWORD PTR [r12]
   140001240:	movsxd rcx,DWORD PTR [rax+0x4]
   140001244:	mov    rcx,QWORD PTR [rcx+r12*1+0x48]
   140001249:	test   rcx,rcx
   14000124c:	je     0x14000125d
   14000124e:	add    rcx,0x8
   140001252:	call   QWORD PTR [rip+0x29de8]        # 0x14002b040
   140001258:	mov    rax,rsi
   14000125b:	jmp    0x140001260
   14000125d:	mov    rax,rsi
   140001260:	lea    r11,[rsp+0x50]
   140001265:	mov    rbx,QWORD PTR [r11+0x28]
   140001269:	mov    rsi,QWORD PTR [r11+0x30]
   14000126d:	mov    rdi,QWORD PTR [r11+0x38]
   140001271:	mov    rsp,r11
   140001274:	pop    r14
   140001276:	pop    r13
   140001278:	pop    r12
   14000127a:	ret    
   14000127b:	int3   
   14000127c:	int3   
   14000127d:	int3   
   14000127e:	int3   
   14000127f:	int3   
   140001280:	ret    0x0
   140001283:	int3   
   140001284:	int3   
   140001285:	int3   
   140001286:	int3   
   140001287:	int3   
   140001288:	int3   
   140001289:	int3   
   14000128a:	int3   
   14000128b:	int3   
   14000128c:	int3   
   14000128d:	int3   
   14000128e:	int3   
   14000128f:	int3   
   140001290:	mov    QWORD PTR [rsp+0x10],rbx
   140001295:	mov    QWORD PTR [rsp+0x18],rbp
   14000129a:	push   rsi
   14000129b:	sub    rsp,0x20
   14000129f:	movsxd rax,DWORD PTR [rdx+0xc]
   1400012a3:	mov    rbp,rdx
   1400012a6:	lea    rbx,[rdx+rax*8+0x10]
   1400012ab:	movsxd rax,DWORD PTR [rdx+0x8]
   1400012af:	lea    rsi,[rdx+rax*8+0x10]
   1400012b4:	cmp    rsi,rbx
   1400012b7:	je     0x1400012f2
   1400012b9:	mov    QWORD PTR [rsp+0x30],rdi
   1400012be:	xchg   ax,ax
   1400012c0:	mov    rdi,QWORD PTR [rbx-0x8]
   1400012c4:	sub    rbx,0x8
   1400012c8:	test   rdi,rdi
   1400012cb:	je     0x1400012e8
   1400012cd:	lea    rcx,[rdi+0x8]
   1400012d1:	call   QWORD PTR [rip+0x2a5c1]        # 0x14002b898
   1400012d7:	mov    rcx,rdi
   1400012da:	call   QWORD PTR [rip+0x2a5b8]        # 0x14002b898
   1400012e0:	mov    rcx,rdi
   1400012e3:	call   0x140029524
   1400012e8:	cmp    rbx,rsi
   1400012eb:	jne    0x1400012c0
   1400012ed:	mov    rdi,QWORD PTR [rsp+0x30]
   1400012f2:	mov    rcx,rbp
   1400012f5:	mov    rbx,QWORD PTR [rsp+0x38]
   1400012fa:	mov    rbp,QWORD PTR [rsp+0x40]
   1400012ff:	add    rsp,0x20
   140001303:	pop    rsi
   140001304:	rex.W jmp QWORD PTR [rip+0x2a565]        # 0x14002b870
   14000130b:	int3   
   14000130c:	int3   
   14000130d:	int3   
   14000130e:	int3   
   14000130f:	int3   
   140001310:	test   rdx,rdx
   140001313:	je     0x140001358
   140001315:	mov    QWORD PTR [rsp+0x8],rbx
   14000131a:	push   rdi
   14000131b:	sub    rsp,0x20
   14000131f:	mov    eax,DWORD PTR [rcx+0x8]
   140001322:	mov    rbx,rdx
   140001325:	mov    QWORD PTR [rdx],0x0
   14000132c:	mov    DWORD PTR [rdx+0x8],eax
   14000132f:	lea    rdx,[rcx+0x10]
   140001333:	mov    rdi,rcx
   140001336:	lea    rcx,[rbx+0x10]
   14000133a:	call   QWORD PTR [rip+0x2a560]        # 0x14002b8a0
   140001340:	lea    rdx,[rdi+0x18]
   140001344:	lea    rcx,[rbx+0x18]
   140001348:	call   QWORD PTR [rip+0x2a552]        # 0x14002b8a0
   14000134e:	mov    rbx,QWORD PTR [rsp+0x30]
   140001353:	add    rsp,0x20
   140001357:	pop    rdi
   140001358:	repz ret 
   14000135a:	int3   
   14000135b:	int3   
   14000135c:	int3   
   14000135d:	int3   
   14000135e:	int3   
   14000135f:	int3   
   140001360:	cmp    rdx,r8
   140001363:	je     0x14000140a
   140001369:	mov    QWORD PTR [rsp+0x18],rbp
   14000136e:	mov    QWORD PTR [rsp+0x20],rsi
   140001373:	push   r12
   140001375:	sub    rsp,0x20
   140001379:	mov    QWORD PTR [rsp+0x30],rbx
   14000137e:	mov    rbp,r9
   140001381:	mov    r12,r8
   140001384:	mov    QWORD PTR [rsp+0x38],rdi
   140001389:	mov    rsi,rdx
   14000138c:	nop    DWORD PTR [rax+0x0]
   140001390:	mov    ecx,0x28
   140001395:	call   0x14002952a
   14000139a:	mov    rdi,rax
   14000139d:	test   rax,rax
   1400013a0:	je     0x1400013de
   1400013a2:	mov    rbx,QWORD PTR [rbp+0x0]
   1400013a6:	mov    rcx,rax
   1400013a9:	mov    rdx,rbx
   1400013ac:	call   QWORD PTR [rip+0x2a4ee]        # 0x14002b8a0
   1400013b2:	lea    rdx,[rbx+0x8]
   1400013b6:	lea    rcx,[rdi+0x8]
   1400013ba:	call   QWORD PTR [rip+0x2a4e0]        # 0x14002b8a0
   1400013c0:	mov    r11,QWORD PTR [rbx+0x10]
   1400013c4:	mov    QWORD PTR [rdi+0x10],r11
   1400013c8:	mov    rcx,QWORD PTR [rbx+0x18]
   1400013cc:	mov    QWORD PTR [rdi+0x18],rcx
   1400013d0:	mov    eax,DWORD PTR [rbx+0x20]
   1400013d3:	mov    DWORD PTR [rdi+0x20],eax
   1400013d6:	mov    eax,DWORD PTR [rbx+0x24]
   1400013d9:	mov    DWORD PTR [rdi+0x24],eax
   1400013dc:	jmp    0x1400013e0
   1400013de:	xor    edi,edi
   1400013e0:	mov    QWORD PTR [rsi],rdi
   1400013e3:	add    rsi,0x8
   1400013e7:	add    rbp,0x8
   1400013eb:	cmp    rsi,r12
   1400013ee:	jne    0x140001390
   1400013f0:	mov    rdi,QWORD PTR [rsp+0x38]
   1400013f5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400013fa:	mov    rbp,QWORD PTR [rsp+0x40]
   1400013ff:	mov    rsi,QWORD PTR [rsp+0x48]
   140001404:	add    rsp,0x20
   140001408:	pop    r12
   14000140a:	repz ret 
   14000140c:	int3   
   14000140d:	int3   
   14000140e:	int3   
   14000140f:	int3   
   140001410:	rex push rbx
   140001412:	sub    rsp,0x20
   140001416:	mov    rbx,rcx
   140001419:	add    rcx,0x18
   14000141d:	call   QWORD PTR [rip+0x2a475]        # 0x14002b898
   140001423:	lea    rcx,[rbx+0x10]
   140001427:	add    rsp,0x20
   14000142b:	pop    rbx
   14000142c:	rex.W jmp QWORD PTR [rip+0x2a465]        # 0x14002b898
   140001433:	int3   
   140001434:	int3   
   140001435:	int3   
   140001436:	int3   
   140001437:	int3   
   140001438:	int3   
   140001439:	int3   
   14000143a:	int3   
   14000143b:	int3   
   14000143c:	int3   
   14000143d:	int3   
   14000143e:	int3   
   14000143f:	int3   
   140001440:	mov    QWORD PTR [rsp+0x10],rbx
   140001445:	mov    QWORD PTR [rsp+0x18],rbp
   14000144a:	push   rsi
   14000144b:	sub    rsp,0x20
   14000144f:	movsxd rax,DWORD PTR [rdx+0xc]
   140001453:	mov    rbp,rdx
   140001456:	lea    rbx,[rdx+rax*8+0x10]
   14000145b:	movsxd rax,DWORD PTR [rdx+0x8]
   14000145f:	lea    rsi,[rdx+rax*8+0x10]
   140001464:	cmp    rsi,rbx
   140001467:	je     0x140001498
   140001469:	mov    QWORD PTR [rsp+0x30],rdi
   14000146e:	xchg   ax,ax
   140001470:	mov    rdi,QWORD PTR [rbx-0x8]
   140001474:	sub    rbx,0x8
   140001478:	test   rdi,rdi
   14000147b:	je     0x14000148e
   14000147d:	mov    rcx,rdi
   140001480:	call   QWORD PTR [rip+0x2a412]        # 0x14002b898
   140001486:	mov    rcx,rdi
   140001489:	call   0x140029524
   14000148e:	cmp    rbx,rsi
   140001491:	jne    0x140001470
   140001493:	mov    rdi,QWORD PTR [rsp+0x30]
   140001498:	mov    rcx,rbp
   14000149b:	mov    rbx,QWORD PTR [rsp+0x38]
   1400014a0:	mov    rbp,QWORD PTR [rsp+0x40]
   1400014a5:	add    rsp,0x20
   1400014a9:	pop    rsi
   1400014aa:	rex.W jmp QWORD PTR [rip+0x2a3bf]        # 0x14002b870
   1400014b1:	int3   
   1400014b2:	int3   
   1400014b3:	int3   
   1400014b4:	int3   
   1400014b5:	int3   
   1400014b6:	int3   
   1400014b7:	int3   
   1400014b8:	int3   
   1400014b9:	int3   
   1400014ba:	int3   
   1400014bb:	int3   
   1400014bc:	int3   
   1400014bd:	int3   
   1400014be:	int3   
   1400014bf:	int3   
   1400014c0:	cmp    rdx,r8
   1400014c3:	je     0x140001548
   1400014c9:	mov    QWORD PTR [rsp+0x18],rbp
   1400014ce:	mov    QWORD PTR [rsp+0x20],rdi
   1400014d3:	push   r12
   1400014d5:	sub    rsp,0x20
   1400014d9:	mov    QWORD PTR [rsp+0x30],rbx
   1400014de:	mov    rbp,r9
   1400014e1:	mov    r12,r8
   1400014e4:	mov    QWORD PTR [rsp+0x38],rsi
   1400014e9:	mov    rdi,rdx
   1400014ec:	nop    DWORD PTR [rax+0x0]
   1400014f0:	mov    ecx,0x10
   1400014f5:	call   0x14002952a
   1400014fa:	mov    rsi,rax
   1400014fd:	test   rax,rax
   140001500:	je     0x14000151c
   140001502:	mov    rbx,QWORD PTR [rbp+0x0]
   140001506:	mov    rcx,rax
   140001509:	mov    rdx,rbx
   14000150c:	call   QWORD PTR [rip+0x2a38e]        # 0x14002b8a0
   140001512:	mov    r11d,DWORD PTR [rbx+0x8]
   140001516:	mov    DWORD PTR [rsi+0x8],r11d
   14000151a:	jmp    0x14000151e
   14000151c:	xor    esi,esi
   14000151e:	mov    QWORD PTR [rdi],rsi
   140001521:	add    rdi,0x8
   140001525:	add    rbp,0x8
   140001529:	cmp    rdi,r12
   14000152c:	jne    0x1400014f0
   14000152e:	mov    rsi,QWORD PTR [rsp+0x38]
   140001533:	mov    rbx,QWORD PTR [rsp+0x30]
   140001538:	mov    rbp,QWORD PTR [rsp+0x40]
   14000153d:	mov    rdi,QWORD PTR [rsp+0x48]
   140001542:	add    rsp,0x20
   140001546:	pop    r12
   140001548:	repz ret 
   14000154a:	int3   
   14000154b:	int3   
   14000154c:	int3   
   14000154d:	int3   
   14000154e:	int3   
   14000154f:	int3   
   140001550:	add    rcx,0x10
   140001554:	rex.W jmp QWORD PTR [rip+0x2a33d]        # 0x14002b898
   14000155b:	int3   
   14000155c:	int3   
   14000155d:	int3   
   14000155e:	int3   
   14000155f:	int3   
   140001560:	rex push rbp
   140001562:	sub    rsp,0x60
   140001566:	mov    DWORD PTR [rsp+0x70],0x0
   14000156e:	mov    QWORD PTR [rsp+0x58],rbx
   140001573:	lea    rbx,[rcx+0x60]
   140001577:	mov    rcx,QWORD PTR [rcx+0x60]
   14000157b:	mov    QWORD PTR [rsp+0x50],rsi
   140001580:	mov    rbp,rdx
   140001583:	mov    eax,DWORD PTR [rcx+0x8]
   140001586:	cmp    DWORD PTR [rcx+0xc],eax
   140001589:	jne    0x1400015a0
   14000158b:	lea    rcx,[rsp+0x20]
   140001590:	mov    esi,0x1
   140001595:	call   QWORD PTR [rip+0x2a2f5]        # 0x14002b890
   14000159b:	jmp    0x14000168a
   1400015a0:	or     rcx,0xffffffffffffffff
   1400015a4:	lea    rdx,[rip+0x2a50d]        # 0x14002bab8
   1400015ab:	mov    QWORD PTR [rsp+0x48],rdi
   1400015b0:	mov    rdi,rdx
   1400015b3:	mov    QWORD PTR [rsp+0x28],rdx
   1400015b8:	xor    eax,eax
   1400015ba:	repnz scas al,BYTE PTR es:[rdi]
   1400015bc:	lea    rdx,[rsp+0x30]
   1400015c1:	not    rcx
   1400015c4:	dec    rcx
   1400015c7:	mov    DWORD PTR [rsp+0x20],ecx
   1400015cb:	lea    rcx,[rsp+0x88]
   1400015d3:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   1400015d8:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   1400015de:	call   QWORD PTR [rip+0x2a27c]        # 0x14002b860
   1400015e4:	mov    rax,QWORD PTR [rsp+0x88]
   1400015ec:	mov    edi,DWORD PTR [rax+0x4]
   1400015ef:	lea    rcx,[rsp+0x88]
   1400015f7:	mov    esi,0xe
   1400015fc:	call   QWORD PTR [rip+0x2a2be]        # 0x14002b8c0
   140001602:	lea    rcx,[rsp+0x78]
   140001607:	mov    r9d,edi
   14000160a:	mov    r8,rax
   14000160d:	mov    rdx,rbx
   140001610:	call   QWORD PTR [rip+0x2a2a2]        # 0x14002b8b8
   140001616:	mov    rdx,QWORD PTR [rsp+0x78]
   14000161b:	lea    rcx,[rsp+0x80]
   140001623:	mov    edx,DWORD PTR [rdx+0x4]
   140001626:	xor    r8d,r8d
   140001629:	inc    edx
   14000162b:	call   QWORD PTR [rip+0x2a247]        # 0x14002b878
   140001631:	lea    rcx,[rsp+0x80]
   140001639:	call   QWORD PTR [rip+0x2a281]        # 0x14002b8c0
   14000163f:	mov    rcx,QWORD PTR [rsp+0x78]
   140001644:	movsxd rdi,DWORD PTR [rcx+0x4]
   140001648:	lea    rcx,[rsp+0x78]
   14000164d:	mov    rbx,rax
   140001650:	add    rdi,rdi
   140001653:	call   QWORD PTR [rip+0x2a267]        # 0x14002b8c0
   140001659:	mov    r8,rdi
   14000165c:	mov    rdx,rax
   14000165f:	mov    rcx,rbx
   140001662:	call   0x14002951e
   140001667:	lea    rcx,[rsp+0x70]
   14000166c:	mov    dl,0xa
   14000166e:	call   QWORD PTR [rip+0x2a254]        # 0x14002b8c8
   140001674:	movzx  edx,WORD PTR [rsp+0x70]
   140001679:	lea    rax,[rsp+0x80]
   140001681:	mov    WORD PTR [rbx+rdi*1],dx
   140001685:	mov    rdi,QWORD PTR [rsp+0x48]
   14000168a:	mov    rdx,rax
   14000168d:	mov    rcx,rbp
   140001690:	call   QWORD PTR [rip+0x2a20a]        # 0x14002b8a0
   140001696:	mov    rbx,QWORD PTR [rsp+0x58]
   14000169b:	test   sil,0x8
   14000169f:	je     0x1400016b2
   1400016a1:	lea    rcx,[rsp+0x80]
   1400016a9:	and    esi,0xfffffff7
   1400016ac:	call   QWORD PTR [rip+0x2a1e6]        # 0x14002b898
   1400016b2:	test   sil,0x4
   1400016b6:	je     0x1400016c6
   1400016b8:	lea    rcx,[rsp+0x78]
   1400016bd:	and    esi,0xfffffffb
   1400016c0:	call   QWORD PTR [rip+0x2a1d2]        # 0x14002b898
   1400016c6:	test   sil,0x2
   1400016ca:	je     0x1400016dd
   1400016cc:	lea    rcx,[rsp+0x88]
   1400016d4:	and    esi,0xfffffffd
   1400016d7:	call   QWORD PTR [rip+0x2a1bb]        # 0x14002b898
   1400016dd:	test   sil,0x1
   1400016e1:	mov    rsi,QWORD PTR [rsp+0x50]
   1400016e6:	je     0x1400016f3
   1400016e8:	lea    rcx,[rsp+0x20]
   1400016ed:	call   QWORD PTR [rip+0x2a1a5]        # 0x14002b898
   1400016f3:	mov    rax,rbp
   1400016f6:	add    rsp,0x60
   1400016fa:	pop    rbp
   1400016fb:	ret    
   1400016fc:	int3   
   1400016fd:	int3   
   1400016fe:	int3   
   1400016ff:	int3   
   140001700:	mov    QWORD PTR [rsp+0x18],rbx
   140001705:	push   rsi
   140001706:	sub    rsp,0x20
   14000170a:	mov    rax,QWORD PTR [rdx]
   14000170d:	mov    rsi,rcx
   140001710:	mov    rbx,rdx
   140001713:	mov    QWORD PTR [rcx],rax
   140001716:	mov    ecx,DWORD PTR [rax]
   140001718:	test   ecx,ecx
   14000171a:	je     0x140001733
   14000171c:	cmp    ecx,0xffffffff
   14000171f:	je     0x140001798
   140001721:	lock add DWORD PTR [rax],0x1
   140001725:	mov    rax,rsi
   140001728:	mov    rbx,QWORD PTR [rsp+0x40]
   14000172d:	add    rsp,0x20
   140001731:	pop    rsi
   140001732:	ret    
   140001733:	mov    edx,DWORD PTR [rax+0x4]
   140001736:	mov    rcx,rsi
   140001739:	mov    QWORD PTR [rsp+0x30],rbp
   14000173e:	mov    QWORD PTR [rsp+0x38],rdi
   140001743:	call   QWORD PTR [rip+0x2a10f]        # 0x14002b858
   140001749:	mov    r11,QWORD PTR [rsi]
   14000174c:	mov    rcx,QWORD PTR [rbx]
   14000174f:	movsxd rax,DWORD PTR [r11+0xc]
   140001753:	lea    rbp,[r11+rax*8+0x10]
   140001758:	movsxd rax,DWORD PTR [rcx+0x8]
   14000175c:	lea    rdi,[rcx+rax*8+0x10]
   140001761:	movsxd rax,DWORD PTR [r11+0x8]
   140001765:	lea    rbx,[r11+rax*8+0x10]
   14000176a:	cmp    rbx,rbp
   14000176d:	je     0x14000178e
   14000176f:	nop
   140001770:	test   rbx,rbx
   140001773:	je     0x140001781
   140001775:	mov    rdx,rdi
   140001778:	mov    rcx,rbx
   14000177b:	call   QWORD PTR [rip+0x2a11f]        # 0x14002b8a0
   140001781:	add    rbx,0x8
   140001785:	add    rdi,0x8
   140001789:	cmp    rbx,rbp
   14000178c:	jne    0x140001770
   14000178e:	mov    rbp,QWORD PTR [rsp+0x30]
   140001793:	mov    rdi,QWORD PTR [rsp+0x38]
   140001798:	mov    rax,rsi
   14000179b:	mov    rbx,QWORD PTR [rsp+0x40]
   1400017a0:	add    rsp,0x20
   1400017a4:	pop    rsi
   1400017a5:	ret    
   1400017a6:	int3   
   1400017a7:	int3   
   1400017a8:	int3   
   1400017a9:	int3   
   1400017aa:	int3   
   1400017ab:	int3   
   1400017ac:	int3   
   1400017ad:	int3   
   1400017ae:	int3   
   1400017af:	int3   
   1400017b0:	sub    rsp,0x28
   1400017b4:	mov    rdx,QWORD PTR [rcx]
   1400017b7:	mov    eax,DWORD PTR [rdx]
   1400017b9:	test   eax,eax
   1400017bb:	je     0x1400017cd
   1400017bd:	cmp    eax,0xffffffff
   1400017c0:	je     0x14000182a
   1400017c2:	lock add DWORD PTR [rdx],0xffffffff
   1400017c6:	setne  al
   1400017c9:	test   al,al
   1400017cb:	jne    0x14000182a
   1400017cd:	mov    QWORD PTR [rsp+0x30],rbx
   1400017d2:	mov    QWORD PTR [rsp+0x38],rsi
   1400017d7:	mov    rsi,QWORD PTR [rcx]
   1400017da:	movsxd rax,DWORD PTR [rsi+0xc]
   1400017de:	mov    QWORD PTR [rsp+0x20],rdi
   1400017e3:	lea    rbx,[rsi+rax*8+0x10]
   1400017e8:	movsxd rax,DWORD PTR [rsi+0x8]
   1400017ec:	lea    rdi,[rsi+rax*8+0x10]
   1400017f1:	cmp    rdi,rbx
   1400017f4:	je     0x140001812
   1400017f6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140001800:	sub    rbx,0x8
   140001804:	mov    rcx,rbx
   140001807:	call   QWORD PTR [rip+0x2a08b]        # 0x14002b898
   14000180d:	cmp    rbx,rdi
   140001810:	jne    0x140001800
   140001812:	mov    rcx,rsi
   140001815:	call   QWORD PTR [rip+0x2a055]        # 0x14002b870
   14000181b:	mov    rdi,QWORD PTR [rsp+0x20]
   140001820:	mov    rsi,QWORD PTR [rsp+0x38]
   140001825:	mov    rbx,QWORD PTR [rsp+0x30]
   14000182a:	add    rsp,0x28
   14000182e:	ret    
   14000182f:	int3   
   140001830:	rex push rsi
   140001832:	sub    rsp,0x20
   140001836:	mov    rax,QWORD PTR [rdx]
   140001839:	mov    rsi,rcx
   14000183c:	cmp    QWORD PTR [rcx],rax
   14000183f:	je     0x1400018f2
   140001845:	lea    rcx,[rsp+0x30]
   14000184a:	mov    QWORD PTR [rsp+0x48],rdi
   14000184f:	call   0x140001700
   140001854:	lea    r11,[rsp+0x30]
   140001859:	cmp    r11,rsi
   14000185c:	je     0x140001870
   14000185e:	mov    rax,QWORD PTR [rsp+0x30]
   140001863:	mov    rdi,QWORD PTR [rsi]
   140001866:	mov    QWORD PTR [rsp+0x30],rdi
   14000186b:	mov    QWORD PTR [rsi],rax
   14000186e:	jmp    0x140001875
   140001870:	mov    rdi,QWORD PTR [rsp+0x30]
   140001875:	mov    eax,DWORD PTR [rdi]
   140001877:	test   eax,eax
   140001879:	je     0x140001890
   14000187b:	cmp    eax,0xffffffff
   14000187e:	je     0x1400018e4
   140001880:	lock add DWORD PTR [rdi],0xffffffff
   140001884:	setne  al
   140001887:	test   al,al
   140001889:	jne    0x1400018e4
   14000188b:	mov    rdi,QWORD PTR [rsp+0x30]
   140001890:	movsxd rax,DWORD PTR [rdi+0xc]
   140001894:	mov    QWORD PTR [rsp+0x38],rbx
   140001899:	mov    QWORD PTR [rsp+0x40],rbp
   14000189e:	lea    rbx,[rdi+rax*8+0x10]
   1400018a3:	movsxd rax,DWORD PTR [rdi+0x8]
   1400018a7:	lea    rbp,[rdi+rax*8+0x10]
   1400018ac:	cmp    rbp,rbx
   1400018af:	je     0x1400018c3
   1400018b1:	sub    rbx,0x8
   1400018b5:	mov    rcx,rbx
   1400018b8:	call   QWORD PTR [rip+0x29fda]        # 0x14002b898
   1400018be:	cmp    rbx,rbp
   1400018c1:	jne    0x1400018b1
   1400018c3:	mov    rcx,rdi
   1400018c6:	call   QWORD PTR [rip+0x29fa4]        # 0x14002b870
   1400018cc:	mov    rbp,QWORD PTR [rsp+0x40]
   1400018d1:	mov    rbx,QWORD PTR [rsp+0x38]
   1400018d6:	mov    rdi,QWORD PTR [rsp+0x48]
   1400018db:	mov    rax,rsi
   1400018de:	add    rsp,0x20
   1400018e2:	pop    rsi
   1400018e3:	ret    
   1400018e4:	mov    rax,rsi
   1400018e7:	mov    rdi,QWORD PTR [rsp+0x48]
   1400018ec:	add    rsp,0x20
   1400018f0:	pop    rsi
   1400018f1:	ret    
   1400018f2:	mov    rax,rcx
   1400018f5:	add    rsp,0x20
   1400018f9:	pop    rsi
   1400018fa:	ret    
   1400018fb:	int3   
   1400018fc:	int3   
   1400018fd:	int3   
   1400018fe:	int3   
   1400018ff:	int3   
   140001900:	rex push rbx
   140001902:	sub    rsp,0x20
   140001906:	mov    rbx,QWORD PTR [rip+0x29f7b]        # 0x14002b888
   14000190d:	lea    rdx,[rsp+0x38]
   140001912:	mov    QWORD PTR [rsp+0x38],rbx
   140001917:	call   0x140001830
   14000191c:	mov    r11d,DWORD PTR [rbx]
   14000191f:	test   r11d,r11d
   140001922:	je     0x14000193a
   140001924:	cmp    r11d,0xffffffff
   140001928:	je     0x140001985
   14000192a:	lock add DWORD PTR [rbx],0xffffffff
   14000192e:	setne  al
   140001931:	test   al,al
   140001933:	jne    0x140001985
   140001935:	mov    rbx,QWORD PTR [rsp+0x38]
   14000193a:	movsxd rax,DWORD PTR [rbx+0xc]
   14000193e:	mov    QWORD PTR [rsp+0x30],rsi
   140001943:	mov    QWORD PTR [rsp+0x40],rdi
   140001948:	lea    rdi,[rbx+rax*8+0x10]
   14000194d:	movsxd rax,DWORD PTR [rbx+0x8]
   140001951:	lea    rsi,[rbx+rax*8+0x10]
   140001956:	cmp    rsi,rdi
   140001959:	je     0x140001972
   14000195b:	nop    DWORD PTR [rax+rax*1+0x0]
   140001960:	sub    rdi,0x8
   140001964:	mov    rcx,rdi
   140001967:	call   QWORD PTR [rip+0x29f2b]        # 0x14002b898
   14000196d:	cmp    rdi,rsi
   140001970:	jne    0x140001960
   140001972:	mov    rcx,rbx
   140001975:	call   QWORD PTR [rip+0x29ef5]        # 0x14002b870
   14000197b:	mov    rdi,QWORD PTR [rsp+0x40]
   140001980:	mov    rsi,QWORD PTR [rsp+0x30]
   140001985:	add    rsp,0x20
   140001989:	pop    rbx
   14000198a:	ret    
   14000198b:	int3   
   14000198c:	int3   
   14000198d:	int3   
   14000198e:	int3   
   14000198f:	int3   
   140001990:	mov    QWORD PTR [rsp+0x8],rbx
   140001995:	push   rdi
   140001996:	sub    rsp,0x20
   14000199a:	mov    rax,QWORD PTR [rdx]
   14000199d:	mov    rbx,rcx
   1400019a0:	mov    rdi,rdx
   1400019a3:	mov    QWORD PTR [rcx],rax
   1400019a6:	mov    ecx,DWORD PTR [rax]
   1400019a8:	test   ecx,ecx
   1400019aa:	je     0x1400019c3
   1400019ac:	cmp    ecx,0xffffffff
   1400019af:	je     0x1400019f8
   1400019b1:	lock add DWORD PTR [rax],0x1
   1400019b5:	mov    rax,rbx
   1400019b8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400019bd:	add    rsp,0x20
   1400019c1:	pop    rdi
   1400019c2:	ret    
   1400019c3:	mov    edx,DWORD PTR [rax+0x4]
   1400019c6:	mov    rcx,rbx
   1400019c9:	call   QWORD PTR [rip+0x29e89]        # 0x14002b858
   1400019cf:	mov    rcx,QWORD PTR [rbx]
   1400019d2:	mov    r11,QWORD PTR [rdi]
   1400019d5:	movsxd rax,DWORD PTR [r11+0x8]
   1400019d9:	lea    r9,[r11+rax*8+0x10]
   1400019de:	movsxd rax,DWORD PTR [rcx+0xc]
   1400019e2:	lea    r8,[rcx+rax*8+0x10]
   1400019e7:	movsxd rax,DWORD PTR [rcx+0x8]
   1400019eb:	lea    rdx,[rcx+rax*8+0x10]
   1400019f0:	mov    rcx,rbx
   1400019f3:	call   0x1400014c0
   1400019f8:	mov    rax,rbx
   1400019fb:	mov    rbx,QWORD PTR [rsp+0x30]
   140001a00:	add    rsp,0x20
   140001a04:	pop    rdi
   140001a05:	ret    
   140001a06:	int3   
   140001a07:	int3   
   140001a08:	int3   
   140001a09:	int3   
   140001a0a:	int3   
   140001a0b:	int3   
   140001a0c:	int3   
   140001a0d:	int3   
   140001a0e:	int3   
   140001a0f:	int3   
   140001a10:	mov    QWORD PTR [rsp+0x8],rbx
   140001a15:	mov    QWORD PTR [rsp+0x18],rbp
   140001a1a:	mov    DWORD PTR [rsp+0x10],edx
   140001a1e:	push   rsi
   140001a1f:	push   rdi
   140001a20:	push   r12
   140001a22:	push   r13
   140001a24:	push   r14
   140001a26:	sub    rsp,0x20
   140001a2a:	mov    rdx,QWORD PTR [rcx]
   140001a2d:	movsxd r13,r8d
   140001a30:	mov    r12,rcx
   140001a33:	movsxd rax,DWORD PTR [rdx+0x8]
   140001a37:	mov    r8d,r13d
   140001a3a:	lea    r14,[rdx+rax*8+0x10]
   140001a3f:	lea    rdx,[rsp+0x58]
   140001a44:	call   QWORD PTR [rip+0x29e06]        # 0x14002b850
   140001a4a:	mov    r10,QWORD PTR [r12]
   140001a4e:	movsxd rdx,DWORD PTR [rsp+0x58]
   140001a53:	movsxd r9,DWORD PTR [r10+0x8]
   140001a57:	mov    rsi,rax
   140001a5a:	mov    rdi,r14
   140001a5d:	add    rdx,r9
   140001a60:	lea    rbx,[r10+r9*8+0x10]
   140001a65:	lea    rbp,[r10+rdx*8+0x10]
   140001a6a:	cmp    rbx,rbp
   140001a6d:	je     0x140001a8e
   140001a6f:	nop
   140001a70:	test   rbx,rbx
   140001a73:	je     0x140001a81
   140001a75:	mov    rdx,rdi
   140001a78:	mov    rcx,rbx
   140001a7b:	call   QWORD PTR [rip+0x29e1f]        # 0x14002b8a0
   140001a81:	add    rbx,0x8
   140001a85:	add    rdi,0x8
   140001a89:	cmp    rbx,rbp
   140001a8c:	jne    0x140001a70
   140001a8e:	mov    r8,QWORD PTR [r12]
   140001a92:	movsxd rdx,DWORD PTR [rsp+0x58]
   140001a97:	movsxd rcx,DWORD PTR [r8+0x8]
   140001a9b:	movsxd rax,DWORD PTR [r8+0xc]
   140001a9f:	lea    rdi,[r14+rdx*8]
   140001aa3:	add    rcx,rdx
   140001aa6:	lea    rbp,[r8+rax*8+0x10]
   140001aab:	add    rcx,r13
   140001aae:	lea    rbx,[r8+rcx*8+0x10]
   140001ab3:	cmp    rbx,rbp
   140001ab6:	je     0x140001ad6
   140001ab8:	test   rbx,rbx
   140001abb:	je     0x140001ac9
   140001abd:	mov    rdx,rdi
   140001ac0:	mov    rcx,rbx
   140001ac3:	call   QWORD PTR [rip+0x29dd7]        # 0x14002b8a0
   140001ac9:	add    rbx,0x8
   140001acd:	add    rdi,0x8
   140001ad1:	cmp    rbx,rbp
   140001ad4:	jne    0x140001ab8
   140001ad6:	mov    eax,DWORD PTR [rsi]
   140001ad8:	test   eax,eax
   140001ada:	je     0x140001aec
   140001adc:	cmp    eax,0xffffffff
   140001adf:	je     0x140001b1e
   140001ae1:	lock add DWORD PTR [rsi],0xffffffff
   140001ae5:	setne  al
   140001ae8:	test   al,al
   140001aea:	jne    0x140001b1e
   140001aec:	movsxd rax,DWORD PTR [rsi+0xc]
   140001af0:	lea    rbx,[rsi+rax*8+0x10]
   140001af5:	movsxd rax,DWORD PTR [rsi+0x8]
   140001af9:	lea    rdi,[rsi+rax*8+0x10]
   140001afe:	cmp    rdi,rbx
   140001b01:	je     0x140001b15
   140001b03:	sub    rbx,0x8
   140001b07:	mov    rcx,rbx
   140001b0a:	call   QWORD PTR [rip+0x29d88]        # 0x14002b898
   140001b10:	cmp    rbx,rdi
   140001b13:	jne    0x140001b03
   140001b15:	mov    rcx,rsi
   140001b18:	call   QWORD PTR [rip+0x29d52]        # 0x14002b870
   140001b1e:	mov    rdx,QWORD PTR [r12]
   140001b22:	movsxd rax,DWORD PTR [rsp+0x58]
   140001b27:	mov    rbx,QWORD PTR [rsp+0x50]
   140001b2c:	movsxd rcx,DWORD PTR [rdx+0x8]
   140001b30:	mov    rbp,QWORD PTR [rsp+0x60]
   140001b35:	add    rcx,rax
   140001b38:	lea    rax,[rdx+rcx*8+0x10]
   140001b3d:	add    rsp,0x20
   140001b41:	pop    r14
   140001b43:	pop    r13
   140001b45:	pop    r12
   140001b47:	pop    rdi
   140001b48:	pop    rsi
   140001b49:	ret    
   140001b4a:	int3   
   140001b4b:	int3   
   140001b4c:	int3   
   140001b4d:	int3   
   140001b4e:	int3   
   140001b4f:	int3   
   140001b50:	mov    QWORD PTR [rsp+0x8],rbx
   140001b55:	push   rdi
   140001b56:	sub    rsp,0x30
   140001b5a:	mov    rbx,rcx
   140001b5d:	mov    rcx,QWORD PTR [rcx]
   140001b60:	lea    r8,[rip+0xfffffffffffff8a9]        # 0x140001410
   140001b67:	lea    rdx,[rip+0xfffffffffffff7a2]        # 0x140001310
   140001b6e:	mov    r9d,0x20
   140001b74:	mov    DWORD PTR [rsp+0x20],0x8
   140001b7c:	call   QWORD PTR [rip+0x29cc6]        # 0x14002b848
   140001b82:	mov    rdi,rax
   140001b85:	mov    rax,QWORD PTR [rbx]
   140001b88:	mov    ecx,DWORD PTR [rax+0x10]
   140001b8b:	test   ecx,ecx
   140001b8d:	je     0x140001ba0
   140001b8f:	cmp    ecx,0xffffffff
   140001b92:	je     0x140001bb0
   140001b94:	lock add DWORD PTR [rax+0x10],0xffffffff
   140001b99:	setne  al
   140001b9c:	test   al,al
   140001b9e:	jne    0x140001bb0
   140001ba0:	mov    rcx,QWORD PTR [rbx]
   140001ba3:	lea    rdx,[rip+0xfffffffffffff866]        # 0x140001410
   140001baa:	call   QWORD PTR [rip+0x29cb8]        # 0x14002b868
   140001bb0:	mov    QWORD PTR [rbx],rdi
   140001bb3:	mov    rbx,QWORD PTR [rsp+0x40]
   140001bb8:	add    rsp,0x30
   140001bbc:	pop    rdi
   140001bbd:	ret    
   140001bbe:	int3   
   140001bbf:	int3   
   140001bc0:	rex push rbx
   140001bc2:	sub    rsp,0x20
   140001bc6:	lea    rbx,[rcx+0x10]
   140001bca:	lea    rcx,[rbx+0x10]
   140001bce:	call   QWORD PTR [rip+0x29cc4]        # 0x14002b898
   140001bd4:	lea    rcx,[rbx+0x8]
   140001bd8:	call   QWORD PTR [rip+0x29cba]        # 0x14002b898
   140001bde:	mov    rcx,rbx
   140001be1:	add    rsp,0x20
   140001be5:	pop    rbx
   140001be6:	rex.W jmp QWORD PTR [rip+0x29cab]        # 0x14002b898
   140001bed:	int3   
   140001bee:	int3   
   140001bef:	int3   
   140001bf0:	mov    QWORD PTR [rsp+0x8],rbx
   140001bf5:	mov    QWORD PTR [rsp+0x18],rbp
   140001bfa:	mov    QWORD PTR [rsp+0x20],rsi
   140001bff:	mov    DWORD PTR [rsp+0x10],edx
   140001c03:	push   rdi
   140001c04:	sub    rsp,0x20
   140001c08:	mov    rdx,QWORD PTR [rcx]
   140001c0b:	movsxd rdi,r8d
   140001c0e:	mov    rbp,rcx
   140001c11:	movsxd rax,DWORD PTR [rdx+0x8]
   140001c15:	mov    r8d,edi
   140001c18:	lea    rbx,[rdx+rax*8+0x10]
   140001c1d:	lea    rdx,[rsp+0x38]
   140001c22:	call   QWORD PTR [rip+0x29c28]        # 0x14002b850
   140001c28:	mov    r10,QWORD PTR [rbp+0x0]
   140001c2c:	movsxd rdx,DWORD PTR [rsp+0x38]
   140001c31:	movsxd r9,DWORD PTR [r10+0x8]
   140001c35:	mov    rcx,rbp
   140001c38:	mov    rsi,rax
   140001c3b:	add    rdx,r9
   140001c3e:	lea    r8,[r10+rdx*8+0x10]
   140001c43:	lea    rdx,[r10+r9*8+0x10]
   140001c48:	mov    r9,rbx
   140001c4b:	call   0x140001000
   140001c50:	mov    rdx,QWORD PTR [rbp+0x0]
   140001c54:	movsxd r11,DWORD PTR [rsp+0x38]
   140001c59:	movsxd rcx,DWORD PTR [rdx+0xc]
   140001c5d:	lea    r9,[rbx+r11*8]
   140001c61:	lea    r8,[rdx+rcx*8+0x10]
   140001c66:	movsxd rcx,DWORD PTR [rdx+0x8]
   140001c6a:	add    rcx,r11
   140001c6d:	add    rcx,rdi
   140001c70:	lea    rdx,[rdx+rcx*8+0x10]
   140001c75:	mov    rcx,rbp
   140001c78:	call   0x140001000
   140001c7d:	mov    r11d,DWORD PTR [rsi]
   140001c80:	test   r11d,r11d
   140001c83:	je     0x140001c96
   140001c85:	cmp    r11d,0xffffffff
   140001c89:	je     0x140001ca1
   140001c8b:	lock add DWORD PTR [rsi],0xffffffff
   140001c8f:	setne  al
   140001c92:	test   al,al
   140001c94:	jne    0x140001ca1
   140001c96:	mov    rdx,rsi
   140001c99:	mov    rcx,rbp
   140001c9c:	call   0x140001290
   140001ca1:	mov    rdx,QWORD PTR [rbp+0x0]
   140001ca5:	movsxd rax,DWORD PTR [rsp+0x38]
   140001caa:	mov    rbx,QWORD PTR [rsp+0x30]
   140001caf:	movsxd rcx,DWORD PTR [rdx+0x8]
   140001cb3:	mov    rbp,QWORD PTR [rsp+0x40]
   140001cb8:	mov    rsi,QWORD PTR [rsp+0x48]
   140001cbd:	add    rcx,rax
   140001cc0:	lea    rax,[rdx+rcx*8+0x10]
   140001cc5:	add    rsp,0x20
   140001cc9:	pop    rdi
   140001cca:	ret    
   140001ccb:	int3   
   140001ccc:	int3   
   140001ccd:	int3   
   140001cce:	int3   
   140001ccf:	int3   
   140001cd0:	mov    QWORD PTR [rsp+0x8],rbx
   140001cd5:	mov    QWORD PTR [rsp+0x10],rbp
   140001cda:	mov    QWORD PTR [rsp+0x18],rsi
   140001cdf:	push   rdi
   140001ce0:	sub    rsp,0x20
   140001ce4:	mov    r8,QWORD PTR [rcx]
   140001ce7:	mov    rbx,rcx
   140001cea:	movsxd rax,DWORD PTR [r8+0x8]
   140001cee:	lea    rdi,[r8+rax*8+0x10]
   140001cf3:	call   QWORD PTR [rip+0x29b5f]        # 0x14002b858
   140001cf9:	mov    rdx,QWORD PTR [rbx]
   140001cfc:	movsxd rcx,DWORD PTR [rdx+0xc]
   140001d00:	mov    rsi,rax
   140001d03:	lea    rbp,[rdx+rcx*8+0x10]
   140001d08:	movsxd rcx,DWORD PTR [rdx+0x8]
   140001d0c:	lea    rbx,[rdx+rcx*8+0x10]
   140001d11:	cmp    rbx,rbp
   140001d14:	je     0x140001d34
   140001d16:	test   rbx,rbx
   140001d19:	je     0x140001d27
   140001d1b:	mov    rdx,rdi
   140001d1e:	mov    rcx,rbx
   140001d21:	call   QWORD PTR [rip+0x29b79]        # 0x14002b8a0
   140001d27:	add    rbx,0x8
   140001d2b:	add    rdi,0x8
   140001d2f:	cmp    rbx,rbp
   140001d32:	jne    0x140001d16
   140001d34:	mov    eax,DWORD PTR [rsi]
   140001d36:	test   eax,eax
   140001d38:	je     0x140001d4a
   140001d3a:	cmp    eax,0xffffffff
   140001d3d:	je     0x140001d7c
   140001d3f:	lock add DWORD PTR [rsi],0xffffffff
   140001d43:	setne  al
   140001d46:	test   al,al
   140001d48:	jne    0x140001d7c
   140001d4a:	movsxd rax,DWORD PTR [rsi+0xc]
   140001d4e:	lea    rbx,[rsi+rax*8+0x10]
   140001d53:	movsxd rax,DWORD PTR [rsi+0x8]
   140001d57:	lea    rdi,[rsi+rax*8+0x10]
   140001d5c:	cmp    rdi,rbx
   140001d5f:	je     0x140001d73
   140001d61:	sub    rbx,0x8
   140001d65:	mov    rcx,rbx
   140001d68:	call   QWORD PTR [rip+0x29b2a]        # 0x14002b898
   140001d6e:	cmp    rbx,rdi
   140001d71:	jne    0x140001d61
   140001d73:	mov    rcx,rsi
   140001d76:	call   QWORD PTR [rip+0x29af4]        # 0x14002b870
   140001d7c:	mov    rbx,QWORD PTR [rsp+0x30]
   140001d81:	mov    rbp,QWORD PTR [rsp+0x38]
   140001d86:	mov    rsi,QWORD PTR [rsp+0x40]
   140001d8b:	add    rsp,0x20
   140001d8f:	pop    rdi
   140001d90:	ret    
   140001d91:	int3   
   140001d92:	int3   
   140001d93:	int3   
   140001d94:	int3   
   140001d95:	int3   
   140001d96:	int3   
   140001d97:	int3   
   140001d98:	int3   
   140001d99:	int3   
   140001d9a:	int3   
   140001d9b:	int3   
   140001d9c:	int3   
   140001d9d:	int3   
   140001d9e:	int3   
   140001d9f:	int3   
   140001da0:	mov    QWORD PTR [rsp+0x8],rbx
   140001da5:	mov    QWORD PTR [rsp+0x10],rsi
   140001daa:	push   rdi
   140001dab:	sub    rsp,0x20
   140001daf:	mov    r8,QWORD PTR [rcx]
   140001db2:	mov    rsi,rcx
   140001db5:	movsxd rax,DWORD PTR [r8+0x8]
   140001db9:	lea    rbx,[r8+rax*8+0x10]
   140001dbe:	call   QWORD PTR [rip+0x29a94]        # 0x14002b858
   140001dc4:	mov    r10,QWORD PTR [rsi]
   140001dc7:	movsxd rdx,DWORD PTR [r10+0xc]
   140001dcb:	mov    r9,rbx
   140001dce:	mov    rcx,rsi
   140001dd1:	lea    r8,[r10+rdx*8+0x10]
   140001dd6:	movsxd rdx,DWORD PTR [r10+0x8]
   140001dda:	mov    rdi,rax
   140001ddd:	lea    rdx,[r10+rdx*8+0x10]
   140001de2:	call   0x140001000
   140001de7:	mov    r11d,DWORD PTR [rdi]
   140001dea:	test   r11d,r11d
   140001ded:	je     0x140001e00
   140001def:	cmp    r11d,0xffffffff
   140001df3:	je     0x140001e0b
   140001df5:	lock add DWORD PTR [rdi],0xffffffff
   140001df9:	setne  al
   140001dfc:	test   al,al
   140001dfe:	jne    0x140001e0b
   140001e00:	mov    rdx,rdi
   140001e03:	mov    rcx,rsi
   140001e06:	call   0x140001290
   140001e0b:	mov    rbx,QWORD PTR [rsp+0x30]
   140001e10:	mov    rsi,QWORD PTR [rsp+0x38]
   140001e15:	add    rsp,0x20
   140001e19:	pop    rdi
   140001e1a:	ret    
   140001e1b:	int3   
   140001e1c:	int3   
   140001e1d:	int3   
   140001e1e:	int3   
   140001e1f:	int3   
   140001e20:	mov    QWORD PTR [rsp+0x10],rbx
   140001e25:	push   rdi
   140001e26:	sub    rsp,0x20
   140001e2a:	mov    rax,QWORD PTR [rcx]
   140001e2d:	mov    rdi,rdx
   140001e30:	mov    rbx,rcx
   140001e33:	mov    r8d,DWORD PTR [rax]
   140001e36:	cmp    r8d,0x1
   140001e3a:	je     0x140001e6d
   140001e3c:	test   r8d,r8d
   140001e3f:	je     0x140001e6d
   140001e41:	mov    edx,0x7fffffff
   140001e46:	mov    r8d,0x1
   140001e4c:	call   0x140001a10
   140001e51:	test   rax,rax
   140001e54:	je     0x140001e89
   140001e56:	mov    rdx,rdi
   140001e59:	mov    rcx,rax
   140001e5c:	mov    rbx,QWORD PTR [rsp+0x38]
   140001e61:	add    rsp,0x20
   140001e65:	pop    rdi
   140001e66:	rex.W jmp QWORD PTR [rip+0x29a33]        # 0x14002b8a0
   140001e6d:	lea    rcx,[rsp+0x30]
   140001e72:	call   QWORD PTR [rip+0x29a28]        # 0x14002b8a0
   140001e78:	mov    rcx,rbx
   140001e7b:	call   QWORD PTR [rip+0x299bf]        # 0x14002b840
   140001e81:	mov    rcx,QWORD PTR [rsp+0x30]
   140001e86:	mov    QWORD PTR [rax],rcx
   140001e89:	mov    rbx,QWORD PTR [rsp+0x38]
   140001e8e:	add    rsp,0x20
   140001e92:	pop    rdi
   140001e93:	ret    
   140001e94:	int3   
   140001e95:	int3   
   140001e96:	int3   
   140001e97:	int3   
   140001e98:	int3   
   140001e99:	int3   
   140001e9a:	int3   
   140001e9b:	int3   
   140001e9c:	int3   
   140001e9d:	int3   
   140001e9e:	int3   
   140001e9f:	int3   
   140001ea0:	mov    QWORD PTR [rsp+0x8],rbx
   140001ea5:	push   rdi
   140001ea6:	sub    rsp,0x20
   140001eaa:	mov    rdx,QWORD PTR [rcx+0x68]
   140001eae:	mov    rbx,rcx
   140001eb1:	add    rcx,0x68
   140001eb5:	mov    eax,DWORD PTR [rdx]
   140001eb7:	test   eax,eax
   140001eb9:	je     0x140001ecb
   140001ebb:	cmp    eax,0xffffffff
   140001ebe:	je     0x140001ed3
   140001ec0:	lock add DWORD PTR [rdx],0xffffffff
   140001ec4:	setne  al
   140001ec7:	test   al,al
   140001ec9:	jne    0x140001ed3
   140001ecb:	mov    rdx,QWORD PTR [rcx]
   140001ece:	call   0x140001440
   140001ed3:	lea    rcx,[rbx+0x58]
   140001ed7:	call   QWORD PTR [rip+0x299bb]        # 0x14002b898
   140001edd:	lea    rcx,[rbx+0x50]
   140001ee1:	call   0x1400017b0
   140001ee6:	lea    rcx,[rbx+0x48]
   140001eea:	call   QWORD PTR [rip+0x299a8]        # 0x14002b898
   140001ef0:	lea    rcx,[rbx+0x40]
   140001ef4:	call   QWORD PTR [rip+0x2999e]        # 0x14002b898
   140001efa:	mov    rax,QWORD PTR [rbx+0x38]
   140001efe:	mov    ecx,DWORD PTR [rax+0x10]
   140001f01:	test   ecx,ecx
   140001f03:	je     0x140001f16
   140001f05:	cmp    ecx,0xffffffff
   140001f08:	je     0x140001f27
   140001f0a:	lock add DWORD PTR [rax+0x10],0xffffffff
   140001f0f:	setne  al
   140001f12:	test   al,al
   140001f14:	jne    0x140001f27
   140001f16:	mov    rcx,QWORD PTR [rbx+0x38]
   140001f1a:	lea    rdx,[rip+0xfffffffffffff4ef]        # 0x140001410
   140001f21:	call   QWORD PTR [rip+0x29941]        # 0x14002b868
   140001f27:	lea    rcx,[rbx+0x30]
   140001f2b:	call   QWORD PTR [rip+0x29967]        # 0x14002b898
   140001f31:	lea    rcx,[rbx+0x28]
   140001f35:	call   QWORD PTR [rip+0x2995d]        # 0x14002b898
   140001f3b:	lea    rcx,[rbx+0x20]
   140001f3f:	call   QWORD PTR [rip+0x29953]        # 0x14002b898
   140001f45:	lea    rcx,[rbx+0x18]
   140001f49:	call   QWORD PTR [rip+0x29949]        # 0x14002b898
   140001f4f:	lea    rcx,[rbx+0x10]
   140001f53:	call   QWORD PTR [rip+0x2993f]        # 0x14002b898
   140001f59:	lea    rcx,[rbx+0x8]
   140001f5d:	call   QWORD PTR [rip+0x29935]        # 0x14002b898
   140001f63:	mov    rcx,rbx
   140001f66:	mov    rbx,QWORD PTR [rsp+0x30]
   140001f6b:	add    rsp,0x20
   140001f6f:	pop    rdi
   140001f70:	rex.W jmp QWORD PTR [rip+0x29921]        # 0x14002b898
   140001f77:	int3   
   140001f78:	int3   
   140001f79:	int3   
   140001f7a:	int3   
   140001f7b:	int3   
   140001f7c:	int3   
   140001f7d:	int3   
   140001f7e:	int3   
   140001f7f:	int3   
   140001f80:	mov    QWORD PTR [rsp+0x8],rbx
   140001f85:	push   rdi
   140001f86:	sub    rsp,0x20
   140001f8a:	mov    rbx,rcx
   140001f8d:	add    rcx,0x60
   140001f91:	call   0x1400017b0
   140001f96:	lea    rcx,[rbx+0x58]
   140001f9a:	call   0x1400017b0
   140001f9f:	lea    rcx,[rbx+0x50]
   140001fa3:	call   0x1400017b0
   140001fa8:	mov    rcx,QWORD PTR [rbx+0x48]
   140001fac:	mov    eax,DWORD PTR [rcx+0x10]
   140001faf:	test   eax,eax
   140001fb1:	je     0x140001fc4
   140001fb3:	cmp    eax,0xffffffff
   140001fb6:	je     0x140001fd5
   140001fb8:	lock add DWORD PTR [rcx+0x10],0xffffffff
   140001fbd:	setne  al
   140001fc0:	test   al,al
   140001fc2:	jne    0x140001fd5
   140001fc4:	mov    rcx,QWORD PTR [rbx+0x48]
   140001fc8:	lea    rdx,[rip+0xfffffffffffff441]        # 0x140001410
   140001fcf:	call   QWORD PTR [rip+0x29893]        # 0x14002b868
   140001fd5:	mov    rax,QWORD PTR [rbx+0x40]
   140001fd9:	mov    ecx,DWORD PTR [rax+0x10]
   140001fdc:	test   ecx,ecx
   140001fde:	je     0x140001ff1
   140001fe0:	cmp    ecx,0xffffffff
   140001fe3:	je     0x140002002
   140001fe5:	lock add DWORD PTR [rax+0x10],0xffffffff
   140001fea:	setne  al
   140001fed:	test   al,al
   140001fef:	jne    0x140002002
   140001ff1:	mov    rcx,QWORD PTR [rbx+0x40]
   140001ff5:	lea    rdx,[rip+0xfffffffffffff554]        # 0x140001550
   140001ffc:	call   QWORD PTR [rip+0x29866]        # 0x14002b868
   140002002:	lea    rcx,[rbx+0x38]
   140002006:	call   QWORD PTR [rip+0x2942c]        # 0x14002b438
   14000200c:	lea    rcx,[rbx+0x30]
   140002010:	call   QWORD PTR [rip+0x29422]        # 0x14002b438
   140002016:	lea    rcx,[rbx+0x28]
   14000201a:	call   0x1400017b0
   14000201f:	lea    rcx,[rbx+0x20]
   140002023:	call   QWORD PTR [rip+0x2986f]        # 0x14002b898
   140002029:	lea    rcx,[rbx+0x18]
   14000202d:	call   QWORD PTR [rip+0x29865]        # 0x14002b898
   140002033:	lea    rcx,[rbx+0x10]
   140002037:	call   QWORD PTR [rip+0x2985b]        # 0x14002b898
   14000203d:	mov    rcx,rbx
   140002040:	mov    rbx,QWORD PTR [rsp+0x30]
   140002045:	add    rsp,0x20
   140002049:	pop    rdi
   14000204a:	rex.W jmp QWORD PTR [rip+0x29847]        # 0x14002b898
   140002051:	int3   
   140002052:	int3   
   140002053:	int3   
   140002054:	int3   
   140002055:	int3   
   140002056:	int3   
   140002057:	int3   
   140002058:	int3   
   140002059:	int3   
   14000205a:	int3   
   14000205b:	int3   
   14000205c:	int3   
   14000205d:	int3   
   14000205e:	int3   
   14000205f:	int3   
   140002060:	mov    QWORD PTR [rsp+0x8],rbx
   140002065:	push   rdi
   140002066:	sub    rsp,0x20
   14000206a:	mov    rdi,rcx
   14000206d:	mov    rcx,QWORD PTR [rcx+0x8]
   140002071:	mov    eax,DWORD PTR [rcx+0x10]
   140002074:	test   eax,eax
   140002076:	je     0x140002089
   140002078:	cmp    eax,0xffffffff
   14000207b:	je     0x14000209a
   14000207d:	lock add DWORD PTR [rcx+0x10],0xffffffff
   140002082:	setne  al
   140002085:	test   al,al
   140002087:	jne    0x14000209a
   140002089:	mov    rcx,QWORD PTR [rdi+0x8]
   14000208d:	lea    rdx,[rip+0xfffffffffffff1ec]        # 0x140001280
   140002094:	call   QWORD PTR [rip+0x297ce]        # 0x14002b868
   14000209a:	mov    rax,QWORD PTR [rdi]
   14000209d:	mov    ecx,DWORD PTR [rax+0x10]
   1400020a0:	test   ecx,ecx
   1400020a2:	je     0x1400020b5
   1400020a4:	cmp    ecx,0xffffffff
   1400020a7:	je     0x1400020c5
   1400020a9:	lock add DWORD PTR [rax+0x10],0xffffffff
   1400020ae:	setne  al
   1400020b1:	test   al,al
   1400020b3:	jne    0x1400020c5
   1400020b5:	mov    rcx,QWORD PTR [rdi]
   1400020b8:	lea    rdx,[rip+0xfffffffffffff1c1]        # 0x140001280
   1400020bf:	call   QWORD PTR [rip+0x297a3]        # 0x14002b868
   1400020c5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400020ca:	add    rsp,0x20
   1400020ce:	pop    rdi
   1400020cf:	ret    
   1400020d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400020d5:	push   rdi
   1400020d6:	sub    rsp,0x20
   1400020da:	mov    rdi,rdx
   1400020dd:	mov    rbx,rcx
   1400020e0:	call   QWORD PTR [rip+0x297ba]        # 0x14002b8a0
   1400020e6:	lea    rdx,[rdi+0x8]
   1400020ea:	lea    rcx,[rbx+0x8]
   1400020ee:	call   QWORD PTR [rip+0x297ac]        # 0x14002b8a0
   1400020f4:	lea    rdx,[rdi+0x10]
   1400020f8:	lea    rcx,[rbx+0x10]
   1400020fc:	call   QWORD PTR [rip+0x2979e]        # 0x14002b8a0
   140002102:	lea    rdx,[rdi+0x18]
   140002106:	lea    rcx,[rbx+0x18]
   14000210a:	call   QWORD PTR [rip+0x29790]        # 0x14002b8a0
   140002110:	lea    rdx,[rdi+0x20]
   140002114:	lea    rcx,[rbx+0x20]
   140002118:	call   QWORD PTR [rip+0x29782]        # 0x14002b8a0
   14000211e:	lea    rdx,[rdi+0x28]
   140002122:	lea    rcx,[rbx+0x28]
   140002126:	call   QWORD PTR [rip+0x29774]        # 0x14002b8a0
   14000212c:	lea    rdx,[rdi+0x30]
   140002130:	lea    rcx,[rbx+0x30]
   140002134:	call   QWORD PTR [rip+0x29766]        # 0x14002b8a0
   14000213a:	mov    rax,QWORD PTR [rdi+0x38]
   14000213e:	lea    rcx,[rbx+0x38]
   140002142:	mov    QWORD PTR [rcx],rax
   140002145:	mov    edx,DWORD PTR [rax+0x10]
   140002148:	test   edx,edx
   14000214a:	je     0x140002156
   14000214c:	cmp    edx,0xffffffff
   14000214f:	je     0x140002156
   140002151:	lock add DWORD PTR [rax+0x10],0x1
   140002156:	mov    rax,QWORD PTR [rcx]
   140002159:	test   BYTE PTR [rax+0x28],0x1
   14000215d:	jne    0x140002170
   14000215f:	mov    eax,DWORD PTR [rax+0x10]
   140002162:	cmp    eax,0x1
   140002165:	je     0x140002170
   140002167:	test   eax,eax
   140002169:	je     0x140002170
   14000216b:	call   0x140001b50
   140002170:	lea    rdx,[rdi+0x40]
   140002174:	lea    rcx,[rbx+0x40]
   140002178:	call   QWORD PTR [rip+0x29722]        # 0x14002b8a0
   14000217e:	lea    rdx,[rdi+0x48]
   140002182:	lea    rcx,[rbx+0x48]
   140002186:	call   QWORD PTR [rip+0x29714]        # 0x14002b8a0
   14000218c:	lea    rdx,[rdi+0x50]
   140002190:	lea    rcx,[rbx+0x50]
   140002194:	call   0x140001700
   140002199:	lea    rdx,[rdi+0x58]
   14000219d:	lea    rcx,[rbx+0x58]
   1400021a1:	call   QWORD PTR [rip+0x296f9]        # 0x14002b8a0
   1400021a7:	mov    r11d,DWORD PTR [rdi+0x60]
   1400021ab:	lea    rdx,[rdi+0x68]
   1400021af:	lea    rcx,[rbx+0x68]
   1400021b3:	mov    DWORD PTR [rbx+0x60],r11d
   1400021b7:	call   0x140001990
   1400021bc:	mov    r11d,DWORD PTR [rdi+0x70]
   1400021c0:	mov    DWORD PTR [rbx+0x70],r11d
   1400021c4:	movzx  eax,BYTE PTR [rdi+0x74]
   1400021c8:	mov    BYTE PTR [rbx+0x74],al
   1400021cb:	mov    rax,rbx
   1400021ce:	mov    rbx,QWORD PTR [rsp+0x30]
   1400021d3:	add    rsp,0x20
   1400021d7:	pop    rdi
   1400021d8:	ret    
   1400021d9:	int3   
   1400021da:	int3   
   1400021db:	int3   
   1400021dc:	int3   
   1400021dd:	int3   
   1400021de:	int3   
   1400021df:	int3   
   1400021e0:	rex push rbx
   1400021e2:	sub    rsp,0x20
   1400021e6:	mov    rbx,rcx
   1400021e9:	call   QWORD PTR [rip+0x296a1]        # 0x14002b890
   1400021ef:	lea    rcx,[rbx+0x10]
   1400021f3:	call   QWORD PTR [rip+0x29697]        # 0x14002b890
   1400021f9:	lea    rcx,[rbx+0x18]
   1400021fd:	call   QWORD PTR [rip+0x2968d]        # 0x14002b890
   140002203:	lea    rcx,[rbx+0x20]
   140002207:	call   QWORD PTR [rip+0x29683]        # 0x14002b890
   14000220d:	mov    r11,QWORD PTR [rip+0x29674]        # 0x14002b888
   140002214:	lea    rcx,[rsp+0x30]
   140002219:	mov    QWORD PTR [rbx+0x28],r11
   14000221d:	call   QWORD PTR [rip+0x2966d]        # 0x14002b890
   140002223:	lea    rcx,[rbx+0x30]
   140002227:	mov    rdx,rax
   14000222a:	call   QWORD PTR [rip+0x28f90]        # 0x14002b1c0
   140002230:	lea    rcx,[rsp+0x30]
   140002235:	call   QWORD PTR [rip+0x2965d]        # 0x14002b898
   14000223b:	lea    rcx,[rsp+0x30]
   140002240:	call   QWORD PTR [rip+0x2964a]        # 0x14002b890
   140002246:	lea    rcx,[rbx+0x38]
   14000224a:	mov    rdx,rax
   14000224d:	call   QWORD PTR [rip+0x28f6d]        # 0x14002b1c0
   140002253:	lea    rcx,[rsp+0x30]
   140002258:	call   QWORD PTR [rip+0x2963a]        # 0x14002b898
   14000225e:	mov    r11,QWORD PTR [rip+0x2961b]        # 0x14002b880
   140002265:	mov    QWORD PTR [rbx+0x40],r11
   140002269:	mov    rax,QWORD PTR [rip+0x29610]        # 0x14002b880
   140002270:	mov    QWORD PTR [rbx+0x48],rax
   140002274:	mov    rax,QWORD PTR [rip+0x2960d]        # 0x14002b888
   14000227b:	mov    QWORD PTR [rbx+0x50],rax
   14000227f:	mov    rax,QWORD PTR [rip+0x29602]        # 0x14002b888
   140002286:	mov    QWORD PTR [rbx+0x58],rax
   14000228a:	mov    rax,QWORD PTR [rip+0x295f7]        # 0x14002b888
   140002291:	mov    QWORD PTR [rbx+0x60],rax
   140002295:	mov    BYTE PTR [rbx+0x68],0x0
   140002299:	mov    BYTE PTR [rbx+0x69],0x0
   14000229d:	mov    BYTE PTR [rbx+0x6a],0x0
   1400022a1:	mov    BYTE PTR [rbx+0x6b],0x0
   1400022a5:	mov    BYTE PTR [rbx+0x6c],0x0
   1400022a9:	mov    DWORD PTR [rbx+0x70],0x0
   1400022b0:	mov    rax,rbx
   1400022b3:	add    rsp,0x20
   1400022b7:	pop    rbx
   1400022b8:	ret    
   1400022b9:	int3   
   1400022ba:	int3   
   1400022bb:	int3   
   1400022bc:	int3   
   1400022bd:	int3   
   1400022be:	int3   
   1400022bf:	int3   
   1400022c0:	rex push rbx
   1400022c2:	push   rsi
   1400022c3:	push   rdi
   1400022c4:	sub    rsp,0xd0
   1400022cb:	lea    rcx,[rsp+0x50]
   1400022d0:	call   QWORD PTR [rip+0x295ba]        # 0x14002b890
   1400022d6:	or     rcx,0xffffffffffffffff
   1400022da:	lea    rdx,[rip+0x2a12f]        # 0x14002c410
   1400022e1:	mov    rdi,rdx
   1400022e4:	mov    QWORD PTR [rsp+0x78],rdx
   1400022e9:	xor    eax,eax
   1400022eb:	repnz scas al,BYTE PTR es:[rdi]
   1400022ed:	lea    rdx,[rsp+0xc0]
   1400022f5:	not    rcx
   1400022f8:	dec    rcx
   1400022fb:	mov    DWORD PTR [rsp+0x70],ecx
   1400022ff:	lea    rcx,[rsp+0x58]
   140002304:	movaps xmm0,XMMWORD PTR [rsp+0x70]
   140002309:	movdqa XMMWORD PTR [rsp+0xc0],xmm0
   140002312:	call   QWORD PTR [rip+0x29548]        # 0x14002b860
   140002318:	call   0x140005da0
   14000231d:	mov    rdi,QWORD PTR [rax]
   140002320:	mov    rbx,rax
   140002323:	mov    QWORD PTR [rsp+0x30],rdi
   140002328:	mov    ecx,DWORD PTR [rdi]
   14000232a:	test   ecx,ecx
   14000232c:	je     0x14000233e
   14000232e:	cmp    ecx,0xffffffff
   140002331:	je     0x14000237e
   140002333:	lock add DWORD PTR [rdi],0x1
   140002337:	mov    rdi,QWORD PTR [rsp+0x30]
   14000233c:	jmp    0x14000237e
   14000233e:	mov    edx,DWORD PTR [rdi+0x4]
   140002341:	lea    rcx,[rsp+0x30]
   140002346:	call   QWORD PTR [rip+0x2950c]        # 0x14002b858
   14000234c:	mov    rcx,QWORD PTR [rsp+0x30]
   140002351:	mov    rdx,QWORD PTR [rbx]
   140002354:	movsxd rax,DWORD PTR [rdx+0x8]
   140002358:	lea    r9,[rdx+rax*8+0x10]
   14000235d:	movsxd rax,DWORD PTR [rcx+0xc]
   140002361:	lea    r8,[rcx+rax*8+0x10]
   140002366:	movsxd rax,DWORD PTR [rcx+0x8]
   14000236a:	lea    rdx,[rcx+rax*8+0x10]
   14000236f:	lea    rcx,[rsp+0x30]
   140002374:	call   0x140001360
   140002379:	mov    rdi,QWORD PTR [rsp+0x30]
   14000237e:	xor    edx,edx
   140002380:	mov    DWORD PTR [rsp+0x38],edx
   140002384:	movsxd rax,DWORD PTR [rdi+0x8]
   140002388:	lea    rcx,[rdi+rax*8+0x10]
   14000238d:	mov    QWORD PTR [rsp+0x40],rcx
   140002392:	movsxd rax,DWORD PTR [rdi+0xc]
   140002396:	lea    rdi,[rdi+rax*8+0x10]
   14000239b:	mov    QWORD PTR [rsp+0x48],rdi
   1400023a0:	mov    eax,edx
   1400023a2:	inc    edx
   1400023a4:	mov    DWORD PTR [rsp+0x38],edx
   1400023a8:	test   eax,eax
   1400023aa:	jne    0x1400024f9
   1400023b0:	cmp    rcx,rdi
   1400023b3:	je     0x1400024f9
   1400023b9:	mov    rdi,QWORD PTR [rcx]
   1400023bc:	lea    rcx,[rsp+0x90]
   1400023c4:	mov    rdx,rdi
   1400023c7:	call   QWORD PTR [rip+0x294d3]        # 0x14002b8a0
   1400023cd:	lea    rdx,[rdi+0x8]
   1400023d1:	lea    rcx,[rsp+0x98]
   1400023d9:	call   QWORD PTR [rip+0x294c1]        # 0x14002b8a0
   1400023df:	mov    rdx,QWORD PTR [rdi+0x10]
   1400023e3:	mov    QWORD PTR [rsp+0xa0],rdx
   1400023eb:	mov    rax,QWORD PTR [rdi+0x18]
   1400023ef:	mov    QWORD PTR [rsp+0xa8],rax
   1400023f7:	mov    eax,DWORD PTR [rdi+0x20]
   1400023fa:	mov    DWORD PTR [rsp+0xb0],eax
   140002401:	mov    eax,DWORD PTR [rdi+0x24]
   140002404:	mov    DWORD PTR [rsp+0xb4],eax
   14000240b:	mov    eax,DWORD PTR [rsp+0x38]
   14000240f:	nop
   140002410:	test   eax,eax
   140002412:	je     0x1400024c1
   140002418:	lea    rcx,[rsp+0xf8]
   140002420:	mov    dl,0x20
   140002422:	call   QWORD PTR [rip+0x294a0]        # 0x14002b8c8
   140002428:	lea    rcx,[rsp+0x100]
   140002430:	mov    dl,0x20
   140002432:	mov    rdi,rax
   140002435:	call   QWORD PTR [rip+0x2948d]        # 0x14002b8c8
   14000243b:	lea    r8,[rsp+0x90]
   140002443:	movzx  ecx,WORD PTR [rax]
   140002446:	lea    rdx,[rsp+0x80]
   14000244e:	mov    r9d,0xfffffffb
   140002454:	mov    WORD PTR [rsp+0x20],cx
   140002459:	lea    rcx,[rsp+0x58]
   14000245e:	call   QWORD PTR [rip+0x28d84]        # 0x14002b1e8
   140002464:	lea    r8,[rsp+0x98]
   14000246c:	lea    rdx,[rsp+0x88]
   140002474:	mov    rcx,rax
   140002477:	movzx  eax,WORD PTR [rdi]
   14000247a:	xor    r9d,r9d
   14000247d:	mov    WORD PTR [rsp+0x20],ax
   140002482:	call   QWORD PTR [rip+0x28d60]        # 0x14002b1e8
   140002488:	lea    rcx,[rsp+0x50]
   14000248d:	mov    rdx,rax
   140002490:	call   QWORD PTR [rip+0x28d4a]        # 0x14002b1e0
   140002496:	lea    rcx,[rsp+0x88]
   14000249e:	call   QWORD PTR [rip+0x293f4]        # 0x14002b898
   1400024a4:	lea    rcx,[rsp+0x80]
   1400024ac:	call   QWORD PTR [rip+0x293e6]        # 0x14002b898
   1400024b2:	mov    eax,DWORD PTR [rsp+0x38]
   1400024b6:	dec    eax
   1400024b8:	mov    DWORD PTR [rsp+0x38],eax
   1400024bc:	jmp    0x140002410
   1400024c1:	lea    rcx,[rsp+0x98]
   1400024c9:	call   QWORD PTR [rip+0x293c9]        # 0x14002b898
   1400024cf:	lea    rcx,[rsp+0x90]
   1400024d7:	call   QWORD PTR [rip+0x293bb]        # 0x14002b898
   1400024dd:	mov    rcx,QWORD PTR [rsp+0x40]
   1400024e2:	mov    rdi,QWORD PTR [rsp+0x48]
   1400024e7:	mov    edx,DWORD PTR [rsp+0x38]
   1400024eb:	add    rcx,0x8
   1400024ef:	mov    QWORD PTR [rsp+0x40],rcx
   1400024f4:	jmp    0x1400023a0
   1400024f9:	mov    rsi,QWORD PTR [rsp+0x30]
   1400024fe:	mov    eax,DWORD PTR [rsi]
   140002500:	test   eax,eax
   140002502:	je     0x140002519
   140002504:	cmp    eax,0xffffffff
   140002507:	je     0x14000257e
   140002509:	lock add DWORD PTR [rsi],0xffffffff
   14000250d:	setne  al
   140002510:	test   al,al
   140002512:	jne    0x14000257e
   140002514:	mov    rsi,QWORD PTR [rsp+0x30]
   140002519:	movsxd rax,DWORD PTR [rsi+0xc]
   14000251d:	mov    QWORD PTR [rsp+0xf0],rbp
   140002525:	lea    rbx,[rsi+rax*8+0x10]
   14000252a:	movsxd rax,DWORD PTR [rsi+0x8]
   14000252e:	lea    rbp,[rsi+rax*8+0x10]
   140002533:	cmp    rbp,rbx
   140002536:	je     0x14000256d
   140002538:	nop    DWORD PTR [rax+rax*1+0x0]
   140002540:	mov    rdi,QWORD PTR [rbx-0x8]
   140002544:	sub    rbx,0x8
   140002548:	test   rdi,rdi
   14000254b:	je     0x140002568
   14000254d:	lea    rcx,[rdi+0x8]
   140002551:	call   QWORD PTR [rip+0x29341]        # 0x14002b898
   140002557:	mov    rcx,rdi
   14000255a:	call   QWORD PTR [rip+0x29338]        # 0x14002b898
   140002560:	mov    rcx,rdi
   140002563:	call   0x140029524
   140002568:	cmp    rbx,rbp
   14000256b:	jne    0x140002540
   14000256d:	mov    rcx,rsi
   140002570:	call   QWORD PTR [rip+0x292fa]        # 0x14002b870
   140002576:	mov    rbp,QWORD PTR [rsp+0xf0]
   14000257e:	lea    r8,[rip+0x2953b]        # 0x14002bac0
   140002585:	lea    rdx,[rip+0x294f4]        # 0x14002ba80
   14000258c:	lea    rcx,[rsp+0x60]
   140002591:	xor    r9d,r9d
   140002594:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000259c:	call   QWORD PTR [rip+0x29306]        # 0x14002b8a8
   1400025a2:	lea    rcx,[rsp+0x108]
   1400025aa:	mov    dl,0x20
   1400025ac:	call   QWORD PTR [rip+0x29316]        # 0x14002b8c8
   1400025b2:	lea    r8,[rsp+0x50]
   1400025b7:	lea    rdx,[rsp+0x70]
   1400025bc:	movzx  eax,WORD PTR [rax]
   1400025bf:	lea    rcx,[rsp+0x60]
   1400025c4:	xor    r9d,r9d
   1400025c7:	mov    WORD PTR [rsp+0x20],ax
   1400025cc:	call   QWORD PTR [rip+0x28c16]        # 0x14002b1e8
   1400025d2:	lea    rdx,[rsp+0xb8]
   1400025da:	mov    rcx,rax
   1400025dd:	call   QWORD PTR [rip+0x28bf5]        # 0x14002b1d8
   1400025e3:	mov    rcx,rax
   1400025e6:	call   QWORD PTR [rip+0x28be4]        # 0x14002b1d0
   1400025ec:	mov    rcx,QWORD PTR [rip+0x28a85]        # 0x14002b078
   1400025f3:	mov    rdx,rax
   1400025f6:	call   0x140001090
   1400025fb:	lea    rcx,[rsp+0xb8]
   140002603:	call   QWORD PTR [rip+0x28bbf]        # 0x14002b1c8
   140002609:	lea    rcx,[rsp+0x70]
   14000260e:	call   QWORD PTR [rip+0x29284]        # 0x14002b898
   140002614:	lea    rcx,[rsp+0x60]
   140002619:	call   QWORD PTR [rip+0x29279]        # 0x14002b898
   14000261f:	lea    rcx,[rsp+0x58]
   140002624:	call   QWORD PTR [rip+0x2926e]        # 0x14002b898
   14000262a:	lea    rcx,[rsp+0x50]
   14000262f:	call   QWORD PTR [rip+0x29263]        # 0x14002b898
   140002635:	mov    eax,0x1
   14000263a:	add    rsp,0xd0
   140002641:	pop    rdi
   140002642:	pop    rsi
   140002643:	pop    rbx
   140002644:	ret    
   140002645:	int3   
   140002646:	int3   
   140002647:	int3   
   140002648:	int3   
   140002649:	int3   
   14000264a:	int3   
   14000264b:	int3   
   14000264c:	int3   
   14000264d:	int3   
   14000264e:	int3   
   14000264f:	int3   
   140002650:	mov    QWORD PTR [rsp+0x8],rbx
   140002655:	push   rdi
   140002656:	sub    rsp,0x20
   14000265a:	mov    rbx,rcx
   14000265d:	mov    rcx,QWORD PTR [rcx]
   140002660:	movsxd rdi,edx
   140002663:	mov    eax,DWORD PTR [rcx]
   140002665:	cmp    eax,0x1
   140002668:	je     0x140002679
   14000266a:	test   eax,eax
   14000266c:	je     0x140002679
   14000266e:	mov    edx,DWORD PTR [rcx+0x4]
   140002671:	mov    rcx,rbx
   140002674:	call   0x140001cd0
   140002679:	mov    rdx,QWORD PTR [rbx]
   14000267c:	mov    rbx,QWORD PTR [rsp+0x30]
   140002681:	movsxd rcx,DWORD PTR [rdx+0x8]
   140002685:	add    rcx,rdi
   140002688:	lea    rax,[rdx+rcx*8+0x10]
   14000268d:	add    rsp,0x20
   140002691:	pop    rdi
   140002692:	ret    
   140002693:	int3   
   140002694:	int3   
   140002695:	int3   
   140002696:	int3   
   140002697:	int3   
   140002698:	int3   
   140002699:	int3   
   14000269a:	int3   
   14000269b:	int3   
   14000269c:	int3   
   14000269d:	int3   
   14000269e:	int3   
   14000269f:	int3   
   1400026a0:	cmp    rdx,r8
   1400026a3:	je     0x1400026fd
   1400026a5:	mov    QWORD PTR [rsp+0x8],rbx
   1400026aa:	mov    QWORD PTR [rsp+0x10],rsi
   1400026af:	push   rdi
   1400026b0:	sub    rsp,0x20
   1400026b4:	mov    rdi,r9
   1400026b7:	mov    rsi,r8
   1400026ba:	mov    rbx,rdx
   1400026bd:	nop    DWORD PTR [rax]
   1400026c0:	mov    ecx,0x78
   1400026c5:	call   0x14002952a
   1400026ca:	test   rax,rax
   1400026cd:	je     0x1400026dc
   1400026cf:	mov    rdx,QWORD PTR [rdi]
   1400026d2:	mov    rcx,rax
   1400026d5:	call   0x1400020d0
   1400026da:	jmp    0x1400026de
   1400026dc:	xor    eax,eax
   1400026de:	mov    QWORD PTR [rbx],rax
   1400026e1:	add    rbx,0x8
   1400026e5:	add    rdi,0x8
   1400026e9:	cmp    rbx,rsi
   1400026ec:	jne    0x1400026c0
   1400026ee:	mov    rbx,QWORD PTR [rsp+0x30]
   1400026f3:	mov    rsi,QWORD PTR [rsp+0x38]
   1400026f8:	add    rsp,0x20
   1400026fc:	pop    rdi
   1400026fd:	repz ret 
   1400026ff:	int3   
   140002700:	mov    QWORD PTR [rsp+0x10],rbx
   140002705:	mov    QWORD PTR [rsp+0x18],rbp
   14000270a:	push   rsi
   14000270b:	sub    rsp,0x20
   14000270f:	movsxd rax,DWORD PTR [rdx+0xc]
   140002713:	mov    rbp,rdx
   140002716:	lea    rbx,[rdx+rax*8+0x10]
   14000271b:	movsxd rax,DWORD PTR [rdx+0x8]
   14000271f:	lea    rsi,[rdx+rax*8+0x10]
   140002724:	cmp    rsi,rbx
   140002727:	je     0x140002757
   140002729:	mov    QWORD PTR [rsp+0x30],rdi
   14000272e:	xchg   ax,ax
   140002730:	mov    rdi,QWORD PTR [rbx-0x8]
   140002734:	sub    rbx,0x8
   140002738:	test   rdi,rdi
   14000273b:	je     0x14000274d
   14000273d:	mov    rcx,rdi
   140002740:	call   0x140001ea0
   140002745:	mov    rcx,rdi
   140002748:	call   0x140029524
   14000274d:	cmp    rbx,rsi
   140002750:	jne    0x140002730
   140002752:	mov    rdi,QWORD PTR [rsp+0x30]
   140002757:	mov    rcx,rbp
   14000275a:	mov    rbx,QWORD PTR [rsp+0x38]
   14000275f:	mov    rbp,QWORD PTR [rsp+0x40]
   140002764:	add    rsp,0x20
   140002768:	pop    rsi
   140002769:	rex.W jmp QWORD PTR [rip+0x29100]        # 0x14002b870
   140002770:	mov    QWORD PTR [rsp+0x8],rbx
   140002775:	mov    QWORD PTR [rsp+0x10],rbp
   14000277a:	mov    QWORD PTR [rsp+0x18],rsi
   14000277f:	mov    QWORD PTR [rsp+0x20],rdi
   140002784:	push   r12
   140002786:	sub    rsp,0x20
   14000278a:	mov    r8,QWORD PTR [rcx]
   14000278d:	mov    r12,rcx
   140002790:	movsxd rax,DWORD PTR [r8+0x8]
   140002794:	lea    rdi,[r8+rax*8+0x10]
   140002799:	call   QWORD PTR [rip+0x290b9]        # 0x14002b858
   14000279f:	mov    r8,QWORD PTR [r12]
   1400027a3:	movsxd rdx,DWORD PTR [r8+0xc]
   1400027a7:	mov    rsi,rax
   1400027aa:	lea    rbp,[r8+rdx*8+0x10]
   1400027af:	movsxd rdx,DWORD PTR [r8+0x8]
   1400027b3:	lea    rbx,[r8+rdx*8+0x10]
   1400027b8:	cmp    rbx,rbp
   1400027bb:	je     0x1400027ee
   1400027bd:	nop    DWORD PTR [rax]
   1400027c0:	mov    ecx,0x78
   1400027c5:	call   0x14002952a
   1400027ca:	test   rax,rax
   1400027cd:	je     0x1400027dc
   1400027cf:	mov    rdx,QWORD PTR [rdi]
   1400027d2:	mov    rcx,rax
   1400027d5:	call   0x1400020d0
   1400027da:	jmp    0x1400027de
   1400027dc:	xor    eax,eax
   1400027de:	mov    QWORD PTR [rbx],rax
   1400027e1:	add    rbx,0x8
   1400027e5:	add    rdi,0x8
   1400027e9:	cmp    rbx,rbp
   1400027ec:	jne    0x1400027c0
   1400027ee:	mov    eax,DWORD PTR [rsi]
   1400027f0:	test   eax,eax
   1400027f2:	je     0x140002804
   1400027f4:	cmp    eax,0xffffffff
   1400027f7:	je     0x14000280f
   1400027f9:	lock add DWORD PTR [rsi],0xffffffff
   1400027fd:	setne  al
   140002800:	test   al,al
   140002802:	jne    0x14000280f
   140002804:	mov    rdx,rsi
   140002807:	mov    rcx,r12
   14000280a:	call   0x140002700
   14000280f:	mov    rbx,QWORD PTR [rsp+0x30]
   140002814:	mov    rbp,QWORD PTR [rsp+0x38]
   140002819:	mov    rsi,QWORD PTR [rsp+0x40]
   14000281e:	mov    rdi,QWORD PTR [rsp+0x48]
   140002823:	add    rsp,0x20
   140002827:	pop    r12
   140002829:	ret    
   14000282a:	int3   
   14000282b:	int3   
   14000282c:	int3   
   14000282d:	int3   
   14000282e:	int3   
   14000282f:	int3   
   140002830:	mov    QWORD PTR [rsp+0x8],rbx
   140002835:	push   rdi
   140002836:	sub    rsp,0x20
   14000283a:	mov    rbx,rcx
   14000283d:	mov    rcx,QWORD PTR [rcx+0x48]
   140002841:	mov    eax,DWORD PTR [rcx+0x10]
   140002844:	test   eax,eax
   140002846:	je     0x140002859
   140002848:	cmp    eax,0xffffffff
   14000284b:	je     0x14000286a
   14000284d:	lock add DWORD PTR [rcx+0x10],0xffffffff
   140002852:	setne  al
   140002855:	test   al,al
   140002857:	jne    0x14000286a
   140002859:	mov    rcx,QWORD PTR [rbx+0x48]
   14000285d:	lea    rdx,[rip+0xfffffffffffff35c]        # 0x140001bc0
   140002864:	call   QWORD PTR [rip+0x28ffe]        # 0x14002b868
   14000286a:	mov    rcx,QWORD PTR [rbx+0x40]
   14000286e:	mov    eax,DWORD PTR [rcx+0x10]
   140002871:	test   eax,eax
   140002873:	je     0x140002886
   140002875:	cmp    eax,0xffffffff
   140002878:	je     0x140002897
   14000287a:	lock add DWORD PTR [rcx+0x10],0xffffffff
   14000287f:	setne  al
   140002882:	test   al,al
   140002884:	jne    0x140002897
   140002886:	mov    rcx,QWORD PTR [rbx+0x40]
   14000288a:	lea    rdx,[rip+0xffffffffffffecbf]        # 0x140001550
   140002891:	call   QWORD PTR [rip+0x28fd1]        # 0x14002b868
   140002897:	mov    rcx,QWORD PTR [rbx+0x38]
   14000289b:	mov    eax,DWORD PTR [rcx+0x10]
   14000289e:	test   eax,eax
   1400028a0:	je     0x1400028b3
   1400028a2:	cmp    eax,0xffffffff
   1400028a5:	je     0x1400028c4
   1400028a7:	lock add DWORD PTR [rcx+0x10],0xffffffff
   1400028ac:	setne  al
   1400028af:	test   al,al
   1400028b1:	jne    0x1400028c4
   1400028b3:	mov    rcx,QWORD PTR [rbx+0x38]
   1400028b7:	lea    rdx,[rip+0xffffffffffffec92]        # 0x140001550
   1400028be:	call   QWORD PTR [rip+0x28fa4]        # 0x14002b868
   1400028c4:	mov    rcx,QWORD PTR [rbx+0x28]
   1400028c8:	mov    eax,DWORD PTR [rcx+0x10]
   1400028cb:	test   eax,eax
   1400028cd:	je     0x1400028e0
   1400028cf:	cmp    eax,0xffffffff
   1400028d2:	je     0x1400028f1
   1400028d4:	lock add DWORD PTR [rcx+0x10],0xffffffff
   1400028d9:	setne  al
   1400028dc:	test   al,al
   1400028de:	jne    0x1400028f1
   1400028e0:	mov    rcx,QWORD PTR [rbx+0x28]
   1400028e4:	lea    rdx,[rip+0xffffffffffffeb25]        # 0x140001410
   1400028eb:	call   QWORD PTR [rip+0x28f77]        # 0x14002b868
   1400028f1:	lea    rcx,[rbx+0x20]
   1400028f5:	call   0x1400017b0
   1400028fa:	lea    rcx,[rbx+0x18]
   1400028fe:	call   QWORD PTR [rip+0x28f94]        # 0x14002b898
   140002904:	lea    rcx,[rbx+0x10]
   140002908:	call   QWORD PTR [rip+0x28f8a]        # 0x14002b898
   14000290e:	mov    r11,QWORD PTR [rbx]
   140002911:	mov    eax,DWORD PTR [r11]
   140002914:	test   eax,eax
   140002916:	je     0x140002929
   140002918:	cmp    eax,0xffffffff
   14000291b:	je     0x140002934
   14000291d:	lock add DWORD PTR [r11],0xffffffff
   140002922:	setne  al
   140002925:	test   al,al
   140002927:	jne    0x140002934
   140002929:	mov    rdx,QWORD PTR [rbx]
   14000292c:	mov    rcx,rbx
   14000292f:	call   0x140002700
   140002934:	mov    rbx,QWORD PTR [rsp+0x30]
   140002939:	add    rsp,0x20
   14000293d:	pop    rdi
   14000293e:	ret    
   14000293f:	int3   
   140002940:	mov    QWORD PTR [rsp+0x10],rbx
   140002945:	mov    DWORD PTR [rsp+0x8],ecx
   140002949:	push   rbp
   14000294a:	push   rsi
   14000294b:	push   rdi
   14000294c:	push   r12
   14000294e:	push   r13
   140002950:	push   r14
   140002952:	push   r15
   140002954:	sub    rsp,0x560
   14000295b:	mov    r8,rdx
   14000295e:	lea    rcx,[rsp+0x68]
   140002963:	lea    rdx,[rsp+0x5a0]
   14000296b:	mov    r9d,0x50602
   140002971:	call   QWORD PTR [rip+0x288c9]        # 0x14002b240
   140002977:	lea    rcx,[rsp+0x28]
   14000297c:	call   QWORD PTR [rip+0x288b6]        # 0x14002b238
   140002982:	mov    rdx,QWORD PTR [rip+0x28eff]        # 0x14002b888
   140002989:	lea    rbx,[rip+0x29be0]        # 0x14002c570
   140002990:	xor    eax,eax
   140002992:	mov    QWORD PTR [rsp+0x30],rdx
   140002997:	or     r13,0xffffffffffffffff
   14000299b:	mov    rdi,rbx
   14000299e:	mov    rcx,r13
   1400029a1:	mov    QWORD PTR [rsp+0x88],rbx
   1400029a9:	repnz scas al,BYTE PTR es:[rdi]
   1400029ab:	lea    rdx,[rsp+0x520]
   1400029b3:	not    rcx
   1400029b6:	dec    rcx
   1400029b9:	mov    DWORD PTR [rsp+0x80],ecx
   1400029c0:	lea    rcx,[rsp+0x50]
   1400029c5:	movaps xmm0,XMMWORD PTR [rsp+0x80]
   1400029cd:	movdqa XMMWORD PTR [rsp+0x520],xmm0
   1400029d6:	call   QWORD PTR [rip+0x28e84]        # 0x14002b860
   1400029dc:	lea    rcx,[rsp+0x58]
   1400029e1:	call   QWORD PTR [rip+0x28ea9]        # 0x14002b890
   1400029e7:	xor    eax,eax
   1400029e9:	mov    rcx,r13
   1400029ec:	mov    rdi,rbx
   1400029ef:	mov    QWORD PTR [rsp+0x88],rbx
   1400029f7:	lea    rdx,[rsp+0x510]
   1400029ff:	repnz scas al,BYTE PTR es:[rdi]
   140002a01:	not    rcx
   140002a04:	dec    rcx
   140002a07:	mov    DWORD PTR [rsp+0x80],ecx
   140002a0e:	lea    rcx,[rsp+0x60]
   140002a13:	movaps xmm0,XMMWORD PTR [rsp+0x80]
   140002a1b:	movdqa XMMWORD PTR [rsp+0x510],xmm0
   140002a24:	call   QWORD PTR [rip+0x28e36]        # 0x14002b860
   140002a2a:	lea    rcx,[rsp+0x40]
   140002a2f:	call   QWORD PTR [rip+0x28e5b]        # 0x14002b890
   140002a35:	lea    rcx,[rsp+0x48]
   140002a3a:	call   QWORD PTR [rip+0x28e50]        # 0x14002b890
   140002a40:	xor    sil,sil
   140002a43:	lea    rcx,[rsp+0x160]
   140002a4b:	xor    bpl,bpl
   140002a4e:	xor    r12b,r12b
   140002a51:	xor    ebx,ebx
   140002a53:	mov    BYTE PTR [rsp+0x3d],0x0
   140002a58:	mov    BYTE PTR [rsp+0x5b0],sil
   140002a60:	mov    BYTE PTR [rsp+0x3c],sil
   140002a65:	mov    BYTE PTR [rsp+0x5b8],bpl
   140002a6d:	mov    BYTE PTR [rsp+0x20],r12b
   140002a72:	mov    DWORD PTR [rsp+0x38],ebx
   140002a76:	call   0x1400021e0
   140002a7b:	lea    rcx,[rsp+0xc0]
   140002a83:	call   0x1400088c0
   140002a88:	mov    r8,QWORD PTR [rsp+0x28]
   140002a8d:	mov    r15d,0x1
   140002a93:	mov    edx,DWORD PTR [r8+0x8]
   140002a97:	mov    eax,DWORD PTR [r8+0xc]
   140002a9b:	mov    r14d,r15d
   140002a9e:	sub    eax,edx
   140002aa0:	cmp    eax,r15d
   140002aa3:	jle    0x140003cc4
   140002aa9:	xor    eax,eax
   140002aab:	lea    r9,[rip+0x29aba]        # 0x14002c56c
   140002ab2:	mov    rcx,r13
   140002ab5:	mov    rdi,r9
   140002ab8:	mov    QWORD PTR [rsp+0x338],r9
   140002ac0:	lea    rbx,[rip+0x29aa1]        # 0x14002c568
   140002ac7:	repnz scas al,BYTE PTR es:[rdi]
   140002ac9:	mov    eax,DWORD PTR [r8]
   140002acc:	not    rcx
   140002acf:	dec    rcx
   140002ad2:	mov    DWORD PTR [rsp+0x330],ecx
   140002ad9:	movaps xmm0,XMMWORD PTR [rsp+0x330]
   140002ae1:	movdqa XMMWORD PTR [rsp+0x530],xmm0
   140002aea:	cmp    eax,r15d
   140002aed:	je     0x140002bb7
   140002af3:	test   eax,eax
   140002af5:	je     0x140002bb7
   140002afb:	movsxd rax,edx
   140002afe:	mov    edx,DWORD PTR [r8+0x4]
   140002b02:	lea    rcx,[rsp+0x28]
   140002b07:	lea    rbx,[r8+rax*8+0x10]
   140002b0c:	call   QWORD PTR [rip+0x28d46]        # 0x14002b858
   140002b12:	mov    r8,QWORD PTR [rsp+0x28]
   140002b17:	mov    rbp,rax
   140002b1a:	movsxd rax,DWORD PTR [r8+0xc]
   140002b1e:	lea    rsi,[r8+rax*8+0x10]
   140002b23:	movsxd rax,DWORD PTR [r8+0x8]
   140002b27:	lea    rdi,[r8+rax*8+0x10]
   140002b2c:	cmp    rdi,rsi
   140002b2f:	je     0x140002b54
   140002b31:	test   rdi,rdi
   140002b34:	je     0x140002b42
   140002b36:	mov    rdx,rbx
   140002b39:	mov    rcx,rdi
   140002b3c:	call   QWORD PTR [rip+0x28d5e]        # 0x14002b8a0
   140002b42:	add    rdi,0x8
   140002b46:	add    rbx,0x8
   140002b4a:	cmp    rdi,rsi
   140002b4d:	jne    0x140002b31
   140002b4f:	mov    r8,QWORD PTR [rsp+0x28]
   140002b54:	mov    eax,DWORD PTR [rbp+0x0]
   140002b57:	test   eax,eax
   140002b59:	je     0x140002b72
   140002b5b:	cmp    eax,0xffffffff
   140002b5e:	je     0x140002bb0
   140002b60:	mov    eax,r13d
   140002b63:	lock xadd DWORD PTR [rbp+0x0],eax
   140002b68:	add    eax,0xffffffff
   140002b6b:	setne  al
   140002b6e:	test   al,al
   140002b70:	jne    0x140002bab
   140002b72:	movsxd rax,DWORD PTR [rbp+0xc]
   140002b76:	lea    rdi,[rbp+rax*8+0x10]
   140002b7b:	movsxd rax,DWORD PTR [rbp+0x8]
   140002b7f:	lea    rbx,[rbp+rax*8+0x10]
   140002b84:	cmp    rbx,rdi
   140002b87:	je     0x140002ba2
   140002b89:	nop    DWORD PTR [rax+0x0]
   140002b90:	sub    rdi,0x8
   140002b94:	mov    rcx,rdi
   140002b97:	call   QWORD PTR [rip+0x28cfb]        # 0x14002b898
   140002b9d:	cmp    rdi,rbx
   140002ba0:	jne    0x140002b90
   140002ba2:	mov    rcx,rbp
   140002ba5:	call   QWORD PTR [rip+0x28cc5]        # 0x14002b870
   140002bab:	mov    r8,QWORD PTR [rsp+0x28]
   140002bb0:	lea    rbx,[rip+0x299b1]        # 0x14002c568
   140002bb7:	movsxd rax,DWORD PTR [r8+0x8]
   140002bbb:	movsxd r12,r14d
   140002bbe:	lea    rdx,[rsp+0x530]
   140002bc6:	add    rax,r12
   140002bc9:	lea    rcx,[r8+rax*8+0x10]
   140002bce:	mov    r8d,r15d
   140002bd1:	call   QWORD PTR [rip+0x28659]        # 0x14002b230
   140002bd7:	test   al,al
   140002bd9:	je     0x140002c14
   140002bdb:	mov    rax,QWORD PTR [rsp+0x28]
   140002be0:	mov    ecx,DWORD PTR [rax]
   140002be2:	cmp    ecx,r15d
   140002be5:	je     0x140002bfd
   140002be7:	test   ecx,ecx
   140002be9:	je     0x140002bfd
   140002beb:	mov    edx,DWORD PTR [rax+0x4]
   140002bee:	lea    rcx,[rsp+0x28]
   140002bf3:	call   0x140001cd0
   140002bf8:	mov    rax,QWORD PTR [rsp+0x28]
   140002bfd:	movsxd rcx,DWORD PTR [rax+0x8]
   140002c01:	mov    r8d,r15d
   140002c04:	xor    edx,edx
   140002c06:	add    rcx,r12
   140002c09:	lea    rcx,[rax+rcx*8+0x10]
   140002c0e:	call   QWORD PTR [rip+0x28614]        # 0x14002b228
   140002c14:	xor    eax,eax
   140002c16:	mov    rcx,r13
   140002c19:	mov    rdi,rbx
   140002c1c:	repnz scas al,BYTE PTR es:[rdi]
   140002c1e:	mov    rax,QWORD PTR [rsp+0x28]
   140002c23:	mov    QWORD PTR [rsp+0x348],rbx
   140002c2b:	not    rcx
   140002c2e:	dec    rcx
   140002c31:	mov    DWORD PTR [rsp+0x340],ecx
   140002c38:	mov    ecx,DWORD PTR [rax]
   140002c3a:	movaps xmm0,XMMWORD PTR [rsp+0x340]
   140002c42:	movdqa XMMWORD PTR [rsp+0x550],xmm0
   140002c4b:	cmp    ecx,r15d
   140002c4e:	je     0x140002d10
   140002c54:	test   ecx,ecx
   140002c56:	je     0x140002d10
   140002c5c:	movsxd rcx,DWORD PTR [rax+0x8]
   140002c60:	mov    edx,DWORD PTR [rax+0x4]
   140002c63:	lea    rbx,[rax+rcx*8+0x10]
   140002c68:	lea    rcx,[rsp+0x28]
   140002c6d:	call   QWORD PTR [rip+0x28be5]        # 0x14002b858
   140002c73:	mov    rbp,rax
   140002c76:	mov    rax,QWORD PTR [rsp+0x28]
   140002c7b:	movsxd rcx,DWORD PTR [rax+0xc]
   140002c7f:	lea    rsi,[rax+rcx*8+0x10]
   140002c84:	movsxd rcx,DWORD PTR [rax+0x8]
   140002c88:	lea    rdi,[rax+rcx*8+0x10]
   140002c8d:	cmp    rdi,rsi
   140002c90:	je     0x140002cb5
   140002c92:	test   rdi,rdi
   140002c95:	je     0x140002ca3
   140002c97:	mov    rdx,rbx
   140002c9a:	mov    rcx,rdi
   140002c9d:	call   QWORD PTR [rip+0x28bfd]        # 0x14002b8a0
   140002ca3:	add    rdi,0x8
   140002ca7:	add    rbx,0x8
   140002cab:	cmp    rdi,rsi
   140002cae:	jne    0x140002c92
   140002cb0:	mov    rax,QWORD PTR [rsp+0x28]
   140002cb5:	mov    ecx,DWORD PTR [rbp+0x0]
   140002cb8:	test   ecx,ecx
   140002cba:	je     0x140002cd3
   140002cbc:	cmp    ecx,0xffffffff
   140002cbf:	je     0x140002d10
   140002cc1:	mov    eax,r13d
   140002cc4:	lock xadd DWORD PTR [rbp+0x0],eax
   140002cc9:	add    eax,0xffffffff
   140002ccc:	setne  al
   140002ccf:	test   al,al
   140002cd1:	jne    0x140002d0b
   140002cd3:	movsxd rax,DWORD PTR [rbp+0xc]
   140002cd7:	lea    rdi,[rbp+rax*8+0x10]
   140002cdc:	movsxd rax,DWORD PTR [rbp+0x8]
   140002ce0:	lea    rbx,[rbp+rax*8+0x10]
   140002ce5:	cmp    rbx,rdi
   140002ce8:	je     0x140002d02
   140002cea:	nop    WORD PTR [rax+rax*1+0x0]
   140002cf0:	sub    rdi,0x8
   140002cf4:	mov    rcx,rdi
   140002cf7:	call   QWORD PTR [rip+0x28b9b]        # 0x14002b898
   140002cfd:	cmp    rdi,rbx
   140002d00:	jne    0x140002cf0
   140002d02:	mov    rcx,rbp
   140002d05:	call   QWORD PTR [rip+0x28b65]        # 0x14002b870
   140002d0b:	mov    rax,QWORD PTR [rsp+0x28]
   140002d10:	movsxd rcx,DWORD PTR [rax+0x8]
   140002d14:	lea    rdx,[rsp+0x550]
   140002d1c:	add    rcx,r12
   140002d1f:	lea    rcx,[rax+rcx*8+0x10]
   140002d24:	call   QWORD PTR [rip+0x284f6]        # 0x14002b220
   140002d2a:	test   al,al
   140002d2c:	jne    0x140003c42
   140002d32:	xor    eax,eax
   140002d34:	lea    rdx,[rip+0x2981d]        # 0x14002c558
   140002d3b:	mov    rcx,r13
   140002d3e:	mov    rdi,rdx
   140002d41:	mov    QWORD PTR [rsp+0x2b8],rdx
   140002d49:	repnz scas al,BYTE PTR es:[rdi]
   140002d4b:	mov    rax,QWORD PTR [rsp+0x28]
   140002d50:	not    rcx
   140002d53:	dec    rcx
   140002d56:	mov    DWORD PTR [rsp+0x2b0],ecx
   140002d5d:	mov    ecx,DWORD PTR [rax]
   140002d5f:	movaps xmm0,XMMWORD PTR [rsp+0x2b0]
   140002d67:	movdqa XMMWORD PTR [rsp+0x3b0],xmm0
   140002d70:	cmp    ecx,r15d
   140002d73:	je     0x140002d8b
   140002d75:	test   ecx,ecx
   140002d77:	je     0x140002d8b
   140002d79:	mov    edx,DWORD PTR [rax+0x4]
   140002d7c:	lea    rcx,[rsp+0x28]
   140002d81:	call   0x140001cd0
   140002d86:	mov    rax,QWORD PTR [rsp+0x28]
   140002d8b:	movsxd rcx,DWORD PTR [rax+0x8]
   140002d8f:	lea    rdx,[rsp+0x3b0]
   140002d97:	add    rcx,r12
   140002d9a:	lea    rcx,[rax+rcx*8+0x10]
   140002d9f:	call   QWORD PTR [rip+0x2847b]        # 0x14002b220
   140002da5:	test   al,al
   140002da7:	jne    0x140003c42
   140002dad:	xor    eax,eax
   140002daf:	lea    rdx,[rip+0x2979a]        # 0x14002c550
   140002db6:	mov    rcx,r13
   140002db9:	mov    rdi,rdx
   140002dbc:	mov    QWORD PTR [rsp+0x328],rdx
   140002dc4:	repnz scas al,BYTE PTR es:[rdi]
   140002dc6:	mov    rax,QWORD PTR [rsp+0x28]
   140002dcb:	not    rcx
   140002dce:	dec    rcx
   140002dd1:	mov    DWORD PTR [rsp+0x320],ecx
   140002dd8:	mov    ecx,DWORD PTR [rax]
   140002dda:	movaps xmm0,XMMWORD PTR [rsp+0x320]
   140002de2:	movdqa XMMWORD PTR [rsp+0x3e0],xmm0
   140002deb:	cmp    ecx,r15d
   140002dee:	je     0x140002e06
   140002df0:	test   ecx,ecx
   140002df2:	je     0x140002e06
   140002df4:	mov    edx,DWORD PTR [rax+0x4]
   140002df7:	lea    rcx,[rsp+0x28]
   140002dfc:	call   0x140001cd0
   140002e01:	mov    rax,QWORD PTR [rsp+0x28]
   140002e06:	movsxd rcx,DWORD PTR [rax+0x8]
   140002e0a:	lea    rdx,[rsp+0x3e0]
   140002e12:	add    rcx,r12
   140002e15:	lea    rcx,[rax+rcx*8+0x10]
   140002e1a:	call   QWORD PTR [rip+0x28400]        # 0x14002b220
   140002e20:	test   al,al
   140002e22:	jne    0x140003bfd
   140002e28:	xor    eax,eax
   140002e2a:	lea    rdx,[rip+0x2970f]        # 0x14002c540
   140002e31:	mov    rcx,r13
   140002e34:	mov    rdi,rdx
   140002e37:	mov    QWORD PTR [rsp+0x218],rdx
   140002e3f:	repnz scas al,BYTE PTR es:[rdi]
   140002e41:	mov    rax,QWORD PTR [rsp+0x28]
   140002e46:	not    rcx
   140002e49:	dec    rcx
   140002e4c:	mov    DWORD PTR [rsp+0x210],ecx
   140002e53:	mov    ecx,DWORD PTR [rax]
   140002e55:	movaps xmm0,XMMWORD PTR [rsp+0x210]
   140002e5d:	movdqa XMMWORD PTR [rsp+0x4a0],xmm0
   140002e66:	cmp    ecx,r15d
   140002e69:	je     0x140002e81
   140002e6b:	test   ecx,ecx
   140002e6d:	je     0x140002e81
   140002e6f:	mov    edx,DWORD PTR [rax+0x4]
   140002e72:	lea    rcx,[rsp+0x28]
   140002e77:	call   0x140001cd0
   140002e7c:	mov    rax,QWORD PTR [rsp+0x28]
   140002e81:	movsxd rcx,DWORD PTR [rax+0x8]
   140002e85:	lea    rdx,[rsp+0x4a0]
   140002e8d:	add    rcx,r12
   140002e90:	lea    rcx,[rax+rcx*8+0x10]
   140002e95:	call   QWORD PTR [rip+0x28385]        # 0x14002b220
   140002e9b:	test   al,al
   140002e9d:	jne    0x140003bfd
   140002ea3:	xor    eax,eax
   140002ea5:	lea    rdx,[rip+0x29690]        # 0x14002c53c
   140002eac:	mov    rcx,r13
   140002eaf:	mov    rdi,rdx
   140002eb2:	mov    QWORD PTR [rsp+0x318],rdx
   140002eba:	repnz scas al,BYTE PTR es:[rdi]
   140002ebc:	mov    rax,QWORD PTR [rsp+0x28]
   140002ec1:	not    rcx
   140002ec4:	dec    rcx
   140002ec7:	mov    DWORD PTR [rsp+0x310],ecx
   140002ece:	mov    ecx,DWORD PTR [rax]
   140002ed0:	movaps xmm0,XMMWORD PTR [rsp+0x310]
   140002ed8:	movdqa XMMWORD PTR [rsp+0x400],xmm0
   140002ee1:	cmp    ecx,r15d
   140002ee4:	je     0x140002efc
   140002ee6:	test   ecx,ecx
   140002ee8:	je     0x140002efc
   140002eea:	mov    edx,DWORD PTR [rax+0x4]
   140002eed:	lea    rcx,[rsp+0x28]
   140002ef2:	call   0x140001cd0
   140002ef7:	mov    rax,QWORD PTR [rsp+0x28]
   140002efc:	movsxd rcx,DWORD PTR [rax+0x8]
   140002f00:	lea    rdx,[rsp+0x400]
   140002f08:	add    rcx,r12
   140002f0b:	lea    rcx,[rax+rcx*8+0x10]
   140002f10:	call   QWORD PTR [rip+0x2830a]        # 0x14002b220
   140002f16:	test   al,al
   140002f18:	jne    0x140003ae9
   140002f1e:	xor    eax,eax
   140002f20:	lea    rdx,[rip+0x29609]        # 0x14002c530
   140002f27:	mov    rcx,r13
   140002f2a:	mov    rdi,rdx
   140002f2d:	mov    QWORD PTR [rsp+0x238],rdx
   140002f35:	repnz scas al,BYTE PTR es:[rdi]
   140002f37:	mov    rax,QWORD PTR [rsp+0x28]
   140002f3c:	not    rcx
   140002f3f:	dec    rcx
   140002f42:	mov    DWORD PTR [rsp+0x230],ecx
   140002f49:	mov    ecx,DWORD PTR [rax]
   140002f4b:	movaps xmm0,XMMWORD PTR [rsp+0x230]
   140002f53:	movdqa XMMWORD PTR [rsp+0x500],xmm0
   140002f5c:	cmp    ecx,r15d
   140002f5f:	je     0x140002f77
   140002f61:	test   ecx,ecx
   140002f63:	je     0x140002f77
   140002f65:	mov    edx,DWORD PTR [rax+0x4]
   140002f68:	lea    rcx,[rsp+0x28]
   140002f6d:	call   0x140001cd0
   140002f72:	mov    rax,QWORD PTR [rsp+0x28]
   140002f77:	movsxd rcx,DWORD PTR [rax+0x8]
   140002f7b:	lea    rdx,[rsp+0x500]
   140002f83:	add    rcx,r12
   140002f86:	lea    rcx,[rax+rcx*8+0x10]
   140002f8b:	call   QWORD PTR [rip+0x2828f]        # 0x14002b220
   140002f91:	test   al,al
   140002f93:	jne    0x140003ae9
   140002f99:	xor    eax,eax
   140002f9b:	lea    rdx,[rip+0x29586]        # 0x14002c528
   140002fa2:	mov    rcx,r13
   140002fa5:	mov    rdi,rdx
   140002fa8:	mov    QWORD PTR [rsp+0x2d8],rdx
   140002fb0:	repnz scas al,BYTE PTR es:[rdi]
   140002fb2:	mov    rax,QWORD PTR [rsp+0x28]
   140002fb7:	not    rcx
   140002fba:	dec    rcx
   140002fbd:	mov    DWORD PTR [rsp+0x2d0],ecx
   140002fc4:	mov    ecx,DWORD PTR [rax]
   140002fc6:	movaps xmm0,XMMWORD PTR [rsp+0x2d0]
   140002fce:	movdqa XMMWORD PTR [rsp+0x420],xmm0
   140002fd7:	cmp    ecx,r15d
   140002fda:	je     0x140002ff2
   140002fdc:	test   ecx,ecx
   140002fde:	je     0x140002ff2
   140002fe0:	mov    edx,DWORD PTR [rax+0x4]
   140002fe3:	lea    rcx,[rsp+0x28]
   140002fe8:	call   0x140001cd0
   140002fed:	mov    rax,QWORD PTR [rsp+0x28]
   140002ff2:	movsxd rcx,DWORD PTR [rax+0x8]
   140002ff6:	lea    rdx,[rsp+0x420]
   140002ffe:	add    rcx,r12
   140003001:	lea    rcx,[rax+rcx*8+0x10]
   140003006:	call   QWORD PTR [rip+0x28214]        # 0x14002b220
   14000300c:	test   al,al
   14000300e:	jne    0x140003aa1
   140003014:	xor    eax,eax
   140003016:	lea    rdx,[rip+0x294fb]        # 0x14002c518
   14000301d:	mov    rcx,r13
   140003020:	mov    rdi,rdx
   140003023:	mov    QWORD PTR [rsp+0x258],rdx
   14000302b:	repnz scas al,BYTE PTR es:[rdi]
   14000302d:	mov    rax,QWORD PTR [rsp+0x28]
   140003032:	not    rcx
   140003035:	dec    rcx
   140003038:	mov    DWORD PTR [rsp+0x250],ecx
   14000303f:	mov    ecx,DWORD PTR [rax]
   140003041:	movaps xmm0,XMMWORD PTR [rsp+0x250]
   140003049:	movdqa XMMWORD PTR [rsp+0x4c0],xmm0
   140003052:	cmp    ecx,r15d
   140003055:	je     0x14000306d
   140003057:	test   ecx,ecx
   140003059:	je     0x14000306d
   14000305b:	mov    edx,DWORD PTR [rax+0x4]
   14000305e:	lea    rcx,[rsp+0x28]
   140003063:	call   0x140001cd0
   140003068:	mov    rax,QWORD PTR [rsp+0x28]
   14000306d:	movsxd rcx,DWORD PTR [rax+0x8]
   140003071:	lea    rdx,[rsp+0x4c0]
   140003079:	add    rcx,r12
   14000307c:	lea    rcx,[rax+rcx*8+0x10]
   140003081:	call   QWORD PTR [rip+0x28199]        # 0x14002b220
   140003087:	test   al,al
   140003089:	jne    0x140003aa1
   14000308f:	xor    eax,eax
   140003091:	lea    rdx,[rip+0x29470]        # 0x14002c508
   140003098:	mov    rcx,r13
   14000309b:	mov    rdi,rdx
   14000309e:	mov    QWORD PTR [rsp+0x358],rdx
   1400030a6:	repnz scas al,BYTE PTR es:[rdi]
   1400030a8:	mov    rax,QWORD PTR [rsp+0x28]
   1400030ad:	not    rcx
   1400030b0:	dec    rcx
   1400030b3:	mov    DWORD PTR [rsp+0x350],ecx
   1400030ba:	mov    ecx,DWORD PTR [rax]
   1400030bc:	movaps xmm0,XMMWORD PTR [rsp+0x350]
   1400030c4:	movdqa XMMWORD PTR [rsp+0x440],xmm0
   1400030cd:	cmp    ecx,r15d
   1400030d0:	je     0x1400030e8
   1400030d2:	test   ecx,ecx
   1400030d4:	je     0x1400030e8
   1400030d6:	mov    edx,DWORD PTR [rax+0x4]
   1400030d9:	lea    rcx,[rsp+0x28]
   1400030de:	call   0x140001cd0
   1400030e3:	mov    rax,QWORD PTR [rsp+0x28]
   1400030e8:	movsxd rcx,DWORD PTR [rax+0x8]
   1400030ec:	lea    rdx,[rsp+0x440]
   1400030f4:	add    rcx,r12
   1400030f7:	lea    rcx,[rax+rcx*8+0x10]
   1400030fc:	call   QWORD PTR [rip+0x2811e]        # 0x14002b220
   140003102:	test   al,al
   140003104:	jne    0x140003a4c
   14000310a:	xor    eax,eax
   14000310c:	lea    rdx,[rip+0x293e5]        # 0x14002c4f8
   140003113:	mov    rcx,r13
   140003116:	mov    rdi,rdx
   140003119:	mov    QWORD PTR [rsp+0x278],rdx
   140003121:	repnz scas al,BYTE PTR es:[rdi]
   140003123:	mov    rax,QWORD PTR [rsp+0x28]
   140003128:	not    rcx
   14000312b:	dec    rcx
   14000312e:	mov    DWORD PTR [rsp+0x270],ecx
   140003135:	mov    ecx,DWORD PTR [rax]
   140003137:	movaps xmm0,XMMWORD PTR [rsp+0x270]
   14000313f:	movdqa XMMWORD PTR [rsp+0x540],xmm0
   140003148:	cmp    ecx,r15d
   14000314b:	je     0x140003163
   14000314d:	test   ecx,ecx
   14000314f:	je     0x140003163
   140003151:	mov    edx,DWORD PTR [rax+0x4]
   140003154:	lea    rcx,[rsp+0x28]
   140003159:	call   0x140001cd0
   14000315e:	mov    rax,QWORD PTR [rsp+0x28]
   140003163:	movsxd rcx,DWORD PTR [rax+0x8]
   140003167:	lea    rdx,[rsp+0x540]
   14000316f:	add    rcx,r12
   140003172:	lea    rcx,[rax+rcx*8+0x10]
   140003177:	call   QWORD PTR [rip+0x280a3]        # 0x14002b220
   14000317d:	test   al,al
   14000317f:	jne    0x140003a4c
   140003185:	xor    eax,eax
   140003187:	lea    rdx,[rip+0x29352]        # 0x14002c4e0
   14000318e:	mov    rcx,r13
   140003191:	mov    rdi,rdx
   140003194:	mov    QWORD PTR [rsp+0x2f8],rdx
   14000319c:	repnz scas al,BYTE PTR es:[rdi]
   14000319e:	mov    rax,QWORD PTR [rsp+0x28]
   1400031a3:	not    rcx
   1400031a6:	dec    rcx
   1400031a9:	mov    DWORD PTR [rsp+0x2f0],ecx
   1400031b0:	mov    ecx,DWORD PTR [rax]
   1400031b2:	movaps xmm0,XMMWORD PTR [rsp+0x2f0]
   1400031ba:	movdqa XMMWORD PTR [rsp+0x460],xmm0
   1400031c3:	cmp    ecx,r15d
   1400031c6:	je     0x1400031de
   1400031c8:	test   ecx,ecx
   1400031ca:	je     0x1400031de
   1400031cc:	mov    edx,DWORD PTR [rax+0x4]
   1400031cf:	lea    rcx,[rsp+0x28]
   1400031d4:	call   0x140001cd0
   1400031d9:	mov    rax,QWORD PTR [rsp+0x28]
   1400031de:	movsxd rcx,DWORD PTR [rax+0x8]
   1400031e2:	lea    rdx,[rsp+0x460]
   1400031ea:	add    rcx,r12
   1400031ed:	lea    rcx,[rax+rcx*8+0x10]
   1400031f2:	call   QWORD PTR [rip+0x28028]        # 0x14002b220
   1400031f8:	test   al,al
   1400031fa:	je     0x140003206
   1400031fc:	mov    BYTE PTR [rsp+0x3d],r15b
   140003201:	jmp    0x140003c90
   140003206:	xor    eax,eax
   140003208:	lea    rdx,[rip+0x292b9]        # 0x14002c4c8
   14000320f:	mov    rcx,r13
   140003212:	mov    rdi,rdx
   140003215:	mov    QWORD PTR [rsp+0x298],rdx
   14000321d:	repnz scas al,BYTE PTR es:[rdi]
   14000321f:	mov    rax,QWORD PTR [rsp+0x28]
   140003224:	not    rcx
   140003227:	dec    rcx
   14000322a:	mov    DWORD PTR [rsp+0x290],ecx
   140003231:	mov    ecx,DWORD PTR [rax]
   140003233:	movaps xmm0,XMMWORD PTR [rsp+0x290]
   14000323b:	movdqa XMMWORD PTR [rsp+0x4e0],xmm0
   140003244:	cmp    ecx,r15d
   140003247:	je     0x14000325f
   140003249:	test   ecx,ecx
   14000324b:	je     0x14000325f
   14000324d:	mov    edx,DWORD PTR [rax+0x4]
   140003250:	lea    rcx,[rsp+0x28]
   140003255:	call   0x140001cd0
   14000325a:	mov    rax,QWORD PTR [rsp+0x28]
   14000325f:	movsxd rcx,DWORD PTR [rax+0x8]
   140003263:	lea    rdx,[rsp+0x4e0]
   14000326b:	add    rcx,r12
   14000326e:	lea    rcx,[rax+rcx*8+0x10]
   140003273:	call   QWORD PTR [rip+0x27fa7]        # 0x14002b220
   140003279:	test   al,al
   14000327b:	je     0x1400032c5
   14000327d:	mov    rax,QWORD PTR [rsp+0x28]
   140003282:	inc    r14d
   140003285:	mov    ecx,DWORD PTR [rax+0xc]
   140003288:	sub    ecx,DWORD PTR [rax+0x8]
   14000328b:	cmp    r14d,ecx
   14000328e:	jge    0x140003e9d
   140003294:	mov    ecx,DWORD PTR [rax]
   140003296:	cmp    ecx,r15d
   140003299:	je     0x1400032b1
   14000329b:	test   ecx,ecx
   14000329d:	je     0x1400032b1
   14000329f:	mov    edx,DWORD PTR [rax+0x4]
   1400032a2:	lea    rcx,[rsp+0x28]
   1400032a7:	call   0x140001cd0
   1400032ac:	mov    rax,QWORD PTR [rsp+0x28]
   1400032b1:	movsxd rdx,DWORD PTR [rax+0x8]
   1400032b5:	movsxd rcx,r14d
   1400032b8:	add    rdx,rcx
   1400032bb:	lea    rcx,[rsp+0x40]
   1400032c0:	jmp    0x140003c85
   1400032c5:	xor    eax,eax
   1400032c7:	lea    rdx,[rip+0x291e2]        # 0x14002c4b0
   1400032ce:	mov    rcx,r13
   1400032d1:	mov    rdi,rdx
   1400032d4:	mov    QWORD PTR [rsp+0x1e8],rdx
   1400032dc:	repnz scas al,BYTE PTR es:[rdi]
   1400032de:	mov    rax,QWORD PTR [rsp+0x28]
   1400032e3:	not    rcx
   1400032e6:	dec    rcx
   1400032e9:	mov    DWORD PTR [rsp+0x1e0],ecx
   1400032f0:	mov    ecx,DWORD PTR [rax]
   1400032f2:	movaps xmm0,XMMWORD PTR [rsp+0x1e0]
   1400032fa:	movdqa XMMWORD PTR [rsp+0x480],xmm0
   140003303:	cmp    ecx,r15d
   140003306:	je     0x14000331e
   140003308:	test   ecx,ecx
   14000330a:	je     0x14000331e
   14000330c:	mov    edx,DWORD PTR [rax+0x4]
   14000330f:	lea    rcx,[rsp+0x28]
   140003314:	call   0x140001cd0
   140003319:	mov    rax,QWORD PTR [rsp+0x28]
   14000331e:	movsxd rcx,DWORD PTR [rax+0x8]
   140003322:	lea    rdx,[rsp+0x480]
   14000332a:	add    rcx,r12
   14000332d:	lea    rcx,[rax+rcx*8+0x10]
   140003332:	call   QWORD PTR [rip+0x27ee8]        # 0x14002b220
   140003338:	test   al,al
   14000333a:	je     0x140003384
   14000333c:	mov    rax,QWORD PTR [rsp+0x28]
   140003341:	inc    r14d
   140003344:	mov    ecx,DWORD PTR [rax+0xc]
   140003347:	sub    ecx,DWORD PTR [rax+0x8]
   14000334a:	cmp    r14d,ecx
   14000334d:	jge    0x140003e9d
   140003353:	mov    ecx,DWORD PTR [rax]
   140003355:	cmp    ecx,r15d
   140003358:	je     0x140003370
   14000335a:	test   ecx,ecx
   14000335c:	je     0x140003370
   14000335e:	mov    edx,DWORD PTR [rax+0x4]
   140003361:	lea    rcx,[rsp+0x28]
   140003366:	call   0x140001cd0
   14000336b:	mov    rax,QWORD PTR [rsp+0x28]
   140003370:	movsxd rdx,DWORD PTR [rax+0x8]
   140003374:	movsxd rcx,r14d
   140003377:	add    rdx,rcx
   14000337a:	lea    rcx,[rsp+0x48]
   14000337f:	jmp    0x140003c85
   140003384:	xor    eax,eax
   140003386:	lea    rdx,[rip+0x2911b]        # 0x14002c4a8
   14000338d:	mov    rcx,r13
   140003390:	mov    rdi,rdx
   140003393:	mov    QWORD PTR [rsp+0x1f8],rdx
   14000339b:	repnz scas al,BYTE PTR es:[rdi]
   14000339d:	mov    rax,QWORD PTR [rsp+0x28]
   1400033a2:	not    rcx
   1400033a5:	dec    rcx
   1400033a8:	mov    DWORD PTR [rsp+0x1f0],ecx
   1400033af:	mov    ecx,DWORD PTR [rax]
   1400033b1:	movaps xmm0,XMMWORD PTR [rsp+0x1f0]
   1400033b9:	movdqa XMMWORD PTR [rsp+0x3c0],xmm0
   1400033c2:	cmp    ecx,r15d
   1400033c5:	je     0x1400033dd
   1400033c7:	test   ecx,ecx
   1400033c9:	je     0x1400033dd
   1400033cb:	mov    edx,DWORD PTR [rax+0x4]
   1400033ce:	lea    rcx,[rsp+0x28]
   1400033d3:	call   0x140001cd0
   1400033d8:	mov    rax,QWORD PTR [rsp+0x28]
   1400033dd:	movsxd rcx,DWORD PTR [rax+0x8]
   1400033e1:	lea    rdx,[rsp+0x3c0]
   1400033e9:	mov    r8d,r15d
   1400033ec:	add    rcx,r12
   1400033ef:	lea    rcx,[rax+rcx*8+0x10]
   1400033f4:	call   QWORD PTR [rip+0x27e36]        # 0x14002b230
   1400033fa:	test   al,al
   1400033fc:	jne    0x140003f45
   140003402:	xor    eax,eax
   140003404:	lea    rdx,[rip+0x2908d]        # 0x14002c498
   14000340b:	mov    rcx,r13
   14000340e:	mov    rdi,rdx
   140003411:	mov    QWORD PTR [rsp+0x208],rdx
   140003419:	repnz scas al,BYTE PTR es:[rdi]
   14000341b:	mov    rax,QWORD PTR [rsp+0x28]
   140003420:	not    rcx
   140003423:	dec    rcx
   140003426:	mov    DWORD PTR [rsp+0x200],ecx
   14000342d:	mov    ecx,DWORD PTR [rax]
   14000342f:	movaps xmm0,XMMWORD PTR [rsp+0x200]
   140003437:	movdqa XMMWORD PTR [rsp+0x3d0],xmm0
   140003440:	cmp    ecx,r15d
   140003443:	je     0x14000345b
   140003445:	test   ecx,ecx
   140003447:	je     0x14000345b
   140003449:	mov    edx,DWORD PTR [rax+0x4]
   14000344c:	lea    rcx,[rsp+0x28]
   140003451:	call   0x140001cd0
   140003456:	mov    rax,QWORD PTR [rsp+0x28]
   14000345b:	movsxd rcx,DWORD PTR [rax+0x8]
   14000345f:	lea    rdx,[rsp+0x3d0]
   140003467:	add    rcx,r12
   14000346a:	lea    rcx,[rax+rcx*8+0x10]
   14000346f:	call   QWORD PTR [rip+0x27dab]        # 0x14002b220
   140003475:	test   al,al
   140003477:	je     0x14000348a
   140003479:	movzx  ebp,r15b
   14000347d:	mov    BYTE PTR [rsp+0x5b8],r15b
   140003485:	jmp    0x140003c98
   14000348a:	xor    eax,eax
   14000348c:	lea    rdx,[rip+0x28ff5]        # 0x14002c488
   140003493:	mov    rcx,r13
   140003496:	mov    rdi,rdx
   140003499:	mov    QWORD PTR [rsp+0x228],rdx
   1400034a1:	repnz scas al,BYTE PTR es:[rdi]
   1400034a3:	mov    rax,QWORD PTR [rsp+0x28]
   1400034a8:	not    rcx
   1400034ab:	dec    rcx
   1400034ae:	mov    DWORD PTR [rsp+0x220],ecx
   1400034b5:	mov    ecx,DWORD PTR [rax]
   1400034b7:	movaps xmm0,XMMWORD PTR [rsp+0x220]
   1400034bf:	movdqa XMMWORD PTR [rsp+0x3f0],xmm0
   1400034c8:	cmp    ecx,r15d
   1400034cb:	je     0x1400034e3
   1400034cd:	test   ecx,ecx
   1400034cf:	je     0x1400034e3
   1400034d1:	mov    edx,DWORD PTR [rax+0x4]
   1400034d4:	lea    rcx,[rsp+0x28]
   1400034d9:	call   0x140001cd0
   1400034de:	mov    rax,QWORD PTR [rsp+0x28]
   1400034e3:	movsxd rcx,DWORD PTR [rax+0x8]
   1400034e7:	lea    rdx,[rsp+0x3f0]
   1400034ef:	add    rcx,r12
   1400034f2:	lea    rcx,[rax+rcx*8+0x10]
   1400034f7:	call   QWORD PTR [rip+0x27d23]        # 0x14002b220
   1400034fd:	test   al,al
   1400034ff:	je     0x140003517
   140003501:	mov    bpl,BYTE PTR [rsp+0x5b8]
   140003509:	movzx  r12d,r15b
   14000350d:	mov    BYTE PTR [rsp+0x20],r15b
   140003512:	jmp    0x140003c9d
   140003517:	xor    eax,eax
   140003519:	lea    rdx,[rip+0x28f58]        # 0x14002c478
   140003520:	mov    rcx,r13
   140003523:	mov    rdi,rdx
   140003526:	mov    QWORD PTR [rsp+0x248],rdx
   14000352e:	repnz scas al,BYTE PTR es:[rdi]
   140003530:	mov    rax,QWORD PTR [rsp+0x28]
   140003535:	not    rcx
   140003538:	dec    rcx
   14000353b:	mov    DWORD PTR [rsp+0x240],ecx
   140003542:	mov    ecx,DWORD PTR [rax]
   140003544:	movaps xmm0,XMMWORD PTR [rsp+0x240]
   14000354c:	movdqa XMMWORD PTR [rsp+0x410],xmm0
   140003555:	cmp    ecx,r15d
   140003558:	je     0x140003570
   14000355a:	test   ecx,ecx
   14000355c:	je     0x140003570
   14000355e:	mov    edx,DWORD PTR [rax+0x4]
   140003561:	lea    rcx,[rsp+0x28]
   140003566:	call   0x140001cd0
   14000356b:	mov    rax,QWORD PTR [rsp+0x28]
   140003570:	movsxd rcx,DWORD PTR [rax+0x8]
   140003574:	lea    rdx,[rsp+0x410]
   14000357c:	add    rcx,r12
   14000357f:	lea    rcx,[rax+rcx*8+0x10]
   140003584:	call   QWORD PTR [rip+0x27c96]        # 0x14002b220
   14000358a:	test   al,al
   14000358c:	je     0x14000359b
   14000358e:	mov    BYTE PTR [rsp+0x1ca],r15b
   140003596:	jmp    0x140003c90
   14000359b:	xor    eax,eax
   14000359d:	lea    rdx,[rip+0x28ec4]        # 0x14002c468
   1400035a4:	mov    rcx,r13
   1400035a7:	mov    rdi,rdx
   1400035aa:	mov    QWORD PTR [rsp+0x268],rdx
   1400035b2:	repnz scas al,BYTE PTR es:[rdi]
   1400035b4:	mov    rax,QWORD PTR [rsp+0x28]
   1400035b9:	not    rcx
   1400035bc:	dec    rcx
   1400035bf:	mov    DWORD PTR [rsp+0x260],ecx
   1400035c6:	mov    ecx,DWORD PTR [rax]
   1400035c8:	movaps xmm0,XMMWORD PTR [rsp+0x260]
   1400035d0:	movdqa XMMWORD PTR [rsp+0x430],xmm0
   1400035d9:	cmp    ecx,r15d
   1400035dc:	je     0x1400035f4
   1400035de:	test   ecx,ecx
   1400035e0:	je     0x1400035f4
   1400035e2:	mov    edx,DWORD PTR [rax+0x4]
   1400035e5:	lea    rcx,[rsp+0x28]
   1400035ea:	call   0x140001cd0
   1400035ef:	mov    rax,QWORD PTR [rsp+0x28]
   1400035f4:	movsxd rcx,DWORD PTR [rax+0x8]
   1400035f8:	lea    rdx,[rsp+0x430]
   140003600:	add    rcx,r12
   140003603:	lea    rcx,[rax+rcx*8+0x10]
   140003608:	call   QWORD PTR [rip+0x27c12]        # 0x14002b220
   14000360e:	test   al,al
   140003610:	je     0x1400037e3
   140003616:	mov    rdx,QWORD PTR [rsp+0x28]
   14000361b:	inc    r14d
   14000361e:	mov    eax,DWORD PTR [rdx+0xc]
   140003621:	sub    eax,DWORD PTR [rdx+0x8]
   140003624:	cmp    r14d,eax
   140003627:	jge    0x140003e9d
   14000362d:	xor    eax,eax
   14000362f:	lea    r8,[rip+0x28e26]        # 0x14002c45c
   140003636:	mov    rcx,r13
   140003639:	mov    rdi,r8
   14000363c:	mov    QWORD PTR [rsp+0x288],r8
   140003644:	repnz scas al,BYTE PTR es:[rdi]
   140003646:	mov    eax,DWORD PTR [rdx]
   140003648:	not    rcx
   14000364b:	dec    rcx
   14000364e:	mov    DWORD PTR [rsp+0x280],ecx
   140003655:	movaps xmm0,XMMWORD PTR [rsp+0x280]
   14000365d:	movdqa XMMWORD PTR [rsp+0x450],xmm0
   140003666:	cmp    eax,r15d
   140003669:	je     0x140003681
   14000366b:	test   eax,eax
   14000366d:	je     0x140003681
   14000366f:	mov    edx,DWORD PTR [rdx+0x4]
   140003672:	lea    rcx,[rsp+0x28]
   140003677:	call   0x140001cd0
   14000367c:	mov    rdx,QWORD PTR [rsp+0x28]
   140003681:	movsxd rax,DWORD PTR [rdx+0x8]
   140003685:	movsxd rbx,r14d
   140003688:	add    rax,rbx
   14000368b:	lea    rcx,[rdx+rax*8+0x10]
   140003690:	lea    rdx,[rsp+0x450]
   140003698:	call   QWORD PTR [rip+0x27b82]        # 0x14002b220
   14000369e:	test   al,al
   1400036a0:	je     0x1400036bb
   1400036a2:	mov    bpl,BYTE PTR [rsp+0x5b8]
   1400036aa:	mov    r12b,BYTE PTR [rsp+0x20]
   1400036af:	mov    ebx,r15d
   1400036b2:	mov    DWORD PTR [rsp+0x38],ebx
   1400036b6:	jmp    0x140003ca1
   1400036bb:	xor    eax,eax
   1400036bd:	lea    rdx,[rip+0x28d8c]        # 0x14002c450
   1400036c4:	mov    rcx,r13
   1400036c7:	mov    rdi,rdx
   1400036ca:	mov    QWORD PTR [rsp+0x2a8],rdx
   1400036d2:	repnz scas al,BYTE PTR es:[rdi]
   1400036d4:	mov    rax,QWORD PTR [rsp+0x28]
   1400036d9:	not    rcx
   1400036dc:	dec    rcx
   1400036df:	mov    DWORD PTR [rsp+0x2a0],ecx
   1400036e6:	mov    ecx,DWORD PTR [rax]
   1400036e8:	movaps xmm0,XMMWORD PTR [rsp+0x2a0]
   1400036f0:	movdqa XMMWORD PTR [rsp+0x470],xmm0
   1400036f9:	cmp    ecx,r15d
   1400036fc:	je     0x140003714
   1400036fe:	test   ecx,ecx
   140003700:	je     0x140003714
   140003702:	mov    edx,DWORD PTR [rax+0x4]
   140003705:	lea    rcx,[rsp+0x28]
   14000370a:	call   0x140001cd0
   14000370f:	mov    rax,QWORD PTR [rsp+0x28]
   140003714:	movsxd rcx,DWORD PTR [rax+0x8]
   140003718:	lea    rdx,[rsp+0x470]
   140003720:	add    rcx,rbx
   140003723:	lea    rcx,[rax+rcx*8+0x10]
   140003728:	call   QWORD PTR [rip+0x27af2]        # 0x14002b220
   14000372e:	test   al,al
   140003730:	je     0x14000374d
   140003732:	mov    bpl,BYTE PTR [rsp+0x5b8]
   14000373a:	mov    r12b,BYTE PTR [rsp+0x20]
   14000373f:	mov    ebx,0x2
   140003744:	mov    DWORD PTR [rsp+0x38],ebx
   140003748:	jmp    0x140003ca1
   14000374d:	xor    eax,eax
   14000374f:	lea    rdx,[rip+0x28cea]        # 0x14002c440
   140003756:	mov    rcx,r13
   140003759:	mov    rdi,rdx
   14000375c:	mov    QWORD PTR [rsp+0x2c8],rdx
   140003764:	repnz scas al,BYTE PTR es:[rdi]
   140003766:	mov    rax,QWORD PTR [rsp+0x28]
   14000376b:	not    rcx
   14000376e:	dec    rcx
   140003771:	mov    DWORD PTR [rsp+0x2c0],ecx
   140003778:	mov    ecx,DWORD PTR [rax]
   14000377a:	movaps xmm0,XMMWORD PTR [rsp+0x2c0]
   140003782:	movdqa XMMWORD PTR [rsp+0x490],xmm0
   14000378b:	cmp    ecx,r15d
   14000378e:	je     0x1400037a6
   140003790:	test   ecx,ecx
   140003792:	je     0x1400037a6
   140003794:	mov    edx,DWORD PTR [rax+0x4]
   140003797:	lea    rcx,[rsp+0x28]
   14000379c:	call   0x140001cd0
   1400037a1:	mov    rax,QWORD PTR [rsp+0x28]
   1400037a6:	movsxd rcx,DWORD PTR [rax+0x8]
   1400037aa:	lea    rdx,[rsp+0x490]
   1400037b2:	add    rcx,rbx
   1400037b5:	lea    rcx,[rax+rcx*8+0x10]
   1400037ba:	call   QWORD PTR [rip+0x27a60]        # 0x14002b220
   1400037c0:	test   al,al
   1400037c2:	je     0x140003e9d
   1400037c8:	mov    bpl,BYTE PTR [rsp+0x5b8]
   1400037d0:	mov    r12b,BYTE PTR [rsp+0x20]
   1400037d5:	mov    ebx,0x3
   1400037da:	mov    DWORD PTR [rsp+0x38],ebx
   1400037de:	jmp    0x140003ca1
   1400037e3:	xor    eax,eax
   1400037e5:	lea    rdx,[rip+0x28c44]        # 0x14002c430
   1400037ec:	mov    rcx,r13
   1400037ef:	mov    rdi,rdx
   1400037f2:	mov    QWORD PTR [rsp+0x2e8],rdx
   1400037fa:	repnz scas al,BYTE PTR es:[rdi]
   1400037fc:	mov    rax,QWORD PTR [rsp+0x28]
   140003801:	not    rcx
   140003804:	dec    rcx
   140003807:	mov    DWORD PTR [rsp+0x2e0],ecx
   14000380e:	mov    ecx,DWORD PTR [rax]
   140003810:	movaps xmm0,XMMWORD PTR [rsp+0x2e0]
   140003818:	movdqa XMMWORD PTR [rsp+0x4b0],xmm0
   140003821:	cmp    ecx,r15d
   140003824:	je     0x14000383c
   140003826:	test   ecx,ecx
   140003828:	je     0x14000383c
   14000382a:	mov    edx,DWORD PTR [rax+0x4]
   14000382d:	lea    rcx,[rsp+0x28]
   140003832:	call   0x140001cd0
   140003837:	mov    rax,QWORD PTR [rsp+0x28]
   14000383c:	movsxd rcx,DWORD PTR [rax+0x8]
   140003840:	lea    rdx,[rsp+0x4b0]
   140003848:	add    rcx,r12
   14000384b:	lea    rcx,[rax+rcx*8+0x10]
   140003850:	call   QWORD PTR [rip+0x279ca]        # 0x14002b220
   140003856:	test   al,al
   140003858:	je     0x140003864
   14000385a:	mov    BYTE PTR [rsp+0x3c],r15b
   14000385f:	jmp    0x140003c90
   140003864:	xor    eax,eax
   140003866:	lea    rdx,[rip+0x28bb3]        # 0x14002c420
   14000386d:	mov    rcx,r13
   140003870:	mov    rdi,rdx
   140003873:	mov    QWORD PTR [rsp+0x308],rdx
   14000387b:	repnz scas al,BYTE PTR es:[rdi]
   14000387d:	mov    rax,QWORD PTR [rsp+0x28]
   140003882:	not    rcx
   140003885:	dec    rcx
   140003888:	mov    DWORD PTR [rsp+0x300],ecx
   14000388f:	mov    ecx,DWORD PTR [rax]
   140003891:	movaps xmm0,XMMWORD PTR [rsp+0x300]
   140003899:	movdqa XMMWORD PTR [rsp+0x4d0],xmm0
   1400038a2:	cmp    ecx,r15d
   1400038a5:	je     0x1400038bd
   1400038a7:	test   ecx,ecx
   1400038a9:	je     0x1400038bd
   1400038ab:	mov    edx,DWORD PTR [rax+0x4]
   1400038ae:	lea    rcx,[rsp+0x28]
   1400038b3:	call   0x140001cd0
   1400038b8:	mov    rax,QWORD PTR [rsp+0x28]
   1400038bd:	movsxd rcx,DWORD PTR [rax+0x8]
   1400038c1:	lea    rdx,[rsp+0x4d0]
   1400038c9:	add    rcx,r12
   1400038cc:	lea    rcx,[rax+rcx*8+0x10]
   1400038d1:	call   QWORD PTR [rip+0x27949]        # 0x14002b220
   1400038d7:	test   al,al
   1400038d9:	je     0x1400038fd
   1400038db:	mov    ebx,DWORD PTR [rsp+0x38]
   1400038df:	mov    bpl,BYTE PTR [rsp+0x5b8]
   1400038e7:	mov    r12b,BYTE PTR [rsp+0x20]
   1400038ec:	movzx  esi,r15b
   1400038f0:	mov    BYTE PTR [rsp+0x5b0],r15b
   1400038f8:	jmp    0x140003ca9
   1400038fd:	mov    rax,QWORD PTR [rsp+0x28]
   140003902:	mov    ecx,DWORD PTR [rax]
   140003904:	cmp    ecx,r15d
   140003907:	je     0x14000391f
   140003909:	test   ecx,ecx
   14000390b:	je     0x14000391f
   14000390d:	mov    edx,DWORD PTR [rax+0x4]
   140003910:	lea    rcx,[rsp+0x28]
   140003915:	call   0x140001cd0
   14000391a:	mov    rax,QWORD PTR [rsp+0x28]
   14000391f:	movsxd rcx,DWORD PTR [rax+0x8]
   140003923:	mov    dl,0x2d
   140003925:	add    rcx,r12
   140003928:	lea    rdi,[rax+rcx*8+0x10]
   14000392d:	lea    rcx,[rsp+0xb0]
   140003935:	call   QWORD PTR [rip+0x27f8d]        # 0x14002b8c8
   14000393b:	mov    r8d,r15d
   14000393e:	mov    rcx,rdi
   140003941:	movzx  edx,WORD PTR [rax]
   140003944:	call   QWORD PTR [rip+0x278ce]        # 0x14002b218
   14000394a:	test   al,al
   14000394c:	jne    0x140003e9d
   140003952:	lea    rcx,[rsp+0x90]
   14000395a:	call   QWORD PTR [rip+0x27f30]        # 0x14002b890
   140003960:	lea    rcx,[rsp+0x98]
   140003968:	call   QWORD PTR [rip+0x27f22]        # 0x14002b890
   14000396e:	mov    rdx,QWORD PTR [rsp+0x28]
   140003973:	mov    eax,DWORD PTR [rdx]
   140003975:	cmp    eax,r15d
   140003978:	je     0x140003990
   14000397a:	test   eax,eax
   14000397c:	je     0x140003990
   14000397e:	mov    edx,DWORD PTR [rdx+0x4]
   140003981:	lea    rcx,[rsp+0x28]
   140003986:	call   0x140001cd0
   14000398b:	mov    rdx,QWORD PTR [rsp+0x28]
   140003990:	movsxd rax,DWORD PTR [rdx+0x8]
   140003994:	lea    rcx,[rsp+0x90]
   14000399c:	add    rax,r12
   14000399f:	lea    rdx,[rdx+rax*8+0x10]
   1400039a4:	call   QWORD PTR [rip+0x27f06]        # 0x14002b8b0
   1400039aa:	lea    rdx,[rsp+0x50]
   1400039af:	lea    rcx,[rsp+0x98]
   1400039b7:	call   QWORD PTR [rip+0x27ef3]        # 0x14002b8b0
   1400039bd:	mov    rdx,QWORD PTR [rsp+0x30]
   1400039c2:	mov    eax,DWORD PTR [rdx]
   1400039c4:	cmp    eax,r15d
   1400039c7:	je     0x1400039e1
   1400039c9:	test   eax,eax
   1400039cb:	je     0x1400039e1
   1400039cd:	lea    rcx,[rsp+0x30]
   1400039d2:	mov    r8d,r15d
   1400039d5:	mov    edx,0x7fffffff
   1400039da:	call   0x140001bf0
   1400039df:	jmp    0x1400039ec
   1400039e1:	lea    rcx,[rsp+0x30]
   1400039e6:	call   QWORD PTR [rip+0x27e54]        # 0x14002b840
   1400039ec:	mov    ecx,0x10
   1400039f1:	mov    rbx,rax
   1400039f4:	call   0x14002952a
   1400039f9:	mov    rdi,rax
   1400039fc:	test   rax,rax
   1400039ff:	je     0x140003a26
   140003a01:	lea    rdx,[rsp+0x90]
   140003a09:	mov    rcx,rax
   140003a0c:	call   QWORD PTR [rip+0x27e8e]        # 0x14002b8a0
   140003a12:	lea    rcx,[rdi+0x8]
   140003a16:	lea    rdx,[rsp+0x98]
   140003a1e:	call   QWORD PTR [rip+0x27e7c]        # 0x14002b8a0
   140003a24:	jmp    0x140003a28
   140003a26:	xor    edi,edi
   140003a28:	lea    rcx,[rsp+0x98]
   140003a30:	mov    QWORD PTR [rbx],rdi
   140003a33:	call   QWORD PTR [rip+0x27e5f]        # 0x14002b898
   140003a39:	lea    rcx,[rsp+0x90]
   140003a41:	call   QWORD PTR [rip+0x27e51]        # 0x14002b898
   140003a47:	jmp    0x140003c90
   140003a4c:	mov    rax,QWORD PTR [rsp+0x28]
   140003a51:	inc    r14d
   140003a54:	mov    ecx,DWORD PTR [rax+0xc]
   140003a57:	sub    ecx,DWORD PTR [rax+0x8]
   140003a5a:	cmp    r14d,ecx
   140003a5d:	jge    0x140004001
   140003a63:	mov    ecx,DWORD PTR [rax]
   140003a65:	cmp    ecx,r15d
   140003a68:	je     0x140003a80
   140003a6a:	test   ecx,ecx
   140003a6c:	je     0x140003a80
   140003a6e:	mov    edx,DWORD PTR [rax+0x4]
   140003a71:	lea    rcx,[rsp+0x28]
   140003a76:	call   0x140001cd0
   140003a7b:	mov    rax,QWORD PTR [rsp+0x28]
   140003a80:	movsxd rdx,DWORD PTR [rax+0x8]
   140003a84:	movsxd rcx,r14d
   140003a87:	add    rdx,rcx
   140003a8a:	lea    rcx,[rsp+0x1b8]
   140003a92:	lea    rdx,[rax+rdx*8+0x10]
   140003a97:	call   0x140001e20
   140003a9c:	jmp    0x140003c90
   140003aa1:	mov    rax,QWORD PTR [rsp+0x28]
   140003aa6:	inc    r14d
   140003aa9:	mov    ecx,DWORD PTR [rax+0xc]
   140003aac:	sub    ecx,DWORD PTR [rax+0x8]
   140003aaf:	cmp    r14d,ecx
   140003ab2:	jge    0x140004137
   140003ab8:	mov    ecx,DWORD PTR [rax]
   140003aba:	cmp    ecx,r15d
   140003abd:	je     0x140003ad5
   140003abf:	test   ecx,ecx
   140003ac1:	je     0x140003ad5
   140003ac3:	mov    edx,DWORD PTR [rax+0x4]
   140003ac6:	lea    rcx,[rsp+0x28]
   140003acb:	call   0x140001cd0
   140003ad0:	mov    rax,QWORD PTR [rsp+0x28]
   140003ad5:	movsxd rdx,DWORD PTR [rax+0x8]
   140003ad9:	movsxd rcx,r14d
   140003adc:	add    rdx,rcx
   140003adf:	lea    rcx,[rsp+0x50]
   140003ae4:	jmp    0x140003c85
   140003ae9:	mov    rax,QWORD PTR [rsp+0x28]
   140003aee:	inc    r14d
   140003af1:	mov    ecx,DWORD PTR [rax+0xc]
   140003af4:	sub    ecx,DWORD PTR [rax+0x8]
   140003af7:	cmp    r14d,ecx
   140003afa:	jge    0x140004267
   140003b00:	lea    rcx,[rsp+0xa0]
   140003b08:	call   QWORD PTR [rip+0x27d82]        # 0x14002b890
   140003b0e:	lea    rcx,[rsp+0xa8]
   140003b16:	call   QWORD PTR [rip+0x27d74]        # 0x14002b890
   140003b1c:	mov    rdx,QWORD PTR [rsp+0x28]
   140003b21:	mov    eax,DWORD PTR [rdx]
   140003b23:	cmp    eax,r15d
   140003b26:	je     0x140003b3e
   140003b28:	test   eax,eax
   140003b2a:	je     0x140003b3e
   140003b2c:	mov    edx,DWORD PTR [rdx+0x4]
   140003b2f:	lea    rcx,[rsp+0x28]
   140003b34:	call   0x140001cd0
   140003b39:	mov    rdx,QWORD PTR [rsp+0x28]
   140003b3e:	movsxd rcx,DWORD PTR [rdx+0x8]
   140003b42:	movsxd rax,r14d
   140003b45:	add    rcx,rax
   140003b48:	lea    rdx,[rdx+rcx*8+0x10]
   140003b4d:	lea    rcx,[rsp+0xa0]
   140003b55:	call   QWORD PTR [rip+0x27d55]        # 0x14002b8b0
   140003b5b:	lea    rdx,[rsp+0x50]
   140003b60:	lea    rcx,[rsp+0xa8]
   140003b68:	call   QWORD PTR [rip+0x27d42]        # 0x14002b8b0
   140003b6e:	mov    rdx,QWORD PTR [rsp+0x30]
   140003b73:	mov    eax,DWORD PTR [rdx]
   140003b75:	cmp    eax,r15d
   140003b78:	je     0x140003b92
   140003b7a:	test   eax,eax
   140003b7c:	je     0x140003b92
   140003b7e:	lea    rcx,[rsp+0x30]
   140003b83:	mov    r8d,r15d
   140003b86:	mov    edx,0x7fffffff
   140003b8b:	call   0x140001bf0
   140003b90:	jmp    0x140003b9d
   140003b92:	lea    rcx,[rsp+0x30]
   140003b97:	call   QWORD PTR [rip+0x27ca3]        # 0x14002b840
   140003b9d:	mov    ecx,0x10
   140003ba2:	mov    rbx,rax
   140003ba5:	call   0x14002952a
   140003baa:	mov    rdi,rax
   140003bad:	test   rax,rax
   140003bb0:	je     0x140003bd7
   140003bb2:	lea    rdx,[rsp+0xa0]
   140003bba:	mov    rcx,rax
   140003bbd:	call   QWORD PTR [rip+0x27cdd]        # 0x14002b8a0
   140003bc3:	lea    rcx,[rdi+0x8]
   140003bc7:	lea    rdx,[rsp+0xa8]
   140003bcf:	call   QWORD PTR [rip+0x27ccb]        # 0x14002b8a0
   140003bd5:	jmp    0x140003bd9
   140003bd7:	xor    edi,edi
   140003bd9:	lea    rcx,[rsp+0xa8]
   140003be1:	mov    QWORD PTR [rbx],rdi
   140003be4:	call   QWORD PTR [rip+0x27cae]        # 0x14002b898
   140003bea:	lea    rcx,[rsp+0xa0]
   140003bf2:	call   QWORD PTR [rip+0x27ca0]        # 0x14002b898
   140003bf8:	jmp    0x140003c90
   140003bfd:	mov    rax,QWORD PTR [rsp+0x28]
   140003c02:	inc    r14d
   140003c05:	mov    ecx,DWORD PTR [rax+0xc]
   140003c08:	sub    ecx,DWORD PTR [rax+0x8]
   140003c0b:	cmp    r14d,ecx
   140003c0e:	jge    0x140004397
   140003c14:	mov    ecx,DWORD PTR [rax]
   140003c16:	cmp    ecx,r15d
   140003c19:	je     0x140003c31
   140003c1b:	test   ecx,ecx
   140003c1d:	je     0x140003c31
   140003c1f:	mov    edx,DWORD PTR [rax+0x4]
   140003c22:	lea    rcx,[rsp+0x28]
   140003c27:	call   0x140001cd0
   140003c2c:	mov    rax,QWORD PTR [rsp+0x28]
   140003c31:	movsxd rdx,DWORD PTR [rax+0x8]
   140003c35:	movsxd rcx,r14d
   140003c38:	add    rdx,rcx
   140003c3b:	lea    rcx,[rsp+0x60]
   140003c40:	jmp    0x140003c85
   140003c42:	mov    rax,QWORD PTR [rsp+0x28]
   140003c47:	inc    r14d
   140003c4a:	mov    ecx,DWORD PTR [rax+0xc]
   140003c4d:	sub    ecx,DWORD PTR [rax+0x8]
   140003c50:	cmp    r14d,ecx
   140003c53:	jge    0x1400044c7
   140003c59:	mov    ecx,DWORD PTR [rax]
   140003c5b:	cmp    ecx,r15d
   140003c5e:	je     0x140003c76
   140003c60:	test   ecx,ecx
   140003c62:	je     0x140003c76
   140003c64:	mov    edx,DWORD PTR [rax+0x4]
   140003c67:	lea    rcx,[rsp+0x28]
   140003c6c:	call   0x140001cd0
   140003c71:	mov    rax,QWORD PTR [rsp+0x28]
   140003c76:	movsxd rdx,DWORD PTR [rax+0x8]
   140003c7a:	movsxd rcx,r14d
   140003c7d:	add    rdx,rcx
   140003c80:	lea    rcx,[rsp+0x58]
   140003c85:	lea    rdx,[rax+rdx*8+0x10]
   140003c8a:	call   QWORD PTR [rip+0x27c20]        # 0x14002b8b0
   140003c90:	mov    bpl,BYTE PTR [rsp+0x5b8]
   140003c98:	mov    r12b,BYTE PTR [rsp+0x20]
   140003c9d:	mov    ebx,DWORD PTR [rsp+0x38]
   140003ca1:	mov    sil,BYTE PTR [rsp+0x5b0]
   140003ca9:	mov    r8,QWORD PTR [rsp+0x28]
   140003cae:	inc    r14d
   140003cb1:	mov    edx,DWORD PTR [r8+0x8]
   140003cb5:	mov    eax,DWORD PTR [r8+0xc]
   140003cb9:	sub    eax,edx
   140003cbb:	cmp    r14d,eax
   140003cbe:	jl     0x140002aa9
   140003cc4:	mov    rax,QWORD PTR [rsp+0x30]
   140003cc9:	mov    ecx,DWORD PTR [rax+0x8]
   140003ccc:	cmp    DWORD PTR [rax+0xc],ecx
   140003ccf:	je     0x140003e9d
   140003cd5:	mov    ecx,DWORD PTR [rax]
   140003cd7:	cmp    ecx,r15d
   140003cda:	je     0x140003ced
   140003cdc:	test   ecx,ecx
   140003cde:	je     0x140003ced
   140003ce0:	mov    edx,DWORD PTR [rax+0x4]
   140003ce3:	lea    rcx,[rsp+0x30]
   140003ce8:	call   0x140001da0
   140003ced:	lea    rcx,[rsp+0x30]
   140003cf2:	xor    edx,edx
   140003cf4:	call   QWORD PTR [rip+0x27516]        # 0x14002b210
   140003cfa:	lea    rcx,[rsp+0x118]
   140003d02:	mov    rdx,QWORD PTR [rax]
   140003d05:	call   0x1400080c0
   140003d0a:	lea    rcx,[rsp+0xd0]
   140003d12:	mov    rdx,rax
   140003d15:	call   QWORD PTR [rip+0x27b95]        # 0x14002b8b0
   140003d1b:	lea    rcx,[rsp+0x118]
   140003d23:	call   QWORD PTR [rip+0x27b6f]        # 0x14002b898
   140003d29:	mov    rdx,QWORD PTR [rsp+0x30]
   140003d2e:	mov    eax,DWORD PTR [rdx]
   140003d30:	cmp    eax,r15d
   140003d33:	je     0x140003d46
   140003d35:	test   eax,eax
   140003d37:	je     0x140003d46
   140003d39:	mov    edx,DWORD PTR [rdx+0x4]
   140003d3c:	lea    rcx,[rsp+0x30]
   140003d41:	call   0x140001da0
   140003d46:	lea    rcx,[rsp+0x30]
   140003d4b:	xor    edx,edx
   140003d4d:	call   QWORD PTR [rip+0x274bd]        # 0x14002b210
   140003d53:	mov    rdi,QWORD PTR [rax]
   140003d56:	mov    rax,QWORD PTR [rsp+0x30]
   140003d5b:	mov    ecx,DWORD PTR [rax]
   140003d5d:	cmp    ecx,r15d
   140003d60:	je     0x140003d73
   140003d62:	test   ecx,ecx
   140003d64:	je     0x140003d73
   140003d66:	mov    edx,DWORD PTR [rax+0x4]
   140003d69:	lea    rcx,[rsp+0x30]
   140003d6e:	call   0x140001da0
   140003d73:	lea    rcx,[rsp+0x30]
   140003d78:	xor    edx,edx
   140003d7a:	call   QWORD PTR [rip+0x27490]        # 0x14002b210
   140003d80:	lea    r9,[rdi+0x8]
   140003d84:	lea    r8,[rsp+0x160]
   140003d8c:	mov    rdx,QWORD PTR [rax]
   140003d8f:	lea    rcx,[rsp+0xc0]
   140003d97:	call   0x140006ff0
   140003d9c:	test   al,al
   140003d9e:	jne    0x14000460e
   140003da4:	lea    rdx,[rsp+0x130]
   140003dac:	lea    rcx,[rsp+0x160]
   140003db4:	call   0x140001560
   140003db9:	lea    rdx,[rsp+0x120]
   140003dc1:	mov    rcx,rax
   140003dc4:	call   QWORD PTR [rip+0x2740e]        # 0x14002b1d8
   140003dca:	mov    rcx,rax
   140003dcd:	call   QWORD PTR [rip+0x273fd]        # 0x14002b1d0
   140003dd3:	mov    rcx,QWORD PTR [rip+0x272a6]        # 0x14002b080
   140003dda:	mov    rdx,rax
   140003ddd:	call   0x140001090
   140003de2:	lea    rcx,[rsp+0x120]
   140003dea:	call   QWORD PTR [rip+0x273d8]        # 0x14002b1c8
   140003df0:	lea    rcx,[rsp+0x130]
   140003df8:	call   QWORD PTR [rip+0x27a9a]        # 0x14002b898
   140003dfe:	lea    rcx,[rsp+0xc0]
   140003e06:	call   0x140002830
   140003e0b:	lea    rcx,[rsp+0x160]
   140003e13:	call   0x140001f80
   140003e18:	lea    rcx,[rsp+0x48]
   140003e1d:	call   QWORD PTR [rip+0x27a75]        # 0x14002b898
   140003e23:	lea    rcx,[rsp+0x40]
   140003e28:	call   QWORD PTR [rip+0x27a6a]        # 0x14002b898
   140003e2e:	lea    rcx,[rsp+0x60]
   140003e33:	call   QWORD PTR [rip+0x27a5f]        # 0x14002b898
   140003e39:	lea    rcx,[rsp+0x58]
   140003e3e:	call   QWORD PTR [rip+0x27a54]        # 0x14002b898
   140003e44:	lea    rcx,[rsp+0x50]
   140003e49:	call   QWORD PTR [rip+0x27a49]        # 0x14002b898
   140003e4f:	mov    rdx,QWORD PTR [rsp+0x30]
   140003e54:	mov    eax,DWORD PTR [rdx]
   140003e56:	test   eax,eax
   140003e58:	je     0x140003e74
   140003e5a:	cmp    eax,0xffffffff
   140003e5d:	je     0x140003e7e
   140003e5f:	lock xadd DWORD PTR [rdx],r13d
   140003e64:	add    r13d,0xffffffff
   140003e68:	setne  al
   140003e6b:	test   al,al
   140003e6d:	jne    0x140003e7e
   140003e6f:	mov    rdx,QWORD PTR [rsp+0x30]
   140003e74:	lea    rcx,[rsp+0x30]
   140003e79:	call   0x140001290
   140003e7e:	lea    rcx,[rsp+0x28]
   140003e83:	call   0x1400017b0
   140003e88:	lea    rcx,[rsp+0x68]
   140003e8d:	call   QWORD PTR [rip+0x27375]        # 0x14002b208
   140003e93:	mov    eax,0x2
   140003e98:	jmp    0x140003fe6
   140003e9d:	lea    rcx,[rsp+0x28]
   140003ea2:	call   0x1400022c0
   140003ea7:	lea    rcx,[rsp+0xc0]
   140003eaf:	mov    edi,eax
   140003eb1:	call   0x140002830
   140003eb6:	lea    rcx,[rsp+0x160]
   140003ebe:	call   0x140001f80
   140003ec3:	lea    rcx,[rsp+0x48]
   140003ec8:	call   QWORD PTR [rip+0x279ca]        # 0x14002b898
   140003ece:	lea    rcx,[rsp+0x40]
   140003ed3:	call   QWORD PTR [rip+0x279bf]        # 0x14002b898
   140003ed9:	lea    rcx,[rsp+0x60]
   140003ede:	call   QWORD PTR [rip+0x279b4]        # 0x14002b898
   140003ee4:	lea    rcx,[rsp+0x58]
   140003ee9:	call   QWORD PTR [rip+0x279a9]        # 0x14002b898
   140003eef:	lea    rcx,[rsp+0x50]
   140003ef4:	call   QWORD PTR [rip+0x2799e]        # 0x14002b898
   140003efa:	mov    rdx,QWORD PTR [rsp+0x30]
   140003eff:	mov    eax,DWORD PTR [rdx]
   140003f01:	test   eax,eax
   140003f03:	je     0x140003f1f
   140003f05:	cmp    eax,0xffffffff
   140003f08:	je     0x140003f29
   140003f0a:	lock xadd DWORD PTR [rdx],r13d
   140003f0f:	add    r13d,0xffffffff
   140003f13:	setne  al
   140003f16:	test   al,al
   140003f18:	jne    0x140003f29
   140003f1a:	mov    rdx,QWORD PTR [rsp+0x30]
   140003f1f:	lea    rcx,[rsp+0x30]
   140003f24:	call   0x140001290
   140003f29:	lea    rcx,[rsp+0x28]
   140003f2e:	call   0x1400017b0
   140003f33:	lea    rcx,[rsp+0x68]
   140003f38:	call   QWORD PTR [rip+0x272ca]        # 0x14002b208
   140003f3e:	mov    eax,edi
   140003f40:	jmp    0x140003fe6
   140003f45:	lea    rcx,[rsp+0x28]
   140003f4a:	call   0x1400022c0
   140003f4f:	lea    rcx,[rsp+0xc0]
   140003f57:	call   0x140002830
   140003f5c:	lea    rcx,[rsp+0x160]
   140003f64:	call   0x140001f80
   140003f69:	lea    rcx,[rsp+0x48]
   140003f6e:	call   QWORD PTR [rip+0x27924]        # 0x14002b898
   140003f74:	lea    rcx,[rsp+0x40]
   140003f79:	call   QWORD PTR [rip+0x27919]        # 0x14002b898
   140003f7f:	lea    rcx,[rsp+0x60]
   140003f84:	call   QWORD PTR [rip+0x2790e]        # 0x14002b898
   140003f8a:	lea    rcx,[rsp+0x58]
   140003f8f:	call   QWORD PTR [rip+0x27903]        # 0x14002b898
   140003f95:	lea    rcx,[rsp+0x50]
   140003f9a:	call   QWORD PTR [rip+0x278f8]        # 0x14002b898
   140003fa0:	mov    rdx,QWORD PTR [rsp+0x30]
   140003fa5:	mov    eax,DWORD PTR [rdx]
   140003fa7:	test   eax,eax
   140003fa9:	je     0x140003fc5
   140003fab:	cmp    eax,0xffffffff
   140003fae:	je     0x140003fcf
   140003fb0:	lock xadd DWORD PTR [rdx],r13d
   140003fb5:	add    r13d,0xffffffff
   140003fb9:	setne  al
   140003fbc:	test   al,al
   140003fbe:	jne    0x140003fcf
   140003fc0:	mov    rdx,QWORD PTR [rsp+0x30]
   140003fc5:	lea    rcx,[rsp+0x30]
   140003fca:	call   0x140001290
   140003fcf:	lea    rcx,[rsp+0x28]
   140003fd4:	call   0x1400017b0
   140003fd9:	lea    rcx,[rsp+0x68]
   140003fde:	call   QWORD PTR [rip+0x27224]        # 0x14002b208
   140003fe4:	xor    eax,eax
   140003fe6:	mov    rbx,QWORD PTR [rsp+0x5a8]
   140003fee:	add    rsp,0x560
   140003ff5:	pop    r15
   140003ff7:	pop    r14
   140003ff9:	pop    r13
   140003ffb:	pop    r12
   140003ffd:	pop    rdi
   140003ffe:	pop    rsi
   140003fff:	pop    rbp
   140004000:	ret    
   140004001:	lea    rcx,[rsp+0x28]
   140004006:	call   0x1400022c0
   14000400b:	lea    rcx,[rsp+0xc0]
   140004013:	mov    r12d,eax
   140004016:	call   0x140002830
   14000401b:	lea    rcx,[rsp+0x160]
   140004023:	call   0x140001f80
   140004028:	lea    rcx,[rsp+0x48]
   14000402d:	call   QWORD PTR [rip+0x27865]        # 0x14002b898
   140004033:	lea    rcx,[rsp+0x40]
   140004038:	call   QWORD PTR [rip+0x2785a]        # 0x14002b898
   14000403e:	lea    rcx,[rsp+0x60]
   140004043:	call   QWORD PTR [rip+0x2784f]        # 0x14002b898
   140004049:	lea    rcx,[rsp+0x58]
   14000404e:	call   QWORD PTR [rip+0x27844]        # 0x14002b898
   140004054:	lea    rcx,[rsp+0x50]
   140004059:	call   QWORD PTR [rip+0x27839]        # 0x14002b898
   14000405f:	mov    rsi,QWORD PTR [rsp+0x30]
   140004064:	mov    eax,DWORD PTR [rsi]
   140004066:	test   eax,eax
   140004068:	je     0x140004085
   14000406a:	cmp    eax,0xffffffff
   14000406d:	je     0x1400040d6
   14000406f:	mov    eax,r13d
   140004072:	lock xadd DWORD PTR [rsi],eax
   140004076:	add    eax,0xffffffff
   140004079:	setne  al
   14000407c:	test   al,al
   14000407e:	jne    0x1400040d6
   140004080:	mov    rsi,QWORD PTR [rsp+0x30]
   140004085:	movsxd rax,DWORD PTR [rsi+0xc]
   140004089:	lea    rbx,[rsi+rax*8+0x10]
   14000408e:	movsxd rax,DWORD PTR [rsi+0x8]
   140004092:	lea    rbp,[rsi+rax*8+0x10]
   140004097:	cmp    rbp,rbx
   14000409a:	je     0x1400040cd
   14000409c:	nop    DWORD PTR [rax+0x0]
   1400040a0:	mov    rdi,QWORD PTR [rbx-0x8]
   1400040a4:	sub    rbx,0x8
   1400040a8:	test   rdi,rdi
   1400040ab:	je     0x1400040c8
   1400040ad:	lea    rcx,[rdi+0x8]
   1400040b1:	call   QWORD PTR [rip+0x277e1]        # 0x14002b898
   1400040b7:	mov    rcx,rdi
   1400040ba:	call   QWORD PTR [rip+0x277d8]        # 0x14002b898
   1400040c0:	mov    rcx,rdi
   1400040c3:	call   0x140029524
   1400040c8:	cmp    rbx,rbp
   1400040cb:	jne    0x1400040a0
   1400040cd:	mov    rcx,rsi
   1400040d0:	call   QWORD PTR [rip+0x2779a]        # 0x14002b870
   1400040d6:	mov    rbx,QWORD PTR [rsp+0x28]
   1400040db:	mov    eax,DWORD PTR [rbx]
   1400040dd:	test   eax,eax
   1400040df:	je     0x140004103
   1400040e1:	cmp    eax,0xffffffff
   1400040e4:	je     0x1400045fb
   1400040ea:	lock xadd DWORD PTR [rbx],r13d
   1400040ef:	add    r13d,0xffffffff
   1400040f3:	setne  al
   1400040f6:	test   al,al
   1400040f8:	jne    0x1400045fb
   1400040fe:	mov    rbx,QWORD PTR [rsp+0x28]
   140004103:	movsxd rax,DWORD PTR [rbx+0xc]
   140004107:	lea    rdi,[rbx+rax*8+0x10]
   14000410c:	movsxd rax,DWORD PTR [rbx+0x8]
   140004110:	lea    rsi,[rbx+rax*8+0x10]
   140004115:	cmp    rsi,rdi
   140004118:	je     0x1400045f2
   14000411e:	xchg   ax,ax
   140004120:	sub    rdi,0x8
   140004124:	mov    rcx,rdi
   140004127:	call   QWORD PTR [rip+0x2776b]        # 0x14002b898
   14000412d:	cmp    rdi,rsi
   140004130:	jne    0x140004120
   140004132:	jmp    0x1400045f2
   140004137:	lea    rcx,[rsp+0x28]
   14000413c:	call   0x1400022c0
   140004141:	lea    rcx,[rsp+0xc0]
   140004149:	mov    r12d,eax
   14000414c:	call   0x140002830
   140004151:	lea    rcx,[rsp+0x160]
   140004159:	call   0x140001f80
   14000415e:	lea    rcx,[rsp+0x48]
   140004163:	call   QWORD PTR [rip+0x2772f]        # 0x14002b898
   140004169:	lea    rcx,[rsp+0x40]
   14000416e:	call   QWORD PTR [rip+0x27724]        # 0x14002b898
   140004174:	lea    rcx,[rsp+0x60]
   140004179:	call   QWORD PTR [rip+0x27719]        # 0x14002b898
   14000417f:	lea    rcx,[rsp+0x58]
   140004184:	call   QWORD PTR [rip+0x2770e]        # 0x14002b898
   14000418a:	lea    rcx,[rsp+0x50]
   14000418f:	call   QWORD PTR [rip+0x27703]        # 0x14002b898
   140004195:	mov    rsi,QWORD PTR [rsp+0x30]
   14000419a:	mov    eax,DWORD PTR [rsi]
   14000419c:	test   eax,eax
   14000419e:	je     0x1400041bb
   1400041a0:	cmp    eax,0xffffffff
   1400041a3:	je     0x140004208
   1400041a5:	mov    eax,r13d
   1400041a8:	lock xadd DWORD PTR [rsi],eax
   1400041ac:	add    eax,0xffffffff
   1400041af:	setne  al
   1400041b2:	test   al,al
   1400041b4:	jne    0x140004208
   1400041b6:	mov    rsi,QWORD PTR [rsp+0x30]
   1400041bb:	movsxd rax,DWORD PTR [rsi+0xc]
   1400041bf:	lea    rbx,[rsi+rax*8+0x10]
   1400041c4:	movsxd rax,DWORD PTR [rsi+0x8]
   1400041c8:	lea    rbp,[rsi+rax*8+0x10]
   1400041cd:	cmp    rbp,rbx
   1400041d0:	je     0x1400041ff
   1400041d2:	mov    rdi,QWORD PTR [rbx-0x8]
   1400041d6:	sub    rbx,0x8
   1400041da:	test   rdi,rdi
   1400041dd:	je     0x1400041fa
   1400041df:	lea    rcx,[rdi+0x8]
   1400041e3:	call   QWORD PTR [rip+0x276af]        # 0x14002b898
   1400041e9:	mov    rcx,rdi
   1400041ec:	call   QWORD PTR [rip+0x276a6]        # 0x14002b898
   1400041f2:	mov    rcx,rdi
   1400041f5:	call   0x140029524
   1400041fa:	cmp    rbx,rbp
   1400041fd:	jne    0x1400041d2
   1400041ff:	mov    rcx,rsi
   140004202:	call   QWORD PTR [rip+0x27668]        # 0x14002b870
   140004208:	mov    rbx,QWORD PTR [rsp+0x28]
   14000420d:	mov    eax,DWORD PTR [rbx]
   14000420f:	test   eax,eax
   140004211:	je     0x140004235
   140004213:	cmp    eax,0xffffffff
   140004216:	je     0x1400045fb
   14000421c:	lock xadd DWORD PTR [rbx],r13d
   140004221:	add    r13d,0xffffffff
   140004225:	setne  al
   140004228:	test   al,al
   14000422a:	jne    0x1400045fb
   140004230:	mov    rbx,QWORD PTR [rsp+0x28]
   140004235:	movsxd rax,DWORD PTR [rbx+0xc]
   140004239:	lea    rdi,[rbx+rax*8+0x10]
   14000423e:	movsxd rax,DWORD PTR [rbx+0x8]
   140004242:	lea    rsi,[rbx+rax*8+0x10]
   140004247:	cmp    rsi,rdi
   14000424a:	je     0x1400045f2
   140004250:	sub    rdi,0x8
   140004254:	mov    rcx,rdi
   140004257:	call   QWORD PTR [rip+0x2763b]        # 0x14002b898
   14000425d:	cmp    rdi,rsi
   140004260:	jne    0x140004250
   140004262:	jmp    0x1400045f2
   140004267:	lea    rcx,[rsp+0x28]
   14000426c:	call   0x1400022c0
   140004271:	lea    rcx,[rsp+0xc0]
   140004279:	mov    r12d,eax
   14000427c:	call   0x140002830
   140004281:	lea    rcx,[rsp+0x160]
   140004289:	call   0x140001f80
   14000428e:	lea    rcx,[rsp+0x48]
   140004293:	call   QWORD PTR [rip+0x275ff]        # 0x14002b898
   140004299:	lea    rcx,[rsp+0x40]
   14000429e:	call   QWORD PTR [rip+0x275f4]        # 0x14002b898
   1400042a4:	lea    rcx,[rsp+0x60]
   1400042a9:	call   QWORD PTR [rip+0x275e9]        # 0x14002b898
   1400042af:	lea    rcx,[rsp+0x58]
   1400042b4:	call   QWORD PTR [rip+0x275de]        # 0x14002b898
   1400042ba:	lea    rcx,[rsp+0x50]
   1400042bf:	call   QWORD PTR [rip+0x275d3]        # 0x14002b898
   1400042c5:	mov    rsi,QWORD PTR [rsp+0x30]
   1400042ca:	mov    eax,DWORD PTR [rsi]
   1400042cc:	test   eax,eax
   1400042ce:	je     0x1400042eb
   1400042d0:	cmp    eax,0xffffffff
   1400042d3:	je     0x140004338
   1400042d5:	mov    eax,r13d
   1400042d8:	lock xadd DWORD PTR [rsi],eax
   1400042dc:	add    eax,0xffffffff
   1400042df:	setne  al
   1400042e2:	test   al,al
   1400042e4:	jne    0x140004338
   1400042e6:	mov    rsi,QWORD PTR [rsp+0x30]
   1400042eb:	movsxd rax,DWORD PTR [rsi+0xc]
   1400042ef:	lea    rbx,[rsi+rax*8+0x10]
   1400042f4:	movsxd rax,DWORD PTR [rsi+0x8]
   1400042f8:	lea    rbp,[rsi+rax*8+0x10]
   1400042fd:	cmp    rbp,rbx
   140004300:	je     0x14000432f
   140004302:	mov    rdi,QWORD PTR [rbx-0x8]
   140004306:	sub    rbx,0x8
   14000430a:	test   rdi,rdi
   14000430d:	je     0x14000432a
   14000430f:	lea    rcx,[rdi+0x8]
   140004313:	call   QWORD PTR [rip+0x2757f]        # 0x14002b898
   140004319:	mov    rcx,rdi
   14000431c:	call   QWORD PTR [rip+0x27576]        # 0x14002b898
   140004322:	mov    rcx,rdi
   140004325:	call   0x140029524
   14000432a:	cmp    rbx,rbp
   14000432d:	jne    0x140004302
   14000432f:	mov    rcx,rsi
   140004332:	call   QWORD PTR [rip+0x27538]        # 0x14002b870
   140004338:	mov    rbx,QWORD PTR [rsp+0x28]
   14000433d:	mov    eax,DWORD PTR [rbx]
   14000433f:	test   eax,eax
   140004341:	je     0x140004365
   140004343:	cmp    eax,0xffffffff
   140004346:	je     0x1400045fb
   14000434c:	lock xadd DWORD PTR [rbx],r13d
   140004351:	add    r13d,0xffffffff
   140004355:	setne  al
   140004358:	test   al,al
   14000435a:	jne    0x1400045fb
   140004360:	mov    rbx,QWORD PTR [rsp+0x28]
   140004365:	movsxd rax,DWORD PTR [rbx+0xc]
   140004369:	lea    rdi,[rbx+rax*8+0x10]
   14000436e:	movsxd rax,DWORD PTR [rbx+0x8]
   140004372:	lea    rsi,[rbx+rax*8+0x10]
   140004377:	cmp    rsi,rdi
   14000437a:	je     0x1400045f2
   140004380:	sub    rdi,0x8
   140004384:	mov    rcx,rdi
   140004387:	call   QWORD PTR [rip+0x2750b]        # 0x14002b898
   14000438d:	cmp    rdi,rsi
   140004390:	jne    0x140004380
   140004392:	jmp    0x1400045f2
   140004397:	lea    rcx,[rsp+0x28]
   14000439c:	call   0x1400022c0
   1400043a1:	lea    rcx,[rsp+0xc0]
   1400043a9:	mov    r12d,eax
   1400043ac:	call   0x140002830
   1400043b1:	lea    rcx,[rsp+0x160]
   1400043b9:	call   0x140001f80
   1400043be:	lea    rcx,[rsp+0x48]
   1400043c3:	call   QWORD PTR [rip+0x274cf]        # 0x14002b898
   1400043c9:	lea    rcx,[rsp+0x40]
   1400043ce:	call   QWORD PTR [rip+0x274c4]        # 0x14002b898
   1400043d4:	lea    rcx,[rsp+0x60]
   1400043d9:	call   QWORD PTR [rip+0x274b9]        # 0x14002b898
   1400043df:	lea    rcx,[rsp+0x58]
   1400043e4:	call   QWORD PTR [rip+0x274ae]        # 0x14002b898
   1400043ea:	lea    rcx,[rsp+0x50]
   1400043ef:	call   QWORD PTR [rip+0x274a3]        # 0x14002b898
   1400043f5:	mov    rsi,QWORD PTR [rsp+0x30]
   1400043fa:	mov    eax,DWORD PTR [rsi]
   1400043fc:	test   eax,eax
   1400043fe:	je     0x14000441b
   140004400:	cmp    eax,0xffffffff
   140004403:	je     0x140004468
   140004405:	mov    eax,r13d
   140004408:	lock xadd DWORD PTR [rsi],eax
   14000440c:	add    eax,0xffffffff
   14000440f:	setne  al
   140004412:	test   al,al
   140004414:	jne    0x140004468
   140004416:	mov    rsi,QWORD PTR [rsp+0x30]
   14000441b:	movsxd rax,DWORD PTR [rsi+0xc]
   14000441f:	lea    rbx,[rsi+rax*8+0x10]
   140004424:	movsxd rax,DWORD PTR [rsi+0x8]
   140004428:	lea    rbp,[rsi+rax*8+0x10]
   14000442d:	cmp    rbp,rbx
   140004430:	je     0x14000445f
   140004432:	mov    rdi,QWORD PTR [rbx-0x8]
   140004436:	sub    rbx,0x8
   14000443a:	test   rdi,rdi
   14000443d:	je     0x14000445a
   14000443f:	lea    rcx,[rdi+0x8]
   140004443:	call   QWORD PTR [rip+0x2744f]        # 0x14002b898
   140004449:	mov    rcx,rdi
   14000444c:	call   QWORD PTR [rip+0x27446]        # 0x14002b898
   140004452:	mov    rcx,rdi
   140004455:	call   0x140029524
   14000445a:	cmp    rbx,rbp
   14000445d:	jne    0x140004432
   14000445f:	mov    rcx,rsi
   140004462:	call   QWORD PTR [rip+0x27408]        # 0x14002b870
   140004468:	mov    rbx,QWORD PTR [rsp+0x28]
   14000446d:	mov    eax,DWORD PTR [rbx]
   14000446f:	test   eax,eax
   140004471:	je     0x140004495
   140004473:	cmp    eax,0xffffffff
   140004476:	je     0x1400045fb
   14000447c:	lock xadd DWORD PTR [rbx],r13d
   140004481:	add    r13d,0xffffffff
   140004485:	setne  al
   140004488:	test   al,al
   14000448a:	jne    0x1400045fb
   140004490:	mov    rbx,QWORD PTR [rsp+0x28]
   140004495:	movsxd rax,DWORD PTR [rbx+0xc]
   140004499:	lea    rdi,[rbx+rax*8+0x10]
   14000449e:	movsxd rax,DWORD PTR [rbx+0x8]
   1400044a2:	lea    rsi,[rbx+rax*8+0x10]
   1400044a7:	cmp    rsi,rdi
   1400044aa:	je     0x1400045f2
   1400044b0:	sub    rdi,0x8
   1400044b4:	mov    rcx,rdi
   1400044b7:	call   QWORD PTR [rip+0x273db]        # 0x14002b898
   1400044bd:	cmp    rdi,rsi
   1400044c0:	jne    0x1400044b0
   1400044c2:	jmp    0x1400045f2
   1400044c7:	lea    rcx,[rsp+0x28]
   1400044cc:	call   0x1400022c0
   1400044d1:	lea    rcx,[rsp+0xc0]
   1400044d9:	mov    r12d,eax
   1400044dc:	call   0x140002830
   1400044e1:	lea    rcx,[rsp+0x160]
   1400044e9:	call   0x140001f80
   1400044ee:	lea    rcx,[rsp+0x48]
   1400044f3:	call   QWORD PTR [rip+0x2739f]        # 0x14002b898
   1400044f9:	lea    rcx,[rsp+0x40]
   1400044fe:	call   QWORD PTR [rip+0x27394]        # 0x14002b898
   140004504:	lea    rcx,[rsp+0x60]
   140004509:	call   QWORD PTR [rip+0x27389]        # 0x14002b898
   14000450f:	lea    rcx,[rsp+0x58]
   140004514:	call   QWORD PTR [rip+0x2737e]        # 0x14002b898
   14000451a:	lea    rcx,[rsp+0x50]
   14000451f:	call   QWORD PTR [rip+0x27373]        # 0x14002b898
   140004525:	mov    rsi,QWORD PTR [rsp+0x30]
   14000452a:	mov    eax,DWORD PTR [rsi]
   14000452c:	test   eax,eax
   14000452e:	je     0x14000454b
   140004530:	cmp    eax,0xffffffff
   140004533:	je     0x140004598
   140004535:	mov    eax,r13d
   140004538:	lock xadd DWORD PTR [rsi],eax
   14000453c:	add    eax,0xffffffff
   14000453f:	setne  al
   140004542:	test   al,al
   140004544:	jne    0x140004598
   140004546:	mov    rsi,QWORD PTR [rsp+0x30]
   14000454b:	movsxd rax,DWORD PTR [rsi+0xc]
   14000454f:	lea    rbx,[rsi+rax*8+0x10]
   140004554:	movsxd rax,DWORD PTR [rsi+0x8]
   140004558:	lea    rbp,[rsi+rax*8+0x10]
   14000455d:	cmp    rbp,rbx
   140004560:	je     0x14000458f
   140004562:	mov    rdi,QWORD PTR [rbx-0x8]
   140004566:	sub    rbx,0x8
   14000456a:	test   rdi,rdi
   14000456d:	je     0x14000458a
   14000456f:	lea    rcx,[rdi+0x8]
   140004573:	call   QWORD PTR [rip+0x2731f]        # 0x14002b898
   140004579:	mov    rcx,rdi
   14000457c:	call   QWORD PTR [rip+0x27316]        # 0x14002b898
   140004582:	mov    rcx,rdi
   140004585:	call   0x140029524
   14000458a:	cmp    rbx,rbp
   14000458d:	jne    0x140004562
   14000458f:	mov    rcx,rsi
   140004592:	call   QWORD PTR [rip+0x272d8]        # 0x14002b870
   140004598:	mov    rbx,QWORD PTR [rsp+0x28]
   14000459d:	mov    eax,DWORD PTR [rbx]
   14000459f:	test   eax,eax
   1400045a1:	je     0x1400045bd
   1400045a3:	cmp    eax,0xffffffff
   1400045a6:	je     0x1400045fb
   1400045a8:	lock xadd DWORD PTR [rbx],r13d
   1400045ad:	add    r13d,0xffffffff
   1400045b1:	setne  al
   1400045b4:	test   al,al
   1400045b6:	jne    0x1400045fb
   1400045b8:	mov    rbx,QWORD PTR [rsp+0x28]
   1400045bd:	movsxd rax,DWORD PTR [rbx+0xc]
   1400045c1:	lea    rdi,[rbx+rax*8+0x10]
   1400045c6:	movsxd rax,DWORD PTR [rbx+0x8]
   1400045ca:	lea    rsi,[rbx+rax*8+0x10]
   1400045cf:	cmp    rsi,rdi
   1400045d2:	je     0x1400045f2
   1400045d4:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400045e0:	sub    rdi,0x8
   1400045e4:	mov    rcx,rdi
   1400045e7:	call   QWORD PTR [rip+0x272ab]        # 0x14002b898
   1400045ed:	cmp    rdi,rsi
   1400045f0:	jne    0x1400045e0
   1400045f2:	mov    rcx,rbx
   1400045f5:	call   QWORD PTR [rip+0x27275]        # 0x14002b870
   1400045fb:	lea    rcx,[rsp+0x68]
   140004600:	call   QWORD PTR [rip+0x26c02]        # 0x14002b208
   140004606:	mov    eax,r12d
   140004609:	jmp    0x140003fe6
   14000460e:	mov    rax,QWORD PTR [rsp+0x30]
   140004613:	mov    ecx,DWORD PTR [rax]
   140004615:	cmp    ecx,r15d
   140004618:	je     0x14000462b
   14000461a:	test   ecx,ecx
   14000461c:	je     0x14000462b
   14000461e:	mov    edx,DWORD PTR [rax+0x4]
   140004621:	lea    rcx,[rsp+0x30]
   140004626:	call   0x140001da0
   14000462b:	lea    rcx,[rsp+0x30]
   140004630:	xor    edx,edx
   140004632:	call   QWORD PTR [rip+0x26bd8]        # 0x14002b210
   140004638:	lea    rdx,[rsp+0x4f0]
   140004640:	lea    rcx,[rsp+0xc0]
   140004648:	mov    rdi,rax
   14000464b:	call   0x140008fc0
   140004650:	mov    r8,QWORD PTR [rdi]
   140004653:	lea    rcx,[rsp+0xc0]
   14000465b:	movzx  r9d,sil
   14000465f:	mov    rdx,rax
   140004662:	call   0x140009960
   140004667:	lea    rcx,[rsp+0x4f0]
   14000466f:	call   0x140002060
   140004674:	lea    rcx,[rsp+0x30]
   140004679:	call   QWORD PTR [rip+0x26b81]        # 0x14002b200
   14000467f:	cmp    eax,r15d
   140004682:	jle    0x14000487b
   140004688:	nop    DWORD PTR [rax+rax*1+0x0]
   140004690:	lea    rcx,[rsp+0x360]
   140004698:	call   0x1400088c0
   14000469d:	mov    rdx,QWORD PTR [rsp+0x30]
   1400046a2:	mov    eax,DWORD PTR [rdx]
   1400046a4:	cmp    eax,0x1
   1400046a7:	je     0x1400046ba
   1400046a9:	test   eax,eax
   1400046ab:	je     0x1400046ba
   1400046ad:	mov    edx,DWORD PTR [rdx+0x4]
   1400046b0:	lea    rcx,[rsp+0x30]
   1400046b5:	call   0x140001da0
   1400046ba:	lea    rcx,[rsp+0x30]
   1400046bf:	mov    edx,r15d
   1400046c2:	call   QWORD PTR [rip+0x26b48]        # 0x14002b210
   1400046c8:	mov    rdi,QWORD PTR [rax]
   1400046cb:	mov    rax,QWORD PTR [rsp+0x30]
   1400046d0:	mov    ecx,DWORD PTR [rax]
   1400046d2:	cmp    ecx,0x1
   1400046d5:	je     0x1400046e8
   1400046d7:	test   ecx,ecx
   1400046d9:	je     0x1400046e8
   1400046db:	mov    edx,DWORD PTR [rax+0x4]
   1400046de:	lea    rcx,[rsp+0x30]
   1400046e3:	call   0x140001da0
   1400046e8:	lea    rcx,[rsp+0x30]
   1400046ed:	mov    edx,r15d
   1400046f0:	call   QWORD PTR [rip+0x26b1a]        # 0x14002b210
   1400046f6:	lea    r9,[rdi+0x8]
   1400046fa:	lea    r8,[rsp+0x160]
   140004702:	mov    rdx,QWORD PTR [rax]
   140004705:	lea    rcx,[rsp+0x360]
   14000470d:	call   0x140006ff0
   140004712:	test   al,al
   140004714:	je     0x140004af5
   14000471a:	mov    rax,QWORD PTR [rsp+0x30]
   14000471f:	mov    ecx,DWORD PTR [rax]
   140004721:	cmp    ecx,0x1
   140004724:	je     0x140004737
   140004726:	test   ecx,ecx
   140004728:	je     0x140004737
   14000472a:	mov    edx,DWORD PTR [rax+0x4]
   14000472d:	lea    rcx,[rsp+0x30]
   140004732:	call   0x140001da0
   140004737:	lea    rcx,[rsp+0x30]
   14000473c:	mov    edx,r15d
   14000473f:	call   QWORD PTR [rip+0x26acb]        # 0x14002b210
   140004745:	lea    rdx,[rsp+0x80]
   14000474d:	lea    rcx,[rsp+0x360]
   140004755:	mov    rdi,rax
   140004758:	call   0x140008fc0
   14000475d:	mov    r8,QWORD PTR [rdi]
   140004760:	lea    rcx,[rsp+0x360]
   140004768:	movzx  r9d,sil
   14000476c:	mov    rdx,rax
   14000476f:	call   0x140009960
   140004774:	mov    rcx,QWORD PTR [rsp+0x88]
   14000477c:	mov    eax,DWORD PTR [rcx+0x10]
   14000477f:	test   eax,eax
   140004781:	je     0x1400047a2
   140004783:	cmp    eax,0xffffffff
   140004786:	je     0x1400047af
   140004788:	mov    eax,r13d
   14000478b:	lock xadd DWORD PTR [rcx+0x10],eax
   140004790:	add    eax,0xffffffff
   140004793:	setne  al
   140004796:	test   al,al
   140004798:	jne    0x1400047af
   14000479a:	mov    rcx,QWORD PTR [rsp+0x88]
   1400047a2:	lea    rdx,[rip+0xffffffffffffcad7]        # 0x140001280
   1400047a9:	call   QWORD PTR [rip+0x270b9]        # 0x14002b868
   1400047af:	mov    rcx,QWORD PTR [rsp+0x80]
   1400047b7:	mov    eax,DWORD PTR [rcx+0x10]
   1400047ba:	test   eax,eax
   1400047bc:	je     0x1400047dd
   1400047be:	cmp    eax,0xffffffff
   1400047c1:	je     0x1400047ea
   1400047c3:	mov    eax,r13d
   1400047c6:	lock xadd DWORD PTR [rcx+0x10],eax
   1400047cb:	add    eax,0xffffffff
   1400047ce:	setne  al
   1400047d1:	test   al,al
   1400047d3:	jne    0x1400047ea
   1400047d5:	mov    rcx,QWORD PTR [rsp+0x80]
   1400047dd:	lea    rdx,[rip+0xffffffffffffca9c]        # 0x140001280
   1400047e4:	call   QWORD PTR [rip+0x2707e]        # 0x14002b868
   1400047ea:	lea    rcx,[rsp+0x360]
   1400047f2:	xor    edi,edi
   1400047f4:	call   QWORD PTR [rip+0x26a06]        # 0x14002b200
   1400047fa:	test   eax,eax
   1400047fc:	jle    0x140004857
   1400047fe:	xchg   ax,ax
   140004800:	mov    rcx,QWORD PTR [rsp+0x360]
   140004808:	mov    eax,DWORD PTR [rcx]
   14000480a:	cmp    eax,0x1
   14000480d:	je     0x140004823
   14000480f:	test   eax,eax
   140004811:	je     0x140004823
   140004813:	mov    edx,DWORD PTR [rcx+0x4]
   140004816:	lea    rcx,[rsp+0x360]
   14000481e:	call   0x140002770
   140004823:	lea    rcx,[rsp+0x360]
   14000482b:	mov    edx,edi
   14000482d:	call   QWORD PTR [rip+0x269dd]        # 0x14002b210
   140004833:	lea    rcx,[rsp+0xc0]
   14000483b:	mov    rdx,QWORD PTR [rax]
   14000483e:	call   0x140008f20
   140004843:	lea    rcx,[rsp+0x360]
   14000484b:	inc    edi
   14000484d:	call   QWORD PTR [rip+0x269ad]        # 0x14002b200
   140004853:	cmp    edi,eax
   140004855:	jl     0x140004800
   140004857:	lea    rcx,[rsp+0x360]
   14000485f:	call   0x140002830
   140004864:	lea    rcx,[rsp+0x30]
   140004869:	inc    r15d
   14000486c:	call   QWORD PTR [rip+0x2698e]        # 0x14002b200
   140004872:	cmp    r15d,eax
   140004875:	jl     0x140004690
   14000487b:	lea    rcx,[rsp+0x40]
   140004880:	call   QWORD PTR [rip+0x26972]        # 0x14002b1f8
   140004886:	test   al,al
   140004888:	jne    0x14000489d
   14000488a:	lea    rdx,[rsp+0x40]
   14000488f:	lea    rcx,[rsp+0xd0]
   140004897:	call   QWORD PTR [rip+0x27013]        # 0x14002b8b0
   14000489d:	lea    rcx,[rsp+0x48]
   1400048a2:	call   QWORD PTR [rip+0x26950]        # 0x14002b1f8
   1400048a8:	test   al,al
   1400048aa:	jne    0x1400048bf
   1400048ac:	lea    rdx,[rsp+0x48]
   1400048b1:	lea    rcx,[rsp+0xd8]
   1400048b9:	call   QWORD PTR [rip+0x26ff1]        # 0x14002b8b0
   1400048bf:	test   bpl,bpl
   1400048c2:	je     0x1400048d1
   1400048c4:	lea    rcx,[rsp+0xc0]
   1400048cc:	call   0x14000a570
   1400048d1:	test   r12b,r12b
   1400048d4:	je     0x1400048e3
   1400048d6:	lea    rcx,[rsp+0xc0]
   1400048de:	call   0x14000a680
   1400048e3:	cmp    BYTE PTR [rsp+0x3d],0x0
   1400048e8:	je     0x1400048f7
   1400048ea:	lea    rcx,[rsp+0xc0]
   1400048f2:	call   0x14000a790
   1400048f7:	cmp    BYTE PTR [rsp+0x3c],0x0
   1400048fc:	je     0x14000490b
   1400048fe:	lea    rcx,[rsp+0xc0]
   140004906:	call   0x14000a850
   14000490b:	mov    eax,DWORD PTR [rsp+0xc8]
   140004912:	test   ebx,ebx
   140004914:	lea    rdx,[rsp+0x160]
   14000491c:	cmovne eax,ebx
   14000491f:	lea    rcx,[rsp+0xc0]
   140004927:	mov    DWORD PTR [rsp+0xc8],eax
   14000492e:	call   0x140009f20
   140004933:	lea    rdx,[rsp+0x1c0]
   14000493b:	lea    rcx,[rsp+0x110]
   140004943:	call   0x140001700
   140004948:	lea    rcx,[rsp+0x110]
   140004950:	call   QWORD PTR [rip+0x2689a]        # 0x14002b1f0
   140004956:	lea    rcx,[rsp+0x110]
   14000495e:	test   al,al
   140004960:	sete   dil
   140004964:	call   0x1400017b0
   140004969:	test   dil,dil
   14000496c:	je     0x1400049d5
   14000496e:	lea    rdx,[rsp+0x128]
   140004976:	lea    rcx,[rsp+0x160]
   14000497e:	call   0x140001560
   140004983:	lea    rdx,[rsp+0x158]
   14000498b:	mov    rcx,rax
   14000498e:	call   QWORD PTR [rip+0x26844]        # 0x14002b1d8
   140004994:	mov    rcx,rax
   140004997:	call   QWORD PTR [rip+0x26833]        # 0x14002b1d0
   14000499d:	mov    rcx,QWORD PTR [rip+0x266dc]        # 0x14002b080
   1400049a4:	mov    rdx,rax
   1400049a7:	call   0x140001090
   1400049ac:	lea    rcx,[rsp+0x158]
   1400049b4:	call   QWORD PTR [rip+0x2680e]        # 0x14002b1c8
   1400049ba:	lea    rcx,[rsp+0x128]
   1400049c2:	call   QWORD PTR [rip+0x26ed0]        # 0x14002b898
   1400049c8:	lea    rcx,[rsp+0x1c0]
   1400049d0:	call   0x140001900
   1400049d5:	lea    r9,[rsp+0x60]
   1400049da:	lea    r8,[rsp+0x160]
   1400049e2:	lea    rdx,[rsp+0x58]
   1400049e7:	lea    rcx,[rsp+0xc0]
   1400049ef:	call   0x140007730
   1400049f4:	test   al,al
   1400049f6:	jne    0x140003f4f
   1400049fc:	lea    rdx,[rsp+0x138]
   140004a04:	lea    rcx,[rsp+0x160]
   140004a0c:	call   0x140001560
   140004a11:	lea    rdx,[rsp+0x148]
   140004a19:	mov    rcx,rax
   140004a1c:	call   QWORD PTR [rip+0x267b6]        # 0x14002b1d8
   140004a22:	mov    rcx,rax
   140004a25:	call   QWORD PTR [rip+0x267a5]        # 0x14002b1d0
   140004a2b:	mov    rcx,QWORD PTR [rip+0x2664e]        # 0x14002b080
   140004a32:	mov    rdx,rax
   140004a35:	call   0x140001090
   140004a3a:	lea    rcx,[rsp+0x148]
   140004a42:	call   QWORD PTR [rip+0x26780]        # 0x14002b1c8
   140004a48:	lea    rcx,[rsp+0x138]
   140004a50:	call   QWORD PTR [rip+0x26e42]        # 0x14002b898
   140004a56:	lea    rcx,[rsp+0xc0]
   140004a5e:	call   0x140002830
   140004a63:	lea    rcx,[rsp+0x160]
   140004a6b:	call   0x140001f80
   140004a70:	lea    rcx,[rsp+0x48]
   140004a75:	call   QWORD PTR [rip+0x26e1d]        # 0x14002b898
   140004a7b:	lea    rcx,[rsp+0x40]
   140004a80:	call   QWORD PTR [rip+0x26e12]        # 0x14002b898
   140004a86:	lea    rcx,[rsp+0x60]
   140004a8b:	call   QWORD PTR [rip+0x26e07]        # 0x14002b898
   140004a91:	lea    rcx,[rsp+0x58]
   140004a96:	call   QWORD PTR [rip+0x26dfc]        # 0x14002b898
   140004a9c:	lea    rcx,[rsp+0x50]
   140004aa1:	call   QWORD PTR [rip+0x26df1]        # 0x14002b898
   140004aa7:	mov    rdx,QWORD PTR [rsp+0x30]
   140004aac:	mov    eax,DWORD PTR [rdx]
   140004aae:	test   eax,eax
   140004ab0:	je     0x140004acc
   140004ab2:	cmp    eax,0xffffffff
   140004ab5:	je     0x140004ad6
   140004ab7:	lock xadd DWORD PTR [rdx],r13d
   140004abc:	add    r13d,0xffffffff
   140004ac0:	setne  al
   140004ac3:	test   al,al
   140004ac5:	jne    0x140004ad6
   140004ac7:	mov    rdx,QWORD PTR [rsp+0x30]
   140004acc:	lea    rcx,[rsp+0x30]
   140004ad1:	call   0x140001290
   140004ad6:	lea    rcx,[rsp+0x28]
   140004adb:	call   0x1400017b0
   140004ae0:	lea    rcx,[rsp+0x68]
   140004ae5:	call   QWORD PTR [rip+0x2671d]        # 0x14002b208
   140004aeb:	mov    eax,0x3
   140004af0:	jmp    0x140003fe6
   140004af5:	lea    rdx,[rsp+0x150]
   140004afd:	lea    rcx,[rsp+0x160]
   140004b05:	call   0x140001560
   140004b0a:	lea    rdx,[rsp+0x140]
   140004b12:	mov    rcx,rax
   140004b15:	call   QWORD PTR [rip+0x266bd]        # 0x14002b1d8
   140004b1b:	mov    rcx,rax
   140004b1e:	call   QWORD PTR [rip+0x266ac]        # 0x14002b1d0
   140004b24:	mov    rcx,QWORD PTR [rip+0x26555]        # 0x14002b080
   140004b2b:	mov    rdx,rax
   140004b2e:	call   0x140001090
   140004b33:	lea    rcx,[rsp+0x140]
   140004b3b:	call   QWORD PTR [rip+0x26687]        # 0x14002b1c8
   140004b41:	lea    rcx,[rsp+0x150]
   140004b49:	call   QWORD PTR [rip+0x26d49]        # 0x14002b898
   140004b4f:	lea    rcx,[rsp+0x360]
   140004b57:	call   0x140002830
   140004b5c:	jmp    0x140003dfe
   140004b61:	int3   
   140004b62:	int3   
   140004b63:	int3   
   140004b64:	int3   
   140004b65:	int3   
   140004b66:	int3   
   140004b67:	int3   
   140004b68:	int3   
   140004b69:	int3   
   140004b6a:	int3   
   140004b6b:	int3   
   140004b6c:	int3   
   140004b6d:	int3   
   140004b6e:	int3   
   140004b6f:	int3   
   140004b70:	mov    QWORD PTR [rsp+0x18],rbx
   140004b75:	push   rsi
   140004b76:	push   rdi
   140004b77:	push   r13
   140004b79:	push   r14
   140004b7b:	push   r15
   140004b7d:	sub    rsp,0x60
   140004b81:	mov    r14,r9
   140004b84:	mov    rbx,r8
   140004b87:	mov    edi,edx
   140004b89:	lea    r9,[rip+0x30808]        # 0x140035398
   140004b90:	mov    r11d,ecx
   140004b93:	lea    rsi,[rip+0x3049e]        # 0x140035038
   140004b9a:	xor    r15d,r15d
   140004b9d:	nop    DWORD PTR [rax]
   140004ba0:	mov    r13,rsi
   140004ba3:	data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140004bb0:	mov    r8,QWORD PTR [r13+0x0]
   140004bb4:	mov    rdx,r15
   140004bb7:	mov    eax,DWORD PTR [r8]
   140004bba:	cmp    eax,0x1
   140004bbd:	je     0x140004bf2
   140004bbf:	mov    rcx,r15
   140004bc2:	cmp    eax,r11d
   140004bc5:	jne    0x140004bde
   140004bc7:	mov    rax,QWORD PTR [r13+0x8]
   140004bcb:	test   rax,rax
   140004bce:	jne    0x140004bd4
   140004bd0:	test   edi,edi
   140004bd2:	je     0x140004c08
   140004bd4:	test   rax,rax
   140004bd7:	je     0x140004bde
   140004bd9:	cmp    DWORD PTR [rax+rcx*1],edi
   140004bdc:	je     0x140004c08
   140004bde:	inc    rdx
   140004be1:	lea    rcx,[rdx*4+0x0]
   140004be9:	mov    eax,DWORD PTR [r8+rcx*1]
   140004bed:	cmp    eax,0x1
   140004bf0:	jne    0x140004bc2
   140004bf2:	add    r13,0x30
   140004bf6:	cmp    r13,r9
   140004bf9:	jl     0x140004bb0
   140004bfb:	test   edi,edi
   140004bfd:	je     0x140004e84
   140004c03:	mov    edi,r15d
   140004c06:	jmp    0x140004ba0
   140004c08:	test   rbx,rbx
   140004c0b:	je     0x140004c37
   140004c0d:	mov    r8d,DWORD PTR [r13-0x10]
   140004c11:	mov    rdx,QWORD PTR [r13-0x18]
   140004c15:	lea    rcx,[rsp+0x30]
   140004c1a:	call   QWORD PTR [rip+0x26648]        # 0x14002b268
   140004c20:	mov    rcx,rbx
   140004c23:	mov    rdx,rax
   140004c26:	call   QWORD PTR [rip+0x26634]        # 0x14002b260
   140004c2c:	lea    rcx,[rsp+0x30]
   140004c31:	call   QWORD PTR [rip+0x26591]        # 0x14002b1c8
   140004c37:	mov    rcx,QWORD PTR [rsp+0xb0]
   140004c3f:	test   rcx,rcx
   140004c42:	je     0x140004c4b
   140004c44:	mov    rax,QWORD PTR [r13+0x10]
   140004c48:	mov    QWORD PTR [rcx],rax
   140004c4b:	test   r14,r14
   140004c4e:	je     0x140004e80
   140004c54:	mov    rdi,QWORD PTR [rip+0x26c2d]        # 0x14002b888
   140004c5b:	cmp    QWORD PTR [r14],rdi
   140004c5e:	je     0x140004d63
   140004c64:	mov    QWORD PTR [rsp+0x20],rdi
   140004c69:	mov    eax,DWORD PTR [rdi]
   140004c6b:	mov    QWORD PTR [rsp+0x90],rbp
   140004c73:	mov    rsi,rdi
   140004c76:	test   eax,eax
   140004c78:	je     0x140004c8a
   140004c7a:	cmp    eax,0xffffffff
   140004c7d:	je     0x140004cf0
   140004c7f:	lock add DWORD PTR [rdi],0x1
   140004c83:	mov    rsi,QWORD PTR [rsp+0x20]
   140004c88:	jmp    0x140004cf0
   140004c8a:	mov    edx,DWORD PTR [rdi+0x4]
   140004c8d:	lea    rcx,[rsp+0x20]
   140004c92:	mov    QWORD PTR [rsp+0x98],r12
   140004c9a:	call   QWORD PTR [rip+0x26bb8]        # 0x14002b858
   140004ca0:	mov    rsi,QWORD PTR [rsp+0x20]
   140004ca5:	movsxd rax,DWORD PTR [rsi+0xc]
   140004ca9:	lea    r12,[rsi+rax*8+0x10]
   140004cae:	movsxd rax,DWORD PTR [rdi+0x8]
   140004cb2:	lea    rbp,[rdi+rax*8+0x10]
   140004cb7:	movsxd rax,DWORD PTR [rsi+0x8]
   140004cbb:	lea    rbx,[rsi+rax*8+0x10]
   140004cc0:	cmp    rbx,r12
   140004cc3:	je     0x140004ce8
   140004cc5:	test   rbx,rbx
   140004cc8:	je     0x140004cd6
   140004cca:	mov    rdx,rbp
   140004ccd:	mov    rcx,rbx
   140004cd0:	call   QWORD PTR [rip+0x26bca]        # 0x14002b8a0
   140004cd6:	add    rbx,0x8
   140004cda:	add    rbp,0x8
   140004cde:	cmp    rbx,r12
   140004ce1:	jne    0x140004cc5
   140004ce3:	mov    rsi,QWORD PTR [rsp+0x20]
   140004ce8:	mov    r12,QWORD PTR [rsp+0x98]
   140004cf0:	lea    rax,[rsp+0x20]
   140004cf5:	cmp    rax,r14
   140004cf8:	je     0x140004d08
   140004cfa:	mov    rax,rsi
   140004cfd:	mov    rsi,QWORD PTR [r14]
   140004d00:	mov    QWORD PTR [rsp+0x20],rsi
   140004d05:	mov    QWORD PTR [r14],rax
   140004d08:	mov    eax,DWORD PTR [rsi]
   140004d0a:	test   eax,eax
   140004d0c:	je     0x140004d23
   140004d0e:	cmp    eax,0xffffffff
   140004d11:	je     0x140004d5b
   140004d13:	lock add DWORD PTR [rsi],0xffffffff
   140004d17:	setne  al
   140004d1a:	test   al,al
   140004d1c:	jne    0x140004d5b
   140004d1e:	mov    rsi,QWORD PTR [rsp+0x20]
   140004d23:	movsxd rax,DWORD PTR [rsi+0xc]
   140004d27:	lea    rbx,[rsi+rax*8+0x10]
   140004d2c:	movsxd rax,DWORD PTR [rsi+0x8]
   140004d30:	lea    rbp,[rsi+rax*8+0x10]
   140004d35:	cmp    rbp,rbx
   140004d38:	je     0x140004d52
   140004d3a:	nop    WORD PTR [rax+rax*1+0x0]
   140004d40:	sub    rbx,0x8
   140004d44:	mov    rcx,rbx
   140004d47:	call   QWORD PTR [rip+0x26b4b]        # 0x14002b898
   140004d4d:	cmp    rbx,rbp
   140004d50:	jne    0x140004d40
   140004d52:	mov    rcx,rsi
   140004d55:	call   QWORD PTR [rip+0x26b15]        # 0x14002b870
   140004d5b:	mov    rbp,QWORD PTR [rsp+0x90]
   140004d63:	mov    eax,DWORD PTR [rdi]
   140004d65:	test   eax,eax
   140004d67:	je     0x140004d79
   140004d69:	cmp    eax,0xffffffff
   140004d6c:	je     0x140004dab
   140004d6e:	lock add DWORD PTR [rdi],0xffffffff
   140004d72:	setne  al
   140004d75:	test   al,al
   140004d77:	jne    0x140004dab
   140004d79:	movsxd rax,DWORD PTR [rdi+0xc]
   140004d7d:	lea    rbx,[rdi+rax*8+0x10]
   140004d82:	movsxd rax,DWORD PTR [rdi+0x8]
   140004d86:	lea    rsi,[rdi+rax*8+0x10]
   140004d8b:	cmp    rsi,rbx
   140004d8e:	je     0x140004da2
   140004d90:	sub    rbx,0x8
   140004d94:	mov    rcx,rbx
   140004d97:	call   QWORD PTR [rip+0x26afb]        # 0x14002b898
   140004d9d:	cmp    rbx,rsi
   140004da0:	jne    0x140004d90
   140004da2:	mov    rcx,rdi
   140004da5:	call   QWORD PTR [rip+0x26ac5]        # 0x14002b870
   140004dab:	mov    rax,QWORD PTR [r13-0x8]
   140004daf:	mov    rbx,r15
   140004db2:	cmp    QWORD PTR [rax],rbx
   140004db5:	je     0x140004e80
   140004dbb:	mov    rcx,r15
   140004dbe:	xchg   ax,ax
   140004dc0:	mov    rdx,QWORD PTR [rcx+rax*1]
   140004dc4:	test   rdx,rdx
   140004dc7:	je     0x140004de0
   140004dc9:	or     rcx,0xffffffffffffffff
   140004dcd:	xor    eax,eax
   140004dcf:	mov    rdi,rdx
   140004dd2:	repnz scas al,BYTE PTR es:[rdi]
   140004dd4:	not    rcx
   140004dd7:	dec    rcx
   140004dda:	mov    DWORD PTR [rsp+0x30],ecx
   140004dde:	jmp    0x140004de5
   140004de0:	mov    DWORD PTR [rsp+0x30],r15d
   140004de5:	mov    QWORD PTR [rsp+0x38],rdx
   140004dea:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140004def:	lea    rcx,[rsp+0x28]
   140004df4:	lea    rdx,[rsp+0x50]
   140004df9:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   140004dff:	call   QWORD PTR [rip+0x26a5b]        # 0x14002b860
   140004e05:	mov    rdx,QWORD PTR [r14]
   140004e08:	mov    eax,DWORD PTR [rdx]
   140004e0a:	cmp    eax,0x1
   140004e0d:	je     0x140004e3b
   140004e0f:	test   eax,eax
   140004e11:	je     0x140004e3b
   140004e13:	mov    edx,0x7fffffff
   140004e18:	mov    r8d,0x1
   140004e1e:	mov    rcx,r14
   140004e21:	call   0x140001a10
   140004e26:	test   rax,rax
   140004e29:	je     0x140004e5c
   140004e2b:	lea    rdx,[rsp+0x28]
   140004e30:	mov    rcx,rax
   140004e33:	call   QWORD PTR [rip+0x26a67]        # 0x14002b8a0
   140004e39:	jmp    0x140004e5c
   140004e3b:	lea    rdx,[rsp+0x28]
   140004e40:	lea    rcx,[rsp+0x40]
   140004e45:	call   QWORD PTR [rip+0x26a55]        # 0x14002b8a0
   140004e4b:	mov    rcx,r14
   140004e4e:	call   QWORD PTR [rip+0x269ec]        # 0x14002b840
   140004e54:	mov    rcx,QWORD PTR [rsp+0x40]
   140004e59:	mov    QWORD PTR [rax],rcx
   140004e5c:	lea    rcx,[rsp+0x28]
   140004e61:	call   QWORD PTR [rip+0x26a31]        # 0x14002b898
   140004e67:	mov    rax,QWORD PTR [r13-0x8]
   140004e6b:	inc    rbx
   140004e6e:	lea    rcx,[rbx*8+0x0]
   140004e76:	cmp    QWORD PTR [rcx+rax*1],r15
   140004e7a:	jne    0x140004dc0
   140004e80:	mov    al,0x1
   140004e82:	jmp    0x140004e86
   140004e84:	xor    al,al
   140004e86:	mov    rbx,QWORD PTR [rsp+0xa0]
   140004e8e:	add    rsp,0x60
   140004e92:	pop    r15
   140004e94:	pop    r14
   140004e96:	pop    r13
   140004e98:	pop    rdi
   140004e99:	pop    rsi
   140004e9a:	ret    
   140004e9b:	int3   
   140004e9c:	int3   
   140004e9d:	int3   
   140004e9e:	int3   
   140004e9f:	int3   
   140004ea0:	mov    QWORD PTR [rsp+0x10],rbx
   140004ea5:	mov    QWORD PTR [rsp+0x18],rbp
   140004eaa:	mov    QWORD PTR [rsp+0x20],rsi
   140004eaf:	push   rdi
   140004eb0:	sub    rsp,0x20
   140004eb4:	mov    rsi,rdx
   140004eb7:	mov    rbp,rcx
   140004eba:	call   QWORD PTR [rip+0x269d0]        # 0x14002b890
   140004ec0:	lea    rcx,[rbp+0x8]
   140004ec4:	call   QWORD PTR [rip+0x269c6]        # 0x14002b890
   140004eca:	lea    rcx,[rbp+0x10]
   140004ece:	call   QWORD PTR [rip+0x269bc]        # 0x14002b890
   140004ed4:	lea    rdx,[rsi+0x8]
   140004ed8:	lea    rcx,[rsp+0x30]
   140004edd:	call   QWORD PTR [rip+0x269bd]        # 0x14002b8a0
   140004ee3:	lea    rdx,[rsp+0x30]
   140004ee8:	mov    rcx,rbp
   140004eeb:	call   QWORD PTR [rip+0x269bf]        # 0x14002b8b0
   140004ef1:	lea    rcx,[rsp+0x30]
   140004ef6:	call   QWORD PTR [rip+0x2699c]        # 0x14002b898
   140004efc:	lea    rdx,[rsi+0x10]
   140004f00:	lea    rcx,[rsp+0x30]
   140004f05:	call   QWORD PTR [rip+0x26995]        # 0x14002b8a0
   140004f0b:	lea    rdx,[rsp+0x30]
   140004f10:	lea    rcx,[rbp+0x8]
   140004f14:	call   QWORD PTR [rip+0x26996]        # 0x14002b8b0
   140004f1a:	lea    rcx,[rsp+0x30]
   140004f1f:	call   QWORD PTR [rip+0x26973]        # 0x14002b898
   140004f25:	lea    rdx,[rsi+0x20]
   140004f29:	lea    rcx,[rsp+0x30]
   140004f2e:	call   QWORD PTR [rip+0x2696c]        # 0x14002b8a0
   140004f34:	lea    rdx,[rsp+0x30]
   140004f39:	lea    rcx,[rbp+0x10]
   140004f3d:	call   QWORD PTR [rip+0x2696d]        # 0x14002b8b0
   140004f43:	lea    rcx,[rsp+0x30]
   140004f48:	call   QWORD PTR [rip+0x2694a]        # 0x14002b898
   140004f4e:	mov    rbx,QWORD PTR [rsp+0x38]
   140004f53:	mov    rsi,QWORD PTR [rsp+0x48]
   140004f58:	mov    rax,rbp
   140004f5b:	mov    rbp,QWORD PTR [rsp+0x40]
   140004f60:	add    rsp,0x20
   140004f64:	pop    rdi
   140004f65:	ret    
   140004f66:	int3   
   140004f67:	int3   
   140004f68:	int3   
   140004f69:	int3   
   140004f6a:	int3   
   140004f6b:	int3   
   140004f6c:	int3   
   140004f6d:	int3   
   140004f6e:	int3   
   140004f6f:	int3   
   140004f70:	sub    rsp,0x28
   140004f74:	mov    r9,r8
   140004f77:	lea    r8,[rsp+0x48]
   140004f7c:	call   QWORD PTR [rip+0x26336]        # 0x14002b2b8
   140004f82:	add    rsp,0x28
   140004f86:	ret    
   140004f87:	int3   
   140004f88:	int3   
   140004f89:	int3   
   140004f8a:	int3   
   140004f8b:	int3   
   140004f8c:	int3   
   140004f8d:	int3   
   140004f8e:	int3   
   140004f8f:	int3   
   140004f90:	mov    QWORD PTR [rsp+0x20],rbx
   140004f95:	mov    QWORD PTR [rsp+0x8],rcx
   140004f9a:	push   rdi
   140004f9b:	sub    rsp,0x20
   140004f9f:	lea    rdx,[rcx+0x8]
   140004fa3:	lea    rcx,[rsp+0x40]
   140004fa8:	call   QWORD PTR [rip+0x268f2]        # 0x14002b8a0
   140004fae:	mov    rdx,QWORD PTR [rsp+0x30]
   140004fb3:	lea    rcx,[rsp+0x38]
   140004fb8:	add    rdx,0x10
   140004fbc:	call   QWORD PTR [rip+0x268de]        # 0x14002b8a0
   140004fc2:	lea    rcx,[rsp+0x38]
   140004fc7:	xor    edx,edx
   140004fc9:	call   QWORD PTR [rip+0x262d9]        # 0x14002b2a8
   140004fcf:	lea    rcx,[rsp+0x40]
   140004fd4:	xor    edx,edx
   140004fd6:	mov    edi,eax
   140004fd8:	call   QWORD PTR [rip+0x262ca]        # 0x14002b2a8
   140004fde:	lea    rcx,[rsp+0x38]
   140004fe3:	xor    edi,eax
   140004fe5:	call   QWORD PTR [rip+0x268ad]        # 0x14002b898
   140004feb:	lea    rcx,[rsp+0x40]
   140004ff0:	call   QWORD PTR [rip+0x268a2]        # 0x14002b898
   140004ff6:	mov    rdx,QWORD PTR [rsp+0x30]
   140004ffb:	lea    rcx,[rsp+0x38]
   140005000:	add    rdx,0x10
   140005004:	call   QWORD PTR [rip+0x26896]        # 0x14002b8a0
   14000500a:	mov    r11,QWORD PTR [rsp+0x38]
   14000500f:	lea    rcx,[rsp+0x38]
   140005014:	cmp    DWORD PTR [r11+0x4],0x0
   140005019:	setne  bl
   14000501c:	call   QWORD PTR [rip+0x26876]        # 0x14002b898
   140005022:	test   bl,bl
   140005024:	je     0x140005054
   140005026:	mov    rdx,QWORD PTR [rsp+0x30]
   14000502b:	lea    rcx,[rsp+0x38]
   140005030:	add    rdx,0x20
   140005034:	call   QWORD PTR [rip+0x26866]        # 0x14002b8a0
   14000503a:	lea    rcx,[rsp+0x38]
   14000503f:	xor    edx,edx
   140005041:	call   QWORD PTR [rip+0x26261]        # 0x14002b2a8
   140005047:	lea    rcx,[rsp+0x38]
   14000504c:	xor    edi,eax
   14000504e:	call   QWORD PTR [rip+0x26844]        # 0x14002b898
   140005054:	mov    eax,edi
   140005056:	mov    rbx,QWORD PTR [rsp+0x48]
   14000505b:	add    rsp,0x20
   14000505f:	pop    rdi
   140005060:	ret    
   140005061:	int3   
   140005062:	int3   
   140005063:	int3   
   140005064:	int3   
   140005065:	int3   
   140005066:	int3   
   140005067:	int3   
   140005068:	int3   
   140005069:	int3   
   14000506a:	int3   
   14000506b:	int3   
   14000506c:	int3   
   14000506d:	int3   
   14000506e:	int3   
   14000506f:	int3   
   140005070:	mov    QWORD PTR [rsp+0x10],rdx
   140005075:	mov    QWORD PTR [rsp+0x8],rcx
   14000507a:	push   rbx
   14000507b:	push   rdi
   14000507c:	sub    rsp,0x38
   140005080:	lea    rcx,[rsp+0x28]
   140005085:	add    rdx,0x8
   140005089:	mov    DWORD PTR [rsp+0x60],0x0
   140005091:	mov    ebx,0x3
   140005096:	call   QWORD PTR [rip+0x26804]        # 0x14002b8a0
   14000509c:	mov    rdx,QWORD PTR [rsp+0x50]
   1400050a1:	lea    rcx,[rsp+0x20]
   1400050a6:	add    rdx,0x8
   1400050aa:	call   QWORD PTR [rip+0x267f0]        # 0x14002b8a0
   1400050b0:	lea    rdx,[rsp+0x28]
   1400050b5:	lea    rcx,[rsp+0x20]
   1400050ba:	call   QWORD PTR [rip+0x261d8]        # 0x14002b298
   1400050c0:	test   al,al
   1400050c2:	je     0x14000510a
   1400050c4:	mov    rdx,QWORD PTR [rsp+0x58]
   1400050c9:	lea    rcx,[rsp+0x68]
   1400050ce:	mov    ebx,0xf
   1400050d3:	add    rdx,0x10
   1400050d7:	call   QWORD PTR [rip+0x267c3]        # 0x14002b8a0
   1400050dd:	mov    rdx,QWORD PTR [rsp+0x50]
   1400050e2:	lea    rcx,[rsp+0x60]
   1400050e7:	add    rdx,0x10
   1400050eb:	call   QWORD PTR [rip+0x267af]        # 0x14002b8a0
   1400050f1:	lea    rdx,[rsp+0x68]
   1400050f6:	lea    rcx,[rsp+0x60]
   1400050fb:	call   QWORD PTR [rip+0x26197]        # 0x14002b298
   140005101:	test   al,al
   140005103:	je     0x14000510a
   140005105:	xor    dil,dil
   140005108:	jmp    0x14000510d
   14000510a:	mov    dil,0x1
   14000510d:	test   bl,0x8
   140005110:	je     0x140005120
   140005112:	lea    rcx,[rsp+0x60]
   140005117:	and    ebx,0xfffffff7
   14000511a:	call   QWORD PTR [rip+0x26778]        # 0x14002b898
   140005120:	test   bl,0x4
   140005123:	je     0x140005133
   140005125:	lea    rcx,[rsp+0x68]
   14000512a:	and    ebx,0xfffffffb
   14000512d:	call   QWORD PTR [rip+0x26765]        # 0x14002b898
   140005133:	test   bl,0x2
   140005136:	je     0x140005146
   140005138:	lea    rcx,[rsp+0x20]
   14000513d:	and    ebx,0xfffffffd
   140005140:	call   QWORD PTR [rip+0x26752]        # 0x14002b898
   140005146:	test   bl,0x1
   140005149:	je     0x140005156
   14000514b:	lea    rcx,[rsp+0x28]
   140005150:	call   QWORD PTR [rip+0x26742]        # 0x14002b898
   140005156:	test   dil,dil
   140005159:	je     0x140005164
   14000515b:	xor    al,al
   14000515d:	add    rsp,0x38
   140005161:	pop    rdi
   140005162:	pop    rbx
   140005163:	ret    
   140005164:	mov    rdx,QWORD PTR [rsp+0x50]
   140005169:	lea    rcx,[rsp+0x60]
   14000516e:	add    rdx,0x10
   140005172:	call   QWORD PTR [rip+0x26728]        # 0x14002b8a0
   140005178:	mov    r11,QWORD PTR [rsp+0x60]
   14000517d:	lea    rcx,[rsp+0x60]
   140005182:	cmp    DWORD PTR [r11+0x4],0x0
   140005187:	sete   bl
   14000518a:	call   QWORD PTR [rip+0x26708]        # 0x14002b898
   140005190:	test   bl,bl
   140005192:	je     0x14000519d
   140005194:	mov    al,0x1
   140005196:	add    rsp,0x38
   14000519a:	pop    rdi
   14000519b:	pop    rbx
   14000519c:	ret    
   14000519d:	mov    rdx,QWORD PTR [rsp+0x58]
   1400051a2:	lea    rcx,[rsp+0x68]
   1400051a7:	add    rdx,0x20
   1400051ab:	call   QWORD PTR [rip+0x266ef]        # 0x14002b8a0
   1400051b1:	mov    rdx,QWORD PTR [rsp+0x50]
   1400051b6:	lea    rcx,[rsp+0x60]
   1400051bb:	add    rdx,0x20
   1400051bf:	call   QWORD PTR [rip+0x266db]        # 0x14002b8a0
   1400051c5:	lea    rdx,[rsp+0x68]
   1400051ca:	lea    rcx,[rsp+0x60]
   1400051cf:	call   QWORD PTR [rip+0x260c3]        # 0x14002b298
   1400051d5:	lea    rcx,[rsp+0x60]
   1400051da:	movzx  ebx,al
   1400051dd:	call   QWORD PTR [rip+0x266b5]        # 0x14002b898
   1400051e3:	lea    rcx,[rsp+0x68]
   1400051e8:	call   QWORD PTR [rip+0x266aa]        # 0x14002b898
   1400051ee:	mov    al,bl
   1400051f0:	add    rsp,0x38
   1400051f4:	pop    rdi
   1400051f5:	pop    rbx
   1400051f6:	ret    
   1400051f7:	int3   
   1400051f8:	int3   
   1400051f9:	int3   
   1400051fa:	int3   
   1400051fb:	int3   
   1400051fc:	int3   
   1400051fd:	int3   
   1400051fe:	int3   
   1400051ff:	int3   
   140005200:	test   rdx,rdx
   140005203:	je     0x140005242
   140005205:	mov    QWORD PTR [rsp+0x8],rbx
   14000520a:	push   rdi
   14000520b:	sub    rsp,0x20
   14000520f:	mov    eax,DWORD PTR [rcx+0x8]
   140005212:	mov    rbx,rdx
   140005215:	mov    QWORD PTR [rdx],0x0
   14000521c:	mov    DWORD PTR [rdx+0x8],eax
   14000521f:	lea    rdx,[rcx+0x10]
   140005223:	mov    rdi,rcx
   140005226:	lea    rcx,[rbx+0x10]
   14000522a:	call   QWORD PTR [rip+0x26670]        # 0x14002b8a0
   140005230:	mov    r11d,DWORD PTR [rdi+0x18]
   140005234:	mov    DWORD PTR [rbx+0x18],r11d
   140005238:	mov    rbx,QWORD PTR [rsp+0x30]
   14000523d:	add    rsp,0x20
   140005241:	pop    rdi
   140005242:	repz ret 
   140005244:	int3   
   140005245:	int3   
   140005246:	int3   
   140005247:	int3   
   140005248:	int3   
   140005249:	int3   
   14000524a:	int3   
   14000524b:	int3   
   14000524c:	int3   
   14000524d:	int3   
   14000524e:	int3   
   14000524f:	int3   
   140005250:	test   rdx,rdx
   140005253:	je     0x140005270
   140005255:	mov    eax,DWORD PTR [rcx+0x8]
   140005258:	mov    QWORD PTR [rdx],0x0
   14000525f:	mov    DWORD PTR [rdx+0x8],eax
   140005262:	mov    rax,QWORD PTR [rcx+0x10]
   140005266:	mov    QWORD PTR [rdx+0x10],rax
   14000526a:	mov    eax,DWORD PTR [rcx+0x18]
   14000526d:	mov    DWORD PTR [rdx+0x18],eax
   140005270:	repz ret 
   140005272:	int3   
   140005273:	int3   
   140005274:	int3   
   140005275:	int3   
   140005276:	int3   
   140005277:	int3   
   140005278:	int3   
   140005279:	int3   
   14000527a:	int3   
   14000527b:	int3   
   14000527c:	int3   
   14000527d:	int3   
   14000527e:	int3   
   14000527f:	int3   
   140005280:	mov    QWORD PTR [rsp+0x8],rbx
   140005285:	mov    QWORD PTR [rsp+0x10],rbp
   14000528a:	mov    QWORD PTR [rsp+0x18],rsi
   14000528f:	push   rdi
   140005290:	push   r12
   140005292:	push   r13
   140005294:	sub    rsp,0x20
   140005298:	mov    rsi,rcx
   14000529b:	mov    rcx,QWORD PTR [rcx]
   14000529e:	mov    r13d,edx
   1400052a1:	mov    edx,0x8
   1400052a6:	mov    rbp,r9
   1400052a9:	mov    r12,r8
   1400052ac:	call   QWORD PTR [rip+0x26016]        # 0x14002b2c8
   1400052b2:	mov    rdi,QWORD PTR [rsp+0x60]
   1400052b7:	mov    rbx,rax
   1400052ba:	test   rax,rax
   1400052bd:	je     0x1400052e5
   1400052bf:	mov    rax,QWORD PTR [rdi]
   1400052c2:	lea    rcx,[rbx+0x10]
   1400052c6:	mov    rdx,r12
   1400052c9:	mov    QWORD PTR [rbx],rax
   1400052cc:	mov    DWORD PTR [rbx+0x8],r13d
   1400052d0:	call   QWORD PTR [rip+0x265ca]        # 0x14002b8a0
   1400052d6:	lea    rcx,[rbx+0x18]
   1400052da:	mov    rdx,rbp
   1400052dd:	call   QWORD PTR [rip+0x265bd]        # 0x14002b8a0
   1400052e3:	jmp    0x1400052e7
   1400052e5:	xor    ebx,ebx
   1400052e7:	mov    rbp,QWORD PTR [rsp+0x48]
   1400052ec:	mov    QWORD PTR [rdi],rbx
   1400052ef:	mov    rcx,QWORD PTR [rsi]
   1400052f2:	mov    rsi,QWORD PTR [rsp+0x50]
   1400052f7:	inc    DWORD PTR [rcx+0x14]
   1400052fa:	mov    rax,rbx
   1400052fd:	mov    rbx,QWORD PTR [rsp+0x40]
   140005302:	add    rsp,0x20
   140005306:	pop    r13
   140005308:	pop    r12
   14000530a:	pop    rdi
   14000530b:	ret    
   14000530c:	int3   
   14000530d:	int3   
   14000530e:	int3   
   14000530f:	int3   
   140005310:	test   rdx,rdx
   140005313:	je     0x140005328
   140005315:	mov    eax,DWORD PTR [rcx+0x8]
   140005318:	mov    QWORD PTR [rdx],0x0
   14000531f:	mov    DWORD PTR [rdx+0x8],eax
   140005322:	mov    eax,DWORD PTR [rcx+0xc]
   140005325:	mov    DWORD PTR [rdx+0xc],eax
   140005328:	repz ret 
   14000532a:	int3   
   14000532b:	int3   
   14000532c:	int3   
   14000532d:	int3   
   14000532e:	int3   
   14000532f:	int3   
   140005330:	mov    QWORD PTR [rsp+0x8],rbx
   140005335:	mov    QWORD PTR [rsp+0x10],rsi
   14000533a:	push   rdi
   14000533b:	sub    rsp,0x20
   14000533f:	mov    ecx,0x28
   140005344:	mov    rsi,r8
   140005347:	mov    rbx,rdx
   14000534a:	call   0x14002952a
   14000534f:	mov    rdi,rax
   140005352:	test   rax,rax
   140005355:	je     0x1400053a0
   140005357:	mov    rdx,rsi
   14000535a:	mov    rcx,rax
   14000535d:	call   QWORD PTR [rip+0x2653d]        # 0x14002b8a0
   140005363:	lea    rdx,[rsi+0x8]
   140005367:	lea    rcx,[rdi+0x8]
   14000536b:	call   QWORD PTR [rip+0x2652f]        # 0x14002b8a0
   140005371:	mov    r11,QWORD PTR [rsi+0x10]
   140005375:	mov    QWORD PTR [rdi+0x10],r11
   140005379:	mov    rcx,QWORD PTR [rsi+0x18]
   14000537d:	mov    QWORD PTR [rdi+0x18],rcx
   140005381:	mov    ecx,DWORD PTR [rsi+0x20]
   140005384:	mov    DWORD PTR [rdi+0x20],ecx
   140005387:	mov    eax,DWORD PTR [rsi+0x24]
   14000538a:	mov    DWORD PTR [rdi+0x24],eax
   14000538d:	mov    QWORD PTR [rbx],rdi
   140005390:	mov    rbx,QWORD PTR [rsp+0x30]
   140005395:	mov    rsi,QWORD PTR [rsp+0x38]
   14000539a:	add    rsp,0x20
   14000539e:	pop    rdi
   14000539f:	ret    
   1400053a0:	mov    rsi,QWORD PTR [rsp+0x38]
   1400053a5:	mov    QWORD PTR [rbx],0x0
   1400053ac:	mov    rbx,QWORD PTR [rsp+0x30]
   1400053b1:	add    rsp,0x20
   1400053b5:	pop    rdi
   1400053b6:	ret    
   1400053b7:	int3   
   1400053b8:	int3   
   1400053b9:	int3   
   1400053ba:	int3   
   1400053bb:	int3   
   1400053bc:	int3   
   1400053bd:	int3   
   1400053be:	int3   
   1400053bf:	int3   
   1400053c0:	mov    QWORD PTR [rsp+0x18],rbp
   1400053c5:	mov    QWORD PTR [rsp+0x20],rsi
   1400053ca:	push   r12
   1400053cc:	sub    rsp,0x20
   1400053d0:	mov    r12d,r8d
   1400053d3:	mov    r8,QWORD PTR [rcx]
   1400053d6:	mov    rbp,rcx
   1400053d9:	mov    ecx,DWORD PTR [r8+0x20]
   1400053dd:	mov    rsi,rdx
   1400053e0:	test   ecx,ecx
   1400053e2:	je     0x14000547d
   1400053e8:	xor    edx,edx
   1400053ea:	mov    eax,r12d
   1400053ed:	mov    QWORD PTR [rsp+0x30],rbx
   1400053f2:	div    ecx
   1400053f4:	mov    rax,QWORD PTR [r8+0x8]
   1400053f8:	lea    rbx,[rax+rdx*8]
   1400053fc:	mov    rax,QWORD PTR [rax+rdx*8]
   140005400:	cmp    rax,r8
   140005403:	je     0x140005478
   140005405:	mov    QWORD PTR [rsp+0x38],rdi
   14000540a:	nop    WORD PTR [rax+rax*1+0x0]
   140005410:	cmp    r12d,DWORD PTR [rax+0x8]
   140005414:	jne    0x14000544e
   140005416:	lea    rdi,[rax+0x10]
   14000541a:	mov    rcx,rsi
   14000541d:	mov    rdx,rdi
   140005420:	call   QWORD PTR [rip+0x25e72]        # 0x14002b298
   140005426:	test   al,al
   140005428:	je     0x14000544e
   14000542a:	lea    rdx,[rdi+0x8]
   14000542e:	lea    rcx,[rsi+0x8]
   140005432:	call   QWORD PTR [rip+0x25e60]        # 0x14002b298
   140005438:	test   al,al
   14000543a:	je     0x14000544e
   14000543c:	lea    rdx,[rdi+0x10]
   140005440:	lea    rcx,[rsi+0x10]
   140005444:	call   QWORD PTR [rip+0x25e4e]        # 0x14002b298
   14000544a:	test   al,al
   14000544c:	jne    0x14000545a
   14000544e:	mov    rbx,QWORD PTR [rbx]
   140005451:	mov    rax,QWORD PTR [rbx]
   140005454:	cmp    rax,QWORD PTR [rbp+0x0]
   140005458:	jne    0x140005410
   14000545a:	mov    rdi,QWORD PTR [rsp+0x38]
   14000545f:	mov    rax,rbx
   140005462:	mov    rbx,QWORD PTR [rsp+0x30]
   140005467:	mov    rbp,QWORD PTR [rsp+0x40]
   14000546c:	mov    rsi,QWORD PTR [rsp+0x48]
   140005471:	add    rsp,0x20
   140005475:	pop    r12
   140005477:	ret    
   140005478:	mov    rax,rbx
   14000547b:	jmp    0x140005462
   14000547d:	mov    rsi,QWORD PTR [rsp+0x48]
   140005482:	mov    rax,rbp
   140005485:	mov    rbp,QWORD PTR [rsp+0x40]
   14000548a:	add    rsp,0x20
   14000548e:	pop    r12
   140005490:	ret    
   140005491:	int3   
   140005492:	int3   
   140005493:	int3   
   140005494:	int3   
   140005495:	int3   
   140005496:	int3   
   140005497:	int3   
   140005498:	int3   
   140005499:	int3   
   14000549a:	int3   
   14000549b:	int3   
   14000549c:	int3   
   14000549d:	int3   
   14000549e:	int3   
   14000549f:	int3   
   1400054a0:	test   rdx,rdx
   1400054a3:	je     0x140005512
   1400054a5:	mov    QWORD PTR [rsp+0x18],rbp
   1400054aa:	push   rsi
   1400054ab:	sub    rsp,0x20
   1400054af:	mov    eax,DWORD PTR [rcx+0x8]
   1400054b2:	mov    rsi,rdx
   1400054b5:	mov    QWORD PTR [rdx],0x0
   1400054bc:	mov    DWORD PTR [rdx+0x8],eax
   1400054bf:	mov    rbp,rcx
   1400054c2:	lea    rdx,[rcx+0x10]
   1400054c6:	lea    rcx,[rsi+0x10]
   1400054ca:	mov    QWORD PTR [rsp+0x30],rbx
   1400054cf:	mov    QWORD PTR [rsp+0x38],rdi
   1400054d4:	call   QWORD PTR [rip+0x263c6]        # 0x14002b8a0
   1400054da:	lea    rdx,[rbp+0x18]
   1400054de:	lea    rcx,[rsi+0x18]
   1400054e2:	call   QWORD PTR [rip+0x263b8]        # 0x14002b8a0
   1400054e8:	lea    rdx,[rbp+0x20]
   1400054ec:	lea    rcx,[rsi+0x20]
   1400054f0:	call   QWORD PTR [rip+0x263aa]        # 0x14002b8a0
   1400054f6:	mov    r11d,DWORD PTR [rbp+0x28]
   1400054fa:	mov    rdi,QWORD PTR [rsp+0x38]
   1400054ff:	mov    rbx,QWORD PTR [rsp+0x30]
   140005504:	mov    rbp,QWORD PTR [rsp+0x40]
   140005509:	mov    DWORD PTR [rsi+0x28],r11d
   14000550d:	add    rsp,0x20
   140005511:	pop    rsi
   140005512:	repz ret 
   140005514:	int3   
   140005515:	int3   
   140005516:	int3   
   140005517:	int3   
   140005518:	int3   
   140005519:	int3   
   14000551a:	int3   
   14000551b:	int3   
   14000551c:	int3   
   14000551d:	int3   
   14000551e:	int3   
   14000551f:	int3   
   140005520:	rex push rbp
   140005522:	push   rsi
   140005523:	push   r12
   140005525:	sub    rsp,0x20
   140005529:	mov    ebp,r8d
   14000552c:	mov    r8,QWORD PTR [rcx]
   14000552f:	mov    rsi,rcx
   140005532:	mov    ecx,DWORD PTR [r8+0x20]
   140005536:	mov    r12,rdx
   140005539:	test   ecx,ecx
   14000553b:	je     0x1400055e7
   140005541:	xor    edx,edx
   140005543:	mov    eax,ebp
   140005545:	mov    QWORD PTR [rsp+0x50],rdi
   14000554a:	div    ecx
   14000554c:	mov    rax,QWORD PTR [r8+0x8]
   140005550:	lea    rdi,[rax+rdx*8]
   140005554:	mov    rax,QWORD PTR [rax+rdx*8]
   140005558:	cmp    rax,r8
   14000555b:	je     0x1400055d6
   14000555d:	mov    QWORD PTR [rsp+0x48],rbx
   140005562:	cmp    ebp,DWORD PTR [rax+0x8]
   140005565:	jne    0x1400055b5
   140005567:	mov    rdx,QWORD PTR [rax+0x10]
   14000556b:	mov    rbx,QWORD PTR [r12]
   14000556f:	lea    rcx,[rsp+0x58]
   140005574:	call   QWORD PTR [rip+0x26326]        # 0x14002b8a0
   14000557a:	lea    rcx,[rsp+0x40]
   14000557f:	mov    rdx,rbx
   140005582:	call   QWORD PTR [rip+0x26318]        # 0x14002b8a0
   140005588:	lea    rdx,[rsp+0x58]
   14000558d:	lea    rcx,[rsp+0x40]
   140005592:	call   QWORD PTR [rip+0x25d00]        # 0x14002b298
   140005598:	lea    rcx,[rsp+0x40]
   14000559d:	movzx  ebx,al
   1400055a0:	call   QWORD PTR [rip+0x262f2]        # 0x14002b898
   1400055a6:	lea    rcx,[rsp+0x58]
   1400055ab:	call   QWORD PTR [rip+0x262e7]        # 0x14002b898
   1400055b1:	test   bl,bl
   1400055b3:	jne    0x1400055c0
   1400055b5:	mov    rdi,QWORD PTR [rdi]
   1400055b8:	mov    rax,QWORD PTR [rdi]
   1400055bb:	cmp    rax,QWORD PTR [rsi]
   1400055be:	jne    0x140005562
   1400055c0:	mov    rbx,QWORD PTR [rsp+0x48]
   1400055c5:	mov    rax,rdi
   1400055c8:	mov    rdi,QWORD PTR [rsp+0x50]
   1400055cd:	add    rsp,0x20
   1400055d1:	pop    r12
   1400055d3:	pop    rsi
   1400055d4:	pop    rbp
   1400055d5:	ret    
   1400055d6:	mov    rax,rdi
   1400055d9:	mov    rdi,QWORD PTR [rsp+0x50]
   1400055de:	add    rsp,0x20
   1400055e2:	pop    r12
   1400055e4:	pop    rsi
   1400055e5:	pop    rbp
   1400055e6:	ret    
   1400055e7:	mov    rax,rsi
   1400055ea:	add    rsp,0x20
   1400055ee:	pop    r12
   1400055f0:	pop    rsi
   1400055f1:	pop    rbp
   1400055f2:	ret    
   1400055f3:	int3   
   1400055f4:	int3   
   1400055f5:	int3   
   1400055f6:	int3   
   1400055f7:	int3   
   1400055f8:	int3   
   1400055f9:	int3   
   1400055fa:	int3   
   1400055fb:	int3   
   1400055fc:	int3   
   1400055fd:	int3   
   1400055fe:	int3   
   1400055ff:	int3   
   140005600:	rex push rbx
   140005602:	push   rbp
   140005603:	push   rdi
   140005604:	sub    rsp,0x20
   140005608:	mov    rbx,QWORD PTR [rdx]
   14000560b:	mov    rdi,rdx
   14000560e:	mov    rbp,rcx
   140005611:	cmp    QWORD PTR [rcx],rbx
   140005614:	je     0x140005761
   14000561a:	mov    QWORD PTR [rsp+0x40],rbx
   14000561f:	mov    eax,DWORD PTR [rbx]
   140005621:	mov    QWORD PTR [rsp+0x48],rsi
   140005626:	mov    QWORD PTR [rsp+0x50],r12
   14000562b:	test   eax,eax
   14000562d:	je     0x140005646
   14000562f:	cmp    eax,0xffffffff
   140005632:	je     0x1400056c9
   140005638:	lock add DWORD PTR [rbx],0x1
   14000563c:	mov    rbx,QWORD PTR [rsp+0x40]
   140005641:	jmp    0x1400056c9
   140005646:	mov    edx,DWORD PTR [rbx+0x4]
   140005649:	lea    rcx,[rsp+0x40]
   14000564e:	mov    QWORD PTR [rsp+0x58],r13
   140005653:	call   QWORD PTR [rip+0x261ff]        # 0x14002b858
   140005659:	mov    rbx,QWORD PTR [rsp+0x40]
   14000565e:	mov    rcx,QWORD PTR [rdi]
   140005661:	movsxd rax,DWORD PTR [rbx+0xc]
   140005665:	lea    r13,[rbx+rax*8+0x10]
   14000566a:	movsxd rax,DWORD PTR [rcx+0x8]
   14000566e:	lea    r12,[rcx+rax*8+0x10]
   140005673:	movsxd rax,DWORD PTR [rbx+0x8]
   140005677:	lea    rsi,[rbx+rax*8+0x10]
   14000567c:	cmp    rsi,r13
   14000567f:	je     0x1400056c4
   140005681:	mov    ecx,0x10
   140005686:	call   0x14002952a
   14000568b:	mov    rdi,rax
   14000568e:	test   rax,rax
   140005691:	je     0x1400056ad
   140005693:	mov    rbx,QWORD PTR [r12]
   140005697:	mov    rcx,rax
   14000569a:	mov    rdx,rbx
   14000569d:	call   QWORD PTR [rip+0x261fd]        # 0x14002b8a0
   1400056a3:	mov    r11d,DWORD PTR [rbx+0x8]
   1400056a7:	mov    DWORD PTR [rdi+0x8],r11d
   1400056ab:	jmp    0x1400056af
   1400056ad:	xor    edi,edi
   1400056af:	mov    QWORD PTR [rsi],rdi
   1400056b2:	add    rsi,0x8
   1400056b6:	add    r12,0x8
   1400056ba:	cmp    rsi,r13
   1400056bd:	jne    0x140005681
   1400056bf:	mov    rbx,QWORD PTR [rsp+0x40]
   1400056c4:	mov    r13,QWORD PTR [rsp+0x58]
   1400056c9:	lea    rax,[rsp+0x40]
   1400056ce:	cmp    rax,rbp
   1400056d1:	je     0x1400056e3
   1400056d3:	mov    rax,rbx
   1400056d6:	mov    rbx,QWORD PTR [rbp+0x0]
   1400056da:	mov    QWORD PTR [rsp+0x40],rbx
   1400056df:	mov    QWORD PTR [rbp+0x0],rax
   1400056e3:	mov    eax,DWORD PTR [rbx]
   1400056e5:	test   eax,eax
   1400056e7:	je     0x1400056fe
   1400056e9:	cmp    eax,0xffffffff
   1400056ec:	je     0x14000574c
   1400056ee:	lock add DWORD PTR [rbx],0xffffffff
   1400056f2:	setne  al
   1400056f5:	test   al,al
   1400056f7:	jne    0x14000574c
   1400056f9:	mov    rbx,QWORD PTR [rsp+0x40]
   1400056fe:	movsxd rax,DWORD PTR [rbx+0xc]
   140005702:	lea    rdi,[rbx+rax*8+0x10]
   140005707:	movsxd rax,DWORD PTR [rbx+0x8]
   14000570b:	lea    r12,[rbx+rax*8+0x10]
   140005710:	cmp    r12,rdi
   140005713:	je     0x140005743
   140005715:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140005720:	mov    rsi,QWORD PTR [rdi-0x8]
   140005724:	sub    rdi,0x8
   140005728:	test   rsi,rsi
   14000572b:	je     0x14000573e
   14000572d:	mov    rcx,rsi
   140005730:	call   QWORD PTR [rip+0x26162]        # 0x14002b898
   140005736:	mov    rcx,rsi
   140005739:	call   0x140029524
   14000573e:	cmp    rdi,r12
   140005741:	jne    0x140005720
   140005743:	mov    rcx,rbx
   140005746:	call   QWORD PTR [rip+0x26124]        # 0x14002b870
   14000574c:	mov    rsi,QWORD PTR [rsp+0x48]
   140005751:	mov    r12,QWORD PTR [rsp+0x50]
   140005756:	mov    rax,rbp
   140005759:	add    rsp,0x20
   14000575d:	pop    rdi
   14000575e:	pop    rbp
   14000575f:	pop    rbx
   140005760:	ret    
   140005761:	mov    rax,rcx
   140005764:	add    rsp,0x20
   140005768:	pop    rdi
   140005769:	pop    rbp
   14000576a:	pop    rbx
   14000576b:	ret    
   14000576c:	int3   
   14000576d:	int3   
   14000576e:	int3   
   14000576f:	int3   
   140005770:	mov    QWORD PTR [rsp+0x18],rbp
   140005775:	mov    QWORD PTR [rsp+0x20],rsi
   14000577a:	push   r12
   14000577c:	sub    rsp,0x20
   140005780:	mov    rax,QWORD PTR [rcx]
   140005783:	mov    rbp,r8
   140005786:	mov    r12,rdx
   140005789:	cmp    DWORD PTR [rax+0x14],0x0
   14000578d:	mov    rsi,rcx
   140005790:	je     0x14000580a
   140005792:	xor    r8d,r8d
   140005795:	cmp    DWORD PTR [rax+0x20],r8d
   140005799:	je     0x1400057e3
   14000579b:	lea    rcx,[rdx+0x10]
   14000579f:	mov    QWORD PTR [rsp+0x30],rbx
   1400057a4:	xor    edx,edx
   1400057a6:	mov    QWORD PTR [rsp+0x38],rdi
   1400057ab:	mov    edi,DWORD PTR [rax+0x24]
   1400057ae:	call   QWORD PTR [rip+0x25af4]        # 0x14002b2a8
   1400057b4:	lea    rcx,[r12+0x8]
   1400057b9:	xor    edx,edx
   1400057bb:	mov    ebx,eax
   1400057bd:	call   QWORD PTR [rip+0x25ae5]        # 0x14002b2a8
   1400057c3:	xor    edx,edx
   1400057c5:	mov    rcx,r12
   1400057c8:	xor    ebx,eax
   1400057ca:	call   QWORD PTR [rip+0x25ad8]        # 0x14002b2a8
   1400057d0:	mov    r8d,eax
   1400057d3:	xor    r8d,ebx
   1400057d6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400057db:	xor    r8d,edi
   1400057de:	mov    rdi,QWORD PTR [rsp+0x38]
   1400057e3:	mov    rdx,r12
   1400057e6:	mov    rcx,rsi
   1400057e9:	call   0x1400053c0
   1400057ee:	mov    rcx,QWORD PTR [rax]
   1400057f1:	cmp    rcx,QWORD PTR [rsi]
   1400057f4:	je     0x14000580a
   1400057f6:	mov    eax,DWORD PTR [rcx+0x28]
   1400057f9:	mov    rbp,QWORD PTR [rsp+0x40]
   1400057fe:	mov    rsi,QWORD PTR [rsp+0x48]
   140005803:	add    rsp,0x20
   140005807:	pop    r12
   140005809:	ret    
   14000580a:	mov    eax,DWORD PTR [rbp+0x0]
   14000580d:	mov    rsi,QWORD PTR [rsp+0x48]
   140005812:	mov    rbp,QWORD PTR [rsp+0x40]
   140005817:	add    rsp,0x20
   14000581b:	pop    r12
   14000581d:	ret    
   14000581e:	int3   
   14000581f:	int3   
   140005820:	mov    QWORD PTR [rsp+0x8],rbx
   140005825:	mov    QWORD PTR [rsp+0x10],rsi
   14000582a:	push   rdi
   14000582b:	sub    rsp,0x20
   14000582f:	mov    rax,QWORD PTR [rcx]
   140005832:	mov    rsi,r8
   140005835:	mov    rbx,rdx
   140005838:	cmp    DWORD PTR [rax+0x14],0x0
   14000583c:	mov    rdi,rcx
   14000583f:	je     0x14000588c
   140005841:	xor    r8d,r8d
   140005844:	cmp    DWORD PTR [rax+0x20],r8d
   140005848:	je     0x140005859
   14000584a:	mov    edx,DWORD PTR [rax+0x24]
   14000584d:	mov    rcx,rsi
   140005850:	call   QWORD PTR [rip+0x25a52]        # 0x14002b2a8
   140005856:	mov    r8d,eax
   140005859:	mov    rdx,rsi
   14000585c:	mov    rcx,rdi
   14000585f:	call   0x14001c3c0
   140005864:	mov    rdx,QWORD PTR [rax]
   140005867:	cmp    rdx,QWORD PTR [rdi]
   14000586a:	je     0x14000588c
   14000586c:	add    rdx,0x18
   140005870:	mov    rcx,rbx
   140005873:	call   QWORD PTR [rip+0x26027]        # 0x14002b8a0
   140005879:	mov    rax,rbx
   14000587c:	mov    rbx,QWORD PTR [rsp+0x30]
   140005881:	mov    rsi,QWORD PTR [rsp+0x38]
   140005886:	add    rsp,0x20
   14000588a:	pop    rdi
   14000588b:	ret    
   14000588c:	mov    rcx,rbx
   14000588f:	call   QWORD PTR [rip+0x25ffb]        # 0x14002b890
   140005895:	mov    rsi,QWORD PTR [rsp+0x38]
   14000589a:	mov    rax,rbx
   14000589d:	mov    rbx,QWORD PTR [rsp+0x30]
   1400058a2:	add    rsp,0x20
   1400058a6:	pop    rdi
   1400058a7:	ret    
   1400058a8:	int3   
   1400058a9:	int3   
   1400058aa:	int3   
   1400058ab:	int3   
   1400058ac:	int3   
   1400058ad:	int3   
   1400058ae:	int3   
   1400058af:	int3   
   1400058b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400058b5:	mov    QWORD PTR [rsp+0x18],rbp
   1400058ba:	mov    QWORD PTR [rsp+0x20],rsi
   1400058bf:	mov    DWORD PTR [rsp+0x10],edx
   1400058c3:	push   rdi
   1400058c4:	sub    rsp,0x20
   1400058c8:	mov    rdx,QWORD PTR [rcx]
   1400058cb:	movsxd rdi,r8d
   1400058ce:	mov    rbp,rcx
   1400058d1:	movsxd rax,DWORD PTR [rdx+0x8]
   1400058d5:	mov    r8d,edi
   1400058d8:	lea    rbx,[rdx+rax*8+0x10]
   1400058dd:	lea    rdx,[rsp+0x38]
   1400058e2:	call   QWORD PTR [rip+0x25f68]        # 0x14002b850
   1400058e8:	mov    r10,QWORD PTR [rbp+0x0]
   1400058ec:	movsxd rdx,DWORD PTR [rsp+0x38]
   1400058f1:	movsxd r9,DWORD PTR [r10+0x8]
   1400058f5:	mov    rcx,rbp
   1400058f8:	mov    rsi,rax
   1400058fb:	add    rdx,r9
   1400058fe:	lea    r8,[r10+rdx*8+0x10]
   140005903:	lea    rdx,[r10+r9*8+0x10]
   140005908:	mov    r9,rbx
   14000590b:	call   0x1400014c0
   140005910:	mov    rdx,QWORD PTR [rbp+0x0]
   140005914:	movsxd r11,DWORD PTR [rsp+0x38]
   140005919:	movsxd rcx,DWORD PTR [rdx+0xc]
   14000591d:	lea    r9,[rbx+r11*8]
   140005921:	lea    r8,[rdx+rcx*8+0x10]
   140005926:	movsxd rcx,DWORD PTR [rdx+0x8]
   14000592a:	add    rcx,r11
   14000592d:	add    rcx,rdi
   140005930:	lea    rdx,[rdx+rcx*8+0x10]
   140005935:	mov    rcx,rbp
   140005938:	call   0x1400014c0
   14000593d:	mov    r11d,DWORD PTR [rsi]
   140005940:	test   r11d,r11d
   140005943:	je     0x140005956
   140005945:	cmp    r11d,0xffffffff
   140005949:	je     0x140005961
   14000594b:	lock add DWORD PTR [rsi],0xffffffff
   14000594f:	setne  al
   140005952:	test   al,al
   140005954:	jne    0x140005961
   140005956:	mov    rdx,rsi
   140005959:	mov    rcx,rbp
   14000595c:	call   0x140001440
   140005961:	mov    rdx,QWORD PTR [rbp+0x0]
   140005965:	movsxd rax,DWORD PTR [rsp+0x38]
   14000596a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000596f:	movsxd rcx,DWORD PTR [rdx+0x8]
   140005973:	mov    rbp,QWORD PTR [rsp+0x40]
   140005978:	mov    rsi,QWORD PTR [rsp+0x48]
   14000597d:	add    rcx,rax
   140005980:	lea    rax,[rdx+rcx*8+0x10]
   140005985:	add    rsp,0x20
   140005989:	pop    rdi
   14000598a:	ret    
   14000598b:	int3   
   14000598c:	int3   
   14000598d:	int3   
   14000598e:	int3   
   14000598f:	int3   
   140005990:	mov    QWORD PTR [rsp+0x8],rbx
   140005995:	push   rdi
   140005996:	sub    rsp,0x30
   14000599a:	mov    rbx,rcx
   14000599d:	mov    rcx,QWORD PTR [rcx]
   1400059a0:	lea    r8,[rip+0xffffffffffffbba9]        # 0x140001550
   1400059a7:	lea    rdx,[rip+0xfffffffffffff852]        # 0x140005200
   1400059ae:	mov    r9d,0x20
   1400059b4:	mov    DWORD PTR [rsp+0x20],0x8
   1400059bc:	call   QWORD PTR [rip+0x25e86]        # 0x14002b848
   1400059c2:	mov    rdi,rax
   1400059c5:	mov    rax,QWORD PTR [rbx]
   1400059c8:	mov    ecx,DWORD PTR [rax+0x10]
   1400059cb:	test   ecx,ecx
   1400059cd:	je     0x1400059e0
   1400059cf:	cmp    ecx,0xffffffff
   1400059d2:	je     0x1400059f0
   1400059d4:	lock add DWORD PTR [rax+0x10],0xffffffff
   1400059d9:	setne  al
   1400059dc:	test   al,al
   1400059de:	jne    0x1400059f0
   1400059e0:	mov    rcx,QWORD PTR [rbx]
   1400059e3:	lea    rdx,[rip+0xffffffffffffbb66]        # 0x140001550
   1400059ea:	call   QWORD PTR [rip+0x25e78]        # 0x14002b868
   1400059f0:	mov    QWORD PTR [rbx],rdi
   1400059f3:	mov    rbx,QWORD PTR [rsp+0x40]
   1400059f8:	add    rsp,0x30
   1400059fc:	pop    rdi
   1400059fd:	ret    
   1400059fe:	int3   
   1400059ff:	int3   
   140005a00:	mov    QWORD PTR [rsp+0x8],rbx
   140005a05:	push   rdi
   140005a06:	sub    rsp,0x30
   140005a0a:	mov    rbx,rcx
   140005a0d:	mov    rcx,QWORD PTR [rcx]
   140005a10:	lea    r8,[rip+0xffffffffffffc1a9]        # 0x140001bc0
   140005a17:	lea    rdx,[rip+0xfffffffffffffa82]        # 0x1400054a0
   140005a1e:	mov    r9d,0x30
   140005a24:	mov    DWORD PTR [rsp+0x20],0x8
   140005a2c:	call   QWORD PTR [rip+0x25e16]        # 0x14002b848
   140005a32:	mov    rdi,rax
   140005a35:	mov    rax,QWORD PTR [rbx]
   140005a38:	mov    ecx,DWORD PTR [rax+0x10]
   140005a3b:	test   ecx,ecx
   140005a3d:	je     0x140005a50
   140005a3f:	cmp    ecx,0xffffffff
   140005a42:	je     0x140005a60
   140005a44:	lock add DWORD PTR [rax+0x10],0xffffffff
   140005a49:	setne  al
   140005a4c:	test   al,al
   140005a4e:	jne    0x140005a60
   140005a50:	mov    rcx,QWORD PTR [rbx]
   140005a53:	lea    rdx,[rip+0xffffffffffffc166]        # 0x140001bc0
   140005a5a:	call   QWORD PTR [rip+0x25e08]        # 0x14002b868
   140005a60:	mov    QWORD PTR [rbx],rdi
   140005a63:	mov    rbx,QWORD PTR [rsp+0x40]
   140005a68:	add    rsp,0x30
   140005a6c:	pop    rdi
   140005a6d:	ret    
   140005a6e:	int3   
   140005a6f:	int3   
   140005a70:	mov    QWORD PTR [rsp+0x8],rbx
   140005a75:	mov    QWORD PTR [rsp+0x18],rbp
   140005a7a:	mov    QWORD PTR [rsp+0x20],rsi
   140005a7f:	mov    DWORD PTR [rsp+0x10],edx
   140005a83:	push   rdi
   140005a84:	sub    rsp,0x20
   140005a88:	mov    rdx,QWORD PTR [rcx]
   140005a8b:	movsxd rdi,r8d
   140005a8e:	mov    rbp,rcx
   140005a91:	movsxd rax,DWORD PTR [rdx+0x8]
   140005a95:	mov    r8d,edi
   140005a98:	lea    rbx,[rdx+rax*8+0x10]
   140005a9d:	lea    rdx,[rsp+0x38]
   140005aa2:	call   QWORD PTR [rip+0x25da8]        # 0x14002b850
   140005aa8:	mov    r10,QWORD PTR [rbp+0x0]
   140005aac:	movsxd rdx,DWORD PTR [rsp+0x38]
   140005ab1:	movsxd r9,DWORD PTR [r10+0x8]
   140005ab5:	mov    rcx,rbp
   140005ab8:	mov    rsi,rax
   140005abb:	add    rdx,r9
   140005abe:	lea    r8,[r10+rdx*8+0x10]
   140005ac3:	lea    rdx,[r10+r9*8+0x10]
   140005ac8:	mov    r9,rbx
   140005acb:	call   0x140001360
   140005ad0:	mov    rdx,QWORD PTR [rbp+0x0]
   140005ad4:	movsxd r11,DWORD PTR [rsp+0x38]
   140005ad9:	movsxd rcx,DWORD PTR [rdx+0xc]
   140005add:	lea    r9,[rbx+r11*8]
   140005ae1:	lea    r8,[rdx+rcx*8+0x10]
   140005ae6:	movsxd rcx,DWORD PTR [rdx+0x8]
   140005aea:	add    rcx,r11
   140005aed:	add    rcx,rdi
   140005af0:	lea    rdx,[rdx+rcx*8+0x10]
   140005af5:	mov    rcx,rbp
   140005af8:	call   0x140001360
   140005afd:	mov    r11d,DWORD PTR [rsi]
   140005b00:	test   r11d,r11d
   140005b03:	je     0x140005b16
   140005b05:	cmp    r11d,0xffffffff
   140005b09:	je     0x140005b21
   140005b0b:	lock add DWORD PTR [rsi],0xffffffff
   140005b0f:	setne  al
   140005b12:	test   al,al
   140005b14:	jne    0x140005b21
   140005b16:	mov    rdx,rsi
   140005b19:	mov    rcx,rbp
   140005b1c:	call   0x140001290
   140005b21:	mov    rdx,QWORD PTR [rbp+0x0]
   140005b25:	movsxd rax,DWORD PTR [rsp+0x38]
   140005b2a:	mov    rbx,QWORD PTR [rsp+0x30]
   140005b2f:	movsxd rcx,DWORD PTR [rdx+0x8]
   140005b33:	mov    rbp,QWORD PTR [rsp+0x40]
   140005b38:	mov    rsi,QWORD PTR [rsp+0x48]
   140005b3d:	add    rcx,rax
   140005b40:	lea    rax,[rdx+rcx*8+0x10]
   140005b45:	add    rsp,0x20
   140005b49:	pop    rdi
   140005b4a:	ret    
   140005b4b:	int3   
   140005b4c:	int3   
   140005b4d:	int3   
   140005b4e:	int3   
   140005b4f:	int3   
   140005b50:	mov    QWORD PTR [rsp+0x8],rbx
   140005b55:	push   rdi
   140005b56:	sub    rsp,0x30
   140005b5a:	mov    rbx,rcx
   140005b5d:	mov    rcx,QWORD PTR [rcx]
   140005b60:	lea    r8,[rip+0xffffffffffffb719]        # 0x140001280
   140005b67:	lea    rdx,[rip+0xfffffffffffff6e2]        # 0x140005250
   140005b6e:	mov    r9d,0x20
   140005b74:	mov    DWORD PTR [rsp+0x20],0x8
   140005b7c:	call   QWORD PTR [rip+0x25cc6]        # 0x14002b848
   140005b82:	mov    rdi,rax
   140005b85:	mov    rax,QWORD PTR [rbx]
   140005b88:	mov    ecx,DWORD PTR [rax+0x10]
   140005b8b:	test   ecx,ecx
   140005b8d:	je     0x140005ba0
   140005b8f:	cmp    ecx,0xffffffff
   140005b92:	je     0x140005bb0
   140005b94:	lock add DWORD PTR [rax+0x10],0xffffffff
   140005b99:	setne  al
   140005b9c:	test   al,al
   140005b9e:	jne    0x140005bb0
   140005ba0:	mov    rcx,QWORD PTR [rbx]
   140005ba3:	lea    rdx,[rip+0xffffffffffffb6d6]        # 0x140001280
   140005baa:	call   QWORD PTR [rip+0x25cb8]        # 0x14002b868
   140005bb0:	mov    QWORD PTR [rbx],rdi
   140005bb3:	mov    rbx,QWORD PTR [rsp+0x40]
   140005bb8:	add    rsp,0x30
   140005bbc:	pop    rdi
   140005bbd:	ret    
   140005bbe:	int3   
   140005bbf:	int3   
   140005bc0:	mov    QWORD PTR [rsp+0x8],rbx
   140005bc5:	mov    QWORD PTR [rsp+0x10],rsi
   140005bca:	push   rdi
   140005bcb:	sub    rsp,0x20
   140005bcf:	mov    r8,QWORD PTR [rcx]
   140005bd2:	mov    rsi,rcx
   140005bd5:	movsxd rax,DWORD PTR [r8+0x8]
   140005bd9:	lea    rbx,[r8+rax*8+0x10]
   140005bde:	call   QWORD PTR [rip+0x25c74]        # 0x14002b858
   140005be4:	mov    r10,QWORD PTR [rsi]
   140005be7:	movsxd rdx,DWORD PTR [r10+0xc]
   140005beb:	mov    r9,rbx
   140005bee:	mov    rcx,rsi
   140005bf1:	lea    r8,[r10+rdx*8+0x10]
   140005bf6:	movsxd rdx,DWORD PTR [r10+0x8]
   140005bfa:	mov    rdi,rax
   140005bfd:	lea    rdx,[r10+rdx*8+0x10]
   140005c02:	call   0x140001360
   140005c07:	mov    r11d,DWORD PTR [rdi]
   140005c0a:	test   r11d,r11d
   140005c0d:	je     0x140005c20
   140005c0f:	cmp    r11d,0xffffffff
   140005c13:	je     0x140005c2b
   140005c15:	lock add DWORD PTR [rdi],0xffffffff
   140005c19:	setne  al
   140005c1c:	test   al,al
   140005c1e:	jne    0x140005c2b
   140005c20:	mov    rdx,rdi
   140005c23:	mov    rcx,rsi
   140005c26:	call   0x140001290
   140005c2b:	mov    rbx,QWORD PTR [rsp+0x30]
   140005c30:	mov    rsi,QWORD PTR [rsp+0x38]
   140005c35:	add    rsp,0x20
   140005c39:	pop    rdi
   140005c3a:	ret    
   140005c3b:	int3   
   140005c3c:	int3   
   140005c3d:	int3   
   140005c3e:	int3   
   140005c3f:	int3   
   140005c40:	mov    QWORD PTR [rsp+0x8],rbx
   140005c45:	push   rdi
   140005c46:	sub    rsp,0x20
   140005c4a:	mov    rdi,QWORD PTR [rdx]
   140005c4d:	mov    rbx,rcx
   140005c50:	cmp    QWORD PTR [rcx],rdi
   140005c53:	je     0x140005ca2
   140005c55:	mov    eax,DWORD PTR [rdi+0x10]
   140005c58:	test   eax,eax
   140005c5a:	je     0x140005c66
   140005c5c:	cmp    eax,0xffffffff
   140005c5f:	je     0x140005c66
   140005c61:	lock add DWORD PTR [rdi+0x10],0x1
   140005c66:	mov    rcx,QWORD PTR [rcx]
   140005c69:	mov    eax,DWORD PTR [rcx+0x10]
   140005c6c:	test   eax,eax
   140005c6e:	je     0x140005c81
   140005c70:	cmp    eax,0xffffffff
   140005c73:	je     0x140005c91
   140005c75:	lock add DWORD PTR [rcx+0x10],0xffffffff
   140005c7a:	setne  al
   140005c7d:	test   al,al
   140005c7f:	jne    0x140005c91
   140005c81:	mov    rcx,QWORD PTR [rbx]
   140005c84:	lea    rdx,[rip+0xffffffffffffb785]        # 0x140001410
   140005c8b:	call   QWORD PTR [rip+0x25bd7]        # 0x14002b868
   140005c91:	mov    QWORD PTR [rbx],rdi
   140005c94:	test   BYTE PTR [rdi+0x28],0x1
   140005c98:	jne    0x140005ca2
   140005c9a:	mov    rcx,rbx
   140005c9d:	call   0x140001b50
   140005ca2:	mov    rax,rbx
   140005ca5:	mov    rbx,QWORD PTR [rsp+0x30]
   140005caa:	add    rsp,0x20
   140005cae:	pop    rdi
   140005caf:	ret    
   140005cb0:	mov    QWORD PTR [rsp+0x20],rbx
   140005cb5:	push   rdi
   140005cb6:	sub    rsp,0x20
   140005cba:	mov    rax,QWORD PTR [rip+0x25bc7]        # 0x14002b888
   140005cc1:	mov    rbx,rdx
   140005cc4:	mov    rdi,rcx
   140005cc7:	mov    QWORD PTR [rsp+0x30],rax
   140005ccc:	mov    r8d,DWORD PTR [rax]
   140005ccf:	cmp    r8d,0x1
   140005cd3:	je     0x140005d02
   140005cd5:	test   r8d,r8d
   140005cd8:	je     0x140005d02
   140005cda:	lea    rcx,[rsp+0x30]
   140005cdf:	mov    edx,0x7fffffff
   140005ce4:	mov    r8d,0x1
   140005cea:	call   0x140001a10
   140005cef:	test   rax,rax
   140005cf2:	je     0x140005d20
   140005cf4:	mov    rdx,rbx
   140005cf7:	mov    rcx,rax
   140005cfa:	call   QWORD PTR [rip+0x25ba0]        # 0x14002b8a0
   140005d00:	jmp    0x140005d20
   140005d02:	lea    rcx,[rsp+0x40]
   140005d07:	call   QWORD PTR [rip+0x25b93]        # 0x14002b8a0
   140005d0d:	lea    rcx,[rsp+0x30]
   140005d12:	call   QWORD PTR [rip+0x25b28]        # 0x14002b840
   140005d18:	mov    rcx,QWORD PTR [rsp+0x40]
   140005d1d:	mov    QWORD PTR [rax],rcx
   140005d20:	lea    rcx,[rdi+0x50]
   140005d24:	lea    rdx,[rsp+0x30]
   140005d29:	call   0x140001830
   140005d2e:	mov    rdi,QWORD PTR [rsp+0x30]
   140005d33:	mov    eax,DWORD PTR [rdi]
   140005d35:	test   eax,eax
   140005d37:	je     0x140005d4e
   140005d39:	cmp    eax,0xffffffff
   140005d3c:	je     0x140005d90
   140005d3e:	lock add DWORD PTR [rdi],0xffffffff
   140005d42:	setne  al
   140005d45:	test   al,al
   140005d47:	jne    0x140005d90
   140005d49:	mov    rdi,QWORD PTR [rsp+0x30]
   140005d4e:	movsxd rax,DWORD PTR [rdi+0xc]
   140005d52:	mov    QWORD PTR [rsp+0x38],rsi
   140005d57:	lea    rbx,[rdi+rax*8+0x10]
   140005d5c:	movsxd rax,DWORD PTR [rdi+0x8]
   140005d60:	lea    rsi,[rdi+rax*8+0x10]
   140005d65:	cmp    rsi,rbx
   140005d68:	je     0x140005d82
   140005d6a:	nop    WORD PTR [rax+rax*1+0x0]
   140005d70:	sub    rbx,0x8
   140005d74:	mov    rcx,rbx
   140005d77:	call   QWORD PTR [rip+0x25b1b]        # 0x14002b898
   140005d7d:	cmp    rbx,rsi
   140005d80:	jne    0x140005d70
   140005d82:	mov    rcx,rdi
   140005d85:	call   QWORD PTR [rip+0x25ae5]        # 0x14002b870
   140005d8b:	mov    rsi,QWORD PTR [rsp+0x38]
   140005d90:	mov    rbx,QWORD PTR [rsp+0x48]
   140005d95:	add    rsp,0x20
   140005d99:	pop    rdi
   140005d9a:	ret    
   140005d9b:	int3   
   140005d9c:	int3   
   140005d9d:	int3   
   140005d9e:	int3   
   140005d9f:	int3   
   140005da0:	sub    rsp,0x28
   140005da4:	mov    eax,DWORD PTR [rip+0x2f80e]        # 0x1400355b8
   140005daa:	test   al,0x1
   140005dac:	jne    0x140005dd1
   140005dae:	or     eax,0x1
   140005db1:	lea    rcx,[rip+0x24068]        # 0x140029e20
   140005db8:	mov    DWORD PTR [rip+0x2f7fa],eax        # 0x1400355b8
   140005dbe:	mov    rax,QWORD PTR [rip+0x25ac3]        # 0x14002b888
   140005dc5:	mov    QWORD PTR [rip+0x2f7e4],rax        # 0x1400355b0
   140005dcc:	call   0x1400295e8
   140005dd1:	lea    rax,[rip+0x2f7d8]        # 0x1400355b0
   140005dd8:	add    rsp,0x28
   140005ddc:	ret    
   140005ddd:	int3   
   140005dde:	int3   
   140005ddf:	int3   
   140005de0:	mov    QWORD PTR [rsp+0x8],rbx
   140005de5:	push   rdi
   140005de6:	sub    rsp,0x20
   140005dea:	mov    rbx,rdx
   140005ded:	mov    rdi,rcx
   140005df0:	call   QWORD PTR [rip+0x25aba]        # 0x14002b8b0
   140005df6:	lea    rdx,[rbx+0x8]
   140005dfa:	lea    rcx,[rdi+0x8]
   140005dfe:	call   QWORD PTR [rip+0x25aac]        # 0x14002b8b0
   140005e04:	lea    rdx,[rbx+0x10]
   140005e08:	lea    rcx,[rdi+0x10]
   140005e0c:	call   QWORD PTR [rip+0x25a9e]        # 0x14002b8b0
   140005e12:	lea    rdx,[rbx+0x18]
   140005e16:	lea    rcx,[rdi+0x18]
   140005e1a:	call   QWORD PTR [rip+0x25a90]        # 0x14002b8b0
   140005e20:	lea    rdx,[rbx+0x20]
   140005e24:	lea    rcx,[rdi+0x20]
   140005e28:	call   QWORD PTR [rip+0x25a82]        # 0x14002b8b0
   140005e2e:	lea    rdx,[rbx+0x28]
   140005e32:	lea    rcx,[rdi+0x28]
   140005e36:	call   QWORD PTR [rip+0x25a74]        # 0x14002b8b0
   140005e3c:	lea    rdx,[rbx+0x30]
   140005e40:	lea    rcx,[rdi+0x30]
   140005e44:	call   QWORD PTR [rip+0x25a66]        # 0x14002b8b0
   140005e4a:	lea    rdx,[rbx+0x38]
   140005e4e:	lea    rcx,[rdi+0x38]
   140005e52:	call   0x140005c40
   140005e57:	lea    rdx,[rbx+0x40]
   140005e5b:	lea    rcx,[rdi+0x40]
   140005e5f:	call   QWORD PTR [rip+0x25a4b]        # 0x14002b8b0
   140005e65:	lea    rdx,[rbx+0x48]
   140005e69:	lea    rcx,[rdi+0x48]
   140005e6d:	call   QWORD PTR [rip+0x25a3d]        # 0x14002b8b0
   140005e73:	lea    rdx,[rbx+0x50]
   140005e77:	lea    rcx,[rdi+0x50]
   140005e7b:	call   0x140001830
   140005e80:	lea    rdx,[rbx+0x58]
   140005e84:	lea    rcx,[rdi+0x58]
   140005e88:	call   QWORD PTR [rip+0x25a22]        # 0x14002b8b0
   140005e8e:	mov    r11d,DWORD PTR [rbx+0x60]
   140005e92:	lea    rdx,[rbx+0x68]
   140005e96:	lea    rcx,[rdi+0x68]
   140005e9a:	mov    DWORD PTR [rdi+0x60],r11d
   140005e9e:	call   0x140005600
   140005ea3:	mov    r11d,DWORD PTR [rbx+0x70]
   140005ea7:	mov    DWORD PTR [rdi+0x70],r11d
   140005eab:	movzx  eax,BYTE PTR [rbx+0x74]
   140005eaf:	mov    rbx,QWORD PTR [rsp+0x30]
   140005eb4:	mov    BYTE PTR [rdi+0x74],al
   140005eb7:	mov    rax,rdi
   140005eba:	add    rsp,0x20
   140005ebe:	pop    rdi
   140005ebf:	ret    
   140005ec0:	rex push rbx
   140005ec2:	sub    rsp,0x20
   140005ec6:	add    rcx,0x28
   140005eca:	mov    rbx,rdx
   140005ecd:	call   0x140005820
   140005ed2:	mov    rax,rbx
   140005ed5:	add    rsp,0x20
   140005ed9:	pop    rbx
   140005eda:	ret    
   140005edb:	int3   
   140005edc:	int3   
   140005edd:	int3   
   140005ede:	int3   
   140005edf:	int3   
   140005ee0:	mov    QWORD PTR [rsp+0x10],rbx
   140005ee5:	mov    QWORD PTR [rsp+0x18],rbp
   140005eea:	mov    QWORD PTR [rsp+0x20],rsi
   140005eef:	push   rdi
   140005ef0:	sub    rsp,0x30
   140005ef4:	mov    rax,QWORD PTR [rcx]
   140005ef7:	mov    rbx,rcx
   140005efa:	mov    rdi,rdx
   140005efd:	mov    ecx,DWORD PTR [rax+0x10]
   140005f00:	cmp    ecx,0x1
   140005f03:	je     0x140005f11
   140005f05:	test   ecx,ecx
   140005f07:	je     0x140005f11
   140005f09:	mov    rcx,rbx
   140005f0c:	call   0x140001b50
   140005f11:	mov    rax,QWORD PTR [rbx]
   140005f14:	mov    rcx,rdi
   140005f17:	mov    edx,DWORD PTR [rax+0x24]
   140005f1a:	call   QWORD PTR [rip+0x25388]        # 0x14002b2a8
   140005f20:	mov    rdx,rdi
   140005f23:	mov    rcx,rbx
   140005f26:	mov    r8d,eax
   140005f29:	mov    esi,eax
   140005f2b:	call   0x14001c3c0
   140005f30:	mov    rcx,QWORD PTR [rbx]
   140005f33:	mov    rbp,rax
   140005f36:	mov    rax,QWORD PTR [rax]
   140005f39:	cmp    rax,rcx
   140005f3c:	jne    0x140005fa9
   140005f3e:	mov    edx,DWORD PTR [rcx+0x20]
   140005f41:	cmp    DWORD PTR [rcx+0x14],edx
   140005f44:	jl     0x140005f75
   140005f46:	movsx  edx,WORD PTR [rcx+0x1e]
   140005f4a:	inc    edx
   140005f4c:	call   QWORD PTR [rip+0x2538e]        # 0x14002b2e0
   140005f52:	mov    r11,QWORD PTR [rbx]
   140005f55:	mov    rcx,rdi
   140005f58:	mov    edx,DWORD PTR [r11+0x24]
   140005f5c:	call   QWORD PTR [rip+0x25346]        # 0x14002b2a8
   140005f62:	mov    rdx,rdi
   140005f65:	mov    rcx,rbx
   140005f68:	mov    r8d,eax
   140005f6b:	mov    esi,eax
   140005f6d:	call   0x14001c3c0
   140005f72:	mov    rbp,rax
   140005f75:	lea    rcx,[rsp+0x40]
   140005f7a:	call   QWORD PTR [rip+0x25910]        # 0x14002b890
   140005f80:	mov    r8,rdi
   140005f83:	mov    edx,esi
   140005f85:	mov    rcx,rbx
   140005f88:	mov    r9,rax
   140005f8b:	mov    QWORD PTR [rsp+0x20],rbp
   140005f90:	call   0x140005280
   140005f95:	lea    rcx,[rsp+0x40]
   140005f9a:	mov    rbx,rax
   140005f9d:	call   QWORD PTR [rip+0x258f5]        # 0x14002b898
   140005fa3:	lea    rax,[rbx+0x18]
   140005fa7:	jmp    0x140005fad
   140005fa9:	add    rax,0x18
   140005fad:	mov    rbx,QWORD PTR [rsp+0x48]
   140005fb2:	mov    rbp,QWORD PTR [rsp+0x50]
   140005fb7:	mov    rsi,QWORD PTR [rsp+0x58]
   140005fbc:	add    rsp,0x30
   140005fc0:	pop    rdi
   140005fc1:	ret    
   140005fc2:	int3   
   140005fc3:	int3   
   140005fc4:	int3   
   140005fc5:	int3   
   140005fc6:	int3   
   140005fc7:	int3   
   140005fc8:	int3   
   140005fc9:	int3   
   140005fca:	int3   
   140005fcb:	int3   
   140005fcc:	int3   
   140005fcd:	int3   
   140005fce:	int3   
   140005fcf:	int3   
   140005fd0:	mov    QWORD PTR [rsp+0x8],rbx
   140005fd5:	mov    QWORD PTR [rsp+0x10],rsi
   140005fda:	push   rdi
   140005fdb:	sub    rsp,0x20
   140005fdf:	mov    rbx,QWORD PTR [rip+0x2589a]        # 0x14002b880
   140005fe6:	mov    rdi,rcx
   140005fe9:	cmp    QWORD PTR [rcx],rbx
   140005fec:	je     0x14000603b
   140005fee:	mov    eax,DWORD PTR [rbx+0x10]
   140005ff1:	test   eax,eax
   140005ff3:	je     0x140005fff
   140005ff5:	cmp    eax,0xffffffff
   140005ff8:	je     0x140005fff
   140005ffa:	lock add DWORD PTR [rbx+0x10],0x1
   140005fff:	mov    rcx,QWORD PTR [rcx]
   140006002:	mov    eax,DWORD PTR [rcx+0x10]
   140006005:	test   eax,eax
   140006007:	je     0x14000601a
   140006009:	cmp    eax,0xffffffff
   14000600c:	je     0x14000602a
   14000600e:	lock add DWORD PTR [rcx+0x10],0xffffffff
   140006013:	setne  al
   140006016:	test   al,al
   140006018:	jne    0x14000602a
   14000601a:	mov    rcx,QWORD PTR [rdi]
   14000601d:	lea    rdx,[rip+0xffffffffffffb52c]        # 0x140001550
   140006024:	call   QWORD PTR [rip+0x2583e]        # 0x14002b868
   14000602a:	mov    QWORD PTR [rdi],rbx
   14000602d:	test   BYTE PTR [rbx+0x28],0x1
   140006031:	jne    0x14000603b
   140006033:	mov    rcx,rdi
   140006036:	call   0x140005990
   14000603b:	mov    eax,DWORD PTR [rbx+0x10]
   14000603e:	test   eax,eax
   140006040:	je     0x140006053
   140006042:	cmp    eax,0xffffffff
   140006045:	je     0x140006063
   140006047:	lock add DWORD PTR [rbx+0x10],0xffffffff
   14000604c:	setne  al
   14000604f:	test   al,al
   140006051:	jne    0x140006063
   140006053:	lea    rdx,[rip+0xffffffffffffb4f6]        # 0x140001550
   14000605a:	mov    rcx,rbx
   14000605d:	call   QWORD PTR [rip+0x25805]        # 0x14002b868
   140006063:	mov    rbx,QWORD PTR [rsp+0x30]
   140006068:	mov    rsi,QWORD PTR [rsp+0x38]
   14000606d:	add    rsp,0x20
   140006071:	pop    rdi
   140006072:	ret    
   140006073:	int3   
   140006074:	int3   
   140006075:	int3   
   140006076:	int3   
   140006077:	int3   
   140006078:	int3   
   140006079:	int3   
   14000607a:	int3   
   14000607b:	int3   
   14000607c:	int3   
   14000607d:	int3   
   14000607e:	int3   
   14000607f:	int3   
   140006080:	rex push rbx
   140006082:	push   rdi
   140006083:	sub    rsp,0x28
   140006087:	mov    rax,QWORD PTR [rcx]
   14000608a:	mov    rbx,rdx
   14000608d:	mov    rdi,rcx
   140006090:	cmp    DWORD PTR [rax+0x14],0x0
   140006094:	jne    0x14000609f
   140006096:	xor    eax,eax
   140006098:	add    rsp,0x28
   14000609c:	pop    rdi
   14000609d:	pop    rbx
   14000609e:	ret    
   14000609f:	mov    eax,DWORD PTR [rax+0x10]
   1400060a2:	mov    QWORD PTR [rsp+0x50],r12
   1400060a7:	mov    QWORD PTR [rsp+0x20],r13
   1400060ac:	cmp    eax,0x1
   1400060af:	je     0x1400060ba
   1400060b1:	test   eax,eax
   1400060b3:	je     0x1400060ba
   1400060b5:	call   0x140005990
   1400060ba:	mov    rax,QWORD PTR [rdi]
   1400060bd:	xor    r8d,r8d
   1400060c0:	mov    r13d,DWORD PTR [rax+0x14]
   1400060c4:	cmp    DWORD PTR [rax+0x20],r8d
   1400060c8:	je     0x1400060d9
   1400060ca:	mov    edx,DWORD PTR [rax+0x24]
   1400060cd:	mov    rcx,rbx
   1400060d0:	call   QWORD PTR [rip+0x251d2]        # 0x14002b2a8
   1400060d6:	mov    r8d,eax
   1400060d9:	mov    rdx,rbx
   1400060dc:	mov    rcx,rdi
   1400060df:	call   0x14001c3c0
   1400060e4:	mov    r12,rax
   1400060e7:	mov    rax,QWORD PTR [rdi]
   1400060ea:	cmp    QWORD PTR [r12],rax
   1400060ee:	je     0x140006162
   1400060f0:	mov    QWORD PTR [rsp+0x40],rbp
   1400060f5:	mov    QWORD PTR [rsp+0x48],rsi
   1400060fa:	nop    WORD PTR [rax+rax*1+0x0]
   140006100:	mov    rdx,QWORD PTR [r12]
   140006104:	mov    rsi,QWORD PTR [rdx]
   140006107:	cmp    rsi,QWORD PTR [rdi]
   14000610a:	je     0x140006123
   14000610c:	lea    rcx,[rsi+0x10]
   140006110:	add    rdx,0x10
   140006114:	call   QWORD PTR [rip+0x2517e]        # 0x14002b298
   14000611a:	test   al,al
   14000611c:	je     0x140006123
   14000611e:	mov    bpl,0x1
   140006121:	jmp    0x140006126
   140006123:	xor    bpl,bpl
   140006126:	mov    rbx,QWORD PTR [r12]
   14000612a:	lea    rcx,[rbx+0x10]
   14000612e:	call   QWORD PTR [rip+0x25764]        # 0x14002b898
   140006134:	mov    rcx,QWORD PTR [rdi]
   140006137:	mov    rdx,rbx
   14000613a:	call   QWORD PTR [rip+0x25198]        # 0x14002b2d8
   140006140:	mov    QWORD PTR [r12],rsi
   140006144:	mov    rcx,QWORD PTR [rdi]
   140006147:	dec    DWORD PTR [rcx+0x14]
   14000614a:	test   bpl,bpl
   14000614d:	jne    0x140006100
   14000614f:	mov    rcx,QWORD PTR [rdi]
   140006152:	call   QWORD PTR [rip+0x25198]        # 0x14002b2f0
   140006158:	mov    rsi,QWORD PTR [rsp+0x48]
   14000615d:	mov    rbp,QWORD PTR [rsp+0x40]
   140006162:	mov    rcx,QWORD PTR [rdi]
   140006165:	mov    r12,QWORD PTR [rsp+0x50]
   14000616a:	sub    r13d,DWORD PTR [rcx+0x14]
   14000616e:	mov    eax,r13d
   140006171:	mov    r13,QWORD PTR [rsp+0x20]
   140006176:	add    rsp,0x28
   14000617a:	pop    rdi
   14000617b:	pop    rbx
   14000617c:	ret    
   14000617d:	int3   
   14000617e:	int3   
   14000617f:	int3   
   140006180:	mov    QWORD PTR [rsp+0x10],rbp
   140006185:	mov    QWORD PTR [rsp+0x18],rsi
   14000618a:	mov    QWORD PTR [rsp+0x20],rdi
   14000618f:	push   r12
   140006191:	sub    rsp,0x20
   140006195:	mov    rax,QWORD PTR [rcx]
   140006198:	mov    rdi,rcx
   14000619b:	mov    rsi,rdx
   14000619e:	mov    ecx,DWORD PTR [rax+0x10]
   1400061a1:	cmp    ecx,0x1
   1400061a4:	je     0x1400061b2
   1400061a6:	test   ecx,ecx
   1400061a8:	je     0x1400061b2
   1400061aa:	mov    rcx,rdi
   1400061ad:	call   0x140005990
   1400061b2:	mov    rax,QWORD PTR [rdi]
   1400061b5:	mov    rcx,rsi
   1400061b8:	mov    edx,DWORD PTR [rax+0x24]
   1400061bb:	call   QWORD PTR [rip+0x250e7]        # 0x14002b2a8
   1400061c1:	mov    rdx,rsi
   1400061c4:	mov    rcx,rdi
   1400061c7:	mov    r8d,eax
   1400061ca:	mov    r12d,eax
   1400061cd:	call   0x14001c3c0
   1400061d2:	mov    rcx,QWORD PTR [rdi]
   1400061d5:	mov    rbp,rax
   1400061d8:	mov    rax,QWORD PTR [rax]
   1400061db:	cmp    rax,rcx
   1400061de:	jne    0x14000626f
   1400061e4:	mov    edx,DWORD PTR [rcx+0x20]
   1400061e7:	mov    QWORD PTR [rsp+0x30],rbx
   1400061ec:	cmp    DWORD PTR [rcx+0x14],edx
   1400061ef:	jl     0x140006221
   1400061f1:	movsx  edx,WORD PTR [rcx+0x1e]
   1400061f5:	inc    edx
   1400061f7:	call   QWORD PTR [rip+0x250e3]        # 0x14002b2e0
   1400061fd:	mov    r11,QWORD PTR [rdi]
   140006200:	mov    rcx,rsi
   140006203:	mov    edx,DWORD PTR [r11+0x24]
   140006207:	call   QWORD PTR [rip+0x2509b]        # 0x14002b2a8
   14000620d:	mov    rdx,rsi
   140006210:	mov    rcx,rdi
   140006213:	mov    r8d,eax
   140006216:	mov    r12d,eax
   140006219:	call   0x14001c3c0
   14000621e:	mov    rbp,rax
   140006221:	mov    rcx,QWORD PTR [rdi]
   140006224:	mov    edx,0x8
   140006229:	call   QWORD PTR [rip+0x25099]        # 0x14002b2c8
   14000622f:	mov    rbx,rax
   140006232:	test   rax,rax
   140006235:	je     0x140006258
   140006237:	mov    rcx,QWORD PTR [rbp+0x0]
   14000623b:	mov    rdx,rsi
   14000623e:	mov    DWORD PTR [rax+0x8],r12d
   140006242:	mov    QWORD PTR [rax],rcx
   140006245:	lea    rcx,[rax+0x10]
   140006249:	call   QWORD PTR [rip+0x25651]        # 0x14002b8a0
   14000624f:	mov    DWORD PTR [rbx+0x18],0x0
   140006256:	jmp    0x14000625a
   140006258:	xor    ebx,ebx
   14000625a:	mov    QWORD PTR [rbp+0x0],rbx
   14000625e:	mov    rax,QWORD PTR [rdi]
   140006261:	inc    DWORD PTR [rax+0x14]
   140006264:	lea    rax,[rbx+0x18]
   140006268:	mov    rbx,QWORD PTR [rsp+0x30]
   14000626d:	jmp    0x140006273
   14000626f:	add    rax,0x18
   140006273:	mov    rbp,QWORD PTR [rsp+0x38]
   140006278:	mov    rsi,QWORD PTR [rsp+0x40]
   14000627d:	mov    rdi,QWORD PTR [rsp+0x48]
   140006282:	add    rsp,0x20
   140006286:	pop    r12
   140006288:	ret    
   140006289:	int3   
   14000628a:	int3   
   14000628b:	int3   
   14000628c:	int3   
   14000628d:	int3   
   14000628e:	int3   
   14000628f:	int3   
   140006290:	mov    QWORD PTR [rsp+0x8],rbx
   140006295:	mov    QWORD PTR [rsp+0x10],rsi
   14000629a:	push   rdi
   14000629b:	sub    rsp,0x20
   14000629f:	mov    rbx,QWORD PTR [rip+0x255da]        # 0x14002b880
   1400062a6:	mov    rdi,rcx
   1400062a9:	cmp    QWORD PTR [rcx],rbx
   1400062ac:	je     0x1400062fb
   1400062ae:	mov    eax,DWORD PTR [rbx+0x10]
   1400062b1:	test   eax,eax
   1400062b3:	je     0x1400062bf
   1400062b5:	cmp    eax,0xffffffff
   1400062b8:	je     0x1400062bf
   1400062ba:	lock add DWORD PTR [rbx+0x10],0x1
   1400062bf:	mov    rcx,QWORD PTR [rcx]
   1400062c2:	mov    eax,DWORD PTR [rcx+0x10]
   1400062c5:	test   eax,eax
   1400062c7:	je     0x1400062da
   1400062c9:	cmp    eax,0xffffffff
   1400062cc:	je     0x1400062ea
   1400062ce:	lock add DWORD PTR [rcx+0x10],0xffffffff
   1400062d3:	setne  al
   1400062d6:	test   al,al
   1400062d8:	jne    0x1400062ea
   1400062da:	mov    rcx,QWORD PTR [rdi]
   1400062dd:	lea    rdx,[rip+0xffffffffffffb8dc]        # 0x140001bc0
   1400062e4:	call   QWORD PTR [rip+0x2557e]        # 0x14002b868
   1400062ea:	mov    QWORD PTR [rdi],rbx
   1400062ed:	test   BYTE PTR [rbx+0x28],0x1
   1400062f1:	jne    0x1400062fb
   1400062f3:	mov    rcx,rdi
   1400062f6:	call   0x140005a00
   1400062fb:	mov    eax,DWORD PTR [rbx+0x10]
   1400062fe:	test   eax,eax
   140006300:	je     0x140006313
   140006302:	cmp    eax,0xffffffff
   140006305:	je     0x140006323
   140006307:	lock add DWORD PTR [rbx+0x10],0xffffffff
   14000630c:	setne  al
   14000630f:	test   al,al
   140006311:	jne    0x140006323
   140006313:	lea    rdx,[rip+0xffffffffffffb8a6]        # 0x140001bc0
   14000631a:	mov    rcx,rbx
   14000631d:	call   QWORD PTR [rip+0x25545]        # 0x14002b868
   140006323:	mov    rbx,QWORD PTR [rsp+0x30]
   140006328:	mov    rsi,QWORD PTR [rsp+0x38]
   14000632d:	add    rsp,0x20
   140006331:	pop    rdi
   140006332:	ret    
   140006333:	int3   
   140006334:	int3   
   140006335:	int3   
   140006336:	int3   
   140006337:	int3   
   140006338:	int3   
   140006339:	int3   
   14000633a:	int3   
   14000633b:	int3   
   14000633c:	int3   
   14000633d:	int3   
   14000633e:	int3   
   14000633f:	int3   
   140006340:	rex push rbp
   140006342:	push   rsi
   140006343:	sub    rsp,0x28
   140006347:	mov    rax,QWORD PTR [rcx]
   14000634a:	mov    rbp,rdx
   14000634d:	mov    rsi,rcx
   140006350:	cmp    DWORD PTR [rax+0x14],0x0
   140006354:	jne    0x14000635f
   140006356:	xor    eax,eax
   140006358:	add    rsp,0x28
   14000635c:	pop    rsi
   14000635d:	pop    rbp
   14000635e:	ret    
   14000635f:	mov    eax,DWORD PTR [rax+0x10]
   140006362:	mov    QWORD PTR [rsp+0x58],r13
   140006367:	mov    QWORD PTR [rsp+0x20],r14
   14000636c:	cmp    eax,0x1
   14000636f:	je     0x14000637a
   140006371:	test   eax,eax
   140006373:	je     0x14000637a
   140006375:	call   0x140005a00
   14000637a:	mov    rax,QWORD PTR [rsi]
   14000637d:	xor    r8d,r8d
   140006380:	mov    QWORD PTR [rsp+0x40],rbx
   140006385:	mov    r14d,DWORD PTR [rax+0x14]
   140006389:	mov    QWORD PTR [rsp+0x48],rdi
   14000638e:	cmp    DWORD PTR [rax+0x20],r8d
   140006392:	je     0x1400063c7
   140006394:	mov    edi,DWORD PTR [rax+0x24]
   140006397:	lea    rcx,[rbp+0x10]
   14000639b:	xor    edx,edx
   14000639d:	call   QWORD PTR [rip+0x24f05]        # 0x14002b2a8
   1400063a3:	lea    rcx,[rbp+0x8]
   1400063a7:	xor    edx,edx
   1400063a9:	mov    ebx,eax
   1400063ab:	call   QWORD PTR [rip+0x24ef7]        # 0x14002b2a8
   1400063b1:	xor    edx,edx
   1400063b3:	mov    rcx,rbp
   1400063b6:	xor    ebx,eax
   1400063b8:	call   QWORD PTR [rip+0x24eea]        # 0x14002b2a8
   1400063be:	mov    r8d,eax
   1400063c1:	xor    r8d,ebx
   1400063c4:	xor    r8d,edi
   1400063c7:	mov    rdx,rbp
   1400063ca:	mov    rcx,rsi
   1400063cd:	call   0x1400053c0
   1400063d2:	mov    rcx,QWORD PTR [rsi]
   1400063d5:	mov    r13,rax
   1400063d8:	cmp    QWORD PTR [rax],rcx
   1400063db:	je     0x14000648c
   1400063e1:	mov    QWORD PTR [rsp+0x50],r12
   1400063e6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400063f0:	mov    rcx,QWORD PTR [r13+0x0]
   1400063f4:	mov    rbp,QWORD PTR [rcx]
   1400063f7:	cmp    rbp,QWORD PTR [rsi]
   1400063fa:	je     0x14000643a
   1400063fc:	lea    rbx,[rcx+0x10]
   140006400:	lea    rcx,[rbp+0x10]
   140006404:	mov    rdx,rbx
   140006407:	call   QWORD PTR [rip+0x24e8b]        # 0x14002b298
   14000640d:	test   al,al
   14000640f:	je     0x14000643a
   140006411:	lea    rdx,[rbx+0x8]
   140006415:	lea    rcx,[rbp+0x18]
   140006419:	call   QWORD PTR [rip+0x24e79]        # 0x14002b298
   14000641f:	test   al,al
   140006421:	je     0x14000643a
   140006423:	lea    rdx,[rbx+0x10]
   140006427:	lea    rcx,[rbp+0x20]
   14000642b:	call   QWORD PTR [rip+0x24e67]        # 0x14002b298
   140006431:	test   al,al
   140006433:	je     0x14000643a
   140006435:	mov    r12b,0x1
   140006438:	jmp    0x14000643d
   14000643a:	xor    r12b,r12b
   14000643d:	mov    rdi,QWORD PTR [r13+0x0]
   140006441:	lea    rcx,[rdi+0x20]
   140006445:	call   QWORD PTR [rip+0x2544d]        # 0x14002b898
   14000644b:	lea    rcx,[rdi+0x18]
   14000644f:	call   QWORD PTR [rip+0x25443]        # 0x14002b898
   140006455:	lea    rcx,[rdi+0x10]
   140006459:	call   QWORD PTR [rip+0x25439]        # 0x14002b898
   14000645f:	mov    rcx,QWORD PTR [rsi]
   140006462:	mov    rdx,rdi
   140006465:	call   QWORD PTR [rip+0x24e6d]        # 0x14002b2d8
   14000646b:	mov    QWORD PTR [r13+0x0],rbp
   14000646f:	mov    rcx,QWORD PTR [rsi]
   140006472:	dec    DWORD PTR [rcx+0x14]
   140006475:	test   r12b,r12b
   140006478:	jne    0x1400063f0
   14000647e:	mov    rcx,QWORD PTR [rsi]
   140006481:	call   QWORD PTR [rip+0x24e69]        # 0x14002b2f0
   140006487:	mov    r12,QWORD PTR [rsp+0x50]
   14000648c:	mov    rcx,QWORD PTR [rsi]
   14000648f:	mov    r13,QWORD PTR [rsp+0x58]
   140006494:	mov    rdi,QWORD PTR [rsp+0x48]
   140006499:	sub    r14d,DWORD PTR [rcx+0x14]
   14000649d:	mov    rbx,QWORD PTR [rsp+0x40]
   1400064a2:	mov    eax,r14d
   1400064a5:	mov    r14,QWORD PTR [rsp+0x20]
   1400064aa:	add    rsp,0x28
   1400064ae:	pop    rsi
   1400064af:	pop    rbp
   1400064b0:	ret    
   1400064b1:	int3   
   1400064b2:	int3   
   1400064b3:	int3   
   1400064b4:	int3   
   1400064b5:	int3   
   1400064b6:	int3   
   1400064b7:	int3   
   1400064b8:	int3   
   1400064b9:	int3   
   1400064ba:	int3   
   1400064bb:	int3   
   1400064bc:	int3   
   1400064bd:	int3   
   1400064be:	int3   
   1400064bf:	int3   
   1400064c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400064c5:	mov    QWORD PTR [rsp+0x10],rbp
   1400064ca:	mov    QWORD PTR [rsp+0x18],rsi
   1400064cf:	push   rdi
   1400064d0:	push   r12
   1400064d2:	push   r13
   1400064d4:	push   r14
   1400064d6:	push   r15
   1400064d8:	sub    rsp,0x20
   1400064dc:	mov    rax,QWORD PTR [rcx]
   1400064df:	mov    rsi,rcx
   1400064e2:	mov    rbp,rdx
   1400064e5:	mov    ecx,DWORD PTR [rax+0x10]
   1400064e8:	cmp    ecx,0x1
   1400064eb:	je     0x1400064f9
   1400064ed:	test   ecx,ecx
   1400064ef:	je     0x1400064f9
   1400064f1:	mov    rcx,rsi
   1400064f4:	call   0x140005a00
   1400064f9:	mov    rax,QWORD PTR [rsi]
   1400064fc:	lea    rcx,[rbp+0x8]
   140006500:	xor    edx,edx
   140006502:	mov    edi,DWORD PTR [rax+0x24]
   140006505:	call   QWORD PTR [rip+0x24d9d]        # 0x14002b2a8
   14000650b:	lea    rcx,[rbp+0x10]
   14000650f:	xor    edx,edx
   140006511:	mov    ebx,eax
   140006513:	call   QWORD PTR [rip+0x24d8f]        # 0x14002b2a8
   140006519:	xor    edx,edx
   14000651b:	mov    rcx,rbp
   14000651e:	xor    ebx,eax
   140006520:	call   QWORD PTR [rip+0x24d82]        # 0x14002b2a8
   140006526:	mov    rdx,rbp
   140006529:	mov    r13d,eax
   14000652c:	mov    rcx,rsi
   14000652f:	xor    r13d,ebx
   140006532:	xor    r13d,edi
   140006535:	mov    r8d,r13d
   140006538:	call   0x1400053c0
   14000653d:	mov    rcx,QWORD PTR [rsi]
   140006540:	mov    r12,rax
   140006543:	mov    rax,QWORD PTR [rax]
   140006546:	cmp    rax,rcx
   140006549:	jne    0x14000661e
   14000654f:	mov    edx,DWORD PTR [rcx+0x20]
   140006552:	cmp    DWORD PTR [rcx+0x14],edx
   140006555:	jl     0x1400065ab
   140006557:	movsx  edx,WORD PTR [rcx+0x1e]
   14000655b:	inc    edx
   14000655d:	call   QWORD PTR [rip+0x24d7d]        # 0x14002b2e0
   140006563:	mov    r11,QWORD PTR [rsi]
   140006566:	lea    rcx,[rbp+0x8]
   14000656a:	mov    edi,DWORD PTR [r11+0x24]
   14000656e:	xor    edx,edx
   140006570:	call   QWORD PTR [rip+0x24d32]        # 0x14002b2a8
   140006576:	lea    rcx,[rbp+0x10]
   14000657a:	xor    edx,edx
   14000657c:	mov    ebx,eax
   14000657e:	call   QWORD PTR [rip+0x24d24]        # 0x14002b2a8
   140006584:	xor    edx,edx
   140006586:	mov    rcx,rbp
   140006589:	xor    ebx,eax
   14000658b:	call   QWORD PTR [rip+0x24d17]        # 0x14002b2a8
   140006591:	mov    rdx,rbp
   140006594:	mov    rcx,rsi
   140006597:	mov    r13d,eax
   14000659a:	xor    r13d,ebx
   14000659d:	xor    r13d,edi
   1400065a0:	mov    r8d,r13d
   1400065a3:	call   0x1400053c0
   1400065a8:	mov    r12,rax
   1400065ab:	mov    rcx,QWORD PTR [rsi]
   1400065ae:	mov    edx,0x8
   1400065b3:	call   QWORD PTR [rip+0x24d0f]        # 0x14002b2c8
   1400065b9:	mov    rdi,rax
   1400065bc:	test   rax,rax
   1400065bf:	je     0x14000660c
   1400065c1:	mov    rcx,QWORD PTR [r12]
   1400065c5:	mov    rdx,rbp
   1400065c8:	mov    DWORD PTR [rax+0x8],r13d
   1400065cc:	mov    QWORD PTR [rax],rcx
   1400065cf:	lea    rcx,[rax+0x10]
   1400065d3:	call   QWORD PTR [rip+0x252c7]        # 0x14002b8a0
   1400065d9:	lea    rcx,[rdi+0x18]
   1400065dd:	lea    rdx,[rbp+0x8]
   1400065e1:	call   QWORD PTR [rip+0x252b9]        # 0x14002b8a0
   1400065e7:	lea    rcx,[rdi+0x20]
   1400065eb:	lea    rdx,[rbp+0x10]
   1400065ef:	call   QWORD PTR [rip+0x252ab]        # 0x14002b8a0
   1400065f5:	mov    DWORD PTR [rdi+0x28],0x0
   1400065fc:	mov    QWORD PTR [r12],rdi
   140006600:	mov    rax,QWORD PTR [rsi]
   140006603:	inc    DWORD PTR [rax+0x14]
   140006606:	lea    rax,[rdi+0x28]
   14000660a:	jmp    0x140006622
   14000660c:	xor    edi,edi
   14000660e:	mov    QWORD PTR [r12],rdi
   140006612:	mov    rax,QWORD PTR [rsi]
   140006615:	inc    DWORD PTR [rax+0x14]
   140006618:	lea    rax,[rdi+0x28]
   14000661c:	jmp    0x140006622
   14000661e:	add    rax,0x28
   140006622:	mov    rbx,QWORD PTR [rsp+0x50]
   140006627:	mov    rbp,QWORD PTR [rsp+0x58]
   14000662c:	mov    rsi,QWORD PTR [rsp+0x60]
   140006631:	add    rsp,0x20
   140006635:	pop    r15
   140006637:	pop    r14
   140006639:	pop    r13
   14000663b:	pop    r12
   14000663d:	pop    rdi
   14000663e:	ret    
   14000663f:	int3   
   140006640:	mov    QWORD PTR [rsp+0x10],rbx
   140006645:	push   rbp
   140006646:	push   rsi
   140006647:	push   rdi
   140006648:	sub    rsp,0x20
   14000664c:	mov    rax,QWORD PTR [rcx]
   14000664f:	mov    rdi,rcx
   140006652:	mov    rsi,rdx
   140006655:	mov    ecx,DWORD PTR [rax+0x10]
   140006658:	cmp    ecx,0x1
   14000665b:	je     0x140006669
   14000665d:	test   ecx,ecx
   14000665f:	je     0x140006669
   140006661:	mov    rcx,rdi
   140006664:	call   0x140005b50
   140006669:	mov    rax,QWORD PTR [rdi]
   14000666c:	mov    rdx,QWORD PTR [rsi]
   14000666f:	lea    rcx,[rsp+0x40]
   140006674:	mov    ebx,DWORD PTR [rax+0x24]
   140006677:	call   QWORD PTR [rip+0x25223]        # 0x14002b8a0
   14000667d:	lea    rcx,[rsp+0x40]
   140006682:	xor    edx,edx
   140006684:	call   QWORD PTR [rip+0x24c1e]        # 0x14002b2a8
   14000668a:	lea    rcx,[rsp+0x40]
   14000668f:	mov    ebp,eax
   140006691:	call   QWORD PTR [rip+0x25201]        # 0x14002b898
   140006697:	xor    ebp,ebx
   140006699:	mov    rdx,rsi
   14000669c:	mov    rcx,rdi
   14000669f:	mov    r8d,ebp
   1400066a2:	call   0x140005520
   1400066a7:	mov    rcx,QWORD PTR [rdi]
   1400066aa:	mov    rbx,rax
   1400066ad:	mov    rax,QWORD PTR [rax]
   1400066b0:	cmp    rax,rcx
   1400066b3:	jne    0x140006773
   1400066b9:	mov    edx,DWORD PTR [rcx+0x20]
   1400066bc:	cmp    DWORD PTR [rcx+0x14],edx
   1400066bf:	jl     0x14000670f
   1400066c1:	movsx  edx,WORD PTR [rcx+0x1e]
   1400066c5:	inc    edx
   1400066c7:	call   QWORD PTR [rip+0x24c13]        # 0x14002b2e0
   1400066cd:	mov    r11,QWORD PTR [rdi]
   1400066d0:	mov    rdx,QWORD PTR [rsi]
   1400066d3:	mov    ebx,DWORD PTR [r11+0x24]
   1400066d7:	lea    rcx,[rsp+0x50]
   1400066dc:	call   QWORD PTR [rip+0x251be]        # 0x14002b8a0
   1400066e2:	lea    rcx,[rsp+0x50]
   1400066e7:	xor    edx,edx
   1400066e9:	call   QWORD PTR [rip+0x24bb9]        # 0x14002b2a8
   1400066ef:	lea    rcx,[rsp+0x50]
   1400066f4:	mov    ebp,eax
   1400066f6:	call   QWORD PTR [rip+0x2519c]        # 0x14002b898
   1400066fc:	xor    ebp,ebx
   1400066fe:	mov    rdx,rsi
   140006701:	mov    rcx,rdi
   140006704:	mov    r8d,ebp
   140006707:	call   0x140005520
   14000670c:	mov    rbx,rax
   14000670f:	mov    rcx,QWORD PTR [rdi]
   140006712:	mov    edx,0x8
   140006717:	call   QWORD PTR [rip+0x24bab]        # 0x14002b2c8
   14000671d:	mov    r11,rax
   140006720:	test   rax,rax
   140006723:	je     0x140006756
   140006725:	mov    rcx,QWORD PTR [rbx]
   140006728:	mov    DWORD PTR [rax+0x8],ebp
   14000672b:	mov    QWORD PTR [rax],rcx
   14000672e:	mov    rcx,QWORD PTR [rsi]
   140006731:	mov    DWORD PTR [rax+0x18],0x0
   140006738:	mov    QWORD PTR [rax+0x10],rcx
   14000673c:	mov    QWORD PTR [rbx],rax
   14000673f:	mov    rax,QWORD PTR [rdi]
   140006742:	inc    DWORD PTR [rax+0x14]
   140006745:	lea    rax,[r11+0x18]
   140006749:	mov    rbx,QWORD PTR [rsp+0x48]
   14000674e:	add    rsp,0x20
   140006752:	pop    rdi
   140006753:	pop    rsi
   140006754:	pop    rbp
   140006755:	ret    
   140006756:	xor    r11d,r11d
   140006759:	mov    QWORD PTR [rbx],r11
   14000675c:	mov    rax,QWORD PTR [rdi]
   14000675f:	inc    DWORD PTR [rax+0x14]
   140006762:	lea    rax,[r11+0x18]
   140006766:	mov    rbx,QWORD PTR [rsp+0x48]
   14000676b:	add    rsp,0x20
   14000676f:	pop    rdi
   140006770:	pop    rsi
   140006771:	pop    rbp
   140006772:	ret    
   140006773:	add    rax,0x18
   140006777:	mov    rbx,QWORD PTR [rsp+0x48]
   14000677c:	add    rsp,0x20
   140006780:	pop    rdi
   140006781:	pop    rsi
   140006782:	pop    rbp
   140006783:	ret    
   140006784:	int3   
   140006785:	int3   
   140006786:	int3   
   140006787:	int3   
   140006788:	int3   
   140006789:	int3   
   14000678a:	int3   
   14000678b:	int3   
   14000678c:	int3   
   14000678d:	int3   
   14000678e:	int3   
   14000678f:	int3   
   140006790:	mov    QWORD PTR [rsp+0x10],rbx
   140006795:	mov    QWORD PTR [rsp+0x18],rsi
   14000679a:	push   rdi
   14000679b:	sub    rsp,0x40
   14000679f:	mov    rbx,QWORD PTR [rcx+0x50]
   1400067a3:	mov    rdi,rcx
   1400067a6:	mov    QWORD PTR [rsp+0x20],rbx
   1400067ab:	mov    eax,DWORD PTR [rbx]
   1400067ad:	test   eax,eax
   1400067af:	je     0x1400067c1
   1400067b1:	cmp    eax,0xffffffff
   1400067b4:	je     0x140006828
   1400067b6:	lock add DWORD PTR [rbx],0x1
   1400067ba:	mov    rbx,QWORD PTR [rsp+0x20]
   1400067bf:	jmp    0x140006828
   1400067c1:	mov    edx,DWORD PTR [rbx+0x4]
   1400067c4:	lea    rcx,[rsp+0x20]
   1400067c9:	mov    QWORD PTR [rsp+0x50],rbp
   1400067ce:	call   QWORD PTR [rip+0x25084]        # 0x14002b858
   1400067d4:	mov    rbx,QWORD PTR [rsp+0x20]
   1400067d9:	mov    rcx,QWORD PTR [rdi+0x50]
   1400067dd:	movsxd rax,DWORD PTR [rbx+0xc]
   1400067e1:	lea    rbp,[rbx+rax*8+0x10]
   1400067e6:	movsxd rax,DWORD PTR [rcx+0x8]
   1400067ea:	lea    rsi,[rcx+rax*8+0x10]
   1400067ef:	movsxd rax,DWORD PTR [rbx+0x8]
   1400067f3:	lea    rdi,[rbx+rax*8+0x10]
   1400067f8:	cmp    rdi,rbp
   1400067fb:	je     0x140006823
   1400067fd:	nop    DWORD PTR [rax]
   140006800:	test   rdi,rdi
   140006803:	je     0x140006811
   140006805:	mov    rdx,rsi
   140006808:	mov    rcx,rdi
   14000680b:	call   QWORD PTR [rip+0x2508f]        # 0x14002b8a0
   140006811:	add    rdi,0x8
   140006815:	add    rsi,0x8
   140006819:	cmp    rdi,rbp
   14000681c:	jne    0x140006800
   14000681e:	mov    rbx,QWORD PTR [rsp+0x20]
   140006823:	mov    rbp,QWORD PTR [rsp+0x50]
   140006828:	mov    DWORD PTR [rsp+0x28],0x0
   140006830:	movsxd rax,DWORD PTR [rbx+0x8]
   140006834:	lea    rdx,[rbx+rax*8+0x10]
   140006839:	mov    QWORD PTR [rsp+0x30],rdx
   14000683e:	movsxd rax,DWORD PTR [rbx+0xc]
   140006842:	lea    r8,[rbx+rax*8+0x10]
   140006847:	mov    QWORD PTR [rsp+0x38],r8
   14000684c:	nop    DWORD PTR [rax+0x0]
   140006850:	mov    ecx,0x1
   140006855:	mov    DWORD PTR [rsp+0x28],ecx
   140006859:	cmp    rdx,r8
   14000685c:	je     0x1400068ed
   140006862:	test   ecx,ecx
   140006864:	je     0x140006877
   140006866:	mov    rax,QWORD PTR [rdx]
   140006869:	cmp    DWORD PTR [rax+0x4],0x0
   14000686d:	jne    0x140006882
   14000686f:	dec    ecx
   140006871:	mov    DWORD PTR [rsp+0x28],ecx
   140006875:	jmp    0x140006862
   140006877:	add    rdx,0x8
   14000687b:	mov    QWORD PTR [rsp+0x30],rdx
   140006880:	jmp    0x140006850
   140006882:	mov    eax,DWORD PTR [rbx]
   140006884:	test   eax,eax
   140006886:	je     0x1400068a3
   140006888:	cmp    eax,0xffffffff
   14000688b:	je     0x1400068db
   14000688d:	or     eax,0xffffffff
   140006890:	lock xadd DWORD PTR [rbx],eax
   140006894:	add    eax,0xffffffff
   140006897:	setne  al
   14000689a:	test   al,al
   14000689c:	jne    0x1400068db
   14000689e:	mov    rbx,QWORD PTR [rsp+0x20]
   1400068a3:	movsxd rax,DWORD PTR [rbx+0xc]
   1400068a7:	lea    rdi,[rbx+rax*8+0x10]
   1400068ac:	movsxd rax,DWORD PTR [rbx+0x8]
   1400068b0:	lea    rsi,[rbx+rax*8+0x10]
   1400068b5:	cmp    rsi,rdi
   1400068b8:	je     0x1400068d2
   1400068ba:	nop    WORD PTR [rax+rax*1+0x0]
   1400068c0:	sub    rdi,0x8
   1400068c4:	mov    rcx,rdi
   1400068c7:	call   QWORD PTR [rip+0x24fcb]        # 0x14002b898
   1400068cd:	cmp    rdi,rsi
   1400068d0:	jne    0x1400068c0
   1400068d2:	mov    rcx,rbx
   1400068d5:	call   QWORD PTR [rip+0x24f95]        # 0x14002b870
   1400068db:	mov    al,0x1
   1400068dd:	mov    rbx,QWORD PTR [rsp+0x58]
   1400068e2:	mov    rsi,QWORD PTR [rsp+0x60]
   1400068e7:	add    rsp,0x40
   1400068eb:	pop    rdi
   1400068ec:	ret    
   1400068ed:	mov    eax,DWORD PTR [rbx]
   1400068ef:	test   eax,eax
   1400068f1:	je     0x14000690e
   1400068f3:	cmp    eax,0xffffffff
   1400068f6:	je     0x14000694b
   1400068f8:	or     eax,0xffffffff
   1400068fb:	lock xadd DWORD PTR [rbx],eax
   1400068ff:	add    eax,0xffffffff
   140006902:	setne  al
   140006905:	test   al,al
   140006907:	jne    0x14000694b
   140006909:	mov    rbx,QWORD PTR [rsp+0x20]
   14000690e:	movsxd rax,DWORD PTR [rbx+0xc]
   140006912:	lea    rdi,[rbx+rax*8+0x10]
   140006917:	movsxd rax,DWORD PTR [rbx+0x8]
   14000691b:	lea    rsi,[rbx+rax*8+0x10]
   140006920:	cmp    rsi,rdi
   140006923:	je     0x140006942
   140006925:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140006930:	sub    rdi,0x8
   140006934:	mov    rcx,rdi
   140006937:	call   QWORD PTR [rip+0x24f5b]        # 0x14002b898
   14000693d:	cmp    rdi,rsi
   140006940:	jne    0x140006930
   140006942:	mov    rcx,rbx
   140006945:	call   QWORD PTR [rip+0x24f25]        # 0x14002b870
   14000694b:	mov    rbx,QWORD PTR [rsp+0x58]
   140006950:	mov    rsi,QWORD PTR [rsp+0x60]
   140006955:	xor    al,al
   140006957:	add    rsp,0x40
   14000695b:	pop    rdi
   14000695c:	ret    
   14000695d:	int3   
   14000695e:	int3   
   14000695f:	int3   
   140006960:	mov    QWORD PTR [rsp+0x8],rbx
   140006965:	mov    QWORD PTR [rsp+0x10],rbp
   14000696a:	push   rsi
   14000696b:	push   rdi
   14000696c:	push   r12
   14000696e:	sub    rsp,0x40
   140006972:	mov    ebp,edx
   140006974:	mov    r12,rcx
   140006977:	lea    rdx,[r8+0x10]
   14000697b:	lea    rcx,[rsp+0x78]
   140006980:	mov    rdi,r8
   140006983:	mov    DWORD PTR [rsp+0x70],0x0
   14000698b:	mov    ebx,0x1
   140006990:	call   QWORD PTR [rip+0x24f0a]        # 0x14002b8a0
   140006996:	mov    r11,QWORD PTR [rsp+0x78]
   14000699b:	cmp    DWORD PTR [r11+0x4],0x0
   1400069a0:	jne    0x1400069c6
   1400069a2:	lea    rcx,[rsp+0x70]
   1400069a7:	mov    rdx,rdi
   1400069aa:	mov    ebx,0x3
   1400069af:	call   QWORD PTR [rip+0x24eeb]        # 0x14002b8a0
   1400069b5:	mov    r11,QWORD PTR [rsp+0x70]
   1400069ba:	cmp    DWORD PTR [r11+0x4],0x0
   1400069bf:	jne    0x1400069c6
   1400069c1:	mov    sil,0x1
   1400069c4:	jmp    0x1400069c9
   1400069c6:	xor    sil,sil
   1400069c9:	test   bl,0x2
   1400069cc:	je     0x1400069dc
   1400069ce:	lea    rcx,[rsp+0x70]
   1400069d3:	and    ebx,0xfffffffd
   1400069d6:	call   QWORD PTR [rip+0x24ebc]        # 0x14002b898
   1400069dc:	test   bl,0x1
   1400069df:	je     0x1400069ec
   1400069e1:	lea    rcx,[rsp+0x78]
   1400069e6:	call   QWORD PTR [rip+0x24eac]        # 0x14002b898
   1400069ec:	test   sil,sil
   1400069ef:	je     0x140006a07
   1400069f1:	lea    rdx,[rdi+0x8]
   1400069f5:	lea    rcx,[rsp+0x70]
   1400069fa:	call   QWORD PTR [rip+0x24ea0]        # 0x14002b8a0
   140006a00:	lea    rcx,[r12+0x38]
   140006a05:	jmp    0x140006a81
   140006a07:	lea    rcx,[rsp+0x20]
   140006a0c:	mov    rdx,rdi
   140006a0f:	call   0x140004ea0
   140006a14:	lea    rcx,[r12+0x48]
   140006a19:	mov    rdx,rax
   140006a1c:	call   0x1400064c0
   140006a21:	lea    rcx,[rsp+0x30]
   140006a26:	mov    DWORD PTR [rax],ebp
   140006a28:	call   QWORD PTR [rip+0x24e6a]        # 0x14002b898
   140006a2e:	lea    rcx,[rsp+0x28]
   140006a33:	call   QWORD PTR [rip+0x24e5f]        # 0x14002b898
   140006a39:	lea    rcx,[rsp+0x20]
   140006a3e:	call   QWORD PTR [rip+0x24e54]        # 0x14002b898
   140006a44:	lea    rcx,[rsp+0x70]
   140006a49:	mov    rdx,rdi
   140006a4c:	call   QWORD PTR [rip+0x24e4e]        # 0x14002b8a0
   140006a52:	mov    r11,QWORD PTR [rsp+0x70]
   140006a57:	lea    rcx,[rsp+0x70]
   140006a5c:	cmp    DWORD PTR [r11+0x4],0x0
   140006a61:	setne  bl
   140006a64:	call   QWORD PTR [rip+0x24e2e]        # 0x14002b898
   140006a6a:	test   bl,bl
   140006a6c:	je     0x140006a98
   140006a6e:	lea    rcx,[rsp+0x70]
   140006a73:	mov    rdx,rdi
   140006a76:	call   QWORD PTR [rip+0x24e24]        # 0x14002b8a0
   140006a7c:	lea    rcx,[r12+0x40]
   140006a81:	lea    rdx,[rsp+0x70]
   140006a86:	call   0x140006180
   140006a8b:	lea    rcx,[rsp+0x70]
   140006a90:	mov    DWORD PTR [rax],ebp
   140006a92:	call   QWORD PTR [rip+0x24e00]        # 0x14002b898
   140006a98:	mov    rbx,QWORD PTR [rsp+0x60]
   140006a9d:	mov    rbp,QWORD PTR [rsp+0x68]
   140006aa2:	add    rsp,0x40
   140006aa6:	pop    r12
   140006aa8:	pop    rdi
   140006aa9:	pop    rsi
   140006aaa:	ret    
   140006aab:	int3   
   140006aac:	int3   
   140006aad:	int3   
   140006aae:	int3   
   140006aaf:	int3   
   140006ab0:	mov    QWORD PTR [rsp+0x20],rbx
   140006ab5:	push   rbp
   140006ab6:	push   rsi
   140006ab7:	push   rdi
   140006ab8:	sub    rsp,0x40
   140006abc:	mov    r9,QWORD PTR [rcx]
   140006abf:	movsxd rax,edx
   140006ac2:	mov    rbp,rcx
   140006ac5:	movsxd r8,DWORD PTR [r9+0x8]
   140006ac9:	lea    rcx,[rsp+0x70]
   140006ace:	mov    DWORD PTR [rsp+0x68],0x0
   140006ad6:	add    r8,rax
   140006ad9:	mov    ebx,0x1
   140006ade:	mov    rsi,QWORD PTR [r9+r8*8+0x10]
   140006ae3:	lea    rdx,[rsi+0x10]
   140006ae7:	call   QWORD PTR [rip+0x24db3]        # 0x14002b8a0
   140006aed:	mov    r11,QWORD PTR [rsp+0x70]
   140006af2:	cmp    DWORD PTR [r11+0x4],0x0
   140006af7:	jne    0x140006b1d
   140006af9:	lea    rcx,[rsp+0x60]
   140006afe:	mov    rdx,rsi
   140006b01:	mov    ebx,0x3
   140006b06:	call   QWORD PTR [rip+0x24d94]        # 0x14002b8a0
   140006b0c:	mov    r11,QWORD PTR [rsp+0x60]
   140006b11:	cmp    DWORD PTR [r11+0x4],0x0
   140006b16:	jne    0x140006b1d
   140006b18:	mov    dil,0x1
   140006b1b:	jmp    0x140006b20
   140006b1d:	xor    dil,dil
   140006b20:	test   bl,0x2
   140006b23:	je     0x140006b33
   140006b25:	lea    rcx,[rsp+0x60]
   140006b2a:	and    ebx,0xfffffffd
   140006b2d:	call   QWORD PTR [rip+0x24d65]        # 0x14002b898
   140006b33:	test   bl,0x1
   140006b36:	je     0x140006b43
   140006b38:	lea    rcx,[rsp+0x70]
   140006b3d:	call   QWORD PTR [rip+0x24d55]        # 0x14002b898
   140006b43:	test   dil,dil
   140006b46:	je     0x140006b5d
   140006b48:	lea    rdx,[rsi+0x8]
   140006b4c:	lea    rcx,[rsp+0x60]
   140006b51:	call   QWORD PTR [rip+0x24d49]        # 0x14002b8a0
   140006b57:	lea    rcx,[rbp+0x38]
   140006b5b:	jmp    0x140006bd3
   140006b5d:	lea    rcx,[rsp+0x20]
   140006b62:	mov    rdx,rsi
   140006b65:	call   0x140004ea0
   140006b6a:	lea    rcx,[rbp+0x48]
   140006b6e:	mov    rdx,rax
   140006b71:	call   0x140006340
   140006b76:	lea    rcx,[rsp+0x30]
   140006b7b:	call   QWORD PTR [rip+0x24d17]        # 0x14002b898
   140006b81:	lea    rcx,[rsp+0x28]
   140006b86:	call   QWORD PTR [rip+0x24d0c]        # 0x14002b898
   140006b8c:	lea    rcx,[rsp+0x20]
   140006b91:	call   QWORD PTR [rip+0x24d01]        # 0x14002b898
   140006b97:	lea    rcx,[rsp+0x60]
   140006b9c:	mov    rdx,rsi
   140006b9f:	call   QWORD PTR [rip+0x24cfb]        # 0x14002b8a0
   140006ba5:	mov    r11,QWORD PTR [rsp+0x60]
   140006baa:	lea    rcx,[rsp+0x60]
   140006baf:	cmp    DWORD PTR [r11+0x4],0x0
   140006bb4:	setne  bl
   140006bb7:	call   QWORD PTR [rip+0x24cdb]        # 0x14002b898
   140006bbd:	test   bl,bl
   140006bbf:	je     0x140006be8
   140006bc1:	lea    rcx,[rsp+0x60]
   140006bc6:	mov    rdx,rsi
   140006bc9:	call   QWORD PTR [rip+0x24cd1]        # 0x14002b8a0
   140006bcf:	lea    rcx,[rbp+0x40]
   140006bd3:	lea    rdx,[rsp+0x60]
   140006bd8:	call   0x140006080
   140006bdd:	lea    rcx,[rsp+0x60]
   140006be2:	call   QWORD PTR [rip+0x24cb0]        # 0x14002b898
   140006be8:	mov    rbx,QWORD PTR [rsp+0x78]
   140006bed:	add    rsp,0x40
   140006bf1:	pop    rdi
   140006bf2:	pop    rsi
   140006bf3:	pop    rbp
   140006bf4:	ret    
   140006bf5:	int3   
   140006bf6:	int3   
   140006bf7:	int3   
   140006bf8:	int3   
   140006bf9:	int3   
   140006bfa:	int3   
   140006bfb:	int3   
   140006bfc:	int3   
   140006bfd:	int3   
   140006bfe:	int3   
   140006bff:	int3   
   140006c00:	rex push rbx
   140006c02:	sub    rsp,0x20
   140006c06:	cmp    BYTE PTR [rcx+0x30],0x0
   140006c0a:	mov    rbx,rcx
   140006c0d:	jne    0x140006c85
   140006c0f:	mov    BYTE PTR [rcx+0x30],0x1
   140006c13:	add    rcx,0x38
   140006c17:	mov    QWORD PTR [rsp+0x30],rsi
   140006c1c:	mov    QWORD PTR [rsp+0x38],rdi
   140006c21:	call   0x140005fd0
   140006c26:	lea    rcx,[rbx+0x40]
   140006c2a:	call   0x140005fd0
   140006c2f:	lea    rcx,[rbx+0x48]
   140006c33:	call   0x140006290
   140006c38:	mov    rcx,QWORD PTR [rbx]
   140006c3b:	xor    edi,edi
   140006c3d:	mov    eax,DWORD PTR [rcx+0xc]
   140006c40:	mov    rsi,rdi
   140006c43:	sub    eax,DWORD PTR [rcx+0x8]
   140006c46:	test   eax,eax
   140006c48:	jle    0x140006c7b
   140006c4a:	nop    WORD PTR [rax+rax*1+0x0]
   140006c50:	mov    rax,QWORD PTR [rbx]
   140006c53:	mov    edx,edi
   140006c55:	mov    rcx,rbx
   140006c58:	movsxd r8,DWORD PTR [rax+0x8]
   140006c5c:	add    r8,rsi
   140006c5f:	mov    r8,QWORD PTR [rax+r8*8+0x10]
   140006c64:	call   0x140006960
   140006c69:	mov    rax,QWORD PTR [rbx]
   140006c6c:	inc    edi
   140006c6e:	mov    ecx,DWORD PTR [rax+0xc]
   140006c71:	inc    rsi
   140006c74:	sub    ecx,DWORD PTR [rax+0x8]
   140006c77:	cmp    edi,ecx
   140006c79:	jl     0x140006c50
   140006c7b:	mov    rsi,QWORD PTR [rsp+0x30]
   140006c80:	mov    rdi,QWORD PTR [rsp+0x38]
   140006c85:	add    rsp,0x20
   140006c89:	pop    rbx
   140006c8a:	ret    
   140006c8b:	int3   
   140006c8c:	int3   
   140006c8d:	int3   
   140006c8e:	int3   
   140006c8f:	int3   
   140006c90:	mov    QWORD PTR [rsp+0x10],rbx
   140006c95:	mov    QWORD PTR [rsp+0x18],rbp
   140006c9a:	push   rdi
   140006c9b:	push   r12
   140006c9d:	push   r13
   140006c9f:	sub    rsp,0x70
   140006ca3:	mov    r13,rcx
   140006ca6:	mov    rbp,rdx
   140006ca9:	lea    rdx,[rip+0x258c0]        # 0x14002c570
   140006cb0:	mov    rdi,rdx
   140006cb3:	mov    QWORD PTR [rsp+0x28],rdx
   140006cb8:	xor    eax,eax
   140006cba:	or     r12,0xffffffffffffffff
   140006cbe:	lea    rdx,[rsp+0x30]
   140006cc3:	mov    rbx,r8
   140006cc6:	mov    rcx,r12
   140006cc9:	repnz scas al,BYTE PTR es:[rdi]
   140006ccb:	not    rcx
   140006cce:	dec    rcx
   140006cd1:	mov    DWORD PTR [rsp+0x20],ecx
   140006cd5:	mov    rcx,r8
   140006cd8:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   140006cdd:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140006ce3:	call   QWORD PTR [rip+0x24537]        # 0x14002b220
   140006ce9:	test   al,al
   140006ceb:	jne    0x140006cfe
   140006ced:	mov    rdx,rbx
   140006cf0:	mov    rcx,r13
   140006cf3:	call   QWORD PTR [rip+0x24ba7]        # 0x14002b8a0
   140006cf9:	jmp    0x140006fd7
   140006cfe:	mov    eax,DWORD PTR [rip+0x2e8b4]        # 0x1400355b8
   140006d04:	mov    QWORD PTR [rsp+0x90],rsi
   140006d0c:	test   al,0x1
   140006d0e:	jne    0x140006d33
   140006d10:	or     eax,0x1
   140006d13:	lea    rcx,[rip+0x23106]        # 0x140029e20
   140006d1a:	mov    DWORD PTR [rip+0x2e898],eax        # 0x1400355b8
   140006d20:	mov    rax,QWORD PTR [rip+0x24b61]        # 0x14002b888
   140006d27:	mov    QWORD PTR [rip+0x2e882],rax        # 0x1400355b0
   140006d2e:	call   0x1400295e8
   140006d33:	mov    rdx,QWORD PTR [rip+0x2e876]        # 0x1400355b0
   140006d3a:	mov    QWORD PTR [rsp+0x50],rdx
   140006d3f:	mov    eax,DWORD PTR [rdx]
   140006d41:	test   eax,eax
   140006d43:	je     0x140006d55
   140006d45:	cmp    eax,0xffffffff
   140006d48:	je     0x140006d99
   140006d4a:	lock add DWORD PTR [rdx],0x1
   140006d4e:	mov    rdx,QWORD PTR [rsp+0x50]
   140006d53:	jmp    0x140006d99
   140006d55:	mov    edx,DWORD PTR [rdx+0x4]
   140006d58:	lea    rcx,[rsp+0x50]
   140006d5d:	call   QWORD PTR [rip+0x24af5]        # 0x14002b858
   140006d63:	mov    rcx,QWORD PTR [rsp+0x50]
   140006d68:	mov    rdx,QWORD PTR [rip+0x2e841]        # 0x1400355b0
   140006d6f:	movsxd rax,DWORD PTR [rdx+0x8]
   140006d73:	lea    r9,[rdx+rax*8+0x10]
   140006d78:	movsxd rax,DWORD PTR [rcx+0xc]
   140006d7c:	lea    r8,[rcx+rax*8+0x10]
   140006d81:	movsxd rax,DWORD PTR [rcx+0x8]
   140006d85:	lea    rdx,[rcx+rax*8+0x10]
   140006d8a:	lea    rcx,[rsp+0x50]
   140006d8f:	call   0x140001360
   140006d94:	mov    rdx,QWORD PTR [rsp+0x50]
   140006d99:	mov    DWORD PTR [rsp+0x58],0x0
   140006da1:	movsxd rax,DWORD PTR [rdx+0x8]
   140006da5:	lea    rcx,[rdx+rax*8+0x10]
   140006daa:	mov    QWORD PTR [rsp+0x60],rcx
   140006daf:	movsxd rax,DWORD PTR [rdx+0xc]
   140006db3:	lea    rdx,[rdx+rax*8+0x10]
   140006db8:	mov    QWORD PTR [rsp+0x68],rdx
   140006dbd:	nop    DWORD PTR [rax]
   140006dc0:	mov    eax,0x1
   140006dc5:	mov    DWORD PTR [rsp+0x58],eax
   140006dc9:	cmp    rcx,rdx
   140006dcc:	je     0x140006f1b
   140006dd2:	mov    rsi,QWORD PTR [rcx]
   140006dd5:	test   eax,eax
   140006dd7:	je     0x140006e71
   140006ddd:	mov    rax,QWORD PTR [rsi]
   140006de0:	lea    rcx,[rsp+0x20]
   140006de5:	xor    r8d,r8d
   140006de8:	mov    edx,DWORD PTR [rax+0x4]
   140006deb:	inc    edx
   140006ded:	call   QWORD PTR [rip+0x24a85]        # 0x14002b878
   140006df3:	lea    rcx,[rsp+0x20]
   140006df8:	call   QWORD PTR [rip+0x24ac2]        # 0x14002b8c0
   140006dfe:	lea    rcx,[rsp+0xa8]
   140006e06:	mov    dl,0x2e
   140006e08:	mov    rbx,rax
   140006e0b:	call   QWORD PTR [rip+0x24ab7]        # 0x14002b8c8
   140006e11:	movzx  edx,WORD PTR [rsp+0xa8]
   140006e19:	mov    WORD PTR [rbx],dx
   140006e1c:	mov    rcx,QWORD PTR [rsi]
   140006e1f:	movsxd rdi,DWORD PTR [rcx+0x4]
   140006e23:	mov    rcx,rsi
   140006e26:	add    rdi,rdi
   140006e29:	call   QWORD PTR [rip+0x24a91]        # 0x14002b8c0
   140006e2f:	lea    rcx,[rbx+0x2]
   140006e33:	mov    rdx,rax
   140006e36:	mov    r8,rdi
   140006e39:	call   0x14002951e
   140006e3e:	lea    rdx,[rsp+0x20]
   140006e43:	xor    r8d,r8d
   140006e46:	mov    rcx,rbp
   140006e49:	call   QWORD PTR [rip+0x244a9]        # 0x14002b2f8
   140006e4f:	lea    rcx,[rsp+0x20]
   140006e54:	movzx  edi,al
   140006e57:	call   QWORD PTR [rip+0x24a3b]        # 0x14002b898
   140006e5d:	test   dil,dil
   140006e60:	jne    0x140006e89
   140006e62:	mov    eax,DWORD PTR [rsp+0x58]
   140006e66:	dec    eax
   140006e68:	mov    DWORD PTR [rsp+0x58],eax
   140006e6c:	jmp    0x140006dd5
   140006e71:	mov    rcx,QWORD PTR [rsp+0x60]
   140006e76:	mov    rdx,QWORD PTR [rsp+0x68]
   140006e7b:	add    rcx,0x8
   140006e7f:	mov    QWORD PTR [rsp+0x60],rcx
   140006e84:	jmp    0x140006dc0
   140006e89:	mov    rdx,rsi
   140006e8c:	mov    rcx,r13
   140006e8f:	call   QWORD PTR [rip+0x24a0b]        # 0x14002b8a0
   140006e95:	mov    rsi,QWORD PTR [rsp+0x50]
   140006e9a:	mov    eax,DWORD PTR [rsi]
   140006e9c:	test   eax,eax
   140006e9e:	je     0x140006ec2
   140006ea0:	cmp    eax,0xffffffff
   140006ea3:	je     0x140006fcf
   140006ea9:	lock xadd DWORD PTR [rsi],r12d
   140006eae:	add    r12d,0xffffffff
   140006eb2:	setne  al
   140006eb5:	test   al,al
   140006eb7:	jne    0x140006fcf
   140006ebd:	mov    rsi,QWORD PTR [rsp+0x50]
   140006ec2:	movsxd rax,DWORD PTR [rsi+0xc]
   140006ec6:	lea    rbx,[rsi+rax*8+0x10]
   140006ecb:	movsxd rax,DWORD PTR [rsi+0x8]
   140006ecf:	lea    rbp,[rsi+rax*8+0x10]
   140006ed4:	cmp    rbp,rbx
   140006ed7:	je     0x140006f0d
   140006ed9:	nop    DWORD PTR [rax+0x0]
   140006ee0:	mov    rdi,QWORD PTR [rbx-0x8]
   140006ee4:	sub    rbx,0x8
   140006ee8:	test   rdi,rdi
   140006eeb:	je     0x140006f08
   140006eed:	lea    rcx,[rdi+0x8]
   140006ef1:	call   QWORD PTR [rip+0x249a1]        # 0x14002b898
   140006ef7:	mov    rcx,rdi
   140006efa:	call   QWORD PTR [rip+0x24998]        # 0x14002b898
   140006f00:	mov    rcx,rdi
   140006f03:	call   0x140029524
   140006f08:	cmp    rbx,rbp
   140006f0b:	jne    0x140006ee0
   140006f0d:	mov    rcx,rsi
   140006f10:	call   QWORD PTR [rip+0x2495a]        # 0x14002b870
   140006f16:	jmp    0x140006fcf
   140006f1b:	mov    rsi,QWORD PTR [rsp+0x50]
   140006f20:	mov    eax,DWORD PTR [rsi]
   140006f22:	test   eax,eax
   140006f24:	je     0x140006f41
   140006f26:	cmp    eax,0xffffffff
   140006f29:	je     0x140006f96
   140006f2b:	mov    eax,r12d
   140006f2e:	lock xadd DWORD PTR [rsi],eax
   140006f32:	add    eax,0xffffffff
   140006f35:	setne  al
   140006f38:	test   al,al
   140006f3a:	jne    0x140006f96
   140006f3c:	mov    rsi,QWORD PTR [rsp+0x50]
   140006f41:	movsxd rax,DWORD PTR [rsi+0xc]
   140006f45:	lea    rbx,[rsi+rax*8+0x10]
   140006f4a:	movsxd rax,DWORD PTR [rsi+0x8]
   140006f4e:	lea    rbp,[rsi+rax*8+0x10]
   140006f53:	cmp    rbp,rbx
   140006f56:	je     0x140006f8d
   140006f58:	nop    DWORD PTR [rax+rax*1+0x0]
   140006f60:	mov    rdi,QWORD PTR [rbx-0x8]
   140006f64:	sub    rbx,0x8
   140006f68:	test   rdi,rdi
   140006f6b:	je     0x140006f88
   140006f6d:	lea    rcx,[rdi+0x8]
   140006f71:	call   QWORD PTR [rip+0x24921]        # 0x14002b898
   140006f77:	mov    rcx,rdi
   140006f7a:	call   QWORD PTR [rip+0x24918]        # 0x14002b898
   140006f80:	mov    rcx,rdi
   140006f83:	call   0x140029524
   140006f88:	cmp    rbx,rbp
   140006f8b:	jne    0x140006f60
   140006f8d:	mov    rcx,rsi
   140006f90:	call   QWORD PTR [rip+0x248da]        # 0x14002b870
   140006f96:	lea    rdx,[rip+0x261f7]        # 0x14002d194
   140006f9d:	xor    eax,eax
   140006f9f:	mov    rcx,r12
   140006fa2:	mov    rdi,rdx
   140006fa5:	mov    QWORD PTR [rsp+0x28],rdx
   140006faa:	lea    rdx,[rsp+0x40]
   140006faf:	repnz scas al,BYTE PTR es:[rdi]
   140006fb1:	not    rcx
   140006fb4:	dec    rcx
   140006fb7:	mov    DWORD PTR [rsp+0x20],ecx
   140006fbb:	mov    rcx,r13
   140006fbe:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   140006fc3:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   140006fc9:	call   QWORD PTR [rip+0x24891]        # 0x14002b860
   140006fcf:	mov    rsi,QWORD PTR [rsp+0x90]
   140006fd7:	lea    r11,[rsp+0x70]
   140006fdc:	mov    rax,r13
   140006fdf:	mov    rbx,QWORD PTR [r11+0x28]
   140006fe3:	mov    rbp,QWORD PTR [r11+0x30]
   140006fe7:	mov    rsp,r11
   140006fea:	pop    r13
   140006fec:	pop    r12
   140006fee:	pop    rdi
   140006fef:	ret    
   140006ff0:	rex push rbx
   140006ff2:	push   rbp
   140006ff3:	push   rsi
   140006ff4:	push   rdi
   140006ff5:	push   r13
   140006ff7:	push   r14
   140006ff9:	push   r15
   140006ffb:	sub    rsp,0x140
   140007002:	mov    rsi,rcx
   140007005:	lea    rcx,[rsp+0xf8]
   14000700d:	mov    r15,r9
   140007010:	mov    r14,r8
   140007013:	mov    r13,rdx
   140007016:	call   QWORD PTR [rip+0x24334]        # 0x14002b350
   14000701c:	lea    rdx,[rsp+0xd8]
   140007024:	mov    rcx,rax
   140007027:	call   QWORD PTR [rip+0x2431b]        # 0x14002b348
   14000702d:	lea    rcx,[r14+0x30]
   140007031:	mov    rdx,rax
   140007034:	call   QWORD PTR [rip+0x24306]        # 0x14002b340
   14000703a:	lea    rcx,[rsp+0xd8]
   140007042:	call   QWORD PTR [rip+0x243f0]        # 0x14002b438
   140007048:	lea    rcx,[rsp+0xf8]
   140007050:	call   QWORD PTR [rip+0x242e2]        # 0x14002b338
   140007056:	lea    rcx,[r14+0x18]
   14000705a:	mov    rdx,r13
   14000705d:	call   QWORD PTR [rip+0x2484d]        # 0x14002b8b0
   140007063:	lea    rcx,[rsp+0x38]
   140007068:	call   QWORD PTR [rip+0x242c2]        # 0x14002b330
   14000706e:	mov    rdx,QWORD PTR [r13+0x0]
   140007072:	xor    ebx,ebx
   140007074:	or     rbp,0xffffffffffffffff
   140007078:	cmp    DWORD PTR [rdx+0x4],ebx
   14000707b:	je     0x14000717a
   140007081:	lea    rdx,[rip+0x26184]        # 0x14002d20c
   140007088:	xor    eax,eax
   14000708a:	mov    rcx,rbp
   14000708d:	mov    rdi,rdx
   140007090:	mov    QWORD PTR [rsp+0x88],rdx
   140007098:	lea    rdx,[rsp+0x110]
   1400070a0:	repnz scas al,BYTE PTR es:[rdi]
   1400070a2:	not    rcx
   1400070a5:	dec    rcx
   1400070a8:	mov    DWORD PTR [rsp+0x80],ecx
   1400070af:	mov    rcx,r13
   1400070b2:	movaps xmm0,XMMWORD PTR [rsp+0x80]
   1400070ba:	movdqa XMMWORD PTR [rsp+0x110],xmm0
   1400070c3:	call   QWORD PTR [rip+0x24157]        # 0x14002b220
   1400070c9:	test   al,al
   1400070cb:	jne    0x14000717a
   1400070d1:	lea    rcx,[rsp+0x38]
   1400070d6:	mov    rdx,r13
   1400070d9:	call   QWORD PTR [rip+0x24249]        # 0x14002b328
   1400070df:	lea    edx,[rbx+0x1]
   1400070e2:	lea    rcx,[rsp+0x38]
   1400070e7:	mov    DWORD PTR [rsp+0xc4],0x1
   1400070f2:	call   QWORD PTR [rip+0x24228]        # 0x14002b320
   1400070f8:	test   al,al
   1400070fa:	jne    0x140007266
   140007100:	lea    rdx,[rsp+0xe0]
   140007108:	lea    rcx,[rsp+0x38]
   14000710d:	call   QWORD PTR [rip+0x24205]        # 0x14002b318
   140007113:	lea    rdx,[rip+0x260de]        # 0x14002d1f8
   14000711a:	lea    rcx,[rsp+0xa8]
   140007122:	mov    r8d,ebp
   140007125:	mov    rdi,rax
   140007128:	call   QWORD PTR [rip+0x24152]        # 0x14002b280
   14000712e:	lea    rdx,[rsp+0xe8]
   140007136:	mov    r9,rdi
   140007139:	mov    rcx,rax
   14000713c:	mov    r8,r13
   14000713f:	call   QWORD PTR [rip+0x241cb]        # 0x14002b310
   140007145:	lea    rcx,[r14+0x60]
   140007149:	mov    rdx,rax
   14000714c:	call   0x140001e20
   140007151:	lea    rcx,[rsp+0xe8]
   140007159:	call   QWORD PTR [rip+0x24739]        # 0x14002b898
   14000715f:	lea    rcx,[rsp+0xa8]
   140007167:	call   QWORD PTR [rip+0x2472b]        # 0x14002b898
   14000716d:	lea    rcx,[rsp+0xe0]
   140007175:	jmp    0x14000724e
   14000717a:	mov    edx,0x8000
   14000717f:	xor    ecx,ecx
   140007181:	call   QWORD PTR [rip+0x24029]        # 0x14002b1b0
   140007187:	mov    DWORD PTR [rsp+0xc8],ebx
   14000718e:	mov    DWORD PTR [rsp+0xc0],0x1
   140007199:	call   QWORD PTR [rip+0x23f89]        # 0x14002b128
   14000719f:	lea    rcx,[rsp+0x38]
   1400071a4:	mov    r9d,ebx
   1400071a7:	mov    rdx,rax
   1400071aa:	mov    r8d,0x1
   1400071b0:	call   QWORD PTR [rip+0x24152]        # 0x14002b308
   1400071b6:	test   al,al
   1400071b8:	jne    0x140007266
   1400071be:	lea    rcx,[rsp+0x188]
   1400071c6:	mov    dl,0x20
   1400071c8:	call   QWORD PTR [rip+0x246fa]        # 0x14002b8c8
   1400071ce:	lea    rdx,[rsp+0x90]
   1400071d6:	lea    rcx,[rsp+0x38]
   1400071db:	mov    rbx,rax
   1400071de:	call   QWORD PTR [rip+0x24134]        # 0x14002b318
   1400071e4:	lea    rdx,[rip+0x25fed]        # 0x14002d1d8
   1400071eb:	lea    rcx,[rsp+0xf0]
   1400071f3:	mov    r8d,ebp
   1400071f6:	mov    rdi,rax
   1400071f9:	call   QWORD PTR [rip+0x24081]        # 0x14002b280
   1400071ff:	movzx  edx,WORD PTR [rbx]
   140007202:	xor    r9d,r9d
   140007205:	mov    WORD PTR [rsp+0x20],dx
   14000720a:	lea    rdx,[rsp+0xb8]
   140007212:	mov    rcx,rax
   140007215:	mov    r8,rdi
   140007218:	call   QWORD PTR [rip+0x23fca]        # 0x14002b1e8
   14000721e:	lea    rcx,[r14+0x60]
   140007222:	mov    rdx,rax
   140007225:	call   0x140001e20
   14000722a:	lea    rcx,[rsp+0xb8]
   140007232:	call   QWORD PTR [rip+0x24660]        # 0x14002b898
   140007238:	lea    rcx,[rsp+0xf0]
   140007240:	call   QWORD PTR [rip+0x24652]        # 0x14002b898
   140007246:	lea    rcx,[rsp+0x90]
   14000724e:	call   QWORD PTR [rip+0x24644]        # 0x14002b898
   140007254:	lea    rcx,[rsp+0x38]
   140007259:	call   QWORD PTR [rip+0x240a1]        # 0x14002b300
   14000725f:	xor    al,al
   140007261:	jmp    0x14000771c
   140007266:	lea    rcx,[rsp+0x30]
   14000726b:	mov    r8,r15
   14000726e:	mov    rdx,r13
   140007271:	call   0x140006c90
   140007276:	mov    edx,DWORD PTR [rip+0x2e33c]        # 0x1400355b8
   14000727c:	test   dl,0x1
   14000727f:	jne    0x1400072a4
   140007281:	mov    rax,QWORD PTR [rip+0x24600]        # 0x14002b888
   140007288:	or     edx,0x1
   14000728b:	lea    rcx,[rip+0x22b8e]        # 0x140029e20
   140007292:	mov    QWORD PTR [rip+0x2e317],rax        # 0x1400355b0
   140007299:	mov    DWORD PTR [rip+0x2e319],edx        # 0x1400355b8
   14000729f:	call   0x1400295e8
   1400072a4:	mov    rdx,QWORD PTR [rip+0x2e305]        # 0x1400355b0
   1400072ab:	mov    QWORD PTR [rsp+0x48],rdx
   1400072b0:	mov    eax,DWORD PTR [rdx]
   1400072b2:	test   eax,eax
   1400072b4:	je     0x1400072c6
   1400072b6:	cmp    eax,0xffffffff
   1400072b9:	je     0x14000730a
   1400072bb:	lock add DWORD PTR [rdx],0x1
   1400072bf:	mov    rdx,QWORD PTR [rsp+0x48]
   1400072c4:	jmp    0x14000730a
   1400072c6:	mov    edx,DWORD PTR [rdx+0x4]
   1400072c9:	lea    rcx,[rsp+0x48]
   1400072ce:	call   QWORD PTR [rip+0x24584]        # 0x14002b858
   1400072d4:	mov    rcx,QWORD PTR [rsp+0x48]
   1400072d9:	mov    rdx,QWORD PTR [rip+0x2e2d0]        # 0x1400355b0
   1400072e0:	movsxd rax,DWORD PTR [rdx+0x8]
   1400072e4:	lea    r9,[rdx+rax*8+0x10]
   1400072e9:	movsxd rax,DWORD PTR [rcx+0xc]
   1400072ed:	lea    r8,[rcx+rax*8+0x10]
   1400072f2:	movsxd rax,DWORD PTR [rcx+0x8]
   1400072f6:	lea    rdx,[rcx+rax*8+0x10]
   1400072fb:	lea    rcx,[rsp+0x48]
   140007300:	call   0x140001360
   140007305:	mov    rdx,QWORD PTR [rsp+0x48]
   14000730a:	mov    DWORD PTR [rsp+0x50],ebx
   14000730e:	movsxd rax,DWORD PTR [rdx+0x8]
   140007312:	mov    QWORD PTR [rsp+0x180],r12
   14000731a:	lea    rcx,[rdx+rax*8+0x10]
   14000731f:	mov    QWORD PTR [rsp+0x58],rcx
   140007324:	movsxd rax,DWORD PTR [rdx+0xc]
   140007328:	lea    rdx,[rdx+rax*8+0x10]
   14000732d:	mov    QWORD PTR [rsp+0x60],rdx
   140007332:	mov    eax,0x1
   140007337:	mov    DWORD PTR [rsp+0x50],eax
   14000733b:	cmp    rcx,rdx
   14000733e:	je     0x1400075ab
   140007344:	mov    rdi,QWORD PTR [rcx]
   140007347:	test   eax,eax
   140007349:	je     0x140007369
   14000734b:	lea    rcx,[rsp+0x30]
   140007350:	mov    rdx,rdi
   140007353:	call   QWORD PTR [rip+0x23f3f]        # 0x14002b298
   140007359:	test   al,al
   14000735b:	jne    0x14000737e
   14000735d:	mov    eax,DWORD PTR [rsp+0x50]
   140007361:	dec    eax
   140007363:	mov    DWORD PTR [rsp+0x50],eax
   140007367:	jmp    0x140007347
   140007369:	mov    rcx,QWORD PTR [rsp+0x58]
   14000736e:	mov    rdx,QWORD PTR [rsp+0x60]
   140007373:	add    rcx,0x8
   140007377:	mov    QWORD PTR [rsp+0x58],rcx
   14000737c:	jmp    0x140007332
   14000737e:	mov    rax,QWORD PTR [rdi+0x10]
   140007382:	test   rax,rax
   140007385:	je     0x140007434
   14000738b:	lea    rdx,[rsp+0x38]
   140007390:	mov    r8,r14
   140007393:	mov    rcx,rsi
   140007396:	call   rax
   140007398:	mov    rsi,QWORD PTR [rsp+0x48]
   14000739d:	mov    ecx,DWORD PTR [rsi]
   14000739f:	movzx  r12d,al
   1400073a3:	test   ecx,ecx
   1400073a5:	je     0x1400073bf
   1400073a7:	cmp    ecx,0xffffffff
   1400073aa:	je     0x140007416
   1400073ac:	lock xadd DWORD PTR [rsi],ebp
   1400073b0:	add    ebp,0xffffffff
   1400073b3:	setne  cl
   1400073b6:	test   cl,cl
   1400073b8:	jne    0x140007416
   1400073ba:	mov    rsi,QWORD PTR [rsp+0x48]
   1400073bf:	movsxd rax,DWORD PTR [rsi+0xc]
   1400073c3:	lea    rbx,[rsi+rax*8+0x10]
   1400073c8:	movsxd rax,DWORD PTR [rsi+0x8]
   1400073cc:	lea    rbp,[rsi+rax*8+0x10]
   1400073d1:	cmp    rbp,rbx
   1400073d4:	je     0x14000740d
   1400073d6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400073e0:	mov    rdi,QWORD PTR [rbx-0x8]
   1400073e4:	sub    rbx,0x8
   1400073e8:	test   rdi,rdi
   1400073eb:	je     0x140007408
   1400073ed:	lea    rcx,[rdi+0x8]
   1400073f1:	call   QWORD PTR [rip+0x244a1]        # 0x14002b898
   1400073f7:	mov    rcx,rdi
   1400073fa:	call   QWORD PTR [rip+0x24498]        # 0x14002b898
   140007400:	mov    rcx,rdi
   140007403:	call   0x140029524
   140007408:	cmp    rbx,rbp
   14000740b:	jne    0x1400073e0
   14000740d:	mov    rcx,rsi
   140007410:	call   QWORD PTR [rip+0x2445a]        # 0x14002b870
   140007416:	lea    rcx,[rsp+0x30]
   14000741b:	call   QWORD PTR [rip+0x24477]        # 0x14002b898
   140007421:	lea    rcx,[rsp+0x38]
   140007426:	call   QWORD PTR [rip+0x23ed4]        # 0x14002b300
   14000742c:	mov    al,r12b
   14000742f:	jmp    0x140007714
   140007434:	lea    rdx,[rip+0x25d7d]        # 0x14002d1b8
   14000743b:	xor    eax,eax
   14000743d:	mov    rcx,rbp
   140007440:	mov    rdi,rdx
   140007443:	mov    QWORD PTR [rsp+0x78],rdx
   140007448:	mov    dl,0x20
   14000744a:	repnz scas al,BYTE PTR es:[rdi]
   14000744c:	not    rcx
   14000744f:	dec    rcx
   140007452:	mov    DWORD PTR [rsp+0x70],ecx
   140007456:	lea    rcx,[rsp+0x190]
   14000745e:	movaps xmm0,XMMWORD PTR [rsp+0x70]
   140007463:	movdqa XMMWORD PTR [rsp+0x130],xmm0
   14000746c:	call   QWORD PTR [rip+0x24456]        # 0x14002b8c8
   140007472:	lea    rdx,[rsp+0x130]
   14000747a:	lea    rcx,[rsp+0x98]
   140007482:	mov    rdi,rax
   140007485:	call   QWORD PTR [rip+0x243d5]        # 0x14002b860
   14000748b:	lea    r8,[rsp+0x30]
   140007490:	lea    rdx,[rsp+0xd0]
   140007498:	mov    rcx,rax
   14000749b:	movzx  eax,WORD PTR [rdi]
   14000749e:	xor    r9d,r9d
   1400074a1:	mov    WORD PTR [rsp+0x20],ax
   1400074a6:	call   QWORD PTR [rip+0x23d3c]        # 0x14002b1e8
   1400074ac:	mov    rdx,QWORD PTR [r14+0x60]
   1400074b0:	mov    rdi,rax
   1400074b3:	mov    eax,DWORD PTR [rdx]
   1400074b5:	cmp    eax,0x1
   1400074b8:	je     0x1400074e5
   1400074ba:	test   eax,eax
   1400074bc:	je     0x1400074e5
   1400074be:	lea    rcx,[r14+0x60]
   1400074c2:	mov    edx,0x7fffffff
   1400074c7:	mov    r8d,0x1
   1400074cd:	call   0x140001a10
   1400074d2:	test   rax,rax
   1400074d5:	je     0x14000750b
   1400074d7:	mov    rdx,rdi
   1400074da:	mov    rcx,rax
   1400074dd:	call   QWORD PTR [rip+0x243bd]        # 0x14002b8a0
   1400074e3:	jmp    0x14000750b
   1400074e5:	lea    rcx,[rsp+0x100]
   1400074ed:	mov    rdx,rdi
   1400074f0:	call   QWORD PTR [rip+0x243aa]        # 0x14002b8a0
   1400074f6:	lea    rcx,[r14+0x60]
   1400074fa:	call   QWORD PTR [rip+0x24340]        # 0x14002b840
   140007500:	mov    rcx,QWORD PTR [rsp+0x100]
   140007508:	mov    QWORD PTR [rax],rcx
   14000750b:	lea    rcx,[rsp+0xd0]
   140007513:	call   QWORD PTR [rip+0x2437f]        # 0x14002b898
   140007519:	lea    rcx,[rsp+0x98]
   140007521:	call   QWORD PTR [rip+0x24371]        # 0x14002b898
   140007527:	mov    rsi,QWORD PTR [rsp+0x48]
   14000752c:	mov    eax,DWORD PTR [rsi]
   14000752e:	test   eax,eax
   140007530:	je     0x140007552
   140007532:	cmp    eax,0xffffffff
   140007535:	je     0x1400076fc
   14000753b:	lock xadd DWORD PTR [rsi],ebp
   14000753f:	add    ebp,0xffffffff
   140007542:	setne  al
   140007545:	test   al,al
   140007547:	jne    0x1400076fc
   14000754d:	mov    rsi,QWORD PTR [rsp+0x48]
   140007552:	movsxd rax,DWORD PTR [rsi+0xc]
   140007556:	lea    rbx,[rsi+rax*8+0x10]
   14000755b:	movsxd rax,DWORD PTR [rsi+0x8]
   14000755f:	lea    rbp,[rsi+rax*8+0x10]
   140007564:	cmp    rbp,rbx
   140007567:	je     0x14000759d
   140007569:	nop    DWORD PTR [rax+0x0]
   140007570:	mov    rdi,QWORD PTR [rbx-0x8]
   140007574:	sub    rbx,0x8
   140007578:	test   rdi,rdi
   14000757b:	je     0x140007598
   14000757d:	lea    rcx,[rdi+0x8]
   140007581:	call   QWORD PTR [rip+0x24311]        # 0x14002b898
   140007587:	mov    rcx,rdi
   14000758a:	call   QWORD PTR [rip+0x24308]        # 0x14002b898
   140007590:	mov    rcx,rdi
   140007593:	call   0x140029524
   140007598:	cmp    rbx,rbp
   14000759b:	jne    0x140007570
   14000759d:	mov    rcx,rsi
   1400075a0:	call   QWORD PTR [rip+0x242ca]        # 0x14002b870
   1400075a6:	jmp    0x1400076fc
   1400075ab:	mov    rsi,QWORD PTR [rsp+0x48]
   1400075b0:	mov    eax,DWORD PTR [rsi]
   1400075b2:	test   eax,eax
   1400075b4:	je     0x1400075d0
   1400075b6:	cmp    eax,0xffffffff
   1400075b9:	je     0x140007626
   1400075bb:	mov    eax,ebp
   1400075bd:	lock xadd DWORD PTR [rsi],eax
   1400075c1:	add    eax,0xffffffff
   1400075c4:	setne  al
   1400075c7:	test   al,al
   1400075c9:	jne    0x140007626
   1400075cb:	mov    rsi,QWORD PTR [rsp+0x48]
   1400075d0:	movsxd rax,DWORD PTR [rsi+0xc]
   1400075d4:	lea    rbx,[rsi+rax*8+0x10]
   1400075d9:	movsxd rax,DWORD PTR [rsi+0x8]
   1400075dd:	lea    r12,[rsi+rax*8+0x10]
   1400075e2:	cmp    r12,rbx
   1400075e5:	je     0x14000761d
   1400075e7:	nop    WORD PTR [rax+rax*1+0x0]
   1400075f0:	mov    rdi,QWORD PTR [rbx-0x8]
   1400075f4:	sub    rbx,0x8
   1400075f8:	test   rdi,rdi
   1400075fb:	je     0x140007618
   1400075fd:	lea    rcx,[rdi+0x8]
   140007601:	call   QWORD PTR [rip+0x24291]        # 0x14002b898
   140007607:	mov    rcx,rdi
   14000760a:	call   QWORD PTR [rip+0x24288]        # 0x14002b898
   140007610:	mov    rcx,rdi
   140007613:	call   0x140029524
   140007618:	cmp    rbx,r12
   14000761b:	jne    0x1400075f0
   14000761d:	mov    rcx,rsi
   140007620:	call   QWORD PTR [rip+0x2424a]        # 0x14002b870
   140007626:	lea    rdx,[rip+0x25b6b]        # 0x14002d198
   14000762d:	xor    eax,eax
   14000762f:	mov    rcx,rbp
   140007632:	mov    rdi,rdx
   140007635:	mov    QWORD PTR [rsp+0x78],rdx
   14000763a:	lea    rdx,[rsp+0x120]
   140007642:	repnz scas al,BYTE PTR es:[rdi]
   140007644:	not    rcx
   140007647:	dec    rcx
   14000764a:	mov    DWORD PTR [rsp+0x70],ecx
   14000764e:	lea    rcx,[rsp+0x80]
   140007656:	movaps xmm0,XMMWORD PTR [rsp+0x70]
   14000765b:	movdqa XMMWORD PTR [rsp+0x120],xmm0
   140007664:	call   QWORD PTR [rip+0x241f6]        # 0x14002b860
   14000766a:	lea    rdx,[rsp+0xb0]
   140007672:	mov    r9,r13
   140007675:	mov    r8,r15
   140007678:	mov    rcx,rax
   14000767b:	call   QWORD PTR [rip+0x23c8f]        # 0x14002b310
   140007681:	mov    rdx,QWORD PTR [r14+0x60]
   140007685:	mov    rbx,rax
   140007688:	mov    eax,DWORD PTR [rdx]
   14000768a:	cmp    eax,0x1
   14000768d:	je     0x1400076ba
   14000768f:	test   eax,eax
   140007691:	je     0x1400076ba
   140007693:	lea    rcx,[r14+0x60]
   140007697:	mov    edx,0x7fffffff
   14000769c:	mov    r8d,0x1
   1400076a2:	call   0x140001a10
   1400076a7:	test   rax,rax
   1400076aa:	je     0x1400076e0
   1400076ac:	mov    rdx,rbx
   1400076af:	mov    rcx,rax
   1400076b2:	call   QWORD PTR [rip+0x241e8]        # 0x14002b8a0
   1400076b8:	jmp    0x1400076e0
   1400076ba:	lea    rcx,[rsp+0xa0]
   1400076c2:	mov    rdx,rbx
   1400076c5:	call   QWORD PTR [rip+0x241d5]        # 0x14002b8a0
   1400076cb:	lea    rcx,[r14+0x60]
   1400076cf:	call   QWORD PTR [rip+0x2416b]        # 0x14002b840
   1400076d5:	mov    rcx,QWORD PTR [rsp+0xa0]
   1400076dd:	mov    QWORD PTR [rax],rcx
   1400076e0:	lea    rcx,[rsp+0xb0]
   1400076e8:	call   QWORD PTR [rip+0x241aa]        # 0x14002b898
   1400076ee:	lea    rcx,[rsp+0x80]
   1400076f6:	call   QWORD PTR [rip+0x2419c]        # 0x14002b898
   1400076fc:	lea    rcx,[rsp+0x30]
   140007701:	call   QWORD PTR [rip+0x24191]        # 0x14002b898
   140007707:	lea    rcx,[rsp+0x38]
   14000770c:	call   QWORD PTR [rip+0x23bee]        # 0x14002b300
   140007712:	xor    al,al
   140007714:	mov    r12,QWORD PTR [rsp+0x180]
   14000771c:	add    rsp,0x140
   140007723:	pop    r15
   140007725:	pop    r14
   140007727:	pop    r13
   140007729:	pop    rdi
   14000772a:	pop    rsi
   14000772b:	pop    rbp
   14000772c:	pop    rbx
   14000772d:	ret    
   14000772e:	int3   
   14000772f:	int3   
   140007730:	mov    QWORD PTR [rsp+0x18],rbx
   140007735:	mov    QWORD PTR [rsp+0x20],rbp
   14000773a:	push   rsi
   14000773b:	push   rdi
   14000773c:	push   r13
   14000773e:	push   r14
   140007740:	push   r15
   140007742:	sub    rsp,0x140
   140007749:	mov    rsi,rcx
   14000774c:	lea    rcx,[rsp+0x38]
   140007751:	mov    r15,r9
   140007754:	mov    r14,r8
   140007757:	mov    r13,rdx
   14000775a:	call   QWORD PTR [rip+0x23bd0]        # 0x14002b330
   140007760:	mov    rax,QWORD PTR [r13+0x0]
   140007764:	xor    ebx,ebx
   140007766:	or     rbp,0xffffffffffffffff
   14000776a:	cmp    DWORD PTR [rax+0x4],ebx
   14000776d:	je     0x14000786c
   140007773:	lea    rdx,[rip+0x25a92]        # 0x14002d20c
   14000777a:	xor    eax,eax
   14000777c:	mov    rcx,rbp
   14000777f:	mov    rdi,rdx
   140007782:	mov    QWORD PTR [rsp+0x88],rdx
   14000778a:	lea    rdx,[rsp+0x110]
   140007792:	repnz scas al,BYTE PTR es:[rdi]
   140007794:	not    rcx
   140007797:	dec    rcx
   14000779a:	mov    DWORD PTR [rsp+0x80],ecx
   1400077a1:	mov    rcx,r13
   1400077a4:	movaps xmm0,XMMWORD PTR [rsp+0x80]
   1400077ac:	movdqa XMMWORD PTR [rsp+0x110],xmm0
   1400077b5:	call   QWORD PTR [rip+0x23a65]        # 0x14002b220
   1400077bb:	test   al,al
   1400077bd:	jne    0x14000786c
   1400077c3:	lea    rcx,[rsp+0x38]
   1400077c8:	mov    rdx,r13
   1400077cb:	call   QWORD PTR [rip+0x23b57]        # 0x14002b328
   1400077d1:	lea    edx,[rbx+0x2]
   1400077d4:	lea    rcx,[rsp+0x38]
   1400077d9:	mov    DWORD PTR [rsp+0xd0],0x2
   1400077e4:	call   QWORD PTR [rip+0x23b36]        # 0x14002b320
   1400077ea:	test   al,al
   1400077ec:	jne    0x14000795c
   1400077f2:	lea    rdx,[rsp+0xa0]
   1400077fa:	lea    rcx,[rsp+0x38]
   1400077ff:	call   QWORD PTR [rip+0x23b13]        # 0x14002b318
   140007805:	lea    rdx,[rip+0x25a3c]        # 0x14002d248
   14000780c:	lea    rcx,[rsp+0x100]
   140007814:	mov    r8d,ebp
   140007817:	mov    rdi,rax
   14000781a:	call   QWORD PTR [rip+0x23a60]        # 0x14002b280
   140007820:	lea    rdx,[rsp+0xe0]
   140007828:	mov    r9,rdi
   14000782b:	mov    rcx,rax
   14000782e:	mov    r8,r13
   140007831:	call   QWORD PTR [rip+0x23ad9]        # 0x14002b310
   140007837:	lea    rcx,[r14+0x60]
   14000783b:	mov    rdx,rax
   14000783e:	call   0x140001e20
   140007843:	lea    rcx,[rsp+0xe0]
   14000784b:	call   QWORD PTR [rip+0x24047]        # 0x14002b898
   140007851:	lea    rcx,[rsp+0x100]
   140007859:	call   QWORD PTR [rip+0x24039]        # 0x14002b898
   14000785f:	lea    rcx,[rsp+0xa0]
   140007867:	jmp    0x140007944
   14000786c:	mov    edx,0x8000
   140007871:	mov    ecx,0x1
   140007876:	call   QWORD PTR [rip+0x23934]        # 0x14002b1b0
   14000787c:	mov    DWORD PTR [rsp+0xc0],ebx
   140007883:	mov    DWORD PTR [rsp+0xc4],0x2
   14000788e:	call   QWORD PTR [rip+0x23894]        # 0x14002b128
   140007894:	lea    rcx,[rsp+0x38]
   140007899:	mov    r9d,ebx
   14000789c:	lea    rdx,[rax+0x30]
   1400078a0:	mov    r8d,0x2
   1400078a6:	call   QWORD PTR [rip+0x23a5c]        # 0x14002b308
   1400078ac:	test   al,al
   1400078ae:	jne    0x14000795c
   1400078b4:	lea    rcx,[rsp+0x178]
   1400078bc:	mov    dl,0x20
   1400078be:	call   QWORD PTR [rip+0x24004]        # 0x14002b8c8
   1400078c4:	lea    rdx,[rsp+0xe8]
   1400078cc:	lea    rcx,[rsp+0x38]
   1400078d1:	mov    rbx,rax
   1400078d4:	call   QWORD PTR [rip+0x23a3e]        # 0x14002b318
   1400078da:	lea    rdx,[rip+0x25947]        # 0x14002d228
   1400078e1:	lea    rcx,[rsp+0xb0]
   1400078e9:	mov    r8d,ebp
   1400078ec:	mov    rdi,rax
   1400078ef:	call   QWORD PTR [rip+0x2398b]        # 0x14002b280
   1400078f5:	movzx  edx,WORD PTR [rbx]
   1400078f8:	xor    r9d,r9d
   1400078fb:	mov    WORD PTR [rsp+0x20],dx
   140007900:	lea    rdx,[rsp+0xf0]
   140007908:	mov    rcx,rax
   14000790b:	mov    r8,rdi
   14000790e:	call   QWORD PTR [rip+0x238d4]        # 0x14002b1e8
   140007914:	lea    rcx,[r14+0x60]
   140007918:	mov    rdx,rax
   14000791b:	call   0x140001e20
   140007920:	lea    rcx,[rsp+0xf0]
   140007928:	call   QWORD PTR [rip+0x23f6a]        # 0x14002b898
   14000792e:	lea    rcx,[rsp+0xb0]
   140007936:	call   QWORD PTR [rip+0x23f5c]        # 0x14002b898
   14000793c:	lea    rcx,[rsp+0xe8]
   140007944:	call   QWORD PTR [rip+0x23f4e]        # 0x14002b898
   14000794a:	lea    rcx,[rsp+0x38]
   14000794f:	call   QWORD PTR [rip+0x239ab]        # 0x14002b300
   140007955:	xor    al,al
   140007957:	jmp    0x140007eb1
   14000795c:	lea    rcx,[rsp+0x30]
   140007961:	mov    r8,r15
   140007964:	mov    rdx,r13
   140007967:	call   0x140006c90
   14000796c:	lea    rcx,[rsp+0xf8]
   140007974:	mov    rdx,r13
   140007977:	call   QWORD PTR [rip+0x239d3]        # 0x14002b350
   14000797d:	lea    rdx,[rsp+0x90]
   140007985:	mov    rcx,rax
   140007988:	call   QWORD PTR [rip+0x239ba]        # 0x14002b348
   14000798e:	lea    rcx,[r14+0x38]
   140007992:	mov    rdx,rax
   140007995:	call   QWORD PTR [rip+0x239a5]        # 0x14002b340
   14000799b:	lea    rcx,[rsp+0x90]
   1400079a3:	call   QWORD PTR [rip+0x23a8f]        # 0x14002b438
   1400079a9:	lea    rcx,[rsp+0xf8]
   1400079b1:	call   QWORD PTR [rip+0x23981]        # 0x14002b338
   1400079b7:	mov    edx,DWORD PTR [rip+0x2dbfb]        # 0x1400355b8
   1400079bd:	test   dl,0x1
   1400079c0:	jne    0x1400079e5
   1400079c2:	mov    rax,QWORD PTR [rip+0x23ebf]        # 0x14002b888
   1400079c9:	or     edx,0x1
   1400079cc:	lea    rcx,[rip+0x2244d]        # 0x140029e20
   1400079d3:	mov    QWORD PTR [rip+0x2dbd6],rax        # 0x1400355b0
   1400079da:	mov    DWORD PTR [rip+0x2dbd8],edx        # 0x1400355b8
   1400079e0:	call   0x1400295e8
   1400079e5:	mov    rdx,QWORD PTR [rip+0x2dbc4]        # 0x1400355b0
   1400079ec:	mov    QWORD PTR [rsp+0x48],rdx
   1400079f1:	mov    eax,DWORD PTR [rdx]
   1400079f3:	test   eax,eax
   1400079f5:	je     0x140007a07
   1400079f7:	cmp    eax,0xffffffff
   1400079fa:	je     0x140007a4b
   1400079fc:	lock add DWORD PTR [rdx],0x1
   140007a00:	mov    rdx,QWORD PTR [rsp+0x48]
   140007a05:	jmp    0x140007a4b
   140007a07:	mov    edx,DWORD PTR [rdx+0x4]
   140007a0a:	lea    rcx,[rsp+0x48]
   140007a0f:	call   QWORD PTR [rip+0x23e43]        # 0x14002b858
   140007a15:	mov    rcx,QWORD PTR [rsp+0x48]
   140007a1a:	mov    rdx,QWORD PTR [rip+0x2db8f]        # 0x1400355b0
   140007a21:	movsxd rax,DWORD PTR [rdx+0x8]
   140007a25:	lea    r9,[rdx+rax*8+0x10]
   140007a2a:	movsxd rax,DWORD PTR [rcx+0xc]
   140007a2e:	lea    r8,[rcx+rax*8+0x10]
   140007a33:	movsxd rax,DWORD PTR [rcx+0x8]
   140007a37:	lea    rdx,[rcx+rax*8+0x10]
   140007a3c:	lea    rcx,[rsp+0x48]
   140007a41:	call   0x140001360
   140007a46:	mov    rdx,QWORD PTR [rsp+0x48]
   140007a4b:	mov    DWORD PTR [rsp+0x50],ebx
   140007a4f:	movsxd rax,DWORD PTR [rdx+0x8]
   140007a53:	mov    QWORD PTR [rsp+0x170],r12
   140007a5b:	lea    rcx,[rdx+rax*8+0x10]
   140007a60:	mov    QWORD PTR [rsp+0x58],rcx
   140007a65:	movsxd rax,DWORD PTR [rdx+0xc]
   140007a69:	lea    rdx,[rdx+rax*8+0x10]
   140007a6e:	mov    QWORD PTR [rsp+0x60],rdx
   140007a73:	mov    eax,0x1
   140007a78:	mov    DWORD PTR [rsp+0x50],eax
   140007a7c:	cmp    rcx,rdx
   140007a7f:	je     0x140007ceb
   140007a85:	mov    rdi,QWORD PTR [rcx]
   140007a88:	test   eax,eax
   140007a8a:	je     0x140007aaa
   140007a8c:	lea    rcx,[rsp+0x30]
   140007a91:	mov    rdx,rdi
   140007a94:	call   QWORD PTR [rip+0x237fe]        # 0x14002b298
   140007a9a:	test   al,al
   140007a9c:	jne    0x140007abf
   140007a9e:	mov    eax,DWORD PTR [rsp+0x50]
   140007aa2:	dec    eax
   140007aa4:	mov    DWORD PTR [rsp+0x50],eax
   140007aa8:	jmp    0x140007a88
   140007aaa:	mov    rcx,QWORD PTR [rsp+0x58]
   140007aaf:	mov    rdx,QWORD PTR [rsp+0x60]
   140007ab4:	add    rcx,0x8
   140007ab8:	mov    QWORD PTR [rsp+0x58],rcx
   140007abd:	jmp    0x140007a73
   140007abf:	mov    rax,QWORD PTR [rdi+0x18]
   140007ac3:	test   rax,rax
   140007ac6:	je     0x140007b74
   140007acc:	lea    rdx,[rsp+0x38]
   140007ad1:	mov    r8,r14
   140007ad4:	mov    rcx,rsi
   140007ad7:	call   rax
   140007ad9:	mov    rsi,QWORD PTR [rsp+0x48]
   140007ade:	mov    ecx,DWORD PTR [rsi]
   140007ae0:	movzx  r12d,al
   140007ae4:	test   ecx,ecx
   140007ae6:	je     0x140007b00
   140007ae8:	cmp    ecx,0xffffffff
   140007aeb:	je     0x140007b56
   140007aed:	lock xadd DWORD PTR [rsi],ebp
   140007af1:	add    ebp,0xffffffff
   140007af4:	setne  cl
   140007af7:	test   cl,cl
   140007af9:	jne    0x140007b56
   140007afb:	mov    rsi,QWORD PTR [rsp+0x48]
   140007b00:	movsxd rax,DWORD PTR [rsi+0xc]
   140007b04:	lea    rbx,[rsi+rax*8+0x10]
   140007b09:	movsxd rax,DWORD PTR [rsi+0x8]
   140007b0d:	lea    rbp,[rsi+rax*8+0x10]
   140007b12:	cmp    rbp,rbx
   140007b15:	je     0x140007b4d
   140007b17:	nop    WORD PTR [rax+rax*1+0x0]
   140007b20:	mov    rdi,QWORD PTR [rbx-0x8]
   140007b24:	sub    rbx,0x8
   140007b28:	test   rdi,rdi
   140007b2b:	je     0x140007b48
   140007b2d:	lea    rcx,[rdi+0x8]
   140007b31:	call   QWORD PTR [rip+0x23d61]        # 0x14002b898
   140007b37:	mov    rcx,rdi
   140007b3a:	call   QWORD PTR [rip+0x23d58]        # 0x14002b898
   140007b40:	mov    rcx,rdi
   140007b43:	call   0x140029524
   140007b48:	cmp    rbx,rbp
   140007b4b:	jne    0x140007b20
   140007b4d:	mov    rcx,rsi
   140007b50:	call   QWORD PTR [rip+0x23d1a]        # 0x14002b870
   140007b56:	lea    rcx,[rsp+0x30]
   140007b5b:	call   QWORD PTR [rip+0x23d37]        # 0x14002b898
   140007b61:	lea    rcx,[rsp+0x38]
   140007b66:	call   QWORD PTR [rip+0x23794]        # 0x14002b300
   140007b6c:	mov    al,r12b
   140007b6f:	jmp    0x140007ea9
   140007b74:	lea    rdx,[rip+0x25695]        # 0x14002d210
   140007b7b:	xor    eax,eax
   140007b7d:	mov    rcx,rbp
   140007b80:	mov    rdi,rdx
   140007b83:	mov    QWORD PTR [rsp+0x78],rdx
   140007b88:	mov    dl,0x20
   140007b8a:	repnz scas al,BYTE PTR es:[rdi]
   140007b8c:	not    rcx
   140007b8f:	dec    rcx
   140007b92:	mov    DWORD PTR [rsp+0x70],ecx
   140007b96:	lea    rcx,[rsp+0x68]
   140007b9b:	movaps xmm0,XMMWORD PTR [rsp+0x70]
   140007ba0:	movdqa XMMWORD PTR [rsp+0x130],xmm0
   140007ba9:	call   QWORD PTR [rip+0x23d19]        # 0x14002b8c8
   140007baf:	lea    rdx,[rsp+0x130]
   140007bb7:	lea    rcx,[rsp+0xd8]
   140007bbf:	mov    rdi,rax
   140007bc2:	call   QWORD PTR [rip+0x23c98]        # 0x14002b860
   140007bc8:	lea    r8,[rsp+0x30]
   140007bcd:	lea    rdx,[rsp+0x108]
   140007bd5:	mov    rcx,rax
   140007bd8:	movzx  eax,WORD PTR [rdi]
   140007bdb:	xor    r9d,r9d
   140007bde:	mov    WORD PTR [rsp+0x20],ax
   140007be3:	call   QWORD PTR [rip+0x235ff]        # 0x14002b1e8
   140007be9:	mov    rdx,QWORD PTR [r14+0x60]
   140007bed:	mov    rbx,rax
   140007bf0:	mov    eax,DWORD PTR [rdx]
   140007bf2:	cmp    eax,0x1
   140007bf5:	je     0x140007c22
   140007bf7:	test   eax,eax
   140007bf9:	je     0x140007c22
   140007bfb:	lea    rcx,[r14+0x60]
   140007bff:	mov    edx,0x7fffffff
   140007c04:	mov    r8d,0x1
   140007c0a:	call   0x140001a10
   140007c0f:	test   rax,rax
   140007c12:	je     0x140007c48
   140007c14:	mov    rdx,rbx
   140007c17:	mov    rcx,rax
   140007c1a:	call   QWORD PTR [rip+0x23c80]        # 0x14002b8a0
   140007c20:	jmp    0x140007c48
   140007c22:	lea    rcx,[rsp+0xc8]
   140007c2a:	mov    rdx,rbx
   140007c2d:	call   QWORD PTR [rip+0x23c6d]        # 0x14002b8a0
   140007c33:	lea    rcx,[r14+0x60]
   140007c37:	call   QWORD PTR [rip+0x23c03]        # 0x14002b840
   140007c3d:	mov    rcx,QWORD PTR [rsp+0xc8]
   140007c45:	mov    QWORD PTR [rax],rcx
   140007c48:	lea    rcx,[rsp+0x108]
   140007c50:	call   QWORD PTR [rip+0x23c42]        # 0x14002b898
   140007c56:	lea    rcx,[rsp+0xd8]
   140007c5e:	call   QWORD PTR [rip+0x23c34]        # 0x14002b898
   140007c64:	mov    rsi,QWORD PTR [rsp+0x48]
   140007c69:	mov    eax,DWORD PTR [rsi]
   140007c6b:	test   eax,eax
   140007c6d:	je     0x140007c8f
   140007c6f:	cmp    eax,0xffffffff
   140007c72:	je     0x140007e91
   140007c78:	lock xadd DWORD PTR [rsi],ebp
   140007c7c:	add    ebp,0xffffffff
   140007c7f:	setne  al
   140007c82:	test   al,al
   140007c84:	jne    0x140007e91
   140007c8a:	mov    rsi,QWORD PTR [rsp+0x48]
   140007c8f:	movsxd rax,DWORD PTR [rsi+0xc]
   140007c93:	lea    rbx,[rsi+rax*8+0x10]
   140007c98:	movsxd rax,DWORD PTR [rsi+0x8]
   140007c9c:	lea    rbp,[rsi+rax*8+0x10]
   140007ca1:	cmp    rbp,rbx
   140007ca4:	je     0x140007cdd
   140007ca6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140007cb0:	mov    rdi,QWORD PTR [rbx-0x8]
   140007cb4:	sub    rbx,0x8
   140007cb8:	test   rdi,rdi
   140007cbb:	je     0x140007cd8
   140007cbd:	lea    rcx,[rdi+0x8]
   140007cc1:	call   QWORD PTR [rip+0x23bd1]        # 0x14002b898
   140007cc7:	mov    rcx,rdi
   140007cca:	call   QWORD PTR [rip+0x23bc8]        # 0x14002b898
   140007cd0:	mov    rcx,rdi
   140007cd3:	call   0x140029524
   140007cd8:	cmp    rbx,rbp
   140007cdb:	jne    0x140007cb0
   140007cdd:	mov    rcx,rsi
   140007ce0:	call   QWORD PTR [rip+0x23b8a]        # 0x14002b870
   140007ce6:	jmp    0x140007e91
   140007ceb:	mov    rsi,QWORD PTR [rsp+0x48]
   140007cf0:	mov    eax,DWORD PTR [rsi]
   140007cf2:	test   eax,eax
   140007cf4:	je     0x140007d10
   140007cf6:	cmp    eax,0xffffffff
   140007cf9:	je     0x140007d66
   140007cfb:	mov    eax,ebp
   140007cfd:	lock xadd DWORD PTR [rsi],eax
   140007d01:	add    eax,0xffffffff
   140007d04:	setne  al
   140007d07:	test   al,al
   140007d09:	jne    0x140007d66
   140007d0b:	mov    rsi,QWORD PTR [rsp+0x48]
   140007d10:	movsxd rax,DWORD PTR [rsi+0xc]
   140007d14:	lea    rbx,[rsi+rax*8+0x10]
   140007d19:	movsxd rax,DWORD PTR [rsi+0x8]
   140007d1d:	lea    r12,[rsi+rax*8+0x10]
   140007d22:	cmp    r12,rbx
   140007d25:	je     0x140007d5d
   140007d27:	nop    WORD PTR [rax+rax*1+0x0]
   140007d30:	mov    rdi,QWORD PTR [rbx-0x8]
   140007d34:	sub    rbx,0x8
   140007d38:	test   rdi,rdi
   140007d3b:	je     0x140007d58
   140007d3d:	lea    rcx,[rdi+0x8]
   140007d41:	call   QWORD PTR [rip+0x23b51]        # 0x14002b898
   140007d47:	mov    rcx,rdi
   140007d4a:	call   QWORD PTR [rip+0x23b48]        # 0x14002b898
   140007d50:	mov    rcx,rdi
   140007d53:	call   0x140029524
   140007d58:	cmp    rbx,r12
   140007d5b:	jne    0x140007d30
   140007d5d:	mov    rcx,rsi
   140007d60:	call   QWORD PTR [rip+0x23b0a]        # 0x14002b870
   140007d66:	lea    rdx,[rip+0x2542b]        # 0x14002d198
   140007d6d:	xor    eax,eax
   140007d6f:	mov    rcx,rbp
   140007d72:	mov    rdi,rdx
   140007d75:	mov    QWORD PTR [rsp+0x78],rdx
   140007d7a:	mov    dl,0x20
   140007d7c:	repnz scas al,BYTE PTR es:[rdi]
   140007d7e:	not    rcx
   140007d81:	dec    rcx
   140007d84:	mov    DWORD PTR [rsp+0x70],ecx
   140007d88:	lea    rcx,[rsp+0x6a]
   140007d8d:	movaps xmm0,XMMWORD PTR [rsp+0x70]
   140007d92:	movdqa XMMWORD PTR [rsp+0x120],xmm0
   140007d9b:	call   QWORD PTR [rip+0x23b27]        # 0x14002b8c8
   140007da1:	lea    rcx,[rsp+0x6c]
   140007da6:	mov    dl,0x20
   140007da8:	mov    rbx,rax
   140007dab:	call   QWORD PTR [rip+0x23b17]        # 0x14002b8c8
   140007db1:	lea    rdx,[rsp+0x120]
   140007db9:	lea    rcx,[rsp+0x80]
   140007dc1:	mov    rdi,rax
   140007dc4:	call   QWORD PTR [rip+0x23a96]        # 0x14002b860
   140007dca:	movzx  edx,WORD PTR [rdi]
   140007dcd:	mov    WORD PTR [rsp+0x20],dx
   140007dd2:	lea    rdx,[rsp+0xb8]
   140007dda:	xor    r9d,r9d
   140007ddd:	mov    rcx,rax
   140007de0:	mov    r8,r15
   140007de3:	call   QWORD PTR [rip+0x233ff]        # 0x14002b1e8
   140007de9:	lea    rdx,[rsp+0xa8]
   140007df1:	xor    r9d,r9d
   140007df4:	mov    rcx,rax
   140007df7:	movzx  eax,WORD PTR [rbx]
   140007dfa:	mov    r8,r13
   140007dfd:	mov    WORD PTR [rsp+0x20],ax
   140007e02:	call   QWORD PTR [rip+0x233e0]        # 0x14002b1e8
   140007e08:	mov    rdx,QWORD PTR [r14+0x60]
   140007e0c:	mov    rdi,rax
   140007e0f:	mov    eax,DWORD PTR [rdx]
   140007e11:	cmp    eax,0x1
   140007e14:	je     0x140007e41
   140007e16:	test   eax,eax
   140007e18:	je     0x140007e41
   140007e1a:	lea    rcx,[r14+0x60]
   140007e1e:	mov    edx,0x7fffffff
   140007e23:	mov    r8d,0x1
   140007e29:	call   0x140001a10
   140007e2e:	test   rax,rax
   140007e31:	je     0x140007e67
   140007e33:	mov    rdx,rdi
   140007e36:	mov    rcx,rax
   140007e39:	call   QWORD PTR [rip+0x23a61]        # 0x14002b8a0
   140007e3f:	jmp    0x140007e67
   140007e41:	lea    rcx,[rsp+0x98]
   140007e49:	mov    rdx,rdi
   140007e4c:	call   QWORD PTR [rip+0x23a4e]        # 0x14002b8a0
   140007e52:	lea    rcx,[r14+0x60]
   140007e56:	call   QWORD PTR [rip+0x239e4]        # 0x14002b840
   140007e5c:	mov    rcx,QWORD PTR [rsp+0x98]
   140007e64:	mov    QWORD PTR [rax],rcx
   140007e67:	lea    rcx,[rsp+0xa8]
   140007e6f:	call   QWORD PTR [rip+0x23a23]        # 0x14002b898
   140007e75:	lea    rcx,[rsp+0xb8]
   140007e7d:	call   QWORD PTR [rip+0x23a15]        # 0x14002b898
   140007e83:	lea    rcx,[rsp+0x80]
   140007e8b:	call   QWORD PTR [rip+0x23a07]        # 0x14002b898
   140007e91:	lea    rcx,[rsp+0x30]
   140007e96:	call   QWORD PTR [rip+0x239fc]        # 0x14002b898
   140007e9c:	lea    rcx,[rsp+0x38]
   140007ea1:	call   QWORD PTR [rip+0x23459]        # 0x14002b300
   140007ea7:	xor    al,al
   140007ea9:	mov    r12,QWORD PTR [rsp+0x170]
   140007eb1:	lea    r11,[rsp+0x140]
   140007eb9:	mov    rbx,QWORD PTR [r11+0x40]
   140007ebd:	mov    rbp,QWORD PTR [r11+0x48]
   140007ec1:	mov    rsp,r11
   140007ec4:	pop    r15
   140007ec6:	pop    r14
   140007ec8:	pop    r13
   140007eca:	pop    rdi
   140007ecb:	pop    rsi
   140007ecc:	ret    
   140007ecd:	int3   
   140007ece:	int3   
   140007ecf:	int3   
   140007ed0:	mov    QWORD PTR [rsp+0x20],rbx
   140007ed5:	push   rbp
   140007ed6:	push   r12
   140007ed8:	push   r13
   140007eda:	sub    rsp,0x40
   140007ede:	xor    ebp,ebp
   140007ee0:	mov    r13,rdx
   140007ee3:	mov    r12,rcx
   140007ee6:	mov    DWORD PTR [rsp+0x70],ebp
   140007eea:	call   0x140006c00
   140007eef:	lea    rcx,[rsp+0x70]
   140007ef4:	mov    rdx,r13
   140007ef7:	call   QWORD PTR [rip+0x239a3]        # 0x14002b8a0
   140007efd:	mov    r11,QWORD PTR [rsp+0x70]
   140007f02:	lea    rcx,[rsp+0x70]
   140007f07:	cmp    DWORD PTR [r11+0x4],ebp
   140007f0b:	sete   bl
   140007f0e:	call   QWORD PTR [rip+0x23984]        # 0x14002b898
   140007f14:	test   bl,bl
   140007f16:	je     0x140007f61
   140007f18:	lea    rcx,[rsp+0x20]
   140007f1d:	mov    rdx,r13
   140007f20:	mov    DWORD PTR [rsp+0x70],0xffffffff
   140007f28:	call   0x140004ea0
   140007f2d:	lea    rcx,[r12+0x48]
   140007f32:	lea    r8,[rsp+0x70]
   140007f37:	mov    rdx,rax
   140007f3a:	call   0x140005770
   140007f3f:	lea    rcx,[rsp+0x30]
   140007f44:	mov    ebx,eax
   140007f46:	call   QWORD PTR [rip+0x2394c]        # 0x14002b898
   140007f4c:	lea    rcx,[rsp+0x28]
   140007f51:	call   QWORD PTR [rip+0x23941]        # 0x14002b898
   140007f57:	lea    rcx,[rsp+0x20]
   140007f5c:	jmp    0x1400080a6
   140007f61:	lea    rcx,[rsp+0x70]
   140007f66:	mov    rdx,r13
   140007f69:	mov    QWORD PTR [rsp+0x68],rdi
   140007f6e:	call   QWORD PTR [rip+0x2392c]        # 0x14002b8a0
   140007f74:	mov    rax,QWORD PTR [r12+0x40]
   140007f79:	cmp    DWORD PTR [rax+0x14],ebp
   140007f7c:	je     0x140008002
   140007f82:	mov    QWORD PTR [rsp+0x60],rsi
   140007f87:	mov    esi,ebp
   140007f89:	cmp    DWORD PTR [rax+0x20],ebp
   140007f8c:	je     0x140007f9e
   140007f8e:	mov    edx,DWORD PTR [rax+0x24]
   140007f91:	lea    rcx,[rsp+0x70]
   140007f96:	call   QWORD PTR [rip+0x2330c]        # 0x14002b2a8
   140007f9c:	mov    esi,eax
   140007f9e:	mov    r9,QWORD PTR [r12+0x40]
   140007fa3:	mov    ecx,DWORD PTR [r9+0x20]
   140007fa7:	test   ecx,ecx
   140007fa9:	je     0x140007fe9
   140007fab:	xor    edx,edx
   140007fad:	mov    eax,esi
   140007faf:	div    ecx
   140007fb1:	mov    rcx,QWORD PTR [r9+0x8]
   140007fb5:	lea    rbx,[rcx+rdx*8]
   140007fb9:	mov    rcx,QWORD PTR [rcx+rdx*8]
   140007fbd:	cmp    rcx,r9
   140007fc0:	je     0x140007fee
   140007fc2:	cmp    esi,DWORD PTR [rcx+0x8]
   140007fc5:	jne    0x140007fda
   140007fc7:	lea    rdx,[rcx+0x10]
   140007fcb:	lea    rcx,[rsp+0x70]
   140007fd0:	call   QWORD PTR [rip+0x232c2]        # 0x14002b298
   140007fd6:	test   al,al
   140007fd8:	jne    0x140007fee
   140007fda:	mov    rbx,QWORD PTR [rbx]
   140007fdd:	mov    rcx,QWORD PTR [rbx]
   140007fe0:	cmp    rcx,QWORD PTR [r12+0x40]
   140007fe5:	jne    0x140007fc2
   140007fe7:	jmp    0x140007fee
   140007fe9:	lea    rbx,[r12+0x40]
   140007fee:	mov    rax,QWORD PTR [rbx]
   140007ff1:	mov    rsi,QWORD PTR [rsp+0x60]
   140007ff6:	cmp    rax,QWORD PTR [r12+0x40]
   140007ffb:	je     0x140008002
   140007ffd:	mov    ebx,DWORD PTR [rax+0x18]
   140008000:	jmp    0x140008005
   140008002:	or     ebx,0xffffffff
   140008005:	lea    rcx,[rsp+0x70]
   14000800a:	call   QWORD PTR [rip+0x23888]        # 0x14002b898
   140008010:	mov    rdi,QWORD PTR [rsp+0x68]
   140008015:	test   ebx,ebx
   140008017:	jns    0x1400080ac
   14000801d:	lea    rcx,[rsp+0x20]
   140008022:	mov    rdx,r13
   140008025:	mov    DWORD PTR [rsp+0x70],0xffffffff
   14000802d:	call   0x140004ea0
   140008032:	lea    rcx,[r12+0x48]
   140008037:	lea    r8,[rsp+0x70]
   14000803c:	mov    rdx,rax
   14000803f:	call   0x140005770
   140008044:	lea    rcx,[rsp+0x30]
   140008049:	movsxd rbx,eax
   14000804c:	call   QWORD PTR [rip+0x23846]        # 0x14002b898
   140008052:	lea    rcx,[rsp+0x28]
   140008057:	call   QWORD PTR [rip+0x2383b]        # 0x14002b898
   14000805d:	lea    rcx,[rsp+0x20]
   140008062:	call   QWORD PTR [rip+0x23830]        # 0x14002b898
   140008068:	test   ebx,ebx
   14000806a:	js     0x140008098
   14000806c:	mov    rcx,QWORD PTR [r12]
   140008070:	mov    ebp,0x1
   140008075:	movsxd rdx,DWORD PTR [rcx+0x8]
   140008079:	add    rdx,rbx
   14000807c:	mov    rdx,QWORD PTR [rcx+rdx*8+0x10]
   140008081:	lea    rcx,[rsp+0x70]
   140008086:	call   QWORD PTR [rip+0x23814]        # 0x14002b8a0
   14000808c:	mov    r11,QWORD PTR [rsp+0x70]
   140008091:	cmp    DWORD PTR [r11+0x4],0x0
   140008096:	je     0x14000809b
   140008098:	or     ebx,0xffffffff
   14000809b:	test   bpl,0x1
   14000809f:	je     0x1400080ac
   1400080a1:	lea    rcx,[rsp+0x70]
   1400080a6:	call   QWORD PTR [rip+0x237ec]        # 0x14002b898
   1400080ac:	mov    eax,ebx
   1400080ae:	mov    rbx,QWORD PTR [rsp+0x78]
   1400080b3:	add    rsp,0x40
   1400080b7:	pop    r13
   1400080b9:	pop    r12
   1400080bb:	pop    rbp
   1400080bc:	ret    
   1400080bd:	int3   
   1400080be:	int3   
   1400080bf:	int3   
   1400080c0:	mov    rax,rsp
   1400080c3:	push   r12
   1400080c5:	sub    rsp,0x90
   1400080cc:	mov    r12,rcx
   1400080cf:	mov    QWORD PTR [rax-0x10],rsi
   1400080d3:	lea    rcx,[rax+0x18]
   1400080d7:	mov    QWORD PTR [rax-0x18],rdi
   1400080db:	call   QWORD PTR [rip+0x237bf]        # 0x14002b8a0
   1400080e1:	mov    edx,DWORD PTR [rip+0x2d4d1]        # 0x1400355b8
   1400080e7:	test   dl,0x1
   1400080ea:	jne    0x14000810f
   1400080ec:	mov    rax,QWORD PTR [rip+0x23795]        # 0x14002b888
   1400080f3:	or     edx,0x1
   1400080f6:	lea    rcx,[rip+0x21d23]        # 0x140029e20
   1400080fd:	mov    QWORD PTR [rip+0x2d4ac],rax        # 0x1400355b0
   140008104:	mov    DWORD PTR [rip+0x2d4ae],edx        # 0x1400355b8
   14000810a:	call   0x1400295e8
   14000810f:	mov    rdi,QWORD PTR [rip+0x2d49a]        # 0x1400355b0
   140008116:	mov    QWORD PTR [rsp+0x60],rdi
   14000811b:	mov    eax,DWORD PTR [rdi]
   14000811d:	test   eax,eax
   14000811f:	je     0x140008131
   140008121:	cmp    eax,0xffffffff
   140008124:	je     0x140008175
   140008126:	lock add DWORD PTR [rdi],0x1
   14000812a:	mov    rdi,QWORD PTR [rsp+0x60]
   14000812f:	jmp    0x140008175
   140008131:	mov    edx,DWORD PTR [rdi+0x4]
   140008134:	lea    rcx,[rsp+0x60]
   140008139:	call   QWORD PTR [rip+0x23719]        # 0x14002b858
   14000813f:	mov    rcx,QWORD PTR [rsp+0x60]
   140008144:	mov    rdx,QWORD PTR [rip+0x2d465]        # 0x1400355b0
   14000814b:	movsxd rax,DWORD PTR [rdx+0x8]
   14000814f:	lea    r9,[rdx+rax*8+0x10]
   140008154:	movsxd rax,DWORD PTR [rcx+0xc]
   140008158:	lea    r8,[rcx+rax*8+0x10]
   14000815d:	movsxd rax,DWORD PTR [rcx+0x8]
   140008161:	lea    rdx,[rcx+rax*8+0x10]
   140008166:	lea    rcx,[rsp+0x60]
   14000816b:	call   0x140001360
   140008170:	mov    rdi,QWORD PTR [rsp+0x60]
   140008175:	xor    ecx,ecx
   140008177:	mov    DWORD PTR [rsp+0x68],ecx
   14000817b:	movsxd rax,DWORD PTR [rdi+0x8]
   14000817f:	lea    rdx,[rdi+rax*8+0x10]
   140008184:	mov    QWORD PTR [rsp+0x70],rdx
   140008189:	movsxd rax,DWORD PTR [rdi+0xc]
   14000818d:	lea    rdi,[rdi+rax*8+0x10]
   140008192:	mov    QWORD PTR [rsp+0x78],rdi
   140008197:	nop    WORD PTR [rax+rax*1+0x0]
   1400081a0:	mov    eax,ecx
   1400081a2:	inc    ecx
   1400081a4:	mov    DWORD PTR [rsp+0x68],ecx
   1400081a8:	test   eax,eax
   1400081aa:	jne    0x14000824c
   1400081b0:	cmp    rdx,rdi
   1400081b3:	je     0x14000824c
   1400081b9:	mov    rdi,QWORD PTR [rdx]
   1400081bc:	nop    DWORD PTR [rax+0x0]
   1400081c0:	test   ecx,ecx
   1400081c2:	je     0x140008234
   1400081c4:	lea    rcx,[rsp+0xb0]
   1400081cc:	mov    r8d,0x1
   1400081d2:	mov    rdx,rdi
   1400081d5:	call   QWORD PTR [rip+0x2311d]        # 0x14002b2f8
   1400081db:	test   al,al
   1400081dd:	jne    0x1400081eb
   1400081df:	mov    ecx,DWORD PTR [rsp+0x68]
   1400081e3:	dec    ecx
   1400081e5:	mov    DWORD PTR [rsp+0x68],ecx
   1400081e9:	jmp    0x1400081c0
   1400081eb:	mov    rax,QWORD PTR [rsp+0xb0]
   1400081f3:	lea    rdx,[rsp+0x30]
   1400081f8:	lea    rcx,[rsp+0xb0]
   140008200:	mov    r8d,DWORD PTR [rax+0x4]
   140008204:	mov    rax,QWORD PTR [rdi]
   140008207:	sub    r8d,DWORD PTR [rax+0x4]
   14000820b:	dec    r8d
   14000820e:	call   QWORD PTR [rip+0x230bc]        # 0x14002b2d0
   140008214:	lea    rcx,[rsp+0xb0]
   14000821c:	mov    rdx,rax
   14000821f:	call   QWORD PTR [rip+0x2368b]        # 0x14002b8b0
   140008225:	lea    rcx,[rsp+0x30]
   14000822a:	call   QWORD PTR [rip+0x23668]        # 0x14002b898
   140008230:	mov    ecx,DWORD PTR [rsp+0x68]
   140008234:	mov    rdx,QWORD PTR [rsp+0x70]
   140008239:	mov    rdi,QWORD PTR [rsp+0x78]
   14000823e:	add    rdx,0x8
   140008242:	mov    QWORD PTR [rsp+0x70],rdx
   140008247:	jmp    0x1400081a0
   14000824c:	mov    rsi,QWORD PTR [rsp+0x60]
   140008251:	mov    eax,DWORD PTR [rsi]
   140008253:	test   eax,eax
   140008255:	je     0x140008270
   140008257:	cmp    eax,0xffffffff
   14000825a:	je     0x1400082e6
   140008260:	lock add DWORD PTR [rsi],0xffffffff
   140008264:	setne  al
   140008267:	test   al,al
   140008269:	jne    0x1400082e6
   14000826b:	mov    rsi,QWORD PTR [rsp+0x60]
   140008270:	movsxd rax,DWORD PTR [rsi+0xc]
   140008274:	mov    QWORD PTR [rsp+0xa8],rbp
   14000827c:	lea    rdi,[rsi+rax*8+0x10]
   140008281:	movsxd rax,DWORD PTR [rsi+0x8]
   140008285:	lea    rbp,[rsi+rax*8+0x10]
   14000828a:	cmp    rbp,rdi
   14000828d:	je     0x1400082d5
   14000828f:	mov    QWORD PTR [rsp+0xa0],rbx
   140008297:	nop    WORD PTR [rax+rax*1+0x0]
   1400082a0:	mov    rbx,QWORD PTR [rdi-0x8]
   1400082a4:	sub    rdi,0x8
   1400082a8:	test   rbx,rbx
   1400082ab:	je     0x1400082c8
   1400082ad:	lea    rcx,[rbx+0x8]
   1400082b1:	call   QWORD PTR [rip+0x235e1]        # 0x14002b898
   1400082b7:	mov    rcx,rbx
   1400082ba:	call   QWORD PTR [rip+0x235d8]        # 0x14002b898
   1400082c0:	mov    rcx,rbx
   1400082c3:	call   0x140029524
   1400082c8:	cmp    rdi,rbp
   1400082cb:	jne    0x1400082a0
   1400082cd:	mov    rbx,QWORD PTR [rsp+0xa0]
   1400082d5:	mov    rcx,rsi
   1400082d8:	call   QWORD PTR [rip+0x23592]        # 0x14002b870
   1400082de:	mov    rbp,QWORD PTR [rsp+0xa8]
   1400082e6:	mov    eax,DWORD PTR [rip+0x2d2dc]        # 0x1400355c8
   1400082ec:	mov    rsi,QWORD PTR [rsp+0x88]
   1400082f4:	test   al,0x1
   1400082f6:	jne    0x14000836d
   1400082f8:	or     rcx,0xffffffffffffffff
   1400082fc:	lea    rdx,[rip+0x24f5d]        # 0x14002d260
   140008303:	or     eax,0x1
   140008306:	mov    rdi,rdx
   140008309:	mov    QWORD PTR [rsp+0x38],rdx
   14000830e:	mov    DWORD PTR [rip+0x2d2b4],eax        # 0x1400355c8
   140008314:	xor    eax,eax
   140008316:	lea    rdx,[rsp+0x50]
   14000831b:	repnz scas al,BYTE PTR es:[rdi]
   14000831d:	not    rcx
   140008320:	dec    rcx
   140008323:	mov    DWORD PTR [rsp+0x30],ecx
   140008327:	lea    rcx,[rsp+0x20]
   14000832c:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140008331:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   140008337:	call   QWORD PTR [rip+0x23523]        # 0x14002b860
   14000833d:	xor    r9d,r9d
   140008340:	lea    r8d,[r9+0x1]
   140008344:	lea    rdx,[rsp+0x20]
   140008349:	lea    rcx,[rip+0x2d270]        # 0x1400355c0
   140008350:	call   QWORD PTR [rip+0x2301a]        # 0x14002b370
   140008356:	lea    rcx,[rsp+0x20]
   14000835b:	call   QWORD PTR [rip+0x23537]        # 0x14002b898
   140008361:	lea    rcx,[rip+0x21aa8]        # 0x140029e10
   140008368:	call   0x1400295e8
   14000836d:	lea    rdx,[rsp+0xb0]
   140008375:	lea    rcx,[rsp+0xb8]
   14000837d:	call   QWORD PTR [rip+0x22fe5]        # 0x14002b368
   140008383:	lea    rcx,[rsp+0xb8]
   14000838b:	call   QWORD PTR [rip+0x22eff]        # 0x14002b290
   140008391:	mov    rdi,QWORD PTR [rsp+0x80]
   140008399:	cmp    eax,0x1
   14000839c:	jne    0x140008443
   1400083a2:	data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400083b0:	lea    rdx,[rip+0x2d209]        # 0x1400355c0
   1400083b7:	lea    rcx,[rsp+0xb0]
   1400083bf:	xor    r8d,r8d
   1400083c2:	call   QWORD PTR [rip+0x22f98]        # 0x14002b360
   1400083c8:	cmp    eax,0xffffffff
   1400083cb:	je     0x14000847d
   1400083d1:	lea    r8d,[rax+0x1]
   1400083d5:	lea    rdx,[rsp+0x40]
   1400083da:	lea    rcx,[rsp+0xb0]
   1400083e2:	or     r9d,0xffffffff
   1400083e6:	call   QWORD PTR [rip+0x22f6c]        # 0x14002b358
   1400083ec:	lea    rcx,[rsp+0xb0]
   1400083f4:	mov    rdx,rax
   1400083f7:	call   QWORD PTR [rip+0x234b3]        # 0x14002b8b0
   1400083fd:	lea    rcx,[rsp+0x40]
   140008402:	call   QWORD PTR [rip+0x23490]        # 0x14002b898
   140008408:	lea    rcx,[rsp+0xb8]
   140008410:	call   QWORD PTR [rip+0x22e5a]        # 0x14002b270
   140008416:	lea    rdx,[rsp+0xb0]
   14000841e:	lea    rcx,[rsp+0xb8]
   140008426:	call   QWORD PTR [rip+0x22f3c]        # 0x14002b368
   14000842c:	lea    rcx,[rsp+0xb8]
   140008434:	call   QWORD PTR [rip+0x22e56]        # 0x14002b290
   14000843a:	cmp    eax,0x1
   14000843d:	je     0x1400083b0
   140008443:	lea    rcx,[rsp+0xb8]
   14000844b:	mov    rdx,r12
   14000844e:	call   QWORD PTR [rip+0x22e24]        # 0x14002b278
   140008454:	lea    rcx,[rsp+0xb8]
   14000845c:	call   QWORD PTR [rip+0x22e0e]        # 0x14002b270
   140008462:	lea    rcx,[rsp+0xb0]
   14000846a:	call   QWORD PTR [rip+0x23428]        # 0x14002b898
   140008470:	mov    rax,r12
   140008473:	add    rsp,0x90
   14000847a:	pop    r12
   14000847c:	ret    
   14000847d:	lea    rcx,[rsp+0xb8]
   140008485:	call   QWORD PTR [rip+0x22de5]        # 0x14002b270
   14000848b:	mov    rcx,r12
   14000848e:	call   QWORD PTR [rip+0x233fc]        # 0x14002b890
   140008494:	jmp    0x140008462
   140008496:	int3   
   140008497:	int3   
   140008498:	int3   
   140008499:	int3   
   14000849a:	int3   
   14000849b:	int3   
   14000849c:	int3   
   14000849d:	int3   
   14000849e:	int3   
   14000849f:	int3   
   1400084a0:	rex push rbx
   1400084a2:	sub    rsp,0x20
   1400084a6:	add    rcx,0x28
   1400084aa:	mov    rbx,r8
   1400084ad:	call   0x140005ee0
   1400084b2:	mov    rdx,rbx
   1400084b5:	mov    rcx,rax
   1400084b8:	add    rsp,0x20
   1400084bc:	pop    rbx
   1400084bd:	rex.W jmp QWORD PTR [rip+0x233ec]        # 0x14002b8b0
   1400084c4:	int3   
   1400084c5:	int3   
   1400084c6:	int3   
   1400084c7:	int3   
   1400084c8:	int3   
   1400084c9:	int3   
   1400084ca:	int3   
   1400084cb:	int3   
   1400084cc:	int3   
   1400084cd:	int3   
   1400084ce:	int3   
   1400084cf:	int3   
   1400084d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400084d5:	push   rdi
   1400084d6:	sub    rsp,0x20
   1400084da:	mov    ecx,0x78
   1400084df:	mov    rdi,r8
   1400084e2:	mov    rbx,rdx
   1400084e5:	call   0x14002952a
   1400084ea:	test   rax,rax
   1400084ed:	je     0x140008508
   1400084ef:	mov    rdx,rdi
   1400084f2:	mov    rcx,rax
   1400084f5:	call   0x1400020d0
   1400084fa:	mov    QWORD PTR [rbx],rax
   1400084fd:	mov    rbx,QWORD PTR [rsp+0x30]
   140008502:	add    rsp,0x20
   140008506:	pop    rdi
   140008507:	ret    
   140008508:	mov    QWORD PTR [rbx],0x0
   14000850f:	mov    rbx,QWORD PTR [rsp+0x30]
   140008514:	add    rsp,0x20
   140008518:	pop    rdi
   140008519:	ret    
   14000851a:	int3   
   14000851b:	int3   
   14000851c:	int3   
   14000851d:	int3   
   14000851e:	int3   
   14000851f:	int3   
   140008520:	mov    QWORD PTR [rsp+0x18],rbp
   140008525:	mov    QWORD PTR [rsp+0x20],rdi
   14000852a:	push   r12
   14000852c:	sub    rsp,0x20
   140008530:	mov    eax,DWORD PTR [rip+0x2d082]        # 0x1400355b8
   140008536:	mov    r12,rcx
   140008539:	test   al,0x1
   14000853b:	jne    0x140008560
   14000853d:	or     eax,0x1
   140008540:	lea    rcx,[rip+0x218d9]        # 0x140029e20
   140008547:	mov    DWORD PTR [rip+0x2d06b],eax        # 0x1400355b8
   14000854d:	mov    rax,QWORD PTR [rip+0x23334]        # 0x14002b888
   140008554:	mov    QWORD PTR [rip+0x2d055],rax        # 0x1400355b0
   14000855b:	call   0x1400295e8
   140008560:	mov    rax,QWORD PTR [rip+0x2d049]        # 0x1400355b0
   140008567:	xor    ebp,ebp
   140008569:	mov    QWORD PTR [rsp+0x30],rbx
   14000856e:	mov    r8d,DWORD PTR [rax+0x8]
   140008572:	mov    ecx,DWORD PTR [rax+0xc]
   140008575:	mov    QWORD PTR [rsp+0x38],rsi
   14000857a:	sub    ecx,r8d
   14000857d:	mov    rdi,rbp
   140008580:	test   ecx,ecx
   140008582:	jle    0x140008670
   140008588:	mov    ecx,DWORD PTR [rax]
   14000858a:	cmp    ecx,0x1
   14000858d:	je     0x14000860e
   14000858f:	test   ecx,ecx
   140008591:	je     0x14000860e
   140008593:	mov    edx,DWORD PTR [rax+0x4]
   140008596:	movsxd rcx,r8d
   140008599:	lea    rbx,[rax+rcx*8+0x10]
   14000859e:	lea    rcx,[rip+0x2d00b]        # 0x1400355b0
   1400085a5:	call   QWORD PTR [rip+0x232ad]        # 0x14002b858
   1400085ab:	mov    rcx,QWORD PTR [rip+0x2cffe]        # 0x1400355b0
   1400085b2:	mov    r9,rbx
   1400085b5:	movsxd rdx,DWORD PTR [rcx+0xc]
   1400085b9:	mov    rsi,rax
   1400085bc:	lea    r8,[rcx+rdx*8+0x10]
   1400085c1:	movsxd rdx,DWORD PTR [rcx+0x8]
   1400085c5:	lea    rdx,[rcx+rdx*8+0x10]
   1400085ca:	lea    rcx,[rip+0x2cfdf]        # 0x1400355b0
   1400085d1:	call   0x140001360
   1400085d6:	mov    r11d,DWORD PTR [rsi]
   1400085d9:	test   r11d,r11d
   1400085dc:	je     0x1400085f8
   1400085de:	cmp    r11d,0xffffffff
   1400085e2:	je     0x1400085ef
   1400085e4:	lock add DWORD PTR [rsi],0xffffffff
   1400085e8:	setne  al
   1400085eb:	test   al,al
   1400085ed:	je     0x1400085f8
   1400085ef:	mov    rax,QWORD PTR [rip+0x2cfba]        # 0x1400355b0
   1400085f6:	jmp    0x14000860e
   1400085f8:	lea    rcx,[rip+0x2cfb1]        # 0x1400355b0
   1400085ff:	mov    rdx,rsi
   140008602:	call   0x140001290
   140008607:	mov    rax,QWORD PTR [rip+0x2cfa2]        # 0x1400355b0
   14000860e:	movsxd r8,DWORD PTR [rax+0x8]
   140008612:	lea    rcx,[rdi+r8*1]
   140008616:	mov    rcx,QWORD PTR [rax+rcx*8+0x10]
   14000861b:	mov    edx,DWORD PTR [rcx+0x20]
   14000861e:	cmp    DWORD PTR [r12+0x20],edx
   140008623:	jne    0x14000865d
   140008625:	mov    ecx,DWORD PTR [rax]
   140008627:	cmp    ecx,0x1
   14000862a:	je     0x140008646
   14000862c:	test   ecx,ecx
   14000862e:	je     0x140008646
   140008630:	mov    edx,DWORD PTR [rax+0x4]
   140008633:	lea    rcx,[rip+0x2cf76]        # 0x1400355b0
   14000863a:	call   0x140005bc0
   14000863f:	mov    rax,QWORD PTR [rip+0x2cf6a]        # 0x1400355b0
   140008646:	movsxd r8,DWORD PTR [rax+0x8]
   14000864a:	lea    rcx,[rdi+r8*1]
   14000864e:	mov    rcx,QWORD PTR [rax+rcx*8+0x10]
   140008653:	mov    edx,DWORD PTR [rcx+0x24]
   140008656:	cmp    DWORD PTR [r12+0x24],edx
   14000865b:	jl     0x140008694
   14000865d:	mov    ecx,DWORD PTR [rax+0xc]
   140008660:	inc    ebp
   140008662:	inc    rdi
   140008665:	sub    ecx,r8d
   140008668:	cmp    ebp,ecx
   14000866a:	jl     0x140008588
   140008670:	mov    ecx,DWORD PTR [rax]
   140008672:	cmp    ecx,0x1
   140008675:	je     0x1400086c6
   140008677:	test   ecx,ecx
   140008679:	je     0x1400086c6
   14000867b:	lea    rcx,[rip+0x2cf2e]        # 0x1400355b0
   140008682:	mov    edx,0x7fffffff
   140008687:	mov    r8d,0x1
   14000868d:	call   0x140005a70
   140008692:	jmp    0x1400086d3
   140008694:	mov    edx,DWORD PTR [rax]
   140008696:	cmp    edx,0x1
   140008699:	je     0x1400086b5
   14000869b:	test   edx,edx
   14000869d:	je     0x1400086b5
   14000869f:	lea    rcx,[rip+0x2cf0a]        # 0x1400355b0
   1400086a6:	mov    r8d,0x1
   1400086ac:	mov    edx,ebp
   1400086ae:	call   0x140005a70
   1400086b3:	jmp    0x1400086d3
   1400086b5:	lea    rcx,[rip+0x2cef4]        # 0x1400355b0
   1400086bc:	mov    edx,ebp
   1400086be:	call   QWORD PTR [rip+0x22c24]        # 0x14002b2e8
   1400086c4:	jmp    0x1400086d3
   1400086c6:	lea    rcx,[rip+0x2cee3]        # 0x1400355b0
   1400086cd:	call   QWORD PTR [rip+0x2316d]        # 0x14002b840
   1400086d3:	lea    rcx,[rip+0x2ced6]        # 0x1400355b0
   1400086da:	mov    r8,r12
   1400086dd:	mov    rdx,rax
   1400086e0:	mov    rsi,QWORD PTR [rsp+0x38]
   1400086e5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400086ea:	mov    rbp,QWORD PTR [rsp+0x40]
   1400086ef:	mov    rdi,QWORD PTR [rsp+0x48]
   1400086f4:	add    rsp,0x20
   1400086f8:	pop    r12
   1400086fa:	jmp    0x140005330
   1400086ff:	int3   
   140008700:	mov    QWORD PTR [rsp+0x8],rbx
   140008705:	push   rdi
   140008706:	sub    rsp,0x20
   14000870a:	mov    rax,QWORD PTR [rdx]
   14000870d:	mov    rbx,rcx
   140008710:	mov    rdi,rdx
   140008713:	mov    QWORD PTR [rcx],rax
   140008716:	mov    ecx,DWORD PTR [rax]
   140008718:	test   ecx,ecx
   14000871a:	je     0x140008733
   14000871c:	cmp    ecx,0xffffffff
   14000871f:	je     0x140008768
   140008721:	lock add DWORD PTR [rax],0x1
   140008725:	mov    rax,rbx
   140008728:	mov    rbx,QWORD PTR [rsp+0x30]
   14000872d:	add    rsp,0x20
   140008731:	pop    rdi
   140008732:	ret    
   140008733:	mov    edx,DWORD PTR [rax+0x4]
   140008736:	mov    rcx,rbx
   140008739:	call   QWORD PTR [rip+0x23119]        # 0x14002b858
   14000873f:	mov    rcx,QWORD PTR [rbx]
   140008742:	mov    r11,QWORD PTR [rdi]
   140008745:	movsxd rax,DWORD PTR [r11+0x8]
   140008749:	lea    r9,[r11+rax*8+0x10]
   14000874e:	movsxd rax,DWORD PTR [rcx+0xc]
   140008752:	lea    r8,[rcx+rax*8+0x10]
   140008757:	movsxd rax,DWORD PTR [rcx+0x8]
   14000875b:	lea    rdx,[rcx+rax*8+0x10]
   140008760:	mov    rcx,rbx
   140008763:	call   0x1400026a0
   140008768:	mov    rax,rbx
   14000876b:	mov    rbx,QWORD PTR [rsp+0x30]
   140008770:	add    rsp,0x20
   140008774:	pop    rdi
   140008775:	ret    
   140008776:	int3   
   140008777:	int3   
   140008778:	int3   
   140008779:	int3   
   14000877a:	int3   
   14000877b:	int3   
   14000877c:	int3   
   14000877d:	int3   
   14000877e:	int3   
   14000877f:	int3   
   140008780:	mov    QWORD PTR [rsp+0x8],rbx
   140008785:	mov    QWORD PTR [rsp+0x18],rbp
   14000878a:	mov    DWORD PTR [rsp+0x10],edx
   14000878e:	push   rsi
   14000878f:	push   rdi
   140008790:	push   r12
   140008792:	push   r13
   140008794:	push   r14
   140008796:	sub    rsp,0x20
   14000879a:	mov    rdx,QWORD PTR [rcx]
   14000879d:	movsxd r13,r8d
   1400087a0:	mov    r12,rcx
   1400087a3:	movsxd rax,DWORD PTR [rdx+0x8]
   1400087a7:	mov    r8d,r13d
   1400087aa:	lea    r14,[rdx+rax*8+0x10]
   1400087af:	lea    rdx,[rsp+0x58]
   1400087b4:	call   QWORD PTR [rip+0x23096]        # 0x14002b850
   1400087ba:	mov    r10,QWORD PTR [r12]
   1400087be:	movsxd rdx,DWORD PTR [rsp+0x58]
   1400087c3:	movsxd r9,DWORD PTR [r10+0x8]
   1400087c7:	mov    rbp,rax
   1400087ca:	mov    rdi,r14
   1400087cd:	add    rdx,r9
   1400087d0:	lea    rbx,[r10+r9*8+0x10]
   1400087d5:	lea    rsi,[r10+rdx*8+0x10]
   1400087da:	cmp    rbx,rsi
   1400087dd:	je     0x14000880e
   1400087df:	nop
   1400087e0:	mov    ecx,0x78
   1400087e5:	call   0x14002952a
   1400087ea:	test   rax,rax
   1400087ed:	je     0x1400087fc
   1400087ef:	mov    rdx,QWORD PTR [rdi]
   1400087f2:	mov    rcx,rax
   1400087f5:	call   0x1400020d0
   1400087fa:	jmp    0x1400087fe
   1400087fc:	xor    eax,eax
   1400087fe:	mov    QWORD PTR [rbx],rax
   140008801:	add    rbx,0x8
   140008805:	add    rdi,0x8
   140008809:	cmp    rbx,rsi
   14000880c:	jne    0x1400087e0
   14000880e:	mov    r8,QWORD PTR [r12]
   140008812:	movsxd rdx,DWORD PTR [rsp+0x58]
   140008817:	movsxd rcx,DWORD PTR [r8+0x8]
   14000881b:	movsxd rax,DWORD PTR [r8+0xc]
   14000881f:	lea    rdi,[r14+rdx*8]
   140008823:	add    rcx,rdx
   140008826:	lea    rsi,[r8+rax*8+0x10]
   14000882b:	add    rcx,r13
   14000882e:	lea    rbx,[r8+rcx*8+0x10]
   140008833:	cmp    rbx,rsi
   140008836:	je     0x14000886e
   140008838:	nop    DWORD PTR [rax+rax*1+0x0]
   140008840:	mov    ecx,0x78
   140008845:	call   0x14002952a
   14000884a:	test   rax,rax
   14000884d:	je     0x14000885c
   14000884f:	mov    rdx,QWORD PTR [rdi]
   140008852:	mov    rcx,rax
   140008855:	call   0x1400020d0
   14000885a:	jmp    0x14000885e
   14000885c:	xor    eax,eax
   14000885e:	mov    QWORD PTR [rbx],rax
   140008861:	add    rbx,0x8
   140008865:	add    rdi,0x8
   140008869:	cmp    rbx,rsi
   14000886c:	jne    0x140008840
   14000886e:	mov    eax,DWORD PTR [rbp+0x0]
   140008871:	test   eax,eax
   140008873:	je     0x140008886
   140008875:	cmp    eax,0xffffffff
   140008878:	je     0x140008891
   14000887a:	lock add DWORD PTR [rbp+0x0],0xffffffff
   14000887f:	setne  al
   140008882:	test   al,al
   140008884:	jne    0x140008891
   140008886:	mov    rdx,rbp
   140008889:	mov    rcx,r12
   14000888c:	call   0x140002700
   140008891:	mov    rdx,QWORD PTR [r12]
   140008895:	movsxd rax,DWORD PTR [rsp+0x58]
   14000889a:	mov    rbx,QWORD PTR [rsp+0x50]
   14000889f:	movsxd rcx,DWORD PTR [rdx+0x8]
   1400088a3:	mov    rbp,QWORD PTR [rsp+0x60]
   1400088a8:	add    rcx,rax
   1400088ab:	lea    rax,[rdx+rcx*8+0x10]
   1400088b0:	add    rsp,0x20
   1400088b4:	pop    r14
   1400088b6:	pop    r13
   1400088b8:	pop    r12
   1400088ba:	pop    rdi
   1400088bb:	pop    rsi
   1400088bc:	ret    
   1400088bd:	int3   
   1400088be:	int3   
   1400088bf:	int3   
   1400088c0:	rex push rbx
   1400088c2:	sub    rsp,0x20
   1400088c6:	mov    rax,QWORD PTR [rip+0x22fbb]        # 0x14002b888
   1400088cd:	mov    rbx,rcx
   1400088d0:	mov    DWORD PTR [rcx+0x8],0x3
   1400088d7:	mov    QWORD PTR [rcx],rax
   1400088da:	add    rcx,0x10
   1400088de:	call   QWORD PTR [rip+0x22fac]        # 0x14002b890
   1400088e4:	lea    rcx,[rbx+0x18]
   1400088e8:	call   QWORD PTR [rip+0x22fa2]        # 0x14002b890
   1400088ee:	mov    r11,QWORD PTR [rip+0x22f93]        # 0x14002b888
   1400088f5:	mov    QWORD PTR [rbx+0x20],r11
   1400088f9:	mov    rax,QWORD PTR [rip+0x22f80]        # 0x14002b880
   140008900:	mov    QWORD PTR [rbx+0x28],rax
   140008904:	mov    BYTE PTR [rbx+0x30],0x1
   140008908:	mov    rax,QWORD PTR [rip+0x22f71]        # 0x14002b880
   14000890f:	mov    QWORD PTR [rbx+0x38],rax
   140008913:	mov    rax,QWORD PTR [rip+0x22f66]        # 0x14002b880
   14000891a:	mov    QWORD PTR [rbx+0x40],rax
   14000891e:	mov    rax,QWORD PTR [rip+0x22f5b]        # 0x14002b880
   140008925:	mov    QWORD PTR [rbx+0x48],rax
   140008929:	mov    rax,rbx
   14000892c:	add    rsp,0x20
   140008930:	pop    rbx
   140008931:	ret    
   140008932:	int3   
   140008933:	int3   
   140008934:	int3   
   140008935:	int3   
   140008936:	int3   
   140008937:	int3   
   140008938:	int3   
   140008939:	int3   
   14000893a:	int3   
   14000893b:	int3   
   14000893c:	int3   
   14000893d:	int3   
   14000893e:	int3   
   14000893f:	int3   
   140008940:	rex push rbx
   140008942:	sub    rsp,0x20
   140008946:	mov    rbx,rdx
   140008949:	mov    rdx,rcx
   14000894c:	mov    rcx,rbx
   14000894f:	call   0x140008700
   140008954:	mov    rax,rbx
   140008957:	add    rsp,0x20
   14000895b:	pop    rbx
   14000895c:	ret    
   14000895d:	int3   
   14000895e:	int3   
   14000895f:	int3   
   140008960:	mov    QWORD PTR [rsp+0x8],rbx
   140008965:	push   rdi
   140008966:	sub    rsp,0x20
   14000896a:	mov    rax,QWORD PTR [rcx]
   14000896d:	mov    rdi,r8
   140008970:	mov    rbx,rcx
   140008973:	mov    r9d,DWORD PTR [rax]
   140008976:	cmp    r9d,0x1
   14000897a:	je     0x1400089c7
   14000897c:	test   r9d,r9d
   14000897f:	je     0x1400089c7
   140008981:	mov    r8d,0x1
   140008987:	call   0x140008780
   14000898c:	mov    ecx,0x78
   140008991:	mov    rbx,rax
   140008994:	call   0x14002952a
   140008999:	test   rax,rax
   14000899c:	je     0x1400089b7
   14000899e:	mov    rdx,rdi
   1400089a1:	mov    rcx,rax
   1400089a4:	call   0x1400020d0
   1400089a9:	mov    QWORD PTR [rbx],rax
   1400089ac:	mov    rbx,QWORD PTR [rsp+0x30]
   1400089b1:	add    rsp,0x20
   1400089b5:	pop    rdi
   1400089b6:	ret    
   1400089b7:	xor    eax,eax
   1400089b9:	mov    QWORD PTR [rbx],rax
   1400089bc:	mov    rbx,QWORD PTR [rsp+0x30]
   1400089c1:	add    rsp,0x20
   1400089c5:	pop    rdi
   1400089c6:	ret    
   1400089c7:	call   QWORD PTR [rip+0x2291b]        # 0x14002b2e8
   1400089cd:	mov    r8,rdi
   1400089d0:	mov    rcx,rbx
   1400089d3:	mov    rdx,rax
   1400089d6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400089db:	add    rsp,0x20
   1400089df:	pop    rdi
   1400089e0:	jmp    0x1400084d0
   1400089e5:	int3   
   1400089e6:	int3   
   1400089e7:	int3   
   1400089e8:	int3   
   1400089e9:	int3   
   1400089ea:	int3   
   1400089eb:	int3   
   1400089ec:	int3   
   1400089ed:	int3   
   1400089ee:	int3   
   1400089ef:	int3   
   1400089f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400089f5:	mov    QWORD PTR [rsp+0x10],rsi
   1400089fa:	push   rdi
   1400089fb:	sub    rsp,0x20
   1400089ff:	mov    rax,QWORD PTR [rcx]
   140008a02:	mov    rsi,rdx
   140008a05:	mov    rbx,rcx
   140008a08:	mov    edi,DWORD PTR [rax+0xc]
   140008a0b:	sub    edi,DWORD PTR [rax+0x8]
   140008a0e:	cmp    BYTE PTR [rcx+0x30],0x0
   140008a12:	je     0x140008a1e
   140008a14:	mov    r8,rdx
   140008a17:	mov    edx,edi
   140008a19:	call   0x140006960
   140008a1e:	mov    r8,rsi
   140008a21:	mov    edx,edi
   140008a23:	mov    rcx,rbx
   140008a26:	mov    rbx,QWORD PTR [rsp+0x30]
   140008a2b:	mov    rsi,QWORD PTR [rsp+0x38]
   140008a30:	add    rsp,0x20
   140008a34:	pop    rdi
   140008a35:	jmp    0x140008960
   140008a3a:	int3   
   140008a3b:	int3   
   140008a3c:	int3   
   140008a3d:	int3   
   140008a3e:	int3   
   140008a3f:	int3   
   140008a40:	mov    QWORD PTR [rsp+0x10],rdx
   140008a45:	mov    QWORD PTR [rsp+0x8],rcx
   140008a4a:	push   rbx
   140008a4b:	push   rbp
   140008a4c:	sub    rsp,0xa8
   140008a53:	mov    eax,DWORD PTR [rdx+0x60]
   140008a56:	xor    ebx,ebx
   140008a58:	mov    r9,rdx
   140008a5b:	mov    rbp,rcx
   140008a5e:	mov    DWORD PTR [rsp+0xd0],ebx
   140008a65:	mov    DWORD PTR [rsp+0x28],eax
   140008a69:	test   eax,eax
   140008a6b:	jns    0x140008aa4
   140008a6d:	mov    rax,QWORD PTR [rcx]
   140008a70:	mov    ebx,DWORD PTR [rax+0xc]
   140008a73:	sub    ebx,DWORD PTR [rax+0x8]
   140008a76:	cmp    BYTE PTR [rcx+0x30],0x0
   140008a7a:	je     0x140008a8e
   140008a7c:	mov    r8,rdx
   140008a7f:	mov    edx,ebx
   140008a81:	call   0x140006960
   140008a86:	mov    r9,QWORD PTR [rsp+0xc8]
   140008a8e:	mov    r8,r9
   140008a91:	mov    edx,ebx
   140008a93:	mov    rcx,rbp
   140008a96:	add    rsp,0xa8
   140008a9d:	pop    rbp
   140008a9e:	pop    rbx
   140008a9f:	jmp    0x140008960
   140008aa4:	mov    rdx,QWORD PTR [rbp+0x0]
   140008aa8:	mov    QWORD PTR [rsp+0xa0],rsi
   140008ab0:	mov    QWORD PTR [rsp+0x98],rdi
   140008ab8:	mov    QWORD PTR [rsp+0x90],r12
   140008ac0:	mov    QWORD PTR [rsp+0x88],r13
   140008ac8:	mov    QWORD PTR [rsp+0x80],r14
   140008ad0:	xor    esi,esi
   140008ad2:	xor    r13d,r13d
   140008ad5:	xor    ecx,ecx
   140008ad7:	xor    r12d,r12d
   140008ada:	mov    QWORD PTR [rsp+0x30],rdx
   140008adf:	mov    eax,DWORD PTR [rdx]
   140008ae1:	mov    QWORD PTR [rsp+0x78],r15
   140008ae6:	xor    edi,edi
   140008ae8:	xor    r14d,r14d
   140008aeb:	xor    r15d,r15d
   140008aee:	mov    DWORD PTR [rsp+0x20],esi
   140008af2:	mov    DWORD PTR [rsp+0xd8],r13d
   140008afa:	mov    DWORD PTR [rsp+0x24],ecx
   140008afe:	mov    DWORD PTR [rsp+0xd0],r12d
   140008b06:	test   eax,eax
   140008b08:	je     0x140008b21
   140008b0a:	cmp    eax,0xffffffff
   140008b0d:	je     0x140008bb3
   140008b13:	lock add DWORD PTR [rdx],0x1
   140008b17:	mov    rdx,QWORD PTR [rsp+0x30]
   140008b1c:	jmp    0x140008bb3
   140008b21:	mov    edx,DWORD PTR [rdx+0x4]
   140008b24:	lea    rcx,[rsp+0x30]
   140008b29:	call   QWORD PTR [rip+0x22d29]        # 0x14002b858
   140008b2f:	mov    rdx,QWORD PTR [rsp+0x30]
   140008b34:	mov    rcx,QWORD PTR [rbp+0x0]
   140008b38:	movsxd rax,DWORD PTR [rdx+0xc]
   140008b3c:	lea    r13,[rdx+rax*8+0x10]
   140008b41:	movsxd rax,DWORD PTR [rcx+0x8]
   140008b45:	lea    r12,[rcx+rax*8+0x10]
   140008b4a:	movsxd rax,DWORD PTR [rdx+0x8]
   140008b4e:	lea    rbp,[rdx+rax*8+0x10]
   140008b53:	cmp    rbp,r13
   140008b56:	je     0x140008ba5
   140008b58:	nop    DWORD PTR [rax+rax*1+0x0]
   140008b60:	mov    ecx,0x78
   140008b65:	call   0x14002952a
   140008b6a:	test   rax,rax
   140008b6d:	je     0x140008b7d
   140008b6f:	mov    rdx,QWORD PTR [r12]
   140008b73:	mov    rcx,rax
   140008b76:	call   0x1400020d0
   140008b7b:	jmp    0x140008b7f
   140008b7d:	xor    eax,eax
   140008b7f:	mov    QWORD PTR [rbp+0x0],rax
   140008b83:	add    rbp,0x8
   140008b87:	add    r12,0x8
   140008b8b:	cmp    rbp,r13
   140008b8e:	jne    0x140008b60
   140008b90:	mov    rdx,QWORD PTR [rsp+0x30]
   140008b95:	mov    r9,QWORD PTR [rsp+0xc8]
   140008b9d:	mov    r12d,ebx
   140008ba0:	mov    r13d,ebx
   140008ba3:	jmp    0x140008bb3
   140008ba5:	mov    r9,QWORD PTR [rsp+0xc8]
   140008bad:	mov    r12d,ebx
   140008bb0:	mov    r13d,ebx
   140008bb3:	mov    DWORD PTR [rsp+0x38],ebx
   140008bb7:	movsxd rax,DWORD PTR [rdx+0x8]
   140008bbb:	lea    rcx,[rdx+rax*8+0x10]
   140008bc0:	mov    QWORD PTR [rsp+0x40],rcx
   140008bc5:	movsxd rax,DWORD PTR [rdx+0xc]
   140008bc9:	lea    r8,[rdx+rax*8+0x10]
   140008bce:	mov    QWORD PTR [rsp+0x48],r8
   140008bd3:	mov    eax,0x1
   140008bd8:	mov    DWORD PTR [rsp+0x38],eax
   140008bdc:	cmp    rcx,r8
   140008bdf:	je     0x140008d7a
   140008be5:	mov    rbp,QWORD PTR [rcx]
   140008be8:	mov    QWORD PTR [rsp+0xd0],rbp
   140008bf0:	test   eax,eax
   140008bf2:	je     0x140008d52
   140008bf8:	lea    rdx,[r9+0x58]
   140008bfc:	lea    rcx,[rsp+0x58]
   140008c01:	or     ebx,0x3
   140008c04:	call   QWORD PTR [rip+0x22c96]        # 0x14002b8a0
   140008c0a:	lea    rdx,[rbp+0x58]
   140008c0e:	lea    rcx,[rsp+0x60]
   140008c13:	call   QWORD PTR [rip+0x22c87]        # 0x14002b8a0
   140008c19:	lea    rdx,[rsp+0x58]
   140008c1e:	lea    rcx,[rsp+0x60]
   140008c23:	call   QWORD PTR [rip+0x2266f]        # 0x14002b298
   140008c29:	test   al,al
   140008c2b:	je     0x140008c6f
   140008c2d:	mov    rdx,QWORD PTR [rsp+0xc8]
   140008c35:	lea    rcx,[rsp+0x68]
   140008c3a:	or     ebx,0xc
   140008c3d:	add    rdx,0x8
   140008c41:	call   QWORD PTR [rip+0x22c59]        # 0x14002b8a0
   140008c47:	lea    rdx,[rbp+0x8]
   140008c4b:	lea    rcx,[rsp+0x50]
   140008c50:	call   QWORD PTR [rip+0x22c4a]        # 0x14002b8a0
   140008c56:	lea    rdx,[rsp+0x68]
   140008c5b:	lea    rcx,[rsp+0x50]
   140008c60:	call   QWORD PTR [rip+0x22632]        # 0x14002b298
   140008c66:	test   al,al
   140008c68:	je     0x140008c6f
   140008c6a:	mov    bpl,0x1
   140008c6d:	jmp    0x140008c72
   140008c6f:	xor    bpl,bpl
   140008c72:	test   bl,0x8
   140008c75:	je     0x140008c85
   140008c77:	lea    rcx,[rsp+0x50]
   140008c7c:	and    ebx,0xfffffff7
   140008c7f:	call   QWORD PTR [rip+0x22c13]        # 0x14002b898
   140008c85:	test   bl,0x4
   140008c88:	je     0x140008c98
   140008c8a:	lea    rcx,[rsp+0x68]
   140008c8f:	and    ebx,0xfffffffb
   140008c92:	call   QWORD PTR [rip+0x22c00]        # 0x14002b898
   140008c98:	test   bl,0x2
   140008c9b:	je     0x140008cab
   140008c9d:	lea    rcx,[rsp+0x60]
   140008ca2:	and    ebx,0xfffffffd
   140008ca5:	call   QWORD PTR [rip+0x22bed]        # 0x14002b898
   140008cab:	test   bl,0x1
   140008cae:	je     0x140008cbe
   140008cb0:	lea    rcx,[rsp+0x58]
   140008cb5:	and    ebx,0xfffffffe
   140008cb8:	call   QWORD PTR [rip+0x22bda]        # 0x14002b898
   140008cbe:	test   bpl,bpl
   140008cc1:	je     0x140008cf6
   140008cc3:	mov    rax,QWORD PTR [rsp+0xd0]
   140008ccb:	mov    eax,DWORD PTR [rax+0x60]
   140008cce:	cmp    eax,r14d
   140008cd1:	jl     0x140008cf6
   140008cd3:	mov    r9d,DWORD PTR [rsp+0x28]
   140008cd8:	cmp    r9d,r14d
   140008cdb:	jl     0x140008cef
   140008cdd:	cmp    r9d,eax
   140008ce0:	jge    0x140008cef
   140008ce2:	xor    edi,edi
   140008ce4:	test   esi,esi
   140008ce6:	mov    r12d,r15d
   140008ce9:	setne  dil
   140008ced:	inc    edi
   140008cef:	inc    esi
   140008cf1:	mov    r14d,eax
   140008cf4:	jmp    0x140008d30
   140008cf6:	test   esi,esi
   140008cf8:	je     0x140008d30
   140008cfa:	test   edi,edi
   140008cfc:	jne    0x140008d06
   140008cfe:	mov    r12d,r15d
   140008d01:	mov    edi,0x1
   140008d06:	cmp    edi,r13d
   140008d09:	jg     0x140008d16
   140008d0b:	cmp    edi,r13d
   140008d0e:	jne    0x140008d22
   140008d10:	cmp    esi,DWORD PTR [rsp+0x24]
   140008d14:	jle    0x140008d22
   140008d16:	mov    DWORD PTR [rsp+0x20],r12d
   140008d1b:	mov    r13d,edi
   140008d1e:	mov    DWORD PTR [rsp+0x24],esi
   140008d22:	xor    esi,esi
   140008d24:	xor    edi,edi
   140008d26:	test   bpl,bpl
   140008d29:	setne  sil
   140008d2d:	xor    r14d,r14d
   140008d30:	mov    eax,DWORD PTR [rsp+0x38]
   140008d34:	mov    rbp,QWORD PTR [rsp+0xd0]
   140008d3c:	mov    r9,QWORD PTR [rsp+0xc8]
   140008d44:	inc    r15d
   140008d47:	dec    eax
   140008d49:	mov    DWORD PTR [rsp+0x38],eax
   140008d4d:	jmp    0x140008bf0
   140008d52:	mov    rcx,QWORD PTR [rsp+0x40]
   140008d57:	mov    r8,QWORD PTR [rsp+0x48]
   140008d5c:	mov    DWORD PTR [rsp+0xd8],r13d
   140008d64:	add    rcx,0x8
   140008d68:	mov    DWORD PTR [rsp+0xd0],r12d
   140008d70:	mov    QWORD PTR [rsp+0x40],rcx
   140008d75:	jmp    0x140008bd3
   140008d7a:	mov    r12,QWORD PTR [rsp+0x30]
   140008d7f:	mov    r14,QWORD PTR [rsp+0x80]
   140008d87:	mov    eax,DWORD PTR [r12]
   140008d8b:	test   eax,eax
   140008d8d:	je     0x140008da6
   140008d8f:	cmp    eax,0xffffffff
   140008d92:	je     0x140008deb
   140008d94:	lock add DWORD PTR [r12],0xffffffff
   140008d9a:	setne  al
   140008d9d:	test   al,al
   140008d9f:	jne    0x140008deb
   140008da1:	mov    r12,QWORD PTR [rsp+0x30]
   140008da6:	movsxd rax,DWORD PTR [r12+0xc]
   140008dab:	lea    rbx,[r12+rax*8+0x10]
   140008db0:	movsxd rax,DWORD PTR [r12+0x8]
   140008db5:	lea    r13,[r12+rax*8+0x10]
   140008dba:	cmp    r13,rbx
   140008dbd:	je     0x140008de2
   140008dbf:	nop
   140008dc0:	mov    rbp,QWORD PTR [rbx-0x8]
   140008dc4:	sub    rbx,0x8
   140008dc8:	test   rbp,rbp
   140008dcb:	je     0x140008ddd
   140008dcd:	mov    rcx,rbp
   140008dd0:	call   0x140001ea0
   140008dd5:	mov    rcx,rbp
   140008dd8:	call   0x140029524
   140008ddd:	cmp    rbx,r13
   140008de0:	jne    0x140008dc0
   140008de2:	mov    rcx,r12
   140008de5:	call   QWORD PTR [rip+0x22a85]        # 0x14002b870
   140008deb:	mov    r13,QWORD PTR [rsp+0x88]
   140008df3:	mov    r12,QWORD PTR [rsp+0x90]
   140008dfb:	test   esi,esi
   140008dfd:	je     0x140008e14
   140008dff:	test   edi,edi
   140008e01:	jne    0x140008e0a
   140008e03:	mov    edi,0x1
   140008e08:	jmp    0x140008e1c
   140008e0a:	mov    r15d,DWORD PTR [rsp+0xd0]
   140008e12:	jmp    0x140008e1c
   140008e14:	mov    r15d,DWORD PTR [rsp+0xd0]
   140008e1c:	mov    eax,DWORD PTR [rsp+0xd8]
   140008e23:	cmp    edi,eax
   140008e25:	jg     0x140008eb4
   140008e2b:	cmp    edi,eax
   140008e2d:	jne    0x140008e3b
   140008e2f:	mov    ecx,DWORD PTR [rsp+0x24]
   140008e33:	cmp    esi,ecx
   140008e35:	jg     0x140008eb4
   140008e3b:	test   eax,eax
   140008e3d:	je     0x140008e87
   140008e3f:	mov    rdi,QWORD PTR [rsp+0xc0]
   140008e47:	cmp    BYTE PTR [rdi+0x30],0x0
   140008e4b:	je     0x140008e7f
   140008e4d:	mov    rax,QWORD PTR [rdi]
   140008e50:	mov    esi,DWORD PTR [rsp+0x20]
   140008e54:	mov    ecx,DWORD PTR [rax+0xc]
   140008e57:	sub    ecx,DWORD PTR [rax+0x8]
   140008e5a:	cmp    esi,ecx
   140008e5c:	jne    0x140008e77
   140008e5e:	mov    r8,QWORD PTR [rsp+0xc8]
   140008e66:	mov    edx,esi
   140008e68:	mov    rcx,rdi
   140008e6b:	call   0x140006960
   140008e70:	mov    edx,esi
   140008e72:	jmp    0x140008eec
   140008e77:	mov    BYTE PTR [rdi+0x30],0x0
   140008e7b:	mov    edx,esi
   140008e7d:	jmp    0x140008eec
   140008e7f:	mov    esi,DWORD PTR [rsp+0x20]
   140008e83:	mov    edx,esi
   140008e85:	jmp    0x140008eec
   140008e87:	mov    rdi,QWORD PTR [rsp+0xc0]
   140008e8f:	mov    rax,QWORD PTR [rdi]
   140008e92:	mov    ebx,DWORD PTR [rax+0xc]
   140008e95:	sub    ebx,DWORD PTR [rax+0x8]
   140008e98:	cmp    BYTE PTR [rdi+0x30],0x0
   140008e9c:	je     0x140008eb0
   140008e9e:	mov    r8,QWORD PTR [rsp+0xc8]
   140008ea6:	mov    edx,ebx
   140008ea8:	mov    rcx,rdi
   140008eab:	call   0x140006960
   140008eb0:	mov    edx,ebx
   140008eb2:	jmp    0x140008eec
   140008eb4:	mov    rdi,QWORD PTR [rsp+0xc0]
   140008ebc:	cmp    BYTE PTR [rdi+0x30],0x0
   140008ec0:	je     0x140008ee9
   140008ec2:	mov    rax,QWORD PTR [rdi]
   140008ec5:	mov    ecx,DWORD PTR [rax+0xc]
   140008ec8:	sub    ecx,DWORD PTR [rax+0x8]
   140008ecb:	cmp    r15d,ecx
   140008ece:	jne    0x140008ee5
   140008ed0:	mov    r8,QWORD PTR [rsp+0xc8]
   140008ed8:	mov    edx,r15d
   140008edb:	mov    rcx,rdi
   140008ede:	call   0x140006960
   140008ee3:	jmp    0x140008ee9
   140008ee5:	mov    BYTE PTR [rdi+0x30],0x0
   140008ee9:	mov    edx,r15d
   140008eec:	mov    r8,QWORD PTR [rsp+0xc8]
   140008ef4:	mov    rcx,rdi
   140008ef7:	call   0x140008960
   140008efc:	mov    rdi,QWORD PTR [rsp+0x98]
   140008f04:	mov    rsi,QWORD PTR [rsp+0xa0]
   140008f0c:	mov    r15,QWORD PTR [rsp+0x78]
   140008f11:	add    rsp,0xa8
   140008f18:	pop    rbp
   140008f19:	pop    rbx
   140008f1a:	ret    
   140008f1b:	int3   
   140008f1c:	int3   
   140008f1d:	int3   
   140008f1e:	int3   
   140008f1f:	int3   
   140008f20:	mov    QWORD PTR [rsp+0x8],rbx
   140008f25:	mov    QWORD PTR [rsp+0x10],rsi
   140008f2a:	push   rdi
   140008f2b:	sub    rsp,0x20
   140008f2f:	mov    rdi,rdx
   140008f32:	mov    rbx,rcx
   140008f35:	call   0x140007ed0
   140008f3a:	movsxd rsi,eax
   140008f3d:	mov    rcx,rbx
   140008f40:	cmp    esi,0xffffffff
   140008f43:	jne    0x140008f5c
   140008f45:	mov    rdx,rdi
   140008f48:	mov    rbx,QWORD PTR [rsp+0x30]
   140008f4d:	mov    rsi,QWORD PTR [rsp+0x38]
   140008f52:	add    rsp,0x20
   140008f56:	pop    rdi
   140008f57:	jmp    0x140008a40
   140008f5c:	mov    edx,esi
   140008f5e:	call   0x140006ab0
   140008f63:	mov    r11,QWORD PTR [rbx]
   140008f66:	mov    eax,DWORD PTR [r11]
   140008f69:	cmp    eax,0x1
   140008f6c:	je     0x140008f7e
   140008f6e:	test   eax,eax
   140008f70:	je     0x140008f7e
   140008f72:	mov    edx,DWORD PTR [r11+0x4]
   140008f76:	mov    rcx,rbx
   140008f79:	call   0x140002770
   140008f7e:	mov    r8,QWORD PTR [rbx]
   140008f81:	mov    rdx,rdi
   140008f84:	movsxd rcx,DWORD PTR [r8+0x8]
   140008f88:	add    rcx,rsi
   140008f8b:	mov    rcx,QWORD PTR [r8+rcx*8+0x10]
   140008f90:	call   0x140005de0
   140008f95:	mov    r8,rdi
   140008f98:	mov    edx,esi
   140008f9a:	mov    rcx,rbx
   140008f9d:	mov    rbx,QWORD PTR [rsp+0x30]
   140008fa2:	mov    rsi,QWORD PTR [rsp+0x38]
   140008fa7:	add    rsp,0x20
   140008fab:	pop    rdi
   140008fac:	jmp    0x140006960
   140008fb1:	int3   
   140008fb2:	int3   
   140008fb3:	int3   
   140008fb4:	int3   
   140008fb5:	int3   
   140008fb6:	int3   
   140008fb7:	int3   
   140008fb8:	int3   
   140008fb9:	int3   
   140008fba:	int3   
   140008fbb:	int3   
   140008fbc:	int3   
   140008fbd:	int3   
   140008fbe:	int3   
   140008fbf:	int3   
   140008fc0:	mov    r11,rsp
   140008fc3:	mov    QWORD PTR [r11+0x10],rdx
   140008fc7:	mov    QWORD PTR [r11+0x8],rcx
   140008fcb:	push   rbp
   140008fcc:	push   rdi
   140008fcd:	sub    rsp,0xf8
   140008fd4:	mov    rax,QWORD PTR [rip+0x228a5]        # 0x14002b880
   140008fdb:	mov    QWORD PTR [r11-0x18],rbx
   140008fdf:	mov    QWORD PTR [r11-0x28],r12
   140008fe3:	mov    QWORD PTR [rdx],rax
   140008fe6:	mov    rax,QWORD PTR [rip+0x22893]        # 0x14002b880
   140008fed:	mov    QWORD PTR [r11-0x30],r13
   140008ff1:	mov    r13,rcx
   140008ff4:	mov    QWORD PTR [rdx+0x8],rax
   140008ff8:	mov    rbx,QWORD PTR [rip+0x22881]        # 0x14002b880
   140008fff:	mov    rax,QWORD PTR [r13+0x0]
   140009003:	lea    rcx,[rdx+0x8]
   140009007:	mov    QWORD PTR [rsp+0x38],rbx
   14000900c:	mov    QWORD PTR [rsp+0xb0],rcx
   140009014:	mov    ecx,DWORD PTR [rax+0xc]
   140009017:	xor    r12d,r12d
   14000901a:	sub    ecx,DWORD PTR [rax+0x8]
   14000901d:	mov    QWORD PTR [r11-0x40],r15
   140009021:	xor    r15d,r15d
   140009024:	or     ebp,0xffffffff
   140009027:	mov    DWORD PTR [rsp+0x120],r15d
   14000902f:	mov    rdi,rdx
   140009032:	mov    QWORD PTR [rsp+0x30],rbx
   140009037:	mov    QWORD PTR [rsp+0x48],r12
   14000903c:	mov    DWORD PTR [rsp+0x120],r15d
   140009044:	test   ecx,ecx
   140009046:	jle    0x1400098c1
   14000904c:	mov    QWORD PTR [r11-0x20],rsi
   140009050:	mov    QWORD PTR [r11-0x38],r14
   140009054:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140009060:	mov    rcx,QWORD PTR [r13+0x0]
   140009064:	movsxd rax,DWORD PTR [rcx+0x8]
   140009068:	add    rax,r12
   14000906b:	mov    r14,QWORD PTR [rcx+rax*8+0x10]
   140009070:	lea    rcx,[rsp+0xa0]
   140009078:	mov    rdx,r14
   14000907b:	call   QWORD PTR [rip+0x2281f]        # 0x14002b8a0
   140009081:	mov    r11,QWORD PTR [rsp+0xa0]
   140009089:	lea    rcx,[rsp+0xa0]
   140009091:	cmp    DWORD PTR [r11+0x4],0x0
   140009096:	setne  dil
   14000909a:	call   QWORD PTR [rip+0x227f8]        # 0x14002b898
   1400090a0:	test   dil,dil
   1400090a3:	je     0x1400091c9
   1400090a9:	mov    rcx,QWORD PTR [rsp+0x38]
   1400090ae:	xor    ebp,ebp
   1400090b0:	cmp    DWORD PTR [rcx+0x20],ebp
   1400090b3:	je     0x1400090f0
   1400090b5:	mov    edi,DWORD PTR [rcx+0x24]
   1400090b8:	lea    rcx,[rsp+0x90]
   1400090c0:	mov    rdx,r14
   1400090c3:	call   QWORD PTR [rip+0x227d7]        # 0x14002b8a0
   1400090c9:	lea    rcx,[rsp+0x90]
   1400090d1:	xor    edx,edx
   1400090d3:	call   QWORD PTR [rip+0x221cf]        # 0x14002b2a8
   1400090d9:	lea    rcx,[rsp+0x90]
   1400090e1:	mov    ebp,eax
   1400090e3:	call   QWORD PTR [rip+0x227af]        # 0x14002b898
   1400090e9:	mov    rcx,QWORD PTR [rsp+0x38]
   1400090ee:	xor    ebp,edi
   1400090f0:	mov    r8d,DWORD PTR [rcx+0x20]
   1400090f4:	test   r8d,r8d
   1400090f7:	je     0x14000917e
   1400090fd:	xor    edx,edx
   1400090ff:	mov    eax,ebp
   140009101:	div    r8d
   140009104:	mov    rax,QWORD PTR [rcx+0x8]
   140009108:	lea    rsi,[rax+rdx*8]
   14000910c:	mov    rax,QWORD PTR [rax+rdx*8]
   140009110:	cmp    rax,rcx
   140009113:	je     0x140009183
   140009115:	cmp    ebp,DWORD PTR [rax+0x8]
   140009118:	jne    0x14000916a
   14000911a:	mov    rdx,QWORD PTR [rax+0x10]
   14000911e:	lea    rcx,[rsp+0x58]
   140009123:	call   QWORD PTR [rip+0x22777]        # 0x14002b8a0
   140009129:	lea    rcx,[rsp+0x70]
   14000912e:	mov    rdx,r14
   140009131:	call   QWORD PTR [rip+0x22769]        # 0x14002b8a0
   140009137:	lea    rdx,[rsp+0x58]
   14000913c:	lea    rcx,[rsp+0x70]
   140009141:	call   QWORD PTR [rip+0x22151]        # 0x14002b298
   140009147:	lea    rcx,[rsp+0x70]
   14000914c:	movzx  edi,al
   14000914f:	call   QWORD PTR [rip+0x22743]        # 0x14002b898
   140009155:	lea    rcx,[rsp+0x58]
   14000915a:	call   QWORD PTR [rip+0x22738]        # 0x14002b898
   140009160:	test   dil,dil
   140009163:	jne    0x140009177
   140009165:	mov    rcx,QWORD PTR [rsp+0x38]
   14000916a:	mov    rsi,QWORD PTR [rsi]
   14000916d:	mov    rax,QWORD PTR [rsi]
   140009170:	cmp    rax,rcx
   140009173:	jne    0x140009115
   140009175:	jmp    0x140009183
   140009177:	mov    rcx,QWORD PTR [rsp+0x38]
   14000917c:	jmp    0x140009183
   14000917e:	lea    rsi,[rsp+0x38]
   140009183:	mov    rax,QWORD PTR [rsi]
   140009186:	cmp    rax,rcx
   140009189:	je     0x1400091c6
   14000918b:	mov    rcx,QWORD PTR [r13+0x0]
   14000918f:	movsxd r12,DWORD PTR [rax+0x18]
   140009193:	mov    eax,DWORD PTR [rcx]
   140009195:	cmp    eax,0x1
   140009198:	je     0x1400091a9
   14000919a:	test   eax,eax
   14000919c:	je     0x1400091a9
   14000919e:	mov    edx,DWORD PTR [rcx+0x4]
   1400091a1:	mov    rcx,r13
   1400091a4:	call   0x140002770
   1400091a9:	mov    rdx,QWORD PTR [r13+0x0]
   1400091ad:	mov    rsi,QWORD PTR [rsp+0x118]
   1400091b5:	movsxd rcx,DWORD PTR [rdx+0x8]
   1400091b9:	add    rcx,r12
   1400091bc:	mov    r13,QWORD PTR [rdx+rcx*8+0x10]
   1400091c1:	jmp    0x1400093a9
   1400091c6:	or     ebp,0xffffffff
   1400091c9:	xor    esi,esi
   1400091cb:	cmp    DWORD PTR [rbx+0x20],esi
   1400091ce:	je     0x1400091df
   1400091d0:	mov    edi,DWORD PTR [rbx+0x24]
   1400091d3:	mov    rcx,r14
   1400091d6:	call   0x140004f90
   1400091db:	mov    esi,eax
   1400091dd:	xor    esi,edi
   1400091df:	mov    ecx,DWORD PTR [rbx+0x20]
   1400091e2:	test   ecx,ecx
   1400091e4:	je     0x140009222
   1400091e6:	xor    edx,edx
   1400091e8:	mov    eax,esi
   1400091ea:	div    ecx
   1400091ec:	mov    rcx,QWORD PTR [rbx+0x8]
   1400091f0:	mov    rax,QWORD PTR [rcx+rdx*8]
   1400091f4:	lea    rdi,[rcx+rdx*8]
   1400091f8:	cmp    rax,rbx
   1400091fb:	je     0x140009227
   1400091fd:	nop    DWORD PTR [rax]
   140009200:	cmp    esi,DWORD PTR [rax+0x8]
   140009203:	jne    0x140009215
   140009205:	mov    rdx,QWORD PTR [rax+0x10]
   140009209:	mov    rcx,r14
   14000920c:	call   0x140005070
   140009211:	test   al,al
   140009213:	jne    0x140009227
   140009215:	mov    rdi,QWORD PTR [rdi]
   140009218:	mov    rax,QWORD PTR [rdi]
   14000921b:	cmp    rax,rbx
   14000921e:	jne    0x140009200
   140009220:	jmp    0x140009227
   140009222:	lea    rdi,[rsp+0x30]
   140009227:	mov    rax,QWORD PTR [rdi]
   14000922a:	cmp    rax,rbx
   14000922d:	je     0x140009682
   140009233:	mov    rcx,QWORD PTR [r13+0x0]
   140009237:	movsxd r12,DWORD PTR [rax+0x18]
   14000923b:	mov    eax,DWORD PTR [rcx]
   14000923d:	cmp    eax,0x1
   140009240:	je     0x140009251
   140009242:	test   eax,eax
   140009244:	je     0x140009251
   140009246:	mov    edx,DWORD PTR [rcx+0x4]
   140009249:	mov    rcx,r13
   14000924c:	call   0x140002770
   140009251:	mov    rdx,QWORD PTR [r13+0x0]
   140009255:	or     r15d,0x1
   140009259:	movsxd rcx,DWORD PTR [rdx+0x8]
   14000925d:	add    rcx,r12
   140009260:	mov    r13,QWORD PTR [rdx+rcx*8+0x10]
   140009265:	lea    rcx,[rsp+0x98]
   14000926d:	mov    rdx,r14
   140009270:	call   QWORD PTR [rip+0x2262a]        # 0x14002b8a0
   140009276:	mov    r11,QWORD PTR [rsp+0x98]
   14000927e:	cmp    DWORD PTR [r11+0x4],0x0
   140009283:	je     0x1400092ae
   140009285:	lea    rcx,[rsp+0x80]
   14000928d:	mov    rdx,r13
   140009290:	or     r15d,0x2
   140009294:	call   QWORD PTR [rip+0x22606]        # 0x14002b8a0
   14000929a:	mov    r11,QWORD PTR [rsp+0x80]
   1400092a2:	cmp    DWORD PTR [r11+0x4],0x0
   1400092a7:	je     0x1400092ae
   1400092a9:	xor    dil,dil
   1400092ac:	jmp    0x1400092b1
   1400092ae:	mov    dil,0x1
   1400092b1:	test   r15b,0x2
   1400092b5:	je     0x1400092c9
   1400092b7:	lea    rcx,[rsp+0x80]
   1400092bf:	and    r15d,0xfffffffd
   1400092c3:	call   QWORD PTR [rip+0x225cf]        # 0x14002b898
   1400092c9:	test   r15b,0x1
   1400092cd:	je     0x1400092e1
   1400092cf:	lea    rcx,[rsp+0x98]
   1400092d7:	and    r15d,0xfffffffe
   1400092db:	call   QWORD PTR [rip+0x225b7]        # 0x14002b898
   1400092e1:	test   dil,dil
   1400092e4:	je     0x140009675
   1400092ea:	lea    rcx,[rsp+0x68]
   1400092ef:	mov    rdx,r14
   1400092f2:	or     r15d,0x4
   1400092f6:	call   QWORD PTR [rip+0x225a4]        # 0x14002b8a0
   1400092fc:	mov    r11,QWORD PTR [rsp+0x68]
   140009301:	cmp    DWORD PTR [r11+0x4],0x0
   140009306:	je     0x14000932b
   140009308:	lea    rcx,[rsp+0x60]
   14000930d:	mov    rdx,r13
   140009310:	or     r15d,0x8
   140009314:	call   QWORD PTR [rip+0x22586]        # 0x14002b8a0
   14000931a:	mov    r11,QWORD PTR [rsp+0x60]
   14000931f:	cmp    DWORD PTR [r11+0x4],0x0
   140009324:	jne    0x14000932b
   140009326:	mov    dil,0x1
   140009329:	jmp    0x14000932e
   14000932b:	xor    dil,dil
   14000932e:	test   r15b,0x8
   140009332:	je     0x140009343
   140009334:	lea    rcx,[rsp+0x60]
   140009339:	and    r15d,0xfffffff7
   14000933d:	call   QWORD PTR [rip+0x22555]        # 0x14002b898
   140009343:	test   r15b,0x4
   140009347:	je     0x140009358
   140009349:	lea    rcx,[rsp+0x68]
   14000934e:	and    r15d,0xfffffffb
   140009352:	call   QWORD PTR [rip+0x22540]        # 0x14002b898
   140009358:	test   dil,dil
   14000935b:	je     0x1400093a1
   14000935d:	lea    rcx,[rsp+0x78]
   140009362:	mov    rdx,r14
   140009365:	call   QWORD PTR [rip+0x22535]        # 0x14002b8a0
   14000936b:	lea    rdx,[rsp+0x78]
   140009370:	mov    rcx,r13
   140009373:	call   QWORD PTR [rip+0x22537]        # 0x14002b8b0
   140009379:	lea    rcx,[rsp+0x78]
   14000937e:	call   QWORD PTR [rip+0x22514]        # 0x14002b898
   140009384:	lea    rdx,[rsp+0xa8]
   14000938c:	lea    rcx,[rsp+0x38]
   140009391:	mov    QWORD PTR [rsp+0xa8],r13
   140009399:	call   0x140006640
   14000939e:	mov    DWORD PTR [rax],r12d
   1400093a1:	mov    rsi,QWORD PTR [rsp+0xb0]
   1400093a9:	mov    rcx,QWORD PTR [rsi]
   1400093ac:	mov    eax,DWORD PTR [rcx+0x10]
   1400093af:	cmp    eax,0x1
   1400093b2:	je     0x140009410
   1400093b4:	test   eax,eax
   1400093b6:	je     0x140009410
   1400093b8:	lea    r8,[rip+0xffffffffffff7ec1]        # 0x140001280
   1400093bf:	lea    rdx,[rip+0xffffffffffffbf4a]        # 0x140005310
   1400093c6:	mov    r9d,0x10
   1400093cc:	mov    DWORD PTR [rsp+0x20],0x8
   1400093d4:	call   QWORD PTR [rip+0x2246e]        # 0x14002b848
   1400093da:	mov    rdx,QWORD PTR [rsi]
   1400093dd:	mov    ecx,DWORD PTR [rdx+0x10]
   1400093e0:	mov    rdi,rax
   1400093e3:	test   ecx,ecx
   1400093e5:	je     0x1400093fd
   1400093e7:	cmp    ecx,0xffffffff
   1400093ea:	je     0x14000940d
   1400093ec:	lock add DWORD PTR [rdx+0x10],0xffffffff
   1400093f1:	setne  al
   1400093f4:	test   al,al
   1400093f6:	jne    0x140009458
   1400093f8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400093fd:	mov    rcx,QWORD PTR [rsi]
   140009400:	lea    rdx,[rip+0xffffffffffff7e79]        # 0x140001280
   140009407:	call   QWORD PTR [rip+0x2245b]        # 0x14002b868
   14000940d:	mov    QWORD PTR [rsi],rdi
   140009410:	mov    r8,QWORD PTR [rsi]
   140009413:	mov    ebp,DWORD PTR [r8+0x24]
   140009417:	mov    ecx,DWORD PTR [r8+0x20]
   14000941b:	xor    ebp,r12d
   14000941e:	mov    DWORD PTR [rsp+0x128],ebp
   140009425:	test   ecx,ecx
   140009427:	je     0x14000945f
   140009429:	xor    edx,edx
   14000942b:	mov    eax,ebp
   14000942d:	div    ecx
   14000942f:	mov    rax,QWORD PTR [r8+0x8]
   140009433:	lea    rdi,[rax+rdx*8]
   140009437:	mov    rax,QWORD PTR [rax+rdx*8]
   14000943b:	cmp    rax,r8
   14000943e:	je     0x140009462
   140009440:	cmp    ebp,DWORD PTR [rax+0x8]
   140009443:	jne    0x14000944b
   140009445:	cmp    r12d,DWORD PTR [rax+0xc]
   140009449:	je     0x140009462
   14000944b:	mov    rdi,rax
   14000944e:	mov    rax,QWORD PTR [rax]
   140009451:	cmp    rax,r8
   140009454:	jne    0x140009440
   140009456:	jmp    0x140009462
   140009458:	mov    rbx,QWORD PTR [rsp+0x30]
   14000945d:	jmp    0x14000940d
   14000945f:	mov    rdi,rsi
   140009462:	cmp    QWORD PTR [rdi],r8
   140009465:	jne    0x1400094f0
   14000946b:	mov    rcx,r8
   14000946e:	call   QWORD PTR [rip+0x21f1c]        # 0x14002b390
   140009474:	test   al,al
   140009476:	je     0x1400094c3
   140009478:	mov    r8,QWORD PTR [rsi]
   14000947b:	mov    ebp,DWORD PTR [r8+0x24]
   14000947f:	mov    ecx,DWORD PTR [r8+0x20]
   140009483:	xor    ebp,r12d
   140009486:	mov    DWORD PTR [rsp+0x128],ebp
   14000948d:	test   ecx,ecx
   14000948f:	je     0x1400094c0
   140009491:	xor    edx,edx
   140009493:	mov    eax,ebp
   140009495:	div    ecx
   140009497:	mov    rax,QWORD PTR [r8+0x8]
   14000949b:	lea    rdi,[rax+rdx*8]
   14000949f:	mov    rax,QWORD PTR [rax+rdx*8]
   1400094a3:	cmp    rax,r8
   1400094a6:	je     0x1400094c3
   1400094a8:	cmp    ebp,DWORD PTR [rax+0x8]
   1400094ab:	jne    0x1400094b3
   1400094ad:	cmp    r12d,DWORD PTR [rax+0xc]
   1400094b1:	je     0x1400094c3
   1400094b3:	mov    rdi,rax
   1400094b6:	mov    rax,QWORD PTR [rax]
   1400094b9:	cmp    rax,r8
   1400094bc:	jne    0x1400094a8
   1400094be:	jmp    0x1400094c3
   1400094c0:	mov    rdi,rsi
   1400094c3:	mov    rcx,QWORD PTR [rsi]
   1400094c6:	mov    edx,0x8
   1400094cb:	call   QWORD PTR [rip+0x21df7]        # 0x14002b2c8
   1400094d1:	test   rax,rax
   1400094d4:	je     0x1400094e5
   1400094d6:	mov    rcx,QWORD PTR [rdi]
   1400094d9:	mov    DWORD PTR [rax+0x8],ebp
   1400094dc:	mov    DWORD PTR [rax+0xc],r12d
   1400094e0:	mov    QWORD PTR [rax],rcx
   1400094e3:	jmp    0x1400094e7
   1400094e5:	xor    eax,eax
   1400094e7:	mov    QWORD PTR [rdi],rax
   1400094ea:	mov    rax,QWORD PTR [rsi]
   1400094ed:	inc    DWORD PTR [rax+0x14]
   1400094f0:	mov    rcx,r13
   1400094f3:	call   0x140006790
   1400094f8:	test   al,al
   1400094fa:	jne    0x1400095ed
   140009500:	mov    rcx,r14
   140009503:	call   0x140006790
   140009508:	test   al,al
   14000950a:	je     0x1400095ed
   140009510:	mov    rax,QWORD PTR [r14+0x50]
   140009514:	mov    QWORD PTR [rsp+0x40],rax
   140009519:	mov    ecx,DWORD PTR [rax]
   14000951b:	test   ecx,ecx
   14000951d:	je     0x14000952f
   14000951f:	cmp    ecx,0xffffffff
   140009522:	je     0x140009584
   140009524:	lock add DWORD PTR [rax],0x1
   140009528:	mov    rbx,QWORD PTR [rsp+0x30]
   14000952d:	jmp    0x140009584
   14000952f:	mov    edx,DWORD PTR [rax+0x4]
   140009532:	lea    rcx,[rsp+0x40]
   140009537:	call   QWORD PTR [rip+0x2231b]        # 0x14002b858
   14000953d:	mov    r11,QWORD PTR [r14+0x50]
   140009541:	movsxd rax,DWORD PTR [r11+0x8]
   140009545:	lea    rsi,[r11+rax*8+0x10]
   14000954a:	mov    rax,QWORD PTR [rsp+0x40]
   14000954f:	movsxd rcx,DWORD PTR [rax+0xc]
   140009553:	lea    rbp,[rax+rcx*8+0x10]
   140009558:	movsxd rcx,DWORD PTR [rax+0x8]
   14000955c:	lea    rdi,[rax+rcx*8+0x10]
   140009561:	cmp    rdi,rbp
   140009564:	je     0x140009584
   140009566:	test   rdi,rdi
   140009569:	je     0x140009577
   14000956b:	mov    rdx,rsi
   14000956e:	mov    rcx,rdi
   140009571:	call   QWORD PTR [rip+0x22329]        # 0x14002b8a0
   140009577:	add    rdi,0x8
   14000957b:	add    rsi,0x8
   14000957f:	cmp    rdi,rbp
   140009582:	jne    0x140009566
   140009584:	lea    rcx,[r13+0x50]
   140009588:	lea    rdx,[rsp+0x40]
   14000958d:	call   0x140001830
   140009592:	mov    rsi,QWORD PTR [rsp+0x40]
   140009597:	mov    eax,DWORD PTR [rsi]
   140009599:	test   eax,eax
   14000959b:	je     0x1400095bb
   14000959d:	cmp    eax,0xffffffff
   1400095a0:	je     0x1400095ed
   1400095a2:	lock add DWORD PTR [rsi],0xffffffff
   1400095a6:	setne  al
   1400095a9:	test   al,al
   1400095ab:	jne    0x14000966b
   1400095b1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400095b6:	mov    rsi,QWORD PTR [rsp+0x40]
   1400095bb:	movsxd rax,DWORD PTR [rsi+0xc]
   1400095bf:	lea    rdi,[rsi+rax*8+0x10]
   1400095c4:	movsxd rax,DWORD PTR [rsi+0x8]
   1400095c8:	lea    rbp,[rsi+rax*8+0x10]
   1400095cd:	cmp    rbp,rdi
   1400095d0:	je     0x1400095e4
   1400095d2:	sub    rdi,0x8
   1400095d6:	mov    rcx,rdi
   1400095d9:	call   QWORD PTR [rip+0x222b9]        # 0x14002b898
   1400095df:	cmp    rdi,rbp
   1400095e2:	jne    0x1400095d2
   1400095e4:	mov    rcx,rsi
   1400095e7:	call   QWORD PTR [rip+0x22283]        # 0x14002b870
   1400095ed:	mov    r13,QWORD PTR [rsp+0x110]
   1400095f5:	mov    esi,DWORD PTR [rsp+0x120]
   1400095fc:	mov    BYTE PTR [r13+0x30],0x0
   140009601:	test   esi,esi
   140009603:	js     0x14000988b
   140009609:	mov    rcx,QWORD PTR [r13+0x0]
   14000960d:	mov    eax,DWORD PTR [rcx+0xc]
   140009610:	sub    eax,DWORD PTR [rcx+0x8]
   140009613:	cmp    esi,eax
   140009615:	jge    0x140009884
   14000961b:	mov    eax,DWORD PTR [rcx]
   14000961d:	cmp    eax,0x1
   140009620:	je     0x140009631
   140009622:	test   eax,eax
   140009624:	je     0x140009631
   140009626:	mov    edx,DWORD PTR [rcx+0x4]
   140009629:	mov    rcx,r13
   14000962c:	call   0x140002770
   140009631:	mov    rcx,QWORD PTR [r13+0x0]
   140009635:	mov    r12,QWORD PTR [rsp+0x48]
   14000963a:	movsxd rax,DWORD PTR [rcx+0x8]
   14000963e:	add    rax,r12
   140009641:	mov    rdi,QWORD PTR [rcx+rax*8+0x10]
   140009646:	test   rdi,rdi
   140009649:	je     0x14000965b
   14000964b:	mov    rcx,rdi
   14000964e:	call   0x140001ea0
   140009653:	mov    rcx,rdi
   140009656:	call   0x140029524
   14000965b:	mov    edx,esi
   14000965d:	mov    rcx,r13
   140009660:	call   QWORD PTR [rip+0x21d1a]        # 0x14002b380
   140009666:	jmp    0x140009890
   14000966b:	mov    rbx,QWORD PTR [rsp+0x30]
   140009670:	jmp    0x1400095ed
   140009675:	mov    r13,QWORD PTR [rsp+0x110]
   14000967d:	mov    r12,QWORD PTR [rsp+0x48]
   140009682:	lea    rcx,[rsp+0x88]
   14000968a:	mov    rdx,r14
   14000968d:	call   QWORD PTR [rip+0x2220d]        # 0x14002b8a0
   140009693:	mov    r11,QWORD PTR [rsp+0x88]
   14000969b:	lea    rcx,[rsp+0x88]
   1400096a3:	cmp    DWORD PTR [r11+0x4],0x0
   1400096a8:	setne  dil
   1400096ac:	call   QWORD PTR [rip+0x221e6]        # 0x14002b898
   1400096b2:	test   dil,dil
   1400096b5:	je     0x1400096da
   1400096b7:	lea    rdx,[rsp+0xb8]
   1400096bf:	lea    rcx,[rsp+0x38]
   1400096c4:	mov    QWORD PTR [rsp+0xb8],r14
   1400096cc:	call   0x140006640
   1400096d1:	mov    ecx,DWORD PTR [rsp+0x120]
   1400096d8:	mov    DWORD PTR [rax],ecx
   1400096da:	mov    eax,DWORD PTR [rbx+0x10]
   1400096dd:	cmp    eax,0x1
   1400096e0:	je     0x140009748
   1400096e2:	test   eax,eax
   1400096e4:	je     0x140009748
   1400096e6:	lea    r8,[rip+0xffffffffffff7b93]        # 0x140001280
   1400096ed:	lea    rdx,[rip+0xffffffffffffbb5c]        # 0x140005250
   1400096f4:	mov    r9d,0x20
   1400096fa:	mov    rcx,rbx
   1400096fd:	mov    DWORD PTR [rsp+0x20],0x8
   140009705:	call   QWORD PTR [rip+0x2213d]        # 0x14002b848
   14000970b:	mov    ecx,DWORD PTR [rbx+0x10]
   14000970e:	mov    rdi,rax
   140009711:	test   ecx,ecx
   140009713:	je     0x140009730
   140009715:	cmp    ecx,0xffffffff
   140009718:	je     0x140009740
   14000971a:	mov    ecx,ebp
   14000971c:	lock xadd DWORD PTR [rbx+0x10],ecx
   140009721:	add    ecx,0xffffffff
   140009724:	setne  cl
   140009727:	test   cl,cl
   140009729:	jne    0x140009740
   14000972b:	mov    rbx,QWORD PTR [rsp+0x30]
   140009730:	lea    rdx,[rip+0xffffffffffff7b49]        # 0x140001280
   140009737:	mov    rcx,rbx
   14000973a:	call   QWORD PTR [rip+0x22128]        # 0x14002b868
   140009740:	mov    rbx,rdi
   140009743:	mov    QWORD PTR [rsp+0x30],rbx
   140009748:	mov    edi,DWORD PTR [rbx+0x24]
   14000974b:	mov    rcx,r14
   14000974e:	call   0x140004f90
   140009753:	mov    ecx,DWORD PTR [rbx+0x20]
   140009756:	mov    esi,eax
   140009758:	xor    esi,edi
   14000975a:	mov    DWORD PTR [rsp+0x50],esi
   14000975e:	test   ecx,ecx
   140009760:	je     0x1400097a2
   140009762:	xor    edx,edx
   140009764:	mov    eax,esi
   140009766:	div    ecx
   140009768:	mov    rcx,QWORD PTR [rbx+0x8]
   14000976c:	mov    rax,QWORD PTR [rcx+rdx*8]
   140009770:	lea    rdi,[rcx+rdx*8]
   140009774:	cmp    rax,rbx
   140009777:	je     0x1400097a7
   140009779:	nop    DWORD PTR [rax+0x0]
   140009780:	cmp    esi,DWORD PTR [rax+0x8]
   140009783:	jne    0x140009795
   140009785:	mov    rdx,QWORD PTR [rax+0x10]
   140009789:	mov    rcx,r14
   14000978c:	call   0x140005070
   140009791:	test   al,al
   140009793:	jne    0x1400097a7
   140009795:	mov    rdi,QWORD PTR [rdi]
   140009798:	mov    rax,QWORD PTR [rdi]
   14000979b:	cmp    rax,rbx
   14000979e:	jne    0x140009780
   1400097a0:	jmp    0x1400097a7
   1400097a2:	lea    rdi,[rsp+0x30]
   1400097a7:	mov    rax,QWORD PTR [rdi]
   1400097aa:	cmp    rax,rbx
   1400097ad:	jne    0x140009864
   1400097b3:	mov    rcx,rbx
   1400097b6:	call   QWORD PTR [rip+0x21bd4]        # 0x14002b390
   1400097bc:	test   al,al
   1400097be:	je     0x140009818
   1400097c0:	mov    edi,DWORD PTR [rbx+0x24]
   1400097c3:	mov    rcx,r14
   1400097c6:	call   0x140004f90
   1400097cb:	mov    ecx,DWORD PTR [rbx+0x20]
   1400097ce:	mov    esi,eax
   1400097d0:	xor    esi,edi
   1400097d2:	mov    DWORD PTR [rsp+0x50],esi
   1400097d6:	test   ecx,ecx
   1400097d8:	je     0x140009813
   1400097da:	xor    edx,edx
   1400097dc:	mov    eax,esi
   1400097de:	div    ecx
   1400097e0:	mov    rax,QWORD PTR [rbx+0x8]
   1400097e4:	lea    rdi,[rax+rdx*8]
   1400097e8:	mov    rax,QWORD PTR [rax+rdx*8]
   1400097ec:	cmp    rax,rbx
   1400097ef:	je     0x140009818
   1400097f1:	cmp    esi,DWORD PTR [rax+0x8]
   1400097f4:	jne    0x140009806
   1400097f6:	mov    rdx,QWORD PTR [rax+0x10]
   1400097fa:	mov    rcx,r14
   1400097fd:	call   0x140005070
   140009802:	test   al,al
   140009804:	jne    0x140009818
   140009806:	mov    rdi,QWORD PTR [rdi]
   140009809:	mov    rax,QWORD PTR [rdi]
   14000980c:	cmp    rax,rbx
   14000980f:	jne    0x1400097f1
   140009811:	jmp    0x140009818
   140009813:	lea    rdi,[rsp+0x30]
   140009818:	mov    edx,0x8
   14000981d:	mov    rcx,rbx
   140009820:	call   QWORD PTR [rip+0x21aa2]        # 0x14002b2c8
   140009826:	test   rax,rax
   140009829:	je     0x140009850
   14000982b:	mov    rcx,QWORD PTR [rdi]
   14000982e:	mov    DWORD PTR [rax+0x8],esi
   140009831:	mov    QWORD PTR [rax+0x10],r14
   140009835:	mov    QWORD PTR [rax],rcx
   140009838:	mov    DWORD PTR [rax+0x18],0x0
   14000983f:	mov    QWORD PTR [rdi],rax
   140009842:	mov    rbx,QWORD PTR [rsp+0x30]
   140009847:	inc    DWORD PTR [rbx+0x14]
   14000984a:	add    rax,0x18
   14000984e:	jmp    0x140009868
   140009850:	xor    eax,eax
   140009852:	mov    QWORD PTR [rdi],rax
   140009855:	mov    rbx,QWORD PTR [rsp+0x30]
   14000985a:	inc    DWORD PTR [rbx+0x14]
   14000985d:	mov    eax,0x18
   140009862:	jmp    0x140009868
   140009864:	add    rax,0x18
   140009868:	mov    esi,DWORD PTR [rsp+0x120]
   14000986f:	mov    DWORD PTR [rax],esi
   140009871:	inc    esi
   140009873:	inc    r12
   140009876:	mov    QWORD PTR [rsp+0x48],r12
   14000987b:	mov    DWORD PTR [rsp+0x120],esi
   140009882:	jmp    0x140009890
   140009884:	mov    r12,QWORD PTR [rsp+0x48]
   140009889:	jmp    0x140009890
   14000988b:	mov    r12,QWORD PTR [rsp+0x48]
   140009890:	mov    rax,QWORD PTR [r13+0x0]
   140009894:	mov    ebp,0xffffffff
   140009899:	mov    ecx,DWORD PTR [rax+0xc]
   14000989c:	sub    ecx,DWORD PTR [rax+0x8]
   14000989f:	cmp    esi,ecx
   1400098a1:	jl     0x140009060
   1400098a7:	mov    rdi,QWORD PTR [rsp+0x118]
   1400098af:	mov    r14,QWORD PTR [rsp+0xd0]
   1400098b7:	mov    rsi,QWORD PTR [rsp+0xe8]
   1400098bf:	or     ebp,ebp
   1400098c1:	mov    eax,DWORD PTR [rbx+0x10]
   1400098c4:	mov    r15,QWORD PTR [rsp+0xc8]
   1400098cc:	mov    r13,QWORD PTR [rsp+0xd8]
   1400098d4:	mov    r12,QWORD PTR [rsp+0xe0]
   1400098dc:	test   eax,eax
   1400098de:	je     0x1400098fb
   1400098e0:	cmp    eax,0xffffffff
   1400098e3:	je     0x14000990b
   1400098e5:	mov    eax,ebp
   1400098e7:	lock xadd DWORD PTR [rbx+0x10],eax
   1400098ec:	add    eax,0xffffffff
   1400098ef:	setne  al
   1400098f2:	test   al,al
   1400098f4:	jne    0x14000990b
   1400098f6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400098fb:	lea    rdx,[rip+0xffffffffffff797e]        # 0x140001280
   140009902:	mov    rcx,rbx
   140009905:	call   QWORD PTR [rip+0x21f5d]        # 0x14002b868
   14000990b:	mov    rax,QWORD PTR [rsp+0x38]
   140009910:	mov    rbx,QWORD PTR [rsp+0xf0]
   140009918:	mov    ecx,DWORD PTR [rax+0x10]
   14000991b:	test   ecx,ecx
   14000991d:	je     0x140009933
   14000991f:	cmp    ecx,0xffffffff
   140009922:	je     0x140009945
   140009924:	lock xadd DWORD PTR [rax+0x10],ebp
   140009929:	add    ebp,0xffffffff
   14000992c:	setne  al
   14000992f:	test   al,al
   140009931:	jne    0x140009945
   140009933:	mov    rcx,QWORD PTR [rsp+0x38]
   140009938:	lea    rdx,[rip+0xffffffffffff7941]        # 0x140001280
   14000993f:	call   QWORD PTR [rip+0x21f23]        # 0x14002b868
   140009945:	mov    rax,rdi
   140009948:	add    rsp,0xf8
   14000994f:	pop    rdi
   140009950:	pop    rbp
   140009951:	ret    
   140009952:	int3   
   140009953:	int3   
   140009954:	int3   
   140009955:	int3   
   140009956:	int3   
   140009957:	int3   
   140009958:	int3   
   140009959:	int3   
   14000995a:	int3   
   14000995b:	int3   
   14000995c:	int3   
   14000995d:	int3   
   14000995e:	int3   
   14000995f:	int3   
   140009960:	rex push rbp
   140009962:	push   rdi
   140009963:	push   r14
   140009965:	sub    rsp,0xd0
   14000996c:	mov    rax,QWORD PTR [rdx]
   14000996f:	movzx  edi,r9b
   140009973:	mov    r14,rdx
   140009976:	cmp    DWORD PTR [rax+0x14],0x0
   14000997a:	mov    rbp,rcx
   14000997d:	jne    0x14000998d
   14000997f:	mov    rax,QWORD PTR [rdx+0x8]
   140009983:	cmp    DWORD PTR [rax+0x14],0x0
   140009987:	je     0x140009f06
   14000998d:	lea    rcx,[rsp+0x50]
   140009992:	mov    rdx,r8
   140009995:	mov    QWORD PTR [rsp+0xf0],rbx
   14000999d:	call   QWORD PTR [rip+0x21efd]        # 0x14002b8a0
   1400099a3:	lea    rdx,[rsp+0x60]
   1400099a8:	mov    rcx,rax
   1400099ab:	call   QWORD PTR [rip+0x21827]        # 0x14002b1d8
   1400099b1:	mov    rcx,rax
   1400099b4:	call   QWORD PTR [rip+0x21816]        # 0x14002b1d0
   1400099ba:	mov    rcx,QWORD PTR [rip+0x216bf]        # 0x14002b080
   1400099c1:	lea    rdx,[rip+0x23908]        # 0x14002d2d0
   1400099c8:	mov    rbx,rax
   1400099cb:	call   0x140001090
   1400099d0:	mov    rdx,rbx
   1400099d3:	mov    rcx,rax
   1400099d6:	call   0x140001090
   1400099db:	lea    rcx,[rsp+0x60]
   1400099e0:	call   QWORD PTR [rip+0x217e2]        # 0x14002b1c8
   1400099e6:	lea    rcx,[rsp+0x50]
   1400099eb:	call   QWORD PTR [rip+0x21ea7]        # 0x14002b898
   1400099f1:	test   dil,dil
   1400099f4:	jne    0x140009a0e
   1400099f6:	mov    rcx,QWORD PTR [rip+0x21683]        # 0x14002b080
   1400099fd:	lea    rdx,[rip+0x238a4]        # 0x14002d2a8
   140009a04:	call   0x140001090
   140009a09:	jmp    0x140009efe
   140009a0e:	mov    rcx,QWORD PTR [rip+0x2166b]        # 0x14002b080
   140009a15:	mov    QWORD PTR [rsp+0x100],rsi
   140009a1d:	mov    QWORD PTR [rsp+0x108],r12
   140009a25:	lea    rdx,[rip+0x23874]        # 0x14002d2a0
   140009a2c:	mov    QWORD PTR [rsp+0xc8],r13
   140009a34:	mov    QWORD PTR [rsp+0xc0],r15
   140009a3c:	call   0x140001090
   140009a41:	mov    r12,QWORD PTR [r14]
   140009a44:	mov    eax,DWORD PTR [r12+0x10]
   140009a49:	lea    rbx,[r12+0x10]
   140009a4e:	mov    QWORD PTR [rsp+0x78],r12
   140009a53:	test   eax,eax
   140009a55:	je     0x140009a65
   140009a57:	cmp    eax,0xffffffff
   140009a5a:	je     0x140009a65
   140009a5c:	lock add DWORD PTR [rbx],0x1
   140009a60:	mov    r12,QWORD PTR [rsp+0x78]
   140009a65:	test   BYTE PTR [r12+0x28],0x1
   140009a6b:	jne    0x140009ad3
   140009a6d:	mov    eax,DWORD PTR [rbx]
   140009a6f:	cmp    eax,0x1
   140009a72:	je     0x140009ad3
   140009a74:	test   eax,eax
   140009a76:	je     0x140009ad3
   140009a78:	lea    r8,[rip+0xffffffffffff7801]        # 0x140001280
   140009a7f:	lea    rdx,[rip+0xffffffffffffb88a]        # 0x140005310
   140009a86:	mov    r9d,0x10
   140009a8c:	mov    rcx,r12
   140009a8f:	mov    DWORD PTR [rsp+0x20],0x8
   140009a97:	call   QWORD PTR [rip+0x21dab]        # 0x14002b848
   140009a9d:	mov    ecx,DWORD PTR [rbx]
   140009a9f:	mov    rdi,rax
   140009aa2:	test   ecx,ecx
   140009aa4:	je     0x140009abb
   140009aa6:	cmp    ecx,0xffffffff
   140009aa9:	je     0x140009acb
   140009aab:	lock add DWORD PTR [rbx],0xffffffff
   140009aaf:	setne  cl
   140009ab2:	test   cl,cl
   140009ab4:	jne    0x140009acb
   140009ab6:	mov    r12,QWORD PTR [rsp+0x78]
   140009abb:	lea    rdx,[rip+0xffffffffffff77be]        # 0x140001280
   140009ac2:	mov    rcx,r12
   140009ac5:	call   QWORD PTR [rip+0x21d9d]        # 0x14002b868
   140009acb:	mov    r12,rdi
   140009ace:	mov    QWORD PTR [rsp+0x78],rdi
   140009ad3:	mov    rcx,r12
   140009ad6:	call   QWORD PTR [rip+0x218bc]        # 0x14002b398
   140009adc:	mov    rsi,rax
   140009adf:	mov    QWORD PTR [rsp+0x88],rax
   140009ae7:	nop    WORD PTR [rax+rax*1+0x0]
   140009af0:	mov    edi,0x1
   140009af5:	mov    DWORD PTR [rsp+0x80],edi
   140009afc:	cmp    rsi,r12
   140009aff:	je     0x140009bd4
   140009b05:	movsxd r13,DWORD PTR [rsi+0xc]
   140009b09:	nop    DWORD PTR [rax+0x0]
   140009b10:	test   edi,edi
   140009b12:	je     0x140009bc3
   140009b18:	mov    rcx,QWORD PTR [rbp+0x0]
   140009b1c:	mov    eax,DWORD PTR [rcx]
   140009b1e:	cmp    eax,0x1
   140009b21:	je     0x140009b32
   140009b23:	test   eax,eax
   140009b25:	je     0x140009b32
   140009b27:	mov    edx,DWORD PTR [rcx+0x4]
   140009b2a:	mov    rcx,rbp
   140009b2d:	call   0x140002770
   140009b32:	mov    rax,QWORD PTR [rbp+0x0]
   140009b36:	lea    rcx,[rsp+0xf8]
   140009b3e:	movsxd rdx,DWORD PTR [rax+0x8]
   140009b42:	add    rdx,r13
   140009b45:	mov    rdx,QWORD PTR [rax+rdx*8+0x10]
   140009b4a:	call   QWORD PTR [rip+0x21d50]        # 0x14002b8a0
   140009b50:	lea    rdx,[rsp+0x98]
   140009b58:	lea    rcx,[rsp+0xf8]
   140009b60:	call   QWORD PTR [rip+0x21672]        # 0x14002b1d8
   140009b66:	mov    rcx,rax
   140009b69:	call   QWORD PTR [rip+0x21661]        # 0x14002b1d0
   140009b6f:	mov    rcx,QWORD PTR [rip+0x2150a]        # 0x14002b080
   140009b76:	lea    rdx,[rip+0x2371b]        # 0x14002d298
   140009b7d:	mov    rbx,rax
   140009b80:	call   0x140001090
   140009b85:	mov    rdx,rbx
   140009b88:	mov    rcx,rax
   140009b8b:	call   0x140001090
   140009b90:	mov    rdx,QWORD PTR [rip+0x214f9]        # 0x14002b090
   140009b97:	mov    rcx,rax
   140009b9a:	call   QWORD PTR [rip+0x214e8]        # 0x14002b088
   140009ba0:	lea    rcx,[rsp+0x98]
   140009ba8:	call   QWORD PTR [rip+0x2161a]        # 0x14002b1c8
   140009bae:	lea    rcx,[rsp+0xf8]
   140009bb6:	call   QWORD PTR [rip+0x21cdc]        # 0x14002b898
   140009bbc:	dec    edi
   140009bbe:	jmp    0x140009b10
   140009bc3:	mov    rcx,rsi
   140009bc6:	call   QWORD PTR [rip+0x216f4]        # 0x14002b2c0
   140009bcc:	mov    rsi,rax
   140009bcf:	jmp    0x140009af0
   140009bd4:	mov    eax,DWORD PTR [r12+0x10]
   140009bd9:	mov    QWORD PTR [rsp+0x88],rsi
   140009be1:	test   eax,eax
   140009be3:	je     0x140009bfd
   140009be5:	cmp    eax,0xffffffff
   140009be8:	je     0x140009c0d
   140009bea:	lock add DWORD PTR [r12+0x10],0xffffffff
   140009bf1:	setne  al
   140009bf4:	test   al,al
   140009bf6:	jne    0x140009c0d
   140009bf8:	mov    r12,QWORD PTR [rsp+0x78]
   140009bfd:	lea    rdx,[rip+0xffffffffffff767c]        # 0x140001280
   140009c04:	mov    rcx,r12
   140009c07:	call   QWORD PTR [rip+0x21c5b]        # 0x14002b868
   140009c0d:	mov    r14,QWORD PTR [r14+0x8]
   140009c11:	mov    eax,DWORD PTR [r14+0x10]
   140009c15:	mov    QWORD PTR [rsp+0xa0],r14
   140009c1d:	lea    rbx,[r14+0x10]
   140009c21:	test   eax,eax
   140009c23:	je     0x140009c35
   140009c25:	cmp    eax,0xffffffff
   140009c28:	je     0x140009c35
   140009c2a:	lock add DWORD PTR [rbx],edi
   140009c2d:	mov    r14,QWORD PTR [rsp+0xa0]
   140009c35:	test   BYTE PTR [r14+0x28],dil
   140009c39:	jne    0x140009ca6
   140009c3b:	mov    eax,DWORD PTR [rbx]
   140009c3d:	cmp    eax,edi
   140009c3f:	je     0x140009ca6
   140009c41:	test   eax,eax
   140009c43:	je     0x140009ca6
   140009c45:	lea    r8,[rip+0xffffffffffff7634]        # 0x140001280
   140009c4c:	lea    rdx,[rip+0xffffffffffffb6bd]        # 0x140005310
   140009c53:	mov    r9d,0x10
   140009c59:	mov    rcx,r14
   140009c5c:	mov    DWORD PTR [rsp+0x20],0x8
   140009c64:	call   QWORD PTR [rip+0x21bde]        # 0x14002b848
   140009c6a:	mov    ecx,DWORD PTR [rbx]
   140009c6c:	mov    rdi,rax
   140009c6f:	test   ecx,ecx
   140009c71:	je     0x140009c8b
   140009c73:	cmp    ecx,0xffffffff
   140009c76:	je     0x140009c9b
   140009c78:	lock add DWORD PTR [rbx],0xffffffff
   140009c7c:	setne  cl
   140009c7f:	test   cl,cl
   140009c81:	jne    0x140009c9b
   140009c83:	mov    r14,QWORD PTR [rsp+0xa0]
   140009c8b:	lea    rdx,[rip+0xffffffffffff75ee]        # 0x140001280
   140009c92:	mov    rcx,r14
   140009c95:	call   QWORD PTR [rip+0x21bcd]        # 0x14002b868
   140009c9b:	mov    r14,rdi
   140009c9e:	mov    QWORD PTR [rsp+0xa0],rdi
   140009ca6:	mov    rcx,r14
   140009ca9:	call   QWORD PTR [rip+0x216e9]        # 0x14002b398
   140009caf:	mov    r13,rax
   140009cb2:	mov    QWORD PTR [rsp+0xb0],rax
   140009cba:	nop    WORD PTR [rax+rax*1+0x0]
   140009cc0:	mov    r12d,0x1
   140009cc6:	mov    DWORD PTR [rsp+0xa8],r12d
   140009cce:	cmp    r13,r14
   140009cd1:	je     0x140009e90
   140009cd7:	movsxd r15,DWORD PTR [r13+0xc]
   140009cdb:	nop    DWORD PTR [rax+rax*1+0x0]
   140009ce0:	test   r12d,r12d
   140009ce3:	je     0x140009e7f
   140009ce9:	mov    rcx,QWORD PTR [rbp+0x0]
   140009ced:	mov    eax,DWORD PTR [rcx]
   140009cef:	cmp    eax,0x1
   140009cf2:	je     0x140009d03
   140009cf4:	test   eax,eax
   140009cf6:	je     0x140009d03
   140009cf8:	mov    edx,DWORD PTR [rcx+0x4]
   140009cfb:	mov    rcx,rbp
   140009cfe:	call   0x140002770
   140009d03:	mov    rcx,QWORD PTR [rbp+0x0]
   140009d07:	movsxd rax,DWORD PTR [rcx+0x8]
   140009d0b:	add    rax,r15
   140009d0e:	mov    rsi,QWORD PTR [rcx+rax*8+0x10]
   140009d13:	lea    rcx,[rsp+0x30]
   140009d18:	lea    rdx,[rsi+0x10]
   140009d1c:	call   QWORD PTR [rip+0x21b7e]        # 0x14002b8a0
   140009d22:	lea    rdx,[rsi+0x8]
   140009d26:	lea    rcx,[rsp+0x40]
   140009d2b:	call   QWORD PTR [rip+0x21b6f]        # 0x14002b8a0
   140009d31:	lea    rdx,[rsp+0x58]
   140009d36:	lea    rcx,[rsp+0x30]
   140009d3b:	call   QWORD PTR [rip+0x21497]        # 0x14002b1d8
   140009d41:	mov    rcx,rax
   140009d44:	call   QWORD PTR [rip+0x21486]        # 0x14002b1d0
   140009d4a:	lea    rdx,[rsp+0x70]
   140009d4f:	lea    rcx,[rsp+0x40]
   140009d54:	mov    rdi,rax
   140009d57:	call   QWORD PTR [rip+0x2147b]        # 0x14002b1d8
   140009d5d:	mov    rcx,rax
   140009d60:	call   QWORD PTR [rip+0x2146a]        # 0x14002b1d0
   140009d66:	mov    rcx,QWORD PTR [rip+0x21313]        # 0x14002b080
   140009d6d:	lea    rdx,[rip+0x23514]        # 0x14002d288
   140009d74:	mov    rbx,rax
   140009d77:	call   0x140001090
   140009d7c:	mov    rdx,rbx
   140009d7f:	mov    rcx,rax
   140009d82:	call   0x140001090
   140009d87:	lea    rdx,[rip+0x234ea]        # 0x14002d278
   140009d8e:	mov    rcx,rax
   140009d91:	call   0x140001090
   140009d96:	mov    rdx,rdi
   140009d99:	mov    rcx,rax
   140009d9c:	call   0x140001090
   140009da1:	mov    rdx,QWORD PTR [rip+0x212e8]        # 0x14002b090
   140009da8:	mov    rcx,rax
   140009dab:	call   QWORD PTR [rip+0x212d7]        # 0x14002b088
   140009db1:	lea    rcx,[rsp+0x70]
   140009db6:	call   QWORD PTR [rip+0x2140c]        # 0x14002b1c8
   140009dbc:	lea    rcx,[rsp+0x40]
   140009dc1:	call   QWORD PTR [rip+0x21ad1]        # 0x14002b898
   140009dc7:	lea    rcx,[rsp+0x58]
   140009dcc:	call   QWORD PTR [rip+0x213f6]        # 0x14002b1c8
   140009dd2:	lea    rcx,[rsp+0x30]
   140009dd7:	call   QWORD PTR [rip+0x21abb]        # 0x14002b898
   140009ddd:	lea    rdx,[rsi+0x20]
   140009de1:	lea    rcx,[rsp+0x38]
   140009de6:	call   QWORD PTR [rip+0x21ab4]        # 0x14002b8a0
   140009dec:	mov    r11,QWORD PTR [rsp+0x38]
   140009df1:	lea    rcx,[rsp+0x38]
   140009df6:	cmp    DWORD PTR [r11+0x4],0x0
   140009dfb:	setne  bl
   140009dfe:	call   QWORD PTR [rip+0x21a94]        # 0x14002b898
   140009e04:	test   bl,bl
   140009e06:	je     0x140009e77
   140009e08:	lea    rdx,[rsi+0x20]
   140009e0c:	lea    rcx,[rsp+0x48]
   140009e11:	call   QWORD PTR [rip+0x21a89]        # 0x14002b8a0
   140009e17:	lea    rdx,[rsp+0x68]
   140009e1c:	lea    rcx,[rsp+0x48]
   140009e21:	call   QWORD PTR [rip+0x213b1]        # 0x14002b1d8
   140009e27:	mov    rcx,rax
   140009e2a:	call   QWORD PTR [rip+0x213a0]        # 0x14002b1d0
   140009e30:	mov    rcx,QWORD PTR [rip+0x21249]        # 0x14002b080
   140009e37:	lea    rdx,[rip+0x2342a]        # 0x14002d268
   140009e3e:	mov    rbx,rax
   140009e41:	call   0x140001090
   140009e46:	mov    rdx,rbx
   140009e49:	mov    rcx,rax
   140009e4c:	call   0x140001090
   140009e51:	mov    rdx,QWORD PTR [rip+0x21238]        # 0x14002b090
   140009e58:	mov    rcx,rax
   140009e5b:	call   QWORD PTR [rip+0x21227]        # 0x14002b088
   140009e61:	lea    rcx,[rsp+0x68]
   140009e66:	call   QWORD PTR [rip+0x2135c]        # 0x14002b1c8
   140009e6c:	lea    rcx,[rsp+0x48]
   140009e71:	call   QWORD PTR [rip+0x21a21]        # 0x14002b898
   140009e77:	dec    r12d
   140009e7a:	jmp    0x140009ce0
   140009e7f:	mov    rcx,r13
   140009e82:	call   QWORD PTR [rip+0x21438]        # 0x14002b2c0
   140009e88:	mov    r13,rax
   140009e8b:	jmp    0x140009cc0
   140009e90:	mov    eax,DWORD PTR [r14+0x10]
   140009e94:	mov    r12,QWORD PTR [rsp+0x108]
   140009e9c:	mov    rsi,QWORD PTR [rsp+0x100]
   140009ea4:	mov    QWORD PTR [rsp+0xb0],r13
   140009eac:	mov    r13,QWORD PTR [rsp+0xc8]
   140009eb4:	test   eax,eax
   140009eb6:	je     0x140009ed2
   140009eb8:	cmp    eax,0xffffffff
   140009ebb:	je     0x140009ee2
   140009ebd:	lock add DWORD PTR [r14+0x10],0xffffffff
   140009ec3:	setne  al
   140009ec6:	test   al,al
   140009ec8:	jne    0x140009ee2
   140009eca:	mov    r14,QWORD PTR [rsp+0xa0]
   140009ed2:	lea    rdx,[rip+0xffffffffffff73a7]        # 0x140001280
   140009ed9:	mov    rcx,r14
   140009edc:	call   QWORD PTR [rip+0x21986]        # 0x14002b868
   140009ee2:	mov    rdx,QWORD PTR [rip+0x211a7]        # 0x14002b090
   140009ee9:	mov    rcx,QWORD PTR [rip+0x21190]        # 0x14002b080
   140009ef0:	call   QWORD PTR [rip+0x21192]        # 0x14002b088
   140009ef6:	mov    r15,QWORD PTR [rsp+0xc0]
   140009efe:	mov    rbx,QWORD PTR [rsp+0xf0]
   140009f06:	add    rsp,0xd0
   140009f0d:	pop    r14
   140009f0f:	pop    rdi
   140009f10:	pop    rbp
   140009f11:	ret    
   140009f12:	int3   
   140009f13:	int3   
   140009f14:	int3   
   140009f15:	int3   
   140009f16:	int3   
   140009f17:	int3   
   140009f18:	int3   
   140009f19:	int3   
   140009f1a:	int3   
   140009f1b:	int3   
   140009f1c:	int3   
   140009f1d:	int3   
   140009f1e:	int3   
   140009f1f:	int3   
   140009f20:	mov    QWORD PTR [rsp+0x10],rdx
   140009f25:	push   rbx
   140009f26:	push   rbp
   140009f27:	push   rsi
   140009f28:	push   rdi
   140009f29:	push   r13
   140009f2b:	push   r15
   140009f2d:	sub    rsp,0xc8
   140009f34:	mov    r15,rcx
   140009f37:	lea    rdx,[rcx+0x10]
   140009f3b:	xor    al,al
   140009f3d:	lea    rcx,[rsp+0x60]
   140009f42:	mov    BYTE PTR [rsp+0x100],al
   140009f49:	call   QWORD PTR [rip+0x21951]        # 0x14002b8a0
   140009f4f:	lea    r9,[rsp+0x40]
   140009f54:	lea    r8,[rsp+0x88]
   140009f5c:	lea    rdx,[rsp+0x118]
   140009f64:	lea    rcx,[rsp+0x60]
   140009f69:	call   QWORD PTR [rip+0x21349]        # 0x14002b2b8
   140009f6f:	lea    rcx,[rsp+0x60]
   140009f74:	call   QWORD PTR [rip+0x2191e]        # 0x14002b898
   140009f7a:	mov    ecx,DWORD PTR [rsp+0x118]
   140009f81:	xor    ebp,ebp
   140009f83:	mov    DWORD PTR [rsp+0x110],0x1
   140009f8e:	mov    QWORD PTR [rsp+0x50],rbp
   140009f93:	cmp    ecx,0x1
   140009f96:	je     0x14000a02b
   140009f9c:	mov    rax,QWORD PTR [rip+0x218e5]        # 0x14002b888
   140009fa3:	mov    edx,DWORD PTR [rsp+0x40]
   140009fa7:	lea    r9,[rsp+0x38]
   140009fac:	xor    r8d,r8d
   140009faf:	mov    QWORD PTR [rsp+0x38],rax
   140009fb4:	mov    QWORD PTR [rsp+0x20],rbp
   140009fb9:	call   0x140004b70
   140009fbe:	mov    rbx,QWORD PTR [rsp+0x38]
   140009fc3:	test   al,al
   140009fc5:	je     0x140009fd4
   140009fc7:	mov    edx,DWORD PTR [rbx+0xc]
   140009fca:	sub    edx,DWORD PTR [rbx+0x8]
   140009fcd:	mov    DWORD PTR [rsp+0x110],edx
   140009fd4:	mov    eax,DWORD PTR [rbx]
   140009fd6:	test   eax,eax
   140009fd8:	je     0x140009fef
   140009fda:	cmp    eax,0xffffffff
   140009fdd:	je     0x14000a02b
   140009fdf:	lock add DWORD PTR [rbx],0xffffffff
   140009fe3:	setne  al
   140009fe6:	test   al,al
   140009fe8:	jne    0x14000a02b
   140009fea:	mov    rbx,QWORD PTR [rsp+0x38]
   140009fef:	movsxd rax,DWORD PTR [rbx+0xc]
   140009ff3:	lea    rdi,[rbx+rax*8+0x10]
   140009ff8:	movsxd rax,DWORD PTR [rbx+0x8]
   140009ffc:	lea    rsi,[rbx+rax*8+0x10]
   14000a001:	cmp    rsi,rdi
   14000a004:	je     0x14000a022
   14000a006:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000a010:	sub    rdi,0x8
   14000a014:	mov    rcx,rdi
   14000a017:	call   QWORD PTR [rip+0x2187b]        # 0x14002b898
   14000a01d:	cmp    rdi,rsi
   14000a020:	jne    0x14000a010
   14000a022:	mov    rcx,rbx
   14000a025:	call   QWORD PTR [rip+0x21845]        # 0x14002b870
   14000a02b:	mov    rcx,QWORD PTR [r15]
   14000a02e:	mov    r13,rbp
   14000a031:	mov    QWORD PTR [rsp+0x58],rbp
   14000a036:	mov    eax,DWORD PTR [rcx+0xc]
   14000a039:	sub    eax,DWORD PTR [rcx+0x8]
   14000a03c:	test   eax,eax
   14000a03e:	jle    0x14000a555
   14000a044:	mov    QWORD PTR [rsp+0xc0],r12
   14000a04c:	mov    QWORD PTR [rsp+0xb8],r14
   14000a054:	movsxd rax,DWORD PTR [rcx+0x8]
   14000a058:	add    rax,r13
   14000a05b:	mov    r12,QWORD PTR [rcx+rax*8+0x10]
   14000a060:	mov    rbx,QWORD PTR [r12+0x50]
   14000a065:	mov    QWORD PTR [rsp+0x30],rbx
   14000a06a:	mov    eax,DWORD PTR [rbx]
   14000a06c:	test   eax,eax
   14000a06e:	je     0x14000a080
   14000a070:	cmp    eax,0xffffffff
   14000a073:	je     0x14000a0db
   14000a075:	lock add DWORD PTR [rbx],0x1
   14000a079:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a07e:	jmp    0x14000a0db
   14000a080:	mov    edx,DWORD PTR [rbx+0x4]
   14000a083:	lea    rcx,[rsp+0x30]
   14000a088:	call   QWORD PTR [rip+0x217ca]        # 0x14002b858
   14000a08e:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a093:	mov    rcx,QWORD PTR [r12+0x50]
   14000a098:	movsxd rax,DWORD PTR [rbx+0xc]
   14000a09c:	lea    rbp,[rbx+rax*8+0x10]
   14000a0a1:	movsxd rax,DWORD PTR [rcx+0x8]
   14000a0a5:	lea    rsi,[rcx+rax*8+0x10]
   14000a0aa:	movsxd rax,DWORD PTR [rbx+0x8]
   14000a0ae:	lea    rdi,[rbx+rax*8+0x10]
   14000a0b3:	cmp    rdi,rbp
   14000a0b6:	je     0x14000a0db
   14000a0b8:	test   rdi,rdi
   14000a0bb:	je     0x14000a0c9
   14000a0bd:	mov    rdx,rsi
   14000a0c0:	mov    rcx,rdi
   14000a0c3:	call   QWORD PTR [rip+0x217d7]        # 0x14002b8a0
   14000a0c9:	add    rdi,0x8
   14000a0cd:	add    rsi,0x8
   14000a0d1:	cmp    rdi,rbp
   14000a0d4:	jne    0x14000a0b8
   14000a0d6:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a0db:	cmp    BYTE PTR [r12+0x74],0x0
   14000a0e1:	mov    eax,DWORD PTR [rbx+0xc]
   14000a0e4:	mov    r14d,0x1
   14000a0ea:	cmovne r14d,DWORD PTR [rsp+0x110]
   14000a0f3:	sub    eax,DWORD PTR [rbx+0x8]
   14000a0f6:	cmp    eax,r14d
   14000a0f9:	je     0x14000a402
   14000a0ff:	cmp    eax,r14d
   14000a102:	jge    0x14000a1a2
   14000a108:	nop    DWORD PTR [rax+rax*1+0x0]
   14000a110:	lea    rcx,[rsp+0x98]
   14000a118:	call   QWORD PTR [rip+0x21772]        # 0x14002b890
   14000a11e:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a123:	mov    edx,DWORD PTR [rcx]
   14000a125:	mov    rdi,rax
   14000a128:	cmp    edx,0x1
   14000a12b:	je     0x14000a159
   14000a12d:	test   edx,edx
   14000a12f:	je     0x14000a159
   14000a131:	lea    rcx,[rsp+0x30]
   14000a136:	mov    edx,0x7fffffff
   14000a13b:	mov    r8d,0x1
   14000a141:	call   0x140001a10
   14000a146:	test   rax,rax
   14000a149:	je     0x14000a180
   14000a14b:	mov    rdx,rdi
   14000a14e:	mov    rcx,rax
   14000a151:	call   QWORD PTR [rip+0x21749]        # 0x14002b8a0
   14000a157:	jmp    0x14000a180
   14000a159:	lea    rcx,[rsp+0x80]
   14000a161:	mov    rdx,rax
   14000a164:	call   QWORD PTR [rip+0x21736]        # 0x14002b8a0
   14000a16a:	lea    rcx,[rsp+0x30]
   14000a16f:	call   QWORD PTR [rip+0x216cb]        # 0x14002b840
   14000a175:	mov    rcx,QWORD PTR [rsp+0x80]
   14000a17d:	mov    QWORD PTR [rax],rcx
   14000a180:	lea    rcx,[rsp+0x98]
   14000a188:	call   QWORD PTR [rip+0x2170a]        # 0x14002b898
   14000a18e:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a193:	mov    eax,DWORD PTR [rbx+0xc]
   14000a196:	sub    eax,DWORD PTR [rbx+0x8]
   14000a199:	cmp    eax,r14d
   14000a19c:	jl     0x14000a110
   14000a1a2:	mov    ecx,DWORD PTR [rbx+0x8]
   14000a1a5:	mov    eax,DWORD PTR [rbx+0xc]
   14000a1a8:	sub    eax,ecx
   14000a1aa:	cmp    eax,r14d
   14000a1ad:	jle    0x14000a3c7
   14000a1b3:	mov    BYTE PTR [rsp+0x100],0x1
   14000a1bb:	nop    DWORD PTR [rax+rax*1+0x0]
   14000a1c0:	mov    eax,DWORD PTR [rbx]
   14000a1c2:	cmp    eax,0x1
   14000a1c5:	je     0x14000a281
   14000a1cb:	test   eax,eax
   14000a1cd:	je     0x14000a281
   14000a1d3:	mov    edx,DWORD PTR [rbx+0x4]
   14000a1d6:	movsxd rax,ecx
   14000a1d9:	lea    rcx,[rsp+0x30]
   14000a1de:	lea    rsi,[rbx+rax*8+0x10]
   14000a1e3:	call   QWORD PTR [rip+0x2166f]        # 0x14002b858
   14000a1e9:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a1ee:	movsxd rcx,DWORD PTR [rbx+0xc]
   14000a1f2:	mov    rbp,rax
   14000a1f5:	lea    r12,[rbx+rcx*8+0x10]
   14000a1fa:	movsxd rcx,DWORD PTR [rbx+0x8]
   14000a1fe:	lea    rdi,[rbx+rcx*8+0x10]
   14000a203:	cmp    rdi,r12
   14000a206:	je     0x14000a22b
   14000a208:	test   rdi,rdi
   14000a20b:	je     0x14000a219
   14000a20d:	mov    rdx,rsi
   14000a210:	mov    rcx,rdi
   14000a213:	call   QWORD PTR [rip+0x21687]        # 0x14002b8a0
   14000a219:	add    rdi,0x8
   14000a21d:	add    rsi,0x8
   14000a221:	cmp    rdi,r12
   14000a224:	jne    0x14000a208
   14000a226:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a22b:	mov    eax,DWORD PTR [rbp+0x0]
   14000a22e:	test   eax,eax
   14000a230:	je     0x14000a24a
   14000a232:	cmp    eax,0xffffffff
   14000a235:	je     0x14000a281
   14000a237:	lock add DWORD PTR [rbp+0x0],0xffffffff
   14000a23c:	setne  al
   14000a23f:	test   al,al
   14000a241:	je     0x14000a24a
   14000a243:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a248:	jmp    0x14000a281
   14000a24a:	movsxd rax,DWORD PTR [rbp+0xc]
   14000a24e:	lea    rdi,[rbp+rax*8+0x10]
   14000a253:	movsxd rax,DWORD PTR [rbp+0x8]
   14000a257:	lea    rbx,[rbp+rax*8+0x10]
   14000a25c:	cmp    rbx,rdi
   14000a25f:	je     0x14000a273
   14000a261:	sub    rdi,0x8
   14000a265:	mov    rcx,rdi
   14000a268:	call   QWORD PTR [rip+0x2162a]        # 0x14002b898
   14000a26e:	cmp    rdi,rbx
   14000a271:	jne    0x14000a261
   14000a273:	mov    rcx,rbp
   14000a276:	call   QWORD PTR [rip+0x215f4]        # 0x14002b870
   14000a27c:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a281:	movsxd rax,DWORD PTR [rbx+0xc]
   14000a285:	mov    ecx,DWORD PTR [rbx]
   14000a287:	lea    rdi,[rbx+rax*8+0x8]
   14000a28c:	mov    QWORD PTR [rsp+0x70],rdi
   14000a291:	cmp    ecx,0x1
   14000a294:	je     0x14000a395
   14000a29a:	test   ecx,ecx
   14000a29c:	je     0x14000a395
   14000a2a2:	movsxd rax,DWORD PTR [rbx+0x8]
   14000a2a6:	lea    rax,[rax*8+0x10]
   14000a2ae:	sub    rdi,rax
   14000a2b1:	sub    rdi,rbx
   14000a2b4:	sar    rdi,0x3
   14000a2b8:	cmp    ecx,0x1
   14000a2bb:	je     0x14000a380
   14000a2c1:	test   ecx,ecx
   14000a2c3:	je     0x14000a380
   14000a2c9:	mov    edx,DWORD PTR [rbx+0x4]
   14000a2cc:	lea    rcx,[rsp+0x30]
   14000a2d1:	lea    rbp,[rax+rbx*1]
   14000a2d5:	call   QWORD PTR [rip+0x2157d]        # 0x14002b858
   14000a2db:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a2e0:	movsxd rcx,DWORD PTR [rbx+0xc]
   14000a2e4:	mov    r12,rax
   14000a2e7:	lea    r13,[rbx+rcx*8+0x10]
   14000a2ec:	movsxd rcx,DWORD PTR [rbx+0x8]
   14000a2f0:	lea    rsi,[rbx+rcx*8+0x10]
   14000a2f5:	cmp    rsi,r13
   14000a2f8:	je     0x14000a323
   14000a2fa:	nop    WORD PTR [rax+rax*1+0x0]
   14000a300:	test   rsi,rsi
   14000a303:	je     0x14000a311
   14000a305:	mov    rdx,rbp
   14000a308:	mov    rcx,rsi
   14000a30b:	call   QWORD PTR [rip+0x2158f]        # 0x14002b8a0
   14000a311:	add    rsi,0x8
   14000a315:	add    rbp,0x8
   14000a319:	cmp    rsi,r13
   14000a31c:	jne    0x14000a300
   14000a31e:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a323:	mov    eax,DWORD PTR [r12]
   14000a327:	test   eax,eax
   14000a329:	je     0x14000a344
   14000a32b:	cmp    eax,0xffffffff
   14000a32e:	je     0x14000a380
   14000a330:	lock add DWORD PTR [r12],0xffffffff
   14000a336:	setne  al
   14000a339:	test   al,al
   14000a33b:	je     0x14000a344
   14000a33d:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a342:	jmp    0x14000a380
   14000a344:	movsxd rax,DWORD PTR [r12+0xc]
   14000a349:	lea    rbx,[r12+rax*8+0x10]
   14000a34e:	movsxd rax,DWORD PTR [r12+0x8]
   14000a353:	lea    rsi,[r12+rax*8+0x10]
   14000a358:	cmp    rsi,rbx
   14000a35b:	je     0x14000a372
   14000a35d:	nop    DWORD PTR [rax]
   14000a360:	sub    rbx,0x8
   14000a364:	mov    rcx,rbx
   14000a367:	call   QWORD PTR [rip+0x2152b]        # 0x14002b898
   14000a36d:	cmp    rbx,rsi
   14000a370:	jne    0x14000a360
   14000a372:	mov    rcx,r12
   14000a375:	call   QWORD PTR [rip+0x214f5]        # 0x14002b870
   14000a37b:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a380:	movsxd rax,DWORD PTR [rbx+0x8]
   14000a384:	movsxd rcx,edi
   14000a387:	lea    rax,[rbx+rax*8+0x10]
   14000a38c:	lea    rdi,[rax+rcx*8]
   14000a390:	mov    QWORD PTR [rsp+0x70],rdi
   14000a395:	mov    rcx,rdi
   14000a398:	call   QWORD PTR [rip+0x214fa]        # 0x14002b898
   14000a39e:	lea    rcx,[rsp+0x30]
   14000a3a3:	mov    rdx,rdi
   14000a3a6:	call   QWORD PTR [rip+0x20fcc]        # 0x14002b378
   14000a3ac:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a3b1:	mov    ecx,DWORD PTR [rbx+0x8]
   14000a3b4:	mov    eax,DWORD PTR [rbx+0xc]
   14000a3b7:	sub    eax,ecx
   14000a3b9:	cmp    eax,r14d
   14000a3bc:	jg     0x14000a1c0
   14000a3c2:	mov    r13,QWORD PTR [rsp+0x58]
   14000a3c7:	mov    rcx,QWORD PTR [r15]
   14000a3ca:	mov    eax,DWORD PTR [rcx]
   14000a3cc:	cmp    eax,0x1
   14000a3cf:	je     0x14000a3e0
   14000a3d1:	test   eax,eax
   14000a3d3:	je     0x14000a3e0
   14000a3d5:	mov    edx,DWORD PTR [rcx+0x4]
   14000a3d8:	mov    rcx,r15
   14000a3db:	call   0x140002770
   14000a3e0:	mov    rcx,QWORD PTR [r15]
   14000a3e3:	lea    rdx,[rsp+0x30]
   14000a3e8:	movsxd rax,DWORD PTR [rcx+0x8]
   14000a3ec:	add    rax,r13
   14000a3ef:	mov    rcx,QWORD PTR [rcx+rax*8+0x10]
   14000a3f4:	add    rcx,0x50
   14000a3f8:	call   0x140001830
   14000a3fd:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a402:	mov    eax,DWORD PTR [rbx]
   14000a404:	test   eax,eax
   14000a406:	je     0x14000a41d
   14000a408:	cmp    eax,0xffffffff
   14000a40b:	je     0x14000a45b
   14000a40d:	lock add DWORD PTR [rbx],0xffffffff
   14000a411:	setne  al
   14000a414:	test   al,al
   14000a416:	jne    0x14000a45b
   14000a418:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a41d:	movsxd rax,DWORD PTR [rbx+0xc]
   14000a421:	lea    rdi,[rbx+rax*8+0x10]
   14000a426:	movsxd rax,DWORD PTR [rbx+0x8]
   14000a42a:	lea    rsi,[rbx+rax*8+0x10]
   14000a42f:	cmp    rsi,rdi
   14000a432:	je     0x14000a452
   14000a434:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000a440:	sub    rdi,0x8
   14000a444:	mov    rcx,rdi
   14000a447:	call   QWORD PTR [rip+0x2144b]        # 0x14002b898
   14000a44d:	cmp    rdi,rsi
   14000a450:	jne    0x14000a440
   14000a452:	mov    rcx,rbx
   14000a455:	call   QWORD PTR [rip+0x21415]        # 0x14002b870
   14000a45b:	mov    rcx,QWORD PTR [r15]
   14000a45e:	mov    rbp,QWORD PTR [rsp+0x50]
   14000a463:	inc    r13
   14000a466:	mov    eax,DWORD PTR [rcx+0xc]
   14000a469:	inc    ebp
   14000a46b:	mov    QWORD PTR [rsp+0x58],r13
   14000a470:	sub    eax,DWORD PTR [rcx+0x8]
   14000a473:	mov    QWORD PTR [rsp+0x50],rbp
   14000a478:	cmp    ebp,eax
   14000a47a:	jl     0x14000a054
   14000a480:	movzx  eax,BYTE PTR [rsp+0x100]
   14000a488:	mov    r14,QWORD PTR [rsp+0xb8]
   14000a490:	mov    r12,QWORD PTR [rsp+0xc0]
   14000a498:	test   al,al
   14000a49a:	je     0x14000a555
   14000a4a0:	or     rcx,0xffffffffffffffff
   14000a4a4:	lea    rdx,[rip+0x22e55]        # 0x14002d300
   14000a4ab:	xor    eax,eax
   14000a4ad:	mov    rdi,rdx
   14000a4b0:	mov    QWORD PTR [rsp+0x78],rdx
   14000a4b5:	lea    rdx,[rsp+0xa0]
   14000a4bd:	repnz scas al,BYTE PTR es:[rdi]
   14000a4bf:	not    rcx
   14000a4c2:	dec    rcx
   14000a4c5:	mov    DWORD PTR [rsp+0x70],ecx
   14000a4c9:	lea    rcx,[rsp+0x48]
   14000a4ce:	movaps xmm0,XMMWORD PTR [rsp+0x70]
   14000a4d3:	movdqa XMMWORD PTR [rsp+0xa0],xmm0
   14000a4dc:	call   QWORD PTR [rip+0x2137e]        # 0x14002b860
   14000a4e2:	mov    rdi,QWORD PTR [rsp+0x108]
   14000a4ea:	mov    rax,QWORD PTR [rdi+0x60]
   14000a4ee:	mov    ecx,DWORD PTR [rax]
   14000a4f0:	cmp    ecx,0x1
   14000a4f3:	je     0x14000a522
   14000a4f5:	test   ecx,ecx
   14000a4f7:	je     0x14000a522
   14000a4f9:	lea    rcx,[rdi+0x60]
   14000a4fd:	mov    edx,0x7fffffff
   14000a502:	mov    r8d,0x1
   14000a508:	call   0x140001a10
   14000a50d:	test   rax,rax
   14000a510:	je     0x14000a54a
   14000a512:	lea    rdx,[rsp+0x48]
   14000a517:	mov    rcx,rax
   14000a51a:	call   QWORD PTR [rip+0x21380]        # 0x14002b8a0
   14000a520:	jmp    0x14000a54a
   14000a522:	lea    rdx,[rsp+0x48]
   14000a527:	lea    rcx,[rsp+0x90]
   14000a52f:	call   QWORD PTR [rip+0x2136b]        # 0x14002b8a0
   14000a535:	lea    rcx,[rdi+0x60]
   14000a539:	call   QWORD PTR [rip+0x21301]        # 0x14002b840
   14000a53f:	mov    rcx,QWORD PTR [rsp+0x90]
   14000a547:	mov    QWORD PTR [rax],rcx
   14000a54a:	lea    rcx,[rsp+0x48]
   14000a54f:	call   QWORD PTR [rip+0x21343]        # 0x14002b898
   14000a555:	add    rsp,0xc8
   14000a55c:	pop    r15
   14000a55e:	pop    r13
   14000a560:	pop    rdi
   14000a561:	pop    rsi
   14000a562:	pop    rbp
   14000a563:	pop    rbx
   14000a564:	ret    
   14000a565:	int3   
   14000a566:	int3   
   14000a567:	int3   
   14000a568:	int3   
   14000a569:	int3   
   14000a56a:	int3   
   14000a56b:	int3   
   14000a56c:	int3   
   14000a56d:	int3   
   14000a56e:	int3   
   14000a56f:	int3   
   14000a570:	mov    QWORD PTR [rsp+0x10],rbx
   14000a575:	push   rdi
   14000a576:	sub    rsp,0x20
   14000a57a:	mov    rdi,rcx
   14000a57d:	mov    rcx,QWORD PTR [rcx]
   14000a580:	mov    eax,DWORD PTR [rcx]
   14000a582:	cmp    eax,0x1
   14000a585:	je     0x14000a596
   14000a587:	test   eax,eax
   14000a589:	je     0x14000a596
   14000a58b:	mov    edx,DWORD PTR [rcx+0x4]
   14000a58e:	mov    rcx,rdi
   14000a591:	call   0x140002770
   14000a596:	mov    rcx,QWORD PTR [rdi]
   14000a599:	mov    QWORD PTR [rsp+0x30],rsi
   14000a59e:	movsxd rax,DWORD PTR [rcx+0x8]
   14000a5a2:	lea    rbx,[rcx+rax*8+0x10]
   14000a5a7:	nop    WORD PTR [rax+rax*1+0x0]
   14000a5b0:	mov    rcx,QWORD PTR [rdi]
   14000a5b3:	mov    eax,DWORD PTR [rcx]
   14000a5b5:	cmp    eax,0x1
   14000a5b8:	je     0x14000a5c9
   14000a5ba:	test   eax,eax
   14000a5bc:	je     0x14000a5c9
   14000a5be:	mov    edx,DWORD PTR [rcx+0x4]
   14000a5c1:	mov    rcx,rdi
   14000a5c4:	call   0x140002770
   14000a5c9:	mov    rdx,QWORD PTR [rdi]
   14000a5cc:	movsxd rax,DWORD PTR [rdx+0xc]
   14000a5d0:	lea    rcx,[rdx+rax*8+0x10]
   14000a5d5:	cmp    rbx,rcx
   14000a5d8:	je     0x14000a668
   14000a5de:	mov    rax,QWORD PTR [rbx]
   14000a5e1:	mov    ecx,DWORD PTR [rax+0x70]
   14000a5e4:	cmp    ecx,0x3
   14000a5e7:	je     0x14000a5f4
   14000a5e9:	cmp    ecx,0x2
   14000a5ec:	je     0x14000a5f4
   14000a5ee:	add    rbx,0x8
   14000a5f2:	jmp    0x14000a5b0
   14000a5f4:	mov    ecx,DWORD PTR [rdx]
   14000a5f6:	cmp    ecx,0x1
   14000a5f9:	je     0x14000a63c
   14000a5fb:	test   ecx,ecx
   14000a5fd:	je     0x14000a63c
   14000a5ff:	movsxd rax,DWORD PTR [rdx+0x8]
   14000a603:	lea    rax,[rax*8+0x10]
   14000a60b:	sub    rbx,rax
   14000a60e:	sub    rbx,rdx
   14000a611:	sar    rbx,0x3
   14000a615:	cmp    ecx,0x1
   14000a618:	je     0x14000a629
   14000a61a:	test   ecx,ecx
   14000a61c:	je     0x14000a629
   14000a61e:	mov    edx,DWORD PTR [rdx+0x4]
   14000a621:	mov    rcx,rdi
   14000a624:	call   0x140002770
   14000a629:	mov    rcx,QWORD PTR [rdi]
   14000a62c:	movsxd rax,DWORD PTR [rcx+0x8]
   14000a630:	lea    rax,[rcx+rax*8+0x10]
   14000a635:	movsxd rcx,ebx
   14000a638:	lea    rbx,[rax+rcx*8]
   14000a63c:	mov    rsi,QWORD PTR [rbx]
   14000a63f:	test   rsi,rsi
   14000a642:	je     0x14000a654
   14000a644:	mov    rcx,rsi
   14000a647:	call   0x140001ea0
   14000a64c:	mov    rcx,rsi
   14000a64f:	call   0x140029524
   14000a654:	mov    rdx,rbx
   14000a657:	mov    rcx,rdi
   14000a65a:	call   QWORD PTR [rip+0x20d18]        # 0x14002b378
   14000a660:	mov    rbx,rax
   14000a663:	jmp    0x14000a5b0
   14000a668:	mov    rsi,QWORD PTR [rsp+0x30]
   14000a66d:	mov    rbx,QWORD PTR [rsp+0x38]
   14000a672:	mov    BYTE PTR [rdi+0x30],0x0
   14000a676:	add    rsp,0x20
   14000a67a:	pop    rdi
   14000a67b:	ret    
   14000a67c:	int3   
   14000a67d:	int3   
   14000a67e:	int3   
   14000a67f:	int3   
   14000a680:	mov    QWORD PTR [rsp+0x10],rbx
   14000a685:	push   rdi
   14000a686:	sub    rsp,0x20
   14000a68a:	mov    rdi,rcx
   14000a68d:	mov    rcx,QWORD PTR [rcx]
   14000a690:	mov    eax,DWORD PTR [rcx]
   14000a692:	cmp    eax,0x1
   14000a695:	je     0x14000a6a6
   14000a697:	test   eax,eax
   14000a699:	je     0x14000a6a6
   14000a69b:	mov    edx,DWORD PTR [rcx+0x4]
   14000a69e:	mov    rcx,rdi
   14000a6a1:	call   0x140002770
   14000a6a6:	mov    rcx,QWORD PTR [rdi]
   14000a6a9:	mov    QWORD PTR [rsp+0x30],rsi
   14000a6ae:	movsxd rax,DWORD PTR [rcx+0x8]
   14000a6b2:	lea    rbx,[rcx+rax*8+0x10]
   14000a6b7:	nop    WORD PTR [rax+rax*1+0x0]
   14000a6c0:	mov    rcx,QWORD PTR [rdi]
   14000a6c3:	mov    eax,DWORD PTR [rcx]
   14000a6c5:	cmp    eax,0x1
   14000a6c8:	je     0x14000a6d9
   14000a6ca:	test   eax,eax
   14000a6cc:	je     0x14000a6d9
   14000a6ce:	mov    edx,DWORD PTR [rcx+0x4]
   14000a6d1:	mov    rcx,rdi
   14000a6d4:	call   0x140002770
   14000a6d9:	mov    rdx,QWORD PTR [rdi]
   14000a6dc:	movsxd rax,DWORD PTR [rdx+0xc]
   14000a6e0:	lea    rcx,[rdx+rax*8+0x10]
   14000a6e5:	cmp    rbx,rcx
   14000a6e8:	je     0x14000a774
   14000a6ee:	mov    rax,QWORD PTR [rbx]
   14000a6f1:	cmp    DWORD PTR [rax+0x70],0x1
   14000a6f5:	jne    0x14000a76b
   14000a6f7:	mov    ecx,DWORD PTR [rdx]
   14000a6f9:	cmp    ecx,0x1
   14000a6fc:	je     0x14000a73f
   14000a6fe:	test   ecx,ecx
   14000a700:	je     0x14000a73f
   14000a702:	movsxd rax,DWORD PTR [rdx+0x8]
   14000a706:	lea    rax,[rax*8+0x10]
   14000a70e:	sub    rbx,rax
   14000a711:	sub    rbx,rdx
   14000a714:	sar    rbx,0x3
   14000a718:	cmp    ecx,0x1
   14000a71b:	je     0x14000a72c
   14000a71d:	test   ecx,ecx
   14000a71f:	je     0x14000a72c
   14000a721:	mov    edx,DWORD PTR [rdx+0x4]
   14000a724:	mov    rcx,rdi
   14000a727:	call   0x140002770
   14000a72c:	mov    rcx,QWORD PTR [rdi]
   14000a72f:	movsxd rax,DWORD PTR [rcx+0x8]
   14000a733:	lea    rax,[rcx+rax*8+0x10]
   14000a738:	movsxd rcx,ebx
   14000a73b:	lea    rbx,[rax+rcx*8]
   14000a73f:	mov    rsi,QWORD PTR [rbx]
   14000a742:	test   rsi,rsi
   14000a745:	je     0x14000a757
   14000a747:	mov    rcx,rsi
   14000a74a:	call   0x140001ea0
   14000a74f:	mov    rcx,rsi
   14000a752:	call   0x140029524
   14000a757:	mov    rdx,rbx
   14000a75a:	mov    rcx,rdi
   14000a75d:	call   QWORD PTR [rip+0x20c15]        # 0x14002b378
   14000a763:	mov    rbx,rax
   14000a766:	jmp    0x14000a6c0
   14000a76b:	add    rbx,0x8
   14000a76f:	jmp    0x14000a6c0
   14000a774:	mov    rsi,QWORD PTR [rsp+0x30]
   14000a779:	mov    rbx,QWORD PTR [rsp+0x38]
   14000a77e:	mov    BYTE PTR [rdi+0x30],0x0
   14000a782:	add    rsp,0x20
   14000a786:	pop    rdi
   14000a787:	ret    
   14000a788:	int3   
   14000a789:	int3   
   14000a78a:	int3   
   14000a78b:	int3   
   14000a78c:	int3   
   14000a78d:	int3   
   14000a78e:	int3   
   14000a78f:	int3   
   14000a790:	mov    QWORD PTR [rsp+0x18],rbx
   14000a795:	mov    QWORD PTR [rsp+0x20],rbp
   14000a79a:	push   rsi
   14000a79b:	sub    rsp,0x20
   14000a79f:	mov    rsi,rcx
   14000a7a2:	mov    rcx,QWORD PTR [rcx]
   14000a7a5:	mov    eax,DWORD PTR [rcx]
   14000a7a7:	cmp    eax,0x1
   14000a7aa:	je     0x14000a7bb
   14000a7ac:	test   eax,eax
   14000a7ae:	je     0x14000a7bb
   14000a7b0:	mov    edx,DWORD PTR [rcx+0x4]
   14000a7b3:	mov    rcx,rsi
   14000a7b6:	call   0x140002770
   14000a7bb:	mov    rcx,QWORD PTR [rsi]
   14000a7be:	xor    ebp,ebp
   14000a7c0:	mov    QWORD PTR [rsp+0x38],rdi
   14000a7c5:	movsxd rax,DWORD PTR [rcx+0x8]
   14000a7c9:	lea    rbx,[rcx+rax*8+0x10]
   14000a7ce:	xchg   ax,ax
   14000a7d0:	mov    rcx,QWORD PTR [rsi]
   14000a7d3:	mov    eax,DWORD PTR [rcx]
   14000a7d5:	cmp    eax,0x1
   14000a7d8:	je     0x14000a7e9
   14000a7da:	test   eax,eax
   14000a7dc:	je     0x14000a7e9
   14000a7de:	mov    edx,DWORD PTR [rcx+0x4]
   14000a7e1:	mov    rcx,rsi
   14000a7e4:	call   0x140002770
   14000a7e9:	mov    rcx,QWORD PTR [rsi]
   14000a7ec:	movsxd rax,DWORD PTR [rcx+0xc]
   14000a7f0:	lea    rcx,[rcx+rax*8+0x10]
   14000a7f5:	cmp    rbx,rcx
   14000a7f8:	je     0x14000a830
   14000a7fa:	mov    rax,QWORD PTR [rbx]
   14000a7fd:	cmp    DWORD PTR [rax+0x70],0x1
   14000a801:	jne    0x14000a806
   14000a803:	mov    DWORD PTR [rax+0x70],ebp
   14000a806:	mov    rdi,QWORD PTR [rbx]
   14000a809:	lea    rcx,[rsp+0x30]
   14000a80e:	call   QWORD PTR [rip+0x2107c]        # 0x14002b890
   14000a814:	mov    rcx,rdi
   14000a817:	mov    rdx,rax
   14000a81a:	call   0x140005cb0
   14000a81f:	lea    rcx,[rsp+0x30]
   14000a824:	call   QWORD PTR [rip+0x2106e]        # 0x14002b898
   14000a82a:	add    rbx,0x8
   14000a82e:	jmp    0x14000a7d0
   14000a830:	mov    rdi,QWORD PTR [rsp+0x38]
   14000a835:	mov    rbx,QWORD PTR [rsp+0x40]
   14000a83a:	mov    rbp,QWORD PTR [rsp+0x48]
   14000a83f:	add    rsp,0x20
   14000a843:	pop    rsi
   14000a844:	ret    
   14000a845:	int3   
   14000a846:	int3   
   14000a847:	int3   
   14000a848:	int3   
   14000a849:	int3   
   14000a84a:	int3   
   14000a84b:	int3   
   14000a84c:	int3   
   14000a84d:	int3   
   14000a84e:	int3   
   14000a84f:	int3   
   14000a850:	mov    r11,rsp
   14000a853:	mov    QWORD PTR [r11+0x8],rcx
   14000a857:	push   rbx
   14000a858:	push   rbp
   14000a859:	push   rsi
   14000a85a:	push   rdi
   14000a85b:	push   r12
   14000a85d:	push   r13
   14000a85f:	push   r14
   14000a861:	push   r15
   14000a863:	sub    rsp,0xe8
   14000a86a:	mov    rsi,rcx
   14000a86d:	or     rcx,0xffffffffffffffff
   14000a871:	lea    rdx,[rip+0x22b1c]        # 0x14002d394
   14000a878:	mov    rdi,rdx
   14000a87b:	mov    QWORD PTR [rsp+0x38],rdx
   14000a880:	xor    eax,eax
   14000a882:	repnz scas al,BYTE PTR es:[rdi]
   14000a884:	lea    rdx,[r11-0x68]
   14000a888:	xor    r14d,r14d
   14000a88b:	not    rcx
   14000a88e:	mov    DWORD PTR [rsp+0x138],r14d
   14000a896:	dec    rcx
   14000a899:	mov    DWORD PTR [rsp+0x30],ecx
   14000a89d:	lea    rcx,[r11-0xa8]
   14000a8a4:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14000a8a9:	movdqa XMMWORD PTR [r11-0x68],xmm0
   14000a8af:	call   QWORD PTR [rip+0x20fab]        # 0x14002b860
   14000a8b5:	or     rcx,0xffffffffffffffff
   14000a8b9:	lea    rdx,[rip+0x22acc]        # 0x14002d38c
   14000a8c0:	xor    eax,eax
   14000a8c2:	mov    rdi,rdx
   14000a8c5:	mov    QWORD PTR [rsp+0x38],rdx
   14000a8ca:	lea    rdx,[rsp+0xd0]
   14000a8d2:	repnz scas al,BYTE PTR es:[rdi]
   14000a8d4:	not    rcx
   14000a8d7:	dec    rcx
   14000a8da:	mov    DWORD PTR [rsp+0x30],ecx
   14000a8de:	lea    rcx,[rsp+0x88]
   14000a8e6:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14000a8eb:	movdqa XMMWORD PTR [rsp+0xd0],xmm0
   14000a8f4:	call   QWORD PTR [rip+0x20f66]        # 0x14002b860
   14000a8fa:	mov    rdx,QWORD PTR [rsi]
   14000a8fd:	mov    eax,DWORD PTR [rdx]
   14000a8ff:	cmp    eax,0x1
   14000a902:	je     0x14000a913
   14000a904:	test   eax,eax
   14000a906:	je     0x14000a913
   14000a908:	mov    edx,DWORD PTR [rdx+0x4]
   14000a90b:	mov    rcx,rsi
   14000a90e:	call   0x140002770
   14000a913:	mov    rcx,QWORD PTR [rsi]
   14000a916:	movsxd rax,DWORD PTR [rcx+0x8]
   14000a91a:	lea    rbx,[rcx+rax*8+0x10]
   14000a91f:	mov    rcx,QWORD PTR [rsi]
   14000a922:	mov    QWORD PTR [rsp+0x70],rbx
   14000a927:	mov    eax,DWORD PTR [rcx]
   14000a929:	cmp    eax,0x1
   14000a92c:	je     0x14000a93d
   14000a92e:	test   eax,eax
   14000a930:	je     0x14000a93d
   14000a932:	mov    edx,DWORD PTR [rcx+0x4]
   14000a935:	mov    rcx,rsi
   14000a938:	call   0x140002770
   14000a93d:	mov    rcx,QWORD PTR [rsi]
   14000a940:	movsxd rax,DWORD PTR [rcx+0xc]
   14000a944:	lea    rcx,[rcx+rax*8+0x10]
   14000a949:	cmp    rbx,rcx
   14000a94c:	je     0x14000b36e
   14000a952:	mov    rax,QWORD PTR [rip+0x20f27]        # 0x14002b880
   14000a959:	mov    rcx,QWORD PTR [rbx]
   14000a95c:	lea    rdx,[rsp+0x78]
   14000a961:	mov    QWORD PTR [rsp+0x68],rax
   14000a966:	mov    rax,QWORD PTR [rip+0x20f1b]        # 0x14002b888
   14000a96d:	mov    QWORD PTR [rsp+0x20],rax
   14000a972:	call   0x14000b750
   14000a977:	mov    rdx,QWORD PTR [rax]
   14000a97a:	mov    rdi,rax
   14000a97d:	mov    QWORD PTR [rsp+0x48],rdx
   14000a982:	mov    ecx,DWORD PTR [rdx]
   14000a984:	test   ecx,ecx
   14000a986:	je     0x14000a997
   14000a988:	cmp    ecx,0xffffffff
   14000a98b:	je     0x14000aa12
   14000a991:	lock add DWORD PTR [rdx],0x1
   14000a995:	jmp    0x14000aa0d
   14000a997:	mov    edx,DWORD PTR [rdx+0x4]
   14000a99a:	lea    rcx,[rsp+0x48]
   14000a99f:	call   QWORD PTR [rip+0x20eb3]        # 0x14002b858
   14000a9a5:	mov    rdx,QWORD PTR [rsp+0x48]
   14000a9aa:	mov    rcx,QWORD PTR [rdi]
   14000a9ad:	movsxd rax,DWORD PTR [rdx+0xc]
   14000a9b1:	lea    r13,[rdx+rax*8+0x10]
   14000a9b6:	movsxd rax,DWORD PTR [rcx+0x8]
   14000a9ba:	lea    r12,[rcx+rax*8+0x10]
   14000a9bf:	movsxd rax,DWORD PTR [rdx+0x8]
   14000a9c3:	lea    rbp,[rdx+rax*8+0x10]
   14000a9c8:	cmp    rbp,r13
   14000a9cb:	je     0x14000aa12
   14000a9cd:	nop    DWORD PTR [rax]
   14000a9d0:	mov    ecx,0x10
   14000a9d5:	call   0x14002952a
   14000a9da:	mov    rsi,rax
   14000a9dd:	test   rax,rax
   14000a9e0:	je     0x14000a9fa
   14000a9e2:	mov    rdi,QWORD PTR [r12]
   14000a9e6:	mov    rcx,rax
   14000a9e9:	mov    rdx,rdi
   14000a9ec:	call   QWORD PTR [rip+0x20eae]        # 0x14002b8a0
   14000a9f2:	mov    edx,DWORD PTR [rdi+0x8]
   14000a9f5:	mov    DWORD PTR [rsi+0x8],edx
   14000a9f8:	jmp    0x14000a9fc
   14000a9fa:	xor    esi,esi
   14000a9fc:	mov    QWORD PTR [rbp+0x0],rsi
   14000aa00:	add    rbp,0x8
   14000aa04:	add    r12,0x8
   14000aa08:	cmp    rbp,r13
   14000aa0b:	jne    0x14000a9d0
   14000aa0d:	mov    rdx,QWORD PTR [rsp+0x48]
   14000aa12:	mov    rbp,QWORD PTR [rsp+0x78]
   14000aa17:	mov    DWORD PTR [rsp+0x50],0x0
   14000aa1f:	movsxd rax,DWORD PTR [rdx+0x8]
   14000aa23:	lea    rcx,[rdx+rax*8+0x10]
   14000aa28:	mov    QWORD PTR [rsp+0x58],rcx
   14000aa2d:	movsxd rax,DWORD PTR [rdx+0xc]
   14000aa31:	lea    rcx,[rdx+rax*8+0x10]
   14000aa36:	mov    QWORD PTR [rsp+0x60],rcx
   14000aa3b:	mov    eax,DWORD PTR [rbp+0x0]
   14000aa3e:	test   eax,eax
   14000aa40:	je     0x14000aa58
   14000aa42:	cmp    eax,0xffffffff
   14000aa45:	je     0x14000aaa0
   14000aa47:	lock add DWORD PTR [rbp+0x0],0xffffffff
   14000aa4c:	setne  al
   14000aa4f:	test   al,al
   14000aa51:	jne    0x14000aaa0
   14000aa53:	mov    rbp,QWORD PTR [rsp+0x78]
   14000aa58:	movsxd rax,DWORD PTR [rbp+0xc]
   14000aa5c:	lea    rdi,[rbp+rax*8+0x10]
   14000aa61:	movsxd rax,DWORD PTR [rbp+0x8]
   14000aa65:	lea    r12,[rbp+rax*8+0x10]
   14000aa6a:	cmp    r12,rdi
   14000aa6d:	je     0x14000aa93
   14000aa6f:	nop
   14000aa70:	mov    rsi,QWORD PTR [rdi-0x8]
   14000aa74:	sub    rdi,0x8
   14000aa78:	test   rsi,rsi
   14000aa7b:	je     0x14000aa8e
   14000aa7d:	mov    rcx,rsi
   14000aa80:	call   QWORD PTR [rip+0x20e12]        # 0x14002b898
   14000aa86:	mov    rcx,rsi
   14000aa89:	call   0x140029524
   14000aa8e:	cmp    rdi,r12
   14000aa91:	jne    0x14000aa70
   14000aa93:	mov    rcx,rbp
   14000aa96:	call   QWORD PTR [rip+0x20dd4]        # 0x14002b870
   14000aa9c:	nop    DWORD PTR [rax+0x0]
   14000aaa0:	mov    eax,DWORD PTR [rsp+0x50]
   14000aaa4:	inc    DWORD PTR [rsp+0x50]
   14000aaa8:	test   eax,eax
   14000aaaa:	jne    0x14000aabd
   14000aaac:	mov    rax,QWORD PTR [rsp+0x60]
   14000aab1:	cmp    QWORD PTR [rsp+0x58],rax
   14000aab6:	je     0x14000aabd
   14000aab8:	mov    r13b,0x1
   14000aabb:	jmp    0x14000aac0
   14000aabd:	xor    r13b,r13b
   14000aac0:	test   r14b,0x2
   14000aac4:	je     0x14000ab3d
   14000aac6:	mov    rbp,QWORD PTR [rsp+0x90]
   14000aace:	and    r14d,0xfffffffd
   14000aad2:	mov    eax,DWORD PTR [rbp+0x0]
   14000aad5:	mov    DWORD PTR [rsp+0x138],r14d
   14000aadd:	test   eax,eax
   14000aadf:	je     0x14000aaf2
   14000aae1:	cmp    eax,0xffffffff
   14000aae4:	je     0x14000ab3d
   14000aae6:	lock add DWORD PTR [rbp+0x0],0xffffffff
   14000aaeb:	setne  al
   14000aaee:	test   al,al
   14000aaf0:	jne    0x14000ab3d
   14000aaf2:	mov    rbp,QWORD PTR [rsp+0x90]
   14000aafa:	movsxd rax,DWORD PTR [rbp+0xc]
   14000aafe:	lea    rdi,[rbp+rax*8+0x10]
   14000ab03:	movsxd rax,DWORD PTR [rbp+0x8]
   14000ab07:	lea    r12,[rbp+rax*8+0x10]
   14000ab0c:	cmp    r12,rdi
   14000ab0f:	je     0x14000ab34
   14000ab11:	mov    rsi,QWORD PTR [rdi-0x8]
   14000ab15:	sub    rdi,0x8
   14000ab19:	test   rsi,rsi
   14000ab1c:	je     0x14000ab2f
   14000ab1e:	mov    rcx,rsi
   14000ab21:	call   QWORD PTR [rip+0x20d71]        # 0x14002b898
   14000ab27:	mov    rcx,rsi
   14000ab2a:	call   0x140029524
   14000ab2f:	cmp    rdi,r12
   14000ab32:	jne    0x14000ab11
   14000ab34:	mov    rcx,rbp
   14000ab37:	call   QWORD PTR [rip+0x20d33]        # 0x14002b870
   14000ab3d:	test   r13b,r13b
   14000ab40:	je     0x14000b248
   14000ab46:	mov    rax,QWORD PTR [rsp+0x58]
   14000ab4b:	mov    rbx,QWORD PTR [rax]
   14000ab4e:	test   r14b,0x4
   14000ab52:	je     0x14000abd0
   14000ab58:	mov    rbp,QWORD PTR [rsp+0x98]
   14000ab60:	and    r14d,0xfffffffb
   14000ab64:	mov    eax,DWORD PTR [rbp+0x0]
   14000ab67:	mov    DWORD PTR [rsp+0x138],r14d
   14000ab6f:	test   eax,eax
   14000ab71:	je     0x14000ab8c
   14000ab73:	cmp    eax,0xffffffff
   14000ab76:	je     0x14000abd0
   14000ab78:	lock add DWORD PTR [rbp+0x0],0xffffffff
   14000ab7d:	setne  al
   14000ab80:	test   al,al
   14000ab82:	jne    0x14000abd0
   14000ab84:	mov    rbp,QWORD PTR [rsp+0x98]
   14000ab8c:	movsxd rax,DWORD PTR [rbp+0xc]
   14000ab90:	lea    rdi,[rbp+rax*8+0x10]
   14000ab95:	movsxd rax,DWORD PTR [rbp+0x8]
   14000ab99:	lea    r12,[rbp+rax*8+0x10]
   14000ab9e:	cmp    r12,rdi
   14000aba1:	je     0x14000abc6
   14000aba3:	mov    rsi,QWORD PTR [rdi-0x8]
   14000aba7:	sub    rdi,0x8
   14000abab:	test   rsi,rsi
   14000abae:	je     0x14000abc1
   14000abb0:	mov    rcx,rsi
   14000abb3:	call   QWORD PTR [rip+0x20cdf]        # 0x14002b898
   14000abb9:	mov    rcx,rsi
   14000abbc:	call   0x140029524
   14000abc1:	cmp    rdi,r12
   14000abc4:	jne    0x14000aba3
   14000abc6:	mov    rcx,rbp
   14000abc9:	call   QWORD PTR [rip+0x20ca1]        # 0x14002b870
   14000abcf:	nop
   14000abd0:	mov    r13d,DWORD PTR [rsp+0x50]
   14000abd5:	test   r14b,0x10
   14000abd9:	je     0x14000ac5c
   14000abdf:	mov    rbp,QWORD PTR [rsp+0xa8]
   14000abe7:	and    r14d,0xffffffef
   14000abeb:	mov    eax,DWORD PTR [rbp+0x0]
   14000abee:	mov    DWORD PTR [rsp+0x138],r14d
   14000abf6:	test   eax,eax
   14000abf8:	je     0x14000ac0b
   14000abfa:	cmp    eax,0xffffffff
   14000abfd:	je     0x14000ac5c
   14000abff:	lock add DWORD PTR [rbp+0x0],0xffffffff
   14000ac04:	setne  al
   14000ac07:	test   al,al
   14000ac09:	jne    0x14000ac5c
   14000ac0b:	mov    rbp,QWORD PTR [rsp+0xa8]
   14000ac13:	movsxd rax,DWORD PTR [rbp+0xc]
   14000ac17:	lea    rdi,[rbp+rax*8+0x10]
   14000ac1c:	movsxd rax,DWORD PTR [rbp+0x8]
   14000ac20:	lea    r12,[rbp+rax*8+0x10]
   14000ac25:	cmp    r12,rdi
   14000ac28:	je     0x14000ac53
   14000ac2a:	nop    WORD PTR [rax+rax*1+0x0]
   14000ac30:	mov    rsi,QWORD PTR [rdi-0x8]
   14000ac34:	sub    rdi,0x8
   14000ac38:	test   rsi,rsi
   14000ac3b:	je     0x14000ac4e
   14000ac3d:	mov    rcx,rsi
   14000ac40:	call   QWORD PTR [rip+0x20c52]        # 0x14002b898
   14000ac46:	mov    rcx,rsi
   14000ac49:	call   0x140029524
   14000ac4e:	cmp    rdi,r12
   14000ac51:	jne    0x14000ac30
   14000ac53:	mov    rcx,rbp
   14000ac56:	call   QWORD PTR [rip+0x20c14]        # 0x14002b870
   14000ac5c:	test   r13d,r13d
   14000ac5f:	je     0x14000b1b9
   14000ac65:	lea    rcx,[rsp+0x40]
   14000ac6a:	mov    rdx,rbx
   14000ac6d:	call   QWORD PTR [rip+0x20c2d]        # 0x14002b8a0
   14000ac73:	lea    rdx,[rsp+0x80]
   14000ac7b:	lea    rcx,[rsp+0x40]
   14000ac80:	mov    r8d,0x1
   14000ac86:	call   QWORD PTR [rip+0x2066c]        # 0x14002b2f8
   14000ac8c:	test   al,al
   14000ac8e:	jne    0x14000aed1
   14000ac94:	lea    rdx,[rsp+0x88]
   14000ac9c:	lea    rcx,[rsp+0x40]
   14000aca1:	mov    r8d,0x1
   14000aca7:	call   QWORD PTR [rip+0x2064b]        # 0x14002b2f8
   14000acad:	test   al,al
   14000acaf:	jne    0x14000aed1
   14000acb5:	mov    rax,QWORD PTR [rsp+0x20]
   14000acba:	mov    ecx,DWORD PTR [rax]
   14000acbc:	cmp    ecx,0x1
   14000acbf:	je     0x14000ae8d
   14000acc5:	test   ecx,ecx
   14000acc7:	je     0x14000ae8d
   14000accd:	mov    DWORD PTR [rsp+0x140],0x7fffffff
   14000acd8:	movsxd rcx,DWORD PTR [rax+0x8]
   14000acdc:	lea    rdx,[rsp+0x140]
   14000ace4:	lea    r15,[rax+rcx*8+0x10]
   14000ace9:	lea    rcx,[rsp+0x20]
   14000acee:	mov    r8d,0x1
   14000acf4:	call   QWORD PTR [rip+0x20b56]        # 0x14002b850
   14000acfa:	mov    rdi,QWORD PTR [rsp+0x20]
   14000acff:	movsxd rcx,DWORD PTR [rsp+0x140]
   14000ad07:	movsxd rdx,DWORD PTR [rdi+0x8]
   14000ad0b:	mov    r14,rax
   14000ad0e:	mov    r12,r15
   14000ad11:	add    rcx,rdx
   14000ad14:	lea    rbp,[rdi+rdx*8+0x10]
   14000ad19:	lea    r13,[rdi+rcx*8+0x10]
   14000ad1e:	cmp    rbp,r13
   14000ad21:	je     0x14000ad65
   14000ad23:	mov    ecx,0x10
   14000ad28:	call   0x14002952a
   14000ad2d:	mov    rsi,rax
   14000ad30:	test   rax,rax
   14000ad33:	je     0x14000ad4d
   14000ad35:	mov    rdi,QWORD PTR [r12]
   14000ad39:	mov    rcx,rax
   14000ad3c:	mov    rdx,rdi
   14000ad3f:	call   QWORD PTR [rip+0x20b5b]        # 0x14002b8a0
   14000ad45:	mov    edx,DWORD PTR [rdi+0x8]
   14000ad48:	mov    DWORD PTR [rsi+0x8],edx
   14000ad4b:	jmp    0x14000ad4f
   14000ad4d:	xor    esi,esi
   14000ad4f:	mov    QWORD PTR [rbp+0x0],rsi
   14000ad53:	add    rbp,0x8
   14000ad57:	add    r12,0x8
   14000ad5b:	cmp    rbp,r13
   14000ad5e:	jne    0x14000ad23
   14000ad60:	mov    rdi,QWORD PTR [rsp+0x20]
   14000ad65:	movsxd rax,DWORD PTR [rdi+0xc]
   14000ad69:	movsxd rcx,DWORD PTR [rsp+0x140]
   14000ad71:	lea    r13,[rdi+rax*8+0x10]
   14000ad76:	movsxd rax,DWORD PTR [rdi+0x8]
   14000ad7a:	lea    r12,[r15+rcx*8]
   14000ad7e:	add    rax,rcx
   14000ad81:	lea    rbp,[rdi+rax*8+0x18]
   14000ad86:	cmp    rbp,r13
   14000ad89:	je     0x14000add2
   14000ad8b:	nop    DWORD PTR [rax+rax*1+0x0]
   14000ad90:	mov    ecx,0x10
   14000ad95:	call   0x14002952a
   14000ad9a:	mov    rsi,rax
   14000ad9d:	test   rax,rax
   14000ada0:	je     0x14000adba
   14000ada2:	mov    rdi,QWORD PTR [r12]
   14000ada6:	mov    rcx,rax
   14000ada9:	mov    rdx,rdi
   14000adac:	call   QWORD PTR [rip+0x20aee]        # 0x14002b8a0
   14000adb2:	mov    edx,DWORD PTR [rdi+0x8]
   14000adb5:	mov    DWORD PTR [rsi+0x8],edx
   14000adb8:	jmp    0x14000adbc
   14000adba:	xor    esi,esi
   14000adbc:	mov    QWORD PTR [rbp+0x0],rsi
   14000adc0:	add    rbp,0x8
   14000adc4:	add    r12,0x8
   14000adc8:	cmp    rbp,r13
   14000adcb:	jne    0x14000ad90
   14000adcd:	mov    rdi,QWORD PTR [rsp+0x20]
   14000add2:	mov    eax,DWORD PTR [r14]
   14000add5:	test   eax,eax
   14000add7:	je     0x14000adea
   14000add9:	cmp    eax,0xffffffff
   14000addc:	je     0x14000ae32
   14000adde:	lock add DWORD PTR [r14],0xffffffff
   14000ade3:	setne  al
   14000ade6:	test   al,al
   14000ade8:	jne    0x14000ae2d
   14000adea:	movsxd rax,DWORD PTR [r14+0xc]
   14000adee:	lea    rdi,[r14+rax*8+0x10]
   14000adf3:	movsxd rax,DWORD PTR [r14+0x8]
   14000adf7:	lea    rbp,[r14+rax*8+0x10]
   14000adfc:	cmp    rbp,rdi
   14000adff:	je     0x14000ae24
   14000ae01:	mov    rsi,QWORD PTR [rdi-0x8]
   14000ae05:	sub    rdi,0x8
   14000ae09:	test   rsi,rsi
   14000ae0c:	je     0x14000ae1f
   14000ae0e:	mov    rcx,rsi
   14000ae11:	call   QWORD PTR [rip+0x20a81]        # 0x14002b898
   14000ae17:	mov    rcx,rsi
   14000ae1a:	call   0x140029524
   14000ae1f:	cmp    rdi,rbp
   14000ae22:	jne    0x14000ae01
   14000ae24:	mov    rcx,r14
   14000ae27:	call   QWORD PTR [rip+0x20a43]        # 0x14002b870
   14000ae2d:	mov    rdi,QWORD PTR [rsp+0x20]
   14000ae32:	movsxd rbp,DWORD PTR [rdi+0x8]
   14000ae36:	movsxd rax,DWORD PTR [rsp+0x140]
   14000ae3e:	mov    ecx,0x10
   14000ae43:	add    rbp,rax
   14000ae46:	call   0x14002952a
   14000ae4b:	mov    rsi,rax
   14000ae4e:	test   rax,rax
   14000ae51:	je     0x14000ae79
   14000ae53:	mov    rdx,rbx
   14000ae56:	mov    rcx,rax
   14000ae59:	call   QWORD PTR [rip+0x20a41]        # 0x14002b8a0
   14000ae5f:	mov    r11d,DWORD PTR [rbx+0x8]
   14000ae63:	mov    r14d,DWORD PTR [rsp+0x138]
   14000ae6b:	mov    DWORD PTR [rsi+0x8],r11d
   14000ae6f:	mov    QWORD PTR [rdi+rbp*8+0x10],rsi
   14000ae74:	jmp    0x14000b121
   14000ae79:	mov    r14d,DWORD PTR [rsp+0x138]
   14000ae81:	xor    esi,esi
   14000ae83:	mov    QWORD PTR [rdi+rbp*8+0x10],rsi
   14000ae88:	jmp    0x14000b121
   14000ae8d:	lea    rcx,[rsp+0x20]
   14000ae92:	call   QWORD PTR [rip+0x209a8]        # 0x14002b840
   14000ae98:	mov    ecx,0x10
   14000ae9d:	mov    rsi,rax
   14000aea0:	call   0x14002952a
   14000aea5:	mov    rdi,rax
   14000aea8:	test   rax,rax
   14000aeab:	je     0x14000aec7
   14000aead:	mov    rdx,rbx
   14000aeb0:	mov    rcx,rax
   14000aeb3:	call   QWORD PTR [rip+0x209e7]        # 0x14002b8a0
   14000aeb9:	mov    edx,DWORD PTR [rbx+0x8]
   14000aebc:	mov    DWORD PTR [rdi+0x8],edx
   14000aebf:	mov    QWORD PTR [rsi],rdi
   14000aec2:	jmp    0x14000b121
   14000aec7:	xor    edi,edi
   14000aec9:	mov    QWORD PTR [rsi],rdi
   14000aecc:	jmp    0x14000b121
   14000aed1:	lea    rdx,[rsp+0x40]
   14000aed6:	lea    rcx,[rsp+0x68]
   14000aedb:	call   0x140006180
   14000aee0:	inc    DWORD PTR [rax]
   14000aee2:	cmp    DWORD PTR [rax],0x1
   14000aee5:	jne    0x14000b121
   14000aeeb:	lea    rdx,[rsp+0x40]
   14000aef0:	lea    rcx,[rsp+0x30]
   14000aef5:	call   QWORD PTR [rip+0x209a5]        # 0x14002b8a0
   14000aefb:	mov    rax,QWORD PTR [rsp+0x20]
   14000af00:	mov    DWORD PTR [rsp+0x38],0xffffffff
   14000af08:	mov    ecx,DWORD PTR [rax]
   14000af0a:	cmp    ecx,0x1
   14000af0d:	je     0x14000b0da
   14000af13:	test   ecx,ecx
   14000af15:	je     0x14000b0da
   14000af1b:	mov    DWORD PTR [rsp+0x148],0x7fffffff
   14000af26:	movsxd rcx,DWORD PTR [rax+0x8]
   14000af2a:	lea    rdx,[rsp+0x148]
   14000af32:	lea    r15,[rax+rcx*8+0x10]
   14000af37:	lea    rcx,[rsp+0x20]
   14000af3c:	mov    r8d,0x1
   14000af42:	call   QWORD PTR [rip+0x20908]        # 0x14002b850
   14000af48:	mov    rdi,QWORD PTR [rsp+0x20]
   14000af4d:	movsxd rcx,DWORD PTR [rsp+0x148]
   14000af55:	movsxd rdx,DWORD PTR [rdi+0x8]
   14000af59:	mov    r14,rax
   14000af5c:	mov    r12,r15
   14000af5f:	add    rcx,rdx
   14000af62:	lea    rbp,[rdi+rdx*8+0x10]
   14000af67:	lea    r13,[rdi+rcx*8+0x10]
   14000af6c:	cmp    rbp,r13
   14000af6f:	je     0x14000afb3
   14000af71:	mov    ecx,0x10
   14000af76:	call   0x14002952a
   14000af7b:	mov    rsi,rax
   14000af7e:	test   rax,rax
   14000af81:	je     0x14000af9b
   14000af83:	mov    rdi,QWORD PTR [r12]
   14000af87:	mov    rcx,rax
   14000af8a:	mov    rdx,rdi
   14000af8d:	call   QWORD PTR [rip+0x2090d]        # 0x14002b8a0
   14000af93:	mov    edx,DWORD PTR [rdi+0x8]
   14000af96:	mov    DWORD PTR [rsi+0x8],edx
   14000af99:	jmp    0x14000af9d
   14000af9b:	xor    esi,esi
   14000af9d:	mov    QWORD PTR [rbp+0x0],rsi
   14000afa1:	add    rbp,0x8
   14000afa5:	add    r12,0x8
   14000afa9:	cmp    rbp,r13
   14000afac:	jne    0x14000af71
   14000afae:	mov    rdi,QWORD PTR [rsp+0x20]
   14000afb3:	movsxd rax,DWORD PTR [rdi+0xc]
   14000afb7:	movsxd rcx,DWORD PTR [rsp+0x148]
   14000afbf:	lea    r13,[rdi+rax*8+0x10]
   14000afc4:	movsxd rax,DWORD PTR [rdi+0x8]
   14000afc8:	lea    r12,[r15+rcx*8]
   14000afcc:	add    rax,rcx
   14000afcf:	lea    rbp,[rdi+rax*8+0x18]
   14000afd4:	cmp    rbp,r13
   14000afd7:	je     0x14000b022
   14000afd9:	nop    DWORD PTR [rax+0x0]
   14000afe0:	mov    ecx,0x10
   14000afe5:	call   0x14002952a
   14000afea:	mov    rsi,rax
   14000afed:	test   rax,rax
   14000aff0:	je     0x14000b00a
   14000aff2:	mov    rdi,QWORD PTR [r12]
   14000aff6:	mov    rcx,rax
   14000aff9:	mov    rdx,rdi
   14000affc:	call   QWORD PTR [rip+0x2089e]        # 0x14002b8a0
   14000b002:	mov    edx,DWORD PTR [rdi+0x8]
   14000b005:	mov    DWORD PTR [rsi+0x8],edx
   14000b008:	jmp    0x14000b00c
   14000b00a:	xor    esi,esi
   14000b00c:	mov    QWORD PTR [rbp+0x0],rsi
   14000b010:	add    rbp,0x8
   14000b014:	add    r12,0x8
   14000b018:	cmp    rbp,r13
   14000b01b:	jne    0x14000afe0
   14000b01d:	mov    rdi,QWORD PTR [rsp+0x20]
   14000b022:	mov    eax,DWORD PTR [r14]
   14000b025:	test   eax,eax
   14000b027:	je     0x14000b03a
   14000b029:	cmp    eax,0xffffffff
   14000b02c:	je     0x14000b082
   14000b02e:	lock add DWORD PTR [r14],0xffffffff
   14000b033:	setne  al
   14000b036:	test   al,al
   14000b038:	jne    0x14000b07d
   14000b03a:	movsxd rax,DWORD PTR [r14+0xc]
   14000b03e:	lea    rdi,[r14+rax*8+0x10]
   14000b043:	movsxd rax,DWORD PTR [r14+0x8]
   14000b047:	lea    rbp,[r14+rax*8+0x10]
   14000b04c:	cmp    rbp,rdi
   14000b04f:	je     0x14000b074
   14000b051:	mov    rsi,QWORD PTR [rdi-0x8]
   14000b055:	sub    rdi,0x8
   14000b059:	test   rsi,rsi
   14000b05c:	je     0x14000b06f
   14000b05e:	mov    rcx,rsi
   14000b061:	call   QWORD PTR [rip+0x20831]        # 0x14002b898
   14000b067:	mov    rcx,rsi
   14000b06a:	call   0x140029524
   14000b06f:	cmp    rdi,rbp
   14000b072:	jne    0x14000b051
   14000b074:	mov    rcx,r14
   14000b077:	call   QWORD PTR [rip+0x207f3]        # 0x14002b870
   14000b07d:	mov    rdi,QWORD PTR [rsp+0x20]
   14000b082:	movsxd rbp,DWORD PTR [rdi+0x8]
   14000b086:	movsxd rax,DWORD PTR [rsp+0x148]
   14000b08e:	mov    ecx,0x10
   14000b093:	add    rbp,rax
   14000b096:	call   0x14002952a
   14000b09b:	mov    rsi,rax
   14000b09e:	test   rax,rax
   14000b0a1:	je     0x14000b0c9
   14000b0a3:	lea    rdx,[rsp+0x30]
   14000b0a8:	mov    rcx,rax
   14000b0ab:	call   QWORD PTR [rip+0x207ef]        # 0x14002b8a0
   14000b0b1:	mov    r11d,DWORD PTR [rsp+0x38]
   14000b0b6:	mov    r14d,DWORD PTR [rsp+0x138]
   14000b0be:	mov    DWORD PTR [rsi+0x8],r11d
   14000b0c2:	mov    QWORD PTR [rdi+rbp*8+0x10],rsi
   14000b0c7:	jmp    0x14000b116
   14000b0c9:	mov    r14d,DWORD PTR [rsp+0x138]
   14000b0d1:	xor    esi,esi
   14000b0d3:	mov    QWORD PTR [rdi+rbp*8+0x10],rsi
   14000b0d8:	jmp    0x14000b116
   14000b0da:	lea    rcx,[rsp+0x20]
   14000b0df:	call   QWORD PTR [rip+0x2075b]        # 0x14002b840
   14000b0e5:	mov    ecx,0x10
   14000b0ea:	mov    rsi,rax
   14000b0ed:	call   0x14002952a
   14000b0f2:	mov    rdi,rax
   14000b0f5:	test   rax,rax
   14000b0f8:	je     0x14000b111
   14000b0fa:	lea    rdx,[rsp+0x30]
   14000b0ff:	mov    rcx,rax
   14000b102:	call   QWORD PTR [rip+0x20798]        # 0x14002b8a0
   14000b108:	mov    edx,DWORD PTR [rsp+0x38]
   14000b10c:	mov    DWORD PTR [rdi+0x8],edx
   14000b10f:	jmp    0x14000b113
   14000b111:	xor    edi,edi
   14000b113:	mov    QWORD PTR [rsi],rdi
   14000b116:	lea    rcx,[rsp+0x30]
   14000b11b:	call   QWORD PTR [rip+0x20777]        # 0x14002b898
   14000b121:	lea    rcx,[rsp+0x40]
   14000b126:	call   QWORD PTR [rip+0x2076c]        # 0x14002b898
   14000b12c:	dec    DWORD PTR [rsp+0x50]
   14000b130:	test   r14b,0x8
   14000b134:	je     0x14000abd0
   14000b13a:	mov    rbp,QWORD PTR [rsp+0xa0]
   14000b142:	and    r14d,0xfffffff7
   14000b146:	mov    eax,DWORD PTR [rbp+0x0]
   14000b149:	mov    DWORD PTR [rsp+0x138],r14d
   14000b151:	test   eax,eax
   14000b153:	je     0x14000b16e
   14000b155:	cmp    eax,0xffffffff
   14000b158:	je     0x14000abd0
   14000b15e:	lock add DWORD PTR [rbp+0x0],0xffffffff
   14000b163:	setne  al
   14000b166:	test   al,al
   14000b168:	jne    0x14000abd0
   14000b16e:	mov    rbp,QWORD PTR [rsp+0xa0]
   14000b176:	movsxd rax,DWORD PTR [rbp+0xc]
   14000b17a:	lea    rdi,[rbp+rax*8+0x10]
   14000b17f:	movsxd rax,DWORD PTR [rbp+0x8]
   14000b183:	lea    r12,[rbp+rax*8+0x10]
   14000b188:	cmp    r12,rdi
   14000b18b:	je     0x14000abc6
   14000b191:	mov    rsi,QWORD PTR [rdi-0x8]
   14000b195:	sub    rdi,0x8
   14000b199:	test   rsi,rsi
   14000b19c:	je     0x14000b1af
   14000b19e:	mov    rcx,rsi
   14000b1a1:	call   QWORD PTR [rip+0x206f1]        # 0x14002b898
   14000b1a7:	mov    rcx,rsi
   14000b1aa:	call   0x140029524
   14000b1af:	cmp    rdi,r12
   14000b1b2:	jne    0x14000b191
   14000b1b4:	jmp    0x14000abc6
   14000b1b9:	add    QWORD PTR [rsp+0x58],0x8
   14000b1bf:	test   r14b,0x1
   14000b1c3:	je     0x14000aaa0
   14000b1c9:	mov    rbp,QWORD PTR [rsp+0xb0]
   14000b1d1:	and    r14d,0xfffffffe
   14000b1d5:	mov    eax,DWORD PTR [rbp+0x0]
   14000b1d8:	mov    DWORD PTR [rsp+0x138],r14d
   14000b1e0:	test   eax,eax
   14000b1e2:	je     0x14000b205
   14000b1e4:	cmp    eax,0xffffffff
   14000b1e7:	je     0x14000aaa0
   14000b1ed:	lock add DWORD PTR [rbp+0x0],0xffffffff
   14000b1f2:	setne  al
   14000b1f5:	test   al,al
   14000b1f7:	jne    0x14000aaa0
   14000b1fd:	mov    rbp,QWORD PTR [rsp+0xb0]
   14000b205:	movsxd rax,DWORD PTR [rbp+0xc]
   14000b209:	lea    rdi,[rbp+rax*8+0x10]
   14000b20e:	movsxd rax,DWORD PTR [rbp+0x8]
   14000b212:	lea    r12,[rbp+rax*8+0x10]
   14000b217:	cmp    r12,rdi
   14000b21a:	je     0x14000aa93
   14000b220:	mov    rsi,QWORD PTR [rdi-0x8]
   14000b224:	sub    rdi,0x8
   14000b228:	test   rsi,rsi
   14000b22b:	je     0x14000b23e
   14000b22d:	mov    rcx,rsi
   14000b230:	call   QWORD PTR [rip+0x20662]        # 0x14002b898
   14000b236:	mov    rcx,rsi
   14000b239:	call   0x140029524
   14000b23e:	cmp    rdi,r12
   14000b241:	jne    0x14000b220
   14000b243:	jmp    0x14000aa93
   14000b248:	mov    rbp,QWORD PTR [rsp+0x48]
   14000b24d:	mov    rbx,QWORD PTR [rsp+0x70]
   14000b252:	mov    eax,DWORD PTR [rbp+0x0]
   14000b255:	test   eax,eax
   14000b257:	je     0x14000b26f
   14000b259:	cmp    eax,0xffffffff
   14000b25c:	je     0x14000b2bc
   14000b25e:	lock add DWORD PTR [rbp+0x0],0xffffffff
   14000b263:	setne  al
   14000b266:	test   al,al
   14000b268:	jne    0x14000b2bc
   14000b26a:	mov    rbp,QWORD PTR [rsp+0x48]
   14000b26f:	movsxd rax,DWORD PTR [rbp+0xc]
   14000b273:	lea    rdi,[rbp+rax*8+0x10]
   14000b278:	movsxd rax,DWORD PTR [rbp+0x8]
   14000b27c:	lea    r12,[rbp+rax*8+0x10]
   14000b281:	cmp    r12,rdi
   14000b284:	je     0x14000b2b3
   14000b286:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000b290:	mov    rsi,QWORD PTR [rdi-0x8]
   14000b294:	sub    rdi,0x8
   14000b298:	test   rsi,rsi
   14000b29b:	je     0x14000b2ae
   14000b29d:	mov    rcx,rsi
   14000b2a0:	call   QWORD PTR [rip+0x205f2]        # 0x14002b898
   14000b2a6:	mov    rcx,rsi
   14000b2a9:	call   0x140029524
   14000b2ae:	cmp    rdi,r12
   14000b2b1:	jne    0x14000b290
   14000b2b3:	mov    rcx,rbp
   14000b2b6:	call   QWORD PTR [rip+0x205b4]        # 0x14002b870
   14000b2bc:	mov    rcx,QWORD PTR [rbx]
   14000b2bf:	lea    rdx,[rsp+0x20]
   14000b2c4:	call   0x14000b880
   14000b2c9:	mov    rbp,QWORD PTR [rsp+0x20]
   14000b2ce:	mov    eax,DWORD PTR [rbp+0x0]
   14000b2d1:	test   eax,eax
   14000b2d3:	je     0x14000b2eb
   14000b2d5:	cmp    eax,0xffffffff
   14000b2d8:	je     0x14000b32e
   14000b2da:	lock add DWORD PTR [rbp+0x0],0xffffffff
   14000b2df:	setne  al
   14000b2e2:	test   al,al
   14000b2e4:	jne    0x14000b32e
   14000b2e6:	mov    rbp,QWORD PTR [rsp+0x20]
   14000b2eb:	movsxd rax,DWORD PTR [rbp+0xc]
   14000b2ef:	lea    rdi,[rbp+rax*8+0x10]
   14000b2f4:	movsxd rax,DWORD PTR [rbp+0x8]
   14000b2f8:	lea    r12,[rbp+rax*8+0x10]
   14000b2fd:	cmp    r12,rdi
   14000b300:	je     0x14000b325
   14000b302:	mov    rsi,QWORD PTR [rdi-0x8]
   14000b306:	sub    rdi,0x8
   14000b30a:	test   rsi,rsi
   14000b30d:	je     0x14000b320
   14000b30f:	mov    rcx,rsi
   14000b312:	call   QWORD PTR [rip+0x20580]        # 0x14002b898
   14000b318:	mov    rcx,rsi
   14000b31b:	call   0x140029524
   14000b320:	cmp    rdi,r12
   14000b323:	jne    0x14000b302
   14000b325:	mov    rcx,rbp
   14000b328:	call   QWORD PTR [rip+0x20542]        # 0x14002b870
   14000b32e:	mov    rcx,QWORD PTR [rsp+0x68]
   14000b333:	mov    eax,DWORD PTR [rcx+0x10]
   14000b336:	test   eax,eax
   14000b338:	je     0x14000b350
   14000b33a:	cmp    eax,0xffffffff
   14000b33d:	je     0x14000b35d
   14000b33f:	lock add DWORD PTR [rcx+0x10],0xffffffff
   14000b344:	setne  al
   14000b347:	test   al,al
   14000b349:	jne    0x14000b35d
   14000b34b:	mov    rcx,QWORD PTR [rsp+0x68]
   14000b350:	lea    rdx,[rip+0xffffffffffff61f9]        # 0x140001550
   14000b357:	call   QWORD PTR [rip+0x2050b]        # 0x14002b868
   14000b35d:	mov    rsi,QWORD PTR [rsp+0x130]
   14000b365:	add    rbx,0x8
   14000b369:	jmp    0x14000a91f
   14000b36e:	lea    rcx,[rsp+0x88]
   14000b376:	call   QWORD PTR [rip+0x2051c]        # 0x14002b898
   14000b37c:	lea    rcx,[rsp+0x80]
   14000b384:	call   QWORD PTR [rip+0x2050e]        # 0x14002b898
   14000b38a:	add    rsp,0xe8
   14000b391:	pop    r15
   14000b393:	pop    r14
   14000b395:	pop    r13
   14000b397:	pop    r12
   14000b399:	pop    rdi
   14000b39a:	pop    rsi
   14000b39b:	pop    rbp
   14000b39c:	pop    rbx
   14000b39d:	ret    
   14000b39e:	int3   
   14000b39f:	int3   
   14000b3a0:	rex push rbx
   14000b3a2:	sub    rsp,0x20
   14000b3a6:	mov    rbx,QWORD PTR [rip+0x204db]        # 0x14002b888
   14000b3ad:	lea    rdx,[rsp+0x38]
   14000b3b2:	mov    QWORD PTR [rsp+0x38],rbx
   14000b3b7:	call   0x140005600
   14000b3bc:	mov    r11d,DWORD PTR [rbx]
   14000b3bf:	test   r11d,r11d
   14000b3c2:	je     0x14000b3da
   14000b3c4:	cmp    r11d,0xffffffff
   14000b3c8:	je     0x14000b43b
   14000b3ca:	lock add DWORD PTR [rbx],0xffffffff
   14000b3ce:	setne  al
   14000b3d1:	test   al,al
   14000b3d3:	jne    0x14000b43b
   14000b3d5:	mov    rbx,QWORD PTR [rsp+0x38]
   14000b3da:	movsxd rax,DWORD PTR [rbx+0xc]
   14000b3de:	mov    QWORD PTR [rsp+0x30],rbp
   14000b3e3:	mov    QWORD PTR [rsp+0x48],rdi
   14000b3e8:	lea    rdi,[rbx+rax*8+0x10]
   14000b3ed:	movsxd rax,DWORD PTR [rbx+0x8]
   14000b3f1:	lea    rbp,[rbx+rax*8+0x10]
   14000b3f6:	cmp    rbp,rdi
   14000b3f9:	je     0x14000b428
   14000b3fb:	mov    QWORD PTR [rsp+0x40],rsi
   14000b400:	mov    rsi,QWORD PTR [rdi-0x8]
   14000b404:	sub    rdi,0x8
   14000b408:	test   rsi,rsi
   14000b40b:	je     0x14000b41e
   14000b40d:	mov    rcx,rsi
   14000b410:	call   QWORD PTR [rip+0x20482]        # 0x14002b898
   14000b416:	mov    rcx,rsi
   14000b419:	call   0x140029524
   14000b41e:	cmp    rdi,rbp
   14000b421:	jne    0x14000b400
   14000b423:	mov    rsi,QWORD PTR [rsp+0x40]
   14000b428:	mov    rcx,rbx
   14000b42b:	call   QWORD PTR [rip+0x2043f]        # 0x14002b870
   14000b431:	mov    rdi,QWORD PTR [rsp+0x48]
   14000b436:	mov    rbp,QWORD PTR [rsp+0x30]
   14000b43b:	add    rsp,0x20
   14000b43f:	pop    rbx
   14000b440:	ret    
   14000b441:	int3   
   14000b442:	int3   
   14000b443:	int3   
   14000b444:	int3   
   14000b445:	int3   
   14000b446:	int3   
   14000b447:	int3   
   14000b448:	int3   
   14000b449:	int3   
   14000b44a:	int3   
   14000b44b:	int3   
   14000b44c:	int3   
   14000b44d:	int3   
   14000b44e:	int3   
   14000b44f:	int3   
   14000b450:	mov    QWORD PTR [rsp+0x8],rbx
   14000b455:	push   rdi
   14000b456:	sub    rsp,0x20
   14000b45a:	mov    rax,QWORD PTR [rdx]
   14000b45d:	mov    rdi,rdx
   14000b460:	mov    rbx,rcx
   14000b463:	mov    r8d,DWORD PTR [rax+0xc]
   14000b467:	mov    edx,DWORD PTR [rax+0x8]
   14000b46a:	cmp    r8d,edx
   14000b46d:	je     0x14000b4e2
   14000b46f:	mov    rcx,QWORD PTR [rcx]
   14000b472:	mov    eax,DWORD PTR [rcx+0x8]
   14000b475:	cmp    DWORD PTR [rcx+0xc],eax
   14000b478:	jne    0x14000b493
   14000b47a:	mov    rdx,rdi
   14000b47d:	mov    rcx,rbx
   14000b480:	call   0x140005600
   14000b485:	mov    rax,rbx
   14000b488:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b48d:	add    rsp,0x20
   14000b491:	pop    rdi
   14000b492:	ret    
   14000b493:	mov    eax,DWORD PTR [rcx]
   14000b495:	cmp    eax,0x1
   14000b498:	je     0x14000b4b0
   14000b49a:	test   eax,eax
   14000b49c:	je     0x14000b4b0
   14000b49e:	sub    r8d,edx
   14000b4a1:	mov    rcx,rbx
   14000b4a4:	mov    edx,0x7fffffff
   14000b4a9:	call   0x1400058b0
   14000b4ae:	jmp    0x14000b4bc
   14000b4b0:	mov    rdx,rdi
   14000b4b3:	mov    rcx,rbx
   14000b4b6:	call   QWORD PTR [rip+0x1ff0c]        # 0x14002b3c8
   14000b4bc:	mov    rcx,QWORD PTR [rdi]
   14000b4bf:	mov    rdx,QWORD PTR [rbx]
   14000b4c2:	mov    r11,rax
   14000b4c5:	movsxd rax,DWORD PTR [rcx+0x8]
   14000b4c9:	lea    r9,[rcx+rax*8+0x10]
   14000b4ce:	movsxd rax,DWORD PTR [rdx+0xc]
   14000b4d2:	mov    rcx,rbx
   14000b4d5:	lea    r8,[rdx+rax*8+0x10]
   14000b4da:	mov    rdx,r11
   14000b4dd:	call   0x1400014c0
   14000b4e2:	mov    rax,rbx
   14000b4e5:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b4ea:	add    rsp,0x20
   14000b4ee:	pop    rdi
   14000b4ef:	ret    
   14000b4f0:	rex push rbx
   14000b4f2:	sub    rsp,0x20
   14000b4f6:	mov    rbx,rcx
   14000b4f9:	call   QWORD PTR [rip+0x20391]        # 0x14002b890
   14000b4ff:	lea    rcx,[rbx+0x8]
   14000b503:	call   QWORD PTR [rip+0x20387]        # 0x14002b890
   14000b509:	lea    rcx,[rbx+0x10]
   14000b50d:	call   QWORD PTR [rip+0x2037d]        # 0x14002b890
   14000b513:	lea    rcx,[rbx+0x18]
   14000b517:	call   QWORD PTR [rip+0x20373]        # 0x14002b890
   14000b51d:	lea    rcx,[rbx+0x20]
   14000b521:	call   QWORD PTR [rip+0x20369]        # 0x14002b890
   14000b527:	lea    rcx,[rbx+0x28]
   14000b52b:	call   QWORD PTR [rip+0x2035f]        # 0x14002b890
   14000b531:	lea    rcx,[rbx+0x30]
   14000b535:	call   QWORD PTR [rip+0x20355]        # 0x14002b890
   14000b53b:	mov    r11,QWORD PTR [rip+0x2033e]        # 0x14002b880
   14000b542:	lea    rcx,[rbx+0x40]
   14000b546:	mov    QWORD PTR [rbx+0x38],r11
   14000b54a:	call   QWORD PTR [rip+0x20340]        # 0x14002b890
   14000b550:	lea    rcx,[rbx+0x48]
   14000b554:	call   QWORD PTR [rip+0x20336]        # 0x14002b890
   14000b55a:	mov    r11,QWORD PTR [rip+0x20327]        # 0x14002b888
   14000b561:	lea    rcx,[rbx+0x58]
   14000b565:	mov    QWORD PTR [rbx+0x50],r11
   14000b569:	call   QWORD PTR [rip+0x20321]        # 0x14002b890
   14000b56f:	mov    DWORD PTR [rbx+0x60],0xffffffff
   14000b576:	mov    rax,QWORD PTR [rip+0x2030b]        # 0x14002b888
   14000b57d:	mov    QWORD PTR [rbx+0x68],rax
   14000b581:	mov    DWORD PTR [rbx+0x70],0x0
   14000b588:	mov    BYTE PTR [rbx+0x74],0x0
   14000b58c:	mov    rax,rbx
   14000b58f:	add    rsp,0x20
   14000b593:	pop    rbx
   14000b594:	ret    
   14000b595:	int3   
   14000b596:	int3   
   14000b597:	int3   
   14000b598:	int3   
   14000b599:	int3   
   14000b59a:	int3   
   14000b59b:	int3   
   14000b59c:	int3   
   14000b59d:	int3   
   14000b59e:	int3   
   14000b59f:	int3   
   14000b5a0:	mov    QWORD PTR [rsp+0x8],rbx
   14000b5a5:	mov    QWORD PTR [rsp+0x10],rbp
   14000b5aa:	mov    QWORD PTR [rsp+0x18],rsi
   14000b5af:	push   rdi
   14000b5b0:	sub    rsp,0x20
   14000b5b4:	mov    rsi,r9
   14000b5b7:	mov    rdi,r8
   14000b5ba:	mov    rbx,rdx
   14000b5bd:	mov    rbp,rcx
   14000b5c0:	call   QWORD PTR [rip+0x202ca]        # 0x14002b890
   14000b5c6:	lea    rcx,[rbp+0x8]
   14000b5ca:	mov    rdx,rbx
   14000b5cd:	call   QWORD PTR [rip+0x202cd]        # 0x14002b8a0
   14000b5d3:	lea    rcx,[rbp+0x10]
   14000b5d7:	mov    rdx,rdi
   14000b5da:	call   QWORD PTR [rip+0x202c0]        # 0x14002b8a0
   14000b5e0:	lea    rcx,[rbp+0x18]
   14000b5e4:	call   QWORD PTR [rip+0x202a6]        # 0x14002b890
   14000b5ea:	lea    rcx,[rbp+0x20]
   14000b5ee:	mov    rdx,rsi
   14000b5f1:	call   QWORD PTR [rip+0x202a9]        # 0x14002b8a0
   14000b5f7:	lea    rcx,[rbp+0x28]
   14000b5fb:	call   QWORD PTR [rip+0x2028f]        # 0x14002b890
   14000b601:	mov    rdx,QWORD PTR [rsp+0x50]
   14000b606:	lea    rcx,[rbp+0x30]
   14000b60a:	call   QWORD PTR [rip+0x20290]        # 0x14002b8a0
   14000b610:	mov    r11,QWORD PTR [rip+0x20269]        # 0x14002b880
   14000b617:	lea    rcx,[rbp+0x40]
   14000b61b:	mov    QWORD PTR [rbp+0x38],r11
   14000b61f:	call   QWORD PTR [rip+0x2026b]        # 0x14002b890
   14000b625:	lea    rcx,[rbp+0x48]
   14000b629:	call   QWORD PTR [rip+0x20261]        # 0x14002b890
   14000b62f:	mov    rdx,QWORD PTR [rsp+0x68]
   14000b634:	lea    rcx,[rbp+0x50]
   14000b638:	call   0x140001700
   14000b63d:	mov    rdx,QWORD PTR [rsp+0x58]
   14000b642:	lea    rcx,[rbp+0x58]
   14000b646:	call   QWORD PTR [rip+0x20254]        # 0x14002b8a0
   14000b64c:	mov    r11d,DWORD PTR [rsp+0x60]
   14000b651:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b656:	mov    rsi,QWORD PTR [rsp+0x40]
   14000b65b:	mov    DWORD PTR [rbp+0x60],r11d
   14000b65f:	mov    rax,QWORD PTR [rip+0x20222]        # 0x14002b888
   14000b666:	mov    QWORD PTR [rbp+0x68],rax
   14000b66a:	mov    eax,DWORD PTR [rsp+0x70]
   14000b66e:	mov    DWORD PTR [rbp+0x70],eax
   14000b671:	movzx  eax,BYTE PTR [rsp+0x78]
   14000b676:	mov    BYTE PTR [rbp+0x74],al
   14000b679:	mov    rax,rbp
   14000b67c:	mov    rbp,QWORD PTR [rsp+0x38]
   14000b681:	add    rsp,0x20
   14000b685:	pop    rdi
   14000b686:	ret    
   14000b687:	int3   
   14000b688:	int3   
   14000b689:	int3   
   14000b68a:	int3   
   14000b68b:	int3   
   14000b68c:	int3   
   14000b68d:	int3   
   14000b68e:	int3   
   14000b68f:	int3   
   14000b690:	mov    QWORD PTR [rsp+0x8],rbx
   14000b695:	push   rdi
   14000b696:	sub    rsp,0x30
   14000b69a:	mov    rax,QWORD PTR [rcx+0x58]
   14000b69e:	mov    rbx,rcx
   14000b6a1:	add    rcx,0x58
   14000b6a5:	cmp    DWORD PTR [rax+0x4],0x0
   14000b6a9:	mov    edi,r8d
   14000b6ac:	jne    0x14000b6c2
   14000b6ae:	call   QWORD PTR [rip+0x201fc]        # 0x14002b8b0
   14000b6b4:	mov    DWORD PTR [rbx+0x60],edi
   14000b6b7:	mov    rbx,QWORD PTR [rsp+0x40]
   14000b6bc:	add    rsp,0x30
   14000b6c0:	pop    rdi
   14000b6c1:	ret    
   14000b6c2:	lea    rcx,[rsp+0x20]
   14000b6c7:	call   QWORD PTR [rip+0x201d3]        # 0x14002b8a0
   14000b6cd:	mov    rax,QWORD PTR [rbx+0x68]
   14000b6d1:	lea    rcx,[rbx+0x68]
   14000b6d5:	mov    DWORD PTR [rsp+0x28],edi
   14000b6d9:	mov    edx,DWORD PTR [rax]
   14000b6db:	cmp    edx,0x1
   14000b6de:	je     0x14000b6f6
   14000b6e0:	test   edx,edx
   14000b6e2:	je     0x14000b6f6
   14000b6e4:	mov    edx,0x7fffffff
   14000b6e9:	mov    r8d,0x1
   14000b6ef:	call   0x1400058b0
   14000b6f4:	jmp    0x14000b6fc
   14000b6f6:	call   QWORD PTR [rip+0x20144]        # 0x14002b840
   14000b6fc:	mov    ecx,0x10
   14000b701:	mov    rdi,rax
   14000b704:	call   0x14002952a
   14000b709:	mov    rbx,rax
   14000b70c:	test   rax,rax
   14000b70f:	je     0x14000b72a
   14000b711:	lea    rdx,[rsp+0x20]
   14000b716:	mov    rcx,rax
   14000b719:	call   QWORD PTR [rip+0x20181]        # 0x14002b8a0
   14000b71f:	mov    r11d,DWORD PTR [rsp+0x28]
   14000b724:	mov    DWORD PTR [rbx+0x8],r11d
   14000b728:	jmp    0x14000b72c
   14000b72a:	xor    ebx,ebx
   14000b72c:	lea    rcx,[rsp+0x20]
   14000b731:	mov    QWORD PTR [rdi],rbx
   14000b734:	call   QWORD PTR [rip+0x2015e]        # 0x14002b898
   14000b73a:	mov    rbx,QWORD PTR [rsp+0x40]
   14000b73f:	add    rsp,0x30
   14000b743:	pop    rdi
   14000b744:	ret    
   14000b745:	int3   
   14000b746:	int3   
   14000b747:	int3   
   14000b748:	int3   
   14000b749:	int3   
   14000b74a:	int3   
   14000b74b:	int3   
   14000b74c:	int3   
   14000b74d:	int3   
   14000b74e:	int3   
   14000b74f:	int3   
   14000b750:	mov    QWORD PTR [rsp+0x18],rsi
   14000b755:	push   rdi
   14000b756:	sub    rsp,0x30
   14000b75a:	mov    rax,QWORD PTR [rip+0x20127]        # 0x14002b888
   14000b761:	mov    rdi,rdx
   14000b764:	mov    rsi,rcx
   14000b767:	mov    QWORD PTR [rdx],rax
   14000b76a:	mov    rax,QWORD PTR [rcx+0x58]
   14000b76e:	lea    rdx,[rcx+0x58]
   14000b772:	cmp    DWORD PTR [rax+0x4],0x0
   14000b776:	je     0x14000b819
   14000b77c:	mov    QWORD PTR [rsp+0x40],rbx
   14000b781:	mov    ebx,DWORD PTR [rcx+0x60]
   14000b784:	lea    rcx,[rsp+0x20]
   14000b789:	mov    QWORD PTR [rsp+0x48],rbp
   14000b78e:	call   QWORD PTR [rip+0x2010c]        # 0x14002b8a0
   14000b794:	mov    rax,QWORD PTR [rdi]
   14000b797:	mov    DWORD PTR [rsp+0x28],ebx
   14000b79b:	mov    ecx,DWORD PTR [rax]
   14000b79d:	cmp    ecx,0x1
   14000b7a0:	je     0x14000b7bb
   14000b7a2:	test   ecx,ecx
   14000b7a4:	je     0x14000b7bb
   14000b7a6:	mov    edx,0x7fffffff
   14000b7ab:	mov    r8d,0x1
   14000b7b1:	mov    rcx,rdi
   14000b7b4:	call   0x1400058b0
   14000b7b9:	jmp    0x14000b7c4
   14000b7bb:	mov    rcx,rdi
   14000b7be:	call   QWORD PTR [rip+0x2007c]        # 0x14002b840
   14000b7c4:	mov    ecx,0x10
   14000b7c9:	mov    rbp,rax
   14000b7cc:	call   0x14002952a
   14000b7d1:	mov    rbx,rax
   14000b7d4:	test   rax,rax
   14000b7d7:	je     0x14000b7f2
   14000b7d9:	lea    rdx,[rsp+0x20]
   14000b7de:	mov    rcx,rax
   14000b7e1:	call   QWORD PTR [rip+0x200b9]        # 0x14002b8a0
   14000b7e7:	mov    r11d,DWORD PTR [rsp+0x28]
   14000b7ec:	mov    DWORD PTR [rbx+0x8],r11d
   14000b7f0:	jmp    0x14000b7f4
   14000b7f2:	xor    ebx,ebx
   14000b7f4:	lea    rcx,[rsp+0x20]
   14000b7f9:	mov    QWORD PTR [rbp+0x0],rbx
   14000b7fd:	call   QWORD PTR [rip+0x20095]        # 0x14002b898
   14000b803:	lea    rdx,[rsi+0x68]
   14000b807:	mov    rcx,rdi
   14000b80a:	call   0x14000b450
   14000b80f:	mov    rbp,QWORD PTR [rsp+0x48]
   14000b814:	mov    rbx,QWORD PTR [rsp+0x40]
   14000b819:	mov    rax,rdi
   14000b81c:	mov    rsi,QWORD PTR [rsp+0x50]
   14000b821:	add    rsp,0x30
   14000b825:	pop    rdi
   14000b826:	ret    
   14000b827:	int3   
   14000b828:	int3   
   14000b829:	int3   
   14000b82a:	int3   
   14000b82b:	int3   
   14000b82c:	int3   
   14000b82d:	int3   
   14000b82e:	int3   
   14000b82f:	int3   
   14000b830:	rex push rbx
   14000b832:	sub    rsp,0x20
   14000b836:	add    rcx,0x38
   14000b83a:	mov    rbx,rdx
   14000b83d:	call   0x140005820
   14000b842:	mov    rax,rbx
   14000b845:	add    rsp,0x20
   14000b849:	pop    rbx
   14000b84a:	ret    
   14000b84b:	int3   
   14000b84c:	int3   
   14000b84d:	int3   
   14000b84e:	int3   
   14000b84f:	int3   
   14000b850:	rex push rbx
   14000b852:	sub    rsp,0x20
   14000b856:	add    rcx,0x38
   14000b85a:	mov    rbx,r8
   14000b85d:	call   0x140005ee0
   14000b862:	mov    rdx,rbx
   14000b865:	mov    rcx,rax
   14000b868:	add    rsp,0x20
   14000b86c:	pop    rbx
   14000b86d:	rex.W jmp QWORD PTR [rip+0x2003c]        # 0x14002b8b0
   14000b874:	int3   
   14000b875:	int3   
   14000b876:	int3   
   14000b877:	int3   
   14000b878:	int3   
   14000b879:	int3   
   14000b87a:	int3   
   14000b87b:	int3   
   14000b87c:	int3   
   14000b87d:	int3   
   14000b87e:	int3   
   14000b87f:	int3   
   14000b880:	mov    r11,rsp
   14000b883:	mov    QWORD PTR [r11+0x8],rcx
   14000b887:	push   rbx
   14000b888:	push   r14
   14000b88a:	push   r15
   14000b88c:	sub    rsp,0x60
   14000b890:	mov    rax,QWORD PTR [rdx]
   14000b893:	mov    rbx,rdx
   14000b896:	mov    r14,rcx
   14000b899:	mov    r8d,DWORD PTR [rax+0x8]
   14000b89d:	cmp    DWORD PTR [rax+0xc],r8d
   14000b8a1:	je     0x14000be05
   14000b8a7:	mov    QWORD PTR [r11-0x20],rbp
   14000b8ab:	mov    QWORD PTR [r11-0x28],rsi
   14000b8af:	mov    QWORD PTR [r11+0x10],rax
   14000b8b3:	mov    r8d,DWORD PTR [rax]
   14000b8b6:	mov    QWORD PTR [r11-0x30],rdi
   14000b8ba:	mov    QWORD PTR [r11-0x38],r12
   14000b8be:	test   r8d,r8d
   14000b8c1:	je     0x14000b8da
   14000b8c3:	cmp    r8d,0xffffffff
   14000b8c7:	je     0x14000b95c
   14000b8cd:	lock add DWORD PTR [rax],0x1
   14000b8d1:	mov    rax,QWORD PTR [r11+0x10]
   14000b8d5:	jmp    0x14000b95c
   14000b8da:	mov    edx,DWORD PTR [rax+0x4]
   14000b8dd:	lea    rcx,[rsp+0x88]
   14000b8e5:	call   QWORD PTR [rip+0x1ff6d]        # 0x14002b858
   14000b8eb:	mov    r11,QWORD PTR [rbx]
   14000b8ee:	movsxd rax,DWORD PTR [r11+0x8]
   14000b8f2:	lea    rbp,[r11+rax*8+0x10]
   14000b8f7:	mov    rax,QWORD PTR [rsp+0x88]
   14000b8ff:	movsxd rcx,DWORD PTR [rax+0xc]
   14000b903:	lea    r12,[rax+rcx*8+0x10]
   14000b908:	movsxd rcx,DWORD PTR [rax+0x8]
   14000b90c:	lea    rsi,[rax+rcx*8+0x10]
   14000b911:	cmp    rsi,r12
   14000b914:	je     0x14000b95c
   14000b916:	mov    ecx,0x10
   14000b91b:	call   0x14002952a
   14000b920:	mov    rdi,rax
   14000b923:	test   rax,rax
   14000b926:	je     0x14000b942
   14000b928:	mov    rbx,QWORD PTR [rbp+0x0]
   14000b92c:	mov    rcx,rax
   14000b92f:	mov    rdx,rbx
   14000b932:	call   QWORD PTR [rip+0x1ff68]        # 0x14002b8a0
   14000b938:	mov    r11d,DWORD PTR [rbx+0x8]
   14000b93c:	mov    DWORD PTR [rdi+0x8],r11d
   14000b940:	jmp    0x14000b944
   14000b942:	xor    edi,edi
   14000b944:	mov    QWORD PTR [rsi],rdi
   14000b947:	add    rsi,0x8
   14000b94b:	add    rbp,0x8
   14000b94f:	cmp    rsi,r12
   14000b952:	jne    0x14000b916
   14000b954:	mov    rax,QWORD PTR [rsp+0x88]
   14000b95c:	mov    ecx,DWORD PTR [rax]
   14000b95e:	mov    QWORD PTR [rsp+0x38],r13
   14000b963:	cmp    ecx,0x1
   14000b966:	je     0x14000ba67
   14000b96c:	test   ecx,ecx
   14000b96e:	je     0x14000ba67
   14000b974:	movsxd rcx,DWORD PTR [rax+0x8]
   14000b978:	mov    edx,DWORD PTR [rax+0x4]
   14000b97b:	lea    rbp,[rax+rcx*8+0x10]
   14000b980:	lea    rcx,[rsp+0x88]
   14000b988:	call   QWORD PTR [rip+0x1feca]        # 0x14002b858
   14000b98e:	mov    r12,rax
   14000b991:	mov    rax,QWORD PTR [rsp+0x88]
   14000b999:	movsxd rcx,DWORD PTR [rax+0xc]
   14000b99d:	lea    r13,[rax+rcx*8+0x10]
   14000b9a2:	movsxd rcx,DWORD PTR [rax+0x8]
   14000b9a6:	lea    rsi,[rax+rcx*8+0x10]
   14000b9ab:	cmp    rsi,r13
   14000b9ae:	je     0x14000b9f6
   14000b9b0:	mov    ecx,0x10
   14000b9b5:	call   0x14002952a
   14000b9ba:	mov    rdi,rax
   14000b9bd:	test   rax,rax
   14000b9c0:	je     0x14000b9dc
   14000b9c2:	mov    rbx,QWORD PTR [rbp+0x0]
   14000b9c6:	mov    rcx,rax
   14000b9c9:	mov    rdx,rbx
   14000b9cc:	call   QWORD PTR [rip+0x1fece]        # 0x14002b8a0
   14000b9d2:	mov    r11d,DWORD PTR [rbx+0x8]
   14000b9d6:	mov    DWORD PTR [rdi+0x8],r11d
   14000b9da:	jmp    0x14000b9de
   14000b9dc:	xor    edi,edi
   14000b9de:	mov    QWORD PTR [rsi],rdi
   14000b9e1:	add    rsi,0x8
   14000b9e5:	add    rbp,0x8
   14000b9e9:	cmp    rsi,r13
   14000b9ec:	jne    0x14000b9b0
   14000b9ee:	mov    rax,QWORD PTR [rsp+0x88]
   14000b9f6:	mov    ecx,DWORD PTR [r12]
   14000b9fa:	test   ecx,ecx
   14000b9fc:	je     0x14000ba1a
   14000b9fe:	cmp    ecx,0xffffffff
   14000ba01:	je     0x14000ba67
   14000ba03:	lock add DWORD PTR [r12],0xffffffff
   14000ba09:	setne  al
   14000ba0c:	test   al,al
   14000ba0e:	je     0x14000ba1a
   14000ba10:	mov    rax,QWORD PTR [rsp+0x88]
   14000ba18:	jmp    0x14000ba67
   14000ba1a:	movsxd rax,DWORD PTR [r12+0xc]
   14000ba1f:	lea    rbx,[r12+rax*8+0x10]
   14000ba24:	movsxd rax,DWORD PTR [r12+0x8]
   14000ba29:	lea    rsi,[r12+rax*8+0x10]
   14000ba2e:	cmp    rsi,rbx
   14000ba31:	je     0x14000ba56
   14000ba33:	mov    rdi,QWORD PTR [rbx-0x8]
   14000ba37:	sub    rbx,0x8
   14000ba3b:	test   rdi,rdi
   14000ba3e:	je     0x14000ba51
   14000ba40:	mov    rcx,rdi
   14000ba43:	call   QWORD PTR [rip+0x1fe4f]        # 0x14002b898
   14000ba49:	mov    rcx,rdi
   14000ba4c:	call   0x140029524
   14000ba51:	cmp    rbx,rsi
   14000ba54:	jne    0x14000ba33
   14000ba56:	mov    rcx,r12
   14000ba59:	call   QWORD PTR [rip+0x1fe11]        # 0x14002b870
   14000ba5f:	mov    rax,QWORD PTR [rsp+0x88]
   14000ba67:	movsxd rcx,DWORD PTR [rax+0x8]
   14000ba6b:	mov    rbx,QWORD PTR [rax+rcx*8+0x10]
   14000ba70:	lea    rcx,[rsp+0x20]
   14000ba75:	mov    rdx,rbx
   14000ba78:	call   QWORD PTR [rip+0x1fe22]        # 0x14002b8a0
   14000ba7e:	mov    r11d,DWORD PTR [rbx+0x8]
   14000ba82:	mov    rax,QWORD PTR [rsp+0x88]
   14000ba8a:	mov    DWORD PTR [rsp+0x28],r11d
   14000ba8f:	mov    ecx,DWORD PTR [rax]
   14000ba91:	cmp    ecx,0x1
   14000ba94:	je     0x14000bb97
   14000ba9a:	test   ecx,ecx
   14000ba9c:	je     0x14000bb97
   14000baa2:	movsxd rcx,DWORD PTR [rax+0x8]
   14000baa6:	mov    edx,DWORD PTR [rax+0x4]
   14000baa9:	lea    rbp,[rax+rcx*8+0x10]
   14000baae:	lea    rcx,[rsp+0x88]
   14000bab6:	call   QWORD PTR [rip+0x1fd9c]        # 0x14002b858
   14000babc:	mov    r12,rax
   14000babf:	mov    rax,QWORD PTR [rsp+0x88]
   14000bac7:	movsxd rcx,DWORD PTR [rax+0xc]
   14000bacb:	lea    r13,[rax+rcx*8+0x10]
   14000bad0:	movsxd rcx,DWORD PTR [rax+0x8]
   14000bad4:	lea    rsi,[rax+rcx*8+0x10]
   14000bad9:	cmp    rsi,r13
   14000badc:	je     0x14000bb26
   14000bade:	xchg   ax,ax
   14000bae0:	mov    ecx,0x10
   14000bae5:	call   0x14002952a
   14000baea:	mov    rdi,rax
   14000baed:	test   rax,rax
   14000baf0:	je     0x14000bb0c
   14000baf2:	mov    rbx,QWORD PTR [rbp+0x0]
   14000baf6:	mov    rcx,rax
   14000baf9:	mov    rdx,rbx
   14000bafc:	call   QWORD PTR [rip+0x1fd9e]        # 0x14002b8a0
   14000bb02:	mov    r11d,DWORD PTR [rbx+0x8]
   14000bb06:	mov    DWORD PTR [rdi+0x8],r11d
   14000bb0a:	jmp    0x14000bb0e
   14000bb0c:	xor    edi,edi
   14000bb0e:	mov    QWORD PTR [rsi],rdi
   14000bb11:	add    rsi,0x8
   14000bb15:	add    rbp,0x8
   14000bb19:	cmp    rsi,r13
   14000bb1c:	jne    0x14000bae0
   14000bb1e:	mov    rax,QWORD PTR [rsp+0x88]
   14000bb26:	mov    ecx,DWORD PTR [r12]
   14000bb2a:	test   ecx,ecx
   14000bb2c:	je     0x14000bb4a
   14000bb2e:	cmp    ecx,0xffffffff
   14000bb31:	je     0x14000bb97
   14000bb33:	lock add DWORD PTR [r12],0xffffffff
   14000bb39:	setne  al
   14000bb3c:	test   al,al
   14000bb3e:	je     0x14000bb4a
   14000bb40:	mov    rax,QWORD PTR [rsp+0x88]
   14000bb48:	jmp    0x14000bb97
   14000bb4a:	movsxd rax,DWORD PTR [r12+0xc]
   14000bb4f:	lea    rbx,[r12+rax*8+0x10]
   14000bb54:	movsxd rax,DWORD PTR [r12+0x8]
   14000bb59:	lea    rsi,[r12+rax*8+0x10]
   14000bb5e:	cmp    rsi,rbx
   14000bb61:	je     0x14000bb86
   14000bb63:	mov    rdi,QWORD PTR [rbx-0x8]
   14000bb67:	sub    rbx,0x8
   14000bb6b:	test   rdi,rdi
   14000bb6e:	je     0x14000bb81
   14000bb70:	mov    rcx,rdi
   14000bb73:	call   QWORD PTR [rip+0x1fd1f]        # 0x14002b898
   14000bb79:	mov    rcx,rdi
   14000bb7c:	call   0x140029524
   14000bb81:	cmp    rbx,rsi
   14000bb84:	jne    0x14000bb63
   14000bb86:	mov    rcx,r12
   14000bb89:	call   QWORD PTR [rip+0x1fce1]        # 0x14002b870
   14000bb8f:	mov    rax,QWORD PTR [rsp+0x88]
   14000bb97:	movsxd rcx,DWORD PTR [rax+0x8]
   14000bb9b:	lea    rdx,[rcx*8+0x10]
   14000bba3:	mov    ecx,DWORD PTR [rax]
   14000bba5:	lea    rsi,[rdx+rax*1]
   14000bba9:	mov    QWORD PTR [rsp+0x98],rsi
   14000bbb1:	cmp    ecx,0x1
   14000bbb4:	je     0x14000bcf4
   14000bbba:	test   ecx,ecx
   14000bbbc:	je     0x14000bcf4
   14000bbc2:	mov    r14,rsi
   14000bbc5:	sub    r14,rdx
   14000bbc8:	sub    r14,rax
   14000bbcb:	sar    r14,0x3
   14000bbcf:	cmp    ecx,0x1
   14000bbd2:	je     0x14000bcd4
   14000bbd8:	test   ecx,ecx
   14000bbda:	je     0x14000bcd4
   14000bbe0:	mov    edx,DWORD PTR [rax+0x4]
   14000bbe3:	lea    rcx,[rsp+0x88]
   14000bbeb:	call   QWORD PTR [rip+0x1fc67]        # 0x14002b858
   14000bbf1:	mov    r12,rax
   14000bbf4:	mov    rax,QWORD PTR [rsp+0x88]
   14000bbfc:	movsxd rcx,DWORD PTR [rax+0xc]
   14000bc00:	lea    r13,[rax+rcx*8+0x10]
   14000bc05:	movsxd rcx,DWORD PTR [rax+0x8]
   14000bc09:	lea    rbp,[rax+rcx*8+0x10]
   14000bc0e:	cmp    rbp,r13
   14000bc11:	je     0x14000bc59
   14000bc13:	mov    ecx,0x10
   14000bc18:	call   0x14002952a
   14000bc1d:	mov    rdi,rax
   14000bc20:	test   rax,rax
   14000bc23:	je     0x14000bc3e
   14000bc25:	mov    rbx,QWORD PTR [rsi]
   14000bc28:	mov    rcx,rax
   14000bc2b:	mov    rdx,rbx
   14000bc2e:	call   QWORD PTR [rip+0x1fc6c]        # 0x14002b8a0
   14000bc34:	mov    r11d,DWORD PTR [rbx+0x8]
   14000bc38:	mov    DWORD PTR [rdi+0x8],r11d
   14000bc3c:	jmp    0x14000bc40
   14000bc3e:	xor    edi,edi
   14000bc40:	mov    QWORD PTR [rbp+0x0],rdi
   14000bc44:	add    rbp,0x8
   14000bc48:	add    rsi,0x8
   14000bc4c:	cmp    rbp,r13
   14000bc4f:	jne    0x14000bc13
   14000bc51:	mov    rax,QWORD PTR [rsp+0x88]
   14000bc59:	mov    ecx,DWORD PTR [r12]
   14000bc5d:	test   ecx,ecx
   14000bc5f:	je     0x14000bc7d
   14000bc61:	cmp    ecx,0xffffffff
   14000bc64:	je     0x14000bcd4
   14000bc66:	lock add DWORD PTR [r12],0xffffffff
   14000bc6c:	setne  al
   14000bc6f:	test   al,al
   14000bc71:	je     0x14000bc7d
   14000bc73:	mov    rax,QWORD PTR [rsp+0x88]
   14000bc7b:	jmp    0x14000bcd4
   14000bc7d:	movsxd rax,DWORD PTR [r12+0xc]
   14000bc82:	lea    rbx,[r12+rax*8+0x10]
   14000bc87:	movsxd rax,DWORD PTR [r12+0x8]
   14000bc8c:	lea    rsi,[r12+rax*8+0x10]
   14000bc91:	cmp    rsi,rbx
   14000bc94:	je     0x14000bcc3
   14000bc96:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000bca0:	mov    rdi,QWORD PTR [rbx-0x8]
   14000bca4:	sub    rbx,0x8
   14000bca8:	test   rdi,rdi
   14000bcab:	je     0x14000bcbe
   14000bcad:	mov    rcx,rdi
   14000bcb0:	call   QWORD PTR [rip+0x1fbe2]        # 0x14002b898
   14000bcb6:	mov    rcx,rdi
   14000bcb9:	call   0x140029524
   14000bcbe:	cmp    rbx,rsi
   14000bcc1:	jne    0x14000bca0
   14000bcc3:	mov    rcx,r12
   14000bcc6:	call   QWORD PTR [rip+0x1fba4]        # 0x14002b870
   14000bccc:	mov    rax,QWORD PTR [rsp+0x88]
   14000bcd4:	movsxd rcx,DWORD PTR [rax+0x8]
   14000bcd8:	lea    rax,[rax+rcx*8+0x10]
   14000bcdd:	movsxd rcx,r14d
   14000bce0:	mov    r14,QWORD PTR [rsp+0x80]
   14000bce8:	lea    rsi,[rax+rcx*8]
   14000bcec:	mov    QWORD PTR [rsp+0x98],rsi
   14000bcf4:	mov    rbx,QWORD PTR [rsi]
   14000bcf7:	mov    r13,QWORD PTR [rsp+0x38]
   14000bcfc:	mov    r12,QWORD PTR [rsp+0x40]
   14000bd01:	test   rbx,rbx
   14000bd04:	je     0x14000bd17
   14000bd06:	mov    rcx,rbx
   14000bd09:	call   QWORD PTR [rip+0x1fb89]        # 0x14002b898
   14000bd0f:	mov    rcx,rbx
   14000bd12:	call   0x140029524
   14000bd17:	lea    rcx,[rsp+0x88]
   14000bd1f:	mov    rdx,rsi
   14000bd22:	call   QWORD PTR [rip+0x1f650]        # 0x14002b378
   14000bd28:	lea    rdx,[rsp+0x20]
   14000bd2d:	lea    rcx,[rsp+0x90]
   14000bd35:	call   QWORD PTR [rip+0x1fb65]        # 0x14002b8a0
   14000bd3b:	lea    rcx,[r14+0x58]
   14000bd3f:	lea    rdx,[rsp+0x90]
   14000bd47:	call   QWORD PTR [rip+0x1fb63]        # 0x14002b8b0
   14000bd4d:	lea    rcx,[rsp+0x90]
   14000bd55:	call   QWORD PTR [rip+0x1fb3d]        # 0x14002b898
   14000bd5b:	mov    r11d,DWORD PTR [rsp+0x28]
   14000bd60:	lea    rcx,[r14+0x68]
   14000bd64:	lea    rdx,[rsp+0x88]
   14000bd6c:	mov    DWORD PTR [r14+0x60],r11d
   14000bd70:	call   0x140005600
   14000bd75:	lea    rcx,[rsp+0x20]
   14000bd7a:	call   QWORD PTR [rip+0x1fb18]        # 0x14002b898
   14000bd80:	mov    rsi,QWORD PTR [rsp+0x88]
   14000bd88:	mov    eax,DWORD PTR [rsi]
   14000bd8a:	test   eax,eax
   14000bd8c:	je     0x14000bda6
   14000bd8e:	cmp    eax,0xffffffff
   14000bd91:	je     0x14000bdec
   14000bd93:	lock add DWORD PTR [rsi],0xffffffff
   14000bd97:	setne  al
   14000bd9a:	test   al,al
   14000bd9c:	jne    0x14000bdec
   14000bd9e:	mov    rsi,QWORD PTR [rsp+0x88]
   14000bda6:	movsxd rax,DWORD PTR [rsi+0xc]
   14000bdaa:	lea    rbx,[rsi+rax*8+0x10]
   14000bdaf:	movsxd rax,DWORD PTR [rsi+0x8]
   14000bdb3:	lea    rbp,[rsi+rax*8+0x10]
   14000bdb8:	cmp    rbp,rbx
   14000bdbb:	je     0x14000bde3
   14000bdbd:	nop    DWORD PTR [rax]
   14000bdc0:	mov    rdi,QWORD PTR [rbx-0x8]
   14000bdc4:	sub    rbx,0x8
   14000bdc8:	test   rdi,rdi
   14000bdcb:	je     0x14000bdde
   14000bdcd:	mov    rcx,rdi
   14000bdd0:	call   QWORD PTR [rip+0x1fac2]        # 0x14002b898
   14000bdd6:	mov    rcx,rdi
   14000bdd9:	call   0x140029524
   14000bdde:	cmp    rbx,rbp
   14000bde1:	jne    0x14000bdc0
   14000bde3:	mov    rcx,rsi
   14000bde6:	call   QWORD PTR [rip+0x1fa84]        # 0x14002b870
   14000bdec:	mov    rsi,QWORD PTR [rsp+0x50]
   14000bdf1:	mov    rbp,QWORD PTR [rsp+0x58]
   14000bdf6:	mov    rdi,QWORD PTR [rsp+0x48]
   14000bdfb:	add    rsp,0x60
   14000bdff:	pop    r15
   14000be01:	pop    r14
   14000be03:	pop    rbx
   14000be04:	ret    
   14000be05:	add    rcx,0x58
   14000be09:	call   QWORD PTR [rip+0x1f5b1]        # 0x14002b3c0
   14000be0f:	or     r15d,0xffffffff
   14000be13:	lea    rcx,[r14+0x68]
   14000be17:	mov    DWORD PTR [r14+0x60],r15d
   14000be1b:	add    rsp,0x60
   14000be1f:	pop    r15
   14000be21:	pop    r14
   14000be23:	pop    rbx
   14000be24:	jmp    0x14000b3a0
   14000be29:	int3   
   14000be2a:	int3   
   14000be2b:	int3   
   14000be2c:	int3   
   14000be2d:	int3   
   14000be2e:	int3   
   14000be2f:	int3   
   14000be30:	mov    QWORD PTR [rsp+0x18],rbp
   14000be35:	push   rsi
   14000be36:	sub    rsp,0x20
   14000be3a:	mov    rax,QWORD PTR [rcx]
   14000be3d:	mov    rbp,rcx
   14000be40:	xor    esi,esi
   14000be42:	movsxd rcx,DWORD PTR [rax+0x4]
   14000be46:	mov    rax,QWORD PTR [rdx]
   14000be49:	cmp    ecx,DWORD PTR [rax+0x4]
   14000be4c:	jne    0x14000bea1
   14000be4e:	mov    QWORD PTR [rsp+0x30],rbx
   14000be53:	mov    QWORD PTR [rsp+0x38],rdi
   14000be58:	mov    rdi,rcx
   14000be5b:	mov    rcx,rdx
   14000be5e:	call   QWORD PTR [rip+0x1f36c]        # 0x14002b1d0
   14000be64:	mov    rcx,rbp
   14000be67:	mov    rbx,rax
   14000be6a:	call   QWORD PTR [rip+0x1f360]        # 0x14002b1d0
   14000be70:	mov    r8,rdi
   14000be73:	mov    rcx,rax
   14000be76:	mov    rdx,rbx
   14000be79:	call   0x140029600
   14000be7e:	mov    rdi,QWORD PTR [rsp+0x38]
   14000be83:	mov    rbx,QWORD PTR [rsp+0x30]
   14000be88:	test   eax,eax
   14000be8a:	jne    0x14000bea1
   14000be8c:	mov    eax,0x1
   14000be91:	test   al,al
   14000be93:	sete   al
   14000be96:	mov    rbp,QWORD PTR [rsp+0x40]
   14000be9b:	add    rsp,0x20
   14000be9f:	pop    rsi
   14000bea0:	ret    
   14000bea1:	mov    rbp,QWORD PTR [rsp+0x40]
   14000bea6:	mov    eax,esi
   14000bea8:	test   al,al
   14000beaa:	sete   al
   14000bead:	add    rsp,0x20
   14000beb1:	pop    rsi
   14000beb2:	ret    
   14000beb3:	int3   
   14000beb4:	int3   
   14000beb5:	int3   
   14000beb6:	int3   
   14000beb7:	int3   
   14000beb8:	int3   
   14000beb9:	int3   
   14000beba:	int3   
   14000bebb:	int3   
   14000bebc:	int3   
   14000bebd:	int3   
   14000bebe:	int3   
   14000bebf:	int3   
   14000bec0:	mov    QWORD PTR [rsp+0x18],rbx
   14000bec5:	push   rdi
   14000bec6:	sub    rsp,0x20
   14000beca:	mov    rbx,rdx
   14000becd:	mov    rdi,rcx
   14000bed0:	call   0x14000be30
   14000bed5:	test   al,al
   14000bed7:	je     0x14000bef5
   14000bed9:	mov    rdx,rbx
   14000bedc:	mov    rcx,rdi
   14000bedf:	call   QWORD PTR [rip+0x1f4eb]        # 0x14002b3d0
   14000bee5:	test   eax,eax
   14000bee7:	sets   al
   14000beea:	mov    rbx,QWORD PTR [rsp+0x40]
   14000beef:	add    rsp,0x20
   14000bef3:	pop    rdi
   14000bef4:	ret    
   14000bef5:	lea    rdx,[rbx+0x8]
   14000bef9:	lea    rcx,[rdi+0x8]
   14000befd:	mov    QWORD PTR [rsp+0x30],rbp
   14000bf02:	mov    QWORD PTR [rsp+0x38],rsi
   14000bf07:	call   0x14000be30
   14000bf0c:	test   al,al
   14000bf0e:	je     0x14000bf1a
   14000bf10:	lea    rdx,[rbx+0x8]
   14000bf14:	lea    rcx,[rdi+0x8]
   14000bf18:	jmp    0x14000bf22
   14000bf1a:	lea    rdx,[rbx+0x10]
   14000bf1e:	lea    rcx,[rdi+0x10]
   14000bf22:	call   QWORD PTR [rip+0x1f4a8]        # 0x14002b3d0
   14000bf28:	mov    rbp,QWORD PTR [rsp+0x30]
   14000bf2d:	mov    rsi,QWORD PTR [rsp+0x38]
   14000bf32:	mov    rbx,QWORD PTR [rsp+0x40]
   14000bf37:	test   eax,eax
   14000bf39:	sets   al
   14000bf3c:	add    rsp,0x20
   14000bf40:	pop    rdi
   14000bf41:	ret    
   14000bf42:	int3   
   14000bf43:	int3   
   14000bf44:	int3   
   14000bf45:	int3   
   14000bf46:	int3   
   14000bf47:	int3   
   14000bf48:	int3   
   14000bf49:	int3   
   14000bf4a:	int3   
   14000bf4b:	int3   
   14000bf4c:	int3   
   14000bf4d:	int3   
   14000bf4e:	int3   
   14000bf4f:	int3   
   14000bf50:	mov    QWORD PTR [rsp+0x8],rbx
   14000bf55:	mov    QWORD PTR [rsp+0x10],rsi
   14000bf5a:	push   rdi
   14000bf5b:	sub    rsp,0x40
   14000bf5f:	mov    rbx,rcx
   14000bf62:	lea    rcx,[rsp+0x20]
   14000bf67:	call   QWORD PTR [rip+0x1f4b3]        # 0x14002b420
   14000bf6d:	lea    rdx,[rip+0x2142c]        # 0x14002d3a0
   14000bf74:	lea    rcx,[rsp+0x20]
   14000bf79:	mov    r8d,0x10
   14000bf7f:	call   QWORD PTR [rip+0x1f493]        # 0x14002b418
   14000bf85:	mov    rax,QWORD PTR [rbx+0x30]
   14000bf89:	mov    edi,DWORD PTR [rax+0x4]
   14000bf8c:	test   edi,edi
   14000bf8e:	je     0x14000bfc3
   14000bf90:	lea    rcx,[rsp+0x20]
   14000bf95:	mov    dl,0x96
   14000bf97:	call   QWORD PTR [rip+0x1f473]        # 0x14002b410
   14000bf9d:	mov    edx,edi
   14000bf9f:	mov    rcx,rax
   14000bfa2:	call   QWORD PTR [rip+0x1f460]        # 0x14002b408
   14000bfa8:	lea    rcx,[rbx+0x30]
   14000bfac:	call   QWORD PTR [rip+0x1f21e]        # 0x14002b1d0
   14000bfb2:	lea    rcx,[rsp+0x20]
   14000bfb7:	mov    r8d,edi
   14000bfba:	mov    rdx,rax
   14000bfbd:	call   QWORD PTR [rip+0x1f455]        # 0x14002b418
   14000bfc3:	mov    rax,QWORD PTR [rbx+0x8]
   14000bfc7:	mov    edi,DWORD PTR [rax+0x4]
   14000bfca:	test   edi,edi
   14000bfcc:	je     0x14000c001
   14000bfce:	lea    rcx,[rsp+0x20]
   14000bfd3:	mov    dl,0x42
   14000bfd5:	call   QWORD PTR [rip+0x1f435]        # 0x14002b410
   14000bfdb:	mov    edx,edi
   14000bfdd:	mov    rcx,rax
   14000bfe0:	call   QWORD PTR [rip+0x1f422]        # 0x14002b408
   14000bfe6:	lea    rcx,[rbx+0x8]
   14000bfea:	call   QWORD PTR [rip+0x1f1e0]        # 0x14002b1d0
   14000bff0:	lea    rcx,[rsp+0x20]
   14000bff5:	mov    r8d,edi
   14000bff8:	mov    rdx,rax
   14000bffb:	call   QWORD PTR [rip+0x1f417]        # 0x14002b418
   14000c001:	mov    rax,QWORD PTR [rbx]
   14000c004:	mov    edi,DWORD PTR [rax+0x4]
   14000c007:	test   edi,edi
   14000c009:	je     0x14000c03d
   14000c00b:	lea    rcx,[rsp+0x20]
   14000c010:	mov    dl,0x69
   14000c012:	call   QWORD PTR [rip+0x1f3f8]        # 0x14002b410
   14000c018:	mov    edx,edi
   14000c01a:	mov    rcx,rax
   14000c01d:	call   QWORD PTR [rip+0x1f3e5]        # 0x14002b408
   14000c023:	mov    rcx,rbx
   14000c026:	call   QWORD PTR [rip+0x1f1a4]        # 0x14002b1d0
   14000c02c:	lea    rcx,[rsp+0x20]
   14000c031:	mov    r8d,edi
   14000c034:	mov    rdx,rax
   14000c037:	call   QWORD PTR [rip+0x1f3db]        # 0x14002b418
   14000c03d:	mov    rax,QWORD PTR [rbx+0x10]
   14000c041:	mov    edi,DWORD PTR [rax+0x4]
   14000c044:	test   edi,edi
   14000c046:	je     0x14000c07b
   14000c048:	lea    rcx,[rsp+0x20]
   14000c04d:	mov    dl,0x2f
   14000c04f:	call   QWORD PTR [rip+0x1f3bb]        # 0x14002b410
   14000c055:	mov    edx,edi
   14000c057:	mov    rcx,rax
   14000c05a:	call   QWORD PTR [rip+0x1f3a8]        # 0x14002b408
   14000c060:	lea    rcx,[rbx+0x10]
   14000c064:	call   QWORD PTR [rip+0x1f166]        # 0x14002b1d0
   14000c06a:	lea    rcx,[rsp+0x20]
   14000c06f:	mov    r8d,edi
   14000c072:	mov    rdx,rax
   14000c075:	call   QWORD PTR [rip+0x1f39d]        # 0x14002b418
   14000c07b:	mov    rax,QWORD PTR [rbx+0x20]
   14000c07f:	lea    rdi,[rbx+0x20]
   14000c083:	mov    ebx,DWORD PTR [rax+0x4]
   14000c086:	test   ebx,ebx
   14000c088:	je     0x14000c0bc
   14000c08a:	lea    rcx,[rsp+0x20]
   14000c08f:	mov    dl,0x88
   14000c091:	call   QWORD PTR [rip+0x1f379]        # 0x14002b410
   14000c097:	mov    edx,ebx
   14000c099:	mov    rcx,rax
   14000c09c:	call   QWORD PTR [rip+0x1f366]        # 0x14002b408
   14000c0a2:	mov    rcx,rdi
   14000c0a5:	call   QWORD PTR [rip+0x1f125]        # 0x14002b1d0
   14000c0ab:	lea    rcx,[rsp+0x20]
   14000c0b0:	mov    r8d,ebx
   14000c0b3:	mov    rdx,rax
   14000c0b6:	call   QWORD PTR [rip+0x1f35c]        # 0x14002b418
   14000c0bc:	lea    rcx,[rsp+0x20]
   14000c0c1:	call   QWORD PTR [rip+0x1f339]        # 0x14002b400
   14000c0c7:	mov    rbx,QWORD PTR [rsp+0x50]
   14000c0cc:	mov    rsi,QWORD PTR [rsp+0x58]
   14000c0d1:	mov    al,0x1
   14000c0d3:	add    rsp,0x40
   14000c0d7:	pop    rdi
   14000c0d8:	ret    
   14000c0d9:	int3   
   14000c0da:	int3   
   14000c0db:	int3   
   14000c0dc:	int3   
   14000c0dd:	int3   
   14000c0de:	int3   
   14000c0df:	int3   
   14000c0e0:	mov    QWORD PTR [rsp+0x8],rbx
   14000c0e5:	mov    QWORD PTR [rsp+0x10],rsi
   14000c0ea:	push   rdi
   14000c0eb:	sub    rsp,0x30
   14000c0ef:	xor    r9d,r9d
   14000c0f2:	mov    rsi,rdx
   14000c0f5:	mov    rdi,rcx
   14000c0f8:	lea    edx,[r9+0x28]
   14000c0fc:	lea    r8d,[r9+0x8]
   14000c100:	mov    rcx,rsi
   14000c103:	mov    BYTE PTR [rsp+0x20],0x0
   14000c108:	call   QWORD PTR [rip+0x1f332]        # 0x14002b440
   14000c10e:	mov    rbx,rax
   14000c111:	add    rax,0x18
   14000c115:	je     0x14000c11e
   14000c117:	mov    r8,QWORD PTR [rdi+0x18]
   14000c11b:	mov    QWORD PTR [rax],r8
   14000c11e:	lea    rax,[rbx+0x20]
   14000c122:	test   rax,rax
   14000c125:	je     0x14000c12e
   14000c127:	mov    rcx,QWORD PTR [rdi+0x20]
   14000c12b:	mov    QWORD PTR [rax],rcx
   14000c12e:	test   BYTE PTR [rdi],0x1
   14000c131:	je     0x14000c139
   14000c133:	or     QWORD PTR [rbx],0x1
   14000c137:	jmp    0x14000c13d
   14000c139:	and    QWORD PTR [rbx],0xfffffffffffffffe
   14000c13d:	mov    rcx,QWORD PTR [rdi+0x8]
   14000c141:	test   rcx,rcx
   14000c144:	je     0x14000c15b
   14000c146:	mov    rdx,rsi
   14000c149:	call   0x14000c0e0
   14000c14e:	mov    QWORD PTR [rbx+0x8],rax
   14000c152:	and    QWORD PTR [rax],0x3
   14000c156:	or     QWORD PTR [rax],rbx
   14000c159:	jmp    0x14000c163
   14000c15b:	mov    QWORD PTR [rbx+0x8],0x0
   14000c163:	mov    rcx,QWORD PTR [rdi+0x10]
   14000c167:	test   rcx,rcx
   14000c16a:	je     0x14000c192
   14000c16c:	mov    rdx,rsi
   14000c16f:	call   0x14000c0e0
   14000c174:	mov    QWORD PTR [rbx+0x10],rax
   14000c178:	and    QWORD PTR [rax],0x3
   14000c17c:	or     QWORD PTR [rax],rbx
   14000c17f:	mov    rax,rbx
   14000c182:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c187:	mov    rsi,QWORD PTR [rsp+0x48]
   14000c18c:	add    rsp,0x30
   14000c190:	pop    rdi
   14000c191:	ret    
   14000c192:	mov    rsi,QWORD PTR [rsp+0x48]
   14000c197:	mov    QWORD PTR [rbx+0x10],0x0
   14000c19f:	mov    rax,rbx
   14000c1a2:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c1a7:	add    rsp,0x30
   14000c1ab:	pop    rdi
   14000c1ac:	ret    
   14000c1ad:	int3   
   14000c1ae:	int3   
   14000c1af:	int3   
   14000c1b0:	rex push rsi
   14000c1b2:	push   r12
   14000c1b4:	push   r15
   14000c1b6:	sub    rsp,0x30
   14000c1ba:	xor    r15d,r15d
   14000c1bd:	mov    r12,rdx
   14000c1c0:	mov    rsi,rcx
   14000c1c3:	test   rcx,rcx
   14000c1c6:	je     0x14000c2e0
   14000c1cc:	mov    QWORD PTR [rsp+0x50],rbx
   14000c1d1:	mov    QWORD PTR [rsp+0x58],rbp
   14000c1d6:	mov    QWORD PTR [rsp+0x60],rdi
   14000c1db:	mov    QWORD PTR [rsp+0x28],r13
   14000c1e0:	mov    QWORD PTR [rsp+0x20],r14
   14000c1e5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000c1f0:	mov    rax,QWORD PTR [rsi+0x18]
   14000c1f4:	movsxd rcx,DWORD PTR [rax+0x4]
   14000c1f8:	mov    rax,QWORD PTR [r12]
   14000c1fc:	cmp    ecx,DWORD PTR [rax+0x4]
   14000c1ff:	jne    0x14000c29b
   14000c205:	mov    rdi,rcx
   14000c208:	mov    rcx,r12
   14000c20b:	call   QWORD PTR [rip+0x1efbf]        # 0x14002b1d0
   14000c211:	lea    rcx,[rsi+0x18]
   14000c215:	mov    rbx,rax
   14000c218:	call   QWORD PTR [rip+0x1efb2]        # 0x14002b1d0
   14000c21e:	mov    r8,rdi
   14000c221:	mov    rcx,rax
   14000c224:	mov    rdx,rbx
   14000c227:	call   0x140029600
   14000c22c:	test   eax,eax
   14000c22e:	jne    0x14000c29b
   14000c230:	mov    rax,QWORD PTR [rsi+0x20]
   14000c234:	movsxd rcx,DWORD PTR [rax+0x4]
   14000c238:	mov    rax,QWORD PTR [r12+0x8]
   14000c23d:	cmp    ecx,DWORD PTR [rax+0x4]
   14000c240:	jne    0x14000c285
   14000c242:	mov    rdi,rcx
   14000c245:	lea    rcx,[r12+0x8]
   14000c24a:	call   QWORD PTR [rip+0x1ef80]        # 0x14002b1d0
   14000c250:	lea    rcx,[rsi+0x20]
   14000c254:	mov    rbx,rax
   14000c257:	call   QWORD PTR [rip+0x1ef73]        # 0x14002b1d0
   14000c25d:	mov    r8,rdi
   14000c260:	mov    rcx,rax
   14000c263:	mov    rdx,rbx
   14000c266:	call   0x140029600
   14000c26b:	test   eax,eax
   14000c26d:	jne    0x14000c285
   14000c26f:	lea    rdx,[r12+0x10]
   14000c274:	lea    rcx,[rsi+0x28]
   14000c278:	call   QWORD PTR [rip+0x1f152]        # 0x14002b3d0
   14000c27e:	test   eax,eax
   14000c280:	sets   al
   14000c283:	jmp    0x14000c2ad
   14000c285:	lea    rdx,[r12+0x8]
   14000c28a:	lea    rcx,[rsi+0x20]
   14000c28e:	call   QWORD PTR [rip+0x1f13c]        # 0x14002b3d0
   14000c294:	test   eax,eax
   14000c296:	sets   al
   14000c299:	jmp    0x14000c2ad
   14000c29b:	lea    rcx,[rsi+0x18]
   14000c29f:	mov    rdx,r12
   14000c2a2:	call   QWORD PTR [rip+0x1f128]        # 0x14002b3d0
   14000c2a8:	test   eax,eax
   14000c2aa:	sets   al
   14000c2ad:	test   al,al
   14000c2af:	jne    0x14000c2ba
   14000c2b1:	mov    r15,rsi
   14000c2b4:	mov    rsi,QWORD PTR [rsi+0x8]
   14000c2b8:	jmp    0x14000c2be
   14000c2ba:	mov    rsi,QWORD PTR [rsi+0x10]
   14000c2be:	test   rsi,rsi
   14000c2c1:	jne    0x14000c1f0
   14000c2c7:	mov    r14,QWORD PTR [rsp+0x20]
   14000c2cc:	mov    r13,QWORD PTR [rsp+0x28]
   14000c2d1:	mov    rdi,QWORD PTR [rsp+0x60]
   14000c2d6:	mov    rbp,QWORD PTR [rsp+0x58]
   14000c2db:	mov    rbx,QWORD PTR [rsp+0x50]
   14000c2e0:	mov    rax,r15
   14000c2e3:	add    rsp,0x30
   14000c2e7:	pop    r15
   14000c2e9:	pop    r12
   14000c2eb:	pop    rsi
   14000c2ec:	ret    
   14000c2ed:	int3   
   14000c2ee:	int3   
   14000c2ef:	int3   
   14000c2f0:	mov    QWORD PTR [rsp+0x8],rbx
   14000c2f5:	mov    QWORD PTR [rsp+0x10],rsi
   14000c2fa:	push   rdi
   14000c2fb:	sub    rsp,0x30
   14000c2ff:	xor    r9d,r9d
   14000c302:	mov    rsi,rdx
   14000c305:	mov    rdi,rcx
   14000c308:	lea    edx,[r9+0x28]
   14000c30c:	lea    r8d,[r9+0x8]
   14000c310:	mov    rcx,rsi
   14000c313:	mov    BYTE PTR [rsp+0x20],0x0
   14000c318:	call   QWORD PTR [rip+0x1f122]        # 0x14002b440
   14000c31e:	lea    rcx,[rax+0x18]
   14000c322:	mov    rbx,rax
   14000c325:	test   rcx,rcx
   14000c328:	je     0x14000c334
   14000c32a:	lea    rdx,[rdi+0x18]
   14000c32e:	call   QWORD PTR [rip+0x1f0ac]        # 0x14002b3e0
   14000c334:	lea    rax,[rbx+0x20]
   14000c338:	test   rax,rax
   14000c33b:	je     0x14000c342
   14000c33d:	mov    ecx,DWORD PTR [rdi+0x20]
   14000c340:	mov    DWORD PTR [rax],ecx
   14000c342:	test   BYTE PTR [rdi],0x1
   14000c345:	je     0x14000c34d
   14000c347:	or     QWORD PTR [rbx],0x1
   14000c34b:	jmp    0x14000c351
   14000c34d:	and    QWORD PTR [rbx],0xfffffffffffffffe
   14000c351:	mov    rcx,QWORD PTR [rdi+0x8]
   14000c355:	test   rcx,rcx
   14000c358:	je     0x14000c36f
   14000c35a:	mov    rdx,rsi
   14000c35d:	call   0x14000c2f0
   14000c362:	mov    QWORD PTR [rbx+0x8],rax
   14000c366:	and    QWORD PTR [rax],0x3
   14000c36a:	or     QWORD PTR [rax],rbx
   14000c36d:	jmp    0x14000c377
   14000c36f:	mov    QWORD PTR [rbx+0x8],0x0
   14000c377:	mov    rcx,QWORD PTR [rdi+0x10]
   14000c37b:	test   rcx,rcx
   14000c37e:	je     0x14000c3a6
   14000c380:	mov    rdx,rsi
   14000c383:	call   0x14000c2f0
   14000c388:	mov    QWORD PTR [rbx+0x10],rax
   14000c38c:	and    QWORD PTR [rax],0x3
   14000c390:	or     QWORD PTR [rax],rbx
   14000c393:	mov    rax,rbx
   14000c396:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c39b:	mov    rsi,QWORD PTR [rsp+0x48]
   14000c3a0:	add    rsp,0x30
   14000c3a4:	pop    rdi
   14000c3a5:	ret    
   14000c3a6:	mov    rsi,QWORD PTR [rsp+0x48]
   14000c3ab:	mov    QWORD PTR [rbx+0x10],0x0
   14000c3b3:	mov    rax,rbx
   14000c3b6:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c3bb:	add    rsp,0x30
   14000c3bf:	pop    rdi
   14000c3c0:	ret    
   14000c3c1:	int3   
   14000c3c2:	int3   
   14000c3c3:	int3   
   14000c3c4:	int3   
   14000c3c5:	int3   
   14000c3c6:	int3   
   14000c3c7:	int3   
   14000c3c8:	int3   
   14000c3c9:	int3   
   14000c3ca:	int3   
   14000c3cb:	int3   
   14000c3cc:	int3   
   14000c3cd:	int3   
   14000c3ce:	int3   
   14000c3cf:	int3   
   14000c3d0:	mov    QWORD PTR [rsp+0x8],rbx
   14000c3d5:	mov    QWORD PTR [rsp+0x10],rsi
   14000c3da:	push   rdi
   14000c3db:	sub    rsp,0x30
   14000c3df:	xor    r9d,r9d
   14000c3e2:	mov    rsi,rdx
   14000c3e5:	mov    rdi,rcx
   14000c3e8:	lea    edx,[r9+0x28]
   14000c3ec:	lea    r8d,[r9+0x8]
   14000c3f0:	mov    rcx,rsi
   14000c3f3:	mov    BYTE PTR [rsp+0x20],0x0
   14000c3f8:	call   QWORD PTR [rip+0x1f042]        # 0x14002b440
   14000c3fe:	mov    rbx,rax
   14000c401:	add    rax,0x18
   14000c405:	je     0x14000c40e
   14000c407:	mov    r8d,DWORD PTR [rdi+0x18]
   14000c40b:	mov    DWORD PTR [rax],r8d
   14000c40e:	lea    rcx,[rbx+0x20]
   14000c412:	test   rcx,rcx
   14000c415:	je     0x14000c421
   14000c417:	lea    rdx,[rdi+0x20]
   14000c41b:	call   QWORD PTR [rip+0x1efbf]        # 0x14002b3e0
   14000c421:	test   BYTE PTR [rdi],0x1
   14000c424:	je     0x14000c42c
   14000c426:	or     QWORD PTR [rbx],0x1
   14000c42a:	jmp    0x14000c430
   14000c42c:	and    QWORD PTR [rbx],0xfffffffffffffffe
   14000c430:	mov    rcx,QWORD PTR [rdi+0x8]
   14000c434:	test   rcx,rcx
   14000c437:	je     0x14000c44e
   14000c439:	mov    rdx,rsi
   14000c43c:	call   0x14000c3d0
   14000c441:	mov    QWORD PTR [rbx+0x8],rax
   14000c445:	and    QWORD PTR [rax],0x3
   14000c449:	or     QWORD PTR [rax],rbx
   14000c44c:	jmp    0x14000c456
   14000c44e:	mov    QWORD PTR [rbx+0x8],0x0
   14000c456:	mov    rcx,QWORD PTR [rdi+0x10]
   14000c45a:	test   rcx,rcx
   14000c45d:	je     0x14000c485
   14000c45f:	mov    rdx,rsi
   14000c462:	call   0x14000c3d0
   14000c467:	mov    QWORD PTR [rbx+0x10],rax
   14000c46b:	and    QWORD PTR [rax],0x3
   14000c46f:	or     QWORD PTR [rax],rbx
   14000c472:	mov    rax,rbx
   14000c475:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c47a:	mov    rsi,QWORD PTR [rsp+0x48]
   14000c47f:	add    rsp,0x30
   14000c483:	pop    rdi
   14000c484:	ret    
   14000c485:	mov    rsi,QWORD PTR [rsp+0x48]
   14000c48a:	mov    QWORD PTR [rbx+0x10],0x0
   14000c492:	mov    rax,rbx
   14000c495:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c49a:	add    rsp,0x30
   14000c49e:	pop    rdi
   14000c49f:	ret    
   14000c4a0:	rex push rbx
   14000c4a2:	sub    rsp,0x20
   14000c4a6:	lea    rdx,[rcx+0x8]
   14000c4aa:	lea    rbx,[rcx+0x10]
   14000c4ae:	lea    rcx,[rsp+0x30]
   14000c4b3:	call   QWORD PTR [rip+0x1ef27]        # 0x14002b3e0
   14000c4b9:	lea    rcx,[rsp+0x30]
   14000c4be:	mov    rdx,rbx
   14000c4c1:	call   QWORD PTR [rip+0x1ef11]        # 0x14002b3d8
   14000c4c7:	lea    rcx,[rsp+0x30]
   14000c4cc:	call   QWORD PTR [rip+0x1ef16]        # 0x14002b3e8
   14000c4d2:	xor    ebx,ebx
   14000c4d4:	mov    r11,rax
   14000c4d7:	test   rax,rax
   14000c4da:	je     0x14000c50e
   14000c4dc:	movzx  ecx,BYTE PTR [rax]
   14000c4df:	test   cl,cl
   14000c4e1:	je     0x14000c50e
   14000c4e3:	movzx  eax,cl
   14000c4e6:	shl    ebx,0x4
   14000c4e9:	inc    r11
   14000c4ec:	add    ebx,eax
   14000c4ee:	mov    ecx,ebx
   14000c4f0:	and    ecx,0xf0000000
   14000c4f6:	je     0x14000c4ff
   14000c4f8:	mov    eax,ecx
   14000c4fa:	shr    eax,0x18
   14000c4fd:	xor    ebx,eax
   14000c4ff:	not    ecx
   14000c501:	and    ebx,ecx
   14000c503:	mov    cl,BYTE PTR [r11]
   14000c506:	test   cl,cl
   14000c508:	jne    0x14000c4e3
   14000c50a:	test   ebx,ebx
   14000c50c:	jne    0x14000c513
   14000c50e:	mov    ebx,0x1
   14000c513:	lea    rcx,[rsp+0x30]
   14000c518:	call   QWORD PTR [rip+0x1ecaa]        # 0x14002b1c8
   14000c51e:	mov    eax,ebx
   14000c520:	add    rsp,0x20
   14000c524:	pop    rbx
   14000c525:	ret    
   14000c526:	int3   
   14000c527:	int3   
   14000c528:	int3   
   14000c529:	int3   
   14000c52a:	int3   
   14000c52b:	int3   
   14000c52c:	int3   
   14000c52d:	int3   
   14000c52e:	int3   
   14000c52f:	int3   
   14000c530:	mov    QWORD PTR [rsp+0x8],rbx
   14000c535:	mov    QWORD PTR [rsp+0x10],rsi
   14000c53a:	push   rdi
   14000c53b:	sub    rsp,0x20
   14000c53f:	mov    rdi,rdx
   14000c542:	mov    rsi,rcx
   14000c545:	call   0x14000c4a0
   14000c54a:	mov    rcx,rdi
   14000c54d:	mov    ebx,eax
   14000c54f:	call   0x14000c4a0
   14000c554:	cmp    ebx,eax
   14000c556:	je     0x14000c56a
   14000c558:	xor    eax,eax
   14000c55a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c55f:	mov    rsi,QWORD PTR [rsp+0x38]
   14000c564:	add    rsp,0x20
   14000c568:	pop    rdi
   14000c569:	ret    
   14000c56a:	mov    rdx,rdi
   14000c56d:	mov    rcx,rsi
   14000c570:	call   0x14000be30
   14000c575:	test   al,al
   14000c577:	je     0x14000c58e
   14000c579:	mov    eax,0x1
   14000c57e:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c583:	mov    rsi,QWORD PTR [rsp+0x38]
   14000c588:	add    rsp,0x20
   14000c58c:	pop    rdi
   14000c58d:	ret    
   14000c58e:	lea    rdx,[rdi+0x8]
   14000c592:	lea    rcx,[rsi+0x8]
   14000c596:	call   0x14000be30
   14000c59b:	test   al,al
   14000c59d:	je     0x14000c5b4
   14000c59f:	mov    eax,0x2
   14000c5a4:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c5a9:	mov    rsi,QWORD PTR [rsp+0x38]
   14000c5ae:	add    rsp,0x20
   14000c5b2:	pop    rdi
   14000c5b3:	ret    
   14000c5b4:	lea    rdx,[rdi+0x10]
   14000c5b8:	lea    rcx,[rsi+0x10]
   14000c5bc:	call   0x14000be30
   14000c5c1:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c5c6:	mov    rsi,QWORD PTR [rsp+0x38]
   14000c5cb:	neg    al
   14000c5cd:	sbb    eax,eax
   14000c5cf:	add    eax,0x4
   14000c5d2:	add    rsp,0x20
   14000c5d6:	pop    rdi
   14000c5d7:	ret    
   14000c5d8:	int3   
   14000c5d9:	int3   
   14000c5da:	int3   
   14000c5db:	int3   
   14000c5dc:	int3   
   14000c5dd:	int3   
   14000c5de:	int3   
   14000c5df:	int3   
   14000c5e0:	mov    QWORD PTR [rsp+0x18],rbx
   14000c5e5:	mov    QWORD PTR [rsp+0x20],rsi
   14000c5ea:	push   rdi
   14000c5eb:	sub    rsp,0x20
   14000c5ef:	mov    rax,QWORD PTR [rdx+0x18]
   14000c5f3:	mov    QWORD PTR [rsp+0x30],rbp
   14000c5f8:	xor    ebp,ebp
   14000c5fa:	mov    ecx,DWORD PTR [rax+0xc]
   14000c5fd:	mov    QWORD PTR [rsp+0x38],r12
   14000c602:	mov    rdi,r8
   14000c605:	sub    ecx,DWORD PTR [rax+0x8]
   14000c608:	mov    r12d,r9d
   14000c60b:	mov    rsi,rdx
   14000c60e:	test   ecx,ecx
   14000c610:	jle    0x14000c64c
   14000c612:	mov    rdx,QWORD PTR [rsi+0x18]
   14000c616:	movsxd rax,ebp
   14000c619:	movsxd rcx,DWORD PTR [rdx+0x8]
   14000c61d:	add    rcx,rax
   14000c620:	lea    rbx,[rdx+rcx*8+0x10]
   14000c625:	mov    dl,0x3
   14000c627:	mov    rcx,rdi
   14000c62a:	call   QWORD PTR [rip+0x1ede0]        # 0x14002b410
   14000c630:	mov    rdx,rbx
   14000c633:	mov    rcx,rax
   14000c636:	call   QWORD PTR [rip+0x1ee14]        # 0x14002b450
   14000c63c:	mov    rax,QWORD PTR [rsi+0x18]
   14000c640:	inc    ebp
   14000c642:	mov    ecx,DWORD PTR [rax+0xc]
   14000c645:	sub    ecx,DWORD PTR [rax+0x8]
   14000c648:	cmp    ebp,ecx
   14000c64a:	jl     0x14000c612
   14000c64c:	mov    ecx,DWORD PTR [rsp+0x50]
   14000c650:	mov    rbp,QWORD PTR [rsp+0x30]
   14000c655:	test   r12d,r12d
   14000c658:	mov    r12,QWORD PTR [rsp+0x38]
   14000c65d:	mov    eax,0x4
   14000c662:	cmove  ecx,eax
   14000c665:	sub    ecx,0x2
   14000c668:	je     0x14000c69f
   14000c66a:	cmp    ecx,0x1
   14000c66d:	je     0x14000c687
   14000c66f:	mov    dl,0x8
   14000c671:	mov    rcx,rdi
   14000c674:	call   QWORD PTR [rip+0x1ed96]        # 0x14002b410
   14000c67a:	lea    rdx,[rsi+0x10]
   14000c67e:	mov    rcx,rax
   14000c681:	call   QWORD PTR [rip+0x1edc1]        # 0x14002b448
   14000c687:	mov    dl,0x6
   14000c689:	mov    rcx,rdi
   14000c68c:	call   QWORD PTR [rip+0x1ed7e]        # 0x14002b410
   14000c692:	lea    rdx,[rsi+0x8]
   14000c696:	mov    rcx,rax
   14000c699:	call   QWORD PTR [rip+0x1eda9]        # 0x14002b448
   14000c69f:	mov    dl,0x7
   14000c6a1:	mov    rcx,rdi
   14000c6a4:	call   QWORD PTR [rip+0x1ed66]        # 0x14002b410
   14000c6aa:	mov    rdx,rsi
   14000c6ad:	mov    rcx,rax
   14000c6b0:	call   QWORD PTR [rip+0x1ed92]        # 0x14002b448
   14000c6b6:	mov    dl,0x1
   14000c6b8:	mov    rcx,rdi
   14000c6bb:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c6c0:	mov    rsi,QWORD PTR [rsp+0x48]
   14000c6c5:	add    rsp,0x20
   14000c6c9:	pop    rdi
   14000c6ca:	rex.W jmp QWORD PTR [rip+0x1ed3f]        # 0x14002b410
   14000c6d1:	int3   
   14000c6d2:	int3   
   14000c6d3:	int3   
   14000c6d4:	int3   
   14000c6d5:	int3   
   14000c6d6:	int3   
   14000c6d7:	int3   
   14000c6d8:	int3   
   14000c6d9:	int3   
   14000c6da:	int3   
   14000c6db:	int3   
   14000c6dc:	int3   
   14000c6dd:	int3   
   14000c6de:	int3   
   14000c6df:	int3   
   14000c6e0:	rex push rbx
   14000c6e2:	sub    rsp,0x20
   14000c6e6:	mov    rbx,rcx
   14000c6e9:	nop    DWORD PTR [rax+0x0]
   14000c6f0:	lea    rcx,[rbx+0x18]
   14000c6f4:	call   QWORD PTR [rip+0x1eace]        # 0x14002b1c8
   14000c6fa:	mov    rcx,QWORD PTR [rbx+0x8]
   14000c6fe:	test   rcx,rcx
   14000c701:	je     0x14000c708
   14000c703:	call   0x14000c6e0
   14000c708:	mov    rbx,QWORD PTR [rbx+0x10]
   14000c70c:	test   rbx,rbx
   14000c70f:	jne    0x14000c6f0
   14000c711:	add    rsp,0x20
   14000c715:	pop    rbx
   14000c716:	ret    
   14000c717:	int3   
   14000c718:	int3   
   14000c719:	int3   
   14000c71a:	int3   
   14000c71b:	int3   
   14000c71c:	int3   
   14000c71d:	int3   
   14000c71e:	int3   
   14000c71f:	int3   
   14000c720:	rex push rbx
   14000c722:	sub    rsp,0x20
   14000c726:	mov    rbx,rcx
   14000c729:	nop    DWORD PTR [rax+0x0]
   14000c730:	lea    rcx,[rbx+0x20]
   14000c734:	call   QWORD PTR [rip+0x1ea8e]        # 0x14002b1c8
   14000c73a:	mov    rcx,QWORD PTR [rbx+0x8]
   14000c73e:	test   rcx,rcx
   14000c741:	je     0x14000c748
   14000c743:	call   0x14000c720
   14000c748:	mov    rbx,QWORD PTR [rbx+0x10]
   14000c74c:	test   rbx,rbx
   14000c74f:	jne    0x14000c730
   14000c751:	add    rsp,0x20
   14000c755:	pop    rbx
   14000c756:	ret    
   14000c757:	int3   
   14000c758:	int3   
   14000c759:	int3   
   14000c75a:	int3   
   14000c75b:	int3   
   14000c75c:	int3   
   14000c75d:	int3   
   14000c75e:	int3   
   14000c75f:	int3   
   14000c760:	mov    QWORD PTR [rsp+0x8],rbx
   14000c765:	mov    QWORD PTR [rsp+0x10],rbp
   14000c76a:	mov    QWORD PTR [rsp+0x18],rsi
   14000c76f:	push   rdi
   14000c770:	sub    rsp,0x30
   14000c774:	movzx  eax,BYTE PTR [rsp+0x60]
   14000c779:	mov    rsi,rdx
   14000c77c:	mov    edx,0x40
   14000c781:	mov    rbp,r8
   14000c784:	lea    r8d,[rdx-0x38]
   14000c788:	mov    BYTE PTR [rsp+0x20],al
   14000c78c:	call   QWORD PTR [rip+0x1ecae]        # 0x14002b440
   14000c792:	mov    rbx,rax
   14000c795:	lea    rdi,[rax+0x18]
   14000c799:	test   rdi,rdi
   14000c79c:	je     0x14000c7d3
   14000c79e:	mov    rdx,rsi
   14000c7a1:	mov    rcx,rdi
   14000c7a4:	call   QWORD PTR [rip+0x1ec36]        # 0x14002b3e0
   14000c7aa:	lea    rdx,[rsi+0x8]
   14000c7ae:	lea    rcx,[rdi+0x8]
   14000c7b2:	call   QWORD PTR [rip+0x1ec28]        # 0x14002b3e0
   14000c7b8:	lea    rdx,[rsi+0x10]
   14000c7bc:	lea    rcx,[rdi+0x10]
   14000c7c0:	call   QWORD PTR [rip+0x1ec1a]        # 0x14002b3e0
   14000c7c6:	lea    rdx,[rsi+0x18]
   14000c7ca:	lea    rcx,[rdi+0x18]
   14000c7ce:	call   0x140001700
   14000c7d3:	lea    rcx,[rbx+0x38]
   14000c7d7:	test   rcx,rcx
   14000c7da:	je     0x14000c7e3
   14000c7dc:	mov    rax,QWORD PTR [rbp+0x0]
   14000c7e0:	mov    QWORD PTR [rcx],rax
   14000c7e3:	mov    rbp,QWORD PTR [rsp+0x48]
   14000c7e8:	mov    rsi,QWORD PTR [rsp+0x50]
   14000c7ed:	mov    rax,rbx
   14000c7f0:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c7f5:	add    rsp,0x30
   14000c7f9:	pop    rdi
   14000c7fa:	ret    
   14000c7fb:	int3   
   14000c7fc:	int3   
   14000c7fd:	int3   
   14000c7fe:	int3   
   14000c7ff:	int3   
   14000c800:	mov    QWORD PTR [rsp+0x8],rbx
   14000c805:	mov    QWORD PTR [rsp+0x10],rsi
   14000c80a:	push   rdi
   14000c80b:	sub    rsp,0x30
   14000c80f:	mov    rsi,rdx
   14000c812:	lea    r8,[rcx+0x38]
   14000c816:	lea    rdx,[rcx+0x18]
   14000c81a:	mov    rdi,rcx
   14000c81d:	xor    r9d,r9d
   14000c820:	mov    rcx,rsi
   14000c823:	mov    BYTE PTR [rsp+0x20],0x0
   14000c828:	call   0x14000c760
   14000c82d:	test   BYTE PTR [rdi],0x1
   14000c830:	mov    rbx,rax
   14000c833:	je     0x14000c83b
   14000c835:	or     QWORD PTR [rax],0x1
   14000c839:	jmp    0x14000c83f
   14000c83b:	and    QWORD PTR [rax],0xfffffffffffffffe
   14000c83f:	mov    rcx,QWORD PTR [rdi+0x8]
   14000c843:	test   rcx,rcx
   14000c846:	je     0x14000c85d
   14000c848:	mov    rdx,rsi
   14000c84b:	call   0x14000c800
   14000c850:	mov    QWORD PTR [rbx+0x8],rax
   14000c854:	and    QWORD PTR [rax],0x3
   14000c858:	or     QWORD PTR [rax],rbx
   14000c85b:	jmp    0x14000c865
   14000c85d:	mov    QWORD PTR [rax+0x8],0x0
   14000c865:	mov    rcx,QWORD PTR [rdi+0x10]
   14000c869:	test   rcx,rcx
   14000c86c:	je     0x14000c894
   14000c86e:	mov    rdx,rsi
   14000c871:	call   0x14000c800
   14000c876:	mov    QWORD PTR [rbx+0x10],rax
   14000c87a:	and    QWORD PTR [rax],0x3
   14000c87e:	or     QWORD PTR [rax],rbx
   14000c881:	mov    rax,rbx
   14000c884:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c889:	mov    rsi,QWORD PTR [rsp+0x48]
   14000c88e:	add    rsp,0x30
   14000c892:	pop    rdi
   14000c893:	ret    
   14000c894:	mov    rsi,QWORD PTR [rsp+0x48]
   14000c899:	mov    QWORD PTR [rbx+0x10],0x0
   14000c8a1:	mov    rax,rbx
   14000c8a4:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c8a9:	add    rsp,0x30
   14000c8ad:	pop    rdi
   14000c8ae:	ret    
   14000c8af:	int3   
   14000c8b0:	mov    QWORD PTR [rsp+0x18],r8
   14000c8b5:	mov    QWORD PTR [rsp+0x8],rcx
   14000c8ba:	push   rbx
   14000c8bb:	push   rsi
   14000c8bc:	push   rdi
   14000c8bd:	push   r14
   14000c8bf:	sub    rsp,0x298
   14000c8c6:	mov    rax,rdx
   14000c8c9:	mov    rbx,rcx
   14000c8cc:	lea    rdx,[rsp+0x60]
   14000c8d1:	mov    rcx,rax
   14000c8d4:	mov    rsi,r8
   14000c8d7:	call   QWORD PTR [rip+0x1ebf3]        # 0x14002b4d0
   14000c8dd:	lea    rcx,[rsp+0x60]
   14000c8e2:	call   QWORD PTR [rip+0x1ebe0]        # 0x14002b4c8
   14000c8e8:	mov    rdx,QWORD PTR [rsp+0x60]
   14000c8ed:	movsxd r9,DWORD PTR [rdx+0x4]
   14000c8f1:	mov    rcx,rax
   14000c8f4:	cmp    r9d,0x10
   14000c8f8:	jl     0x14000d61d
   14000c8fe:	mov    rdi,QWORD PTR [rax]
   14000c901:	lea    rdx,[rip+0xffffffffffff36f8]        # 0x140000000
   14000c908:	cmp    rdi,QWORD PTR [rdx+0x2d3a0]
   14000c90f:	lea    rdx,[rdx+0x2d3a0]
   14000c916:	jne    0x14000c929
   14000c918:	mov    rdi,QWORD PTR [rax+0x8]
   14000c91c:	add    rdx,0x8
   14000c920:	cmp    rdi,QWORD PTR [rdx]
   14000c923:	jne    0x14000c929
   14000c925:	xor    eax,eax
   14000c927:	jmp    0x14000c92e
   14000c929:	sbb    eax,eax
   14000c92b:	sbb    eax,0xffffffff
   14000c92e:	test   eax,eax
   14000c930:	jne    0x14000d61d
   14000c936:	mov    QWORD PTR [rsp+0x2c8],rbp
   14000c93e:	mov    QWORD PTR [rsp+0x290],r12
   14000c946:	lea    r12,[rcx+r9*1]
   14000c94a:	mov    QWORD PTR [rsp+0x288],r13
   14000c952:	lea    r14,[r12-0x4]
   14000c957:	add    rcx,0x10
   14000c95b:	mov    QWORD PTR [rsp+0x280],r15
   14000c963:	xor    r13d,r13d
   14000c966:	or     rsi,0xffffffffffffffff
   14000c96a:	xor    r15d,r15d
   14000c96d:	mov    QWORD PTR [rsp+0xe8],0x0
   14000c979:	mov    BYTE PTR [rsp+0x30],0x1
   14000c97e:	lea    edi,[rax+0x1]
   14000c981:	cmp    rcx,r14
   14000c984:	jae    0x14000cbb3
   14000c98a:	nop    WORD PTR [rax+rax*1+0x0]
   14000c990:	movzx  eax,BYTE PTR [rcx+0x2]
   14000c994:	movzx  r8d,BYTE PTR [rcx+0x1]
   14000c999:	movzx  edx,BYTE PTR [rcx]
   14000c99c:	shl    r8d,0x8
   14000c9a0:	add    rcx,0x5
   14000c9a4:	or     r8d,eax
   14000c9a7:	movzx  eax,BYTE PTR [rcx-0x2]
   14000c9ab:	shl    r8d,0x8
   14000c9af:	or     r8d,eax
   14000c9b2:	movzx  eax,BYTE PTR [rcx-0x1]
   14000c9b6:	shl    r8d,0x8
   14000c9ba:	or     r8d,eax
   14000c9bd:	test   dl,dl
   14000c9bf:	je     0x14000cbb3
   14000c9c5:	test   r8d,r8d
   14000c9c8:	je     0x14000cbb3
   14000c9ce:	mov    ebp,r8d
   14000c9d1:	add    rbp,rcx
   14000c9d4:	cmp    rbp,r12
   14000c9d7:	ja     0x14000cbae
   14000c9dd:	cmp    dl,0x42
   14000c9e0:	jne    0x14000c9ed
   14000c9e2:	mov    r13,rcx
   14000c9e5:	mov    r15d,r8d
   14000c9e8:	jmp    0x14000cba0
   14000c9ed:	cmp    dl,0x69
   14000c9f0:	jne    0x14000c9ff
   14000c9f2:	mov    QWORD PTR [rsp+0xe8],rcx
   14000c9fa:	jmp    0x14000cba0
   14000c9ff:	cmp    dl,0x96
   14000ca02:	jne    0x14000cba0
   14000ca08:	mov    rax,QWORD PTR [rip+0x1ee79]        # 0x14002b888
   14000ca0f:	mov    rdx,rcx
   14000ca12:	lea    rcx,[rsp+0x130]
   14000ca1a:	mov    QWORD PTR [rsp+0x58],rax
   14000ca1f:	call   QWORD PTR [rip+0x1e843]        # 0x14002b268
   14000ca25:	lea    rcx,[rsp+0x150]
   14000ca2d:	mov    rdx,rax
   14000ca30:	call   QWORD PTR [rip+0x1ea8a]        # 0x14002b4c0
   14000ca36:	lea    rcx,[rsp+0x130]
   14000ca3e:	call   QWORD PTR [rip+0x1e784]        # 0x14002b1c8
   14000ca44:	lea    rcx,[rsp+0x70]
   14000ca49:	call   QWORD PTR [rip+0x1ee41]        # 0x14002b890
   14000ca4f:	lea    rcx,[rsp+0x150]
   14000ca57:	call   QWORD PTR [rip+0x1ea5b]        # 0x14002b4b8
   14000ca5d:	test   al,al
   14000ca5f:	jne    0x14000caf9
   14000ca65:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000ca70:	lea    rdx,[rsp+0x70]
   14000ca75:	lea    rcx,[rsp+0x150]
   14000ca7d:	call   QWORD PTR [rip+0x1ea2d]        # 0x14002b4b0
   14000ca83:	mov    rdx,QWORD PTR [rsp+0x58]
   14000ca88:	mov    eax,DWORD PTR [rdx]
   14000ca8a:	cmp    eax,0x1
   14000ca8d:	je     0x14000caba
   14000ca8f:	test   eax,eax
   14000ca91:	je     0x14000caba
   14000ca93:	lea    rcx,[rsp+0x58]
   14000ca98:	mov    r8d,edi
   14000ca9b:	mov    edx,0x7fffffff
   14000caa0:	call   0x140001a10
   14000caa5:	test   rax,rax
   14000caa8:	je     0x14000cae3
   14000caaa:	lea    rdx,[rsp+0x70]
   14000caaf:	mov    rcx,rax
   14000cab2:	call   QWORD PTR [rip+0x1ede8]        # 0x14002b8a0
   14000cab8:	jmp    0x14000cae3
   14000caba:	lea    rdx,[rsp+0x70]
   14000cabf:	lea    rcx,[rsp+0x110]
   14000cac7:	call   QWORD PTR [rip+0x1edd3]        # 0x14002b8a0
   14000cacd:	lea    rcx,[rsp+0x58]
   14000cad2:	call   QWORD PTR [rip+0x1ed68]        # 0x14002b840
   14000cad8:	mov    rcx,QWORD PTR [rsp+0x110]
   14000cae0:	mov    QWORD PTR [rax],rcx
   14000cae3:	lea    rcx,[rsp+0x150]
   14000caeb:	call   QWORD PTR [rip+0x1e9c7]        # 0x14002b4b8
   14000caf1:	test   al,al
   14000caf3:	je     0x14000ca70
   14000caf9:	lea    rcx,[rbx+0x20]
   14000cafd:	lea    rdx,[rsp+0x58]
   14000cb02:	call   0x140001830
   14000cb07:	lea    rcx,[rsp+0x70]
   14000cb0c:	call   QWORD PTR [rip+0x1ed86]        # 0x14002b898
   14000cb12:	lea    rcx,[rsp+0x150]
   14000cb1a:	call   QWORD PTR [rip+0x1e8e0]        # 0x14002b400
   14000cb20:	mov    rbx,QWORD PTR [rsp+0x58]
   14000cb25:	mov    eax,DWORD PTR [rbx]
   14000cb27:	test   eax,eax
   14000cb29:	je     0x14000cb45
   14000cb2b:	cmp    eax,0xffffffff
   14000cb2e:	je     0x14000cb8e
   14000cb30:	mov    eax,esi
   14000cb32:	lock xadd DWORD PTR [rbx],eax
   14000cb36:	add    eax,0xffffffff
   14000cb39:	setne  al
   14000cb3c:	test   al,al
   14000cb3e:	jne    0x14000cb98
   14000cb40:	mov    rbx,QWORD PTR [rsp+0x58]
   14000cb45:	movsxd rax,DWORD PTR [rbx+0xc]
   14000cb49:	lea    rdi,[rbx+rax*8+0x10]
   14000cb4e:	movsxd rax,DWORD PTR [rbx+0x8]
   14000cb52:	lea    rsi,[rbx+rax*8+0x10]
   14000cb57:	cmp    rsi,rdi
   14000cb5a:	je     0x14000cb72
   14000cb5c:	nop    DWORD PTR [rax+0x0]
   14000cb60:	sub    rdi,0x8
   14000cb64:	mov    rcx,rdi
   14000cb67:	call   QWORD PTR [rip+0x1ed2b]        # 0x14002b898
   14000cb6d:	cmp    rdi,rsi
   14000cb70:	jne    0x14000cb60
   14000cb72:	mov    rcx,rbx
   14000cb75:	call   QWORD PTR [rip+0x1ecf5]        # 0x14002b870
   14000cb7b:	mov    rbx,QWORD PTR [rsp+0x2c0]
   14000cb83:	mov    edi,0x1
   14000cb88:	or     rsi,0xffffffffffffffff
   14000cb8c:	jmp    0x14000cba0
   14000cb8e:	mov    rbx,QWORD PTR [rsp+0x2c0]
   14000cb96:	jmp    0x14000cba0
   14000cb98:	mov    rbx,QWORD PTR [rsp+0x2c0]
   14000cba0:	mov    rcx,rbp
   14000cba3:	cmp    rbp,r14
   14000cba6:	jb     0x14000c990
   14000cbac:	jmp    0x14000cbb3
   14000cbae:	mov    BYTE PTR [rsp+0x30],0x0
   14000cbb3:	lea    rdx,[rip+0x2085a]        # 0x14002d414
   14000cbba:	mov    esi,r15d
   14000cbbd:	xor    eax,eax
   14000cbbf:	mov    rdi,rdx
   14000cbc2:	mov    QWORD PTR [rsp+0xb8],rdx
   14000cbca:	or     r15,0xffffffffffffffff
   14000cbce:	mov    rcx,r15
   14000cbd1:	lea    rdx,[rsp+0x170]
   14000cbd9:	shr    rsi,0x3
   14000cbdd:	repnz scas al,BYTE PTR es:[rdi]
   14000cbdf:	not    rcx
   14000cbe2:	dec    rcx
   14000cbe5:	mov    DWORD PTR [rsp+0xb0],ecx
   14000cbec:	lea    rcx,[rsp+0x90]
   14000cbf4:	movaps xmm0,XMMWORD PTR [rsp+0xb0]
   14000cbfc:	movdqa XMMWORD PTR [rsp+0x170],xmm0
   14000cc05:	call   QWORD PTR [rip+0x1ec55]        # 0x14002b860
   14000cc0b:	lea    rdx,[rbx+0x10]
   14000cc0f:	lea    rcx,[rsp+0xf0]
   14000cc17:	call   QWORD PTR [rip+0x1ec83]        # 0x14002b8a0
   14000cc1d:	lea    r8,[rsp+0x98]
   14000cc25:	lea    rdx,[rsp+0xc0]
   14000cc2d:	lea    rcx,[rsp+0xf0]
   14000cc35:	call   0x140004f70
   14000cc3a:	lea    rcx,[rsp+0xf0]
   14000cc42:	call   QWORD PTR [rip+0x1ec50]        # 0x14002b898
   14000cc48:	mov    rdx,QWORD PTR [rip+0x1ec39]        # 0x14002b888
   14000cc4f:	mov    ecx,DWORD PTR [rsp+0xc0]
   14000cc56:	mov    QWORD PTR [rsp+0x48],rdx
   14000cc5b:	mov    edx,DWORD PTR [rsp+0x98]
   14000cc62:	lea    r9,[rsp+0x48]
   14000cc67:	xor    r8d,r8d
   14000cc6a:	mov    BYTE PTR [rsp+0x2d8],0x1
   14000cc72:	mov    QWORD PTR [rsp+0x20],0x0
   14000cc7b:	call   0x140004b70
   14000cc80:	test   al,al
   14000cc82:	je     0x14000cc9a
   14000cc84:	mov    rax,QWORD PTR [rsp+0x48]
   14000cc89:	mov    ecx,DWORD PTR [rax+0xc]
   14000cc8c:	sub    ecx,DWORD PTR [rax+0x8]
   14000cc8f:	cmp    ecx,0x1
   14000cc92:	sete   BYTE PTR [rsp+0x2d8]
   14000cc9a:	lea    rcx,[rsp+0x80]
   14000cca2:	call   QWORD PTR [rip+0x1ebe8]        # 0x14002b890
   14000cca8:	lea    rcx,[rsp+0x68]
   14000ccad:	call   QWORD PTR [rip+0x1ebdd]        # 0x14002b890
   14000ccb3:	lea    rcx,[rsp+0x78]
   14000ccb8:	call   QWORD PTR [rip+0x1ebd2]        # 0x14002b890
   14000ccbe:	mov    rbx,QWORD PTR [rip+0x1ebc3]        # 0x14002b888
   14000ccc5:	lea    rbp,[r13+rsi*8+0x0]
   14000ccca:	xor    r12b,r12b
   14000cccd:	mov    QWORD PTR [rsp+0x38],rbx
   14000ccd2:	mov    QWORD PTR [rsp+0xb0],rbp
   14000ccda:	cmp    r13,rbp
   14000ccdd:	je     0x14000d528
   14000cce3:	add    r13,0x6
   14000cce7:	mov    r14d,0x1
   14000cced:	mov    QWORD PTR [rsp+0xe0],r13
   14000ccf5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000cd00:	movzx  eax,BYTE PTR [r13-0x1]
   14000cd05:	movzx  ebx,BYTE PTR [r13-0x2]
   14000cd0a:	shl    ebx,0x8
   14000cd0d:	or     ebx,eax
   14000cd0f:	movzx  eax,BYTE PTR [r13+0x0]
   14000cd14:	shl    ebx,0x8
   14000cd17:	or     ebx,eax
   14000cd19:	movzx  eax,BYTE PTR [r13+0x1]
   14000cd1e:	lea    r13,[rip+0xffffffffffff32db]        # 0x140000000
   14000cd25:	shl    ebx,0x8
   14000cd28:	or     rbx,rax
   14000cd2b:	add    rbx,QWORD PTR [rsp+0xe8]
   14000cd33:	xor    esi,esi
   14000cd35:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000cd40:	movzx  eax,BYTE PTR [rbx]
   14000cd43:	inc    rbx
   14000cd46:	dec    eax
   14000cd48:	cmp    eax,0x7
   14000cd4b:	ja     0x14000cd40
   14000cd4d:	cdqe   
   14000cd4f:	mov    ecx,DWORD PTR [r13+rax*4+0xd6fc]
   14000cd57:	add    rcx,r13
   14000cd5a:	jmp    rcx
   14000cd5c:	movzx  eax,BYTE PTR [rbx+0x1]
   14000cd60:	movzx  ebp,BYTE PTR [rbx]
   14000cd63:	add    rbx,0x4
   14000cd67:	shl    ebp,0x8
   14000cd6a:	lea    rcx,[rsp+0x40]
   14000cd6f:	or     ebp,eax
   14000cd71:	movzx  eax,BYTE PTR [rbx-0x2]
   14000cd75:	shl    ebp,0x8
   14000cd78:	or     ebp,eax
   14000cd7a:	movzx  eax,BYTE PTR [rbx-0x1]
   14000cd7e:	shl    ebp,0x8
   14000cd81:	or     ebp,eax
   14000cd83:	mov    eax,ebp
   14000cd85:	cdq    
   14000cd86:	sub    eax,edx
   14000cd88:	mov    rdx,rbx
   14000cd8b:	sar    eax,1
   14000cd8d:	mov    r8d,eax
   14000cd90:	call   QWORD PTR [rip+0x1e712]        # 0x14002b4a8
   14000cd96:	mov    rax,QWORD PTR [rsp+0x40]
   14000cd9b:	cmp    DWORD PTR [rax+0x4],0x0
   14000cd9f:	jle    0x14000ce22
   14000cda5:	mov    r14d,0x100
   14000cdab:	nop    DWORD PTR [rax+rax*1+0x0]
   14000cdb0:	lea    rdx,[rsp+0xaa]
   14000cdb8:	lea    rcx,[rsp+0x40]
   14000cdbd:	mov    r8d,esi
   14000cdc0:	call   QWORD PTR [rip+0x1e6da]        # 0x14002b4a0
   14000cdc6:	lea    rdx,[rsp+0xa8]
   14000cdce:	lea    rcx,[rsp+0x40]
   14000cdd3:	movzx  edi,WORD PTR [rax]
   14000cdd6:	mov    r8d,esi
   14000cdd9:	call   QWORD PTR [rip+0x1e6c1]        # 0x14002b4a0
   14000cddf:	shr    di,0x8
   14000cde3:	lea    rcx,[rsp+0xd0]
   14000cdeb:	movzx  edx,WORD PTR [rax]
   14000cdee:	lea    rax,[rsp+0x40]
   14000cdf3:	mov    DWORD PTR [rsp+0xd8],esi
   14000cdfa:	mov    QWORD PTR [rsp+0xd0],rax
   14000ce02:	imul   dx,r14w
   14000ce07:	add    dx,di
   14000ce0a:	call   QWORD PTR [rip+0x1e688]        # 0x14002b498
   14000ce10:	mov    rax,QWORD PTR [rsp+0x40]
   14000ce15:	inc    esi
   14000ce17:	cmp    esi,DWORD PTR [rax+0x4]
   14000ce1a:	jl     0x14000cdb0
   14000ce1c:	mov    r14d,0x1
   14000ce22:	mov    rax,QWORD PTR [rsp+0x38]
   14000ce27:	mov    ecx,DWORD PTR [rax]
   14000ce29:	cmp    ecx,0x1
   14000ce2c:	je     0x14000ce59
   14000ce2e:	test   ecx,ecx
   14000ce30:	je     0x14000ce59
   14000ce32:	lea    rcx,[rsp+0x38]
   14000ce37:	mov    r8d,r14d
   14000ce3a:	mov    edx,0x7fffffff
   14000ce3f:	call   0x140001a10
   14000ce44:	test   rax,rax
   14000ce47:	je     0x14000ce82
   14000ce49:	lea    rdx,[rsp+0x40]
   14000ce4e:	mov    rcx,rax
   14000ce51:	call   QWORD PTR [rip+0x1ea49]        # 0x14002b8a0
   14000ce57:	jmp    0x14000ce82
   14000ce59:	lea    rdx,[rsp+0x40]
   14000ce5e:	lea    rcx,[rsp+0xf8]
   14000ce66:	call   QWORD PTR [rip+0x1ea34]        # 0x14002b8a0
   14000ce6c:	lea    rcx,[rsp+0x38]
   14000ce71:	call   QWORD PTR [rip+0x1e9c9]        # 0x14002b840
   14000ce77:	mov    rcx,QWORD PTR [rsp+0xf8]
   14000ce7f:	mov    QWORD PTR [rax],rcx
   14000ce82:	movsxd rax,ebp
   14000ce85:	lea    rcx,[rsp+0x40]
   14000ce8a:	add    rbx,rax
   14000ce8d:	call   QWORD PTR [rip+0x1ea05]        # 0x14002b898
   14000ce93:	xor    esi,esi
   14000ce95:	jmp    0x14000cd40
   14000ce9a:	add    rbx,0x4
   14000ce9e:	jmp    0x14000cd40
   14000cea3:	movzx  eax,BYTE PTR [rbx+0x1]
   14000cea7:	movzx  edi,BYTE PTR [rbx]
   14000ceaa:	add    rbx,0x4
   14000ceae:	shl    edi,0x8
   14000ceb1:	or     edi,eax
   14000ceb3:	movzx  eax,BYTE PTR [rbx-0x2]
   14000ceb7:	shl    edi,0x8
   14000ceba:	or     edi,eax
   14000cebc:	movzx  eax,BYTE PTR [rbx-0x1]
   14000cec0:	shl    edi,0x8
   14000cec3:	or     edi,eax
   14000cec5:	mov    eax,DWORD PTR [rip+0x2870d]        # 0x1400355d8
   14000cecb:	test   al,0x1
   14000cecd:	jne    0x14000ceec
   14000cecf:	or     eax,0x1
   14000ced2:	lea    rcx,[rip+0x204e3]        # 0x14002d3bc
   14000ced9:	mov    DWORD PTR [rip+0x286f9],eax        # 0x1400355d8
   14000cedf:	call   QWORD PTR [rip+0x1e583]        # 0x14002b468
   14000cee5:	mov    QWORD PTR [rip+0x286e4],rax        # 0x1400355d0
   14000ceec:	lea    rcx,[rsp+0x180]
   14000cef4:	mov    edx,esi
   14000cef6:	mov    DWORD PTR [rsp+0x148],esi
   14000cefd:	call   QWORD PTR [rip+0x1e58d]        # 0x14002b490
   14000cf03:	mov    rcx,QWORD PTR [rip+0x286c6]        # 0x1400355d0
   14000cf0a:	lea    r11,[rsp+0x180]
   14000cf12:	lea    rdx,[rsp+0x140]
   14000cf1a:	mov    r9d,edi
   14000cf1d:	mov    r8,rbx
   14000cf20:	mov    QWORD PTR [rsp+0x20],r11
   14000cf25:	call   QWORD PTR [rip+0x1e535]        # 0x14002b460
   14000cf2b:	lea    rcx,[rsp+0x68]
   14000cf30:	mov    rdx,rax
   14000cf33:	call   QWORD PTR [rip+0x1e977]        # 0x14002b8b0
   14000cf39:	lea    rcx,[rsp+0x140]
   14000cf41:	call   QWORD PTR [rip+0x1e951]        # 0x14002b898
   14000cf47:	cmp    DWORD PTR [rsp+0x188],0x0
   14000cf4f:	lea    rcx,[rsp+0x180]
   14000cf57:	setne  r12b
   14000cf5b:	call   QWORD PTR [rip+0x1e4f7]        # 0x14002b458
   14000cf61:	mov    edx,edi
   14000cf63:	add    rbx,rdx
   14000cf66:	jmp    0x14000cd40
   14000cf6b:	movzx  eax,BYTE PTR [rbx+0x1]
   14000cf6f:	movzx  edi,BYTE PTR [rbx]
   14000cf72:	add    rbx,0x4
   14000cf76:	shl    edi,0x8
   14000cf79:	or     edi,eax
   14000cf7b:	movzx  eax,BYTE PTR [rbx-0x2]
   14000cf7f:	shl    edi,0x8
   14000cf82:	or     edi,eax
   14000cf84:	movzx  eax,BYTE PTR [rbx-0x1]
   14000cf88:	shl    edi,0x8
   14000cf8b:	or     edi,eax
   14000cf8d:	mov    eax,DWORD PTR [rip+0x28645]        # 0x1400355d8
   14000cf93:	test   al,0x1
   14000cf95:	jne    0x14000cfb4
   14000cf97:	or     eax,0x1
   14000cf9a:	lea    rcx,[rip+0x2041b]        # 0x14002d3bc
   14000cfa1:	mov    DWORD PTR [rip+0x28631],eax        # 0x1400355d8
   14000cfa7:	call   QWORD PTR [rip+0x1e4bb]        # 0x14002b468
   14000cfad:	mov    QWORD PTR [rip+0x2861c],rax        # 0x1400355d0
   14000cfb4:	lea    rcx,[rsp+0x1a0]
   14000cfbc:	mov    edx,esi
   14000cfbe:	mov    DWORD PTR [rsp+0x108],esi
   14000cfc5:	call   QWORD PTR [rip+0x1e4c5]        # 0x14002b490
   14000cfcb:	mov    rcx,QWORD PTR [rip+0x285fe]        # 0x1400355d0
   14000cfd2:	lea    r11,[rsp+0x1a0]
   14000cfda:	lea    rdx,[rsp+0x128]
   14000cfe2:	mov    r9d,edi
   14000cfe5:	mov    r8,rbx
   14000cfe8:	mov    QWORD PTR [rsp+0x20],r11
   14000cfed:	call   QWORD PTR [rip+0x1e46d]        # 0x14002b460
   14000cff3:	lea    rcx,[rsp+0x80]
   14000cffb:	mov    rdx,rax
   14000cffe:	call   QWORD PTR [rip+0x1e8ac]        # 0x14002b8b0
   14000d004:	lea    rcx,[rsp+0x128]
   14000d00c:	call   QWORD PTR [rip+0x1e886]        # 0x14002b898
   14000d012:	cmp    DWORD PTR [rsp+0x1a8],0x0
   14000d01a:	lea    rcx,[rsp+0x1a0]
   14000d022:	setne  r12b
   14000d026:	call   QWORD PTR [rip+0x1e42c]        # 0x14002b458
   14000d02c:	mov    edx,edi
   14000d02e:	add    rbx,rdx
   14000d031:	jmp    0x14000cd40
   14000d036:	movzx  eax,BYTE PTR [rbx+0x1]
   14000d03a:	movzx  edi,BYTE PTR [rbx]
   14000d03d:	add    rbx,0x4
   14000d041:	shl    edi,0x8
   14000d044:	or     edi,eax
   14000d046:	movzx  eax,BYTE PTR [rbx-0x2]
   14000d04a:	shl    edi,0x8
   14000d04d:	or     edi,eax
   14000d04f:	movzx  eax,BYTE PTR [rbx-0x1]
   14000d053:	shl    edi,0x8
   14000d056:	or     edi,eax
   14000d058:	mov    eax,DWORD PTR [rip+0x2857a]        # 0x1400355d8
   14000d05e:	test   al,0x1
   14000d060:	jne    0x14000d07f
   14000d062:	or     eax,0x1
   14000d065:	lea    rcx,[rip+0x20350]        # 0x14002d3bc
   14000d06c:	mov    DWORD PTR [rip+0x28566],eax        # 0x1400355d8
   14000d072:	call   QWORD PTR [rip+0x1e3f0]        # 0x14002b468
   14000d078:	mov    QWORD PTR [rip+0x28551],rax        # 0x1400355d0
   14000d07f:	lea    rcx,[rsp+0x1d0]
   14000d087:	mov    edx,esi
   14000d089:	mov    DWORD PTR [rsp+0x118],esi
   14000d090:	call   QWORD PTR [rip+0x1e3fa]        # 0x14002b490
   14000d096:	mov    rcx,QWORD PTR [rip+0x28533]        # 0x1400355d0
   14000d09d:	lea    r11,[rsp+0x1d0]
   14000d0a5:	lea    rdx,[rsp+0x138]
   14000d0ad:	mov    r9d,edi
   14000d0b0:	mov    r8,rbx
   14000d0b3:	mov    QWORD PTR [rsp+0x20],r11
   14000d0b8:	call   QWORD PTR [rip+0x1e3a2]        # 0x14002b460
   14000d0be:	lea    rcx,[rsp+0x78]
   14000d0c3:	mov    rdx,rax
   14000d0c6:	call   QWORD PTR [rip+0x1e7e4]        # 0x14002b8b0
   14000d0cc:	lea    rcx,[rsp+0x138]
   14000d0d4:	call   QWORD PTR [rip+0x1e7be]        # 0x14002b898
   14000d0da:	cmp    DWORD PTR [rsp+0x1d8],0x0
   14000d0e2:	lea    rcx,[rsp+0x1d0]
   14000d0ea:	setne  r12b
   14000d0ee:	call   QWORD PTR [rip+0x1e364]        # 0x14002b458
   14000d0f4:	mov    edx,edi
   14000d0f6:	add    rbx,rdx
   14000d0f9:	jmp    0x14000cd40
   14000d0fe:	lea    rcx,[rsp+0x200]
   14000d106:	call   0x14000b4f0
   14000d10b:	mov    rax,QWORD PTR [rsp+0x38]
   14000d110:	mov    DWORD PTR [rsp+0x270],r14d
   14000d118:	mov    ecx,DWORD PTR [rax+0xc]
   14000d11b:	sub    ecx,DWORD PTR [rax+0x8]
   14000d11e:	cmp    ecx,0x1
   14000d121:	jle    0x14000d12d
   14000d123:	mov    BYTE PTR [rsp+0x274],0x1
   14000d12b:	jmp    0x14000d166
   14000d12d:	cmp    BYTE PTR [rsp+0x2d8],0x0
   14000d135:	je     0x14000d166
   14000d137:	lea    rdx,[rsp+0x90]
   14000d13f:	lea    rcx,[rsp+0x68]
   14000d144:	mov    r9d,r14d
   14000d147:	xor    r8d,r8d
   14000d14a:	call   QWORD PTR [rip+0x1e338]        # 0x14002b488
   14000d150:	movzx  ecx,BYTE PTR [rsp+0x274]
   14000d158:	cmp    eax,0xffffffff
   14000d15b:	cmovne ecx,r14d
   14000d15f:	mov    BYTE PTR [rsp+0x274],cl
   14000d166:	lea    rdx,[rsp+0x38]
   14000d16b:	lea    rcx,[rsp+0x250]
   14000d173:	call   0x140001830
   14000d178:	mov    rdi,QWORD PTR [rip+0x1e709]        # 0x14002b888
   14000d17f:	mov    r13,QWORD PTR [rsp+0xe0]
   14000d187:	cmp    QWORD PTR [rsp+0x38],rdi
   14000d18c:	je     0x14000d26b
   14000d192:	mov    rcx,rdi
   14000d195:	mov    QWORD PTR [rsp+0x50],rcx
   14000d19a:	mov    eax,DWORD PTR [rdi]
   14000d19c:	test   eax,eax
   14000d19e:	je     0x14000d1b0
   14000d1a0:	cmp    eax,0xffffffff
   14000d1a3:	je     0x14000d206
   14000d1a5:	lock add DWORD PTR [rdi],0x1
   14000d1a9:	mov    rcx,QWORD PTR [rsp+0x50]
   14000d1ae:	jmp    0x14000d206
   14000d1b0:	mov    edx,DWORD PTR [rdi+0x4]
   14000d1b3:	lea    rcx,[rsp+0x50]
   14000d1b8:	call   QWORD PTR [rip+0x1e69a]        # 0x14002b858
   14000d1be:	mov    rcx,QWORD PTR [rsp+0x50]
   14000d1c3:	movsxd rax,DWORD PTR [rcx+0xc]
   14000d1c7:	lea    rbp,[rcx+rax*8+0x10]
   14000d1cc:	movsxd rax,DWORD PTR [rdi+0x8]
   14000d1d0:	lea    rsi,[rdi+rax*8+0x10]
   14000d1d5:	movsxd rax,DWORD PTR [rcx+0x8]
   14000d1d9:	lea    rbx,[rcx+rax*8+0x10]
   14000d1de:	cmp    rbx,rbp
   14000d1e1:	je     0x14000d206
   14000d1e3:	test   rbx,rbx
   14000d1e6:	je     0x14000d1f4
   14000d1e8:	mov    rdx,rsi
   14000d1eb:	mov    rcx,rbx
   14000d1ee:	call   QWORD PTR [rip+0x1e6ac]        # 0x14002b8a0
   14000d1f4:	add    rbx,0x8
   14000d1f8:	add    rsi,0x8
   14000d1fc:	cmp    rbx,rbp
   14000d1ff:	jne    0x14000d1e3
   14000d201:	mov    rcx,QWORD PTR [rsp+0x50]
   14000d206:	mov    rbp,QWORD PTR [rsp+0x38]
   14000d20b:	mov    QWORD PTR [rsp+0x38],rcx
   14000d210:	mov    QWORD PTR [rsp+0x50],rbp
   14000d215:	mov    eax,DWORD PTR [rbp+0x0]
   14000d218:	test   eax,eax
   14000d21a:	je     0x14000d238
   14000d21c:	cmp    eax,0xffffffff
   14000d21f:	je     0x14000d26b
   14000d221:	mov    eax,r15d
   14000d224:	lock xadd DWORD PTR [rbp+0x0],eax
   14000d229:	add    eax,0xffffffff
   14000d22c:	setne  al
   14000d22f:	test   al,al
   14000d231:	jne    0x14000d26b
   14000d233:	mov    rbp,QWORD PTR [rsp+0x50]
   14000d238:	movsxd rax,DWORD PTR [rbp+0xc]
   14000d23c:	lea    rbx,[rbp+rax*8+0x10]
   14000d241:	movsxd rax,DWORD PTR [rbp+0x8]
   14000d245:	lea    rsi,[rbp+rax*8+0x10]
   14000d24a:	cmp    rsi,rbx
   14000d24d:	je     0x14000d262
   14000d24f:	nop
   14000d250:	sub    rbx,0x8
   14000d254:	mov    rcx,rbx
   14000d257:	call   QWORD PTR [rip+0x1e63b]        # 0x14002b898
   14000d25d:	cmp    rbx,rsi
   14000d260:	jne    0x14000d250
   14000d262:	mov    rcx,rbp
   14000d265:	call   QWORD PTR [rip+0x1e605]        # 0x14002b870
   14000d26b:	mov    eax,DWORD PTR [rdi]
   14000d26d:	test   eax,eax
   14000d26f:	je     0x14000d287
   14000d271:	cmp    eax,0xffffffff
   14000d274:	je     0x14000d2bb
   14000d276:	mov    eax,r15d
   14000d279:	lock xadd DWORD PTR [rdi],eax
   14000d27d:	add    eax,0xffffffff
   14000d280:	setne  al
   14000d283:	test   al,al
   14000d285:	jne    0x14000d2bb
   14000d287:	movsxd rax,DWORD PTR [rdi+0xc]
   14000d28b:	lea    rbx,[rdi+rax*8+0x10]
   14000d290:	movsxd rax,DWORD PTR [rdi+0x8]
   14000d294:	lea    rsi,[rdi+rax*8+0x10]
   14000d299:	cmp    rsi,rbx
   14000d29c:	je     0x14000d2b2
   14000d29e:	xchg   ax,ax
   14000d2a0:	sub    rbx,0x8
   14000d2a4:	mov    rcx,rbx
   14000d2a7:	call   QWORD PTR [rip+0x1e5eb]        # 0x14002b898
   14000d2ad:	cmp    rbx,rsi
   14000d2b0:	jne    0x14000d2a0
   14000d2b2:	mov    rcx,rdi
   14000d2b5:	call   QWORD PTR [rip+0x1e5b5]        # 0x14002b870
   14000d2bb:	lea    rdx,[rsp+0x80]
   14000d2c3:	lea    rcx,[rsp+0x208]
   14000d2cb:	call   QWORD PTR [rip+0x1e5df]        # 0x14002b8b0
   14000d2d1:	lea    rdx,[rsp+0x68]
   14000d2d6:	lea    rcx,[rsp+0x210]
   14000d2de:	call   QWORD PTR [rip+0x1e5cc]        # 0x14002b8b0
   14000d2e4:	lea    rdx,[rsp+0x78]
   14000d2e9:	lea    rcx,[rsp+0x220]
   14000d2f1:	call   QWORD PTR [rip+0x1e5b9]        # 0x14002b8b0
   14000d2f7:	mov    rcx,QWORD PTR [rsp+0x2c0]
   14000d2ff:	lea    rdx,[rsp+0x200]
   14000d307:	call   0x1400089f0
   14000d30c:	lea    rcx,[rsp+0x200]
   14000d314:	call   0x140001ea0
   14000d319:	add    r13,0x8
   14000d31d:	lea    rax,[r13-0x6]
   14000d321:	mov    QWORD PTR [rsp+0xe0],r13
   14000d329:	cmp    rax,QWORD PTR [rsp+0xb0]
   14000d331:	jne    0x14000cd00
   14000d337:	test   r12b,r12b
   14000d33a:	je     0x14000d523
   14000d340:	lea    rdx,[rip+0x200a9]        # 0x14002d3f0
   14000d347:	xor    eax,eax
   14000d349:	mov    rcx,r15
   14000d34c:	mov    rdi,rdx
   14000d34f:	mov    QWORD PTR [rsp+0xb8],rdx
   14000d357:	lea    rdx,[rsp+0x1c0]
   14000d35f:	repnz scas al,BYTE PTR es:[rdi]
   14000d361:	not    rcx
   14000d364:	dec    rcx
   14000d367:	mov    DWORD PTR [rsp+0xb0],ecx
   14000d36e:	lea    rcx,[rsp+0xa0]
   14000d376:	movaps xmm0,XMMWORD PTR [rsp+0xb0]
   14000d37e:	movdqa XMMWORD PTR [rsp+0x1c0],xmm0
   14000d387:	call   QWORD PTR [rip+0x1e4d3]        # 0x14002b860
   14000d38d:	mov    rdi,QWORD PTR [rsp+0x2d0]
   14000d395:	mov    rax,QWORD PTR [rdi+0x60]
   14000d399:	mov    ecx,DWORD PTR [rax]
   14000d39b:	cmp    ecx,0x1
   14000d39e:	je     0x14000d3cd
   14000d3a0:	test   ecx,ecx
   14000d3a2:	je     0x14000d3cd
   14000d3a4:	lea    rcx,[rdi+0x60]
   14000d3a8:	mov    r8d,r14d
   14000d3ab:	mov    edx,0x7fffffff
   14000d3b0:	call   0x140001a10
   14000d3b5:	test   rax,rax
   14000d3b8:	je     0x14000d3f8
   14000d3ba:	lea    rdx,[rsp+0xa0]
   14000d3c2:	mov    rcx,rax
   14000d3c5:	call   QWORD PTR [rip+0x1e4d5]        # 0x14002b8a0
   14000d3cb:	jmp    0x14000d3f8
   14000d3cd:	lea    rdx,[rsp+0xa0]
   14000d3d5:	lea    rcx,[rsp+0x120]
   14000d3dd:	call   QWORD PTR [rip+0x1e4bd]        # 0x14002b8a0
   14000d3e3:	lea    rcx,[rdi+0x60]
   14000d3e7:	call   QWORD PTR [rip+0x1e453]        # 0x14002b840
   14000d3ed:	mov    rcx,QWORD PTR [rsp+0x120]
   14000d3f5:	mov    QWORD PTR [rax],rcx
   14000d3f8:	lea    rcx,[rsp+0xa0]
   14000d400:	call   QWORD PTR [rip+0x1e492]        # 0x14002b898
   14000d406:	mov    rbx,QWORD PTR [rsp+0x38]
   14000d40b:	mov    eax,DWORD PTR [rbx]
   14000d40d:	test   eax,eax
   14000d40f:	je     0x14000d42c
   14000d411:	cmp    eax,0xffffffff
   14000d414:	je     0x14000d45e
   14000d416:	mov    eax,r15d
   14000d419:	lock xadd DWORD PTR [rbx],eax
   14000d41d:	add    eax,0xffffffff
   14000d420:	setne  al
   14000d423:	test   al,al
   14000d425:	jne    0x14000d45e
   14000d427:	mov    rbx,QWORD PTR [rsp+0x38]
   14000d42c:	movsxd rax,DWORD PTR [rbx+0xc]
   14000d430:	lea    rdi,[rbx+rax*8+0x10]
   14000d435:	movsxd rax,DWORD PTR [rbx+0x8]
   14000d439:	lea    rsi,[rbx+rax*8+0x10]
   14000d43e:	cmp    rsi,rdi
   14000d441:	je     0x14000d455
   14000d443:	sub    rdi,0x8
   14000d447:	mov    rcx,rdi
   14000d44a:	call   QWORD PTR [rip+0x1e448]        # 0x14002b898
   14000d450:	cmp    rdi,rsi
   14000d453:	jne    0x14000d443
   14000d455:	mov    rcx,rbx
   14000d458:	call   QWORD PTR [rip+0x1e412]        # 0x14002b870
   14000d45e:	lea    rcx,[rsp+0x78]
   14000d463:	call   QWORD PTR [rip+0x1e42f]        # 0x14002b898
   14000d469:	lea    rcx,[rsp+0x68]
   14000d46e:	call   QWORD PTR [rip+0x1e424]        # 0x14002b898
   14000d474:	lea    rcx,[rsp+0x80]
   14000d47c:	call   QWORD PTR [rip+0x1e416]        # 0x14002b898
   14000d482:	mov    rbx,QWORD PTR [rsp+0x48]
   14000d487:	mov    eax,DWORD PTR [rbx]
   14000d489:	test   eax,eax
   14000d48b:	je     0x14000d4a7
   14000d48d:	cmp    eax,0xffffffff
   14000d490:	je     0x14000d4db
   14000d492:	lock xadd DWORD PTR [rbx],r15d
   14000d497:	add    r15d,0xffffffff
   14000d49b:	setne  al
   14000d49e:	test   al,al
   14000d4a0:	jne    0x14000d4db
   14000d4a2:	mov    rbx,QWORD PTR [rsp+0x48]
   14000d4a7:	movsxd rax,DWORD PTR [rbx+0xc]
   14000d4ab:	lea    rdi,[rbx+rax*8+0x10]
   14000d4b0:	movsxd rax,DWORD PTR [rbx+0x8]
   14000d4b4:	lea    rsi,[rbx+rax*8+0x10]
   14000d4b9:	cmp    rsi,rdi
   14000d4bc:	je     0x14000d4d2
   14000d4be:	xchg   ax,ax
   14000d4c0:	sub    rdi,0x8
   14000d4c4:	mov    rcx,rdi
   14000d4c7:	call   QWORD PTR [rip+0x1e3cb]        # 0x14002b898
   14000d4cd:	cmp    rdi,rsi
   14000d4d0:	jne    0x14000d4c0
   14000d4d2:	mov    rcx,rbx
   14000d4d5:	call   QWORD PTR [rip+0x1e395]        # 0x14002b870
   14000d4db:	lea    rcx,[rsp+0x90]
   14000d4e3:	call   QWORD PTR [rip+0x1e3af]        # 0x14002b898
   14000d4e9:	lea    rcx,[rsp+0x60]
   14000d4ee:	call   QWORD PTR [rip+0x1dcd4]        # 0x14002b1c8
   14000d4f4:	xor    al,al
   14000d4f6:	mov    r13,QWORD PTR [rsp+0x288]
   14000d4fe:	mov    r12,QWORD PTR [rsp+0x290]
   14000d506:	mov    rbp,QWORD PTR [rsp+0x2c8]
   14000d50e:	mov    r15,QWORD PTR [rsp+0x280]
   14000d516:	add    rsp,0x298
   14000d51d:	pop    r14
   14000d51f:	pop    rdi
   14000d520:	pop    rsi
   14000d521:	pop    rbx
   14000d522:	ret    
   14000d523:	mov    rbx,QWORD PTR [rsp+0x38]
   14000d528:	mov    eax,DWORD PTR [rbx]
   14000d52a:	test   eax,eax
   14000d52c:	je     0x14000d549
   14000d52e:	cmp    eax,0xffffffff
   14000d531:	je     0x14000d57b
   14000d533:	mov    eax,r15d
   14000d536:	lock xadd DWORD PTR [rbx],eax
   14000d53a:	add    eax,0xffffffff
   14000d53d:	setne  al
   14000d540:	test   al,al
   14000d542:	jne    0x14000d57b
   14000d544:	mov    rbx,QWORD PTR [rsp+0x38]
   14000d549:	movsxd rax,DWORD PTR [rbx+0xc]
   14000d54d:	lea    rdi,[rbx+rax*8+0x10]
   14000d552:	movsxd rax,DWORD PTR [rbx+0x8]
   14000d556:	lea    rsi,[rbx+rax*8+0x10]
   14000d55b:	cmp    rsi,rdi
   14000d55e:	je     0x14000d572
   14000d560:	sub    rdi,0x8
   14000d564:	mov    rcx,rdi
   14000d567:	call   QWORD PTR [rip+0x1e32b]        # 0x14002b898
   14000d56d:	cmp    rdi,rsi
   14000d570:	jne    0x14000d560
   14000d572:	mov    rcx,rbx
   14000d575:	call   QWORD PTR [rip+0x1e2f5]        # 0x14002b870
   14000d57b:	lea    rcx,[rsp+0x78]
   14000d580:	call   QWORD PTR [rip+0x1e312]        # 0x14002b898
   14000d586:	lea    rcx,[rsp+0x68]
   14000d58b:	call   QWORD PTR [rip+0x1e307]        # 0x14002b898
   14000d591:	lea    rcx,[rsp+0x80]
   14000d599:	call   QWORD PTR [rip+0x1e2f9]        # 0x14002b898
   14000d59f:	mov    rbx,QWORD PTR [rsp+0x48]
   14000d5a4:	mov    eax,DWORD PTR [rbx]
   14000d5a6:	test   eax,eax
   14000d5a8:	je     0x14000d5c4
   14000d5aa:	cmp    eax,0xffffffff
   14000d5ad:	je     0x14000d5fb
   14000d5af:	lock xadd DWORD PTR [rbx],r15d
   14000d5b4:	add    r15d,0xffffffff
   14000d5b8:	setne  al
   14000d5bb:	test   al,al
   14000d5bd:	jne    0x14000d5fb
   14000d5bf:	mov    rbx,QWORD PTR [rsp+0x48]
   14000d5c4:	movsxd rax,DWORD PTR [rbx+0xc]
   14000d5c8:	lea    rdi,[rbx+rax*8+0x10]
   14000d5cd:	movsxd rax,DWORD PTR [rbx+0x8]
   14000d5d1:	lea    rsi,[rbx+rax*8+0x10]
   14000d5d6:	cmp    rsi,rdi
   14000d5d9:	je     0x14000d5f2
   14000d5db:	nop    DWORD PTR [rax+rax*1+0x0]
   14000d5e0:	sub    rdi,0x8
   14000d5e4:	mov    rcx,rdi
   14000d5e7:	call   QWORD PTR [rip+0x1e2ab]        # 0x14002b898
   14000d5ed:	cmp    rdi,rsi
   14000d5f0:	jne    0x14000d5e0
   14000d5f2:	mov    rcx,rbx
   14000d5f5:	call   QWORD PTR [rip+0x1e275]        # 0x14002b870
   14000d5fb:	lea    rcx,[rsp+0x90]
   14000d603:	call   QWORD PTR [rip+0x1e28f]        # 0x14002b898
   14000d609:	lea    rcx,[rsp+0x60]
   14000d60e:	call   QWORD PTR [rip+0x1dbb4]        # 0x14002b1c8
   14000d614:	mov    al,BYTE PTR [rsp+0x30]
   14000d618:	jmp    0x14000d4f6
   14000d61d:	or     rcx,0xffffffffffffffff
   14000d621:	lea    rdx,[rip+0x1fda0]        # 0x14002d3c8
   14000d628:	xor    eax,eax
   14000d62a:	mov    rdi,rdx
   14000d62d:	mov    QWORD PTR [rsp+0xd8],rdx
   14000d635:	lea    rdx,[rsp+0x1f0]
   14000d63d:	repnz scas al,BYTE PTR es:[rdi]
   14000d63f:	not    rcx
   14000d642:	dec    rcx
   14000d645:	mov    DWORD PTR [rsp+0xd0],ecx
   14000d64c:	lea    rcx,[rsp+0x88]
   14000d654:	movaps xmm0,XMMWORD PTR [rsp+0xd0]
   14000d65c:	movdqa XMMWORD PTR [rsp+0x1f0],xmm0
   14000d665:	call   QWORD PTR [rip+0x1e1f5]        # 0x14002b860
   14000d66b:	mov    rax,QWORD PTR [rsi+0x60]
   14000d66f:	mov    ecx,DWORD PTR [rax]
   14000d671:	cmp    ecx,0x1
   14000d674:	je     0x14000d6a6
   14000d676:	test   ecx,ecx
   14000d678:	je     0x14000d6a6
   14000d67a:	lea    rcx,[rsi+0x60]
   14000d67e:	mov    edx,0x7fffffff
   14000d683:	mov    r8d,0x1
   14000d689:	call   0x140001a10
   14000d68e:	test   rax,rax
   14000d691:	je     0x14000d6d1
   14000d693:	lea    rdx,[rsp+0x88]
   14000d69b:	mov    rcx,rax
   14000d69e:	call   QWORD PTR [rip+0x1e1fc]        # 0x14002b8a0
   14000d6a4:	jmp    0x14000d6d1
   14000d6a6:	lea    rdx,[rsp+0x88]
   14000d6ae:	lea    rcx,[rsp+0x100]
   14000d6b6:	call   QWORD PTR [rip+0x1e1e4]        # 0x14002b8a0
   14000d6bc:	lea    rcx,[rsi+0x60]
   14000d6c0:	call   QWORD PTR [rip+0x1e17a]        # 0x14002b840
   14000d6c6:	mov    rcx,QWORD PTR [rsp+0x100]
   14000d6ce:	mov    QWORD PTR [rax],rcx
   14000d6d1:	lea    rcx,[rsp+0x88]
   14000d6d9:	call   QWORD PTR [rip+0x1e1b9]        # 0x14002b898
   14000d6df:	lea    rcx,[rsp+0x60]
   14000d6e4:	call   QWORD PTR [rip+0x1dade]        # 0x14002b1c8
   14000d6ea:	xor    al,al
   14000d6ec:	add    rsp,0x298
   14000d6f3:	pop    r14
   14000d6f5:	pop    rdi
   14000d6f6:	pop    rsi
   14000d6f7:	pop    rbx
   14000d6f8:	ret    
   14000d6f9:	nop    DWORD PTR [rax]
   14000d6fc:	(bad)  
   14000d6fd:	rol    BYTE PTR [rax],1
   14000d6ff:	add    BYTE PTR [rax-0x33],al
   14000d702:	add    BYTE PTR [rax],al
   14000d704:	pop    rsp
   14000d705:	int    0x0
   14000d707:	add    BYTE PTR [rax-0x33],al
   14000d70a:	add    BYTE PTR [rax],al
   14000d70c:	(bad)  
   14000d70d:	(bad)  
   14000d70e:	add    BYTE PTR [rax],al
   14000d710:	movabs ds:0x360000cf6b0000ce,eax
   14000d719:	rol    BYTE PTR [rax],1
   14000d71b:	add    ah,cl
   14000d71d:	int3   
   14000d71e:	int3   
   14000d71f:	int3   
   14000d720:	mov    QWORD PTR [rsp+0x8],rbx
   14000d725:	push   rdi
   14000d726:	sub    rsp,0x20
   14000d72a:	mov    rdi,rcx
   14000d72d:	nop    DWORD PTR [rax]
   14000d730:	lea    rcx,[rdi+0x30]
   14000d734:	call   0x1400017b0
   14000d739:	lea    rcx,[rdi+0x28]
   14000d73d:	call   QWORD PTR [rip+0x1da85]        # 0x14002b1c8
   14000d743:	lea    rcx,[rdi+0x20]
   14000d747:	call   QWORD PTR [rip+0x1da7b]        # 0x14002b1c8
   14000d74d:	lea    rcx,[rdi+0x18]
   14000d751:	call   QWORD PTR [rip+0x1da71]        # 0x14002b1c8
   14000d757:	mov    rcx,QWORD PTR [rdi+0x8]
   14000d75b:	test   rcx,rcx
   14000d75e:	je     0x14000d765
   14000d760:	call   0x14000d720
   14000d765:	mov    rdi,QWORD PTR [rdi+0x10]
   14000d769:	test   rdi,rdi
   14000d76c:	jne    0x14000d730
   14000d76e:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d773:	add    rsp,0x20
   14000d777:	pop    rdi
   14000d778:	ret    
   14000d779:	int3   
   14000d77a:	int3   
   14000d77b:	int3   
   14000d77c:	int3   
   14000d77d:	int3   
   14000d77e:	int3   
   14000d77f:	int3   
   14000d780:	mov    QWORD PTR [rsp+0x10],rbx
   14000d785:	push   rsi
   14000d786:	sub    rsp,0x20
   14000d78a:	mov    rbx,rcx
   14000d78d:	call   QWORD PTR [rip+0x1e13d]        # 0x14002b8d0
   14000d793:	mov    rdx,QWORD PTR [rbx]
   14000d796:	mov    rcx,QWORD PTR [rdx+0x10]
   14000d79a:	mov    rsi,rax
   14000d79d:	test   rcx,rcx
   14000d7a0:	je     0x14000d7b9
   14000d7a2:	mov    rdx,rax
   14000d7a5:	call   0x14000c800
   14000d7aa:	lea    rcx,[rsi+0x8]
   14000d7ae:	mov    QWORD PTR [rsi+0x10],rax
   14000d7b2:	and    QWORD PTR [rax],0x3
   14000d7b6:	or     QWORD PTR [rax],rcx
   14000d7b9:	mov    rcx,QWORD PTR [rbx]
   14000d7bc:	mov    eax,DWORD PTR [rcx]
   14000d7be:	test   eax,eax
   14000d7c0:	je     0x14000d7d2
   14000d7c2:	cmp    eax,0xffffffff
   14000d7c5:	je     0x14000d809
   14000d7c7:	lock add DWORD PTR [rcx],0xffffffff
   14000d7cb:	setne  al
   14000d7ce:	test   al,al
   14000d7d0:	jne    0x14000d809
   14000d7d2:	mov    QWORD PTR [rsp+0x30],rdi
   14000d7d7:	mov    rdi,QWORD PTR [rbx]
   14000d7da:	mov    rcx,QWORD PTR [rdi+0x10]
   14000d7de:	test   rcx,rcx
   14000d7e1:	je     0x14000d7fb
   14000d7e3:	call   0x14000d720
   14000d7e8:	mov    rdx,QWORD PTR [rdi+0x10]
   14000d7ec:	mov    r8d,0x8
   14000d7f2:	mov    rcx,rdi
   14000d7f5:	call   QWORD PTR [rip+0x1dc7d]        # 0x14002b478
   14000d7fb:	mov    rcx,rdi
   14000d7fe:	call   QWORD PTR [rip+0x1dc6c]        # 0x14002b470
   14000d804:	mov    rdi,QWORD PTR [rsp+0x30]
   14000d809:	mov    rcx,rsi
   14000d80c:	mov    QWORD PTR [rbx],rsi
   14000d80f:	mov    rbx,QWORD PTR [rsp+0x38]
   14000d814:	add    rsp,0x20
   14000d818:	pop    rsi
   14000d819:	rex.W jmp QWORD PTR [rip+0x1dc60]        # 0x14002b480
   14000d820:	mov    QWORD PTR [rsp+0x18],rsi
   14000d825:	push   rdi
   14000d826:	sub    rsp,0x20
   14000d82a:	mov    rax,QWORD PTR [rdx]
   14000d82d:	mov    rsi,rdx
   14000d830:	mov    rdi,rcx
   14000d833:	cmp    QWORD PTR [rcx],rax
   14000d836:	je     0x14000d904
   14000d83c:	mov    ecx,DWORD PTR [rax]
   14000d83e:	mov    QWORD PTR [rsp+0x38],rbx
   14000d843:	test   ecx,ecx
   14000d845:	je     0x14000d85a
   14000d847:	cmp    ecx,0xffffffff
   14000d84a:	je     0x14000d850
   14000d84c:	lock add DWORD PTR [rax],0x1
   14000d850:	mov    rbx,QWORD PTR [rdx]
   14000d853:	mov    QWORD PTR [rsp+0x30],rbx
   14000d858:	jmp    0x14000d894
   14000d85a:	call   QWORD PTR [rip+0x1e070]        # 0x14002b8d0
   14000d860:	mov    rbx,rax
   14000d863:	mov    QWORD PTR [rsp+0x30],rax
   14000d868:	mov    rax,QWORD PTR [rsi]
   14000d86b:	mov    rcx,QWORD PTR [rax+0x10]
   14000d86f:	test   rcx,rcx
   14000d872:	je     0x14000d894
   14000d874:	mov    rdx,rbx
   14000d877:	call   0x14000c800
   14000d87c:	lea    rcx,[rbx+0x8]
   14000d880:	mov    QWORD PTR [rbx+0x10],rax
   14000d884:	and    QWORD PTR [rax],0x3
   14000d888:	or     QWORD PTR [rax],rcx
   14000d88b:	mov    rcx,rbx
   14000d88e:	call   QWORD PTR [rip+0x1dbec]        # 0x14002b480
   14000d894:	lea    rax,[rsp+0x30]
   14000d899:	cmp    rax,rdi
   14000d89c:	je     0x14000d8ac
   14000d89e:	mov    rax,rbx
   14000d8a1:	mov    rbx,QWORD PTR [rdi]
   14000d8a4:	mov    QWORD PTR [rsp+0x30],rbx
   14000d8a9:	mov    QWORD PTR [rdi],rax
   14000d8ac:	mov    eax,DWORD PTR [rbx]
   14000d8ae:	test   eax,eax
   14000d8b0:	je     0x14000d8c7
   14000d8b2:	cmp    eax,0xffffffff
   14000d8b5:	je     0x14000d8f1
   14000d8b7:	lock add DWORD PTR [rbx],0xffffffff
   14000d8bb:	setne  al
   14000d8be:	test   al,al
   14000d8c0:	jne    0x14000d8f1
   14000d8c2:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d8c7:	mov    rcx,QWORD PTR [rbx+0x10]
   14000d8cb:	test   rcx,rcx
   14000d8ce:	je     0x14000d8e8
   14000d8d0:	call   0x14000d720
   14000d8d5:	mov    rdx,QWORD PTR [rbx+0x10]
   14000d8d9:	mov    r8d,0x8
   14000d8df:	mov    rcx,rbx
   14000d8e2:	call   QWORD PTR [rip+0x1db90]        # 0x14002b478
   14000d8e8:	mov    rcx,rbx
   14000d8eb:	call   QWORD PTR [rip+0x1db7f]        # 0x14002b470
   14000d8f1:	mov    rax,rdi
   14000d8f4:	mov    rbx,QWORD PTR [rsp+0x38]
   14000d8f9:	mov    rsi,QWORD PTR [rsp+0x40]
   14000d8fe:	add    rsp,0x20
   14000d902:	pop    rdi
   14000d903:	ret    
   14000d904:	mov    rax,rcx
   14000d907:	mov    rsi,QWORD PTR [rsp+0x40]
   14000d90c:	add    rsp,0x20
   14000d910:	pop    rdi
   14000d911:	ret    
   14000d912:	int3   
   14000d913:	int3   
   14000d914:	int3   
   14000d915:	int3   
   14000d916:	int3   
   14000d917:	int3   
   14000d918:	int3   
   14000d919:	int3   
   14000d91a:	int3   
   14000d91b:	int3   
   14000d91c:	int3   
   14000d91d:	int3   
   14000d91e:	int3   
   14000d91f:	int3   
   14000d920:	mov    QWORD PTR [rsp+0x20],r9
   14000d925:	mov    QWORD PTR [rsp+0x10],rdx
   14000d92a:	mov    QWORD PTR [rsp+0x8],rcx
   14000d92f:	push   rbx
   14000d930:	push   rsi
   14000d931:	push   r12
   14000d933:	push   r15
   14000d935:	sub    rsp,0x58
   14000d939:	mov    rax,QWORD PTR [rcx]
   14000d93c:	mov    r12,r8
   14000d93f:	mov    rbx,rcx
   14000d942:	mov    r8d,DWORD PTR [rax]
   14000d945:	cmp    r8d,0x1
   14000d949:	je     0x14000d955
   14000d94b:	test   r8d,r8d
   14000d94e:	je     0x14000d955
   14000d950:	call   0x14000d780
   14000d955:	mov    rax,QWORD PTR [rbx]
   14000d958:	xor    r15d,r15d
   14000d95b:	mov    bl,0x1
   14000d95d:	mov    rsi,QWORD PTR [rax+0x10]
   14000d961:	lea    r9,[rax+0x8]
   14000d965:	test   rsi,rsi
   14000d968:	je     0x14000dac6
   14000d96e:	mov    QWORD PTR [rsp+0x90],rbp
   14000d976:	mov    QWORD PTR [rsp+0x50],rdi
   14000d97b:	mov    QWORD PTR [rsp+0x48],r13
   14000d980:	mov    QWORD PTR [rsp+0x40],r14
   14000d985:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000d990:	mov    rax,QWORD PTR [rsi+0x18]
   14000d994:	mov    QWORD PTR [rsp+0x30],rsi
   14000d999:	movsxd rcx,DWORD PTR [rax+0x4]
   14000d99d:	mov    rax,QWORD PTR [r12]
   14000d9a1:	cmp    ecx,DWORD PTR [rax+0x4]
   14000d9a4:	jne    0x14000da40
   14000d9aa:	mov    rdi,rcx
   14000d9ad:	mov    rcx,r12
   14000d9b0:	call   QWORD PTR [rip+0x1d81a]        # 0x14002b1d0
   14000d9b6:	lea    rcx,[rsi+0x18]
   14000d9ba:	mov    rbx,rax
   14000d9bd:	call   QWORD PTR [rip+0x1d80d]        # 0x14002b1d0
   14000d9c3:	mov    r8,rdi
   14000d9c6:	mov    rcx,rax
   14000d9c9:	mov    rdx,rbx
   14000d9cc:	call   0x140029600
   14000d9d1:	test   eax,eax
   14000d9d3:	jne    0x14000da40
   14000d9d5:	mov    rax,QWORD PTR [rsi+0x20]
   14000d9d9:	movsxd rcx,DWORD PTR [rax+0x4]
   14000d9dd:	mov    rax,QWORD PTR [r12+0x8]
   14000d9e2:	cmp    ecx,DWORD PTR [rax+0x4]
   14000d9e5:	jne    0x14000da2a
   14000d9e7:	mov    rdi,rcx
   14000d9ea:	lea    rcx,[r12+0x8]
   14000d9ef:	call   QWORD PTR [rip+0x1d7db]        # 0x14002b1d0
   14000d9f5:	lea    rcx,[rsi+0x20]
   14000d9f9:	mov    rbx,rax
   14000d9fc:	call   QWORD PTR [rip+0x1d7ce]        # 0x14002b1d0
   14000da02:	mov    r8,rdi
   14000da05:	mov    rcx,rax
   14000da08:	mov    rdx,rbx
   14000da0b:	call   0x140029600
   14000da10:	test   eax,eax
   14000da12:	jne    0x14000da2a
   14000da14:	lea    rdx,[r12+0x10]
   14000da19:	lea    rcx,[rsi+0x28]
   14000da1d:	call   QWORD PTR [rip+0x1d9ad]        # 0x14002b3d0
   14000da23:	test   eax,eax
   14000da25:	sets   al
   14000da28:	jmp    0x14000da52
   14000da2a:	lea    rdx,[r12+0x8]
   14000da2f:	lea    rcx,[rsi+0x20]
   14000da33:	call   QWORD PTR [rip+0x1d997]        # 0x14002b3d0
   14000da39:	test   eax,eax
   14000da3b:	sets   al
   14000da3e:	jmp    0x14000da52
   14000da40:	lea    rcx,[rsi+0x18]
   14000da44:	mov    rdx,r12
   14000da47:	call   QWORD PTR [rip+0x1d983]        # 0x14002b3d0
   14000da4d:	test   eax,eax
   14000da4f:	sets   al
   14000da52:	test   al,al
   14000da54:	jne    0x14000da61
   14000da56:	mov    r15,rsi
   14000da59:	mov    rsi,QWORD PTR [rsi+0x8]
   14000da5d:	mov    bl,0x1
   14000da5f:	jmp    0x14000da67
   14000da61:	mov    rsi,QWORD PTR [rsi+0x10]
   14000da65:	xor    bl,bl
   14000da67:	test   rsi,rsi
   14000da6a:	jne    0x14000d990
   14000da70:	mov    r14,QWORD PTR [rsp+0x40]
   14000da75:	mov    r13,QWORD PTR [rsp+0x48]
   14000da7a:	mov    rdi,QWORD PTR [rsp+0x50]
   14000da7f:	mov    rbp,QWORD PTR [rsp+0x90]
   14000da87:	test   r15,r15
   14000da8a:	je     0x14000dac1
   14000da8c:	lea    rdx,[r15+0x18]
   14000da90:	mov    rcx,r12
   14000da93:	call   0x14000bec0
   14000da98:	test   al,al
   14000da9a:	jne    0x14000dac1
   14000da9c:	mov    r8,QWORD PTR [rsp+0x98]
   14000daa4:	mov    rax,QWORD PTR [r8]
   14000daa7:	mov    QWORD PTR [r15+0x38],rax
   14000daab:	mov    rax,QWORD PTR [rsp+0x88]
   14000dab3:	mov    QWORD PTR [rax],r15
   14000dab6:	add    rsp,0x58
   14000daba:	pop    r15
   14000dabc:	pop    r12
   14000dabe:	pop    rsi
   14000dabf:	pop    rbx
   14000dac0:	ret    
   14000dac1:	mov    r9,QWORD PTR [rsp+0x30]
   14000dac6:	mov    rcx,QWORD PTR [rsp+0x80]
   14000dace:	mov    r8,QWORD PTR [rsp+0x98]
   14000dad6:	mov    rdx,r12
   14000dad9:	mov    rcx,QWORD PTR [rcx]
   14000dadc:	mov    BYTE PTR [rsp+0x20],bl
   14000dae0:	call   0x14000c760
   14000dae5:	mov    rcx,QWORD PTR [rsp+0x88]
   14000daed:	mov    QWORD PTR [rcx],rax
   14000daf0:	mov    rax,rcx
   14000daf3:	add    rsp,0x58
   14000daf7:	pop    r15
   14000daf9:	pop    r12
   14000dafb:	pop    rsi
   14000dafc:	pop    rbx
   14000dafd:	ret    
   14000dafe:	int3   
   14000daff:	int3   
   14000db00:	mov    DWORD PTR [rsp+0x10],edx
   14000db04:	mov    QWORD PTR [rsp+0x8],rcx
   14000db09:	push   rbx
   14000db0a:	push   rbp
   14000db0b:	push   rsi
   14000db0c:	push   rdi
   14000db0d:	push   r12
   14000db0f:	sub    rsp,0x180
   14000db16:	mov    r12,rcx
   14000db19:	add    rcx,0x30
   14000db1d:	mov    ebp,edx
   14000db1f:	call   QWORD PTR [rip+0x1d9db]        # 0x14002b500
   14000db25:	lea    rdx,[r12+0x30]
   14000db2a:	lea    rcx,[rsp+0xf8]
   14000db32:	mov    r8d,0x2
   14000db38:	mov    DWORD PTR [rsp+0xc0],0x2
   14000db43:	call   QWORD PTR [rip+0x1d9af]        # 0x14002b4f8
   14000db49:	mov    rdx,QWORD PTR [r12+0x28]
   14000db4e:	mov    QWORD PTR [rsp+0x60],rdx
   14000db53:	mov    eax,DWORD PTR [rdx]
   14000db55:	test   eax,eax
   14000db57:	je     0x14000db69
   14000db59:	cmp    eax,0xffffffff
   14000db5c:	je     0x14000dbc4
   14000db5e:	lock add DWORD PTR [rdx],0x1
   14000db62:	mov    rdx,QWORD PTR [rsp+0x60]
   14000db67:	jmp    0x14000dbc4
   14000db69:	mov    edx,DWORD PTR [rdx+0x4]
   14000db6c:	lea    rcx,[rsp+0x60]
   14000db71:	call   QWORD PTR [rip+0x1dce1]        # 0x14002b858
   14000db77:	mov    rdx,QWORD PTR [rsp+0x60]
   14000db7c:	mov    r11,QWORD PTR [r12+0x28]
   14000db81:	movsxd rax,DWORD PTR [r11+0x8]
   14000db85:	lea    rdi,[r11+rax*8+0x10]
   14000db8a:	movsxd rax,DWORD PTR [rdx+0xc]
   14000db8e:	lea    rsi,[rdx+rax*8+0x10]
   14000db93:	movsxd rax,DWORD PTR [rdx+0x8]
   14000db97:	lea    rbx,[rdx+rax*8+0x10]
   14000db9c:	cmp    rbx,rsi
   14000db9f:	je     0x14000dbc4
   14000dba1:	test   rbx,rbx
   14000dba4:	je     0x14000dbb2
   14000dba6:	mov    rdx,rdi
   14000dba9:	mov    rcx,rbx
   14000dbac:	call   QWORD PTR [rip+0x1dcee]        # 0x14002b8a0
   14000dbb2:	add    rbx,0x8
   14000dbb6:	add    rdi,0x8
   14000dbba:	cmp    rbx,rsi
   14000dbbd:	jne    0x14000dba1
   14000dbbf:	mov    rdx,QWORD PTR [rsp+0x60]
   14000dbc4:	mov    DWORD PTR [rsp+0x68],0x0
   14000dbcc:	movsxd rax,DWORD PTR [rdx+0x8]
   14000dbd0:	lea    rbx,[rdx+rax*8+0x10]
   14000dbd5:	mov    QWORD PTR [rsp+0x70],rbx
   14000dbda:	movsxd rax,DWORD PTR [rdx+0xc]
   14000dbde:	lea    rcx,[rdx+rax*8+0x10]
   14000dbe3:	mov    QWORD PTR [rsp+0x78],rcx
   14000dbe8:	nop    DWORD PTR [rax+rax*1+0x0]
   14000dbf0:	mov    eax,0x1
   14000dbf5:	mov    DWORD PTR [rsp+0x68],eax
   14000dbf9:	cmp    rbx,rcx
   14000dbfc:	je     0x14000dc36
   14000dbfe:	xchg   ax,ax
   14000dc00:	test   eax,eax
   14000dc02:	je     0x14000dc21
   14000dc04:	lea    rcx,[rsp+0xf8]
   14000dc0c:	mov    rdx,rbx
   14000dc0f:	call   QWORD PTR [rip+0x1d83b]        # 0x14002b450
   14000dc15:	mov    eax,DWORD PTR [rsp+0x68]
   14000dc19:	dec    eax
   14000dc1b:	mov    DWORD PTR [rsp+0x68],eax
   14000dc1f:	jmp    0x14000dc00
   14000dc21:	mov    rbx,QWORD PTR [rsp+0x70]
   14000dc26:	mov    rcx,QWORD PTR [rsp+0x78]
   14000dc2b:	add    rbx,0x8
   14000dc2f:	mov    QWORD PTR [rsp+0x70],rbx
   14000dc34:	jmp    0x14000dbf0
   14000dc36:	mov    rdi,QWORD PTR [rsp+0x60]
   14000dc3b:	or     rsi,0xffffffffffffffff
   14000dc3f:	mov    eax,DWORD PTR [rdi]
   14000dc41:	test   eax,eax
   14000dc43:	je     0x14000dc5d
   14000dc45:	cmp    eax,esi
   14000dc47:	je     0x14000dc9f
   14000dc49:	mov    eax,esi
   14000dc4b:	lock xadd DWORD PTR [rdi],eax
   14000dc4f:	add    eax,esi
   14000dc51:	setne  al
   14000dc54:	test   al,al
   14000dc56:	jne    0x14000dc9f
   14000dc58:	mov    rdi,QWORD PTR [rsp+0x60]
   14000dc5d:	movsxd rax,DWORD PTR [rdi+0xc]
   14000dc61:	lea    rbx,[rdi+rax*8+0x10]
   14000dc66:	movsxd rax,DWORD PTR [rdi+0x8]
   14000dc6a:	lea    rsi,[rdi+rax*8+0x10]
   14000dc6f:	cmp    rsi,rbx
   14000dc72:	je     0x14000dc92
   14000dc74:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000dc80:	sub    rbx,0x8
   14000dc84:	mov    rcx,rbx
   14000dc87:	call   QWORD PTR [rip+0x1dc0b]        # 0x14002b898
   14000dc8d:	cmp    rbx,rsi
   14000dc90:	jne    0x14000dc80
   14000dc92:	mov    rcx,rdi
   14000dc95:	call   QWORD PTR [rip+0x1dbd5]        # 0x14002b870
   14000dc9b:	or     rsi,0xffffffffffffffff
   14000dc9f:	mov    rax,QWORD PTR [r12+0x18]
   14000dca4:	cmp    DWORD PTR [rax+0x4],0x0
   14000dca8:	jne    0x14000dcca
   14000dcaa:	test   ebp,ebp
   14000dcac:	jne    0x14000dcca
   14000dcae:	lea    rcx,[rsp+0xf8]
   14000dcb6:	call   QWORD PTR [rip+0x1d744]        # 0x14002b400
   14000dcbc:	add    rsp,0x180
   14000dcc3:	pop    r12
   14000dcc5:	pop    rdi
   14000dcc6:	pop    rsi
   14000dcc7:	pop    rbp
   14000dcc8:	pop    rbx
   14000dcc9:	ret    
   14000dcca:	mov    ecx,DWORD PTR [rax]
   14000dccc:	mov    QWORD PTR [rsp+0x178],r13
   14000dcd4:	mov    QWORD PTR [rsp+0x170],r14
   14000dcdc:	mov    QWORD PTR [rsp+0x168],r15
   14000dce4:	test   ecx,ecx
   14000dce6:	je     0x14000dcfd
   14000dce8:	cmp    ecx,0xffffffff
   14000dceb:	je     0x14000dcf1
   14000dced:	lock add DWORD PTR [rax],0x1
   14000dcf1:	mov    r14,QWORD PTR [r12+0x18]
   14000dcf6:	mov    QWORD PTR [rsp+0x40],r14
   14000dcfb:	jmp    0x14000dd39
   14000dcfd:	call   QWORD PTR [rip+0x1dbcd]        # 0x14002b8d0
   14000dd03:	mov    r14,rax
   14000dd06:	mov    QWORD PTR [rsp+0x40],rax
   14000dd0b:	mov    rax,QWORD PTR [r12+0x18]
   14000dd10:	mov    rcx,QWORD PTR [rax+0x10]
   14000dd14:	test   rcx,rcx
   14000dd17:	je     0x14000dd39
   14000dd19:	mov    rdx,r14
   14000dd1c:	call   0x14000c800
   14000dd21:	lea    rcx,[r14+0x8]
   14000dd25:	mov    QWORD PTR [r14+0x10],rax
   14000dd29:	and    QWORD PTR [rax],0x3
   14000dd2d:	or     QWORD PTR [rax],rcx
   14000dd30:	mov    rcx,r14
   14000dd33:	call   QWORD PTR [rip+0x1d747]        # 0x14002b480
   14000dd39:	mov    rcx,r12
   14000dd3c:	call   QWORD PTR [rip+0x1d7be]        # 0x14002b500
   14000dd42:	lea    rax,[r12+0x8]
   14000dd47:	mov    rcx,rax
   14000dd4a:	mov    QWORD PTR [rsp+0x38],rax
   14000dd4f:	call   QWORD PTR [rip+0x1d7ab]        # 0x14002b500
   14000dd55:	lea    rax,[r12+0x10]
   14000dd5a:	mov    rcx,rax
   14000dd5d:	mov    QWORD PTR [rsp+0x90],rax
   14000dd65:	call   QWORD PTR [rip+0x1d795]        # 0x14002b500
   14000dd6b:	mov    rbx,QWORD PTR [rip+0x1d6b6]        # 0x14002b428
   14000dd72:	lea    rdx,[rsp+0x88]
   14000dd7a:	lea    rcx,[r12+0x18]
   14000dd7f:	mov    QWORD PTR [rsp+0x88],rbx
   14000dd87:	call   0x14000d820
   14000dd8c:	mov    r11d,DWORD PTR [rbx]
   14000dd8f:	test   r11d,r11d
   14000dd92:	je     0x14000ddb6
   14000dd94:	cmp    r11d,0xffffffff
   14000dd98:	je     0x14000de1e
   14000dd9e:	mov    eax,esi
   14000dda0:	lock xadd DWORD PTR [rbx],eax
   14000dda4:	add    eax,0xffffffff
   14000dda7:	setne  al
   14000ddaa:	test   al,al
   14000ddac:	jne    0x14000de1e
   14000ddae:	mov    rbx,QWORD PTR [rsp+0x88]
   14000ddb6:	mov    rsi,QWORD PTR [rbx+0x10]
   14000ddba:	test   rsi,rsi
   14000ddbd:	je     0x14000de15
   14000ddbf:	lea    rcx,[rsi+0x30]
   14000ddc3:	call   0x1400017b0
   14000ddc8:	lea    rcx,[rsi+0x28]
   14000ddcc:	call   QWORD PTR [rip+0x1d3f6]        # 0x14002b1c8
   14000ddd2:	lea    rcx,[rsi+0x20]
   14000ddd6:	call   QWORD PTR [rip+0x1d3ec]        # 0x14002b1c8
   14000dddc:	lea    rcx,[rsi+0x18]
   14000dde0:	call   QWORD PTR [rip+0x1d3e2]        # 0x14002b1c8
   14000dde6:	mov    rcx,QWORD PTR [rsi+0x8]
   14000ddea:	test   rcx,rcx
   14000dded:	je     0x14000ddf4
   14000ddef:	call   0x14000d720
   14000ddf4:	mov    rcx,QWORD PTR [rsi+0x10]
   14000ddf8:	test   rcx,rcx
   14000ddfb:	je     0x14000de02
   14000ddfd:	call   0x14000d720
   14000de02:	mov    rdx,QWORD PTR [rbx+0x10]
   14000de06:	mov    r8d,0x8
   14000de0c:	mov    rcx,rbx
   14000de0f:	call   QWORD PTR [rip+0x1d663]        # 0x14002b478
   14000de15:	mov    rcx,rbx
   14000de18:	call   QWORD PTR [rip+0x1d652]        # 0x14002b470
   14000de1e:	mov    rbp,QWORD PTR [rip+0x1d603]        # 0x14002b428
   14000de25:	lea    rcx,[rsp+0xd8]
   14000de2d:	mov    r8d,0x2
   14000de33:	mov    rdx,r12
   14000de36:	mov    DWORD PTR [rsp+0xcc],0x2
   14000de41:	call   QWORD PTR [rip+0x1d6b1]        # 0x14002b4f8
   14000de47:	xor    r15d,r15d
   14000de4a:	cmp    QWORD PTR [r14+0x10],r15
   14000de4e:	je     0x14000de56
   14000de50:	mov    rbx,QWORD PTR [r14+0x20]
   14000de54:	jmp    0x14000de5a
   14000de56:	lea    rbx,[r14+0x8]
   14000de5a:	lea    r13,[r14+0x8]
   14000de5e:	cmp    rbx,r13
   14000de61:	je     0x14000e0bb
   14000de67:	mov    r14,QWORD PTR [rsp+0x1b0]
   14000de6f:	nop
   14000de70:	mov    rcx,rbx
   14000de73:	mov    DWORD PTR [rsp+0x1c0],r15d
   14000de7b:	call   QWORD PTR [rip+0x1d5af]        # 0x14002b430
   14000de81:	cmp    rax,r13
   14000de84:	jne    0x14000de8b
   14000de86:	xor    r15d,r15d
   14000de89:	jmp    0x14000de9b
   14000de8b:	lea    rdx,[rax+0x18]
   14000de8f:	lea    rcx,[rbx+0x18]
   14000de93:	call   0x14000c530
   14000de98:	mov    r15d,eax
   14000de9b:	mov    rsi,QWORD PTR [rsp+0xe0]
   14000dea3:	lea    rdx,[rbx+0x20]
   14000dea7:	lea    rcx,[rsp+0x48]
   14000deac:	call   QWORD PTR [rip+0x1d52e]        # 0x14002b3e0
   14000deb2:	lea    rdx,[rbx+0x28]
   14000deb6:	lea    rcx,[rsp+0x48]
   14000debb:	call   QWORD PTR [rip+0x1d517]        # 0x14002b3d8
   14000dec1:	lea    rcx,[rsp+0x48]
   14000dec6:	call   QWORD PTR [rip+0x1d51c]        # 0x14002b3e8
   14000decc:	xor    edi,edi
   14000dece:	mov    r11,rax
   14000ded1:	test   rax,rax
   14000ded4:	je     0x14000df0b
   14000ded6:	movzx  ecx,BYTE PTR [rax]
   14000ded9:	test   cl,cl
   14000dedb:	je     0x14000df0b
   14000dedd:	nop    DWORD PTR [rax]
   14000dee0:	movzx  ecx,cl
   14000dee3:	shl    edi,0x4
   14000dee6:	inc    r11
   14000dee9:	add    edi,ecx
   14000deeb:	mov    ecx,edi
   14000deed:	and    ecx,0xf0000000
   14000def3:	je     0x14000defc
   14000def5:	mov    eax,ecx
   14000def7:	shr    eax,0x18
   14000defa:	xor    edi,eax
   14000defc:	not    ecx
   14000defe:	and    edi,ecx
   14000df00:	mov    cl,BYTE PTR [r11]
   14000df03:	test   cl,cl
   14000df05:	jne    0x14000dee0
   14000df07:	test   edi,edi
   14000df09:	jne    0x14000df10
   14000df0b:	mov    edi,0x1
   14000df10:	lea    rcx,[rsp+0x48]
   14000df15:	call   QWORD PTR [rip+0x1d2ad]        # 0x14002b1c8
   14000df1b:	mov    rax,QWORD PTR [rsi]
   14000df1e:	mov    rcx,rsi
   14000df21:	mov    DWORD PTR [rsp+0x1b0],edi
   14000df28:	call   QWORD PTR [rax+0x70]
   14000df2b:	mov    ecx,DWORD PTR [rbp+0x0]
   14000df2e:	mov    r12,rax
   14000df31:	mov    DWORD PTR [rsp+0x1b4],eax
   14000df38:	cmp    ecx,0x1
   14000df3b:	je     0x14000dfaf
   14000df3d:	test   ecx,ecx
   14000df3f:	je     0x14000dfaf
   14000df41:	call   QWORD PTR [rip+0x1d989]        # 0x14002b8d0
   14000df47:	mov    rcx,QWORD PTR [rbp+0x10]
   14000df4b:	mov    rsi,rax
   14000df4e:	test   rcx,rcx
   14000df51:	je     0x14000df6a
   14000df53:	mov    rdx,rax
   14000df56:	call   0x14000c0e0
   14000df5b:	lea    rcx,[rsi+0x8]
   14000df5f:	mov    QWORD PTR [rsi+0x10],rax
   14000df63:	and    QWORD PTR [rax],0x3
   14000df67:	or     QWORD PTR [rax],rcx
   14000df6a:	mov    eax,DWORD PTR [rbp+0x0]
   14000df6d:	test   eax,eax
   14000df6f:	je     0x14000df82
   14000df71:	cmp    eax,0xffffffff
   14000df74:	je     0x14000dfa3
   14000df76:	lock add DWORD PTR [rbp+0x0],0xffffffff
   14000df7b:	setne  al
   14000df7e:	test   al,al
   14000df80:	jne    0x14000dfa3
   14000df82:	mov    rdx,QWORD PTR [rbp+0x10]
   14000df86:	test   rdx,rdx
   14000df89:	je     0x14000df9a
   14000df8b:	mov    r8d,0x8
   14000df91:	mov    rcx,rbp
   14000df94:	call   QWORD PTR [rip+0x1d4de]        # 0x14002b478
   14000df9a:	mov    rcx,rbp
   14000df9d:	call   QWORD PTR [rip+0x1d4cd]        # 0x14002b470
   14000dfa3:	mov    rcx,rsi
   14000dfa6:	mov    rbp,rsi
   14000dfa9:	call   QWORD PTR [rip+0x1d4d1]        # 0x14002b480
   14000dfaf:	mov    rax,QWORD PTR [rbp+0x10]
   14000dfb3:	xor    esi,esi
   14000dfb5:	lea    r9,[rbp+0x8]
   14000dfb9:	mov    r8,rsi
   14000dfbc:	mov    cl,0x1
   14000dfbe:	test   rax,rax
   14000dfc1:	je     0x14000e022
   14000dfc3:	mov    edx,DWORD PTR [rax+0x18]
   14000dfc6:	mov    r9,rax
   14000dfc9:	cmp    edx,edi
   14000dfcb:	je     0x14000dfd6
   14000dfcd:	cmp    edx,edi
   14000dfcf:	mov    ecx,esi
   14000dfd1:	setb   cl
   14000dfd4:	jmp    0x14000dfdf
   14000dfd6:	cmp    DWORD PTR [rax+0x1c],r12d
   14000dfda:	mov    ecx,esi
   14000dfdc:	setb   cl
   14000dfdf:	test   cl,cl
   14000dfe1:	jne    0x14000dfee
   14000dfe3:	mov    r8,rax
   14000dfe6:	mov    rax,QWORD PTR [rax+0x8]
   14000dfea:	mov    cl,0x1
   14000dfec:	jmp    0x14000dff4
   14000dfee:	mov    rax,QWORD PTR [rax+0x10]
   14000dff2:	xor    cl,cl
   14000dff4:	test   rax,rax
   14000dff7:	jne    0x14000dfc3
   14000dff9:	test   r8,r8
   14000dffc:	je     0x14000e022
   14000dffe:	mov    edx,DWORD PTR [r8+0x18]
   14000e002:	cmp    edi,edx
   14000e004:	je     0x14000e00f
   14000e006:	cmp    edi,edx
   14000e008:	mov    eax,esi
   14000e00a:	setb   al
   14000e00d:	jmp    0x14000e018
   14000e00f:	cmp    r12d,DWORD PTR [r8+0x1c]
   14000e013:	mov    eax,esi
   14000e015:	setb   al
   14000e018:	test   al,al
   14000e01a:	jne    0x14000e022
   14000e01c:	mov    QWORD PTR [r8+0x20],rsi
   14000e020:	jmp    0x14000e055
   14000e022:	mov    edx,0x28
   14000e027:	mov    BYTE PTR [rsp+0x20],cl
   14000e02b:	mov    rcx,rbp
   14000e02e:	lea    r8d,[rdx-0x20]
   14000e032:	call   QWORD PTR [rip+0x1d408]        # 0x14002b440
   14000e038:	lea    rdx,[rax+0x18]
   14000e03c:	test   rdx,rdx
   14000e03f:	je     0x14000e04c
   14000e041:	mov    rcx,QWORD PTR [rsp+0x1b0]
   14000e049:	mov    QWORD PTR [rdx],rcx
   14000e04c:	add    rax,0x20
   14000e050:	je     0x14000e055
   14000e052:	mov    QWORD PTR [rax],rsi
   14000e055:	mov    esi,DWORD PTR [rsp+0x1b8]
   14000e05c:	lea    eax,[r15+0x1]
   14000e060:	lea    rdx,[rsp+0x1c0]
   14000e068:	cmp    DWORD PTR [rsp+0x1c0],eax
   14000e06f:	mov    DWORD PTR [rsp+0x80],eax
   14000e076:	lea    rcx,[rsp+0x80]
   14000e07e:	cmovge rcx,rdx
   14000e082:	lea    r8,[rsp+0xd8]
   14000e08a:	lea    rdx,[rbx+0x18]
   14000e08e:	mov    eax,DWORD PTR [rcx]
   14000e090:	mov    r9d,esi
   14000e093:	mov    rcx,r14
   14000e096:	mov    DWORD PTR [rsp+0x20],eax
   14000e09a:	call   0x14000c5e0
   14000e09f:	mov    rcx,rbx
   14000e0a2:	call   QWORD PTR [rip+0x1d388]        # 0x14002b430
   14000e0a8:	mov    rbx,rax
   14000e0ab:	cmp    rax,r13
   14000e0ae:	jne    0x14000de70
   14000e0b4:	mov    r14,QWORD PTR [rsp+0x40]
   14000e0b9:	jmp    0x14000e0c2
   14000e0bb:	mov    esi,DWORD PTR [rsp+0x1b8]
   14000e0c2:	mov    eax,DWORD PTR [rbp+0x0]
   14000e0c5:	cmp    eax,0x1
   14000e0c8:	je     0x14000e13c
   14000e0ca:	test   eax,eax
   14000e0cc:	je     0x14000e13c
   14000e0ce:	call   QWORD PTR [rip+0x1d7fc]        # 0x14002b8d0
   14000e0d4:	mov    rcx,QWORD PTR [rbp+0x10]
   14000e0d8:	mov    rbx,rax
   14000e0db:	test   rcx,rcx
   14000e0de:	je     0x14000e0f7
   14000e0e0:	mov    rdx,rax
   14000e0e3:	call   0x14000c0e0
   14000e0e8:	lea    rcx,[rbx+0x8]
   14000e0ec:	mov    QWORD PTR [rbx+0x10],rax
   14000e0f0:	and    QWORD PTR [rax],0x3
   14000e0f4:	or     QWORD PTR [rax],rcx
   14000e0f7:	mov    eax,DWORD PTR [rbp+0x0]
   14000e0fa:	test   eax,eax
   14000e0fc:	je     0x14000e10f
   14000e0fe:	cmp    eax,0xffffffff
   14000e101:	je     0x14000e130
   14000e103:	lock add DWORD PTR [rbp+0x0],0xffffffff
   14000e108:	setne  al
   14000e10b:	test   al,al
   14000e10d:	jne    0x14000e130
   14000e10f:	mov    rdx,QWORD PTR [rbp+0x10]
   14000e113:	test   rdx,rdx
   14000e116:	je     0x14000e127
   14000e118:	mov    r8d,0x8
   14000e11e:	mov    rcx,rbp
   14000e121:	call   QWORD PTR [rip+0x1d351]        # 0x14002b478
   14000e127:	mov    rcx,rbp
   14000e12a:	call   QWORD PTR [rip+0x1d340]        # 0x14002b470
   14000e130:	mov    rcx,rbx
   14000e133:	mov    rbp,rbx
   14000e136:	call   QWORD PTR [rip+0x1d344]        # 0x14002b480
   14000e13c:	cmp    QWORD PTR [rbp+0x10],0x0
   14000e141:	je     0x14000e149
   14000e143:	mov    rdi,QWORD PTR [rbp+0x20]
   14000e147:	jmp    0x14000e14d
   14000e149:	lea    rdi,[rbp+0x8]
   14000e14d:	mov    rdx,QWORD PTR [rsp+0x38]
   14000e152:	lea    rcx,[rsp+0x118]
   14000e15a:	mov    r8d,0x2
   14000e160:	mov    DWORD PTR [rsp+0xc4],0x2
   14000e16b:	call   QWORD PTR [rip+0x1d387]        # 0x14002b4f8
   14000e171:	or     r13,0xffffffffffffffff
   14000e175:	mov    eax,DWORD PTR [rbp+0x0]
   14000e178:	cmp    eax,0x1
   14000e17b:	je     0x14000e1f5
   14000e17d:	test   eax,eax
   14000e17f:	je     0x14000e1f5
   14000e181:	call   QWORD PTR [rip+0x1d749]        # 0x14002b8d0
   14000e187:	mov    rcx,QWORD PTR [rbp+0x10]
   14000e18b:	mov    rbx,rax
   14000e18e:	test   rcx,rcx
   14000e191:	je     0x14000e1aa
   14000e193:	mov    rdx,rax
   14000e196:	call   0x14000c0e0
   14000e19b:	lea    rcx,[rbx+0x8]
   14000e19f:	mov    QWORD PTR [rbx+0x10],rax
   14000e1a3:	and    QWORD PTR [rax],0x3
   14000e1a7:	or     QWORD PTR [rax],rcx
   14000e1aa:	mov    eax,DWORD PTR [rbp+0x0]
   14000e1ad:	test   eax,eax
   14000e1af:	je     0x14000e1c8
   14000e1b1:	cmp    eax,0xffffffff
   14000e1b4:	je     0x14000e1e9
   14000e1b6:	mov    eax,r13d
   14000e1b9:	lock xadd DWORD PTR [rbp+0x0],eax
   14000e1be:	add    eax,0xffffffff
   14000e1c1:	setne  al
   14000e1c4:	test   al,al
   14000e1c6:	jne    0x14000e1e9
   14000e1c8:	mov    rdx,QWORD PTR [rbp+0x10]
   14000e1cc:	test   rdx,rdx
   14000e1cf:	je     0x14000e1e0
   14000e1d1:	mov    r8d,0x8
   14000e1d7:	mov    rcx,rbp
   14000e1da:	call   QWORD PTR [rip+0x1d298]        # 0x14002b478
   14000e1e0:	mov    rcx,rbp
   14000e1e3:	call   QWORD PTR [rip+0x1d287]        # 0x14002b470
   14000e1e9:	mov    rcx,rbx
   14000e1ec:	mov    rbp,rbx
   14000e1ef:	call   QWORD PTR [rip+0x1d28b]        # 0x14002b480
   14000e1f5:	lea    rax,[rbp+0x8]
   14000e1f9:	cmp    rdi,rax
   14000e1fc:	je     0x14000e23b
   14000e1fe:	mov    rbx,QWORD PTR [rdi+0x18]
   14000e202:	mov    rcx,rdi
   14000e205:	mov    QWORD PTR [rsp+0x1b0],rbx
   14000e20d:	call   QWORD PTR [rip+0x1d21d]        # 0x14002b430
   14000e213:	lea    rcx,[rsp+0x118]
   14000e21b:	mov    edx,ebx
   14000e21d:	mov    rdi,rax
   14000e220:	call   QWORD PTR [rip+0x1d1e2]        # 0x14002b408
   14000e226:	mov    edx,DWORD PTR [rsp+0x1b4]
   14000e22d:	mov    rcx,rax
   14000e230:	call   QWORD PTR [rip+0x1d1d2]        # 0x14002b408
   14000e236:	jmp    0x14000e175
   14000e23b:	mov    QWORD PTR [rsp+0x30],rbp
   14000e240:	lea    r13,[r14+0x8]
   14000e244:	cmp    esi,0x1
   14000e247:	jne    0x14000ea85
   14000e24d:	cmp    QWORD PTR [r14+0x10],0x0
   14000e252:	mov    rsi,QWORD PTR [rip+0x1d1cf]        # 0x14002b428
   14000e259:	mov    QWORD PTR [rsp+0x38],rsi
   14000e25e:	mov    rdi,rsi
   14000e261:	mov    QWORD PTR [rsp+0x58],rsi
   14000e266:	je     0x14000e26e
   14000e268:	mov    r12,QWORD PTR [r14+0x20]
   14000e26c:	jmp    0x14000e271
   14000e26e:	mov    r12,r13
   14000e271:	cmp    r12,r13
   14000e274:	je     0x14000e538
   14000e27a:	or     rbp,0xffffffffffffffff
   14000e27e:	xchg   ax,ax
   14000e280:	mov    eax,DWORD PTR [rdi]
   14000e282:	lea    r15,[r12+0x18]
   14000e287:	cmp    eax,0x1
   14000e28a:	je     0x14000e333
   14000e290:	test   eax,eax
   14000e292:	je     0x14000e333
   14000e298:	call   QWORD PTR [rip+0x1d632]        # 0x14002b8d0
   14000e29e:	mov    rcx,QWORD PTR [rdi+0x10]
   14000e2a2:	mov    rsi,rax
   14000e2a5:	test   rcx,rcx
   14000e2a8:	je     0x14000e2c1
   14000e2aa:	mov    rdx,rax
   14000e2ad:	call   0x14000c2f0
   14000e2b2:	lea    rcx,[rsi+0x8]
   14000e2b6:	mov    QWORD PTR [rsi+0x10],rax
   14000e2ba:	and    QWORD PTR [rax],0x3
   14000e2be:	or     QWORD PTR [rax],rcx
   14000e2c1:	mov    eax,DWORD PTR [rdi]
   14000e2c3:	test   eax,eax
   14000e2c5:	je     0x14000e2dc
   14000e2c7:	cmp    eax,0xffffffff
   14000e2ca:	je     0x14000e327
   14000e2cc:	mov    eax,ebp
   14000e2ce:	lock xadd DWORD PTR [rdi],eax
   14000e2d2:	add    eax,0xffffffff
   14000e2d5:	setne  al
   14000e2d8:	test   al,al
   14000e2da:	jne    0x14000e327
   14000e2dc:	mov    rbx,QWORD PTR [rdi+0x10]
   14000e2e0:	test   rbx,rbx
   14000e2e3:	je     0x14000e31e
   14000e2e5:	lea    rcx,[rbx+0x18]
   14000e2e9:	call   QWORD PTR [rip+0x1ced9]        # 0x14002b1c8
   14000e2ef:	mov    rcx,QWORD PTR [rbx+0x8]
   14000e2f3:	test   rcx,rcx
   14000e2f6:	je     0x14000e2fd
   14000e2f8:	call   0x14000c6e0
   14000e2fd:	mov    rcx,QWORD PTR [rbx+0x10]
   14000e301:	test   rcx,rcx
   14000e304:	je     0x14000e30b
   14000e306:	call   0x14000c6e0
   14000e30b:	mov    rdx,QWORD PTR [rdi+0x10]
   14000e30f:	mov    r8d,0x8
   14000e315:	mov    rcx,rdi
   14000e318:	call   QWORD PTR [rip+0x1d15a]        # 0x14002b478
   14000e31e:	mov    rcx,rdi
   14000e321:	call   QWORD PTR [rip+0x1d149]        # 0x14002b470
   14000e327:	mov    rcx,rsi
   14000e32a:	mov    rdi,rsi
   14000e32d:	call   QWORD PTR [rip+0x1d14d]        # 0x14002b480
   14000e333:	mov    rbx,QWORD PTR [rdi+0x10]
   14000e337:	test   rbx,rbx
   14000e33a:	je     0x14000e382
   14000e33c:	xor    esi,esi
   14000e33e:	xchg   ax,ax
   14000e340:	lea    rcx,[rbx+0x18]
   14000e344:	mov    rdx,r15
   14000e347:	call   QWORD PTR [rip+0x1d083]        # 0x14002b3d0
   14000e34d:	test   eax,eax
   14000e34f:	js     0x14000e35a
   14000e351:	mov    rsi,rbx
   14000e354:	mov    rbx,QWORD PTR [rbx+0x8]
   14000e358:	jmp    0x14000e35e
   14000e35a:	mov    rbx,QWORD PTR [rbx+0x10]
   14000e35e:	test   rbx,rbx
   14000e361:	jne    0x14000e340
   14000e363:	test   rsi,rsi
   14000e366:	je     0x14000e382
   14000e368:	lea    rdx,[rsi+0x18]
   14000e36c:	mov    rcx,r15
   14000e36f:	call   QWORD PTR [rip+0x1d05b]        # 0x14002b3d0
   14000e375:	test   eax,eax
   14000e377:	js     0x14000e382
   14000e379:	add    rsi,0x20
   14000e37d:	jmp    0x14000e506
   14000e382:	mov    eax,DWORD PTR [rdi]
   14000e384:	cmp    eax,0x1
   14000e387:	je     0x14000e430
   14000e38d:	test   eax,eax
   14000e38f:	je     0x14000e430
   14000e395:	call   QWORD PTR [rip+0x1d535]        # 0x14002b8d0
   14000e39b:	mov    rcx,QWORD PTR [rdi+0x10]
   14000e39f:	mov    rsi,rax
   14000e3a2:	test   rcx,rcx
   14000e3a5:	je     0x14000e3be
   14000e3a7:	mov    rdx,rax
   14000e3aa:	call   0x14000c2f0
   14000e3af:	lea    rcx,[rsi+0x8]
   14000e3b3:	mov    QWORD PTR [rsi+0x10],rax
   14000e3b7:	and    QWORD PTR [rax],0x3
   14000e3bb:	or     QWORD PTR [rax],rcx
   14000e3be:	mov    eax,DWORD PTR [rdi]
   14000e3c0:	test   eax,eax
   14000e3c2:	je     0x14000e3d9
   14000e3c4:	cmp    eax,0xffffffff
   14000e3c7:	je     0x14000e424
   14000e3c9:	mov    eax,ebp
   14000e3cb:	lock xadd DWORD PTR [rdi],eax
   14000e3cf:	add    eax,0xffffffff
   14000e3d2:	setne  al
   14000e3d5:	test   al,al
   14000e3d7:	jne    0x14000e424
   14000e3d9:	mov    rbx,QWORD PTR [rdi+0x10]
   14000e3dd:	test   rbx,rbx
   14000e3e0:	je     0x14000e41b
   14000e3e2:	lea    rcx,[rbx+0x18]
   14000e3e6:	call   QWORD PTR [rip+0x1cddc]        # 0x14002b1c8
   14000e3ec:	mov    rcx,QWORD PTR [rbx+0x8]
   14000e3f0:	test   rcx,rcx
   14000e3f3:	je     0x14000e3fa
   14000e3f5:	call   0x14000c6e0
   14000e3fa:	mov    rcx,QWORD PTR [rbx+0x10]
   14000e3fe:	test   rcx,rcx
   14000e401:	je     0x14000e408
   14000e403:	call   0x14000c6e0
   14000e408:	mov    rdx,QWORD PTR [rdi+0x10]
   14000e40c:	mov    r8d,0x8
   14000e412:	mov    rcx,rdi
   14000e415:	call   QWORD PTR [rip+0x1d05d]        # 0x14002b478
   14000e41b:	mov    rcx,rdi
   14000e41e:	call   QWORD PTR [rip+0x1d04c]        # 0x14002b470
   14000e424:	mov    rcx,rsi
   14000e427:	mov    rdi,rsi
   14000e42a:	call   QWORD PTR [rip+0x1d050]        # 0x14002b480
   14000e430:	mov    rsi,QWORD PTR [rdi+0x10]
   14000e434:	xor    ebx,ebx
   14000e436:	lea    r9,[rdi+0x8]
   14000e43a:	mov    r15b,0x1
   14000e43d:	test   rsi,rsi
   14000e440:	je     0x14000e4a1
   14000e442:	lea    rcx,[rsi+0x18]
   14000e446:	lea    rdx,[r12+0x18]
   14000e44b:	mov    QWORD PTR [rsp+0x1b0],rsi
   14000e453:	call   QWORD PTR [rip+0x1cf77]        # 0x14002b3d0
   14000e459:	test   eax,eax
   14000e45b:	js     0x14000e469
   14000e45d:	mov    rbx,rsi
   14000e460:	mov    rsi,QWORD PTR [rsi+0x8]
   14000e464:	mov    r15b,0x1
   14000e467:	jmp    0x14000e470
   14000e469:	mov    rsi,QWORD PTR [rsi+0x10]
   14000e46d:	xor    r15b,r15b
   14000e470:	test   rsi,rsi
   14000e473:	jne    0x14000e442
   14000e475:	test   rbx,rbx
   14000e478:	je     0x14000e4a8
   14000e47a:	lea    rsi,[r12+0x18]
   14000e47f:	lea    rdx,[rbx+0x18]
   14000e483:	mov    rcx,rsi
   14000e486:	call   QWORD PTR [rip+0x1cf44]        # 0x14002b3d0
   14000e48c:	test   eax,eax
   14000e48e:	js     0x14000e4b7
   14000e490:	mov    DWORD PTR [rbx+0x20],0x0
   14000e497:	mov    QWORD PTR [rsp+0xd0],rbx
   14000e49f:	jmp    0x14000e502
   14000e4a1:	lea    rsi,[r12+0x18]
   14000e4a6:	jmp    0x14000e4bf
   14000e4a8:	mov    r9,QWORD PTR [rsp+0x1b0]
   14000e4b0:	lea    rsi,[r12+0x18]
   14000e4b5:	jmp    0x14000e4bf
   14000e4b7:	mov    r9,QWORD PTR [rsp+0x1b0]
   14000e4bf:	mov    edx,0x28
   14000e4c4:	mov    rcx,rdi
   14000e4c7:	mov    BYTE PTR [rsp+0x20],r15b
   14000e4cc:	lea    r8d,[rdx-0x20]
   14000e4d0:	call   QWORD PTR [rip+0x1cf6a]        # 0x14002b440
   14000e4d6:	mov    rbx,rax
   14000e4d9:	lea    rcx,[rax+0x18]
   14000e4dd:	test   rcx,rcx
   14000e4e0:	je     0x14000e4eb
   14000e4e2:	mov    rdx,rsi
   14000e4e5:	call   QWORD PTR [rip+0x1cef5]        # 0x14002b3e0
   14000e4eb:	lea    rax,[rbx+0x20]
   14000e4ef:	test   rax,rax
   14000e4f2:	je     0x14000e4fa
   14000e4f4:	mov    DWORD PTR [rax],0x0
   14000e4fa:	mov    QWORD PTR [rsp+0xd0],rbx
   14000e502:	lea    rsi,[rbx+0x20]
   14000e506:	inc    DWORD PTR [rsi]
   14000e508:	mov    rcx,r12
   14000e50b:	call   QWORD PTR [rip+0x1cf1f]        # 0x14002b430
   14000e511:	mov    r12,rax
   14000e514:	cmp    rax,r13
   14000e517:	jne    0x14000e280
   14000e51d:	mov    rsi,QWORD PTR [rip+0x1cf04]        # 0x14002b428
   14000e524:	mov    rbp,QWORD PTR [rsp+0x30]
   14000e529:	mov    r14,QWORD PTR [rsp+0x40]
   14000e52e:	mov    QWORD PTR [rsp+0x38],rsi
   14000e533:	mov    QWORD PTR [rsp+0x58],rdi
   14000e538:	mov    ecx,DWORD PTR [rdi+0x4]
   14000e53b:	cmp    ecx,0xc8
   14000e541:	jge    0x14000e55d
   14000e543:	mov    eax,0x1f7
   14000e548:	mov    edx,0x97
   14000e54d:	cmp    ecx,0x3c
   14000e550:	cmovl  ax,dx
   14000e554:	mov    DWORD PTR [rsp+0x1b0],eax
   14000e55b:	jmp    0x14000e5a7
   14000e55d:	cmp    ecx,0x9c4
   14000e563:	jge    0x14000e582
   14000e565:	mov    eax,0x138b
   14000e56a:	mov    edx,0x5e7
   14000e56f:	cmp    ecx,0x2ee
   14000e575:	cmovl  ax,dx
   14000e579:	mov    DWORD PTR [rsp+0x1b0],eax
   14000e580:	jmp    0x14000e5a7
   14000e582:	cmp    ecx,0x2710
   14000e588:	jge    0x14000e598
   14000e58a:	mov    eax,0x3aa5
   14000e58f:	mov    DWORD PTR [rsp+0x1b0],eax
   14000e596:	jmp    0x14000e5a7
   14000e598:	lea    eax,[rcx+rcx*2]
   14000e59b:	cdq    
   14000e59c:	sub    eax,edx
   14000e59e:	sar    eax,1
   14000e5a0:	mov    DWORD PTR [rsp+0x1b0],eax
   14000e5a7:	cmp    QWORD PTR [rdi+0x10],0x0
   14000e5ac:	je     0x14000e5b4
   14000e5ae:	mov    rbx,QWORD PTR [rdi+0x20]
   14000e5b2:	jmp    0x14000e5b8
   14000e5b4:	lea    rbx,[rdi+0x8]
   14000e5b8:	lea    r13,[rdi+0x8]
   14000e5bc:	cmp    rbx,r13
   14000e5bf:	je     0x14000e775
   14000e5c5:	movzx  r14d,ax
   14000e5c9:	or     rbp,0xffffffffffffffff
   14000e5cd:	nop    DWORD PTR [rax]
   14000e5d0:	lea    r12,[rbx+0x18]
   14000e5d4:	mov    rcx,r12
   14000e5d7:	call   QWORD PTR [rip+0x1ce0b]        # 0x14002b3e8
   14000e5dd:	xor    r8d,r8d
   14000e5e0:	mov    r11,rax
   14000e5e3:	test   rax,rax
   14000e5e6:	je     0x14000e621
   14000e5e8:	movzx  ecx,BYTE PTR [rax]
   14000e5eb:	test   cl,cl
   14000e5ed:	je     0x14000e621
   14000e5ef:	nop
   14000e5f0:	movzx  ecx,cl
   14000e5f3:	shl    r8d,0x4
   14000e5f7:	inc    r11
   14000e5fa:	add    r8d,ecx
   14000e5fd:	mov    ecx,r8d
   14000e600:	and    ecx,0xf0000000
   14000e606:	je     0x14000e610
   14000e608:	mov    eax,ecx
   14000e60a:	shr    eax,0x18
   14000e60d:	xor    r8d,eax
   14000e610:	not    ecx
   14000e612:	and    r8d,ecx
   14000e615:	mov    cl,BYTE PTR [r11]
   14000e618:	test   cl,cl
   14000e61a:	jne    0x14000e5f0
   14000e61c:	test   r8d,r8d
   14000e61f:	jne    0x14000e627
   14000e621:	mov    r8d,0x1
   14000e627:	xor    edx,edx
   14000e629:	mov    eax,r8d
   14000e62c:	div    r14d
   14000e62f:	mov    eax,DWORD PTR [rsi]
   14000e631:	mov    r15d,edx
   14000e634:	cmp    eax,0x1
   14000e637:	je     0x14000e6eb
   14000e63d:	test   eax,eax
   14000e63f:	je     0x14000e6eb
   14000e645:	call   QWORD PTR [rip+0x1d285]        # 0x14002b8d0
   14000e64b:	mov    rcx,QWORD PTR [rsi+0x10]
   14000e64f:	mov    r13,rax
   14000e652:	test   rcx,rcx
   14000e655:	je     0x14000e66e
   14000e657:	mov    rdx,rax
   14000e65a:	call   0x14000c3d0
   14000e65f:	lea    rcx,[r13+0x8]
   14000e663:	mov    QWORD PTR [r13+0x10],rax
   14000e667:	and    QWORD PTR [rax],0x3
   14000e66b:	or     QWORD PTR [rax],rcx
   14000e66e:	mov    eax,DWORD PTR [rsi]
   14000e670:	test   eax,eax
   14000e672:	je     0x14000e689
   14000e674:	cmp    eax,0xffffffff
   14000e677:	je     0x14000e6db
   14000e679:	mov    eax,ebp
   14000e67b:	lock xadd DWORD PTR [rsi],eax
   14000e67f:	add    eax,0xffffffff
   14000e682:	setne  al
   14000e685:	test   al,al
   14000e687:	jne    0x14000e6db
   14000e689:	mov    r12,QWORD PTR [rsi+0x10]
   14000e68d:	test   r12,r12
   14000e690:	je     0x14000e6ce
   14000e692:	lea    rcx,[r12+0x20]
   14000e697:	call   QWORD PTR [rip+0x1cb2b]        # 0x14002b1c8
   14000e69d:	mov    rcx,QWORD PTR [r12+0x8]
   14000e6a2:	test   rcx,rcx
   14000e6a5:	je     0x14000e6ac
   14000e6a7:	call   0x14000c720
   14000e6ac:	mov    rcx,QWORD PTR [r12+0x10]
   14000e6b1:	test   rcx,rcx
   14000e6b4:	je     0x14000e6bb
   14000e6b6:	call   0x14000c720
   14000e6bb:	mov    rdx,QWORD PTR [rsi+0x10]
   14000e6bf:	mov    r8d,0x8
   14000e6c5:	mov    rcx,rsi
   14000e6c8:	call   QWORD PTR [rip+0x1cdaa]        # 0x14002b478
   14000e6ce:	mov    rcx,rsi
   14000e6d1:	call   QWORD PTR [rip+0x1cd99]        # 0x14002b470
   14000e6d7:	lea    r12,[rbx+0x18]
   14000e6db:	mov    rcx,r13
   14000e6de:	mov    rsi,r13
   14000e6e1:	call   QWORD PTR [rip+0x1cd99]        # 0x14002b480
   14000e6e7:	lea    r13,[rdi+0x8]
   14000e6eb:	mov    rax,QWORD PTR [rsi+0x10]
   14000e6ef:	lea    r9,[rsi+0x8]
   14000e6f3:	mov    cl,0x1
   14000e6f5:	test   rax,rax
   14000e6f8:	je     0x14000e71d
   14000e6fa:	nop    WORD PTR [rax+rax*1+0x0]
   14000e700:	cmp    DWORD PTR [rax+0x18],r15d
   14000e704:	mov    r9,rax
   14000e707:	setge  cl
   14000e70a:	test   cl,cl
   14000e70c:	je     0x14000e714
   14000e70e:	mov    rax,QWORD PTR [rax+0x8]
   14000e712:	jmp    0x14000e718
   14000e714:	mov    rax,QWORD PTR [rax+0x10]
   14000e718:	test   rax,rax
   14000e71b:	jne    0x14000e700
   14000e71d:	mov    edx,0x28
   14000e722:	mov    BYTE PTR [rsp+0x20],cl
   14000e726:	mov    rcx,rsi
   14000e729:	lea    r8d,[rdx-0x20]
   14000e72d:	call   QWORD PTR [rip+0x1cd0d]        # 0x14002b440
   14000e733:	lea    rcx,[rax+0x18]
   14000e737:	test   rcx,rcx
   14000e73a:	je     0x14000e73f
   14000e73c:	mov    DWORD PTR [rcx],r15d
   14000e73f:	lea    rcx,[rax+0x20]
   14000e743:	test   rcx,rcx
   14000e746:	je     0x14000e751
   14000e748:	mov    rdx,r12
   14000e74b:	call   QWORD PTR [rip+0x1cc8f]        # 0x14002b3e0
   14000e751:	mov    rcx,rbx
   14000e754:	call   QWORD PTR [rip+0x1ccd6]        # 0x14002b430
   14000e75a:	mov    rbx,rax
   14000e75d:	cmp    rax,r13
   14000e760:	jne    0x14000e5d0
   14000e766:	mov    rbp,QWORD PTR [rsp+0x30]
   14000e76b:	mov    r14,QWORD PTR [rsp+0x40]
   14000e770:	mov    QWORD PTR [rsp+0x38],rsi
   14000e775:	mov    r15d,DWORD PTR [rsp+0x1b0]
   14000e77d:	mov    rbx,QWORD PTR [rsp+0x90]
   14000e785:	movzx  eax,r15w
   14000e789:	mov    rcx,rbx
   14000e78c:	lea    r12d,[rax+rax*1+0x2]
   14000e791:	mov    edx,r12d
   14000e794:	call   QWORD PTR [rip+0x1cd56]        # 0x14002b4f0
   14000e79a:	lea    rcx,[rsp+0x98]
   14000e7a2:	mov    r8d,0x2
   14000e7a8:	mov    rdx,rbx
   14000e7ab:	mov    DWORD PTR [rsp+0xc8],0x2
   14000e7b6:	call   QWORD PTR [rip+0x1cd3c]        # 0x14002b4f8
   14000e7bc:	mov    rcx,0xffffffffffffffff
   14000e7c3:	movzx  ebx,r15w
   14000e7c7:	mov    eax,0x2
   14000e7cc:	mul    rbx
   14000e7cf:	cmovo  rax,rcx
   14000e7d3:	mov    rcx,rax
   14000e7d6:	call   0x140029518
   14000e7db:	lea    r8,[rbx+rbx*1]
   14000e7df:	xor    edx,edx
   14000e7e1:	mov    rcx,rax
   14000e7e4:	mov    r13,rax
   14000e7e7:	mov    QWORD PTR [rsp+0x30],rax
   14000e7ec:	call   0x14002960c
   14000e7f1:	lea    rcx,[rsp+0x98]
   14000e7f9:	movzx  edx,r15w
   14000e7fd:	call   QWORD PTR [rip+0x1cce5]        # 0x14002b4e8
   14000e803:	mov    rcx,QWORD PTR [rsp+0xa0]
   14000e80b:	movsxd rdx,r12d
   14000e80e:	mov    r8,QWORD PTR [rcx]
   14000e811:	call   QWORD PTR [r8+0x80]
   14000e818:	lea    rcx,[rsp+0x98]
   14000e820:	xor    edx,edx
   14000e822:	call   QWORD PTR [rip+0x1ccc0]        # 0x14002b4e8
   14000e828:	cmp    QWORD PTR [rsi+0x10],0x0
   14000e82d:	mov    r15d,0x2
   14000e833:	je     0x14000e83b
   14000e835:	mov    rbx,QWORD PTR [rsi+0x20]
   14000e839:	jmp    0x14000e83f
   14000e83b:	lea    rbx,[rsi+0x8]
   14000e83f:	lea    rax,[rsi+0x8]
   14000e843:	cmp    rbx,rax
   14000e846:	je     0x14000e925
   14000e84c:	mov    DWORD PTR [rsp+0x50],0xff
   14000e854:	mov    rsi,rax
   14000e857:	mov    rdi,r13
   14000e85a:	nop    WORD PTR [rax+rax*1+0x0]
   14000e860:	movsxd rax,DWORD PTR [rbx+0x18]
   14000e864:	mov    ecx,r15d
   14000e867:	shr    ecx,1
   14000e869:	mov    r14d,eax
   14000e86c:	mov    WORD PTR [rdi+rax*2],cx
   14000e870:	lea    rcx,[rbx+0x20]
   14000e874:	call   QWORD PTR [rip+0x1c956]        # 0x14002b1d0
   14000e87a:	mov    rcx,QWORD PTR [rbx+0x20]
   14000e87e:	mov    edx,DWORD PTR [rcx+0x4]
   14000e881:	mov    r13,rax
   14000e884:	lea    rax,[rsp+0x50]
   14000e889:	mov    DWORD PTR [rsp+0x1c8],edx
   14000e890:	cmp    edx,0xff
   14000e896:	lea    rcx,[rsp+0x1c8]
   14000e89e:	cmovae rcx,rax
   14000e8a2:	mov    r12d,DWORD PTR [rcx]
   14000e8a5:	lea    rcx,[rsp+0x98]
   14000e8ad:	movzx  edx,r12b
   14000e8b1:	mov    DWORD PTR [rsp+0x1c8],r12d
   14000e8b9:	call   QWORD PTR [rip+0x1cb51]        # 0x14002b410
   14000e8bf:	lea    rcx,[rsp+0x98]
   14000e8c7:	mov    r8d,r12d
   14000e8ca:	mov    rdx,r13
   14000e8cd:	call   QWORD PTR [rip+0x1cb45]        # 0x14002b418
   14000e8d3:	mov    rcx,rbx
   14000e8d6:	lea    r15d,[r15+r12*1+0x1]
   14000e8db:	call   QWORD PTR [rip+0x1cb4f]        # 0x14002b430
   14000e8e1:	mov    rbx,rax
   14000e8e4:	cmp    rax,rsi
   14000e8e7:	je     0x14000e8ef
   14000e8e9:	cmp    DWORD PTR [rax+0x18],r14d
   14000e8ed:	je     0x14000e870
   14000e8ef:	test   r15b,0x1
   14000e8f3:	je     0x14000e908
   14000e8f5:	lea    rcx,[rsp+0x98]
   14000e8fd:	xor    edx,edx
   14000e8ff:	call   QWORD PTR [rip+0x1cb0b]        # 0x14002b410
   14000e905:	inc    r15d
   14000e908:	cmp    rbx,rsi
   14000e90b:	jne    0x14000e860
   14000e911:	mov    rdi,QWORD PTR [rsp+0x58]
   14000e916:	mov    rsi,QWORD PTR [rsp+0x38]
   14000e91b:	mov    r14,QWORD PTR [rsp+0x40]
   14000e920:	mov    r13,QWORD PTR [rsp+0x30]
   14000e925:	mov    rcx,QWORD PTR [rsp+0xa0]
   14000e92d:	mov    edx,0x2
   14000e932:	mov    rax,QWORD PTR [rcx]
   14000e935:	call   QWORD PTR [rax+0x80]
   14000e93b:	mov    r10d,DWORD PTR [rsp+0x1b0]
   14000e943:	movzx  r11d,r10w
   14000e947:	test   r11d,r11d
   14000e94a:	jle    0x14000e96d
   14000e94c:	mov    rbx,r13
   14000e94f:	mov    r12,r11
   14000e952:	movzx  edx,WORD PTR [rbx]
   14000e955:	lea    rcx,[rsp+0x98]
   14000e95d:	call   QWORD PTR [rip+0x1cb85]        # 0x14002b4e8
   14000e963:	add    rbx,0x2
   14000e967:	sub    r12,0x1
   14000e96b:	jne    0x14000e952
   14000e96d:	mov    rcx,r13
   14000e970:	call   0x140029606
   14000e975:	cmp    r15d,0x20000
   14000e97c:	jbe    0x14000e9b2
   14000e97e:	lea    rcx,[rsp+0x138]
   14000e986:	xor    r9d,r9d
   14000e989:	xor    r8d,r8d
   14000e98c:	xor    edx,edx
   14000e98e:	call   QWORD PTR [rip+0x1ca24]        # 0x14002b3b8
   14000e994:	lea    rdx,[rip+0x1ea7d]        # 0x14002d418
   14000e99b:	mov    rcx,rax
   14000e99e:	call   QWORD PTR [rip+0x1cb3c]        # 0x14002b4e0
   14000e9a4:	mov    rcx,QWORD PTR [rsp+0x90]
   14000e9ac:	call   QWORD PTR [rip+0x1cb4e]        # 0x14002b500
   14000e9b2:	lea    rcx,[rsp+0x98]
   14000e9ba:	call   QWORD PTR [rip+0x1ca40]        # 0x14002b400
   14000e9c0:	mov    r11d,DWORD PTR [rsi]
   14000e9c3:	test   r11d,r11d
   14000e9c6:	je     0x14000e9d9
   14000e9c8:	cmp    r11d,0xffffffff
   14000e9cc:	je     0x14000ea24
   14000e9ce:	lock add DWORD PTR [rsi],0xffffffff
   14000e9d2:	setne  al
   14000e9d5:	test   al,al
   14000e9d7:	jne    0x14000ea24
   14000e9d9:	mov    rbx,QWORD PTR [rsi+0x10]
   14000e9dd:	test   rbx,rbx
   14000e9e0:	je     0x14000ea1b
   14000e9e2:	lea    rcx,[rbx+0x20]
   14000e9e6:	call   QWORD PTR [rip+0x1c7dc]        # 0x14002b1c8
   14000e9ec:	mov    rcx,QWORD PTR [rbx+0x8]
   14000e9f0:	test   rcx,rcx
   14000e9f3:	je     0x14000e9fa
   14000e9f5:	call   0x14000c720
   14000e9fa:	mov    rcx,QWORD PTR [rbx+0x10]
   14000e9fe:	test   rcx,rcx
   14000ea01:	je     0x14000ea08
   14000ea03:	call   0x14000c720
   14000ea08:	mov    rdx,QWORD PTR [rsi+0x10]
   14000ea0c:	mov    r8d,0x8
   14000ea12:	mov    rcx,rsi
   14000ea15:	call   QWORD PTR [rip+0x1ca5d]        # 0x14002b478
   14000ea1b:	mov    rcx,rsi
   14000ea1e:	call   QWORD PTR [rip+0x1ca4c]        # 0x14002b470
   14000ea24:	mov    eax,DWORD PTR [rdi]
   14000ea26:	test   eax,eax
   14000ea28:	je     0x14000ea3a
   14000ea2a:	cmp    eax,0xffffffff
   14000ea2d:	je     0x14000ea85
   14000ea2f:	lock add DWORD PTR [rdi],0xffffffff
   14000ea33:	setne  al
   14000ea36:	test   al,al
   14000ea38:	jne    0x14000ea85
   14000ea3a:	mov    rbx,QWORD PTR [rdi+0x10]
   14000ea3e:	test   rbx,rbx
   14000ea41:	je     0x14000ea7c
   14000ea43:	lea    rcx,[rbx+0x18]
   14000ea47:	call   QWORD PTR [rip+0x1c77b]        # 0x14002b1c8
   14000ea4d:	mov    rcx,QWORD PTR [rbx+0x8]
   14000ea51:	test   rcx,rcx
   14000ea54:	je     0x14000ea5b
   14000ea56:	call   0x14000c6e0
   14000ea5b:	mov    rcx,QWORD PTR [rbx+0x10]
   14000ea5f:	test   rcx,rcx
   14000ea62:	je     0x14000ea69
   14000ea64:	call   0x14000c6e0
   14000ea69:	mov    rdx,QWORD PTR [rdi+0x10]
   14000ea6d:	mov    r8d,0x8
   14000ea73:	mov    rcx,rdi
   14000ea76:	call   QWORD PTR [rip+0x1c9fc]        # 0x14002b478
   14000ea7c:	mov    rcx,rdi
   14000ea7f:	call   QWORD PTR [rip+0x1c9eb]        # 0x14002b470
   14000ea85:	lea    rcx,[rsp+0x118]
   14000ea8d:	call   QWORD PTR [rip+0x1c96d]        # 0x14002b400
   14000ea93:	lea    rcx,[rsp+0xd8]
   14000ea9b:	call   QWORD PTR [rip+0x1c95f]        # 0x14002b400
   14000eaa1:	mov    r11d,DWORD PTR [rbp+0x0]
   14000eaa5:	mov    r15,QWORD PTR [rsp+0x168]
   14000eaad:	mov    r13,QWORD PTR [rsp+0x178]
   14000eab5:	test   r11d,r11d
   14000eab8:	je     0x14000ead4
   14000eaba:	cmp    r11d,0xffffffff
   14000eabe:	je     0x14000eafb
   14000eac0:	or     rdx,0xffffffffffffffff
   14000eac4:	mov    eax,edx
   14000eac6:	lock xadd DWORD PTR [rbp+0x0],eax
   14000eacb:	add    eax,edx
   14000eacd:	setne  al
   14000ead0:	test   al,al
   14000ead2:	jne    0x14000eaff
   14000ead4:	mov    rdx,QWORD PTR [rbp+0x10]
   14000ead8:	test   rdx,rdx
   14000eadb:	je     0x14000eaec
   14000eadd:	mov    r8d,0x8
   14000eae3:	mov    rcx,rbp
   14000eae6:	call   QWORD PTR [rip+0x1c98c]        # 0x14002b478
   14000eaec:	mov    rcx,rbp
   14000eaef:	call   QWORD PTR [rip+0x1c97b]        # 0x14002b470
   14000eaf5:	or     rdx,0xffffffffffffffff
   14000eaf9:	jmp    0x14000eaff
   14000eafb:	or     rdx,0xffffffffffffffff
   14000eaff:	mov    eax,DWORD PTR [r14]
   14000eb02:	test   eax,eax
   14000eb04:	je     0x14000eb24
   14000eb06:	cmp    eax,0xffffffff
   14000eb09:	je     0x14000ebe6
   14000eb0f:	mov    eax,edx
   14000eb11:	lock xadd DWORD PTR [r14],eax
   14000eb16:	add    eax,0xffffffff
   14000eb19:	setne  al
   14000eb1c:	test   al,al
   14000eb1e:	jne    0x14000ebe6
   14000eb24:	mov    r12,QWORD PTR [r14+0x10]
   14000eb28:	test   r12,r12
   14000eb2b:	je     0x14000ebdd
   14000eb31:	mov    rax,QWORD PTR [r12+0x30]
   14000eb36:	mov    ecx,DWORD PTR [rax]
   14000eb38:	test   ecx,ecx
   14000eb3a:	je     0x14000eb4f
   14000eb3c:	cmp    ecx,0xffffffff
   14000eb3f:	je     0x14000eb8b
   14000eb41:	lock xadd DWORD PTR [rax],edx
   14000eb45:	add    edx,0xffffffff
   14000eb48:	setne  al
   14000eb4b:	test   al,al
   14000eb4d:	jne    0x14000eb8b
   14000eb4f:	mov    rbp,QWORD PTR [r12+0x30]
   14000eb54:	movsxd rax,DWORD PTR [rbp+0xc]
   14000eb58:	lea    rbx,[rbp+rax*8+0x10]
   14000eb5d:	movsxd rax,DWORD PTR [rbp+0x8]
   14000eb61:	lea    rdi,[rbp+rax*8+0x10]
   14000eb66:	cmp    rdi,rbx
   14000eb69:	je     0x14000eb82
   14000eb6b:	nop    DWORD PTR [rax+rax*1+0x0]
   14000eb70:	sub    rbx,0x8
   14000eb74:	mov    rcx,rbx
   14000eb77:	call   QWORD PTR [rip+0x1cd1b]        # 0x14002b898
   14000eb7d:	cmp    rbx,rdi
   14000eb80:	jne    0x14000eb70
   14000eb82:	mov    rcx,rbp
   14000eb85:	call   QWORD PTR [rip+0x1cce5]        # 0x14002b870
   14000eb8b:	lea    rcx,[r12+0x28]
   14000eb90:	call   QWORD PTR [rip+0x1c632]        # 0x14002b1c8
   14000eb96:	lea    rcx,[r12+0x20]
   14000eb9b:	call   QWORD PTR [rip+0x1c627]        # 0x14002b1c8
   14000eba1:	lea    rcx,[r12+0x18]
   14000eba6:	call   QWORD PTR [rip+0x1c61c]        # 0x14002b1c8
   14000ebac:	mov    rcx,QWORD PTR [r12+0x8]
   14000ebb1:	test   rcx,rcx
   14000ebb4:	je     0x14000ebbb
   14000ebb6:	call   0x14000d720
   14000ebbb:	mov    rcx,QWORD PTR [r12+0x10]
   14000ebc0:	test   rcx,rcx
   14000ebc3:	je     0x14000ebca
   14000ebc5:	call   0x14000d720
   14000ebca:	mov    rdx,QWORD PTR [r14+0x10]
   14000ebce:	mov    r8d,0x8
   14000ebd4:	mov    rcx,r14
   14000ebd7:	call   QWORD PTR [rip+0x1c89b]        # 0x14002b478
   14000ebdd:	mov    rcx,r14
   14000ebe0:	call   QWORD PTR [rip+0x1c88a]        # 0x14002b470
   14000ebe6:	lea    rcx,[rsp+0xf8]
   14000ebee:	call   QWORD PTR [rip+0x1c80c]        # 0x14002b400
   14000ebf4:	mov    r14,QWORD PTR [rsp+0x170]
   14000ebfc:	add    rsp,0x180
   14000ec03:	pop    r12
   14000ec05:	pop    rdi
   14000ec06:	pop    rsi
   14000ec07:	pop    rbp
   14000ec08:	pop    rbx
   14000ec09:	ret    
   14000ec0a:	int3   
   14000ec0b:	int3   
   14000ec0c:	int3   
   14000ec0d:	int3   
   14000ec0e:	int3   
   14000ec0f:	int3   
   14000ec10:	mov    QWORD PTR [rsp+0x18],rbx
   14000ec15:	push   rsi
   14000ec16:	push   rdi
   14000ec17:	push   r12
   14000ec19:	sub    rsp,0x90
   14000ec20:	mov    r12,rcx
   14000ec23:	mov    rbx,rdx
   14000ec26:	lea    rcx,[rsp+0x20]
   14000ec2b:	add    rdx,0x20
   14000ec2f:	movzx  edi,r9b
   14000ec33:	mov    rsi,r8
   14000ec36:	call   QWORD PTR [rip+0x1cc64]        # 0x14002b8a0
   14000ec3c:	mov    rax,QWORD PTR [rsp+0x20]
   14000ec41:	cmp    DWORD PTR [rax+0x4],0x0
   14000ec45:	jne    0x14000ec5f
   14000ec47:	lea    rdx,[rip+0x1e76b]        # 0x14002d3b9
   14000ec4e:	lea    rcx,[rsp+0x48]
   14000ec53:	or     r8d,0xffffffff
   14000ec57:	call   QWORD PTR [rip+0x1c79b]        # 0x14002b3f8
   14000ec5d:	jmp    0x14000ec6f
   14000ec5f:	lea    rdx,[rsp+0x48]
   14000ec64:	lea    rcx,[rsp+0x20]
   14000ec69:	call   QWORD PTR [rip+0x1c781]        # 0x14002b3f0
   14000ec6f:	lea    rdx,[rbx+0x10]
   14000ec73:	lea    rcx,[rsp+0x58]
   14000ec78:	call   QWORD PTR [rip+0x1cc22]        # 0x14002b8a0
   14000ec7e:	mov    r11,QWORD PTR [rsp+0x58]
   14000ec83:	cmp    DWORD PTR [r11+0x4],0x0
   14000ec88:	jne    0x14000eca2
   14000ec8a:	lea    rdx,[rip+0x1e728]        # 0x14002d3b9
   14000ec91:	lea    rcx,[rsp+0x50]
   14000ec96:	or     r8d,0xffffffff
   14000ec9a:	call   QWORD PTR [rip+0x1c758]        # 0x14002b3f8
   14000eca0:	jmp    0x14000ecb2
   14000eca2:	lea    rdx,[rsp+0x50]
   14000eca7:	lea    rcx,[rsp+0x58]
   14000ecac:	call   QWORD PTR [rip+0x1c73e]        # 0x14002b3f0
   14000ecb2:	lea    rdx,[rbx+0x8]
   14000ecb6:	lea    rcx,[rsp+0x60]
   14000ecbb:	call   QWORD PTR [rip+0x1cbdf]        # 0x14002b8a0
   14000ecc1:	mov    r11,QWORD PTR [rsp+0x60]
   14000ecc6:	cmp    DWORD PTR [r11+0x4],0x0
   14000eccb:	jne    0x14000ece8
   14000eccd:	lea    rdx,[rip+0x1e6e5]        # 0x14002d3b9
   14000ecd4:	lea    rcx,[rsp+0xb8]
   14000ecdc:	or     r8d,0xffffffff
   14000ece0:	call   QWORD PTR [rip+0x1c712]        # 0x14002b3f8
   14000ece6:	jmp    0x14000ecfb
   14000ece8:	lea    rdx,[rsp+0xb8]
   14000ecf0:	lea    rcx,[rsp+0x60]
   14000ecf5:	call   QWORD PTR [rip+0x1c6f5]        # 0x14002b3f0
   14000ecfb:	lea    rdx,[rsp+0xb8]
   14000ed03:	lea    rcx,[rsp+0x68]
   14000ed08:	mov    QWORD PTR [rsp+0xb0],rbp
   14000ed10:	call   QWORD PTR [rip+0x1c6ca]        # 0x14002b3e0
   14000ed16:	lea    rdx,[rsp+0x50]
   14000ed1b:	lea    rcx,[rsp+0x70]
   14000ed20:	call   QWORD PTR [rip+0x1c6ba]        # 0x14002b3e0
   14000ed26:	lea    rdx,[rsp+0x48]
   14000ed2b:	lea    rcx,[rsp+0x78]
   14000ed30:	call   QWORD PTR [rip+0x1c6aa]        # 0x14002b3e0
   14000ed36:	lea    rcx,[rsp+0x80]
   14000ed3e:	mov    rdx,rsi
   14000ed41:	call   0x140001700
   14000ed46:	lea    rcx,[rsp+0xb8]
   14000ed4e:	call   QWORD PTR [rip+0x1c474]        # 0x14002b1c8
   14000ed54:	lea    rcx,[rsp+0x60]
   14000ed59:	call   QWORD PTR [rip+0x1cb39]        # 0x14002b898
   14000ed5f:	lea    rcx,[rsp+0x50]
   14000ed64:	call   QWORD PTR [rip+0x1c45e]        # 0x14002b1c8
   14000ed6a:	lea    rcx,[rsp+0x58]
   14000ed6f:	call   QWORD PTR [rip+0x1cb23]        # 0x14002b898
   14000ed75:	lea    rcx,[rsp+0x48]
   14000ed7a:	call   QWORD PTR [rip+0x1c448]        # 0x14002b1c8
   14000ed80:	lea    rcx,[rsp+0x20]
   14000ed85:	call   QWORD PTR [rip+0x1cb0d]        # 0x14002b898
   14000ed8b:	test   dil,dil
   14000ed8e:	jne    0x14000eee8
   14000ed94:	lea    rdx,[rip+0x1e61e]        # 0x14002d3b9
   14000ed9b:	lea    rcx,[rsp+0xb8]
   14000eda3:	or     r8d,0xffffffff
   14000eda7:	call   QWORD PTR [rip+0x1c64b]        # 0x14002b3f8
   14000edad:	lea    rdx,[rsp+0x68]
   14000edb2:	lea    rcx,[rsp+0x28]
   14000edb7:	mov    rbx,rax
   14000edba:	call   QWORD PTR [rip+0x1c620]        # 0x14002b3e0
   14000edc0:	lea    rdx,[rsp+0x70]
   14000edc5:	lea    rcx,[rsp+0x30]
   14000edca:	call   QWORD PTR [rip+0x1c610]        # 0x14002b3e0
   14000edd0:	lea    rcx,[rsp+0x38]
   14000edd5:	mov    rdx,rbx
   14000edd8:	call   QWORD PTR [rip+0x1c602]        # 0x14002b3e0
   14000edde:	lea    rdx,[rsp+0x80]
   14000ede6:	lea    rcx,[rsp+0x40]
   14000edeb:	call   0x140001700
   14000edf0:	lea    rcx,[rsp+0xb8]
   14000edf8:	call   QWORD PTR [rip+0x1c3ca]        # 0x14002b1c8
   14000edfe:	mov    rax,QWORD PTR [r12+0x18]
   14000ee03:	mov    rcx,QWORD PTR [rax+0x10]
   14000ee07:	test   rcx,rcx
   14000ee0a:	je     0x14000ef5a
   14000ee10:	lea    rdx,[rsp+0x28]
   14000ee15:	call   0x14000c1b0
   14000ee1a:	test   rax,rax
   14000ee1d:	je     0x14000ef5a
   14000ee23:	lea    rsi,[rax+0x18]
   14000ee27:	mov    rax,QWORD PTR [rsp+0x28]
   14000ee2c:	movsxd rcx,DWORD PTR [rax+0x4]
   14000ee30:	mov    rax,QWORD PTR [rsi]
   14000ee33:	cmp    ecx,DWORD PTR [rax+0x4]
   14000ee36:	jne    0x14000eea2
   14000ee38:	mov    rdi,rcx
   14000ee3b:	mov    rcx,rsi
   14000ee3e:	call   QWORD PTR [rip+0x1c38c]        # 0x14002b1d0
   14000ee44:	lea    rcx,[rsp+0x28]
   14000ee49:	mov    rbx,rax
   14000ee4c:	call   QWORD PTR [rip+0x1c37e]        # 0x14002b1d0
   14000ee52:	mov    r8,rdi
   14000ee55:	mov    rcx,rax
   14000ee58:	mov    rdx,rbx
   14000ee5b:	call   0x140029600
   14000ee60:	test   eax,eax
   14000ee62:	jne    0x14000eea2
   14000ee64:	lea    rdx,[rsi+0x8]
   14000ee68:	lea    rcx,[rsp+0x30]
   14000ee6d:	call   0x14000be30
   14000ee72:	test   al,al
   14000ee74:	je     0x14000ee8c
   14000ee76:	lea    rdx,[rsi+0x8]
   14000ee7a:	lea    rcx,[rsp+0x30]
   14000ee7f:	call   QWORD PTR [rip+0x1c54b]        # 0x14002b3d0
   14000ee85:	test   eax,eax
   14000ee87:	sets   al
   14000ee8a:	jmp    0x14000eeb5
   14000ee8c:	lea    rdx,[rsi+0x10]
   14000ee90:	lea    rcx,[rsp+0x38]
   14000ee95:	call   QWORD PTR [rip+0x1c535]        # 0x14002b3d0
   14000ee9b:	test   eax,eax
   14000ee9d:	sets   al
   14000eea0:	jmp    0x14000eeb5
   14000eea2:	lea    rcx,[rsp+0x28]
   14000eea7:	mov    rdx,rsi
   14000eeaa:	call   QWORD PTR [rip+0x1c520]        # 0x14002b3d0
   14000eeb0:	test   eax,eax
   14000eeb2:	sets   al
   14000eeb5:	test   al,al
   14000eeb7:	jne    0x14000ef5a
   14000eebd:	lea    rcx,[rsp+0x40]
   14000eec2:	call   0x1400017b0
   14000eec7:	lea    rcx,[rsp+0x38]
   14000eecc:	call   QWORD PTR [rip+0x1c2f6]        # 0x14002b1c8
   14000eed2:	lea    rcx,[rsp+0x30]
   14000eed7:	call   QWORD PTR [rip+0x1c2eb]        # 0x14002b1c8
   14000eedd:	lea    rcx,[rsp+0x28]
   14000eee2:	call   QWORD PTR [rip+0x1c2e0]        # 0x14002b1c8
   14000eee8:	lea    rcx,[r12+0x18]
   14000eeed:	lea    r9,[rsp+0xb8]
   14000eef5:	lea    r8,[rsp+0x68]
   14000eefa:	lea    rdx,[rsp+0x20]
   14000eeff:	mov    QWORD PTR [rsp+0xb8],0x0
   14000ef0b:	call   0x14000d920
   14000ef10:	lea    rcx,[rsp+0x80]
   14000ef18:	call   0x1400017b0
   14000ef1d:	lea    rcx,[rsp+0x78]
   14000ef22:	call   QWORD PTR [rip+0x1c2a0]        # 0x14002b1c8
   14000ef28:	lea    rcx,[rsp+0x70]
   14000ef2d:	call   QWORD PTR [rip+0x1c295]        # 0x14002b1c8
   14000ef33:	lea    rcx,[rsp+0x68]
   14000ef38:	call   QWORD PTR [rip+0x1c28a]        # 0x14002b1c8
   14000ef3e:	mov    rbp,QWORD PTR [rsp+0xb0]
   14000ef46:	mov    rbx,QWORD PTR [rsp+0xc0]
   14000ef4e:	add    rsp,0x90
   14000ef55:	pop    r12
   14000ef57:	pop    rdi
   14000ef58:	pop    rsi
   14000ef59:	ret    
   14000ef5a:	lea    r9,[rsp+0xb8]
   14000ef62:	lea    r8,[rsp+0x28]
   14000ef67:	lea    rdx,[rsp+0x20]
   14000ef6c:	lea    rcx,[r12+0x18]
   14000ef71:	mov    QWORD PTR [rsp+0xb8],0x0
   14000ef7d:	call   0x14000d920
   14000ef82:	lea    rcx,[rsp+0x40]
   14000ef87:	call   0x1400017b0
   14000ef8c:	lea    rcx,[rsp+0x38]
   14000ef91:	call   QWORD PTR [rip+0x1c231]        # 0x14002b1c8
   14000ef97:	lea    rcx,[rsp+0x30]
   14000ef9c:	call   QWORD PTR [rip+0x1c226]        # 0x14002b1c8
   14000efa2:	lea    rcx,[rsp+0x28]
   14000efa7:	call   QWORD PTR [rip+0x1c21b]        # 0x14002b1c8
   14000efad:	jmp    0x14000ef10
   14000efb2:	int3   
   14000efb3:	int3   
   14000efb4:	int3   
   14000efb5:	int3   
   14000efb6:	int3   
   14000efb7:	int3   
   14000efb8:	int3   
   14000efb9:	int3   
   14000efba:	int3   
   14000efbb:	int3   
   14000efbc:	int3   
   14000efbd:	int3   
   14000efbe:	int3   
   14000efbf:	int3   
   14000efc0:	mov    QWORD PTR [rsp+0x10],rbx
   14000efc5:	mov    QWORD PTR [rsp+0x18],rsi
   14000efca:	push   rdi
   14000efcb:	sub    rsp,0x50
   14000efcf:	mov    rbx,rdx
   14000efd2:	mov    rsi,rcx
   14000efd5:	mov    rdi,r8
   14000efd8:	lea    rdx,[rip+0x1e3da]        # 0x14002d3b9
   14000efdf:	lea    rcx,[rsp+0x28]
   14000efe4:	or     r8d,0xffffffff
   14000efe8:	call   QWORD PTR [rip+0x1c40a]        # 0x14002b3f8
   14000efee:	lea    rdx,[rip+0x1e3c4]        # 0x14002d3b9
   14000eff5:	lea    rcx,[rsp+0x20]
   14000effa:	or     r8d,0xffffffff
   14000effe:	call   QWORD PTR [rip+0x1c3f4]        # 0x14002b3f8
   14000f004:	lea    rcx,[rsp+0x78]
   14000f009:	mov    rdx,rbx
   14000f00c:	call   QWORD PTR [rip+0x1c88e]        # 0x14002b8a0
   14000f012:	mov    r11,QWORD PTR [rsp+0x78]
   14000f017:	cmp    DWORD PTR [r11+0x4],0x0
   14000f01c:	jne    0x14000f036
   14000f01e:	lea    rdx,[rip+0x1e394]        # 0x14002d3b9
   14000f025:	lea    rcx,[rsp+0x60]
   14000f02a:	or     r8d,0xffffffff
   14000f02e:	call   QWORD PTR [rip+0x1c3c4]        # 0x14002b3f8
   14000f034:	jmp    0x14000f046
   14000f036:	lea    rdx,[rsp+0x60]
   14000f03b:	lea    rcx,[rsp+0x78]
   14000f040:	call   QWORD PTR [rip+0x1c3aa]        # 0x14002b3f0
   14000f046:	lea    rdx,[rsp+0x20]
   14000f04b:	lea    rcx,[rsp+0x30]
   14000f050:	call   QWORD PTR [rip+0x1c38a]        # 0x14002b3e0
   14000f056:	lea    rdx,[rsp+0x60]
   14000f05b:	lea    rcx,[rsp+0x38]
   14000f060:	call   QWORD PTR [rip+0x1c37a]        # 0x14002b3e0
   14000f066:	lea    rdx,[rsp+0x28]
   14000f06b:	lea    rcx,[rsp+0x40]
   14000f070:	call   QWORD PTR [rip+0x1c36a]        # 0x14002b3e0
   14000f076:	lea    rcx,[rsp+0x48]
   14000f07b:	mov    rdx,rdi
   14000f07e:	call   0x140001700
   14000f083:	lea    rcx,[rsp+0x60]
   14000f088:	call   QWORD PTR [rip+0x1c13a]        # 0x14002b1c8
   14000f08e:	lea    rcx,[rsp+0x78]
   14000f093:	call   QWORD PTR [rip+0x1c7ff]        # 0x14002b898
   14000f099:	lea    rcx,[rsp+0x20]
   14000f09e:	call   QWORD PTR [rip+0x1c124]        # 0x14002b1c8
   14000f0a4:	lea    rcx,[rsp+0x28]
   14000f0a9:	call   QWORD PTR [rip+0x1c119]        # 0x14002b1c8
   14000f0af:	lea    rcx,[rsi+0x18]
   14000f0b3:	lea    r9,[rsp+0x60]
   14000f0b8:	lea    r8,[rsp+0x30]
   14000f0bd:	lea    rdx,[rsp+0x78]
   14000f0c2:	mov    QWORD PTR [rsp+0x60],0x0
   14000f0cb:	call   0x14000d920
   14000f0d0:	lea    rcx,[rsp+0x48]
   14000f0d5:	call   0x1400017b0
   14000f0da:	lea    rcx,[rsp+0x40]
   14000f0df:	call   QWORD PTR [rip+0x1c0e3]        # 0x14002b1c8
   14000f0e5:	lea    rcx,[rsp+0x38]
   14000f0ea:	call   QWORD PTR [rip+0x1c0d8]        # 0x14002b1c8
   14000f0f0:	lea    rcx,[rsp+0x30]
   14000f0f5:	call   QWORD PTR [rip+0x1c0cd]        # 0x14002b1c8
   14000f0fb:	mov    rbx,QWORD PTR [rsp+0x68]
   14000f100:	mov    rsi,QWORD PTR [rsp+0x70]
   14000f105:	add    rsp,0x50
   14000f109:	pop    rdi
   14000f10a:	ret    
   14000f10b:	int3   
   14000f10c:	int3   
   14000f10d:	int3   
   14000f10e:	int3   
   14000f10f:	int3   
   14000f110:	mov    QWORD PTR [rsp+0x8],rbx
   14000f115:	mov    QWORD PTR [rsp+0x10],rdx
   14000f11a:	push   rbp
   14000f11b:	push   rsi
   14000f11c:	push   rdi
   14000f11d:	push   r12
   14000f11f:	push   r13
   14000f121:	push   r14
   14000f123:	push   r15
   14000f125:	sub    rsp,0x90
   14000f12c:	lea    rdx,[rsp+0xe0]
   14000f134:	xor    ebx,ebx
   14000f136:	mov    DWORD PTR [rsp+0xe0],ebx
   14000f13d:	call   0x140008940
   14000f142:	mov    rdx,QWORD PTR [rax]
   14000f145:	mov    rdi,rax
   14000f148:	mov    QWORD PTR [rsp+0x20],rdx
   14000f14d:	mov    ecx,DWORD PTR [rdx]
   14000f14f:	test   ecx,ecx
   14000f151:	je     0x14000f15e
   14000f153:	cmp    ecx,0xffffffff
   14000f156:	je     0x14000f1c8
   14000f158:	lock add DWORD PTR [rdx],0x1
   14000f15c:	jmp    0x14000f1c3
   14000f15e:	mov    edx,DWORD PTR [rdx+0x4]
   14000f161:	lea    rcx,[rsp+0x20]
   14000f166:	call   QWORD PTR [rip+0x1c6ec]        # 0x14002b858
   14000f16c:	mov    rdx,QWORD PTR [rsp+0x20]
   14000f171:	mov    rcx,QWORD PTR [rdi]
   14000f174:	movsxd rax,DWORD PTR [rdx+0xc]
   14000f178:	lea    rbp,[rdx+rax*8+0x10]
   14000f17d:	movsxd rax,DWORD PTR [rcx+0x8]
   14000f181:	lea    rsi,[rcx+rax*8+0x10]
   14000f186:	movsxd rax,DWORD PTR [rdx+0x8]
   14000f18a:	lea    rdi,[rdx+rax*8+0x10]
   14000f18f:	cmp    rdi,rbp
   14000f192:	je     0x14000f1c8
   14000f194:	mov    ecx,0x78
   14000f199:	call   0x14002952a
   14000f19e:	test   rax,rax
   14000f1a1:	je     0x14000f1b0
   14000f1a3:	mov    rdx,QWORD PTR [rsi]
   14000f1a6:	mov    rcx,rax
   14000f1a9:	call   0x1400020d0
   14000f1ae:	jmp    0x14000f1b3
   14000f1b0:	mov    rax,rbx
   14000f1b3:	mov    QWORD PTR [rdi],rax
   14000f1b6:	add    rdi,0x8
   14000f1ba:	add    rsi,0x8
   14000f1be:	cmp    rdi,rbp
   14000f1c1:	jne    0x14000f194
   14000f1c3:	mov    rdx,QWORD PTR [rsp+0x20]
   14000f1c8:	mov    rbp,QWORD PTR [rsp+0xe0]
   14000f1d0:	mov    DWORD PTR [rsp+0x28],ebx
   14000f1d4:	movsxd rax,DWORD PTR [rdx+0x8]
   14000f1d8:	lea    rcx,[rdx+rax*8+0x10]
   14000f1dd:	mov    QWORD PTR [rsp+0x30],rcx
   14000f1e2:	movsxd rax,DWORD PTR [rdx+0xc]
   14000f1e6:	lea    rcx,[rdx+rax*8+0x10]
   14000f1eb:	mov    QWORD PTR [rsp+0x38],rcx
   14000f1f0:	mov    eax,DWORD PTR [rbp+0x0]
   14000f1f3:	test   eax,eax
   14000f1f5:	je     0x14000f210
   14000f1f7:	cmp    eax,0xffffffff
   14000f1fa:	je     0x14000f260
   14000f1fc:	lock add DWORD PTR [rbp+0x0],0xffffffff
   14000f201:	setne  al
   14000f204:	test   al,al
   14000f206:	jne    0x14000f260
   14000f208:	mov    rbp,QWORD PTR [rsp+0xe0]
   14000f210:	movsxd rax,DWORD PTR [rbp+0xc]
   14000f214:	lea    rdi,[rbp+rax*8+0x10]
   14000f219:	movsxd rax,DWORD PTR [rbp+0x8]
   14000f21d:	lea    r12,[rbp+rax*8+0x10]
   14000f222:	cmp    r12,rdi
   14000f225:	je     0x14000f252
   14000f227:	nop    WORD PTR [rax+rax*1+0x0]
   14000f230:	mov    rsi,QWORD PTR [rdi-0x8]
   14000f234:	sub    rdi,0x8
   14000f238:	test   rsi,rsi
   14000f23b:	je     0x14000f24d
   14000f23d:	mov    rcx,rsi
   14000f240:	call   0x140001ea0
   14000f245:	mov    rcx,rsi
   14000f248:	call   0x140029524
   14000f24d:	cmp    rdi,r12
   14000f250:	jne    0x14000f230
   14000f252:	mov    rcx,rbp
   14000f255:	call   QWORD PTR [rip+0x1c615]        # 0x14002b870
   14000f25b:	nop    DWORD PTR [rax+rax*1+0x0]
   14000f260:	mov    eax,DWORD PTR [rsp+0x28]
   14000f264:	inc    DWORD PTR [rsp+0x28]
   14000f268:	test   eax,eax
   14000f26a:	jne    0x14000f27d
   14000f26c:	mov    rax,QWORD PTR [rsp+0x38]
   14000f271:	cmp    QWORD PTR [rsp+0x30],rax
   14000f276:	je     0x14000f27d
   14000f278:	mov    r13b,0x1
   14000f27b:	jmp    0x14000f280
   14000f27d:	xor    r13b,r13b
   14000f280:	test   bl,0x2
   14000f283:	je     0x14000f2ec
   14000f285:	mov    rbp,QWORD PTR [rsp+0x60]
   14000f28a:	and    ebx,0xfffffffd
   14000f28d:	mov    eax,DWORD PTR [rbp+0x0]
   14000f290:	test   eax,eax
   14000f292:	je     0x14000f2aa
   14000f294:	cmp    eax,0xffffffff
   14000f297:	je     0x14000f2ec
   14000f299:	lock add DWORD PTR [rbp+0x0],0xffffffff
   14000f29e:	setne  al
   14000f2a1:	test   al,al
   14000f2a3:	jne    0x14000f2ec
   14000f2a5:	mov    rbp,QWORD PTR [rsp+0x60]
   14000f2aa:	movsxd rax,DWORD PTR [rbp+0xc]
   14000f2ae:	lea    rdi,[rbp+rax*8+0x10]
   14000f2b3:	movsxd rax,DWORD PTR [rbp+0x8]
   14000f2b7:	lea    r12,[rbp+rax*8+0x10]
   14000f2bc:	cmp    r12,rdi
   14000f2bf:	je     0x14000f2e3
   14000f2c1:	mov    rsi,QWORD PTR [rdi-0x8]
   14000f2c5:	sub    rdi,0x8
   14000f2c9:	test   rsi,rsi
   14000f2cc:	je     0x14000f2de
   14000f2ce:	mov    rcx,rsi
   14000f2d1:	call   0x140001ea0
   14000f2d6:	mov    rcx,rsi
   14000f2d9:	call   0x140029524
   14000f2de:	cmp    rdi,r12
   14000f2e1:	jne    0x14000f2c1
   14000f2e3:	mov    rcx,rbp
   14000f2e6:	call   QWORD PTR [rip+0x1c584]        # 0x14002b870
   14000f2ec:	test   r13b,r13b
   14000f2ef:	je     0x14000f67f
   14000f2f5:	mov    rax,QWORD PTR [rsp+0x30]
   14000f2fa:	mov    r14,QWORD PTR [rax]
   14000f2fd:	test   bl,0x4
   14000f300:	je     0x14000f380
   14000f302:	mov    rbp,QWORD PTR [rsp+0x80]
   14000f30a:	and    ebx,0xfffffffb
   14000f30d:	mov    eax,DWORD PTR [rbp+0x0]
   14000f310:	test   eax,eax
   14000f312:	je     0x14000f32d
   14000f314:	cmp    eax,0xffffffff
   14000f317:	je     0x14000f380
   14000f319:	lock add DWORD PTR [rbp+0x0],0xffffffff
   14000f31e:	setne  al
   14000f321:	test   al,al
   14000f323:	jne    0x14000f380
   14000f325:	mov    rbp,QWORD PTR [rsp+0x80]
   14000f32d:	movsxd rax,DWORD PTR [rbp+0xc]
   14000f331:	lea    rdi,[rbp+rax*8+0x10]
   14000f336:	movsxd rax,DWORD PTR [rbp+0x8]
   14000f33a:	lea    r12,[rbp+rax*8+0x10]
   14000f33f:	cmp    r12,rdi
   14000f342:	je     0x14000f372
   14000f344:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000f350:	mov    rsi,QWORD PTR [rdi-0x8]
   14000f354:	sub    rdi,0x8
   14000f358:	test   rsi,rsi
   14000f35b:	je     0x14000f36d
   14000f35d:	mov    rcx,rsi
   14000f360:	call   0x140001ea0
   14000f365:	mov    rcx,rsi
   14000f368:	call   0x140029524
   14000f36d:	cmp    rdi,r12
   14000f370:	jne    0x14000f350
   14000f372:	mov    rcx,rbp
   14000f375:	call   QWORD PTR [rip+0x1c4f5]        # 0x14002b870
   14000f37b:	nop    DWORD PTR [rax+rax*1+0x0]
   14000f380:	mov    r13d,DWORD PTR [rsp+0x28]
   14000f385:	test   bl,0x10
   14000f388:	je     0x14000f3fb
   14000f38a:	mov    rbp,QWORD PTR [rsp+0x78]
   14000f38f:	and    ebx,0xffffffef
   14000f392:	mov    eax,DWORD PTR [rbp+0x0]
   14000f395:	test   eax,eax
   14000f397:	je     0x14000f3aa
   14000f399:	cmp    eax,0xffffffff
   14000f39c:	je     0x14000f3fb
   14000f39e:	lock add DWORD PTR [rbp+0x0],0xffffffff
   14000f3a3:	setne  al
   14000f3a6:	test   al,al
   14000f3a8:	jne    0x14000f3fb
   14000f3aa:	mov    rbp,QWORD PTR [rsp+0x78]
   14000f3af:	movsxd rax,DWORD PTR [rbp+0xc]
   14000f3b3:	lea    rdi,[rbp+rax*8+0x10]
   14000f3b8:	movsxd rax,DWORD PTR [rbp+0x8]
   14000f3bc:	lea    r12,[rbp+rax*8+0x10]
   14000f3c1:	cmp    r12,rdi
   14000f3c4:	je     0x14000f3f2
   14000f3c6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000f3d0:	mov    rsi,QWORD PTR [rdi-0x8]
   14000f3d4:	sub    rdi,0x8
   14000f3d8:	test   rsi,rsi
   14000f3db:	je     0x14000f3ed
   14000f3dd:	mov    rcx,rsi
   14000f3e0:	call   0x140001ea0
   14000f3e5:	mov    rcx,rsi
   14000f3e8:	call   0x140029524
   14000f3ed:	cmp    rdi,r12
   14000f3f0:	jne    0x14000f3d0
   14000f3f2:	mov    rcx,rbp
   14000f3f5:	call   QWORD PTR [rip+0x1c475]        # 0x14002b870
   14000f3fb:	test   r13d,r13d
   14000f3fe:	je     0x14000f597
   14000f404:	mov    rdi,QWORD PTR [rsp+0xd8]
   14000f40c:	lea    rcx,[rsp+0x48]
   14000f411:	or     ebx,0x60
   14000f414:	lea    rdx,[rdi+0x10]
   14000f418:	call   QWORD PTR [rip+0x1c482]        # 0x14002b8a0
   14000f41e:	lea    rdx,[r14+0x10]
   14000f422:	lea    rcx,[rsp+0x40]
   14000f427:	call   QWORD PTR [rip+0x1c473]        # 0x14002b8a0
   14000f42d:	lea    rdx,[rsp+0x48]
   14000f432:	lea    rcx,[rsp+0x40]
   14000f437:	call   QWORD PTR [rip+0x1be5b]        # 0x14002b298
   14000f43d:	test   al,al
   14000f43f:	je     0x14000f4a5
   14000f441:	bts    ebx,0x7
   14000f445:	lea    rdx,[rdi+0x8]
   14000f449:	lea    rcx,[rsp+0x50]
   14000f44e:	bts    ebx,0x8
   14000f452:	call   QWORD PTR [rip+0x1c448]        # 0x14002b8a0
   14000f458:	lea    rdx,[r14+0x8]
   14000f45c:	lea    rcx,[rsp+0x58]
   14000f461:	call   QWORD PTR [rip+0x1c439]        # 0x14002b8a0
   14000f467:	lea    rdx,[rsp+0x50]
   14000f46c:	lea    rcx,[rsp+0x58]
   14000f471:	call   QWORD PTR [rip+0x1be21]        # 0x14002b298
   14000f477:	test   al,al
   14000f479:	je     0x14000f4a5
   14000f47b:	lea    rdx,[r14+0x20]
   14000f47f:	lea    rcx,[rsp+0xe8]
   14000f487:	bts    ebx,0x9
   14000f48b:	call   QWORD PTR [rip+0x1c40f]        # 0x14002b8a0
   14000f491:	mov    r11,QWORD PTR [rsp+0xe8]
   14000f499:	cmp    DWORD PTR [r11+0x4],0x0
   14000f49e:	jne    0x14000f4a5
   14000f4a0:	mov    dil,0x1
   14000f4a3:	jmp    0x14000f4a8
   14000f4a5:	xor    dil,dil
   14000f4a8:	bt     ebx,0x9
   14000f4ac:	jae    0x14000f4c0
   14000f4ae:	lea    rcx,[rsp+0xe8]
   14000f4b6:	btr    ebx,0x9
   14000f4ba:	call   QWORD PTR [rip+0x1c3d8]        # 0x14002b898
   14000f4c0:	bt     ebx,0x8
   14000f4c4:	jae    0x14000f4d5
   14000f4c6:	lea    rcx,[rsp+0x58]
   14000f4cb:	btr    ebx,0x8
   14000f4cf:	call   QWORD PTR [rip+0x1c3c3]        # 0x14002b898
   14000f4d5:	test   bl,bl
   14000f4d7:	jns    0x14000f4e8
   14000f4d9:	lea    rcx,[rsp+0x50]
   14000f4de:	btr    ebx,0x7
   14000f4e2:	call   QWORD PTR [rip+0x1c3b0]        # 0x14002b898
   14000f4e8:	test   bl,0x40
   14000f4eb:	je     0x14000f4fb
   14000f4ed:	lea    rcx,[rsp+0x40]
   14000f4f2:	and    ebx,0xffffffbf
   14000f4f5:	call   QWORD PTR [rip+0x1c39d]        # 0x14002b898
   14000f4fb:	test   bl,0x20
   14000f4fe:	je     0x14000f50e
   14000f500:	lea    rcx,[rsp+0x48]
   14000f505:	and    ebx,0xffffffdf
   14000f508:	call   QWORD PTR [rip+0x1c38a]        # 0x14002b898
   14000f50e:	test   dil,dil
   14000f511:	jne    0x14000f617
   14000f517:	dec    DWORD PTR [rsp+0x28]
   14000f51b:	test   bl,0x8
   14000f51e:	je     0x14000f380
   14000f524:	mov    rbp,QWORD PTR [rsp+0x68]
   14000f529:	and    ebx,0xfffffff7
   14000f52c:	mov    eax,DWORD PTR [rbp+0x0]
   14000f52f:	test   eax,eax
   14000f531:	je     0x14000f54c
   14000f533:	cmp    eax,0xffffffff
   14000f536:	je     0x14000f380
   14000f53c:	lock add DWORD PTR [rbp+0x0],0xffffffff
   14000f541:	setne  al
   14000f544:	test   al,al
   14000f546:	jne    0x14000f380
   14000f54c:	mov    rbp,QWORD PTR [rsp+0x68]
   14000f551:	movsxd rax,DWORD PTR [rbp+0xc]
   14000f555:	lea    rdi,[rbp+rax*8+0x10]
   14000f55a:	movsxd rax,DWORD PTR [rbp+0x8]
   14000f55e:	lea    r12,[rbp+rax*8+0x10]
   14000f563:	cmp    r12,rdi
   14000f566:	je     0x14000f372
   14000f56c:	nop    DWORD PTR [rax+0x0]
   14000f570:	mov    rsi,QWORD PTR [rdi-0x8]
   14000f574:	sub    rdi,0x8
   14000f578:	test   rsi,rsi
   14000f57b:	je     0x14000f58d
   14000f57d:	mov    rcx,rsi
   14000f580:	call   0x140001ea0
   14000f585:	mov    rcx,rsi
   14000f588:	call   0x140029524
   14000f58d:	cmp    rdi,r12
   14000f590:	jne    0x14000f570
   14000f592:	jmp    0x14000f372
   14000f597:	add    QWORD PTR [rsp+0x30],0x8
   14000f59d:	test   bl,0x1
   14000f5a0:	je     0x14000f260
   14000f5a6:	mov    rbp,QWORD PTR [rsp+0x70]
   14000f5ab:	and    ebx,0xfffffffe
   14000f5ae:	mov    eax,DWORD PTR [rbp+0x0]
   14000f5b1:	test   eax,eax
   14000f5b3:	je     0x14000f5d3
   14000f5b5:	cmp    eax,0xffffffff
   14000f5b8:	je     0x14000f260
   14000f5be:	lock add DWORD PTR [rbp+0x0],0xffffffff
   14000f5c3:	setne  al
   14000f5c6:	test   al,al
   14000f5c8:	jne    0x14000f260
   14000f5ce:	mov    rbp,QWORD PTR [rsp+0x70]
   14000f5d3:	movsxd rax,DWORD PTR [rbp+0xc]
   14000f5d7:	lea    rdi,[rbp+rax*8+0x10]
   14000f5dc:	movsxd rax,DWORD PTR [rbp+0x8]
   14000f5e0:	lea    r12,[rbp+rax*8+0x10]
   14000f5e5:	cmp    r12,rdi
   14000f5e8:	je     0x14000f252
   14000f5ee:	xchg   ax,ax
   14000f5f0:	mov    rsi,QWORD PTR [rdi-0x8]
   14000f5f4:	sub    rdi,0x8
   14000f5f8:	test   rsi,rsi
   14000f5fb:	je     0x14000f60d
   14000f5fd:	mov    rcx,rsi
   14000f600:	call   0x140001ea0
   14000f605:	mov    rcx,rsi
   14000f608:	call   0x140029524
   14000f60d:	cmp    rdi,r12
   14000f610:	jne    0x14000f5f0
   14000f612:	jmp    0x14000f252
   14000f617:	mov    rsi,QWORD PTR [rsp+0x20]
   14000f61c:	mov    eax,DWORD PTR [rsi]
   14000f61e:	test   eax,eax
   14000f620:	je     0x14000f637
   14000f622:	cmp    eax,0xffffffff
   14000f625:	je     0x14000f67b
   14000f627:	lock add DWORD PTR [rsi],0xffffffff
   14000f62b:	setne  al
   14000f62e:	test   al,al
   14000f630:	jne    0x14000f67b
   14000f632:	mov    rsi,QWORD PTR [rsp+0x20]
   14000f637:	movsxd rax,DWORD PTR [rsi+0xc]
   14000f63b:	lea    rbx,[rsi+rax*8+0x10]
   14000f640:	movsxd rax,DWORD PTR [rsi+0x8]
   14000f644:	lea    rbp,[rsi+rax*8+0x10]
   14000f649:	cmp    rbp,rbx
   14000f64c:	je     0x14000f672
   14000f64e:	xchg   ax,ax
   14000f650:	mov    rdi,QWORD PTR [rbx-0x8]
   14000f654:	sub    rbx,0x8
   14000f658:	test   rdi,rdi
   14000f65b:	je     0x14000f66d
   14000f65d:	mov    rcx,rdi
   14000f660:	call   0x140001ea0
   14000f665:	mov    rcx,rdi
   14000f668:	call   0x140029524
   14000f66d:	cmp    rbx,rbp
   14000f670:	jne    0x14000f650
   14000f672:	mov    rcx,rsi
   14000f675:	call   QWORD PTR [rip+0x1c1f5]        # 0x14002b870
   14000f67b:	mov    al,0x1
   14000f67d:	jmp    0x14000f6ed
   14000f67f:	mov    rsi,QWORD PTR [rsp+0x20]
   14000f684:	mov    eax,DWORD PTR [rsi]
   14000f686:	test   eax,eax
   14000f688:	je     0x14000f69f
   14000f68a:	cmp    eax,0xffffffff
   14000f68d:	je     0x14000f6eb
   14000f68f:	lock add DWORD PTR [rsi],0xffffffff
   14000f693:	setne  al
   14000f696:	test   al,al
   14000f698:	jne    0x14000f6eb
   14000f69a:	mov    rsi,QWORD PTR [rsp+0x20]
   14000f69f:	movsxd rax,DWORD PTR [rsi+0xc]
   14000f6a3:	lea    rbx,[rsi+rax*8+0x10]
   14000f6a8:	movsxd rax,DWORD PTR [rsi+0x8]
   14000f6ac:	lea    rbp,[rsi+rax*8+0x10]
   14000f6b1:	cmp    rbp,rbx
   14000f6b4:	je     0x14000f6e2
   14000f6b6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000f6c0:	mov    rdi,QWORD PTR [rbx-0x8]
   14000f6c4:	sub    rbx,0x8
   14000f6c8:	test   rdi,rdi
   14000f6cb:	je     0x14000f6dd
   14000f6cd:	mov    rcx,rdi
   14000f6d0:	call   0x140001ea0
   14000f6d5:	mov    rcx,rdi
   14000f6d8:	call   0x140029524
   14000f6dd:	cmp    rbx,rbp
   14000f6e0:	jne    0x14000f6c0
   14000f6e2:	mov    rcx,rsi
   14000f6e5:	call   QWORD PTR [rip+0x1c185]        # 0x14002b870
   14000f6eb:	xor    al,al
   14000f6ed:	mov    rbx,QWORD PTR [rsp+0xd0]
   14000f6f5:	add    rsp,0x90
   14000f6fc:	pop    r15
   14000f6fe:	pop    r14
   14000f700:	pop    r13
   14000f702:	pop    r12
   14000f704:	pop    rdi
   14000f705:	pop    rsi
   14000f706:	pop    rbp
   14000f707:	ret    
   14000f708:	int3   
   14000f709:	int3   
   14000f70a:	int3   
   14000f70b:	int3   
   14000f70c:	int3   
   14000f70d:	int3   
   14000f70e:	int3   
   14000f70f:	int3   
   14000f710:	mov    QWORD PTR [rsp+0x10],rdx
   14000f715:	mov    QWORD PTR [rsp+0x8],rcx
   14000f71a:	push   rbx
   14000f71b:	push   rbp
   14000f71c:	push   rsi
   14000f71d:	push   rdi
   14000f71e:	push   r12
   14000f720:	push   r13
   14000f722:	push   r14
   14000f724:	push   r15
   14000f726:	sub    rsp,0x148
   14000f72d:	mov    rdi,rcx
   14000f730:	xor    esi,esi
   14000f732:	lea    rcx,[rsp+0x88]
   14000f73a:	mov    ebx,esi
   14000f73c:	mov    r13,r8
   14000f73f:	mov    DWORD PTR [rsp+0x1a0],ebx
   14000f746:	call   QWORD PTR [rip+0x1bd8c]        # 0x14002b4d8
   14000f74c:	lea    rcx,[rsp+0x90]
   14000f754:	call   QWORD PTR [rip+0x1bd7e]        # 0x14002b4d8
   14000f75a:	lea    rcx,[rsp+0x98]
   14000f762:	call   QWORD PTR [rip+0x1bd70]        # 0x14002b4d8
   14000f768:	mov    r11,QWORD PTR [rip+0x1bcb9]        # 0x14002b428
   14000f76f:	lea    rcx,[rsp+0xa8]
   14000f777:	mov    QWORD PTR [rsp+0xa0],r11
   14000f77f:	call   QWORD PTR [rip+0x1bd53]        # 0x14002b4d8
   14000f785:	mov    r11,QWORD PTR [rip+0x1c0fc]        # 0x14002b888
   14000f78c:	lea    rcx,[rsp+0xb8]
   14000f794:	mov    QWORD PTR [rsp+0xb0],r11
   14000f79c:	call   QWORD PTR [rip+0x1bd36]        # 0x14002b4d8
   14000f7a2:	lea    rdx,[rdi+0x10]
   14000f7a6:	lea    rcx,[rsp+0xe8]
   14000f7ae:	call   QWORD PTR [rip+0x1c0ec]        # 0x14002b8a0
   14000f7b4:	lea    r8,[rsp+0x70]
   14000f7b9:	lea    rdx,[rsp+0x60]
   14000f7be:	lea    rcx,[rsp+0xe8]
   14000f7c6:	call   0x140004f70
   14000f7cb:	lea    rcx,[rsp+0xe8]
   14000f7d3:	call   QWORD PTR [rip+0x1c0bf]        # 0x14002b898
   14000f7d9:	lea    rcx,[rsp+0x78]
   14000f7de:	call   QWORD PTR [rip+0x1bcf4]        # 0x14002b4d8
   14000f7e4:	mov    edx,DWORD PTR [rsp+0x70]
   14000f7e8:	mov    ecx,DWORD PTR [rsp+0x60]
   14000f7ec:	lea    r8,[rsp+0x78]
   14000f7f1:	xor    r9d,r9d
   14000f7f4:	mov    QWORD PTR [rsp+0x20],rsi
   14000f7f9:	call   0x140004b70
   14000f7fe:	test   al,al
   14000f800:	je     0x14000f815
   14000f802:	lea    rdx,[rsp+0x78]
   14000f807:	lea    rcx,[rsp+0xa8]
   14000f80f:	call   QWORD PTR [rip+0x1ba4b]        # 0x14002b260
   14000f815:	mov    rcx,QWORD PTR [rdi]
   14000f818:	mov    DWORD PTR [rsp+0x4c],esi
   14000f81c:	mov    DWORD PTR [rsp+0x40],esi
   14000f820:	mov    edx,DWORD PTR [rcx+0x8]
   14000f823:	mov    DWORD PTR [rsp+0x50],esi
   14000f827:	mov    r12d,esi
   14000f82a:	mov    DWORD PTR [rsp+0x48],esi
   14000f82e:	mov    DWORD PTR [rsp+0x44],esi
   14000f832:	mov    r14d,esi
   14000f835:	mov    r15,rsi
   14000f838:	cmp    DWORD PTR [rcx+0xc],edx
   14000f83b:	je     0x14000fdd5
   14000f841:	movsxd rax,edx
   14000f844:	add    rax,r15
   14000f847:	mov    rbp,QWORD PTR [rcx+rax*8+0x10]
   14000f84c:	mov    edi,DWORD PTR [rbp+0x70]
   14000f84f:	cmp    edi,0x3
   14000f852:	je     0x14000fc6d
   14000f858:	cmp    edi,0x2
   14000f85b:	je     0x14000fc6d
   14000f861:	cmp    BYTE PTR [r13+0x6c],0x0
   14000f866:	je     0x14000f890
   14000f868:	lea    rcx,[rsp+0xc0]
   14000f870:	mov    rdx,rbp
   14000f873:	or     ebx,0x1
   14000f876:	call   QWORD PTR [rip+0x1c024]        # 0x14002b8a0
   14000f87c:	mov    r11,QWORD PTR [rsp+0xc0]
   14000f884:	cmp    DWORD PTR [r11+0x4],0x0
   14000f889:	jne    0x14000f890
   14000f88b:	mov    sil,0x1
   14000f88e:	jmp    0x14000f893
   14000f890:	xor    sil,sil
   14000f893:	test   bl,0x1
   14000f896:	je     0x14000f8a9
   14000f898:	lea    rcx,[rsp+0xc0]
   14000f8a0:	and    ebx,0xfffffffe
   14000f8a3:	call   QWORD PTR [rip+0x1bfef]        # 0x14002b898
   14000f8a9:	test   sil,sil
   14000f8ac:	je     0x14000f8bb
   14000f8ae:	inc    r12d
   14000f8b1:	mov    DWORD PTR [rsp+0x48],r12d
   14000f8b6:	jmp    0x14000fc6d
   14000f8bb:	test   edi,edi
   14000f8bd:	jne    0x14000f956
   14000f8c3:	mov    rcx,QWORD PTR [rbp+0x50]
   14000f8c7:	or     ebx,0x2
   14000f8ca:	movsxd rdx,DWORD PTR [rcx+0x8]
   14000f8ce:	mov    eax,DWORD PTR [rcx+0xc]
   14000f8d1:	sub    eax,edx
   14000f8d3:	test   eax,eax
   14000f8d5:	jg     0x14000f8e7
   14000f8d7:	lea    rcx,[rsp+0x80]
   14000f8df:	call   QWORD PTR [rip+0x1bfab]        # 0x14002b890
   14000f8e5:	jmp    0x14000f8fa
   14000f8e7:	lea    rdx,[rcx+rdx*8+0x10]
   14000f8ec:	lea    rcx,[rsp+0x80]
   14000f8f4:	call   QWORD PTR [rip+0x1bfa6]        # 0x14002b8a0
   14000f8fa:	mov    rax,QWORD PTR [rsp+0x80]
   14000f902:	cmp    DWORD PTR [rax+0x4],0x0
   14000f906:	jne    0x14000f91e
   14000f908:	cmp    BYTE PTR [r13+0x6c],0x0
   14000f90d:	jne    0x14000f91e
   14000f90f:	mov    rax,QWORD PTR [r13+0x10]
   14000f913:	cmp    DWORD PTR [rax+0x4],0x0
   14000f917:	jne    0x14000f91e
   14000f919:	mov    dil,0x1
   14000f91c:	jmp    0x14000f921
   14000f91e:	xor    dil,dil
   14000f921:	test   bl,0x2
   14000f924:	je     0x14000f937
   14000f926:	lea    rcx,[rsp+0x80]
   14000f92e:	and    ebx,0xfffffffd
   14000f931:	call   QWORD PTR [rip+0x1bf61]        # 0x14002b898
   14000f937:	test   dil,dil
   14000f93a:	je     0x14000f945
   14000f93c:	inc    DWORD PTR [rsp+0x50]
   14000f940:	jmp    0x14000fc6d
   14000f945:	cmp    BYTE PTR [r13+0x69],0x0
   14000f94a:	jne    0x14000fc6d
   14000f950:	inc    DWORD PTR [rsp+0x40]
   14000f954:	jmp    0x14000f95a
   14000f956:	inc    DWORD PTR [rsp+0x4c]
   14000f95a:	mov    rax,QWORD PTR [rbp+0x50]
   14000f95e:	mov    QWORD PTR [rsp+0x30],rax
   14000f963:	mov    ecx,DWORD PTR [rax]
   14000f965:	test   ecx,ecx
   14000f967:	je     0x14000f979
   14000f969:	cmp    ecx,0xffffffff
   14000f96c:	je     0x14000f9d8
   14000f96e:	lock add DWORD PTR [rax],0x1
   14000f972:	mov    rax,QWORD PTR [rsp+0x30]
   14000f977:	jmp    0x14000f9d8
   14000f979:	mov    edx,DWORD PTR [rax+0x4]
   14000f97c:	lea    rcx,[rsp+0x30]
   14000f981:	call   QWORD PTR [rip+0x1bed1]        # 0x14002b858
   14000f987:	mov    r11,QWORD PTR [rbp+0x50]
   14000f98b:	movsxd rax,DWORD PTR [r11+0x8]
   14000f98f:	lea    rsi,[r11+rax*8+0x10]
   14000f994:	mov    rax,QWORD PTR [rsp+0x30]
   14000f999:	movsxd rcx,DWORD PTR [rax+0xc]
   14000f99d:	lea    r12,[rax+rcx*8+0x10]
   14000f9a2:	movsxd rcx,DWORD PTR [rax+0x8]
   14000f9a6:	lea    rdi,[rax+rcx*8+0x10]
   14000f9ab:	cmp    rdi,r12
   14000f9ae:	je     0x14000f9d3
   14000f9b0:	test   rdi,rdi
   14000f9b3:	je     0x14000f9c1
   14000f9b5:	mov    rdx,rsi
   14000f9b8:	mov    rcx,rdi
   14000f9bb:	call   QWORD PTR [rip+0x1bedf]        # 0x14002b8a0
   14000f9c1:	add    rdi,0x8
   14000f9c5:	add    rsi,0x8
   14000f9c9:	cmp    rdi,r12
   14000f9cc:	jne    0x14000f9b0
   14000f9ce:	mov    rax,QWORD PTR [rsp+0x30]
   14000f9d3:	mov    r12d,DWORD PTR [rsp+0x48]
   14000f9d8:	cmp    DWORD PTR [rbp+0x70],0x0
   14000f9dc:	jne    0x14000fac8
   14000f9e2:	cmp    BYTE PTR [r13+0x6c],0x0
   14000f9e7:	jne    0x14000f9f7
   14000f9e9:	mov    rcx,QWORD PTR [r13+0x10]
   14000f9ed:	cmp    DWORD PTR [rcx+0x4],0x0
   14000f9f1:	je     0x14000fac8
   14000f9f7:	mov    edx,DWORD PTR [rax+0x8]
   14000f9fa:	mov    ecx,DWORD PTR [rax+0xc]
   14000f9fd:	xor    edi,edi
   14000f9ff:	sub    ecx,edx
   14000fa01:	xor    esi,esi
   14000fa03:	test   ecx,ecx
   14000fa05:	jle    0x14000fac8
   14000fa0b:	nop    DWORD PTR [rax+rax*1+0x0]
   14000fa10:	movsxd rcx,edx
   14000fa13:	add    rcx,rsi
   14000fa16:	mov    rcx,QWORD PTR [rax+rcx*8+0x10]
   14000fa1b:	cmp    DWORD PTR [rcx+0x4],0x0
   14000fa1f:	jne    0x14000fab3
   14000fa25:	lea    rdx,[rbp+0x10]
   14000fa29:	lea    rcx,[rsp+0xf0]
   14000fa31:	call   QWORD PTR [rip+0x1be69]        # 0x14002b8a0
   14000fa37:	lea    rdx,[r13+0x10]
   14000fa3b:	lea    rcx,[rsp+0x68]
   14000fa40:	call   QWORD PTR [rip+0x1be5a]        # 0x14002b8a0
   14000fa46:	lea    rdx,[rsp+0xf0]
   14000fa4e:	lea    rcx,[rsp+0x68]
   14000fa53:	call   QWORD PTR [rip+0x1b787]        # 0x14002b1e0
   14000fa59:	mov    rax,QWORD PTR [rsp+0x30]
   14000fa5e:	mov    ecx,DWORD PTR [rax]
   14000fa60:	cmp    ecx,0x1
   14000fa63:	je     0x14000fa7b
   14000fa65:	test   ecx,ecx
   14000fa67:	je     0x14000fa7b
   14000fa69:	mov    edx,DWORD PTR [rax+0x4]
   14000fa6c:	lea    rcx,[rsp+0x30]
   14000fa71:	call   0x140001cd0
   14000fa76:	mov    rax,QWORD PTR [rsp+0x30]
   14000fa7b:	movsxd rdx,DWORD PTR [rax+0x8]
   14000fa7f:	movsxd rcx,edi
   14000fa82:	add    rdx,rcx
   14000fa85:	lea    rcx,[rax+rdx*8+0x10]
   14000fa8a:	lea    rdx,[rsp+0x68]
   14000fa8f:	call   QWORD PTR [rip+0x1be1b]        # 0x14002b8b0
   14000fa95:	lea    rcx,[rsp+0x68]
   14000fa9a:	call   QWORD PTR [rip+0x1bdf8]        # 0x14002b898
   14000faa0:	lea    rcx,[rsp+0xf0]
   14000faa8:	call   QWORD PTR [rip+0x1bdea]        # 0x14002b898
   14000faae:	mov    rax,QWORD PTR [rsp+0x30]
   14000fab3:	mov    edx,DWORD PTR [rax+0x8]
   14000fab6:	mov    ecx,DWORD PTR [rax+0xc]
   14000fab9:	inc    edi
   14000fabb:	sub    ecx,edx
   14000fabd:	inc    rsi
   14000fac0:	cmp    edi,ecx
   14000fac2:	jl     0x14000fa10
   14000fac8:	cmp    BYTE PTR [r13+0x6c],0x0
   14000facd:	je     0x14000fb72
   14000fad3:	lea    rdx,[rbp+0x8]
   14000fad7:	lea    rcx,[rsp+0xc8]
   14000fadf:	or     ebx,0x4
   14000fae2:	call   QWORD PTR [rip+0x1bdb8]        # 0x14002b8a0
   14000fae8:	mov    r11,QWORD PTR [rsp+0xc8]
   14000faf0:	cmp    DWORD PTR [r11+0x4],0x0
   14000faf5:	jne    0x14000fb20
   14000faf7:	lea    rdx,[rbp+0x20]
   14000fafb:	lea    rcx,[rsp+0xd8]
   14000fb03:	or     ebx,0x8
   14000fb06:	call   QWORD PTR [rip+0x1bd94]        # 0x14002b8a0
   14000fb0c:	mov    r11,QWORD PTR [rsp+0xd8]
   14000fb14:	cmp    DWORD PTR [r11+0x4],0x0
   14000fb19:	jne    0x14000fb20
   14000fb1b:	xor    dil,dil
   14000fb1e:	jmp    0x14000fb23
   14000fb20:	mov    dil,0x1
   14000fb23:	test   bl,0x8
   14000fb26:	je     0x14000fb39
   14000fb28:	lea    rcx,[rsp+0xd8]
   14000fb30:	and    ebx,0xfffffff7
   14000fb33:	call   QWORD PTR [rip+0x1bd5f]        # 0x14002b898
   14000fb39:	test   bl,0x4
   14000fb3c:	je     0x14000fb4f
   14000fb3e:	lea    rcx,[rsp+0xc8]
   14000fb46:	and    ebx,0xfffffffb
   14000fb49:	call   QWORD PTR [rip+0x1bd49]        # 0x14002b898
   14000fb4f:	test   dil,dil
   14000fb52:	je     0x14000fb58
   14000fb54:	inc    DWORD PTR [rsp+0x44]
   14000fb58:	lea    r8,[rsp+0x30]
   14000fb5d:	lea    rcx,[rsp+0x88]
   14000fb65:	mov    rdx,rbp
   14000fb68:	call   0x14000efc0
   14000fb6d:	jmp    0x14000fc1b
   14000fb72:	lea    rdx,[rbp+0x20]
   14000fb76:	lea    rcx,[rsp+0xe0]
   14000fb7e:	or     ebx,0x10
   14000fb81:	call   QWORD PTR [rip+0x1bd19]        # 0x14002b8a0
   14000fb87:	mov    r11,QWORD PTR [rsp+0xe0]
   14000fb8f:	cmp    DWORD PTR [r11+0x4],0x0
   14000fb94:	je     0x14000fbd3
   14000fb96:	lea    rdx,[rbp+0x8]
   14000fb9a:	lea    rcx,[rsp+0xd0]
   14000fba2:	or     ebx,0x20
   14000fba5:	call   QWORD PTR [rip+0x1bcf5]        # 0x14002b8a0
   14000fbab:	mov    r11,QWORD PTR [rsp+0xd0]
   14000fbb3:	cmp    DWORD PTR [r11+0x4],0x0
   14000fbb8:	je     0x14000fbd3
   14000fbba:	mov    rcx,QWORD PTR [rsp+0x190]
   14000fbc2:	mov    rdx,rbp
   14000fbc5:	call   0x14000f110
   14000fbca:	test   al,al
   14000fbcc:	jne    0x14000fbd3
   14000fbce:	xor    dil,dil
   14000fbd1:	jmp    0x14000fbd6
   14000fbd3:	mov    dil,0x1
   14000fbd6:	test   bl,0x20
   14000fbd9:	je     0x14000fbec
   14000fbdb:	lea    rcx,[rsp+0xd0]
   14000fbe3:	and    ebx,0xffffffdf
   14000fbe6:	call   QWORD PTR [rip+0x1bcac]        # 0x14002b898
   14000fbec:	test   bl,0x10
   14000fbef:	je     0x14000fc02
   14000fbf1:	lea    rcx,[rsp+0xe0]
   14000fbf9:	and    ebx,0xffffffef
   14000fbfc:	call   QWORD PTR [rip+0x1bc96]        # 0x14002b898
   14000fc02:	lea    r8,[rsp+0x30]
   14000fc07:	lea    rcx,[rsp+0x88]
   14000fc0f:	movzx  r9d,dil
   14000fc13:	mov    rdx,rbp
   14000fc16:	call   0x14000ec10
   14000fc1b:	mov    rsi,QWORD PTR [rsp+0x30]
   14000fc20:	mov    eax,DWORD PTR [rsi]
   14000fc22:	test   eax,eax
   14000fc24:	je     0x14000fc3b
   14000fc26:	cmp    eax,0xffffffff
   14000fc29:	je     0x14000fc6d
   14000fc2b:	lock add DWORD PTR [rsi],0xffffffff
   14000fc2f:	setne  al
   14000fc32:	test   al,al
   14000fc34:	jne    0x14000fc6d
   14000fc36:	mov    rsi,QWORD PTR [rsp+0x30]
   14000fc3b:	movsxd rax,DWORD PTR [rsi+0xc]
   14000fc3f:	lea    rdi,[rsi+rax*8+0x10]
   14000fc44:	movsxd rax,DWORD PTR [rsi+0x8]
   14000fc48:	lea    rbp,[rsi+rax*8+0x10]
   14000fc4d:	cmp    rbp,rdi
   14000fc50:	je     0x14000fc64
   14000fc52:	sub    rdi,0x8
   14000fc56:	mov    rcx,rdi
   14000fc59:	call   QWORD PTR [rip+0x1bc39]        # 0x14002b898
   14000fc5f:	cmp    rdi,rbp
   14000fc62:	jne    0x14000fc52
   14000fc64:	mov    rcx,rsi
   14000fc67:	call   QWORD PTR [rip+0x1bc03]        # 0x14002b870
   14000fc6d:	mov    rdi,QWORD PTR [rsp+0x190]
   14000fc75:	inc    r14d
   14000fc78:	inc    r15
   14000fc7b:	mov    rcx,QWORD PTR [rdi]
   14000fc7e:	mov    edx,DWORD PTR [rcx+0x8]
   14000fc81:	mov    eax,DWORD PTR [rcx+0xc]
   14000fc84:	sub    eax,edx
   14000fc86:	cmp    r14d,eax
   14000fc89:	jne    0x14000f841
   14000fc8f:	test   r12d,r12d
   14000fc92:	je     0x14000fd31
   14000fc98:	lea    r8,[rip+0x1d861]        # 0x14002d500
   14000fc9f:	lea    rdx,[rip+0x1d84a]        # 0x14002d4f0
   14000fca6:	lea    rcx,[rsp+0x138]
   14000fcae:	xor    r9d,r9d
   14000fcb1:	mov    DWORD PTR [rsp+0x20],r12d
   14000fcb6:	call   QWORD PTR [rip+0x1bbec]        # 0x14002b8a8
   14000fcbc:	mov    rdx,QWORD PTR [r13+0x60]
   14000fcc0:	mov    ecx,DWORD PTR [rdx]
   14000fcc2:	mov    rdi,rax
   14000fcc5:	cmp    ecx,0x1
   14000fcc8:	je     0x14000fcf5
   14000fcca:	test   ecx,ecx
   14000fccc:	je     0x14000fcf5
   14000fcce:	lea    rcx,[r13+0x60]
   14000fcd2:	mov    edx,0x7fffffff
   14000fcd7:	mov    r8d,0x1
   14000fcdd:	call   0x140001a10
   14000fce2:	test   rax,rax
   14000fce5:	je     0x14000fd1b
   14000fce7:	mov    rdx,rdi
   14000fcea:	mov    rcx,rax
   14000fced:	call   QWORD PTR [rip+0x1bbad]        # 0x14002b8a0
   14000fcf3:	jmp    0x14000fd1b
   14000fcf5:	lea    rcx,[rsp+0x120]
   14000fcfd:	mov    rdx,rax
   14000fd00:	call   QWORD PTR [rip+0x1bb9a]        # 0x14002b8a0
   14000fd06:	lea    rcx,[r13+0x60]
   14000fd0a:	call   QWORD PTR [rip+0x1bb30]        # 0x14002b840
   14000fd10:	mov    rcx,QWORD PTR [rsp+0x120]
   14000fd18:	mov    QWORD PTR [rax],rcx
   14000fd1b:	lea    rcx,[rsp+0x138]
   14000fd23:	call   QWORD PTR [rip+0x1bb6f]        # 0x14002b898
   14000fd29:	mov    rdi,QWORD PTR [rsp+0x190]
   14000fd31:	mov    eax,DWORD PTR [rsp+0x44]
   14000fd35:	test   eax,eax
   14000fd37:	je     0x14000fdd5
   14000fd3d:	lea    r8,[rip+0x1d76c]        # 0x14002d4b0
   14000fd44:	lea    rdx,[rip+0x1d7a5]        # 0x14002d4f0
   14000fd4b:	lea    rcx,[rsp+0x110]
   14000fd53:	xor    r9d,r9d
   14000fd56:	mov    DWORD PTR [rsp+0x20],eax
   14000fd5a:	call   QWORD PTR [rip+0x1bb48]        # 0x14002b8a8
   14000fd60:	mov    rdx,QWORD PTR [r13+0x60]
   14000fd64:	mov    ecx,DWORD PTR [rdx]
   14000fd66:	mov    rdi,rax
   14000fd69:	cmp    ecx,0x1
   14000fd6c:	je     0x14000fd99
   14000fd6e:	test   ecx,ecx
   14000fd70:	je     0x14000fd99
   14000fd72:	lea    rcx,[r13+0x60]
   14000fd76:	mov    edx,0x7fffffff
   14000fd7b:	mov    r8d,0x1
   14000fd81:	call   0x140001a10
   14000fd86:	test   rax,rax
   14000fd89:	je     0x14000fdbf
   14000fd8b:	mov    rdx,rdi
   14000fd8e:	mov    rcx,rax
   14000fd91:	call   QWORD PTR [rip+0x1bb09]        # 0x14002b8a0
   14000fd97:	jmp    0x14000fdbf
   14000fd99:	lea    rcx,[rsp+0xf8]
   14000fda1:	mov    rdx,rax
   14000fda4:	call   QWORD PTR [rip+0x1baf6]        # 0x14002b8a0
   14000fdaa:	lea    rcx,[r13+0x60]
   14000fdae:	call   QWORD PTR [rip+0x1ba8c]        # 0x14002b840
   14000fdb4:	mov    rcx,QWORD PTR [rsp+0xf8]
   14000fdbc:	mov    QWORD PTR [rax],rcx
   14000fdbf:	lea    rcx,[rsp+0x110]
   14000fdc7:	call   QWORD PTR [rip+0x1bacb]        # 0x14002b898
   14000fdcd:	mov    rdi,QWORD PTR [rsp+0x190]
   14000fdd5:	mov    rbx,QWORD PTR [rdi+0x20]
   14000fdd9:	mov    QWORD PTR [rsp+0x38],rbx
   14000fdde:	mov    eax,DWORD PTR [rbx]
   14000fde0:	test   eax,eax
   14000fde2:	je     0x14000fdef
   14000fde4:	cmp    eax,0xffffffff
   14000fde7:	je     0x14000fe49
   14000fde9:	lock add DWORD PTR [rbx],0x1
   14000fded:	jmp    0x14000fe44
   14000fdef:	mov    edx,DWORD PTR [rbx+0x4]
   14000fdf2:	lea    rcx,[rsp+0x38]
   14000fdf7:	call   QWORD PTR [rip+0x1ba5b]        # 0x14002b858
   14000fdfd:	mov    rbx,QWORD PTR [rsp+0x38]
   14000fe02:	mov    rcx,QWORD PTR [rdi+0x20]
   14000fe06:	movsxd rax,DWORD PTR [rbx+0xc]
   14000fe0a:	lea    rbp,[rbx+rax*8+0x10]
   14000fe0f:	movsxd rax,DWORD PTR [rcx+0x8]
   14000fe13:	lea    rsi,[rcx+rax*8+0x10]
   14000fe18:	movsxd rax,DWORD PTR [rbx+0x8]
   14000fe1c:	lea    rdi,[rbx+rax*8+0x10]
   14000fe21:	cmp    rdi,rbp
   14000fe24:	je     0x14000fe49
   14000fe26:	test   rdi,rdi
   14000fe29:	je     0x14000fe37
   14000fe2b:	mov    rdx,rsi
   14000fe2e:	mov    rcx,rdi
   14000fe31:	call   QWORD PTR [rip+0x1ba69]        # 0x14002b8a0
   14000fe37:	add    rdi,0x8
   14000fe3b:	add    rsi,0x8
   14000fe3f:	cmp    rdi,rbp
   14000fe42:	jne    0x14000fe26
   14000fe44:	mov    rbx,QWORD PTR [rsp+0x38]
   14000fe49:	cmp    QWORD PTR [rsp+0xb0],rbx
   14000fe51:	je     0x14000ff40
   14000fe57:	mov    QWORD PTR [rsp+0x58],rbx
   14000fe5c:	mov    eax,DWORD PTR [rbx]
   14000fe5e:	mov    rcx,rbx
   14000fe61:	test   eax,eax
   14000fe63:	je     0x14000fe70
   14000fe65:	cmp    eax,0xffffffff
   14000fe68:	je     0x14000fed0
   14000fe6a:	lock add DWORD PTR [rbx],0x1
   14000fe6e:	jmp    0x14000fec6
   14000fe70:	mov    edx,DWORD PTR [rbx+0x4]
   14000fe73:	lea    rcx,[rsp+0x58]
   14000fe78:	call   QWORD PTR [rip+0x1b9da]        # 0x14002b858
   14000fe7e:	mov    rcx,QWORD PTR [rsp+0x58]
   14000fe83:	mov    rbx,QWORD PTR [rsp+0x38]
   14000fe88:	movsxd rax,DWORD PTR [rcx+0xc]
   14000fe8c:	lea    rbp,[rcx+rax*8+0x10]
   14000fe91:	movsxd rax,DWORD PTR [rbx+0x8]
   14000fe95:	lea    rsi,[rbx+rax*8+0x10]
   14000fe9a:	movsxd rax,DWORD PTR [rcx+0x8]
   14000fe9e:	lea    rdi,[rcx+rax*8+0x10]
   14000fea3:	cmp    rdi,rbp
   14000fea6:	je     0x14000fed0
   14000fea8:	test   rdi,rdi
   14000feab:	je     0x14000feb9
   14000fead:	mov    rdx,rsi
   14000feb0:	mov    rcx,rdi
   14000feb3:	call   QWORD PTR [rip+0x1b9e7]        # 0x14002b8a0
   14000feb9:	add    rdi,0x8
   14000febd:	add    rsi,0x8
   14000fec1:	cmp    rdi,rbp
   14000fec4:	jne    0x14000fea8
   14000fec6:	mov    rcx,QWORD PTR [rsp+0x58]
   14000fecb:	mov    rbx,QWORD PTR [rsp+0x38]
   14000fed0:	mov    rdi,QWORD PTR [rsp+0xb0]
   14000fed8:	mov    QWORD PTR [rsp+0xb0],rcx
   14000fee0:	mov    QWORD PTR [rsp+0x58],rdi
   14000fee5:	mov    eax,DWORD PTR [rdi]
   14000fee7:	test   eax,eax
   14000fee9:	je     0x14000ff00
   14000feeb:	cmp    eax,0xffffffff
   14000feee:	je     0x14000ff40
   14000fef0:	lock add DWORD PTR [rdi],0xffffffff
   14000fef4:	setne  al
   14000fef7:	test   al,al
   14000fef9:	jne    0x14000ff3b
   14000fefb:	mov    rdi,QWORD PTR [rsp+0x58]
   14000ff00:	movsxd rax,DWORD PTR [rdi+0xc]
   14000ff04:	lea    rbx,[rdi+rax*8+0x10]
   14000ff09:	movsxd rax,DWORD PTR [rdi+0x8]
   14000ff0d:	lea    rsi,[rdi+rax*8+0x10]
   14000ff12:	cmp    rsi,rbx
   14000ff15:	je     0x14000ff32
   14000ff17:	nop    WORD PTR [rax+rax*1+0x0]
   14000ff20:	sub    rbx,0x8
   14000ff24:	mov    rcx,rbx
   14000ff27:	call   QWORD PTR [rip+0x1b96b]        # 0x14002b898
   14000ff2d:	cmp    rbx,rsi
   14000ff30:	jne    0x14000ff20
   14000ff32:	mov    rcx,rdi
   14000ff35:	call   QWORD PTR [rip+0x1b935]        # 0x14002b870
   14000ff3b:	mov    rbx,QWORD PTR [rsp+0x38]
   14000ff40:	mov    eax,DWORD PTR [rbx]
   14000ff42:	test   eax,eax
   14000ff44:	je     0x14000ff5b
   14000ff46:	cmp    eax,0xffffffff
   14000ff49:	je     0x14000ff8d
   14000ff4b:	lock add DWORD PTR [rbx],0xffffffff
   14000ff4f:	setne  al
   14000ff52:	test   al,al
   14000ff54:	jne    0x14000ff8d
   14000ff56:	mov    rbx,QWORD PTR [rsp+0x38]
   14000ff5b:	movsxd rax,DWORD PTR [rbx+0xc]
   14000ff5f:	lea    rdi,[rbx+rax*8+0x10]
   14000ff64:	movsxd rax,DWORD PTR [rbx+0x8]
   14000ff68:	lea    rsi,[rbx+rax*8+0x10]
   14000ff6d:	cmp    rsi,rdi
   14000ff70:	je     0x14000ff84
   14000ff72:	sub    rdi,0x8
   14000ff76:	mov    rcx,rdi
   14000ff79:	call   QWORD PTR [rip+0x1b919]        # 0x14002b898
   14000ff7f:	cmp    rdi,rsi
   14000ff82:	jne    0x14000ff72
   14000ff84:	mov    rcx,rbx
   14000ff87:	call   QWORD PTR [rip+0x1b8e3]        # 0x14002b870
   14000ff8d:	mov    edx,DWORD PTR [r13+0x70]
   14000ff91:	lea    rcx,[rsp+0x88]
   14000ff99:	call   0x14000db00
   14000ff9e:	mov    rdx,QWORD PTR [rsp+0x198]
   14000ffa6:	lea    rcx,[rsp+0x88]
   14000ffae:	call   0x14000bf50
   14000ffb3:	movzx  ebp,al
   14000ffb6:	test   al,al
   14000ffb8:	je     0x14001013b
   14000ffbe:	cmp    BYTE PTR [r13+0x68],0x0
   14000ffc3:	je     0x14001013b
   14000ffc9:	lea    rcx,[rsp+0x1a0]
   14000ffd1:	mov    dl,0x20
   14000ffd3:	call   QWORD PTR [rip+0x1b8ef]        # 0x14002b8c8
   14000ffd9:	lea    rcx,[rsp+0x1a8]
   14000ffe1:	mov    dl,0x20
   14000ffe3:	mov    rdi,rax
   14000ffe6:	call   QWORD PTR [rip+0x1b8dc]        # 0x14002b8c8
   14000ffec:	mov    esi,DWORD PTR [rsp+0x4c]
   14000fff0:	mov    r12d,DWORD PTR [rsp+0x40]
   14000fff5:	lea    r8,[rip+0x1d474]        # 0x14002d470
   14000fffc:	lea    rdx,[rip+0x1d4ed]        # 0x14002d4f0
   140010003:	lea    ecx,[r12+rsi*1]
   140010007:	xor    r9d,r9d
   14001000a:	mov    rbx,rax
   14001000d:	mov    DWORD PTR [rsp+0x20],ecx
   140010011:	lea    rcx,[rsp+0x118]
   140010019:	call   QWORD PTR [rip+0x1b889]        # 0x14002b8a8
   14001001f:	movzx  edx,WORD PTR [rbx]
   140010022:	xor    r9d,r9d
   140010025:	mov    WORD PTR [rsp+0x28],dx
   14001002a:	lea    rdx,[rsp+0x108]
   140010032:	mov    rcx,rax
   140010035:	mov    r8d,esi
   140010038:	mov    DWORD PTR [rsp+0x20],0xa
   140010040:	call   QWORD PTR [rip+0x1b4c2]        # 0x14002b508
   140010046:	lea    rdx,[rsp+0x100]
   14001004e:	xor    r9d,r9d
   140010051:	mov    rcx,rax
   140010054:	movzx  eax,WORD PTR [rdi]
   140010057:	mov    r8d,r12d
   14001005a:	mov    WORD PTR [rsp+0x28],ax
   14001005f:	mov    DWORD PTR [rsp+0x20],0xa
   140010067:	call   QWORD PTR [rip+0x1b49b]        # 0x14002b508
   14001006d:	mov    rcx,QWORD PTR [r13+0x60]
   140010071:	mov    rdi,rax
   140010074:	mov    eax,DWORD PTR [rcx]
   140010076:	cmp    eax,0x1
   140010079:	je     0x1400100a6
   14001007b:	test   eax,eax
   14001007d:	je     0x1400100a6
   14001007f:	lea    rcx,[r13+0x60]
   140010083:	mov    edx,0x7fffffff
   140010088:	mov    r8d,0x1
   14001008e:	call   0x140001a10
   140010093:	test   rax,rax
   140010096:	je     0x1400100cc
   140010098:	mov    rdx,rdi
   14001009b:	mov    rcx,rax
   14001009e:	call   QWORD PTR [rip+0x1b7fc]        # 0x14002b8a0
   1400100a4:	jmp    0x1400100cc
   1400100a6:	lea    rcx,[rsp+0x130]
   1400100ae:	mov    rdx,rdi
   1400100b1:	call   QWORD PTR [rip+0x1b7e9]        # 0x14002b8a0
   1400100b7:	lea    rcx,[r13+0x60]
   1400100bb:	call   QWORD PTR [rip+0x1b77f]        # 0x14002b840
   1400100c1:	mov    rcx,QWORD PTR [rsp+0x130]
   1400100c9:	mov    QWORD PTR [rax],rcx
   1400100cc:	lea    rcx,[rsp+0x100]
   1400100d4:	call   QWORD PTR [rip+0x1b7be]        # 0x14002b898
   1400100da:	lea    rcx,[rsp+0x108]
   1400100e2:	call   QWORD PTR [rip+0x1b7b0]        # 0x14002b898
   1400100e8:	lea    rcx,[rsp+0x118]
   1400100f0:	call   QWORD PTR [rip+0x1b7a2]        # 0x14002b898
   1400100f6:	mov    eax,DWORD PTR [rsp+0x50]
   1400100fa:	test   eax,eax
   1400100fc:	je     0x14001013b
   1400100fe:	lea    r8,[rip+0x1d33b]        # 0x14002d440
   140010105:	lea    rdx,[rip+0x1d3e4]        # 0x14002d4f0
   14001010c:	lea    rcx,[rsp+0x128]
   140010114:	xor    r9d,r9d
   140010117:	mov    DWORD PTR [rsp+0x20],eax
   14001011b:	call   QWORD PTR [rip+0x1b787]        # 0x14002b8a8
   140010121:	lea    rcx,[r13+0x60]
   140010125:	mov    rdx,rax
   140010128:	call   0x140001e20
   14001012d:	lea    rcx,[rsp+0x128]
   140010135:	call   QWORD PTR [rip+0x1b75d]        # 0x14002b898
   14001013b:	lea    rcx,[rsp+0x78]
   140010140:	call   QWORD PTR [rip+0x1b082]        # 0x14002b1c8
   140010146:	lea    rcx,[rsp+0xb8]
   14001014e:	call   QWORD PTR [rip+0x1b074]        # 0x14002b1c8
   140010154:	mov    rdi,QWORD PTR [rsp+0xb0]
   14001015c:	mov    eax,DWORD PTR [rdi]
   14001015e:	test   eax,eax
   140010160:	je     0x14001017b
   140010162:	or     ebx,0xffffffff
   140010165:	cmp    eax,ebx
   140010167:	je     0x1400101b0
   140010169:	lock add DWORD PTR [rdi],ebx
   14001016c:	setne  al
   14001016f:	test   al,al
   140010171:	jne    0x1400101b0
   140010173:	mov    rdi,QWORD PTR [rsp+0xb0]
   14001017b:	movsxd rax,DWORD PTR [rdi+0xc]
   14001017f:	lea    rbx,[rdi+rax*8+0x10]
   140010184:	movsxd rax,DWORD PTR [rdi+0x8]
   140010188:	lea    rsi,[rdi+rax*8+0x10]
   14001018d:	cmp    rsi,rbx
   140010190:	je     0x1400101a4
   140010192:	sub    rbx,0x8
   140010196:	mov    rcx,rbx
   140010199:	call   QWORD PTR [rip+0x1b6f9]        # 0x14002b898
   14001019f:	cmp    rbx,rsi
   1400101a2:	jne    0x140010192
   1400101a4:	mov    rcx,rdi
   1400101a7:	call   QWORD PTR [rip+0x1b6c3]        # 0x14002b870
   1400101ad:	or     ebx,0xffffffff
   1400101b0:	lea    rcx,[rsp+0xa8]
   1400101b8:	call   QWORD PTR [rip+0x1b00a]        # 0x14002b1c8
   1400101be:	mov    rdi,QWORD PTR [rsp+0xa0]
   1400101c6:	mov    eax,DWORD PTR [rdi]
   1400101c8:	test   eax,eax
   1400101ca:	je     0x1400101eb
   1400101cc:	cmp    eax,0xffffffff
   1400101cf:	je     0x140010253
   1400101d5:	lock xadd DWORD PTR [rdi],ebx
   1400101d9:	add    ebx,0xffffffff
   1400101dc:	setne  al
   1400101df:	test   al,al
   1400101e1:	jne    0x140010253
   1400101e3:	mov    rdi,QWORD PTR [rsp+0xa0]
   1400101eb:	mov    rsi,QWORD PTR [rdi+0x10]
   1400101ef:	test   rsi,rsi
   1400101f2:	je     0x14001024a
   1400101f4:	lea    rcx,[rsi+0x30]
   1400101f8:	call   0x1400017b0
   1400101fd:	lea    rcx,[rsi+0x28]
   140010201:	call   QWORD PTR [rip+0x1afc1]        # 0x14002b1c8
   140010207:	lea    rcx,[rsi+0x20]
   14001020b:	call   QWORD PTR [rip+0x1afb7]        # 0x14002b1c8
   140010211:	lea    rcx,[rsi+0x18]
   140010215:	call   QWORD PTR [rip+0x1afad]        # 0x14002b1c8
   14001021b:	mov    rcx,QWORD PTR [rsi+0x8]
   14001021f:	test   rcx,rcx
   140010222:	je     0x140010229
   140010224:	call   0x14000d720
   140010229:	mov    rcx,QWORD PTR [rsi+0x10]
   14001022d:	test   rcx,rcx
   140010230:	je     0x140010237
   140010232:	call   0x14000d720
   140010237:	mov    rdx,QWORD PTR [rdi+0x10]
   14001023b:	mov    r8d,0x8
   140010241:	mov    rcx,rdi
   140010244:	call   QWORD PTR [rip+0x1b22e]        # 0x14002b478
   14001024a:	mov    rcx,rdi
   14001024d:	call   QWORD PTR [rip+0x1b21d]        # 0x14002b470
   140010253:	lea    rcx,[rsp+0x98]
   14001025b:	call   QWORD PTR [rip+0x1af67]        # 0x14002b1c8
   140010261:	lea    rcx,[rsp+0x90]
   140010269:	call   QWORD PTR [rip+0x1af59]        # 0x14002b1c8
   14001026f:	lea    rcx,[rsp+0x88]
   140010277:	call   QWORD PTR [rip+0x1af4b]        # 0x14002b1c8
   14001027d:	mov    al,bpl
   140010280:	add    rsp,0x148
   140010287:	pop    r15
   140010289:	pop    r14
   14001028b:	pop    r13
   14001028d:	pop    r12
   14001028f:	pop    rdi
   140010290:	pop    rsi
   140010291:	pop    rbp
   140010292:	pop    rbx
   140010293:	ret    
   140010294:	int3   
   140010295:	int3   
   140010296:	int3   
   140010297:	int3   
   140010298:	int3   
   140010299:	int3   
   14001029a:	int3   
   14001029b:	int3   
   14001029c:	int3   
   14001029d:	int3   
   14001029e:	int3   
   14001029f:	int3   
   1400102a0:	rex push rdi
   1400102a2:	sub    rsp,0x70
   1400102a6:	lea    rcx,[rsp+0x40]
   1400102ab:	call   QWORD PTR [rip+0x1b5df]        # 0x14002b890
   1400102b1:	lea    rcx,[rsp+0x48]
   1400102b6:	call   QWORD PTR [rip+0x1b5d4]        # 0x14002b890
   1400102bc:	or     rcx,0xffffffffffffffff
   1400102c0:	lea    rdx,[rip+0x1d27d]        # 0x14002d544
   1400102c7:	mov    QWORD PTR [rsp+0x38],rdx
   1400102cc:	mov    rdi,rdx
   1400102cf:	xor    eax,eax
   1400102d1:	repnz scas al,BYTE PTR es:[rdi]
   1400102d3:	lea    rdx,[rsp+0x30]
   1400102d8:	mov    QWORD PTR [rsp+0x50],0x0
   1400102e1:	not    rcx
   1400102e4:	mov    QWORD PTR [rsp+0x58],0x0
   1400102ed:	mov    DWORD PTR [rsp+0x64],0xffffffff
   1400102f5:	dec    rcx
   1400102f8:	mov    DWORD PTR [rsp+0x30],ecx
   1400102fc:	lea    rcx,[rsp+0x40]
   140010301:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140010306:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   14001030c:	call   QWORD PTR [rip+0x1b1fe]        # 0x14002b510
   140010312:	lea    r8,[rip+0x1d20f]        # 0x14002d528
   140010319:	lea    rdx,[rip+0x1d090]        # 0x14002d3b0
   140010320:	lea    rcx,[rsp+0x80]
   140010328:	xor    r9d,r9d
   14001032b:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140010333:	call   QWORD PTR [rip+0x1b56f]        # 0x14002b8a8
   140010339:	lea    rdx,[rsp+0x80]
   140010341:	lea    rcx,[rsp+0x48]
   140010346:	call   QWORD PTR [rip+0x1b564]        # 0x14002b8b0
   14001034c:	lea    rcx,[rsp+0x80]
   140010354:	call   QWORD PTR [rip+0x1b53e]        # 0x14002b898
   14001035a:	lea    rcx,[rip+0xffffffffffffc54f]        # 0x14000c8b0
   140010361:	mov    DWORD PTR [rsp+0x60],0x1
   140010369:	mov    QWORD PTR [rsp+0x50],rcx
   14001036e:	lea    rcx,[rip+0xfffffffffffff39b]        # 0x14000f710
   140010375:	mov    DWORD PTR [rsp+0x64],0x0
   14001037d:	mov    QWORD PTR [rsp+0x58],rcx
   140010382:	lea    rcx,[rsp+0x40]
   140010387:	call   0x140008520
   14001038c:	lea    rcx,[rsp+0x48]
   140010391:	call   QWORD PTR [rip+0x1b501]        # 0x14002b898
   140010397:	lea    rcx,[rsp+0x40]
   14001039c:	call   QWORD PTR [rip+0x1b4f6]        # 0x14002b898
   1400103a2:	mov    eax,0x1
   1400103a7:	add    rsp,0x70
   1400103ab:	pop    rdi
   1400103ac:	ret    
   1400103ad:	int3   
   1400103ae:	int3   
   1400103af:	int3   
   1400103b0:	rex push rbp
   1400103b2:	push   rsi
   1400103b3:	push   r12
   1400103b5:	sub    rsp,0x120
   1400103bc:	mov    r12,rdx
   1400103bf:	mov    rsi,rcx
   1400103c2:	call   QWORD PTR [rip+0x1b4c8]        # 0x14002b890
   1400103c8:	mov    rax,QWORD PTR [r12]
   1400103cc:	mov    eax,DWORD PTR [rax+0x4]
   1400103cf:	lea    ecx,[rax+rax*2]
   1400103d2:	mov    eax,0x66666667
   1400103d7:	shl    ecx,0x2
   1400103da:	imul   ecx
   1400103dc:	mov    rcx,rsi
   1400103df:	sar    edx,0x2
   1400103e2:	mov    eax,edx
   1400103e4:	shr    eax,0x1f
   1400103e7:	add    edx,eax
   1400103e9:	call   QWORD PTR [rip+0x1ae69]        # 0x14002b258
   1400103ef:	mov    rax,QWORD PTR [r12]
   1400103f3:	xor    ebp,ebp
   1400103f5:	cmp    DWORD PTR [rax+0x4],ebp
   1400103f8:	je     0x140010705
   1400103fe:	mov    QWORD PTR [rsp+0x118],rbx
   140010406:	mov    QWORD PTR [rsp+0x110],rdi
   14001040e:	mov    QWORD PTR [rsp+0x108],r13
   140010416:	mov    QWORD PTR [rsp+0x100],r14
   14001041e:	mov    QWORD PTR [rsp+0xf8],r15
   140010426:	lea    r13,[rip+0x1d143]        # 0x14002d570
   14001042d:	lea    r15,[rip+0x1d134]        # 0x14002d568
   140010434:	lea    r14,[rip+0x1d125]        # 0x14002d560
   14001043b:	lea    rdi,[rip+0x1d116]        # 0x14002d558
   140010442:	lea    rdx,[rsp+0x140]
   14001044a:	mov    r8d,ebp
   14001044d:	mov    rcx,r12
   140010450:	call   QWORD PTR [rip+0x1b04a]        # 0x14002b4a0
   140010456:	movzx  ebx,WORD PTR [rax]
   140010459:	mov    eax,ebx
   14001045b:	sub    eax,0x22
   14001045e:	je     0x140010687
   140010464:	sub    eax,0x4
   140010467:	je     0x140010648
   14001046d:	sub    eax,0x1
   140010470:	je     0x140010603
   140010476:	sub    eax,0x15
   140010479:	je     0x1400105be
   14001047f:	cmp    eax,0x2
   140010482:	je     0x140010579
   140010488:	cmp    ebx,0x20
   14001048b:	jae    0x140010568
   140010491:	cmp    ebx,0xd
   140010494:	je     0x140010568
   14001049a:	cmp    ebx,0xa
   14001049d:	je     0x140010568
   1400104a3:	cmp    ebx,0x9
   1400104a6:	je     0x140010568
   1400104ac:	or     rcx,0xffffffffffffffff
   1400104b0:	lea    rdx,[rip+0x1d099]        # 0x14002d550
   1400104b7:	xor    eax,eax
   1400104b9:	mov    rdi,rdx
   1400104bc:	mov    QWORD PTR [rsp+0x88],rdx
   1400104c4:	mov    dl,0x20
   1400104c6:	repnz scas al,BYTE PTR es:[rdi]
   1400104c8:	not    rcx
   1400104cb:	dec    rcx
   1400104ce:	mov    DWORD PTR [rsp+0x80],ecx
   1400104d5:	lea    rcx,[rsp+0x148]
   1400104dd:	movaps xmm0,XMMWORD PTR [rsp+0x80]
   1400104e5:	movdqa XMMWORD PTR [rsp+0x90],xmm0
   1400104ee:	call   QWORD PTR [rip+0x1b3d4]        # 0x14002b8c8
   1400104f4:	lea    rdx,[rsp+0x90]
   1400104fc:	lea    rcx,[rsp+0x158]
   140010504:	mov    rdi,rax
   140010507:	call   QWORD PTR [rip+0x1b353]        # 0x14002b860
   14001050d:	lea    rdx,[rsp+0x150]
   140010515:	xor    r9d,r9d
   140010518:	mov    rcx,rax
   14001051b:	movzx  eax,WORD PTR [rdi]
   14001051e:	mov    r8d,ebx
   140010521:	mov    WORD PTR [rsp+0x28],ax
   140010526:	mov    DWORD PTR [rsp+0x20],0xa
   14001052e:	call   QWORD PTR [rip+0x1b024]        # 0x14002b558
   140010534:	mov    rdx,rax
   140010537:	mov    rcx,rsi
   14001053a:	call   QWORD PTR [rip+0x1aca0]        # 0x14002b1e0
   140010540:	lea    rcx,[rsp+0x150]
   140010548:	call   QWORD PTR [rip+0x1b34a]        # 0x14002b898
   14001054e:	lea    rcx,[rsp+0x158]
   140010556:	call   QWORD PTR [rip+0x1b33c]        # 0x14002b898
   14001055c:	lea    rdi,[rip+0x1cff5]        # 0x14002d558
   140010563:	jmp    0x1400106ce
   140010568:	movzx  edx,bx
   14001056b:	mov    rcx,rsi
   14001056e:	call   QWORD PTR [rip+0x1afdc]        # 0x14002b550
   140010574:	jmp    0x1400106ce
   140010579:	or     rcx,0xffffffffffffffff
   14001057d:	xor    eax,eax
   14001057f:	mov    rdi,r13
   140010582:	repnz scas al,BYTE PTR es:[rdi]
   140010584:	mov    QWORD PTR [rsp+0x58],r13
   140010589:	lea    rdx,[rsp+0xb0]
   140010591:	not    rcx
   140010594:	dec    rcx
   140010597:	mov    DWORD PTR [rsp+0x50],ecx
   14001059b:	mov    rcx,rsi
   14001059e:	movaps xmm0,XMMWORD PTR [rsp+0x50]
   1400105a3:	movdqa XMMWORD PTR [rsp+0xb0],xmm0
   1400105ac:	call   QWORD PTR [rip+0x1acd6]        # 0x14002b288
   1400105b2:	lea    rdi,[rip+0x1cf9f]        # 0x14002d558
   1400105b9:	jmp    0x1400106ce
   1400105be:	or     rcx,0xffffffffffffffff
   1400105c2:	xor    eax,eax
   1400105c4:	mov    rdi,r14
   1400105c7:	repnz scas al,BYTE PTR es:[rdi]
   1400105c9:	mov    QWORD PTR [rsp+0x78],r14
   1400105ce:	lea    rdx,[rsp+0xd0]
   1400105d6:	not    rcx
   1400105d9:	dec    rcx
   1400105dc:	mov    DWORD PTR [rsp+0x70],ecx
   1400105e0:	mov    rcx,rsi
   1400105e3:	movaps xmm0,XMMWORD PTR [rsp+0x70]
   1400105e8:	movdqa XMMWORD PTR [rsp+0xd0],xmm0
   1400105f1:	call   QWORD PTR [rip+0x1ac91]        # 0x14002b288
   1400105f7:	lea    rdi,[rip+0x1cf5a]        # 0x14002d558
   1400105fe:	jmp    0x1400106ce
   140010603:	or     rcx,0xffffffffffffffff
   140010607:	xor    eax,eax
   140010609:	mov    rdi,r15
   14001060c:	repnz scas al,BYTE PTR es:[rdi]
   14001060e:	mov    QWORD PTR [rsp+0x48],r15
   140010613:	lea    rdx,[rsp+0xa0]
   14001061b:	not    rcx
   14001061e:	dec    rcx
   140010621:	mov    DWORD PTR [rsp+0x40],ecx
   140010625:	mov    rcx,rsi
   140010628:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   14001062d:	movdqa XMMWORD PTR [rsp+0xa0],xmm0
   140010636:	call   QWORD PTR [rip+0x1ac4c]        # 0x14002b288
   14001063c:	lea    rdi,[rip+0x1cf15]        # 0x14002d558
   140010643:	jmp    0x1400106ce
   140010648:	or     rcx,0xffffffffffffffff
   14001064c:	xor    eax,eax
   14001064e:	lea    rdx,[rsp+0xc0]
   140010656:	repnz scas al,BYTE PTR es:[rdi]
   140010658:	lea    rdi,[rip+0x1cef9]        # 0x14002d558
   14001065f:	not    rcx
   140010662:	mov    QWORD PTR [rsp+0x68],rdi
   140010667:	dec    rcx
   14001066a:	mov    DWORD PTR [rsp+0x60],ecx
   14001066e:	mov    rcx,rsi
   140010671:	movaps xmm0,XMMWORD PTR [rsp+0x60]
   140010676:	movdqa XMMWORD PTR [rsp+0xc0],xmm0
   14001067f:	call   QWORD PTR [rip+0x1ac03]        # 0x14002b288
   140010685:	jmp    0x1400106ce
   140010687:	or     rcx,0xffffffffffffffff
   14001068b:	lea    rdx,[rip+0x1ceb6]        # 0x14002d548
   140010692:	xor    eax,eax
   140010694:	mov    rdi,rdx
   140010697:	mov    QWORD PTR [rsp+0x38],rdx
   14001069c:	lea    rdx,[rsp+0xe0]
   1400106a4:	repnz scas al,BYTE PTR es:[rdi]
   1400106a6:	not    rcx
   1400106a9:	dec    rcx
   1400106ac:	mov    DWORD PTR [rsp+0x30],ecx
   1400106b0:	mov    rcx,rsi
   1400106b3:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   1400106b8:	movdqa XMMWORD PTR [rsp+0xe0],xmm0
   1400106c1:	call   QWORD PTR [rip+0x1abc1]        # 0x14002b288
   1400106c7:	lea    rdi,[rip+0x1ce8a]        # 0x14002d558
   1400106ce:	mov    rax,QWORD PTR [r12]
   1400106d2:	inc    ebp
   1400106d4:	cmp    ebp,DWORD PTR [rax+0x4]
   1400106d7:	jne    0x140010442
   1400106dd:	mov    r15,QWORD PTR [rsp+0xf8]
   1400106e5:	mov    r14,QWORD PTR [rsp+0x100]
   1400106ed:	mov    r13,QWORD PTR [rsp+0x108]
   1400106f5:	mov    rdi,QWORD PTR [rsp+0x110]
   1400106fd:	mov    rbx,QWORD PTR [rsp+0x118]
   140010705:	mov    rax,rsi
   140010708:	add    rsp,0x120
   14001070f:	pop    r12
   140010711:	pop    rsi
   140010712:	pop    rbp
   140010713:	ret    
   140010714:	int3   
   140010715:	int3   
   140010716:	int3   
   140010717:	int3   
   140010718:	int3   
   140010719:	int3   
   14001071a:	int3   
   14001071b:	int3   
   14001071c:	int3   
   14001071d:	int3   
   14001071e:	int3   
   14001071f:	int3   
   140010720:	rex push rbp
   140010722:	push   r12
   140010724:	push   r13
   140010726:	sub    rsp,0x250
   14001072d:	xor    r12d,r12d
   140010730:	mov    rbp,rcx
   140010733:	mov    r13,rdx
   140010736:	mov    DWORD PTR [rsp+0x270],r12d
   14001073e:	mov    DWORD PTR [rcx+0x8],r12d
   140010742:	lea    rcx,[rsp+0x20]
   140010747:	call   QWORD PTR [rip+0x1b143]        # 0x14002b890
   14001074d:	mov    rcx,rbp
   140010750:	call   QWORD PTR [rip+0x1ae42]        # 0x14002b598
   140010756:	test   al,al
   140010758:	jne    0x140010c7e
   14001075e:	mov    QWORD PTR [rsp+0x278],rbx
   140010766:	mov    QWORD PTR [rsp+0x248],rsi
   14001076e:	mov    QWORD PTR [rsp+0x240],rdi
   140010776:	mov    QWORD PTR [rsp+0x238],r14
   14001077e:	mov    QWORD PTR [rsp+0x230],r15
   140010786:	lea    rbx,[rip+0x1ce23]        # 0x14002d5b0
   14001078d:	lea    r15,[rip+0x1ce14]        # 0x14002d5a8
   140010794:	lea    r14,[rip+0x1ce05]        # 0x14002d5a0
   14001079b:	lea    rsi,[rip+0x1cdfa]        # 0x14002d59c
   1400107a2:	lea    rdi,[rip+0x1cdeb]        # 0x14002d594
   1400107a9:	nop    DWORD PTR [rax+0x0]
   1400107b0:	mov    rcx,rbp
   1400107b3:	call   QWORD PTR [rip+0x1add7]        # 0x14002b590
   1400107b9:	mov    rcx,rbp
   1400107bc:	call   QWORD PTR [rip+0x1ad7e]        # 0x14002b540
   1400107c2:	cmp    eax,0x4
   1400107c5:	jne    0x140010a6d
   1400107cb:	or     rcx,0xffffffffffffffff
   1400107cf:	xor    eax,eax
   1400107d1:	mov    rdi,r14
   1400107d4:	repnz scas al,BYTE PTR es:[rdi]
   1400107d6:	lea    rdx,[rsp+0x140]
   1400107de:	mov    QWORD PTR [rsp+0x68],r14
   1400107e3:	not    rcx
   1400107e6:	dec    rcx
   1400107e9:	mov    DWORD PTR [rsp+0x60],ecx
   1400107ed:	mov    rcx,rbp
   1400107f0:	call   QWORD PTR [rip+0x1ad92]        # 0x14002b588
   1400107f6:	lea    rcx,[rsp+0xc0]
   1400107fe:	movaps xmm0,XMMWORD PTR [rsp+0x60]
   140010803:	mov    rdx,rax
   140010806:	movdqa XMMWORD PTR [rsp+0xc0],xmm0
   14001080f:	call   QWORD PTR [rip+0x1ad03]        # 0x14002b518
   140010815:	test   al,al
   140010817:	je     0x14001082c
   140010819:	mov    DWORD PTR [rbp+0x8],0x1
   140010820:	lea    rdi,[rip+0x1cd6d]        # 0x14002d594
   140010827:	jmp    0x140010c45
   14001082c:	or     rcx,0xffffffffffffffff
   140010830:	xor    eax,eax
   140010832:	mov    rdi,r15
   140010835:	repnz scas al,BYTE PTR es:[rdi]
   140010837:	lea    rdx,[rsp+0x1a0]
   14001083f:	mov    QWORD PTR [rsp+0x88],r15
   140010847:	not    rcx
   14001084a:	dec    rcx
   14001084d:	mov    DWORD PTR [rsp+0x80],ecx
   140010854:	mov    rcx,rbp
   140010857:	call   QWORD PTR [rip+0x1ad2b]        # 0x14002b588
   14001085d:	lea    rcx,[rsp+0xf0]
   140010865:	movaps xmm0,XMMWORD PTR [rsp+0x80]
   14001086d:	mov    rdx,rax
   140010870:	movdqa XMMWORD PTR [rsp+0xf0],xmm0
   140010879:	call   QWORD PTR [rip+0x1ac99]        # 0x14002b518
   14001087f:	test   al,al
   140010881:	je     0x140010896
   140010883:	mov    DWORD PTR [rbp+0x8],0x2
   14001088a:	lea    rdi,[rip+0x1cd03]        # 0x14002d594
   140010891:	jmp    0x140010c45
   140010896:	or     rcx,0xffffffffffffffff
   14001089a:	xor    eax,eax
   14001089c:	mov    rdi,rbx
   14001089f:	repnz scas al,BYTE PTR es:[rdi]
   1400108a1:	lea    rdx,[rsp+0x110]
   1400108a9:	mov    QWORD PTR [rsp+0x38],rbx
   1400108ae:	not    rcx
   1400108b1:	dec    rcx
   1400108b4:	mov    DWORD PTR [rsp+0x30],ecx
   1400108b8:	mov    rcx,rbp
   1400108bb:	call   QWORD PTR [rip+0x1acc7]        # 0x14002b588
   1400108c1:	lea    rcx,[rsp+0xd0]
   1400108c9:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   1400108ce:	mov    rdx,rax
   1400108d1:	movdqa XMMWORD PTR [rsp+0xd0],xmm0
   1400108da:	call   QWORD PTR [rip+0x1ac38]        # 0x14002b518
   1400108e0:	test   al,al
   1400108e2:	je     0x1400108f7
   1400108e4:	mov    DWORD PTR [rbp+0x8],0x3
   1400108eb:	lea    rdi,[rip+0x1cca2]        # 0x14002d594
   1400108f2:	jmp    0x140010c45
   1400108f7:	or     rcx,0xffffffffffffffff
   1400108fb:	xor    eax,eax
   1400108fd:	mov    DWORD PTR [rbp+0x8],0x0
   140010904:	mov    rdi,rsi
   140010907:	lea    rdx,[rsp+0x180]
   14001090f:	mov    QWORD PTR [rsp+0x48],rsi
   140010914:	repnz scas al,BYTE PTR es:[rdi]
   140010916:	not    rcx
   140010919:	dec    rcx
   14001091c:	mov    DWORD PTR [rsp+0x40],ecx
   140010920:	mov    rcx,rbp
   140010923:	call   QWORD PTR [rip+0x1ac5f]        # 0x14002b588
   140010929:	lea    rcx,[rsp+0xb0]
   140010931:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140010936:	mov    rdx,rax
   140010939:	movdqa XMMWORD PTR [rsp+0xb0],xmm0
   140010942:	call   QWORD PTR [rip+0x1abd0]        # 0x14002b518
   140010948:	test   al,al
   14001094a:	je     0x140010c3e
   140010950:	lea    rdx,[rsp+0x270]
   140010958:	mov    rcx,rbp
   14001095b:	call   QWORD PTR [rip+0x1ac1f]        # 0x14002b580
   140010961:	or     rcx,0xffffffffffffffff
   140010965:	lea    rdx,[rip+0x1cc1c]        # 0x14002d588
   14001096c:	mov    rdi,rdx
   14001096f:	mov    QWORD PTR [rsp+0x58],rdx
   140010974:	xor    eax,eax
   140010976:	repnz scas al,BYTE PTR es:[rdi]
   140010978:	lea    r8,[rsp+0xa0]
   140010980:	lea    rdx,[rsp+0x160]
   140010988:	not    rcx
   14001098b:	dec    rcx
   14001098e:	mov    DWORD PTR [rsp+0x50],ecx
   140010992:	lea    rcx,[rsp+0x270]
   14001099a:	movaps xmm0,XMMWORD PTR [rsp+0x50]
   14001099f:	movdqa XMMWORD PTR [rsp+0xa0],xmm0
   1400109a8:	call   QWORD PTR [rip+0x1abca]        # 0x14002b578
   1400109ae:	lea    rdx,[rsp+0x280]
   1400109b6:	mov    rcx,rax
   1400109b9:	call   QWORD PTR [rip+0x1ab71]        # 0x14002b530
   1400109bf:	lea    rcx,[r13+0x10]
   1400109c3:	mov    rdx,rax
   1400109c6:	call   QWORD PTR [rip+0x1aee4]        # 0x14002b8b0
   1400109cc:	lea    rcx,[rsp+0x280]
   1400109d4:	call   QWORD PTR [rip+0x1aebe]        # 0x14002b898
   1400109da:	or     rcx,0xffffffffffffffff
   1400109de:	lea    rdx,[rip+0x1cb93]        # 0x14002d578
   1400109e5:	mov    rdi,rdx
   1400109e8:	mov    QWORD PTR [rsp+0x78],rdx
   1400109ed:	xor    eax,eax
   1400109ef:	repnz scas al,BYTE PTR es:[rdi]
   1400109f1:	lea    r8,[rsp+0xe0]
   1400109f9:	lea    rdx,[rsp+0x120]
   140010a01:	not    rcx
   140010a04:	dec    rcx
   140010a07:	mov    DWORD PTR [rsp+0x70],ecx
   140010a0b:	lea    rcx,[rsp+0x270]
   140010a13:	movaps xmm0,XMMWORD PTR [rsp+0x70]
   140010a18:	movdqa XMMWORD PTR [rsp+0xe0],xmm0
   140010a21:	call   QWORD PTR [rip+0x1ab51]        # 0x14002b578
   140010a27:	lea    rdx,[rsp+0x288]
   140010a2f:	mov    rcx,rax
   140010a32:	call   QWORD PTR [rip+0x1aaf8]        # 0x14002b530
   140010a38:	lea    rcx,[r13+0x18]
   140010a3c:	mov    rdx,rax
   140010a3f:	call   QWORD PTR [rip+0x1ae6b]        # 0x14002b8b0
   140010a45:	lea    rcx,[rsp+0x288]
   140010a4d:	call   QWORD PTR [rip+0x1ae45]        # 0x14002b898
   140010a53:	lea    rcx,[rsp+0x270]
   140010a5b:	call   QWORD PTR [rip+0x1ab0f]        # 0x14002b570
   140010a61:	lea    rdi,[rip+0x1cb2c]        # 0x14002d594
   140010a68:	jmp    0x140010c45
   140010a6d:	mov    rcx,rbp
   140010a70:	call   0x14001bb60
   140010a75:	test   al,al
   140010a77:	jne    0x140010c45
   140010a7d:	mov    rcx,rbp
   140010a80:	call   QWORD PTR [rip+0x1aaba]        # 0x14002b540
   140010a86:	cmp    eax,0x6
   140010a89:	jne    0x140010b0a
   140010a8b:	mov    eax,DWORD PTR [rbp+0x8]
   140010a8e:	cmp    eax,0x1
   140010a91:	jne    0x140010ab6
   140010a93:	lea    rdx,[rsp+0x130]
   140010a9b:	mov    rcx,rbp
   140010a9e:	call   QWORD PTR [rip+0x1aa94]        # 0x14002b538
   140010aa4:	lea    rcx,[rbp+0x10]
   140010aa8:	mov    rdx,rax
   140010aab:	call   QWORD PTR [rip+0x1aab7]        # 0x14002b568
   140010ab1:	jmp    0x140010c45
   140010ab6:	cmp    eax,0x2
   140010ab9:	jne    0x140010ade
   140010abb:	lea    rdx,[rsp+0x150]
   140010ac3:	mov    rcx,rbp
   140010ac6:	call   QWORD PTR [rip+0x1aa6c]        # 0x14002b538
   140010acc:	lea    rcx,[rbp+0x18]
   140010ad0:	mov    rdx,rax
   140010ad3:	call   QWORD PTR [rip+0x1aa8f]        # 0x14002b568
   140010ad9:	jmp    0x140010c45
   140010ade:	cmp    eax,0x3
   140010ae1:	jne    0x140010c45
   140010ae7:	lea    rdx,[rsp+0x170]
   140010aef:	mov    rcx,rbp
   140010af2:	call   QWORD PTR [rip+0x1aa40]        # 0x14002b538
   140010af8:	lea    rcx,[rbp+0x20]
   140010afc:	mov    rdx,rax
   140010aff:	call   QWORD PTR [rip+0x1aa63]        # 0x14002b568
   140010b05:	jmp    0x140010c45
   140010b0a:	mov    rcx,rbp
   140010b0d:	call   QWORD PTR [rip+0x1aa2d]        # 0x14002b540
   140010b13:	cmp    eax,0x5
   140010b16:	jne    0x140010b7b
   140010b18:	or     rcx,0xffffffffffffffff
   140010b1c:	xor    eax,eax
   140010b1e:	lea    rdx,[rsp+0x190]
   140010b26:	repnz scas al,BYTE PTR es:[rdi]
   140010b28:	lea    rdi,[rip+0x1ca65]        # 0x14002d594
   140010b2f:	or     r12d,0x1
   140010b33:	not    rcx
   140010b36:	mov    QWORD PTR [rsp+0x98],rdi
   140010b3e:	dec    rcx
   140010b41:	mov    DWORD PTR [rsp+0x90],ecx
   140010b48:	mov    rcx,rbp
   140010b4b:	call   QWORD PTR [rip+0x1aa37]        # 0x14002b588
   140010b51:	lea    rcx,[rsp+0x100]
   140010b59:	movaps xmm0,XMMWORD PTR [rsp+0x90]
   140010b61:	mov    rdx,rax
   140010b64:	movdqa XMMWORD PTR [rsp+0x100],xmm0
   140010b6d:	call   QWORD PTR [rip+0x1a9a5]        # 0x14002b518
   140010b73:	test   al,al
   140010b75:	je     0x140010b7b
   140010b77:	mov    al,0x1
   140010b79:	jmp    0x140010b7d
   140010b7b:	xor    al,al
   140010b7d:	test   r12b,0x1
   140010b81:	je     0x140010b87
   140010b83:	and    r12d,0xfffffffe
   140010b87:	test   al,al
   140010b89:	je     0x140010c45
   140010b8f:	lea    rcx,[rbp+0x18]
   140010b93:	mov    r9d,0x1
   140010b99:	mov    r8d,0x9c
   140010b9f:	mov    edx,0x2762
   140010ba4:	call   QWORD PTR [rip+0x1a9b6]        # 0x14002b560
   140010baa:	lea    rcx,[rsp+0x1b0]
   140010bb2:	call   0x14000b4f0
   140010bb7:	lea    rdx,[rbp+0x10]
   140010bbb:	lea    rcx,[rsp+0x1c0]
   140010bc3:	call   QWORD PTR [rip+0x1ace7]        # 0x14002b8b0
   140010bc9:	lea    rdx,[rbp+0x18]
   140010bcd:	lea    rcx,[rsp+0x1b0]
   140010bd5:	call   0x140005cb0
   140010bda:	lea    rdx,[rbp+0x20]
   140010bde:	lea    rcx,[rsp+0x1d0]
   140010be6:	call   QWORD PTR [rip+0x1acc4]        # 0x14002b8b0
   140010bec:	lea    rdx,[rsp+0x1b0]
   140010bf4:	mov    rcx,r13
   140010bf7:	call   0x1400089f0
   140010bfc:	lea    rcx,[rbp+0x10]
   140010c00:	call   QWORD PTR [rip+0x1a7ba]        # 0x14002b3c0
   140010c06:	lea    rcx,[rbp+0x18]
   140010c0a:	call   QWORD PTR [rip+0x1a7b0]        # 0x14002b3c0
   140010c10:	lea    rcx,[rbp+0x20]
   140010c14:	call   QWORD PTR [rip+0x1a7a6]        # 0x14002b3c0
   140010c1a:	lea    rcx,[rsp+0x1b0]
   140010c22:	call   0x140001ea0
   140010c27:	lea    rbx,[rip+0x1c982]        # 0x14002d5b0
   140010c2e:	lea    rsi,[rip+0x1c967]        # 0x14002d59c
   140010c35:	lea    rdi,[rip+0x1c958]        # 0x14002d594
   140010c3c:	jmp    0x140010c45
   140010c3e:	lea    rdi,[rip+0x1c94f]        # 0x14002d594
   140010c45:	mov    rcx,rbp
   140010c48:	call   QWORD PTR [rip+0x1a94a]        # 0x14002b598
   140010c4e:	test   al,al
   140010c50:	je     0x1400107b0
   140010c56:	mov    r15,QWORD PTR [rsp+0x230]
   140010c5e:	mov    r14,QWORD PTR [rsp+0x238]
   140010c66:	mov    rdi,QWORD PTR [rsp+0x240]
   140010c6e:	mov    rsi,QWORD PTR [rsp+0x248]
   140010c76:	mov    rbx,QWORD PTR [rsp+0x278]
   140010c7e:	lea    rcx,[rsp+0x20]
   140010c83:	call   QWORD PTR [rip+0x1ac0f]        # 0x14002b898
   140010c89:	mov    al,0x1
   140010c8b:	add    rsp,0x250
   140010c92:	pop    r13
   140010c94:	pop    r12
   140010c96:	pop    rbp
   140010c97:	ret    
   140010c98:	int3   
   140010c99:	int3   
   140010c9a:	int3   
   140010c9b:	int3   
   140010c9c:	int3   
   140010c9d:	int3   
   140010c9e:	int3   
   140010c9f:	int3   
   140010ca0:	rex push rbx
   140010ca2:	sub    rsp,0x50
   140010ca6:	mov    rbx,rcx
   140010ca9:	mov    DWORD PTR [rcx+0x8],0x1
   140010cb0:	lea    rcx,[rsp+0x20]
   140010cb5:	call   QWORD PTR [rip+0x1a865]        # 0x14002b520
   140010cbb:	lea    rcx,[rsp+0x30]
   140010cc0:	call   QWORD PTR [rip+0x1abca]        # 0x14002b890
   140010cc6:	lea    rcx,[rsp+0x38]
   140010ccb:	call   QWORD PTR [rip+0x1abbf]        # 0x14002b890
   140010cd1:	lea    rcx,[rsp+0x40]
   140010cd6:	call   QWORD PTR [rip+0x1abb4]        # 0x14002b890
   140010cdc:	lea    rcx,[rsp+0x20]
   140010ce1:	mov    rdx,rbx
   140010ce4:	call   0x140010720
   140010ce9:	lea    rcx,[rsp+0x40]
   140010cee:	movzx  ebx,al
   140010cf1:	call   QWORD PTR [rip+0x1aba1]        # 0x14002b898
   140010cf7:	lea    rcx,[rsp+0x38]
   140010cfc:	call   QWORD PTR [rip+0x1ab96]        # 0x14002b898
   140010d02:	lea    rcx,[rsp+0x30]
   140010d07:	call   QWORD PTR [rip+0x1ab8b]        # 0x14002b898
   140010d0d:	lea    rcx,[rsp+0x20]
   140010d12:	call   QWORD PTR [rip+0x1a830]        # 0x14002b548
   140010d18:	mov    al,bl
   140010d1a:	add    rsp,0x50
   140010d1e:	pop    rbx
   140010d1f:	ret    
   140010d20:	mov    QWORD PTR [rsp+0x10],rbx
   140010d25:	push   rbp
   140010d26:	push   rsi
   140010d27:	push   rdi
   140010d28:	push   r12
   140010d2a:	push   r13
   140010d2c:	push   r14
   140010d2e:	push   r15
   140010d30:	sub    rsp,0x110
   140010d37:	mov    rbx,rcx
   140010d3a:	lea    rcx,[rsp+0x20]
   140010d3f:	xor    r12d,r12d
   140010d42:	mov    DWORD PTR [rsp+0x150],r12d
   140010d4a:	call   QWORD PTR [rip+0x1a870]        # 0x14002b5c0
   140010d50:	lea    rcx,[rip+0x1c665]        # 0x14002d3bc
   140010d57:	call   QWORD PTR [rip+0x1a70b]        # 0x14002b468
   140010d5d:	lea    rcx,[rsp+0x20]
   140010d62:	mov    rdx,rax
   140010d65:	call   QWORD PTR [rip+0x1a84d]        # 0x14002b5b8
   140010d6b:	lea    rdx,[rip+0x1c90e]        # 0x14002d680
   140010d72:	lea    rcx,[rsp+0x20]
   140010d77:	call   QWORD PTR [rip+0x1a833]        # 0x14002b5b0
   140010d7d:	lea    rdx,[rbx+0x10]
   140010d81:	lea    rcx,[rsp+0x150]
   140010d89:	call   QWORD PTR [rip+0x1ab11]        # 0x14002b8a0
   140010d8f:	mov    rax,QWORD PTR [rsp+0x150]
   140010d97:	or     r14,0xffffffffffffffff
   140010d9b:	lea    rsi,[rip+0x1c8da]        # 0x14002d67c
   140010da2:	cmp    DWORD PTR [rax+0x4],r12d
   140010da6:	je     0x140010e1c
   140010da8:	xor    eax,eax
   140010daa:	mov    rcx,r14
   140010dad:	mov    rdi,rsi
   140010db0:	repnz scas al,BYTE PTR es:[rdi]
   140010db2:	mov    QWORD PTR [rsp+0x68],rsi
   140010db7:	lea    rdx,[rsp+0x100]
   140010dbf:	not    rcx
   140010dc2:	dec    rcx
   140010dc5:	mov    DWORD PTR [rsp+0x60],ecx
   140010dc9:	lea    rcx,[rsp+0x150]
   140010dd1:	movaps xmm0,XMMWORD PTR [rsp+0x60]
   140010dd6:	movdqa XMMWORD PTR [rsp+0x100],xmm0
   140010ddf:	call   QWORD PTR [rip+0x1a43b]        # 0x14002b220
   140010de5:	test   al,al
   140010de7:	jne    0x140010e1c
   140010de9:	lea    rdx,[rip+0x1c880]        # 0x14002d670
   140010df0:	lea    rcx,[rsp+0x20]
   140010df5:	call   QWORD PTR [rip+0x1a7b5]        # 0x14002b5b0
   140010dfb:	lea    rdx,[rsp+0x150]
   140010e03:	mov    rcx,rax
   140010e06:	call   QWORD PTR [rip+0x1a79c]        # 0x14002b5a8
   140010e0c:	lea    rdx,[rip+0x1c859]        # 0x14002d66c
   140010e13:	mov    rcx,rax
   140010e16:	call   QWORD PTR [rip+0x1a794]        # 0x14002b5b0
   140010e1c:	lea    rdx,[rbx+0x18]
   140010e20:	lea    rcx,[rsp+0x80]
   140010e28:	call   QWORD PTR [rip+0x1aa72]        # 0x14002b8a0
   140010e2e:	lea    rdx,[rsp+0x80]
   140010e36:	lea    rcx,[rsp+0x150]
   140010e3e:	call   QWORD PTR [rip+0x1aa6c]        # 0x14002b8b0
   140010e44:	lea    rcx,[rsp+0x80]
   140010e4c:	call   QWORD PTR [rip+0x1aa46]        # 0x14002b898
   140010e52:	mov    rdx,QWORD PTR [rsp+0x150]
   140010e5a:	cmp    DWORD PTR [rdx+0x4],r12d
   140010e5e:	je     0x140010ed4
   140010e60:	xor    eax,eax
   140010e62:	mov    rcx,r14
   140010e65:	mov    rdi,rsi
   140010e68:	repnz scas al,BYTE PTR es:[rdi]
   140010e6a:	mov    QWORD PTR [rsp+0x68],rsi
   140010e6f:	lea    rdx,[rsp+0xf0]
   140010e77:	not    rcx
   140010e7a:	dec    rcx
   140010e7d:	mov    DWORD PTR [rsp+0x60],ecx
   140010e81:	lea    rcx,[rsp+0x150]
   140010e89:	movaps xmm0,XMMWORD PTR [rsp+0x60]
   140010e8e:	movdqa XMMWORD PTR [rsp+0xf0],xmm0
   140010e97:	call   QWORD PTR [rip+0x1a383]        # 0x14002b220
   140010e9d:	test   al,al
   140010e9f:	jne    0x140010ed4
   140010ea1:	lea    rdx,[rip+0x1c7b0]        # 0x14002d658
   140010ea8:	lea    rcx,[rsp+0x20]
   140010ead:	call   QWORD PTR [rip+0x1a6fd]        # 0x14002b5b0
   140010eb3:	lea    rdx,[rsp+0x150]
   140010ebb:	mov    rcx,rax
   140010ebe:	call   QWORD PTR [rip+0x1a6e4]        # 0x14002b5a8
   140010ec4:	lea    rdx,[rip+0x1c7a1]        # 0x14002d66c
   140010ecb:	mov    rcx,rax
   140010ece:	call   QWORD PTR [rip+0x1a6dc]        # 0x14002b5b0
   140010ed4:	lea    rdx,[rip+0x1c779]        # 0x14002d654
   140010edb:	lea    rcx,[rsp+0x20]
   140010ee0:	call   QWORD PTR [rip+0x1a6ca]        # 0x14002b5b0
   140010ee6:	lea    rdx,[rsp+0x78]
   140010eeb:	mov    rcx,rbx
   140010eee:	call   0x140008940
   140010ef3:	mov    rdi,rax
   140010ef6:	mov    rdx,QWORD PTR [rax]
   140010ef9:	mov    QWORD PTR [rsp+0x30],rdx
   140010efe:	mov    ecx,DWORD PTR [rdx]
   140010f00:	test   ecx,ecx
   140010f02:	je     0x140010f0f
   140010f04:	cmp    ecx,0xffffffff
   140010f07:	je     0x140010f79
   140010f09:	lock add DWORD PTR [rdx],0x1
   140010f0d:	jmp    0x140010f74
   140010f0f:	mov    edx,DWORD PTR [rdx+0x4]
   140010f12:	lea    rcx,[rsp+0x30]
   140010f17:	call   QWORD PTR [rip+0x1a93b]        # 0x14002b858
   140010f1d:	mov    rdx,QWORD PTR [rsp+0x30]
   140010f22:	mov    rcx,QWORD PTR [rdi]
   140010f25:	movsxd rax,DWORD PTR [rdx+0xc]
   140010f29:	lea    rsi,[rdx+rax*8+0x10]
   140010f2e:	movsxd rax,DWORD PTR [rcx+0x8]
   140010f32:	lea    rbx,[rcx+rax*8+0x10]
   140010f37:	movsxd rax,DWORD PTR [rdx+0x8]
   140010f3b:	lea    rdi,[rdx+rax*8+0x10]
   140010f40:	cmp    rdi,rsi
   140010f43:	je     0x140010f79
   140010f45:	mov    ecx,0x78
   140010f4a:	call   0x14002952a
   140010f4f:	test   rax,rax
   140010f52:	je     0x140010f61
   140010f54:	mov    rdx,QWORD PTR [rbx]
   140010f57:	mov    rcx,rax
   140010f5a:	call   0x1400020d0
   140010f5f:	jmp    0x140010f64
   140010f61:	mov    rax,r12
   140010f64:	mov    QWORD PTR [rdi],rax
   140010f67:	add    rdi,0x8
   140010f6b:	add    rbx,0x8
   140010f6f:	cmp    rdi,rsi
   140010f72:	jne    0x140010f45
   140010f74:	mov    rdx,QWORD PTR [rsp+0x30]
   140010f79:	mov    rsi,QWORD PTR [rsp+0x78]
   140010f7e:	mov    DWORD PTR [rsp+0x38],r12d
   140010f83:	movsxd rax,DWORD PTR [rdx+0x8]
   140010f87:	lea    rcx,[rdx+rax*8+0x10]
   140010f8c:	mov    QWORD PTR [rsp+0x40],rcx
   140010f91:	movsxd rax,DWORD PTR [rdx+0xc]
   140010f95:	lea    rcx,[rdx+rax*8+0x10]
   140010f9a:	mov    QWORD PTR [rsp+0x48],rcx
   140010f9f:	mov    eax,DWORD PTR [rsi]
   140010fa1:	test   eax,eax
   140010fa3:	je     0x140010fc0
   140010fa5:	cmp    eax,0xffffffff
   140010fa8:	je     0x140011010
   140010faa:	mov    eax,r14d
   140010fad:	lock xadd DWORD PTR [rsi],eax
   140010fb1:	add    eax,0xffffffff
   140010fb4:	setne  al
   140010fb7:	test   al,al
   140010fb9:	jne    0x140011010
   140010fbb:	mov    rsi,QWORD PTR [rsp+0x78]
   140010fc0:	movsxd rax,DWORD PTR [rsi+0xc]
   140010fc4:	lea    rdi,[rsi+rax*8+0x10]
   140010fc9:	movsxd rax,DWORD PTR [rsi+0x8]
   140010fcd:	lea    rbp,[rsi+rax*8+0x10]
   140010fd2:	cmp    rbp,rdi
   140010fd5:	je     0x140011002
   140010fd7:	nop    WORD PTR [rax+rax*1+0x0]
   140010fe0:	mov    rbx,QWORD PTR [rdi-0x8]
   140010fe4:	sub    rdi,0x8
   140010fe8:	test   rbx,rbx
   140010feb:	je     0x140010ffd
   140010fed:	mov    rcx,rbx
   140010ff0:	call   0x140001ea0
   140010ff5:	mov    rcx,rbx
   140010ff8:	call   0x140029524
   140010ffd:	cmp    rdi,rbp
   140011000:	jne    0x140010fe0
   140011002:	mov    rcx,rsi
   140011005:	call   QWORD PTR [rip+0x1a865]        # 0x14002b870
   14001100b:	nop    DWORD PTR [rax+rax*1+0x0]
   140011010:	mov    eax,DWORD PTR [rsp+0x38]
   140011014:	inc    DWORD PTR [rsp+0x38]
   140011018:	test   eax,eax
   14001101a:	jne    0x14001102d
   14001101c:	mov    rax,QWORD PTR [rsp+0x48]
   140011021:	cmp    QWORD PTR [rsp+0x40],rax
   140011026:	je     0x14001102d
   140011028:	mov    r13b,0x1
   14001102b:	jmp    0x140011030
   14001102d:	xor    r13b,r13b
   140011030:	test   r12b,0x2
   140011034:	je     0x1400110ab
   140011036:	mov    rsi,QWORD PTR [rsp+0xb0]
   14001103e:	and    r12d,0xfffffffd
   140011042:	mov    eax,DWORD PTR [rsi]
   140011044:	test   eax,eax
   140011046:	je     0x140011066
   140011048:	cmp    eax,0xffffffff
   14001104b:	je     0x1400110ab
   14001104d:	mov    eax,r14d
   140011050:	lock xadd DWORD PTR [rsi],eax
   140011054:	add    eax,0xffffffff
   140011057:	setne  al
   14001105a:	test   al,al
   14001105c:	jne    0x1400110ab
   14001105e:	mov    rsi,QWORD PTR [rsp+0xb0]
   140011066:	movsxd rax,DWORD PTR [rsi+0xc]
   14001106a:	lea    rdi,[rsi+rax*8+0x10]
   14001106f:	movsxd rax,DWORD PTR [rsi+0x8]
   140011073:	lea    rbp,[rsi+rax*8+0x10]
   140011078:	cmp    rbp,rdi
   14001107b:	je     0x1400110a2
   14001107d:	nop    DWORD PTR [rax]
   140011080:	mov    rbx,QWORD PTR [rdi-0x8]
   140011084:	sub    rdi,0x8
   140011088:	test   rbx,rbx
   14001108b:	je     0x14001109d
   14001108d:	mov    rcx,rbx
   140011090:	call   0x140001ea0
   140011095:	mov    rcx,rbx
   140011098:	call   0x140029524
   14001109d:	cmp    rdi,rbp
   1400110a0:	jne    0x140011080
   1400110a2:	mov    rcx,rsi
   1400110a5:	call   QWORD PTR [rip+0x1a7c5]        # 0x14002b870
   1400110ab:	test   r13b,r13b
   1400110ae:	je     0x1400115f7
   1400110b4:	mov    rax,QWORD PTR [rsp+0x40]
   1400110b9:	mov    r15,QWORD PTR [rax]
   1400110bc:	test   r12b,0x4
   1400110c0:	je     0x140011140
   1400110c6:	mov    rsi,QWORD PTR [rsp+0xa8]
   1400110ce:	and    r12d,0xfffffffb
   1400110d2:	mov    eax,DWORD PTR [rsi]
   1400110d4:	test   eax,eax
   1400110d6:	je     0x1400110f6
   1400110d8:	cmp    eax,0xffffffff
   1400110db:	je     0x140011140
   1400110dd:	mov    eax,r14d
   1400110e0:	lock xadd DWORD PTR [rsi],eax
   1400110e4:	add    eax,0xffffffff
   1400110e7:	setne  al
   1400110ea:	test   al,al
   1400110ec:	jne    0x140011140
   1400110ee:	mov    rsi,QWORD PTR [rsp+0xa8]
   1400110f6:	movsxd rax,DWORD PTR [rsi+0xc]
   1400110fa:	lea    rdi,[rsi+rax*8+0x10]
   1400110ff:	movsxd rax,DWORD PTR [rsi+0x8]
   140011103:	lea    rbp,[rsi+rax*8+0x10]
   140011108:	cmp    rbp,rdi
   14001110b:	je     0x140011132
   14001110d:	nop    DWORD PTR [rax]
   140011110:	mov    rbx,QWORD PTR [rdi-0x8]
   140011114:	sub    rdi,0x8
   140011118:	test   rbx,rbx
   14001111b:	je     0x14001112d
   14001111d:	mov    rcx,rbx
   140011120:	call   0x140001ea0
   140011125:	mov    rcx,rbx
   140011128:	call   0x140029524
   14001112d:	cmp    rdi,rbp
   140011130:	jne    0x140011110
   140011132:	mov    rcx,rsi
   140011135:	call   QWORD PTR [rip+0x1a735]        # 0x14002b870
   14001113b:	nop    DWORD PTR [rax+rax*1+0x0]
   140011140:	mov    r13d,DWORD PTR [rsp+0x38]
   140011145:	test   r12b,0x10
   140011149:	je     0x1400111bd
   14001114b:	mov    rsi,QWORD PTR [rsp+0xa0]
   140011153:	and    r12d,0xffffffef
   140011157:	mov    eax,DWORD PTR [rsi]
   140011159:	test   eax,eax
   14001115b:	je     0x140011173
   14001115d:	cmp    eax,0xffffffff
   140011160:	je     0x1400111bd
   140011162:	mov    eax,r14d
   140011165:	lock xadd DWORD PTR [rsi],eax
   140011169:	add    eax,0xffffffff
   14001116c:	setne  al
   14001116f:	test   al,al
   140011171:	jne    0x1400111bd
   140011173:	mov    rsi,QWORD PTR [rsp+0xa0]
   14001117b:	movsxd rax,DWORD PTR [rsi+0xc]
   14001117f:	lea    rdi,[rsi+rax*8+0x10]
   140011184:	movsxd rax,DWORD PTR [rsi+0x8]
   140011188:	lea    rbp,[rsi+rax*8+0x10]
   14001118d:	cmp    rbp,rdi
   140011190:	je     0x1400111b4
   140011192:	mov    rbx,QWORD PTR [rdi-0x8]
   140011196:	sub    rdi,0x8
   14001119a:	test   rbx,rbx
   14001119d:	je     0x1400111af
   14001119f:	mov    rcx,rbx
   1400111a2:	call   0x140001ea0
   1400111a7:	mov    rcx,rbx
   1400111aa:	call   0x140029524
   1400111af:	cmp    rdi,rbp
   1400111b2:	jne    0x140011192
   1400111b4:	mov    rcx,rsi
   1400111b7:	call   QWORD PTR [rip+0x1a6b3]        # 0x14002b870
   1400111bd:	test   r13d,r13d
   1400111c0:	je     0x140011567
   1400111c6:	lea    rdx,[rip+0x1c47b]        # 0x14002d648
   1400111cd:	lea    rcx,[rsp+0x20]
   1400111d2:	call   QWORD PTR [rip+0x1a3d8]        # 0x14002b5b0
   1400111d8:	lea    rdx,[r15+0x10]
   1400111dc:	lea    rcx,[rsp+0x70]
   1400111e1:	call   QWORD PTR [rip+0x1a6b9]        # 0x14002b8a0
   1400111e7:	lea    rdx,[rsp+0x70]
   1400111ec:	lea    rcx,[rsp+0x98]
   1400111f4:	call   0x1400103b0
   1400111f9:	lea    rdx,[rip+0x1c438]        # 0x14002d638
   140011200:	lea    rcx,[rsp+0x20]
   140011205:	mov    rdi,rax
   140011208:	call   QWORD PTR [rip+0x1a3a2]        # 0x14002b5b0
   14001120e:	mov    rdx,rdi
   140011211:	mov    rcx,rax
   140011214:	call   QWORD PTR [rip+0x1a38e]        # 0x14002b5a8
   14001121a:	lea    rdx,[rip+0x1c407]        # 0x14002d628
   140011221:	mov    rcx,rax
   140011224:	call   QWORD PTR [rip+0x1a386]        # 0x14002b5b0
   14001122a:	lea    rcx,[rsp+0x98]
   140011232:	call   QWORD PTR [rip+0x1a660]        # 0x14002b898
   140011238:	lea    rcx,[rsp+0x70]
   14001123d:	call   QWORD PTR [rip+0x1a655]        # 0x14002b898
   140011243:	lea    rdx,[rip+0x1c3d6]        # 0x14002d620
   14001124a:	xor    eax,eax
   14001124c:	mov    rdi,rdx
   14001124f:	mov    QWORD PTR [rsp+0xd8],rdx
   140011257:	mov    rcx,r14
   14001125a:	repnz scas al,BYTE PTR es:[rdi]
   14001125c:	lea    rdx,[rsp+0xe0]
   140011264:	not    rcx
   140011267:	dec    rcx
   14001126a:	mov    DWORD PTR [rsp+0xd0],ecx
   140011271:	lea    rcx,[rsp+0x50]
   140011276:	movaps xmm0,XMMWORD PTR [rsp+0xd0]
   14001127e:	movdqa XMMWORD PTR [rsp+0xe0],xmm0
   140011287:	call   QWORD PTR [rip+0x1a5d3]        # 0x14002b860
   14001128d:	mov    rax,QWORD PTR [r15+0x50]
   140011291:	mov    QWORD PTR [rsp+0x168],rax
   140011299:	mov    ecx,DWORD PTR [rax]
   14001129b:	test   ecx,ecx
   14001129d:	je     0x1400112aa
   14001129f:	cmp    ecx,0xffffffff
   1400112a2:	je     0x140011305
   1400112a4:	lock add DWORD PTR [rax],0x1
   1400112a8:	jmp    0x140011305
   1400112aa:	mov    edx,DWORD PTR [rax+0x4]
   1400112ad:	lea    rcx,[rsp+0x168]
   1400112b5:	call   QWORD PTR [rip+0x1a59d]        # 0x14002b858
   1400112bb:	mov    rdx,QWORD PTR [rsp+0x168]
   1400112c3:	mov    rcx,QWORD PTR [r15+0x50]
   1400112c7:	movsxd rax,DWORD PTR [rdx+0xc]
   1400112cb:	lea    rsi,[rdx+rax*8+0x10]
   1400112d0:	movsxd rax,DWORD PTR [rcx+0x8]
   1400112d4:	lea    rbx,[rcx+rax*8+0x10]
   1400112d9:	movsxd rax,DWORD PTR [rdx+0x8]
   1400112dd:	lea    rdi,[rdx+rax*8+0x10]
   1400112e2:	cmp    rdi,rsi
   1400112e5:	je     0x140011305
   1400112e7:	test   rdi,rdi
   1400112ea:	je     0x1400112f8
   1400112ec:	mov    rdx,rbx
   1400112ef:	mov    rcx,rdi
   1400112f2:	call   QWORD PTR [rip+0x1a5a8]        # 0x14002b8a0
   1400112f8:	add    rdi,0x8
   1400112fc:	add    rbx,0x8
   140011300:	cmp    rdi,rsi
   140011303:	jne    0x1400112e7
   140011305:	mov    rax,QWORD PTR [rsp+0x50]
   14001130a:	lea    rcx,[rsp+0x50]
   14001130f:	mov    edi,DWORD PTR [rax+0x4]
   140011312:	call   QWORD PTR [rip+0x1a5a8]        # 0x14002b8c0
   140011318:	lea    rdx,[rsp+0x168]
   140011320:	lea    rcx,[rsp+0x58]
   140011325:	mov    r8,rax
   140011328:	mov    r9d,edi
   14001132b:	call   QWORD PTR [rip+0x1a587]        # 0x14002b8b8
   140011331:	mov    rbx,QWORD PTR [rsp+0x168]
   140011339:	mov    eax,DWORD PTR [rbx]
   14001133b:	test   eax,eax
   14001133d:	je     0x14001135d
   14001133f:	cmp    eax,0xffffffff
   140011342:	je     0x14001139b
   140011344:	mov    eax,r14d
   140011347:	lock xadd DWORD PTR [rbx],eax
   14001134b:	add    eax,0xffffffff
   14001134e:	setne  al
   140011351:	test   al,al
   140011353:	jne    0x14001139b
   140011355:	mov    rbx,QWORD PTR [rsp+0x168]
   14001135d:	movsxd rax,DWORD PTR [rbx+0xc]
   140011361:	lea    rdi,[rbx+rax*8+0x10]
   140011366:	movsxd rax,DWORD PTR [rbx+0x8]
   14001136a:	lea    rsi,[rbx+rax*8+0x10]
   14001136f:	cmp    rsi,rdi
   140011372:	je     0x140011392
   140011374:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140011380:	sub    rdi,0x8
   140011384:	mov    rcx,rdi
   140011387:	call   QWORD PTR [rip+0x1a50b]        # 0x14002b898
   14001138d:	cmp    rdi,rsi
   140011390:	jne    0x140011380
   140011392:	mov    rcx,rbx
   140011395:	call   QWORD PTR [rip+0x1a4d5]        # 0x14002b870
   14001139b:	lea    rcx,[rsp+0x50]
   1400113a0:	call   QWORD PTR [rip+0x1a4f2]        # 0x14002b898
   1400113a6:	lea    rcx,[rsp+0x58]
   1400113ab:	mov    r9d,0x1
   1400113b1:	mov    r8d,0x2762
   1400113b7:	mov    edx,0x9c
   1400113bc:	call   QWORD PTR [rip+0x1a19e]        # 0x14002b560
   1400113c2:	lea    rdx,[rsp+0x58]
   1400113c7:	lea    rcx,[rsp+0xb8]
   1400113cf:	call   0x1400103b0
   1400113d4:	lea    rdx,[rip+0x1c235]        # 0x14002d610
   1400113db:	lea    rcx,[rsp+0x20]
   1400113e0:	mov    rdi,rax
   1400113e3:	call   QWORD PTR [rip+0x1a1c7]        # 0x14002b5b0
   1400113e9:	mov    rdx,rdi
   1400113ec:	mov    rcx,rax
   1400113ef:	call   QWORD PTR [rip+0x1a1b3]        # 0x14002b5a8
   1400113f5:	lea    rdx,[rip+0x1c204]        # 0x14002d600
   1400113fc:	mov    rcx,rax
   1400113ff:	call   QWORD PTR [rip+0x1a1ab]        # 0x14002b5b0
   140011405:	lea    rcx,[rsp+0xb8]
   14001140d:	call   QWORD PTR [rip+0x1a485]        # 0x14002b898
   140011413:	lea    rdx,[r15+0x20]
   140011417:	lea    rcx,[rsp+0x90]
   14001141f:	call   QWORD PTR [rip+0x1a47b]        # 0x14002b8a0
   140011425:	mov    rcx,QWORD PTR [rsp+0x90]
   14001142d:	cmp    DWORD PTR [rcx+0x4],0x0
   140011431:	lea    rcx,[rsp+0x90]
   140011439:	setne  dil
   14001143d:	call   QWORD PTR [rip+0x1a455]        # 0x14002b898
   140011443:	test   dil,dil
   140011446:	je     0x1400114bc
   140011448:	lea    rdx,[r15+0x20]
   14001144c:	lea    rcx,[rsp+0x88]
   140011454:	call   QWORD PTR [rip+0x1a446]        # 0x14002b8a0
   14001145a:	lea    rdx,[rsp+0x88]
   140011462:	lea    rcx,[rsp+0xc8]
   14001146a:	call   0x1400103b0
   14001146f:	lea    rdx,[rip+0x1c172]        # 0x14002d5e8
   140011476:	lea    rcx,[rsp+0x20]
   14001147b:	mov    rdi,rax
   14001147e:	call   QWORD PTR [rip+0x1a12c]        # 0x14002b5b0
   140011484:	mov    rdx,rdi
   140011487:	mov    rcx,rax
   14001148a:	call   QWORD PTR [rip+0x1a118]        # 0x14002b5a8
   140011490:	lea    rdx,[rip+0x1c141]        # 0x14002d5d8
   140011497:	mov    rcx,rax
   14001149a:	call   QWORD PTR [rip+0x1a110]        # 0x14002b5b0
   1400114a0:	lea    rcx,[rsp+0xc8]
   1400114a8:	call   QWORD PTR [rip+0x1a3ea]        # 0x14002b898
   1400114ae:	lea    rcx,[rsp+0x88]
   1400114b6:	call   QWORD PTR [rip+0x1a3dc]        # 0x14002b898
   1400114bc:	lea    rdx,[rip+0x1c105]        # 0x14002d5c8
   1400114c3:	lea    rcx,[rsp+0x20]
   1400114c8:	call   QWORD PTR [rip+0x1a0e2]        # 0x14002b5b0
   1400114ce:	lea    rcx,[rsp+0x58]
   1400114d3:	call   QWORD PTR [rip+0x1a3bf]        # 0x14002b898
   1400114d9:	dec    DWORD PTR [rsp+0x38]
   1400114dd:	test   r12b,0x8
   1400114e1:	je     0x140011140
   1400114e7:	mov    rsi,QWORD PTR [rsp+0xc0]
   1400114ef:	and    r12d,0xfffffff7
   1400114f3:	mov    eax,DWORD PTR [rsi]
   1400114f5:	test   eax,eax
   1400114f7:	je     0x140011517
   1400114f9:	cmp    eax,0xffffffff
   1400114fc:	je     0x140011140
   140011502:	mov    eax,r14d
   140011505:	lock xadd DWORD PTR [rsi],eax
   140011509:	add    eax,0xffffffff
   14001150c:	setne  al
   14001150f:	test   al,al
   140011511:	jne    0x140011140
   140011517:	mov    rsi,QWORD PTR [rsp+0xc0]
   14001151f:	movsxd rax,DWORD PTR [rsi+0xc]
   140011523:	lea    rdi,[rsi+rax*8+0x10]
   140011528:	movsxd rax,DWORD PTR [rsi+0x8]
   14001152c:	lea    rbp,[rsi+rax*8+0x10]
   140011531:	cmp    rbp,rdi
   140011534:	je     0x140011132
   14001153a:	nop    WORD PTR [rax+rax*1+0x0]
   140011540:	mov    rbx,QWORD PTR [rdi-0x8]
   140011544:	sub    rdi,0x8
   140011548:	test   rbx,rbx
   14001154b:	je     0x14001155d
   14001154d:	mov    rcx,rbx
   140011550:	call   0x140001ea0
   140011555:	mov    rcx,rbx
   140011558:	call   0x140029524
   14001155d:	cmp    rdi,rbp
   140011560:	jne    0x140011540
   140011562:	jmp    0x140011132
   140011567:	add    QWORD PTR [rsp+0x40],0x8
   14001156d:	test   r12b,0x1
   140011571:	je     0x140011010
   140011577:	mov    rsi,QWORD PTR [rsp+0x60]
   14001157c:	and    r12d,0xfffffffe
   140011580:	mov    eax,DWORD PTR [rsi]
   140011582:	test   eax,eax
   140011584:	je     0x1400115a9
   140011586:	cmp    eax,0xffffffff
   140011589:	je     0x140011010
   14001158f:	mov    eax,r14d
   140011592:	lock xadd DWORD PTR [rsi],eax
   140011596:	add    eax,0xffffffff
   140011599:	setne  al
   14001159c:	test   al,al
   14001159e:	jne    0x140011010
   1400115a4:	mov    rsi,QWORD PTR [rsp+0x60]
   1400115a9:	movsxd rax,DWORD PTR [rsi+0xc]
   1400115ad:	lea    rdi,[rsi+rax*8+0x10]
   1400115b2:	movsxd rax,DWORD PTR [rsi+0x8]
   1400115b6:	lea    rbp,[rsi+rax*8+0x10]
   1400115bb:	cmp    rbp,rdi
   1400115be:	je     0x140011002
   1400115c4:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400115d0:	mov    rbx,QWORD PTR [rdi-0x8]
   1400115d4:	sub    rdi,0x8
   1400115d8:	test   rbx,rbx
   1400115db:	je     0x1400115ed
   1400115dd:	mov    rcx,rbx
   1400115e0:	call   0x140001ea0
   1400115e5:	mov    rcx,rbx
   1400115e8:	call   0x140029524
   1400115ed:	cmp    rdi,rbp
   1400115f0:	jne    0x1400115d0
   1400115f2:	jmp    0x140011002
   1400115f7:	mov    rsi,QWORD PTR [rsp+0x30]
   1400115fc:	mov    eax,DWORD PTR [rsi]
   1400115fe:	test   eax,eax
   140011600:	je     0x14001161c
   140011602:	cmp    eax,0xffffffff
   140011605:	je     0x14001165e
   140011607:	lock xadd DWORD PTR [rsi],r14d
   14001160c:	add    r14d,0xffffffff
   140011610:	setne  al
   140011613:	test   al,al
   140011615:	jne    0x14001165e
   140011617:	mov    rsi,QWORD PTR [rsp+0x30]
   14001161c:	movsxd rax,DWORD PTR [rsi+0xc]
   140011620:	lea    rdi,[rsi+rax*8+0x10]
   140011625:	movsxd rax,DWORD PTR [rsi+0x8]
   140011629:	lea    rbp,[rsi+rax*8+0x10]
   14001162e:	cmp    rbp,rdi
   140011631:	je     0x140011655
   140011633:	mov    rbx,QWORD PTR [rdi-0x8]
   140011637:	sub    rdi,0x8
   14001163b:	test   rbx,rbx
   14001163e:	je     0x140011650
   140011640:	mov    rcx,rbx
   140011643:	call   0x140001ea0
   140011648:	mov    rcx,rbx
   14001164b:	call   0x140029524
   140011650:	cmp    rdi,rbp
   140011653:	jne    0x140011633
   140011655:	mov    rcx,rsi
   140011658:	call   QWORD PTR [rip+0x1a212]        # 0x14002b870
   14001165e:	lea    rdx,[rip+0x1bf5b]        # 0x14002d5c0
   140011665:	lea    rcx,[rsp+0x20]
   14001166a:	call   QWORD PTR [rip+0x19f40]        # 0x14002b5b0
   140011670:	lea    rcx,[rsp+0x150]
   140011678:	call   QWORD PTR [rip+0x1a21a]        # 0x14002b898
   14001167e:	lea    rcx,[rsp+0x20]
   140011683:	call   QWORD PTR [rip+0x19f17]        # 0x14002b5a0
   140011689:	mov    rbx,QWORD PTR [rsp+0x158]
   140011691:	mov    al,0x1
   140011693:	add    rsp,0x110
   14001169a:	pop    r15
   14001169c:	pop    r14
   14001169e:	pop    r13
   1400116a0:	pop    r12
   1400116a2:	pop    rdi
   1400116a3:	pop    rsi
   1400116a4:	pop    rbp
   1400116a5:	ret    
   1400116a6:	int3   
   1400116a7:	int3   
   1400116a8:	int3   
   1400116a9:	int3   
   1400116aa:	int3   
   1400116ab:	int3   
   1400116ac:	int3   
   1400116ad:	int3   
   1400116ae:	int3   
   1400116af:	int3   
   1400116b0:	mov    QWORD PTR [rsp+0x10],rbx
   1400116b5:	push   rdi
   1400116b6:	sub    rsp,0x70
   1400116ba:	lea    rcx,[rsp+0x40]
   1400116bf:	call   QWORD PTR [rip+0x1a1cb]        # 0x14002b890
   1400116c5:	lea    rcx,[rsp+0x48]
   1400116ca:	call   QWORD PTR [rip+0x1a1c0]        # 0x14002b890
   1400116d0:	or     rcx,0xffffffffffffffff
   1400116d4:	lea    rdx,[rip+0x1bfd9]        # 0x14002d6b4
   1400116db:	mov    QWORD PTR [rsp+0x38],rdx
   1400116e0:	mov    rdi,rdx
   1400116e3:	xor    eax,eax
   1400116e5:	repnz scas al,BYTE PTR es:[rdi]
   1400116e7:	xor    ebx,ebx
   1400116e9:	lea    rdx,[rsp+0x30]
   1400116ee:	not    rcx
   1400116f1:	mov    QWORD PTR [rsp+0x50],rbx
   1400116f6:	mov    QWORD PTR [rsp+0x58],rbx
   1400116fb:	dec    rcx
   1400116fe:	mov    DWORD PTR [rsp+0x64],0xffffffff
   140011706:	mov    DWORD PTR [rsp+0x30],ecx
   14001170a:	lea    rcx,[rsp+0x40]
   14001170f:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140011714:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   14001171a:	call   QWORD PTR [rip+0x19df0]        # 0x14002b510
   140011720:	lea    r8,[rip+0x1bf71]        # 0x14002d698
   140011727:	lea    rdx,[rip+0x1bc82]        # 0x14002d3b0
   14001172e:	lea    rcx,[rsp+0x80]
   140011736:	xor    r9d,r9d
   140011739:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140011741:	call   QWORD PTR [rip+0x1a161]        # 0x14002b8a8
   140011747:	lea    rdx,[rsp+0x80]
   14001174f:	lea    rcx,[rsp+0x48]
   140011754:	call   QWORD PTR [rip+0x1a156]        # 0x14002b8b0
   14001175a:	lea    rcx,[rsp+0x80]
   140011762:	call   QWORD PTR [rip+0x1a130]        # 0x14002b898
   140011768:	lea    rax,[rip+0xfffffffffffff531]        # 0x140010ca0
   14001176f:	lea    rcx,[rsp+0x40]
   140011774:	mov    QWORD PTR [rsp+0x50],rax
   140011779:	lea    rax,[rip+0xfffffffffffff5a0]        # 0x140010d20
   140011780:	mov    DWORD PTR [rsp+0x60],ebx
   140011784:	mov    QWORD PTR [rsp+0x58],rax
   140011789:	mov    DWORD PTR [rsp+0x64],ebx
   14001178d:	call   0x140008520
   140011792:	lea    rcx,[rsp+0x48]
   140011797:	call   QWORD PTR [rip+0x1a0fb]        # 0x14002b898
   14001179d:	lea    rcx,[rsp+0x40]
   1400117a2:	call   QWORD PTR [rip+0x1a0f0]        # 0x14002b898
   1400117a8:	lea    eax,[rbx+0x1]
   1400117ab:	mov    rbx,QWORD PTR [rsp+0x88]
   1400117b3:	add    rsp,0x70
   1400117b7:	pop    rdi
   1400117b8:	ret    
   1400117b9:	int3   
   1400117ba:	int3   
   1400117bb:	int3   
   1400117bc:	int3   
   1400117bd:	int3   
   1400117be:	int3   
   1400117bf:	int3   
   1400117c0:	mov    QWORD PTR [rsp+0x10],rbx
   1400117c5:	mov    QWORD PTR [rsp+0x18],rbp
   1400117ca:	mov    QWORD PTR [rsp+0x20],rsi
   1400117cf:	push   rdi
   1400117d0:	sub    rsp,0x20
   1400117d4:	mov    rbp,rdx
   1400117d7:	mov    rsi,rcx
   1400117da:	call   QWORD PTR [rip+0x19ce8]        # 0x14002b4c8
   1400117e0:	mov    r8,QWORD PTR [rsi]
   1400117e3:	xor    edx,edx
   1400117e5:	or     ebx,0xffffffff
   1400117e8:	movsxd r10,DWORD PTR [r8+0x4]
   1400117ec:	mov    r11,rax
   1400117ef:	mov    r8,rdx
   1400117f2:	test   r10d,r10d
   1400117f5:	jle    0x140011881
   1400117fb:	mov    r9,rax
   1400117fe:	lea    ecx,[rbx+0x2]
   140011801:	movzx  eax,BYTE PTR [r8+r11*1]
   140011806:	cmp    al,0x7e
   140011808:	jne    0x140011816
   14001180a:	cmp    ecx,r10d
   14001180d:	jge    0x140011816
   14001180f:	inc    ecx
   140011811:	inc    r8
   140011814:	jmp    0x14001181b
   140011816:	cmp    al,0x7c
   140011818:	cmove  ebx,edx
   14001181b:	movzx  eax,BYTE PTR [r8+r11*1]
   140011820:	inc    r8
   140011823:	inc    r9
   140011826:	mov    BYTE PTR [r9-0x1],al
   14001182a:	inc    ecx
   14001182c:	inc    edx
   14001182e:	cmp    r8,r10
   140011831:	jl     0x140011801
   140011833:	test   ebx,ebx
   140011835:	js     0x140011881
   140011837:	sub    edx,ebx
   140011839:	lea    r8d,[rbx+0x1]
   14001183d:	mov    rcx,rsi
   140011840:	lea    r9d,[rdx-0x1]
   140011844:	lea    rdx,[rsp+0x30]
   140011849:	call   QWORD PTR [rip+0x19d99]        # 0x14002b5e8
   14001184f:	mov    edx,ebx
   140011851:	mov    rcx,rsi
   140011854:	call   QWORD PTR [rip+0x19d86]        # 0x14002b5e0
   14001185a:	mov    rdx,rsi
   14001185d:	mov    rcx,rbp
   140011860:	call   QWORD PTR [rip+0x199fa]        # 0x14002b260
   140011866:	lea    rdx,[rsp+0x30]
   14001186b:	mov    rcx,rsi
   14001186e:	call   QWORD PTR [rip+0x199ec]        # 0x14002b260
   140011874:	lea    rcx,[rsp+0x30]
   140011879:	call   QWORD PTR [rip+0x19949]        # 0x14002b1c8
   14001187f:	jmp    0x14001188a
   140011881:	mov    rcx,rsi
   140011884:	call   QWORD PTR [rip+0x19d56]        # 0x14002b5e0
   14001188a:	mov    rbx,QWORD PTR [rsp+0x38]
   14001188f:	mov    rbp,QWORD PTR [rsp+0x40]
   140011894:	mov    rsi,QWORD PTR [rsp+0x48]
   140011899:	add    rsp,0x20
   14001189d:	pop    rdi
   14001189e:	ret    
   14001189f:	int3   
   1400118a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400118a5:	push   rdi
   1400118a6:	sub    rsp,0x30
   1400118aa:	movzx  edi,r8b
   1400118ae:	mov    rbx,rcx
   1400118b1:	call   QWORD PTR [rip+0x19fe9]        # 0x14002b8a0
   1400118b7:	test   dil,dil
   1400118ba:	je     0x140011960
   1400118c0:	or     rcx,0xffffffffffffffff
   1400118c4:	lea    rdx,[rip+0x1be05]        # 0x14002d6d0
   1400118cb:	xor    eax,eax
   1400118cd:	mov    QWORD PTR [rsp+0x28],rdx
   1400118d2:	mov    rdi,rdx
   1400118d5:	mov    dl,0x7e
   1400118d7:	repnz scas al,BYTE PTR es:[rdi]
   1400118d9:	not    rcx
   1400118dc:	dec    rcx
   1400118df:	mov    DWORD PTR [rsp+0x20],ecx
   1400118e3:	lea    rcx,[rsp+0x50]
   1400118e8:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   1400118ed:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   1400118f3:	call   QWORD PTR [rip+0x19fcf]        # 0x14002b8c8
   1400118f9:	lea    r8,[rsp+0x20]
   1400118fe:	movzx  edx,WORD PTR [rax]
   140011901:	mov    r9d,0x1
   140011907:	mov    rcx,rbx
   14001190a:	call   QWORD PTR [rip+0x19ce0]        # 0x14002b5f0
   140011910:	or     rcx,0xffffffffffffffff
   140011914:	lea    rdx,[rip+0x1bdb1]        # 0x14002d6cc
   14001191b:	mov    QWORD PTR [rsp+0x28],rdx
   140011920:	mov    rdi,rdx
   140011923:	xor    eax,eax
   140011925:	repnz scas al,BYTE PTR es:[rdi]
   140011927:	mov    dl,0x7c
   140011929:	not    rcx
   14001192c:	dec    rcx
   14001192f:	mov    DWORD PTR [rsp+0x20],ecx
   140011933:	lea    rcx,[rsp+0x50]
   140011938:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14001193d:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140011943:	call   QWORD PTR [rip+0x19f7f]        # 0x14002b8c8
   140011949:	lea    r8,[rsp+0x20]
   14001194e:	movzx  edx,WORD PTR [rax]
   140011951:	mov    r9d,0x1
   140011957:	mov    rcx,rbx
   14001195a:	call   QWORD PTR [rip+0x19c90]        # 0x14002b5f0
   140011960:	mov    rax,rbx
   140011963:	mov    rbx,QWORD PTR [rsp+0x40]
   140011968:	add    rsp,0x30
   14001196c:	pop    rdi
   14001196d:	ret    
   14001196e:	int3   
   14001196f:	int3   
   140011970:	rex push rbp
   140011972:	push   rsi
   140011973:	sub    rsp,0x28
   140011977:	mov    rsi,rdx
   14001197a:	mov    rbp,rcx
   14001197d:	test   r8d,r8d
   140011980:	jns    0x1400119ae
   140011982:	mov    rax,QWORD PTR [rcx]
   140011985:	lea    rcx,[rsp+0x40]
   14001198a:	mov    DWORD PTR [rsp+0x50],0x0
   140011992:	mov    r9d,DWORD PTR [rax+0xc]
   140011996:	sub    r9d,DWORD PTR [rax+0x8]
   14001199a:	lea    rax,[rsp+0x50]
   14001199f:	add    r9d,r8d
   1400119a2:	cmovns rax,rcx
   1400119a6:	mov    DWORD PTR [rsp+0x40],r9d
   1400119ab:	mov    r8d,DWORD PTR [rax]
   1400119ae:	mov    rdx,QWORD PTR [rbp+0x0]
   1400119b2:	mov    QWORD PTR [rsp+0x48],rbx
   1400119b7:	mov    QWORD PTR [rsp+0x20],rdi
   1400119bc:	movsxd rcx,DWORD PTR [rdx+0xc]
   1400119c0:	movsxd r9,DWORD PTR [rdx+0x8]
   1400119c4:	mov    eax,ecx
   1400119c6:	sub    eax,r9d
   1400119c9:	cmp    r8d,eax
   1400119cc:	jge    0x140011a09
   1400119ce:	lea    rdi,[rdx+rcx*8+0x10]
   1400119d3:	lea    eax,[r8-0x1]
   1400119d7:	movsxd rcx,eax
   1400119da:	add    rcx,r9
   1400119dd:	lea    rbx,[rdx+rcx*8+0x18]
   1400119e2:	cmp    rbx,rdi
   1400119e5:	je     0x140011a09
   1400119e7:	nop    WORD PTR [rax+rax*1+0x0]
   1400119f0:	mov    rdx,rsi
   1400119f3:	mov    rcx,rbx
   1400119f6:	call   QWORD PTR [rip+0x1989c]        # 0x14002b298
   1400119fc:	test   al,al
   1400119fe:	jne    0x140011a1d
   140011a00:	add    rbx,0x8
   140011a04:	cmp    rbx,rdi
   140011a07:	jne    0x1400119f0
   140011a09:	or     eax,0xffffffff
   140011a0c:	mov    rdi,QWORD PTR [rsp+0x20]
   140011a11:	mov    rbx,QWORD PTR [rsp+0x48]
   140011a16:	add    rsp,0x28
   140011a1a:	pop    rsi
   140011a1b:	pop    rbp
   140011a1c:	ret    
   140011a1d:	mov    rdx,QWORD PTR [rbp+0x0]
   140011a21:	mov    rdi,QWORD PTR [rsp+0x20]
   140011a26:	movsxd rcx,DWORD PTR [rdx+0x8]
   140011a2a:	lea    rcx,[rcx*8+0x10]
   140011a32:	sub    rbx,rcx
   140011a35:	sub    rbx,rdx
   140011a38:	sar    rbx,0x3
   140011a3c:	mov    eax,ebx
   140011a3e:	mov    rbx,QWORD PTR [rsp+0x48]
   140011a43:	add    rsp,0x28
   140011a47:	pop    rsi
   140011a48:	pop    rbp
   140011a49:	ret    
   140011a4a:	int3   
   140011a4b:	int3   
   140011a4c:	int3   
   140011a4d:	int3   
   140011a4e:	int3   
   140011a4f:	int3   
   140011a50:	test   rdx,rdx
   140011a53:	je     0x140011a98
   140011a55:	mov    QWORD PTR [rsp+0x8],rbx
   140011a5a:	push   rdi
   140011a5b:	sub    rsp,0x20
   140011a5f:	mov    eax,DWORD PTR [rcx+0x8]
   140011a62:	mov    rbx,rdx
   140011a65:	mov    QWORD PTR [rdx],0x0
   140011a6c:	mov    DWORD PTR [rdx+0x8],eax
   140011a6f:	lea    rdx,[rcx+0x10]
   140011a73:	mov    rdi,rcx
   140011a76:	lea    rcx,[rbx+0x10]
   140011a7a:	call   QWORD PTR [rip+0x19e20]        # 0x14002b8a0
   140011a80:	lea    rdx,[rdi+0x18]
   140011a84:	lea    rcx,[rbx+0x18]
   140011a88:	call   QWORD PTR [rip+0x19952]        # 0x14002b3e0
   140011a8e:	mov    rbx,QWORD PTR [rsp+0x30]
   140011a93:	add    rsp,0x20
   140011a97:	pop    rdi
   140011a98:	repz ret 
   140011a9a:	int3   
   140011a9b:	int3   
   140011a9c:	int3   
   140011a9d:	int3   
   140011a9e:	int3   
   140011a9f:	int3   
   140011aa0:	mov    QWORD PTR [rsp+0x8],rbx
   140011aa5:	push   rbp
   140011aa6:	push   rsi
   140011aa7:	push   rdi
   140011aa8:	sub    rsp,0x20
   140011aac:	mov    r10,QWORD PTR [rdx]
   140011aaf:	movsxd rax,DWORD PTR [r8]
   140011ab2:	mov    rsi,rdx
   140011ab5:	movsxd r9,DWORD PTR [r10+0x8]
   140011ab9:	mov    rbp,rcx
   140011abc:	lea    rcx,[rsp+0x48]
   140011ac1:	add    r9,rax
   140011ac4:	mov    rdi,r8
   140011ac7:	lea    rdx,[r10+r9*8+0x10]
   140011acc:	call   QWORD PTR [rip+0x1990e]        # 0x14002b3e0
   140011ad2:	mov    ebx,0x1
   140011ad7:	lea    rcx,[rsp+0x48]
   140011adc:	mov    edx,ebx
   140011ade:	call   QWORD PTR [rip+0x19b24]        # 0x14002b608
   140011ae4:	cmp    al,0x20
   140011ae6:	jne    0x140011b03
   140011ae8:	nop    DWORD PTR [rax+rax*1+0x0]
   140011af0:	inc    ebx
   140011af2:	lea    rcx,[rsp+0x48]
   140011af7:	mov    edx,ebx
   140011af9:	call   QWORD PTR [rip+0x19b09]        # 0x14002b608
   140011aff:	cmp    al,0x20
   140011b01:	je     0x140011af0
   140011b03:	lea    rcx,[rsp+0x48]
   140011b08:	mov    edx,ebx
   140011b0a:	call   QWORD PTR [rip+0x19ad0]        # 0x14002b5e0
   140011b10:	mov    r11,QWORD PTR [rsi]
   140011b13:	mov    ecx,DWORD PTR [r11+0x8]
   140011b17:	mov    eax,DWORD PTR [r11+0xc]
   140011b1b:	sub    eax,ecx
   140011b1d:	cmp    DWORD PTR [rdi],eax
   140011b1f:	jge    0x140011bb7
   140011b25:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140011b30:	movsxd rax,DWORD PTR [rdi]
   140011b33:	movsxd rcx,ecx
   140011b36:	lea    rdx,[rsp+0x48]
   140011b3b:	add    rcx,rax
   140011b3e:	lea    rbx,[r11+rcx*8+0x10]
   140011b43:	mov    rcx,rbx
   140011b46:	call   QWORD PTR [rip+0x19ab4]        # 0x14002b600
   140011b4c:	mov    rcx,rbx
   140011b4f:	test   al,al
   140011b51:	je     0x140011b84
   140011b53:	mov    rax,QWORD PTR [rsp+0x48]
   140011b58:	lea    rdx,[rsp+0x50]
   140011b5d:	or     r9d,0xffffffff
   140011b61:	mov    r8d,DWORD PTR [rax+0x4]
   140011b65:	call   QWORD PTR [rip+0x19a7d]        # 0x14002b5e8
   140011b6b:	mov    rcx,rbp
   140011b6e:	mov    rdx,rax
   140011b71:	call   QWORD PTR [rip+0x19861]        # 0x14002b3d8
   140011b77:	lea    rcx,[rsp+0x50]
   140011b7c:	call   QWORD PTR [rip+0x19646]        # 0x14002b1c8
   140011b82:	jmp    0x140011b95
   140011b84:	lea    rdx,[rip+0x1bb49]        # 0x14002d6d4
   140011b8b:	call   QWORD PTR [rip+0x19a37]        # 0x14002b5c8
   140011b91:	test   eax,eax
   140011b93:	jne    0x140011bb7
   140011b95:	mov    dl,0xa
   140011b97:	mov    rcx,rbp
   140011b9a:	call   QWORD PTR [rip+0x19a58]        # 0x14002b5f8
   140011ba0:	inc    DWORD PTR [rdi]
   140011ba2:	mov    r11,QWORD PTR [rsi]
   140011ba5:	mov    ecx,DWORD PTR [r11+0x8]
   140011ba9:	mov    eax,DWORD PTR [r11+0xc]
   140011bad:	sub    eax,ecx
   140011baf:	cmp    DWORD PTR [rdi],eax
   140011bb1:	jl     0x140011b30
   140011bb7:	dec    DWORD PTR [rdi]
   140011bb9:	lea    rcx,[rsp+0x48]
   140011bbe:	call   QWORD PTR [rip+0x19604]        # 0x14002b1c8
   140011bc4:	mov    rbx,QWORD PTR [rsp+0x40]
   140011bc9:	add    rsp,0x20
   140011bcd:	pop    rdi
   140011bce:	pop    rsi
   140011bcf:	pop    rbp
   140011bd0:	ret    
   140011bd1:	int3   
   140011bd2:	int3   
   140011bd3:	int3   
   140011bd4:	int3   
   140011bd5:	int3   
   140011bd6:	int3   
   140011bd7:	int3   
   140011bd8:	int3   
   140011bd9:	int3   
   140011bda:	int3   
   140011bdb:	int3   
   140011bdc:	int3   
   140011bdd:	int3   
   140011bde:	int3   
   140011bdf:	int3   
   140011be0:	mov    QWORD PTR [rsp+0x8],rbx
   140011be5:	mov    QWORD PTR [rsp+0x18],rbp
   140011bea:	push   rsi
   140011beb:	push   rdi
   140011bec:	push   r12
   140011bee:	push   r13
   140011bf0:	push   r14
   140011bf2:	sub    rsp,0x20
   140011bf6:	mov    r14,QWORD PTR [rdx]
   140011bf9:	xor    ebx,ebx
   140011bfb:	movzx  r12d,r8b
   140011bff:	mov    r10d,DWORD PTR [r14+0xc]
   140011c03:	mov    rsi,rdx
   140011c06:	mov    rbp,rcx
   140011c09:	sub    r10d,DWORD PTR [r14+0x8]
   140011c0d:	mov    r8d,ebx
   140011c10:	mov    r9d,ebx
   140011c13:	movsxd r13,r10d
   140011c16:	mov    edi,ebx
   140011c18:	mov    r11,rbx
   140011c1b:	cmp    r13,0x2
   140011c1f:	jl     0x140011c5a
   140011c21:	movsxd rax,DWORD PTR [r14+0x8]
   140011c25:	lea    rdx,[r13-0x2]
   140011c29:	shr    rdx,1
   140011c2c:	lea    rcx,[r14+rax*8+0x18]
   140011c31:	inc    rdx
   140011c34:	lea    r11,[rdx+rdx*1]
   140011c38:	nop    DWORD PTR [rax+rax*1+0x0]
   140011c40:	mov    rax,QWORD PTR [rcx-0x8]
   140011c44:	add    rcx,0x10
   140011c48:	add    r8d,DWORD PTR [rax+0x4]
   140011c4c:	mov    rax,QWORD PTR [rcx-0x10]
   140011c50:	add    r9d,DWORD PTR [rax+0x4]
   140011c54:	sub    rdx,0x1
   140011c58:	jne    0x140011c40
   140011c5a:	cmp    r11,r13
   140011c5d:	jge    0x140011c6e
   140011c5f:	movsxd rax,DWORD PTR [r14+0x8]
   140011c63:	add    rax,r11
   140011c66:	mov    rax,QWORD PTR [r14+rax*8+0x10]
   140011c6b:	mov    edi,DWORD PTR [rax+0x4]
   140011c6e:	lea    eax,[r9+r8*1]
   140011c72:	add    edi,eax
   140011c74:	test   r10d,r10d
   140011c77:	jle    0x140011c7e
   140011c79:	lea    edi,[rdi+r10*1-0x1]
   140011c7e:	lea    rcx,[rsp+0x58]
   140011c83:	call   QWORD PTR [rip+0x1984f]        # 0x14002b4d8
   140011c89:	test   edi,edi
   140011c8b:	je     0x140011ce6
   140011c8d:	lea    rcx,[rsp+0x58]
   140011c92:	mov    edx,edi
   140011c94:	call   QWORD PTR [rip+0x19976]        # 0x14002b610
   140011c9a:	mov    rax,QWORD PTR [rsi]
   140011c9d:	mov    ecx,DWORD PTR [rax+0xc]
   140011ca0:	sub    ecx,DWORD PTR [rax+0x8]
   140011ca3:	test   ecx,ecx
   140011ca5:	jle    0x140011ce6
   140011ca7:	test   ebx,ebx
   140011ca9:	je     0x140011cba
   140011cab:	lea    rcx,[rsp+0x58]
   140011cb0:	movzx  edx,r12b
   140011cb4:	call   QWORD PTR [rip+0x1993e]        # 0x14002b5f8
   140011cba:	mov    rdx,QWORD PTR [rsi]
   140011cbd:	movsxd rax,ebx
   140011cc0:	movsxd rcx,DWORD PTR [rdx+0x8]
   140011cc4:	add    rcx,rax
   140011cc7:	lea    rdx,[rdx+rcx*8+0x10]
   140011ccc:	lea    rcx,[rsp+0x58]
   140011cd1:	call   QWORD PTR [rip+0x19701]        # 0x14002b3d8
   140011cd7:	mov    rax,QWORD PTR [rsi]
   140011cda:	inc    ebx
   140011cdc:	mov    ecx,DWORD PTR [rax+0xc]
   140011cdf:	sub    ecx,DWORD PTR [rax+0x8]
   140011ce2:	cmp    ebx,ecx
   140011ce4:	jl     0x140011ca7
   140011ce6:	lea    rdx,[rsp+0x58]
   140011ceb:	mov    rcx,rbp
   140011cee:	call   QWORD PTR [rip+0x196ec]        # 0x14002b3e0
   140011cf4:	lea    rcx,[rsp+0x58]
   140011cf9:	call   QWORD PTR [rip+0x194c9]        # 0x14002b1c8
   140011cff:	mov    rbx,QWORD PTR [rsp+0x50]
   140011d04:	mov    rax,rbp
   140011d07:	mov    rbp,QWORD PTR [rsp+0x60]
   140011d0c:	add    rsp,0x20
   140011d10:	pop    r14
   140011d12:	pop    r13
   140011d14:	pop    r12
   140011d16:	pop    rdi
   140011d17:	pop    rsi
   140011d18:	ret    
   140011d19:	int3   
   140011d1a:	int3   
   140011d1b:	int3   
   140011d1c:	int3   
   140011d1d:	int3   
   140011d1e:	int3   
   140011d1f:	int3   
   140011d20:	mov    QWORD PTR [rsp+0x10],rbx
   140011d25:	mov    QWORD PTR [rsp+0x18],rbp
   140011d2a:	push   rsi
   140011d2b:	push   rdi
   140011d2c:	push   r12
   140011d2e:	sub    rsp,0x20
   140011d32:	mov    rax,QWORD PTR [rcx]
   140011d35:	mov    r12,rdx
   140011d38:	mov    rbp,rcx
   140011d3b:	mov    r8,QWORD PTR [rax]
   140011d3e:	mov    rax,QWORD PTR [r8]
   140011d41:	mov    r9d,DWORD PTR [rax+0x4]
   140011d45:	mov    rax,QWORD PTR [rcx+0x8]
   140011d49:	mov    rcx,r12
   140011d4c:	mov    r8,QWORD PTR [rax]
   140011d4f:	mov    eax,DWORD PTR [r8+0x4]
   140011d53:	xor    r8d,r8d
   140011d56:	lea    edx,[rax+r9*1+0x1]
   140011d5b:	call   QWORD PTR [rip+0x19b17]        # 0x14002b878
   140011d61:	mov    rcx,r12
   140011d64:	call   QWORD PTR [rip+0x19b56]        # 0x14002b8c0
   140011d6a:	mov    rdi,QWORD PTR [rbp+0x0]
   140011d6e:	mov    rcx,QWORD PTR [rdi]
   140011d71:	mov    rsi,rax
   140011d74:	mov    rdx,QWORD PTR [rcx]
   140011d77:	movsxd rbx,DWORD PTR [rdx+0x4]
   140011d7b:	add    rbx,rbx
   140011d7e:	call   QWORD PTR [rip+0x19b3c]        # 0x14002b8c0
   140011d84:	mov    r8,rbx
   140011d87:	mov    rdx,rax
   140011d8a:	mov    rcx,rsi
   140011d8d:	call   0x14002951e
   140011d92:	mov    rax,QWORD PTR [rdi+0x8]
   140011d96:	lea    rcx,[rsp+0x40]
   140011d9b:	movzx  edx,BYTE PTR [rax]
   140011d9e:	add    rsi,rbx
   140011da1:	call   QWORD PTR [rip+0x19b21]        # 0x14002b8c8
   140011da7:	movzx  r11d,WORD PTR [rsp+0x40]
   140011dad:	mov    WORD PTR [rsi],r11w
   140011db1:	mov    rcx,QWORD PTR [rbp+0x8]
   140011db5:	mov    rax,QWORD PTR [rcx]
   140011db8:	movsxd rbx,DWORD PTR [rax+0x4]
   140011dbc:	add    rbx,rbx
   140011dbf:	call   QWORD PTR [rip+0x19afb]        # 0x14002b8c0
   140011dc5:	lea    rcx,[rsi+0x2]
   140011dc9:	mov    rdx,rax
   140011dcc:	mov    r8,rbx
   140011dcf:	call   0x14002951e
   140011dd4:	mov    rbx,QWORD PTR [rsp+0x48]
   140011dd9:	mov    rbp,QWORD PTR [rsp+0x50]
   140011dde:	mov    rax,r12
   140011de1:	add    rsp,0x20
   140011de5:	pop    r12
   140011de7:	pop    rdi
   140011de8:	pop    rsi
   140011de9:	ret    
   140011dea:	int3   
   140011deb:	int3   
   140011dec:	int3   
   140011ded:	int3   
   140011dee:	int3   
   140011def:	int3   
   140011df0:	mov    QWORD PTR [rsp+0x8],rbx
   140011df5:	mov    QWORD PTR [rsp+0x10],rbp
   140011dfa:	mov    QWORD PTR [rsp+0x18],rsi
   140011dff:	push   rdi
   140011e00:	push   r12
   140011e02:	push   r13
   140011e04:	sub    rsp,0x20
   140011e08:	mov    rsi,rcx
   140011e0b:	mov    rcx,QWORD PTR [rcx]
   140011e0e:	mov    r13d,edx
   140011e11:	mov    edx,0x8
   140011e16:	mov    rbp,r9
   140011e19:	mov    r12,r8
   140011e1c:	call   QWORD PTR [rip+0x194a6]        # 0x14002b2c8
   140011e22:	mov    rdi,QWORD PTR [rsp+0x60]
   140011e27:	mov    rbx,rax
   140011e2a:	test   rax,rax
   140011e2d:	je     0x140011e55
   140011e2f:	mov    rax,QWORD PTR [rdi]
   140011e32:	lea    rcx,[rbx+0x10]
   140011e36:	mov    rdx,r12
   140011e39:	mov    QWORD PTR [rbx],rax
   140011e3c:	mov    DWORD PTR [rbx+0x8],r13d
   140011e40:	call   QWORD PTR [rip+0x19a5a]        # 0x14002b8a0
   140011e46:	lea    rcx,[rbx+0x18]
   140011e4a:	mov    rdx,rbp
   140011e4d:	call   QWORD PTR [rip+0x1958d]        # 0x14002b3e0
   140011e53:	jmp    0x140011e57
   140011e55:	xor    ebx,ebx
   140011e57:	mov    rbp,QWORD PTR [rsp+0x48]
   140011e5c:	mov    QWORD PTR [rdi],rbx
   140011e5f:	mov    rcx,QWORD PTR [rsi]
   140011e62:	mov    rsi,QWORD PTR [rsp+0x50]
   140011e67:	inc    DWORD PTR [rcx+0x14]
   140011e6a:	mov    rax,rbx
   140011e6d:	mov    rbx,QWORD PTR [rsp+0x40]
   140011e72:	add    rsp,0x20
   140011e76:	pop    r13
   140011e78:	pop    r12
   140011e7a:	pop    rdi
   140011e7b:	ret    
   140011e7c:	int3   
   140011e7d:	int3   
   140011e7e:	int3   
   140011e7f:	int3   
   140011e80:	rex push rbx
   140011e82:	sub    rsp,0x20
   140011e86:	mov    rbx,rcx
   140011e89:	add    rcx,0x18
   140011e8d:	call   QWORD PTR [rip+0x19335]        # 0x14002b1c8
   140011e93:	lea    rcx,[rbx+0x10]
   140011e97:	add    rsp,0x20
   140011e9b:	pop    rbx
   140011e9c:	rex.W jmp QWORD PTR [rip+0x199f5]        # 0x14002b898
   140011ea3:	int3   
   140011ea4:	int3   
   140011ea5:	int3   
   140011ea6:	int3   
   140011ea7:	int3   
   140011ea8:	int3   
   140011ea9:	int3   
   140011eaa:	int3   
   140011eab:	int3   
   140011eac:	int3   
   140011ead:	int3   
   140011eae:	int3   
   140011eaf:	int3   
   140011eb0:	rex push rbx
   140011eb2:	push   rbp
   140011eb3:	push   rsi
   140011eb4:	push   rdi
   140011eb5:	push   r12
   140011eb7:	sub    rsp,0x30
   140011ebb:	mov    r12,rcx
   140011ebe:	or     rcx,0xffffffffffffffff
   140011ec2:	xor    eax,eax
   140011ec4:	mov    rsi,rdx
   140011ec7:	lea    rdi,[rip+0x1b80a]        # 0x14002d6d8
   140011ece:	mov    dl,0x5f
   140011ed0:	repnz scas al,BYTE PTR es:[rdi]
   140011ed2:	not    rcx
   140011ed5:	lea    rbp,[rcx-0x1]
   140011ed9:	lea    rcx,[rsp+0x60]
   140011ede:	call   QWORD PTR [rip+0x199e4]        # 0x14002b8c8
   140011ee4:	lea    rcx,[rsp+0x70]
   140011ee9:	mov    dl,0x2d
   140011eeb:	mov    rbx,rax
   140011eee:	call   QWORD PTR [rip+0x199d4]        # 0x14002b8c8
   140011ef4:	lea    rdx,[rsp+0x20]
   140011ef9:	mov    rcx,rsi
   140011efc:	mov    rdi,rax
   140011eff:	call   QWORD PTR [rip+0x1971b]        # 0x14002b620
   140011f05:	movzx  r8d,WORD PTR [rbx]
   140011f09:	movzx  edx,WORD PTR [rdi]
   140011f0c:	mov    rcx,rax
   140011f0f:	mov    r9d,0x1
   140011f15:	call   QWORD PTR [rip+0x19645]        # 0x14002b560
   140011f1b:	lea    rcx,[rsp+0x78]
   140011f20:	xor    r8d,r8d
   140011f23:	mov    rdx,QWORD PTR [rax]
   140011f26:	mov    rsi,rax
   140011f29:	mov    edx,DWORD PTR [rdx+0x4]
   140011f2c:	add    edx,ebp
   140011f2e:	call   QWORD PTR [rip+0x19944]        # 0x14002b878
   140011f34:	lea    rcx,[rsp+0x78]
   140011f39:	call   QWORD PTR [rip+0x19981]        # 0x14002b8c0
   140011f3f:	lea    rcx,[rip+0x1b792]        # 0x14002d6d8
   140011f46:	mov    edx,ebp
   140011f48:	mov    r8,rax
   140011f4b:	mov    rdi,rax
   140011f4e:	call   QWORD PTR [rip+0x192f4]        # 0x14002b248
   140011f54:	mov    rax,QWORD PTR [rsi]
   140011f57:	movsxd rdx,ebp
   140011f5a:	lea    rbx,[rdi+rdx*2]
   140011f5e:	movsxd rdi,DWORD PTR [rax+0x4]
   140011f62:	mov    rcx,rsi
   140011f65:	add    rdi,rdi
   140011f68:	call   QWORD PTR [rip+0x19952]        # 0x14002b8c0
   140011f6e:	mov    r8,rdi
   140011f71:	mov    rdx,rax
   140011f74:	mov    rcx,rbx
   140011f77:	call   0x14002951e
   140011f7c:	lea    rdx,[rsp+0x78]
   140011f81:	mov    rcx,r12
   140011f84:	call   QWORD PTR [rip+0x19916]        # 0x14002b8a0
   140011f8a:	lea    rcx,[rsp+0x78]
   140011f8f:	call   QWORD PTR [rip+0x19903]        # 0x14002b898
   140011f95:	lea    rcx,[rsp+0x20]
   140011f9a:	call   QWORD PTR [rip+0x198f8]        # 0x14002b898
   140011fa0:	mov    rax,r12
   140011fa3:	add    rsp,0x30
   140011fa7:	pop    r12
   140011fa9:	pop    rdi
   140011faa:	pop    rsi
   140011fab:	pop    rbp
   140011fac:	pop    rbx
   140011fad:	ret    
   140011fae:	int3   
   140011faf:	int3   
   140011fb0:	sub    rsp,0x28
   140011fb4:	mov    rdx,QWORD PTR [rcx]
   140011fb7:	mov    eax,DWORD PTR [rdx]
   140011fb9:	test   eax,eax
   140011fbb:	je     0x140011fcd
   140011fbd:	cmp    eax,0xffffffff
   140011fc0:	je     0x14001202a
   140011fc2:	lock add DWORD PTR [rdx],0xffffffff
   140011fc6:	setne  al
   140011fc9:	test   al,al
   140011fcb:	jne    0x14001202a
   140011fcd:	mov    QWORD PTR [rsp+0x30],rbx
   140011fd2:	mov    QWORD PTR [rsp+0x38],rsi
   140011fd7:	mov    rsi,QWORD PTR [rcx]
   140011fda:	movsxd rax,DWORD PTR [rsi+0xc]
   140011fde:	mov    QWORD PTR [rsp+0x20],rdi
   140011fe3:	lea    rbx,[rsi+rax*8+0x10]
   140011fe8:	movsxd rax,DWORD PTR [rsi+0x8]
   140011fec:	lea    rdi,[rsi+rax*8+0x10]
   140011ff1:	cmp    rdi,rbx
   140011ff4:	je     0x140012012
   140011ff6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140012000:	sub    rbx,0x8
   140012004:	mov    rcx,rbx
   140012007:	call   QWORD PTR [rip+0x191bb]        # 0x14002b1c8
   14001200d:	cmp    rbx,rdi
   140012010:	jne    0x140012000
   140012012:	mov    rcx,rsi
   140012015:	call   QWORD PTR [rip+0x19855]        # 0x14002b870
   14001201b:	mov    rdi,QWORD PTR [rsp+0x20]
   140012020:	mov    rsi,QWORD PTR [rsp+0x38]
   140012025:	mov    rbx,QWORD PTR [rsp+0x30]
   14001202a:	add    rsp,0x28
   14001202e:	ret    
   14001202f:	int3   
   140012030:	mov    QWORD PTR [rsp+0x18],rbx
   140012035:	push   rsi
   140012036:	sub    rsp,0x20
   14001203a:	mov    rax,QWORD PTR [rdx]
   14001203d:	mov    rsi,rcx
   140012040:	mov    rbx,rdx
   140012043:	mov    QWORD PTR [rcx],rax
   140012046:	mov    ecx,DWORD PTR [rax]
   140012048:	test   ecx,ecx
   14001204a:	je     0x140012063
   14001204c:	cmp    ecx,0xffffffff
   14001204f:	je     0x1400120c8
   140012051:	lock add DWORD PTR [rax],0x1
   140012055:	mov    rax,rsi
   140012058:	mov    rbx,QWORD PTR [rsp+0x40]
   14001205d:	add    rsp,0x20
   140012061:	pop    rsi
   140012062:	ret    
   140012063:	mov    edx,DWORD PTR [rax+0x4]
   140012066:	mov    rcx,rsi
   140012069:	mov    QWORD PTR [rsp+0x30],rbp
   14001206e:	mov    QWORD PTR [rsp+0x38],rdi
   140012073:	call   QWORD PTR [rip+0x197df]        # 0x14002b858
   140012079:	mov    r11,QWORD PTR [rsi]
   14001207c:	mov    rcx,QWORD PTR [rbx]
   14001207f:	movsxd rax,DWORD PTR [r11+0xc]
   140012083:	lea    rbp,[r11+rax*8+0x10]
   140012088:	movsxd rax,DWORD PTR [rcx+0x8]
   14001208c:	lea    rdi,[rcx+rax*8+0x10]
   140012091:	movsxd rax,DWORD PTR [r11+0x8]
   140012095:	lea    rbx,[r11+rax*8+0x10]
   14001209a:	cmp    rbx,rbp
   14001209d:	je     0x1400120be
   14001209f:	nop
   1400120a0:	test   rbx,rbx
   1400120a3:	je     0x1400120b1
   1400120a5:	mov    rdx,rdi
   1400120a8:	mov    rcx,rbx
   1400120ab:	call   QWORD PTR [rip+0x1932f]        # 0x14002b3e0
   1400120b1:	add    rbx,0x8
   1400120b5:	add    rdi,0x8
   1400120b9:	cmp    rbx,rbp
   1400120bc:	jne    0x1400120a0
   1400120be:	mov    rbp,QWORD PTR [rsp+0x30]
   1400120c3:	mov    rdi,QWORD PTR [rsp+0x38]
   1400120c8:	mov    rax,rsi
   1400120cb:	mov    rbx,QWORD PTR [rsp+0x40]
   1400120d0:	add    rsp,0x20
   1400120d4:	pop    rsi
   1400120d5:	ret    
   1400120d6:	int3   
   1400120d7:	int3   
   1400120d8:	int3   
   1400120d9:	int3   
   1400120da:	int3   
   1400120db:	int3   
   1400120dc:	int3   
   1400120dd:	int3   
   1400120de:	int3   
   1400120df:	int3   
   1400120e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400120e5:	mov    QWORD PTR [rsp+0x18],rbp
   1400120ea:	mov    DWORD PTR [rsp+0x10],edx
   1400120ee:	push   rsi
   1400120ef:	push   rdi
   1400120f0:	push   r12
   1400120f2:	push   r13
   1400120f4:	push   r14
   1400120f6:	sub    rsp,0x20
   1400120fa:	mov    rdx,QWORD PTR [rcx]
   1400120fd:	movsxd r13,r8d
   140012100:	mov    r12,rcx
   140012103:	movsxd rax,DWORD PTR [rdx+0x8]
   140012107:	mov    r8d,r13d
   14001210a:	lea    r14,[rdx+rax*8+0x10]
   14001210f:	lea    rdx,[rsp+0x58]
   140012114:	call   QWORD PTR [rip+0x19736]        # 0x14002b850
   14001211a:	mov    r10,QWORD PTR [r12]
   14001211e:	movsxd rdx,DWORD PTR [rsp+0x58]
   140012123:	movsxd r9,DWORD PTR [r10+0x8]
   140012127:	mov    rsi,rax
   14001212a:	mov    rdi,r14
   14001212d:	add    rdx,r9
   140012130:	lea    rbx,[r10+r9*8+0x10]
   140012135:	lea    rbp,[r10+rdx*8+0x10]
   14001213a:	cmp    rbx,rbp
   14001213d:	je     0x14001215e
   14001213f:	nop
   140012140:	test   rbx,rbx
   140012143:	je     0x140012151
   140012145:	mov    rdx,rdi
   140012148:	mov    rcx,rbx
   14001214b:	call   QWORD PTR [rip+0x1928f]        # 0x14002b3e0
   140012151:	add    rbx,0x8
   140012155:	add    rdi,0x8
   140012159:	cmp    rbx,rbp
   14001215c:	jne    0x140012140
   14001215e:	mov    r8,QWORD PTR [r12]
   140012162:	movsxd rdx,DWORD PTR [rsp+0x58]
   140012167:	movsxd rcx,DWORD PTR [r8+0x8]
   14001216b:	movsxd rax,DWORD PTR [r8+0xc]
   14001216f:	lea    rdi,[r14+rdx*8]
   140012173:	add    rcx,rdx
   140012176:	lea    rbp,[r8+rax*8+0x10]
   14001217b:	add    rcx,r13
   14001217e:	lea    rbx,[r8+rcx*8+0x10]
   140012183:	cmp    rbx,rbp
   140012186:	je     0x1400121a6
   140012188:	test   rbx,rbx
   14001218b:	je     0x140012199
   14001218d:	mov    rdx,rdi
   140012190:	mov    rcx,rbx
   140012193:	call   QWORD PTR [rip+0x19247]        # 0x14002b3e0
   140012199:	add    rbx,0x8
   14001219d:	add    rdi,0x8
   1400121a1:	cmp    rbx,rbp
   1400121a4:	jne    0x140012188
   1400121a6:	mov    eax,DWORD PTR [rsi]
   1400121a8:	test   eax,eax
   1400121aa:	je     0x1400121bc
   1400121ac:	cmp    eax,0xffffffff
   1400121af:	je     0x1400121ee
   1400121b1:	lock add DWORD PTR [rsi],0xffffffff
   1400121b5:	setne  al
   1400121b8:	test   al,al
   1400121ba:	jne    0x1400121ee
   1400121bc:	movsxd rax,DWORD PTR [rsi+0xc]
   1400121c0:	lea    rbx,[rsi+rax*8+0x10]
   1400121c5:	movsxd rax,DWORD PTR [rsi+0x8]
   1400121c9:	lea    rdi,[rsi+rax*8+0x10]
   1400121ce:	cmp    rdi,rbx
   1400121d1:	je     0x1400121e5
   1400121d3:	sub    rbx,0x8
   1400121d7:	mov    rcx,rbx
   1400121da:	call   QWORD PTR [rip+0x18fe8]        # 0x14002b1c8
   1400121e0:	cmp    rbx,rdi
   1400121e3:	jne    0x1400121d3
   1400121e5:	mov    rcx,rsi
   1400121e8:	call   QWORD PTR [rip+0x19682]        # 0x14002b870
   1400121ee:	mov    rdx,QWORD PTR [r12]
   1400121f2:	movsxd rax,DWORD PTR [rsp+0x58]
   1400121f7:	mov    rbx,QWORD PTR [rsp+0x50]
   1400121fc:	movsxd rcx,DWORD PTR [rdx+0x8]
   140012200:	mov    rbp,QWORD PTR [rsp+0x60]
   140012205:	add    rcx,rax
   140012208:	lea    rax,[rdx+rcx*8+0x10]
   14001220d:	add    rsp,0x20
   140012211:	pop    r14
   140012213:	pop    r13
   140012215:	pop    r12
   140012217:	pop    rdi
   140012218:	pop    rsi
   140012219:	ret    
   14001221a:	int3   
   14001221b:	int3   
   14001221c:	int3   
   14001221d:	int3   
   14001221e:	int3   
   14001221f:	int3   
   140012220:	mov    QWORD PTR [rsp+0x8],rbx
   140012225:	mov    QWORD PTR [rsp+0x10],rbp
   14001222a:	mov    QWORD PTR [rsp+0x18],rsi
   14001222f:	push   rdi
   140012230:	sub    rsp,0x20
   140012234:	mov    r8,QWORD PTR [rcx]
   140012237:	mov    rbx,rcx
   14001223a:	movsxd rax,DWORD PTR [r8+0x8]
   14001223e:	lea    rdi,[r8+rax*8+0x10]
   140012243:	call   QWORD PTR [rip+0x1960f]        # 0x14002b858
   140012249:	mov    rdx,QWORD PTR [rbx]
   14001224c:	movsxd rcx,DWORD PTR [rdx+0xc]
   140012250:	mov    rsi,rax
   140012253:	lea    rbp,[rdx+rcx*8+0x10]
   140012258:	movsxd rcx,DWORD PTR [rdx+0x8]
   14001225c:	lea    rbx,[rdx+rcx*8+0x10]
   140012261:	cmp    rbx,rbp
   140012264:	je     0x140012284
   140012266:	test   rbx,rbx
   140012269:	je     0x140012277
   14001226b:	mov    rdx,rdi
   14001226e:	mov    rcx,rbx
   140012271:	call   QWORD PTR [rip+0x19169]        # 0x14002b3e0
   140012277:	add    rbx,0x8
   14001227b:	add    rdi,0x8
   14001227f:	cmp    rbx,rbp
   140012282:	jne    0x140012266
   140012284:	mov    eax,DWORD PTR [rsi]
   140012286:	test   eax,eax
   140012288:	je     0x14001229a
   14001228a:	cmp    eax,0xffffffff
   14001228d:	je     0x1400122cc
   14001228f:	lock add DWORD PTR [rsi],0xffffffff
   140012293:	setne  al
   140012296:	test   al,al
   140012298:	jne    0x1400122cc
   14001229a:	movsxd rax,DWORD PTR [rsi+0xc]
   14001229e:	lea    rbx,[rsi+rax*8+0x10]
   1400122a3:	movsxd rax,DWORD PTR [rsi+0x8]
   1400122a7:	lea    rdi,[rsi+rax*8+0x10]
   1400122ac:	cmp    rdi,rbx
   1400122af:	je     0x1400122c3
   1400122b1:	sub    rbx,0x8
   1400122b5:	mov    rcx,rbx
   1400122b8:	call   QWORD PTR [rip+0x18f0a]        # 0x14002b1c8
   1400122be:	cmp    rbx,rdi
   1400122c1:	jne    0x1400122b1
   1400122c3:	mov    rcx,rsi
   1400122c6:	call   QWORD PTR [rip+0x195a4]        # 0x14002b870
   1400122cc:	mov    rbx,QWORD PTR [rsp+0x30]
   1400122d1:	mov    rbp,QWORD PTR [rsp+0x38]
   1400122d6:	mov    rsi,QWORD PTR [rsp+0x40]
   1400122db:	add    rsp,0x20
   1400122df:	pop    rdi
   1400122e0:	ret    
   1400122e1:	int3   
   1400122e2:	int3   
   1400122e3:	int3   
   1400122e4:	int3   
   1400122e5:	int3   
   1400122e6:	int3   
   1400122e7:	int3   
   1400122e8:	int3   
   1400122e9:	int3   
   1400122ea:	int3   
   1400122eb:	int3   
   1400122ec:	int3   
   1400122ed:	int3   
   1400122ee:	int3   
   1400122ef:	int3   
   1400122f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400122f5:	push   rdi
   1400122f6:	sub    rsp,0x30
   1400122fa:	mov    rbx,rcx
   1400122fd:	mov    rcx,QWORD PTR [rcx]
   140012300:	lea    r8,[rip+0xfffffffffffffb79]        # 0x140011e80
   140012307:	lea    rdx,[rip+0xfffffffffffff742]        # 0x140011a50
   14001230e:	mov    r9d,0x20
   140012314:	mov    DWORD PTR [rsp+0x20],0x8
   14001231c:	call   QWORD PTR [rip+0x19526]        # 0x14002b848
   140012322:	mov    rdi,rax
   140012325:	mov    rax,QWORD PTR [rbx]
   140012328:	mov    ecx,DWORD PTR [rax+0x10]
   14001232b:	test   ecx,ecx
   14001232d:	je     0x140012340
   14001232f:	cmp    ecx,0xffffffff
   140012332:	je     0x140012350
   140012334:	lock add DWORD PTR [rax+0x10],0xffffffff
   140012339:	setne  al
   14001233c:	test   al,al
   14001233e:	jne    0x140012350
   140012340:	mov    rcx,QWORD PTR [rbx]
   140012343:	lea    rdx,[rip+0xfffffffffffffb36]        # 0x140011e80
   14001234a:	call   QWORD PTR [rip+0x19518]        # 0x14002b868
   140012350:	mov    QWORD PTR [rbx],rdi
   140012353:	mov    rbx,QWORD PTR [rsp+0x40]
   140012358:	add    rsp,0x30
   14001235c:	pop    rdi
   14001235d:	ret    
   14001235e:	int3   
   14001235f:	int3   
   140012360:	rex push rsi
   140012362:	sub    rsp,0x20
   140012366:	mov    rax,QWORD PTR [rdx]
   140012369:	mov    rsi,rcx
   14001236c:	cmp    QWORD PTR [rcx],rax
   14001236f:	je     0x140012422
   140012375:	lea    rcx,[rsp+0x30]
   14001237a:	mov    QWORD PTR [rsp+0x48],rdi
   14001237f:	call   0x140012030
   140012384:	lea    r11,[rsp+0x30]
   140012389:	cmp    r11,rsi
   14001238c:	je     0x1400123a0
   14001238e:	mov    rax,QWORD PTR [rsp+0x30]
   140012393:	mov    rdi,QWORD PTR [rsi]
   140012396:	mov    QWORD PTR [rsp+0x30],rdi
   14001239b:	mov    QWORD PTR [rsi],rax
   14001239e:	jmp    0x1400123a5
   1400123a0:	mov    rdi,QWORD PTR [rsp+0x30]
   1400123a5:	mov    eax,DWORD PTR [rdi]
   1400123a7:	test   eax,eax
   1400123a9:	je     0x1400123c0
   1400123ab:	cmp    eax,0xffffffff
   1400123ae:	je     0x140012414
   1400123b0:	lock add DWORD PTR [rdi],0xffffffff
   1400123b4:	setne  al
   1400123b7:	test   al,al
   1400123b9:	jne    0x140012414
   1400123bb:	mov    rdi,QWORD PTR [rsp+0x30]
   1400123c0:	movsxd rax,DWORD PTR [rdi+0xc]
   1400123c4:	mov    QWORD PTR [rsp+0x38],rbx
   1400123c9:	mov    QWORD PTR [rsp+0x40],rbp
   1400123ce:	lea    rbx,[rdi+rax*8+0x10]
   1400123d3:	movsxd rax,DWORD PTR [rdi+0x8]
   1400123d7:	lea    rbp,[rdi+rax*8+0x10]
   1400123dc:	cmp    rbp,rbx
   1400123df:	je     0x1400123f3
   1400123e1:	sub    rbx,0x8
   1400123e5:	mov    rcx,rbx
   1400123e8:	call   QWORD PTR [rip+0x18dda]        # 0x14002b1c8
   1400123ee:	cmp    rbx,rbp
   1400123f1:	jne    0x1400123e1
   1400123f3:	mov    rcx,rdi
   1400123f6:	call   QWORD PTR [rip+0x19474]        # 0x14002b870
   1400123fc:	mov    rbp,QWORD PTR [rsp+0x40]
   140012401:	mov    rbx,QWORD PTR [rsp+0x38]
   140012406:	mov    rdi,QWORD PTR [rsp+0x48]
   14001240b:	mov    rax,rsi
   14001240e:	add    rsp,0x20
   140012412:	pop    rsi
   140012413:	ret    
   140012414:	mov    rax,rsi
   140012417:	mov    rdi,QWORD PTR [rsp+0x48]
   14001241c:	add    rsp,0x20
   140012420:	pop    rsi
   140012421:	ret    
   140012422:	mov    rax,rcx
   140012425:	add    rsp,0x20
   140012429:	pop    rsi
   14001242a:	ret    
   14001242b:	int3   
   14001242c:	int3   
   14001242d:	int3   
   14001242e:	int3   
   14001242f:	int3   
   140012430:	mov    QWORD PTR [rsp+0x10],rbx
   140012435:	push   rdi
   140012436:	sub    rsp,0x20
   14001243a:	mov    rax,QWORD PTR [rcx]
   14001243d:	mov    rdi,rdx
   140012440:	mov    rbx,rcx
   140012443:	mov    r8d,DWORD PTR [rax]
   140012446:	cmp    r8d,0x1
   14001244a:	je     0x140012478
   14001244c:	test   r8d,r8d
   14001244f:	je     0x140012478
   140012451:	xor    edx,edx
   140012453:	lea    r8d,[rdx+0x1]
   140012457:	call   0x140001a10
   14001245c:	test   rax,rax
   14001245f:	je     0x140012494
   140012461:	mov    rdx,rdi
   140012464:	mov    rcx,rax
   140012467:	mov    rbx,QWORD PTR [rsp+0x38]
   14001246c:	add    rsp,0x20
   140012470:	pop    rdi
   140012471:	rex.W jmp QWORD PTR [rip+0x19428]        # 0x14002b8a0
   140012478:	lea    rcx,[rsp+0x30]
   14001247d:	call   QWORD PTR [rip+0x1941d]        # 0x14002b8a0
   140012483:	mov    rcx,rbx
   140012486:	call   QWORD PTR [rip+0x1919c]        # 0x14002b628
   14001248c:	mov    rcx,QWORD PTR [rsp+0x30]
   140012491:	mov    QWORD PTR [rax],rcx
   140012494:	mov    rbx,QWORD PTR [rsp+0x38]
   140012499:	add    rsp,0x20
   14001249d:	pop    rdi
   14001249e:	ret    
   14001249f:	int3   
   1400124a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400124a5:	mov    QWORD PTR [rsp+0x10],rbp
   1400124aa:	mov    QWORD PTR [rsp+0x18],rsi
   1400124af:	mov    QWORD PTR [rsp+0x20],rdi
   1400124b4:	push   r12
   1400124b6:	push   r13
   1400124b8:	push   r14
   1400124ba:	sub    rsp,0x40
   1400124be:	mov    r8,QWORD PTR [rcx+0x8]
   1400124c2:	mov    r13,rcx
   1400124c5:	mov    r14,rdx
   1400124c8:	mov    rax,QWORD PTR [r8]
   1400124cb:	mov    r11,QWORD PTR [r13+0x0]
   1400124cf:	lea    rcx,[rsp+0x30]
   1400124d4:	mov    rdx,QWORD PTR [r11]
   1400124d7:	mov    QWORD PTR [rcx],rax
   1400124da:	mov    rax,QWORD PTR [r8+0x8]
   1400124de:	mov    r8,QWORD PTR [rdx+0x8]
   1400124e2:	mov    rdx,QWORD PTR [rdx]
   1400124e5:	mov    QWORD PTR [rcx+0x8],rax
   1400124e9:	mov    rax,QWORD PTR [r8]
   1400124ec:	lea    rcx,[rsp+0x20]
   1400124f1:	mov    QWORD PTR [rcx],rax
   1400124f4:	mov    rax,QWORD PTR [r8+0x8]
   1400124f8:	mov    QWORD PTR [rcx+0x8],rax
   1400124fc:	mov    rax,QWORD PTR [rdx]
   1400124ff:	mov    rcx,QWORD PTR [rax]
   140012502:	mov    rax,QWORD PTR [rdx+0x8]
   140012506:	mov    edx,DWORD PTR [rsp+0x30]
   14001250a:	mov    r10d,DWORD PTR [rcx+0x4]
   14001250e:	mov    rcx,QWORD PTR [rax]
   140012511:	mov    rax,QWORD PTR [r11+0x8]
   140012515:	mov    r9d,DWORD PTR [rcx+0x4]
   140012519:	mov    rcx,QWORD PTR [rax]
   14001251c:	mov    r8d,DWORD PTR [rcx+0x4]
   140012520:	mov    ecx,DWORD PTR [rsp+0x20]
   140012524:	add    edx,ecx
   140012526:	mov    rcx,r14
   140012529:	add    edx,r8d
   14001252c:	xor    r8d,r8d
   14001252f:	add    edx,r9d
   140012532:	add    edx,r10d
   140012535:	call   QWORD PTR [rip+0x1933d]        # 0x14002b878
   14001253b:	mov    rcx,r14
   14001253e:	call   QWORD PTR [rip+0x1937c]        # 0x14002b8c0
   140012544:	mov    r12,QWORD PTR [r13+0x0]
   140012548:	mov    rsi,QWORD PTR [r12]
   14001254c:	mov    rbp,rax
   14001254f:	mov    rdi,QWORD PTR [rsi]
   140012552:	mov    rcx,QWORD PTR [rdi]
   140012555:	mov    rdx,QWORD PTR [rcx]
   140012558:	movsxd rbx,DWORD PTR [rdx+0x4]
   14001255c:	add    rbx,rbx
   14001255f:	call   QWORD PTR [rip+0x1935b]        # 0x14002b8c0
   140012565:	mov    r8,rbx
   140012568:	mov    rdx,rax
   14001256b:	mov    rcx,rbp
   14001256e:	call   0x14002951e
   140012573:	mov    rcx,QWORD PTR [rdi+0x8]
   140012577:	add    rbp,rbx
   14001257a:	mov    rax,QWORD PTR [rcx]
   14001257d:	movsxd rbx,DWORD PTR [rax+0x4]
   140012581:	add    rbx,rbx
   140012584:	call   QWORD PTR [rip+0x19336]        # 0x14002b8c0
   14001258a:	mov    r8,rbx
   14001258d:	mov    rdx,rax
   140012590:	mov    rcx,rbp
   140012593:	call   0x14002951e
   140012598:	mov    rcx,QWORD PTR [rsi+0x8]
   14001259c:	lea    rdx,[rsp+0x20]
   1400125a1:	mov    rax,QWORD PTR [rcx]
   1400125a4:	add    rbp,rbx
   1400125a7:	mov    QWORD PTR [rdx],rax
   1400125aa:	mov    rax,QWORD PTR [rcx+0x8]
   1400125ae:	mov    r8,rbp
   1400125b1:	mov    QWORD PTR [rdx+0x8],rax
   1400125b5:	movsxd rbx,DWORD PTR [rsp+0x20]
   1400125ba:	mov    rcx,QWORD PTR [rsp+0x28]
   1400125bf:	mov    edx,ebx
   1400125c1:	call   QWORD PTR [rip+0x18c81]        # 0x14002b248
   1400125c7:	mov    rcx,QWORD PTR [r12+0x8]
   1400125cc:	lea    rdi,[rbp+rbx*2+0x0]
   1400125d1:	mov    rax,QWORD PTR [rcx]
   1400125d4:	movsxd rbx,DWORD PTR [rax+0x4]
   1400125d8:	add    rbx,rbx
   1400125db:	call   QWORD PTR [rip+0x192df]        # 0x14002b8c0
   1400125e1:	mov    r8,rbx
   1400125e4:	mov    rdx,rax
   1400125e7:	mov    rcx,rdi
   1400125ea:	call   0x14002951e
   1400125ef:	mov    rcx,QWORD PTR [r13+0x8]
   1400125f3:	lea    rdx,[rsp+0x20]
   1400125f8:	mov    rax,QWORD PTR [rcx]
   1400125fb:	lea    r8,[rbx+rdi*1]
   1400125ff:	mov    QWORD PTR [rdx],rax
   140012602:	mov    rax,QWORD PTR [rcx+0x8]
   140012606:	mov    QWORD PTR [rdx+0x8],rax
   14001260a:	mov    edx,DWORD PTR [rsp+0x20]
   14001260e:	mov    rcx,QWORD PTR [rsp+0x28]
   140012613:	call   QWORD PTR [rip+0x18c2f]        # 0x14002b248
   140012619:	mov    rbx,QWORD PTR [rsp+0x60]
   14001261e:	mov    rbp,QWORD PTR [rsp+0x68]
   140012623:	mov    rsi,QWORD PTR [rsp+0x70]
   140012628:	mov    rdi,QWORD PTR [rsp+0x78]
   14001262d:	mov    rax,r14
   140012630:	add    rsp,0x40
   140012634:	pop    r14
   140012636:	pop    r13
   140012638:	pop    r12
   14001263a:	ret    
   14001263b:	int3   
   14001263c:	int3   
   14001263d:	int3   
   14001263e:	int3   
   14001263f:	int3   
   140012640:	rex push rbx
   140012642:	sub    rsp,0x20
   140012646:	mov    rbx,rcx
   140012649:	call   QWORD PTR [rip+0x18e89]        # 0x14002b4d8
   14001264f:	lea    rcx,[rbx+0x8]
   140012653:	call   QWORD PTR [rip+0x18e7f]        # 0x14002b4d8
   140012659:	lea    rcx,[rbx+0x10]
   14001265d:	call   QWORD PTR [rip+0x18e75]        # 0x14002b4d8
   140012663:	lea    rcx,[rbx+0x18]
   140012667:	call   QWORD PTR [rip+0x18e6b]        # 0x14002b4d8
   14001266d:	lea    rcx,[rbx+0x20]
   140012671:	call   QWORD PTR [rip+0x18e61]        # 0x14002b4d8
   140012677:	lea    rcx,[rbx+0x28]
   14001267b:	call   QWORD PTR [rip+0x18e57]        # 0x14002b4d8
   140012681:	lea    rcx,[rbx+0x30]
   140012685:	call   QWORD PTR [rip+0x18e4d]        # 0x14002b4d8
   14001268b:	lea    rcx,[rbx+0x38]
   14001268f:	call   QWORD PTR [rip+0x18e43]        # 0x14002b4d8
   140012695:	lea    rcx,[rbx+0x40]
   140012699:	call   QWORD PTR [rip+0x18e39]        # 0x14002b4d8
   14001269f:	lea    rcx,[rbx+0x48]
   1400126a3:	call   QWORD PTR [rip+0x18e2f]        # 0x14002b4d8
   1400126a9:	lea    rcx,[rbx+0x50]
   1400126ad:	call   QWORD PTR [rip+0x18e25]        # 0x14002b4d8
   1400126b3:	mov    r11,QWORD PTR [rip+0x191ce]        # 0x14002b888
   1400126ba:	mov    QWORD PTR [rbx+0x58],r11
   1400126be:	mov    BYTE PTR [rbx+0x60],0x0
   1400126c2:	mov    BYTE PTR [rbx+0x61],0x0
   1400126c6:	mov    rax,QWORD PTR [rip+0x191b3]        # 0x14002b880
   1400126cd:	mov    QWORD PTR [rbx+0x68],rax
   1400126d1:	mov    rax,rbx
   1400126d4:	add    rsp,0x20
   1400126d8:	pop    rbx
   1400126d9:	ret    
   1400126da:	int3   
   1400126db:	int3   
   1400126dc:	int3   
   1400126dd:	int3   
   1400126de:	int3   
   1400126df:	int3   
   1400126e0:	mov    QWORD PTR [rsp+0x20],rbx
   1400126e5:	mov    QWORD PTR [rsp+0x10],rdx
   1400126ea:	mov    QWORD PTR [rsp+0x8],rcx
   1400126ef:	push   rbp
   1400126f0:	push   rsi
   1400126f1:	push   rdi
   1400126f2:	push   r12
   1400126f4:	push   r13
   1400126f6:	push   r14
   1400126f8:	push   r15
   1400126fa:	sub    rsp,0x80
   140012701:	mov    r14,rcx
   140012704:	lea    rcx,[rsp+0x30]
   140012709:	mov    r12d,r9d
   14001270c:	mov    r15,r8
   14001270f:	mov    rbp,rdx
   140012712:	call   QWORD PTR [rip+0x18dc0]        # 0x14002b4d8
   140012718:	mov    r11,QWORD PTR [rbp+0x0]
   14001271c:	mov    r9d,DWORD PTR [r11+0x8]
   140012720:	mov    eax,DWORD PTR [r11+0xc]
   140012724:	sub    eax,r9d
   140012727:	cmp    DWORD PTR [r15],eax
   14001272a:	jge    0x1400128ff
   140012730:	mov    rsi,QWORD PTR [rsp+0xe0]
   140012738:	lea    rbx,[rip+0xfffffffffffed8c1]        # 0x140000000
   14001273f:	nop
   140012740:	movsxd rax,DWORD PTR [r15]
   140012743:	movsxd rcx,r9d
   140012746:	add    rcx,rax
   140012749:	mov    rax,QWORD PTR [r11+rcx*8+0x10]
   14001274e:	cmp    DWORD PTR [rax+0x4],0x0
   140012752:	lea    r13,[r11+rcx*8+0x10]
   140012757:	je     0x1400128f7
   14001275d:	mov    rdx,rsi
   140012760:	mov    rcx,r13
   140012763:	call   QWORD PTR [rip+0x18e97]        # 0x14002b600
   140012769:	test   al,al
   14001276b:	je     0x1400128f7
   140012771:	mov    edx,r12d
   140012774:	mov    rcx,r13
   140012777:	call   QWORD PTR [rip+0x18ecb]        # 0x14002b648
   14001277d:	movsx  ecx,al
   140012780:	call   QWORD PTR [rip+0x1897a]        # 0x14002b100
   140012786:	test   eax,eax
   140012788:	je     0x1400127ac
   14001278a:	nop    WORD PTR [rax+rax*1+0x0]
   140012790:	inc    r12d
   140012793:	mov    rcx,r13
   140012796:	mov    edx,r12d
   140012799:	call   QWORD PTR [rip+0x18ea9]        # 0x14002b648
   14001279f:	movsx  ecx,al
   1400127a2:	call   QWORD PTR [rip+0x18958]        # 0x14002b100
   1400127a8:	test   eax,eax
   1400127aa:	jne    0x140012790
   1400127ac:	mov    edx,r12d
   1400127af:	mov    rcx,r13
   1400127b2:	call   QWORD PTR [rip+0x18e90]        # 0x14002b648
   1400127b8:	cmp    al,0x22
   1400127ba:	jne    0x1400128f7
   1400127c0:	mov    rsi,QWORD PTR [rsp+0xe8]
   1400127c8:	inc    r12d
   1400127cb:	nop    DWORD PTR [rax+rax*1+0x0]
   1400127d0:	mov    rax,QWORD PTR [r13+0x0]
   1400127d4:	cmp    r12d,DWORD PTR [rax+0x4]
   1400127d8:	je     0x140012c38
   1400127de:	mov    edx,r12d
   1400127e1:	mov    rcx,r13
   1400127e4:	call   QWORD PTR [rip+0x18e5e]        # 0x14002b648
   1400127ea:	inc    r12d
   1400127ed:	cmp    al,0x22
   1400127ef:	jne    0x140012939
   1400127f5:	mov    rax,QWORD PTR [r13+0x0]
   1400127f9:	cmp    r12d,DWORD PTR [rax+0x4]
   1400127fd:	je     0x1400128c6
   140012803:	mov    edx,r12d
   140012806:	mov    rcx,r13
   140012809:	call   QWORD PTR [rip+0x18e39]        # 0x14002b648
   14001280f:	movsx  ecx,al
   140012812:	call   QWORD PTR [rip+0x188e8]        # 0x14002b100
   140012818:	test   eax,eax
   14001281a:	je     0x14001283c
   14001281c:	nop    DWORD PTR [rax+0x0]
   140012820:	inc    r12d
   140012823:	mov    rcx,r13
   140012826:	mov    edx,r12d
   140012829:	call   QWORD PTR [rip+0x18e19]        # 0x14002b648
   14001282f:	movsx  ecx,al
   140012832:	call   QWORD PTR [rip+0x188c8]        # 0x14002b100
   140012838:	test   eax,eax
   14001283a:	jne    0x140012820
   14001283c:	mov    edx,r12d
   14001283f:	mov    rcx,r13
   140012842:	call   QWORD PTR [rip+0x18e00]        # 0x14002b648
   140012848:	inc    r12d
   14001284b:	cmp    al,0x22
   14001284d:	je     0x1400127d0
   14001284f:	lea    rcx,[rsp+0x38]
   140012854:	mov    dl,0x20
   140012856:	call   QWORD PTR [rip+0x1906c]        # 0x14002b8c8
   14001285c:	mov    edi,DWORD PTR [r15]
   14001285f:	lea    rdx,[rip+0x1aeea]        # 0x14002d750
   140012866:	lea    rcx,[rsp+0x40]
   14001286b:	or     r8d,0xffffffff
   14001286f:	mov    rbx,rax
   140012872:	call   QWORD PTR [rip+0x18a08]        # 0x14002b280
   140012878:	lea    r8d,[rdi+0x1]
   14001287c:	lea    rdx,[rsp+0x68]
   140012881:	mov    rcx,rax
   140012884:	movzx  eax,WORD PTR [rbx]
   140012887:	xor    r9d,r9d
   14001288a:	mov    WORD PTR [rsp+0x28],ax
   14001288f:	mov    DWORD PTR [rsp+0x20],0xa
   140012897:	call   QWORD PTR [rip+0x18c6b]        # 0x14002b508
   14001289d:	lea    rcx,[rsi+0x60]
   1400128a1:	mov    rdx,rax
   1400128a4:	call   0x140001e20
   1400128a9:	lea    rcx,[rsp+0x68]
   1400128ae:	call   QWORD PTR [rip+0x18fe4]        # 0x14002b898
   1400128b4:	lea    rcx,[rsp+0x40]
   1400128b9:	call   QWORD PTR [rip+0x18fd9]        # 0x14002b898
   1400128bf:	lea    rbx,[rip+0xfffffffffffed73a]        # 0x140000000
   1400128c6:	mov    rsi,QWORD PTR [rsp+0xe0]
   1400128ce:	mov    rax,QWORD PTR [rsi]
   1400128d1:	mov    r12d,DWORD PTR [rax+0x4]
   1400128d5:	inc    DWORD PTR [r15]
   1400128d8:	mov    rax,QWORD PTR [rsp+0xc8]
   1400128e0:	mov    r11,QWORD PTR [rax]
   1400128e3:	mov    r9d,DWORD PTR [r11+0x8]
   1400128e7:	mov    eax,DWORD PTR [r11+0xc]
   1400128eb:	sub    eax,r9d
   1400128ee:	cmp    DWORD PTR [r15],eax
   1400128f1:	jl     0x140012740
   1400128f7:	mov    r14,QWORD PTR [rsp+0xc0]
   1400128ff:	dec    DWORD PTR [r15]
   140012902:	lea    rdx,[rsp+0x30]
   140012907:	mov    rcx,r14
   14001290a:	call   QWORD PTR [rip+0x18ad0]        # 0x14002b3e0
   140012910:	lea    rcx,[rsp+0x30]
   140012915:	call   QWORD PTR [rip+0x188ad]        # 0x14002b1c8
   14001291b:	mov    rbx,QWORD PTR [rsp+0xd8]
   140012923:	mov    rax,r14
   140012926:	add    rsp,0x80
   14001292d:	pop    r15
   14001292f:	pop    r14
   140012931:	pop    r13
   140012933:	pop    r12
   140012935:	pop    rdi
   140012936:	pop    rsi
   140012937:	pop    rbp
   140012938:	ret    
   140012939:	cmp    al,0x5c
   14001293b:	jne    0x140012c25
   140012941:	mov    rax,QWORD PTR [r13+0x0]
   140012945:	cmp    r12d,DWORD PTR [rax+0x4]
   140012949:	je     0x140012c38
   14001294f:	mov    edx,r12d
   140012952:	mov    rcx,r13
   140012955:	call   QWORD PTR [rip+0x18ced]        # 0x14002b648
   14001295b:	inc    r12d
   14001295e:	movzx  r14d,al
   140012962:	lea    ecx,[r14-0x22]
   140012966:	cmp    ecx,0x56
   140012969:	ja     0x140012b45
   14001296f:	movsxd rcx,ecx
   140012972:	movzx  ecx,BYTE PTR [rbx+rcx*1+0x12cf8]
   14001297a:	mov    edx,DWORD PTR [rbx+rcx*4+0x12cc8]
   140012981:	add    rdx,rbx
   140012984:	jmp    rdx
   140012986:	lea    rcx,[rsp+0x30]
   14001298b:	mov    dl,0xd
   14001298d:	call   QWORD PTR [rip+0x18c65]        # 0x14002b5f8
   140012993:	jmp    0x1400127d0
   140012998:	lea    rcx,[rsp+0x30]
   14001299d:	mov    dl,0xa
   14001299f:	call   QWORD PTR [rip+0x18c53]        # 0x14002b5f8
   1400129a5:	jmp    0x1400127d0
   1400129aa:	lea    rcx,[rsp+0x30]
   1400129af:	mov    dl,0x9
   1400129b1:	call   QWORD PTR [rip+0x18c41]        # 0x14002b5f8
   1400129b7:	jmp    0x1400127d0
   1400129bc:	lea    rcx,[rsp+0x30]
   1400129c1:	mov    dl,0xb
   1400129c3:	call   QWORD PTR [rip+0x18c2f]        # 0x14002b5f8
   1400129c9:	jmp    0x1400127d0
   1400129ce:	lea    rcx,[rsp+0x30]
   1400129d3:	mov    dl,0x7
   1400129d5:	call   QWORD PTR [rip+0x18c1d]        # 0x14002b5f8
   1400129db:	jmp    0x1400127d0
   1400129e0:	lea    rcx,[rsp+0x30]
   1400129e5:	mov    dl,0x8
   1400129e7:	call   QWORD PTR [rip+0x18c0b]        # 0x14002b5f8
   1400129ed:	jmp    0x1400127d0
   1400129f2:	lea    rcx,[rsp+0x30]
   1400129f7:	mov    dl,0xc
   1400129f9:	call   QWORD PTR [rip+0x18bf9]        # 0x14002b5f8
   1400129ff:	jmp    0x1400127d0
   140012a04:	lea    rcx,[rsp+0x30]
   140012a09:	mov    dl,0x22
   140012a0b:	call   QWORD PTR [rip+0x18be7]        # 0x14002b5f8
   140012a11:	jmp    0x1400127d0
   140012a16:	lea    rcx,[rsp+0x30]
   140012a1b:	mov    dl,0x5c
   140012a1d:	call   QWORD PTR [rip+0x18bd5]        # 0x14002b5f8
   140012a23:	jmp    0x1400127d0
   140012a28:	mov    edx,r12d
   140012a2b:	mov    rcx,r13
   140012a2e:	lea    ebx,[r12-0x1]
   140012a33:	call   QWORD PTR [rip+0x18c0f]        # 0x14002b648
   140012a39:	cmp    al,0x30
   140012a3b:	jb     0x140012a65
   140012a3d:	nop    DWORD PTR [rax]
   140012a40:	cmp    al,0x37
   140012a42:	ja     0x140012a65
   140012a44:	mov    rax,QWORD PTR [r13+0x0]
   140012a48:	inc    r12d
   140012a4b:	cmp    r12d,DWORD PTR [rax+0x4]
   140012a4f:	je     0x140012c38
   140012a55:	mov    edx,r12d
   140012a58:	mov    rcx,r13
   140012a5b:	call   QWORD PTR [rip+0x18be7]        # 0x14002b648
   140012a61:	cmp    al,0x30
   140012a63:	jae    0x140012a40
   140012a65:	mov    r9d,r12d
   140012a68:	lea    rdx,[rsp+0x78]
   140012a6d:	mov    r8d,ebx
   140012a70:	sub    r9d,ebx
   140012a73:	mov    rcx,r13
   140012a76:	call   QWORD PTR [rip+0x18b6c]        # 0x14002b5e8
   140012a7c:	xor    edx,edx
   140012a7e:	lea    r8d,[rdx+0x8]
   140012a82:	mov    rcx,rax
   140012a85:	call   QWORD PTR [rip+0x18bb5]        # 0x14002b640
   140012a8b:	lea    rcx,[rsp+0x30]
   140012a90:	movzx  edx,al
   140012a93:	call   QWORD PTR [rip+0x18b5f]        # 0x14002b5f8
   140012a99:	lea    rcx,[rsp+0x78]
   140012a9e:	call   QWORD PTR [rip+0x18724]        # 0x14002b1c8
   140012aa4:	lea    rbx,[rip+0xfffffffffffed555]        # 0x140000000
   140012aab:	jmp    0x1400127d0
   140012ab0:	mov    edx,r12d
   140012ab3:	mov    rcx,r13
   140012ab6:	mov    ebx,r12d
   140012ab9:	call   QWORD PTR [rip+0x18b89]        # 0x14002b648
   140012abf:	movsx  ecx,al
   140012ac2:	call   QWORD PTR [rip+0x18640]        # 0x14002b108
   140012ac8:	test   eax,eax
   140012aca:	je     0x140012afa
   140012acc:	nop    DWORD PTR [rax+0x0]
   140012ad0:	mov    rax,QWORD PTR [r13+0x0]
   140012ad4:	inc    r12d
   140012ad7:	cmp    r12d,DWORD PTR [rax+0x4]
   140012adb:	je     0x140012c38
   140012ae1:	mov    edx,r12d
   140012ae4:	mov    rcx,r13
   140012ae7:	call   QWORD PTR [rip+0x18b5b]        # 0x14002b648
   140012aed:	movsx  ecx,al
   140012af0:	call   QWORD PTR [rip+0x18612]        # 0x14002b108
   140012af6:	test   eax,eax
   140012af8:	jne    0x140012ad0
   140012afa:	mov    r9d,r12d
   140012afd:	lea    rdx,[rsp+0x50]
   140012b02:	mov    r8d,ebx
   140012b05:	sub    r9d,ebx
   140012b08:	mov    rcx,r13
   140012b0b:	call   QWORD PTR [rip+0x18ad7]        # 0x14002b5e8
   140012b11:	xor    edx,edx
   140012b13:	lea    r8d,[rdx+0x10]
   140012b17:	mov    rcx,rax
   140012b1a:	call   QWORD PTR [rip+0x18b20]        # 0x14002b640
   140012b20:	lea    rcx,[rsp+0x30]
   140012b25:	movzx  edx,al
   140012b28:	call   QWORD PTR [rip+0x18aca]        # 0x14002b5f8
   140012b2e:	lea    rcx,[rsp+0x50]
   140012b33:	call   QWORD PTR [rip+0x1868f]        # 0x14002b1c8
   140012b39:	lea    rbx,[rip+0xfffffffffffed4c0]        # 0x140000000
   140012b40:	jmp    0x1400127d0
   140012b45:	lea    rcx,[rsp+0xd0]
   140012b4d:	mov    dl,0x20
   140012b4f:	movzx  ebx,r14b
   140012b53:	call   QWORD PTR [rip+0x18d6f]        # 0x14002b8c8
   140012b59:	lea    rcx,[rsp+0x48]
   140012b5e:	mov    dl,0x20
   140012b60:	mov    rbp,rax
   140012b63:	call   QWORD PTR [rip+0x18d5f]        # 0x14002b8c8
   140012b69:	mov    esi,DWORD PTR [r15]
   140012b6c:	lea    rdx,[rip+0x1aba5]        # 0x14002d718
   140012b73:	lea    rcx,[rsp+0x58]
   140012b78:	or     r8d,0xffffffff
   140012b7c:	mov    rdi,rax
   140012b7f:	call   QWORD PTR [rip+0x186fb]        # 0x14002b280
   140012b85:	movzx  edx,WORD PTR [rdi]
   140012b88:	mov    WORD PTR [rsp+0x20],dx
   140012b8d:	lea    rdx,[rsp+0x70]
   140012b92:	xor    r9d,r9d
   140012b95:	mov    rcx,rax
   140012b98:	movzx  r8d,bx
   140012b9c:	call   QWORD PTR [rip+0x18a96]        # 0x14002b638
   140012ba2:	lea    r8d,[rsi+0x1]
   140012ba6:	lea    rdx,[rsp+0x60]
   140012bab:	mov    rcx,rax
   140012bae:	movzx  eax,WORD PTR [rbp+0x0]
   140012bb2:	xor    r9d,r9d
   140012bb5:	mov    WORD PTR [rsp+0x28],ax
   140012bba:	mov    DWORD PTR [rsp+0x20],0xa
   140012bc2:	call   QWORD PTR [rip+0x18940]        # 0x14002b508
   140012bc8:	mov    rsi,QWORD PTR [rsp+0xe8]
   140012bd0:	mov    rdx,rax
   140012bd3:	lea    rcx,[rsi+0x60]
   140012bd7:	call   0x140001e20
   140012bdc:	lea    rcx,[rsp+0x60]
   140012be1:	call   QWORD PTR [rip+0x18cb1]        # 0x14002b898
   140012be7:	lea    rcx,[rsp+0x70]
   140012bec:	call   QWORD PTR [rip+0x18ca6]        # 0x14002b898
   140012bf2:	lea    rcx,[rsp+0x58]
   140012bf7:	call   QWORD PTR [rip+0x18c9b]        # 0x14002b898
   140012bfd:	lea    rcx,[rsp+0x30]
   140012c02:	mov    dl,0x5c
   140012c04:	call   QWORD PTR [rip+0x189ee]        # 0x14002b5f8
   140012c0a:	lea    rcx,[rsp+0x30]
   140012c0f:	movzx  edx,r14b
   140012c13:	call   QWORD PTR [rip+0x189df]        # 0x14002b5f8
   140012c19:	lea    rbx,[rip+0xfffffffffffed3e0]        # 0x140000000
   140012c20:	jmp    0x1400127d0
   140012c25:	lea    rcx,[rsp+0x30]
   140012c2a:	movzx  edx,al
   140012c2d:	call   QWORD PTR [rip+0x189c5]        # 0x14002b5f8
   140012c33:	jmp    0x1400127d0
   140012c38:	lea    rcx,[rsp+0xc8]
   140012c40:	mov    dl,0x20
   140012c42:	call   QWORD PTR [rip+0x18c80]        # 0x14002b8c8
   140012c48:	mov    edi,DWORD PTR [r15]
   140012c4b:	lea    rdx,[rip+0x1aa96]        # 0x14002d6e8
   140012c52:	lea    rcx,[rsp+0x40]
   140012c57:	or     r8d,0xffffffff
   140012c5b:	mov    rbx,rax
   140012c5e:	call   QWORD PTR [rip+0x1861c]        # 0x14002b280
   140012c64:	lea    r8d,[rdi+0x1]
   140012c68:	lea    rdx,[rsp+0xd0]
   140012c70:	mov    rcx,rax
   140012c73:	movzx  eax,WORD PTR [rbx]
   140012c76:	xor    r9d,r9d
   140012c79:	mov    WORD PTR [rsp+0x28],ax
   140012c7e:	mov    DWORD PTR [rsp+0x20],0xa
   140012c86:	call   QWORD PTR [rip+0x1887c]        # 0x14002b508
   140012c8c:	lea    rcx,[rsi+0x60]
   140012c90:	mov    rdx,rax
   140012c93:	call   0x140001e20
   140012c98:	lea    rcx,[rsp+0xd0]
   140012ca0:	call   QWORD PTR [rip+0x18bf2]        # 0x14002b898
   140012ca6:	lea    rcx,[rsp+0x40]
   140012cab:	call   QWORD PTR [rip+0x18be7]        # 0x14002b898
   140012cb1:	mov    r14,QWORD PTR [rsp+0xc0]
   140012cb9:	mov    rcx,r14
   140012cbc:	call   QWORD PTR [rip+0x18816]        # 0x14002b4d8
   140012cc2:	jmp    0x140012910
   140012cc7:	nop
   140012cc8:	add    al,0x2a
   140012cca:	add    DWORD PTR [rax],eax
   140012ccc:	sub    BYTE PTR [rdx],ch
   140012cce:	add    DWORD PTR [rax],eax
   140012cd0:	(bad)  
   140012cd1:	sub    al,BYTE PTR [rcx]
   140012cd3:	add    dh,cl
   140012cd5:	sub    DWORD PTR [rcx],eax
   140012cd7:	add    al,ah
   140012cd9:	sub    DWORD PTR [rcx],eax
   140012cdb:	add    dl,dh
   140012cdd:	sub    DWORD PTR [rcx],eax
   140012cdf:	add    BYTE PTR [rax-0x79fffed7],bl
   140012ce5:	sub    DWORD PTR [rcx],eax
   140012ce7:	add    BYTE PTR [rdx-0x43fffed7],ch
   140012ced:	sub    DWORD PTR [rcx],eax
   140012cef:	add    BYTE PTR [rax+0x4500012a],dh
   140012cf5:	sub    eax,DWORD PTR [rcx]
   140012cf7:	add    BYTE PTR [rax],al
   140012cf9:	or     ecx,DWORD PTR [rbx]
   140012cfb:	or     ecx,DWORD PTR [rbx]
   140012cfd:	or     ecx,DWORD PTR [rbx]
   140012cff:	or     ecx,DWORD PTR [rbx]
   140012d01:	or     ecx,DWORD PTR [rbx]
   140012d03:	or     ecx,DWORD PTR [rbx]
   140012d05:	or     eax,DWORD PTR [rcx]
   140012d07:	add    DWORD PTR [rcx],eax
   140012d09:	add    DWORD PTR [rcx],eax
   140012d0b:	add    DWORD PTR [rcx],eax
   140012d0d:	add    DWORD PTR [rbx],ecx
   140012d0f:	or     ecx,DWORD PTR [rbx]
   140012d11:	or     ecx,DWORD PTR [rbx]
   140012d13:	or     ecx,DWORD PTR [rbx]
   140012d15:	or     ecx,DWORD PTR [rbx]
   140012d17:	or     ecx,DWORD PTR [rbx]
   140012d19:	or     ecx,DWORD PTR [rbx]
   140012d1b:	or     ecx,DWORD PTR [rbx]
   140012d1d:	or     ecx,DWORD PTR [rbx]
   140012d1f:	or     ecx,DWORD PTR [rbx]
   140012d21:	or     ecx,DWORD PTR [rbx]
   140012d23:	or     ecx,DWORD PTR [rbx]
   140012d25:	or     ecx,DWORD PTR [rbx]
   140012d27:	or     ecx,DWORD PTR [rbx]
   140012d29:	or     ecx,DWORD PTR [rbx]
   140012d2b:	or     ecx,DWORD PTR [rbx]
   140012d2d:	or     ecx,DWORD PTR [rbx]
   140012d2f:	or     ecx,DWORD PTR [rbx]
   140012d31:	or     eax,DWORD PTR [rdx]
   140012d33:	or     ecx,DWORD PTR [rbx]
   140012d35:	or     ecx,DWORD PTR [rbx]
   140012d37:	add    eax,DWORD PTR [rbx+rcx*1]
   140012d3a:	or     ecx,DWORD PTR [rbx]
   140012d3c:	add    eax,0xb0b0b0b
   140012d41:	or     ecx,DWORD PTR [rbx]
   140012d43:	or     eax,DWORD PTR [rsi]
   140012d45:	or     ecx,DWORD PTR [rbx]
   140012d47:	or     eax,DWORD PTR [rdi]
   140012d49:	or     ecx,DWORD PTR [rax]
   140012d4b:	or     ecx,DWORD PTR [rcx]
   140012d4d:	or     ecx,DWORD PTR [rdx]
   140012d4f:	int3   
   140012d50:	rex push rbx
   140012d52:	sub    rsp,0x20
   140012d56:	mov    rdx,QWORD PTR [rcx+0x68]
   140012d5a:	mov    rbx,rcx
   140012d5d:	mov    eax,DWORD PTR [rdx+0x10]
   140012d60:	test   eax,eax
   140012d62:	je     0x140012d75
   140012d64:	cmp    eax,0xffffffff
   140012d67:	je     0x140012d86
   140012d69:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140012d6e:	setne  al
   140012d71:	test   al,al
   140012d73:	jne    0x140012d86
   140012d75:	mov    rcx,QWORD PTR [rcx+0x68]
   140012d79:	lea    rdx,[rip+0xfffffffffffee690]        # 0x140001410
   140012d80:	call   QWORD PTR [rip+0x18ae2]        # 0x14002b868
   140012d86:	lea    rcx,[rbx+0x58]
   140012d8a:	call   0x140011fb0
   140012d8f:	lea    rcx,[rbx+0x50]
   140012d93:	call   QWORD PTR [rip+0x1842f]        # 0x14002b1c8
   140012d99:	lea    rcx,[rbx+0x48]
   140012d9d:	call   QWORD PTR [rip+0x18425]        # 0x14002b1c8
   140012da3:	lea    rcx,[rbx+0x40]
   140012da7:	call   QWORD PTR [rip+0x1841b]        # 0x14002b1c8
   140012dad:	lea    rcx,[rbx+0x38]
   140012db1:	call   QWORD PTR [rip+0x18411]        # 0x14002b1c8
   140012db7:	lea    rcx,[rbx+0x30]
   140012dbb:	call   QWORD PTR [rip+0x18407]        # 0x14002b1c8
   140012dc1:	lea    rcx,[rbx+0x28]
   140012dc5:	call   QWORD PTR [rip+0x183fd]        # 0x14002b1c8
   140012dcb:	lea    rcx,[rbx+0x20]
   140012dcf:	call   QWORD PTR [rip+0x183f3]        # 0x14002b1c8
   140012dd5:	lea    rcx,[rbx+0x18]
   140012dd9:	call   QWORD PTR [rip+0x183e9]        # 0x14002b1c8
   140012ddf:	lea    rcx,[rbx+0x10]
   140012de3:	call   QWORD PTR [rip+0x183df]        # 0x14002b1c8
   140012de9:	lea    rcx,[rbx+0x8]
   140012ded:	call   QWORD PTR [rip+0x183d5]        # 0x14002b1c8
   140012df3:	mov    rcx,rbx
   140012df6:	add    rsp,0x20
   140012dfa:	pop    rbx
   140012dfb:	rex.W jmp QWORD PTR [rip+0x183c6]        # 0x14002b1c8
   140012e02:	int3   
   140012e03:	int3   
   140012e04:	int3   
   140012e05:	int3   
   140012e06:	int3   
   140012e07:	int3   
   140012e08:	int3   
   140012e09:	int3   
   140012e0a:	int3   
   140012e0b:	int3   
   140012e0c:	int3   
   140012e0d:	int3   
   140012e0e:	int3   
   140012e0f:	int3   
   140012e10:	mov    QWORD PTR [rsp+0x8],rbx
   140012e15:	push   rdi
   140012e16:	sub    rsp,0x20
   140012e1a:	mov    rbx,rcx
   140012e1d:	mov    rcx,QWORD PTR [rcx]
   140012e20:	movsxd rdi,edx
   140012e23:	mov    eax,DWORD PTR [rcx]
   140012e25:	cmp    eax,0x1
   140012e28:	je     0x140012e39
   140012e2a:	test   eax,eax
   140012e2c:	je     0x140012e39
   140012e2e:	mov    edx,DWORD PTR [rcx+0x4]
   140012e31:	mov    rcx,rbx
   140012e34:	call   0x140012220
   140012e39:	mov    rdx,QWORD PTR [rbx]
   140012e3c:	mov    rbx,QWORD PTR [rsp+0x30]
   140012e41:	movsxd rcx,DWORD PTR [rdx+0x8]
   140012e45:	add    rcx,rdi
   140012e48:	lea    rax,[rdx+rcx*8+0x10]
   140012e4d:	add    rsp,0x20
   140012e51:	pop    rdi
   140012e52:	ret    
   140012e53:	int3   
   140012e54:	int3   
   140012e55:	int3   
   140012e56:	int3   
   140012e57:	int3   
   140012e58:	int3   
   140012e59:	int3   
   140012e5a:	int3   
   140012e5b:	int3   
   140012e5c:	int3   
   140012e5d:	int3   
   140012e5e:	int3   
   140012e5f:	int3   
   140012e60:	mov    DWORD PTR [rsp+0x20],r9d
   140012e65:	mov    DWORD PTR [rsp+0x18],r8d
   140012e6a:	push   rbx
   140012e6b:	push   rsi
   140012e6c:	sub    rsp,0x28
   140012e70:	mov    rax,QWORD PTR [rcx]
   140012e73:	mov    rbx,rcx
   140012e76:	mov    rsi,rdx
   140012e79:	mov    ecx,DWORD PTR [rax+0xc]
   140012e7c:	lea    r8,[rsp+0x58]
   140012e81:	lea    rdx,[rsp+0x50]
   140012e86:	sub    ecx,DWORD PTR [rax+0x8]
   140012e89:	call   QWORD PTR [rip+0x187c1]        # 0x14002b650
   140012e8f:	test   eax,eax
   140012e91:	js     0x140012ec6
   140012e93:	cmp    eax,0x1
   140012e96:	jle    0x140012eb2
   140012e98:	cmp    eax,0x2
   140012e9b:	jne    0x140012ec6
   140012e9d:	mov    rdx,rbx
   140012ea0:	mov    rcx,rsi
   140012ea3:	call   0x140012030
   140012ea8:	mov    rax,rsi
   140012eab:	add    rsp,0x28
   140012eaf:	pop    rsi
   140012eb0:	pop    rbx
   140012eb1:	ret    
   140012eb2:	mov    rax,QWORD PTR [rip+0x189cf]        # 0x14002b888
   140012eb9:	mov    QWORD PTR [rsi],rax
   140012ebc:	mov    rax,rsi
   140012ebf:	add    rsp,0x28
   140012ec3:	pop    rsi
   140012ec4:	pop    rbx
   140012ec5:	ret    
   140012ec6:	mov    ecx,DWORD PTR [rsp+0x58]
   140012eca:	mov    rax,QWORD PTR [rip+0x189b7]        # 0x14002b888
   140012ed1:	mov    QWORD PTR [rsp+0x48],rbp
   140012ed6:	mov    QWORD PTR [rsp+0x20],rdi
   140012edb:	mov    QWORD PTR [rsp+0x40],rax
   140012ee0:	test   ecx,ecx
   140012ee2:	jg     0x140012f57
   140012ee4:	lea    rdx,[rsp+0x40]
   140012ee9:	mov    rcx,rsi
   140012eec:	call   0x140012030
   140012ef1:	mov    rdi,QWORD PTR [rsp+0x40]
   140012ef6:	mov    eax,DWORD PTR [rdi]
   140012ef8:	test   eax,eax
   140012efa:	je     0x140012f19
   140012efc:	cmp    eax,0xffffffff
   140012eff:	je     0x14001304b
   140012f05:	lock add DWORD PTR [rdi],0xffffffff
   140012f09:	setne  al
   140012f0c:	test   al,al
   140012f0e:	jne    0x14001304b
   140012f14:	mov    rdi,QWORD PTR [rsp+0x40]
   140012f19:	movsxd rax,DWORD PTR [rdi+0xc]
   140012f1d:	lea    rbx,[rdi+rax*8+0x10]
   140012f22:	movsxd rax,DWORD PTR [rdi+0x8]
   140012f26:	lea    rbp,[rdi+rax*8+0x10]
   140012f2b:	cmp    rbp,rbx
   140012f2e:	je     0x140013042
   140012f34:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140012f40:	sub    rbx,0x8
   140012f44:	mov    rcx,rbx
   140012f47:	call   QWORD PTR [rip+0x1827b]        # 0x14002b1c8
   140012f4d:	cmp    rbx,rbp
   140012f50:	jne    0x140012f40
   140012f52:	jmp    0x140013042
   140012f57:	cmp    DWORD PTR [rax+0x4],ecx
   140012f5a:	jge    0x140012f94
   140012f5c:	mov    edx,DWORD PTR [rax]
   140012f5e:	cmp    edx,0x1
   140012f61:	je     0x140012f7e
   140012f63:	test   edx,edx
   140012f65:	je     0x140012f7e
   140012f67:	mov    edx,ecx
   140012f69:	lea    rcx,[rsp+0x40]
   140012f6e:	call   0x140012220
   140012f73:	mov    ecx,DWORD PTR [rsp+0x58]
   140012f77:	mov    rax,QWORD PTR [rsp+0x40]
   140012f7c:	jmp    0x140012f94
   140012f7e:	mov    edx,ecx
   140012f80:	lea    rcx,[rsp+0x40]
   140012f85:	call   QWORD PTR [rip+0x186a5]        # 0x14002b630
   140012f8b:	mov    ecx,DWORD PTR [rsp+0x58]
   140012f8f:	mov    rax,QWORD PTR [rsp+0x40]
   140012f94:	mov    DWORD PTR [rax+0xc],ecx
   140012f97:	mov    rax,QWORD PTR [rsp+0x40]
   140012f9c:	mov    r8,QWORD PTR [rbx]
   140012f9f:	movsxd rcx,DWORD PTR [rsp+0x58]
   140012fa4:	movsxd rdx,DWORD PTR [r8+0x8]
   140012fa8:	lea    rbp,[rax+rcx*8+0x10]
   140012fad:	movsxd rcx,DWORD PTR [rsp+0x50]
   140012fb2:	add    rdx,rcx
   140012fb5:	movsxd rcx,DWORD PTR [rax+0x8]
   140012fb9:	lea    rbx,[rax+rcx*8+0x10]
   140012fbe:	lea    rdi,[r8+rdx*8+0x10]
   140012fc3:	cmp    rbx,rbp
   140012fc6:	je     0x140012fe6
   140012fc8:	test   rbx,rbx
   140012fcb:	je     0x140012fd9
   140012fcd:	mov    rdx,rdi
   140012fd0:	mov    rcx,rbx
   140012fd3:	call   QWORD PTR [rip+0x18407]        # 0x14002b3e0
   140012fd9:	add    rbx,0x8
   140012fdd:	add    rdi,0x8
   140012fe1:	cmp    rbx,rbp
   140012fe4:	jne    0x140012fc8
   140012fe6:	lea    rdx,[rsp+0x40]
   140012feb:	mov    rcx,rsi
   140012fee:	call   0x140012030
   140012ff3:	mov    rdi,QWORD PTR [rsp+0x40]
   140012ff8:	mov    eax,DWORD PTR [rdi]
   140012ffa:	test   eax,eax
   140012ffc:	je     0x140013013
   140012ffe:	cmp    eax,0xffffffff
   140013001:	je     0x14001304b
   140013003:	lock add DWORD PTR [rdi],0xffffffff
   140013007:	setne  al
   14001300a:	test   al,al
   14001300c:	jne    0x14001304b
   14001300e:	mov    rdi,QWORD PTR [rsp+0x40]
   140013013:	movsxd rax,DWORD PTR [rdi+0xc]
   140013017:	lea    rbx,[rdi+rax*8+0x10]
   14001301c:	movsxd rax,DWORD PTR [rdi+0x8]
   140013020:	lea    rbp,[rdi+rax*8+0x10]
   140013025:	cmp    rbp,rbx
   140013028:	je     0x140013042
   14001302a:	nop    WORD PTR [rax+rax*1+0x0]
   140013030:	sub    rbx,0x8
   140013034:	mov    rcx,rbx
   140013037:	call   QWORD PTR [rip+0x1818b]        # 0x14002b1c8
   14001303d:	cmp    rbx,rbp
   140013040:	jne    0x140013030
   140013042:	mov    rcx,rdi
   140013045:	call   QWORD PTR [rip+0x18825]        # 0x14002b870
   14001304b:	mov    rbp,QWORD PTR [rsp+0x48]
   140013050:	mov    rdi,QWORD PTR [rsp+0x20]
   140013055:	mov    rax,rsi
   140013058:	add    rsp,0x28
   14001305c:	pop    rsi
   14001305d:	pop    rbx
   14001305e:	ret    
   14001305f:	int3   
   140013060:	mov    QWORD PTR [rsp+0x10],rbx
   140013065:	mov    QWORD PTR [rsp+0x18],rbp
   14001306a:	mov    QWORD PTR [rsp+0x20],rsi
   14001306f:	push   rdi
   140013070:	sub    rsp,0x30
   140013074:	mov    rax,QWORD PTR [rcx]
   140013077:	mov    rbx,rcx
   14001307a:	mov    rdi,rdx
   14001307d:	mov    ecx,DWORD PTR [rax+0x10]
   140013080:	cmp    ecx,0x1
   140013083:	je     0x140013091
   140013085:	test   ecx,ecx
   140013087:	je     0x140013091
   140013089:	mov    rcx,rbx
   14001308c:	call   0x1400122f0
   140013091:	mov    rax,QWORD PTR [rbx]
   140013094:	mov    rcx,rdi
   140013097:	mov    edx,DWORD PTR [rax+0x24]
   14001309a:	call   QWORD PTR [rip+0x18208]        # 0x14002b2a8
   1400130a0:	mov    rdx,rdi
   1400130a3:	mov    rcx,rbx
   1400130a6:	mov    r8d,eax
   1400130a9:	mov    esi,eax
   1400130ab:	call   0x14001c3c0
   1400130b0:	mov    rcx,QWORD PTR [rbx]
   1400130b3:	mov    rbp,rax
   1400130b6:	mov    rax,QWORD PTR [rax]
   1400130b9:	cmp    rax,rcx
   1400130bc:	jne    0x140013129
   1400130be:	mov    edx,DWORD PTR [rcx+0x20]
   1400130c1:	cmp    DWORD PTR [rcx+0x14],edx
   1400130c4:	jl     0x1400130f5
   1400130c6:	movsx  edx,WORD PTR [rcx+0x1e]
   1400130ca:	inc    edx
   1400130cc:	call   QWORD PTR [rip+0x1820e]        # 0x14002b2e0
   1400130d2:	mov    r11,QWORD PTR [rbx]
   1400130d5:	mov    rcx,rdi
   1400130d8:	mov    edx,DWORD PTR [r11+0x24]
   1400130dc:	call   QWORD PTR [rip+0x181c6]        # 0x14002b2a8
   1400130e2:	mov    rdx,rdi
   1400130e5:	mov    rcx,rbx
   1400130e8:	mov    r8d,eax
   1400130eb:	mov    esi,eax
   1400130ed:	call   0x14001c3c0
   1400130f2:	mov    rbp,rax
   1400130f5:	lea    rcx,[rsp+0x40]
   1400130fa:	call   QWORD PTR [rip+0x183d8]        # 0x14002b4d8
   140013100:	mov    r8,rdi
   140013103:	mov    edx,esi
   140013105:	mov    rcx,rbx
   140013108:	mov    r9,rax
   14001310b:	mov    QWORD PTR [rsp+0x20],rbp
   140013110:	call   0x140011df0
   140013115:	lea    rcx,[rsp+0x40]
   14001311a:	mov    rbx,rax
   14001311d:	call   QWORD PTR [rip+0x180a5]        # 0x14002b1c8
   140013123:	lea    rax,[rbx+0x18]
   140013127:	jmp    0x14001312d
   140013129:	add    rax,0x18
   14001312d:	mov    rbx,QWORD PTR [rsp+0x48]
   140013132:	mov    rbp,QWORD PTR [rsp+0x50]
   140013137:	mov    rsi,QWORD PTR [rsp+0x58]
   14001313c:	add    rsp,0x30
   140013140:	pop    rdi
   140013141:	ret    
   140013142:	int3   
   140013143:	int3   
   140013144:	int3   
   140013145:	int3   
   140013146:	int3   
   140013147:	int3   
   140013148:	int3   
   140013149:	int3   
   14001314a:	int3   
   14001314b:	int3   
   14001314c:	int3   
   14001314d:	int3   
   14001314e:	int3   
   14001314f:	int3   
   140013150:	rex push rbx
   140013152:	push   rbp
   140013153:	push   rsi
   140013154:	push   rdi
   140013155:	sub    rsp,0x48
   140013159:	mov    QWORD PTR [rsp+0x78],r12
   14001315e:	mov    rbx,r9
   140013161:	movzx  ebp,r8b
   140013165:	mov    r12,rdx
   140013168:	mov    rdi,rcx
   14001316b:	call   QWORD PTR [rip+0x1871f]        # 0x14002b890
   140013171:	mov    r11,QWORD PTR [rbx]
   140013174:	mov    QWORD PTR [rsp+0x20],r11
   140013179:	mov    eax,DWORD PTR [r11]
   14001317c:	test   eax,eax
   14001317e:	je     0x140013191
   140013180:	cmp    eax,0xffffffff
   140013183:	je     0x1400131f8
   140013185:	lock add DWORD PTR [r11],0x1
   14001318a:	mov    r11,QWORD PTR [rsp+0x20]
   14001318f:	jmp    0x1400131f8
   140013191:	mov    edx,DWORD PTR [r11+0x4]
   140013195:	lea    rcx,[rsp+0x20]
   14001319a:	mov    QWORD PTR [rsp+0x40],r13
   14001319f:	call   QWORD PTR [rip+0x186b3]        # 0x14002b858
   1400131a5:	mov    r11,QWORD PTR [rbx]
   1400131a8:	movsxd rax,DWORD PTR [r11+0x8]
   1400131ac:	lea    rsi,[r11+rax*8+0x10]
   1400131b1:	mov    r11,QWORD PTR [rsp+0x20]
   1400131b6:	movsxd rax,DWORD PTR [r11+0xc]
   1400131ba:	lea    r13,[r11+rax*8+0x10]
   1400131bf:	movsxd rax,DWORD PTR [r11+0x8]
   1400131c3:	lea    rbx,[r11+rax*8+0x10]
   1400131c8:	cmp    rbx,r13
   1400131cb:	je     0x1400131f3
   1400131cd:	nop    DWORD PTR [rax]
   1400131d0:	test   rbx,rbx
   1400131d3:	je     0x1400131e1
   1400131d5:	mov    rdx,rsi
   1400131d8:	mov    rcx,rbx
   1400131db:	call   QWORD PTR [rip+0x186bf]        # 0x14002b8a0
   1400131e1:	add    rbx,0x8
   1400131e5:	add    rsi,0x8
   1400131e9:	cmp    rbx,r13
   1400131ec:	jne    0x1400131d0
   1400131ee:	mov    r11,QWORD PTR [rsp+0x20]
   1400131f3:	mov    r13,QWORD PTR [rsp+0x40]
   1400131f8:	mov    DWORD PTR [rsp+0x28],0x0
   140013200:	movsxd rax,DWORD PTR [r11+0x8]
   140013204:	lea    rbx,[r11+rax*8+0x10]
   140013209:	mov    QWORD PTR [rsp+0x30],rbx
   14001320e:	movsxd rax,DWORD PTR [r11+0xc]
   140013212:	lea    rcx,[r11+rax*8+0x10]
   140013217:	mov    QWORD PTR [rsp+0x38],rcx
   14001321c:	nop    DWORD PTR [rax+0x0]
   140013220:	mov    eax,0x1
   140013225:	mov    DWORD PTR [rsp+0x28],eax
   140013229:	cmp    rbx,rcx
   14001322c:	je     0x1400132b5
   140013232:	test   eax,eax
   140013234:	je     0x14001329d
   140013236:	mov    rdx,r12
   140013239:	mov    rcx,rdi
   14001323c:	call   QWORD PTR [rip+0x17f9e]        # 0x14002b1e0
   140013242:	test   bpl,bpl
   140013245:	je     0x140013269
   140013247:	mov    rax,QWORD PTR [rbx]
   14001324a:	cmp    DWORD PTR [rax+0x4],0x0
   14001324e:	je     0x140013269
   140013250:	lea    rcx,[rsp+0x70]
   140013255:	mov    dl,0x20
   140013257:	call   QWORD PTR [rip+0x1866b]        # 0x14002b8c8
   14001325d:	mov    rcx,rdi
   140013260:	movzx  edx,WORD PTR [rax]
   140013263:	call   QWORD PTR [rip+0x182e7]        # 0x14002b550
   140013269:	mov    rdx,rbx
   14001326c:	mov    rcx,rdi
   14001326f:	call   QWORD PTR [rip+0x17f6b]        # 0x14002b1e0
   140013275:	lea    rcx,[rsp+0x88]
   14001327d:	mov    dl,0xa
   14001327f:	call   QWORD PTR [rip+0x18643]        # 0x14002b8c8
   140013285:	mov    rcx,rdi
   140013288:	movzx  edx,WORD PTR [rax]
   14001328b:	call   QWORD PTR [rip+0x182bf]        # 0x14002b550
   140013291:	mov    eax,DWORD PTR [rsp+0x28]
   140013295:	dec    eax
   140013297:	mov    DWORD PTR [rsp+0x28],eax
   14001329b:	jmp    0x140013232
   14001329d:	mov    rbx,QWORD PTR [rsp+0x30]
   1400132a2:	mov    rcx,QWORD PTR [rsp+0x38]
   1400132a7:	add    rbx,0x8
   1400132ab:	mov    QWORD PTR [rsp+0x30],rbx
   1400132b0:	jmp    0x140013220
   1400132b5:	mov    rsi,QWORD PTR [rsp+0x20]
   1400132ba:	mov    r12,QWORD PTR [rsp+0x78]
   1400132bf:	mov    eax,DWORD PTR [rsi]
   1400132c1:	test   eax,eax
   1400132c3:	je     0x1400132da
   1400132c5:	cmp    eax,0xffffffff
   1400132c8:	je     0x14001330c
   1400132ca:	lock add DWORD PTR [rsi],0xffffffff
   1400132ce:	setne  al
   1400132d1:	test   al,al
   1400132d3:	jne    0x14001330c
   1400132d5:	mov    rsi,QWORD PTR [rsp+0x20]
   1400132da:	movsxd rax,DWORD PTR [rsi+0xc]
   1400132de:	lea    rbx,[rsi+rax*8+0x10]
   1400132e3:	movsxd rax,DWORD PTR [rsi+0x8]
   1400132e7:	lea    rbp,[rsi+rax*8+0x10]
   1400132ec:	cmp    rbp,rbx
   1400132ef:	je     0x140013303
   1400132f1:	sub    rbx,0x8
   1400132f5:	mov    rcx,rbx
   1400132f8:	call   QWORD PTR [rip+0x1859a]        # 0x14002b898
   1400132fe:	cmp    rbx,rbp
   140013301:	jne    0x1400132f1
   140013303:	mov    rcx,rsi
   140013306:	call   QWORD PTR [rip+0x18564]        # 0x14002b870
   14001330c:	mov    rax,rdi
   14001330f:	add    rsp,0x48
   140013313:	pop    rdi
   140013314:	pop    rsi
   140013315:	pop    rbp
   140013316:	pop    rbx
   140013317:	ret    
   140013318:	int3   
   140013319:	int3   
   14001331a:	int3   
   14001331b:	int3   
   14001331c:	int3   
   14001331d:	int3   
   14001331e:	int3   
   14001331f:	int3   
   140013320:	mov    QWORD PTR [rsp+0x18],rbx
   140013325:	mov    QWORD PTR [rsp+0x20],rbp
   14001332a:	push   rdi
   14001332b:	sub    rsp,0x50
   14001332f:	mov    rbp,rcx
   140013332:	mov    rdi,rdx
   140013335:	lea    rcx,[rsp+0x38]
   14001333a:	mov    rdx,r9
   14001333d:	movzx  ebx,r8b
   140013341:	call   QWORD PTR [rip+0x18559]        # 0x14002b8a0
   140013347:	lea    rcx,[rsp+0x60]
   14001334c:	mov    dl,0xa
   14001334e:	call   QWORD PTR [rip+0x18574]        # 0x14002b8c8
   140013354:	lea    rcx,[rsp+0x38]
   140013359:	mov    r8d,0x1
   14001335f:	movzx  edx,WORD PTR [rax]
   140013362:	call   QWORD PTR [rip+0x18300]        # 0x14002b668
   140013368:	test   al,al
   14001336a:	je     0x14001337c
   14001336c:	lea    rcx,[rsp+0x38]
   140013371:	mov    edx,0x1
   140013376:	call   QWORD PTR [rip+0x182e4]        # 0x14002b660
   14001337c:	lea    rcx,[rsp+0x30]
   140013381:	mov    dl,0xa
   140013383:	call   QWORD PTR [rip+0x1853f]        # 0x14002b8c8
   140013389:	lea    rdx,[rsp+0x40]
   14001338e:	lea    rcx,[rsp+0x38]
   140013393:	movzx  r8d,WORD PTR [rax]
   140013397:	xor    r9d,r9d
   14001339a:	mov    DWORD PTR [rsp+0x20],0x1
   1400133a2:	call   QWORD PTR [rip+0x182b0]        # 0x14002b658
   1400133a8:	movzx  r8d,bl
   1400133ac:	mov    rdx,rdi
   1400133af:	mov    r9,rax
   1400133b2:	mov    rcx,rbp
   1400133b5:	call   0x140013150
   1400133ba:	mov    rdi,QWORD PTR [rsp+0x40]
   1400133bf:	mov    eax,DWORD PTR [rdi]
   1400133c1:	test   eax,eax
   1400133c3:	je     0x1400133da
   1400133c5:	cmp    eax,0xffffffff
   1400133c8:	je     0x140013420
   1400133ca:	lock add DWORD PTR [rdi],0xffffffff
   1400133ce:	setne  al
   1400133d1:	test   al,al
   1400133d3:	jne    0x140013420
   1400133d5:	mov    rdi,QWORD PTR [rsp+0x40]
   1400133da:	movsxd rax,DWORD PTR [rdi+0xc]
   1400133de:	mov    QWORD PTR [rsp+0x68],rsi
   1400133e3:	lea    rbx,[rdi+rax*8+0x10]
   1400133e8:	movsxd rax,DWORD PTR [rdi+0x8]
   1400133ec:	lea    rsi,[rdi+rax*8+0x10]
   1400133f1:	cmp    rsi,rbx
   1400133f4:	je     0x140013412
   1400133f6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140013400:	sub    rbx,0x8
   140013404:	mov    rcx,rbx
   140013407:	call   QWORD PTR [rip+0x1848b]        # 0x14002b898
   14001340d:	cmp    rbx,rsi
   140013410:	jne    0x140013400
   140013412:	mov    rcx,rdi
   140013415:	call   QWORD PTR [rip+0x18455]        # 0x14002b870
   14001341b:	mov    rsi,QWORD PTR [rsp+0x68]
   140013420:	lea    rcx,[rsp+0x38]
   140013425:	call   QWORD PTR [rip+0x1846d]        # 0x14002b898
   14001342b:	mov    rbx,QWORD PTR [rsp+0x70]
   140013430:	mov    rax,rbp
   140013433:	mov    rbp,QWORD PTR [rsp+0x78]
   140013438:	add    rsp,0x50
   14001343c:	pop    rdi
   14001343d:	ret    
   14001343e:	int3   
   14001343f:	int3   
   140013440:	mov    r11,rsp
   140013443:	push   rbx
   140013444:	push   rsi
   140013445:	push   rdi
   140013446:	push   r12
   140013448:	sub    rsp,0x68
   14001344c:	mov    rax,QWORD PTR [rdx]
   14001344f:	mov    QWORD PTR [r11-0x28],rbp
   140013453:	mov    QWORD PTR [r11-0x38],r14
   140013457:	mov    esi,0x4f
   14001345c:	movzx  r14d,r8b
   140013460:	xor    ebx,ebx
   140013462:	sub    esi,DWORD PTR [rax+0x4]
   140013465:	mov    rax,QWORD PTR [rip+0x1841c]        # 0x14002b888
   14001346c:	mov    QWORD PTR [r11-0x40],r15
   140013470:	mov    QWORD PTR [r11+0x10],rax
   140013474:	mov    rax,QWORD PTR [r9]
   140013477:	sub    esi,r14d
   14001347a:	cmp    esi,DWORD PTR [rax+0x4]
   14001347d:	mov    rbp,r9
   140013480:	mov    r15,rdx
   140013483:	mov    r12,rcx
   140013486:	jge    0x140013592
   14001348c:	mov    QWORD PTR [r11-0x30],r13
   140013490:	lea    rcx,[rsp+0xa0]
   140013498:	mov    dl,0x20
   14001349a:	call   QWORD PTR [rip+0x18428]        # 0x14002b8c8
   1400134a0:	lea    r8d,[rsi+rbx*1-0x1]
   1400134a5:	mov    r9d,0x1
   1400134ab:	movzx  edx,WORD PTR [rax]
   1400134ae:	mov    rcx,rbp
   1400134b1:	call   QWORD PTR [rip+0x181c1]        # 0x14002b678
   1400134b7:	cmp    eax,ebx
   1400134b9:	mov    edi,eax
   1400134bb:	jge    0x1400134ed
   1400134bd:	lea    rcx,[rsp+0x90]
   1400134c5:	mov    dl,0x20
   1400134c7:	call   QWORD PTR [rip+0x183fb]        # 0x14002b8c8
   1400134cd:	lea    r8d,[rbx+rsi*1]
   1400134d1:	mov    r9d,0x1
   1400134d7:	movzx  edx,WORD PTR [rax]
   1400134da:	mov    rcx,rbp
   1400134dd:	call   QWORD PTR [rip+0x1818d]        # 0x14002b670
   1400134e3:	mov    edi,eax
   1400134e5:	test   eax,eax
   1400134e7:	js     0x14001358d
   1400134ed:	mov    r9d,edi
   1400134f0:	lea    rdx,[rsp+0x20]
   1400134f5:	mov    r8d,ebx
   1400134f8:	sub    r9d,ebx
   1400134fb:	mov    rcx,rbp
   1400134fe:	call   QWORD PTR [rip+0x17e54]        # 0x14002b358
   140013504:	mov    rcx,QWORD PTR [rsp+0x98]
   14001350c:	mov    edx,DWORD PTR [rcx]
   14001350e:	mov    rbx,rax
   140013511:	cmp    edx,0x1
   140013514:	je     0x140013545
   140013516:	test   edx,edx
   140013518:	je     0x140013545
   14001351a:	lea    rcx,[rsp+0x98]
   140013522:	mov    edx,0x7fffffff
   140013527:	mov    r8d,0x1
   14001352d:	call   0x140001a10
   140013532:	test   rax,rax
   140013535:	je     0x14001356f
   140013537:	mov    rdx,rbx
   14001353a:	mov    rcx,rax
   14001353d:	call   QWORD PTR [rip+0x1835d]        # 0x14002b8a0
   140013543:	jmp    0x14001356f
   140013545:	lea    rcx,[rsp+0xa8]
   14001354d:	mov    rdx,rax
   140013550:	call   QWORD PTR [rip+0x1834a]        # 0x14002b8a0
   140013556:	lea    rcx,[rsp+0x98]
   14001355e:	call   QWORD PTR [rip+0x182dc]        # 0x14002b840
   140013564:	mov    rcx,QWORD PTR [rsp+0xa8]
   14001356c:	mov    QWORD PTR [rax],rcx
   14001356f:	lea    rcx,[rsp+0x20]
   140013574:	call   QWORD PTR [rip+0x1831e]        # 0x14002b898
   14001357a:	mov    rax,QWORD PTR [rbp+0x0]
   14001357e:	lea    ebx,[rdi+0x1]
   140013581:	lea    ecx,[rbx+rsi*1]
   140013584:	cmp    ecx,DWORD PTR [rax+0x4]
   140013587:	jl     0x140013490
   14001358d:	mov    r13,QWORD PTR [rsp+0x58]
   140013592:	lea    rdx,[rsp+0x30]
   140013597:	or     r9d,0xffffffff
   14001359b:	mov    r8d,ebx
   14001359e:	mov    rcx,rbp
   1400135a1:	call   QWORD PTR [rip+0x17db1]        # 0x14002b358
   1400135a7:	mov    rcx,QWORD PTR [rsp+0x98]
   1400135af:	mov    rbp,QWORD PTR [rsp+0x60]
   1400135b4:	mov    rbx,rax
   1400135b7:	mov    eax,DWORD PTR [rcx]
   1400135b9:	cmp    eax,0x1
   1400135bc:	je     0x1400135ed
   1400135be:	test   eax,eax
   1400135c0:	je     0x1400135ed
   1400135c2:	lea    rcx,[rsp+0x98]
   1400135ca:	mov    edx,0x7fffffff
   1400135cf:	mov    r8d,0x1
   1400135d5:	call   0x140001a10
   1400135da:	test   rax,rax
   1400135dd:	je     0x140013611
   1400135df:	mov    rdx,rbx
   1400135e2:	mov    rcx,rax
   1400135e5:	call   QWORD PTR [rip+0x182b5]        # 0x14002b8a0
   1400135eb:	jmp    0x140013611
   1400135ed:	lea    rcx,[rsp+0x28]
   1400135f2:	mov    rdx,rbx
   1400135f5:	call   QWORD PTR [rip+0x182a5]        # 0x14002b8a0
   1400135fb:	lea    rcx,[rsp+0x98]
   140013603:	call   QWORD PTR [rip+0x18237]        # 0x14002b840
   140013609:	mov    rcx,QWORD PTR [rsp+0x28]
   14001360e:	mov    QWORD PTR [rax],rcx
   140013611:	lea    rcx,[rsp+0x30]
   140013616:	call   QWORD PTR [rip+0x1827c]        # 0x14002b898
   14001361c:	lea    r9,[rsp+0x98]
   140013624:	movzx  r8d,r14b
   140013628:	mov    rdx,r15
   14001362b:	mov    rcx,r12
   14001362e:	call   0x140013150
   140013633:	mov    rdi,QWORD PTR [rsp+0x98]
   14001363b:	mov    r15,QWORD PTR [rsp+0x48]
   140013640:	mov    eax,DWORD PTR [rdi]
   140013642:	mov    r14,QWORD PTR [rsp+0x50]
   140013647:	test   eax,eax
   140013649:	je     0x140013663
   14001364b:	cmp    eax,0xffffffff
   14001364e:	je     0x14001369b
   140013650:	lock add DWORD PTR [rdi],0xffffffff
   140013654:	setne  al
   140013657:	test   al,al
   140013659:	jne    0x14001369b
   14001365b:	mov    rdi,QWORD PTR [rsp+0x98]
   140013663:	movsxd rax,DWORD PTR [rdi+0xc]
   140013667:	lea    rbx,[rdi+rax*8+0x10]
   14001366c:	movsxd rax,DWORD PTR [rdi+0x8]
   140013670:	lea    rsi,[rdi+rax*8+0x10]
   140013675:	cmp    rsi,rbx
   140013678:	je     0x140013692
   14001367a:	nop    WORD PTR [rax+rax*1+0x0]
   140013680:	sub    rbx,0x8
   140013684:	mov    rcx,rbx
   140013687:	call   QWORD PTR [rip+0x1820b]        # 0x14002b898
   14001368d:	cmp    rbx,rsi
   140013690:	jne    0x140013680
   140013692:	mov    rcx,rdi
   140013695:	call   QWORD PTR [rip+0x181d5]        # 0x14002b870
   14001369b:	mov    rax,r12
   14001369e:	add    rsp,0x68
   1400136a2:	pop    r12
   1400136a4:	pop    rdi
   1400136a5:	pop    rsi
   1400136a6:	pop    rbx
   1400136a7:	ret    
   1400136a8:	int3   
   1400136a9:	int3   
   1400136aa:	int3   
   1400136ab:	int3   
   1400136ac:	int3   
   1400136ad:	int3   
   1400136ae:	int3   
   1400136af:	int3   
   1400136b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400136b5:	push   rdi
   1400136b6:	sub    rsp,0x20
   1400136ba:	mov    rbx,rdx
   1400136bd:	mov    rdi,rcx
   1400136c0:	call   QWORD PTR [rip+0x17b9a]        # 0x14002b260
   1400136c6:	lea    rdx,[rbx+0x8]
   1400136ca:	lea    rcx,[rdi+0x8]
   1400136ce:	call   QWORD PTR [rip+0x17b8c]        # 0x14002b260
   1400136d4:	lea    rdx,[rbx+0x10]
   1400136d8:	lea    rcx,[rdi+0x10]
   1400136dc:	call   QWORD PTR [rip+0x17b7e]        # 0x14002b260
   1400136e2:	lea    rdx,[rbx+0x18]
   1400136e6:	lea    rcx,[rdi+0x18]
   1400136ea:	call   QWORD PTR [rip+0x17b70]        # 0x14002b260
   1400136f0:	lea    rdx,[rbx+0x20]
   1400136f4:	lea    rcx,[rdi+0x20]
   1400136f8:	call   QWORD PTR [rip+0x17b62]        # 0x14002b260
   1400136fe:	lea    rdx,[rbx+0x28]
   140013702:	lea    rcx,[rdi+0x28]
   140013706:	call   QWORD PTR [rip+0x17b54]        # 0x14002b260
   14001370c:	lea    rdx,[rbx+0x30]
   140013710:	lea    rcx,[rdi+0x30]
   140013714:	call   QWORD PTR [rip+0x17b46]        # 0x14002b260
   14001371a:	lea    rdx,[rbx+0x38]
   14001371e:	lea    rcx,[rdi+0x38]
   140013722:	call   QWORD PTR [rip+0x17b38]        # 0x14002b260
   140013728:	lea    rdx,[rbx+0x40]
   14001372c:	lea    rcx,[rdi+0x40]
   140013730:	call   QWORD PTR [rip+0x17b2a]        # 0x14002b260
   140013736:	lea    rdx,[rbx+0x48]
   14001373a:	lea    rcx,[rdi+0x48]
   14001373e:	call   QWORD PTR [rip+0x17b1c]        # 0x14002b260
   140013744:	lea    rdx,[rbx+0x50]
   140013748:	lea    rcx,[rdi+0x50]
   14001374c:	call   QWORD PTR [rip+0x17b0e]        # 0x14002b260
   140013752:	lea    rdx,[rbx+0x58]
   140013756:	lea    rcx,[rdi+0x58]
   14001375a:	call   0x140012360
   14001375f:	movzx  r11d,BYTE PTR [rbx+0x60]
   140013764:	lea    rdx,[rbx+0x68]
   140013768:	mov    BYTE PTR [rdi+0x60],r11b
   14001376c:	movzx  eax,BYTE PTR [rbx+0x61]
   140013770:	lea    rcx,[rdi+0x68]
   140013774:	mov    BYTE PTR [rdi+0x61],al
   140013777:	call   0x140005c40
   14001377c:	mov    rbx,QWORD PTR [rsp+0x30]
   140013781:	mov    rax,rdi
   140013784:	add    rsp,0x20
   140013788:	pop    rdi
   140013789:	ret    
   14001378a:	int3   
   14001378b:	int3   
   14001378c:	int3   
   14001378d:	int3   
   14001378e:	int3   
   14001378f:	int3   
   140013790:	mov    QWORD PTR [rsp+0x10],rbx
   140013795:	mov    QWORD PTR [rsp+0x20],rbp
   14001379a:	push   rsi
   14001379b:	sub    rsp,0x30
   14001379f:	mov    rsi,r9
   1400137a2:	mov    rbx,rdx
   1400137a5:	mov    rbp,rcx
   1400137a8:	test   r8,r8
   1400137ab:	je     0x1400137ce
   1400137ad:	mov    QWORD PTR [rsp+0x40],rdi
   1400137b2:	or     rcx,0xffffffffffffffff
   1400137b6:	xor    eax,eax
   1400137b8:	mov    rdi,r8
   1400137bb:	repnz scas al,BYTE PTR es:[rdi]
   1400137bd:	mov    rdi,QWORD PTR [rsp+0x40]
   1400137c2:	not    rcx
   1400137c5:	dec    rcx
   1400137c8:	mov    DWORD PTR [rsp+0x20],ecx
   1400137cc:	jmp    0x1400137d6
   1400137ce:	mov    DWORD PTR [rsp+0x20],0x0
   1400137d6:	mov    QWORD PTR [rsp+0x28],r8
   1400137db:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   1400137e0:	lea    rdx,[rsp+0x20]
   1400137e5:	lea    rcx,[rsp+0x50]
   1400137ea:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   1400137f0:	call   QWORD PTR [rip+0x1806a]        # 0x14002b860
   1400137f6:	lea    rdx,[rsp+0x50]
   1400137fb:	mov    r8d,0x1
   140013801:	mov    rcx,rbx
   140013804:	call   QWORD PTR [rip+0x17a96]        # 0x14002b2a0
   14001380a:	test   al,al
   14001380c:	jne    0x140013865
   14001380e:	mov    rax,QWORD PTR [rbx]
   140013811:	mov    ecx,DWORD PTR [rax]
   140013813:	cmp    ecx,0x1
   140013816:	je     0x140013844
   140013818:	test   ecx,ecx
   14001381a:	je     0x140013844
   14001381c:	mov    edx,0x7fffffff
   140013821:	mov    r8d,0x1
   140013827:	mov    rcx,rbx
   14001382a:	call   0x140001a10
   14001382f:	test   rax,rax
   140013832:	je     0x140013865
   140013834:	lea    rdx,[rsp+0x50]
   140013839:	mov    rcx,rax
   14001383c:	call   QWORD PTR [rip+0x1805e]        # 0x14002b8a0
   140013842:	jmp    0x140013865
   140013844:	lea    rdx,[rsp+0x50]
   140013849:	lea    rcx,[rsp+0x20]
   14001384e:	call   QWORD PTR [rip+0x1804c]        # 0x14002b8a0
   140013854:	mov    rcx,rbx
   140013857:	call   QWORD PTR [rip+0x17fe3]        # 0x14002b840
   14001385d:	mov    rcx,QWORD PTR [rsp+0x20]
   140013862:	mov    QWORD PTR [rax],rcx
   140013865:	lea    rdx,[rsp+0x50]
   14001386a:	lea    rcx,[rsp+0x20]
   14001386f:	call   0x140011eb0
   140013874:	mov    rcx,rbp
   140013877:	mov    rdx,rax
   14001387a:	call   0x140005ee0
   14001387f:	mov    rdx,rsi
   140013882:	mov    rcx,rax
   140013885:	call   QWORD PTR [rip+0x18025]        # 0x14002b8b0
   14001388b:	lea    rcx,[rsp+0x20]
   140013890:	call   QWORD PTR [rip+0x18002]        # 0x14002b898
   140013896:	lea    rcx,[rsp+0x50]
   14001389b:	call   QWORD PTR [rip+0x17ff7]        # 0x14002b898
   1400138a1:	mov    rbx,QWORD PTR [rsp+0x48]
   1400138a6:	mov    rbp,QWORD PTR [rsp+0x58]
   1400138ab:	add    rsp,0x30
   1400138af:	pop    rsi
   1400138b0:	ret    
   1400138b1:	int3   
   1400138b2:	int3   
   1400138b3:	int3   
   1400138b4:	int3   
   1400138b5:	int3   
   1400138b6:	int3   
   1400138b7:	int3   
   1400138b8:	int3   
   1400138b9:	int3   
   1400138ba:	int3   
   1400138bb:	int3   
   1400138bc:	int3   
   1400138bd:	int3   
   1400138be:	int3   
   1400138bf:	int3   
   1400138c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400138c5:	push   rdi
   1400138c6:	sub    rsp,0x20
   1400138ca:	xor    r8d,r8d
   1400138cd:	mov    rdi,rcx
   1400138d0:	call   0x140011970
   1400138d5:	movsxd rbx,eax
   1400138d8:	cmp    ebx,0xffffffff
   1400138db:	je     0x140013934
   1400138dd:	test   eax,eax
   1400138df:	js     0x140013927
   1400138e1:	mov    rdx,QWORD PTR [rdi]
   1400138e4:	mov    ecx,DWORD PTR [rdx+0xc]
   1400138e7:	sub    ecx,DWORD PTR [rdx+0x8]
   1400138ea:	cmp    ebx,ecx
   1400138ec:	jge    0x140013927
   1400138ee:	mov    ecx,DWORD PTR [rdx]
   1400138f0:	cmp    ecx,0x1
   1400138f3:	je     0x140013904
   1400138f5:	test   ecx,ecx
   1400138f7:	je     0x140013904
   1400138f9:	mov    edx,DWORD PTR [rdx+0x4]
   1400138fc:	mov    rcx,rdi
   1400138ff:	call   0x140001cd0
   140013904:	mov    rdx,QWORD PTR [rdi]
   140013907:	mov    rax,rbx
   14001390a:	movsxd rcx,DWORD PTR [rdx+0x8]
   14001390e:	add    rcx,rbx
   140013911:	lea    rcx,[rdx+rcx*8+0x10]
   140013916:	call   QWORD PTR [rip+0x17f7c]        # 0x14002b898
   14001391c:	mov    edx,ebx
   14001391e:	mov    rcx,rdi
   140013921:	call   QWORD PTR [rip+0x17a59]        # 0x14002b380
   140013927:	mov    al,0x1
   140013929:	mov    rbx,QWORD PTR [rsp+0x30]
   14001392e:	add    rsp,0x20
   140013932:	pop    rdi
   140013933:	ret    
   140013934:	xor    al,al
   140013936:	mov    rbx,QWORD PTR [rsp+0x30]
   14001393b:	add    rsp,0x20
   14001393f:	pop    rdi
   140013940:	ret    
   140013941:	int3   
   140013942:	int3   
   140013943:	int3   
   140013944:	int3   
   140013945:	int3   
   140013946:	int3   
   140013947:	int3   
   140013948:	int3   
   140013949:	int3   
   14001394a:	int3   
   14001394b:	int3   
   14001394c:	int3   
   14001394d:	int3   
   14001394e:	int3   
   14001394f:	int3   
   140013950:	mov    rax,rsp
   140013953:	mov    BYTE PTR [rax+0x20],r9b
   140013957:	mov    QWORD PTR [rax+0x18],r8
   14001395b:	mov    QWORD PTR [rax+0x10],rdx
   14001395f:	mov    QWORD PTR [rax+0x8],rcx
   140013963:	push   rbx
   140013964:	push   rsi
   140013965:	push   rdi
   140013966:	push   r13
   140013968:	push   r14
   14001396a:	sub    rsp,0x290
   140013971:	mov    QWORD PTR [rax-0x30],rbp
   140013975:	mov    QWORD PTR [rax-0x38],r12
   140013979:	mov    QWORD PTR [rax-0x40],r15
   14001397d:	mov    rax,QWORD PTR [rip+0x17f04]        # 0x14002b888
   140013984:	mov    r14,rcx
   140013987:	lea    rcx,[rsp+0x28]
   14001398c:	movzx  r12d,r9b
   140013990:	mov    rdi,r8
   140013993:	mov    r15,rdx
   140013996:	mov    QWORD PTR [rsp+0x20],rax
   14001399b:	xor    ebx,ebx
   14001399d:	call   QWORD PTR [rip+0x17eed]        # 0x14002b890
   1400139a3:	mov    rsi,QWORD PTR [rsp+0x2e0]
   1400139ab:	or     r13,0xffffffffffffffff
   1400139af:	mov    rax,QWORD PTR [rsi]
   1400139b2:	cmp    DWORD PTR [rax+0x4],ebx
   1400139b5:	jle    0x140013ecb
   1400139bb:	lea    rdi,[rip+0xfffffffffffec63e]        # 0x140000000
   1400139c2:	lea    r15,[rip+0x19de7]        # 0x14002d7b0
   1400139c9:	lea    r14,[rip+0x19ddc]        # 0x14002d7ac
   1400139d0:	lea    r12,[rip+0x19dd1]        # 0x14002d7a8
   1400139d7:	nop    WORD PTR [rax+rax*1+0x0]
   1400139e0:	lea    rdx,[rsp+0x2e0]
   1400139e8:	mov    r8d,ebx
   1400139eb:	mov    rcx,rsi
   1400139ee:	call   QWORD PTR [rip+0x17c94]        # 0x14002b688
   1400139f4:	inc    ebx
   1400139f6:	movzx  edx,WORD PTR [rax]
   1400139f9:	mov    ebp,edx
   1400139fb:	lea    eax,[rdx-0x7]
   1400139fe:	cmp    eax,0x55
   140013a01:	ja     0x140013d8a
   140013a07:	cdqe   
   140013a09:	movzx  eax,BYTE PTR [rdi+rax*1+0x14868]
   140013a11:	mov    ecx,DWORD PTR [rdi+rax*4+0x14840]
   140013a18:	add    rcx,rdi
   140013a1b:	jmp    rcx
   140013a1d:	lea    rdx,[rip+0x19d80]        # 0x14002d7a4
   140013a24:	xor    eax,eax
   140013a26:	mov    rcx,r13
   140013a29:	mov    rdi,rdx
   140013a2c:	mov    QWORD PTR [rsp+0x88],rdx
   140013a34:	lea    rdx,[rsp+0x1f0]
   140013a3c:	repnz scas al,BYTE PTR es:[rdi]
   140013a3e:	not    rcx
   140013a41:	dec    rcx
   140013a44:	mov    DWORD PTR [rsp+0x80],ecx
   140013a4b:	lea    rcx,[rsp+0x28]
   140013a50:	movaps xmm0,XMMWORD PTR [rsp+0x80]
   140013a58:	movdqa XMMWORD PTR [rsp+0x1f0],xmm0
   140013a61:	call   QWORD PTR [rip+0x17821]        # 0x14002b288
   140013a67:	mov    rdx,QWORD PTR [rsp+0x20]
   140013a6c:	mov    eax,DWORD PTR [rdx]
   140013a6e:	cmp    eax,0x1
   140013a71:	je     0x140013aa1
   140013a73:	test   eax,eax
   140013a75:	je     0x140013aa1
   140013a77:	lea    rcx,[rsp+0x20]
   140013a7c:	mov    edx,0x7fffffff
   140013a81:	mov    r8d,0x1
   140013a87:	call   0x140001a10
   140013a8c:	test   rax,rax
   140013a8f:	je     0x140013aca
   140013a91:	lea    rdx,[rsp+0x28]
   140013a96:	mov    rcx,rax
   140013a99:	call   QWORD PTR [rip+0x17e01]        # 0x14002b8a0
   140013a9f:	jmp    0x140013aca
   140013aa1:	lea    rdx,[rsp+0x28]
   140013aa6:	lea    rcx,[rsp+0x140]
   140013aae:	call   QWORD PTR [rip+0x17dec]        # 0x14002b8a0
   140013ab4:	lea    rcx,[rsp+0x20]
   140013ab9:	call   QWORD PTR [rip+0x17d81]        # 0x14002b840
   140013abf:	mov    rcx,QWORD PTR [rsp+0x140]
   140013ac7:	mov    QWORD PTR [rax],rcx
   140013aca:	lea    rcx,[rsp+0x28]
   140013acf:	call   QWORD PTR [rip+0x178eb]        # 0x14002b3c0
   140013ad5:	lea    rdi,[rip+0xfffffffffffec524]        # 0x140000000
   140013adc:	jmp    0x140013e9f
   140013ae1:	xor    eax,eax
   140013ae3:	mov    rcx,r13
   140013ae6:	mov    rdi,r12
   140013ae9:	repnz scas al,BYTE PTR es:[rdi]
   140013aeb:	mov    QWORD PTR [rsp+0xb8],r12
   140013af3:	lea    rdx,[rsp+0x260]
   140013afb:	not    rcx
   140013afe:	dec    rcx
   140013b01:	mov    DWORD PTR [rsp+0xb0],ecx
   140013b08:	lea    rcx,[rsp+0x28]
   140013b0d:	movaps xmm0,XMMWORD PTR [rsp+0xb0]
   140013b15:	movdqa XMMWORD PTR [rsp+0x260],xmm0
   140013b1e:	call   QWORD PTR [rip+0x17764]        # 0x14002b288
   140013b24:	lea    rdi,[rip+0xfffffffffffec4d5]        # 0x140000000
   140013b2b:	jmp    0x140013e9f
   140013b30:	lea    rdx,[rip+0x19c69]        # 0x14002d7a0
   140013b37:	xor    eax,eax
   140013b39:	mov    rcx,r13
   140013b3c:	mov    rdi,rdx
   140013b3f:	mov    QWORD PTR [rsp+0xf8],rdx
   140013b47:	lea    rdx,[rsp+0x1d0]
   140013b4f:	repnz scas al,BYTE PTR es:[rdi]
   140013b51:	not    rcx
   140013b54:	dec    rcx
   140013b57:	mov    DWORD PTR [rsp+0xf0],ecx
   140013b5e:	lea    rcx,[rsp+0x28]
   140013b63:	movaps xmm0,XMMWORD PTR [rsp+0xf0]
   140013b6b:	movdqa XMMWORD PTR [rsp+0x1d0],xmm0
   140013b74:	call   QWORD PTR [rip+0x1770e]        # 0x14002b288
   140013b7a:	lea    rdi,[rip+0xfffffffffffec47f]        # 0x140000000
   140013b81:	jmp    0x140013e9f
   140013b86:	lea    rdx,[rip+0x19c0f]        # 0x14002d79c
   140013b8d:	xor    eax,eax
   140013b8f:	mov    rcx,r13
   140013b92:	mov    rdi,rdx
   140013b95:	mov    QWORD PTR [rsp+0xd8],rdx
   140013b9d:	lea    rdx,[rsp+0x250]
   140013ba5:	repnz scas al,BYTE PTR es:[rdi]
   140013ba7:	not    rcx
   140013baa:	dec    rcx
   140013bad:	mov    DWORD PTR [rsp+0xd0],ecx
   140013bb4:	lea    rcx,[rsp+0x28]
   140013bb9:	movaps xmm0,XMMWORD PTR [rsp+0xd0]
   140013bc1:	movdqa XMMWORD PTR [rsp+0x250],xmm0
   140013bca:	call   QWORD PTR [rip+0x176b8]        # 0x14002b288
   140013bd0:	lea    rdi,[rip+0xfffffffffffec429]        # 0x140000000
   140013bd7:	jmp    0x140013e9f
   140013bdc:	lea    rdx,[rip+0x19bb5]        # 0x14002d798
   140013be3:	xor    eax,eax
   140013be5:	mov    rcx,r13
   140013be8:	mov    rdi,rdx
   140013beb:	mov    QWORD PTR [rsp+0xc8],rdx
   140013bf3:	lea    rdx,[rsp+0x1b0]
   140013bfb:	repnz scas al,BYTE PTR es:[rdi]
   140013bfd:	not    rcx
   140013c00:	dec    rcx
   140013c03:	mov    DWORD PTR [rsp+0xc0],ecx
   140013c0a:	lea    rcx,[rsp+0x28]
   140013c0f:	movaps xmm0,XMMWORD PTR [rsp+0xc0]
   140013c17:	movdqa XMMWORD PTR [rsp+0x1b0],xmm0
   140013c20:	call   QWORD PTR [rip+0x17662]        # 0x14002b288
   140013c26:	lea    rdi,[rip+0xfffffffffffec3d3]        # 0x140000000
   140013c2d:	jmp    0x140013e9f
   140013c32:	lea    rdx,[rip+0x19b5b]        # 0x14002d794
   140013c39:	xor    eax,eax
   140013c3b:	mov    rcx,r13
   140013c3e:	mov    rdi,rdx
   140013c41:	mov    QWORD PTR [rsp+0x108],rdx
   140013c49:	lea    rdx,[rsp+0x230]
   140013c51:	repnz scas al,BYTE PTR es:[rdi]
   140013c53:	not    rcx
   140013c56:	dec    rcx
   140013c59:	mov    DWORD PTR [rsp+0x100],ecx
   140013c60:	lea    rcx,[rsp+0x28]
   140013c65:	movaps xmm0,XMMWORD PTR [rsp+0x100]
   140013c6d:	movdqa XMMWORD PTR [rsp+0x230],xmm0
   140013c76:	call   QWORD PTR [rip+0x1760c]        # 0x14002b288
   140013c7c:	lea    rdi,[rip+0xfffffffffffec37d]        # 0x140000000
   140013c83:	jmp    0x140013e9f
   140013c88:	lea    rdx,[rip+0x19b01]        # 0x14002d790
   140013c8f:	xor    eax,eax
   140013c91:	mov    rcx,r13
   140013c94:	mov    rdi,rdx
   140013c97:	mov    QWORD PTR [rsp+0x138],rdx
   140013c9f:	lea    rdx,[rsp+0x210]
   140013ca7:	repnz scas al,BYTE PTR es:[rdi]
   140013ca9:	not    rcx
   140013cac:	dec    rcx
   140013caf:	mov    DWORD PTR [rsp+0x130],ecx
   140013cb6:	lea    rcx,[rsp+0x28]
   140013cbb:	movaps xmm0,XMMWORD PTR [rsp+0x130]
   140013cc3:	movdqa XMMWORD PTR [rsp+0x210],xmm0
   140013ccc:	call   QWORD PTR [rip+0x175b6]        # 0x14002b288
   140013cd2:	lea    rdi,[rip+0xfffffffffffec327]        # 0x140000000
   140013cd9:	jmp    0x140013e9f
   140013cde:	lea    rdx,[rip+0x19aa7]        # 0x14002d78c
   140013ce5:	xor    eax,eax
   140013ce7:	mov    rcx,r13
   140013cea:	mov    rdi,rdx
   140013ced:	mov    QWORD PTR [rsp+0xe8],rdx
   140013cf5:	lea    rdx,[rsp+0x1c0]
   140013cfd:	repnz scas al,BYTE PTR es:[rdi]
   140013cff:	not    rcx
   140013d02:	dec    rcx
   140013d05:	mov    DWORD PTR [rsp+0xe0],ecx
   140013d0c:	lea    rcx,[rsp+0x28]
   140013d11:	movaps xmm0,XMMWORD PTR [rsp+0xe0]
   140013d19:	movdqa XMMWORD PTR [rsp+0x1c0],xmm0
   140013d22:	call   QWORD PTR [rip+0x17560]        # 0x14002b288
   140013d28:	lea    rdi,[rip+0xfffffffffffec2d1]        # 0x140000000
   140013d2f:	jmp    0x140013e9f
   140013d34:	lea    rdx,[rip+0x19a4d]        # 0x14002d788
   140013d3b:	xor    eax,eax
   140013d3d:	mov    rcx,r13
   140013d40:	mov    rdi,rdx
   140013d43:	mov    QWORD PTR [rsp+0x128],rdx
   140013d4b:	lea    rdx,[rsp+0x1e0]
   140013d53:	repnz scas al,BYTE PTR es:[rdi]
   140013d55:	not    rcx
   140013d58:	dec    rcx
   140013d5b:	mov    DWORD PTR [rsp+0x120],ecx
   140013d62:	lea    rcx,[rsp+0x28]
   140013d67:	movaps xmm0,XMMWORD PTR [rsp+0x120]
   140013d6f:	movdqa XMMWORD PTR [rsp+0x1e0],xmm0
   140013d78:	call   QWORD PTR [rip+0x1750a]        # 0x14002b288
   140013d7e:	lea    rdi,[rip+0xfffffffffffec27b]        # 0x140000000
   140013d85:	jmp    0x140013e9f
   140013d8a:	cmp    dx,0x20
   140013d8e:	jae    0x140013e82
   140013d94:	xor    eax,eax
   140013d96:	mov    rcx,r13
   140013d99:	mov    rdi,r15
   140013d9c:	repnz scas al,BYTE PTR es:[rdi]
   140013d9e:	mov    QWORD PTR [rsp+0x118],r15
   140013da6:	lea    rdx,[rsp+0x200]
   140013dae:	not    rcx
   140013db1:	dec    rcx
   140013db4:	mov    DWORD PTR [rsp+0x110],ecx
   140013dbb:	lea    rcx,[rsp+0x28]
   140013dc0:	movaps xmm0,XMMWORD PTR [rsp+0x110]
   140013dc8:	movdqa XMMWORD PTR [rsp+0x200],xmm0
   140013dd1:	call   QWORD PTR [rip+0x174b1]        # 0x14002b288
   140013dd7:	lea    rcx,[rsp+0x148]
   140013ddf:	mov    r8d,0x10
   140013de5:	mov    edx,ebp
   140013de7:	call   QWORD PTR [rip+0x17893]        # 0x14002b680
   140013ded:	lea    rcx,[rsp+0x28]
   140013df2:	mov    rdx,rax
   140013df5:	call   QWORD PTR [rip+0x173e5]        # 0x14002b1e0
   140013dfb:	lea    rcx,[rsp+0x148]
   140013e03:	call   QWORD PTR [rip+0x17a8f]        # 0x14002b898
   140013e09:	mov    rdx,QWORD PTR [rsi]
   140013e0c:	cmp    ebx,DWORD PTR [rdx+0x4]
   140013e0f:	jge    0x140013e98
   140013e15:	lea    rdx,[rsp+0x90]
   140013e1d:	mov    r8d,ebx
   140013e20:	mov    rcx,rsi
   140013e23:	call   QWORD PTR [rip+0x1785f]        # 0x14002b688
   140013e29:	movzx  ecx,WORD PTR [rax]
   140013e2c:	call   QWORD PTR [rip+0x172d6]        # 0x14002b108
   140013e32:	test   eax,eax
   140013e34:	je     0x140013e8f
   140013e36:	xor    eax,eax
   140013e38:	mov    rcx,r13
   140013e3b:	mov    rdi,r14
   140013e3e:	repnz scas al,BYTE PTR es:[rdi]
   140013e40:	mov    QWORD PTR [rsp+0xa8],r14
   140013e48:	lea    rdx,[rsp+0x220]
   140013e50:	not    rcx
   140013e53:	dec    rcx
   140013e56:	mov    DWORD PTR [rsp+0xa0],ecx
   140013e5d:	lea    rcx,[rsp+0x28]
   140013e62:	movaps xmm0,XMMWORD PTR [rsp+0xa0]
   140013e6a:	movdqa XMMWORD PTR [rsp+0x220],xmm0
   140013e73:	call   QWORD PTR [rip+0x1740f]        # 0x14002b288
   140013e79:	lea    rdi,[rip+0xfffffffffffec180]        # 0x140000000
   140013e80:	jmp    0x140013e9f
   140013e82:	lea    rcx,[rsp+0x28]
   140013e87:	call   QWORD PTR [rip+0x176c3]        # 0x14002b550
   140013e8d:	jmp    0x140013e9f
   140013e8f:	lea    rdi,[rip+0xfffffffffffec16a]        # 0x140000000
   140013e96:	jmp    0x140013e9f
   140013e98:	lea    rdi,[rip+0xfffffffffffec161]        # 0x140000000
   140013e9f:	mov    rax,QWORD PTR [rsi]
   140013ea2:	cmp    ebx,DWORD PTR [rax+0x4]
   140013ea5:	jl     0x1400139e0
   140013eab:	mov    r12b,BYTE PTR [rsp+0x2d8]
   140013eb3:	mov    r14,QWORD PTR [rsp+0x2c0]
   140013ebb:	mov    r15,QWORD PTR [rsp+0x2c8]
   140013ec3:	mov    rdi,QWORD PTR [rsp+0x2d0]
   140013ecb:	mov    rax,QWORD PTR [rsp+0x28]
   140013ed0:	cmp    DWORD PTR [rax+0x4],0x0
   140013ed4:	je     0x140013f39
   140013ed6:	mov    rax,QWORD PTR [rsp+0x20]
   140013edb:	mov    ecx,DWORD PTR [rax]
   140013edd:	cmp    ecx,0x1
   140013ee0:	je     0x140013f10
   140013ee2:	test   ecx,ecx
   140013ee4:	je     0x140013f10
   140013ee6:	lea    rcx,[rsp+0x20]
   140013eeb:	mov    edx,0x7fffffff
   140013ef0:	mov    r8d,0x1
   140013ef6:	call   0x140001a10
   140013efb:	test   rax,rax
   140013efe:	je     0x140013f39
   140013f00:	lea    rdx,[rsp+0x28]
   140013f05:	mov    rcx,rax
   140013f08:	call   QWORD PTR [rip+0x17992]        # 0x14002b8a0
   140013f0e:	jmp    0x140013f39
   140013f10:	lea    rdx,[rsp+0x28]
   140013f15:	lea    rcx,[rsp+0x110]
   140013f1d:	call   QWORD PTR [rip+0x1797d]        # 0x14002b8a0
   140013f23:	lea    rcx,[rsp+0x20]
   140013f28:	call   QWORD PTR [rip+0x17912]        # 0x14002b840
   140013f2e:	mov    rcx,QWORD PTR [rsp+0x110]
   140013f36:	mov    QWORD PTR [rax],rcx
   140013f39:	mov    rax,QWORD PTR [rsp+0x20]
   140013f3e:	mov    ecx,DWORD PTR [rax+0xc]
   140013f41:	mov    edx,DWORD PTR [rax+0x8]
   140013f44:	cmp    ecx,edx
   140013f46:	je     0x1400145b6
   140013f4c:	test   r12b,r12b
   140013f4f:	jne    0x140014532
   140013f55:	sub    ecx,edx
   140013f57:	cmp    ecx,0x1
   140013f5a:	jne    0x140013fa2
   140013f5c:	mov    ecx,DWORD PTR [rax]
   140013f5e:	cmp    ecx,0x1
   140013f61:	je     0x140013f79
   140013f63:	test   ecx,ecx
   140013f65:	je     0x140013f79
   140013f67:	mov    edx,DWORD PTR [rax+0x4]
   140013f6a:	lea    rcx,[rsp+0x20]
   140013f6f:	call   0x140001cd0
   140013f74:	mov    rax,QWORD PTR [rsp+0x20]
   140013f79:	movsxd rcx,DWORD PTR [rax+0x8]
   140013f7d:	mov    edx,0x4c
   140013f82:	mov    rcx,QWORD PTR [rax+rcx*8+0x10]
   140013f87:	mov    r8d,DWORD PTR [rcx+0x4]
   140013f8b:	mov    rcx,QWORD PTR [rdi]
   140013f8e:	mov    edi,DWORD PTR [rcx+0x4]
   140013f91:	mov    rcx,QWORD PTR [r15]
   140013f94:	sub    edx,DWORD PTR [rcx+0x4]
   140013f97:	sub    edx,edi
   140013f99:	cmp    r8d,edx
   140013f9c:	jle    0x1400145b6
   140013fa2:	mov    QWORD PTR [rsp+0x40],rax
   140013fa7:	mov    ecx,DWORD PTR [rax]
   140013fa9:	test   ecx,ecx
   140013fab:	je     0x140013fb8
   140013fad:	cmp    ecx,0xffffffff
   140013fb0:	je     0x14001400e
   140013fb2:	lock add DWORD PTR [rax],0x1
   140013fb6:	jmp    0x14001400e
   140013fb8:	mov    edx,DWORD PTR [rax+0x4]
   140013fbb:	lea    rcx,[rsp+0x40]
   140013fc0:	call   QWORD PTR [rip+0x17892]        # 0x14002b858
   140013fc6:	mov    rdx,QWORD PTR [rsp+0x20]
   140013fcb:	movsxd rax,DWORD PTR [rdx+0x8]
   140013fcf:	lea    rbx,[rdx+rax*8+0x10]
   140013fd4:	mov    rax,QWORD PTR [rsp+0x40]
   140013fd9:	movsxd rcx,DWORD PTR [rax+0xc]
   140013fdd:	lea    rsi,[rax+rcx*8+0x10]
   140013fe2:	movsxd rcx,DWORD PTR [rax+0x8]
   140013fe6:	lea    rdi,[rax+rcx*8+0x10]
   140013feb:	cmp    rdi,rsi
   140013fee:	je     0x14001400e
   140013ff0:	test   rdi,rdi
   140013ff3:	je     0x140014001
   140013ff5:	mov    rdx,rbx
   140013ff8:	mov    rcx,rdi
   140013ffb:	call   QWORD PTR [rip+0x1789f]        # 0x14002b8a0
   140014001:	add    rdi,0x8
   140014005:	add    rbx,0x8
   140014009:	cmp    rdi,rsi
   14001400c:	jne    0x140013ff0
   14001400e:	lea    rcx,[rsp+0xe0]
   140014016:	call   QWORD PTR [rip+0x17874]        # 0x14002b890
   14001401c:	mov    rcx,QWORD PTR [rip+0x17865]        # 0x14002b888
   140014023:	mov    QWORD PTR [rsp+0x30],rcx
   140014028:	mov    edx,DWORD PTR [rcx]
   14001402a:	mov    rdi,rax
   14001402d:	cmp    edx,0x1
   140014030:	je     0x14001405e
   140014032:	test   edx,edx
   140014034:	je     0x14001405e
   140014036:	lea    rcx,[rsp+0x30]
   14001403b:	mov    edx,0x7fffffff
   140014040:	mov    r8d,0x1
   140014046:	call   0x140001a10
   14001404b:	test   rax,rax
   14001404e:	je     0x140014085
   140014050:	mov    rdx,rdi
   140014053:	mov    rcx,rax
   140014056:	call   QWORD PTR [rip+0x17844]        # 0x14002b8a0
   14001405c:	jmp    0x140014085
   14001405e:	lea    rcx,[rsp+0x120]
   140014066:	mov    rdx,rax
   140014069:	call   QWORD PTR [rip+0x17831]        # 0x14002b8a0
   14001406f:	lea    rcx,[rsp+0x30]
   140014074:	call   QWORD PTR [rip+0x177c6]        # 0x14002b840
   14001407a:	mov    rcx,QWORD PTR [rsp+0x120]
   140014082:	mov    QWORD PTR [rax],rcx
   140014085:	mov    rdi,QWORD PTR [rsp+0x30]
   14001408a:	cmp    QWORD PTR [rsp+0x20],rdi
   14001408f:	je     0x140014183
   140014095:	mov    rcx,rdi
   140014098:	mov    QWORD PTR [rsp+0x38],rcx
   14001409d:	mov    eax,DWORD PTR [rdi]
   14001409f:	test   eax,eax
   1400140a1:	je     0x1400140b8
   1400140a3:	cmp    eax,0xffffffff
   1400140a6:	je     0x140014118
   1400140a8:	lock add DWORD PTR [rdi],0x1
   1400140ac:	mov    rdi,QWORD PTR [rsp+0x30]
   1400140b1:	mov    rcx,QWORD PTR [rsp+0x38]
   1400140b6:	jmp    0x140014118
   1400140b8:	mov    edx,DWORD PTR [rdi+0x4]
   1400140bb:	lea    rcx,[rsp+0x38]
   1400140c0:	call   QWORD PTR [rip+0x17792]        # 0x14002b858
   1400140c6:	mov    rcx,QWORD PTR [rsp+0x38]
   1400140cb:	mov    rdi,QWORD PTR [rsp+0x30]
   1400140d0:	movsxd rax,DWORD PTR [rdi+0x8]
   1400140d4:	lea    rsi,[rdi+rax*8+0x10]
   1400140d9:	movsxd rax,DWORD PTR [rcx+0xc]
   1400140dd:	lea    rbp,[rcx+rax*8+0x10]
   1400140e2:	movsxd rax,DWORD PTR [rcx+0x8]
   1400140e6:	lea    rbx,[rcx+rax*8+0x10]
   1400140eb:	cmp    rbx,rbp
   1400140ee:	je     0x140014118
   1400140f0:	test   rbx,rbx
   1400140f3:	je     0x140014101
   1400140f5:	mov    rdx,rsi
   1400140f8:	mov    rcx,rbx
   1400140fb:	call   QWORD PTR [rip+0x1779f]        # 0x14002b8a0
   140014101:	add    rbx,0x8
   140014105:	add    rsi,0x8
   140014109:	cmp    rbx,rbp
   14001410c:	jne    0x1400140f0
   14001410e:	mov    rdi,QWORD PTR [rsp+0x30]
   140014113:	mov    rcx,QWORD PTR [rsp+0x38]
   140014118:	mov    rbx,QWORD PTR [rsp+0x20]
   14001411d:	mov    QWORD PTR [rsp+0x20],rcx
   140014122:	mov    QWORD PTR [rsp+0x38],rbx
   140014127:	mov    eax,DWORD PTR [rbx]
   140014129:	test   eax,eax
   14001412b:	je     0x14001414c
   14001412d:	cmp    eax,0xffffffff
   140014130:	je     0x140014183
   140014132:	mov    eax,r13d
   140014135:	lock xadd DWORD PTR [rbx],eax
   140014139:	add    eax,0xffffffff
   14001413c:	setne  al
   14001413f:	test   al,al
   140014141:	jne    0x140014214
   140014147:	mov    rbx,QWORD PTR [rsp+0x38]
   14001414c:	movsxd rax,DWORD PTR [rbx+0xc]
   140014150:	lea    rdi,[rbx+rax*8+0x10]
   140014155:	movsxd rax,DWORD PTR [rbx+0x8]
   140014159:	lea    rsi,[rbx+rax*8+0x10]
   14001415e:	cmp    rsi,rdi
   140014161:	je     0x140014175
   140014163:	sub    rdi,0x8
   140014167:	mov    rcx,rdi
   14001416a:	call   QWORD PTR [rip+0x17728]        # 0x14002b898
   140014170:	cmp    rdi,rsi
   140014173:	jne    0x140014163
   140014175:	mov    rcx,rbx
   140014178:	call   QWORD PTR [rip+0x176f2]        # 0x14002b870
   14001417e:	mov    rdi,QWORD PTR [rsp+0x30]
   140014183:	mov    eax,DWORD PTR [rdi]
   140014185:	test   eax,eax
   140014187:	je     0x1400141a4
   140014189:	cmp    eax,0xffffffff
   14001418c:	je     0x1400141db
   14001418e:	mov    eax,r13d
   140014191:	lock xadd DWORD PTR [rdi],eax
   140014195:	add    eax,0xffffffff
   140014198:	setne  al
   14001419b:	test   al,al
   14001419d:	jne    0x1400141db
   14001419f:	mov    rdi,QWORD PTR [rsp+0x30]
   1400141a4:	movsxd rax,DWORD PTR [rdi+0xc]
   1400141a8:	lea    rbx,[rdi+rax*8+0x10]
   1400141ad:	movsxd rax,DWORD PTR [rdi+0x8]
   1400141b1:	lea    rsi,[rdi+rax*8+0x10]
   1400141b6:	cmp    rsi,rbx
   1400141b9:	je     0x1400141d2
   1400141bb:	nop    DWORD PTR [rax+rax*1+0x0]
   1400141c0:	sub    rbx,0x8
   1400141c4:	mov    rcx,rbx
   1400141c7:	call   QWORD PTR [rip+0x176cb]        # 0x14002b898
   1400141cd:	cmp    rbx,rsi
   1400141d0:	jne    0x1400141c0
   1400141d2:	mov    rcx,rdi
   1400141d5:	call   QWORD PTR [rip+0x17695]        # 0x14002b870
   1400141db:	lea    rcx,[rsp+0xe0]
   1400141e3:	call   QWORD PTR [rip+0x176af]        # 0x14002b898
   1400141e9:	mov    rcx,QWORD PTR [rsp+0x40]
   1400141ee:	mov    rdx,QWORD PTR [r15]
   1400141f1:	mov    QWORD PTR [rsp+0x58],rcx
   1400141f6:	mov    eax,DWORD PTR [rcx]
   1400141f8:	mov    ebp,0x4d
   1400141fd:	sub    ebp,DWORD PTR [rdx+0x4]
   140014200:	test   eax,eax
   140014202:	je     0x14001421e
   140014204:	cmp    eax,0xffffffff
   140014207:	je     0x140014279
   140014209:	lock add DWORD PTR [rcx],0x1
   14001420d:	mov    rcx,QWORD PTR [rsp+0x58]
   140014212:	jmp    0x140014279
   140014214:	mov    rdi,QWORD PTR [rsp+0x30]
   140014219:	jmp    0x140014183
   14001421e:	mov    edx,DWORD PTR [rcx+0x4]
   140014221:	lea    rcx,[rsp+0x58]
   140014226:	call   QWORD PTR [rip+0x1762c]        # 0x14002b858
   14001422c:	mov    rcx,QWORD PTR [rsp+0x58]
   140014231:	mov    rdx,QWORD PTR [rsp+0x40]
   140014236:	movsxd rax,DWORD PTR [rdx+0x8]
   14001423a:	lea    rbx,[rdx+rax*8+0x10]
   14001423f:	movsxd rax,DWORD PTR [rcx+0xc]
   140014243:	lea    rsi,[rcx+rax*8+0x10]
   140014248:	movsxd rax,DWORD PTR [rcx+0x8]
   14001424c:	lea    rdi,[rcx+rax*8+0x10]
   140014251:	cmp    rdi,rsi
   140014254:	je     0x140014279
   140014256:	test   rdi,rdi
   140014259:	je     0x140014267
   14001425b:	mov    rdx,rbx
   14001425e:	mov    rcx,rdi
   140014261:	call   QWORD PTR [rip+0x17639]        # 0x14002b8a0
   140014267:	add    rdi,0x8
   14001426b:	add    rbx,0x8
   14001426f:	cmp    rdi,rsi
   140014272:	jne    0x140014256
   140014274:	mov    rcx,QWORD PTR [rsp+0x58]
   140014279:	mov    DWORD PTR [rsp+0x60],0x0
   140014281:	movsxd rax,DWORD PTR [rcx+0x8]
   140014285:	lea    rsi,[rcx+rax*8+0x10]
   14001428a:	mov    QWORD PTR [rsp+0x68],rsi
   14001428f:	movsxd rax,DWORD PTR [rcx+0xc]
   140014293:	lea    rdx,[rcx+rax*8+0x10]
   140014298:	mov    QWORD PTR [rsp+0x70],rdx
   14001429d:	nop    DWORD PTR [rax]
   1400142a0:	mov    eax,0x1
   1400142a5:	mov    DWORD PTR [rsp+0x60],eax
   1400142a9:	cmp    rsi,rdx
   1400142ac:	je     0x140014475
   1400142b2:	test   eax,eax
   1400142b4:	je     0x14001445d
   1400142ba:	mov    rax,QWORD PTR [rsi]
   1400142bd:	xor    ebx,ebx
   1400142bf:	cmp    ebp,DWORD PTR [rax+0x4]
   1400142c2:	jge    0x1400143c7
   1400142c8:	nop    DWORD PTR [rax+rax*1+0x0]
   1400142d0:	lea    rcx,[rsp+0x2c8]
   1400142d8:	mov    dl,0x20
   1400142da:	call   QWORD PTR [rip+0x175e8]        # 0x14002b8c8
   1400142e0:	lea    r8d,[rbp+rbx*1-0x1]
   1400142e5:	mov    r9d,0x1
   1400142eb:	movzx  edx,WORD PTR [rax]
   1400142ee:	mov    rcx,rsi
   1400142f1:	call   QWORD PTR [rip+0x17381]        # 0x14002b678
   1400142f7:	lea    edi,[rax+0x1]
   1400142fa:	cmp    edi,ebx
   1400142fc:	jne    0x14001432c
   1400142fe:	lea    rcx,[rsp+0x50]
   140014303:	mov    dl,0x20
   140014305:	call   QWORD PTR [rip+0x175bd]        # 0x14002b8c8
   14001430b:	lea    r8d,[rbx+rbp*1]
   14001430f:	mov    r9d,0x1
   140014315:	movzx  edx,WORD PTR [rax]
   140014318:	mov    rcx,rsi
   14001431b:	call   QWORD PTR [rip+0x1734f]        # 0x14002b670
   140014321:	mov    edi,eax
   140014323:	add    edi,0x1
   140014326:	je     0x1400143c7
   14001432c:	mov    r9d,edi
   14001432f:	lea    rdx,[rsp+0x100]
   140014337:	mov    r8d,ebx
   14001433a:	sub    r9d,ebx
   14001433d:	mov    rcx,rsi
   140014340:	call   QWORD PTR [rip+0x17012]        # 0x14002b358
   140014346:	mov    rcx,QWORD PTR [rsp+0x20]
   14001434b:	mov    edx,DWORD PTR [rcx]
   14001434d:	mov    rbx,rax
   140014350:	cmp    edx,0x1
   140014353:	je     0x140014381
   140014355:	test   edx,edx
   140014357:	je     0x140014381
   140014359:	lea    rcx,[rsp+0x20]
   14001435e:	mov    edx,0x7fffffff
   140014363:	mov    r8d,0x1
   140014369:	call   0x140001a10
   14001436e:	test   rax,rax
   140014371:	je     0x1400143a8
   140014373:	mov    rdx,rbx
   140014376:	mov    rcx,rax
   140014379:	call   QWORD PTR [rip+0x17521]        # 0x14002b8a0
   14001437f:	jmp    0x1400143a8
   140014381:	lea    rcx,[rsp+0x130]
   140014389:	mov    rdx,rax
   14001438c:	call   QWORD PTR [rip+0x1750e]        # 0x14002b8a0
   140014392:	lea    rcx,[rsp+0x20]
   140014397:	call   QWORD PTR [rip+0x174a3]        # 0x14002b840
   14001439d:	mov    rcx,QWORD PTR [rsp+0x130]
   1400143a5:	mov    QWORD PTR [rax],rcx
   1400143a8:	lea    rcx,[rsp+0x100]
   1400143b0:	call   QWORD PTR [rip+0x174e2]        # 0x14002b898
   1400143b6:	mov    rax,QWORD PTR [rsi]
   1400143b9:	lea    ecx,[rdi+rbp*1]
   1400143bc:	cmp    ecx,DWORD PTR [rax+0x4]
   1400143bf:	mov    ebx,edi
   1400143c1:	jl     0x1400142d0
   1400143c7:	lea    rdx,[rsp+0xd0]
   1400143cf:	mov    r9d,r13d
   1400143d2:	mov    r8d,ebx
   1400143d5:	mov    rcx,rsi
   1400143d8:	call   QWORD PTR [rip+0x16f7a]        # 0x14002b358
   1400143de:	mov    rcx,QWORD PTR [rsp+0x20]
   1400143e3:	mov    edx,DWORD PTR [rcx]
   1400143e5:	mov    rdi,rax
   1400143e8:	cmp    edx,0x1
   1400143eb:	je     0x140014419
   1400143ed:	test   edx,edx
   1400143ef:	je     0x140014419
   1400143f1:	lea    rcx,[rsp+0x20]
   1400143f6:	mov    edx,0x7fffffff
   1400143fb:	mov    r8d,0x1
   140014401:	call   0x140001a10
   140014406:	test   rax,rax
   140014409:	je     0x140014440
   14001440b:	mov    rdx,rdi
   14001440e:	mov    rcx,rax
   140014411:	call   QWORD PTR [rip+0x17489]        # 0x14002b8a0
   140014417:	jmp    0x140014440
   140014419:	lea    rcx,[rsp+0xc0]
   140014421:	mov    rdx,rax
   140014424:	call   QWORD PTR [rip+0x17476]        # 0x14002b8a0
   14001442a:	lea    rcx,[rsp+0x20]
   14001442f:	call   QWORD PTR [rip+0x1740b]        # 0x14002b840
   140014435:	mov    rcx,QWORD PTR [rsp+0xc0]
   14001443d:	mov    QWORD PTR [rax],rcx
   140014440:	lea    rcx,[rsp+0xd0]
   140014448:	call   QWORD PTR [rip+0x1744a]        # 0x14002b898
   14001444e:	mov    eax,DWORD PTR [rsp+0x60]
   140014452:	dec    eax
   140014454:	mov    DWORD PTR [rsp+0x60],eax
   140014458:	jmp    0x1400142b2
   14001445d:	mov    rsi,QWORD PTR [rsp+0x68]
   140014462:	mov    rdx,QWORD PTR [rsp+0x70]
   140014467:	add    rsi,0x8
   14001446b:	mov    QWORD PTR [rsp+0x68],rsi
   140014470:	jmp    0x1400142a0
   140014475:	mov    rbx,QWORD PTR [rsp+0x58]
   14001447a:	mov    eax,DWORD PTR [rbx]
   14001447c:	test   eax,eax
   14001447e:	je     0x14001449b
   140014480:	cmp    eax,0xffffffff
   140014483:	je     0x1400144cd
   140014485:	mov    eax,r13d
   140014488:	lock xadd DWORD PTR [rbx],eax
   14001448c:	add    eax,0xffffffff
   14001448f:	setne  al
   140014492:	test   al,al
   140014494:	jne    0x1400144cd
   140014496:	mov    rbx,QWORD PTR [rsp+0x58]
   14001449b:	movsxd rax,DWORD PTR [rbx+0xc]
   14001449f:	lea    rdi,[rbx+rax*8+0x10]
   1400144a4:	movsxd rax,DWORD PTR [rbx+0x8]
   1400144a8:	lea    rsi,[rbx+rax*8+0x10]
   1400144ad:	cmp    rsi,rdi
   1400144b0:	je     0x1400144c4
   1400144b2:	sub    rdi,0x8
   1400144b6:	mov    rcx,rdi
   1400144b9:	call   QWORD PTR [rip+0x173d9]        # 0x14002b898
   1400144bf:	cmp    rdi,rsi
   1400144c2:	jne    0x1400144b2
   1400144c4:	mov    rcx,rbx
   1400144c7:	call   QWORD PTR [rip+0x173a3]        # 0x14002b870
   1400144cd:	mov    rbx,QWORD PTR [rsp+0x40]
   1400144d2:	mov    eax,DWORD PTR [rbx]
   1400144d4:	test   eax,eax
   1400144d6:	je     0x1400144fb
   1400144d8:	cmp    eax,0xffffffff
   1400144db:	je     0x1400145b6
   1400144e1:	mov    eax,r13d
   1400144e4:	lock xadd DWORD PTR [rbx],eax
   1400144e8:	add    eax,0xffffffff
   1400144eb:	setne  al
   1400144ee:	test   al,al
   1400144f0:	jne    0x1400145b6
   1400144f6:	mov    rbx,QWORD PTR [rsp+0x40]
   1400144fb:	movsxd rax,DWORD PTR [rbx+0xc]
   1400144ff:	lea    rdi,[rbx+rax*8+0x10]
   140014504:	movsxd rax,DWORD PTR [rbx+0x8]
   140014508:	lea    rsi,[rbx+rax*8+0x10]
   14001450d:	cmp    rsi,rdi
   140014510:	je     0x140014524
   140014512:	sub    rdi,0x8
   140014516:	mov    rcx,rdi
   140014519:	call   QWORD PTR [rip+0x17379]        # 0x14002b898
   14001451f:	cmp    rdi,rsi
   140014522:	jne    0x140014512
   140014524:	mov    rcx,rbx
   140014527:	call   QWORD PTR [rip+0x17343]        # 0x14002b870
   14001452d:	jmp    0x1400145b6
   140014532:	sub    ecx,edx
   140014534:	cmp    ecx,0x1
   140014537:	jle    0x1400145b6
   14001453d:	lea    rcx,[rsp+0xb0]
   140014545:	call   QWORD PTR [rip+0x17345]        # 0x14002b890
   14001454b:	mov    rcx,QWORD PTR [rsp+0x20]
   140014550:	mov    edx,DWORD PTR [rcx]
   140014552:	mov    rdi,rax
   140014555:	cmp    edx,0x1
   140014558:	je     0x140014581
   14001455a:	test   edx,edx
   14001455c:	je     0x140014581
   14001455e:	xor    edx,edx
   140014560:	lea    rcx,[rsp+0x20]
   140014565:	lea    r8d,[rdx+0x1]
   140014569:	call   0x140001a10
   14001456e:	test   rax,rax
   140014571:	je     0x1400145a8
   140014573:	mov    rdx,rdi
   140014576:	mov    rcx,rax
   140014579:	call   QWORD PTR [rip+0x17321]        # 0x14002b8a0
   14001457f:	jmp    0x1400145a8
   140014581:	lea    rcx,[rsp+0xf0]
   140014589:	mov    rdx,rax
   14001458c:	call   QWORD PTR [rip+0x1730e]        # 0x14002b8a0
   140014592:	lea    rcx,[rsp+0x20]
   140014597:	call   QWORD PTR [rip+0x1708b]        # 0x14002b628
   14001459d:	mov    rcx,QWORD PTR [rsp+0xf0]
   1400145a5:	mov    QWORD PTR [rax],rcx
   1400145a8:	lea    rcx,[rsp+0xb0]
   1400145b0:	call   QWORD PTR [rip+0x172e2]        # 0x14002b898
   1400145b6:	xor    eax,eax
   1400145b8:	lea    rsi,[rip+0x191c5]        # 0x14002d784
   1400145bf:	mov    rcx,r13
   1400145c2:	mov    QWORD PTR [rsp+0x88],rsi
   1400145ca:	mov    rdi,rsi
   1400145cd:	xor    r8d,r8d
   1400145d0:	repnz scas al,BYTE PTR es:[rdi]
   1400145d2:	not    rcx
   1400145d5:	dec    rcx
   1400145d8:	mov    DWORD PTR [rsp+0x80],ecx
   1400145df:	mov    rax,QWORD PTR [r15]
   1400145e2:	mov    edx,DWORD PTR [rax+0x4]
   1400145e5:	lea    edx,[rcx+rdx*1+0x1]
   1400145e9:	lea    rcx,[rsp+0x48]
   1400145ee:	call   QWORD PTR [rip+0x17284]        # 0x14002b878
   1400145f4:	lea    rcx,[rsp+0x48]
   1400145f9:	call   QWORD PTR [rip+0x172c1]        # 0x14002b8c0
   1400145ff:	mov    edx,DWORD PTR [rsp+0x80]
   140014606:	mov    rcx,QWORD PTR [rsp+0x88]
   14001460e:	movaps xmm0,XMMWORD PTR [rsp+0x80]
   140014616:	movdqa XMMWORD PTR [rsp+0x240],xmm0
   14001461f:	mov    r8,rax
   140014622:	mov    rdi,rax
   140014625:	call   QWORD PTR [rip+0x16c1d]        # 0x14002b248
   14001462b:	movsxd rdx,DWORD PTR [rsp+0x240]
   140014633:	mov    rax,QWORD PTR [r15]
   140014636:	lea    rbx,[rdi+rdx*2]
   14001463a:	movsxd rdi,DWORD PTR [rax+0x4]
   14001463e:	mov    rcx,r15
   140014641:	add    rdi,rdi
   140014644:	call   QWORD PTR [rip+0x17276]        # 0x14002b8c0
   14001464a:	mov    r8,rdi
   14001464d:	mov    rdx,rax
   140014650:	mov    rcx,rbx
   140014653:	call   0x14002951e
   140014658:	lea    rcx,[rsp+0x2c0]
   140014660:	mov    dl,0x22
   140014662:	call   QWORD PTR [rip+0x17260]        # 0x14002b8c8
   140014668:	movzx  edx,WORD PTR [rsp+0x2c0]
   140014670:	xor    eax,eax
   140014672:	mov    WORD PTR [rbx+rdi*1],dx
   140014676:	mov    QWORD PTR [rsp+0x158],rsi
   14001467e:	mov    rdi,rsi
   140014681:	mov    rcx,r13
   140014684:	repnz scas al,BYTE PTR es:[rdi]
   140014686:	mov    rax,QWORD PTR [rsp+0x48]
   14001468b:	not    rcx
   14001468e:	dec    rcx
   140014691:	mov    DWORD PTR [rsp+0x150],ecx
   140014698:	mov    edi,DWORD PTR [rax+0x4]
   14001469b:	lea    rcx,[rsp+0x48]
   1400146a0:	call   QWORD PTR [rip+0x1721a]        # 0x14002b8c0
   1400146a6:	lea    rdx,[rsp+0x20]
   1400146ab:	lea    rcx,[rsp+0xa0]
   1400146b3:	mov    r8,rax
   1400146b6:	mov    r9d,edi
   1400146b9:	call   QWORD PTR [rip+0x171f9]        # 0x14002b8b8
   1400146bf:	xor    eax,eax
   1400146c1:	lea    rdx,[rip+0x190b8]        # 0x14002d780
   1400146c8:	mov    rcx,r13
   1400146cb:	mov    rdi,rdx
   1400146ce:	mov    QWORD PTR [rsp+0x160],r15
   1400146d6:	repnz scas al,BYTE PTR es:[rdi]
   1400146d8:	mov    rax,QWORD PTR [rsp+0x2d0]
   1400146e0:	mov    QWORD PTR [rsp+0x178],rdx
   1400146e8:	mov    QWORD PTR [rsp+0x168],rax
   1400146f0:	lea    rax,[rsp+0x160]
   1400146f8:	not    rcx
   1400146fb:	mov    QWORD PTR [rsp+0x1a0],rax
   140014703:	lea    rax,[rsp+0x170]
   14001470b:	dec    rcx
   14001470e:	mov    QWORD PTR [rsp+0x1a8],rax
   140014716:	lea    rax,[rsp+0x1a0]
   14001471e:	mov    DWORD PTR [rsp+0x170],ecx
   140014725:	mov    QWORD PTR [rsp+0x190],rax
   14001472d:	lea    rax,[rsp+0xa0]
   140014735:	mov    QWORD PTR [rsp+0x198],rax
   14001473d:	lea    rax,[rsp+0x190]
   140014745:	mov    QWORD PTR [rsp+0x180],rax
   14001474d:	lea    rax,[rsp+0x150]
   140014755:	mov    QWORD PTR [rsp+0x188],rax
   14001475d:	lea    rdx,[rsp+0x98]
   140014765:	lea    rcx,[rsp+0x180]
   14001476d:	call   0x1400124a0
   140014772:	lea    rdx,[rsp+0x98]
   14001477a:	mov    rcx,r14
   14001477d:	call   QWORD PTR [rip+0x1711d]        # 0x14002b8a0
   140014783:	lea    rcx,[rsp+0x98]
   14001478b:	call   QWORD PTR [rip+0x17107]        # 0x14002b898
   140014791:	lea    rcx,[rsp+0xa0]
   140014799:	call   QWORD PTR [rip+0x170f9]        # 0x14002b898
   14001479f:	lea    rcx,[rsp+0x48]
   1400147a4:	call   QWORD PTR [rip+0x170ee]        # 0x14002b898
   1400147aa:	lea    rcx,[rsp+0x28]
   1400147af:	call   QWORD PTR [rip+0x170e3]        # 0x14002b898
   1400147b5:	mov    rbx,QWORD PTR [rsp+0x20]
   1400147ba:	mov    r15,QWORD PTR [rsp+0x278]
   1400147c2:	mov    eax,DWORD PTR [rbx]
   1400147c4:	mov    r12,QWORD PTR [rsp+0x280]
   1400147cc:	mov    rbp,QWORD PTR [rsp+0x288]
   1400147d4:	test   eax,eax
   1400147d6:	je     0x1400147f2
   1400147d8:	cmp    eax,0xffffffff
   1400147db:	je     0x14001482b
   1400147dd:	lock xadd DWORD PTR [rbx],r13d
   1400147e2:	add    r13d,0xffffffff
   1400147e6:	setne  al
   1400147e9:	test   al,al
   1400147eb:	jne    0x14001482b
   1400147ed:	mov    rbx,QWORD PTR [rsp+0x20]
   1400147f2:	movsxd rax,DWORD PTR [rbx+0xc]
   1400147f6:	lea    rdi,[rbx+rax*8+0x10]
   1400147fb:	movsxd rax,DWORD PTR [rbx+0x8]
   1400147ff:	lea    rsi,[rbx+rax*8+0x10]
   140014804:	cmp    rsi,rdi
   140014807:	je     0x140014822
   140014809:	nop    DWORD PTR [rax+0x0]
   140014810:	sub    rdi,0x8
   140014814:	mov    rcx,rdi
   140014817:	call   QWORD PTR [rip+0x1707b]        # 0x14002b898
   14001481d:	cmp    rdi,rsi
   140014820:	jne    0x140014810
   140014822:	mov    rcx,rbx
   140014825:	call   QWORD PTR [rip+0x17045]        # 0x14002b870
   14001482b:	mov    rax,r14
   14001482e:	add    rsp,0x290
   140014835:	pop    r14
   140014837:	pop    r13
   140014839:	pop    rdi
   14001483a:	pop    rsi
   14001483b:	pop    rbx
   14001483c:	ret    
   14001483d:	nop    DWORD PTR [rax]
   140014840:	fdivr  QWORD PTR [rbx]
   140014842:	add    DWORD PTR [rax],eax
   140014844:	xor    bh,BYTE PTR [rcx+rax*1]
   140014847:	add    BYTE PTR [rax],dh
   140014849:	cmp    eax,DWORD PTR [rcx]
   14001484b:	add    BYTE PTR [rip+0xffffffff8600013a],bl        # 0xc601498b
   140014851:	cmp    eax,DWORD PTR [rcx]
   140014853:	add    BYTE PTR [rax-0x1efffec4],cl
   140014859:	cmp    al,BYTE PTR [rcx]
   14001485b:	add    dh,bl
   14001485d:	cmp    al,0x1
   14001485f:	add    BYTE PTR [rdi*1+0x3d8a0001],dh
   140014866:	add    DWORD PTR [rax],eax
   140014868:	add    BYTE PTR [rcx],al
   14001486a:	add    al,BYTE PTR [rbx]
   14001486c:	add    al,0x5
   14001486e:	(bad)  
   14001486f:	or     DWORD PTR [rcx],ecx
   140014871:	or     DWORD PTR [rcx],ecx
   140014873:	or     DWORD PTR [rcx],ecx
   140014875:	or     DWORD PTR [rcx],ecx
   140014877:	or     DWORD PTR [rcx],ecx
   140014879:	or     DWORD PTR [rcx],ecx
   14001487b:	or     DWORD PTR [rcx],ecx
   14001487d:	or     DWORD PTR [rcx],ecx
   14001487f:	or     DWORD PTR [rcx],ecx
   140014881:	or     DWORD PTR [rcx],ecx
   140014883:	(bad)  
   140014884:	or     DWORD PTR [rcx],ecx
   140014886:	or     DWORD PTR [rcx],ecx
   140014888:	or     DWORD PTR [rcx],ecx
   14001488a:	or     DWORD PTR [rcx],ecx
   14001488c:	or     DWORD PTR [rcx],ecx
   14001488e:	or     DWORD PTR [rcx],ecx
   140014890:	or     DWORD PTR [rcx],ecx
   140014892:	or     DWORD PTR [rcx],ecx
   140014894:	or     DWORD PTR [rcx],ecx
   140014896:	or     DWORD PTR [rcx],ecx
   140014898:	or     DWORD PTR [rcx],ecx
   14001489a:	or     DWORD PTR [rcx],ecx
   14001489c:	or     DWORD PTR [rcx],ecx
   14001489e:	or     DWORD PTR [rcx],ecx
   1400148a0:	or     DWORD PTR [rcx],ecx
   1400148a2:	or     DWORD PTR [rcx],ecx
   1400148a4:	or     DWORD PTR [rcx],ecx
   1400148a6:	or     DWORD PTR [rcx],ecx
   1400148a8:	or     DWORD PTR [rcx],ecx
   1400148aa:	or     DWORD PTR [rcx],ecx
   1400148ac:	or     DWORD PTR [rcx],ecx
   1400148ae:	or     DWORD PTR [rcx],ecx
   1400148b0:	or     DWORD PTR [rcx],ecx
   1400148b2:	or     DWORD PTR [rcx],ecx
   1400148b4:	or     DWORD PTR [rcx],ecx
   1400148b6:	or     DWORD PTR [rcx],ecx
   1400148b8:	or     DWORD PTR [rcx],ecx
   1400148ba:	or     DWORD PTR [rcx],ecx
   1400148bc:	or     DWORD PTR [rax],ecx
   1400148be:	int3   
   1400148bf:	int3   
   1400148c0:	mov    QWORD PTR [rsp+0x18],r8
   1400148c5:	mov    QWORD PTR [rsp+0x8],rcx
   1400148ca:	push   rbx
   1400148cb:	push   rbp
   1400148cc:	push   rsi
   1400148cd:	push   rdi
   1400148ce:	push   r12
   1400148d0:	push   r13
   1400148d2:	push   r14
   1400148d4:	push   r15
   1400148d6:	sub    rsp,0xa58
   1400148dd:	lea    rcx,[rip+0x18ad8]        # 0x14002d3bc
   1400148e4:	xor    r12d,r12d
   1400148e7:	mov    rsi,r8
   1400148ea:	mov    rdi,rdx
   1400148ed:	mov    DWORD PTR [rsp+0xaa8],r12d
   1400148f5:	call   QWORD PTR [rip+0x16b6d]        # 0x14002b468
   1400148fb:	mov    r15,rax
   1400148fe:	xor    al,al
   140014900:	mov    rcx,rdi
   140014903:	mov    BYTE PTR [rsp+0xaa8],al
   14001490a:	mov    rax,QWORD PTR [rip+0x16f77]        # 0x14002b888
   140014911:	mov    QWORD PTR [rsp+0x38],rax
   140014916:	mov    rax,QWORD PTR [rdi]
   140014919:	call   QWORD PTR [rax+0x88]
   14001491f:	lea    ebp,[r12+0x1]
   140014924:	test   al,al
   140014926:	jne    0x1400149e3
   14001492c:	nop    DWORD PTR [rax+0x0]
   140014930:	lea    rdx,[rsp+0x580]
   140014938:	xor    r8d,r8d
   14001493b:	mov    rcx,rdi
   14001493e:	call   QWORD PTR [rip+0x16ddc]        # 0x14002b720
   140014944:	lea    rdx,[rsp+0x570]
   14001494c:	mov    rcx,rax
   14001494f:	call   QWORD PTR [rip+0x16dc3]        # 0x14002b718
   140014955:	mov    rcx,QWORD PTR [rsp+0x38]
   14001495a:	mov    edx,DWORD PTR [rcx]
   14001495c:	mov    rbx,rax
   14001495f:	cmp    edx,ebp
   140014961:	je     0x14001498c
   140014963:	test   edx,edx
   140014965:	je     0x14001498c
   140014967:	lea    rcx,[rsp+0x38]
   14001496c:	mov    r8d,ebp
   14001496f:	mov    edx,0x7fffffff
   140014974:	call   0x1400120e0
   140014979:	test   rax,rax
   14001497c:	je     0x1400149b3
   14001497e:	mov    rdx,rbx
   140014981:	mov    rcx,rax
   140014984:	call   QWORD PTR [rip+0x16a56]        # 0x14002b3e0
   14001498a:	jmp    0x1400149b3
   14001498c:	lea    rcx,[rsp+0x408]
   140014994:	mov    rdx,rax
   140014997:	call   QWORD PTR [rip+0x16a43]        # 0x14002b3e0
   14001499d:	lea    rcx,[rsp+0x38]
   1400149a2:	call   QWORD PTR [rip+0x16e98]        # 0x14002b840
   1400149a8:	mov    rcx,QWORD PTR [rsp+0x408]
   1400149b0:	mov    QWORD PTR [rax],rcx
   1400149b3:	lea    rcx,[rsp+0x570]
   1400149bb:	call   QWORD PTR [rip+0x16807]        # 0x14002b1c8
   1400149c1:	lea    rcx,[rsp+0x580]
   1400149c9:	call   QWORD PTR [rip+0x167f9]        # 0x14002b1c8
   1400149cf:	mov    rdx,QWORD PTR [rdi]
   1400149d2:	mov    rcx,rdi
   1400149d5:	call   QWORD PTR [rdx+0x88]
   1400149db:	test   al,al
   1400149dd:	je     0x140014930
   1400149e3:	lea    rcx,[rsp+0x558]
   1400149eb:	call   QWORD PTR [rip+0x16ae7]        # 0x14002b4d8
   1400149f1:	mov    rcx,QWORD PTR [rsp+0x38]
   1400149f6:	mov    edx,DWORD PTR [rcx]
   1400149f8:	mov    rdi,rax
   1400149fb:	cmp    edx,ebp
   1400149fd:	je     0x140014a28
   1400149ff:	test   edx,edx
   140014a01:	je     0x140014a28
   140014a03:	lea    rcx,[rsp+0x38]
   140014a08:	mov    r8d,ebp
   140014a0b:	mov    edx,0x7fffffff
   140014a10:	call   0x1400120e0
   140014a15:	test   rax,rax
   140014a18:	je     0x140014a4f
   140014a1a:	mov    rdx,rdi
   140014a1d:	mov    rcx,rax
   140014a20:	call   QWORD PTR [rip+0x169ba]        # 0x14002b3e0
   140014a26:	jmp    0x140014a4f
   140014a28:	lea    rcx,[rsp+0x578]
   140014a30:	mov    rdx,rax
   140014a33:	call   QWORD PTR [rip+0x169a7]        # 0x14002b3e0
   140014a39:	lea    rcx,[rsp+0x38]
   140014a3e:	call   QWORD PTR [rip+0x16dfc]        # 0x14002b840
   140014a44:	mov    rcx,QWORD PTR [rsp+0x578]
   140014a4c:	mov    QWORD PTR [rax],rcx
   140014a4f:	lea    rcx,[rsp+0x558]
   140014a57:	call   QWORD PTR [rip+0x1676b]        # 0x14002b1c8
   140014a5d:	lea    rcx,[rsp+0x80]
   140014a65:	or     r14,0xffffffffffffffff
   140014a69:	xor    dil,dil
   140014a6c:	mov    DWORD PTR [rsp+0x30],r12d
   140014a71:	mov    DWORD PTR [rsp+0x108],r14d
   140014a79:	mov    BYTE PTR [rsp+0xab8],dil
   140014a81:	call   QWORD PTR [rip+0x16a51]        # 0x14002b4d8
   140014a87:	lea    rcx,[rsp+0x88]
   140014a8f:	call   QWORD PTR [rip+0x16a43]        # 0x14002b4d8
   140014a95:	lea    rcx,[rsp+0x90]
   140014a9d:	call   QWORD PTR [rip+0x16a35]        # 0x14002b4d8
   140014aa3:	lea    rcx,[rsp+0x98]
   140014aab:	call   QWORD PTR [rip+0x16a27]        # 0x14002b4d8
   140014ab1:	lea    rcx,[rsp+0xa0]
   140014ab9:	call   QWORD PTR [rip+0x16a19]        # 0x14002b4d8
   140014abf:	lea    rcx,[rsp+0xa8]
   140014ac7:	call   QWORD PTR [rip+0x16a0b]        # 0x14002b4d8
   140014acd:	lea    rcx,[rsp+0xb0]
   140014ad5:	call   QWORD PTR [rip+0x169fd]        # 0x14002b4d8
   140014adb:	lea    rcx,[rsp+0xb8]
   140014ae3:	call   QWORD PTR [rip+0x169ef]        # 0x14002b4d8
   140014ae9:	lea    rcx,[rsp+0xc0]
   140014af1:	call   QWORD PTR [rip+0x169e1]        # 0x14002b4d8
   140014af7:	lea    rcx,[rsp+0xc8]
   140014aff:	call   QWORD PTR [rip+0x169d3]        # 0x14002b4d8
   140014b05:	lea    rcx,[rsp+0xd0]
   140014b0d:	call   QWORD PTR [rip+0x169c5]        # 0x14002b4d8
   140014b13:	mov    rax,QWORD PTR [rip+0x16d66]        # 0x14002b880
   140014b1a:	mov    rdx,QWORD PTR [rip+0x16d67]        # 0x14002b888
   140014b21:	mov    QWORD PTR [rsp+0xe8],rax
   140014b29:	mov    rax,QWORD PTR [rsp+0x38]
   140014b2e:	mov    QWORD PTR [rsp+0xd8],rdx
   140014b36:	mov    BYTE PTR [rsp+0xe0],dil
   140014b3e:	mov    BYTE PTR [rsp+0xe1],dil
   140014b46:	mov    ecx,DWORD PTR [rax+0xc]
   140014b49:	cmp    ecx,DWORD PTR [rax+0x8]
   140014b4c:	je     0x140017d56
   140014b52:	movsxd rcx,DWORD PTR [rax+0x8]
   140014b56:	movsxd rdx,DWORD PTR [rsp+0x30]
   140014b5b:	lea    rbx,[rip+0xfffffffffffeb49e]        # 0x140000000
   140014b62:	add    rdx,rcx
   140014b65:	lea    rcx,[rsp+0x40]
   140014b6a:	lea    rdx,[rax+rdx*8+0x10]
   140014b6f:	call   QWORD PTR [rip+0x1686b]        # 0x14002b3e0
   140014b75:	mov    rdx,QWORD PTR [rsp+0x40]
   140014b7a:	lea    rcx,[rsp+0x40]
   140014b7f:	cmp    DWORD PTR [rdx+0x4],0x0
   140014b83:	jne    0x140014b98
   140014b85:	call   QWORD PTR [rip+0x1663d]        # 0x14002b1c8
   140014b8b:	movzx  ebp,BYTE PTR [rsp+0xaa8]
   140014b93:	jmp    0x140017d2a
   140014b98:	lea    rdx,[rip+0x18b21]        # 0x14002d6c0
   140014b9f:	call   QWORD PTR [rip+0x16a33]        # 0x14002b5d8
   140014ba5:	test   al,al
   140014ba7:	jne    0x140016196
   140014bad:	lea    rdx,[rip+0x18b04]        # 0x14002d6b8
   140014bb4:	lea    rcx,[rsp+0x40]
   140014bb9:	call   QWORD PTR [rip+0x16a19]        # 0x14002b5d8
   140014bbf:	test   al,al
   140014bc1:	jne    0x140016196
   140014bc7:	lea    rcx,[rsp+0x40]
   140014bcc:	mov    dl,0x23
   140014bce:	call   QWORD PTR [rip+0x16b3c]        # 0x14002b710
   140014bd4:	lea    rcx,[rsp+0x40]
   140014bd9:	test   al,al
   140014bdb:	je     0x140015dec
   140014be1:	call   QWORD PTR [rip+0x16b21]        # 0x14002b708
   140014be7:	cmp    eax,0x2
   140014bea:	jge    0x140014bf0
   140014bec:	xor    eax,eax
   140014bee:	jmp    0x140014c09
   140014bf0:	lea    rcx,[rsp+0x40]
   140014bf5:	mov    edx,ebp
   140014bf7:	call   QWORD PTR [rip+0x16a0b]        # 0x14002b608
   140014bfd:	movsx  eax,al
   140014c00:	cmp    eax,0x7e
   140014c03:	ja     0x140015c7d
   140014c09:	cdqe   
   140014c0b:	movzx  eax,BYTE PTR [rbx+rax*1+0x17de8]
   140014c13:	mov    ecx,DWORD PTR [rbx+rax*4+0x17dc8]
   140014c1a:	add    rcx,rbx
   140014c1d:	jmp    rcx
   140014c1f:	lea    rdx,[rsp+0x420]
   140014c27:	lea    rcx,[rsp+0x40]
   140014c2c:	mov    r9d,r14d
   140014c2f:	mov    r8d,0x3
   140014c35:	call   QWORD PTR [rip+0x169ad]        # 0x14002b5e8
   140014c3b:	lea    rcx,[rsp+0xb0]
   140014c43:	mov    rdx,rax
   140014c46:	call   QWORD PTR [rip+0x16ab4]        # 0x14002b700
   140014c4c:	lea    rcx,[rsp+0x420]
   140014c54:	call   QWORD PTR [rip+0x1656e]        # 0x14002b1c8
   140014c5a:	lea    rcx,[rsp+0xb0]
   140014c62:	mov    dl,0xa
   140014c64:	call   QWORD PTR [rip+0x16a8e]        # 0x14002b6f8
   140014c6a:	mov    ebx,DWORD PTR [rsp+0x30]
   140014c6e:	mov    DWORD PTR [rsp+0x108],ebx
   140014c75:	jmp    0x140017d0f
   140014c7a:	lea    rdx,[rip+0x18ea3]        # 0x14002db24
   140014c81:	xor    eax,eax
   140014c83:	mov    rcx,r14
   140014c86:	mov    rdi,rdx
   140014c89:	mov    QWORD PTR [rsp+0x618],rdx
   140014c91:	lea    rdx,[rsp+0x960]
   140014c99:	repnz scas al,BYTE PTR es:[rdi]
   140014c9b:	not    rcx
   140014c9e:	dec    rcx
   140014ca1:	mov    DWORD PTR [rsp+0x610],ecx
   140014ca8:	lea    rcx,[rsp+0x208]
   140014cb0:	movaps xmm0,XMMWORD PTR [rsp+0x610]
   140014cb8:	movdqa XMMWORD PTR [rsp+0x960],xmm0
   140014cc1:	call   QWORD PTR [rip+0x16b99]        # 0x14002b860
   140014cc7:	lea    rdx,[rsp+0x208]
   140014ccf:	lea    rcx,[rsp+0x300]
   140014cd7:	xor    r9d,r9d
   140014cda:	mov    r8d,ebp
   140014cdd:	call   QWORD PTR [rip+0x1668d]        # 0x14002b370
   140014ce3:	lea    rdx,[rsp+0x430]
   140014ceb:	lea    rcx,[rsp+0x40]
   140014cf0:	mov    r9d,r14d
   140014cf3:	mov    r8d,0x2
   140014cf9:	mov    rdi,rax
   140014cfc:	call   QWORD PTR [rip+0x168e6]        # 0x14002b5e8
   140014d02:	lea    rcx,[rsp+0x2f0]
   140014d0a:	mov    rdx,rax
   140014d0d:	call   QWORD PTR [rip+0x169dd]        # 0x14002b6f0
   140014d13:	lea    rdx,[rsp+0x70]
   140014d18:	mov    r9d,ebp
   140014d1b:	mov    rcx,rax
   140014d1e:	mov    r8,rdi
   140014d21:	call   QWORD PTR [rip+0x169c1]        # 0x14002b6e8
   140014d27:	lea    rcx,[rsp+0x2f0]
   140014d2f:	call   QWORD PTR [rip+0x16b63]        # 0x14002b898
   140014d35:	lea    rcx,[rsp+0x430]
   140014d3d:	call   QWORD PTR [rip+0x16485]        # 0x14002b1c8
   140014d43:	lea    rcx,[rsp+0x300]
   140014d4b:	call   QWORD PTR [rip+0x1664f]        # 0x14002b3a0
   140014d51:	lea    rcx,[rsp+0x208]
   140014d59:	call   QWORD PTR [rip+0x16b39]        # 0x14002b898
   140014d5f:	lea    rdx,[rip+0x18db6]        # 0x14002db1c
   140014d66:	xor    eax,eax
   140014d68:	mov    rdi,rdx
   140014d6b:	mov    QWORD PTR [rsp+0x6d8],rdx
   140014d73:	mov    rcx,r14
   140014d76:	repnz scas al,BYTE PTR es:[rdi]
   140014d78:	lea    rdx,[rsp+0x850]
   140014d80:	not    rcx
   140014d83:	dec    rcx
   140014d86:	mov    DWORD PTR [rsp+0x6d0],ecx
   140014d8d:	lea    rcx,[rsp+0x2a0]
   140014d95:	movaps xmm0,XMMWORD PTR [rsp+0x6d0]
   140014d9d:	movdqa XMMWORD PTR [rsp+0x850],xmm0
   140014da6:	call   QWORD PTR [rip+0x16ab4]        # 0x14002b860
   140014dac:	lea    rdx,[rsp+0x2a0]
   140014db4:	lea    rcx,[rsp+0x70]
   140014db9:	call   0x1400138c0
   140014dbe:	lea    rcx,[rsp+0x2a0]
   140014dc6:	movzx  edi,al
   140014dc9:	call   QWORD PTR [rip+0x16ac9]        # 0x14002b898
   140014dcf:	movzx  edx,BYTE PTR [rsp+0xe1]
   140014dd7:	test   dil,dil
   140014dda:	mov    rcx,r14
   140014ddd:	cmovne edx,ebp
   140014de0:	xor    eax,eax
   140014de2:	mov    BYTE PTR [rsp+0xe1],dl
   140014de9:	lea    rdx,[rip+0x18d20]        # 0x14002db10
   140014df0:	mov    rdi,rdx
   140014df3:	mov    QWORD PTR [rsp+0x6f8],rdx
   140014dfb:	lea    rdx,[rsp+0x900]
   140014e03:	repnz scas al,BYTE PTR es:[rdi]
   140014e05:	not    rcx
   140014e08:	dec    rcx
   140014e0b:	mov    DWORD PTR [rsp+0x6f0],ecx
   140014e12:	lea    rcx,[rsp+0x2b0]
   140014e1a:	movaps xmm0,XMMWORD PTR [rsp+0x6f0]
   140014e22:	movdqa XMMWORD PTR [rsp+0x900],xmm0
   140014e2b:	call   QWORD PTR [rip+0x16a2f]        # 0x14002b860
   140014e31:	lea    rdx,[rsp+0x2b0]
   140014e39:	lea    rcx,[rsp+0x70]
   140014e3e:	call   0x1400138c0
   140014e43:	lea    rcx,[rsp+0x2b0]
   140014e4b:	call   QWORD PTR [rip+0x16a47]        # 0x14002b898
   140014e51:	lea    rbx,[rip+0x18ca8]        # 0x14002db00
   140014e58:	xor    eax,eax
   140014e5a:	mov    rcx,r14
   140014e5d:	mov    rdi,rbx
   140014e60:	mov    QWORD PTR [rsp+0x718],rbx
   140014e68:	repnz scas al,BYTE PTR es:[rdi]
   140014e6a:	lea    rdx,[rsp+0x870]
   140014e72:	not    rcx
   140014e75:	dec    rcx
   140014e78:	mov    DWORD PTR [rsp+0x710],ecx
   140014e7f:	lea    rcx,[rsp+0x170]
   140014e87:	movaps xmm0,XMMWORD PTR [rsp+0x710]
   140014e8f:	movdqa XMMWORD PTR [rsp+0x870],xmm0
   140014e98:	call   QWORD PTR [rip+0x169c2]        # 0x14002b860
   140014e9e:	mov    rdx,QWORD PTR [rsp+0xe8]
   140014ea6:	mov    eax,DWORD PTR [rdx+0x10]
   140014ea9:	cmp    eax,0x1
   140014eac:	je     0x140014ec7
   140014eae:	test   eax,eax
   140014eb0:	je     0x140014ec7
   140014eb2:	lea    rcx,[rsp+0xe8]
   140014eba:	call   0x140001b50
   140014ebf:	mov    rdx,QWORD PTR [rsp+0xe8]
   140014ec7:	xor    eax,eax
   140014ec9:	cmp    DWORD PTR [rdx+0x20],eax
   140014ecc:	je     0x140014edf
   140014ece:	mov    edx,DWORD PTR [rdx+0x24]
   140014ed1:	lea    rcx,[rsp+0x170]
   140014ed9:	call   QWORD PTR [rip+0x163c9]        # 0x14002b2a8
   140014edf:	lea    rdx,[rsp+0x170]
   140014ee7:	lea    rcx,[rsp+0xe8]
   140014eef:	mov    r8d,eax
   140014ef2:	call   0x14001c3c0
   140014ef7:	lea    rcx,[rsp+0x170]
   140014eff:	mov    rdi,QWORD PTR [rax]
   140014f02:	call   QWORD PTR [rip+0x16990]        # 0x14002b898
   140014f08:	mov    r11,QWORD PTR [rsp+0xe8]
   140014f10:	mov    eax,DWORD PTR [r11+0x10]
   140014f14:	cmp    eax,0x1
   140014f17:	je     0x140014f32
   140014f19:	test   eax,eax
   140014f1b:	je     0x140014f32
   140014f1d:	lea    rcx,[rsp+0xe8]
   140014f25:	call   0x140001b50
   140014f2a:	mov    r11,QWORD PTR [rsp+0xe8]
   140014f32:	cmp    rdi,r11
   140014f35:	je     0x140014f45
   140014f37:	lea    rdx,[rdi+0x18]
   140014f3b:	lea    rcx,[rsp+0x70]
   140014f40:	call   0x140012430
   140014f45:	lea    rcx,[rsp+0x70]
   140014f4a:	call   QWORD PTR [rip+0x162a0]        # 0x14002b1f0
   140014f50:	test   al,al
   140014f52:	jne    0x140015072
   140014f58:	lea    rdx,[rip+0x18439]        # 0x14002d398
   140014f5f:	xor    eax,eax
   140014f61:	mov    rcx,r14
   140014f64:	mov    rdi,rdx
   140014f67:	mov    QWORD PTR [rsp+0x738],rdx
   140014f6f:	lea    rdx,[rsp+0x940]
   140014f77:	repnz scas al,BYTE PTR es:[rdi]
   140014f79:	not    rcx
   140014f7c:	dec    rcx
   140014f7f:	mov    DWORD PTR [rsp+0x730],ecx
   140014f86:	lea    rcx,[rsp+0x180]
   140014f8e:	movaps xmm0,XMMWORD PTR [rsp+0x730]
   140014f96:	movdqa XMMWORD PTR [rsp+0x940],xmm0
   140014f9f:	call   QWORD PTR [rip+0x168bb]        # 0x14002b860
   140014fa5:	xor    eax,eax
   140014fa7:	mov    rcx,r14
   140014faa:	mov    rdi,rbx
   140014fad:	mov    QWORD PTR [rsp+0x728],rbx
   140014fb5:	repnz scas al,BYTE PTR es:[rdi]
   140014fb7:	lea    rdx,[rsp+0x750]
   140014fbf:	not    rcx
   140014fc2:	dec    rcx
   140014fc5:	mov    DWORD PTR [rsp+0x720],ecx
   140014fcc:	lea    rcx,[rsp+0x2d0]
   140014fd4:	movaps xmm0,XMMWORD PTR [rsp+0x720]
   140014fdc:	movdqa XMMWORD PTR [rsp+0x750],xmm0
   140014fe5:	call   QWORD PTR [rip+0x16875]        # 0x14002b860
   140014feb:	lea    rcx,[rsp+0x180]
   140014ff3:	call   QWORD PTR [rip+0x166e7]        # 0x14002b6e0
   140014ff9:	lea    rcx,[rsp+0x180]
   140015001:	mov    edi,eax
   140015003:	call   QWORD PTR [rip+0x168b7]        # 0x14002b8c0
   140015009:	lea    rdx,[rsp+0x70]
   14001500e:	lea    rcx,[rsp+0x2c0]
   140015016:	mov    r9d,edi
   140015019:	mov    r8,rax
   14001501c:	call   QWORD PTR [rip+0x16896]        # 0x14002b8b8
   140015022:	lea    rdx,[rsp+0x2d0]
   14001502a:	lea    rcx,[rsp+0xe8]
   140015032:	call   0x140005ee0
   140015037:	lea    rdx,[rsp+0x2c0]
   14001503f:	mov    rcx,rax
   140015042:	call   QWORD PTR [rip+0x16868]        # 0x14002b8b0
   140015048:	lea    rcx,[rsp+0x2c0]
   140015050:	call   QWORD PTR [rip+0x16842]        # 0x14002b898
   140015056:	lea    rcx,[rsp+0x2d0]
   14001505e:	call   QWORD PTR [rip+0x16834]        # 0x14002b898
   140015064:	lea    rcx,[rsp+0x180]
   14001506c:	call   QWORD PTR [rip+0x16826]        # 0x14002b898
   140015072:	lea    rcx,[rsp+0x70]
   140015077:	call   0x1400017b0
   14001507c:	mov    ebx,DWORD PTR [rsp+0x30]
   140015080:	mov    DWORD PTR [rsp+0x108],ebx
   140015087:	jmp    0x140017d0f
   14001508c:	lea    rcx,[rsp+0xb8]
   140015094:	mov    dl,0xa
   140015096:	call   QWORD PTR [rip+0x1665c]        # 0x14002b6f8
   14001509c:	mov    ebx,DWORD PTR [rsp+0x30]
   1400150a0:	mov    DWORD PTR [rsp+0x108],ebx
   1400150a7:	jmp    0x140017d0f
   1400150ac:	lea    r8,[rsp+0x30]
   1400150b1:	lea    rdx,[rsp+0x38]
   1400150b6:	lea    rcx,[rsp+0xb8]
   1400150be:	call   0x140011aa0
   1400150c3:	mov    ebx,DWORD PTR [rsp+0x30]
   1400150c7:	mov    DWORD PTR [rsp+0x108],ebx
   1400150ce:	jmp    0x140017d0f
   1400150d3:	lea    rdx,[rip+0x18a16]        # 0x14002daf0
   1400150da:	lea    rcx,[rsp+0x40]
   1400150df:	call   QWORD PTR [rip+0x164f3]        # 0x14002b5d8
   1400150e5:	lea    rcx,[rsp+0x40]
   1400150ea:	test   al,al
   1400150ec:	je     0x140015134
   1400150ee:	lea    rdx,[rsp+0x440]
   1400150f6:	mov    r9d,r14d
   1400150f9:	mov    r8d,0xe
   1400150ff:	call   QWORD PTR [rip+0x164e3]        # 0x14002b5e8
   140015105:	lea    rcx,[rsp+0x88]
   14001510d:	mov    rdx,rax
   140015110:	call   QWORD PTR [rip+0x1614a]        # 0x14002b260
   140015116:	lea    rcx,[rsp+0x440]
   14001511e:	call   QWORD PTR [rip+0x160a4]        # 0x14002b1c8
   140015124:	mov    ebx,DWORD PTR [rsp+0x30]
   140015128:	mov    DWORD PTR [rsp+0x108],ebx
   14001512f:	jmp    0x140017d0f
   140015134:	lea    rdx,[rip+0x189a5]        # 0x14002dae0
   14001513b:	call   QWORD PTR [rip+0x16497]        # 0x14002b5d8
   140015141:	mov    r9d,r14d
   140015144:	lea    rcx,[rsp+0x40]
   140015149:	test   al,al
   14001514b:	je     0x140015190
   14001514d:	lea    rdx,[rsp+0x310]
   140015155:	mov    r8d,0x9
   14001515b:	call   QWORD PTR [rip+0x16487]        # 0x14002b5e8
   140015161:	lea    rcx,[rsp+0x80]
   140015169:	mov    rdx,rax
   14001516c:	call   QWORD PTR [rip+0x160ee]        # 0x14002b260
   140015172:	lea    rcx,[rsp+0x310]
   14001517a:	call   QWORD PTR [rip+0x16048]        # 0x14002b1c8
   140015180:	mov    ebx,DWORD PTR [rsp+0x30]
   140015184:	mov    DWORD PTR [rsp+0x108],ebx
   14001518b:	jmp    0x140017d0f
   140015190:	lea    rdx,[rsp+0x450]
   140015198:	mov    r8d,0x3
   14001519e:	call   QWORD PTR [rip+0x16444]        # 0x14002b5e8
   1400151a4:	lea    rcx,[rsp+0xc0]
   1400151ac:	mov    rdx,rax
   1400151af:	call   QWORD PTR [rip+0x1654b]        # 0x14002b700
   1400151b5:	lea    rcx,[rsp+0x450]
   1400151bd:	call   QWORD PTR [rip+0x16005]        # 0x14002b1c8
   1400151c3:	lea    rcx,[rsp+0xc0]
   1400151cb:	mov    dl,0xa
   1400151cd:	call   QWORD PTR [rip+0x16525]        # 0x14002b6f8
   1400151d3:	mov    ebx,DWORD PTR [rsp+0x30]
   1400151d7:	mov    DWORD PTR [rsp+0x108],ebx
   1400151de:	jmp    0x140017d0f
   1400151e3:	lea    rdx,[rip+0x188e6]        # 0x14002dad0
   1400151ea:	lea    rcx,[rsp+0x40]
   1400151ef:	call   QWORD PTR [rip+0x163e3]        # 0x14002b5d8
   1400151f5:	test   al,al
   1400151f7:	je     0x140015281
   1400151fd:	lea    rdx,[rip+0x188c8]        # 0x14002dacc
   140015204:	lea    rcx,[rsp+0x1f8]
   14001520c:	mov    r8d,r14d
   14001520f:	call   QWORD PTR [rip+0x161e3]        # 0x14002b3f8
   140015215:	lea    rax,[rsp+0x1f8]
   14001521d:	lea    r8,[rsp+0x30]
   140015222:	lea    rdx,[rsp+0x38]
   140015227:	lea    rcx,[rsp+0x320]
   14001522f:	mov    r9d,0x9
   140015235:	mov    QWORD PTR [rsp+0x28],rsi
   14001523a:	mov    QWORD PTR [rsp+0x20],rax
   14001523f:	call   0x1400126e0
   140015244:	lea    rcx,[rsp+0xd0]
   14001524c:	mov    rdx,rax
   14001524f:	call   QWORD PTR [rip+0x1600b]        # 0x14002b260
   140015255:	lea    rcx,[rsp+0x320]
   14001525d:	call   QWORD PTR [rip+0x15f65]        # 0x14002b1c8
   140015263:	lea    rcx,[rsp+0x1f8]
   14001526b:	call   QWORD PTR [rip+0x15f57]        # 0x14002b1c8
   140015271:	mov    ebx,DWORD PTR [rsp+0x30]
   140015275:	mov    DWORD PTR [rsp+0x108],ebx
   14001527c:	jmp    0x140017d0f
   140015281:	lea    rdx,[rip+0x18830]        # 0x14002dab8
   140015288:	lea    rcx,[rsp+0x40]
   14001528d:	call   QWORD PTR [rip+0x16345]        # 0x14002b5d8
   140015293:	test   al,al
   140015295:	je     0x1400153d1
   14001529b:	lea    rdx,[rip+0x1882a]        # 0x14002dacc
   1400152a2:	lea    rcx,[rsp+0x2b8]
   1400152aa:	mov    r8d,r14d
   1400152ad:	call   QWORD PTR [rip+0x16145]        # 0x14002b3f8
   1400152b3:	lea    rax,[rsp+0x2b8]
   1400152bb:	lea    r8,[rsp+0x30]
   1400152c0:	lea    rdx,[rsp+0x38]
   1400152c5:	lea    rcx,[rsp+0x160]
   1400152cd:	mov    r9d,0x10
   1400152d3:	mov    QWORD PTR [rsp+0x28],rsi
   1400152d8:	mov    QWORD PTR [rsp+0x20],rax
   1400152dd:	call   0x1400126e0
   1400152e2:	lea    rcx,[rsp+0x2b8]
   1400152ea:	call   QWORD PTR [rip+0x15ed8]        # 0x14002b1c8
   1400152f0:	lea    rdx,[rsp+0xd0]
   1400152f8:	lea    rcx,[rsp+0x160]
   140015300:	call   0x14000be30
   140015305:	test   al,al
   140015307:	je     0x1400153b3
   14001530d:	lea    rdx,[rip+0x1878c]        # 0x14002daa0
   140015314:	xor    eax,eax
   140015316:	mov    rcx,r14
   140015319:	mov    rdi,rdx
   14001531c:	mov    QWORD PTR [rsp+0x648],rdx
   140015324:	lea    rdx,[rsp+0x760]
   14001532c:	repnz scas al,BYTE PTR es:[rdi]
   14001532e:	not    rcx
   140015331:	dec    rcx
   140015334:	mov    DWORD PTR [rsp+0x640],ecx
   14001533b:	lea    rcx,[rsp+0x218]
   140015343:	movaps xmm0,XMMWORD PTR [rsp+0x640]
   14001534b:	movdqa XMMWORD PTR [rsp+0x760],xmm0
   140015354:	call   QWORD PTR [rip+0x16506]        # 0x14002b860
   14001535a:	lea    r8,[rsp+0x160]
   140015362:	lea    rdx,[rsp+0x460]
   14001536a:	mov    rcx,r15
   14001536d:	call   QWORD PTR [rip+0x16365]        # 0x14002b6d8
   140015373:	lea    rdx,[rsp+0x218]
   14001537b:	lea    rcx,[rsp+0xe8]
   140015383:	mov    rdi,rax
   140015386:	call   0x140005ee0
   14001538b:	mov    rdx,rdi
   14001538e:	mov    rcx,rax
   140015391:	call   QWORD PTR [rip+0x16519]        # 0x14002b8b0
   140015397:	lea    rcx,[rsp+0x460]
   14001539f:	call   QWORD PTR [rip+0x164f3]        # 0x14002b898
   1400153a5:	lea    rcx,[rsp+0x218]
   1400153ad:	call   QWORD PTR [rip+0x164e5]        # 0x14002b898
   1400153b3:	lea    rcx,[rsp+0x160]
   1400153bb:	call   QWORD PTR [rip+0x15e07]        # 0x14002b1c8
   1400153c1:	mov    ebx,DWORD PTR [rsp+0x30]
   1400153c5:	mov    DWORD PTR [rsp+0x108],ebx
   1400153cc:	jmp    0x140017d0f
   1400153d1:	lea    rdx,[rip+0x186b8]        # 0x14002da90
   1400153d8:	lea    rcx,[rsp+0x40]
   1400153dd:	call   QWORD PTR [rip+0x161f5]        # 0x14002b5d8
   1400153e3:	test   al,al
   1400153e5:	je     0x14001548d
   1400153eb:	lea    rdx,[rip+0x186da]        # 0x14002dacc
   1400153f2:	lea    rcx,[rsp+0x278]
   1400153fa:	mov    r8d,r14d
   1400153fd:	call   QWORD PTR [rip+0x15ff5]        # 0x14002b3f8
   140015403:	lea    rax,[rsp+0x278]
   14001540b:	lea    r8,[rsp+0x30]
   140015410:	lea    rdx,[rsp+0x38]
   140015415:	lea    rcx,[rsp+0x330]
   14001541d:	mov    r9d,0xb
   140015423:	mov    QWORD PTR [rsp+0x28],rsi
   140015428:	mov    QWORD PTR [rsp+0x20],rax
   14001542d:	call   0x1400126e0
   140015432:	lea    rcx,[rsp+0x98]
   14001543a:	mov    rdx,rax
   14001543d:	call   QWORD PTR [rip+0x15e1d]        # 0x14002b260
   140015443:	lea    rcx,[rsp+0x330]
   14001544b:	call   QWORD PTR [rip+0x15d77]        # 0x14002b1c8
   140015451:	lea    rcx,[rsp+0x278]
   140015459:	call   QWORD PTR [rip+0x15d69]        # 0x14002b1c8
   14001545f:	test   dil,dil
   140015462:	je     0x140015ddc
   140015468:	lea    rdx,[rsp+0x88]
   140015470:	lea    rcx,[rsp+0x98]
   140015478:	call   0x1400117c0
   14001547d:	mov    ebx,DWORD PTR [rsp+0x30]
   140015481:	mov    DWORD PTR [rsp+0x108],ebx
   140015488:	jmp    0x140017d0f
   14001548d:	lea    rdx,[rip+0x185d4]        # 0x14002da68
   140015494:	xor    eax,eax
   140015496:	mov    rcx,r14
   140015499:	mov    rdi,rdx
   14001549c:	mov    QWORD PTR [rsp+0x6c8],rdx
   1400154a4:	mov    dl,0x20
   1400154a6:	repnz scas al,BYTE PTR es:[rdi]
   1400154a8:	not    rcx
   1400154ab:	dec    rcx
   1400154ae:	mov    DWORD PTR [rsp+0x6c0],ecx
   1400154b5:	lea    rcx,[rsp+0x1d2]
   1400154bd:	movaps xmm0,XMMWORD PTR [rsp+0x6c0]
   1400154c5:	movdqa XMMWORD PTR [rsp+0x780],xmm0
   1400154ce:	call   QWORD PTR [rip+0x163f4]        # 0x14002b8c8
   1400154d4:	lea    rcx,[rsp+0x1aa]
   1400154dc:	mov    dl,0x20
   1400154de:	mov    rbp,rax
   1400154e1:	call   QWORD PTR [rip+0x163e1]        # 0x14002b8c8
   1400154e7:	mov    r13d,DWORD PTR [rsp+0x30]
   1400154ec:	lea    rcx,[rsp+0x38]
   1400154f1:	mov    edx,r13d
   1400154f4:	mov    rbx,rax
   1400154f7:	call   0x140012e10
   1400154fc:	lea    rdx,[rsp+0x350]
   140015504:	mov    rcx,r15
   140015507:	mov    r8,rax
   14001550a:	call   QWORD PTR [rip+0x161c8]        # 0x14002b6d8
   140015510:	lea    rdx,[rsp+0x780]
   140015518:	lea    rcx,[rsp+0x480]
   140015520:	mov    rsi,rax
   140015523:	lea    edi,[r13+0x1]
   140015527:	call   QWORD PTR [rip+0x16333]        # 0x14002b860
   14001552d:	movzx  edx,WORD PTR [rbx]
   140015530:	xor    r9d,r9d
   140015533:	mov    r8d,edi
   140015536:	mov    WORD PTR [rsp+0x28],dx
   14001553b:	lea    rdx,[rsp+0x340]
   140015543:	mov    rcx,rax
   140015546:	mov    DWORD PTR [rsp+0x20],0xa
   14001554e:	call   QWORD PTR [rip+0x15fb4]        # 0x14002b508
   140015554:	movzx  edx,WORD PTR [rbp+0x0]
   140015558:	mov    WORD PTR [rsp+0x20],dx
   14001555d:	lea    rdx,[rsp+0x470]
   140015565:	mov    rcx,rax
   140015568:	xor    r9d,r9d
   14001556b:	mov    r8,rsi
   14001556e:	call   QWORD PTR [rip+0x15c74]        # 0x14002b1e8
   140015574:	mov    rsi,QWORD PTR [rsp+0xab0]
   14001557c:	lea    rcx,[rsi+0x60]
   140015580:	mov    rdx,rax
   140015583:	call   0x140001e20
   140015588:	lea    rcx,[rsp+0x470]
   140015590:	call   QWORD PTR [rip+0x16302]        # 0x14002b898
   140015596:	lea    rcx,[rsp+0x340]
   14001559e:	call   QWORD PTR [rip+0x162f4]        # 0x14002b898
   1400155a4:	lea    rcx,[rsp+0x480]
   1400155ac:	call   QWORD PTR [rip+0x162e6]        # 0x14002b898
   1400155b2:	lea    rcx,[rsp+0x350]
   1400155ba:	call   QWORD PTR [rip+0x162d8]        # 0x14002b898
   1400155c0:	mov    ebx,r13d
   1400155c3:	mov    BYTE PTR [rsp+0xaa8],0x1
   1400155cb:	mov    DWORD PTR [rsp+0x108],ebx
   1400155d2:	jmp    0x140017d0f
   1400155d7:	lea    rdx,[rip+0x1847a]        # 0x14002da58
   1400155de:	lea    rcx,[rsp+0x40]
   1400155e3:	call   QWORD PTR [rip+0x15fef]        # 0x14002b5d8
   1400155e9:	test   al,al
   1400155eb:	je     0x140015675
   1400155f1:	lea    rdx,[rip+0x1845c]        # 0x14002da54
   1400155f8:	lea    rcx,[rsp+0x228]
   140015600:	mov    r8d,r14d
   140015603:	call   QWORD PTR [rip+0x15def]        # 0x14002b3f8
   140015609:	lea    rax,[rsp+0x228]
   140015611:	lea    r8,[rsp+0x30]
   140015616:	lea    rdx,[rsp+0x38]
   14001561b:	lea    rcx,[rsp+0x490]
   140015623:	mov    r9d,0x9
   140015629:	mov    QWORD PTR [rsp+0x28],rsi
   14001562e:	mov    QWORD PTR [rsp+0x20],rax
   140015633:	call   0x1400126e0
   140015638:	lea    rcx,[rsp+0xc8]
   140015640:	mov    rdx,rax
   140015643:	call   QWORD PTR [rip+0x15c17]        # 0x14002b260
   140015649:	lea    rcx,[rsp+0x490]
   140015651:	call   QWORD PTR [rip+0x15b71]        # 0x14002b1c8
   140015657:	lea    rcx,[rsp+0x228]
   14001565f:	call   QWORD PTR [rip+0x15b63]        # 0x14002b1c8
   140015665:	mov    ebx,DWORD PTR [rsp+0x30]
   140015669:	mov    DWORD PTR [rsp+0x108],ebx
   140015670:	jmp    0x140017d0f
   140015675:	lea    rdx,[rip+0x183c4]        # 0x14002da40
   14001567c:	lea    rcx,[rsp+0x40]
   140015681:	call   QWORD PTR [rip+0x15f51]        # 0x14002b5d8
   140015687:	test   al,al
   140015689:	je     0x1400157cd
   14001568f:	lea    rdx,[rip+0x183be]        # 0x14002da54
   140015696:	lea    rcx,[rsp+0x2a8]
   14001569e:	mov    r8d,r14d
   1400156a1:	call   QWORD PTR [rip+0x15d51]        # 0x14002b3f8
   1400156a7:	lea    rax,[rsp+0x2a8]
   1400156af:	lea    r8,[rsp+0x30]
   1400156b4:	lea    rdx,[rsp+0x38]
   1400156b9:	lea    rcx,[rsp+0x190]
   1400156c1:	mov    r9d,0x10
   1400156c7:	mov    QWORD PTR [rsp+0x28],rsi
   1400156cc:	mov    QWORD PTR [rsp+0x20],rax
   1400156d1:	call   0x1400126e0
   1400156d6:	lea    rcx,[rsp+0x2a8]
   1400156de:	call   QWORD PTR [rip+0x15ae4]        # 0x14002b1c8
   1400156e4:	lea    rdx,[rsp+0xc8]
   1400156ec:	lea    rcx,[rsp+0x190]
   1400156f4:	call   0x14000be30
   1400156f9:	test   al,al
   1400156fb:	je     0x1400157a7
   140015701:	lea    rdx,[rip+0x18328]        # 0x14002da30
   140015708:	xor    eax,eax
   14001570a:	mov    rcx,r14
   14001570d:	mov    rdi,rdx
   140015710:	mov    QWORD PTR [rsp+0x668],rdx
   140015718:	lea    rdx,[rsp+0x7a0]
   140015720:	repnz scas al,BYTE PTR es:[rdi]
   140015722:	not    rcx
   140015725:	dec    rcx
   140015728:	mov    DWORD PTR [rsp+0x660],ecx
   14001572f:	lea    rcx,[rsp+0x238]
   140015737:	movaps xmm0,XMMWORD PTR [rsp+0x660]
   14001573f:	movdqa XMMWORD PTR [rsp+0x7a0],xmm0
   140015748:	call   QWORD PTR [rip+0x16112]        # 0x14002b860
   14001574e:	lea    r8,[rsp+0x190]
   140015756:	lea    rdx,[rsp+0x360]
   14001575e:	mov    rcx,r15
   140015761:	call   QWORD PTR [rip+0x15f71]        # 0x14002b6d8
   140015767:	lea    rdx,[rsp+0x238]
   14001576f:	lea    rcx,[rsp+0xe8]
   140015777:	mov    rdi,rax
   14001577a:	call   0x140005ee0
   14001577f:	mov    rdx,rdi
   140015782:	mov    rcx,rax
   140015785:	call   QWORD PTR [rip+0x16125]        # 0x14002b8b0
   14001578b:	lea    rcx,[rsp+0x360]
   140015793:	call   QWORD PTR [rip+0x160ff]        # 0x14002b898
   140015799:	lea    rcx,[rsp+0x238]
   1400157a1:	call   QWORD PTR [rip+0x160f1]        # 0x14002b898
   1400157a7:	lea    rcx,[rsp+0x190]
   1400157af:	mov    BYTE PTR [rsp+0xe0],0x1
   1400157b7:	call   QWORD PTR [rip+0x15a0b]        # 0x14002b1c8
   1400157bd:	mov    ebx,DWORD PTR [rsp+0x30]
   1400157c1:	mov    DWORD PTR [rsp+0x108],ebx
   1400157c8:	jmp    0x140017d0f
   1400157cd:	lea    rdx,[rip+0x1824c]        # 0x14002da20
   1400157d4:	lea    rcx,[rsp+0x40]
   1400157d9:	call   QWORD PTR [rip+0x15df9]        # 0x14002b5d8
   1400157df:	test   al,al
   1400157e1:	je     0x140015889
   1400157e7:	lea    rdx,[rip+0x18266]        # 0x14002da54
   1400157ee:	lea    rcx,[rsp+0x288]
   1400157f6:	mov    r8d,r14d
   1400157f9:	call   QWORD PTR [rip+0x15bf9]        # 0x14002b3f8
   1400157ff:	lea    rax,[rsp+0x288]
   140015807:	lea    r8,[rsp+0x30]
   14001580c:	lea    rdx,[rsp+0x38]
   140015811:	lea    rcx,[rsp+0x4a0]
   140015819:	mov    r9d,0xb
   14001581f:	mov    QWORD PTR [rsp+0x28],rsi
   140015824:	mov    QWORD PTR [rsp+0x20],rax
   140015829:	call   0x1400126e0
   14001582e:	lea    rcx,[rsp+0x90]
   140015836:	mov    rdx,rax
   140015839:	call   QWORD PTR [rip+0x15a21]        # 0x14002b260
   14001583f:	lea    rcx,[rsp+0x4a0]
   140015847:	call   QWORD PTR [rip+0x1597b]        # 0x14002b1c8
   14001584d:	lea    rcx,[rsp+0x288]
   140015855:	call   QWORD PTR [rip+0x1596d]        # 0x14002b1c8
   14001585b:	test   dil,dil
   14001585e:	je     0x140015ddc
   140015864:	lea    rdx,[rsp+0x88]
   14001586c:	lea    rcx,[rsp+0x90]
   140015874:	call   0x1400117c0
   140015879:	mov    ebx,DWORD PTR [rsp+0x30]
   14001587d:	mov    DWORD PTR [rsp+0x108],ebx
   140015884:	jmp    0x140017d0f
   140015889:	lea    rdx,[rip+0x18180]        # 0x14002da10
   140015890:	lea    rcx,[rsp+0x40]
   140015895:	call   QWORD PTR [rip+0x15d3d]        # 0x14002b5d8
   14001589b:	test   al,al
   14001589d:	je     0x140015927
   1400158a3:	lea    rdx,[rip+0x1815a]        # 0x14002da04
   1400158aa:	lea    rcx,[rsp+0x248]
   1400158b2:	mov    r8d,r14d
   1400158b5:	call   QWORD PTR [rip+0x15b3d]        # 0x14002b3f8
   1400158bb:	lea    rax,[rsp+0x248]
   1400158c3:	lea    r8,[rsp+0x30]
   1400158c8:	lea    rdx,[rsp+0x38]
   1400158cd:	lea    rcx,[rsp+0x4b0]
   1400158d5:	mov    r9d,0xa
   1400158db:	mov    QWORD PTR [rsp+0x28],rsi
   1400158e0:	mov    QWORD PTR [rsp+0x20],rax
   1400158e5:	call   0x1400126e0
   1400158ea:	lea    rcx,[rsp+0xd0]
   1400158f2:	mov    rdx,rax
   1400158f5:	call   QWORD PTR [rip+0x15965]        # 0x14002b260
   1400158fb:	lea    rcx,[rsp+0x4b0]
   140015903:	call   QWORD PTR [rip+0x158bf]        # 0x14002b1c8
   140015909:	lea    rcx,[rsp+0x248]
   140015911:	call   QWORD PTR [rip+0x158b1]        # 0x14002b1c8
   140015917:	mov    ebx,DWORD PTR [rsp+0x30]
   14001591b:	mov    DWORD PTR [rsp+0x108],ebx
   140015922:	jmp    0x140017d0f
   140015927:	lea    rdx,[rip+0x180c2]        # 0x14002d9f0
   14001592e:	lea    rcx,[rsp+0x40]
   140015933:	call   QWORD PTR [rip+0x15c9f]        # 0x14002b5d8
   140015939:	test   al,al
   14001593b:	je     0x140015a77
   140015941:	lea    rdx,[rip+0x180bc]        # 0x14002da04
   140015948:	lea    rcx,[rsp+0x2c8]
   140015950:	mov    r8d,r14d
   140015953:	call   QWORD PTR [rip+0x15a9f]        # 0x14002b3f8
   140015959:	lea    rax,[rsp+0x2c8]
   140015961:	lea    r8,[rsp+0x30]
   140015966:	lea    rdx,[rsp+0x38]
   14001596b:	lea    rcx,[rsp+0x1a0]
   140015973:	mov    r9d,0x11
   140015979:	mov    QWORD PTR [rsp+0x28],rsi
   14001597e:	mov    QWORD PTR [rsp+0x20],rax
   140015983:	call   0x1400126e0
   140015988:	lea    rcx,[rsp+0x2c8]
   140015990:	call   QWORD PTR [rip+0x15832]        # 0x14002b1c8
   140015996:	lea    rdx,[rsp+0xd0]
   14001599e:	lea    rcx,[rsp+0x1a0]
   1400159a6:	call   0x14000be30
   1400159ab:	test   al,al
   1400159ad:	je     0x140015a59
   1400159b3:	lea    rdx,[rip+0x180e6]        # 0x14002daa0
   1400159ba:	xor    eax,eax
   1400159bc:	mov    rcx,r14
   1400159bf:	mov    rdi,rdx
   1400159c2:	mov    QWORD PTR [rsp+0x708],rdx
   1400159ca:	lea    rdx,[rsp+0x7c0]
   1400159d2:	repnz scas al,BYTE PTR es:[rdi]
   1400159d4:	not    rcx
   1400159d7:	dec    rcx
   1400159da:	mov    DWORD PTR [rsp+0x700],ecx
   1400159e1:	lea    rcx,[rsp+0x258]
   1400159e9:	movaps xmm0,XMMWORD PTR [rsp+0x700]
   1400159f1:	movdqa XMMWORD PTR [rsp+0x7c0],xmm0
   1400159fa:	call   QWORD PTR [rip+0x15e60]        # 0x14002b860
   140015a00:	lea    r8,[rsp+0x1a0]
   140015a08:	lea    rdx,[rsp+0x378]
   140015a10:	mov    rcx,r15
   140015a13:	call   QWORD PTR [rip+0x15cbf]        # 0x14002b6d8
   140015a19:	lea    rdx,[rsp+0x258]
   140015a21:	lea    rcx,[rsp+0xe8]
   140015a29:	mov    rdi,rax
   140015a2c:	call   0x140005ee0
   140015a31:	mov    rdx,rdi
   140015a34:	mov    rcx,rax
   140015a37:	call   QWORD PTR [rip+0x15e73]        # 0x14002b8b0
   140015a3d:	lea    rcx,[rsp+0x378]
   140015a45:	call   QWORD PTR [rip+0x15e4d]        # 0x14002b898
   140015a4b:	lea    rcx,[rsp+0x258]
   140015a53:	call   QWORD PTR [rip+0x15e3f]        # 0x14002b898
   140015a59:	lea    rcx,[rsp+0x1a0]
   140015a61:	call   QWORD PTR [rip+0x15761]        # 0x14002b1c8
   140015a67:	mov    ebx,DWORD PTR [rsp+0x30]
   140015a6b:	mov    DWORD PTR [rsp+0x108],ebx
   140015a72:	jmp    0x140017d0f
   140015a77:	lea    rdx,[rip+0x17f62]        # 0x14002d9e0
   140015a7e:	lea    rcx,[rsp+0x40]
   140015a83:	call   QWORD PTR [rip+0x15b4f]        # 0x14002b5d8
   140015a89:	test   al,al
   140015a8b:	je     0x140015b33
   140015a91:	lea    rdx,[rip+0x17f6c]        # 0x14002da04
   140015a98:	lea    rcx,[rsp+0x298]
   140015aa0:	mov    r8d,r14d
   140015aa3:	call   QWORD PTR [rip+0x1594f]        # 0x14002b3f8
   140015aa9:	lea    rax,[rsp+0x298]
   140015ab1:	lea    r8,[rsp+0x30]
   140015ab6:	lea    rdx,[rsp+0x38]
   140015abb:	lea    rcx,[rsp+0x4d0]
   140015ac3:	mov    r9d,0xc
   140015ac9:	mov    QWORD PTR [rsp+0x28],rsi
   140015ace:	mov    QWORD PTR [rsp+0x20],rax
   140015ad3:	call   0x1400126e0
   140015ad8:	lea    rcx,[rsp+0x98]
   140015ae0:	mov    rdx,rax
   140015ae3:	call   QWORD PTR [rip+0x15777]        # 0x14002b260
   140015ae9:	lea    rcx,[rsp+0x4d0]
   140015af1:	call   QWORD PTR [rip+0x156d1]        # 0x14002b1c8
   140015af7:	lea    rcx,[rsp+0x298]
   140015aff:	call   QWORD PTR [rip+0x156c3]        # 0x14002b1c8
   140015b05:	test   dil,dil
   140015b08:	je     0x140015ddc
   140015b0e:	lea    rdx,[rsp+0x88]
   140015b16:	lea    rcx,[rsp+0x98]
   140015b1e:	call   0x1400117c0
   140015b23:	mov    ebx,DWORD PTR [rsp+0x30]
   140015b27:	mov    DWORD PTR [rsp+0x108],ebx
   140015b2e:	jmp    0x140017d0f
   140015b33:	lea    rdx,[rip+0x17f2e]        # 0x14002da68
   140015b3a:	xor    eax,eax
   140015b3c:	mov    rcx,r14
   140015b3f:	mov    rdi,rdx
   140015b42:	mov    QWORD PTR [rsp+0x688],rdx
   140015b4a:	mov    dl,0x20
   140015b4c:	repnz scas al,BYTE PTR es:[rdi]
   140015b4e:	not    rcx
   140015b51:	dec    rcx
   140015b54:	mov    DWORD PTR [rsp+0x680],ecx
   140015b5b:	lea    rcx,[rsp+0x1ca]
   140015b63:	movaps xmm0,XMMWORD PTR [rsp+0x680]
   140015b6b:	movdqa XMMWORD PTR [rsp+0x7e0],xmm0
   140015b74:	call   QWORD PTR [rip+0x15d4e]        # 0x14002b8c8
   140015b7a:	lea    rcx,[rsp+0x16c]
   140015b82:	mov    dl,0x20
   140015b84:	mov    rbp,rax
   140015b87:	call   QWORD PTR [rip+0x15d3b]        # 0x14002b8c8
   140015b8d:	mov    r13d,DWORD PTR [rsp+0x30]
   140015b92:	lea    rcx,[rsp+0x38]
   140015b97:	mov    edx,r13d
   140015b9a:	mov    rbx,rax
   140015b9d:	call   0x140012e10
   140015ba2:	lea    rdx,[rsp+0x4e0]
   140015baa:	mov    rcx,r15
   140015bad:	mov    r8,rax
   140015bb0:	call   QWORD PTR [rip+0x15b22]        # 0x14002b6d8
   140015bb6:	lea    rdx,[rsp+0x7e0]
   140015bbe:	lea    rcx,[rsp+0x398]
   140015bc6:	mov    rsi,rax
   140015bc9:	lea    edi,[r13+0x1]
   140015bcd:	call   QWORD PTR [rip+0x15c8d]        # 0x14002b860
   140015bd3:	movzx  edx,WORD PTR [rbx]
   140015bd6:	xor    r9d,r9d
   140015bd9:	mov    r8d,edi
   140015bdc:	mov    WORD PTR [rsp+0x28],dx
   140015be1:	lea    rdx,[rsp+0x530]
   140015be9:	mov    rcx,rax
   140015bec:	mov    DWORD PTR [rsp+0x20],0xa
   140015bf4:	call   QWORD PTR [rip+0x1590e]        # 0x14002b508
   140015bfa:	movzx  edx,WORD PTR [rbp+0x0]
   140015bfe:	mov    WORD PTR [rsp+0x20],dx
   140015c03:	lea    rdx,[rsp+0x388]
   140015c0b:	mov    rcx,rax
   140015c0e:	xor    r9d,r9d
   140015c11:	mov    r8,rsi
   140015c14:	call   QWORD PTR [rip+0x155ce]        # 0x14002b1e8
   140015c1a:	mov    rsi,QWORD PTR [rsp+0xab0]
   140015c22:	lea    rcx,[rsi+0x60]
   140015c26:	mov    rdx,rax
   140015c29:	call   0x140001e20
   140015c2e:	lea    rcx,[rsp+0x388]
   140015c36:	call   QWORD PTR [rip+0x15c5c]        # 0x14002b898
   140015c3c:	lea    rcx,[rsp+0x530]
   140015c44:	call   QWORD PTR [rip+0x15c4e]        # 0x14002b898
   140015c4a:	lea    rcx,[rsp+0x398]
   140015c52:	call   QWORD PTR [rip+0x15c40]        # 0x14002b898
   140015c58:	lea    rcx,[rsp+0x4e0]
   140015c60:	call   QWORD PTR [rip+0x15c32]        # 0x14002b898
   140015c66:	mov    ebx,r13d
   140015c69:	mov    BYTE PTR [rsp+0xaa8],0x1
   140015c71:	mov    DWORD PTR [rsp+0x108],ebx
   140015c78:	jmp    0x140017d0f
   140015c7d:	xor    eax,eax
   140015c7f:	lea    rdx,[rip+0x17de2]        # 0x14002da68
   140015c86:	mov    rcx,r14
   140015c89:	mov    rdi,rdx
   140015c8c:	mov    QWORD PTR [rsp+0x6e8],rdx
   140015c94:	repnz scas al,BYTE PTR es:[rdi]
   140015c96:	mov    rax,QWORD PTR [rsp+0x38]
   140015c9b:	not    rcx
   140015c9e:	dec    rcx
   140015ca1:	mov    DWORD PTR [rsp+0x6e0],ecx
   140015ca8:	mov    ecx,DWORD PTR [rax]
   140015caa:	movaps xmm0,XMMWORD PTR [rsp+0x6e0]
   140015cb2:	movdqa XMMWORD PTR [rsp+0x800],xmm0
   140015cbb:	cmp    ecx,0x1
   140015cbe:	je     0x140015cd1
   140015cc0:	test   ecx,ecx
   140015cc2:	je     0x140015cd1
   140015cc4:	mov    edx,DWORD PTR [rax+0x4]
   140015cc7:	lea    rcx,[rsp+0x38]
   140015ccc:	call   0x140012220
   140015cd1:	mov    r13d,DWORD PTR [rsp+0x30]
   140015cd6:	lea    rcx,[rsp+0x38]
   140015cdb:	mov    edx,r13d
   140015cde:	call   QWORD PTR [rip+0x1552c]        # 0x14002b210
   140015ce4:	lea    rcx,[rsp+0x1a8]
   140015cec:	mov    dl,0x20
   140015cee:	mov    rdi,rax
   140015cf1:	call   QWORD PTR [rip+0x15bd1]        # 0x14002b8c8
   140015cf7:	lea    rcx,[rsp+0x178]
   140015cff:	mov    dl,0x20
   140015d01:	mov    rbp,rax
   140015d04:	call   QWORD PTR [rip+0x15bbe]        # 0x14002b8c8
   140015d0a:	lea    rdx,[rsp+0x4f0]
   140015d12:	mov    r8,rdi
   140015d15:	mov    rcx,r15
   140015d18:	mov    rbx,rax
   140015d1b:	call   QWORD PTR [rip+0x159b7]        # 0x14002b6d8
   140015d21:	lea    rdx,[rsp+0x800]
   140015d29:	lea    rcx,[rsp+0x3b8]
   140015d31:	mov    rsi,rax
   140015d34:	lea    edi,[r13+0x1]
   140015d38:	call   QWORD PTR [rip+0x15b22]        # 0x14002b860
   140015d3e:	movzx  edx,WORD PTR [rbx]
   140015d41:	xor    r9d,r9d
   140015d44:	mov    r8d,edi
   140015d47:	mov    WORD PTR [rsp+0x28],dx
   140015d4c:	lea    rdx,[rsp+0x560]
   140015d54:	mov    rcx,rax
   140015d57:	mov    DWORD PTR [rsp+0x20],0xa
   140015d5f:	call   QWORD PTR [rip+0x157a3]        # 0x14002b508
   140015d65:	movzx  edx,WORD PTR [rbp+0x0]
   140015d69:	mov    WORD PTR [rsp+0x20],dx
   140015d6e:	lea    rdx,[rsp+0x3a8]
   140015d76:	mov    rcx,rax
   140015d79:	xor    r9d,r9d
   140015d7c:	mov    r8,rsi
   140015d7f:	call   QWORD PTR [rip+0x15463]        # 0x14002b1e8
   140015d85:	mov    rsi,QWORD PTR [rsp+0xab0]
   140015d8d:	lea    rcx,[rsi+0x60]
   140015d91:	mov    rdx,rax
   140015d94:	call   0x140001e20
   140015d99:	lea    rcx,[rsp+0x3a8]
   140015da1:	call   QWORD PTR [rip+0x15af1]        # 0x14002b898
   140015da7:	lea    rcx,[rsp+0x560]
   140015daf:	call   QWORD PTR [rip+0x15ae3]        # 0x14002b898
   140015db5:	lea    rcx,[rsp+0x3b8]
   140015dbd:	call   QWORD PTR [rip+0x15ad5]        # 0x14002b898
   140015dc3:	lea    rcx,[rsp+0x4f0]
   140015dcb:	call   QWORD PTR [rip+0x15ac7]        # 0x14002b898
   140015dd1:	mov    bpl,0x1
   140015dd4:	mov    BYTE PTR [rsp+0xaa8],bpl
   140015ddc:	mov    ebx,DWORD PTR [rsp+0x30]
   140015de0:	mov    DWORD PTR [rsp+0x108],ebx
   140015de7:	jmp    0x140017d0f
   140015dec:	lea    rdx,[rip+0x17bdd]        # 0x14002d9d0
   140015df3:	call   QWORD PTR [rip+0x157df]        # 0x14002b5d8
   140015df9:	test   al,al
   140015dfb:	je     0x140015e86
   140015e01:	lea    rcx,[rsp+0x540]
   140015e09:	call   QWORD PTR [rip+0x156c9]        # 0x14002b4d8
   140015e0f:	lea    r8,[rsp+0x30]
   140015e14:	lea    rdx,[rsp+0x38]
   140015e19:	lea    rcx,[rsp+0x3c8]
   140015e21:	mov    r9d,0x8
   140015e27:	mov    QWORD PTR [rsp+0x28],rsi
   140015e2c:	mov    QWORD PTR [rsp+0x20],rax
   140015e31:	call   0x1400126e0
   140015e36:	lea    rcx,[rsp+0x90]
   140015e3e:	mov    rdx,rax
   140015e41:	call   QWORD PTR [rip+0x15419]        # 0x14002b260
   140015e47:	lea    rcx,[rsp+0x3c8]
   140015e4f:	call   QWORD PTR [rip+0x15373]        # 0x14002b1c8
   140015e55:	lea    rcx,[rsp+0x540]
   140015e5d:	call   QWORD PTR [rip+0x15365]        # 0x14002b1c8
   140015e63:	test   dil,dil
   140015e66:	je     0x140017d0f
   140015e6c:	lea    rdx,[rsp+0x88]
   140015e74:	lea    rcx,[rsp+0x90]
   140015e7c:	call   0x1400117c0
   140015e81:	jmp    0x140017d0f
   140015e86:	lea    rdx,[rip+0x17b3b]        # 0x14002d9c8
   140015e8d:	lea    rcx,[rsp+0x40]
   140015e92:	call   QWORD PTR [rip+0x15740]        # 0x14002b5d8
   140015e98:	test   al,al
   140015e9a:	je     0x140015efd
   140015e9c:	lea    rcx,[rsp+0x500]
   140015ea4:	call   QWORD PTR [rip+0x1562e]        # 0x14002b4d8
   140015eaa:	lea    r8,[rsp+0x30]
   140015eaf:	lea    rdx,[rsp+0x38]
   140015eb4:	lea    rcx,[rsp+0x3d8]
   140015ebc:	mov    r9d,0x6
   140015ec2:	mov    QWORD PTR [rsp+0x28],rsi
   140015ec7:	mov    QWORD PTR [rsp+0x20],rax
   140015ecc:	call   0x1400126e0
   140015ed1:	lea    rcx,[rsp+0xc8]
   140015ed9:	mov    rdx,rax
   140015edc:	call   QWORD PTR [rip+0x1537e]        # 0x14002b260
   140015ee2:	lea    rcx,[rsp+0x3d8]
   140015eea:	call   QWORD PTR [rip+0x152d8]        # 0x14002b1c8
   140015ef0:	lea    rcx,[rsp+0x500]
   140015ef8:	jmp    0x140017d09
   140015efd:	lea    rdx,[rip+0x17ab4]        # 0x14002d9b8
   140015f04:	lea    rcx,[rsp+0x40]
   140015f09:	call   QWORD PTR [rip+0x156c9]        # 0x14002b5d8
   140015f0f:	test   al,al
   140015f11:	je     0x140016032
   140015f17:	lea    rcx,[rsp+0x3e8]
   140015f1f:	call   QWORD PTR [rip+0x155b3]        # 0x14002b4d8
   140015f25:	lea    r8,[rsp+0x30]
   140015f2a:	lea    rdx,[rsp+0x38]
   140015f2f:	lea    rcx,[rsp+0x1b0]
   140015f37:	mov    r9d,0xd
   140015f3d:	mov    QWORD PTR [rsp+0x28],rsi
   140015f42:	mov    QWORD PTR [rsp+0x20],rax
   140015f47:	call   0x1400126e0
   140015f4c:	lea    rcx,[rsp+0x3e8]
   140015f54:	call   QWORD PTR [rip+0x1526e]        # 0x14002b1c8
   140015f5a:	lea    rdx,[rsp+0xc8]
   140015f62:	lea    rcx,[rsp+0x1b0]
   140015f6a:	call   0x14000be30
   140015f6f:	test   al,al
   140015f71:	je     0x14001601d
   140015f77:	lea    rdx,[rip+0x17ab2]        # 0x14002da30
   140015f7e:	xor    eax,eax
   140015f80:	mov    rcx,r14
   140015f83:	mov    rdi,rdx
   140015f86:	mov    QWORD PTR [rsp+0x6a8],rdx
   140015f8e:	lea    rdx,[rsp+0x820]
   140015f96:	repnz scas al,BYTE PTR es:[rdi]
   140015f98:	not    rcx
   140015f9b:	dec    rcx
   140015f9e:	mov    DWORD PTR [rsp+0x6a0],ecx
   140015fa5:	lea    rcx,[rsp+0x268]
   140015fad:	movaps xmm0,XMMWORD PTR [rsp+0x6a0]
   140015fb5:	movdqa XMMWORD PTR [rsp+0x820],xmm0
   140015fbe:	call   QWORD PTR [rip+0x1589c]        # 0x14002b860
   140015fc4:	lea    r8,[rsp+0x1b0]
   140015fcc:	lea    rdx,[rsp+0x568]
   140015fd4:	mov    rcx,r15
   140015fd7:	call   QWORD PTR [rip+0x156fb]        # 0x14002b6d8
   140015fdd:	lea    rdx,[rsp+0x268]
   140015fe5:	lea    rcx,[rsp+0xe8]
   140015fed:	mov    rdi,rax
   140015ff0:	call   0x140005ee0
   140015ff5:	mov    rdx,rdi
   140015ff8:	mov    rcx,rax
   140015ffb:	call   QWORD PTR [rip+0x158af]        # 0x14002b8b0
   140016001:	lea    rcx,[rsp+0x568]
   140016009:	call   QWORD PTR [rip+0x15889]        # 0x14002b898
   14001600f:	lea    rcx,[rsp+0x268]
   140016017:	call   QWORD PTR [rip+0x1587b]        # 0x14002b898
   14001601d:	mov    BYTE PTR [rsp+0xe0],0x1
   140016025:	lea    rcx,[rsp+0x1b0]
   14001602d:	jmp    0x140017d09
   140016032:	xor    eax,eax
   140016034:	lea    rdx,[rip+0x17955]        # 0x14002d990
   14001603b:	mov    rcx,r14
   14001603e:	mov    rdi,rdx
   140016041:	mov    QWORD PTR [rsp+0x628],rdx
   140016049:	repnz scas al,BYTE PTR es:[rdi]
   14001604b:	mov    rax,QWORD PTR [rsp+0x38]
   140016050:	not    rcx
   140016053:	dec    rcx
   140016056:	mov    DWORD PTR [rsp+0x620],ecx
   14001605d:	mov    ecx,DWORD PTR [rax]
   14001605f:	movaps xmm0,XMMWORD PTR [rsp+0x620]
   140016067:	movdqa XMMWORD PTR [rsp+0x840],xmm0
   140016070:	cmp    ecx,0x1
   140016073:	je     0x140016086
   140016075:	test   ecx,ecx
   140016077:	je     0x140016086
   140016079:	mov    edx,DWORD PTR [rax+0x4]
   14001607c:	lea    rcx,[rsp+0x38]
   140016081:	call   0x140012220
   140016086:	mov    r13d,DWORD PTR [rsp+0x30]
   14001608b:	lea    rcx,[rsp+0x38]
   140016090:	mov    edx,r13d
   140016093:	call   QWORD PTR [rip+0x15177]        # 0x14002b210
   140016099:	lea    rcx,[rsp+0x1d0]
   1400160a1:	mov    dl,0x20
   1400160a3:	mov    rdi,rax
   1400160a6:	call   QWORD PTR [rip+0x1581c]        # 0x14002b8c8
   1400160ac:	lea    rcx,[rsp+0x188]
   1400160b4:	mov    dl,0x20
   1400160b6:	mov    rbp,rax
   1400160b9:	call   QWORD PTR [rip+0x15809]        # 0x14002b8c8
   1400160bf:	lea    rdx,[rsp+0x550]
   1400160c7:	mov    r8,rdi
   1400160ca:	mov    rcx,r15
   1400160cd:	mov    rbx,rax
   1400160d0:	call   QWORD PTR [rip+0x15602]        # 0x14002b6d8
   1400160d6:	lea    rdx,[rsp+0x840]
   1400160de:	lea    rcx,[rsp+0x2d8]
   1400160e6:	mov    rsi,rax
   1400160e9:	lea    edi,[r13+0x1]
   1400160ed:	call   QWORD PTR [rip+0x1576d]        # 0x14002b860
   1400160f3:	movzx  edx,WORD PTR [rbx]
   1400160f6:	xor    r9d,r9d
   1400160f9:	mov    r8d,edi
   1400160fc:	mov    WORD PTR [rsp+0x28],dx
   140016101:	lea    rdx,[rsp+0x510]
   140016109:	mov    rcx,rax
   14001610c:	mov    DWORD PTR [rsp+0x20],0xa
   140016114:	call   QWORD PTR [rip+0x153ee]        # 0x14002b508
   14001611a:	movzx  edx,WORD PTR [rbp+0x0]
   14001611e:	mov    WORD PTR [rsp+0x20],dx
   140016123:	lea    rdx,[rsp+0x3f8]
   14001612b:	mov    rcx,rax
   14001612e:	xor    r9d,r9d
   140016131:	mov    r8,rsi
   140016134:	call   QWORD PTR [rip+0x150ae]        # 0x14002b1e8
   14001613a:	mov    rsi,QWORD PTR [rsp+0xab0]
   140016142:	lea    rcx,[rsi+0x60]
   140016146:	mov    rdx,rax
   140016149:	call   0x140001e20
   14001614e:	lea    rcx,[rsp+0x3f8]
   140016156:	call   QWORD PTR [rip+0x1573c]        # 0x14002b898
   14001615c:	lea    rcx,[rsp+0x510]
   140016164:	call   QWORD PTR [rip+0x1572e]        # 0x14002b898
   14001616a:	lea    rcx,[rsp+0x2d8]
   140016172:	call   QWORD PTR [rip+0x15720]        # 0x14002b898
   140016178:	lea    rcx,[rsp+0x550]
   140016180:	call   QWORD PTR [rip+0x15712]        # 0x14002b898
   140016186:	mov    bpl,0x1
   140016189:	mov    BYTE PTR [rsp+0xaa8],bpl
   140016191:	jmp    0x140017d17
   140016196:	lea    rdx,[rip+0x17523]        # 0x14002d6c0
   14001619d:	lea    rcx,[rsp+0x40]
   1400161a2:	call   QWORD PTR [rip+0x15430]        # 0x14002b5d8
   1400161a8:	lea    rdx,[rip+0x1720a]        # 0x14002d3b9
   1400161af:	lea    rcx,[rsp+0xf0]
   1400161b7:	test   al,al
   1400161b9:	movzx  ebp,al
   1400161bc:	lea    rax,[rip+0x17891]        # 0x14002da54
   1400161c3:	cmovne rdx,rax
   1400161c7:	mov    r8d,r14d
   1400161ca:	call   QWORD PTR [rip+0x15228]        # 0x14002b3f8
   1400161d0:	mov    r13d,0x1
   1400161d6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400161e0:	mov    rcx,QWORD PTR [rsp+0xf0]
   1400161e8:	mov    dl,0x20
   1400161ea:	mov    r8d,DWORD PTR [rcx+0x4]
   1400161ee:	lea    rcx,[rsp+0x40]
   1400161f3:	call   QWORD PTR [rip+0x154d7]        # 0x14002b6d0
   1400161f9:	lea    rcx,[rsp+0xf0]
   140016201:	mov    QWORD PTR [rsp+0x28],rsi
   140016206:	mov    QWORD PTR [rsp+0x20],rcx
   14001620b:	lea    r8,[rsp+0x30]
   140016210:	lea    rdx,[rsp+0x38]
   140016215:	lea    rcx,[rsp+0x138]
   14001621d:	mov    r9d,eax
   140016220:	call   0x1400126e0
   140016225:	mov    rdx,QWORD PTR [rsp+0xd8]
   14001622d:	mov    eax,DWORD PTR [rdx]
   14001622f:	cmp    eax,r13d
   140016232:	je     0x140016265
   140016234:	test   eax,eax
   140016236:	je     0x140016265
   140016238:	lea    rcx,[rsp+0xd8]
   140016240:	mov    r8d,r13d
   140016243:	mov    edx,0x7fffffff
   140016248:	call   0x1400120e0
   14001624d:	test   rax,rax
   140016250:	je     0x140016294
   140016252:	lea    rdx,[rsp+0x138]
   14001625a:	mov    rcx,rax
   14001625d:	call   QWORD PTR [rip+0x1517d]        # 0x14002b3e0
   140016263:	jmp    0x140016294
   140016265:	lea    rdx,[rsp+0x138]
   14001626d:	lea    rcx,[rsp+0x418]
   140016275:	call   QWORD PTR [rip+0x15165]        # 0x14002b3e0
   14001627b:	lea    rcx,[rsp+0xd8]
   140016283:	call   QWORD PTR [rip+0x155b7]        # 0x14002b840
   140016289:	mov    rcx,QWORD PTR [rsp+0x418]
   140016291:	mov    QWORD PTR [rax],rcx
   140016294:	mov    rax,QWORD PTR [rsp+0x38]
   140016299:	mov    edi,DWORD PTR [rsp+0x30]
   14001629d:	movsxd r8,DWORD PTR [rax+0x8]
   1400162a1:	mov    ecx,DWORD PTR [rax+0xc]
   1400162a4:	inc    edi
   1400162a6:	sub    ecx,r8d
   1400162a9:	cmp    edi,ecx
   1400162ab:	jge    0x140016316
   1400162ad:	movsxd rdx,edi
   1400162b0:	add    rdx,r8
   1400162b3:	lea    rbx,[rax+rdx*8+0x10]
   1400162b8:	lea    rdx,[rip+0x17401]        # 0x14002d6c0
   1400162bf:	mov    rcx,rbx
   1400162c2:	call   QWORD PTR [rip+0x15310]        # 0x14002b5d8
   1400162c8:	test   al,al
   1400162ca:	jne    0x1400162e0
   1400162cc:	lea    rdx,[rip+0x173e5]        # 0x14002d6b8
   1400162d3:	mov    rcx,rbx
   1400162d6:	call   QWORD PTR [rip+0x152fc]        # 0x14002b5d8
   1400162dc:	test   al,al
   1400162de:	je     0x140016316
   1400162e0:	mov    rax,QWORD PTR [rsp+0x38]
   1400162e5:	movsxd rcx,edi
   1400162e8:	mov    DWORD PTR [rsp+0x30],edi
   1400162ec:	movsxd rdx,DWORD PTR [rax+0x8]
   1400162f0:	add    rdx,rcx
   1400162f3:	lea    rcx,[rsp+0x40]
   1400162f8:	lea    rdx,[rax+rdx*8+0x10]
   1400162fd:	call   QWORD PTR [rip+0x14f5d]        # 0x14002b260
   140016303:	lea    rcx,[rsp+0x138]
   14001630b:	call   QWORD PTR [rip+0x14eb7]        # 0x14002b1c8
   140016311:	jmp    0x1400161e0
   140016316:	lea    rcx,[rsp+0x138]
   14001631e:	call   QWORD PTR [rip+0x14ea4]        # 0x14002b1c8
   140016324:	mov    rdx,QWORD PTR [rsp+0xc8]
   14001632c:	mov    r13,QWORD PTR [rsp+0xaa0]
   140016334:	cmp    DWORD PTR [rdx+0x4],0x0
   140016338:	jne    0x14001728e
   14001633e:	mov    rax,QWORD PTR [rip+0x1553b]        # 0x14002b880
   140016345:	lea    rcx,[rsp+0xf8]
   14001634d:	mov    QWORD PTR [rsp+0x60],rax
   140016352:	mov    rax,QWORD PTR [rip+0x1552f]        # 0x14002b888
   140016359:	mov    QWORD PTR [rsp+0x68],rax
   14001635e:	call   QWORD PTR [rip+0x15174]        # 0x14002b4d8
   140016364:	mov    rcx,QWORD PTR [rsp+0xd8]
   14001636c:	mov    eax,DWORD PTR [rcx]
   14001636e:	cmp    eax,0x1
   140016371:	je     0x14001638f
   140016373:	test   eax,eax
   140016375:	je     0x14001638f
   140016377:	mov    edx,DWORD PTR [rcx+0x4]
   14001637a:	lea    rcx,[rsp+0xd8]
   140016382:	call   0x140012220
   140016387:	mov    rcx,QWORD PTR [rsp+0xd8]
   14001638f:	movsxd rax,DWORD PTR [rcx+0x8]
   140016393:	lea    rdx,[rsp+0x200]
   14001639b:	mov    r8b,0xa
   14001639e:	lea    rcx,[rcx+rax*8+0x10]
   1400163a3:	call   QWORD PTR [rip+0x1531f]        # 0x14002b6c8
   1400163a9:	mov    rdi,rax
   1400163ac:	mov    rdx,QWORD PTR [rax]
   1400163af:	mov    QWORD PTR [rsp+0x110],rdx
   1400163b7:	mov    ecx,DWORD PTR [rdx]
   1400163b9:	test   ecx,ecx
   1400163bb:	je     0x1400163c8
   1400163bd:	cmp    ecx,0xffffffff
   1400163c0:	je     0x14001642a
   1400163c2:	lock add DWORD PTR [rdx],0x1
   1400163c6:	jmp    0x140016422
   1400163c8:	mov    edx,DWORD PTR [rdx+0x4]
   1400163cb:	lea    rcx,[rsp+0x110]
   1400163d3:	call   QWORD PTR [rip+0x1547f]        # 0x14002b858
   1400163d9:	mov    rdx,QWORD PTR [rsp+0x110]
   1400163e1:	mov    rcx,QWORD PTR [rdi]
   1400163e4:	movsxd rax,DWORD PTR [rdx+0xc]
   1400163e8:	lea    rsi,[rdx+rax*8+0x10]
   1400163ed:	movsxd rax,DWORD PTR [rcx+0x8]
   1400163f1:	lea    rbx,[rcx+rax*8+0x10]
   1400163f6:	movsxd rax,DWORD PTR [rdx+0x8]
   1400163fa:	lea    rdi,[rdx+rax*8+0x10]
   1400163ff:	cmp    rdi,rsi
   140016402:	je     0x14001642a
   140016404:	test   rdi,rdi
   140016407:	je     0x140016415
   140016409:	mov    rdx,rbx
   14001640c:	mov    rcx,rdi
   14001640f:	call   QWORD PTR [rip+0x14fcb]        # 0x14002b3e0
   140016415:	add    rdi,0x8
   140016419:	add    rbx,0x8
   14001641d:	cmp    rdi,rsi
   140016420:	jne    0x140016404
   140016422:	mov    rdx,QWORD PTR [rsp+0x110]
   14001642a:	mov    rbx,QWORD PTR [rsp+0x200]
   140016432:	mov    DWORD PTR [rsp+0x118],0x0
   14001643d:	movsxd rax,DWORD PTR [rdx+0x8]
   140016441:	lea    rcx,[rdx+rax*8+0x10]
   140016446:	mov    QWORD PTR [rsp+0x120],rcx
   14001644e:	movsxd rax,DWORD PTR [rdx+0xc]
   140016452:	lea    rcx,[rdx+rax*8+0x10]
   140016457:	mov    QWORD PTR [rsp+0x128],rcx
   14001645f:	mov    eax,DWORD PTR [rbx]
   140016461:	test   eax,eax
   140016463:	je     0x140016483
   140016465:	cmp    eax,0xffffffff
   140016468:	je     0x1400164c0
   14001646a:	mov    eax,r14d
   14001646d:	lock xadd DWORD PTR [rbx],eax
   140016471:	add    eax,0xffffffff
   140016474:	setne  al
   140016477:	test   al,al
   140016479:	jne    0x1400164c0
   14001647b:	mov    rbx,QWORD PTR [rsp+0x200]
   140016483:	movsxd rax,DWORD PTR [rbx+0xc]
   140016487:	lea    rdi,[rbx+rax*8+0x10]
   14001648c:	movsxd rax,DWORD PTR [rbx+0x8]
   140016490:	lea    rsi,[rbx+rax*8+0x10]
   140016495:	cmp    rsi,rdi
   140016498:	je     0x1400164b2
   14001649a:	nop    WORD PTR [rax+rax*1+0x0]
   1400164a0:	sub    rdi,0x8
   1400164a4:	mov    rcx,rdi
   1400164a7:	call   QWORD PTR [rip+0x14d1b]        # 0x14002b1c8
   1400164ad:	cmp    rdi,rsi
   1400164b0:	jne    0x1400164a0
   1400164b2:	mov    rcx,rbx
   1400164b5:	call   QWORD PTR [rip+0x153b5]        # 0x14002b870
   1400164bb:	nop    DWORD PTR [rax+rax*1+0x0]
   1400164c0:	mov    eax,DWORD PTR [rsp+0x118]
   1400164c7:	inc    DWORD PTR [rsp+0x118]
   1400164ce:	test   eax,eax
   1400164d0:	jne    0x1400164e9
   1400164d2:	mov    rax,QWORD PTR [rsp+0x128]
   1400164da:	cmp    QWORD PTR [rsp+0x120],rax
   1400164e2:	je     0x1400164e9
   1400164e4:	mov    bpl,0x1
   1400164e7:	jmp    0x1400164ec
   1400164e9:	xor    bpl,bpl
   1400164ec:	test   r12b,0x2
   1400164f0:	je     0x14001655b
   1400164f2:	mov    rbx,QWORD PTR [rsp+0x520]
   1400164fa:	and    r12d,0xfffffffd
   1400164fe:	mov    eax,DWORD PTR [rbx]
   140016500:	test   eax,eax
   140016502:	je     0x14001651a
   140016504:	cmp    eax,0xffffffff
   140016507:	je     0x14001655b
   140016509:	mov    eax,r14d
   14001650c:	lock xadd DWORD PTR [rbx],eax
   140016510:	add    eax,0xffffffff
   140016513:	setne  al
   140016516:	test   al,al
   140016518:	jne    0x14001655b
   14001651a:	mov    rbx,QWORD PTR [rsp+0x520]
   140016522:	movsxd rax,DWORD PTR [rbx+0xc]
   140016526:	lea    rdi,[rbx+rax*8+0x10]
   14001652b:	movsxd rax,DWORD PTR [rbx+0x8]
   14001652f:	lea    rsi,[rbx+rax*8+0x10]
   140016534:	cmp    rsi,rdi
   140016537:	je     0x140016552
   140016539:	nop    DWORD PTR [rax+0x0]
   140016540:	sub    rdi,0x8
   140016544:	mov    rcx,rdi
   140016547:	call   QWORD PTR [rip+0x14c7b]        # 0x14002b1c8
   14001654d:	cmp    rdi,rsi
   140016550:	jne    0x140016540
   140016552:	mov    rcx,rbx
   140016555:	call   QWORD PTR [rip+0x15315]        # 0x14002b870
   14001655b:	test   bpl,bpl
   14001655e:	je     0x140016df8
   140016564:	mov    r13,QWORD PTR [rsp+0x120]
   14001656c:	test   r12b,0x4
   140016570:	je     0x1400165e0
   140016572:	mov    rbx,QWORD PTR [rsp+0x428]
   14001657a:	and    r12d,0xfffffffb
   14001657e:	mov    eax,DWORD PTR [rbx]
   140016580:	test   eax,eax
   140016582:	je     0x1400165a2
   140016584:	cmp    eax,0xffffffff
   140016587:	je     0x1400165e0
   140016589:	mov    eax,r14d
   14001658c:	lock xadd DWORD PTR [rbx],eax
   140016590:	add    eax,0xffffffff
   140016593:	setne  al
   140016596:	test   al,al
   140016598:	jne    0x1400165e0
   14001659a:	mov    rbx,QWORD PTR [rsp+0x428]
   1400165a2:	movsxd rax,DWORD PTR [rbx+0xc]
   1400165a6:	lea    rdi,[rbx+rax*8+0x10]
   1400165ab:	movsxd rax,DWORD PTR [rbx+0x8]
   1400165af:	lea    rsi,[rbx+rax*8+0x10]
   1400165b4:	cmp    rsi,rdi
   1400165b7:	je     0x1400165d2
   1400165b9:	nop    DWORD PTR [rax+0x0]
   1400165c0:	sub    rdi,0x8
   1400165c4:	mov    rcx,rdi
   1400165c7:	call   QWORD PTR [rip+0x14bfb]        # 0x14002b1c8
   1400165cd:	cmp    rdi,rsi
   1400165d0:	jne    0x1400165c0
   1400165d2:	mov    rcx,rbx
   1400165d5:	call   QWORD PTR [rip+0x15295]        # 0x14002b870
   1400165db:	nop    DWORD PTR [rax+rax*1+0x0]
   1400165e0:	mov    ebp,DWORD PTR [rsp+0x118]
   1400165e7:	test   r12b,0x10
   1400165eb:	je     0x14001665b
   1400165ed:	mov    rbx,QWORD PTR [rsp+0x4c0]
   1400165f5:	and    r12d,0xffffffef
   1400165f9:	mov    eax,DWORD PTR [rbx]
   1400165fb:	test   eax,eax
   1400165fd:	je     0x140016615
   1400165ff:	cmp    eax,0xffffffff
   140016602:	je     0x14001665b
   140016604:	mov    eax,r14d
   140016607:	lock xadd DWORD PTR [rbx],eax
   14001660b:	add    eax,0xffffffff
   14001660e:	setne  al
   140016611:	test   al,al
   140016613:	jne    0x14001665b
   140016615:	mov    rbx,QWORD PTR [rsp+0x4c0]
   14001661d:	movsxd rax,DWORD PTR [rbx+0xc]
   140016621:	lea    rdi,[rbx+rax*8+0x10]
   140016626:	movsxd rax,DWORD PTR [rbx+0x8]
   14001662a:	lea    rsi,[rbx+rax*8+0x10]
   14001662f:	cmp    rsi,rdi
   140016632:	je     0x140016652
   140016634:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140016640:	sub    rdi,0x8
   140016644:	mov    rcx,rdi
   140016647:	call   QWORD PTR [rip+0x14b7b]        # 0x14002b1c8
   14001664d:	cmp    rdi,rsi
   140016650:	jne    0x140016640
   140016652:	mov    rcx,rbx
   140016655:	call   QWORD PTR [rip+0x15215]        # 0x14002b870
   14001665b:	test   ebp,ebp
   14001665d:	je     0x140016d7b
   140016663:	mov    rax,QWORD PTR [r13+0x0]
   140016667:	cmp    DWORD PTR [rax+0x4],0x0
   14001666b:	je     0x140016c54
   140016671:	xor    r8d,r8d
   140016674:	mov    dl,0x3a
   140016676:	mov    rcx,r13
   140016679:	call   QWORD PTR [rip+0x15051]        # 0x14002b6d0
   14001667f:	mov    edi,eax
   140016681:	test   eax,eax
   140016683:	js     0x140016cd7
   140016689:	lea    rdx,[rsp+0x438]
   140016691:	mov    r8d,eax
   140016694:	mov    rcx,r13
   140016697:	call   QWORD PTR [rip+0x15023]        # 0x14002b6c0
   14001669d:	lea    rdx,[rsp+0x50]
   1400166a2:	mov    rcx,rax
   1400166a5:	call   QWORD PTR [rip+0x1506d]        # 0x14002b718
   1400166ab:	lea    rcx,[rsp+0x438]
   1400166b3:	call   QWORD PTR [rip+0x14b0f]        # 0x14002b1c8
   1400166b9:	lea    r8d,[rdi+0x1]
   1400166bd:	lea    rdx,[rsp+0x4c8]
   1400166c5:	mov    r9d,r14d
   1400166c8:	mov    rcx,r13
   1400166cb:	call   QWORD PTR [rip+0x14f17]        # 0x14002b5e8
   1400166d1:	lea    rdx,[rsp+0x58]
   1400166d6:	mov    rcx,rax
   1400166d9:	call   QWORD PTR [rip+0x15039]        # 0x14002b718
   1400166df:	lea    rcx,[rsp+0x4c8]
   1400166e7:	call   QWORD PTR [rip+0x14adb]        # 0x14002b1c8
   1400166ed:	mov    rdx,QWORD PTR [rsp+0x68]
   1400166f2:	mov    eax,DWORD PTR [rdx]
   1400166f4:	cmp    eax,0x1
   1400166f7:	je     0x140016727
   1400166f9:	test   eax,eax
   1400166fb:	je     0x140016727
   1400166fd:	lea    rcx,[rsp+0x68]
   140016702:	mov    edx,0x7fffffff
   140016707:	mov    r8d,0x1
   14001670d:	call   0x1400120e0
   140016712:	test   rax,rax
   140016715:	je     0x140016750
   140016717:	lea    rdx,[rsp+0x50]
   14001671c:	mov    rcx,rax
   14001671f:	call   QWORD PTR [rip+0x14cbb]        # 0x14002b3e0
   140016725:	jmp    0x140016750
   140016727:	lea    rdx,[rsp+0x50]
   14001672c:	lea    rcx,[rsp+0x448]
   140016734:	call   QWORD PTR [rip+0x14ca6]        # 0x14002b3e0
   14001673a:	lea    rcx,[rsp+0x68]
   14001673f:	call   QWORD PTR [rip+0x150fb]        # 0x14002b840
   140016745:	mov    rcx,QWORD PTR [rsp+0x448]
   14001674d:	mov    QWORD PTR [rax],rcx
   140016750:	lea    rdx,[rip+0x17229]        # 0x14002d980
   140016757:	lea    rcx,[rsp+0x50]
   14001675c:	call   QWORD PTR [rip+0x14e66]        # 0x14002b5c8
   140016762:	test   eax,eax
   140016764:	jne    0x14001679b
   140016766:	lea    rdx,[rsp+0x58]
   14001676b:	lea    rcx,[rsp+0x4d8]
   140016773:	call   QWORD PTR [rip+0x14f77]        # 0x14002b6f0
   140016779:	mov    rcx,QWORD PTR [rsp+0xaa0]
   140016781:	add    rcx,0x10
   140016785:	mov    rdx,rax
   140016788:	call   QWORD PTR [rip+0x15122]        # 0x14002b8b0
   14001678e:	lea    rcx,[rsp+0x4d8]
   140016796:	jmp    0x140016c38
   14001679b:	lea    rdx,[rip+0x171c6]        # 0x14002d968
   1400167a2:	lea    rcx,[rsp+0x50]
   1400167a7:	call   QWORD PTR [rip+0x14e1b]        # 0x14002b5c8
   1400167ad:	test   eax,eax
   1400167af:	jne    0x1400167e6
   1400167b1:	lea    rdx,[rsp+0x58]
   1400167b6:	lea    rcx,[rsp+0x458]
   1400167be:	call   QWORD PTR [rip+0x14f2c]        # 0x14002b6f0
   1400167c4:	mov    rcx,QWORD PTR [rsp+0xaa0]
   1400167cc:	add    rcx,0x18
   1400167d0:	mov    rdx,rax
   1400167d3:	call   QWORD PTR [rip+0x150d7]        # 0x14002b8b0
   1400167d9:	lea    rcx,[rsp+0x458]
   1400167e1:	jmp    0x140016c38
   1400167e6:	lea    rdx,[rip+0x1716b]        # 0x14002d958
   1400167ed:	lea    rcx,[rsp+0x50]
   1400167f2:	call   QWORD PTR [rip+0x14dd0]        # 0x14002b5c8
   1400167f8:	test   eax,eax
   1400167fa:	jne    0x14001681d
   1400167fc:	lea    rdx,[rip+0x1714d]        # 0x14002d950
   140016803:	lea    rcx,[rsp+0x58]
   140016808:	call   QWORD PTR [rip+0x14dba]        # 0x14002b5c8
   14001680e:	test   eax,eax
   140016810:	sete   BYTE PTR [rsp+0xab8]
   140016818:	jmp    0x140016c3e
   14001681d:	lea    rdx,[rip+0x1711c]        # 0x14002d940
   140016824:	lea    rcx,[rsp+0x50]
   140016829:	call   QWORD PTR [rip+0x14d99]        # 0x14002b5c8
   14001682f:	test   eax,eax
   140016831:	jne    0x14001684b
   140016833:	lea    rdx,[rsp+0x58]
   140016838:	lea    rcx,[rsp+0xf8]
   140016840:	call   QWORD PTR [rip+0x14a1a]        # 0x14002b260
   140016846:	jmp    0x140016c3e
   14001684b:	lea    rdx,[rip+0x170de]        # 0x14002d930
   140016852:	lea    rcx,[rsp+0x50]
   140016857:	call   QWORD PTR [rip+0x14d6b]        # 0x14002b5c8
   14001685d:	test   eax,eax
   14001685f:	je     0x140016c3e
   140016865:	lea    rdx,[rip+0x170b4]        # 0x14002d920
   14001686c:	lea    rcx,[rsp+0x50]
   140016871:	call   QWORD PTR [rip+0x14d51]        # 0x14002b5c8
   140016877:	test   eax,eax
   140016879:	jne    0x140016a56
   14001687f:	lea    rdx,[rip+0x17082]        # 0x14002d908
   140016886:	lea    rcx,[rsp+0x58]
   14001688b:	call   QWORD PTR [rip+0x14d47]        # 0x14002b5d8
   140016891:	test   al,al
   140016893:	jne    0x140016954
   140016899:	lea    rcx,[rsp+0x1b8]
   1400168a1:	mov    dl,0x20
   1400168a3:	call   QWORD PTR [rip+0x1501f]        # 0x14002b8c8
   1400168a9:	lea    rdx,[rsp+0x58]
   1400168ae:	lea    rcx,[rsp+0x4f8]
   1400168b6:	mov    rbx,rax
   1400168b9:	call   QWORD PTR [rip+0x14e31]        # 0x14002b6f0
   1400168bf:	lea    rdx,[rip+0x1701a]        # 0x14002d8e0
   1400168c6:	lea    rcx,[rsp+0x468]
   1400168ce:	mov    r8d,r14d
   1400168d1:	mov    rdi,rax
   1400168d4:	call   QWORD PTR [rip+0x149a6]        # 0x14002b280
   1400168da:	movzx  edx,WORD PTR [rbx]
   1400168dd:	xor    r9d,r9d
   1400168e0:	mov    WORD PTR [rsp+0x20],dx
   1400168e5:	lea    rdx,[rsp+0x4e8]
   1400168ed:	mov    rcx,rax
   1400168f0:	mov    r8,rdi
   1400168f3:	call   QWORD PTR [rip+0x148ef]        # 0x14002b1e8
   1400168f9:	mov    rcx,QWORD PTR [rsp+0xab0]
   140016901:	add    rcx,0x60
   140016905:	mov    rdx,rax
   140016908:	call   0x140001e20
   14001690d:	lea    rcx,[rsp+0x4e8]
   140016915:	call   QWORD PTR [rip+0x14f7d]        # 0x14002b898
   14001691b:	lea    rcx,[rsp+0x468]
   140016923:	call   QWORD PTR [rip+0x14f6f]        # 0x14002b898
   140016929:	lea    rcx,[rsp+0x4f8]
   140016931:	call   QWORD PTR [rip+0x14f61]        # 0x14002b898
   140016937:	lea    rcx,[rip+0x16f9a]        # 0x14002d8d8
   14001693e:	mov    BYTE PTR [rsp+0xaa8],0x1
   140016946:	call   QWORD PTR [rip+0x14b1c]        # 0x14002b468
   14001694c:	mov    r15,rax
   14001694f:	jmp    0x140016c3e
   140016954:	lea    rdx,[rsp+0x1c0]
   14001695c:	lea    rcx,[rsp+0x58]
   140016961:	mov    r9d,r14d
   140016964:	mov    r8d,0x14
   14001696a:	call   QWORD PTR [rip+0x14c78]        # 0x14002b5e8
   140016970:	lea    rcx,[rsp+0x1c0]
   140016978:	call   QWORD PTR [rip+0x14d3a]        # 0x14002b6b8
   14001697e:	mov    r15,rax
   140016981:	test   rax,rax
   140016984:	jne    0x140016a43
   14001698a:	lea    rcx,[rsp+0x18c]
   140016992:	mov    dl,0x20
   140016994:	call   QWORD PTR [rip+0x14f2e]        # 0x14002b8c8
   14001699a:	lea    rdx,[rsp+0x1c0]
   1400169a2:	lea    rcx,[rsp+0x488]
   1400169aa:	mov    rbx,rax
   1400169ad:	call   QWORD PTR [rip+0x14d3d]        # 0x14002b6f0
   1400169b3:	lea    rdx,[rip+0x16f06]        # 0x14002d8c0
   1400169ba:	lea    rcx,[rsp+0x508]
   1400169c2:	mov    r8d,r14d
   1400169c5:	mov    rdi,rax
   1400169c8:	call   QWORD PTR [rip+0x148b2]        # 0x14002b280
   1400169ce:	movzx  edx,WORD PTR [rbx]
   1400169d1:	xor    r9d,r9d
   1400169d4:	mov    WORD PTR [rsp+0x20],dx
   1400169d9:	lea    rdx,[rsp+0x478]
   1400169e1:	mov    rcx,rax
   1400169e4:	mov    r8,rdi
   1400169e7:	call   QWORD PTR [rip+0x147fb]        # 0x14002b1e8
   1400169ed:	mov    rcx,QWORD PTR [rsp+0xab0]
   1400169f5:	add    rcx,0x60
   1400169f9:	mov    rdx,rax
   1400169fc:	call   0x140001e20
   140016a01:	lea    rcx,[rsp+0x478]
   140016a09:	call   QWORD PTR [rip+0x14e89]        # 0x14002b898
   140016a0f:	lea    rcx,[rsp+0x508]
   140016a17:	call   QWORD PTR [rip+0x14e7b]        # 0x14002b898
   140016a1d:	lea    rcx,[rsp+0x488]
   140016a25:	call   QWORD PTR [rip+0x14e6d]        # 0x14002b898
   140016a2b:	lea    rcx,[rip+0x16ea6]        # 0x14002d8d8
   140016a32:	mov    BYTE PTR [rsp+0xaa8],0x1
   140016a3a:	call   QWORD PTR [rip+0x14a28]        # 0x14002b468
   140016a40:	mov    r15,rax
   140016a43:	lea    rcx,[rsp+0x1c0]
   140016a4b:	call   QWORD PTR [rip+0x14777]        # 0x14002b1c8
   140016a51:	jmp    0x140016c3e
   140016a56:	lea    rdx,[rip+0x16e43]        # 0x14002d8a0
   140016a5d:	lea    rcx,[rsp+0x50]
   140016a62:	call   QWORD PTR [rip+0x14b60]        # 0x14002b5c8
   140016a68:	test   eax,eax
   140016a6a:	jne    0x140016bce
   140016a70:	lea    rdx,[rip+0x16e1d]        # 0x14002d894
   140016a77:	lea    rcx,[rsp+0x58]
   140016a7c:	call   QWORD PTR [rip+0x14b46]        # 0x14002b5c8
   140016a82:	test   eax,eax
   140016a84:	je     0x140016c3e
   140016a8a:	lea    rcx,[rsp+0x1ce]
   140016a92:	mov    dl,0x20
   140016a94:	call   QWORD PTR [rip+0x14e2e]        # 0x14002b8c8
   140016a9a:	lea    rdx,[rsp+0x58]
   140016a9f:	lea    rcx,[rsp+0x358]
   140016aa7:	mov    rbx,rax
   140016aaa:	call   QWORD PTR [rip+0x14c40]        # 0x14002b6f0
   140016ab0:	lea    rdx,[rip+0x16db1]        # 0x14002d868
   140016ab7:	lea    rcx,[rsp+0x348]
   140016abf:	mov    r8d,r14d
   140016ac2:	mov    rdi,rax
   140016ac5:	call   QWORD PTR [rip+0x147b5]        # 0x14002b280
   140016acb:	movzx  edx,WORD PTR [rbx]
   140016ace:	xor    r9d,r9d
   140016ad1:	mov    WORD PTR [rsp+0x20],dx
   140016ad6:	lea    rdx,[rsp+0x338]
   140016ade:	mov    rcx,rax
   140016ae1:	mov    r8,rdi
   140016ae4:	call   QWORD PTR [rip+0x146fe]        # 0x14002b1e8
   140016aea:	mov    rcx,QWORD PTR [rsp+0xab0]
   140016af2:	add    rcx,0x60
   140016af6:	mov    rdx,rax
   140016af9:	call   0x140001e20
   140016afe:	lea    rcx,[rsp+0x338]
   140016b06:	call   QWORD PTR [rip+0x14d8c]        # 0x14002b898
   140016b0c:	lea    rcx,[rsp+0x348]
   140016b14:	call   QWORD PTR [rip+0x14d7e]        # 0x14002b898
   140016b1a:	lea    rcx,[rsp+0x358]
   140016b22:	call   QWORD PTR [rip+0x14d70]        # 0x14002b898
   140016b28:	lea    rcx,[rsp+0x58]
   140016b2d:	call   QWORD PTR [rip+0x14695]        # 0x14002b1c8
   140016b33:	lea    rcx,[rsp+0x50]
   140016b38:	call   QWORD PTR [rip+0x1468a]        # 0x14002b1c8
   140016b3e:	lea    rcx,[rsp+0x110]
   140016b46:	call   0x140011fb0
   140016b4b:	lea    rcx,[rsp+0xf8]
   140016b53:	call   QWORD PTR [rip+0x1466f]        # 0x14002b1c8
   140016b59:	lea    rcx,[rsp+0x68]
   140016b5e:	call   0x140011fb0
   140016b63:	mov    rcx,QWORD PTR [rsp+0x60]
   140016b68:	mov    eax,DWORD PTR [rcx+0x10]
   140016b6b:	test   eax,eax
   140016b6d:	je     0x140016b8a
   140016b6f:	cmp    eax,0xffffffff
   140016b72:	je     0x140016b97
   140016b74:	lock xadd DWORD PTR [rcx+0x10],r14d
   140016b7a:	add    r14d,0xffffffff
   140016b7e:	setne  al
   140016b81:	test   al,al
   140016b83:	jne    0x140016b97
   140016b85:	mov    rcx,QWORD PTR [rsp+0x60]
   140016b8a:	lea    rdx,[rip+0xffffffffffffb2ef]        # 0x140011e80
   140016b91:	call   QWORD PTR [rip+0x14cd1]        # 0x14002b868
   140016b97:	lea    rcx,[rsp+0xf0]
   140016b9f:	call   QWORD PTR [rip+0x14623]        # 0x14002b1c8
   140016ba5:	lea    rcx,[rsp+0x40]
   140016baa:	call   QWORD PTR [rip+0x14618]        # 0x14002b1c8
   140016bb0:	lea    rcx,[rsp+0x80]
   140016bb8:	call   0x140012d50
   140016bbd:	lea    rcx,[rsp+0x38]
   140016bc2:	call   0x140011fb0
   140016bc7:	xor    al,al
   140016bc9:	jmp    0x140017db4
   140016bce:	lea    rdx,[rip+0x16c83]        # 0x14002d858
   140016bd5:	lea    rcx,[rsp+0x50]
   140016bda:	call   QWORD PTR [rip+0x149e8]        # 0x14002b5c8
   140016be0:	test   eax,eax
   140016be2:	je     0x140016c3e
   140016be4:	lea    rdx,[rsp+0x50]
   140016be9:	lea    rcx,[rsp+0x498]
   140016bf1:	call   QWORD PTR [rip+0x14af9]        # 0x14002b6f0
   140016bf7:	lea    rcx,[rsp+0x518]
   140016bff:	mov    rdx,rax
   140016c02:	call   0x140011eb0
   140016c07:	lea    rcx,[rsp+0x60]
   140016c0c:	mov    rdx,rax
   140016c0f:	call   0x140013060
   140016c14:	lea    rdx,[rsp+0x58]
   140016c19:	mov    rcx,rax
   140016c1c:	call   QWORD PTR [rip+0x1463e]        # 0x14002b260
   140016c22:	lea    rcx,[rsp+0x518]
   140016c2a:	call   QWORD PTR [rip+0x14c68]        # 0x14002b898
   140016c30:	lea    rcx,[rsp+0x498]
   140016c38:	call   QWORD PTR [rip+0x14c5a]        # 0x14002b898
   140016c3e:	lea    rcx,[rsp+0x58]
   140016c43:	call   QWORD PTR [rip+0x1457f]        # 0x14002b1c8
   140016c49:	lea    rcx,[rsp+0x50]
   140016c4e:	call   QWORD PTR [rip+0x14574]        # 0x14002b1c8
   140016c54:	dec    DWORD PTR [rsp+0x118]
   140016c5b:	test   r12b,0x8
   140016c5f:	je     0x1400165e0
   140016c65:	mov    rbx,QWORD PTR [rsp+0x528]
   140016c6d:	and    r12d,0xfffffff7
   140016c71:	mov    eax,DWORD PTR [rbx]
   140016c73:	test   eax,eax
   140016c75:	je     0x140016c95
   140016c77:	cmp    eax,0xffffffff
   140016c7a:	je     0x1400165e0
   140016c80:	mov    eax,r14d
   140016c83:	lock xadd DWORD PTR [rbx],eax
   140016c87:	add    eax,0xffffffff
   140016c8a:	setne  al
   140016c8d:	test   al,al
   140016c8f:	jne    0x1400165e0
   140016c95:	mov    rbx,QWORD PTR [rsp+0x528]
   140016c9d:	movsxd rax,DWORD PTR [rbx+0xc]
   140016ca1:	lea    rdi,[rbx+rax*8+0x10]
   140016ca6:	movsxd rax,DWORD PTR [rbx+0x8]
   140016caa:	lea    rsi,[rbx+rax*8+0x10]
   140016caf:	cmp    rsi,rdi
   140016cb2:	je     0x1400165d2
   140016cb8:	nop    DWORD PTR [rax+rax*1+0x0]
   140016cc0:	sub    rdi,0x8
   140016cc4:	mov    rcx,rdi
   140016cc7:	call   QWORD PTR [rip+0x144fb]        # 0x14002b1c8
   140016ccd:	cmp    rdi,rsi
   140016cd0:	jne    0x140016cc0
   140016cd2:	jmp    0x1400165d2
   140016cd7:	lea    rcx,[rsp+0x1cc]
   140016cdf:	mov    dl,0x20
   140016ce1:	call   QWORD PTR [rip+0x14be1]        # 0x14002b8c8
   140016ce7:	lea    rcx,[rsp+0x4b8]
   140016cef:	mov    rdx,r13
   140016cf2:	mov    rbx,rax
   140016cf5:	call   QWORD PTR [rip+0x149f5]        # 0x14002b6f0
   140016cfb:	lea    rdx,[rip+0x16b2e]        # 0x14002d830
   140016d02:	lea    rcx,[rsp+0x538]
   140016d0a:	mov    r8d,r14d
   140016d0d:	mov    rdi,rax
   140016d10:	call   QWORD PTR [rip+0x1456a]        # 0x14002b280
   140016d16:	movzx  edx,WORD PTR [rbx]
   140016d19:	xor    r9d,r9d
   140016d1c:	mov    WORD PTR [rsp+0x20],dx
   140016d21:	lea    rdx,[rsp+0x4a8]
   140016d29:	mov    rcx,rax
   140016d2c:	mov    r8,rdi
   140016d2f:	call   QWORD PTR [rip+0x144b3]        # 0x14002b1e8
   140016d35:	mov    rcx,QWORD PTR [rsp+0xab0]
   140016d3d:	add    rcx,0x60
   140016d41:	mov    rdx,rax
   140016d44:	call   0x140001e20
   140016d49:	lea    rcx,[rsp+0x4a8]
   140016d51:	call   QWORD PTR [rip+0x14b41]        # 0x14002b898
   140016d57:	lea    rcx,[rsp+0x538]
   140016d5f:	call   QWORD PTR [rip+0x14b33]        # 0x14002b898
   140016d65:	lea    rcx,[rsp+0x4b8]
   140016d6d:	call   QWORD PTR [rip+0x14b25]        # 0x14002b898
   140016d73:	mov    BYTE PTR [rsp+0xaa8],0x1
   140016d7b:	add    QWORD PTR [rsp+0x120],0x8
   140016d84:	test   r12b,0x1
   140016d88:	je     0x1400164c0
   140016d8e:	mov    rbx,QWORD PTR [rsp+0x548]
   140016d96:	and    r12d,0xfffffffe
   140016d9a:	mov    eax,DWORD PTR [rbx]
   140016d9c:	test   eax,eax
   140016d9e:	je     0x140016dc6
   140016da0:	cmp    eax,0xffffffff
   140016da3:	je     0x1400164c0
   140016da9:	mov    eax,r14d
   140016dac:	lock xadd DWORD PTR [rbx],eax
   140016db0:	add    eax,0xffffffff
   140016db3:	setne  al
   140016db6:	test   al,al
   140016db8:	jne    0x1400164c0
   140016dbe:	mov    rbx,QWORD PTR [rsp+0x548]
   140016dc6:	movsxd rax,DWORD PTR [rbx+0xc]
   140016dca:	lea    rdi,[rbx+rax*8+0x10]
   140016dcf:	movsxd rax,DWORD PTR [rbx+0x8]
   140016dd3:	lea    rsi,[rbx+rax*8+0x10]
   140016dd8:	cmp    rsi,rdi
   140016ddb:	je     0x1400164b2
   140016de1:	sub    rdi,0x8
   140016de5:	mov    rcx,rdi
   140016de8:	call   QWORD PTR [rip+0x143da]        # 0x14002b1c8
   140016dee:	cmp    rdi,rsi
   140016df1:	jne    0x140016de1
   140016df3:	jmp    0x1400164b2
   140016df8:	lea    rcx,[rsp+0x110]
   140016e00:	call   0x140011fb0
   140016e05:	mov    rdx,QWORD PTR [rsp+0xf8]
   140016e0d:	mov    r13,QWORD PTR [rsp+0xaa0]
   140016e15:	cmp    DWORD PTR [rdx+0x4],0x0
   140016e19:	je     0x140016ef4
   140016e1f:	lea    rdx,[r13+0x10]
   140016e23:	lea    rcx,[rsp+0x210]
   140016e2b:	call   QWORD PTR [rip+0x14a6f]        # 0x14002b8a0
   140016e31:	mov    rdx,QWORD PTR [rsp+0x210]
   140016e39:	lea    rcx,[rsp+0x210]
   140016e41:	cmp    DWORD PTR [rdx+0x4],0x0
   140016e45:	sete   dil
   140016e49:	call   QWORD PTR [rip+0x14a49]        # 0x14002b898
   140016e4f:	test   dil,dil
   140016e52:	je     0x140016ef4
   140016e58:	lea    rdx,[rip+0x16ae1]        # 0x14002d940
   140016e5f:	xor    eax,eax
   140016e61:	mov    rcx,r14
   140016e64:	mov    rdi,rdx
   140016e67:	mov    QWORD PTR [rsp+0x638],rdx
   140016e6f:	lea    rdx,[rsp+0x860]
   140016e77:	repnz scas al,BYTE PTR es:[rdi]
   140016e79:	not    rcx
   140016e7c:	dec    rcx
   140016e7f:	mov    DWORD PTR [rsp+0x630],ecx
   140016e86:	lea    rcx,[rsp+0x220]
   140016e8e:	movaps xmm0,XMMWORD PTR [rsp+0x630]
   140016e96:	movdqa XMMWORD PTR [rsp+0x860],xmm0
   140016e9f:	call   QWORD PTR [rip+0x149bb]        # 0x14002b860
   140016ea5:	lea    rdx,[rsp+0x220]
   140016ead:	lea    rcx,[rsp+0x368]
   140016eb5:	call   0x140011eb0
   140016eba:	lea    rcx,[rsp+0x60]
   140016ebf:	mov    rdx,rax
   140016ec2:	call   0x140013060
   140016ec7:	lea    rdx,[rsp+0xf8]
   140016ecf:	mov    rcx,rax
   140016ed2:	call   QWORD PTR [rip+0x14388]        # 0x14002b260
   140016ed8:	lea    rcx,[rsp+0x368]
   140016ee0:	call   QWORD PTR [rip+0x149b2]        # 0x14002b898
   140016ee6:	lea    rcx,[rsp+0x220]
   140016eee:	call   QWORD PTR [rip+0x149a4]        # 0x14002b898
   140016ef4:	mov    rax,QWORD PTR [rsp+0x68]
   140016ef9:	xor    ebx,ebx
   140016efb:	xor    ebp,ebp
   140016efd:	mov    ecx,DWORD PTR [rax+0xc]
   140016f00:	xor    esi,esi
   140016f02:	sub    ecx,DWORD PTR [rax+0x8]
   140016f05:	test   ecx,ecx
   140016f07:	jle    0x140017006
   140016f0d:	lea    rdi,[rip+0x168e4]        # 0x14002d7f8
   140016f14:	cmp    ebx,0x7
   140016f17:	je     0x140016f67
   140016f19:	movsxd rcx,DWORD PTR [rax+0x8]
   140016f1d:	mov    rdx,QWORD PTR [rdi]
   140016f20:	add    rcx,rsi
   140016f23:	lea    rcx,[rax+rcx*8+0x10]
   140016f28:	test   rdx,rdx
   140016f2b:	je     0x140016f3e
   140016f2d:	call   QWORD PTR [rip+0x14695]        # 0x14002b5c8
   140016f33:	xor    edx,edx
   140016f35:	test   eax,eax
   140016f37:	mov    rax,QWORD PTR [rsp+0x68]
   140016f3c:	jmp    0x140016f46
   140016f3e:	mov    rcx,QWORD PTR [rcx]
   140016f41:	xor    edx,edx
   140016f43:	cmp    DWORD PTR [rcx+0x4],edx
   140016f46:	sete   dl
   140016f49:	inc    ebx
   140016f4b:	add    rdi,0x8
   140016f4f:	test   dl,dl
   140016f51:	je     0x140016f14
   140016f53:	mov    ecx,DWORD PTR [rax+0xc]
   140016f56:	inc    ebp
   140016f58:	inc    rsi
   140016f5b:	sub    ecx,DWORD PTR [rax+0x8]
   140016f5e:	cmp    ebp,ecx
   140016f60:	jl     0x140016f14
   140016f62:	jmp    0x140017006
   140016f67:	lea    rdx,[rip+0x1687a]        # 0x14002d7e8
   140016f6e:	xor    eax,eax
   140016f70:	mov    rcx,r14
   140016f73:	mov    rdi,rdx
   140016f76:	mov    QWORD PTR [rsp+0x658],rdx
   140016f7e:	lea    rdx,[rsp+0x880]
   140016f86:	repnz scas al,BYTE PTR es:[rdi]
   140016f88:	not    rcx
   140016f8b:	dec    rcx
   140016f8e:	mov    DWORD PTR [rsp+0x650],ecx
   140016f95:	lea    rcx,[rsp+0x230]
   140016f9d:	movaps xmm0,XMMWORD PTR [rsp+0x650]
   140016fa5:	movdqa XMMWORD PTR [rsp+0x880],xmm0
   140016fae:	call   QWORD PTR [rip+0x148ac]        # 0x14002b860
   140016fb4:	lea    rdx,[rsp+0x68]
   140016fb9:	lea    rcx,[rsp+0x370]
   140016fc1:	mov    r8b,0x2c
   140016fc4:	call   0x140011be0
   140016fc9:	lea    rdx,[rsp+0x230]
   140016fd1:	lea    rcx,[rsp+0x60]
   140016fd6:	mov    rdi,rax
   140016fd9:	call   0x140013060
   140016fde:	mov    rdx,rdi
   140016fe1:	mov    rcx,rax
   140016fe4:	call   QWORD PTR [rip+0x14276]        # 0x14002b260
   140016fea:	lea    rcx,[rsp+0x370]
   140016ff2:	call   QWORD PTR [rip+0x141d0]        # 0x14002b1c8
   140016ff8:	lea    rcx,[rsp+0x230]
   140017000:	call   QWORD PTR [rip+0x14892]        # 0x14002b898
   140017006:	mov    ebx,DWORD PTR [rsp+0x108]
   14001700d:	cmp    ebx,0xffffffff
   140017010:	je     0x14001712a
   140017016:	lea    rdx,[rip+0x167b3]        # 0x14002d7d0
   14001701d:	xor    eax,eax
   14001701f:	mov    rcx,r14
   140017022:	mov    rdi,rdx
   140017025:	mov    QWORD PTR [rsp+0x678],rdx
   14001702d:	lea    rdx,[rsp+0x8a0]
   140017035:	repnz scas al,BYTE PTR es:[rdi]
   140017037:	not    rcx
   14001703a:	dec    rcx
   14001703d:	mov    DWORD PTR [rsp+0x670],ecx
   140017044:	lea    rcx,[rsp+0x250]
   14001704c:	movaps xmm0,XMMWORD PTR [rsp+0x670]
   140017054:	movdqa XMMWORD PTR [rsp+0x8a0],xmm0
   14001705d:	call   QWORD PTR [rip+0x147fd]        # 0x14002b860
   140017063:	lea    r9d,[rbx+0x1]
   140017067:	lea    rdx,[rsp+0x240]
   14001706f:	lea    rcx,[rsp+0x38]
   140017074:	xor    r8d,r8d
   140017077:	call   0x140012e60
   14001707c:	lea    rcx,[rsp+0x380]
   140017084:	mov    r8b,0xa
   140017087:	mov    rdx,rax
   14001708a:	call   0x140011be0
   14001708f:	lea    rdx,[rsp+0x250]
   140017097:	lea    rcx,[rsp+0x60]
   14001709c:	mov    rdi,rax
   14001709f:	call   0x140013060
   1400170a4:	mov    rdx,rdi
   1400170a7:	mov    rcx,rax
   1400170aa:	call   QWORD PTR [rip+0x141b0]        # 0x14002b260
   1400170b0:	lea    rcx,[rsp+0x380]
   1400170b8:	call   QWORD PTR [rip+0x1410a]        # 0x14002b1c8
   1400170be:	mov    rbx,QWORD PTR [rsp+0x240]
   1400170c6:	mov    eax,DWORD PTR [rbx]
   1400170c8:	test   eax,eax
   1400170ca:	je     0x1400170ea
   1400170cc:	cmp    eax,0xffffffff
   1400170cf:	je     0x14001711c
   1400170d1:	mov    eax,r14d
   1400170d4:	lock xadd DWORD PTR [rbx],eax
   1400170d8:	add    eax,0xffffffff
   1400170db:	setne  al
   1400170de:	test   al,al
   1400170e0:	jne    0x14001711c
   1400170e2:	mov    rbx,QWORD PTR [rsp+0x240]
   1400170ea:	movsxd rax,DWORD PTR [rbx+0xc]
   1400170ee:	lea    rdi,[rbx+rax*8+0x10]
   1400170f3:	movsxd rax,DWORD PTR [rbx+0x8]
   1400170f7:	lea    rsi,[rbx+rax*8+0x10]
   1400170fc:	cmp    rsi,rdi
   1400170ff:	je     0x140017113
   140017101:	sub    rdi,0x8
   140017105:	mov    rcx,rdi
   140017108:	call   QWORD PTR [rip+0x140ba]        # 0x14002b1c8
   14001710e:	cmp    rdi,rsi
   140017111:	jne    0x140017101
   140017113:	mov    rcx,rbx
   140017116:	call   QWORD PTR [rip+0x14754]        # 0x14002b870
   14001711c:	lea    rcx,[rsp+0x250]
   140017124:	call   QWORD PTR [rip+0x1476e]        # 0x14002b898
   14001712a:	mov    rcx,QWORD PTR [rsp+0x60]
   14001712f:	call   QWORD PTR [rip+0x14263]        # 0x14002b398
   140017135:	mov    rbx,QWORD PTR [rsp+0x60]
   14001713a:	mov    rdi,rax
   14001713d:	cmp    rax,rbx
   140017140:	je     0x140017193
   140017142:	data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140017150:	lea    r8,[rdi+0x18]
   140017154:	lea    rdx,[rsp+0x390]
   14001715c:	mov    rcx,r15
   14001715f:	call   QWORD PTR [rip+0x14573]        # 0x14002b6d8
   140017165:	lea    rdx,[rdi+0x10]
   140017169:	mov    rcx,r13
   14001716c:	mov    r8,rax
   14001716f:	call   0x1400084a0
   140017174:	lea    rcx,[rsp+0x390]
   14001717c:	call   QWORD PTR [rip+0x14716]        # 0x14002b898
   140017182:	mov    rcx,rdi
   140017185:	call   QWORD PTR [rip+0x14135]        # 0x14002b2c0
   14001718b:	mov    rdi,rax
   14001718e:	cmp    rax,rbx
   140017191:	jne    0x140017150
   140017193:	lea    rcx,[rsp+0x970]
   14001719b:	call   0x140012640
   1400171a0:	lea    rcx,[rsp+0x80]
   1400171a8:	mov    rdx,rax
   1400171ab:	call   0x1400136b0
   1400171b0:	lea    rcx,[rsp+0x970]
   1400171b8:	call   0x140012d50
   1400171bd:	lea    rcx,[rsp+0xf8]
   1400171c5:	call   QWORD PTR [rip+0x13ffd]        # 0x14002b1c8
   1400171cb:	mov    rbx,QWORD PTR [rsp+0x68]
   1400171d0:	mov    eax,DWORD PTR [rbx]
   1400171d2:	test   eax,eax
   1400171d4:	je     0x1400171f1
   1400171d6:	cmp    eax,0xffffffff
   1400171d9:	je     0x14001722b
   1400171db:	mov    eax,r14d
   1400171de:	lock xadd DWORD PTR [rbx],eax
   1400171e2:	add    eax,0xffffffff
   1400171e5:	setne  al
   1400171e8:	test   al,al
   1400171ea:	jne    0x14001722b
   1400171ec:	mov    rbx,QWORD PTR [rsp+0x68]
   1400171f1:	movsxd rax,DWORD PTR [rbx+0xc]
   1400171f5:	lea    rdi,[rbx+rax*8+0x10]
   1400171fa:	movsxd rax,DWORD PTR [rbx+0x8]
   1400171fe:	lea    rsi,[rbx+rax*8+0x10]
   140017203:	cmp    rsi,rdi
   140017206:	je     0x140017222
   140017208:	nop    DWORD PTR [rax+rax*1+0x0]
   140017210:	sub    rdi,0x8
   140017214:	mov    rcx,rdi
   140017217:	call   QWORD PTR [rip+0x13fab]        # 0x14002b1c8
   14001721d:	cmp    rdi,rsi
   140017220:	jne    0x140017210
   140017222:	mov    rcx,rbx
   140017225:	call   QWORD PTR [rip+0x14645]        # 0x14002b870
   14001722b:	mov    rcx,QWORD PTR [rsp+0x60]
   140017230:	mov    eax,DWORD PTR [rcx+0x10]
   140017233:	test   eax,eax
   140017235:	je     0x140017253
   140017237:	cmp    eax,0xffffffff
   14001723a:	je     0x140017260
   14001723c:	mov    eax,r14d
   14001723f:	lock xadd DWORD PTR [rcx+0x10],eax
   140017244:	add    eax,0xffffffff
   140017247:	setne  al
   14001724a:	test   al,al
   14001724c:	jne    0x140017260
   14001724e:	mov    rcx,QWORD PTR [rsp+0x60]
   140017253:	lea    rdx,[rip+0xffffffffffffac26]        # 0x140011e80
   14001725a:	call   QWORD PTR [rip+0x14608]        # 0x14002b868
   140017260:	lea    rcx,[rsp+0xf0]
   140017268:	call   QWORD PTR [rip+0x13f5a]        # 0x14002b1c8
   14001726e:	lea    rcx,[rsp+0x40]
   140017273:	call   QWORD PTR [rip+0x13f4f]        # 0x14002b1c8
   140017279:	mov    rsi,QWORD PTR [rsp+0xab0]
   140017281:	mov    bpl,BYTE PTR [rsp+0xaa8]
   140017289:	jmp    0x140017d22
   14001728e:	lea    rcx,[rsp+0x590]
   140017296:	call   0x14000b4f0
   14001729b:	lea    r8,[rsp+0x88]
   1400172a3:	lea    rdx,[rsp+0x3a0]
   1400172ab:	mov    rcx,r15
   1400172ae:	call   QWORD PTR [rip+0x14424]        # 0x14002b6d8
   1400172b4:	lea    rcx,[rsp+0x598]
   1400172bc:	mov    rdx,rax
   1400172bf:	call   QWORD PTR [rip+0x145eb]        # 0x14002b8b0
   1400172c5:	lea    rcx,[rsp+0x3a0]
   1400172cd:	call   QWORD PTR [rip+0x145c5]        # 0x14002b898
   1400172d3:	mov    rdx,QWORD PTR [rsp+0xb0]
   1400172db:	cmp    DWORD PTR [rdx+0x4],0x0
   1400172df:	je     0x14001782d
   1400172e5:	lea    rcx,[rsp+0x78]
   1400172ea:	call   QWORD PTR [rip+0x145a0]        # 0x14002b890
   1400172f0:	lea    rdx,[rip+0x164d1]        # 0x14002d7c8
   1400172f7:	xor    eax,eax
   1400172f9:	mov    rdi,rdx
   1400172fc:	mov    QWORD PTR [rsp+0x698],rdx
   140017304:	mov    rcx,r14
   140017307:	repnz scas al,BYTE PTR es:[rdi]
   140017309:	lea    rdx,[rsp+0x8c0]
   140017311:	not    rcx
   140017314:	dec    rcx
   140017317:	mov    DWORD PTR [rsp+0x690],ecx
   14001731e:	lea    rcx,[rsp+0x260]
   140017326:	movaps xmm0,XMMWORD PTR [rsp+0x690]
   14001732e:	movdqa XMMWORD PTR [rsp+0x8c0],xmm0
   140017337:	call   QWORD PTR [rip+0x14523]        # 0x14002b860
   14001733d:	mov    r13d,0x1
   140017343:	lea    rdx,[rsp+0x260]
   14001734b:	lea    rcx,[rsp+0x3d0]
   140017353:	mov    r8d,r13d
   140017356:	xor    r9d,r9d
   140017359:	call   QWORD PTR [rip+0x14011]        # 0x14002b370
   14001735f:	lea    r8,[rsp+0xb0]
   140017367:	lea    rdx,[rsp+0x3c0]
   14001736f:	mov    rcx,r15
   140017372:	mov    rdi,rax
   140017375:	call   QWORD PTR [rip+0x1435d]        # 0x14002b6d8
   14001737b:	lea    rdx,[rsp+0x3b0]
   140017383:	mov    r9d,r13d
   140017386:	mov    rcx,rax
   140017389:	mov    r8,rdi
   14001738c:	call   QWORD PTR [rip+0x14356]        # 0x14002b6e8
   140017392:	lea    rcx,[rsp+0x140]
   14001739a:	mov    rdx,rax
   14001739d:	call   0x140001700
   1400173a2:	mov    rdx,QWORD PTR [rsp+0x140]
   1400173aa:	mov    DWORD PTR [rsp+0x148],0x0
   1400173b5:	movsxd rax,DWORD PTR [rdx+0x8]
   1400173b9:	lea    rcx,[rdx+rax*8+0x10]
   1400173be:	mov    QWORD PTR [rsp+0x150],rcx
   1400173c6:	movsxd rax,DWORD PTR [rdx+0xc]
   1400173ca:	lea    rcx,[rdx+rax*8+0x10]
   1400173cf:	mov    QWORD PTR [rsp+0x158],rcx
   1400173d7:	lea    rcx,[rsp+0x3b0]
   1400173df:	call   0x1400017b0
   1400173e4:	lea    rcx,[rsp+0x3c0]
   1400173ec:	call   QWORD PTR [rip+0x144a6]        # 0x14002b898
   1400173f2:	lea    rcx,[rsp+0x3d0]
   1400173fa:	call   QWORD PTR [rip+0x13fa0]        # 0x14002b3a0
   140017400:	lea    rcx,[rsp+0x260]
   140017408:	call   QWORD PTR [rip+0x1448a]        # 0x14002b898
   14001740e:	xchg   ax,ax
   140017410:	mov    eax,DWORD PTR [rsp+0x148]
   140017417:	inc    DWORD PTR [rsp+0x148]
   14001741e:	test   eax,eax
   140017420:	jne    0x14001743a
   140017422:	mov    rax,QWORD PTR [rsp+0x158]
   14001742a:	cmp    QWORD PTR [rsp+0x150],rax
   140017432:	je     0x14001743a
   140017434:	movzx  edi,r13b
   140017438:	jmp    0x14001743d
   14001743a:	xor    dil,dil
   14001743d:	bt     r12d,0xc
   140017442:	jae    0x140017456
   140017444:	lea    rcx,[rsp+0x740]
   14001744c:	btr    r12d,0xc
   140017451:	call   0x1400017b0
   140017456:	bt     r12d,0xb
   14001745b:	jae    0x140017470
   14001745d:	lea    rcx,[rsp+0x8f8]
   140017465:	btr    r12d,0xb
   14001746a:	call   QWORD PTR [rip+0x14428]        # 0x14002b898
   140017470:	bt     r12d,0xa
   140017475:	jae    0x14001748a
   140017477:	lea    rcx,[rsp+0x910]
   14001747f:	btr    r12d,0xa
   140017484:	call   QWORD PTR [rip+0x13f16]        # 0x14002b3a0
   14001748a:	bt     r12d,0x9
   14001748f:	jae    0x1400174a4
   140017491:	lea    rcx,[rsp+0x920]
   140017499:	btr    r12d,0x9
   14001749e:	call   QWORD PTR [rip+0x143f4]        # 0x14002b898
   1400174a4:	test   dil,dil
   1400174a7:	je     0x140017778
   1400174ad:	bt     r12d,0x10
   1400174b2:	mov    rsi,QWORD PTR [rsp+0x150]
   1400174ba:	jae    0x1400174ce
   1400174bc:	lea    rcx,[rsp+0x930]
   1400174c4:	btr    r12d,0x10
   1400174c9:	call   0x1400017b0
   1400174ce:	bt     r12d,0xf
   1400174d3:	jae    0x1400174e8
   1400174d5:	lea    rcx,[rsp+0x958]
   1400174dd:	btr    r12d,0xf
   1400174e2:	call   QWORD PTR [rip+0x143b0]        # 0x14002b898
   1400174e8:	bt     r12d,0xe
   1400174ed:	jae    0x140017502
   1400174ef:	lea    rcx,[rsp+0x890]
   1400174f7:	btr    r12d,0xe
   1400174fc:	call   QWORD PTR [rip+0x13e9e]        # 0x14002b3a0
   140017502:	bt     r12d,0xd
   140017507:	jae    0x140017520
   140017509:	btr    r12d,0xd
   14001750e:	lea    rcx,[rsp+0x770]
   140017516:	call   QWORD PTR [rip+0x1437c]        # 0x14002b898
   14001751c:	nop    DWORD PTR [rax+0x0]
   140017520:	bt     r12d,0x18
   140017525:	mov    edi,DWORD PTR [rsp+0x148]
   14001752c:	jae    0x140017540
   14001752e:	lea    rcx,[rsp+0x918]
   140017536:	btr    r12d,0x18
   14001753b:	call   0x1400017b0
   140017540:	bt     r12d,0x17
   140017545:	jae    0x14001755a
   140017547:	lea    rcx,[rsp+0x790]
   14001754f:	btr    r12d,0x17
   140017554:	call   QWORD PTR [rip+0x1433e]        # 0x14002b898
   14001755a:	bt     r12d,0x16
   14001755f:	jae    0x140017574
   140017561:	lea    rcx,[rsp+0x8b0]
   140017569:	btr    r12d,0x16
   14001756e:	call   QWORD PTR [rip+0x13e2c]        # 0x14002b3a0
   140017574:	bt     r12d,0x15
   140017579:	jae    0x14001758e
   14001757b:	lea    rcx,[rsp+0x7b0]
   140017583:	btr    r12d,0x15
   140017588:	call   QWORD PTR [rip+0x1430a]        # 0x14002b898
   14001758e:	test   edi,edi
   140017590:	je     0x14001770b
   140017596:	lea    rcx,[rsp+0x198]
   14001759e:	mov    dl,0x3a
   1400175a0:	call   QWORD PTR [rip+0x14322]        # 0x14002b8c8
   1400175a6:	mov    r9d,r13d
   1400175a9:	xor    r8d,r8d
   1400175ac:	movzx  edx,WORD PTR [rax]
   1400175af:	mov    rcx,rsi
   1400175b2:	call   QWORD PTR [rip+0x140b8]        # 0x14002b670
   1400175b8:	lea    rcx,[rsp+0x1c8]
   1400175c0:	mov    dl,0x3a
   1400175c2:	mov    edi,eax
   1400175c4:	call   QWORD PTR [rip+0x142fe]        # 0x14002b8c8
   1400175ca:	mov    r9d,r13d
   1400175cd:	movzx  edx,WORD PTR [rax]
   1400175d0:	mov    r8d,r14d
   1400175d3:	mov    rcx,rsi
   1400175d6:	call   QWORD PTR [rip+0x1409c]        # 0x14002b678
   1400175dc:	cmp    edi,0xffffffff
   1400175df:	je     0x14001765f
   1400175e1:	cmp    edi,eax
   1400175e3:	jne    0x14001765f
   1400175e5:	lea    r8d,[rdi+0x1]
   1400175e9:	lea    rdx,[rsp+0x3e0]
   1400175f1:	mov    r9d,r14d
   1400175f4:	mov    rcx,rsi
   1400175f7:	call   QWORD PTR [rip+0x13d5b]        # 0x14002b358
   1400175fd:	lea    rdx,[rsp+0x48]
   140017602:	mov    r8d,0xa
   140017608:	mov    rcx,rax
   14001760b:	call   QWORD PTR [rip+0x1409f]        # 0x14002b6b0
   140017611:	lea    rcx,[rsp+0x3e0]
   140017619:	mov    ebx,eax
   14001761b:	call   QWORD PTR [rip+0x14277]        # 0x14002b898
   140017621:	cmp    BYTE PTR [rsp+0x48],0x0
   140017626:	je     0x14001765f
   140017628:	lea    rdx,[rsp+0x3f0]
   140017630:	mov    r8d,edi
   140017633:	mov    rcx,rsi
   140017636:	call   QWORD PTR [rip+0x13c94]        # 0x14002b2d0
   14001763c:	lea    rcx,[rsp+0x590]
   140017644:	mov    r8d,ebx
   140017647:	mov    rdx,rax
   14001764a:	call   0x14000b690
   14001764f:	lea    rcx,[rsp+0x3f0]
   140017657:	call   QWORD PTR [rip+0x1423b]        # 0x14002b898
   14001765d:	jmp    0x14001769a
   14001765f:	lea    rcx,[rsp+0x78]
   140017664:	call   QWORD PTR [rip+0x13b8e]        # 0x14002b1f8
   14001766a:	test   al,al
   14001766c:	jne    0x14001768c
   14001766e:	lea    rcx,[rsp+0x168]
   140017676:	mov    dl,0x20
   140017678:	call   QWORD PTR [rip+0x1424a]        # 0x14002b8c8
   14001767e:	lea    rcx,[rsp+0x78]
   140017683:	movzx  edx,WORD PTR [rax]
   140017686:	call   QWORD PTR [rip+0x13ec4]        # 0x14002b550
   14001768c:	lea    rcx,[rsp+0x78]
   140017691:	mov    rdx,rsi
   140017694:	call   QWORD PTR [rip+0x1400e]        # 0x14002b6a8
   14001769a:	dec    DWORD PTR [rsp+0x148]
   1400176a1:	bt     r12d,0x14
   1400176a6:	jae    0x1400176ba
   1400176a8:	lea    rcx,[rsp+0x950]
   1400176b0:	btr    r12d,0x14
   1400176b5:	call   0x1400017b0
   1400176ba:	bt     r12d,0x13
   1400176bf:	jae    0x1400176d4
   1400176c1:	lea    rcx,[rsp+0x7d0]
   1400176c9:	btr    r12d,0x13
   1400176ce:	call   QWORD PTR [rip+0x141c4]        # 0x14002b898
   1400176d4:	bt     r12d,0x12
   1400176d9:	jae    0x1400176ee
   1400176db:	lea    rcx,[rsp+0x8d0]
   1400176e3:	btr    r12d,0x12
   1400176e8:	call   QWORD PTR [rip+0x13cb2]        # 0x14002b3a0
   1400176ee:	bt     r12d,0x11
   1400176f3:	jae    0x140017520
   1400176f9:	btr    r12d,0x11
   1400176fe:	lea    rcx,[rsp+0x7f0]
   140017706:	jmp    0x140017516
   14001770b:	add    QWORD PTR [rsp+0x150],0x8
   140017714:	bt     r12d,0x8
   140017719:	jae    0x14001772d
   14001771b:	lea    rcx,[rsp+0x928]
   140017723:	btr    r12d,0x8
   140017728:	call   0x1400017b0
   14001772d:	test   r12b,r12b
   140017730:	jns    0x140017745
   140017732:	lea    rcx,[rsp+0x810]
   14001773a:	btr    r12d,0x7
   14001773f:	call   QWORD PTR [rip+0x14153]        # 0x14002b898
   140017745:	test   r12b,0x40
   140017749:	je     0x14001775d
   14001774b:	lea    rcx,[rsp+0x8f0]
   140017753:	and    r12d,0xffffffbf
   140017757:	call   QWORD PTR [rip+0x13c43]        # 0x14002b3a0
   14001775d:	test   r12b,0x20
   140017761:	je     0x140017410
   140017767:	and    r12d,0xffffffdf
   14001776b:	lea    rcx,[rsp+0x830]
   140017773:	jmp    0x140017408
   140017778:	lea    rcx,[rsp+0x140]
   140017780:	call   0x1400017b0
   140017785:	lea    rcx,[rsp+0x78]
   14001778a:	call   QWORD PTR [rip+0x13a68]        # 0x14002b1f8
   140017790:	mov    r13,QWORD PTR [rsp+0xaa0]
   140017798:	test   al,al
   14001779a:	jne    0x14001781a
   14001779c:	lea    rdx,[rip+0x16015]        # 0x14002d7b8
   1400177a3:	xor    eax,eax
   1400177a5:	mov    rcx,r14
   1400177a8:	mov    rdi,rdx
   1400177ab:	mov    QWORD PTR [rsp+0x6b8],rdx
   1400177b3:	lea    rdx,[rsp+0x8e0]
   1400177bb:	repnz scas al,BYTE PTR es:[rdi]
   1400177bd:	not    rcx
   1400177c0:	dec    rcx
   1400177c3:	mov    DWORD PTR [rsp+0x6b0],ecx
   1400177ca:	lea    rcx,[rsp+0x270]
   1400177d2:	movaps xmm0,XMMWORD PTR [rsp+0x6b0]
   1400177da:	movdqa XMMWORD PTR [rsp+0x8e0],xmm0
   1400177e3:	call   QWORD PTR [rip+0x14077]        # 0x14002b860
   1400177e9:	lea    rdx,[rsp+0x270]
   1400177f1:	lea    rcx,[rsp+0xe8]
   1400177f9:	call   0x140005ee0
   1400177fe:	lea    rdx,[rsp+0x78]
   140017803:	mov    rcx,rax
   140017806:	call   QWORD PTR [rip+0x140a4]        # 0x14002b8b0
   14001780c:	lea    rcx,[rsp+0x270]
   140017814:	call   QWORD PTR [rip+0x1407e]        # 0x14002b898
   14001781a:	lea    rcx,[rsp+0x78]
   14001781f:	call   QWORD PTR [rip+0x14073]        # 0x14002b898
   140017825:	mov    rsi,QWORD PTR [rsp+0xab0]
   14001782d:	lea    r8,[rsp+0x80]
   140017835:	lea    rdx,[rsp+0x400]
   14001783d:	mov    rcx,r15
   140017840:	call   QWORD PTR [rip+0x13e92]        # 0x14002b6d8
   140017846:	lea    rcx,[rsp+0x590]
   14001784e:	mov    rdx,rax
   140017851:	call   QWORD PTR [rip+0x14059]        # 0x14002b8b0
   140017857:	lea    rcx,[rsp+0x400]
   14001785f:	call   QWORD PTR [rip+0x14033]        # 0x14002b898
   140017865:	lea    r8,[rsp+0xc8]
   14001786d:	lea    rdx,[rsp+0x410]
   140017875:	mov    rcx,r15
   140017878:	call   QWORD PTR [rip+0x13e5a]        # 0x14002b6d8
   14001787e:	lea    rcx,[rsp+0x5a0]
   140017886:	mov    rdx,rax
   140017889:	call   QWORD PTR [rip+0x14021]        # 0x14002b8b0
   14001788f:	lea    rcx,[rsp+0x410]
   140017897:	call   QWORD PTR [rip+0x13ffb]        # 0x14002b898
   14001789d:	lea    r8,[rsp+0xd0]
   1400178a5:	lea    rdx,[rsp+0x2e0]
   1400178ad:	mov    rcx,r15
   1400178b0:	call   QWORD PTR [rip+0x13e22]        # 0x14002b6d8
   1400178b6:	lea    rcx,[rsp+0x5a8]
   1400178be:	mov    rdx,rax
   1400178c1:	call   QWORD PTR [rip+0x13fe9]        # 0x14002b8b0
   1400178c7:	lea    rcx,[rsp+0x2e0]
   1400178cf:	call   QWORD PTR [rip+0x13fc3]        # 0x14002b898
   1400178d5:	lea    r8,[rsp+0x90]
   1400178dd:	lea    rdx,[rsp+0x2e8]
   1400178e5:	mov    rcx,r15
   1400178e8:	call   QWORD PTR [rip+0x13dea]        # 0x14002b6d8
   1400178ee:	lea    rcx,[rsp+0x5b0]
   1400178f6:	mov    rdx,rax
   1400178f9:	call   QWORD PTR [rip+0x13fb1]        # 0x14002b8b0
   1400178ff:	lea    rcx,[rsp+0x2e8]
   140017907:	call   QWORD PTR [rip+0x13f8b]        # 0x14002b898
   14001790d:	lea    r8,[rsp+0x98]
   140017915:	lea    rdx,[rsp+0x2f8]
   14001791d:	mov    rcx,r15
   140017920:	call   QWORD PTR [rip+0x13db2]        # 0x14002b6d8
   140017926:	lea    rcx,[rsp+0x5b8]
   14001792e:	mov    rdx,rax
   140017931:	call   QWORD PTR [rip+0x13f79]        # 0x14002b8b0
   140017937:	lea    rcx,[rsp+0x2f8]
   14001793f:	call   QWORD PTR [rip+0x13f53]        # 0x14002b898
   140017945:	lea    r8,[rsp+0xc0]
   14001794d:	lea    rdx,[rsp+0x308]
   140017955:	mov    rcx,r15
   140017958:	call   QWORD PTR [rip+0x13d7a]        # 0x14002b6d8
   14001795e:	lea    rcx,[rsp+0x5d0]
   140017966:	mov    rdx,rax
   140017969:	call   QWORD PTR [rip+0x13f41]        # 0x14002b8b0
   14001796f:	lea    rcx,[rsp+0x308]
   140017977:	call   QWORD PTR [rip+0x13f1b]        # 0x14002b898
   14001797d:	lea    r8,[rsp+0xb8]
   140017985:	lea    rdx,[rsp+0x318]
   14001798d:	mov    rcx,r15
   140017990:	call   QWORD PTR [rip+0x13d42]        # 0x14002b6d8
   140017996:	lea    rcx,[rsp+0x5d8]
   14001799e:	mov    rdx,rax
   1400179a1:	call   QWORD PTR [rip+0x13f09]        # 0x14002b8b0
   1400179a7:	lea    rcx,[rsp+0x318]
   1400179af:	call   QWORD PTR [rip+0x13ee3]        # 0x14002b898
   1400179b5:	cmp    BYTE PTR [rsp+0xe0],0x0
   1400179bd:	jne    0x1400179d6
   1400179bf:	lea    rcx,[rsp+0xd8]
   1400179c7:	call   QWORD PTR [rip+0x13833]        # 0x14002b200
   1400179cd:	cmp    eax,0x1
   1400179d0:	jg     0x1400179d6
   1400179d2:	xor    al,al
   1400179d4:	jmp    0x1400179d8
   1400179d6:	mov    al,0x1
   1400179d8:	mov    BYTE PTR [rsp+0x604],al
   1400179df:	mov    rax,QWORD PTR [rip+0x13ea2]        # 0x14002b888
   1400179e6:	lea    rdx,[rsp+0xd8]
   1400179ee:	lea    rcx,[rsp+0x1d8]
   1400179f6:	mov    QWORD PTR [rsp+0x100],rax
   1400179fe:	call   0x140012030
   140017a03:	lea    rcx,[rsp+0x1d8]
   140017a0b:	mov    DWORD PTR [rsp+0x1e0],0x0
   140017a16:	call   QWORD PTR [rip+0x13c84]        # 0x14002b6a0
   140017a1c:	lea    rcx,[rsp+0x1d8]
   140017a24:	mov    QWORD PTR [rsp+0x1e8],rax
   140017a2c:	call   QWORD PTR [rip+0x13c66]        # 0x14002b698
   140017a32:	mov    rbx,QWORD PTR [rsp+0x1e8]
   140017a3a:	mov    edx,DWORD PTR [rsp+0x1e0]
   140017a41:	mov    QWORD PTR [rsp+0x1f0],rax
   140017a49:	nop    DWORD PTR [rax+0x0]
   140017a50:	mov    ecx,edx
   140017a52:	inc    edx
   140017a54:	mov    DWORD PTR [rsp+0x1e0],edx
   140017a5b:	test   ecx,ecx
   140017a5d:	jne    0x140017b86
   140017a63:	cmp    rbx,rax
   140017a66:	je     0x140017b86
   140017a6c:	nop    DWORD PTR [rax+0x0]
   140017a70:	test   edx,edx
   140017a72:	je     0x140017b65
   140017a78:	lea    rdx,[rsp+0x130]
   140017a80:	mov    r8,rbx
   140017a83:	mov    rcx,r15
   140017a86:	call   QWORD PTR [rip+0x13c4c]        # 0x14002b6d8
   140017a8c:	lea    rcx,[rsp+0x16a]
   140017a94:	mov    edx,0x9c
   140017a99:	call   QWORD PTR [rip+0x13bf1]        # 0x14002b690
   140017a9f:	lea    rcx,[rsp+0x18a]
   140017aa7:	mov    edx,0x2762
   140017aac:	mov    rdi,rax
   140017aaf:	call   QWORD PTR [rip+0x13bdb]        # 0x14002b690
   140017ab5:	movzx  r8d,WORD PTR [rdi]
   140017ab9:	movzx  edx,WORD PTR [rax]
   140017abc:	lea    rcx,[rsp+0x130]
   140017ac4:	mov    r9d,0x1
   140017aca:	call   QWORD PTR [rip+0x13a90]        # 0x14002b560
   140017ad0:	mov    rdx,QWORD PTR [rsp+0x100]
   140017ad8:	mov    eax,DWORD PTR [rdx]
   140017ada:	cmp    eax,0x1
   140017add:	je     0x140017b13
   140017adf:	test   eax,eax
   140017ae1:	je     0x140017b13
   140017ae3:	lea    rcx,[rsp+0x100]
   140017aeb:	mov    edx,0x7fffffff
   140017af0:	mov    r8d,0x1
   140017af6:	call   0x140001a10
   140017afb:	test   rax,rax
   140017afe:	je     0x140017b42
   140017b00:	lea    rdx,[rsp+0x130]
   140017b08:	mov    rcx,rax
   140017b0b:	call   QWORD PTR [rip+0x13d8f]        # 0x14002b8a0
   140017b11:	jmp    0x140017b42
   140017b13:	lea    rdx,[rsp+0x130]
   140017b1b:	lea    rcx,[rsp+0x328]
   140017b23:	call   QWORD PTR [rip+0x13d77]        # 0x14002b8a0
   140017b29:	lea    rcx,[rsp+0x100]
   140017b31:	call   QWORD PTR [rip+0x13d09]        # 0x14002b840
   140017b37:	mov    rcx,QWORD PTR [rsp+0x328]
   140017b3f:	mov    QWORD PTR [rax],rcx
   140017b42:	lea    rcx,[rsp+0x130]
   140017b4a:	call   QWORD PTR [rip+0x13d48]        # 0x14002b898
   140017b50:	mov    edx,DWORD PTR [rsp+0x1e0]
   140017b57:	dec    edx
   140017b59:	mov    DWORD PTR [rsp+0x1e0],edx
   140017b60:	jmp    0x140017a70
   140017b65:	mov    rbx,QWORD PTR [rsp+0x1e8]
   140017b6d:	mov    rax,QWORD PTR [rsp+0x1f0]
   140017b75:	add    rbx,0x8
   140017b79:	mov    QWORD PTR [rsp+0x1e8],rbx
   140017b81:	jmp    0x140017a50
   140017b86:	lea    rcx,[rsp+0x1d8]
   140017b8e:	call   0x140011fb0
   140017b93:	lea    rdx,[rsp+0x100]
   140017b9b:	lea    rcx,[rsp+0x5e0]
   140017ba3:	call   0x140001830
   140017ba8:	cmp    BYTE PTR [rsp+0xe1],0x0
   140017bb0:	jne    0x140017bf5
   140017bb2:	lea    rdx,[rsp+0x5a0]
   140017bba:	lea    rcx,[rsp+0x280]
   140017bc2:	bts    r12d,0x19
   140017bc7:	call   QWORD PTR [rip+0x13cd3]        # 0x14002b8a0
   140017bcd:	lea    rcx,[rsp+0x280]
   140017bd5:	call   QWORD PTR [rip+0x1361d]        # 0x14002b1f8
   140017bdb:	test   al,al
   140017bdd:	jne    0x140017bf0
   140017bdf:	lea    rcx,[rsp+0x590]
   140017be7:	call   0x140006790
   140017bec:	test   al,al
   140017bee:	je     0x140017bf5
   140017bf0:	xor    dil,dil
   140017bf3:	jmp    0x140017bf8
   140017bf5:	mov    dil,0x1
   140017bf8:	bt     r12d,0x19
   140017bfd:	jae    0x140017c12
   140017bff:	lea    rcx,[rsp+0x280]
   140017c07:	btr    r12d,0x19
   140017c0c:	call   QWORD PTR [rip+0x13c86]        # 0x14002b898
   140017c12:	xor    eax,eax
   140017c14:	test   bpl,bpl
   140017c17:	je     0x140017c24
   140017c19:	test   dil,dil
   140017c1c:	setne  al
   140017c1f:	add    eax,0x2
   140017c22:	jmp    0x140017c2a
   140017c24:	test   dil,dil
   140017c27:	sete   al
   140017c2a:	mov    rcx,QWORD PTR [rsp+0x5c8]
   140017c32:	mov    rdi,QWORD PTR [rsp+0xe8]
   140017c3a:	mov    DWORD PTR [rsp+0x600],eax
   140017c41:	cmp    rcx,rdi
   140017c44:	je     0x140017cad
   140017c46:	mov    eax,DWORD PTR [rdi+0x10]
   140017c49:	test   eax,eax
   140017c4b:	je     0x140017c5f
   140017c4d:	cmp    eax,0xffffffff
   140017c50:	je     0x140017c5f
   140017c52:	lock add DWORD PTR [rdi+0x10],0x1
   140017c57:	mov    rcx,QWORD PTR [rsp+0x5c8]
   140017c5f:	mov    eax,DWORD PTR [rcx+0x10]
   140017c62:	test   eax,eax
   140017c64:	je     0x140017c85
   140017c66:	cmp    eax,0xffffffff
   140017c69:	je     0x140017c92
   140017c6b:	mov    eax,r14d
   140017c6e:	lock xadd DWORD PTR [rcx+0x10],eax
   140017c73:	add    eax,0xffffffff
   140017c76:	setne  al
   140017c79:	test   al,al
   140017c7b:	jne    0x140017c92
   140017c7d:	mov    rcx,QWORD PTR [rsp+0x5c8]
   140017c85:	lea    rdx,[rip+0xfffffffffffe9784]        # 0x140001410
   140017c8c:	call   QWORD PTR [rip+0x13bd6]        # 0x14002b868
   140017c92:	mov    QWORD PTR [rsp+0x5c8],rdi
   140017c9a:	test   BYTE PTR [rdi+0x28],0x1
   140017c9e:	jne    0x140017cad
   140017ca0:	lea    rcx,[rsp+0x5c8]
   140017ca8:	call   0x140001b50
   140017cad:	lea    rdx,[rsp+0x590]
   140017cb5:	mov    rcx,r13
   140017cb8:	call   0x1400089f0
   140017cbd:	lea    rcx,[rsp+0x9e0]
   140017cc5:	call   0x140012640
   140017cca:	lea    rcx,[rsp+0x80]
   140017cd2:	mov    rdx,rax
   140017cd5:	call   0x1400136b0
   140017cda:	lea    rcx,[rsp+0x9e0]
   140017ce2:	call   0x140012d50
   140017ce7:	lea    rcx,[rsp+0x100]
   140017cef:	call   0x1400017b0
   140017cf4:	lea    rcx,[rsp+0x590]
   140017cfc:	call   0x140001ea0
   140017d01:	lea    rcx,[rsp+0xf0]
   140017d09:	call   QWORD PTR [rip+0x134b9]        # 0x14002b1c8
   140017d0f:	mov    bpl,BYTE PTR [rsp+0xaa8]
   140017d17:	lea    rcx,[rsp+0x40]
   140017d1c:	call   QWORD PTR [rip+0x134a6]        # 0x14002b1c8
   140017d22:	movzx  edi,BYTE PTR [rsp+0xab8]
   140017d2a:	mov    rax,QWORD PTR [rsp+0x38]
   140017d2f:	mov    r13d,DWORD PTR [rsp+0x30]
   140017d34:	mov    ecx,DWORD PTR [rax+0xc]
   140017d37:	inc    r13d
   140017d3a:	sub    ecx,DWORD PTR [rax+0x8]
   140017d3d:	mov    DWORD PTR [rsp+0x30],r13d
   140017d42:	cmp    r13d,ecx
   140017d45:	je     0x140017d51
   140017d47:	mov    ebp,0x1
   140017d4c:	jmp    0x140014b52
   140017d51:	test   bpl,bpl
   140017d54:	jne    0x140017d83
   140017d56:	lea    rdx,[rsi+0x60]
   140017d5a:	lea    rcx,[rsp+0x290]
   140017d62:	bts    r12d,0x1a
   140017d67:	call   0x140001700
   140017d6c:	lea    rcx,[rsp+0x290]
   140017d74:	call   QWORD PTR [rip+0x13476]        # 0x14002b1f0
   140017d7a:	test   al,al
   140017d7c:	je     0x140017d83
   140017d7e:	mov    dil,0x1
   140017d81:	jmp    0x140017d86
   140017d83:	xor    dil,dil
   140017d86:	bt     r12d,0x1a
   140017d8b:	jae    0x140017d9a
   140017d8d:	lea    rcx,[rsp+0x290]
   140017d95:	call   0x1400017b0
   140017d9a:	lea    rcx,[rsp+0x80]
   140017da2:	call   0x140012d50
   140017da7:	lea    rcx,[rsp+0x38]
   140017dac:	call   0x140011fb0
   140017db1:	mov    al,dil
   140017db4:	add    rsp,0xa58
   140017dbb:	pop    r15
   140017dbd:	pop    r14
   140017dbf:	pop    r13
   140017dc1:	pop    r12
   140017dc3:	pop    rdi
   140017dc4:	pop    rsi
   140017dc5:	pop    rbp
   140017dc6:	pop    rbx
   140017dc7:	ret    
   140017dc8:	mov    WORD PTR [rax+0x1],ss
   140017dcb:	add    BYTE PTR [rax+rdx*2+0x4c7a0001],ch
   140017dd2:	add    DWORD PTR [rax],eax
   140017dd4:	rcl    DWORD PTR [rax+0x1],cl
   140017dd7:	add    BYTE PTR [rdi],bl
   140017dd9:	add    QWORD PTR [rax],r8
   140017ddc:	jrcxz  0x140017e2f
   140017dde:	add    DWORD PTR [rax],eax
   140017de0:	xlat   BYTE PTR ds:[rbx]
   140017de1:	push   rbp
   140017de2:	add    DWORD PTR [rax],eax
   140017de4:	jge    0x140017e42
   140017de6:	add    DWORD PTR [rax],eax
   140017de8:	add    BYTE PTR [rdi],al
   140017dea:	(bad)  
   140017deb:	(bad)  
   140017dec:	(bad)  
   140017ded:	(bad)  
   140017dee:	(bad)  
   140017def:	(bad)  
   140017df0:	(bad)  
   140017df1:	(bad)  
   140017df2:	(bad)  
   140017df3:	(bad)  
   140017df4:	(bad)  
   140017df5:	(bad)  
   140017df6:	(bad)  
   140017df7:	(bad)  
   140017df8:	(bad)  
   140017df9:	(bad)  
   140017dfa:	(bad)  
   140017dfb:	(bad)  
   140017dfc:	(bad)  
   140017dfd:	(bad)  
   140017dfe:	(bad)  
   140017dff:	(bad)  
   140017e00:	(bad)  
   140017e01:	(bad)  
   140017e02:	(bad)  
   140017e03:	(bad)  
   140017e04:	(bad)  
   140017e05:	(bad)  
   140017e06:	(bad)  
   140017e07:	(bad)  
   140017e08:	add    DWORD PTR [rdi],eax
   140017e0a:	(bad)  
   140017e0b:	(bad)  
   140017e0c:	(bad)  
   140017e0d:	(bad)  
   140017e0e:	(bad)  
   140017e0f:	(bad)  
   140017e10:	(bad)  
   140017e11:	(bad)  
   140017e12:	(bad)  
   140017e13:	(bad)  
   140017e14:	add    al,BYTE PTR [rdi]
   140017e16:	add    eax,DWORD PTR [rdi]
   140017e18:	(bad)  
   140017e19:	(bad)  
   140017e1a:	(bad)  
   140017e1b:	(bad)  
   140017e1c:	(bad)  
   140017e1d:	(bad)  
   140017e1e:	(bad)  
   140017e1f:	(bad)  
   140017e20:	(bad)  
   140017e21:	(bad)  
   140017e22:	add    al,0x7
   140017e24:	(bad)  
   140017e25:	(bad)  
   140017e26:	(bad)  
   140017e27:	(bad)  
   140017e28:	(bad)  
   140017e29:	(bad)  
   140017e2a:	(bad)  
   140017e2b:	(bad)  
   140017e2c:	(bad)  
   140017e2d:	(bad)  
   140017e2e:	(bad)  
   140017e2f:	(bad)  
   140017e30:	(bad)  
   140017e31:	(bad)  
   140017e32:	(bad)  
   140017e33:	(bad)  
   140017e34:	(bad)  
   140017e35:	(bad)  
   140017e36:	(bad)  
   140017e37:	(bad)  
   140017e38:	(bad)  
   140017e39:	(bad)  
   140017e3a:	(bad)  
   140017e3b:	(bad)  
   140017e3c:	(bad)  
   140017e3d:	(bad)  
   140017e3e:	(bad)  
   140017e3f:	(bad)  
   140017e40:	(bad)  
   140017e41:	(bad)  
   140017e42:	(bad)  
   140017e43:	(bad)  
   140017e44:	(bad)  
   140017e45:	(bad)  
   140017e46:	(bad)  
   140017e47:	(bad)  
   140017e48:	(bad)  
   140017e49:	(bad)  
   140017e4a:	(bad)  
   140017e4b:	(bad)  
   140017e4c:	(bad)  
   140017e4d:	(bad)  
   140017e4e:	(bad)  
   140017e4f:	(bad)  
   140017e50:	(bad)  
   140017e51:	(bad)  
   140017e52:	(bad)  
   140017e53:	(bad)  
   140017e54:	(bad)  
   140017e55:	(bad)  
   140017e56:	(bad)  
   140017e57:	(bad)  
   140017e58:	(bad)  
   140017e59:	(bad)  
   140017e5a:	(bad)  
   140017e5b:	(bad)  
   140017e5c:	(bad)  
   140017e5d:	(bad)  
   140017e5e:	(bad)  
   140017e5f:	(bad)  
   140017e60:	(bad)  
   140017e61:	(bad)  
   140017e62:	(bad)  
   140017e63:	(bad)  
   140017e64:	add    eax,0xcccc0607
   140017e69:	int3   
   140017e6a:	int3   
   140017e6b:	int3   
   140017e6c:	int3   
   140017e6d:	int3   
   140017e6e:	int3   
   140017e6f:	int3   
   140017e70:	mov    QWORD PTR [rsp+0x8],rbx
   140017e75:	push   rdi
   140017e76:	sub    rsp,0x20
   140017e7a:	mov    rdi,rdx
   140017e7d:	mov    rbx,rcx
   140017e80:	call   0x140008700
   140017e85:	mov    r11d,DWORD PTR [rdi+0x8]
   140017e89:	lea    rdx,[rdi+0x10]
   140017e8d:	lea    rcx,[rbx+0x10]
   140017e91:	mov    DWORD PTR [rbx+0x8],r11d
   140017e95:	call   QWORD PTR [rip+0x13a05]        # 0x14002b8a0
   140017e9b:	lea    rdx,[rdi+0x18]
   140017e9f:	lea    rcx,[rbx+0x18]
   140017ea3:	call   QWORD PTR [rip+0x139f7]        # 0x14002b8a0
   140017ea9:	lea    rdx,[rdi+0x20]
   140017ead:	lea    rcx,[rbx+0x20]
   140017eb1:	call   0x140001700
   140017eb6:	mov    rax,QWORD PTR [rdi+0x28]
   140017eba:	lea    rcx,[rbx+0x28]
   140017ebe:	mov    QWORD PTR [rcx],rax
   140017ec1:	mov    edx,DWORD PTR [rax+0x10]
   140017ec4:	test   edx,edx
   140017ec6:	je     0x140017ed2
   140017ec8:	cmp    edx,0xffffffff
   140017ecb:	je     0x140017ed2
   140017ecd:	lock add DWORD PTR [rax+0x10],0x1
   140017ed2:	mov    rax,QWORD PTR [rcx]
   140017ed5:	test   BYTE PTR [rax+0x28],0x1
   140017ed9:	jne    0x140017eec
   140017edb:	mov    eax,DWORD PTR [rax+0x10]
   140017ede:	cmp    eax,0x1
   140017ee1:	je     0x140017eec
   140017ee3:	test   eax,eax
   140017ee5:	je     0x140017eec
   140017ee7:	call   0x140001b50
   140017eec:	movzx  eax,BYTE PTR [rdi+0x30]
   140017ef0:	lea    rcx,[rbx+0x38]
   140017ef4:	mov    BYTE PTR [rbx+0x30],al
   140017ef7:	mov    rax,QWORD PTR [rdi+0x38]
   140017efb:	mov    QWORD PTR [rcx],rax
   140017efe:	mov    edx,DWORD PTR [rax+0x10]
   140017f01:	test   edx,edx
   140017f03:	je     0x140017f0f
   140017f05:	cmp    edx,0xffffffff
   140017f08:	je     0x140017f0f
   140017f0a:	lock add DWORD PTR [rax+0x10],0x1
   140017f0f:	mov    rax,QWORD PTR [rcx]
   140017f12:	test   BYTE PTR [rax+0x28],0x1
   140017f16:	jne    0x140017f29
   140017f18:	mov    eax,DWORD PTR [rax+0x10]
   140017f1b:	cmp    eax,0x1
   140017f1e:	je     0x140017f29
   140017f20:	test   eax,eax
   140017f22:	je     0x140017f29
   140017f24:	call   0x140005990
   140017f29:	mov    rax,QWORD PTR [rdi+0x40]
   140017f2d:	lea    rcx,[rbx+0x40]
   140017f31:	mov    QWORD PTR [rcx],rax
   140017f34:	mov    edx,DWORD PTR [rax+0x10]
   140017f37:	test   edx,edx
   140017f39:	je     0x140017f45
   140017f3b:	cmp    edx,0xffffffff
   140017f3e:	je     0x140017f45
   140017f40:	lock add DWORD PTR [rax+0x10],0x1
   140017f45:	mov    rax,QWORD PTR [rcx]
   140017f48:	test   BYTE PTR [rax+0x28],0x1
   140017f4c:	jne    0x140017f5f
   140017f4e:	mov    eax,DWORD PTR [rax+0x10]
   140017f51:	cmp    eax,0x1
   140017f54:	je     0x140017f5f
   140017f56:	test   eax,eax
   140017f58:	je     0x140017f5f
   140017f5a:	call   0x140005990
   140017f5f:	mov    rax,QWORD PTR [rdi+0x48]
   140017f63:	lea    rcx,[rbx+0x48]
   140017f67:	mov    QWORD PTR [rcx],rax
   140017f6a:	mov    edx,DWORD PTR [rax+0x10]
   140017f6d:	test   edx,edx
   140017f6f:	je     0x140017f7b
   140017f71:	cmp    edx,0xffffffff
   140017f74:	je     0x140017f7b
   140017f76:	lock add DWORD PTR [rax+0x10],0x1
   140017f7b:	mov    rax,QWORD PTR [rcx]
   140017f7e:	test   BYTE PTR [rax+0x28],0x1
   140017f82:	jne    0x140017f95
   140017f84:	mov    eax,DWORD PTR [rax+0x10]
   140017f87:	cmp    eax,0x1
   140017f8a:	je     0x140017f95
   140017f8c:	test   eax,eax
   140017f8e:	je     0x140017f95
   140017f90:	call   0x140005a00
   140017f95:	mov    rax,rbx
   140017f98:	mov    rbx,QWORD PTR [rsp+0x30]
   140017f9d:	add    rsp,0x20
   140017fa1:	pop    rdi
   140017fa2:	ret    
   140017fa3:	int3   
   140017fa4:	int3   
   140017fa5:	int3   
   140017fa6:	int3   
   140017fa7:	int3   
   140017fa8:	int3   
   140017fa9:	int3   
   140017faa:	int3   
   140017fab:	int3   
   140017fac:	int3   
   140017fad:	int3   
   140017fae:	int3   
   140017faf:	int3   
   140017fb0:	mov    QWORD PTR [rsp+0x10],rbx
   140017fb5:	push   rbp
   140017fb6:	push   rsi
   140017fb7:	push   rdi
   140017fb8:	push   r12
   140017fba:	push   r13
   140017fbc:	push   r14
   140017fbe:	push   r15
   140017fc0:	sub    rsp,0x9d0
   140017fc7:	mov    r15,rcx
   140017fca:	mov    rbx,rdx
   140017fcd:	lea    rdx,[rip+0x15bcc]        # 0x14002dba0
   140017fd4:	mov    rdi,rdx
   140017fd7:	mov    QWORD PTR [rsp+0x48],rdx
   140017fdc:	xor    eax,eax
   140017fde:	or     r14,0xffffffffffffffff
   140017fe2:	lea    rdx,[rsp+0x8d0]
   140017fea:	xor    r12d,r12d
   140017fed:	mov    rcx,r14
   140017ff0:	mov    DWORD PTR [rsp+0xa10],r12d
   140017ff8:	repnz scas al,BYTE PTR es:[rdi]
   140017ffa:	not    rcx
   140017ffd:	dec    rcx
   140018000:	mov    DWORD PTR [rsp+0x40],ecx
   140018004:	lea    rcx,[rsp+0x388]
   14001800c:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140018011:	movdqa XMMWORD PTR [rsp+0x8d0],xmm0
   14001801a:	call   QWORD PTR [rip+0x13840]        # 0x14002b860
   140018020:	lea    rcx,[rsp+0x60]
   140018025:	mov    rdx,rbx
   140018028:	call   QWORD PTR [rip+0x13592]        # 0x14002b5c0
   14001802e:	lea    rdx,[rip+0x15387]        # 0x14002d3bc
   140018035:	lea    rcx,[rsp+0x60]
   14001803a:	call   QWORD PTR [rip+0x13708]        # 0x14002b748
   140018040:	xor    dl,dl
   140018042:	mov    rcx,r15
   140018045:	mov    BYTE PTR [rsp+0xa10],dl
   14001804c:	lea    rdx,[rsp+0x408]
   140018054:	call   0x140008940
   140018059:	mov    rdi,rax
   14001805c:	mov    rdx,QWORD PTR [rax]
   14001805f:	mov    QWORD PTR [rsp+0x108],rdx
   140018067:	mov    ecx,DWORD PTR [rdx]
   140018069:	test   ecx,ecx
   14001806b:	je     0x140018078
   14001806d:	cmp    ecx,r14d
   140018070:	je     0x1400180ea
   140018072:	lock add DWORD PTR [rdx],0x1
   140018076:	jmp    0x1400180e2
   140018078:	mov    edx,DWORD PTR [rdx+0x4]
   14001807b:	lea    rcx,[rsp+0x108]
   140018083:	call   QWORD PTR [rip+0x137cf]        # 0x14002b858
   140018089:	mov    rdx,QWORD PTR [rdi]
   14001808c:	movsxd rax,DWORD PTR [rdx+0x8]
   140018090:	lea    rbx,[rdx+rax*8+0x10]
   140018095:	mov    rdx,QWORD PTR [rsp+0x108]
   14001809d:	movsxd rax,DWORD PTR [rdx+0xc]
   1400180a1:	lea    rsi,[rdx+rax*8+0x10]
   1400180a6:	movsxd rax,DWORD PTR [rdx+0x8]
   1400180aa:	lea    rdi,[rdx+rax*8+0x10]
   1400180af:	cmp    rdi,rsi
   1400180b2:	je     0x1400180ea
   1400180b4:	mov    ecx,0x78
   1400180b9:	call   0x14002952a
   1400180be:	test   rax,rax
   1400180c1:	je     0x1400180d0
   1400180c3:	mov    rdx,QWORD PTR [rbx]
   1400180c6:	mov    rcx,rax
   1400180c9:	call   0x1400020d0
   1400180ce:	jmp    0x1400180d2
   1400180d0:	xor    eax,eax
   1400180d2:	mov    QWORD PTR [rdi],rax
   1400180d5:	add    rdi,0x8
   1400180d9:	add    rbx,0x8
   1400180dd:	cmp    rdi,rsi
   1400180e0:	jne    0x1400180b4
   1400180e2:	mov    rdx,QWORD PTR [rsp+0x108]
   1400180ea:	mov    rsi,QWORD PTR [rsp+0x408]
   1400180f2:	mov    DWORD PTR [rsp+0x110],r12d
   1400180fa:	movsxd rax,DWORD PTR [rdx+0x8]
   1400180fe:	lea    rcx,[rdx+rax*8+0x10]
   140018103:	mov    QWORD PTR [rsp+0x118],rcx
   14001810b:	movsxd rax,DWORD PTR [rdx+0xc]
   14001810f:	lea    rcx,[rdx+rax*8+0x10]
   140018114:	mov    QWORD PTR [rsp+0x120],rcx
   14001811c:	mov    eax,DWORD PTR [rsi]
   14001811e:	test   eax,eax
   140018120:	je     0x140018140
   140018122:	cmp    eax,0xffffffff
   140018125:	je     0x140018190
   140018127:	mov    eax,r14d
   14001812a:	lock xadd DWORD PTR [rsi],eax
   14001812e:	add    eax,0xffffffff
   140018131:	setne  al
   140018134:	test   al,al
   140018136:	jne    0x140018190
   140018138:	mov    rsi,QWORD PTR [rsp+0x408]
   140018140:	movsxd rax,DWORD PTR [rsi+0xc]
   140018144:	lea    rdi,[rsi+rax*8+0x10]
   140018149:	movsxd rax,DWORD PTR [rsi+0x8]
   14001814d:	lea    rbp,[rsi+rax*8+0x10]
   140018152:	cmp    rbp,rdi
   140018155:	je     0x140018182
   140018157:	nop    WORD PTR [rax+rax*1+0x0]
   140018160:	mov    rbx,QWORD PTR [rdi-0x8]
   140018164:	sub    rdi,0x8
   140018168:	test   rbx,rbx
   14001816b:	je     0x14001817d
   14001816d:	mov    rcx,rbx
   140018170:	call   0x140001ea0
   140018175:	mov    rcx,rbx
   140018178:	call   0x140029524
   14001817d:	cmp    rdi,rbp
   140018180:	jne    0x140018160
   140018182:	mov    rcx,rsi
   140018185:	call   QWORD PTR [rip+0x136e5]        # 0x14002b870
   14001818b:	nop    DWORD PTR [rax+rax*1+0x0]
   140018190:	mov    eax,DWORD PTR [rsp+0x110]
   140018197:	inc    DWORD PTR [rsp+0x110]
   14001819e:	test   eax,eax
   1400181a0:	jne    0x1400181b9
   1400181a2:	mov    rax,QWORD PTR [rsp+0x120]
   1400181aa:	cmp    QWORD PTR [rsp+0x118],rax
   1400181b2:	je     0x1400181b9
   1400181b4:	mov    r13b,0x1
   1400181b7:	jmp    0x1400181bc
   1400181b9:	xor    r13b,r13b
   1400181bc:	test   r12b,0x2
   1400181c0:	je     0x14001823b
   1400181c2:	mov    rsi,QWORD PTR [rsp+0x500]
   1400181ca:	and    r12d,0xfffffffd
   1400181ce:	mov    eax,DWORD PTR [rsi]
   1400181d0:	test   eax,eax
   1400181d2:	je     0x1400181f2
   1400181d4:	cmp    eax,0xffffffff
   1400181d7:	je     0x14001823b
   1400181d9:	mov    eax,r14d
   1400181dc:	lock xadd DWORD PTR [rsi],eax
   1400181e0:	add    eax,0xffffffff
   1400181e3:	setne  al
   1400181e6:	test   al,al
   1400181e8:	jne    0x14001823b
   1400181ea:	mov    rsi,QWORD PTR [rsp+0x500]
   1400181f2:	movsxd rax,DWORD PTR [rsi+0xc]
   1400181f6:	lea    rdi,[rsi+rax*8+0x10]
   1400181fb:	movsxd rax,DWORD PTR [rsi+0x8]
   1400181ff:	lea    rbp,[rsi+rax*8+0x10]
   140018204:	cmp    rbp,rdi
   140018207:	je     0x140018232
   140018209:	nop    DWORD PTR [rax+0x0]
   140018210:	mov    rbx,QWORD PTR [rdi-0x8]
   140018214:	sub    rdi,0x8
   140018218:	test   rbx,rbx
   14001821b:	je     0x14001822d
   14001821d:	mov    rcx,rbx
   140018220:	call   0x140001ea0
   140018225:	mov    rcx,rbx
   140018228:	call   0x140029524
   14001822d:	cmp    rdi,rbp
   140018230:	jne    0x140018210
   140018232:	mov    rcx,rsi
   140018235:	call   QWORD PTR [rip+0x13635]        # 0x14002b870
   14001823b:	test   r13b,r13b
   14001823e:	je     0x1400184b7
   140018244:	mov    rax,QWORD PTR [rsp+0x118]
   14001824c:	mov    r14,QWORD PTR [rax]
   14001824f:	test   r12b,0x4
   140018253:	je     0x1400182d0
   140018255:	mov    rsi,QWORD PTR [rsp+0x560]
   14001825d:	and    r12d,0xfffffffb
   140018261:	mov    eax,DWORD PTR [rsi]
   140018263:	test   eax,eax
   140018265:	je     0x14001827f
   140018267:	cmp    eax,0xffffffff
   14001826a:	je     0x1400182d0
   14001826c:	lock add DWORD PTR [rsi],0xffffffff
   140018270:	setne  al
   140018273:	test   al,al
   140018275:	jne    0x1400182d0
   140018277:	mov    rsi,QWORD PTR [rsp+0x560]
   14001827f:	movsxd rax,DWORD PTR [rsi+0xc]
   140018283:	lea    rdi,[rsi+rax*8+0x10]
   140018288:	movsxd rax,DWORD PTR [rsi+0x8]
   14001828c:	lea    rbp,[rsi+rax*8+0x10]
   140018291:	cmp    rbp,rdi
   140018294:	je     0x1400182c2
   140018296:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400182a0:	mov    rbx,QWORD PTR [rdi-0x8]
   1400182a4:	sub    rdi,0x8
   1400182a8:	test   rbx,rbx
   1400182ab:	je     0x1400182bd
   1400182ad:	mov    rcx,rbx
   1400182b0:	call   0x140001ea0
   1400182b5:	mov    rcx,rbx
   1400182b8:	call   0x140029524
   1400182bd:	cmp    rdi,rbp
   1400182c0:	jne    0x1400182a0
   1400182c2:	mov    rcx,rsi
   1400182c5:	call   QWORD PTR [rip+0x135a5]        # 0x14002b870
   1400182cb:	nop    DWORD PTR [rax+rax*1+0x0]
   1400182d0:	mov    r13d,DWORD PTR [rsp+0x110]
   1400182d8:	test   r12b,0x10
   1400182dc:	je     0x14001834b
   1400182de:	mov    rsi,QWORD PTR [rsp+0x558]
   1400182e6:	and    r12d,0xffffffef
   1400182ea:	mov    eax,DWORD PTR [rsi]
   1400182ec:	test   eax,eax
   1400182ee:	je     0x140018300
   1400182f0:	cmp    eax,0xffffffff
   1400182f3:	je     0x14001834b
   1400182f5:	lock add DWORD PTR [rsi],0xffffffff
   1400182f9:	setne  al
   1400182fc:	test   al,al
   1400182fe:	jne    0x14001834b
   140018300:	mov    rsi,QWORD PTR [rsp+0x558]
   140018308:	movsxd rax,DWORD PTR [rsi+0xc]
   14001830c:	lea    rdi,[rsi+rax*8+0x10]
   140018311:	movsxd rax,DWORD PTR [rsi+0x8]
   140018315:	lea    rbp,[rsi+rax*8+0x10]
   14001831a:	cmp    rbp,rdi
   14001831d:	je     0x140018342
   14001831f:	nop
   140018320:	mov    rbx,QWORD PTR [rdi-0x8]
   140018324:	sub    rdi,0x8
   140018328:	test   rbx,rbx
   14001832b:	je     0x14001833d
   14001832d:	mov    rcx,rbx
   140018330:	call   0x140001ea0
   140018335:	mov    rcx,rbx
   140018338:	call   0x140029524
   14001833d:	cmp    rdi,rbp
   140018340:	jne    0x140018320
   140018342:	mov    rcx,rsi
   140018345:	call   QWORD PTR [rip+0x13525]        # 0x14002b870
   14001834b:	test   r13d,r13d
   14001834e:	je     0x14001841f
   140018354:	lea    rdx,[r14+0x8]
   140018358:	lea    rcx,[rsp+0x398]
   140018360:	call   QWORD PTR [rip+0x1353a]        # 0x14002b8a0
   140018366:	mov    rdx,QWORD PTR [rsp+0x398]
   14001836e:	lea    rcx,[rsp+0x398]
   140018376:	cmp    DWORD PTR [rdx+0x4],0x0
   14001837a:	setne  dil
   14001837e:	call   QWORD PTR [rip+0x13514]        # 0x14002b898
   140018384:	test   dil,dil
   140018387:	jne    0x140018417
   14001838d:	dec    DWORD PTR [rsp+0x110]
   140018394:	test   r12b,0x8
   140018398:	je     0x1400182d0
   14001839e:	mov    rsi,QWORD PTR [rsp+0x588]
   1400183a6:	and    r12d,0xfffffff7
   1400183aa:	mov    eax,DWORD PTR [rsi]
   1400183ac:	test   eax,eax
   1400183ae:	je     0x1400183c8
   1400183b0:	cmp    eax,0xffffffff
   1400183b3:	je     0x1400182d0
   1400183b9:	lock add DWORD PTR [rsi],0xffffffff
   1400183bd:	setne  al
   1400183c0:	test   al,al
   1400183c2:	jne    0x1400182d0
   1400183c8:	mov    rsi,QWORD PTR [rsp+0x588]
   1400183d0:	movsxd rax,DWORD PTR [rsi+0xc]
   1400183d4:	lea    rdi,[rsi+rax*8+0x10]
   1400183d9:	movsxd rax,DWORD PTR [rsi+0x8]
   1400183dd:	lea    rbp,[rsi+rax*8+0x10]
   1400183e2:	cmp    rbp,rdi
   1400183e5:	je     0x1400182c2
   1400183eb:	nop    DWORD PTR [rax+rax*1+0x0]
   1400183f0:	mov    rbx,QWORD PTR [rdi-0x8]
   1400183f4:	sub    rdi,0x8
   1400183f8:	test   rbx,rbx
   1400183fb:	je     0x14001840d
   1400183fd:	mov    rcx,rbx
   140018400:	call   0x140001ea0
   140018405:	mov    rcx,rbx
   140018408:	call   0x140029524
   14001840d:	cmp    rdi,rbp
   140018410:	jne    0x1400183f0
   140018412:	jmp    0x1400182c2
   140018417:	mov    BYTE PTR [rsp+0xa10],0x1
   14001841f:	add    QWORD PTR [rsp+0x118],0x8
   140018428:	test   r12b,0x1
   14001842c:	je     0x140018445
   14001842e:	mov    rsi,QWORD PTR [rsp+0x5a8]
   140018436:	and    r12d,0xfffffffe
   14001843a:	mov    eax,DWORD PTR [rsi]
   14001843c:	test   eax,eax
   14001843e:	je     0x140018471
   140018440:	cmp    eax,0xffffffff
   140018443:	jne    0x14001844e
   140018445:	or     r14,0xffffffffffffffff
   140018449:	jmp    0x140018190
   14001844e:	or     r14,0xffffffffffffffff
   140018452:	mov    eax,r14d
   140018455:	lock xadd DWORD PTR [rsi],eax
   140018459:	add    eax,r14d
   14001845c:	setne  al
   14001845f:	test   al,al
   140018461:	jne    0x140018190
   140018467:	mov    rsi,QWORD PTR [rsp+0x5a8]
   14001846f:	jmp    0x140018475
   140018471:	or     r14,0xffffffffffffffff
   140018475:	movsxd rax,DWORD PTR [rsi+0xc]
   140018479:	lea    rdi,[rsi+rax*8+0x10]
   14001847e:	movsxd rax,DWORD PTR [rsi+0x8]
   140018482:	lea    rbp,[rsi+rax*8+0x10]
   140018487:	cmp    rbp,rdi
   14001848a:	je     0x140018182
   140018490:	mov    rbx,QWORD PTR [rdi-0x8]
   140018494:	sub    rdi,0x8
   140018498:	test   rbx,rbx
   14001849b:	je     0x1400184ad
   14001849d:	mov    rcx,rbx
   1400184a0:	call   0x140001ea0
   1400184a5:	mov    rcx,rbx
   1400184a8:	call   0x140029524
   1400184ad:	cmp    rdi,rbp
   1400184b0:	jne    0x140018490
   1400184b2:	jmp    0x140018182
   1400184b7:	mov    rsi,QWORD PTR [rsp+0x108]
   1400184bf:	mov    eax,DWORD PTR [rsi]
   1400184c1:	test   eax,eax
   1400184c3:	je     0x1400184e3
   1400184c5:	cmp    eax,0xffffffff
   1400184c8:	je     0x14001852b
   1400184ca:	mov    eax,r14d
   1400184cd:	lock xadd DWORD PTR [rsi],eax
   1400184d1:	add    eax,0xffffffff
   1400184d4:	setne  al
   1400184d7:	test   al,al
   1400184d9:	jne    0x14001852b
   1400184db:	mov    rsi,QWORD PTR [rsp+0x108]
   1400184e3:	movsxd rax,DWORD PTR [rsi+0xc]
   1400184e7:	lea    rdi,[rsi+rax*8+0x10]
   1400184ec:	movsxd rax,DWORD PTR [rsi+0x8]
   1400184f0:	lea    rbp,[rsi+rax*8+0x10]
   1400184f5:	cmp    rbp,rdi
   1400184f8:	je     0x140018522
   1400184fa:	nop    WORD PTR [rax+rax*1+0x0]
   140018500:	mov    rbx,QWORD PTR [rdi-0x8]
   140018504:	sub    rdi,0x8
   140018508:	test   rbx,rbx
   14001850b:	je     0x14001851d
   14001850d:	mov    rcx,rbx
   140018510:	call   0x140001ea0
   140018515:	mov    rcx,rbx
   140018518:	call   0x140029524
   14001851d:	cmp    rdi,rbp
   140018520:	jne    0x140018500
   140018522:	mov    rcx,rsi
   140018525:	call   QWORD PTR [rip+0x13345]        # 0x14002b870
   14001852b:	lea    rdx,[rip+0x1529e]        # 0x14002d7d0
   140018532:	xor    eax,eax
   140018534:	mov    rcx,r14
   140018537:	mov    rdi,rdx
   14001853a:	mov    QWORD PTR [rsp+0x48],rdx
   14001853f:	lea    rdx,[rsp+0x940]
   140018547:	repnz scas al,BYTE PTR es:[rdi]
   140018549:	not    rcx
   14001854c:	dec    rcx
   14001854f:	mov    DWORD PTR [rsp+0x40],ecx
   140018553:	lea    rcx,[rsp+0x3c8]
   14001855b:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140018560:	movdqa XMMWORD PTR [rsp+0x940],xmm0
   140018569:	call   QWORD PTR [rip+0x132f1]        # 0x14002b860
   14001856f:	lea    r8,[rsp+0x3c8]
   140018577:	lea    rdx,[rsp+0x1f0]
   14001857f:	mov    rcx,r15
   140018582:	call   0x140005ec0
   140018587:	lea    rcx,[rsp+0x3c8]
   14001858f:	call   QWORD PTR [rip+0x13303]        # 0x14002b898
   140018595:	mov    rdx,QWORD PTR [rsp+0x1f0]
   14001859d:	cmp    DWORD PTR [rdx+0x4],0x0
   1400185a1:	je     0x1400185c1
   1400185a3:	lea    rdx,[rsp+0x1f0]
   1400185ab:	lea    rcx,[rsp+0x60]
   1400185b0:	call   QWORD PTR [rip+0x12ff2]        # 0x14002b5a8
   1400185b6:	mov    dl,0xa
   1400185b8:	mov    rcx,rax
   1400185bb:	call   QWORD PTR [rip+0x12de7]        # 0x14002b3a8
   1400185c1:	lea    rdx,[rip+0x155c8]        # 0x14002db90
   1400185c8:	lea    rcx,[rsp+0x60]
   1400185cd:	call   QWORD PTR [rip+0x12fdd]        # 0x14002b5b0
   1400185d3:	mov    rcx,QWORD PTR [r15+0x28]
   1400185d7:	mov    QWORD PTR [rsp+0x30],rcx
   1400185dc:	mov    eax,DWORD PTR [rcx+0x10]
   1400185df:	test   eax,eax
   1400185e1:	je     0x1400185f2
   1400185e3:	cmp    eax,0xffffffff
   1400185e6:	je     0x1400185f2
   1400185e8:	lock add DWORD PTR [rcx+0x10],0x1
   1400185ed:	mov    rcx,QWORD PTR [rsp+0x30]
   1400185f2:	test   BYTE PTR [rcx+0x28],0x1
   1400185f6:	jne    0x140018663
   1400185f8:	mov    eax,DWORD PTR [rcx+0x10]
   1400185fb:	cmp    eax,0x1
   1400185fe:	je     0x140018663
   140018600:	test   eax,eax
   140018602:	je     0x140018663
   140018604:	lea    r8,[rip+0xfffffffffffe8e05]        # 0x140001410
   14001860b:	lea    rdx,[rip+0xfffffffffffe8cfe]        # 0x140001310
   140018612:	mov    r9d,0x20
   140018618:	mov    DWORD PTR [rsp+0x20],0x8
   140018620:	call   QWORD PTR [rip+0x13222]        # 0x14002b848
   140018626:	mov    rcx,QWORD PTR [rsp+0x30]
   14001862b:	mov    edx,DWORD PTR [rcx+0x10]
   14001862e:	mov    rdi,rax
   140018631:	test   edx,edx
   140018633:	je     0x140018651
   140018635:	cmp    edx,0xffffffff
   140018638:	je     0x14001865e
   14001863a:	mov    edx,r14d
   14001863d:	lock xadd DWORD PTR [rcx+0x10],edx
   140018642:	add    edx,0xffffffff
   140018645:	setne  cl
   140018648:	test   cl,cl
   14001864a:	jne    0x14001865e
   14001864c:	mov    rcx,QWORD PTR [rsp+0x30]
   140018651:	lea    rdx,[rip+0xfffffffffffe8db8]        # 0x140001410
   140018658:	call   QWORD PTR [rip+0x1320a]        # 0x14002b868
   14001865e:	mov    QWORD PTR [rsp+0x30],rdi
   140018663:	lea    rdx,[rip+0x1517e]        # 0x14002d7e8
   14001866a:	xor    eax,eax
   14001866c:	mov    rcx,r14
   14001866f:	mov    rdi,rdx
   140018672:	mov    QWORD PTR [rsp+0x48],rdx
   140018677:	lea    rdx,[rsp+0x960]
   14001867f:	repnz scas al,BYTE PTR es:[rdi]
   140018681:	not    rcx
   140018684:	dec    rcx
   140018687:	mov    DWORD PTR [rsp+0x40],ecx
   14001868b:	lea    rcx,[rsp+0x3d8]
   140018693:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140018698:	movdqa XMMWORD PTR [rsp+0x960],xmm0
   1400186a1:	call   QWORD PTR [rip+0x131b9]        # 0x14002b860
   1400186a7:	lea    rcx,[rsp+0x1c8]
   1400186af:	mov    dl,0x2c
   1400186b1:	call   QWORD PTR [rip+0x13211]        # 0x14002b8c8
   1400186b7:	lea    r8,[rsp+0x3d8]
   1400186bf:	lea    rdx,[rsp+0x5b8]
   1400186c7:	mov    rcx,r15
   1400186ca:	mov    rdi,rax
   1400186cd:	call   0x140005ec0
   1400186d2:	movzx  r8d,WORD PTR [rdi]
   1400186d6:	mov    esi,0x1
   1400186db:	lea    rdx,[rsp+0x50]
   1400186e0:	mov    r9d,esi
   1400186e3:	mov    rcx,rax
   1400186e6:	mov    DWORD PTR [rsp+0x20],esi
   1400186ea:	call   QWORD PTR [rip+0x12f68]        # 0x14002b658
   1400186f0:	lea    rcx,[rsp+0x5b8]
   1400186f8:	call   QWORD PTR [rip+0x1319a]        # 0x14002b898
   1400186fe:	lea    rcx,[rsp+0x3d8]
   140018706:	call   QWORD PTR [rip+0x1318c]        # 0x14002b898
   14001870c:	lea    rdx,[rip+0x15475]        # 0x14002db88
   140018713:	xor    eax,eax
   140018715:	mov    rdi,rdx
   140018718:	mov    QWORD PTR [rsp+0x48],rdx
   14001871d:	mov    rcx,r14
   140018720:	repnz scas al,BYTE PTR es:[rdi]
   140018722:	lea    rdx,[rsp+0x980]
   14001872a:	not    rcx
   14001872d:	dec    rcx
   140018730:	mov    DWORD PTR [rsp+0x40],ecx
   140018734:	lea    rcx,[rsp+0x3e8]
   14001873c:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140018741:	movdqa XMMWORD PTR [rsp+0x980],xmm0
   14001874a:	call   QWORD PTR [rip+0x13110]        # 0x14002b860
   140018750:	lea    rdx,[rip+0x151d9]        # 0x14002d930
   140018757:	mov    rdi,rdx
   14001875a:	mov    QWORD PTR [rsp+0x48],rdx
   14001875f:	xor    eax,eax
   140018761:	mov    rcx,r14
   140018764:	lea    rdx,[rsp+0x9a0]
   14001876c:	repnz scas al,BYTE PTR es:[rdi]
   14001876e:	not    rcx
   140018771:	dec    rcx
   140018774:	mov    DWORD PTR [rsp+0x40],ecx
   140018778:	lea    rcx,[rsp+0xc0]
   140018780:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140018785:	movdqa XMMWORD PTR [rsp+0x9a0],xmm0
   14001878e:	call   QWORD PTR [rip+0x130cc]        # 0x14002b860
   140018794:	lea    rdx,[rsp+0xc0]
   14001879c:	lea    rcx,[rsp+0x50]
   1400187a1:	mov    r8d,esi
   1400187a4:	call   QWORD PTR [rip+0x12af6]        # 0x14002b2a0
   1400187aa:	test   al,al
   1400187ac:	jne    0x140018813
   1400187ae:	mov    rax,QWORD PTR [rsp+0x50]
   1400187b3:	mov    ecx,DWORD PTR [rax]
   1400187b5:	cmp    ecx,esi
   1400187b7:	je     0x1400187e7
   1400187b9:	test   ecx,ecx
   1400187bb:	je     0x1400187e7
   1400187bd:	lea    rcx,[rsp+0x50]
   1400187c2:	mov    r8d,esi
   1400187c5:	mov    edx,0x7fffffff
   1400187ca:	call   0x140001a10
   1400187cf:	test   rax,rax
   1400187d2:	je     0x140018813
   1400187d4:	lea    rdx,[rsp+0xc0]
   1400187dc:	mov    rcx,rax
   1400187df:	call   QWORD PTR [rip+0x130bb]        # 0x14002b8a0
   1400187e5:	jmp    0x140018813
   1400187e7:	lea    rdx,[rsp+0xc0]
   1400187ef:	lea    rcx,[rsp+0x5c8]
   1400187f7:	call   QWORD PTR [rip+0x130a3]        # 0x14002b8a0
   1400187fd:	lea    rcx,[rsp+0x50]
   140018802:	call   QWORD PTR [rip+0x13038]        # 0x14002b840
   140018808:	mov    rcx,QWORD PTR [rsp+0x5c8]
   140018810:	mov    QWORD PTR [rax],rcx
   140018813:	xor    eax,eax
   140018815:	lea    rdi,[rip+0x14ebc]        # 0x14002d6d8
   14001881c:	mov    rcx,r14
   14001881f:	repnz scas al,BYTE PTR es:[rdi]
   140018821:	mov    dl,0x5f
   140018823:	not    rcx
   140018826:	dec    rcx
   140018829:	mov    rbp,rcx
   14001882c:	mov    DWORD PTR [rsp+0x9b0],ecx
   140018833:	lea    rcx,[rsp+0x224]
   14001883b:	call   QWORD PTR [rip+0x13087]        # 0x14002b8c8
   140018841:	lea    rcx,[rsp+0x150]
   140018849:	mov    dl,0x2d
   14001884b:	mov    rbx,rax
   14001884e:	call   QWORD PTR [rip+0x13074]        # 0x14002b8c8
   140018854:	lea    rdx,[rsp+0x5d8]
   14001885c:	lea    rcx,[rsp+0xc0]
   140018864:	mov    rdi,rax
   140018867:	call   QWORD PTR [rip+0x12db3]        # 0x14002b620
   14001886d:	movzx  r8d,WORD PTR [rbx]
   140018871:	movzx  edx,WORD PTR [rdi]
   140018874:	mov    rcx,rax
   140018877:	mov    r9d,esi
   14001887a:	call   QWORD PTR [rip+0x12ce0]        # 0x14002b560
   140018880:	xor    r8d,r8d
   140018883:	mov    rcx,QWORD PTR [rax]
   140018886:	mov    rsi,rax
   140018889:	mov    edx,DWORD PTR [rcx+0x4]
   14001888c:	lea    rcx,[rsp+0x140]
   140018894:	add    edx,ebp
   140018896:	call   QWORD PTR [rip+0x12fdc]        # 0x14002b878
   14001889c:	lea    rcx,[rsp+0x140]
   1400188a4:	call   QWORD PTR [rip+0x13016]        # 0x14002b8c0
   1400188aa:	lea    rcx,[rip+0x14e27]        # 0x14002d6d8
   1400188b1:	mov    edx,ebp
   1400188b3:	mov    r8,rax
   1400188b6:	mov    rdi,rax
   1400188b9:	call   QWORD PTR [rip+0x12989]        # 0x14002b248
   1400188bf:	mov    rax,QWORD PTR [rsi]
   1400188c2:	movsxd rdx,ebp
   1400188c5:	lea    rbx,[rdi+rdx*2]
   1400188c9:	movsxd rdi,DWORD PTR [rax+0x4]
   1400188cd:	mov    rcx,rsi
   1400188d0:	add    rdi,rdi
   1400188d3:	call   QWORD PTR [rip+0x12fe7]        # 0x14002b8c0
   1400188d9:	mov    r8,rdi
   1400188dc:	mov    rdx,rax
   1400188df:	mov    rcx,rbx
   1400188e2:	call   0x14002951e
   1400188e7:	lea    rdx,[rsp+0x140]
   1400188ef:	lea    rcx,[rsp+0x90]
   1400188f7:	call   QWORD PTR [rip+0x12fa3]        # 0x14002b8a0
   1400188fd:	lea    rcx,[rsp+0x140]
   140018905:	call   QWORD PTR [rip+0x12f8d]        # 0x14002b898
   14001890b:	lea    rcx,[rsp+0x5d8]
   140018913:	call   QWORD PTR [rip+0x12f7f]        # 0x14002b898
   140018919:	mov    rdi,QWORD PTR [rsp+0x30]
   14001891e:	mov    eax,DWORD PTR [rdi+0x10]
   140018921:	cmp    eax,0x1
   140018924:	je     0x14001898c
   140018926:	test   eax,eax
   140018928:	je     0x14001898c
   14001892a:	lea    r8,[rip+0xfffffffffffe8adf]        # 0x140001410
   140018931:	lea    rdx,[rip+0xfffffffffffe89d8]        # 0x140001310
   140018938:	mov    r9d,0x20
   14001893e:	mov    rcx,rdi
   140018941:	mov    DWORD PTR [rsp+0x20],0x8
   140018949:	call   QWORD PTR [rip+0x12ef9]        # 0x14002b848
   14001894f:	mov    rcx,QWORD PTR [rsp+0x30]
   140018954:	mov    rdi,rax
   140018957:	mov    eax,DWORD PTR [rcx+0x10]
   14001895a:	test   eax,eax
   14001895c:	je     0x14001897a
   14001895e:	cmp    eax,0xffffffff
   140018961:	je     0x140018987
   140018963:	mov    eax,r14d
   140018966:	lock xadd DWORD PTR [rcx+0x10],eax
   14001896b:	add    eax,0xffffffff
   14001896e:	setne  al
   140018971:	test   al,al
   140018973:	jne    0x140018987
   140018975:	mov    rcx,QWORD PTR [rsp+0x30]
   14001897a:	lea    rdx,[rip+0xfffffffffffe8a8f]        # 0x140001410
   140018981:	call   QWORD PTR [rip+0x12ee1]        # 0x14002b868
   140018987:	mov    QWORD PTR [rsp+0x30],rdi
   14001898c:	mov    edx,DWORD PTR [rdi+0x24]
   14001898f:	lea    rcx,[rsp+0x90]
   140018997:	call   QWORD PTR [rip+0x1290b]        # 0x14002b2a8
   14001899d:	mov    rcx,QWORD PTR [rsp+0x30]
   1400189a2:	mov    edi,DWORD PTR [rcx+0x20]
   1400189a5:	mov    ebx,eax
   1400189a7:	mov    DWORD PTR [rsp+0x230],eax
   1400189ae:	test   edi,edi
   1400189b0:	je     0x1400189fd
   1400189b2:	xor    edx,edx
   1400189b4:	div    edi
   1400189b6:	mov    eax,edx
   1400189b8:	mov    rdx,QWORD PTR [rcx+0x8]
   1400189bc:	lea    rdi,[rdx+rax*8]
   1400189c0:	mov    rdx,QWORD PTR [rdx+rax*8]
   1400189c4:	cmp    rdx,rcx
   1400189c7:	je     0x140018a02
   1400189c9:	nop    DWORD PTR [rax+0x0]
   1400189d0:	cmp    ebx,DWORD PTR [rdx+0x8]
   1400189d3:	jne    0x1400189f0
   1400189d5:	lea    rcx,[rsp+0x90]
   1400189dd:	add    rdx,0x10
   1400189e1:	call   QWORD PTR [rip+0x128b1]        # 0x14002b298
   1400189e7:	mov    rcx,QWORD PTR [rsp+0x30]
   1400189ec:	test   al,al
   1400189ee:	jne    0x140018a02
   1400189f0:	mov    rdi,QWORD PTR [rdi]
   1400189f3:	mov    rdx,QWORD PTR [rdi]
   1400189f6:	cmp    rdx,rcx
   1400189f9:	jne    0x1400189d0
   1400189fb:	jmp    0x140018a02
   1400189fd:	lea    rdi,[rsp+0x30]
   140018a02:	mov    rax,QWORD PTR [rdi]
   140018a05:	cmp    rax,rcx
   140018a08:	jne    0x140018afe
   140018a0e:	call   QWORD PTR [rip+0x1297c]        # 0x14002b390
   140018a14:	test   al,al
   140018a16:	je     0x140018a8a
   140018a18:	mov    rax,QWORD PTR [rsp+0x30]
   140018a1d:	lea    rcx,[rsp+0x90]
   140018a25:	mov    edx,DWORD PTR [rax+0x24]
   140018a28:	call   QWORD PTR [rip+0x1287a]        # 0x14002b2a8
   140018a2e:	mov    rcx,QWORD PTR [rsp+0x30]
   140018a33:	mov    edi,DWORD PTR [rcx+0x20]
   140018a36:	mov    ebx,eax
   140018a38:	mov    DWORD PTR [rsp+0x230],eax
   140018a3f:	test   edi,edi
   140018a41:	je     0x140018a85
   140018a43:	xor    edx,edx
   140018a45:	div    edi
   140018a47:	mov    rax,QWORD PTR [rcx+0x8]
   140018a4b:	lea    rdi,[rax+rdx*8]
   140018a4f:	mov    rax,QWORD PTR [rax+rdx*8]
   140018a53:	cmp    rax,rcx
   140018a56:	je     0x140018a8a
   140018a58:	cmp    ebx,DWORD PTR [rax+0x8]
   140018a5b:	jne    0x140018a78
   140018a5d:	lea    rdx,[rax+0x10]
   140018a61:	lea    rcx,[rsp+0x90]
   140018a69:	call   QWORD PTR [rip+0x12829]        # 0x14002b298
   140018a6f:	test   al,al
   140018a71:	jne    0x140018a8a
   140018a73:	mov    rcx,QWORD PTR [rsp+0x30]
   140018a78:	mov    rdi,QWORD PTR [rdi]
   140018a7b:	mov    rax,QWORD PTR [rdi]
   140018a7e:	cmp    rax,rcx
   140018a81:	jne    0x140018a58
   140018a83:	jmp    0x140018a8a
   140018a85:	lea    rdi,[rsp+0x30]
   140018a8a:	lea    rcx,[rsp+0x430]
   140018a92:	call   QWORD PTR [rip+0x12df8]        # 0x14002b890
   140018a98:	mov    rcx,QWORD PTR [rsp+0x30]
   140018a9d:	mov    edx,0x8
   140018aa2:	mov    rbp,rax
   140018aa5:	call   QWORD PTR [rip+0x1281d]        # 0x14002b2c8
   140018aab:	mov    rsi,rax
   140018aae:	test   rax,rax
   140018ab1:	je     0x140018add
   140018ab3:	mov    rcx,QWORD PTR [rdi]
   140018ab6:	lea    rdx,[rsp+0x90]
   140018abe:	mov    DWORD PTR [rax+0x8],ebx
   140018ac1:	mov    QWORD PTR [rax],rcx
   140018ac4:	lea    rcx,[rax+0x10]
   140018ac8:	call   QWORD PTR [rip+0x12dd2]        # 0x14002b8a0
   140018ace:	lea    rcx,[rsi+0x18]
   140018ad2:	mov    rdx,rbp
   140018ad5:	call   QWORD PTR [rip+0x12dc5]        # 0x14002b8a0
   140018adb:	jmp    0x140018adf
   140018add:	xor    esi,esi
   140018adf:	mov    QWORD PTR [rdi],rsi
   140018ae2:	mov    rax,QWORD PTR [rsp+0x30]
   140018ae7:	lea    rcx,[rsp+0x430]
   140018aef:	inc    DWORD PTR [rax+0x14]
   140018af2:	add    rsi,0x18
   140018af6:	call   QWORD PTR [rip+0x12d9c]        # 0x14002b898
   140018afc:	jmp    0x140018b02
   140018afe:	lea    rsi,[rax+0x18]
   140018b02:	lea    rdx,[rsp+0x3e8]
   140018b0a:	mov    rcx,rsi
   140018b0d:	call   QWORD PTR [rip+0x12d9d]        # 0x14002b8b0
   140018b13:	lea    rcx,[rsp+0x90]
   140018b1b:	call   QWORD PTR [rip+0x12d77]        # 0x14002b898
   140018b21:	lea    rcx,[rsp+0xc0]
   140018b29:	call   QWORD PTR [rip+0x12d69]        # 0x14002b898
   140018b2f:	lea    rcx,[rsp+0x3e8]
   140018b37:	call   QWORD PTR [rip+0x12d5b]        # 0x14002b898
   140018b3d:	lea    rcx,[rsp+0x60]
   140018b42:	call   QWORD PTR [rip+0x12bf8]        # 0x14002b740
   140018b48:	lea    rdx,[rsp+0x5c0]
   140018b50:	mov    rdi,QWORD PTR [rax]
   140018b53:	mov    rcx,rax
   140018b56:	call   QWORD PTR [rdi]
   140018b58:	xor    r8d,r8d
   140018b5b:	mov    rcx,QWORD PTR [rax]
   140018b5e:	mov    rsi,rax
   140018b61:	mov    r13d,DWORD PTR [rcx+0x4]
   140018b65:	lea    rcx,[rsp+0x98]
   140018b6d:	add    r13d,0x14
   140018b71:	mov    edx,r13d
   140018b74:	call   QWORD PTR [rip+0x12a9e]        # 0x14002b618
   140018b7a:	lea    rcx,[rsp+0x98]
   140018b82:	call   QWORD PTR [rip+0x12648]        # 0x14002b1d0
   140018b88:	lea    rcx,[rip+0x14d79]        # 0x14002d908
   140018b8f:	mov    dl,0x74
   140018b91:	mov    rdi,rax
   140018b94:	mov    rbp,rax
   140018b97:	nop    WORD PTR [rax+rax*1+0x0]
   140018ba0:	inc    rcx
   140018ba3:	mov    BYTE PTR [rdi],dl
   140018ba5:	inc    rdi
   140018ba8:	movzx  edx,BYTE PTR [rcx]
   140018bab:	test   dl,dl
   140018bad:	jne    0x140018ba0
   140018baf:	mov    rcx,rsi
   140018bb2:	call   QWORD PTR [rip+0x12618]        # 0x14002b1d0
   140018bb8:	mov    rcx,rsi
   140018bbb:	mov    rbx,rax
   140018bbe:	call   QWORD PTR [rip+0x12a0c]        # 0x14002b5d0
   140018bc4:	cmp    rbx,rax
   140018bc7:	je     0x140018be1
   140018bc9:	nop    DWORD PTR [rax+0x0]
   140018bd0:	movzx  ecx,BYTE PTR [rbx]
   140018bd3:	inc    rbx
   140018bd6:	inc    rdi
   140018bd9:	mov    BYTE PTR [rdi-0x1],cl
   140018bdc:	cmp    rbx,rax
   140018bdf:	jne    0x140018bd0
   140018be1:	mov    rcx,rdi
   140018be4:	movsxd rax,r13d
   140018be7:	sub    rcx,rbp
   140018bea:	cmp    rax,rcx
   140018bed:	je     0x140018c01
   140018bef:	sub    edi,ebp
   140018bf1:	lea    rcx,[rsp+0x98]
   140018bf9:	mov    edx,edi
   140018bfb:	call   QWORD PTR [rip+0x128ef]        # 0x14002b4f0
   140018c01:	mov    rax,QWORD PTR [rsp+0x98]
   140018c09:	lea    rcx,[rsp+0x98]
   140018c11:	mov    edi,DWORD PTR [rax+0x4]
   140018c14:	call   QWORD PTR [rip+0x125b6]        # 0x14002b1d0
   140018c1a:	xor    edx,edx
   140018c1c:	test   rax,rax
   140018c1f:	je     0x140018c35
   140018c21:	test   edi,edi
   140018c23:	je     0x140018c35
   140018c25:	movzx  ecx,BYTE PTR [rax]
   140018c28:	inc    rax
   140018c2b:	test   cl,cl
   140018c2d:	je     0x140018c35
   140018c2f:	inc    edx
   140018c31:	cmp    edx,edi
   140018c33:	jb     0x140018c25
   140018c35:	lea    rcx,[rsp+0x98]
   140018c3d:	mov    DWORD PTR [rsp+0x40],edx
   140018c41:	call   QWORD PTR [rip+0x12589]        # 0x14002b1d0
   140018c47:	lea    rdx,[rsp+0x910]
   140018c4f:	lea    rcx,[rsp+0x3f8]
   140018c57:	mov    QWORD PTR [rsp+0x48],rax
   140018c5c:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140018c61:	movdqa XMMWORD PTR [rsp+0x910],xmm0
   140018c6a:	call   QWORD PTR [rip+0x12bf0]        # 0x14002b860
   140018c70:	lea    rdx,[rip+0x14ca9]        # 0x14002d920
   140018c77:	xor    eax,eax
   140018c79:	mov    rdi,rdx
   140018c7c:	mov    QWORD PTR [rsp+0x48],rdx
   140018c81:	mov    rcx,r14
   140018c84:	repnz scas al,BYTE PTR es:[rdi]
   140018c86:	lea    rdx,[rsp+0x790]
   140018c8e:	not    rcx
   140018c91:	dec    rcx
   140018c94:	mov    DWORD PTR [rsp+0x40],ecx
   140018c98:	lea    rcx,[rsp+0xb0]
   140018ca0:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140018ca5:	movdqa XMMWORD PTR [rsp+0x790],xmm0
   140018cae:	call   QWORD PTR [rip+0x12bac]        # 0x14002b860
   140018cb4:	mov    r13d,0x1
   140018cba:	lea    rdx,[rsp+0xb0]
   140018cc2:	lea    rcx,[rsp+0x50]
   140018cc7:	mov    r8d,r13d
   140018cca:	call   QWORD PTR [rip+0x125d0]        # 0x14002b2a0
   140018cd0:	test   al,al
   140018cd2:	jne    0x140018d3a
   140018cd4:	mov    rax,QWORD PTR [rsp+0x50]
   140018cd9:	mov    ecx,DWORD PTR [rax]
   140018cdb:	cmp    ecx,r13d
   140018cde:	je     0x140018d0e
   140018ce0:	test   ecx,ecx
   140018ce2:	je     0x140018d0e
   140018ce4:	lea    rcx,[rsp+0x50]
   140018ce9:	mov    r8d,r13d
   140018cec:	mov    edx,0x7fffffff
   140018cf1:	call   0x140001a10
   140018cf6:	test   rax,rax
   140018cf9:	je     0x140018d3a
   140018cfb:	lea    rdx,[rsp+0xb0]
   140018d03:	mov    rcx,rax
   140018d06:	call   QWORD PTR [rip+0x12b94]        # 0x14002b8a0
   140018d0c:	jmp    0x140018d3a
   140018d0e:	lea    rdx,[rsp+0xb0]
   140018d16:	lea    rcx,[rsp+0x598]
   140018d1e:	call   QWORD PTR [rip+0x12b7c]        # 0x14002b8a0
   140018d24:	lea    rcx,[rsp+0x50]
   140018d29:	call   QWORD PTR [rip+0x12b11]        # 0x14002b840
   140018d2f:	mov    rcx,QWORD PTR [rsp+0x598]
   140018d37:	mov    QWORD PTR [rax],rcx
   140018d3a:	xor    eax,eax
   140018d3c:	lea    rdi,[rip+0x14995]        # 0x14002d6d8
   140018d43:	mov    rcx,r14
   140018d46:	repnz scas al,BYTE PTR es:[rdi]
   140018d48:	mov    dl,0x5f
   140018d4a:	not    rcx
   140018d4d:	dec    rcx
   140018d50:	mov    rbp,rcx
   140018d53:	mov    DWORD PTR [rsp+0x9c0],ecx
   140018d5a:	lea    rcx,[rsp+0x1e8]
   140018d62:	call   QWORD PTR [rip+0x12b60]        # 0x14002b8c8
   140018d68:	lea    rcx,[rsp+0x160]
   140018d70:	mov    dl,0x2d
   140018d72:	mov    rbx,rax
   140018d75:	call   QWORD PTR [rip+0x12b4d]        # 0x14002b8c8
   140018d7b:	lea    rdx,[rsp+0x420]
   140018d83:	lea    rcx,[rsp+0xb0]
   140018d8b:	mov    rdi,rax
   140018d8e:	call   QWORD PTR [rip+0x1288c]        # 0x14002b620
   140018d94:	movzx  r8d,WORD PTR [rbx]
   140018d98:	movzx  edx,WORD PTR [rdi]
   140018d9b:	mov    rcx,rax
   140018d9e:	mov    r9d,r13d
   140018da1:	call   QWORD PTR [rip+0x127b9]        # 0x14002b560
   140018da7:	lea    rcx,[rsp+0x240]
   140018daf:	xor    r8d,r8d
   140018db2:	mov    rdx,QWORD PTR [rax]
   140018db5:	mov    rsi,rax
   140018db8:	mov    edx,DWORD PTR [rdx+0x4]
   140018dbb:	add    edx,ebp
   140018dbd:	call   QWORD PTR [rip+0x12ab5]        # 0x14002b878
   140018dc3:	lea    rcx,[rsp+0x240]
   140018dcb:	call   QWORD PTR [rip+0x12aef]        # 0x14002b8c0
   140018dd1:	lea    rcx,[rip+0x14900]        # 0x14002d6d8
   140018dd8:	mov    edx,ebp
   140018dda:	mov    r8,rax
   140018ddd:	mov    rdi,rax
   140018de0:	call   QWORD PTR [rip+0x12462]        # 0x14002b248
   140018de6:	mov    rax,QWORD PTR [rsi]
   140018de9:	movsxd rdx,ebp
   140018dec:	lea    rbx,[rdi+rdx*2]
   140018df0:	movsxd rdi,DWORD PTR [rax+0x4]
   140018df4:	mov    rcx,rsi
   140018df7:	add    rdi,rdi
   140018dfa:	call   QWORD PTR [rip+0x12ac0]        # 0x14002b8c0
   140018e00:	mov    r8,rdi
   140018e03:	mov    rdx,rax
   140018e06:	mov    rcx,rbx
   140018e09:	call   0x14002951e
   140018e0e:	lea    rdx,[rsp+0x240]
   140018e16:	lea    rcx,[rsp+0x88]
   140018e1e:	call   QWORD PTR [rip+0x12a7c]        # 0x14002b8a0
   140018e24:	lea    rcx,[rsp+0x240]
   140018e2c:	call   QWORD PTR [rip+0x12a66]        # 0x14002b898
   140018e32:	lea    rcx,[rsp+0x420]
   140018e3a:	call   QWORD PTR [rip+0x12a58]        # 0x14002b898
   140018e40:	mov    rdi,QWORD PTR [rsp+0x30]
   140018e45:	mov    eax,DWORD PTR [rdi+0x10]
   140018e48:	cmp    eax,r13d
   140018e4b:	je     0x140018eb3
   140018e4d:	test   eax,eax
   140018e4f:	je     0x140018eb3
   140018e51:	lea    r8,[rip+0xfffffffffffe85b8]        # 0x140001410
   140018e58:	lea    rdx,[rip+0xfffffffffffe84b1]        # 0x140001310
   140018e5f:	mov    r9d,0x20
   140018e65:	mov    rcx,rdi
   140018e68:	mov    DWORD PTR [rsp+0x20],0x8
   140018e70:	call   QWORD PTR [rip+0x129d2]        # 0x14002b848
   140018e76:	mov    rcx,QWORD PTR [rsp+0x30]
   140018e7b:	mov    rdi,rax
   140018e7e:	mov    eax,DWORD PTR [rcx+0x10]
   140018e81:	test   eax,eax
   140018e83:	je     0x140018ea1
   140018e85:	cmp    eax,0xffffffff
   140018e88:	je     0x140018eae
   140018e8a:	mov    eax,r14d
   140018e8d:	lock xadd DWORD PTR [rcx+0x10],eax
   140018e92:	add    eax,0xffffffff
   140018e95:	setne  al
   140018e98:	test   al,al
   140018e9a:	jne    0x140018eae
   140018e9c:	mov    rcx,QWORD PTR [rsp+0x30]
   140018ea1:	lea    rdx,[rip+0xfffffffffffe8568]        # 0x140001410
   140018ea8:	call   QWORD PTR [rip+0x129ba]        # 0x14002b868
   140018eae:	mov    QWORD PTR [rsp+0x30],rdi
   140018eb3:	mov    edx,DWORD PTR [rdi+0x24]
   140018eb6:	lea    rcx,[rsp+0x88]
   140018ebe:	call   QWORD PTR [rip+0x123e4]        # 0x14002b2a8
   140018ec4:	mov    rcx,QWORD PTR [rsp+0x30]
   140018ec9:	mov    edi,DWORD PTR [rcx+0x20]
   140018ecc:	mov    ebx,eax
   140018ece:	mov    DWORD PTR [rsp+0x238],eax
   140018ed5:	test   edi,edi
   140018ed7:	je     0x140018f1d
   140018ed9:	xor    edx,edx
   140018edb:	div    edi
   140018edd:	mov    eax,edx
   140018edf:	mov    rdx,QWORD PTR [rcx+0x8]
   140018ee3:	lea    rdi,[rdx+rax*8]
   140018ee7:	mov    rdx,QWORD PTR [rdx+rax*8]
   140018eeb:	cmp    rdx,rcx
   140018eee:	je     0x140018f22
   140018ef0:	cmp    ebx,DWORD PTR [rdx+0x8]
   140018ef3:	jne    0x140018f10
   140018ef5:	lea    rcx,[rsp+0x88]
   140018efd:	add    rdx,0x10
   140018f01:	call   QWORD PTR [rip+0x12391]        # 0x14002b298
   140018f07:	mov    rcx,QWORD PTR [rsp+0x30]
   140018f0c:	test   al,al
   140018f0e:	jne    0x140018f22
   140018f10:	mov    rdi,QWORD PTR [rdi]
   140018f13:	mov    rdx,QWORD PTR [rdi]
   140018f16:	cmp    rdx,rcx
   140018f19:	jne    0x140018ef0
   140018f1b:	jmp    0x140018f22
   140018f1d:	lea    rdi,[rsp+0x30]
   140018f22:	mov    rax,QWORD PTR [rdi]
   140018f25:	cmp    rax,rcx
   140018f28:	jne    0x14001901e
   140018f2e:	call   QWORD PTR [rip+0x1245c]        # 0x14002b390
   140018f34:	test   al,al
   140018f36:	je     0x140018faa
   140018f38:	mov    rax,QWORD PTR [rsp+0x30]
   140018f3d:	lea    rcx,[rsp+0x88]
   140018f45:	mov    edx,DWORD PTR [rax+0x24]
   140018f48:	call   QWORD PTR [rip+0x1235a]        # 0x14002b2a8
   140018f4e:	mov    rcx,QWORD PTR [rsp+0x30]
   140018f53:	mov    edi,DWORD PTR [rcx+0x20]
   140018f56:	mov    ebx,eax
   140018f58:	mov    DWORD PTR [rsp+0x238],eax
   140018f5f:	test   edi,edi
   140018f61:	je     0x140018fa5
   140018f63:	xor    edx,edx
   140018f65:	div    edi
   140018f67:	mov    rax,QWORD PTR [rcx+0x8]
   140018f6b:	lea    rdi,[rax+rdx*8]
   140018f6f:	mov    rax,QWORD PTR [rax+rdx*8]
   140018f73:	cmp    rax,rcx
   140018f76:	je     0x140018faa
   140018f78:	cmp    ebx,DWORD PTR [rax+0x8]
   140018f7b:	jne    0x140018f98
   140018f7d:	lea    rdx,[rax+0x10]
   140018f81:	lea    rcx,[rsp+0x88]
   140018f89:	call   QWORD PTR [rip+0x12309]        # 0x14002b298
   140018f8f:	test   al,al
   140018f91:	jne    0x140018faa
   140018f93:	mov    rcx,QWORD PTR [rsp+0x30]
   140018f98:	mov    rdi,QWORD PTR [rdi]
   140018f9b:	mov    rax,QWORD PTR [rdi]
   140018f9e:	cmp    rax,rcx
   140018fa1:	jne    0x140018f78
   140018fa3:	jmp    0x140018faa
   140018fa5:	lea    rdi,[rsp+0x30]
   140018faa:	lea    rcx,[rsp+0x440]
   140018fb2:	call   QWORD PTR [rip+0x128d8]        # 0x14002b890
   140018fb8:	mov    rcx,QWORD PTR [rsp+0x30]
   140018fbd:	mov    edx,0x8
   140018fc2:	mov    rbp,rax
   140018fc5:	call   QWORD PTR [rip+0x122fd]        # 0x14002b2c8
   140018fcb:	mov    rsi,rax
   140018fce:	test   rax,rax
   140018fd1:	je     0x140018ffd
   140018fd3:	mov    rcx,QWORD PTR [rdi]
   140018fd6:	lea    rdx,[rsp+0x88]
   140018fde:	mov    DWORD PTR [rax+0x8],ebx
   140018fe1:	mov    QWORD PTR [rax],rcx
   140018fe4:	lea    rcx,[rax+0x10]
   140018fe8:	call   QWORD PTR [rip+0x128b2]        # 0x14002b8a0
   140018fee:	lea    rcx,[rsi+0x18]
   140018ff2:	mov    rdx,rbp
   140018ff5:	call   QWORD PTR [rip+0x128a5]        # 0x14002b8a0
   140018ffb:	jmp    0x140018fff
   140018ffd:	xor    esi,esi
   140018fff:	mov    QWORD PTR [rdi],rsi
   140019002:	mov    rax,QWORD PTR [rsp+0x30]
   140019007:	lea    rcx,[rsp+0x440]
   14001900f:	inc    DWORD PTR [rax+0x14]
   140019012:	call   QWORD PTR [rip+0x12880]        # 0x14002b898
   140019018:	lea    rcx,[rsi+0x18]
   14001901c:	jmp    0x140019022
   14001901e:	lea    rcx,[rax+0x18]
   140019022:	lea    rdx,[rsp+0x3f8]
   14001902a:	call   QWORD PTR [rip+0x12880]        # 0x14002b8b0
   140019030:	lea    rcx,[rsp+0x88]
   140019038:	call   QWORD PTR [rip+0x1285a]        # 0x14002b898
   14001903e:	lea    rcx,[rsp+0xb0]
   140019046:	call   QWORD PTR [rip+0x1284c]        # 0x14002b898
   14001904c:	lea    rcx,[rsp+0x3f8]
   140019054:	call   QWORD PTR [rip+0x1283e]        # 0x14002b898
   14001905a:	lea    rcx,[rsp+0x98]
   140019062:	call   QWORD PTR [rip+0x12160]        # 0x14002b1c8
   140019068:	lea    rcx,[rsp+0x5c0]
   140019070:	call   QWORD PTR [rip+0x12152]        # 0x14002b1c8
   140019076:	lea    rdx,[rip+0x14817]        # 0x14002d894
   14001907d:	xor    eax,eax
   14001907f:	mov    rdi,rdx
   140019082:	mov    QWORD PTR [rsp+0x48],rdx
   140019087:	mov    rcx,r14
   14001908a:	repnz scas al,BYTE PTR es:[rdi]
   14001908c:	lea    rdx,[rsp+0x8b0]
   140019094:	not    rcx
   140019097:	dec    rcx
   14001909a:	mov    DWORD PTR [rsp+0x40],ecx
   14001909e:	lea    rcx,[rsp+0x250]
   1400190a6:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   1400190ab:	movdqa XMMWORD PTR [rsp+0x8b0],xmm0
   1400190b4:	call   QWORD PTR [rip+0x127a6]        # 0x14002b860
   1400190ba:	lea    r9,[rsp+0x250]
   1400190c2:	lea    r8,[rip+0x147d7]        # 0x14002d8a0
   1400190c9:	lea    rdx,[rsp+0x50]
   1400190ce:	lea    rcx,[rsp+0x30]
   1400190d3:	call   0x140013790
   1400190d8:	lea    rcx,[rsp+0x250]
   1400190e0:	call   QWORD PTR [rip+0x127b2]        # 0x14002b898
   1400190e6:	lea    rdx,[r15+0x10]
   1400190ea:	lea    rcx,[rsp+0x418]
   1400190f2:	call   QWORD PTR [rip+0x127a8]        # 0x14002b8a0
   1400190f8:	mov    rdx,QWORD PTR [rsp+0x418]
   140019100:	lea    rcx,[rsp+0x418]
   140019108:	cmp    DWORD PTR [rdx+0x4],0x0
   14001910c:	setne  dil
   140019110:	call   QWORD PTR [rip+0x12782]        # 0x14002b898
   140019116:	test   dil,dil
   140019119:	je     0x140019254
   14001911f:	lea    rdx,[r15+0x10]
   140019123:	lea    rcx,[rsp+0x260]
   14001912b:	call   QWORD PTR [rip+0x1276f]        # 0x14002b8a0
   140019131:	lea    r8,[rsp+0x248]
   140019139:	lea    rdx,[rsp+0x1d8]
   140019141:	lea    rcx,[rsp+0x260]
   140019149:	call   0x140004f70
   14001914e:	lea    rcx,[rsp+0x260]
   140019156:	call   QWORD PTR [rip+0x1273c]        # 0x14002b898
   14001915c:	mov    ecx,DWORD PTR [rsp+0x1d8]
   140019163:	lea    rdx,[rsp+0x450]
   14001916b:	mov    QWORD PTR [rsp+0x20],rdx
   140019170:	mov    edx,DWORD PTR [rsp+0x248]
   140019177:	xor    r9d,r9d
   14001917a:	xor    r8d,r8d
   14001917d:	call   0x140004b70
   140019182:	test   al,al
   140019184:	je     0x140019216
   14001918a:	mov    rdx,QWORD PTR [rsp+0x450]
   140019192:	test   rdx,rdx
   140019195:	je     0x1400191b0
   140019197:	xor    eax,eax
   140019199:	mov    rcx,r14
   14001919c:	mov    rdi,rdx
   14001919f:	repnz scas al,BYTE PTR es:[rdi]
   1400191a1:	not    rcx
   1400191a4:	dec    rcx
   1400191a7:	mov    DWORD PTR [rsp+0x3b0],ecx
   1400191ae:	jmp    0x1400191bb
   1400191b0:	mov    DWORD PTR [rsp+0x3b0],0x0
   1400191bb:	mov    QWORD PTR [rsp+0x3b8],rdx
   1400191c3:	movaps xmm0,XMMWORD PTR [rsp+0x3b0]
   1400191cb:	lea    rcx,[rsp+0x3a0]
   1400191d3:	lea    rdx,[rsp+0x7b0]
   1400191db:	movdqa XMMWORD PTR [rsp+0x7b0],xmm0
   1400191e4:	call   QWORD PTR [rip+0x12676]        # 0x14002b860
   1400191ea:	lea    r9,[rsp+0x3a0]
   1400191f2:	lea    r8,[rip+0x14747]        # 0x14002d940
   1400191f9:	lea    rdx,[rsp+0x50]
   1400191fe:	lea    rcx,[rsp+0x30]
   140019203:	call   0x140013790
   140019208:	lea    rcx,[rsp+0x3a0]
   140019210:	call   QWORD PTR [rip+0x12682]        # 0x14002b898
   140019216:	lea    rdx,[r15+0x10]
   14001921a:	lea    rcx,[rsp+0x270]
   140019222:	call   QWORD PTR [rip+0x12678]        # 0x14002b8a0
   140019228:	lea    r9,[rsp+0x270]
   140019230:	lea    r8,[rip+0x14749]        # 0x14002d980
   140019237:	lea    rdx,[rsp+0x50]
   14001923c:	lea    rcx,[rsp+0x30]
   140019241:	call   0x140013790
   140019246:	lea    rcx,[rsp+0x270]
   14001924e:	call   QWORD PTR [rip+0x12644]        # 0x14002b898
   140019254:	lea    rdx,[r15+0x18]
   140019258:	lea    rcx,[rsp+0x340]
   140019260:	call   QWORD PTR [rip+0x1263a]        # 0x14002b8a0
   140019266:	mov    rcx,QWORD PTR [rsp+0x340]
   14001926e:	cmp    DWORD PTR [rcx+0x4],0x0
   140019272:	lea    rcx,[rsp+0x340]
   14001927a:	setne  dil
   14001927e:	call   QWORD PTR [rip+0x12614]        # 0x14002b898
   140019284:	test   dil,dil
   140019287:	je     0x1400192c7
   140019289:	lea    rdx,[r15+0x18]
   14001928d:	lea    rcx,[rsp+0x280]
   140019295:	call   QWORD PTR [rip+0x12605]        # 0x14002b8a0
   14001929b:	lea    r9,[rsp+0x280]
   1400192a3:	lea    r8,[rip+0x146be]        # 0x14002d968
   1400192aa:	lea    rdx,[rsp+0x50]
   1400192af:	lea    rcx,[rsp+0x30]
   1400192b4:	call   0x140013790
   1400192b9:	lea    rcx,[rsp+0x280]
   1400192c1:	call   QWORD PTR [rip+0x125d1]        # 0x14002b898
   1400192c7:	movzx  edx,BYTE PTR [rsp+0xa10]
   1400192cf:	test   dl,dl
   1400192d1:	je     0x140019343
   1400192d3:	lea    rdx,[rip+0x14676]        # 0x14002d950
   1400192da:	xor    eax,eax
   1400192dc:	mov    rcx,r14
   1400192df:	mov    rdi,rdx
   1400192e2:	mov    QWORD PTR [rsp+0x48],rdx
   1400192e7:	lea    rdx,[rsp+0x970]
   1400192ef:	repnz scas al,BYTE PTR es:[rdi]
   1400192f1:	not    rcx
   1400192f4:	dec    rcx
   1400192f7:	mov    DWORD PTR [rsp+0x40],ecx
   1400192fb:	lea    rcx,[rsp+0x400]
   140019303:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140019308:	movdqa XMMWORD PTR [rsp+0x970],xmm0
   140019311:	call   QWORD PTR [rip+0x12549]        # 0x14002b860
   140019317:	lea    r9,[rsp+0x400]
   14001931f:	lea    r8,[rip+0x14632]        # 0x14002d958
   140019326:	lea    rdx,[rsp+0x50]
   14001932b:	lea    rcx,[rsp+0x30]
   140019330:	call   0x140013790
   140019335:	lea    rcx,[rsp+0x400]
   14001933d:	call   QWORD PTR [rip+0x12555]        # 0x14002b898
   140019343:	lea    rcx,[rsp+0xa0]
   14001934b:	call   QWORD PTR [rip+0x1253f]        # 0x14002b890
   140019351:	mov    r11,QWORD PTR [rsp+0x50]
   140019356:	mov    QWORD PTR [rsp+0x170],r11
   14001935e:	mov    eax,DWORD PTR [r11]
   140019361:	test   eax,eax
   140019363:	je     0x140019370
   140019365:	cmp    eax,0xffffffff
   140019368:	je     0x1400193d6
   14001936a:	lock add DWORD PTR [r11],r13d
   14001936e:	jmp    0x1400193ce
   140019370:	mov    edx,DWORD PTR [r11+0x4]
   140019374:	lea    rcx,[rsp+0x170]
   14001937c:	call   QWORD PTR [rip+0x124d6]        # 0x14002b858
   140019382:	mov    r11,QWORD PTR [rsp+0x170]
   14001938a:	movsxd rax,DWORD PTR [r11+0xc]
   14001938e:	lea    rsi,[r11+rax*8+0x10]
   140019393:	mov    rax,QWORD PTR [rsp+0x50]
   140019398:	movsxd rcx,DWORD PTR [rax+0x8]
   14001939c:	lea    rbx,[rax+rcx*8+0x10]
   1400193a1:	movsxd rax,DWORD PTR [r11+0x8]
   1400193a5:	lea    rdi,[r11+rax*8+0x10]
   1400193aa:	cmp    rdi,rsi
   1400193ad:	je     0x1400193d6
   1400193af:	nop
   1400193b0:	test   rdi,rdi
   1400193b3:	je     0x1400193c1
   1400193b5:	mov    rdx,rbx
   1400193b8:	mov    rcx,rdi
   1400193bb:	call   QWORD PTR [rip+0x124df]        # 0x14002b8a0
   1400193c1:	add    rdi,0x8
   1400193c5:	add    rbx,0x8
   1400193c9:	cmp    rdi,rsi
   1400193cc:	jne    0x1400193b0
   1400193ce:	mov    r11,QWORD PTR [rsp+0x170]
   1400193d6:	xor    ebp,ebp
   1400193d8:	lea    rsi,[rip+0x147a5]        # 0x14002db84
   1400193df:	mov    DWORD PTR [rsp+0x178],ebp
   1400193e6:	movsxd rax,DWORD PTR [r11+0x8]
   1400193ea:	lea    rbx,[r11+rax*8+0x10]
   1400193ef:	mov    QWORD PTR [rsp+0x180],rbx
   1400193f7:	movsxd rax,DWORD PTR [r11+0xc]
   1400193fb:	lea    rcx,[r11+rax*8+0x10]
   140019400:	mov    QWORD PTR [rsp+0x188],rcx
   140019408:	nop    DWORD PTR [rax+rax*1+0x0]
   140019410:	mov    eax,r13d
   140019413:	mov    DWORD PTR [rsp+0x178],eax
   14001941a:	cmp    rbx,rcx
   14001941d:	je     0x14001956e
   140019423:	test   eax,eax
   140019425:	je     0x14001954d
   14001942b:	lea    rcx,[rsp+0xa0]
   140019433:	mov    rdx,rbx
   140019436:	call   QWORD PTR [rip+0x11da4]        # 0x14002b1e0
   14001943c:	xor    eax,eax
   14001943e:	mov    rcx,r14
   140019441:	mov    rdi,rsi
   140019444:	mov    QWORD PTR [rsp+0x48],rsi
   140019449:	lea    rdx,[rsp+0x7d0]
   140019451:	repnz scas al,BYTE PTR es:[rdi]
   140019453:	not    rcx
   140019456:	dec    rcx
   140019459:	mov    DWORD PTR [rsp+0x40],ecx
   14001945d:	lea    rcx,[rsp+0xa0]
   140019465:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   14001946a:	movdqa XMMWORD PTR [rsp+0x7d0],xmm0
   140019473:	call   QWORD PTR [rip+0x11e0f]        # 0x14002b288
   140019479:	lea    rcx,[rsp+0x510]
   140019481:	mov    rdx,rbx
   140019484:	call   0x140011eb0
   140019489:	mov    rcx,QWORD PTR [rsp+0x30]
   14001948e:	mov    rdi,rax
   140019491:	cmp    DWORD PTR [rcx+0x14],ebp
   140019494:	je     0x1400194d7
   140019496:	mov    eax,ebp
   140019498:	cmp    DWORD PTR [rcx+0x20],eax
   14001949b:	je     0x1400194a9
   14001949d:	mov    edx,DWORD PTR [rcx+0x24]
   1400194a0:	mov    rcx,rdi
   1400194a3:	call   QWORD PTR [rip+0x11dff]        # 0x14002b2a8
   1400194a9:	lea    rcx,[rsp+0x30]
   1400194ae:	mov    r8d,eax
   1400194b1:	mov    rdx,rdi
   1400194b4:	call   0x14001c3c0
   1400194b9:	mov    rdx,QWORD PTR [rax]
   1400194bc:	cmp    rdx,QWORD PTR [rsp+0x30]
   1400194c1:	je     0x1400194d7
   1400194c3:	lea    rcx,[rsp+0x148]
   1400194cb:	add    rdx,0x18
   1400194cf:	call   QWORD PTR [rip+0x123cb]        # 0x14002b8a0
   1400194d5:	jmp    0x1400194e5
   1400194d7:	lea    rcx,[rsp+0x148]
   1400194df:	call   QWORD PTR [rip+0x123ab]        # 0x14002b890
   1400194e5:	lea    rdx,[rsp+0x148]
   1400194ed:	lea    rcx,[rsp+0xa0]
   1400194f5:	call   QWORD PTR [rip+0x11ce5]        # 0x14002b1e0
   1400194fb:	lea    rcx,[rsp+0x148]
   140019503:	call   QWORD PTR [rip+0x1238f]        # 0x14002b898
   140019509:	lea    rcx,[rsp+0x510]
   140019511:	call   QWORD PTR [rip+0x12381]        # 0x14002b898
   140019517:	lea    rcx,[rsp+0x222]
   14001951f:	mov    dl,0xa
   140019521:	call   QWORD PTR [rip+0x123a1]        # 0x14002b8c8
   140019527:	lea    rcx,[rsp+0xa0]
   14001952f:	movzx  edx,WORD PTR [rax]
   140019532:	call   QWORD PTR [rip+0x12018]        # 0x14002b550
   140019538:	mov    eax,DWORD PTR [rsp+0x178]
   14001953f:	dec    eax
   140019541:	mov    DWORD PTR [rsp+0x178],eax
   140019548:	jmp    0x140019423
   14001954d:	mov    rbx,QWORD PTR [rsp+0x180]
   140019555:	mov    rcx,QWORD PTR [rsp+0x188]
   14001955d:	add    rbx,0x8
   140019561:	mov    QWORD PTR [rsp+0x180],rbx
   140019569:	jmp    0x140019410
   14001956e:	mov    rbx,QWORD PTR [rsp+0x170]
   140019576:	mov    eax,DWORD PTR [rbx]
   140019578:	test   eax,eax
   14001957a:	je     0x14001959a
   14001957c:	cmp    eax,0xffffffff
   14001957f:	je     0x1400195cc
   140019581:	mov    eax,r14d
   140019584:	lock xadd DWORD PTR [rbx],eax
   140019588:	add    eax,0xffffffff
   14001958b:	setne  al
   14001958e:	test   al,al
   140019590:	jne    0x1400195cc
   140019592:	mov    rbx,QWORD PTR [rsp+0x170]
   14001959a:	movsxd rax,DWORD PTR [rbx+0xc]
   14001959e:	lea    rdi,[rbx+rax*8+0x10]
   1400195a3:	movsxd rax,DWORD PTR [rbx+0x8]
   1400195a7:	lea    rsi,[rbx+rax*8+0x10]
   1400195ac:	cmp    rsi,rdi
   1400195af:	je     0x1400195c3
   1400195b1:	sub    rdi,0x8
   1400195b5:	mov    rcx,rdi
   1400195b8:	call   QWORD PTR [rip+0x122da]        # 0x14002b898
   1400195be:	cmp    rdi,rsi
   1400195c1:	jne    0x1400195b1
   1400195c3:	mov    rcx,rbx
   1400195c6:	call   QWORD PTR [rip+0x122a4]        # 0x14002b870
   1400195cc:	lea    rdx,[rip+0x140e5]        # 0x14002d6b8
   1400195d3:	lea    rcx,[rsp+0x470]
   1400195db:	mov    r8d,r14d
   1400195de:	call   QWORD PTR [rip+0x11c9c]        # 0x14002b280
   1400195e4:	lea    rcx,[rsp+0x580]
   1400195ec:	mov    rdi,rax
   1400195ef:	call   QWORD PTR [rip+0x1229b]        # 0x14002b890
   1400195f5:	lea    rcx,[rsp+0x460]
   1400195fd:	mov    rdx,rax
   140019600:	lea    rax,[rsp+0xa0]
   140019608:	movzx  r9d,r13b
   14001960c:	mov    r8,rdi
   14001960f:	mov    QWORD PTR [rsp+0x20],rax
   140019614:	call   0x140013950
   140019619:	lea    rcx,[rsp+0x60]
   14001961e:	mov    rdx,rax
   140019621:	call   QWORD PTR [rip+0x11f81]        # 0x14002b5a8
   140019627:	lea    rcx,[rsp+0x460]
   14001962f:	call   QWORD PTR [rip+0x12263]        # 0x14002b898
   140019635:	lea    rcx,[rsp+0x580]
   14001963d:	call   QWORD PTR [rip+0x12255]        # 0x14002b898
   140019643:	lea    rcx,[rsp+0x470]
   14001964b:	call   QWORD PTR [rip+0x12247]        # 0x14002b898
   140019651:	lea    rdx,[rsp+0x290]
   140019659:	mov    rcx,r15
   14001965c:	call   0x140008940
   140019661:	mov    rdi,rax
   140019664:	mov    rcx,QWORD PTR [rax]
   140019667:	mov    QWORD PTR [rsp+0xc8],rcx
   14001966f:	mov    edx,DWORD PTR [rcx]
   140019671:	test   edx,edx
   140019673:	je     0x140019680
   140019675:	cmp    edx,0xffffffff
   140019678:	je     0x1400196f3
   14001967a:	lock add DWORD PTR [rcx],r13d
   14001967e:	jmp    0x1400196f3
   140019680:	mov    edx,DWORD PTR [rcx+0x4]
   140019683:	lea    rcx,[rsp+0xc8]
   14001968b:	call   QWORD PTR [rip+0x121c7]        # 0x14002b858
   140019691:	mov    rcx,rdi
   140019694:	call   QWORD PTR [rip+0x12006]        # 0x14002b6a0
   14001969a:	lea    rcx,[rsp+0xc8]
   1400196a2:	mov    rbx,rax
   1400196a5:	call   QWORD PTR [rip+0x11fed]        # 0x14002b698
   1400196ab:	lea    rcx,[rsp+0xc8]
   1400196b3:	mov    rsi,rax
   1400196b6:	call   QWORD PTR [rip+0x11fe4]        # 0x14002b6a0
   1400196bc:	mov    rdi,rax
   1400196bf:	cmp    rax,rsi
   1400196c2:	je     0x1400196f3
   1400196c4:	mov    ecx,0x78
   1400196c9:	call   0x14002952a
   1400196ce:	test   rax,rax
   1400196d1:	je     0x1400196e0
   1400196d3:	mov    rdx,QWORD PTR [rbx]
   1400196d6:	mov    rcx,rax
   1400196d9:	call   0x1400020d0
   1400196de:	jmp    0x1400196e3
   1400196e0:	mov    rax,rbp
   1400196e3:	mov    QWORD PTR [rdi],rax
   1400196e6:	add    rdi,0x8
   1400196ea:	add    rbx,0x8
   1400196ee:	cmp    rdi,rsi
   1400196f1:	jne    0x1400196c4
   1400196f3:	lea    rcx,[rsp+0xc8]
   1400196fb:	mov    DWORD PTR [rsp+0xd0],ebp
   140019702:	call   QWORD PTR [rip+0x11f98]        # 0x14002b6a0
   140019708:	lea    rcx,[rsp+0xc8]
   140019710:	mov    QWORD PTR [rsp+0xd8],rax
   140019718:	call   QWORD PTR [rip+0x11f7a]        # 0x14002b698
   14001971e:	mov    rsi,QWORD PTR [rsp+0x290]
   140019726:	mov    QWORD PTR [rsp+0xe0],rax
   14001972e:	mov    eax,DWORD PTR [rsi]
   140019730:	test   eax,eax
   140019732:	je     0x140019752
   140019734:	cmp    eax,0xffffffff
   140019737:	je     0x1400197a0
   140019739:	mov    eax,r14d
   14001973c:	lock xadd DWORD PTR [rsi],eax
   140019740:	add    eax,0xffffffff
   140019743:	setne  al
   140019746:	test   al,al
   140019748:	jne    0x1400197a0
   14001974a:	mov    rsi,QWORD PTR [rsp+0x290]
   140019752:	movsxd rax,DWORD PTR [rsi+0xc]
   140019756:	lea    rdi,[rsi+rax*8+0x10]
   14001975b:	movsxd rax,DWORD PTR [rsi+0x8]
   14001975f:	lea    rbp,[rsi+rax*8+0x10]
   140019764:	cmp    rbp,rdi
   140019767:	je     0x140019792
   140019769:	nop    DWORD PTR [rax+0x0]
   140019770:	mov    rbx,QWORD PTR [rdi-0x8]
   140019774:	sub    rdi,0x8
   140019778:	test   rbx,rbx
   14001977b:	je     0x14001978d
   14001977d:	mov    rcx,rbx
   140019780:	call   0x140001ea0
   140019785:	mov    rcx,rbx
   140019788:	call   0x140029524
   14001978d:	cmp    rdi,rbp
   140019790:	jne    0x140019770
   140019792:	mov    rcx,rsi
   140019795:	call   QWORD PTR [rip+0x120d5]        # 0x14002b870
   14001979b:	nop    DWORD PTR [rax+rax*1+0x0]
   1400197a0:	mov    eax,DWORD PTR [rsp+0xd0]
   1400197a7:	inc    DWORD PTR [rsp+0xd0]
   1400197ae:	test   eax,eax
   1400197b0:	jne    0x1400197c9
   1400197b2:	mov    rax,QWORD PTR [rsp+0xe0]
   1400197ba:	cmp    QWORD PTR [rsp+0xd8],rax
   1400197c2:	je     0x1400197c9
   1400197c4:	mov    r13b,0x1
   1400197c7:	jmp    0x1400197cc
   1400197c9:	xor    r13b,r13b
   1400197cc:	test   r12b,0x40
   1400197d0:	je     0x14001984b
   1400197d2:	mov    rsi,QWORD PTR [rsp+0x520]
   1400197da:	and    r12d,0xffffffbf
   1400197de:	mov    eax,DWORD PTR [rsi]
   1400197e0:	test   eax,eax
   1400197e2:	je     0x140019802
   1400197e4:	cmp    eax,0xffffffff
   1400197e7:	je     0x14001984b
   1400197e9:	mov    eax,r14d
   1400197ec:	lock xadd DWORD PTR [rsi],eax
   1400197f0:	add    eax,0xffffffff
   1400197f3:	setne  al
   1400197f6:	test   al,al
   1400197f8:	jne    0x14001984b
   1400197fa:	mov    rsi,QWORD PTR [rsp+0x520]
   140019802:	movsxd rax,DWORD PTR [rsi+0xc]
   140019806:	lea    rdi,[rsi+rax*8+0x10]
   14001980b:	movsxd rax,DWORD PTR [rsi+0x8]
   14001980f:	lea    rbp,[rsi+rax*8+0x10]
   140019814:	cmp    rbp,rdi
   140019817:	je     0x140019842
   140019819:	nop    DWORD PTR [rax+0x0]
   140019820:	mov    rbx,QWORD PTR [rdi-0x8]
   140019824:	sub    rdi,0x8
   140019828:	test   rbx,rbx
   14001982b:	je     0x14001983d
   14001982d:	mov    rcx,rbx
   140019830:	call   0x140001ea0
   140019835:	mov    rcx,rbx
   140019838:	call   0x140029524
   14001983d:	cmp    rdi,rbp
   140019840:	jne    0x140019820
   140019842:	mov    rcx,rsi
   140019845:	call   QWORD PTR [rip+0x12025]        # 0x14002b870
   14001984b:	test   r13b,r13b
   14001984e:	je     0x14001b867
   140019854:	mov    rax,QWORD PTR [rsp+0xd8]
   14001985c:	mov    r15,QWORD PTR [rax]
   14001985f:	mov    QWORD PTR [rsp+0x3b0],r15
   140019867:	test   r12b,r12b
   14001986a:	jns    0x1400198f0
   140019870:	mov    rsi,QWORD PTR [rsp+0x480]
   140019878:	btr    r12d,0x7
   14001987d:	mov    eax,DWORD PTR [rsi]
   14001987f:	test   eax,eax
   140019881:	je     0x1400198a1
   140019883:	cmp    eax,0xffffffff
   140019886:	je     0x1400198f0
   140019888:	mov    eax,r14d
   14001988b:	lock xadd DWORD PTR [rsi],eax
   14001988f:	add    eax,0xffffffff
   140019892:	setne  al
   140019895:	test   al,al
   140019897:	jne    0x1400198f0
   140019899:	mov    rsi,QWORD PTR [rsp+0x480]
   1400198a1:	movsxd rax,DWORD PTR [rsi+0xc]
   1400198a5:	lea    rdi,[rsi+rax*8+0x10]
   1400198aa:	movsxd rax,DWORD PTR [rsi+0x8]
   1400198ae:	lea    rbp,[rsi+rax*8+0x10]
   1400198b3:	cmp    rbp,rdi
   1400198b6:	je     0x1400198e2
   1400198b8:	nop    DWORD PTR [rax+rax*1+0x0]
   1400198c0:	mov    rbx,QWORD PTR [rdi-0x8]
   1400198c4:	sub    rdi,0x8
   1400198c8:	test   rbx,rbx
   1400198cb:	je     0x1400198dd
   1400198cd:	mov    rcx,rbx
   1400198d0:	call   0x140001ea0
   1400198d5:	mov    rcx,rbx
   1400198d8:	call   0x140029524
   1400198dd:	cmp    rdi,rbp
   1400198e0:	jne    0x1400198c0
   1400198e2:	mov    rcx,rsi
   1400198e5:	call   QWORD PTR [rip+0x11f85]        # 0x14002b870
   1400198eb:	nop    DWORD PTR [rax+rax*1+0x0]
   1400198f0:	bt     r12d,0x9
   1400198f5:	mov    r13d,DWORD PTR [rsp+0xd0]
   1400198fd:	jae    0x14001997b
   1400198ff:	mov    rsi,QWORD PTR [rsp+0x5b0]
   140019907:	btr    r12d,0x9
   14001990c:	mov    eax,DWORD PTR [rsi]
   14001990e:	test   eax,eax
   140019910:	je     0x140019928
   140019912:	cmp    eax,0xffffffff
   140019915:	je     0x14001997b
   140019917:	mov    eax,r14d
   14001991a:	lock xadd DWORD PTR [rsi],eax
   14001991e:	add    eax,0xffffffff
   140019921:	setne  al
   140019924:	test   al,al
   140019926:	jne    0x14001997b
   140019928:	mov    rsi,QWORD PTR [rsp+0x5b0]
   140019930:	movsxd rax,DWORD PTR [rsi+0xc]
   140019934:	lea    rdi,[rsi+rax*8+0x10]
   140019939:	movsxd rax,DWORD PTR [rsi+0x8]
   14001993d:	lea    rbp,[rsi+rax*8+0x10]
   140019942:	cmp    rbp,rdi
   140019945:	je     0x140019972
   140019947:	nop    WORD PTR [rax+rax*1+0x0]
   140019950:	mov    rbx,QWORD PTR [rdi-0x8]
   140019954:	sub    rdi,0x8
   140019958:	test   rbx,rbx
   14001995b:	je     0x14001996d
   14001995d:	mov    rcx,rbx
   140019960:	call   0x140001ea0
   140019965:	mov    rcx,rbx
   140019968:	call   0x140029524
   14001996d:	cmp    rdi,rbp
   140019970:	jne    0x140019950
   140019972:	mov    rcx,rsi
   140019975:	call   QWORD PTR [rip+0x11ef5]        # 0x14002b870
   14001997b:	test   r13d,r13d
   14001997e:	je     0x14001b7d7
   140019984:	lea    rcx,[rsp+0x60]
   140019989:	call   QWORD PTR [rip+0x11da9]        # 0x14002b738
   14001998f:	lea    rdx,[r15+0x48]
   140019993:	lea    rcx,[rsp+0x350]
   14001999b:	call   QWORD PTR [rip+0x11eff]        # 0x14002b8a0
   1400199a1:	lea    rcx,[rsp+0x350]
   1400199a9:	call   QWORD PTR [rip+0x11849]        # 0x14002b1f8
   1400199af:	lea    rcx,[rsp+0x350]
   1400199b7:	test   al,al
   1400199b9:	sete   dil
   1400199bd:	call   QWORD PTR [rip+0x11ed5]        # 0x14002b898
   1400199c3:	test   dil,dil
   1400199c6:	je     0x140019a83
   1400199cc:	lea    rdx,[rip+0x13d01]        # 0x14002d6d4
   1400199d3:	xor    eax,eax
   1400199d5:	mov    rcx,r14
   1400199d8:	mov    rdi,rdx
   1400199db:	mov    QWORD PTR [rsp+0x638],rdx
   1400199e3:	lea    rdx,[rsp+0x770]
   1400199eb:	repnz scas al,BYTE PTR es:[rdi]
   1400199ed:	not    rcx
   1400199f0:	dec    rcx
   1400199f3:	mov    DWORD PTR [rsp+0x630],ecx
   1400199fa:	lea    rcx,[rsp+0x3c0]
   140019a02:	movaps xmm0,XMMWORD PTR [rsp+0x630]
   140019a0a:	movdqa XMMWORD PTR [rsp+0x770],xmm0
   140019a13:	call   QWORD PTR [rip+0x11e47]        # 0x14002b860
   140019a19:	lea    rdx,[r15+0x48]
   140019a1d:	lea    rcx,[rsp+0x2a0]
   140019a25:	call   QWORD PTR [rip+0x11e75]        # 0x14002b8a0
   140019a2b:	lea    r9,[rsp+0x2a0]
   140019a33:	lea    rdx,[rsp+0x3c0]
   140019a3b:	lea    rcx,[rsp+0x490]
   140019a43:	mov    r8b,0x1
   140019a46:	call   0x140013320
   140019a4b:	lea    rcx,[rsp+0x60]
   140019a50:	mov    rdx,rax
   140019a53:	call   QWORD PTR [rip+0x11b4f]        # 0x14002b5a8
   140019a59:	lea    rcx,[rsp+0x490]
   140019a61:	call   QWORD PTR [rip+0x11e31]        # 0x14002b898
   140019a67:	lea    rcx,[rsp+0x2a0]
   140019a6f:	call   QWORD PTR [rip+0x11e23]        # 0x14002b898
   140019a75:	lea    rcx,[rsp+0x3c0]
   140019a7d:	call   QWORD PTR [rip+0x11e15]        # 0x14002b898
   140019a83:	lea    rdx,[r15+0x40]
   140019a87:	lea    rcx,[rsp+0x2b0]
   140019a8f:	call   QWORD PTR [rip+0x11e0b]        # 0x14002b8a0
   140019a95:	lea    rcx,[rsp+0x2b0]
   140019a9d:	call   QWORD PTR [rip+0x11755]        # 0x14002b1f8
   140019aa3:	lea    rcx,[rsp+0x2b0]
   140019aab:	test   al,al
   140019aad:	sete   dil
   140019ab1:	call   QWORD PTR [rip+0x11de1]        # 0x14002b898
   140019ab7:	test   dil,dil
   140019aba:	je     0x140019b77
   140019ac0:	lea    rdx,[rip+0x140b9]        # 0x14002db80
   140019ac7:	xor    eax,eax
   140019ac9:	mov    rcx,r14
   140019acc:	mov    rdi,rdx
   140019acf:	mov    QWORD PTR [rsp+0x708],rdx
   140019ad7:	lea    rdx,[rsp+0x7f0]
   140019adf:	repnz scas al,BYTE PTR es:[rdi]
   140019ae1:	not    rcx
   140019ae4:	dec    rcx
   140019ae7:	mov    DWORD PTR [rsp+0x700],ecx
   140019aee:	lea    rcx,[rsp+0x2c0]
   140019af6:	movaps xmm0,XMMWORD PTR [rsp+0x700]
   140019afe:	movdqa XMMWORD PTR [rsp+0x7f0],xmm0
   140019b07:	call   QWORD PTR [rip+0x11d53]        # 0x14002b860
   140019b0d:	lea    rdx,[r15+0x40]
   140019b11:	lea    rcx,[rsp+0x360]
   140019b19:	call   QWORD PTR [rip+0x11d81]        # 0x14002b8a0
   140019b1f:	lea    r9,[rsp+0x360]
   140019b27:	lea    rdx,[rsp+0x2c0]
   140019b2f:	lea    rcx,[rsp+0x530]
   140019b37:	mov    r8b,0x1
   140019b3a:	call   0x140013320
   140019b3f:	lea    rcx,[rsp+0x60]
   140019b44:	mov    rdx,rax
   140019b47:	call   QWORD PTR [rip+0x11a5b]        # 0x14002b5a8
   140019b4d:	lea    rcx,[rsp+0x530]
   140019b55:	call   QWORD PTR [rip+0x11d3d]        # 0x14002b898
   140019b5b:	lea    rcx,[rsp+0x360]
   140019b63:	call   QWORD PTR [rip+0x11d2f]        # 0x14002b898
   140019b69:	lea    rcx,[rsp+0x2c0]
   140019b71:	call   QWORD PTR [rip+0x11d21]        # 0x14002b898
   140019b77:	lea    rcx,[rsp+0x3f0]
   140019b7f:	mov    rdx,r15
   140019b82:	call   QWORD PTR [rip+0x11d18]        # 0x14002b8a0
   140019b88:	lea    rcx,[rsp+0x3f0]
   140019b90:	call   QWORD PTR [rip+0x11662]        # 0x14002b1f8
   140019b96:	lea    rcx,[rsp+0x3f0]
   140019b9e:	test   al,al
   140019ba0:	sete   dil
   140019ba4:	call   QWORD PTR [rip+0x11cee]        # 0x14002b898
   140019baa:	test   dil,dil
   140019bad:	je     0x140019c38
   140019bb3:	lea    rdx,[rip+0x13f26]        # 0x14002dae0
   140019bba:	xor    eax,eax
   140019bbc:	mov    rcx,r14
   140019bbf:	mov    rdi,rdx
   140019bc2:	mov    QWORD PTR [rsp+0x728],rdx
   140019bca:	mov    rdx,r15
   140019bcd:	repnz scas al,BYTE PTR es:[rdi]
   140019bcf:	not    rcx
   140019bd2:	dec    rcx
   140019bd5:	mov    DWORD PTR [rsp+0x720],ecx
   140019bdc:	lea    rcx,[rsp+0x2d0]
   140019be4:	movaps xmm0,XMMWORD PTR [rsp+0x720]
   140019bec:	movdqa XMMWORD PTR [rsp+0x950],xmm0
   140019bf5:	call   QWORD PTR [rip+0x11ca5]        # 0x14002b8a0
   140019bfb:	lea    rdx,[rsp+0x950]
   140019c03:	lea    rcx,[rsp+0x60]
   140019c08:	call   QWORD PTR [rip+0x11b22]        # 0x14002b730
   140019c0e:	lea    rdx,[rsp+0x2d0]
   140019c16:	mov    rcx,rax
   140019c19:	call   QWORD PTR [rip+0x11989]        # 0x14002b5a8
   140019c1f:	mov    dl,0xa
   140019c21:	mov    rcx,rax
   140019c24:	call   QWORD PTR [rip+0x1177e]        # 0x14002b3a8
   140019c2a:	lea    rcx,[rsp+0x2d0]
   140019c32:	call   QWORD PTR [rip+0x11c60]        # 0x14002b898
   140019c38:	lea    rdx,[rip+0x13b79]        # 0x14002d7b8
   140019c3f:	xor    eax,eax
   140019c41:	mov    rcx,r14
   140019c44:	mov    rdi,rdx
   140019c47:	mov    QWORD PTR [rsp+0x748],rdx
   140019c4f:	lea    rdx,[rsp+0x810]
   140019c57:	repnz scas al,BYTE PTR es:[rdi]
   140019c59:	not    rcx
   140019c5c:	dec    rcx
   140019c5f:	mov    DWORD PTR [rsp+0x740],ecx
   140019c66:	lea    rcx,[rsp+0x370]
   140019c6e:	movaps xmm0,XMMWORD PTR [rsp+0x740]
   140019c76:	movdqa XMMWORD PTR [rsp+0x810],xmm0
   140019c7f:	call   QWORD PTR [rip+0x11bdb]        # 0x14002b860
   140019c85:	lea    r8,[rsp+0x370]
   140019c8d:	lea    rdx,[rsp+0xb8]
   140019c95:	mov    rcx,r15
   140019c98:	call   0x14000b830
   140019c9d:	lea    rcx,[rsp+0x370]
   140019ca5:	call   QWORD PTR [rip+0x11bed]        # 0x14002b898
   140019cab:	lea    rdx,[r15+0x58]
   140019caf:	lea    rcx,[rsp+0x2e0]
   140019cb7:	bts    r12d,0xa
   140019cbc:	call   QWORD PTR [rip+0x11bde]        # 0x14002b8a0
   140019cc2:	lea    rcx,[rsp+0x2e0]
   140019cca:	call   QWORD PTR [rip+0x11528]        # 0x14002b1f8
   140019cd0:	test   al,al
   140019cd2:	je     0x140019ceb
   140019cd4:	lea    rcx,[rsp+0xb8]
   140019cdc:	call   QWORD PTR [rip+0x11516]        # 0x14002b1f8
   140019ce2:	test   al,al
   140019ce4:	je     0x140019ceb
   140019ce6:	xor    dil,dil
   140019ce9:	jmp    0x140019cee
   140019ceb:	mov    dil,0x1
   140019cee:	bt     r12d,0xa
   140019cf3:	jae    0x140019d08
   140019cf5:	lea    rcx,[rsp+0x2e0]
   140019cfd:	btr    r12d,0xa
   140019d02:	call   QWORD PTR [rip+0x11b90]        # 0x14002b898
   140019d08:	test   dil,dil
   140019d0b:	je     0x14001a4f0
   140019d11:	mov    rax,QWORD PTR [rip+0x11b70]        # 0x14002b888
   140019d18:	lea    rdx,[rsp+0x3d0]
   140019d20:	mov    rcx,r15
   140019d23:	mov    QWORD PTR [rsp+0x78],rax
   140019d28:	call   0x14000b750
   140019d2d:	mov    rcx,QWORD PTR [rax]
   140019d30:	mov    rdi,rax
   140019d33:	mov    QWORD PTR [rsp+0xe8],rcx
   140019d3b:	mov    edx,DWORD PTR [rcx]
   140019d3d:	test   edx,edx
   140019d3f:	je     0x140019d4c
   140019d41:	cmp    edx,0xffffffff
   140019d44:	je     0x140019d9e
   140019d46:	lock add DWORD PTR [rcx],0x1
   140019d4a:	jmp    0x140019d9e
   140019d4c:	mov    edx,DWORD PTR [rcx+0x4]
   140019d4f:	lea    rcx,[rsp+0xe8]
   140019d57:	call   QWORD PTR [rip+0x11afb]        # 0x14002b858
   140019d5d:	mov    rcx,rdi
   140019d60:	call   QWORD PTR [rip+0x1193a]        # 0x14002b6a0
   140019d66:	lea    rcx,[rsp+0xe8]
   140019d6e:	mov    rbx,rax
   140019d71:	call   QWORD PTR [rip+0x11921]        # 0x14002b698
   140019d77:	lea    rcx,[rsp+0xe8]
   140019d7f:	mov    rdi,rax
   140019d82:	call   QWORD PTR [rip+0x11918]        # 0x14002b6a0
   140019d88:	lea    rcx,[rsp+0xe8]
   140019d90:	mov    r9,rbx
   140019d93:	mov    r8,rdi
   140019d96:	mov    rdx,rax
   140019d99:	call   0x1400014c0
   140019d9e:	lea    rcx,[rsp+0xe8]
   140019da6:	mov    DWORD PTR [rsp+0xf0],0x0
   140019db1:	call   QWORD PTR [rip+0x118e9]        # 0x14002b6a0
   140019db7:	lea    rcx,[rsp+0xe8]
   140019dbf:	mov    QWORD PTR [rsp+0xf8],rax
   140019dc7:	call   QWORD PTR [rip+0x118cb]        # 0x14002b698
   140019dcd:	mov    rsi,QWORD PTR [rsp+0x3d0]
   140019dd5:	mov    QWORD PTR [rsp+0x100],rax
   140019ddd:	mov    eax,DWORD PTR [rsi]
   140019ddf:	test   eax,eax
   140019de1:	je     0x140019e01
   140019de3:	cmp    eax,0xffffffff
   140019de6:	je     0x140019e50
   140019de8:	mov    eax,r14d
   140019deb:	lock xadd DWORD PTR [rsi],eax
   140019def:	add    eax,0xffffffff
   140019df2:	setne  al
   140019df5:	test   al,al
   140019df7:	jne    0x140019e50
   140019df9:	mov    rsi,QWORD PTR [rsp+0x3d0]
   140019e01:	movsxd rax,DWORD PTR [rsi+0xc]
   140019e05:	lea    rdi,[rsi+rax*8+0x10]
   140019e0a:	movsxd rax,DWORD PTR [rsi+0x8]
   140019e0e:	lea    rbp,[rsi+rax*8+0x10]
   140019e13:	cmp    rbp,rdi
   140019e16:	je     0x140019e43
   140019e18:	nop    DWORD PTR [rax+rax*1+0x0]
   140019e20:	mov    rbx,QWORD PTR [rdi-0x8]
   140019e24:	sub    rdi,0x8
   140019e28:	test   rbx,rbx
   140019e2b:	je     0x140019e3e
   140019e2d:	mov    rcx,rbx
   140019e30:	call   QWORD PTR [rip+0x11a62]        # 0x14002b898
   140019e36:	mov    rcx,rbx
   140019e39:	call   0x140029524
   140019e3e:	cmp    rdi,rbp
   140019e41:	jne    0x140019e20
   140019e43:	mov    rcx,rsi
   140019e46:	call   QWORD PTR [rip+0x11a24]        # 0x14002b870
   140019e4c:	nop    DWORD PTR [rax+0x0]
   140019e50:	mov    eax,DWORD PTR [rsp+0xf0]
   140019e57:	inc    DWORD PTR [rsp+0xf0]
   140019e5e:	test   eax,eax
   140019e60:	jne    0x140019e79
   140019e62:	mov    rax,QWORD PTR [rsp+0x100]
   140019e6a:	cmp    QWORD PTR [rsp+0xf8],rax
   140019e72:	je     0x140019e79
   140019e74:	mov    r13b,0x1
   140019e77:	jmp    0x140019e7c
   140019e79:	xor    r13b,r13b
   140019e7c:	bt     r12d,0xc
   140019e81:	jae    0x140019efc
   140019e83:	mov    rsi,QWORD PTR [rsp+0x4a0]
   140019e8b:	btr    r12d,0xc
   140019e90:	mov    eax,DWORD PTR [rsi]
   140019e92:	test   eax,eax
   140019e94:	je     0x140019eac
   140019e96:	cmp    eax,0xffffffff
   140019e99:	je     0x140019efc
   140019e9b:	mov    eax,r14d
   140019e9e:	lock xadd DWORD PTR [rsi],eax
   140019ea2:	add    eax,0xffffffff
   140019ea5:	setne  al
   140019ea8:	test   al,al
   140019eaa:	jne    0x140019efc
   140019eac:	mov    rsi,QWORD PTR [rsp+0x4a0]
   140019eb4:	movsxd rax,DWORD PTR [rsi+0xc]
   140019eb8:	lea    rdi,[rsi+rax*8+0x10]
   140019ebd:	movsxd rax,DWORD PTR [rsi+0x8]
   140019ec1:	lea    rbp,[rsi+rax*8+0x10]
   140019ec6:	cmp    rbp,rdi
   140019ec9:	je     0x140019ef3
   140019ecb:	nop    DWORD PTR [rax+rax*1+0x0]
   140019ed0:	mov    rbx,QWORD PTR [rdi-0x8]
   140019ed4:	sub    rdi,0x8
   140019ed8:	test   rbx,rbx
   140019edb:	je     0x140019eee
   140019edd:	mov    rcx,rbx
   140019ee0:	call   QWORD PTR [rip+0x119b2]        # 0x14002b898
   140019ee6:	mov    rcx,rbx
   140019ee9:	call   0x140029524
   140019eee:	cmp    rdi,rbp
   140019ef1:	jne    0x140019ed0
   140019ef3:	mov    rcx,rsi
   140019ef6:	call   QWORD PTR [rip+0x11974]        # 0x14002b870
   140019efc:	test   r13b,r13b
   140019eff:	je     0x14001a2b8
   140019f05:	bt     r12d,0xd
   140019f0a:	mov    rax,QWORD PTR [rsp+0xf8]
   140019f12:	mov    r15,QWORD PTR [rax]
   140019f15:	jae    0x140019f90
   140019f17:	mov    rsi,QWORD PTR [rsp+0x590]
   140019f1f:	btr    r12d,0xd
   140019f24:	mov    eax,DWORD PTR [rsi]
   140019f26:	test   eax,eax
   140019f28:	je     0x140019f48
   140019f2a:	cmp    eax,0xffffffff
   140019f2d:	je     0x140019f90
   140019f2f:	mov    eax,r14d
   140019f32:	lock xadd DWORD PTR [rsi],eax
   140019f36:	add    eax,0xffffffff
   140019f39:	setne  al
   140019f3c:	test   al,al
   140019f3e:	jne    0x140019f90
   140019f40:	mov    rsi,QWORD PTR [rsp+0x590]
   140019f48:	movsxd rax,DWORD PTR [rsi+0xc]
   140019f4c:	lea    rdi,[rsi+rax*8+0x10]
   140019f51:	movsxd rax,DWORD PTR [rsi+0x8]
   140019f55:	lea    rbp,[rsi+rax*8+0x10]
   140019f5a:	cmp    rbp,rdi
   140019f5d:	je     0x140019f83
   140019f5f:	nop
   140019f60:	mov    rbx,QWORD PTR [rdi-0x8]
   140019f64:	sub    rdi,0x8
   140019f68:	test   rbx,rbx
   140019f6b:	je     0x140019f7e
   140019f6d:	mov    rcx,rbx
   140019f70:	call   QWORD PTR [rip+0x11922]        # 0x14002b898
   140019f76:	mov    rcx,rbx
   140019f79:	call   0x140029524
   140019f7e:	cmp    rdi,rbp
   140019f81:	jne    0x140019f60
   140019f83:	mov    rcx,rsi
   140019f86:	call   QWORD PTR [rip+0x118e4]        # 0x14002b870
   140019f8c:	nop    DWORD PTR [rax+0x0]
   140019f90:	bt     r12d,0xf
   140019f95:	mov    r13d,DWORD PTR [rsp+0xf0]
   140019f9d:	jae    0x14001a01c
   140019f9f:	mov    rsi,QWORD PTR [rsp+0x4b0]
   140019fa7:	btr    r12d,0xf
   140019fac:	mov    eax,DWORD PTR [rsi]
   140019fae:	test   eax,eax
   140019fb0:	je     0x140019fc8
   140019fb2:	cmp    eax,0xffffffff
   140019fb5:	je     0x14001a01c
   140019fb7:	mov    eax,r14d
   140019fba:	lock xadd DWORD PTR [rsi],eax
   140019fbe:	add    eax,0xffffffff
   140019fc1:	setne  al
   140019fc4:	test   al,al
   140019fc6:	jne    0x14001a01c
   140019fc8:	mov    rsi,QWORD PTR [rsp+0x4b0]
   140019fd0:	movsxd rax,DWORD PTR [rsi+0xc]
   140019fd4:	lea    rdi,[rsi+rax*8+0x10]
   140019fd9:	movsxd rax,DWORD PTR [rsi+0x8]
   140019fdd:	lea    rbp,[rsi+rax*8+0x10]
   140019fe2:	cmp    rbp,rdi
   140019fe5:	je     0x14001a013
   140019fe7:	nop    WORD PTR [rax+rax*1+0x0]
   140019ff0:	mov    rbx,QWORD PTR [rdi-0x8]
   140019ff4:	sub    rdi,0x8
   140019ff8:	test   rbx,rbx
   140019ffb:	je     0x14001a00e
   140019ffd:	mov    rcx,rbx
   14001a000:	call   QWORD PTR [rip+0x11892]        # 0x14002b898
   14001a006:	mov    rcx,rbx
   14001a009:	call   0x140029524
   14001a00e:	cmp    rdi,rbp
   14001a011:	jne    0x140019ff0
   14001a013:	mov    rcx,rsi
   14001a016:	call   QWORD PTR [rip+0x11854]        # 0x14002b870
   14001a01c:	test   r13d,r13d
   14001a01f:	je     0x14001a228
   14001a025:	lea    rdx,[rip+0x13b4c]        # 0x14002db78
   14001a02c:	xor    eax,eax
   14001a02e:	mov    rcx,r14
   14001a031:	mov    rdi,rdx
   14001a034:	mov    QWORD PTR [rsp+0x768],rdx
   14001a03c:	mov    rdx,r15
   14001a03f:	repnz scas al,BYTE PTR es:[rdi]
   14001a041:	not    rcx
   14001a044:	dec    rcx
   14001a047:	mov    DWORD PTR [rsp+0x760],ecx
   14001a04e:	lea    rcx,[rsp+0x2f0]
   14001a056:	movaps xmm0,XMMWORD PTR [rsp+0x760]
   14001a05e:	movdqa XMMWORD PTR [rsp+0x8f0],xmm0
   14001a067:	call   QWORD PTR [rip+0x11833]        # 0x14002b8a0
   14001a06d:	mov    ebx,DWORD PTR [r15+0x8]
   14001a071:	lea    rcx,[rsp+0x226]
   14001a079:	mov    dl,0x20
   14001a07b:	call   QWORD PTR [rip+0x11847]        # 0x14002b8c8
   14001a081:	lea    rcx,[rsp+0x22a]
   14001a089:	mov    dl,0x20
   14001a08b:	mov    rsi,rax
   14001a08e:	call   QWORD PTR [rip+0x11834]        # 0x14002b8c8
   14001a094:	lea    rdx,[rsp+0x8f0]
   14001a09c:	lea    rcx,[rsp+0x4d0]
   14001a0a4:	mov    rdi,rax
   14001a0a7:	call   QWORD PTR [rip+0x117b3]        # 0x14002b860
   14001a0ad:	movzx  edx,WORD PTR [rdi]
   14001a0b0:	xor    r9d,r9d
   14001a0b3:	mov    WORD PTR [rsp+0x28],dx
   14001a0b8:	lea    rdx,[rsp+0x5d0]
   14001a0c0:	mov    rcx,rax
   14001a0c3:	mov    r8d,ebx
   14001a0c6:	mov    DWORD PTR [rsp+0x20],0xa
   14001a0ce:	call   QWORD PTR [rip+0x11434]        # 0x14002b508
   14001a0d4:	lea    r8,[rsp+0x2f0]
   14001a0dc:	lea    rdx,[rsp+0x4c0]
   14001a0e4:	mov    rcx,rax
   14001a0e7:	movzx  eax,WORD PTR [rsi]
   14001a0ea:	xor    r9d,r9d
   14001a0ed:	mov    WORD PTR [rsp+0x20],ax
   14001a0f2:	call   QWORD PTR [rip+0x110f0]        # 0x14002b1e8
   14001a0f8:	mov    rcx,QWORD PTR [rsp+0x78]
   14001a0fd:	mov    rdi,rax
   14001a100:	mov    eax,DWORD PTR [rcx]
   14001a102:	cmp    eax,0x1
   14001a105:	je     0x14001a133
   14001a107:	test   eax,eax
   14001a109:	je     0x14001a133
   14001a10b:	lea    rcx,[rsp+0x78]
   14001a110:	mov    edx,0x7fffffff
   14001a115:	mov    r8d,0x1
   14001a11b:	call   0x140001a10
   14001a120:	test   rax,rax
   14001a123:	je     0x14001a15a
   14001a125:	mov    rdx,rdi
   14001a128:	mov    rcx,rax
   14001a12b:	call   QWORD PTR [rip+0x1176f]        # 0x14002b8a0
   14001a131:	jmp    0x14001a15a
   14001a133:	lea    rcx,[rsp+0x540]
   14001a13b:	mov    rdx,rdi
   14001a13e:	call   QWORD PTR [rip+0x1175c]        # 0x14002b8a0
   14001a144:	lea    rcx,[rsp+0x78]
   14001a149:	call   QWORD PTR [rip+0x116f1]        # 0x14002b840
   14001a14f:	mov    rcx,QWORD PTR [rsp+0x540]
   14001a157:	mov    QWORD PTR [rax],rcx
   14001a15a:	lea    rcx,[rsp+0x4c0]
   14001a162:	call   QWORD PTR [rip+0x11730]        # 0x14002b898
   14001a168:	lea    rcx,[rsp+0x5d0]
   14001a170:	call   QWORD PTR [rip+0x11722]        # 0x14002b898
   14001a176:	lea    rcx,[rsp+0x4d0]
   14001a17e:	call   QWORD PTR [rip+0x11714]        # 0x14002b898
   14001a184:	lea    rcx,[rsp+0x2f0]
   14001a18c:	call   QWORD PTR [rip+0x11706]        # 0x14002b898
   14001a192:	dec    DWORD PTR [rsp+0xf0]
   14001a199:	bt     r12d,0xe
   14001a19e:	jae    0x140019f90
   14001a1a4:	mov    rsi,QWORD PTR [rsp+0x550]
   14001a1ac:	btr    r12d,0xe
   14001a1b1:	mov    eax,DWORD PTR [rsi]
   14001a1b3:	test   eax,eax
   14001a1b5:	je     0x14001a1d5
   14001a1b7:	cmp    eax,0xffffffff
   14001a1ba:	je     0x140019f90
   14001a1c0:	mov    eax,r14d
   14001a1c3:	lock xadd DWORD PTR [rsi],eax
   14001a1c7:	add    eax,0xffffffff
   14001a1ca:	setne  al
   14001a1cd:	test   al,al
   14001a1cf:	jne    0x140019f90
   14001a1d5:	mov    rsi,QWORD PTR [rsp+0x550]
   14001a1dd:	movsxd rax,DWORD PTR [rsi+0xc]
   14001a1e1:	lea    rdi,[rsi+rax*8+0x10]
   14001a1e6:	movsxd rax,DWORD PTR [rsi+0x8]
   14001a1ea:	lea    rbp,[rsi+rax*8+0x10]
   14001a1ef:	cmp    rbp,rdi
   14001a1f2:	je     0x140019f83
   14001a1f8:	nop    DWORD PTR [rax+rax*1+0x0]
   14001a200:	mov    rbx,QWORD PTR [rdi-0x8]
   14001a204:	sub    rdi,0x8
   14001a208:	test   rbx,rbx
   14001a20b:	je     0x14001a21e
   14001a20d:	mov    rcx,rbx
   14001a210:	call   QWORD PTR [rip+0x11682]        # 0x14002b898
   14001a216:	mov    rcx,rbx
   14001a219:	call   0x140029524
   14001a21e:	cmp    rdi,rbp
   14001a221:	jne    0x14001a200
   14001a223:	jmp    0x140019f83
   14001a228:	add    QWORD PTR [rsp+0xf8],0x8
   14001a231:	bt     r12d,0xb
   14001a236:	jae    0x140019e50
   14001a23c:	mov    rsi,QWORD PTR [rsp+0x4e0]
   14001a244:	btr    r12d,0xb
   14001a249:	mov    eax,DWORD PTR [rsi]
   14001a24b:	test   eax,eax
   14001a24d:	je     0x14001a275
   14001a24f:	cmp    eax,0xffffffff
   14001a252:	je     0x140019e50
   14001a258:	mov    eax,r14d
   14001a25b:	lock xadd DWORD PTR [rsi],eax
   14001a25f:	add    eax,0xffffffff
   14001a262:	setne  al
   14001a265:	test   al,al
   14001a267:	jne    0x140019e50
   14001a26d:	mov    rsi,QWORD PTR [rsp+0x4e0]
   14001a275:	movsxd rax,DWORD PTR [rsi+0xc]
   14001a279:	lea    rdi,[rsi+rax*8+0x10]
   14001a27e:	movsxd rax,DWORD PTR [rsi+0x8]
   14001a282:	lea    rbp,[rsi+rax*8+0x10]
   14001a287:	cmp    rbp,rdi
   14001a28a:	je     0x140019e43
   14001a290:	mov    rbx,QWORD PTR [rdi-0x8]
   14001a294:	sub    rdi,0x8
   14001a298:	test   rbx,rbx
   14001a29b:	je     0x14001a2ae
   14001a29d:	mov    rcx,rbx
   14001a2a0:	call   QWORD PTR [rip+0x115f2]        # 0x14002b898
   14001a2a6:	mov    rcx,rbx
   14001a2a9:	call   0x140029524
   14001a2ae:	cmp    rdi,rbp
   14001a2b1:	jne    0x14001a290
   14001a2b3:	jmp    0x140019e43
   14001a2b8:	mov    rsi,QWORD PTR [rsp+0xe8]
   14001a2c0:	mov    eax,DWORD PTR [rsi]
   14001a2c2:	test   eax,eax
   14001a2c4:	je     0x14001a2e4
   14001a2c6:	cmp    eax,0xffffffff
   14001a2c9:	je     0x14001a32c
   14001a2cb:	mov    eax,r14d
   14001a2ce:	lock xadd DWORD PTR [rsi],eax
   14001a2d2:	add    eax,0xffffffff
   14001a2d5:	setne  al
   14001a2d8:	test   al,al
   14001a2da:	jne    0x14001a32c
   14001a2dc:	mov    rsi,QWORD PTR [rsp+0xe8]
   14001a2e4:	movsxd rax,DWORD PTR [rsi+0xc]
   14001a2e8:	lea    rdi,[rsi+rax*8+0x10]
   14001a2ed:	movsxd rax,DWORD PTR [rsi+0x8]
   14001a2f1:	lea    rbp,[rsi+rax*8+0x10]
   14001a2f6:	cmp    rbp,rdi
   14001a2f9:	je     0x14001a323
   14001a2fb:	nop    DWORD PTR [rax+rax*1+0x0]
   14001a300:	mov    rbx,QWORD PTR [rdi-0x8]
   14001a304:	sub    rdi,0x8
   14001a308:	test   rbx,rbx
   14001a30b:	je     0x14001a31e
   14001a30d:	mov    rcx,rbx
   14001a310:	call   QWORD PTR [rip+0x11582]        # 0x14002b898
   14001a316:	mov    rcx,rbx
   14001a319:	call   0x140029524
   14001a31e:	cmp    rdi,rbp
   14001a321:	jne    0x14001a300
   14001a323:	mov    rcx,rsi
   14001a326:	call   QWORD PTR [rip+0x11544]        # 0x14002b870
   14001a32c:	lea    rcx,[rsp+0xb8]
   14001a334:	call   QWORD PTR [rip+0x10ebe]        # 0x14002b1f8
   14001a33a:	test   al,al
   14001a33c:	jne    0x14001a3a7
   14001a33e:	mov    rax,QWORD PTR [rsp+0x78]
   14001a343:	mov    ecx,DWORD PTR [rax]
   14001a345:	cmp    ecx,0x1
   14001a348:	je     0x14001a37b
   14001a34a:	test   ecx,ecx
   14001a34c:	je     0x14001a37b
   14001a34e:	lea    rcx,[rsp+0x78]
   14001a353:	mov    edx,0x7fffffff
   14001a358:	mov    r8d,0x1
   14001a35e:	call   0x140001a10
   14001a363:	test   rax,rax
   14001a366:	je     0x14001a3a7
   14001a368:	lea    rdx,[rsp+0xb8]
   14001a370:	mov    rcx,rax
   14001a373:	call   QWORD PTR [rip+0x11527]        # 0x14002b8a0
   14001a379:	jmp    0x14001a3a7
   14001a37b:	lea    rdx,[rsp+0xb8]
   14001a383:	lea    rcx,[rsp+0x5a0]
   14001a38b:	call   QWORD PTR [rip+0x1150f]        # 0x14002b8a0
   14001a391:	lea    rcx,[rsp+0x78]
   14001a396:	call   QWORD PTR [rip+0x114a4]        # 0x14002b840
   14001a39c:	mov    rcx,QWORD PTR [rsp+0x5a0]
   14001a3a4:	mov    QWORD PTR [rax],rcx
   14001a3a7:	lea    rdx,[rip+0x137c6]        # 0x14002db74
   14001a3ae:	xor    eax,eax
   14001a3b0:	mov    rcx,r14
   14001a3b3:	mov    rdi,rdx
   14001a3b6:	mov    QWORD PTR [rsp+0x6b8],rdx
   14001a3be:	lea    rdx,[rsp+0x830]
   14001a3c6:	repnz scas al,BYTE PTR es:[rdi]
   14001a3c8:	not    rcx
   14001a3cb:	dec    rcx
   14001a3ce:	mov    DWORD PTR [rsp+0x6b0],ecx
   14001a3d5:	lea    rcx,[rsp+0x158]
   14001a3dd:	movaps xmm0,XMMWORD PTR [rsp+0x6b0]
   14001a3e5:	movdqa XMMWORD PTR [rsp+0x830],xmm0
   14001a3ee:	call   QWORD PTR [rip+0x1146c]        # 0x14002b860
   14001a3f4:	lea    rdx,[rip+0x13775]        # 0x14002db70
   14001a3fb:	mov    rdi,rdx
   14001a3fe:	mov    QWORD PTR [rsp+0x6e8],rdx
   14001a406:	xor    eax,eax
   14001a408:	mov    rcx,r14
   14001a40b:	lea    rdx,[rsp+0x900]
   14001a413:	repnz scas al,BYTE PTR es:[rdi]
   14001a415:	not    rcx
   14001a418:	dec    rcx
   14001a41b:	mov    DWORD PTR [rsp+0x6e0],ecx
   14001a422:	lea    rcx,[rsp+0x300]
   14001a42a:	movaps xmm0,XMMWORD PTR [rsp+0x6e0]
   14001a432:	movdqa XMMWORD PTR [rsp+0x900],xmm0
   14001a43b:	call   QWORD PTR [rip+0x1141f]        # 0x14002b860
   14001a441:	lea    rcx,[rsp+0x158]
   14001a449:	call   QWORD PTR [rip+0x11291]        # 0x14002b6e0
   14001a44f:	lea    rcx,[rsp+0x158]
   14001a457:	mov    edi,eax
   14001a459:	call   QWORD PTR [rip+0x11461]        # 0x14002b8c0
   14001a45f:	lea    rdx,[rsp+0x78]
   14001a464:	lea    rcx,[rsp+0x380]
   14001a46c:	mov    r9d,edi
   14001a46f:	mov    r8,rax
   14001a472:	call   QWORD PTR [rip+0x11440]        # 0x14002b8b8
   14001a478:	lea    r9,[rsp+0x380]
   14001a480:	lea    rdx,[rsp+0x300]
   14001a488:	lea    rcx,[rsp+0x4f0]
   14001a490:	mov    r8b,0x1
   14001a493:	call   0x140013440
   14001a498:	lea    rcx,[rsp+0x60]
   14001a49d:	mov    rdx,rax
   14001a4a0:	call   QWORD PTR [rip+0x11102]        # 0x14002b5a8
   14001a4a6:	lea    rcx,[rsp+0x4f0]
   14001a4ae:	call   QWORD PTR [rip+0x113e4]        # 0x14002b898
   14001a4b4:	lea    rcx,[rsp+0x380]
   14001a4bc:	call   QWORD PTR [rip+0x113d6]        # 0x14002b898
   14001a4c2:	lea    rcx,[rsp+0x300]
   14001a4ca:	call   QWORD PTR [rip+0x113c8]        # 0x14002b898
   14001a4d0:	lea    rcx,[rsp+0x158]
   14001a4d8:	call   QWORD PTR [rip+0x113ba]        # 0x14002b898
   14001a4de:	lea    rcx,[rsp+0x78]
   14001a4e3:	call   0x1400017b0
   14001a4e8:	mov    r15,QWORD PTR [rsp+0x3b0]
   14001a4f0:	mov    rax,QWORD PTR [rip+0x11391]        # 0x14002b888
   14001a4f7:	xor    bpl,bpl
   14001a4fa:	xor    sil,sil
   14001a4fd:	mov    QWORD PTR [rsp+0x70],rax
   14001a502:	mov    eax,DWORD PTR [r15+0x70]
   14001a506:	test   eax,eax
   14001a508:	je     0x14001a513
   14001a50a:	cmp    eax,0x3
   14001a50d:	jne    0x14001a5e7
   14001a513:	mov    rcx,r15
   14001a516:	call   0x140006790
   14001a51b:	test   al,al
   14001a51d:	je     0x14001a5e7
   14001a523:	lea    rdx,[rip+0x135f2]        # 0x14002db1c
   14001a52a:	xor    eax,eax
   14001a52c:	mov    rcx,r14
   14001a52f:	mov    rdi,rdx
   14001a532:	mov    QWORD PTR [rsp+0x618],rdx
   14001a53a:	lea    rdx,[rsp+0x850]
   14001a542:	repnz scas al,BYTE PTR es:[rdi]
   14001a544:	not    rcx
   14001a547:	dec    rcx
   14001a54a:	mov    DWORD PTR [rsp+0x610],ecx
   14001a551:	lea    rcx,[rsp+0x168]
   14001a559:	movaps xmm0,XMMWORD PTR [rsp+0x610]
   14001a561:	movdqa XMMWORD PTR [rsp+0x850],xmm0
   14001a56a:	call   QWORD PTR [rip+0x112f0]        # 0x14002b860
   14001a570:	mov    rdx,QWORD PTR [rsp+0x70]
   14001a575:	mov    eax,DWORD PTR [rdx]
   14001a577:	cmp    eax,0x1
   14001a57a:	je     0x14001a5ad
   14001a57c:	test   eax,eax
   14001a57e:	je     0x14001a5ad
   14001a580:	lea    rcx,[rsp+0x70]
   14001a585:	mov    edx,0x7fffffff
   14001a58a:	mov    r8d,0x1
   14001a590:	call   0x140001a10
   14001a595:	test   rax,rax
   14001a598:	je     0x14001a5d9
   14001a59a:	lea    rdx,[rsp+0x168]
   14001a5a2:	mov    rcx,rax
   14001a5a5:	call   QWORD PTR [rip+0x112f5]        # 0x14002b8a0
   14001a5ab:	jmp    0x14001a5d9
   14001a5ad:	lea    rdx,[rsp+0x168]
   14001a5b5:	lea    rcx,[rsp+0x428]
   14001a5bd:	call   QWORD PTR [rip+0x112dd]        # 0x14002b8a0
   14001a5c3:	lea    rcx,[rsp+0x70]
   14001a5c8:	call   QWORD PTR [rip+0x11272]        # 0x14002b840
   14001a5ce:	mov    rcx,QWORD PTR [rsp+0x428]
   14001a5d6:	mov    QWORD PTR [rax],rcx
   14001a5d9:	lea    rcx,[rsp+0x168]
   14001a5e1:	call   QWORD PTR [rip+0x112b1]        # 0x14002b898
   14001a5e7:	lea    rdx,[rip+0x13512]        # 0x14002db00
   14001a5ee:	xor    eax,eax
   14001a5f0:	mov    rcx,r14
   14001a5f3:	mov    rdi,rdx
   14001a5f6:	mov    QWORD PTR [rsp+0x718],rdx
   14001a5fe:	lea    rdx,[rsp+0x920]
   14001a606:	repnz scas al,BYTE PTR es:[rdi]
   14001a608:	not    rcx
   14001a60b:	dec    rcx
   14001a60e:	mov    DWORD PTR [rsp+0x710],ecx
   14001a615:	lea    rcx,[rsp+0x190]
   14001a61d:	movaps xmm0,XMMWORD PTR [rsp+0x710]
   14001a625:	movdqa XMMWORD PTR [rsp+0x920],xmm0
   14001a62e:	call   QWORD PTR [rip+0x1122c]        # 0x14002b860
   14001a634:	mov    rcx,QWORD PTR [r15+0x38]
   14001a638:	xor    eax,eax
   14001a63a:	cmp    DWORD PTR [rcx+0x20],eax
   14001a63d:	je     0x14001a650
   14001a63f:	mov    edx,DWORD PTR [rcx+0x24]
   14001a642:	lea    rcx,[rsp+0x190]
   14001a64a:	call   QWORD PTR [rip+0x10c58]        # 0x14002b2a8
   14001a650:	lea    rdx,[rsp+0x190]
   14001a658:	lea    rcx,[r15+0x38]
   14001a65c:	mov    r8d,eax
   14001a65f:	call   0x14001c3c0
   14001a664:	lea    rcx,[rsp+0x190]
   14001a66c:	mov    rbx,QWORD PTR [rax]
   14001a66f:	call   QWORD PTR [rip+0x11223]        # 0x14002b898
   14001a675:	cmp    rbx,QWORD PTR [r15+0x38]
   14001a679:	je     0x14001a878
   14001a67f:	lea    rdx,[rip+0x12d12]        # 0x14002d398
   14001a686:	xor    eax,eax
   14001a688:	mov    rcx,r14
   14001a68b:	mov    rdi,rdx
   14001a68e:	mov    QWORD PTR [rsp+0x5e8],rdx
   14001a696:	lea    rdx,[rsp+0x870]
   14001a69e:	repnz scas al,BYTE PTR es:[rdi]
   14001a6a0:	not    rcx
   14001a6a3:	dec    rcx
   14001a6a6:	mov    DWORD PTR [rsp+0x5e0],ecx
   14001a6ad:	lea    rcx,[rsp+0x410]
   14001a6b5:	movaps xmm0,XMMWORD PTR [rsp+0x5e0]
   14001a6bd:	movdqa XMMWORD PTR [rsp+0x870],xmm0
   14001a6c6:	call   QWORD PTR [rip+0x11194]        # 0x14002b860
   14001a6cc:	add    rbx,0x18
   14001a6d0:	lea    r8,[rsp+0x410]
   14001a6d8:	lea    rdx,[rsp+0x1a0]
   14001a6e0:	mov    r13d,0x1
   14001a6e6:	mov    rcx,rbx
   14001a6e9:	xor    r9d,r9d
   14001a6ec:	mov    DWORD PTR [rsp+0x20],r13d
   14001a6f1:	call   QWORD PTR [rip+0x10c91]        # 0x14002b388
   14001a6f7:	lea    rcx,[rsp+0x410]
   14001a6ff:	call   QWORD PTR [rip+0x11193]        # 0x14002b898
   14001a705:	lea    rdx,[rsp+0x1a0]
   14001a70d:	lea    rcx,[rsp+0x200]
   14001a715:	call   0x140001700
   14001a71a:	lea    rcx,[rsp+0x200]
   14001a722:	mov    DWORD PTR [rsp+0x208],0x0
   14001a72d:	call   QWORD PTR [rip+0x10f6d]        # 0x14002b6a0
   14001a733:	lea    rcx,[rsp+0x200]
   14001a73b:	mov    QWORD PTR [rsp+0x210],rax
   14001a743:	call   QWORD PTR [rip+0x10f4f]        # 0x14002b698
   14001a749:	mov    rdi,QWORD PTR [rsp+0x210]
   14001a751:	mov    edx,DWORD PTR [rsp+0x208]
   14001a758:	mov    QWORD PTR [rsp+0x218],rax
   14001a760:	mov    ecx,edx
   14001a762:	inc    edx
   14001a764:	mov    DWORD PTR [rsp+0x208],edx
   14001a76b:	test   ecx,ecx
   14001a76d:	jne    0x14001a7c4
   14001a76f:	cmp    rdi,rax
   14001a772:	je     0x14001a7c4
   14001a774:	test   edx,edx
   14001a776:	je     0x14001a7a6
   14001a778:	lea    rdx,[rsp+0x388]
   14001a780:	mov    r8d,r13d
   14001a783:	mov    rcx,rdi
   14001a786:	call   QWORD PTR [rip+0x10b6c]        # 0x14002b2f8
   14001a78c:	mov    edx,DWORD PTR [rsp+0x208]
   14001a793:	test   al,al
   14001a795:	jne    0x14001a7a2
   14001a797:	dec    edx
   14001a799:	mov    DWORD PTR [rsp+0x208],edx
   14001a7a0:	jmp    0x14001a774
   14001a7a2:	movzx  esi,r13b
   14001a7a6:	mov    rdi,QWORD PTR [rsp+0x210]
   14001a7ae:	mov    rax,QWORD PTR [rsp+0x218]
   14001a7b6:	add    rdi,0x8
   14001a7ba:	mov    QWORD PTR [rsp+0x210],rdi
   14001a7c2:	jmp    0x14001a760
   14001a7c4:	lea    rcx,[rsp+0x200]
   14001a7cc:	call   0x1400017b0
   14001a7d1:	lea    rdx,[rip+0x13390]        # 0x14002db68
   14001a7d8:	xor    eax,eax
   14001a7da:	mov    rdi,rdx
   14001a7dd:	mov    QWORD PTR [rsp+0x6d8],rdx
   14001a7e5:	mov    rcx,r14
   14001a7e8:	repnz scas al,BYTE PTR es:[rdi]
   14001a7ea:	lea    rdx,[rsp+0x990]
   14001a7f2:	not    rcx
   14001a7f5:	dec    rcx
   14001a7f8:	mov    DWORD PTR [rsp+0x6d0],ecx
   14001a7ff:	lea    rcx,[rsp+0x310]
   14001a807:	movaps xmm0,XMMWORD PTR [rsp+0x6d0]
   14001a80f:	movdqa XMMWORD PTR [rsp+0x990],xmm0
   14001a818:	call   QWORD PTR [rip+0x11042]        # 0x14002b860
   14001a81e:	lea    rdx,[rsp+0x310]
   14001a826:	lea    rcx,[rsp+0x1a0]
   14001a82e:	mov    r8d,r13d
   14001a831:	call   QWORD PTR [rip+0x10a69]        # 0x14002b2a0
   14001a837:	lea    rcx,[rsp+0x310]
   14001a83f:	movzx  edi,al
   14001a842:	call   QWORD PTR [rip+0x11050]        # 0x14002b898
   14001a848:	lea    rcx,[rsp+0x70]
   14001a84d:	movzx  ebp,bpl
   14001a851:	test   dil,dil
   14001a854:	mov    rdx,rbx
   14001a857:	cmovne ebp,r13d
   14001a85b:	call   0x140001e20
   14001a860:	lea    rcx,[rsp+0x1a0]
   14001a868:	call   0x1400017b0
   14001a86d:	test   sil,sil
   14001a870:	jne    0x14001aa44
   14001a876:	jmp    0x14001a87e
   14001a878:	mov    r13d,0x1
   14001a87e:	lea    rdx,[r15+0x10]
   14001a882:	lea    rcx,[rsp+0xa8]
   14001a88a:	call   QWORD PTR [rip+0x11010]        # 0x14002b8a0
   14001a890:	lea    rcx,[rsp+0x80]
   14001a898:	mov    dl,0x25
   14001a89a:	call   QWORD PTR [rip+0x11028]        # 0x14002b8c8
   14001a8a0:	lea    rcx,[rsp+0xa8]
   14001a8a8:	mov    r9d,r13d
   14001a8ab:	movzx  edx,WORD PTR [rax]
   14001a8ae:	xor    r8d,r8d
   14001a8b1:	call   QWORD PTR [rip+0x10db9]        # 0x14002b670
   14001a8b7:	mov    ebx,eax
   14001a8b9:	test   eax,eax
   14001a8bb:	js     0x14001aa36
   14001a8c1:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14001a8d0:	lea    rcx,[rsp+0xa8]
   14001a8d8:	inc    ebx
   14001a8da:	call   QWORD PTR [rip+0x10e00]        # 0x14002b6e0
   14001a8e0:	cmp    ebx,eax
   14001a8e2:	jge    0x14001aa36
   14001a8e8:	lea    rcx,[rsp+0x220]
   14001a8f0:	mov    dl,0x6e
   14001a8f2:	call   QWORD PTR [rip+0x10fd0]        # 0x14002b8c8
   14001a8f8:	lea    rdx,[rsp+0x228]
   14001a900:	lea    rcx,[rsp+0xa8]
   14001a908:	movzx  edi,WORD PTR [rax]
   14001a90b:	mov    r8d,ebx
   14001a90e:	call   QWORD PTR [rip+0x10b8c]        # 0x14002b4a0
   14001a914:	cmp    WORD PTR [rax],di
   14001a917:	je     0x14001a975
   14001a919:	lea    rdx,[rsp+0x1f8]
   14001a921:	lea    rcx,[rsp+0xa8]
   14001a929:	mov    r8d,ebx
   14001a92c:	call   QWORD PTR [rip+0x10b6e]        # 0x14002b4a0
   14001a932:	mov    rcx,rax
   14001a935:	call   QWORD PTR [rip+0x10ded]        # 0x14002b728
   14001a93b:	test   al,al
   14001a93d:	jne    0x14001a975
   14001a93f:	lea    rcx,[rsp+0x80]
   14001a947:	mov    dl,0x25
   14001a949:	call   QWORD PTR [rip+0x10f79]        # 0x14002b8c8
   14001a94f:	lea    rcx,[rsp+0xa8]
   14001a957:	mov    r9d,r13d
   14001a95a:	movzx  edx,WORD PTR [rax]
   14001a95d:	mov    r8d,ebx
   14001a960:	call   QWORD PTR [rip+0x10d0a]        # 0x14002b670
   14001a966:	mov    ebx,eax
   14001a968:	test   eax,eax
   14001a96a:	jns    0x14001a8d0
   14001a970:	jmp    0x14001aa36
   14001a975:	lea    rdx,[rip+0x13194]        # 0x14002db10
   14001a97c:	xor    eax,eax
   14001a97e:	mov    rcx,r14
   14001a981:	mov    rdi,rdx
   14001a984:	mov    QWORD PTR [rsp+0x658],rdx
   14001a98c:	lea    rdx,[rsp+0x890]
   14001a994:	repnz scas al,BYTE PTR es:[rdi]
   14001a996:	not    rcx
   14001a999:	dec    rcx
   14001a99c:	mov    DWORD PTR [rsp+0x650],ecx
   14001a9a3:	lea    rcx,[rsp+0x1b0]
   14001a9ab:	movaps xmm0,XMMWORD PTR [rsp+0x650]
   14001a9b3:	movdqa XMMWORD PTR [rsp+0x890],xmm0
   14001a9bc:	call   QWORD PTR [rip+0x10e9e]        # 0x14002b860
   14001a9c2:	mov    rdx,QWORD PTR [rsp+0x70]
   14001a9c7:	mov    eax,DWORD PTR [rdx]
   14001a9c9:	cmp    eax,0x1
   14001a9cc:	je     0x14001a9fc
   14001a9ce:	test   eax,eax
   14001a9d0:	je     0x14001a9fc
   14001a9d2:	lea    rcx,[rsp+0x70]
   14001a9d7:	mov    r8d,r13d
   14001a9da:	mov    edx,0x7fffffff
   14001a9df:	call   0x140001a10
   14001a9e4:	test   rax,rax
   14001a9e7:	je     0x14001aa28
   14001a9e9:	lea    rdx,[rsp+0x1b0]
   14001a9f1:	mov    rcx,rax
   14001a9f4:	call   QWORD PTR [rip+0x10ea6]        # 0x14002b8a0
   14001a9fa:	jmp    0x14001aa28
   14001a9fc:	lea    rdx,[rsp+0x1b0]
   14001aa04:	lea    rcx,[rsp+0x438]
   14001aa0c:	call   QWORD PTR [rip+0x10e8e]        # 0x14002b8a0
   14001aa12:	lea    rcx,[rsp+0x70]
   14001aa17:	call   QWORD PTR [rip+0x10e23]        # 0x14002b840
   14001aa1d:	mov    rcx,QWORD PTR [rsp+0x438]
   14001aa25:	mov    QWORD PTR [rax],rcx
   14001aa28:	lea    rcx,[rsp+0x1b0]
   14001aa30:	call   QWORD PTR [rip+0x10e62]        # 0x14002b898
   14001aa36:	lea    rcx,[rsp+0xa8]
   14001aa3e:	call   QWORD PTR [rip+0x10e54]        # 0x14002b898
   14001aa44:	lea    rcx,[rsp+0x70]
   14001aa49:	call   QWORD PTR [rip+0x107a1]        # 0x14002b1f0
   14001aa4f:	test   al,al
   14001aa51:	jne    0x14001ab25
   14001aa57:	lea    rdx,[rip+0x1293a]        # 0x14002d398
   14001aa5e:	xor    eax,eax
   14001aa60:	mov    rcx,r14
   14001aa63:	mov    rdi,rdx
   14001aa66:	mov    QWORD PTR [rsp+0x758],rdx
   14001aa6e:	lea    rdx,[rsp+0x930]
   14001aa76:	repnz scas al,BYTE PTR es:[rdi]
   14001aa78:	not    rcx
   14001aa7b:	dec    rcx
   14001aa7e:	mov    DWORD PTR [rsp+0x750],ecx
   14001aa85:	lea    rcx,[rsp+0x1c0]
   14001aa8d:	movaps xmm0,XMMWORD PTR [rsp+0x750]
   14001aa95:	movdqa XMMWORD PTR [rsp+0x930],xmm0
   14001aa9e:	call   QWORD PTR [rip+0x10dbc]        # 0x14002b860
   14001aaa4:	lea    rcx,[rsp+0x1c0]
   14001aaac:	call   QWORD PTR [rip+0x10c2e]        # 0x14002b6e0
   14001aab2:	lea    rcx,[rsp+0x1c0]
   14001aaba:	mov    edi,eax
   14001aabc:	call   QWORD PTR [rip+0x10dfe]        # 0x14002b8c0
   14001aac2:	lea    rdx,[rsp+0x70]
   14001aac7:	lea    rcx,[rsp+0x390]
   14001aacf:	mov    r9d,edi
   14001aad2:	mov    r8,rax
   14001aad5:	call   QWORD PTR [rip+0x10ddd]        # 0x14002b8b8
   14001aadb:	lea    rdx,[rip+0x1307e]        # 0x14002db60
   14001aae2:	lea    rcx,[rsp+0x60]
   14001aae7:	call   QWORD PTR [rip+0x10ac3]        # 0x14002b5b0
   14001aaed:	lea    rdx,[rsp+0x390]
   14001aaf5:	mov    rcx,rax
   14001aaf8:	call   QWORD PTR [rip+0x10aaa]        # 0x14002b5a8
   14001aafe:	mov    dl,0xa
   14001ab00:	mov    rcx,rax
   14001ab03:	call   QWORD PTR [rip+0x1089f]        # 0x14002b3a8
   14001ab09:	lea    rcx,[rsp+0x390]
   14001ab11:	call   QWORD PTR [rip+0x10d81]        # 0x14002b898
   14001ab17:	lea    rcx,[rsp+0x1c0]
   14001ab1f:	call   QWORD PTR [rip+0x10d73]        # 0x14002b898
   14001ab25:	mov    eax,DWORD PTR [r15+0x70]
   14001ab29:	cmp    eax,0x3
   14001ab2c:	je     0x14001ab37
   14001ab2e:	cmp    eax,0x2
   14001ab31:	je     0x14001ab37
   14001ab33:	xor    bl,bl
   14001ab35:	jmp    0x14001ab39
   14001ab37:	mov    bl,0x1
   14001ab39:	test   bl,bl
   14001ab3b:	lea    rdx,[rip+0x12f8a]        # 0x14002dacc
   14001ab42:	lea    rax,[rip+0x12ebb]        # 0x14002da04
   14001ab49:	cmovne rdx,rax
   14001ab4d:	test   rdx,rdx
   14001ab50:	je     0x14001ab6b
   14001ab52:	xor    eax,eax
   14001ab54:	mov    rcx,r14
   14001ab57:	mov    rdi,rdx
   14001ab5a:	repnz scas al,BYTE PTR es:[rdi]
   14001ab5c:	not    rcx
   14001ab5f:	dec    rcx
   14001ab62:	mov    DWORD PTR [rsp+0x570],ecx
   14001ab69:	jmp    0x14001ab76
   14001ab6b:	mov    DWORD PTR [rsp+0x570],0x0
   14001ab76:	mov    QWORD PTR [rsp+0x578],rdx
   14001ab7e:	movaps xmm0,XMMWORD PTR [rsp+0x570]
   14001ab86:	lea    rcx,[rsp+0x58]
   14001ab8b:	lea    rdx,[rsp+0x780]
   14001ab93:	movdqa XMMWORD PTR [rsp+0x780],xmm0
   14001ab9c:	call   QWORD PTR [rip+0x10cbe]        # 0x14002b860
   14001aba2:	lea    rdx,[r15+0x28]
   14001aba6:	lea    rcx,[rsp+0x320]
   14001abae:	call   QWORD PTR [rip+0x10cec]        # 0x14002b8a0
   14001abb4:	lea    rcx,[rsp+0x320]
   14001abbc:	call   QWORD PTR [rip+0x10636]        # 0x14002b1f8
   14001abc2:	lea    rcx,[rsp+0x320]
   14001abca:	test   al,al
   14001abcc:	sete   dil
   14001abd0:	call   QWORD PTR [rip+0x10cc2]        # 0x14002b898
   14001abd6:	test   dil,dil
   14001abd9:	je     0x14001acca
   14001abdf:	lea    rdx,[rip+0x12f72]        # 0x14002db58
   14001abe6:	xor    eax,eax
   14001abe8:	mov    rcx,r14
   14001abeb:	mov    rdi,rdx
   14001abee:	mov    QWORD PTR [rsp+0x678],rdx
   14001abf6:	lea    rdx,[rsp+0x7a0]
   14001abfe:	repnz scas al,BYTE PTR es:[rdi]
   14001ac00:	not    rcx
   14001ac03:	dec    rcx
   14001ac06:	mov    DWORD PTR [rsp+0x670],ecx
   14001ac0d:	lea    rcx,[rsp+0x330]
   14001ac15:	movaps xmm0,XMMWORD PTR [rsp+0x670]
   14001ac1d:	movdqa XMMWORD PTR [rsp+0x7a0],xmm0
   14001ac26:	call   QWORD PTR [rip+0x10c34]        # 0x14002b860
   14001ac2c:	lea    rdx,[r15+0x28]
   14001ac30:	lea    rcx,[rsp+0x3e0]
   14001ac38:	call   QWORD PTR [rip+0x10c62]        # 0x14002b8a0
   14001ac3e:	mov    r13b,BYTE PTR [rsp+0xa10]
   14001ac46:	lea    rdx,[rsp+0x3e0]
   14001ac4e:	lea    rcx,[rsp+0x458]
   14001ac56:	movzx  r8d,r13b
   14001ac5a:	call   0x1400118a0
   14001ac5f:	lea    r8,[rsp+0x330]
   14001ac67:	lea    rdx,[rsp+0x58]
   14001ac6c:	lea    rcx,[rsp+0x448]
   14001ac74:	movzx  r9d,bpl
   14001ac78:	mov    QWORD PTR [rsp+0x20],rax
   14001ac7d:	call   0x140013950
   14001ac82:	lea    rcx,[rsp+0x60]
   14001ac87:	mov    rdx,rax
   14001ac8a:	call   QWORD PTR [rip+0x10918]        # 0x14002b5a8
   14001ac90:	lea    rcx,[rsp+0x448]
   14001ac98:	call   QWORD PTR [rip+0x10bfa]        # 0x14002b898
   14001ac9e:	lea    rcx,[rsp+0x458]
   14001aca6:	call   QWORD PTR [rip+0x10bec]        # 0x14002b898
   14001acac:	lea    rcx,[rsp+0x3e0]
   14001acb4:	call   QWORD PTR [rip+0x10bde]        # 0x14002b898
   14001acba:	lea    rcx,[rsp+0x330]
   14001acc2:	call   QWORD PTR [rip+0x10bd0]        # 0x14002b898
   14001acc8:	jmp    0x14001acd2
   14001acca:	mov    r13b,BYTE PTR [rsp+0xa10]
   14001acd2:	lea    rsi,[r15+0x18]
   14001acd6:	lea    rcx,[rsp+0x258]
   14001acde:	mov    rdx,rsi
   14001ace1:	call   QWORD PTR [rip+0x10bb9]        # 0x14002b8a0
   14001ace7:	lea    rcx,[rsp+0x258]
   14001acef:	call   QWORD PTR [rip+0x10503]        # 0x14002b1f8
   14001acf5:	lea    rcx,[rsp+0x258]
   14001acfd:	test   al,al
   14001acff:	sete   dil
   14001ad03:	call   QWORD PTR [rip+0x10b8f]        # 0x14002b898
   14001ad09:	test   dil,dil
   14001ad0c:	je     0x14001add3
   14001ad12:	lea    rdx,[rip+0x12e37]        # 0x14002db50
   14001ad19:	xor    eax,eax
   14001ad1b:	mov    rcx,r14
   14001ad1e:	mov    rdi,rdx
   14001ad21:	mov    QWORD PTR [rsp+0x6f8],rdx
   14001ad29:	lea    rdx,[rsp+0x7c0]
   14001ad31:	repnz scas al,BYTE PTR es:[rdi]
   14001ad33:	not    rcx
   14001ad36:	dec    rcx
   14001ad39:	mov    DWORD PTR [rsp+0x6f0],ecx
   14001ad40:	lea    rcx,[rsp+0x278]
   14001ad48:	movaps xmm0,XMMWORD PTR [rsp+0x6f0]
   14001ad50:	movdqa XMMWORD PTR [rsp+0x7c0],xmm0
   14001ad59:	call   QWORD PTR [rip+0x10b01]        # 0x14002b860
   14001ad5f:	lea    rcx,[rsp+0x268]
   14001ad67:	mov    rdx,rsi
   14001ad6a:	call   QWORD PTR [rip+0x10b30]        # 0x14002b8a0
   14001ad70:	lea    rdx,[rsp+0x268]
   14001ad78:	lea    r8,[rsp+0x278]
   14001ad80:	mov    QWORD PTR [rsp+0x20],rdx
   14001ad85:	lea    rcx,[rsp+0x468]
   14001ad8d:	lea    rdx,[rsp+0x58]
   14001ad92:	movzx  r9d,bpl
   14001ad96:	call   0x140013950
   14001ad9b:	lea    rcx,[rsp+0x60]
   14001ada0:	mov    rdx,rax
   14001ada3:	call   QWORD PTR [rip+0x107ff]        # 0x14002b5a8
   14001ada9:	lea    rcx,[rsp+0x468]
   14001adb1:	call   QWORD PTR [rip+0x10ae1]        # 0x14002b898
   14001adb7:	lea    rcx,[rsp+0x268]
   14001adbf:	call   QWORD PTR [rip+0x10ad3]        # 0x14002b898
   14001adc5:	lea    rcx,[rsp+0x278]
   14001adcd:	call   QWORD PTR [rip+0x10ac5]        # 0x14002b898
   14001add3:	lea    rdx,[rip+0x12cc6]        # 0x14002daa0
   14001adda:	xor    eax,eax
   14001addc:	mov    rcx,r14
   14001addf:	mov    rdi,rdx
   14001ade2:	mov    QWORD PTR [rsp+0x698],rdx
   14001adea:	lea    rdx,[rsp+0x7e0]
   14001adf2:	repnz scas al,BYTE PTR es:[rdi]
   14001adf4:	not    rcx
   14001adf7:	dec    rcx
   14001adfa:	mov    DWORD PTR [rsp+0x690],ecx
   14001ae01:	lea    rcx,[rsp+0x288]
   14001ae09:	movaps xmm0,XMMWORD PTR [rsp+0x690]
   14001ae11:	movdqa XMMWORD PTR [rsp+0x7e0],xmm0
   14001ae1a:	call   QWORD PTR [rip+0x10a40]        # 0x14002b860
   14001ae20:	lea    r8,[rsp+0x288]
   14001ae28:	lea    rdx,[rsp+0x1e0]
   14001ae30:	mov    rcx,r15
   14001ae33:	call   0x14000b830
   14001ae38:	lea    rcx,[rsp+0x288]
   14001ae40:	call   QWORD PTR [rip+0x10a52]        # 0x14002b898
   14001ae46:	lea    rcx,[rsp+0x1e0]
   14001ae4e:	call   QWORD PTR [rip+0x103a4]        # 0x14002b1f8
   14001ae54:	test   al,al
   14001ae56:	jne    0x14001aefe
   14001ae5c:	lea    rdx,[rip+0x12cdd]        # 0x14002db40
   14001ae63:	xor    eax,eax
   14001ae65:	mov    rcx,r14
   14001ae68:	mov    rdi,rdx
   14001ae6b:	mov    QWORD PTR [rsp+0x738],rdx
   14001ae73:	lea    rdx,[rsp+0x800]
   14001ae7b:	repnz scas al,BYTE PTR es:[rdi]
   14001ae7d:	not    rcx
   14001ae80:	dec    rcx
   14001ae83:	mov    DWORD PTR [rsp+0x730],ecx
   14001ae8a:	lea    rcx,[rsp+0x298]
   14001ae92:	movaps xmm0,XMMWORD PTR [rsp+0x730]
   14001ae9a:	movdqa XMMWORD PTR [rsp+0x800],xmm0
   14001aea3:	call   QWORD PTR [rip+0x109b7]        # 0x14002b860
   14001aea9:	lea    rdx,[rsp+0x1e0]
   14001aeb1:	mov    QWORD PTR [rsp+0x20],rdx
   14001aeb6:	lea    r8,[rsp+0x298]
   14001aebe:	lea    rcx,[rsp+0x478]
   14001aec6:	lea    rdx,[rsp+0x58]
   14001aecb:	movzx  r9d,bpl
   14001aecf:	call   0x140013950
   14001aed4:	lea    rcx,[rsp+0x60]
   14001aed9:	mov    rdx,rax
   14001aedc:	call   QWORD PTR [rip+0x106c6]        # 0x14002b5a8
   14001aee2:	lea    rcx,[rsp+0x478]
   14001aeea:	call   QWORD PTR [rip+0x109a8]        # 0x14002b898
   14001aef0:	lea    rcx,[rsp+0x298]
   14001aef8:	call   QWORD PTR [rip+0x1099a]        # 0x14002b898
   14001aefe:	test   bl,bl
   14001af00:	lea    rdx,[rip+0x124b2]        # 0x14002d3b9
   14001af07:	lea    rax,[rip+0x12b46]        # 0x14002da54
   14001af0e:	cmovne rdx,rax
   14001af12:	test   rdx,rdx
   14001af15:	je     0x14001af2d
   14001af17:	xor    eax,eax
   14001af19:	mov    rcx,r14
   14001af1c:	mov    rdi,rdx
   14001af1f:	repnz scas al,BYTE PTR es:[rdi]
   14001af21:	not    rcx
   14001af24:	dec    rcx
   14001af27:	mov    DWORD PTR [rsp+0x40],ecx
   14001af2b:	jmp    0x14001af35
   14001af2d:	mov    DWORD PTR [rsp+0x40],0x0
   14001af35:	mov    QWORD PTR [rsp+0x48],rdx
   14001af3a:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   14001af3f:	lea    rcx,[rsp+0x58]
   14001af44:	lea    rdx,[rsp+0x820]
   14001af4c:	movdqa XMMWORD PTR [rsp+0x820],xmm0
   14001af55:	call   QWORD PTR [rip+0x105b5]        # 0x14002b510
   14001af5b:	lea    rdx,[r15+0x8]
   14001af5f:	lea    rcx,[rsp+0x2a8]
   14001af67:	call   QWORD PTR [rip+0x10933]        # 0x14002b8a0
   14001af6d:	lea    rcx,[rsp+0x2a8]
   14001af75:	call   QWORD PTR [rip+0x1027d]        # 0x14002b1f8
   14001af7b:	lea    rcx,[rsp+0x2a8]
   14001af83:	test   al,al
   14001af85:	sete   dil
   14001af89:	call   QWORD PTR [rip+0x10909]        # 0x14002b898
   14001af8f:	lea    rdx,[r15+0x20]
   14001af93:	test   dil,dil
   14001af96:	je     0x14001b120
   14001af9c:	lea    rcx,[rsp+0x2e8]
   14001afa4:	call   QWORD PTR [rip+0x108f6]        # 0x14002b8a0
   14001afaa:	lea    rdx,[r15+0x8]
   14001afae:	lea    rcx,[rsp+0x2d8]
   14001afb6:	mov    BYTE PTR [rsp+0xa28],0x7c
   14001afbe:	call   QWORD PTR [rip+0x108dc]        # 0x14002b8a0
   14001afc4:	lea    rdx,[rsp+0x2d8]
   14001afcc:	lea    rcx,[rsp+0x498]
   14001afd4:	mov    r8b,0x1
   14001afd7:	call   0x1400118a0
   14001afdc:	lea    rdx,[rsp+0x2e8]
   14001afe4:	lea    rcx,[rsp+0x4a8]
   14001afec:	mov    QWORD PTR [rsp+0x5f0],rax
   14001aff4:	lea    rax,[rsp+0xa28]
   14001affc:	mov    r8b,0x1
   14001afff:	mov    QWORD PTR [rsp+0x5f8],rax
   14001b007:	lea    rax,[rsp+0x5f0]
   14001b00f:	mov    QWORD PTR [rsp+0x600],rax
   14001b017:	call   0x1400118a0
   14001b01c:	lea    rdx,[rsp+0x2c8]
   14001b024:	lea    rcx,[rsp+0x600]
   14001b02c:	mov    QWORD PTR [rsp+0x608],rax
   14001b034:	call   0x140011d20
   14001b039:	lea    rsi,[rip+0x12b18]        # 0x14002db58
   14001b040:	xor    eax,eax
   14001b042:	mov    rcx,r14
   14001b045:	mov    rdi,rsi
   14001b048:	mov    QWORD PTR [rsp+0x628],rsi
   14001b050:	repnz scas al,BYTE PTR es:[rdi]
   14001b052:	lea    rdx,[rsp+0x840]
   14001b05a:	not    rcx
   14001b05d:	dec    rcx
   14001b060:	mov    DWORD PTR [rsp+0x620],ecx
   14001b067:	lea    rcx,[rsp+0x2b8]
   14001b06f:	movaps xmm0,XMMWORD PTR [rsp+0x620]
   14001b077:	movdqa XMMWORD PTR [rsp+0x840],xmm0
   14001b080:	call   QWORD PTR [rip+0x107da]        # 0x14002b860
   14001b086:	lea    rdx,[rsp+0x2c8]
   14001b08e:	mov    QWORD PTR [rsp+0x20],rdx
   14001b093:	lea    r8,[rsp+0x2b8]
   14001b09b:	lea    rcx,[rsp+0x488]
   14001b0a3:	lea    rdx,[rsp+0x58]
   14001b0a8:	movzx  r9d,bpl
   14001b0ac:	call   0x140013950
   14001b0b1:	lea    rcx,[rsp+0x60]
   14001b0b6:	mov    rdx,rax
   14001b0b9:	call   QWORD PTR [rip+0x104e9]        # 0x14002b5a8
   14001b0bf:	lea    rcx,[rsp+0x488]
   14001b0c7:	call   QWORD PTR [rip+0x107cb]        # 0x14002b898
   14001b0cd:	lea    rcx,[rsp+0x2b8]
   14001b0d5:	call   QWORD PTR [rip+0x107bd]        # 0x14002b898
   14001b0db:	lea    rcx,[rsp+0x2c8]
   14001b0e3:	call   QWORD PTR [rip+0x107af]        # 0x14002b898
   14001b0e9:	lea    rcx,[rsp+0x498]
   14001b0f1:	call   QWORD PTR [rip+0x107a1]        # 0x14002b898
   14001b0f7:	lea    rcx,[rsp+0x2d8]
   14001b0ff:	call   QWORD PTR [rip+0x10793]        # 0x14002b898
   14001b105:	lea    rcx,[rsp+0x4a8]
   14001b10d:	call   QWORD PTR [rip+0x10785]        # 0x14002b898
   14001b113:	lea    rcx,[rsp+0x2e8]
   14001b11b:	jmp    0x14001b234
   14001b120:	lea    rcx,[rsp+0x2f8]
   14001b128:	call   QWORD PTR [rip+0x10772]        # 0x14002b8a0
   14001b12e:	lea    rcx,[rsp+0x2f8]
   14001b136:	call   QWORD PTR [rip+0x100bc]        # 0x14002b1f8
   14001b13c:	lea    rcx,[rsp+0x2f8]
   14001b144:	test   al,al
   14001b146:	sete   dil
   14001b14a:	call   QWORD PTR [rip+0x10748]        # 0x14002b898
   14001b150:	test   dil,dil
   14001b153:	je     0x14001b23a
   14001b159:	lea    rdx,[rip+0x129f8]        # 0x14002db58
   14001b160:	xor    eax,eax
   14001b162:	mov    rcx,r14
   14001b165:	mov    rdi,rdx
   14001b168:	mov    QWORD PTR [rsp+0x648],rdx
   14001b170:	lea    rdx,[rsp+0x860]
   14001b178:	repnz scas al,BYTE PTR es:[rdi]
   14001b17a:	not    rcx
   14001b17d:	dec    rcx
   14001b180:	mov    DWORD PTR [rsp+0x640],ecx
   14001b187:	lea    rcx,[rsp+0x318]
   14001b18f:	movaps xmm0,XMMWORD PTR [rsp+0x640]
   14001b197:	movdqa XMMWORD PTR [rsp+0x860],xmm0
   14001b1a0:	call   QWORD PTR [rip+0x106ba]        # 0x14002b860
   14001b1a6:	lea    rdx,[r15+0x20]
   14001b1aa:	lea    rcx,[rsp+0x308]
   14001b1b2:	call   QWORD PTR [rip+0x106e8]        # 0x14002b8a0
   14001b1b8:	lea    rdx,[rsp+0x308]
   14001b1c0:	lea    rcx,[rsp+0x4c8]
   14001b1c8:	movzx  r8d,r13b
   14001b1cc:	call   0x1400118a0
   14001b1d1:	lea    r8,[rsp+0x318]
   14001b1d9:	lea    rdx,[rsp+0x58]
   14001b1de:	lea    rcx,[rsp+0x4b8]
   14001b1e6:	movzx  r9d,bpl
   14001b1ea:	mov    QWORD PTR [rsp+0x20],rax
   14001b1ef:	call   0x140013950
   14001b1f4:	lea    rcx,[rsp+0x60]
   14001b1f9:	mov    rdx,rax
   14001b1fc:	call   QWORD PTR [rip+0x103a6]        # 0x14002b5a8
   14001b202:	lea    rcx,[rsp+0x4b8]
   14001b20a:	call   QWORD PTR [rip+0x10688]        # 0x14002b898
   14001b210:	lea    rcx,[rsp+0x4c8]
   14001b218:	call   QWORD PTR [rip+0x1067a]        # 0x14002b898
   14001b21e:	lea    rcx,[rsp+0x308]
   14001b226:	call   QWORD PTR [rip+0x1066c]        # 0x14002b898
   14001b22c:	lea    rcx,[rsp+0x318]
   14001b234:	call   QWORD PTR [rip+0x1065e]        # 0x14002b898
   14001b23a:	lea    rdx,[rip+0x1290f]        # 0x14002db50
   14001b241:	xor    eax,eax
   14001b243:	mov    rcx,r14
   14001b246:	mov    rdi,rdx
   14001b249:	mov    QWORD PTR [rsp+0x668],rdx
   14001b251:	lea    rdx,[rsp+0x880]
   14001b259:	repnz scas al,BYTE PTR es:[rdi]
   14001b25b:	not    rcx
   14001b25e:	dec    rcx
   14001b261:	mov    DWORD PTR [rsp+0x660],ecx
   14001b268:	lea    rcx,[rsp+0x338]
   14001b270:	movaps xmm0,XMMWORD PTR [rsp+0x660]
   14001b278:	movdqa XMMWORD PTR [rsp+0x880],xmm0
   14001b281:	call   QWORD PTR [rip+0x105d9]        # 0x14002b860
   14001b287:	lea    rdx,[r15+0x10]
   14001b28b:	lea    rcx,[rsp+0x328]
   14001b293:	call   QWORD PTR [rip+0x10607]        # 0x14002b8a0
   14001b299:	lea    rdx,[rsp+0x328]
   14001b2a1:	lea    r8,[rsp+0x338]
   14001b2a9:	mov    QWORD PTR [rsp+0x20],rdx
   14001b2ae:	lea    rcx,[rsp+0x4d8]
   14001b2b6:	lea    rdx,[rsp+0x58]
   14001b2bb:	movzx  r9d,bpl
   14001b2bf:	call   0x140013950
   14001b2c4:	lea    rcx,[rsp+0x60]
   14001b2c9:	mov    rdx,rax
   14001b2cc:	call   QWORD PTR [rip+0x102d6]        # 0x14002b5a8
   14001b2d2:	lea    rcx,[rsp+0x4d8]
   14001b2da:	call   QWORD PTR [rip+0x105b8]        # 0x14002b898
   14001b2e0:	lea    rcx,[rsp+0x328]
   14001b2e8:	call   QWORD PTR [rip+0x105aa]        # 0x14002b898
   14001b2ee:	lea    rcx,[rsp+0x338]
   14001b2f6:	call   QWORD PTR [rip+0x1059c]        # 0x14002b898
   14001b2fc:	cmp    BYTE PTR [r15+0x74],0x0
   14001b301:	jne    0x14001b435
   14001b307:	lea    rcx,[r15+0x50]
   14001b30b:	call   QWORD PTR [rip+0xfeef]        # 0x14002b200
   14001b311:	test   eax,eax
   14001b313:	jg     0x14001b325
   14001b315:	lea    rcx,[rsp+0x128]
   14001b31d:	call   QWORD PTR [rip+0x1056d]        # 0x14002b890
   14001b323:	jmp    0x14001b342
   14001b325:	lea    rcx,[r15+0x50]
   14001b329:	xor    edx,edx
   14001b32b:	call   QWORD PTR [rip+0xfedf]        # 0x14002b210
   14001b331:	lea    rcx,[rsp+0x128]
   14001b339:	mov    rdx,rax
   14001b33c:	call   QWORD PTR [rip+0x1055e]        # 0x14002b8a0
   14001b342:	lea    rcx,[rsp+0x198]
   14001b34a:	mov    edx,0x2762
   14001b34f:	call   QWORD PTR [rip+0x1033b]        # 0x14002b690
   14001b355:	lea    rcx,[rsp+0x234]
   14001b35d:	mov    edx,0x9c
   14001b362:	mov    rdi,rax
   14001b365:	call   QWORD PTR [rip+0x10325]        # 0x14002b690
   14001b36b:	movzx  r8d,WORD PTR [rdi]
   14001b36f:	movzx  edx,WORD PTR [rax]
   14001b372:	lea    rcx,[rsp+0x128]
   14001b37a:	mov    r9d,0x1
   14001b380:	call   QWORD PTR [rip+0x101da]        # 0x14002b560
   14001b386:	lea    rdx,[rip+0x1232b]        # 0x14002d6b8
   14001b38d:	xor    eax,eax
   14001b38f:	mov    rdi,rdx
   14001b392:	mov    QWORD PTR [rsp+0x688],rdx
   14001b39a:	mov    rcx,r14
   14001b39d:	repnz scas al,BYTE PTR es:[rdi]
   14001b39f:	lea    rdx,[rsp+0x8a0]
   14001b3a7:	not    rcx
   14001b3aa:	dec    rcx
   14001b3ad:	mov    DWORD PTR [rsp+0x680],ecx
   14001b3b4:	lea    rcx,[rsp+0x348]
   14001b3bc:	movaps xmm0,XMMWORD PTR [rsp+0x680]
   14001b3c4:	movdqa XMMWORD PTR [rsp+0x8a0],xmm0
   14001b3cd:	call   QWORD PTR [rip+0x1048d]        # 0x14002b860
   14001b3d3:	lea    rdx,[rsp+0x128]
   14001b3db:	mov    QWORD PTR [rsp+0x20],rdx
   14001b3e0:	lea    r8,[rsp+0x348]
   14001b3e8:	lea    rcx,[rsp+0x4e8]
   14001b3f0:	lea    rdx,[rsp+0x58]
   14001b3f5:	movzx  r9d,bpl
   14001b3f9:	call   0x140013950
   14001b3fe:	lea    rcx,[rsp+0x60]
   14001b403:	mov    rdx,rax
   14001b406:	call   QWORD PTR [rip+0x1019c]        # 0x14002b5a8
   14001b40c:	lea    rcx,[rsp+0x4e8]
   14001b414:	call   QWORD PTR [rip+0x1047e]        # 0x14002b898
   14001b41a:	lea    rcx,[rsp+0x348]
   14001b422:	call   QWORD PTR [rip+0x10470]        # 0x14002b898
   14001b428:	lea    rcx,[rsp+0x128]
   14001b430:	jmp    0x14001b710
   14001b435:	lea    rdx,[rip+0x125f4]        # 0x14002da30
   14001b43c:	xor    eax,eax
   14001b43e:	mov    rcx,r14
   14001b441:	mov    rdi,rdx
   14001b444:	mov    QWORD PTR [rsp+0x6a8],rdx
   14001b44c:	lea    rdx,[rsp+0x8c0]
   14001b454:	repnz scas al,BYTE PTR es:[rdi]
   14001b456:	not    rcx
   14001b459:	dec    rcx
   14001b45c:	mov    DWORD PTR [rsp+0x6a0],ecx
   14001b463:	lea    rcx,[rsp+0x358]
   14001b46b:	movaps xmm0,XMMWORD PTR [rsp+0x6a0]
   14001b473:	movdqa XMMWORD PTR [rsp+0x8c0],xmm0
   14001b47c:	call   QWORD PTR [rip+0x103de]        # 0x14002b860
   14001b482:	lea    r8,[rsp+0x358]
   14001b48a:	lea    rdx,[rsp+0x130]
   14001b492:	mov    rcx,r15
   14001b495:	call   0x14000b830
   14001b49a:	lea    rcx,[rsp+0x358]
   14001b4a2:	call   QWORD PTR [rip+0x103f0]        # 0x14002b898
   14001b4a8:	lea    rcx,[rsp+0x130]
   14001b4b0:	call   QWORD PTR [rip+0xfd42]        # 0x14002b1f8
   14001b4b6:	test   al,al
   14001b4b8:	je     0x14001b4f0
   14001b4ba:	lea    rdx,[r15+0x10]
   14001b4be:	lea    rcx,[rsp+0x368]
   14001b4c6:	call   QWORD PTR [rip+0x103d4]        # 0x14002b8a0
   14001b4cc:	lea    rdx,[rsp+0x368]
   14001b4d4:	lea    rcx,[rsp+0x130]
   14001b4dc:	call   QWORD PTR [rip+0x103ce]        # 0x14002b8b0
   14001b4e2:	lea    rcx,[rsp+0x368]
   14001b4ea:	call   QWORD PTR [rip+0x103a8]        # 0x14002b898
   14001b4f0:	lea    rdx,[rip+0x12649]        # 0x14002db40
   14001b4f7:	xor    eax,eax
   14001b4f9:	mov    rcx,r14
   14001b4fc:	mov    rdi,rdx
   14001b4ff:	mov    QWORD PTR [rsp+0x6c8],rdx
   14001b507:	lea    rdx,[rsp+0x8e0]
   14001b50f:	repnz scas al,BYTE PTR es:[rdi]
   14001b511:	not    rcx
   14001b514:	dec    rcx
   14001b517:	mov    DWORD PTR [rsp+0x6c0],ecx
   14001b51e:	lea    rcx,[rsp+0x378]
   14001b526:	movaps xmm0,XMMWORD PTR [rsp+0x6c0]
   14001b52e:	movdqa XMMWORD PTR [rsp+0x8e0],xmm0
   14001b537:	call   QWORD PTR [rip+0x10323]        # 0x14002b860
   14001b53d:	lea    rdx,[rsp+0x130]
   14001b545:	mov    QWORD PTR [rsp+0x20],rdx
   14001b54a:	lea    r8,[rsp+0x378]
   14001b552:	lea    rcx,[rsp+0x4f8]
   14001b55a:	lea    rdx,[rsp+0x58]
   14001b55f:	movzx  r9d,bpl
   14001b563:	call   0x140013950
   14001b568:	lea    rcx,[rsp+0x60]
   14001b56d:	mov    rdx,rax
   14001b570:	call   QWORD PTR [rip+0x10032]        # 0x14002b5a8
   14001b576:	lea    rcx,[rsp+0x4f8]
   14001b57e:	call   QWORD PTR [rip+0x10314]        # 0x14002b898
   14001b584:	lea    rcx,[rsp+0x378]
   14001b58c:	call   QWORD PTR [rip+0x10306]        # 0x14002b898
   14001b592:	lea    rdx,[r15+0x50]
   14001b596:	lea    rcx,[rsp+0x138]
   14001b59e:	call   0x140001700
   14001b5a3:	lea    rcx,[rsp+0x138]
   14001b5ab:	xor    ebx,ebx
   14001b5ad:	call   QWORD PTR [rip+0xfc4d]        # 0x14002b200
   14001b5b3:	test   eax,eax
   14001b5b5:	je     0x14001b6fb
   14001b5bb:	nop    DWORD PTR [rax+rax*1+0x0]
   14001b5c0:	lea    rcx,[rsp+0x138]
   14001b5c8:	mov    edx,ebx
   14001b5ca:	call   QWORD PTR [rip+0xfc40]        # 0x14002b210
   14001b5d0:	lea    rcx,[rsp+0x1d0]
   14001b5d8:	mov    rdx,rax
   14001b5db:	call   QWORD PTR [rip+0x102bf]        # 0x14002b8a0
   14001b5e1:	lea    rcx,[rsp+0x22c]
   14001b5e9:	mov    edx,0x2762
   14001b5ee:	call   QWORD PTR [rip+0x1009c]        # 0x14002b690
   14001b5f4:	lea    rcx,[rsp+0x1a8]
   14001b5fc:	mov    edx,0x9c
   14001b601:	mov    rdi,rax
   14001b604:	call   QWORD PTR [rip+0x10086]        # 0x14002b690
   14001b60a:	movzx  r8d,WORD PTR [rdi]
   14001b60e:	movzx  edx,WORD PTR [rax]
   14001b611:	lea    rcx,[rsp+0x1d0]
   14001b619:	mov    r9d,0x1
   14001b61f:	call   QWORD PTR [rip+0xff3b]        # 0x14002b560
   14001b625:	lea    rcx,[rsp+0x1b8]
   14001b62d:	mov    dl,0x20
   14001b62f:	call   QWORD PTR [rip+0x10293]        # 0x14002b8c8
   14001b635:	lea    rdx,[rip+0x124f4]        # 0x14002db30
   14001b63c:	lea    rcx,[rsp+0x528]
   14001b644:	mov    r8d,r14d
   14001b647:	mov    rdi,rax
   14001b64a:	call   QWORD PTR [rip+0xfc30]        # 0x14002b280
   14001b650:	lea    rdx,[rsp+0x518]
   14001b658:	xor    r9d,r9d
   14001b65b:	mov    rcx,rax
   14001b65e:	movzx  eax,WORD PTR [rdi]
   14001b661:	mov    r8d,ebx
   14001b664:	mov    WORD PTR [rsp+0x28],ax
   14001b669:	mov    DWORD PTR [rsp+0x20],0xa
   14001b671:	call   QWORD PTR [rip+0xfe91]        # 0x14002b508
   14001b677:	mov    r8,rax
   14001b67a:	lea    rax,[rsp+0x1d0]
   14001b682:	lea    rdx,[rsp+0x58]
   14001b687:	lea    rcx,[rsp+0x508]
   14001b68f:	movzx  r9d,bpl
   14001b693:	mov    QWORD PTR [rsp+0x20],rax
   14001b698:	call   0x140013950
   14001b69d:	lea    rcx,[rsp+0x60]
   14001b6a2:	mov    rdx,rax
   14001b6a5:	call   QWORD PTR [rip+0xfefd]        # 0x14002b5a8
   14001b6ab:	lea    rcx,[rsp+0x508]
   14001b6b3:	call   QWORD PTR [rip+0x101df]        # 0x14002b898
   14001b6b9:	lea    rcx,[rsp+0x518]
   14001b6c1:	call   QWORD PTR [rip+0x101d1]        # 0x14002b898
   14001b6c7:	lea    rcx,[rsp+0x528]
   14001b6cf:	call   QWORD PTR [rip+0x101c3]        # 0x14002b898
   14001b6d5:	lea    rcx,[rsp+0x1d0]
   14001b6dd:	call   QWORD PTR [rip+0x101b5]        # 0x14002b898
   14001b6e3:	lea    rcx,[rsp+0x138]
   14001b6eb:	inc    ebx
   14001b6ed:	call   QWORD PTR [rip+0xfb0d]        # 0x14002b200
   14001b6f3:	cmp    ebx,eax
   14001b6f5:	jne    0x14001b5c0
   14001b6fb:	lea    rcx,[rsp+0x138]
   14001b703:	call   0x1400017b0
   14001b708:	lea    rcx,[rsp+0x130]
   14001b710:	call   QWORD PTR [rip+0x10182]        # 0x14002b898
   14001b716:	lea    rcx,[rsp+0x1e0]
   14001b71e:	call   QWORD PTR [rip+0x10174]        # 0x14002b898
   14001b724:	lea    rcx,[rsp+0x58]
   14001b729:	call   QWORD PTR [rip+0x10169]        # 0x14002b898
   14001b72f:	lea    rcx,[rsp+0x70]
   14001b734:	call   0x1400017b0
   14001b739:	lea    rcx,[rsp+0xb8]
   14001b741:	call   QWORD PTR [rip+0x10151]        # 0x14002b898
   14001b747:	dec    DWORD PTR [rsp+0xd0]
   14001b74e:	bt     r12d,0x8
   14001b753:	jae    0x1400198f0
   14001b759:	mov    rsi,QWORD PTR [rsp+0x538]
   14001b761:	btr    r12d,0x8
   14001b766:	mov    eax,DWORD PTR [rsi]
   14001b768:	test   eax,eax
   14001b76a:	je     0x14001b78a
   14001b76c:	cmp    eax,0xffffffff
   14001b76f:	je     0x1400198f0
   14001b775:	mov    eax,r14d
   14001b778:	lock xadd DWORD PTR [rsi],eax
   14001b77c:	add    eax,0xffffffff
   14001b77f:	setne  al
   14001b782:	test   al,al
   14001b784:	jne    0x1400198f0
   14001b78a:	mov    rsi,QWORD PTR [rsp+0x538]
   14001b792:	movsxd rax,DWORD PTR [rsi+0xc]
   14001b796:	lea    rdi,[rsi+rax*8+0x10]
   14001b79b:	movsxd rax,DWORD PTR [rsi+0x8]
   14001b79f:	lea    rbp,[rsi+rax*8+0x10]
   14001b7a4:	cmp    rbp,rdi
   14001b7a7:	je     0x1400198e2
   14001b7ad:	nop    DWORD PTR [rax]
   14001b7b0:	mov    rbx,QWORD PTR [rdi-0x8]
   14001b7b4:	sub    rdi,0x8
   14001b7b8:	test   rbx,rbx
   14001b7bb:	je     0x14001b7cd
   14001b7bd:	mov    rcx,rbx
   14001b7c0:	call   0x140001ea0
   14001b7c5:	mov    rcx,rbx
   14001b7c8:	call   0x140029524
   14001b7cd:	cmp    rdi,rbp
   14001b7d0:	jne    0x14001b7b0
   14001b7d2:	jmp    0x1400198e2
   14001b7d7:	add    QWORD PTR [rsp+0xd8],0x8
   14001b7e0:	test   r12b,0x20
   14001b7e4:	je     0x1400197a0
   14001b7ea:	mov    rsi,QWORD PTR [rsp+0x548]
   14001b7f2:	and    r12d,0xffffffdf
   14001b7f6:	mov    eax,DWORD PTR [rsi]
   14001b7f8:	test   eax,eax
   14001b7fa:	je     0x14001b822
   14001b7fc:	cmp    eax,0xffffffff
   14001b7ff:	je     0x1400197a0
   14001b805:	mov    eax,r14d
   14001b808:	lock xadd DWORD PTR [rsi],eax
   14001b80c:	add    eax,0xffffffff
   14001b80f:	setne  al
   14001b812:	test   al,al
   14001b814:	jne    0x1400197a0
   14001b81a:	mov    rsi,QWORD PTR [rsp+0x548]
   14001b822:	movsxd rax,DWORD PTR [rsi+0xc]
   14001b826:	lea    rdi,[rsi+rax*8+0x10]
   14001b82b:	movsxd rax,DWORD PTR [rsi+0x8]
   14001b82f:	lea    rbp,[rsi+rax*8+0x10]
   14001b834:	cmp    rbp,rdi
   14001b837:	je     0x140019792
   14001b83d:	nop    DWORD PTR [rax]
   14001b840:	mov    rbx,QWORD PTR [rdi-0x8]
   14001b844:	sub    rdi,0x8
   14001b848:	test   rbx,rbx
   14001b84b:	je     0x14001b85d
   14001b84d:	mov    rcx,rbx
   14001b850:	call   0x140001ea0
   14001b855:	mov    rcx,rbx
   14001b858:	call   0x140029524
   14001b85d:	cmp    rdi,rbp
   14001b860:	jne    0x14001b840
   14001b862:	jmp    0x140019792
   14001b867:	mov    rdx,QWORD PTR [rsp+0xc8]
   14001b86f:	mov    eax,DWORD PTR [rdx]
   14001b871:	test   eax,eax
   14001b873:	je     0x14001b893
   14001b875:	cmp    eax,0xffffffff
   14001b878:	je     0x14001b8a0
   14001b87a:	mov    eax,r14d
   14001b87d:	lock xadd DWORD PTR [rdx],eax
   14001b881:	add    eax,0xffffffff
   14001b884:	setne  al
   14001b887:	test   al,al
   14001b889:	jne    0x14001b8a0
   14001b88b:	mov    rdx,QWORD PTR [rsp+0xc8]
   14001b893:	lea    rcx,[rsp+0xc8]
   14001b89b:	call   0x140002700
   14001b8a0:	lea    rcx,[rsp+0xa0]
   14001b8a8:	call   QWORD PTR [rip+0xffea]        # 0x14002b898
   14001b8ae:	lea    rcx,[rsp+0x50]
   14001b8b3:	call   0x1400017b0
   14001b8b8:	mov    rcx,QWORD PTR [rsp+0x30]
   14001b8bd:	mov    eax,DWORD PTR [rcx+0x10]
   14001b8c0:	test   eax,eax
   14001b8c2:	je     0x14001b8df
   14001b8c4:	cmp    eax,0xffffffff
   14001b8c7:	je     0x14001b8ec
   14001b8c9:	lock xadd DWORD PTR [rcx+0x10],r14d
   14001b8cf:	add    r14d,0xffffffff
   14001b8d3:	setne  al
   14001b8d6:	test   al,al
   14001b8d8:	jne    0x14001b8ec
   14001b8da:	mov    rcx,QWORD PTR [rsp+0x30]
   14001b8df:	lea    rdx,[rip+0xfffffffffffe5b2a]        # 0x140001410
   14001b8e6:	call   QWORD PTR [rip+0xff7c]        # 0x14002b868
   14001b8ec:	lea    rcx,[rsp+0x1f0]
   14001b8f4:	call   QWORD PTR [rip+0xff9e]        # 0x14002b898
   14001b8fa:	lea    rcx,[rsp+0x60]
   14001b8ff:	call   QWORD PTR [rip+0xfc9b]        # 0x14002b5a0
   14001b905:	lea    rcx,[rsp+0x388]
   14001b90d:	call   QWORD PTR [rip+0xff85]        # 0x14002b898
   14001b913:	mov    rbx,QWORD PTR [rsp+0xa18]
   14001b91b:	mov    al,0x1
   14001b91d:	add    rsp,0x9d0
   14001b924:	pop    r15
   14001b926:	pop    r14
   14001b928:	pop    r13
   14001b92a:	pop    r12
   14001b92c:	pop    rdi
   14001b92d:	pop    rsi
   14001b92e:	pop    rbp
   14001b92f:	ret    
   14001b930:	mov    QWORD PTR [rsp+0x8],rbx
   14001b935:	push   rdi
   14001b936:	sub    rsp,0x70
   14001b93a:	mov    rdi,rdx
   14001b93d:	mov    rdx,rcx
   14001b940:	lea    rcx,[rsp+0x20]
   14001b945:	mov    rbx,r8
   14001b948:	call   0x140017e70
   14001b94d:	lea    rcx,[rsp+0x20]
   14001b952:	call   0x14000a790
   14001b957:	lea    rcx,[rsp+0x20]
   14001b95c:	mov    r8,rbx
   14001b95f:	mov    rdx,rdi
   14001b962:	call   0x140017fb0
   14001b967:	lea    rcx,[rsp+0x20]
   14001b96c:	movzx  ebx,al
   14001b96f:	call   0x140002830
   14001b974:	mov    al,bl
   14001b976:	mov    rbx,QWORD PTR [rsp+0x80]
   14001b97e:	add    rsp,0x70
   14001b982:	pop    rdi
   14001b983:	ret    
   14001b984:	int3   
   14001b985:	int3   
   14001b986:	int3   
   14001b987:	int3   
   14001b988:	int3   
   14001b989:	int3   
   14001b98a:	int3   
   14001b98b:	int3   
   14001b98c:	int3   
   14001b98d:	int3   
   14001b98e:	int3   
   14001b98f:	int3   
   14001b990:	mov    QWORD PTR [rsp+0x10],rbx
   14001b995:	mov    QWORD PTR [rsp+0x18],rsi
   14001b99a:	push   rdi
   14001b99b:	sub    rsp,0x70
   14001b99f:	lea    rcx,[rsp+0x40]
   14001b9a4:	call   QWORD PTR [rip+0xfee6]        # 0x14002b890
   14001b9aa:	lea    rcx,[rsp+0x48]
   14001b9af:	call   QWORD PTR [rip+0xfedb]        # 0x14002b890
   14001b9b5:	or     rcx,0xffffffffffffffff
   14001b9b9:	lea    rdx,[rip+0x12238]        # 0x14002dbf8
   14001b9c0:	mov    QWORD PTR [rsp+0x38],rdx
   14001b9c5:	mov    rdi,rdx
   14001b9c8:	xor    eax,eax
   14001b9ca:	repnz scas al,BYTE PTR es:[rdi]
   14001b9cc:	xor    esi,esi
   14001b9ce:	lea    rdx,[rsp+0x30]
   14001b9d3:	not    rcx
   14001b9d6:	mov    QWORD PTR [rsp+0x50],rsi
   14001b9db:	mov    QWORD PTR [rsp+0x58],rsi
   14001b9e0:	dec    rcx
   14001b9e3:	mov    DWORD PTR [rsp+0x64],0xffffffff
   14001b9eb:	mov    DWORD PTR [rsp+0x30],ecx
   14001b9ef:	lea    rcx,[rsp+0x40]
   14001b9f4:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14001b9f9:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   14001b9ff:	call   QWORD PTR [rip+0xfb0b]        # 0x14002b510
   14001ba05:	lea    r8,[rip+0x121cc]        # 0x14002dbd8
   14001ba0c:	lea    rdx,[rip+0x1199d]        # 0x14002d3b0
   14001ba13:	lea    rcx,[rsp+0x80]
   14001ba1b:	xor    r9d,r9d
   14001ba1e:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14001ba26:	call   QWORD PTR [rip+0xfe7c]        # 0x14002b8a8
   14001ba2c:	lea    rdx,[rsp+0x80]
   14001ba34:	lea    rcx,[rsp+0x48]
   14001ba39:	call   QWORD PTR [rip+0xfe71]        # 0x14002b8b0
   14001ba3f:	lea    rcx,[rsp+0x80]
   14001ba47:	call   QWORD PTR [rip+0xfe4b]        # 0x14002b898
   14001ba4d:	lea    rax,[rip+0xffffffffffffc55c]        # 0x140017fb0
   14001ba54:	lea    rbx,[rip+0xffffffffffff8e65]        # 0x1400148c0
   14001ba5b:	lea    rcx,[rsp+0x40]
   14001ba60:	mov    QWORD PTR [rsp+0x50],rbx
   14001ba65:	mov    QWORD PTR [rsp+0x58],rax
   14001ba6a:	mov    DWORD PTR [rsp+0x60],esi
   14001ba6e:	mov    DWORD PTR [rsp+0x64],0x1
   14001ba76:	call   0x140008520
   14001ba7b:	or     rcx,0xffffffffffffffff
   14001ba7f:	lea    r8,[rip+0x1214a]        # 0x14002dbd0
   14001ba86:	xor    eax,eax
   14001ba88:	mov    QWORD PTR [rsp+0x38],r8
   14001ba8d:	mov    rdi,r8
   14001ba90:	lea    rdx,[rsp+0x30]
   14001ba95:	repnz scas al,BYTE PTR es:[rdi]
   14001ba97:	not    rcx
   14001ba9a:	dec    rcx
   14001ba9d:	mov    DWORD PTR [rsp+0x30],ecx
   14001baa1:	lea    rcx,[rsp+0x40]
   14001baa6:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14001baab:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   14001bab1:	call   QWORD PTR [rip+0xfa59]        # 0x14002b510
   14001bab7:	lea    r8,[rip+0x120ea]        # 0x14002dba8
   14001babe:	lea    rdx,[rip+0x118eb]        # 0x14002d3b0
   14001bac5:	lea    rcx,[rsp+0x80]
   14001bacd:	xor    r9d,r9d
   14001bad0:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14001bad8:	call   QWORD PTR [rip+0xfdca]        # 0x14002b8a8
   14001bade:	lea    rdx,[rsp+0x80]
   14001bae6:	lea    rcx,[rsp+0x48]
   14001baeb:	call   QWORD PTR [rip+0xfdbf]        # 0x14002b8b0
   14001baf1:	lea    rcx,[rsp+0x80]
   14001baf9:	call   QWORD PTR [rip+0xfd99]        # 0x14002b898
   14001baff:	lea    rcx,[rip+0xfffffffffffffe2a]        # 0x14001b930
   14001bb06:	mov    QWORD PTR [rsp+0x50],rbx
   14001bb0b:	mov    QWORD PTR [rsp+0x58],rcx
   14001bb10:	lea    rcx,[rsp+0x40]
   14001bb15:	mov    DWORD PTR [rsp+0x60],esi
   14001bb19:	mov    DWORD PTR [rsp+0x64],0xffffffff
   14001bb21:	call   0x140008520
   14001bb26:	lea    rcx,[rsp+0x48]
   14001bb2b:	call   QWORD PTR [rip+0xfd67]        # 0x14002b898
   14001bb31:	lea    rcx,[rsp+0x40]
   14001bb36:	call   QWORD PTR [rip+0xfd5c]        # 0x14002b898
   14001bb3c:	lea    r11,[rsp+0x70]
   14001bb41:	lea    eax,[rsi+0x1]
   14001bb44:	mov    rbx,QWORD PTR [r11+0x18]
   14001bb48:	mov    rsi,QWORD PTR [r11+0x20]
   14001bb4c:	mov    rsp,r11
   14001bb4f:	pop    rdi
   14001bb50:	ret    
   14001bb51:	int3   
   14001bb52:	int3   
   14001bb53:	int3   
   14001bb54:	int3   
   14001bb55:	int3   
   14001bb56:	int3   
   14001bb57:	int3   
   14001bb58:	int3   
   14001bb59:	int3   
   14001bb5a:	int3   
   14001bb5b:	int3   
   14001bb5c:	int3   
   14001bb5d:	int3   
   14001bb5e:	int3   
   14001bb5f:	int3   
   14001bb60:	mov    QWORD PTR [rsp+0x8],rbx
   14001bb65:	push   rdi
   14001bb66:	sub    rsp,0x30
   14001bb6a:	xor    ebx,ebx
   14001bb6c:	mov    rdi,rcx
   14001bb6f:	mov    DWORD PTR [rsp+0x48],ebx
   14001bb73:	call   QWORD PTR [rip+0xf9c7]        # 0x14002b540
   14001bb79:	cmp    eax,0x6
   14001bb7c:	jne    0x14001bbb9
   14001bb7e:	lea    rdx,[rsp+0x20]
   14001bb83:	mov    rcx,rdi
   14001bb86:	lea    ebx,[rax+0x1]
   14001bb89:	call   QWORD PTR [rip+0xf9a9]        # 0x14002b538
   14001bb8f:	lea    rdx,[rsp+0x50]
   14001bb94:	mov    rcx,rax
   14001bb97:	call   QWORD PTR [rip+0xf993]        # 0x14002b530
   14001bb9d:	lea    rdx,[rsp+0x48]
   14001bba2:	mov    rcx,rax
   14001bba5:	call   QWORD PTR [rip+0xf97d]        # 0x14002b528
   14001bbab:	mov    rcx,QWORD PTR [rax]
   14001bbae:	cmp    DWORD PTR [rcx+0x4],0x0
   14001bbb2:	jne    0x14001bbb9
   14001bbb4:	mov    dil,0x1
   14001bbb7:	jmp    0x14001bbbc
   14001bbb9:	xor    dil,dil
   14001bbbc:	test   bl,0x4
   14001bbbf:	je     0x14001bbcf
   14001bbc1:	lea    rcx,[rsp+0x48]
   14001bbc6:	and    ebx,0xfffffffb
   14001bbc9:	call   QWORD PTR [rip+0xfcc9]        # 0x14002b898
   14001bbcf:	test   bl,0x2
   14001bbd2:	je     0x14001bbdf
   14001bbd4:	lea    rcx,[rsp+0x50]
   14001bbd9:	call   QWORD PTR [rip+0xfcb9]        # 0x14002b898
   14001bbdf:	mov    al,dil
   14001bbe2:	mov    rbx,QWORD PTR [rsp+0x40]
   14001bbe7:	add    rsp,0x30
   14001bbeb:	pop    rdi
   14001bbec:	ret    
   14001bbed:	int3   
   14001bbee:	int3   
   14001bbef:	int3   
   14001bbf0:	mov    QWORD PTR [rsp+0x10],rbx
   14001bbf5:	push   rbp
   14001bbf6:	push   rsi
   14001bbf7:	push   rdi
   14001bbf8:	sub    rsp,0x30
   14001bbfc:	mov    rsi,rcx
   14001bbff:	mov    DWORD PTR [rsp+0x50],0x0
   14001bc07:	or     rcx,0xffffffffffffffff
   14001bc0b:	mov    rbx,rdx
   14001bc0e:	lea    rdx,[rip+0x11fef]        # 0x14002dc04
   14001bc15:	xor    eax,eax
   14001bc17:	mov    QWORD PTR [rsp+0x28],rdx
   14001bc1c:	mov    rdi,rdx
   14001bc1f:	lea    rdx,[rsp+0x20]
   14001bc24:	repnz scas al,BYTE PTR es:[rdi]
   14001bc26:	mov    edi,0x1
   14001bc2b:	mov    ebp,0xa
   14001bc30:	not    rcx
   14001bc33:	mov    r8d,edi
   14001bc36:	dec    rcx
   14001bc39:	mov    DWORD PTR [rsp+0x20],ecx
   14001bc3d:	mov    rcx,rbx
   14001bc40:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14001bc45:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14001bc4b:	call   QWORD PTR [rip+0xf5df]        # 0x14002b230
   14001bc51:	test   al,al
   14001bc53:	je     0x14001bc66
   14001bc55:	mov    r8d,edi
   14001bc58:	xor    edx,edx
   14001bc5a:	mov    rcx,rbx
   14001bc5d:	lea    ebp,[rdi+0xf]
   14001bc60:	call   QWORD PTR [rip+0xf5c2]        # 0x14002b228
   14001bc66:	mov    r8d,ebp
   14001bc69:	xor    edx,edx
   14001bc6b:	mov    rcx,rbx
   14001bc6e:	call   QWORD PTR [rip+0xfaf4]        # 0x14002b768
   14001bc74:	test   eax,eax
   14001bc76:	je     0x14001bc88
   14001bc78:	lea    rcx,[rsp+0x60]
   14001bc7d:	movzx  edx,ax
   14001bc80:	call   QWORD PTR [rip+0xfada]        # 0x14002b760
   14001bc86:	jmp    0x14001bc98
   14001bc88:	lea    rcx,[rsp+0x50]
   14001bc8d:	mov    edi,0x2
   14001bc92:	call   QWORD PTR [rip+0xfbf8]        # 0x14002b890
   14001bc98:	mov    rdx,rax
   14001bc9b:	mov    rcx,rsi
   14001bc9e:	call   QWORD PTR [rip+0xfbfc]        # 0x14002b8a0
   14001bca4:	test   dil,0x2
   14001bca8:	je     0x14001bcb8
   14001bcaa:	lea    rcx,[rsp+0x50]
   14001bcaf:	and    edi,0xfffffffd
   14001bcb2:	call   QWORD PTR [rip+0xfbe0]        # 0x14002b898
   14001bcb8:	test   dil,0x1
   14001bcbc:	je     0x14001bcc9
   14001bcbe:	lea    rcx,[rsp+0x60]
   14001bcc3:	call   QWORD PTR [rip+0xfbcf]        # 0x14002b898
   14001bcc9:	mov    rcx,rbx
   14001bccc:	call   QWORD PTR [rip+0xfbc6]        # 0x14002b898
   14001bcd2:	mov    rbx,QWORD PTR [rsp+0x58]
   14001bcd7:	mov    rax,rsi
   14001bcda:	add    rsp,0x30
   14001bcde:	pop    rdi
   14001bcdf:	pop    rsi
   14001bce0:	pop    rbp
   14001bce1:	ret    
   14001bce2:	int3   
   14001bce3:	int3   
   14001bce4:	int3   
   14001bce5:	int3   
   14001bce6:	int3   
   14001bce7:	int3   
   14001bce8:	int3   
   14001bce9:	int3   
   14001bcea:	int3   
   14001bceb:	int3   
   14001bcec:	int3   
   14001bced:	int3   
   14001bcee:	int3   
   14001bcef:	int3   
   14001bcf0:	mov    QWORD PTR [rsp+0x18],rbx
   14001bcf5:	mov    QWORD PTR [rsp+0x20],rsi
   14001bcfa:	push   rdi
   14001bcfb:	sub    rsp,0x50
   14001bcff:	mov    rsi,rcx
   14001bd02:	xor    eax,eax
   14001bd04:	or     rcx,0xffffffffffffffff
   14001bd08:	cmp    edx,0x20
   14001bd0b:	mov    ebx,edx
   14001bd0d:	lea    rdx,[rip+0x11efc]        # 0x14002dc10
   14001bd14:	jle    0x14001bd1d
   14001bd16:	lea    rdx,[rip+0x11eeb]        # 0x14002dc08
   14001bd1d:	mov    rdi,rdx
   14001bd20:	mov    QWORD PTR [rsp+0x38],rdx
   14001bd25:	lea    rdx,[rsp+0x40]
   14001bd2a:	repnz scas al,BYTE PTR es:[rdi]
   14001bd2c:	not    rcx
   14001bd2f:	dec    rcx
   14001bd32:	mov    DWORD PTR [rsp+0x30],ecx
   14001bd36:	lea    rcx,[rsp+0x30]
   14001bd3b:	mov    rax,QWORD PTR [rcx]
   14001bd3e:	mov    QWORD PTR [rdx],rax
   14001bd41:	mov    rax,QWORD PTR [rcx+0x8]
   14001bd45:	lea    rcx,[rsp+0x68]
   14001bd4a:	mov    QWORD PTR [rdx+0x8],rax
   14001bd4e:	mov    dl,0x20
   14001bd50:	call   QWORD PTR [rip+0xfb72]        # 0x14002b8c8
   14001bd56:	lea    rdx,[rsp+0x40]
   14001bd5b:	lea    rcx,[rsp+0x60]
   14001bd60:	mov    rdi,rax
   14001bd63:	call   QWORD PTR [rip+0xfaf7]        # 0x14002b860
   14001bd69:	xor    r9d,r9d
   14001bd6c:	mov    rcx,rax
   14001bd6f:	movzx  eax,WORD PTR [rdi]
   14001bd72:	mov    r8d,ebx
   14001bd75:	mov    WORD PTR [rsp+0x28],ax
   14001bd7a:	mov    rdx,rsi
   14001bd7d:	mov    DWORD PTR [rsp+0x20],0x10
   14001bd85:	call   QWORD PTR [rip+0xf77d]        # 0x14002b508
   14001bd8b:	lea    rcx,[rsp+0x60]
   14001bd90:	call   QWORD PTR [rip+0xfb02]        # 0x14002b898
   14001bd96:	mov    rbx,QWORD PTR [rsp+0x70]
   14001bd9b:	mov    rax,rsi
   14001bd9e:	mov    rsi,QWORD PTR [rsp+0x78]
   14001bda3:	add    rsp,0x50
   14001bda7:	pop    rdi
   14001bda8:	ret    
   14001bda9:	int3   
   14001bdaa:	int3   
   14001bdab:	int3   
   14001bdac:	int3   
   14001bdad:	int3   
   14001bdae:	int3   
   14001bdaf:	int3   
   14001bdb0:	rex push rbx
   14001bdb2:	push   rbp
   14001bdb3:	push   rsi
   14001bdb4:	sub    rsp,0xe0
   14001bdbb:	mov    rbp,rdx
   14001bdbe:	mov    rbx,rcx
   14001bdc1:	call   QWORD PTR [rip+0xfac9]        # 0x14002b890
   14001bdc7:	mov    rax,QWORD PTR [rbp+0x0]
   14001bdcb:	mov    eax,DWORD PTR [rax+0x4]
   14001bdce:	lea    ecx,[rax+rax*2]
   14001bdd1:	mov    eax,0x66666667
   14001bdd6:	shl    ecx,0x2
   14001bdd9:	imul   ecx
   14001bddb:	mov    rcx,rbx
   14001bdde:	sar    edx,0x2
   14001bde1:	mov    eax,edx
   14001bde3:	shr    eax,0x1f
   14001bde6:	add    edx,eax
   14001bde8:	call   QWORD PTR [rip+0xf46a]        # 0x14002b258
   14001bdee:	mov    rax,QWORD PTR [rbp+0x0]
   14001bdf2:	xor    esi,esi
   14001bdf4:	cmp    DWORD PTR [rax+0x4],esi
   14001bdf7:	je     0x14001c061
   14001bdfd:	mov    QWORD PTR [rsp+0x110],rdi
   14001be05:	mov    QWORD PTR [rsp+0xd8],r12
   14001be0d:	mov    QWORD PTR [rsp+0xd0],r13
   14001be15:	mov    QWORD PTR [rsp+0xc8],r14
   14001be1d:	mov    QWORD PTR [rsp+0xc0],r15
   14001be25:	lea    r12,[rip+0x11744]        # 0x14002d570
   14001be2c:	lea    r15,[rip+0x11725]        # 0x14002d558
   14001be33:	lea    r13,[rip+0x11726]        # 0x14002d560
   14001be3a:	lea    r14,[rip+0x11727]        # 0x14002d568
   14001be41:	lea    rdi,[rip+0x11700]        # 0x14002d548
   14001be48:	nop    DWORD PTR [rax+rax*1+0x0]
   14001be50:	lea    rdx,[rsp+0x100]
   14001be58:	mov    r8d,esi
   14001be5b:	mov    rcx,rbp
   14001be5e:	call   QWORD PTR [rip+0xf63c]        # 0x14002b4a0
   14001be64:	movzx  ecx,WORD PTR [rax]
   14001be67:	mov    eax,ecx
   14001be69:	sub    eax,0x22
   14001be6c:	je     0x14001bfed
   14001be72:	sub    eax,0x4
   14001be75:	je     0x14001bfab
   14001be7b:	sub    eax,0x1
   14001be7e:	je     0x14001bf69
   14001be84:	sub    eax,0x15
   14001be87:	je     0x14001bf24
   14001be8d:	cmp    eax,0x2
   14001be90:	je     0x14001bee5
   14001be92:	cmp    ecx,0x20
   14001be95:	jae    0x14001bed4
   14001be97:	cmp    ecx,0xd
   14001be9a:	je     0x14001bed4
   14001be9c:	cmp    ecx,0xa
   14001be9f:	je     0x14001bed4
   14001bea1:	cmp    ecx,0x9
   14001bea4:	je     0x14001bed4
   14001bea6:	mov    edx,ecx
   14001bea8:	lea    rcx,[rsp+0x108]
   14001beb0:	call   0x14001bcf0
   14001beb5:	mov    rcx,rbx
   14001beb8:	mov    rdx,rax
   14001bebb:	call   QWORD PTR [rip+0xf31f]        # 0x14002b1e0
   14001bec1:	lea    rcx,[rsp+0x108]
   14001bec9:	call   QWORD PTR [rip+0xf9c9]        # 0x14002b898
   14001becf:	jmp    0x14001c02a
   14001bed4:	movzx  edx,cx
   14001bed7:	mov    rcx,rbx
   14001beda:	call   QWORD PTR [rip+0xf670]        # 0x14002b550
   14001bee0:	jmp    0x14001c02a
   14001bee5:	or     rcx,0xffffffffffffffff
   14001bee9:	xor    eax,eax
   14001beeb:	mov    rdi,r12
   14001beee:	repnz scas al,BYTE PTR es:[rdi]
   14001bef0:	mov    QWORD PTR [rsp+0x68],r12
   14001bef5:	lea    rdx,[rsp+0x70]
   14001befa:	not    rcx
   14001befd:	dec    rcx
   14001bf00:	mov    DWORD PTR [rsp+0x60],ecx
   14001bf04:	mov    rcx,rbx
   14001bf07:	movaps xmm0,XMMWORD PTR [rsp+0x60]
   14001bf0c:	movdqa XMMWORD PTR [rsp+0x70],xmm0
   14001bf12:	call   QWORD PTR [rip+0xf370]        # 0x14002b288
   14001bf18:	lea    rdi,[rip+0x11629]        # 0x14002d548
   14001bf1f:	jmp    0x14001c02a
   14001bf24:	or     rcx,0xffffffffffffffff
   14001bf28:	xor    eax,eax
   14001bf2a:	mov    rdi,r13
   14001bf2d:	repnz scas al,BYTE PTR es:[rdi]
   14001bf2f:	mov    QWORD PTR [rsp+0x58],r13
   14001bf34:	lea    rdx,[rsp+0xa0]
   14001bf3c:	not    rcx
   14001bf3f:	dec    rcx
   14001bf42:	mov    DWORD PTR [rsp+0x50],ecx
   14001bf46:	mov    rcx,rbx
   14001bf49:	movaps xmm0,XMMWORD PTR [rsp+0x50]
   14001bf4e:	movdqa XMMWORD PTR [rsp+0xa0],xmm0
   14001bf57:	call   QWORD PTR [rip+0xf32b]        # 0x14002b288
   14001bf5d:	lea    rdi,[rip+0x115e4]        # 0x14002d548
   14001bf64:	jmp    0x14001c02a
   14001bf69:	or     rcx,0xffffffffffffffff
   14001bf6d:	xor    eax,eax
   14001bf6f:	mov    rdi,r14
   14001bf72:	repnz scas al,BYTE PTR es:[rdi]
   14001bf74:	mov    QWORD PTR [rsp+0x38],r14
   14001bf79:	lea    rdx,[rsp+0x80]
   14001bf81:	not    rcx
   14001bf84:	dec    rcx
   14001bf87:	mov    DWORD PTR [rsp+0x30],ecx
   14001bf8b:	mov    rcx,rbx
   14001bf8e:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14001bf93:	movdqa XMMWORD PTR [rsp+0x80],xmm0
   14001bf9c:	call   QWORD PTR [rip+0xf2e6]        # 0x14002b288
   14001bfa2:	lea    rdi,[rip+0x1159f]        # 0x14002d548
   14001bfa9:	jmp    0x14001c02a
   14001bfab:	or     rcx,0xffffffffffffffff
   14001bfaf:	xor    eax,eax
   14001bfb1:	mov    rdi,r15
   14001bfb4:	repnz scas al,BYTE PTR es:[rdi]
   14001bfb6:	mov    QWORD PTR [rsp+0x48],r15
   14001bfbb:	lea    rdx,[rsp+0x90]
   14001bfc3:	not    rcx
   14001bfc6:	dec    rcx
   14001bfc9:	mov    DWORD PTR [rsp+0x40],ecx
   14001bfcd:	mov    rcx,rbx
   14001bfd0:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   14001bfd5:	movdqa XMMWORD PTR [rsp+0x90],xmm0
   14001bfde:	call   QWORD PTR [rip+0xf2a4]        # 0x14002b288
   14001bfe4:	lea    rdi,[rip+0x1155d]        # 0x14002d548
   14001bfeb:	jmp    0x14001c02a
   14001bfed:	or     rcx,0xffffffffffffffff
   14001bff1:	xor    eax,eax
   14001bff3:	lea    rdx,[rsp+0xb0]
   14001bffb:	repnz scas al,BYTE PTR es:[rdi]
   14001bffd:	lea    rdi,[rip+0x11544]        # 0x14002d548
   14001c004:	not    rcx
   14001c007:	mov    QWORD PTR [rsp+0x28],rdi
   14001c00c:	dec    rcx
   14001c00f:	mov    DWORD PTR [rsp+0x20],ecx
   14001c013:	mov    rcx,rbx
   14001c016:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14001c01b:	movdqa XMMWORD PTR [rsp+0xb0],xmm0
   14001c024:	call   QWORD PTR [rip+0xf25e]        # 0x14002b288
   14001c02a:	mov    rax,QWORD PTR [rbp+0x0]
   14001c02e:	inc    esi
   14001c030:	cmp    esi,DWORD PTR [rax+0x4]
   14001c033:	jne    0x14001be50
   14001c039:	mov    r15,QWORD PTR [rsp+0xc0]
   14001c041:	mov    r14,QWORD PTR [rsp+0xc8]
   14001c049:	mov    r13,QWORD PTR [rsp+0xd0]
   14001c051:	mov    r12,QWORD PTR [rsp+0xd8]
   14001c059:	mov    rdi,QWORD PTR [rsp+0x110]
   14001c061:	mov    rax,rbx
   14001c064:	add    rsp,0xe0
   14001c06b:	pop    rsi
   14001c06c:	pop    rbp
   14001c06d:	pop    rbx
   14001c06e:	ret    
   14001c06f:	int3   
   14001c070:	mov    QWORD PTR [rsp+0x8],rbx
   14001c075:	mov    QWORD PTR [rsp+0x10],rbp
   14001c07a:	mov    QWORD PTR [rsp+0x18],rsi
   14001c07f:	push   rdi
   14001c080:	push   r12
   14001c082:	push   r13
   14001c084:	sub    rsp,0x30
   14001c088:	mov    rsi,r8
   14001c08b:	mov    r12,rdx
   14001c08e:	mov    rbp,rcx
   14001c091:	mov    r13d,0x9c
   14001c097:	mov    r9d,0x1
   14001c09d:	xor    r8d,r8d
   14001c0a0:	movzx  edx,r13w
   14001c0a4:	mov    rcx,rsi
   14001c0a7:	call   QWORD PTR [rip+0xf5c3]        # 0x14002b670
   14001c0ad:	mov    edi,eax
   14001c0af:	test   eax,eax
   14001c0b1:	js     0x14001c235
   14001c0b7:	lea    rdx,[rip+0x11b9a]        # 0x14002dc58
   14001c0be:	mov    rcx,rbp
   14001c0c1:	call   QWORD PTR [rip+0xf4e9]        # 0x14002b5b0
   14001c0c7:	lea    rdx,[rsp+0x20]
   14001c0cc:	mov    r9d,edi
   14001c0cf:	xor    r8d,r8d
   14001c0d2:	mov    rcx,rsi
   14001c0d5:	call   QWORD PTR [rip+0xf27d]        # 0x14002b358
   14001c0db:	lea    rcx,[rsp+0x68]
   14001c0e0:	mov    rdx,rax
   14001c0e3:	call   0x14001bdb0
   14001c0e8:	lea    rdx,[rip+0x11b61]        # 0x14002dc50
   14001c0ef:	mov    rcx,rbp
   14001c0f2:	mov    rbx,rax
   14001c0f5:	call   QWORD PTR [rip+0xf4b5]        # 0x14002b5b0
   14001c0fb:	mov    rdx,r12
   14001c0fe:	mov    rcx,rax
   14001c101:	call   QWORD PTR [rip+0xf4a9]        # 0x14002b5b0
   14001c107:	lea    rdx,[rip+0x11b32]        # 0x14002dc40
   14001c10e:	mov    rcx,rax
   14001c111:	call   QWORD PTR [rip+0xf499]        # 0x14002b5b0
   14001c117:	mov    rdx,rbx
   14001c11a:	mov    rcx,rax
   14001c11d:	call   QWORD PTR [rip+0xf485]        # 0x14002b5a8
   14001c123:	lea    rdx,[rip+0x11afe]        # 0x14002dc28
   14001c12a:	mov    rcx,rax
   14001c12d:	call   QWORD PTR [rip+0xf47d]        # 0x14002b5b0
   14001c133:	lea    rcx,[rsp+0x68]
   14001c138:	call   QWORD PTR [rip+0xf75a]        # 0x14002b898
   14001c13e:	lea    rcx,[rsp+0x20]
   14001c143:	call   QWORD PTR [rip+0xf74f]        # 0x14002b898
   14001c149:	mov    r11,QWORD PTR [rsi]
   14001c14c:	cmp    edi,DWORD PTR [r11+0x4]
   14001c150:	je     0x14001c217
   14001c156:	data16 nop WORD PTR [rax+rax*1+0x0]
   14001c160:	lea    ebx,[rdi+0x1]
   14001c163:	mov    r9d,0x1
   14001c169:	movzx  edx,r13w
   14001c16d:	mov    r8d,ebx
   14001c170:	mov    rcx,rsi
   14001c173:	call   QWORD PTR [rip+0xf4f7]        # 0x14002b670
   14001c179:	mov    edi,eax
   14001c17b:	test   eax,eax
   14001c17d:	jns    0x14001c185
   14001c17f:	mov    rax,QWORD PTR [rsi]
   14001c182:	mov    edi,DWORD PTR [rax+0x4]
   14001c185:	mov    r9d,edi
   14001c188:	lea    rdx,[rsp+0x20]
   14001c18d:	mov    r8d,ebx
   14001c190:	sub    r9d,ebx
   14001c193:	mov    rcx,rsi
   14001c196:	call   QWORD PTR [rip+0xf1bc]        # 0x14002b358
   14001c19c:	lea    rcx,[rsp+0x68]
   14001c1a1:	mov    rdx,rax
   14001c1a4:	call   0x14001bdb0
   14001c1a9:	lea    rdx,[rip+0x11aa0]        # 0x14002dc50
   14001c1b0:	mov    rcx,rbp
   14001c1b3:	mov    rbx,rax
   14001c1b6:	call   QWORD PTR [rip+0xf3f4]        # 0x14002b5b0
   14001c1bc:	mov    rdx,r12
   14001c1bf:	mov    rcx,rax
   14001c1c2:	call   QWORD PTR [rip+0xf3e8]        # 0x14002b5b0
   14001c1c8:	lea    rdx,[rip+0x11a71]        # 0x14002dc40
   14001c1cf:	mov    rcx,rax
   14001c1d2:	call   QWORD PTR [rip+0xf3d8]        # 0x14002b5b0
   14001c1d8:	mov    rdx,rbx
   14001c1db:	mov    rcx,rax
   14001c1de:	call   QWORD PTR [rip+0xf3c4]        # 0x14002b5a8
   14001c1e4:	lea    rdx,[rip+0x11a3d]        # 0x14002dc28
   14001c1eb:	mov    rcx,rax
   14001c1ee:	call   QWORD PTR [rip+0xf3bc]        # 0x14002b5b0
   14001c1f4:	lea    rcx,[rsp+0x68]
   14001c1f9:	call   QWORD PTR [rip+0xf699]        # 0x14002b898
   14001c1ff:	lea    rcx,[rsp+0x20]
   14001c204:	call   QWORD PTR [rip+0xf68e]        # 0x14002b898
   14001c20a:	mov    r11,QWORD PTR [rsi]
   14001c20d:	cmp    edi,DWORD PTR [r11+0x4]
   14001c211:	jne    0x14001c160
   14001c217:	lea    rdx,[rip+0xf89a]        # 0x14002bab8
   14001c21e:	mov    rcx,rbp
   14001c221:	call   QWORD PTR [rip+0xf389]        # 0x14002b5b0
   14001c227:	mov    rdx,r12
   14001c22a:	mov    rcx,rax
   14001c22d:	call   QWORD PTR [rip+0xf37d]        # 0x14002b5b0
   14001c233:	jmp    0x14001c26c
   14001c235:	lea    rcx,[rsp+0x68]
   14001c23a:	mov    rdx,rsi
   14001c23d:	call   0x14001bdb0
   14001c242:	lea    rdx,[rip+0x119db]        # 0x14002dc24
   14001c249:	mov    rcx,rbp
   14001c24c:	mov    rbx,rax
   14001c24f:	call   QWORD PTR [rip+0xf35b]        # 0x14002b5b0
   14001c255:	mov    rdx,rbx
   14001c258:	mov    rcx,rax
   14001c25b:	call   QWORD PTR [rip+0xf347]        # 0x14002b5a8
   14001c261:	lea    rcx,[rsp+0x68]
   14001c266:	call   QWORD PTR [rip+0xf62c]        # 0x14002b898
   14001c26c:	mov    rbx,QWORD PTR [rsp+0x50]
   14001c271:	mov    rbp,QWORD PTR [rsp+0x58]
   14001c276:	mov    rsi,QWORD PTR [rsp+0x60]
   14001c27b:	add    rsp,0x30
   14001c27f:	pop    r13
   14001c281:	pop    r12
   14001c283:	pop    rdi
   14001c284:	ret    
   14001c285:	int3   
   14001c286:	int3   
   14001c287:	int3   
   14001c288:	int3   
   14001c289:	int3   
   14001c28a:	int3   
   14001c28b:	int3   
   14001c28c:	int3   
   14001c28d:	int3   
   14001c28e:	int3   
   14001c28f:	int3   
   14001c290:	mov    QWORD PTR [rsp+0x8],rbx
   14001c295:	mov    QWORD PTR [rsp+0x10],rsi
   14001c29a:	push   rdi
   14001c29b:	sub    rsp,0x20
   14001c29f:	mov    rbx,rdx
   14001c2a2:	mov    rdx,QWORD PTR [rcx]
   14001c2a5:	mov    rdi,rcx
   14001c2a8:	mov    rcx,QWORD PTR [rbx]
   14001c2ab:	mov    rsi,r8
   14001c2ae:	call   QWORD PTR [rip+0xf4bc]        # 0x14002b770
   14001c2b4:	test   al,al
   14001c2b6:	je     0x14001c2c4
   14001c2b8:	mov    rdx,QWORD PTR [rdi]
   14001c2bb:	mov    rcx,QWORD PTR [rbx]
   14001c2be:	call   QWORD PTR [rip+0xf48c]        # 0x14002b750
   14001c2c4:	mov    rdx,QWORD PTR [rbx]
   14001c2c7:	mov    rcx,QWORD PTR [rsi]
   14001c2ca:	call   QWORD PTR [rip+0xf4a0]        # 0x14002b770
   14001c2d0:	test   al,al
   14001c2d2:	je     0x14001c2e0
   14001c2d4:	mov    rdx,QWORD PTR [rbx]
   14001c2d7:	mov    rcx,QWORD PTR [rsi]
   14001c2da:	call   QWORD PTR [rip+0xf470]        # 0x14002b750
   14001c2e0:	mov    rdx,QWORD PTR [rdi]
   14001c2e3:	mov    rcx,QWORD PTR [rbx]
   14001c2e6:	call   QWORD PTR [rip+0xf484]        # 0x14002b770
   14001c2ec:	test   al,al
   14001c2ee:	je     0x14001c2fc
   14001c2f0:	mov    rdx,QWORD PTR [rdi]
   14001c2f3:	mov    rcx,QWORD PTR [rbx]
   14001c2f6:	call   QWORD PTR [rip+0xf454]        # 0x14002b750
   14001c2fc:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c301:	mov    rsi,QWORD PTR [rsp+0x38]
   14001c306:	add    rsp,0x20
   14001c30a:	pop    rdi
   14001c30b:	ret    
   14001c30c:	int3   
   14001c30d:	int3   
   14001c30e:	int3   
   14001c30f:	int3   
   14001c310:	mov    QWORD PTR [rsp+0x8],rbx
   14001c315:	mov    QWORD PTR [rsp+0x10],rbp
   14001c31a:	mov    QWORD PTR [rsp+0x18],rsi
   14001c31f:	mov    QWORD PTR [rsp+0x20],rdi
   14001c324:	push   r12
   14001c326:	sub    rsp,0x20
   14001c32a:	mov    rbp,rdx
   14001c32d:	lea    rax,[rdx-0x1]
   14001c331:	mov    rsi,r9
   14001c334:	cqo    
   14001c336:	mov    r12,r8
   14001c339:	mov    rbx,rcx
   14001c33c:	sub    rax,rdx
   14001c33f:	sar    rax,1
   14001c342:	cmp    r8,rbp
   14001c345:	mov    rdi,rax
   14001c348:	jge    0x14001c38c
   14001c34a:	nop    WORD PTR [rax+rax*1+0x0]
   14001c350:	mov    r8,QWORD PTR [rbx]
   14001c353:	mov    rdx,rsi
   14001c356:	lea    rcx,[r8+rdi*8]
   14001c35a:	call   QWORD PTR [rip+0xf410]        # 0x14002b770
   14001c360:	test   al,al
   14001c362:	je     0x14001c38c
   14001c364:	mov    rax,QWORD PTR [rbx]
   14001c367:	lea    rdx,[rax+rdi*8]
   14001c36b:	lea    rcx,[rax+rbp*8]
   14001c36f:	call   QWORD PTR [rip+0xf53b]        # 0x14002b8b0
   14001c375:	lea    rax,[rdi-0x1]
   14001c379:	mov    rbp,rdi
   14001c37c:	cqo    
   14001c37e:	sub    rax,rdx
   14001c381:	sar    rax,1
   14001c384:	cmp    r12,rbp
   14001c387:	mov    rdi,rax
   14001c38a:	jl     0x14001c350
   14001c38c:	mov    rax,QWORD PTR [rbx]
   14001c38f:	mov    rdx,rsi
   14001c392:	lea    rcx,[rax+rbp*8]
   14001c396:	call   QWORD PTR [rip+0xf514]        # 0x14002b8b0
   14001c39c:	mov    rcx,rsi
   14001c39f:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c3a4:	mov    rbp,QWORD PTR [rsp+0x38]
   14001c3a9:	mov    rsi,QWORD PTR [rsp+0x40]
   14001c3ae:	mov    rdi,QWORD PTR [rsp+0x48]
   14001c3b3:	add    rsp,0x20
   14001c3b7:	pop    r12
   14001c3b9:	rex.W jmp QWORD PTR [rip+0xf4d8]        # 0x14002b898
   14001c3c0:	mov    QWORD PTR [rsp+0x10],rbp
   14001c3c5:	mov    QWORD PTR [rsp+0x18],rsi
   14001c3ca:	push   rdi
   14001c3cb:	sub    rsp,0x20
   14001c3cf:	mov    esi,r8d
   14001c3d2:	mov    r8,QWORD PTR [rcx]
   14001c3d5:	mov    rdi,rcx
   14001c3d8:	mov    ecx,DWORD PTR [r8+0x20]
   14001c3dc:	mov    rbp,rdx
   14001c3df:	test   ecx,ecx
   14001c3e1:	je     0x14001c439
   14001c3e3:	xor    edx,edx
   14001c3e5:	mov    eax,esi
   14001c3e7:	mov    QWORD PTR [rsp+0x30],rbx
   14001c3ec:	div    ecx
   14001c3ee:	mov    rax,QWORD PTR [r8+0x8]
   14001c3f2:	lea    rbx,[rax+rdx*8]
   14001c3f6:	mov    rax,QWORD PTR [rax+rdx*8]
   14001c3fa:	cmp    rax,r8
   14001c3fd:	je     0x14001c421
   14001c3ff:	nop
   14001c400:	cmp    esi,DWORD PTR [rax+0x8]
   14001c403:	jne    0x14001c416
   14001c405:	lea    rdx,[rax+0x10]
   14001c409:	mov    rcx,rbp
   14001c40c:	call   QWORD PTR [rip+0xee86]        # 0x14002b298
   14001c412:	test   al,al
   14001c414:	jne    0x14001c421
   14001c416:	mov    rbx,QWORD PTR [rbx]
   14001c419:	mov    rax,QWORD PTR [rbx]
   14001c41c:	cmp    rax,QWORD PTR [rdi]
   14001c41f:	jne    0x14001c400
   14001c421:	mov    rax,rbx
   14001c424:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c429:	mov    rbp,QWORD PTR [rsp+0x38]
   14001c42e:	mov    rsi,QWORD PTR [rsp+0x40]
   14001c433:	add    rsp,0x20
   14001c437:	pop    rdi
   14001c438:	ret    
   14001c439:	mov    rbp,QWORD PTR [rsp+0x38]
   14001c43e:	mov    rsi,QWORD PTR [rsp+0x40]
   14001c443:	mov    rax,rdi
   14001c446:	add    rsp,0x20
   14001c44a:	pop    rdi
   14001c44b:	ret    
   14001c44c:	int3   
   14001c44d:	int3   
   14001c44e:	int3   
   14001c44f:	int3   
   14001c450:	mov    r11,rsp
   14001c453:	push   rbp
   14001c454:	push   rsi
   14001c455:	push   r12
   14001c457:	sub    rsp,0x30
   14001c45b:	mov    rax,QWORD PTR [r8]
   14001c45e:	mov    r9,QWORD PTR [rcx]
   14001c461:	mov    rbp,r8
   14001c464:	mov    r10,rax
   14001c467:	mov    rsi,rdx
   14001c46a:	mov    r12,rcx
   14001c46d:	sub    r10,r9
   14001c470:	sar    r10,0x3
   14001c474:	cmp    r10d,0x28
   14001c478:	jle    0x14001c574
   14001c47e:	sub    rax,r9
   14001c481:	mov    QWORD PTR [r11-0x20],rbx
   14001c485:	mov    QWORD PTR [r11-0x28],rdi
   14001c489:	sar    rax,0x3
   14001c48d:	lea    r8,[r11+0x8]
   14001c491:	mov    QWORD PTR [r11+0x20],r9
   14001c495:	inc    eax
   14001c497:	cdq    
   14001c498:	and    edx,0x7
   14001c49b:	add    eax,edx
   14001c49d:	lea    rdx,[r11+0x18]
   14001c4a1:	sar    eax,0x3
   14001c4a4:	movsxd rcx,eax
   14001c4a7:	mov    rbx,rcx
   14001c4aa:	lea    rdi,[rcx*8+0x0]
   14001c4b2:	shl    rbx,0x4
   14001c4b6:	lea    rcx,[r11+0x20]
   14001c4ba:	lea    rax,[rbx+r9*1]
   14001c4be:	mov    QWORD PTR [r11+0x8],rax
   14001c4c2:	lea    rax,[rdi+r9*1]
   14001c4c6:	mov    QWORD PTR [r11+0x18],rax
   14001c4ca:	call   0x14001c290
   14001c4cf:	mov    r11,QWORD PTR [rsi]
   14001c4d2:	lea    rax,[r11+rdi*1]
   14001c4d6:	mov    QWORD PTR [rsp+0x60],r11
   14001c4db:	sub    r11,rdi
   14001c4de:	lea    r8,[rsp+0x50]
   14001c4e3:	lea    rdx,[rsp+0x60]
   14001c4e8:	lea    rcx,[rsp+0x68]
   14001c4ed:	mov    QWORD PTR [rsp+0x50],rax
   14001c4f2:	mov    QWORD PTR [rsp+0x68],r11
   14001c4f7:	call   0x14001c290
   14001c4fc:	mov    r11,QWORD PTR [rbp+0x0]
   14001c500:	lea    r8,[rsp+0x50]
   14001c505:	lea    rdx,[rsp+0x60]
   14001c50a:	mov    rax,r11
   14001c50d:	mov    QWORD PTR [rsp+0x50],r11
   14001c512:	sub    r11,rbx
   14001c515:	sub    rax,rdi
   14001c518:	lea    rcx,[rsp+0x68]
   14001c51d:	mov    QWORD PTR [rsp+0x68],r11
   14001c522:	mov    QWORD PTR [rsp+0x60],rax
   14001c527:	call   0x14001c290
   14001c52c:	mov    rax,QWORD PTR [rsi]
   14001c52f:	mov    r11,QWORD PTR [rbp+0x0]
   14001c533:	mov    QWORD PTR [rsp+0x60],rax
   14001c538:	mov    rax,QWORD PTR [r12]
   14001c53c:	lea    rcx,[rdi+rax*1]
   14001c540:	sub    r11,rdi
   14001c543:	lea    r8,[rsp+0x50]
   14001c548:	mov    QWORD PTR [rsp+0x68],rcx
   14001c54d:	lea    rcx,[rsp+0x68]
   14001c552:	lea    rdx,[rsp+0x60]
   14001c557:	mov    QWORD PTR [rsp+0x50],r11
   14001c55c:	call   0x14001c290
   14001c561:	mov    rdi,QWORD PTR [rsp+0x20]
   14001c566:	mov    rbx,QWORD PTR [rsp+0x28]
   14001c56b:	add    rsp,0x30
   14001c56f:	pop    r12
   14001c571:	pop    rsi
   14001c572:	pop    rbp
   14001c573:	ret    
   14001c574:	mov    QWORD PTR [rsp+0x50],rax
   14001c579:	mov    rax,QWORD PTR [rdx]
   14001c57c:	lea    r8,[rsp+0x50]
   14001c581:	lea    rdx,[rsp+0x60]
   14001c586:	lea    rcx,[rsp+0x68]
   14001c58b:	mov    QWORD PTR [rsp+0x68],r9
   14001c590:	mov    QWORD PTR [rsp+0x60],rax
   14001c595:	call   0x14001c290
   14001c59a:	add    rsp,0x30
   14001c59e:	pop    r12
   14001c5a0:	pop    rsi
   14001c5a1:	pop    rbp
   14001c5a2:	ret    
   14001c5a3:	int3   
   14001c5a4:	int3   
   14001c5a5:	int3   
   14001c5a6:	int3   
   14001c5a7:	int3   
   14001c5a8:	int3   
   14001c5a9:	int3   
   14001c5aa:	int3   
   14001c5ab:	int3   
   14001c5ac:	int3   
   14001c5ad:	int3   
   14001c5ae:	int3   
   14001c5af:	int3   
   14001c5b0:	mov    QWORD PTR [rsp+0x18],rbx
   14001c5b5:	push   rbp
   14001c5b6:	push   rsi
   14001c5b7:	push   rdi
   14001c5b8:	push   r12
   14001c5ba:	push   r13
   14001c5bc:	sub    rsp,0x20
   14001c5c0:	lea    rbx,[rdx+rdx*1+0x2]
   14001c5c5:	mov    r12,r9
   14001c5c8:	mov    rdi,r8
   14001c5cb:	cmp    rbx,r8
   14001c5ce:	mov    rbp,rdx
   14001c5d1:	mov    rsi,rcx
   14001c5d4:	mov    r13,rdx
   14001c5d7:	jge    0x14001c616
   14001c5d9:	nop    DWORD PTR [rax+0x0]
   14001c5e0:	mov    rax,QWORD PTR [rsi]
   14001c5e3:	lea    rcx,[rax+rbx*8]
   14001c5e7:	lea    rdx,[rcx-0x8]
   14001c5eb:	call   QWORD PTR [rip+0xf17f]        # 0x14002b770
   14001c5f1:	test   al,al
   14001c5f3:	je     0x14001c5f8
   14001c5f5:	dec    rbx
   14001c5f8:	mov    rax,QWORD PTR [rsi]
   14001c5fb:	lea    rdx,[rax+rbx*8]
   14001c5ff:	lea    rcx,[rax+rbp*8]
   14001c603:	call   QWORD PTR [rip+0xf2a7]        # 0x14002b8b0
   14001c609:	mov    rbp,rbx
   14001c60c:	lea    rbx,[rbx+rbx*1+0x2]
   14001c611:	cmp    rbx,rdi
   14001c614:	jl     0x14001c5e0
   14001c616:	cmp    rbx,rdi
   14001c619:	jne    0x14001c631
   14001c61b:	mov    rax,QWORD PTR [rsi]
   14001c61e:	lea    rdx,[rax+rdi*8-0x8]
   14001c623:	lea    rcx,[rax+rbp*8]
   14001c627:	call   QWORD PTR [rip+0xf283]        # 0x14002b8b0
   14001c62d:	lea    rbp,[rdi-0x1]
   14001c631:	mov    rax,QWORD PTR [rsi]
   14001c634:	lea    rcx,[rsp+0x58]
   14001c639:	mov    rdx,r12
   14001c63c:	mov    QWORD PTR [rsp+0x50],rax
   14001c641:	call   QWORD PTR [rip+0xf259]        # 0x14002b8a0
   14001c647:	lea    rcx,[rsp+0x50]
   14001c64c:	mov    r8,r13
   14001c64f:	mov    rdx,rbp
   14001c652:	mov    r9,rax
   14001c655:	call   0x14001c310
   14001c65a:	mov    rcx,r12
   14001c65d:	mov    rbx,QWORD PTR [rsp+0x60]
   14001c662:	add    rsp,0x20
   14001c666:	pop    r13
   14001c668:	pop    r12
   14001c66a:	pop    rdi
   14001c66b:	pop    rsi
   14001c66c:	pop    rbp
   14001c66d:	rex.W jmp QWORD PTR [rip+0xf224]        # 0x14002b898
   14001c674:	int3   
   14001c675:	int3   
   14001c676:	int3   
   14001c677:	int3   
   14001c678:	int3   
   14001c679:	int3   
   14001c67a:	int3   
   14001c67b:	int3   
   14001c67c:	int3   
   14001c67d:	int3   
   14001c67e:	int3   
   14001c67f:	int3   
   14001c680:	mov    r11,rsp
   14001c683:	mov    QWORD PTR [r11+0x20],rbx
   14001c687:	push   rbp
   14001c688:	push   rsi
   14001c689:	push   rdi
   14001c68a:	push   r12
   14001c68c:	push   r13
   14001c68e:	push   r14
   14001c690:	push   r15
   14001c692:	sub    rsp,0x20
   14001c696:	mov    r9,QWORD PTR [rdx]
   14001c699:	mov    r10,QWORD PTR [r8]
   14001c69c:	mov    r14,rdx
   14001c69f:	mov    rax,r10
   14001c6a2:	mov    r13,r8
   14001c6a5:	mov    r15,rcx
   14001c6a8:	sub    rax,r9
   14001c6ab:	lea    r8,[r11+0x8]
   14001c6af:	lea    rcx,[r11+0x18]
   14001c6b3:	sar    rax,0x3
   14001c6b7:	mov    QWORD PTR [r11+0x18],r9
   14001c6bb:	cdq    
   14001c6bc:	sub    eax,edx
   14001c6be:	sar    eax,1
   14001c6c0:	movsxd rdx,eax
   14001c6c3:	lea    rax,[r10-0x8]
   14001c6c7:	lea    rbx,[r9+rdx*8]
   14001c6cb:	lea    rdx,[r11+0x10]
   14001c6cf:	mov    QWORD PTR [r11+0x8],rax
   14001c6d3:	mov    QWORD PTR [r11+0x10],rbx
   14001c6d7:	call   0x14001c450
   14001c6dc:	lea    rbp,[rbx+0x8]
   14001c6e0:	cmp    QWORD PTR [r14],rbx
   14001c6e3:	jae    0x14001c71c
   14001c6e5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14001c6f0:	lea    rdi,[rbx-0x8]
   14001c6f4:	mov    rdx,rbx
   14001c6f7:	mov    rcx,rdi
   14001c6fa:	call   QWORD PTR [rip+0xf070]        # 0x14002b770
   14001c700:	test   al,al
   14001c702:	jne    0x14001c71c
   14001c704:	mov    rdx,rdi
   14001c707:	mov    rcx,rbx
   14001c70a:	call   QWORD PTR [rip+0xf060]        # 0x14002b770
   14001c710:	test   al,al
   14001c712:	jne    0x14001c71c
   14001c714:	mov    rbx,rdi
   14001c717:	cmp    QWORD PTR [r14],rdi
   14001c71a:	jb     0x14001c6f0
   14001c71c:	cmp    rbp,QWORD PTR [r13+0x0]
   14001c720:	jae    0x14001c74c
   14001c722:	mov    rdx,rbx
   14001c725:	mov    rcx,rbp
   14001c728:	call   QWORD PTR [rip+0xf042]        # 0x14002b770
   14001c72e:	test   al,al
   14001c730:	jne    0x14001c74c
   14001c732:	mov    rdx,rbp
   14001c735:	mov    rcx,rbx
   14001c738:	call   QWORD PTR [rip+0xf032]        # 0x14002b770
   14001c73e:	test   al,al
   14001c740:	jne    0x14001c74c
   14001c742:	add    rbp,0x8
   14001c746:	cmp    rbp,QWORD PTR [r13+0x0]
   14001c74a:	jb     0x14001c722
   14001c74c:	mov    rdi,rbp
   14001c74f:	mov    rsi,rbx
   14001c752:	cmp    rdi,QWORD PTR [r13+0x0]
   14001c756:	jae    0x14001c79a
   14001c758:	nop    DWORD PTR [rax+rax*1+0x0]
   14001c760:	mov    rdx,rdi
   14001c763:	mov    rcx,rbx
   14001c766:	call   QWORD PTR [rip+0xf004]        # 0x14002b770
   14001c76c:	test   al,al
   14001c76e:	jne    0x14001c790
   14001c770:	mov    rdx,rbx
   14001c773:	mov    rcx,rdi
   14001c776:	call   QWORD PTR [rip+0xeff4]        # 0x14002b770
   14001c77c:	test   al,al
   14001c77e:	jne    0x14001c79a
   14001c780:	mov    rcx,rbp
   14001c783:	mov    rdx,rdi
   14001c786:	add    rbp,0x8
   14001c78a:	call   QWORD PTR [rip+0xefc0]        # 0x14002b750
   14001c790:	add    rdi,0x8
   14001c794:	cmp    rdi,QWORD PTR [r13+0x0]
   14001c798:	jb     0x14001c760
   14001c79a:	cmp    QWORD PTR [r14],rsi
   14001c79d:	jae    0x14001c7e0
   14001c79f:	lea    r12,[rsi-0x8]
   14001c7a3:	mov    rdx,rbx
   14001c7a6:	mov    rcx,r12
   14001c7a9:	call   QWORD PTR [rip+0xefc1]        # 0x14002b770
   14001c7af:	test   al,al
   14001c7b1:	jne    0x14001c7d3
   14001c7b3:	mov    rdx,r12
   14001c7b6:	mov    rcx,rbx
   14001c7b9:	call   QWORD PTR [rip+0xefb1]        # 0x14002b770
   14001c7bf:	test   al,al
   14001c7c1:	jne    0x14001c7e0
   14001c7c3:	sub    rbx,0x8
   14001c7c7:	mov    rdx,r12
   14001c7ca:	mov    rcx,rbx
   14001c7cd:	call   QWORD PTR [rip+0xef7d]        # 0x14002b750
   14001c7d3:	sub    rsi,0x8
   14001c7d7:	sub    r12,0x8
   14001c7db:	cmp    QWORD PTR [r14],rsi
   14001c7de:	jb     0x14001c7a3
   14001c7e0:	mov    rax,QWORD PTR [r14]
   14001c7e3:	cmp    rsi,rax
   14001c7e6:	jne    0x14001c821
   14001c7e8:	cmp    rdi,QWORD PTR [r13+0x0]
   14001c7ec:	je     0x14001c86a
   14001c7ee:	cmp    rsi,rax
   14001c7f1:	jne    0x14001c821
   14001c7f3:	cmp    rbp,rdi
   14001c7f6:	je     0x14001c804
   14001c7f8:	mov    rdx,rbp
   14001c7fb:	mov    rcx,rbx
   14001c7fe:	call   QWORD PTR [rip+0xef4c]        # 0x14002b750
   14001c804:	mov    rdx,rdi
   14001c807:	mov    rcx,rbx
   14001c80a:	add    rbp,0x8
   14001c80e:	add    rdi,0x8
   14001c812:	add    rbx,0x8
   14001c816:	call   QWORD PTR [rip+0xef34]        # 0x14002b750
   14001c81c:	jmp    0x14001c752
   14001c821:	sub    rsi,0x8
   14001c825:	cmp    rdi,QWORD PTR [r13+0x0]
   14001c829:	jne    0x14001c855
   14001c82b:	sub    rbx,0x8
   14001c82f:	cmp    rsi,rbx
   14001c832:	je     0x14001c840
   14001c834:	mov    rdx,rbx
   14001c837:	mov    rcx,rsi
   14001c83a:	call   QWORD PTR [rip+0xef10]        # 0x14002b750
   14001c840:	sub    rbp,0x8
   14001c844:	mov    rcx,rbx
   14001c847:	mov    rdx,rbp
   14001c84a:	call   QWORD PTR [rip+0xef00]        # 0x14002b750
   14001c850:	jmp    0x14001c752
   14001c855:	mov    rcx,rdi
   14001c858:	mov    rdx,rsi
   14001c85b:	add    rdi,0x8
   14001c85f:	call   QWORD PTR [rip+0xeeeb]        # 0x14002b750
   14001c865:	jmp    0x14001c752
   14001c86a:	mov    QWORD PTR [r15],rbx
   14001c86d:	mov    rbx,QWORD PTR [rsp+0x78]
   14001c872:	mov    rax,r15
   14001c875:	mov    QWORD PTR [r15+0x8],rbp
   14001c879:	add    rsp,0x20
   14001c87d:	pop    r15
   14001c87f:	pop    r14
   14001c881:	pop    r13
   14001c883:	pop    r12
   14001c885:	pop    rdi
   14001c886:	pop    rsi
   14001c887:	pop    rbp
   14001c888:	ret    
   14001c889:	int3   
   14001c88a:	int3   
   14001c88b:	int3   
   14001c88c:	int3   
   14001c88d:	int3   
   14001c88e:	int3   
   14001c88f:	int3   
   14001c890:	mov    QWORD PTR [rsp+0x18],rbx
   14001c895:	mov    QWORD PTR [rsp+0x20],rsi
   14001c89a:	push   rdi
   14001c89b:	sub    rsp,0x20
   14001c89f:	mov    rax,QWORD PTR [rdx]
   14001c8a2:	mov    rdi,rcx
   14001c8a5:	sub    rax,QWORD PTR [rcx]
   14001c8a8:	sar    rax,0x3
   14001c8ac:	movsxd rsi,eax
   14001c8af:	mov    rax,rsi
   14001c8b2:	cqo    
   14001c8b4:	sub    rax,rdx
   14001c8b7:	sar    rax,1
   14001c8ba:	mov    rbx,rax
   14001c8bd:	test   rax,rax
   14001c8c0:	jle    0x14001c902
   14001c8c2:	data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14001c8d0:	mov    rcx,QWORD PTR [rdi]
   14001c8d3:	dec    rbx
   14001c8d6:	lea    rdx,[rcx+rbx*8]
   14001c8da:	mov    QWORD PTR [rsp+0x30],rcx
   14001c8df:	lea    rcx,[rsp+0x38]
   14001c8e4:	call   QWORD PTR [rip+0xefb6]        # 0x14002b8a0
   14001c8ea:	lea    rcx,[rsp+0x30]
   14001c8ef:	mov    r8,rsi
   14001c8f2:	mov    r9,rax
   14001c8f5:	mov    rdx,rbx
   14001c8f8:	call   0x14001c5b0
   14001c8fd:	test   rbx,rbx
   14001c900:	jg     0x14001c8d0
   14001c902:	mov    rbx,QWORD PTR [rsp+0x40]
   14001c907:	mov    rsi,QWORD PTR [rsp+0x48]
   14001c90c:	add    rsp,0x20
   14001c910:	pop    rdi
   14001c911:	ret    
   14001c912:	int3   
   14001c913:	int3   
   14001c914:	int3   
   14001c915:	int3   
   14001c916:	int3   
   14001c917:	int3   
   14001c918:	int3   
   14001c919:	int3   
   14001c91a:	int3   
   14001c91b:	int3   
   14001c91c:	int3   
   14001c91d:	int3   
   14001c91e:	int3   
   14001c91f:	int3   
   14001c920:	push   r14
   14001c922:	sub    rsp,0x110
   14001c929:	mov    r14,rcx
   14001c92c:	call   QWORD PTR [rip+0xec0e]        # 0x14002b540
   14001c932:	cmp    eax,0x7
   14001c935:	je     0x14001ce15
   14001c93b:	mov    rcx,r14
   14001c93e:	call   QWORD PTR [rip+0xee5c]        # 0x14002b7a0
   14001c944:	test   eax,eax
   14001c946:	je     0x14001c95a
   14001c948:	mov    rcx,r14
   14001c94b:	call   QWORD PTR [rip+0xee4f]        # 0x14002b7a0
   14001c951:	cmp    eax,0x2
   14001c954:	je     0x14001ce15
   14001c95a:	mov    QWORD PTR [rsp+0x108],rbx
   14001c962:	mov    QWORD PTR [rsp+0x100],rbp
   14001c96a:	mov    QWORD PTR [rsp+0xf8],rsi
   14001c972:	mov    QWORD PTR [rsp+0xf0],rdi
   14001c97a:	lea    rcx,[rsp+0x128]
   14001c982:	mov    dl,0x20
   14001c984:	mov    QWORD PTR [rsp+0xe8],r12
   14001c98c:	mov    QWORD PTR [rsp+0xe0],r13
   14001c994:	call   QWORD PTR [rip+0xef2e]        # 0x14002b8c8
   14001c99a:	lea    rcx,[rsp+0x130]
   14001c9a2:	mov    dl,0x20
   14001c9a4:	mov    r13,rax
   14001c9a7:	call   QWORD PTR [rip+0xef1b]        # 0x14002b8c8
   14001c9ad:	lea    rcx,[rsp+0x138]
   14001c9b5:	mov    dl,0x20
   14001c9b7:	mov    rbp,rax
   14001c9ba:	call   QWORD PTR [rip+0xef08]        # 0x14002b8c8
   14001c9c0:	mov    r12,QWORD PTR [r14+0x8]
   14001c9c4:	mov    rcx,r14
   14001c9c7:	mov    rbx,rax
   14001c9ca:	call   QWORD PTR [rip+0xedc8]        # 0x14002b798
   14001c9d0:	mov    rcx,r14
   14001c9d3:	mov    rsi,rax
   14001c9d6:	call   QWORD PTR [rip+0xedb4]        # 0x14002b790
   14001c9dc:	lea    rdx,[rip+0x11325]        # 0x14002dd08
   14001c9e3:	lea    rcx,[rsp+0x48]
   14001c9e8:	or     r8d,0xffffffff
   14001c9ec:	mov    rdi,rax
   14001c9ef:	call   QWORD PTR [rip+0xe88b]        # 0x14002b280
   14001c9f5:	movzx  edx,WORD PTR [rbx]
   14001c9f8:	xor    r9d,r9d
   14001c9fb:	mov    WORD PTR [rsp+0x28],dx
   14001ca00:	lea    rdx,[rsp+0x40]
   14001ca05:	mov    rcx,rax
   14001ca08:	mov    r8,rdi
   14001ca0b:	mov    DWORD PTR [rsp+0x20],0xa
   14001ca13:	call   QWORD PTR [rip+0xed6f]        # 0x14002b788
   14001ca19:	lea    rdx,[rsp+0x38]
   14001ca1e:	xor    r9d,r9d
   14001ca21:	mov    rcx,rax
   14001ca24:	movzx  eax,WORD PTR [rbp+0x0]
   14001ca28:	mov    r8,rsi
   14001ca2b:	mov    WORD PTR [rsp+0x28],ax
   14001ca30:	mov    DWORD PTR [rsp+0x20],0xa
   14001ca38:	call   QWORD PTR [rip+0xed4a]        # 0x14002b788
   14001ca3e:	mov    rcx,rax
   14001ca41:	movzx  eax,WORD PTR [r13+0x0]
   14001ca46:	lea    r8,[r12+0x18]
   14001ca4b:	lea    rdx,[rsp+0x30]
   14001ca50:	xor    r9d,r9d
   14001ca53:	mov    WORD PTR [rsp+0x20],ax
   14001ca58:	call   QWORD PTR [rip+0xe78a]        # 0x14002b1e8
   14001ca5e:	lea    rcx,[rsp+0x38]
   14001ca63:	call   QWORD PTR [rip+0xee2f]        # 0x14002b898
   14001ca69:	lea    rcx,[rsp+0x40]
   14001ca6e:	call   QWORD PTR [rip+0xee24]        # 0x14002b898
   14001ca74:	lea    rcx,[rsp+0x48]
   14001ca79:	call   QWORD PTR [rip+0xee19]        # 0x14002b898
   14001ca7f:	mov    rcx,r14
   14001ca82:	call   QWORD PTR [rip+0xeab8]        # 0x14002b540
   14001ca88:	mov    r13,QWORD PTR [rsp+0xe0]
   14001ca90:	mov    r12,QWORD PTR [rsp+0xe8]
   14001ca98:	sub    eax,0x4
   14001ca9b:	je     0x14001cd69
   14001caa1:	sub    eax,0x2
   14001caa4:	je     0x14001cc0f
   14001caaa:	sub    eax,0x3
   14001caad:	je     0x14001cb8f
   14001cab3:	cmp    eax,0x1
   14001cab6:	je     0x14001cb21
   14001cab8:	lea    rdx,[rsp+0x38]
   14001cabd:	mov    rcx,r14
   14001cac0:	call   QWORD PTR [rip+0xecba]        # 0x14002b780
   14001cac6:	lea    rdx,[rip+0x11223]        # 0x14002dcf0
   14001cacd:	lea    rcx,[rsp+0x40]
   14001cad2:	or     r8d,0xffffffff
   14001cad6:	mov    rdi,rax
   14001cad9:	call   QWORD PTR [rip+0xe7a1]        # 0x14002b280
   14001cadf:	lea    r8,[rsp+0x30]
   14001cae4:	lea    rdx,[rsp+0x48]
   14001cae9:	mov    rcx,rax
   14001caec:	mov    r9,rdi
   14001caef:	call   QWORD PTR [rip+0xe81b]        # 0x14002b310
   14001caf5:	mov    rcx,r14
   14001caf8:	mov    rdx,rax
   14001cafb:	call   QWORD PTR [rip+0xec77]        # 0x14002b778
   14001cb01:	lea    rcx,[rsp+0x48]
   14001cb06:	call   QWORD PTR [rip+0xed8c]        # 0x14002b898
   14001cb0c:	lea    rcx,[rsp+0x40]
   14001cb11:	call   QWORD PTR [rip+0xed81]        # 0x14002b898
   14001cb17:	lea    rcx,[rsp+0x38]
   14001cb1c:	jmp    0x14001cde4
   14001cb21:	lea    rcx,[rsp+0x128]
   14001cb29:	mov    dl,0x20
   14001cb2b:	call   QWORD PTR [rip+0xed97]        # 0x14002b8c8
   14001cb31:	lea    rdx,[rip+0x11190]        # 0x14002dcc8
   14001cb38:	lea    rcx,[rsp+0x60]
   14001cb3d:	or     r8d,0xffffffff
   14001cb41:	mov    rdi,rax
   14001cb44:	call   QWORD PTR [rip+0xe736]        # 0x14002b280
   14001cb4a:	lea    r8,[rsp+0x30]
   14001cb4f:	lea    rdx,[rsp+0xa0]
   14001cb57:	mov    rcx,rax
   14001cb5a:	movzx  eax,WORD PTR [rdi]
   14001cb5d:	xor    r9d,r9d
   14001cb60:	mov    WORD PTR [rsp+0x20],ax
   14001cb65:	call   QWORD PTR [rip+0xe67d]        # 0x14002b1e8
   14001cb6b:	mov    rcx,r14
   14001cb6e:	mov    rdx,rax
   14001cb71:	call   QWORD PTR [rip+0xec01]        # 0x14002b778
   14001cb77:	lea    rcx,[rsp+0xa0]
   14001cb7f:	call   QWORD PTR [rip+0xed13]        # 0x14002b898
   14001cb85:	lea    rcx,[rsp+0x60]
   14001cb8a:	jmp    0x14001cde4
   14001cb8f:	lea    rdx,[rsp+0xa8]
   14001cb97:	mov    rcx,r14
   14001cb9a:	call   QWORD PTR [rip+0xe9e8]        # 0x14002b588
   14001cba0:	lea    rdx,[rsp+0x50]
   14001cba5:	mov    rcx,rax
   14001cba8:	call   QWORD PTR [rip+0xe982]        # 0x14002b530
   14001cbae:	lea    rdx,[rip+0x110f3]        # 0x14002dca8
   14001cbb5:	lea    rcx,[rsp+0x70]
   14001cbba:	or     r8d,0xffffffff
   14001cbbe:	mov    rdi,rax
   14001cbc1:	call   QWORD PTR [rip+0xe6b9]        # 0x14002b280
   14001cbc7:	lea    r9,[rsp+0x30]
   14001cbcc:	lea    rdx,[rsp+0x90]
   14001cbd4:	mov    rcx,rax
   14001cbd7:	mov    r8,rdi
   14001cbda:	call   QWORD PTR [rip+0xe730]        # 0x14002b310
   14001cbe0:	mov    rcx,r14
   14001cbe3:	mov    rdx,rax
   14001cbe6:	call   QWORD PTR [rip+0xeb8c]        # 0x14002b778
   14001cbec:	lea    rcx,[rsp+0x90]
   14001cbf4:	call   QWORD PTR [rip+0xec9e]        # 0x14002b898
   14001cbfa:	lea    rcx,[rsp+0x70]
   14001cbff:	call   QWORD PTR [rip+0xec93]        # 0x14002b898
   14001cc05:	lea    rcx,[rsp+0x50]
   14001cc0a:	jmp    0x14001cde4
   14001cc0f:	lea    rdx,[rsp+0xb8]
   14001cc17:	mov    rcx,r14
   14001cc1a:	call   QWORD PTR [rip+0xe918]        # 0x14002b538
   14001cc20:	lea    rdx,[rsp+0x130]
   14001cc28:	mov    rcx,rax
   14001cc2b:	call   QWORD PTR [rip+0xe8ff]        # 0x14002b530
   14001cc31:	mov    rdx,QWORD PTR [rsp+0x130]
   14001cc39:	cmp    DWORD PTR [rdx+0x4],0x1e
   14001cc3d:	jle    0x14001cd06
   14001cc43:	or     rcx,0xffffffffffffffff
   14001cc47:	xor    eax,eax
   14001cc49:	lea    rdi,[rip+0x1053c]        # 0x14002d18c
   14001cc50:	repnz scas al,BYTE PTR es:[rdi]
   14001cc52:	lea    r8d,[rax+0x1e]
   14001cc56:	lea    rdx,[rsp+0x80]
   14001cc5e:	not    rcx
   14001cc61:	lea    rbp,[rcx-0x1]
   14001cc65:	lea    rcx,[rsp+0x130]
   14001cc6d:	call   QWORD PTR [rip+0xe65d]        # 0x14002b2d0
   14001cc73:	lea    rcx,[rsp+0x138]
   14001cc7b:	xor    r8d,r8d
   14001cc7e:	mov    rdx,QWORD PTR [rax]
   14001cc81:	mov    rsi,rax
   14001cc84:	mov    edx,DWORD PTR [rdx+0x4]
   14001cc87:	add    edx,ebp
   14001cc89:	call   QWORD PTR [rip+0xebe9]        # 0x14002b878
   14001cc8f:	lea    rcx,[rsp+0x138]
   14001cc97:	call   QWORD PTR [rip+0xec23]        # 0x14002b8c0
   14001cc9d:	mov    rdx,QWORD PTR [rsi]
   14001cca0:	mov    rcx,rsi
   14001cca3:	movsxd rdi,DWORD PTR [rdx+0x4]
   14001cca7:	mov    rbx,rax
   14001ccaa:	add    rdi,rdi
   14001ccad:	call   QWORD PTR [rip+0xec0d]        # 0x14002b8c0
   14001ccb3:	mov    r8,rdi
   14001ccb6:	mov    rdx,rax
   14001ccb9:	mov    rcx,rbx
   14001ccbc:	call   0x14002951e
   14001ccc1:	lea    r8,[rdi+rbx*1]
   14001ccc5:	lea    rcx,[rip+0x104c0]        # 0x14002d18c
   14001cccc:	mov    edx,ebp
   14001ccce:	call   QWORD PTR [rip+0xe574]        # 0x14002b248
   14001ccd4:	lea    rdx,[rsp+0x138]
   14001ccdc:	lea    rcx,[rsp+0x130]
   14001cce4:	call   QWORD PTR [rip+0xebc6]        # 0x14002b8b0
   14001ccea:	lea    rcx,[rsp+0x138]
   14001ccf2:	call   QWORD PTR [rip+0xeba0]        # 0x14002b898
   14001ccf8:	lea    rcx,[rsp+0x80]
   14001cd00:	call   QWORD PTR [rip+0xeb92]        # 0x14002b898
   14001cd06:	lea    rdx,[rip+0x10f7b]        # 0x14002dc88
   14001cd0d:	lea    rcx,[rsp+0x58]
   14001cd12:	or     r8d,0xffffffff
   14001cd16:	call   QWORD PTR [rip+0xe564]        # 0x14002b280
   14001cd1c:	lea    r9,[rsp+0x30]
   14001cd21:	lea    r8,[rsp+0x130]
   14001cd29:	lea    rdx,[rsp+0x98]
   14001cd31:	mov    rcx,rax
   14001cd34:	call   QWORD PTR [rip+0xe5d6]        # 0x14002b310
   14001cd3a:	mov    rcx,r14
   14001cd3d:	mov    rdx,rax
   14001cd40:	call   QWORD PTR [rip+0xea32]        # 0x14002b778
   14001cd46:	lea    rcx,[rsp+0x98]
   14001cd4e:	call   QWORD PTR [rip+0xeb44]        # 0x14002b898
   14001cd54:	lea    rcx,[rsp+0x58]
   14001cd59:	call   QWORD PTR [rip+0xeb39]        # 0x14002b898
   14001cd5f:	lea    rcx,[rsp+0x130]
   14001cd67:	jmp    0x14001cde4
   14001cd69:	lea    rdx,[rsp+0xc8]
   14001cd71:	mov    rcx,r14
   14001cd74:	call   QWORD PTR [rip+0xe80e]        # 0x14002b588
   14001cd7a:	lea    rdx,[rsp+0x88]
   14001cd82:	mov    rcx,rax
   14001cd85:	call   QWORD PTR [rip+0xe7a5]        # 0x14002b530
   14001cd8b:	lea    rdx,[rip+0x10ede]        # 0x14002dc70
   14001cd92:	lea    rcx,[rsp+0x78]
   14001cd97:	or     r8d,0xffffffff
   14001cd9b:	mov    rdi,rax
   14001cd9e:	call   QWORD PTR [rip+0xe4dc]        # 0x14002b280
   14001cda4:	lea    r9,[rsp+0x30]
   14001cda9:	lea    rdx,[rsp+0x68]
   14001cdae:	mov    rcx,rax
   14001cdb1:	mov    r8,rdi
   14001cdb4:	call   QWORD PTR [rip+0xe556]        # 0x14002b310
   14001cdba:	mov    rcx,r14
   14001cdbd:	mov    rdx,rax
   14001cdc0:	call   QWORD PTR [rip+0xe9b2]        # 0x14002b778
   14001cdc6:	lea    rcx,[rsp+0x68]
   14001cdcb:	call   QWORD PTR [rip+0xeac7]        # 0x14002b898
   14001cdd1:	lea    rcx,[rsp+0x78]
   14001cdd6:	call   QWORD PTR [rip+0xeabc]        # 0x14002b898
   14001cddc:	lea    rcx,[rsp+0x88]
   14001cde4:	call   QWORD PTR [rip+0xeaae]        # 0x14002b898
   14001cdea:	lea    rcx,[rsp+0x30]
   14001cdef:	call   QWORD PTR [rip+0xeaa3]        # 0x14002b898
   14001cdf5:	mov    rdi,QWORD PTR [rsp+0xf0]
   14001cdfd:	mov    rsi,QWORD PTR [rsp+0xf8]
   14001ce05:	mov    rbp,QWORD PTR [rsp+0x100]
   14001ce0d:	mov    rbx,QWORD PTR [rsp+0x108]
   14001ce15:	add    rsp,0x110
   14001ce1c:	pop    r14
   14001ce1e:	ret    
   14001ce1f:	int3   
   14001ce20:	rex push rbx
   14001ce22:	push   rbp
   14001ce23:	push   rsi
   14001ce24:	sub    rsp,0x50
   14001ce28:	xor    esi,esi
   14001ce2a:	mov    QWORD PTR [rsp+0x70],rdi
   14001ce2f:	mov    rbp,rdx
   14001ce32:	mov    DWORD PTR [rsp+0x78],esi
   14001ce36:	mov    eax,DWORD PTR [rip+0x187b4]        # 0x1400355f0
   14001ce3c:	mov    rbx,rcx
   14001ce3f:	test   al,0x1
   14001ce41:	jne    0x14001ce9c
   14001ce43:	or     rcx,0xffffffffffffffff
   14001ce47:	lea    rdx,[rip+0x10ece]        # 0x14002dd1c
   14001ce4e:	or     eax,0x1
   14001ce51:	mov    QWORD PTR [rsp+0x28],rdx
   14001ce56:	mov    rdi,rdx
   14001ce59:	mov    DWORD PTR [rip+0x18791],eax        # 0x1400355f0
   14001ce5f:	xor    eax,eax
   14001ce61:	lea    rdx,[rsp+0x20]
   14001ce66:	repnz scas al,BYTE PTR es:[rdi]
   14001ce68:	not    rcx
   14001ce6b:	dec    rcx
   14001ce6e:	mov    DWORD PTR [rsp+0x20],ecx
   14001ce72:	lea    rcx,[rip+0x1876f]        # 0x1400355e8
   14001ce79:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14001ce7e:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14001ce84:	call   QWORD PTR [rip+0xe9d6]        # 0x14002b860
   14001ce8a:	lea    rcx,[rip+0xd03f]        # 0x140029ed0
   14001ce91:	call   0x1400295e8
   14001ce96:	mov    eax,DWORD PTR [rip+0x18754]        # 0x1400355f0
   14001ce9c:	test   al,0x2
   14001ce9e:	jne    0x14001cef3
   14001cea0:	or     rcx,0xffffffffffffffff
   14001cea4:	lea    rdx,[rip+0x10e69]        # 0x14002dd14
   14001ceab:	or     eax,0x2
   14001ceae:	mov    QWORD PTR [rsp+0x28],rdx
   14001ceb3:	mov    rdi,rdx
   14001ceb6:	mov    DWORD PTR [rip+0x18734],eax        # 0x1400355f0
   14001cebc:	xor    eax,eax
   14001cebe:	lea    rdx,[rsp+0x20]
   14001cec3:	repnz scas al,BYTE PTR es:[rdi]
   14001cec5:	not    rcx
   14001cec8:	dec    rcx
   14001cecb:	mov    DWORD PTR [rsp+0x20],ecx
   14001cecf:	lea    rcx,[rip+0x1870a]        # 0x1400355e0
   14001ced6:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14001cedb:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14001cee1:	call   QWORD PTR [rip+0xe979]        # 0x14002b860
   14001cee7:	lea    rcx,[rip+0xcfd2]        # 0x140029ec0
   14001ceee:	call   0x1400295e8
   14001cef3:	mov    rcx,rbp
   14001cef6:	call   QWORD PTR [rip+0xe994]        # 0x14002b890
   14001cefc:	mov    rcx,rbx
   14001ceff:	call   QWORD PTR [rip+0xe693]        # 0x14002b598
   14001cf05:	mov    rdi,QWORD PTR [rsp+0x70]
   14001cf0a:	test   al,al
   14001cf0c:	jne    0x14001d048
   14001cf12:	mov    rcx,rbx
   14001cf15:	call   QWORD PTR [rip+0xe675]        # 0x14002b590
   14001cf1b:	mov    rcx,rbx
   14001cf1e:	call   QWORD PTR [rip+0xe61c]        # 0x14002b540
   14001cf24:	cmp    eax,0x5
   14001cf27:	je     0x14001d048
   14001cf2d:	mov    rcx,rbx
   14001cf30:	call   QWORD PTR [rip+0xe60a]        # 0x14002b540
   14001cf36:	cmp    eax,0x6
   14001cf39:	jne    0x14001cf5a
   14001cf3b:	lea    rdx,[rsp+0x20]
   14001cf40:	mov    rcx,rbx
   14001cf43:	call   QWORD PTR [rip+0xe5ef]        # 0x14002b538
   14001cf49:	mov    rcx,rbp
   14001cf4c:	mov    rdx,rax
   14001cf4f:	call   QWORD PTR [rip+0xe613]        # 0x14002b568
   14001cf55:	jmp    0x14001d024
   14001cf5a:	mov    rcx,rbx
   14001cf5d:	call   QWORD PTR [rip+0xe5dd]        # 0x14002b540
   14001cf63:	cmp    eax,0x4
   14001cf66:	jne    0x14001cf91
   14001cf68:	lea    rdx,[rsp+0x30]
   14001cf6d:	mov    rcx,rbx
   14001cf70:	or     esi,0x1
   14001cf73:	call   QWORD PTR [rip+0xe60f]        # 0x14002b588
   14001cf79:	lea    rcx,[rip+0x18668]        # 0x1400355e8
   14001cf80:	mov    rdx,rax
   14001cf83:	call   QWORD PTR [rip+0xe7cf]        # 0x14002b758
   14001cf89:	test   al,al
   14001cf8b:	je     0x14001cf91
   14001cf8d:	mov    al,0x1
   14001cf8f:	jmp    0x14001cf93
   14001cf91:	xor    al,al
   14001cf93:	test   sil,0x1
   14001cf97:	je     0x14001cf9c
   14001cf99:	and    esi,0xfffffffe
   14001cf9c:	test   al,al
   14001cf9e:	je     0x14001d040
   14001cfa4:	lea    rdx,[rsp+0x80]
   14001cfac:	mov    rcx,rbx
   14001cfaf:	call   QWORD PTR [rip+0xe5cb]        # 0x14002b580
   14001cfb5:	lea    r8,[rip+0x18624]        # 0x1400355e0
   14001cfbc:	lea    rdx,[rsp+0x40]
   14001cfc1:	mov    rcx,rax
   14001cfc4:	call   QWORD PTR [rip+0xe7de]        # 0x14002b7a8
   14001cfca:	lea    rdx,[rsp+0x88]
   14001cfd2:	mov    rcx,rax
   14001cfd5:	call   QWORD PTR [rip+0xe555]        # 0x14002b530
   14001cfdb:	lea    rcx,[rsp+0x78]
   14001cfe0:	mov    rdx,rax
   14001cfe3:	call   0x14001bbf0
   14001cfe8:	mov    rcx,rbp
   14001cfeb:	mov    rdx,rax
   14001cfee:	call   QWORD PTR [rip+0xe1ec]        # 0x14002b1e0
   14001cff4:	lea    rcx,[rsp+0x78]
   14001cff9:	call   QWORD PTR [rip+0xe899]        # 0x14002b898
   14001cfff:	lea    rcx,[rsp+0x80]
   14001d007:	call   QWORD PTR [rip+0xe563]        # 0x14002b570
   14001d00d:	mov    rcx,rbx
   14001d010:	call   QWORD PTR [rip+0xe57a]        # 0x14002b590
   14001d016:	mov    rcx,rbx
   14001d019:	call   QWORD PTR [rip+0xe521]        # 0x14002b540
   14001d01f:	cmp    eax,0x5
   14001d022:	jne    0x14001d040
   14001d024:	mov    rcx,rbx
   14001d027:	call   QWORD PTR [rip+0xe56b]        # 0x14002b598
   14001d02d:	test   al,al
   14001d02f:	je     0x14001cf12
   14001d035:	mov    rax,rbp
   14001d038:	add    rsp,0x50
   14001d03c:	pop    rsi
   14001d03d:	pop    rbp
   14001d03e:	pop    rbx
   14001d03f:	ret    
   14001d040:	mov    rcx,rbx
   14001d043:	call   0x14001c920
   14001d048:	mov    rax,rbp
   14001d04b:	add    rsp,0x50
   14001d04f:	pop    rsi
   14001d050:	pop    rbp
   14001d051:	pop    rbx
   14001d052:	ret    
   14001d053:	int3   
   14001d054:	int3   
   14001d055:	int3   
   14001d056:	int3   
   14001d057:	int3   
   14001d058:	int3   
   14001d059:	int3   
   14001d05a:	int3   
   14001d05b:	int3   
   14001d05c:	int3   
   14001d05d:	int3   
   14001d05e:	int3   
   14001d05f:	int3   
   14001d060:	mov    QWORD PTR [rsp+0x8],rbx
   14001d065:	push   rbp
   14001d066:	push   rsi
   14001d067:	push   rdi
   14001d068:	sub    rsp,0x30
   14001d06c:	xor    esi,esi
   14001d06e:	mov    rbp,rdx
   14001d071:	mov    rbx,rcx
   14001d074:	mov    DWORD PTR [rsp+0x60],esi
   14001d078:	mov    eax,DWORD PTR [rip+0x18592]        # 0x140035610
   14001d07e:	test   al,0x1
   14001d080:	jne    0x14001d0db
   14001d082:	or     rcx,0xffffffffffffffff
   14001d086:	lea    rdx,[rip+0x10cab]        # 0x14002dd38
   14001d08d:	or     eax,0x1
   14001d090:	mov    QWORD PTR [rsp+0x28],rdx
   14001d095:	mov    rdi,rdx
   14001d098:	mov    DWORD PTR [rip+0x18572],eax        # 0x140035610
   14001d09e:	xor    eax,eax
   14001d0a0:	lea    rdx,[rsp+0x20]
   14001d0a5:	repnz scas al,BYTE PTR es:[rdi]
   14001d0a7:	not    rcx
   14001d0aa:	dec    rcx
   14001d0ad:	mov    DWORD PTR [rsp+0x20],ecx
   14001d0b1:	lea    rcx,[rip+0x18550]        # 0x140035608
   14001d0b8:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14001d0bd:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14001d0c3:	call   QWORD PTR [rip+0xe797]        # 0x14002b860
   14001d0c9:	lea    rcx,[rip+0xce30]        # 0x140029f00
   14001d0d0:	call   0x1400295e8
   14001d0d5:	mov    eax,DWORD PTR [rip+0x18535]        # 0x140035610
   14001d0db:	test   al,0x2
   14001d0dd:	jne    0x14001d138
   14001d0df:	or     rcx,0xffffffffffffffff
   14001d0e3:	lea    rdx,[rip+0x10c3e]        # 0x14002dd28
   14001d0ea:	or     eax,0x2
   14001d0ed:	mov    QWORD PTR [rsp+0x28],rdx
   14001d0f2:	mov    rdi,rdx
   14001d0f5:	mov    DWORD PTR [rip+0x18515],eax        # 0x140035610
   14001d0fb:	xor    eax,eax
   14001d0fd:	lea    rdx,[rsp+0x20]
   14001d102:	repnz scas al,BYTE PTR es:[rdi]
   14001d104:	not    rcx
   14001d107:	dec    rcx
   14001d10a:	mov    DWORD PTR [rsp+0x20],ecx
   14001d10e:	lea    rcx,[rip+0x184eb]        # 0x140035600
   14001d115:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14001d11a:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14001d120:	call   QWORD PTR [rip+0xe73a]        # 0x14002b860
   14001d126:	lea    rcx,[rip+0xcdc3]        # 0x140029ef0
   14001d12d:	call   0x1400295e8
   14001d132:	mov    eax,DWORD PTR [rip+0x184d8]        # 0x140035610
   14001d138:	test   al,0x4
   14001d13a:	jne    0x14001d18f
   14001d13c:	or     rcx,0xffffffffffffffff
   14001d140:	lea    rdx,[rip+0x10bdd]        # 0x14002dd24
   14001d147:	or     eax,0x4
   14001d14a:	mov    QWORD PTR [rsp+0x28],rdx
   14001d14f:	mov    rdi,rdx
   14001d152:	mov    DWORD PTR [rip+0x184b8],eax        # 0x140035610
   14001d158:	xor    eax,eax
   14001d15a:	lea    rdx,[rsp+0x20]
   14001d15f:	repnz scas al,BYTE PTR es:[rdi]
   14001d161:	not    rcx
   14001d164:	dec    rcx
   14001d167:	mov    DWORD PTR [rsp+0x20],ecx
   14001d16b:	lea    rcx,[rip+0x18486]        # 0x1400355f8
   14001d172:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14001d177:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14001d17d:	call   QWORD PTR [rip+0xe6dd]        # 0x14002b860
   14001d183:	lea    rcx,[rip+0xcd56]        # 0x140029ee0
   14001d18a:	call   0x1400295e8
   14001d18f:	lea    rdx,[rsp+0x60]
   14001d194:	mov    rcx,rbx
   14001d197:	call   QWORD PTR [rip+0xe3e3]        # 0x14002b580
   14001d19d:	lea    r8,[rip+0x1845c]        # 0x140035600
   14001d1a4:	lea    rdx,[rsp+0x20]
   14001d1a9:	mov    rcx,rax
   14001d1ac:	call   QWORD PTR [rip+0xe5f6]        # 0x14002b7a8
   14001d1b2:	lea    rcx,[rip+0x1843f]        # 0x1400355f8
   14001d1b9:	mov    rdx,rax
   14001d1bc:	call   QWORD PTR [rip+0xe596]        # 0x14002b758
   14001d1c2:	lea    rcx,[rsp+0x60]
   14001d1c7:	movzx  edi,al
   14001d1ca:	call   QWORD PTR [rip+0xe3a0]        # 0x14002b570
   14001d1d0:	test   dil,dil
   14001d1d3:	je     0x14001d2f4
   14001d1d9:	lea    rcx,[rsp+0x60]
   14001d1de:	call   QWORD PTR [rip+0xe6ac]        # 0x14002b890
   14001d1e4:	mov    rcx,rbx
   14001d1e7:	call   QWORD PTR [rip+0xe3ab]        # 0x14002b598
   14001d1ed:	test   al,al
   14001d1ef:	jne    0x14001d2cb
   14001d1f5:	mov    edi,0x9c
   14001d1fa:	nop    WORD PTR [rax+rax*1+0x0]
   14001d200:	mov    rcx,rbx
   14001d203:	call   QWORD PTR [rip+0xe387]        # 0x14002b590
   14001d209:	mov    rcx,rbx
   14001d20c:	call   QWORD PTR [rip+0xe32e]        # 0x14002b540
   14001d212:	cmp    eax,0x5
   14001d215:	je     0x14001d2cb
   14001d21b:	mov    rcx,rbx
   14001d21e:	call   0x14001bb60
   14001d223:	test   al,al
   14001d225:	jne    0x14001d2b0
   14001d22b:	mov    rcx,rbx
   14001d22e:	call   QWORD PTR [rip+0xe30c]        # 0x14002b540
   14001d234:	cmp    eax,0x4
   14001d237:	jne    0x14001d262
   14001d239:	lea    rdx,[rsp+0x20]
   14001d23e:	mov    rcx,rbx
   14001d241:	or     esi,0x1
   14001d244:	call   QWORD PTR [rip+0xe33e]        # 0x14002b588
   14001d24a:	lea    rcx,[rip+0x183b7]        # 0x140035608
   14001d251:	mov    rdx,rax
   14001d254:	call   QWORD PTR [rip+0xe4fe]        # 0x14002b758
   14001d25a:	test   al,al
   14001d25c:	je     0x14001d262
   14001d25e:	mov    al,0x1
   14001d260:	jmp    0x14001d264
   14001d262:	xor    al,al
   14001d264:	test   sil,0x1
   14001d268:	je     0x14001d26d
   14001d26a:	and    esi,0xfffffffe
   14001d26d:	test   al,al
   14001d26f:	je     0x14001d2c3
   14001d271:	mov    rax,QWORD PTR [rsp+0x60]
   14001d276:	cmp    DWORD PTR [rax+0x4],0x0
   14001d27a:	je     0x14001d28a
   14001d27c:	lea    rcx,[rsp+0x60]
   14001d281:	movzx  edx,di
   14001d284:	call   QWORD PTR [rip+0xe2c6]        # 0x14002b550
   14001d28a:	lea    rdx,[rsp+0x68]
   14001d28f:	mov    rcx,rbx
   14001d292:	call   0x14001ce20
   14001d297:	lea    rcx,[rsp+0x60]
   14001d29c:	mov    rdx,rax
   14001d29f:	call   QWORD PTR [rip+0xdf3b]        # 0x14002b1e0
   14001d2a5:	lea    rcx,[rsp+0x68]
   14001d2aa:	call   QWORD PTR [rip+0xe5e8]        # 0x14002b898
   14001d2b0:	mov    rcx,rbx
   14001d2b3:	call   QWORD PTR [rip+0xe2df]        # 0x14002b598
   14001d2b9:	test   al,al
   14001d2bb:	je     0x14001d200
   14001d2c1:	jmp    0x14001d2cb
   14001d2c3:	mov    rcx,rbx
   14001d2c6:	call   0x14001c920
   14001d2cb:	lea    rdx,[rsp+0x60]
   14001d2d0:	mov    rcx,rbp
   14001d2d3:	call   QWORD PTR [rip+0xe5c7]        # 0x14002b8a0
   14001d2d9:	lea    rcx,[rsp+0x60]
   14001d2de:	call   QWORD PTR [rip+0xe5b4]        # 0x14002b898
   14001d2e4:	mov    rax,rbp
   14001d2e7:	mov    rbx,QWORD PTR [rsp+0x50]
   14001d2ec:	add    rsp,0x30
   14001d2f0:	pop    rdi
   14001d2f1:	pop    rsi
   14001d2f2:	pop    rbp
   14001d2f3:	ret    
   14001d2f4:	mov    rdx,rbp
   14001d2f7:	mov    rcx,rbx
   14001d2fa:	call   0x14001ce20
   14001d2ff:	mov    rbx,QWORD PTR [rsp+0x50]
   14001d304:	mov    rax,rbp
   14001d307:	add    rsp,0x30
   14001d30b:	pop    rdi
   14001d30c:	pop    rsi
   14001d30d:	pop    rbp
   14001d30e:	ret    
   14001d30f:	int3   
   14001d310:	rex push rdi
   14001d312:	push   r13
   14001d314:	push   r14
   14001d316:	sub    rsp,0x30
   14001d31a:	mov    rdi,QWORD PTR [rcx]
   14001d31d:	mov    rax,QWORD PTR [rdx]
   14001d320:	mov    r14,rdx
   14001d323:	mov    r13,rcx
   14001d326:	cmp    rdi,rax
   14001d329:	je     0x14001d425
   14001d32f:	add    rdi,0x8
   14001d333:	cmp    rdi,rax
   14001d336:	je     0x14001d425
   14001d33c:	mov    QWORD PTR [rsp+0x58],rbx
   14001d341:	mov    QWORD PTR [rsp+0x60],rbp
   14001d346:	mov    QWORD PTR [rsp+0x28],rsi
   14001d34b:	mov    QWORD PTR [rsp+0x20],r12
   14001d350:	lea    r12,[rdi+0x8]
   14001d354:	lea    rcx,[rsp+0x50]
   14001d359:	mov    rdx,rdi
   14001d35c:	mov    rsi,rdi
   14001d35f:	call   QWORD PTR [rip+0xe53b]        # 0x14002b8a0
   14001d365:	mov    rdx,QWORD PTR [r13+0x0]
   14001d369:	lea    rcx,[rsp+0x50]
   14001d36e:	call   QWORD PTR [rip+0xe3fc]        # 0x14002b770
   14001d374:	test   al,al
   14001d376:	je     0x14001d3b7
   14001d378:	mov    rsi,QWORD PTR [r13+0x0]
   14001d37c:	mov    rbx,rdi
   14001d37f:	cmp    rsi,rdi
   14001d382:	je     0x14001d3a6
   14001d384:	mov    rbp,r12
   14001d387:	sub    rbp,rdi
   14001d38a:	nop    WORD PTR [rax+rax*1+0x0]
   14001d390:	sub    rbx,0x8
   14001d394:	mov    rdx,rbx
   14001d397:	lea    rcx,[rbx+rbp*1]
   14001d39b:	call   QWORD PTR [rip+0xe50f]        # 0x14002b8b0
   14001d3a1:	cmp    rbx,rsi
   14001d3a4:	jne    0x14001d390
   14001d3a6:	mov    rcx,QWORD PTR [r13+0x0]
   14001d3aa:	lea    rdx,[rsp+0x50]
   14001d3af:	call   QWORD PTR [rip+0xe4fb]        # 0x14002b8b0
   14001d3b5:	jmp    0x14001d3f5
   14001d3b7:	mov    rbx,rdi
   14001d3ba:	nop    WORD PTR [rax+rax*1+0x0]
   14001d3c0:	sub    rbx,0x8
   14001d3c4:	lea    rcx,[rsp+0x50]
   14001d3c9:	mov    rdx,rbx
   14001d3cc:	call   QWORD PTR [rip+0xe39e]        # 0x14002b770
   14001d3d2:	test   al,al
   14001d3d4:	je     0x14001d3e7
   14001d3d6:	mov    rdx,rbx
   14001d3d9:	mov    rcx,rsi
   14001d3dc:	call   QWORD PTR [rip+0xe4ce]        # 0x14002b8b0
   14001d3e2:	mov    rsi,rbx
   14001d3e5:	jmp    0x14001d3c0
   14001d3e7:	lea    rdx,[rsp+0x50]
   14001d3ec:	mov    rcx,rsi
   14001d3ef:	call   QWORD PTR [rip+0xe4bb]        # 0x14002b8b0
   14001d3f5:	lea    rcx,[rsp+0x50]
   14001d3fa:	call   QWORD PTR [rip+0xe498]        # 0x14002b898
   14001d400:	add    rdi,0x8
   14001d404:	add    r12,0x8
   14001d408:	cmp    rdi,QWORD PTR [r14]
   14001d40b:	jne    0x14001d354
   14001d411:	mov    r12,QWORD PTR [rsp+0x20]
   14001d416:	mov    rsi,QWORD PTR [rsp+0x28]
   14001d41b:	mov    rbp,QWORD PTR [rsp+0x60]
   14001d420:	mov    rbx,QWORD PTR [rsp+0x58]
   14001d425:	add    rsp,0x30
   14001d429:	pop    r14
   14001d42b:	pop    r13
   14001d42d:	pop    rdi
   14001d42e:	ret    
   14001d42f:	int3   
   14001d430:	rex push rbp
   14001d432:	push   rdi
   14001d433:	push   r12
   14001d435:	sub    rsp,0x30
   14001d439:	mov    rdi,QWORD PTR [rcx]
   14001d43c:	mov    rax,QWORD PTR [rdx]
   14001d43f:	mov    rbp,rdx
   14001d442:	sub    rax,rdi
   14001d445:	mov    r12,rcx
   14001d448:	sar    rax,0x3
   14001d44c:	cmp    eax,0x1
   14001d44f:	jle    0x14001d4f0
   14001d455:	mov    QWORD PTR [rsp+0x28],rbx
   14001d45a:	mov    QWORD PTR [rsp+0x20],rsi
   14001d45f:	nop
   14001d460:	mov    rbx,QWORD PTR [rbp+0x0]
   14001d464:	mov    rax,rbx
   14001d467:	sub    rax,rdi
   14001d46a:	sar    rax,0x3
   14001d46e:	cmp    eax,0x1
   14001d471:	jle    0x14001d4c9
   14001d473:	add    rbx,0xfffffffffffffff8
   14001d477:	lea    rcx,[rsp+0x58]
   14001d47c:	mov    rdx,rbx
   14001d47f:	call   QWORD PTR [rip+0xe41b]        # 0x14002b8a0
   14001d485:	mov    rdx,rdi
   14001d488:	mov    rcx,rbx
   14001d48b:	mov    rsi,rax
   14001d48e:	call   QWORD PTR [rip+0xe41c]        # 0x14002b8b0
   14001d494:	lea    rcx,[rsp+0x60]
   14001d499:	mov    rdx,rsi
   14001d49c:	mov    QWORD PTR [rsp+0x50],rdi
   14001d4a1:	call   QWORD PTR [rip+0xe3f9]        # 0x14002b8a0
   14001d4a7:	sub    rbx,rdi
   14001d4aa:	lea    rcx,[rsp+0x50]
   14001d4af:	sar    rbx,0x3
   14001d4b3:	xor    edx,edx
   14001d4b5:	mov    r9,rax
   14001d4b8:	movsxd r8,ebx
   14001d4bb:	call   0x14001c5b0
   14001d4c0:	mov    rcx,rsi
   14001d4c3:	call   QWORD PTR [rip+0xe3cf]        # 0x14002b898
   14001d4c9:	add    QWORD PTR [rbp+0x0],0xfffffffffffffff8
   14001d4ce:	mov    rdi,QWORD PTR [r12]
   14001d4d2:	mov    rax,QWORD PTR [rbp+0x0]
   14001d4d6:	sub    rax,rdi
   14001d4d9:	sar    rax,0x3
   14001d4dd:	cmp    eax,0x1
   14001d4e0:	jg     0x14001d460
   14001d4e6:	mov    rsi,QWORD PTR [rsp+0x20]
   14001d4eb:	mov    rbx,QWORD PTR [rsp+0x28]
   14001d4f0:	add    rsp,0x30
   14001d4f4:	pop    r12
   14001d4f6:	pop    rdi
   14001d4f7:	pop    rbp
   14001d4f8:	ret    
   14001d4f9:	int3   
   14001d4fa:	int3   
   14001d4fb:	int3   
   14001d4fc:	int3   
   14001d4fd:	int3   
   14001d4fe:	int3   
   14001d4ff:	int3   
   14001d500:	mov    r11,rsp
   14001d503:	mov    QWORD PTR [r11+0x10],rdx
   14001d507:	push   rsi
   14001d508:	sub    rsp,0x630
   14001d50f:	mov    QWORD PTR [r11+0x8],rbx
   14001d513:	xor    ebx,ebx
   14001d515:	mov    QWORD PTR [r11-0x18],rdi
   14001d519:	mov    DWORD PTR [rsp+0x650],ebx
   14001d520:	mov    eax,DWORD PTR [rip+0x18202]        # 0x140035728
   14001d526:	mov    QWORD PTR [r11-0x28],r13
   14001d52a:	mov    r13,rdx
   14001d52d:	mov    rsi,rcx
   14001d530:	test   al,0x1
   14001d532:	jne    0x14001d592
   14001d534:	or     rcx,0xffffffffffffffff
   14001d538:	lea    rdx,[rip+0x107dd]        # 0x14002dd1c
   14001d53f:	or     eax,0x1
   14001d542:	mov    rdi,rdx
   14001d545:	mov    QWORD PTR [rsp+0x28],rdx
   14001d54a:	mov    DWORD PTR [rip+0x181d8],eax        # 0x140035728
   14001d550:	xor    eax,eax
   14001d552:	lea    rdx,[r11-0x398]
   14001d559:	repnz scas al,BYTE PTR es:[rdi]
   14001d55b:	not    rcx
   14001d55e:	dec    rcx
   14001d561:	mov    DWORD PTR [rsp+0x20],ecx
   14001d565:	lea    rcx,[rip+0x181b4]        # 0x140035720
   14001d56c:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14001d571:	movdqa XMMWORD PTR [rsp+0x2a0],xmm0
   14001d57a:	call   QWORD PTR [rip+0xe2e0]        # 0x14002b860
   14001d580:	lea    rcx,[rip+0xcb89]        # 0x14002a110
   14001d587:	call   0x1400295e8
   14001d58c:	mov    eax,DWORD PTR [rip+0x18196]        # 0x140035728
   14001d592:	test   al,0x2
   14001d594:	jne    0x14001d5f5
   14001d596:	or     rcx,0xffffffffffffffff
   14001d59a:	lea    rdx,[rip+0x1090f]        # 0x14002deb0
   14001d5a1:	or     eax,0x2
   14001d5a4:	mov    rdi,rdx
   14001d5a7:	mov    QWORD PTR [rsp+0x28],rdx
   14001d5ac:	mov    DWORD PTR [rip+0x18176],eax        # 0x140035728
   14001d5b2:	xor    eax,eax
   14001d5b4:	lea    rdx,[rsp+0x280]
   14001d5bc:	repnz scas al,BYTE PTR es:[rdi]
   14001d5be:	not    rcx
   14001d5c1:	dec    rcx
   14001d5c4:	mov    DWORD PTR [rsp+0x20],ecx
   14001d5c8:	lea    rcx,[rip+0x18149]        # 0x140035718
   14001d5cf:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14001d5d4:	movdqa XMMWORD PTR [rsp+0x280],xmm0
   14001d5dd:	call   QWORD PTR [rip+0xe27d]        # 0x14002b860
   14001d5e3:	lea    rcx,[rip+0xcb16]        # 0x14002a100
   14001d5ea:	call   0x1400295e8
   14001d5ef:	mov    eax,DWORD PTR [rip+0x18133]        # 0x140035728
   14001d5f5:	test   al,0x4
   14001d5f7:	jne    0x14001d658
   14001d5f9:	or     rcx,0xffffffffffffffff
   14001d5fd:	lea    rdx,[rip+0x108a4]        # 0x14002dea8
   14001d604:	or     eax,0x4
   14001d607:	mov    rdi,rdx
   14001d60a:	mov    QWORD PTR [rsp+0x28],rdx
   14001d60f:	mov    DWORD PTR [rip+0x18113],eax        # 0x140035728
   14001d615:	xor    eax,eax
   14001d617:	lea    rdx,[rsp+0x3f0]
   14001d61f:	repnz scas al,BYTE PTR es:[rdi]
   14001d621:	not    rcx
   14001d624:	dec    rcx
   14001d627:	mov    DWORD PTR [rsp+0x20],ecx
   14001d62b:	lea    rcx,[rip+0x180de]        # 0x140035710
   14001d632:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14001d637:	movdqa XMMWORD PTR [rsp+0x3f0],xmm0
   14001d640:	call   QWORD PTR [rip+0xe21a]        # 0x14002b860
   14001d646:	lea    rcx,[rip+0xcaa3]        # 0x14002a0f0
   14001d64d:	call   0x1400295e8
   14001d652:	mov    eax,DWORD PTR [rip+0x180d0]        # 0x140035728
   14001d658:	test   al,0x8
   14001d65a:	jne    0x14001d6bb
   14001d65c:	or     rcx,0xffffffffffffffff
   14001d660:	lea    rdx,[rip+0x10839]        # 0x14002dea0
   14001d667:	or     eax,0x8
   14001d66a:	mov    rdi,rdx
   14001d66d:	mov    QWORD PTR [rsp+0x28],rdx
   14001d672:	mov    DWORD PTR [rip+0x180b0],eax        # 0x140035728
   14001d678:	xor    eax,eax
   14001d67a:	lea    rdx,[rsp+0x260]
   14001d682:	repnz scas al,BYTE PTR es:[rdi]
   14001d684:	not    rcx
   14001d687:	dec    rcx
   14001d68a:	mov    DWORD PTR [rsp+0x20],ecx
   14001d68e:	lea    rcx,[rip+0x18073]        # 0x140035708
   14001d695:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14001d69a:	movdqa XMMWORD PTR [rsp+0x260],xmm0
   14001d6a3:	call   QWORD PTR [rip+0xe1b7]        # 0x14002b860
   14001d6a9:	lea    rcx,[rip+0xca30]        # 0x14002a0e0
   14001d6b0:	call   0x1400295e8
   14001d6b5:	mov    eax,DWORD PTR [rip+0x1806d]        # 0x140035728
   14001d6bb:	test   al,0x10
   14001d6bd:	jne    0x14001d71e
   14001d6bf:	or     rcx,0xffffffffffffffff
   14001d6c3:	lea    rdx,[rip+0x107c6]        # 0x14002de90
   14001d6ca:	or     eax,0x10
   14001d6cd:	mov    rdi,rdx
   14001d6d0:	mov    QWORD PTR [rsp+0x28],rdx
   14001d6d5:	mov    DWORD PTR [rip+0x1804d],eax        # 0x140035728
   14001d6db:	xor    eax,eax
   14001d6dd:	lea    rdx,[rsp+0x410]
   14001d6e5:	repnz scas al,BYTE PTR es:[rdi]
   14001d6e7:	not    rcx
   14001d6ea:	dec    rcx
   14001d6ed:	mov    DWORD PTR [rsp+0x20],ecx
   14001d6f1:	lea    rcx,[rip+0x18008]        # 0x140035700
   14001d6f8:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14001d6fd:	movdqa XMMWORD PTR [rsp+0x410],xmm0
   14001d706:	call   QWORD PTR [rip+0xe154]        # 0x14002b860
   14001d70c:	lea    rcx,[rip+0xc9bd]        # 0x14002a0d0
   14001d713:	call   0x1400295e8
   14001d718:	mov    eax,DWORD PTR [rip+0x1800a]        # 0x140035728
   14001d71e:	test   al,0x20
   14001d720:	jne    0x14001d781
   14001d722:	or     rcx,0xffffffffffffffff
   14001d726:	lea    rdx,[rip+0x10753]        # 0x14002de80
   14001d72d:	or     eax,0x20
   14001d730:	mov    rdi,rdx
   14001d733:	mov    QWORD PTR [rsp+0x28],rdx
   14001d738:	mov    DWORD PTR [rip+0x17fea],eax        # 0x140035728
   14001d73e:	xor    eax,eax
   14001d740:	lea    rdx,[rsp+0x430]
   14001d748:	repnz scas al,BYTE PTR es:[rdi]
   14001d74a:	not    rcx
   14001d74d:	dec    rcx
   14001d750:	mov    DWORD PTR [rsp+0x20],ecx
   14001d754:	lea    rcx,[rip+0x17f9d]        # 0x1400356f8
   14001d75b:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14001d760:	movdqa XMMWORD PTR [rsp+0x430],xmm0
   14001d769:	call   QWORD PTR [rip+0xe0f1]        # 0x14002b860
   14001d76f:	lea    rcx,[rip+0xc94a]        # 0x14002a0c0
   14001d776:	call   0x1400295e8
   14001d77b:	mov    eax,DWORD PTR [rip+0x17fa7]        # 0x140035728
   14001d781:	test   al,0x40
   14001d783:	jne    0x14001d7e4
   14001d785:	or     rcx,0xffffffffffffffff
   14001d789:	lea    rdx,[rip+0x106e0]        # 0x14002de70
   14001d790:	or     eax,0x40
   14001d793:	mov    rdi,rdx
   14001d796:	mov    QWORD PTR [rsp+0x28],rdx
   14001d79b:	mov    DWORD PTR [rip+0x17f87],eax        # 0x140035728
   14001d7a1:	xor    eax,eax
   14001d7a3:	lea    rdx,[rsp+0x360]
   14001d7ab:	repnz scas al,BYTE PTR es:[rdi]
   14001d7ad:	not    rcx
   14001d7b0:	dec    rcx
   14001d7b3:	mov    DWORD PTR [rsp+0x20],ecx
   14001d7b7:	lea    rcx,[rip+0x17f32]        # 0x1400356f0
   14001d7be:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14001d7c3:	movdqa XMMWORD PTR [rsp+0x360],xmm0
   14001d7cc:	call   QWORD PTR [rip+0xe08e]        # 0x14002b860
   14001d7d2:	lea    rcx,[rip+0xc8d7]        # 0x14002a0b0
   14001d7d9:	call   0x1400295e8
   14001d7de:	mov    eax,DWORD PTR [rip+0x17f44]        # 0x140035728
   14001d7e4:	test   al,al
   14001d7e6:	js     0x14001d848
   14001d7e8:	or     rcx,0xffffffffffffffff
   14001d7ec:	bts    eax,0x7
   14001d7f0:	lea    rdx,[rip+0x10669]        # 0x14002de60
   14001d7f7:	mov    rdi,rdx
   14001d7fa:	mov    QWORD PTR [rsp+0x28],rdx
   14001d7ff:	mov    DWORD PTR [rip+0x17f23],eax        # 0x140035728
   14001d805:	xor    eax,eax
   14001d807:	lea    rdx,[rsp+0x230]
   14001d80f:	repnz scas al,BYTE PTR es:[rdi]
   14001d811:	not    rcx
   14001d814:	dec    rcx
   14001d817:	mov    DWORD PTR [rsp+0x20],ecx
   14001d81b:	lea    rcx,[rip+0x17ec6]        # 0x1400356e8
   14001d822:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14001d827:	movdqa XMMWORD PTR [rsp+0x230],xmm0
   14001d830:	call   QWORD PTR [rip+0xe02a]        # 0x14002b860
   14001d836:	lea    rcx,[rip+0xc863]        # 0x14002a0a0
   14001d83d:	call   0x1400295e8
   14001d842:	mov    eax,DWORD PTR [rip+0x17ee0]        # 0x140035728
   14001d848:	bt     eax,0x8
   14001d84c:	jb     0x14001d8ae
   14001d84e:	or     rcx,0xffffffffffffffff
   14001d852:	bts    eax,0x8
   14001d856:	lea    rdx,[rip+0x105f3]        # 0x14002de50
   14001d85d:	mov    rdi,rdx
   14001d860:	mov    QWORD PTR [rsp+0x28],rdx
   14001d865:	mov    DWORD PTR [rip+0x17ebd],eax        # 0x140035728
   14001d86b:	xor    eax,eax
   14001d86d:	lea    rdx,[rsp+0x400]
   14001d875:	repnz scas al,BYTE PTR es:[rdi]
   14001d877:	not    rcx
   14001d87a:	dec    rcx
   14001d87d:	mov    DWORD PTR [rsp+0x20],ecx
   14001d881:	lea    rcx,[rip+0x17e58]        # 0x1400356e0
   14001d888:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14001d88d:	movdqa XMMWORD PTR [rsp+0x400],xmm0
   14001d896:	call   QWORD PTR [rip+0xdfc4]        # 0x14002b860
   14001d89c:	lea    rcx,[rip+0xc7ed]        # 0x14002a090
   14001d8a3:	call   0x1400295e8
   14001d8a8:	mov    eax,DWORD PTR [rip+0x17e7a]        # 0x140035728
   14001d8ae:	bt     eax,0x9
   14001d8b2:	jb     0x14001d914
   14001d8b4:	or     rcx,0xffffffffffffffff
   14001d8b8:	bts    eax,0x9
   14001d8bc:	lea    rdx,[rip+0x10589]        # 0x14002de4c
   14001d8c3:	mov    rdi,rdx
   14001d8c6:	mov    QWORD PTR [rsp+0x28],rdx
   14001d8cb:	mov    DWORD PTR [rip+0x17e57],eax        # 0x140035728
   14001d8d1:	xor    eax,eax
   14001d8d3:	lea    rdx,[rsp+0x2c0]
   14001d8db:	repnz scas al,BYTE PTR es:[rdi]
   14001d8dd:	not    rcx
   14001d8e0:	dec    rcx
   14001d8e3:	mov    DWORD PTR [rsp+0x20],ecx
   14001d8e7:	lea    rcx,[rip+0x17dea]        # 0x1400356d8
   14001d8ee:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14001d8f3:	movdqa XMMWORD PTR [rsp+0x2c0],xmm0
   14001d8fc:	call   QWORD PTR [rip+0xdf5e]        # 0x14002b860
   14001d902:	lea    rcx,[rip+0xc777]        # 0x14002a080
   14001d909:	call   0x1400295e8
   14001d90e:	mov    eax,DWORD PTR [rip+0x17e14]        # 0x140035728
   14001d914:	bt     eax,0xa
   14001d918:	jb     0x14001d97a
   14001d91a:	or     rcx,0xffffffffffffffff
   14001d91e:	bts    eax,0xa
   14001d922:	lea    rdx,[rip+0xfc5f]        # 0x14002d588
   14001d929:	mov    rdi,rdx
   14001d92c:	mov    QWORD PTR [rsp+0x28],rdx
   14001d931:	mov    DWORD PTR [rip+0x17df1],eax        # 0x140035728
   14001d937:	xor    eax,eax
   14001d939:	lea    rdx,[rsp+0x380]
   14001d941:	repnz scas al,BYTE PTR es:[rdi]
   14001d943:	not    rcx
   14001d946:	dec    rcx
   14001d949:	mov    DWORD PTR [rsp+0x20],ecx
   14001d94d:	lea    rcx,[rip+0x17d7c]        # 0x1400356d0
   14001d954:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14001d959:	movdqa XMMWORD PTR [rsp+0x380],xmm0
   14001d962:	call   QWORD PTR [rip+0xdef8]        # 0x14002b860
   14001d968:	lea    rcx,[rip+0xc701]        # 0x14002a070
   14001d96f:	call   0x1400295e8
   14001d974:	mov    eax,DWORD PTR [rip+0x17dae]        # 0x140035728
   14001d97a:	bt     eax,0xb
   14001d97e:	jb     0x14001d9e0
   14001d980:	or     rcx,0xffffffffffffffff
   14001d984:	bts    eax,0xb
   14001d988:	lea    rdx,[rip+0x104b5]        # 0x14002de44
   14001d98f:	mov    rdi,rdx
   14001d992:	mov    QWORD PTR [rsp+0x28],rdx
   14001d997:	mov    DWORD PTR [rip+0x17d8b],eax        # 0x140035728
   14001d99d:	xor    eax,eax
   14001d99f:	lea    rdx,[rsp+0x2e0]
   14001d9a7:	repnz scas al,BYTE PTR es:[rdi]
   14001d9a9:	not    rcx
   14001d9ac:	dec    rcx
   14001d9af:	mov    DWORD PTR [rsp+0x20],ecx
   14001d9b3:	lea    rcx,[rip+0x17d0e]        # 0x1400356c8
   14001d9ba:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14001d9bf:	movdqa XMMWORD PTR [rsp+0x2e0],xmm0
   14001d9c8:	call   QWORD PTR [rip+0xde92]        # 0x14002b860
   14001d9ce:	lea    rcx,[rip+0xc68b]        # 0x14002a060
   14001d9d5:	call   0x1400295e8
   14001d9da:	mov    eax,DWORD PTR [rip+0x17d48]        # 0x140035728
   14001d9e0:	bt     eax,0xc
   14001d9e4:	jb     0x14001da46
   14001d9e6:	or     rcx,0xffffffffffffffff
   14001d9ea:	bts    eax,0xc
   14001d9ee:	lea    rdx,[rip+0x10443]        # 0x14002de38
   14001d9f5:	mov    rdi,rdx
   14001d9f8:	mov    QWORD PTR [rsp+0x28],rdx
   14001d9fd:	mov    DWORD PTR [rip+0x17d25],eax        # 0x140035728
   14001da03:	xor    eax,eax
   14001da05:	lea    rdx,[rsp+0x3e0]
   14001da0d:	repnz scas al,BYTE PTR es:[rdi]
   14001da0f:	not    rcx
   14001da12:	dec    rcx
   14001da15:	mov    DWORD PTR [rsp+0x20],ecx
   14001da19:	lea    rcx,[rip+0x17ca0]        # 0x1400356c0
   14001da20:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14001da25:	movdqa XMMWORD PTR [rsp+0x3e0],xmm0
   14001da2e:	call   QWORD PTR [rip+0xde2c]        # 0x14002b860
   14001da34:	lea    rcx,[rip+0xc615]        # 0x14002a050
   14001da3b:	call   0x1400295e8
   14001da40:	mov    eax,DWORD PTR [rip+0x17ce2]        # 0x140035728
   14001da46:	bt     eax,0xd
   14001da4a:	jb     0x14001daac
   14001da4c:	or     rcx,0xffffffffffffffff
   14001da50:	bts    eax,0xd
   14001da54:	lea    rdx,[rip+0x103d5]        # 0x14002de30
   14001da5b:	mov    rdi,rdx
   14001da5e:	mov    QWORD PTR [rsp+0x28],rdx
   14001da63:	mov    DWORD PTR [rip+0x17cbf],eax        # 0x140035728
   14001da69:	xor    eax,eax
   14001da6b:	lea    rdx,[rsp+0x300]
   14001da73:	repnz scas al,BYTE PTR es:[rdi]
   14001da75:	not    rcx
   14001da78:	dec    rcx
   14001da7b:	mov    DWORD PTR [rsp+0x20],ecx
   14001da7f:	lea    rcx,[rip+0x17c32]        # 0x1400356b8
   14001da86:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14001da8b:	movdqa XMMWORD PTR [rsp+0x300],xmm0
   14001da94:	call   QWORD PTR [rip+0xddc6]        # 0x14002b860
   14001da9a:	lea    rcx,[rip+0xc59f]        # 0x14002a040
   14001daa1:	call   0x1400295e8
   14001daa6:	mov    eax,DWORD PTR [rip+0x17c7c]        # 0x140035728
   14001daac:	bt     eax,0xe
   14001dab0:	jb     0x14001db12
   14001dab2:	or     rcx,0xffffffffffffffff
   14001dab6:	bts    eax,0xe
   14001daba:	lea    rdx,[rip+0x10367]        # 0x14002de28
   14001dac1:	mov    rdi,rdx
   14001dac4:	mov    QWORD PTR [rsp+0x28],rdx
   14001dac9:	mov    DWORD PTR [rip+0x17c59],eax        # 0x140035728
   14001dacf:	xor    eax,eax
   14001dad1:	lea    rdx,[rsp+0x3a0]
   14001dad9:	repnz scas al,BYTE PTR es:[rdi]
   14001dadb:	not    rcx
   14001dade:	dec    rcx
   14001dae1:	mov    DWORD PTR [rsp+0x20],ecx
   14001dae5:	lea    rcx,[rip+0x17bc4]        # 0x1400356b0
   14001daec:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14001daf1:	movdqa XMMWORD PTR [rsp+0x3a0],xmm0
   14001dafa:	call   QWORD PTR [rip+0xdd60]        # 0x14002b860
   14001db00:	lea    rcx,[rip+0xc529]        # 0x14002a030
   14001db07:	call   0x1400295e8
   14001db0c:	mov    eax,DWORD PTR [rip+0x17c16]        # 0x140035728
   14001db12:	bt     eax,0xf
   14001db16:	jb     0x14001db78
   14001db18:	or     rcx,0xffffffffffffffff
   14001db1c:	bts    eax,0xf
   14001db20:	lea    rdx,[rip+0x102f9]        # 0x14002de20
   14001db27:	mov    rdi,rdx
   14001db2a:	mov    QWORD PTR [rsp+0x28],rdx
   14001db2f:	mov    DWORD PTR [rip+0x17bf3],eax        # 0x140035728
   14001db35:	xor    eax,eax
   14001db37:	lea    rdx,[rsp+0x320]
   14001db3f:	repnz scas al,BYTE PTR es:[rdi]
   14001db41:	not    rcx
   14001db44:	dec    rcx
   14001db47:	mov    DWORD PTR [rsp+0x20],ecx
   14001db4b:	lea    rcx,[rip+0x17b56]        # 0x1400356a8
   14001db52:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14001db57:	movdqa XMMWORD PTR [rsp+0x320],xmm0
   14001db60:	call   QWORD PTR [rip+0xdcfa]        # 0x14002b860
   14001db66:	lea    rcx,[rip+0xc4b3]        # 0x14002a020
   14001db6d:	call   0x1400295e8
   14001db72:	mov    eax,DWORD PTR [rip+0x17bb0]        # 0x140035728
   14001db78:	bt     eax,0x10
   14001db7c:	jb     0x14001dbde
   14001db7e:	or     rcx,0xffffffffffffffff
   14001db82:	bts    eax,0x10
   14001db86:	lea    rdx,[rip+0x10283]        # 0x14002de10
   14001db8d:	mov    rdi,rdx
   14001db90:	mov    QWORD PTR [rsp+0x28],rdx
   14001db95:	mov    DWORD PTR [rip+0x17b8d],eax        # 0x140035728
   14001db9b:	xor    eax,eax
   14001db9d:	lea    rdx,[rsp+0x420]
   14001dba5:	repnz scas al,BYTE PTR es:[rdi]
   14001dba7:	not    rcx
   14001dbaa:	dec    rcx
   14001dbad:	mov    DWORD PTR [rsp+0x20],ecx
   14001dbb1:	lea    rcx,[rip+0x17ae8]        # 0x1400356a0
   14001dbb8:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14001dbbd:	movdqa XMMWORD PTR [rsp+0x420],xmm0
   14001dbc6:	call   QWORD PTR [rip+0xdc94]        # 0x14002b860
   14001dbcc:	lea    rcx,[rip+0xc43d]        # 0x14002a010
   14001dbd3:	call   0x1400295e8
   14001dbd8:	mov    eax,DWORD PTR [rip+0x17b4a]        # 0x140035728
   14001dbde:	bt     eax,0x11
   14001dbe2:	jb     0x14001dc44
   14001dbe4:	or     rcx,0xffffffffffffffff
   14001dbe8:	bts    eax,0x11
   14001dbec:	lea    rdx,[rip+0x1020d]        # 0x14002de00
   14001dbf3:	mov    rdi,rdx
   14001dbf6:	mov    QWORD PTR [rsp+0x28],rdx
   14001dbfb:	mov    DWORD PTR [rip+0x17b27],eax        # 0x140035728
   14001dc01:	xor    eax,eax
   14001dc03:	lea    rdx,[rsp+0x340]
   14001dc0b:	repnz scas al,BYTE PTR es:[rdi]
   14001dc0d:	not    rcx
   14001dc10:	dec    rcx
   14001dc13:	mov    DWORD PTR [rsp+0x20],ecx
   14001dc17:	lea    rcx,[rip+0x17a7a]        # 0x140035698
   14001dc1e:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14001dc23:	movdqa XMMWORD PTR [rsp+0x340],xmm0
   14001dc2c:	call   QWORD PTR [rip+0xdc2e]        # 0x14002b860
   14001dc32:	lea    rcx,[rip+0xc3c7]        # 0x14002a000
   14001dc39:	call   0x1400295e8
   14001dc3e:	mov    eax,DWORD PTR [rip+0x17ae4]        # 0x140035728
   14001dc44:	bt     eax,0x12
   14001dc48:	jb     0x14001dcaa
   14001dc4a:	or     rcx,0xffffffffffffffff
   14001dc4e:	bts    eax,0x12
   14001dc52:	lea    rdx,[rip+0x10197]        # 0x14002ddf0
   14001dc59:	mov    rdi,rdx
   14001dc5c:	mov    QWORD PTR [rsp+0x28],rdx
   14001dc61:	mov    DWORD PTR [rip+0x17ac1],eax        # 0x140035728
   14001dc67:	xor    eax,eax
   14001dc69:	lea    rdx,[rsp+0x3c0]
   14001dc71:	repnz scas al,BYTE PTR es:[rdi]
   14001dc73:	not    rcx
   14001dc76:	dec    rcx
   14001dc79:	mov    DWORD PTR [rsp+0x20],ecx
   14001dc7d:	lea    rcx,[rip+0x17a0c]        # 0x140035690
   14001dc84:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14001dc89:	movdqa XMMWORD PTR [rsp+0x3c0],xmm0
   14001dc92:	call   QWORD PTR [rip+0xdbc8]        # 0x14002b860
   14001dc98:	lea    rcx,[rip+0xc351]        # 0x140029ff0
   14001dc9f:	call   0x1400295e8
   14001dca4:	mov    eax,DWORD PTR [rip+0x17a7e]        # 0x140035728
   14001dcaa:	bt     eax,0x13
   14001dcae:	jb     0x14001dd10
   14001dcb0:	or     rcx,0xffffffffffffffff
   14001dcb4:	bts    eax,0x13
   14001dcb8:	lea    rdx,[rip+0x10121]        # 0x14002dde0
   14001dcbf:	mov    rdi,rdx
   14001dcc2:	mov    QWORD PTR [rsp+0x28],rdx
   14001dcc7:	mov    DWORD PTR [rip+0x17a5b],eax        # 0x140035728
   14001dccd:	xor    eax,eax
   14001dccf:	lea    rdx,[rsp+0x270]
   14001dcd7:	repnz scas al,BYTE PTR es:[rdi]
   14001dcd9:	not    rcx
   14001dcdc:	dec    rcx
   14001dcdf:	mov    DWORD PTR [rsp+0x20],ecx
   14001dce3:	lea    rcx,[rip+0x1799e]        # 0x140035688
   14001dcea:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14001dcef:	movdqa XMMWORD PTR [rsp+0x270],xmm0
   14001dcf8:	call   QWORD PTR [rip+0xdb62]        # 0x14002b860
   14001dcfe:	lea    rcx,[rip+0xc2db]        # 0x140029fe0
   14001dd05:	call   0x1400295e8
   14001dd0a:	mov    eax,DWORD PTR [rip+0x17a18]        # 0x140035728
   14001dd10:	bt     eax,0x14
   14001dd14:	jb     0x14001dd76
   14001dd16:	or     rcx,0xffffffffffffffff
   14001dd1a:	bts    eax,0x14
   14001dd1e:	lea    rdx,[rip+0xf87b]        # 0x14002d5a0
   14001dd25:	mov    rdi,rdx
   14001dd28:	mov    QWORD PTR [rsp+0x28],rdx
   14001dd2d:	mov    DWORD PTR [rip+0x179f5],eax        # 0x140035728
   14001dd33:	xor    eax,eax
   14001dd35:	lea    rdx,[rsp+0x290]
   14001dd3d:	repnz scas al,BYTE PTR es:[rdi]
   14001dd3f:	not    rcx
   14001dd42:	dec    rcx
   14001dd45:	mov    DWORD PTR [rsp+0x20],ecx
   14001dd49:	lea    rcx,[rip+0x17930]        # 0x140035680
   14001dd50:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14001dd55:	movdqa XMMWORD PTR [rsp+0x290],xmm0
   14001dd5e:	call   QWORD PTR [rip+0xdafc]        # 0x14002b860
   14001dd64:	lea    rcx,[rip+0xc265]        # 0x140029fd0
   14001dd6b:	call   0x1400295e8
   14001dd70:	mov    eax,DWORD PTR [rip+0x179b2]        # 0x140035728
   14001dd76:	bt     eax,0x15
   14001dd7a:	jb     0x14001dddc
   14001dd7c:	or     rcx,0xffffffffffffffff
   14001dd80:	bts    eax,0x15
   14001dd84:	lea    rdx,[rip+0xf7ed]        # 0x14002d578
   14001dd8b:	mov    rdi,rdx
   14001dd8e:	mov    QWORD PTR [rsp+0x28],rdx
   14001dd93:	mov    DWORD PTR [rip+0x1798f],eax        # 0x140035728
   14001dd99:	xor    eax,eax
   14001dd9b:	lea    rdx,[rsp+0x2b0]
   14001dda3:	repnz scas al,BYTE PTR es:[rdi]
   14001dda5:	not    rcx
   14001dda8:	dec    rcx
   14001ddab:	mov    DWORD PTR [rsp+0x20],ecx
   14001ddaf:	lea    rcx,[rip+0x178c2]        # 0x140035678
   14001ddb6:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14001ddbb:	movdqa XMMWORD PTR [rsp+0x2b0],xmm0
   14001ddc4:	call   QWORD PTR [rip+0xda96]        # 0x14002b860
   14001ddca:	lea    rcx,[rip+0xc1ef]        # 0x140029fc0
   14001ddd1:	call   0x1400295e8
   14001ddd6:	mov    eax,DWORD PTR [rip+0x1794c]        # 0x140035728
   14001dddc:	bt     eax,0x16
   14001dde0:	jb     0x14001de42
   14001dde2:	or     rcx,0xffffffffffffffff
   14001dde6:	bts    eax,0x16
   14001ddea:	lea    rdx,[rip+0xffdf]        # 0x14002ddd0
   14001ddf1:	mov    rdi,rdx
   14001ddf4:	mov    QWORD PTR [rsp+0x28],rdx
   14001ddf9:	mov    DWORD PTR [rip+0x17929],eax        # 0x140035728
   14001ddff:	xor    eax,eax
   14001de01:	lea    rdx,[rsp+0x2d0]
   14001de09:	repnz scas al,BYTE PTR es:[rdi]
   14001de0b:	not    rcx
   14001de0e:	dec    rcx
   14001de11:	mov    DWORD PTR [rsp+0x20],ecx
   14001de15:	lea    rcx,[rip+0x17854]        # 0x140035670
   14001de1c:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14001de21:	movdqa XMMWORD PTR [rsp+0x2d0],xmm0
   14001de2a:	call   QWORD PTR [rip+0xda30]        # 0x14002b860
   14001de30:	lea    rcx,[rip+0xc179]        # 0x140029fb0
   14001de37:	call   0x1400295e8
   14001de3c:	mov    eax,DWORD PTR [rip+0x178e6]        # 0x140035728
   14001de42:	bt     eax,0x17
   14001de46:	jb     0x14001dea8
   14001de48:	or     rcx,0xffffffffffffffff
   14001de4c:	bts    eax,0x17
   14001de50:	lea    rdx,[rip+0xff61]        # 0x14002ddb8
   14001de57:	mov    rdi,rdx
   14001de5a:	mov    QWORD PTR [rsp+0x28],rdx
   14001de5f:	mov    DWORD PTR [rip+0x178c3],eax        # 0x140035728
   14001de65:	xor    eax,eax
   14001de67:	lea    rdx,[rsp+0x2f0]
   14001de6f:	repnz scas al,BYTE PTR es:[rdi]
   14001de71:	not    rcx
   14001de74:	dec    rcx
   14001de77:	mov    DWORD PTR [rsp+0x20],ecx
   14001de7b:	lea    rcx,[rip+0x177e6]        # 0x140035668
   14001de82:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14001de87:	movdqa XMMWORD PTR [rsp+0x2f0],xmm0
   14001de90:	call   QWORD PTR [rip+0xd9ca]        # 0x14002b860
   14001de96:	lea    rcx,[rip+0xc103]        # 0x140029fa0
   14001de9d:	call   0x1400295e8
   14001dea2:	mov    eax,DWORD PTR [rip+0x17880]        # 0x140035728
   14001dea8:	bt     eax,0x18
   14001deac:	jb     0x14001df0e
   14001deae:	or     rcx,0xffffffffffffffff
   14001deb2:	bts    eax,0x18
   14001deb6:	lea    rdx,[rip+0xfef7]        # 0x14002ddb4
   14001debd:	mov    rdi,rdx
   14001dec0:	mov    QWORD PTR [rsp+0x28],rdx
   14001dec5:	mov    DWORD PTR [rip+0x1785d],eax        # 0x140035728
   14001decb:	xor    eax,eax
   14001decd:	lea    rdx,[rsp+0x310]
   14001ded5:	repnz scas al,BYTE PTR es:[rdi]
   14001ded7:	not    rcx
   14001deda:	dec    rcx
   14001dedd:	mov    DWORD PTR [rsp+0x20],ecx
   14001dee1:	lea    rcx,[rip+0x17778]        # 0x140035660
   14001dee8:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14001deed:	movdqa XMMWORD PTR [rsp+0x310],xmm0
   14001def6:	call   QWORD PTR [rip+0xd964]        # 0x14002b860
   14001defc:	lea    rcx,[rip+0xc08d]        # 0x140029f90
   14001df03:	call   0x1400295e8
   14001df08:	mov    eax,DWORD PTR [rip+0x1781a]        # 0x140035728
   14001df0e:	bt     eax,0x19
   14001df12:	jb     0x14001df74
   14001df14:	or     rcx,0xffffffffffffffff
   14001df18:	bts    eax,0x19
   14001df1c:	lea    rdx,[rip+0xfe89]        # 0x14002ddac
   14001df23:	mov    rdi,rdx
   14001df26:	mov    QWORD PTR [rsp+0x28],rdx
   14001df2b:	mov    DWORD PTR [rip+0x177f7],eax        # 0x140035728
   14001df31:	xor    eax,eax
   14001df33:	lea    rdx,[rsp+0x330]
   14001df3b:	repnz scas al,BYTE PTR es:[rdi]
   14001df3d:	not    rcx
   14001df40:	dec    rcx
   14001df43:	mov    DWORD PTR [rsp+0x20],ecx
   14001df47:	lea    rcx,[rip+0x1770a]        # 0x140035658
   14001df4e:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14001df53:	movdqa XMMWORD PTR [rsp+0x330],xmm0
   14001df5c:	call   QWORD PTR [rip+0xd8fe]        # 0x14002b860
   14001df62:	lea    rcx,[rip+0xc017]        # 0x140029f80
   14001df69:	call   0x1400295e8
   14001df6e:	mov    eax,DWORD PTR [rip+0x177b4]        # 0x140035728
   14001df74:	bt     eax,0x1a
   14001df78:	jb     0x14001dfda
   14001df7a:	or     rcx,0xffffffffffffffff
   14001df7e:	bts    eax,0x1a
   14001df82:	lea    rdx,[rip+0xfe17]        # 0x14002dda0
   14001df89:	mov    rdi,rdx
   14001df8c:	mov    QWORD PTR [rsp+0x28],rdx
   14001df91:	mov    DWORD PTR [rip+0x17791],eax        # 0x140035728
   14001df97:	xor    eax,eax
   14001df99:	lea    rdx,[rsp+0x350]
   14001dfa1:	repnz scas al,BYTE PTR es:[rdi]
   14001dfa3:	not    rcx
   14001dfa6:	dec    rcx
   14001dfa9:	mov    DWORD PTR [rsp+0x20],ecx
   14001dfad:	lea    rcx,[rip+0x1769c]        # 0x140035650
   14001dfb4:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14001dfb9:	movdqa XMMWORD PTR [rsp+0x350],xmm0
   14001dfc2:	call   QWORD PTR [rip+0xd898]        # 0x14002b860
   14001dfc8:	lea    rcx,[rip+0xbfa1]        # 0x140029f70
   14001dfcf:	call   0x1400295e8
   14001dfd4:	mov    eax,DWORD PTR [rip+0x1774e]        # 0x140035728
   14001dfda:	bt     eax,0x1b
   14001dfde:	jb     0x14001e040
   14001dfe0:	or     rcx,0xffffffffffffffff
   14001dfe4:	bts    eax,0x1b
   14001dfe8:	lea    rdx,[rip+0xfda1]        # 0x14002dd90
   14001dfef:	mov    rdi,rdx
   14001dff2:	mov    QWORD PTR [rsp+0x28],rdx
   14001dff7:	mov    DWORD PTR [rip+0x1772b],eax        # 0x140035728
   14001dffd:	xor    eax,eax
   14001dfff:	lea    rdx,[rsp+0x370]
   14001e007:	repnz scas al,BYTE PTR es:[rdi]
   14001e009:	not    rcx
   14001e00c:	dec    rcx
   14001e00f:	mov    DWORD PTR [rsp+0x20],ecx
   14001e013:	lea    rcx,[rip+0x1762e]        # 0x140035648
   14001e01a:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14001e01f:	movdqa XMMWORD PTR [rsp+0x370],xmm0
   14001e028:	call   QWORD PTR [rip+0xd832]        # 0x14002b860
   14001e02e:	lea    rcx,[rip+0xbf2b]        # 0x140029f60
   14001e035:	call   0x1400295e8
   14001e03a:	mov    eax,DWORD PTR [rip+0x176e8]        # 0x140035728
   14001e040:	bt     eax,0x1c
   14001e044:	jb     0x14001e0a6
   14001e046:	or     rcx,0xffffffffffffffff
   14001e04a:	bts    eax,0x1c
   14001e04e:	lea    rdx,[rip+0xfcbf]        # 0x14002dd14
   14001e055:	mov    rdi,rdx
   14001e058:	mov    QWORD PTR [rsp+0x28],rdx
   14001e05d:	mov    DWORD PTR [rip+0x176c5],eax        # 0x140035728
   14001e063:	xor    eax,eax
   14001e065:	lea    rdx,[rsp+0x390]
   14001e06d:	repnz scas al,BYTE PTR es:[rdi]
   14001e06f:	not    rcx
   14001e072:	dec    rcx
   14001e075:	mov    DWORD PTR [rsp+0x20],ecx
   14001e079:	lea    rcx,[rip+0x175c0]        # 0x140035640
   14001e080:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14001e085:	movdqa XMMWORD PTR [rsp+0x390],xmm0
   14001e08e:	call   QWORD PTR [rip+0xd7cc]        # 0x14002b860
   14001e094:	lea    rcx,[rip+0xbeb5]        # 0x140029f50
   14001e09b:	call   0x1400295e8
   14001e0a0:	mov    eax,DWORD PTR [rip+0x17682]        # 0x140035728
   14001e0a6:	bt     eax,0x1d
   14001e0aa:	jb     0x14001e10c
   14001e0ac:	or     rcx,0xffffffffffffffff
   14001e0b0:	bts    eax,0x1d
   14001e0b4:	lea    rdx,[rip+0xfcc5]        # 0x14002dd80
   14001e0bb:	mov    rdi,rdx
   14001e0be:	mov    QWORD PTR [rsp+0x28],rdx
   14001e0c3:	mov    DWORD PTR [rip+0x1765f],eax        # 0x140035728
   14001e0c9:	xor    eax,eax
   14001e0cb:	lea    rdx,[rsp+0x3b0]
   14001e0d3:	repnz scas al,BYTE PTR es:[rdi]
   14001e0d5:	not    rcx
   14001e0d8:	dec    rcx
   14001e0db:	mov    DWORD PTR [rsp+0x20],ecx
   14001e0df:	lea    rcx,[rip+0x17552]        # 0x140035638
   14001e0e6:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14001e0eb:	movdqa XMMWORD PTR [rsp+0x3b0],xmm0
   14001e0f4:	call   QWORD PTR [rip+0xd766]        # 0x14002b860
   14001e0fa:	lea    rcx,[rip+0xbe3f]        # 0x140029f40
   14001e101:	call   0x1400295e8
   14001e106:	mov    eax,DWORD PTR [rip+0x1761c]        # 0x140035728
   14001e10c:	bt     eax,0x1e
   14001e110:	jb     0x14001e172
   14001e112:	or     rcx,0xffffffffffffffff
   14001e116:	bts    eax,0x1e
   14001e11a:	lea    rdx,[rip+0xfc03]        # 0x14002dd24
   14001e121:	mov    rdi,rdx
   14001e124:	mov    QWORD PTR [rsp+0x28],rdx
   14001e129:	mov    DWORD PTR [rip+0x175f9],eax        # 0x140035728
   14001e12f:	xor    eax,eax
   14001e131:	lea    rdx,[rsp+0x3d0]
   14001e139:	repnz scas al,BYTE PTR es:[rdi]
   14001e13b:	not    rcx
   14001e13e:	dec    rcx
   14001e141:	mov    DWORD PTR [rsp+0x20],ecx
   14001e145:	lea    rcx,[rip+0x174e4]        # 0x140035630
   14001e14c:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14001e151:	movdqa XMMWORD PTR [rsp+0x3d0],xmm0
   14001e15a:	call   QWORD PTR [rip+0xd700]        # 0x14002b860
   14001e160:	lea    rcx,[rip+0xbdc9]        # 0x140029f30
   14001e167:	call   0x1400295e8
   14001e16c:	mov    eax,DWORD PTR [rip+0x175b6]        # 0x140035728
   14001e172:	bt     eax,0x1f
   14001e176:	jb     0x14001e1d2
   14001e178:	or     rcx,0xffffffffffffffff
   14001e17c:	bts    eax,0x1f
   14001e180:	lea    rdx,[rip+0xfbed]        # 0x14002dd74
   14001e187:	mov    rdi,rdx
   14001e18a:	mov    QWORD PTR [rsp+0x28],rdx
   14001e18f:	mov    DWORD PTR [rip+0x17593],eax        # 0x140035728
   14001e195:	xor    eax,eax
   14001e197:	lea    rdx,[rsp+0x240]
   14001e19f:	repnz scas al,BYTE PTR es:[rdi]
   14001e1a1:	not    rcx
   14001e1a4:	dec    rcx
   14001e1a7:	mov    DWORD PTR [rsp+0x20],ecx
   14001e1ab:	lea    rcx,[rip+0x17476]        # 0x140035628
   14001e1b2:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14001e1b7:	movdqa XMMWORD PTR [rsp+0x240],xmm0
   14001e1c0:	call   QWORD PTR [rip+0xd69a]        # 0x14002b860
   14001e1c6:	lea    rcx,[rip+0xbd53]        # 0x140029f20
   14001e1cd:	call   0x1400295e8
   14001e1d2:	mov    eax,DWORD PTR [rip+0x17448]        # 0x140035620
   14001e1d8:	test   al,0x1
   14001e1da:	jne    0x14001e235
   14001e1dc:	or     rcx,0xffffffffffffffff
   14001e1e0:	lea    rdx,[rip+0xf1d5]        # 0x14002d3bc
   14001e1e7:	or     eax,0x1
   14001e1ea:	mov    rdi,rdx
   14001e1ed:	mov    QWORD PTR [rsp+0x28],rdx
   14001e1f2:	mov    DWORD PTR [rip+0x17428],eax        # 0x140035620
   14001e1f8:	xor    eax,eax
   14001e1fa:	lea    rdx,[rsp+0x250]
   14001e202:	repnz scas al,BYTE PTR es:[rdi]
   14001e204:	not    rcx
   14001e207:	dec    rcx
   14001e20a:	mov    DWORD PTR [rsp+0x20],ecx
   14001e20e:	lea    rcx,[rip+0x17403]        # 0x140035618
   14001e215:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14001e21a:	movdqa XMMWORD PTR [rsp+0x250],xmm0
   14001e223:	call   QWORD PTR [rip+0xd637]        # 0x14002b860
   14001e229:	lea    rcx,[rip+0xbce0]        # 0x140029f10
   14001e230:	call   0x1400295e8
   14001e235:	mov    rcx,rsi
   14001e238:	call   QWORD PTR [rip+0xd35a]        # 0x14002b598
   14001e23e:	test   al,al
   14001e240:	jne    0x14001f7bd
   14001e246:	mov    QWORD PTR [rsp+0x628],rbp
   14001e24e:	mov    QWORD PTR [rsp+0x618],r12
   14001e256:	mov    QWORD PTR [rsp+0x608],r14
   14001e25e:	mov    QWORD PTR [rsp+0x600],r15
   14001e266:	mov    ebp,0x3
   14001e26b:	nop    DWORD PTR [rax+rax*1+0x0]
   14001e270:	mov    rcx,rsi
   14001e273:	call   QWORD PTR [rip+0xd317]        # 0x14002b590
   14001e279:	mov    rcx,rsi
   14001e27c:	call   QWORD PTR [rip+0xd2be]        # 0x14002b540
   14001e282:	cmp    eax,0x2
   14001e285:	je     0x14001f78c
   14001e28b:	mov    rcx,rsi
   14001e28e:	call   QWORD PTR [rip+0xd2ac]        # 0x14002b540
   14001e294:	cmp    eax,0x3
   14001e297:	je     0x14001f78c
   14001e29d:	mov    rcx,rsi
   14001e2a0:	call   QWORD PTR [rip+0xd29a]        # 0x14002b540
   14001e2a6:	cmp    eax,0x8
   14001e2a9:	je     0x14001f78c
   14001e2af:	mov    rcx,rsi
   14001e2b2:	call   QWORD PTR [rip+0xd288]        # 0x14002b540
   14001e2b8:	cmp    eax,0x4
   14001e2bb:	jne    0x14001e2e9
   14001e2bd:	lea    rdx,[rsp+0x440]
   14001e2c5:	mov    rcx,rsi
   14001e2c8:	or     ebx,0x10
   14001e2cb:	call   QWORD PTR [rip+0xd2b7]        # 0x14002b588
   14001e2d1:	lea    rcx,[rip+0x17388]        # 0x140035660
   14001e2d8:	mov    rdx,rax
   14001e2db:	call   QWORD PTR [rip+0xd477]        # 0x14002b758
   14001e2e1:	test   al,al
   14001e2e3:	je     0x14001e2e9
   14001e2e5:	mov    al,0x1
   14001e2e7:	jmp    0x14001e2eb
   14001e2e9:	xor    al,al
   14001e2eb:	test   bl,0x10
   14001e2ee:	je     0x14001e2f3
   14001e2f0:	and    ebx,0xffffffef
   14001e2f3:	test   al,al
   14001e2f5:	je     0x14001f784
   14001e2fb:	mov    rax,QWORD PTR [rip+0xd57e]        # 0x14002b880
   14001e302:	lea    rcx,[rsp+0x60]
   14001e307:	mov    QWORD PTR [rsp+0x68],rax
   14001e30c:	call   QWORD PTR [rip+0xd57e]        # 0x14002b890
   14001e312:	lea    rdx,[rsp+0x58]
   14001e317:	mov    rcx,rsi
   14001e31a:	xor    r14b,r14b
   14001e31d:	xor    r15b,r15b
   14001e320:	call   QWORD PTR [rip+0xd25a]        # 0x14002b580
   14001e326:	lea    r8,[rip+0x173a3]        # 0x1400356d0
   14001e32d:	lea    rdx,[rsp+0x5f0]
   14001e335:	lea    rcx,[rsp+0x58]
   14001e33a:	call   QWORD PTR [rip+0xd468]        # 0x14002b7a8
   14001e340:	lea    rdx,[rsp+0x188]
   14001e348:	mov    rcx,rax
   14001e34b:	call   QWORD PTR [rip+0xd1df]        # 0x14002b530
   14001e351:	lea    rcx,[r13+0x10]
   14001e355:	mov    rdx,rax
   14001e358:	call   QWORD PTR [rip+0xd552]        # 0x14002b8b0
   14001e35e:	lea    rcx,[rsp+0x188]
   14001e366:	call   QWORD PTR [rip+0xd52c]        # 0x14002b898
   14001e36c:	lea    r8,[rip+0x17305]        # 0x140035678
   14001e373:	lea    rdx,[rsp+0x460]
   14001e37b:	lea    rcx,[rsp+0x58]
   14001e380:	call   QWORD PTR [rip+0xd422]        # 0x14002b7a8
   14001e386:	lea    rdx,[rsp+0x198]
   14001e38e:	mov    rcx,rax
   14001e391:	call   QWORD PTR [rip+0xd199]        # 0x14002b530
   14001e397:	lea    rcx,[r13+0x18]
   14001e39b:	mov    rdx,rax
   14001e39e:	call   QWORD PTR [rip+0xd50c]        # 0x14002b8b0
   14001e3a4:	lea    rcx,[rsp+0x198]
   14001e3ac:	call   QWORD PTR [rip+0xd4e6]        # 0x14002b898
   14001e3b2:	mov    rcx,rsi
   14001e3b5:	call   QWORD PTR [rip+0xd1dd]        # 0x14002b598
   14001e3bb:	test   al,al
   14001e3bd:	jne    0x14001f73d
   14001e3c3:	mov    rcx,rsi
   14001e3c6:	call   QWORD PTR [rip+0xd1c4]        # 0x14002b590
   14001e3cc:	mov    rcx,rsi
   14001e3cf:	call   QWORD PTR [rip+0xd16b]        # 0x14002b540
   14001e3d5:	cmp    eax,0x5
   14001e3d8:	je     0x14001f73d
   14001e3de:	mov    rcx,rsi
   14001e3e1:	call   0x14001bb60
   14001e3e6:	test   al,al
   14001e3e8:	jne    0x14001f709
   14001e3ee:	mov    rcx,rsi
   14001e3f1:	call   QWORD PTR [rip+0xd149]        # 0x14002b540
   14001e3f7:	cmp    eax,0x4
   14001e3fa:	jne    0x14001e428
   14001e3fc:	lea    rdx,[rsp+0x5c0]
   14001e404:	mov    rcx,rsi
   14001e407:	or     ebx,0x20
   14001e40a:	call   QWORD PTR [rip+0xd178]        # 0x14002b588
   14001e410:	lea    rcx,[rip+0x172e9]        # 0x140035700
   14001e417:	mov    rdx,rax
   14001e41a:	call   QWORD PTR [rip+0xd338]        # 0x14002b758
   14001e420:	test   al,al
   14001e422:	je     0x14001e428
   14001e424:	mov    al,0x1
   14001e426:	jmp    0x14001e42a
   14001e428:	xor    al,al
   14001e42a:	test   bl,0x20
   14001e42d:	je     0x14001e432
   14001e42f:	and    ebx,0xffffffdf
   14001e432:	test   al,al
   14001e434:	je     0x14001e4fe
   14001e43a:	lea    rdx,[rsp+0x1a8]
   14001e442:	xor    r8d,r8d
   14001e445:	mov    rcx,rsi
   14001e448:	call   QWORD PTR [rip+0xd36a]        # 0x14002b7b8
   14001e44e:	lea    rcx,[rsp+0x1a8]
   14001e456:	call   QWORD PTR [rip+0xd43c]        # 0x14002b898
   14001e45c:	lea    rdx,[rip+0xf8e5]        # 0x14002dd48
   14001e463:	lea    rcx,[rsp+0x190]
   14001e46b:	or     r8d,0xffffffff
   14001e46f:	call   QWORD PTR [rip+0xce0b]        # 0x14002b280
   14001e475:	mov    rdi,QWORD PTR [rsi+0x8]
   14001e479:	mov    rdx,QWORD PTR [rdi+0x60]
   14001e47d:	add    rdi,0x60
   14001e481:	mov    rbp,rax
   14001e484:	mov    ecx,DWORD PTR [rdx]
   14001e486:	cmp    ecx,0x1
   14001e489:	je     0x14001e4c6
   14001e48b:	test   ecx,ecx
   14001e48d:	je     0x14001e4c6
   14001e48f:	mov    edx,0x7fffffff
   14001e494:	mov    r8d,0x1
   14001e49a:	mov    rcx,rdi
   14001e49d:	call   0x140001a10
   14001e4a2:	test   rax,rax
   14001e4a5:	je     0x14001e4eb
   14001e4a7:	mov    rdx,rbp
   14001e4aa:	mov    rcx,rax
   14001e4ad:	call   QWORD PTR [rip+0xd3ed]        # 0x14002b8a0
   14001e4b3:	lea    rcx,[rsp+0x190]
   14001e4bb:	call   QWORD PTR [rip+0xd3d7]        # 0x14002b898
   14001e4c1:	jmp    0x14001f709
   14001e4c6:	lea    rcx,[rsp+0x100]
   14001e4ce:	mov    rdx,rax
   14001e4d1:	call   QWORD PTR [rip+0xd3c9]        # 0x14002b8a0
   14001e4d7:	mov    rcx,rdi
   14001e4da:	call   QWORD PTR [rip+0xd360]        # 0x14002b840
   14001e4e0:	mov    rcx,QWORD PTR [rsp+0x100]
   14001e4e8:	mov    QWORD PTR [rax],rcx
   14001e4eb:	lea    rcx,[rsp+0x190]
   14001e4f3:	call   QWORD PTR [rip+0xd39f]        # 0x14002b898
   14001e4f9:	jmp    0x14001f709
   14001e4fe:	mov    rcx,rsi
   14001e501:	call   QWORD PTR [rip+0xd039]        # 0x14002b540
   14001e507:	cmp    eax,0x4
   14001e50a:	jne    0x14001e550
   14001e50c:	lea    rdx,[rsp+0x480]
   14001e514:	mov    rcx,rsi
   14001e517:	or     ebx,0x3
   14001e51a:	call   QWORD PTR [rip+0xd068]        # 0x14002b588
   14001e520:	lea    rdx,[rsp+0xe8]
   14001e528:	mov    rcx,rax
   14001e52b:	call   QWORD PTR [rip+0xcfff]        # 0x14002b530
   14001e531:	lea    rdx,[rip+0x170f0]        # 0x140035628
   14001e538:	mov    r8d,0x1
   14001e53e:	mov    rcx,rax
   14001e541:	call   QWORD PTR [rip+0xd269]        # 0x14002b7b0
   14001e547:	test   al,al
   14001e549:	je     0x14001e550
   14001e54b:	mov    dil,0x1
   14001e54e:	jmp    0x14001e553
   14001e550:	xor    dil,dil
   14001e553:	test   bl,0x2
   14001e556:	je     0x14001e569
   14001e558:	lea    rcx,[rsp+0xe8]
   14001e560:	and    ebx,0xfffffffd
   14001e563:	call   QWORD PTR [rip+0xd32f]        # 0x14002b898
   14001e569:	test   bl,0x1
   14001e56c:	je     0x14001e571
   14001e56e:	and    ebx,0xfffffffe
   14001e571:	test   dil,dil
   14001e574:	je     0x14001e60a
   14001e57a:	lea    rdx,[rsp+0x540]
   14001e582:	mov    rcx,rsi
   14001e585:	call   QWORD PTR [rip+0xcffd]        # 0x14002b588
   14001e58b:	lea    rdx,[rsp+0xb0]
   14001e593:	mov    rcx,rax
   14001e596:	call   QWORD PTR [rip+0xcf94]        # 0x14002b530
   14001e59c:	lea    rdx,[rsp+0xd0]
   14001e5a4:	mov    rcx,rsi
   14001e5a7:	call   0x14001ce20
   14001e5ac:	or     r9d,0xffffffff
   14001e5b0:	lea    rdx,[rsp+0x150]
   14001e5b8:	lea    r8d,[r9+0x7]
   14001e5bc:	lea    rcx,[rsp+0xb0]
   14001e5c4:	mov    rdi,rax
   14001e5c7:	call   QWORD PTR [rip+0xcd8b]        # 0x14002b358
   14001e5cd:	mov    r8,rdi
   14001e5d0:	mov    rcx,r13
   14001e5d3:	mov    rdx,rax
   14001e5d6:	call   0x1400084a0
   14001e5db:	lea    rcx,[rsp+0x150]
   14001e5e3:	call   QWORD PTR [rip+0xd2af]        # 0x14002b898
   14001e5e9:	lea    rcx,[rsp+0xd0]
   14001e5f1:	call   QWORD PTR [rip+0xd2a1]        # 0x14002b898
   14001e5f7:	lea    rcx,[rsp+0xb0]
   14001e5ff:	call   QWORD PTR [rip+0xd293]        # 0x14002b898
   14001e605:	jmp    0x14001f709
   14001e60a:	mov    rcx,rsi
   14001e60d:	call   QWORD PTR [rip+0xcf2d]        # 0x14002b540
   14001e613:	cmp    eax,0x4
   14001e616:	jne    0x14001e644
   14001e618:	lea    rdx,[rsp+0x4a0]
   14001e620:	mov    rcx,rsi
   14001e623:	or     ebx,0x40
   14001e626:	call   QWORD PTR [rip+0xcf5c]        # 0x14002b588
   14001e62c:	lea    rcx,[rip+0x170c5]        # 0x1400356f8
   14001e633:	mov    rdx,rax
   14001e636:	call   QWORD PTR [rip+0xd11c]        # 0x14002b758
   14001e63c:	test   al,al
   14001e63e:	je     0x14001e644
   14001e640:	mov    al,0x1
   14001e642:	jmp    0x14001e646
   14001e644:	xor    al,al
   14001e646:	test   bl,0x40
   14001e649:	je     0x14001e64e
   14001e64b:	and    ebx,0xffffffbf
   14001e64e:	test   al,al
   14001e650:	je     0x14001e850
   14001e656:	mov    rax,QWORD PTR [rip+0xd22b]        # 0x14002b888
   14001e65d:	mov    rcx,rsi
   14001e660:	mov    QWORD PTR [rsp+0x40],rax
   14001e665:	call   QWORD PTR [rip+0xcf2d]        # 0x14002b598
   14001e66b:	test   al,al
   14001e66d:	jne    0x14001e7da
   14001e673:	mov    rcx,rsi
   14001e676:	call   QWORD PTR [rip+0xcf14]        # 0x14002b590
   14001e67c:	mov    rcx,rsi
   14001e67f:	call   QWORD PTR [rip+0xcebb]        # 0x14002b540
   14001e685:	cmp    eax,0x5
   14001e688:	je     0x14001e7da
   14001e68e:	mov    rcx,rsi
   14001e691:	call   QWORD PTR [rip+0xcea9]        # 0x14002b540
   14001e697:	cmp    eax,0x4
   14001e69a:	jne    0x14001e6c9
   14001e69c:	lea    rdx,[rsp+0x5a0]
   14001e6a4:	mov    rcx,rsi
   14001e6a7:	bts    ebx,0x7
   14001e6ab:	call   QWORD PTR [rip+0xced7]        # 0x14002b588
   14001e6b1:	lea    rcx,[rip+0x17038]        # 0x1400356f0
   14001e6b8:	mov    rdx,rax
   14001e6bb:	call   QWORD PTR [rip+0xd097]        # 0x14002b758
   14001e6c1:	test   al,al
   14001e6c3:	je     0x14001e6c9
   14001e6c5:	mov    al,0x1
   14001e6c7:	jmp    0x14001e6cb
   14001e6c9:	xor    al,al
   14001e6cb:	test   bl,bl
   14001e6cd:	jns    0x14001e6d3
   14001e6cf:	btr    ebx,0x7
   14001e6d3:	test   al,al
   14001e6d5:	je     0x14001e7c9
   14001e6db:	lea    rdx,[rsp+0xc0]
   14001e6e3:	mov    rcx,rsi
   14001e6e6:	call   QWORD PTR [rip+0xce94]        # 0x14002b580
   14001e6ec:	lea    r8,[rip+0x17025]        # 0x140035718
   14001e6f3:	lea    rdx,[rsp+0x4c0]
   14001e6fb:	lea    rcx,[rsp+0xc0]
   14001e703:	call   QWORD PTR [rip+0xd09f]        # 0x14002b7a8
   14001e709:	lea    rdx,[rsp+0x180]
   14001e711:	mov    rcx,rax
   14001e714:	call   QWORD PTR [rip+0xce16]        # 0x14002b530
   14001e71a:	mov    rcx,QWORD PTR [rsp+0x40]
   14001e71f:	mov    edx,DWORD PTR [rcx]
   14001e721:	mov    rdi,rax
   14001e724:	cmp    edx,0x1
   14001e727:	je     0x14001e755
   14001e729:	test   edx,edx
   14001e72b:	je     0x14001e755
   14001e72d:	lea    rcx,[rsp+0x40]
   14001e732:	mov    edx,0x7fffffff
   14001e737:	mov    r8d,0x1
   14001e73d:	call   0x140001a10
   14001e742:	test   rax,rax
   14001e745:	je     0x14001e77c
   14001e747:	mov    rdx,rdi
   14001e74a:	mov    rcx,rax
   14001e74d:	call   QWORD PTR [rip+0xd14d]        # 0x14002b8a0
   14001e753:	jmp    0x14001e77c
   14001e755:	lea    rcx,[rsp+0xf8]
   14001e75d:	mov    rdx,rax
   14001e760:	call   QWORD PTR [rip+0xd13a]        # 0x14002b8a0
   14001e766:	lea    rcx,[rsp+0x40]
   14001e76b:	call   QWORD PTR [rip+0xd0cf]        # 0x14002b840
   14001e771:	mov    rcx,QWORD PTR [rsp+0xf8]
   14001e779:	mov    QWORD PTR [rax],rcx
   14001e77c:	lea    rcx,[rsp+0x180]
   14001e784:	call   QWORD PTR [rip+0xd10e]        # 0x14002b898
   14001e78a:	mov    rcx,rsi
   14001e78d:	call   QWORD PTR [rip+0xce05]        # 0x14002b598
   14001e793:	test   al,al
   14001e795:	jne    0x14001e7bb
   14001e797:	mov    rcx,rsi
   14001e79a:	call   QWORD PTR [rip+0xcdf0]        # 0x14002b590
   14001e7a0:	mov    rcx,rsi
   14001e7a3:	call   QWORD PTR [rip+0xcd97]        # 0x14002b540
   14001e7a9:	cmp    eax,0x5
   14001e7ac:	je     0x14001e7bb
   14001e7ae:	mov    rcx,rsi
   14001e7b1:	call   QWORD PTR [rip+0xcde1]        # 0x14002b598
   14001e7b7:	test   al,al
   14001e7b9:	je     0x14001e797
   14001e7bb:	lea    rcx,[rsp+0xc0]
   14001e7c3:	call   QWORD PTR [rip+0xcda7]        # 0x14002b570
   14001e7c9:	mov    rcx,rsi
   14001e7cc:	call   QWORD PTR [rip+0xcdc6]        # 0x14002b598
   14001e7d2:	test   al,al
   14001e7d4:	je     0x14001e673
   14001e7da:	lea    rcx,[r13+0x20]
   14001e7de:	lea    rdx,[rsp+0x40]
   14001e7e3:	call   0x140001830
   14001e7e8:	mov    rbp,QWORD PTR [rsp+0x40]
   14001e7ed:	mov    eax,DWORD PTR [rbp+0x0]
   14001e7f0:	test   eax,eax
   14001e7f2:	je     0x14001e812
   14001e7f4:	cmp    eax,0xffffffff
   14001e7f7:	je     0x14001f709
   14001e7fd:	lock add DWORD PTR [rbp+0x0],0xffffffff
   14001e802:	setne  al
   14001e805:	test   al,al
   14001e807:	jne    0x14001f709
   14001e80d:	mov    rbp,QWORD PTR [rsp+0x40]
   14001e812:	movsxd rax,DWORD PTR [rbp+0xc]
   14001e816:	lea    rdi,[rbp+rax*8+0x10]
   14001e81b:	movsxd rax,DWORD PTR [rbp+0x8]
   14001e81f:	lea    r12,[rbp+rax*8+0x10]
   14001e824:	cmp    r12,rdi
   14001e827:	je     0x14001e842
   14001e829:	nop    DWORD PTR [rax+0x0]
   14001e830:	sub    rdi,0x8
   14001e834:	mov    rcx,rdi
   14001e837:	call   QWORD PTR [rip+0xd05b]        # 0x14002b898
   14001e83d:	cmp    rdi,r12
   14001e840:	jne    0x14001e830
   14001e842:	mov    rcx,rbp
   14001e845:	call   QWORD PTR [rip+0xd025]        # 0x14002b870
   14001e84b:	jmp    0x14001f709
   14001e850:	mov    rcx,rsi
   14001e853:	call   QWORD PTR [rip+0xcce7]        # 0x14002b540
   14001e859:	cmp    eax,0x4
   14001e85c:	jne    0x14001e88b
   14001e85e:	lea    rdx,[rsp+0x560]
   14001e866:	mov    rcx,rsi
   14001e869:	bts    ebx,0x8
   14001e86d:	call   QWORD PTR [rip+0xcd15]        # 0x14002b588
   14001e873:	lea    rcx,[rip+0x16e8e]        # 0x140035708
   14001e87a:	mov    rdx,rax
   14001e87d:	call   QWORD PTR [rip+0xced5]        # 0x14002b758
   14001e883:	test   al,al
   14001e885:	je     0x14001e88b
   14001e887:	mov    al,0x1
   14001e889:	jmp    0x14001e88d
   14001e88b:	xor    al,al
   14001e88d:	bt     ebx,0x8
   14001e891:	jae    0x14001e897
   14001e893:	btr    ebx,0x8
   14001e897:	test   al,al
   14001e899:	je     0x14001f701
   14001e89f:	lea    rcx,[rsp+0x70]
   14001e8a4:	call   QWORD PTR [rip+0xcfe6]        # 0x14002b890
   14001e8aa:	mov    rcx,rsi
   14001e8ad:	call   QWORD PTR [rip+0xcce5]        # 0x14002b598
   14001e8b3:	test   al,al
   14001e8b5:	jne    0x14001f6f4
   14001e8bb:	nop    DWORD PTR [rax+rax*1+0x0]
   14001e8c0:	mov    rcx,rsi
   14001e8c3:	call   QWORD PTR [rip+0xccc7]        # 0x14002b590
   14001e8c9:	mov    rcx,rsi
   14001e8cc:	call   QWORD PTR [rip+0xcc6e]        # 0x14002b540
   14001e8d2:	cmp    eax,0x5
   14001e8d5:	je     0x14001f6f4
   14001e8db:	mov    rcx,rsi
   14001e8de:	call   0x14001bb60
   14001e8e3:	test   al,al
   14001e8e5:	jne    0x14001f6de
   14001e8eb:	mov    rcx,rsi
   14001e8ee:	call   QWORD PTR [rip+0xcc4c]        # 0x14002b540
   14001e8f4:	cmp    eax,0x4
   14001e8f7:	jne    0x14001e926
   14001e8f9:	lea    rdx,[rsp+0x4e0]
   14001e901:	mov    rcx,rsi
   14001e904:	bts    ebx,0x9
   14001e908:	call   QWORD PTR [rip+0xcc7a]        # 0x14002b588
   14001e90e:	lea    rcx,[rip+0x16d9b]        # 0x1400356b0
   14001e915:	mov    rdx,rax
   14001e918:	call   QWORD PTR [rip+0xce3a]        # 0x14002b758
   14001e91e:	test   al,al
   14001e920:	je     0x14001e926
   14001e922:	mov    al,0x1
   14001e924:	jmp    0x14001e928
   14001e926:	xor    al,al
   14001e928:	bt     ebx,0x9
   14001e92c:	jae    0x14001e932
   14001e92e:	btr    ebx,0x9
   14001e932:	test   al,al
   14001e934:	je     0x14001e96b
   14001e936:	lea    rdx,[rsp+0x110]
   14001e93e:	xor    r8d,r8d
   14001e941:	mov    rcx,rsi
   14001e944:	call   QWORD PTR [rip+0xce6e]        # 0x14002b7b8
   14001e94a:	lea    rcx,[rsp+0x70]
   14001e94f:	mov    rdx,rax
   14001e952:	call   QWORD PTR [rip+0xcf58]        # 0x14002b8b0
   14001e958:	lea    rcx,[rsp+0x110]
   14001e960:	call   QWORD PTR [rip+0xcf32]        # 0x14002b898
   14001e966:	jmp    0x14001f6de
   14001e96b:	mov    rcx,rsi
   14001e96e:	call   QWORD PTR [rip+0xcbcc]        # 0x14002b540
   14001e974:	cmp    eax,0x4
   14001e977:	jne    0x14001e9a6
   14001e979:	lea    rdx,[rsp+0x5e0]
   14001e981:	mov    rcx,rsi
   14001e984:	bts    ebx,0xa
   14001e988:	call   QWORD PTR [rip+0xcbfa]        # 0x14002b588
   14001e98e:	lea    rcx,[rip+0x16d23]        # 0x1400356b8
   14001e995:	mov    rdx,rax
   14001e998:	call   QWORD PTR [rip+0xcdba]        # 0x14002b758
   14001e99e:	test   al,al
   14001e9a0:	je     0x14001e9a6
   14001e9a2:	mov    al,0x1
   14001e9a4:	jmp    0x14001e9a8
   14001e9a6:	xor    al,al
   14001e9a8:	bt     ebx,0xa
   14001e9ac:	jae    0x14001e9b2
   14001e9ae:	btr    ebx,0xa
   14001e9b2:	test   al,al
   14001e9b4:	je     0x14001f6d6
   14001e9ba:	mov    rax,QWORD PTR [rip+0xcec7]        # 0x14002b888
   14001e9c1:	lea    rdx,[rsp+0x60]
   14001e9c6:	lea    rcx,[rsp+0x78]
   14001e9cb:	mov    QWORD PTR [rsp+0x30],rax
   14001e9d0:	call   QWORD PTR [rip+0xceca]        # 0x14002b8a0
   14001e9d6:	lea    rcx,[rsp+0x1b0]
   14001e9de:	call   0x14000b4f0
   14001e9e3:	lea    rdx,[rsp+0x120]
   14001e9eb:	mov    rcx,rsi
   14001e9ee:	call   QWORD PTR [rip+0xcb8c]        # 0x14002b580
   14001e9f4:	lea    r8,[rip+0x16cdd]        # 0x1400356d8
   14001e9fb:	lea    rdx,[rsp+0x500]
   14001ea03:	mov    rcx,rax
   14001ea06:	call   QWORD PTR [rip+0xcd9c]        # 0x14002b7a8
   14001ea0c:	lea    rdx,[rsp+0x160]
   14001ea14:	mov    rcx,rax
   14001ea17:	call   QWORD PTR [rip+0xcb13]        # 0x14002b530
   14001ea1d:	lea    rcx,[rsp+0x1b0]
   14001ea25:	mov    rdx,rax
   14001ea28:	call   QWORD PTR [rip+0xce82]        # 0x14002b8b0
   14001ea2e:	lea    rcx,[rsp+0x160]
   14001ea36:	call   QWORD PTR [rip+0xce5c]        # 0x14002b898
   14001ea3c:	lea    rcx,[rsp+0x120]
   14001ea44:	call   QWORD PTR [rip+0xcb26]        # 0x14002b570
   14001ea4a:	lea    rdx,[rsp+0x70]
   14001ea4f:	lea    rcx,[rsp+0x1b8]
   14001ea57:	call   QWORD PTR [rip+0xce53]        # 0x14002b8b0
   14001ea5d:	lea    rdx,[rsp+0x1a0]
   14001ea65:	mov    rcx,rsi
   14001ea68:	mov    DWORD PTR [rsp+0x220],0x1
   14001ea73:	call   QWORD PTR [rip+0xcb07]        # 0x14002b580
   14001ea79:	lea    r8,[rip+0x16c28]        # 0x1400356a8
   14001ea80:	lea    rdx,[rsp+0x580]
   14001ea88:	mov    rcx,rax
   14001ea8b:	call   QWORD PTR [rip+0xcd17]        # 0x14002b7a8
   14001ea91:	lea    rcx,[rip+0x16b98]        # 0x140035630
   14001ea98:	mov    rdx,rax
   14001ea9b:	call   QWORD PTR [rip+0xccb7]        # 0x14002b758
   14001eaa1:	lea    rcx,[rsp+0x1a0]
   14001eaa9:	mov    BYTE PTR [rsp+0x224],al
   14001eab0:	call   QWORD PTR [rip+0xcaba]        # 0x14002b570
   14001eab6:	mov    rcx,rsi
   14001eab9:	call   QWORD PTR [rip+0xcad9]        # 0x14002b598
   14001eabf:	test   al,al
   14001eac1:	jne    0x14001f63f
   14001eac7:	mov    rcx,rsi
   14001eaca:	call   QWORD PTR [rip+0xcac0]        # 0x14002b590
   14001ead0:	mov    rcx,rsi
   14001ead3:	call   QWORD PTR [rip+0xca67]        # 0x14002b540
   14001ead9:	cmp    eax,0x5
   14001eadc:	je     0x14001f61d
   14001eae2:	mov    rcx,rsi
   14001eae5:	call   0x14001bb60
   14001eaea:	test   al,al
   14001eaec:	jne    0x14001f60a
   14001eaf2:	mov    rcx,rsi
   14001eaf5:	call   QWORD PTR [rip+0xca45]        # 0x14002b540
   14001eafb:	cmp    eax,0x4
   14001eafe:	jne    0x14001eb2d
   14001eb00:	lea    rdx,[rsp+0x520]
   14001eb08:	mov    rcx,rsi
   14001eb0b:	bts    ebx,0xb
   14001eb0f:	call   QWORD PTR [rip+0xca73]        # 0x14002b588
   14001eb15:	lea    rcx,[rip+0x16b64]        # 0x140035680
   14001eb1c:	mov    rdx,rax
   14001eb1f:	call   QWORD PTR [rip+0xcc33]        # 0x14002b758
   14001eb25:	test   al,al
   14001eb27:	je     0x14001eb2d
   14001eb29:	mov    al,0x1
   14001eb2b:	jmp    0x14001eb2f
   14001eb2d:	xor    al,al
   14001eb2f:	bt     ebx,0xb
   14001eb33:	jae    0x14001eb39
   14001eb35:	btr    ebx,0xb
   14001eb39:	test   al,al
   14001eb3b:	je     0x14001eb71
   14001eb3d:	lea    rdx,[rsp+0x130]
   14001eb45:	mov    rcx,rsi
   14001eb48:	call   0x14001ce20
   14001eb4d:	lea    rcx,[rsp+0x1c0]
   14001eb55:	mov    rdx,rax
   14001eb58:	call   QWORD PTR [rip+0xcd52]        # 0x14002b8b0
   14001eb5e:	lea    rcx,[rsp+0x130]
   14001eb66:	call   QWORD PTR [rip+0xcd2c]        # 0x14002b898
   14001eb6c:	jmp    0x14001f60a
   14001eb71:	mov    rcx,rsi
   14001eb74:	call   QWORD PTR [rip+0xc9c6]        # 0x14002b540
   14001eb7a:	cmp    eax,0x4
   14001eb7d:	jne    0x14001ebac
   14001eb7f:	lea    rdx,[rsp+0x450]
   14001eb87:	mov    rcx,rsi
   14001eb8a:	bts    ebx,0xc
   14001eb8e:	call   QWORD PTR [rip+0xc9f4]        # 0x14002b588
   14001eb94:	lea    rcx,[rip+0x16aed]        # 0x140035688
   14001eb9b:	mov    rdx,rax
   14001eb9e:	call   QWORD PTR [rip+0xcbb4]        # 0x14002b758
   14001eba4:	test   al,al
   14001eba6:	je     0x14001ebac
   14001eba8:	mov    al,0x1
   14001ebaa:	jmp    0x14001ebae
   14001ebac:	xor    al,al
   14001ebae:	bt     ebx,0xc
   14001ebb2:	jae    0x14001ebb8
   14001ebb4:	btr    ebx,0xc
   14001ebb8:	test   al,al
   14001ebba:	je     0x14001ebf0
   14001ebbc:	lea    rdx,[rsp+0x170]
   14001ebc4:	mov    rcx,rsi
   14001ebc7:	call   0x14001ce20
   14001ebcc:	lea    rcx,[rsp+0x1c8]
   14001ebd4:	mov    rdx,rax
   14001ebd7:	call   QWORD PTR [rip+0xccd3]        # 0x14002b8b0
   14001ebdd:	lea    rcx,[rsp+0x170]
   14001ebe5:	call   QWORD PTR [rip+0xccad]        # 0x14002b898
   14001ebeb:	jmp    0x14001f60a
   14001ebf0:	mov    rcx,rsi
   14001ebf3:	call   QWORD PTR [rip+0xc947]        # 0x14002b540
   14001ebf9:	cmp    eax,0x4
   14001ebfc:	jne    0x14001ec2b
   14001ebfe:	lea    rdx,[rsp+0x470]
   14001ec06:	mov    rcx,rsi
   14001ec09:	bts    ebx,0xd
   14001ec0d:	call   QWORD PTR [rip+0xc975]        # 0x14002b588
   14001ec13:	lea    rcx,[rip+0x16a76]        # 0x140035690
   14001ec1a:	mov    rdx,rax
   14001ec1d:	call   QWORD PTR [rip+0xcb35]        # 0x14002b758
   14001ec23:	test   al,al
   14001ec25:	je     0x14001ec2b
   14001ec27:	mov    al,0x1
   14001ec29:	jmp    0x14001ec2d
   14001ec2b:	xor    al,al
   14001ec2d:	bt     ebx,0xd
   14001ec31:	jae    0x14001ec37
   14001ec33:	btr    ebx,0xd
   14001ec37:	test   al,al
   14001ec39:	je     0x14001ec6f
   14001ec3b:	lea    rdx,[rsp+0x140]
   14001ec43:	mov    rcx,rsi
   14001ec46:	call   0x14001ce20
   14001ec4b:	lea    rcx,[rsp+0x1d8]
   14001ec53:	mov    rdx,rax
   14001ec56:	call   QWORD PTR [rip+0xcc54]        # 0x14002b8b0
   14001ec5c:	lea    rcx,[rsp+0x140]
   14001ec64:	call   QWORD PTR [rip+0xcc2e]        # 0x14002b898
   14001ec6a:	jmp    0x14001f60a
   14001ec6f:	mov    rcx,rsi
   14001ec72:	call   QWORD PTR [rip+0xc8c8]        # 0x14002b540
   14001ec78:	cmp    eax,0x4
   14001ec7b:	jne    0x14001ecaa
   14001ec7d:	lea    rdx,[rsp+0x490]
   14001ec85:	mov    rcx,rsi
   14001ec88:	bts    ebx,0xe
   14001ec8c:	call   QWORD PTR [rip+0xc8f6]        # 0x14002b588
   14001ec92:	lea    rcx,[rip+0x16a4f]        # 0x1400356e8
   14001ec99:	mov    rdx,rax
   14001ec9c:	call   QWORD PTR [rip+0xcab6]        # 0x14002b758
   14001eca2:	test   al,al
   14001eca4:	je     0x14001ecaa
   14001eca6:	mov    al,0x1
   14001eca8:	jmp    0x14001ecac
   14001ecaa:	xor    al,al
   14001ecac:	bt     ebx,0xe
   14001ecb0:	jae    0x14001ecb6
   14001ecb2:	btr    ebx,0xe
   14001ecb6:	test   al,al
   14001ecb8:	je     0x14001ecee
   14001ecba:	lea    rdx,[rsp+0xd8]
   14001ecc2:	mov    rcx,rsi
   14001ecc5:	call   0x14001ce20
   14001ecca:	lea    rcx,[rsp+0x1f0]
   14001ecd2:	mov    rdx,rax
   14001ecd5:	call   QWORD PTR [rip+0xcbd5]        # 0x14002b8b0
   14001ecdb:	lea    rcx,[rsp+0xd8]
   14001ece3:	call   QWORD PTR [rip+0xcbaf]        # 0x14002b898
   14001ece9:	jmp    0x14001f60a
   14001ecee:	mov    rcx,rsi
   14001ecf1:	call   QWORD PTR [rip+0xc849]        # 0x14002b540
   14001ecf7:	cmp    eax,0x4
   14001ecfa:	jne    0x14001ed29
   14001ecfc:	lea    rdx,[rsp+0x4b0]
   14001ed04:	mov    rcx,rsi
   14001ed07:	bts    ebx,0xf
   14001ed0b:	call   QWORD PTR [rip+0xc877]        # 0x14002b588
   14001ed11:	lea    rcx,[rip+0x16950]        # 0x140035668
   14001ed18:	mov    rdx,rax
   14001ed1b:	call   QWORD PTR [rip+0xca37]        # 0x14002b758
   14001ed21:	test   al,al
   14001ed23:	je     0x14001ed29
   14001ed25:	mov    al,0x1
   14001ed27:	jmp    0x14001ed2b
   14001ed29:	xor    al,al
   14001ed2b:	bt     ebx,0xf
   14001ed2f:	jae    0x14001ed35
   14001ed31:	btr    ebx,0xf
   14001ed35:	test   al,al
   14001ed37:	je     0x14001ed6d
   14001ed39:	lea    rdx,[rsp+0xe0]
   14001ed41:	mov    rcx,rsi
   14001ed44:	call   0x14001ce20
   14001ed49:	lea    rcx,[rsp+0x1f8]
   14001ed51:	mov    rdx,rax
   14001ed54:	call   QWORD PTR [rip+0xcb56]        # 0x14002b8b0
   14001ed5a:	lea    rcx,[rsp+0xe0]
   14001ed62:	call   QWORD PTR [rip+0xcb30]        # 0x14002b898
   14001ed68:	jmp    0x14001f60a
   14001ed6d:	mov    rcx,rsi
   14001ed70:	call   QWORD PTR [rip+0xc7ca]        # 0x14002b540
   14001ed76:	cmp    eax,0x4
   14001ed79:	jne    0x14001eda8
   14001ed7b:	lea    rdx,[rsp+0x4d0]
   14001ed83:	mov    rcx,rsi
   14001ed86:	bts    ebx,0x10
   14001ed8a:	call   QWORD PTR [rip+0xc7f8]        # 0x14002b588
   14001ed90:	lea    rcx,[rip+0x16929]        # 0x1400356c0
   14001ed97:	mov    rdx,rax
   14001ed9a:	call   QWORD PTR [rip+0xc9b8]        # 0x14002b758
   14001eda0:	test   al,al
   14001eda2:	je     0x14001eda8
   14001eda4:	mov    al,0x1
   14001eda6:	jmp    0x14001edaa
   14001eda8:	xor    al,al
   14001edaa:	bt     ebx,0x10
   14001edae:	jae    0x14001edb4
   14001edb0:	btr    ebx,0x10
   14001edb4:	test   al,al
   14001edb6:	je     0x14001f136
   14001edbc:	lea    rdx,[rsp+0x80]
   14001edc4:	mov    rcx,rsi
   14001edc7:	mov    r15b,0x1
   14001edca:	call   QWORD PTR [rip+0xc7b0]        # 0x14002b580
   14001edd0:	lea    r8,[rip+0x16909]        # 0x1400356e0
   14001edd7:	lea    rdx,[rsp+0x4f0]
   14001eddf:	lea    rcx,[rsp+0x80]
   14001ede7:	call   QWORD PTR [rip+0xc9bb]        # 0x14002b7a8
   14001eded:	lea    rdx,[rsp+0x38]
   14001edf2:	mov    rcx,rax
   14001edf5:	call   QWORD PTR [rip+0xc735]        # 0x14002b530
   14001edfb:	mov    rdx,QWORD PTR [rsp+0x38]
   14001ee00:	cmp    DWORD PTR [rdx+0x4],0x0
   14001ee04:	jne    0x14001ee1c
   14001ee06:	lea    rdx,[rsp+0x78]
   14001ee0b:	lea    rcx,[rsp+0x38]
   14001ee10:	call   QWORD PTR [rip+0xca9a]        # 0x14002b8b0
   14001ee16:	movzx  r14d,r15b
   14001ee1a:	jmp    0x14001ee49
   14001ee1c:	mov    rax,QWORD PTR [rsp+0x30]
   14001ee21:	mov    ecx,DWORD PTR [rax+0x8]
   14001ee24:	cmp    DWORD PTR [rax+0xc],ecx
   14001ee27:	jne    0x14001ee39
   14001ee29:	lea    rdx,[rsp+0x38]
   14001ee2e:	lea    rcx,[rsp+0x60]
   14001ee33:	call   QWORD PTR [rip+0xca77]        # 0x14002b8b0
   14001ee39:	lea    rdx,[rsp+0x38]
   14001ee3e:	lea    rcx,[rsp+0x78]
   14001ee43:	call   QWORD PTR [rip+0xca67]        # 0x14002b8b0
   14001ee49:	lea    r8,[rip+0x16878]        # 0x1400356c8
   14001ee50:	lea    rdx,[rsp+0x510]
   14001ee58:	lea    rcx,[rsp+0x80]
   14001ee60:	call   QWORD PTR [rip+0xc942]        # 0x14002b7a8
   14001ee66:	lea    rdx,[rsp+0x48]
   14001ee6b:	mov    rcx,rax
   14001ee6e:	call   QWORD PTR [rip+0xc6bc]        # 0x14002b530
   14001ee74:	mov    rdx,QWORD PTR [rsp+0x48]
   14001ee79:	cmp    DWORD PTR [rdx+0x4],0x0
   14001ee7d:	jne    0x14001ef8d
   14001ee83:	lea    rdx,[rsp+0x38]
   14001ee88:	lea    rcx,[rsp+0x90]
   14001ee90:	call   QWORD PTR [rip+0xca0a]        # 0x14002b8a0
   14001ee96:	mov    rax,QWORD PTR [rsp+0x30]
   14001ee9b:	mov    DWORD PTR [rsp+0x98],0xffffffff
   14001eea6:	mov    ecx,DWORD PTR [rax]
   14001eea8:	cmp    ecx,0x1
   14001eeab:	je     0x14001ef32
   14001eeb1:	test   ecx,ecx
   14001eeb3:	je     0x14001ef32
   14001eeb5:	lea    rcx,[rsp+0x30]
   14001eeba:	mov    edx,0x7fffffff
   14001eebf:	mov    r8d,0x1
   14001eec5:	call   0x1400058b0
   14001eeca:	mov    ecx,0x10
   14001eecf:	mov    rbp,rax
   14001eed2:	call   0x14002952a
   14001eed7:	mov    rdi,rax
   14001eeda:	test   rax,rax
   14001eedd:	je     0x14001ef16
   14001eedf:	lea    rdx,[rsp+0x90]
   14001eee7:	mov    rcx,rax
   14001eeea:	call   QWORD PTR [rip+0xc9b0]        # 0x14002b8a0
   14001eef0:	mov    edx,DWORD PTR [rsp+0x98]
   14001eef7:	lea    rcx,[rsp+0x90]
   14001eeff:	mov    DWORD PTR [rdi+0x8],edx
   14001ef02:	mov    QWORD PTR [rbp+0x0],rdi
   14001ef06:	call   QWORD PTR [rip+0xc98c]        # 0x14002b898
   14001ef0c:	mov    ebp,0x3
   14001ef11:	jmp    0x14001f0ef
   14001ef16:	xor    edi,edi
   14001ef18:	lea    rcx,[rsp+0x90]
   14001ef20:	mov    QWORD PTR [rbp+0x0],rdi
   14001ef24:	call   QWORD PTR [rip+0xc96e]        # 0x14002b898
   14001ef2a:	lea    ebp,[rdi+0x3]
   14001ef2d:	jmp    0x14001f0ef
   14001ef32:	lea    rcx,[rsp+0x30]
   14001ef37:	call   QWORD PTR [rip+0xc903]        # 0x14002b840
   14001ef3d:	mov    ecx,0x10
   14001ef42:	mov    rbp,rax
   14001ef45:	call   0x14002952a
   14001ef4a:	mov    rdi,rax
   14001ef4d:	test   rax,rax
   14001ef50:	je     0x14001ef6f
   14001ef52:	lea    rdx,[rsp+0x90]
   14001ef5a:	mov    rcx,rax
   14001ef5d:	call   QWORD PTR [rip+0xc93d]        # 0x14002b8a0
   14001ef63:	mov    edx,DWORD PTR [rsp+0x98]
   14001ef6a:	mov    DWORD PTR [rdi+0x8],edx
   14001ef6d:	jmp    0x14001ef71
   14001ef6f:	xor    edi,edi
   14001ef71:	lea    rcx,[rsp+0x90]
   14001ef79:	mov    QWORD PTR [rbp+0x0],rdi
   14001ef7d:	call   QWORD PTR [rip+0xc915]        # 0x14002b898
   14001ef83:	mov    ebp,0x3
   14001ef88:	jmp    0x14001f0ef
   14001ef8d:	lea    rdx,[rsp+0x650]
   14001ef95:	lea    rcx,[rsp+0x48]
   14001ef9a:	mov    r8d,0xa
   14001efa0:	call   QWORD PTR [rip+0xc70a]        # 0x14002b6b0
   14001efa6:	cmp    BYTE PTR [rsp+0x650],0x0
   14001efae:	mov    edi,eax
   14001efb0:	je     0x14001f0ef
   14001efb6:	lea    rcx,[rsp+0x658]
   14001efbe:	mov    dl,0x2b
   14001efc0:	call   QWORD PTR [rip+0xc902]        # 0x14002b8c8
   14001efc6:	lea    rcx,[rsp+0x48]
   14001efcb:	mov    r8d,0x1
   14001efd1:	movzx  edx,WORD PTR [rax]
   14001efd4:	call   QWORD PTR [rip+0xc23e]        # 0x14002b218
   14001efda:	test   al,al
   14001efdc:	jne    0x14001f006
   14001efde:	lea    rcx,[rsp+0x88]
   14001efe6:	mov    dl,0x2d
   14001efe8:	call   QWORD PTR [rip+0xc8da]        # 0x14002b8c8
   14001efee:	lea    rcx,[rsp+0x48]
   14001eff3:	mov    r8d,0x1
   14001eff9:	movzx  edx,WORD PTR [rax]
   14001effc:	call   QWORD PTR [rip+0xc216]        # 0x14002b218
   14001f002:	test   al,al
   14001f004:	je     0x14001f01c
   14001f006:	lea    rdx,[rsp+0x38]
   14001f00b:	lea    rcx,[rsp+0x68]
   14001f010:	call   0x140006180
   14001f015:	mov    r14b,0x1
   14001f018:	add    DWORD PTR [rax],edi
   14001f01a:	mov    edi,DWORD PTR [rax]
   14001f01c:	lea    rdx,[rsp+0x38]
   14001f021:	lea    rcx,[rsp+0xa0]
   14001f029:	call   QWORD PTR [rip+0xc871]        # 0x14002b8a0
   14001f02f:	mov    rax,QWORD PTR [rsp+0x30]
   14001f034:	mov    DWORD PTR [rsp+0xa8],edi
   14001f03b:	mov    ecx,DWORD PTR [rax]
   14001f03d:	cmp    ecx,0x1
   14001f040:	je     0x14001f099
   14001f042:	test   ecx,ecx
   14001f044:	je     0x14001f099
   14001f046:	lea    rcx,[rsp+0x30]
   14001f04b:	mov    edx,0x7fffffff
   14001f050:	mov    r8d,0x1
   14001f056:	call   0x1400058b0
   14001f05b:	mov    ecx,0x10
   14001f060:	mov    rbp,rax
   14001f063:	call   0x14002952a
   14001f068:	mov    rdi,rax
   14001f06b:	test   rax,rax
   14001f06e:	je     0x14001f091
   14001f070:	lea    rdx,[rsp+0xa0]
   14001f078:	mov    rcx,rax
   14001f07b:	call   QWORD PTR [rip+0xc81f]        # 0x14002b8a0
   14001f081:	mov    edx,DWORD PTR [rsp+0xa8]
   14001f088:	mov    DWORD PTR [rdi+0x8],edx
   14001f08b:	mov    QWORD PTR [rbp+0x0],rdi
   14001f08f:	jmp    0x14001f0dc
   14001f091:	xor    edi,edi
   14001f093:	mov    QWORD PTR [rbp+0x0],rdi
   14001f097:	jmp    0x14001f0dc
   14001f099:	lea    rcx,[rsp+0x30]
   14001f09e:	call   QWORD PTR [rip+0xc79c]        # 0x14002b840
   14001f0a4:	mov    ecx,0x10
   14001f0a9:	mov    rbp,rax
   14001f0ac:	call   0x14002952a
   14001f0b1:	mov    rdi,rax
   14001f0b4:	test   rax,rax
   14001f0b7:	je     0x14001f0d6
   14001f0b9:	lea    rdx,[rsp+0xa0]
   14001f0c1:	mov    rcx,rax
   14001f0c4:	call   QWORD PTR [rip+0xc7d6]        # 0x14002b8a0
   14001f0ca:	mov    edx,DWORD PTR [rsp+0xa8]
   14001f0d1:	mov    DWORD PTR [rdi+0x8],edx
   14001f0d4:	jmp    0x14001f0d8
   14001f0d6:	xor    edi,edi
   14001f0d8:	mov    QWORD PTR [rbp+0x0],rdi
   14001f0dc:	lea    rcx,[rsp+0xa0]
   14001f0e4:	call   QWORD PTR [rip+0xc7ae]        # 0x14002b898
   14001f0ea:	mov    ebp,0x3
   14001f0ef:	lea    rdx,[rsp+0xf0]
   14001f0f7:	mov    rcx,rsi
   14001f0fa:	call   0x14001ce20
   14001f0ff:	lea    rcx,[rsp+0xf0]
   14001f107:	call   QWORD PTR [rip+0xc78b]        # 0x14002b898
   14001f10d:	lea    rcx,[rsp+0x48]
   14001f112:	call   QWORD PTR [rip+0xc780]        # 0x14002b898
   14001f118:	lea    rcx,[rsp+0x38]
   14001f11d:	call   QWORD PTR [rip+0xc775]        # 0x14002b898
   14001f123:	lea    rcx,[rsp+0x80]
   14001f12b:	call   QWORD PTR [rip+0xc43f]        # 0x14002b570
   14001f131:	jmp    0x14001f60a
   14001f136:	mov    rcx,rsi
   14001f139:	call   QWORD PTR [rip+0xc401]        # 0x14002b540
   14001f13f:	cmp    eax,0x4
   14001f142:	jne    0x14001f171
   14001f144:	lea    rdx,[rsp+0x530]
   14001f14c:	mov    rcx,rsi
   14001f14f:	bts    ebx,0x11
   14001f153:	call   QWORD PTR [rip+0xc42f]        # 0x14002b588
   14001f159:	lea    rcx,[rip+0x165b0]        # 0x140035710
   14001f160:	mov    rdx,rax
   14001f163:	call   QWORD PTR [rip+0xc5ef]        # 0x14002b758
   14001f169:	test   al,al
   14001f16b:	je     0x14001f171
   14001f16d:	mov    al,0x1
   14001f16f:	jmp    0x14001f173
   14001f171:	xor    al,al
   14001f173:	bt     ebx,0x11
   14001f177:	jae    0x14001f17d
   14001f179:	btr    ebx,0x11
   14001f17d:	test   al,al
   14001f17f:	je     0x14001f1b5
   14001f181:	lea    rdx,[rsp+0x108]
   14001f189:	mov    rcx,rsi
   14001f18c:	call   0x14001ce20
   14001f191:	lea    rcx,[rsp+0x1d0]
   14001f199:	mov    rdx,rax
   14001f19c:	call   QWORD PTR [rip+0xc70e]        # 0x14002b8b0
   14001f1a2:	lea    rcx,[rsp+0x108]
   14001f1aa:	call   QWORD PTR [rip+0xc6e8]        # 0x14002b898
   14001f1b0:	jmp    0x14001f60a
   14001f1b5:	mov    rcx,rsi
   14001f1b8:	call   QWORD PTR [rip+0xc382]        # 0x14002b540
   14001f1be:	cmp    eax,0x4
   14001f1c1:	jne    0x14001f1f0
   14001f1c3:	lea    rdx,[rsp+0x550]
   14001f1cb:	mov    rcx,rsi
   14001f1ce:	bts    ebx,0x12
   14001f1d2:	call   QWORD PTR [rip+0xc3b0]        # 0x14002b588
   14001f1d8:	lea    rcx,[rip+0x16469]        # 0x140035648
   14001f1df:	mov    rdx,rax
   14001f1e2:	call   QWORD PTR [rip+0xc570]        # 0x14002b758
   14001f1e8:	test   al,al
   14001f1ea:	je     0x14001f1f0
   14001f1ec:	mov    al,0x1
   14001f1ee:	jmp    0x14001f1f2
   14001f1f0:	xor    al,al
   14001f1f2:	bt     ebx,0x12
   14001f1f6:	jae    0x14001f1fc
   14001f1f8:	btr    ebx,0x12
   14001f1fc:	test   al,al
   14001f1fe:	je     0x14001f234
   14001f200:	lea    rdx,[rsp+0x118]
   14001f208:	mov    rcx,rsi
   14001f20b:	call   0x14001ce20
   14001f210:	lea    rcx,[rsp+0x1e0]
   14001f218:	mov    rdx,rax
   14001f21b:	call   QWORD PTR [rip+0xc68f]        # 0x14002b8b0
   14001f221:	lea    rcx,[rsp+0x118]
   14001f229:	call   QWORD PTR [rip+0xc669]        # 0x14002b898
   14001f22f:	jmp    0x14001f60a
   14001f234:	mov    rcx,rsi
   14001f237:	call   QWORD PTR [rip+0xc303]        # 0x14002b540
   14001f23d:	cmp    eax,0x4
   14001f240:	jne    0x14001f26f
   14001f242:	lea    rdx,[rsp+0x570]
   14001f24a:	mov    rcx,rsi
   14001f24d:	bts    ebx,0x13
   14001f251:	call   QWORD PTR [rip+0xc331]        # 0x14002b588
   14001f257:	lea    rcx,[rip+0x16412]        # 0x140035670
   14001f25e:	mov    rdx,rax
   14001f261:	call   QWORD PTR [rip+0xc4f1]        # 0x14002b758
   14001f267:	test   al,al
   14001f269:	je     0x14001f26f
   14001f26b:	mov    al,0x1
   14001f26d:	jmp    0x14001f271
   14001f26f:	xor    al,al
   14001f271:	bt     ebx,0x13
   14001f275:	jae    0x14001f27b
   14001f277:	btr    ebx,0x13
   14001f27b:	test   al,al
   14001f27d:	je     0x14001f4f4
   14001f283:	lea    rdx,[rsp+0xb8]
   14001f28b:	mov    rcx,rsi
   14001f28e:	call   QWORD PTR [rip+0xc2ec]        # 0x14002b580
   14001f294:	lea    r8,[rip+0x163bd]        # 0x140035658
   14001f29b:	lea    rdx,[rsp+0x20]
   14001f2a0:	lea    rcx,[rsp+0xb8]
   14001f2a8:	call   QWORD PTR [rip+0xc4fa]        # 0x14002b7a8
   14001f2ae:	lea    rdx,[rsp+0x20]
   14001f2b3:	lea    rcx,[rip+0x16396]        # 0x140035650
   14001f2ba:	call   QWORD PTR [rip+0xc498]        # 0x14002b758
   14001f2c0:	test   al,al
   14001f2c2:	je     0x14001f2d1
   14001f2c4:	mov    DWORD PTR [rsp+0x220],0x0
   14001f2cf:	jmp    0x14001f319
   14001f2d1:	lea    rdx,[rsp+0x20]
   14001f2d6:	lea    rcx,[rip+0x1635b]        # 0x140035638
   14001f2dd:	call   QWORD PTR [rip+0xc475]        # 0x14002b758
   14001f2e3:	test   al,al
   14001f2e5:	je     0x14001f2f4
   14001f2e7:	mov    DWORD PTR [rsp+0x220],0x2
   14001f2f2:	jmp    0x14001f319
   14001f2f4:	lea    rdx,[rsp+0x20]
   14001f2f9:	lea    rcx,[rip+0x16398]        # 0x140035698
   14001f300:	call   QWORD PTR [rip+0xc452]        # 0x14002b758
   14001f306:	mov    ecx,DWORD PTR [rsp+0x220]
   14001f30d:	test   al,al
   14001f30f:	cmovne ecx,ebp
   14001f312:	mov    DWORD PTR [rsp+0x220],ecx
   14001f319:	cmp    BYTE PTR [rsp+0x224],0x0
   14001f321:	je     0x14001f483
   14001f327:	mov    rax,QWORD PTR [rip+0xc55a]        # 0x14002b888
   14001f32e:	mov    rcx,rsi
   14001f331:	mov    QWORD PTR [rsp+0x50],rax
   14001f336:	call   QWORD PTR [rip+0xc25c]        # 0x14002b598
   14001f33c:	test   al,al
   14001f33e:	jne    0x14001f3fc
   14001f344:	mov    rcx,rsi
   14001f347:	call   QWORD PTR [rip+0xc243]        # 0x14002b590
   14001f34d:	mov    rcx,rsi
   14001f350:	call   QWORD PTR [rip+0xc1ea]        # 0x14002b540
   14001f356:	cmp    eax,0x5
   14001f359:	je     0x14001f3fc
   14001f35f:	mov    rcx,rsi
   14001f362:	call   0x14001bb60
   14001f367:	test   al,al
   14001f369:	jne    0x14001f3e1
   14001f36b:	mov    rcx,rsi
   14001f36e:	call   QWORD PTR [rip+0xc1cc]        # 0x14002b540
   14001f374:	cmp    eax,0x4
   14001f377:	jne    0x14001f3a6
   14001f379:	lea    rdx,[rsp+0x590]
   14001f381:	mov    rcx,rsi
   14001f384:	bts    ebx,0x14
   14001f388:	call   QWORD PTR [rip+0xc1fa]        # 0x14002b588
   14001f38e:	lea    rcx,[rip+0x1630b]        # 0x1400356a0
   14001f395:	mov    rdx,rax
   14001f398:	call   QWORD PTR [rip+0xc3ba]        # 0x14002b758
   14001f39e:	test   al,al
   14001f3a0:	je     0x14001f3a6
   14001f3a2:	mov    al,0x1
   14001f3a4:	jmp    0x14001f3a8
   14001f3a6:	xor    al,al
   14001f3a8:	bt     ebx,0x14
   14001f3ac:	jae    0x14001f3b2
   14001f3ae:	btr    ebx,0x14
   14001f3b2:	test   al,al
   14001f3b4:	je     0x14001f3f4
   14001f3b6:	lea    rdx,[rsp+0x128]
   14001f3be:	mov    rcx,rsi
   14001f3c1:	call   0x14001d060
   14001f3c6:	lea    rcx,[rsp+0x50]
   14001f3cb:	mov    rdx,rax
   14001f3ce:	call   0x140001e20
   14001f3d3:	lea    rcx,[rsp+0x128]
   14001f3db:	call   QWORD PTR [rip+0xc4b7]        # 0x14002b898
   14001f3e1:	mov    rcx,rsi
   14001f3e4:	call   QWORD PTR [rip+0xc1ae]        # 0x14002b598
   14001f3ea:	test   al,al
   14001f3ec:	je     0x14001f344
   14001f3f2:	jmp    0x14001f3fc
   14001f3f4:	mov    rcx,rsi
   14001f3f7:	call   0x14001c920
   14001f3fc:	lea    rdx,[rsp+0x50]
   14001f401:	lea    rcx,[rsp+0x200]
   14001f409:	call   0x140001830
   14001f40e:	mov    rbp,QWORD PTR [rsp+0x50]
   14001f413:	mov    eax,DWORD PTR [rbp+0x0]
   14001f416:	test   eax,eax
   14001f418:	je     0x14001f438
   14001f41a:	cmp    eax,0xffffffff
   14001f41d:	je     0x14001f4c4
   14001f423:	lock add DWORD PTR [rbp+0x0],0xffffffff
   14001f428:	setne  al
   14001f42b:	test   al,al
   14001f42d:	jne    0x14001f4dc
   14001f433:	mov    rbp,QWORD PTR [rsp+0x50]
   14001f438:	movsxd rax,DWORD PTR [rbp+0xc]
   14001f43c:	lea    rdi,[rbp+rax*8+0x10]
   14001f441:	movsxd rax,DWORD PTR [rbp+0x8]
   14001f445:	lea    r12,[rbp+rax*8+0x10]
   14001f44a:	cmp    r12,rdi
   14001f44d:	je     0x14001f462
   14001f44f:	nop
   14001f450:	sub    rdi,0x8
   14001f454:	mov    rcx,rdi
   14001f457:	call   QWORD PTR [rip+0xc43b]        # 0x14002b898
   14001f45d:	cmp    rdi,r12
   14001f460:	jne    0x14001f450
   14001f462:	mov    rcx,rbp
   14001f465:	call   QWORD PTR [rip+0xc405]        # 0x14002b870
   14001f46b:	lea    rcx,[rsp+0xb8]
   14001f473:	mov    ebp,0x3
   14001f478:	call   QWORD PTR [rip+0xc0f2]        # 0x14002b570
   14001f47e:	jmp    0x14001f60a
   14001f483:	lea    rdx,[rsp+0x138]
   14001f48b:	mov    rcx,rsi
   14001f48e:	call   0x14001d060
   14001f493:	lea    rcx,[rsp+0x1b0]
   14001f49b:	mov    rdx,rax
   14001f49e:	call   0x140005cb0
   14001f4a3:	lea    rcx,[rsp+0x138]
   14001f4ab:	call   QWORD PTR [rip+0xc3e7]        # 0x14002b898
   14001f4b1:	lea    rcx,[rsp+0xb8]
   14001f4b9:	call   QWORD PTR [rip+0xc0b1]        # 0x14002b570
   14001f4bf:	jmp    0x14001f60a
   14001f4c4:	lea    rcx,[rsp+0xb8]
   14001f4cc:	mov    ebp,0x3
   14001f4d1:	call   QWORD PTR [rip+0xc099]        # 0x14002b570
   14001f4d7:	jmp    0x14001f60a
   14001f4dc:	lea    rcx,[rsp+0xb8]
   14001f4e4:	mov    ebp,0x3
   14001f4e9:	call   QWORD PTR [rip+0xc081]        # 0x14002b570
   14001f4ef:	jmp    0x14001f60a
   14001f4f4:	mov    rcx,rsi
   14001f4f7:	call   QWORD PTR [rip+0xc043]        # 0x14002b540
   14001f4fd:	cmp    eax,0x4
   14001f500:	jne    0x14001f546
   14001f502:	lea    rdx,[rsp+0x5b0]
   14001f50a:	mov    rcx,rsi
   14001f50d:	or     ebx,0xc
   14001f510:	call   QWORD PTR [rip+0xc072]        # 0x14002b588
   14001f516:	lea    rdx,[rsp+0x148]
   14001f51e:	mov    rcx,rax
   14001f521:	call   QWORD PTR [rip+0xc009]        # 0x14002b530
   14001f527:	lea    rdx,[rip+0x160fa]        # 0x140035628
   14001f52e:	mov    r8d,0x1
   14001f534:	mov    rcx,rax
   14001f537:	call   QWORD PTR [rip+0xc273]        # 0x14002b7b0
   14001f53d:	test   al,al
   14001f53f:	je     0x14001f546
   14001f541:	mov    dil,0x1
   14001f544:	jmp    0x14001f549
   14001f546:	xor    dil,dil
   14001f549:	test   bl,0x8
   14001f54c:	je     0x14001f55f
   14001f54e:	lea    rcx,[rsp+0x148]
   14001f556:	and    ebx,0xfffffff7
   14001f559:	call   QWORD PTR [rip+0xc339]        # 0x14002b898
   14001f55f:	test   bl,0x4
   14001f562:	je     0x14001f567
   14001f564:	and    ebx,0xfffffffb
   14001f567:	test   dil,dil
   14001f56a:	je     0x14001f602
   14001f570:	lea    rdx,[rsp+0x5d0]
   14001f578:	mov    rcx,rsi
   14001f57b:	call   QWORD PTR [rip+0xc007]        # 0x14002b588
   14001f581:	lea    rdx,[rsp+0xc8]
   14001f589:	mov    rcx,rax
   14001f58c:	call   QWORD PTR [rip+0xbf9e]        # 0x14002b530
   14001f592:	lea    rdx,[rsp+0x168]
   14001f59a:	mov    rcx,rsi
   14001f59d:	call   0x14001ce20
   14001f5a2:	or     r9d,0xffffffff
   14001f5a6:	lea    rdx,[rsp+0x158]
   14001f5ae:	lea    r8d,[r9+0x7]
   14001f5b2:	lea    rcx,[rsp+0xc8]
   14001f5ba:	mov    rdi,rax
   14001f5bd:	call   QWORD PTR [rip+0xbd95]        # 0x14002b358
   14001f5c3:	lea    rcx,[rsp+0x1b0]
   14001f5cb:	mov    r8,rdi
   14001f5ce:	mov    rdx,rax
   14001f5d1:	call   0x14000b850
   14001f5d6:	lea    rcx,[rsp+0x158]
   14001f5de:	call   QWORD PTR [rip+0xc2b4]        # 0x14002b898
   14001f5e4:	lea    rcx,[rsp+0x168]
   14001f5ec:	call   QWORD PTR [rip+0xc2a6]        # 0x14002b898
   14001f5f2:	lea    rcx,[rsp+0xc8]
   14001f5fa:	call   QWORD PTR [rip+0xc298]        # 0x14002b898
   14001f600:	jmp    0x14001f60a
   14001f602:	mov    rcx,rsi
   14001f605:	call   0x14001c920
   14001f60a:	mov    rcx,rsi
   14001f60d:	call   QWORD PTR [rip+0xbf85]        # 0x14002b598
   14001f613:	test   al,al
   14001f615:	je     0x14001eac7
   14001f61b:	jmp    0x14001f63f
   14001f61d:	lea    rdx,[rsp+0x30]
   14001f622:	lea    rcx,[rsp+0x1b0]
   14001f62a:	call   0x14000b880
   14001f62f:	lea    rdx,[rsp+0x1b0]
   14001f637:	mov    rcx,r13
   14001f63a:	call   0x1400089f0
   14001f63f:	lea    rcx,[rsp+0x1b0]
   14001f647:	call   0x140001ea0
   14001f64c:	lea    rcx,[rsp+0x78]
   14001f651:	call   QWORD PTR [rip+0xc241]        # 0x14002b898
   14001f657:	mov    r12,QWORD PTR [rsp+0x30]
   14001f65c:	mov    eax,DWORD PTR [r12]
   14001f660:	test   eax,eax
   14001f662:	je     0x14001f67b
   14001f664:	cmp    eax,0xffffffff
   14001f667:	je     0x14001f6de
   14001f669:	lock add DWORD PTR [r12],0xffffffff
   14001f66f:	setne  al
   14001f672:	test   al,al
   14001f674:	jne    0x14001f6de
   14001f676:	mov    r12,QWORD PTR [rsp+0x30]
   14001f67b:	movsxd rax,DWORD PTR [r12+0xc]
   14001f680:	lea    rdi,[r12+rax*8+0x10]
   14001f685:	movsxd rax,DWORD PTR [r12+0x8]
   14001f68a:	lea    r13,[r12+rax*8+0x10]
   14001f68f:	cmp    r13,rdi
   14001f692:	je     0x14001f6c3
   14001f694:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14001f6a0:	mov    rbp,QWORD PTR [rdi-0x8]
   14001f6a4:	sub    rdi,0x8
   14001f6a8:	test   rbp,rbp
   14001f6ab:	je     0x14001f6be
   14001f6ad:	mov    rcx,rbp
   14001f6b0:	call   QWORD PTR [rip+0xc1e2]        # 0x14002b898
   14001f6b6:	mov    rcx,rbp
   14001f6b9:	call   0x140029524
   14001f6be:	cmp    rdi,r13
   14001f6c1:	jne    0x14001f6a0
   14001f6c3:	mov    rcx,r12
   14001f6c6:	call   QWORD PTR [rip+0xc1a4]        # 0x14002b870
   14001f6cc:	mov    r13,QWORD PTR [rsp+0x648]
   14001f6d4:	jmp    0x14001f6de
   14001f6d6:	mov    rcx,rsi
   14001f6d9:	call   0x14001c920
   14001f6de:	mov    rcx,rsi
   14001f6e1:	call   QWORD PTR [rip+0xbeb1]        # 0x14002b598
   14001f6e7:	mov    ebp,0x3
   14001f6ec:	test   al,al
   14001f6ee:	je     0x14001e8c0
   14001f6f4:	lea    rcx,[rsp+0x70]
   14001f6f9:	call   QWORD PTR [rip+0xc199]        # 0x14002b898
   14001f6ff:	jmp    0x14001f709
   14001f701:	mov    rcx,rsi
   14001f704:	call   0x14001c920
   14001f709:	test   r14b,r14b
   14001f70c:	je     0x14001f718
   14001f70e:	mov    eax,0x2
   14001f713:	lea    ebp,[rax+0x1]
   14001f716:	jmp    0x14001f728
   14001f718:	mov    eax,0x1
   14001f71d:	test   r15b,r15b
   14001f720:	mov    ebp,0x3
   14001f725:	cmovne eax,ebp
   14001f728:	mov    rcx,rsi
   14001f72b:	mov    DWORD PTR [r13+0x8],eax
   14001f72f:	call   QWORD PTR [rip+0xbe63]        # 0x14002b598
   14001f735:	test   al,al
   14001f737:	je     0x14001e3c3
   14001f73d:	lea    rcx,[rsp+0x58]
   14001f742:	call   QWORD PTR [rip+0xbe28]        # 0x14002b570
   14001f748:	lea    rcx,[rsp+0x60]
   14001f74d:	call   QWORD PTR [rip+0xc145]        # 0x14002b898
   14001f753:	mov    rcx,QWORD PTR [rsp+0x68]
   14001f758:	mov    eax,DWORD PTR [rcx+0x10]
   14001f75b:	test   eax,eax
   14001f75d:	je     0x14001f775
   14001f75f:	cmp    eax,0xffffffff
   14001f762:	je     0x14001f78c
   14001f764:	lock add DWORD PTR [rcx+0x10],0xffffffff
   14001f769:	setne  al
   14001f76c:	test   al,al
   14001f76e:	jne    0x14001f78c
   14001f770:	mov    rcx,QWORD PTR [rsp+0x68]
   14001f775:	lea    rdx,[rip+0xfffffffffffe1dd4]        # 0x140001550
   14001f77c:	call   QWORD PTR [rip+0xc0e6]        # 0x14002b868
   14001f782:	jmp    0x14001f78c
   14001f784:	mov    rcx,rsi
   14001f787:	call   0x14001c920
   14001f78c:	mov    rcx,rsi
   14001f78f:	call   QWORD PTR [rip+0xbe03]        # 0x14002b598
   14001f795:	test   al,al
   14001f797:	je     0x14001e270
   14001f79d:	mov    r15,QWORD PTR [rsp+0x600]
   14001f7a5:	mov    r14,QWORD PTR [rsp+0x608]
   14001f7ad:	mov    r12,QWORD PTR [rsp+0x618]
   14001f7b5:	mov    rbp,QWORD PTR [rsp+0x628]
   14001f7bd:	mov    rcx,rsi
   14001f7c0:	call   QWORD PTR [rip+0xbfda]        # 0x14002b7a0
   14001f7c6:	mov    r13,QWORD PTR [rsp+0x610]
   14001f7ce:	mov    rdi,QWORD PTR [rsp+0x620]
   14001f7d6:	mov    rbx,QWORD PTR [rsp+0x640]
   14001f7de:	test   eax,eax
   14001f7e0:	je     0x14001f81c
   14001f7e2:	lea    rdx,[rsp+0x178]
   14001f7ea:	mov    rcx,rsi
   14001f7ed:	call   QWORD PTR [rip+0xbf8d]        # 0x14002b780
   14001f7f3:	mov    rcx,QWORD PTR [rsi+0x8]
   14001f7f7:	add    rcx,0x60
   14001f7fb:	mov    rdx,rax
   14001f7fe:	call   0x140001e20
   14001f803:	lea    rcx,[rsp+0x178]
   14001f80b:	call   QWORD PTR [rip+0xc087]        # 0x14002b898
   14001f811:	xor    al,al
   14001f813:	add    rsp,0x630
   14001f81a:	pop    rsi
   14001f81b:	ret    
   14001f81c:	mov    al,0x1
   14001f81e:	add    rsp,0x630
   14001f825:	pop    rsi
   14001f826:	ret    
   14001f827:	int3   
   14001f828:	int3   
   14001f829:	int3   
   14001f82a:	int3   
   14001f82b:	int3   
   14001f82c:	int3   
   14001f82d:	int3   
   14001f82e:	int3   
   14001f82f:	int3   
   14001f830:	mov    QWORD PTR [rsp+0x8],rbx
   14001f835:	push   rdi
   14001f836:	sub    rsp,0x30
   14001f83a:	mov    rbx,rcx
   14001f83d:	lea    rcx,[rsp+0x20]
   14001f842:	mov    rdi,r8
   14001f845:	call   QWORD PTR [rip+0xbcd5]        # 0x14002b520
   14001f84b:	lea    rcx,[rsp+0x20]
   14001f850:	mov    rdx,rbx
   14001f853:	mov    QWORD PTR [rsp+0x28],rdi
   14001f858:	call   0x14001d500
   14001f85d:	lea    rcx,[rsp+0x20]
   14001f862:	movzx  ebx,al
   14001f865:	call   QWORD PTR [rip+0xbcdd]        # 0x14002b548
   14001f86b:	mov    al,bl
   14001f86d:	mov    rbx,QWORD PTR [rsp+0x40]
   14001f872:	add    rsp,0x30
   14001f876:	pop    rdi
   14001f877:	ret    
   14001f878:	int3   
   14001f879:	int3   
   14001f87a:	int3   
   14001f87b:	int3   
   14001f87c:	int3   
   14001f87d:	int3   
   14001f87e:	int3   
   14001f87f:	int3   
   14001f880:	mov    QWORD PTR [rsp+0x18],rbx
   14001f885:	mov    QWORD PTR [rsp+0x10],rdx
   14001f88a:	push   rbp
   14001f88b:	push   rsi
   14001f88c:	push   rdi
   14001f88d:	push   r12
   14001f88f:	push   r13
   14001f891:	push   r14
   14001f893:	push   r15
   14001f895:	sub    rsp,0x20
   14001f899:	mov    rbx,QWORD PTR [rcx]
   14001f89c:	mov    r15,rcx
   14001f89f:	mov    rsi,rdx
   14001f8a2:	mov    r11,QWORD PTR [rbx]
   14001f8a5:	mov    r10,QWORD PTR [r11]
   14001f8a8:	mov    rax,QWORD PTR [r10]
   14001f8ab:	mov    r9,QWORD PTR [rax]
   14001f8ae:	mov    rax,QWORD PTR [r9]
   14001f8b1:	mov    r8,QWORD PTR [rax]
   14001f8b4:	mov    rax,QWORD PTR [r9+0x8]
   14001f8b8:	mov    edi,DWORD PTR [r8+0x4]
   14001f8bc:	mov    r8,QWORD PTR [rax]
   14001f8bf:	mov    rax,QWORD PTR [r10+0x8]
   14001f8c3:	mov    rdx,QWORD PTR [rax]
   14001f8c6:	mov    r9d,DWORD PTR [r8+0x4]
   14001f8ca:	mov    rax,QWORD PTR [r11+0x8]
   14001f8ce:	mov    r8d,DWORD PTR [rdx+0x4]
   14001f8d2:	mov    rcx,QWORD PTR [rax]
   14001f8d5:	mov    rax,QWORD PTR [rbx+0x8]
   14001f8d9:	mov    edx,DWORD PTR [rcx+0x4]
   14001f8dc:	mov    rcx,QWORD PTR [rax]
   14001f8df:	mov    ecx,DWORD PTR [rcx+0x4]
   14001f8e2:	add    ecx,edx
   14001f8e4:	add    ecx,r8d
   14001f8e7:	xor    r8d,r8d
   14001f8ea:	add    ecx,r9d
   14001f8ed:	lea    edx,[rcx+rdi*1+0x2]
   14001f8f1:	mov    rcx,rsi
   14001f8f4:	call   QWORD PTR [rip+0xbf7e]        # 0x14002b878
   14001f8fa:	mov    rcx,rsi
   14001f8fd:	call   QWORD PTR [rip+0xbfbd]        # 0x14002b8c0
   14001f903:	mov    r13,QWORD PTR [r15]
   14001f906:	mov    r12,QWORD PTR [r13+0x0]
   14001f90a:	mov    r14,rax
   14001f90d:	mov    rbp,QWORD PTR [r12]
   14001f911:	mov    rsi,QWORD PTR [rbp+0x0]
   14001f915:	mov    rdi,QWORD PTR [rsi]
   14001f918:	mov    rcx,QWORD PTR [rdi]
   14001f91b:	mov    rdx,QWORD PTR [rcx]
   14001f91e:	movsxd rbx,DWORD PTR [rdx+0x4]
   14001f922:	add    rbx,rbx
   14001f925:	call   QWORD PTR [rip+0xbf95]        # 0x14002b8c0
   14001f92b:	mov    r8,rbx
   14001f92e:	mov    rdx,rax
   14001f931:	mov    rcx,r14
   14001f934:	call   0x14002951e
   14001f939:	mov    rcx,QWORD PTR [rdi+0x8]
   14001f93d:	add    r14,rbx
   14001f940:	mov    rax,QWORD PTR [rcx]
   14001f943:	movsxd rbx,DWORD PTR [rax+0x4]
   14001f947:	add    rbx,rbx
   14001f94a:	call   QWORD PTR [rip+0xbf70]        # 0x14002b8c0
   14001f950:	mov    r8,rbx
   14001f953:	mov    rdx,rax
   14001f956:	mov    rcx,r14
   14001f959:	call   0x14002951e
   14001f95e:	mov    rax,QWORD PTR [rsi+0x8]
   14001f962:	lea    rcx,[rsp+0x60]
   14001f967:	movzx  edx,BYTE PTR [rax]
   14001f96a:	add    r14,rbx
   14001f96d:	call   QWORD PTR [rip+0xbf55]        # 0x14002b8c8
   14001f973:	movzx  r11d,WORD PTR [rsp+0x60]
   14001f979:	add    r14,0x2
   14001f97d:	mov    WORD PTR [r14-0x2],r11w
   14001f982:	mov    rcx,QWORD PTR [rbp+0x8]
   14001f986:	mov    rax,QWORD PTR [rcx]
   14001f989:	movsxd rbx,DWORD PTR [rax+0x4]
   14001f98d:	add    rbx,rbx
   14001f990:	call   QWORD PTR [rip+0xbf2a]        # 0x14002b8c0
   14001f996:	mov    r8,rbx
   14001f999:	mov    rdx,rax
   14001f99c:	mov    rcx,r14
   14001f99f:	call   0x14002951e
   14001f9a4:	mov    rcx,QWORD PTR [r12+0x8]
   14001f9a9:	add    r14,rbx
   14001f9ac:	mov    rax,QWORD PTR [rcx]
   14001f9af:	movsxd rbx,DWORD PTR [rax+0x4]
   14001f9b3:	add    rbx,rbx
   14001f9b6:	call   QWORD PTR [rip+0xbf04]        # 0x14002b8c0
   14001f9bc:	mov    r8,rbx
   14001f9bf:	mov    rdx,rax
   14001f9c2:	mov    rcx,r14
   14001f9c5:	call   0x14002951e
   14001f9ca:	mov    rcx,QWORD PTR [r13+0x8]
   14001f9ce:	add    r14,rbx
   14001f9d1:	mov    rax,QWORD PTR [rcx]
   14001f9d4:	movsxd rbx,DWORD PTR [rax+0x4]
   14001f9d8:	add    rbx,rbx
   14001f9db:	call   QWORD PTR [rip+0xbedf]        # 0x14002b8c0
   14001f9e1:	mov    r8,rbx
   14001f9e4:	mov    rdx,rax
   14001f9e7:	mov    rcx,r14
   14001f9ea:	call   0x14002951e
   14001f9ef:	mov    rax,QWORD PTR [r15+0x8]
   14001f9f3:	lea    rcx,[rsp+0x60]
   14001f9f8:	movzx  edx,BYTE PTR [rax]
   14001f9fb:	call   QWORD PTR [rip+0xbec7]        # 0x14002b8c8
   14001fa01:	movzx  r11d,WORD PTR [rsp+0x60]
   14001fa07:	mov    rax,QWORD PTR [rsp+0x68]
   14001fa0c:	mov    WORD PTR [r14+rbx*1],r11w
   14001fa11:	mov    rbx,QWORD PTR [rsp+0x70]
   14001fa16:	add    rsp,0x20
   14001fa1a:	pop    r15
   14001fa1c:	pop    r14
   14001fa1e:	pop    r13
   14001fa20:	pop    r12
   14001fa22:	pop    rdi
   14001fa23:	pop    rsi
   14001fa24:	pop    rbp
   14001fa25:	ret    
   14001fa26:	int3   
   14001fa27:	int3   
   14001fa28:	int3   
   14001fa29:	int3   
   14001fa2a:	int3   
   14001fa2b:	int3   
   14001fa2c:	int3   
   14001fa2d:	int3   
   14001fa2e:	int3   
   14001fa2f:	int3   
   14001fa30:	mov    QWORD PTR [rsp+0x18],rbx
   14001fa35:	mov    QWORD PTR [rsp+0x8],rcx
   14001fa3a:	push   rbp
   14001fa3b:	push   rsi
   14001fa3c:	push   rdi
   14001fa3d:	sub    rsp,0x30
   14001fa41:	mov    rax,QWORD PTR [rdx]
   14001fa44:	mov    esi,r8d
   14001fa47:	mov    rbp,rdx
   14001fa4a:	sub    rax,QWORD PTR [rcx]
   14001fa4d:	mov    rbx,rcx
   14001fa50:	sar    rax,0x3
   14001fa54:	cmp    eax,0x20
   14001fa57:	jle    0x14001fb1b
   14001fa5d:	nop    DWORD PTR [rax]
   14001fa60:	test   esi,esi
   14001fa62:	jle    0x14001fb50
   14001fa68:	mov    rax,QWORD PTR [rbp+0x0]
   14001fa6c:	lea    r8,[rsp+0x58]
   14001fa71:	lea    rdx,[rsp+0x68]
   14001fa76:	mov    QWORD PTR [rsp+0x58],rax
   14001fa7b:	mov    rax,QWORD PTR [rbx]
   14001fa7e:	lea    rcx,[rsp+0x20]
   14001fa83:	mov    QWORD PTR [rsp+0x68],rax
   14001fa88:	call   0x14001c680
   14001fa8d:	mov    r8,QWORD PTR [rbp+0x0]
   14001fa91:	mov    rdi,QWORD PTR [rsp+0x20]
   14001fa96:	mov    eax,esi
   14001fa98:	cdq    
   14001fa99:	mov    rcx,rdi
   14001fa9c:	sub    eax,edx
   14001fa9e:	sar    eax,1
   14001faa0:	mov    esi,eax
   14001faa2:	cdq    
   14001faa3:	sub    eax,edx
   14001faa5:	mov    rdx,r8
   14001faa8:	sar    eax,1
   14001faaa:	add    esi,eax
   14001faac:	mov    rax,QWORD PTR [rbx]
   14001faaf:	mov    rbx,QWORD PTR [rsp+0x28]
   14001fab4:	sub    rdx,rbx
   14001fab7:	sub    rcx,rax
   14001faba:	sar    rdx,0x3
   14001fabe:	sar    rcx,0x3
   14001fac2:	cmp    ecx,edx
   14001fac4:	lea    rdx,[rsp+0x58]
   14001fac9:	lea    rcx,[rsp+0x68]
   14001face:	jge    0x14001faec
   14001fad0:	mov    r8d,esi
   14001fad3:	mov    QWORD PTR [rsp+0x58],rdi
   14001fad8:	mov    QWORD PTR [rsp+0x68],rax
   14001fadd:	call   0x14001fa30
   14001fae2:	mov    r11,QWORD PTR [rsp+0x50]
   14001fae7:	mov    QWORD PTR [r11],rbx
   14001faea:	jmp    0x14001fb02
   14001faec:	mov    QWORD PTR [rsp+0x58],r8
   14001faf1:	mov    r8d,esi
   14001faf4:	mov    QWORD PTR [rsp+0x68],rbx
   14001faf9:	call   0x14001fa30
   14001fafe:	mov    QWORD PTR [rbp+0x0],rdi
   14001fb02:	mov    rbx,QWORD PTR [rsp+0x50]
   14001fb07:	mov    rax,QWORD PTR [rbp+0x0]
   14001fb0b:	sub    rax,QWORD PTR [rbx]
   14001fb0e:	sar    rax,0x3
   14001fb12:	cmp    eax,0x20
   14001fb15:	jg     0x14001fa60
   14001fb1b:	cmp    eax,0x1
   14001fb1e:	jle    0x14001fb43
   14001fb20:	mov    rcx,QWORD PTR [rbx]
   14001fb23:	mov    rax,QWORD PTR [rbp+0x0]
   14001fb27:	lea    rdx,[rsp+0x50]
   14001fb2c:	mov    QWORD PTR [rsp+0x58],rcx
   14001fb31:	lea    rcx,[rsp+0x58]
   14001fb36:	xor    r8d,r8d
   14001fb39:	mov    QWORD PTR [rsp+0x50],rax
   14001fb3e:	call   0x14001d310
   14001fb43:	mov    rbx,QWORD PTR [rsp+0x60]
   14001fb48:	add    rsp,0x30
   14001fb4c:	pop    rdi
   14001fb4d:	pop    rsi
   14001fb4e:	pop    rbp
   14001fb4f:	ret    
   14001fb50:	cmp    eax,0x20
   14001fb53:	jle    0x14001fb1b
   14001fb55:	mov    rax,QWORD PTR [rbp+0x0]
   14001fb59:	mov    rcx,QWORD PTR [rbx]
   14001fb5c:	mov    rdx,rax
   14001fb5f:	sub    rdx,rcx
   14001fb62:	sar    rdx,0x3
   14001fb66:	cmp    edx,0x1
   14001fb69:	jle    0x14001fb8a
   14001fb6b:	mov    QWORD PTR [rsp+0x58],rcx
   14001fb70:	lea    rdx,[rsp+0x50]
   14001fb75:	lea    rcx,[rsp+0x58]
   14001fb7a:	xor    r9d,r9d
   14001fb7d:	xor    r8d,r8d
   14001fb80:	mov    QWORD PTR [rsp+0x50],rax
   14001fb85:	call   0x14001c890
   14001fb8a:	mov    rcx,QWORD PTR [rbx]
   14001fb8d:	mov    rax,QWORD PTR [rbp+0x0]
   14001fb91:	lea    rdx,[rsp+0x50]
   14001fb96:	mov    QWORD PTR [rsp+0x58],rcx
   14001fb9b:	lea    rcx,[rsp+0x58]
   14001fba0:	mov    QWORD PTR [rsp+0x50],rax
   14001fba5:	call   0x14001d430
   14001fbaa:	mov    rbx,QWORD PTR [rsp+0x60]
   14001fbaf:	add    rsp,0x30
   14001fbb3:	pop    rdi
   14001fbb4:	pop    rsi
   14001fbb5:	pop    rbp
   14001fbb6:	ret    
   14001fbb7:	int3   
   14001fbb8:	int3   
   14001fbb9:	int3   
   14001fbba:	int3   
   14001fbbb:	int3   
   14001fbbc:	int3   
   14001fbbd:	int3   
   14001fbbe:	int3   
   14001fbbf:	int3   
   14001fbc0:	test   rdx,rdx
   14001fbc3:	je     0x14001fc07
   14001fbc5:	mov    QWORD PTR [rsp+0x8],rbx
   14001fbca:	push   rdi
   14001fbcb:	sub    rsp,0x20
   14001fbcf:	mov    eax,DWORD PTR [rcx+0x8]
   14001fbd2:	mov    rbx,rdx
   14001fbd5:	mov    QWORD PTR [rdx],0x0
   14001fbdc:	mov    DWORD PTR [rdx+0x8],eax
   14001fbdf:	lea    rdx,[rcx+0x10]
   14001fbe3:	mov    rdi,rcx
   14001fbe6:	lea    rcx,[rbx+0x10]
   14001fbea:	call   QWORD PTR [rip+0xbcb0]        # 0x14002b8a0
   14001fbf0:	lea    rdx,[rdi+0x18]
   14001fbf4:	lea    rcx,[rbx+0x18]
   14001fbf8:	call   0x140008700
   14001fbfd:	mov    rbx,QWORD PTR [rsp+0x30]
   14001fc02:	add    rsp,0x20
   14001fc06:	pop    rdi
   14001fc07:	repz ret 
   14001fc09:	int3   
   14001fc0a:	int3   
   14001fc0b:	int3   
   14001fc0c:	int3   
   14001fc0d:	int3   
   14001fc0e:	int3   
   14001fc0f:	int3   
   14001fc10:	mov    QWORD PTR [rsp+0x8],rbx
   14001fc15:	mov    QWORD PTR [rsp+0x10],rbp
   14001fc1a:	mov    QWORD PTR [rsp+0x20],rsi
   14001fc1f:	push   rdi
   14001fc20:	push   r12
   14001fc22:	push   r13
   14001fc24:	sub    rsp,0xe0
   14001fc2b:	mov    rax,QWORD PTR [rip+0xbc56]        # 0x14002b888
   14001fc32:	mov    rbp,rcx
   14001fc35:	mov    rcx,QWORD PTR [r8]
   14001fc38:	mov    r13,r9
   14001fc3b:	mov    r12,r8
   14001fc3e:	mov    rsi,rdx
   14001fc41:	mov    QWORD PTR [rsp+0x28],rax
   14001fc46:	call   QWORD PTR [rip+0xb74c]        # 0x14002b398
   14001fc4c:	mov    rbx,rax
   14001fc4f:	cmp    rax,QWORD PTR [r12]
   14001fc53:	je     0x14001fe04
   14001fc59:	nop    DWORD PTR [rax+0x0]
   14001fc60:	lea    rdi,[rbx+0x10]
   14001fc64:	mov    rcx,r13
   14001fc67:	mov    rdx,rdi
   14001fc6a:	call   QWORD PTR [rip+0xbb58]        # 0x14002b7c8
   14001fc70:	test   al,al
   14001fc72:	jne    0x14001fdee
   14001fc78:	lea    rdx,[rip+0xe249]        # 0x14002dec8
   14001fc7f:	lea    rcx,[rsp+0x68]
   14001fc84:	mov    r8d,0x7
   14001fc8a:	mov    BYTE PTR [rsp+0x20],0x3e
   14001fc8f:	mov    BYTE PTR [rsp+0x110],0x3e
   14001fc97:	call   QWORD PTR [rip+0xbb23]        # 0x14002b7c0
   14001fc9d:	mov    QWORD PTR [rsp+0x98],rax
   14001fca5:	lea    rax,[rsp+0x98]
   14001fcad:	lea    rdx,[rbx+0x18]
   14001fcb1:	mov    QWORD PTR [rsp+0xc8],rax
   14001fcb9:	lea    rax,[rsp+0x110]
   14001fcc1:	lea    rcx,[rsp+0x70]
   14001fcc6:	mov    QWORD PTR [rsp+0xd0],rax
   14001fcce:	mov    QWORD PTR [rsp+0xa0],rdi
   14001fcd6:	call   0x14001bdb0
   14001fcdb:	lea    rcx,[rsp+0xc8]
   14001fce3:	lea    rdx,[rip+0xe1ce]        # 0x14002deb8
   14001fcea:	mov    r8d,0x8
   14001fcf0:	mov    QWORD PTR [rsp+0x78],rcx
   14001fcf5:	lea    rcx,[rsp+0x58]
   14001fcfa:	mov    QWORD PTR [rsp+0x80],rax
   14001fd02:	call   QWORD PTR [rip+0xbab8]        # 0x14002b7c0
   14001fd08:	lea    rcx,[rsp+0x78]
   14001fd0d:	lea    rdx,[rsp+0x30]
   14001fd12:	mov    QWORD PTR [rsp+0xc0],rax
   14001fd1a:	lea    rax,[rsp+0xb8]
   14001fd22:	mov    QWORD PTR [rsp+0xb8],rcx
   14001fd2a:	mov    QWORD PTR [rsp+0x88],rax
   14001fd32:	lea    rax,[rsp+0x88]
   14001fd3a:	lea    rcx,[rsp+0xa8]
   14001fd42:	mov    QWORD PTR [rsp+0xa8],rax
   14001fd4a:	lea    rax,[rsp+0x20]
   14001fd4f:	mov    QWORD PTR [rsp+0x90],rdi
   14001fd57:	mov    QWORD PTR [rsp+0xb0],rax
   14001fd5f:	call   0x14001f880
   14001fd64:	mov    r11,QWORD PTR [rsp+0x28]
   14001fd69:	mov    eax,DWORD PTR [r11]
   14001fd6c:	cmp    eax,0x1
   14001fd6f:	je     0x14001fd9f
   14001fd71:	test   eax,eax
   14001fd73:	je     0x14001fd9f
   14001fd75:	lea    rcx,[rsp+0x28]
   14001fd7a:	mov    edx,0x7fffffff
   14001fd7f:	mov    r8d,0x1
   14001fd85:	call   0x140001a10
   14001fd8a:	test   rax,rax
   14001fd8d:	je     0x14001fdc2
   14001fd8f:	lea    rdx,[rsp+0x30]
   14001fd94:	mov    rcx,rax
   14001fd97:	call   QWORD PTR [rip+0xbb03]        # 0x14002b8a0
   14001fd9d:	jmp    0x14001fdc2
   14001fd9f:	lea    rdx,[rsp+0x30]
   14001fda4:	lea    rcx,[rsp+0x60]
   14001fda9:	call   QWORD PTR [rip+0xbaf1]        # 0x14002b8a0
   14001fdaf:	lea    rcx,[rsp+0x28]
   14001fdb4:	call   QWORD PTR [rip+0xba86]        # 0x14002b840
   14001fdba:	mov    rcx,QWORD PTR [rsp+0x60]
   14001fdbf:	mov    QWORD PTR [rax],rcx
   14001fdc2:	lea    rcx,[rsp+0x30]
   14001fdc7:	call   QWORD PTR [rip+0xbacb]        # 0x14002b898
   14001fdcd:	lea    rcx,[rsp+0x68]
   14001fdd2:	call   QWORD PTR [rip+0xbac0]        # 0x14002b898
   14001fdd8:	lea    rcx,[rsp+0x70]
   14001fddd:	call   QWORD PTR [rip+0xbab5]        # 0x14002b898
   14001fde3:	lea    rcx,[rsp+0x58]
   14001fde8:	call   QWORD PTR [rip+0xbaaa]        # 0x14002b898
   14001fdee:	mov    rcx,rbx
   14001fdf1:	call   QWORD PTR [rip+0xb4c9]        # 0x14002b2c0
   14001fdf7:	mov    rbx,rax
   14001fdfa:	cmp    rax,QWORD PTR [r12]
   14001fdfe:	jne    0x14001fc60
   14001fe04:	lea    rcx,[rsp+0x28]
   14001fe09:	mov    edx,0x1
   14001fe0e:	call   QWORD PTR [rip+0xb43c]        # 0x14002b250
   14001fe14:	mov    r11,QWORD PTR [rsp+0x28]
   14001fe19:	mov    QWORD PTR [rsp+0x38],r11
   14001fe1e:	mov    eax,DWORD PTR [r11]
   14001fe21:	test   eax,eax
   14001fe23:	je     0x14001fe31
   14001fe25:	cmp    eax,0xffffffff
   14001fe28:	je     0x14001fe93
   14001fe2a:	lock add DWORD PTR [r11],0x1
   14001fe2f:	jmp    0x14001fe8e
   14001fe31:	mov    edx,DWORD PTR [r11+0x4]
   14001fe35:	lea    rcx,[rsp+0x38]
   14001fe3a:	call   QWORD PTR [rip+0xba18]        # 0x14002b858
   14001fe40:	mov    r11,QWORD PTR [rsp+0x38]
   14001fe45:	movsxd rax,DWORD PTR [r11+0xc]
   14001fe49:	lea    r12,[r11+rax*8+0x10]
   14001fe4e:	mov    rax,QWORD PTR [rsp+0x28]
   14001fe53:	movsxd rcx,DWORD PTR [rax+0x8]
   14001fe57:	lea    rdi,[rax+rcx*8+0x10]
   14001fe5c:	movsxd rax,DWORD PTR [r11+0x8]
   14001fe60:	lea    rbx,[r11+rax*8+0x10]
   14001fe65:	cmp    rbx,r12
   14001fe68:	je     0x14001fe93
   14001fe6a:	nop    WORD PTR [rax+rax*1+0x0]
   14001fe70:	test   rbx,rbx
   14001fe73:	je     0x14001fe81
   14001fe75:	mov    rdx,rdi
   14001fe78:	mov    rcx,rbx
   14001fe7b:	call   QWORD PTR [rip+0xba1f]        # 0x14002b8a0
   14001fe81:	add    rbx,0x8
   14001fe85:	add    rdi,0x8
   14001fe89:	cmp    rbx,r12
   14001fe8c:	jne    0x14001fe70
   14001fe8e:	mov    r11,QWORD PTR [rsp+0x38]
   14001fe93:	mov    DWORD PTR [rsp+0x40],0x0
   14001fe9b:	movsxd rax,DWORD PTR [r11+0x8]
   14001fe9f:	lea    rbx,[r11+rax*8+0x10]
   14001fea4:	mov    QWORD PTR [rsp+0x48],rbx
   14001fea9:	movsxd rax,DWORD PTR [r11+0xc]
   14001fead:	lea    rcx,[r11+rax*8+0x10]
   14001feb2:	mov    QWORD PTR [rsp+0x50],rcx
   14001feb7:	nop    WORD PTR [rax+rax*1+0x0]
   14001fec0:	mov    eax,0x1
   14001fec5:	mov    DWORD PTR [rsp+0x40],eax
   14001fec9:	cmp    rbx,rcx
   14001fecc:	je     0x14001ff16
   14001fece:	xchg   ax,ax
   14001fed0:	test   eax,eax
   14001fed2:	je     0x14001ff01
   14001fed4:	mov    rdx,rsi
   14001fed7:	mov    rcx,rbp
   14001feda:	call   QWORD PTR [rip+0xb6d0]        # 0x14002b5b0
   14001fee0:	mov    rdx,rbx
   14001fee3:	mov    rcx,rax
   14001fee6:	call   QWORD PTR [rip+0xb6bc]        # 0x14002b5a8
   14001feec:	mov    rcx,rax
   14001feef:	call   QWORD PTR [rip+0xb843]        # 0x14002b738
   14001fef5:	mov    eax,DWORD PTR [rsp+0x40]
   14001fef9:	dec    eax
   14001fefb:	mov    DWORD PTR [rsp+0x40],eax
   14001feff:	jmp    0x14001fed0
   14001ff01:	mov    rbx,QWORD PTR [rsp+0x48]
   14001ff06:	mov    rcx,QWORD PTR [rsp+0x50]
   14001ff0b:	add    rbx,0x8
   14001ff0f:	mov    QWORD PTR [rsp+0x48],rbx
   14001ff14:	jmp    0x14001fec0
   14001ff16:	mov    rdi,QWORD PTR [rsp+0x38]
   14001ff1b:	mov    eax,DWORD PTR [rdi]
   14001ff1d:	test   eax,eax
   14001ff1f:	je     0x14001ff36
   14001ff21:	cmp    eax,0xffffffff
   14001ff24:	je     0x14001ff6b
   14001ff26:	lock add DWORD PTR [rdi],0xffffffff
   14001ff2a:	setne  al
   14001ff2d:	test   al,al
   14001ff2f:	jne    0x14001ff6b
   14001ff31:	mov    rdi,QWORD PTR [rsp+0x38]
   14001ff36:	movsxd rax,DWORD PTR [rdi+0xc]
   14001ff3a:	lea    rbx,[rdi+rax*8+0x10]
   14001ff3f:	movsxd rax,DWORD PTR [rdi+0x8]
   14001ff43:	lea    rbp,[rdi+rax*8+0x10]
   14001ff48:	cmp    rbp,rbx
   14001ff4b:	je     0x14001ff62
   14001ff4d:	nop    DWORD PTR [rax]
   14001ff50:	sub    rbx,0x8
   14001ff54:	mov    rcx,rbx
   14001ff57:	call   QWORD PTR [rip+0xb93b]        # 0x14002b898
   14001ff5d:	cmp    rbx,rbp
   14001ff60:	jne    0x14001ff50
   14001ff62:	mov    rcx,rdi
   14001ff65:	call   QWORD PTR [rip+0xb905]        # 0x14002b870
   14001ff6b:	mov    rdi,QWORD PTR [rsp+0x28]
   14001ff70:	mov    eax,DWORD PTR [rdi]
   14001ff72:	test   eax,eax
   14001ff74:	je     0x14001ff8b
   14001ff76:	cmp    eax,0xffffffff
   14001ff79:	je     0x14001ffbd
   14001ff7b:	lock add DWORD PTR [rdi],0xffffffff
   14001ff7f:	setne  al
   14001ff82:	test   al,al
   14001ff84:	jne    0x14001ffbd
   14001ff86:	mov    rdi,QWORD PTR [rsp+0x28]
   14001ff8b:	movsxd rax,DWORD PTR [rdi+0xc]
   14001ff8f:	lea    rbx,[rdi+rax*8+0x10]
   14001ff94:	movsxd rax,DWORD PTR [rdi+0x8]
   14001ff98:	lea    rsi,[rdi+rax*8+0x10]
   14001ff9d:	cmp    rsi,rbx
   14001ffa0:	je     0x14001ffb4
   14001ffa2:	sub    rbx,0x8
   14001ffa6:	mov    rcx,rbx
   14001ffa9:	call   QWORD PTR [rip+0xb8e9]        # 0x14002b898
   14001ffaf:	cmp    rbx,rsi
   14001ffb2:	jne    0x14001ffa2
   14001ffb4:	mov    rcx,rdi
   14001ffb7:	call   QWORD PTR [rip+0xb8b3]        # 0x14002b870
   14001ffbd:	mov    rcx,r13
   14001ffc0:	call   QWORD PTR [rip+0xb3da]        # 0x14002b3a0
   14001ffc6:	lea    r11,[rsp+0xe0]
   14001ffce:	mov    rbx,QWORD PTR [r11+0x20]
   14001ffd2:	mov    rbp,QWORD PTR [r11+0x28]
   14001ffd6:	mov    rsi,QWORD PTR [r11+0x38]
   14001ffda:	mov    rsp,r11
   14001ffdd:	pop    r13
   14001ffdf:	pop    r12
   14001ffe1:	pop    rdi
   14001ffe2:	ret    
   14001ffe3:	int3   
   14001ffe4:	int3   
   14001ffe5:	int3   
   14001ffe6:	int3   
   14001ffe7:	int3   
   14001ffe8:	int3   
   14001ffe9:	int3   
   14001ffea:	int3   
   14001ffeb:	int3   
   14001ffec:	int3   
   14001ffed:	int3   
   14001ffee:	int3   
   14001ffef:	int3   
   14001fff0:	rex push rbx
   14001fff2:	sub    rsp,0x20
   14001fff6:	mov    rdx,QWORD PTR [rcx+0x18]
   14001fffa:	mov    rbx,rcx
   14001fffd:	add    rcx,0x18
   140020001:	mov    eax,DWORD PTR [rdx]
   140020003:	test   eax,eax
   140020005:	je     0x140020017
   140020007:	cmp    eax,0xffffffff
   14002000a:	je     0x14002001f
   14002000c:	lock add DWORD PTR [rdx],0xffffffff
   140020010:	setne  al
   140020013:	test   al,al
   140020015:	jne    0x14002001f
   140020017:	mov    rdx,QWORD PTR [rcx]
   14002001a:	call   0x140002700
   14002001f:	lea    rcx,[rbx+0x10]
   140020023:	add    rsp,0x20
   140020027:	pop    rbx
   140020028:	rex.W jmp QWORD PTR [rip+0xb869]        # 0x14002b898
   14002002f:	int3   
   140020030:	mov    QWORD PTR [rsp+0x8],rbx
   140020035:	push   rdi
   140020036:	sub    rsp,0x30
   14002003a:	mov    rbx,rcx
   14002003d:	mov    rcx,QWORD PTR [rcx]
   140020040:	lea    r8,[rip+0xffffffffffffffa9]        # 0x14001fff0
   140020047:	lea    rdx,[rip+0xfffffffffffffb72]        # 0x14001fbc0
   14002004e:	mov    r9d,0x20
   140020054:	mov    DWORD PTR [rsp+0x20],0x8
   14002005c:	call   QWORD PTR [rip+0xb7e6]        # 0x14002b848
   140020062:	mov    rdi,rax
   140020065:	mov    rax,QWORD PTR [rbx]
   140020068:	mov    ecx,DWORD PTR [rax+0x10]
   14002006b:	test   ecx,ecx
   14002006d:	je     0x140020080
   14002006f:	cmp    ecx,0xffffffff
   140020072:	je     0x140020090
   140020074:	lock add DWORD PTR [rax+0x10],0xffffffff
   140020079:	setne  al
   14002007c:	test   al,al
   14002007e:	jne    0x140020090
   140020080:	mov    rcx,QWORD PTR [rbx]
   140020083:	lea    rdx,[rip+0xffffffffffffff66]        # 0x14001fff0
   14002008a:	call   QWORD PTR [rip+0xb7d8]        # 0x14002b868
   140020090:	mov    QWORD PTR [rbx],rdi
   140020093:	mov    rbx,QWORD PTR [rsp+0x40]
   140020098:	add    rsp,0x30
   14002009c:	pop    rdi
   14002009d:	ret    
   14002009e:	int3   
   14002009f:	int3   
   1400200a0:	mov    QWORD PTR [rsp+0x20],rbp
   1400200a5:	push   rsi
   1400200a6:	push   r12
   1400200a8:	push   r13
   1400200aa:	sub    rsp,0x20
   1400200ae:	mov    rax,QWORD PTR [rcx]
   1400200b1:	mov    rsi,rcx
   1400200b4:	mov    rbp,rdx
   1400200b7:	mov    ecx,DWORD PTR [rax+0x10]
   1400200ba:	cmp    ecx,0x1
   1400200bd:	je     0x1400200cb
   1400200bf:	test   ecx,ecx
   1400200c1:	je     0x1400200cb
   1400200c3:	mov    rcx,rsi
   1400200c6:	call   0x140020030
   1400200cb:	mov    rax,QWORD PTR [rsi]
   1400200ce:	mov    rcx,rbp
   1400200d1:	mov    edx,DWORD PTR [rax+0x24]
   1400200d4:	call   QWORD PTR [rip+0xb1ce]        # 0x14002b2a8
   1400200da:	mov    rdx,rbp
   1400200dd:	mov    rcx,rsi
   1400200e0:	mov    r8d,eax
   1400200e3:	mov    r13d,eax
   1400200e6:	mov    DWORD PTR [rsp+0x40],eax
   1400200ea:	call   0x14001c3c0
   1400200ef:	mov    rcx,QWORD PTR [rsi]
   1400200f2:	mov    r12,rax
   1400200f5:	mov    rax,QWORD PTR [rax]
   1400200f8:	cmp    rax,rcx
   1400200fb:	jne    0x140020257
   140020101:	mov    edx,DWORD PTR [rcx+0x20]
   140020104:	mov    QWORD PTR [rsp+0x48],rbx
   140020109:	mov    QWORD PTR [rsp+0x50],rdi
   14002010e:	cmp    DWORD PTR [rcx+0x14],edx
   140020111:	jl     0x140020147
   140020113:	movsx  edx,WORD PTR [rcx+0x1e]
   140020117:	inc    edx
   140020119:	call   QWORD PTR [rip+0xb1c1]        # 0x14002b2e0
   14002011f:	mov    r11,QWORD PTR [rsi]
   140020122:	mov    rcx,rbp
   140020125:	mov    edx,DWORD PTR [r11+0x24]
   140020129:	call   QWORD PTR [rip+0xb179]        # 0x14002b2a8
   14002012f:	mov    rdx,rbp
   140020132:	mov    rcx,rsi
   140020135:	mov    r8d,eax
   140020138:	mov    r13d,eax
   14002013b:	mov    DWORD PTR [rsp+0x40],eax
   14002013f:	call   0x14001c3c0
   140020144:	mov    r12,rax
   140020147:	mov    rcx,QWORD PTR [rsi]
   14002014a:	mov    rbx,QWORD PTR [rip+0xb737]        # 0x14002b888
   140020151:	mov    edx,0x8
   140020156:	call   QWORD PTR [rip+0xb16c]        # 0x14002b2c8
   14002015c:	mov    rdi,rax
   14002015f:	test   rax,rax
   140020162:	je     0x1400201c8
   140020164:	mov    rcx,QWORD PTR [r12]
   140020168:	mov    rdx,rbp
   14002016b:	mov    DWORD PTR [rax+0x8],r13d
   14002016f:	mov    QWORD PTR [rax],rcx
   140020172:	lea    rcx,[rax+0x10]
   140020176:	call   QWORD PTR [rip+0xb724]        # 0x14002b8a0
   14002017c:	mov    QWORD PTR [rdi+0x18],rbx
   140020180:	mov    eax,DWORD PTR [rbx]
   140020182:	test   eax,eax
   140020184:	je     0x140020191
   140020186:	cmp    eax,0xffffffff
   140020189:	je     0x1400201ca
   14002018b:	lock add DWORD PTR [rbx],0x1
   14002018f:	jmp    0x1400201ca
   140020191:	mov    edx,DWORD PTR [rbx+0x4]
   140020194:	lea    rcx,[rdi+0x18]
   140020198:	call   QWORD PTR [rip+0xb6ba]        # 0x14002b858
   14002019e:	mov    r11,QWORD PTR [rdi+0x18]
   1400201a2:	movsxd rax,DWORD PTR [rbx+0x8]
   1400201a6:	lea    r9,[rbx+rax*8+0x10]
   1400201ab:	movsxd rax,DWORD PTR [r11+0xc]
   1400201af:	lea    rcx,[rdi+0x18]
   1400201b3:	lea    r8,[r11+rax*8+0x10]
   1400201b8:	movsxd rax,DWORD PTR [r11+0x8]
   1400201bc:	lea    rdx,[r11+rax*8+0x10]
   1400201c1:	call   0x1400026a0
   1400201c6:	jmp    0x1400201ca
   1400201c8:	xor    edi,edi
   1400201ca:	mov    QWORD PTR [r12],rdi
   1400201ce:	mov    rax,QWORD PTR [rsi]
   1400201d1:	lea    r12,[rdi+0x18]
   1400201d5:	inc    DWORD PTR [rax+0x14]
   1400201d8:	mov    eax,DWORD PTR [rbx]
   1400201da:	test   eax,eax
   1400201dc:	je     0x1400201ee
   1400201de:	cmp    eax,0xffffffff
   1400201e1:	je     0x14002023b
   1400201e3:	lock add DWORD PTR [rbx],0xffffffff
   1400201e7:	setne  al
   1400201ea:	test   al,al
   1400201ec:	jne    0x14002023b
   1400201ee:	movsxd rax,DWORD PTR [rbx+0xc]
   1400201f2:	lea    rdi,[rbx+rax*8+0x10]
   1400201f7:	movsxd rax,DWORD PTR [rbx+0x8]
   1400201fb:	lea    rbp,[rbx+rax*8+0x10]
   140020200:	cmp    rbp,rdi
   140020203:	je     0x140020232
   140020205:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140020210:	mov    rsi,QWORD PTR [rdi-0x8]
   140020214:	sub    rdi,0x8
   140020218:	test   rsi,rsi
   14002021b:	je     0x14002022d
   14002021d:	mov    rcx,rsi
   140020220:	call   0x140001ea0
   140020225:	mov    rcx,rsi
   140020228:	call   0x140029524
   14002022d:	cmp    rdi,rbp
   140020230:	jne    0x140020210
   140020232:	mov    rcx,rbx
   140020235:	call   QWORD PTR [rip+0xb635]        # 0x14002b870
   14002023b:	mov    rdi,QWORD PTR [rsp+0x50]
   140020240:	mov    rbx,QWORD PTR [rsp+0x48]
   140020245:	mov    rax,r12
   140020248:	mov    rbp,QWORD PTR [rsp+0x58]
   14002024d:	add    rsp,0x20
   140020251:	pop    r13
   140020253:	pop    r12
   140020255:	pop    rsi
   140020256:	ret    
   140020257:	add    rax,0x18
   14002025b:	mov    rbp,QWORD PTR [rsp+0x58]
   140020260:	add    rsp,0x20
   140020264:	pop    r13
   140020266:	pop    r12
   140020268:	pop    rsi
   140020269:	ret    
   14002026a:	int3   
   14002026b:	int3   
   14002026c:	int3   
   14002026d:	int3   
   14002026e:	int3   
   14002026f:	int3   
   140020270:	mov    QWORD PTR [rsp+0x10],rbx
   140020275:	mov    QWORD PTR [rsp+0x18],r8
   14002027a:	mov    QWORD PTR [rsp+0x8],rcx
   14002027f:	push   rbp
   140020280:	push   rsi
   140020281:	push   rdi
   140020282:	push   r12
   140020284:	push   r13
   140020286:	push   r14
   140020288:	push   r15
   14002028a:	sub    rsp,0x340
   140020291:	mov    r15,rcx
   140020294:	xor    r12d,r12d
   140020297:	lea    rcx,[rsp+0x20]
   14002029c:	mov    rbp,r8
   14002029f:	mov    r14d,r12d
   1400202a2:	mov    DWORD PTR [rsp+0x398],r12d
   1400202aa:	call   QWORD PTR [rip+0xb310]        # 0x14002b5c0
   1400202b0:	lea    rcx,[rip+0xd105]        # 0x14002d3bc
   1400202b7:	call   QWORD PTR [rip+0xb1ab]        # 0x14002b468
   1400202bd:	lea    rcx,[rsp+0x20]
   1400202c2:	mov    rdx,rax
   1400202c5:	call   QWORD PTR [rip+0xb2ed]        # 0x14002b5b8
   1400202cb:	lea    rdx,[rip+0xdf06]        # 0x14002e1d8
   1400202d2:	lea    rcx,[rsp+0x20]
   1400202d7:	call   QWORD PTR [rip+0xb2d3]        # 0x14002b5b0
   1400202dd:	lea    rdx,[rip+0xdedc]        # 0x14002e1c0
   1400202e4:	lea    rcx,[rsp+0x20]
   1400202e9:	call   QWORD PTR [rip+0xb2c1]        # 0x14002b5b0
   1400202ef:	lea    rdx,[r15+0x10]
   1400202f3:	lea    rcx,[rsp+0x40]
   1400202f8:	call   QWORD PTR [rip+0xb5a2]        # 0x14002b8a0
   1400202fe:	mov    rax,QWORD PTR [rsp+0x40]
   140020303:	or     r13,0xffffffffffffffff
   140020307:	lea    rbx,[rip+0xd36e]        # 0x14002d67c
   14002030e:	cmp    DWORD PTR [rax+0x4],r12d
   140020312:	je     0x14002038b
   140020314:	xor    eax,eax
   140020316:	mov    rcx,r13
   140020319:	mov    rdi,rbx
   14002031c:	repnz scas al,BYTE PTR es:[rdi]
   14002031e:	mov    QWORD PTR [rsp+0x168],rbx
   140020326:	lea    rdx,[rsp+0x320]
   14002032e:	not    rcx
   140020331:	dec    rcx
   140020334:	mov    DWORD PTR [rsp+0x160],ecx
   14002033b:	lea    rcx,[rsp+0x40]
   140020340:	movaps xmm0,XMMWORD PTR [rsp+0x160]
   140020348:	movdqa XMMWORD PTR [rsp+0x320],xmm0
   140020351:	call   QWORD PTR [rip+0xaec9]        # 0x14002b220
   140020357:	test   al,al
   140020359:	jne    0x14002038b
   14002035b:	lea    rdx,[rip+0xd30e]        # 0x14002d670
   140020362:	lea    rcx,[rsp+0x20]
   140020367:	call   QWORD PTR [rip+0xb243]        # 0x14002b5b0
   14002036d:	lea    rdx,[rsp+0x40]
   140020372:	mov    rcx,rax
   140020375:	call   QWORD PTR [rip+0xb22d]        # 0x14002b5a8
   14002037b:	lea    rdx,[rip+0xd2ea]        # 0x14002d66c
   140020382:	mov    rcx,rax
   140020385:	call   QWORD PTR [rip+0xb225]        # 0x14002b5b0
   14002038b:	lea    rdx,[r15+0x18]
   14002038f:	lea    rcx,[rsp+0x188]
   140020397:	call   QWORD PTR [rip+0xb503]        # 0x14002b8a0
   14002039d:	lea    rdx,[rsp+0x188]
   1400203a5:	lea    rcx,[rsp+0x40]
   1400203aa:	call   QWORD PTR [rip+0xb500]        # 0x14002b8b0
   1400203b0:	lea    rcx,[rsp+0x188]
   1400203b8:	call   QWORD PTR [rip+0xb4da]        # 0x14002b898
   1400203be:	mov    rdx,QWORD PTR [rsp+0x40]
   1400203c3:	cmp    DWORD PTR [rdx+0x4],r12d
   1400203c7:	je     0x140020440
   1400203c9:	xor    eax,eax
   1400203cb:	mov    rcx,r13
   1400203ce:	mov    rdi,rbx
   1400203d1:	repnz scas al,BYTE PTR es:[rdi]
   1400203d3:	mov    QWORD PTR [rsp+0x168],rbx
   1400203db:	lea    rdx,[rsp+0x300]
   1400203e3:	not    rcx
   1400203e6:	dec    rcx
   1400203e9:	mov    DWORD PTR [rsp+0x160],ecx
   1400203f0:	lea    rcx,[rsp+0x40]
   1400203f5:	movaps xmm0,XMMWORD PTR [rsp+0x160]
   1400203fd:	movdqa XMMWORD PTR [rsp+0x300],xmm0
   140020406:	call   QWORD PTR [rip+0xae14]        # 0x14002b220
   14002040c:	test   al,al
   14002040e:	jne    0x140020440
   140020410:	lea    rdx,[rip+0xd241]        # 0x14002d658
   140020417:	lea    rcx,[rsp+0x20]
   14002041c:	call   QWORD PTR [rip+0xb18e]        # 0x14002b5b0
   140020422:	lea    rdx,[rsp+0x40]
   140020427:	mov    rcx,rax
   14002042a:	call   QWORD PTR [rip+0xb178]        # 0x14002b5a8
   140020430:	lea    rdx,[rip+0xd235]        # 0x14002d66c
   140020437:	mov    rcx,rax
   14002043a:	call   QWORD PTR [rip+0xb170]        # 0x14002b5b0
   140020440:	lea    rdx,[rip+0xd20d]        # 0x14002d654
   140020447:	lea    rcx,[rsp+0x20]
   14002044c:	call   QWORD PTR [rip+0xb15e]        # 0x14002b5b0
   140020452:	mov    rax,QWORD PTR [r15+0x20]
   140020456:	mov    QWORD PTR [rsp+0x48],rax
   14002045b:	mov    ecx,DWORD PTR [rax]
   14002045d:	test   ecx,ecx
   14002045f:	je     0x14002046c
   140020461:	cmp    ecx,0xffffffff
   140020464:	je     0x1400204c6
   140020466:	lock add DWORD PTR [rax],0x1
   14002046a:	jmp    0x1400204c1
   14002046c:	mov    edx,DWORD PTR [rax+0x4]
   14002046f:	lea    rcx,[rsp+0x48]
   140020474:	call   QWORD PTR [rip+0xb3de]        # 0x14002b858
   14002047a:	mov    rax,QWORD PTR [rsp+0x48]
   14002047f:	mov    rdx,QWORD PTR [r15+0x20]
   140020483:	movsxd rcx,DWORD PTR [rax+0xc]
   140020487:	lea    rsi,[rax+rcx*8+0x10]
   14002048c:	movsxd rcx,DWORD PTR [rdx+0x8]
   140020490:	lea    rbx,[rdx+rcx*8+0x10]
   140020495:	movsxd rcx,DWORD PTR [rax+0x8]
   140020499:	lea    rdi,[rax+rcx*8+0x10]
   14002049e:	cmp    rdi,rsi
   1400204a1:	je     0x1400204c6
   1400204a3:	test   rdi,rdi
   1400204a6:	je     0x1400204b4
   1400204a8:	mov    rdx,rbx
   1400204ab:	mov    rcx,rdi
   1400204ae:	call   QWORD PTR [rip+0xb3ec]        # 0x14002b8a0
   1400204b4:	add    rdi,0x8
   1400204b8:	add    rbx,0x8
   1400204bc:	cmp    rdi,rsi
   1400204bf:	jne    0x1400204a3
   1400204c1:	mov    rax,QWORD PTR [rsp+0x48]
   1400204c6:	mov    ecx,DWORD PTR [rax+0x8]
   1400204c9:	cmp    DWORD PTR [rax+0xc],ecx
   1400204cc:	je     0x14002068d
   1400204d2:	lea    rdx,[rip+0xdcd7]        # 0x14002e1b0
   1400204d9:	lea    rcx,[rsp+0x20]
   1400204de:	call   QWORD PTR [rip+0xb0cc]        # 0x14002b5b0
   1400204e4:	mov    r11,QWORD PTR [rsp+0x48]
   1400204e9:	mov    QWORD PTR [rsp+0xf8],r11
   1400204f1:	mov    eax,DWORD PTR [r11]
   1400204f4:	test   eax,eax
   1400204f6:	je     0x140020504
   1400204f8:	cmp    eax,0xffffffff
   1400204fb:	je     0x140020569
   1400204fd:	lock add DWORD PTR [r11],0x1
   140020502:	jmp    0x140020561
   140020504:	mov    edx,DWORD PTR [r11+0x4]
   140020508:	lea    rcx,[rsp+0xf8]
   140020510:	call   QWORD PTR [rip+0xb342]        # 0x14002b858
   140020516:	mov    r11,QWORD PTR [rsp+0xf8]
   14002051e:	movsxd rax,DWORD PTR [r11+0xc]
   140020522:	lea    rsi,[r11+rax*8+0x10]
   140020527:	mov    rax,QWORD PTR [rsp+0x48]
   14002052c:	movsxd rcx,DWORD PTR [rax+0x8]
   140020530:	lea    rbx,[rax+rcx*8+0x10]
   140020535:	movsxd rax,DWORD PTR [r11+0x8]
   140020539:	lea    rdi,[r11+rax*8+0x10]
   14002053e:	cmp    rdi,rsi
   140020541:	je     0x140020569
   140020543:	test   rdi,rdi
   140020546:	je     0x140020554
   140020548:	mov    rdx,rbx
   14002054b:	mov    rcx,rdi
   14002054e:	call   QWORD PTR [rip+0xb34c]        # 0x14002b8a0
   140020554:	add    rdi,0x8
   140020558:	add    rbx,0x8
   14002055c:	cmp    rdi,rsi
   14002055f:	jne    0x140020543
   140020561:	mov    r11,QWORD PTR [rsp+0xf8]
   140020569:	mov    DWORD PTR [rsp+0x100],r12d
   140020571:	movsxd rax,DWORD PTR [r11+0x8]
   140020575:	lea    rdi,[r11+rax*8+0x10]
   14002057a:	mov    QWORD PTR [rsp+0x108],rdi
   140020582:	movsxd rax,DWORD PTR [r11+0xc]
   140020586:	lea    rcx,[r11+rax*8+0x10]
   14002058b:	mov    QWORD PTR [rsp+0x110],rcx
   140020593:	data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400205a0:	mov    eax,0x1
   1400205a5:	mov    DWORD PTR [rsp+0x100],eax
   1400205ac:	cmp    rdi,rcx
   1400205af:	je     0x140020613
   1400205b1:	test   eax,eax
   1400205b3:	je     0x1400205f5
   1400205b5:	lea    rdx,[rip+0xdbdc]        # 0x14002e198
   1400205bc:	lea    rcx,[rsp+0x20]
   1400205c1:	call   QWORD PTR [rip+0xafe9]        # 0x14002b5b0
   1400205c7:	mov    rdx,rdi
   1400205ca:	mov    rcx,rax
   1400205cd:	call   QWORD PTR [rip+0xafd5]        # 0x14002b5a8
   1400205d3:	lea    rdx,[rip+0xdbb2]        # 0x14002e18c
   1400205da:	mov    rcx,rax
   1400205dd:	call   QWORD PTR [rip+0xafcd]        # 0x14002b5b0
   1400205e3:	mov    eax,DWORD PTR [rsp+0x100]
   1400205ea:	dec    eax
   1400205ec:	mov    DWORD PTR [rsp+0x100],eax
   1400205f3:	jmp    0x1400205b1
   1400205f5:	mov    rdi,QWORD PTR [rsp+0x108]
   1400205fd:	mov    rcx,QWORD PTR [rsp+0x110]
   140020605:	add    rdi,0x8
   140020609:	mov    QWORD PTR [rsp+0x108],rdi
   140020611:	jmp    0x1400205a0
   140020613:	mov    rbx,QWORD PTR [rsp+0xf8]
   14002061b:	mov    eax,DWORD PTR [rbx]
   14002061d:	test   eax,eax
   14002061f:	je     0x14002063f
   140020621:	cmp    eax,0xffffffff
   140020624:	je     0x14002067b
   140020626:	mov    eax,r13d
   140020629:	lock xadd DWORD PTR [rbx],eax
   14002062d:	add    eax,0xffffffff
   140020630:	setne  al
   140020633:	test   al,al
   140020635:	jne    0x14002067b
   140020637:	mov    rbx,QWORD PTR [rsp+0xf8]
   14002063f:	movsxd rax,DWORD PTR [rbx+0xc]
   140020643:	lea    rdi,[rbx+rax*8+0x10]
   140020648:	movsxd rax,DWORD PTR [rbx+0x8]
   14002064c:	lea    rsi,[rbx+rax*8+0x10]
   140020651:	cmp    rsi,rdi
   140020654:	je     0x140020672
   140020656:	data16 nop WORD PTR [rax+rax*1+0x0]
   140020660:	sub    rdi,0x8
   140020664:	mov    rcx,rdi
   140020667:	call   QWORD PTR [rip+0xb22b]        # 0x14002b898
   14002066d:	cmp    rdi,rsi
   140020670:	jne    0x140020660
   140020672:	mov    rcx,rbx
   140020675:	call   QWORD PTR [rip+0xb1f5]        # 0x14002b870
   14002067b:	lea    rdx,[rip+0xdaf6]        # 0x14002e178
   140020682:	lea    rcx,[rsp+0x20]
   140020687:	call   QWORD PTR [rip+0xaf23]        # 0x14002b5b0
   14002068d:	lea    rdx,[rip+0xdadc]        # 0x14002e170
   140020694:	xor    eax,eax
   140020696:	mov    rcx,r13
   140020699:	mov    rdi,rdx
   14002069c:	mov    QWORD PTR [rsp+0x238],rdx
   1400206a4:	lea    rdx,[rsp+0x310]
   1400206ac:	repnz scas al,BYTE PTR es:[rdi]
   1400206ae:	not    rcx
   1400206b1:	dec    rcx
   1400206b4:	mov    DWORD PTR [rsp+0x230],ecx
   1400206bb:	lea    rcx,[rsp+0xe8]
   1400206c3:	movaps xmm0,XMMWORD PTR [rsp+0x230]
   1400206cb:	movdqa XMMWORD PTR [rsp+0x310],xmm0
   1400206d4:	call   QWORD PTR [rip+0xb186]        # 0x14002b860
   1400206da:	mov    rdx,QWORD PTR [rsp+0xe8]
   1400206e2:	mov    edi,DWORD PTR [rdx+0x4]
   1400206e5:	lea    rcx,[rsp+0xe8]
   1400206ed:	call   QWORD PTR [rip+0xb1cd]        # 0x14002b8c0
   1400206f3:	lea    rdx,[rbp+0x58]
   1400206f7:	lea    rcx,[rsp+0x1e0]
   1400206ff:	mov    r8,rax
   140020702:	mov    r9d,edi
   140020705:	call   QWORD PTR [rip+0xb1ad]        # 0x14002b8b8
   14002070b:	xor    r9d,r9d
   14002070e:	lea    rdx,[rsp+0x1e0]
   140020716:	lea    r8d,[r9+0x1]
   14002071a:	lea    rcx,[rsp+0xe0]
   140020722:	call   QWORD PTR [rip+0xac48]        # 0x14002b370
   140020728:	lea    rcx,[rsp+0x1e0]
   140020730:	call   QWORD PTR [rip+0xb162]        # 0x14002b898
   140020736:	lea    rcx,[rsp+0xe8]
   14002073e:	call   QWORD PTR [rip+0xb154]        # 0x14002b898
   140020744:	lea    rdx,[rsp+0xe0]
   14002074c:	lea    rcx,[rsp+0x2f8]
   140020754:	call   QWORD PTR [rip+0xb07e]        # 0x14002b7d8
   14002075a:	lea    r8,[r15+0x28]
   14002075e:	lea    rdx,[rip+0xda03]        # 0x14002e168
   140020765:	lea    rcx,[rsp+0x20]
   14002076a:	mov    r9,rax
   14002076d:	call   0x14001fc10
   140020772:	mov    rdx,QWORD PTR [rip+0xb107]        # 0x14002b880
   140020779:	mov    rax,QWORD PTR [rip+0xb108]        # 0x14002b888
   140020780:	mov    QWORD PTR [rsp+0x98],rdx
   140020788:	lea    rdx,[rsp+0x1f0]
   140020790:	mov    rcx,r15
   140020793:	mov    QWORD PTR [rsp+0x30],rax
   140020798:	call   0x140008940
   14002079d:	mov    rdx,QWORD PTR [rax]
   1400207a0:	mov    rdi,rax
   1400207a3:	mov    QWORD PTR [rsp+0x78],rdx
   1400207a8:	mov    ecx,DWORD PTR [rdx]
   1400207aa:	test   ecx,ecx
   1400207ac:	je     0x1400207b9
   1400207ae:	cmp    ecx,0xffffffff
   1400207b1:	je     0x140020824
   1400207b3:	lock add DWORD PTR [rdx],0x1
   1400207b7:	jmp    0x14002081f
   1400207b9:	mov    edx,DWORD PTR [rdx+0x4]
   1400207bc:	lea    rcx,[rsp+0x78]
   1400207c1:	call   QWORD PTR [rip+0xb091]        # 0x14002b858
   1400207c7:	mov    rdx,QWORD PTR [rsp+0x78]
   1400207cc:	mov    rcx,QWORD PTR [rdi]
   1400207cf:	movsxd rax,DWORD PTR [rdx+0xc]
   1400207d3:	lea    rsi,[rdx+rax*8+0x10]
   1400207d8:	movsxd rax,DWORD PTR [rcx+0x8]
   1400207dc:	lea    rbx,[rcx+rax*8+0x10]
   1400207e1:	movsxd rax,DWORD PTR [rdx+0x8]
   1400207e5:	lea    rdi,[rdx+rax*8+0x10]
   1400207ea:	cmp    rdi,rsi
   1400207ed:	je     0x140020824
   1400207ef:	nop
   1400207f0:	mov    ecx,0x78
   1400207f5:	call   0x14002952a
   1400207fa:	test   rax,rax
   1400207fd:	je     0x14002080c
   1400207ff:	mov    rdx,QWORD PTR [rbx]
   140020802:	mov    rcx,rax
   140020805:	call   0x1400020d0
   14002080a:	jmp    0x14002080f
   14002080c:	mov    rax,r12
   14002080f:	mov    QWORD PTR [rdi],rax
   140020812:	add    rdi,0x8
   140020816:	add    rbx,0x8
   14002081a:	cmp    rdi,rsi
   14002081d:	jne    0x1400207f0
   14002081f:	mov    rdx,QWORD PTR [rsp+0x78]
   140020824:	mov    rsi,QWORD PTR [rsp+0x1f0]
   14002082c:	mov    DWORD PTR [rsp+0x80],r12d
   140020834:	movsxd rax,DWORD PTR [rdx+0x8]
   140020838:	lea    rcx,[rdx+rax*8+0x10]
   14002083d:	mov    QWORD PTR [rsp+0x88],rcx
   140020845:	movsxd rax,DWORD PTR [rdx+0xc]
   140020849:	lea    rcx,[rdx+rax*8+0x10]
   14002084e:	mov    QWORD PTR [rsp+0x90],rcx
   140020856:	mov    eax,DWORD PTR [rsi]
   140020858:	test   eax,eax
   14002085a:	je     0x14002087a
   14002085c:	cmp    eax,0xffffffff
   14002085f:	je     0x1400208c0
   140020861:	mov    eax,r13d
   140020864:	lock xadd DWORD PTR [rsi],eax
   140020868:	add    eax,0xffffffff
   14002086b:	setne  al
   14002086e:	test   al,al
   140020870:	jne    0x1400208c0
   140020872:	mov    rsi,QWORD PTR [rsp+0x1f0]
   14002087a:	movsxd rax,DWORD PTR [rsi+0xc]
   14002087e:	lea    rdi,[rsi+rax*8+0x10]
   140020883:	movsxd rax,DWORD PTR [rsi+0x8]
   140020887:	lea    rbp,[rsi+rax*8+0x10]
   14002088c:	cmp    rbp,rdi
   14002088f:	je     0x1400208b3
   140020891:	mov    rbx,QWORD PTR [rdi-0x8]
   140020895:	sub    rdi,0x8
   140020899:	test   rbx,rbx
   14002089c:	je     0x1400208ae
   14002089e:	mov    rcx,rbx
   1400208a1:	call   0x140001ea0
   1400208a6:	mov    rcx,rbx
   1400208a9:	call   0x140029524
   1400208ae:	cmp    rdi,rbp
   1400208b1:	jne    0x140020891
   1400208b3:	mov    rcx,rsi
   1400208b6:	call   QWORD PTR [rip+0xafb4]        # 0x14002b870
   1400208bc:	nop    DWORD PTR [rax+0x0]
   1400208c0:	mov    eax,DWORD PTR [rsp+0x80]
   1400208c7:	inc    DWORD PTR [rsp+0x80]
   1400208ce:	test   eax,eax
   1400208d0:	jne    0x1400208e9
   1400208d2:	mov    rax,QWORD PTR [rsp+0x90]
   1400208da:	cmp    QWORD PTR [rsp+0x88],rax
   1400208e2:	je     0x1400208e9
   1400208e4:	mov    r12b,0x1
   1400208e7:	jmp    0x1400208ec
   1400208e9:	xor    r12b,r12b
   1400208ec:	test   r14b,0x2
   1400208f0:	je     0x14002096b
   1400208f2:	mov    rsi,QWORD PTR [rsp+0x270]
   1400208fa:	and    r14d,0xfffffffd
   1400208fe:	mov    eax,DWORD PTR [rsi]
   140020900:	test   eax,eax
   140020902:	je     0x140020922
   140020904:	cmp    eax,0xffffffff
   140020907:	je     0x14002096b
   140020909:	mov    eax,r13d
   14002090c:	lock xadd DWORD PTR [rsi],eax
   140020910:	add    eax,0xffffffff
   140020913:	setne  al
   140020916:	test   al,al
   140020918:	jne    0x14002096b
   14002091a:	mov    rsi,QWORD PTR [rsp+0x270]
   140020922:	movsxd rax,DWORD PTR [rsi+0xc]
   140020926:	lea    rdi,[rsi+rax*8+0x10]
   14002092b:	movsxd rax,DWORD PTR [rsi+0x8]
   14002092f:	lea    rbp,[rsi+rax*8+0x10]
   140020934:	cmp    rbp,rdi
   140020937:	je     0x140020962
   140020939:	nop    DWORD PTR [rax+0x0]
   140020940:	mov    rbx,QWORD PTR [rdi-0x8]
   140020944:	sub    rdi,0x8
   140020948:	test   rbx,rbx
   14002094b:	je     0x14002095d
   14002094d:	mov    rcx,rbx
   140020950:	call   0x140001ea0
   140020955:	mov    rcx,rbx
   140020958:	call   0x140029524
   14002095d:	cmp    rdi,rbp
   140020960:	jne    0x140020940
   140020962:	mov    rcx,rsi
   140020965:	call   QWORD PTR [rip+0xaf05]        # 0x14002b870
   14002096b:	test   r12b,r12b
   14002096e:	je     0x140020d47
   140020974:	mov    rax,QWORD PTR [rsp+0x88]
   14002097c:	mov    r12,QWORD PTR [rax]
   14002097f:	test   r14b,0x4
   140020983:	je     0x140020a00
   140020985:	mov    rsi,QWORD PTR [rsp+0x2d8]
   14002098d:	and    r14d,0xfffffffb
   140020991:	mov    eax,DWORD PTR [rsi]
   140020993:	test   eax,eax
   140020995:	je     0x1400209b5
   140020997:	cmp    eax,0xffffffff
   14002099a:	je     0x140020a00
   14002099c:	mov    eax,r13d
   14002099f:	lock xadd DWORD PTR [rsi],eax
   1400209a3:	add    eax,0xffffffff
   1400209a6:	setne  al
   1400209a9:	test   al,al
   1400209ab:	jne    0x140020a00
   1400209ad:	mov    rsi,QWORD PTR [rsp+0x2d8]
   1400209b5:	movsxd rax,DWORD PTR [rsi+0xc]
   1400209b9:	lea    rdi,[rsi+rax*8+0x10]
   1400209be:	movsxd rax,DWORD PTR [rsi+0x8]
   1400209c2:	lea    rbp,[rsi+rax*8+0x10]
   1400209c7:	cmp    rbp,rdi
   1400209ca:	je     0x1400209f2
   1400209cc:	nop    DWORD PTR [rax+0x0]
   1400209d0:	mov    rbx,QWORD PTR [rdi-0x8]
   1400209d4:	sub    rdi,0x8
   1400209d8:	test   rbx,rbx
   1400209db:	je     0x1400209ed
   1400209dd:	mov    rcx,rbx
   1400209e0:	call   0x140001ea0
   1400209e5:	mov    rcx,rbx
   1400209e8:	call   0x140029524
   1400209ed:	cmp    rdi,rbp
   1400209f0:	jne    0x1400209d0
   1400209f2:	mov    rcx,rsi
   1400209f5:	call   QWORD PTR [rip+0xae75]        # 0x14002b870
   1400209fb:	nop    DWORD PTR [rax+rax*1+0x0]
   140020a00:	mov    r13d,DWORD PTR [rsp+0x80]
   140020a08:	test   r14b,0x10
   140020a0c:	je     0x140020a7b
   140020a0e:	mov    rsi,QWORD PTR [rsp+0x2a0]
   140020a16:	and    r14d,0xffffffef
   140020a1a:	mov    eax,DWORD PTR [rsi]
   140020a1c:	test   eax,eax
   140020a1e:	je     0x140020a30
   140020a20:	cmp    eax,0xffffffff
   140020a23:	je     0x140020a7b
   140020a25:	lock add DWORD PTR [rsi],0xffffffff
   140020a29:	setne  al
   140020a2c:	test   al,al
   140020a2e:	jne    0x140020a7b
   140020a30:	mov    rsi,QWORD PTR [rsp+0x2a0]
   140020a38:	movsxd rax,DWORD PTR [rsi+0xc]
   140020a3c:	lea    rdi,[rsi+rax*8+0x10]
   140020a41:	movsxd rax,DWORD PTR [rsi+0x8]
   140020a45:	lea    rbp,[rsi+rax*8+0x10]
   140020a4a:	cmp    rbp,rdi
   140020a4d:	je     0x140020a72
   140020a4f:	nop
   140020a50:	mov    rbx,QWORD PTR [rdi-0x8]
   140020a54:	sub    rdi,0x8
   140020a58:	test   rbx,rbx
   140020a5b:	je     0x140020a6d
   140020a5d:	mov    rcx,rbx
   140020a60:	call   0x140001ea0
   140020a65:	mov    rcx,rbx
   140020a68:	call   0x140029524
   140020a6d:	cmp    rdi,rbp
   140020a70:	jne    0x140020a50
   140020a72:	mov    rcx,rsi
   140020a75:	call   QWORD PTR [rip+0xadf5]        # 0x14002b870
   140020a7b:	test   r13d,r13d
   140020a7e:	je     0x140020caa
   140020a84:	mov    eax,DWORD PTR [r12+0x70]
   140020a89:	cmp    eax,0x3
   140020a8c:	je     0x140020a93
   140020a8e:	cmp    eax,0x2
   140020a91:	jne    0x140020adf
   140020a93:	mov    rcx,QWORD PTR [r12+0x50]
   140020a98:	or     r14d,0x20
   140020a9c:	movsxd rdx,DWORD PTR [rcx+0x8]
   140020aa0:	mov    eax,DWORD PTR [rcx+0xc]
   140020aa3:	sub    eax,edx
   140020aa5:	test   eax,eax
   140020aa7:	jg     0x140020ab9
   140020aa9:	lea    rcx,[rsp+0xb0]
   140020ab1:	call   QWORD PTR [rip+0xadd9]        # 0x14002b890
   140020ab7:	jmp    0x140020acc
   140020ab9:	lea    rdx,[rcx+rdx*8+0x10]
   140020abe:	lea    rcx,[rsp+0xb0]
   140020ac6:	call   QWORD PTR [rip+0xadd4]        # 0x14002b8a0
   140020acc:	mov    rax,QWORD PTR [rsp+0xb0]
   140020ad4:	cmp    DWORD PTR [rax+0x4],0x0
   140020ad8:	jne    0x140020adf
   140020ada:	mov    dil,0x1
   140020add:	jmp    0x140020ae2
   140020adf:	xor    dil,dil
   140020ae2:	test   r14b,0x20
   140020ae6:	je     0x140020afa
   140020ae8:	lea    rcx,[rsp+0xb0]
   140020af0:	and    r14d,0xffffffdf
   140020af4:	call   QWORD PTR [rip+0xad9e]        # 0x14002b898
   140020afa:	test   dil,dil
   140020afd:	jne    0x140020c25
   140020b03:	lea    rdx,[r12+0x8]
   140020b08:	lea    rcx,[rsp+0x200]
   140020b10:	call   QWORD PTR [rip+0xad8a]        # 0x14002b8a0
   140020b16:	lea    rdx,[rsp+0x200]
   140020b1e:	lea    rcx,[rsp+0x98]
   140020b26:	call   0x1400200a0
   140020b2b:	lea    rcx,[rsp+0x200]
   140020b33:	mov    rdi,rax
   140020b36:	call   QWORD PTR [rip+0xad5c]        # 0x14002b898
   140020b3c:	mov    rax,QWORD PTR [rdi]
   140020b3f:	mov    ecx,DWORD PTR [rax+0x8]
   140020b42:	cmp    DWORD PTR [rax+0xc],ecx
   140020b45:	jne    0x140020bd5
   140020b4b:	lea    rdx,[r12+0x8]
   140020b50:	lea    rcx,[rsp+0xc0]
   140020b58:	call   QWORD PTR [rip+0xad42]        # 0x14002b8a0
   140020b5e:	mov    rdx,QWORD PTR [rsp+0x30]
   140020b63:	mov    eax,DWORD PTR [rdx]
   140020b65:	cmp    eax,0x1
   140020b68:	je     0x140020b9b
   140020b6a:	test   eax,eax
   140020b6c:	je     0x140020b9b
   140020b6e:	lea    rcx,[rsp+0x30]
   140020b73:	mov    edx,0x7fffffff
   140020b78:	mov    r8d,0x1
   140020b7e:	call   0x140001a10
   140020b83:	test   rax,rax
   140020b86:	je     0x140020bc7
   140020b88:	lea    rdx,[rsp+0xc0]
   140020b90:	mov    rcx,rax
   140020b93:	call   QWORD PTR [rip+0xad07]        # 0x14002b8a0
   140020b99:	jmp    0x140020bc7
   140020b9b:	lea    rdx,[rsp+0xc0]
   140020ba3:	lea    rcx,[rsp+0x2b0]
   140020bab:	call   QWORD PTR [rip+0xacef]        # 0x14002b8a0
   140020bb1:	lea    rcx,[rsp+0x30]
   140020bb6:	call   QWORD PTR [rip+0xac84]        # 0x14002b840
   140020bbc:	mov    rcx,QWORD PTR [rsp+0x2b0]
   140020bc4:	mov    QWORD PTR [rax],rcx
   140020bc7:	lea    rcx,[rsp+0xc0]
   140020bcf:	call   QWORD PTR [rip+0xacc3]        # 0x14002b898
   140020bd5:	mov    rax,QWORD PTR [rdi]
   140020bd8:	mov    ecx,DWORD PTR [rax]
   140020bda:	cmp    ecx,0x1
   140020bdd:	je     0x140020bf8
   140020bdf:	test   ecx,ecx
   140020be1:	je     0x140020bf8
   140020be3:	mov    edx,0x7fffffff
   140020be8:	mov    r8d,0x1
   140020bee:	mov    rcx,rdi
   140020bf1:	call   0x140008780
   140020bf6:	jmp    0x140020c01
   140020bf8:	mov    rcx,rdi
   140020bfb:	call   QWORD PTR [rip+0xac3f]        # 0x14002b840
   140020c01:	mov    ecx,0x78
   140020c06:	mov    rdi,rax
   140020c09:	call   0x14002952a
   140020c0e:	test   rax,rax
   140020c11:	je     0x140020c20
   140020c13:	mov    rdx,r12
   140020c16:	mov    rcx,rax
   140020c19:	call   0x1400020d0
   140020c1e:	jmp    0x140020c22
   140020c20:	xor    eax,eax
   140020c22:	mov    QWORD PTR [rdi],rax
   140020c25:	dec    DWORD PTR [rsp+0x80]
   140020c2c:	test   r14b,0x8
   140020c30:	je     0x140020a00
   140020c36:	mov    rsi,QWORD PTR [rsp+0x2c0]
   140020c3e:	and    r14d,0xfffffff7
   140020c42:	mov    eax,DWORD PTR [rsi]
   140020c44:	test   eax,eax
   140020c46:	je     0x140020c60
   140020c48:	cmp    eax,0xffffffff
   140020c4b:	je     0x140020a00
   140020c51:	lock add DWORD PTR [rsi],0xffffffff
   140020c55:	setne  al
   140020c58:	test   al,al
   140020c5a:	jne    0x140020a00
   140020c60:	mov    rsi,QWORD PTR [rsp+0x2c0]
   140020c68:	movsxd rax,DWORD PTR [rsi+0xc]
   140020c6c:	lea    rdi,[rsi+rax*8+0x10]
   140020c71:	movsxd rax,DWORD PTR [rsi+0x8]
   140020c75:	lea    rbp,[rsi+rax*8+0x10]
   140020c7a:	cmp    rbp,rdi
   140020c7d:	je     0x1400209f2
   140020c83:	mov    rbx,QWORD PTR [rdi-0x8]
   140020c87:	sub    rdi,0x8
   140020c8b:	test   rbx,rbx
   140020c8e:	je     0x140020ca0
   140020c90:	mov    rcx,rbx
   140020c93:	call   0x140001ea0
   140020c98:	mov    rcx,rbx
   140020c9b:	call   0x140029524
   140020ca0:	cmp    rdi,rbp
   140020ca3:	jne    0x140020c83
   140020ca5:	jmp    0x1400209f2
   140020caa:	add    QWORD PTR [rsp+0x88],0x8
   140020cb3:	test   r14b,0x1
   140020cb7:	je     0x140020cd0
   140020cb9:	mov    rsi,QWORD PTR [rsp+0x2d0]
   140020cc1:	and    r14d,0xfffffffe
   140020cc5:	mov    eax,DWORD PTR [rsi]
   140020cc7:	test   eax,eax
   140020cc9:	je     0x140020cfc
   140020ccb:	cmp    eax,0xffffffff
   140020cce:	jne    0x140020cd9
   140020cd0:	or     r13,0xffffffffffffffff
   140020cd4:	jmp    0x1400208c0
   140020cd9:	or     r13,0xffffffffffffffff
   140020cdd:	mov    eax,r13d
   140020ce0:	lock xadd DWORD PTR [rsi],eax
   140020ce4:	add    eax,r13d
   140020ce7:	setne  al
   140020cea:	test   al,al
   140020cec:	jne    0x1400208c0
   140020cf2:	mov    rsi,QWORD PTR [rsp+0x2d0]
   140020cfa:	jmp    0x140020d00
   140020cfc:	or     r13,0xffffffffffffffff
   140020d00:	movsxd rax,DWORD PTR [rsi+0xc]
   140020d04:	lea    rdi,[rsi+rax*8+0x10]
   140020d09:	movsxd rax,DWORD PTR [rsi+0x8]
   140020d0d:	lea    rbp,[rsi+rax*8+0x10]
   140020d12:	cmp    rbp,rdi
   140020d15:	je     0x1400208b3
   140020d1b:	nop    DWORD PTR [rax+rax*1+0x0]
   140020d20:	mov    rbx,QWORD PTR [rdi-0x8]
   140020d24:	sub    rdi,0x8
   140020d28:	test   rbx,rbx
   140020d2b:	je     0x140020d3d
   140020d2d:	mov    rcx,rbx
   140020d30:	call   0x140001ea0
   140020d35:	mov    rcx,rbx
   140020d38:	call   0x140029524
   140020d3d:	cmp    rdi,rbp
   140020d40:	jne    0x140020d20
   140020d42:	jmp    0x1400208b3
   140020d47:	mov    rsi,QWORD PTR [rsp+0x78]
   140020d4c:	mov    eax,DWORD PTR [rsi]
   140020d4e:	test   eax,eax
   140020d50:	je     0x140020d6d
   140020d52:	cmp    eax,0xffffffff
   140020d55:	je     0x140020dbb
   140020d57:	mov    eax,r13d
   140020d5a:	lock xadd DWORD PTR [rsi],eax
   140020d5e:	add    eax,0xffffffff
   140020d61:	setne  al
   140020d64:	test   al,al
   140020d66:	jne    0x140020dbb
   140020d68:	mov    rsi,QWORD PTR [rsp+0x78]
   140020d6d:	movsxd rax,DWORD PTR [rsi+0xc]
   140020d71:	lea    rdi,[rsi+rax*8+0x10]
   140020d76:	movsxd rax,DWORD PTR [rsi+0x8]
   140020d7a:	lea    rbp,[rsi+rax*8+0x10]
   140020d7f:	cmp    rbp,rdi
   140020d82:	je     0x140020db2
   140020d84:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140020d90:	mov    rbx,QWORD PTR [rdi-0x8]
   140020d94:	sub    rdi,0x8
   140020d98:	test   rbx,rbx
   140020d9b:	je     0x140020dad
   140020d9d:	mov    rcx,rbx
   140020da0:	call   0x140001ea0
   140020da5:	mov    rcx,rbx
   140020da8:	call   0x140029524
   140020dad:	cmp    rdi,rbp
   140020db0:	jne    0x140020d90
   140020db2:	mov    rcx,rsi
   140020db5:	call   QWORD PTR [rip+0xaab5]        # 0x14002b870
   140020dbb:	mov    rax,QWORD PTR [rsp+0x390]
   140020dc3:	cmp    BYTE PTR [rax+0x6a],0x0
   140020dc7:	je     0x140020fc0
   140020dcd:	mov    rax,QWORD PTR [rsp+0x30]
   140020dd2:	mov    ecx,DWORD PTR [rax]
   140020dd4:	cmp    ecx,0x1
   140020dd7:	je     0x140020ea0
   140020ddd:	test   ecx,ecx
   140020ddf:	je     0x140020ea0
   140020de5:	movsxd rcx,DWORD PTR [rax+0x8]
   140020de9:	mov    edx,DWORD PTR [rax+0x4]
   140020dec:	lea    rbx,[rax+rcx*8+0x10]
   140020df1:	lea    rcx,[rsp+0x30]
   140020df6:	call   QWORD PTR [rip+0xaa5c]        # 0x14002b858
   140020dfc:	mov    rsi,rax
   140020dff:	mov    rax,QWORD PTR [rsp+0x30]
   140020e04:	movsxd rcx,DWORD PTR [rax+0xc]
   140020e08:	lea    rbp,[rax+rcx*8+0x10]
   140020e0d:	movsxd rcx,DWORD PTR [rax+0x8]
   140020e11:	lea    rdi,[rax+rcx*8+0x10]
   140020e16:	cmp    rdi,rbp
   140020e19:	je     0x140020e43
   140020e1b:	nop    DWORD PTR [rax+rax*1+0x0]
   140020e20:	test   rdi,rdi
   140020e23:	je     0x140020e31
   140020e25:	mov    rdx,rbx
   140020e28:	mov    rcx,rdi
   140020e2b:	call   QWORD PTR [rip+0xaa6f]        # 0x14002b8a0
   140020e31:	add    rdi,0x8
   140020e35:	add    rbx,0x8
   140020e39:	cmp    rdi,rbp
   140020e3c:	jne    0x140020e20
   140020e3e:	mov    rax,QWORD PTR [rsp+0x30]
   140020e43:	mov    ecx,DWORD PTR [rsi]
   140020e45:	test   ecx,ecx
   140020e47:	je     0x140020e5f
   140020e49:	cmp    ecx,0xffffffff
   140020e4c:	je     0x140020ea0
   140020e4e:	mov    eax,r13d
   140020e51:	lock xadd DWORD PTR [rsi],eax
   140020e55:	add    eax,0xffffffff
   140020e58:	setne  al
   140020e5b:	test   al,al
   140020e5d:	jne    0x140020e9b
   140020e5f:	movsxd rax,DWORD PTR [rsi+0xc]
   140020e63:	lea    rdi,[rsi+rax*8+0x10]
   140020e68:	movsxd rax,DWORD PTR [rsi+0x8]
   140020e6c:	lea    rbx,[rsi+rax*8+0x10]
   140020e71:	cmp    rbx,rdi
   140020e74:	je     0x140020e92
   140020e76:	data16 nop WORD PTR [rax+rax*1+0x0]
   140020e80:	sub    rdi,0x8
   140020e84:	mov    rcx,rdi
   140020e87:	call   QWORD PTR [rip+0xaa0b]        # 0x14002b898
   140020e8d:	cmp    rdi,rbx
   140020e90:	jne    0x140020e80
   140020e92:	mov    rcx,rsi
   140020e95:	call   QWORD PTR [rip+0xa9d5]        # 0x14002b870
   140020e9b:	mov    rax,QWORD PTR [rsp+0x30]
   140020ea0:	movsxd rcx,DWORD PTR [rax+0xc]
   140020ea4:	lea    rdi,[rax+rcx*8+0x10]
   140020ea9:	mov    ecx,DWORD PTR [rax]
   140020eab:	mov    QWORD PTR [rsp+0x210],rdi
   140020eb3:	cmp    ecx,0x1
   140020eb6:	je     0x140020f80
   140020ebc:	test   ecx,ecx
   140020ebe:	je     0x140020f80
   140020ec4:	movsxd rcx,DWORD PTR [rax+0x8]
   140020ec8:	mov    edx,DWORD PTR [rax+0x4]
   140020ecb:	lea    rsi,[rax+rcx*8+0x10]
   140020ed0:	lea    rcx,[rsp+0x30]
   140020ed5:	call   QWORD PTR [rip+0xa97d]        # 0x14002b858
   140020edb:	mov    rbp,rax
   140020ede:	mov    rax,QWORD PTR [rsp+0x30]
   140020ee3:	movsxd rcx,DWORD PTR [rax+0xc]
   140020ee7:	lea    r12,[rax+rcx*8+0x10]
   140020eec:	movsxd rcx,DWORD PTR [rax+0x8]
   140020ef0:	lea    rbx,[rax+rcx*8+0x10]
   140020ef5:	cmp    rbx,r12
   140020ef8:	je     0x140020f23
   140020efa:	nop    WORD PTR [rax+rax*1+0x0]
   140020f00:	test   rbx,rbx
   140020f03:	je     0x140020f11
   140020f05:	mov    rdx,rsi
   140020f08:	mov    rcx,rbx
   140020f0b:	call   QWORD PTR [rip+0xa98f]        # 0x14002b8a0
   140020f11:	add    rbx,0x8
   140020f15:	add    rsi,0x8
   140020f19:	cmp    rbx,r12
   140020f1c:	jne    0x140020f00
   140020f1e:	mov    rax,QWORD PTR [rsp+0x30]
   140020f23:	mov    ecx,DWORD PTR [rbp+0x0]
   140020f26:	test   ecx,ecx
   140020f28:	je     0x140020f49
   140020f2a:	cmp    ecx,0xffffffff
   140020f2d:	je     0x140020f80
   140020f2f:	mov    eax,r13d
   140020f32:	lock xadd DWORD PTR [rbp+0x0],eax
   140020f37:	mov    rdi,QWORD PTR [rsp+0x210]
   140020f3f:	add    eax,0xffffffff
   140020f42:	setne  al
   140020f45:	test   al,al
   140020f47:	jne    0x140020f7b
   140020f49:	movsxd rax,DWORD PTR [rbp+0xc]
   140020f4d:	lea    rbx,[rbp+rax*8+0x10]
   140020f52:	movsxd rax,DWORD PTR [rbp+0x8]
   140020f56:	lea    rsi,[rbp+rax*8+0x10]
   140020f5b:	cmp    rsi,rbx
   140020f5e:	je     0x140020f72
   140020f60:	sub    rbx,0x8
   140020f64:	mov    rcx,rbx
   140020f67:	call   QWORD PTR [rip+0xa92b]        # 0x14002b898
   140020f6d:	cmp    rbx,rsi
   140020f70:	jne    0x140020f60
   140020f72:	mov    rcx,rbp
   140020f75:	call   QWORD PTR [rip+0xa8f5]        # 0x14002b870
   140020f7b:	mov    rax,QWORD PTR [rsp+0x30]
   140020f80:	movsxd rcx,DWORD PTR [rax+0x8]
   140020f84:	mov    QWORD PTR [rsp+0x2e0],rdi
   140020f8c:	lea    rdx,[rsp+0x2e0]
   140020f94:	lea    rax,[rax+rcx*8+0x10]
   140020f99:	lea    rcx,[rsp+0x2f0]
   140020fa1:	sub    rdi,rax
   140020fa4:	mov    QWORD PTR [rsp+0x330],rax
   140020fac:	mov    QWORD PTR [rsp+0x2f0],rax
   140020fb4:	sar    rdi,0x3
   140020fb8:	mov    r8d,edi
   140020fbb:	call   0x14001fa30
   140020fc0:	mov    rax,QWORD PTR [rip+0xa8b9]        # 0x14002b880
   140020fc7:	lea    rcx,[rsp+0xf0]
   140020fcf:	mov    QWORD PTR [rsp+0xa0],rax
   140020fd7:	call   QWORD PTR [rip+0xa8b3]        # 0x14002b890
   140020fdd:	mov    r11,QWORD PTR [rsp+0x30]
   140020fe2:	mov    QWORD PTR [rsp+0x138],r11
   140020fea:	mov    eax,DWORD PTR [r11]
   140020fed:	test   eax,eax
   140020fef:	je     0x140020ffd
   140020ff1:	cmp    eax,0xffffffff
   140020ff4:	je     0x140021066
   140020ff6:	lock add DWORD PTR [r11],0x1
   140020ffb:	jmp    0x14002105e
   140020ffd:	mov    edx,DWORD PTR [r11+0x4]
   140021001:	lea    rcx,[rsp+0x138]
   140021009:	call   QWORD PTR [rip+0xa849]        # 0x14002b858
   14002100f:	mov    r11,QWORD PTR [rsp+0x138]
   140021017:	movsxd rax,DWORD PTR [r11+0xc]
   14002101b:	lea    rsi,[r11+rax*8+0x10]
   140021020:	mov    rax,QWORD PTR [rsp+0x30]
   140021025:	movsxd rcx,DWORD PTR [rax+0x8]
   140021029:	lea    rbx,[rax+rcx*8+0x10]
   14002102e:	movsxd rax,DWORD PTR [r11+0x8]
   140021032:	lea    rdi,[r11+rax*8+0x10]
   140021037:	cmp    rdi,rsi
   14002103a:	je     0x140021066
   14002103c:	nop    DWORD PTR [rax+0x0]
   140021040:	test   rdi,rdi
   140021043:	je     0x140021051
   140021045:	mov    rdx,rbx
   140021048:	mov    rcx,rdi
   14002104b:	call   QWORD PTR [rip+0xa84f]        # 0x14002b8a0
   140021051:	add    rdi,0x8
   140021055:	add    rbx,0x8
   140021059:	cmp    rdi,rsi
   14002105c:	jne    0x140021040
   14002105e:	mov    r11,QWORD PTR [rsp+0x138]
   140021066:	mov    DWORD PTR [rsp+0x140],0x0
   140021071:	movsxd rax,DWORD PTR [r11+0x8]
   140021075:	lea    rbx,[r11+rax*8+0x10]
   14002107a:	mov    QWORD PTR [rsp+0x148],rbx
   140021082:	movsxd rax,DWORD PTR [r11+0xc]
   140021086:	lea    rcx,[r11+rax*8+0x10]
   14002108b:	mov    QWORD PTR [rsp+0x150],rcx
   140021093:	mov    eax,0x1
   140021098:	mov    QWORD PTR [rsp+0x1a8],rbx
   1400210a0:	mov    DWORD PTR [rsp+0x140],eax
   1400210a7:	cmp    rbx,rcx
   1400210aa:	je     0x14002213b
   1400210b0:	test   eax,eax
   1400210b2:	je     0x14002211a
   1400210b8:	lea    rcx,[rsp+0x2e8]
   1400210c0:	mov    rdx,rbx
   1400210c3:	call   0x14001bdb0
   1400210c8:	lea    rdx,[rip+0xd081]        # 0x14002e150
   1400210cf:	lea    rcx,[rsp+0x20]
   1400210d4:	mov    rdi,rax
   1400210d7:	call   QWORD PTR [rip+0xa4d3]        # 0x14002b5b0
   1400210dd:	mov    rdx,rdi
   1400210e0:	mov    rcx,rax
   1400210e3:	call   QWORD PTR [rip+0xa4bf]        # 0x14002b5a8
   1400210e9:	lea    rdx,[rip+0xd050]        # 0x14002e140
   1400210f0:	mov    rcx,rax
   1400210f3:	call   QWORD PTR [rip+0xa4b7]        # 0x14002b5b0
   1400210f9:	lea    rcx,[rsp+0x2e8]
   140021101:	call   QWORD PTR [rip+0xa791]        # 0x14002b898
   140021107:	lea    rcx,[rsp+0x98]
   14002110f:	mov    rdx,rbx
   140021112:	call   0x1400200a0
   140021117:	mov    rdi,rax
   14002111a:	mov    rdx,QWORD PTR [rax]
   14002111d:	mov    QWORD PTR [rsp+0x118],rdx
   140021125:	mov    ecx,DWORD PTR [rdx]
   140021127:	test   ecx,ecx
   140021129:	je     0x140021136
   14002112b:	cmp    ecx,0xffffffff
   14002112e:	je     0x1400211a8
   140021130:	lock add DWORD PTR [rdx],0x1
   140021134:	jmp    0x1400211a0
   140021136:	mov    edx,DWORD PTR [rdx+0x4]
   140021139:	lea    rcx,[rsp+0x118]
   140021141:	call   QWORD PTR [rip+0xa711]        # 0x14002b858
   140021147:	mov    rdx,QWORD PTR [rsp+0x118]
   14002114f:	mov    rcx,QWORD PTR [rdi]
   140021152:	movsxd rax,DWORD PTR [rdx+0xc]
   140021156:	lea    rsi,[rdx+rax*8+0x10]
   14002115b:	movsxd rax,DWORD PTR [rcx+0x8]
   14002115f:	lea    rbx,[rcx+rax*8+0x10]
   140021164:	movsxd rax,DWORD PTR [rdx+0x8]
   140021168:	lea    rdi,[rdx+rax*8+0x10]
   14002116d:	cmp    rdi,rsi
   140021170:	je     0x1400211a8
   140021172:	mov    ecx,0x78
   140021177:	call   0x14002952a
   14002117c:	test   rax,rax
   14002117f:	je     0x14002118e
   140021181:	mov    rdx,QWORD PTR [rbx]
   140021184:	mov    rcx,rax
   140021187:	call   0x1400020d0
   14002118c:	jmp    0x140021190
   14002118e:	xor    eax,eax
   140021190:	mov    QWORD PTR [rdi],rax
   140021193:	add    rdi,0x8
   140021197:	add    rbx,0x8
   14002119b:	cmp    rdi,rsi
   14002119e:	jne    0x140021172
   1400211a0:	mov    rdx,QWORD PTR [rsp+0x118]
   1400211a8:	mov    DWORD PTR [rsp+0x120],0x0
   1400211b3:	movsxd rax,DWORD PTR [rdx+0x8]
   1400211b7:	lea    rcx,[rdx+rax*8+0x10]
   1400211bc:	mov    QWORD PTR [rsp+0x128],rcx
   1400211c4:	movsxd rax,DWORD PTR [rdx+0xc]
   1400211c8:	lea    rdx,[rdx+rax*8+0x10]
   1400211cd:	mov    QWORD PTR [rsp+0x130],rdx
   1400211d5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400211e0:	mov    eax,0x1
   1400211e5:	mov    DWORD PTR [rsp+0x120],eax
   1400211ec:	cmp    rcx,rdx
   1400211ef:	je     0x140022073
   1400211f5:	mov    rsi,QWORD PTR [rcx]
   1400211f8:	mov    QWORD PTR [rsp+0x230],rsi
   140021200:	test   eax,eax
   140021202:	je     0x140022052
   140021208:	lea    rdx,[rip+0xcf21]        # 0x14002e130
   14002120f:	lea    rcx,[rsp+0x20]
   140021214:	call   QWORD PTR [rip+0xa396]        # 0x14002b5b0
   14002121a:	lea    rcx,[rsp+0x220]
   140021222:	mov    rdx,rsi
   140021225:	call   QWORD PTR [rip+0xa675]        # 0x14002b8a0
   14002122b:	lea    rcx,[rsp+0x220]
   140021233:	call   QWORD PTR [rip+0x9fbf]        # 0x14002b1f8
   140021239:	lea    rcx,[rsp+0x220]
   140021241:	test   al,al
   140021243:	sete   dil
   140021247:	call   QWORD PTR [rip+0xa64b]        # 0x14002b898
   14002124d:	test   dil,dil
   140021250:	je     0x1400212a4
   140021252:	lea    rcx,[rsp+0x1f8]
   14002125a:	mov    rdx,rsi
   14002125d:	call   QWORD PTR [rip+0xa63d]        # 0x14002b8a0
   140021263:	lea    rdx,[rip+0xcebe]        # 0x14002e128
   14002126a:	lea    rcx,[rsp+0x20]
   14002126f:	call   QWORD PTR [rip+0xa33b]        # 0x14002b5b0
   140021275:	lea    rdx,[rsp+0x1f8]
   14002127d:	mov    rcx,rax
   140021280:	call   QWORD PTR [rip+0xa322]        # 0x14002b5a8
   140021286:	lea    rdx,[rip+0xc3df]        # 0x14002d66c
   14002128d:	mov    rcx,rax
   140021290:	call   QWORD PTR [rip+0xa31a]        # 0x14002b5b0
   140021296:	lea    rcx,[rsp+0x1f8]
   14002129e:	call   QWORD PTR [rip+0xa5f4]        # 0x14002b898
   1400212a4:	cmp    BYTE PTR [rsi+0x74],0x0
   1400212a8:	je     0x1400212bc
   1400212aa:	lea    rdx,[rip+0xce67]        # 0x14002e118
   1400212b1:	lea    rcx,[rsp+0x20]
   1400212b6:	call   QWORD PTR [rip+0xa2f4]        # 0x14002b5b0
   1400212bc:	lea    rdx,[rip+0xc391]        # 0x14002d654
   1400212c3:	lea    rcx,[rsp+0x20]
   1400212c8:	call   QWORD PTR [rip+0xa2e2]        # 0x14002b5b0
   1400212ce:	cmp    DWORD PTR [r15+0x8],0x1
   1400212d3:	je     0x140021a1c
   1400212d9:	lea    rdx,[rsp+0xf0]
   1400212e1:	lea    rcx,[rsp+0xc8]
   1400212e9:	call   QWORD PTR [rip+0xa5b1]        # 0x14002b8a0
   1400212ef:	lea    rdx,[rsp+0x180]
   1400212f7:	mov    rcx,rsi
   1400212fa:	mov    r15b,0x1
   1400212fd:	call   0x14000b750
   140021302:	mov    rcx,QWORD PTR [rax]
   140021305:	mov    rdi,rax
   140021308:	mov    QWORD PTR [rsp+0x58],rcx
   14002130d:	mov    edx,DWORD PTR [rcx]
   14002130f:	test   edx,edx
   140021311:	je     0x140021322
   140021313:	cmp    edx,0xffffffff
   140021316:	je     0x14002139c
   14002131c:	lock add DWORD PTR [rcx],0x1
   140021320:	jmp    0x14002139c
   140021322:	mov    edx,DWORD PTR [rcx+0x4]
   140021325:	lea    rcx,[rsp+0x58]
   14002132a:	call   QWORD PTR [rip+0xa528]        # 0x14002b858
   140021330:	mov    rcx,rdi
   140021333:	call   QWORD PTR [rip+0xa367]        # 0x14002b6a0
   140021339:	lea    rcx,[rsp+0x58]
   14002133e:	mov    rbp,rax
   140021341:	call   QWORD PTR [rip+0xa351]        # 0x14002b698
   140021347:	lea    rcx,[rsp+0x58]
   14002134c:	mov    r12,rax
   14002134f:	call   QWORD PTR [rip+0xa34b]        # 0x14002b6a0
   140021355:	mov    rsi,rax
   140021358:	cmp    rax,r12
   14002135b:	je     0x14002139c
   14002135d:	nop    DWORD PTR [rax]
   140021360:	mov    ecx,0x10
   140021365:	call   0x14002952a
   14002136a:	mov    rbx,rax
   14002136d:	test   rax,rax
   140021370:	je     0x14002138a
   140021372:	mov    rdi,QWORD PTR [rbp+0x0]
   140021376:	mov    rcx,rax
   140021379:	mov    rdx,rdi
   14002137c:	call   QWORD PTR [rip+0xa51e]        # 0x14002b8a0
   140021382:	mov    edx,DWORD PTR [rdi+0x8]
   140021385:	mov    DWORD PTR [rbx+0x8],edx
   140021388:	jmp    0x14002138c
   14002138a:	xor    ebx,ebx
   14002138c:	mov    QWORD PTR [rsi],rbx
   14002138f:	add    rsi,0x8
   140021393:	add    rbp,0x8
   140021397:	cmp    rsi,r12
   14002139a:	jne    0x140021360
   14002139c:	lea    rcx,[rsp+0x58]
   1400213a1:	mov    DWORD PTR [rsp+0x60],0x0
   1400213a9:	call   QWORD PTR [rip+0xa2f1]        # 0x14002b6a0
   1400213af:	lea    rcx,[rsp+0x58]
   1400213b4:	mov    QWORD PTR [rsp+0x68],rax
   1400213b9:	call   QWORD PTR [rip+0xa2d9]        # 0x14002b698
   1400213bf:	mov    rsi,QWORD PTR [rsp+0x180]
   1400213c7:	mov    QWORD PTR [rsp+0x70],rax
   1400213cc:	mov    eax,DWORD PTR [rsi]
   1400213ce:	test   eax,eax
   1400213d0:	je     0x1400213f0
   1400213d2:	cmp    eax,0xffffffff
   1400213d5:	je     0x140021440
   1400213d7:	mov    eax,r13d
   1400213da:	lock xadd DWORD PTR [rsi],eax
   1400213de:	add    eax,0xffffffff
   1400213e1:	setne  al
   1400213e4:	test   al,al
   1400213e6:	jne    0x140021440
   1400213e8:	mov    rsi,QWORD PTR [rsp+0x180]
   1400213f0:	movsxd rax,DWORD PTR [rsi+0xc]
   1400213f4:	lea    rdi,[rsi+rax*8+0x10]
   1400213f9:	movsxd rax,DWORD PTR [rsi+0x8]
   1400213fd:	lea    rbp,[rsi+rax*8+0x10]
   140021402:	cmp    rbp,rdi
   140021405:	je     0x140021433
   140021407:	nop    WORD PTR [rax+rax*1+0x0]
   140021410:	mov    rbx,QWORD PTR [rdi-0x8]
   140021414:	sub    rdi,0x8
   140021418:	test   rbx,rbx
   14002141b:	je     0x14002142e
   14002141d:	mov    rcx,rbx
   140021420:	call   QWORD PTR [rip+0xa472]        # 0x14002b898
   140021426:	mov    rcx,rbx
   140021429:	call   0x140029524
   14002142e:	cmp    rdi,rbp
   140021431:	jne    0x140021410
   140021433:	mov    rcx,rsi
   140021436:	call   QWORD PTR [rip+0xa434]        # 0x14002b870
   14002143c:	nop    DWORD PTR [rax+0x0]
   140021440:	mov    eax,DWORD PTR [rsp+0x60]
   140021444:	inc    DWORD PTR [rsp+0x60]
   140021448:	test   eax,eax
   14002144a:	jne    0x14002145d
   14002144c:	mov    rax,QWORD PTR [rsp+0x70]
   140021451:	cmp    QWORD PTR [rsp+0x68],rax
   140021456:	je     0x14002145d
   140021458:	mov    r12b,0x1
   14002145b:	jmp    0x140021460
   14002145d:	xor    r12b,r12b
   140021460:	test   r14b,r14b
   140021463:	jns    0x1400214dc
   140021465:	mov    rdi,QWORD PTR [rsp+0x250]
   14002146d:	btr    r14d,0x7
   140021472:	mov    eax,DWORD PTR [rdi]
   140021474:	test   eax,eax
   140021476:	je     0x14002148e
   140021478:	cmp    eax,0xffffffff
   14002147b:	je     0x1400214dc
   14002147d:	mov    eax,r13d
   140021480:	lock xadd DWORD PTR [rdi],eax
   140021484:	add    eax,0xffffffff
   140021487:	setne  al
   14002148a:	test   al,al
   14002148c:	jne    0x1400214dc
   14002148e:	mov    rdi,QWORD PTR [rsp+0x250]
   140021496:	movsxd rax,DWORD PTR [rdi+0xc]
   14002149a:	lea    rbx,[rdi+rax*8+0x10]
   14002149f:	movsxd rax,DWORD PTR [rdi+0x8]
   1400214a3:	lea    rbp,[rdi+rax*8+0x10]
   1400214a8:	cmp    rbp,rbx
   1400214ab:	je     0x1400214d3
   1400214ad:	nop    DWORD PTR [rax]
   1400214b0:	mov    rsi,QWORD PTR [rbx-0x8]
   1400214b4:	sub    rbx,0x8
   1400214b8:	test   rsi,rsi
   1400214bb:	je     0x1400214ce
   1400214bd:	mov    rcx,rsi
   1400214c0:	call   QWORD PTR [rip+0xa3d2]        # 0x14002b898
   1400214c6:	mov    rcx,rsi
   1400214c9:	call   0x140029524
   1400214ce:	cmp    rbx,rbp
   1400214d1:	jne    0x1400214b0
   1400214d3:	mov    rcx,rdi
   1400214d6:	call   QWORD PTR [rip+0xa394]        # 0x14002b870
   1400214dc:	test   r12b,r12b
   1400214df:	je     0x140021995
   1400214e5:	bt     r14d,0x8
   1400214ea:	mov    rax,QWORD PTR [rsp+0x68]
   1400214ef:	mov    r13,QWORD PTR [rax]
   1400214f2:	jae    0x140021570
   1400214f4:	mov    rdi,QWORD PTR [rsp+0x240]
   1400214fc:	btr    r14d,0x8
   140021501:	mov    eax,DWORD PTR [rdi]
   140021503:	test   eax,eax
   140021505:	je     0x14002151f
   140021507:	cmp    eax,0xffffffff
   14002150a:	je     0x140021570
   14002150c:	lock add DWORD PTR [rdi],0xffffffff
   140021510:	setne  al
   140021513:	test   al,al
   140021515:	jne    0x140021570
   140021517:	mov    rdi,QWORD PTR [rsp+0x240]
   14002151f:	movsxd rax,DWORD PTR [rdi+0xc]
   140021523:	lea    rbx,[rdi+rax*8+0x10]
   140021528:	movsxd rax,DWORD PTR [rdi+0x8]
   14002152c:	lea    rbp,[rdi+rax*8+0x10]
   140021531:	cmp    rbp,rbx
   140021534:	je     0x140021563
   140021536:	data16 nop WORD PTR [rax+rax*1+0x0]
   140021540:	mov    rsi,QWORD PTR [rbx-0x8]
   140021544:	sub    rbx,0x8
   140021548:	test   rsi,rsi
   14002154b:	je     0x14002155e
   14002154d:	mov    rcx,rsi
   140021550:	call   QWORD PTR [rip+0xa342]        # 0x14002b898
   140021556:	mov    rcx,rsi
   140021559:	call   0x140029524
   14002155e:	cmp    rbx,rbp
   140021561:	jne    0x140021540
   140021563:	mov    rcx,rdi
   140021566:	call   QWORD PTR [rip+0xa304]        # 0x14002b870
   14002156c:	nop    DWORD PTR [rax+0x0]
   140021570:	bt     r14d,0xa
   140021575:	mov    r12d,DWORD PTR [rsp+0x60]
   14002157a:	jae    0x1400215ec
   14002157c:	mov    rdi,QWORD PTR [rsp+0x260]
   140021584:	btr    r14d,0xa
   140021589:	mov    eax,DWORD PTR [rdi]
   14002158b:	test   eax,eax
   14002158d:	je     0x14002159f
   14002158f:	cmp    eax,0xffffffff
   140021592:	je     0x1400215ec
   140021594:	lock add DWORD PTR [rdi],0xffffffff
   140021598:	setne  al
   14002159b:	test   al,al
   14002159d:	jne    0x1400215ec
   14002159f:	mov    rdi,QWORD PTR [rsp+0x260]
   1400215a7:	movsxd rax,DWORD PTR [rdi+0xc]
   1400215ab:	lea    rbx,[rdi+rax*8+0x10]
   1400215b0:	movsxd rax,DWORD PTR [rdi+0x8]
   1400215b4:	lea    rbp,[rdi+rax*8+0x10]
   1400215b9:	cmp    rbp,rbx
   1400215bc:	je     0x1400215e3
   1400215be:	xchg   ax,ax
   1400215c0:	mov    rsi,QWORD PTR [rbx-0x8]
   1400215c4:	sub    rbx,0x8
   1400215c8:	test   rsi,rsi
   1400215cb:	je     0x1400215de
   1400215cd:	mov    rcx,rsi
   1400215d0:	call   QWORD PTR [rip+0xa2c2]        # 0x14002b898
   1400215d6:	mov    rcx,rsi
   1400215d9:	call   0x140029524
   1400215de:	cmp    rbx,rbp
   1400215e1:	jne    0x1400215c0
   1400215e3:	mov    rcx,rdi
   1400215e6:	call   QWORD PTR [rip+0xa284]        # 0x14002b870
   1400215ec:	test   r12d,r12d
   1400215ef:	je     0x1400218fb
   1400215f5:	lea    rcx,[rsp+0x1b8]
   1400215fd:	mov    rdx,r13
   140021600:	call   QWORD PTR [rip+0xa29a]        # 0x14002b8a0
   140021606:	lea    rcx,[rsp+0x398]
   14002160e:	mov    dl,0x2f
   140021610:	call   QWORD PTR [rip+0xa2b2]        # 0x14002b8c8
   140021616:	lea    rcx,[rsp+0xb8]
   14002161e:	mov    dl,0x5c
   140021620:	mov    rbx,rax
   140021623:	call   QWORD PTR [rip+0xa29f]        # 0x14002b8c8
   140021629:	mov    rcx,QWORD PTR [rsp+0x390]
   140021631:	lea    r8,[rsp+0x1b8]
   140021639:	lea    rdx,[rsp+0x280]
   140021641:	add    rcx,0x38
   140021645:	mov    rdi,rax
   140021648:	call   QWORD PTR [rip+0xa182]        # 0x14002b7d0
   14002164e:	movzx  r8d,WORD PTR [rbx]
   140021652:	movzx  edx,WORD PTR [rdi]
   140021655:	mov    r9d,0x1
   14002165b:	mov    rcx,rax
   14002165e:	call   QWORD PTR [rip+0x9efc]        # 0x14002b560
   140021664:	lea    rcx,[rsp+0x38]
   140021669:	mov    rdx,rax
   14002166c:	call   QWORD PTR [rip+0xa22e]        # 0x14002b8a0
   140021672:	lea    rcx,[rsp+0x280]
   14002167a:	call   QWORD PTR [rip+0xa218]        # 0x14002b898
   140021680:	lea    rcx,[rsp+0x1b8]
   140021688:	call   QWORD PTR [rip+0xa20a]        # 0x14002b898
   14002168e:	mov    edi,DWORD PTR [r13+0x8]
   140021692:	lea    rcx,[rsp+0x50]
   140021697:	call   QWORD PTR [rip+0xa1f3]        # 0x14002b890
   14002169d:	mov    rax,QWORD PTR [rsp+0x380]
   1400216a5:	cmp    DWORD PTR [rax+0x8],0x2
   1400216a9:	jne    0x140021787
   1400216af:	cmp    edi,0xffffffff
   1400216b2:	je     0x140021730
   1400216b4:	lea    rdx,[rsp+0x38]
   1400216b9:	lea    rcx,[rsp+0xa0]
   1400216c1:	call   0x140006180
   1400216c6:	mov    ebx,edi
   1400216c8:	sub    ebx,DWORD PTR [rax]
   1400216ca:	js     0x1400216ea
   1400216cc:	lea    rcx,[rsp+0xd8]
   1400216d4:	mov    dl,0x2b
   1400216d6:	call   QWORD PTR [rip+0xa1ec]        # 0x14002b8c8
   1400216dc:	lea    rcx,[rsp+0x50]
   1400216e1:	movzx  edx,WORD PTR [rax]
   1400216e4:	call   QWORD PTR [rip+0x9bc6]        # 0x14002b2b0
   1400216ea:	lea    rcx,[rsp+0x290]
   1400216f2:	mov    r8d,0xa
   1400216f8:	mov    edx,ebx
   1400216fa:	call   QWORD PTR [rip+0x9f80]        # 0x14002b680
   140021700:	lea    rcx,[rsp+0x50]
   140021705:	mov    rdx,rax
   140021708:	call   QWORD PTR [rip+0x9ad2]        # 0x14002b1e0
   14002170e:	lea    rcx,[rsp+0x290]
   140021716:	call   QWORD PTR [rip+0xa17c]        # 0x14002b898
   14002171c:	lea    rdx,[rsp+0x38]
   140021721:	lea    rcx,[rsp+0xa0]
   140021729:	call   0x140006180
   14002172e:	mov    DWORD PTR [rax],edi
   140021730:	lea    rdx,[rsp+0xc8]
   140021738:	lea    rcx,[rsp+0x38]
   14002173d:	call   QWORD PTR [rip+0x9b55]        # 0x14002b298
   140021743:	test   al,al
   140021745:	jne    0x140021777
   140021747:	test   r15b,r15b
   14002174a:	je     0x14002175f
   14002174c:	lea    rdx,[rsp+0x38]
   140021751:	lea    rcx,[rsp+0xf0]
   140021759:	call   QWORD PTR [rip+0xa151]        # 0x14002b8b0
   14002175f:	lea    rdx,[rsp+0x38]
   140021764:	lea    rcx,[rsp+0xc8]
   14002176c:	call   QWORD PTR [rip+0xa13e]        # 0x14002b8b0
   140021772:	xor    r15b,r15b
   140021775:	jmp    0x1400217be
   140021777:	lea    rcx,[rsp+0x38]
   14002177c:	call   QWORD PTR [rip+0x9c3e]        # 0x14002b3c0
   140021782:	xor    r15b,r15b
   140021785:	jmp    0x1400217be
   140021787:	cmp    edi,0xffffffff
   14002178a:	je     0x1400217be
   14002178c:	lea    rcx,[rsp+0x278]
   140021794:	mov    r8d,0xa
   14002179a:	mov    edx,edi
   14002179c:	call   QWORD PTR [rip+0x9ede]        # 0x14002b680
   1400217a2:	lea    rcx,[rsp+0x50]
   1400217a7:	mov    rdx,rax
   1400217aa:	call   QWORD PTR [rip+0xa100]        # 0x14002b8b0
   1400217b0:	lea    rcx,[rsp+0x278]
   1400217b8:	call   QWORD PTR [rip+0xa0da]        # 0x14002b898
   1400217be:	lea    rdx,[rip+0xc93b]        # 0x14002e100
   1400217c5:	lea    rcx,[rsp+0x20]
   1400217ca:	call   QWORD PTR [rip+0x9de0]        # 0x14002b5b0
   1400217d0:	lea    rcx,[rsp+0x38]
   1400217d5:	call   QWORD PTR [rip+0x9a1d]        # 0x14002b1f8
   1400217db:	test   al,al
   1400217dd:	jne    0x14002180f
   1400217df:	lea    rdx,[rip+0xc90a]        # 0x14002e0f0
   1400217e6:	lea    rcx,[rsp+0x20]
   1400217eb:	call   QWORD PTR [rip+0x9dbf]        # 0x14002b5b0
   1400217f1:	lea    rdx,[rsp+0x38]
   1400217f6:	mov    rcx,rax
   1400217f9:	call   QWORD PTR [rip+0x9da9]        # 0x14002b5a8
   1400217ff:	lea    rdx,[rip+0xbe66]        # 0x14002d66c
   140021806:	mov    rcx,rax
   140021809:	call   QWORD PTR [rip+0x9da1]        # 0x14002b5b0
   14002180f:	lea    rcx,[rsp+0x50]
   140021814:	call   QWORD PTR [rip+0x99de]        # 0x14002b1f8
   14002181a:	test   al,al
   14002181c:	jne    0x14002184e
   14002181e:	lea    rdx,[rip+0xc8c3]        # 0x14002e0e8
   140021825:	lea    rcx,[rsp+0x20]
   14002182a:	call   QWORD PTR [rip+0x9d80]        # 0x14002b5b0
   140021830:	lea    rdx,[rsp+0x50]
   140021835:	mov    rcx,rax
   140021838:	call   QWORD PTR [rip+0x9d6a]        # 0x14002b5a8
   14002183e:	lea    rdx,[rip+0xbe27]        # 0x14002d66c
   140021845:	mov    rcx,rax
   140021848:	call   QWORD PTR [rip+0x9d62]        # 0x14002b5b0
   14002184e:	lea    rdx,[rip+0xc88f]        # 0x14002e0e4
   140021855:	lea    rcx,[rsp+0x20]
   14002185a:	call   QWORD PTR [rip+0x9d50]        # 0x14002b5b0
   140021860:	lea    rcx,[rsp+0x50]
   140021865:	call   QWORD PTR [rip+0xa02d]        # 0x14002b898
   14002186b:	lea    rcx,[rsp+0x38]
   140021870:	call   QWORD PTR [rip+0xa022]        # 0x14002b898
   140021876:	dec    DWORD PTR [rsp+0x60]
   14002187a:	bt     r14d,0x9
   14002187f:	jae    0x140021570
   140021885:	mov    rdi,QWORD PTR [rsp+0x2b8]
   14002188d:	btr    r14d,0x9
   140021892:	mov    eax,DWORD PTR [rdi]
   140021894:	test   eax,eax
   140021896:	je     0x1400218b0
   140021898:	cmp    eax,0xffffffff
   14002189b:	je     0x140021570
   1400218a1:	lock add DWORD PTR [rdi],0xffffffff
   1400218a5:	setne  al
   1400218a8:	test   al,al
   1400218aa:	jne    0x140021570
   1400218b0:	mov    rdi,QWORD PTR [rsp+0x2b8]
   1400218b8:	movsxd rax,DWORD PTR [rdi+0xc]
   1400218bc:	lea    rbx,[rdi+rax*8+0x10]
   1400218c1:	movsxd rax,DWORD PTR [rdi+0x8]
   1400218c5:	lea    rbp,[rdi+rax*8+0x10]
   1400218ca:	cmp    rbp,rbx
   1400218cd:	je     0x140021563
   1400218d3:	mov    rsi,QWORD PTR [rbx-0x8]
   1400218d7:	sub    rbx,0x8
   1400218db:	test   rsi,rsi
   1400218de:	je     0x1400218f1
   1400218e0:	mov    rcx,rsi
   1400218e3:	call   QWORD PTR [rip+0x9faf]        # 0x14002b898
   1400218e9:	mov    rcx,rsi
   1400218ec:	call   0x140029524
   1400218f1:	cmp    rbx,rbp
   1400218f4:	jne    0x1400218d3
   1400218f6:	jmp    0x140021563
   1400218fb:	add    QWORD PTR [rsp+0x68],0x8
   140021901:	test   r14b,0x40
   140021905:	je     0x14002191e
   140021907:	mov    rdi,QWORD PTR [rsp+0x288]
   14002190f:	and    r14d,0xffffffbf
   140021913:	mov    eax,DWORD PTR [rdi]
   140021915:	test   eax,eax
   140021917:	je     0x140021945
   140021919:	cmp    eax,0xffffffff
   14002191c:	jne    0x140021927
   14002191e:	or     r13,0xffffffffffffffff
   140021922:	jmp    0x140021440
   140021927:	lock add DWORD PTR [rdi],0xffffffff
   14002192b:	setne  al
   14002192e:	mov    r13,0xffffffffffffffff
   140021935:	test   al,al
   140021937:	jne    0x140021440
   14002193d:	mov    rdi,QWORD PTR [rsp+0x288]
   140021945:	movsxd rax,DWORD PTR [rdi+0xc]
   140021949:	lea    rbx,[rdi+rax*8+0x10]
   14002194e:	movsxd rax,DWORD PTR [rdi+0x8]
   140021952:	lea    rbp,[rdi+rax*8+0x10]
   140021957:	cmp    rbp,rbx
   14002195a:	je     0x140021983
   14002195c:	nop    DWORD PTR [rax+0x0]
   140021960:	mov    rsi,QWORD PTR [rbx-0x8]
   140021964:	sub    rbx,0x8
   140021968:	test   rsi,rsi
   14002196b:	je     0x14002197e
   14002196d:	mov    rcx,rsi
   140021970:	call   QWORD PTR [rip+0x9f22]        # 0x14002b898
   140021976:	mov    rcx,rsi
   140021979:	call   0x140029524
   14002197e:	cmp    rbx,rbp
   140021981:	jne    0x140021960
   140021983:	mov    rcx,rdi
   140021986:	call   QWORD PTR [rip+0x9ee4]        # 0x14002b870
   14002198c:	or     r13,0xffffffffffffffff
   140021990:	jmp    0x140021440
   140021995:	mov    rsi,QWORD PTR [rsp+0x58]
   14002199a:	mov    eax,DWORD PTR [rsi]
   14002199c:	test   eax,eax
   14002199e:	je     0x1400219bb
   1400219a0:	cmp    eax,0xffffffff
   1400219a3:	je     0x1400219fe
   1400219a5:	mov    eax,r13d
   1400219a8:	lock xadd DWORD PTR [rsi],eax
   1400219ac:	add    eax,0xffffffff
   1400219af:	setne  al
   1400219b2:	test   al,al
   1400219b4:	jne    0x1400219fe
   1400219b6:	mov    rsi,QWORD PTR [rsp+0x58]
   1400219bb:	movsxd rax,DWORD PTR [rsi+0xc]
   1400219bf:	lea    rdi,[rsi+rax*8+0x10]
   1400219c4:	movsxd rax,DWORD PTR [rsi+0x8]
   1400219c8:	lea    rbp,[rsi+rax*8+0x10]
   1400219cd:	cmp    rbp,rdi
   1400219d0:	je     0x1400219f5
   1400219d2:	mov    rbx,QWORD PTR [rdi-0x8]
   1400219d6:	sub    rdi,0x8
   1400219da:	test   rbx,rbx
   1400219dd:	je     0x1400219f0
   1400219df:	mov    rcx,rbx
   1400219e2:	call   QWORD PTR [rip+0x9eb0]        # 0x14002b898
   1400219e8:	mov    rcx,rbx
   1400219eb:	call   0x140029524
   1400219f0:	cmp    rdi,rbp
   1400219f3:	jne    0x1400219d2
   1400219f5:	mov    rcx,rsi
   1400219f8:	call   QWORD PTR [rip+0x9e72]        # 0x14002b870
   1400219fe:	lea    rcx,[rsp+0xc8]
   140021a06:	call   QWORD PTR [rip+0x9e8c]        # 0x14002b898
   140021a0c:	mov    rsi,QWORD PTR [rsp+0x230]
   140021a14:	mov    r15,QWORD PTR [rsp+0x380]
   140021a1c:	lea    rdx,[rsi+0x10]
   140021a20:	lea    rcx,[rsp+0x1d8]
   140021a28:	call   QWORD PTR [rip+0x9e72]        # 0x14002b8a0
   140021a2e:	lea    rdx,[rsp+0x1d8]
   140021a36:	lea    rcx,[rsp+0x298]
   140021a3e:	call   0x14001bdb0
   140021a43:	lea    rdx,[rip+0xc686]        # 0x14002e0d0
   140021a4a:	lea    rcx,[rsp+0x20]
   140021a4f:	mov    rdi,rax
   140021a52:	call   QWORD PTR [rip+0x9b58]        # 0x14002b5b0
   140021a58:	mov    rdx,rdi
   140021a5b:	mov    rcx,rax
   140021a5e:	call   QWORD PTR [rip+0x9b44]        # 0x14002b5a8
   140021a64:	lea    rdx,[rip+0xbbbd]        # 0x14002d628
   140021a6b:	mov    rcx,rax
   140021a6e:	call   QWORD PTR [rip+0x9b3c]        # 0x14002b5b0
   140021a74:	lea    rcx,[rsp+0x298]
   140021a7c:	call   QWORD PTR [rip+0x9e16]        # 0x14002b898
   140021a82:	lea    rcx,[rsp+0x1d8]
   140021a8a:	call   QWORD PTR [rip+0x9e08]        # 0x14002b898
   140021a90:	lea    rdx,[rsi+0x18]
   140021a94:	lea    rcx,[rsp+0x190]
   140021a9c:	call   QWORD PTR [rip+0x9dfe]        # 0x14002b8a0
   140021aa2:	lea    rcx,[rsp+0x190]
   140021aaa:	call   QWORD PTR [rip+0x9748]        # 0x14002b1f8
   140021ab0:	lea    rcx,[rsp+0x190]
   140021ab8:	test   al,al
   140021aba:	sete   dil
   140021abe:	call   QWORD PTR [rip+0x9dd4]        # 0x14002b898
   140021ac4:	test   dil,dil
   140021ac7:	je     0x140021b3d
   140021ac9:	lea    rdx,[rsi+0x18]
   140021acd:	lea    rcx,[rsp+0x218]
   140021ad5:	call   QWORD PTR [rip+0x9dc5]        # 0x14002b8a0
   140021adb:	lea    rdx,[rsp+0x218]
   140021ae3:	lea    rcx,[rsp+0x2c8]
   140021aeb:	call   0x14001bdb0
   140021af0:	lea    rdx,[rip+0xc5c1]        # 0x14002e0b8
   140021af7:	lea    rcx,[rsp+0x20]
   140021afc:	mov    rdi,rax
   140021aff:	call   QWORD PTR [rip+0x9aab]        # 0x14002b5b0
   140021b05:	mov    rdx,rdi
   140021b08:	mov    rcx,rax
   140021b0b:	call   QWORD PTR [rip+0x9a97]        # 0x14002b5a8
   140021b11:	lea    rdx,[rip+0xc590]        # 0x14002e0a8
   140021b18:	mov    rcx,rax
   140021b1b:	call   QWORD PTR [rip+0x9a8f]        # 0x14002b5b0
   140021b21:	lea    rcx,[rsp+0x2c8]
   140021b29:	call   QWORD PTR [rip+0x9d69]        # 0x14002b898
   140021b2f:	lea    rcx,[rsp+0x218]
   140021b37:	call   QWORD PTR [rip+0x9d5b]        # 0x14002b898
   140021b3d:	lea    rdx,[rsi+0x20]
   140021b41:	lea    rcx,[rsp+0x1a0]
   140021b49:	call   QWORD PTR [rip+0x9d51]        # 0x14002b8a0
   140021b4f:	lea    rcx,[rsp+0x1a0]
   140021b57:	call   QWORD PTR [rip+0x969b]        # 0x14002b1f8
   140021b5d:	lea    rcx,[rsp+0x1a0]
   140021b65:	test   al,al
   140021b67:	sete   dil
   140021b6b:	call   QWORD PTR [rip+0x9d27]        # 0x14002b898
   140021b71:	test   dil,dil
   140021b74:	je     0x140021bea
   140021b76:	lea    rdx,[rsi+0x20]
   140021b7a:	lea    rcx,[rsp+0x1e8]
   140021b82:	call   QWORD PTR [rip+0x9d18]        # 0x14002b8a0
   140021b88:	lea    rdx,[rsp+0x1e8]
   140021b90:	lea    rcx,[rsp+0x2a8]
   140021b98:	call   0x14001bdb0
   140021b9d:	lea    rdx,[rip+0xc4ec]        # 0x14002e090
   140021ba4:	lea    rcx,[rsp+0x20]
   140021ba9:	mov    rdi,rax
   140021bac:	call   QWORD PTR [rip+0x99fe]        # 0x14002b5b0
   140021bb2:	mov    rdx,rdi
   140021bb5:	mov    rcx,rax
   140021bb8:	call   QWORD PTR [rip+0x99ea]        # 0x14002b5a8
   140021bbe:	lea    rdx,[rip+0xc4bb]        # 0x14002e080
   140021bc5:	mov    rcx,rax
   140021bc8:	call   QWORD PTR [rip+0x99e2]        # 0x14002b5b0
   140021bce:	lea    rcx,[rsp+0x2a8]
   140021bd6:	call   QWORD PTR [rip+0x9cbc]        # 0x14002b898
   140021bdc:	lea    rcx,[rsp+0x1e8]
   140021be4:	call   QWORD PTR [rip+0x9cae]        # 0x14002b898
   140021bea:	lea    rdx,[rsi+0x28]
   140021bee:	lea    rcx,[rsp+0x1b0]
   140021bf6:	call   QWORD PTR [rip+0x9ca4]        # 0x14002b8a0
   140021bfc:	lea    rcx,[rsp+0x1b0]
   140021c04:	call   QWORD PTR [rip+0x95ee]        # 0x14002b1f8
   140021c0a:	lea    rcx,[rsp+0x1b0]
   140021c12:	test   al,al
   140021c14:	sete   dil
   140021c18:	call   QWORD PTR [rip+0x9c7a]        # 0x14002b898
   140021c1e:	test   dil,dil
   140021c21:	je     0x140021c97
   140021c23:	lea    rdx,[rsi+0x28]
   140021c27:	lea    rcx,[rsp+0x208]
   140021c2f:	call   QWORD PTR [rip+0x9c6b]        # 0x14002b8a0
   140021c35:	lea    rdx,[rsp+0x208]
   140021c3d:	lea    rcx,[rsp+0x268]
   140021c45:	call   0x14001bdb0
   140021c4a:	lea    rdx,[rip+0xc417]        # 0x14002e068
   140021c51:	lea    rcx,[rsp+0x20]
   140021c56:	mov    rdi,rax
   140021c59:	call   QWORD PTR [rip+0x9951]        # 0x14002b5b0
   140021c5f:	mov    rdx,rdi
   140021c62:	mov    rcx,rax
   140021c65:	call   QWORD PTR [rip+0x993d]        # 0x14002b5a8
   140021c6b:	lea    rdx,[rip+0xc3e6]        # 0x14002e058
   140021c72:	mov    rcx,rax
   140021c75:	call   QWORD PTR [rip+0x9935]        # 0x14002b5b0
   140021c7b:	lea    rcx,[rsp+0x268]
   140021c83:	call   QWORD PTR [rip+0x9c0f]        # 0x14002b898
   140021c89:	lea    rcx,[rsp+0x208]
   140021c91:	call   QWORD PTR [rip+0x9c01]        # 0x14002b898
   140021c97:	lea    rdx,[rsi+0x40]
   140021c9b:	lea    rcx,[rsp+0x1c0]
   140021ca3:	call   QWORD PTR [rip+0x9bf7]        # 0x14002b8a0
   140021ca9:	lea    rcx,[rsp+0x1c0]
   140021cb1:	call   QWORD PTR [rip+0x9541]        # 0x14002b1f8
   140021cb7:	lea    rcx,[rsp+0x1c0]
   140021cbf:	test   al,al
   140021cc1:	sete   dil
   140021cc5:	call   QWORD PTR [rip+0x9bcd]        # 0x14002b898
   140021ccb:	test   dil,dil
   140021cce:	je     0x140021d44
   140021cd0:	lea    rdx,[rsi+0x40]
   140021cd4:	lea    rcx,[rsp+0x1c8]
   140021cdc:	call   QWORD PTR [rip+0x9bbe]        # 0x14002b8a0
   140021ce2:	lea    rdx,[rsp+0x1c8]
   140021cea:	lea    rcx,[rsp+0x248]
   140021cf2:	call   0x14001bdb0
   140021cf7:	lea    rdx,[rip+0xc342]        # 0x14002e040
   140021cfe:	lea    rcx,[rsp+0x20]
   140021d03:	mov    rdi,rax
   140021d06:	call   QWORD PTR [rip+0x98a4]        # 0x14002b5b0
   140021d0c:	mov    rdx,rdi
   140021d0f:	mov    rcx,rax
   140021d12:	call   QWORD PTR [rip+0x9890]        # 0x14002b5a8
   140021d18:	lea    rdx,[rip+0xc309]        # 0x14002e028
   140021d1f:	mov    rcx,rax
   140021d22:	call   QWORD PTR [rip+0x9888]        # 0x14002b5b0
   140021d28:	lea    rcx,[rsp+0x248]
   140021d30:	call   QWORD PTR [rip+0x9b62]        # 0x14002b898
   140021d36:	lea    rcx,[rsp+0x1c8]
   140021d3e:	call   QWORD PTR [rip+0x9b54]        # 0x14002b898
   140021d44:	lea    rdx,[rsi+0x48]
   140021d48:	lea    rcx,[rsp+0x1d0]
   140021d50:	call   QWORD PTR [rip+0x9b4a]        # 0x14002b8a0
   140021d56:	lea    rcx,[rsp+0x1d0]
   140021d5e:	call   QWORD PTR [rip+0x9494]        # 0x14002b1f8
   140021d64:	lea    rcx,[rsp+0x1d0]
   140021d6c:	test   al,al
   140021d6e:	sete   dil
   140021d72:	call   QWORD PTR [rip+0x9b20]        # 0x14002b898
   140021d78:	test   dil,dil
   140021d7b:	je     0x140021df1
   140021d7d:	lea    rdx,[rsi+0x48]
   140021d81:	lea    rcx,[rsp+0x178]
   140021d89:	call   QWORD PTR [rip+0x9b11]        # 0x14002b8a0
   140021d8f:	lea    rdx,[rsp+0x178]
   140021d97:	lea    rcx,[rsp+0x258]
   140021d9f:	call   0x14001bdb0
   140021da4:	lea    rdx,[rip+0xc25d]        # 0x14002e008
   140021dab:	lea    rcx,[rsp+0x20]
   140021db0:	mov    rdi,rax
   140021db3:	call   QWORD PTR [rip+0x97f7]        # 0x14002b5b0
   140021db9:	mov    rdx,rdi
   140021dbc:	mov    rcx,rax
   140021dbf:	call   QWORD PTR [rip+0x97e3]        # 0x14002b5a8
   140021dc5:	lea    rdx,[rip+0xc224]        # 0x14002dff0
   140021dcc:	mov    rcx,rax
   140021dcf:	call   QWORD PTR [rip+0x97db]        # 0x14002b5b0
   140021dd5:	lea    rcx,[rsp+0x258]
   140021ddd:	call   QWORD PTR [rip+0x9ab5]        # 0x14002b898
   140021de3:	lea    rcx,[rsp+0x178]
   140021deb:	call   QWORD PTR [rip+0x9aa7]        # 0x14002b898
   140021df1:	lea    rdx,[rip+0xc1e0]        # 0x14002dfd8
   140021df8:	lea    rcx,[rsp+0x20]
   140021dfd:	call   QWORD PTR [rip+0x97ad]        # 0x14002b5b0
   140021e03:	mov    edx,DWORD PTR [rsi+0x70]
   140021e06:	test   edx,edx
   140021e08:	jne    0x140021e13
   140021e0a:	lea    rdx,[rip+0xc1af]        # 0x14002dfc0
   140021e11:	jmp    0x140021e2d
   140021e13:	cmp    edx,0x2
   140021e16:	jne    0x140021e21
   140021e18:	lea    rdx,[rip+0xc189]        # 0x14002dfa8
   140021e1f:	jmp    0x140021e2d
   140021e21:	cmp    edx,0x3
   140021e24:	jne    0x140021e38
   140021e26:	lea    rdx,[rip+0xc163]        # 0x14002df90
   140021e2d:	lea    rcx,[rsp+0x20]
   140021e32:	call   QWORD PTR [rip+0x9778]        # 0x14002b5b0
   140021e38:	cmp    BYTE PTR [rsi+0x74],0x0
   140021e3c:	je     0x140021efd
   140021e42:	lea    rdx,[rip+0xbddb]        # 0x14002dc24
   140021e49:	lea    rcx,[rsp+0x20]
   140021e4e:	call   QWORD PTR [rip+0x975c]        # 0x14002b5b0
   140021e54:	lea    rdx,[rsi+0x50]
   140021e58:	lea    rcx,[rsp+0xa8]
   140021e60:	call   0x140001700
   140021e65:	lea    rcx,[rsp+0xa8]
   140021e6d:	xor    edi,edi
   140021e6f:	call   QWORD PTR [rip+0x938b]        # 0x14002b200
   140021e75:	test   eax,eax
   140021e77:	jle    0x140021edc
   140021e79:	nop    DWORD PTR [rax+0x0]
   140021e80:	lea    rdx,[rip+0xc0e9]        # 0x14002df70
   140021e87:	lea    rcx,[rsp+0x20]
   140021e8c:	call   QWORD PTR [rip+0x971e]        # 0x14002b5b0
   140021e92:	lea    rcx,[rsp+0xa8]
   140021e9a:	mov    edx,edi
   140021e9c:	call   QWORD PTR [rip+0x936e]        # 0x14002b210
   140021ea2:	lea    rdx,[rip+0xc0b7]        # 0x14002df60
   140021ea9:	lea    rcx,[rsp+0x20]
   140021eae:	mov    r8,rax
   140021eb1:	call   0x14001c070
   140021eb6:	lea    rdx,[rip+0xc093]        # 0x14002df50
   140021ebd:	lea    rcx,[rsp+0x20]
   140021ec2:	call   QWORD PTR [rip+0x96e8]        # 0x14002b5b0
   140021ec8:	lea    rcx,[rsp+0xa8]
   140021ed0:	inc    edi
   140021ed2:	call   QWORD PTR [rip+0x9328]        # 0x14002b200
   140021ed8:	cmp    edi,eax
   140021eda:	jl     0x140021e80
   140021edc:	lea    rdx,[rip+0xc05d]        # 0x14002df40
   140021ee3:	lea    rcx,[rsp+0x20]
   140021ee8:	call   QWORD PTR [rip+0x96c2]        # 0x14002b5b0
   140021eee:	lea    rcx,[rsp+0xa8]
   140021ef6:	call   0x1400017b0
   140021efb:	jmp    0x140021f5f
   140021efd:	lea    rcx,[rsi+0x50]
   140021f01:	call   QWORD PTR [rip+0x92f9]        # 0x14002b200
   140021f07:	test   eax,eax
   140021f09:	jg     0x140021f1b
   140021f0b:	lea    rcx,[rsp+0xd0]
   140021f13:	call   QWORD PTR [rip+0x9977]        # 0x14002b890
   140021f19:	jmp    0x140021f38
   140021f1b:	lea    rcx,[rsi+0x50]
   140021f1f:	xor    edx,edx
   140021f21:	call   QWORD PTR [rip+0x92e9]        # 0x14002b210
   140021f27:	lea    rcx,[rsp+0xd0]
   140021f2f:	mov    rdx,rax
   140021f32:	call   QWORD PTR [rip+0x9968]        # 0x14002b8a0
   140021f38:	lea    r8,[rsp+0xd0]
   140021f40:	lea    rdx,[rip+0xbfe9]        # 0x14002df30
   140021f47:	lea    rcx,[rsp+0x20]
   140021f4c:	call   0x14001c070
   140021f51:	lea    rcx,[rsp+0xd0]
   140021f59:	call   QWORD PTR [rip+0x9939]        # 0x14002b898
   140021f5f:	lea    rdx,[rip+0xbfba]        # 0x14002df20
   140021f66:	lea    rcx,[rsp+0x20]
   140021f6b:	call   QWORD PTR [rip+0x963f]        # 0x14002b5b0
   140021f71:	lea    rdx,[rsp+0xe0]
   140021f79:	lea    rcx,[rsp+0x160]
   140021f81:	call   QWORD PTR [rip+0x9851]        # 0x14002b7d8
   140021f87:	lea    r8,[rsi+0x38]
   140021f8b:	lea    rdx,[rip+0xbf9e]        # 0x14002df30
   140021f92:	lea    rcx,[rsp+0x20]
   140021f97:	mov    r9,rax
   140021f9a:	call   0x14001fc10
   140021f9f:	lea    rdx,[rsi+0x30]
   140021fa3:	lea    rcx,[rsp+0x170]
   140021fab:	call   QWORD PTR [rip+0x98ef]        # 0x14002b8a0
   140021fb1:	lea    rcx,[rsp+0x170]
   140021fb9:	call   QWORD PTR [rip+0x9239]        # 0x14002b1f8
   140021fbf:	lea    rcx,[rsp+0x170]
   140021fc7:	test   al,al
   140021fc9:	sete   dil
   140021fcd:	call   QWORD PTR [rip+0x98c5]        # 0x14002b898
   140021fd3:	test   dil,dil
   140021fd6:	je     0x14002202b
   140021fd8:	lea    rdx,[rsi+0x30]
   140021fdc:	lea    rcx,[rsp+0x198]
   140021fe4:	call   QWORD PTR [rip+0x98b6]        # 0x14002b8a0
   140021fea:	lea    rdx,[rip+0xbf17]        # 0x14002df08
   140021ff1:	lea    rcx,[rsp+0x20]
   140021ff6:	call   QWORD PTR [rip+0x95b4]        # 0x14002b5b0
   140021ffc:	lea    rdx,[rsp+0x198]
   140022004:	mov    rcx,rax
   140022007:	call   QWORD PTR [rip+0x959b]        # 0x14002b5a8
   14002200d:	lea    rdx,[rip+0xbee4]        # 0x14002def8
   140022014:	mov    rcx,rax
   140022017:	call   QWORD PTR [rip+0x9593]        # 0x14002b5b0
   14002201d:	lea    rcx,[rsp+0x198]
   140022025:	call   QWORD PTR [rip+0x986d]        # 0x14002b898
   14002202b:	lea    rdx,[rip+0xbeb6]        # 0x14002dee8
   140022032:	lea    rcx,[rsp+0x20]
   140022037:	call   QWORD PTR [rip+0x9573]        # 0x14002b5b0
   14002203d:	mov    eax,DWORD PTR [rsp+0x120]
   140022044:	dec    eax
   140022046:	mov    DWORD PTR [rsp+0x120],eax
   14002204d:	jmp    0x140021200
   140022052:	mov    rcx,QWORD PTR [rsp+0x128]
   14002205a:	mov    rdx,QWORD PTR [rsp+0x130]
   140022062:	add    rcx,0x8
   140022066:	mov    QWORD PTR [rsp+0x128],rcx
   14002206e:	jmp    0x1400211e0
   140022073:	mov    rsi,QWORD PTR [rsp+0x118]
   14002207b:	mov    eax,DWORD PTR [rsi]
   14002207d:	test   eax,eax
   14002207f:	je     0x14002209f
   140022081:	cmp    eax,0xffffffff
   140022084:	je     0x1400220eb
   140022086:	mov    eax,r13d
   140022089:	lock xadd DWORD PTR [rsi],eax
   14002208d:	add    eax,0xffffffff
   140022090:	setne  al
   140022093:	test   al,al
   140022095:	jne    0x1400220eb
   140022097:	mov    rsi,QWORD PTR [rsp+0x118]
   14002209f:	movsxd rax,DWORD PTR [rsi+0xc]
   1400220a3:	lea    rdi,[rsi+rax*8+0x10]
   1400220a8:	movsxd rax,DWORD PTR [rsi+0x8]
   1400220ac:	lea    rbp,[rsi+rax*8+0x10]
   1400220b1:	cmp    rbp,rdi
   1400220b4:	je     0x1400220e2
   1400220b6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400220c0:	mov    rbx,QWORD PTR [rdi-0x8]
   1400220c4:	sub    rdi,0x8
   1400220c8:	test   rbx,rbx
   1400220cb:	je     0x1400220dd
   1400220cd:	mov    rcx,rbx
   1400220d0:	call   0x140001ea0
   1400220d5:	mov    rcx,rbx
   1400220d8:	call   0x140029524
   1400220dd:	cmp    rdi,rbp
   1400220e0:	jne    0x1400220c0
   1400220e2:	mov    rcx,rsi
   1400220e5:	call   QWORD PTR [rip+0x9785]        # 0x14002b870
   1400220eb:	lea    rdx,[rip+0xbde6]        # 0x14002ded8
   1400220f2:	lea    rcx,[rsp+0x20]
   1400220f7:	call   QWORD PTR [rip+0x94b3]        # 0x14002b5b0
   1400220fd:	mov    eax,DWORD PTR [rsp+0x140]
   140022104:	mov    rbx,QWORD PTR [rsp+0x1a8]
   14002210c:	dec    eax
   14002210e:	mov    DWORD PTR [rsp+0x140],eax
   140022115:	jmp    0x1400210b0
   14002211a:	mov    rbx,QWORD PTR [rsp+0x148]
   140022122:	mov    rcx,QWORD PTR [rsp+0x150]
   14002212a:	add    rbx,0x8
   14002212e:	mov    QWORD PTR [rsp+0x148],rbx
   140022136:	jmp    0x140021093
   14002213b:	lea    rcx,[rsp+0x138]
   140022143:	call   0x1400017b0
   140022148:	lea    rdx,[rip+0xbd81]        # 0x14002ded0
   14002214f:	lea    rcx,[rsp+0x20]
   140022154:	call   QWORD PTR [rip+0x9456]        # 0x14002b5b0
   14002215a:	lea    rcx,[rsp+0xf0]
   140022162:	call   QWORD PTR [rip+0x9730]        # 0x14002b898
   140022168:	mov    rcx,QWORD PTR [rsp+0xa0]
   140022170:	mov    eax,DWORD PTR [rcx+0x10]
   140022173:	test   eax,eax
   140022175:	je     0x140022196
   140022177:	cmp    eax,0xffffffff
   14002217a:	je     0x1400221a3
   14002217c:	mov    eax,r13d
   14002217f:	lock xadd DWORD PTR [rcx+0x10],eax
   140022184:	add    eax,0xffffffff
   140022187:	setne  al
   14002218a:	test   al,al
   14002218c:	jne    0x1400221a3
   14002218e:	mov    rcx,QWORD PTR [rsp+0xa0]
   140022196:	lea    rdx,[rip+0xfffffffffffdf3b3]        # 0x140001550
   14002219d:	call   QWORD PTR [rip+0x96c5]        # 0x14002b868
   1400221a3:	lea    rcx,[rsp+0x30]
   1400221a8:	call   0x1400017b0
   1400221ad:	mov    rcx,QWORD PTR [rsp+0x98]
   1400221b5:	mov    eax,DWORD PTR [rcx+0x10]
   1400221b8:	test   eax,eax
   1400221ba:	je     0x1400221da
   1400221bc:	cmp    eax,0xffffffff
   1400221bf:	je     0x1400221e7
   1400221c1:	lock xadd DWORD PTR [rcx+0x10],r13d
   1400221c7:	add    r13d,0xffffffff
   1400221cb:	setne  al
   1400221ce:	test   al,al
   1400221d0:	jne    0x1400221e7
   1400221d2:	mov    rcx,QWORD PTR [rsp+0x98]
   1400221da:	lea    rdx,[rip+0xffffffffffffde0f]        # 0x14001fff0
   1400221e1:	call   QWORD PTR [rip+0x9681]        # 0x14002b868
   1400221e7:	lea    rcx,[rsp+0xe0]
   1400221ef:	call   QWORD PTR [rip+0x91ab]        # 0x14002b3a0
   1400221f5:	lea    rcx,[rsp+0x48]
   1400221fa:	call   0x1400017b0
   1400221ff:	lea    rcx,[rsp+0x40]
   140022204:	call   QWORD PTR [rip+0x968e]        # 0x14002b898
   14002220a:	lea    rcx,[rsp+0x20]
   14002220f:	call   QWORD PTR [rip+0x938b]        # 0x14002b5a0
   140022215:	mov    rbx,QWORD PTR [rsp+0x388]
   14002221d:	mov    al,0x1
   14002221f:	add    rsp,0x340
   140022226:	pop    r15
   140022228:	pop    r14
   14002222a:	pop    r13
   14002222c:	pop    r12
   14002222e:	pop    rdi
   14002222f:	pop    rsi
   140022230:	pop    rbp
   140022231:	ret    
   140022232:	int3   
   140022233:	int3   
   140022234:	int3   
   140022235:	int3   
   140022236:	int3   
   140022237:	int3   
   140022238:	int3   
   140022239:	int3   
   14002223a:	int3   
   14002223b:	int3   
   14002223c:	int3   
   14002223d:	int3   
   14002223e:	int3   
   14002223f:	int3   
   140022240:	mov    QWORD PTR [rsp+0x10],rbx
   140022245:	push   rdi
   140022246:	sub    rsp,0x70
   14002224a:	lea    rcx,[rsp+0x40]
   14002224f:	call   QWORD PTR [rip+0x963b]        # 0x14002b890
   140022255:	lea    rcx,[rsp+0x48]
   14002225a:	call   QWORD PTR [rip+0x9630]        # 0x14002b890
   140022260:	or     rcx,0xffffffffffffffff
   140022264:	lea    rdx,[rip+0xaf29]        # 0x14002d194
   14002226b:	mov    QWORD PTR [rsp+0x38],rdx
   140022270:	mov    rdi,rdx
   140022273:	xor    eax,eax
   140022275:	repnz scas al,BYTE PTR es:[rdi]
   140022277:	xor    ebx,ebx
   140022279:	lea    rdx,[rsp+0x30]
   14002227e:	not    rcx
   140022281:	mov    QWORD PTR [rsp+0x50],rbx
   140022286:	mov    QWORD PTR [rsp+0x58],rbx
   14002228b:	dec    rcx
   14002228e:	mov    DWORD PTR [rsp+0x64],0xffffffff
   140022296:	mov    DWORD PTR [rsp+0x30],ecx
   14002229a:	lea    rcx,[rsp+0x40]
   14002229f:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   1400222a4:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   1400222aa:	call   QWORD PTR [rip+0x9260]        # 0x14002b510
   1400222b0:	lea    r8,[rip+0xbf59]        # 0x14002e210
   1400222b7:	lea    rdx,[rip+0xb0f2]        # 0x14002d3b0
   1400222be:	lea    rcx,[rsp+0x80]
   1400222c6:	xor    r9d,r9d
   1400222c9:	mov    DWORD PTR [rsp+0x60],ebx
   1400222cd:	mov    DWORD PTR [rsp+0x64],ebx
   1400222d1:	mov    DWORD PTR [rsp+0x20],0xffffffff
   1400222d9:	call   QWORD PTR [rip+0x95c9]        # 0x14002b8a8
   1400222df:	lea    rdx,[rsp+0x80]
   1400222e7:	lea    rcx,[rsp+0x48]
   1400222ec:	call   QWORD PTR [rip+0x95be]        # 0x14002b8b0
   1400222f2:	lea    rcx,[rsp+0x80]
   1400222fa:	call   QWORD PTR [rip+0x9598]        # 0x14002b898
   140022300:	lea    rdx,[rip+0xffffffffffffd529]        # 0x14001f830
   140022307:	lea    rax,[rip+0xffffffffffffdf62]        # 0x140020270
   14002230e:	lea    rcx,[rsp+0x40]
   140022313:	mov    QWORD PTR [rsp+0x50],rdx
   140022318:	mov    QWORD PTR [rsp+0x58],rax
   14002231d:	call   0x140008520
   140022322:	lea    rcx,[rsp+0x48]
   140022327:	call   QWORD PTR [rip+0x956b]        # 0x14002b898
   14002232d:	lea    rcx,[rsp+0x40]
   140022332:	call   QWORD PTR [rip+0x9560]        # 0x14002b898
   140022338:	lea    eax,[rbx+0x1]
   14002233b:	mov    rbx,QWORD PTR [rsp+0x88]
   140022343:	add    rsp,0x70
   140022347:	pop    rdi
   140022348:	ret    
   140022349:	int3   
   14002234a:	int3   
   14002234b:	int3   
   14002234c:	int3   
   14002234d:	int3   
   14002234e:	int3   
   14002234f:	int3   
   140022350:	mov    QWORD PTR [rsp+0x8],rbx
   140022355:	push   rbp
   140022356:	push   rsi
   140022357:	push   rdi
   140022358:	sub    rsp,0x30
   14002235c:	mov    rbp,rcx
   14002235f:	lea    rcx,[rsp+0x60]
   140022364:	add    rdx,0x58
   140022368:	call   QWORD PTR [rip+0x9532]        # 0x14002b8a0
   14002236e:	lea    rdx,[rsp+0x58]
   140022373:	lea    rcx,[rsp+0x60]
   140022378:	call   QWORD PTR [rip+0x9462]        # 0x14002b7e0
   14002237e:	lea    rcx,[rsp+0x60]
   140022383:	call   QWORD PTR [rip+0x950f]        # 0x14002b898
   140022389:	mov    rax,QWORD PTR [rsp+0x58]
   14002238e:	xor    edi,edi
   140022390:	mov    ebx,DWORD PTR [rax+0x4]
   140022393:	dec    ebx
   140022395:	xor    esi,esi
   140022397:	test   ebx,ebx
   140022399:	js     0x1400223cc
   14002239b:	lea    rcx,[rsp+0x58]
   1400223a0:	mov    edx,ebx
   1400223a2:	call   QWORD PTR [rip+0x9260]        # 0x14002b608
   1400223a8:	cmp    al,0x2e
   1400223aa:	je     0x1400223cc
   1400223ac:	lea    rcx,[rsp+0x58]
   1400223b1:	mov    edx,ebx
   1400223b3:	call   QWORD PTR [rip+0x924f]        # 0x14002b608
   1400223b9:	mov    ecx,esi
   1400223bb:	add    esi,0x8
   1400223be:	movsx  edx,al
   1400223c1:	dec    ebx
   1400223c3:	shl    edx,cl
   1400223c5:	or     edi,edx
   1400223c7:	cmp    esi,0x20
   1400223ca:	jl     0x140022397
   1400223cc:	cmp    edi,0x632b2b
   1400223d2:	ja     0x14002241d
   1400223d4:	je     0x14002244e
   1400223d6:	cmp    edi,0x6368
   1400223dc:	ja     0x1400223fb
   1400223de:	je     0x1400223f2
   1400223e0:	cmp    edi,0x63
   1400223e3:	je     0x1400223f2
   1400223e5:	cmp    edi,0x68
   1400223e8:	je     0x1400223f2
   1400223ea:	cmp    edi,0x6363
   1400223f0:	jne    0x140022445
   1400223f2:	lea    rdx,[rip+0xbffb]        # 0x14002e3f4
   1400223f9:	jmp    0x140022455
   1400223fb:	cmp    edi,0x6868
   140022401:	je     0x1400223f2
   140022403:	cmp    edi,0x7569
   140022409:	jne    0x140022445
   14002240b:	mov    rdx,QWORD PTR [rip+0x12fbe]        # 0x1400353d0
   140022412:	test   rdx,rdx
   140022415:	jne    0x140022455
   140022417:	mov    DWORD PTR [rsp+0x20],edx
   14002241b:	jmp    0x14002246a
   14002241d:	cmp    edi,0x637070
   140022423:	je     0x14002244e
   140022425:	cmp    edi,0x637878
   14002242b:	je     0x14002244e
   14002242d:	cmp    edi,0x682b2b
   140022433:	je     0x14002244e
   140022435:	cmp    edi,0x687070
   14002243b:	je     0x14002244e
   14002243d:	cmp    edi,0x687878
   140022443:	je     0x14002244e
   140022445:	lea    rdx,[rip+0xbf9c]        # 0x14002e3e8
   14002244c:	jmp    0x140022455
   14002244e:	lea    rdx,[rip+0xbf8b]        # 0x14002e3e0
   140022455:	or     rcx,0xffffffffffffffff
   140022459:	xor    eax,eax
   14002245b:	mov    rdi,rdx
   14002245e:	repnz scas al,BYTE PTR es:[rdi]
   140022460:	not    rcx
   140022463:	dec    rcx
   140022466:	mov    DWORD PTR [rsp+0x20],ecx
   14002246a:	mov    QWORD PTR [rsp+0x28],rdx
   14002246f:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   140022474:	lea    rdx,[rsp+0x20]
   140022479:	mov    rcx,rbp
   14002247c:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140022482:	call   QWORD PTR [rip+0x93d8]        # 0x14002b860
   140022488:	lea    rcx,[rsp+0x58]
   14002248d:	call   QWORD PTR [rip+0x8d35]        # 0x14002b1c8
   140022493:	mov    rbx,QWORD PTR [rsp+0x50]
   140022498:	mov    rax,rbp
   14002249b:	add    rsp,0x30
   14002249f:	pop    rdi
   1400224a0:	pop    rsi
   1400224a1:	pop    rbp
   1400224a2:	ret    
   1400224a3:	int3   
   1400224a4:	int3   
   1400224a5:	int3   
   1400224a6:	int3   
   1400224a7:	int3   
   1400224a8:	int3   
   1400224a9:	int3   
   1400224aa:	int3   
   1400224ab:	int3   
   1400224ac:	int3   
   1400224ad:	int3   
   1400224ae:	int3   
   1400224af:	int3   
   1400224b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400224b5:	mov    QWORD PTR [rsp+0x20],rsi
   1400224ba:	push   rdi
   1400224bb:	sub    rsp,0x20
   1400224bf:	mov    rsi,rcx
   1400224c2:	mov    ebx,edx
   1400224c4:	lea    rcx,[rsp+0x38]
   1400224c9:	mov    dl,0x20
   1400224cb:	call   QWORD PTR [rip+0x93f7]        # 0x14002b8c8
   1400224d1:	lea    rcx,[rsp+0x40]
   1400224d6:	add    ebx,ebx
   1400224d8:	mov    rdi,rax
   1400224db:	call   QWORD PTR [rip+0x93af]        # 0x14002b890
   1400224e1:	movzx  edx,WORD PTR [rdi]
   1400224e4:	mov    rcx,rax
   1400224e7:	mov    r8d,ebx
   1400224ea:	call   QWORD PTR [rip+0x92f8]        # 0x14002b7e8
   1400224f0:	mov    rcx,rsi
   1400224f3:	mov    rdx,rax
   1400224f6:	call   QWORD PTR [rip+0x90ac]        # 0x14002b5a8
   1400224fc:	lea    rcx,[rsp+0x40]
   140022501:	call   QWORD PTR [rip+0x9391]        # 0x14002b898
   140022507:	mov    rbx,QWORD PTR [rsp+0x30]
   14002250c:	mov    rsi,QWORD PTR [rsp+0x48]
   140022511:	add    rsp,0x20
   140022515:	pop    rdi
   140022516:	ret    
   140022517:	int3   
   140022518:	int3   
   140022519:	int3   
   14002251a:	int3   
   14002251b:	int3   
   14002251c:	int3   
   14002251d:	int3   
   14002251e:	int3   
   14002251f:	int3   
   140022520:	rex push rbx
   140022522:	push   rbp
   140022523:	push   rdi
   140022524:	sub    rsp,0x70
   140022528:	movsxd rdi,edx
   14002252b:	mov    rbp,rcx
   14002252e:	test   r8b,r8b
   140022531:	je     0x1400226ab
   140022537:	lea    eax,[rdi-0x7]
   14002253a:	cmp    eax,0x6
   14002253d:	ja     0x1400226ab
   140022543:	lea    rdx,[rdi-0x7]
   140022547:	lea    rcx,[rip+0xbe22]        # 0x14002e370
   14002254e:	lea    rdi,[rsp+0x60]
   140022553:	add    rdx,rdx
   140022556:	mov    QWORD PTR [rsp+0x90],rsi
   14002255e:	mov    rax,QWORD PTR [rcx+rdx*8]
   140022562:	mov    QWORD PTR [rdi],rax
   140022565:	mov    rax,QWORD PTR [rcx+rdx*8+0x8]
   14002256a:	mov    QWORD PTR [rdi+0x8],rax
   14002256e:	mov    rdx,QWORD PTR [rsp+0x68]
   140022573:	test   rdx,rdx
   140022576:	je     0x14002258f
   140022578:	or     rcx,0xffffffffffffffff
   14002257c:	xor    eax,eax
   14002257e:	mov    rdi,rdx
   140022581:	repnz scas al,BYTE PTR es:[rdi]
   140022583:	not    rcx
   140022586:	dec    rcx
   140022589:	mov    DWORD PTR [rsp+0x50],ecx
   14002258d:	jmp    0x140022597
   14002258f:	mov    DWORD PTR [rsp+0x50],0x0
   140022597:	mov    QWORD PTR [rsp+0x58],rdx
   14002259c:	movaps xmm0,XMMWORD PTR [rsp+0x50]
   1400225a1:	lea    rcx,[rsp+0x38]
   1400225a6:	lea    rdx,[rsp+0x50]
   1400225ab:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   1400225b1:	call   QWORD PTR [rip+0x92a9]        # 0x14002b860
   1400225b7:	inc    DWORD PTR [rip+0x13173]        # 0x140035730
   1400225bd:	lea    rcx,[rsp+0xa0]
   1400225c5:	mov    dl,0x20
   1400225c7:	call   QWORD PTR [rip+0x92fb]        # 0x14002b8c8
   1400225cd:	lea    rcx,[rsp+0xa8]
   1400225d5:	mov    dl,0x20
   1400225d7:	mov    rsi,rax
   1400225da:	call   QWORD PTR [rip+0x92e8]        # 0x14002b8c8
   1400225e0:	lea    rcx,[rsp+0x30]
   1400225e5:	mov    dl,0x20
   1400225e7:	mov    rbx,rax
   1400225ea:	call   QWORD PTR [rip+0x92d8]        # 0x14002b8c8
   1400225f0:	lea    rdx,[rip+0xbe01]        # 0x14002e3f8
   1400225f7:	lea    rcx,[rsp+0x50]
   1400225fc:	or     r8d,0xffffffff
   140022600:	mov    rdi,rax
   140022603:	call   QWORD PTR [rip+0x8c77]        # 0x14002b280
   140022609:	movzx  edx,WORD PTR [rdi]
   14002260c:	mov    r8d,DWORD PTR [rip+0x1311d]        # 0x140035730
   140022613:	mov    WORD PTR [rsp+0x28],dx
   140022618:	lea    rdx,[rsp+0x48]
   14002261d:	mov    rcx,rax
   140022620:	xor    r9d,r9d
   140022623:	mov    DWORD PTR [rsp+0x20],0xa
   14002262b:	call   QWORD PTR [rip+0x8ed7]        # 0x14002b508
   140022631:	lea    r8,[rsp+0x38]
   140022636:	lea    rdx,[rsp+0x40]
   14002263b:	mov    rcx,rax
   14002263e:	movzx  eax,WORD PTR [rbx]
   140022641:	xor    r9d,r9d
   140022644:	mov    WORD PTR [rsp+0x20],ax
   140022649:	call   QWORD PTR [rip+0x8b99]        # 0x14002b1e8
   14002264f:	movzx  r8d,BYTE PTR [rsp+0x61]
   140022655:	mov    rcx,rax
   140022658:	movzx  eax,WORD PTR [rsi]
   14002265b:	xor    r9d,r9d
   14002265e:	mov    rdx,rbp
   140022661:	mov    WORD PTR [rsp+0x20],ax
   140022666:	call   QWORD PTR [rip+0x9184]        # 0x14002b7f0
   14002266c:	lea    rcx,[rsp+0x40]
   140022671:	call   QWORD PTR [rip+0x9221]        # 0x14002b898
   140022677:	lea    rcx,[rsp+0x48]
   14002267c:	call   QWORD PTR [rip+0x9216]        # 0x14002b898
   140022682:	lea    rcx,[rsp+0x50]
   140022687:	call   QWORD PTR [rip+0x920b]        # 0x14002b898
   14002268d:	lea    rcx,[rsp+0x38]
   140022692:	call   QWORD PTR [rip+0x9200]        # 0x14002b898
   140022698:	mov    rsi,QWORD PTR [rsp+0x90]
   1400226a0:	mov    rax,rbp
   1400226a3:	add    rsp,0x70
   1400226a7:	pop    rdi
   1400226a8:	pop    rbp
   1400226a9:	pop    rbx
   1400226aa:	ret    
   1400226ab:	lea    rcx,[rsp+0xa0]
   1400226b3:	mov    dl,0x20
   1400226b5:	call   QWORD PTR [rip+0x920d]        # 0x14002b8c8
   1400226bb:	lea    rcx,[rsp+0x50]
   1400226c0:	mov    r8d,0x10
   1400226c6:	mov    edx,edi
   1400226c8:	mov    rbx,rax
   1400226cb:	call   QWORD PTR [rip+0x8faf]        # 0x14002b680
   1400226d1:	lea    rdx,[rip+0xb530]        # 0x14002dc08
   1400226d8:	lea    rcx,[rsp+0xa8]
   1400226e0:	or     r8d,0xffffffff
   1400226e4:	mov    rdi,rax
   1400226e7:	call   QWORD PTR [rip+0x8b93]        # 0x14002b280
   1400226ed:	movzx  edx,WORD PTR [rbx]
   1400226f0:	xor    r9d,r9d
   1400226f3:	mov    WORD PTR [rsp+0x20],dx
   1400226f8:	mov    rdx,rbp
   1400226fb:	mov    rcx,rax
   1400226fe:	mov    r8,rdi
   140022701:	call   QWORD PTR [rip+0x8ae1]        # 0x14002b1e8
   140022707:	lea    rcx,[rsp+0xa8]
   14002270f:	call   QWORD PTR [rip+0x9183]        # 0x14002b898
   140022715:	lea    rcx,[rsp+0x50]
   14002271a:	call   QWORD PTR [rip+0x9178]        # 0x14002b898
   140022720:	mov    rax,rbp
   140022723:	add    rsp,0x70
   140022727:	pop    rdi
   140022728:	pop    rbp
   140022729:	pop    rbx
   14002272a:	ret    
   14002272b:	int3   
   14002272c:	int3   
   14002272d:	int3   
   14002272e:	int3   
   14002272f:	int3   
   140022730:	rex push rbx
   140022732:	push   rbp
   140022733:	push   rsi
   140022734:	push   r12
   140022736:	push   r13
   140022738:	sub    rsp,0xd0
   14002273f:	movzx  r13d,r8b
   140022743:	mov    r12,rdx
   140022746:	mov    rbx,rcx
   140022749:	call   QWORD PTR [rip+0x9141]        # 0x14002b890
   14002274f:	mov    rax,QWORD PTR [r12]
   140022753:	xor    esi,esi
   140022755:	mov    ebp,DWORD PTR [rax+0x4]
   140022758:	test   ebp,ebp
   14002275a:	je     0x1400229a1
   140022760:	mov    QWORD PTR [rsp+0x110],rdi
   140022768:	mov    QWORD PTR [rsp+0xc8],r14
   140022770:	mov    QWORD PTR [rsp+0xc0],r15
   140022778:	lea    r15,[rip+0xade1]        # 0x14002d560
   14002277f:	lea    r14,[rip+0xadea]        # 0x14002d570
   140022786:	lea    rdi,[rip+0xaddb]        # 0x14002d568
   14002278d:	nop    DWORD PTR [rax]
   140022790:	lea    rdx,[rsp+0x100]
   140022798:	mov    r8d,esi
   14002279b:	mov    rcx,r12
   14002279e:	call   QWORD PTR [rip+0x8cfc]        # 0x14002b4a0
   1400227a4:	movzx  ecx,WORD PTR [rax]
   1400227a7:	mov    eax,ecx
   1400227a9:	sub    eax,0x22
   1400227ac:	je     0x140022938
   1400227b2:	sub    eax,0x4
   1400227b5:	je     0x1400228ef
   1400227bb:	sub    eax,0x1
   1400227be:	je     0x1400228ad
   1400227c4:	sub    eax,0x15
   1400227c7:	je     0x140022868
   1400227cd:	cmp    eax,0x2
   1400227d0:	je     0x140022829
   1400227d2:	cmp    ecx,0x20
   1400227d5:	jae    0x140022818
   1400227d7:	cmp    ecx,0xd
   1400227da:	je     0x140022818
   1400227dc:	cmp    ecx,0xa
   1400227df:	je     0x140022818
   1400227e1:	cmp    ecx,0x9
   1400227e4:	je     0x140022818
   1400227e6:	mov    edx,ecx
   1400227e8:	lea    rcx,[rsp+0x108]
   1400227f0:	movzx  r8d,r13b
   1400227f4:	call   0x140022520
   1400227f9:	mov    rcx,rbx
   1400227fc:	mov    rdx,rax
   1400227ff:	call   QWORD PTR [rip+0x89db]        # 0x14002b1e0
   140022805:	lea    rcx,[rsp+0x108]
   14002280d:	call   QWORD PTR [rip+0x9085]        # 0x14002b898
   140022813:	jmp    0x14002297f
   140022818:	movzx  edx,cx
   14002281b:	mov    rcx,rbx
   14002281e:	call   QWORD PTR [rip+0x8d2c]        # 0x14002b550
   140022824:	jmp    0x14002297f
   140022829:	or     rcx,0xffffffffffffffff
   14002282d:	xor    eax,eax
   14002282f:	mov    rdi,r14
   140022832:	repnz scas al,BYTE PTR es:[rdi]
   140022834:	mov    QWORD PTR [rsp+0x68],r14
   140022839:	lea    rdx,[rsp+0x70]
   14002283e:	not    rcx
   140022841:	dec    rcx
   140022844:	mov    DWORD PTR [rsp+0x60],ecx
   140022848:	mov    rcx,rbx
   14002284b:	movaps xmm0,XMMWORD PTR [rsp+0x60]
   140022850:	movdqa XMMWORD PTR [rsp+0x70],xmm0
   140022856:	call   QWORD PTR [rip+0x8a2c]        # 0x14002b288
   14002285c:	lea    rdi,[rip+0xad05]        # 0x14002d568
   140022863:	jmp    0x14002297f
   140022868:	or     rcx,0xffffffffffffffff
   14002286c:	xor    eax,eax
   14002286e:	mov    rdi,r15
   140022871:	repnz scas al,BYTE PTR es:[rdi]
   140022873:	mov    QWORD PTR [rsp+0x58],r15
   140022878:	lea    rdx,[rsp+0xa0]
   140022880:	not    rcx
   140022883:	dec    rcx
   140022886:	mov    DWORD PTR [rsp+0x50],ecx
   14002288a:	mov    rcx,rbx
   14002288d:	movaps xmm0,XMMWORD PTR [rsp+0x50]
   140022892:	movdqa XMMWORD PTR [rsp+0xa0],xmm0
   14002289b:	call   QWORD PTR [rip+0x89e7]        # 0x14002b288
   1400228a1:	lea    rdi,[rip+0xacc0]        # 0x14002d568
   1400228a8:	jmp    0x14002297f
   1400228ad:	or     rcx,0xffffffffffffffff
   1400228b1:	xor    eax,eax
   1400228b3:	lea    rdx,[rsp+0x80]
   1400228bb:	repnz scas al,BYTE PTR es:[rdi]
   1400228bd:	lea    rdi,[rip+0xaca4]        # 0x14002d568
   1400228c4:	not    rcx
   1400228c7:	mov    QWORD PTR [rsp+0x38],rdi
   1400228cc:	dec    rcx
   1400228cf:	mov    DWORD PTR [rsp+0x30],ecx
   1400228d3:	mov    rcx,rbx
   1400228d6:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   1400228db:	movdqa XMMWORD PTR [rsp+0x80],xmm0
   1400228e4:	call   QWORD PTR [rip+0x899e]        # 0x14002b288
   1400228ea:	jmp    0x14002297f
   1400228ef:	or     rcx,0xffffffffffffffff
   1400228f3:	lea    rdx,[rip+0xac5e]        # 0x14002d558
   1400228fa:	xor    eax,eax
   1400228fc:	mov    rdi,rdx
   1400228ff:	mov    QWORD PTR [rsp+0x48],rdx
   140022904:	lea    rdx,[rsp+0x90]
   14002290c:	repnz scas al,BYTE PTR es:[rdi]
   14002290e:	not    rcx
   140022911:	dec    rcx
   140022914:	mov    DWORD PTR [rsp+0x40],ecx
   140022918:	mov    rcx,rbx
   14002291b:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140022920:	movdqa XMMWORD PTR [rsp+0x90],xmm0
   140022929:	call   QWORD PTR [rip+0x8959]        # 0x14002b288
   14002292f:	lea    rdi,[rip+0xac32]        # 0x14002d568
   140022936:	jmp    0x14002297f
   140022938:	or     rcx,0xffffffffffffffff
   14002293c:	lea    rdx,[rip+0xac05]        # 0x14002d548
   140022943:	xor    eax,eax
   140022945:	mov    rdi,rdx
   140022948:	mov    QWORD PTR [rsp+0x28],rdx
   14002294d:	lea    rdx,[rsp+0xb0]
   140022955:	repnz scas al,BYTE PTR es:[rdi]
   140022957:	not    rcx
   14002295a:	dec    rcx
   14002295d:	mov    DWORD PTR [rsp+0x20],ecx
   140022961:	mov    rcx,rbx
   140022964:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   140022969:	movdqa XMMWORD PTR [rsp+0xb0],xmm0
   140022972:	call   QWORD PTR [rip+0x8910]        # 0x14002b288
   140022978:	lea    rdi,[rip+0xabe9]        # 0x14002d568
   14002297f:	inc    esi
   140022981:	cmp    esi,ebp
   140022983:	jne    0x140022790
   140022989:	mov    r15,QWORD PTR [rsp+0xc0]
   140022991:	mov    r14,QWORD PTR [rsp+0xc8]
   140022999:	mov    rdi,QWORD PTR [rsp+0x110]
   1400229a1:	mov    rax,rbx
   1400229a4:	add    rsp,0xd0
   1400229ab:	pop    r13
   1400229ad:	pop    r12
   1400229af:	pop    rsi
   1400229b0:	pop    rbp
   1400229b1:	pop    rbx
   1400229b2:	ret    
   1400229b3:	int3   
   1400229b4:	int3   
   1400229b5:	int3   
   1400229b6:	int3   
   1400229b7:	int3   
   1400229b8:	int3   
   1400229b9:	int3   
   1400229ba:	int3   
   1400229bb:	int3   
   1400229bc:	int3   
   1400229bd:	int3   
   1400229be:	int3   
   1400229bf:	int3   
   1400229c0:	rex push rbx
   1400229c2:	sub    rsp,0x20
   1400229c6:	mov    rbx,rcx
   1400229c9:	lea    rdx,[rcx+0x48]
   1400229cd:	mov    rcx,QWORD PTR [rcx+0x38]
   1400229d1:	add    rcx,0x10
   1400229d5:	call   QWORD PTR [rip+0x8ed5]        # 0x14002b8b0
   1400229db:	mov    rcx,QWORD PTR [rbx+0x38]
   1400229df:	lea    rdx,[rbx+0x50]
   1400229e3:	add    rcx,0x18
   1400229e7:	call   QWORD PTR [rip+0x8ec3]        # 0x14002b8b0
   1400229ed:	mov    al,0x1
   1400229ef:	add    rsp,0x20
   1400229f3:	pop    rbx
   1400229f4:	ret    
   1400229f5:	int3   
   1400229f6:	int3   
   1400229f7:	int3   
   1400229f8:	int3   
   1400229f9:	int3   
   1400229fa:	int3   
   1400229fb:	int3   
   1400229fc:	int3   
   1400229fd:	int3   
   1400229fe:	int3   
   1400229ff:	int3   
   140022a00:	rex push rbx
   140022a02:	push   r12
   140022a04:	push   r13
   140022a06:	push   r14
   140022a08:	push   r15
   140022a0a:	sub    rsp,0x30
   140022a0e:	mov    r10,QWORD PTR [r8]
   140022a11:	mov    r12,r9
   140022a14:	mov    r13,r8
   140022a17:	mov    eax,DWORD PTR [r10+0x20]
   140022a1b:	mov    rbx,QWORD PTR [r10+0x8]
   140022a1f:	mov    r15d,edx
   140022a22:	mov    r14,rcx
   140022a25:	test   eax,eax
   140022a27:	je     0x140022a43
   140022a29:	nop    DWORD PTR [rax+0x0]
   140022a30:	dec    eax
   140022a32:	cmp    QWORD PTR [rbx],r10
   140022a35:	jne    0x140022b76
   140022a3b:	add    rbx,0x8
   140022a3f:	test   eax,eax
   140022a41:	jne    0x140022a30
   140022a43:	mov    rbx,r10
   140022a46:	cmp    rbx,r10
   140022a49:	je     0x140022b5f
   140022a4f:	mov    QWORD PTR [rsp+0x60],rbp
   140022a54:	mov    QWORD PTR [rsp+0x68],rsi
   140022a59:	mov    QWORD PTR [rsp+0x78],rdi
   140022a5e:	xchg   ax,ax
   140022a60:	lea    rdx,[rbx+0x10]
   140022a64:	mov    rcx,r12
   140022a67:	call   QWORD PTR [rip+0x8d5b]        # 0x14002b7c8
   140022a6d:	test   al,al
   140022a6f:	jne    0x140022b3a
   140022a75:	lea    rcx,[rsp+0x70]
   140022a7a:	mov    dl,0x20
   140022a7c:	call   QWORD PTR [rip+0x8e46]        # 0x14002b8c8
   140022a82:	lea    rcx,[rsp+0x20]
   140022a87:	lea    edi,[r15+r15*1]
   140022a8b:	mov    rsi,rax
   140022a8e:	call   QWORD PTR [rip+0x8dfc]        # 0x14002b890
   140022a94:	movzx  edx,WORD PTR [rsi]
   140022a97:	mov    rcx,rax
   140022a9a:	mov    r8d,edi
   140022a9d:	call   QWORD PTR [rip+0x8d45]        # 0x14002b7e8
   140022aa3:	mov    rcx,r14
   140022aa6:	mov    rdx,rax
   140022aa9:	call   QWORD PTR [rip+0x8af9]        # 0x14002b5a8
   140022aaf:	lea    rcx,[rsp+0x20]
   140022ab4:	call   QWORD PTR [rip+0x8dde]        # 0x14002b898
   140022aba:	lea    rdx,[rbx+0x18]
   140022abe:	lea    rcx,[rsp+0x28]
   140022ac3:	mov    r8b,0x1
   140022ac6:	call   0x140022730
   140022acb:	lea    rdx,[rip+0xb95e]        # 0x14002e430
   140022ad2:	mov    rcx,r14
   140022ad5:	mov    rdi,rax
   140022ad8:	call   QWORD PTR [rip+0x8ad2]        # 0x14002b5b0
   140022ade:	lea    rdx,[rbx+0x10]
   140022ae2:	mov    rcx,rax
   140022ae5:	call   QWORD PTR [rip+0x8abd]        # 0x14002b5a8
   140022aeb:	mov    dl,0x3e
   140022aed:	mov    rcx,rax
   140022af0:	call   QWORD PTR [rip+0x88b2]        # 0x14002b3a8
   140022af6:	mov    rdx,rdi
   140022af9:	mov    rcx,rax
   140022afc:	call   QWORD PTR [rip+0x8aa6]        # 0x14002b5a8
   140022b02:	lea    rdx,[rip+0xb917]        # 0x14002e420
   140022b09:	mov    rcx,rax
   140022b0c:	call   QWORD PTR [rip+0x8a9e]        # 0x14002b5b0
   140022b12:	lea    rdx,[rbx+0x10]
   140022b16:	mov    rcx,rax
   140022b19:	call   QWORD PTR [rip+0x8a89]        # 0x14002b5a8
   140022b1f:	lea    rdx,[rip+0xab2e]        # 0x14002d654
   140022b26:	mov    rcx,rax
   140022b29:	call   QWORD PTR [rip+0x8a81]        # 0x14002b5b0
   140022b2f:	lea    rcx,[rsp+0x28]
   140022b34:	call   QWORD PTR [rip+0x8d5e]        # 0x14002b898
   140022b3a:	mov    rcx,rbx
   140022b3d:	call   QWORD PTR [rip+0x877d]        # 0x14002b2c0
   140022b43:	mov    rbx,rax
   140022b46:	cmp    rax,QWORD PTR [r13+0x0]
   140022b4a:	jne    0x140022a60
   140022b50:	mov    rdi,QWORD PTR [rsp+0x78]
   140022b55:	mov    rsi,QWORD PTR [rsp+0x68]
   140022b5a:	mov    rbp,QWORD PTR [rsp+0x60]
   140022b5f:	mov    rcx,r12
   140022b62:	add    rsp,0x30
   140022b66:	pop    r15
   140022b68:	pop    r14
   140022b6a:	pop    r13
   140022b6c:	pop    r12
   140022b6e:	pop    rbx
   140022b6f:	rex.W jmp QWORD PTR [rip+0x882a]        # 0x14002b3a0
   140022b76:	mov    rbx,QWORD PTR [rbx]
   140022b79:	jmp    0x140022a46
   140022b7e:	int3   
   140022b7f:	int3   
   140022b80:	mov    QWORD PTR [rsp+0x8],rbx
   140022b85:	mov    QWORD PTR [rsp+0x18],rbp
   140022b8a:	mov    QWORD PTR [rsp+0x20],rsi
   140022b8f:	push   rdi
   140022b90:	push   r12
   140022b92:	push   r13
   140022b94:	sub    rsp,0x30
   140022b98:	mov    rsi,rcx
   140022b9b:	mov    rdi,rdx
   140022b9e:	lea    rcx,[rsp+0x58]
   140022ba3:	add    rdx,0x20
   140022ba7:	mov    ebp,r9d
   140022baa:	mov    r13,r8
   140022bad:	call   QWORD PTR [rip+0x8ced]        # 0x14002b8a0
   140022bb3:	mov    r11,QWORD PTR [rsp+0x58]
   140022bb8:	lea    rcx,[rsp+0x58]
   140022bbd:	cmp    DWORD PTR [r11+0x4],0x0
   140022bc2:	setne  bl
   140022bc5:	call   QWORD PTR [rip+0x8ccd]        # 0x14002b898
   140022bcb:	test   bl,bl
   140022bcd:	je     0x140022c63
   140022bd3:	mov    edx,ebp
   140022bd5:	mov    rcx,rsi
   140022bd8:	call   0x1400224b0
   140022bdd:	lea    rdx,[rdi+0x20]
   140022be1:	lea    rcx,[rsp+0x58]
   140022be6:	call   QWORD PTR [rip+0x8cb4]        # 0x14002b8a0
   140022bec:	lea    rdx,[rsp+0x58]
   140022bf1:	lea    rcx,[rsp+0x20]
   140022bf6:	xor    r8d,r8d
   140022bf9:	call   0x140022730
   140022bfe:	lea    rdx,[rip+0xb8bb]        # 0x14002e4c0
   140022c05:	mov    rcx,rsi
   140022c08:	mov    rbx,rax
   140022c0b:	call   QWORD PTR [rip+0x899f]        # 0x14002b5b0
   140022c11:	mov    rdx,QWORD PTR [rip+0x127c0]        # 0x1400353d8
   140022c18:	mov    rcx,rax
   140022c1b:	call   QWORD PTR [rip+0x898f]        # 0x14002b5b0
   140022c21:	lea    rdx,[rip+0xb894]        # 0x14002e4bc
   140022c28:	mov    rcx,rax
   140022c2b:	call   QWORD PTR [rip+0x897f]        # 0x14002b5b0
   140022c31:	mov    rdx,rbx
   140022c34:	mov    rcx,rax
   140022c37:	call   QWORD PTR [rip+0x896b]        # 0x14002b5a8
   140022c3d:	lea    rdx,[rip+0xb85c]        # 0x14002e4a0
   140022c44:	mov    rcx,rax
   140022c47:	call   QWORD PTR [rip+0x8963]        # 0x14002b5b0
   140022c4d:	lea    rcx,[rsp+0x20]
   140022c52:	call   QWORD PTR [rip+0x8c40]        # 0x14002b898
   140022c58:	lea    rcx,[rsp+0x58]
   140022c5d:	call   QWORD PTR [rip+0x8c35]        # 0x14002b898
   140022c63:	lea    rdx,[rdi+0x28]
   140022c67:	lea    rcx,[rsp+0x58]
   140022c6c:	call   QWORD PTR [rip+0x8c2e]        # 0x14002b8a0
   140022c72:	mov    r11,QWORD PTR [rsp+0x58]
   140022c77:	lea    rcx,[rsp+0x58]
   140022c7c:	cmp    DWORD PTR [r11+0x4],0x0
   140022c81:	setne  bl
   140022c84:	call   QWORD PTR [rip+0x8c0e]        # 0x14002b898
   140022c8a:	test   bl,bl
   140022c8c:	je     0x140022d22
   140022c92:	mov    edx,ebp
   140022c94:	mov    rcx,rsi
   140022c97:	call   0x1400224b0
   140022c9c:	lea    rdx,[rdi+0x28]
   140022ca0:	lea    rcx,[rsp+0x58]
   140022ca5:	call   QWORD PTR [rip+0x8bf5]        # 0x14002b8a0
   140022cab:	lea    rdx,[rsp+0x58]
   140022cb0:	lea    rcx,[rsp+0x20]
   140022cb5:	xor    r8d,r8d
   140022cb8:	call   0x140022730
   140022cbd:	lea    rdx,[rip+0xb7fc]        # 0x14002e4c0
   140022cc4:	mov    rcx,rsi
   140022cc7:	mov    rbx,rax
   140022cca:	call   QWORD PTR [rip+0x88e0]        # 0x14002b5b0
   140022cd0:	mov    rdx,QWORD PTR [rip+0x12709]        # 0x1400353e0
   140022cd7:	mov    rcx,rax
   140022cda:	call   QWORD PTR [rip+0x88d0]        # 0x14002b5b0
   140022ce0:	lea    rdx,[rip+0xb7d5]        # 0x14002e4bc
   140022ce7:	mov    rcx,rax
   140022cea:	call   QWORD PTR [rip+0x88c0]        # 0x14002b5b0
   140022cf0:	mov    rdx,rbx
   140022cf3:	mov    rcx,rax
   140022cf6:	call   QWORD PTR [rip+0x88ac]        # 0x14002b5a8
   140022cfc:	lea    rdx,[rip+0xb79d]        # 0x14002e4a0
   140022d03:	mov    rcx,rax
   140022d06:	call   QWORD PTR [rip+0x88a4]        # 0x14002b5b0
   140022d0c:	lea    rcx,[rsp+0x20]
   140022d11:	call   QWORD PTR [rip+0x8b81]        # 0x14002b898
   140022d17:	lea    rcx,[rsp+0x58]
   140022d1c:	call   QWORD PTR [rip+0x8b76]        # 0x14002b898
   140022d22:	lea    rcx,[rsp+0x58]
   140022d27:	mov    rdx,r13
   140022d2a:	call   QWORD PTR [rip+0x8aa8]        # 0x14002b7d8
   140022d30:	lea    r8,[rdi+0x38]
   140022d34:	mov    edx,ebp
   140022d36:	mov    r9,rax
   140022d39:	mov    rcx,rsi
   140022d3c:	call   0x140022a00
   140022d41:	lea    rdx,[rdi+0x40]
   140022d45:	lea    rcx,[rsp+0x58]
   140022d4a:	call   QWORD PTR [rip+0x8b50]        # 0x14002b8a0
   140022d50:	mov    r11,QWORD PTR [rsp+0x58]
   140022d55:	lea    rcx,[rsp+0x58]
   140022d5a:	cmp    DWORD PTR [r11+0x4],0x0
   140022d5f:	setne  bl
   140022d62:	call   QWORD PTR [rip+0x8b30]        # 0x14002b898
   140022d68:	test   bl,bl
   140022d6a:	je     0x140022ddc
   140022d6c:	mov    edx,ebp
   140022d6e:	mov    rcx,rsi
   140022d71:	call   0x1400224b0
   140022d76:	lea    rdx,[rdi+0x40]
   140022d7a:	lea    rcx,[rsp+0x58]
   140022d7f:	call   QWORD PTR [rip+0x8b1b]        # 0x14002b8a0
   140022d85:	lea    rdx,[rsp+0x58]
   140022d8a:	lea    rcx,[rsp+0x20]
   140022d8f:	mov    r8b,0x1
   140022d92:	call   0x140022730
   140022d97:	lea    rdx,[rip+0xb6d2]        # 0x14002e470
   140022d9e:	mov    rcx,rsi
   140022da1:	mov    rbx,rax
   140022da4:	call   QWORD PTR [rip+0x8806]        # 0x14002b5b0
   140022daa:	mov    rdx,rbx
   140022dad:	mov    rcx,rax
   140022db0:	call   QWORD PTR [rip+0x87f2]        # 0x14002b5a8
   140022db6:	lea    rdx,[rip+0xb6a3]        # 0x14002e460
   140022dbd:	mov    rcx,rax
   140022dc0:	call   QWORD PTR [rip+0x87ea]        # 0x14002b5b0
   140022dc6:	lea    rcx,[rsp+0x20]
   140022dcb:	call   QWORD PTR [rip+0x8ac7]        # 0x14002b898
   140022dd1:	lea    rcx,[rsp+0x58]
   140022dd6:	call   QWORD PTR [rip+0x8abc]        # 0x14002b898
   140022ddc:	lea    rdx,[rdi+0x48]
   140022de0:	lea    rcx,[rsp+0x58]
   140022de5:	call   QWORD PTR [rip+0x8ab5]        # 0x14002b8a0
   140022deb:	mov    r11,QWORD PTR [rsp+0x58]
   140022df0:	lea    rcx,[rsp+0x58]
   140022df5:	cmp    DWORD PTR [r11+0x4],0x0
   140022dfa:	setne  bl
   140022dfd:	call   QWORD PTR [rip+0x8a95]        # 0x14002b898
   140022e03:	test   bl,bl
   140022e05:	je     0x140022e77
   140022e07:	mov    edx,ebp
   140022e09:	mov    rcx,rsi
   140022e0c:	call   0x1400224b0
   140022e11:	lea    rdx,[rdi+0x48]
   140022e15:	lea    rcx,[rsp+0x58]
   140022e1a:	call   QWORD PTR [rip+0x8a80]        # 0x14002b8a0
   140022e20:	lea    rdx,[rsp+0x58]
   140022e25:	lea    rcx,[rsp+0x20]
   140022e2a:	mov    r8b,0x1
   140022e2d:	call   0x140022730
   140022e32:	lea    rdx,[rip+0xb607]        # 0x14002e440
   140022e39:	mov    rcx,rsi
   140022e3c:	mov    rbx,rax
   140022e3f:	call   QWORD PTR [rip+0x876b]        # 0x14002b5b0
   140022e45:	mov    rdx,rbx
   140022e48:	mov    rcx,rax
   140022e4b:	call   QWORD PTR [rip+0x8757]        # 0x14002b5a8
   140022e51:	lea    rdx,[rip+0xb608]        # 0x14002e460
   140022e58:	mov    rcx,rax
   140022e5b:	call   QWORD PTR [rip+0x874f]        # 0x14002b5b0
   140022e61:	lea    rcx,[rsp+0x20]
   140022e66:	call   QWORD PTR [rip+0x8a2c]        # 0x14002b898
   140022e6c:	lea    rcx,[rsp+0x58]
   140022e71:	call   QWORD PTR [rip+0x8a21]        # 0x14002b898
   140022e77:	mov    rbx,QWORD PTR [rsp+0x50]
   140022e7c:	mov    rbp,QWORD PTR [rsp+0x60]
   140022e81:	mov    rsi,QWORD PTR [rsp+0x68]
   140022e86:	add    rsp,0x30
   140022e8a:	pop    r13
   140022e8c:	pop    r12
   140022e8e:	pop    rdi
   140022e8f:	ret    
   140022e90:	mov    QWORD PTR [rsp+0x10],rbx
   140022e95:	mov    QWORD PTR [rsp+0x18],rbp
   140022e9a:	mov    QWORD PTR [rsp+0x20],rsi
   140022e9f:	push   rdi
   140022ea0:	sub    rsp,0x40
   140022ea4:	mov    r8,QWORD PTR [rcx+0x8]
   140022ea8:	mov    rsi,rcx
   140022eab:	lea    rcx,[rsp+0x20]
   140022eb0:	mov    rax,QWORD PTR [r8]
   140022eb3:	mov    rbp,rdx
   140022eb6:	mov    QWORD PTR [rcx],rax
   140022eb9:	mov    rax,QWORD PTR [r8+0x8]
   140022ebd:	mov    QWORD PTR [rcx+0x8],rax
   140022ec1:	mov    rax,QWORD PTR [rsi]
   140022ec4:	lea    rcx,[rsp+0x30]
   140022ec9:	mov    r8,QWORD PTR [rax+0x8]
   140022ecd:	mov    rax,QWORD PTR [r8]
   140022ed0:	mov    QWORD PTR [rcx],rax
   140022ed3:	mov    rax,QWORD PTR [r8+0x8]
   140022ed7:	xor    r8d,r8d
   140022eda:	mov    QWORD PTR [rcx+0x8],rax
   140022ede:	mov    ecx,DWORD PTR [rsp+0x20]
   140022ee2:	mov    eax,DWORD PTR [rsp+0x30]
   140022ee6:	lea    edx,[rax+rcx*1+0x1]
   140022eea:	mov    rcx,rbp
   140022eed:	call   QWORD PTR [rip+0x8985]        # 0x14002b878
   140022ef3:	mov    rcx,rbp
   140022ef6:	call   QWORD PTR [rip+0x89c4]        # 0x14002b8c0
   140022efc:	mov    rbx,QWORD PTR [rsi]
   140022eff:	mov    rcx,QWORD PTR [rbx]
   140022f02:	mov    rdi,rax
   140022f05:	movzx  edx,BYTE PTR [rcx]
   140022f08:	lea    rcx,[rsp+0x50]
   140022f0d:	call   QWORD PTR [rip+0x89b5]        # 0x14002b8c8
   140022f13:	movzx  r11d,WORD PTR [rsp+0x50]
   140022f19:	lea    rax,[rsp+0x20]
   140022f1e:	mov    WORD PTR [rdi],r11w
   140022f22:	mov    rdx,QWORD PTR [rbx+0x8]
   140022f26:	lea    r8,[rdi+0x2]
   140022f2a:	mov    rcx,QWORD PTR [rdx]
   140022f2d:	mov    QWORD PTR [rax],rcx
   140022f30:	mov    rcx,QWORD PTR [rdx+0x8]
   140022f34:	mov    QWORD PTR [rax+0x8],rcx
   140022f38:	movsxd rbx,DWORD PTR [rsp+0x20]
   140022f3d:	mov    rcx,QWORD PTR [rsp+0x28]
   140022f42:	mov    edx,ebx
   140022f44:	call   QWORD PTR [rip+0x82fe]        # 0x14002b248
   140022f4a:	mov    rcx,QWORD PTR [rsi+0x8]
   140022f4e:	lea    rdx,[rsp+0x20]
   140022f53:	mov    rax,QWORD PTR [rcx]
   140022f56:	lea    r8,[rdi+rbx*2+0x2]
   140022f5b:	mov    QWORD PTR [rdx],rax
   140022f5e:	mov    rax,QWORD PTR [rcx+0x8]
   140022f62:	mov    QWORD PTR [rdx+0x8],rax
   140022f66:	mov    edx,DWORD PTR [rsp+0x20]
   140022f6a:	mov    rcx,QWORD PTR [rsp+0x28]
   140022f6f:	call   QWORD PTR [rip+0x82d3]        # 0x14002b248
   140022f75:	mov    rbx,QWORD PTR [rsp+0x58]
   140022f7a:	mov    rsi,QWORD PTR [rsp+0x68]
   140022f7f:	mov    rax,rbp
   140022f82:	mov    rbp,QWORD PTR [rsp+0x60]
   140022f87:	add    rsp,0x40
   140022f8b:	pop    rdi
   140022f8c:	ret    
   140022f8d:	int3   
   140022f8e:	int3   
   140022f8f:	int3   
   140022f90:	mov    r8,QWORD PTR [rcx+0xf8]
   140022f97:	mov    eax,DWORD PTR [r8+0x4]
   140022f9b:	sub    eax,0x1
   140022f9e:	movsxd rcx,eax
   140022fa1:	js     0x140022fc0
   140022fa3:	mov    r9,QWORD PTR [r8+0x10]
   140022fa7:	nop    WORD PTR [rax+rax*1+0x0]
   140022fb0:	lea    rax,[r9+rcx*4]
   140022fb4:	cmp    DWORD PTR [rax+r8*1],edx
   140022fb8:	je     0x140022fc3
   140022fba:	sub    rcx,0x1
   140022fbe:	jns    0x140022fb0
   140022fc0:	xor    al,al
   140022fc2:	ret    
   140022fc3:	mov    al,0x1
   140022fc5:	ret    
   140022fc6:	int3   
   140022fc7:	int3   
   140022fc8:	int3   
   140022fc9:	int3   
   140022fca:	int3   
   140022fcb:	int3   
   140022fcc:	int3   
   140022fcd:	int3   
   140022fce:	int3   
   140022fcf:	int3   
   140022fd0:	rex push rbx
   140022fd2:	push   rbp
   140022fd3:	push   rdi
   140022fd4:	sub    rsp,0x20
   140022fd8:	mov    rbx,QWORD PTR [rcx]
   140022fdb:	mov    QWORD PTR [rsp+0x40],rsi
   140022fe0:	movsxd rbp,r8d
   140022fe3:	mov    eax,DWORD PTR [rbx]
   140022fe5:	movsxd rsi,edx
   140022fe8:	mov    rdi,rcx
   140022feb:	cmp    eax,0x1
   140022fee:	je     0x140022ff8
   140022ff0:	test   eax,eax
   140022ff2:	je     0x140022ff8
   140022ff4:	mov    cl,0x1
   140022ff6:	jmp    0x140022ffa
   140022ff8:	xor    cl,cl
   140022ffa:	test   r8d,r8d
   140022ffd:	je     0x1400230fe
   140023003:	mov    eax,DWORD PTR [rbx+0x8]
   140023006:	btr    eax,0x1f
   14002300a:	cmp    ebp,eax
   14002300c:	jne    0x140023049
   14002300e:	test   cl,cl
   140023010:	jne    0x140023049
   140023012:	cmp    esi,DWORD PTR [rbx+0x4]
   140023015:	jle    0x140023041
   140023017:	mov    rdx,QWORD PTR [rbx+0x10]
   14002301b:	movsxd rax,DWORD PTR [rbx+0x4]
   14002301f:	mov    r8,rsi
   140023022:	shl    r8,0x2
   140023026:	lea    rcx,[rdx+rax*4]
   14002302a:	add    rcx,rbx
   14002302d:	sub    r8,rcx
   140023030:	add    r8,rdx
   140023033:	xor    edx,edx
   140023035:	add    r8,rbx
   140023038:	and    r8,0xfffffffffffffffc
   14002303c:	call   0x14002960c
   140023041:	mov    DWORD PTR [rbx+0x4],esi
   140023044:	jmp    0x140023105
   140023049:	mov    edx,0x8
   14002304e:	mov    r8,rbp
   140023051:	mov    QWORD PTR [rsp+0x48],r12
   140023056:	lea    ecx,[rdx-0x4]
   140023059:	mov    QWORD PTR [rsp+0x50],r13
   14002305e:	call   QWORD PTR [rip+0x87a4]        # 0x14002b808
   140023064:	mov    rbx,rax
   140023067:	mov    DWORD PTR [rax+0x4],esi
   14002306a:	mov    r9,QWORD PTR [rdi]
   14002306d:	cmp    esi,DWORD PTR [r9+0x4]
   140023071:	mov    rcx,QWORD PTR [r9+0x10]
   140023075:	lea    r10,[r9+rcx*1]
   140023079:	jle    0x140023088
   14002307b:	movsxd rdx,DWORD PTR [r9+0x4]
   14002307f:	lea    r8,[rcx+rdx*4]
   140023083:	add    r8,r9
   140023086:	jmp    0x14002308f
   140023088:	lea    r8,[rcx+rsi*4]
   14002308c:	add    r8,r9
   14002308f:	mov    rax,QWORD PTR [rax+0x10]
   140023093:	sub    r8,r10
   140023096:	mov    rdx,r10
   140023099:	sar    r8,0x2
   14002309d:	lea    r12,[rbx+rax*1]
   1400230a1:	lea    r13,[r8*4+0x0]
   1400230a9:	mov    rcx,r12
   1400230ac:	mov    r8,r13
   1400230af:	call   0x14002951e
   1400230b4:	mov    r11,QWORD PTR [rdi]
   1400230b7:	cmp    esi,DWORD PTR [r11+0x4]
   1400230bb:	jle    0x1400230df
   1400230bd:	movsxd r8,DWORD PTR [rbx+0x4]
   1400230c1:	lea    rcx,[r13+r12*1+0x0]
   1400230c6:	xor    edx,edx
   1400230c8:	shl    r8,0x2
   1400230cc:	sub    r8,rcx
   1400230cf:	add    r8,QWORD PTR [rbx+0x10]
   1400230d3:	add    r8,rbx
   1400230d6:	and    r8,0xfffffffffffffffc
   1400230da:	call   0x14002960c
   1400230df:	mov    rax,QWORD PTR [rdi]
   1400230e2:	mov    r13,QWORD PTR [rsp+0x50]
   1400230e7:	mov    r12,QWORD PTR [rsp+0x48]
   1400230ec:	mov    ecx,DWORD PTR [rax+0x8]
   1400230ef:	xor    ecx,DWORD PTR [rbx+0x8]
   1400230f2:	btr    ecx,0x1f
   1400230f6:	xor    ecx,DWORD PTR [rax+0x8]
   1400230f9:	mov    DWORD PTR [rbx+0x8],ecx
   1400230fc:	jmp    0x140023105
   1400230fe:	mov    rbx,QWORD PTR [rip+0x86f3]        # 0x14002b7f8
   140023105:	mov    rcx,QWORD PTR [rdi]
   140023108:	mov    rsi,QWORD PTR [rsp+0x40]
   14002310d:	cmp    rcx,rbx
   140023110:	je     0x14002313e
   140023112:	mov    eax,DWORD PTR [rcx]
   140023114:	test   eax,eax
   140023116:	je     0x140023128
   140023118:	cmp    eax,0xffffffff
   14002311b:	je     0x14002313b
   14002311d:	lock add DWORD PTR [rcx],0xffffffff
   140023121:	setne  al
   140023124:	test   al,al
   140023126:	jne    0x14002313b
   140023128:	mov    rcx,QWORD PTR [rdi]
   14002312b:	mov    r8d,0x8
   140023131:	lea    edx,[r8-0x4]
   140023135:	call   QWORD PTR [rip+0x86c5]        # 0x14002b800
   14002313b:	mov    QWORD PTR [rdi],rbx
   14002313e:	add    rsp,0x20
   140023142:	pop    rdi
   140023143:	pop    rbp
   140023144:	pop    rbx
   140023145:	ret    
   140023146:	int3   
   140023147:	int3   
   140023148:	int3   
   140023149:	int3   
   14002314a:	int3   
   14002314b:	int3   
   14002314c:	int3   
   14002314d:	int3   
   14002314e:	int3   
   14002314f:	int3   
   140023150:	test   rdx,rdx
   140023153:	je     0x140023197
   140023155:	mov    QWORD PTR [rsp+0x8],rbx
   14002315a:	push   rdi
   14002315b:	sub    rsp,0x20
   14002315f:	mov    eax,DWORD PTR [rcx+0x8]
   140023162:	mov    rbx,rdx
   140023165:	mov    QWORD PTR [rdx],0x0
   14002316c:	mov    DWORD PTR [rdx+0x8],eax
   14002316f:	lea    rdx,[rcx+0x10]
   140023173:	mov    rdi,rcx
   140023176:	lea    rcx,[rbx+0x10]
   14002317a:	call   QWORD PTR [rip+0x8720]        # 0x14002b8a0
   140023180:	lea    rdx,[rdi+0x18]
   140023184:	lea    rcx,[rbx+0x18]
   140023188:	call   0x140001700
   14002318d:	mov    rbx,QWORD PTR [rsp+0x30]
   140023192:	add    rsp,0x20
   140023196:	pop    rdi
   140023197:	repz ret 
   140023199:	int3   
   14002319a:	int3   
   14002319b:	int3   
   14002319c:	int3   
   14002319d:	int3   
   14002319e:	int3   
   14002319f:	int3   
   1400231a0:	rex push rbp
   1400231a2:	push   rsi
   1400231a3:	push   rdi
   1400231a4:	sub    rsp,0x60
   1400231a8:	mov    rax,QWORD PTR [rcx+0xf8]
   1400231af:	mov    rbp,rdx
   1400231b2:	mov    rsi,rcx
   1400231b5:	cmp    DWORD PTR [rax+0x4],0x0
   1400231b9:	je     0x140023329
   1400231bf:	movsxd rcx,DWORD PTR [rax+0x4]
   1400231c3:	mov    rdx,rax
   1400231c6:	mov    rax,QWORD PTR [rax+0x10]
   1400231ca:	lea    rax,[rax+rcx*4]
   1400231ce:	cmp    DWORD PTR [rax+rdx*1-0x4],0xb
   1400231d3:	jne    0x140023329
   1400231d9:	mov    rax,QWORD PTR [rbp+0x0]
   1400231dd:	mov    QWORD PTR [rsp+0x58],rbx
   1400231e2:	mov    QWORD PTR [rsp+0x50],r12
   1400231e7:	xor    r12d,r12d
   1400231ea:	mov    ebx,r12d
   1400231ed:	cmp    DWORD PTR [rax+0x4],ebx
   1400231f0:	jle    0x140023325
   1400231f6:	mov    QWORD PTR [rsp+0x48],r13
   1400231fb:	mov    QWORD PTR [rsp+0x40],r14
   140023200:	add    rsi,0xd0
   140023207:	mov    r14d,0xff
   14002320d:	lea    r13,[rip+0xb15c]        # 0x14002e370
   140023214:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140023220:	lea    rdx,[rsp+0x80]
   140023228:	mov    r8d,ebx
   14002322b:	mov    rcx,rbp
   14002322e:	call   QWORD PTR [rip+0x826c]        # 0x14002b4a0
   140023234:	lea    rcx,[rsp+0x90]
   14002323c:	mov    dl,0x5c
   14002323e:	call   QWORD PTR [rip+0x8684]        # 0x14002b8c8
   140023244:	mov    r8d,0x1
   14002324a:	mov    rcx,rsi
   14002324d:	movzx  edx,WORD PTR [rax]
   140023250:	call   QWORD PTR [rip+0x8412]        # 0x14002b668
   140023256:	test   al,al
   140023258:	je     0x1400232e7
   14002325e:	movzx  eax,WORD PTR [rsp+0x80]
   140023266:	mov    edx,r12d
   140023269:	mov    rcx,r13
   14002326c:	movzx  r8d,al
   140023270:	cmp    ax,r14w
   140023274:	cmova  r8d,r12d
   140023278:	nop    DWORD PTR [rax+rax*1+0x0]
   140023280:	mov    rax,QWORD PTR [rcx]
   140023283:	lea    rdi,[rsp+0x30]
   140023288:	mov    QWORD PTR [rdi],rax
   14002328b:	mov    rax,QWORD PTR [rcx+0x8]
   14002328f:	mov    QWORD PTR [rdi+0x8],rax
   140023293:	mov    rdi,QWORD PTR [rsp+0x30]
   140023298:	mov    rax,rdi
   14002329b:	shr    rax,0x8
   14002329f:	cmp    al,r8b
   1400232a2:	je     0x1400232b1
   1400232a4:	inc    edx
   1400232a6:	add    rcx,0x10
   1400232aa:	cmp    edx,0x7
   1400232ad:	jb     0x140023280
   1400232af:	jmp    0x1400232b4
   1400232b1:	mov    r8b,dil
   1400232b4:	mov    rax,QWORD PTR [rsi]
   1400232b7:	lea    rcx,[rsp+0x98]
   1400232bf:	movzx  edx,r8b
   1400232c3:	mov    eax,DWORD PTR [rax+0x4]
   1400232c6:	mov    QWORD PTR [rsp+0x20],rsi
   1400232cb:	dec    eax
   1400232cd:	mov    DWORD PTR [rsp+0x28],eax
   1400232d1:	call   QWORD PTR [rip+0x85f1]        # 0x14002b8c8
   1400232d7:	lea    rcx,[rsp+0x20]
   1400232dc:	movzx  edx,WORD PTR [rax]
   1400232df:	call   QWORD PTR [rip+0x81b3]        # 0x14002b498
   1400232e5:	jmp    0x1400232f8
   1400232e7:	movzx  edx,WORD PTR [rsp+0x80]
   1400232ef:	mov    rcx,rsi
   1400232f2:	call   QWORD PTR [rip+0x7fb8]        # 0x14002b2b0
   1400232f8:	mov    rax,QWORD PTR [rbp+0x0]
   1400232fc:	inc    ebx
   1400232fe:	cmp    ebx,DWORD PTR [rax+0x4]
   140023301:	jl     0x140023220
   140023307:	mov    r14,QWORD PTR [rsp+0x40]
   14002330c:	mov    r13,QWORD PTR [rsp+0x48]
   140023311:	mov    al,0x1
   140023313:	mov    rbx,QWORD PTR [rsp+0x58]
   140023318:	mov    r12,QWORD PTR [rsp+0x50]
   14002331d:	add    rsp,0x60
   140023321:	pop    rdi
   140023322:	pop    rsi
   140023323:	pop    rbp
   140023324:	ret    
   140023325:	mov    al,0x1
   140023327:	jmp    0x140023313
   140023329:	lea    rcx,[rsp+0x80]
   140023331:	mov    rdx,rbp
   140023334:	call   QWORD PTR [rip+0x8566]        # 0x14002b8a0
   14002333a:	or     rcx,0xffffffffffffffff
   14002333e:	xor    eax,eax
   140023340:	lea    rdx,[rip+0xa072]        # 0x14002d3b9
   140023347:	lea    r8,[rsp+0x30]
   14002334c:	lea    r9d,[rax+0x1]
   140023350:	mov    QWORD PTR [rsp+0x28],rdx
   140023355:	mov    rdi,rdx
   140023358:	lea    rdx,[rip+0xb189]        # 0x14002e4e8
   14002335f:	repnz scas al,BYTE PTR es:[rdi]
   140023361:	mov    rdi,rdx
   140023364:	not    rcx
   140023367:	dec    rcx
   14002336a:	mov    DWORD PTR [rsp+0x20],ecx
   14002336e:	or     rcx,0xffffffffffffffff
   140023372:	repnz scas al,BYTE PTR es:[rdi]
   140023374:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   140023379:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   14002337f:	mov    QWORD PTR [rsp+0x28],rdx
   140023384:	not    rcx
   140023387:	lea    rdx,[rsp+0x20]
   14002338c:	dec    rcx
   14002338f:	mov    DWORD PTR [rsp+0x20],ecx
   140023393:	lea    rcx,[rsp+0x80]
   14002339b:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   1400233a0:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   1400233a6:	call   QWORD PTR [rip+0x8464]        # 0x14002b810
   1400233ac:	lea    rcx,[rsi+0xd0]
   1400233b3:	lea    rdx,[rsp+0x80]
   1400233bb:	call   QWORD PTR [rip+0x7e1f]        # 0x14002b1e0
   1400233c1:	lea    rcx,[rsp+0x80]
   1400233c9:	call   QWORD PTR [rip+0x84c9]        # 0x14002b898
   1400233cf:	mov    al,0x1
   1400233d1:	add    rsp,0x60
   1400233d5:	pop    rdi
   1400233d6:	pop    rsi
   1400233d7:	pop    rbp
   1400233d8:	ret    
   1400233d9:	int3   
   1400233da:	int3   
   1400233db:	int3   
   1400233dc:	int3   
   1400233dd:	int3   
   1400233de:	int3   
   1400233df:	int3   
   1400233e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400233e5:	mov    QWORD PTR [rsp+0x10],rsi
   1400233ea:	push   rdi
   1400233eb:	sub    rsp,0x20
   1400233ef:	mov    rbx,QWORD PTR [rip+0x848a]        # 0x14002b880
   1400233f6:	mov    rdi,rcx
   1400233f9:	cmp    QWORD PTR [rcx],rbx
   1400233fc:	je     0x14002344b
   1400233fe:	mov    eax,DWORD PTR [rbx+0x10]
   140023401:	test   eax,eax
   140023403:	je     0x14002340f
   140023405:	cmp    eax,0xffffffff
   140023408:	je     0x14002340f
   14002340a:	lock add DWORD PTR [rbx+0x10],0x1
   14002340f:	mov    rcx,QWORD PTR [rcx]
   140023412:	mov    eax,DWORD PTR [rcx+0x10]
   140023415:	test   eax,eax
   140023417:	je     0x14002342a
   140023419:	cmp    eax,0xffffffff
   14002341c:	je     0x14002343a
   14002341e:	lock add DWORD PTR [rcx+0x10],0xffffffff
   140023423:	setne  al
   140023426:	test   al,al
   140023428:	jne    0x14002343a
   14002342a:	mov    rcx,QWORD PTR [rdi]
   14002342d:	lea    rdx,[rip+0xfffffffffffddfdc]        # 0x140001410
   140023434:	call   QWORD PTR [rip+0x842e]        # 0x14002b868
   14002343a:	mov    QWORD PTR [rdi],rbx
   14002343d:	test   BYTE PTR [rbx+0x28],0x1
   140023441:	jne    0x14002344b
   140023443:	mov    rcx,rdi
   140023446:	call   0x140001b50
   14002344b:	mov    eax,DWORD PTR [rbx+0x10]
   14002344e:	test   eax,eax
   140023450:	je     0x140023463
   140023452:	cmp    eax,0xffffffff
   140023455:	je     0x140023473
   140023457:	lock add DWORD PTR [rbx+0x10],0xffffffff
   14002345c:	setne  al
   14002345f:	test   al,al
   140023461:	jne    0x140023473
   140023463:	lea    rdx,[rip+0xfffffffffffddfa6]        # 0x140001410
   14002346a:	mov    rcx,rbx
   14002346d:	call   QWORD PTR [rip+0x83f5]        # 0x14002b868
   140023473:	mov    rbx,QWORD PTR [rsp+0x30]
   140023478:	mov    rsi,QWORD PTR [rsp+0x38]
   14002347d:	add    rsp,0x20
   140023481:	pop    rdi
   140023482:	ret    
   140023483:	int3   
   140023484:	int3   
   140023485:	int3   
   140023486:	int3   
   140023487:	int3   
   140023488:	int3   
   140023489:	int3   
   14002348a:	int3   
   14002348b:	int3   
   14002348c:	int3   
   14002348d:	int3   
   14002348e:	int3   
   14002348f:	int3   
   140023490:	mov    rax,rsp
   140023493:	mov    DWORD PTR [rax+0x18],r8d
   140023497:	mov    QWORD PTR [rax+0x10],rdx
   14002349b:	mov    QWORD PTR [rax+0x8],rcx
   14002349f:	push   rsi
   1400234a0:	push   rdi
   1400234a1:	push   r12
   1400234a3:	sub    rsp,0xc0
   1400234aa:	xor    r12d,r12d
   1400234ad:	mov    rsi,rdx
   1400234b0:	mov    rdi,rcx
   1400234b3:	mov    DWORD PTR [rsp+0xf8],r12d
   1400234bb:	cmp    DWORD PTR [rdx+0x60],0xffffffff
   1400234bf:	je     0x140023b64
   1400234c5:	mov    QWORD PTR [rax-0x20],rbx
   1400234c9:	mov    QWORD PTR [rax-0x28],rbp
   1400234cd:	mov    QWORD PTR [rax-0x30],r13
   1400234d1:	mov    QWORD PTR [rax-0x38],r14
   1400234d5:	mov    edx,r8d
   1400234d8:	mov    QWORD PTR [rax-0x40],r15
   1400234dc:	call   0x1400224b0
   1400234e1:	mov    ebx,DWORD PTR [rsi+0x60]
   1400234e4:	lea    rdx,[rip+0xb095]        # 0x14002e580
   1400234eb:	mov    rcx,rdi
   1400234ee:	call   QWORD PTR [rip+0x80bc]        # 0x14002b5b0
   1400234f4:	mov    edx,ebx
   1400234f6:	mov    rcx,rax
   1400234f9:	call   QWORD PTR [rip+0x7eb1]        # 0x14002b3b0
   1400234ff:	lea    rdx,[rip+0xaf9a]        # 0x14002e4a0
   140023506:	mov    rcx,rax
   140023509:	call   QWORD PTR [rip+0x80a1]        # 0x14002b5b0
   14002350f:	mov    rbx,QWORD PTR [rsi+0x68]
   140023513:	mov    QWORD PTR [rsp+0x20],rbx
   140023518:	mov    eax,DWORD PTR [rbx]
   14002351a:	test   eax,eax
   14002351c:	je     0x140023535
   14002351e:	cmp    eax,0xffffffff
   140023521:	je     0x1400235b4
   140023527:	lock add DWORD PTR [rbx],0x1
   14002352b:	mov    rbx,QWORD PTR [rsp+0x20]
   140023530:	jmp    0x1400235b4
   140023535:	mov    edx,DWORD PTR [rbx+0x4]
   140023538:	lea    rcx,[rsp+0x20]
   14002353d:	call   QWORD PTR [rip+0x8315]        # 0x14002b858
   140023543:	mov    rbx,QWORD PTR [rsp+0x20]
   140023548:	mov    rcx,QWORD PTR [rsi+0x68]
   14002354c:	movsxd rax,DWORD PTR [rbx+0xc]
   140023550:	lea    r13,[rbx+rax*8+0x10]
   140023555:	movsxd rax,DWORD PTR [rcx+0x8]
   140023559:	lea    rbp,[rcx+rax*8+0x10]
   14002355e:	movsxd rax,DWORD PTR [rbx+0x8]
   140023562:	lea    rsi,[rbx+rax*8+0x10]
   140023567:	cmp    rsi,r13
   14002356a:	je     0x1400235b4
   14002356c:	nop    DWORD PTR [rax+0x0]
   140023570:	mov    ecx,0x10
   140023575:	call   0x14002952a
   14002357a:	mov    rdi,rax
   14002357d:	test   rax,rax
   140023580:	je     0x14002359c
   140023582:	mov    rbx,QWORD PTR [rbp+0x0]
   140023586:	mov    rcx,rax
   140023589:	mov    rdx,rbx
   14002358c:	call   QWORD PTR [rip+0x830e]        # 0x14002b8a0
   140023592:	mov    r11d,DWORD PTR [rbx+0x8]
   140023596:	mov    DWORD PTR [rdi+0x8],r11d
   14002359a:	jmp    0x14002359f
   14002359c:	mov    rdi,r12
   14002359f:	mov    QWORD PTR [rsi],rdi
   1400235a2:	add    rsi,0x8
   1400235a6:	add    rbp,0x8
   1400235aa:	cmp    rsi,r13
   1400235ad:	jne    0x140023570
   1400235af:	mov    rbx,QWORD PTR [rsp+0x20]
   1400235b4:	mov    QWORD PTR [rsp+0x28],rbx
   1400235b9:	mov    eax,DWORD PTR [rbx]
   1400235bb:	mov    rdx,rbx
   1400235be:	test   eax,eax
   1400235c0:	je     0x1400235de
   1400235c2:	cmp    eax,0xffffffff
   1400235c5:	je     0x14002365f
   1400235cb:	lock add DWORD PTR [rbx],0x1
   1400235cf:	mov    rbx,QWORD PTR [rsp+0x20]
   1400235d4:	mov    rdx,QWORD PTR [rsp+0x28]
   1400235d9:	jmp    0x14002365f
   1400235de:	mov    edx,DWORD PTR [rbx+0x4]
   1400235e1:	lea    rcx,[rsp+0x28]
   1400235e6:	call   QWORD PTR [rip+0x826c]        # 0x14002b858
   1400235ec:	mov    rdx,QWORD PTR [rsp+0x28]
   1400235f1:	mov    rbx,QWORD PTR [rsp+0x20]
   1400235f6:	movsxd rax,DWORD PTR [rdx+0xc]
   1400235fa:	lea    r13,[rdx+rax*8+0x10]
   1400235ff:	movsxd rax,DWORD PTR [rbx+0x8]
   140023603:	lea    rbp,[rbx+rax*8+0x10]
   140023608:	movsxd rax,DWORD PTR [rdx+0x8]
   14002360c:	lea    rsi,[rdx+rax*8+0x10]
   140023611:	cmp    rsi,r13
   140023614:	je     0x14002365f
   140023616:	mov    ecx,0x10
   14002361b:	call   0x14002952a
   140023620:	mov    rdi,rax
   140023623:	test   rax,rax
   140023626:	je     0x140023642
   140023628:	mov    rbx,QWORD PTR [rbp+0x0]
   14002362c:	mov    rcx,rax
   14002362f:	mov    rdx,rbx
   140023632:	call   QWORD PTR [rip+0x8268]        # 0x14002b8a0
   140023638:	mov    r11d,DWORD PTR [rbx+0x8]
   14002363c:	mov    DWORD PTR [rdi+0x8],r11d
   140023640:	jmp    0x140023645
   140023642:	mov    rdi,r12
   140023645:	mov    QWORD PTR [rsi],rdi
   140023648:	add    rsi,0x8
   14002364c:	add    rbp,0x8
   140023650:	cmp    rsi,r13
   140023653:	jne    0x140023616
   140023655:	mov    rbx,QWORD PTR [rsp+0x20]
   14002365a:	mov    rdx,QWORD PTR [rsp+0x28]
   14002365f:	mov    DWORD PTR [rsp+0x30],r12d
   140023664:	movsxd rax,DWORD PTR [rdx+0x8]
   140023668:	lea    rcx,[rdx+rax*8+0x10]
   14002366d:	mov    QWORD PTR [rsp+0x38],rcx
   140023672:	movsxd rax,DWORD PTR [rdx+0xc]
   140023676:	lea    rcx,[rdx+rax*8+0x10]
   14002367b:	mov    QWORD PTR [rsp+0x40],rcx
   140023680:	mov    eax,DWORD PTR [rbx]
   140023682:	test   eax,eax
   140023684:	je     0x14002369b
   140023686:	cmp    eax,0xffffffff
   140023689:	je     0x1400236e0
   14002368b:	lock add DWORD PTR [rbx],0xffffffff
   14002368f:	setne  al
   140023692:	test   al,al
   140023694:	jne    0x1400236e0
   140023696:	mov    rbx,QWORD PTR [rsp+0x20]
   14002369b:	movsxd rax,DWORD PTR [rbx+0xc]
   14002369f:	lea    rdi,[rbx+rax*8+0x10]
   1400236a4:	movsxd rax,DWORD PTR [rbx+0x8]
   1400236a8:	lea    rbp,[rbx+rax*8+0x10]
   1400236ad:	cmp    rbp,rdi
   1400236b0:	je     0x1400236d5
   1400236b2:	mov    rsi,QWORD PTR [rdi-0x8]
   1400236b6:	sub    rdi,0x8
   1400236ba:	test   rsi,rsi
   1400236bd:	je     0x1400236d0
   1400236bf:	mov    rcx,rsi
   1400236c2:	call   QWORD PTR [rip+0x81d0]        # 0x14002b898
   1400236c8:	mov    rcx,rsi
   1400236cb:	call   0x140029524
   1400236d0:	cmp    rdi,rbp
   1400236d3:	jne    0x1400236b2
   1400236d5:	mov    rcx,rbx
   1400236d8:	call   QWORD PTR [rip+0x8192]        # 0x14002b870
   1400236de:	xchg   ax,ax
   1400236e0:	mov    eax,DWORD PTR [rsp+0x30]
   1400236e4:	inc    DWORD PTR [rsp+0x30]
   1400236e8:	test   eax,eax
   1400236ea:	jne    0x1400236fd
   1400236ec:	mov    rax,QWORD PTR [rsp+0x40]
   1400236f1:	cmp    QWORD PTR [rsp+0x38],rax
   1400236f6:	je     0x1400236fd
   1400236f8:	mov    r13b,0x1
   1400236fb:	jmp    0x140023700
   1400236fd:	xor    r13b,r13b
   140023700:	test   r12b,0x2
   140023704:	je     0x14002377c
   140023706:	mov    rsi,QWORD PTR [rsp+0x88]
   14002370e:	and    r12d,0xfffffffd
   140023712:	mov    eax,DWORD PTR [rsi]
   140023714:	test   eax,eax
   140023716:	je     0x140023730
   140023718:	cmp    eax,0xffffffff
   14002371b:	je     0x14002377c
   14002371d:	lock add DWORD PTR [rsi],0xffffffff
   140023721:	setne  al
   140023724:	test   al,al
   140023726:	jne    0x14002377c
   140023728:	mov    rsi,QWORD PTR [rsp+0x88]
   140023730:	movsxd rax,DWORD PTR [rsi+0xc]
   140023734:	lea    rbx,[rsi+rax*8+0x10]
   140023739:	movsxd rax,DWORD PTR [rsi+0x8]
   14002373d:	lea    rbp,[rsi+rax*8+0x10]
   140023742:	cmp    rbp,rbx
   140023745:	je     0x140023773
   140023747:	nop    WORD PTR [rax+rax*1+0x0]
   140023750:	mov    rdi,QWORD PTR [rbx-0x8]
   140023754:	sub    rbx,0x8
   140023758:	test   rdi,rdi
   14002375b:	je     0x14002376e
   14002375d:	mov    rcx,rdi
   140023760:	call   QWORD PTR [rip+0x8132]        # 0x14002b898
   140023766:	mov    rcx,rdi
   140023769:	call   0x140029524
   14002376e:	cmp    rbx,rbp
   140023771:	jne    0x140023750
   140023773:	mov    rcx,rsi
   140023776:	call   QWORD PTR [rip+0x80f4]        # 0x14002b870
   14002377c:	test   r13b,r13b
   14002377f:	je     0x140023ad1
   140023785:	mov    rax,QWORD PTR [rsp+0x38]
   14002378a:	mov    r15,QWORD PTR [rax]
   14002378d:	test   r12b,0x4
   140023791:	je     0x140023800
   140023793:	mov    rsi,QWORD PTR [rsp+0x60]
   140023798:	and    r12d,0xfffffffb
   14002379c:	mov    eax,DWORD PTR [rsi]
   14002379e:	test   eax,eax
   1400237a0:	je     0x1400237b7
   1400237a2:	cmp    eax,0xffffffff
   1400237a5:	je     0x140023800
   1400237a7:	lock add DWORD PTR [rsi],0xffffffff
   1400237ab:	setne  al
   1400237ae:	test   al,al
   1400237b0:	jne    0x140023800
   1400237b2:	mov    rsi,QWORD PTR [rsp+0x60]
   1400237b7:	movsxd rax,DWORD PTR [rsi+0xc]
   1400237bb:	lea    rbx,[rsi+rax*8+0x10]
   1400237c0:	movsxd rax,DWORD PTR [rsi+0x8]
   1400237c4:	lea    rbp,[rsi+rax*8+0x10]
   1400237c9:	cmp    rbp,rbx
   1400237cc:	je     0x1400237f3
   1400237ce:	xchg   ax,ax
   1400237d0:	mov    rdi,QWORD PTR [rbx-0x8]
   1400237d4:	sub    rbx,0x8
   1400237d8:	test   rdi,rdi
   1400237db:	je     0x1400237ee
   1400237dd:	mov    rcx,rdi
   1400237e0:	call   QWORD PTR [rip+0x80b2]        # 0x14002b898
   1400237e6:	mov    rcx,rdi
   1400237e9:	call   0x140029524
   1400237ee:	cmp    rbx,rbp
   1400237f1:	jne    0x1400237d0
   1400237f3:	mov    rcx,rsi
   1400237f6:	call   QWORD PTR [rip+0x8074]        # 0x14002b870
   1400237fc:	nop    DWORD PTR [rax+0x0]
   140023800:	mov    r13d,DWORD PTR [rsp+0x30]
   140023805:	test   r12b,0x10
   140023809:	je     0x14002387c
   14002380b:	mov    rsi,QWORD PTR [rsp+0x70]
   140023810:	and    r12d,0xffffffef
   140023814:	mov    eax,DWORD PTR [rsi]
   140023816:	test   eax,eax
   140023818:	je     0x14002382a
   14002381a:	cmp    eax,0xffffffff
   14002381d:	je     0x14002387c
   14002381f:	lock add DWORD PTR [rsi],0xffffffff
   140023823:	setne  al
   140023826:	test   al,al
   140023828:	jne    0x14002387c
   14002382a:	mov    rsi,QWORD PTR [rsp+0x70]
   14002382f:	movsxd rax,DWORD PTR [rsi+0xc]
   140023833:	lea    rbx,[rsi+rax*8+0x10]
   140023838:	movsxd rax,DWORD PTR [rsi+0x8]
   14002383c:	lea    rbp,[rsi+rax*8+0x10]
   140023841:	cmp    rbp,rbx
   140023844:	je     0x140023873
   140023846:	data16 nop WORD PTR [rax+rax*1+0x0]
   140023850:	mov    rdi,QWORD PTR [rbx-0x8]
   140023854:	sub    rbx,0x8
   140023858:	test   rdi,rdi
   14002385b:	je     0x14002386e
   14002385d:	mov    rcx,rdi
   140023860:	call   QWORD PTR [rip+0x8032]        # 0x14002b898
   140023866:	mov    rcx,rdi
   140023869:	call   0x140029524
   14002386e:	cmp    rbx,rbp
   140023871:	jne    0x140023850
   140023873:	mov    rcx,rsi
   140023876:	call   QWORD PTR [rip+0x7ff4]        # 0x14002b870
   14002387c:	test   r13d,r13d
   14002387f:	je     0x140023a41
   140023885:	lea    rcx,[rsp+0xf8]
   14002388d:	mov    dl,0x20
   14002388f:	call   QWORD PTR [rip+0x8033]        # 0x14002b8c8
   140023895:	lea    rcx,[rsp+0x80]
   14002389d:	mov    rdi,rax
   1400238a0:	mov    eax,DWORD PTR [rsp+0xf0]
   1400238a7:	lea    ebx,[rax+rax*1]
   1400238aa:	call   QWORD PTR [rip+0x7fe0]        # 0x14002b890
   1400238b0:	movzx  edx,WORD PTR [rdi]
   1400238b3:	mov    rcx,rax
   1400238b6:	mov    r8d,ebx
   1400238b9:	call   QWORD PTR [rip+0x7f29]        # 0x14002b7e8
   1400238bf:	mov    rdi,QWORD PTR [rsp+0xe0]
   1400238c7:	mov    rcx,rdi
   1400238ca:	mov    rdx,rax
   1400238cd:	call   QWORD PTR [rip+0x7cd5]        # 0x14002b5a8
   1400238d3:	lea    rcx,[rsp+0x80]
   1400238db:	call   QWORD PTR [rip+0x7fb7]        # 0x14002b898
   1400238e1:	lea    rdx,[rip+0xac68]        # 0x14002e550
   1400238e8:	mov    rcx,rdi
   1400238eb:	call   QWORD PTR [rip+0x7cbf]        # 0x14002b5b0
   1400238f1:	mov    rdx,QWORD PTR [rsp+0xe8]
   1400238f9:	lea    rcx,[rsp+0x48]
   1400238fe:	add    rdx,0x58
   140023902:	call   QWORD PTR [rip+0x7f98]        # 0x14002b8a0
   140023908:	lea    rcx,[rsp+0x58]
   14002390d:	mov    rdx,r15
   140023910:	call   QWORD PTR [rip+0x7f8a]        # 0x14002b8a0
   140023916:	lea    rdx,[rsp+0x48]
   14002391b:	lea    rcx,[rsp+0x58]
   140023920:	call   QWORD PTR [rip+0x7972]        # 0x14002b298
   140023926:	lea    rcx,[rsp+0x58]
   14002392b:	test   al,al
   14002392d:	sete   bl
   140023930:	call   QWORD PTR [rip+0x7f62]        # 0x14002b898
   140023936:	lea    rcx,[rsp+0x48]
   14002393b:	call   QWORD PTR [rip+0x7f57]        # 0x14002b898
   140023941:	test   bl,bl
   140023943:	je     0x14002398c
   140023945:	lea    rcx,[rsp+0x50]
   14002394a:	mov    rdx,r15
   14002394d:	call   QWORD PTR [rip+0x7f4d]        # 0x14002b8a0
   140023953:	lea    rdx,[rip+0xabce]        # 0x14002e528
   14002395a:	mov    rcx,rdi
   14002395d:	call   QWORD PTR [rip+0x7c4d]        # 0x14002b5b0
   140023963:	lea    rdx,[rsp+0x50]
   140023968:	mov    rcx,rax
   14002396b:	call   QWORD PTR [rip+0x7c37]        # 0x14002b5a8
   140023971:	lea    rdx,[rip+0xaba0]        # 0x14002e518
   140023978:	mov    rcx,rax
   14002397b:	call   QWORD PTR [rip+0x7c2f]        # 0x14002b5b0
   140023981:	lea    rcx,[rsp+0x50]
   140023986:	call   QWORD PTR [rip+0x7f0c]        # 0x14002b898
   14002398c:	mov    ebx,DWORD PTR [r15+0x8]
   140023990:	lea    rdx,[rip+0xab59]        # 0x14002e4f0
   140023997:	mov    rcx,rdi
   14002399a:	call   QWORD PTR [rip+0x7c10]        # 0x14002b5b0
   1400239a0:	mov    edx,ebx
   1400239a2:	mov    rcx,rax
   1400239a5:	call   QWORD PTR [rip+0x7a05]        # 0x14002b3b0
   1400239ab:	lea    rdx,[rip+0xaaee]        # 0x14002e4a0
   1400239b2:	mov    rcx,rax
   1400239b5:	call   QWORD PTR [rip+0x7bf5]        # 0x14002b5b0
   1400239bb:	dec    DWORD PTR [rsp+0x30]
   1400239bf:	test   r12b,0x8
   1400239c3:	je     0x140023800
   1400239c9:	mov    rsi,QWORD PTR [rsp+0x68]
   1400239ce:	and    r12d,0xfffffff7
   1400239d2:	mov    eax,DWORD PTR [rsi]
   1400239d4:	test   eax,eax
   1400239d6:	je     0x1400239f0
   1400239d8:	cmp    eax,0xffffffff
   1400239db:	je     0x140023800
   1400239e1:	lock add DWORD PTR [rsi],0xffffffff
   1400239e5:	setne  al
   1400239e8:	test   al,al
   1400239ea:	jne    0x140023800
   1400239f0:	mov    rsi,QWORD PTR [rsp+0x68]
   1400239f5:	movsxd rax,DWORD PTR [rsi+0xc]
   1400239f9:	lea    rbx,[rsi+rax*8+0x10]
   1400239fe:	movsxd rax,DWORD PTR [rsi+0x8]
   140023a02:	lea    rbp,[rsi+rax*8+0x10]
   140023a07:	cmp    rbp,rbx
   140023a0a:	je     0x140023a33
   140023a0c:	nop    DWORD PTR [rax+0x0]
   140023a10:	mov    rdi,QWORD PTR [rbx-0x8]
   140023a14:	sub    rbx,0x8
   140023a18:	test   rdi,rdi
   140023a1b:	je     0x140023a2e
   140023a1d:	mov    rcx,rdi
   140023a20:	call   QWORD PTR [rip+0x7e72]        # 0x14002b898
   140023a26:	mov    rcx,rdi
   140023a29:	call   0x140029524
   140023a2e:	cmp    rbx,rbp
   140023a31:	jne    0x140023a10
   140023a33:	mov    rcx,rsi
   140023a36:	call   QWORD PTR [rip+0x7e34]        # 0x14002b870
   140023a3c:	jmp    0x140023800
   140023a41:	add    QWORD PTR [rsp+0x38],0x8
   140023a47:	test   r12b,0x1
   140023a4b:	je     0x1400236e0
   140023a51:	mov    rsi,QWORD PTR [rsp+0x78]
   140023a56:	and    r12d,0xfffffffe
   140023a5a:	mov    eax,DWORD PTR [rsi]
   140023a5c:	test   eax,eax
   140023a5e:	je     0x140023a7d
   140023a60:	cmp    eax,0xffffffff
   140023a63:	je     0x1400236e0
   140023a69:	lock add DWORD PTR [rsi],0xffffffff
   140023a6d:	setne  al
   140023a70:	test   al,al
   140023a72:	jne    0x1400236e0
   140023a78:	mov    rsi,QWORD PTR [rsp+0x78]
   140023a7d:	movsxd rax,DWORD PTR [rsi+0xc]
   140023a81:	lea    rbx,[rsi+rax*8+0x10]
   140023a86:	movsxd rax,DWORD PTR [rsi+0x8]
   140023a8a:	lea    rbp,[rsi+rax*8+0x10]
   140023a8f:	cmp    rbp,rbx
   140023a92:	je     0x140023ac3
   140023a94:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140023aa0:	mov    rdi,QWORD PTR [rbx-0x8]
   140023aa4:	sub    rbx,0x8
   140023aa8:	test   rdi,rdi
   140023aab:	je     0x140023abe
   140023aad:	mov    rcx,rdi
   140023ab0:	call   QWORD PTR [rip+0x7de2]        # 0x14002b898
   140023ab6:	mov    rcx,rdi
   140023ab9:	call   0x140029524
   140023abe:	cmp    rbx,rbp
   140023ac1:	jne    0x140023aa0
   140023ac3:	mov    rcx,rsi
   140023ac6:	call   QWORD PTR [rip+0x7da4]        # 0x14002b870
   140023acc:	jmp    0x1400236e0
   140023ad1:	mov    rsi,QWORD PTR [rsp+0x28]
   140023ad6:	mov    r15,QWORD PTR [rsp+0x98]
   140023ade:	mov    r13,QWORD PTR [rsp+0xa8]
   140023ae6:	mov    eax,DWORD PTR [rsi]
   140023ae8:	test   eax,eax
   140023aea:	je     0x140023b01
   140023aec:	cmp    eax,0xffffffff
   140023aef:	je     0x140023b4c
   140023af1:	lock add DWORD PTR [rsi],0xffffffff
   140023af5:	setne  al
   140023af8:	test   al,al
   140023afa:	jne    0x140023b4c
   140023afc:	mov    rsi,QWORD PTR [rsp+0x28]
   140023b01:	movsxd rax,DWORD PTR [rsi+0xc]
   140023b05:	lea    rbx,[rsi+rax*8+0x10]
   140023b0a:	movsxd rax,DWORD PTR [rsi+0x8]
   140023b0e:	lea    rbp,[rsi+rax*8+0x10]
   140023b13:	cmp    rbp,rbx
   140023b16:	je     0x140023b43
   140023b18:	nop    DWORD PTR [rax+rax*1+0x0]
   140023b20:	mov    rdi,QWORD PTR [rbx-0x8]
   140023b24:	sub    rbx,0x8
   140023b28:	test   rdi,rdi
   140023b2b:	je     0x140023b3e
   140023b2d:	mov    rcx,rdi
   140023b30:	call   QWORD PTR [rip+0x7d62]        # 0x14002b898
   140023b36:	mov    rcx,rdi
   140023b39:	call   0x140029524
   140023b3e:	cmp    rbx,rbp
   140023b41:	jne    0x140023b20
   140023b43:	mov    rcx,rsi
   140023b46:	call   QWORD PTR [rip+0x7d24]        # 0x14002b870
   140023b4c:	mov    rbp,QWORD PTR [rsp+0xb0]
   140023b54:	mov    rbx,QWORD PTR [rsp+0xb8]
   140023b5c:	mov    r14,QWORD PTR [rsp+0xa0]
   140023b64:	add    rsp,0xc0
   140023b6b:	pop    r12
   140023b6d:	pop    rdi
   140023b6e:	pop    rsi
   140023b6f:	ret    
   140023b70:	mov    QWORD PTR [rsp+0x8],rbx
   140023b75:	mov    QWORD PTR [rsp+0x10],rsi
   140023b7a:	push   rdi
   140023b7b:	sub    rsp,0x30
   140023b7f:	mov    rbx,r8
   140023b82:	mov    rdi,rdx
   140023b85:	mov    rsi,rcx
   140023b88:	call   QWORD PTR [rip+0x7e6a]        # 0x14002b9f8
   140023b8e:	lea    rax,[rip+0xab83]        # 0x14002e718
   140023b95:	lea    r11,[rip+0xab0c]        # 0x14002e6a8
   140023b9c:	mov    QWORD PTR [rsi+0x8],rax
   140023ba0:	lea    rax,[rip+0xaad1]        # 0x14002e678
   140023ba7:	lea    rcx,[rsi+0x48]
   140023bab:	mov    QWORD PTR [rsi+0x10],rax
   140023baf:	lea    rax,[rip+0xaaa2]        # 0x14002e658
   140023bb6:	mov    QWORD PTR [rsi],r11
   140023bb9:	mov    QWORD PTR [rsi+0x18],rax
   140023bbd:	lea    rax,[rip+0xaa44]        # 0x14002e608
   140023bc4:	mov    QWORD PTR [rsi+0x38],rdi
   140023bc8:	mov    QWORD PTR [rsi+0x20],rax
   140023bcc:	lea    rax,[rip+0xa9fd]        # 0x14002e5d0
   140023bd3:	mov    QWORD PTR [rsi+0x40],rbx
   140023bd7:	mov    QWORD PTR [rsi+0x28],rax
   140023bdb:	call   QWORD PTR [rip+0x7caf]        # 0x14002b890
   140023be1:	lea    rcx,[rsi+0x50]
   140023be5:	call   QWORD PTR [rip+0x7ca5]        # 0x14002b890
   140023beb:	lea    rcx,[rsi+0x58]
   140023bef:	call   QWORD PTR [rip+0x7c9b]        # 0x14002b890
   140023bf5:	lea    rcx,[rsi+0x60]
   140023bf9:	call   QWORD PTR [rip+0x7c91]        # 0x14002b890
   140023bff:	mov    rdx,QWORD PTR [rip+0x7c82]        # 0x14002b888
   140023c06:	lea    rcx,[rsi+0x78]
   140023c0a:	mov    QWORD PTR [rsi+0x68],rdx
   140023c0e:	mov    rax,QWORD PTR [rip+0x7c73]        # 0x14002b888
   140023c15:	mov    QWORD PTR [rsi+0x70],rax
   140023c19:	call   QWORD PTR [rip+0x7c71]        # 0x14002b890
   140023c1f:	lea    rcx,[rsi+0x80]
   140023c26:	call   QWORD PTR [rip+0x7c64]        # 0x14002b890
   140023c2c:	lea    rcx,[rsi+0x88]
   140023c33:	call   QWORD PTR [rip+0x7c57]        # 0x14002b890
   140023c39:	lea    rcx,[rsi+0x90]
   140023c40:	call   QWORD PTR [rip+0x7c4a]        # 0x14002b890
   140023c46:	mov    BYTE PTR [rsi+0x98],0x1
   140023c4d:	mov    BYTE PTR [rsi+0x99],0x1
   140023c54:	mov    rax,QWORD PTR [rip+0x7c2d]        # 0x14002b888
   140023c5b:	lea    rcx,[rsi+0xa8]
   140023c62:	mov    QWORD PTR [rsi+0xa0],rax
   140023c69:	call   QWORD PTR [rip+0x7c21]        # 0x14002b890
   140023c6f:	lea    rcx,[rsi+0xb8]
   140023c76:	mov    DWORD PTR [rsi+0xb0],0xffffffff
   140023c80:	call   QWORD PTR [rip+0x7c0a]        # 0x14002b890
   140023c86:	mov    rdx,QWORD PTR [rip+0x7bfb]        # 0x14002b888
   140023c8d:	mov    QWORD PTR [rsi+0xc0],rdx
   140023c94:	mov    rax,QWORD PTR [rip+0x7be5]        # 0x14002b880
   140023c9b:	lea    rcx,[rsi+0xd0]
   140023ca2:	mov    QWORD PTR [rsi+0xc8],rax
   140023ca9:	call   QWORD PTR [rip+0x7be1]        # 0x14002b890
   140023caf:	lea    rcx,[rsi+0xd8]
   140023cb6:	call   QWORD PTR [rip+0x7bd4]        # 0x14002b890
   140023cbc:	mov    rdx,QWORD PTR [rip+0x1173d]        # 0x140035400
   140023cc3:	xor    ebx,ebx
   140023cc5:	test   rdx,rdx
   140023cc8:	je     0x140023ce1
   140023cca:	or     rcx,0xffffffffffffffff
   140023cce:	xor    eax,eax
   140023cd0:	mov    rdi,rdx
   140023cd3:	repnz scas al,BYTE PTR es:[rdi]
   140023cd5:	not    rcx
   140023cd8:	dec    rcx
   140023cdb:	mov    DWORD PTR [rsp+0x20],ecx
   140023cdf:	jmp    0x140023ce5
   140023ce1:	mov    DWORD PTR [rsp+0x20],ebx
   140023ce5:	mov    QWORD PTR [rsp+0x28],rdx
   140023cea:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   140023cef:	lea    rcx,[rsi+0xe0]
   140023cf6:	lea    rdx,[rsp+0x20]
   140023cfb:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140023d01:	call   QWORD PTR [rip+0x7b59]        # 0x14002b860
   140023d07:	mov    r11,QWORD PTR [rip+0x116e2]        # 0x1400353f0
   140023d0e:	test   r11,r11
   140023d11:	je     0x140023d2a
   140023d13:	or     rcx,0xffffffffffffffff
   140023d17:	xor    eax,eax
   140023d19:	mov    rdi,r11
   140023d1c:	repnz scas al,BYTE PTR es:[rdi]
   140023d1e:	not    rcx
   140023d21:	dec    rcx
   140023d24:	mov    DWORD PTR [rsp+0x20],ecx
   140023d28:	jmp    0x140023d2e
   140023d2a:	mov    DWORD PTR [rsp+0x20],ebx
   140023d2e:	mov    QWORD PTR [rsp+0x28],r11
   140023d33:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   140023d38:	lea    rcx,[rsi+0xe8]
   140023d3f:	lea    rdx,[rsp+0x20]
   140023d44:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140023d4a:	call   QWORD PTR [rip+0x7b10]        # 0x14002b860
   140023d50:	mov    r11,QWORD PTR [rip+0x116a1]        # 0x1400353f8
   140023d57:	test   r11,r11
   140023d5a:	je     0x140023d73
   140023d5c:	or     rcx,0xffffffffffffffff
   140023d60:	xor    eax,eax
   140023d62:	mov    rdi,r11
   140023d65:	repnz scas al,BYTE PTR es:[rdi]
   140023d67:	not    rcx
   140023d6a:	dec    rcx
   140023d6d:	mov    DWORD PTR [rsp+0x20],ecx
   140023d71:	jmp    0x140023d77
   140023d73:	mov    DWORD PTR [rsp+0x20],ebx
   140023d77:	mov    QWORD PTR [rsp+0x28],r11
   140023d7c:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   140023d81:	lea    rcx,[rsi+0xf0]
   140023d88:	lea    rdx,[rsp+0x20]
   140023d8d:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140023d93:	call   QWORD PTR [rip+0x7ac7]        # 0x14002b860
   140023d99:	mov    rdx,QWORD PTR [rip+0x7a58]        # 0x14002b7f8
   140023da0:	mov    rbx,QWORD PTR [rsp+0x40]
   140023da5:	mov    QWORD PTR [rsi+0xf8],rdx
   140023dac:	mov    rax,rsi
   140023daf:	mov    rsi,QWORD PTR [rsp+0x48]
   140023db4:	add    rsp,0x30
   140023db8:	pop    rdi
   140023db9:	ret    
   140023dba:	int3   
   140023dbb:	int3   
   140023dbc:	int3   
   140023dbd:	int3   
   140023dbe:	int3   
   140023dbf:	int3   
   140023dc0:	sub    rcx,0x20
   140023dc4:	jmp    0x140024330
   140023dc9:	int3   
   140023dca:	int3   
   140023dcb:	int3   
   140023dcc:	int3   
   140023dcd:	int3   
   140023dce:	int3   
   140023dcf:	int3   
   140023dd0:	sub    rcx,0x10
   140023dd4:	jmp    QWORD PTR [rip+0x7bce]        # 0x14002b9a8
   140023dda:	int3   
   140023ddb:	int3   
   140023ddc:	int3   
   140023ddd:	int3   
   140023dde:	int3   
   140023ddf:	int3   
   140023de0:	sub    rcx,0x8
   140023de4:	jmp    0x140024330
   140023de9:	int3   
   140023dea:	int3   
   140023deb:	int3   
   140023dec:	int3   
   140023ded:	int3   
   140023dee:	int3   
   140023def:	int3   
   140023df0:	sub    rcx,0x28
   140023df4:	jmp    0x140024330
   140023df9:	int3   
   140023dfa:	int3   
   140023dfb:	int3   
   140023dfc:	int3   
   140023dfd:	int3   
   140023dfe:	int3   
   140023dff:	int3   
   140023e00:	sub    rcx,0x18
   140023e04:	jmp    QWORD PTR [rip+0x7b9e]        # 0x14002b9a8
   140023e0a:	int3   
   140023e0b:	int3   
   140023e0c:	int3   
   140023e0d:	int3   
   140023e0e:	int3   
   140023e0f:	int3   
   140023e10:	sub    rcx,0x10
   140023e14:	jmp    0x140024330
   140023e19:	int3   
   140023e1a:	int3   
   140023e1b:	int3   
   140023e1c:	int3   
   140023e1d:	int3   
   140023e1e:	int3   
   140023e1f:	int3   
   140023e20:	sub    rcx,0x20
   140023e24:	jmp    QWORD PTR [rip+0x7b7e]        # 0x14002b9a8
   140023e2a:	int3   
   140023e2b:	int3   
   140023e2c:	int3   
   140023e2d:	int3   
   140023e2e:	int3   
   140023e2f:	int3   
   140023e30:	sub    rcx,0x18
   140023e34:	jmp    0x140024330
   140023e39:	int3   
   140023e3a:	int3   
   140023e3b:	int3   
   140023e3c:	int3   
   140023e3d:	int3   
   140023e3e:	int3   
   140023e3f:	int3   
   140023e40:	sub    rcx,0x8
   140023e44:	jmp    QWORD PTR [rip+0x7b5e]        # 0x14002b9a8
   140023e4a:	int3   
   140023e4b:	int3   
   140023e4c:	int3   
   140023e4d:	int3   
   140023e4e:	int3   
   140023e4f:	int3   
   140023e50:	sub    rcx,0x28
   140023e54:	jmp    QWORD PTR [rip+0x7b4e]        # 0x14002b9a8
   140023e5a:	int3   
   140023e5b:	int3   
   140023e5c:	int3   
   140023e5d:	int3   
   140023e5e:	int3   
   140023e5f:	int3   
   140023e60:	mov    QWORD PTR [rsp+0x8],rbx
   140023e65:	push   rdi
   140023e66:	sub    rsp,0x20
   140023e6a:	mov    rbx,rcx
   140023e6d:	mov    rcx,QWORD PTR [rcx+0xf8]
   140023e74:	mov    eax,DWORD PTR [rcx]
   140023e76:	test   eax,eax
   140023e78:	je     0x140023e8a
   140023e7a:	cmp    eax,0xffffffff
   140023e7d:	je     0x140023ea0
   140023e7f:	lock add DWORD PTR [rcx],0xffffffff
   140023e83:	setne  al
   140023e86:	test   al,al
   140023e88:	jne    0x140023ea0
   140023e8a:	mov    rcx,QWORD PTR [rbx+0xf8]
   140023e91:	mov    edx,0x4
   140023e96:	lea    r8d,[rdx+0x4]
   140023e9a:	call   QWORD PTR [rip+0x7960]        # 0x14002b800
   140023ea0:	lea    rcx,[rbx+0xf0]
   140023ea7:	call   QWORD PTR [rip+0x79eb]        # 0x14002b898
   140023ead:	lea    rcx,[rbx+0xe8]
   140023eb4:	call   QWORD PTR [rip+0x79de]        # 0x14002b898
   140023eba:	lea    rcx,[rbx+0xe0]
   140023ec1:	call   QWORD PTR [rip+0x79d1]        # 0x14002b898
   140023ec7:	lea    rcx,[rbx+0xd8]
   140023ece:	call   QWORD PTR [rip+0x79c4]        # 0x14002b898
   140023ed4:	lea    rcx,[rbx+0xd0]
   140023edb:	call   QWORD PTR [rip+0x79b7]        # 0x14002b898
   140023ee1:	mov    rcx,QWORD PTR [rbx+0xc8]
   140023ee8:	mov    eax,DWORD PTR [rcx+0x10]
   140023eeb:	test   eax,eax
   140023eed:	je     0x140023f00
   140023eef:	cmp    eax,0xffffffff
   140023ef2:	je     0x140023f14
   140023ef4:	lock add DWORD PTR [rcx+0x10],0xffffffff
   140023ef9:	setne  al
   140023efc:	test   al,al
   140023efe:	jne    0x140023f14
   140023f00:	mov    rcx,QWORD PTR [rbx+0xc8]
   140023f07:	lea    rdx,[rip+0xfffffffffffdd502]        # 0x140001410
   140023f0e:	call   QWORD PTR [rip+0x7954]        # 0x14002b868
   140023f14:	lea    rcx,[rbx+0xc0]
   140023f1b:	mov    rax,QWORD PTR [rcx]
   140023f1e:	mov    edx,DWORD PTR [rax]
   140023f20:	test   edx,edx
   140023f22:	je     0x140023f34
   140023f24:	cmp    edx,0xffffffff
   140023f27:	je     0x140023f3c
   140023f29:	lock add DWORD PTR [rax],0xffffffff
   140023f2d:	setne  al
   140023f30:	test   al,al
   140023f32:	jne    0x140023f3c
   140023f34:	mov    rdx,QWORD PTR [rcx]
   140023f37:	call   0x140001440
   140023f3c:	lea    rcx,[rbx+0xb8]
   140023f43:	call   QWORD PTR [rip+0x794f]        # 0x14002b898
   140023f49:	lea    rcx,[rbx+0xa8]
   140023f50:	call   QWORD PTR [rip+0x7942]        # 0x14002b898
   140023f56:	lea    rcx,[rbx+0xa0]
   140023f5d:	call   0x1400017b0
   140023f62:	lea    rcx,[rbx+0x90]
   140023f69:	call   QWORD PTR [rip+0x7929]        # 0x14002b898
   140023f6f:	lea    rcx,[rbx+0x88]
   140023f76:	call   QWORD PTR [rip+0x791c]        # 0x14002b898
   140023f7c:	lea    rcx,[rbx+0x80]
   140023f83:	call   QWORD PTR [rip+0x790f]        # 0x14002b898
   140023f89:	lea    rcx,[rbx+0x78]
   140023f8d:	call   QWORD PTR [rip+0x7905]        # 0x14002b898
   140023f93:	lea    rcx,[rbx+0x70]
   140023f97:	call   0x1400017b0
   140023f9c:	lea    rcx,[rbx+0x68]
   140023fa0:	call   0x1400017b0
   140023fa5:	lea    rcx,[rbx+0x60]
   140023fa9:	call   QWORD PTR [rip+0x78e9]        # 0x14002b898
   140023faf:	lea    rcx,[rbx+0x58]
   140023fb3:	call   QWORD PTR [rip+0x78df]        # 0x14002b898
   140023fb9:	lea    rcx,[rbx+0x50]
   140023fbd:	call   QWORD PTR [rip+0x78d5]        # 0x14002b898
   140023fc3:	lea    rcx,[rbx+0x48]
   140023fc7:	call   QWORD PTR [rip+0x78cb]        # 0x14002b898
   140023fcd:	mov    rcx,rbx
   140023fd0:	mov    rbx,QWORD PTR [rsp+0x30]
   140023fd5:	add    rsp,0x20
   140023fd9:	pop    rdi
   140023fda:	rex.W jmp QWORD PTR [rip+0x7957]        # 0x14002b938
   140023fe1:	int3   
   140023fe2:	int3   
   140023fe3:	int3   
   140023fe4:	int3   
   140023fe5:	int3   
   140023fe6:	int3   
   140023fe7:	int3   
   140023fe8:	int3   
   140023fe9:	int3   
   140023fea:	int3   
   140023feb:	int3   
   140023fec:	int3   
   140023fed:	int3   
   140023fee:	int3   
   140023fef:	int3   
   140023ff0:	mov    QWORD PTR [rsp+0x10],rbx
   140023ff5:	push   rbp
   140023ff6:	push   rsi
   140023ff7:	push   rdi
   140023ff8:	sub    rsp,0x30
   140023ffc:	mov    rbp,rcx
   140023fff:	lea    rcx,[rsp+0x50]
   140024004:	mov    rsi,rdx
   140024007:	call   QWORD PTR [rip+0x7883]        # 0x14002b890
   14002400d:	lea    rdx,[rsp+0x68]
   140024012:	mov    rcx,rsi
   140024015:	call   QWORD PTR [rip+0x7905]        # 0x14002b920
   14002401b:	lea    rdx,[rsp+0x60]
   140024020:	mov    rcx,rax
   140024023:	call   QWORD PTR [rip+0x77b7]        # 0x14002b7e0
   140024029:	mov    rcx,rax
   14002402c:	call   QWORD PTR [rip+0x7496]        # 0x14002b4c8
   140024032:	mov    rcx,rsi
   140024035:	mov    rdi,rax
   140024038:	call   QWORD PTR [rip+0x78ea]        # 0x14002b928
   14002403e:	mov    rcx,rsi
   140024041:	mov    ebx,eax
   140024043:	call   QWORD PTR [rip+0x78e7]        # 0x14002b930
   140024049:	lea    rdx,[rip+0xa6f0]        # 0x14002e740
   140024050:	lea    rcx,[rsp+0x50]
   140024055:	mov    r9d,ebx
   140024058:	mov    r8d,eax
   14002405b:	mov    QWORD PTR [rsp+0x20],rdi
   140024060:	call   QWORD PTR [rip+0x77b2]        # 0x14002b818
   140024066:	lea    rcx,[rsp+0x60]
   14002406b:	call   QWORD PTR [rip+0x7157]        # 0x14002b1c8
   140024071:	lea    rcx,[rsp+0x68]
   140024076:	call   QWORD PTR [rip+0x781c]        # 0x14002b898
   14002407c:	mov    rbx,QWORD PTR [rbp+0x38]
   140024080:	mov    rax,QWORD PTR [rbx+0x60]
   140024084:	mov    ecx,DWORD PTR [rax]
   140024086:	cmp    ecx,0x1
   140024089:	je     0x1400240b8
   14002408b:	test   ecx,ecx
   14002408d:	je     0x1400240b8
   14002408f:	lea    rcx,[rbx+0x60]
   140024093:	mov    edx,0x7fffffff
   140024098:	mov    r8d,0x1
   14002409e:	call   0x140001a10
   1400240a3:	test   rax,rax
   1400240a6:	je     0x1400240da
   1400240a8:	lea    rdx,[rsp+0x50]
   1400240ad:	mov    rcx,rax
   1400240b0:	call   QWORD PTR [rip+0x77ea]        # 0x14002b8a0
   1400240b6:	jmp    0x1400240da
   1400240b8:	lea    rdx,[rsp+0x50]
   1400240bd:	lea    rcx,[rsp+0x60]
   1400240c2:	call   QWORD PTR [rip+0x77d8]        # 0x14002b8a0
   1400240c8:	lea    rcx,[rbx+0x60]
   1400240cc:	call   QWORD PTR [rip+0x776e]        # 0x14002b840
   1400240d2:	mov    rcx,QWORD PTR [rsp+0x60]
   1400240d7:	mov    QWORD PTR [rax],rcx
   1400240da:	lea    rcx,[rsp+0x50]
   1400240df:	call   QWORD PTR [rip+0x77b3]        # 0x14002b898
   1400240e5:	mov    rbx,QWORD PTR [rsp+0x58]
   1400240ea:	xor    al,al
   1400240ec:	add    rsp,0x30
   1400240f0:	pop    rdi
   1400240f1:	pop    rsi
   1400240f2:	pop    rbp
   1400240f3:	ret    
   1400240f4:	int3   
   1400240f5:	int3   
   1400240f6:	int3   
   1400240f7:	int3   
   1400240f8:	int3   
   1400240f9:	int3   
   1400240fa:	int3   
   1400240fb:	int3   
   1400240fc:	int3   
   1400240fd:	int3   
   1400240fe:	int3   
   1400240ff:	int3   
   140024100:	mov    QWORD PTR [rsp+0x8],rbx
   140024105:	push   rdi
   140024106:	sub    rsp,0x140
   14002410d:	mov    rbx,rcx
   140024110:	lea    rcx,[rsp+0x30]
   140024115:	mov    rdi,r8
   140024118:	call   QWORD PTR [rip+0x77ca]        # 0x14002b8e8
   14002411e:	lea    rcx,[rsp+0x20]
   140024123:	call   QWORD PTR [rip+0x77c7]        # 0x14002b8f0
   140024129:	lea    rcx,[rsp+0x40]
   14002412e:	mov    r8,rdi
   140024131:	mov    rdx,rbx
   140024134:	call   0x140023b70
   140024139:	lea    rdx,[rsp+0x40]
   14002413e:	lea    rcx,[rsp+0x20]
   140024143:	call   QWORD PTR [rip+0x77af]        # 0x14002b8f8
   140024149:	lea    rdx,[rsp+0x48]
   14002414e:	lea    rcx,[rsp+0x20]
   140024153:	call   QWORD PTR [rip+0x77a7]        # 0x14002b900
   140024159:	lea    rdx,[rsp+0x30]
   14002415e:	lea    rcx,[rsp+0x20]
   140024163:	call   QWORD PTR [rip+0x779f]        # 0x14002b908
   140024169:	lea    rcx,[rsp+0x40]
   14002416e:	movzx  ebx,al
   140024171:	call   0x140023e60
   140024176:	lea    rcx,[rsp+0x20]
   14002417b:	call   QWORD PTR [rip+0x778f]        # 0x14002b910
   140024181:	lea    rcx,[rsp+0x30]
   140024186:	call   QWORD PTR [rip+0x778c]        # 0x14002b918
   14002418c:	mov    al,bl
   14002418e:	mov    rbx,QWORD PTR [rsp+0x150]
   140024196:	add    rsp,0x140
   14002419d:	pop    rdi
   14002419e:	ret    
   14002419f:	int3   
   1400241a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400241a5:	mov    QWORD PTR [rsp+0x10],rbp
   1400241aa:	mov    QWORD PTR [rsp+0x18],rsi
   1400241af:	push   rdi
   1400241b0:	push   r12
   1400241b2:	push   r13
   1400241b4:	sub    rsp,0x30
   1400241b8:	mov    rax,QWORD PTR [rcx]
   1400241bb:	mov    rbx,rcx
   1400241be:	mov    rbp,r9
   1400241c1:	mov    ecx,DWORD PTR [rax+0x10]
   1400241c4:	mov    r12,r8
   1400241c7:	mov    rdi,rdx
   1400241ca:	cmp    ecx,0x1
   1400241cd:	je     0x1400241db
   1400241cf:	test   ecx,ecx
   1400241d1:	je     0x1400241db
   1400241d3:	mov    rcx,rbx
   1400241d6:	call   0x140001b50
   1400241db:	mov    rax,QWORD PTR [rbx]
   1400241de:	mov    rcx,r12
   1400241e1:	mov    edx,DWORD PTR [rax+0x24]
   1400241e4:	call   QWORD PTR [rip+0x70be]        # 0x14002b2a8
   1400241ea:	mov    rdx,r12
   1400241ed:	mov    rcx,rbx
   1400241f0:	mov    r8d,eax
   1400241f3:	mov    r13d,eax
   1400241f6:	call   0x14001c3c0
   1400241fb:	mov    rcx,QWORD PTR [rbx]
   1400241fe:	mov    rsi,rax
   140024201:	mov    rax,QWORD PTR [rax]
   140024204:	cmp    rax,rcx
   140024207:	jne    0x14002425c
   140024209:	mov    edx,DWORD PTR [rcx+0x20]
   14002420c:	cmp    DWORD PTR [rcx+0x14],edx
   14002420f:	jl     0x140024241
   140024211:	movsx  edx,WORD PTR [rcx+0x1e]
   140024215:	inc    edx
   140024217:	call   QWORD PTR [rip+0x70c3]        # 0x14002b2e0
   14002421d:	mov    r11,QWORD PTR [rbx]
   140024220:	mov    rcx,r12
   140024223:	mov    edx,DWORD PTR [r11+0x24]
   140024227:	call   QWORD PTR [rip+0x707b]        # 0x14002b2a8
   14002422d:	mov    rdx,r12
   140024230:	mov    rcx,rbx
   140024233:	mov    r8d,eax
   140024236:	mov    r13d,eax
   140024239:	call   0x14001c3c0
   14002423e:	mov    rsi,rax
   140024241:	mov    r9,rbp
   140024244:	mov    r8,r12
   140024247:	mov    edx,r13d
   14002424a:	mov    rcx,rbx
   14002424d:	mov    QWORD PTR [rsp+0x20],rsi
   140024252:	call   0x140005280
   140024257:	mov    QWORD PTR [rdi],rax
   14002425a:	jmp    0x14002426f
   14002425c:	lea    rcx,[rax+0x18]
   140024260:	mov    rdx,rbp
   140024263:	call   QWORD PTR [rip+0x7647]        # 0x14002b8b0
   140024269:	mov    r11,QWORD PTR [rsi]
   14002426c:	mov    QWORD PTR [rdi],r11
   14002426f:	mov    rbx,QWORD PTR [rsp+0x50]
   140024274:	mov    rbp,QWORD PTR [rsp+0x58]
   140024279:	mov    rsi,QWORD PTR [rsp+0x60]
   14002427e:	mov    rax,rdi
   140024281:	add    rsp,0x30
   140024285:	pop    r13
   140024287:	pop    r12
   140024289:	pop    rdi
   14002428a:	ret    
   14002428b:	int3   
   14002428c:	int3   
   14002428d:	int3   
   14002428e:	int3   
   14002428f:	int3   
   140024290:	rex push rbx
   140024292:	sub    rsp,0x20
   140024296:	mov    rbx,rcx
   140024299:	mov    rcx,QWORD PTR [rcx]
   14002429c:	mov    eax,DWORD PTR [rcx]
   14002429e:	cmp    eax,0x1
   1400242a1:	je     0x1400242ea
   1400242a3:	test   eax,eax
   1400242a5:	je     0x1400242ea
   1400242a7:	mov    r8d,DWORD PTR [rcx+0x8]
   1400242ab:	btr    r8d,0x1f
   1400242b0:	test   r8d,r8d
   1400242b3:	jne    0x1400242dc
   1400242b5:	lea    r9d,[r8+0x2]
   1400242b9:	xor    r8d,r8d
   1400242bc:	lea    edx,[r9+0x6]
   1400242c0:	lea    ecx,[rdx-0x4]
   1400242c3:	call   QWORD PTR [rip+0x753f]        # 0x14002b808
   1400242c9:	mov    QWORD PTR [rbx],rax
   1400242cc:	mov    rcx,rax
   1400242cf:	mov    rax,QWORD PTR [rax+0x10]
   1400242d3:	add    rax,rcx
   1400242d6:	add    rsp,0x20
   1400242da:	pop    rbx
   1400242db:	ret    
   1400242dc:	mov    edx,DWORD PTR [rcx+0x4]
   1400242df:	xor    r9d,r9d
   1400242e2:	mov    rcx,rbx
   1400242e5:	call   0x140022fd0
   1400242ea:	mov    rcx,QWORD PTR [rbx]
   1400242ed:	mov    rax,QWORD PTR [rcx+0x10]
   1400242f1:	add    rax,rcx
   1400242f4:	add    rsp,0x20
   1400242f8:	pop    rbx
   1400242f9:	ret    
   1400242fa:	int3   
   1400242fb:	int3   
   1400242fc:	int3   
   1400242fd:	int3   
   1400242fe:	int3   
   1400242ff:	int3   
   140024300:	rex push rbx
   140024302:	sub    rsp,0x20
   140024306:	mov    rbx,rcx
   140024309:	add    rcx,0x18
   14002430d:	call   0x1400017b0
   140024312:	lea    rcx,[rbx+0x10]
   140024316:	add    rsp,0x20
   14002431a:	pop    rbx
   14002431b:	rex.W jmp QWORD PTR [rip+0x7576]        # 0x14002b898
   140024322:	int3   
   140024323:	int3   
   140024324:	int3   
   140024325:	int3   
   140024326:	int3   
   140024327:	int3   
   140024328:	int3   
   140024329:	int3   
   14002432a:	int3   
   14002432b:	int3   
   14002432c:	int3   
   14002432d:	int3   
   14002432e:	int3   
   14002432f:	int3   
   140024330:	mov    QWORD PTR [rsp+0x8],rbx
   140024335:	push   rdi
   140024336:	sub    rsp,0x20
   14002433a:	mov    ebx,edx
   14002433c:	mov    rdi,rcx
   14002433f:	call   0x140023e60
   140024344:	test   bl,0x1
   140024347:	je     0x140024351
   140024349:	mov    rcx,rdi
   14002434c:	call   0x140029524
   140024351:	mov    rax,rdi
   140024354:	mov    rbx,QWORD PTR [rsp+0x30]
   140024359:	add    rsp,0x20
   14002435d:	pop    rdi
   14002435e:	ret    
   14002435f:	int3   
   140024360:	mov    QWORD PTR [rsp+0x8],rbx
   140024365:	push   rdi
   140024366:	sub    rsp,0x20
   14002436a:	lea    rbx,[rcx+0xf8]
   140024371:	mov    edi,edx
   140024373:	mov    r8,QWORD PTR [rbx]
   140024376:	mov    edx,DWORD PTR [r8+0x4]
   14002437a:	mov    ecx,DWORD PTR [r8+0x8]
   14002437e:	mov    eax,DWORD PTR [r8]
   140024381:	btr    ecx,0x1f
   140024385:	lea    r11d,[rdx+0x1]
   140024389:	cmp    r11d,ecx
   14002438c:	seta   r10b
   140024390:	cmp    eax,0x1
   140024393:	je     0x140024399
   140024395:	test   eax,eax
   140024397:	jne    0x1400243bf
   140024399:	test   r10b,r10b
   14002439c:	jne    0x1400243bf
   14002439e:	mov    rax,QWORD PTR [r8+0x10]
   1400243a2:	movsxd rcx,DWORD PTR [r8+0x4]
   1400243a6:	lea    rcx,[rax+rcx*4]
   1400243aa:	mov    DWORD PTR [rcx+r8*1],edi
   1400243ae:	mov    rax,QWORD PTR [rbx]
   1400243b1:	inc    DWORD PTR [rax+0x4]
   1400243b4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400243b9:	add    rsp,0x20
   1400243bd:	pop    rdi
   1400243be:	ret    
   1400243bf:	movzx  eax,r10b
   1400243c3:	neg    al
   1400243c5:	sbb    r9d,r9d
   1400243c8:	and    r9d,0x8
   1400243cc:	test   r10b,r10b
   1400243cf:	cmovne ecx,r11d
   1400243d3:	mov    r8d,ecx
   1400243d6:	mov    rcx,rbx
   1400243d9:	call   0x140022fd0
   1400243de:	mov    r11,QWORD PTR [rbx]
   1400243e1:	mov    rax,QWORD PTR [r11+0x10]
   1400243e5:	movsxd rcx,DWORD PTR [r11+0x4]
   1400243e9:	lea    rcx,[rax+rcx*4]
   1400243ed:	mov    DWORD PTR [rcx+r11*1],edi
   1400243f1:	mov    rax,QWORD PTR [rbx]
   1400243f4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400243f9:	inc    DWORD PTR [rax+0x4]
   1400243fc:	add    rsp,0x20
   140024400:	pop    rdi
   140024401:	ret    
   140024402:	int3   
   140024403:	int3   
   140024404:	int3   
   140024405:	int3   
   140024406:	int3   
   140024407:	int3   
   140024408:	int3   
   140024409:	int3   
   14002440a:	int3   
   14002440b:	int3   
   14002440c:	int3   
   14002440d:	int3   
   14002440e:	int3   
   14002440f:	int3   
   140024410:	mov    QWORD PTR [rsp+0x20],rbx
   140024415:	push   rbp
   140024416:	push   rdi
   140024417:	push   r12
   140024419:	sub    rsp,0x70
   14002441d:	mov    rdi,rdx
   140024420:	lea    rdx,[rcx+0xe0]
   140024427:	mov    rbp,rcx
   14002442a:	xor    r12d,r12d
   14002442d:	mov    rcx,rdi
   140024430:	mov    rbx,r8
   140024433:	mov    DWORD PTR [rsp+0x90],r12d
   14002443b:	call   QWORD PTR [rip+0x6e57]        # 0x14002b298
   140024441:	test   al,al
   140024443:	jne    0x14002559d
   140024449:	lea    rdx,[rbp+0xe8]
   140024450:	mov    rcx,rdi
   140024453:	call   QWORD PTR [rip+0x6e3f]        # 0x14002b298
   140024459:	test   al,al
   14002445b:	jne    0x140024482
   14002445d:	lea    rdx,[rbp+0xf0]
   140024464:	mov    rcx,rdi
   140024467:	call   QWORD PTR [rip+0x6e2b]        # 0x14002b298
   14002446d:	test   al,al
   14002446f:	jne    0x140024482
   140024471:	mov    rbx,QWORD PTR [rsp+0xa8]
   140024479:	add    rsp,0x70
   14002447d:	pop    r12
   14002447f:	pop    rdi
   140024480:	pop    rbp
   140024481:	ret    
   140024482:	or     rcx,0xffffffffffffffff
   140024486:	lea    rdx,[rip+0xa40f]        # 0x14002e89c
   14002448d:	xor    eax,eax
   14002448f:	mov    rdi,rdx
   140024492:	mov    QWORD PTR [rsp+0x38],rdx
   140024497:	lea    rdx,[rsp+0x40]
   14002449c:	repnz scas al,BYTE PTR es:[rdi]
   14002449e:	not    rcx
   1400244a1:	dec    rcx
   1400244a4:	mov    DWORD PTR [rsp+0x30],ecx
   1400244a8:	mov    rcx,rbx
   1400244ab:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   1400244b0:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   1400244b6:	call   QWORD PTR [rip+0x6d64]        # 0x14002b220
   1400244bc:	test   al,al
   1400244be:	je     0x1400244cf
   1400244c0:	xor    edx,edx
   1400244c2:	mov    rcx,rbp
   1400244c5:	call   0x140024360
   1400244ca:	jmp    0x14002559d
   1400244cf:	or     rcx,0xffffffffffffffff
   1400244d3:	lea    rdx,[rip+0xa3ba]        # 0x14002e894
   1400244da:	xor    eax,eax
   1400244dc:	mov    rdi,rdx
   1400244df:	mov    QWORD PTR [rsp+0x38],rdx
   1400244e4:	lea    rdx,[rsp+0x40]
   1400244e9:	repnz scas al,BYTE PTR es:[rdi]
   1400244eb:	mov    QWORD PTR [rsp+0x98],rsi
   1400244f3:	not    rcx
   1400244f6:	dec    rcx
   1400244f9:	mov    DWORD PTR [rsp+0x30],ecx
   1400244fd:	mov    rcx,rbx
   140024500:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140024505:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   14002450b:	call   QWORD PTR [rip+0x6d0f]        # 0x14002b220
   140024511:	test   al,al
   140024513:	je     0x1400246fb
   140024519:	mov    rsi,QWORD PTR [rsp+0xb0]
   140024521:	or     rcx,0xffffffffffffffff
   140024525:	lea    rdx,[rip+0xa35c]        # 0x14002e888
   14002452c:	mov    rdi,rdx
   14002452f:	mov    QWORD PTR [rsp+0x38],rdx
   140024534:	xor    eax,eax
   140024536:	repnz scas al,BYTE PTR es:[rdi]
   140024538:	lea    r8,[rsp+0x40]
   14002453d:	lea    rdx,[rsp+0x90]
   140024545:	not    rcx
   140024548:	dec    rcx
   14002454b:	mov    DWORD PTR [rsp+0x30],ecx
   14002454f:	mov    rcx,rsi
   140024552:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140024557:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   14002455d:	call   QWORD PTR [rip+0x737d]        # 0x14002b8e0
   140024563:	lea    rcx,[rbp+0xa8]
   14002456a:	mov    rdx,rax
   14002456d:	call   QWORD PTR [rip+0x733d]        # 0x14002b8b0
   140024573:	lea    rcx,[rsp+0x90]
   14002457b:	call   QWORD PTR [rip+0x7317]        # 0x14002b898
   140024581:	or     rcx,0xffffffffffffffff
   140024585:	lea    rdx,[rip+0xa2ec]        # 0x14002e878
   14002458c:	mov    rdi,rdx
   14002458f:	mov    QWORD PTR [rsp+0x38],rdx
   140024594:	xor    eax,eax
   140024596:	repnz scas al,BYTE PTR es:[rdi]
   140024598:	lea    r8,[rsp+0x40]
   14002459d:	lea    rdx,[rsp+0x90]
   1400245a5:	not    rcx
   1400245a8:	dec    rcx
   1400245ab:	mov    DWORD PTR [rsp+0x30],ecx
   1400245af:	mov    rcx,rsi
   1400245b2:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   1400245b7:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   1400245bd:	call   QWORD PTR [rip+0x731d]        # 0x14002b8e0
   1400245c3:	lea    rcx,[rbp+0x48]
   1400245c7:	mov    rdx,rax
   1400245ca:	call   QWORD PTR [rip+0x72e0]        # 0x14002b8b0
   1400245d0:	lea    rcx,[rsp+0x90]
   1400245d8:	call   QWORD PTR [rip+0x72ba]        # 0x14002b898
   1400245de:	lea    rcx,[rsp+0x90]
   1400245e6:	mov    dl,0x5f
   1400245e8:	call   QWORD PTR [rip+0x72da]        # 0x14002b8c8
   1400245ee:	lea    rcx,[rsp+0x20]
   1400245f3:	mov    dl,0x2d
   1400245f5:	mov    rdi,rax
   1400245f8:	call   QWORD PTR [rip+0x72ca]        # 0x14002b8c8
   1400245fe:	movzx  r8d,WORD PTR [rdi]
   140024602:	movzx  edx,WORD PTR [rax]
   140024605:	mov    r12d,0x1
   14002460b:	lea    rcx,[rbp+0x48]
   14002460f:	mov    r9d,r12d
   140024612:	call   QWORD PTR [rip+0x6f48]        # 0x14002b560
   140024618:	or     rcx,0xffffffffffffffff
   14002461c:	lea    rdx,[rip+0xa245]        # 0x14002e868
   140024623:	mov    rdi,rdx
   140024626:	mov    QWORD PTR [rsp+0x38],rdx
   14002462b:	xor    eax,eax
   14002462d:	repnz scas al,BYTE PTR es:[rdi]
   14002462f:	lea    r8,[rsp+0x40]
   140024634:	lea    rdx,[rsp+0x90]
   14002463c:	not    rcx
   14002463f:	dec    rcx
   140024642:	mov    DWORD PTR [rsp+0x30],ecx
   140024646:	mov    rcx,rsi
   140024649:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14002464e:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   140024654:	call   QWORD PTR [rip+0x7286]        # 0x14002b8e0
   14002465a:	lea    rcx,[rbp+0x50]
   14002465e:	mov    rdx,rax
   140024661:	call   QWORD PTR [rip+0x7249]        # 0x14002b8b0
   140024667:	lea    rcx,[rsp+0x90]
   14002466f:	call   QWORD PTR [rip+0x7223]        # 0x14002b898
   140024675:	lea    rcx,[rsp+0x90]
   14002467d:	mov    dl,0x5f
   14002467f:	call   QWORD PTR [rip+0x7243]        # 0x14002b8c8
   140024685:	lea    rcx,[rsp+0x20]
   14002468a:	mov    dl,0x2d
   14002468c:	mov    rdi,rax
   14002468f:	call   QWORD PTR [rip+0x7233]        # 0x14002b8c8
   140024695:	movzx  r8d,WORD PTR [rdi]
   140024699:	movzx  edx,WORD PTR [rax]
   14002469c:	lea    rcx,[rbp+0x50]
   1400246a0:	mov    r9d,r12d
   1400246a3:	call   QWORD PTR [rip+0x6eb7]        # 0x14002b560
   1400246a9:	or     rcx,0xffffffffffffffff
   1400246ad:	lea    rdx,[rip+0xa1ac]        # 0x14002e860
   1400246b4:	mov    rdi,rdx
   1400246b7:	mov    QWORD PTR [rsp+0x38],rdx
   1400246bc:	xor    eax,eax
   1400246be:	repnz scas al,BYTE PTR es:[rdi]
   1400246c0:	lea    rdx,[rsp+0x40]
   1400246c5:	not    rcx
   1400246c8:	dec    rcx
   1400246cb:	mov    DWORD PTR [rsp+0x30],ecx
   1400246cf:	lea    rcx,[rbp+0x50]
   1400246d3:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   1400246d8:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   1400246de:	call   QWORD PTR [rip+0x6b3c]        # 0x14002b220
   1400246e4:	test   al,al
   1400246e6:	je     0x140025595
   1400246ec:	lea    rcx,[rbp+0x50]
   1400246f0:	call   QWORD PTR [rip+0x6cca]        # 0x14002b3c0
   1400246f6:	jmp    0x140025595
   1400246fb:	or     rcx,0xffffffffffffffff
   1400246ff:	lea    rdx,[rip+0xa152]        # 0x14002e858
   140024706:	xor    eax,eax
   140024708:	mov    rdi,rdx
   14002470b:	mov    QWORD PTR [rsp+0x38],rdx
   140024710:	lea    rdx,[rsp+0x40]
   140024715:	repnz scas al,BYTE PTR es:[rdi]
   140024717:	not    rcx
   14002471a:	dec    rcx
   14002471d:	mov    DWORD PTR [rsp+0x30],ecx
   140024721:	mov    rcx,rbx
   140024724:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140024729:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   14002472f:	call   QWORD PTR [rip+0x6aeb]        # 0x14002b220
   140024735:	test   al,al
   140024737:	je     0x140024a09
   14002473d:	mov    rdx,QWORD PTR [rip+0x10c74]        # 0x1400353b8
   140024744:	test   rdx,rdx
   140024747:	je     0x140024760
   140024749:	or     rcx,0xffffffffffffffff
   14002474d:	xor    eax,eax
   14002474f:	mov    rdi,rdx
   140024752:	repnz scas al,BYTE PTR es:[rdi]
   140024754:	not    rcx
   140024757:	dec    rcx
   14002475a:	mov    DWORD PTR [rsp+0x30],ecx
   14002475e:	jmp    0x140024765
   140024760:	mov    DWORD PTR [rsp+0x30],r12d
   140024765:	mov    rsi,QWORD PTR [rsp+0xb0]
   14002476d:	or     rcx,0xffffffffffffffff
   140024771:	mov    QWORD PTR [rsp+0x38],rdx
   140024776:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14002477b:	lea    rbx,[rip+0xa0ce]        # 0x14002e850
   140024782:	xor    eax,eax
   140024784:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   14002478a:	mov    rdi,rbx
   14002478d:	mov    QWORD PTR [rsp+0x38],rbx
   140024792:	lea    r8,[rsp+0x40]
   140024797:	repnz scas al,BYTE PTR es:[rdi]
   140024799:	lea    rdx,[rsp+0x90]
   1400247a1:	not    rcx
   1400247a4:	dec    rcx
   1400247a7:	mov    DWORD PTR [rsp+0x30],ecx
   1400247ab:	mov    rcx,rsi
   1400247ae:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   1400247b3:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   1400247b9:	call   QWORD PTR [rip+0x7121]        # 0x14002b8e0
   1400247bf:	lea    rdx,[rsp+0x50]
   1400247c4:	mov    rcx,rax
   1400247c7:	call   QWORD PTR [rip+0x6a53]        # 0x14002b220
   1400247cd:	lea    rcx,[rsp+0x90]
   1400247d5:	movzx  edi,al
   1400247d8:	call   QWORD PTR [rip+0x70ba]        # 0x14002b898
   1400247de:	test   dil,dil
   1400247e1:	je     0x140024852
   1400247e3:	or     rcx,0xffffffffffffffff
   1400247e7:	lea    rdx,[rip+0xa05a]        # 0x14002e848
   1400247ee:	xor    eax,eax
   1400247f0:	mov    rdi,rdx
   1400247f3:	mov    QWORD PTR [rsp+0x38],rdx
   1400247f8:	lea    r8,[rsp+0x50]
   1400247fd:	repnz scas al,BYTE PTR es:[rdi]
   1400247ff:	lea    rdx,[rsp+0x90]
   140024807:	not    rcx
   14002480a:	dec    rcx
   14002480d:	mov    DWORD PTR [rsp+0x30],ecx
   140024811:	mov    rcx,rsi
   140024814:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140024819:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   14002481f:	call   QWORD PTR [rip+0x70bb]        # 0x14002b8e0
   140024825:	lea    rcx,[rbp+0x58]
   140024829:	mov    rdx,rax
   14002482c:	call   QWORD PTR [rip+0x707e]        # 0x14002b8b0
   140024832:	lea    rcx,[rsp+0x90]
   14002483a:	call   QWORD PTR [rip+0x7058]        # 0x14002b898
   140024840:	mov    edx,0xe
   140024845:	mov    rcx,rbp
   140024848:	call   0x140024360
   14002484d:	jmp    0x140025595
   140024852:	mov    rdx,QWORD PTR [rip+0x10b67]        # 0x1400353c0
   140024859:	test   rdx,rdx
   14002485c:	je     0x140024875
   14002485e:	or     rcx,0xffffffffffffffff
   140024862:	xor    eax,eax
   140024864:	mov    rdi,rdx
   140024867:	repnz scas al,BYTE PTR es:[rdi]
   140024869:	not    rcx
   14002486c:	dec    rcx
   14002486f:	mov    DWORD PTR [rsp+0x30],ecx
   140024873:	jmp    0x14002487a
   140024875:	mov    DWORD PTR [rsp+0x30],r12d
   14002487a:	or     rcx,0xffffffffffffffff
   14002487e:	mov    QWORD PTR [rsp+0x38],rdx
   140024883:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140024888:	xor    eax,eax
   14002488a:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   140024890:	mov    rdi,rbx
   140024893:	repnz scas al,BYTE PTR es:[rdi]
   140024895:	mov    QWORD PTR [rsp+0x38],rbx
   14002489a:	lea    r8,[rsp+0x50]
   14002489f:	not    rcx
   1400248a2:	lea    rdx,[rsp+0x90]
   1400248aa:	dec    rcx
   1400248ad:	mov    DWORD PTR [rsp+0x30],ecx
   1400248b1:	mov    rcx,rsi
   1400248b4:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   1400248b9:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   1400248bf:	call   QWORD PTR [rip+0x701b]        # 0x14002b8e0
   1400248c5:	lea    rdx,[rsp+0x40]
   1400248ca:	mov    rcx,rax
   1400248cd:	call   QWORD PTR [rip+0x694d]        # 0x14002b220
   1400248d3:	lea    rcx,[rsp+0x90]
   1400248db:	movzx  edi,al
   1400248de:	call   QWORD PTR [rip+0x6fb4]        # 0x14002b898
   1400248e4:	test   dil,dil
   1400248e7:	je     0x1400249f7
   1400248ed:	mov    edx,0x10
   1400248f2:	mov    rcx,rbp
   1400248f5:	call   0x140024360
   1400248fa:	or     rcx,0xffffffffffffffff
   1400248fe:	lea    rdx,[rip+0x9547]        # 0x14002de4c
   140024905:	mov    rdi,rdx
   140024908:	mov    QWORD PTR [rsp+0x38],rdx
   14002490d:	xor    eax,eax
   14002490f:	repnz scas al,BYTE PTR es:[rdi]
   140024911:	lea    r8,[rsp+0x50]
   140024916:	lea    rdx,[rsp+0x90]
   14002491e:	not    rcx
   140024921:	dec    rcx
   140024924:	mov    DWORD PTR [rsp+0x30],ecx
   140024928:	mov    rcx,rsi
   14002492b:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140024930:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   140024936:	call   QWORD PTR [rip+0x6fa4]        # 0x14002b8e0
   14002493c:	lea    rcx,[rbp+0x60]
   140024940:	mov    rdx,rax
   140024943:	call   QWORD PTR [rip+0x6f67]        # 0x14002b8b0
   140024949:	lea    rcx,[rsp+0x90]
   140024951:	call   QWORD PTR [rip+0x6f41]        # 0x14002b898
   140024957:	or     rcx,0xffffffffffffffff
   14002495b:	lea    rdx,[rip+0x9ee2]        # 0x14002e844
   140024962:	mov    QWORD PTR [rsp+0x38],rdx
   140024967:	mov    rdi,rdx
   14002496a:	xor    eax,eax
   14002496c:	repnz scas al,BYTE PTR es:[rdi]
   14002496e:	lea    rdx,[rip+0x9ec3]        # 0x14002e838
   140024975:	lea    r8,[rsp+0x50]
   14002497a:	not    rcx
   14002497d:	mov    rdi,rdx
   140024980:	dec    rcx
   140024983:	mov    DWORD PTR [rsp+0x30],ecx
   140024987:	or     rcx,0xffffffffffffffff
   14002498b:	repnz scas al,BYTE PTR es:[rdi]
   14002498d:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140024992:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   140024998:	not    rcx
   14002499b:	mov    QWORD PTR [rsp+0x38],rdx
   1400249a0:	lea    rdx,[rsp+0x90]
   1400249a8:	dec    rcx
   1400249ab:	mov    DWORD PTR [rsp+0x30],ecx
   1400249af:	mov    rcx,rsi
   1400249b2:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   1400249b7:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   1400249bd:	call   QWORD PTR [rip+0x6f1d]        # 0x14002b8e0
   1400249c3:	lea    rdx,[rsp+0x40]
   1400249c8:	mov    rcx,rax
   1400249cb:	call   QWORD PTR [rip+0x684f]        # 0x14002b220
   1400249d1:	lea    rcx,[rsp+0x90]
   1400249d9:	movzx  edi,al
   1400249dc:	call   QWORD PTR [rip+0x6eb6]        # 0x14002b898
   1400249e2:	test   dil,dil
   1400249e5:	je     0x140025595
   1400249eb:	mov    BYTE PTR [rbp+0x98],r12b
   1400249f2:	jmp    0x140025595
   1400249f7:	mov    edx,0x1
   1400249fc:	mov    rcx,rbp
   1400249ff:	call   0x140024360
   140024a04:	jmp    0x140025595
   140024a09:	or     rcx,0xffffffffffffffff
   140024a0d:	lea    rdx,[rip+0x9e14]        # 0x14002e828
   140024a14:	xor    eax,eax
   140024a16:	mov    rdi,rdx
   140024a19:	mov    QWORD PTR [rsp+0x38],rdx
   140024a1e:	lea    rdx,[rsp+0x50]
   140024a23:	repnz scas al,BYTE PTR es:[rdi]
   140024a25:	not    rcx
   140024a28:	dec    rcx
   140024a2b:	mov    DWORD PTR [rsp+0x30],ecx
   140024a2f:	mov    rcx,rbx
   140024a32:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140024a37:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   140024a3d:	call   QWORD PTR [rip+0x67dd]        # 0x14002b220
   140024a43:	test   al,al
   140024a45:	je     0x140024c7d
   140024a4b:	mov    edx,0x10
   140024a50:	mov    rcx,rbp
   140024a53:	call   0x140022f90
   140024a58:	mov    rbx,QWORD PTR [rsp+0xb0]
   140024a60:	test   al,al
   140024a62:	je     0x140024a74
   140024a64:	mov    rcx,QWORD PTR [rbp+0x68]
   140024a68:	mov    eax,DWORD PTR [rcx+0x8]
   140024a6b:	cmp    DWORD PTR [rcx+0xc],eax
   140024a6e:	jne    0x140024b0b
   140024a74:	or     rcx,0xffffffffffffffff
   140024a78:	lea    rdx,[rip+0x9dc5]        # 0x14002e844
   140024a7f:	xor    eax,eax
   140024a81:	mov    QWORD PTR [rsp+0x38],rdx
   140024a86:	mov    rdi,rdx
   140024a89:	lea    rdx,[rip+0x9da8]        # 0x14002e838
   140024a90:	repnz scas al,BYTE PTR es:[rdi]
   140024a92:	mov    rdi,rdx
   140024a95:	lea    r8,[rsp+0x50]
   140024a9a:	not    rcx
   140024a9d:	dec    rcx
   140024aa0:	mov    DWORD PTR [rsp+0x30],ecx
   140024aa4:	or     rcx,0xffffffffffffffff
   140024aa8:	repnz scas al,BYTE PTR es:[rdi]
   140024aaa:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140024aaf:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   140024ab5:	not    rcx
   140024ab8:	mov    QWORD PTR [rsp+0x38],rdx
   140024abd:	lea    rdx,[rsp+0x90]
   140024ac5:	dec    rcx
   140024ac8:	mov    DWORD PTR [rsp+0x30],ecx
   140024acc:	mov    rcx,rbx
   140024acf:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140024ad4:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   140024ada:	call   QWORD PTR [rip+0x6e00]        # 0x14002b8e0
   140024ae0:	lea    rdx,[rsp+0x40]
   140024ae5:	mov    rcx,rax
   140024ae8:	call   QWORD PTR [rip+0x6732]        # 0x14002b220
   140024aee:	lea    rcx,[rsp+0x90]
   140024af6:	movzx  edi,al
   140024af9:	call   QWORD PTR [rip+0x6d99]        # 0x14002b898
   140024aff:	test   dil,dil
   140024b02:	je     0x140024b0b
   140024b04:	mov    BYTE PTR [rbp+0x98],r12b
   140024b0b:	mov    edx,0x10
   140024b10:	mov    rcx,rbp
   140024b13:	call   0x140022f90
   140024b18:	test   al,al
   140024b1a:	jne    0x140024bca
   140024b20:	or     rcx,0xffffffffffffffff
   140024b24:	lea    rdx,[rip+0x9321]        # 0x14002de4c
   140024b2b:	xor    eax,eax
   140024b2d:	mov    rdi,rdx
   140024b30:	mov    QWORD PTR [rsp+0x38],rdx
   140024b35:	lea    r8,[rsp+0x50]
   140024b3a:	repnz scas al,BYTE PTR es:[rdi]
   140024b3c:	lea    rdx,[rsp+0x90]
   140024b44:	not    rcx
   140024b47:	dec    rcx
   140024b4a:	mov    DWORD PTR [rsp+0x30],ecx
   140024b4e:	mov    rcx,rbx
   140024b51:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140024b56:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   140024b5c:	call   QWORD PTR [rip+0x6d7e]        # 0x14002b8e0
   140024b62:	lea    rcx,[rbp+0x60]
   140024b66:	mov    rdx,rax
   140024b69:	call   QWORD PTR [rip+0x6d41]        # 0x14002b8b0
   140024b6f:	lea    rcx,[rsp+0x90]
   140024b77:	call   QWORD PTR [rip+0x6d1b]        # 0x14002b898
   140024b7d:	or     rcx,0xffffffffffffffff
   140024b81:	lea    rdx,[rip+0x9c94]        # 0x14002e81c
   140024b88:	mov    rdi,rdx
   140024b8b:	xor    eax,eax
   140024b8d:	mov    QWORD PTR [rsp+0x38],rdx
   140024b92:	repnz scas al,BYTE PTR es:[rdi]
   140024b94:	lea    r8d,[rax+0x1]
   140024b98:	lea    rdx,[rsp+0x50]
   140024b9d:	not    rcx
   140024ba0:	dec    rcx
   140024ba3:	mov    DWORD PTR [rsp+0x30],ecx
   140024ba7:	lea    rcx,[rbp+0x60]
   140024bab:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140024bb0:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   140024bb6:	call   QWORD PTR [rip+0x6674]        # 0x14002b230
   140024bbc:	test   al,al
   140024bbe:	je     0x140024bca
   140024bc0:	lea    rcx,[rbp+0x60]
   140024bc4:	call   QWORD PTR [rip+0x67f6]        # 0x14002b3c0
   140024bca:	or     rcx,0xffffffffffffffff
   140024bce:	lea    rdx,[rip+0x914f]        # 0x14002dd24
   140024bd5:	xor    eax,eax
   140024bd7:	mov    rdi,rdx
   140024bda:	mov    QWORD PTR [rsp+0x48],rdx
   140024bdf:	lea    rdx,[rip+0x9c2a]        # 0x14002e810
   140024be6:	repnz scas al,BYTE PTR es:[rdi]
   140024be8:	mov    rdi,rdx
   140024beb:	mov    QWORD PTR [rsp+0x38],rdx
   140024bf0:	not    rcx
   140024bf3:	lea    r8,[rsp+0x50]
   140024bf8:	lea    rdx,[rsp+0x90]
   140024c00:	dec    rcx
   140024c03:	mov    DWORD PTR [rsp+0x40],ecx
   140024c07:	or     rcx,0xffffffffffffffff
   140024c0b:	repnz scas al,BYTE PTR es:[rdi]
   140024c0d:	not    rcx
   140024c10:	dec    rcx
   140024c13:	mov    DWORD PTR [rsp+0x30],ecx
   140024c17:	mov    rcx,rbx
   140024c1a:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140024c1f:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   140024c25:	call   QWORD PTR [rip+0x6cb5]        # 0x14002b8e0
   140024c2b:	lea    rdx,[rsp+0x50]
   140024c30:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140024c35:	mov    rcx,rax
   140024c38:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   140024c3e:	call   QWORD PTR [rip+0x65dc]        # 0x14002b220
   140024c44:	lea    rcx,[rsp+0x90]
   140024c4c:	test   al,al
   140024c4e:	sete   dil
   140024c52:	call   QWORD PTR [rip+0x6c40]        # 0x14002b898
   140024c58:	test   dil,dil
   140024c5b:	je     0x140024c64
   140024c5d:	mov    BYTE PTR [rbp+0x99],r12b
   140024c64:	mov    edx,0x2
   140024c69:	mov    rcx,rbp
   140024c6c:	call   0x140024360
   140024c71:	mov    BYTE PTR [rbp+0x9b],r12b
   140024c78:	jmp    0x140025595
   140024c7d:	or     rcx,0xffffffffffffffff
   140024c81:	lea    rdx,[rip+0x9b78]        # 0x14002e800
   140024c88:	xor    eax,eax
   140024c8a:	mov    rdi,rdx
   140024c8d:	mov    QWORD PTR [rsp+0x48],rdx
   140024c92:	lea    rdx,[rsp+0x50]
   140024c97:	repnz scas al,BYTE PTR es:[rdi]
   140024c99:	not    rcx
   140024c9c:	dec    rcx
   140024c9f:	mov    DWORD PTR [rsp+0x40],ecx
   140024ca3:	mov    rcx,rbx
   140024ca6:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140024cab:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   140024cb1:	call   QWORD PTR [rip+0x6569]        # 0x14002b220
   140024cb7:	test   al,al
   140024cb9:	je     0x140024ccd
   140024cbb:	mov    edx,0x11
   140024cc0:	mov    rcx,rbp
   140024cc3:	call   0x140024360
   140024cc8:	jmp    0x140025595
   140024ccd:	or     rcx,0xffffffffffffffff
   140024cd1:	xor    eax,eax
   140024cd3:	mov    QWORD PTR [rsp+0xa0],r13
   140024cdb:	lea    r13,[rip+0x88be]        # 0x14002d5a0
   140024ce2:	lea    rdx,[rsp+0x50]
   140024ce7:	mov    rdi,r13
   140024cea:	mov    QWORD PTR [rsp+0x48],r13
   140024cef:	repnz scas al,BYTE PTR es:[rdi]
   140024cf1:	not    rcx
   140024cf4:	dec    rcx
   140024cf7:	mov    DWORD PTR [rsp+0x40],ecx
   140024cfb:	mov    rcx,rbx
   140024cfe:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140024d03:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   140024d09:	call   QWORD PTR [rip+0x6511]        # 0x14002b220
   140024d0f:	test   al,al
   140024d11:	je     0x140024dbb
   140024d17:	or     rcx,0xffffffffffffffff
   140024d1b:	lea    rdx,[rip+0x9002]        # 0x14002dd24
   140024d22:	xor    eax,eax
   140024d24:	mov    QWORD PTR [rsp+0x48],rdx
   140024d29:	mov    rdi,rdx
   140024d2c:	mov    rdx,QWORD PTR [rip+0x106b5]        # 0x1400353e8
   140024d33:	repnz scas al,BYTE PTR es:[rdi]
   140024d35:	not    rcx
   140024d38:	dec    rcx
   140024d3b:	mov    DWORD PTR [rsp+0x40],ecx
   140024d3f:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140024d44:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   140024d4a:	test   rdx,rdx
   140024d4d:	je     0x140024d64
   140024d4f:	or     rcx,0xffffffffffffffff
   140024d53:	mov    rdi,rdx
   140024d56:	repnz scas al,BYTE PTR es:[rdi]
   140024d58:	not    rcx
   140024d5b:	dec    rcx
   140024d5e:	mov    DWORD PTR [rsp+0x30],ecx
   140024d62:	jmp    0x140024d69
   140024d64:	mov    DWORD PTR [rsp+0x30],r12d
   140024d69:	mov    rcx,QWORD PTR [rsp+0xb0]
   140024d71:	mov    QWORD PTR [rsp+0x38],rdx
   140024d76:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140024d7b:	lea    r8,[rsp+0x50]
   140024d80:	lea    rdx,[rsp+0x90]
   140024d88:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   140024d8e:	call   QWORD PTR [rip+0x6b4c]        # 0x14002b8e0
   140024d94:	lea    rdx,[rsp+0x40]
   140024d99:	mov    rcx,rax
   140024d9c:	call   QWORD PTR [rip+0x647e]        # 0x14002b220
   140024da2:	lea    rcx,[rsp+0x90]
   140024daa:	mov    BYTE PTR [rbp+0x9a],al
   140024db0:	call   QWORD PTR [rip+0x6ae2]        # 0x14002b898
   140024db6:	jmp    0x14002558d
   140024dbb:	or     rcx,0xffffffffffffffff
   140024dbf:	lea    rdx,[rip+0x87e2]        # 0x14002d5a8
   140024dc6:	xor    eax,eax
   140024dc8:	mov    rdi,rdx
   140024dcb:	mov    QWORD PTR [rsp+0x48],rdx
   140024dd0:	lea    rdx,[rsp+0x50]
   140024dd5:	repnz scas al,BYTE PTR es:[rdi]
   140024dd7:	not    rcx
   140024dda:	dec    rcx
   140024ddd:	mov    DWORD PTR [rsp+0x40],ecx
   140024de1:	mov    rcx,rbx
   140024de4:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140024de9:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   140024def:	call   QWORD PTR [rip+0x642b]        # 0x14002b220
   140024df5:	test   al,al
   140024df7:	je     0x140024eb9
   140024dfd:	mov    rdx,QWORD PTR [rip+0x105c4]        # 0x1400353c8
   140024e04:	test   rdx,rdx
   140024e07:	je     0x140024e20
   140024e09:	or     rcx,0xffffffffffffffff
   140024e0d:	xor    eax,eax
   140024e0f:	mov    rdi,rdx
   140024e12:	repnz scas al,BYTE PTR es:[rdi]
   140024e14:	not    rcx
   140024e17:	dec    rcx
   140024e1a:	mov    DWORD PTR [rsp+0x30],ecx
   140024e1e:	jmp    0x140024e25
   140024e20:	mov    DWORD PTR [rsp+0x30],r12d
   140024e25:	or     rcx,0xffffffffffffffff
   140024e29:	lea    rbx,[rip+0x9a20]        # 0x14002e850
   140024e30:	xor    eax,eax
   140024e32:	mov    QWORD PTR [rsp+0x38],rdx
   140024e37:	mov    rdi,rbx
   140024e3a:	mov    QWORD PTR [rsp+0x48],rbx
   140024e3f:	repnz scas al,BYTE PTR es:[rdi]
   140024e41:	lea    r8,[rsp+0x50]
   140024e46:	lea    rdx,[rsp+0x90]
   140024e4e:	not    rcx
   140024e51:	dec    rcx
   140024e54:	mov    DWORD PTR [rsp+0x40],ecx
   140024e58:	mov    rcx,QWORD PTR [rsp+0xb0]
   140024e60:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140024e65:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   140024e6b:	call   QWORD PTR [rip+0x6a6f]        # 0x14002b8e0
   140024e71:	lea    rdx,[rsp+0x50]
   140024e76:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140024e7b:	mov    rcx,rax
   140024e7e:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   140024e84:	call   QWORD PTR [rip+0x6396]        # 0x14002b220
   140024e8a:	lea    rcx,[rsp+0x90]
   140024e92:	test   al,al
   140024e94:	sete   dil
   140024e98:	call   QWORD PTR [rip+0x69fa]        # 0x14002b898
   140024e9e:	test   dil,dil
   140024ea1:	je     0x14002558d
   140024ea7:	mov    edx,0xf
   140024eac:	mov    rcx,rbp
   140024eaf:	call   0x140024360
   140024eb4:	jmp    0x14002558d
   140024eb9:	or     rcx,0xffffffffffffffff
   140024ebd:	lea    rdx,[rip+0x992c]        # 0x14002e7f0
   140024ec4:	xor    eax,eax
   140024ec6:	mov    rdi,rdx
   140024ec9:	mov    QWORD PTR [rsp+0x48],rdx
   140024ece:	lea    rdx,[rsp+0x50]
   140024ed3:	repnz scas al,BYTE PTR es:[rdi]
   140024ed5:	not    rcx
   140024ed8:	dec    rcx
   140024edb:	mov    DWORD PTR [rsp+0x40],ecx
   140024edf:	mov    rcx,rbx
   140024ee2:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140024ee7:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   140024eed:	call   QWORD PTR [rip+0x632d]        # 0x14002b220
   140024ef3:	test   al,al
   140024ef5:	je     0x140024fc5
   140024efb:	or     rcx,0xffffffffffffffff
   140024eff:	lea    rdx,[rip+0x98e2]        # 0x14002e7e8
   140024f06:	xor    eax,eax
   140024f08:	mov    rdi,rdx
   140024f0b:	mov    QWORD PTR [rsp+0x48],rdx
   140024f10:	lea    r8,[rsp+0x50]
   140024f15:	repnz scas al,BYTE PTR es:[rdi]
   140024f17:	lea    rdx,[rsp+0x90]
   140024f1f:	not    rcx
   140024f22:	dec    rcx
   140024f25:	mov    DWORD PTR [rsp+0x40],ecx
   140024f29:	mov    rcx,QWORD PTR [rsp+0xb0]
   140024f31:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140024f36:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   140024f3c:	call   QWORD PTR [rip+0x699e]        # 0x14002b8e0
   140024f42:	or     rcx,0xffffffffffffffff
   140024f46:	lea    rdx,[rip+0x8eeb]        # 0x14002de38
   140024f4d:	xor    eax,eax
   140024f4f:	mov    rdi,rdx
   140024f52:	mov    QWORD PTR [rsp+0x48],rdx
   140024f57:	lea    rdx,[rsp+0x50]
   140024f5c:	repnz scas al,BYTE PTR es:[rdi]
   140024f5e:	not    rcx
   140024f61:	dec    rcx
   140024f64:	mov    DWORD PTR [rsp+0x40],ecx
   140024f68:	lea    rcx,[rsp+0x90]
   140024f70:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140024f75:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   140024f7b:	call   QWORD PTR [rip+0x629f]        # 0x14002b220
   140024f81:	test   al,al
   140024f83:	je     0x140024fa5
   140024f85:	mov    edx,0x3
   140024f8a:	mov    rcx,rbp
   140024f8d:	call   0x140024360
   140024f92:	lea    rcx,[rsp+0x90]
   140024f9a:	call   QWORD PTR [rip+0x68f8]        # 0x14002b898
   140024fa0:	jmp    0x14002558d
   140024fa5:	mov    edx,0x4
   140024faa:	mov    rcx,rbp
   140024fad:	call   0x140024360
   140024fb2:	lea    rcx,[rsp+0x90]
   140024fba:	call   QWORD PTR [rip+0x68d8]        # 0x14002b898
   140024fc0:	jmp    0x14002558d
   140024fc5:	mov    rax,QWORD PTR [rbp+0xf8]
   140024fcc:	lea    rsi,[rip+0x8ecd]        # 0x14002dea0
   140024fd3:	cmp    DWORD PTR [rax+0x4],r12d
   140024fd7:	je     0x14002513f
   140024fdd:	movsxd rcx,DWORD PTR [rax+0x4]
   140024fe1:	mov    rdx,rax
   140024fe4:	mov    rax,QWORD PTR [rax+0x10]
   140024fe8:	lea    rcx,[rax+rcx*4]
   140024fec:	cmp    DWORD PTR [rcx+rdx*1-0x4],0x3
   140024ff1:	jne    0x14002513f
   140024ff7:	or     rcx,0xffffffffffffffff
   140024ffb:	xor    eax,eax
   140024ffd:	mov    rdi,rsi
   140025000:	repnz scas al,BYTE PTR es:[rdi]
   140025002:	mov    QWORD PTR [rsp+0x48],rsi
   140025007:	lea    rdx,[rsp+0x50]
   14002500c:	not    rcx
   14002500f:	dec    rcx
   140025012:	mov    DWORD PTR [rsp+0x40],ecx
   140025016:	mov    rcx,rbx
   140025019:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   14002501e:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   140025024:	call   QWORD PTR [rip+0x61f6]        # 0x14002b220
   14002502a:	test   al,al
   14002502c:	je     0x14002513f
   140025032:	or     rcx,0xffffffffffffffff
   140025036:	lea    rdx,[rip+0x979b]        # 0x14002e7d8
   14002503d:	xor    eax,eax
   14002503f:	mov    rdi,rdx
   140025042:	mov    QWORD PTR [rsp+0x48],rdx
   140025047:	lea    r8,[rsp+0x50]
   14002504c:	repnz scas al,BYTE PTR es:[rdi]
   14002504e:	lea    rdx,[rsp+0x90]
   140025056:	not    rcx
   140025059:	dec    rcx
   14002505c:	mov    DWORD PTR [rsp+0x40],ecx
   140025060:	mov    rcx,QWORD PTR [rsp+0xb0]
   140025068:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   14002506d:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   140025073:	call   QWORD PTR [rip+0x6867]        # 0x14002b8e0
   140025079:	or     rcx,0xffffffffffffffff
   14002507d:	lea    rdx,[rip+0x9744]        # 0x14002e7c8
   140025084:	xor    eax,eax
   140025086:	mov    rdi,rdx
   140025089:	mov    QWORD PTR [rsp+0x48],rdx
   14002508e:	lea    rdx,[rsp+0x50]
   140025093:	repnz scas al,BYTE PTR es:[rdi]
   140025095:	not    rcx
   140025098:	dec    rcx
   14002509b:	mov    DWORD PTR [rsp+0x40],ecx
   14002509f:	lea    rcx,[rsp+0x90]
   1400250a7:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   1400250ac:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   1400250b2:	call   QWORD PTR [rip+0x6168]        # 0x14002b220
   1400250b8:	test   al,al
   1400250ba:	je     0x1400250dc
   1400250bc:	mov    edx,0x7
   1400250c1:	mov    rcx,rbp
   1400250c4:	call   0x140024360
   1400250c9:	lea    rcx,[rsp+0x90]
   1400250d1:	call   QWORD PTR [rip+0x67c1]        # 0x14002b898
   1400250d7:	jmp    0x14002558d
   1400250dc:	or     rcx,0xffffffffffffffff
   1400250e0:	lea    rdx,[rip+0x96d1]        # 0x14002e7b8
   1400250e7:	xor    eax,eax
   1400250e9:	mov    rdi,rdx
   1400250ec:	mov    QWORD PTR [rsp+0x48],rdx
   1400250f1:	lea    rdx,[rsp+0x50]
   1400250f6:	repnz scas al,BYTE PTR es:[rdi]
   1400250f8:	not    rcx
   1400250fb:	dec    rcx
   1400250fe:	mov    DWORD PTR [rsp+0x40],ecx
   140025102:	lea    rcx,[rsp+0x90]
   14002510a:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   14002510f:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   140025115:	call   QWORD PTR [rip+0x6105]        # 0x14002b220
   14002511b:	test   al,al
   14002511d:	je     0x14002512c
   14002511f:	mov    edx,0x6
   140025124:	mov    rcx,rbp
   140025127:	call   0x140024360
   14002512c:	lea    rcx,[rsp+0x90]
   140025134:	call   QWORD PTR [rip+0x675e]        # 0x14002b898
   14002513a:	jmp    0x14002558d
   14002513f:	mov    rax,QWORD PTR [rbp+0xf8]
   140025146:	cmp    DWORD PTR [rax+0x4],r12d
   14002514a:	je     0x1400252ca
   140025150:	movsxd rcx,DWORD PTR [rax+0x4]
   140025154:	mov    rdx,rax
   140025157:	mov    rax,QWORD PTR [rax+0x10]
   14002515b:	lea    rcx,[rax+rcx*4]
   14002515f:	cmp    DWORD PTR [rcx+rdx*1-0x4],0x4
   140025164:	jne    0x1400252ca
   14002516a:	or     rcx,0xffffffffffffffff
   14002516e:	xor    eax,eax
   140025170:	mov    rdi,rsi
   140025173:	repnz scas al,BYTE PTR es:[rdi]
   140025175:	mov    QWORD PTR [rsp+0x48],rsi
   14002517a:	lea    rdx,[rsp+0x50]
   14002517f:	not    rcx
   140025182:	dec    rcx
   140025185:	mov    DWORD PTR [rsp+0x40],ecx
   140025189:	mov    rcx,rbx
   14002518c:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140025191:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   140025197:	call   QWORD PTR [rip+0x6083]        # 0x14002b220
   14002519d:	test   al,al
   14002519f:	je     0x1400252ca
   1400251a5:	or     rcx,0xffffffffffffffff
   1400251a9:	lea    rdx,[rip+0x9628]        # 0x14002e7d8
   1400251b0:	xor    eax,eax
   1400251b2:	mov    rdi,rdx
   1400251b5:	mov    QWORD PTR [rsp+0x48],rdx
   1400251ba:	lea    r8,[rsp+0x50]
   1400251bf:	repnz scas al,BYTE PTR es:[rdi]
   1400251c1:	lea    rdx,[rsp+0x90]
   1400251c9:	not    rcx
   1400251cc:	dec    rcx
   1400251cf:	mov    DWORD PTR [rsp+0x40],ecx
   1400251d3:	mov    rcx,QWORD PTR [rsp+0xb0]
   1400251db:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   1400251e0:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   1400251e6:	call   QWORD PTR [rip+0x66f4]        # 0x14002b8e0
   1400251ec:	mov    r11,QWORD PTR [rip+0x101e5]        # 0x1400353d8
   1400251f3:	test   r11,r11
   1400251f6:	je     0x14002520f
   1400251f8:	or     rcx,0xffffffffffffffff
   1400251fc:	xor    eax,eax
   1400251fe:	mov    rdi,r11
   140025201:	repnz scas al,BYTE PTR es:[rdi]
   140025203:	not    rcx
   140025206:	dec    rcx
   140025209:	mov    DWORD PTR [rsp+0x30],ecx
   14002520d:	jmp    0x140025214
   14002520f:	mov    DWORD PTR [rsp+0x30],r12d
   140025214:	mov    QWORD PTR [rsp+0x38],r11
   140025219:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14002521e:	lea    rdx,[rsp+0x50]
   140025223:	lea    rcx,[rsp+0x90]
   14002522b:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   140025231:	call   QWORD PTR [rip+0x5fe9]        # 0x14002b220
   140025237:	test   al,al
   140025239:	je     0x14002525b
   14002523b:	mov    edx,0x9
   140025240:	mov    rcx,rbp
   140025243:	call   0x140024360
   140025248:	lea    rcx,[rsp+0x90]
   140025250:	call   QWORD PTR [rip+0x6642]        # 0x14002b898
   140025256:	jmp    0x14002558d
   14002525b:	mov    rdx,QWORD PTR [rip+0x1017e]        # 0x1400353e0
   140025262:	test   rdx,rdx
   140025265:	je     0x14002527e
   140025267:	or     rcx,0xffffffffffffffff
   14002526b:	xor    eax,eax
   14002526d:	mov    rdi,rdx
   140025270:	repnz scas al,BYTE PTR es:[rdi]
   140025272:	not    rcx
   140025275:	dec    rcx
   140025278:	mov    DWORD PTR [rsp+0x30],ecx
   14002527c:	jmp    0x140025283
   14002527e:	mov    DWORD PTR [rsp+0x30],r12d
   140025283:	mov    QWORD PTR [rsp+0x38],rdx
   140025288:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14002528d:	lea    rcx,[rsp+0x90]
   140025295:	lea    rdx,[rsp+0x50]
   14002529a:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   1400252a0:	call   QWORD PTR [rip+0x5f7a]        # 0x14002b220
   1400252a6:	test   al,al
   1400252a8:	je     0x1400252b7
   1400252aa:	mov    edx,0xa
   1400252af:	mov    rcx,rbp
   1400252b2:	call   0x140024360
   1400252b7:	lea    rcx,[rsp+0x90]
   1400252bf:	call   QWORD PTR [rip+0x65d3]        # 0x14002b898
   1400252c5:	jmp    0x14002558d
   1400252ca:	or     rcx,0xffffffffffffffff
   1400252ce:	lea    rdx,[rip+0x94d7]        # 0x14002e7ac
   1400252d5:	xor    eax,eax
   1400252d7:	mov    rdi,rdx
   1400252da:	mov    QWORD PTR [rsp+0x48],rdx
   1400252df:	lea    rdx,[rsp+0x50]
   1400252e4:	repnz scas al,BYTE PTR es:[rdi]
   1400252e6:	not    rcx
   1400252e9:	dec    rcx
   1400252ec:	mov    DWORD PTR [rsp+0x40],ecx
   1400252f0:	mov    rcx,rbx
   1400252f3:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   1400252f8:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   1400252fe:	call   QWORD PTR [rip+0x5f1c]        # 0x14002b220
   140025304:	test   al,al
   140025306:	je     0x14002546c
   14002530c:	mov    rbx,QWORD PTR [rsp+0xb0]
   140025314:	or     rcx,0xffffffffffffffff
   140025318:	xor    eax,eax
   14002531a:	lea    rdx,[rip+0x947f]        # 0x14002e7a0
   140025321:	mov    QWORD PTR [rsp+0x48],r13
   140025326:	mov    rdi,r13
   140025329:	repnz scas al,BYTE PTR es:[rdi]
   14002532b:	mov    rdi,rdx
   14002532e:	lea    r8,[rsp+0x50]
   140025333:	not    rcx
   140025336:	lea    r12d,[rax+0x1]
   14002533a:	dec    rcx
   14002533d:	mov    DWORD PTR [rsp+0x40],ecx
   140025341:	or     rcx,0xffffffffffffffff
   140025345:	repnz scas al,BYTE PTR es:[rdi]
   140025347:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   14002534c:	movdqa XMMWORD PTR [rsp+0x60],xmm0
   140025352:	not    rcx
   140025355:	mov    QWORD PTR [rsp+0x48],rdx
   14002535a:	lea    rdx,[rsp+0x30]
   14002535f:	dec    rcx
   140025362:	mov    DWORD PTR [rsp+0x40],ecx
   140025366:	mov    rcx,rbx
   140025369:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   14002536e:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   140025374:	call   QWORD PTR [rip+0x6566]        # 0x14002b8e0
   14002537a:	lea    rdx,[rsp+0x60]
   14002537f:	mov    rcx,rax
   140025382:	call   QWORD PTR [rip+0x5e98]        # 0x14002b220
   140025388:	test   al,al
   14002538a:	je     0x140025417
   140025390:	or     rcx,0xffffffffffffffff
   140025394:	xor    eax,eax
   140025396:	lea    rdx,[rip+0x93f3]        # 0x14002e790
   14002539d:	mov    QWORD PTR [rsp+0x48],rdx
   1400253a2:	mov    rdi,rdx
   1400253a5:	lea    rdx,[rip+0x93dc]        # 0x14002e788
   1400253ac:	repnz scas al,BYTE PTR es:[rdi]
   1400253ae:	mov    rdi,rdx
   1400253b1:	lea    r8,[rsp+0x60]
   1400253b6:	not    rcx
   1400253b9:	lea    r12d,[rax+0x3]
   1400253bd:	dec    rcx
   1400253c0:	mov    DWORD PTR [rsp+0x40],ecx
   1400253c4:	or     rcx,0xffffffffffffffff
   1400253c8:	repnz scas al,BYTE PTR es:[rdi]
   1400253ca:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   1400253cf:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   1400253d5:	not    rcx
   1400253d8:	mov    QWORD PTR [rsp+0x48],rdx
   1400253dd:	lea    rdx,[rsp+0x90]
   1400253e5:	dec    rcx
   1400253e8:	mov    DWORD PTR [rsp+0x40],ecx
   1400253ec:	mov    rcx,rbx
   1400253ef:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   1400253f4:	movdqa XMMWORD PTR [rsp+0x60],xmm0
   1400253fa:	call   QWORD PTR [rip+0x64e0]        # 0x14002b8e0
   140025400:	lea    rdx,[rsp+0x50]
   140025405:	mov    rcx,rax
   140025408:	call   QWORD PTR [rip+0x5e12]        # 0x14002b220
   14002540e:	test   al,al
   140025410:	je     0x140025417
   140025412:	mov    dil,0x1
   140025415:	jmp    0x14002541a
   140025417:	xor    dil,dil
   14002541a:	test   r12b,0x2
   14002541e:	je     0x140025432
   140025420:	lea    rcx,[rsp+0x90]
   140025428:	and    r12d,0xfffffffd
   14002542c:	call   QWORD PTR [rip+0x6466]        # 0x14002b898
   140025432:	test   r12b,0x1
   140025436:	je     0x140025443
   140025438:	lea    rcx,[rsp+0x30]
   14002543d:	call   QWORD PTR [rip+0x6455]        # 0x14002b898
   140025443:	test   dil,dil
   140025446:	je     0x14002545a
   140025448:	mov    edx,0xc
   14002544d:	mov    rcx,rbp
   140025450:	call   0x140024360
   140025455:	jmp    0x14002558d
   14002545a:	mov    edx,0xd
   14002545f:	mov    rcx,rbp
   140025462:	call   0x140024360
   140025467:	jmp    0x14002558d
   14002546c:	or     rcx,0xffffffffffffffff
   140025470:	lea    rdx,[rip+0x930d]        # 0x14002e784
   140025477:	xor    eax,eax
   140025479:	mov    rdi,rdx
   14002547c:	mov    QWORD PTR [rsp+0x48],rdx
   140025481:	lea    rdx,[rsp+0x60]
   140025486:	repnz scas al,BYTE PTR es:[rdi]
   140025488:	not    rcx
   14002548b:	dec    rcx
   14002548e:	mov    DWORD PTR [rsp+0x40],ecx
   140025492:	mov    rcx,rbx
   140025495:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   14002549a:	movdqa XMMWORD PTR [rsp+0x60],xmm0
   1400254a0:	call   QWORD PTR [rip+0x5d7a]        # 0x14002b220
   1400254a6:	test   al,al
   1400254a8:	je     0x14002558d
   1400254ae:	or     rcx,0xffffffffffffffff
   1400254b2:	lea    rdx,[rip+0x92c3]        # 0x14002e77c
   1400254b9:	xor    eax,eax
   1400254bb:	mov    rdi,rdx
   1400254be:	mov    QWORD PTR [rsp+0x48],rdx
   1400254c3:	lea    r8,[rsp+0x60]
   1400254c8:	repnz scas al,BYTE PTR es:[rdi]
   1400254ca:	lea    rdx,[rsp+0x90]
   1400254d2:	not    rcx
   1400254d5:	dec    rcx
   1400254d8:	mov    DWORD PTR [rsp+0x40],ecx
   1400254dc:	mov    rcx,QWORD PTR [rsp+0xb0]
   1400254e4:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   1400254e9:	movdqa XMMWORD PTR [rsp+0x60],xmm0
   1400254ef:	call   QWORD PTR [rip+0x63eb]        # 0x14002b8e0
   1400254f5:	or     rcx,0xffffffffffffffff
   1400254f9:	lea    rdx,[rip+0x9274]        # 0x14002e774
   140025500:	xor    eax,eax
   140025502:	mov    rdi,rdx
   140025505:	mov    QWORD PTR [rsp+0x48],rdx
   14002550a:	lea    r8d,[rax+0x1]
   14002550e:	repnz scas al,BYTE PTR es:[rdi]
   140025510:	lea    rdx,[rsp+0x60]
   140025515:	not    rcx
   140025518:	dec    rcx
   14002551b:	mov    DWORD PTR [rsp+0x40],ecx
   14002551f:	lea    rcx,[rsp+0x90]
   140025527:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   14002552c:	movdqa XMMWORD PTR [rsp+0x60],xmm0
   140025532:	call   QWORD PTR [rip+0x5cf8]        # 0x14002b230
   140025538:	test   al,al
   14002553a:	je     0x140025572
   14002553c:	or     r9d,0xffffffff
   140025540:	lea    rdx,[rsp+0x30]
   140025545:	lea    rcx,[rsp+0x90]
   14002554d:	lea    r8d,[r9+0x6]
   140025551:	call   QWORD PTR [rip+0x5e01]        # 0x14002b358
   140025557:	lea    rcx,[rbp+0xd8]
   14002555e:	mov    rdx,rax
   140025561:	call   QWORD PTR [rip+0x6349]        # 0x14002b8b0
   140025567:	lea    rcx,[rsp+0x30]
   14002556c:	call   QWORD PTR [rip+0x6326]        # 0x14002b898
   140025572:	mov    edx,0xb
   140025577:	mov    rcx,rbp
   14002557a:	call   0x140024360
   14002557f:	lea    rcx,[rsp+0x90]
   140025587:	call   QWORD PTR [rip+0x630b]        # 0x14002b898
   14002558d:	mov    r13,QWORD PTR [rsp+0xa0]
   140025595:	mov    rsi,QWORD PTR [rsp+0x98]
   14002559d:	mov    rax,QWORD PTR [rbp+0xf8]
   1400255a4:	cmp    DWORD PTR [rax+0x4],0x0
   1400255a8:	je     0x1400255c0
   1400255aa:	movsxd rcx,DWORD PTR [rax+0x4]
   1400255ae:	mov    rdx,rax
   1400255b1:	mov    rax,QWORD PTR [rax+0x10]
   1400255b5:	lea    rcx,[rax+rcx*4]
   1400255b9:	cmp    DWORD PTR [rcx+rdx*1-0x4],0xb
   1400255be:	je     0x1400255cd
   1400255c0:	lea    rcx,[rbp+0xd0]
   1400255c7:	call   QWORD PTR [rip+0x5df3]        # 0x14002b3c0
   1400255cd:	mov    al,0x1
   1400255cf:	mov    rbx,QWORD PTR [rsp+0xa8]
   1400255d7:	add    rsp,0x70
   1400255db:	pop    r12
   1400255dd:	pop    rdi
   1400255de:	pop    rbp
   1400255df:	ret    
   1400255e0:	rex push rbp
   1400255e2:	push   rsi
   1400255e3:	push   rdi
   1400255e4:	push   r12
   1400255e6:	push   r13
   1400255e8:	sub    rsp,0xf0
   1400255ef:	xor    r12d,r12d
   1400255f2:	mov    rsi,rcx
   1400255f5:	movzx  r13d,dl
   1400255f9:	mov    DWORD PTR [rsp+0x120],r12d
   140025601:	mov    rcx,QWORD PTR [rcx+0x68]
   140025605:	mov    edi,r12d
   140025608:	mov    eax,DWORD PTR [rcx+0x8]
   14002560b:	cmp    DWORD PTR [rcx+0xc],eax
   14002560e:	jne    0x1400256f8
   140025614:	or     rcx,0xffffffffffffffff
   140025618:	lea    rdx,[rip+0x92a1]        # 0x14002e8c0
   14002561f:	xor    eax,eax
   140025621:	mov    QWORD PTR [rsp+0x58],rdx
   140025626:	mov    rdi,rdx
   140025629:	lea    rdx,[rsp+0x50]
   14002562e:	repnz scas al,BYTE PTR es:[rdi]
   140025630:	not    rcx
   140025633:	dec    rcx
   140025636:	mov    DWORD PTR [rsp+0x50],ecx
   14002563a:	lea    rcx,[rsp+0x120]
   140025642:	movaps xmm0,XMMWORD PTR [rsp+0x50]
   140025647:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   14002564d:	call   QWORD PTR [rip+0x620d]        # 0x14002b860
   140025653:	mov    rdi,QWORD PTR [rsi+0x40]
   140025657:	mov    rax,QWORD PTR [rdi+0x60]
   14002565b:	mov    ecx,DWORD PTR [rax]
   14002565d:	cmp    ecx,0x1
   140025660:	je     0x1400256ae
   140025662:	test   ecx,ecx
   140025664:	je     0x1400256ae
   140025666:	lea    r8d,[r12+0x1]
   14002566b:	lea    rcx,[rdi+0x60]
   14002566f:	mov    edx,0x7fffffff
   140025674:	call   0x140001a10
   140025679:	test   rax,rax
   14002567c:	je     0x1400256d9
   14002567e:	lea    rdx,[rsp+0x120]
   140025686:	mov    rcx,rax
   140025689:	call   QWORD PTR [rip+0x6211]        # 0x14002b8a0
   14002568f:	lea    rcx,[rsp+0x120]
   140025697:	call   QWORD PTR [rip+0x61fb]        # 0x14002b898
   14002569d:	xor    al,al
   14002569f:	add    rsp,0xf0
   1400256a6:	pop    r13
   1400256a8:	pop    r12
   1400256aa:	pop    rdi
   1400256ab:	pop    rsi
   1400256ac:	pop    rbp
   1400256ad:	ret    
   1400256ae:	lea    rdx,[rsp+0x120]
   1400256b6:	lea    rcx,[rsp+0x130]
   1400256be:	call   QWORD PTR [rip+0x61dc]        # 0x14002b8a0
   1400256c4:	lea    rcx,[rdi+0x60]
   1400256c8:	call   QWORD PTR [rip+0x6172]        # 0x14002b840
   1400256ce:	mov    rcx,QWORD PTR [rsp+0x130]
   1400256d6:	mov    QWORD PTR [rax],rcx
   1400256d9:	lea    rcx,[rsp+0x120]
   1400256e1:	call   QWORD PTR [rip+0x61b1]        # 0x14002b898
   1400256e7:	xor    al,al
   1400256e9:	add    rsp,0xf0
   1400256f0:	pop    r13
   1400256f2:	pop    r12
   1400256f4:	pop    rdi
   1400256f5:	pop    rsi
   1400256f6:	pop    rbp
   1400256f7:	ret    
   1400256f8:	mov    QWORD PTR [rsp+0x128],rbx
   140025700:	mov    QWORD PTR [rsp+0xe8],r14
   140025708:	mov    QWORD PTR [rsp+0xe0],r15
   140025710:	cmp    BYTE PTR [rsi+0x98],dil
   140025717:	jne    0x140025795
   140025719:	mov    rax,QWORD PTR [rsi+0xc0]
   140025720:	mov    ecx,DWORD PTR [rax+0xc]
   140025723:	sub    ecx,DWORD PTR [rax+0x8]
   140025726:	cmp    ecx,0x1
   140025729:	jne    0x140025795
   14002572b:	or     rcx,0xffffffffffffffff
   14002572f:	xor    eax,eax
   140025731:	lea    rdx,[rip+0x9170]        # 0x14002e8a8
   140025738:	mov    QWORD PTR [rsp+0x58],rdx
   14002573d:	mov    rdi,rdx
   140025740:	repnz scas al,BYTE PTR es:[rdi]
   140025742:	lea    edi,[rax+0x1]
   140025745:	mov    rax,QWORD PTR [rsi+0xc0]
   14002574c:	movsxd rdx,DWORD PTR [rax+0x8]
   140025750:	not    rcx
   140025753:	mov    rdx,QWORD PTR [rax+rdx*8+0x10]
   140025758:	dec    rcx
   14002575b:	mov    DWORD PTR [rsp+0x50],ecx
   14002575f:	lea    rcx,[rsp+0x120]
   140025767:	movaps xmm0,XMMWORD PTR [rsp+0x50]
   14002576c:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   140025772:	call   QWORD PTR [rip+0x6128]        # 0x14002b8a0
   140025778:	lea    rdx,[rsp+0x50]
   14002577d:	lea    rcx,[rsp+0x120]
   140025785:	call   QWORD PTR [rip+0x5a95]        # 0x14002b220
   14002578b:	test   al,al
   14002578d:	je     0x140025795
   14002578f:	movzx  ebx,dil
   140025793:	jmp    0x140025797
   140025795:	xor    bl,bl
   140025797:	test   dil,0x1
   14002579b:	je     0x1400257ab
   14002579d:	lea    rcx,[rsp+0x120]
   1400257a5:	call   QWORD PTR [rip+0x60ed]        # 0x14002b898
   1400257ab:	test   bl,bl
   1400257ad:	je     0x1400257bb
   1400257af:	lea    rcx,[rsi+0xc0]
   1400257b6:	call   0x14000b3a0
   1400257bb:	cmp    BYTE PTR [rsi+0x98],r12b
   1400257c2:	je     0x1400257d1
   1400257c4:	cmp    BYTE PTR [rsi+0x99],r12b
   1400257cb:	setne  r12b
   1400257cf:	jmp    0x1400257e1
   1400257d1:	movzx  eax,BYTE PTR [rsi+0x99]
   1400257d8:	neg    al
   1400257da:	sbb    r12d,r12d
   1400257dd:	add    r12d,0x3
   1400257e1:	mov    rcx,QWORD PTR [rsi+0x68]
   1400257e5:	mov    eax,DWORD PTR [rcx]
   1400257e7:	cmp    eax,0x1
   1400257ea:	je     0x1400257fc
   1400257ec:	test   eax,eax
   1400257ee:	je     0x1400257fc
   1400257f0:	mov    edx,DWORD PTR [rcx+0x4]
   1400257f3:	lea    rcx,[rsi+0x68]
   1400257f7:	call   0x140001cd0
   1400257fc:	mov    rcx,QWORD PTR [rsi+0x68]
   140025800:	lea    r14,[rsi+0xa0]
   140025807:	movsxd rax,DWORD PTR [rcx+0x8]
   14002580b:	lea    rbx,[rcx+rax*8+0x10]
   140025810:	lea    rcx,[rsp+0x130]
   140025818:	call   QWORD PTR [rip+0x6072]        # 0x14002b890
   14002581e:	lea    rcx,[rsp+0x120]
   140025826:	mov    rdi,rax
   140025829:	call   QWORD PTR [rip+0x6061]        # 0x14002b890
   14002582f:	mov    BYTE PTR [rsp+0x48],r13b
   140025834:	mov    DWORD PTR [rsp+0x40],r12d
   140025839:	mov    QWORD PTR [rsp+0x38],r14
   14002583e:	mov    DWORD PTR [rsp+0x30],0xffffffff
   140025846:	lea    rdx,[rsi+0x58]
   14002584a:	lea    r9,[rsi+0x78]
   14002584e:	lea    rcx,[rsp+0x60]
   140025853:	mov    r8,rbx
   140025856:	mov    QWORD PTR [rsp+0x28],rdi
   14002585b:	mov    QWORD PTR [rsp+0x20],rax
   140025860:	call   0x14000b5a0
   140025865:	lea    rcx,[rsp+0x120]
   14002586d:	call   QWORD PTR [rip+0x6025]        # 0x14002b898
   140025873:	lea    rcx,[rsp+0x130]
   14002587b:	call   QWORD PTR [rip+0x6017]        # 0x14002b898
   140025881:	lea    rdx,[rsi+0x60]
   140025885:	lea    rcx,[rsp+0x60]
   14002588a:	call   QWORD PTR [rip+0x6020]        # 0x14002b8b0
   140025890:	lea    rdx,[rsi+0xc0]
   140025897:	lea    rcx,[rsp+0x60]
   14002589c:	call   0x14000b880
   1400258a1:	lea    rdx,[rsi+0x80]
   1400258a8:	lea    rcx,[rsp+0x88]
   1400258b0:	call   QWORD PTR [rip+0x5ffa]        # 0x14002b8b0
   1400258b6:	lea    rdx,[rsi+0x88]
   1400258bd:	lea    rcx,[rsp+0xa0]
   1400258c5:	call   QWORD PTR [rip+0x5fe5]        # 0x14002b8b0
   1400258cb:	lea    rdx,[rsi+0x90]
   1400258d2:	lea    rcx,[rsp+0xa8]
   1400258da:	call   QWORD PTR [rip+0x5fd0]        # 0x14002b8b0
   1400258e0:	mov    rax,QWORD PTR [rsi+0x68]
   1400258e4:	mov    ecx,DWORD PTR [rax+0xc]
   1400258e7:	sub    ecx,DWORD PTR [rax+0x8]
   1400258ea:	cmp    ecx,0x1
   1400258ed:	jle    0x1400259e0
   1400258f3:	mov    rcx,rax
   1400258f6:	mov    eax,DWORD PTR [rax]
   1400258f8:	cmp    eax,0x1
   1400258fb:	je     0x14002590d
   1400258fd:	test   eax,eax
   1400258ff:	je     0x14002590d
   140025901:	mov    edx,DWORD PTR [rcx+0x4]
   140025904:	lea    rcx,[rsi+0x68]
   140025908:	call   0x140001cd0
   14002590d:	mov    rcx,QWORD PTR [rsi+0x68]
   140025911:	movsxd rax,DWORD PTR [rcx+0x8]
   140025915:	lea    rdi,[rcx+rax*8+0x10]
   14002591a:	mov    eax,DWORD PTR [rcx]
   14002591c:	cmp    eax,0x1
   14002591f:	je     0x140025931
   140025921:	test   eax,eax
   140025923:	je     0x140025931
   140025925:	mov    edx,DWORD PTR [rcx+0x4]
   140025928:	lea    rcx,[rsi+0x68]
   14002592c:	call   0x140001cd0
   140025931:	mov    rcx,QWORD PTR [rsi+0x68]
   140025935:	mov    rdx,rdi
   140025938:	movsxd rax,DWORD PTR [rcx+0x8]
   14002593c:	lea    rcx,[rcx+rax*8+0x18]
   140025941:	call   QWORD PTR [rip+0x5951]        # 0x14002b298
   140025947:	test   al,al
   140025949:	jne    0x1400259e0
   14002594f:	or     rcx,0xffffffffffffffff
   140025953:	lea    rdx,[rip+0x80d6]        # 0x14002da30
   14002595a:	xor    eax,eax
   14002595c:	mov    QWORD PTR [rsp+0x58],rdx
   140025961:	mov    rdi,rdx
   140025964:	lea    rdx,[rsp+0x50]
   140025969:	repnz scas al,BYTE PTR es:[rdi]
   14002596b:	not    rcx
   14002596e:	dec    rcx
   140025971:	mov    DWORD PTR [rsp+0x50],ecx
   140025975:	lea    rcx,[rsp+0x120]
   14002597d:	movaps xmm0,XMMWORD PTR [rsp+0x50]
   140025982:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   140025988:	call   QWORD PTR [rip+0x5ed2]        # 0x14002b860
   14002598e:	mov    rcx,QWORD PTR [rsi+0x68]
   140025992:	mov    eax,DWORD PTR [rcx]
   140025994:	cmp    eax,0x1
   140025997:	je     0x1400259a9
   140025999:	test   eax,eax
   14002599b:	je     0x1400259a9
   14002599d:	mov    edx,DWORD PTR [rcx+0x4]
   1400259a0:	lea    rcx,[rsi+0x68]
   1400259a4:	call   0x140001cd0
   1400259a9:	mov    rcx,QWORD PTR [rsi+0x68]
   1400259ad:	lea    r8,[rsp+0x120]
   1400259b5:	lea    rdx,[rsp+0x130]
   1400259bd:	movsxd rax,DWORD PTR [rcx+0x8]
   1400259c1:	lea    r9,[rcx+rax*8+0x18]
   1400259c6:	lea    rcx,[rsi+0xc8]
   1400259cd:	call   0x1400241a0
   1400259d2:	lea    rcx,[rsp+0x120]
   1400259da:	call   QWORD PTR [rip+0x5eb8]        # 0x14002b898
   1400259e0:	mov    rcx,QWORD PTR [rsi+0x70]
   1400259e4:	mov    eax,DWORD PTR [rcx+0x8]
   1400259e7:	cmp    DWORD PTR [rcx+0xc],eax
   1400259ea:	je     0x140025b32
   1400259f0:	mov    eax,DWORD PTR [rcx]
   1400259f2:	cmp    eax,0x1
   1400259f5:	je     0x140025a07
   1400259f7:	test   eax,eax
   1400259f9:	je     0x140025a07
   1400259fb:	mov    edx,DWORD PTR [rcx+0x4]
   1400259fe:	lea    rcx,[rsi+0x70]
   140025a02:	call   0x140001cd0
   140025a07:	mov    rcx,QWORD PTR [rsi+0x70]
   140025a0b:	movsxd rax,DWORD PTR [rcx+0x8]
   140025a0f:	mov    rcx,QWORD PTR [rcx+rax*8+0x10]
   140025a14:	cmp    DWORD PTR [rcx+0x4],0x0
   140025a18:	je     0x140025a4d
   140025a1a:	mov    rcx,QWORD PTR [rsi+0x70]
   140025a1e:	mov    eax,DWORD PTR [rcx]
   140025a20:	cmp    eax,0x1
   140025a23:	je     0x140025a35
   140025a25:	test   eax,eax
   140025a27:	je     0x140025a35
   140025a29:	mov    edx,DWORD PTR [rcx+0x4]
   140025a2c:	lea    rcx,[rsi+0x70]
   140025a30:	call   0x140001cd0
   140025a35:	mov    rcx,QWORD PTR [rsi+0x70]
   140025a39:	movsxd rax,DWORD PTR [rcx+0x8]
   140025a3d:	lea    rdx,[rcx+rax*8+0x10]
   140025a42:	lea    rcx,[rsp+0x78]
   140025a47:	call   QWORD PTR [rip+0x5e63]        # 0x14002b8b0
   140025a4d:	mov    rax,QWORD PTR [rsi+0x70]
   140025a51:	mov    ecx,DWORD PTR [rax+0xc]
   140025a54:	sub    ecx,DWORD PTR [rax+0x8]
   140025a57:	cmp    ecx,0x1
   140025a5a:	jle    0x140025b32
   140025a60:	mov    rcx,rax
   140025a63:	mov    eax,DWORD PTR [rax]
   140025a65:	cmp    eax,0x1
   140025a68:	je     0x140025a7a
   140025a6a:	test   eax,eax
   140025a6c:	je     0x140025a7a
   140025a6e:	mov    edx,DWORD PTR [rcx+0x4]
   140025a71:	lea    rcx,[rsi+0x70]
   140025a75:	call   0x140001cd0
   140025a7a:	mov    rcx,QWORD PTR [rsi+0x70]
   140025a7e:	movsxd rax,DWORD PTR [rcx+0x8]
   140025a82:	lea    rdi,[rcx+rax*8+0x10]
   140025a87:	mov    eax,DWORD PTR [rcx]
   140025a89:	cmp    eax,0x1
   140025a8c:	je     0x140025a9e
   140025a8e:	test   eax,eax
   140025a90:	je     0x140025a9e
   140025a92:	mov    edx,DWORD PTR [rcx+0x4]
   140025a95:	lea    rcx,[rsi+0x70]
   140025a99:	call   0x140001cd0
   140025a9e:	mov    rcx,QWORD PTR [rsi+0x70]
   140025aa2:	mov    rdx,rdi
   140025aa5:	movsxd rax,DWORD PTR [rcx+0x8]
   140025aa9:	lea    rcx,[rcx+rax*8+0x18]
   140025aae:	call   QWORD PTR [rip+0x57e4]        # 0x14002b298
   140025ab4:	test   al,al
   140025ab6:	jne    0x140025b32
   140025ab8:	or     rcx,0xffffffffffffffff
   140025abc:	lea    rdx,[rip+0x7fdd]        # 0x14002daa0
   140025ac3:	xor    eax,eax
   140025ac5:	mov    QWORD PTR [rsp+0x58],rdx
   140025aca:	mov    rdi,rdx
   140025acd:	lea    rdx,[rsp+0x50]
   140025ad2:	repnz scas al,BYTE PTR es:[rdi]
   140025ad4:	not    rcx
   140025ad7:	dec    rcx
   140025ada:	mov    DWORD PTR [rsp+0x50],ecx
   140025ade:	lea    rcx,[rsp+0x120]
   140025ae6:	movaps xmm0,XMMWORD PTR [rsp+0x50]
   140025aeb:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   140025af1:	call   QWORD PTR [rip+0x5d69]        # 0x14002b860
   140025af7:	lea    rcx,[rsi+0x70]
   140025afb:	mov    edx,0x1
   140025b00:	call   0x140002650
   140025b05:	lea    rcx,[rsi+0xc8]
   140025b0c:	lea    r8,[rsp+0x120]
   140025b14:	lea    rdx,[rsp+0x130]
   140025b1c:	mov    r9,rax
   140025b1f:	call   0x1400241a0
   140025b24:	lea    rcx,[rsp+0x120]
   140025b2c:	call   QWORD PTR [rip+0x5d66]        # 0x14002b898
   140025b32:	lea    rdx,[rsi+0xc8]
   140025b39:	lea    rcx,[rsp+0x98]
   140025b41:	call   0x140005c40
   140025b46:	mov    rcx,QWORD PTR [rsi+0x38]
   140025b4a:	lea    rdx,[rsp+0x60]
   140025b4f:	call   0x1400089f0
   140025b54:	lea    rcx,[rsi+0x60]
   140025b58:	call   QWORD PTR [rip+0x5862]        # 0x14002b3c0
   140025b5e:	lea    rcx,[rsi+0x68]
   140025b62:	call   0x140001900
   140025b67:	lea    rcx,[rsi+0x70]
   140025b6b:	call   0x140001900
   140025b70:	mov    rcx,r14
   140025b73:	call   0x140001900
   140025b78:	lea    rcx,[rsi+0x78]
   140025b7c:	call   QWORD PTR [rip+0x583e]        # 0x14002b3c0
   140025b82:	lea    rcx,[rsi+0x80]
   140025b89:	call   QWORD PTR [rip+0x5831]        # 0x14002b3c0
   140025b8f:	lea    rcx,[rsi+0x88]
   140025b96:	call   QWORD PTR [rip+0x5824]        # 0x14002b3c0
   140025b9c:	lea    rcx,[rsi+0x90]
   140025ba3:	call   QWORD PTR [rip+0x5817]        # 0x14002b3c0
   140025ba9:	lea    rcx,[rsi+0xc8]
   140025bb0:	call   0x1400233e0
   140025bb5:	lea    rcx,[rsi+0xc0]
   140025bbc:	call   0x14000b3a0
   140025bc1:	lea    rcx,[rsp+0x60]
   140025bc6:	mov    BYTE PTR [rsi+0x98],0x1
   140025bcd:	mov    BYTE PTR [rsi+0x99],0x1
   140025bd4:	call   0x140001ea0
   140025bd9:	mov    r15,QWORD PTR [rsp+0xe0]
   140025be1:	mov    r14,QWORD PTR [rsp+0xe8]
   140025be9:	mov    rbx,QWORD PTR [rsp+0x128]
   140025bf1:	mov    al,0x1
   140025bf3:	add    rsp,0xf0
   140025bfa:	pop    r13
   140025bfc:	pop    r12
   140025bfe:	pop    rdi
   140025bff:	pop    rsi
   140025c00:	pop    rbp
   140025c01:	ret    
   140025c02:	int3   
   140025c03:	int3   
   140025c04:	int3   
   140025c05:	int3   
   140025c06:	int3   
   140025c07:	int3   
   140025c08:	int3   
   140025c09:	int3   
   140025c0a:	int3   
   140025c0b:	int3   
   140025c0c:	int3   
   140025c0d:	int3   
   140025c0e:	int3   
   140025c0f:	int3   
   140025c10:	mov    QWORD PTR [rsp+0x8],rbx
   140025c15:	push   rdi
   140025c16:	sub    rsp,0x20
   140025c1a:	mov    rax,QWORD PTR [rcx]
   140025c1d:	mov    rdi,rcx
   140025c20:	movsxd rbx,DWORD PTR [rax+0x4]
   140025c24:	call   0x140024290
   140025c29:	xor    r9d,r9d
   140025c2c:	mov    ebx,DWORD PTR [rax+rbx*4-0x4]
   140025c30:	mov    rax,QWORD PTR [rdi]
   140025c33:	mov    r8d,DWORD PTR [rax+0x8]
   140025c37:	mov    edx,DWORD PTR [rax+0x4]
   140025c3a:	btr    r8d,0x1f
   140025c3f:	dec    edx
   140025c41:	cmp    edx,r8d
   140025c44:	jle    0x140025c4f
   140025c46:	mov    r8d,edx
   140025c49:	mov    r9d,0x8
   140025c4f:	mov    rcx,rdi
   140025c52:	call   0x140022fd0
   140025c57:	mov    eax,ebx
   140025c59:	mov    rbx,QWORD PTR [rsp+0x30]
   140025c5e:	add    rsp,0x20
   140025c62:	pop    rdi
   140025c63:	ret    
   140025c64:	int3   
   140025c65:	int3   
   140025c66:	int3   
   140025c67:	int3   
   140025c68:	int3   
   140025c69:	int3   
   140025c6a:	int3   
   140025c6b:	int3   
   140025c6c:	int3   
   140025c6d:	int3   
   140025c6e:	int3   
   140025c6f:	int3   
   140025c70:	mov    QWORD PTR [rsp+0x8],rbx
   140025c75:	push   rdi
   140025c76:	sub    rsp,0x20
   140025c7a:	mov    rax,QWORD PTR [rcx]
   140025c7d:	mov    rdi,rcx
   140025c80:	mov    edx,DWORD PTR [rax]
   140025c82:	cmp    edx,0x1
   140025c85:	je     0x140025cbd
   140025c87:	test   edx,edx
   140025c89:	je     0x140025cbd
   140025c8b:	mov    r8d,DWORD PTR [rax+0x8]
   140025c8f:	btr    r8d,0x1f
   140025c94:	test   r8d,r8d
   140025c97:	jne    0x140025cb2
   140025c99:	lea    r9d,[r8+0x2]
   140025c9d:	xor    r8d,r8d
   140025ca0:	lea    edx,[r9+0x6]
   140025ca4:	lea    ecx,[rdx-0x4]
   140025ca7:	call   QWORD PTR [rip+0x5b5b]        # 0x14002b808
   140025cad:	mov    QWORD PTR [rdi],rax
   140025cb0:	jmp    0x140025cbd
   140025cb2:	mov    edx,DWORD PTR [rax+0x4]
   140025cb5:	xor    r9d,r9d
   140025cb8:	call   0x140022fd0
   140025cbd:	mov    rax,QWORD PTR [rdi]
   140025cc0:	mov    rcx,rdi
   140025cc3:	mov    ebx,DWORD PTR [rax+0x4]
   140025cc6:	call   0x140024290
   140025ccb:	lea    ecx,[rbx-0x1]
   140025cce:	mov    rbx,QWORD PTR [rsp+0x30]
   140025cd3:	movsxd rdx,ecx
   140025cd6:	lea    rax,[rax+rdx*4]
   140025cda:	add    rsp,0x20
   140025cde:	pop    rdi
   140025cdf:	ret    
   140025ce0:	mov    QWORD PTR [rsp+0x8],rbx
   140025ce5:	push   rdi
   140025ce6:	sub    rsp,0x30
   140025cea:	mov    rbx,rcx
   140025ced:	mov    rcx,QWORD PTR [rcx]
   140025cf0:	lea    r8,[rip+0xffffffffffffe609]        # 0x140024300
   140025cf7:	lea    rdx,[rip+0xffffffffffffd452]        # 0x140023150
   140025cfe:	mov    r9d,0x20
   140025d04:	mov    DWORD PTR [rsp+0x20],0x8
   140025d0c:	call   QWORD PTR [rip+0x5b36]        # 0x14002b848
   140025d12:	mov    rdi,rax
   140025d15:	mov    rax,QWORD PTR [rbx]
   140025d18:	mov    ecx,DWORD PTR [rax+0x10]
   140025d1b:	test   ecx,ecx
   140025d1d:	je     0x140025d30
   140025d1f:	cmp    ecx,0xffffffff
   140025d22:	je     0x140025d40
   140025d24:	lock add DWORD PTR [rax+0x10],0xffffffff
   140025d29:	setne  al
   140025d2c:	test   al,al
   140025d2e:	jne    0x140025d40
   140025d30:	mov    rcx,QWORD PTR [rbx]
   140025d33:	lea    rdx,[rip+0xffffffffffffe5c6]        # 0x140024300
   140025d3a:	call   QWORD PTR [rip+0x5b28]        # 0x14002b868
   140025d40:	mov    QWORD PTR [rbx],rdi
   140025d43:	mov    rbx,QWORD PTR [rsp+0x40]
   140025d48:	add    rsp,0x30
   140025d4c:	pop    rdi
   140025d4d:	ret    
   140025d4e:	int3   
   140025d4f:	int3   
   140025d50:	mov    DWORD PTR [rsp+0x20],r9d
   140025d55:	mov    QWORD PTR [rsp+0x18],r8
   140025d5a:	mov    QWORD PTR [rsp+0x10],rdx
   140025d5f:	mov    QWORD PTR [rsp+0x8],rcx
   140025d64:	push   rbx
   140025d65:	push   rbp
   140025d66:	push   rsi
   140025d67:	push   rdi
   140025d68:	push   r12
   140025d6a:	push   r13
   140025d6c:	push   r14
   140025d6e:	push   r15
   140025d70:	sub    rsp,0x1f8
   140025d77:	lea    rcx,[rsp+0xd8]
   140025d7f:	xor    ebp,ebp
   140025d81:	mov    r15,rdx
   140025d84:	mov    DWORD PTR [rsp+0x58],ebp
   140025d88:	call   QWORD PTR [rip+0x5b12]        # 0x14002b8a0
   140025d8e:	mov    rax,QWORD PTR [rsp+0xd8]
   140025d96:	or     r14,0xffffffffffffffff
   140025d9a:	cmp    DWORD PTR [rax+0x4],ebp
   140025d9d:	je     0x140025dbd
   140025d9f:	lea    rcx,[rsp+0xe0]
   140025da7:	mov    rdx,r15
   140025daa:	lea    ebx,[rbp+0x1]
   140025dad:	call   QWORD PTR [rip+0x5aed]        # 0x14002b8a0
   140025db3:	lea    rax,[rsp+0xe0]
   140025dbb:	jmp    0x140025e1e
   140025dbd:	inc    DWORD PTR [rip+0xf971]        # 0x140035734
   140025dc3:	lea    rcx,[rsp+0x98]
   140025dcb:	mov    dl,0x20
   140025dcd:	mov    ebx,0x6
   140025dd2:	call   QWORD PTR [rip+0x5af0]        # 0x14002b8c8
   140025dd8:	lea    rdx,[rip+0x8c29]        # 0x14002ea08
   140025ddf:	lea    rcx,[rsp+0x108]
   140025de7:	mov    r8d,r14d
   140025dea:	mov    rdi,rax
   140025ded:	call   QWORD PTR [rip+0x548d]        # 0x14002b280
   140025df3:	mov    r8d,DWORD PTR [rip+0xf93a]        # 0x140035734
   140025dfa:	lea    rdx,[rsp+0x188]
   140025e02:	mov    rcx,rax
   140025e05:	movzx  eax,WORD PTR [rdi]
   140025e08:	xor    r9d,r9d
   140025e0b:	mov    WORD PTR [rsp+0x28],ax
   140025e10:	mov    DWORD PTR [rsp+0x20],0xa
   140025e18:	call   QWORD PTR [rip+0x56ea]        # 0x14002b508
   140025e1e:	lea    rcx,[rsp+0xf0]
   140025e26:	mov    rdx,rax
   140025e29:	call   QWORD PTR [rip+0x5a71]        # 0x14002b8a0
   140025e2f:	test   bl,0x4
   140025e32:	je     0x140025e45
   140025e34:	lea    rcx,[rsp+0x188]
   140025e3c:	and    ebx,0xfffffffb
   140025e3f:	call   QWORD PTR [rip+0x5a53]        # 0x14002b898
   140025e45:	test   bl,0x2
   140025e48:	je     0x140025e5b
   140025e4a:	lea    rcx,[rsp+0x108]
   140025e52:	and    ebx,0xfffffffd
   140025e55:	call   QWORD PTR [rip+0x5a3d]        # 0x14002b898
   140025e5b:	test   bl,0x1
   140025e5e:	je     0x140025e6e
   140025e60:	lea    rcx,[rsp+0xe0]
   140025e68:	call   QWORD PTR [rip+0x5a2a]        # 0x14002b898
   140025e6e:	lea    rcx,[rsp+0xd8]
   140025e76:	call   QWORD PTR [rip+0x5a1c]        # 0x14002b898
   140025e7c:	mov    rax,QWORD PTR [r15+0x50]
   140025e80:	mov    QWORD PTR [rsp+0x50],rax
   140025e85:	mov    ecx,DWORD PTR [rax]
   140025e87:	test   ecx,ecx
   140025e89:	je     0x140025e96
   140025e8b:	cmp    ecx,0xffffffff
   140025e8e:	je     0x140025eee
   140025e90:	lock add DWORD PTR [rax],0x1
   140025e94:	jmp    0x140025eee
   140025e96:	mov    edx,DWORD PTR [rax+0x4]
   140025e99:	lea    rcx,[rsp+0x50]
   140025e9e:	call   QWORD PTR [rip+0x59b4]        # 0x14002b858
   140025ea4:	mov    rdx,QWORD PTR [rsp+0x50]
   140025ea9:	mov    rcx,QWORD PTR [r15+0x50]
   140025ead:	movsxd rax,DWORD PTR [rdx+0xc]
   140025eb1:	lea    rsi,[rdx+rax*8+0x10]
   140025eb6:	movsxd rax,DWORD PTR [rcx+0x8]
   140025eba:	lea    rbx,[rcx+rax*8+0x10]
   140025ebf:	movsxd rax,DWORD PTR [rdx+0x8]
   140025ec3:	lea    rdi,[rdx+rax*8+0x10]
   140025ec8:	cmp    rdi,rsi
   140025ecb:	je     0x140025eee
   140025ecd:	nop    DWORD PTR [rax]
   140025ed0:	test   rdi,rdi
   140025ed3:	je     0x140025ee1
   140025ed5:	mov    rdx,rbx
   140025ed8:	mov    rcx,rdi
   140025edb:	call   QWORD PTR [rip+0x59bf]        # 0x14002b8a0
   140025ee1:	add    rdi,0x8
   140025ee5:	add    rbx,0x8
   140025ee9:	cmp    rdi,rsi
   140025eec:	jne    0x140025ed0
   140025eee:	lea    rcx,[rsp+0xc0]
   140025ef6:	call   QWORD PTR [rip+0x5994]        # 0x14002b890
   140025efc:	lea    rdx,[r15+0x10]
   140025f00:	lea    rcx,[rsp+0x80]
   140025f08:	call   QWORD PTR [rip+0x5992]        # 0x14002b8a0
   140025f0e:	mov    rdx,QWORD PTR [rip+0x5973]        # 0x14002b888
   140025f15:	mov    QWORD PTR [rsp+0x48],rdx
   140025f1a:	mov    eax,DWORD PTR [rdx]
   140025f1c:	cmp    eax,0x1
   140025f1f:	je     0x140025f52
   140025f21:	test   eax,eax
   140025f23:	je     0x140025f52
   140025f25:	lea    rcx,[rsp+0x48]
   140025f2a:	mov    edx,0x7fffffff
   140025f2f:	mov    r8d,0x1
   140025f35:	call   0x140001a10
   140025f3a:	test   rax,rax
   140025f3d:	je     0x140025f7e
   140025f3f:	lea    rdx,[rsp+0x80]
   140025f47:	mov    rcx,rax
   140025f4a:	call   QWORD PTR [rip+0x5950]        # 0x14002b8a0
   140025f50:	jmp    0x140025f7e
   140025f52:	lea    rdx,[rsp+0x80]
   140025f5a:	lea    rcx,[rsp+0x168]
   140025f62:	call   QWORD PTR [rip+0x5938]        # 0x14002b8a0
   140025f68:	lea    rcx,[rsp+0x48]
   140025f6d:	call   QWORD PTR [rip+0x58cd]        # 0x14002b840
   140025f73:	mov    rcx,QWORD PTR [rsp+0x168]
   140025f7b:	mov    QWORD PTR [rax],rcx
   140025f7e:	lea    rcx,[rsp+0x80]
   140025f86:	call   QWORD PTR [rip+0x590c]        # 0x14002b898
   140025f8c:	lea    rdx,[rip+0x7a9d]        # 0x14002da30
   140025f93:	lea    rcx,[rsp+0x118]
   140025f9b:	mov    r8d,r14d
   140025f9e:	call   QWORD PTR [rip+0x52dc]        # 0x14002b280
   140025fa4:	mov    rcx,QWORD PTR [r15+0x38]
   140025fa8:	mov    rdi,rax
   140025fab:	mov    eax,ebp
   140025fad:	cmp    DWORD PTR [rcx+0x20],eax
   140025fb0:	je     0x140025fbe
   140025fb2:	mov    edx,DWORD PTR [rcx+0x24]
   140025fb5:	mov    rcx,rdi
   140025fb8:	call   QWORD PTR [rip+0x52ea]        # 0x14002b2a8
   140025fbe:	lea    rcx,[r15+0x38]
   140025fc2:	mov    r8d,eax
   140025fc5:	mov    rdx,rdi
   140025fc8:	call   0x14001c3c0
   140025fcd:	mov    rdi,QWORD PTR [r15+0x38]
   140025fd1:	lea    rcx,[rsp+0x118]
   140025fd9:	mov    rbx,QWORD PTR [rax]
   140025fdc:	call   QWORD PTR [rip+0x58b6]        # 0x14002b898
   140025fe2:	cmp    rbx,rdi
   140025fe5:	je     0x140026048
   140025fe7:	mov    rax,QWORD PTR [rsp+0x48]
   140025fec:	mov    ecx,DWORD PTR [rax]
   140025fee:	cmp    ecx,0x1
   140025ff1:	je     0x140026020
   140025ff3:	test   ecx,ecx
   140025ff5:	je     0x140026020
   140025ff7:	lea    rcx,[rsp+0x48]
   140025ffc:	mov    edx,0x7fffffff
   140026001:	mov    r8d,0x1
   140026007:	call   0x140001a10
   14002600c:	test   rax,rax
   14002600f:	je     0x140026048
   140026011:	lea    rdx,[rbx+0x18]
   140026015:	mov    rcx,rax
   140026018:	call   QWORD PTR [rip+0x5882]        # 0x14002b8a0
   14002601e:	jmp    0x140026048
   140026020:	lea    rdx,[rbx+0x18]
   140026024:	lea    rcx,[rsp+0x1a0]
   14002602c:	call   QWORD PTR [rip+0x586e]        # 0x14002b8a0
   140026032:	lea    rcx,[rsp+0x48]
   140026037:	call   QWORD PTR [rip+0x5803]        # 0x14002b840
   14002603d:	mov    rcx,QWORD PTR [rsp+0x1a0]
   140026045:	mov    QWORD PTR [rax],rcx
   140026048:	mov    rax,QWORD PTR [rip+0x5839]        # 0x14002b888
   14002604f:	lea    rdx,[r15+0x18]
   140026053:	lea    rcx,[rsp+0xe8]
   14002605b:	mov    QWORD PTR [rsp+0x38],rax
   140026060:	call   QWORD PTR [rip+0x583a]        # 0x14002b8a0
   140026066:	mov    rcx,QWORD PTR [rsp+0xe8]
   14002606e:	cmp    DWORD PTR [rcx+0x4],ebp
   140026071:	lea    rcx,[rsp+0xe8]
   140026079:	setne  dil
   14002607d:	call   QWORD PTR [rip+0x5815]        # 0x14002b898
   140026083:	test   dil,dil
   140026086:	je     0x140026115
   14002608c:	lea    rdx,[r15+0x18]
   140026090:	lea    rcx,[rsp+0x90]
   140026098:	call   QWORD PTR [rip+0x5802]        # 0x14002b8a0
   14002609e:	mov    rdx,QWORD PTR [rsp+0x38]
   1400260a3:	mov    eax,DWORD PTR [rdx]
   1400260a5:	cmp    eax,0x1
   1400260a8:	je     0x1400260db
   1400260aa:	test   eax,eax
   1400260ac:	je     0x1400260db
   1400260ae:	lea    rcx,[rsp+0x38]
   1400260b3:	mov    edx,0x7fffffff
   1400260b8:	mov    r8d,0x1
   1400260be:	call   0x140001a10
   1400260c3:	test   rax,rax
   1400260c6:	je     0x140026107
   1400260c8:	lea    rdx,[rsp+0x90]
   1400260d0:	mov    rcx,rax
   1400260d3:	call   QWORD PTR [rip+0x57c7]        # 0x14002b8a0
   1400260d9:	jmp    0x140026107
   1400260db:	lea    rdx,[rsp+0x90]
   1400260e3:	lea    rcx,[rsp+0x128]
   1400260eb:	call   QWORD PTR [rip+0x57af]        # 0x14002b8a0
   1400260f1:	lea    rcx,[rsp+0x38]
   1400260f6:	call   QWORD PTR [rip+0x5744]        # 0x14002b840
   1400260fc:	mov    rcx,QWORD PTR [rsp+0x128]
   140026104:	mov    QWORD PTR [rax],rcx
   140026107:	lea    rcx,[rsp+0x90]
   14002610f:	call   QWORD PTR [rip+0x5783]        # 0x14002b898
   140026115:	lea    rdx,[rip+0x7984]        # 0x14002daa0
   14002611c:	lea    rcx,[rsp+0x178]
   140026124:	mov    r8d,r14d
   140026127:	call   QWORD PTR [rip+0x5153]        # 0x14002b280
   14002612d:	mov    rcx,QWORD PTR [r15+0x38]
   140026131:	mov    rdi,rax
   140026134:	mov    eax,ebp
   140026136:	cmp    DWORD PTR [rcx+0x20],eax
   140026139:	je     0x140026147
   14002613b:	mov    edx,DWORD PTR [rcx+0x24]
   14002613e:	mov    rcx,rdi
   140026141:	call   QWORD PTR [rip+0x5161]        # 0x14002b2a8
   140026147:	lea    rcx,[r15+0x38]
   14002614b:	mov    r8d,eax
   14002614e:	mov    rdx,rdi
   140026151:	call   0x14001c3c0
   140026156:	mov    rdi,QWORD PTR [r15+0x38]
   14002615a:	lea    rcx,[rsp+0x178]
   140026162:	mov    rbx,QWORD PTR [rax]
   140026165:	call   QWORD PTR [rip+0x572d]        # 0x14002b898
   14002616b:	cmp    rbx,rdi
   14002616e:	je     0x140026355
   140026174:	mov    rax,QWORD PTR [rsp+0x38]
   140026179:	mov    ecx,DWORD PTR [rax+0x8]
   14002617c:	cmp    DWORD PTR [rax+0xc],ecx
   14002617f:	jne    0x1400262f9
   140026185:	mov    rax,QWORD PTR [rsp+0x48]
   14002618a:	mov    ecx,DWORD PTR [rax+0xc]
   14002618d:	sub    ecx,DWORD PTR [rax+0x8]
   140026190:	cmp    ecx,0x2
   140026193:	jne    0x140026221
   140026199:	lea    rcx,[rsp+0x1b0]
   1400261a1:	call   QWORD PTR [rip+0x56e9]        # 0x14002b890
   1400261a7:	mov    rcx,QWORD PTR [rsp+0x38]
   1400261ac:	mov    edx,DWORD PTR [rcx]
   1400261ae:	mov    rdi,rax
   1400261b1:	cmp    edx,0x1
   1400261b4:	je     0x1400261ed
   1400261b6:	test   edx,edx
   1400261b8:	je     0x1400261ed
   1400261ba:	lea    rcx,[rsp+0x38]
   1400261bf:	mov    edx,0x7fffffff
   1400261c4:	mov    r8d,0x1
   1400261ca:	call   0x140001a10
   1400261cf:	test   rax,rax
   1400261d2:	je     0x140026214
   1400261d4:	mov    rdx,rdi
   1400261d7:	mov    rcx,rax
   1400261da:	call   QWORD PTR [rip+0x56c0]        # 0x14002b8a0
   1400261e0:	lea    rcx,[rsp+0x1b0]
   1400261e8:	jmp    0x1400262ee
   1400261ed:	lea    rcx,[rsp+0x138]
   1400261f5:	mov    rdx,rax
   1400261f8:	call   QWORD PTR [rip+0x56a2]        # 0x14002b8a0
   1400261fe:	lea    rcx,[rsp+0x38]
   140026203:	call   QWORD PTR [rip+0x5637]        # 0x14002b840
   140026209:	mov    rcx,QWORD PTR [rsp+0x138]
   140026211:	mov    QWORD PTR [rax],rcx
   140026214:	lea    rcx,[rsp+0x1b0]
   14002621c:	jmp    0x1400262ee
   140026221:	lea    rdx,[rip+0x87d8]        # 0x14002ea00
   140026228:	xor    eax,eax
   14002622a:	mov    rcx,r14
   14002622d:	mov    rdi,rdx
   140026230:	mov    QWORD PTR [rsp+0x1d0],rdx
   140026238:	mov    rdx,QWORD PTR [rip+0xf1a9]        # 0x1400353e8
   14002623f:	repnz scas al,BYTE PTR es:[rdi]
   140026241:	not    rcx
   140026244:	dec    rcx
   140026247:	mov    DWORD PTR [rsp+0x1c8],ecx
   14002624e:	test   rdx,rdx
   140026251:	je     0x14002626a
   140026253:	mov    rcx,r14
   140026256:	mov    rdi,rdx
   140026259:	repnz scas al,BYTE PTR es:[rdi]
   14002625b:	not    rcx
   14002625e:	dec    rcx
   140026261:	mov    DWORD PTR [rsp+0x190],ecx
   140026268:	jmp    0x140026271
   14002626a:	mov    DWORD PTR [rsp+0x190],ebp
   140026271:	lea    rax,[rsp+0x40]
   140026276:	mov    QWORD PTR [rsp+0x198],rdx
   14002627e:	lea    rcx,[rsp+0x1d8]
   140026286:	mov    QWORD PTR [rsp+0x1b8],rax
   14002628e:	lea    rax,[rsp+0x190]
   140026296:	lea    rdx,[rsp+0xd0]
   14002629e:	mov    QWORD PTR [rsp+0x1c0],rax
   1400262a6:	lea    rax,[rsp+0x1b8]
   1400262ae:	mov    BYTE PTR [rsp+0x40],0x20
   1400262b3:	mov    QWORD PTR [rsp+0x1d8],rax
   1400262bb:	lea    rax,[rsp+0x1c8]
   1400262c3:	mov    QWORD PTR [rsp+0x1e0],rax
   1400262cb:	call   0x140022e90
   1400262d0:	lea    rdx,[rsp+0xd0]
   1400262d8:	lea    rcx,[rsp+0xc0]
   1400262e0:	call   QWORD PTR [rip+0x55ca]        # 0x14002b8b0
   1400262e6:	lea    rcx,[rsp+0xd0]
   1400262ee:	call   QWORD PTR [rip+0x55a4]        # 0x14002b898
   1400262f4:	mov    rax,QWORD PTR [rsp+0x38]
   1400262f9:	mov    ecx,DWORD PTR [rax]
   1400262fb:	cmp    ecx,0x1
   1400262fe:	je     0x14002632d
   140026300:	test   ecx,ecx
   140026302:	je     0x14002632d
   140026304:	lea    rcx,[rsp+0x38]
   140026309:	mov    edx,0x7fffffff
   14002630e:	mov    r8d,0x1
   140026314:	call   0x140001a10
   140026319:	test   rax,rax
   14002631c:	je     0x140026355
   14002631e:	lea    rdx,[rbx+0x18]
   140026322:	mov    rcx,rax
   140026325:	call   QWORD PTR [rip+0x5575]        # 0x14002b8a0
   14002632b:	jmp    0x140026355
   14002632d:	lea    rdx,[rbx+0x18]
   140026331:	lea    rcx,[rsp+0x148]
   140026339:	call   QWORD PTR [rip+0x5561]        # 0x14002b8a0
   14002633f:	lea    rcx,[rsp+0x38]
   140026344:	call   QWORD PTR [rip+0x54f6]        # 0x14002b840
   14002634a:	mov    rcx,QWORD PTR [rsp+0x148]
   140026352:	mov    QWORD PTR [rax],rcx
   140026355:	mov    rax,QWORD PTR [rsp+0x48]
   14002635a:	mov    ecx,DWORD PTR [rax]
   14002635c:	cmp    ecx,0x1
   14002635f:	je     0x140026377
   140026361:	test   ecx,ecx
   140026363:	je     0x140026377
   140026365:	mov    edx,DWORD PTR [rax+0x4]
   140026368:	lea    rcx,[rsp+0x48]
   14002636d:	call   0x140001cd0
   140026372:	mov    rax,QWORD PTR [rsp+0x48]
   140026377:	movsxd rcx,DWORD PTR [rax+0x8]
   14002637b:	lea    rsi,[rax+rcx*8+0x10]
   140026380:	mov    ecx,DWORD PTR [rax]
   140026382:	cmp    ecx,0x1
   140026385:	je     0x14002639d
   140026387:	test   ecx,ecx
   140026389:	je     0x14002639d
   14002638b:	mov    edx,DWORD PTR [rax+0x4]
   14002638e:	lea    rcx,[rsp+0x48]
   140026393:	call   0x140001cd0
   140026398:	mov    rax,QWORD PTR [rsp+0x48]
   14002639d:	movsxd rcx,DWORD PTR [rax+0xc]
   1400263a1:	lea    r12,[rax+rcx*8+0x10]
   1400263a6:	mov    rax,QWORD PTR [rsp+0x38]
   1400263ab:	mov    ecx,DWORD PTR [rax]
   1400263ad:	cmp    ecx,0x1
   1400263b0:	je     0x1400263c8
   1400263b2:	test   ecx,ecx
   1400263b4:	je     0x1400263c8
   1400263b6:	mov    edx,DWORD PTR [rax+0x4]
   1400263b9:	lea    rcx,[rsp+0x38]
   1400263be:	call   0x140001cd0
   1400263c3:	mov    rax,QWORD PTR [rsp+0x38]
   1400263c8:	movsxd rcx,DWORD PTR [rax+0x8]
   1400263cc:	lea    rdi,[rax+rcx*8+0x10]
   1400263d1:	mov    ecx,DWORD PTR [rax]
   1400263d3:	cmp    ecx,0x1
   1400263d6:	je     0x1400263ee
   1400263d8:	test   ecx,ecx
   1400263da:	je     0x1400263ee
   1400263dc:	mov    edx,DWORD PTR [rax+0x4]
   1400263df:	lea    rcx,[rsp+0x38]
   1400263e4:	call   0x140001cd0
   1400263e9:	mov    rax,QWORD PTR [rsp+0x38]
   1400263ee:	movsxd rcx,DWORD PTR [rax+0xc]
   1400263f2:	lea    rbx,[rax+rcx*8+0x10]
   1400263f7:	mov    rax,QWORD PTR [rsp+0x50]
   1400263fc:	mov    ecx,DWORD PTR [rax]
   1400263fe:	cmp    ecx,0x1
   140026401:	je     0x140026419
   140026403:	test   ecx,ecx
   140026405:	je     0x140026419
   140026407:	mov    edx,DWORD PTR [rax+0x4]
   14002640a:	lea    rcx,[rsp+0x50]
   14002640f:	call   0x140001cd0
   140026414:	mov    rax,QWORD PTR [rsp+0x50]
   140026419:	movsxd rcx,DWORD PTR [rax+0x8]
   14002641d:	lea    rbp,[rax+rcx*8+0x10]
   140026422:	mov    ecx,DWORD PTR [rax]
   140026424:	mov    QWORD PTR [rsp+0xc8],rbp
   14002642c:	cmp    ecx,0x1
   14002642f:	je     0x140026447
   140026431:	test   ecx,ecx
   140026433:	je     0x140026447
   140026435:	mov    edx,DWORD PTR [rax+0x4]
   140026438:	lea    rcx,[rsp+0x50]
   14002643d:	call   0x140001cd0
   140026442:	mov    rax,QWORD PTR [rsp+0x50]
   140026447:	movsxd rcx,DWORD PTR [rax+0xc]
   14002644b:	lea    r13,[rax+rcx*8+0x10]
   140026450:	lea    rcx,[rsp+0xb0]
   140026458:	mov    QWORD PTR [rsp+0x170],r13
   140026460:	call   QWORD PTR [rip+0x542a]        # 0x14002b890
   140026466:	cmp    rsi,r12
   140026469:	jne    0x140026479
   14002646b:	cmp    rdi,rbx
   14002646e:	jne    0x140026479
   140026470:	cmp    rbp,r13
   140026473:	je     0x140026b2a
   140026479:	lea    rcx,[rsp+0x60]
   14002647e:	call   QWORD PTR [rip+0x5054]        # 0x14002b4d8
   140026484:	lea    rcx,[rsp+0xa0]
   14002648c:	call   QWORD PTR [rip+0x5046]        # 0x14002b4d8
   140026492:	mov    eax,DWORD PTR [r15+0x70]
   140026496:	cmp    eax,0x3
   140026499:	je     0x1400264a0
   14002649b:	cmp    eax,0x2
   14002649e:	jne    0x1400264b9
   1400264a0:	cmp    BYTE PTR [r15+0x74],0x0
   1400264a5:	jne    0x1400264b9
   1400264a7:	lea    rdx,[rip+0x8542]        # 0x14002e9f0
   1400264ae:	lea    rcx,[rsp+0x60]
   1400264b3:	call   QWORD PTR [rip+0x5377]        # 0x14002b830
   1400264b9:	mov    eax,DWORD PTR [r15+0x70]
   1400264bd:	cmp    eax,0x1
   1400264c0:	je     0x1400264f1
   1400264c2:	cmp    eax,0x2
   1400264c5:	je     0x1400264f1
   1400264c7:	test   eax,eax
   1400264c9:	jne    0x140026503
   1400264cb:	cmp    rbp,r13
   1400264ce:	je     0x140026503
   1400264d0:	mov    rax,QWORD PTR [rbp+0x0]
   1400264d4:	cmp    DWORD PTR [rax+0x4],0x0
   1400264d8:	je     0x140026503
   1400264da:	lea    rdx,[rip+0x84e7]        # 0x14002e9c8
   1400264e1:	lea    rcx,[rsp+0xa0]
   1400264e9:	call   QWORD PTR [rip+0x5341]        # 0x14002b830
   1400264ef:	jmp    0x140026503
   1400264f1:	lea    rdx,[rip+0x84c0]        # 0x14002e9b8
   1400264f8:	lea    rcx,[rsp+0x60]
   1400264fd:	call   QWORD PTR [rip+0x5325]        # 0x14002b828
   140026503:	lea    rcx,[rsp+0xb8]
   14002650b:	mov    dl,0x20
   14002650d:	call   QWORD PTR [rip+0x53b5]        # 0x14002b8c8
   140026513:	mov    r14d,DWORD PTR [rsp+0x258]
   14002651b:	lea    rcx,[rsp+0xf8]
   140026523:	add    r14d,r14d
   140026526:	mov    r15,rax
   140026529:	call   QWORD PTR [rip+0x5361]        # 0x14002b890
   14002652f:	movzx  edx,WORD PTR [r15]
   140026533:	mov    r8d,r14d
   140026536:	mov    rcx,rax
   140026539:	call   QWORD PTR [rip+0x52a9]        # 0x14002b7e8
   14002653f:	mov    r15,QWORD PTR [rsp+0x240]
   140026547:	mov    rcx,r15
   14002654a:	mov    rdx,rax
   14002654d:	call   QWORD PTR [rip+0x5055]        # 0x14002b5a8
   140026553:	lea    rcx,[rsp+0xf8]
   14002655b:	call   QWORD PTR [rip+0x5337]        # 0x14002b898
   140026561:	lea    rdx,[rip+0x8438]        # 0x14002e9a0
   140026568:	mov    rcx,r15
   14002656b:	call   QWORD PTR [rip+0x503f]        # 0x14002b5b0
   140026571:	lea    rdx,[rsp+0xf0]
   140026579:	mov    rcx,rax
   14002657c:	call   QWORD PTR [rip+0x5026]        # 0x14002b5a8
   140026582:	mov    rdx,QWORD PTR [rsp+0x248]
   14002658a:	cmp    BYTE PTR [rdx+0x74],0x0
   14002658e:	je     0x1400265c9
   140026590:	lea    rdx,[rip+0x7669]        # 0x14002dc00
   140026597:	mov    rcx,r15
   14002659a:	call   QWORD PTR [rip+0x5010]        # 0x14002b5b0
   1400265a0:	mov    r14d,DWORD PTR [rsp+0x58]
   1400265a5:	mov    edx,r14d
   1400265a8:	mov    rcx,rax
   1400265ab:	call   QWORD PTR [rip+0x4dff]        # 0x14002b3b0
   1400265b1:	inc    r14d
   1400265b4:	lea    rdx,[rip+0x7641]        # 0x14002dbfc
   1400265bb:	mov    rcx,rax
   1400265be:	mov    DWORD PTR [rsp+0x58],r14d
   1400265c3:	call   QWORD PTR [rip+0x4fe7]        # 0x14002b5b0
   1400265c9:	lea    rdx,[rip+0x709c]        # 0x14002d66c
   1400265d0:	mov    rcx,r15
   1400265d3:	call   QWORD PTR [rip+0x4fd7]        # 0x14002b5b0
   1400265d9:	lea    rdx,[rsp+0x60]
   1400265de:	mov    rcx,rax
   1400265e1:	call   QWORD PTR [rip+0x5239]        # 0x14002b820
   1400265e7:	lea    rdx,[rip+0x7066]        # 0x14002d654
   1400265ee:	mov    rcx,rax
   1400265f1:	call   QWORD PTR [rip+0x4fb9]        # 0x14002b5b0
   1400265f7:	mov    eax,DWORD PTR [rsp+0x258]
   1400265fe:	lea    rcx,[rsp+0x70]
   140026603:	inc    eax
   140026605:	mov    dl,0x20
   140026607:	mov    DWORD PTR [rsp+0x258],eax
   14002660e:	add    eax,eax
   140026610:	mov    DWORD PTR [rsp+0x5c],eax
   140026614:	call   QWORD PTR [rip+0x52ae]        # 0x14002b8c8
   14002661a:	lea    rcx,[rsp+0x158]
   140026622:	mov    r14,rax
   140026625:	call   QWORD PTR [rip+0x5265]        # 0x14002b890
   14002662b:	mov    r8d,DWORD PTR [rsp+0x5c]
   140026630:	movzx  edx,WORD PTR [r14]
   140026634:	mov    rcx,rax
   140026637:	call   QWORD PTR [rip+0x51ab]        # 0x14002b7e8
   14002663d:	mov    rcx,r15
   140026640:	mov    rdx,rax
   140026643:	call   QWORD PTR [rip+0x4f5f]        # 0x14002b5a8
   140026649:	lea    rcx,[rsp+0x158]
   140026651:	call   QWORD PTR [rip+0x5241]        # 0x14002b898
   140026657:	cmp    rsi,r12
   14002665a:	je     0x140026671
   14002665c:	lea    rcx,[rsp+0xb0]
   140026664:	mov    rdx,rsi
   140026667:	call   QWORD PTR [rip+0x5243]        # 0x14002b8b0
   14002666d:	add    rsi,0x8
   140026671:	lea    rdx,[rsp+0xb0]
   140026679:	lea    rcx,[rsp+0x1a8]
   140026681:	mov    r8b,0x1
   140026684:	call   0x140022730
   140026689:	lea    rdx,[rip+0x82f0]        # 0x14002e980
   140026690:	mov    rcx,r15
   140026693:	mov    r14,rax
   140026696:	call   QWORD PTR [rip+0x4f14]        # 0x14002b5b0
   14002669c:	mov    rdx,r14
   14002669f:	mov    rcx,rax
   1400266a2:	call   QWORD PTR [rip+0x4f00]        # 0x14002b5a8
   1400266a8:	lea    rdx,[rip+0x6f79]        # 0x14002d628
   1400266af:	mov    rcx,rax
   1400266b2:	call   QWORD PTR [rip+0x4ef8]        # 0x14002b5b0
   1400266b8:	lea    rcx,[rsp+0x1a8]
   1400266c0:	call   QWORD PTR [rip+0x51d2]        # 0x14002b898
   1400266c6:	lea    rcx,[rsp+0x68]
   1400266cb:	xor    r14b,r14b
   1400266ce:	mov    BYTE PTR [rsp+0x30],r14b
   1400266d3:	call   QWORD PTR [rip+0x51b7]        # 0x14002b890
   1400266d9:	cmp    rbp,r13
   1400266dc:	je     0x14002671c
   1400266de:	lea    rcx,[rsp+0x68]
   1400266e3:	mov    rdx,rbp
   1400266e6:	call   QWORD PTR [rip+0x51c4]        # 0x14002b8b0
   1400266ec:	lea    rcx,[rsp+0x68]
   1400266f1:	mov    r9d,0x1
   1400266f7:	mov    r8d,0x2762
   1400266fd:	mov    edx,0x9c
   140026702:	call   QWORD PTR [rip+0x4e58]        # 0x14002b560
   140026708:	add    rbp,0x8
   14002670c:	mov    r14b,0x1
   14002670f:	mov    QWORD PTR [rsp+0xc8],rbp
   140026717:	mov    BYTE PTR [rsp+0x30],r14b
   14002671c:	mov    r13d,DWORD PTR [rsp+0x258]
   140026724:	mov    ebp,DWORD PTR [rsp+0x5c]
   140026728:	cmp    rdi,rbx
   14002672b:	je     0x1400268e0
   140026731:	mov    rax,QWORD PTR [rdi]
   140026734:	cmp    DWORD PTR [rax+0x4],0x0
   140026738:	je     0x1400268e0
   14002673e:	lea    rcx,[rsp+0xa8]
   140026746:	mov    dl,0x20
   140026748:	call   QWORD PTR [rip+0x517a]        # 0x14002b8c8
   14002674e:	lea    rcx,[rsp+0x100]
   140026756:	mov    r14,rax
   140026759:	call   QWORD PTR [rip+0x5131]        # 0x14002b890
   14002675f:	movzx  edx,WORD PTR [r14]
   140026763:	mov    rcx,rax
   140026766:	mov    r8d,ebp
   140026769:	call   QWORD PTR [rip+0x5079]        # 0x14002b7e8
   14002676f:	mov    rcx,r15
   140026772:	mov    rdx,rax
   140026775:	call   QWORD PTR [rip+0x4e2d]        # 0x14002b5a8
   14002677b:	lea    rcx,[rsp+0x100]
   140026783:	call   QWORD PTR [rip+0x510f]        # 0x14002b898
   140026789:	lea    rdx,[rip+0x81e0]        # 0x14002e970
   140026790:	mov    rcx,r15
   140026793:	call   QWORD PTR [rip+0x4e17]        # 0x14002b5b0
   140026799:	inc    r13d
   14002679c:	lea    rcx,[rsp+0x88]
   1400267a4:	mov    dl,0x20
   1400267a6:	lea    ebp,[r13+r13*1+0x0]
   1400267ab:	call   QWORD PTR [rip+0x5117]        # 0x14002b8c8
   1400267b1:	lea    rcx,[rsp+0x110]
   1400267b9:	mov    r14,rax
   1400267bc:	call   QWORD PTR [rip+0x50ce]        # 0x14002b890
   1400267c2:	movzx  edx,WORD PTR [r14]
   1400267c6:	mov    rcx,rax
   1400267c9:	mov    r8d,ebp
   1400267cc:	call   QWORD PTR [rip+0x5016]        # 0x14002b7e8
   1400267d2:	mov    rcx,r15
   1400267d5:	mov    rdx,rax
   1400267d8:	call   QWORD PTR [rip+0x4dca]        # 0x14002b5a8
   1400267de:	lea    rcx,[rsp+0x110]
   1400267e6:	call   QWORD PTR [rip+0x50ac]        # 0x14002b898
   1400267ec:	lea    rcx,[rsp+0x120]
   1400267f4:	mov    r8b,0x1
   1400267f7:	mov    rdx,rdi
   1400267fa:	call   0x140022730
   1400267ff:	lea    rdx,[rip+0x814a]        # 0x14002e950
   140026806:	mov    rcx,r15
   140026809:	mov    r14,rax
   14002680c:	call   QWORD PTR [rip+0x4d9e]        # 0x14002b5b0
   140026812:	lea    rdx,[rsp+0xc0]
   14002681a:	mov    rcx,rax
   14002681d:	call   QWORD PTR [rip+0x4d85]        # 0x14002b5a8
   140026823:	mov    dl,0x3e
   140026825:	mov    rcx,rax
   140026828:	call   QWORD PTR [rip+0x4b7a]        # 0x14002b3a8
   14002682e:	mov    rdx,r14
   140026831:	mov    rcx,rax
   140026834:	call   QWORD PTR [rip+0x4d6e]        # 0x14002b5a8
   14002683a:	lea    rdx,[rip+0x6de7]        # 0x14002d628
   140026841:	mov    rcx,rax
   140026844:	call   QWORD PTR [rip+0x4d66]        # 0x14002b5b0
   14002684a:	lea    rcx,[rsp+0x120]
   140026852:	call   QWORD PTR [rip+0x5040]        # 0x14002b898
   140026858:	cmp    BYTE PTR [rsp+0x30],0x0
   14002685d:	jne    0x1400268e9
   140026863:	lea    rcx,[rsp+0x78]
   140026868:	mov    dl,0x20
   14002686a:	call   QWORD PTR [rip+0x5058]        # 0x14002b8c8
   140026870:	lea    rcx,[rsp+0x130]
   140026878:	mov    r14,rax
   14002687b:	call   QWORD PTR [rip+0x500f]        # 0x14002b890
   140026881:	movzx  edx,WORD PTR [r14]
   140026885:	mov    rcx,rax
   140026888:	mov    r8d,ebp
   14002688b:	call   QWORD PTR [rip+0x4f57]        # 0x14002b7e8
   140026891:	mov    rcx,r15
   140026894:	mov    rdx,rax
   140026897:	call   QWORD PTR [rip+0x4d0b]        # 0x14002b5a8
   14002689d:	lea    rcx,[rsp+0x130]
   1400268a5:	call   QWORD PTR [rip+0x4fed]        # 0x14002b898
   1400268ab:	lea    rdx,[rip+0x8086]        # 0x14002e938
   1400268b2:	mov    rcx,r15
   1400268b5:	call   QWORD PTR [rip+0x4cf5]        # 0x14002b5b0
   1400268bb:	mov    rdx,QWORD PTR [rip+0xeb06]        # 0x1400353c8
   1400268c2:	mov    rcx,rax
   1400268c5:	call   QWORD PTR [rip+0x4ce5]        # 0x14002b5b0
   1400268cb:	lea    rdx,[rip+0x78ba]        # 0x14002e18c
   1400268d2:	mov    rcx,rax
   1400268d5:	call   QWORD PTR [rip+0x4cd5]        # 0x14002b5b0
   1400268db:	jmp    0x1400269a4
   1400268e0:	test   r14b,r14b
   1400268e3:	je     0x1400269a4
   1400268e9:	lea    rcx,[rsp+0x72]
   1400268ee:	mov    dl,0x20
   1400268f0:	call   QWORD PTR [rip+0x4fd2]        # 0x14002b8c8
   1400268f6:	lea    rcx,[rsp+0x140]
   1400268fe:	mov    r14,rax
   140026901:	call   QWORD PTR [rip+0x4f89]        # 0x14002b890
   140026907:	movzx  edx,WORD PTR [r14]
   14002690b:	mov    rcx,rax
   14002690e:	mov    r8d,ebp
   140026911:	call   QWORD PTR [rip+0x4ed1]        # 0x14002b7e8
   140026917:	mov    rcx,r15
   14002691a:	mov    rdx,rax
   14002691d:	call   QWORD PTR [rip+0x4c85]        # 0x14002b5a8
   140026923:	lea    rcx,[rsp+0x140]
   14002692b:	call   QWORD PTR [rip+0x4f67]        # 0x14002b898
   140026931:	lea    rdx,[rsp+0x68]
   140026936:	lea    rcx,[rsp+0x150]
   14002693e:	mov    r8b,0x1
   140026941:	call   0x140022730
   140026946:	lea    rdx,[rip+0x7fcb]        # 0x14002e918
   14002694d:	mov    rcx,r15
   140026950:	mov    r14,rax
   140026953:	call   QWORD PTR [rip+0x4c57]        # 0x14002b5b0
   140026959:	lea    rdx,[rsp+0xa0]
   140026961:	mov    rcx,rax
   140026964:	call   QWORD PTR [rip+0x4eb6]        # 0x14002b820
   14002696a:	lea    rdx,[rip+0x72b3]        # 0x14002dc24
   140026971:	mov    rcx,rax
   140026974:	call   QWORD PTR [rip+0x4c36]        # 0x14002b5b0
   14002697a:	mov    rdx,r14
   14002697d:	mov    rcx,rax
   140026980:	call   QWORD PTR [rip+0x4c22]        # 0x14002b5a8
   140026986:	lea    rdx,[rip+0x6c73]        # 0x14002d600
   14002698d:	mov    rcx,rax
   140026990:	call   QWORD PTR [rip+0x4c1a]        # 0x14002b5b0
   140026996:	lea    rcx,[rsp+0x150]
   14002699e:	call   QWORD PTR [rip+0x4ef4]        # 0x14002b898
   1400269a4:	cmp    rdi,rbx
   1400269a7:	je     0x140026a16
   1400269a9:	mov    rax,QWORD PTR [rdi]
   1400269ac:	cmp    DWORD PTR [rax+0x4],0x0
   1400269b0:	je     0x140026a12
   1400269b2:	dec    r13d
   1400269b5:	lea    rcx,[rsp+0x76]
   1400269ba:	mov    dl,0x20
   1400269bc:	lea    ebp,[r13+r13*1+0x0]
   1400269c1:	call   QWORD PTR [rip+0x4f01]        # 0x14002b8c8
   1400269c7:	lea    rcx,[rsp+0x160]
   1400269cf:	mov    r14,rax
   1400269d2:	call   QWORD PTR [rip+0x4eb8]        # 0x14002b890
   1400269d8:	movzx  edx,WORD PTR [r14]
   1400269dc:	mov    rcx,rax
   1400269df:	mov    r8d,ebp
   1400269e2:	call   QWORD PTR [rip+0x4e00]        # 0x14002b7e8
   1400269e8:	mov    rcx,r15
   1400269eb:	mov    rdx,rax
   1400269ee:	call   QWORD PTR [rip+0x4bb4]        # 0x14002b5a8
   1400269f4:	lea    rcx,[rsp+0x160]
   1400269fc:	call   QWORD PTR [rip+0x4e96]        # 0x14002b898
   140026a02:	lea    rdx,[rip+0x7eff]        # 0x14002e908
   140026a09:	mov    rcx,r15
   140026a0c:	call   QWORD PTR [rip+0x4b9e]        # 0x14002b5b0
   140026a12:	add    rdi,0x8
   140026a16:	xor    r14b,r14b
   140026a19:	mov    BYTE PTR [rsp+0x30],r14b
   140026a1e:	cmp    rsi,r12
   140026a21:	jne    0x140026a2c
   140026a23:	cmp    rdi,rbx
   140026a26:	jne    0x140026731
   140026a2c:	mov    rax,QWORD PTR [rsp+0x248]
   140026a34:	mov    rbp,QWORD PTR [rsp+0xc8]
   140026a3c:	mov    DWORD PTR [rsp+0x258],r13d
   140026a44:	cmp    BYTE PTR [rax+0x74],0x0
   140026a48:	mov    DWORD PTR [rsp+0x258],r13d
   140026a50:	mov    r13,QWORD PTR [rsp+0x170]
   140026a58:	mov    r14d,DWORD PTR [rsp+0x258]
   140026a60:	jne    0x140026a8b
   140026a62:	mov    r8d,r14d
   140026a65:	mov    rdx,rax
   140026a68:	mov    rcx,r15
   140026a6b:	call   0x140023490
   140026a70:	mov    r8,QWORD PTR [rsp+0x250]
   140026a78:	mov    rdx,QWORD PTR [rsp+0x248]
   140026a80:	mov    r9d,r14d
   140026a83:	mov    rcx,r15
   140026a86:	call   0x140022b80
   140026a8b:	lea    rcx,[rsp+0x74]
   140026a90:	dec    r14d
   140026a93:	mov    dl,0x20
   140026a95:	mov    DWORD PTR [rsp+0x258],r14d
   140026a9d:	call   QWORD PTR [rip+0x4e25]        # 0x14002b8c8
   140026aa3:	lea    rcx,[rsp+0x180]
   140026aab:	mov    r15,rax
   140026aae:	add    r14d,r14d
   140026ab1:	call   QWORD PTR [rip+0x4dd9]        # 0x14002b890
   140026ab7:	movzx  edx,WORD PTR [r15]
   140026abb:	mov    r8d,r14d
   140026abe:	mov    rcx,rax
   140026ac1:	call   QWORD PTR [rip+0x4d21]        # 0x14002b7e8
   140026ac7:	mov    r14,QWORD PTR [rsp+0x240]
   140026acf:	mov    rcx,r14
   140026ad2:	mov    rdx,rax
   140026ad5:	call   QWORD PTR [rip+0x4acd]        # 0x14002b5a8
   140026adb:	lea    rcx,[rsp+0x180]
   140026ae3:	call   QWORD PTR [rip+0x4daf]        # 0x14002b898
   140026ae9:	lea    rdx,[rip+0x7e08]        # 0x14002e8f8
   140026af0:	mov    rcx,r14
   140026af3:	call   QWORD PTR [rip+0x4ab7]        # 0x14002b5b0
   140026af9:	lea    rcx,[rsp+0x68]
   140026afe:	call   QWORD PTR [rip+0x4d94]        # 0x14002b898
   140026b04:	lea    rcx,[rsp+0xa0]
   140026b0c:	call   QWORD PTR [rip+0x46b6]        # 0x14002b1c8
   140026b12:	lea    rcx,[rsp+0x60]
   140026b17:	call   QWORD PTR [rip+0x46ab]        # 0x14002b1c8
   140026b1d:	mov    r15,QWORD PTR [rsp+0x248]
   140026b25:	jmp    0x140026466
   140026b2a:	lea    rcx,[rsp+0xb0]
   140026b32:	call   QWORD PTR [rip+0x4d60]        # 0x14002b898
   140026b38:	mov    rbx,QWORD PTR [rsp+0x38]
   140026b3d:	or     r14,0xffffffffffffffff
   140026b41:	mov    eax,DWORD PTR [rbx]
   140026b43:	test   eax,eax
   140026b45:	je     0x140026b62
   140026b47:	cmp    eax,r14d
   140026b4a:	je     0x140026b9b
   140026b4c:	mov    eax,r14d
   140026b4f:	lock xadd DWORD PTR [rbx],eax
   140026b53:	add    eax,r14d
   140026b56:	setne  al
   140026b59:	test   al,al
   140026b5b:	jne    0x140026b9b
   140026b5d:	mov    rbx,QWORD PTR [rsp+0x38]
   140026b62:	movsxd rax,DWORD PTR [rbx+0xc]
   140026b66:	lea    rdi,[rbx+rax*8+0x10]
   140026b6b:	movsxd rax,DWORD PTR [rbx+0x8]
   140026b6f:	lea    rsi,[rbx+rax*8+0x10]
   140026b74:	cmp    rsi,rdi
   140026b77:	je     0x140026b92
   140026b79:	nop    DWORD PTR [rax+0x0]
   140026b80:	sub    rdi,0x8
   140026b84:	mov    rcx,rdi
   140026b87:	call   QWORD PTR [rip+0x4d0b]        # 0x14002b898
   140026b8d:	cmp    rdi,rsi
   140026b90:	jne    0x140026b80
   140026b92:	mov    rcx,rbx
   140026b95:	call   QWORD PTR [rip+0x4cd5]        # 0x14002b870
   140026b9b:	mov    rbx,QWORD PTR [rsp+0x48]
   140026ba0:	mov    eax,DWORD PTR [rbx]
   140026ba2:	test   eax,eax
   140026ba4:	je     0x140026bc1
   140026ba6:	cmp    eax,0xffffffff
   140026ba9:	je     0x140026bfb
   140026bab:	mov    eax,r14d
   140026bae:	lock xadd DWORD PTR [rbx],eax
   140026bb2:	add    eax,0xffffffff
   140026bb5:	setne  al
   140026bb8:	test   al,al
   140026bba:	jne    0x140026bfb
   140026bbc:	mov    rbx,QWORD PTR [rsp+0x48]
   140026bc1:	movsxd rax,DWORD PTR [rbx+0xc]
   140026bc5:	lea    rdi,[rbx+rax*8+0x10]
   140026bca:	movsxd rax,DWORD PTR [rbx+0x8]
   140026bce:	lea    rsi,[rbx+rax*8+0x10]
   140026bd3:	cmp    rsi,rdi
   140026bd6:	je     0x140026bf2
   140026bd8:	nop    DWORD PTR [rax+rax*1+0x0]
   140026be0:	sub    rdi,0x8
   140026be4:	mov    rcx,rdi
   140026be7:	call   QWORD PTR [rip+0x4cab]        # 0x14002b898
   140026bed:	cmp    rdi,rsi
   140026bf0:	jne    0x140026be0
   140026bf2:	mov    rcx,rbx
   140026bf5:	call   QWORD PTR [rip+0x4c75]        # 0x14002b870
   140026bfb:	lea    rcx,[rsp+0xc0]
   140026c03:	call   QWORD PTR [rip+0x4c8f]        # 0x14002b898
   140026c09:	mov    rbx,QWORD PTR [rsp+0x50]
   140026c0e:	mov    eax,DWORD PTR [rbx]
   140026c10:	test   eax,eax
   140026c12:	je     0x140026c2e
   140026c14:	cmp    eax,0xffffffff
   140026c17:	je     0x140026c6b
   140026c19:	lock xadd DWORD PTR [rbx],r14d
   140026c1e:	add    r14d,0xffffffff
   140026c22:	setne  al
   140026c25:	test   al,al
   140026c27:	jne    0x140026c6b
   140026c29:	mov    rbx,QWORD PTR [rsp+0x50]
   140026c2e:	movsxd rax,DWORD PTR [rbx+0xc]
   140026c32:	lea    rdi,[rbx+rax*8+0x10]
   140026c37:	movsxd rax,DWORD PTR [rbx+0x8]
   140026c3b:	lea    rsi,[rbx+rax*8+0x10]
   140026c40:	cmp    rsi,rdi
   140026c43:	je     0x140026c62
   140026c45:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140026c50:	sub    rdi,0x8
   140026c54:	mov    rcx,rdi
   140026c57:	call   QWORD PTR [rip+0x4c3b]        # 0x14002b898
   140026c5d:	cmp    rdi,rsi
   140026c60:	jne    0x140026c50
   140026c62:	mov    rcx,rbx
   140026c65:	call   QWORD PTR [rip+0x4c05]        # 0x14002b870
   140026c6b:	lea    rcx,[rsp+0xf0]
   140026c73:	call   QWORD PTR [rip+0x4c1f]        # 0x14002b898
   140026c79:	add    rsp,0x1f8
   140026c80:	pop    r15
   140026c82:	pop    r14
   140026c84:	pop    r13
   140026c86:	pop    r12
   140026c88:	pop    rdi
   140026c89:	pop    rsi
   140026c8a:	pop    rbp
   140026c8b:	pop    rbx
   140026c8c:	ret    
   140026c8d:	int3   
   140026c8e:	int3   
   140026c8f:	int3   
   140026c90:	mov    QWORD PTR [rsp+0x18],rbp
   140026c95:	push   rsi
   140026c96:	push   rdi
   140026c97:	push   r12
   140026c99:	sub    rsp,0x20
   140026c9d:	cmp    BYTE PTR [rdx+0x74],0x0
   140026ca1:	mov    ebp,r9d
   140026ca4:	mov    r12,r8
   140026ca7:	mov    rdi,rdx
   140026caa:	mov    rsi,rcx
   140026cad:	je     0x140026dee
   140026cb3:	mov    edx,r9d
   140026cb6:	mov    QWORD PTR [rsp+0x40],rbx
   140026cbb:	call   0x1400224b0
   140026cc0:	lea    rdx,[rip+0x7d59]        # 0x14002ea20
   140026cc7:	mov    rcx,rsi
   140026cca:	call   QWORD PTR [rip+0x48e0]        # 0x14002b5b0
   140026cd0:	mov    rdx,QWORD PTR [rip+0xe6e9]        # 0x1400353c0
   140026cd7:	mov    rcx,rax
   140026cda:	call   QWORD PTR [rip+0x48d0]        # 0x14002b5b0
   140026ce0:	lea    rdx,[rip+0x6985]        # 0x14002d66c
   140026ce7:	mov    rcx,rax
   140026cea:	call   QWORD PTR [rip+0x48c0]        # 0x14002b5b0
   140026cf0:	lea    rcx,[rsp+0x48]
   140026cf5:	mov    rdx,rdi
   140026cf8:	call   QWORD PTR [rip+0x4ba2]        # 0x14002b8a0
   140026cfe:	mov    r11,QWORD PTR [rsp+0x48]
   140026d03:	lea    rcx,[rsp+0x48]
   140026d08:	cmp    DWORD PTR [r11+0x4],0x0
   140026d0d:	setne  bl
   140026d10:	call   QWORD PTR [rip+0x4b82]        # 0x14002b898
   140026d16:	test   bl,bl
   140026d18:	mov    rbx,QWORD PTR [rsp+0x40]
   140026d1d:	je     0x140026d66
   140026d1f:	lea    rcx,[rsp+0x48]
   140026d24:	mov    rdx,rdi
   140026d27:	call   QWORD PTR [rip+0x4b73]        # 0x14002b8a0
   140026d2d:	lea    rdx,[rip+0x73f4]        # 0x14002e128
   140026d34:	mov    rcx,rsi
   140026d37:	call   QWORD PTR [rip+0x4873]        # 0x14002b5b0
   140026d3d:	lea    rdx,[rsp+0x48]
   140026d42:	mov    rcx,rax
   140026d45:	call   QWORD PTR [rip+0x485d]        # 0x14002b5a8
   140026d4b:	lea    rdx,[rip+0x691a]        # 0x14002d66c
   140026d52:	mov    rcx,rax
   140026d55:	call   QWORD PTR [rip+0x4855]        # 0x14002b5b0
   140026d5b:	lea    rcx,[rsp+0x48]
   140026d60:	call   QWORD PTR [rip+0x4b32]        # 0x14002b898
   140026d66:	mov    eax,DWORD PTR [rdi+0x70]
   140026d69:	cmp    eax,0x3
   140026d6c:	je     0x140026d73
   140026d6e:	cmp    eax,0x2
   140026d71:	jne    0x140026d83
   140026d73:	lea    rdx,[rip+0x7c76]        # 0x14002e9f0
   140026d7a:	mov    rcx,rsi
   140026d7d:	call   QWORD PTR [rip+0x482d]        # 0x14002b5b0
   140026d83:	lea    rdx,[rip+0x68ca]        # 0x14002d654
   140026d8a:	mov    rcx,rsi
   140026d8d:	call   QWORD PTR [rip+0x481d]        # 0x14002b5b0
   140026d93:	inc    ebp
   140026d95:	mov    rdx,rdi
   140026d98:	mov    r8d,ebp
   140026d9b:	mov    rcx,rsi
   140026d9e:	call   0x140023490
   140026da3:	mov    r9d,ebp
   140026da6:	mov    r8,r12
   140026da9:	mov    rdx,rdi
   140026dac:	mov    rcx,rsi
   140026daf:	call   0x140022b80
   140026db4:	mov    r9d,ebp
   140026db7:	mov    r8,r12
   140026dba:	mov    rdx,rdi
   140026dbd:	mov    rcx,rsi
   140026dc0:	call   0x140025d50
   140026dc5:	lea    edx,[rbp-0x1]
   140026dc8:	mov    rcx,rsi
   140026dcb:	call   0x1400224b0
   140026dd0:	lea    rdx,[rip+0x7c39]        # 0x14002ea10
   140026dd7:	mov    rcx,rsi
   140026dda:	mov    rbp,QWORD PTR [rsp+0x50]
   140026ddf:	add    rsp,0x20
   140026de3:	pop    r12
   140026de5:	pop    rdi
   140026de6:	pop    rsi
   140026de7:	rex.W jmp QWORD PTR [rip+0x47c2]        # 0x14002b5b0
   140026dee:	mov    rbp,QWORD PTR [rsp+0x50]
   140026df3:	add    rsp,0x20
   140026df7:	pop    r12
   140026df9:	pop    rdi
   140026dfa:	pop    rsi
   140026dfb:	jmp    0x140025d50
   140026e00:	mov    QWORD PTR [rsp+0x8],rbx
   140026e05:	push   rdi
   140026e06:	sub    rsp,0x20
   140026e0a:	lea    rbx,[rcx+0xf8]
   140026e11:	mov    edi,edx
   140026e13:	mov    rax,QWORD PTR [rbx]
   140026e16:	cmp    DWORD PTR [rax+0x4],0x0
   140026e1a:	je     0x140026e3d
   140026e1c:	mov    rcx,rbx
   140026e1f:	call   0x140025c70
   140026e24:	cmp    DWORD PTR [rax],edi
   140026e26:	jne    0x140026e3d
   140026e28:	mov    rcx,rbx
   140026e2b:	call   0x140025c10
   140026e30:	mov    al,0x1
   140026e32:	mov    rbx,QWORD PTR [rsp+0x30]
   140026e37:	add    rsp,0x20
   140026e3b:	pop    rdi
   140026e3c:	ret    
   140026e3d:	xor    al,al
   140026e3f:	mov    rbx,QWORD PTR [rsp+0x30]
   140026e44:	add    rsp,0x20
   140026e48:	pop    rdi
   140026e49:	ret    
   140026e4a:	int3   
   140026e4b:	int3   
   140026e4c:	int3   
   140026e4d:	int3   
   140026e4e:	int3   
   140026e4f:	int3   
   140026e50:	mov    QWORD PTR [rsp+0x18],rbx
   140026e55:	mov    QWORD PTR [rsp+0x20],rsi
   140026e5a:	push   rdi
   140026e5b:	sub    rsp,0x30
   140026e5f:	mov    rdi,rdx
   140026e62:	lea    rdx,[rcx+0xe0]
   140026e69:	mov    rbx,rcx
   140026e6c:	mov    rcx,rdi
   140026e6f:	mov    rsi,r8
   140026e72:	call   QWORD PTR [rip+0x4420]        # 0x14002b298
   140026e78:	test   al,al
   140026e7a:	je     0x140026f26
   140026e80:	mov    rdx,QWORD PTR [rbx+0xf8]
   140026e87:	mov    eax,DWORD PTR [rdx+0x4]
   140026e8a:	lea    r8d,[rax-0x1]
   140026e8e:	movsxd rcx,r8d
   140026e91:	test   r8d,r8d
   140026e94:	js     0x140026eb0
   140026e96:	mov    rdi,QWORD PTR [rdx+0x10]
   140026e9a:	nop    WORD PTR [rax+rax*1+0x0]
   140026ea0:	lea    rax,[rdi+rcx*4]
   140026ea4:	cmp    DWORD PTR [rax+rdx*1],0x2
   140026ea8:	je     0x140026ef5
   140026eaa:	sub    rcx,0x1
   140026eae:	jns    0x140026ea0
   140026eb0:	movsxd rcx,r8d
   140026eb3:	test   r8d,r8d
   140026eb6:	js     0x140026ed0
   140026eb8:	mov    rdi,QWORD PTR [rdx+0x10]
   140026ebc:	nop    DWORD PTR [rax+0x0]
   140026ec0:	lea    rax,[rdi+rcx*4]
   140026ec4:	cmp    DWORD PTR [rax+rdx*1],0x10
   140026ec8:	je     0x140026ef5
   140026eca:	sub    rcx,0x1
   140026ece:	jns    0x140026ec0
   140026ed0:	mov    rcx,QWORD PTR [rbx+0x38]
   140026ed4:	lea    r8,[rbx+0xd0]
   140026edb:	mov    rdx,rsi
   140026ede:	call   0x1400084a0
   140026ee3:	mov    al,0x1
   140026ee5:	mov    rbx,QWORD PTR [rsp+0x50]
   140026eea:	mov    rsi,QWORD PTR [rsp+0x58]
   140026eef:	add    rsp,0x30
   140026ef3:	pop    rdi
   140026ef4:	ret    
   140026ef5:	lea    rcx,[rbx+0xc8]
   140026efc:	mov    rdx,rsi
   140026eff:	call   0x140005ee0
   140026f04:	lea    rdx,[rbx+0xd0]
   140026f0b:	mov    rcx,rax
   140026f0e:	call   QWORD PTR [rip+0x499c]        # 0x14002b8b0
   140026f14:	mov    al,0x1
   140026f16:	mov    rbx,QWORD PTR [rsp+0x50]
   140026f1b:	mov    rsi,QWORD PTR [rsp+0x58]
   140026f20:	add    rsp,0x30
   140026f24:	pop    rdi
   140026f25:	ret    
   140026f26:	lea    rdx,[rbx+0xe8]
   140026f2d:	mov    rcx,rdi
   140026f30:	call   QWORD PTR [rip+0x4362]        # 0x14002b298
   140026f36:	test   al,al
   140026f38:	jne    0x140026f52
   140026f3a:	lea    rdx,[rbx+0xf0]
   140026f41:	mov    rcx,rdi
   140026f44:	call   QWORD PTR [rip+0x434e]        # 0x14002b298
   140026f4a:	test   al,al
   140026f4c:	je     0x1400275ba
   140026f52:	or     rcx,0xffffffffffffffff
   140026f56:	lea    rdx,[rip+0x793f]        # 0x14002e89c
   140026f5d:	xor    eax,eax
   140026f5f:	mov    QWORD PTR [rsp+0x28],rdx
   140026f64:	mov    rdi,rdx
   140026f67:	lea    rdx,[rsp+0x20]
   140026f6c:	repnz scas al,BYTE PTR es:[rdi]
   140026f6e:	not    rcx
   140026f71:	dec    rcx
   140026f74:	mov    DWORD PTR [rsp+0x20],ecx
   140026f78:	mov    rcx,rsi
   140026f7b:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   140026f80:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140026f86:	call   QWORD PTR [rip+0x4294]        # 0x14002b220
   140026f8c:	test   al,al
   140026f8e:	je     0x140026fd4
   140026f90:	mov    rax,QWORD PTR [rbx+0xf8]
   140026f97:	cmp    DWORD PTR [rax+0x4],0x0
   140026f9b:	je     0x1400276a4
   140026fa1:	lea    rcx,[rbx+0xf8]
   140026fa8:	call   0x140025c70
   140026fad:	cmp    DWORD PTR [rax],0x0
   140026fb0:	jne    0x1400276a4
   140026fb6:	lea    rcx,[rbx+0xf8]
   140026fbd:	call   0x140025c10
   140026fc2:	mov    al,0x1
   140026fc4:	mov    rbx,QWORD PTR [rsp+0x50]
   140026fc9:	mov    rsi,QWORD PTR [rsp+0x58]
   140026fce:	add    rsp,0x30
   140026fd2:	pop    rdi
   140026fd3:	ret    
   140026fd4:	or     rcx,0xffffffffffffffff
   140026fd8:	lea    rdx,[rip+0x65c1]        # 0x14002d5a0
   140026fdf:	xor    eax,eax
   140026fe1:	mov    QWORD PTR [rsp+0x28],rdx
   140026fe6:	mov    rdi,rdx
   140026fe9:	lea    rdx,[rsp+0x20]
   140026fee:	repnz scas al,BYTE PTR es:[rdi]
   140026ff0:	not    rcx
   140026ff3:	dec    rcx
   140026ff6:	mov    DWORD PTR [rsp+0x20],ecx
   140026ffa:	mov    rcx,rsi
   140026ffd:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   140027002:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140027008:	call   QWORD PTR [rip+0x4212]        # 0x14002b220
   14002700e:	test   al,al
   140027010:	je     0x1400270c2
   140027016:	mov    rdx,QWORD PTR [rbx+0xf8]
   14002701d:	mov    eax,DWORD PTR [rdx+0x4]
   140027020:	sub    eax,0x1
   140027023:	movsxd rcx,eax
   140027026:	js     0x140027040
   140027028:	mov    rdi,QWORD PTR [rdx+0x10]
   14002702c:	nop    DWORD PTR [rax+0x0]
   140027030:	lea    rax,[rdi+rcx*4]
   140027034:	cmp    DWORD PTR [rax+rdx*1],0x11
   140027038:	je     0x140027062
   14002703a:	sub    rcx,0x1
   14002703e:	jns    0x140027030
   140027040:	lea    rdx,[rbx+0xd0]
   140027047:	lea    rcx,[rbx+0x68]
   14002704b:	call   0x140001e20
   140027050:	mov    al,0x1
   140027052:	mov    rbx,QWORD PTR [rsp+0x50]
   140027057:	mov    rsi,QWORD PTR [rsp+0x58]
   14002705c:	add    rsp,0x30
   140027060:	pop    rdi
   140027061:	ret    
   140027062:	cmp    BYTE PTR [rbx+0x9a],0x0
   140027069:	je     0x140027099
   14002706b:	mov    rdx,QWORD PTR [rbx+0x70]
   14002706f:	mov    eax,DWORD PTR [rdx+0x8]
   140027072:	cmp    DWORD PTR [rdx+0xc],eax
   140027075:	jne    0x140027099
   140027077:	lea    rcx,[rsp+0x40]
   14002707c:	call   QWORD PTR [rip+0x480e]        # 0x14002b890
   140027082:	lea    rcx,[rbx+0x70]
   140027086:	mov    rdx,rax
   140027089:	call   0x140001e20
   14002708e:	lea    rcx,[rsp+0x40]
   140027093:	call   QWORD PTR [rip+0x47ff]        # 0x14002b898
   140027099:	lea    rdx,[rbx+0xd0]
   1400270a0:	lea    rcx,[rbx+0x70]
   1400270a4:	call   0x140001e20
   1400270a9:	mov    BYTE PTR [rbx+0x9b],0x1
   1400270b0:	mov    al,0x1
   1400270b2:	mov    rbx,QWORD PTR [rsp+0x50]
   1400270b7:	mov    rsi,QWORD PTR [rsp+0x58]
   1400270bc:	add    rsp,0x30
   1400270c0:	pop    rdi
   1400270c1:	ret    
   1400270c2:	or     rcx,0xffffffffffffffff
   1400270c6:	lea    rdx,[rip+0x64db]        # 0x14002d5a8
   1400270cd:	xor    eax,eax
   1400270cf:	mov    QWORD PTR [rsp+0x28],rdx
   1400270d4:	mov    rdi,rdx
   1400270d7:	lea    rdx,[rsp+0x20]
   1400270dc:	repnz scas al,BYTE PTR es:[rdi]
   1400270de:	not    rcx
   1400270e1:	dec    rcx
   1400270e4:	mov    DWORD PTR [rsp+0x20],ecx
   1400270e8:	mov    rcx,rsi
   1400270eb:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   1400270f0:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   1400270f6:	call   QWORD PTR [rip+0x4124]        # 0x14002b220
   1400270fc:	test   al,al
   1400270fe:	je     0x14002715b
   140027100:	mov    edx,0xf
   140027105:	mov    rcx,rbx
   140027108:	call   0x140026e00
   14002710d:	test   al,al
   14002710f:	je     0x1400276a4
   140027115:	mov    eax,0x2762
   14002711a:	lea    rcx,[rbx+0xd0]
   140027121:	mov    r8d,0x9c
   140027127:	movzx  edx,ax
   14002712a:	mov    r9d,0x1
   140027130:	call   QWORD PTR [rip+0x442a]        # 0x14002b560
   140027136:	lea    rcx,[rbx+0xa0]
   14002713d:	lea    rdx,[rbx+0xd0]
   140027144:	call   0x140001e20
   140027149:	mov    al,0x1
   14002714b:	mov    rbx,QWORD PTR [rsp+0x50]
   140027150:	mov    rsi,QWORD PTR [rsp+0x58]
   140027155:	add    rsp,0x30
   140027159:	pop    rdi
   14002715a:	ret    
   14002715b:	or     rcx,0xffffffffffffffff
   14002715f:	lea    rdx,[rip+0x768a]        # 0x14002e7f0
   140027166:	xor    eax,eax
   140027168:	mov    QWORD PTR [rsp+0x28],rdx
   14002716d:	mov    rdi,rdx
   140027170:	lea    rdx,[rsp+0x20]
   140027175:	repnz scas al,BYTE PTR es:[rdi]
   140027177:	not    rcx
   14002717a:	dec    rcx
   14002717d:	mov    DWORD PTR [rsp+0x20],ecx
   140027181:	mov    rcx,rsi
   140027184:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   140027189:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14002718f:	call   QWORD PTR [rip+0x408b]        # 0x14002b220
   140027195:	test   al,al
   140027197:	je     0x1400272c1
   14002719d:	mov    edx,0x3
   1400271a2:	mov    rcx,rbx
   1400271a5:	call   0x140026e00
   1400271aa:	test   al,al
   1400271ac:	je     0x1400272b7
   1400271b2:	mov    rax,QWORD PTR [rbx+0xb8]
   1400271b9:	cmp    DWORD PTR [rax+0x4],0x0
   1400271bd:	jne    0x1400271c8
   1400271bf:	lea    rdx,[rbx+0xa8]
   1400271c6:	jmp    0x1400271cf
   1400271c8:	lea    rdx,[rbx+0xb8]
   1400271cf:	mov    edi,DWORD PTR [rbx+0xb0]
   1400271d5:	lea    rcx,[rsp+0x20]
   1400271da:	mov    QWORD PTR [rsp+0x48],rbp
   1400271df:	call   QWORD PTR [rip+0x46bb]        # 0x14002b8a0
   1400271e5:	lea    rcx,[rbx+0xc0]
   1400271ec:	mov    DWORD PTR [rsp+0x28],edi
   1400271f0:	mov    rax,QWORD PTR [rcx]
   1400271f3:	mov    edx,DWORD PTR [rax]
   1400271f5:	cmp    edx,0x1
   1400271f8:	je     0x140027246
   1400271fa:	test   edx,edx
   1400271fc:	je     0x140027246
   1400271fe:	mov    edx,0x7fffffff
   140027203:	mov    r8d,0x1
   140027209:	call   0x1400058b0
   14002720e:	mov    ecx,0x10
   140027213:	mov    rbp,rax
   140027216:	call   0x14002952a
   14002721b:	mov    rdi,rax
   14002721e:	test   rax,rax
   140027221:	je     0x14002723e
   140027223:	lea    rdx,[rsp+0x20]
   140027228:	mov    rcx,rax
   14002722b:	call   QWORD PTR [rip+0x466f]        # 0x14002b8a0
   140027231:	mov    edx,DWORD PTR [rsp+0x28]
   140027235:	mov    DWORD PTR [rdi+0x8],edx
   140027238:	mov    QWORD PTR [rbp+0x0],rdi
   14002723c:	jmp    0x14002727e
   14002723e:	xor    edi,edi
   140027240:	mov    QWORD PTR [rbp+0x0],rdi
   140027244:	jmp    0x14002727e
   140027246:	call   QWORD PTR [rip+0x45f4]        # 0x14002b840
   14002724c:	mov    ecx,0x10
   140027251:	mov    rbp,rax
   140027254:	call   0x14002952a
   140027259:	mov    rdi,rax
   14002725c:	test   rax,rax
   14002725f:	je     0x140027278
   140027261:	lea    rdx,[rsp+0x20]
   140027266:	mov    rcx,rax
   140027269:	call   QWORD PTR [rip+0x4631]        # 0x14002b8a0
   14002726f:	mov    edx,DWORD PTR [rsp+0x28]
   140027273:	mov    DWORD PTR [rdi+0x8],edx
   140027276:	jmp    0x14002727a
   140027278:	xor    edi,edi
   14002727a:	mov    QWORD PTR [rbp+0x0],rdi
   14002727e:	lea    rcx,[rsp+0x20]
   140027283:	call   QWORD PTR [rip+0x460f]        # 0x14002b898
   140027289:	lea    rcx,[rbx+0xb8]
   140027290:	call   QWORD PTR [rip+0x412a]        # 0x14002b3c0
   140027296:	mov    rbp,QWORD PTR [rsp+0x48]
   14002729b:	mov    DWORD PTR [rbx+0xb0],0xffffffff
   1400272a5:	mov    al,0x1
   1400272a7:	mov    rbx,QWORD PTR [rsp+0x50]
   1400272ac:	mov    rsi,QWORD PTR [rsp+0x58]
   1400272b1:	add    rsp,0x30
   1400272b5:	pop    rdi
   1400272b6:	ret    
   1400272b7:	mov    edx,0x4
   1400272bc:	jmp    0x14002769c
   1400272c1:	or     rcx,0xffffffffffffffff
   1400272c5:	lea    rdx,[rip+0x6bd4]        # 0x14002dea0
   1400272cc:	xor    eax,eax
   1400272ce:	mov    QWORD PTR [rsp+0x28],rdx
   1400272d3:	mov    rdi,rdx
   1400272d6:	lea    rdx,[rsp+0x20]
   1400272db:	repnz scas al,BYTE PTR es:[rdi]
   1400272dd:	not    rcx
   1400272e0:	dec    rcx
   1400272e3:	mov    DWORD PTR [rsp+0x20],ecx
   1400272e7:	mov    rcx,rsi
   1400272ea:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   1400272ef:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   1400272f5:	call   QWORD PTR [rip+0x3f25]        # 0x14002b220
   1400272fb:	test   al,al
   1400272fd:	je     0x140027418
   140027303:	mov    edx,0x7
   140027308:	mov    rcx,rbx
   14002730b:	call   0x140026e00
   140027310:	test   al,al
   140027312:	je     0x140027372
   140027314:	lea    rcx,[rbx+0xd0]
   14002731b:	lea    rdx,[rsp+0x20]
   140027320:	call   QWORD PTR [rip+0x4202]        # 0x14002b528
   140027326:	lea    rdx,[rsp+0x40]
   14002732b:	mov    r8d,0xa
   140027331:	mov    rcx,rax
   140027334:	call   QWORD PTR [rip+0x4376]        # 0x14002b6b0
   14002733a:	lea    rcx,[rsp+0x20]
   14002733f:	mov    DWORD PTR [rbx+0xb0],eax
   140027345:	call   QWORD PTR [rip+0x454d]        # 0x14002b898
   14002734b:	cmp    BYTE PTR [rsp+0x40],0x0
   140027350:	jne    0x1400276a4
   140027356:	mov    DWORD PTR [rbx+0xb0],0xffffffff
   140027360:	mov    al,0x1
   140027362:	mov    rbx,QWORD PTR [rsp+0x50]
   140027367:	mov    rsi,QWORD PTR [rsp+0x58]
   14002736c:	add    rsp,0x30
   140027370:	pop    rdi
   140027371:	ret    
   140027372:	mov    edx,0x6
   140027377:	mov    rcx,rbx
   14002737a:	call   0x140026e00
   14002737f:	test   al,al
   140027381:	je     0x1400273a9
   140027383:	lea    rdx,[rbx+0xd0]
   14002738a:	lea    rcx,[rbx+0xb8]
   140027391:	call   QWORD PTR [rip+0x4519]        # 0x14002b8b0
   140027397:	mov    al,0x1
   140027399:	mov    rbx,QWORD PTR [rsp+0x50]
   14002739e:	mov    rsi,QWORD PTR [rsp+0x58]
   1400273a3:	add    rsp,0x30
   1400273a7:	pop    rdi
   1400273a8:	ret    
   1400273a9:	mov    edx,0x9
   1400273ae:	mov    rcx,rbx
   1400273b1:	call   0x140026e00
   1400273b6:	test   al,al
   1400273b8:	je     0x1400273dd
   1400273ba:	lea    rdx,[rbx+0xd0]
   1400273c1:	lea    rcx,[rbx+0x78]
   1400273c5:	call   QWORD PTR [rip+0x44e5]        # 0x14002b8b0
   1400273cb:	mov    al,0x1
   1400273cd:	mov    rbx,QWORD PTR [rsp+0x50]
   1400273d2:	mov    rsi,QWORD PTR [rsp+0x58]
   1400273d7:	add    rsp,0x30
   1400273db:	pop    rdi
   1400273dc:	ret    
   1400273dd:	mov    edx,0xa
   1400273e2:	mov    rcx,rbx
   1400273e5:	call   0x140026e00
   1400273ea:	test   al,al
   1400273ec:	je     0x1400276a4
   1400273f2:	lea    rdx,[rbx+0xd0]
   1400273f9:	lea    rcx,[rbx+0x80]
   140027400:	call   QWORD PTR [rip+0x44aa]        # 0x14002b8b0
   140027406:	mov    al,0x1
   140027408:	mov    rbx,QWORD PTR [rsp+0x50]
   14002740d:	mov    rsi,QWORD PTR [rsp+0x58]
   140027412:	add    rsp,0x30
   140027416:	pop    rdi
   140027417:	ret    
   140027418:	or     rcx,0xffffffffffffffff
   14002741c:	lea    rdx,[rip+0x7389]        # 0x14002e7ac
   140027423:	xor    eax,eax
   140027425:	mov    QWORD PTR [rsp+0x28],rdx
   14002742a:	mov    rdi,rdx
   14002742d:	lea    rdx,[rsp+0x20]
   140027432:	repnz scas al,BYTE PTR es:[rdi]
   140027434:	not    rcx
   140027437:	dec    rcx
   14002743a:	mov    DWORD PTR [rsp+0x20],ecx
   14002743e:	mov    rcx,rsi
   140027441:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   140027446:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14002744c:	call   QWORD PTR [rip+0x3dce]        # 0x14002b220
   140027452:	test   al,al
   140027454:	je     0x1400274c8
   140027456:	mov    edx,0xc
   14002745b:	mov    rcx,rbx
   14002745e:	call   0x140026e00
   140027463:	test   al,al
   140027465:	je     0x14002748d
   140027467:	lea    rdx,[rbx+0xd0]
   14002746e:	lea    rcx,[rbx+0x88]
   140027475:	call   QWORD PTR [rip+0x4435]        # 0x14002b8b0
   14002747b:	mov    al,0x1
   14002747d:	mov    rbx,QWORD PTR [rsp+0x50]
   140027482:	mov    rsi,QWORD PTR [rsp+0x58]
   140027487:	add    rsp,0x30
   14002748b:	pop    rdi
   14002748c:	ret    
   14002748d:	mov    edx,0xd
   140027492:	mov    rcx,rbx
   140027495:	call   0x140026e00
   14002749a:	test   al,al
   14002749c:	je     0x1400276a4
   1400274a2:	lea    rdx,[rbx+0xd0]
   1400274a9:	lea    rcx,[rbx+0x90]
   1400274b0:	call   QWORD PTR [rip+0x43fa]        # 0x14002b8b0
   1400274b6:	mov    al,0x1
   1400274b8:	mov    rbx,QWORD PTR [rsp+0x50]
   1400274bd:	mov    rsi,QWORD PTR [rsp+0x58]
   1400274c2:	add    rsp,0x30
   1400274c6:	pop    rdi
   1400274c7:	ret    
   1400274c8:	or     rcx,0xffffffffffffffff
   1400274cc:	lea    rdx,[rip+0x72b1]        # 0x14002e784
   1400274d3:	xor    eax,eax
   1400274d5:	mov    QWORD PTR [rsp+0x28],rdx
   1400274da:	mov    rdi,rdx
   1400274dd:	lea    rdx,[rsp+0x20]
   1400274e2:	repnz scas al,BYTE PTR es:[rdi]
   1400274e4:	not    rcx
   1400274e7:	dec    rcx
   1400274ea:	mov    DWORD PTR [rsp+0x20],ecx
   1400274ee:	mov    rcx,rsi
   1400274f1:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   1400274f6:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   1400274fc:	call   QWORD PTR [rip+0x3d1e]        # 0x14002b220
   140027502:	test   al,al
   140027504:	je     0x14002751d
   140027506:	lea    rcx,[rbx+0xd8]
   14002750d:	call   QWORD PTR [rip+0x3ead]        # 0x14002b3c0
   140027513:	mov    edx,0xb
   140027518:	jmp    0x14002769c
   14002751d:	or     rcx,0xffffffffffffffff
   140027521:	lea    rdx,[rip+0x7300]        # 0x14002e828
   140027528:	xor    eax,eax
   14002752a:	mov    QWORD PTR [rsp+0x28],rdx
   14002752f:	mov    rdi,rdx
   140027532:	lea    rdx,[rsp+0x20]
   140027537:	repnz scas al,BYTE PTR es:[rdi]
   140027539:	not    rcx
   14002753c:	dec    rcx
   14002753f:	mov    DWORD PTR [rsp+0x20],ecx
   140027543:	mov    rcx,rsi
   140027546:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14002754b:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140027551:	call   QWORD PTR [rip+0x3cc9]        # 0x14002b220
   140027557:	test   al,al
   140027559:	je     0x1400275cc
   14002755b:	mov    edx,0x2
   140027560:	mov    rcx,rbx
   140027563:	call   0x140026e00
   140027568:	cmp    BYTE PTR [rbx+0x9b],0x0
   14002756f:	jne    0x140027593
   140027571:	lea    rcx,[rsp+0x40]
   140027576:	call   QWORD PTR [rip+0x4314]        # 0x14002b890
   14002757c:	lea    rcx,[rbx+0x70]
   140027580:	mov    rdx,rax
   140027583:	call   0x140001e20
   140027588:	lea    rcx,[rsp+0x40]
   14002758d:	call   QWORD PTR [rip+0x4305]        # 0x14002b898
   140027593:	mov    edx,0x10
   140027598:	mov    rcx,rbx
   14002759b:	call   0x140022f90
   1400275a0:	test   al,al
   1400275a2:	jne    0x1400276a4
   1400275a8:	xor    edx,edx
   1400275aa:	mov    rcx,rbx
   1400275ad:	call   0x1400255e0
   1400275b2:	test   al,al
   1400275b4:	jne    0x1400276a4
   1400275ba:	xor    al,al
   1400275bc:	mov    rbx,QWORD PTR [rsp+0x50]
   1400275c1:	mov    rsi,QWORD PTR [rsp+0x58]
   1400275c6:	add    rsp,0x30
   1400275ca:	pop    rdi
   1400275cb:	ret    
   1400275cc:	or     rcx,0xffffffffffffffff
   1400275d0:	lea    rdx,[rip+0x7229]        # 0x14002e800
   1400275d7:	xor    eax,eax
   1400275d9:	mov    QWORD PTR [rsp+0x28],rdx
   1400275de:	mov    rdi,rdx
   1400275e1:	lea    rdx,[rsp+0x20]
   1400275e6:	repnz scas al,BYTE PTR es:[rdi]
   1400275e8:	not    rcx
   1400275eb:	dec    rcx
   1400275ee:	mov    DWORD PTR [rsp+0x20],ecx
   1400275f2:	mov    rcx,rsi
   1400275f5:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   1400275fa:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140027600:	call   QWORD PTR [rip+0x3c1a]        # 0x14002b220
   140027606:	test   al,al
   140027608:	je     0x140027614
   14002760a:	mov    edx,0x11
   14002760f:	jmp    0x14002769c
   140027614:	or     rcx,0xffffffffffffffff
   140027618:	lea    rdx,[rip+0x7239]        # 0x14002e858
   14002761f:	xor    eax,eax
   140027621:	mov    QWORD PTR [rsp+0x28],rdx
   140027626:	mov    rdi,rdx
   140027629:	lea    rdx,[rsp+0x20]
   14002762e:	repnz scas al,BYTE PTR es:[rdi]
   140027630:	not    rcx
   140027633:	dec    rcx
   140027636:	mov    DWORD PTR [rsp+0x20],ecx
   14002763a:	mov    rcx,rsi
   14002763d:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   140027642:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140027648:	call   QWORD PTR [rip+0x3bd2]        # 0x14002b220
   14002764e:	test   al,al
   140027650:	je     0x1400276a4
   140027652:	mov    edx,0x10
   140027657:	mov    rcx,rbx
   14002765a:	call   0x140026e00
   14002765f:	test   al,al
   140027661:	je     0x14002766a
   140027663:	mov    dl,0x1
   140027665:	jmp    0x1400275aa
   14002766a:	mov    edx,0xe
   14002766f:	mov    rcx,rbx
   140027672:	call   0x140026e00
   140027677:	test   al,al
   140027679:	je     0x140027697
   14002767b:	lea    rcx,[rbx+0x58]
   14002767f:	call   QWORD PTR [rip+0x3d3b]        # 0x14002b3c0
   140027685:	mov    al,0x1
   140027687:	mov    rbx,QWORD PTR [rsp+0x50]
   14002768c:	mov    rsi,QWORD PTR [rsp+0x58]
   140027691:	add    rsp,0x30
   140027695:	pop    rdi
   140027696:	ret    
   140027697:	mov    edx,0x1
   14002769c:	mov    rcx,rbx
   14002769f:	call   0x140026e00
   1400276a4:	mov    rbx,QWORD PTR [rsp+0x50]
   1400276a9:	mov    rsi,QWORD PTR [rsp+0x58]
   1400276ae:	mov    al,0x1
   1400276b0:	add    rsp,0x30
   1400276b4:	pop    rdi
   1400276b5:	ret    
   1400276b6:	int3   
   1400276b7:	int3   
   1400276b8:	int3   
   1400276b9:	int3   
   1400276ba:	int3   
   1400276bb:	int3   
   1400276bc:	int3   
   1400276bd:	int3   
   1400276be:	int3   
   1400276bf:	int3   
   1400276c0:	rex push rsi
   1400276c2:	push   rdi
   1400276c3:	push   r12
   1400276c5:	push   r14
   1400276c7:	sub    rsp,0x28
   1400276cb:	mov    rax,QWORD PTR [rcx]
   1400276ce:	mov    r12,rcx
   1400276d1:	mov    rdi,rdx
   1400276d4:	mov    ecx,DWORD PTR [rax+0x10]
   1400276d7:	cmp    ecx,0x1
   1400276da:	je     0x1400276e8
   1400276dc:	test   ecx,ecx
   1400276de:	je     0x1400276e8
   1400276e0:	mov    rcx,r12
   1400276e3:	call   0x140025ce0
   1400276e8:	mov    rax,QWORD PTR [r12]
   1400276ec:	mov    rcx,rdi
   1400276ef:	mov    edx,DWORD PTR [rax+0x24]
   1400276f2:	call   QWORD PTR [rip+0x3bb0]        # 0x14002b2a8
   1400276f8:	mov    rdx,rdi
   1400276fb:	mov    rcx,r12
   1400276fe:	mov    r8d,eax
   140027701:	mov    esi,eax
   140027703:	mov    DWORD PTR [rsp+0x50],eax
   140027707:	call   0x14001c3c0
   14002770c:	mov    rcx,QWORD PTR [r12]
   140027710:	mov    r14,rax
   140027713:	mov    rax,QWORD PTR [rax]
   140027716:	cmp    rax,rcx
   140027719:	jne    0x140027884
   14002771f:	mov    edx,DWORD PTR [rcx+0x20]
   140027722:	mov    QWORD PTR [rsp+0x58],rbx
   140027727:	mov    QWORD PTR [rsp+0x60],rbp
   14002772c:	cmp    DWORD PTR [rcx+0x14],edx
   14002772f:	jl     0x140027765
   140027731:	movsx  edx,WORD PTR [rcx+0x1e]
   140027735:	inc    edx
   140027737:	call   QWORD PTR [rip+0x3ba3]        # 0x14002b2e0
   14002773d:	mov    r11,QWORD PTR [r12]
   140027741:	mov    rcx,rdi
   140027744:	mov    edx,DWORD PTR [r11+0x24]
   140027748:	call   QWORD PTR [rip+0x3b5a]        # 0x14002b2a8
   14002774e:	mov    rdx,rdi
   140027751:	mov    rcx,r12
   140027754:	mov    r8d,eax
   140027757:	mov    esi,eax
   140027759:	mov    DWORD PTR [rsp+0x50],eax
   14002775d:	call   0x14001c3c0
   140027762:	mov    r14,rax
   140027765:	mov    rcx,QWORD PTR [r12]
   140027769:	mov    rbx,QWORD PTR [rip+0x4118]        # 0x14002b888
   140027770:	mov    edx,0x8
   140027775:	call   QWORD PTR [rip+0x3b4d]        # 0x14002b2c8
   14002777b:	mov    rbp,rax
   14002777e:	test   rax,rax
   140027781:	je     0x14002780d
   140027787:	mov    rcx,QWORD PTR [r14]
   14002778a:	mov    rdx,rdi
   14002778d:	mov    DWORD PTR [rax+0x8],esi
   140027790:	mov    QWORD PTR [rax],rcx
   140027793:	lea    rcx,[rax+0x10]
   140027797:	call   QWORD PTR [rip+0x4103]        # 0x14002b8a0
   14002779d:	mov    QWORD PTR [rbp+0x18],rbx
   1400277a1:	mov    eax,DWORD PTR [rbx]
   1400277a3:	test   eax,eax
   1400277a5:	je     0x1400277b2
   1400277a7:	cmp    eax,0xffffffff
   1400277aa:	je     0x14002780f
   1400277ac:	lock add DWORD PTR [rbx],0x1
   1400277b0:	jmp    0x14002780f
   1400277b2:	mov    edx,DWORD PTR [rbx+0x4]
   1400277b5:	lea    rcx,[rbp+0x18]
   1400277b9:	mov    QWORD PTR [rsp+0x20],r13
   1400277be:	call   QWORD PTR [rip+0x4094]        # 0x14002b858
   1400277c4:	mov    r11,QWORD PTR [rbp+0x18]
   1400277c8:	movsxd rax,DWORD PTR [r11+0xc]
   1400277cc:	lea    r13,[r11+rax*8+0x10]
   1400277d1:	movsxd rax,DWORD PTR [rbx+0x8]
   1400277d5:	lea    rsi,[rbx+rax*8+0x10]
   1400277da:	movsxd rax,DWORD PTR [r11+0x8]
   1400277de:	lea    rdi,[r11+rax*8+0x10]
   1400277e3:	cmp    rdi,r13
   1400277e6:	je     0x140027806
   1400277e8:	test   rdi,rdi
   1400277eb:	je     0x1400277f9
   1400277ed:	mov    rdx,rsi
   1400277f0:	mov    rcx,rdi
   1400277f3:	call   QWORD PTR [rip+0x40a7]        # 0x14002b8a0
   1400277f9:	add    rdi,0x8
   1400277fd:	add    rsi,0x8
   140027801:	cmp    rdi,r13
   140027804:	jne    0x1400277e8
   140027806:	mov    r13,QWORD PTR [rsp+0x20]
   14002780b:	jmp    0x14002780f
   14002780d:	xor    ebp,ebp
   14002780f:	mov    QWORD PTR [r14],rbp
   140027812:	mov    rax,QWORD PTR [r12]
   140027816:	inc    DWORD PTR [rax+0x14]
   140027819:	mov    eax,DWORD PTR [rbx]
   14002781b:	test   eax,eax
   14002781d:	je     0x14002782f
   14002781f:	cmp    eax,0xffffffff
   140027822:	je     0x14002786b
   140027824:	lock add DWORD PTR [rbx],0xffffffff
   140027828:	setne  al
   14002782b:	test   al,al
   14002782d:	jne    0x14002786b
   14002782f:	movsxd rax,DWORD PTR [rbx+0xc]
   140027833:	lea    rdi,[rbx+rax*8+0x10]
   140027838:	movsxd rax,DWORD PTR [rbx+0x8]
   14002783c:	lea    rsi,[rbx+rax*8+0x10]
   140027841:	cmp    rsi,rdi
   140027844:	je     0x140027862
   140027846:	data16 nop WORD PTR [rax+rax*1+0x0]
   140027850:	sub    rdi,0x8
   140027854:	mov    rcx,rdi
   140027857:	call   QWORD PTR [rip+0x403b]        # 0x14002b898
   14002785d:	cmp    rdi,rsi
   140027860:	jne    0x140027850
   140027862:	mov    rcx,rbx
   140027865:	call   QWORD PTR [rip+0x4005]        # 0x14002b870
   14002786b:	mov    rbx,QWORD PTR [rsp+0x58]
   140027870:	lea    rax,[rbp+0x18]
   140027874:	mov    rbp,QWORD PTR [rsp+0x60]
   140027879:	add    rsp,0x28
   14002787d:	pop    r14
   14002787f:	pop    r12
   140027881:	pop    rdi
   140027882:	pop    rsi
   140027883:	ret    
   140027884:	add    rax,0x18
   140027888:	add    rsp,0x28
   14002788c:	pop    r14
   14002788e:	pop    r12
   140027890:	pop    rdi
   140027891:	pop    rsi
   140027892:	ret    
   140027893:	int3   
   140027894:	int3   
   140027895:	int3   
   140027896:	int3   
   140027897:	int3   
   140027898:	int3   
   140027899:	int3   
   14002789a:	int3   
   14002789b:	int3   
   14002789c:	int3   
   14002789d:	int3   
   14002789e:	int3   
   14002789f:	int3   
   1400278a0:	rex push rbx
   1400278a2:	sub    rsp,0x20
   1400278a6:	mov    rbx,rcx
   1400278a9:	mov    rcx,QWORD PTR [rcx+0x18]
   1400278ad:	mov    eax,DWORD PTR [rcx+0x10]
   1400278b0:	test   eax,eax
   1400278b2:	je     0x1400278c5
   1400278b4:	cmp    eax,0xffffffff
   1400278b7:	je     0x1400278d6
   1400278b9:	lock add DWORD PTR [rcx+0x10],0xffffffff
   1400278be:	setne  al
   1400278c1:	test   al,al
   1400278c3:	jne    0x1400278d6
   1400278c5:	mov    rcx,QWORD PTR [rbx+0x18]
   1400278c9:	lea    rdx,[rip+0xffffffffffff8720]        # 0x14001fff0
   1400278d0:	call   QWORD PTR [rip+0x3f92]        # 0x14002b868
   1400278d6:	lea    rcx,[rbx+0x10]
   1400278da:	add    rsp,0x20
   1400278de:	pop    rbx
   1400278df:	rex.W jmp QWORD PTR [rip+0x3fb2]        # 0x14002b898
   1400278e6:	int3   
   1400278e7:	int3   
   1400278e8:	int3   
   1400278e9:	int3   
   1400278ea:	int3   
   1400278eb:	int3   
   1400278ec:	int3   
   1400278ed:	int3   
   1400278ee:	int3   
   1400278ef:	int3   
   1400278f0:	test   rdx,rdx
   1400278f3:	je     0x140027960
   1400278f5:	mov    QWORD PTR [rsp+0x8],rbx
   1400278fa:	push   rdi
   1400278fb:	sub    rsp,0x20
   1400278ff:	mov    eax,DWORD PTR [rcx+0x8]
   140027902:	mov    rbx,rdx
   140027905:	mov    QWORD PTR [rdx],0x0
   14002790c:	mov    DWORD PTR [rdx+0x8],eax
   14002790f:	lea    rdx,[rcx+0x10]
   140027913:	mov    rdi,rcx
   140027916:	lea    rcx,[rbx+0x10]
   14002791a:	call   QWORD PTR [rip+0x3f80]        # 0x14002b8a0
   140027920:	mov    rax,QWORD PTR [rdi+0x18]
   140027924:	lea    rcx,[rbx+0x18]
   140027928:	mov    QWORD PTR [rcx],rax
   14002792b:	mov    edx,DWORD PTR [rax+0x10]
   14002792e:	test   edx,edx
   140027930:	je     0x14002793c
   140027932:	cmp    edx,0xffffffff
   140027935:	je     0x14002793c
   140027937:	lock add DWORD PTR [rax+0x10],0x1
   14002793c:	mov    rax,QWORD PTR [rcx]
   14002793f:	test   BYTE PTR [rax+0x28],0x1
   140027943:	jne    0x140027956
   140027945:	mov    eax,DWORD PTR [rax+0x10]
   140027948:	cmp    eax,0x1
   14002794b:	je     0x140027956
   14002794d:	test   eax,eax
   14002794f:	je     0x140027956
   140027951:	call   0x140020030
   140027956:	mov    rbx,QWORD PTR [rsp+0x30]
   14002795b:	add    rsp,0x20
   14002795f:	pop    rdi
   140027960:	repz ret 
   140027962:	int3   
   140027963:	int3   
   140027964:	int3   
   140027965:	int3   
   140027966:	int3   
   140027967:	int3   
   140027968:	int3   
   140027969:	int3   
   14002796a:	int3   
   14002796b:	int3   
   14002796c:	int3   
   14002796d:	int3   
   14002796e:	int3   
   14002796f:	int3   
   140027970:	mov    QWORD PTR [rsp+0x8],rbx
   140027975:	push   rdi
   140027976:	sub    rsp,0x30
   14002797a:	mov    rbx,rcx
   14002797d:	mov    rcx,QWORD PTR [rcx]
   140027980:	lea    r8,[rip+0xffffffffffffff19]        # 0x1400278a0
   140027987:	lea    rdx,[rip+0xffffffffffffff62]        # 0x1400278f0
   14002798e:	mov    r9d,0x20
   140027994:	mov    DWORD PTR [rsp+0x20],0x8
   14002799c:	call   QWORD PTR [rip+0x3ea6]        # 0x14002b848
   1400279a2:	mov    rdi,rax
   1400279a5:	mov    rax,QWORD PTR [rbx]
   1400279a8:	mov    ecx,DWORD PTR [rax+0x10]
   1400279ab:	test   ecx,ecx
   1400279ad:	je     0x1400279c0
   1400279af:	cmp    ecx,0xffffffff
   1400279b2:	je     0x1400279d0
   1400279b4:	lock add DWORD PTR [rax+0x10],0xffffffff
   1400279b9:	setne  al
   1400279bc:	test   al,al
   1400279be:	jne    0x1400279d0
   1400279c0:	mov    rcx,QWORD PTR [rbx]
   1400279c3:	lea    rdx,[rip+0xfffffffffffffed6]        # 0x1400278a0
   1400279ca:	call   QWORD PTR [rip+0x3e98]        # 0x14002b868
   1400279d0:	mov    QWORD PTR [rbx],rdi
   1400279d3:	mov    rbx,QWORD PTR [rsp+0x40]
   1400279d8:	add    rsp,0x30
   1400279dc:	pop    rdi
   1400279dd:	ret    
   1400279de:	int3   
   1400279df:	int3   
   1400279e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400279e5:	mov    QWORD PTR [rsp+0x10],rbp
   1400279ea:	mov    QWORD PTR [rsp+0x18],rsi
   1400279ef:	push   rdi
   1400279f0:	push   r12
   1400279f2:	push   r13
   1400279f4:	sub    rsp,0x20
   1400279f8:	mov    rsi,rcx
   1400279fb:	mov    rcx,QWORD PTR [rcx]
   1400279fe:	mov    r13d,edx
   140027a01:	mov    edx,0x8
   140027a06:	mov    rbp,r9
   140027a09:	mov    r12,r8
   140027a0c:	call   QWORD PTR [rip+0x38b6]        # 0x14002b2c8
   140027a12:	mov    rdi,QWORD PTR [rsp+0x60]
   140027a17:	mov    rbx,rax
   140027a1a:	test   rax,rax
   140027a1d:	je     0x140027a6e
   140027a1f:	mov    rax,QWORD PTR [rdi]
   140027a22:	lea    rcx,[rbx+0x10]
   140027a26:	mov    rdx,r12
   140027a29:	mov    QWORD PTR [rbx],rax
   140027a2c:	mov    DWORD PTR [rbx+0x8],r13d
   140027a30:	call   QWORD PTR [rip+0x3e6a]        # 0x14002b8a0
   140027a36:	mov    rax,QWORD PTR [rbp+0x0]
   140027a3a:	lea    rcx,[rbx+0x18]
   140027a3e:	mov    QWORD PTR [rcx],rax
   140027a41:	mov    edx,DWORD PTR [rax+0x10]
   140027a44:	test   edx,edx
   140027a46:	je     0x140027a52
   140027a48:	cmp    edx,0xffffffff
   140027a4b:	je     0x140027a52
   140027a4d:	lock add DWORD PTR [rax+0x10],0x1
   140027a52:	mov    rax,QWORD PTR [rcx]
   140027a55:	test   BYTE PTR [rax+0x28],0x1
   140027a59:	jne    0x140027a70
   140027a5b:	mov    eax,DWORD PTR [rax+0x10]
   140027a5e:	cmp    eax,0x1
   140027a61:	je     0x140027a70
   140027a63:	test   eax,eax
   140027a65:	je     0x140027a70
   140027a67:	call   0x140020030
   140027a6c:	jmp    0x140027a70
   140027a6e:	xor    ebx,ebx
   140027a70:	mov    rbp,QWORD PTR [rsp+0x48]
   140027a75:	mov    QWORD PTR [rdi],rbx
   140027a78:	mov    rcx,QWORD PTR [rsi]
   140027a7b:	mov    rsi,QWORD PTR [rsp+0x50]
   140027a80:	inc    DWORD PTR [rcx+0x14]
   140027a83:	mov    rax,rbx
   140027a86:	mov    rbx,QWORD PTR [rsp+0x40]
   140027a8b:	add    rsp,0x20
   140027a8f:	pop    r13
   140027a91:	pop    r12
   140027a93:	pop    rdi
   140027a94:	ret    
   140027a95:	int3   
   140027a96:	int3   
   140027a97:	int3   
   140027a98:	int3   
   140027a99:	int3   
   140027a9a:	int3   
   140027a9b:	int3   
   140027a9c:	int3   
   140027a9d:	int3   
   140027a9e:	int3   
   140027a9f:	int3   
   140027aa0:	rex push rbp
   140027aa2:	push   rsi
   140027aa3:	push   rdi
   140027aa4:	sub    rsp,0x30
   140027aa8:	mov    rax,QWORD PTR [rcx]
   140027aab:	mov    rdi,rcx
   140027aae:	mov    rsi,rdx
   140027ab1:	mov    ecx,DWORD PTR [rax+0x10]
   140027ab4:	cmp    ecx,0x1
   140027ab7:	je     0x140027ac5
   140027ab9:	test   ecx,ecx
   140027abb:	je     0x140027ac5
   140027abd:	mov    rcx,rdi
   140027ac0:	call   0x140027970
   140027ac5:	mov    rax,QWORD PTR [rdi]
   140027ac8:	mov    rcx,rsi
   140027acb:	mov    edx,DWORD PTR [rax+0x24]
   140027ace:	call   QWORD PTR [rip+0x37d4]        # 0x14002b2a8
   140027ad4:	mov    rdx,rsi
   140027ad7:	mov    rcx,rdi
   140027ada:	mov    r8d,eax
   140027add:	mov    ebp,eax
   140027adf:	mov    DWORD PTR [rsp+0x50],eax
   140027ae3:	call   0x14001c3c0
   140027ae8:	mov    rcx,QWORD PTR [rdi]
   140027aeb:	mov    r11,rax
   140027aee:	mov    rax,QWORD PTR [rax]
   140027af1:	cmp    rax,rcx
   140027af4:	jne    0x140027b9e
   140027afa:	mov    edx,DWORD PTR [rcx+0x20]
   140027afd:	mov    QWORD PTR [rsp+0x58],rbx
   140027b02:	cmp    DWORD PTR [rcx+0x14],edx
   140027b05:	jl     0x140027b3a
   140027b07:	movsx  edx,WORD PTR [rcx+0x1e]
   140027b0b:	inc    edx
   140027b0d:	call   QWORD PTR [rip+0x37cd]        # 0x14002b2e0
   140027b13:	mov    r11,QWORD PTR [rdi]
   140027b16:	mov    rcx,rsi
   140027b19:	mov    edx,DWORD PTR [r11+0x24]
   140027b1d:	call   QWORD PTR [rip+0x3785]        # 0x14002b2a8
   140027b23:	mov    rdx,rsi
   140027b26:	mov    rcx,rdi
   140027b29:	mov    r8d,eax
   140027b2c:	mov    ebp,eax
   140027b2e:	mov    DWORD PTR [rsp+0x50],eax
   140027b32:	call   0x14001c3c0
   140027b37:	mov    r11,rax
   140027b3a:	mov    rbx,QWORD PTR [rip+0x3d3f]        # 0x14002b880
   140027b41:	lea    r9,[rsp+0x60]
   140027b46:	mov    r8,rsi
   140027b49:	mov    edx,ebp
   140027b4b:	mov    rcx,rdi
   140027b4e:	mov    QWORD PTR [rsp+0x20],r11
   140027b53:	mov    QWORD PTR [rsp+0x60],rbx
   140027b58:	call   0x1400279e0
   140027b5d:	mov    rdi,rax
   140027b60:	mov    eax,DWORD PTR [rbx+0x10]
   140027b63:	test   eax,eax
   140027b65:	je     0x140027b7d
   140027b67:	cmp    eax,0xffffffff
   140027b6a:	je     0x140027b8d
   140027b6c:	lock add DWORD PTR [rbx+0x10],0xffffffff
   140027b71:	setne  cl
   140027b74:	test   cl,cl
   140027b76:	jne    0x140027b8d
   140027b78:	mov    rbx,QWORD PTR [rsp+0x60]
   140027b7d:	lea    rdx,[rip+0xffffffffffff846c]        # 0x14001fff0
   140027b84:	mov    rcx,rbx
   140027b87:	call   QWORD PTR [rip+0x3cdb]        # 0x14002b868
   140027b8d:	lea    rax,[rdi+0x18]
   140027b91:	mov    rbx,QWORD PTR [rsp+0x58]
   140027b96:	add    rsp,0x30
   140027b9a:	pop    rdi
   140027b9b:	pop    rsi
   140027b9c:	pop    rbp
   140027b9d:	ret    
   140027b9e:	add    rax,0x18
   140027ba2:	add    rsp,0x30
   140027ba6:	pop    rdi
   140027ba7:	pop    rsi
   140027ba8:	pop    rbp
   140027ba9:	ret    
   140027baa:	int3   
   140027bab:	int3   
   140027bac:	int3   
   140027bad:	int3   
   140027bae:	int3   
   140027baf:	int3   
   140027bb0:	mov    QWORD PTR [rsp+0x10],rbx
   140027bb5:	mov    QWORD PTR [rsp+0x8],rcx
   140027bba:	push   rbp
   140027bbb:	push   rsi
   140027bbc:	push   rdi
   140027bbd:	push   r12
   140027bbf:	push   r13
   140027bc1:	push   r14
   140027bc3:	push   r15
   140027bc5:	sub    rsp,0x250
   140027bcc:	mov    r15,rcx
   140027bcf:	lea    rcx,[rsp+0x40]
   140027bd4:	xor    r12d,r12d
   140027bd7:	mov    rdi,r8
   140027bda:	mov    DWORD PTR [rsp+0x2a0],r12d
   140027be2:	call   QWORD PTR [rip+0x39d8]        # 0x14002b5c0
   140027be8:	lea    rcx,[rip+0x57cd]        # 0x14002d3bc
   140027bef:	call   QWORD PTR [rip+0x3873]        # 0x14002b468
   140027bf5:	lea    rcx,[rsp+0x40]
   140027bfa:	mov    rdx,rax
   140027bfd:	call   QWORD PTR [rip+0x39b5]        # 0x14002b5b8
   140027c03:	mov    rax,QWORD PTR [rdi+0x58]
   140027c07:	mov    QWORD PTR [rsp+0x50],rax
   140027c0c:	mov    ecx,DWORD PTR [rax]
   140027c0e:	test   ecx,ecx
   140027c10:	je     0x140027c1d
   140027c12:	cmp    ecx,0xffffffff
   140027c15:	je     0x140027c72
   140027c17:	lock add DWORD PTR [rax],0x1
   140027c1b:	jmp    0x140027c72
   140027c1d:	mov    edx,DWORD PTR [rax+0x4]
   140027c20:	lea    rcx,[rsp+0x50]
   140027c25:	call   QWORD PTR [rip+0x3c2d]        # 0x14002b858
   140027c2b:	mov    rdx,QWORD PTR [rsp+0x50]
   140027c30:	mov    rcx,QWORD PTR [rdi+0x58]
   140027c34:	movsxd rax,DWORD PTR [rdx+0xc]
   140027c38:	lea    rsi,[rdx+rax*8+0x10]
   140027c3d:	movsxd rax,DWORD PTR [rcx+0x8]
   140027c41:	lea    rbx,[rcx+rax*8+0x10]
   140027c46:	movsxd rax,DWORD PTR [rdx+0x8]
   140027c4a:	lea    rdi,[rdx+rax*8+0x10]
   140027c4f:	cmp    rdi,rsi
   140027c52:	je     0x140027c72
   140027c54:	test   rdi,rdi
   140027c57:	je     0x140027c65
   140027c59:	mov    rdx,rbx
   140027c5c:	mov    rcx,rdi
   140027c5f:	call   QWORD PTR [rip+0x3c3b]        # 0x14002b8a0
   140027c65:	add    rdi,0x8
   140027c69:	add    rbx,0x8
   140027c6d:	cmp    rdi,rsi
   140027c70:	jne    0x140027c54
   140027c72:	lea    rdx,[rip+0x6ebf]        # 0x14002eb38
   140027c79:	xor    eax,eax
   140027c7b:	or     rbp,0xffffffffffffffff
   140027c7f:	mov    rdi,rdx
   140027c82:	mov    QWORD PTR [rsp+0x68],rdx
   140027c87:	mov    rcx,rbp
   140027c8a:	repnz scas al,BYTE PTR es:[rdi]
   140027c8c:	lea    rdx,[rsp+0x230]
   140027c94:	not    rcx
   140027c97:	dec    rcx
   140027c9a:	mov    DWORD PTR [rsp+0x60],ecx
   140027c9e:	lea    rcx,[rsp+0xc0]
   140027ca6:	movaps xmm0,XMMWORD PTR [rsp+0x60]
   140027cab:	movdqa XMMWORD PTR [rsp+0x230],xmm0
   140027cb4:	call   QWORD PTR [rip+0x3ba6]        # 0x14002b860
   140027cba:	mov    rdx,QWORD PTR [rsp+0x50]
   140027cbf:	mov    eax,DWORD PTR [rdx]
   140027cc1:	cmp    eax,0x1
   140027cc4:	je     0x140027cf5
   140027cc6:	test   eax,eax
   140027cc8:	je     0x140027cf5
   140027cca:	lea    r8d,[rbp+0x2]
   140027cce:	lea    rcx,[rsp+0x50]
   140027cd3:	mov    edx,0x7fffffff
   140027cd8:	call   0x140001a10
   140027cdd:	test   rax,rax
   140027ce0:	je     0x140027d21
   140027ce2:	lea    rdx,[rsp+0xc0]
   140027cea:	mov    rcx,rax
   140027ced:	call   QWORD PTR [rip+0x3bad]        # 0x14002b8a0
   140027cf3:	jmp    0x140027d21
   140027cf5:	lea    rdx,[rsp+0xc0]
   140027cfd:	lea    rcx,[rsp+0x1d0]
   140027d05:	call   QWORD PTR [rip+0x3b95]        # 0x14002b8a0
   140027d0b:	lea    rcx,[rsp+0x50]
   140027d10:	call   QWORD PTR [rip+0x3b2a]        # 0x14002b840
   140027d16:	mov    rcx,QWORD PTR [rsp+0x1d0]
   140027d1e:	mov    QWORD PTR [rax],rcx
   140027d21:	lea    rcx,[rsp+0xc0]
   140027d29:	call   QWORD PTR [rip+0x3b69]        # 0x14002b898
   140027d2f:	lea    rdx,[rip+0x643a]        # 0x14002e170
   140027d36:	xor    eax,eax
   140027d38:	mov    rdi,rdx
   140027d3b:	mov    QWORD PTR [rsp+0x68],rdx
   140027d40:	mov    rcx,rbp
   140027d43:	repnz scas al,BYTE PTR es:[rdi]
   140027d45:	lea    rdx,[rsp+0x200]
   140027d4d:	not    rcx
   140027d50:	dec    rcx
   140027d53:	mov    DWORD PTR [rsp+0x60],ecx
   140027d57:	lea    rcx,[rsp+0x130]
   140027d5f:	movaps xmm0,XMMWORD PTR [rsp+0x60]
   140027d64:	movdqa XMMWORD PTR [rsp+0x200],xmm0
   140027d6d:	call   QWORD PTR [rip+0x3aed]        # 0x14002b860
   140027d73:	mov    rdx,QWORD PTR [rsp+0x130]
   140027d7b:	mov    edi,DWORD PTR [rdx+0x4]
   140027d7e:	lea    rcx,[rsp+0x130]
   140027d86:	call   QWORD PTR [rip+0x3b34]        # 0x14002b8c0
   140027d8c:	lea    rdx,[rsp+0x50]
   140027d91:	lea    rcx,[rsp+0x158]
   140027d99:	mov    r8,rax
   140027d9c:	mov    r9d,edi
   140027d9f:	call   QWORD PTR [rip+0x3b13]        # 0x14002b8b8
   140027da5:	xor    r9d,r9d
   140027da8:	lea    rdx,[rsp+0x158]
   140027db0:	lea    r8d,[r9+0x1]
   140027db4:	lea    rcx,[rsp+0xa0]
   140027dbc:	call   QWORD PTR [rip+0x35ae]        # 0x14002b370
   140027dc2:	lea    rcx,[rsp+0x158]
   140027dca:	call   QWORD PTR [rip+0x3ac8]        # 0x14002b898
   140027dd0:	lea    rcx,[rsp+0x130]
   140027dd8:	call   QWORD PTR [rip+0x3aba]        # 0x14002b898
   140027dde:	mov    rdx,QWORD PTR [rip+0x3a9b]        # 0x14002b880
   140027de5:	mov    rax,QWORD PTR [rip+0x3a9c]        # 0x14002b888
   140027dec:	mov    QWORD PTR [rsp+0x30],rdx
   140027df1:	mov    QWORD PTR [rsp+0x98],rdx
   140027df9:	lea    rdx,[rsp+0x160]
   140027e01:	mov    rcx,r15
   140027e04:	mov    QWORD PTR [rsp+0x58],rax
   140027e09:	call   0x140008940
   140027e0e:	mov    rdi,rax
   140027e11:	mov    rdx,QWORD PTR [rax]
   140027e14:	mov    QWORD PTR [rsp+0x78],rdx
   140027e19:	mov    ecx,DWORD PTR [rdx]
   140027e1b:	test   ecx,ecx
   140027e1d:	je     0x140027e2a
   140027e1f:	cmp    ecx,0xffffffff
   140027e22:	je     0x140027e93
   140027e24:	lock add DWORD PTR [rdx],0x1
   140027e28:	jmp    0x140027e8e
   140027e2a:	mov    edx,DWORD PTR [rdx+0x4]
   140027e2d:	lea    rcx,[rsp+0x78]
   140027e32:	call   QWORD PTR [rip+0x3a20]        # 0x14002b858
   140027e38:	mov    rdx,QWORD PTR [rsp+0x78]
   140027e3d:	mov    rcx,QWORD PTR [rdi]
   140027e40:	movsxd rax,DWORD PTR [rdx+0xc]
   140027e44:	lea    rsi,[rdx+rax*8+0x10]
   140027e49:	movsxd rax,DWORD PTR [rcx+0x8]
   140027e4d:	lea    rbx,[rcx+rax*8+0x10]
   140027e52:	movsxd rax,DWORD PTR [rdx+0x8]
   140027e56:	lea    rdi,[rdx+rax*8+0x10]
   140027e5b:	cmp    rdi,rsi
   140027e5e:	je     0x140027e93
   140027e60:	mov    ecx,0x78
   140027e65:	call   0x14002952a
   140027e6a:	test   rax,rax
   140027e6d:	je     0x140027e7c
   140027e6f:	mov    rdx,QWORD PTR [rbx]
   140027e72:	mov    rcx,rax
   140027e75:	call   0x1400020d0
   140027e7a:	jmp    0x140027e7e
   140027e7c:	xor    eax,eax
   140027e7e:	mov    QWORD PTR [rdi],rax
   140027e81:	add    rdi,0x8
   140027e85:	add    rbx,0x8
   140027e89:	cmp    rdi,rsi
   140027e8c:	jne    0x140027e60
   140027e8e:	mov    rdx,QWORD PTR [rsp+0x78]
   140027e93:	mov    rsi,QWORD PTR [rsp+0x160]
   140027e9b:	mov    DWORD PTR [rsp+0x80],r12d
   140027ea3:	movsxd rax,DWORD PTR [rdx+0x8]
   140027ea7:	lea    rcx,[rdx+rax*8+0x10]
   140027eac:	mov    QWORD PTR [rsp+0x88],rcx
   140027eb4:	movsxd rax,DWORD PTR [rdx+0xc]
   140027eb8:	lea    rcx,[rdx+rax*8+0x10]
   140027ebd:	mov    QWORD PTR [rsp+0x90],rcx
   140027ec5:	mov    eax,DWORD PTR [rsi]
   140027ec7:	test   eax,eax
   140027ec9:	je     0x140027ee8
   140027ecb:	cmp    eax,0xffffffff
   140027ece:	je     0x140027f2b
   140027ed0:	mov    eax,ebp
   140027ed2:	lock xadd DWORD PTR [rsi],eax
   140027ed6:	add    eax,0xffffffff
   140027ed9:	setne  al
   140027edc:	test   al,al
   140027ede:	jne    0x140027f2b
   140027ee0:	mov    rsi,QWORD PTR [rsp+0x160]
   140027ee8:	movsxd rax,DWORD PTR [rsi+0xc]
   140027eec:	lea    rdi,[rsi+rax*8+0x10]
   140027ef1:	movsxd rax,DWORD PTR [rsi+0x8]
   140027ef5:	lea    rbp,[rsi+rax*8+0x10]
   140027efa:	cmp    rbp,rdi
   140027efd:	je     0x140027f22
   140027eff:	nop
   140027f00:	mov    rbx,QWORD PTR [rdi-0x8]
   140027f04:	sub    rdi,0x8
   140027f08:	test   rbx,rbx
   140027f0b:	je     0x140027f1d
   140027f0d:	mov    rcx,rbx
   140027f10:	call   0x140001ea0
   140027f15:	mov    rcx,rbx
   140027f18:	call   0x140029524
   140027f1d:	cmp    rdi,rbp
   140027f20:	jne    0x140027f00
   140027f22:	mov    rcx,rsi
   140027f25:	call   QWORD PTR [rip+0x3945]        # 0x14002b870
   140027f2b:	or     r15,0xffffffffffffffff
   140027f2f:	nop
   140027f30:	mov    eax,DWORD PTR [rsp+0x80]
   140027f37:	inc    DWORD PTR [rsp+0x80]
   140027f3e:	test   eax,eax
   140027f40:	jne    0x140027f59
   140027f42:	mov    rax,QWORD PTR [rsp+0x90]
   140027f4a:	cmp    QWORD PTR [rsp+0x88],rax
   140027f52:	je     0x140027f59
   140027f54:	mov    r13b,0x1
   140027f57:	jmp    0x140027f5c
   140027f59:	xor    r13b,r13b
   140027f5c:	test   r12b,0x2
   140027f60:	je     0x140027fdb
   140027f62:	mov    rsi,QWORD PTR [rsp+0x1b0]
   140027f6a:	and    r12d,0xfffffffd
   140027f6e:	mov    eax,DWORD PTR [rsi]
   140027f70:	test   eax,eax
   140027f72:	je     0x140027f92
   140027f74:	cmp    eax,0xffffffff
   140027f77:	je     0x140027fdb
   140027f79:	mov    eax,r15d
   140027f7c:	lock xadd DWORD PTR [rsi],eax
   140027f80:	add    eax,0xffffffff
   140027f83:	setne  al
   140027f86:	test   al,al
   140027f88:	jne    0x140027fdb
   140027f8a:	mov    rsi,QWORD PTR [rsp+0x1b0]
   140027f92:	movsxd rax,DWORD PTR [rsi+0xc]
   140027f96:	lea    rdi,[rsi+rax*8+0x10]
   140027f9b:	movsxd rax,DWORD PTR [rsi+0x8]
   140027f9f:	lea    rbp,[rsi+rax*8+0x10]
   140027fa4:	cmp    rbp,rdi
   140027fa7:	je     0x140027fd2
   140027fa9:	nop    DWORD PTR [rax+0x0]
   140027fb0:	mov    rbx,QWORD PTR [rdi-0x8]
   140027fb4:	sub    rdi,0x8
   140027fb8:	test   rbx,rbx
   140027fbb:	je     0x140027fcd
   140027fbd:	mov    rcx,rbx
   140027fc0:	call   0x140001ea0
   140027fc5:	mov    rcx,rbx
   140027fc8:	call   0x140029524
   140027fcd:	cmp    rdi,rbp
   140027fd0:	jne    0x140027fb0
   140027fd2:	mov    rcx,rsi
   140027fd5:	call   QWORD PTR [rip+0x3895]        # 0x14002b870
   140027fdb:	test   r13b,r13b
   140027fde:	je     0x1400286a0
   140027fe4:	mov    rax,QWORD PTR [rsp+0x88]
   140027fec:	mov    r14,QWORD PTR [rax]
   140027fef:	test   r12b,0x4
   140027ff3:	je     0x140028070
   140027ff5:	mov    rsi,QWORD PTR [rsp+0x1c0]
   140027ffd:	and    r12d,0xfffffffb
   140028001:	mov    eax,DWORD PTR [rsi]
   140028003:	test   eax,eax
   140028005:	je     0x140028025
   140028007:	cmp    eax,0xffffffff
   14002800a:	je     0x140028070
   14002800c:	mov    eax,r15d
   14002800f:	lock xadd DWORD PTR [rsi],eax
   140028013:	add    eax,0xffffffff
   140028016:	setne  al
   140028019:	test   al,al
   14002801b:	jne    0x140028070
   14002801d:	mov    rsi,QWORD PTR [rsp+0x1c0]
   140028025:	movsxd rax,DWORD PTR [rsi+0xc]
   140028029:	lea    rdi,[rsi+rax*8+0x10]
   14002802e:	movsxd rax,DWORD PTR [rsi+0x8]
   140028032:	lea    rbp,[rsi+rax*8+0x10]
   140028037:	cmp    rbp,rdi
   14002803a:	je     0x140028062
   14002803c:	nop    DWORD PTR [rax+0x0]
   140028040:	mov    rbx,QWORD PTR [rdi-0x8]
   140028044:	sub    rdi,0x8
   140028048:	test   rbx,rbx
   14002804b:	je     0x14002805d
   14002804d:	mov    rcx,rbx
   140028050:	call   0x140001ea0
   140028055:	mov    rcx,rbx
   140028058:	call   0x140029524
   14002805d:	cmp    rdi,rbp
   140028060:	jne    0x140028040
   140028062:	mov    rcx,rsi
   140028065:	call   QWORD PTR [rip+0x3805]        # 0x14002b870
   14002806b:	nop    DWORD PTR [rax+rax*1+0x0]
   140028070:	mov    r13d,DWORD PTR [rsp+0x80]
   140028078:	test   r12b,0x10
   14002807c:	je     0x1400280fb
   14002807e:	mov    rsi,QWORD PTR [rsp+0x170]
   140028086:	and    r12d,0xffffffef
   14002808a:	mov    eax,DWORD PTR [rsi]
   14002808c:	test   eax,eax
   14002808e:	je     0x1400280a6
   140028090:	cmp    eax,0xffffffff
   140028093:	je     0x1400280fb
   140028095:	mov    eax,r15d
   140028098:	lock xadd DWORD PTR [rsi],eax
   14002809c:	add    eax,0xffffffff
   14002809f:	setne  al
   1400280a2:	test   al,al
   1400280a4:	jne    0x1400280fb
   1400280a6:	mov    rsi,QWORD PTR [rsp+0x170]
   1400280ae:	movsxd rax,DWORD PTR [rsi+0xc]
   1400280b2:	lea    rdi,[rsi+rax*8+0x10]
   1400280b7:	movsxd rax,DWORD PTR [rsi+0x8]
   1400280bb:	lea    rbp,[rsi+rax*8+0x10]
   1400280c0:	cmp    rbp,rdi
   1400280c3:	je     0x1400280f2
   1400280c5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400280d0:	mov    rbx,QWORD PTR [rdi-0x8]
   1400280d4:	sub    rdi,0x8
   1400280d8:	test   rbx,rbx
   1400280db:	je     0x1400280ed
   1400280dd:	mov    rcx,rbx
   1400280e0:	call   0x140001ea0
   1400280e5:	mov    rcx,rbx
   1400280e8:	call   0x140029524
   1400280ed:	cmp    rdi,rbp
   1400280f0:	jne    0x1400280d0
   1400280f2:	mov    rcx,rsi
   1400280f5:	call   QWORD PTR [rip+0x3775]        # 0x14002b870
   1400280fb:	test   r13d,r13d
   1400280fe:	je     0x140028607
   140028104:	lea    rdx,[r14+0x58]
   140028108:	lea    rcx,[rsp+0x38]
   14002810d:	call   QWORD PTR [rip+0x378d]        # 0x14002b8a0
   140028113:	mov    rdx,QWORD PTR [rsp+0x38]
   140028118:	cmp    DWORD PTR [rdx+0x4],0x0
   14002811c:	jne    0x140028166
   14002811e:	cmp    DWORD PTR [r14+0x70],0x3
   140028123:	jne    0x140028166
   140028125:	lea    rdx,[rip+0x677c]        # 0x14002e8a8
   14002812c:	xor    eax,eax
   14002812e:	mov    rcx,r15
   140028131:	mov    rdi,rdx
   140028134:	mov    QWORD PTR [rsp+0x68],rdx
   140028139:	lea    rdx,[rsp+0x220]
   140028141:	repnz scas al,BYTE PTR es:[rdi]
   140028143:	not    rcx
   140028146:	dec    rcx
   140028149:	mov    DWORD PTR [rsp+0x60],ecx
   14002814d:	lea    rcx,[rsp+0x38]
   140028152:	movaps xmm0,XMMWORD PTR [rsp+0x60]
   140028157:	movdqa XMMWORD PTR [rsp+0x220],xmm0
   140028160:	call   QWORD PTR [rip+0x33aa]        # 0x14002b510
   140028166:	mov    rdi,QWORD PTR [rsp+0x30]
   14002816b:	mov    eax,DWORD PTR [rdi+0x10]
   14002816e:	cmp    eax,0x1
   140028171:	je     0x1400281d9
   140028173:	test   eax,eax
   140028175:	je     0x1400281d9
   140028177:	lea    r8,[rip+0xfffffffffffff722]        # 0x1400278a0
   14002817e:	lea    rdx,[rip+0xfffffffffffff76b]        # 0x1400278f0
   140028185:	mov    r9d,0x20
   14002818b:	mov    rcx,rdi
   14002818e:	mov    DWORD PTR [rsp+0x20],0x8
   140028196:	call   QWORD PTR [rip+0x36ac]        # 0x14002b848
   14002819c:	mov    rcx,QWORD PTR [rsp+0x30]
   1400281a1:	mov    rdi,rax
   1400281a4:	mov    eax,DWORD PTR [rcx+0x10]
   1400281a7:	test   eax,eax
   1400281a9:	je     0x1400281c7
   1400281ab:	cmp    eax,0xffffffff
   1400281ae:	je     0x1400281d4
   1400281b0:	mov    eax,r15d
   1400281b3:	lock xadd DWORD PTR [rcx+0x10],eax
   1400281b8:	add    eax,0xffffffff
   1400281bb:	setne  al
   1400281be:	test   al,al
   1400281c0:	jne    0x1400281d4
   1400281c2:	mov    rcx,QWORD PTR [rsp+0x30]
   1400281c7:	lea    rdx,[rip+0xfffffffffffff6d2]        # 0x1400278a0
   1400281ce:	call   QWORD PTR [rip+0x3694]        # 0x14002b868
   1400281d4:	mov    QWORD PTR [rsp+0x30],rdi
   1400281d9:	mov    edx,DWORD PTR [rdi+0x24]
   1400281dc:	lea    rcx,[rsp+0x38]
   1400281e1:	call   QWORD PTR [rip+0x30c1]        # 0x14002b2a8
   1400281e7:	mov    rcx,QWORD PTR [rsp+0x30]
   1400281ec:	mov    edi,DWORD PTR [rcx+0x20]
   1400281ef:	mov    esi,eax
   1400281f1:	mov    DWORD PTR [rsp+0x100],eax
   1400281f8:	test   edi,edi
   1400281fa:	je     0x14002823d
   1400281fc:	xor    edx,edx
   1400281fe:	div    edi
   140028200:	mov    eax,edx
   140028202:	mov    rdx,QWORD PTR [rcx+0x8]
   140028206:	lea    rbx,[rdx+rax*8]
   14002820a:	mov    rdx,QWORD PTR [rdx+rax*8]
   14002820e:	cmp    rdx,rcx
   140028211:	je     0x140028242
   140028213:	cmp    esi,DWORD PTR [rdx+0x8]
   140028216:	jne    0x140028230
   140028218:	lea    rcx,[rsp+0x38]
   14002821d:	add    rdx,0x10
   140028221:	call   QWORD PTR [rip+0x3071]        # 0x14002b298
   140028227:	mov    rcx,QWORD PTR [rsp+0x30]
   14002822c:	test   al,al
   14002822e:	jne    0x140028242
   140028230:	mov    rbx,QWORD PTR [rbx]
   140028233:	mov    rdx,QWORD PTR [rbx]
   140028236:	cmp    rdx,rcx
   140028239:	jne    0x140028213
   14002823b:	jmp    0x140028242
   14002823d:	lea    rbx,[rsp+0x30]
   140028242:	mov    rbp,QWORD PTR [rbx]
   140028245:	cmp    rbp,rcx
   140028248:	jne    0x1400283cb
   14002824e:	call   QWORD PTR [rip+0x313c]        # 0x14002b390
   140028254:	test   al,al
   140028256:	je     0x1400282c6
   140028258:	mov    rax,QWORD PTR [rsp+0x30]
   14002825d:	lea    rcx,[rsp+0x38]
   140028262:	mov    edx,DWORD PTR [rax+0x24]
   140028265:	call   QWORD PTR [rip+0x303d]        # 0x14002b2a8
   14002826b:	mov    rcx,QWORD PTR [rsp+0x30]
   140028270:	mov    edi,DWORD PTR [rcx+0x20]
   140028273:	mov    esi,eax
   140028275:	mov    DWORD PTR [rsp+0x100],eax
   14002827c:	test   edi,edi
   14002827e:	je     0x1400282bf
   140028280:	xor    edx,edx
   140028282:	div    edi
   140028284:	mov    rax,QWORD PTR [rcx+0x8]
   140028288:	lea    rbx,[rax+rdx*8]
   14002828c:	mov    rax,QWORD PTR [rax+rdx*8]
   140028290:	cmp    rax,rcx
   140028293:	je     0x1400282cb
   140028295:	cmp    esi,DWORD PTR [rax+0x8]
   140028298:	jne    0x1400282b2
   14002829a:	lea    rdx,[rax+0x10]
   14002829e:	lea    rcx,[rsp+0x38]
   1400282a3:	call   QWORD PTR [rip+0x2fef]        # 0x14002b298
   1400282a9:	mov    rcx,QWORD PTR [rsp+0x30]
   1400282ae:	test   al,al
   1400282b0:	jne    0x1400282cb
   1400282b2:	mov    rbx,QWORD PTR [rbx]
   1400282b5:	mov    rax,QWORD PTR [rbx]
   1400282b8:	cmp    rax,rcx
   1400282bb:	jne    0x140028295
   1400282bd:	jmp    0x1400282cb
   1400282bf:	lea    rbx,[rsp+0x30]
   1400282c4:	jmp    0x1400282cb
   1400282c6:	mov    rcx,QWORD PTR [rsp+0x30]
   1400282cb:	mov    rdi,QWORD PTR [rip+0x35ae]        # 0x14002b880
   1400282d2:	mov    edx,0x8
   1400282d7:	call   QWORD PTR [rip+0x2feb]        # 0x14002b2c8
   1400282dd:	mov    rbp,rax
   1400282e0:	test   rax,rax
   1400282e3:	je     0x14002838a
   1400282e9:	mov    rcx,QWORD PTR [rbx]
   1400282ec:	lea    rdx,[rsp+0x38]
   1400282f1:	mov    DWORD PTR [rax+0x8],esi
   1400282f4:	mov    QWORD PTR [rax],rcx
   1400282f7:	lea    rcx,[rax+0x10]
   1400282fb:	call   QWORD PTR [rip+0x359f]        # 0x14002b8a0
   140028301:	mov    QWORD PTR [rbp+0x18],rdi
   140028305:	mov    eax,DWORD PTR [rdi+0x10]
   140028308:	test   eax,eax
   14002830a:	je     0x140028316
   14002830c:	cmp    eax,0xffffffff
   14002830f:	je     0x140028316
   140028311:	lock add DWORD PTR [rdi+0x10],0x1
   140028316:	mov    rcx,QWORD PTR [rbp+0x18]
   14002831a:	test   BYTE PTR [rcx+0x28],0x1
   14002831e:	jne    0x14002838c
   140028320:	mov    eax,DWORD PTR [rcx+0x10]
   140028323:	cmp    eax,0x1
   140028326:	je     0x14002838c
   140028328:	test   eax,eax
   14002832a:	je     0x14002838c
   14002832c:	lea    r8,[rip+0xffffffffffff7cbd]        # 0x14001fff0
   140028333:	lea    rdx,[rip+0xffffffffffff7886]        # 0x14001fbc0
   14002833a:	mov    r9d,0x20
   140028340:	mov    DWORD PTR [rsp+0x20],0x8
   140028348:	call   QWORD PTR [rip+0x34fa]        # 0x14002b848
   14002834e:	mov    rdx,QWORD PTR [rbp+0x18]
   140028352:	mov    ecx,DWORD PTR [rdx+0x10]
   140028355:	mov    rsi,rax
   140028358:	test   ecx,ecx
   14002835a:	je     0x140028373
   14002835c:	cmp    ecx,0xffffffff
   14002835f:	je     0x140028384
   140028361:	mov    ecx,r15d
   140028364:	lock xadd DWORD PTR [rdx+0x10],ecx
   140028369:	add    ecx,0xffffffff
   14002836c:	setne  al
   14002836f:	test   al,al
   140028371:	jne    0x140028384
   140028373:	mov    rcx,QWORD PTR [rbp+0x18]
   140028377:	lea    rdx,[rip+0xffffffffffff7c72]        # 0x14001fff0
   14002837e:	call   QWORD PTR [rip+0x34e4]        # 0x14002b868
   140028384:	mov    QWORD PTR [rbp+0x18],rsi
   140028388:	jmp    0x14002838c
   14002838a:	xor    ebp,ebp
   14002838c:	mov    QWORD PTR [rbx],rbp
   14002838f:	mov    rax,QWORD PTR [rsp+0x30]
   140028394:	add    rbp,0x18
   140028398:	inc    DWORD PTR [rax+0x14]
   14002839b:	mov    eax,DWORD PTR [rdi+0x10]
   14002839e:	test   eax,eax
   1400283a0:	je     0x1400283b9
   1400283a2:	cmp    eax,0xffffffff
   1400283a5:	je     0x1400283cf
   1400283a7:	mov    eax,r15d
   1400283aa:	lock xadd DWORD PTR [rdi+0x10],eax
   1400283af:	add    eax,0xffffffff
   1400283b2:	setne  al
   1400283b5:	test   al,al
   1400283b7:	jne    0x1400283cf
   1400283b9:	lea    rdx,[rip+0xffffffffffff7c30]        # 0x14001fff0
   1400283c0:	mov    rcx,rdi
   1400283c3:	call   QWORD PTR [rip+0x349f]        # 0x14002b868
   1400283c9:	jmp    0x1400283cf
   1400283cb:	add    rbp,0x18
   1400283cf:	mov    rax,QWORD PTR [rbp+0x0]
   1400283d3:	cmp    DWORD PTR [rax+0x14],0x0
   1400283d7:	jne    0x14002843c
   1400283d9:	mov    rax,QWORD PTR [rsp+0x58]
   1400283de:	mov    ecx,DWORD PTR [rax]
   1400283e0:	cmp    ecx,0x1
   1400283e3:	je     0x140028413
   1400283e5:	test   ecx,ecx
   1400283e7:	je     0x140028413
   1400283e9:	lea    rcx,[rsp+0x58]
   1400283ee:	mov    edx,0x7fffffff
   1400283f3:	mov    r8d,0x1
   1400283f9:	call   0x140001a10
   1400283fe:	test   rax,rax
   140028401:	je     0x14002843c
   140028403:	lea    rdx,[rsp+0x38]
   140028408:	mov    rcx,rax
   14002840b:	call   QWORD PTR [rip+0x348f]        # 0x14002b8a0
   140028411:	jmp    0x14002843c
   140028413:	lea    rdx,[rsp+0x38]
   140028418:	lea    rcx,[rsp+0x1e0]
   140028420:	call   QWORD PTR [rip+0x347a]        # 0x14002b8a0
   140028426:	lea    rcx,[rsp+0x58]
   14002842b:	call   QWORD PTR [rip+0x340f]        # 0x14002b840
   140028431:	mov    rdx,QWORD PTR [rsp+0x1e0]
   140028439:	mov    QWORD PTR [rax],rdx
   14002843c:	lea    rdx,[r14+0x8]
   140028440:	lea    rcx,[rsp+0x168]
   140028448:	call   QWORD PTR [rip+0x3452]        # 0x14002b8a0
   14002844e:	lea    rdx,[rsp+0x168]
   140028456:	mov    rcx,rbp
   140028459:	call   0x1400200a0
   14002845e:	lea    rcx,[rsp+0x168]
   140028466:	mov    rdi,rax
   140028469:	call   QWORD PTR [rip+0x3429]        # 0x14002b898
   14002846f:	mov    rax,QWORD PTR [rdi]
   140028472:	mov    ecx,DWORD PTR [rax+0x8]
   140028475:	cmp    DWORD PTR [rax+0xc],ecx
   140028478:	jne    0x140028516
   14002847e:	lea    rdx,[r14+0x8]
   140028482:	lea    rcx,[rsp+0xd0]
   14002848a:	call   QWORD PTR [rip+0x3410]        # 0x14002b8a0
   140028490:	lea    rdx,[rsp+0x38]
   140028495:	lea    rcx,[rsp+0x98]
   14002849d:	call   0x1400276c0
   1400284a2:	mov    rbx,rax
   1400284a5:	mov    rcx,QWORD PTR [rax]
   1400284a8:	mov    eax,DWORD PTR [rcx]
   1400284aa:	cmp    eax,0x1
   1400284ad:	je     0x1400284de
   1400284af:	test   eax,eax
   1400284b1:	je     0x1400284de
   1400284b3:	mov    edx,0x7fffffff
   1400284b8:	mov    r8d,0x1
   1400284be:	mov    rcx,rbx
   1400284c1:	call   0x140001a10
   1400284c6:	test   rax,rax
   1400284c9:	je     0x140028508
   1400284cb:	lea    rdx,[rsp+0xd0]
   1400284d3:	mov    rcx,rax
   1400284d6:	call   QWORD PTR [rip+0x33c4]        # 0x14002b8a0
   1400284dc:	jmp    0x140028508
   1400284de:	lea    rdx,[rsp+0xd0]
   1400284e6:	lea    rcx,[rsp+0x1f0]
   1400284ee:	call   QWORD PTR [rip+0x33ac]        # 0x14002b8a0
   1400284f4:	mov    rcx,rbx
   1400284f7:	call   QWORD PTR [rip+0x3343]        # 0x14002b840
   1400284fd:	mov    rcx,QWORD PTR [rsp+0x1f0]
   140028505:	mov    QWORD PTR [rax],rcx
   140028508:	lea    rcx,[rsp+0xd0]
   140028510:	call   QWORD PTR [rip+0x3382]        # 0x14002b898
   140028516:	mov    rax,QWORD PTR [rdi]
   140028519:	mov    ecx,DWORD PTR [rax]
   14002851b:	cmp    ecx,0x1
   14002851e:	je     0x140028539
   140028520:	test   ecx,ecx
   140028522:	je     0x140028539
   140028524:	mov    edx,0x7fffffff
   140028529:	mov    r8d,0x1
   14002852f:	mov    rcx,rdi
   140028532:	call   0x140008780
   140028537:	jmp    0x140028542
   140028539:	mov    rcx,rdi
   14002853c:	call   QWORD PTR [rip+0x32fe]        # 0x14002b840
   140028542:	mov    ecx,0x78
   140028547:	mov    rdi,rax
   14002854a:	call   0x14002952a
   14002854f:	test   rax,rax
   140028552:	je     0x140028561
   140028554:	mov    rdx,r14
   140028557:	mov    rcx,rax
   14002855a:	call   0x1400020d0
   14002855f:	jmp    0x140028563
   140028561:	xor    eax,eax
   140028563:	lea    rcx,[rsp+0x38]
   140028568:	mov    QWORD PTR [rdi],rax
   14002856b:	call   QWORD PTR [rip+0x3327]        # 0x14002b898
   140028571:	dec    DWORD PTR [rsp+0x80]
   140028578:	test   r12b,0x8
   14002857c:	je     0x140028070
   140028582:	mov    rsi,QWORD PTR [rsp+0x1b8]
   14002858a:	and    r12d,0xfffffff7
   14002858e:	mov    eax,DWORD PTR [rsi]
   140028590:	test   eax,eax
   140028592:	je     0x1400285b2
   140028594:	cmp    eax,0xffffffff
   140028597:	je     0x140028070
   14002859d:	mov    eax,r15d
   1400285a0:	lock xadd DWORD PTR [rsi],eax
   1400285a4:	add    eax,0xffffffff
   1400285a7:	setne  al
   1400285aa:	test   al,al
   1400285ac:	jne    0x140028070
   1400285b2:	mov    rsi,QWORD PTR [rsp+0x1b8]
   1400285ba:	movsxd rax,DWORD PTR [rsi+0xc]
   1400285be:	lea    rdi,[rsi+rax*8+0x10]
   1400285c3:	movsxd rax,DWORD PTR [rsi+0x8]
   1400285c7:	lea    rbp,[rsi+rax*8+0x10]
   1400285cc:	cmp    rbp,rdi
   1400285cf:	je     0x140028062
   1400285d5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400285e0:	mov    rbx,QWORD PTR [rdi-0x8]
   1400285e4:	sub    rdi,0x8
   1400285e8:	test   rbx,rbx
   1400285eb:	je     0x1400285fd
   1400285ed:	mov    rcx,rbx
   1400285f0:	call   0x140001ea0
   1400285f5:	mov    rcx,rbx
   1400285f8:	call   0x140029524
   1400285fd:	cmp    rdi,rbp
   140028600:	jne    0x1400285e0
   140028602:	jmp    0x140028062
   140028607:	add    QWORD PTR [rsp+0x88],0x8
   140028610:	test   r12b,0x1
   140028614:	je     0x140027f30
   14002861a:	mov    rsi,QWORD PTR [rsp+0x1a0]
   140028622:	and    r12d,0xfffffffe
   140028626:	mov    eax,DWORD PTR [rsi]
   140028628:	test   eax,eax
   14002862a:	je     0x140028652
   14002862c:	cmp    eax,0xffffffff
   14002862f:	je     0x140027f30
   140028635:	mov    eax,r15d
   140028638:	lock xadd DWORD PTR [rsi],eax
   14002863c:	add    eax,0xffffffff
   14002863f:	setne  al
   140028642:	test   al,al
   140028644:	jne    0x140027f30
   14002864a:	mov    rsi,QWORD PTR [rsp+0x1a0]
   140028652:	movsxd rax,DWORD PTR [rsi+0xc]
   140028656:	lea    rdi,[rsi+rax*8+0x10]
   14002865b:	movsxd rax,DWORD PTR [rsi+0x8]
   14002865f:	lea    rbp,[rsi+rax*8+0x10]
   140028664:	cmp    rbp,rdi
   140028667:	je     0x140028692
   140028669:	nop    DWORD PTR [rax+0x0]
   140028670:	mov    rbx,QWORD PTR [rdi-0x8]
   140028674:	sub    rdi,0x8
   140028678:	test   rbx,rbx
   14002867b:	je     0x14002868d
   14002867d:	mov    rcx,rbx
   140028680:	call   0x140001ea0
   140028685:	mov    rcx,rbx
   140028688:	call   0x140029524
   14002868d:	cmp    rdi,rbp
   140028690:	jne    0x140028670
   140028692:	mov    rcx,rsi
   140028695:	call   QWORD PTR [rip+0x31d5]        # 0x14002b870
   14002869b:	jmp    0x140027f30
   1400286a0:	mov    rsi,QWORD PTR [rsp+0x78]
   1400286a5:	mov    r15,QWORD PTR [rsp+0x290]
   1400286ad:	mov    eax,DWORD PTR [rsi]
   1400286af:	test   eax,eax
   1400286b1:	je     0x1400286cf
   1400286b3:	or     rbp,0xffffffffffffffff
   1400286b7:	cmp    eax,ebp
   1400286b9:	je     0x14002871f
   1400286bb:	mov    eax,ebp
   1400286bd:	lock xadd DWORD PTR [rsi],eax
   1400286c1:	add    eax,ebp
   1400286c3:	setne  al
   1400286c6:	test   al,al
   1400286c8:	jne    0x14002871f
   1400286ca:	mov    rsi,QWORD PTR [rsp+0x78]
   1400286cf:	movsxd rax,DWORD PTR [rsi+0xc]
   1400286d3:	lea    rdi,[rsi+rax*8+0x10]
   1400286d8:	movsxd rax,DWORD PTR [rsi+0x8]
   1400286dc:	lea    rbp,[rsi+rax*8+0x10]
   1400286e1:	cmp    rbp,rdi
   1400286e4:	je     0x140028712
   1400286e6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400286f0:	mov    rbx,QWORD PTR [rdi-0x8]
   1400286f4:	sub    rdi,0x8
   1400286f8:	test   rbx,rbx
   1400286fb:	je     0x14002870d
   1400286fd:	mov    rcx,rbx
   140028700:	call   0x140001ea0
   140028705:	mov    rcx,rbx
   140028708:	call   0x140029524
   14002870d:	cmp    rdi,rbp
   140028710:	jne    0x1400286f0
   140028712:	mov    rcx,rsi
   140028715:	call   QWORD PTR [rip+0x3155]        # 0x14002b870
   14002871b:	or     rbp,0xffffffffffffffff
   14002871f:	lea    rcx,[rsp+0x40]
   140028724:	mov    edx,0x1
   140028729:	call   QWORD PTR [rip+0x3109]        # 0x14002b838
   14002872f:	lea    rdx,[rip+0x63ea]        # 0x14002eb20
   140028736:	lea    rcx,[rsp+0x40]
   14002873b:	call   QWORD PTR [rip+0x2e6f]        # 0x14002b5b0
   140028741:	lea    rdx,[rip+0x63c0]        # 0x14002eb08
   140028748:	lea    rcx,[rsp+0x40]
   14002874d:	call   QWORD PTR [rip+0x2e5d]        # 0x14002b5b0
   140028753:	lea    rdx,[rip+0x638e]        # 0x14002eae8
   14002875a:	lea    rcx,[rsp+0x40]
   14002875f:	call   QWORD PTR [rip+0x2e4b]        # 0x14002b5b0
   140028765:	mov    rdx,QWORD PTR [rip+0xcc8c]        # 0x1400353f8
   14002876c:	mov    rcx,rax
   14002876f:	call   QWORD PTR [rip+0x2e3b]        # 0x14002b5b0
   140028775:	lea    rdx,[rip+0x6354]        # 0x14002ead0
   14002877c:	mov    rcx,rax
   14002877f:	call   QWORD PTR [rip+0x2e2b]        # 0x14002b5b0
   140028785:	mov    rdx,QWORD PTR [rip+0xcc74]        # 0x140035400
   14002878c:	mov    rcx,rax
   14002878f:	call   QWORD PTR [rip+0x2e1b]        # 0x14002b5b0
   140028795:	lea    rdx,[rip+0x6330]        # 0x14002eacc
   14002879c:	mov    rcx,rax
   14002879f:	call   QWORD PTR [rip+0x2e0b]        # 0x14002b5b0
   1400287a5:	lea    rdx,[rsp+0xa0]
   1400287ad:	lea    rcx,[rsp+0x1f8]
   1400287b5:	mov    r12d,0x1
   1400287bb:	call   QWORD PTR [rip+0x3017]        # 0x14002b7d8
   1400287c1:	lea    r8,[r15+0x28]
   1400287c5:	lea    rcx,[rsp+0x40]
   1400287ca:	mov    edx,r12d
   1400287cd:	mov    r9,rax
   1400287d0:	call   0x140022a00
   1400287d5:	lea    rdx,[r15+0x18]
   1400287d9:	lea    rcx,[rsp+0x70]
   1400287de:	call   QWORD PTR [rip+0x30bc]        # 0x14002b8a0
   1400287e4:	mov    rdx,QWORD PTR [rsp+0x70]
   1400287e9:	cmp    DWORD PTR [rdx+0x4],0x0
   1400287ed:	je     0x14002886e
   1400287ef:	lea    rdx,[rip+0x4e86]        # 0x14002d67c
   1400287f6:	xor    eax,eax
   1400287f8:	mov    rcx,rbp
   1400287fb:	mov    rdi,rdx
   1400287fe:	mov    QWORD PTR [rsp+0x68],rdx
   140028803:	lea    rdx,[rsp+0x240]
   14002880b:	repnz scas al,BYTE PTR es:[rdi]
   14002880d:	not    rcx
   140028810:	dec    rcx
   140028813:	mov    DWORD PTR [rsp+0x60],ecx
   140028817:	lea    rcx,[rsp+0x70]
   14002881c:	movaps xmm0,XMMWORD PTR [rsp+0x60]
   140028821:	movdqa XMMWORD PTR [rsp+0x240],xmm0
   14002882a:	call   QWORD PTR [rip+0x29f0]        # 0x14002b220
   140028830:	test   al,al
   140028832:	jne    0x14002886e
   140028834:	lea    rcx,[rsp+0x2a0]
   14002883c:	mov    dl,0x2d
   14002883e:	call   QWORD PTR [rip+0x3084]        # 0x14002b8c8
   140028844:	lea    rcx,[rsp+0x2a8]
   14002884c:	mov    dl,0x5f
   14002884e:	mov    rdi,rax
   140028851:	call   QWORD PTR [rip+0x3071]        # 0x14002b8c8
   140028857:	movzx  r8d,WORD PTR [rdi]
   14002885b:	movzx  edx,WORD PTR [rax]
   14002885e:	lea    rcx,[rsp+0x70]
   140028863:	mov    r9d,r12d
   140028866:	call   QWORD PTR [rip+0x2cf4]        # 0x14002b560
   14002886c:	jmp    0x1400288af
   14002886e:	lea    rdx,[rip+0x5feb]        # 0x14002e860
   140028875:	xor    eax,eax
   140028877:	mov    rcx,rbp
   14002887a:	mov    rdi,rdx
   14002887d:	mov    QWORD PTR [rsp+0x68],rdx
   140028882:	lea    rdx,[rsp+0x210]
   14002888a:	repnz scas al,BYTE PTR es:[rdi]
   14002888c:	not    rcx
   14002888f:	dec    rcx
   140028892:	mov    DWORD PTR [rsp+0x60],ecx
   140028896:	lea    rcx,[rsp+0x70]
   14002889b:	movaps xmm0,XMMWORD PTR [rsp+0x60]
   1400288a0:	movdqa XMMWORD PTR [rsp+0x210],xmm0
   1400288a9:	call   QWORD PTR [rip+0x2c61]        # 0x14002b510
   1400288af:	lea    rdx,[r15+0x10]
   1400288b3:	lea    rcx,[rsp+0xb0]
   1400288bb:	call   QWORD PTR [rip+0x2fdf]        # 0x14002b8a0
   1400288c1:	lea    rcx,[rsp+0xc8]
   1400288c9:	mov    dl,0x2d
   1400288cb:	call   QWORD PTR [rip+0x2ff7]        # 0x14002b8c8
   1400288d1:	lea    rcx,[rsp+0x128]
   1400288d9:	mov    dl,0x5f
   1400288db:	mov    rdi,rax
   1400288de:	call   QWORD PTR [rip+0x2fe4]        # 0x14002b8c8
   1400288e4:	movzx  r8d,WORD PTR [rdi]
   1400288e8:	movzx  edx,WORD PTR [rax]
   1400288eb:	lea    rcx,[rsp+0xb0]
   1400288f3:	mov    r9d,r12d
   1400288f6:	call   QWORD PTR [rip+0x2c64]        # 0x14002b560
   1400288fc:	mov    r11,QWORD PTR [rsp+0x58]
   140028901:	mov    QWORD PTR [rsp+0xe0],r11
   140028909:	mov    eax,DWORD PTR [r11]
   14002890c:	test   eax,eax
   14002890e:	je     0x14002891b
   140028910:	cmp    eax,0xffffffff
   140028913:	je     0x140028986
   140028915:	lock add DWORD PTR [r11],r12d
   140028919:	jmp    0x14002897e
   14002891b:	mov    edx,DWORD PTR [r11+0x4]
   14002891f:	lea    rcx,[rsp+0xe0]
   140028927:	call   QWORD PTR [rip+0x2f2b]        # 0x14002b858
   14002892d:	mov    r11,QWORD PTR [rsp+0xe0]
   140028935:	movsxd rax,DWORD PTR [r11+0xc]
   140028939:	lea    rsi,[r11+rax*8+0x10]
   14002893e:	mov    rax,QWORD PTR [rsp+0x58]
   140028943:	movsxd rcx,DWORD PTR [rax+0x8]
   140028947:	lea    rbx,[rax+rcx*8+0x10]
   14002894c:	movsxd rax,DWORD PTR [r11+0x8]
   140028950:	lea    rdi,[r11+rax*8+0x10]
   140028955:	cmp    rdi,rsi
   140028958:	je     0x140028986
   14002895a:	nop    WORD PTR [rax+rax*1+0x0]
   140028960:	test   rdi,rdi
   140028963:	je     0x140028971
   140028965:	mov    rdx,rbx
   140028968:	mov    rcx,rdi
   14002896b:	call   QWORD PTR [rip+0x2f2f]        # 0x14002b8a0
   140028971:	add    rdi,0x8
   140028975:	add    rbx,0x8
   140028979:	cmp    rdi,rsi
   14002897c:	jne    0x140028960
   14002897e:	mov    r11,QWORD PTR [rsp+0xe0]
   140028986:	mov    DWORD PTR [rsp+0xe8],0x0
   140028991:	movsxd rax,DWORD PTR [r11+0x8]
   140028995:	lea    r15,[r11+rax*8+0x10]
   14002899a:	mov    QWORD PTR [rsp+0xf0],r15
   1400289a2:	movsxd rax,DWORD PTR [r11+0xc]
   1400289a6:	lea    rcx,[r11+rax*8+0x10]
   1400289ab:	mov    QWORD PTR [rsp+0xf8],rcx
   1400289b3:	data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400289c0:	mov    eax,0x1
   1400289c5:	mov    DWORD PTR [rsp+0xe8],eax
   1400289cc:	cmp    r15,rcx
   1400289cf:	je     0x140029136
   1400289d5:	test   eax,eax
   1400289d7:	je     0x140029115
   1400289dd:	lea    rcx,[rsp+0xa8]
   1400289e5:	mov    dl,0x20
   1400289e7:	call   QWORD PTR [rip+0x2edb]        # 0x14002b8c8
   1400289ed:	lea    rcx,[rsp+0x188]
   1400289f5:	lea    edi,[r12+r12*1]
   1400289f9:	mov    rbx,rax
   1400289fc:	call   QWORD PTR [rip+0x2e8e]        # 0x14002b890
   140028a02:	movzx  edx,WORD PTR [rbx]
   140028a05:	mov    rcx,rax
   140028a08:	mov    r8d,edi
   140028a0b:	call   QWORD PTR [rip+0x2dd7]        # 0x14002b7e8
   140028a11:	lea    rcx,[rsp+0x40]
   140028a16:	mov    rdx,rax
   140028a19:	call   QWORD PTR [rip+0x2b89]        # 0x14002b5a8
   140028a1f:	lea    rcx,[rsp+0x188]
   140028a27:	call   QWORD PTR [rip+0x2e6b]        # 0x14002b898
   140028a2d:	lea    rcx,[rsp+0x30]
   140028a32:	mov    rdx,r15
   140028a35:	call   0x140027aa0
   140028a3a:	mov    rdi,rax
   140028a3d:	mov    rcx,QWORD PTR [rax]
   140028a40:	mov    eax,DWORD PTR [rcx+0x10]
   140028a43:	cmp    eax,0x1
   140028a46:	je     0x140028aa4
   140028a48:	test   eax,eax
   140028a4a:	je     0x140028aa4
   140028a4c:	lea    r8,[rip+0xffffffffffff759d]        # 0x14001fff0
   140028a53:	lea    rdx,[rip+0xffffffffffff7166]        # 0x14001fbc0
   140028a5a:	mov    r9d,0x20
   140028a60:	mov    DWORD PTR [rsp+0x20],0x8
   140028a68:	call   QWORD PTR [rip+0x2dda]        # 0x14002b848
   140028a6e:	mov    rdx,QWORD PTR [rdi]
   140028a71:	mov    ecx,DWORD PTR [rdx+0x10]
   140028a74:	mov    rbx,rax
   140028a77:	test   ecx,ecx
   140028a79:	je     0x140028a91
   140028a7b:	cmp    ecx,0xffffffff
   140028a7e:	je     0x140028aa1
   140028a80:	mov    ecx,ebp
   140028a82:	lock xadd DWORD PTR [rdx+0x10],ecx
   140028a87:	add    ecx,0xffffffff
   140028a8a:	setne  al
   140028a8d:	test   al,al
   140028a8f:	jne    0x140028aa1
   140028a91:	mov    rcx,QWORD PTR [rdi]
   140028a94:	lea    rdx,[rip+0xffffffffffff7555]        # 0x14001fff0
   140028a9b:	call   QWORD PTR [rip+0x2dc7]        # 0x14002b868
   140028aa1:	mov    QWORD PTR [rdi],rbx
   140028aa4:	mov    rcx,QWORD PTR [rdi]
   140028aa7:	call   QWORD PTR [rip+0x28eb]        # 0x14002b398
   140028aad:	mov    rdi,rax
   140028ab0:	mov    rcx,QWORD PTR [rax+0x18]
   140028ab4:	mov    eax,DWORD PTR [rcx]
   140028ab6:	cmp    eax,0x1
   140028ab9:	je     0x140028acb
   140028abb:	test   eax,eax
   140028abd:	je     0x140028acb
   140028abf:	mov    edx,DWORD PTR [rcx+0x4]
   140028ac2:	lea    rcx,[rdi+0x18]
   140028ac6:	call   0x140002770
   140028acb:	mov    rcx,QWORD PTR [rdi+0x18]
   140028acf:	lea    rdx,[rsp+0x1c8]
   140028ad7:	movsxd rax,DWORD PTR [rcx+0x8]
   140028adb:	mov    rdi,QWORD PTR [rcx+rax*8+0x10]
   140028ae0:	lea    rcx,[rsp+0xb0]
   140028ae8:	call   QWORD PTR [rip+0x2cf2]        # 0x14002b7e0
   140028aee:	lea    rdx,[rsp+0x198]
   140028af6:	lea    rcx,[rsp+0x70]
   140028afb:	mov    rsi,rax
   140028afe:	call   QWORD PTR [rip+0x2cdc]        # 0x14002b7e0
   140028b04:	lea    rcx,[rsp+0x1d8]
   140028b0c:	mov    rdx,rdi
   140028b0f:	mov    rbx,rax
   140028b12:	call   0x140022350
   140028b17:	lea    rdx,[rip+0x5f9a]        # 0x14002eab8
   140028b1e:	lea    rcx,[rsp+0x40]
   140028b23:	mov    rdi,rax
   140028b26:	call   QWORD PTR [rip+0x2a84]        # 0x14002b5b0
   140028b2c:	mov    rdx,r15
   140028b2f:	mov    rcx,rax
   140028b32:	call   QWORD PTR [rip+0x2a70]        # 0x14002b5a8
   140028b38:	lea    rdx,[rip+0x4b2d]        # 0x14002d66c
   140028b3f:	mov    rcx,rax
   140028b42:	call   QWORD PTR [rip+0x2a68]        # 0x14002b5b0
   140028b48:	lea    rdx,[rip+0x5f59]        # 0x14002eaa8
   140028b4f:	mov    rcx,rax
   140028b52:	call   QWORD PTR [rip+0x2a58]        # 0x14002b5b0
   140028b58:	mov    rdx,rdi
   140028b5b:	mov    rcx,rax
   140028b5e:	call   QWORD PTR [rip+0x2a44]        # 0x14002b5a8
   140028b64:	lea    rdx,[rip+0x4b01]        # 0x14002d66c
   140028b6b:	mov    rcx,rax
   140028b6e:	call   QWORD PTR [rip+0x2a3c]        # 0x14002b5b0
   140028b74:	lea    rdx,[rip+0x5f15]        # 0x14002ea90
   140028b7b:	mov    rcx,rax
   140028b7e:	call   QWORD PTR [rip+0x2a2c]        # 0x14002b5b0
   140028b84:	mov    rdx,rbx
   140028b87:	mov    rcx,rax
   140028b8a:	call   QWORD PTR [rip+0x2c90]        # 0x14002b820
   140028b90:	lea    rdx,[rip+0x4ad5]        # 0x14002d66c
   140028b97:	mov    rcx,rax
   140028b9a:	call   QWORD PTR [rip+0x2a10]        # 0x14002b5b0
   140028ba0:	lea    rdx,[rip+0x5ed1]        # 0x14002ea78
   140028ba7:	mov    rcx,rax
   140028baa:	call   QWORD PTR [rip+0x2a00]        # 0x14002b5b0
   140028bb0:	mov    rdx,rsi
   140028bb3:	mov    rcx,rax
   140028bb6:	call   QWORD PTR [rip+0x2c64]        # 0x14002b820
   140028bbc:	lea    rdx,[rip+0x4aa9]        # 0x14002d66c
   140028bc3:	mov    rcx,rax
   140028bc6:	call   QWORD PTR [rip+0x29e4]        # 0x14002b5b0
   140028bcc:	lea    rdx,[rip+0x5e95]        # 0x14002ea68
   140028bd3:	mov    rcx,rax
   140028bd6:	call   QWORD PTR [rip+0x29d4]        # 0x14002b5b0
   140028bdc:	lea    rcx,[rsp+0x1d8]
   140028be4:	call   QWORD PTR [rip+0x2cae]        # 0x14002b898
   140028bea:	lea    rcx,[rsp+0x198]
   140028bf2:	call   QWORD PTR [rip+0x25d0]        # 0x14002b1c8
   140028bf8:	lea    rcx,[rsp+0x1c8]
   140028c00:	call   QWORD PTR [rip+0x25c2]        # 0x14002b1c8
   140028c06:	lea    rcx,[rsp+0x98]
   140028c0e:	mov    rdx,r15
   140028c11:	inc    r12d
   140028c14:	call   0x1400276c0
   140028c19:	mov    rdx,QWORD PTR [rax]
   140028c1c:	mov    rdi,rax
   140028c1f:	mov    QWORD PTR [rsp+0x108],rdx
   140028c27:	mov    ecx,DWORD PTR [rdx]
   140028c29:	test   ecx,ecx
   140028c2b:	je     0x140028c38
   140028c2d:	cmp    ecx,0xffffffff
   140028c30:	je     0x140028c9a
   140028c32:	lock add DWORD PTR [rdx],0x1
   140028c36:	jmp    0x140028c92
   140028c38:	mov    edx,DWORD PTR [rdx+0x4]
   140028c3b:	lea    rcx,[rsp+0x108]
   140028c43:	call   QWORD PTR [rip+0x2c0f]        # 0x14002b858
   140028c49:	mov    rdx,QWORD PTR [rsp+0x108]
   140028c51:	mov    rcx,QWORD PTR [rdi]
   140028c54:	movsxd rax,DWORD PTR [rdx+0xc]
   140028c58:	lea    rsi,[rdx+rax*8+0x10]
   140028c5d:	movsxd rax,DWORD PTR [rcx+0x8]
   140028c61:	lea    rbx,[rcx+rax*8+0x10]
   140028c66:	movsxd rax,DWORD PTR [rdx+0x8]
   140028c6a:	lea    rdi,[rdx+rax*8+0x10]
   140028c6f:	cmp    rdi,rsi
   140028c72:	je     0x140028c9a
   140028c74:	test   rdi,rdi
   140028c77:	je     0x140028c85
   140028c79:	mov    rdx,rbx
   140028c7c:	mov    rcx,rdi
   140028c7f:	call   QWORD PTR [rip+0x2c1b]        # 0x14002b8a0
   140028c85:	add    rdi,0x8
   140028c89:	add    rbx,0x8
   140028c8d:	cmp    rdi,rsi
   140028c90:	jne    0x140028c74
   140028c92:	mov    rdx,QWORD PTR [rsp+0x108]
   140028c9a:	mov    DWORD PTR [rsp+0x110],0x0
   140028ca5:	movsxd rax,DWORD PTR [rdx+0x8]
   140028ca9:	lea    r13,[rdx+rax*8+0x10]
   140028cae:	mov    QWORD PTR [rsp+0x118],r13
   140028cb6:	movsxd rax,DWORD PTR [rdx+0xc]
   140028cba:	lea    rcx,[rdx+rax*8+0x10]
   140028cbf:	mov    QWORD PTR [rsp+0x120],rcx
   140028cc7:	nop    WORD PTR [rax+rax*1+0x0]
   140028cd0:	mov    eax,0x1
   140028cd5:	mov    DWORD PTR [rsp+0x110],eax
   140028cdc:	cmp    r13,rcx
   140028cdf:	je     0x140029036
   140028ce5:	lea    r14d,[r12+r12*1]
   140028ce9:	nop    DWORD PTR [rax+0x0]
   140028cf0:	test   eax,eax
   140028cf2:	je     0x140029015
   140028cf8:	mov    rax,QWORD PTR [r13+0x0]
   140028cfc:	cmp    DWORD PTR [rax+0x4],0x0
   140028d00:	je     0x140028ddb
   140028d06:	lea    rcx,[rsp+0xb8]
   140028d0e:	mov    dl,0x20
   140028d10:	call   QWORD PTR [rip+0x2bb2]        # 0x14002b8c8
   140028d16:	lea    rcx,[rsp+0x1a8]
   140028d1e:	mov    rdi,rax
   140028d21:	call   QWORD PTR [rip+0x2b69]        # 0x14002b890
   140028d27:	movzx  edx,WORD PTR [rdi]
   140028d2a:	mov    rcx,rax
   140028d2d:	mov    r8d,r14d
   140028d30:	call   QWORD PTR [rip+0x2ab2]        # 0x14002b7e8
   140028d36:	lea    rcx,[rsp+0x40]
   140028d3b:	mov    rdx,rax
   140028d3e:	call   QWORD PTR [rip+0x2864]        # 0x14002b5a8
   140028d44:	lea    rcx,[rsp+0x1a8]
   140028d4c:	call   QWORD PTR [rip+0x2b46]        # 0x14002b898
   140028d52:	lea    rcx,[rsp+0x1e8]
   140028d5a:	mov    r8b,0x1
   140028d5d:	mov    rdx,r13
   140028d60:	call   0x140022730
   140028d65:	lea    rdx,[rip+0x5cb4]        # 0x14002ea20
   140028d6c:	lea    rcx,[rsp+0x40]
   140028d71:	mov    rdi,rax
   140028d74:	call   QWORD PTR [rip+0x2836]        # 0x14002b5b0
   140028d7a:	mov    rdx,QWORD PTR [rip+0xc637]        # 0x1400353b8
   140028d81:	mov    rcx,rax
   140028d84:	call   QWORD PTR [rip+0x2826]        # 0x14002b5b0
   140028d8a:	lea    rdx,[rip+0x48db]        # 0x14002d66c
   140028d91:	mov    rcx,rax
   140028d94:	call   QWORD PTR [rip+0x2816]        # 0x14002b5b0
   140028d9a:	lea    rdx,[rip+0x5cb7]        # 0x14002ea58
   140028da1:	mov    rcx,rax
   140028da4:	call   QWORD PTR [rip+0x2806]        # 0x14002b5b0
   140028daa:	mov    rdx,rdi
   140028dad:	mov    rcx,rax
   140028db0:	call   QWORD PTR [rip+0x27f2]        # 0x14002b5a8
   140028db6:	lea    rdx,[rip+0x5d0f]        # 0x14002eacc
   140028dbd:	mov    rcx,rax
   140028dc0:	call   QWORD PTR [rip+0x27ea]        # 0x14002b5b0
   140028dc6:	lea    rcx,[rsp+0x1e8]
   140028dce:	call   QWORD PTR [rip+0x2ac4]        # 0x14002b898
   140028dd4:	inc    r12d
   140028dd7:	add    r14d,0x2
   140028ddb:	lea    rcx,[rsp+0x30]
   140028de0:	mov    rdx,r15
   140028de3:	call   0x140027aa0
   140028de8:	mov    rdx,r13
   140028deb:	mov    rcx,rax
   140028dee:	call   0x1400200a0
   140028df3:	mov    rdi,rax
   140028df6:	mov    rdx,QWORD PTR [rax]
   140028df9:	mov    QWORD PTR [rsp+0x138],rdx
   140028e01:	mov    ecx,DWORD PTR [rdx]
   140028e03:	test   ecx,ecx
   140028e05:	je     0x140028e12
   140028e07:	cmp    ecx,0xffffffff
   140028e0a:	je     0x140028e86
   140028e0c:	lock add DWORD PTR [rdx],0x1
   140028e10:	jmp    0x140028e7e
   140028e12:	mov    edx,DWORD PTR [rdx+0x4]
   140028e15:	lea    rcx,[rsp+0x138]
   140028e1d:	call   QWORD PTR [rip+0x2a35]        # 0x14002b858
   140028e23:	mov    rdx,QWORD PTR [rsp+0x138]
   140028e2b:	mov    rcx,QWORD PTR [rdi]
   140028e2e:	movsxd rax,DWORD PTR [rdx+0xc]
   140028e32:	lea    rsi,[rdx+rax*8+0x10]
   140028e37:	movsxd rax,DWORD PTR [rcx+0x8]
   140028e3b:	lea    rbx,[rcx+rax*8+0x10]
   140028e40:	movsxd rax,DWORD PTR [rdx+0x8]
   140028e44:	lea    rdi,[rdx+rax*8+0x10]
   140028e49:	cmp    rdi,rsi
   140028e4c:	je     0x140028e86
   140028e4e:	xchg   ax,ax
   140028e50:	mov    ecx,0x78
   140028e55:	call   0x14002952a
   140028e5a:	test   rax,rax
   140028e5d:	je     0x140028e6c
   140028e5f:	mov    rdx,QWORD PTR [rbx]
   140028e62:	mov    rcx,rax
   140028e65:	call   0x1400020d0
   140028e6a:	jmp    0x140028e6e
   140028e6c:	xor    eax,eax
   140028e6e:	mov    QWORD PTR [rdi],rax
   140028e71:	add    rdi,0x8
   140028e75:	add    rbx,0x8
   140028e79:	cmp    rdi,rsi
   140028e7c:	jne    0x140028e50
   140028e7e:	mov    rdx,QWORD PTR [rsp+0x138]
   140028e86:	mov    DWORD PTR [rsp+0x140],0x0
   140028e91:	movsxd rax,DWORD PTR [rdx+0x8]
   140028e95:	lea    rcx,[rdx+rax*8+0x10]
   140028e9a:	mov    QWORD PTR [rsp+0x148],rcx
   140028ea2:	movsxd rax,DWORD PTR [rdx+0xc]
   140028ea6:	lea    rdx,[rdx+rax*8+0x10]
   140028eab:	mov    QWORD PTR [rsp+0x150],rdx
   140028eb3:	data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140028ec0:	mov    eax,0x1
   140028ec5:	mov    DWORD PTR [rsp+0x140],eax
   140028ecc:	cmp    rcx,rdx
   140028ecf:	je     0x140028f20
   140028ed1:	mov    rdi,QWORD PTR [rcx]
   140028ed4:	test   eax,eax
   140028ed6:	je     0x140028f02
   140028ed8:	lea    r8,[rsp+0xa0]
   140028ee0:	lea    rcx,[rsp+0x40]
   140028ee5:	mov    r9d,r12d
   140028ee8:	mov    rdx,rdi
   140028eeb:	call   0x140026c90
   140028ef0:	mov    eax,DWORD PTR [rsp+0x140]
   140028ef7:	dec    eax
   140028ef9:	mov    DWORD PTR [rsp+0x140],eax
   140028f00:	jmp    0x140028ed4
   140028f02:	mov    rcx,QWORD PTR [rsp+0x148]
   140028f0a:	mov    rdx,QWORD PTR [rsp+0x150]
   140028f12:	add    rcx,0x8
   140028f16:	mov    QWORD PTR [rsp+0x148],rcx
   140028f1e:	jmp    0x140028ec0
   140028f20:	mov    rsi,QWORD PTR [rsp+0x138]
   140028f28:	mov    eax,DWORD PTR [rsi]
   140028f2a:	test   eax,eax
   140028f2c:	je     0x140028f4b
   140028f2e:	cmp    eax,0xffffffff
   140028f31:	je     0x140028f91
   140028f33:	mov    eax,ebp
   140028f35:	lock xadd DWORD PTR [rsi],eax
   140028f39:	add    eax,0xffffffff
   140028f3c:	setne  al
   140028f3f:	test   al,al
   140028f41:	jne    0x140028f91
   140028f43:	mov    rsi,QWORD PTR [rsp+0x138]
   140028f4b:	movsxd rax,DWORD PTR [rsi+0xc]
   140028f4f:	lea    rdi,[rsi+rax*8+0x10]
   140028f54:	movsxd rax,DWORD PTR [rsi+0x8]
   140028f58:	lea    rbp,[rsi+rax*8+0x10]
   140028f5d:	cmp    rbp,rdi
   140028f60:	je     0x140028f84
   140028f62:	mov    rbx,QWORD PTR [rdi-0x8]
   140028f66:	sub    rdi,0x8
   140028f6a:	test   rbx,rbx
   140028f6d:	je     0x140028f7f
   140028f6f:	mov    rcx,rbx
   140028f72:	call   0x140001ea0
   140028f77:	mov    rcx,rbx
   140028f7a:	call   0x140029524
   140028f7f:	cmp    rdi,rbp
   140028f82:	jne    0x140028f62
   140028f84:	mov    rcx,rsi
   140028f87:	call   QWORD PTR [rip+0x28e3]        # 0x14002b870
   140028f8d:	or     rbp,0xffffffffffffffff
   140028f91:	mov    rax,QWORD PTR [r13+0x0]
   140028f95:	cmp    DWORD PTR [rax+0x4],0x0
   140028f99:	je     0x140029000
   140028f9b:	lea    rcx,[rsp+0xbc]
   140028fa3:	mov    dl,0x20
   140028fa5:	dec    r12d
   140028fa8:	sub    r14d,0x2
   140028fac:	call   QWORD PTR [rip+0x2916]        # 0x14002b8c8
   140028fb2:	lea    rcx,[rsp+0x178]
   140028fba:	mov    rdi,rax
   140028fbd:	call   QWORD PTR [rip+0x28cd]        # 0x14002b890
   140028fc3:	movzx  edx,WORD PTR [rdi]
   140028fc6:	mov    rcx,rax
   140028fc9:	mov    r8d,r14d
   140028fcc:	call   QWORD PTR [rip+0x2816]        # 0x14002b7e8
   140028fd2:	lea    rcx,[rsp+0x40]
   140028fd7:	mov    rdx,rax
   140028fda:	call   QWORD PTR [rip+0x25c8]        # 0x14002b5a8
   140028fe0:	lea    rcx,[rsp+0x178]
   140028fe8:	call   QWORD PTR [rip+0x28aa]        # 0x14002b898
   140028fee:	lea    rdx,[rip+0x5a1b]        # 0x14002ea10
   140028ff5:	lea    rcx,[rsp+0x40]
   140028ffa:	call   QWORD PTR [rip+0x25b0]        # 0x14002b5b0
   140029000:	mov    eax,DWORD PTR [rsp+0x110]
   140029007:	dec    eax
   140029009:	mov    DWORD PTR [rsp+0x110],eax
   140029010:	jmp    0x140028cf0
   140029015:	mov    r13,QWORD PTR [rsp+0x118]
   14002901d:	mov    rcx,QWORD PTR [rsp+0x120]
   140029025:	add    r13,0x8
   140029029:	mov    QWORD PTR [rsp+0x118],r13
   140029031:	jmp    0x140028cd0
   140029036:	mov    rbx,QWORD PTR [rsp+0x108]
   14002903e:	mov    eax,DWORD PTR [rbx]
   140029040:	test   eax,eax
   140029042:	je     0x140029061
   140029044:	cmp    eax,0xffffffff
   140029047:	je     0x14002909b
   140029049:	mov    eax,ebp
   14002904b:	lock xadd DWORD PTR [rbx],eax
   14002904f:	add    eax,0xffffffff
   140029052:	setne  al
   140029055:	test   al,al
   140029057:	jne    0x14002909b
   140029059:	mov    rbx,QWORD PTR [rsp+0x108]
   140029061:	movsxd rax,DWORD PTR [rbx+0xc]
   140029065:	lea    rdi,[rbx+rax*8+0x10]
   14002906a:	movsxd rax,DWORD PTR [rbx+0x8]
   14002906e:	lea    rsi,[rbx+rax*8+0x10]
   140029073:	cmp    rsi,rdi
   140029076:	je     0x140029092
   140029078:	nop    DWORD PTR [rax+rax*1+0x0]
   140029080:	sub    rdi,0x8
   140029084:	mov    rcx,rdi
   140029087:	call   QWORD PTR [rip+0x280b]        # 0x14002b898
   14002908d:	cmp    rdi,rsi
   140029090:	jne    0x140029080
   140029092:	mov    rcx,rbx
   140029095:	call   QWORD PTR [rip+0x27d5]        # 0x14002b870
   14002909b:	lea    rcx,[rsp+0xba]
   1400290a3:	mov    dl,0x20
   1400290a5:	dec    r12d
   1400290a8:	call   QWORD PTR [rip+0x281a]        # 0x14002b8c8
   1400290ae:	lea    rcx,[rsp+0x180]
   1400290b6:	lea    edi,[r12+r12*1]
   1400290ba:	mov    rbx,rax
   1400290bd:	call   QWORD PTR [rip+0x27cd]        # 0x14002b890
   1400290c3:	movzx  edx,WORD PTR [rbx]
   1400290c6:	mov    rcx,rax
   1400290c9:	mov    r8d,edi
   1400290cc:	call   QWORD PTR [rip+0x2716]        # 0x14002b7e8
   1400290d2:	lea    rcx,[rsp+0x40]
   1400290d7:	mov    rdx,rax
   1400290da:	call   QWORD PTR [rip+0x24c8]        # 0x14002b5a8
   1400290e0:	lea    rcx,[rsp+0x180]
   1400290e8:	call   QWORD PTR [rip+0x27aa]        # 0x14002b898
   1400290ee:	lea    rdx,[rip+0x5953]        # 0x14002ea48
   1400290f5:	lea    rcx,[rsp+0x40]
   1400290fa:	call   QWORD PTR [rip+0x24b0]        # 0x14002b5b0
   140029100:	mov    eax,DWORD PTR [rsp+0xe8]
   140029107:	dec    eax
   140029109:	mov    DWORD PTR [rsp+0xe8],eax
   140029110:	jmp    0x1400289d5
   140029115:	mov    r15,QWORD PTR [rsp+0xf0]
   14002911d:	mov    rcx,QWORD PTR [rsp+0xf8]
   140029125:	add    r15,0x8
   140029129:	mov    QWORD PTR [rsp+0xf0],r15
   140029131:	jmp    0x1400289c0
   140029136:	mov    rbx,QWORD PTR [rsp+0xe0]
   14002913e:	mov    eax,DWORD PTR [rbx]
   140029140:	test   eax,eax
   140029142:	je     0x140029161
   140029144:	cmp    eax,0xffffffff
   140029147:	je     0x14002919b
   140029149:	mov    eax,ebp
   14002914b:	lock xadd DWORD PTR [rbx],eax
   14002914f:	add    eax,0xffffffff
   140029152:	setne  al
   140029155:	test   al,al
   140029157:	jne    0x14002919b
   140029159:	mov    rbx,QWORD PTR [rsp+0xe0]
   140029161:	movsxd rax,DWORD PTR [rbx+0xc]
   140029165:	lea    rdi,[rbx+rax*8+0x10]
   14002916a:	movsxd rax,DWORD PTR [rbx+0x8]
   14002916e:	lea    rsi,[rbx+rax*8+0x10]
   140029173:	cmp    rsi,rdi
   140029176:	je     0x140029192
   140029178:	nop    DWORD PTR [rax+rax*1+0x0]
   140029180:	sub    rdi,0x8
   140029184:	mov    rcx,rdi
   140029187:	call   QWORD PTR [rip+0x270b]        # 0x14002b898
   14002918d:	cmp    rdi,rsi
   140029190:	jne    0x140029180
   140029192:	mov    rcx,rbx
   140029195:	call   QWORD PTR [rip+0x26d5]        # 0x14002b870
   14002919b:	lea    rcx,[rsp+0xd8]
   1400291a3:	mov    dl,0x20
   1400291a5:	call   QWORD PTR [rip+0x271d]        # 0x14002b8c8
   1400291ab:	lea    rcx,[rsp+0x190]
   1400291b3:	lea    edi,[r12+r12*1-0x2]
   1400291b8:	mov    rbx,rax
   1400291bb:	call   QWORD PTR [rip+0x26cf]        # 0x14002b890
   1400291c1:	movzx  edx,WORD PTR [rbx]
   1400291c4:	mov    rcx,rax
   1400291c7:	mov    r8d,edi
   1400291ca:	call   QWORD PTR [rip+0x2618]        # 0x14002b7e8
   1400291d0:	lea    rcx,[rsp+0x40]
   1400291d5:	mov    rdx,rax
   1400291d8:	call   QWORD PTR [rip+0x23ca]        # 0x14002b5a8
   1400291de:	lea    rcx,[rsp+0x190]
   1400291e6:	call   QWORD PTR [rip+0x26ac]        # 0x14002b898
   1400291ec:	lea    rdx,[rip+0x5845]        # 0x14002ea38
   1400291f3:	lea    rcx,[rsp+0x40]
   1400291f8:	call   QWORD PTR [rip+0x23b2]        # 0x14002b5b0
   1400291fe:	lea    rcx,[rsp+0xb0]
   140029206:	call   QWORD PTR [rip+0x268c]        # 0x14002b898
   14002920c:	lea    rcx,[rsp+0x70]
   140029211:	call   QWORD PTR [rip+0x2681]        # 0x14002b898
   140029217:	mov    rbx,QWORD PTR [rsp+0x58]
   14002921c:	mov    eax,DWORD PTR [rbx]
   14002921e:	test   eax,eax
   140029220:	je     0x14002923c
   140029222:	cmp    eax,0xffffffff
   140029225:	je     0x14002926e
   140029227:	mov    eax,ebp
   140029229:	lock xadd DWORD PTR [rbx],eax
   14002922d:	add    eax,0xffffffff
   140029230:	setne  al
   140029233:	test   al,al
   140029235:	jne    0x14002926e
   140029237:	mov    rbx,QWORD PTR [rsp+0x58]
   14002923c:	movsxd rax,DWORD PTR [rbx+0xc]
   140029240:	lea    rdi,[rbx+rax*8+0x10]
   140029245:	movsxd rax,DWORD PTR [rbx+0x8]
   140029249:	lea    rsi,[rbx+rax*8+0x10]
   14002924e:	cmp    rsi,rdi
   140029251:	je     0x140029265
   140029253:	sub    rdi,0x8
   140029257:	mov    rcx,rdi
   14002925a:	call   QWORD PTR [rip+0x2638]        # 0x14002b898
   140029260:	cmp    rdi,rsi
   140029263:	jne    0x140029253
   140029265:	mov    rcx,rbx
   140029268:	call   QWORD PTR [rip+0x2602]        # 0x14002b870
   14002926e:	mov    rcx,QWORD PTR [rsp+0x98]
   140029276:	mov    eax,DWORD PTR [rcx+0x10]
   140029279:	test   eax,eax
   14002927b:	je     0x14002929b
   14002927d:	cmp    eax,0xffffffff
   140029280:	je     0x1400292a8
   140029282:	mov    eax,ebp
   140029284:	lock xadd DWORD PTR [rcx+0x10],eax
   140029289:	add    eax,0xffffffff
   14002928c:	setne  al
   14002928f:	test   al,al
   140029291:	jne    0x1400292a8
   140029293:	mov    rcx,QWORD PTR [rsp+0x98]
   14002929b:	lea    rdx,[rip+0xffffffffffffb05e]        # 0x140024300
   1400292a2:	call   QWORD PTR [rip+0x25c0]        # 0x14002b868
   1400292a8:	mov    rcx,QWORD PTR [rsp+0x30]
   1400292ad:	mov    eax,DWORD PTR [rcx+0x10]
   1400292b0:	test   eax,eax
   1400292b2:	je     0x1400292cf
   1400292b4:	cmp    eax,0xffffffff
   1400292b7:	je     0x1400292dc
   1400292b9:	mov    eax,ebp
   1400292bb:	lock xadd DWORD PTR [rcx+0x10],eax
   1400292c0:	add    eax,0xffffffff
   1400292c3:	setne  al
   1400292c6:	test   al,al
   1400292c8:	jne    0x1400292dc
   1400292ca:	mov    rcx,QWORD PTR [rsp+0x30]
   1400292cf:	lea    rdx,[rip+0xffffffffffffe5ca]        # 0x1400278a0
   1400292d6:	call   QWORD PTR [rip+0x258c]        # 0x14002b868
   1400292dc:	lea    rcx,[rsp+0xa0]
   1400292e4:	call   QWORD PTR [rip+0x20b6]        # 0x14002b3a0
   1400292ea:	mov    rbx,QWORD PTR [rsp+0x50]
   1400292ef:	mov    eax,DWORD PTR [rbx]
   1400292f1:	test   eax,eax
   1400292f3:	je     0x14002930d
   1400292f5:	cmp    eax,0xffffffff
   1400292f8:	je     0x14002934b
   1400292fa:	lock xadd DWORD PTR [rbx],ebp
   1400292fe:	add    ebp,0xffffffff
   140029301:	setne  al
   140029304:	test   al,al
   140029306:	jne    0x14002934b
   140029308:	mov    rbx,QWORD PTR [rsp+0x50]
   14002930d:	movsxd rax,DWORD PTR [rbx+0xc]
   140029311:	lea    rdi,[rbx+rax*8+0x10]
   140029316:	movsxd rax,DWORD PTR [rbx+0x8]
   14002931a:	lea    rsi,[rbx+rax*8+0x10]
   14002931f:	cmp    rsi,rdi
   140029322:	je     0x140029342
   140029324:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140029330:	sub    rdi,0x8
   140029334:	mov    rcx,rdi
   140029337:	call   QWORD PTR [rip+0x255b]        # 0x14002b898
   14002933d:	cmp    rdi,rsi
   140029340:	jne    0x140029330
   140029342:	mov    rcx,rbx
   140029345:	call   QWORD PTR [rip+0x2525]        # 0x14002b870
   14002934b:	lea    rcx,[rsp+0x40]
   140029350:	call   QWORD PTR [rip+0x224a]        # 0x14002b5a0
   140029356:	mov    rbx,QWORD PTR [rsp+0x298]
   14002935e:	mov    al,0x1
   140029360:	add    rsp,0x250
   140029367:	pop    r15
   140029369:	pop    r14
   14002936b:	pop    r13
   14002936d:	pop    r12
   14002936f:	pop    rdi
   140029370:	pop    rsi
   140029371:	pop    rbp
   140029372:	ret    
   140029373:	int3   
   140029374:	int3   
   140029375:	int3   
   140029376:	int3   
   140029377:	int3   
   140029378:	int3   
   140029379:	int3   
   14002937a:	int3   
   14002937b:	int3   
   14002937c:	int3   
   14002937d:	int3   
   14002937e:	int3   
   14002937f:	int3   
   140029380:	rex push rdi
   140029382:	sub    rsp,0x70
   140029386:	lea    rcx,[rsp+0x40]
   14002938b:	call   QWORD PTR [rip+0x24ff]        # 0x14002b890
   140029391:	lea    rcx,[rsp+0x48]
   140029396:	call   QWORD PTR [rip+0x24f4]        # 0x14002b890
   14002939c:	or     rcx,0xffffffffffffffff
   1400293a0:	lea    rdx,[rip+0x57c5]        # 0x14002eb6c
   1400293a7:	mov    QWORD PTR [rsp+0x38],rdx
   1400293ac:	mov    rdi,rdx
   1400293af:	xor    eax,eax
   1400293b1:	repnz scas al,BYTE PTR es:[rdi]
   1400293b3:	lea    rdx,[rsp+0x30]
   1400293b8:	mov    QWORD PTR [rsp+0x50],0x0
   1400293c1:	not    rcx
   1400293c4:	mov    QWORD PTR [rsp+0x58],0x0
   1400293cd:	mov    DWORD PTR [rsp+0x64],0xffffffff
   1400293d5:	dec    rcx
   1400293d8:	mov    DWORD PTR [rsp+0x30],ecx
   1400293dc:	lea    rcx,[rsp+0x40]
   1400293e1:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   1400293e6:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   1400293ec:	call   QWORD PTR [rip+0x211e]        # 0x14002b510
   1400293f2:	lea    r8,[rip+0x5757]        # 0x14002eb50
   1400293f9:	lea    rdx,[rip+0x3fb0]        # 0x14002d3b0
   140029400:	lea    rcx,[rsp+0x80]
   140029408:	xor    r9d,r9d
   14002940b:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140029413:	call   QWORD PTR [rip+0x248f]        # 0x14002b8a8
   140029419:	lea    rdx,[rsp+0x80]
   140029421:	lea    rcx,[rsp+0x48]
   140029426:	call   QWORD PTR [rip+0x2484]        # 0x14002b8b0
   14002942c:	lea    rcx,[rsp+0x80]
   140029434:	call   QWORD PTR [rip+0x245e]        # 0x14002b898
   14002943a:	lea    rcx,[rip+0xffffffffffffacbf]        # 0x140024100
   140029441:	mov    DWORD PTR [rsp+0x60],0x0
   140029449:	mov    QWORD PTR [rsp+0x50],rcx
   14002944e:	lea    rcx,[rip+0xffffffffffffe75b]        # 0x140027bb0
   140029455:	mov    DWORD PTR [rsp+0x64],0x1
   14002945d:	mov    QWORD PTR [rsp+0x58],rcx
   140029462:	lea    rcx,[rsp+0x40]
   140029467:	call   0x140008520
   14002946c:	lea    rcx,[rsp+0x48]
   140029471:	call   QWORD PTR [rip+0x2421]        # 0x14002b898
   140029477:	lea    rcx,[rsp+0x40]
   14002947c:	call   QWORD PTR [rip+0x2416]        # 0x14002b898
   140029482:	mov    eax,0x1
   140029487:	add    rsp,0x70
   14002948b:	pop    rdi
   14002948c:	ret    
   14002948d:	int3   
   14002948e:	jmp    QWORD PTR [rip+0x255c]        # 0x14002b9f0
   140029494:	jmp    QWORD PTR [rip+0x254e]        # 0x14002b9e8
   14002949a:	jmp    QWORD PTR [rip+0x2540]        # 0x14002b9e0
   1400294a0:	jmp    QWORD PTR [rip+0x2532]        # 0x14002b9d8
   1400294a6:	jmp    QWORD PTR [rip+0x2524]        # 0x14002b9d0
   1400294ac:	jmp    QWORD PTR [rip+0x2516]        # 0x14002b9c8
   1400294b2:	jmp    QWORD PTR [rip+0x2508]        # 0x14002b9c0
   1400294b8:	jmp    QWORD PTR [rip+0x24fa]        # 0x14002b9b8
   1400294be:	jmp    QWORD PTR [rip+0x24ec]        # 0x14002b9b0
   1400294c4:	jmp    QWORD PTR [rip+0x24de]        # 0x14002b9a8
   1400294ca:	jmp    QWORD PTR [rip+0x24d0]        # 0x14002b9a0
   1400294d0:	jmp    QWORD PTR [rip+0x24c2]        # 0x14002b998
   1400294d6:	jmp    QWORD PTR [rip+0x24b4]        # 0x14002b990
   1400294dc:	jmp    QWORD PTR [rip+0x24a6]        # 0x14002b988
   1400294e2:	jmp    QWORD PTR [rip+0x2498]        # 0x14002b980
   1400294e8:	jmp    QWORD PTR [rip+0x248a]        # 0x14002b978
   1400294ee:	jmp    QWORD PTR [rip+0x247c]        # 0x14002b970
   1400294f4:	jmp    QWORD PTR [rip+0x246e]        # 0x14002b968
   1400294fa:	jmp    QWORD PTR [rip+0x2460]        # 0x14002b960
   140029500:	jmp    QWORD PTR [rip+0x2452]        # 0x14002b958
   140029506:	jmp    QWORD PTR [rip+0x2444]        # 0x14002b950
   14002950c:	jmp    QWORD PTR [rip+0x2436]        # 0x14002b948
   140029512:	jmp    QWORD PTR [rip+0x2428]        # 0x14002b940
   140029518:	jmp    0x14002952a
   14002951d:	int3   
   14002951e:	jmp    QWORD PTR [rip+0x1c24]        # 0x14002b148
   140029524:	jmp    QWORD PTR [rip+0x1c16]        # 0x14002b140
   14002952a:	jmp    QWORD PTR [rip+0x1c08]        # 0x14002b138
   140029530:	jmp    QWORD PTR [rip+0x1bfa]        # 0x14002b130
   140029536:	int3   
   140029537:	int3   
   140029538:	rex push rbx
   14002953a:	sub    rsp,0x20
   14002953e:	mov    rbx,rcx
   140029541:	mov    rcx,QWORD PTR [rip+0xc250]        # 0x140035798
   140029548:	call   QWORD PTR [rip+0x1b7a]        # 0x14002b0c8
   14002954e:	mov    QWORD PTR [rsp+0x38],rax
   140029553:	cmp    rax,0xffffffffffffffff
   140029557:	jne    0x140029564
   140029559:	mov    rcx,rbx
   14002955c:	call   QWORD PTR [rip+0x1b6e]        # 0x14002b0d0
   140029562:	jmp    0x1400295e2
   140029564:	mov    ecx,0x8
   140029569:	call   0x140029974
   14002956e:	nop
   14002956f:	mov    rcx,QWORD PTR [rip+0xc222]        # 0x140035798
   140029576:	call   QWORD PTR [rip+0x1b4c]        # 0x14002b0c8
   14002957c:	mov    QWORD PTR [rsp+0x38],rax
   140029581:	mov    rcx,QWORD PTR [rip+0xc208]        # 0x140035790
   140029588:	call   QWORD PTR [rip+0x1b3a]        # 0x14002b0c8
   14002958e:	mov    QWORD PTR [rsp+0x40],rax
   140029593:	mov    rcx,rbx
   140029596:	call   QWORD PTR [rip+0x1b44]        # 0x14002b0e0
   14002959c:	mov    rcx,rax
   14002959f:	lea    r8,[rsp+0x40]
   1400295a4:	lea    rdx,[rsp+0x38]
   1400295a9:	call   0x14002996e
   1400295ae:	mov    rbx,rax
   1400295b1:	mov    rcx,QWORD PTR [rsp+0x38]
   1400295b6:	call   QWORD PTR [rip+0x1b24]        # 0x14002b0e0
   1400295bc:	mov    QWORD PTR [rip+0xc1d5],rax        # 0x140035798
   1400295c3:	mov    rcx,QWORD PTR [rsp+0x40]
   1400295c8:	call   QWORD PTR [rip+0x1b12]        # 0x14002b0e0
   1400295ce:	mov    QWORD PTR [rip+0xc1bb],rax        # 0x140035790
   1400295d5:	mov    ecx,0x8
   1400295da:	call   0x140029968
   1400295df:	mov    rax,rbx
   1400295e2:	add    rsp,0x20
   1400295e6:	pop    rbx
   1400295e7:	ret    
   1400295e8:	sub    rsp,0x28
   1400295ec:	call   0x140029538
   1400295f1:	neg    rax
   1400295f4:	sbb    eax,eax
   1400295f6:	neg    eax
   1400295f8:	dec    eax
   1400295fa:	add    rsp,0x28
   1400295fe:	ret    
   1400295ff:	int3   
   140029600:	jmp    QWORD PTR [rip+0x1b1a]        # 0x14002b120
   140029606:	jmp    QWORD PTR [rip+0x1b0c]        # 0x14002b118
   14002960c:	jmp    QWORD PTR [rip+0x1afe]        # 0x14002b110
   140029612:	int3   
   140029613:	int3   
   140029614:	mov    QWORD PTR [rsp+0x8],rbx
   140029619:	mov    QWORD PTR [rsp+0x10],rsi
   14002961e:	push   rdi
   14002961f:	sub    rsp,0x20
   140029623:	mov    esi,edx
   140029625:	mov    rbx,rcx
   140029628:	test   dl,0x2
   14002962b:	je     0x140029657
   14002962d:	mov    r8d,DWORD PTR [rcx-0x8]
   140029631:	lea    r9,[rip+0x666]        # 0x140029c9e
   140029638:	mov    edx,0x18
   14002963d:	call   0x1400299c8
   140029642:	test   sil,0x1
   140029646:	je     0x140029651
   140029648:	lea    rcx,[rbx-0x8]
   14002964c:	call   0x140029524
   140029651:	lea    rax,[rbx-0x8]
   140029655:	jmp    0x14002966d
   140029657:	call   0x140029c9e
   14002965c:	test   sil,0x1
   140029660:	je     0x14002966a
   140029662:	mov    rcx,rbx
   140029665:	call   0x140029524
   14002966a:	mov    rax,rbx
   14002966d:	mov    rbx,QWORD PTR [rsp+0x30]
   140029672:	mov    rsi,QWORD PTR [rsp+0x38]
   140029677:	add    rsp,0x20
   14002967b:	pop    rdi
   14002967c:	ret    
   14002967d:	int3   
   14002967e:	int3   
   14002967f:	int3   
   140029680:	sub    rsp,0x38
   140029684:	lea    rcx,[rip+0x439]        # 0x140029ac4
   14002968b:	call   0x1400295e8
   140029690:	mov    r11d,DWORD PTR [rip+0xc0d9]        # 0x140035770
   140029697:	mov    r9d,DWORD PTR [rip+0xc0ce]        # 0x14003576c
   14002969e:	lea    rax,[rip+0xc0b7]        # 0x14003575c
   1400296a5:	lea    r8,[rip+0xc09c]        # 0x140035748
   1400296ac:	lea    rdx,[rip+0xc09d]        # 0x140035750
   1400296b3:	lea    rcx,[rip+0xc086]        # 0x140035740
   1400296ba:	mov    DWORD PTR [rip+0xc09b],r11d        # 0x14003575c
   1400296c1:	mov    QWORD PTR [rsp+0x20],rax
   1400296c6:	call   QWORD PTR [rip+0x19ec]        # 0x14002b0b8
   1400296cc:	mov    DWORD PTR [rip+0xc086],eax        # 0x140035758
   1400296d2:	test   eax,eax
   1400296d4:	jns    0x1400296e0
   1400296d6:	mov    ecx,0x8
   1400296db:	call   0x140029a84
   1400296e0:	add    rsp,0x38
   1400296e4:	ret    
   1400296e5:	int3   
   1400296e6:	int3   
   1400296e7:	int3   
   1400296e8:	mov    QWORD PTR [rsp+0x8],rsi
   1400296ed:	push   rdi
   1400296ee:	sub    rsp,0x20
   1400296f2:	mov    rax,QWORD PTR gs:0x30
   1400296fb:	mov    rdi,QWORD PTR [rax+0x8]
   1400296ff:	xor    esi,esi
   140029701:	xor    eax,eax
   140029703:	lock cmpxchg QWORD PTR [rip+0xc074],rdi        # 0x140035780
   14002970c:	je     0x140029729
   14002970e:	cmp    rax,rdi
   140029711:	jne    0x14002971c
   140029713:	mov    edi,0x1
   140029718:	mov    esi,edi
   14002971a:	jmp    0x14002972e
   14002971c:	mov    ecx,0x3e8
   140029721:	call   QWORD PTR [rip+0x1909]        # 0x14002b030
   140029727:	jmp    0x140029701
   140029729:	mov    edi,0x1
   14002972e:	mov    eax,DWORD PTR [rip+0xc048]        # 0x14003577c
   140029734:	cmp    eax,edi
   140029736:	jne    0x140029744
   140029738:	mov    ecx,0x1f
   14002973d:	call   0x140029a84
   140029742:	jmp    0x14002977b
   140029744:	mov    eax,DWORD PTR [rip+0xc032]        # 0x14003577c
   14002974a:	test   eax,eax
   14002974c:	jne    0x140029775
   14002974e:	mov    DWORD PTR [rip+0xc028],edi        # 0x14003577c
   140029754:	lea    rdx,[rip+0x2305]        # 0x14002ba60
   14002975b:	lea    rcx,[rip+0x22e6]        # 0x14002ba48
   140029762:	call   0x140029bd8
   140029767:	test   eax,eax
   140029769:	je     0x14002977b
   14002976b:	mov    eax,0xff
   140029770:	jmp    0x14002985d
   140029775:	mov    DWORD PTR [rip+0xbfe9],edi        # 0x140035764
   14002977b:	mov    eax,DWORD PTR [rip+0xbffb]        # 0x14003577c
   140029781:	cmp    eax,edi
   140029783:	jne    0x1400297a2
   140029785:	lea    rdx,[rip+0x22b4]        # 0x14002ba40
   14002978c:	lea    rcx,[rip+0x2275]        # 0x14002ba08
   140029793:	call   0x140029bd2
   140029798:	mov    DWORD PTR [rip+0xbfda],0x2        # 0x14003577c
   1400297a2:	test   esi,esi
   1400297a4:	jne    0x1400297af
   1400297a6:	xor    eax,eax
   1400297a8:	xchg   QWORD PTR [rip+0xbfd1],rax        # 0x140035780
   1400297af:	cmp    QWORD PTR [rip+0xbfd1],0x0        # 0x140035788
   1400297b7:	je     0x1400297d8
   1400297b9:	lea    rcx,[rip+0xbfc8]        # 0x140035788
   1400297c0:	call   0x140029b90
   1400297c5:	test   eax,eax
   1400297c7:	je     0x1400297d8
   1400297c9:	xor    r8d,r8d
   1400297cc:	lea    edx,[r8+0x2]
   1400297d0:	xor    ecx,ecx
   1400297d2:	call   QWORD PTR [rip+0xbfb0]        # 0x140035788
   1400297d8:	mov    rcx,QWORD PTR [rip+0x1979]        # 0x14002b158
   1400297df:	mov    rax,QWORD PTR [rip+0xbf62]        # 0x140035748
   1400297e6:	mov    QWORD PTR [rcx],rax
   1400297e9:	mov    r8,QWORD PTR [rip+0xbf58]        # 0x140035748
   1400297f0:	mov    rdx,QWORD PTR [rip+0xbf59]        # 0x140035750
   1400297f7:	mov    ecx,DWORD PTR [rip+0xbf43]        # 0x140035740
   1400297fd:	call   0x140002940
   140029802:	mov    DWORD PTR [rip+0xbf58],eax        # 0x140035760
   140029808:	cmp    DWORD PTR [rip+0xbf35],0x0        # 0x140035744
   14002980f:	jne    0x140029819
   140029811:	mov    ecx,eax
   140029813:	call   QWORD PTR [rip+0x1937]        # 0x14002b150
   140029819:	cmp    DWORD PTR [rip+0xbf44],0x0        # 0x140035764
   140029820:	jne    0x14002982e
   140029822:	call   QWORD PTR [rip+0x18b0]        # 0x14002b0d8
   140029828:	mov    eax,DWORD PTR [rip+0xbf32]        # 0x140035760
   14002982e:	jmp    0x14002985d
   140029830:	mov    DWORD PTR [rip+0xbf2a],eax        # 0x140035760
   140029836:	cmp    DWORD PTR [rip+0xbf07],0x0        # 0x140035744
   14002983d:	jne    0x140029848
   14002983f:	mov    ecx,eax
   140029841:	call   QWORD PTR [rip+0x1861]        # 0x14002b0a8
   140029847:	int3   
   140029848:	cmp    DWORD PTR [rip+0xbf15],0x0        # 0x140035764
   14002984f:	jne    0x14002985d
   140029851:	call   QWORD PTR [rip+0x1881]        # 0x14002b0d8
   140029857:	mov    eax,DWORD PTR [rip+0xbf03]        # 0x140035760
   14002985d:	mov    rsi,QWORD PTR [rsp+0x30]
   140029862:	add    rsp,0x20
   140029866:	pop    rdi
   140029867:	ret    
   140029868:	sub    rsp,0x28
   14002986c:	mov    eax,0x5a4d
   140029871:	cmp    WORD PTR [rip+0xfffffffffffd6788],ax        # 0x140000000
   140029878:	je     0x14002987e
   14002987a:	xor    eax,eax
   14002987c:	jmp    0x1400298cd
   14002987e:	movsxd rcx,DWORD PTR [rip+0xfffffffffffd67b7]        # 0x14000003c
   140029885:	lea    rax,[rip+0xfffffffffffd6774]        # 0x140000000
   14002988c:	add    rcx,rax
   14002988f:	cmp    DWORD PTR [rcx],0x4550
   140029895:	jne    0x14002987a
   140029897:	movzx  eax,WORD PTR [rcx+0x18]
   14002989b:	cmp    eax,0x10b
   1400298a0:	je     0x1400298bc
   1400298a2:	cmp    eax,0x20b
   1400298a7:	jne    0x14002987a
   1400298a9:	xor    eax,eax
   1400298ab:	cmp    DWORD PTR [rcx+0x84],0xe
   1400298b2:	jbe    0x1400298cd
   1400298b4:	cmp    DWORD PTR [rcx+0xf8],eax
   1400298ba:	jmp    0x1400298ca
   1400298bc:	xor    eax,eax
   1400298be:	cmp    DWORD PTR [rcx+0x74],0xe
   1400298c2:	jbe    0x1400298cd
   1400298c4:	cmp    DWORD PTR [rcx+0xe8],eax
   1400298ca:	setne  al
   1400298cd:	mov    ecx,0x1
   1400298d2:	mov    DWORD PTR [rip+0xbe6c],eax        # 0x140035744
   1400298d8:	call   QWORD PTR [rip+0x18b2]        # 0x14002b190
   1400298de:	or     rcx,0xffffffffffffffff
   1400298e2:	call   QWORD PTR [rip+0x17f8]        # 0x14002b0e0
   1400298e8:	mov    rcx,QWORD PTR [rip+0x1899]        # 0x14002b188
   1400298ef:	mov    QWORD PTR [rip+0xbe9a],rax        # 0x140035790
   1400298f6:	mov    QWORD PTR [rip+0xbe9b],rax        # 0x140035798
   1400298fd:	mov    eax,DWORD PTR [rip+0xbe75]        # 0x140035778
   140029903:	mov    DWORD PTR [rcx],eax
   140029905:	mov    rdx,QWORD PTR [rip+0x1874]        # 0x14002b180
   14002990c:	mov    eax,DWORD PTR [rip+0xbe62]        # 0x140035774
   140029912:	mov    DWORD PTR [rdx],eax
   140029914:	call   0x140029a8c
   140029919:	call   0x140029be0
   14002991e:	cmp    DWORD PTR [rip+0xbc77],0x0        # 0x14003559c
   140029925:	jne    0x140029934
   140029927:	lea    rcx,[rip+0x2b2]        # 0x140029be0
   14002992e:	call   QWORD PTR [rip+0x1844]        # 0x14002b178
   140029934:	cmp    DWORD PTR [rip+0xbc5d],0xffffffff        # 0x140035598
   14002993b:	jne    0x140029946
   14002993d:	or     ecx,0xffffffff
   140029940:	call   QWORD PTR [rip+0x182a]        # 0x14002b170
   140029946:	xor    eax,eax
   140029948:	add    rsp,0x28
   14002994c:	ret    
   14002994d:	int3   
   14002994e:	int3   
   14002994f:	int3   
   140029950:	sub    rsp,0x28
   140029954:	call   0x140029be4
   140029959:	add    rsp,0x28
   14002995d:	jmp    0x1400296e8
   140029962:	jmp    QWORD PTR [rip+0x1790]        # 0x14002b0f8
   140029968:	jmp    QWORD PTR [rip+0x1782]        # 0x14002b0f0
   14002996e:	jmp    QWORD PTR [rip+0x1774]        # 0x14002b0e8
   140029974:	jmp    QWORD PTR [rip+0x182e]        # 0x14002b1a8
   14002997a:	int3   
   14002997b:	int3   
   14002997c:	mov    QWORD PTR [rsp+0x10],rbx
   140029981:	mov    DWORD PTR [rsp+0x18],r8d
   140029986:	mov    QWORD PTR [rsp+0x8],rcx
   14002998b:	push   rsi
   14002998c:	push   rdi
   14002998d:	push   r12
   14002998f:	sub    rsp,0x40
   140029993:	mov    rsi,r9
   140029996:	mov    edi,r8d
   140029999:	mov    r12,rdx
   14002999c:	mov    rbx,rcx
   14002999f:	sub    edi,0x1
   1400299a2:	mov    DWORD PTR [rsp+0x70],edi
   1400299a6:	js     0x1400299b7
   1400299a8:	sub    rbx,r12
   1400299ab:	mov    QWORD PTR [rsp+0x60],rbx
   1400299b0:	mov    rcx,rbx
   1400299b3:	call   rsi
   1400299b5:	jmp    0x14002999f
   1400299b7:	jmp    0x1400299b9
   1400299b9:	mov    rbx,QWORD PTR [rsp+0x68]
   1400299be:	add    rsp,0x40
   1400299c2:	pop    r12
   1400299c4:	pop    rdi
   1400299c5:	pop    rsi
   1400299c6:	ret    
   1400299c7:	int3   
   1400299c8:	mov    rax,rsp
   1400299cb:	mov    QWORD PTR [rax+0x20],r9
   1400299cf:	mov    DWORD PTR [rax+0x18],r8d
   1400299d3:	mov    QWORD PTR [rax+0x10],rdx
   1400299d7:	push   rbx
   1400299d8:	push   rsi
   1400299d9:	push   rdi
   1400299da:	push   r12
   1400299dc:	sub    rsp,0x38
   1400299e0:	mov    r12,r9
   1400299e3:	movsxd rdi,r8d
   1400299e6:	mov    rsi,rdx
   1400299e9:	and    DWORD PTR [rax-0x38],0x0
   1400299ed:	mov    rbx,rdi
   1400299f0:	imul   rbx,rdx
   1400299f4:	add    rbx,rcx
   1400299f7:	mov    QWORD PTR [rax+0x8],rbx
   1400299fb:	sub    edi,0x1
   1400299fe:	mov    DWORD PTR [rsp+0x70],edi
   140029a02:	js     0x140029a14
   140029a04:	sub    rbx,rsi
   140029a07:	mov    QWORD PTR [rsp+0x60],rbx
   140029a0c:	mov    rcx,rbx
   140029a0f:	call   r12
   140029a12:	jmp    0x1400299fb
   140029a14:	mov    DWORD PTR [rsp+0x20],0x1
   140029a1c:	add    rsp,0x38
   140029a20:	pop    r12
   140029a22:	pop    rdi
   140029a23:	pop    rsi
   140029a24:	pop    rbx
   140029a25:	ret    
   140029a26:	int3   
   140029a27:	int3   
   140029a28:	sub    rsp,0x28
   140029a2c:	mov    rax,QWORD PTR [rcx]
   140029a2f:	cmp    DWORD PTR [rax],0xe06d7363
   140029a35:	jne    0x140029a62
   140029a37:	cmp    DWORD PTR [rax+0x18],0x4
   140029a3b:	jne    0x140029a62
   140029a3d:	mov    eax,DWORD PTR [rax+0x20]
   140029a40:	cmp    eax,0x19930520
   140029a45:	je     0x140029a5c
   140029a47:	cmp    eax,0x19930521
   140029a4c:	je     0x140029a5c
   140029a4e:	cmp    eax,0x19930522
   140029a53:	je     0x140029a5c
   140029a55:	cmp    eax,0x1994000
   140029a5a:	jne    0x140029a62
   140029a5c:	call   0x140029c98
   140029a61:	int3   
   140029a62:	xor    eax,eax
   140029a64:	add    rsp,0x28
   140029a68:	ret    
   140029a69:	int3   
   140029a6a:	int3   
   140029a6b:	int3   
   140029a6c:	sub    rsp,0x28
   140029a70:	lea    rcx,[rip+0xffffffffffffffb1]        # 0x140029a28
   140029a77:	call   QWORD PTR [rip+0x15ab]        # 0x14002b028
   140029a7d:	xor    eax,eax
   140029a7f:	add    rsp,0x28
   140029a83:	ret    
   140029a84:	jmp    QWORD PTR [rip+0x1636]        # 0x14002b0c0
   140029a8a:	int3   
   140029a8b:	int3   
   140029a8c:	mov    QWORD PTR [rsp+0x8],rbx
   140029a91:	push   rdi
   140029a92:	sub    rsp,0x20
   140029a96:	lea    rbx,[rip+0x5603]        # 0x14002f0a0
   140029a9d:	lea    rdi,[rip+0x55fc]        # 0x14002f0a0
   140029aa4:	jmp    0x140029ab4
   140029aa6:	mov    rax,QWORD PTR [rbx]
   140029aa9:	test   rax,rax
   140029aac:	je     0x140029ab0
   140029aae:	call   rax
   140029ab0:	add    rbx,0x8
   140029ab4:	cmp    rbx,rdi
   140029ab7:	jb     0x140029aa6
   140029ab9:	mov    rbx,QWORD PTR [rsp+0x30]
   140029abe:	add    rsp,0x20
   140029ac2:	pop    rdi
   140029ac3:	ret    
   140029ac4:	mov    QWORD PTR [rsp+0x8],rbx
   140029ac9:	push   rdi
   140029aca:	sub    rsp,0x20
   140029ace:	lea    rbx,[rip+0x55db]        # 0x14002f0b0
   140029ad5:	lea    rdi,[rip+0x55d4]        # 0x14002f0b0
   140029adc:	jmp    0x140029aec
   140029ade:	mov    rax,QWORD PTR [rbx]
   140029ae1:	test   rax,rax
   140029ae4:	je     0x140029ae8
   140029ae6:	call   rax
   140029ae8:	add    rbx,0x8
   140029aec:	cmp    rbx,rdi
   140029aef:	jb     0x140029ade
   140029af1:	mov    rbx,QWORD PTR [rsp+0x30]
   140029af6:	add    rsp,0x20
   140029afa:	pop    rdi
   140029afb:	ret    
   140029afc:	jmp    QWORD PTR [rip+0x15ae]        # 0x14002b0b0
   140029b02:	int3   
   140029b03:	int3   
   140029b04:	int3   
   140029b05:	int3   
   140029b06:	int3   
   140029b07:	int3   
   140029b08:	int3   
   140029b09:	int3   
   140029b0a:	int3   
   140029b0b:	int3   
   140029b0c:	int3   
   140029b0d:	int3   
   140029b0e:	int3   
   140029b0f:	int3   
   140029b10:	mov    rax,rcx
   140029b13:	mov    ecx,0x5a4d
   140029b18:	cmp    WORD PTR [rax],cx
   140029b1b:	je     0x140029b20
   140029b1d:	xor    eax,eax
   140029b1f:	ret    
   140029b20:	movsxd rcx,DWORD PTR [rax+0x3c]
   140029b24:	add    rcx,rax
   140029b27:	xor    eax,eax
   140029b29:	cmp    DWORD PTR [rcx],0x4550
   140029b2f:	jne    0x140029b3d
   140029b31:	mov    edx,0x20b
   140029b36:	cmp    WORD PTR [rcx+0x18],dx
   140029b3a:	sete   al
   140029b3d:	repz ret 
   140029b3f:	int3   
   140029b40:	movsxd r8,DWORD PTR [rcx+0x3c]
   140029b44:	xor    r9d,r9d
   140029b47:	mov    r10,rdx
   140029b4a:	add    r8,rcx
   140029b4d:	movzx  eax,WORD PTR [r8+0x14]
   140029b52:	movzx  r11d,WORD PTR [r8+0x6]
   140029b57:	lea    rcx,[rax+r8*1+0x18]
   140029b5c:	test   r11d,r11d
   140029b5f:	je     0x140029b7f
   140029b61:	mov    edx,DWORD PTR [rcx+0xc]
   140029b64:	cmp    r10,rdx
   140029b67:	jb     0x140029b73
   140029b69:	mov    eax,DWORD PTR [rcx+0x8]
   140029b6c:	add    eax,edx
   140029b6e:	cmp    r10,rax
   140029b71:	jb     0x140029b82
   140029b73:	inc    r9d
   140029b76:	add    rcx,0x28
   140029b7a:	cmp    r9d,r11d
   140029b7d:	jb     0x140029b61
   140029b7f:	xor    eax,eax
   140029b81:	ret    
   140029b82:	mov    rax,rcx
   140029b85:	ret    
   140029b86:	int3   
   140029b87:	int3   
   140029b88:	int3   
   140029b89:	int3   
   140029b8a:	int3   
   140029b8b:	int3   
   140029b8c:	int3   
   140029b8d:	int3   
   140029b8e:	int3   
   140029b8f:	int3   
   140029b90:	sub    rsp,0x28
   140029b94:	mov    r8,rcx
   140029b97:	lea    r9,[rip+0xfffffffffffd6462]        # 0x140000000
   140029b9e:	mov    rcx,r9
   140029ba1:	call   0x140029b10
   140029ba6:	test   eax,eax
   140029ba8:	je     0x140029bcc
   140029baa:	sub    r8,r9
   140029bad:	mov    rdx,r8
   140029bb0:	mov    rcx,r9
   140029bb3:	call   0x140029b40
   140029bb8:	test   rax,rax
   140029bbb:	je     0x140029bcc
   140029bbd:	mov    eax,DWORD PTR [rax+0x24]
   140029bc0:	shr    eax,0x1f
   140029bc3:	not    eax
   140029bc5:	and    eax,0x1
   140029bc8:	jmp    0x140029bcc
   140029bca:	xor    eax,eax
   140029bcc:	add    rsp,0x28
   140029bd0:	ret    
   140029bd1:	int3   
   140029bd2:	jmp    QWORD PTR [rip+0x1588]        # 0x14002b160
   140029bd8:	jmp    QWORD PTR [rip+0x158a]        # 0x14002b168
   140029bde:	int3   
   140029bdf:	int3   
   140029be0:	xor    eax,eax
   140029be2:	ret    
   140029be3:	int3   
   140029be4:	mov    QWORD PTR [rsp+0x18],rbx
   140029be9:	push   rdi
   140029bea:	sub    rsp,0x20
   140029bee:	mov    rax,QWORD PTR [rip+0xb9ab]        # 0x1400355a0
   140029bf5:	and    QWORD PTR [rsp+0x30],0x0
   140029bfb:	movabs rdi,0x2b992ddfa232
   140029c05:	cmp    rax,rdi
   140029c08:	je     0x140029c16
   140029c0a:	not    rax
   140029c0d:	mov    QWORD PTR [rip+0xb994],rax        # 0x1400355a8
   140029c14:	jmp    0x140029c8c
   140029c16:	lea    rcx,[rsp+0x30]
   140029c1b:	call   QWORD PTR [rip+0x13df]        # 0x14002b000
   140029c21:	mov    rbx,QWORD PTR [rsp+0x30]
   140029c26:	call   QWORD PTR [rip+0x13dc]        # 0x14002b008
   140029c2c:	mov    r11d,eax
   140029c2f:	xor    rbx,r11
   140029c32:	call   QWORD PTR [rip+0x13d8]        # 0x14002b010
   140029c38:	mov    r11d,eax
   140029c3b:	xor    rbx,r11
   140029c3e:	call   QWORD PTR [rip+0x13d4]        # 0x14002b018
   140029c44:	lea    rcx,[rsp+0x38]
   140029c49:	mov    r11d,eax
   140029c4c:	xor    rbx,r11
   140029c4f:	call   QWORD PTR [rip+0x13cb]        # 0x14002b020
   140029c55:	mov    r11,QWORD PTR [rsp+0x38]
   140029c5a:	xor    r11,rbx
   140029c5d:	movabs rax,0xffffffffffff
   140029c67:	and    r11,rax
   140029c6a:	movabs rax,0x2b992ddfa233
   140029c74:	cmp    r11,rdi
   140029c77:	cmove  r11,rax
   140029c7b:	mov    QWORD PTR [rip+0xb91e],r11        # 0x1400355a0
   140029c82:	not    r11
   140029c85:	mov    QWORD PTR [rip+0xb91c],r11        # 0x1400355a8
   140029c8c:	mov    rbx,QWORD PTR [rsp+0x40]
   140029c91:	add    rsp,0x20
   140029c95:	pop    rdi
   140029c96:	ret    
   140029c97:	int3   
   140029c98:	jmp    QWORD PTR [rip+0x14fa]        # 0x14002b198
   140029c9e:	jmp    QWORD PTR [rip+0x14fc]        # 0x14002b1a0
   140029ca4:	int3   
   140029ca5:	int3   
   140029ca6:	int3   
   140029ca7:	int3   
   140029ca8:	int3   
   140029ca9:	int3   
   140029caa:	int3   
   140029cab:	int3   
   140029cac:	int3   
   140029cad:	int3   
   140029cae:	int3   
   140029caf:	int3   
   140029cb0:	mov    QWORD PTR [rsp+0x10],rdx
   140029cb5:	push   rbx
   140029cb6:	push   rbp
   140029cb7:	sub    rsp,0x28
   140029cbb:	mov    rbp,rdx
   140029cbe:	mov    rdx,QWORD PTR [rbp+0x70]
   140029cc2:	mov    rax,QWORD PTR [rdx]
   140029cc5:	movsxd rcx,DWORD PTR [rax+0x4]
   140029cc9:	add    rcx,rdx
   140029ccc:	mov    r8b,0x1
   140029ccf:	mov    edx,0x4
   140029cd4:	call   QWORD PTR [rip+0x1386]        # 0x14002b060
   140029cda:	nop
   140029cdb:	lea    rax,[rip+0xfffffffffffd7524]        # 0x140001206
   140029ce2:	jmp    0x140029ce4
   140029ce4:	add    rsp,0x28
   140029ce8:	pop    rbp
   140029ce9:	pop    rbx
   140029cea:	ret    
   140029ceb:	int3   
   140029cec:	rex push rbp
   140029cee:	sub    rsp,0x20
   140029cf2:	mov    rbp,rdx
   140029cf5:	mov    ecx,0x8
   140029cfa:	call   0x140029968
   140029cff:	add    rsp,0x20
   140029d03:	pop    rbp
   140029d04:	ret    
   140029d05:	rex push rbp
   140029d07:	sub    rsp,0x20
   140029d0b:	mov    rbp,rdx
   140029d0e:	mov    rax,QWORD PTR [rcx]
   140029d11:	mov    rdx,rcx
   140029d14:	mov    ecx,DWORD PTR [rax]
   140029d16:	call   0x140029afc
   140029d1b:	add    rsp,0x20
   140029d1f:	pop    rbp
   140029d20:	ret    
   140029d21:	rex push rbp
   140029d23:	sub    rsp,0x20
   140029d27:	mov    rbp,rdx
   140029d2a:	mov    QWORD PTR [rbp+0x38],rcx
   140029d2e:	mov    QWORD PTR [rbp+0x28],rcx
   140029d32:	mov    rax,QWORD PTR [rbp+0x28]
   140029d36:	mov    rcx,QWORD PTR [rax]
   140029d39:	mov    QWORD PTR [rbp+0x30],rcx
   140029d3d:	mov    rax,QWORD PTR [rbp+0x30]
   140029d41:	cmp    DWORD PTR [rax],0xe06d7363
   140029d47:	je     0x140029d55
   140029d49:	mov    DWORD PTR [rbp+0x20],0x0
   140029d50:	mov    eax,DWORD PTR [rbp+0x20]
   140029d53:	jmp    0x140029d5a
   140029d55:	call   0x140029c98
   140029d5a:	add    rsp,0x20
   140029d5e:	pop    rbp
   140029d5f:	ret    
   140029d60:	rex push rbp
   140029d62:	sub    rsp,0x20
   140029d66:	mov    rbp,rdx
   140029d69:	cmp    DWORD PTR [rbp+0x20],0x0
   140029d6d:	jne    0x140029d84
   140029d6f:	mov    r9,QWORD PTR [rbp+0x78]
   140029d73:	mov    r8d,DWORD PTR [rbp+0x70]
   140029d77:	mov    rdx,QWORD PTR [rbp+0x68]
   140029d7b:	mov    rcx,QWORD PTR [rbp+0x60]
   140029d7f:	call   0x14002997c
   140029d84:	add    rsp,0x20
   140029d88:	pop    rbp
   140029d89:	ret    
   140029d8a:	int3   
   140029d8b:	int3   
   140029d8c:	int3   
   140029d8d:	int3   
   140029d8e:	int3   
   140029d8f:	int3   
   140029d90:	rex push rbp
   140029d92:	sub    rsp,0x20
   140029d96:	mov    rbp,rdx
   140029d99:	mov    rax,QWORD PTR [rcx]
   140029d9c:	xor    ecx,ecx
   140029d9e:	cmp    DWORD PTR [rax],0xc0000005
   140029da4:	sete   cl
   140029da7:	mov    eax,ecx
   140029da9:	mov    eax,ecx
   140029dab:	add    rsp,0x20
   140029daf:	pop    rbp
   140029db0:	ret    
   140029db1:	int3   
   140029db2:	int3   
   140029db3:	int3   
   140029db4:	int3   
   140029db5:	int3   
   140029db6:	int3   
   140029db7:	int3   
   140029db8:	int3   
   140029db9:	int3   
   140029dba:	int3   
   140029dbb:	int3   
   140029dbc:	int3   
   140029dbd:	int3   
   140029dbe:	int3   
   140029dbf:	int3   
   140029dc0:	jmp    0x1400102a0
   140029dc5:	int3   
   140029dc6:	int3   
   140029dc7:	int3   
   140029dc8:	int3   
   140029dc9:	int3   
   140029dca:	int3   
   140029dcb:	int3   
   140029dcc:	int3   
   140029dcd:	int3   
   140029dce:	int3   
   140029dcf:	int3   
   140029dd0:	jmp    0x1400116b0
   140029dd5:	int3   
   140029dd6:	int3   
   140029dd7:	int3   
   140029dd8:	int3   
   140029dd9:	int3   
   140029dda:	int3   
   140029ddb:	int3   
   140029ddc:	int3   
   140029ddd:	int3   
   140029dde:	int3   
   140029ddf:	int3   
   140029de0:	jmp    0x14001b990
   140029de5:	int3   
   140029de6:	int3   
   140029de7:	int3   
   140029de8:	int3   
   140029de9:	int3   
   140029dea:	int3   
   140029deb:	int3   
   140029dec:	int3   
   140029ded:	int3   
   140029dee:	int3   
   140029def:	int3   
   140029df0:	jmp    0x140022240
   140029df5:	int3   
   140029df6:	int3   
   140029df7:	int3   
   140029df8:	int3   
   140029df9:	int3   
   140029dfa:	int3   
   140029dfb:	int3   
   140029dfc:	int3   
   140029dfd:	int3   
   140029dfe:	int3   
   140029dff:	int3   
   140029e00:	jmp    0x140029380
   140029e05:	int3   
   140029e06:	int3   
   140029e07:	int3   
   140029e08:	int3   
   140029e09:	int3   
   140029e0a:	int3   
   140029e0b:	int3   
   140029e0c:	int3   
   140029e0d:	int3   
   140029e0e:	int3   
   140029e0f:	int3   
   140029e10:	lea    rcx,[rip+0xb7a9]        # 0x1400355c0
   140029e17:	rex.W jmp QWORD PTR [rip+0x1582]        # 0x14002b3a0
   140029e1e:	int3   
   140029e1f:	int3   
   140029e20:	rex push rsi
   140029e22:	sub    rsp,0x20
   140029e26:	mov    rsi,QWORD PTR [rip+0xb783]        # 0x1400355b0
   140029e2d:	mov    eax,DWORD PTR [rsi]
   140029e2f:	test   eax,eax
   140029e31:	je     0x140029e4a
   140029e33:	cmp    eax,0xffffffff
   140029e36:	je     0x140029eb5
   140029e38:	lock add DWORD PTR [rsi],0xffffffff
   140029e3c:	setne  al
   140029e3f:	test   al,al
   140029e41:	jne    0x140029eb5
   140029e43:	mov    rsi,QWORD PTR [rip+0xb766]        # 0x1400355b0
   140029e4a:	movsxd rax,DWORD PTR [rsi+0xc]
   140029e4e:	mov    QWORD PTR [rsp+0x30],rbx
   140029e53:	mov    QWORD PTR [rsp+0x38],rbp
   140029e58:	lea    rbx,[rsi+rax*8+0x10]
   140029e5d:	movsxd rax,DWORD PTR [rsi+0x8]
   140029e61:	lea    rbp,[rsi+rax*8+0x10]
   140029e66:	cmp    rbp,rbx
   140029e69:	je     0x140029ea2
   140029e6b:	mov    QWORD PTR [rsp+0x40],rdi
   140029e70:	mov    rdi,QWORD PTR [rbx-0x8]
   140029e74:	sub    rbx,0x8
   140029e78:	test   rdi,rdi
   140029e7b:	je     0x140029e98
   140029e7d:	lea    rcx,[rdi+0x8]
   140029e81:	call   QWORD PTR [rip+0x1a11]        # 0x14002b898
   140029e87:	mov    rcx,rdi
   140029e8a:	call   QWORD PTR [rip+0x1a08]        # 0x14002b898
   140029e90:	mov    rcx,rdi
   140029e93:	call   0x140029524
   140029e98:	cmp    rbx,rbp
   140029e9b:	jne    0x140029e70
   140029e9d:	mov    rdi,QWORD PTR [rsp+0x40]
   140029ea2:	mov    rcx,rsi
   140029ea5:	call   QWORD PTR [rip+0x19c5]        # 0x14002b870
   140029eab:	mov    rbp,QWORD PTR [rsp+0x38]
   140029eb0:	mov    rbx,QWORD PTR [rsp+0x30]
   140029eb5:	add    rsp,0x20
   140029eb9:	pop    rsi
   140029eba:	ret    
   140029ebb:	int3   
   140029ebc:	int3   
   140029ebd:	int3   
   140029ebe:	int3   
   140029ebf:	int3   
   140029ec0:	lea    rcx,[rip+0xb719]        # 0x1400355e0
   140029ec7:	rex.W jmp QWORD PTR [rip+0x19ca]        # 0x14002b898
   140029ece:	int3   
   140029ecf:	int3   
   140029ed0:	lea    rcx,[rip+0xb711]        # 0x1400355e8
   140029ed7:	rex.W jmp QWORD PTR [rip+0x19ba]        # 0x14002b898
   140029ede:	int3   
   140029edf:	int3   
   140029ee0:	lea    rcx,[rip+0xb711]        # 0x1400355f8
   140029ee7:	rex.W jmp QWORD PTR [rip+0x19aa]        # 0x14002b898
   140029eee:	int3   
   140029eef:	int3   
   140029ef0:	lea    rcx,[rip+0xb709]        # 0x140035600
   140029ef7:	rex.W jmp QWORD PTR [rip+0x199a]        # 0x14002b898
   140029efe:	int3   
   140029eff:	int3   
   140029f00:	lea    rcx,[rip+0xb701]        # 0x140035608
   140029f07:	rex.W jmp QWORD PTR [rip+0x198a]        # 0x14002b898
   140029f0e:	int3   
   140029f0f:	int3   
   140029f10:	lea    rcx,[rip+0xb701]        # 0x140035618
   140029f17:	rex.W jmp QWORD PTR [rip+0x197a]        # 0x14002b898
   140029f1e:	int3   
   140029f1f:	int3   
   140029f20:	lea    rcx,[rip+0xb701]        # 0x140035628
   140029f27:	rex.W jmp QWORD PTR [rip+0x196a]        # 0x14002b898
   140029f2e:	int3   
   140029f2f:	int3   
   140029f30:	lea    rcx,[rip+0xb6f9]        # 0x140035630
   140029f37:	rex.W jmp QWORD PTR [rip+0x195a]        # 0x14002b898
   140029f3e:	int3   
   140029f3f:	int3   
   140029f40:	lea    rcx,[rip+0xb6f1]        # 0x140035638
   140029f47:	rex.W jmp QWORD PTR [rip+0x194a]        # 0x14002b898
   140029f4e:	int3   
   140029f4f:	int3   
   140029f50:	lea    rcx,[rip+0xb6e9]        # 0x140035640
   140029f57:	rex.W jmp QWORD PTR [rip+0x193a]        # 0x14002b898
   140029f5e:	int3   
   140029f5f:	int3   
   140029f60:	lea    rcx,[rip+0xb6e1]        # 0x140035648
   140029f67:	rex.W jmp QWORD PTR [rip+0x192a]        # 0x14002b898
   140029f6e:	int3   
   140029f6f:	int3   
   140029f70:	lea    rcx,[rip+0xb6d9]        # 0x140035650
   140029f77:	rex.W jmp QWORD PTR [rip+0x191a]        # 0x14002b898
   140029f7e:	int3   
   140029f7f:	int3   
   140029f80:	lea    rcx,[rip+0xb6d1]        # 0x140035658
   140029f87:	rex.W jmp QWORD PTR [rip+0x190a]        # 0x14002b898
   140029f8e:	int3   
   140029f8f:	int3   
   140029f90:	lea    rcx,[rip+0xb6c9]        # 0x140035660
   140029f97:	rex.W jmp QWORD PTR [rip+0x18fa]        # 0x14002b898
   140029f9e:	int3   
   140029f9f:	int3   
   140029fa0:	lea    rcx,[rip+0xb6c1]        # 0x140035668
   140029fa7:	rex.W jmp QWORD PTR [rip+0x18ea]        # 0x14002b898
   140029fae:	int3   
   140029faf:	int3   
   140029fb0:	lea    rcx,[rip+0xb6b9]        # 0x140035670
   140029fb7:	rex.W jmp QWORD PTR [rip+0x18da]        # 0x14002b898
   140029fbe:	int3   
   140029fbf:	int3   
   140029fc0:	lea    rcx,[rip+0xb6b1]        # 0x140035678
   140029fc7:	rex.W jmp QWORD PTR [rip+0x18ca]        # 0x14002b898
   140029fce:	int3   
   140029fcf:	int3   
   140029fd0:	lea    rcx,[rip+0xb6a9]        # 0x140035680
   140029fd7:	rex.W jmp QWORD PTR [rip+0x18ba]        # 0x14002b898
   140029fde:	int3   
   140029fdf:	int3   
   140029fe0:	lea    rcx,[rip+0xb6a1]        # 0x140035688
   140029fe7:	rex.W jmp QWORD PTR [rip+0x18aa]        # 0x14002b898
   140029fee:	int3   
   140029fef:	int3   
   140029ff0:	lea    rcx,[rip+0xb699]        # 0x140035690
   140029ff7:	rex.W jmp QWORD PTR [rip+0x189a]        # 0x14002b898
   140029ffe:	int3   
   140029fff:	int3   
   14002a000:	lea    rcx,[rip+0xb691]        # 0x140035698
   14002a007:	rex.W jmp QWORD PTR [rip+0x188a]        # 0x14002b898
   14002a00e:	int3   
   14002a00f:	int3   
   14002a010:	lea    rcx,[rip+0xb689]        # 0x1400356a0
   14002a017:	rex.W jmp QWORD PTR [rip+0x187a]        # 0x14002b898
   14002a01e:	int3   
   14002a01f:	int3   
   14002a020:	lea    rcx,[rip+0xb681]        # 0x1400356a8
   14002a027:	rex.W jmp QWORD PTR [rip+0x186a]        # 0x14002b898
   14002a02e:	int3   
   14002a02f:	int3   
   14002a030:	lea    rcx,[rip+0xb679]        # 0x1400356b0
   14002a037:	rex.W jmp QWORD PTR [rip+0x185a]        # 0x14002b898
   14002a03e:	int3   
   14002a03f:	int3   
   14002a040:	lea    rcx,[rip+0xb671]        # 0x1400356b8
   14002a047:	rex.W jmp QWORD PTR [rip+0x184a]        # 0x14002b898
   14002a04e:	int3   
   14002a04f:	int3   
   14002a050:	lea    rcx,[rip+0xb669]        # 0x1400356c0
   14002a057:	rex.W jmp QWORD PTR [rip+0x183a]        # 0x14002b898
   14002a05e:	int3   
   14002a05f:	int3   
   14002a060:	lea    rcx,[rip+0xb661]        # 0x1400356c8
   14002a067:	rex.W jmp QWORD PTR [rip+0x182a]        # 0x14002b898
   14002a06e:	int3   
   14002a06f:	int3   
   14002a070:	lea    rcx,[rip+0xb659]        # 0x1400356d0
   14002a077:	rex.W jmp QWORD PTR [rip+0x181a]        # 0x14002b898
   14002a07e:	int3   
   14002a07f:	int3   
   14002a080:	lea    rcx,[rip+0xb651]        # 0x1400356d8
   14002a087:	rex.W jmp QWORD PTR [rip+0x180a]        # 0x14002b898
   14002a08e:	int3   
   14002a08f:	int3   
   14002a090:	lea    rcx,[rip+0xb649]        # 0x1400356e0
   14002a097:	rex.W jmp QWORD PTR [rip+0x17fa]        # 0x14002b898
   14002a09e:	int3   
   14002a09f:	int3   
   14002a0a0:	lea    rcx,[rip+0xb641]        # 0x1400356e8
   14002a0a7:	rex.W jmp QWORD PTR [rip+0x17ea]        # 0x14002b898
   14002a0ae:	int3   
   14002a0af:	int3   
   14002a0b0:	lea    rcx,[rip+0xb639]        # 0x1400356f0
   14002a0b7:	rex.W jmp QWORD PTR [rip+0x17da]        # 0x14002b898
   14002a0be:	int3   
   14002a0bf:	int3   
   14002a0c0:	lea    rcx,[rip+0xb631]        # 0x1400356f8
   14002a0c7:	rex.W jmp QWORD PTR [rip+0x17ca]        # 0x14002b898
   14002a0ce:	int3   
   14002a0cf:	int3   
   14002a0d0:	lea    rcx,[rip+0xb629]        # 0x140035700
   14002a0d7:	rex.W jmp QWORD PTR [rip+0x17ba]        # 0x14002b898
   14002a0de:	int3   
   14002a0df:	int3   
   14002a0e0:	lea    rcx,[rip+0xb621]        # 0x140035708
   14002a0e7:	rex.W jmp QWORD PTR [rip+0x17aa]        # 0x14002b898
   14002a0ee:	int3   
   14002a0ef:	int3   
   14002a0f0:	lea    rcx,[rip+0xb619]        # 0x140035710
   14002a0f7:	rex.W jmp QWORD PTR [rip+0x179a]        # 0x14002b898
   14002a0fe:	int3   
   14002a0ff:	int3   
   14002a100:	lea    rcx,[rip+0xb611]        # 0x140035718
   14002a107:	rex.W jmp QWORD PTR [rip+0x178a]        # 0x14002b898
   14002a10e:	int3   
   14002a10f:	int3   
   14002a110:	lea    rcx,[rip+0xb609]        # 0x140035720
   14002a117:	rex.W jmp QWORD PTR [rip+0x177a]        # 0x14002b898

Disassembly of section .rdata:

000000014002b000 <.rdata>:
   14002b000:	or     cl,BYTE PTR [rcx+0x3]
   14002b003:	add    BYTE PTR [rax],al
   14002b005:	add    BYTE PTR [rax],al
   14002b007:	add    ah,dh
   14002b009:	add    rax,QWORD PTR [rax]
   14002b00c:	add    BYTE PTR [rax],al
   14002b00e:	add    BYTE PTR [rax],al
   14002b010:	fimul  WORD PTR [rax+0x3]
   14002b013:	add    BYTE PTR [rax],al
   14002b015:	add    BYTE PTR [rax],al
   14002b017:	add    dh,cl
   14002b019:	add    rax,QWORD PTR [rax]
   14002b01c:	add    BYTE PTR [rax],al
   14002b01e:	add    BYTE PTR [rax],al
   14002b020:	mov    ah,0x48
   14002b022:	add    eax,DWORD PTR [rax]
   14002b024:	add    BYTE PTR [rax],al
   14002b026:	add    BYTE PTR [rax],al
   14002b028:	xchg   esi,eax
   14002b029:	add    rax,QWORD PTR [rax]
   14002b02c:	add    BYTE PTR [rax],al
   14002b02e:	add    BYTE PTR [rax],al
   14002b030:	mov    cs,WORD PTR [rax+0x3]
	...
   14002b03f:	add    dh,cl
   14002b041:	rex.XB add eax,DWORD PTR [r8]
   14002b044:	add    BYTE PTR [rax],al
   14002b046:	add    BYTE PTR [rax],al
   14002b048:	out    dx,al
   14002b049:	rex.XB add eax,DWORD PTR [r8]
   14002b04c:	add    BYTE PTR [rax],al
   14002b04e:	add    BYTE PTR [rax],al
   14002b050:	xor    al,BYTE PTR [rbx+rax*1+0x0]
   14002b054:	add    BYTE PTR [rax],al
   14002b056:	add    BYTE PTR [rax],al
   14002b058:	jo     0x14002b09e
   14002b05a:	add    eax,DWORD PTR [rax]
   14002b05c:	add    BYTE PTR [rax],al
   14002b05e:	add    BYTE PTR [rax],al
   14002b060:	xchg   edx,eax
   14002b061:	add    r8d,DWORD PTR [rax]
   14002b064:	add    BYTE PTR [rax],al
   14002b066:	add    BYTE PTR [rax],al
   14002b068:	rol    BYTE PTR [rbx+rax*1+0x0],cl
   14002b06c:	add    BYTE PTR [rax],al
   14002b06e:	add    BYTE PTR [rax],al
   14002b070:	sbb    al,BYTE PTR [rbp+0x3]
   14002b073:	add    BYTE PTR [rax],al
   14002b075:	add    BYTE PTR [rax],al
   14002b077:	add    BYTE PTR [rbp+rax*2+0x3],bl
   14002b07b:	add    BYTE PTR [rax],al
   14002b07d:	add    BYTE PTR [rax],al
   14002b07f:	add    BYTE PTR [rax+0x345],bl
   14002b085:	add    BYTE PTR [rax],al
   14002b087:	add    ah,dl
   14002b089:	add    r8d,DWORD PTR [r8]
   14002b08c:	add    BYTE PTR [rax],al
   14002b08e:	add    BYTE PTR [rax],al
   14002b090:	sub    BYTE PTR [rsi+0x3],al
   14002b093:	add    BYTE PTR [rax],al
   14002b095:	add    BYTE PTR [rax],al
   14002b097:	add    BYTE PTR [rax+0x343],dh
	...
   14002b0a5:	add    BYTE PTR [rax],al
   14002b0a7:	add    BYTE PTR [rdx+0x347],dh
   14002b0ad:	add    BYTE PTR [rax],al
   14002b0af:	add    BYTE PTR [rdi+rax*2+0x3],ah
   14002b0b6:	add    BYTE PTR [rax],al
   14002b0b8:	xchg   esp,eax
   14002b0b9:	rex.RXB add r8d,DWORD PTR [r8]
   14002b0bc:	add    BYTE PTR [rax],al
   14002b0be:	add    BYTE PTR [rax],al
   14002b0c0:	xchg   BYTE PTR [rdi+0x3],al
   14002b0c3:	add    BYTE PTR [rax],al
   14002b0c5:	add    BYTE PTR [rax],al
   14002b0c7:	add    BYTE PTR [rdi+rax*2+0x3],dh
   14002b0cb:	add    BYTE PTR [rax],al
   14002b0cd:	add    BYTE PTR [rax],al
   14002b0cf:	add    BYTE PTR [rdx+0x47],ch
   14002b0d2:	add    eax,DWORD PTR [rax]
   14002b0d4:	add    BYTE PTR [rax],al
   14002b0d6:	add    BYTE PTR [rax],al
   14002b0d8:	mov    edx,0x347
   14002b0dd:	add    BYTE PTR [rax],al
   14002b0df:	add    BYTE PTR [rax+0x47],dl
   14002b0e2:	add    eax,DWORD PTR [rax]
   14002b0e4:	add    BYTE PTR [rax],al
   14002b0e6:	add    BYTE PTR [rax],al
   14002b0e8:	rex.X
   14002b0e9:	rex.RXB add r8d,DWORD PTR [r8]
   14002b0ec:	add    BYTE PTR [rax],al
   14002b0ee:	add    BYTE PTR [rax],al
   14002b0f0:	cmp    BYTE PTR [rdi+0x3],al
   14002b0f3:	add    BYTE PTR [rax],al
   14002b0f5:	add    BYTE PTR [rax],al
   14002b0f7:	add    BYTE PTR [rax],ah
   14002b0f9:	rex.RXB add r8d,DWORD PTR [r8]
   14002b0fc:	add    BYTE PTR [rax],al
   14002b0fe:	add    BYTE PTR [rax],al
   14002b100:	or     al,BYTE PTR [rdi+0x3]
   14002b103:	add    BYTE PTR [rax],al
   14002b105:	add    BYTE PTR [rax],al
   14002b107:	add    dh,bh
   14002b109:	rex.RX add r8d,DWORD PTR [rax]
   14002b10c:	add    BYTE PTR [rax],al
   14002b10e:	add    BYTE PTR [rax],al
   14002b110:	hlt    
   14002b111:	rex.RX add r8d,DWORD PTR [rax]
   14002b114:	add    BYTE PTR [rax],al
   14002b116:	add    BYTE PTR [rax],al
   14002b118:	loop   0x14002b160
   14002b11a:	add    eax,DWORD PTR [rax]
   14002b11c:	add    BYTE PTR [rax],al
   14002b11e:	add    BYTE PTR [rax],al
   14002b120:	fadd   DWORD PTR [rsi+0x3]
   14002b123:	add    BYTE PTR [rax],al
   14002b125:	add    BYTE PTR [rax],al
   14002b127:	add    BYTE PTR [rsi+0x346],bh
   14002b12d:	add    BYTE PTR [rax],al
   14002b12f:	add    BYTE PTR [rax+0x346],ch
   14002b135:	add    BYTE PTR [rax],al
   14002b137:	add    BYTE PTR [rsi+0x346],dl
   14002b13d:	add    BYTE PTR [rax],al
   14002b13f:	add    BYTE PTR [rsi+0x346],al
   14002b145:	add    BYTE PTR [rax],al
   14002b147:	add    BYTE PTR [rsi+rax*2+0x3],bh
   14002b14b:	add    BYTE PTR [rax],al
   14002b14d:	add    BYTE PTR [rax],al
   14002b14f:	add    ah,al
   14002b151:	rex.RXB add r8d,DWORD PTR [r8]
   14002b154:	add    BYTE PTR [rax],al
   14002b156:	add    BYTE PTR [rax],al
   14002b158:	int3   
   14002b159:	rex.RXB add r8d,DWORD PTR [r8]
   14002b15c:	add    BYTE PTR [rax],al
   14002b15e:	add    BYTE PTR [rax],al
   14002b160:	fadd   DWORD PTR [rdi+0x3]
   14002b163:	add    BYTE PTR [rax],al
   14002b165:	add    BYTE PTR [rax],al
   14002b167:	add    ah,ah
   14002b169:	rex.RXB add r8d,DWORD PTR [r8]
   14002b16c:	add    BYTE PTR [rax],al
   14002b16e:	add    BYTE PTR [rax],al
   14002b170:	repnz rex.RXB add r8d,DWORD PTR [r8]
   14002b174:	add    BYTE PTR [rax],al
   14002b176:	add    BYTE PTR [rax],al
   14002b178:	or     BYTE PTR [rax+0x3],cl
   14002b17b:	add    BYTE PTR [rax],al
   14002b17d:	add    BYTE PTR [rax],al
   14002b17f:	add    BYTE PTR [rax+rcx*2],bl
   14002b182:	add    eax,DWORD PTR [rax]
   14002b184:	add    BYTE PTR [rax],al
   14002b186:	add    BYTE PTR [rax],al
   14002b188:	sub    BYTE PTR [rax+0x3],cl
   14002b18b:	add    BYTE PTR [rax],al
   14002b18d:	add    BYTE PTR [rax],al
   14002b18f:	add    BYTE PTR [rdx],dh
   14002b191:	add    rax,QWORD PTR [rax]
   14002b194:	add    BYTE PTR [rax],al
   14002b196:	add    BYTE PTR [rax],al
   14002b198:	rex.R
   14002b199:	add    rax,QWORD PTR [rax]
   14002b19c:	add    BYTE PTR [rax],al
   14002b19e:	add    BYTE PTR [rax],al
   14002b1a0:	pop    rax
   14002b1a1:	add    rax,QWORD PTR [rax]
   14002b1a4:	add    BYTE PTR [rax],al
   14002b1a6:	add    BYTE PTR [rax],al
   14002b1a8:	(bad)  
   14002b1a9:	rex.RXB add r8d,DWORD PTR [r8]
   14002b1ac:	add    BYTE PTR [rax],al
   14002b1ae:	add    BYTE PTR [rax],al
   14002b1b0:	int3   
   14002b1b1:	rex.RX add r8d,DWORD PTR [rax]
	...
   14002b1c0:	lods   al,BYTE PTR ds:[rsi]
   14002b1c1:	and    BYTE PTR [rbx],al
   14002b1c3:	add    BYTE PTR [rax],al
   14002b1c5:	add    BYTE PTR [rax],al
   14002b1c7:	add    ah,cl
   14002b1c9:	and    BYTE PTR [rbx],al
   14002b1cb:	add    BYTE PTR [rax],al
   14002b1cd:	add    BYTE PTR [rax],al
   14002b1cf:	add    dh,ah
   14002b1d1:	and    BYTE PTR [rbx],al
   14002b1d3:	add    BYTE PTR [rax],al
   14002b1d5:	add    BYTE PTR [rax],al
   14002b1d7:	add    BYTE PTR [rdx],cl
   14002b1d9:	and    DWORD PTR [rbx],eax
   14002b1db:	add    BYTE PTR [rax],al
   14002b1dd:	add    BYTE PTR [rax],al
   14002b1df:	add    BYTE PTR [rax],bh
   14002b1e1:	and    DWORD PTR [rbx],eax
   14002b1e3:	add    BYTE PTR [rax],al
   14002b1e5:	add    BYTE PTR [rax],al
   14002b1e7:	add    BYTE PTR [rsi+0x21],bl
   14002b1ea:	add    eax,DWORD PTR [rax]
   14002b1ec:	add    BYTE PTR [rax],al
   14002b1ee:	add    BYTE PTR [rax],al
   14002b1f0:	mov    ah,BYTE PTR [rcx]
   14002b1f2:	add    eax,DWORD PTR [rax]
   14002b1f4:	add    BYTE PTR [rax],al
   14002b1f6:	add    BYTE PTR [rax],al
   14002b1f8:	stos   BYTE PTR es:[rdi],al
   14002b1f9:	and    DWORD PTR [rbx],eax
   14002b1fb:	add    BYTE PTR [rax],al
   14002b1fd:	add    BYTE PTR [rax],al
   14002b1ff:	add    al,cl
   14002b201:	and    DWORD PTR [rbx],eax
   14002b203:	add    BYTE PTR [rax],al
   14002b205:	add    BYTE PTR [rax],al
   14002b207:	add    ah,ah
   14002b209:	and    DWORD PTR [rbx],eax
   14002b20b:	add    BYTE PTR [rax],al
   14002b20d:	add    BYTE PTR [rax],al
   14002b20f:	add    BYTE PTR [rdx+riz*1],al
   14002b212:	add    eax,DWORD PTR [rax]
   14002b214:	add    BYTE PTR [rax],al
   14002b216:	add    BYTE PTR [rax],al
   14002b218:	and    al,0x22
   14002b21a:	add    eax,DWORD PTR [rax]
   14002b21c:	add    BYTE PTR [rax],al
   14002b21e:	add    BYTE PTR [rax],al
   14002b220:	(bad)  
   14002b222:	add    eax,DWORD PTR [rax]
   14002b224:	add    BYTE PTR [rax],al
   14002b226:	add    BYTE PTR [rax],al
   14002b228:	mov    ah,BYTE PTR [rdx]
   14002b22a:	add    eax,DWORD PTR [rax]
   14002b22c:	add    BYTE PTR [rax],al
   14002b22e:	add    BYTE PTR [rax],al
   14002b230:	lods   al,BYTE PTR ds:[rsi]
   14002b231:	and    al,BYTE PTR [rbx]
   14002b233:	add    BYTE PTR [rax],al
   14002b235:	add    BYTE PTR [rax],al
   14002b237:	add    dl,dh
   14002b239:	and    al,BYTE PTR [rbx]
   14002b23b:	add    BYTE PTR [rax],al
   14002b23d:	add    BYTE PTR [rax],al
   14002b23f:	add    BYTE PTR [rsi],ah
   14002b241:	and    eax,DWORD PTR [rbx]
   14002b243:	add    BYTE PTR [rax],al
   14002b245:	add    BYTE PTR [rax],al
   14002b247:	add    BYTE PTR [rdx+0x23],dl
   14002b24a:	add    eax,DWORD PTR [rax]
   14002b24c:	add    BYTE PTR [rax],al
   14002b24e:	add    BYTE PTR [rax],al
   14002b250:	xchg   edx,eax
   14002b251:	and    eax,DWORD PTR [rbx]
   14002b253:	add    BYTE PTR [rax],al
   14002b255:	add    BYTE PTR [rax],al
   14002b257:	add    dh,bl
   14002b259:	and    eax,DWORD PTR [rbx]
   14002b25b:	add    BYTE PTR [rax],al
   14002b25d:	add    BYTE PTR [rax],al
   14002b25f:	add    ah,bh
   14002b261:	and    eax,DWORD PTR [rbx]
   14002b263:	add    BYTE PTR [rax],al
   14002b265:	add    BYTE PTR [rax],al
   14002b267:	add    BYTE PTR [rax],ah
   14002b269:	and    al,0x3
   14002b26b:	add    BYTE PTR [rax],al
   14002b26d:	add    BYTE PTR [rax],al
   14002b26f:	add    BYTE PTR [rdx+0x24],cl
   14002b272:	add    eax,DWORD PTR [rax]
   14002b274:	add    BYTE PTR [rax],al
   14002b276:	add    BYTE PTR [rax],al
   14002b278:	(bad)  
   14002b279:	and    al,0x3
   14002b27b:	add    BYTE PTR [rax],al
   14002b27d:	add    BYTE PTR [rax],al
   14002b27f:	add    BYTE PTR [rsp+0x3],al
   14002b286:	add    BYTE PTR [rax],al
   14002b288:	stos   BYTE PTR es:[rdi],al
   14002b289:	and    al,0x3
   14002b28b:	add    BYTE PTR [rax],al
   14002b28d:	add    BYTE PTR [rax],al
   14002b28f:	add    dl,bl
   14002b291:	and    al,0x3
   14002b293:	add    BYTE PTR [rax],al
   14002b295:	add    BYTE PTR [rax],al
   14002b297:	add    BYTE PTR [rsi],al
   14002b299:	and    eax,0x3
   14002b29e:	add    BYTE PTR [rax],al
   14002b2a0:	and    ah,BYTE PTR [rip+0x3]        # 0x14002b2a9
   14002b2a6:	add    BYTE PTR [rax],al
   14002b2a8:	and    BYTE PTR [rip+0x3],0x0        # 0x14002b2b2
   14002b2af:	add    BYTE PTR [rsi+0x325],bl
   14002b2b5:	add    BYTE PTR [rax],al
   14002b2b7:	add    dh,al
   14002b2b9:	and    eax,0x3
   14002b2be:	add    BYTE PTR [rax],al
   14002b2c0:	xor    ah,BYTE PTR [rsi]
   14002b2c2:	add    eax,DWORD PTR [rax]
   14002b2c4:	add    BYTE PTR [rax],al
   14002b2c6:	add    BYTE PTR [rax],al
   14002b2c8:	(bad)  
   14002b2c9:	add    eax,DWORD PTR es:[rax]
   14002b2cc:	add    BYTE PTR [rax],al
   14002b2ce:	add    BYTE PTR [rax],al
   14002b2d0:	mov    BYTE PTR [rsi],ah
   14002b2d2:	add    eax,DWORD PTR [rax]
   14002b2d4:	add    BYTE PTR [rax],al
   14002b2d6:	add    BYTE PTR [rax],al
   14002b2d8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002b2d9:	add    eax,DWORD PTR es:[rax]
   14002b2dc:	add    BYTE PTR [rax],al
   14002b2de:	add    BYTE PTR [rax],al
   14002b2e0:	retf   0x326
   14002b2e3:	add    BYTE PTR [rax],al
   14002b2e5:	add    BYTE PTR [rax],al
   14002b2e7:	add    al,ch
   14002b2e9:	add    eax,DWORD PTR es:[rax]
   14002b2ec:	add    BYTE PTR [rax],al
   14002b2ee:	add    BYTE PTR [rax],al
   14002b2f0:	or     al,0x27
   14002b2f2:	add    eax,DWORD PTR [rax]
   14002b2f4:	add    BYTE PTR [rax],al
   14002b2f6:	add    BYTE PTR [rax],al
   14002b2f8:	sub    al,0x27
   14002b2fa:	add    eax,DWORD PTR [rax]
   14002b2fc:	add    BYTE PTR [rax],al
   14002b2fe:	add    BYTE PTR [rax],al
   14002b300:	data16 (bad) 
   14002b302:	add    eax,DWORD PTR [rax]
   14002b304:	add    BYTE PTR [rax],al
   14002b306:	add    BYTE PTR [rax],al
   14002b308:	jp     0x14002b331
   14002b30a:	add    eax,DWORD PTR [rax]
   14002b30c:	add    BYTE PTR [rax],al
   14002b30e:	add    BYTE PTR [rax],al
   14002b310:	out    dx,al
   14002b311:	(bad)  
   14002b312:	add    eax,DWORD PTR [rax]
   14002b314:	add    BYTE PTR [rax],al
   14002b316:	add    BYTE PTR [rax],al
   14002b318:	adc    ch,BYTE PTR [rax]
   14002b31a:	add    eax,DWORD PTR [rax]
   14002b31c:	add    BYTE PTR [rax],al
   14002b31e:	add    BYTE PTR [rax],al
   14002b320:	sub    BYTE PTR [rbx],al
   14002b323:	add    BYTE PTR [rax],al
   14002b325:	add    BYTE PTR [rax],al
   14002b327:	add    BYTE PTR [rsi+0x28],bh
   14002b32a:	add    eax,DWORD PTR [rax]
   14002b32c:	add    BYTE PTR [rax],al
   14002b32e:	add    BYTE PTR [rax],al
   14002b330:	stos   BYTE PTR es:[rdi],al
   14002b331:	sub    BYTE PTR [rbx],al
   14002b333:	add    BYTE PTR [rax],al
   14002b335:	add    BYTE PTR [rax],al
   14002b337:	add    BYTE PTR [rsi+0x328],bh
   14002b33d:	add    BYTE PTR [rax],al
   14002b33f:	add    dh,dl
   14002b341:	sub    BYTE PTR [rbx],al
   14002b343:	add    BYTE PTR [rax],al
   14002b345:	add    BYTE PTR [rax],al
   14002b347:	add    ah,dh
   14002b349:	sub    BYTE PTR [rbx],al
   14002b34b:	add    BYTE PTR [rax],al
   14002b34d:	add    BYTE PTR [rax],al
   14002b34f:	add    BYTE PTR [rsi],bl
   14002b351:	sub    DWORD PTR [rbx],eax
   14002b353:	add    BYTE PTR [rax],al
   14002b355:	add    BYTE PTR [rax],al
   14002b357:	add    BYTE PTR [rcx+rbp*1+0x3],al
   14002b35b:	add    BYTE PTR [rax],al
   14002b35d:	add    BYTE PTR [rax],al
   14002b35f:	add    BYTE PTR [rdx+0x29],ah
   14002b362:	add    eax,DWORD PTR [rax]
   14002b364:	add    BYTE PTR [rax],al
   14002b366:	add    BYTE PTR [rax],al
   14002b368:	mov    WORD PTR [rcx],gs
   14002b36a:	add    eax,DWORD PTR [rax]
   14002b36c:	add    BYTE PTR [rax],al
   14002b36e:	add    BYTE PTR [rax],al
   14002b370:	mov    al,0x29
   14002b372:	add    eax,DWORD PTR [rax]
   14002b374:	add    BYTE PTR [rax],al
   14002b376:	add    BYTE PTR [rax],al
   14002b378:	cld    
   14002b379:	sub    DWORD PTR [rbx],eax
   14002b37b:	add    BYTE PTR [rax],al
   14002b37d:	add    BYTE PTR [rax],al
   14002b37f:	add    BYTE PTR [rsi],ah
   14002b381:	sub    al,BYTE PTR [rbx]
   14002b383:	add    BYTE PTR [rax],al
   14002b385:	add    BYTE PTR [rax],al
   14002b387:	add    BYTE PTR [rdx+rbp*1+0x3],al
   14002b38b:	add    BYTE PTR [rax],al
   14002b38d:	add    BYTE PTR [rax],al
   14002b38f:	add    BYTE PTR [rdx+rbp*1+0x3],bl
   14002b396:	add    BYTE PTR [rax],al
   14002b398:	mov    esp,0x32a
   14002b39d:	add    BYTE PTR [rax],al
   14002b39f:	add    dh,ah
   14002b3a1:	sub    al,BYTE PTR [rbx]
   14002b3a3:	add    BYTE PTR [rax],al
   14002b3a5:	add    BYTE PTR [rax],al
   14002b3a7:	add    ah,bh
   14002b3a9:	sub    al,BYTE PTR [rbx]
   14002b3ab:	add    BYTE PTR [rax],al
   14002b3ad:	add    BYTE PTR [rax],al
   14002b3af:	add    BYTE PTR [rbx+rbp*1],bl
   14002b3b2:	add    eax,DWORD PTR [rax]
   14002b3b4:	add    BYTE PTR [rax],al
   14002b3b6:	add    BYTE PTR [rax],al
   14002b3b8:	cmp    al,0x2b
   14002b3ba:	add    eax,DWORD PTR [rax]
   14002b3bc:	add    BYTE PTR [rax],al
   14002b3be:	add    BYTE PTR [rax],al
   14002b3c0:	(bad)  
   14002b3c1:	sub    eax,DWORD PTR [rbx]
   14002b3c3:	add    BYTE PTR [rax],al
   14002b3c5:	add    BYTE PTR [rax],al
   14002b3c7:	add    BYTE PTR [rdx+0x2b],bh
   14002b3ca:	add    eax,DWORD PTR [rax]
   14002b3cc:	add    BYTE PTR [rax],al
   14002b3ce:	add    BYTE PTR [rax],al
   14002b3d0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002b3d1:	sub    eax,DWORD PTR [rbx]
   14002b3d3:	add    BYTE PTR [rax],al
   14002b3d5:	add    BYTE PTR [rax],al
   14002b3d7:	add    al,cl
   14002b3d9:	sub    eax,DWORD PTR [rbx]
   14002b3db:	add    BYTE PTR [rax],al
   14002b3dd:	add    BYTE PTR [rax],al
   14002b3df:	add    dl,dh
   14002b3e1:	sub    eax,DWORD PTR [rbx]
   14002b3e3:	add    BYTE PTR [rax],al
   14002b3e5:	add    BYTE PTR [rax],al
   14002b3e7:	add    BYTE PTR [rdx],dl
   14002b3e9:	sub    al,0x3
   14002b3eb:	add    BYTE PTR [rax],al
   14002b3ed:	add    BYTE PTR [rax],al
   14002b3ef:	add    BYTE PTR [rdx],dh
   14002b3f1:	sub    al,0x3
   14002b3f3:	add    BYTE PTR [rax],al
   14002b3f5:	add    BYTE PTR [rax],al
   14002b3f7:	add    BYTE PTR [rsp+rbp*1+0x3],bl
   14002b3fb:	add    BYTE PTR [rax],al
   14002b3fd:	add    BYTE PTR [rax],al
   14002b3ff:	add    BYTE PTR [rdx+0x2c],bh
   14002b402:	add    eax,DWORD PTR [rax]
   14002b404:	add    BYTE PTR [rax],al
   14002b406:	add    BYTE PTR [rax],al
   14002b408:	xchg   esp,eax
   14002b409:	sub    al,0x3
   14002b40b:	add    BYTE PTR [rax],al
   14002b40d:	add    BYTE PTR [rax],al
   14002b40f:	add    BYTE PTR [rsp+rbp*1+0x3],dh
   14002b416:	add    BYTE PTR [rax],al
   14002b418:	(bad)  
   14002b419:	sub    al,0x3
   14002b41b:	add    BYTE PTR [rax],al
   14002b41d:	add    BYTE PTR [rax],al
   14002b41f:	add    dh,bh
   14002b421:	sub    al,0x3
   14002b423:	add    BYTE PTR [rax],al
   14002b425:	add    BYTE PTR [rax],al
   14002b427:	add    BYTE PTR [rax],ch
   14002b429:	sub    eax,0x3
   14002b42e:	add    BYTE PTR [rax],al
   14002b430:	rex.WR sub rax,0x3
   14002b436:	add    BYTE PTR [rax],al
   14002b438:	cwde   
   14002b439:	and    BYTE PTR [rbx],al
   14002b43b:	add    BYTE PTR [rax],al
   14002b43d:	add    BYTE PTR [rax],al
   14002b43f:	add    BYTE PTR [rbp+rbp*1+0x3],bl
   14002b446:	add    BYTE PTR [rax],al
   14002b448:	fsubr  QWORD PTR [rip+0x3]        # 0x14002b451
   14002b44e:	add    BYTE PTR [rax],al
   14002b450:	(bad)  
   14002b451:	add    eax,DWORD PTR cs:[rax]
   14002b454:	add    BYTE PTR [rax],al
   14002b456:	add    BYTE PTR [rax],al
   14002b458:	ds add eax,DWORD PTR cs:[rax]
   14002b45c:	add    BYTE PTR [rax],al
   14002b45e:	add    BYTE PTR [rax],al
   14002b460:	add    ax,WORD PTR cs:[rax]
   14002b464:	add    BYTE PTR [rax],al
   14002b466:	add    BYTE PTR [rax],al
   14002b468:	lods   al,BYTE PTR ds:[rsi]
   14002b469:	add    eax,DWORD PTR cs:[rax]
   14002b46c:	add    BYTE PTR [rax],al
   14002b46e:	add    BYTE PTR [rax],al
   14002b470:	fsubr  DWORD PTR [rsi]
   14002b472:	add    eax,DWORD PTR [rax]
   14002b474:	add    BYTE PTR [rax],al
   14002b476:	add    BYTE PTR [rax],al
   14002b478:	(bad)  
   14002b479:	add    eax,DWORD PTR cs:[rax]
   14002b47c:	add    BYTE PTR [rax],al
   14002b47e:	add    BYTE PTR [rax],al
   14002b480:	xor    al,0x2f
   14002b482:	add    eax,DWORD PTR [rax]
   14002b484:	add    BYTE PTR [rax],al
   14002b486:	add    BYTE PTR [rax],al
   14002b488:	(bad)  
   14002b489:	(bad)  
   14002b48a:	add    eax,DWORD PTR [rax]
   14002b48c:	add    BYTE PTR [rax],al
   14002b48e:	add    BYTE PTR [rax],al
   14002b490:	(bad)  
   14002b491:	(bad)  
   14002b492:	add    eax,DWORD PTR [rax]
   14002b494:	add    BYTE PTR [rax],al
   14002b496:	add    BYTE PTR [rax],al
   14002b498:	in     al,dx
   14002b499:	(bad)  
   14002b49a:	add    eax,DWORD PTR [rax]
   14002b49c:	add    BYTE PTR [rax],al
   14002b49e:	add    BYTE PTR [rax],al
   14002b4a0:	adc    BYTE PTR [rax],dh
   14002b4a2:	add    eax,DWORD PTR [rax]
   14002b4a4:	add    BYTE PTR [rax],al
   14002b4a6:	add    BYTE PTR [rax],al
   14002b4a8:	xor    dh,BYTE PTR [rax]
   14002b4aa:	add    eax,DWORD PTR [rax]
   14002b4ac:	add    BYTE PTR [rax],al
   14002b4ae:	add    BYTE PTR [rax],al
   14002b4b0:	push   rsp
   14002b4b1:	xor    BYTE PTR [rbx],al
   14002b4b3:	add    BYTE PTR [rax],al
   14002b4b5:	add    BYTE PTR [rax],al
   14002b4b7:	add    BYTE PTR [rax+rsi*1+0x3],al
   14002b4be:	add    BYTE PTR [rax],al
   14002b4c0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002b4c1:	xor    BYTE PTR [rbx],al
   14002b4c3:	add    BYTE PTR [rax],al
   14002b4c5:	add    BYTE PTR [rax],al
   14002b4c7:	add    dh,cl
   14002b4c9:	xor    BYTE PTR [rbx],al
   14002b4cb:	add    BYTE PTR [rax],al
   14002b4cd:	add    BYTE PTR [rax],al
   14002b4cf:	add    dh,ch
   14002b4d1:	xor    BYTE PTR [rbx],al
   14002b4d3:	add    BYTE PTR [rax],al
   14002b4d5:	add    BYTE PTR [rax],al
   14002b4d7:	add    BYTE PTR [rdx],bl
   14002b4d9:	xor    DWORD PTR [rbx],eax
   14002b4db:	add    BYTE PTR [rax],al
   14002b4dd:	add    BYTE PTR [rax],al
   14002b4df:	add    BYTE PTR [rcx+rsi*1],dh
   14002b4e2:	add    eax,DWORD PTR [rax]
   14002b4e4:	add    BYTE PTR [rax],al
   14002b4e6:	add    BYTE PTR [rax],al
   14002b4e8:	pop    rsp
   14002b4e9:	xor    DWORD PTR [rbx],eax
   14002b4eb:	add    BYTE PTR [rax],al
   14002b4ed:	add    BYTE PTR [rax],al
   14002b4ef:	add    BYTE PTR [rcx+rsi*1+0x3],bh
   14002b4f3:	add    BYTE PTR [rax],al
   14002b4f5:	add    BYTE PTR [rax],al
   14002b4f7:	add    BYTE PTR [rcx+rsi*1+0x3],bl
   14002b4fe:	add    BYTE PTR [rax],al
   14002b500:	in     al,dx
   14002b501:	xor    DWORD PTR [rbx],eax
   14002b503:	add    BYTE PTR [rax],al
   14002b505:	add    BYTE PTR [rax],al
   14002b507:	add    BYTE PTR [rdx],cl
   14002b509:	xor    al,BYTE PTR [rbx]
   14002b50b:	add    BYTE PTR [rax],al
   14002b50d:	add    BYTE PTR [rax],al
   14002b50f:	add    BYTE PTR [rdx],dh
   14002b511:	xor    al,BYTE PTR [rbx]
   14002b513:	add    BYTE PTR [rax],al
   14002b515:	add    BYTE PTR [rax],al
   14002b517:	add    BYTE PTR [rsi+0x32],bl
   14002b51a:	add    eax,DWORD PTR [rax]
   14002b51c:	add    BYTE PTR [rax],al
   14002b51e:	add    BYTE PTR [rax],al
   14002b520:	mov    WORD PTR [rdx],?
   14002b522:	add    eax,DWORD PTR [rax]
   14002b524:	add    BYTE PTR [rax],al
   14002b526:	add    BYTE PTR [rax],al
   14002b528:	mov    edx,0x332
   14002b52d:	add    BYTE PTR [rax],al
   14002b52f:	add    dl,bl
   14002b531:	xor    al,BYTE PTR [rbx]
   14002b533:	add    BYTE PTR [rax],al
   14002b535:	add    BYTE PTR [rax],al
   14002b537:	add    BYTE PTR [rsi],al
   14002b539:	xor    eax,DWORD PTR [rbx]
   14002b53b:	add    BYTE PTR [rax],al
   14002b53d:	add    BYTE PTR [rax],al
   14002b53f:	add    BYTE PTR [rsi],dh
   14002b541:	xor    eax,DWORD PTR [rbx]
   14002b543:	add    BYTE PTR [rax],al
   14002b545:	add    BYTE PTR [rax],al
   14002b547:	add    BYTE PTR [rbx+rsi*1+0x3],ch
   14002b54b:	add    BYTE PTR [rax],al
   14002b54d:	add    BYTE PTR [rax],al
   14002b54f:	add    BYTE PTR [rbx+rsi*1+0x3],cl
   14002b556:	add    BYTE PTR [rax],al
   14002b558:	mov    al,0x33
   14002b55a:	add    eax,DWORD PTR [rax]
   14002b55c:	add    BYTE PTR [rax],al
   14002b55e:	add    BYTE PTR [rax],al
   14002b560:	fdiv   DWORD PTR [rbx]
   14002b562:	add    eax,DWORD PTR [rax]
   14002b564:	add    BYTE PTR [rax],al
   14002b566:	add    BYTE PTR [rax],al
   14002b568:	sbb    BYTE PTR [rbx+rax*1],dh
   14002b56b:	add    BYTE PTR [rax],al
   14002b56d:	add    BYTE PTR [rax],al
   14002b56f:	add    BYTE PTR [rax+0x34],cl
   14002b572:	add    eax,DWORD PTR [rax]
   14002b574:	add    BYTE PTR [rax],al
   14002b576:	add    BYTE PTR [rax],al
   14002b578:	ins    BYTE PTR es:[rdi],dx
   14002b579:	xor    al,0x3
   14002b57b:	add    BYTE PTR [rax],al
   14002b57d:	add    BYTE PTR [rax],al
   14002b57f:	add    BYTE PTR [rdx+0x334],dh
   14002b585:	add    BYTE PTR [rax],al
   14002b587:	add    dl,dh
   14002b589:	xor    al,0x3
   14002b58b:	add    BYTE PTR [rax],al
   14002b58d:	add    BYTE PTR [rax],al
   14002b58f:	add    BYTE PTR [rdx],ah
   14002b591:	xor    eax,0x3
   14002b596:	add    BYTE PTR [rax],al
   14002b598:	pop    rax
   14002b599:	xor    eax,0x3
   14002b59e:	add    BYTE PTR [rax],al
   14002b5a0:	jl     0x14002b5d7
   14002b5a2:	add    eax,DWORD PTR [rax]
   14002b5a4:	add    BYTE PTR [rax],al
   14002b5a6:	add    BYTE PTR [rax],al
   14002b5a8:	xchg   esi,eax
   14002b5a9:	xor    eax,0x3
   14002b5ae:	add    BYTE PTR [rax],al
   14002b5b0:	ret    0x335
   14002b5b3:	add    BYTE PTR [rax],al
   14002b5b5:	add    BYTE PTR [rax],al
   14002b5b7:	add    dh,ah
   14002b5b9:	xor    eax,0x3
   14002b5be:	add    BYTE PTR [rax],al
   14002b5c0:	sbb    BYTE PTR [rsi],dh
   14002b5c2:	add    eax,DWORD PTR [rax]
   14002b5c4:	add    BYTE PTR [rax],al
   14002b5c6:	add    BYTE PTR [rax],al
   14002b5c8:	rex.X
   14002b5c9:	add    eax,DWORD PTR ss:[rax]
   14002b5cc:	add    BYTE PTR [rax],al
   14002b5ce:	add    BYTE PTR [rax],al
   14002b5d0:	push   0x336
   14002b5d5:	add    BYTE PTR [rax],al
   14002b5d7:	add    BYTE PTR [rsi+0x336],al
   14002b5dd:	add    BYTE PTR [rax],al
   14002b5df:	add    BYTE PTR [rsi+0x336],ch
   14002b5e5:	add    BYTE PTR [rax],al
   14002b5e7:	add    al,dl
   14002b5e9:	add    eax,DWORD PTR ss:[rax]
   14002b5ec:	add    BYTE PTR [rax],al
   14002b5ee:	add    BYTE PTR [rax],al
   14002b5f0:	repnz add eax,DWORD PTR ss:[rax]
   14002b5f4:	add    BYTE PTR [rax],al
   14002b5f6:	add    BYTE PTR [rax],al
   14002b5f8:	rex.X (bad) 
   14002b5fa:	add    eax,DWORD PTR [rax]
   14002b5fc:	add    BYTE PTR [rax],al
   14002b5fe:	add    BYTE PTR [rax],al
   14002b600:	data16 (bad) 
   14002b602:	add    eax,DWORD PTR [rax]
   14002b604:	add    BYTE PTR [rax],al
   14002b606:	add    BYTE PTR [rax],al
   14002b608:	nop
   14002b609:	(bad)  
   14002b60a:	add    eax,DWORD PTR [rax]
   14002b60c:	add    BYTE PTR [rax],al
   14002b60e:	add    BYTE PTR [rax],al
   14002b610:	lods   al,BYTE PTR ds:[rsi]
   14002b611:	(bad)  
   14002b612:	add    eax,DWORD PTR [rax]
   14002b614:	add    BYTE PTR [rax],al
   14002b616:	add    BYTE PTR [rax],al
   14002b618:	int3   
   14002b619:	(bad)  
   14002b61a:	add    eax,DWORD PTR [rax]
   14002b61c:	add    BYTE PTR [rax],al
   14002b61e:	add    BYTE PTR [rax],al
   14002b620:	cld    
   14002b621:	(bad)  
   14002b622:	add    eax,DWORD PTR [rax]
   14002b624:	add    BYTE PTR [rax],al
   14002b626:	add    BYTE PTR [rax],al
   14002b628:	sbb    al,0x38
   14002b62a:	add    eax,DWORD PTR [rax]
   14002b62c:	add    BYTE PTR [rax],al
   14002b62e:	add    BYTE PTR [rax],al
   14002b630:	cmp    BYTE PTR [rbx],al
   14002b633:	add    BYTE PTR [rax],al
   14002b635:	add    BYTE PTR [rax],al
   14002b637:	add    BYTE PTR [rax+0x38],ah
   14002b63a:	add    eax,DWORD PTR [rax]
   14002b63c:	add    BYTE PTR [rax],al
   14002b63e:	add    BYTE PTR [rax],al
   14002b640:	xchg   BYTE PTR [rax],bh
   14002b642:	add    eax,DWORD PTR [rax]
   14002b644:	add    BYTE PTR [rax],al
   14002b646:	add    BYTE PTR [rax],al
   14002b648:	stos   BYTE PTR es:[rdi],al
   14002b649:	cmp    BYTE PTR [rbx],al
   14002b64b:	add    BYTE PTR [rax],al
   14002b64d:	add    BYTE PTR [rax],al
   14002b64f:	add    ah,al
   14002b651:	cmp    BYTE PTR [rbx],al
   14002b653:	add    BYTE PTR [rax],al
   14002b655:	add    BYTE PTR [rax],al
   14002b657:	add    BYTE PTR [rax],cl
   14002b659:	cmp    DWORD PTR [rbx],eax
   14002b65b:	add    BYTE PTR [rax],al
   14002b65d:	add    BYTE PTR [rax],al
   14002b65f:	add    BYTE PTR [rdx+0x39],ah
   14002b662:	add    eax,DWORD PTR [rax]
   14002b664:	add    BYTE PTR [rax],al
   14002b666:	add    BYTE PTR [rax],al
   14002b668:	jl     0x14002b6a3
   14002b66a:	add    eax,DWORD PTR [rax]
   14002b66c:	add    BYTE PTR [rax],al
   14002b66e:	add    BYTE PTR [rax],al
   14002b670:	mov    eax,0x339
   14002b675:	add    BYTE PTR [rax],al
   14002b677:	add    ah,dh
   14002b679:	cmp    DWORD PTR [rbx],eax
   14002b67b:	add    BYTE PTR [rax],al
   14002b67d:	add    BYTE PTR [rax],al
   14002b67f:	add    BYTE PTR [rdx+rdi*1],dh
   14002b682:	add    eax,DWORD PTR [rax]
   14002b684:	add    BYTE PTR [rax],al
   14002b686:	add    BYTE PTR [rax],al
   14002b688:	push   rsp
   14002b689:	cmp    al,BYTE PTR [rbx]
   14002b68b:	add    BYTE PTR [rax],al
   14002b68d:	add    BYTE PTR [rax],al
   14002b68f:	add    BYTE PTR [rdx+rdi*1+0x3],dh
   14002b693:	add    BYTE PTR [rax],al
   14002b695:	add    BYTE PTR [rax],al
   14002b697:	add    BYTE PTR [rdx+0x33a],cl
   14002b69d:	add    BYTE PTR [rax],al
   14002b69f:	add    BYTE PTR [rdx+0x33a],ch
   14002b6a5:	add    BYTE PTR [rax],al
   14002b6a7:	add    ah,cl
   14002b6a9:	cmp    al,BYTE PTR [rbx]
   14002b6ab:	add    BYTE PTR [rax],al
   14002b6ad:	add    BYTE PTR [rax],al
   14002b6af:	add    dh,ch
   14002b6b1:	cmp    al,BYTE PTR [rbx]
   14002b6b3:	add    BYTE PTR [rax],al
   14002b6b5:	add    BYTE PTR [rax],al
   14002b6b7:	add    BYTE PTR [rsi],cl
   14002b6b9:	cmp    eax,DWORD PTR [rbx]
   14002b6bb:	add    BYTE PTR [rax],al
   14002b6bd:	add    BYTE PTR [rax],al
   14002b6bf:	add    BYTE PTR [rsi+0x3b],al
   14002b6c2:	add    eax,DWORD PTR [rax]
   14002b6c4:	add    BYTE PTR [rax],al
   14002b6c6:	add    BYTE PTR [rax],al
   14002b6c8:	push   0x33b
   14002b6cd:	add    BYTE PTR [rax],al
   14002b6cf:	add    BYTE PTR [rax+0x33b],ah
   14002b6d5:	add    BYTE PTR [rax],al
   14002b6d7:	add    dl,al
   14002b6d9:	cmp    eax,DWORD PTR [rbx]
   14002b6db:	add    BYTE PTR [rax],al
   14002b6dd:	add    BYTE PTR [rax],al
   14002b6df:	add    dh,bh
   14002b6e1:	cmp    eax,DWORD PTR [rbx]
   14002b6e3:	add    BYTE PTR [rax],al
   14002b6e5:	add    BYTE PTR [rax],al
   14002b6e7:	add    BYTE PTR [rdx],bl
   14002b6e9:	cmp    al,0x3
   14002b6eb:	add    BYTE PTR [rax],al
   14002b6ed:	add    BYTE PTR [rax],al
   14002b6ef:	add    BYTE PTR [rdx+0x3c],ah
   14002b6f2:	add    eax,DWORD PTR [rax]
   14002b6f4:	add    BYTE PTR [rax],al
   14002b6f6:	add    BYTE PTR [rax],al
   14002b6f8:	xchg   esp,eax
   14002b6f9:	cmp    al,0x3
   14002b6fb:	add    BYTE PTR [rax],al
   14002b6fd:	add    BYTE PTR [rax],al
   14002b6ff:	add    BYTE PTR [rsp+rdi*1+0x3],dh
   14002b706:	add    BYTE PTR [rax],al
   14002b708:	fdivr  DWORD PTR [rbx+rax*1]
   14002b70b:	add    BYTE PTR [rax],al
   14002b70d:	add    BYTE PTR [rax],al
   14002b70f:	add    ah,dh
   14002b711:	cmp    al,0x3
   14002b713:	add    BYTE PTR [rax],al
   14002b715:	add    BYTE PTR [rax],al
   14002b717:	add    BYTE PTR [rax],bl
   14002b719:	cmp    eax,0x3
   14002b71e:	add    BYTE PTR [rax],al
   14002b720:	cmp    al,0x3d
   14002b722:	add    eax,DWORD PTR [rax]
   14002b724:	add    BYTE PTR [rax],al
   14002b726:	add    BYTE PTR [rax],al
   14002b728:	ins    BYTE PTR es:[rdi],dx
   14002b729:	cmp    eax,0x3
   14002b72e:	add    BYTE PTR [rax],al
   14002b730:	mov    BYTE PTR [rip+0x3],bh        # 0x14002b739
   14002b736:	add    BYTE PTR [rax],al
   14002b738:	mov    eax,0x33d
   14002b73d:	add    BYTE PTR [rax],al
   14002b73f:	add    dh,bl
   14002b741:	cmp    eax,0x3
   14002b746:	add    BYTE PTR [rax],al
   14002b748:	or     al,0x3e
   14002b74a:	add    eax,DWORD PTR [rax]
   14002b74c:	add    BYTE PTR [rax],al
   14002b74e:	add    BYTE PTR [rax],al
   14002b750:	xor    bh,BYTE PTR [rsi]
   14002b752:	add    eax,DWORD PTR [rax]
   14002b754:	add    BYTE PTR [rax],al
   14002b756:	add    BYTE PTR [rax],al
   14002b758:	push   rdx
   14002b759:	add    eax,DWORD PTR ds:[rax]
   14002b75c:	add    BYTE PTR [rax],al
   14002b75e:	add    BYTE PTR [rax],al
   14002b760:	jl     0x14002b7a0
   14002b762:	add    eax,DWORD PTR [rax]
   14002b764:	add    BYTE PTR [rax],al
   14002b766:	add    BYTE PTR [rax],al
   14002b768:	(bad)  
   14002b769:	add    eax,DWORD PTR ds:[rax]
   14002b76c:	add    BYTE PTR [rax],al
   14002b76e:	add    BYTE PTR [rax],al
   14002b770:	mov    esp,0x33e
   14002b775:	add    BYTE PTR [rax],al
   14002b777:	add    al,bl
   14002b779:	add    eax,DWORD PTR ds:[rax]
   14002b77c:	add    BYTE PTR [rax],al
   14002b77e:	add    BYTE PTR [rax],al
   14002b780:	(bad)  
   14002b781:	(bad)  
   14002b782:	add    eax,DWORD PTR [rax]
   14002b784:	add    BYTE PTR [rax],al
   14002b786:	add    BYTE PTR [rax],al
   14002b788:	rex.X (bad) 
   14002b78a:	add    eax,DWORD PTR [rax]
   14002b78c:	add    BYTE PTR [rax],al
   14002b78e:	add    BYTE PTR [rax],al
   14002b790:	push   0x3f
   14002b792:	add    eax,DWORD PTR [rax]
   14002b794:	add    BYTE PTR [rax],al
   14002b796:	add    BYTE PTR [rax],al
   14002b798:	xchg   esp,eax
   14002b799:	(bad)  
   14002b79a:	add    eax,DWORD PTR [rax]
   14002b79c:	add    BYTE PTR [rax],al
   14002b79e:	add    BYTE PTR [rax],al
   14002b7a0:	sar    BYTE PTR [rdi],0x3
   14002b7a3:	add    BYTE PTR [rax],al
   14002b7a5:	add    BYTE PTR [rax],al
   14002b7a7:	add    dh,ch
   14002b7a9:	(bad)  
   14002b7aa:	add    eax,DWORD PTR [rax]
   14002b7ac:	add    BYTE PTR [rax],al
   14002b7ae:	add    BYTE PTR [rax],al
   14002b7b0:	xor    BYTE PTR [rax+0x3],al
   14002b7b3:	add    BYTE PTR [rax],al
   14002b7b5:	add    BYTE PTR [rax],al
   14002b7b7:	add    BYTE PTR [rax+rax*2+0x3],ch
   14002b7bb:	add    BYTE PTR [rax],al
   14002b7bd:	add    BYTE PTR [rax],al
   14002b7bf:	add    dl,al
   14002b7c1:	rex add eax,DWORD PTR [rax]
   14002b7c4:	add    BYTE PTR [rax],al
   14002b7c6:	add    BYTE PTR [rax],al
   14002b7c8:	out    0x40,al
   14002b7ca:	add    eax,DWORD PTR [rax]
   14002b7cc:	add    BYTE PTR [rax],al
   14002b7ce:	add    BYTE PTR [rax],al
   14002b7d0:	adc    al,0x41
   14002b7d2:	add    eax,DWORD PTR [rax]
   14002b7d4:	add    BYTE PTR [rax],al
   14002b7d6:	add    BYTE PTR [rax],al
   14002b7d8:	rex.W
   14002b7d9:	add    eax,DWORD PTR [r8]
   14002b7dc:	add    BYTE PTR [rax],al
   14002b7de:	add    BYTE PTR [rax],al
   14002b7e0:	add    eax,DWORD PTR fs:[r8]
   14002b7e4:	add    BYTE PTR [rax],al
   14002b7e6:	add    BYTE PTR [rax],al
   14002b7e8:	nop
   14002b7e9:	add    eax,DWORD PTR [r8]
   14002b7ec:	add    BYTE PTR [rax],al
   14002b7ee:	add    BYTE PTR [rax],al
   14002b7f0:	mov    eax,0x341
   14002b7f5:	add    BYTE PTR [rax],al
   14002b7f7:	add    dh,bl
   14002b7f9:	add    eax,DWORD PTR [r8]
   14002b7fc:	add    BYTE PTR [rax],al
   14002b7fe:	add    BYTE PTR [rax],al
   14002b800:	add    al,BYTE PTR [rdx+0x3]
   14002b803:	add    BYTE PTR [rax],al
   14002b805:	add    BYTE PTR [rax],al
   14002b807:	add    BYTE PTR [rdx+rax*2],ch
   14002b80a:	add    eax,DWORD PTR [rax]
   14002b80c:	add    BYTE PTR [rax],al
   14002b80e:	add    BYTE PTR [rax],al
   14002b810:	jle    0x14002b854
   14002b812:	add    eax,DWORD PTR [rax]
   14002b814:	add    BYTE PTR [rax],al
   14002b816:	add    BYTE PTR [rax],al
   14002b818:	mov    BYTE PTR [rdx+0x3],0x0
   14002b81c:	add    BYTE PTR [rax],al
   14002b81e:	add    BYTE PTR [rax],al
   14002b820:	in     al,dx
   14002b821:	rex.X add eax,DWORD PTR [rax]
   14002b824:	add    BYTE PTR [rax],al
   14002b826:	add    BYTE PTR [rax],al
   14002b828:	sbb    al,0x43
   14002b82a:	add    eax,DWORD PTR [rax]
   14002b82c:	add    BYTE PTR [rax],al
   14002b82e:	add    BYTE PTR [rax],al
   14002b830:	rex.R
   14002b831:	rex.XB add eax,DWORD PTR [r8]
   14002b834:	add    BYTE PTR [rax],al
   14002b836:	add    BYTE PTR [rax],al
   14002b838:	rex.XB add ax,WORD PTR [r8]
   14002b83c:	add    BYTE PTR [rax],al
   14002b83e:	add    BYTE PTR [rax],al
   14002b840:	je     0x14002b862
   14002b842:	add    eax,DWORD PTR [rax]
   14002b844:	add    BYTE PTR [rax],al
   14002b846:	add    BYTE PTR [rax],al
   14002b848:	sub    al,0x20
   14002b84a:	add    eax,DWORD PTR [rax]
   14002b84c:	add    BYTE PTR [rax],al
   14002b84e:	add    BYTE PTR [rax],al
   14002b850:	cli    
   14002b851:	(bad)  
   14002b852:	add    eax,DWORD PTR [rax]
   14002b854:	add    BYTE PTR [rax],al
   14002b856:	add    BYTE PTR [rax],al
   14002b858:	rcr    BYTE PTR [rdi],cl
   14002b85a:	add    eax,DWORD PTR [rax]
   14002b85c:	add    BYTE PTR [rax],al
   14002b85e:	add    BYTE PTR [rax],al
   14002b860:	lods   al,BYTE PTR ds:[rsi]
   14002b861:	(bad)  
   14002b862:	add    eax,DWORD PTR [rax]
   14002b864:	add    BYTE PTR [rax],al
   14002b866:	add    BYTE PTR [rax],al
   14002b868:	js     0x14002b889
   14002b86a:	add    eax,DWORD PTR [rax]
   14002b86c:	add    BYTE PTR [rax],al
   14002b86e:	add    BYTE PTR [rax],al
   14002b870:	push   rax
   14002b871:	(bad)  
   14002b872:	add    eax,DWORD PTR [rax]
   14002b874:	add    BYTE PTR [rax],al
   14002b876:	add    BYTE PTR [rax],al
   14002b878:	and    al,0x1f
   14002b87a:	add    eax,DWORD PTR [rax]
   14002b87c:	add    BYTE PTR [rax],al
   14002b87e:	add    BYTE PTR [rax],al
   14002b880:	add    al,0x1f
   14002b882:	add    eax,DWORD PTR [rax]
   14002b884:	add    BYTE PTR [rax],al
   14002b886:	add    BYTE PTR [rax],al
   14002b888:	ficomp WORD PTR [rsi]
   14002b88a:	add    eax,DWORD PTR [rax]
   14002b88c:	add    BYTE PTR [rax],al
   14002b88e:	add    BYTE PTR [rax],al
   14002b890:	enter  0x31e,0x0
   14002b894:	add    BYTE PTR [rax],al
   14002b896:	add    BYTE PTR [rax],al
   14002b898:	mov    dl,0x1e
   14002b89a:	add    eax,DWORD PTR [rax]
   14002b89c:	add    BYTE PTR [rax],al
   14002b89e:	add    BYTE PTR [rax],al
   14002b8a0:	xchg   esi,eax
   14002b8a1:	(bad)  
   14002b8a2:	add    eax,DWORD PTR [rax]
   14002b8a4:	add    BYTE PTR [rax],al
   14002b8a6:	add    BYTE PTR [rax],al
   14002b8a8:	pop    rsi
   14002b8a9:	(bad)  
   14002b8aa:	add    eax,DWORD PTR [rax]
   14002b8ac:	add    BYTE PTR [rax],al
   14002b8ae:	add    BYTE PTR [rax],al
   14002b8b0:	cmp    al,0x1e
   14002b8b2:	add    eax,DWORD PTR [rax]
   14002b8b4:	add    BYTE PTR [rax],al
   14002b8b6:	add    BYTE PTR [rax],al
   14002b8b8:	out    dx,al
   14002b8b9:	sbb    eax,0x3
   14002b8be:	add    BYTE PTR [rax],al
   14002b8c0:	(bad)  
   14002b8c1:	sbb    eax,0x3
   14002b8c6:	add    BYTE PTR [rax],al
   14002b8c8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002b8c9:	sbb    eax,0x3
   14002b8ce:	add    BYTE PTR [rax],al
   14002b8d0:	je     0x14002b8ff
   14002b8d2:	add    eax,DWORD PTR [rax]
	...
   14002b8e0:	pop    rsp
   14002b8e1:	sbb    eax,0x3
   14002b8e6:	add    BYTE PTR [rax],al
   14002b8e8:	cs sbb eax,0x3
   14002b8ee:	add    BYTE PTR [rax],al
   14002b8f0:	(bad)  
   14002b8f1:	sbb    eax,0x3
   14002b8f6:	add    BYTE PTR [rax],al
   14002b8f8:	(bad)  
   14002b8f9:	sbb    al,0x3
   14002b8fb:	add    BYTE PTR [rax],al
   14002b8fd:	add    BYTE PTR [rax],al
   14002b8ff:	add    BYTE PTR [rdx+0x31c],al
   14002b905:	add    BYTE PTR [rax],al
   14002b907:	add    BYTE PTR [rax+0x1c],cl
   14002b90a:	add    eax,DWORD PTR [rax]
   14002b90c:	add    BYTE PTR [rax],al
   14002b90e:	add    BYTE PTR [rax],al
   14002b910:	sub    BYTE PTR [rbx+rax*1],bl
   14002b913:	add    BYTE PTR [rax],al
   14002b915:	add    BYTE PTR [rax],al
   14002b917:	add    BYTE PTR [rdx],cl
   14002b919:	sbb    al,0x3
   14002b91b:	add    BYTE PTR [rax],al
   14002b91d:	add    BYTE PTR [rax],al
   14002b91f:	add    al,bl
   14002b921:	sbb    eax,DWORD PTR [rbx]
   14002b923:	add    BYTE PTR [rax],al
   14002b925:	add    BYTE PTR [rax],al
   14002b927:	add    BYTE PTR [rbx+rbx*1+0x3],ch
   14002b92e:	add    BYTE PTR [rax],al
   14002b930:	(bad)  
   14002b931:	sbb    eax,DWORD PTR [rbx]
   14002b933:	add    BYTE PTR [rax],al
   14002b935:	add    BYTE PTR [rax],al
   14002b937:	add    BYTE PTR [rax+0x1b],ah
   14002b93a:	add    eax,DWORD PTR [rax]
   14002b93c:	add    BYTE PTR [rax],al
   14002b93e:	add    BYTE PTR [rax],al
   14002b940:	(bad)  
   14002b941:	sbb    eax,DWORD PTR [rbx]
   14002b943:	add    BYTE PTR [rax],al
   14002b945:	add    BYTE PTR [rax],al
   14002b947:	add    ah,bl
   14002b949:	sbb    al,BYTE PTR [rbx]
   14002b94b:	add    BYTE PTR [rax],al
   14002b94d:	add    BYTE PTR [rax],al
   14002b94f:	add    BYTE PTR [rdx+rbx*1+0x3],bl
   14002b956:	add    BYTE PTR [rax],al
   14002b958:	data16 sbb al,BYTE PTR [rbx]
   14002b95b:	add    BYTE PTR [rax],al
   14002b95d:	add    BYTE PTR [rax],al
   14002b95f:	add    BYTE PTR [rdx+rbx*1],bh
   14002b962:	add    eax,DWORD PTR [rax]
   14002b964:	add    BYTE PTR [rax],al
   14002b966:	add    BYTE PTR [rax],al
   14002b968:	adc    BYTE PTR [rdx],bl
   14002b96a:	add    eax,DWORD PTR [rax]
   14002b96c:	add    BYTE PTR [rax],al
   14002b96e:	add    BYTE PTR [rax],al
   14002b970:	fcomp  DWORD PTR [rcx]
   14002b972:	add    eax,DWORD PTR [rax]
   14002b974:	add    BYTE PTR [rax],al
   14002b976:	add    BYTE PTR [rax],al
   14002b978:	sahf   
   14002b979:	sbb    DWORD PTR [rbx],eax
   14002b97b:	add    BYTE PTR [rax],al
   14002b97d:	add    BYTE PTR [rax],al
   14002b97f:	add    BYTE PTR [rsi+0x19],dh
   14002b982:	add    eax,DWORD PTR [rax]
   14002b984:	add    BYTE PTR [rax],al
   14002b986:	add    BYTE PTR [rax],al
   14002b988:	sbb    DWORD PTR ds:[rbx],eax
   14002b98b:	add    BYTE PTR [rax],al
   14002b98d:	add    BYTE PTR [rax],al
   14002b98f:	add    dl,ch
   14002b991:	sbb    BYTE PTR [rbx],al
   14002b993:	add    BYTE PTR [rax],al
   14002b995:	add    BYTE PTR [rax],al
   14002b997:	add    BYTE PTR [rsi+0x318],ah
   14002b99d:	add    BYTE PTR [rax],al
   14002b99f:	add    BYTE PTR [rdx+0x18],ch
   14002b9a2:	add    eax,DWORD PTR [rax]
   14002b9a4:	add    BYTE PTR [rax],al
   14002b9a6:	add    BYTE PTR [rax],al
   14002b9a8:	xor    al,0x18
   14002b9aa:	add    eax,DWORD PTR [rax]
   14002b9ac:	add    BYTE PTR [rax],al
   14002b9ae:	add    BYTE PTR [rax],al
   14002b9b0:	clc    
   14002b9b1:	(bad)  
   14002b9b2:	add    eax,DWORD PTR [rax]
   14002b9b4:	add    BYTE PTR [rax],al
   14002b9b6:	add    BYTE PTR [rax],al
   14002b9b8:	mov    ah,0x17
   14002b9ba:	add    eax,DWORD PTR [rax]
   14002b9bc:	add    BYTE PTR [rax],al
   14002b9be:	add    BYTE PTR [rax],al
   14002b9c0:	jb     0x14002b9d9
   14002b9c2:	add    eax,DWORD PTR [rax]
   14002b9c4:	add    BYTE PTR [rax],al
   14002b9c6:	add    BYTE PTR [rax],al
   14002b9c8:	xor    al,0x17
   14002b9ca:	add    eax,DWORD PTR [rax]
   14002b9cc:	add    BYTE PTR [rax],al
   14002b9ce:	add    BYTE PTR [rax],al
   14002b9d0:	repnz (bad) 
   14002b9d2:	add    eax,DWORD PTR [rax]
   14002b9d4:	add    BYTE PTR [rax],al
   14002b9d6:	add    BYTE PTR [rax],al
   14002b9d8:	(bad)  
   14002b9d9:	(bad)  
   14002b9da:	add    eax,DWORD PTR [rax]
   14002b9dc:	add    BYTE PTR [rax],al
   14002b9de:	add    BYTE PTR [rax],al
   14002b9e0:	adc    BYTE PTR [rsi],0x3
   14002b9e3:	add    BYTE PTR [rax],al
   14002b9e5:	add    BYTE PTR [rax],al
   14002b9e7:	add    BYTE PTR [rdx+0x16],al
   14002b9ea:	add    eax,DWORD PTR [rax]
   14002b9ec:	add    BYTE PTR [rax],al
   14002b9ee:	add    BYTE PTR [rax],al
   14002b9f0:	add    dl,BYTE PTR [rsi]
   14002b9f2:	add    eax,DWORD PTR [rax]
   14002b9f4:	add    BYTE PTR [rax],al
   14002b9f6:	add    BYTE PTR [rax],al
   14002b9f8:	loopne 0x14002ba0f
   14002b9fa:	add    eax,DWORD PTR [rax]
	...
   14002ba10:	adc    BYTE PTR [rsi+0x14002],0x0
   14002ba17:	add    al,al
   14002ba19:	popf   
   14002ba1a:	add    al,BYTE PTR [rax+0x1]
   14002ba1d:	add    BYTE PTR [rax],al
   14002ba1f:	add    al,dl
   14002ba21:	popf   
   14002ba22:	add    al,BYTE PTR [rax+0x1]
   14002ba25:	add    BYTE PTR [rax],al
   14002ba27:	add    al,ah
   14002ba29:	popf   
   14002ba2a:	add    al,BYTE PTR [rax+0x1]
   14002ba2d:	add    BYTE PTR [rax],al
   14002ba2f:	add    al,dh
   14002ba31:	popf   
   14002ba32:	add    al,BYTE PTR [rax+0x1]
   14002ba35:	add    BYTE PTR [rax],al
   14002ba37:	add    BYTE PTR [rax],al
   14002ba39:	sahf   
   14002ba3a:	add    al,BYTE PTR [rax+0x1]
	...
   14002ba4d:	add    BYTE PTR [rax],al
   14002ba4f:	add    BYTE PTR [rax-0x68],ch
   14002ba52:	add    al,BYTE PTR [rax+0x1]
   14002ba55:	add    BYTE PTR [rax],al
   14002ba57:	add    BYTE PTR [rdx+rbx*4+0x2],ch
   14002ba5b:	rex add DWORD PTR [rax],eax
	...
   14002ba6e:	add    BYTE PTR [rax],al
   14002ba70:	(bad)
   14002ba75:	ins    BYTE PTR es:[rdi],dx
   14002ba76:	ins    BYTE PTR es:[rdi],dx
   14002ba77:	outs   dx,DWORD PTR ds:[rsi]
   14002ba78:	movsxd esp,DWORD PTR [rcx+0x74]
   14002ba7b:	imul   ebp,DWORD PTR [rdi+0x6e],0x434c0000
   14002ba82:	outs   dx,DWORD PTR ds:[rsi]
   14002ba83:	outs   dx,BYTE PTR ds:[rsi]
   14002ba84:	jbe    0x14002baeb
   14002ba86:	jb     0x14002bafc
	...
   14002ba90:	and    al,BYTE PTR [rip+0x21993]        # 0x14004d429
   14002ba96:	add    BYTE PTR [rax],al
   14002ba98:	cmp    al,0xf1
   14002ba9a:	add    al,BYTE PTR [rax]
   14002ba9c:	add    DWORD PTR [rax],eax
   14002ba9e:	add    BYTE PTR [rax],al
   14002baa0:	adc    al,0xf1
   14002baa2:	add    al,BYTE PTR [rax]
   14002baa4:	(bad)  
   14002baa5:	add    BYTE PTR [rax],al
   14002baa7:	add    BYTE PTR [rcx+rsi*8+0x2],cl
   14002baab:	add    BYTE PTR [rax],dh
	...
   14002bab5:	add    BYTE PTR [rax],al
   14002bab7:	add    BYTE PTR [rdx],cl
   14002bab9:	add    BYTE PTR [rax],al
   14002babb:	add    BYTE PTR [rax],al
   14002babd:	add    BYTE PTR [rax],al
   14002babf:	add    BYTE PTR [rdx],cl
   14002bac1:	push   rbp
   14002bac2:	jae    0x14002bb25
   14002bac4:	cmp    cl,BYTE PTR gs:[edx]
   14002bac8:	and    BYTE PTR [rax],ah
   14002baca:	and    BYTE PTR [rax],ah
   14002bacc:	ins    BYTE PTR es:[rdi],dx
   14002bacd:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14002bad0:	jbe    0x14002bb37
   14002bad2:	jb     0x14002bb48
   14002bad4:	and    BYTE PTR [rbx+0x6f],bl
   14002bad7:	jo     0x14002bb4d
   14002bad9:	imul   ebp,DWORD PTR [rdi+0x6e],0x3c205d73
   14002bae0:	imul   ebp,DWORD PTR [rsi+0x66],0x3e656c69
   14002bae7:	and    BYTE PTR [rbx+0x3c],bl
   14002baea:	imul   ebp,DWORD PTR [rsi+0x66],0x3e656c69
   14002baf1:	cs cs cs pop rbp
   14002baf5:	or     cl,BYTE PTR [rdx]
   14002baf7:	ins    BYTE PTR es:[rdi],dx
   14002baf8:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14002bafb:	jbe    0x14002bb62
   14002bafd:	jb     0x14002bb73
   14002baff:	and    BYTE PTR [rcx+0x73],ch
   14002bb02:	and    BYTE PTR [rax+0x61],dh
   14002bb05:	jb     0x14002bb7b
   14002bb07:	and    BYTE PTR [rdi+0x66],ch
   14002bb0a:	and    BYTE PTR [rcx+0x74],dl
   14002bb0d:	(bad)  
   14002bb0e:	jae    0x14002bb30
   14002bb10:	imul   r13,QWORD PTR [rsi+0x67],0x74736975
   14002bb18:	and    BYTE PTR [rdi+rbp*2+0x6f],dh
   14002bb1c:	ins    BYTE PTR es:[rdi],dx
   14002bb1d:	and    BYTE PTR [rbx+0x68],ah
   14002bb20:	(bad)  
   14002bb21:	imul   ebp,DWORD PTR [rsi+0x2e],0x20744920
   14002bb28:	movsxd esp,DWORD PTR [rcx+0x6e]
   14002bb2b:	and    BYTE PTR [rdx+0x65],ah
   14002bb2e:	and    BYTE PTR [rbp+0x73],dh
   14002bb31:	gs and BYTE PTR fs:[rcx+0x73],ah
   14002bb36:	and    BYTE PTR [rcx+0xa],ah
   14002bb39:	jae    0x14002bbaf
   14002bb3b:	(bad)  
   14002bb3c:	outs   dx,BYTE PTR ds:[rsi]
   14002bb3d:	fs sub eax,0x6e6f6c61
   14002bb43:	and    BYTE PTR gs:[rdi+rbp*2+0x6f],dh
   14002bb48:	ins    BYTE PTR es:[rdi],dx
   14002bb49:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   14002bb4d:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14002bb50:	jbe    0x14002bbb7
   14002bb52:	jb     0x14002bbc8
   14002bb54:	and    BYTE PTR [rcx+0x6e],ah
   14002bb57:	and    BYTE PTR fs:[rsi+0x69],ah
   14002bb5b:	ins    BYTE PTR es:[rdi],dx
   14002bb5c:	je     0x14002bbc3
   14002bb5e:	jb     0x14002bb80
   14002bb60:	je     0x14002bbd4
   14002bb62:	(bad)  
   14002bb63:	outs   dx,BYTE PTR ds:[rsi]
   14002bb64:	jae    0x14002bbd2
   14002bb66:	(bad)  
   14002bb67:	je     0x14002bbd2
   14002bb69:	outs   dx,DWORD PTR ds:[rsi]
   14002bb6a:	outs   dx,BYTE PTR ds:[rsi]
   14002bb6b:	and    BYTE PTR [rcx+riz*2+0x74],ah
   14002bb6f:	(bad)  
   14002bb70:	and    BYTE PTR [rsi+0x69],ah
   14002bb73:	ins    BYTE PTR es:[rdi],dx
   14002bb74:	gs jae 0x14002bba5
   14002bb77:	or     dl,BYTE PTR [rax+rbp*2+0x65]
   14002bb7b:	and    BYTE PTR [rsi+0x6f],ah
   14002bb7e:	ins    BYTE PTR es:[rdi],dx
   14002bb7f:	ins    BYTE PTR es:[rdi],dx
   14002bb80:	outs   dx,DWORD PTR ds:[rsi]
   14002bb81:	ja     0x14002bbec
   14002bb83:	outs   dx,BYTE PTR ds:[rsi]
   14002bb84:	and    BYTE PTR [esi+0x69],ah
   14002bb88:	ins    BYTE PTR es:[rdi],dx
   14002bb89:	and    BYTE PTR gs:[rsi+0x6f],ah
   14002bb8d:	jb     0x14002bbfc
   14002bb8f:	(bad)  
   14002bb90:	je     0x14002bc05
   14002bb92:	and    BYTE PTR [rcx+0x72],ah
   14002bb95:	and    BYTE PTR gs:[rbx+0x75],dh
   14002bb99:	jo     0x14002bc0b
   14002bb9b:	outs   dx,DWORD PTR ds:[rsi]
   14002bb9c:	jb     0x14002bc12
   14002bb9e:	gs cmp cl,BYTE PTR fs:[rdx]
   14002bba2:	or     ah,BYTE PTR [rip+0x66490a31]        # 0x1a64bc5d9
   14002bba8:	and    BYTE PTR [rbp+0x75],ch
   14002bbab:	ins    BYTE PTR es:[rdi],dx
   14002bbac:	je     0x14002bc17
   14002bbae:	jo     0x14002bc1c
   14002bbb0:	and    BYTE PTR gs:[rcx+0x6e],ch
   14002bbb4:	jo     0x14002bc2b
   14002bbb6:	je     0x14002bbd8
   14002bbb8:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x6120
   14002bbbf:	jb     0x14002bc26
   14002bbc1:	and    BYTE PTR [rbx+0x70],dh
   14002bbc4:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14002bbc8:	imul   esp,DWORD PTR [rbp+0x64],0x6874202c
   14002bbcf:	gs jns 0x14002bbf2
   14002bbd2:	(bad)  
   14002bbd3:	jb     0x14002bc3a
   14002bbd5:	and    BYTE PTR [rbp+0x65],ch
   14002bbd8:	jb     0x14002bc41
   14002bbda:	gs and BYTE PTR fs:[rdi+0x69],dh
   14002bbdf:	je     0x14002bc49
   14002bbe1:	or     dh,BYTE PTR [rdx+rsi*2+0x61]
   14002bbe5:	outs   dx,BYTE PTR ds:[rsi]
   14002bbe6:	jae    0x14002bc54
   14002bbe8:	(bad)  
   14002bbe9:	je     0x14002bc54
   14002bbeb:	outs   dx,DWORD PTR ds:[rsi]
   14002bbec:	outs   dx,BYTE PTR ds:[rsi]
   14002bbed:	jae    0x14002bc0f
   14002bbef:	data16 jb 0x14002bc61
   14002bbf2:	ins    DWORD PTR es:[rdi],dx
   14002bbf3:	and    BYTE PTR [rcx+riz*2+0x74],ch
   14002bbf7:	gs jb  0x14002bc1a
   14002bbfa:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x7420
   14002bc01:	(bad)  
   14002bc02:	imul   ebp,DWORD PTR [rcx+0x6e],0x67
   14002bc06:	and    BYTE PTR [rax+0x72],dh
   14002bc09:	movsxd esp,DWORD PTR gs:[rbp+0x64]
   14002bc0d:	outs   dx,BYTE PTR gs:[rsi]
   14002bc0f:	movsxd esp,DWORD PTR [rbp+0x2e]
   14002bc12:	or     cl,BYTE PTR [rdx]
   14002bc14:	rex.WRXB jo 0x14002bc8b
   14002bc17:	imul   ebp,DWORD PTR [rdi+0x6e],0x200a3a73
   14002bc1e:	and    BYTE PTR [rax],ah
   14002bc20:	and    BYTE PTR [rip+0x20200a68],ch        # 0x16022c68e
   14002bc26:	and    BYTE PTR [rax],ah
   14002bc28:	sub    eax,0x706c6568
   14002bc2d:	and    BYTE PTR [rax],ah
   14002bc2f:	imul   r14d,DWORD PTR [rbx+0x70],0x2079616c
   14002bc37:	je     0x14002bca1
   14002bc39:	imul   esi,DWORD PTR [rbx+0x20],0x6f666e69
   14002bc40:	jb     0x14002bcaf
   14002bc42:	(bad)  
   14002bc43:	je     0x14002bcae
   14002bc45:	outs   dx,DWORD PTR ds:[rsi]
   14002bc46:	outs   dx,BYTE PTR ds:[rsi]
   14002bc47:	and    BYTE PTR [rcx+0x6e],ah
   14002bc4a:	and    BYTE PTR fs:[rbp+0x78],ah
   14002bc4e:	imul   esi,DWORD PTR [rsi+rbp*1+0xa],0x2020200a
   14002bc56:	and    BYTE PTR [rip+0x693c2069],ch        # 0x1a93edcc5
   14002bc5c:	outs   dx,BYTE PTR ds:[rsi]
   14002bc5d:	imul   bp,WORD PTR [rbp+riz*2+0x3e],0x200a
   14002bc64:	and    BYTE PTR [rax],ah
   14002bc66:	and    BYTE PTR [rip+0x75706e69],ch        # 0x1b5732ad5
   14002bc6c:	je     0x14002bc9b
   14002bc6e:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x693c
   14002bc75:	outs   dx,BYTE PTR ds:[rsi]
   14002bc76:	imul   bp,WORD PTR [rbp+riz*2+0x3e],0x200a
   14002bc7d:	and    BYTE PTR [rax],ah
   14002bc7f:	and    BYTE PTR [rax],ah
   14002bc81:	and    BYTE PTR [rax],ah
   14002bc83:	and    BYTE PTR [rax],ah
   14002bc85:	and    BYTE PTR [rax],ah
   14002bc87:	push   rbx
   14002bc88:	jo     0x14002bcef
   14002bc8a:	movsxd ebp,DWORD PTR [rcx+0x66]
   14002bc8d:	jns    0x14002bcaf
   14002bc8f:	imul   ebp,DWORD PTR [rsi+0x70],0x66207475
   14002bc96:	imul   ebp,DWORD PTR [rbp+riz*2+0x2e],0x65735520
   14002bc9e:	and    BYTE PTR [rcx+0x66],ch
   14002bca1:	and    BYTE PTR [rcx+rbp*2],bh
   14002bca4:	outs   dx,BYTE PTR ds:[rsi]
   14002bca5:	imul   bp,WORD PTR [rbp+riz*2+0x3e],0x6d20
   14002bcac:	imul   esp,DWORD PTR [rdi+0x68],0x74732074
   14002bcb3:	(bad)  
   14002bcb4:	jb     0x14002bd2a
   14002bcb6:	and    BYTE PTR [rdi+0x69],dh
   14002bcb9:	je     0x14002bd23
   14002bcbb:	and    BYTE PTR [rcx+0x20],ah
   14002bcbe:	fs (bad) 
   14002bcc0:	jae    0x14002bd2a
   14002bcc2:	or     ah,BYTE PTR cs:[rax]
   14002bcc5:	and    BYTE PTR [rax],ah
   14002bcc7:	and    BYTE PTR [rax],ah
   14002bcc9:	and    BYTE PTR [rax],ah
   14002bccb:	and    BYTE PTR [rax],ah
   14002bccd:	and    BYTE PTR [rax],ah
   14002bccf:	push   rsp
   14002bcd0:	push   0x6f207369
   14002bcd5:	jo     0x14002bd4b
   14002bcd7:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e616320
   14002bcde:	and    BYTE PTR [rdx+0x65],ah
   14002bce1:	and    BYTE PTR [rbp+0x73],dh
   14002bce4:	gs and BYTE PTR fs:[rbx+0x65],dh
   14002bce9:	jbe    0x14002bd50
   14002bceb:	jb     0x14002bd4e
   14002bced:	ins    BYTE PTR es:[rdi],dx
   14002bcee:	and    BYTE PTR [rcx+rbp*2+0x6d],dh
   14002bcf2:	gs jae 0x14002bd15
   14002bcf5:	je     0x14002bd66
   14002bcf7:	and    BYTE PTR [rbp+0x65],ch
   14002bcfa:	jb     0x14002bd63
   14002bcfc:	and    BYTE PTR gs:[rcx+0x6e],ch
   14002bd00:	jo     0x14002bd77
   14002bd02:	je     0x14002bd77
   14002bd04:	or     ah,BYTE PTR cs:[rax]
   14002bd07:	and    BYTE PTR [rax],ah
   14002bd09:	and    BYTE PTR [rax],ah
   14002bd0b:	and    BYTE PTR [rax],ah
   14002bd0d:	and    BYTE PTR [rax],ah
   14002bd0f:	and    BYTE PTR [rax],ah
   14002bd11:	rex.WRB (bad) 
   14002bd13:	jns    0x14002bd35
   14002bd15:	(bad)  
   14002bd16:	and    BYTE PTR gs:[rdi],ah
   14002bd19:	sub    eax,0x73282027
   14002bd1e:	je     0x14002bd81
   14002bd20:	outs   dx,BYTE PTR ds:[rsi]
   14002bd21:	fs (bad) 
   14002bd23:	jb     0x14002bd89
   14002bd25:	and    BYTE PTR [rcx+0x6e],ch
   14002bd28:	jo     0x14002bd9f
   14002bd2a:	je     0x14002bd55
   14002bd2c:	and    BYTE PTR [rsi+0x6f],ah
   14002bd2f:	jb     0x14002bd51
   14002bd31:	jne    0x14002bda6
   14002bd33:	and    BYTE PTR gs:[rcx+0x6e],ch
   14002bd37:	and    BYTE PTR [rcx+0x20],ah
   14002bd3a:	jo     0x14002bda5
   14002bd3c:	jo     0x14002bda3
   14002bd3e:	or     cl,BYTE PTR cs:[rdx]
   14002bd41:	and    BYTE PTR [rax],ah
   14002bd43:	and    BYTE PTR [rax],ah
   14002bd45:	sub    eax,0x6f3c206f
   14002bd4a:	jne    0x14002bdc0
   14002bd4c:	imul   bp,WORD PTR [rbp+riz*2+0x3e],0x200a
   14002bd53:	and    BYTE PTR [rax],ah
   14002bd55:	and    BYTE PTR [rip+0x7074756f],ch        # 0x1b07732ca
   14002bd5b:	jne    0x14002bdd1
   14002bd5d:	sub    eax,0x656c6966
   14002bd62:	and    BYTE PTR [rdi+rbp*2],bh
   14002bd65:	jne    0x14002bddb
   14002bd67:	imul   bp,WORD PTR [rbp+riz*2+0x3e],0x200a
   14002bd6e:	and    BYTE PTR [rax],ah
   14002bd70:	and    BYTE PTR [rax],ah
   14002bd72:	and    BYTE PTR [rax],ah
   14002bd74:	and    BYTE PTR [rax],ah
   14002bd76:	and    BYTE PTR [rax],ah
   14002bd78:	push   rbx
   14002bd79:	jo     0x14002bde0
   14002bd7b:	movsxd ebp,DWORD PTR [rcx+0x66]
   14002bd7e:	jns    0x14002bda0
   14002bd80:	outs   dx,DWORD PTR ds:[rsi]
   14002bd81:	jne    0x14002bdf7
   14002bd83:	jo     0x14002bdfa
   14002bd85:	je     0x14002bda7
   14002bd87:	imul   bp,WORD PTR [rbp+riz*2+0x2e],0x4420
   14002bd8e:	gs data16 (bad) 
   14002bd91:	jne    0x14002bdff
   14002bd93:	je     0x14002bdb5
   14002bd95:	imul   esi,DWORD PTR [rbx+0x20],0x20272d27
   14002bd9c:	sub    BYTE PTR [rbx+0x74],dh
   14002bd9f:	(bad)  
   14002bda0:	outs   dx,BYTE PTR ds:[rsi]
   14002bda1:	fs (bad) 
   14002bda3:	jb     0x14002be09
   14002bda5:	and    BYTE PTR [rdi+0x75],ch
   14002bda8:	je     0x14002be1a
   14002bdaa:	jne    0x14002be20
   14002bdac:	sub    DWORD PTR [rsi],ebp
   14002bdae:	or     cl,BYTE PTR [rdx]
   14002bdb0:	and    BYTE PTR [rax],ah
   14002bdb2:	and    BYTE PTR [rax],ah
   14002bdb4:	sub    eax,0x3c206669
   14002bdb9:	imul   ebp,DWORD PTR [rsi+0x66],0x616d726f
   14002bdc0:	je     0x14002be00
   14002bdc2:	or     ah,BYTE PTR [rax]
   14002bdc4:	and    BYTE PTR [rax],ah
   14002bdc6:	and    BYTE PTR [rip+0x75706e69],ch        # 0x1b5732c35
   14002bdcc:	je     0x14002bdfb
   14002bdce:	outs   dx,WORD PTR ds:[rsi]
   14002bdd0:	jb     0x14002be3f
   14002bdd2:	(bad)  
   14002bdd3:	je     0x14002bdf5
   14002bdd5:	cmp    al,0x66
   14002bdd7:	outs   dx,DWORD PTR ds:[rsi]
   14002bdd8:	jb     0x14002be47
   14002bdda:	(bad)  
   14002bddb:	je     0x14002be1b
   14002bddd:	or     ah,BYTE PTR [rax]
   14002bddf:	and    BYTE PTR [rax],ah
   14002bde1:	and    BYTE PTR [rax],ah
   14002bde3:	and    BYTE PTR [rax],ah
   14002bde5:	and    BYTE PTR [rax],ah
   14002bde7:	and    BYTE PTR [rax],ah
   14002bde9:	push   rbx
   14002bdea:	jo     0x14002be51
   14002bdec:	movsxd ebp,DWORD PTR [rcx+0x66]
   14002bdef:	jns    0x14002be11
   14002bdf1:	imul   ebp,DWORD PTR [rsi+0x70],0x66207475
   14002bdf8:	outs   dx,DWORD PTR ds:[rsi]
   14002bdf9:	jb     0x14002be68
   14002bdfb:	(bad)  
   14002bdfc:	je     0x14002be1e
   14002bdfe:	outs   dx,WORD PTR ds:[rsi]
   14002be00:	jb     0x14002be22
   14002be02:	jae    0x14002be79
   14002be04:	(bad)
   14002be09:	outs   dx,BYTE PTR gs:[rsi]
   14002be0b:	je     0x14002be2d
   14002be0d:	cmp    al,0x69
   14002be0f:	outs   dx,BYTE PTR ds:[rsi]
   14002be10:	imul   bp,WORD PTR [rbp+riz*2+0x3e],0x2e73
   14002be17:	or     ah,BYTE PTR [rax]
   14002be19:	and    BYTE PTR [rax],ah
   14002be1b:	and    BYTE PTR [rax],ah
   14002be1d:	and    BYTE PTR [rax],ah
   14002be1f:	and    BYTE PTR [rax],ah
   14002be21:	and    BYTE PTR [rax],ah
   14002be23:	push   rsp
   14002be24:	push   0x6f662065
   14002be29:	jb     0x14002be98
   14002be2b:	(bad)  
   14002be2c:	je     0x14002be4e
   14002be2e:	imul   esi,DWORD PTR [rbx+0x20],0x6f747561
   14002be35:	sub    eax,0x65746564
   14002be3a:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
   14002be3e:	and    BYTE PTR [rsi+0x72],ah
   14002be41:	outs   dx,DWORD PTR ds:[rsi]
   14002be42:	ins    DWORD PTR es:[rdi],dx
   14002be43:	and    BYTE PTR [rax+rbp*2+0x65],dh
   14002be47:	and    BYTE PTR [rsi+0x69],ah
   14002be4a:	ins    BYTE PTR es:[rdi],dx
   14002be4b:	and    BYTE PTR gs:[rsi+0x61],ch
   14002be4f:	ins    DWORD PTR es:[rdi],dx
   14002be50:	and    BYTE PTR gs:[rcx+0x6e],ah
   14002be54:	and    BYTE PTR fs:[rbp+riz*2+0x66],ah
   14002be59:	(bad)  
   14002be5a:	jne    0x14002bec8
   14002be5c:	je     0x14002bed1
   14002be5e:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   14002be62:	(bad)  
   14002be63:	je     0x14002bed8
   14002be65:	(bad)  
   14002be66:	or     cl,BYTE PTR cs:[rdx]
   14002be69:	and    BYTE PTR [rax],ah
   14002be6b:	and    BYTE PTR [rax],ah
   14002be6d:	sub    eax,0x3c20666f
   14002be72:	outs   dx,DWORD PTR ds:[rsi]
   14002be73:	jne    0x14002bee9
   14002be75:	outs   dx,WORD PTR ds:[rsi]
   14002be77:	jb     0x14002bee6
   14002be79:	(bad)  
   14002be7a:	je     0x14002beba
   14002be7c:	or     ah,BYTE PTR [rax]
   14002be7e:	and    BYTE PTR [rax],ah
   14002be80:	and    BYTE PTR [rip+0x7074756f],ch        # 0x1b07733f5
   14002be86:	jne    0x14002befc
   14002be88:	sub    eax,0x6d726f66
   14002be8d:	(bad)  
   14002be8e:	je     0x14002beb0
   14002be90:	cmp    al,0x6f
   14002be92:	jne    0x14002bf08
   14002be94:	outs   dx,WORD PTR ds:[rsi]
   14002be96:	jb     0x14002bf05
   14002be98:	(bad)  
   14002be99:	je     0x14002bed9
   14002be9b:	or     ah,BYTE PTR [rax]
   14002be9d:	and    BYTE PTR [rax],ah
   14002be9f:	and    BYTE PTR [rax],ah
   14002bea1:	and    BYTE PTR [rax],ah
   14002bea3:	and    BYTE PTR [rax],ah
   14002bea5:	and    BYTE PTR [rax],ah
   14002bea7:	push   rbx
   14002bea8:	jo     0x14002bf0f
   14002beaa:	movsxd ebp,DWORD PTR [rcx+0x66]
   14002bead:	jns    0x14002becf
   14002beaf:	outs   dx,DWORD PTR ds:[rsi]
   14002beb0:	jne    0x14002bf26
   14002beb2:	jo     0x14002bf29
   14002beb4:	je     0x14002bed6
   14002beb6:	outs   dx,WORD PTR ds:[rsi]
   14002beb8:	jb     0x14002bf27
   14002beba:	(bad)  
   14002bebb:	je     0x14002beeb
   14002bebd:	and    BYTE PTR [rbx+0x65],dl
   14002bec0:	and    BYTE PTR gs:[rip+0xa2e6669],ch        # 0x14a312530
   14002bec7:	or     ah,BYTE PTR [rax]
   14002bec9:	and    BYTE PTR [rax],ah
   14002becb:	and    BYTE PTR [rip+0x706f7264],ch        # 0x1b0723135
   14002bed1:	sub    eax,0x73676174
   14002bed6:	and    BYTE PTR [rdx+rsi*2],bh
   14002bed9:	gs addr32 gs js 0x14002bf4e
   14002bede:	or     ah,BYTE PTR ds:[rax]
   14002bee1:	and    BYTE PTR [rax],ah
   14002bee3:	and    BYTE PTR [rax],ah
   14002bee5:	and    BYTE PTR [rax],ah
   14002bee7:	and    BYTE PTR [rax],ah
   14002bee9:	and    BYTE PTR [rax],ah
   14002beeb:	rex.R jb 0x14002bf5d
   14002beee:	jo     0x14002bf10
   14002bef0:	outs   dx,BYTE PTR ds:[rsi]
   14002bef1:	(bad)  
   14002bef2:	ins    DWORD PTR es:[rdi],dx
   14002bef3:	gs and BYTE PTR fs:[rbp+0x78],ah
   14002bef8:	je     0x14002bf6c
   14002befa:	(bad)  
   14002befb:	and    BYTE PTR [rcx+riz*2+0x67],dh
   14002beff:	jae    0x14002bf21
   14002bf01:	ja     0x14002bf6b
   14002bf03:	outs   dx,BYTE PTR gs:[rsi]
   14002bf05:	and    BYTE PTR [rdi+0x72],dh
   14002bf08:	imul   esi,DWORD PTR [rcx+rbp*2+0x6e],0x53542067
   14002bf10:	and    BYTE PTR [rdi+0x72],ch
   14002bf13:	and    BYTE PTR [rax+0x4c],bl
   14002bf16:	rex.WB
   14002bf17:	rex.RX
   14002bf18:	rex.RX and BYTE PTR [rsi+0x69],r12b
   14002bf1c:	ins    BYTE PTR es:[rdi],dx
   14002bf1d:	gs jae 0x14002bf4e
   14002bf20:	or     ah,BYTE PTR [rax]
   14002bf22:	and    BYTE PTR [rax],ah
   14002bf24:	and    BYTE PTR [rax],ah
   14002bf26:	and    BYTE PTR [rax],ah
   14002bf28:	and    BYTE PTR [rax],ah
   14002bf2a:	and    BYTE PTR [rax],ah
   14002bf2c:	rex.WRB (bad) 
   14002bf2e:	jns    0x14002bf50
   14002bf30:	(bad)  
   14002bf31:	and    BYTE PTR gs:[rbx+0x70],dh
   14002bf35:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14002bf39:	imul   esp,DWORD PTR [rbp+0x64],0x70657220
   14002bf40:	gs (bad) 
   14002bf42:	je     0x14002bfa9
   14002bf44:	fs ins BYTE PTR es:[rdi],dx
   14002bf46:	jns    0x14002bf76
   14002bf48:	or     cl,BYTE PTR [rdx]
   14002bf4a:	and    BYTE PTR [rax],ah
   14002bf4c:	and    BYTE PTR [rax],ah
   14002bf4e:	sub    eax,0x706f7264
   14002bf53:	sub    eax,0x6e617274
   14002bf58:	jae    0x14002bfc6
   14002bf5a:	(bad)  
   14002bf5b:	je     0x14002bfc6
   14002bf5d:	outs   dx,DWORD PTR ds:[rsi]
   14002bf5e:	outs   dx,BYTE PTR ds:[rsi]
   14002bf5f:	jae    0x14002bf6b
   14002bf61:	and    BYTE PTR [rax],ah
   14002bf63:	and    BYTE PTR [rax],ah
   14002bf65:	and    BYTE PTR [rax],ah
   14002bf67:	and    BYTE PTR [rax],ah
   14002bf69:	and    BYTE PTR [rax],ah
   14002bf6b:	and    BYTE PTR [rdx+rsi*2+0x6f],al
   14002bf6f:	jo     0x14002bf91
   14002bf71:	gs js  0x14002bfdd
   14002bf74:	jae    0x14002bfea
   14002bf76:	imul   ebp,DWORD PTR [rsi+0x67],0x61727420
   14002bf7d:	outs   dx,BYTE PTR ds:[rsi]
   14002bf7e:	jae    0x14002bfec
   14002bf80:	(bad)  
   14002bf81:	je     0x14002bfec
   14002bf83:	outs   dx,DWORD PTR ds:[rsi]
   14002bf84:	outs   dx,BYTE PTR ds:[rsi]
   14002bf85:	jae    0x14002bfa7
   14002bf87:	(bad)  
   14002bf88:	outs   dx,BYTE PTR ds:[rsi]
   14002bf89:	and    BYTE PTR fs:[rdx+0x65],dh
   14002bf8d:	jae    0x14002bff4
   14002bf8f:	je     0x14002bfb1
   14002bf91:	je     0x14002bffb
   14002bf93:	and    BYTE PTR gs:[rbx+0x74],dh
   14002bf97:	(bad)  
   14002bf98:	je     0x14002c00f
   14002bf9a:	jae    0x14002bfbc
   14002bf9c:	je     0x14002c00d
   14002bf9e:	and    BYTE PTR [rdi],ah
   14002bfa0:	jne    0x14002c010
   14002bfa2:	imul   bp,WORD PTR [rsi+0x69],0x6873
   14002bfa8:	gs fs (bad) 
   14002bfab:	or     ah,BYTE PTR cs:[rax]
   14002bfae:	and    BYTE PTR [rax],ah
   14002bfb0:	and    BYTE PTR [rax],ah
   14002bfb2:	and    BYTE PTR [rax],ah
   14002bfb4:	and    BYTE PTR [rax],ah
   14002bfb6:	and    BYTE PTR [rax],ah
   14002bfb8:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14002bfba:	je     0x14002c021
   14002bfbc:	cmp    ah,BYTE PTR [rax]
   14002bfbe:	je     0x14002c028
   14002bfc0:	imul   esi,DWORD PTR [rbx+0x20],0x6c706d69
   14002bfc7:	imul   esp,DWORD PTR [rbp+0x73],0x6e2d2d20
   14002bfce:	outs   dx,DWORD PTR ds:[rsi]
   14002bfcf:	sub    eax,0x6f73626f
   14002bfd4:	ins    BYTE PTR es:[rdi],dx
   14002bfd5:	gs je  0x14002c03d
   14002bfd8:	or     cl,BYTE PTR cs:[rdx]
   14002bfdb:	and    BYTE PTR [rax],ah
   14002bfdd:	and    BYTE PTR [rax],ah
   14002bfdf:	sub    eax,0x72756f73
   14002bfe4:	movsxd esp,DWORD PTR [rbp+0x2d]
   14002bfe7:	ins    BYTE PTR es:[rdi],dx
   14002bfe8:	(bad)  
   14002bfe9:	outs   dx,BYTE PTR ds:[rsi]
   14002bfea:	addr32 jne 0x14002c04e
   14002bfed:	and    BYTE PTR gs:[esp+ebp*2],bh
   14002bff2:	(bad)  
   14002bff3:	outs   dx,BYTE PTR ds:[rsi]
   14002bff4:	addr32 jne 0x14002c058
   14002bff7:	addr32 gs ds pop rbx
   14002bffb:	pop    rdi
   14002bffc:	cmp    al,0x72
   14002bffe:	imul   ebp,DWORD PTR gs:[edi+0x6e],0x200a5d3e
   14002c007:	and    BYTE PTR [rax],ah
   14002c009:	and    BYTE PTR [rax],ah
   14002c00b:	and    BYTE PTR [rax],ah
   14002c00d:	and    BYTE PTR [rax],ah
   14002c00f:	and    BYTE PTR [rax],ah
   14002c011:	push   rbx
   14002c012:	jo     0x14002c079
   14002c014:	movsxd ebp,DWORD PTR [rcx+0x66]
   14002c017:	jns    0x14002c048
   14002c019:	outs   dx,DWORD PTR ds:[rsi]
   14002c01a:	jbe    0x14002c081
   14002c01c:	jb     0x14002c090
   14002c01e:	imul   esp,DWORD PTR [rbp+riz*2+0x20],0x20656874
   14002c026:	ins    BYTE PTR es:[rdi],dx
   14002c027:	(bad)  
   14002c028:	outs   dx,BYTE PTR ds:[rsi]
   14002c029:	addr32 jne 0x14002c08d
   14002c02c:	and    BYTE PTR gs:[edi+0x66],ch
   14002c031:	and    BYTE PTR [rax+rbp*2+0x65],dh
   14002c035:	and    BYTE PTR [rbx+0x6f],dh
   14002c038:	jne    0x14002c0ac
   14002c03a:	movsxd esp,DWORD PTR [rbp+0x20]
   14002c03d:	jae    0x14002c0b3
   14002c03f:	jb     0x14002c0aa
   14002c041:	outs   dx,BYTE PTR ds:[rsi]
   14002c042:	addr32 jae 0x14002c073
   14002c045:	and    BYTE PTR [rbp+riz*2+0x66],al
   14002c049:	(bad)  
   14002c04a:	jne    0x14002c0b8
   14002c04c:	je     0x14002c0c1
   14002c04e:	and    BYTE PTR [rdi+rbp*2+0xa],dh
   14002c052:	and    BYTE PTR [rax],ah
   14002c054:	and    BYTE PTR [rax],ah
   14002c056:	and    BYTE PTR [rax],ah
   14002c058:	and    BYTE PTR [rax],ah
   14002c05a:	and    BYTE PTR [rax],ah
   14002c05c:	and    BYTE PTR [rax+0x4f],dl
   14002c05f:	push   rbx
   14002c060:	rex.WB pop r8
   14002c062:	and    BYTE PTR [rcx+0x66],ch
   14002c065:	and    BYTE PTR [rsi+0x6f],ch
   14002c068:	je     0x14002c08a
   14002c06a:	jae    0x14002c0dc
   14002c06c:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14002c070:	imul   esp,DWORD PTR [rbp+0x64],0x646e6120
   14002c077:	and    BYTE PTR [rax+rbp*2+0x65],dh
   14002c07b:	and    BYTE PTR [rsi+0x69],ah
   14002c07e:	ins    BYTE PTR es:[rdi],dx
   14002c07f:	and    BYTE PTR gs:[rdi+rbp*2+0x65],ah
   14002c084:	jae    0x14002c0a6
   14002c086:	outs   dx,BYTE PTR ds:[rsi]
   14002c087:	outs   dx,DWORD PTR ds:[rsi]
   14002c088:	je     0x14002c0aa
   14002c08a:	outs   dx,BYTE PTR ds:[rsi]
   14002c08b:	(bad)  
   14002c08c:	ins    DWORD PTR es:[rdi],dx
   14002c08d:	and    BYTE PTR gs:[rcx+0x74],ch
   14002c091:	and    BYTE PTR [rcx+0x65],bh
   14002c094:	je     0x14002c0c4
   14002c096:	or     cl,BYTE PTR [rdx]
   14002c098:	and    BYTE PTR [rax],ah
   14002c09a:	and    BYTE PTR [rax],ah
   14002c09c:	sub    eax,0x67726174
   14002c0a1:	gs je  0x14002c0d1
   14002c0a4:	ins    BYTE PTR es:[rdi],dx
   14002c0a5:	(bad)  
   14002c0a6:	outs   dx,BYTE PTR ds:[rsi]
   14002c0a7:	addr32 jne 0x14002c10b
   14002c0aa:	and    BYTE PTR gs:[esp+ebp*2],bh
   14002c0af:	(bad)  
   14002c0b0:	outs   dx,BYTE PTR ds:[rsi]
   14002c0b1:	addr32 jne 0x14002c115
   14002c0b4:	addr32 gs ds pop rbx
   14002c0b8:	pop    rdi
   14002c0b9:	cmp    al,0x72
   14002c0bb:	imul   ebp,DWORD PTR gs:[edi+0x6e],0x200a5d3e
   14002c0c4:	and    BYTE PTR [rax],ah
   14002c0c6:	and    BYTE PTR [rax],ah
   14002c0c8:	and    BYTE PTR [rax],ah
   14002c0ca:	and    BYTE PTR [rax],ah
   14002c0cc:	and    BYTE PTR [rax],ah
   14002c0ce:	push   rbx
   14002c0cf:	jo     0x14002c136
   14002c0d1:	movsxd ebp,DWORD PTR [rcx+0x66]
   14002c0d4:	jns    0x14002c105
   14002c0d6:	outs   dx,DWORD PTR ds:[rsi]
   14002c0d7:	jbe    0x14002c13e
   14002c0d9:	jb     0x14002c14d
   14002c0db:	imul   esp,DWORD PTR [rbp+riz*2+0x20],0x20656874
   14002c0e3:	ins    BYTE PTR es:[rdi],dx
   14002c0e4:	(bad)  
   14002c0e5:	outs   dx,BYTE PTR ds:[rsi]
   14002c0e6:	addr32 jne 0x14002c14a
   14002c0e9:	and    BYTE PTR gs:[edi+0x66],ch
   14002c0ee:	and    BYTE PTR [rax+rbp*2+0x65],dh
   14002c0f2:	and    BYTE PTR [rdx+rsi*2+0x61],dh
   14002c0f6:	outs   dx,BYTE PTR ds:[rsi]
   14002c0f7:	jae    0x14002c165
   14002c0f9:	(bad)  
   14002c0fa:	je     0x14002c165
   14002c0fc:	outs   dx,DWORD PTR ds:[rsi]
   14002c0fd:	outs   dx,BYTE PTR ds:[rsi]
   14002c0fe:	or     ah,BYTE PTR cs:[rax]
   14002c101:	and    BYTE PTR [rax],ah
   14002c103:	and    BYTE PTR [rax],ah
   14002c105:	and    BYTE PTR [rax],ah
   14002c107:	and    BYTE PTR [rax],ah
   14002c109:	and    BYTE PTR [rax],ah
   14002c10b:	push   rsp
   14002c10c:	push   0x61742065
   14002c111:	jb     0x14002c17a
   14002c113:	gs je  0x14002c136
   14002c116:	ins    BYTE PTR es:[rdi],dx
   14002c117:	(bad)  
   14002c118:	outs   dx,BYTE PTR ds:[rsi]
   14002c119:	addr32 jne 0x14002c17d
   14002c11c:	and    BYTE PTR gs:[ecx+0x73],ch
   14002c121:	and    BYTE PTR [rdi+0x75],ah
   14002c124:	gs jae 0x14002c19a
   14002c127:	gs and BYTE PTR fs:[rsi+0x72],ah
   14002c12c:	outs   dx,DWORD PTR ds:[rsi]
   14002c12d:	ins    DWORD PTR es:[rdi],dx
   14002c12e:	and    BYTE PTR [rax+rbp*2+0x65],dh
   14002c132:	and    BYTE PTR [rsi+0x69],ah
   14002c135:	ins    BYTE PTR es:[rdi],dx
   14002c136:	and    BYTE PTR gs:[rsi+0x61],ch
   14002c13a:	ins    DWORD PTR es:[rdi],dx
   14002c13b:	and    BYTE PTR gs:[rcx+0x66],ch
   14002c13f:	and    BYTE PTR [rax+rbp*2+0x69],dh
   14002c143:	jae    0x14002c165
   14002c145:	outs   dx,DWORD PTR ds:[rsi]
   14002c146:	jo     0x14002c1bc
   14002c148:	imul   ebp,DWORD PTR [rdi+0x6e],0x2020200a
   14002c14f:	and    BYTE PTR [rax],ah
   14002c151:	and    BYTE PTR [rax],ah
   14002c153:	and    BYTE PTR [rax],ah
   14002c155:	and    BYTE PTR [rax],ah
   14002c157:	imul   esi,DWORD PTR [rbx+0x20],0x20746f6e
   14002c15e:	jae    0x14002c1d0
   14002c160:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14002c164:	imul   esp,DWORD PTR [rbp+0x64],0x646e6120
   14002c16b:	and    BYTE PTR [rax+rbp*2+0x65],dh
   14002c16f:	and    BYTE PTR [rsi+0x69],ah
   14002c172:	ins    BYTE PTR es:[rdi],dx
   14002c173:	and    BYTE PTR gs:[rbx+0x6f],ah
   14002c177:	outs   dx,BYTE PTR ds:[rsi]
   14002c178:	je     0x14002c1df
   14002c17a:	outs   dx,BYTE PTR ds:[rsi]
   14002c17b:	je     0x14002c1f0
   14002c17d:	and    BYTE PTR [rsi+0x61],ch
   14002c180:	ins    DWORD PTR es:[rdi],dx
   14002c181:	and    BYTE PTR gs:[rsi+0x6f],ch
   14002c185:	and    BYTE PTR [rcx+riz*2+0x6e],ch
   14002c189:	addr32 jne 0x14002c1ed
   14002c18c:	and    BYTE PTR gs:[ecx+0x65],bh
   14002c191:	je     0x14002c1c1
   14002c193:	or     cl,BYTE PTR [rdx]
   14002c195:	and    BYTE PTR [rax],ah
   14002c197:	and    BYTE PTR [rax],ah
   14002c199:	sub    eax,0x6f2d6f6e
   14002c19e:	(bad)
   14002c1a3:	je     0x14002c20a
   14002c1a5:	or     ah,BYTE PTR [rax]
   14002c1a7:	and    BYTE PTR [rax],ah
   14002c1a9:	and    BYTE PTR [rax],ah
   14002c1ab:	and    BYTE PTR [rax],ah
   14002c1ad:	and    BYTE PTR [rax],ah
   14002c1af:	and    BYTE PTR [rax],ah
   14002c1b1:	rex.R jb 0x14002c223
   14002c1b4:	jo     0x14002c1d6
   14002c1b6:	outs   dx,DWORD PTR ds:[rsi]
   14002c1b7:	(bad)
   14002c1bc:	je     0x14002c223
   14002c1be:	and    BYTE PTR [rbp+0x65],ch
   14002c1c1:	jae    0x14002c236
   14002c1c3:	(bad)  
   14002c1c4:	addr32 gs jae 0x14002c1f6
   14002c1c8:	or     cl,BYTE PTR [rdx]
   14002c1ca:	and    BYTE PTR [rax],ah
   14002c1cc:	and    BYTE PTR [rax],ah
   14002c1ce:	sub    eax,0x662d6f6e
   14002c1d3:	imul   ebp,DWORD PTR [rsi+0x69],0x64656873
   14002c1da:	or     ah,BYTE PTR [rax]
   14002c1dc:	and    BYTE PTR [rax],ah
   14002c1de:	and    BYTE PTR [rax],ah
   14002c1e0:	and    BYTE PTR [rax],ah
   14002c1e2:	and    BYTE PTR [rax],ah
   14002c1e4:	and    BYTE PTR [rax],ah
   14002c1e6:	rex.R jb 0x14002c258
   14002c1e9:	jo     0x14002c20b
   14002c1eb:	imul   bp,WORD PTR [rsi+0x69],0x6873
   14002c1f1:	gs and BYTE PTR fs:[rbp+0x65],ch
   14002c1f6:	jae    0x14002c26b
   14002c1f8:	(bad)  
   14002c1f9:	addr32 gs jae 0x14002c22b
   14002c1fd:	or     cl,BYTE PTR [rdx]
   14002c1ff:	and    BYTE PTR [rax],ah
   14002c201:	and    BYTE PTR [rax],ah
   14002c203:	sub    eax,0x74726f73
   14002c208:	sub    eax,0x746e6f63
   14002c20d:	gs js  0x14002c284
   14002c210:	jae    0x14002c21c
   14002c212:	and    BYTE PTR [rax],ah
   14002c214:	and    BYTE PTR [rax],ah
   14002c216:	and    BYTE PTR [rax],ah
   14002c218:	and    BYTE PTR [rax],ah
   14002c21a:	and    BYTE PTR [rax],ah
   14002c21c:	and    BYTE PTR [rbx+0x6f],dl
   14002c21f:	jb     0x14002c295
   14002c221:	and    BYTE PTR [rbx+0x6f],ah
   14002c224:	outs   dx,BYTE PTR ds:[rsi]
   14002c225:	je     0x14002c28c
   14002c227:	js     0x14002c29d
   14002c229:	jae    0x14002c24b
   14002c22b:	imul   ebp,DWORD PTR [rsi+0x20],0x7074756f
   14002c232:	jne    0x14002c2a8
   14002c234:	and    BYTE PTR [rbx+rdx*2+0x20],dl
   14002c238:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6c61
   14002c23f:	jo     0x14002c2a9
   14002c241:	(bad)  
   14002c242:	(bad)  
   14002c243:	gs je  0x14002c2af
   14002c246:	movsxd esp,DWORD PTR [rcx+0x6c]
   14002c249:	ins    BYTE PTR es:[rdi],dx
   14002c24a:	jns    0x14002c27a
   14002c24c:	or     cl,BYTE PTR [rdx]
   14002c24e:	and    BYTE PTR [rax],ah
   14002c250:	and    BYTE PTR [rax],ah
   14002c252:	sub    eax,0x61636f6c
   14002c257:	je     0x14002c2c2
   14002c259:	outs   dx,DWORD PTR ds:[rsi]
   14002c25a:	outs   dx,BYTE PTR ds:[rsi]
   14002c25b:	jae    0x14002c27d
   14002c25d:	jnp    0x14002c2c0
   14002c25f:	(bad)
   14002c264:	je     0x14002c2cb
   14002c266:	jl     0x14002c2da
   14002c268:	gs ins BYTE PTR es:[rdi],dx
   14002c26a:	(bad)  
   14002c26b:	je     0x14002c2d6
   14002c26d:	jbe    0x14002c2d4
   14002c26f:	jl     0x14002c2df
   14002c271:	outs   dx,DWORD PTR ds:[rsi]
   14002c272:	outs   dx,BYTE PTR ds:[rsi]
   14002c273:	gs jge 0x14002c280
   14002c276:	and    BYTE PTR [rax],ah
   14002c278:	and    BYTE PTR [rax],ah
   14002c27a:	and    BYTE PTR [rax],ah
   14002c27c:	and    BYTE PTR [rax],ah
   14002c27e:	and    BYTE PTR [rax],ah
   14002c280:	and    BYTE PTR [rdi+0x76],cl
   14002c283:	gs jb  0x14002c2f8
   14002c286:	imul   esp,DWORD PTR [rbp+riz*2+0x20],0x20776f68
   14002c28e:	jae    0x14002c2ff
   14002c290:	jne    0x14002c304
   14002c292:	movsxd esp,DWORD PTR [rbp+0x20]
   14002c295:	movsxd ebp,DWORD PTR [rdi+0x64]
   14002c298:	and    BYTE PTR gs:[rdx+0x65],dh
   14002c29c:	data16 gs jb 0x14002c305
   14002c2a0:	outs   dx,BYTE PTR ds:[rsi]
   14002c2a1:	movsxd esp,DWORD PTR [rbp+0x73]
   14002c2a4:	and    BYTE PTR [rcx+0x72],ah
   14002c2a7:	and    BYTE PTR gs:[rbx+0x61],dh
   14002c2ab:	jbe    0x14002c312
   14002c2ad:	and    BYTE PTR fs:[rcx+0x6e],ch
   14002c2b1:	and    BYTE PTR [rbx+rdx*2+0x20],dl
   14002c2b5:	imul   bp,WORD PTR [rbp+riz*2+0x73],0xa2e
   14002c2bc:	and    BYTE PTR [rax],ah
   14002c2be:	and    BYTE PTR [rax],ah
   14002c2c0:	and    BYTE PTR [rax],ah
   14002c2c2:	and    BYTE PTR [rax],ah
   14002c2c4:	and    BYTE PTR [rax],ah
   14002c2c6:	and    BYTE PTR [rbp+riz*2+0x66],al
   14002c2ca:	(bad)  
   14002c2cb:	jne    0x14002c339
   14002c2cd:	je     0x14002c2ef
   14002c2cf:	imul   esi,DWORD PTR [rbx+0x20],0x6f736261
   14002c2d6:	ins    BYTE PTR es:[rdi],dx
   14002c2d7:	jne    0x14002c34d
   14002c2d9:	gs or  cl,BYTE PTR cs:[rdx]
   14002c2dd:	and    BYTE PTR [rax],ah
   14002c2df:	and    BYTE PTR [rax],ah
   14002c2e1:	sub    eax,0x752d6f6e
   14002c2e6:	imul   ebp,DWORD PTR [rip+0x656e696c],0x20200a73        # 0x1a5712c5c
   14002c2f0:	and    BYTE PTR [rax],ah
   14002c2f2:	and    BYTE PTR [rax],ah
   14002c2f4:	and    BYTE PTR [rax],ah
   14002c2f6:	and    BYTE PTR [rax],ah
   14002c2f8:	and    BYTE PTR [rdx+rsi*2+0x6f],al
   14002c2fc:	jo     0x14002c31e
   14002c2fe:	ins    BYTE PTR es:[rdi],dx
   14002c2ff:	imul   ebp,DWORD PTR [rsi+0x65],0x6d756e20
   14002c306:	(bad)  
   14002c307:	gs jb  0x14002c37d
   14002c30a:	and    BYTE PTR [rsi+0x72],ah
   14002c30d:	outs   dx,DWORD PTR ds:[rsi]
   14002c30e:	ins    DWORD PTR es:[rdi],dx
   14002c30f:	and    BYTE PTR [rdx+0x65],dh
   14002c312:	data16 gs jb 0x14002c37b
   14002c316:	outs   dx,BYTE PTR ds:[rsi]
   14002c317:	movsxd esp,DWORD PTR [rbp+0x73]
   14002c31a:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   14002c31e:	push   rbp
   14002c31f:	rex.WB and BYTE PTR [r14+0x69],spl
   14002c323:	ins    BYTE PTR es:[rdi],dx
   14002c324:	gs jae 0x14002c355
   14002c327:	or     cl,BYTE PTR [rdx]
   14002c329:	and    BYTE PTR [rax],ah
   14002c32b:	and    BYTE PTR [rax],ah
   14002c32d:	sub    eax,0x62726576
   14002c332:	outs   dx,DWORD PTR ds:[rsi]
   14002c333:	jae    0x14002c39a
   14002c335:	or     ah,BYTE PTR [rax]
   14002c337:	and    BYTE PTR [rax],ah
   14002c339:	and    BYTE PTR [rax],ah
   14002c33b:	and    BYTE PTR [rax],ah
   14002c33d:	and    BYTE PTR [rax],ah
   14002c33f:	and    BYTE PTR [rax],ah
   14002c341:	(bad)  
   14002c342:	and    BYTE PTR gs:[rcx+0x20],ah
   14002c346:	(bad)  
   14002c347:	imul   esi,DWORD PTR [rax+riz*1+0x6d],0x2065726f
   14002c34f:	jbe    0x14002c3b6
   14002c351:	jb     0x14002c3b5
   14002c353:	outs   dx,DWORD PTR ds:[rsi]
   14002c354:	jae    0x14002c3bb
   14002c356:	or     cl,BYTE PTR [rdx]
   14002c358:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14002c35a:	outs   dx,BYTE PTR ds:[rsi]
   14002c35b:	and    BYTE PTR [edi+0x70],ch
   14002c35f:	je     0x14002c3ca
   14002c361:	outs   dx,DWORD PTR ds:[rsi]
   14002c362:	outs   dx,BYTE PTR ds:[rsi]
   14002c363:	jae    0x14002c385
   14002c365:	movsxd esp,DWORD PTR [rcx+0x6e]
   14002c368:	and    BYTE PTR [rdx+0x65],ah
   14002c36b:	and    BYTE PTR [rbx+0x70],dh
   14002c36e:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14002c372:	imul   esp,DWORD PTR [rbp+0x64],0x74697720
   14002c379:	push   0x6c6e6f20
   14002c37e:	jns    0x14002c3a0
   14002c380:	outs   dx,DWORD PTR ds:[rsi]
   14002c381:	outs   dx,BYTE PTR ds:[rsi]
   14002c382:	and    BYTE PTR gs:[rbp+riz*2+0x61],ch
   14002c387:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x73616420
   14002c38f:	push   0x6f74202c
   14002c394:	outs   dx,DWORD PTR ds:[rsi]
   14002c395:	or     cl,BYTE PTR cs:[rdx]
   14002c398:	push   rdx
   14002c399:	gs je  0x14002c411
   14002c39c:	jb     0x14002c40c
   14002c39e:	and    BYTE PTR [rsi+0x61],dh
   14002c3a1:	ins    BYTE PTR es:[rdi],dx
   14002c3a2:	jne    0x14002c409
   14002c3a4:	cmp    cl,BYTE PTR [rdx]
   14002c3a6:	and    BYTE PTR [rax],ah
   14002c3a8:	and    BYTE PTR [rax],ah
   14002c3aa:	xor    BYTE PTR [rax],ah
   14002c3ac:	outs   dx,DWORD PTR ds:[rsi]
   14002c3ad:	outs   dx,BYTE PTR ds:[rsi]
   14002c3ae:	and    BYTE PTR [rbx+0x75],dh
   14002c3b1:	movsxd esp,DWORD PTR [rbx+0x65]
   14002c3b4:	jae    0x14002c429
   14002c3b6:	or     ah,BYTE PTR [rax]
   14002c3b8:	and    BYTE PTR [rax],ah
   14002c3ba:	and    BYTE PTR [rcx],dh
   14002c3bc:	and    BYTE PTR [rdi+0x6e],ch
   14002c3bf:	and    BYTE PTR [rbx+0x6f],ah
   14002c3c2:	ins    DWORD PTR es:[rdi],dx
   14002c3c3:	ins    DWORD PTR es:[rdi],dx
   14002c3c4:	(bad)  
   14002c3c5:	outs   dx,BYTE PTR ds:[rsi]
   14002c3c6:	and    BYTE PTR fs:[rcx+rbp*2+0x6e],ch
   14002c3cb:	and    BYTE PTR gs:[rax+0x61],dh
   14002c3cf:	jb     0x14002c444
   14002c3d1:	and    BYTE PTR gs:[rsi+0x61],ah
   14002c3d5:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x200a7365
   14002c3dd:	and    BYTE PTR [rax],ah
   14002c3df:	and    BYTE PTR [rdx],dh
   14002c3e1:	and    BYTE PTR [rdi+0x6e],ch
   14002c3e4:	and    BYTE PTR [rdx+0x65],dh
   14002c3e7:	(bad)  
   14002c3e8:	and    BYTE PTR fs:[rsi+0x61],ah
   14002c3ec:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x200a7365
   14002c3f4:	and    BYTE PTR [rax],ah
   14002c3f6:	and    BYTE PTR [rbx],dh
   14002c3f8:	and    BYTE PTR [rdi+0x6e],ch
   14002c3fb:	and    BYTE PTR [rdi+0x72],dh
   14002c3fe:	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x6c696166
   14002c406:	jne    0x14002c47a
   14002c408:	gs jae 0x14002c415
   14002c40b:	add    BYTE PTR [rax],al
   14002c40d:	add    BYTE PTR [rax],al
   14002c40f:	add    BYTE PTR [rax],ah
   14002c411:	and    BYTE PTR [rax],ah
   14002c413:	and    BYTE PTR [rip+0x202d2031],ah        # 0x1602fe44a
   14002c419:	and    eax,0xa32
   14002c41e:	add    BYTE PTR [rax],al
   14002c420:	sub    eax,0x62726576
   14002c425:	outs   dx,DWORD PTR ds:[rsi]
   14002c426:	jae    0x14002c48d
	...
   14002c430:	sub    eax,0x752d6f6e
   14002c435:	imul   ebp,DWORD PTR [rip+0x656e696c],0x73        # 0x1a5712dab
   14002c43f:	add    BYTE PTR [rcx+0x62],ah
   14002c442:	jae    0x14002c4b3
   14002c444:	ins    BYTE PTR es:[rdi],dx
   14002c445:	jne    0x14002c4bb
   14002c447:	add    BYTE PTR gs:[rax],al
   14002c44a:	add    BYTE PTR [rax],al
   14002c44c:	add    BYTE PTR [rax],al
   14002c44e:	add    BYTE PTR [rax],al
   14002c450:	jb     0x14002c4b7
   14002c452:	ins    BYTE PTR es:[rdi],dx
   14002c453:	(bad)  
   14002c454:	je     0x14002c4bf
   14002c456:	jbe    0x14002c4bd
   14002c458:	add    BYTE PTR [rax],al
   14002c45a:	add    BYTE PTR [rax],al
   14002c45c:	outs   dx,BYTE PTR ds:[rsi]
   14002c45d:	outs   dx,DWORD PTR ds:[rsi]
   14002c45e:	outs   dx,BYTE PTR ds:[rsi]
   14002c45f:	add    BYTE PTR gs:[rax],al
   14002c462:	add    BYTE PTR [rax],al
   14002c464:	add    BYTE PTR [rax],al
   14002c466:	add    BYTE PTR [rax],al
   14002c468:	sub    eax,0x61636f6c
   14002c46d:	je     0x14002c4d8
   14002c46f:	outs   dx,DWORD PTR ds:[rsi]
   14002c470:	outs   dx,BYTE PTR ds:[rsi]
   14002c471:	jae    0x14002c473
   14002c473:	add    BYTE PTR [rax],al
   14002c475:	add    BYTE PTR [rax],al
   14002c477:	add    BYTE PTR [rip+0x74726f73],ch        # 0x1b47533f0
   14002c47d:	sub    eax,0x746e6f63
   14002c482:	gs js  0x14002c4f9
   14002c485:	jae    0x14002c487
   14002c487:	add    BYTE PTR [rip+0x662d6f6e],ch        # 0x1a63033fb
   14002c48d:	imul   ebp,DWORD PTR [rsi+0x69],0x64656873
   14002c494:	add    BYTE PTR [rax],al
   14002c496:	add    BYTE PTR [rax],al
   14002c498:	sub    eax,0x6f2d6f6e
   14002c49d:	(bad)
   14002c4a2:	je     0x14002c509
   14002c4a4:	add    BYTE PTR [rax],al
   14002c4a6:	add    BYTE PTR [rax],al
   14002c4a8:	sub    eax,0x68
   14002c4ad:	add    BYTE PTR [rax],al
   14002c4af:	add    BYTE PTR [rip+0x72756f73],ch        # 0x1b2783428
   14002c4b5:	movsxd esp,DWORD PTR [rbp+0x2d]
   14002c4b8:	ins    BYTE PTR es:[rdi],dx
   14002c4b9:	(bad)  
   14002c4ba:	outs   dx,BYTE PTR ds:[rsi]
   14002c4bb:	addr32 jne 0x14002c51f
   14002c4be:	add    BYTE PTR gs:[eax],al
   14002c4c2:	add    BYTE PTR [rax],al
   14002c4c4:	add    BYTE PTR [rax],al
   14002c4c6:	add    BYTE PTR [rax],al
   14002c4c8:	sub    eax,0x67726174
   14002c4cd:	gs je  0x14002c4fd
   14002c4d0:	ins    BYTE PTR es:[rdi],dx
   14002c4d1:	(bad)  
   14002c4d2:	outs   dx,BYTE PTR ds:[rsi]
   14002c4d3:	addr32 jne 0x14002c537
   14002c4d6:	add    BYTE PTR gs:[eax],al
   14002c4da:	add    BYTE PTR [rax],al
   14002c4dc:	add    BYTE PTR [rax],al
   14002c4de:	add    BYTE PTR [rax],al
   14002c4e0:	sub    eax,0x706f7264
   14002c4e5:	sub    eax,0x6e617274
   14002c4ea:	jae    0x14002c558
   14002c4ec:	(bad)  
   14002c4ed:	je     0x14002c558
   14002c4ef:	outs   dx,DWORD PTR ds:[rsi]
   14002c4f0:	outs   dx,BYTE PTR ds:[rsi]
   14002c4f1:	jae    0x14002c4f3
   14002c4f3:	add    BYTE PTR [rax],al
   14002c4f5:	add    BYTE PTR [rax],al
   14002c4f7:	add    BYTE PTR [rip+0x706f7264],ch        # 0x1b0723761
   14002c4fd:	sub    eax,0x73676174
   14002c502:	add    BYTE PTR [rax],al
   14002c504:	add    BYTE PTR [rax],al
   14002c506:	add    BYTE PTR [rax],al
   14002c508:	sub    eax,0x706f7264
   14002c50d:	sub    eax,0x676174
   14002c512:	add    BYTE PTR [rax],al
   14002c514:	add    BYTE PTR [rax],al
   14002c516:	add    BYTE PTR [rax],al
   14002c518:	sub    eax,0x75706e69
   14002c51d:	je     0x14002c54c
   14002c51f:	outs   dx,WORD PTR ds:[rsi]
   14002c521:	jb     0x14002c590
   14002c523:	(bad)  
   14002c524:	je     0x14002c526
   14002c526:	add    BYTE PTR [rax],al
   14002c528:	sub    eax,0x6669
   14002c52d:	add    BYTE PTR [rax],al
   14002c52f:	add    BYTE PTR [rip+0x75706e69],ch        # 0x1b573339e
   14002c535:	je     0x14002c564
   14002c537:	imul   bp,WORD PTR [rbp+riz*2+0x0],0x692d
   14002c53e:	add    BYTE PTR [rax],al
   14002c540:	sub    eax,0x7074756f
   14002c545:	jne    0x14002c5bb
   14002c547:	sub    eax,0x6d726f66
   14002c54c:	(bad)  
   14002c54d:	je     0x14002c54f
   14002c54f:	add    BYTE PTR [rip+0x666f],ch        # 0x140032bc4
   14002c555:	add    BYTE PTR [rax],al
   14002c557:	add    BYTE PTR [rip+0x7074756f],ch        # 0x1b0773acc
   14002c55d:	jne    0x14002c5d3
   14002c55f:	sub    eax,0x656c6966
   14002c564:	add    BYTE PTR [rax],al
   14002c566:	add    BYTE PTR [rax],al
   14002c568:	sub    eax,0x2d00006f
   14002c56d:	sub    eax,0x75610000
   14002c572:	je     0x14002c5e3
   14002c574:	add    BYTE PTR [rax],al
   14002c576:	add    BYTE PTR [rax],al
   14002c578:	push   rax
   14002c579:	ins    BYTE PTR es:[rdi],dx
   14002c57a:	jne    0x14002c5ee
   14002c57c:	(bad)  
   14002c57d:	ins    BYTE PTR es:[rdi],dx
   14002c57e:	and    BYTE PTR [rax],ch
   14002c580:	jbe    0x14002c5f1
   14002c582:	ja     0x14002c5e9
   14002c584:	ins    BYTE PTR es:[rdi],dx
   14002c585:	sub    eax,0x65646e65
   14002c58a:	sub    DWORD PTR fs:[rax],eax
   14002c58d:	add    BYTE PTR [rax],al
   14002c58f:	add    BYTE PTR [rax+0x6c],dl
   14002c592:	jne    0x14002c606
   14002c594:	(bad)  
   14002c595:	ins    BYTE PTR es:[rdi],dx
   14002c596:	and    BYTE PTR [rax],ch
   14002c598:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14002c59b:	jae    0x14002c60c
   14002c59d:	outs   dx,BYTE PTR ds:[rsi]
   14002c59e:	(bad)  
   14002c59f:	outs   dx,BYTE PTR ds:[rsi]
   14002c5a0:	je     0x14002c5cf
   14002c5a2:	outs   dx,BYTE PTR gs:[rsi]
   14002c5a4:	fs gs sub DWORD PTR fs:[rax],eax
   14002c5a9:	add    BYTE PTR [rax],al
   14002c5ab:	add    BYTE PTR [rax],al
   14002c5ad:	add    BYTE PTR [rax],al
   14002c5af:	add    BYTE PTR [rax+0x6c],dl
   14002c5b2:	jne    0x14002c626
   14002c5b4:	(bad)  
   14002c5b5:	ins    BYTE PTR es:[rdi],dx
   14002c5b6:	and    BYTE PTR [rax],ch
   14002c5b8:	xor    DWORD PTR [rax],esi
   14002c5ba:	xor    BYTE PTR [rip+0x2c323031],ch        # 0x16c34f5f1
   14002c5c0:	and    BYTE PTR [rsi],ch
   14002c5c2:	cs sub DWORD PTR cs:[rax],eax
   14002c5c6:	add    BYTE PTR [rax],al
   14002c5c8:	imul   r13,QWORD PTR [r14+0x6f],0x79746972
   14002c5d0:	and    BYTE PTR [rax+0x6c],dl
   14002c5d3:	jne    0x14002c647
   14002c5d5:	(bad)  
   14002c5d6:	ins    BYTE PTR es:[rdi],dx
   14002c5d7:	add    BYTE PTR [rbx+0x65],dl
   14002c5da:	js     0x14002c63d
   14002c5dc:	ins    BYTE PTR es:[rdi],dx
   14002c5dd:	add    BYTE PTR [rax],al
   14002c5df:	add    BYTE PTR [rdi+0x72],al
   14002c5e2:	gs (bad) 
   14002c5e4:	je     0x14002c64b
   14002c5e6:	jb     0x14002c608
   14002c5e8:	push   rax
   14002c5e9:	(bad)  
   14002c5ea:	jne    0x14002c64f
   14002c5ec:	(bad)  
   14002c5ed:	ins    BYTE PTR es:[rdi],dx
   14002c5ee:	add    BYTE PTR [rax],al
   14002c5f0:	push   rsp
   14002c5f1:	jb     0x14002c65c
   14002c5f3:	(bad)  
   14002c5f4:	ins    BYTE PTR es:[rdi],dx
   14002c5f5:	add    BYTE PTR [rax],al
   14002c5f7:	add    BYTE PTR [rax+0x61],dl
   14002c5fa:	jne    0x14002c65f
   14002c5fc:	(bad)  
   14002c5fd:	ins    BYTE PTR es:[rdi],dx
   14002c5fe:	add    BYTE PTR [rax],al
   14002c600:	rex.WRB (bad) 
   14002c602:	outs   dx,BYTE PTR ds:[rsi]
   14002c603:	jns    0x14002c605
   14002c605:	add    BYTE PTR [rax],al
   14002c607:	add    BYTE PTR [rsi+0x65],al
   14002c60a:	ja     0x14002c60c
   14002c60c:	xor    ch,BYTE PTR [rdi]
   14002c60e:	xor    DWORD PTR [rdx],esi
   14002c610:	add    BYTE PTR [rax],al
   14002c612:	add    BYTE PTR [rax],al
   14002c614:	xor    DWORD PTR [rdi],ebp
   14002c616:	xor    DWORD PTR [rcx],esi
   14002c618:	add    BYTE PTR [rax],al
   14002c61a:	add    BYTE PTR [rax],al
   14002c61c:	rex.R jne 0x14002c680
   14002c61f:	ins    BYTE PTR es:[rdi],dx
   14002c620:	add    BYTE PTR [rax],al
   14002c622:	add    BYTE PTR [rax],al
   14002c624:	rex.WRX jne 0x14002c693
   14002c627:	ins    BYTE PTR es:[rdi],dx
   14002c628:	(bad)  
   14002c629:	jb     0x14002c62b
   14002c62b:	add    BYTE PTR [rax+0x6c],dl
   14002c62e:	jne    0x14002c6a2
   14002c630:	(bad)  
   14002c631:	ins    BYTE PTR es:[rdi],dx
   14002c632:	add    BYTE PTR [rax],al
   14002c634:	add    BYTE PTR [rax],al
   14002c636:	add    BYTE PTR [rax],al
   14002c638:	push   rbx
   14002c639:	imul   ebp,DWORD PTR [rsi+0x67],0x72616c75
	...
   14002c648:	push   rbp
   14002c649:	outs   dx,BYTE PTR ds:[rsi]
   14002c64a:	imul   esi,DWORD PTR [rsi+0x65],0x6c617372
   14002c651:	and    BYTE PTR [rsi+0x6f],al
   14002c654:	jb     0x14002c6c3
	...
   14002c65e:	add    BYTE PTR [rax],al
   14002c660:	add    DWORD PTR [rcx],eax
   14002c662:	add    BYTE PTR [rax],al
   14002c664:	add    eax,DWORD PTR [rcx]
   14002c666:	add    BYTE PTR [rax],al
   14002c668:	adc    DWORD PTR [rcx],eax
   14002c66a:	std    
   14002c66b:	sub    DWORD PTR [rbx],ecx
   14002c66d:	dec    DWORD PTR [rcx]
   14002c66f:	add    BYTE PTR [rcx],dl
   14002c671:	add    ebp,edi
   14002c673:	sub    DWORD PTR [rbx],ecx
   14002c675:	add    BYTE PTR [rax],al
   14002c677:	add    BYTE PTR [rcx],al
   14002c679:	add    edi,edi
   14002c67b:	add    DWORD PTR [rdx],eax
   14002c67d:	add    BYTE PTR [rax],al
   14002c67f:	add    BYTE PTR [rcx],al
   14002c681:	add    esi,edi
   14002c683:	add    DWORD PTR [rbx],ecx
   14002c685:	inc    DWORD PTR [rcx]
   14002c687:	add    bh,dh
   14002c689:	add    DWORD PTR [rdi+rdi*8],ecx
   14002c68c:	add    al,0x3
   14002c68e:	adc    eax,DWORD PTR [rax]
   14002c690:	add    DWORD PTR [rcx],eax
   14002c692:	inc    DWORD PTR [rdx+rax*1]
   14002c695:	add    al,0x0
   14002c697:	add    BYTE PTR [rcx],dl
   14002c699:	add    edi,edi
   14002c69b:	adc    DWORD PTR [rdx],eax
   14002c69d:	add    BYTE PTR [rax],al
   14002c69f:	add    BYTE PTR [rcx],dl
   14002c6a1:	add    ebp,edi
   14002c6a3:	sub    DWORD PTR [rbx],ecx
   14002c6a5:	call   FWORD PTR [rcx]
   14002c6a7:	add    ch,bh
   14002c6a9:	sub    al,0xa
   14002c6ab:	adc    eax,DWORD PTR [rax]
   14002c6ad:	add    BYTE PTR [rax],al
   14002c6af:	add    BYTE PTR [rcx],dl
   14002c6b1:	add    ebp,edi
   14002c6b3:	sub    DWORD PTR [rbx],ecx
   14002c6b5:	call   QWORD PTR [rdx+rax*1]
   14002c6b8:	add    al,0xfd
   14002c6ba:	sub    al,0xa
   14002c6bc:	adc    eax,DWORD PTR [rax]
   14002c6be:	add    BYTE PTR [rax],al
   14002c6c0:	add    DWORD PTR [rcx],eax
   14002c6c2:	call   QWORD PTR [rdx+rax*1]
   14002c6c5:	add    al,0xfd
   14002c6c7:	sub    al,0xa
   14002c6c9:	adc    eax,DWORD PTR [rax]
   14002c6cb:	add    BYTE PTR [rax],al
   14002c6cd:	add    BYTE PTR [rax],al
   14002c6cf:	add    BYTE PTR [rcx],al
   14002c6d1:	add    edi,edi
   14002c6d3:	add    DWORD PTR [rax],eax
   14002c6d5:	(bad)  
   14002c6d6:	and    al,0x1
   14002c6d8:	adc    eax,DWORD PTR [rax]
   14002c6da:	add    BYTE PTR [rax],al
   14002c6dc:	add    BYTE PTR [rax],al
   14002c6de:	add    BYTE PTR [rax],al
   14002c6e0:	and    DWORD PTR [rcx],eax
   14002c6e2:	jmp    QWORD PTR [rcx]
   14002c6e4:	add    bh,bh
   14002c6e6:	and    al,0x3
   14002c6e8:	add    al,0x0
   14002c6ea:	add    BYTE PTR [rax],al
   14002c6ec:	add    BYTE PTR [rax],al
   14002c6ee:	add    BYTE PTR [rax],al
   14002c6f0:	add    DWORD PTR [rcx],eax
   14002c6f2:	inc    DWORD PTR [rcx]
   14002c6f4:	add    dh,bh
   14002c6f6:	and    al,0x1
   14002c6f8:	or     bh,bh
   14002c6fa:	and    al,0xb
   14002c6fc:	adc    eax,DWORD PTR [rax]
   14002c6fe:	add    BYTE PTR [rax],al
   14002c700:	add    DWORD PTR [rax],eax
   14002c702:	inc    DWORD PTR [rcx]
   14002c704:	add    edi,edi
   14002c706:	add    al,0x2
   14002c708:	add    eax,0x601ff
   14002c70d:	add    BYTE PTR [rax],al
   14002c70f:	add    BYTE PTR [rcx],al
   14002c711:	add    bh,bh
   14002c713:	add    DWORD PTR [rcx],eax
   14002c715:	inc    DWORD PTR [rcx]
   14002c717:	add    bh,bh
   14002c719:	and    al,0x3
   14002c71b:	or     bh,bh
   14002c71d:	sub    cl,BYTE PTR [rbx]
   14002c71f:	add    BYTE PTR [rbx],al
   14002c721:	add    edi,edi
   14002c723:	adc    DWORD PTR [rsi+rdi*8],eax
   14002c726:	adc    DWORD PTR [rsi],eax
   14002c728:	(bad)  
   14002c729:	adc    DWORD PTR [rcx],ecx
   14002c72b:	add    BYTE PTR [rax],al
   14002c72d:	add    BYTE PTR [rax],al
   14002c72f:	add    BYTE PTR [rax-0x3a],cl
   14002c732:	add    al,BYTE PTR [rax+0x1]
	...
   14002c73d:	add    BYTE PTR [rax],al
   14002c73f:	add    BYTE PTR [rax],bh
   14002c741:	mov    BYTE PTR [rdx],0x40
   14002c744:	add    DWORD PTR [rax],eax
   14002c746:	add    BYTE PTR [rax],al
   14002c748:	sub    al,0xc6
   14002c74a:	add    al,BYTE PTR [rax+0x1]
	...
   14002c755:	add    BYTE PTR [rax],al
   14002c757:	add    BYTE PTR [rax],bh
   14002c759:	mov    BYTE PTR [rdx],0x40
   14002c75c:	add    DWORD PTR [rax],eax
   14002c75e:	add    BYTE PTR [rax],al
   14002c760:	sub    al,0xc6
   14002c762:	add    al,BYTE PTR [rax+0x1]
	...
   14002c76d:	add    BYTE PTR [rax],al
   14002c76f:	add    BYTE PTR [rax],bh
   14002c771:	mov    BYTE PTR [rdx],0x40
   14002c774:	add    DWORD PTR [rax],eax
   14002c776:	add    BYTE PTR [rax],al
   14002c778:	sub    al,0xc6
   14002c77a:	add    al,BYTE PTR [rax+0x1]
	...
   14002c785:	add    BYTE PTR [rax],al
   14002c787:	add    BYTE PTR [rax],bh
   14002c789:	mov    BYTE PTR [rdx],0x40
   14002c78c:	add    DWORD PTR [rax],eax
   14002c78e:	add    BYTE PTR [rax],al
   14002c790:	sub    al,0xc6
   14002c792:	add    al,BYTE PTR [rax+0x1]
   14002c795:	add    BYTE PTR [rax],al
   14002c797:	add    BYTE PTR [rsi+rax*8],ah
   14002c79a:	add    al,BYTE PTR [rax+0x1]
	...
   14002c7a5:	add    BYTE PTR [rax],al
   14002c7a7:	add    BYTE PTR [rax],bh
   14002c7a9:	mov    BYTE PTR [rdx],0x40
   14002c7ac:	add    DWORD PTR [rax],eax
   14002c7ae:	add    BYTE PTR [rax],al
   14002c7b0:	sbb    al,0xc6
   14002c7b2:	add    al,BYTE PTR [rax+0x1]
   14002c7b5:	add    BYTE PTR [rax],al
   14002c7b7:	add    BYTE PTR [rsi+rax*8],ch
   14002c7ba:	add    al,BYTE PTR [rax+0x1]
	...
   14002c7c5:	add    BYTE PTR [rax],al
   14002c7c7:	add    BYTE PTR [rsi+rax*8],dl
   14002c7ca:	add    al,BYTE PTR [rax+0x1]
   14002c7cd:	add    BYTE PTR [rax],al
   14002c7cf:	add    BYTE PTR [rsi+rax*8],cl
   14002c7d2:	add    al,BYTE PTR [rax+0x1]
   14002c7d5:	add    BYTE PTR [rax],al
   14002c7d7:	add    BYTE PTR [rax],cl
   14002c7d9:	mov    BYTE PTR [rdx],0x40
   14002c7dc:	add    DWORD PTR [rax],eax
   14002c7de:	add    BYTE PTR [rax],al
   14002c7e0:	add    dh,al
   14002c7e2:	add    al,BYTE PTR [rax+0x1]
	...
   14002c7ed:	add    BYTE PTR [rax],al
   14002c7ef:	add    BYTE PTR [rax],bh
   14002c7f1:	mov    BYTE PTR [rdx],0x40
   14002c7f4:	add    DWORD PTR [rax],eax
   14002c7f6:	add    BYTE PTR [rax],al
   14002c7f8:	clc    
   14002c7f9:	(bad)
   14002c7fc:	add    DWORD PTR [rax],eax
   14002c7fe:	add    BYTE PTR [rax],al
   14002c800:	sub    al,0xc6
   14002c802:	add    al,BYTE PTR [rax+0x1]
	...
   14002c80d:	add    BYTE PTR [rax],al
   14002c80f:	add    BYTE PTR [rax],bh
   14002c811:	mov    BYTE PTR [rdx],0x40
   14002c814:	add    DWORD PTR [rax],eax
   14002c816:	add    BYTE PTR [rax],al
   14002c818:	sbb    al,0xc6
   14002c81a:	add    al,BYTE PTR [rax+0x1]
   14002c81d:	add    BYTE PTR [rax],al
   14002c81f:	add    BYTE PTR [rsi+rax*8],ch
   14002c822:	add    al,BYTE PTR [rax+0x1]
	...
   14002c82d:	add    BYTE PTR [rax],al
   14002c82f:	add    BYTE PTR [rax],bh
   14002c831:	mov    BYTE PTR [rdx],0x40
   14002c834:	add    DWORD PTR [rax],eax
   14002c836:	add    BYTE PTR [rax],al
   14002c838:	clc    
   14002c839:	(bad)
   14002c83c:	add    DWORD PTR [rax],eax
   14002c83e:	add    BYTE PTR [rax],al
   14002c840:	sub    al,0xc6
   14002c842:	add    al,BYTE PTR [rax+0x1]
	...
   14002c84d:	add    BYTE PTR [rax],al
   14002c84f:	add    BYTE PTR [rax],bh
   14002c851:	mov    BYTE PTR [rdx],0x40
   14002c854:	add    DWORD PTR [rax],eax
   14002c856:	add    BYTE PTR [rax],al
   14002c858:	sbb    al,0xc6
   14002c85a:	add    al,BYTE PTR [rax+0x1]
   14002c85d:	add    BYTE PTR [rax],al
   14002c85f:	add    BYTE PTR [rsi+rax*8],ch
   14002c862:	add    al,BYTE PTR [rax+0x1]
	...
   14002c86d:	add    BYTE PTR [rax],al
   14002c86f:	add    BYTE PTR [rax],bh
   14002c871:	mov    BYTE PTR [rdx],0x40
   14002c874:	add    DWORD PTR [rax],eax
   14002c876:	add    BYTE PTR [rax],al
   14002c878:	clc    
   14002c879:	(bad)
   14002c87c:	add    DWORD PTR [rax],eax
   14002c87e:	add    BYTE PTR [rax],al
   14002c880:	sub    al,0xc6
   14002c882:	add    al,BYTE PTR [rax+0x1]
	...
   14002c88d:	add    BYTE PTR [rax],al
   14002c88f:	add    BYTE PTR [rax],bh
   14002c891:	mov    BYTE PTR [rdx],0x40
   14002c894:	add    DWORD PTR [rax],eax
   14002c896:	add    BYTE PTR [rax],al
   14002c898:	clc    
   14002c899:	(bad)
   14002c89c:	add    DWORD PTR [rax],eax
   14002c89e:	add    BYTE PTR [rax],al
   14002c8a0:	sub    al,0xc6
   14002c8a2:	add    al,BYTE PTR [rax+0x1]
	...
   14002c8ad:	add    BYTE PTR [rax],al
   14002c8af:	add    BYTE PTR [rax],bh
   14002c8b1:	mov    BYTE PTR [rdx],0x40
   14002c8b4:	add    DWORD PTR [rax],eax
   14002c8b6:	add    BYTE PTR [rax],al
   14002c8b8:	sbb    al,0xc6
   14002c8ba:	add    al,BYTE PTR [rax+0x1]
   14002c8bd:	add    BYTE PTR [rax],al
   14002c8bf:	add    al,dh
   14002c8c1:	(bad)
   14002c8c4:	add    DWORD PTR [rax],eax
   14002c8c6:	add    BYTE PTR [rax],al
   14002c8c8:	sub    al,0xc6
   14002c8ca:	add    al,BYTE PTR [rax+0x1]
	...
   14002c8d5:	add    BYTE PTR [rax],al
   14002c8d7:	add    BYTE PTR [rax],bh
   14002c8d9:	mov    BYTE PTR [rdx],0x40
   14002c8dc:	add    DWORD PTR [rax],eax
   14002c8de:	add    BYTE PTR [rax],al
   14002c8e0:	clc    
   14002c8e1:	(bad)
   14002c8e4:	add    DWORD PTR [rax],eax
   14002c8e6:	add    BYTE PTR [rax],al
   14002c8e8:	loopne 0x14002c8af
   14002c8ea:	add    al,BYTE PTR [rax+0x1]
   14002c8ed:	add    BYTE PTR [rax],al
   14002c8ef:	add    BYTE PTR [rsi+rax*8],ch
   14002c8f2:	add    al,BYTE PTR [rax+0x1]
	...
   14002c8fd:	add    BYTE PTR [rax],al
   14002c8ff:	add    BYTE PTR [rsi+rax*8],ah
   14002c902:	add    al,BYTE PTR [rax+0x1]
   14002c905:	add    BYTE PTR [rax],al
   14002c907:	add    BYTE PTR [rax],bh
   14002c909:	mov    BYTE PTR [rdx],0x40
   14002c90c:	add    DWORD PTR [rax],eax
   14002c90e:	add    BYTE PTR [rax],al
   14002c910:	sbb    al,0xc6
   14002c912:	add    al,BYTE PTR [rax+0x1]
   14002c915:	add    BYTE PTR [rax],al
   14002c917:	add    al,bl
   14002c919:	(bad)
   14002c91c:	add    DWORD PTR [rax],eax
   14002c91e:	add    BYTE PTR [rax],al
   14002c920:	sub    al,0xc6
   14002c922:	add    al,BYTE PTR [rax+0x1]
	...
   14002c92d:	add    BYTE PTR [rax],al
   14002c92f:	add    BYTE PTR [rsi+rax*8],ah
   14002c932:	add    al,BYTE PTR [rax+0x1]
   14002c935:	add    BYTE PTR [rax],al
   14002c937:	add    BYTE PTR [rax],bh
   14002c939:	mov    BYTE PTR [rdx],0x40
   14002c93c:	add    DWORD PTR [rax],eax
   14002c93e:	add    BYTE PTR [rax],al
   14002c940:	sbb    al,0xc6
   14002c942:	add    al,BYTE PTR [rax+0x1]
   14002c945:	add    BYTE PTR [rax],al
   14002c947:	add    al,cl
   14002c949:	(bad)
   14002c94c:	add    DWORD PTR [rax],eax
   14002c94e:	add    BYTE PTR [rax],al
   14002c950:	sub    al,0xc6
   14002c952:	add    al,BYTE PTR [rax+0x1]
   14002c955:	add    BYTE PTR [rax],al
   14002c957:	add    BYTE PTR [rax+0x14002c5],dh
	...
   14002c965:	add    BYTE PTR [rax],al
   14002c967:	add    BYTE PTR [rax],bh
   14002c969:	mov    BYTE PTR [rdx],0x40
   14002c96c:	add    DWORD PTR [rax],eax
   14002c96e:	add    BYTE PTR [rax],al
   14002c970:	nop
   14002c971:	(bad)
   14002c974:	add    DWORD PTR [rax],eax
   14002c976:	add    BYTE PTR [rax],al
   14002c978:	js     0x14002c93f
   14002c97a:	add    al,BYTE PTR [rax+0x1]
	...
   14002c985:	add    BYTE PTR [rax],al
   14002c987:	add    BYTE PTR [rdi+0x0],al
   14002c98a:	add    BYTE PTR [rax],al
   14002c98c:	add    DWORD PTR [rax],eax
   14002c98e:	add    BYTE PTR [rax],al
   14002c990:	or     DWORD PTR [rax],eax
   14002c992:	add    BYTE PTR [rax],al
   14002c994:	adc    al,BYTE PTR [rax]
   14002c996:	add    BYTE PTR [rax],al
   14002c998:	adc    eax,0x19000000
   14002c99d:	add    BYTE PTR [rax],al
   14002c99f:	add    BYTE PTR [rax],dl
   14002c9a1:	add    BYTE PTR [rax],al
   14002c9a3:	add    BYTE PTR [rbx],ah
   14002c9a5:	add    BYTE PTR [rax],al
   14002c9a7:	add    BYTE PTR [rip+0x32000000],ch        # 0x17202c9ad
   14002c9ad:	add    BYTE PTR [rax],al
   14002c9af:	add    BYTE PTR [rax+rax*1],dh
   14002c9b2:	add    BYTE PTR [rax],al
   14002c9b4:	cmp    eax,DWORD PTR [rax]
   14002c9b6:	add    BYTE PTR [rax],al
   14002c9b8:	cmp    al,0x0
   14002c9ba:	add    BYTE PTR [rax],al
   14002c9bc:	rex.X add BYTE PTR [rax],al
   14002c9bf:	add    BYTE PTR [rax+rax*1+0x0],cl
   14002c9c3:	add    BYTE PTR [rbx+0x0],dl
   14002c9c6:	add    BYTE PTR [rax],al
   14002c9c8:	add    eax,DWORD PTR [rax]
   14002c9ca:	add    BYTE PTR [rax],al
   14002c9cc:	pop    rcx
   14002c9cd:	add    BYTE PTR [rax],al
   14002c9cf:	add    BYTE PTR [rax+0x0],dh
   14002c9d2:	add    BYTE PTR [rax],al
   14002c9d4:	js     0x14002c9d6
   14002c9d6:	add    BYTE PTR [rax],al
   14002c9d8:	jns    0x14002c9da
   14002c9da:	add    BYTE PTR [rax],al
   14002c9dc:	jge    0x14002c9de
   14002c9de:	add    BYTE PTR [rax],al
   14002c9e0:	test   BYTE PTR [rax],al
   14002c9e2:	add    BYTE PTR [rax],al
   14002c9e4:	mov    al,BYTE PTR [rax]
   14002c9e6:	add    BYTE PTR [rax],al
   14002c9e8:	mov    eax,DWORD PTR [rax]
   14002c9ea:	add    BYTE PTR [rax],al
   14002c9ec:	add    DWORD PTR [rax],eax
   14002c9ee:	add    BYTE PTR [rax],al
   14002c9f0:	add    al,BYTE PTR [rax]
   14002c9f2:	add    BYTE PTR [rax],al
   14002c9f4:	add    al,0x0
   14002c9f6:	add    BYTE PTR [rax],al
   14002c9f8:	add    eax,0x6000000
   14002c9fd:	add    BYTE PTR [rax],al
   14002c9ff:	add    BYTE PTR [rdi],al
   14002ca01:	add    BYTE PTR [rax],al
   14002ca03:	add    BYTE PTR [rdx],cl
   14002ca05:	add    BYTE PTR [rax],al
   14002ca07:	add    BYTE PTR [rbx],cl
   14002ca09:	add    BYTE PTR [rax],al
   14002ca0b:	add    BYTE PTR [rax+rax*1],cl
   14002ca0e:	add    BYTE PTR [rax],al
   14002ca10:	or     eax,0xe000000
   14002ca15:	add    BYTE PTR [rax],al
   14002ca17:	add    BYTE PTR [rdi],cl
   14002ca19:	add    BYTE PTR [rax],al
   14002ca1b:	add    BYTE PTR [rcx],dl
   14002ca1d:	add    BYTE PTR [rax],al
   14002ca1f:	add    BYTE PTR [rax+rax*1],dl
   14002ca22:	add    BYTE PTR [rax],al
   14002ca24:	sbb    BYTE PTR [rax],al
   14002ca26:	add    BYTE PTR [rax],al
   14002ca28:	xchg   ecx,eax
   14002ca29:	add    BYTE PTR [rax],al
   14002ca2b:	add    BYTE PTR [rdx],bl
   14002ca2d:	add    BYTE PTR [rax],al
   14002ca2f:	add    BYTE PTR [rip+0x1e000000],bl        # 0x15e02ca35
   14002ca35:	add    BYTE PTR [rax],al
   14002ca37:	add    BYTE PTR [rdi],bl
   14002ca39:	add    BYTE PTR [rax],al
   14002ca3b:	add    BYTE PTR [rax],ah
   14002ca3d:	add    BYTE PTR [rax],al
   14002ca3f:	add    BYTE PTR [rcx],ah
   14002ca41:	add    BYTE PTR [rax],al
   14002ca43:	add    BYTE PTR [rdx],ah
   14002ca45:	add    BYTE PTR [rax],al
   14002ca47:	add    BYTE PTR [rax+rax*1],ah
   14002ca4a:	add    BYTE PTR [rax],al
   14002ca4c:	lahf   
   14002ca4d:	add    BYTE PTR [rax],al
   14002ca4f:	add    BYTE PTR [rsi],ah
   14002ca51:	add    BYTE PTR [rax],al
   14002ca53:	add    BYTE PTR [rax],ch
   14002ca55:	add    BYTE PTR [rax],al
   14002ca57:	add    BYTE PTR [rcx],ch
   14002ca59:	add    BYTE PTR [rax],al
   14002ca5b:	add    BYTE PTR [rdx],ch
   14002ca5d:	add    BYTE PTR [rax],al
   14002ca5f:	add    BYTE PTR [rbx],ch
   14002ca61:	add    BYTE PTR [rax],al
   14002ca63:	add    BYTE PTR [rax+rax*1],ch
   14002ca66:	add    BYTE PTR [rax],al
   14002ca68:	add    BYTE PTR cs:[rax],al
   14002ca6b:	add    BYTE PTR [rdi],ch
   14002ca6d:	add    BYTE PTR [rax],al
   14002ca6f:	add    BYTE PTR [rax],dh
   14002ca71:	add    BYTE PTR [rax],al
   14002ca73:	add    BYTE PTR [rcx],dh
   14002ca75:	add    BYTE PTR [rax],al
   14002ca77:	add    BYTE PTR [rip+0x36000000],dh        # 0x17602ca7d
   14002ca7d:	add    BYTE PTR [rax],al
   14002ca7f:	add    BYTE PTR [rdx],bh
   14002ca81:	add    BYTE PTR [rax],al
   14002ca83:	add    BYTE PTR [rip+0x3e000000],bh        # 0x17e02ca89
   14002ca89:	add    BYTE PTR [rax],al
   14002ca8b:	add    BYTE PTR [rdi],bh
   14002ca8d:	add    BYTE PTR [rax],al
   14002ca8f:	add    BYTE PTR [rdi],dl
   14002ca91:	add    BYTE PTR [rax],al
   14002ca93:	add    BYTE PTR [rax+0x0],al
   14002ca96:	add    BYTE PTR [rax],al
   14002ca98:	add    BYTE PTR [r8],al
   14002ca9b:	add    BYTE PTR [rbx+0x0],al
   14002ca9e:	add    BYTE PTR [rax],al
   14002caa0:	add    BYTE PTR [r8],r8b
   14002caa3:	add    BYTE PTR [rsi+0x0],al
   14002caa6:	add    BYTE PTR [rax],al
   14002caa8:	rex.W add BYTE PTR [rax],al
   14002caab:	add    bh,ah
   14002caad:	add    BYTE PTR [rax],al
   14002caaf:	add    BYTE PTR [rbx+0x0],cl
   14002cab2:	add    BYTE PTR [rax],al
   14002cab4:	rex.WRB add BYTE PTR [r8],r8b
   14002cab7:	add    BYTE PTR [rax+0x0],dl
   14002caba:	add    BYTE PTR [rax],al
   14002cabc:	push   rdx
   14002cabd:	add    BYTE PTR [rax],al
   14002cabf:	add    BYTE PTR [rax+rax*1+0x0],dl
   14002cac3:	add    BYTE PTR [rax+rax*1+0x550000],ch
   14002caca:	add    BYTE PTR [rax],al
   14002cacc:	lea    eax,[rax]
   14002cace:	add    BYTE PTR [rax],al
   14002cad0:	push   rsi
   14002cad1:	add    BYTE PTR [rax],al
   14002cad3:	add    BYTE PTR [rdi+0x0],dl
   14002cad6:	add    BYTE PTR [rax],al
   14002cad8:	pop    rax
   14002cad9:	add    BYTE PTR [rax],al
   14002cadb:	add    BYTE PTR [rbx+0x0],bl
   14002cade:	add    BYTE PTR [rax],al
   14002cae0:	pop    rsp
   14002cae1:	add    BYTE PTR [rax],al
   14002cae3:	add    BYTE PTR [rbp+0x0],bl
   14002cae6:	add    BYTE PTR [rax],al
   14002cae8:	pop    rsi
   14002cae9:	add    BYTE PTR [rax],al
   14002caeb:	add    BYTE PTR [rax+rax*1+0x0],al
   14002caef:	add    BYTE PTR [rax+0x0],ch
   14002caf2:	add    BYTE PTR [rax],al
   14002caf4:	imul   eax,DWORD PTR [rax],0x6a0000
   14002cafa:	add    BYTE PTR [rax],al
   14002cafc:	outs   dx,BYTE PTR ds:[rsi]
   14002cafd:	add    BYTE PTR [rax],al
   14002caff:	add    BYTE PTR [rsi+0x0],ah
   14002cb02:	add    BYTE PTR [rax],al
   14002cb04:	outs   dx,DWORD PTR ds:[rsi]
   14002cb05:	add    BYTE PTR [rax],al
   14002cb07:	add    BYTE PTR [rcx+0x0],dh
   14002cb0a:	add    BYTE PTR [rax],al
   14002cb0c:	imul   eax,DWORD PTR [rax],0x0
   14002cb0f:	add    BYTE PTR [rdx+0x0],dh
   14002cb12:	add    BYTE PTR [rax],al
   14002cb14:	je     0x14002cb16
   14002cb16:	add    BYTE PTR [rax],al
   14002cb18:	jne    0x14002cb1a
   14002cb1a:	add    BYTE PTR [rax],al
   14002cb1c:	jbe    0x14002cb1e
   14002cb1e:	add    BYTE PTR [rax],al
   14002cb20:	ja     0x14002cb22
   14002cb22:	add    BYTE PTR [rax],al
   14002cb24:	jnp    0x14002cb26
   14002cb26:	add    BYTE PTR [rax],al
   14002cb28:	jl     0x14002cb2a
   14002cb2a:	add    BYTE PTR [rax],al
   14002cb2c:	add    BYTE PTR [eax],al
   14002cb2f:	add    BYTE PTR [rsi+0x0],bh
   14002cb32:	add    BYTE PTR [rax],al
   14002cb34:	add    BYTE PTR [rax],0x0
   14002cb37:	add    BYTE PTR [rdx-0x7d000000],al
   14002cb3d:	add    BYTE PTR [rax],al
   14002cb3f:	add    BYTE PTR [rbp-0x79000000],al
   14002cb45:	add    BYTE PTR [rax],al
   14002cb47:	add    BYTE PTR [rax-0x77000000],cl
   14002cb4d:	add    BYTE PTR [rax],al
   14002cb4f:	add    BYTE PTR [rax+rax*1+0x10000],cl
   14002cb56:	add    BYTE PTR [rax],al
   14002cb58:	adc    eax,DWORD PTR [rax]
   14002cb5a:	add    BYTE PTR [rax],al
   14002cb5c:	and    eax,0x5b000000
   14002cb61:	add    BYTE PTR [rax],al
   14002cb63:	add    BYTE PTR [rsi+0x7a000000],ah
   14002cb69:	add    BYTE PTR [rax],al
   14002cb6b:	add    ah,ch
   14002cb6d:	add    BYTE PTR [rax],al
   14002cb6f:	add    BYTE PTR [rcx],al
   14002cb71:	add    BYTE PTR [rax],al
   14002cb73:	add    BYTE PTR [rax],al
   14002cb75:	add    BYTE PTR [rax],al
   14002cb77:	add    BYTE PTR [rbx],dh
   14002cb79:	add    BYTE PTR [rax],al
   14002cb7b:	add    BYTE PTR [rcx],al
   14002cb7d:	add    BYTE PTR [rax],al
   14002cb7f:	add    BYTE PTR [rdi+0x37000000],cl
   14002cb85:	add    BYTE PTR [rax],al
   14002cb87:	add    BYTE PTR [rax],bh
   14002cb89:	add    BYTE PTR [rax],al
   14002cb8b:	add    BYTE PTR [rcx],bh
   14002cb8d:	add    BYTE PTR [rax],al
   14002cb8f:	add    BYTE PTR [rax+0x4f000000],dl
   14002cb95:	add    BYTE PTR [rax],al
   14002cb97:	add    BYTE PTR [rbp+0x61000000],ch
   14002cb9d:	add    BYTE PTR [rax],al
   14002cb9f:	add    BYTE PTR [rbx+0x0],ah
   14002cba2:	add    BYTE PTR [rax],al
   14002cba4:	add    DWORD PTR [rax],eax
   14002cba6:	add    BYTE PTR [rax],al
   14002cba8:	(bad)  
   14002cba9:	add    BYTE PTR [rax],al
   14002cbab:	add    BYTE PTR [rcx],al
   14002cbad:	add    BYTE PTR [rax],al
   14002cbaf:	add    BYTE PTR [rax+rax*1+0x0],ch
   14002cbb3:	add    BYTE PTR [rax+rax*1],bl
   14002cbb6:	add    BYTE PTR [rax],al
   14002cbb8:	add    DWORD PTR [rax],eax
   14002cbba:	add    BYTE PTR [rax],al
   14002cbbc:	add    BYTE PTR [rax],al
   14002cbbe:	add    BYTE PTR [rax],al
   14002cbc0:	rex.WX add BYTE PTR [rax],al
   14002cbc3:	add    BYTE PTR [rcx],al
   14002cbc5:	add    BYTE PTR [rax],al
   14002cbc7:	add    BYTE PTR [rcx+0x0],cl
   14002cbca:	add    BYTE PTR [rax],al
   14002cbcc:	add    DWORD PTR [rax],eax
   14002cbce:	add    BYTE PTR [rax],al
   14002cbd0:	mov    es,WORD PTR [rax]
   14002cbd2:	add    BYTE PTR [rax],al
   14002cbd4:	(bad)  
   14002cbd5:	add    BYTE PTR [rax],al
   14002cbd7:	add    BYTE PTR [rbx],bl
   14002cbd9:	add    BYTE PTR [rax],al
   14002cbdb:	add    BYTE PTR [rax+0x0],ah
   14002cbde:	add    BYTE PTR [rax],al
   14002cbe0:	add    BYTE PTR fs:[rax],al
   14002cbe3:	add    BYTE PTR [rcx+0x1000000],al
   14002cbe9:	add    BYTE PTR [rax],al
   14002cbeb:	add    BYTE PTR [rax],al
   14002cbed:	add    BYTE PTR [rax],al
   14002cbef:	add    BYTE PTR [rdx+0x0],bl
   14002cbf2:	add    BYTE PTR [rax],al
   14002cbf4:	add    DWORD PTR [rax],eax
   14002cbf6:	add    BYTE PTR [rax],al
   14002cbf8:	pop    rdi
   14002cbf9:	add    BYTE PTR [rax],al
   14002cbfb:	add    BYTE PTR [rcx],al
   14002cbfd:	add    BYTE PTR [rax],al
   14002cbff:	add    BYTE PTR [rbp+0x0],ch
   14002cc02:	add    BYTE PTR [rax],al
   14002cc04:	add    DWORD PTR [rax],eax
   14002cc06:	add    BYTE PTR [rax],al
   14002cc08:	rex.WRX add BYTE PTR [rax],r8b
   14002cc0b:	add    BYTE PTR [rcx],al
   14002cc0d:	add    BYTE PTR [rax],al
   14002cc0f:	add    BYTE PTR [rsi+0x1000000],al
   14002cc15:	add    BYTE PTR [rax],al
   14002cc17:	add    BYTE PTR [rax],cl
   14002cc19:	add    BYTE PTR [rax],al
   14002cc1b:	add    BYTE PTR [rcx],al
   14002cc1d:	add    BYTE PTR [rax],al
   14002cc1f:	add    BYTE PTR [rsi+0x1000000],ah
	...
   14002cc2d:	add    BYTE PTR [rax],al
   14002cc2f:	add    BYTE PTR [rsi],bl
	...
   14002cc3d:	add    BYTE PTR [rax],al
   14002cc3f:	add    BYTE PTR [rsi+0x70],ch
   14002cc42:	ins    BYTE PTR es:[rdi],dx
   14002cc43:	jne    0x14002ccb7
   14002cc45:	(bad)  
   14002cc46:	ins    BYTE PTR es:[rdi],dx
   14002cc47:	jae    0x14002cc86
   14002cc49:	xor    DWORD PTR [rbx],edi
   14002cc4b:	and    BYTE PTR [rax+0x6c],dh
   14002cc4e:	jne    0x14002ccc2
   14002cc50:	(bad)  
   14002cc51:	ins    BYTE PTR es:[rdi],dx
   14002cc52:	cmp    eax,0x3b30
   14002cc57:	add    BYTE PTR [rsi+0x70],ch
   14002cc5a:	ins    BYTE PTR es:[rdi],dx
   14002cc5b:	jne    0x14002cccf
   14002cc5d:	(bad)  
   14002cc5e:	ins    BYTE PTR es:[rdi],dx
   14002cc5f:	jae    0x14002cc9e
   14002cc61:	xor    bh,BYTE PTR [rbx]
   14002cc63:	and    BYTE PTR [rax+0x6c],dh
   14002cc66:	jne    0x14002ccda
   14002cc68:	(bad)  
   14002cc69:	ins    BYTE PTR es:[rdi],dx
   14002cc6a:	cmp    eax,0x21206e28
   14002cc6f:	cmp    eax,0x3b293120
   14002cc74:	add    BYTE PTR [rax],al
   14002cc76:	add    BYTE PTR [rax],al
   14002cc78:	outs   dx,BYTE PTR ds:[rsi]
   14002cc79:	jo     0x14002cce7
   14002cc7b:	jne    0x14002ccef
   14002cc7d:	(bad)  
   14002cc7e:	ins    BYTE PTR es:[rdi],dx
   14002cc7f:	jae    0x14002ccbe
   14002cc81:	xor    bh,BYTE PTR [rbx]
   14002cc83:	and    BYTE PTR [rax+0x6c],dh
   14002cc86:	jne    0x14002ccfa
   14002cc88:	(bad)  
   14002cc89:	ins    BYTE PTR es:[rdi],dx
   14002cc8a:	cmp    eax,0x3e206e28
   14002cc8f:	and    BYTE PTR [rcx],dh
   14002cc91:	sub    DWORD PTR [rbx],edi
	...
   14002cc9f:	add    BYTE PTR [rsi+0x70],ch
   14002cca2:	ins    BYTE PTR es:[rdi],dx
   14002cca3:	jne    0x14002cd17
   14002cca5:	(bad)  
   14002cca6:	ins    BYTE PTR es:[rdi],dx
   14002cca7:	jae    0x14002cce6
   14002cca9:	xor    edi,DWORD PTR [rbx]
   14002ccab:	and    BYTE PTR [rax+0x6c],dh
   14002ccae:	jne    0x14002cd22
   14002ccb0:	(bad)  
   14002ccb1:	ins    BYTE PTR es:[rdi],dx
   14002ccb2:	cmp    eax,0x31256e28
   14002ccb7:	xor    BYTE PTR [rip+0x2620313d],bh        # 0x16622fdfa
   14002ccbd:	and    BYTE PTR es:[rsi+0x25],ch
   14002ccc1:	xor    DWORD PTR [rax],esi
   14002ccc3:	xor    BYTE PTR [rcx],ah
   14002ccc5:	cmp    eax,0x3f203131
   14002ccca:	and    BYTE PTR [rax],dh
   14002cccc:	and    BYTE PTR [rdx],bh
   14002ccce:	and    BYTE PTR [rsi+0x20],ch
   14002ccd1:	and    DWORD PTR [rip+0x3f203020],edi        # 0x17f22fcf7
   14002ccd7:	and    BYTE PTR [rcx],dh
   14002ccd9:	and    BYTE PTR [rdx],bh
   14002ccdb:	and    BYTE PTR [rdx],dh
   14002ccdd:	sub    DWORD PTR [rbx],edi
   14002ccdf:	add    BYTE PTR [rsi+0x70],ch
   14002cce2:	ins    BYTE PTR es:[rdi],dx
   14002cce3:	jne    0x14002cd57
   14002cce5:	(bad)  
   14002cce6:	ins    BYTE PTR es:[rdi],dx
   14002cce7:	jae    0x14002cd26
   14002cce9:	xor    bh,BYTE PTR [rbx]
   14002cceb:	and    BYTE PTR [rax+0x6c],dh
   14002ccee:	jne    0x14002cd62
   14002ccf0:	(bad)  
   14002ccf1:	ins    BYTE PTR es:[rdi],dx
   14002ccf2:	cmp    eax,0x31256e28
   14002ccf7:	xor    BYTE PTR [rip+0x2620313d],bh        # 0x16622fe3a
   14002ccfd:	and    BYTE PTR es:[rsi+0x25],ch
   14002cd01:	xor    DWORD PTR [rax],esi
   14002cd03:	xor    BYTE PTR [rcx],ah
   14002cd05:	cmp    eax,0x3f203131
   14002cd0a:	and    BYTE PTR [rax],dh
   14002cd0c:	and    BYTE PTR [rdx],bh
   14002cd0e:	and    BYTE PTR [rcx],dh
   14002cd10:	sub    DWORD PTR [rbx],edi
   14002cd12:	add    BYTE PTR [rax],al
   14002cd14:	add    BYTE PTR [rax],al
   14002cd16:	add    BYTE PTR [rax],al
   14002cd18:	outs   dx,BYTE PTR ds:[rsi]
   14002cd19:	jo     0x14002cd87
   14002cd1b:	jne    0x14002cd8f
   14002cd1d:	(bad)  
   14002cd1e:	ins    BYTE PTR es:[rdi],dx
   14002cd1f:	jae    0x14002cd5e
   14002cd21:	xor    edi,DWORD PTR [rbx]
   14002cd23:	and    BYTE PTR [rax+0x6c],dh
   14002cd26:	jne    0x14002cd9a
   14002cd28:	(bad)  
   14002cd29:	ins    BYTE PTR es:[rdi],dx
   14002cd2a:	cmp    eax,0x3d3d6e28
   14002cd2f:	xor    DWORD PTR [rax],esp
   14002cd31:	(bad)  
   14002cd32:	and    BYTE PTR [rax],dh
   14002cd34:	and    BYTE PTR [rdx],bh
   14002cd36:	and    BYTE PTR [rsi+0x3d],ch
   14002cd39:	cmp    eax,0x203f2032
   14002cd3e:	xor    DWORD PTR [rax],esp
   14002cd40:	cmp    ah,BYTE PTR [rax]
   14002cd42:	xor    ch,BYTE PTR [rcx]
   14002cd44:	cmp    eax,DWORD PTR [rax]
	...
   14002cd4e:	add    BYTE PTR [rax],al
   14002cd50:	outs   dx,BYTE PTR ds:[rsi]
   14002cd51:	jo     0x14002cdbf
   14002cd53:	jne    0x14002cdc7
   14002cd55:	(bad)  
   14002cd56:	ins    BYTE PTR es:[rdi],dx
   14002cd57:	jae    0x14002cd96
   14002cd59:	xor    al,0x3b
   14002cd5b:	and    BYTE PTR [rax+0x6c],dh
   14002cd5e:	jne    0x14002cdd2
   14002cd60:	(bad)  
   14002cd61:	ins    BYTE PTR es:[rdi],dx
   14002cd62:	cmp    eax,0x3d3d6e28
   14002cd67:	xor    DWORD PTR [rax],esp
   14002cd69:	jl     0x14002cde7
   14002cd6b:	and    BYTE PTR [rsi+0x3d],ch
   14002cd6e:	cmp    eax,0x20293131
   14002cd73:	(bad)  
   14002cd74:	and    BYTE PTR [rax],dh
   14002cd76:	and    BYTE PTR [rdx],bh
   14002cd78:	and    BYTE PTR [rax],ch
   14002cd7a:	outs   dx,BYTE PTR ds:[rsi]
   14002cd7b:	cmp    eax,0x7c20323d
   14002cd80:	jl     0x14002cda2
   14002cd82:	outs   dx,BYTE PTR ds:[rsi]
   14002cd83:	cmp    eax,0x2932313d
   14002cd88:	and    BYTE PTR [rdi],bh
   14002cd8a:	and    BYTE PTR [rcx],dh
   14002cd8c:	and    BYTE PTR [rdx],bh
   14002cd8e:	and    BYTE PTR [rax],ch
   14002cd90:	outs   dx,BYTE PTR ds:[rsi]
   14002cd91:	and    BYTE PTR [rsi],bh
   14002cd93:	and    BYTE PTR [rdx],dh
   14002cd95:	and    BYTE PTR [rsi],ah
   14002cd97:	and    BYTE PTR es:[rsi+0x20],ch
   14002cd9b:	cmp    al,0x20
   14002cd9d:	xor    dh,BYTE PTR [rax]
   14002cd9f:	sub    DWORD PTR [rax],esp
   14002cda1:	(bad)  
   14002cda2:	and    BYTE PTR [rdx],dh
   14002cda4:	and    BYTE PTR [rdx],bh
   14002cda6:	and    BYTE PTR [rbx],dh
   14002cda8:	cmp    eax,DWORD PTR [rax]
   14002cdaa:	add    BYTE PTR [rax],al
   14002cdac:	add    BYTE PTR [rax],al
   14002cdae:	add    BYTE PTR [rax],al
   14002cdb0:	outs   dx,BYTE PTR ds:[rsi]
   14002cdb1:	jo     0x14002ce1f
   14002cdb3:	jne    0x14002ce27
   14002cdb5:	(bad)  
   14002cdb6:	ins    BYTE PTR es:[rdi],dx
   14002cdb7:	jae    0x14002cdf6
   14002cdb9:	xor    edi,DWORD PTR [rbx]
   14002cdbb:	and    BYTE PTR [rax+0x6c],dh
   14002cdbe:	jne    0x14002ce32
   14002cdc0:	(bad)  
   14002cdc1:	ins    BYTE PTR es:[rdi],dx
   14002cdc2:	cmp    eax,0x3d6e2828
   14002cdc7:	cmp    eax,0x3f202931
   14002cdcc:	and    BYTE PTR [rax],dh
   14002cdce:	and    BYTE PTR [rdx],bh
   14002cdd0:	and    BYTE PTR [rax],ch
   14002cdd2:	outs   dx,BYTE PTR ds:[rsi]
   14002cdd3:	ds cmp eax,0x26262032
   14002cdd9:	and    BYTE PTR [rsi+0x3c],ch
   14002cddc:	cmp    eax,0x3f202934
   14002cde1:	and    BYTE PTR [rcx],dh
   14002cde3:	and    BYTE PTR [rdx],bh
   14002cde5:	and    BYTE PTR [rdx],dh
   14002cde7:	sub    DWORD PTR [rbx],edi
   14002cde9:	add    BYTE PTR [rax],al
   14002cdeb:	add    BYTE PTR [rax],al
   14002cded:	add    BYTE PTR [rax],al
   14002cdef:	add    BYTE PTR [rsi+0x70],ch
   14002cdf2:	ins    BYTE PTR es:[rdi],dx
   14002cdf3:	jne    0x14002ce67
   14002cdf5:	(bad)  
   14002cdf6:	ins    BYTE PTR es:[rdi],dx
   14002cdf7:	jae    0x14002ce36
   14002cdf9:	xor    edi,DWORD PTR [rbx]
   14002cdfb:	and    BYTE PTR [rax+0x6c],dh
   14002cdfe:	jne    0x14002ce72
   14002ce00:	(bad)  
   14002ce01:	ins    BYTE PTR es:[rdi],dx
   14002ce02:	cmp    eax,0x31256e28
   14002ce07:	xor    BYTE PTR [rax],dh
   14002ce09:	cmp    eax,0x3f20313d
   14002ce0e:	and    BYTE PTR [rax],dh
   14002ce10:	and    BYTE PTR [rdx],bh
   14002ce12:	and    BYTE PTR [rsi+0x25],ch
   14002ce15:	xor    DWORD PTR [rax],esi
   14002ce17:	xor    BYTE PTR [rip+0x3f20323d],bh        # 0x17f23005a
   14002ce1d:	and    BYTE PTR [rcx],dh
   14002ce1f:	and    BYTE PTR [rdx],bh
   14002ce21:	and    BYTE PTR [rdx],dh
   14002ce23:	sub    DWORD PTR [rbx],edi
	...
   14002ce2d:	add    BYTE PTR [rax],al
   14002ce2f:	add    BYTE PTR [rsi+0x70],ch
   14002ce32:	ins    BYTE PTR es:[rdi],dx
   14002ce33:	jne    0x14002cea7
   14002ce35:	(bad)  
   14002ce36:	ins    BYTE PTR es:[rdi],dx
   14002ce37:	jae    0x14002ce76
   14002ce39:	xor    edi,DWORD PTR [rbx]
   14002ce3b:	and    BYTE PTR [rax+0x6c],dh
   14002ce3e:	jne    0x14002ceb2
   14002ce40:	(bad)  
   14002ce41:	ins    BYTE PTR es:[rdi],dx
   14002ce42:	cmp    eax,0x31256e28
   14002ce47:	xor    BYTE PTR [rip+0x2620313d],bh        # 0x16622ff8a
   14002ce4d:	and    BYTE PTR es:[rsi+0x25],ch
   14002ce51:	xor    DWORD PTR [rax],esi
   14002ce53:	xor    BYTE PTR [rcx],ah
   14002ce55:	cmp    eax,0x3f203131
   14002ce5a:	and    BYTE PTR [rax],dh
   14002ce5c:	and    BYTE PTR [rdx],bh
   14002ce5e:	and    BYTE PTR [rsi+0x25],ch
   14002ce61:	xor    DWORD PTR [rax],esi
   14002ce63:	ds cmp eax,0x26262032
   14002ce69:	and    BYTE PTR [rax],ch
   14002ce6b:	outs   dx,BYTE PTR ds:[rsi]
   14002ce6c:	and    eax,0x3c303031
   14002ce71:	xor    DWORD PTR [rax],esi
   14002ce73:	and    BYTE PTR [rsp+rdi*2+0x20],bh
   14002ce77:	outs   dx,BYTE PTR ds:[rsi]
   14002ce78:	and    eax,0x3e303031
   14002ce7d:	cmp    eax,0x20293032
   14002ce82:	(bad)  
   14002ce83:	and    BYTE PTR [rcx],dh
   14002ce85:	and    BYTE PTR [rdx],bh
   14002ce87:	and    BYTE PTR [rdx],dh
   14002ce89:	sub    DWORD PTR [rbx],edi
   14002ce8b:	add    BYTE PTR [rax],al
   14002ce8d:	add    BYTE PTR [rax],al
   14002ce8f:	add    BYTE PTR [rsi+0x70],ch
   14002ce92:	ins    BYTE PTR es:[rdi],dx
   14002ce93:	jne    0x14002cf07
   14002ce95:	(bad)  
   14002ce96:	ins    BYTE PTR es:[rdi],dx
   14002ce97:	jae    0x14002ced6
   14002ce99:	xor    edi,DWORD PTR [rbx]
   14002ce9b:	and    BYTE PTR [rax+0x6c],dh
   14002ce9e:	jne    0x14002cf12
   14002cea0:	(bad)  
   14002cea1:	ins    BYTE PTR es:[rdi],dx
   14002cea2:	cmp    eax,0x31256e28
   14002cea7:	xor    BYTE PTR [rip+0x2620313d],bh        # 0x16622ffea
   14002cead:	and    BYTE PTR es:[rsi+0x25],ch
   14002ceb1:	xor    DWORD PTR [rax],esi
   14002ceb3:	xor    BYTE PTR [rcx],ah
   14002ceb5:	cmp    eax,0x3f203131
   14002ceba:	and    BYTE PTR [rax],dh
   14002cebc:	and    BYTE PTR [rdx],bh
   14002cebe:	and    BYTE PTR [rsi+0x25],ch
   14002cec1:	xor    DWORD PTR [rax],esi
   14002cec3:	ds cmp eax,0x26262032
   14002cec9:	and    BYTE PTR [rsi+0x25],ch
   14002cecc:	xor    DWORD PTR [rax],esi
   14002cece:	cmp    al,0x3d
   14002ced0:	xor    al,0x20
   14002ced2:	es and BYTE PTR es:[rax],ch
   14002ced6:	outs   dx,BYTE PTR ds:[rsi]
   14002ced7:	and    eax,0x3c303031
   14002cedc:	xor    DWORD PTR [rax],esi
   14002cede:	and    BYTE PTR [rsp+rdi*2+0x20],bh
   14002cee2:	outs   dx,BYTE PTR ds:[rsi]
   14002cee3:	and    eax,0x3e303031
   14002cee8:	cmp    eax,0x20293032
   14002ceed:	(bad)  
   14002ceee:	and    BYTE PTR [rcx],dh
   14002cef0:	and    BYTE PTR [rdx],bh
   14002cef2:	and    BYTE PTR [rdx],dh
   14002cef4:	sub    DWORD PTR [rbx],edi
	...
   14002cefe:	add    BYTE PTR [rax],al
   14002cf00:	outs   dx,BYTE PTR ds:[rsi]
   14002cf01:	jo     0x14002cf6f
   14002cf03:	jne    0x14002cf77
   14002cf05:	(bad)  
   14002cf06:	ins    BYTE PTR es:[rdi],dx
   14002cf07:	jae    0x14002cf46
   14002cf09:	xor    edi,DWORD PTR [rbx]
   14002cf0b:	and    BYTE PTR [rax+0x6c],dh
   14002cf0e:	jne    0x14002cf82
   14002cf10:	(bad)  
   14002cf11:	ins    BYTE PTR es:[rdi],dx
   14002cf12:	cmp    eax,0x3d3d6e28
   14002cf17:	xor    DWORD PTR [rax],esp
   14002cf19:	(bad)  
   14002cf1a:	and    BYTE PTR [rax],dh
   14002cf1c:	and    BYTE PTR [rdx],bh
   14002cf1e:	and    BYTE PTR [rsi+0x25],ch
   14002cf21:	xor    DWORD PTR [rax],esi
   14002cf23:	ds cmp eax,0x26262032
   14002cf29:	and    BYTE PTR [rsi+0x25],ch
   14002cf2c:	xor    DWORD PTR [rax],esi
   14002cf2e:	cmp    al,0x3d
   14002cf30:	xor    al,0x20
   14002cf32:	es and BYTE PTR es:[rax],ch
   14002cf36:	outs   dx,BYTE PTR ds:[rsi]
   14002cf37:	and    eax,0x3c303031
   14002cf3c:	xor    DWORD PTR [rax],esi
   14002cf3e:	and    BYTE PTR [rsp+rdi*2+0x20],bh
   14002cf42:	outs   dx,BYTE PTR ds:[rsi]
   14002cf43:	and    eax,0x3e303031
   14002cf48:	cmp    eax,0x20293032
   14002cf4d:	(bad)  
   14002cf4e:	and    BYTE PTR [rcx],dh
   14002cf50:	and    BYTE PTR [rdx],bh
   14002cf52:	and    BYTE PTR [rdx],dh
   14002cf54:	sub    DWORD PTR [rbx],edi
	...
   14002cf5e:	add    BYTE PTR [rax],al
   14002cf60:	outs   dx,BYTE PTR ds:[rsi]
   14002cf61:	jo     0x14002cfcf
   14002cf63:	jne    0x14002cfd7
   14002cf65:	(bad)  
   14002cf66:	ins    BYTE PTR es:[rdi],dx
   14002cf67:	jae    0x14002cfa6
   14002cf69:	xor    edi,DWORD PTR [rbx]
   14002cf6b:	and    BYTE PTR [rax+0x6c],dh
   14002cf6e:	jne    0x14002cfe2
   14002cf70:	(bad)  
   14002cf71:	ins    BYTE PTR es:[rdi],dx
   14002cf72:	cmp    eax,0x3d3d6e28
   14002cf77:	xor    DWORD PTR [rax],esp
   14002cf79:	(bad)  
   14002cf7a:	and    BYTE PTR [rax],dh
   14002cf7c:	and    BYTE PTR [rdx],bh
   14002cf7e:	and    BYTE PTR [rax],ch
   14002cf80:	outs   dx,BYTE PTR ds:[rsi]
   14002cf81:	cmp    eax,0x7c20303d
   14002cf86:	jl     0x14002cfa8
   14002cf88:	sub    BYTE PTR [rsi+0x25],ch
   14002cf8b:	xor    DWORD PTR [rax],esi
   14002cf8d:	xor    BYTE PTR [rax],ah
   14002cf8f:	and    BYTE PTR ds:[rax],dh
   14002cf92:	and    BYTE PTR [rsi],ah
   14002cf94:	and    BYTE PTR es:[rsi+0x25],ch
   14002cf98:	xor    DWORD PTR [rax],esi
   14002cf9a:	xor    BYTE PTR [rax],ah
   14002cf9c:	cmp    al,0x20
   14002cf9e:	xor    dh,BYTE PTR [rax]
   14002cfa0:	sub    DWORD PTR [rcx],ebp
   14002cfa2:	and    BYTE PTR [rdi],bh
   14002cfa4:	and    BYTE PTR [rcx],dh
   14002cfa6:	and    BYTE PTR [rdx],bh
   14002cfa8:	and    BYTE PTR [rdx],dh
   14002cfaa:	sub    DWORD PTR [rbx],edi
   14002cfac:	add    BYTE PTR [rax],al
   14002cfae:	add    BYTE PTR [rax],al
   14002cfb0:	outs   dx,BYTE PTR ds:[rsi]
   14002cfb1:	jo     0x14002d01f
   14002cfb3:	jne    0x14002d027
   14002cfb5:	(bad)  
   14002cfb6:	ins    BYTE PTR es:[rdi],dx
   14002cfb7:	jae    0x14002cff6
   14002cfb9:	xor    al,0x3b
   14002cfbb:	and    BYTE PTR [rax+0x6c],dh
   14002cfbe:	jne    0x14002d032
   14002cfc0:	(bad)  
   14002cfc1:	ins    BYTE PTR es:[rdi],dx
   14002cfc2:	cmp    eax,0x31256e28
   14002cfc7:	xor    BYTE PTR [rax],dh
   14002cfc9:	cmp    eax,0x3f20313d
   14002cfce:	and    BYTE PTR [rax],dh
   14002cfd0:	and    BYTE PTR [rdx],bh
   14002cfd2:	and    BYTE PTR [rsi+0x25],ch
   14002cfd5:	xor    DWORD PTR [rax],esi
   14002cfd7:	xor    BYTE PTR [rip+0x3f20323d],bh        # 0x17f23021a
   14002cfdd:	and    BYTE PTR [rcx],dh
   14002cfdf:	and    BYTE PTR [rdx],bh
   14002cfe1:	and    BYTE PTR [rsi+0x25],ch
   14002cfe4:	xor    DWORD PTR [rax],esi
   14002cfe6:	xor    BYTE PTR [rip+0x7c20333d],bh        # 0x1bc230329
   14002cfec:	jl     0x14002d00e
   14002cfee:	outs   dx,BYTE PTR ds:[rsi]
   14002cfef:	and    eax,0x3d303031
   14002cff4:	cmp    eax,0x203f2034
   14002cff9:	xor    ah,BYTE PTR [rax]
   14002cffb:	cmp    ah,BYTE PTR [rax]
   14002cffd:	xor    ebp,DWORD PTR [rcx]
   14002cfff:	cmp    eax,DWORD PTR [rax]
	...
   14002d00d:	add    BYTE PTR [rax],al
   14002d00f:	add    BYTE PTR [rsi+0x70],ch
   14002d012:	ins    BYTE PTR es:[rdi],dx
   14002d013:	jne    0x14002d087
   14002d015:	(bad)  
   14002d016:	ins    BYTE PTR es:[rdi],dx
   14002d017:	jae    0x14002d056
   14002d019:	xor    al,0x3b
   14002d01b:	and    BYTE PTR [rax+0x6c],dh
   14002d01e:	jne    0x14002d092
   14002d020:	(bad)  
   14002d021:	ins    BYTE PTR es:[rdi],dx
   14002d022:	cmp    eax,0x3d3d6e28
   14002d027:	xor    DWORD PTR [rax],esp
   14002d029:	(bad)  
   14002d02a:	and    BYTE PTR [rax],dh
   14002d02c:	and    BYTE PTR [rdx],bh
   14002d02e:	and    BYTE PTR [rax],ch
   14002d030:	outs   dx,BYTE PTR ds:[rsi]
   14002d031:	cmp    eax,0x7c20303d
   14002d036:	jl     0x14002d058
   14002d038:	sub    BYTE PTR [rsi+0x25],ch
   14002d03b:	xor    DWORD PTR [rax],esi
   14002d03d:	xor    BYTE PTR [rsi],bh
   14002d03f:	cmp    eax,0x26262031
   14002d044:	and    BYTE PTR [rsi+0x25],ch
   14002d047:	xor    DWORD PTR [rax],esi
   14002d049:	xor    BYTE PTR [rdi*1+0x29293031],bh
   14002d050:	and    BYTE PTR [rdi],bh
   14002d052:	and    BYTE PTR [rcx],dh
   14002d054:	and    BYTE PTR [rdx],bh
   14002d056:	and    BYTE PTR [rax],ch
   14002d058:	outs   dx,BYTE PTR ds:[rsi]
   14002d059:	and    eax,0x3e303031
   14002d05e:	cmp    eax,0x26203131
   14002d063:	and    BYTE PTR es:[rsi+0x25],ch
   14002d067:	xor    DWORD PTR [rax],esi
   14002d069:	xor    BYTE PTR [rdi*1+0x20293931],bh
   14002d070:	(bad)  
   14002d071:	and    BYTE PTR [rdx],dh
   14002d073:	and    BYTE PTR [rdx],bh
   14002d075:	and    BYTE PTR [rbx],dh
   14002d077:	sub    DWORD PTR [rbx],edi
   14002d079:	add    BYTE PTR [rax],al
   14002d07b:	add    BYTE PTR [rax],al
   14002d07d:	add    BYTE PTR [rax],al
   14002d07f:	add    BYTE PTR [rsi+0x70],ch
   14002d082:	ins    BYTE PTR es:[rdi],dx
   14002d083:	jne    0x14002d0f7
   14002d085:	(bad)  
   14002d086:	ins    BYTE PTR es:[rdi],dx
   14002d087:	jae    0x14002d0c6
   14002d089:	xor    eax,0x6c70203b
   14002d08e:	jne    0x14002d102
   14002d090:	(bad)  
   14002d091:	ins    BYTE PTR es:[rdi],dx
   14002d092:	cmp    eax,0x3d3d6e28
   14002d097:	xor    BYTE PTR [rax],ah
   14002d099:	(bad)  
   14002d09a:	and    BYTE PTR [rax],dh
   14002d09c:	and    BYTE PTR [rdx],bh
   14002d09e:	and    BYTE PTR [rsi+0x3d],ch
   14002d0a1:	cmp    eax,0x203f2031
   14002d0a6:	xor    DWORD PTR [rax],esp
   14002d0a8:	cmp    ah,BYTE PTR [rax]
   14002d0aa:	sub    BYTE PTR [rsi+0x3e],ch
   14002d0ad:	cmp    eax,0x26262032
   14002d0b2:	and    BYTE PTR [rsi+0x3c],ch
   14002d0b5:	cmp    eax,0x3f202935
   14002d0ba:	and    BYTE PTR [rdx],dh
   14002d0bc:	and    BYTE PTR [rdx],bh
   14002d0be:	and    BYTE PTR [rsi+0x3d],ch
   14002d0c1:	cmp    eax,0x203f2036
   14002d0c6:	xor    esp,DWORD PTR [rax]
   14002d0c8:	cmp    ah,BYTE PTR [rax]
   14002d0ca:	xor    al,0x29
   14002d0cc:	cmp    eax,DWORD PTR [rax]
   14002d0ce:	add    BYTE PTR [rax],al
   14002d0d0:	outs   dx,BYTE PTR ds:[rsi]
   14002d0d1:	jo     0x14002d13f
   14002d0d3:	jne    0x14002d147
   14002d0d5:	(bad)  
   14002d0d6:	ins    BYTE PTR es:[rdi],dx
   14002d0d7:	jae    0x14002d116
   14002d0d9:	cmp    esp,DWORD PTR ss:[rax]
   14002d0dc:	jo     0x14002d14a
   14002d0de:	jne    0x14002d152
   14002d0e0:	(bad)  
   14002d0e1:	ins    BYTE PTR es:[rdi],dx
   14002d0e2:	cmp    eax,0x3d3d6e28
   14002d0e7:	xor    BYTE PTR [rax],ah
   14002d0e9:	(bad)  
   14002d0ea:	and    BYTE PTR [rax],dh
   14002d0ec:	and    BYTE PTR [rdx],bh
   14002d0ee:	and    BYTE PTR [rsi+0x3d],ch
   14002d0f1:	cmp    eax,0x203f2031
   14002d0f6:	xor    DWORD PTR [rax],esp
   14002d0f8:	cmp    ah,BYTE PTR [rax]
   14002d0fa:	outs   dx,BYTE PTR ds:[rsi]
   14002d0fb:	cmp    eax,0x3f20323d
   14002d100:	and    BYTE PTR [rdx],dh
   14002d102:	and    BYTE PTR [rdx],bh
   14002d104:	and    BYTE PTR [rax],ch
   14002d106:	outs   dx,BYTE PTR ds:[rsi]
   14002d107:	and    eax,0x3e303031
   14002d10c:	cmp    eax,0x26262033
   14002d111:	and    BYTE PTR [rsi+0x25],ch
   14002d114:	xor    DWORD PTR [rax],esi
   14002d116:	xor    BYTE PTR [rdi*1+0x20293031],bh
   14002d11d:	(bad)  
   14002d11e:	and    BYTE PTR [rbx],dh
   14002d120:	and    BYTE PTR [rdx],bh
   14002d122:	and    BYTE PTR [rsi+0x25],ch
   14002d125:	xor    DWORD PTR [rax],esi
   14002d127:	xor    BYTE PTR [rsi],bh
   14002d129:	cmp    eax,0x3f203131
   14002d12e:	and    BYTE PTR [rax+riz*1],dh
   14002d131:	cmp    ah,BYTE PTR [rax]
   14002d133:	xor    eax,0x3b29
	...
   14002d140:	outs   dx,BYTE PTR ds:[rsi]
   14002d141:	jo     0x14002d1af
   14002d143:	jne    0x14002d1b7
   14002d145:	(bad)  
   14002d146:	ins    BYTE PTR es:[rdi],dx
   14002d147:	jae    0x14002d186
   14002d149:	xor    edi,DWORD PTR [rbx]
   14002d14b:	and    BYTE PTR [rax+0x6c],dh
   14002d14e:	jne    0x14002d1c2
   14002d150:	(bad)  
   14002d151:	ins    BYTE PTR es:[rdi],dx
   14002d152:	cmp    eax,0x3d3d6e28
   14002d157:	xor    DWORD PTR [rax],esp
   14002d159:	(bad)  
   14002d15a:	and    BYTE PTR [rax],dh
   14002d15c:	and    BYTE PTR [rdx],bh
   14002d15e:	and    BYTE PTR [rax],ch
   14002d160:	outs   dx,BYTE PTR ds:[rsi]
   14002d161:	and    eax,0x3d3d3031
   14002d166:	xor    al,0x20
   14002d168:	jl     0x14002d1e6
   14002d16a:	and    BYTE PTR [rsi+0x25],ch
   14002d16d:	xor    DWORD PTR [rax],esi
   14002d16f:	cmp    eax,0x7c20363d
   14002d174:	jl     0x14002d196
   14002d176:	outs   dx,BYTE PTR ds:[rsi]
   14002d177:	and    eax,0x3d3d3031
   14002d17c:	and    BYTE PTR [rcx],bh
   14002d17e:	sub    DWORD PTR [rax],esp
   14002d180:	(bad)  
   14002d181:	and    BYTE PTR [rcx],dh
   14002d183:	and    BYTE PTR [rdx],bh
   14002d185:	and    BYTE PTR [rdx],dh
   14002d187:	sub    DWORD PTR [rbx],edi
   14002d189:	add    BYTE PTR [rax],al
   14002d18b:	add    BYTE PTR [rbx+0x2e],bl
   14002d18e:	cs cs pop rbp
   14002d191:	add    BYTE PTR [rax],al
   14002d193:	add    BYTE PTR [rbx+rsi*2+0x0],dh
   14002d197:	add    BYTE PTR [rbp+0x6e],dl
   14002d19a:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   14002d19e:	outs   dx,BYTE PTR ds:[rsi]
   14002d19f:	and    BYTE PTR [rsi+0x6f],ah
   14002d1a2:	jb     0x14002d211
   14002d1a4:	(bad)  
   14002d1a5:	je     0x14002d1c7
   14002d1a7:	and    eax,0x6f662031
   14002d1ac:	jb     0x14002d1ce
   14002d1ae:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x3225
   14002d1b5:	add    BYTE PTR [rax],al
   14002d1b7:	add    BYTE PTR [rsi+0x6f],cl
   14002d1ba:	and    BYTE PTR [rdi+rbp*2+0x61],ch
   14002d1be:	fs gs jb 0x14002d1e2
   14002d1c2:	outs   dx,WORD PTR ds:[rsi]
   14002d1c4:	jb     0x14002d1e6
   14002d1c6:	outs   dx,WORD PTR ds:[rsi]
   14002d1c8:	jb     0x14002d237
   14002d1ca:	(bad)  
   14002d1cb:	je     0x14002d1ed
   14002d1cd:	and    eax,0x6f662031
   14002d1d2:	jne    0x14002d242
   14002d1d4:	add    BYTE PTR fs:[rax],al
   14002d1d7:	add    BYTE PTR [rbx+0x61],al
   14002d1da:	outs   dx,BYTE PTR ds:[rsi]
   14002d1db:	outs   dx,BYTE PTR ds:[rsi]
   14002d1dc:	outs   dx,DWORD PTR ds:[rsi]
   14002d1dd:	je     0x14002d1ff
   14002d1df:	outs   dx,DWORD PTR ds:[rsi]
   14002d1e0:	jo     0x14002d247
   14002d1e2:	outs   dx,BYTE PTR ds:[rsi]
   14002d1e3:	and    BYTE PTR [rbx+0x74],dh
   14002d1e6:	imul   ebp,DWORD PTR fs:[rsi+0x21],0x2528203f
   14002d1ee:	xor    DWORD PTR [rcx],ebp
	...
   14002d1f8:	rex.XB (bad) 
   14002d1fa:	outs   dx,BYTE PTR ds:[rsi]
   14002d1fb:	outs   dx,BYTE PTR ds:[rsi]
   14002d1fc:	outs   dx,DWORD PTR ds:[rsi]
   14002d1fd:	je     0x14002d21f
   14002d1ff:	outs   dx,DWORD PTR ds:[rsi]
   14002d200:	jo     0x14002d267
   14002d202:	outs   dx,BYTE PTR ds:[rsi]
   14002d203:	and    BYTE PTR [rip+0x25203a31],ah        # 0x165230c3a
   14002d209:	xor    al,BYTE PTR [rax]
   14002d20b:	add    BYTE PTR [rip+0x43000000],ch        # 0x18302d211
   14002d211:	(bad)  
   14002d212:	outs   dx,BYTE PTR ds:[rsi]
   14002d213:	outs   dx,BYTE PTR ds:[rsi]
   14002d214:	outs   dx,DWORD PTR ds:[rsi]
   14002d215:	je     0x14002d237
   14002d217:	jae    0x14002d27a
   14002d219:	jbe    0x14002d280
   14002d21b:	and    BYTE PTR [rip+0x69662031],ah        # 0x1a968f252
   14002d221:	ins    BYTE PTR es:[rdi],dx
   14002d222:	gs jae 0x14002d225
   14002d225:	add    BYTE PTR [rax],al
   14002d227:	add    BYTE PTR [rbx+0x61],al
   14002d22a:	outs   dx,BYTE PTR ds:[rsi]
   14002d22b:	outs   dx,BYTE PTR ds:[rsi]
   14002d22c:	outs   dx,DWORD PTR ds:[rsi]
   14002d22d:	je     0x14002d24f
   14002d22f:	outs   dx,DWORD PTR ds:[rsi]
   14002d230:	jo     0x14002d297
   14002d232:	outs   dx,BYTE PTR ds:[rsi]
   14002d233:	and    BYTE PTR [rbx+0x74],dh
   14002d236:	outs   dx,DWORD PTR fs:[rsi]
   14002d238:	jne    0x14002d2ae
   14002d23a:	and    DWORD PTR [rdi],edi
   14002d23c:	and    BYTE PTR [rax],ch
   14002d23e:	and    eax,0x2931
   14002d243:	add    BYTE PTR [rax],al
   14002d245:	add    BYTE PTR [rax],al
   14002d247:	add    BYTE PTR [rbx+0x61],al
   14002d24a:	outs   dx,BYTE PTR ds:[rsi]
   14002d24b:	outs   dx,BYTE PTR ds:[rsi]
   14002d24c:	outs   dx,DWORD PTR ds:[rsi]
   14002d24d:	je     0x14002d26f
   14002d24f:	movsxd esi,DWORD PTR [rdx+0x65]
   14002d252:	(bad)  
   14002d253:	je     0x14002d2ba
   14002d255:	and    BYTE PTR [rip+0x25203a31],ah        # 0x165230c8c
   14002d25b:	xor    al,BYTE PTR [rax]
   14002d25d:	add    BYTE PTR [rax],al
   14002d25f:	add    BYTE PTR [rbx+0x5c],bl
   14002d262:	cs pop rdi
   14002d264:	pop    rbp
   14002d265:	add    BYTE PTR [rax],al
   14002d267:	add    BYTE PTR [rdx],ch
   14002d269:	and    BYTE PTR [rbx+0x6f],al
   14002d26c:	ins    DWORD PTR es:[rdi],dx
   14002d26d:	ins    DWORD PTR es:[rdi],dx
   14002d26e:	outs   dx,BYTE PTR gs:[rsi]
   14002d270:	je     0x14002d2ac
   14002d272:	and    BYTE PTR [rax],al
   14002d274:	add    BYTE PTR [rax],al
   14002d276:	add    BYTE PTR [rax],al
   14002d278:	or     ch,BYTE PTR [rdx]
   14002d27a:	and    BYTE PTR [rbx+0x6f],dl
   14002d27d:	jne    0x14002d2f1
   14002d27f:	movsxd esp,DWORD PTR [rbp+0x3a]
   14002d282:	and    BYTE PTR [rax],al
   14002d284:	add    BYTE PTR [rax],al
   14002d286:	add    BYTE PTR [rax],al
   14002d288:	or     ch,BYTE PTR [rdx]
   14002d28a:	and    BYTE PTR [rbx+0x6f],al
   14002d28d:	outs   dx,BYTE PTR ds:[rsi]
   14002d28e:	je     0x14002d2f5
   14002d290:	js     0x14002d306
   14002d292:	cmp    ah,BYTE PTR [rax]
   14002d294:	add    BYTE PTR [rax],al
   14002d296:	add    BYTE PTR [rax],al
   14002d298:	or     ch,BYTE PTR [rdx]
   14002d29a:	and    BYTE PTR [rcx+0x44],cl
   14002d29d:	cmp    ah,BYTE PTR [rax]
   14002d29f:	add    BYTE PTR [rdi],ah
   14002d2a1:	cmp    cl,BYTE PTR [rdx]
   14002d2a3:	add    BYTE PTR [rax],al
   14002d2a5:	add    BYTE PTR [rax],al
   14002d2a7:	add    BYTE PTR [rdi],ah
   14002d2a9:	or     ch,BYTE PTR [rax]
   14002d2ab:	je     0x14002d31f
   14002d2ad:	jns    0x14002d2cf
   14002d2af:	sub    eax,0x62726576
   14002d2b4:	outs   dx,DWORD PTR ds:[rsi]
   14002d2b5:	jae    0x14002d31c
   14002d2b7:	and    BYTE PTR [rsi+0x6f],ah
   14002d2ba:	jb     0x14002d2dc
   14002d2bc:	ins    DWORD PTR es:[rdi],dx
   14002d2bd:	outs   dx,DWORD PTR ds:[rsi]
   14002d2be:	jb     0x14002d325
   14002d2c0:	and    BYTE PTR [rcx+0x6e],ch
   14002d2c3:	outs   dx,WORD PTR ds:[rsi]
   14002d2c5:	sub    DWORD PTR [rsi],ebp
   14002d2c7:	or     al,BYTE PTR [rax]
   14002d2c9:	add    BYTE PTR [rax],al
   14002d2cb:	add    BYTE PTR [rax],al
   14002d2cd:	add    BYTE PTR [rax],al
   14002d2cf:	add    BYTE PTR [rdi+0x61],dl
   14002d2d2:	jb     0x14002d342
   14002d2d4:	imul   ebp,DWORD PTR [rsi+0x67],0x7264203a
   14002d2db:	outs   dx,DWORD PTR ds:[rsi]
   14002d2dc:	jo     0x14002d34e
   14002d2de:	imul   ebp,DWORD PTR [rsi+0x67],0x70756420
   14002d2e5:	ins    BYTE PTR es:[rdi],dx
   14002d2e6:	imul   esp,DWORD PTR [rbx+0x61],0x6d206574
   14002d2ed:	gs jae 0x14002d363
   14002d2f0:	(bad)  
   14002d2f1:	addr32 gs jae 0x14002d315
   14002d2f5:	imul   ebp,DWORD PTR [rsi+0x20],0x27
   14002d2fc:	add    BYTE PTR [rax],al
   14002d2fe:	add    BYTE PTR [rax],al
   14002d300:	push   rdx
   14002d301:	gs ins DWORD PTR es:[rdi],dx
   14002d303:	outs   dx,DWORD PTR ds:[rsi]
   14002d304:	jbe    0x14002d36b
   14002d306:	and    BYTE PTR fs:[rax+0x6c],dh
   14002d30a:	jne    0x14002d37e
   14002d30c:	(bad)  
   14002d30d:	ins    BYTE PTR es:[rdi],dx
   14002d30e:	and    BYTE PTR [rsi+0x6f],ah
   14002d311:	jb     0x14002d380
   14002d313:	jae    0x14002d335
   14002d315:	(bad)  
   14002d316:	jae    0x14002d338
   14002d318:	je     0x14002d382
   14002d31a:	and    BYTE PTR gs:[rcx+riz*2+0x72],dh
   14002d31f:	addr32 gs je 0x14002d343
   14002d323:	ins    BYTE PTR es:[rdi],dx
   14002d324:	(bad)  
   14002d325:	outs   dx,BYTE PTR ds:[rsi]
   14002d326:	addr32 jne 0x14002d38a
   14002d329:	and    BYTE PTR gs:[eax+0x61],ch
   14002d32e:	jae    0x14002d350
   14002d330:	ins    BYTE PTR es:[rdi],dx
   14002d331:	gs jae 0x14002d3a7
   14002d334:	and    BYTE PTR [rsi+0x6f],ah
   14002d337:	jb     0x14002d3a6
   14002d339:	jae    0x14002d369
   14002d33b:	or     cl,BYTE PTR [rcx+0x66]
   14002d33e:	and    BYTE PTR [rax+rbp*2+0x69],dh
   14002d342:	jae    0x14002d364
   14002d344:	jae    0x14002d3b5
   14002d346:	jne    0x14002d3b6
   14002d348:	fs jae 0x14002d36b
   14002d34b:	ja     0x14002d3bf
   14002d34d:	outs   dx,DWORD PTR ds:[rsi]
   14002d34e:	outs   dx,BYTE PTR ds:[rsi]
   14002d34f:	addr32 sub al,0x20
   14002d352:	jo     0x14002d3c3
   14002d354:	jae    0x14002d3c9
   14002d356:	imul   esp,DWORD PTR [rdx+0x6c],0x68742079
   14002d35d:	and    BYTE PTR gs:[rcx+riz*2+0x72],dh
   14002d362:	addr32 gs je 0x14002d386
   14002d366:	ins    BYTE PTR es:[rdi],dx
   14002d367:	(bad)  
   14002d368:	outs   dx,BYTE PTR ds:[rsi]
   14002d369:	addr32 jne 0x14002d3cd
   14002d36c:	and    BYTE PTR gs:[ecx+0x73],ch
   14002d371:	and    BYTE PTR [rsi+0x6f],ch
   14002d374:	je     0x14002d396
   14002d376:	jae    0x14002d3dd
   14002d378:	je     0x14002d39a
   14002d37a:	outs   dx,DWORD PTR ds:[rsi]
   14002d37b:	jb     0x14002d39d
   14002d37d:	jb     0x14002d3e4
   14002d37f:	movsxd ebp,DWORD PTR [rdi+0x67]
   14002d382:	outs   dx,BYTE PTR ds:[rsi]
   14002d383:	imul   edi,DWORD PTR [rdx+0x65],0x2e64
   14002d38a:	add    BYTE PTR [rax],al
   14002d38c:	cs push 0x75
   14002d38f:	imul   eax,DWORD PTR [rax],0x2e000000
   14002d395:	jne    0x14002d400
   14002d397:	add    BYTE PTR [rax+riz*1],ch
   14002d39a:	add    BYTE PTR [rax],al
   14002d39c:	add    BYTE PTR [rax],al
   14002d39e:	add    BYTE PTR [rax],al
   14002d3a0:	cmp    al,0xb8
   14002d3a2:	fs sbb dl,cl
   14002d3a5:	out    dx,eax
   14002d3a6:	pushf  
   14002d3a7:	xchg   ebp,eax
   14002d3a8:	int    0x21
   14002d3aa:	sbb    al,0xbf
   14002d3ac:	(bad)  
   14002d3ad:	movabs eax,ds:0x6975676e694cddbd
   14002d3b6:	jae    0x14002d42c
   14002d3b8:	add    BYTE PTR [rax],al
   14002d3ba:	add    BYTE PTR [rax],al
   14002d3bc:	push   rbp
   14002d3bd:	push   rsp
   14002d3be:	rex.RX sub eax,0x38
   14002d3c4:	add    BYTE PTR [rax],al
   14002d3c6:	add    BYTE PTR [rax],al
   14002d3c8:	push   rcx
   14002d3c9:	rex.WRB sub rax,0x6d726f46
   14002d3cf:	(bad)  
   14002d3d0:	je     0x14002d3f2
   14002d3d2:	gs jb  0x14002d447
   14002d3d5:	outs   dx,DWORD PTR ds:[rsi]
   14002d3d6:	jb     0x14002d412
   14002d3d8:	and    BYTE PTR [rbp+0x61],ch
   14002d3db:	imul   esp,DWORD PTR [ebx+0x20],0x6b72616d
   14002d3e3:	gs jb  0x14002d406
   14002d3e6:	ins    DWORD PTR es:[rdi],dx
   14002d3e7:	imul   esi,DWORD PTR [rbx+0x73],0x676e69
   14002d3ee:	add    BYTE PTR [rax],al
   14002d3f0:	rex.XB (bad) 
   14002d3f2:	outs   dx,BYTE PTR ds:[rsi]
   14002d3f3:	outs   dx,BYTE PTR ds:[rsi]
   14002d3f4:	outs   dx,DWORD PTR ds:[rsi]
   14002d3f5:	je     0x14002d417
   14002d3f7:	jb     0x14002d45e
   14002d3f9:	(bad)  
   14002d3fa:	and    BYTE PTR fs:[rsi+0x69],ah
   14002d3fe:	ins    BYTE PTR es:[rdi],dx
   14002d3ff:	and    BYTE PTR gs:[rdi+0x69],dh
   14002d403:	je     0x14002d46d
   14002d405:	and    BYTE PTR [rbp+0x54],dl
   14002d408:	rex.RX sub eax,0x6f632038
   14002d40e:	fs movsxd eax,DWORD PTR gs:[rax]
   14002d412:	add    BYTE PTR [rax],al
   14002d414:	and    eax,0x5200006e
   14002d419:	gs ins BYTE PTR es:[rdi],dx
   14002d41b:	gs (bad) 
   14002d41d:	jae    0x14002d484
   14002d41f:	jb     0x14002d45b
   14002d421:	cmp    dh,BYTE PTR [rbx+0x71]
   14002d424:	jne    0x14002d48b
   14002d426:	gs jp  0x14002d48e
   14002d429:	cmp    ah,BYTE PTR [rax]
   14002d42b:	push   rsp
   14002d42c:	outs   dx,DWORD PTR ds:[rsi]
   14002d42d:	outs   dx,DWORD PTR ds:[rsi]
   14002d42e:	and    BYTE PTR [rbp+0x61],ch
   14002d431:	outs   dx,BYTE PTR ds:[rsi]
   14002d432:	jns    0x14002d454
   14002d434:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14002d437:	je     0x14002d49e
   14002d439:	js     0x14002d4af
   14002d43b:	jae    0x14002d43d
   14002d43d:	add    BYTE PTR [rax],al
   14002d43f:	add    BYTE PTR [rax],ah
   14002d441:	and    BYTE PTR [rax],ah
   14002d443:	and    BYTE PTR [rcx+0x67],cl
   14002d446:	outs   dx,BYTE PTR ds:[rsi]
   14002d447:	outs   dx,DWORD PTR ds:[rsi]
   14002d448:	jb     0x14002d4af
   14002d44a:	and    BYTE PTR fs:[rip+0x6e75206e],ah        # 0x1ae77f4bf
   14002d451:	je     0x14002d4c5
   14002d453:	(bad)  
   14002d454:	outs   dx,BYTE PTR ds:[rsi]
   14002d455:	jae    0x14002d4c3
   14002d457:	(bad)  
   14002d458:	je     0x14002d4bf
   14002d45a:	and    BYTE PTR fs:[rbx+0x6f],dh
   14002d45e:	jne    0x14002d4d2
   14002d460:	movsxd esp,DWORD PTR [rbp+0x20]
   14002d463:	je     0x14002d4ca
   14002d465:	js     0x14002d4db
   14002d467:	sub    BYTE PTR [rbx+0x29],dh
   14002d46a:	add    BYTE PTR [rax],al
   14002d46c:	add    BYTE PTR [rax],al
   14002d46e:	add    BYTE PTR [rax],al
   14002d470:	and    BYTE PTR [rax],ah
   14002d472:	and    BYTE PTR [rax],ah
   14002d474:	rex.RXB
   14002d475:	outs   dx,BYTE PTR gs:[rsi]
   14002d477:	gs jb  0x14002d4db
   14002d47a:	je     0x14002d4e1
   14002d47c:	and    BYTE PTR fs:[rip+0x7274206e],ah        # 0x1b276f4f1
   14002d483:	(bad)  
   14002d484:	outs   dx,BYTE PTR ds:[rsi]
   14002d485:	jae    0x14002d4f3
   14002d487:	(bad)  
   14002d488:	je     0x14002d4f3
   14002d48a:	outs   dx,DWORD PTR ds:[rsi]
   14002d48b:	outs   dx,BYTE PTR ds:[rsi]
   14002d48c:	sub    BYTE PTR [rbx+0x29],dh
   14002d48f:	and    BYTE PTR [rax],ch
   14002d491:	and    eax,0x69662031
   14002d496:	outs   dx,BYTE PTR ds:[rsi]
   14002d497:	imul   esi,DWORD PTR [rbx+0x68],0x61206465
   14002d49e:	outs   dx,BYTE PTR ds:[rsi]
   14002d49f:	and    BYTE PTR fs:[rip+0x6e752032],ah        # 0x1ae77f4d8
   14002d4a6:	imul   bp,WORD PTR [rsi+0x69],0x6873
   14002d4ac:	gs sub DWORD PTR fs:[rax],eax
   14002d4b0:	rex.RB js 0x14002d516
   14002d4b3:	gs jae 0x14002d529
   14002d4b6:	and    BYTE PTR [rbx+0x6f],ah
   14002d4b9:	outs   dx,BYTE PTR ds:[rsi]
   14002d4ba:	je     0x14002d521
   14002d4bc:	js     0x14002d532
   14002d4be:	(bad)  
   14002d4bf:	imul   esi,DWORD PTR fs:[rbx+0x61],0x6769626d
   14002d4c7:	jne    0x14002d52a
   14002d4c9:	je     0x14002d534
   14002d4cb:	outs   dx,DWORD PTR ds:[rsi]
   14002d4cc:	outs   dx,BYTE PTR ds:[rsi]
   14002d4cd:	and    BYTE PTR [rdx+rsi*2+0x6f],ah
   14002d4d1:	jo     0x14002d543
   14002d4d3:	gs and BYTE PTR fs:[rsi+0x72],ah
   14002d4d8:	outs   dx,DWORD PTR ds:[rsi]
   14002d4d9:	ins    DWORD PTR es:[rdi],dx
   14002d4da:	and    BYTE PTR [rip+0x656d206e],ah        # 0x1a56ff54e
   14002d4e0:	jae    0x14002d555
   14002d4e2:	(bad)  
   14002d4e3:	sub    BYTE PTR gs:[ebx+0x29],dh
   14002d4e8:	add    BYTE PTR cs:[rax],al
   14002d4eb:	add    BYTE PTR [rax],al
   14002d4ed:	add    BYTE PTR [rax],al
   14002d4ef:	add    BYTE PTR [rdx+rdx*2+0x65],cl
   14002d4f3:	ins    BYTE PTR es:[rdi],dx
   14002d4f4:	gs (bad) 
   14002d4f6:	jae    0x14002d55d
	...
   14002d500:	rex.R jb 0x14002d572
   14002d503:	jo     0x14002d575
   14002d505:	gs and BYTE PTR fs:[rip+0x656d206e],ah        # 0x1a56ff57b
   14002d50d:	jae    0x14002d582
   14002d50f:	(bad)  
   14002d510:	sub    BYTE PTR gs:[ebx+0x29],dh
   14002d515:	and    BYTE PTR [rdi+0x68],dh
   14002d518:	imul   esp,DWORD PTR [rbx+0x68],0x64616820
   14002d51f:	and    BYTE PTR [rsi+0x6f],ch
   14002d522:	and    BYTE PTR [rcx+0x44],cl
   14002d525:	add    BYTE PTR cs:[rax],al
   14002d528:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14002d52a:	ins    DWORD PTR es:[rdi],dx
   14002d52b:	jo     0x14002d596
   14002d52d:	ins    BYTE PTR es:[rdi],dx
   14002d52e:	gs and BYTE PTR fs:[rcx+0x74],dl
   14002d533:	and    BYTE PTR [rdx+rsi*2+0x61],dh
   14002d537:	outs   dx,BYTE PTR ds:[rsi]
   14002d538:	jae    0x14002d5a6
   14002d53a:	(bad)  
   14002d53b:	je     0x14002d5a6
   14002d53d:	outs   dx,DWORD PTR ds:[rsi]
   14002d53e:	outs   dx,BYTE PTR ds:[rsi]
   14002d53f:	jae    0x14002d541
   14002d541:	add    BYTE PTR [rax],al
   14002d543:	add    BYTE PTR [rcx+0x6d],dh
   14002d546:	add    BYTE PTR [rax],al
   14002d548:	es jno 0x14002d5c0
   14002d54b:	outs   dx,DWORD PTR ds:[rsi]
   14002d54c:	je     0x14002d589
   14002d54e:	add    BYTE PTR [rax],al
   14002d550:	and    esp,DWORD PTR es:[rip+0x3b31]        # 0x140031088
   14002d557:	add    BYTE PTR [rsi],ah
   14002d559:	(bad)  
   14002d55a:	ins    DWORD PTR es:[rdi],dx
   14002d55b:	jo     0x14002d598
   14002d55d:	add    BYTE PTR [rax],al
   14002d55f:	add    BYTE PTR [rsi],ah
   14002d561:	ins    BYTE PTR es:[rdi],dx
   14002d562:	je     0x14002d59f
   14002d564:	add    BYTE PTR [rax],al
   14002d566:	add    BYTE PTR [rax],al
   14002d568:	es (bad) 
   14002d56a:	jo     0x14002d5db
   14002d56c:	jae    0x14002d5a9
   14002d56e:	add    BYTE PTR [rax],al
   14002d570:	es addr32 je 0x14002d5af
   14002d574:	add    BYTE PTR [rax],al
   14002d576:	add    BYTE PTR [rax],al
   14002d578:	jae    0x14002d5e9
   14002d57a:	jne    0x14002d5ee
   14002d57c:	movsxd esp,DWORD PTR [rbp+0x6c]
   14002d57f:	(bad)  
   14002d580:	outs   dx,BYTE PTR ds:[rsi]
   14002d581:	addr32 jne 0x14002d5e5
   14002d584:	add    BYTE PTR gs:[eax],al
   14002d588:	ins    BYTE PTR es:[rdi],dx
   14002d589:	(bad)  
   14002d58a:	outs   dx,BYTE PTR ds:[rsi]
   14002d58b:	addr32 jne 0x14002d5ef
   14002d58e:	add    BYTE PTR gs:[eax],al
   14002d592:	add    BYTE PTR [rax],al
   14002d594:	jo     0x14002d5fe
   14002d596:	jb     0x14002d5f9
   14002d598:	jae    0x14002d5ff
   14002d59a:	add    BYTE PTR [rax],al
   14002d59c:	push   rcx
   14002d59d:	push   rax
   14002d59e:	rex.W add BYTE PTR [rbx+0x6f],sil
   14002d5a2:	jne    0x14002d616
   14002d5a4:	movsxd esp,DWORD PTR [rbp+0x0]
   14002d5a7:	add    BYTE PTR [rcx+riz*2+0x72],dh
   14002d5ab:	addr32 gs je 0x14002d5af
   14002d5af:	add    BYTE PTR [rbp+riz*2+0x66],ah
   14002d5b3:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
   14002d5ba:	add    BYTE PTR [rax],al
   14002d5bc:	add    BYTE PTR [rax],al
   14002d5be:	add    BYTE PTR [rax],al
   14002d5c0:	cmp    al,0x2f
   14002d5c2:	push   rcx
   14002d5c3:	push   rax
   14002d5c4:	rex.W
   14002d5c5:	or     al,BYTE PTR ds:[rax]
   14002d5c8:	cmp    al,0x2f
   14002d5ca:	jo     0x14002d634
   14002d5cc:	jb     0x14002d62f
   14002d5ce:	jae    0x14002d635
   14002d5d0:	or     al,BYTE PTR ds:[rax]
   14002d5d3:	add    BYTE PTR [rax],al
   14002d5d5:	add    BYTE PTR [rax],al
   14002d5d7:	add    BYTE PTR [rdi+rbp*1],bh
   14002d5da:	fs imul bp,WORD PTR gs:[rsi+0x69],0x6974
   14002d5e2:	outs   dx,DWORD PTR ds:[rsi]
   14002d5e3:	outs   dx,BYTE PTR ds:[rsi]
   14002d5e4:	or     al,BYTE PTR ds:[rax]
   14002d5e7:	add    BYTE PTR [rax],ah
   14002d5e9:	and    BYTE PTR [rax],ah
   14002d5eb:	and    BYTE PTR [rsp+riz*2],bh
   14002d5ee:	imul   bp,WORD PTR gs:[rsi+0x69],0x6974
   14002d5f5:	outs   dx,DWORD PTR ds:[rsi]
   14002d5f6:	outs   dx,BYTE PTR ds:[rsi]
   14002d5f7:	add    BYTE PTR ds:[rax],al
   14002d5fa:	add    BYTE PTR [rax],al
   14002d5fc:	add    BYTE PTR [rax],al
   14002d5fe:	add    BYTE PTR [rax],al
   14002d600:	cmp    al,0x2f
   14002d602:	je     0x14002d665
   14002d604:	jb     0x14002d66d
   14002d606:	gs je  0x14002d647
   14002d609:	or     al,BYTE PTR [rax]
   14002d60b:	add    BYTE PTR [rax],al
   14002d60d:	add    BYTE PTR [rax],al
   14002d60f:	add    BYTE PTR [rax],ah
   14002d611:	and    BYTE PTR [rax],ah
   14002d613:	and    BYTE PTR [rsp+rsi*2],bh
   14002d616:	(bad)  
   14002d617:	jb     0x14002d680
   14002d619:	gs je  0x14002d65a
   14002d61c:	add    BYTE PTR [rax],al
   14002d61e:	add    BYTE PTR [rax],al
   14002d620:	add    BYTE PTR [rax],al
   14002d623:	add    BYTE PTR [rax],al
   14002d625:	add    BYTE PTR [rax],al
   14002d627:	add    BYTE PTR [rdi+rbp*1],bh
   14002d62a:	jae    0x14002d69b
   14002d62c:	jne    0x14002d6a0
   14002d62e:	movsxd esp,DWORD PTR [rbp+0x3e]
   14002d631:	or     al,BYTE PTR [rax]
   14002d633:	add    BYTE PTR [rax],al
   14002d635:	add    BYTE PTR [rax],al
   14002d637:	add    BYTE PTR [rax],ah
   14002d639:	and    BYTE PTR [rax],ah
   14002d63b:	and    BYTE PTR [rbx+rsi*2],bh
   14002d63e:	outs   dx,DWORD PTR ds:[rsi]
   14002d63f:	jne    0x14002d6b3
   14002d641:	movsxd esp,DWORD PTR [rbp+0x3e]
   14002d644:	add    BYTE PTR [rax],al
   14002d646:	add    BYTE PTR [rax],al
   14002d648:	cmp    al,0x70
   14002d64a:	push   0x65736172
   14002d64f:	or     al,BYTE PTR ds:[rax]
   14002d652:	add    BYTE PTR [rax],al
   14002d654:	or     al,BYTE PTR ds:[rax]
   14002d657:	add    BYTE PTR [rax],ah
   14002d659:	jae    0x14002d6ca
   14002d65b:	jne    0x14002d6cf
   14002d65d:	movsxd esp,DWORD PTR [rbp+0x6c]
   14002d660:	(bad)  
   14002d661:	outs   dx,BYTE PTR ds:[rsi]
   14002d662:	addr32 jne 0x14002d6c6
   14002d665:	addr32 gs cmp eax,0x22
   14002d66c:	and    al,BYTE PTR [rax]
   14002d66e:	add    BYTE PTR [rax],al
   14002d670:	and    BYTE PTR [rcx+riz*2+0x6e],ch
   14002d674:	addr32 jne 0x14002d6d8
   14002d677:	addr32 gs cmp eax,0x430022
   14002d67e:	add    BYTE PTR [rax],al
   14002d680:	cmp    al,0x21
   14002d682:	rex.R
   14002d683:	rex.WRXB
   14002d684:	rex.XB push r12
   14002d686:	pop    rcx
   14002d687:	push   rax
   14002d688:	and    BYTE PTR [r9+0x50],r10b
   14002d68c:	rex.W
   14002d68d:	or     bh,BYTE PTR ds:[rcx+rdx*2]
   14002d691:	push   rax
   14002d692:	rex.W add BYTE PTR [rax],al
   14002d695:	add    BYTE PTR [rax],al
   14002d697:	add    BYTE PTR [rcx+0x74],dl
   14002d69a:	and    BYTE PTR [rcx+rbp*2+0x6e],cl
   14002d69e:	addr32 jne 0x14002d70a
   14002d6a1:	jae    0x14002d717
   14002d6a3:	and    BYTE PTR [rdi],ah
   14002d6a5:	push   rax
   14002d6a6:	push   0x65736172
   14002d6ab:	and    BYTE PTR [rdx+0x6f],al
   14002d6ae:	outs   dx,DWORD PTR ds:[rsi]
   14002d6af:	imul   esp,DWORD PTR [rdi],0x0
   14002d6b2:	add    BYTE PTR [rax],al
   14002d6b4:	jno    0x14002d726
   14002d6b6:	push   0x67736d00
   14002d6bb:	jae    0x14002d731
   14002d6bd:	jb     0x14002d6bf
   14002d6bf:	add    BYTE PTR [rbx],ah
   14002d6c1:	jle    0x14002d6e3
   14002d6c3:	ins    DWORD PTR es:[rdi],dx
   14002d6c4:	jae    0x14002d72d
   14002d6c6:	jae    0x14002d73c
   14002d6c8:	jb     0x14002d6ca
   14002d6ca:	add    BYTE PTR [rax],al
   14002d6cc:	jle    0x14002d74a
   14002d6ce:	add    BYTE PTR [rax],al
   14002d6d0:	jle    0x14002d750
   14002d6d2:	add    BYTE PTR [rax],al
   14002d6d4:	and    eax,DWORD PTR [rax]
   14002d6d6:	add    BYTE PTR [rax],al
   14002d6d8:	jo     0x14002d749
   14002d6da:	sub    eax,0x64616568
   14002d6df:	gs jb  0x14002d70f
   14002d6e2:	add    BYTE PTR [rax],al
   14002d6e4:	add    BYTE PTR [rax],al
   14002d6e6:	add    BYTE PTR [rax],al
   14002d6e8:	push   rax
   14002d6e9:	rex.WRXB and BYTE PTR [r8+0x61],r14b
   14002d6ed:	jb     0x14002d762
   14002d6ef:	imul   ebp,DWORD PTR [rsi+0x67],0x72726520
   14002d6f6:	outs   dx,DWORD PTR ds:[rsi]
   14002d6f7:	jb     0x14002d733
   14002d6f9:	and    BYTE PTR [rax+0x72],dh
   14002d6fc:	gs ins DWORD PTR es:[rdi],dx
   14002d6fe:	(bad)  
   14002d6ff:	je     0x14002d776
   14002d701:	jb     0x14002d768
   14002d703:	and    BYTE PTR [rbp+0x6e],ah
   14002d706:	and    BYTE PTR fs:[rdi+0x66],ch
   14002d70a:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
   14002d70e:	and    BYTE PTR gs:[rip+0x2e31],ah        # 0x140030546
   14002d715:	add    BYTE PTR [rax],al
   14002d717:	add    BYTE PTR [rax+0x4f],dl
   14002d71a:	and    BYTE PTR [rax+0x61],dh
   14002d71d:	jb     0x14002d792
   14002d71f:	imul   ebp,DWORD PTR [rsi+0x67],0x72726520
   14002d726:	outs   dx,DWORD PTR ds:[rsi]
   14002d727:	jb     0x14002d763
   14002d729:	and    BYTE PTR [rcx+0x6e],ch
   14002d72c:	jbe    0x14002d78f
   14002d72e:	ins    BYTE PTR es:[rdi],dx
   14002d72f:	imul   esp,DWORD PTR [rax+riz*1+0x65],0x70616373
   14002d737:	and    BYTE PTR gs:[rdi],ah
   14002d73a:	pop    rsp
   14002d73b:	and    eax,0x28202731
   14002d740:	ins    BYTE PTR es:[rdi],dx
   14002d741:	imul   ebp,DWORD PTR [rsi+0x65],0x29322520
   14002d748:	add    BYTE PTR cs:[rax],al
   14002d74b:	add    BYTE PTR [rax],al
   14002d74d:	add    BYTE PTR [rax],al
   14002d74f:	add    BYTE PTR [rax+0x4f],dl
   14002d752:	and    BYTE PTR [rax+0x61],dh
   14002d755:	jb     0x14002d7ca
   14002d757:	imul   ebp,DWORD PTR [rsi+0x67],0x72726520
   14002d75e:	outs   dx,DWORD PTR ds:[rsi]
   14002d75f:	jb     0x14002d79b
   14002d761:	and    BYTE PTR [rbp+0x78],ah
   14002d764:	je     0x14002d7d8
   14002d766:	(bad)  
   14002d767:	and    BYTE PTR [rbx+0x68],ah
   14002d76a:	(bad)  
   14002d76b:	jb     0x14002d7ce
   14002d76d:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
   14002d771:	jae    0x14002d793
   14002d773:	outs   dx,DWORD PTR ds:[rsi]
   14002d774:	outs   dx,BYTE PTR ds:[rsi]
   14002d775:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
   14002d779:	and    BYTE PTR gs:[rip+0x2e31],ah        # 0x1400305b1
   14002d780:	and    BYTE PTR [rdx],ah
   14002d782:	add    BYTE PTR [rax],al
   14002d784:	and    cl,BYTE PTR [rdx]
   14002d786:	add    BYTE PTR [rax],al
   14002d788:	pop    rsp
   14002d789:	pop    rsp
   14002d78a:	add    BYTE PTR [rax],al
   14002d78c:	pop    rsp
   14002d78d:	and    al,BYTE PTR [rax]
   14002d78f:	add    BYTE PTR [rsi+riz*2+0x0],bl
   14002d793:	add    BYTE PTR [rdx+riz*2+0x0],bl
   14002d797:	add    BYTE PTR [rcx+riz*2+0x0],bl
   14002d79b:	add    BYTE PTR [rsi+rsi*2+0x0],bl
   14002d79f:	add    BYTE PTR [rsp+rsi*2+0x0],bl
   14002d7a3:	add    BYTE PTR [rsi+rbp*2+0x0],bl
   14002d7a7:	add    BYTE PTR [rdx+rsi*2+0x0],bl
   14002d7ab:	add    BYTE PTR [rdx],ah
   14002d7ad:	and    al,BYTE PTR [rax]
   14002d7af:	add    BYTE PTR [rax+rdi*2+0x0],bl
   14002d7b3:	add    BYTE PTR [rax],al
   14002d7b5:	add    BYTE PTR [rax],al
   14002d7b7:	add    BYTE PTR [rax+0x6f],dh
   14002d7ba:	sub    eax,0x65666572
   14002d7bf:	jb     0x14002d826
   14002d7c1:	outs   dx,BYTE PTR ds:[rsi]
   14002d7c2:	movsxd esp,DWORD PTR [rbp+0x73]
   14002d7c5:	add    BYTE PTR [rax],al
   14002d7c7:	add    BYTE PTR [rbx+rsi*2+0x0],bl
   14002d7cb:	add    BYTE PTR [rax],al
   14002d7cd:	add    BYTE PTR [rax],al
   14002d7cf:	add    BYTE PTR [rax+0x6f],dh
   14002d7d2:	sub    eax,0x64616568
   14002d7d7:	gs jb  0x14002d839
   14002d7da:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14002d7dd:	ins    DWORD PTR es:[rdi],dx
   14002d7de:	outs   dx,BYTE PTR gs:[rsi]
   14002d7e0:	je     0x14002d7e2
   14002d7e2:	add    BYTE PTR [rax],al
   14002d7e4:	add    BYTE PTR [rax],al
   14002d7e6:	add    BYTE PTR [rax],al
   14002d7e8:	jo     0x14002d859
   14002d7ea:	sub    eax,0x64616568
   14002d7ef:	gs jb  0x14002d865
   14002d7f2:	add    BYTE PTR [rax],al
   14002d7f4:	add    BYTE PTR [rax],al
   14002d7f6:	add    BYTE PTR [rax],al
   14002d7f8:	xor    cl,bl
   14002d7fa:	add    al,BYTE PTR [rax+0x1]
   14002d7fd:	add    BYTE PTR [rax],al
   14002d7ff:	add    BYTE PTR [rax],ah
   14002d801:	fld    DWORD PTR [rdx]
   14002d803:	rex add DWORD PTR [rax],eax
   14002d806:	add    BYTE PTR [rax],al
   14002d808:	movabs al,ds:0x40000000014002d8
   14002d811:	fld    DWORD PTR [rdx]
   14002d813:	rex add DWORD PTR [rax],eax
   14002d816:	add    BYTE PTR [rax],al
   14002d818:	sbb    cl,0x2
   14002d81b:	rex add DWORD PTR [rax],eax
   14002d81e:	add    BYTE PTR [rax],al
   14002d820:	push   0x14002d9
   14002d825:	add    BYTE PTR [rax],al
   14002d827:	add    BYTE PTR [rax-0x27],bl
   14002d82a:	add    al,BYTE PTR [rax+0x1]
   14002d82d:	add    BYTE PTR [rax],al
   14002d82f:	add    BYTE PTR [rbp+0x6e],dl
   14002d832:	gs js  0x14002d8a5
   14002d835:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   14002d83a:	and    BYTE PTR [rax+0x4f],dl
   14002d83d:	and    BYTE PTR [rax+0x65],ch
   14002d840:	(bad)  
   14002d841:	fs gs jb 0x14002d865
   14002d845:	outs   dx,WORD PTR ds:[rsi]
   14002d847:	jb     0x14002d8b6
   14002d849:	(bad)  
   14002d84a:	je     0x14002d86c
   14002d84c:	(bad)  
   14002d84d:	and    eax,0x2731
   14002d852:	add    BYTE PTR [rax],al
   14002d854:	add    BYTE PTR [rax],al
   14002d856:	add    BYTE PTR [rax],al
   14002d858:	pop    rax
   14002d859:	sub    eax,0x67726956
   14002d85e:	imul   ebp,DWORD PTR [rsi+0x2d],0x64616548
   14002d865:	gs jb  0x14002d868
   14002d868:	push   rbp
   14002d869:	outs   dx,BYTE PTR ds:[rsi]
   14002d86a:	gs js  0x14002d8dd
   14002d86d:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   14002d872:	and    BYTE PTR [rbx+0x6f],al
   14002d875:	outs   dx,BYTE PTR ds:[rsi]
   14002d876:	je     0x14002d8dd
   14002d878:	outs   dx,BYTE PTR ds:[rsi]
   14002d879:	je     0x14002d8a8
   14002d87b:	push   rsp
   14002d87c:	jb     0x14002d8df
   14002d87e:	outs   dx,BYTE PTR ds:[rsi]
   14002d87f:	jae    0x14002d8e7
   14002d881:	gs jb  0x14002d8b1
   14002d884:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14002d886:	movsxd ebp,DWORD PTR [rdi+0x64]
   14002d889:	imul   ebp,DWORD PTR [rsi+0x67],0x31252720
   14002d890:	(bad)  
   14002d891:	add    BYTE PTR [rax],al
   14002d893:	add    BYTE PTR [rax],bh
   14002d895:	(bad)  
   14002d896:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x0
   14002d89e:	add    BYTE PTR [rax],al
   14002d8a0:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14002d8a2:	outs   dx,BYTE PTR ds:[rsi]
   14002d8a3:	je     0x14002d90a
   14002d8a5:	outs   dx,BYTE PTR ds:[rsi]
   14002d8a6:	je     0x14002d8d5
   14002d8a8:	push   rsp
   14002d8a9:	jb     0x14002d90c
   14002d8ab:	outs   dx,BYTE PTR ds:[rsi]
   14002d8ac:	jae    0x14002d914
   14002d8ae:	gs jb  0x14002d8de
   14002d8b1:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14002d8b3:	movsxd ebp,DWORD PTR [rdi+0x64]
   14002d8b6:	imul   ebp,DWORD PTR [rsi+0x67],0x0
   14002d8bd:	add    BYTE PTR [rax],al
   14002d8bf:	add    BYTE PTR [rbp+0x6e],dl
   14002d8c2:	jae    0x14002d939
   14002d8c4:	jo     0x14002d936
   14002d8c6:	outs   dx,DWORD PTR ds:[rsi]
   14002d8c7:	jb     0x14002d93d
   14002d8c9:	gs and BYTE PTR fs:[rbx+0x6f],ah
   14002d8ce:	fs movsxd esp,DWORD PTR gs:[rax]
   14002d8d2:	(bad)  
   14002d8d3:	and    eax,0x2731
   14002d8d8:	ins    BYTE PTR es:[rdi],dx
   14002d8d9:	(bad)  
   14002d8da:	je     0x14002d945
   14002d8dc:	outs   dx,BYTE PTR ds:[rsi]
   14002d8dd:	xor    DWORD PTR [rax],eax
   14002d8df:	add    BYTE PTR [rbp+0x6e],dl
   14002d8e2:	gs js  0x14002d955
   14002d8e5:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   14002d8ea:	and    BYTE PTR [rbx+0x6f],al
   14002d8ed:	outs   dx,BYTE PTR ds:[rsi]
   14002d8ee:	je     0x14002d955
   14002d8f0:	outs   dx,BYTE PTR ds:[rsi]
   14002d8f1:	je     0x14002d920
   14002d8f3:	push   rsp
   14002d8f4:	jns    0x14002d966
   14002d8f6:	and    BYTE PTR gs:[rax+0x65],ch
   14002d8fa:	(bad)  
   14002d8fb:	fs gs jb 0x14002d91f
   14002d8ff:	(bad)  
   14002d900:	and    eax,0x2731
   14002d905:	add    BYTE PTR [rax],al
   14002d907:	add    BYTE PTR [rbp+riz*2+0x78],dh
   14002d90b:	je     0x14002d93c
   14002d90d:	jo     0x14002d97b
   14002d90f:	(bad)  
   14002d910:	imul   ebp,DWORD PTR [rsi+0x3b],0x61686320
   14002d917:	jb     0x14002d98c
   14002d919:	gs je  0x14002d959
   14002d91c:	add    BYTE PTR [rax],al
   14002d91e:	add    BYTE PTR [rax],al
   14002d920:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14002d922:	outs   dx,BYTE PTR ds:[rsi]
   14002d923:	je     0x14002d98a
   14002d925:	outs   dx,BYTE PTR ds:[rsi]
   14002d926:	je     0x14002d955
   14002d928:	push   rsp
   14002d929:	jns    0x14002d99b
   14002d92b:	add    BYTE PTR gs:[rax],al
   14002d92e:	add    BYTE PTR [rax],al
   14002d930:	rex.WRB
   14002d931:	rex.WB
   14002d932:	rex.WRB
   14002d933:	rex.RB sub eax,0x73726556
   14002d939:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
   14002d940:	push   rax
   14002d941:	ins    BYTE PTR es:[rdi],dx
   14002d942:	jne    0x14002d9b6
   14002d944:	(bad)  
   14002d945:	ins    BYTE PTR es:[rdi],dx
   14002d946:	sub    eax,0x6d726f46
   14002d94b:	jae    0x14002d94d
   14002d94d:	add    BYTE PTR [rax],al
   14002d94f:	add    BYTE PTR [rdx+rsi*2+0x75],dh
   14002d953:	add    BYTE PTR gs:[rax],al
   14002d956:	add    BYTE PTR [rax],al
   14002d958:	pop    rax
   14002d959:	sub    eax,0x432d7451
   14002d95e:	outs   dx,DWORD PTR ds:[rsi]
   14002d95f:	outs   dx,BYTE PTR ds:[rsi]
   14002d960:	je     0x14002d9c7
   14002d962:	js     0x14002d9d8
   14002d964:	jae    0x14002d966
   14002d966:	add    BYTE PTR [rax],al
   14002d968:	pop    rax
   14002d969:	sub    eax,0x72756f53
   14002d96e:	movsxd esp,DWORD PTR [rbp+0x2d]
   14002d971:	rex.WR (bad) 
   14002d973:	outs   dx,BYTE PTR ds:[rsi]
   14002d974:	addr32 jne 0x14002d9d8
   14002d977:	add    BYTE PTR gs:[eax],al
   14002d97b:	add    BYTE PTR [rax],al
   14002d97d:	add    BYTE PTR [rax],al
   14002d97f:	add    BYTE PTR [rax+0x2d],bl
   14002d982:	rex.WR (bad) 
   14002d984:	outs   dx,BYTE PTR ds:[rsi]
   14002d985:	addr32 jne 0x14002d9e9
   14002d988:	add    BYTE PTR gs:[eax],al
   14002d98c:	add    BYTE PTR [rax],al
   14002d98e:	add    BYTE PTR [rax],al
   14002d990:	push   rax
   14002d991:	rex.WRXB sub rax,0x6d726f66
   14002d997:	(bad)  
   14002d998:	je     0x14002d9ba
   14002d99a:	gs jb  0x14002da0f
   14002d99d:	outs   dx,DWORD PTR ds:[rsi]
   14002d99e:	jb     0x14002d9c0
   14002d9a0:	imul   ebp,DWORD PTR [rsi+0x20],0x656e696c
   14002d9a7:	and    BYTE PTR [rip+0x27203a31],ah        # 0x1672313de
   14002d9ad:	and    eax,0x2732
   14002d9b2:	add    BYTE PTR [rax],al
   14002d9b4:	add    BYTE PTR [rax],al
   14002d9b6:	add    BYTE PTR [rax],al
   14002d9b8:	ins    DWORD PTR es:[rdi],dx
   14002d9b9:	jae    0x14002da22
   14002d9bb:	imul   esp,DWORD PTR [rdi+rbx*2+0x70],0x6172756c
   14002d9c3:	ins    BYTE PTR es:[rdi],dx
   14002d9c4:	and    BYTE PTR [rax],al
   14002d9c6:	add    BYTE PTR [rax],al
   14002d9c8:	ins    DWORD PTR es:[rdi],dx
   14002d9c9:	jae    0x14002da32
   14002d9cb:	imul   esp,DWORD PTR [rax+riz*1+0x0],0x67736d00
   14002d9d3:	movsxd esi,DWORD PTR [rax+rdi*2+0x74]
   14002d9d7:	and    BYTE PTR [rax],al
   14002d9d9:	add    BYTE PTR [rax],al
   14002d9db:	add    BYTE PTR [rax],al
   14002d9dd:	add    BYTE PTR [rax],al
   14002d9df:	add    BYTE PTR [rbx],ah
   14002d9e1:	jle    0x14002da5f
   14002d9e3:	and    BYTE PTR [rbp+0x73],ch
   14002d9e6:	movsxd esi,DWORD PTR [eax+edi*2+0x74]
   14002d9eb:	and    BYTE PTR [rax],al
   14002d9ed:	add    BYTE PTR [rax],al
   14002d9ef:	add    BYTE PTR [rbx],ah
   14002d9f1:	jle    0x14002da6f
   14002d9f3:	and    BYTE PTR [rbp+0x73],ch
   14002d9f6:	imul   esp,DWORD PTR [edi+ebx*2+0x70],0x6172756c
   14002d9ff:	ins    BYTE PTR es:[rdi],dx
   14002da00:	and    BYTE PTR [rax],al
   14002da02:	add    BYTE PTR [rax],al
   14002da04:	and    edi,DWORD PTR [rsi+0x7c]
   14002da07:	and    BYTE PTR [rax],al
   14002da09:	add    BYTE PTR [rax],al
   14002da0b:	add    BYTE PTR [rax],al
   14002da0d:	add    BYTE PTR [rax],al
   14002da0f:	add    BYTE PTR [rbx],ah
   14002da11:	jle    0x14002da8f
   14002da13:	and    BYTE PTR [rbp+0x73],ch
   14002da16:	imul   esp,DWORD PTR [eax+eiz*1+0x0],0x0
   14002da1f:	add    BYTE PTR [rbx],ah
   14002da21:	jle    0x14002da43
   14002da23:	ins    DWORD PTR es:[rdi],dx
   14002da24:	jae    0x14002da8d
   14002da26:	movsxd esi,DWORD PTR [rax+rdi*2+0x74]
   14002da2a:	and    BYTE PTR [rax],al
   14002da2c:	add    BYTE PTR [rax],al
   14002da2e:	add    BYTE PTR [rax],al
   14002da30:	jo     0x14002daa1
   14002da32:	sub    eax,0x6967736d
   14002da37:	fs pop rdi
   14002da39:	jo     0x14002daa7
   14002da3b:	jne    0x14002daaf
   14002da3d:	(bad)  
   14002da3e:	ins    BYTE PTR es:[rdi],dx
   14002da3f:	add    BYTE PTR [rbx],ah
   14002da41:	jle    0x14002da63
   14002da43:	ins    DWORD PTR es:[rdi],dx
   14002da44:	jae    0x14002daad
   14002da46:	imul   esp,DWORD PTR [rdi+rbx*2+0x70],0x6172756c
   14002da4e:	ins    BYTE PTR es:[rdi],dx
   14002da4f:	and    BYTE PTR [rax],al
   14002da51:	add    BYTE PTR [rax],al
   14002da53:	add    BYTE PTR [rbx],ah
   14002da55:	jle    0x14002da77
   14002da57:	add    BYTE PTR [rbx],ah
   14002da59:	jle    0x14002da7b
   14002da5b:	ins    DWORD PTR es:[rdi],dx
   14002da5c:	jae    0x14002dac5
   14002da5e:	imul   esp,DWORD PTR [rax+riz*1+0x0],0x0
   14002da66:	add    BYTE PTR [rax],al
   14002da68:	push   rax
   14002da69:	rex.WRXB sub rax,0x6d726f66
   14002da6f:	(bad)  
   14002da70:	je     0x14002da92
   14002da72:	jo     0x14002dad5
   14002da74:	jb     0x14002dae9
   14002da76:	and    BYTE PTR gs:[rbp+0x72],ah
   14002da7a:	jb     0x14002daeb
   14002da7c:	jb     0x14002da9e
   14002da7e:	imul   ebp,DWORD PTR [rsi+0x20],0x656e696c
   14002da85:	and    BYTE PTR [rip+0x27203a31],ah        # 0x1672314bc
   14002da8b:	and    eax,0x2732
   14002da90:	and    edi,DWORD PTR [rax+riz*1+0x6d]
   14002da94:	jae    0x14002dafd
   14002da96:	movsxd esi,DWORD PTR [rax+rdi*2+0x74]
   14002da9a:	and    BYTE PTR [rax],al
   14002da9c:	add    BYTE PTR [rax],al
   14002da9e:	add    BYTE PTR [rax],al
   14002daa0:	jo     0x14002db11
   14002daa2:	sub    eax,0x5f646c6f
   14002daa7:	ins    DWORD PTR es:[rdi],dx
   14002daa8:	jae    0x14002db11
   14002daaa:	imul   esp,DWORD PTR [rdi+rbx*2+0x70],0x6172756c
   14002dab2:	ins    BYTE PTR es:[rdi],dx
   14002dab3:	add    BYTE PTR [rax],al
   14002dab5:	add    BYTE PTR [rax],al
   14002dab7:	add    BYTE PTR [rbx],ah
   14002dab9:	jl     0x14002dadb
   14002dabb:	ins    DWORD PTR es:[rdi],dx
   14002dabc:	jae    0x14002db25
   14002dabe:	imul   esp,DWORD PTR [rdi+rbx*2+0x70],0x6172756c
   14002dac6:	ins    BYTE PTR es:[rdi],dx
   14002dac7:	and    BYTE PTR [rax],al
   14002dac9:	add    BYTE PTR [rax],al
   14002dacb:	add    BYTE PTR [rbx],ah
   14002dacd:	jl     0x14002daef
   14002dacf:	add    BYTE PTR [rbx],ah
   14002dad1:	jl     0x14002daf3
   14002dad3:	ins    DWORD PTR es:[rdi],dx
   14002dad4:	jae    0x14002db3d
   14002dad6:	imul   esp,DWORD PTR [rax+riz*1+0x0],0x0
   14002dade:	add    BYTE PTR [rax],al
   14002dae0:	and    ebp,DWORD PTR [rsi]
   14002dae2:	and    BYTE PTR [rbx+rsi*2+0x2d],dh
   14002dae6:	imul   esp,DWORD PTR [rax+riz*1+0x0],0x0
   14002daee:	add    BYTE PTR [rax],al
   14002daf0:	and    ebp,DWORD PTR [rsi]
   14002daf2:	and    BYTE PTR [rbx+rsi*2+0x2d],dh
   14002daf6:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14002daf9:	je     0x14002db60
   14002dafb:	js     0x14002db71
   14002dafd:	and    BYTE PTR [rax],al
   14002daff:	add    BYTE PTR [rax+0x6f],dh
   14002db02:	sub    eax,0x67616c66
   14002db07:	jae    0x14002db09
   14002db09:	add    BYTE PTR [rax],al
   14002db0b:	add    BYTE PTR [rax],al
   14002db0d:	add    BYTE PTR [rax],al
   14002db0f:	add    BYTE PTR [rcx+0x74],dh
   14002db12:	sub    eax,0x6d726f66
   14002db17:	(bad)  
   14002db18:	je     0x14002db1a
   14002db1a:	add    BYTE PTR [rax],al
   14002db1c:	data16 jne 0x14002db99
   14002db1f:	jp     0x14002db9a
   14002db21:	add    BYTE PTR [rax],al
   14002db23:	add    BYTE PTR [rbx+0x2c],bl
   14002db26:	and    BYTE PTR [rbp+0x0],bl
   14002db29:	add    BYTE PTR [rax],al
   14002db2b:	add    BYTE PTR [rax],al
   14002db2d:	add    BYTE PTR [rax],al
   14002db2f:	add    BYTE PTR [rbp+0x73],ch
   14002db32:	addr32 jae 0x14002dba9
   14002db35:	jb     0x14002db92
   14002db37:	and    eax,0x5d31
   14002db3c:	add    BYTE PTR [rax],al
   14002db3e:	add    BYTE PTR [rax],al
   14002db40:	ins    DWORD PTR es:[rdi],dx
   14002db41:	jae    0x14002dbaa
   14002db43:	imul   esp,DWORD PTR [rdi+rbx*2+0x70],0x6172756c
   14002db4b:	ins    BYTE PTR es:[rdi],dx
   14002db4c:	add    BYTE PTR [rax],al
   14002db4e:	add    BYTE PTR [rax],al
   14002db50:	ins    DWORD PTR es:[rdi],dx
   14002db51:	jae    0x14002dbba
   14002db53:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x67736d00
   14002db5b:	movsxd esi,DWORD PTR [rax+rdi*2+0x74]
   14002db5f:	add    BYTE PTR [rbx],ah
   14002db61:	sub    al,0x20
   14002db63:	add    BYTE PTR [rax],al
   14002db65:	add    BYTE PTR [rax],al
   14002db67:	add    BYTE PTR [rsi+0x6f],ch
   14002db6a:	sub    eax,0x70617277
   14002db6f:	add    BYTE PTR [rbx],ah
   14002db71:	cmp    al,BYTE PTR [rax]
   14002db73:	add    BYTE PTR [rax],ah
   14002db75:	add    BYTE PTR [rax],al
   14002db77:	add    BYTE PTR [rip+0x31253a32],ah        # 0x1712815af
   14002db7d:	add    BYTE PTR [rax],al
   14002db7f:	add    BYTE PTR [rbx],ah
   14002db81:	add    BYTE PTR cs:[rax],al
   14002db84:	cmp    ah,BYTE PTR [rax]
   14002db86:	add    BYTE PTR [rax],al
   14002db88:	xor    DWORD PTR [rsi],ebp
   14002db8a:	xor    BYTE PTR [rax],al
   14002db8c:	add    BYTE PTR [rax],al
   14002db8e:	add    BYTE PTR [rax],al
   14002db90:	ins    DWORD PTR es:[rdi],dx
   14002db91:	jae    0x14002dbfa
   14002db93:	imul   esp,DWORD PTR [rax+riz*1+0x22],0xa22
   14002db9b:	add    BYTE PTR [rax],al
   14002db9d:	add    BYTE PTR [rax],al
   14002db9f:	add    BYTE PTR [rip+0x6d726f66],ch        # 0x1ad754b0b
   14002dba5:	(bad)  
   14002dba6:	je     0x14002dba8
   14002dba8:	rex.RXB
   14002dba9:	rex.WRX push rbp
   14002dbab:	and    BYTE PTR [rdi+0x65],al
   14002dbae:	je     0x14002dc24
   14002dbb0:	gs js  0x14002dc27
   14002dbb3:	and    BYTE PTR [rdi+rbp*2+0x63],ch
   14002dbb7:	(bad)  
   14002dbb8:	ins    BYTE PTR es:[rdi],dx
   14002dbb9:	imul   edi,DWORD PTR [rdx+0x61],0x6e6f6974
   14002dbc0:	and    BYTE PTR [rbp+riz*2+0x6d],dh
   14002dbc4:	jo     0x14002dc32
   14002dbc6:	(bad)  
   14002dbc7:	je     0x14002dc2e
   14002dbc9:	and    BYTE PTR [rsi+0x69],ah
   14002dbcc:	ins    BYTE PTR es:[rdi],dx
   14002dbcd:	gs jae 0x14002dbd0
   14002dbd0:	jo     0x14002dc41
   14002dbd2:	je     0x14002dbd4
   14002dbd4:	add    BYTE PTR [rax],al
   14002dbd6:	add    BYTE PTR [rax],al
   14002dbd8:	rex.RXB
   14002dbd9:	rex.WRX push rbp
   14002dbdb:	and    BYTE PTR [rdi+0x65],al
   14002dbde:	je     0x14002dc54
   14002dbe0:	gs js  0x14002dc57
   14002dbe3:	and    BYTE PTR [rdi+rbp*2+0x63],ch
   14002dbe7:	(bad)  
   14002dbe8:	ins    BYTE PTR es:[rdi],dx
   14002dbe9:	imul   edi,DWORD PTR [rdx+0x61],0x6e6f6974
   14002dbf0:	and    BYTE PTR [rsi+0x69],ah
   14002dbf3:	ins    BYTE PTR es:[rdi],dx
   14002dbf4:	gs jae 0x14002dbf7
   14002dbf7:	add    BYTE PTR [rax+0x6f],dh
   14002dbfa:	add    BYTE PTR [rax],al
   14002dbfc:	pop    rbp
   14002dbfd:	add    BYTE PTR [rax],al
   14002dbff:	add    BYTE PTR [rbx+0x0],bl
   14002dc02:	add    BYTE PTR [rax],al
   14002dc04:	js     0x14002dc06
   14002dc06:	add    BYTE PTR [rax],al
   14002dc08:	and    edi,DWORD PTR es:[rax+0x25]
   14002dc0c:	xor    DWORD PTR [rbx],edi
   14002dc0e:	add    BYTE PTR [rax],al
   14002dc10:	cmp    al,0x62
   14002dc12:	jns    0x14002dc88
   14002dc14:	and    BYTE PTR gs:[rsi+0x61],dh
   14002dc18:	ins    BYTE PTR es:[rdi],dx
   14002dc19:	jne    0x14002dc80
   14002dc1b:	cmp    eax,0x31257822
   14002dc20:	and    ch,BYTE PTR [rdi]
   14002dc22:	add    BYTE PTR ds:[rsi],bh
   14002dc25:	add    BYTE PTR [rax],al
   14002dc27:	add    BYTE PTR [rdi+rbp*1],bh
   14002dc2a:	ins    BYTE PTR es:[rdi],dx
   14002dc2b:	outs   dx,BYTE PTR gs:[rsi]
   14002dc2d:	addr32 je 0x14002dc98
   14002dc30:	jbe    0x14002dc93
   14002dc32:	jb     0x14002dc9d
   14002dc34:	(bad)  
   14002dc35:	outs   dx,BYTE PTR ds:[rsi]
   14002dc36:	je     0x14002dc76
	...
   14002dc40:	cmp    al,0x6c
   14002dc42:	outs   dx,BYTE PTR gs:[rsi]
   14002dc44:	addr32 je 0x14002dcaf
   14002dc47:	jbe    0x14002dcaa
   14002dc49:	jb     0x14002dcb4
   14002dc4b:	(bad)  
   14002dc4c:	outs   dx,BYTE PTR ds:[rsi]
   14002dc4d:	je     0x14002dc8d
   14002dc4f:	add    BYTE PTR [rdx],cl
   14002dc51:	and    BYTE PTR [rax],ah
   14002dc53:	and    BYTE PTR [rax],ah
   14002dc55:	add    BYTE PTR [rax],al
   14002dc57:	add    BYTE PTR [rax],ah
   14002dc59:	jbe    0x14002dcbc
   14002dc5b:	jb     0x14002dcc6
   14002dc5d:	(bad)  
   14002dc5e:	outs   dx,BYTE PTR ds:[rsi]
   14002dc5f:	je     0x14002dcd4
   14002dc61:	cmp    eax,0x73657922
   14002dc66:	and    bh,BYTE PTR [rsi]
	...
   14002dc70:	push   rbp
   14002dc71:	outs   dx,BYTE PTR ds:[rsi]
   14002dc72:	gs js  0x14002dce5
   14002dc75:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   14002dc7a:	and    BYTE PTR [rcx+riz*2+0x67],dh
   14002dc7e:	and    BYTE PTR ds:0x25203e31,bh
   14002dc85:	xor    al,BYTE PTR [rax]
   14002dc87:	add    BYTE PTR [rbp+0x6e],dl
   14002dc8a:	gs js  0x14002dcfd
   14002dc8d:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   14002dc92:	and    BYTE PTR [rbx+0x68],ah
   14002dc95:	(bad)  
   14002dc96:	jb     0x14002dcf9
   14002dc98:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
   14002dc9c:	jae    0x14002dcbe
   14002dc9e:	(bad)  
   14002dc9f:	and    eax,0x25202731
   14002dca4:	xor    al,BYTE PTR [rax]
   14002dca6:	add    BYTE PTR [rax],al
   14002dca8:	push   rbp
   14002dca9:	outs   dx,BYTE PTR ds:[rsi]
   14002dcaa:	gs js  0x14002dd1d
   14002dcad:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   14002dcb2:	and    BYTE PTR [rbp+0x6e],ah
   14002dcb5:	je     0x14002dd20
   14002dcb7:	je     0x14002dd32
   14002dcb9:	and    BYTE PTR [rdi],ah
   14002dcbb:	es and eax,0x20273b31
   14002dcc1:	and    eax,0x32
   14002dcc6:	add    BYTE PTR [rax],al
   14002dcc8:	push   rbp
   14002dcc9:	outs   dx,BYTE PTR ds:[rsi]
   14002dcca:	gs js  0x14002dd3d
   14002dccd:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   14002dcd2:	and    BYTE PTR [rax+0x72],dh
   14002dcd5:	outs   dx,DWORD PTR ds:[rsi]
   14002dcd6:	movsxd esp,DWORD PTR [rbp+0x73]
   14002dcd9:	jae    0x14002dd44
   14002dcdb:	outs   dx,BYTE PTR ds:[rsi]
   14002dcdc:	and    BYTE PTR [ecx+0x6e],ch
   14002dce0:	jae    0x14002dd56
   14002dce2:	jb     0x14002dd59
   14002dce4:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14002dce8:	outs   dx,BYTE PTR ds:[rsi]
   14002dce9:	and    BYTE PTR [rip+0x31],ah        # 0x14002dd20
   14002dcef:	add    BYTE PTR [rax+0x61],dl
   14002dcf2:	jb     0x14002dd67
   14002dcf4:	and    BYTE PTR gs:[rbp+0x72],ah
   14002dcf8:	jb     0x14002dd69
   14002dcfa:	jb     0x14002dd1c
   14002dcfc:	and    eax,0x25203a31
   14002dd01:	xor    al,BYTE PTR [rax]
   14002dd03:	add    BYTE PTR [rax],al
   14002dd05:	add    BYTE PTR [rax],al
   14002dd07:	add    BYTE PTR [rcx+0x74],ah
   14002dd0a:	and    BYTE PTR [rip+0x31253a33],ah        # 0x171281743
   14002dd10:	cmp    ah,BYTE PTR [rip+0x61760032]        # 0x1a178dd48
   14002dd16:	ins    BYTE PTR es:[rdi],dx
   14002dd17:	jne    0x14002dd7e
   14002dd19:	add    BYTE PTR [rax],al
   14002dd1b:	add    BYTE PTR [rdx+0x79],ah
   14002dd1e:	je     0x14002dd85
   14002dd20:	add    BYTE PTR [rax],al
   14002dd22:	add    BYTE PTR [rax],al
   14002dd24:	jns    0x14002dd8b
   14002dd26:	jae    0x14002dd28
   14002dd28:	jbe    0x14002dd8b
   14002dd2a:	jb     0x14002dd95
   14002dd2c:	(bad)  
   14002dd2d:	outs   dx,BYTE PTR ds:[rsi]
   14002dd2e:	je     0x14002dda3
	...
   14002dd38:	ins    BYTE PTR es:[rdi],dx
   14002dd39:	outs   dx,BYTE PTR gs:[rsi]
   14002dd3b:	addr32 je 0x14002dda6
   14002dd3e:	jbe    0x14002dda1
   14002dd40:	jb     0x14002ddab
   14002dd42:	(bad)  
   14002dd43:	outs   dx,BYTE PTR ds:[rsi]
   14002dd44:	je     0x14002dd46
   14002dd46:	add    BYTE PTR [rax],al
   14002dd48:	push   rdi
   14002dd49:	(bad)  
   14002dd4a:	jb     0x14002ddba
   14002dd4c:	imul   ebp,DWORD PTR [rsi+0x67],0x6769203a
   14002dd53:	outs   dx,BYTE PTR ds:[rsi]
   14002dd54:	outs   dx,DWORD PTR ds:[rsi]
   14002dd55:	jb     0x14002ddc0
   14002dd57:	outs   dx,BYTE PTR ds:[rsi]
   14002dd58:	and    BYTE PTR [esp+eiz*2],bh
   14002dd5c:	gs data16 (bad) 
   14002dd5f:	jne    0x14002ddcd
   14002dd61:	je     0x14002ddc6
   14002dd63:	outs   dx,DWORD PTR ds:[rsi]
   14002dd64:	fs movsxd edi,DWORD PTR gs:[rsi]
   14002dd68:	and    BYTE PTR [rbp+0x6c],ah
   14002dd6b:	gs ins DWORD PTR es:[rdi],dx
   14002dd6d:	outs   dx,BYTE PTR gs:[rsi]
   14002dd6f:	je     0x14002dd71
   14002dd71:	add    BYTE PTR [rax],al
   14002dd73:	add    BYTE PTR [rbp+0x78],ah
   14002dd76:	je     0x14002ddea
   14002dd78:	(bad)  
   14002dd79:	sub    eax,0x0
   14002dd7e:	add    BYTE PTR [rax],al
   14002dd80:	jbe    0x14002dde3
   14002dd82:	outs   dx,BYTE PTR ds:[rsi]
   14002dd83:	imul   esi,DWORD PTR [rbx+0x68],0x6465
   14002dd8a:	add    BYTE PTR [rax],al
   14002dd8c:	add    BYTE PTR [rax],al
   14002dd8e:	add    BYTE PTR [rax],al
   14002dd90:	jne    0x14002de05
   14002dd92:	gs jb  0x14002ddf9
   14002dd95:	(bad)  
   14002dd96:	je     0x14002ddf9
	...
   14002dda0:	jne    0x14002de10
   14002dda2:	imul   bp,WORD PTR [rsi+0x69],0x6873
   14002dda8:	gs add BYTE PTR fs:[rax],al
   14002ddac:	je     0x14002de27
   14002ddae:	jo     0x14002de15
   14002ddb0:	add    BYTE PTR [rax],al
   14002ddb2:	add    BYTE PTR [rax],al
   14002ddb4:	push   rsp
   14002ddb5:	push   rbx
   14002ddb6:	add    BYTE PTR [rax],al
   14002ddb8:	je     0x14002de2c
   14002ddba:	(bad)  
   14002ddbb:	outs   dx,BYTE PTR ds:[rsi]
   14002ddbc:	jae    0x14002de2a
   14002ddbe:	(bad)  
   14002ddbf:	je     0x14002de30
   14002ddc1:	jb     0x14002de26
   14002ddc3:	outs   dx,DWORD PTR ds:[rsi]
   14002ddc4:	ins    DWORD PTR es:[rdi],dx
   14002ddc5:	ins    DWORD PTR es:[rdi],dx
   14002ddc6:	outs   dx,BYTE PTR gs:[rsi]
   14002ddc8:	je     0x14002ddca
   14002ddca:	add    BYTE PTR [rax],al
   14002ddcc:	add    BYTE PTR [rax],al
   14002ddce:	add    BYTE PTR [rax],al
   14002ddd0:	je     0x14002de44
   14002ddd2:	(bad)  
   14002ddd3:	outs   dx,BYTE PTR ds:[rsi]
   14002ddd4:	jae    0x14002de42
   14002ddd6:	(bad)  
   14002ddd7:	je     0x14002de42
   14002ddd9:	outs   dx,DWORD PTR ds:[rsi]
   14002ddda:	outs   dx,BYTE PTR ds:[rsi]
   14002dddb:	add    BYTE PTR [rax],al
   14002dddd:	add    BYTE PTR [rax],al
   14002dddf:	add    BYTE PTR [rdi+0x6c],ch
   14002dde2:	fs jae 0x14002de54
   14002dde5:	jne    0x14002de59
   14002dde7:	movsxd esp,DWORD PTR [rbp+0x0]
   14002ddea:	add    BYTE PTR [rax],al
   14002ddec:	add    BYTE PTR [rax],al
   14002ddee:	add    BYTE PTR [rax],al
   14002ddf0:	outs   dx,DWORD PTR ds:[rsi]
   14002ddf1:	ins    BYTE PTR es:[rdi],dx
   14002ddf2:	movsxd ebp,DWORD PTR fs:[rdi+0x6d]
   14002ddf6:	ins    DWORD PTR es:[rdi],dx
   14002ddf7:	outs   dx,BYTE PTR gs:[rsi]
   14002ddf9:	je     0x14002ddfb
   14002ddfb:	add    BYTE PTR [rax],al
   14002ddfd:	add    BYTE PTR [rax],al
   14002ddff:	add    BYTE PTR [rdi+0x62],ch
   14002de02:	jae    0x14002de73
   14002de04:	ins    BYTE PTR es:[rdi],dx
   14002de05:	gs je  0x14002de6d
	...
   14002de10:	outs   dx,BYTE PTR ds:[rsi]
   14002de11:	jne    0x14002de80
   14002de13:	gs jb  0x14002de8b
   14002de16:	jae    0x14002de7e
   14002de18:	outs   dx,DWORD PTR ds:[rsi]
   14002de19:	jb     0x14002de88
   14002de1b:	add    BYTE PTR [rax],al
   14002de1d:	add    BYTE PTR [rax],al
   14002de1f:	add    BYTE PTR [rsi+0x75],ch
   14002de22:	ins    DWORD PTR es:[rdi],dx
   14002de23:	gs jb  0x14002de9b
   14002de26:	jae    0x14002de28
   14002de28:	outs   dx,BYTE PTR ds:[rsi]
   14002de29:	(bad)  
   14002de2a:	ins    DWORD PTR es:[rdi],dx
   14002de2b:	add    BYTE PTR gs:[rax],al
   14002de2e:	add    BYTE PTR [rax],al
   14002de30:	ins    DWORD PTR es:[rdi],dx
   14002de31:	gs jae 0x14002dea7
   14002de34:	(bad)  
   14002de35:	add    BYTE PTR gs:[edi+ebp*2+0x63],ch
   14002de3b:	(bad)  
   14002de3c:	je     0x14002dea7
   14002de3e:	outs   dx,DWORD PTR ds:[rsi]
   14002de3f:	outs   dx,BYTE PTR ds:[rsi]
   14002de40:	add    BYTE PTR [rax],al
   14002de42:	add    BYTE PTR [rax],al
   14002de44:	ins    BYTE PTR es:[rdi],dx
   14002de45:	imul   ebp,DWORD PTR [rsi+0x65],0x0
   14002de4c:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x656c6966
   14002de54:	outs   dx,BYTE PTR ds:[rsi]
   14002de55:	(bad)  
   14002de56:	ins    DWORD PTR es:[rdi],dx
   14002de57:	add    BYTE PTR gs:[rax],al
   14002de5a:	add    BYTE PTR [rax],al
   14002de5c:	add    BYTE PTR [rax],al
   14002de5e:	add    BYTE PTR [rax],al
   14002de60:	gs js  0x14002ded7
   14002de63:	jb     0x14002dec6
   14002de65:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14002de68:	ins    DWORD PTR es:[rdi],dx
   14002de69:	outs   dx,BYTE PTR gs:[rsi]
   14002de6b:	je     0x14002de6d
   14002de6d:	add    BYTE PTR [rax],al
   14002de6f:	add    BYTE PTR [rbp+riz*2+0x70],ah
   14002de73:	outs   dx,BYTE PTR gs:[rsi]
   14002de75:	fs outs dx,BYTE PTR gs:[rsi]
   14002de78:	movsxd edi,DWORD PTR [rcx+0x0]
   14002de7b:	add    BYTE PTR [rax],al
   14002de7d:	add    BYTE PTR [rax],al
   14002de7f:	add    BYTE PTR [rbp+riz*2+0x70],ah
   14002de83:	outs   dx,BYTE PTR gs:[rsi]
   14002de85:	fs outs dx,BYTE PTR gs:[rsi]
   14002de88:	movsxd ebp,DWORD PTR [rcx+0x65]
   14002de8b:	jae    0x14002de8d
   14002de8d:	add    BYTE PTR [rax],al
   14002de8f:	add    BYTE PTR [rbp+riz*2+0x66],ah
   14002de93:	(bad)  
   14002de94:	jne    0x14002df02
   14002de96:	je     0x14002defb
   14002de98:	outs   dx,DWORD PTR ds:[rsi]
   14002de99:	fs movsxd eax,DWORD PTR gs:[rax]
   14002de9d:	add    BYTE PTR [rax],al
   14002de9f:	add    BYTE PTR [rbx+0x6f],ah
   14002dea2:	outs   dx,BYTE PTR ds:[rsi]
   14002dea3:	je     0x14002df0a
   14002dea5:	js     0x14002df1b
   14002dea7:	add    BYTE PTR [rbx+0x6f],ah
   14002deaa:	ins    DWORD PTR es:[rdi],dx
   14002deab:	ins    DWORD PTR es:[rdi],dx
   14002deac:	outs   dx,BYTE PTR gs:[rsi]
   14002deae:	je     0x14002deb0
   14002deb0:	movsxd esp,DWORD PTR [rcx+0x74]
   14002deb3:	(bad)  
   14002deb4:	ins    BYTE PTR es:[rdi],dx
   14002deb5:	outs   dx,DWORD PTR ds:[rsi]
   14002deb6:	add    BYTE PTR [edi+ebp*1],bh
   14002deba:	gs js  0x14002df31
   14002debd:	jb     0x14002df20
   14002debf:	sub    eax,0x0
   14002dec4:	add    BYTE PTR [rax],al
   14002dec6:	add    BYTE PTR [rax],al
   14002dec8:	cmp    al,0x65
   14002deca:	js     0x14002df40
   14002decc:	jb     0x14002df2f
   14002dece:	sub    eax,0x542f3c00
   14002ded3:	push   rbx
   14002ded4:	or     al,BYTE PTR ds:[rax]
   14002ded7:	add    BYTE PTR [rdi+rbp*1],bh
   14002deda:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14002dedd:	je     0x14002df44
   14002dedf:	js     0x14002df55
   14002dee1:	or     al,BYTE PTR ds:[rax]
   14002dee4:	add    BYTE PTR [rax],al
   14002dee6:	add    BYTE PTR [rax],al
   14002dee8:	and    BYTE PTR [rax],ah
   14002deea:	and    BYTE PTR [rax],ah
   14002deec:	cmp    al,0x2f
   14002deee:	ins    DWORD PTR es:[rdi],dx
   14002deef:	gs jae 0x14002df65
   14002def2:	(bad)  
   14002def3:	gs or  al,BYTE PTR ds:[eax]
   14002def8:	cmp    al,0x2f
   14002defa:	jne    0x14002df6f
   14002defc:	gs jb  0x14002df63
   14002deff:	(bad)  
   14002df00:	je     0x14002df63
   14002df02:	or     al,BYTE PTR ds:[rax]
   14002df05:	add    BYTE PTR [rax],al
   14002df07:	add    BYTE PTR [rax],ah
   14002df09:	and    BYTE PTR [rax],ah
   14002df0b:	and    BYTE PTR [rax],ah
   14002df0d:	and    BYTE PTR [rax],ah
   14002df0f:	and    BYTE PTR [rsi*2+0x64726573],bh
   14002df16:	(bad)  
   14002df17:	je     0x14002df7a
   14002df19:	add    BYTE PTR ds:[rax],al
   14002df1c:	add    BYTE PTR [rax],al
   14002df1e:	add    BYTE PTR [rax],al
   14002df20:	cmp    al,0x2f
   14002df22:	je     0x14002df96
   14002df24:	(bad)  
   14002df25:	outs   dx,BYTE PTR ds:[rsi]
   14002df26:	jae    0x14002df94
   14002df28:	(bad)  
   14002df29:	je     0x14002df94
   14002df2b:	outs   dx,DWORD PTR ds:[rsi]
   14002df2c:	outs   dx,BYTE PTR ds:[rsi]
   14002df2d:	or     al,BYTE PTR ds:[rax]
   14002df30:	and    BYTE PTR [rax],ah
   14002df32:	and    BYTE PTR [rax],ah
   14002df34:	and    BYTE PTR [rax],ah
   14002df36:	and    BYTE PTR [rax],ah
	...
   14002df40:	or     ah,BYTE PTR [rax]
   14002df42:	and    BYTE PTR [rax],ah
   14002df44:	and    BYTE PTR [rax],ah
   14002df46:	and    BYTE PTR [rax],ah
   14002df48:	and    BYTE PTR [rax],al
   14002df4a:	add    BYTE PTR [rax],al
   14002df4c:	add    BYTE PTR [rax],al
   14002df4e:	add    BYTE PTR [rax],al
   14002df50:	cmp    al,0x2f
   14002df52:	outs   dx,BYTE PTR ds:[rsi]
   14002df53:	jne    0x14002dfc2
   14002df55:	gs jb  0x14002dfcd
   14002df58:	jae    0x14002dfc0
   14002df5a:	outs   dx,DWORD PTR ds:[rsi]
   14002df5b:	jb     0x14002dfca
   14002df5d:	add    BYTE PTR ds:[rax],al
   14002df60:	and    BYTE PTR [rax],ah
   14002df62:	and    BYTE PTR [rax],ah
   14002df64:	and    BYTE PTR [rax],ah
   14002df66:	and    BYTE PTR [rax],ah
   14002df68:	and    BYTE PTR [rax],ah
   14002df6a:	and    BYTE PTR [rax],ah
   14002df6c:	add    BYTE PTR [rax],al
   14002df6e:	add    BYTE PTR [rax],al
   14002df70:	or     ah,BYTE PTR [rax]
   14002df72:	and    BYTE PTR [rax],ah
   14002df74:	and    BYTE PTR [rax],ah
   14002df76:	and    BYTE PTR [rax],ah
   14002df78:	and    BYTE PTR [rax],ah
   14002df7a:	and    BYTE PTR [rax],ah
   14002df7c:	and    BYTE PTR [rsi+rbp*2],bh
   14002df7f:	jne    0x14002dfee
   14002df81:	gs jb  0x14002dff9
   14002df84:	jae    0x14002dfec
   14002df86:	outs   dx,DWORD PTR ds:[rsi]
   14002df87:	jb     0x14002dff6
   14002df89:	add    BYTE PTR [rax],al
   14002df8b:	add    BYTE PTR [rax],al
   14002df8d:	add    BYTE PTR [rax],al
   14002df8f:	add    BYTE PTR [rax],ah
   14002df91:	je     0x14002e00c
   14002df93:	jo     0x14002dffa
   14002df95:	cmp    eax,0x73626f22
   14002df9a:	outs   dx,DWORD PTR ds:[rsi]
   14002df9b:	ins    BYTE PTR es:[rdi],dx
   14002df9c:	gs je  0x14002e004
   14002df9f:	and    al,BYTE PTR [rax]
   14002dfa1:	add    BYTE PTR [rax],al
   14002dfa3:	add    BYTE PTR [rax],al
   14002dfa5:	add    BYTE PTR [rax],al
   14002dfa7:	add    BYTE PTR [rax],ah
   14002dfa9:	je     0x14002e024
   14002dfab:	jo     0x14002e012
   14002dfad:	cmp    eax,0x6e617622
   14002dfb2:	imul   esi,DWORD PTR [rbx+0x68],0x226465
   14002dfb9:	add    BYTE PTR [rax],al
   14002dfbb:	add    BYTE PTR [rax],al
   14002dfbd:	add    BYTE PTR [rax],al
   14002dfbf:	add    BYTE PTR [rax],ah
   14002dfc1:	je     0x14002e03c
   14002dfc3:	jo     0x14002e02a
   14002dfc5:	cmp    eax,0x666e7522
   14002dfca:	imul   ebp,DWORD PTR [rsi+0x69],0x64656873
   14002dfd1:	and    al,BYTE PTR [rax]
   14002dfd3:	add    BYTE PTR [rax],al
   14002dfd5:	add    BYTE PTR [rax],al
   14002dfd7:	add    BYTE PTR [rax],ah
   14002dfd9:	and    BYTE PTR [rax],ah
   14002dfdb:	and    BYTE PTR [rax],ah
   14002dfdd:	and    BYTE PTR [rax],ah
   14002dfdf:	and    BYTE PTR [rsp+rsi*2],bh
   14002dfe2:	jb     0x14002e045
   14002dfe4:	outs   dx,BYTE PTR ds:[rsi]
   14002dfe5:	jae    0x14002e053
   14002dfe7:	(bad)  
   14002dfe8:	je     0x14002e053
   14002dfea:	outs   dx,DWORD PTR ds:[rsi]
   14002dfeb:	outs   dx,BYTE PTR ds:[rsi]
   14002dfec:	add    BYTE PTR [rax],al
   14002dfee:	add    BYTE PTR [rax],al
   14002dff0:	cmp    al,0x2f
   14002dff2:	je     0x14002e066
   14002dff4:	(bad)  
   14002dff5:	outs   dx,BYTE PTR ds:[rsi]
   14002dff6:	jae    0x14002e064
   14002dff8:	(bad)  
   14002dff9:	je     0x14002e06a
   14002dffb:	jb     0x14002e060
   14002dffd:	outs   dx,DWORD PTR ds:[rsi]
   14002dffe:	ins    DWORD PTR es:[rdi],dx
   14002dfff:	ins    DWORD PTR es:[rdi],dx
   14002e000:	outs   dx,BYTE PTR gs:[rsi]
   14002e002:	je     0x14002e042
   14002e004:	or     al,BYTE PTR [rax]
   14002e006:	add    BYTE PTR [rax],al
   14002e008:	and    BYTE PTR [rax],ah
   14002e00a:	and    BYTE PTR [rax],ah
   14002e00c:	and    BYTE PTR [rax],ah
   14002e00e:	and    BYTE PTR [rax],ah
   14002e010:	cmp    al,0x74
   14002e012:	jb     0x14002e075
   14002e014:	outs   dx,BYTE PTR ds:[rsi]
   14002e015:	jae    0x14002e083
   14002e017:	(bad)  
   14002e018:	je     0x14002e089
   14002e01a:	jb     0x14002e07f
   14002e01c:	outs   dx,DWORD PTR ds:[rsi]
   14002e01d:	ins    DWORD PTR es:[rdi],dx
   14002e01e:	ins    DWORD PTR es:[rdi],dx
   14002e01f:	outs   dx,BYTE PTR gs:[rsi]
   14002e021:	je     0x14002e061
   14002e023:	add    BYTE PTR [rax],al
   14002e025:	add    BYTE PTR [rax],al
   14002e027:	add    BYTE PTR [rdi+rbp*1],bh
   14002e02a:	gs js  0x14002e0a1
   14002e02d:	jb     0x14002e090
   14002e02f:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14002e032:	ins    DWORD PTR es:[rdi],dx
   14002e033:	outs   dx,BYTE PTR gs:[rsi]
   14002e035:	je     0x14002e075
   14002e037:	or     al,BYTE PTR [rax]
   14002e039:	add    BYTE PTR [rax],al
   14002e03b:	add    BYTE PTR [rax],al
   14002e03d:	add    BYTE PTR [rax],al
   14002e03f:	add    BYTE PTR [rax],ah
   14002e041:	and    BYTE PTR [rax],ah
   14002e043:	and    BYTE PTR [rax],ah
   14002e045:	and    BYTE PTR [rax],ah
   14002e047:	and    BYTE PTR [riz*2+0x61727478],bh
   14002e04e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14002e051:	ins    DWORD PTR es:[rdi],dx
   14002e052:	outs   dx,BYTE PTR gs:[rsi]
   14002e054:	je     0x14002e094
   14002e056:	add    BYTE PTR [rax],al
   14002e058:	cmp    al,0x2f
   14002e05a:	outs   dx,DWORD PTR ds:[rsi]
   14002e05b:	ins    BYTE PTR es:[rdi],dx
   14002e05c:	movsxd ebp,DWORD PTR fs:[rdi+0x6d]
   14002e060:	ins    DWORD PTR es:[rdi],dx
   14002e061:	outs   dx,BYTE PTR gs:[rsi]
   14002e063:	je     0x14002e0a3
   14002e065:	or     al,BYTE PTR [rax]
   14002e067:	add    BYTE PTR [rax],ah
   14002e069:	and    BYTE PTR [rax],ah
   14002e06b:	and    BYTE PTR [rax],ah
   14002e06d:	and    BYTE PTR [rax],ah
   14002e06f:	and    BYTE PTR [rdi+rbp*2],bh
   14002e072:	ins    BYTE PTR es:[rdi],dx
   14002e073:	movsxd ebp,DWORD PTR fs:[rdi+0x6d]
   14002e077:	ins    DWORD PTR es:[rdi],dx
   14002e078:	outs   dx,BYTE PTR gs:[rsi]
   14002e07a:	je     0x14002e0ba
   14002e07c:	add    BYTE PTR [rax],al
   14002e07e:	add    BYTE PTR [rax],al
   14002e080:	cmp    al,0x2f
   14002e082:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14002e085:	ins    DWORD PTR es:[rdi],dx
   14002e086:	outs   dx,BYTE PTR gs:[rsi]
   14002e088:	je     0x14002e0c8
   14002e08a:	or     al,BYTE PTR [rax]
   14002e08c:	add    BYTE PTR [rax],al
   14002e08e:	add    BYTE PTR [rax],al
   14002e090:	and    BYTE PTR [rax],ah
   14002e092:	and    BYTE PTR [rax],ah
   14002e094:	and    BYTE PTR [rax],ah
   14002e096:	and    BYTE PTR [rax],ah
   14002e098:	cmp    al,0x63
   14002e09a:	outs   dx,DWORD PTR ds:[rsi]
   14002e09b:	ins    DWORD PTR es:[rdi],dx
   14002e09c:	ins    DWORD PTR es:[rdi],dx
   14002e09d:	outs   dx,BYTE PTR gs:[rsi]
   14002e09f:	je     0x14002e0df
   14002e0a1:	add    BYTE PTR [rax],al
   14002e0a3:	add    BYTE PTR [rax],al
   14002e0a5:	add    BYTE PTR [rax],al
   14002e0a7:	add    BYTE PTR [rdi+rbp*1],bh
   14002e0aa:	outs   dx,DWORD PTR ds:[rsi]
   14002e0ab:	ins    BYTE PTR es:[rdi],dx
   14002e0ac:	fs jae 0x14002e11e
   14002e0af:	jne    0x14002e123
   14002e0b1:	movsxd esp,DWORD PTR [rbp+0x3e]
   14002e0b4:	or     al,BYTE PTR [rax]
   14002e0b6:	add    BYTE PTR [rax],al
   14002e0b8:	and    BYTE PTR [rax],ah
   14002e0ba:	and    BYTE PTR [rax],ah
   14002e0bc:	and    BYTE PTR [rax],ah
   14002e0be:	and    BYTE PTR [rax],ah
   14002e0c0:	cmp    al,0x6f
   14002e0c2:	ins    BYTE PTR es:[rdi],dx
   14002e0c3:	fs jae 0x14002e135
   14002e0c6:	jne    0x14002e13a
   14002e0c8:	movsxd esp,DWORD PTR [rbp+0x3e]
   14002e0cb:	add    BYTE PTR [rax],al
   14002e0cd:	add    BYTE PTR [rax],al
   14002e0cf:	add    BYTE PTR [rax],ah
   14002e0d1:	and    BYTE PTR [rax],ah
   14002e0d3:	and    BYTE PTR [rax],ah
   14002e0d5:	and    BYTE PTR [rax],ah
   14002e0d7:	and    BYTE PTR [rbx+rsi*2],bh
   14002e0da:	outs   dx,DWORD PTR ds:[rsi]
   14002e0db:	jne    0x14002e14f
   14002e0dd:	movsxd esp,DWORD PTR [rbp+0x3e]
   14002e0e0:	add    BYTE PTR [rax],al
   14002e0e2:	add    BYTE PTR [rax],al
   14002e0e4:	(bad)  
   14002e0e5:	or     al,BYTE PTR ds:[rax]
   14002e0e8:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
   14002e0ec:	gs cmp eax,0x66200022
   14002e0f2:	imul   ebp,DWORD PTR [rbp+riz*2+0x6e],0x3d656d61
   14002e0fa:	and    al,BYTE PTR [rax]
   14002e0fc:	add    BYTE PTR [rax],al
   14002e0fe:	add    BYTE PTR [rax],al
   14002e100:	and    BYTE PTR [rax],ah
   14002e102:	and    BYTE PTR [rax],ah
   14002e104:	and    BYTE PTR [rax],ah
   14002e106:	and    BYTE PTR [rax],ah
   14002e108:	cmp    al,0x6c
   14002e10a:	outs   dx,DWORD PTR ds:[rsi]
   14002e10b:	movsxd esp,DWORD PTR [rcx+0x74]
   14002e10e:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
   14002e115:	add    BYTE PTR [rax],al
   14002e117:	add    BYTE PTR [rax],ah
   14002e119:	outs   dx,BYTE PTR ds:[rsi]
   14002e11a:	jne    0x14002e189
   14002e11c:	gs jb  0x14002e194
   14002e11f:	jae    0x14002e15e
   14002e121:	and    bh,BYTE PTR [rcx+0x65]
   14002e124:	jae    0x14002e148
   14002e126:	add    BYTE PTR [rax],al
   14002e128:	and    BYTE PTR [rcx+0x64],ch
   14002e12b:	cmp    eax,0x22
   14002e130:	and    BYTE PTR [rax],ah
   14002e132:	and    BYTE PTR [rax],ah
   14002e134:	cmp    al,0x6d
   14002e136:	gs jae 0x14002e1ac
   14002e139:	(bad)  
   14002e13a:	add    BYTE PTR gs:[eax],al
   14002e13e:	add    BYTE PTR [rax],al
   14002e140:	cmp    al,0x2f
   14002e142:	outs   dx,BYTE PTR ds:[rsi]
   14002e143:	(bad)  
   14002e144:	ins    DWORD PTR es:[rdi],dx
   14002e145:	gs or  al,BYTE PTR ds:[rax]
   14002e149:	add    BYTE PTR [rax],al
   14002e14b:	add    BYTE PTR [rax],al
   14002e14d:	add    BYTE PTR [rax],al
   14002e14f:	add    BYTE PTR [rbx+riz*2],bh
   14002e152:	outs   dx,DWORD PTR ds:[rsi]
   14002e153:	outs   dx,BYTE PTR ds:[rsi]
   14002e154:	je     0x14002e1bb
   14002e156:	js     0x14002e1cc
   14002e158:	or     ah,BYTE PTR ds:[rax]
   14002e15b:	and    BYTE PTR [rax],ah
   14002e15d:	and    BYTE PTR [rsi+rbp*2],bh
   14002e160:	(bad)  
   14002e161:	ins    DWORD PTR es:[rdi],dx
   14002e162:	gs add BYTE PTR ds:[rax],al
   14002e166:	add    BYTE PTR [rax],al
   14002e168:	and    BYTE PTR [rax],ah
   14002e16a:	and    BYTE PTR [rax],ah
   14002e16c:	add    BYTE PTR [rax],al
   14002e16e:	add    BYTE PTR [rax],al
   14002e170:	jl     0x14002e172
   14002e172:	add    BYTE PTR [rax],al
   14002e174:	add    BYTE PTR [rax],al
   14002e176:	add    BYTE PTR [rax],al
   14002e178:	cmp    al,0x2f
   14002e17a:	fs gs jo 0x14002e1e3
   14002e17e:	outs   dx,BYTE PTR ds:[rsi]
   14002e17f:	fs outs dx,BYTE PTR gs:[rsi]
   14002e182:	movsxd ebp,DWORD PTR [rcx+0x65]
   14002e185:	jae    0x14002e1c5
   14002e187:	or     al,BYTE PTR [rax]
   14002e189:	add    BYTE PTR [rax],al
   14002e18b:	add    BYTE PTR [rdx],ah
   14002e18d:	(bad)  
   14002e18e:	or     al,BYTE PTR ds:[rax]
   14002e191:	add    BYTE PTR [rax],al
   14002e193:	add    BYTE PTR [rax],al
   14002e195:	add    BYTE PTR [rax],al
   14002e197:	add    BYTE PTR [rsp+riz*2],bh
   14002e19a:	gs jo  0x14002e202
   14002e19d:	outs   dx,BYTE PTR ds:[rsi]
   14002e19e:	fs outs dx,BYTE PTR gs:[rsi]
   14002e1a1:	movsxd edi,DWORD PTR [rcx+0x20]
   14002e1a4:	movsxd esp,DWORD PTR [rcx+0x74]
   14002e1a7:	(bad)  
   14002e1a8:	ins    BYTE PTR es:[rdi],dx
   14002e1a9:	outs   dx,DWORD PTR ds:[rsi]
   14002e1aa:	addr32 cmp eax,0x22
   14002e1b0:	cmp    al,0x64
   14002e1b2:	gs jo  0x14002e21a
   14002e1b5:	outs   dx,BYTE PTR ds:[rsi]
   14002e1b6:	fs outs dx,BYTE PTR gs:[rsi]
   14002e1b9:	movsxd ebp,DWORD PTR [rcx+0x65]
   14002e1bc:	jae    0x14002e1fc
   14002e1be:	or     al,BYTE PTR [rax]
   14002e1c0:	cmp    al,0x54
   14002e1c2:	push   rbx
   14002e1c3:	and    BYTE PTR [rsi+0x65],dh
   14002e1c6:	jb     0x14002e23b
   14002e1c8:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e32223d
   14002e1cf:	xor    DWORD PTR [rdx],esp
   14002e1d1:	add    BYTE PTR [rax],al
   14002e1d3:	add    BYTE PTR [rax],al
   14002e1d5:	add    BYTE PTR [rax],al
   14002e1d7:	add    BYTE PTR [rdi+rdi*1],bh
   14002e1da:	js     0x14002e249
   14002e1dc:	ins    BYTE PTR es:[rdi],dx
   14002e1dd:	and    BYTE PTR [rsi+0x65],dh
   14002e1e0:	jb     0x14002e255
   14002e1e2:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14002e1e9:	xor    BYTE PTR [rdx],ah
   14002e1eb:	and    BYTE PTR [rbp+0x6e],ah
   14002e1ee:	movsxd ebp,DWORD PTR [rdi+0x64]
   14002e1f1:	imul   ebp,DWORD PTR [rsi+0x67],0x7475223d
   14002e1f8:	sub    ax,0x2238
   14002e1fc:	(bad)  
   14002e1fd:	or     bh,BYTE PTR ds:[rcx+riz*1]
   14002e201:	rex.R
   14002e202:	rex.WRXB
   14002e203:	rex.XB push r12
   14002e205:	pop    rcx
   14002e206:	push   rax
   14002e207:	and    BYTE PTR [r11+rdx*2+0x3e],r10b
   14002e20c:	or     al,BYTE PTR [rax]
   14002e20e:	add    BYTE PTR [rax],al
   14002e210:	push   rcx
   14002e211:	je     0x14002e233
   14002e213:	je     0x14002e287
   14002e215:	(bad)  
   14002e216:	outs   dx,BYTE PTR ds:[rsi]
   14002e217:	jae    0x14002e285
   14002e219:	(bad)  
   14002e21a:	je     0x14002e285
   14002e21c:	outs   dx,DWORD PTR ds:[rsi]
   14002e21d:	outs   dx,BYTE PTR ds:[rsi]
   14002e21e:	and    BYTE PTR [rbx+0x6f],dh
   14002e221:	jne    0x14002e295
   14002e223:	movsxd esp,DWORD PTR [rbp+0x73]
   14002e226:	add    BYTE PTR [rax],al
   14002e228:	movsxd esi,DWORD PTR [rdx+0x0]
   14002e22b:	add    BYTE PTR [rsi+0x66],ah
   14002e22e:	add    BYTE PTR [rax],al
   14002e230:	jbe    0x14002e2a6
   14002e232:	add    BYTE PTR [rax],al
   14002e234:	ins    BYTE PTR es:[rdi],dx
   14002e235:	data16 add BYTE PTR [rax],al
   14002e238:	je     0x14002e29b
   14002e23a:	(bad)  
   14002e23b:	add    BYTE PTR [rdx+0x73],ah
   14002e23e:	add    BYTE PTR [rax],al
   14002e240:	(bad)  
   14002e241:	gs ins BYTE PTR es:[rdi],dx
   14002e243:	add    BYTE PTR [rax],al
   14002e245:	add    BYTE PTR [rax],al
   14002e247:	add    BYTE PTR [rbp+0x72],dh
   14002e24a:	outs   dx,BYTE PTR ds:[rsi]
   14002e24b:	cmp    dh,BYTE PTR [rdx+rsi*2+0x6f]
   14002e24f:	ins    BYTE PTR es:[rdi],dx
   14002e250:	ins    BYTE PTR es:[rdi],dx
   14002e251:	je     0x14002e2b8
   14002e253:	movsxd ebp,DWORD PTR [rax+0x3a]
   14002e256:	outs   dx,BYTE PTR ds:[rsi]
   14002e257:	(bad)  
   14002e258:	ins    DWORD PTR es:[rdi],dx
   14002e259:	gs jae 0x14002e296
   14002e25c:	je     0x14002e2d1
   14002e25e:	cmp    ah,BYTE PTR [rdi+rbp*2+0x63]
   14002e262:	jne    0x14002e2d1
   14002e264:	outs   dx,BYTE PTR gs:[rsi]
   14002e266:	je     0x14002e2a2
   14002e268:	xor    DWORD PTR [rsi],ebp
   14002e26a:	xor    BYTE PTR [rax],al
   14002e26c:	add    BYTE PTR [rax],al
   14002e26e:	add    BYTE PTR [rax],al
   14002e270:	jne    0x14002e2e4
   14002e272:	outs   dx,BYTE PTR ds:[rsi]
   14002e273:	cmp    ch,BYTE PTR [rdi+0x61]
   14002e276:	jae    0x14002e2e1
   14002e278:	jae    0x14002e2b4
   14002e27a:	outs   dx,BYTE PTR ds:[rsi]
   14002e27b:	(bad)  
   14002e27c:	ins    DWORD PTR es:[rdi],dx
   14002e27d:	gs jae 0x14002e2ba
   14002e280:	je     0x14002e2e5
   14002e282:	cmp    bh,BYTE PTR [rax+0x6c]
   14002e285:	imul   esp,DWORD PTR [rsi+0x66],0x636f643a
   14002e28c:	jne    0x14002e2fb
   14002e28e:	outs   dx,BYTE PTR gs:[rsi]
   14002e290:	je     0x14002e2cc
   14002e292:	xor    DWORD PTR [rsi],ebp
   14002e294:	xor    al,BYTE PTR [rax]
   14002e296:	add    BYTE PTR [rax],al
   14002e298:	jne    0x14002e30c
   14002e29a:	outs   dx,BYTE PTR ds:[rsi]
   14002e29b:	cmp    ch,BYTE PTR [rdi+0x61]
   14002e29e:	jae    0x14002e309
   14002e2a0:	jae    0x14002e2dc
   14002e2a2:	outs   dx,BYTE PTR ds:[rsi]
   14002e2a3:	(bad)  
   14002e2a4:	ins    DWORD PTR es:[rdi],dx
   14002e2a5:	gs jae 0x14002e2e2
   14002e2a8:	je     0x14002e30d
   14002e2aa:	cmp    bh,BYTE PTR [rax+0x6c]
   14002e2ad:	imul   esp,DWORD PTR [rsi+0x66],0x636f643a
   14002e2b4:	jne    0x14002e323
   14002e2b6:	outs   dx,BYTE PTR gs:[rsi]
   14002e2b8:	je     0x14002e2f4
   14002e2ba:	xor    DWORD PTR [rsi],ebp
   14002e2bc:	xor    DWORD PTR [rax],eax
   14002e2be:	add    BYTE PTR [rax],al
   14002e2c0:	je     0x14002e334
   14002e2c2:	outs   dx,DWORD PTR ds:[rsi]
   14002e2c3:	ins    BYTE PTR es:[rdi],dx
   14002e2c4:	ins    BYTE PTR es:[rdi],dx
   14002e2c5:	je     0x14002e32c
   14002e2c7:	movsxd ebp,DWORD PTR [rax+0x3a]
   14002e2ca:	jo     0x14002e338
   14002e2cc:	jne    0x14002e340
   14002e2ce:	(bad)  
   14002e2cf:	ins    BYTE PTR es:[rdi],dx
	...
   14002e2d8:	js     0x14002e307
   14002e2da:	addr32 gs je 0x14002e352
   14002e2de:	gs js  0x14002e355
   14002e2e1:	sub    eax,0x76657270
   14002e2e6:	imul   ebp,DWORD PTR [rdi+0x75],0x736d2d73
   14002e2ed:	movsxd esi,DWORD PTR [eax+edi*2+0x74]
   14002e2f2:	add    BYTE PTR [rax],al
   14002e2f4:	add    BYTE PTR [rax],al
   14002e2f6:	add    BYTE PTR [rax],al
   14002e2f8:	js     0x14002e327
   14002e2fa:	addr32 gs je 0x14002e372
   14002e2fe:	gs js  0x14002e375
   14002e301:	sub    eax,0x6367736d
   14002e306:	je     0x14002e380
   14002e308:	je     0x14002e30a
   14002e30a:	add    BYTE PTR [rax],al
   14002e30c:	add    BYTE PTR [rax],al
   14002e30e:	add    BYTE PTR [rax],al
   14002e310:	js     0x14002e33f
   14002e312:	je     0x14002e386
   14002e314:	outs   dx,DWORD PTR ds:[rsi]
   14002e315:	ins    BYTE PTR es:[rdi],dx
   14002e316:	ins    BYTE PTR es:[rdi],dx
   14002e317:	je     0x14002e37e
   14002e319:	movsxd ebp,DWORD PTR [rax+0x2d]
   14002e31c:	fs gs jae 0x14002e389
   14002e320:	outs   dx,BYTE PTR ds:[esi]
   14002e322:	gs jb  0x14002e352
   14002e325:	jne    0x14002e390
   14002e327:	add    BYTE PTR [rax+0x2d],bh
   14002e32a:	fs jne 0x14002e39a
   14002e32d:	ins    DWORD PTR es:[rdi],dx
   14002e32e:	jns    0x14002e330
   14002e330:	js     0x14002e35f
   14002e332:	addr32 gs je 0x14002e3aa
   14002e336:	gs js  0x14002e3ad
   14002e339:	sub    eax,0x72756c70
   14002e33e:	(bad)  
   14002e33f:	ins    BYTE PTR es:[rdi],dx
   14002e340:	jae    0x14002e342
   14002e342:	add    BYTE PTR [rax],al
   14002e344:	add    BYTE PTR [rax],al
   14002e346:	add    BYTE PTR [rax],al
   14002e348:	js     0x14002e377
   14002e34a:	je     0x14002e3be
   14002e34c:	outs   dx,DWORD PTR ds:[rsi]
   14002e34d:	ins    BYTE PTR es:[rdi],dx
   14002e34e:	ins    BYTE PTR es:[rdi],dx
   14002e34f:	je     0x14002e3b6
   14002e351:	movsxd ebp,DWORD PTR [rax+0x2d]
   14002e354:	ins    BYTE PTR es:[rdi],dx
   14002e355:	imul   ebp,DWORD PTR [rsi+0x67],0x74736975
   14002e35c:	sub    eax,0x746e6f63
   14002e361:	gs js  0x14002e3d8
	...
   14002e370:	(bad)  
   14002e371:	(bad)  
   14002e372:	add    BYTE PTR [rax],al
   14002e374:	add    BYTE PTR [rax],al
   14002e376:	add    BYTE PTR [rax],al
   14002e378:	rex loop 0x14002e37d
   14002e37b:	rex add DWORD PTR [rax],eax
   14002e37e:	add    BYTE PTR [rax],al
   14002e380:	or     BYTE PTR [rdx+0x0],ah
   14002e383:	add    BYTE PTR [rax],al
   14002e385:	add    BYTE PTR [rax],al
   14002e387:	add    BYTE PTR [rdx+riz*8],bh
   14002e38a:	add    al,BYTE PTR [rax+0x1]
   14002e38d:	add    BYTE PTR [rax],al
   14002e38f:	add    BYTE PTR [rcx],cl
   14002e391:	je     0x14002e393
   14002e393:	add    BYTE PTR [rax],al
   14002e395:	add    BYTE PTR [rax],al
   14002e397:	add    BYTE PTR [rax],bh
   14002e399:	loop   0x14002e39d
   14002e39b:	rex add DWORD PTR [rax],eax
   14002e39e:	add    BYTE PTR [rax],al
   14002e3a0:	or     ch,BYTE PTR [rsi+0x0]
   14002e3a3:	add    BYTE PTR [rax],al
   14002e3a5:	add    BYTE PTR [rax],al
   14002e3a7:	add    BYTE PTR [rdx+riz*8],dh
   14002e3aa:	add    al,BYTE PTR [rax+0x1]
   14002e3ad:	add    BYTE PTR [rax],al
   14002e3af:	add    BYTE PTR [rbx],cl
   14002e3b1:	jbe    0x14002e3b3
   14002e3b3:	add    BYTE PTR [rax],al
   14002e3b5:	add    BYTE PTR [rax],al
   14002e3b7:	add    BYTE PTR [rax],dh
   14002e3b9:	loop   0x14002e3bd
   14002e3bb:	rex add DWORD PTR [rax],eax
   14002e3be:	add    BYTE PTR [rax],al
   14002e3c0:	or     al,0x66
   14002e3c2:	add    BYTE PTR [rax],al
   14002e3c4:	add    BYTE PTR [rax],al
   14002e3c6:	add    BYTE PTR [rax],al
   14002e3c8:	sub    al,0xe2
   14002e3ca:	add    al,BYTE PTR [rax+0x1]
   14002e3cd:	add    BYTE PTR [rax],al
   14002e3cf:	add    BYTE PTR [rip+0x72],cl        # 0x14002e447
   14002e3d5:	add    BYTE PTR [rax],al
   14002e3d7:	add    BYTE PTR [rax],ch
   14002e3d9:	loop   0x14002e3dd
   14002e3db:	rex add DWORD PTR [rax],eax
   14002e3de:	add    BYTE PTR [rax],al
   14002e3e0:	movsxd esi,DWORD PTR [rax+0x70]
   14002e3e3:	add    BYTE PTR [rax],al
   14002e3e5:	add    BYTE PTR [rax],al
   14002e3e7:	add    BYTE PTR [rax+0x6c],dh
   14002e3ea:	(bad)  
   14002e3eb:	imul   ebp,DWORD PTR [rsi+0x74],0x747865
   14002e3f2:	add    BYTE PTR [rax],al
   14002e3f4:	movsxd eax,DWORD PTR [rax]
   14002e3f6:	add    BYTE PTR [rax],al
   14002e3f8:	cmp    al,0x70
   14002e3fa:	push   0x3d646920
   14002e3ff:	and    dh,BYTE PTR [rax+0x68]
   14002e402:	and    eax,0x63202231
   14002e407:	je     0x14002e482
   14002e409:	jo     0x14002e470
   14002e40b:	cmp    eax,0x632d7822
   14002e410:	push   0x2232252d
   14002e415:	ds pop rsp
   14002e417:	and    eax,0x702f3c33
   14002e41c:	push   0x3c00003e
   14002e421:	(bad)  
   14002e422:	je     0x14002e496
   14002e424:	outs   dx,DWORD PTR ds:[rsi]
   14002e425:	ins    BYTE PTR es:[rdi],dx
   14002e426:	ins    BYTE PTR es:[rdi],dx
   14002e427:	je     0x14002e48e
   14002e429:	movsxd ebp,DWORD PTR [rax+0x3a]
   14002e42c:	add    BYTE PTR [rax],al
   14002e42e:	add    BYTE PTR [rax],al
   14002e430:	cmp    al,0x74
   14002e432:	jb     0x14002e4a3
   14002e434:	ins    BYTE PTR es:[rdi],dx
   14002e435:	ins    BYTE PTR es:[rdi],dx
   14002e436:	je     0x14002e49d
   14002e438:	movsxd ebp,DWORD PTR [rax+0x3a]
   14002e43b:	add    BYTE PTR [rax],al
   14002e43d:	add    BYTE PTR [rax],al
   14002e43f:	add    BYTE PTR [rsi+rbp*2],bh
   14002e442:	outs   dx,DWORD PTR ds:[rsi]
   14002e443:	je     0x14002e4aa
   14002e445:	and    BYTE PTR [rsi+0x72],ah
   14002e448:	outs   dx,DWORD PTR ds:[rsi]
   14002e449:	ins    DWORD PTR es:[rdi],dx
   14002e44a:	cmp    eax,0x61727422
   14002e44f:	outs   dx,BYTE PTR ds:[rsi]
   14002e450:	jae    0x14002e4be
   14002e452:	(bad)  
   14002e453:	je     0x14002e4c4
   14002e455:	jb     0x14002e479
   14002e457:	add    BYTE PTR ds:[rax],al
   14002e45a:	add    BYTE PTR [rax],al
   14002e45c:	add    BYTE PTR [rax],al
   14002e45e:	add    BYTE PTR [rax],al
   14002e460:	cmp    al,0x2f
   14002e462:	outs   dx,BYTE PTR ds:[rsi]
   14002e463:	outs   dx,DWORD PTR ds:[rsi]
   14002e464:	je     0x14002e4cb
   14002e466:	or     al,BYTE PTR ds:[rax]
   14002e469:	add    BYTE PTR [rax],al
   14002e46b:	add    BYTE PTR [rax],al
   14002e46d:	add    BYTE PTR [rax],al
   14002e46f:	add    BYTE PTR [rsi+rbp*2],bh
   14002e472:	outs   dx,DWORD PTR ds:[rsi]
   14002e473:	je     0x14002e4da
   14002e475:	and    BYTE PTR [rcx+0x6e],ah
   14002e478:	outs   dx,BYTE PTR ds:[rsi]
   14002e479:	outs   dx,DWORD PTR ds:[rsi]
   14002e47a:	je     0x14002e4dd
   14002e47c:	je     0x14002e4e3
   14002e47e:	jae    0x14002e4bd
   14002e480:	and    dh,BYTE PTR [rbx+0x6f]
   14002e483:	jne    0x14002e4f7
   14002e485:	movsxd esp,DWORD PTR [rbp+0x22]
   14002e488:	and    BYTE PTR [rsi+0x72],ah
   14002e48b:	outs   dx,DWORD PTR ds:[rsi]
   14002e48c:	ins    DWORD PTR es:[rdi],dx
   14002e48d:	cmp    eax,0x76656422
   14002e492:	gs ins BYTE PTR es:[rdi],dx
   14002e494:	outs   dx,DWORD PTR ds:[rsi]
   14002e495:	jo     0x14002e4fc
   14002e497:	jb     0x14002e4bb
   14002e499:	add    BYTE PTR ds:[rax],al
   14002e49c:	add    BYTE PTR [rax],al
   14002e49e:	add    BYTE PTR [rax],al
   14002e4a0:	cmp    al,0x2f
   14002e4a2:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14002e4a5:	je     0x14002e50c
   14002e4a7:	js     0x14002e51d
   14002e4a9:	ds cmp al,0x2f
   14002e4ac:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14002e4af:	je     0x14002e516
   14002e4b1:	js     0x14002e527
   14002e4b3:	sub    eax,0x756f7267
   14002e4b8:	jo     0x14002e4f8
   14002e4ba:	or     al,BYTE PTR [rax]
   14002e4bc:	and    bh,BYTE PTR [rsi]
   14002e4be:	add    BYTE PTR [rax],al
   14002e4c0:	cmp    al,0x63
   14002e4c2:	outs   dx,DWORD PTR ds:[rsi]
   14002e4c3:	outs   dx,BYTE PTR ds:[rsi]
   14002e4c4:	je     0x14002e52b
   14002e4c6:	js     0x14002e53c
   14002e4c8:	sub    eax,0x756f7267
   14002e4cd:	jo     0x14002e50d
   14002e4cf:	cmp    al,0x63
   14002e4d1:	outs   dx,DWORD PTR ds:[rsi]
   14002e4d2:	outs   dx,BYTE PTR ds:[rsi]
   14002e4d3:	je     0x14002e53a
   14002e4d5:	js     0x14002e54b
   14002e4d7:	and    BYTE PTR [rbx+0x6f],ah
   14002e4da:	outs   dx,BYTE PTR ds:[rsi]
   14002e4db:	je     0x14002e542
   14002e4dd:	js     0x14002e553
   14002e4df:	sub    eax,0x65707974
   14002e4e4:	cmp    eax,0xd000022
   14002e4e9:	add    BYTE PTR [rax],al
   14002e4eb:	add    BYTE PTR [rax],al
   14002e4ed:	add    BYTE PTR [rax],al
   14002e4ef:	add    BYTE PTR [rbx+riz*2],bh
   14002e4f2:	outs   dx,DWORD PTR ds:[rsi]
   14002e4f3:	outs   dx,BYTE PTR ds:[rsi]
   14002e4f4:	je     0x14002e55b
   14002e4f6:	js     0x14002e56c
   14002e4f8:	and    BYTE PTR [rbx+0x6f],ah
   14002e4fb:	outs   dx,BYTE PTR ds:[rsi]
   14002e4fc:	je     0x14002e563
   14002e4fe:	js     0x14002e574
   14002e500:	sub    eax,0x65707974
   14002e505:	cmp    eax,0x6e696c22
   14002e50a:	outs   dx,BYTE PTR gs:[rsi]
   14002e50c:	jne    0x14002e57b
   14002e50e:	(bad)  
   14002e50f:	gs jb  0x14002e534
   14002e512:	add    BYTE PTR ds:[rax],al
   14002e515:	add    BYTE PTR [rax],al
   14002e517:	add    BYTE PTR [rdi+rbp*1],bh
   14002e51a:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14002e51d:	je     0x14002e584
   14002e51f:	js     0x14002e595
   14002e521:	add    BYTE PTR ds:[rax],al
   14002e524:	add    BYTE PTR [rax],al
   14002e526:	add    BYTE PTR [rax],al
   14002e528:	cmp    al,0x63
   14002e52a:	outs   dx,DWORD PTR ds:[rsi]
   14002e52b:	outs   dx,BYTE PTR ds:[rsi]
   14002e52c:	je     0x14002e593
   14002e52e:	js     0x14002e5a4
   14002e530:	and    BYTE PTR [rbx+0x6f],ah
   14002e533:	outs   dx,BYTE PTR ds:[rsi]
   14002e534:	je     0x14002e59b
   14002e536:	js     0x14002e5ac
   14002e538:	sub    eax,0x65707974
   14002e53d:	cmp    eax,0x756f7322
   14002e542:	jb     0x14002e5a7
   14002e544:	imul   bp,WORD PTR gs:[rbp+riz*2+0x22],0x3e
   14002e54c:	add    BYTE PTR [rax],al
   14002e54e:	add    BYTE PTR [rax],al
   14002e550:	cmp    al,0x63
   14002e552:	outs   dx,DWORD PTR ds:[rsi]
   14002e553:	outs   dx,BYTE PTR ds:[rsi]
   14002e554:	je     0x14002e5bb
   14002e556:	js     0x14002e5cc
   14002e558:	sub    eax,0x756f7267
   14002e55d:	jo     0x14002e57f
   14002e55f:	jo     0x14002e5d6
   14002e561:	jb     0x14002e5d3
   14002e563:	outs   dx,DWORD PTR ds:[rsi]
   14002e564:	jae    0x14002e5cb
   14002e566:	cmp    eax,0x636f6c22
   14002e56b:	(bad)  
   14002e56c:	je     0x14002e5d7
   14002e56e:	outs   dx,DWORD PTR ds:[rsi]
   14002e56f:	outs   dx,BYTE PTR ds:[rsi]
   14002e570:	and    bh,BYTE PTR [rsi]
	...
   14002e57e:	add    BYTE PTR [rax],al
   14002e580:	cmp    al,0x63
   14002e582:	outs   dx,DWORD PTR ds:[rsi]
   14002e583:	outs   dx,BYTE PTR ds:[rsi]
   14002e584:	je     0x14002e5eb
   14002e586:	js     0x14002e5fc
   14002e588:	sub    eax,0x756f7267
   14002e58d:	jo     0x14002e5af
   14002e58f:	jo     0x14002e606
   14002e591:	jb     0x14002e603
   14002e593:	outs   dx,DWORD PTR ds:[rsi]
   14002e594:	jae    0x14002e5fb
   14002e596:	cmp    eax,0x636f6c22
   14002e59b:	(bad)  
   14002e59c:	je     0x14002e607
   14002e59e:	outs   dx,DWORD PTR ds:[rsi]
   14002e59f:	outs   dx,BYTE PTR ds:[rsi]
   14002e5a0:	and    bh,BYTE PTR [rsi]
   14002e5a2:	cmp    al,0x63
   14002e5a4:	outs   dx,DWORD PTR ds:[rsi]
   14002e5a5:	outs   dx,BYTE PTR ds:[rsi]
   14002e5a6:	je     0x14002e60d
   14002e5a8:	js     0x14002e61e
   14002e5aa:	and    BYTE PTR [rbx+0x6f],ah
   14002e5ad:	outs   dx,BYTE PTR ds:[rsi]
   14002e5ae:	je     0x14002e615
   14002e5b0:	js     0x14002e626
   14002e5b2:	sub    eax,0x65707974
   14002e5b7:	cmp    eax,0x6e696c22
   14002e5bc:	outs   dx,BYTE PTR gs:[rsi]
   14002e5be:	jne    0x14002e62d
   14002e5c0:	(bad)  
   14002e5c1:	gs jb  0x14002e5e6
   14002e5c4:	add    BYTE PTR ds:[rax],al
   14002e5c7:	add    al,bh
   14002e5c9:	out    dx,eax
   14002e5ca:	add    al,BYTE PTR [rax+0x1]
   14002e5cd:	add    BYTE PTR [rax],al
   14002e5cf:	add    al,dh
   14002e5d1:	cmp    eax,0x14002
   14002e5d6:	add    BYTE PTR [rax],al
   14002e5d8:	(bad)  
   14002e5d9:	xchg   ebp,eax
   14002e5da:	add    al,BYTE PTR [rax+0x1]
   14002e5dd:	add    BYTE PTR [rax],al
   14002e5df:	add    BYTE PTR [rdx*4+0x14002],cl
   14002e5e6:	add    BYTE PTR [rax],al
   14002e5e8:	adc    dl,BYTE PTR [rbp+0x14002]
   14002e5ee:	add    BYTE PTR [rax],al
   14002e5f0:	push   rax
   14002e5f1:	add    al,BYTE PTR ds:[rax+0x1]
	...
   14002e5fd:	add    BYTE PTR [rax],al
   14002e5ff:	add    al,dl
   14002e601:	out    dx,eax
   14002e602:	add    al,BYTE PTR [rax+0x1]
   14002e605:	add    BYTE PTR [rax],al
   14002e607:	add    al,al
   14002e609:	cmp    eax,0x14002
   14002e60e:	add    BYTE PTR [rax],al
   14002e610:	fcom   QWORD PTR [rdx+rax*1+0x140]
   14002e617:	add    dl,ah
   14002e619:	xchg   esp,eax
   14002e61a:	add    al,BYTE PTR [rax+0x1]
   14002e61d:	add    BYTE PTR [rax],al
   14002e61f:	add    al,ch
   14002e621:	xchg   esp,eax
   14002e622:	add    al,BYTE PTR [rax+0x1]
   14002e625:	add    BYTE PTR [rax],al
   14002e627:	add    dh,ch
   14002e629:	xchg   esp,eax
   14002e62a:	add    al,BYTE PTR [rax+0x1]
   14002e62d:	add    BYTE PTR [rax],al
   14002e62f:	add    ah,dh
   14002e631:	xchg   esp,eax
   14002e632:	add    al,BYTE PTR [rax+0x1]
   14002e635:	add    BYTE PTR [rax],al
   14002e637:	add    dl,bh
   14002e639:	xchg   esp,eax
   14002e63a:	add    al,BYTE PTR [rax+0x1]
   14002e63d:	add    BYTE PTR [rax],al
   14002e63f:	add    BYTE PTR [rax],al
   14002e641:	xchg   ebp,eax
   14002e642:	add    al,BYTE PTR [rax+0x1]
   14002e645:	add    BYTE PTR [rax],al
   14002e647:	add    BYTE PTR [rax],ah
   14002e649:	add    al,BYTE PTR ds:[rax+0x1]
   14002e64d:	add    BYTE PTR [rax],al
   14002e64f:	add    BYTE PTR [rax+0x14002ef],ch
   14002e655:	add    BYTE PTR [rax],al
   14002e657:	add    BYTE PTR [rax],dh
   14002e659:	add    al,BYTE PTR ds:[rax+0x1]
   14002e65d:	add    BYTE PTR [rax],al
   14002e65f:	add    dh,dl
   14002e661:	xchg   esp,eax
   14002e662:	add    al,BYTE PTR [rax+0x1]
   14002e665:	add    BYTE PTR [rax],al
   14002e667:	add    BYTE PTR [rax],al
   14002e669:	add    al,BYTE PTR ds:[rax+0x1]
   14002e66d:	add    BYTE PTR [rax],al
   14002e66f:	add    BYTE PTR [rax+0x14002ef],al
   14002e675:	add    BYTE PTR [rax],al
   14002e677:	add    BYTE PTR [rax],dl
   14002e679:	add    al,BYTE PTR ds:[rax+0x1]
   14002e67d:	add    BYTE PTR [rax],al
   14002e67f:	add    dl,cl
   14002e681:	xchg   esp,eax
   14002e682:	add    al,BYTE PTR [rax+0x1]
   14002e685:	add    BYTE PTR [rax],al
   14002e687:	add    al,dl
   14002e689:	xchg   esp,eax
   14002e68a:	add    al,BYTE PTR [rax+0x1]
   14002e68d:	add    BYTE PTR [rax],al
   14002e68f:	add    al,dl
   14002e691:	cmp    eax,0x14002
	...
   14002e69e:	add    BYTE PTR [rax],al
   14002e6a0:	pop    rax
   14002e6a1:	out    dx,eax
   14002e6a2:	add    al,BYTE PTR [rax+0x1]
   14002e6a5:	add    BYTE PTR [rax],al
   14002e6a7:	add    BYTE PTR [rax],dh
   14002e6a9:	rex.XB add al,BYTE PTR [r8+0x1]
   14002e6ad:	add    BYTE PTR [rax],al
   14002e6af:	add    BYTE PTR [rdx+0x1400294],bl
   14002e6b5:	add    BYTE PTR [rax],al
   14002e6b7:	add    BYTE PTR [rax+0x1400294],ah
   14002e6bd:	add    BYTE PTR [rax],al
   14002e6bf:	add    al,al
   14002e6c1:	sub    DWORD PTR [rdx],eax
   14002e6c3:	rex add DWORD PTR [rax],eax
   14002e6c6:	add    BYTE PTR [rax],al
   14002e6c8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002e6c9:	xchg   esp,eax
   14002e6ca:	add    al,BYTE PTR [rax+0x1]
   14002e6cd:	add    BYTE PTR [rax],al
   14002e6cf:	add    BYTE PTR [rsp+rdx*4+0x14002],ch
   14002e6d6:	add    BYTE PTR [rax],al
   14002e6d8:	adc    BYTE PTR [rdx+rax*1+0x40],al
   14002e6dc:	add    DWORD PTR [rax],eax
   14002e6de:	add    BYTE PTR [rax],al
   14002e6e0:	push   rax
   14002e6e1:	outs   dx,BYTE PTR ds:[rsi]
   14002e6e2:	add    al,BYTE PTR [rax+0x1]
   14002e6e5:	add    BYTE PTR [rax],al
   14002e6e7:	add    BYTE PTR [rax+0x1400231],ah
   14002e6ed:	add    BYTE PTR [rax],al
   14002e6ef:	add    BYTE PTR [rdx+0x1400294],dh
   14002e6f5:	add    BYTE PTR [rax],al
   14002e6f7:	add    BYTE PTR [rax+0x1400294],bh
   14002e6fd:	add    BYTE PTR [rax],al
   14002e6ff:	add    BYTE PTR [rsi+0x1400294],bh
   14002e705:	add    BYTE PTR [rax],al
   14002e707:	add    ah,al
   14002e709:	xchg   esp,eax
   14002e70a:	add    al,BYTE PTR [rax+0x1]
   14002e70d:	add    BYTE PTR [rax],al
   14002e70f:	add    BYTE PTR [rax+0x14002eb],al
   14002e715:	add    BYTE PTR [rax],al
   14002e717:	add    al,ah
   14002e719:	cmp    eax,0x14002
   14002e71e:	add    BYTE PTR [rax],al
   14002e720:	mov    ss,WORD PTR [rdx+rax*1+0x140]
   14002e727:	add    BYTE PTR [rsp+rdx*4+0x14002],dl
   14002e72e:	add    BYTE PTR [rax],al
   14002e730:	lock (bad) 
   14002e732:	add    al,BYTE PTR [rax+0x1]
   14002e735:	add    BYTE PTR [rax],al
   14002e737:	add    BYTE PTR [rax+0x3e],al
   14002e73a:	add    al,BYTE PTR [rax+0x1]
   14002e73d:	add    BYTE PTR [rax],al
   14002e73f:	add    BYTE PTR [rax+0x4d],bl
   14002e742:	rex.WR and BYTE PTR [rbp+0x72],r12b
   14002e746:	jb     0x14002e7b7
   14002e748:	jb     0x14002e784
   14002e74a:	and    BYTE PTR [rax+0x61],dl
   14002e74d:	jb     0x14002e7c2
   14002e74f:	and    BYTE PTR gs:[rbp+0x72],ah
   14002e753:	jb     0x14002e7c4
   14002e755:	jb     0x14002e777
   14002e757:	(bad)  
   14002e758:	je     0x14002e77a
   14002e75a:	ins    BYTE PTR es:[rdi],dx
   14002e75b:	imul   ebp,DWORD PTR [rsi+0x65],0x2c642520
   14002e762:	and    BYTE PTR [rbx+0x6f],ah
   14002e765:	ins    BYTE PTR es:[rdi],dx
   14002e766:	jne    0x14002e7d5
   14002e768:	outs   dx,BYTE PTR ds:[rsi]
   14002e769:	and    BYTE PTR [rip+0x25282064],ah        # 0x1652b07d3
   14002e76f:	jae    0x14002e79a
   14002e771:	or     al,BYTE PTR cs:[rax]
   14002e774:	js     0x14002e7a3
   14002e776:	movsxd ebp,DWORD PTR [rax+0x2d]
   14002e779:	add    BYTE PTR [rax],al
   14002e77b:	add    BYTE PTR [rbx+0x74],ah
   14002e77e:	jns    0x14002e7f0
   14002e780:	add    BYTE PTR gs:[rax],al
   14002e783:	add    BYTE PTR [rax+0x68],dh
   14002e786:	add    BYTE PTR [rax],al
   14002e788:	data16 jb 0x14002e7fa
   14002e78b:	ins    DWORD PTR es:[rdi],dx
   14002e78c:	add    BYTE PTR [rax],al
   14002e78e:	add    BYTE PTR [rax],al
   14002e790:	fs gs jbe 0x14002e7f9
   14002e794:	ins    BYTE PTR es:[rdi],dx
   14002e795:	outs   dx,DWORD PTR ds:[rsi]
   14002e796:	jo     0x14002e7fd
   14002e798:	jb     0x14002e79a
   14002e79a:	add    BYTE PTR [rax],al
   14002e79c:	add    BYTE PTR [rax],al
   14002e79e:	add    BYTE PTR [rax],al
   14002e7a0:	(bad)  
   14002e7a1:	outs   dx,BYTE PTR ds:[rsi]
   14002e7a2:	outs   dx,BYTE PTR ds:[rsi]
   14002e7a3:	outs   dx,DWORD PTR ds:[rsi]
   14002e7a4:	je     0x14002e807
   14002e7a6:	je     0x14002e80d
   14002e7a8:	jae    0x14002e7aa
   14002e7aa:	add    BYTE PTR [rax],al
   14002e7ac:	outs   dx,BYTE PTR ds:[rsi]
   14002e7ad:	outs   dx,DWORD PTR ds:[rsi]
   14002e7ae:	je     0x14002e815
	...
   14002e7b8:	jae    0x14002e829
   14002e7ba:	jne    0x14002e82e
   14002e7bc:	movsxd esp,DWORD PTR [rbp+0x66]
   14002e7bf:	imul   ebp,DWORD PTR [rbp+riz*2+0x0],0x0
   14002e7c7:	add    BYTE PTR [rcx+rbp*2+0x6e],ch
   14002e7cb:	outs   dx,BYTE PTR gs:[rsi]
   14002e7cd:	jne    0x14002e83c
   14002e7cf:	(bad)  
   14002e7d0:	gs jb  0x14002e7d3
   14002e7d3:	add    BYTE PTR [rax],al
   14002e7d5:	add    BYTE PTR [rax],al
   14002e7d7:	add    BYTE PTR [rbx+0x6f],ah
   14002e7da:	outs   dx,BYTE PTR ds:[rsi]
   14002e7db:	je     0x14002e842
   14002e7dd:	js     0x14002e853
   14002e7df:	sub    eax,0x65707974
   14002e7e4:	add    BYTE PTR [rax],al
   14002e7e6:	add    BYTE PTR [rax],al
   14002e7e8:	jo     0x14002e85f
   14002e7ea:	jb     0x14002e85c
   14002e7ec:	outs   dx,DWORD PTR ds:[rsi]
   14002e7ed:	jae    0x14002e854
   14002e7ef:	add    BYTE PTR [rbx+0x6f],ah
   14002e7f2:	outs   dx,BYTE PTR ds:[rsi]
   14002e7f3:	je     0x14002e85a
   14002e7f5:	js     0x14002e86b
   14002e7f7:	sub    eax,0x756f7267
   14002e7fc:	jo     0x14002e7fe
   14002e7fe:	add    BYTE PTR [rax],al
   14002e800:	(bad)  
   14002e801:	ins    BYTE PTR es:[rdi],dx
   14002e802:	je     0x14002e831
   14002e804:	je     0x14002e878
   14002e806:	(bad)  
   14002e807:	outs   dx,BYTE PTR ds:[rsi]
   14002e808:	jae    0x14002e80a
   14002e80a:	add    BYTE PTR [rax],al
   14002e80c:	add    BYTE PTR [rax],al
   14002e80e:	add    BYTE PTR [rax],al
   14002e810:	(bad)  
   14002e811:	jo     0x14002e883
   14002e813:	jb     0x14002e884
   14002e815:	jbe    0x14002e87c
   14002e817:	add    BYTE PTR fs:[rax],al
   14002e81a:	add    BYTE PTR [rax],al
   14002e81c:	pop    rdi
   14002e81d:	ins    DWORD PTR es:[rdi],dx
   14002e81e:	jae    0x14002e887
	...
   14002e828:	je     0x14002e89c
   14002e82a:	(bad)  
   14002e82b:	outs   dx,BYTE PTR ds:[rsi]
   14002e82c:	jae    0x14002e85b
   14002e82e:	jne    0x14002e89e
   14002e830:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x0
   14002e838:	je     0x14002e8ac
   14002e83a:	(bad)  
   14002e83b:	outs   dx,BYTE PTR ds:[rsi]
   14002e83c:	jae    0x14002e8aa
   14002e83e:	(bad)  
   14002e83f:	je     0x14002e8a6
   14002e841:	add    BYTE PTR [rax],al
   14002e843:	add    BYTE PTR [rsi+0x6f],ch
   14002e846:	add    BYTE PTR [rax],al
   14002e848:	jb     0x14002e8af
   14002e84a:	jae    0x14002e8ba
   14002e84c:	(bad)  
   14002e84d:	ins    DWORD PTR es:[rdi],dx
   14002e84e:	add    BYTE PTR gs:[rdx+0x65],dh
   14002e852:	jae    0x14002e8c8
   14002e854:	jns    0x14002e8c6
   14002e856:	add    BYTE PTR gs:[rdi+0x72],ah
   14002e85a:	outs   dx,DWORD PTR ds:[rsi]
   14002e85b:	jne    0x14002e8cd
   14002e85d:	add    BYTE PTR [rax],al
   14002e85f:	add    BYTE PTR [rbp+0x6e],ah
   14002e862:	add    BYTE PTR [rax],al
   14002e864:	add    BYTE PTR [rax],al
   14002e866:	add    BYTE PTR [rax],al
   14002e868:	jae    0x14002e8d9
   14002e86a:	jne    0x14002e8de
   14002e86c:	movsxd esp,DWORD PTR [rbp+0x2d]
   14002e86f:	ins    BYTE PTR es:[rdi],dx
   14002e870:	(bad)  
   14002e871:	outs   dx,BYTE PTR ds:[rsi]
   14002e872:	addr32 jne 0x14002e8d6
   14002e875:	add    BYTE PTR gs:[ecx+eiz*2+0x72],dh
   14002e87b:	addr32 gs je 0x14002e8ac
   14002e87f:	ins    BYTE PTR es:[rdi],dx
   14002e880:	(bad)  
   14002e881:	outs   dx,BYTE PTR ds:[rsi]
   14002e882:	addr32 jne 0x14002e8e6
   14002e885:	add    BYTE PTR gs:[edi+0x72],ch
   14002e88a:	imul   esp,DWORD PTR [rdi+0x69],0x6c616e
   14002e891:	add    BYTE PTR [rax],al
   14002e893:	add    BYTE PTR [rsi+0x69],ah
   14002e896:	ins    BYTE PTR es:[rdi],dx
   14002e897:	add    BYTE PTR gs:[rax],al
   14002e89a:	add    BYTE PTR [rax],al
   14002e89c:	js     0x14002e90a
   14002e89e:	imul   esp,DWORD PTR [rsi+0x66],0x0
   14002e8a5:	add    BYTE PTR [rax],al
   14002e8a7:	add    BYTE PTR [rdi+0x62],cl
   14002e8aa:	jae    0x14002e91b
   14002e8ac:	ins    BYTE PTR es:[rdi],dx
   14002e8ad:	gs je  0x14002e915
   14002e8b0:	pop    rdi
   14002e8b1:	push   rax
   14002e8b2:	rex.WRXB pop r15
   14002e8b4:	outs   dx,BYTE PTR gs:[rsi]
   14002e8b6:	je     0x14002e92a
   14002e8b8:	imul   esp,DWORD PTR [rbp+0x73],0x0
   14002e8bf:	add    BYTE PTR [rax+0x4c],bl
   14002e8c2:	rex.WB
   14002e8c3:	rex.RX
   14002e8c4:	rex.RX and BYTE PTR [rbx+0x79],r14b
   14002e8c8:	outs   dx,BYTE PTR ds:[rsi]
   14002e8c9:	je     0x14002e92c
   14002e8cb:	js     0x14002e8ed
   14002e8cd:	gs jb  0x14002e942
   14002e8d0:	outs   dx,DWORD PTR ds:[rsi]
   14002e8d1:	jb     0x14002e90d
   14002e8d3:	and    BYTE PTR [rbp+0x65],cl
   14002e8d6:	jae    0x14002e94b
   14002e8d8:	(bad)  
   14002e8d9:	and    BYTE PTR gs:[edi+0x69],dh
   14002e8de:	je     0x14002e948
   14002e8e0:	outs   dx,DWORD PTR ds:[rsi]
   14002e8e1:	jne    0x14002e957
   14002e8e3:	and    BYTE PTR [rbx+0x6f],dh
   14002e8e6:	jne    0x14002e95a
   14002e8e8:	movsxd esp,DWORD PTR [rbp+0x20]
   14002e8eb:	jae    0x14002e961
   14002e8ed:	jb     0x14002e958
   14002e8ef:	outs   dx,BYTE PTR ds:[rsi]
   14002e8f0:	add    BYTE PTR cs:[eax],al
   14002e8f4:	add    BYTE PTR [rax],al
   14002e8f6:	add    BYTE PTR [rax],al
   14002e8f8:	cmp    al,0x2f
   14002e8fa:	je     0x14002e96e
   14002e8fc:	(bad)  
   14002e8fd:	outs   dx,BYTE PTR ds:[rsi]
   14002e8fe:	jae    0x14002e92d
   14002e900:	jne    0x14002e970
   14002e902:	imul   esi,DWORD PTR [rsi+rdi*1+0xa],0x2f3c0000
   14002e90a:	(bad)  
   14002e90b:	ins    BYTE PTR es:[rdi],dx
   14002e90c:	je     0x14002e93b
   14002e90e:	je     0x14002e982
   14002e910:	(bad)  
   14002e911:	outs   dx,BYTE PTR ds:[rsi]
   14002e912:	jae    0x14002e952
   14002e914:	or     al,BYTE PTR [rax]
   14002e916:	add    BYTE PTR [rax],al
   14002e918:	cmp    al,0x74
   14002e91a:	(bad)  
   14002e91b:	jb     0x14002e984
   14002e91d:	gs je  0x14002e940
   14002e920:	js     0x14002e98f
   14002e922:	ins    BYTE PTR es:[rdi],dx
   14002e923:	cmp    dh,BYTE PTR [rbx+0x70]
   14002e926:	(bad)  
   14002e927:	movsxd esp,DWORD PTR [rbp+0x3d]
   14002e92a:	and    dh,BYTE PTR [rax+0x72]
   14002e92d:	gs jae 0x14002e995
   14002e930:	jb     0x14002e9a8
   14002e932:	and    al,BYTE PTR gs:[rax]
   14002e935:	add    BYTE PTR [rax],al
   14002e937:	add    BYTE PTR [rsp+rsi*2],bh
   14002e93a:	(bad)  
   14002e93b:	jb     0x14002e9a4
   14002e93d:	gs je  0x14002e960
   14002e940:	jb     0x14002e9a7
   14002e942:	jae    0x14002e9b8
   14002e944:	jns    0x14002e9b6
   14002e946:	gs cmp eax,0x22
   14002e94c:	add    BYTE PTR [rax],al
   14002e94e:	add    BYTE PTR [rax],al
   14002e950:	cmp    al,0x73
   14002e952:	outs   dx,DWORD PTR ds:[rsi]
   14002e953:	jne    0x14002e9c7
   14002e955:	movsxd esp,DWORD PTR [rbp+0x20]
   14002e958:	js     0x14002e9c7
   14002e95a:	ins    BYTE PTR es:[rdi],dx
   14002e95b:	cmp    dh,BYTE PTR [rbx+0x70]
   14002e95e:	(bad)  
   14002e95f:	movsxd esp,DWORD PTR [rbp+0x3d]
   14002e962:	and    dh,BYTE PTR [rax+0x72]
   14002e965:	gs jae 0x14002e9cd
   14002e968:	jb     0x14002e9e0
   14002e96a:	and    al,BYTE PTR gs:[rax]
   14002e96d:	add    BYTE PTR [rax],al
   14002e96f:	add    BYTE PTR [rcx+riz*2],bh
   14002e972:	ins    BYTE PTR es:[rdi],dx
   14002e973:	je     0x14002e9a2
   14002e975:	je     0x14002e9e9
   14002e977:	(bad)  
   14002e978:	outs   dx,BYTE PTR ds:[rsi]
   14002e979:	jae    0x14002e9b9
   14002e97b:	or     al,BYTE PTR [rax]
   14002e97d:	add    BYTE PTR [rax],al
   14002e97f:	add    BYTE PTR [rbx+rsi*2],bh
   14002e982:	outs   dx,DWORD PTR ds:[rsi]
   14002e983:	jne    0x14002e9f7
   14002e985:	movsxd esp,DWORD PTR [rbp+0x20]
   14002e988:	js     0x14002e9f7
   14002e98a:	ins    BYTE PTR es:[rdi],dx
   14002e98b:	cmp    dh,BYTE PTR [rbx+0x70]
   14002e98e:	(bad)  
   14002e98f:	movsxd esp,DWORD PTR [rbp+0x3d]
   14002e992:	and    dh,BYTE PTR [rax+0x72]
   14002e995:	gs jae 0x14002e9fd
   14002e998:	jb     0x14002ea10
   14002e99a:	and    bh,BYTE PTR gs:[rsi]
   14002e99d:	add    BYTE PTR [rax],al
   14002e99f:	add    BYTE PTR [rsp+rsi*2],bh
   14002e9a2:	jb     0x14002ea05
   14002e9a4:	outs   dx,BYTE PTR ds:[rsi]
   14002e9a5:	jae    0x14002e9d4
   14002e9a7:	jne    0x14002ea17
   14002e9a9:	imul   esi,DWORD PTR [rax+riz*1+0x69],0x223d64
   14002e9b1:	add    BYTE PTR [rax],al
   14002e9b3:	add    BYTE PTR [rax],al
   14002e9b5:	add    BYTE PTR [rax],al
   14002e9b7:	add    BYTE PTR [rax],ah
   14002e9b9:	(bad)  
   14002e9ba:	jo     0x14002ea2c
   14002e9bc:	jb     0x14002ea2d
   14002e9be:	jbe    0x14002ea25
   14002e9c0:	fs cmp eax,0x73657922
   14002e9c6:	and    al,BYTE PTR [rax]
   14002e9c8:	and    BYTE PTR [rbx+0x74],dh
   14002e9cb:	(bad)  
   14002e9cc:	je     0x14002ea33
   14002e9ce:	cmp    eax,0x65656e22
   14002e9d3:	fs jae 0x14002ea03
   14002e9d6:	jb     0x14002ea3d
   14002e9d8:	jbe    0x14002ea43
   14002e9da:	gs ja  0x14002ea0a
   14002e9dd:	je     0x14002ea51
   14002e9df:	(bad)  
   14002e9e0:	outs   dx,BYTE PTR ds:[rsi]
   14002e9e1:	jae    0x14002ea4f
   14002e9e3:	(bad)  
   14002e9e4:	je     0x14002ea4f
   14002e9e6:	outs   dx,DWORD PTR ds:[rsi]
   14002e9e7:	outs   dx,BYTE PTR ds:[rsi]
   14002e9e8:	and    al,BYTE PTR [rax]
   14002e9ea:	add    BYTE PTR [rax],al
   14002e9ec:	add    BYTE PTR [rax],al
   14002e9ee:	add    BYTE PTR [rax],al
   14002e9f0:	and    BYTE PTR [rdx+rsi*2+0x61],dh
   14002e9f4:	outs   dx,BYTE PTR ds:[rsi]
   14002e9f5:	jae    0x14002ea63
   14002e9f7:	(bad)  
   14002e9f8:	je     0x14002ea5f
   14002e9fa:	cmp    eax,0x226f6e22
   14002e9ff:	add    BYTE PTR [rip+0x73657922],bh        # 0x1b3686327
   14002ea05:	and    al,BYTE PTR [rax]
   14002ea07:	add    BYTE PTR [rdi+0x6d],bl
   14002ea0a:	jae    0x14002ea73
   14002ea0c:	and    eax,0x3c000031
   14002ea11:	(bad)  
   14002ea12:	addr32 jb 0x14002ea84
   14002ea15:	jne    0x14002ea87
   14002ea17:	or     al,BYTE PTR ds:[rax]
   14002ea1a:	add    BYTE PTR [rax],al
   14002ea1c:	add    BYTE PTR [rax],al
   14002ea1e:	add    BYTE PTR [rax],al
   14002ea20:	cmp    al,0x67
   14002ea22:	jb     0x14002ea93
   14002ea24:	jne    0x14002ea96
   14002ea26:	and    BYTE PTR [rdx+0x65],dh
   14002ea29:	jae    0x14002ea9f
   14002ea2b:	jns    0x14002ea9d
   14002ea2d:	gs cmp eax,0x22
   14002ea33:	add    BYTE PTR [rax],al
   14002ea35:	add    BYTE PTR [rax],al
   14002ea37:	add    BYTE PTR [rdi+rbp*1],bh
   14002ea3a:	js     0x14002eaa8
   14002ea3c:	imul   esp,DWORD PTR [rsi+0x66],0xa3e
   14002ea43:	add    BYTE PTR [rax],al
   14002ea45:	add    BYTE PTR [rax],al
   14002ea47:	add    BYTE PTR [rdi+rbp*1],bh
   14002ea4a:	(bad)  
   14002ea4b:	outs   dx,DWORD PTR ds:[rsi]
   14002ea4c:	fs jns 0x14002ea8d
   14002ea4f:	cmp    al,0x2f
   14002ea51:	imul   bp,WORD PTR [rbp+riz*2+0x3e],0xa
   14002ea58:	and    BYTE PTR [rdx+0x65],dh
   14002ea5b:	jae    0x14002eacb
   14002ea5d:	(bad)  
   14002ea5e:	ins    DWORD PTR es:[rdi],dx
   14002ea5f:	gs cmp eax,0x22
   14002ea65:	add    BYTE PTR [rax],al
   14002ea67:	add    BYTE PTR [rsi],bh
   14002ea69:	cmp    al,0x62
   14002ea6b:	outs   dx,DWORD PTR ds:[rsi]
   14002ea6c:	fs jns 0x14002eaad
   14002ea6f:	or     al,BYTE PTR [rax]
   14002ea71:	add    BYTE PTR [rax],al
   14002ea73:	add    BYTE PTR [rax],al
   14002ea75:	add    BYTE PTR [rax],al
   14002ea77:	add    BYTE PTR [rax],ah
   14002ea79:	je     0x14002eadc
   14002ea7b:	jb     0x14002eae4
   14002ea7d:	gs je  0x14002eaad
   14002ea80:	ins    BYTE PTR es:[rdi],dx
   14002ea81:	(bad)  
   14002ea82:	outs   dx,BYTE PTR ds:[rsi]
   14002ea83:	addr32 jne 0x14002eae7
   14002ea86:	addr32 gs cmp eax,0x22
   14002ea8d:	add    BYTE PTR [rax],al
   14002ea8f:	add    BYTE PTR [rax],ah
   14002ea91:	jae    0x14002eb02
   14002ea93:	jne    0x14002eb07
   14002ea95:	movsxd esp,DWORD PTR [rbp+0x2d]
   14002ea98:	ins    BYTE PTR es:[rdi],dx
   14002ea99:	(bad)  
   14002ea9a:	outs   dx,BYTE PTR ds:[rsi]
   14002ea9b:	addr32 jne 0x14002eaff
   14002ea9e:	addr32 gs cmp eax,0x22
   14002eaa5:	add    BYTE PTR [rax],al
   14002eaa7:	add    BYTE PTR [rax],ah
   14002eaa9:	fs (bad) 
   14002eaab:	je     0x14002eb0e
   14002eaad:	je     0x14002eb28
   14002eaaf:	jo     0x14002eb16
   14002eab1:	cmp    eax,0x22
   14002eab6:	add    BYTE PTR [rax],al
   14002eab8:	cmp    al,0x66
   14002eaba:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x6769726f
   14002eac2:	imul   ebp,DWORD PTR [rsi+0x61],0x223d6c
   14002eac9:	add    BYTE PTR [rax],al
   14002eacb:	add    BYTE PTR [rdx],ah
   14002eacd:	or     al,BYTE PTR ds:[rax]
   14002ead0:	and    ah,BYTE PTR [rax]
   14002ead2:	js     0x14002eb41
   14002ead4:	ins    BYTE PTR es:[rdi],dx
   14002ead5:	outs   dx,BYTE PTR ds:[rsi]
   14002ead6:	jae    0x14002eb12
   14002ead8:	je     0x14002eb4c
   14002eada:	outs   dx,DWORD PTR ds:[rsi]
   14002eadb:	ins    BYTE PTR es:[rdi],dx
   14002eadc:	ins    BYTE PTR es:[rdi],dx
   14002eadd:	je     0x14002eb44
   14002eadf:	movsxd ebp,DWORD PTR [rax+0x3d]
   14002eae2:	and    al,BYTE PTR [rax]
   14002eae4:	add    BYTE PTR [rax],al
   14002eae6:	add    BYTE PTR [rax],al
   14002eae8:	cmp    al,0x78
   14002eaea:	ins    BYTE PTR es:[rdi],dx
   14002eaeb:	imul   esp,DWORD PTR [rsi+0x66],0x72657620
   14002eaf2:	jae    0x14002eb5d
   14002eaf4:	outs   dx,DWORD PTR ds:[rsi]
   14002eaf5:	outs   dx,BYTE PTR ds:[rsi]
   14002eaf6:	cmp    eax,0x322e3122
   14002eafb:	and    ah,BYTE PTR [rax]
   14002eafd:	js     0x14002eb6c
   14002eaff:	ins    BYTE PTR es:[rdi],dx
   14002eb00:	outs   dx,BYTE PTR ds:[rsi]
   14002eb01:	jae    0x14002eb40
   14002eb03:	and    al,BYTE PTR [rax]
   14002eb05:	add    BYTE PTR [rax],al
   14002eb07:	add    BYTE PTR [rax],ah
   14002eb09:	outs   dx,BYTE PTR gs:[rsi]
   14002eb0b:	movsxd ebp,DWORD PTR [rdi+0x64]
   14002eb0e:	imul   ebp,DWORD PTR [rsi+0x67],0x7475223d
   14002eb15:	sub    ax,0x2238
   14002eb19:	(bad)  
   14002eb1a:	or     al,BYTE PTR ds:[rax]
   14002eb1d:	add    BYTE PTR [rax],al
   14002eb1f:	add    BYTE PTR [rdi+rdi*1],bh
   14002eb22:	js     0x14002eb91
   14002eb24:	ins    BYTE PTR es:[rdi],dx
   14002eb25:	and    BYTE PTR [rsi+0x65],dh
   14002eb28:	jb     0x14002eb9d
   14002eb2a:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14002eb31:	xor    BYTE PTR [rdx],ah
   14002eb33:	add    BYTE PTR [rax],al
   14002eb35:	add    BYTE PTR [rax],al
   14002eb37:	add    BYTE PTR [rax+0x6f],dh
   14002eb3a:	sub    eax,0x646c6f28
   14002eb3f:	pop    rdi
   14002eb40:	sub    DWORD PTR [rdi],edi
   14002eb42:	ins    DWORD PTR es:[rdi],dx
   14002eb43:	jae    0x14002ebac
   14002eb45:	imul   esp,DWORD PTR [rdi+rbx*2+0x70],0x6172756c
   14002eb4d:	ins    BYTE PTR es:[rdi],dx
   14002eb4e:	add    BYTE PTR [rax],al
   14002eb50:	pop    rax
   14002eb51:	rex.WR
   14002eb52:	rex.WB
   14002eb53:	rex.RX
   14002eb54:	and    BYTE PTR [rdi+r13*2+0x63],r13b
   14002eb59:	(bad)  
   14002eb5a:	ins    BYTE PTR es:[rdi],dx
   14002eb5b:	imul   edi,DWORD PTR [rdx+0x61],0x6e6f6974
   14002eb62:	and    BYTE PTR [rsi+0x69],ah
   14002eb65:	ins    BYTE PTR es:[rdi],dx
   14002eb66:	gs jae 0x14002eb69
   14002eb69:	add    BYTE PTR [rax],al
   14002eb6b:	add    BYTE PTR [rax+0x6c],bh
   14002eb6e:	data16 add BYTE PTR [rax],ah
   14002eb71:	lock add al,BYTE PTR [rax+0x1]
   14002eb75:	add    BYTE PTR [rax],al
   14002eb77:	add    BYTE PTR [rsi+rdx*4],dl
   14002eb7a:	add    al,BYTE PTR [rax+0x1]
   14002eb7d:	add    BYTE PTR [rax],al
   14002eb7f:	add    BYTE PTR [rcx],al
   14002eb81:	add    BYTE PTR [rax],al
   14002eb83:	add    BYTE PTR [rax],cl
   14002eb85:	add    BYTE PTR [rax],al
   14002eb87:	add    BYTE PTR [rax],al
   14002eb89:	add    BYTE PTR [rax],al
   14002eb8b:	add    BYTE PTR [rax],cl
   14002eb8d:	push   rsp
   14002eb8e:	add    eax,DWORD PTR [rax]
   14002eb90:	test   al,0xeb
   14002eb92:	add    al,BYTE PTR [rax]
   14002eb94:	sub    bl,0x2
	...
   14002ebab:	add    BYTE PTR [rcx],al
   14002ebad:	add    BYTE PTR [rax],al
   14002ebaf:	add    BYTE PTR [rax],cl
   14002ebb1:	add    BYTE PTR [rax],al
   14002ebb3:	add    al,al
   14002ebb5:	jmp    0x14002ebb9
	...
   14002ebbf:	add    BYTE PTR [rax],cl
   14002ebc1:	in     al,dx
   14002ebc2:	add    al,BYTE PTR [rax]
   14002ebc4:	xor    ah,ch
   14002ebc6:	add    al,BYTE PTR [rax]
   14002ebc8:	mov    al,0xec
   14002ebca:	add    al,BYTE PTR [rax]
   14002ebcc:	add    ch,ch
   14002ebce:	add    al,BYTE PTR [rax]
   14002ebd0:	js     0x14002ebbf
   14002ebd2:	add    al,BYTE PTR [rax]
   14002ebd4:	lock in eax,dx
   14002ebd6:	add    al,BYTE PTR [rax]
   14002ebd8:	push   0xffffffffe00002ee
   14002ebdd:	out    dx,al
   14002ebde:	add    al,BYTE PTR [rax]
	...
   14002ec08:	or     BYTE PTR [rbx+rax*1+0x0],dl
   14002ec0c:	(bad)  
   14002ec0d:	add    BYTE PTR [rax],al
   14002ec0f:	add    BYTE PTR [rax],al
   14002ec11:	add    BYTE PTR [rax],al
   14002ec13:	add    bh,bh
   14002ec15:	(bad)  
   14002ec16:	(bad)  
   14002ec17:	inc    DWORD PTR [rax]
   14002ec19:	add    BYTE PTR [rax],al
   14002ec1b:	add    BYTE PTR [rax+0x0],al
   14002ec1e:	add    BYTE PTR [rax],al
   14002ec20:	test   al,0xeb
   14002ec22:	add    al,BYTE PTR [rax]
	...
   14002ec30:	xor    BYTE PTR [rbx+rax*1+0x0],dl
   14002ec34:	(bad)  
   14002ec35:	add    BYTE PTR [rax],al
   14002ec37:	add    BYTE PTR [rax],al
   14002ec39:	add    BYTE PTR [rax],al
   14002ec3b:	add    bh,bh
   14002ec3d:	(bad)  
   14002ec3e:	(bad)  
   14002ec3f:	inc    DWORD PTR [rax]
   14002ec41:	add    BYTE PTR [rax],al
   14002ec43:	add    BYTE PTR [rax+0x0],al
   14002ec46:	add    BYTE PTR [rax],al
   14002ec48:	pop    rax
   14002ec49:	in     al,dx
   14002ec4a:	add    al,BYTE PTR [rax]
	...
   14002ec5c:	add    DWORD PTR [rax],eax
   14002ec5e:	add    BYTE PTR [rax],al
   14002ec60:	(bad)  
   14002ec61:	add    BYTE PTR [rax],al
   14002ec63:	add    BYTE PTR [rax-0x14],dh
   14002ec66:	add    al,BYTE PTR [rax]
	...
   14002ec70:	xor    ah,ch
   14002ec72:	add    al,BYTE PTR [rax]
   14002ec74:	mov    al,0xec
   14002ec76:	add    al,BYTE PTR [rax]
   14002ec78:	add    ch,ch
   14002ec7a:	add    al,BYTE PTR [rax]
   14002ec7c:	js     0x14002ec6b
   14002ec7e:	add    al,BYTE PTR [rax]
   14002ec80:	lock in eax,dx
   14002ec82:	add    al,BYTE PTR [rax]
   14002ec84:	push   0xffffffffe00002ee
   14002ec89:	out    dx,al
   14002ec8a:	add    al,BYTE PTR [rax]
	...
   14002ecb0:	(bad)  
   14002ecb1:	push   rsp
   14002ecb2:	add    eax,DWORD PTR [rax]
	...
   14002ecbc:	(bad)  
   14002ecbd:	(bad)  
   14002ecbe:	(bad)  
   14002ecbf:	inc    DWORD PTR [rax]
   14002ecc1:	add    BYTE PTR [rax],al
   14002ecc3:	add    BYTE PTR [rax+0x0],al
   14002ecc6:	add    BYTE PTR [rax],al
   14002ecc8:	fsubr  st,st(4)
   14002ecca:	add    al,BYTE PTR [rax]
	...
   14002ece0:	add    DWORD PTR [rax],eax
   14002ece2:	add    BYTE PTR [rax],al
   14002ece4:	lock in al,dx
   14002ece6:	add    al,BYTE PTR [rax]
	...
   14002ecf0:	mov    al,0xec
   14002ecf2:	add    al,BYTE PTR [rax]
	...
   14002ed00:	nop
   14002ed01:	push   rsp
   14002ed02:	add    eax,DWORD PTR [rax]
   14002ed04:	add    BYTE PTR [rax],al
   14002ed06:	add    BYTE PTR [rax],al
   14002ed08:	or     BYTE PTR [rax],al
   14002ed0a:	add    BYTE PTR [rax],al
   14002ed0c:	(bad)  
   14002ed0d:	(bad)  
   14002ed0e:	(bad)  
   14002ed0f:	inc    DWORD PTR [rax]
   14002ed11:	add    BYTE PTR [rax],al
   14002ed13:	add    BYTE PTR [rax+0x0],al
   14002ed16:	add    BYTE PTR [rax],al
   14002ed18:	sub    ch,ch
   14002ed1a:	add    al,BYTE PTR [rax]
	...
   14002ed30:	add    DWORD PTR [rax],eax
   14002ed32:	add    BYTE PTR [rax],al
   14002ed34:	rex in eax,dx
   14002ed36:	add    al,BYTE PTR [rax]
	...
   14002ed40:	push   rax
   14002ed41:	in     eax,dx
   14002ed42:	add    al,BYTE PTR [rax]
	...
   14002ed50:	nop
   14002ed51:	push   rsp
   14002ed52:	add    eax,DWORD PTR [rax]
	...
   14002ed5c:	(bad)  
   14002ed5d:	(bad)  
   14002ed5e:	(bad)  
   14002ed5f:	inc    DWORD PTR [rax]
   14002ed61:	add    BYTE PTR [rax],al
   14002ed63:	add    BYTE PTR [rax+0x0],al
   14002ed66:	add    BYTE PTR [rax],al
   14002ed68:	sub    ch,ch
   14002ed6a:	add    al,BYTE PTR [rax]
	...
   14002ed78:	mov    eax,0x354
   14002ed7d:	add    BYTE PTR [rax],al
   14002ed7f:	add    BYTE PTR [rax],dl
   14002ed81:	add    BYTE PTR [rax],al
   14002ed83:	add    bh,bh
   14002ed85:	(bad)  
   14002ed86:	(bad)  
   14002ed87:	inc    DWORD PTR [rax]
   14002ed89:	add    BYTE PTR [rax],al
   14002ed8b:	add    BYTE PTR [rax+0x0],al
   14002ed8e:	add    BYTE PTR [rax],al
   14002ed90:	movabs al,ds:0x2ed
	...
   14002eda5:	add    BYTE PTR [rax],al
   14002eda7:	add    BYTE PTR [rcx],al
   14002eda9:	add    BYTE PTR [rax],al
   14002edab:	add    BYTE PTR [rax+0x2ed],bh
   14002edb1:	add    BYTE PTR [rax],al
   14002edb3:	add    BYTE PTR [rax],al
   14002edb5:	add    BYTE PTR [rax],al
   14002edb7:	add    al,cl
   14002edb9:	in     eax,dx
   14002edba:	add    al,BYTE PTR [rax]
	...
   14002edc8:	mov    eax,0x354
   14002edcd:	add    BYTE PTR [rax],al
   14002edcf:	add    BYTE PTR [rax],al
   14002edd1:	add    BYTE PTR [rax],al
   14002edd3:	add    bh,bh
   14002edd5:	(bad)  
   14002edd6:	(bad)  
   14002edd7:	inc    DWORD PTR [rax]
   14002edd9:	add    BYTE PTR [rax],al
   14002eddb:	add    BYTE PTR [rax+0x0],al
   14002edde:	add    BYTE PTR [rax],al
   14002ede0:	movabs al,ds:0x2ed
   14002ede9:	add    BYTE PTR [rax],al
   14002edeb:	add    BYTE PTR [rax],al
   14002eded:	add    BYTE PTR [rax],al
   14002edef:	add    al,ah
   14002edf1:	push   rsp
   14002edf2:	add    eax,DWORD PTR [rax]
   14002edf4:	add    BYTE PTR [rax],al
   14002edf6:	add    BYTE PTR [rax],al
   14002edf8:	sbb    BYTE PTR [rax],al
   14002edfa:	add    BYTE PTR [rax],al
   14002edfc:	(bad)  
   14002edfd:	(bad)  
   14002edfe:	(bad)  
   14002edff:	inc    DWORD PTR [rax]
   14002ee01:	add    BYTE PTR [rax],al
   14002ee03:	add    BYTE PTR [rax+0x0],al
   14002ee06:	add    BYTE PTR [rax],al
   14002ee08:	sbb    dh,ch
   14002ee0a:	add    al,BYTE PTR [rax]
	...
   14002ee20:	add    DWORD PTR [rax],eax
   14002ee22:	add    BYTE PTR [rax],al
   14002ee24:	xor    dh,ch
   14002ee26:	add    al,BYTE PTR [rax]
	...
   14002ee30:	out    dx,al
   14002ee32:	add    al,BYTE PTR [rax]
	...
   14002ee40:	loopne 0x14002ee96
   14002ee42:	add    eax,DWORD PTR [rax]
	...
   14002ee4c:	(bad)  
   14002ee4d:	(bad)  
   14002ee4e:	(bad)  
   14002ee4f:	inc    DWORD PTR [rax]
   14002ee51:	add    BYTE PTR [rax],al
   14002ee53:	add    BYTE PTR [rax+0x0],al
   14002ee56:	add    BYTE PTR [rax],al
   14002ee58:	sbb    dh,ch
   14002ee5a:	add    al,BYTE PTR [rax]
	...
   14002ee68:	adc    BYTE PTR [rbp+0x3],dl
   14002ee6b:	add    BYTE PTR [rax],al
   14002ee6d:	add    BYTE PTR [rax],al
   14002ee6f:	add    BYTE PTR [rax],ah
   14002ee71:	add    BYTE PTR [rax],al
   14002ee73:	add    bh,bh
   14002ee75:	(bad)  
   14002ee76:	(bad)  
   14002ee77:	inc    DWORD PTR [rax]
   14002ee79:	add    BYTE PTR [rax],al
   14002ee7b:	add    BYTE PTR [rax+0x0],al
   14002ee7e:	add    BYTE PTR [rax],al
   14002ee80:	nop
   14002ee81:	out    dx,al
   14002ee82:	add    al,BYTE PTR [rax]
	...
   14002ee98:	add    DWORD PTR [rax],eax
   14002ee9a:	add    BYTE PTR [rax],al
   14002ee9c:	test   al,0xee
   14002ee9e:	add    al,BYTE PTR [rax]
	...
   14002eea8:	mov    eax,0x2ee
	...
   14002eeb5:	add    BYTE PTR [rax],al
   14002eeb7:	add    BYTE PTR [rax],dl
   14002eeb9:	push   rbp
   14002eeba:	add    eax,DWORD PTR [rax]
	...
   14002eec4:	(bad)  
   14002eec5:	(bad)  
   14002eec6:	(bad)  
   14002eec7:	inc    DWORD PTR [rax]
   14002eec9:	add    BYTE PTR [rax],al
   14002eecb:	add    BYTE PTR [rax+0x0],al
   14002eece:	add    BYTE PTR [rax],al
   14002eed0:	nop
   14002eed1:	out    dx,al
   14002eed2:	add    al,BYTE PTR [rax]
	...
   14002eee0:	rex push rbp
   14002eee2:	add    eax,DWORD PTR [rax]
   14002eee4:	add    BYTE PTR [rax],al
   14002eee6:	add    BYTE PTR [rax],al
   14002eee8:	sub    BYTE PTR [rax],al
   14002eeea:	add    BYTE PTR [rax],al
   14002eeec:	(bad)  
   14002eeed:	(bad)  
   14002eeee:	(bad)  
   14002eeef:	inc    DWORD PTR [rax]
   14002eef1:	add    BYTE PTR [rax],al
   14002eef3:	add    BYTE PTR [rax+0x0],al
   14002eef6:	add    BYTE PTR [rax],al
   14002eef8:	or     bh,ch
   14002eefa:	add    al,BYTE PTR [rax]
	...
   14002ef10:	add    DWORD PTR [rax],eax
   14002ef12:	add    BYTE PTR [rax],al
   14002ef14:	and    bh,ch
   14002ef16:	add    al,BYTE PTR [rax]
	...
   14002ef20:	xor    bh,ch
   14002ef22:	add    al,BYTE PTR [rax]
	...
   14002ef30:	rex push rbp
   14002ef32:	add    eax,DWORD PTR [rax]
	...
   14002ef3c:	(bad)  
   14002ef3d:	(bad)  
   14002ef3e:	(bad)  
   14002ef3f:	inc    DWORD PTR [rax]
   14002ef41:	add    BYTE PTR [rax],al
   14002ef43:	add    BYTE PTR [rax+0x0],al
   14002ef46:	add    BYTE PTR [rax],al
   14002ef48:	or     bh,ch
   14002ef4a:	add    al,BYTE PTR [rax]
	...
   14002ef58:	add    DWORD PTR [rax],eax
	...
   14002ef62:	add    BYTE PTR [rax],al
   14002ef64:	or     BYTE PTR [rbx+rax*1+0x0],dl
   14002ef68:	test   al,0xeb
   14002ef6a:	add    al,BYTE PTR [rax]
   14002ef6c:	pop    rax
   14002ef6d:	out    dx,eax
   14002ef6e:	add    al,BYTE PTR [rax]
	...
   14002ef80:	add    DWORD PTR [rax],eax
   14002ef82:	add    BYTE PTR [rax],al
   14002ef84:	adc    BYTE PTR [rax],al
   14002ef86:	add    BYTE PTR [rax],al
   14002ef88:	add    BYTE PTR [rax],al
   14002ef8a:	add    BYTE PTR [rax],al
   14002ef8c:	or     BYTE PTR [rbx+rax*1+0x0],dl
   14002ef90:	test   al,0xeb
   14002ef92:	add    al,BYTE PTR [rax]
   14002ef94:	sub    bh,0x2
	...
   14002efa7:	add    BYTE PTR [rcx],al
   14002efa9:	add    BYTE PTR [rax],al
   14002efab:	add    BYTE PTR [rax],bl
   14002efad:	add    BYTE PTR [rax],al
   14002efaf:	add    BYTE PTR [rax],al
   14002efb1:	add    BYTE PTR [rax],al
   14002efb3:	add    BYTE PTR [rax],cl
   14002efb5:	push   rsp
   14002efb6:	add    eax,DWORD PTR [rax]
   14002efb8:	test   al,0xeb
   14002efba:	add    al,BYTE PTR [rax]
   14002efbc:	test   al,0xef
   14002efbe:	add    al,BYTE PTR [rax]
	...
   14002efd0:	add    DWORD PTR [rax],eax
   14002efd2:	add    BYTE PTR [rax],al
   14002efd4:	and    BYTE PTR [rax],al
   14002efd6:	add    BYTE PTR [rax],al
   14002efd8:	add    BYTE PTR [rax],al
   14002efda:	add    BYTE PTR [rax],al
   14002efdc:	or     BYTE PTR [rbx+rax*1+0x0],dl
   14002efe0:	test   al,0xeb
   14002efe2:	add    al,BYTE PTR [rax]
   14002efe4:	shr    bh,1
   14002efe6:	add    al,BYTE PTR [rax]
	...
   14002eff8:	add    DWORD PTR [rax],eax
   14002effa:	add    BYTE PTR [rax],al
   14002effc:	sub    BYTE PTR [rax],al
   14002effe:	add    BYTE PTR [rax],al
   14002f000:	add    BYTE PTR [rax],al
   14002f002:	add    BYTE PTR [rax],al
   14002f004:	or     BYTE PTR [rbx+rax*1+0x0],dl
   14002f008:	test   al,0xeb
   14002f00a:	add    al,BYTE PTR [rax]
   14002f00c:	clc    
   14002f00d:	out    dx,eax
   14002f00e:	add    al,BYTE PTR [rax]
	...
   14002f020:	add    DWORD PTR [rax],eax
	...
   14002f02a:	add    BYTE PTR [rax],al
   14002f02c:	jo     0x14002f083
   14002f02e:	add    eax,DWORD PTR [rax]
   14002f030:	rex.W
   14002f031:	lock add al,BYTE PTR [rax]
   14002f034:	and    al,dh
   14002f036:	add    al,BYTE PTR [rax]
	...
   14002f050:	add    DWORD PTR [rax],eax
   14002f052:	add    BYTE PTR [rax],al
   14002f054:	(bad)  
   14002f055:	lock add al,BYTE PTR [rax]
	...
   14002f060:	jo     0x14002f052
   14002f062:	add    al,BYTE PTR [rax]
	...
   14002f070:	jo     0x14002f0c7
   14002f072:	add    eax,DWORD PTR [rax]
	...
   14002f07c:	(bad)  
   14002f07d:	(bad)  
   14002f07e:	(bad)  
   14002f07f:	inc    DWORD PTR [rax]
   14002f081:	add    BYTE PTR [rax],al
   14002f083:	add    BYTE PTR [rax+0x0],al
   14002f086:	add    BYTE PTR [rax],al
   14002f088:	rex.W
   14002f089:	lock add al,BYTE PTR [rax]
	...
   14002f0b8:	and    DWORD PTR [rax],eax
   14002f0ba:	add    BYTE PTR [rax],al
   14002f0bc:	add    BYTE PTR [rax],dl
   14002f0be:	add    BYTE PTR [rax],al
   14002f0c0:	sbb    DWORD PTR [rax],edx
   14002f0c2:	add    BYTE PTR [rax],al
   14002f0c4:	and    al,0xf2
   14002f0c6:	add    al,BYTE PTR [rax]
   14002f0c8:	and    DWORD PTR [rax],edx
   14002f0ca:	add    al,0x0
   14002f0cc:	adc    BYTE PTR [rdi+rax*1+0x0],ah
   14002f0d0:	add    eax,0x634
   14002f0d5:	adc    BYTE PTR [rax],al
   14002f0d7:	add    BYTE PTR [rcx],bl
   14002f0d9:	adc    BYTE PTR [rax],al
   14002f0db:	add    BYTE PTR [rdx+rsi*8],ah
   14002f0de:	add    al,BYTE PTR [rax]
   14002f0e0:	sbb    DWORD PTR [rbx],ecx
   14002f0e2:	add    eax,DWORD PTR [rax]
   14002f0e4:	or     eax,DWORD PTR [rdx+0x7]
   14002f0e7:	push   rax
   14002f0e8:	(bad)  
   14002f0e9:	xor    BYTE PTR [rax],al
   14002f0eb:	add    BYTE PTR [rax],dh
   14002f0ed:	xchg   ebp,eax
   14002f0ee:	add    al,BYTE PTR [rax]
   14002f0f0:	nop
   14002f0f1:	mov    edx,0x26190002
   14002f0f6:	or     al,BYTE PTR [rax]
   14002f0f8:	es je  0x14002f10c
   14002f0fb:	add    BYTE PTR [rdx],ah
   14002f0fd:	adc    BYTE PTR fs:[rax],al
   14002f100:	(bad)  
   14002f101:	xor    al,0xf
   14002f103:	add    BYTE PTR [rcx],dl
   14002f105:	xchg   edx,eax
   14002f106:	or     eax,0x9d00be0
   14002f10b:	shl    BYTE PTR [rax],0x95
   14002f10e:	add    al,BYTE PTR [rax]
   14002f110:	nop
   14002f111:	mov    edx,0x2
   14002f116:	add    BYTE PTR [rax],al
   14002f118:	add    BYTE PTR [rax],al
   14002f11a:	add    BYTE PTR [rax],al
   14002f11c:	add    DWORD PTR [rax],eax
   14002f11e:	add    BYTE PTR [rax],al
   14002f120:	add    DWORD PTR [rax],eax
   14002f122:	add    BYTE PTR [rax],al
   14002f124:	sub    cl,dh
   14002f126:	add    al,BYTE PTR [rax]
	...
   14002f134:	mov    al,0x9c
   14002f136:	add    al,BYTE PTR [rax]
   14002f138:	rex.W add BYTE PTR [rax],al
   14002f13b:	add    bh,bh
   14002f13d:	(bad)  
   14002f13e:	(bad)  
   14002f13f:	inc    DWORD PTR [rax]
   14002f141:	add    BYTE PTR [rax],al
   14002f143:	add    bh,bh
   14002f145:	(bad)  
   14002f146:	(bad)  
   14002f147:	inc    DWORD PTR [rax]
   14002f149:	add    BYTE PTR [rax],al
   14002f14b:	add    BYTE PTR [rax-0xfffff0],dl
   14002f151:	(bad)  
   14002f152:	(bad)  
   14002f153:	inc    DWORD PTR [rbp+0x11]
   14002f156:	add    BYTE PTR [rax],al
   14002f158:	add    BYTE PTR [rax],al
   14002f15a:	add    BYTE PTR [rax],al
   14002f15c:	add    al,0x12
   14002f15e:	add    BYTE PTR [rax],al
   14002f160:	(bad)  
   14002f161:	(bad)  
   14002f162:	(bad)  
   14002f163:	push   QWORD PTR [rax+0x29c]
   14002f169:	add    BYTE PTR [rax],al
   14002f16b:	add    BYTE PTR [rsi+0x100029c],bh
   14002f171:	add    BYTE PTR [rax],al
   14002f173:	add    bl,bl
   14002f175:	pushf  
   14002f176:	add    al,BYTE PTR [rax]
   14002f178:	add    BYTE PTR [rax],al
   14002f17a:	add    BYTE PTR [rax],al
   14002f17c:	and    DWORD PTR [rax],eax
   14002f17e:	add    BYTE PTR [rax],al
   14002f180:	nop
   14002f181:	adc    al,BYTE PTR [rax]
   14002f183:	add    BYTE PTR [rcx+0x12],bh
   14002f189:	hlt    
   14002f18a:	add    al,BYTE PTR [rax]
   14002f18c:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b407f194
   14002f192:	(bad)  
   14002f193:	add    BYTE PTR [rax-0x46ffffee],dl
   14002f199:	adc    al,BYTE PTR [rax]
   14002f19b:	add    BYTE PTR [rax],al
   14002f19d:	hlt    
   14002f19e:	add    al,BYTE PTR [rax]
   14002f1a0:	and    DWORD PTR [rax],eax
   14002f1a2:	add    BYTE PTR [rax],al
   14002f1a4:	(bad)  
   14002f1a5:	adc    eax,DWORD PTR [rax]
   14002f1a7:	add    BYTE PTR [rcx+0x13],bh
   14002f1aa:	add    BYTE PTR [rax],al
   14002f1ac:	enter  0x2f1,0x0
   14002f1b0:	and    DWORD PTR [rax],edx
   14002f1b2:	add    al,0x0
   14002f1b4:	adc    BYTE PTR [rdi+rax*1+0x0],dh
   14002f1b8:	add    eax,0x60000634
   14002f1bd:	adc    eax,DWORD PTR [rax]
   14002f1bf:	add    BYTE PTR [rcx+0x13],bh
   14002f1c2:	add    BYTE PTR [rax],al
   14002f1c4:	enter  0x2f1,0x0
   14002f1c8:	add    DWORD PTR [rcx],ebx
   14002f1ca:	(bad)  
   14002f1cb:	add    BYTE PTR [rcx],bl
   14002f1cd:	or     DWORD PTR fs:[rax],eax
   14002f1d0:	sbb    DWORD PTR [rax+rcx*1+0x0],edx
   14002f1d4:	sbb    DWORD PTR [rdx],esi
   14002f1d6:	adc    eax,0x21c0
   14002f1db:	add    BYTE PTR [rax+0x14],al
   14002f1de:	add    BYTE PTR [rax],al
   14002f1e0:	imul   edx,DWORD PTR [rax+rax*1],0x2f40000
   14002f1e7:	add    BYTE PTR [rcx],ah
   14002f1e9:	add    eax,0x74050002
   14002f1ee:	(bad)  
   14002f1ef:	add    BYTE PTR [rax+0x14],al
   14002f1f2:	add    BYTE PTR [rax],al
   14002f1f4:	imul   edx,DWORD PTR [rax+rax*1],0x2f40000
   14002f1fb:	add    BYTE PTR [rcx],ah
   14002f1fd:	add    BYTE PTR [rax],al
   14002f1ff:	add    al,al
   14002f201:	adc    al,0x0
   14002f203:	add    cl,bl
   14002f205:	adc    al,0x0
   14002f207:	add    BYTE PTR [rdx+rsi*8],ah
   14002f20a:	add    al,BYTE PTR [rax]
   14002f20c:	and    DWORD PTR [rax],edx
   14002f20e:	add    al,0x0
   14002f210:	adc    BYTE PTR [rdi+rax*1+0x0],ah
   14002f214:	add    eax,0xc0000634
   14002f219:	adc    al,0x0
   14002f21b:	add    cl,bl
   14002f21d:	adc    al,0x0
   14002f21f:	add    BYTE PTR [rdx+rsi*8],ah
   14002f222:	add    al,BYTE PTR [rax]
   14002f224:	add    DWORD PTR [rcx],ebx
   14002f226:	(bad)  
   14002f227:	add    BYTE PTR [rcx],bl
   14002f229:	je     0x14002f234
   14002f22b:	add    BYTE PTR [rcx],bl
   14002f22d:	push   rsp
   14002f22e:	or     BYTE PTR [rax],al
   14002f230:	sbb    DWORD PTR [rdx],esi
   14002f232:	adc    eax,0x21c0
   14002f237:	add    BYTE PTR [rax+0x15],ah
   14002f23a:	add    BYTE PTR [rax],al
   14002f23c:	outs   dx,BYTE PTR ds:[rsi]
   14002f23d:	adc    eax,0xf2940000
   14002f242:	add    al,BYTE PTR [rax]
   14002f244:	and    DWORD PTR [rax],eax
   14002f246:	add    al,BYTE PTR [rax]
   14002f248:	add    BYTE PTR [rdx+rcx*1+0x0],ah
   14002f24c:	(bad)  
   14002f24d:	adc    eax,0x156e0000
   14002f252:	add    BYTE PTR [rax],al
   14002f254:	xchg   esp,eax
   14002f255:	repnz add al,BYTE PTR [rax]
   14002f258:	and    DWORD PTR [rax],eax
   14002f25a:	add    BYTE PTR [rax],al
   14002f25c:	outs   dx,BYTE PTR ds:[rsi]
   14002f25d:	adc    eax,0x15ab0000
   14002f262:	add    BYTE PTR [rax],al
   14002f264:	jl     0x14002f258
   14002f266:	add    al,BYTE PTR [rax]
   14002f268:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b407f270
   14002f26e:	or     DWORD PTR [rax],eax
   14002f270:	outs   dx,BYTE PTR ds:[rsi]
   14002f271:	adc    eax,0x15ab0000
   14002f276:	add    BYTE PTR [rax],al
   14002f278:	jl     0x14002f26c
   14002f27a:	add    al,BYTE PTR [rax]
   14002f27c:	and    DWORD PTR [rdx],edx
   14002f27e:	add    al,0x0
   14002f280:	adc    ah,BYTE PTR [rdx+rcx*1+0x0]
   14002f284:	add    eax,0x60000b34
   14002f289:	adc    eax,0x156e0000
   14002f28e:	add    BYTE PTR [rax],al
   14002f290:	xchg   esp,eax
   14002f291:	repnz add al,BYTE PTR [rax]
   14002f294:	add    DWORD PTR [rsi],eax
   14002f296:	add    al,BYTE PTR [rax]
   14002f298:	(bad)  
   14002f299:	mov    dl,0x2
   14002f29b:	push   rax
   14002f29c:	and    DWORD PTR [rax],eax
   14002f29e:	add    BYTE PTR [rax],al
   14002f2a0:	add    BYTE PTR [rdi],dl
   14002f2a2:	add    BYTE PTR [rax],al
   14002f2a4:	cmp    DWORD PTR [rdi],edx
   14002f2a6:	add    BYTE PTR [rax],al
   14002f2a8:	(bad)  
   14002f2a9:	repnz add al,BYTE PTR [rax]
   14002f2ac:	and    DWORD PTR [rdx],ecx
   14002f2ae:	add    al,0x0
   14002f2b0:	or     dh,BYTE PTR [rdi+rax*1+0x0]
   14002f2b4:	add    eax,0x654
   14002f2b9:	(bad)  
   14002f2ba:	add    BYTE PTR [rax],al
   14002f2bc:	cmp    DWORD PTR [rdi],edx
   14002f2be:	add    BYTE PTR [rax],al
   14002f2c0:	(bad)  
   14002f2c1:	repnz add al,BYTE PTR [rax]
   14002f2c4:	add    DWORD PTR [rdx],ecx
   14002f2c6:	add    al,0x0
   14002f2c8:	or     dh,BYTE PTR [rax+rcx*1]
   14002f2cb:	add    BYTE PTR [rdx],cl
   14002f2cd:	xor    al,BYTE PTR [rsi]
   14002f2cf:	(bad)  
   14002f2d0:	and    DWORD PTR [rax],eax
   14002f2d2:	add    BYTE PTR [rax],al
   14002f2d4:	mov    al,0x17
   14002f2d6:	add    BYTE PTR [rax],al
   14002f2d8:	int    0x17
   14002f2da:	add    BYTE PTR [rax],al
   14002f2dc:	rex.WR test BYTE PTR [rdx],0x0
   14002f2e0:	and    DWORD PTR [rsi],edx
   14002f2e2:	(bad)  
   14002f2e3:	add    BYTE PTR [rsi],dl
   14002f2e5:	je     0x14002f2eb
   14002f2e7:	add    BYTE PTR [rdx],cl
   14002f2e9:	fs (bad) 
   14002f2eb:	add    BYTE PTR [rip+0xffffffffb0000634],al        # 0xf002f925
   14002f2f1:	(bad)  
   14002f2f2:	add    BYTE PTR [rax],al
   14002f2f4:	int    0x17
   14002f2f6:	add    BYTE PTR [rax],al
   14002f2f8:	rex.WR test BYTE PTR [rdx],0x0
   14002f2fc:	and    DWORD PTR [rax],eax
   14002f2fe:	add    BYTE PTR [rax],al
   14002f300:	xor    BYTE PTR [rax],bl
   14002f302:	add    BYTE PTR [rax],al
   14002f304:	rex.WX sbb BYTE PTR [rax],al
   14002f307:	add    BYTE PTR [rbx+rsi*8],bh
   14002f30a:	add    al,BYTE PTR [rax]
   14002f30c:	and    DWORD PTR [rax],eax
   14002f30e:	add    al,BYTE PTR [rax]
   14002f310:	add    BYTE PTR [rcx+rcx*1+0x0],dh
   14002f314:	xor    BYTE PTR [rax],bl
   14002f316:	add    BYTE PTR [rax],al
   14002f318:	rex.WX sbb BYTE PTR [rax],al
   14002f31b:	add    BYTE PTR [rbx+rsi*8],bh
   14002f31e:	add    al,BYTE PTR [rax]
   14002f320:	and    DWORD PTR [rsi+rax*1+0x0],edx
   14002f324:	push   rsp
   14002f325:	push   rsp
   14002f326:	or     BYTE PTR [rax],al
   14002f328:	rex.WRXB xor al,0x7
   14002f32b:	add    BYTE PTR [rip+0x30000974],al        # 0x17002fca5
   14002f331:	sbb    BYTE PTR [rax],al
   14002f333:	add    BYTE PTR [rdx+0x18],cl
   14002f336:	add    BYTE PTR [rax],al
   14002f338:	cmp    al,0xf3
   14002f33a:	add    al,BYTE PTR [rax]
   14002f33c:	add    DWORD PTR [rsi],eax
   14002f33e:	add    al,BYTE PTR [rax]
   14002f340:	(bad)  
   14002f341:	xor    al,BYTE PTR [rdx]
   14002f343:	(bad)  
   14002f344:	and    DWORD PTR [rax],eax
   14002f346:	add    BYTE PTR [rax],al
   14002f348:	add    BYTE PTR [rcx],bl
   14002f34a:	add    BYTE PTR [rax],al
   14002f34c:	sbb    DWORD PTR ds:[rax],eax
   14002f34f:	add    BYTE PTR [rax+0x210002f3],dl
   14002f355:	or     al,BYTE PTR [rax+rax*1]
   14002f358:	or     dh,BYTE PTR [rax+rcx*1+0x0]
   14002f35c:	add    eax,0x664
   14002f361:	sbb    DWORD PTR [rax],eax
   14002f363:	add    BYTE PTR [rsi],bh
   14002f365:	sbb    DWORD PTR [rax],eax
   14002f367:	add    BYTE PTR [rax+0x10002f3],dl
   14002f36d:	sbb    cl,BYTE PTR [rdx]
   14002f36f:	add    BYTE PTR [rdx],bl
   14002f371:	push   rsp
   14002f372:	or     al,0x0
   14002f374:	sbb    dh,BYTE PTR [rdx+rcx*1]
   14002f377:	add    BYTE PTR [rdx],bl
   14002f379:	xor    dl,BYTE PTR [rsi]
   14002f37b:	loopne 0x14002f391
   14002f37d:	rcl    BYTE PTR [rdx],1
   14002f37f:	rcl    BYTE PTR [rax],0x70
   14002f382:	punpcklbw mm0,DWORD PTR [rcx]
   14002f385:	or     al,BYTE PTR [rax+rax*1]
   14002f388:	or     dh,BYTE PTR [rdi+rax*1]
   14002f38b:	add    BYTE PTR [rdx],cl
   14002f38d:	xor    al,BYTE PTR [rsi]
   14002f38f:	jo     0x14002f392
   14002f391:	(bad)  
   14002f392:	add    al,BYTE PTR [rax]
   14002f394:	(bad)  
   14002f395:	xor    al,BYTE PTR [rdx]
   14002f397:	xor    BYTE PTR [rcx],ah
   14002f399:	add    BYTE PTR [rax],al
   14002f39b:	add    al,al
   14002f39d:	and    al,BYTE PTR [rax]
   14002f39f:	add    BYTE PTR [rip+0xffffffffbc000025],bl        # 0xfc02f3ca
   14002f3a5:	repz add al,BYTE PTR [rax]
   14002f3a8:	and    DWORD PTR [rax],ecx
   14002f3aa:	add    al,BYTE PTR [rax]
   14002f3ac:	or     BYTE PTR [rsi+rbx*1+0x0],dl
   14002f3b0:	shl    BYTE PTR [rdx],0x0
   14002f3b3:	add    BYTE PTR [rip+0xffffffffbc000025],bl        # 0xfc02f3de
   14002f3b9:	repz add al,BYTE PTR [rax]
   14002f3bc:	add    DWORD PTR [rbx],ecx
   14002f3be:	add    eax,0x1a010b00
   14002f3c3:	add    BYTE PTR [rax+rsi*2],al
   14002f3c6:	add    esp,DWORD PTR [rax+0x2]
   14002f3c9:	xor    BYTE PTR [rax],al
   14002f3cb:	add    BYTE PTR [rcx],al
   14002f3cd:	adc    al,0x6
   14002f3cf:	add    BYTE PTR [rsp+riz*2],dl
   14002f3d2:	(bad)  
   14002f3d3:	add    BYTE PTR [rsp+rsi*1],dl
   14002f3d6:	(bad)  
   14002f3d7:	add    BYTE PTR [rdx+rsi*1],dl
   14002f3da:	adc    BYTE PTR [rax+0x21],dh
   14002f3dd:	add    BYTE PTR [rax],al
   14002f3df:	add    BYTE PTR [rax],al
   14002f3e1:	(bad)  
   14002f3e2:	add    BYTE PTR [rax],al
   14002f3e4:	sub    DWORD PTR [rdi],esp
   14002f3e6:	add    BYTE PTR [rax],al
   14002f3e8:	add    ah,dh
   14002f3ea:	add    al,BYTE PTR [rax]
   14002f3ec:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b407f3f4
   14002f3f2:	(bad)  
   14002f3f3:	add    BYTE PTR [rax],al
   14002f3f5:	(bad)  
   14002f3f6:	add    BYTE PTR [rax],al
   14002f3f8:	sub    DWORD PTR [rdi],esp
   14002f3fa:	add    BYTE PTR [rax],al
   14002f3fc:	add    ah,dh
   14002f3fe:	add    al,BYTE PTR [rax]
   14002f400:	add    DWORD PTR [rdi],ecx
   14002f402:	(bad)  
   14002f403:	add    BYTE PTR [rdi],cl
   14002f405:	push   rsp
   14002f406:	or     BYTE PTR [rax],al
   14002f408:	sysenter 
   14002f40a:	(bad)  
   14002f40b:	add    BYTE PTR [rdi],cl
   14002f40d:	xor    cl,BYTE PTR [rbx]
   14002f40f:	(bad)  
   14002f410:	add    DWORD PTR [rbx],ebx
   14002f412:	or     eax,DWORD PTR [rax]
   14002f414:	sbb    esi,DWORD PTR [rsi*4-0x53fee500]
   14002f41b:	add    BYTE PTR [rax+rsi*8],dl
   14002f41e:	adc    ah,al
   14002f420:	adc    al,dl
   14002f422:	(bad)  
   14002f423:	ror    BYTE PTR [rax+rsi*2],0xb
   14002f427:	(bad)  
   14002f428:	or     dl,BYTE PTR [rax+0x0]
   14002f42b:	add    BYTE PTR [rcx],ah
   14002f42d:	add    BYTE PTR [rax],al
   14002f42f:	add    BYTE PTR [rax+0x4b],dh
   14002f432:	add    BYTE PTR [rax],al
   14002f434:	imul   ecx,DWORD PTR [rax+rax*1+0x0],0x74
   14002f439:	hlt    
   14002f43a:	add    al,BYTE PTR [rax]
   14002f43c:	and    DWORD PTR [rax],eax
   14002f43e:	add    BYTE PTR [rax],al
   14002f440:	imul   ecx,DWORD PTR [rax+rax*1+0x0],0xffffff92
   14002f445:	rex.WR add BYTE PTR [rax],r8b
   14002f448:	(bad)  
   14002f449:	hlt    
   14002f44a:	add    al,BYTE PTR [rax]
   14002f44c:	and    DWORD PTR [rax],ecx
   14002f44e:	add    al,BYTE PTR [rax]
   14002f450:	or     ah,al
   14002f452:	adc    eax,DWORD PTR [rax]
   14002f454:	imul   ecx,DWORD PTR [rax+rax*1+0x0],0xffffff92
   14002f459:	rex.WR add BYTE PTR [rax],r8b
   14002f45c:	(bad)  
   14002f45d:	hlt    
   14002f45e:	add    al,BYTE PTR [rax]
   14002f460:	and    DWORD PTR [rax],ecx
   14002f462:	add    al,BYTE PTR [rax]
   14002f464:	or     BYTE PTR [rdx+rdx*1+0x0],dl
   14002f468:	jo     0x14002f4b5
   14002f46a:	add    BYTE PTR [rax],al
   14002f46c:	imul   ecx,DWORD PTR [rax+rax*1+0x0],0x74
   14002f471:	hlt    
   14002f472:	add    al,BYTE PTR [rax]
   14002f474:	add    DWORD PTR [rcx],edx
   14002f476:	or     BYTE PTR [rax],al
   14002f478:	adc    DWORD PTR [rsp+rdx*1],esi
   14002f47b:	add    BYTE PTR [rcx],dl
   14002f47d:	mov    dl,0xd
   14002f47f:	lock or esp,eax
   14002f482:	or     eax,edx
   14002f484:	(bad)  
   14002f485:	jo     0x14002f48d
   14002f487:	(bad)  
   14002f488:	add    DWORD PTR [rdi],ecx
   14002f48a:	add    al,0x0
   14002f48c:	sysenter 
   14002f48e:	or     DWORD PTR [rax],eax
   14002f490:	rdmsr  
   14002f492:	or     esi,DWORD PTR [rax+0x1]
   14002f495:	adc    BYTE PTR [rbx],al
   14002f497:	add    BYTE PTR [rax],dl
   14002f499:	(bad)  
   14002f49a:	or     al,0x70
   14002f49c:	or     esi,DWORD PTR [rax]
   14002f49e:	add    BYTE PTR [rax],al
   14002f4a0:	and    DWORD PTR [rax],eax
   14002f4a2:	add    BYTE PTR [rax],al
   14002f4a4:	rcl    BYTE PTR [rbx+0x0],0x0
   14002f4a8:	in     eax,dx
   14002f4a9:	push   rbx
   14002f4aa:	add    BYTE PTR [rax],al
   14002f4ac:	clc    
   14002f4ad:	cmc    
   14002f4ae:	add    al,BYTE PTR [rax]
   14002f4b0:	and    DWORD PTR [rax],eax
   14002f4b2:	add    al,BYTE PTR [rax]
   14002f4b4:	add    BYTE PTR [rsi+rax*1],dh
   14002f4b7:	add    al,al
   14002f4b9:	push   rbx
   14002f4ba:	add    BYTE PTR [rax],al
   14002f4bc:	in     eax,dx
   14002f4bd:	push   rbx
   14002f4be:	add    BYTE PTR [rax],al
   14002f4c0:	clc    
   14002f4c1:	cmc    
   14002f4c2:	add    al,BYTE PTR [rax]
   14002f4c4:	and    DWORD PTR [rax],eax
   14002f4c6:	add    BYTE PTR [rax],al
   14002f4c8:	in     eax,dx
   14002f4c9:	push   rbx
   14002f4ca:	add    BYTE PTR [rax],al
   14002f4cc:	add    eax,0xe8000054
   14002f4d1:	hlt    
   14002f4d2:	add    al,BYTE PTR [rax]
   14002f4d4:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b407f4dc
   14002f4da:	(bad)  
   14002f4db:	add    ch,ch
   14002f4dd:	push   rbx
   14002f4de:	add    BYTE PTR [rax],al
   14002f4e0:	add    eax,0xe8000054
   14002f4e5:	hlt    
   14002f4e6:	add    al,BYTE PTR [rax]
   14002f4e8:	and    DWORD PTR [rip+0x34050002],eax        # 0x17407f4f0
   14002f4ee:	(bad)  
   14002f4ef:	add    al,al
   14002f4f1:	push   rbx
   14002f4f2:	add    BYTE PTR [rax],al
   14002f4f4:	in     eax,dx
   14002f4f5:	push   rbx
   14002f4f6:	add    BYTE PTR [rax],al
   14002f4f8:	clc    
   14002f4f9:	cmc    
   14002f4fa:	add    al,BYTE PTR [rax]
   14002f4fc:	and    DWORD PTR [rax],eax
   14002f4fe:	add    BYTE PTR [rax],al
   14002f500:	movabs al,ds:0x24000054ca000054
   14002f509:	cmc    
   14002f50a:	add    al,BYTE PTR [rax]
   14002f50c:	and    DWORD PTR [rdx],ecx
   14002f50e:	add    al,0x0
   14002f510:	or     dh,BYTE PTR [rdi+rax*1+0x0]
   14002f514:	add    eax,0xa0000634
   14002f519:	push   rsp
   14002f51a:	add    BYTE PTR [rax],al
   14002f51c:	retf   0x54
   14002f51f:	add    BYTE PTR [rsi*8+0xf010002],ah
   14002f526:	add    al,0x0
   14002f528:	andps  xmm1,XMMWORD PTR [rax]
   14002f52b:	add    BYTE PTR [rdi],cl
   14002f52d:	xor    cl,BYTE PTR [rbx]
   14002f52f:	(bad)  
   14002f530:	and    DWORD PTR [rax],eax
   14002f532:	add    BYTE PTR [rax],al
   14002f534:	and    BYTE PTR [rbp+0x0],dl
   14002f537:	add    BYTE PTR [rbp+0x55],al
   14002f53a:	add    BYTE PTR [rax],al
   14002f53c:	ins    BYTE PTR es:[rdi],dx
   14002f53d:	cmc    
   14002f53e:	add    al,BYTE PTR [rax]
   14002f540:	and    DWORD PTR [rax],eax
   14002f542:	add    al,BYTE PTR [rax]
   14002f544:	add    BYTE PTR [rdx+rcx*1+0x0],dh
   14002f548:	and    BYTE PTR [rbp+0x0],dl
   14002f54b:	add    BYTE PTR [rbp+0x55],al
   14002f54e:	add    BYTE PTR [rax],al
   14002f550:	ins    BYTE PTR es:[rdi],dx
   14002f551:	cmc    
   14002f552:	add    al,BYTE PTR [rax]
   14002f554:	and    DWORD PTR [rip+0x341d0004],ebx        # 0x1741ff55e
   14002f55a:	or     DWORD PTR [rax],eax
   14002f55c:	add    eax,0x20000a74
   14002f561:	push   rbp
   14002f562:	add    BYTE PTR [rax],al
   14002f564:	rex.RB push r13
   14002f566:	add    BYTE PTR [rax],al
   14002f568:	ins    BYTE PTR es:[rdi],dx
   14002f569:	cmc    
   14002f56a:	add    al,BYTE PTR [rax]
   14002f56c:	add    DWORD PTR [rcx],ecx
   14002f56e:	add    al,0x0
   14002f570:	or     DWORD PTR [rdx],esi
   14002f572:	add    eax,0x26003c0
   14002f577:	push   rax
   14002f578:	and    DWORD PTR [rax],eax
   14002f57a:	add    BYTE PTR [rax],al
   14002f57c:	add    BYTE PTR [rsi+0x0],dl
   14002f57f:	add    BYTE PTR [rcx],ah
   14002f581:	push   rsi
   14002f582:	add    BYTE PTR [rax],al
   14002f584:	(bad)  
   14002f585:	cmc    
   14002f586:	add    al,BYTE PTR [rax]
   14002f588:	and    DWORD PTR [rax],eax
   14002f58a:	add    BYTE PTR [rax],al
   14002f58c:	and    DWORD PTR [rsi+0x0],edx
   14002f58f:	add    BYTE PTR [rsi+0x56],cl
   14002f592:	add    BYTE PTR [rax],al
   14002f594:	lods   al,BYTE PTR ds:[rsi]
   14002f595:	cmc    
   14002f596:	add    al,BYTE PTR [rax]
   14002f598:	and    DWORD PTR [rip+0xffffffffd4050002],eax        # 0x11407f5a0
   14002f59e:	or     eax,DWORD PTR [rax]
   14002f5a0:	and    DWORD PTR [rsi+0x0],edx
   14002f5a3:	add    BYTE PTR [rsi+0x56],cl
   14002f5a6:	add    BYTE PTR [rax],al
   14002f5a8:	lods   al,BYTE PTR ds:[rsi]
   14002f5a9:	cmc    
   14002f5aa:	add    al,BYTE PTR [rax]
   14002f5ac:	and    DWORD PTR [rdx],ecx
   14002f5ae:	add    al,0x0
   14002f5b0:	or     al,ah
   14002f5b2:	or     al,BYTE PTR [rax]
   14002f5b4:	add    eax,0x964
   14002f5b9:	push   rsi
   14002f5ba:	add    BYTE PTR [rax],al
   14002f5bc:	and    DWORD PTR [rsi+0x0],edx
   14002f5bf:	add    ah,al
   14002f5c1:	cmc    
   14002f5c2:	add    al,BYTE PTR [rax]
   14002f5c4:	add    DWORD PTR [rax],ecx
   14002f5c6:	add    al,0x0
   14002f5c8:	or     BYTE PTR [rdx],dh
   14002f5ca:	add    al,0x70
   14002f5cc:	add    edx,DWORD PTR [rax+0x2]
   14002f5cf:	xor    BYTE PTR [rcx],ah
   14002f5d1:	add    BYTE PTR [rax],al
   14002f5d3:	add    BYTE PTR [rax+0x57],dh
   14002f5d6:	add    BYTE PTR [rax],al
   14002f5d8:	lahf   
   14002f5d9:	push   rdi
   14002f5da:	add    BYTE PTR [rax],al
   14002f5dc:	clc    
   14002f5dd:	cmc    
   14002f5de:	add    al,BYTE PTR [rax]
   14002f5e0:	and    DWORD PTR [rsp+rax*1],ecx
   14002f5e3:	add    BYTE PTR [rsp+rsi*2],cl
   14002f5e6:	(bad)  
   14002f5e7:	add    BYTE PTR [rip+0x70000634],al        # 0x1b002fc21
   14002f5ed:	push   rdi
   14002f5ee:	add    BYTE PTR [rax],al
   14002f5f0:	lahf   
   14002f5f1:	push   rdi
   14002f5f2:	add    BYTE PTR [rax],al
   14002f5f4:	clc    
   14002f5f5:	cmc    
   14002f5f6:	add    al,BYTE PTR [rax]
   14002f5f8:	add    DWORD PTR [rax],edx
   14002f5fa:	(bad)  
   14002f5fb:	add    BYTE PTR [rax],dl
   14002f5fd:	or     DWORD PTR fs:[rax],eax
   14002f600:	adc    BYTE PTR [rax+rcx*1+0x0],dl
   14002f604:	adc    BYTE PTR [rdx],dh
   14002f606:	or     al,0xc0
   14002f608:	add    DWORD PTR [rax],ebx
   14002f60a:	or     BYTE PTR [rax],al
   14002f60c:	sbb    BYTE PTR [rcx+rcx*1+0x0],ah
   14002f610:	sbb    BYTE PTR [rax+rcx*1+0x0],dl
   14002f614:	sbb    BYTE PTR [rsi+rax*1],dh
   14002f617:	add    BYTE PTR [rax],bl
   14002f619:	xor    dl,BYTE PTR [rax+rsi*2]
   14002f61c:	and    DWORD PTR [rax],eax
   14002f61e:	add    BYTE PTR [rax],al
   14002f620:	mov    al,0x5c
   14002f622:	add    BYTE PTR [rax],al
   14002f624:	push   rdx
   14002f625:	pop    rbp
   14002f626:	add    BYTE PTR [rax],al
   14002f628:	rex test BYTE PTR [rdx],0x0
   14002f62c:	and    DWORD PTR [rip+0x64050002],eax        # 0x1a407f634
   14002f632:	(bad)  
   14002f633:	add    BYTE PTR [rax+0x5200005c],dh
   14002f639:	pop    rbp
   14002f63a:	add    BYTE PTR [rax],al
   14002f63c:	rex test BYTE PTR [rdx],0x0
   14002f640:	add    DWORD PTR [rdx],ecx
   14002f642:	add    al,0x0
   14002f644:	or     dh,BYTE PTR [rcx+rcx*1]
   14002f647:	add    BYTE PTR [rdx],cl
   14002f649:	xor    al,BYTE PTR [rsi]
   14002f64b:	jo     0x14002f64e
   14002f64d:	add    al,0x1
   14002f64f:	add    BYTE PTR [rdx+rax*2],al
   14002f652:	add    BYTE PTR [rax],al
   14002f654:	add    DWORD PTR [rax+rcx*1],edx
   14002f657:	add    BYTE PTR [rsp+riz*2],dl
   14002f65a:	or     eax,DWORD PTR [rax]
   14002f65c:	adc    al,0x54
   14002f65e:	or     al,BYTE PTR [rax]
   14002f660:	adc    al,0x34
   14002f662:	or     DWORD PTR [rax],eax
   14002f664:	adc    al,0x52
   14002f666:	adc    BYTE PTR [rax+0x21],dh
   14002f669:	add    BYTE PTR [rax],al
   14002f66b:	add    BYTE PTR [rax-0xfffffa0],al
   14002f671:	(bad)  
   14002f672:	add    BYTE PTR [rax],al
   14002f674:	nop
   14002f675:	test   BYTE PTR [rdx],0x0
   14002f678:	and    DWORD PTR [rdx],ecx
   14002f67a:	add    al,0x0
   14002f67c:	or     ah,BYTE PTR [rcx+rcx*1+0x0]
   14002f680:	add    eax,0x80000854
   14002f685:	(bad)  
   14002f686:	add    BYTE PTR [rax],al
   14002f688:	lock (bad) 
   14002f68a:	add    BYTE PTR [rax],al
   14002f68c:	nop
   14002f68d:	test   BYTE PTR [rdx],0x0
   14002f690:	add    DWORD PTR [rdi+rax*1],ebp
   14002f693:	add    BYTE PTR [rsp+rdx*8],ch
   14002f696:	add    al,0x0
   14002f698:	(bad)  
   14002f699:	(bad)  
   14002f69a:	or     al,BYTE PTR [rax]
   14002f69c:	(bad)  
   14002f69d:	rex.X add esi,DWORD PTR [rax+0x2]
   14002f6a1:	xor    BYTE PTR [rax],al
   14002f6a3:	add    BYTE PTR [rcx],ah
   14002f6a5:	add    BYTE PTR [rax],al
   14002f6a7:	add    BYTE PTR [rax-0x18ffff9f],al
   14002f6ad:	(bad)  
   14002f6ae:	add    BYTE PTR [rax],al
   14002f6b0:	enter  0x2f6,0x0
   14002f6b4:	and    DWORD PTR [rip+0x34050002],eax        # 0x17407f6bc
   14002f6ba:	(bad)  
   14002f6bb:	add    BYTE PTR [rax-0x18ffff9f],al
   14002f6c1:	(bad)  
   14002f6c2:	add    BYTE PTR [rax],al
   14002f6c4:	enter  0x2f6,0x0
   14002f6c8:	add    DWORD PTR [rip+0x74150008],edx        # 0x1b417f6d6
   14002f6ce:	or     DWORD PTR [rax],eax
   14002f6d0:	adc    eax,0x15000864
   14002f6d5:	push   rsp
   14002f6d6:	(bad)  
   14002f6d7:	add    BYTE PTR [rip+0x21c01132],dl        # 0x161c3080f
   14002f6dd:	add    BYTE PTR [rax],al
   14002f6df:	add    BYTE PTR [rax+0x63],al
   14002f6e2:	add    BYTE PTR [rax],al
   14002f6e4:	loope  0x14002f749
   14002f6e6:	add    BYTE PTR [rax],al
   14002f6e8:	add    bh,dh
   14002f6ea:	add    al,BYTE PTR [rax]
   14002f6ec:	and    DWORD PTR [rip+0xffffffffc4050002],eax        # 0x10407f6f4
   14002f6f2:	or     al,BYTE PTR [rax]
   14002f6f4:	rex movsxd eax,DWORD PTR [rax]
   14002f6f7:	add    cl,ah
   14002f6f9:	movsxd eax,DWORD PTR [rax]
   14002f6fb:	add    BYTE PTR [rax],al
   14002f6fd:	test   DWORD PTR [rdx],0xb4e0100
   14002f703:	add    BYTE PTR [rsi+0x74],cl
   14002f706:	or     DWORD PTR [rax],eax
   14002f708:	rex.RB xor al,0x8
   14002f70b:	add    BYTE PTR [rsp+riz*8],ch
   14002f70e:	add    al,0x0
   14002f710:	(bad)  
   14002f711:	(bad)  
   14002f712:	or     eax,DWORD PTR [rax]
   14002f714:	(bad)  
   14002f715:	rex.X add esp,DWORD PTR [rax+0x2]
   14002f719:	push   rax
   14002f71a:	add    BYTE PTR [rax],al
   14002f71c:	add    DWORD PTR [rsp+rcx*1],ebx
   14002f71f:	add    BYTE PTR [rsp+riz*2],bl
   14002f722:	or     al,0x0
   14002f724:	sbb    al,0x54
   14002f726:	or     eax,DWORD PTR [rax]
   14002f728:	sbb    al,0x34
   14002f72a:	or     al,BYTE PTR [rax]
   14002f72c:	sbb    al,0x32
   14002f72e:	sbb    al,dh
   14002f730:	(bad)  
   14002f731:	loopne 0x14002f747
   14002f733:	rcl    BYTE PTR [rdx],1
   14002f735:	rcl    BYTE PTR [rax],0x70
   14002f738:	add    DWORD PTR [rsi+rax*1],ecx
   14002f73b:	add    BYTE PTR [rsp+rsi*1],cl
   14002f73e:	or     DWORD PTR [rax],eax
   14002f740:	or     al,0x32
   14002f742:	or     BYTE PTR [rax+0x7],dh
   14002f745:	(bad)  
   14002f746:	(bad)  
   14002f747:	push   rax
   14002f748:	and    DWORD PTR [rax],eax
   14002f74a:	add    BYTE PTR [rax],al
   14002f74c:	nop
   14002f74d:	add    BYTE PTR [eax],al
   14002f750:	leave  
   14002f751:	add    BYTE PTR [eax],al
   14002f754:	ins    BYTE PTR es:[rdi],dx
   14002f755:	test   DWORD PTR [rdx],0x2052100
   14002f75b:	add    BYTE PTR [rip+0xffffffff90000a54],al        # 0xd00301b5
   14002f761:	add    BYTE PTR [eax],al
   14002f764:	leave  
   14002f765:	add    BYTE PTR [eax],al
   14002f768:	ins    BYTE PTR es:[rdi],dx
   14002f769:	test   DWORD PTR [rdx],0x60f0100
   14002f76f:	add    BYTE PTR [rdi],cl
   14002f771:	fs or  al,0x0
   14002f774:	sysenter 
   14002f776:	or     eax,DWORD PTR [rax]
   14002f778:	(bad)  
   14002f77a:	or     esi,DWORD PTR [rax+0x1]
   14002f77d:	adc    cl,BYTE PTR [rax]
   14002f77f:	add    BYTE PTR [rdx],dl
   14002f781:	push   rsp
   14002f782:	or     eax,0xc341200
   14002f787:	add    BYTE PTR [rdx],dl
   14002f789:	jb     0x14002f799
   14002f78b:	ror    BYTE PTR [rax+rsi*2],0xb
   14002f78f:	(bad)  
   14002f790:	add    DWORD PTR [rsi+rax*1],ecx
   14002f793:	add    BYTE PTR [rsp+rsi*1],cl
   14002f796:	str    WORD PTR [rdx+rsi*2]
   14002f79a:	or     BYTE PTR [rax+0x7],dh
   14002f79d:	(bad)  
   14002f79e:	(bad)  
   14002f79f:	push   rax
   14002f7a0:	and    DWORD PTR [rax],eax
   14002f7a2:	add    BYTE PTR [rax],al
   14002f7a4:	add    BYTE PTR [rax+rax*1+0x0],ch
   14002f7a8:	(bad)  
   14002f7a9:	ins    BYTE PTR es:[rdi],dx
   14002f7aa:	add    BYTE PTR [rax],al
   14002f7ac:	nop
   14002f7ad:	repz add al,BYTE PTR [rax]
   14002f7b0:	and    DWORD PTR [rdx],ecx
   14002f7b2:	add    al,0x0
   14002f7b4:	or     dh,BYTE PTR [rdi+rax*1+0x0]
   14002f7b8:	add    eax,0x664
   14002f7bd:	ins    BYTE PTR es:[rdi],dx
   14002f7be:	add    BYTE PTR [rax],al
   14002f7c0:	(bad)  
   14002f7c1:	ins    BYTE PTR es:[rdi],dx
   14002f7c2:	add    BYTE PTR [rax],al
   14002f7c4:	nop
   14002f7c5:	repz add al,BYTE PTR [rax]
   14002f7c8:	and    DWORD PTR [rax],eax
   14002f7ca:	add    BYTE PTR [rax],al
   14002f7cc:	nop
   14002f7cd:	ins    BYTE PTR es:[rdi],dx
   14002f7ce:	add    BYTE PTR [rax],al
   14002f7d0:	add    al,0x6d
   14002f7d2:	add    BYTE PTR [rax],al
   14002f7d4:	in     al,dx
   14002f7d5:	test   DWORD PTR [rdx],0x2082100
   14002f7db:	add    BYTE PTR [rax],cl
   14002f7dd:	adc    al,BYTE PTR fs:[rax]
   14002f7e0:	nop
   14002f7e1:	ins    BYTE PTR es:[rdi],dx
   14002f7e2:	add    BYTE PTR [rax],al
   14002f7e4:	add    al,0x6d
   14002f7e6:	add    BYTE PTR [rax],al
   14002f7e8:	in     al,dx
   14002f7e9:	test   DWORD PTR [rdx],0x8130100
   14002f7ef:	add    BYTE PTR [rbx],dl
   14002f7f1:	push   rsp
   14002f7f2:	adc    al,0x0
   14002f7f4:	adc    esi,DWORD PTR [rbx+rdx*1]
   14002f7f7:	add    BYTE PTR [rbx],dl
   14002f7f9:	ror    BYTE PTR [rdi],cl
   14002f7fb:	ror    BYTE PTR [rip+0x21700bc0],1        # 0x1617303c1
   14002f801:	add    BYTE PTR [rax],al
   14002f803:	add    al,dh
   14002f805:	outs   dx,DWORD PTR ds:[rsi]
   14002f806:	add    BYTE PTR [rax],al
   14002f808:	adc    dh,BYTE PTR [rbx+0x0]
   14002f80b:	add    BYTE PTR [rax+rdi*8],ah
   14002f80e:	add    al,BYTE PTR [rax]
   14002f810:	and    DWORD PTR [rax],ecx
   14002f812:	add    al,BYTE PTR [rax]
   14002f814:	or     ah,al
   14002f816:	xor    BYTE PTR [rax],al
   14002f818:	lock outs dx,DWORD PTR ds:[rsi]
   14002f81a:	add    BYTE PTR [rax],al
   14002f81c:	adc    dh,BYTE PTR [rbx+0x0]
   14002f81f:	add    BYTE PTR [rax+rdi*8],ah
   14002f822:	add    al,BYTE PTR [rax]
   14002f824:	add    DWORD PTR [rdx],edx
   14002f826:	or     DWORD PTR [rax],eax
   14002f828:	adc    al,BYTE PTR [rcx]
   14002f82a:	sub    BYTE PTR [rax],al
   14002f82c:	or     esi,eax
   14002f82e:	or     eax,esp
   14002f830:	(bad)  
   14002f831:	rol    BYTE PTR [rip+0x3600470],1        # 0x14362fca7
   14002f837:	push   rax
   14002f838:	add    dh,BYTE PTR [rax]
   14002f83a:	add    BYTE PTR [rax],al
   14002f83c:	and    DWORD PTR [rax],eax
   14002f83e:	add    BYTE PTR [rax],al
   14002f840:	xor    BYTE PTR [rdi+0x0],dh
   14002f843:	add    BYTE PTR [rbx+0x7a],dl
   14002f846:	add    BYTE PTR [rax],al
   14002f848:	(bad)  
   14002f849:	clc    
   14002f84a:	add    al,BYTE PTR [rax]
   14002f84c:	and    DWORD PTR [rax],ecx
   14002f84e:	add    al,BYTE PTR [rax]
   14002f850:	or     ah,al
   14002f852:	add    BYTE PTR cs:[rax],dh
   14002f855:	ja     0x14002f857
   14002f857:	add    BYTE PTR [rbx+0x7a],dl
   14002f85a:	add    BYTE PTR [rax],al
   14002f85c:	(bad)  
   14002f85d:	clc    
   14002f85e:	add    al,BYTE PTR [rax]
   14002f860:	add    DWORD PTR [rcx],ebx
   14002f862:	or     eax,DWORD PTR [rax]
   14002f864:	sbb    DWORD PTR [rcx+rsi*1+0x0],edx
   14002f868:	sbb    DWORD PTR [rax+rsi*1],esi
   14002f86b:	add    BYTE PTR [rcx],bl
   14002f86d:	add    DWORD PTR [rax],ebp
   14002f86f:	add    BYTE PTR [rdx],dl
   14002f871:	lock adc al,ah
   14002f874:	(bad)  
   14002f875:	ror    BYTE PTR [rax+rsi*2],1
   14002f878:	or     esp,DWORD PTR [rax+0x0]
   14002f87b:	add    BYTE PTR [rcx],ah
   14002f87d:	add    BYTE PTR [rax],al
   14002f87f:	add    al,dl
   14002f881:	jle    0x14002f883
   14002f883:	add    BYTE PTR [rcx+0x7f],ch
   14002f886:	add    BYTE PTR [rax],al
   14002f888:	(bad)  
   14002f889:	clc    
   14002f88a:	add    al,BYTE PTR [rax]
   14002f88c:	and    DWORD PTR [rax],eax
   14002f88e:	add    BYTE PTR [rax],al
   14002f890:	imul   edi,DWORD PTR [rdi+0x0],0x7f8200
   14002f897:	add    BYTE PTR [rax+0x210002f8],dh
   14002f89d:	add    eax,0x64050002
   14002f8a2:	or     al,0x0
   14002f8a4:	imul   edi,DWORD PTR [rdi+0x0],0x7f8200
   14002f8ab:	add    BYTE PTR [rax+0x210002f8],dh
   14002f8b1:	add    eax,0x74050002
   14002f8b6:	or     eax,0x7ed000
   14002f8bb:	add    BYTE PTR [rcx+0x7f],ch
   14002f8be:	add    BYTE PTR [rax],al
   14002f8c0:	(bad)  
   14002f8c1:	clc    
   14002f8c2:	add    al,BYTE PTR [rax]
   14002f8c4:	add    DWORD PTR [rsi],ecx
   14002f8c6:	(bad)  
   14002f8c7:	add    BYTE PTR [rsi],cl
   14002f8c9:	xor    al,0xf
   14002f8cb:	add    BYTE PTR [rsi],cl
   14002f8cd:	jb     0x14002f8d9
   14002f8cf:	ror    BYTE PTR [rax],1
   14002f8d1:	rol    BYTE PTR [rsi],0x50
   14002f8d4:	and    DWORD PTR [rax],eax
   14002f8d6:	add    BYTE PTR [rax],al
   14002f8d8:	rol    BYTE PTR [rax-0x7f310000],0x0
   14002f8df:	add    BYTE PTR [rax-0x7],bl
   14002f8e2:	add    al,BYTE PTR [rax]
   14002f8e4:	and    DWORD PTR [rax],eax
   14002f8e6:	add    al,BYTE PTR [rax]
   14002f8e8:	add    BYTE PTR [rax+rdx*1+0x0],dh
   14002f8ec:	rol    BYTE PTR [rax-0x7f310000],0x0
   14002f8f3:	add    BYTE PTR [rax-0x7],bl
   14002f8f6:	add    al,BYTE PTR [rax]
   14002f8f8:	and    DWORD PTR [rax],eax
   14002f8fa:	add    BYTE PTR [rax],al
   14002f8fc:	iret   
   14002f8fd:	add    BYTE PTR [rax],0x0
   14002f900:	je     0x14002f884
   14002f902:	add    BYTE PTR [rax],al
   14002f904:	rex stc 
   14002f906:	add    al,BYTE PTR [rax]
   14002f908:	and    DWORD PTR [rax],eax
   14002f90a:	add    BYTE PTR [rax],al
   14002f90c:	je     0x14002f890
   14002f90e:	add    BYTE PTR [rax],al
   14002f910:	pop    QWORD PTR [rdx-0x6d40000]
   14002f916:	add    al,BYTE PTR [rax]
   14002f918:	and    DWORD PTR [rax],ecx
   14002f91a:	add    al,BYTE PTR [rax]
   14002f91c:	or     BYTE PTR [rsp+rdx*1],dh
   14002f91f:	add    BYTE PTR [rdx+rax*4+0x0],dh
   14002f923:	add    BYTE PTR [rdi+0x2c000082],cl
   14002f929:	stc    
   14002f92a:	add    al,BYTE PTR [rax]
   14002f92c:	and    DWORD PTR [rax],ecx
   14002f92e:	add    al,BYTE PTR [rax]
   14002f930:	or     BYTE PTR [rbp+rdx*1+0x0],dl
   14002f934:	iret   
   14002f935:	add    BYTE PTR [rax],0x0
   14002f938:	je     0x14002f8bc
   14002f93a:	add    BYTE PTR [rax],al
   14002f93c:	rex stc 
   14002f93e:	add    al,BYTE PTR [rax]
   14002f940:	and    DWORD PTR [rsp+rax*1],ecx
   14002f943:	add    BYTE PTR [rsp+rsi*2],cl
   14002f946:	adc    BYTE PTR [rax],al
   14002f948:	add    al,0x64
   14002f94a:	adc    DWORD PTR [rax],eax
   14002f94c:	rol    BYTE PTR [rax-0x7f310000],0x0
   14002f953:	add    BYTE PTR [rax-0x7],bl
   14002f956:	add    al,BYTE PTR [rax]
   14002f958:	add    DWORD PTR [rbx+rax*1],ecx
   14002f95b:	add    BYTE PTR [rcx+rax*1],cl
   14002f95e:	adc    al,BYTE PTR [rax]
   14002f960:	add    eax,0x10000c0
   14002f965:	pop    rdx
   14002f966:	or     al,BYTE PTR [rax]
   14002f968:	pop    rdx
   14002f969:	fs (bad) 
   14002f96b:	add    BYTE PTR [rsi+0x34],cl
   14002f96e:	(bad)  
   14002f96f:	add    BYTE PTR [rax],dl
   14002f971:	je     0x14002f97c
   14002f973:	add    BYTE PTR [rax],dl
   14002f975:	push   rsp
   14002f976:	or     BYTE PTR [rax],al
   14002f978:	adc    BYTE PTR [rdx],dh
   14002f97a:	or     al,0xc0
   14002f97c:	and    DWORD PTR [rax],eax
   14002f97e:	add    al,BYTE PTR [rax]
   14002f980:	add    ah,dh
   14002f982:	sldt   WORD PTR [rax-0x76]
   14002f986:	add    BYTE PTR [rax],al
   14002f988:	mov    eax,0xd400008a
   14002f98d:	stc    
   14002f98e:	add    al,BYTE PTR [rax]
   14002f990:	and    DWORD PTR [rax],eax
   14002f992:	add    al,BYTE PTR [rax]
   14002f994:	add    ah,dh
   14002f996:	(bad)  
   14002f998:	mov    eax,0xc800008a
   14002f99d:	mov    al,BYTE PTR [rax]
   14002f99f:	add    BYTE PTR [rcx+rdi*8+0x1e210002],bh
   14002f9a6:	add    al,0x0
   14002f9a8:	(bad)  
   14002f9a9:	hlt    
   14002f9aa:	str    WORD PTR [rax]
   14002f9ad:	in     al,0x10
   14002f9af:	add    BYTE PTR [rax-0x37ffff76],bh
   14002f9b5:	mov    al,BYTE PTR [rax]
   14002f9b7:	add    BYTE PTR [rcx+rdi*8+0x10210002],bh
   14002f9be:	add    al,0x0
   14002f9c0:	adc    ah,dl
   14002f9c2:	adc    DWORD PTR [rax],eax
   14002f9c4:	or     ah,al
   14002f9c6:	adc    al,BYTE PTR [rax]
   14002f9c8:	mov    al,BYTE PTR [rax]
   14002f9cb:	add    BYTE PTR [rax-0x2bffff76],bh
   14002f9d1:	stc    
   14002f9d2:	add    al,BYTE PTR [rax]
   14002f9d4:	add    DWORD PTR [rax+0x8],edi
   14002f9d7:	add    BYTE PTR [rax+0x74],bh
   14002f9da:	adc    eax,DWORD PTR [rax]
   14002f9dc:	jo     0x14002fa42
   14002f9de:	adc    al,0x0
   14002f9e0:	adc    eax,DWORD PTR [rcx]
   14002f9e2:	adc    eax,0xb500c00
   14002f9e7:	xor    BYTE PTR [rcx],ah
   14002f9e9:	add    BYTE PTR [rax],al
   14002f9eb:	add    al,al
   14002f9ed:	pop    QWORD PTR [rax]
   14002f9ef:	add    bl,bl
   14002f9f1:	pop    QWORD PTR [rax]
   14002f9f3:	add    BYTE PTR [rax-0x6],ah
   14002f9f6:	add    al,BYTE PTR [rax]
   14002f9f8:	and    DWORD PTR [rax],eax
   14002f9fa:	add    BYTE PTR [rax],al
   14002f9fc:	fisttp DWORD PTR [rdi-0x70210000]
   14002fa02:	add    BYTE PTR [rax],al
   14002fa04:	rex.WR cli 
   14002fa06:	add    al,BYTE PTR [rax]
   14002fa08:	and    DWORD PTR [rax],eax
   14002fa0a:	add    BYTE PTR [rax],al
   14002fa0c:	fisttp WORD PTR [rdi-0x6fb40000]
   14002fa12:	add    BYTE PTR [rax],al
   14002fa14:	xor    dl,bh
   14002fa16:	add    al,BYTE PTR [rax]
   14002fa18:	and    DWORD PTR [rax],ecx
   14002fa1a:	add    al,0x0
   14002fa1c:	or     ah,ah
   14002fa1e:	sbb    al,BYTE PTR [rax]
   14002fa20:	add    al,0x64
   14002fa22:	sbb    eax,0x8fdf00
   14002fa27:	add    BYTE PTR [rax+rdx*4+0x0],cl
   14002fa2b:	add    BYTE PTR [rax],dh
   14002fa2d:	cli    
   14002fa2e:	add    al,BYTE PTR [rax]
   14002fa30:	and    DWORD PTR [rdx+0x6],eax
   14002fa33:	add    BYTE PTR [rdx-0xc],al
   14002fa36:	sbb    DWORD PTR [rax],eax
   14002fa38:	adc    dl,ah
   14002fa3a:	sbb    eax,DWORD PTR [rax]
   14002fa3c:	add    al,0xc4
   14002fa3e:	sbb    al,0x0
   14002fa40:	fisttp DWORD PTR [rdi-0x70210000]
   14002fa46:	add    BYTE PTR [rax],al
   14002fa48:	rex.WR cli 
   14002fa4a:	add    al,BYTE PTR [rax]
   14002fa4c:	and    DWORD PTR [rdx+rax*1],eax
   14002fa4f:	add    BYTE PTR [rsp+rsi*1],al
   14002fa52:	(bad)  
   14002fa53:	add    al,al
   14002fa55:	pop    QWORD PTR [rax]
   14002fa57:	add    bl,bl
   14002fa59:	pop    QWORD PTR [rax]
   14002fa5b:	add    BYTE PTR [rax-0x6],ah
   14002fa5e:	add    al,BYTE PTR [rax]
   14002fa60:	add    DWORD PTR [rsp+rax*1],edx
   14002fa63:	add    BYTE PTR [rcx+rax*1],dl
   14002fa66:	(bad)  
   14002fa67:	add    BYTE PTR [rip+0x21500c70],cl        # 0x1615306dd
   14002fa6d:	add    BYTE PTR [rax],al
   14002fa6f:	add    BYTE PTR [rax-0x67],ah
   14002fa72:	add    BYTE PTR [rax],al
   14002fa74:	xchg   ebp,eax
   14002fa75:	cdq    
   14002fa76:	add    BYTE PTR [rax],al
   14002fa78:	(bad)  
   14002fa79:	cli    
   14002fa7a:	add    al,BYTE PTR [rax]
   14002fa7c:	and    DWORD PTR [rax],eax
   14002fa7e:	add    BYTE PTR [rax],al
   14002fa80:	xchg   ebp,eax
   14002fa81:	cdq    
   14002fa82:	add    BYTE PTR [rax],al
   14002fa84:	adc    eax,0xc000009a
   14002fa89:	cli    
   14002fa8a:	add    al,BYTE PTR [rax]
   14002fa8c:	and    DWORD PTR [rax],eax
   14002fa8e:	add    al,BYTE PTR [rax]
   14002fa90:	add    ah,dh
   14002fa92:	sbb    BYTE PTR [rax],al
   14002fa94:	xchg   ebp,eax
   14002fa95:	cdq    
   14002fa96:	add    BYTE PTR [rax],al
   14002fa98:	adc    eax,0xc000009a
   14002fa9d:	cli    
   14002fa9e:	add    al,BYTE PTR [rax]
   14002faa0:	and    DWORD PTR [rdi],esp
   14002faa2:	or     BYTE PTR [rax],al
   14002faa4:	(bad)  
   14002faa5:	hlt    
   14002faa6:	sbb    BYTE PTR [rax],al
   14002faa8:	(bad)  
   14002faa9:	(bad)  
   14002faaa:	sbb    DWORD PTR [rax],eax
   14002faac:	adc    ah,al
   14002faae:	and    DWORD PTR [rax],eax
   14002fab0:	or     BYTE PTR [rax+riz*1+0x0],ah
   14002fab4:	xchg   ebp,eax
   14002fab5:	cdq    
   14002fab6:	add    BYTE PTR [rax],al
   14002fab8:	adc    eax,0xc000009a
   14002fabd:	cli    
   14002fabe:	add    al,BYTE PTR [rax]
   14002fac0:	and    DWORD PTR [rax],ecx
   14002fac2:	add    al,BYTE PTR [rax]
   14002fac4:	or     BYTE PTR [rsi+rbx*1],dh
   14002fac7:	add    BYTE PTR [rax-0x67],ah
   14002faca:	add    BYTE PTR [rax],al
   14002facc:	xchg   ebp,eax
   14002facd:	cdq    
   14002face:	add    BYTE PTR [rax],al
   14002fad0:	(bad)  
   14002fad1:	cli    
   14002fad2:	add    al,BYTE PTR [rax]
   14002fad4:	add    DWORD PTR [rax*1+0x1a010c00],ecx
   14002fadb:	add    BYTE PTR [rip+0x27003e0],al        # 0x14272fec1
   14002fae1:	push   rax
   14002fae2:	add    BYTE PTR [rax],al
   14002fae4:	and    DWORD PTR [rax],eax
   14002fae6:	add    BYTE PTR [rax],al
   14002fae8:	and    BYTE PTR [rdi-0x5fbc0000],bl
   14002faee:	add    BYTE PTR [rax],al
   14002faf0:	or     al,0xfb
   14002faf2:	add    al,BYTE PTR [rax]
   14002faf4:	and    DWORD PTR [rax],edx
   14002faf6:	add    al,0x0
   14002faf8:	adc    ah,ah
   14002fafa:	(bad)  
   14002fafb:	add    BYTE PTR [rax],cl
   14002fafd:	(bad)  
   14002fafe:	sbb    BYTE PTR [rax],al
   14002fb00:	and    BYTE PTR [rdi-0x5fbc0000],bl
   14002fb06:	add    BYTE PTR [rax],al
   14002fb08:	or     al,0xfb
   14002fb0a:	add    al,BYTE PTR [rax]
   14002fb0c:	add    DWORD PTR [rax+rcx*1],edx
   14002fb0f:	add    BYTE PTR [rcx+rax*1],dl
   14002fb12:	sbb    DWORD PTR [rax],eax
   14002fb14:	or     eax,0x9d00bf0
   14002fb19:	jo     0x14002fb23
   14002fb1b:	(bad)  
   14002fb1c:	(bad)  
   14002fb1d:	push   rax
   14002fb1e:	(bad)  
   14002fb1f:	xor    BYTE PTR [rcx],al
   14002fb21:	cs (bad) 
   14002fb23:	add    BYTE PTR [rsi],ch
   14002fb25:	fs (bad) 
   14002fb27:	add    BYTE PTR [rdx],cl
   14002fb29:	xor    al,0x7
   14002fb2b:	add    BYTE PTR [rdx],cl
   14002fb2d:	xor    al,BYTE PTR [rsi]
   14002fb2f:	jo     0x14002fb32
   14002fb31:	xor    eax,0x74350008
   14002fb36:	(bad)  
   14002fb37:	add    BYTE PTR [rdi],cl
   14002fb39:	push   rsp
   14002fb3a:	or     DWORD PTR [rax],eax
   14002fb3c:	sysenter 
   14002fb3e:	or     BYTE PTR [rax],al
   14002fb40:	rdmsr  
   14002fb42:	or     esp,DWORD PTR [rax+0x1]
   14002fb45:	sbb    cl,BYTE PTR [rdx]
   14002fb47:	add    BYTE PTR [rdx],bl
   14002fb49:	add    DWORD PTR [rip+0x11f01300],ebx        # 0x151f30e4f
   14002fb4f:	loopne 0x14002fb60
   14002fb51:	ror    BYTE PTR [rip+0xa700bc0],1        # 0x14a730717
   14002fb57:	(bad)  
   14002fb58:	or     DWORD PTR [rax+0x8],edx
   14002fb5b:	xor    BYTE PTR [rcx],ah
   14002fb5d:	add    BYTE PTR [rax],al
   14002fb5f:	add    BYTE PTR [rax],ah
   14002fb61:	sahf   
   14002fb62:	add    al,BYTE PTR [rax]
   14002fb64:	rex.WRX sahf 
   14002fb66:	add    al,BYTE PTR [rax]
   14002fb68:	cmp    al,0xf3
   14002fb6a:	add    al,BYTE PTR [rax]
   14002fb6c:	and    DWORD PTR [rax],eax
   14002fb6e:	add    BYTE PTR [rax],al
   14002fb70:	rex.WRX sahf 
   14002fb72:	add    al,BYTE PTR [rax]
   14002fb74:	imul   ebx,DWORD PTR [rsi-0x46ffffe],0x2
   14002fb7b:	add    BYTE PTR [rcx],ah
   14002fb7d:	add    eax,0x74050002
   14002fb82:	or     BYTE PTR [rax],al
   14002fb84:	rex.WRX sahf 
   14002fb86:	add    al,BYTE PTR [rax]
   14002fb88:	imul   ebx,DWORD PTR [rsi-0x46ffffe],0x2
   14002fb8f:	add    BYTE PTR [rcx],ah
   14002fb91:	or     al,BYTE PTR [rax+rax*1]
   14002fb94:	or     dl,BYTE PTR [rdi+rax*1+0x0]
   14002fb98:	add    eax,0x20000634
   14002fb9d:	sahf   
   14002fb9e:	add    al,BYTE PTR [rax]
   14002fba0:	rex.WRX sahf 
   14002fba2:	add    al,BYTE PTR [rax]
   14002fba4:	cmp    al,0xf3
   14002fba6:	add    al,BYTE PTR [rax]
   14002fba8:	and    DWORD PTR [rax],eax
   14002fbaa:	add    BYTE PTR [rax],al
   14002fbac:	movabs al,ds:0x900000b3de0000b3
   14002fbb5:	repz add al,BYTE PTR [rax]
   14002fbb8:	and    DWORD PTR [rax],eax
   14002fbba:	add    BYTE PTR [rax],al
   14002fbbc:	fidiv  WORD PTR [rbx-0x4c050000]
   14002fbc2:	add    BYTE PTR [rax],al
   14002fbc4:	fdiv   st(3),st
   14002fbc6:	add    al,BYTE PTR [rax]
   14002fbc8:	and    DWORD PTR [rip+0x64050002],eax        # 0x1a407fbd0
   14002fbce:	or     BYTE PTR [rax],al
   14002fbd0:	fidiv  WORD PTR [rbx-0x4c050000]
   14002fbd6:	add    BYTE PTR [rax],al
   14002fbd8:	fdiv   st(3),st
   14002fbda:	add    al,BYTE PTR [rax]
   14002fbdc:	and    DWORD PTR [rdx],ecx
   14002fbde:	add    al,0x0
   14002fbe0:	or     dh,BYTE PTR [rcx+rcx*1+0x0]
   14002fbe4:	add    eax,0xa0000654
   14002fbe9:	mov    bl,0x0
   14002fbeb:	add    dh,bl
   14002fbed:	mov    bl,0x0
   14002fbef:	add    BYTE PTR [rax+0x10002f3],dl
   14002fbf5:	adc    al,0x8
   14002fbf7:	add    BYTE PTR [rsp+riz*2],dl
   14002fbfa:	or     BYTE PTR [rax],al
   14002fbfc:	adc    al,0x54
   14002fbfe:	(bad)  
   14002fbff:	add    BYTE PTR [rsp+rsi*1],dl
   14002fc02:	(bad)  
   14002fc03:	add    BYTE PTR [rdx+rsi*1],dl
   14002fc06:	adc    BYTE PTR [rax+0x21],dh
   14002fc09:	add    BYTE PTR [rax],al
   14002fc0b:	add    BYTE PTR [rax-0x49],dl
   14002fc0e:	add    BYTE PTR [rax],al
   14002fc10:	jl     0x14002fbc9
   14002fc12:	add    BYTE PTR [rax],al
   14002fc14:	xor    ah,bh
   14002fc16:	add    al,BYTE PTR [rax]
   14002fc18:	and    DWORD PTR [rdx],edx
   14002fc1a:	add    al,0x0
   14002fc1c:	adc    dl,BYTE PTR [rcx+rcx*1+0x0]
   14002fc20:	add    eax,0x50000834
   14002fc25:	mov    bh,0x0
   14002fc27:	add    BYTE PTR [rdi+rsi*4+0x0],bh
   14002fc2b:	add    BYTE PTR [rax],dh
   14002fc2d:	cld    
   14002fc2e:	add    al,BYTE PTR [rax]
   14002fc30:	add    DWORD PTR [rdx],ecx
   14002fc32:	add    al,0x0
   14002fc34:	or     ah,BYTE PTR [rdx+rcx*1+0x0]
   14002fc38:	or     dl,BYTE PTR [rdx+0x6]
   14002fc3b:	jo     0x14002fc5e
   14002fc3d:	add    BYTE PTR [rax],al
   14002fc3f:	add    BYTE PTR [rax-0x58ffff48],al
   14002fc45:	mov    eax,0xfc900000
   14002fc4a:	add    al,BYTE PTR [rax]
   14002fc4c:	and    DWORD PTR [rax],eax
   14002fc4e:	add    BYTE PTR [rax],al
   14002fc50:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002fc51:	mov    eax,0xb8ba0000
   14002fc56:	add    BYTE PTR [rax],al
   14002fc58:	je     0x14002fc56
   14002fc5a:	add    al,BYTE PTR [rax]
   14002fc5c:	and    DWORD PTR [rcx-0x2b56fffc],ebp
   14002fc62:	(bad)  
   14002fc63:	add    BYTE PTR [rsp+rax*8],al
   14002fc66:	or     BYTE PTR [rax],al
   14002fc68:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002fc69:	mov    eax,0xb8ba0000
   14002fc6e:	add    BYTE PTR [rax],al
   14002fc70:	je     0x14002fc6e
   14002fc72:	add    al,BYTE PTR [rax]
   14002fc74:	and    DWORD PTR [rbx],edx
   14002fc76:	(bad)  
   14002fc77:	add    BYTE PTR [rbx],dl
   14002fc79:	je     0x14002fc84
   14002fc7b:	add    BYTE PTR [rax],cl
   14002fc7d:	or     al,BYTE PTR fs:[rax]
   14002fc80:	add    al,0x54
   14002fc82:	or     eax,DWORD PTR [rax]
   14002fc84:	cmp    BYTE PTR [rax-0x47590000],0x0
   14002fc8b:	add    BYTE PTR [rax+0x10002fc],dl
   14002fc91:	adc    BYTE PTR [rax+rax*1],al
   14002fc94:	adc    BYTE PTR [rdx-0x1ff50ff4],dh
   14002fc9a:	or     BYTE PTR [rax],dh
   14002fc9c:	and    DWORD PTR [rax],eax
   14002fc9e:	add    BYTE PTR [rax],al
   14002fca0:	xor    BYTE PTR [rsi-0x41b20000],bh
   14002fca6:	add    BYTE PTR [rax],al
   14002fca8:	(bad)  
   14002fca9:	cld    
   14002fcaa:	add    al,BYTE PTR [rax]
   14002fcac:	and    DWORD PTR [rdx],ecx
   14002fcae:	add    al,0x0
   14002fcb0:	or     dh,BYTE PTR [rdi+rax*1+0x0]
   14002fcb4:	add    eax,0x30000634
   14002fcb9:	mov    esi,0xbe4e0000
   14002fcbe:	add    BYTE PTR [rax],al
   14002fcc0:	(bad)  
   14002fcc1:	cld    
   14002fcc2:	add    al,BYTE PTR [rax]
   14002fcc4:	add    DWORD PTR [rdx],ecx
   14002fcc6:	add    al,0x0
   14002fcc8:	or     dl,BYTE PTR [rax+rcx*1+0x0]
   14002fccc:	or     dh,BYTE PTR [rdx]
   14002fcce:	(bad)  
   14002fccf:	(bad)  
   14002fcd0:	add    DWORD PTR [rdi+0x8],eax
   14002fcd3:	add    BYTE PTR [rdi+0x64],al
   14002fcd6:	(bad)  
   14002fcd7:	add    BYTE PTR [rdx+0x54],al
   14002fcda:	(bad)  
   14002fcdb:	add    BYTE PTR [rdx],cl
   14002fcdd:	xor    al,0x8
   14002fcdf:	add    BYTE PTR [rdx],cl
   14002fce1:	xor    al,BYTE PTR [rsi]
   14002fce3:	jo     0x14002fce6
   14002fce5:	clts   
   14002fce7:	add    BYTE PTR [rdi],cl
   14002fce9:	or     eax,DWORD PTR fs:[rax]
   14002fcec:	sysenter 
   14002fcee:	or     al,BYTE PTR [rax]
   14002fcf0:	(bad)  
   14002fcf2:	or     esi,DWORD PTR [rax+0x21]
   14002fcf5:	add    BYTE PTR [rax],al
   14002fcf7:	add    BYTE PTR [rax-0x33ffff3f],dh
   14002fcfd:	rol    DWORD PTR [rax],0x0
   14002fd00:	sub    ch,bh
   14002fd02:	add    al,BYTE PTR [rax]
   14002fd04:	and    DWORD PTR [rcx],ebx
   14002fd06:	or     al,BYTE PTR [rax]
   14002fd08:	sbb    esp,esp
   14002fd0a:	add    al,0x0
   14002fd0c:	adc    al,0xd4
   14002fd0e:	add    eax,0xc740f00
   14002fd13:	add    BYTE PTR [rdx],cl
   14002fd15:	push   rsp
   14002fd16:	or     eax,DWORD PTR [rax]
   14002fd18:	add    eax,0xb0000a34
   14002fd1d:	rol    DWORD PTR [rax],0x0
   14002fd20:	int3   
   14002fd21:	rol    DWORD PTR [rax],0x0
   14002fd24:	sub    ch,bh
   14002fd26:	add    al,BYTE PTR [rax]
   14002fd28:	add    DWORD PTR [rdx],ecx
   14002fd2a:	add    al,0x0
   14002fd2c:	or     dl,BYTE PTR [rdx+0x6]
   14002fd2f:	lock add al,0xc0
   14002fd32:	add    ah,BYTE PTR [rax+0x21]
   14002fd35:	add    BYTE PTR [rax],al
   14002fd37:	add    al,ah
   14002fd39:	(bad)
   14002fd3c:	(bad)
   14002fd40:	pop    rsp
   14002fd41:	std    
   14002fd42:	add    al,BYTE PTR [rax]
   14002fd44:	and    DWORD PTR [rdi],ecx
   14002fd46:	add    al,0x0
   14002fd48:	pinsrw mm0,WORD PTR [rdi],0x0
   14002fd4c:	add    eax,0xe0000654
   14002fd51:	(bad)
   14002fd54:	(bad)
   14002fd58:	pop    rsp
   14002fd59:	std    
   14002fd5a:	add    al,BYTE PTR [rax]
   14002fd5c:	add    DWORD PTR [rdi],ecx
   14002fd5e:	(bad)  
   14002fd5f:	add    BYTE PTR [rdi],cl
   14002fd61:	or     DWORD PTR fs:[rax],eax
   14002fd64:	sysenter 
   14002fd66:	or     BYTE PTR [rax],al
   14002fd68:	rdmsr  
   14002fd6a:	or     esi,DWORD PTR [rax+0x1]
   14002fd6d:	adc    al,0x8
   14002fd6f:	add    BYTE PTR [rsp+riz*2],dl
   14002fd72:	or     al,BYTE PTR [rax]
   14002fd74:	adc    al,0x54
   14002fd76:	or     DWORD PTR [rax],eax
   14002fd78:	adc    al,0x34
   14002fd7a:	or     BYTE PTR [rax],al
   14002fd7c:	adc    al,0x52
   14002fd7e:	adc    BYTE PTR [rax+0x21],dh
   14002fd81:	add    BYTE PTR [rax],al
   14002fd83:	add    BYTE PTR [rax+0x360000c8],dh
   14002fd89:	leave  
   14002fd8a:	add    BYTE PTR [rax],al
   14002fd8c:	sar    ch,1
   14002fd8e:	add    al,BYTE PTR [rax]
   14002fd90:	and    DWORD PTR [rax],eax
   14002fd92:	or     BYTE PTR [rax],al
   14002fd94:	add    ah,dh
   14002fd96:	push   rax
   14002fd97:	add    BYTE PTR [rax],al
   14002fd99:	(bad)  
   14002fd9a:	push   rcx
   14002fd9b:	add    BYTE PTR [rax],al
   14002fd9d:	(bad)  
   14002fd9e:	push   rdx
   14002fd9f:	add    BYTE PTR [rax],al
   14002fda1:	push   rsp
   14002fda2:	pop    rcx
   14002fda3:	add    BYTE PTR [rax+0x360000c8],dh
   14002fda9:	leave  
   14002fdaa:	add    BYTE PTR [rax],al
   14002fdac:	sar    ch,1
   14002fdae:	add    al,BYTE PTR [rax]
   14002fdb0:	and    DWORD PTR [rip+0xfffffffff42d0008],ebp        # 0x1342ffdbe
   14002fdb6:	push   rax
   14002fdb7:	add    BYTE PTR [rsp+rdx*8],bl
   14002fdba:	push   rcx
   14002fdbb:	add    BYTE PTR [rax],dl
   14002fdbd:	(bad)  
   14002fdbe:	push   rdx
   14002fdbf:	add    BYTE PTR [rax],cl
   14002fdc1:	push   rsp
   14002fdc2:	pop    rcx
   14002fdc3:	add    BYTE PTR [rax+0x360000c8],dh
   14002fdc9:	leave  
   14002fdca:	add    BYTE PTR [rax],al
   14002fdcc:	sar    ch,1
   14002fdce:	add    al,BYTE PTR [rax]
   14002fdd0:	add    DWORD PTR [rsi],edx
   14002fdd2:	(bad)  
   14002fdd3:	add    BYTE PTR [rsi],dl
   14002fdd5:	add    DWORD PTR [rbx+0x0],edx
   14002fdd8:	pavgb  mm1,QWORD PTR [rip+0xb600c70]        # 0x14b630a4f
   14002fddf:	xor    BYTE PTR [rcx],ah
   14002fde1:	add    BYTE PTR [rax],al
   14002fde3:	add    BYTE PTR [rax-0x2dffff29],al
   14002fde9:	xlat   BYTE PTR ds:[rbx]
   14002fdea:	add    BYTE PTR [rax],al
   14002fdec:	add    al,0xfe
   14002fdee:	add    al,BYTE PTR [rax]
   14002fdf0:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b407fdf8
   14002fdf6:	(bad)  
   14002fdf7:	add    BYTE PTR [rax-0x2dffff29],al
   14002fdfd:	xlat   BYTE PTR ds:[rbx]
   14002fdfe:	add    BYTE PTR [rax],al
   14002fe00:	add    al,0xfe
   14002fe02:	add    al,BYTE PTR [rax]
   14002fe04:	add    DWORD PTR [rdx],ecx
   14002fe06:	add    al,0x0
   14002fe08:	or     dh,BYTE PTR [rdi+rax*1]
   14002fe0b:	add    BYTE PTR [rdx],cl
   14002fe0d:	xor    al,BYTE PTR [rsi]
   14002fe0f:	(bad)  
   14002fe10:	and    DWORD PTR [rax],eax
   14002fe12:	add    BYTE PTR [rax],al
   14002fe14:	and    al,bl
   14002fe16:	add    BYTE PTR [rax],al
   14002fe18:	fadd   DWORD PTR ds:[rax]
   14002fe1b:	add    BYTE PTR [rsi+rdi*8],dh
   14002fe1e:	add    al,BYTE PTR [rax]
   14002fe20:	and    DWORD PTR [rip+0x34050002],eax        # 0x17407fe28
   14002fe26:	(bad)  
   14002fe27:	add    BYTE PTR [rax],ah
   14002fe29:	fadd   DWORD PTR [rax]
   14002fe2b:	add    BYTE PTR [rsi],bh
   14002fe2d:	fadd   DWORD PTR [rax]
   14002fe2f:	add    BYTE PTR [rsi+rdi*8],dh
   14002fe32:	add    al,BYTE PTR [rax]
   14002fe34:	add    DWORD PTR [rdx],ecx
   14002fe36:	add    al,0x0
   14002fe38:	or     ah,BYTE PTR [rax+rcx*1+0x0]
   14002fe3c:	or     dh,BYTE PTR [rdx]
   14002fe3e:	(bad)  
   14002fe3f:	jo     0x14002fe62
   14002fe41:	add    BYTE PTR [rax],al
   14002fe43:	add    BYTE PTR [rax],ah
   14002fe45:	fld    DWORD PTR [rax]
   14002fe47:	add    BYTE PTR [rsi-0x27],ch
   14002fe4a:	add    BYTE PTR [rax],al
   14002fe4c:	jo     0x14002fe4c
   14002fe4e:	add    al,BYTE PTR [rax]
   14002fe50:	and    DWORD PTR [rdi],edx
   14002fe52:	or     BYTE PTR [rax],al
   14002fe54:	(bad)  
   14002fe55:	in     al,0x8
   14002fe57:	add    BYTE PTR [rdx],dl
   14002fe59:	(bad)  
   14002fe5a:	or     DWORD PTR [rax],eax
   14002fe5c:	or     eax,0x8000a74
   14002fe61:	push   rsp
   14002fe62:	adc    al,BYTE PTR [rax]
   14002fe64:	and    cl,bl
   14002fe66:	add    BYTE PTR [rax],al
   14002fe68:	outs   dx,BYTE PTR ds:[rsi]
   14002fe69:	fld    DWORD PTR [rax]
   14002fe6b:	add    BYTE PTR [rax-0x2],dh
   14002fe6e:	add    al,BYTE PTR [rax]
   14002fe70:	add    DWORD PTR [rcx],ebx
   14002fe72:	add    eax,0x15a21900
   14002fe77:	lock adc eax,eax
   14002fe7a:	adc    DWORD PTR [rax+0x10],esp
   14002fe7d:	xor    BYTE PTR [rax],al
   14002fe7f:	add    BYTE PTR [rcx],ah
   14002fe81:	add    BYTE PTR [rdx],al
   14002fe83:	add    BYTE PTR [rax],al
   14002fe85:	in     al,0x2e
   14002fe87:	add    BYTE PTR [rax],al
   14002fe89:	fild   DWORD PTR [rax]
   14002fe8b:	add    ah,cl
   14002fe8d:	fadd   QWORD PTR [rax]
   14002fe8f:	add    BYTE PTR [rax+0x210002fe],dh
   14002fe95:	sbb    BYTE PTR [rsi],al
   14002fe97:	add    BYTE PTR [rax],bl
   14002fe99:	hlt    
   14002fe9a:	sub    eax,0x2ee41000
   14002fe9f:	add    BYTE PTR [rax],cl
   14002fea1:	(bad)  
   14002fea2:	(bad)  
   14002fea3:	add    BYTE PTR [rax],al
   14002fea5:	fild   DWORD PTR [rax]
   14002fea7:	add    ah,cl
   14002fea9:	fadd   QWORD PTR [rax]
   14002feab:	add    BYTE PTR [rax+0x10002fe],dh
   14002feb1:	(bad)  
   14002feb2:	(bad)  
   14002feb3:	add    BYTE PTR [rsi],dl
   14002feb5:	add    DWORD PTR [rax],esi
   14002feb7:	add    BYTE PTR [rdi],cl
   14002feb9:	ror    BYTE PTR [rip+0xb600c70],0x50        # 0x14b630b30
   14002fec0:	or     dh,BYTE PTR [rax]
   14002fec2:	add    BYTE PTR [rax],al
   14002fec4:	and    DWORD PTR [rax],ecx
   14002fec6:	add    al,BYTE PTR [rax]
   14002fec8:	or     BYTE PTR [rsi+rdx*1+0x0],dl
   14002fecc:	adc    ah,ch
   14002fece:	add    BYTE PTR [rax],al
   14002fed0:	or     ch,ch
   14002fed2:	add    BYTE PTR [rax],al
   14002fed4:	fdivr  st,st(6)
   14002fed6:	add    al,BYTE PTR [rax]
   14002fed8:	add    DWORD PTR [rax],edx
   14002feda:	(bad)  
   14002fedb:	add    BYTE PTR [rax],dl
   14002fedd:	xor    al,0x18
   14002fedf:	add    BYTE PTR [rax],dl
   14002fee1:	add    DWORD PTR [rdx],edx
   14002fee3:	add    BYTE PTR [rcx],cl
   14002fee5:	rol    BYTE PTR [rdi],0x70
   14002fee8:	(bad)  
   14002fee9:	(bad)  
   14002feea:	add    BYTE PTR [rax],al
   14002feec:	add    DWORD PTR [rdi],ecx
   14002feee:	(bad)  
   14002feef:	add    BYTE PTR [rdi],cl
   14002fef1:	fs (bad) 
   14002fef3:	add    BYTE PTR [rdi],cl
   14002fef5:	xor    al,0xd
   14002fef7:	add    BYTE PTR [rdi],cl
   14002fef9:	xchg   edx,eax
   14002fefa:	or     esi,DWORD PTR [rax+0x1]
   14002fefd:	sbb    al,0xb
   14002feff:	add    BYTE PTR [rsp+rsi*1],bl
   14002ff02:	sbb    al,BYTE PTR [rax]
   14002ff04:	sbb    al,0x1
   14002ff06:	adc    al,BYTE PTR [rax]
   14002ff08:	adc    eax,0x11e013f0
   14002ff0d:	ror    BYTE PTR [rdi],1
   14002ff0f:	ror    BYTE PTR [rip+0xb600c70],0x50        # 0x14b630b86
   14002ff16:	add    BYTE PTR [rax],al
   14002ff18:	add    DWORD PTR [rip+0x11d000a],ebx        # 0x1411fff28
   14002ff1e:	sub    DWORD PTR [rax],eax
   14002ff20:	(bad)  
   14002ff21:	lock adc al,0xe0
   14002ff24:	adc    dl,al
   14002ff26:	adc    al,al
   14002ff28:	(bad)  
   14002ff29:	jo     0x14002ff38
   14002ff2b:	(bad)  
   14002ff2c:	or     al,0x50
   14002ff2e:	or     esi,DWORD PTR [rax]
   14002ff30:	add    DWORD PTR [rsi],eax
   14002ff32:	add    al,BYTE PTR [rax]
   14002ff34:	(bad)  
   14002ff35:	rol    BYTE PTR [rdx],cl
   14002ff37:	jo     0x14002ff5a
   14002ff39:	add    BYTE PTR [rax],al
   14002ff3b:	add    BYTE PTR [rax-0x1fffefd],dh
   14002ff41:	add    eax,DWORD PTR [rcx]
   14002ff43:	add    BYTE PTR [rdi+rdi*8+0x2],ch
   14002ff47:	add    BYTE PTR [rcx],ah
   14002ff49:	sub    BYTE PTR [rdx],cl
   14002ff4b:	add    BYTE PTR [rax],ch
   14002ff4d:	hlt    
   14002ff4e:	(bad)  
   14002ff4f:	add    BYTE PTR [rax],ah
   14002ff51:	in     al,0x20
   14002ff53:	add    BYTE PTR [rax],bl
   14002ff55:	(bad)  
   14002ff56:	and    DWORD PTR [rax],eax
   14002ff58:	adc    BYTE PTR [rdx+riz*1+0x0],dh
   14002ff5c:	or     BYTE PTR [rbx+riz*1],dh
   14002ff5f:	add    BYTE PTR [rax-0x1fffefd],dh
   14002ff65:	add    eax,DWORD PTR [rcx]
   14002ff67:	add    BYTE PTR [rdi+rdi*8+0x2],ch
   14002ff6b:	add    BYTE PTR [rcx],al
   14002ff6d:	or     al,0x5
   14002ff6f:	add    BYTE PTR [rcx+rax*1],cl
   14002ff72:	and    al,0x0
   14002ff74:	add    eax,0x26003c0
   14002ff79:	push   rax
   14002ff7a:	add    BYTE PTR [rax],al
   14002ff7c:	and    DWORD PTR [rax],eax
   14002ff7e:	add    BYTE PTR [rax],al
   14002ff80:	and    BYTE PTR [rdi],al
   14002ff82:	add    DWORD PTR [rax],eax
   14002ff84:	pop    rsi
   14002ff85:	(bad)  
   14002ff86:	add    DWORD PTR [rax],eax
   14002ff88:	mov    al,0xff
   14002ff8a:	add    al,BYTE PTR [rax]
   14002ff8c:	and    DWORD PTR [rax],ebp
   14002ff8e:	or     al,BYTE PTR [rax]
   14002ff90:	sub    ah,dh
   14002ff92:	rex.RX add BYTE PTR [rax],r12b
   14002ff95:	in     al,0x47
   14002ff97:	add    BYTE PTR [rax],bl
   14002ff99:	je     0x14002ffe3
   14002ff9b:	add    BYTE PTR [rax],dl
   14002ff9d:	rex.WB add BYTE PTR fs:[r8],cl
   14002ffa1:	xor    al,0x4f
   14002ffa3:	add    BYTE PTR [rax],ah
   14002ffa5:	(bad)  
   14002ffa6:	add    DWORD PTR [rax],eax
   14002ffa8:	pop    rsi
   14002ffa9:	(bad)  
   14002ffaa:	add    DWORD PTR [rax],eax
   14002ffac:	mov    al,0xff
   14002ffae:	add    al,BYTE PTR [rax]
   14002ffb0:	add    DWORD PTR [rip+0x10d0005],ecx        # 0x1410fffbb
   14002ffb6:	rex.WX add BYTE PTR [rsi],al
   14002ffb9:	rol    BYTE PTR [rax+rax*8],1
   14002ffbc:	add    dl,BYTE PTR [rax+0x0]
   14002ffbf:	add    BYTE PTR [rcx],al
   14002ffc1:	(bad)  
   14002ffc2:	add    al,BYTE PTR [rax]
   14002ffc4:	(bad)  
   14002ffc5:	xchg   edx,eax
   14002ffc6:	add    dh,BYTE PTR [rax]
   14002ffc8:	add    DWORD PTR [rdi],edx
   14002ffca:	or     eax,DWORD PTR [rax]
   14002ffcc:	(bad)  
   14002ffcd:	xor    al,0x2b
   14002ffcf:	add    BYTE PTR [rdi],dl
   14002ffd1:	add    DWORD PTR [rdx],esp
   14002ffd3:	add    BYTE PTR [rax],dl
   14002ffd5:	lock (bad) 
   14002ffd7:	loopne 0x14002ffe5
   14002ffd9:	ror    BYTE PTR [rdx],1
   14002ffdb:	ror    BYTE PTR [rax],0x70
   14002ffde:	(bad)  
   14002ffdf:	(bad)  
   14002ffe0:	(bad)  
   14002ffe1:	push   rax
   14002ffe2:	add    BYTE PTR [rax],al
   14002ffe4:	add    DWORD PTR [rdx],ecx
   14002ffe6:	add    al,0x0
   14002ffe8:	or     dh,BYTE PTR [rcx+rdx*1]
   14002ffeb:	add    BYTE PTR [rdx],cl
   14002ffed:	rol    BYTE PTR [rsi],cl
   14002ffef:	jo     0x14002fff2
   14002fff1:	adc    al,0x8
   14002fff3:	add    BYTE PTR [rsp+riz*2],dl
   14002fff6:	or     DWORD PTR [rax],eax
   14002fff8:	adc    al,0x54
   14002fffa:	or     BYTE PTR [rax],al
   14002fffc:	adc    al,0x34
   14002fffe:	(bad)  
   14002ffff:	add    BYTE PTR [rdx+rsi*1],dl
   140030002:	adc    BYTE PTR [rax+0x1],dh
   140030005:	rex.WR (bad) 
   140030007:	add    BYTE PTR [rsp+rsi*2+0x4],cl
   14003000b:	add    BYTE PTR [rdi+0x34],al
   14003000e:	or     DWORD PTR [rax],eax
   140030010:	(bad)  
   140030011:	rex.X add esp,DWORD PTR [rax+0x2]
   140030015:	push   rax
   140030016:	add    BYTE PTR [rax],al
   140030018:	add    DWORD PTR [rsi+rax*1],ecx
   14003001b:	add    BYTE PTR [rsp+rsi*1],cl
   14003001e:	or     BYTE PTR [rax],al
   140030020:	or     al,0x32
   140030022:	or     BYTE PTR [rax+0x7],dh
   140030025:	(bad)  
   140030026:	(bad)  
   140030027:	push   rax
   140030028:	add    DWORD PTR [rsi],edx
   14003002a:	or     al,BYTE PTR [rax]
   14003002c:	(bad)  
   14003002d:	push   rsp
   14003002e:	or     al,0x0
   140030030:	(bad)  
   140030031:	xor    al,0xa
   140030033:	add    BYTE PTR [rsi],dl
   140030035:	xor    dl,BYTE PTR [rdx]
   140030037:	loopne 0x140030049
   140030039:	ror    BYTE PTR [rsi],1
   14003003b:	ror    BYTE PTR [rax+rsi*2],0xb
   14003003f:	(bad)  
   140030040:	add    DWORD PTR [rdx],edx
   140030042:	or     BYTE PTR [rax],al
   140030044:	adc    dl,BYTE PTR [rdx+rcx*1+0x0]
   140030048:	adc    dh,BYTE PTR [rcx+rcx*1]
   14003004b:	add    BYTE PTR [rdx],dl
   14003004d:	xor    cl,BYTE PTR [rsi]
   14003004f:	ror    BYTE PTR [rax+rsi*2],0xb
   140030053:	(bad)  
   140030054:	add    DWORD PTR [rax],ebx
   140030056:	or     al,BYTE PTR [rax]
   140030058:	sbb    BYTE PTR [rdx+rcx*1+0x0],ah
   14003005c:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   140030060:	sbb    BYTE PTR [rax+rcx*1],dh
   140030063:	add    BYTE PTR [rax],bl
   140030065:	xor    dl,BYTE PTR [rax+rdx*8]
   140030068:	adc    al,al
   14003006a:	adc    BYTE PTR [rax+0x1],dh
   14003006d:	or     eax,DWORD PTR [rsi]
   14003006f:	add    BYTE PTR [rbx],cl
   140030071:	push   rdx
   140030072:	(bad)  
   140030073:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x1436304ea
   14003007a:	add    dh,BYTE PTR [rax]
   14003007c:	and    DWORD PTR [rax],eax
   14003007e:	add    BYTE PTR [rax],al
   140030080:	mov    al,0x1f
   140030082:	add    DWORD PTR [rax],eax
   140030084:	int    0x1f
   140030086:	add    DWORD PTR [rax],eax
   140030088:	rex.WR test BYTE PTR [rdx],0x0
   14003008c:	and    DWORD PTR [rsi],edx
   14003008e:	(bad)  
   14003008f:	add    BYTE PTR [rsi],dl
   140030091:	je     0x140030097
   140030093:	add    BYTE PTR [rdx],cl
   140030095:	fs (bad) 
   140030097:	add    BYTE PTR [rip+0xffffffffb0000634],al        # 0xf00306d1
   14003009d:	(bad)  
   14003009e:	add    DWORD PTR [rax],eax
   1400300a0:	int    0x1f
   1400300a2:	add    DWORD PTR [rax],eax
   1400300a4:	rex.WR test BYTE PTR [rdx],0x0
   1400300a8:	and    DWORD PTR [rax],eax
   1400300aa:	add    BYTE PTR [rax],al
   1400300ac:	xor    BYTE PTR [rax],ah
   1400300ae:	add    DWORD PTR [rax],eax
   1400300b0:	imul   esp,DWORD PTR [rax],0xf2c40001
   1400300b6:	add    al,BYTE PTR [rax]
   1400300b8:	and    DWORD PTR [rdx],ecx
   1400300ba:	add    al,0x0
   1400300bc:	or     dh,BYTE PTR [rdi+rax*1+0x0]
   1400300c0:	add    eax,0x30000654
   1400300c5:	and    BYTE PTR [rcx],al
   1400300c7:	add    BYTE PTR [rcx+0x20],ch
   1400300ca:	add    DWORD PTR [rax],eax
   1400300cc:	(bad)  
   1400300cd:	repnz add al,BYTE PTR [rax]
   1400300d0:	and    DWORD PTR [rax],eax
   1400300d2:	add    BYTE PTR [rax],al
   1400300d4:	(bad)  
   1400300d5:	and    eax,DWORD PTR [rcx]
   1400300d7:	add    BYTE PTR [rdx+0x23],bh
   1400300da:	add    DWORD PTR [rax],eax
   1400300dc:	cmp    al,0xf3
   1400300de:	add    al,BYTE PTR [rax]
   1400300e0:	and    DWORD PTR [rax],eax
   1400300e2:	add    al,BYTE PTR [rax]
   1400300e4:	add    BYTE PTR [rcx+rcx*1+0x0],dh
   1400300e8:	(bad)  
   1400300e9:	and    eax,DWORD PTR [rcx]
   1400300eb:	add    BYTE PTR [rdx+0x23],bh
   1400300ee:	add    DWORD PTR [rax],eax
   1400300f0:	cmp    al,0xf3
   1400300f2:	add    al,BYTE PTR [rax]
   1400300f4:	and    DWORD PTR [rsi+rax*1+0x0],edx
   1400300f8:	push   rsp
   1400300f9:	push   rsp
   1400300fa:	or     BYTE PTR [rax],al
   1400300fc:	rex.WRXB xor al,0x7
   1400300ff:	add    BYTE PTR [rip+0x60000974],al        # 0x1a0030a79
   140030105:	and    eax,DWORD PTR [rcx]
   140030107:	add    BYTE PTR [rdx+0x23],bh
   14003010a:	add    DWORD PTR [rax],eax
   14003010c:	cmp    al,0xf3
   14003010e:	add    al,BYTE PTR [rax]
   140030110:	add    DWORD PTR [rsi],ebx
   140030112:	or     al,0x0
   140030114:	(bad)  
   140030115:	je     0x140030126
   140030117:	add    BYTE PTR [rsi],bl
   140030119:	fs (bad) 
   14003011b:	add    BYTE PTR [rsi],bl
   14003011d:	push   rsp
   14003011e:	or     eax,0xc341e00
   140030123:	add    BYTE PTR [rsi],bl
   140030125:	jb     0x140030141
   140030127:	loopne 0x140030141
   140030129:	rcl    BYTE PTR [rsi],1
   14003012b:	rol    BYTE PTR [rcx],0x21
   14003012e:	or     al,BYTE PTR [rax]
   140030130:	and    DWORD PTR [rbx+rbx*1],esi
   140030133:	add    BYTE PTR [rcx],ah
   140030135:	repnz sbb dh,al
   140030138:	sbb    al,ah
   14003013a:	(bad)  
   14003013b:	rcl    BYTE PTR [rax+rax*8],1
   14003013e:	adc    dh,BYTE PTR [rax+0x11]
   140030141:	(bad)  
   140030142:	adc    BYTE PTR [rax+0x1],dl
   140030145:	jnp    0x14003014e
   140030147:	add    BYTE PTR [rbx+0x74],bh
   14003014a:	add    al,0x0
   14003014c:	jbe    0x1400301a2
   14003014e:	or     DWORD PTR [rax],eax
   140030150:	adc    BYTE PTR [rdx+0xc],al
   140030153:	(bad)  
   140030154:	or     esi,DWORD PTR [rax]
   140030156:	add    BYTE PTR [rax],al
   140030158:	and    DWORD PTR [rax],eax
   14003015a:	add    BYTE PTR [rax],al
   14003015c:	push   rax
   14003015d:	xor    DWORD PTR [rcx],eax
   14003015f:	add    BYTE PTR [rcx+0x31],bl
   140030162:	add    DWORD PTR [rax],eax
   140030164:	movabs al,ds:0x5900000021000301
   14003016d:	xor    DWORD PTR [rcx],eax
   14003016f:	add    BYTE PTR [rdx-0x73fffecf],bl
   140030175:	add    DWORD PTR [rbx],eax
   140030177:	add    BYTE PTR [rcx],ah
   140030179:	add    eax,0xd4050002
   14003017e:	or     BYTE PTR [rax],al
   140030180:	pop    rcx
   140030181:	xor    DWORD PTR [rcx],eax
   140030183:	add    BYTE PTR [rdx-0x73fffecf],bl
   140030189:	add    DWORD PTR [rbx],eax
   14003018b:	add    BYTE PTR [rcx],ah
   14003018d:	add    eax,0xc4050002
   140030192:	lldt   WORD PTR [rax+0x31]
   140030196:	add    DWORD PTR [rax],eax
   140030198:	pop    rcx
   140030199:	xor    DWORD PTR [rcx],eax
   14003019b:	add    BYTE PTR [rax+0x1000301],ah
   1400301a1:	or     DWORD PTR [rip+0x5820900],eax        # 0x145850aa7
   1400301a7:	jo     0x1400301ad
   1400301a9:	(bad)  
   1400301aa:	add    edx,DWORD PTR [rax+0x2]
   1400301ad:	xor    BYTE PTR [rax],al
   1400301af:	add    BYTE PTR [rcx],ah
   1400301b1:	add    BYTE PTR [rax],al
   1400301b3:	add    BYTE PTR [rax],ah
   1400301b5:	xor    eax,DWORD PTR [rcx]
   1400301b7:	add    dh,bl
   1400301b9:	xor    eax,DWORD PTR [rcx]
   1400301bb:	add    ah,dl
   1400301bd:	add    DWORD PTR [rbx],eax
   1400301bf:	add    BYTE PTR [rcx],ah
   1400301c1:	add    eax,0x64050002
   1400301c6:	or     eax,0x1332000
   1400301cb:	add    dh,bl
   1400301cd:	xor    eax,DWORD PTR [rcx]
   1400301cf:	add    ah,dl
   1400301d1:	add    DWORD PTR [rbx],eax
   1400301d3:	add    BYTE PTR [rcx],al
   1400301d5:	clts   
   1400301d7:	add    BYTE PTR [rdi],cl
   1400301d9:	push   rsp
   1400301da:	str    WORD PTR [rdi]
   1400301dd:	xor    al,0xe
   1400301df:	add    BYTE PTR [rdi],cl
   1400301e1:	xchg   edx,eax
   1400301e2:	or     esi,DWORD PTR [rax+0x21]
   1400301e5:	add    BYTE PTR [rax],al
   1400301e7:	add    BYTE PTR [rax+0x34],al
   1400301ea:	add    DWORD PTR [rax],eax
   1400301ec:	rex.WRXB xor al,0x1
   1400301ef:	add    BYTE PTR [rdx+rax*1+0x3],cl
   1400301f3:	add    BYTE PTR [rcx],ah
   1400301f5:	add    BYTE PTR [rax+rax*1],al
   1400301f8:	add    ah,dh
   1400301fa:	or     DWORD PTR [rax],eax
   1400301fc:	add    ah,ah
   1400301fe:	or     al,BYTE PTR [rax]
   140030200:	xor    al,0x1
   140030203:	add    BYTE PTR [rdi+0x34],cl
   140030206:	add    DWORD PTR [rax],eax
   140030208:	rex.WR add r8b,BYTE PTR [rbx]
   14003020b:	add    BYTE PTR [rcx],ah
   14003020d:	add    BYTE PTR [rax],al
   14003020f:	add    BYTE PTR [rdi+0x34],cl
   140030212:	add    DWORD PTR [rax],eax
   140030214:	mov    WORD PTR [rcx+rax*1],?
   140030217:	add    BYTE PTR [rax],dh
   140030219:	add    al,BYTE PTR [rbx]
   14003021b:	add    BYTE PTR [rcx],ah
   14003021d:	add    al,0x2
   14003021f:	add    BYTE PTR [rsp+rdx*8],al
   140030222:	or     eax,DWORD PTR [rax]
   140030224:	rex.WRXB xor al,0x1
   140030227:	add    BYTE PTR [rsp+rsi*1+0x2300001],cl
   14003022e:	add    eax,DWORD PTR [rax]
   140030230:	and    DWORD PTR [rcx],esp
   140030232:	(bad)  
   140030233:	add    BYTE PTR [rcx],ah
   140030235:	hlt    
   140030236:	or     DWORD PTR [rax],eax
   140030238:	or     ah,ah
   14003023a:	or     al,BYTE PTR [rax]
   14003023c:	add    al,0x54
   14003023e:	or     al,0x0
   140030240:	xor    al,0x1
   140030243:	add    BYTE PTR [rdi+0x34],cl
   140030246:	add    DWORD PTR [rax],eax
   140030248:	rex.WR add r8b,BYTE PTR [rbx]
   14003024b:	add    BYTE PTR [rcx],al
   14003024d:	or     al,0x5
   14003024f:	add    BYTE PTR [rdx+rax*8],cl
   140030252:	or     al,al
   140030254:	(bad)  
   140030255:	jo     0x14003025c
   140030257:	(bad)  
   140030258:	add    al,0x30
   14003025a:	add    BYTE PTR [rax],al
   14003025c:	and    DWORD PTR [rax],eax
   14003025e:	add    BYTE PTR [rax],al
   140030260:	nop
   140030261:	(bad)  
   140030262:	add    DWORD PTR [rax],eax
   140030264:	lods   eax,DWORD PTR ds:[rsi]
   140030265:	(bad)  
   140030266:	add    DWORD PTR [rax],eax
   140030268:	add    BYTE PTR [rdx],0x3
   14003026b:	add    BYTE PTR [rcx],ah
   14003026d:	add    eax,0x74050002
   140030272:	or     BYTE PTR [rax],al
   140030274:	nop
   140030275:	(bad)  
   140030276:	add    DWORD PTR [rax],eax
   140030278:	lods   eax,DWORD PTR ds:[rsi]
   140030279:	(bad)  
   14003027a:	add    DWORD PTR [rax],eax
   14003027c:	add    BYTE PTR [rdx],0x3
   14003027f:	add    BYTE PTR [rcx],al
   140030281:	clts   
   140030283:	add    BYTE PTR [rdi],cl
   140030285:	push   rsp
   140030286:	or     eax,DWORD PTR [rax]
   140030288:	sysenter 
   14003028a:	or     DWORD PTR [rax],eax
   14003028c:	rsqrtps xmm1,XMMWORD PTR [rbx]
   14003028f:	(bad)  
   140030290:	and    DWORD PTR [rax],eax
   140030292:	(bad)  
   140030293:	add    BYTE PTR [rax],al
   140030295:	hlt    
   140030296:	rex.WRXB add BYTE PTR [r8],r8b
   140030299:	(bad)  
   14003029a:	push   rax
   14003029b:	add    BYTE PTR [rax],al
   14003029d:	push   rsp
   14003029e:	push   rcx
   14003029f:	add    BYTE PTR [rax+0x39],dl
   1400302a2:	add    DWORD PTR [rax],eax
   1400302a4:	jno    0x1400302df
   1400302a6:	add    DWORD PTR [rax],eax
   1400302a8:	fadd   DWORD PTR [rdx]
   1400302aa:	add    eax,DWORD PTR [rax]
   1400302ac:	and    DWORD PTR [rax],eax
   1400302ae:	add    BYTE PTR [rax],al
   1400302b0:	push   rax
   1400302b1:	cmp    DWORD PTR [rcx],eax
   1400302b3:	add    BYTE PTR [rcx+0x39],dh
   1400302b6:	add    DWORD PTR [rax],eax
   1400302b8:	fadd   DWORD PTR [rdx]
   1400302ba:	add    eax,DWORD PTR [rax]
   1400302bc:	and    DWORD PTR [rsi+rax*1],ecx
   1400302bf:	add    BYTE PTR [rsp+rsi*8],cl
   1400302c2:	rex.WRXB add BYTE PTR [r8],r9b
   1400302c5:	(bad)  
   1400302c6:	push   rax
   1400302c7:	add    BYTE PTR [rsp+rdx*2],al
   1400302ca:	push   rcx
   1400302cb:	add    BYTE PTR [rax+0x39],dl
   1400302ce:	add    DWORD PTR [rax],eax
   1400302d0:	jno    0x14003030b
   1400302d2:	add    DWORD PTR [rax],eax
   1400302d4:	fadd   DWORD PTR [rdx]
   1400302d6:	add    eax,DWORD PTR [rax]
   1400302d8:	add    DWORD PTR [rcx],esp
   1400302da:	(bad)  
   1400302db:	add    BYTE PTR [rcx],ah
   1400302dd:	add    DWORD PTR [rdx+0x0],edx
   1400302e0:	sbb    ah,al
   1400302e2:	sbb    al,dl
   1400302e4:	(bad)  
   1400302e5:	jo     0x1400302fc
   1400302e7:	(bad)  
   1400302e8:	adc    al,0x30
   1400302ea:	add    BYTE PTR [rax],al
   1400302ec:	add    DWORD PTR [rip+0x11d000a],ebx        # 0x1412002fc
   1400302f2:	rex.WXB add QWORD PTR [r14],rdx
   1400302f5:	lock adc al,0xe0
   1400302f8:	adc    dl,al
   1400302fa:	adc    al,al
   1400302fc:	(bad)  
   1400302fd:	jo     0x14003030c
   1400302ff:	(bad)  
   140030300:	or     al,0x50
   140030302:	or     esi,DWORD PTR [rax]
   140030304:	add    DWORD PTR [rdi],edx
   140030306:	or     eax,DWORD PTR [rax]
   140030308:	(bad)  
   140030309:	xor    al,0x43
   14003030b:	add    DWORD PTR [rdi],edx
   14003030d:	add    DWORD PTR [rdx],edi
   14003030f:	add    DWORD PTR [rax],edx
   140030311:	lock (bad) 
   140030313:	loopne 0x140030321
   140030315:	ror    BYTE PTR [rdx],1
   140030317:	ror    BYTE PTR [rax],0x70
   14003031a:	(bad)  
   14003031b:	(bad)  
   14003031c:	(bad)  
   14003031d:	push   rax
   14003031e:	add    BYTE PTR [rax],al
   140030320:	add    DWORD PTR [rdx],ecx
   140030322:	add    al,0x0
   140030324:	or     dh,BYTE PTR [rax+rdx*1]
   140030327:	add    BYTE PTR [rdx],cl
   140030329:	rol    BYTE PTR [rsi],cl
   14003032b:	jo     0x14003032e
   14003032d:	clts   
   14003032f:	add    BYTE PTR [rdi],cl
   140030331:	adc    al,BYTE PTR fs:[rax]
   140030334:	sysenter 
   140030336:	adc    DWORD PTR [rax],eax
   140030338:	psrld  mm1,QWORD PTR [rbx]
   14003033b:	jo     0x14003033e
   14003033d:	clts   
   14003033f:	add    BYTE PTR [rdi],cl
   140030341:	str    WORD PTR fs:[rdi]
   140030345:	xor    al,0xe
   140030347:	add    BYTE PTR [rdi],cl
   140030349:	xchg   edx,eax
   14003034a:	or     esi,DWORD PTR [rax+0x21]
   14003034d:	add    BYTE PTR [rax],al
   14003034f:	add    BYTE PTR [rax-0x2fffe43],dh
   140030355:	mov    ebp,0x3800001
   14003035a:	add    eax,DWORD PTR [rax]
   14003035c:	and    DWORD PTR [rax],ebp
   14003035e:	or     al,BYTE PTR [rax]
   140030360:	sub    ah,dh
   140030362:	sbb    BYTE PTR [rax],al
   140030364:	and    ah,ah
   140030366:	sbb    DWORD PTR [rax],eax
   140030368:	sbb    ah,dl
   14003036a:	sbb    al,BYTE PTR [rax]
   14003036c:	adc    ah,al
   14003036e:	sbb    eax,DWORD PTR [rax]
   140030370:	or     BYTE PTR [rdx+riz*1+0x0],dh
   140030374:	mov    al,0xbd
   140030376:	add    DWORD PTR [rax],eax
   140030378:	std    
   140030379:	mov    ebp,0x3800001
   14003037e:	add    eax,DWORD PTR [rax]
   140030380:	add    DWORD PTR [rbx],ecx
   140030382:	add    eax,0x1c010b00
   140030387:	add    BYTE PTR [rax+riz*2],al
   14003038a:	add    edx,DWORD PTR [rax+0x2]
   14003038d:	xor    BYTE PTR [rax],al
   14003038f:	add    BYTE PTR [rcx],al
   140030391:	sbb    cl,BYTE PTR [rdx]
   140030393:	add    BYTE PTR [rdx],bl
   140030395:	je     0x1400303a0
   140030397:	add    BYTE PTR [rdx],bl
   140030399:	or     BYTE PTR fs:[rax],al
   14003039c:	sbb    dl,BYTE PTR [rdi+rax*1+0x0]
   1400303a0:	sbb    dh,BYTE PTR [rsi+rax*1]
   1400303a3:	add    BYTE PTR [rdx],bl
   1400303a5:	xor    dl,BYTE PTR [rsi]
   1400303a7:	shl    BYTE PTR [rcx],0x0
   1400303aa:	add    BYTE PTR [rax],al
   1400303ac:	rol    bl,0x1
   1400303af:	add    bh,ah
   1400303b1:	ret    
   1400303b2:	add    DWORD PTR [rax],eax
   1400303b4:	int3   
   1400303b5:	add    eax,DWORD PTR [rbx]
   1400303b7:	add    BYTE PTR [rcx],ah
   1400303b9:	add    eax,0x34050002
   1400303be:	(bad)  
   1400303bf:	add    al,al
   1400303c1:	ret    
   1400303c2:	add    DWORD PTR [rax],eax
   1400303c4:	out    0xc3,eax
   1400303c6:	add    DWORD PTR [rax],eax
   1400303c8:	int3   
   1400303c9:	add    eax,DWORD PTR [rbx]
   1400303cb:	add    BYTE PTR [rcx],al
   1400303cd:	clts   
   1400303cf:	add    BYTE PTR [rdi],cl
   1400303d1:	or     BYTE PTR fs:[rax],al
   1400303d4:	andps  xmm0,XMMWORD PTR [rdi]
   1400303d7:	add    BYTE PTR [rdi],cl
   1400303d9:	xor    cl,BYTE PTR [rbx]
   1400303db:	jo     0x1400303fe
   1400303dd:	add    BYTE PTR [rax],al
   1400303df:	add    BYTE PTR [rax-0x3c],dl
   1400303e2:	add    DWORD PTR [rax],eax
   1400303e4:	add    esp,0x4040001
   1400303ea:	add    eax,DWORD PTR [rax]
   1400303ec:	and    DWORD PTR [rax],ecx
   1400303ee:	add    al,0x0
   1400303f0:	or     BYTE PTR [rsp+rax*1+0x0],dh
   1400303f4:	add    al,0x34
   1400303f6:	add    eax,0x1c45000
   1400303fb:	add    BYTE PTR [rcx+0x40001c4],al
   140030401:	add    al,0x3
   140030403:	add    BYTE PTR [rcx],al
   140030405:	or     eax,DWORD PTR [rax+rax*1]
   140030408:	or     edx,DWORD PTR [rdx+0x7]
   14003040b:	rol    BYTE PTR [rip+0x1500460],0x10        # 0x141530872
   140030412:	or     BYTE PTR [rax],al
   140030414:	adc    BYTE PTR [rsp+rcx*1],dh
   140030417:	add    BYTE PTR [rax],dl
   140030419:	xor    cl,BYTE PTR [rax+rdx*8]
   14003041c:	or     al,al
   14003041e:	or     BYTE PTR [rax+0x7],dh
   140030421:	(bad)  
   140030422:	(bad)  
   140030423:	push   rax
   140030424:	add    DWORD PTR [rsi],edx
   140030426:	or     al,BYTE PTR [rax]
   140030428:	(bad)  
   140030429:	xor    al,0xf
   14003042b:	add    BYTE PTR [rsi],dl
   14003042d:	xor    dl,BYTE PTR [rdx]
   14003042f:	lock adc al,ah
   140030432:	(bad)  
   140030433:	ror    BYTE PTR [rax+rax*8],1
   140030436:	or     dh,BYTE PTR [rax+0x9]
   140030439:	(bad)  
   14003043a:	or     BYTE PTR [rax+0x21],dl
   14003043d:	add    BYTE PTR [rax],al
   14003043f:	add    BYTE PTR [rax],ah
   140030441:	leave  
   140030442:	add    DWORD PTR [rax],eax
   140030444:	pop    rdx
   140030445:	leave  
   140030446:	add    DWORD PTR [rax],eax
   140030448:	xchg   esp,eax
   140030449:	add    al,0x3
   14003044b:	add    BYTE PTR [rcx],ah
   14003044d:	add    BYTE PTR [rax],al
   14003044f:	add    BYTE PTR [rdx-0x37],bl
   140030452:	add    DWORD PTR [rax],eax
   140030454:	test   cl,cl
   140030456:	add    DWORD PTR [rax],eax
   140030458:	je     0x14003045e
   14003045a:	add    eax,DWORD PTR [rax]
   14003045c:	and    DWORD PTR [rax],edx
   14003045e:	add    al,0x0
   140030460:	adc    ah,dl
   140030462:	sbb    al,0x0
   140030464:	or     ah,al
   140030466:	sbb    eax,0x1c95a00
   14003046b:	add    BYTE PTR [rcx+rcx*8+0x4740001],al
   140030472:	add    eax,DWORD PTR [rax]
   140030474:	and    DWORD PTR [rax],esp
   140030476:	or     BYTE PTR [rax],al
   140030478:	and    BYTE PTR [rsi+rbx*1+0x0],dh
   14003047c:	sbb    BYTE PTR [rdi+rbx*1+0x0],ah
   140030480:	adc    BYTE PTR [rax+riz*1+0x0],dl
   140030484:	or     BYTE PTR [rcx+riz*1],dh
   140030487:	add    BYTE PTR [rax],ah
   140030489:	leave  
   14003048a:	add    DWORD PTR [rax],eax
   14003048c:	pop    rdx
   14003048d:	leave  
   14003048e:	add    DWORD PTR [rax],eax
   140030490:	xchg   esp,eax
   140030491:	add    al,0x3
   140030493:	add    BYTE PTR [rcx],al
   140030495:	or     DWORD PTR [rbx],eax
   140030497:	add    BYTE PTR [rcx],cl
   140030499:	add    DWORD PTR [rdx],esp
   14003049b:	add    BYTE PTR [rdx],al
   14003049d:	loopne 0x14003049f
   14003049f:	add    BYTE PTR [rcx],ah
   1400304a1:	add    BYTE PTR [rax],al
   1400304a3:	add    BYTE PTR [rax],ah
   1400304a5:	(bad)  
   1400304a6:	add    DWORD PTR [rax],eax
   1400304a8:	sub    cl,dh
   1400304aa:	add    DWORD PTR [rax],eax
   1400304ac:	(bad)  
   1400304ad:	add    al,0x3
   1400304af:	add    BYTE PTR [rcx],ah
   1400304b1:	add    eax,0x74050002
   1400304b6:	(bad)  
   1400304b7:	add    BYTE PTR [rax],ah
   1400304b9:	(bad)  
   1400304ba:	add    DWORD PTR [rax],eax
   1400304bc:	sub    cl,dh
   1400304be:	add    DWORD PTR [rax],eax
   1400304c0:	(bad)  
   1400304c1:	add    al,0x3
   1400304c3:	add    BYTE PTR [rcx],al
   1400304c5:	or     BYTE PTR [rax+rax*1],al
   1400304c8:	or     BYTE PTR [rdx+0x50036004],dl
   1400304ce:	add    dh,BYTE PTR [rax]
   1400304d0:	and    DWORD PTR [rax],eax
   1400304d2:	add    BYTE PTR [rax],al
   1400304d4:	adc    bl,dl
   1400304d6:	add    DWORD PTR [rax],eax
   1400304d8:	cmp    al,0xd3
   1400304da:	add    DWORD PTR [rax],eax
   1400304dc:	add    BYTE PTR [rip+0x14210003],al        # 0x1542404e5
   1400304e2:	or     BYTE PTR [rax],al
   1400304e4:	adc    al,0xc4
   1400304e6:	add    al,0x0
   1400304e8:	pcmpgtb mm0,QWORD PTR [rip+0xc540a00]        # 0x14c570eef
   1400304ef:	add    BYTE PTR [rip+0x10000b34],al        # 0x150031029
   1400304f5:	rol    DWORD PTR [rcx],cl
   1400304f7:	add    BYTE PTR [rbx+rdx*8],bh
   1400304fa:	add    DWORD PTR [rax],eax
   1400304fc:	add    BYTE PTR [rip+0xa010003],al        # 0x14a040505
   140030502:	add    al,0x0
   140030504:	or     dl,BYTE PTR [rdx+0x6]
   140030507:	loopne 0x14003050d
   140030509:	rol    BYTE PTR [rdx],1
   14003050b:	jo     0x14003052e
   14003050d:	add    BYTE PTR [rax],al
   14003050f:	add    BYTE PTR [rax],dh
   140030511:	(bad)  
   140030512:	add    DWORD PTR [rax],eax
   140030514:	push   rbp
   140030515:	(bad)  
   140030516:	add    DWORD PTR [rax],eax
   140030518:	xor    al,0x5
   14003051a:	add    eax,DWORD PTR [rax]
   14003051c:	and    DWORD PTR [rdx],ecx
   14003051e:	add    al,0x0
   140030520:	or     ah,BYTE PTR [rsp+rax*1+0x0]
   140030524:	add    eax,0x30000534
   140030529:	(bad)  
   14003052a:	add    DWORD PTR [rax],eax
   14003052c:	push   rbp
   14003052d:	(bad)  
   14003052e:	add    DWORD PTR [rax],eax
   140030530:	xor    al,0x5
   140030532:	add    eax,DWORD PTR [rax]
   140030534:	add    DWORD PTR [rcx],ecx
   140030536:	add    al,0x0
   140030538:	or     DWORD PTR [rdx+0x5],edx
   14003053b:	rol    BYTE PTR [rbx],0x70
   14003053e:	add    dl,BYTE PTR [rax+0x21]
   140030541:	add    BYTE PTR [rax],al
   140030543:	add    BYTE PTR [rax],al
   140030545:	(bad)  
   140030546:	add    DWORD PTR [rax],eax
   140030548:	pmullw mm0,QWORD PTR [rcx]
   14003054b:	add    BYTE PTR [rbp+rax*1+0x210003],bl
   140030552:	add    BYTE PTR [rax],al
   140030554:	pmullw mm0,QWORD PTR [rcx]
   140030557:	add    BYTE PTR [rsi-0x1e],al
   14003055a:	add    DWORD PTR [rax],eax
   14003055c:	add    BYTE PTR [rip+0x20210003],0x8        # 0x160240566
   140030563:	add    BYTE PTR [rax],ah
   140030565:	hlt    
   140030566:	rol    BYTE PTR [rax],0x18
   140030569:	in     al,0xc1
   14003056b:	add    BYTE PTR [rax],dl
   14003056d:	(bad)
   140030571:	push   rsp
   140030572:	(bad)
   140030575:	(bad)  
   140030576:	add    DWORD PTR [rax],eax
   140030578:	rex.RX loop 0x14003057c
   14003057b:	add    BYTE PTR [rax+0x21000305],al
   140030581:	sbb    eax,DWORD PTR [rsi]
   140030583:	add    BYTE PTR [rbx],bl
   140030585:	(bad)  
   140030586:	ret    0xa00
   140030589:	je     0x14003054f
   14003058b:	add    BYTE PTR [rsp+rsi*1],al
   14003058e:	enter  0x0,0xd5
   140030592:	add    DWORD PTR [rax],eax
   140030594:	pmullw mm0,QWORD PTR [rcx]
   140030597:	add    BYTE PTR [rbp+rax*1+0xf010003],bl
   14003059e:	add    eax,DWORD PTR [rax]
   1400305a0:	(bad)  
   1400305a2:	mov    BYTE PTR [rax],0x8
   1400305a5:	(bad)  
   1400305a6:	add    BYTE PTR [rax],al
   1400305a8:	add    DWORD PTR [rcx],ebx
   1400305aa:	or     al,BYTE PTR [rax]
   1400305ac:	sbb    DWORD PTR [rsi+rcx*1],esi
   1400305af:	add    BYTE PTR [rcx],bl
   1400305b1:	xor    dl,BYTE PTR [rip+0x11e013f0]        # 0x151e319a7
   1400305b7:	ror    BYTE PTR [rdi],1
   1400305b9:	ror    BYTE PTR [rip+0xb600c70],0x50        # 0x14b631230
   1400305c0:	add    DWORD PTR [rcx],edx
   1400305c2:	(bad)  
   1400305c3:	add    BYTE PTR [rcx],dl
   1400305c5:	xor    al,0xc
   1400305c7:	add    BYTE PTR [rcx],dl
   1400305c9:	push   rdx
   1400305ca:	or     eax,0xb600c70
   1400305cf:	push   rax
   1400305d0:	add    DWORD PTR [rbx],ebx
   1400305d2:	or     eax,DWORD PTR [rax]
   1400305d4:	sbb    esp,DWORD PTR [rbx+riz*1+0x0]
   1400305d8:	sbb    edx,DWORD PTR [rcx+riz*1+0x0]
   1400305dc:	sbb    esi,DWORD PTR [rax+riz*1]
   1400305df:	add    BYTE PTR [rbx],bl
   1400305e1:	add    DWORD PTR [rax+rax*1],ebx
   1400305e4:	adc    al,0xd0
   1400305e6:	adc    al,al
   1400305e8:	adc    BYTE PTR [rax+0x0],dh
   1400305eb:	add    BYTE PTR [rcx],ah
   1400305ed:	add    BYTE PTR [rax],al
   1400305ef:	add    BYTE PTR [rax+0x4000200],ah
   1400305f5:	add    DWORD PTR [rdx],eax
   1400305f7:	add    BYTE PTR [rsi+rax*1],dl
   1400305fa:	add    eax,DWORD PTR [rax]
   1400305fc:	and    DWORD PTR [rdx],ecx
   1400305fe:	add    al,0x0
   140030600:	or     dh,BYTE PTR [rdx+rcx*1+0x0]
   140030604:	add    eax,0xa0000934
   140030609:	add    BYTE PTR [rdx],al
   14003060b:	add    BYTE PTR [rcx+rax*1],al
   14003060e:	add    al,BYTE PTR [rax]
   140030610:	adc    al,0x6
   140030612:	add    eax,DWORD PTR [rax]
   140030614:	add    DWORD PTR [rsi],ecx
   140030616:	(bad)  
   140030617:	add    BYTE PTR [rsi],cl
   140030619:	push   rsp
   14003061a:	or     eax,DWORD PTR [rax]
   14003061c:	(bad)  
   14003061d:	xor    cl,BYTE PTR [rdx]
   14003061f:	ror    BYTE PTR [rax],1
   140030621:	rol    BYTE PTR [rsi],0x60
   140030624:	add    DWORD PTR [rcx],esp
   140030626:	or     eax,DWORD PTR [rax]
   140030628:	and    DWORD PTR [rcx+rsi*2],esi
   14003062b:	add    BYTE PTR [rcx],ah
   14003062d:	add    DWORD PTR [rax+0x0],ebp
   140030630:	sbb    dh,al
   140030632:	sbb    al,ah
   140030634:	(bad)  
   140030635:	rcl    BYTE PTR [rax+rax*8],1
   140030638:	adc    dh,BYTE PTR [rax+0x11]
   14003063b:	(bad)  
   14003063c:	adc    BYTE PTR [rax+0x0],dl
   14003063f:	add    BYTE PTR [rcx],al
   140030641:	or     al,0x6
   140030643:	add    BYTE PTR [rsp+rsi*1],cl
   140030646:	or     al,BYTE PTR [rax]
   140030648:	or     al,0x52
   14003064a:	or     BYTE PTR [rax+0x7],dh
   14003064d:	(bad)  
   14003064e:	(bad)  
   14003064f:	push   rax
   140030650:	add    DWORD PTR [rdi],ecx
   140030652:	(bad)  
   140030653:	add    BYTE PTR [rdi],cl
   140030655:	or     DWORD PTR fs:[rax],eax
   140030658:	sysenter 
   14003065a:	(bad)  
   14003065b:	add    BYTE PTR [rdi],cl
   14003065d:	xor    cl,BYTE PTR [rbx]
   14003065f:	jo     0x140030682
   140030661:	add    BYTE PTR [rax],al
   140030663:	add    BYTE PTR [rax],ah
   140030665:	and    eax,0x25560002
   14003066a:	add    al,BYTE PTR [rax]
   14003066c:	test   BYTE PTR [rsi],al
   14003066e:	add    eax,DWORD PTR [rax]
   140030670:	and    DWORD PTR [rax],ecx
   140030672:	add    al,BYTE PTR [rax]
   140030674:	or     BYTE PTR [rdx+rdx*1+0x0],ah
   140030678:	and    BYTE PTR [rip+0x25560002],ah        # 0x165590680
   14003067e:	add    al,BYTE PTR [rax]
   140030680:	test   BYTE PTR [rsi],al
   140030682:	add    eax,DWORD PTR [rax]
   140030684:	add    DWORD PTR [rax],ecx
   140030686:	add    al,0x0
   140030688:	or     dl,dl
   14003068a:	add    al,0x70
   14003068c:	add    edx,DWORD PTR [rax+0x2]
   14003068f:	xor    BYTE PTR [rcx],ah
   140030691:	add    BYTE PTR [rax],al
   140030693:	add    BYTE PTR [rax],dh
   140030695:	(bad)  
   140030696:	add    al,BYTE PTR [rax]
   140030698:	(bad)  
   140030699:	(bad)  
   14003069a:	add    al,BYTE PTR [rax]
   14003069c:	mov    esp,0x21000306
   1400306a1:	sbb    BYTE PTR [rsi],al
   1400306a3:	add    BYTE PTR [rax],bl
   1400306a5:	hlt    
   1400306a6:	sbb    BYTE PTR [rax],al
   1400306a8:	adc    ah,ah
   1400306aa:	sbb    DWORD PTR [rax],eax
   1400306ac:	or     BYTE PTR [rdx+riz*1+0x0],dh
   1400306b0:	xor    BYTE PTR [rdi],ah
   1400306b2:	add    al,BYTE PTR [rax]
   1400306b4:	(bad)  
   1400306b5:	(bad)  
   1400306b6:	add    al,BYTE PTR [rax]
   1400306b8:	mov    esp,0x1000306
   1400306bd:	sysret 
   1400306bf:	add    BYTE PTR [rdi],cl
   1400306c1:	add    DWORD PTR [rdx],ebx
   1400306c3:	add    BYTE PTR [rax],cl
   1400306c5:	rol    BYTE PTR [rsi],1
   1400306c7:	rol    BYTE PTR [rax+riz*2],0x3
   1400306cb:	push   rax
   1400306cc:	add    dh,BYTE PTR [rax]
   1400306ce:	add    BYTE PTR [rax],al
   1400306d0:	and    DWORD PTR [rax],eax
   1400306d2:	add    BYTE PTR [rax],al
   1400306d4:	add    BYTE PTR [rdx],ch
   1400306d6:	add    al,BYTE PTR [rax]
   1400306d8:	rex.WRXB sub r8b,BYTE PTR [r10]
   1400306db:	add    ah,bh
   1400306dd:	(bad)  
   1400306de:	add    eax,DWORD PTR [rax]
   1400306e0:	and    DWORD PTR [rdi],ecx
   1400306e2:	(bad)  
   1400306e3:	add    BYTE PTR [rdi],cl
   1400306e5:	je     0x1400306f6
   1400306e7:	add    BYTE PTR [rdx],cl
   1400306e9:	fs or  eax,0xc540500
   1400306ef:	add    BYTE PTR [rax],al
   1400306f1:	sub    al,BYTE PTR [rdx]
   1400306f3:	add    BYTE PTR [rdi+0x2a],cl
   1400306f6:	add    al,BYTE PTR [rax]
   1400306f8:	cld    
   1400306f9:	(bad)  
   1400306fa:	add    eax,DWORD PTR [rax]
   1400306fc:	add    DWORD PTR [rsi],ecx
   1400306fe:	(bad)  
   1400306ff:	add    BYTE PTR [rsi],cl
   140030701:	push   rdx
   140030702:	or     dh,al
   140030704:	or     al,ah
   140030706:	(bad)  
   140030707:	rol    BYTE PTR [rax+rax*8],1
   14003070a:	add    dh,BYTE PTR [rax]
   14003070c:	add    DWORD PTR [rax],ebx
   14003070e:	or     al,BYTE PTR [rax]
   140030710:	sbb    BYTE PTR [rbp+rcx*1+0x0],ah
   140030714:	sbb    BYTE PTR [rsp+rcx*1+0x0],dl
   140030718:	sbb    BYTE PTR [rdx+rcx*1],dh
   14003071b:	add    BYTE PTR [rax],bl
   14003071d:	push   rdx
   14003071e:	adc    al,0xd0
   140030720:	adc    al,al
   140030722:	adc    BYTE PTR [rax+0x1],dh
   140030725:	adc    al,0x8
   140030727:	add    BYTE PTR [rsp+riz*2],dl
   14003072a:	or     eax,0xc541400
   14003072f:	add    BYTE PTR [rsp+rsi*1],dl
   140030732:	or     eax,DWORD PTR [rax]
   140030734:	adc    al,0x72
   140030736:	adc    BYTE PTR [rax+0x21],dh
   140030739:	add    BYTE PTR [rax],al
   14003073b:	add    al,dl
   14003073d:	(bad)  
   14003073e:	add    al,BYTE PTR [rax]
   140030740:	fld    TBYTE PTR [rdi]
   140030742:	add    al,BYTE PTR [rax]
   140030744:	(bad)  
   140030745:	cmc    
   140030746:	add    al,BYTE PTR [rax]
   140030748:	and    DWORD PTR [rax],eax
   14003074a:	add    BYTE PTR [rax],al
   14003074c:	fld    TBYTE PTR [rdi]
   14003074e:	add    al,BYTE PTR [rax]
   140030750:	push   rcx
   140030751:	xor    BYTE PTR [rdx],al
   140030753:	add    BYTE PTR [rax+0x7],dh
   140030756:	add    eax,DWORD PTR [rax]
   140030758:	and    DWORD PTR [rip+0xffffffffd40d0004],ecx        # 0x114100762
   14003075e:	or     al,BYTE PTR [rax]
   140030760:	add    eax,0xdb0009c4
   140030765:	(bad)  
   140030766:	add    al,BYTE PTR [rax]
   140030768:	push   rcx
   140030769:	xor    BYTE PTR [rdx],al
   14003076b:	add    BYTE PTR [rax+0x7],dh
   14003076e:	add    eax,DWORD PTR [rax]
   140030770:	and    DWORD PTR [rip+0x64050002],eax        # 0x1a4080778
   140030776:	or     BYTE PTR [rax],al
   140030778:	shr    BYTE PTR [rdi],1
   14003077a:	add    al,BYTE PTR [rax]
   14003077c:	fld    TBYTE PTR [rdi]
   14003077e:	add    al,BYTE PTR [rax]
   140030780:	(bad)  
   140030781:	cmc    
   140030782:	add    al,BYTE PTR [rax]
   140030784:	add    DWORD PTR [rdi],ecx
   140030786:	add    al,0x0
   140030788:	sysenter 
   14003078a:	(bad)  
   14003078b:	add    BYTE PTR [rdi],cl
   14003078d:	xor    cl,BYTE PTR [rbx]
   14003078f:	jo     0x1400307b2
   140030791:	add    BYTE PTR [rax],al
   140030793:	add    BYTE PTR [rax-0x22fffdcf],ah
   140030799:	xor    DWORD PTR [rdx],eax
   14003079b:	add    al,bh
   14003079d:	(bad)  
   14003079e:	add    eax,DWORD PTR [rax]
   1400307a0:	and    DWORD PTR [rax],eax
   1400307a2:	add    al,0x0
   1400307a4:	add    ah,al
   1400307a6:	or     al,BYTE PTR [rax]
   1400307a8:	add    BYTE PTR [rbx+rcx*1],dh
   1400307ab:	add    BYTE PTR [rax-0x22fffdcf],ah
   1400307b1:	xor    DWORD PTR [rdx],eax
   1400307b3:	add    al,bh
   1400307b5:	(bad)  
   1400307b6:	add    eax,DWORD PTR [rax]
   1400307b8:	and    DWORD PTR [rax],eax
   1400307ba:	add    BYTE PTR [rax],al
   1400307bc:	fnsave [rcx]
   1400307be:	add    al,BYTE PTR [rax]
   1400307c0:	div    BYTE PTR [rcx]
   1400307c2:	add    al,BYTE PTR [rax]
   1400307c4:	loopne 0x1400307cd
   1400307c6:	add    eax,DWORD PTR [rax]
   1400307c8:	and    DWORD PTR [rdx],ecx
   1400307ca:	add    al,0x0
   1400307cc:	or     ah,ah
   1400307ce:	or     BYTE PTR [rax],al
   1400307d0:	add    eax,0xdd0009d4
   1400307d5:	xor    DWORD PTR [rdx],eax
   1400307d7:	add    dh,dh
   1400307d9:	xor    DWORD PTR [rdx],eax
   1400307db:	add    al,ah
   1400307dd:	(bad)  
   1400307de:	add    eax,DWORD PTR [rax]
   1400307e0:	and    DWORD PTR [rdx],ecx
   1400307e2:	add    al,0x0
   1400307e4:	or     al,ah
   1400307e6:	or     al,BYTE PTR [rax]
   1400307e8:	add    eax,0xa0000b34
   1400307ed:	xor    DWORD PTR [rdx],eax
   1400307ef:	add    ch,bl
   1400307f1:	xor    DWORD PTR [rdx],eax
   1400307f3:	add    al,bh
   1400307f5:	(bad)  
   1400307f6:	add    eax,DWORD PTR [rax]
   1400307f8:	add    DWORD PTR [rax],ecx
   1400307fa:	add    al,0x0
   1400307fc:	or     BYTE PTR [rdx+0x60037004],dh
   140030802:	add    dl,BYTE PTR [rax+0x1]
   140030805:	clts   
   140030807:	add    BYTE PTR [rdi],cl
   140030809:	fs (bad) 
   14003080b:	add    BYTE PTR [rdi],cl
   14003080d:	xor    al,0x6
   14003080f:	add    BYTE PTR [rdi],cl
   140030811:	xor    cl,BYTE PTR [rbx]
   140030813:	jo     0x140030836
   140030815:	add    BYTE PTR [rax],al
   140030817:	add    BYTE PTR [rax-0x3afffdcc],dl
   14003081d:	xor    al,0x2
   14003081f:	add    BYTE PTR [rax+rcx*1+0x3],ch
   140030823:	add    BYTE PTR [rcx],ah
   140030825:	add    BYTE PTR [rdx],al
   140030827:	add    BYTE PTR [rax],al
   140030829:	in     al,0x14
   14003082b:	add    ch,al
   14003082d:	xor    al,0x2
   14003082f:	add    ch,cl
   140030831:	xor    al,0x2
   140030833:	add    BYTE PTR [rax+rcx*1+0x3],dl
   140030837:	add    BYTE PTR [rcx],ah
   140030839:	clts   
   14003083b:	add    BYTE PTR [rdi],cl
   14003083d:	hlt    
   14003083e:	adc    eax,DWORD PTR [rax]
   140030840:	or     ah,ah
   140030842:	adc    al,0x0
   140030844:	add    al,0xd4
   140030846:	adc    eax,0x234c500
   14003084b:	add    ch,cl
   14003084d:	xor    al,0x2
   14003084f:	add    BYTE PTR [rax+rcx*1+0x3],dl
   140030853:	add    BYTE PTR [rcx],ah
   140030855:	or     BYTE PTR [rax+rax*1],al
   140030858:	or     BYTE PTR [rsi+rdx*1+0x0],dl
   14003085c:	add    al,0x34
   14003085e:	(bad)  
   14003085f:	add    BYTE PTR [rax-0x3afffdcc],dl
   140030865:	xor    al,0x2
   140030867:	add    BYTE PTR [rax+rcx*1+0x3],ch
   14003086b:	add    BYTE PTR [rcx],al
   14003086d:	sbb    al,BYTE PTR [rip+0x18011a00]        # 0x158042273
   140030873:	add    BYTE PTR [rbx],dl
   140030875:	rcl    BYTE PTR [rcx],0x70
   140030878:	adc    BYTE PTR [rax+0x0],ah
   14003087b:	add    BYTE PTR [rcx],al
   14003087d:	clts   
   14003087f:	add    BYTE PTR [rdi],cl
   140030881:	or     DWORD PTR fs:[rax],eax
   140030884:	sysenter 
   140030886:	or     BYTE PTR [rax],al
   140030888:	rsqrtps xmm1,XMMWORD PTR [rbx]
   14003088b:	jo     0x14003088e
   14003088d:	or     al,0x6
   14003088f:	add    BYTE PTR [rsp+rsi*1],cl
   140030892:	or     eax,DWORD PTR [rax]
   140030894:	or     al,0x52
   140030896:	or     BYTE PTR [rax+0x7],dh
   140030899:	(bad)  
   14003089a:	(bad)  
   14003089b:	push   rax
   14003089c:	add    DWORD PTR [rip+0x340d0005],ecx        # 0x1741008a7
   1400308a2:	sub    al,BYTE PTR [rax]
   1400308a4:	or     eax,0x6002801
   1400308a9:	jo     0x1400308ab
   1400308ab:	add    BYTE PTR [rcx],al
   1400308ad:	sbb    BYTE PTR [rdx],cl
   1400308af:	add    BYTE PTR [rax],bl
   1400308b1:	fs or  al,0x0
   1400308b4:	sbb    BYTE PTR [rbx+rcx*1+0x0],dl
   1400308b8:	sbb    BYTE PTR [rdx+rcx*1],dh
   1400308bb:	add    BYTE PTR [rax],bl
   1400308bd:	push   rdx
   1400308be:	adc    al,0xd0
   1400308c0:	adc    al,al
   1400308c2:	adc    BYTE PTR [rax+0x21],dh
   1400308c5:	add    BYTE PTR [rax],al
   1400308c7:	add    BYTE PTR [rax],dl
   1400308c9:	add    r8b,BYTE PTR [rax]
   1400308cc:	jmp    0x140030912
   1400308ce:	add    al,BYTE PTR [rax]
   1400308d0:	or     al,0x9
   1400308d2:	add    eax,DWORD PTR [rax]
   1400308d4:	and    DWORD PTR [rax],eax
   1400308d6:	add    BYTE PTR [rax],al
   1400308d8:	jmp    0x14003091e
   1400308da:	add    al,BYTE PTR [rax]
   1400308dc:	ror    DWORD PTR [rdx+rax*1+0x0],cl
   1400308e0:	clc    
   1400308e1:	or     BYTE PTR [rbx],al
   1400308e3:	add    BYTE PTR [rcx],ah
   1400308e5:	or     BYTE PTR [rdx],al
   1400308e7:	add    BYTE PTR [rax],cl
   1400308e9:	(bad)  
   1400308ea:	adc    al,0x0
   1400308ec:	jmp    0x140030932
   1400308ee:	add    al,BYTE PTR [rax]
   1400308f0:	ror    DWORD PTR [rdx+rax*1+0x0],cl
   1400308f4:	clc    
   1400308f5:	or     BYTE PTR [rbx],al
   1400308f7:	add    BYTE PTR [rcx],ah
   1400308f9:	or     BYTE PTR [rdx],al
   1400308fb:	add    BYTE PTR [rax],cl
   1400308fd:	adc    eax,DWORD PTR fs:[rax]
   140030900:	adc    BYTE PTR [rdx+rax*1+0x0],al
   140030904:	jmp    0x14003094a
   140030906:	add    al,BYTE PTR [rax]
   140030908:	or     al,0x9
   14003090a:	add    eax,DWORD PTR [rax]
   14003090c:	add    DWORD PTR [rip+0x340d0006],ecx        # 0x174100918
   140030912:	adc    eax,0x9d20d00
   140030917:	rol    BYTE PTR [rdi],0x70
   14003091a:	(bad)  
   14003091b:	push   rax
   14003091c:	and    DWORD PTR [rax],ebx
   14003091e:	(bad)  
   14003091f:	add    BYTE PTR [rax],bl
   140030921:	hlt    
   140030922:	sbb    al,0x0
   140030924:	adc    ah,ah
   140030926:	sbb    eax,0x25340800
   14003092b:	add    al,ah
   14003092d:	push   rbp
   14003092e:	add    al,BYTE PTR [rax]
   140030930:	clc    
   140030931:	push   rsi
   140030932:	add    al,BYTE PTR [rax]
   140030934:	cmp    BYTE PTR [rcx],cl
   140030936:	add    eax,DWORD PTR [rax]
   140030938:	add    DWORD PTR [rdi],ecx
   14003093a:	(bad)  
   14003093b:	add    BYTE PTR [rdi],cl
   14003093d:	add    DWORD PTR [rsi],ebx
   14003093f:	add    BYTE PTR [rax],cl
   140030941:	rol    BYTE PTR [rsi],1
   140030943:	rol    BYTE PTR [rax+rsi*2],0x3
   140030947:	(bad)  
   140030948:	add    dl,BYTE PTR [rax+0x0]
   14003094b:	add    BYTE PTR [rcx],al
   14003094d:	or     al,BYTE PTR [rax+rax*1]
   140030950:	or     dh,BYTE PTR [rsi+rax*1]
   140030953:	add    BYTE PTR [rdx],cl
   140030955:	xor    al,BYTE PTR [rsi]
   140030957:	jo     0x14003095a
   140030959:	(bad)  
   14003095a:	or     al,BYTE PTR [rax]
   14003095c:	(bad)  
   14003095d:	add    DWORD PTR [rdi],edi
   14003095f:	add    BYTE PTR [rax],ah
   140030961:	lock (bad) 
   140030963:	loopne 0x140030981
   140030965:	rcr    BYTE PTR [rdx],1
   140030967:	rcr    BYTE PTR [rax],0x70
   14003096a:	(bad)  
   14003096b:	(bad)  
   14003096c:	(bad)  
   14003096d:	push   rax
   14003096e:	adc    eax,0x2130
   140030973:	add    BYTE PTR [rax-0x49fffd94],dl
   140030979:	ins    BYTE PTR es:[rdi],dx
   14003097a:	add    al,BYTE PTR [rax]
   14003097c:	xchg   esp,eax
   14003097d:	or     DWORD PTR [rbx],eax
   14003097f:	add    BYTE PTR [rcx],ah
   140030981:	add    eax,0x34050002
   140030986:	or     BYTE PTR [rax],al
   140030988:	nop
   140030989:	ins    BYTE PTR es:[rdi],dx
   14003098a:	add    al,BYTE PTR [rax]
   14003098c:	mov    dh,0x6c
   14003098e:	add    al,BYTE PTR [rax]
   140030990:	xchg   esp,eax
   140030991:	or     DWORD PTR [rbx],eax
   140030993:	add    BYTE PTR [rcx],al
   140030995:	or     eax,0x540d0006
   14003099a:	or     al,BYTE PTR [rax]
   14003099c:	or     eax,0x7c00932
   1400309a1:	jo     0x1400309a9
   1400309a3:	(bad)  
   1400309a4:	and    DWORD PTR [rax],eax
   1400309a6:	add    BYTE PTR [rax],al
   1400309a8:	push   rax
   1400309a9:	outs   dx,BYTE PTR ds:[rsi]
   1400309aa:	add    al,BYTE PTR [rax]
   1400309ac:	fidiv  DWORD PTR [rcx+0x2]
   1400309af:	add    al,cl
   1400309b1:	or     DWORD PTR [rbx],eax
   1400309b3:	add    BYTE PTR [rcx],ah
   1400309b5:	add    eax,0x54050002
   1400309ba:	or     DWORD PTR [rax],eax
   1400309bc:	push   rax
   1400309bd:	outs   dx,BYTE PTR ds:[rsi]
   1400309be:	add    al,BYTE PTR [rax]
   1400309c0:	fidiv  DWORD PTR [rcx+0x2]
   1400309c3:	add    al,cl
   1400309c5:	or     DWORD PTR [rbx],eax
   1400309c7:	add    BYTE PTR [rcx],al
   1400309c9:	clts   
   1400309cb:	add    BYTE PTR [rdi],cl
   1400309cd:	or     eax,DWORD PTR fs:[rax]
   1400309d0:	sysenter 
   1400309d2:	or     al,BYTE PTR [rax]
   1400309d4:	rsqrtps xmm1,XMMWORD PTR [rbx]
   1400309d7:	jo     0x1400309fa
   1400309d9:	add    BYTE PTR [rax],al
   1400309db:	add    al,al
   1400309dd:	jbe    0x1400309e1
   1400309df:	add    BYTE PTR [rdx],ah
   1400309e1:	ja     0x1400309e5
   1400309e3:	add    BYTE PTR [rdx+rcx*1],ah
   1400309e6:	add    eax,DWORD PTR [rax]
   1400309e8:	and    DWORD PTR [rax],eax
   1400309ea:	add    BYTE PTR [rax],al
   1400309ec:	and    dh,BYTE PTR [rdi+0x2]
   1400309ef:	add    BYTE PTR [rcx+0xc000277],bh
   1400309f5:	or     al,BYTE PTR [rbx]
   1400309f7:	add    BYTE PTR [rcx],ah
   1400309f9:	add    eax,0xd4050002
   1400309fe:	add    al,0x0
   140030a00:	and    dh,BYTE PTR [rdi+0x2]
   140030a03:	add    BYTE PTR [rcx+0xc000277],bh
   140030a09:	or     al,BYTE PTR [rbx]
   140030a0b:	add    BYTE PTR [rcx],ah
   140030a0d:	or     al,BYTE PTR [rax+rax*1]
   140030a10:	or     dl,BYTE PTR [rsp+rcx*1+0x0]
   140030a14:	add    eax,0xc0000b34
   140030a19:	jbe    0x140030a1d
   140030a1b:	add    BYTE PTR [rdx],ah
   140030a1d:	ja     0x140030a21
   140030a1f:	add    BYTE PTR [rdx+rcx*1],ah
   140030a22:	add    eax,DWORD PTR [rax]
   140030a24:	add    DWORD PTR [rbx],ecx
   140030a26:	add    eax,0x7420b00
   140030a2b:	loopne 0x140030a32
   140030a2d:	rol    BYTE PTR [rbx],0x70
   140030a30:	add    ah,BYTE PTR [rax+0x0]
   140030a33:	add    BYTE PTR [rcx],al
   140030a35:	or     al,BYTE PTR [rax+rax*1]
   140030a38:	or     dh,BYTE PTR [rax+rcx*1]
   140030a3b:	add    BYTE PTR [rdx],cl
   140030a3d:	push   rdx
   140030a3e:	(bad)  
   140030a3f:	jo     0x140030a62
   140030a41:	add    BYTE PTR [rax],al
   140030a43:	add    BYTE PTR [rax-0x2fffd86],ah
   140030a49:	jp     0x140030a4d
   140030a4b:	add    BYTE PTR [rdx+rcx*1+0x3],ah
   140030a4f:	add    BYTE PTR [rcx],ah
   140030a51:	add    eax,0x34050002
   140030a56:	or     eax,DWORD PTR [rax]
   140030a58:	movabs al,ds:0x6400027afd00027a
   140030a61:	or     al,BYTE PTR [rbx]
   140030a63:	add    BYTE PTR [rcx],al
   140030a65:	or     BYTE PTR [rax+rax*1],al
   140030a68:	or     BYTE PTR [rdx+0x4],dl
   140030a6b:	jo     0x140030a70
   140030a6d:	(bad)  
   140030a6e:	add    dl,BYTE PTR [rax+0x1]
   140030a71:	sbb    al,0xb
   140030a73:	add    BYTE PTR [rsp+rsi*1],bl
   140030a76:	push   rbx
   140030a77:	add    BYTE PTR [rcx+rax*1],bl
   140030a7a:	rex.WX add BYTE PTR [rip+0x11e013f0],dl        # 0x151e31e71
   140030a81:	ror    BYTE PTR [rdi],1
   140030a83:	ror    BYTE PTR [rip+0xb600c70],0x50        # 0x14b6316fa
   140030a8a:	add    BYTE PTR [rax],al
   140030a8c:	adc    DWORD PTR [rsi],eax
   140030a8e:	add    al,BYTE PTR [rax]
   140030a90:	(bad)  
   140030a91:	xor    al,BYTE PTR [rdx]
   140030a93:	xor    BYTE PTR [rdx-0x67],ah
   140030a96:	add    al,BYTE PTR [rax]
   140030a98:	add    DWORD PTR [rax],eax
   140030a9a:	add    BYTE PTR [rax],al
   140030a9c:	outs   dx,DWORD PTR ds:[rsi]
   140030a9d:	xchg   ebp,eax
   140030a9e:	add    al,BYTE PTR [rax]
   140030aa0:	(bad)  
   140030aa1:	xchg   ebp,eax
   140030aa2:	add    al,BYTE PTR [rax]
   140030aa4:	in     al,dx
   140030aa5:	pushf  
   140030aa6:	add    al,BYTE PTR [rax]
   140030aa8:	add    BYTE PTR [rax],al
   140030aaa:	add    BYTE PTR [rax],al
   140030aac:	add    DWORD PTR [rcx+rax*1],eax
   140030aaf:	add    BYTE PTR [rdx+riz*2],al
   140030ab2:	add    BYTE PTR [rax],al
   140030ab4:	or     DWORD PTR [rdx],ecx
   140030ab6:	add    al,0x0
   140030ab8:	or     ah,BYTE PTR [rsi+rax*1+0x0]
   140030abc:	or     dh,BYTE PTR [rdx]
   140030abe:	(bad)  
   140030abf:	jo     0x140030b23
   140030ac1:	cdq    
   140030ac2:	add    al,BYTE PTR [rax]
   140030ac4:	add    DWORD PTR [rax],eax
   140030ac6:	add    BYTE PTR [rax],al
   140030ac8:	repnz xchg esi,eax
   140030aca:	add    al,BYTE PTR [rax]
   140030acc:	xor    BYTE PTR [rax-0x62fafffe],bl
   140030ad2:	add    al,BYTE PTR [rax]
   140030ad4:	xor    BYTE PTR [rax+0x6010002],bl
   140030ada:	add    al,BYTE PTR [rax]
   140030adc:	(bad)  
   140030add:	xor    al,BYTE PTR [rdx]
   140030adf:	push   rax
   140030ae0:	or     DWORD PTR [rdi],edx
   140030ae2:	(bad)  
   140030ae3:	add    BYTE PTR [rdi],dl
   140030ae5:	xor    al,0xd
   140030ae7:	add    BYTE PTR [rdi],dl
   140030ae9:	jb     0x140030afe
   140030aeb:	rcl    BYTE PTR [rcx],0x70
   140030aee:	adc    BYTE PTR [rax+0x62],ah
   140030af1:	cdq    
   140030af2:	add    al,BYTE PTR [rax]
   140030af4:	add    DWORD PTR [rax],eax
   140030af6:	add    BYTE PTR [rax],al
   140030af8:	lahf   
   140030af9:	cdq    
   140030afa:	add    al,BYTE PTR [rax]
   140030afc:	mov    ecx,0x21000299
   140030b01:	popf   
   140030b02:	add    al,BYTE PTR [rax]
   140030b04:	mov    ecx,0x11000299
   140030b09:	sbb    BYTE PTR [rip+0x14621800],al        # 0x15465230f
   140030b0f:	rcl    BYTE PTR [rdx],0x70
   140030b12:	adc    DWORD PTR [rax+0x10],esp
   140030b15:	xor    BYTE PTR [rax],al
   140030b17:	add    BYTE PTR [rdx-0x67],ah
   140030b1a:	add    al,BYTE PTR [rax]
   140030b1c:	add    DWORD PTR [rax],eax
   140030b1e:	add    BYTE PTR [rax],al
   140030b20:	sti    
   140030b21:	cdq    
   140030b22:	add    al,BYTE PTR [rax]
   140030b24:	sbb    al,0x9a
   140030b26:	add    al,BYTE PTR [rax]
   140030b28:	(bad)  
   140030b29:	popf   
   140030b2a:	add    al,BYTE PTR [rax]
   140030b2c:	add    BYTE PTR [rax],al
   140030b2e:	add    BYTE PTR [rax],al
   140030b30:	or     DWORD PTR [rcx+rax*1],eax
   140030b33:	add    BYTE PTR [rdx+rax*2],al
   140030b36:	add    BYTE PTR [rax],al
   140030b38:	(bad)  
   140030b39:	cdq    
   140030b3a:	add    al,BYTE PTR [rax]
   140030b3c:	add    DWORD PTR [rax],eax
   140030b3e:	add    BYTE PTR [rax],al
   140030b40:	xchg   edi,eax
   140030b41:	fwait
   140030b42:	add    al,BYTE PTR [rax]
   140030b44:	retf   0x29b
   140030b47:	add    BYTE PTR [rax-0x35fffd63],dl
   140030b4d:	fwait
   140030b4e:	add    al,BYTE PTR [rax]
   140030b50:	add    DWORD PTR [rdx],ecx
   140030b52:	add    al,0x0
   140030b54:	or     dh,BYTE PTR [rax+rcx*1]
   140030b57:	add    BYTE PTR [rdx],cl
   140030b59:	xor    al,BYTE PTR [rsi]
   140030b5b:	jo     0x140030b15
   140030b5d:	adc    al,0x3
	...
   140030b67:	add    BYTE PTR [rax-0x1ffffce3],bl
   140030b6d:	mov    eax,0xd980002
   140030b72:	add    eax,DWORD PTR [rax]
	...
   140030b7c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140030b7d:	rex.XB add eax,DWORD PTR [r8]
   140030b80:	shl    BYTE PTR [rcx+0xc180002],0x3
	...
   140030b8f:	add    BYTE PTR [rax+0x46],dh
   140030b92:	add    eax,DWORD PTR [rax]
   140030b94:	mov    al,0x2
   140030b97:	add    BYTE PTR [rax+0x30c],al
   140030b9d:	add    BYTE PTR [rax],al
   140030b9f:	add    BYTE PTR [rax],al
   140030ba1:	add    BYTE PTR [rax],al
   140030ba3:	add    BYTE PTR [rdi+rax*2],dl
   140030ba6:	add    eax,DWORD PTR [rax]
   140030ba8:	test   al,0xb0
   140030baa:	add    al,BYTE PTR [rax]
   140030bac:	fmul   DWORD PTR [rbx]
   140030bae:	add    eax,DWORD PTR [rax]
	...
   140030bb8:	and    al,0x49
   140030bba:	add    eax,DWORD PTR [rax]
   140030bbc:	add    BYTE PTR [rax+0x2],dh
	...
   140030bd6:	add    BYTE PTR [rax],al
   140030bd8:	or     cl,BYTE PTR [rcx+0x3]
   140030bdb:	add    BYTE PTR [rax],al
   140030bdd:	add    BYTE PTR [rax],al
   140030bdf:	add    ah,dh
   140030be1:	add    rax,QWORD PTR [rax]
   140030be4:	add    BYTE PTR [rax],al
   140030be6:	add    BYTE PTR [rax],al
   140030be8:	fimul  WORD PTR [rax+0x3]
   140030beb:	add    BYTE PTR [rax],al
   140030bed:	add    BYTE PTR [rax],al
   140030bef:	add    dh,cl
   140030bf1:	add    rax,QWORD PTR [rax]
   140030bf4:	add    BYTE PTR [rax],al
   140030bf6:	add    BYTE PTR [rax],al
   140030bf8:	mov    ah,0x48
   140030bfa:	add    eax,DWORD PTR [rax]
   140030bfc:	add    BYTE PTR [rax],al
   140030bfe:	add    BYTE PTR [rax],al
   140030c00:	xchg   esi,eax
   140030c01:	add    rax,QWORD PTR [rax]
   140030c04:	add    BYTE PTR [rax],al
   140030c06:	add    BYTE PTR [rax],al
   140030c08:	mov    cs,WORD PTR [rax+0x3]
	...
   140030c17:	add    dh,cl
   140030c19:	rex.XB add eax,DWORD PTR [r8]
   140030c1c:	add    BYTE PTR [rax],al
   140030c1e:	add    BYTE PTR [rax],al
   140030c20:	out    dx,al
   140030c21:	rex.XB add eax,DWORD PTR [r8]
   140030c24:	add    BYTE PTR [rax],al
   140030c26:	add    BYTE PTR [rax],al
   140030c28:	xor    al,BYTE PTR [rbx+rax*1+0x0]
   140030c2c:	add    BYTE PTR [rax],al
   140030c2e:	add    BYTE PTR [rax],al
   140030c30:	jo     0x140030c76
   140030c32:	add    eax,DWORD PTR [rax]
   140030c34:	add    BYTE PTR [rax],al
   140030c36:	add    BYTE PTR [rax],al
   140030c38:	xchg   edx,eax
   140030c39:	add    r8d,DWORD PTR [rax]
   140030c3c:	add    BYTE PTR [rax],al
   140030c3e:	add    BYTE PTR [rax],al
   140030c40:	rol    BYTE PTR [rbx+rax*1+0x0],cl
   140030c44:	add    BYTE PTR [rax],al
   140030c46:	add    BYTE PTR [rax],al
   140030c48:	sbb    al,BYTE PTR [rbp+0x3]
   140030c4b:	add    BYTE PTR [rax],al
   140030c4d:	add    BYTE PTR [rax],al
   140030c4f:	add    BYTE PTR [rbp+rax*2+0x3],bl
   140030c53:	add    BYTE PTR [rax],al
   140030c55:	add    BYTE PTR [rax],al
   140030c57:	add    BYTE PTR [rax+0x345],bl
   140030c5d:	add    BYTE PTR [rax],al
   140030c5f:	add    ah,dl
   140030c61:	add    r8d,DWORD PTR [r8]
   140030c64:	add    BYTE PTR [rax],al
   140030c66:	add    BYTE PTR [rax],al
   140030c68:	sub    BYTE PTR [rsi+0x3],al
   140030c6b:	add    BYTE PTR [rax],al
   140030c6d:	add    BYTE PTR [rax],al
   140030c6f:	add    BYTE PTR [rax+0x343],dh
	...
   140030c7d:	add    BYTE PTR [rax],al
   140030c7f:	add    BYTE PTR [rdx+0x347],dh
   140030c85:	add    BYTE PTR [rax],al
   140030c87:	add    BYTE PTR [rdi+rax*2+0x3],ah
   140030c8e:	add    BYTE PTR [rax],al
   140030c90:	xchg   esp,eax
   140030c91:	rex.RXB add r8d,DWORD PTR [r8]
   140030c94:	add    BYTE PTR [rax],al
   140030c96:	add    BYTE PTR [rax],al
   140030c98:	xchg   BYTE PTR [rdi+0x3],al
   140030c9b:	add    BYTE PTR [rax],al
   140030c9d:	add    BYTE PTR [rax],al
   140030c9f:	add    BYTE PTR [rdi+rax*2+0x3],dh
   140030ca3:	add    BYTE PTR [rax],al
   140030ca5:	add    BYTE PTR [rax],al
   140030ca7:	add    BYTE PTR [rdx+0x47],ch
   140030caa:	add    eax,DWORD PTR [rax]
   140030cac:	add    BYTE PTR [rax],al
   140030cae:	add    BYTE PTR [rax],al
   140030cb0:	mov    edx,0x347
   140030cb5:	add    BYTE PTR [rax],al
   140030cb7:	add    BYTE PTR [rax+0x47],dl
   140030cba:	add    eax,DWORD PTR [rax]
   140030cbc:	add    BYTE PTR [rax],al
   140030cbe:	add    BYTE PTR [rax],al
   140030cc0:	rex.X
   140030cc1:	rex.RXB add r8d,DWORD PTR [r8]
   140030cc4:	add    BYTE PTR [rax],al
   140030cc6:	add    BYTE PTR [rax],al
   140030cc8:	cmp    BYTE PTR [rdi+0x3],al
   140030ccb:	add    BYTE PTR [rax],al
   140030ccd:	add    BYTE PTR [rax],al
   140030ccf:	add    BYTE PTR [rax],ah
   140030cd1:	rex.RXB add r8d,DWORD PTR [r8]
   140030cd4:	add    BYTE PTR [rax],al
   140030cd6:	add    BYTE PTR [rax],al
   140030cd8:	or     al,BYTE PTR [rdi+0x3]
   140030cdb:	add    BYTE PTR [rax],al
   140030cdd:	add    BYTE PTR [rax],al
   140030cdf:	add    dh,bh
   140030ce1:	rex.RX add r8d,DWORD PTR [rax]
   140030ce4:	add    BYTE PTR [rax],al
   140030ce6:	add    BYTE PTR [rax],al
   140030ce8:	hlt    
   140030ce9:	rex.RX add r8d,DWORD PTR [rax]
   140030cec:	add    BYTE PTR [rax],al
   140030cee:	add    BYTE PTR [rax],al
   140030cf0:	loop   0x140030d38
   140030cf2:	add    eax,DWORD PTR [rax]
   140030cf4:	add    BYTE PTR [rax],al
   140030cf6:	add    BYTE PTR [rax],al
   140030cf8:	fadd   DWORD PTR [rsi+0x3]
   140030cfb:	add    BYTE PTR [rax],al
   140030cfd:	add    BYTE PTR [rax],al
   140030cff:	add    BYTE PTR [rsi+0x346],bh
   140030d05:	add    BYTE PTR [rax],al
   140030d07:	add    BYTE PTR [rax+0x346],ch
   140030d0d:	add    BYTE PTR [rax],al
   140030d0f:	add    BYTE PTR [rsi+0x346],dl
   140030d15:	add    BYTE PTR [rax],al
   140030d17:	add    BYTE PTR [rsi+0x346],al
   140030d1d:	add    BYTE PTR [rax],al
   140030d1f:	add    BYTE PTR [rsi+rax*2+0x3],bh
   140030d23:	add    BYTE PTR [rax],al
   140030d25:	add    BYTE PTR [rax],al
   140030d27:	add    ah,al
   140030d29:	rex.RXB add r8d,DWORD PTR [r8]
   140030d2c:	add    BYTE PTR [rax],al
   140030d2e:	add    BYTE PTR [rax],al
   140030d30:	int3   
   140030d31:	rex.RXB add r8d,DWORD PTR [r8]
   140030d34:	add    BYTE PTR [rax],al
   140030d36:	add    BYTE PTR [rax],al
   140030d38:	fadd   DWORD PTR [rdi+0x3]
   140030d3b:	add    BYTE PTR [rax],al
   140030d3d:	add    BYTE PTR [rax],al
   140030d3f:	add    ah,ah
   140030d41:	rex.RXB add r8d,DWORD PTR [r8]
   140030d44:	add    BYTE PTR [rax],al
   140030d46:	add    BYTE PTR [rax],al
   140030d48:	repnz rex.RXB add r8d,DWORD PTR [r8]
   140030d4c:	add    BYTE PTR [rax],al
   140030d4e:	add    BYTE PTR [rax],al
   140030d50:	or     BYTE PTR [rax+0x3],cl
   140030d53:	add    BYTE PTR [rax],al
   140030d55:	add    BYTE PTR [rax],al
   140030d57:	add    BYTE PTR [rax+rcx*2],bl
   140030d5a:	add    eax,DWORD PTR [rax]
   140030d5c:	add    BYTE PTR [rax],al
   140030d5e:	add    BYTE PTR [rax],al
   140030d60:	sub    BYTE PTR [rax+0x3],cl
   140030d63:	add    BYTE PTR [rax],al
   140030d65:	add    BYTE PTR [rax],al
   140030d67:	add    BYTE PTR [rdx],dh
   140030d69:	add    rax,QWORD PTR [rax]
   140030d6c:	add    BYTE PTR [rax],al
   140030d6e:	add    BYTE PTR [rax],al
   140030d70:	rex.R
   140030d71:	add    rax,QWORD PTR [rax]
   140030d74:	add    BYTE PTR [rax],al
   140030d76:	add    BYTE PTR [rax],al
   140030d78:	pop    rax
   140030d79:	add    rax,QWORD PTR [rax]
   140030d7c:	add    BYTE PTR [rax],al
   140030d7e:	add    BYTE PTR [rax],al
   140030d80:	(bad)  
   140030d81:	rex.RXB add r8d,DWORD PTR [r8]
   140030d84:	add    BYTE PTR [rax],al
   140030d86:	add    BYTE PTR [rax],al
   140030d88:	int3   
   140030d89:	rex.RX add r8d,DWORD PTR [rax]
	...
   140030d98:	lods   al,BYTE PTR ds:[rsi]
   140030d99:	and    BYTE PTR [rbx],al
   140030d9b:	add    BYTE PTR [rax],al
   140030d9d:	add    BYTE PTR [rax],al
   140030d9f:	add    ah,cl
   140030da1:	and    BYTE PTR [rbx],al
   140030da3:	add    BYTE PTR [rax],al
   140030da5:	add    BYTE PTR [rax],al
   140030da7:	add    dh,ah
   140030da9:	and    BYTE PTR [rbx],al
   140030dab:	add    BYTE PTR [rax],al
   140030dad:	add    BYTE PTR [rax],al
   140030daf:	add    BYTE PTR [rdx],cl
   140030db1:	and    DWORD PTR [rbx],eax
   140030db3:	add    BYTE PTR [rax],al
   140030db5:	add    BYTE PTR [rax],al
   140030db7:	add    BYTE PTR [rax],bh
   140030db9:	and    DWORD PTR [rbx],eax
   140030dbb:	add    BYTE PTR [rax],al
   140030dbd:	add    BYTE PTR [rax],al
   140030dbf:	add    BYTE PTR [rsi+0x21],bl
   140030dc2:	add    eax,DWORD PTR [rax]
   140030dc4:	add    BYTE PTR [rax],al
   140030dc6:	add    BYTE PTR [rax],al
   140030dc8:	mov    ah,BYTE PTR [rcx]
   140030dca:	add    eax,DWORD PTR [rax]
   140030dcc:	add    BYTE PTR [rax],al
   140030dce:	add    BYTE PTR [rax],al
   140030dd0:	stos   BYTE PTR es:[rdi],al
   140030dd1:	and    DWORD PTR [rbx],eax
   140030dd3:	add    BYTE PTR [rax],al
   140030dd5:	add    BYTE PTR [rax],al
   140030dd7:	add    al,cl
   140030dd9:	and    DWORD PTR [rbx],eax
   140030ddb:	add    BYTE PTR [rax],al
   140030ddd:	add    BYTE PTR [rax],al
   140030ddf:	add    ah,ah
   140030de1:	and    DWORD PTR [rbx],eax
   140030de3:	add    BYTE PTR [rax],al
   140030de5:	add    BYTE PTR [rax],al
   140030de7:	add    BYTE PTR [rdx+riz*1],al
   140030dea:	add    eax,DWORD PTR [rax]
   140030dec:	add    BYTE PTR [rax],al
   140030dee:	add    BYTE PTR [rax],al
   140030df0:	and    al,0x22
   140030df2:	add    eax,DWORD PTR [rax]
   140030df4:	add    BYTE PTR [rax],al
   140030df6:	add    BYTE PTR [rax],al
   140030df8:	(bad)  
   140030dfa:	add    eax,DWORD PTR [rax]
   140030dfc:	add    BYTE PTR [rax],al
   140030dfe:	add    BYTE PTR [rax],al
   140030e00:	mov    ah,BYTE PTR [rdx]
   140030e02:	add    eax,DWORD PTR [rax]
   140030e04:	add    BYTE PTR [rax],al
   140030e06:	add    BYTE PTR [rax],al
   140030e08:	lods   al,BYTE PTR ds:[rsi]
   140030e09:	and    al,BYTE PTR [rbx]
   140030e0b:	add    BYTE PTR [rax],al
   140030e0d:	add    BYTE PTR [rax],al
   140030e0f:	add    dl,dh
   140030e11:	and    al,BYTE PTR [rbx]
   140030e13:	add    BYTE PTR [rax],al
   140030e15:	add    BYTE PTR [rax],al
   140030e17:	add    BYTE PTR [rsi],ah
   140030e19:	and    eax,DWORD PTR [rbx]
   140030e1b:	add    BYTE PTR [rax],al
   140030e1d:	add    BYTE PTR [rax],al
   140030e1f:	add    BYTE PTR [rdx+0x23],dl
   140030e22:	add    eax,DWORD PTR [rax]
   140030e24:	add    BYTE PTR [rax],al
   140030e26:	add    BYTE PTR [rax],al
   140030e28:	xchg   edx,eax
   140030e29:	and    eax,DWORD PTR [rbx]
   140030e2b:	add    BYTE PTR [rax],al
   140030e2d:	add    BYTE PTR [rax],al
   140030e2f:	add    dh,bl
   140030e31:	and    eax,DWORD PTR [rbx]
   140030e33:	add    BYTE PTR [rax],al
   140030e35:	add    BYTE PTR [rax],al
   140030e37:	add    ah,bh
   140030e39:	and    eax,DWORD PTR [rbx]
   140030e3b:	add    BYTE PTR [rax],al
   140030e3d:	add    BYTE PTR [rax],al
   140030e3f:	add    BYTE PTR [rax],ah
   140030e41:	and    al,0x3
   140030e43:	add    BYTE PTR [rax],al
   140030e45:	add    BYTE PTR [rax],al
   140030e47:	add    BYTE PTR [rdx+0x24],cl
   140030e4a:	add    eax,DWORD PTR [rax]
   140030e4c:	add    BYTE PTR [rax],al
   140030e4e:	add    BYTE PTR [rax],al
   140030e50:	(bad)  
   140030e51:	and    al,0x3
   140030e53:	add    BYTE PTR [rax],al
   140030e55:	add    BYTE PTR [rax],al
   140030e57:	add    BYTE PTR [rsp+0x3],al
   140030e5e:	add    BYTE PTR [rax],al
   140030e60:	stos   BYTE PTR es:[rdi],al
   140030e61:	and    al,0x3
   140030e63:	add    BYTE PTR [rax],al
   140030e65:	add    BYTE PTR [rax],al
   140030e67:	add    dl,bl
   140030e69:	and    al,0x3
   140030e6b:	add    BYTE PTR [rax],al
   140030e6d:	add    BYTE PTR [rax],al
   140030e6f:	add    BYTE PTR [rsi],al
   140030e71:	and    eax,0x3
   140030e76:	add    BYTE PTR [rax],al
   140030e78:	and    ah,BYTE PTR [rip+0x3]        # 0x140030e81
   140030e7e:	add    BYTE PTR [rax],al
   140030e80:	and    BYTE PTR [rip+0x3],0x0        # 0x140030e8a
   140030e87:	add    BYTE PTR [rsi+0x325],bl
   140030e8d:	add    BYTE PTR [rax],al
   140030e8f:	add    dh,al
   140030e91:	and    eax,0x3
   140030e96:	add    BYTE PTR [rax],al
   140030e98:	xor    ah,BYTE PTR [rsi]
   140030e9a:	add    eax,DWORD PTR [rax]
   140030e9c:	add    BYTE PTR [rax],al
   140030e9e:	add    BYTE PTR [rax],al
   140030ea0:	(bad)  
   140030ea1:	add    eax,DWORD PTR es:[rax]
   140030ea4:	add    BYTE PTR [rax],al
   140030ea6:	add    BYTE PTR [rax],al
   140030ea8:	mov    BYTE PTR [rsi],ah
   140030eaa:	add    eax,DWORD PTR [rax]
   140030eac:	add    BYTE PTR [rax],al
   140030eae:	add    BYTE PTR [rax],al
   140030eb0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140030eb1:	add    eax,DWORD PTR es:[rax]
   140030eb4:	add    BYTE PTR [rax],al
   140030eb6:	add    BYTE PTR [rax],al
   140030eb8:	retf   0x326
   140030ebb:	add    BYTE PTR [rax],al
   140030ebd:	add    BYTE PTR [rax],al
   140030ebf:	add    al,ch
   140030ec1:	add    eax,DWORD PTR es:[rax]
   140030ec4:	add    BYTE PTR [rax],al
   140030ec6:	add    BYTE PTR [rax],al
   140030ec8:	or     al,0x27
   140030eca:	add    eax,DWORD PTR [rax]
   140030ecc:	add    BYTE PTR [rax],al
   140030ece:	add    BYTE PTR [rax],al
   140030ed0:	sub    al,0x27
   140030ed2:	add    eax,DWORD PTR [rax]
   140030ed4:	add    BYTE PTR [rax],al
   140030ed6:	add    BYTE PTR [rax],al
   140030ed8:	data16 (bad) 
   140030eda:	add    eax,DWORD PTR [rax]
   140030edc:	add    BYTE PTR [rax],al
   140030ede:	add    BYTE PTR [rax],al
   140030ee0:	jp     0x140030f09
   140030ee2:	add    eax,DWORD PTR [rax]
   140030ee4:	add    BYTE PTR [rax],al
   140030ee6:	add    BYTE PTR [rax],al
   140030ee8:	out    dx,al
   140030ee9:	(bad)  
   140030eea:	add    eax,DWORD PTR [rax]
   140030eec:	add    BYTE PTR [rax],al
   140030eee:	add    BYTE PTR [rax],al
   140030ef0:	adc    ch,BYTE PTR [rax]
   140030ef2:	add    eax,DWORD PTR [rax]
   140030ef4:	add    BYTE PTR [rax],al
   140030ef6:	add    BYTE PTR [rax],al
   140030ef8:	sub    BYTE PTR [rbx],al
   140030efb:	add    BYTE PTR [rax],al
   140030efd:	add    BYTE PTR [rax],al
   140030eff:	add    BYTE PTR [rsi+0x28],bh
   140030f02:	add    eax,DWORD PTR [rax]
   140030f04:	add    BYTE PTR [rax],al
   140030f06:	add    BYTE PTR [rax],al
   140030f08:	stos   BYTE PTR es:[rdi],al
   140030f09:	sub    BYTE PTR [rbx],al
   140030f0b:	add    BYTE PTR [rax],al
   140030f0d:	add    BYTE PTR [rax],al
   140030f0f:	add    BYTE PTR [rsi+0x328],bh
   140030f15:	add    BYTE PTR [rax],al
   140030f17:	add    dh,dl
   140030f19:	sub    BYTE PTR [rbx],al
   140030f1b:	add    BYTE PTR [rax],al
   140030f1d:	add    BYTE PTR [rax],al
   140030f1f:	add    ah,dh
   140030f21:	sub    BYTE PTR [rbx],al
   140030f23:	add    BYTE PTR [rax],al
   140030f25:	add    BYTE PTR [rax],al
   140030f27:	add    BYTE PTR [rsi],bl
   140030f29:	sub    DWORD PTR [rbx],eax
   140030f2b:	add    BYTE PTR [rax],al
   140030f2d:	add    BYTE PTR [rax],al
   140030f2f:	add    BYTE PTR [rcx+rbp*1+0x3],al
   140030f33:	add    BYTE PTR [rax],al
   140030f35:	add    BYTE PTR [rax],al
   140030f37:	add    BYTE PTR [rdx+0x29],ah
   140030f3a:	add    eax,DWORD PTR [rax]
   140030f3c:	add    BYTE PTR [rax],al
   140030f3e:	add    BYTE PTR [rax],al
   140030f40:	mov    WORD PTR [rcx],gs
   140030f42:	add    eax,DWORD PTR [rax]
   140030f44:	add    BYTE PTR [rax],al
   140030f46:	add    BYTE PTR [rax],al
   140030f48:	mov    al,0x29
   140030f4a:	add    eax,DWORD PTR [rax]
   140030f4c:	add    BYTE PTR [rax],al
   140030f4e:	add    BYTE PTR [rax],al
   140030f50:	cld    
   140030f51:	sub    DWORD PTR [rbx],eax
   140030f53:	add    BYTE PTR [rax],al
   140030f55:	add    BYTE PTR [rax],al
   140030f57:	add    BYTE PTR [rsi],ah
   140030f59:	sub    al,BYTE PTR [rbx]
   140030f5b:	add    BYTE PTR [rax],al
   140030f5d:	add    BYTE PTR [rax],al
   140030f5f:	add    BYTE PTR [rdx+rbp*1+0x3],al
   140030f63:	add    BYTE PTR [rax],al
   140030f65:	add    BYTE PTR [rax],al
   140030f67:	add    BYTE PTR [rdx+rbp*1+0x3],bl
   140030f6e:	add    BYTE PTR [rax],al
   140030f70:	mov    esp,0x32a
   140030f75:	add    BYTE PTR [rax],al
   140030f77:	add    dh,ah
   140030f79:	sub    al,BYTE PTR [rbx]
   140030f7b:	add    BYTE PTR [rax],al
   140030f7d:	add    BYTE PTR [rax],al
   140030f7f:	add    ah,bh
   140030f81:	sub    al,BYTE PTR [rbx]
   140030f83:	add    BYTE PTR [rax],al
   140030f85:	add    BYTE PTR [rax],al
   140030f87:	add    BYTE PTR [rbx+rbp*1],bl
   140030f8a:	add    eax,DWORD PTR [rax]
   140030f8c:	add    BYTE PTR [rax],al
   140030f8e:	add    BYTE PTR [rax],al
   140030f90:	cmp    al,0x2b
   140030f92:	add    eax,DWORD PTR [rax]
   140030f94:	add    BYTE PTR [rax],al
   140030f96:	add    BYTE PTR [rax],al
   140030f98:	(bad)  
   140030f99:	sub    eax,DWORD PTR [rbx]
   140030f9b:	add    BYTE PTR [rax],al
   140030f9d:	add    BYTE PTR [rax],al
   140030f9f:	add    BYTE PTR [rdx+0x2b],bh
   140030fa2:	add    eax,DWORD PTR [rax]
   140030fa4:	add    BYTE PTR [rax],al
   140030fa6:	add    BYTE PTR [rax],al
   140030fa8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140030fa9:	sub    eax,DWORD PTR [rbx]
   140030fab:	add    BYTE PTR [rax],al
   140030fad:	add    BYTE PTR [rax],al
   140030faf:	add    al,cl
   140030fb1:	sub    eax,DWORD PTR [rbx]
   140030fb3:	add    BYTE PTR [rax],al
   140030fb5:	add    BYTE PTR [rax],al
   140030fb7:	add    dl,dh
   140030fb9:	sub    eax,DWORD PTR [rbx]
   140030fbb:	add    BYTE PTR [rax],al
   140030fbd:	add    BYTE PTR [rax],al
   140030fbf:	add    BYTE PTR [rdx],dl
   140030fc1:	sub    al,0x3
   140030fc3:	add    BYTE PTR [rax],al
   140030fc5:	add    BYTE PTR [rax],al
   140030fc7:	add    BYTE PTR [rdx],dh
   140030fc9:	sub    al,0x3
   140030fcb:	add    BYTE PTR [rax],al
   140030fcd:	add    BYTE PTR [rax],al
   140030fcf:	add    BYTE PTR [rsp+rbp*1+0x3],bl
   140030fd3:	add    BYTE PTR [rax],al
   140030fd5:	add    BYTE PTR [rax],al
   140030fd7:	add    BYTE PTR [rdx+0x2c],bh
   140030fda:	add    eax,DWORD PTR [rax]
   140030fdc:	add    BYTE PTR [rax],al
   140030fde:	add    BYTE PTR [rax],al
   140030fe0:	xchg   esp,eax
   140030fe1:	sub    al,0x3
   140030fe3:	add    BYTE PTR [rax],al
   140030fe5:	add    BYTE PTR [rax],al
   140030fe7:	add    BYTE PTR [rsp+rbp*1+0x3],dh
   140030fee:	add    BYTE PTR [rax],al
   140030ff0:	(bad)  
   140030ff1:	sub    al,0x3
   140030ff3:	add    BYTE PTR [rax],al
   140030ff5:	add    BYTE PTR [rax],al
   140030ff7:	add    dh,bh
   140030ff9:	sub    al,0x3
   140030ffb:	add    BYTE PTR [rax],al
   140030ffd:	add    BYTE PTR [rax],al
   140030fff:	add    BYTE PTR [rax],ch
   140031001:	sub    eax,0x3
   140031006:	add    BYTE PTR [rax],al
   140031008:	rex.WR sub rax,0x3
   14003100e:	add    BYTE PTR [rax],al
   140031010:	cwde   
   140031011:	and    BYTE PTR [rbx],al
   140031013:	add    BYTE PTR [rax],al
   140031015:	add    BYTE PTR [rax],al
   140031017:	add    BYTE PTR [rbp+rbp*1+0x3],bl
   14003101e:	add    BYTE PTR [rax],al
   140031020:	fsubr  QWORD PTR [rip+0x3]        # 0x140031029
   140031026:	add    BYTE PTR [rax],al
   140031028:	(bad)  
   140031029:	add    eax,DWORD PTR cs:[rax]
   14003102c:	add    BYTE PTR [rax],al
   14003102e:	add    BYTE PTR [rax],al
   140031030:	ds add eax,DWORD PTR cs:[rax]
   140031034:	add    BYTE PTR [rax],al
   140031036:	add    BYTE PTR [rax],al
   140031038:	add    ax,WORD PTR cs:[rax]
   14003103c:	add    BYTE PTR [rax],al
   14003103e:	add    BYTE PTR [rax],al
   140031040:	lods   al,BYTE PTR ds:[rsi]
   140031041:	add    eax,DWORD PTR cs:[rax]
   140031044:	add    BYTE PTR [rax],al
   140031046:	add    BYTE PTR [rax],al
   140031048:	fsubr  DWORD PTR [rsi]
   14003104a:	add    eax,DWORD PTR [rax]
   14003104c:	add    BYTE PTR [rax],al
   14003104e:	add    BYTE PTR [rax],al
   140031050:	(bad)  
   140031051:	add    eax,DWORD PTR cs:[rax]
   140031054:	add    BYTE PTR [rax],al
   140031056:	add    BYTE PTR [rax],al
   140031058:	xor    al,0x2f
   14003105a:	add    eax,DWORD PTR [rax]
   14003105c:	add    BYTE PTR [rax],al
   14003105e:	add    BYTE PTR [rax],al
   140031060:	(bad)  
   140031061:	(bad)  
   140031062:	add    eax,DWORD PTR [rax]
   140031064:	add    BYTE PTR [rax],al
   140031066:	add    BYTE PTR [rax],al
   140031068:	(bad)  
   140031069:	(bad)  
   14003106a:	add    eax,DWORD PTR [rax]
   14003106c:	add    BYTE PTR [rax],al
   14003106e:	add    BYTE PTR [rax],al
   140031070:	in     al,dx
   140031071:	(bad)  
   140031072:	add    eax,DWORD PTR [rax]
   140031074:	add    BYTE PTR [rax],al
   140031076:	add    BYTE PTR [rax],al
   140031078:	adc    BYTE PTR [rax],dh
   14003107a:	add    eax,DWORD PTR [rax]
   14003107c:	add    BYTE PTR [rax],al
   14003107e:	add    BYTE PTR [rax],al
   140031080:	xor    dh,BYTE PTR [rax]
   140031082:	add    eax,DWORD PTR [rax]
   140031084:	add    BYTE PTR [rax],al
   140031086:	add    BYTE PTR [rax],al
   140031088:	push   rsp
   140031089:	xor    BYTE PTR [rbx],al
   14003108b:	add    BYTE PTR [rax],al
   14003108d:	add    BYTE PTR [rax],al
   14003108f:	add    BYTE PTR [rax+rsi*1+0x3],al
   140031096:	add    BYTE PTR [rax],al
   140031098:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140031099:	xor    BYTE PTR [rbx],al
   14003109b:	add    BYTE PTR [rax],al
   14003109d:	add    BYTE PTR [rax],al
   14003109f:	add    dh,cl
   1400310a1:	xor    BYTE PTR [rbx],al
   1400310a3:	add    BYTE PTR [rax],al
   1400310a5:	add    BYTE PTR [rax],al
   1400310a7:	add    dh,ch
   1400310a9:	xor    BYTE PTR [rbx],al
   1400310ab:	add    BYTE PTR [rax],al
   1400310ad:	add    BYTE PTR [rax],al
   1400310af:	add    BYTE PTR [rdx],bl
   1400310b1:	xor    DWORD PTR [rbx],eax
   1400310b3:	add    BYTE PTR [rax],al
   1400310b5:	add    BYTE PTR [rax],al
   1400310b7:	add    BYTE PTR [rcx+rsi*1],dh
   1400310ba:	add    eax,DWORD PTR [rax]
   1400310bc:	add    BYTE PTR [rax],al
   1400310be:	add    BYTE PTR [rax],al
   1400310c0:	pop    rsp
   1400310c1:	xor    DWORD PTR [rbx],eax
   1400310c3:	add    BYTE PTR [rax],al
   1400310c5:	add    BYTE PTR [rax],al
   1400310c7:	add    BYTE PTR [rcx+rsi*1+0x3],bh
   1400310cb:	add    BYTE PTR [rax],al
   1400310cd:	add    BYTE PTR [rax],al
   1400310cf:	add    BYTE PTR [rcx+rsi*1+0x3],bl
   1400310d6:	add    BYTE PTR [rax],al
   1400310d8:	in     al,dx
   1400310d9:	xor    DWORD PTR [rbx],eax
   1400310db:	add    BYTE PTR [rax],al
   1400310dd:	add    BYTE PTR [rax],al
   1400310df:	add    BYTE PTR [rdx],cl
   1400310e1:	xor    al,BYTE PTR [rbx]
   1400310e3:	add    BYTE PTR [rax],al
   1400310e5:	add    BYTE PTR [rax],al
   1400310e7:	add    BYTE PTR [rdx],dh
   1400310e9:	xor    al,BYTE PTR [rbx]
   1400310eb:	add    BYTE PTR [rax],al
   1400310ed:	add    BYTE PTR [rax],al
   1400310ef:	add    BYTE PTR [rsi+0x32],bl
   1400310f2:	add    eax,DWORD PTR [rax]
   1400310f4:	add    BYTE PTR [rax],al
   1400310f6:	add    BYTE PTR [rax],al
   1400310f8:	mov    WORD PTR [rdx],?
   1400310fa:	add    eax,DWORD PTR [rax]
   1400310fc:	add    BYTE PTR [rax],al
   1400310fe:	add    BYTE PTR [rax],al
   140031100:	mov    edx,0x332
   140031105:	add    BYTE PTR [rax],al
   140031107:	add    dl,bl
   140031109:	xor    al,BYTE PTR [rbx]
   14003110b:	add    BYTE PTR [rax],al
   14003110d:	add    BYTE PTR [rax],al
   14003110f:	add    BYTE PTR [rsi],al
   140031111:	xor    eax,DWORD PTR [rbx]
   140031113:	add    BYTE PTR [rax],al
   140031115:	add    BYTE PTR [rax],al
   140031117:	add    BYTE PTR [rsi],dh
   140031119:	xor    eax,DWORD PTR [rbx]
   14003111b:	add    BYTE PTR [rax],al
   14003111d:	add    BYTE PTR [rax],al
   14003111f:	add    BYTE PTR [rbx+rsi*1+0x3],ch
   140031123:	add    BYTE PTR [rax],al
   140031125:	add    BYTE PTR [rax],al
   140031127:	add    BYTE PTR [rbx+rsi*1+0x3],cl
   14003112e:	add    BYTE PTR [rax],al
   140031130:	mov    al,0x33
   140031132:	add    eax,DWORD PTR [rax]
   140031134:	add    BYTE PTR [rax],al
   140031136:	add    BYTE PTR [rax],al
   140031138:	fdiv   DWORD PTR [rbx]
   14003113a:	add    eax,DWORD PTR [rax]
   14003113c:	add    BYTE PTR [rax],al
   14003113e:	add    BYTE PTR [rax],al
   140031140:	sbb    BYTE PTR [rbx+rax*1],dh
   140031143:	add    BYTE PTR [rax],al
   140031145:	add    BYTE PTR [rax],al
   140031147:	add    BYTE PTR [rax+0x34],cl
   14003114a:	add    eax,DWORD PTR [rax]
   14003114c:	add    BYTE PTR [rax],al
   14003114e:	add    BYTE PTR [rax],al
   140031150:	ins    BYTE PTR es:[rdi],dx
   140031151:	xor    al,0x3
   140031153:	add    BYTE PTR [rax],al
   140031155:	add    BYTE PTR [rax],al
   140031157:	add    BYTE PTR [rdx+0x334],dh
   14003115d:	add    BYTE PTR [rax],al
   14003115f:	add    dl,dh
   140031161:	xor    al,0x3
   140031163:	add    BYTE PTR [rax],al
   140031165:	add    BYTE PTR [rax],al
   140031167:	add    BYTE PTR [rdx],ah
   140031169:	xor    eax,0x3
   14003116e:	add    BYTE PTR [rax],al
   140031170:	pop    rax
   140031171:	xor    eax,0x3
   140031176:	add    BYTE PTR [rax],al
   140031178:	jl     0x1400311af
   14003117a:	add    eax,DWORD PTR [rax]
   14003117c:	add    BYTE PTR [rax],al
   14003117e:	add    BYTE PTR [rax],al
   140031180:	xchg   esi,eax
   140031181:	xor    eax,0x3
   140031186:	add    BYTE PTR [rax],al
   140031188:	ret    0x335
   14003118b:	add    BYTE PTR [rax],al
   14003118d:	add    BYTE PTR [rax],al
   14003118f:	add    dh,ah
   140031191:	xor    eax,0x3
   140031196:	add    BYTE PTR [rax],al
   140031198:	sbb    BYTE PTR [rsi],dh
   14003119a:	add    eax,DWORD PTR [rax]
   14003119c:	add    BYTE PTR [rax],al
   14003119e:	add    BYTE PTR [rax],al
   1400311a0:	rex.X
   1400311a1:	add    eax,DWORD PTR ss:[rax]
   1400311a4:	add    BYTE PTR [rax],al
   1400311a6:	add    BYTE PTR [rax],al
   1400311a8:	push   0x336
   1400311ad:	add    BYTE PTR [rax],al
   1400311af:	add    BYTE PTR [rsi+0x336],al
   1400311b5:	add    BYTE PTR [rax],al
   1400311b7:	add    BYTE PTR [rsi+0x336],ch
   1400311bd:	add    BYTE PTR [rax],al
   1400311bf:	add    al,dl
   1400311c1:	add    eax,DWORD PTR ss:[rax]
   1400311c4:	add    BYTE PTR [rax],al
   1400311c6:	add    BYTE PTR [rax],al
   1400311c8:	repnz add eax,DWORD PTR ss:[rax]
   1400311cc:	add    BYTE PTR [rax],al
   1400311ce:	add    BYTE PTR [rax],al
   1400311d0:	rex.X (bad) 
   1400311d2:	add    eax,DWORD PTR [rax]
   1400311d4:	add    BYTE PTR [rax],al
   1400311d6:	add    BYTE PTR [rax],al
   1400311d8:	data16 (bad) 
   1400311da:	add    eax,DWORD PTR [rax]
   1400311dc:	add    BYTE PTR [rax],al
   1400311de:	add    BYTE PTR [rax],al
   1400311e0:	nop
   1400311e1:	(bad)  
   1400311e2:	add    eax,DWORD PTR [rax]
   1400311e4:	add    BYTE PTR [rax],al
   1400311e6:	add    BYTE PTR [rax],al
   1400311e8:	lods   al,BYTE PTR ds:[rsi]
   1400311e9:	(bad)  
   1400311ea:	add    eax,DWORD PTR [rax]
   1400311ec:	add    BYTE PTR [rax],al
   1400311ee:	add    BYTE PTR [rax],al
   1400311f0:	int3   
   1400311f1:	(bad)  
   1400311f2:	add    eax,DWORD PTR [rax]
   1400311f4:	add    BYTE PTR [rax],al
   1400311f6:	add    BYTE PTR [rax],al
   1400311f8:	cld    
   1400311f9:	(bad)  
   1400311fa:	add    eax,DWORD PTR [rax]
   1400311fc:	add    BYTE PTR [rax],al
   1400311fe:	add    BYTE PTR [rax],al
   140031200:	sbb    al,0x38
   140031202:	add    eax,DWORD PTR [rax]
   140031204:	add    BYTE PTR [rax],al
   140031206:	add    BYTE PTR [rax],al
   140031208:	cmp    BYTE PTR [rbx],al
   14003120b:	add    BYTE PTR [rax],al
   14003120d:	add    BYTE PTR [rax],al
   14003120f:	add    BYTE PTR [rax+0x38],ah
   140031212:	add    eax,DWORD PTR [rax]
   140031214:	add    BYTE PTR [rax],al
   140031216:	add    BYTE PTR [rax],al
   140031218:	xchg   BYTE PTR [rax],bh
   14003121a:	add    eax,DWORD PTR [rax]
   14003121c:	add    BYTE PTR [rax],al
   14003121e:	add    BYTE PTR [rax],al
   140031220:	stos   BYTE PTR es:[rdi],al
   140031221:	cmp    BYTE PTR [rbx],al
   140031223:	add    BYTE PTR [rax],al
   140031225:	add    BYTE PTR [rax],al
   140031227:	add    ah,al
   140031229:	cmp    BYTE PTR [rbx],al
   14003122b:	add    BYTE PTR [rax],al
   14003122d:	add    BYTE PTR [rax],al
   14003122f:	add    BYTE PTR [rax],cl
   140031231:	cmp    DWORD PTR [rbx],eax
   140031233:	add    BYTE PTR [rax],al
   140031235:	add    BYTE PTR [rax],al
   140031237:	add    BYTE PTR [rdx+0x39],ah
   14003123a:	add    eax,DWORD PTR [rax]
   14003123c:	add    BYTE PTR [rax],al
   14003123e:	add    BYTE PTR [rax],al
   140031240:	jl     0x14003127b
   140031242:	add    eax,DWORD PTR [rax]
   140031244:	add    BYTE PTR [rax],al
   140031246:	add    BYTE PTR [rax],al
   140031248:	mov    eax,0x339
   14003124d:	add    BYTE PTR [rax],al
   14003124f:	add    ah,dh
   140031251:	cmp    DWORD PTR [rbx],eax
   140031253:	add    BYTE PTR [rax],al
   140031255:	add    BYTE PTR [rax],al
   140031257:	add    BYTE PTR [rdx+rdi*1],dh
   14003125a:	add    eax,DWORD PTR [rax]
   14003125c:	add    BYTE PTR [rax],al
   14003125e:	add    BYTE PTR [rax],al
   140031260:	push   rsp
   140031261:	cmp    al,BYTE PTR [rbx]
   140031263:	add    BYTE PTR [rax],al
   140031265:	add    BYTE PTR [rax],al
   140031267:	add    BYTE PTR [rdx+rdi*1+0x3],dh
   14003126b:	add    BYTE PTR [rax],al
   14003126d:	add    BYTE PTR [rax],al
   14003126f:	add    BYTE PTR [rdx+0x33a],cl
   140031275:	add    BYTE PTR [rax],al
   140031277:	add    BYTE PTR [rdx+0x33a],ch
   14003127d:	add    BYTE PTR [rax],al
   14003127f:	add    ah,cl
   140031281:	cmp    al,BYTE PTR [rbx]
   140031283:	add    BYTE PTR [rax],al
   140031285:	add    BYTE PTR [rax],al
   140031287:	add    dh,ch
   140031289:	cmp    al,BYTE PTR [rbx]
   14003128b:	add    BYTE PTR [rax],al
   14003128d:	add    BYTE PTR [rax],al
   14003128f:	add    BYTE PTR [rsi],cl
   140031291:	cmp    eax,DWORD PTR [rbx]
   140031293:	add    BYTE PTR [rax],al
   140031295:	add    BYTE PTR [rax],al
   140031297:	add    BYTE PTR [rsi+0x3b],al
   14003129a:	add    eax,DWORD PTR [rax]
   14003129c:	add    BYTE PTR [rax],al
   14003129e:	add    BYTE PTR [rax],al
   1400312a0:	push   0x33b
   1400312a5:	add    BYTE PTR [rax],al
   1400312a7:	add    BYTE PTR [rax+0x33b],ah
   1400312ad:	add    BYTE PTR [rax],al
   1400312af:	add    dl,al
   1400312b1:	cmp    eax,DWORD PTR [rbx]
   1400312b3:	add    BYTE PTR [rax],al
   1400312b5:	add    BYTE PTR [rax],al
   1400312b7:	add    dh,bh
   1400312b9:	cmp    eax,DWORD PTR [rbx]
   1400312bb:	add    BYTE PTR [rax],al
   1400312bd:	add    BYTE PTR [rax],al
   1400312bf:	add    BYTE PTR [rdx],bl
   1400312c1:	cmp    al,0x3
   1400312c3:	add    BYTE PTR [rax],al
   1400312c5:	add    BYTE PTR [rax],al
   1400312c7:	add    BYTE PTR [rdx+0x3c],ah
   1400312ca:	add    eax,DWORD PTR [rax]
   1400312cc:	add    BYTE PTR [rax],al
   1400312ce:	add    BYTE PTR [rax],al
   1400312d0:	xchg   esp,eax
   1400312d1:	cmp    al,0x3
   1400312d3:	add    BYTE PTR [rax],al
   1400312d5:	add    BYTE PTR [rax],al
   1400312d7:	add    BYTE PTR [rsp+rdi*1+0x3],dh
   1400312de:	add    BYTE PTR [rax],al
   1400312e0:	fdivr  DWORD PTR [rbx+rax*1]
   1400312e3:	add    BYTE PTR [rax],al
   1400312e5:	add    BYTE PTR [rax],al
   1400312e7:	add    ah,dh
   1400312e9:	cmp    al,0x3
   1400312eb:	add    BYTE PTR [rax],al
   1400312ed:	add    BYTE PTR [rax],al
   1400312ef:	add    BYTE PTR [rax],bl
   1400312f1:	cmp    eax,0x3
   1400312f6:	add    BYTE PTR [rax],al
   1400312f8:	cmp    al,0x3d
   1400312fa:	add    eax,DWORD PTR [rax]
   1400312fc:	add    BYTE PTR [rax],al
   1400312fe:	add    BYTE PTR [rax],al
   140031300:	ins    BYTE PTR es:[rdi],dx
   140031301:	cmp    eax,0x3
   140031306:	add    BYTE PTR [rax],al
   140031308:	mov    BYTE PTR [rip+0x3],bh        # 0x140031311
   14003130e:	add    BYTE PTR [rax],al
   140031310:	mov    eax,0x33d
   140031315:	add    BYTE PTR [rax],al
   140031317:	add    dh,bl
   140031319:	cmp    eax,0x3
   14003131e:	add    BYTE PTR [rax],al
   140031320:	or     al,0x3e
   140031322:	add    eax,DWORD PTR [rax]
   140031324:	add    BYTE PTR [rax],al
   140031326:	add    BYTE PTR [rax],al
   140031328:	xor    bh,BYTE PTR [rsi]
   14003132a:	add    eax,DWORD PTR [rax]
   14003132c:	add    BYTE PTR [rax],al
   14003132e:	add    BYTE PTR [rax],al
   140031330:	push   rdx
   140031331:	add    eax,DWORD PTR ds:[rax]
   140031334:	add    BYTE PTR [rax],al
   140031336:	add    BYTE PTR [rax],al
   140031338:	jl     0x140031378
   14003133a:	add    eax,DWORD PTR [rax]
   14003133c:	add    BYTE PTR [rax],al
   14003133e:	add    BYTE PTR [rax],al
   140031340:	(bad)  
   140031341:	add    eax,DWORD PTR ds:[rax]
   140031344:	add    BYTE PTR [rax],al
   140031346:	add    BYTE PTR [rax],al
   140031348:	mov    esp,0x33e
   14003134d:	add    BYTE PTR [rax],al
   14003134f:	add    al,bl
   140031351:	add    eax,DWORD PTR ds:[rax]
   140031354:	add    BYTE PTR [rax],al
   140031356:	add    BYTE PTR [rax],al
   140031358:	(bad)  
   140031359:	(bad)  
   14003135a:	add    eax,DWORD PTR [rax]
   14003135c:	add    BYTE PTR [rax],al
   14003135e:	add    BYTE PTR [rax],al
   140031360:	rex.X (bad) 
   140031362:	add    eax,DWORD PTR [rax]
   140031364:	add    BYTE PTR [rax],al
   140031366:	add    BYTE PTR [rax],al
   140031368:	push   0x3f
   14003136a:	add    eax,DWORD PTR [rax]
   14003136c:	add    BYTE PTR [rax],al
   14003136e:	add    BYTE PTR [rax],al
   140031370:	xchg   esp,eax
   140031371:	(bad)  
   140031372:	add    eax,DWORD PTR [rax]
   140031374:	add    BYTE PTR [rax],al
   140031376:	add    BYTE PTR [rax],al
   140031378:	sar    BYTE PTR [rdi],0x3
   14003137b:	add    BYTE PTR [rax],al
   14003137d:	add    BYTE PTR [rax],al
   14003137f:	add    dh,ch
   140031381:	(bad)  
   140031382:	add    eax,DWORD PTR [rax]
   140031384:	add    BYTE PTR [rax],al
   140031386:	add    BYTE PTR [rax],al
   140031388:	xor    BYTE PTR [rax+0x3],al
   14003138b:	add    BYTE PTR [rax],al
   14003138d:	add    BYTE PTR [rax],al
   14003138f:	add    BYTE PTR [rax+rax*2+0x3],ch
   140031393:	add    BYTE PTR [rax],al
   140031395:	add    BYTE PTR [rax],al
   140031397:	add    dl,al
   140031399:	rex add eax,DWORD PTR [rax]
   14003139c:	add    BYTE PTR [rax],al
   14003139e:	add    BYTE PTR [rax],al
   1400313a0:	out    0x40,al
   1400313a2:	add    eax,DWORD PTR [rax]
   1400313a4:	add    BYTE PTR [rax],al
   1400313a6:	add    BYTE PTR [rax],al
   1400313a8:	adc    al,0x41
   1400313aa:	add    eax,DWORD PTR [rax]
   1400313ac:	add    BYTE PTR [rax],al
   1400313ae:	add    BYTE PTR [rax],al
   1400313b0:	rex.W
   1400313b1:	add    eax,DWORD PTR [r8]
   1400313b4:	add    BYTE PTR [rax],al
   1400313b6:	add    BYTE PTR [rax],al
   1400313b8:	add    eax,DWORD PTR fs:[r8]
   1400313bc:	add    BYTE PTR [rax],al
   1400313be:	add    BYTE PTR [rax],al
   1400313c0:	nop
   1400313c1:	add    eax,DWORD PTR [r8]
   1400313c4:	add    BYTE PTR [rax],al
   1400313c6:	add    BYTE PTR [rax],al
   1400313c8:	mov    eax,0x341
   1400313cd:	add    BYTE PTR [rax],al
   1400313cf:	add    dh,bl
   1400313d1:	add    eax,DWORD PTR [r8]
   1400313d4:	add    BYTE PTR [rax],al
   1400313d6:	add    BYTE PTR [rax],al
   1400313d8:	add    al,BYTE PTR [rdx+0x3]
   1400313db:	add    BYTE PTR [rax],al
   1400313dd:	add    BYTE PTR [rax],al
   1400313df:	add    BYTE PTR [rdx+rax*2],ch
   1400313e2:	add    eax,DWORD PTR [rax]
   1400313e4:	add    BYTE PTR [rax],al
   1400313e6:	add    BYTE PTR [rax],al
   1400313e8:	jle    0x14003142c
   1400313ea:	add    eax,DWORD PTR [rax]
   1400313ec:	add    BYTE PTR [rax],al
   1400313ee:	add    BYTE PTR [rax],al
   1400313f0:	mov    BYTE PTR [rdx+0x3],0x0
   1400313f4:	add    BYTE PTR [rax],al
   1400313f6:	add    BYTE PTR [rax],al
   1400313f8:	in     al,dx
   1400313f9:	rex.X add eax,DWORD PTR [rax]
   1400313fc:	add    BYTE PTR [rax],al
   1400313fe:	add    BYTE PTR [rax],al
   140031400:	sbb    al,0x43
   140031402:	add    eax,DWORD PTR [rax]
   140031404:	add    BYTE PTR [rax],al
   140031406:	add    BYTE PTR [rax],al
   140031408:	rex.R
   140031409:	rex.XB add eax,DWORD PTR [r8]
   14003140c:	add    BYTE PTR [rax],al
   14003140e:	add    BYTE PTR [rax],al
   140031410:	rex.XB add ax,WORD PTR [r8]
   140031414:	add    BYTE PTR [rax],al
   140031416:	add    BYTE PTR [rax],al
   140031418:	je     0x14003143a
   14003141a:	add    eax,DWORD PTR [rax]
   14003141c:	add    BYTE PTR [rax],al
   14003141e:	add    BYTE PTR [rax],al
   140031420:	sub    al,0x20
   140031422:	add    eax,DWORD PTR [rax]
   140031424:	add    BYTE PTR [rax],al
   140031426:	add    BYTE PTR [rax],al
   140031428:	cli    
   140031429:	(bad)  
   14003142a:	add    eax,DWORD PTR [rax]
   14003142c:	add    BYTE PTR [rax],al
   14003142e:	add    BYTE PTR [rax],al
   140031430:	rcr    BYTE PTR [rdi],cl
   140031432:	add    eax,DWORD PTR [rax]
   140031434:	add    BYTE PTR [rax],al
   140031436:	add    BYTE PTR [rax],al
   140031438:	lods   al,BYTE PTR ds:[rsi]
   140031439:	(bad)  
   14003143a:	add    eax,DWORD PTR [rax]
   14003143c:	add    BYTE PTR [rax],al
   14003143e:	add    BYTE PTR [rax],al
   140031440:	js     0x140031461
   140031442:	add    eax,DWORD PTR [rax]
   140031444:	add    BYTE PTR [rax],al
   140031446:	add    BYTE PTR [rax],al
   140031448:	push   rax
   140031449:	(bad)  
   14003144a:	add    eax,DWORD PTR [rax]
   14003144c:	add    BYTE PTR [rax],al
   14003144e:	add    BYTE PTR [rax],al
   140031450:	and    al,0x1f
   140031452:	add    eax,DWORD PTR [rax]
   140031454:	add    BYTE PTR [rax],al
   140031456:	add    BYTE PTR [rax],al
   140031458:	add    al,0x1f
   14003145a:	add    eax,DWORD PTR [rax]
   14003145c:	add    BYTE PTR [rax],al
   14003145e:	add    BYTE PTR [rax],al
   140031460:	ficomp WORD PTR [rsi]
   140031462:	add    eax,DWORD PTR [rax]
   140031464:	add    BYTE PTR [rax],al
   140031466:	add    BYTE PTR [rax],al
   140031468:	enter  0x31e,0x0
   14003146c:	add    BYTE PTR [rax],al
   14003146e:	add    BYTE PTR [rax],al
   140031470:	mov    dl,0x1e
   140031472:	add    eax,DWORD PTR [rax]
   140031474:	add    BYTE PTR [rax],al
   140031476:	add    BYTE PTR [rax],al
   140031478:	xchg   esi,eax
   140031479:	(bad)  
   14003147a:	add    eax,DWORD PTR [rax]
   14003147c:	add    BYTE PTR [rax],al
   14003147e:	add    BYTE PTR [rax],al
   140031480:	pop    rsi
   140031481:	(bad)  
   140031482:	add    eax,DWORD PTR [rax]
   140031484:	add    BYTE PTR [rax],al
   140031486:	add    BYTE PTR [rax],al
   140031488:	cmp    al,0x1e
   14003148a:	add    eax,DWORD PTR [rax]
   14003148c:	add    BYTE PTR [rax],al
   14003148e:	add    BYTE PTR [rax],al
   140031490:	out    dx,al
   140031491:	sbb    eax,0x3
   140031496:	add    BYTE PTR [rax],al
   140031498:	(bad)  
   140031499:	sbb    eax,0x3
   14003149e:	add    BYTE PTR [rax],al
   1400314a0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400314a1:	sbb    eax,0x3
   1400314a6:	add    BYTE PTR [rax],al
   1400314a8:	je     0x1400314d7
   1400314aa:	add    eax,DWORD PTR [rax]
	...
   1400314b8:	pop    rsp
   1400314b9:	sbb    eax,0x3
   1400314be:	add    BYTE PTR [rax],al
   1400314c0:	cs sbb eax,0x3
   1400314c6:	add    BYTE PTR [rax],al
   1400314c8:	(bad)  
   1400314c9:	sbb    eax,0x3
   1400314ce:	add    BYTE PTR [rax],al
   1400314d0:	(bad)  
   1400314d1:	sbb    al,0x3
   1400314d3:	add    BYTE PTR [rax],al
   1400314d5:	add    BYTE PTR [rax],al
   1400314d7:	add    BYTE PTR [rdx+0x31c],al
   1400314dd:	add    BYTE PTR [rax],al
   1400314df:	add    BYTE PTR [rax+0x1c],cl
   1400314e2:	add    eax,DWORD PTR [rax]
   1400314e4:	add    BYTE PTR [rax],al
   1400314e6:	add    BYTE PTR [rax],al
   1400314e8:	sub    BYTE PTR [rbx+rax*1],bl
   1400314eb:	add    BYTE PTR [rax],al
   1400314ed:	add    BYTE PTR [rax],al
   1400314ef:	add    BYTE PTR [rdx],cl
   1400314f1:	sbb    al,0x3
   1400314f3:	add    BYTE PTR [rax],al
   1400314f5:	add    BYTE PTR [rax],al
   1400314f7:	add    al,bl
   1400314f9:	sbb    eax,DWORD PTR [rbx]
   1400314fb:	add    BYTE PTR [rax],al
   1400314fd:	add    BYTE PTR [rax],al
   1400314ff:	add    BYTE PTR [rbx+rbx*1+0x3],ch
   140031506:	add    BYTE PTR [rax],al
   140031508:	(bad)  
   140031509:	sbb    eax,DWORD PTR [rbx]
   14003150b:	add    BYTE PTR [rax],al
   14003150d:	add    BYTE PTR [rax],al
   14003150f:	add    BYTE PTR [rax+0x1b],ah
   140031512:	add    eax,DWORD PTR [rax]
   140031514:	add    BYTE PTR [rax],al
   140031516:	add    BYTE PTR [rax],al
   140031518:	(bad)  
   140031519:	sbb    eax,DWORD PTR [rbx]
   14003151b:	add    BYTE PTR [rax],al
   14003151d:	add    BYTE PTR [rax],al
   14003151f:	add    ah,bl
   140031521:	sbb    al,BYTE PTR [rbx]
   140031523:	add    BYTE PTR [rax],al
   140031525:	add    BYTE PTR [rax],al
   140031527:	add    BYTE PTR [rdx+rbx*1+0x3],bl
   14003152e:	add    BYTE PTR [rax],al
   140031530:	data16 sbb al,BYTE PTR [rbx]
   140031533:	add    BYTE PTR [rax],al
   140031535:	add    BYTE PTR [rax],al
   140031537:	add    BYTE PTR [rdx+rbx*1],bh
   14003153a:	add    eax,DWORD PTR [rax]
   14003153c:	add    BYTE PTR [rax],al
   14003153e:	add    BYTE PTR [rax],al
   140031540:	adc    BYTE PTR [rdx],bl
   140031542:	add    eax,DWORD PTR [rax]
   140031544:	add    BYTE PTR [rax],al
   140031546:	add    BYTE PTR [rax],al
   140031548:	fcomp  DWORD PTR [rcx]
   14003154a:	add    eax,DWORD PTR [rax]
   14003154c:	add    BYTE PTR [rax],al
   14003154e:	add    BYTE PTR [rax],al
   140031550:	sahf   
   140031551:	sbb    DWORD PTR [rbx],eax
   140031553:	add    BYTE PTR [rax],al
   140031555:	add    BYTE PTR [rax],al
   140031557:	add    BYTE PTR [rsi+0x19],dh
   14003155a:	add    eax,DWORD PTR [rax]
   14003155c:	add    BYTE PTR [rax],al
   14003155e:	add    BYTE PTR [rax],al
   140031560:	sbb    DWORD PTR ds:[rbx],eax
   140031563:	add    BYTE PTR [rax],al
   140031565:	add    BYTE PTR [rax],al
   140031567:	add    dl,ch
   140031569:	sbb    BYTE PTR [rbx],al
   14003156b:	add    BYTE PTR [rax],al
   14003156d:	add    BYTE PTR [rax],al
   14003156f:	add    BYTE PTR [rsi+0x318],ah
   140031575:	add    BYTE PTR [rax],al
   140031577:	add    BYTE PTR [rdx+0x18],ch
   14003157a:	add    eax,DWORD PTR [rax]
   14003157c:	add    BYTE PTR [rax],al
   14003157e:	add    BYTE PTR [rax],al
   140031580:	xor    al,0x18
   140031582:	add    eax,DWORD PTR [rax]
   140031584:	add    BYTE PTR [rax],al
   140031586:	add    BYTE PTR [rax],al
   140031588:	clc    
   140031589:	(bad)  
   14003158a:	add    eax,DWORD PTR [rax]
   14003158c:	add    BYTE PTR [rax],al
   14003158e:	add    BYTE PTR [rax],al
   140031590:	mov    ah,0x17
   140031592:	add    eax,DWORD PTR [rax]
   140031594:	add    BYTE PTR [rax],al
   140031596:	add    BYTE PTR [rax],al
   140031598:	jb     0x1400315b1
   14003159a:	add    eax,DWORD PTR [rax]
   14003159c:	add    BYTE PTR [rax],al
   14003159e:	add    BYTE PTR [rax],al
   1400315a0:	xor    al,0x17
   1400315a2:	add    eax,DWORD PTR [rax]
   1400315a4:	add    BYTE PTR [rax],al
   1400315a6:	add    BYTE PTR [rax],al
   1400315a8:	repnz (bad) 
   1400315aa:	add    eax,DWORD PTR [rax]
   1400315ac:	add    BYTE PTR [rax],al
   1400315ae:	add    BYTE PTR [rax],al
   1400315b0:	(bad)  
   1400315b1:	(bad)  
   1400315b2:	add    eax,DWORD PTR [rax]
   1400315b4:	add    BYTE PTR [rax],al
   1400315b6:	add    BYTE PTR [rax],al
   1400315b8:	adc    BYTE PTR [rsi],0x3
   1400315bb:	add    BYTE PTR [rax],al
   1400315bd:	add    BYTE PTR [rax],al
   1400315bf:	add    BYTE PTR [rdx+0x16],al
   1400315c2:	add    eax,DWORD PTR [rax]
   1400315c4:	add    BYTE PTR [rax],al
   1400315c6:	add    BYTE PTR [rax],al
   1400315c8:	add    dl,BYTE PTR [rsi]
   1400315ca:	add    eax,DWORD PTR [rax]
   1400315cc:	add    BYTE PTR [rax],al
   1400315ce:	add    BYTE PTR [rax],al
   1400315d0:	loopne 0x1400315e7
   1400315d2:	add    eax,DWORD PTR [rax]
	...
   1400315e0:	cmp    eax,0x303f3f00
   1400315e5:	push   rcx
   1400315e6:	pop    rax
   1400315e7:	ins    DWORD PTR es:[rdi],dx
   1400315e8:	ins    BYTE PTR es:[rdi],dx
   1400315e9:	rex.R
   1400315ea:	gs data16 (bad) 
   1400315ed:	jne    0x14003165b
   1400315ef:	je     0x140031639
   1400315f1:	(bad)  
   1400315f2:	outs   dx,BYTE PTR ds:[rsi]
   1400315f3:	fs ins BYTE PTR es:[rdi],dx
   1400315f5:	gs jb  0x140031638
   1400315f8:	rex push rcx
   1400315fa:	rex.RB
   1400315fb:	rex.B
   1400315fc:	rex.B
   1400315fd:	rex pop rax
   1400315ff:	pop    rdx
   140031600:	add    BYTE PTR [rax],al
   140031602:	mov    ecx,0x61773f01
   140031607:	jb     0x140031677
   140031609:	imul   ebp,DWORD PTR [rsi+0x67],0x6d585140
   140031610:	ins    BYTE PTR es:[rdi],dx
   140031611:	rex.R
   140031612:	gs data16 (bad) 
   140031615:	jne    0x140031683
   140031617:	je     0x140031661
   140031619:	(bad)  
   14003161a:	outs   dx,BYTE PTR ds:[rsi]
   14003161b:	fs ins BYTE PTR es:[rdi],dx
   14003161d:	gs jb  0x140031660
   140031620:	rex push rbp
   140031622:	rex.RB
   140031623:	rex.B
   140031624:	pop    r15
   140031626:	rex.WRX
   140031627:	rex.B
   140031628:	rex.RB
   140031629:	rex.X push rsi
   14003162b:	push   rcx
   14003162c:	pop    rax
   14003162d:	ins    DWORD PTR es:[rdi],dx
   14003162e:	ins    BYTE PTR es:[rdi],dx
   14003162f:	push   rax
   140031630:	(bad)  
   140031631:	jb     0x1400316a6
   140031633:	gs rex.RB js 0x14003169a
   140031637:	gs jo  0x1400316ae
   14003163a:	imul   ebp,DWORD PTR [rdi+0x6e],0x5a404040
   140031641:	add    cl,ah
   140031643:	add    BYTE PTR [rdi],bh
   140031645:	gs jb  0x1400316ba
   140031648:	outs   dx,DWORD PTR ds:[rsi]
   140031649:	jb     0x14003168b
   14003164b:	push   rcx
   14003164c:	pop    rax
   14003164d:	ins    DWORD PTR es:[rdi],dx
   14003164e:	ins    BYTE PTR es:[rdi],dx
   14003164f:	rex.R
   140031650:	gs data16 (bad) 
   140031653:	jne    0x1400316c1
   140031655:	je     0x14003169f
   140031657:	(bad)  
   140031658:	outs   dx,BYTE PTR ds:[rsi]
   140031659:	fs ins BYTE PTR es:[rdi],dx
   14003165b:	gs jb  0x14003169e
   14003165e:	rex push rbp
   140031660:	rex.RB
   140031661:	rex.B
   140031662:	pop    r15
   140031664:	rex.WRX
   140031665:	rex.B
   140031666:	rex.RB
   140031667:	rex.X push rsi
   140031669:	push   rcx
   14003166a:	pop    rax
   14003166b:	ins    DWORD PTR es:[rdi],dx
   14003166c:	ins    BYTE PTR es:[rdi],dx
   14003166d:	push   rax
   14003166e:	(bad)  
   14003166f:	jb     0x1400316e4
   140031671:	gs rex.RB js 0x1400316d8
   140031675:	gs jo  0x1400316ec
   140031678:	imul   ebp,DWORD PTR [rdi+0x6e],0x5a404040
   14003167f:	add    BYTE PTR [rbp+0x1],bh
   140031682:	(bad)  
   140031683:	jae    0x1400316ea
   140031685:	je     0x1400316cb
   140031687:	outs   dx,DWORD PTR ds:[rsi]
   140031688:	movsxd esi,DWORD PTR [rbp+0x6d]
   14003168b:	outs   dx,BYTE PTR gs:[rsi]
   14003168d:	je     0x1400316db
   14003168f:	outs   dx,DWORD PTR ds:[rsi]
   140031690:	movsxd esp,DWORD PTR [rcx+0x74]
   140031693:	outs   dx,DWORD PTR ds:[rsi]
   140031694:	jb     0x1400316d6
   140031696:	push   rcx
   140031697:	pop    rax
   140031698:	ins    DWORD PTR es:[rdi],dx
   140031699:	ins    BYTE PTR es:[rdi],dx
   14003169a:	rex.R
   14003169b:	gs data16 (bad) 
   14003169e:	jne    0x14003170c
   1400316a0:	je     0x1400316ea
   1400316a2:	(bad)  
   1400316a3:	outs   dx,BYTE PTR ds:[rsi]
   1400316a4:	fs ins BYTE PTR es:[rdi],dx
   1400316a6:	gs jb  0x1400316e9
   1400316a9:	rex push rbp
   1400316ab:	rex.RB
   1400316ac:	rex.B
   1400316ad:	pop    r8
   1400316af:	push   rax
   1400316b0:	rex.RB
   1400316b1:	push   r14
   1400316b3:	push   rcx
   1400316b4:	pop    rax
   1400316b5:	ins    DWORD PTR es:[rdi],dx
   1400316b6:	ins    BYTE PTR es:[rdi],dx
   1400316b7:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400316b9:	movsxd esp,DWORD PTR [rcx+0x74]
   1400316bc:	outs   dx,DWORD PTR ds:[rsi]
   1400316bd:	jb     0x1400316ff
   1400316bf:	rex
   1400316c0:	rex pop rdx
   1400316c2:	add    BYTE PTR [rax],al
   1400316c4:	xchg   ebx,eax
   1400316c5:	add    DWORD PTR [rdi],edi
   1400316c7:	jae    0x14003173d
   1400316c9:	(bad)  
   1400316ca:	jb     0x140031740
   1400316cc:	rex.R outs dx,DWORD PTR ds:[rsi]
   1400316ce:	movsxd esi,DWORD PTR [rbp+0x6d]
   1400316d1:	outs   dx,BYTE PTR gs:[rsi]
   1400316d3:	je     0x140031715
   1400316d5:	push   rcx
   1400316d6:	pop    rax
   1400316d7:	ins    DWORD PTR es:[rdi],dx
   1400316d8:	ins    BYTE PTR es:[rdi],dx
   1400316d9:	rex.R
   1400316da:	gs data16 (bad) 
   1400316dd:	jne    0x14003174b
   1400316df:	je     0x140031729
   1400316e1:	(bad)  
   1400316e2:	outs   dx,BYTE PTR ds:[rsi]
   1400316e3:	fs ins BYTE PTR es:[rdi],dx
   1400316e5:	gs jb  0x140031728
   1400316e8:	rex push rbp
   1400316ea:	rex.RB
   1400316eb:	rex.B
   1400316ec:	pop    r15
   1400316ee:	rex.WRX pop rax
   1400316f0:	pop    rdx
   1400316f1:	add    BYTE PTR [rsi+0x74733f01],dl
   1400316f7:	(bad)  
   1400316f8:	jb     0x14003176e
   1400316fa:	push   rax
   1400316fb:	jb     0x140031762
   1400316fd:	imul   di,WORD PTR [rax+0x4d],0x7061
   140031703:	jo     0x14003176e
   140031705:	outs   dx,BYTE PTR ds:[rsi]
   140031706:	addr32 rex push rcx
   140031709:	pop    rax
   14003170a:	ins    DWORD PTR es:[rdi],dx
   14003170b:	ins    BYTE PTR es:[rdi],dx
   14003170c:	rex.R
   14003170d:	gs data16 (bad) 
   140031710:	jne    0x14003177e
   140031712:	je     0x14003175c
   140031714:	(bad)  
   140031715:	outs   dx,BYTE PTR ds:[rsi]
   140031716:	fs ins BYTE PTR es:[rdi],dx
   140031718:	gs jb  0x14003175b
   14003171b:	rex push rbp
   14003171d:	rex.RB
   14003171e:	rex.B
   14003171f:	pop    r15
   140031721:	rex.WRX
   140031722:	rex.B
   140031723:	rex.RB
   140031724:	rex.X push rsi
   140031726:	push   rcx
   140031727:	push   rbx
   140031728:	je     0x14003179c
   14003172a:	imul   ebp,DWORD PTR [rsi+0x67],0x40304040
   140031731:	pop    rdx
   140031732:	add    BYTE PTR [rax],al
   140031734:	fiadd  WORD PTR [rax]
   140031736:	(bad)  
   140031737:	outs   dx,BYTE PTR gs:[rsi]
   140031739:	fs push rax
   14003173b:	jb     0x1400317a2
   14003173d:	imul   di,WORD PTR [rax+0x4d],0x7061
   140031743:	jo     0x1400317ae
   140031745:	outs   dx,BYTE PTR ds:[rsi]
   140031746:	addr32 rex push rcx
   140031749:	pop    rax
   14003174a:	ins    DWORD PTR es:[rdi],dx
   14003174b:	ins    BYTE PTR es:[rdi],dx
   14003174c:	rex.R
   14003174d:	gs data16 (bad) 
   140031750:	jne    0x1400317be
   140031752:	je     0x14003179c
   140031754:	(bad)  
   140031755:	outs   dx,BYTE PTR ds:[rsi]
   140031756:	fs ins BYTE PTR es:[rdi],dx
   140031758:	gs jb  0x14003179b
   14003175b:	rex push rbp
   14003175d:	rex.RB
   14003175e:	rex.B
   14003175f:	pop    r15
   140031761:	rex.WRX
   140031762:	rex.B
   140031763:	rex.RB
   140031764:	rex.X push rsi
   140031766:	push   rcx
   140031767:	push   rbx
   140031768:	je     0x1400317dc
   14003176a:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   140031771:	add    dl,dh
   140031773:	add    BYTE PTR [rdi],bh
   140031775:	imul   esp,DWORD PTR [rdi+0x6e],0x6261726f
   14003177c:	ins    BYTE PTR es:[rdi],dx
   14003177d:	gs push rdi
   14003177f:	push   0x73657469
   140031784:	jo     0x1400317e7
   140031786:	movsxd esp,DWORD PTR [rbp+0x40]
   140031789:	push   rcx
   14003178a:	pop    rax
   14003178b:	ins    DWORD PTR es:[rdi],dx
   14003178c:	ins    BYTE PTR es:[rdi],dx
   14003178d:	rex.R
   14003178e:	gs data16 (bad) 
   140031791:	jne    0x1400317ff
   140031793:	je     0x1400317dd
   140031795:	(bad)  
   140031796:	outs   dx,BYTE PTR ds:[rsi]
   140031797:	fs ins BYTE PTR es:[rdi],dx
   140031799:	gs jb  0x1400317dc
   14003179c:	rex push rbp
   14003179e:	rex.RB
   14003179f:	rex.B
   1400317a0:	pop    r15
   1400317a2:	rex.WRX
   1400317a3:	rex.B
   1400317a4:	rex.RB
   1400317a5:	rex.X push rsi
   1400317a7:	push   rcx
   1400317a8:	push   rbx
   1400317a9:	je     0x14003181d
   1400317ab:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   1400317b2:	add    BYTE PTR [rax],al
   1400317b4:	rex.WXB add QWORD PTR [r15],rdi
   1400317b7:	jo     0x14003182b
   1400317b9:	outs   dx,DWORD PTR ds:[rsi]
   1400317ba:	movsxd esp,DWORD PTR [rbp+0x73]
   1400317bd:	jae    0x140031828
   1400317bf:	outs   dx,BYTE PTR ds:[rsi]
   1400317c0:	rex.WB outs dx,BYTE PTR ds:[esi]
   1400317c3:	jae    0x140031839
   1400317c5:	jb     0x14003183c
   1400317c7:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   1400317cb:	outs   dx,BYTE PTR ds:[rsi]
   1400317cc:	rex push rcx
   1400317ce:	pop    rax
   1400317cf:	ins    DWORD PTR es:[rdi],dx
   1400317d0:	ins    BYTE PTR es:[rdi],dx
   1400317d1:	rex.R
   1400317d2:	gs data16 (bad) 
   1400317d5:	jne    0x140031843
   1400317d7:	je     0x140031821
   1400317d9:	(bad)  
   1400317da:	outs   dx,BYTE PTR ds:[rsi]
   1400317db:	fs ins BYTE PTR es:[rdi],dx
   1400317dd:	gs jb  0x140031820
   1400317e0:	rex push rbp
   1400317e2:	rex.RB
   1400317e3:	rex.B
   1400317e4:	pop    r15
   1400317e6:	rex.WRX
   1400317e7:	rex.B
   1400317e8:	rex.RB
   1400317e9:	rex.X push rsi
   1400317eb:	push   rcx
   1400317ec:	push   rbx
   1400317ed:	je     0x140031861
   1400317ef:	imul   ebp,DWORD PTR [rsi+0x67],0x40304040
   1400317f6:	pop    rdx
   1400317f7:	add    BYTE PTR [rbp+0x6b733f01],cl
   1400317fd:	imul   esi,DWORD PTR [rax+0x70],0x6e456465
   140031804:	je     0x14003186f
   140031806:	je     0x140031881
   140031808:	rex push rcx
   14003180a:	pop    rax
   14003180b:	ins    DWORD PTR es:[rdi],dx
   14003180c:	ins    BYTE PTR es:[rdi],dx
   14003180d:	rex.R
   14003180e:	gs data16 (bad) 
   140031811:	jne    0x14003187f
   140031813:	je     0x14003185d
   140031815:	(bad)  
   140031816:	outs   dx,BYTE PTR ds:[rsi]
   140031817:	fs ins BYTE PTR es:[rdi],dx
   140031819:	gs jb  0x14003185c
   14003181c:	rex push rbp
   14003181e:	rex.RB
   14003181f:	rex.B
   140031820:	pop    r15
   140031822:	rex.WRX
   140031823:	rex.B
   140031824:	rex.RB
   140031825:	rex.X push rsi
   140031827:	push   rcx
   140031828:	push   rbx
   140031829:	je     0x14003189d
   14003182b:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   140031832:	add    BYTE PTR [rax],al
   140031834:	jrcxz  0x140031836
   140031836:	(bad)  
   140031837:	gs jb  0x1400318ac
   14003183a:	outs   dx,DWORD PTR ds:[rsi]
   14003183b:	jb     0x140031890
   14003183d:	je     0x1400318b1
   14003183f:	imul   ebp,DWORD PTR [rsi+0x67],0x6d585140
   140031846:	ins    BYTE PTR es:[rdi],dx
   140031847:	rex.R
   140031848:	gs data16 (bad) 
   14003184b:	jne    0x1400318b9
   14003184d:	je     0x140031897
   14003184f:	(bad)  
   140031850:	outs   dx,BYTE PTR ds:[rsi]
   140031851:	fs ins BYTE PTR es:[rdi],dx
   140031853:	gs jb  0x140031896
   140031856:	rex push rbp
   140031858:	rex.RB
   140031859:	rex.X
   14003185a:	rex.B (bad) 
   14003185c:	push   r14
   14003185e:	push   rcx
   14003185f:	push   rbx
   140031860:	je     0x1400318d4
   140031862:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   140031869:	add    BYTE PTR [rcx],bh
   14003186b:	add    DWORD PTR [rdi],edi
   14003186d:	outs   dx,BYTE PTR ds:[rsi]
   14003186e:	outs   dx,DWORD PTR ds:[rsi]
   14003186f:	je     0x1400318d2
   140031871:	je     0x1400318dc
   140031873:	outs   dx,DWORD PTR ds:[rsi]
   140031874:	outs   dx,BYTE PTR ds:[rsi]
   140031875:	rex.R
   140031876:	movsxd ebp,DWORD PTR gs:[rax+rax*2+0x51]
   14003187b:	pop    rax
   14003187c:	ins    DWORD PTR es:[rdi],dx
   14003187d:	ins    BYTE PTR es:[rdi],dx
   14003187e:	rex.R
   14003187f:	gs data16 (bad) 
   140031882:	jne    0x1400318f0
   140031884:	je     0x1400318ce
   140031886:	(bad)  
   140031887:	outs   dx,BYTE PTR ds:[rsi]
   140031888:	fs ins BYTE PTR es:[rdi],dx
   14003188a:	gs jb  0x1400318cd
   14003188d:	rex push rbp
   14003188f:	rex.RB
   140031890:	rex.B
   140031891:	pop    r15
   140031893:	rex.WRX
   140031894:	rex.B
   140031895:	rex.RB
   140031896:	rex.X push rsi
   140031898:	push   rcx
   140031899:	push   rbx
   14003189a:	je     0x14003190e
   14003189c:	imul   ebp,DWORD PTR [rsi+0x67],0x30304040
   1400318a3:	rex pop rdx
   1400318a5:	add    BYTE PTR [rcx+0x6e753f01],dh
   1400318ab:	jo     0x14003190e
   1400318ad:	jb     0x140031922
   1400318af:	gs rex.RB outs dx,BYTE PTR fs:[rsi]
   1400318b3:	je     0x14003191e
   1400318b5:	je     0x140031930
   1400318b7:	rex.R
   1400318b8:	movsxd ebp,DWORD PTR gs:[rax+rax*2+0x51]
   1400318bd:	pop    rax
   1400318be:	ins    DWORD PTR es:[rdi],dx
   1400318bf:	ins    BYTE PTR es:[rdi],dx
   1400318c0:	rex.R
   1400318c1:	gs data16 (bad) 
   1400318c4:	jne    0x140031932
   1400318c6:	je     0x140031910
   1400318c8:	(bad)  
   1400318c9:	outs   dx,BYTE PTR ds:[rsi]
   1400318ca:	fs ins BYTE PTR es:[rdi],dx
   1400318cc:	gs jb  0x14003190f
   1400318cf:	rex push rbp
   1400318d1:	rex.RB
   1400318d2:	rex.B
   1400318d3:	pop    r15
   1400318d5:	rex.WRX
   1400318d6:	rex.B
   1400318d7:	rex.RB
   1400318d8:	rex.X push rsi
   1400318da:	push   rcx
   1400318db:	push   rbx
   1400318dc:	je     0x140031950
   1400318de:	imul   ebp,DWORD PTR [rsi+0x67],0x30304040
   1400318e5:	xor    BYTE PTR [rax+0x5a],al
   1400318e8:	add    BYTE PTR [rax],al
   1400318ea:	pop    rbp
   1400318eb:	add    DWORD PTR [rdi],edi
   1400318ed:	jb     0x140031954
   1400318ef:	jae    0x140031960
   1400318f1:	ins    BYTE PTR es:[rdi],dx
   1400318f2:	jbe    0x140031959
   1400318f4:	rex.RB outs dx,BYTE PTR ds:[rsi]
   1400318f6:	je     0x140031961
   1400318f8:	je     0x140031973
   1400318fa:	rex push rcx
   1400318fc:	pop    rax
   1400318fd:	ins    DWORD PTR es:[rdi],dx
   1400318fe:	ins    BYTE PTR es:[rdi],dx
   1400318ff:	rex.R
   140031900:	gs data16 (bad) 
   140031903:	jne    0x140031971
   140031905:	je     0x14003194f
   140031907:	(bad)  
   140031908:	outs   dx,BYTE PTR ds:[rsi]
   140031909:	fs ins BYTE PTR es:[rdi],dx
   14003190b:	gs jb  0x14003194e
   14003190e:	rex push rbp
   140031910:	rex.RB
   140031911:	rex.B
   140031912:	pop    r15
   140031914:	rex.WRX
   140031915:	rex.B
   140031916:	rex.RB
   140031917:	rex.X push rsi
   140031919:	push   rcx
   14003191a:	push   rbx
   14003191b:	je     0x14003198f
   14003191d:	imul   ebp,DWORD PTR [rsi+0x67],0x41304040
   140031924:	rex.RB
   140031925:	push   r8
   140031927:	rex.RB
   140031928:	push   r14
   14003192a:	push   rcx
   14003192b:	pop    rax
   14003192c:	ins    DWORD PTR es:[rdi],dx
   14003192d:	ins    BYTE PTR es:[rdi],dx
   14003192e:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140031930:	jo     0x1400319a7
   140031932:	je     0x140031987
   140031934:	outs   dx,DWORD PTR ds:[rsi]
   140031935:	jne    0x1400319a9
   140031937:	movsxd esp,DWORD PTR [rbp+0x40]
   14003193a:	rex
   14003193b:	rex pop rdx
   14003193d:	add    BYTE PTR [rdx+0x74733f01],dl
   140031943:	(bad)  
   140031944:	jb     0x1400319ba
   140031946:	rex.R push rsp
   140031948:	rex.R
   140031949:	rex push rcx
   14003194b:	pop    rax
   14003194c:	ins    DWORD PTR es:[rdi],dx
   14003194d:	ins    BYTE PTR es:[rdi],dx
   14003194e:	rex.R
   14003194f:	gs data16 (bad) 
   140031952:	jne    0x1400319c0
   140031954:	je     0x14003199e
   140031956:	(bad)  
   140031957:	outs   dx,BYTE PTR ds:[rsi]
   140031958:	fs ins BYTE PTR es:[rdi],dx
   14003195a:	gs jb  0x14003199d
   14003195d:	rex push rbp
   14003195f:	rex.RB
   140031960:	rex.B
   140031961:	pop    r15
   140031963:	rex.WRX
   140031964:	rex.B
   140031965:	rex.RB
   140031966:	rex.X push rsi
   140031968:	push   rcx
   140031969:	push   rbx
   14003196a:	je     0x1400319de
   14003196c:	imul   ebp,DWORD PTR [rsi+0x67],0x30304040
   140031973:	rex pop rdx
   140031975:	add    dl,bl
   140031977:	add    BYTE PTR [rdi],bh
   140031979:	outs   dx,BYTE PTR gs:[rsi]
   14003197b:	fs rex.R push rsp
   14003197e:	rex.R
   14003197f:	rex push rcx
   140031981:	pop    rax
   140031982:	ins    DWORD PTR es:[rdi],dx
   140031983:	ins    BYTE PTR es:[rdi],dx
   140031984:	rex.R
   140031985:	gs data16 (bad) 
   140031988:	jne    0x1400319f6
   14003198a:	je     0x1400319d4
   14003198c:	(bad)  
   14003198d:	outs   dx,BYTE PTR ds:[rsi]
   14003198e:	fs ins BYTE PTR es:[rdi],dx
   140031990:	gs jb  0x1400319d3
   140031993:	rex push rbp
   140031995:	rex.RB
   140031996:	rex.B
   140031997:	pop    r15
   140031999:	rex.WRX pop rax
   14003199b:	pop    rdx
   14003199c:	add    BYTE PTR [rax],al
   14003199e:	xchg   ebp,eax
   14003199f:	add    DWORD PTR [rdi],edi
   1400319a1:	jae    0x140031a17
   1400319a3:	(bad)  
   1400319a4:	jb     0x140031a1a
   1400319a6:	rex.RB outs dx,BYTE PTR ds:[rsi]
   1400319a8:	je     0x140031a13
   1400319aa:	je     0x140031a25
   1400319ac:	rex push rcx
   1400319ae:	pop    rax
   1400319af:	ins    DWORD PTR es:[rdi],dx
   1400319b0:	ins    BYTE PTR es:[rdi],dx
   1400319b1:	rex.R
   1400319b2:	gs data16 (bad) 
   1400319b5:	jne    0x140031a23
   1400319b7:	je     0x140031a01
   1400319b9:	(bad)  
   1400319ba:	outs   dx,BYTE PTR ds:[rsi]
   1400319bb:	fs ins BYTE PTR es:[rdi],dx
   1400319bd:	gs jb  0x140031a00
   1400319c0:	rex push rbp
   1400319c2:	rex.RB
   1400319c3:	rex.B
   1400319c4:	pop    r15
   1400319c6:	rex.WRX
   1400319c7:	rex.B
   1400319c8:	rex.RB
   1400319c9:	rex.X push rsi
   1400319cb:	push   rcx
   1400319cc:	push   rbx
   1400319cd:	je     0x140031a41
   1400319cf:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   1400319d6:	add    BYTE PTR [rax],al
   1400319d8:	fld    QWORD PTR [rax]
   1400319da:	(bad)  
   1400319db:	outs   dx,BYTE PTR gs:[rsi]
   1400319dd:	rex.RB outs dx,BYTE PTR fs:[rsi]
   1400319e0:	je     0x140031a4b
   1400319e2:	je     0x140031a5d
   1400319e4:	rex push rcx
   1400319e6:	pop    rax
   1400319e7:	ins    DWORD PTR es:[rdi],dx
   1400319e8:	ins    BYTE PTR es:[rdi],dx
   1400319e9:	rex.R
   1400319ea:	gs data16 (bad) 
   1400319ed:	jne    0x140031a5b
   1400319ef:	je     0x140031a39
   1400319f1:	(bad)  
   1400319f2:	outs   dx,BYTE PTR ds:[rsi]
   1400319f3:	fs ins BYTE PTR es:[rdi],dx
   1400319f5:	gs jb  0x140031a38
   1400319f8:	rex push rbp
   1400319fa:	rex.RB
   1400319fb:	rex.B
   1400319fc:	pop    r15
   1400319fe:	rex.WRX
   1400319ff:	rex.B
   140031a00:	rex.RB
   140031a01:	rex.X push rsi
   140031a03:	push   rcx
   140031a04:	push   rbx
   140031a05:	je     0x140031a79
   140031a07:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   140031a0e:	add    BYTE PTR [rax],al
   140031a10:	xchg   ecx,eax
   140031a11:	add    DWORD PTR [rdi],edi
   140031a13:	jae    0x140031a89
   140031a15:	(bad)  
   140031a16:	jb     0x140031a8c
   140031a18:	rex.XB
   140031a19:	rex.R
   140031a1a:	push   r12
   140031a1c:	rex.B
   140031a1d:	rex push rcx
   140031a1f:	pop    rax
   140031a20:	ins    DWORD PTR es:[rdi],dx
   140031a21:	ins    BYTE PTR es:[rdi],dx
   140031a22:	rex.R
   140031a23:	gs data16 (bad) 
   140031a26:	jne    0x140031a94
   140031a28:	je     0x140031a72
   140031a2a:	(bad)  
   140031a2b:	outs   dx,BYTE PTR ds:[rsi]
   140031a2c:	fs ins BYTE PTR es:[rdi],dx
   140031a2e:	gs jb  0x140031a71
   140031a31:	rex push rbp
   140031a33:	rex.RB
   140031a34:	rex.B
   140031a35:	pop    r15
   140031a37:	rex.WRX pop rax
   140031a39:	pop    rdx
   140031a3a:	add    BYTE PTR [rax],al
   140031a3c:	fld    DWORD PTR [rax]
   140031a3e:	(bad)  
   140031a3f:	outs   dx,BYTE PTR gs:[rsi]
   140031a41:	fs rex.XB
   140031a43:	rex.R
   140031a44:	push   r12
   140031a46:	rex.B
   140031a47:	rex push rcx
   140031a49:	pop    rax
   140031a4a:	ins    DWORD PTR es:[rdi],dx
   140031a4b:	ins    BYTE PTR es:[rdi],dx
   140031a4c:	rex.R
   140031a4d:	gs data16 (bad) 
   140031a50:	jne    0x140031abe
   140031a52:	je     0x140031a9c
   140031a54:	(bad)  
   140031a55:	outs   dx,BYTE PTR ds:[rsi]
   140031a56:	fs ins BYTE PTR es:[rdi],dx
   140031a58:	gs jb  0x140031a9b
   140031a5b:	rex push rbp
   140031a5d:	rex.RB
   140031a5e:	rex.B
   140031a5f:	pop    r15
   140031a61:	rex.WRX pop rax
   140031a63:	pop    rdx
   140031a64:	add    BYTE PTR [rax],al
   140031a66:	mov    ecx,0x6f633f00
   140031a6b:	ins    DWORD PTR es:[rdi],dx
   140031a6c:	ins    DWORD PTR es:[rdi],dx
   140031a6d:	outs   dx,BYTE PTR gs:[rsi]
   140031a6f:	je     0x140031ab1
   140031a71:	push   rcx
   140031a72:	pop    rax
   140031a73:	ins    DWORD PTR es:[rdi],dx
   140031a74:	ins    BYTE PTR es:[rdi],dx
   140031a75:	rex.R
   140031a76:	gs data16 (bad) 
   140031a79:	jne    0x140031ae7
   140031a7b:	je     0x140031ac5
   140031a7d:	(bad)  
   140031a7e:	outs   dx,BYTE PTR ds:[rsi]
   140031a7f:	fs ins BYTE PTR es:[rdi],dx
   140031a81:	gs jb  0x140031ac4
   140031a84:	rex push rbp
   140031a86:	rex.RB
   140031a87:	rex.B
   140031a88:	pop    r15
   140031a8a:	rex.WRX
   140031a8b:	rex.B
   140031a8c:	rex.RB
   140031a8d:	rex.X push rsi
   140031a8f:	push   rcx
   140031a90:	push   rbx
   140031a91:	je     0x140031b05
   140031a93:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   140031a9a:	add    BYTE PTR [rax],al
   140031a9c:	lods   al,BYTE PTR ds:[rsi]
   140031a9d:	add    BYTE PTR [rdi],bh
   140031a9f:	(bad)  
   140031aa0:	je     0x140031b16
   140031aa2:	jb     0x140031b0d
   140031aa4:	(bad)  
   140031aa5:	jne    0x140031b1b
   140031aa7:	gs rex.R
   140031aa9:	movsxd ebp,DWORD PTR gs:[rax+rax*2+0x51]
   140031aae:	pop    rax
   140031aaf:	ins    DWORD PTR es:[rdi],dx
   140031ab0:	ins    BYTE PTR es:[rdi],dx
   140031ab1:	rex.R
   140031ab2:	gs data16 (bad) 
   140031ab5:	jne    0x140031b23
   140031ab7:	je     0x140031b01
   140031ab9:	(bad)  
   140031aba:	outs   dx,BYTE PTR ds:[rsi]
   140031abb:	fs ins BYTE PTR es:[rdi],dx
   140031abd:	gs jb  0x140031b00
   140031ac0:	rex push rbp
   140031ac2:	rex.RB
   140031ac3:	rex.B
   140031ac4:	pop    r15
   140031ac6:	rex.WRX
   140031ac7:	rex.B
   140031ac8:	rex.RB
   140031ac9:	rex.X push rsi
   140031acb:	push   rcx
   140031acc:	push   rbx
   140031acd:	je     0x140031b41
   140031acf:	imul   ebp,DWORD PTR [rsi+0x67],0x30304040
   140031ad6:	xor    BYTE PTR [rax],dh
   140031ad8:	rex pop rdx
   140031ada:	add    BYTE PTR [rax],al
   140031adc:	cld    
   140031add:	add    BYTE PTR [rdi],bh
   140031adf:	imul   ebp,DWORD PTR [rsi+0x74],0x616e7265
   140031ae6:	ins    BYTE PTR es:[rdi],dx
   140031ae7:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140031ae9:	je     0x140031b54
   140031aeb:	je     0x140031b66
   140031aed:	rex.R
   140031aee:	movsxd ebp,DWORD PTR gs:[rax+rax*2+0x51]
   140031af3:	pop    rax
   140031af4:	ins    DWORD PTR es:[rdi],dx
   140031af5:	ins    BYTE PTR es:[rdi],dx
   140031af6:	rex.R
   140031af7:	gs data16 (bad) 
   140031afa:	jne    0x140031b68
   140031afc:	je     0x140031b46
   140031afe:	(bad)  
   140031aff:	outs   dx,BYTE PTR ds:[rsi]
   140031b00:	fs ins BYTE PTR es:[rdi],dx
   140031b02:	gs jb  0x140031b45
   140031b05:	rex push rbp
   140031b07:	rex.RB
   140031b08:	rex.B
   140031b09:	pop    r15
   140031b0b:	rex.WRX
   140031b0c:	rex.B
   140031b0d:	rex.RB
   140031b0e:	rex.X push rsi
   140031b10:	push   rcx
   140031b11:	push   rbx
   140031b12:	je     0x140031b86
   140031b14:	imul   ebp,DWORD PTR [rsi+0x67],0x40304040
   140031b1b:	pop    rdx
   140031b1c:	add    BYTE PTR [rax],al
   140031b1e:	in     al,0x0
   140031b20:	(bad)  
   140031b21:	gs js  0x140031b98
   140031b24:	gs jb  0x140031b95
   140031b27:	(bad)  
   140031b28:	ins    BYTE PTR es:[rdi],dx
   140031b29:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140031b2b:	je     0x140031b96
   140031b2d:	je     0x140031ba8
   140031b2f:	rex.R
   140031b30:	movsxd ebp,DWORD PTR gs:[rax+rax*2+0x51]
   140031b35:	pop    rax
   140031b36:	ins    DWORD PTR es:[rdi],dx
   140031b37:	ins    BYTE PTR es:[rdi],dx
   140031b38:	rex.R
   140031b39:	gs data16 (bad) 
   140031b3c:	jne    0x140031baa
   140031b3e:	je     0x140031b88
   140031b40:	(bad)  
   140031b41:	outs   dx,BYTE PTR ds:[rsi]
   140031b42:	fs ins BYTE PTR es:[rdi],dx
   140031b44:	gs jb  0x140031b87
   140031b47:	rex push rbp
   140031b49:	rex.RB
   140031b4a:	rex.B
   140031b4b:	pop    r15
   140031b4d:	rex.WRX
   140031b4e:	rex.B
   140031b4f:	rex.RB
   140031b50:	rex.X push rsi
   140031b52:	push   rcx
   140031b53:	push   rbx
   140031b54:	je     0x140031bc8
   140031b56:	imul   ebp,DWORD PTR [rsi+0x67],0x30304040
   140031b5d:	rex pop rdx
   140031b5f:	add    BYTE PTR [rax+rax*1+0x3f],ah
   140031b63:	(bad)  
   140031b64:	xor    DWORD PTR [rcx+0x58],edx
   140031b67:	ins    DWORD PTR es:[rdi],dx
   140031b68:	ins    BYTE PTR es:[rdi],dx
   140031b69:	rex.R
   140031b6a:	gs data16 (bad) 
   140031b6d:	jne    0x140031bdb
   140031b6f:	je     0x140031bb9
   140031b71:	(bad)  
   140031b72:	outs   dx,BYTE PTR ds:[rsi]
   140031b73:	fs ins BYTE PTR es:[rdi],dx
   140031b75:	gs jb  0x140031bb8
   140031b78:	rex push rbp
   140031b7a:	rex.RB
   140031b7b:	rex.B
   140031b7c:	rex.B
   140031b7d:	rex pop rax
   140031b7f:	pop    rdx
   140031b80:	add    BYTE PTR [rax],al
   140031b82:	sbb    eax,DWORD PTR [rcx]
   140031b84:	(bad)  
   140031b85:	ins    BYTE PTR es:[rdi],dx
   140031b86:	imul   ebp,DWORD PTR [rsi+0x65],0x626d754e
   140031b8d:	gs jb  0x140031bd0
   140031b90:	push   rcx
   140031b91:	pop    rax
   140031b92:	ins    DWORD PTR es:[rdi],dx
   140031b93:	ins    BYTE PTR es:[rdi],dx
   140031b94:	push   rax
   140031b95:	(bad)  
   140031b96:	jb     0x140031c0b
   140031b98:	gs rex.RB js 0x140031bff
   140031b9c:	gs jo  0x140031c13
   140031b9f:	imul   ebp,DWORD PTR [rdi+0x6e],0x45514040
   140031ba6:	rex.X
   140031ba7:	rex.B
   140031ba8:	rex.W pop rax
   140031baa:	pop    rdx
   140031bab:	add    BYTE PTR [rax+0x6f633f00],bh
   140031bb1:	ins    BYTE PTR es:[rdi],dx
   140031bb2:	jne    0x140031c21
   140031bb4:	outs   dx,BYTE PTR ds:[rsi]
   140031bb5:	rex.WRX jne 0x140031c25
   140031bb8:	(bad)  
   140031bb9:	gs jb  0x140031bfc
   140031bbc:	push   rcx
   140031bbd:	pop    rax
   140031bbe:	ins    DWORD PTR es:[rdi],dx
   140031bbf:	ins    BYTE PTR es:[rdi],dx
   140031bc0:	push   rax
   140031bc1:	(bad)  
   140031bc2:	jb     0x140031c37
   140031bc4:	gs rex.RB js 0x140031c2b
   140031bc8:	gs jo  0x140031c3f
   140031bcb:	imul   ebp,DWORD PTR [rdi+0x6e],0x45514040
   140031bd2:	rex.X
   140031bd3:	rex.B
   140031bd4:	rex.W pop rax
   140031bd6:	pop    rdx
   140031bd7:	add    BYTE PTR [rsi],bl
   140031bd9:	add    DWORD PTR [rdi],edi
   140031bdb:	ins    DWORD PTR es:[rdi],dx
   140031bdc:	gs jae 0x140031c52
   140031bdf:	(bad)  
   140031be0:	addr32 gs rex push rcx
   140031be4:	pop    rax
   140031be5:	ins    DWORD PTR es:[rdi],dx
   140031be6:	ins    BYTE PTR es:[rdi],dx
   140031be7:	push   rax
   140031be8:	(bad)  
   140031be9:	jb     0x140031c5e
   140031beb:	gs rex.RB js 0x140031c52
   140031bef:	gs jo  0x140031c66
   140031bf2:	imul   ebp,DWORD PTR [rdi+0x6e],0x45514040
   140031bf9:	rex.X
   140031bfa:	rex.B (bad) 
   140031bfc:	push   r14
   140031bfe:	push   rcx
   140031bff:	push   rbx
   140031c00:	je     0x140031c74
   140031c02:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   140031c09:	add    BYTE PTR [rdi+0x0],ah
   140031c0c:	(bad)  
   140031c0d:	(bad)  
   140031c0e:	xor    DWORD PTR [rcx+0x58],edx
   140031c11:	ins    DWORD PTR es:[rdi],dx
   140031c12:	ins    BYTE PTR es:[rdi],dx
   140031c13:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140031c15:	jo     0x140031c8c
   140031c17:	je     0x140031c6c
   140031c19:	outs   dx,DWORD PTR ds:[rsi]
   140031c1a:	jne    0x140031c8e
   140031c1c:	movsxd esp,DWORD PTR [rbp+0x40]
   140031c1f:	rex push rbp
   140031c21:	rex.RB
   140031c22:	rex.B
   140031c23:	rex.B
   140031c24:	rex pop rax
   140031c26:	pop    rdx
   140031c27:	add    BYTE PTR [rbp+0x0],ch
   140031c2a:	(bad)  
   140031c2b:	(bad)  
   140031c2c:	xor    DWORD PTR [rcx+0x58],edx
   140031c2f:	ins    DWORD PTR es:[rdi],dx
   140031c30:	ins    BYTE PTR es:[rdi],dx
   140031c31:	push   rbx
   140031c32:	imul   ebp,DWORD PTR [rbp+0x70],0x6552656c
   140031c39:	(bad)  
   140031c3a:	fs gs jb 0x140031c7e
   140031c3e:	rex push rbp
   140031c40:	rex.RB
   140031c41:	rex.B
   140031c42:	rex.B
   140031c43:	rex pop rax
   140031c45:	pop    rdx
   140031c46:	add    BYTE PTR [rax],al
   140031c48:	(bad)  
   140031c49:	add    DWORD PTR [rdi],edi
   140031c4b:	jo     0x140031cae
   140031c4d:	jb     0x140031cc2
   140031c4f:	gs rex push rcx
   140031c52:	pop    rax
   140031c53:	ins    DWORD PTR es:[rdi],dx
   140031c54:	ins    BYTE PTR es:[rdi],dx
   140031c55:	push   rbx
   140031c56:	imul   ebp,DWORD PTR [rbp+0x70],0x6552656c
   140031c5d:	(bad)  
   140031c5e:	fs gs jb 0x140031ca2
   140031c62:	rex push rbp
   140031c64:	rex.RB
   140031c65:	rex.B
   140031c66:	pop    r15
   140031c68:	rex.WRX
   140031c69:	rex.B
   140031c6a:	rex.RB
   140031c6b:	rex.X push rsi
   140031c6d:	push   rcx
   140031c6e:	pop    rax
   140031c6f:	ins    DWORD PTR es:[rdi],dx
   140031c70:	ins    BYTE PTR es:[rdi],dx
   140031c71:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140031c73:	jo     0x140031cea
   140031c75:	je     0x140031cca
   140031c77:	outs   dx,DWORD PTR ds:[rsi]
   140031c78:	jne    0x140031cec
   140031c7a:	movsxd esp,DWORD PTR [rbp+0x40]
   140031c7d:	rex
   140031c7e:	rex pop rdx
   140031c80:	add    BYTE PTR [rax],al
   140031c82:	jg     0x140031c85
   140031c84:	(bad)  
   140031c85:	jae    0x140031cec
   140031c87:	je     0x140031cce
   140031c89:	jb     0x140031cfd
   140031c8b:	outs   dx,DWORD PTR ds:[rsi]
   140031c8c:	jb     0x140031cd6
   140031c8e:	(bad)  
   140031c8f:	outs   dx,BYTE PTR ds:[rsi]
   140031c90:	fs ins BYTE PTR es:[rdi],dx
   140031c92:	gs jb  0x140031cd5
   140031c95:	push   rcx
   140031c96:	pop    rax
   140031c97:	ins    DWORD PTR es:[rdi],dx
   140031c98:	ins    BYTE PTR es:[rdi],dx
   140031c99:	push   rbx
   140031c9a:	imul   ebp,DWORD PTR [rbp+0x70],0x6552656c
   140031ca1:	(bad)  
   140031ca2:	fs gs jb 0x140031ce6
   140031ca6:	rex push rbp
   140031ca8:	rex.RB
   140031ca9:	rex.B
   140031caa:	pop    r8
   140031cac:	push   rax
   140031cad:	rex.RB
   140031cae:	push   r14
   140031cb0:	push   rcx
   140031cb1:	pop    rax
   140031cb2:	ins    DWORD PTR es:[rdi],dx
   140031cb3:	ins    BYTE PTR es:[rdi],dx
   140031cb4:	rex.RB jb 0x140031d29
   140031cb7:	outs   dx,DWORD PTR ds:[rsi]
   140031cb8:	jb     0x140031d02
   140031cba:	(bad)  
   140031cbb:	outs   dx,BYTE PTR ds:[rsi]
   140031cbc:	fs ins BYTE PTR es:[rdi],dx
   140031cbe:	gs jb  0x140031d01
   140031cc1:	rex
   140031cc2:	rex pop rdx
   140031cc4:	add    BYTE PTR [rax],al
   140031cc6:	jbe    0x140031cc9
   140031cc8:	(bad)  
   140031cc9:	jae    0x140031d30
   140031ccb:	je     0x140031d10
   140031ccd:	outs   dx,DWORD PTR ds:[rsi]
   140031cce:	outs   dx,BYTE PTR ds:[rsi]
   140031ccf:	je     0x140031d36
   140031cd1:	outs   dx,BYTE PTR ds:[rsi]
   140031cd2:	je     0x140031d1c
   140031cd4:	(bad)  
   140031cd5:	outs   dx,BYTE PTR ds:[rsi]
   140031cd6:	fs ins BYTE PTR es:[rdi],dx
   140031cd8:	gs jb  0x140031d1b
   140031cdb:	push   rcx
   140031cdc:	pop    rax
   140031cdd:	ins    DWORD PTR es:[rdi],dx
   140031cde:	ins    BYTE PTR es:[rdi],dx
   140031cdf:	push   rbx
   140031ce0:	imul   ebp,DWORD PTR [rbp+0x70],0x6552656c
   140031ce7:	(bad)  
   140031ce8:	fs gs jb 0x140031d2c
   140031cec:	rex push rbp
   140031cee:	rex.RB
   140031cef:	rex.B
   140031cf0:	pop    r8
   140031cf2:	push   rax
   140031cf3:	rex.RB
   140031cf4:	push   r14
   140031cf6:	push   rcx
   140031cf7:	pop    rax
   140031cf8:	ins    DWORD PTR es:[rdi],dx
   140031cf9:	ins    BYTE PTR es:[rdi],dx
   140031cfa:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140031cfc:	outs   dx,BYTE PTR ds:[rsi]
   140031cfd:	je     0x140031d64
   140031cff:	outs   dx,BYTE PTR ds:[rsi]
   140031d00:	je     0x140031d4a
   140031d02:	(bad)  
   140031d03:	outs   dx,BYTE PTR ds:[rsi]
   140031d04:	fs ins BYTE PTR es:[rdi],dx
   140031d06:	gs jb  0x140031d49
   140031d09:	rex
   140031d0a:	rex pop rdx
   140031d0c:	add    BYTE PTR [rax],al
   140031d0e:	rex.WRX add BYTE PTR [rdi],r15b
   140031d11:	(bad)  
   140031d12:	xor    BYTE PTR [rcx+0x58],dl
   140031d15:	ins    DWORD PTR es:[rdi],dx
   140031d16:	ins    BYTE PTR es:[rdi],dx
   140031d17:	push   rbx
   140031d18:	imul   ebp,DWORD PTR [rbp+0x70],0x6552656c
   140031d1f:	(bad)  
   140031d20:	fs gs jb 0x140031d64
   140031d24:	rex push rcx
   140031d26:	rex.RB
   140031d27:	rex.B
   140031d28:	rex.B
   140031d29:	rex pop rax
   140031d2b:	pop    rdx
   140031d2c:	add    BYTE PTR [rax],al
   140031d2e:	rex.XB add BYTE PTR [r15],dil
   140031d31:	(bad)  
   140031d32:	xor    BYTE PTR [rcx+0x58],dl
   140031d35:	ins    DWORD PTR es:[rdi],dx
   140031d36:	ins    BYTE PTR es:[rdi],dx
   140031d37:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140031d39:	jo     0x140031db0
   140031d3b:	je     0x140031d90
   140031d3d:	outs   dx,DWORD PTR ds:[rsi]
   140031d3e:	jne    0x140031db2
   140031d40:	movsxd esp,DWORD PTR [rbp+0x40]
   140031d43:	rex push rcx
   140031d45:	rex.RB
   140031d46:	rex.B
   140031d47:	rex.B
   140031d48:	rex push rax
   140031d4a:	rex.RB
   140031d4b:	push   r14
   140031d4d:	push   rcx
   140031d4e:	rex.WB
   140031d4f:	rex.WRXB
   140031d50:	rex.R
   140031d51:	gs jbe 0x140031dbd
   140031d54:	movsxd esp,DWORD PTR [rbp+0x40]
   140031d57:	rex
   140031d58:	rex pop rdx
   140031d5a:	add    BYTE PTR [rax],al
   140031d5c:	mov    eax,0x61763f01
   140031d61:	ins    BYTE PTR es:[rdi],dx
   140031d62:	jne    0x140031dc9
   140031d64:	rex push rcx
   140031d66:	pop    rax
   140031d67:	ins    DWORD PTR es:[rdi],dx
   140031d68:	ins    BYTE PTR es:[rdi],dx
   140031d69:	rex.B je 0x140031de0
   140031d6c:	jb     0x140031dd7
   140031d6e:	(bad)  
   140031d6f:	jne    0x140031de5
   140031d71:	gs jae 0x140031db4
   140031d74:	rex push rcx
   140031d76:	rex.RB
   140031d77:	rex.X
   140031d78:	rex.B (bad) 
   140031d7a:	push   r14
   140031d7c:	push   rcx
   140031d7d:	push   rbx
   140031d7e:	je     0x140031df2
   140031d80:	imul   ebp,DWORD PTR [rsi+0x67],0x51564040
   140031d87:	rex.WR (bad) 
   140031d89:	je     0x140031df4
   140031d8b:	outs   dx,BYTE PTR ds:[rsi]
   140031d8c:	xor    DWORD PTR [rbx+0x74],edx
   140031d8f:	jb     0x140031dfa
   140031d91:	outs   dx,BYTE PTR ds:[rsi]
   140031d92:	addr32 rex
   140031d94:	rex
   140031d95:	rex pop rdx
   140031d97:	add    BYTE PTR [rcx+0x74],dl
   140031d9a:	xor    eax,0x2e6c6d58
   140031d9f:	fs ins BYTE PTR es:[rdi],dx
   140031da1:	ins    BYTE PTR es:[rdi],dx
   140031da2:	add    BYTE PTR [rax],al
   140031da4:	push   rdi
   140031da5:	add    BYTE PTR [rdi],bh
   140031da7:	(bad)  
   140031da8:	xor    BYTE PTR [rcx+0x43],dl
   140031dab:	push   0x40407261
   140031db0:	push   rcx
   140031db1:	rex.RB
   140031db2:	rex.B
   140031db3:	rex.B
   140031db4:	rex push rbp
   140031db6:	push   rcx
   140031db7:	rex.WR (bad) 
   140031db9:	je     0x140031e24
   140031dbb:	outs   dx,BYTE PTR ds:[rsi]
   140031dbc:	xor    DWORD PTR [rbx+0x68],eax
   140031dbf:	(bad)  
   140031dc0:	jb     0x140031e02
   140031dc2:	rex
   140031dc3:	rex pop rdx
   140031dc5:	add    BYTE PTR [rax+0x6f633f08],bl
   140031dcb:	outs   dx,BYTE PTR ds:[rsi]
   140031dcc:	jae    0x140031e42
   140031dce:	rex.R (bad) 
   140031dd0:	je     0x140031e33
   140031dd2:	rex push rcx
   140031dd4:	push   rbx
   140031dd5:	je     0x140031e49
   140031dd7:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140031dde:	rex.X
   140031ddf:	push   r8
   140031de1:	rex.RB
   140031de2:	rex.X push rsi
   140031de4:	push   rcx
   140031de5:	rex.XB push 0x40407261
   140031deb:	pop    rax
   140031dec:	pop    rdx
   140031ded:	add    BYTE PTR [rax],ah
   140031def:	(bad)  
   140031df0:	(bad)  
   140031df1:	push   rcx
   140031df2:	push   rbx
   140031df3:	je     0x140031e67
   140031df5:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   140031dfc:	pop    rdi
   140031dfd:	push   0x6f
   140031dff:	imul   ebp,DWORD PTR [rsi+0x40],0x72507451
   140031e06:	imul   esi,DWORD PTR [rsi+0x61],0x40406574
   140031e0d:	pop    rcx
   140031e0e:	rex.B (bad) 
   140031e10:	push   r14
   140031e12:	push   rcx
   140031e13:	push   rbx
   140031e14:	je     0x140031e88
   140031e16:	imul   ebp,DWORD PTR [rsi+0x67],0x45504040
   140031e1d:	rex.X push rsi
   140031e1f:	push   rcx
   140031e20:	push   rbx
   140031e21:	je     0x140031e95
   140031e23:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   140031e2a:	rex
   140031e2b:	rex push rax
   140031e2d:	rex.RB
   140031e2e:	rex.X push rsi
   140031e30:	push   rcx
   140031e31:	rex.XB push 0x40407261
   140031e37:	rex.W
   140031e38:	rex pop rdx
   140031e3a:	add    BYTE PTR [rax],al
   140031e3c:	jle    0x140031e41
   140031e3e:	(bad)  
   140031e3f:	(bad)  
   140031e40:	xor    al,0x51
   140031e42:	push   rbx
   140031e43:	je     0x140031eb7
   140031e45:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140031e4c:	rex.B
   140031e4d:	rex.B
   140031e4e:	rex.B
   140031e4f:	rex.RB
   140031e50:	push   r14
   140031e52:	xor    BYTE PTR [rax+0x41],al
   140031e55:	rex.RB
   140031e56:	rex.X push rsi
   140031e58:	xor    BYTE PTR [rax+0x40],al
   140031e5b:	pop    rdx
   140031e5c:	add    BYTE PTR [rax],al
   140031e5e:	lock sbb DWORD PTR [rdi],edi
   140031e61:	je     0x140031ed5
   140031e63:	(bad)  
   140031e64:	outs   dx,BYTE PTR ds:[rsi]
   140031e65:	jae    0x140031ed3
   140031e67:	(bad)  
   140031e68:	je     0x140031ecf
   140031e6a:	rex push rcx
   140031e6c:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140031e6e:	jb     0x140031ed5
   140031e70:	rex.B jo 0x140031ee3
   140031e73:	ins    BYTE PTR es:[rdi],dx
   140031e74:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140031e7b:	rex
   140031e7c:	rex push rbx
   140031e7e:	rex.B (bad) 
   140031e80:	push   r14
   140031e82:	push   rcx
   140031e83:	push   rbx
   140031e84:	je     0x140031ef8
   140031e86:	imul   ebp,DWORD PTR [rsi+0x67],0x45504040
   140031e8d:	rex.X
   140031e8e:	xor    BYTE PTR [rax],r14b
   140031e91:	rex.W
   140031e92:	rex pop rdx
   140031e94:	add    BYTE PTR [rax],al
   140031e96:	mov    es,WORD PTR [rcx]
   140031e98:	(bad)  
   140031e99:	(bad)  
   140031e9a:	xor    BYTE PTR [rcx+0x53],dl
   140031e9d:	je     0x140031f11
   140031e9f:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140031ea6:	rex.B
   140031ea7:	rex.B
   140031ea8:	rex
   140031ea9:	rex.B
   140031eaa:	rex.RB
   140031eab:	rex.X push rsi
   140031ead:	xor    BYTE PTR [rax+0x40],al
   140031eb0:	pop    rdx
   140031eb1:	add    al,dl
   140031eb3:	add    bh,BYTE PTR [rdi]
   140031eb5:	(bad)  
   140031eb6:	xor    DWORD PTR [rcx+0x53],edx
   140031eb9:	je     0x140031f2d
   140031ebb:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140031ec2:	rex.B
   140031ec3:	rex.B
   140031ec4:	rex pop rax
   140031ec6:	pop    rdx
   140031ec7:	add    BYTE PTR [rdi+0x303f3f01],dl
   140031ecd:	push   rcx
   140031ece:	push   rbx
   140031ecf:	je     0x140031f43
   140031ed1:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140031ed8:	rex.B
   140031ed9:	rex.B
   140031eda:	rex pop rax
   140031edc:	pop    rdx
   140031edd:	add    cl,dl
   140031edf:	(bad)  
   140031ee0:	(bad)  
   140031ee1:	jae    0x140031f4b
   140031ee3:	(bad)  
   140031ee4:	jb     0x140031f4b
   140031ee6:	fs pop rdi
   140031ee8:	outs   dx,BYTE PTR ds:[rsi]
   140031ee9:	jne    0x140031f57
   140031eeb:	ins    BYTE PTR es:[rdi],dx
   140031eec:	rex push rcx
   140031eee:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   140031ef6:	rex
   140031ef7:	xor    dl,BYTE PTR [rbp+0x44]
   140031efb:	(bad)  
   140031efc:	je     0x140031f5f
   140031efe:	rex xor DWORD PTR [rax+0x42],eax
   140031f02:	add    BYTE PTR [rax],al
   140031f04:	iret   
   140031f05:	(bad)  
   140031f06:	(bad)  
   140031f07:	jae    0x140031f71
   140031f09:	(bad)  
   140031f0a:	jb     0x140031f71
   140031f0c:	fs pop rdi
   140031f0e:	outs   dx,BYTE PTR ds:[rsi]
   140031f0f:	jne    0x140031f7d
   140031f11:	ins    BYTE PTR es:[rdi],dx
   140031f12:	rex push rcx
   140031f14:	rex.W (bad) 
   140031f16:	jae    0x140031f80
   140031f18:	rex.R (bad) 
   140031f1a:	je     0x140031f7d
   140031f1c:	rex
   140031f1d:	xor    dl,BYTE PTR [rbp+0x31]
   140031f21:	rex
   140031f22:	rex.X add BYTE PTR [rcx+0x303f3f01],dl
   140031f29:	push   rcx
   140031f2a:	push   rbx
   140031f2b:	je     0x140031f9f
   140031f2d:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140031f34:	rex.B
   140031f35:	rex.B
   140031f36:	rex
   140031f37:	rex.W push rdi
   140031f39:	xor    al,0x49
   140031f3b:	outs   dx,BYTE PTR ds:[rsi]
   140031f3c:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x617a696c
   140031f44:	je     0x140031faf
   140031f46:	outs   dx,DWORD PTR ds:[rsi]
   140031f47:	outs   dx,BYTE PTR ds:[rsi]
   140031f48:	rex push rcx
   140031f4a:	je     0x140031f8c
   140031f4c:	rex
   140031f4d:	rex pop rdx
   140031f4f:	add    BYTE PTR [rcx+0x69643f0a],cl
   140031f55:	jae    0x140031fc7
   140031f57:	outs   dx,DWORD PTR ds:[rsi]
   140031f58:	jae    0x140031fbf
   140031f5a:	rex push rcx
   140031f5c:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   140031f64:	rex
   140031f65:	rex push rbx
   140031f67:	pop    r8
   140031f69:	push   rax
   140031f6a:	rex.RB
   140031f6b:	push   r13
   140031f6d:	rex.R (bad) 
   140031f6f:	je     0x140031fd2
   140031f71:	rex xor DWORD PTR [rax+0x40],eax
   140031f75:	pop    rdx
   140031f76:	add    BYTE PTR [rax],al
   140031f78:	adc    cl,BYTE PTR [rdi+rdi*1]
   140031f7b:	data16 jb 0x140031fe3
   140031f7e:	gs pop rdi
   140031f80:	push   0x65706c65
   140031f85:	jb     0x140031fc7
   140031f87:	push   rcx
   140031f88:	rex.W (bad) 
   140031f8a:	jae    0x140031ff4
   140031f8c:	rex.R (bad) 
   140031f8e:	je     0x140031ff1
   140031f90:	rex
   140031f91:	rex push rcx
   140031f93:	rex.RB
   140031f94:	rex.B
   140031f95:	pop    r8
   140031f97:	push   rax
   140031f98:	ss pop r8
   140031f9b:	push   rax
   140031f9c:	rex.RB
   140031f9d:	push   r13
   140031f9f:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   140031fa1:	fs rex xor DWORD PTR gs:[rax+0x40],eax
   140031fa7:	pop    rdx
   140031fa8:	rex pop rdx
   140031faa:	add    BYTE PTR [rax],al
   140031fac:	xchg   esi,eax
   140031fad:	add    DWORD PTR [rdi],edi
   140031faf:	(bad)  
   140031fb0:	xor    BYTE PTR [rcx+0x53],dl
   140031fb3:	je     0x140032027
   140031fb5:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140031fbc:	rex.B
   140031fbd:	rex.B
   140031fbe:	rex push rsi
   140031fc0:	push   rcx
   140031fc1:	rex.WR (bad) 
   140031fc3:	je     0x14003202e
   140031fc5:	outs   dx,BYTE PTR ds:[rsi]
   140031fc6:	xor    DWORD PTR [rbx+0x74],edx
   140031fc9:	jb     0x140032034
   140031fcb:	outs   dx,BYTE PTR ds:[rsi]
   140031fcc:	addr32 rex
   140031fce:	rex
   140031fcf:	rex pop rdx
   140031fd1:	add    BYTE PTR [rbx+0xa],dl
   140031fd4:	(bad)  
   140031fd5:	fs gs je 0x14003203a
   140031fd9:	movsxd ebp,DWORD PTR [rax+0x40]
   140031fdc:	push   rcx
   140031fdd:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   140031fe5:	rex
   140031fe6:	rex push rcx
   140031fe8:	rex.RB
   140031fe9:	rex.B
   140031fea:	push   r8
   140031fec:	rex.RB
   140031fed:	push   r13
   140031fef:	rex.R (bad) 
   140031ff1:	je     0x140032054
   140031ff3:	rex xor DWORD PTR [rax+0x48],eax
   140031ff7:	rex pop rdx
   140031ff9:	add    BYTE PTR [rbx+0xa],bl
   140031ffc:	(bad)  
   140031ffd:	fs gs je 0x140032062
   140032001:	movsxd ebp,DWORD PTR [rax+0x5f]
   140032004:	addr32 jb 0x140032076
   140032007:	ja     0x140032049
   140032009:	push   rcx
   14003200a:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   140032012:	rex
   140032013:	rex push rcx
   140032015:	rex.RB
   140032016:	rex.B
   140032017:	push   r8
   140032019:	rex.RB
   14003201a:	push   r13
   14003201c:	rex.R (bad) 
   14003201e:	je     0x140032081
   140032020:	rex xor DWORD PTR [rax+0x50],eax
   140032024:	rex.RB
   140032025:	rex.B
   140032026:	rex.W
   140032027:	rex.W
   140032028:	rex pop rdx
   14003202a:	add    BYTE PTR [rax],al
   14003202c:	pop    rsi
   14003202d:	or     bh,BYTE PTR [rdi]
   14003202f:	fs gs je 0x140032094
   140032033:	movsxd ebp,DWORD PTR [rax+0x5f]
   140032036:	push   0x65706c65
   14003203b:	jb     0x14003207d
   14003203d:	push   rcx
   14003203e:	rex.W (bad) 
   140032040:	jae    0x1400320aa
   140032042:	rex.R (bad) 
   140032044:	je     0x1400320a7
   140032046:	rex
   140032047:	rex push rcx
   140032049:	rex.RB
   14003204a:	rex.B
   14003204b:	push   r8
   14003204d:	rex.RB
   14003204e:	push   r13
   140032050:	xor    DWORD PTR [rax+0x50],eax
   140032053:	ss pop r8
   140032056:	push   rax
   140032057:	rex.RB
   140032058:	push   r13
   14003205a:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14003205c:	fs rex xor DWORD PTR gs:[rax+0x50],eax
   140032062:	rex.RB
   140032063:	pop    r8
   140032065:	rex pop rdx
   140032067:	push   rax
   140032068:	ss pop r8
   14003206b:	xor    BYTE PTR [rax+0x5a],al
   14003206e:	rex.W
   14003206f:	rex.W
   140032070:	rex pop rdx
   140032072:	add    BYTE PTR [rax],al
   140032074:	mov    BYTE PTR [rsi],0x3f
   140032077:	(bad)  
   140032078:	jo     0x1400320ea
   14003207a:	outs   dx,BYTE PTR gs:[rsi]
   14003207c:	fs rex push rcx
   14003207f:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   140032087:	rex
   140032088:	rex push rcx
   14003208a:	rex.RB
   14003208b:	rex.B
   14003208c:	push   r8
   14003208e:	rex.RB
   14003208f:	push   r8
   140032091:	rex.RB
   140032092:	pop    r8
   140032094:	pop    rax
   140032095:	pop    rdx
   140032096:	add    BYTE PTR [rax],al
   140032098:	jns    0x14003209c
   14003209a:	(bad)  
   14003209b:	(bad)  
   14003209c:	xor    DWORD PTR [rcx+0x44],edx
   14003209f:	imul   esi,DWORD PTR [rdx+0x40],0x41455140
   1400320a6:	rex.B
   1400320a7:	rex pop rax
   1400320a9:	pop    rdx
   1400320aa:	add    BYTE PTR [rax],al
   1400320ac:	mov    BYTE PTR [rax],al
   1400320ae:	(bad)  
   1400320af:	(bad)  
   1400320b0:	xor    BYTE PTR [rcx+0x44],dl
   1400320b3:	imul   esi,DWORD PTR [rdx+0x40],0x41455140
   1400320ba:	rex.B
   1400320bb:	rex
   1400320bc:	rex.B
   1400320bd:	rex.RB
   1400320be:	rex.X push rsi
   1400320c0:	push   rcx
   1400320c1:	push   rbx
   1400320c2:	je     0x140032136
   1400320c4:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   1400320cb:	add    BYTE PTR [rsi+0x2],ah
   1400320ce:	(bad)  
   1400320cf:	(bad)  
   1400320d0:	xor    DWORD PTR [rcx+0x42],edx
   1400320d3:	jns    0x140032149
   1400320d5:	gs rex.B jb 0x14003214b
   1400320d9:	(bad)  
   1400320da:	jns    0x14003211c
   1400320dc:	rex push rcx
   1400320de:	rex.RB
   1400320df:	rex.B
   1400320e0:	rex.B
   1400320e1:	rex pop rax
   1400320e3:	pop    rdx
   1400320e4:	add    BYTE PTR [rax],al
   1400320e6:	xchg   esi,eax
   1400320e7:	or     BYTE PTR [rdi],bh
   1400320e9:	movsxd ebp,DWORD PTR [rdi+0x6e]
   1400320ec:	jae    0x140032162
   1400320ee:	rex.R (bad) 
   1400320f0:	je     0x140032153
   1400320f2:	rex push rcx
   1400320f4:	rex.X jns 0x14003216b
   1400320f7:	gs rex.B jb 0x14003216d
   1400320fb:	(bad)  
   1400320fc:	jns    0x14003213e
   1400320fe:	rex push rcx
   140032100:	rex.RB
   140032101:	rex.X
   140032102:	push   r8
   140032104:	rex.RB
   140032105:	rex.X
   140032106:	rex.R pop rax
   140032108:	pop    rdx
   140032109:	add    BYTE PTR [rbx+0x6f743f18],dh
   14003210f:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140032111:	movsxd esp,DWORD PTR [rcx+0x6c]
   140032114:	cmp    BYTE PTR [rdx+0x69],al
   140032117:	je     0x140032159
   140032119:	push   rcx
   14003211a:	push   rbx
   14003211b:	je     0x14003218f
   14003211d:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140032124:	rex.X
   140032125:	rex.B (bad) 
   140032127:	push   r14
   140032129:	push   rcx
   14003212a:	rex.X jns 0x1400321a1
   14003212d:	gs rex.B jb 0x1400321a3
   140032131:	(bad)  
   140032132:	jns    0x140032174
   140032134:	rex pop rax
   140032136:	pop    rdx
   140032137:	add    al,cl
   140032139:	(bad)  
   14003213a:	(bad)  
   14003213b:	(bad)  
   14003213c:	jo     0x1400321ae
   14003213e:	outs   dx,BYTE PTR gs:[rsi]
   140032140:	fs rex push rcx
   140032143:	push   rbx
   140032144:	je     0x1400321b8
   140032146:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14003214d:	rex.B
   14003214e:	rex.B
   14003214f:	rex.B
   140032150:	rex.RB
   140032151:	push   r14
   140032153:	xor    DWORD PTR [rax+0x41],eax
   140032156:	rex.RB
   140032157:	rex.X push rsi
   140032159:	xor    DWORD PTR [rax+0x40],eax
   14003215c:	pop    rdx
   14003215d:	add    ch,ah
   14003215f:	(bad)  
   140032160:	(bad)  
   140032161:	(bad)  
   140032162:	jb     0x1400321cb
   140032164:	rex push rcx
   140032166:	push   rbx
   140032167:	je     0x1400321db
   140032169:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140032170:	rex.X
   140032171:	rex.B (bad) 
   140032173:	push   r14
   140032175:	xor    DWORD PTR [rax+0x41],eax
   140032178:	rex.RB
   140032179:	rex.X push rsi
   14003217b:	xor    DWORD PTR [rax+0x48],eax
   14003217e:	push   rsi
   14003217f:	push   rcx
   140032180:	rex.XB push 0x40407261
   140032186:	rex pop rdx
   140032188:	add    BYTE PTR [rax],al
   14003218a:	call   0x1b36c609c
   14003218f:	rex.RB ins DWORD PTR es:[rdi],dx
   140032191:	jo     0x140032207
   140032193:	jns    0x1400321d5
   140032195:	push   rcx
   140032196:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   14003219e:	rex
   14003219f:	rex push rcx
   1400321a1:	rex.RB
   1400321a2:	rex.X
   1400321a3:	pop    r15
   1400321a5:	rex.WRX pop rax
   1400321a7:	pop    rdx
   1400321a8:	add    BYTE PTR [rax],al
   1400321aa:	lock or eax,0x4573693f
   1400321b0:	ins    DWORD PTR es:[rdi],dx
   1400321b1:	jo     0x140032227
   1400321b3:	jns    0x1400321f5
   1400321b5:	push   rcx
   1400321b6:	push   rbx
   1400321b7:	je     0x14003222b
   1400321b9:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   1400321c0:	rex.X
   1400321c1:	pop    r15
   1400321c3:	rex.WRX pop rax
   1400321c5:	pop    rdx
   1400321c6:	add    BYTE PTR [rax],al
   1400321c8:	(bad)  
   1400321c9:	(bad)  
   1400321ca:	(bad)  
   1400321cb:	jae    0x140032236
   1400321cd:	jp     0x140032234
   1400321cf:	rex push rcx
   1400321d1:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   1400321d9:	rex
   1400321da:	rex push rcx
   1400321dc:	rex.RB
   1400321dd:	rex.X
   1400321de:	rex.B
   1400321df:	rex.W pop rax
   1400321e1:	pop    rdx
   1400321e2:	add    BYTE PTR [rax],al
   1400321e4:	outs   dx,DWORD PTR ds:[rsi]
   1400321e5:	add    bh,BYTE PTR [rdi]
   1400321e7:	(bad)  
   1400321e8:	xor    DWORD PTR [rcx+0x43],edx
   1400321eb:	outs   dx,DWORD PTR ds:[rsi]
   1400321ec:	jb     0x140032253
   1400321ee:	rex.B jo 0x140032261
   1400321f1:	ins    BYTE PTR es:[rdi],dx
   1400321f2:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   1400321f9:	rex
   1400321fa:	rex push rbp
   1400321fc:	rex.RB
   1400321fd:	rex.B
   1400321fe:	rex.B
   1400321ff:	rex pop rax
   140032201:	pop    rdx
   140032202:	add    BYTE PTR [rax],al
   140032204:	inc    DWORD PTR [rsi]
   140032206:	(bad)  
   140032207:	(bad)  
   140032208:	je     0x14003224a
   14003220a:	push   rcx
   14003220b:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   140032213:	rex
   140032214:	rex push rcx
   140032216:	rex.RB
   140032217:	rex.X
   140032218:	push   r8
   14003221a:	rex.RB
   14003221b:	push   r8
   14003221d:	rex.RB
   14003221e:	pop    r8
   140032220:	rex.W
   140032221:	rex pop rdx
   140032223:	add    BYTE PTR [rcx+0x17],dh
   140032226:	(bad)  
   140032227:	jae    0x14003229d
   140032229:	(bad)  
   14003222a:	jb     0x1400322a0
   14003222c:	jae    0x140032285
   14003222e:	imul   esi,DWORD PTR [rax+rbp*2+0x40],0x72745351
   140032236:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14003223d:	rex.X
   14003223e:	pop    r15
   140032240:	rex.WRX push rsi
   140032242:	push   rcx
   140032243:	rex.XB push 0x40407261
   140032249:	push   rdi
   14003224a:	xor    al,0x43
   14003224c:	(bad)  
   14003224d:	jae    0x1400322b4
   14003224f:	push   rbx
   140032250:	outs   dx,BYTE PTR gs:[rsi]
   140032252:	jae    0x1400322bd
   140032254:	je     0x1400322bf
   140032256:	jbe    0x1400322c1
   140032258:	je     0x1400322d3
   14003225a:	rex push rcx
   14003225c:	je     0x14003229e
   14003225e:	rex
   14003225f:	rex pop rdx
   140032261:	add    BYTE PTR [rdx+0x383f3f04],al
   140032267:	push   rcx
   140032268:	push   rbx
   140032269:	je     0x1400322dd
   14003226b:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140032272:	rex.X
   140032273:	pop    r15
   140032275:	rex.WRX push rsi
   140032277:	push   rcx
   140032278:	rex.WR (bad) 
   14003227a:	je     0x1400322e5
   14003227c:	outs   dx,BYTE PTR ds:[rsi]
   14003227d:	xor    DWORD PTR [rbx+0x74],edx
   140032280:	jb     0x1400322eb
   140032282:	outs   dx,BYTE PTR ds:[rsi]
   140032283:	addr32 rex
   140032285:	rex
   140032286:	rex pop rdx
   140032288:	add    BYTE PTR [rax],al
   14003228a:	rcl    BYTE PTR [rbx],1
   14003228c:	(bad)  
   14003228d:	jb     0x1400322f4
   14003228f:	ins    DWORD PTR es:[rdi],dx
   140032290:	outs   dx,DWORD PTR ds:[rsi]
   140032291:	jbe    0x1400322f8
   140032293:	rex push rcx
   140032295:	push   rbx
   140032296:	je     0x14003230a
   140032298:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14003229f:	rex.B
   1400322a0:	rex.B
   1400322a1:	rex.B
   1400322a2:	rex.RB
   1400322a3:	push   r14
   1400322a5:	xor    DWORD PTR [rax+0x48],eax
   1400322a8:	rex.W
   1400322a9:	rex pop rdx
   1400322ab:	add    BYTE PTR [rdx+0x17],dh
   1400322ae:	(bad)  
   1400322af:	jae    0x140032325
   1400322b1:	(bad)  
   1400322b2:	jb     0x140032328
   1400322b4:	jae    0x14003230d
   1400322b6:	imul   esi,DWORD PTR [rax+rbp*2+0x40],0x72745351
   1400322be:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   1400322c5:	rex.X
   1400322c6:	pop    r15
   1400322c8:	rex.WRX push rsi
   1400322ca:	push   rcx
   1400322cb:	rex.WR (bad) 
   1400322cd:	je     0x140032338
   1400322cf:	outs   dx,BYTE PTR ds:[rsi]
   1400322d0:	xor    DWORD PTR [rbx+0x74],edx
   1400322d3:	jb     0x14003233e
   1400322d5:	outs   dx,BYTE PTR ds:[rsi]
   1400322d6:	addr32 rex
   1400322d8:	rex push rdi
   1400322da:	xor    al,0x43
   1400322dc:	(bad)  
   1400322dd:	jae    0x140032344
   1400322df:	push   rbx
   1400322e0:	outs   dx,BYTE PTR gs:[rsi]
   1400322e2:	jae    0x14003234d
   1400322e4:	je     0x14003234f
   1400322e6:	jbe    0x140032351
   1400322e8:	je     0x140032363
   1400322ea:	rex push rcx
   1400322ec:	je     0x14003232e
   1400322ee:	rex
   1400322ef:	rex pop rdx
   1400322f1:	add    dl,dh
   1400322f3:	(bad)  
   1400322f4:	(bad)  
   1400322f5:	(bad)  
   1400322f6:	jb     0x14003235f
   1400322f8:	jne    0x140032367
   1400322fa:	outs   dx,BYTE PTR gs:[rsi]
   1400322fc:	je     0x140032371
   1400322fe:	rex push rcx
   140032300:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140032302:	jb     0x140032369
   140032304:	rex.B jo 0x140032377
   140032307:	ins    BYTE PTR es:[rdi],dx
   140032308:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14003230f:	rex
   140032310:	rex push rbx
   140032312:	rex.B (bad) 
   140032314:	push   r14
   140032316:	push   rcx
   140032317:	push   rbx
   140032318:	je     0x14003238c
   14003231a:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   140032321:	rex
   140032322:	rex pop rax
   140032324:	pop    rdx
   140032325:	add    BYTE PTR [rdx+0x0],ch
   140032328:	(bad)  
   140032329:	(bad)  
   14003232a:	xor    BYTE PTR [rcx+0x43],dl
   14003232d:	outs   dx,DWORD PTR ds:[rsi]
   14003232e:	jb     0x140032395
   140032330:	rex.B jo 0x1400323a3
   140032333:	ins    BYTE PTR es:[rdi],dx
   140032334:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14003233b:	rex
   14003233c:	rex push rcx
   14003233e:	rex.RB
   14003233f:	rex.B
   140032340:	rex.B
   140032341:	rex
   140032342:	rex.B
   140032343:	rex.RB
   140032344:	rex.B
   140032345:	rex.W push rax
   140032347:	rex.RB
   140032348:	push   r8
   14003234a:	rex.RB
   14003234b:	rex.B
   14003234c:	rex.R
   14003234d:	rex.W
   14003234e:	rex pop rdx
   140032350:	add    BYTE PTR [rax],al
   140032352:	rol    BYTE PTR [rsi],cl
   140032354:	(bad)  
   140032355:	(bad)  
   140032356:	jo     0x1400323c8
   140032358:	outs   dx,BYTE PTR gs:[rsi]
   14003235a:	fs rex.WR (bad) 
   14003235d:	je     0x1400323c8
   14003235f:	outs   dx,BYTE PTR ds:[rsi]
   140032360:	xor    DWORD PTR [rdi+rbp*2+0x40],edx
   140032364:	push   rcx
   140032365:	(bad)
   14003236b:	movsxd esi,DWORD PTR [rbx+rax*2+0x6f]
   14003236f:	outs   dx,BYTE PTR ds:[rsi]
   140032370:	movsxd esp,DWORD PTR [rcx+0x74]
   140032373:	outs   dx,BYTE PTR gs:[rsi]
   140032375:	(bad)  
   140032376:	(bad)  
   140032377:	ins    BYTE PTR es:[rdi],dx
   140032378:	gs rex
   14003237a:	rex
   14003237b:	rex.WXB
   14003237c:	pop    r8
   14003237e:	push   rax
   14003237f:	rex.RB
   140032380:	rex.X
   140032381:	rex.R
   140032382:	rex.W push rax
   140032384:	rex.RB
   140032385:	push   r14
   140032387:	push   rcx
   140032388:	rex.XB push 0x40407261
   14003238e:	rex pop rdx
   140032390:	add    BYTE PTR [rax],al
   140032392:	sub    BYTE PTR [rsi],al
   140032394:	(bad)  
   140032395:	push   rcx
   140032396:	push   rbx
   140032397:	je     0x14003240b
   140032399:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   1400323a0:	pop    rdi
   1400323a1:	jae    0x140032412
   1400323a3:	jb     0x140032419
   1400323a5:	rex push rcx
   1400323a7:	je     0x1400323f9
   1400323a9:	jb     0x140032414
   1400323ab:	jbe    0x14003240e
   1400323ad:	je     0x140032414
   1400323af:	rex
   1400323b0:	rex pop rcx
   1400323b2:	pop    r8
   1400323b4:	push   rax
   1400323b5:	rex.RB
   1400323b6:	push   r14
   1400323b8:	push   rcx
   1400323b9:	push   rbx
   1400323ba:	je     0x14003242e
   1400323bc:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   1400323c3:	rex
   1400323c4:	rex push rdi
   1400323c6:	xor    al,0x43
   1400323c8:	(bad)  
   1400323c9:	jae    0x140032430
   1400323cb:	push   rbx
   1400323cc:	outs   dx,BYTE PTR gs:[rsi]
   1400323ce:	jae    0x140032439
   1400323d0:	je     0x14003243b
   1400323d2:	jbe    0x14003243d
   1400323d4:	je     0x14003244f
   1400323d6:	rex push rcx
   1400323d8:	je     0x14003241a
   1400323da:	rex
   1400323db:	rex pop rdx
   1400323dd:	add    BYTE PTR [rsi+0x14],bl
   1400323e0:	(bad)  
   1400323e1:	jb     0x140032448
   1400323e3:	jae    0x14003244a
   1400323e5:	jb     0x14003245d
   1400323e7:	gs rex push rcx
   1400323ea:	push   rbx
   1400323eb:	je     0x14003245f
   1400323ed:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   1400323f4:	rex.B
   1400323f5:	pop    r8
   1400323f7:	rex.W
   1400323f8:	rex pop rdx
   1400323fa:	add    BYTE PTR [rax],al
   1400323fc:	sbb    DWORD PTR [rbx],eax
   1400323fe:	(bad)  
   1400323ff:	(bad)  
   140032400:	xor    al,0x51
   140032402:	rex.X jns 0x140032479
   140032405:	gs rex.B jb 0x14003247b
   140032409:	(bad)  
   14003240a:	jns    0x14003244c
   14003240c:	rex push rcx
   14003240e:	rex.RB
   14003240f:	rex.B
   140032410:	rex.B
   140032411:	rex.B
   140032412:	rex.RB
   140032413:	push   r14
   140032415:	xor    BYTE PTR [rax+0x41],al
   140032418:	rex.RB
   140032419:	rex.X push rsi
   14003241b:	xor    BYTE PTR [rax+0x40],al
   14003241e:	pop    rdx
   14003241f:	add    BYTE PTR [rsp+rcx*1],dh
   140032422:	(bad)  
   140032423:	data16 jb 0x140032495
   140032426:	ins    DWORD PTR es:[rdi],dx
   140032427:	push   rdx
   140032428:	(bad)  
   140032429:	ja     0x14003246f
   14003242b:	(bad)  
   14003242c:	je     0x14003248f
   14003242e:	rex push rcx
   140032430:	rex.X jns 0x1400324a7
   140032433:	gs rex.B jb 0x1400324a9
   140032437:	(bad)  
   140032438:	jns    0x14003247a
   14003243a:	rex push rbx
   14003243c:	rex.B (bad) 
   14003243e:	push   r14
   140032440:	xor    DWORD PTR [rax+0x50],eax
   140032443:	rex.RB
   140032444:	rex.X
   140032445:	rex.R
   140032446:	rex.W
   140032447:	rex pop rdx
   140032449:	add    BYTE PTR [rdi+0x313f3f02],bl
   14003244f:	push   rcx
   140032450:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140032452:	movsxd esp,DWORD PTR [rcx+0x6c]
   140032455:	gs rex
   140032457:	rex push rcx
   140032459:	rex.RB
   14003245a:	rex.B
   14003245b:	rex.B
   14003245c:	rex pop rax
   14003245e:	pop    rdx
   14003245f:	add    BYTE PTR [rax+0x10],dh
   140032462:	(bad)  
   140032463:	outs   dx,BYTE PTR ds:[rsi]
   140032464:	(bad)  
   140032465:	ins    DWORD PTR es:[rdi],dx
   140032466:	gs rex push rcx
   140032469:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14003246b:	movsxd esp,DWORD PTR [rcx+0x6c]
   14003246e:	gs rex
   140032470:	rex push rcx
   140032472:	rex.RB
   140032473:	rex.X
   140032474:	rex.B (bad) 
   140032476:	push   r14
   140032478:	push   rcx
   140032479:	push   rbx
   14003247a:	je     0x1400324ee
   14003247c:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   140032483:	add    BYTE PTR [rdx],ah
   140032485:	or     al,0x3f
   140032487:	data16 jb 0x1400324f9
   14003248a:	ins    DWORD PTR es:[rdi],dx
   14003248b:	rex.WR (bad) 
   14003248d:	je     0x1400324f8
   14003248f:	outs   dx,BYTE PTR ds:[rsi]
   140032490:	xor    DWORD PTR [rax+0x51],eax
   140032493:	push   rbx
   140032494:	je     0x140032508
   140032496:	imul   ebp,DWORD PTR [rsi+0x67],0x41534040
   14003249d:	(bad)  
   14003249e:	push   r14
   1400324a0:	xor    DWORD PTR [rax+0x50],eax
   1400324a3:	rex.RB
   1400324a4:	rex.X
   1400324a5:	rex.R
   1400324a6:	rex.W
   1400324a7:	rex pop rdx
   1400324a9:	add    dh,cl
   1400324ab:	(bad)  
   1400324ac:	(bad)  
   1400324ad:	(bad)  
   1400324ae:	jo     0x140032520
   1400324b0:	outs   dx,BYTE PTR gs:[rsi]
   1400324b2:	fs rex push rcx
   1400324b5:	push   rbx
   1400324b6:	je     0x14003252a
   1400324b8:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   1400324bf:	rex.B
   1400324c0:	rex.B
   1400324c1:	rex.B
   1400324c2:	rex.RB
   1400324c3:	push   r14
   1400324c5:	xor    DWORD PTR [rax+0x56],eax
   1400324c8:	push   rcx
   1400324c9:	rex.WR (bad) 
   1400324cb:	je     0x140032536
   1400324cd:	outs   dx,BYTE PTR ds:[rsi]
   1400324ce:	xor    DWORD PTR [rbx+0x74],edx
   1400324d1:	jb     0x14003253c
   1400324d3:	outs   dx,BYTE PTR ds:[rsi]
   1400324d4:	addr32 rex
   1400324d6:	rex
   1400324d7:	rex pop rdx
   1400324d9:	add    BYTE PTR [rsi],cl
   1400324db:	(bad)  
   1400324dd:	ins    BYTE PTR es:[rdi],dx
   1400324de:	(bad)  
   1400324df:	outs   dx,BYTE PTR ds:[rsi]
   1400324e0:	addr32 jne 0x140032544
   1400324e3:	addr32 gs rex push rcx
   1400324e7:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400324e9:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400324ec:	gs rex
   1400324ee:	rex push rcx
   1400324f0:	rex.RB
   1400324f1:	rex.X
   1400324f2:	rex.B (bad) 
   1400324f4:	push   r15
   1400324f6:	xor    al,0x4c
   1400324f8:	(bad)  
   1400324f9:	outs   dx,BYTE PTR ds:[rsi]
   1400324fa:	addr32 jne 0x14003255e
   1400324fd:	rex xor DWORD PTR gs:[eax+0x58],eax
   140032503:	pop    rdx
   140032504:	add    BYTE PTR [rax],al
   140032506:	(bad)  
   140032507:	add    al,0x3f
   140032509:	(bad)  
   14003250a:	cmp    BYTE PTR [rax+0x59],al
   14003250d:	pop    r15
   14003250f:	rex.WRX
   140032510:	rex.B
   140032511:	rex.RB
   140032512:	rex.X push rsi
   140032514:	push   rcx
   140032515:	push   rbx
   140032516:	je     0x14003258a
   140032518:	imul   ebp,DWORD PTR [rsi+0x67],0x40304040
   14003251f:	pop    rdx
   140032520:	add    BYTE PTR [rax],al
   140032522:	sbb    DWORD PTR [rsi],eax
   140032524:	(bad)  
   140032525:	push   rcx
   140032526:	push   rbx
   140032527:	je     0x14003259b
   140032529:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   140032530:	pop    rdi
   140032531:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140032534:	je     0x140032597
   140032536:	imul   ebp,DWORD PTR [rsi+0x73],0x50745140
   14003253d:	jb     0x1400325a8
   14003253f:	jbe    0x1400325a2
   140032541:	je     0x1400325a8
   140032543:	rex
   140032544:	rex pop rcx
   140032546:	pop    r15
   140032548:	rex.WRX push rax
   14003254a:	rex.RB
   14003254b:	rex.X push rsi
   14003254d:	push   rcx
   14003254e:	push   rbx
   14003254f:	je     0x1400325c3
   140032551:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   140032558:	rex
   140032559:	rex
   14003255a:	rex.B
   14003255b:	rex.RB
   14003255c:	rex.X push rsi
   14003255e:	push   rcx
   14003255f:	push   rbx
   140032560:	je     0x1400325d4
   140032562:	imul   ebp,DWORD PTR [rsi+0x67],0x34574040
   140032569:	rex.XB (bad) 
   14003256b:	jae    0x1400325d2
   14003256d:	push   rbx
   14003256e:	outs   dx,BYTE PTR gs:[rsi]
   140032570:	jae    0x1400325db
   140032572:	je     0x1400325dd
   140032574:	jbe    0x1400325df
   140032576:	je     0x1400325f1
   140032578:	rex push rcx
   14003257a:	je     0x1400325bc
   14003257c:	rex
   14003257d:	rex pop rdx
   14003257f:	add    bl,ch
   140032581:	adc    DWORD PTR [rdi],edi
   140032583:	jno    0x1400325cd
   140032585:	(bad)  
   140032586:	jae    0x1400325f0
   140032588:	rex
   140032589:	rex pop rcx
   14003258b:	rex.B
   14003258c:	rex.WB
   14003258d:	rex.B
   14003258e:	rex.RB
   14003258f:	rex.X push rsi
   140032591:	push   rcx
   140032592:	push   rbx
   140032593:	je     0x140032607
   140032595:	imul   ebp,DWORD PTR [rsi+0x67],0x40494040
   14003259c:	pop    rdx
   14003259d:	add    ch,cl
   14003259f:	(bad)  
   1400325a0:	(bad)  
   1400325a1:	(bad)  
   1400325a2:	jo     0x140032614
   1400325a4:	outs   dx,BYTE PTR gs:[rsi]
   1400325a6:	fs rex push rcx
   1400325a9:	push   rbx
   1400325aa:	je     0x14003261e
   1400325ac:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   1400325b3:	rex.B
   1400325b4:	rex.B
   1400325b5:	rex.B
   1400325b6:	rex.RB
   1400325b7:	push   r14
   1400325b9:	xor    DWORD PTR [rax+0x56],eax
   1400325bc:	push   rcx
   1400325bd:	rex.XB push 0x40407261
   1400325c3:	rex pop rdx
   1400325c5:	add    BYTE PTR [rbx+0xc],bh
   1400325c8:	(bad)  
   1400325c9:	addr32 gs je 0x140032619
   1400325cd:	(bad)  
   1400325ce:	outs   dx,BYTE PTR ds:[rsi]
   1400325cf:	rex.B outs dx,BYTE PTR ds:[esi]
   1400325d2:	rex.XB outs dx,DWORD PTR fs:[rsi]
   1400325d5:	jne    0x140032645
   1400325d7:	je     0x14003264b
   1400325d9:	jns    0x14003261b
   1400325db:	push   rcx
   1400325dc:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400325de:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400325e1:	gs push rax
   1400325e3:	jb     0x14003264e
   1400325e5:	jbe    0x140032648
   1400325e7:	je     0x14003264e
   1400325e9:	rex
   1400325ea:	rex push rbx
   1400325ec:	pop    r8
   1400325ee:	rex.B
   1400325ef:	rex.RB
   1400325f0:	rex.X push rsi
   1400325f2:	push   rcx
   1400325f3:	push   rbx
   1400325f4:	je     0x140032668
   1400325f6:	imul   ebp,DWORD PTR [rsi+0x67],0x45414040
   1400325fd:	push   r15
   1400325ff:	xor    al,0x4c
   140032601:	(bad)  
   140032602:	outs   dx,BYTE PTR ds:[rsi]
   140032603:	addr32 jne 0x140032667
   140032606:	addr32 gs rex push rcx
   14003260a:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14003260c:	movsxd esp,DWORD PTR [rcx+0x6c]
   14003260f:	gs rex
   140032611:	rex
   140032612:	rex.B
   140032613:	rex.RB
   140032614:	push   r15
   140032616:	xor    al,0x53
   140032618:	movsxd esi,DWORD PTR [rdx+0x69]
   14003261b:	jo     0x140032691
   14003261d:	xor    al,0x40
   140032620:	rex.B
   140032621:	rex.RB
   140032622:	push   r15
   140032624:	xor    al,0x43
   140032626:	outs   dx,DWORD PTR ds:[rsi]
   140032627:	jne    0x140032697
   140032629:	je     0x14003269d
   14003262b:	jns    0x14003266d
   14003262d:	xor    al,0x40
   14003262f:	rex pop rdx
   140032631:	add    BYTE PTR [rdx+0x656e3f10],dl
   140032637:	js     0x1400326ad
   140032639:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14003263b:	fs gs rex push rcx
   14003263f:	rex.W (bad) 
   140032641:	jae    0x1400326ab
   140032643:	rex.R (bad) 
   140032645:	je     0x1400326a8
   140032647:	rex
   140032648:	rex push rbx
   14003264a:	push   r8
   14003264c:	rex.RB
   14003264d:	push   r13
   14003264f:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   140032651:	fs rex xor DWORD PTR gs:[rax+0x50],eax
   140032657:	rex.RB
   140032658:	push   r13
   14003265a:	xor    dh,BYTE PTR [rcx]
   14003265c:	rex
   14003265d:	rex pop rdx
   14003265f:	add    BYTE PTR [rcx+0x6c613f06],ch
   140032665:	ins    BYTE PTR es:[rdi],dx
   140032666:	outs   dx,DWORD PTR ds:[rsi]
   140032667:	movsxd esp,DWORD PTR [rcx+0x74]
   14003266a:	rex.WRX outs dx,DWORD PTR gs:[rsi]
   14003266d:	fs gs rex push rcx
   140032671:	rex.W (bad) 
   140032673:	jae    0x1400326dd
   140032675:	rex.R (bad) 
   140032677:	je     0x1400326da
   140032679:	rex
   14003267a:	rex push rcx
   14003267c:	rex.RB
   14003267d:	rex.B
   14003267e:	push   r8
   140032680:	rex.RB
   140032681:	pop    r8
   140032683:	rex.W
   140032684:	rex pop rdx
   140032686:	add    BYTE PTR [rax],al
   140032688:	cmp    ecx,DWORD PTR [rdi]
   14003268a:	(bad)  
   14003268b:	ins    BYTE PTR es:[rdi],dx
   14003268c:	gs data16 je 0x1400326d0
   140032690:	push   rcx
   140032691:	push   rbx
   140032692:	je     0x140032706
   140032694:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14003269b:	rex.X
   14003269c:	rex.B (bad) 
   14003269e:	push   r14
   1400326a0:	xor    DWORD PTR [rax+0x48],eax
   1400326a3:	rex pop rdx
   1400326a5:	add    BYTE PTR [rdi],cl
   1400326a7:	or     al,0x3f
   1400326a9:	data16 jb 0x140032711
   1400326ac:	rex.WRX outs dx,DWORD PTR gs:[rsi]
   1400326af:	fs gs rex push rcx
   1400326b3:	rex.W (bad) 
   1400326b5:	jae    0x14003271f
   1400326b7:	rex.R (bad) 
   1400326b9:	je     0x14003271c
   1400326bb:	rex
   1400326bc:	rex push rcx
   1400326be:	rex.RB
   1400326bf:	rex.B
   1400326c0:	pop    r8
   1400326c2:	push   rax
   1400326c3:	rex.RB
   1400326c4:	pop    r8
   1400326c6:	rex pop rdx
   1400326c8:	add    BYTE PTR [rax],al
   1400326ca:	scas   al,BYTE PTR es:[rdi]
   1400326cb:	adc    edi,DWORD PTR [rdi]
   1400326cd:	jb     0x140032734
   1400326cf:	push   0x40687361
   1400326d4:	push   rcx
   1400326d5:	rex.W (bad) 
   1400326d7:	jae    0x140032741
   1400326d9:	rex.R (bad) 
   1400326db:	je     0x14003273e
   1400326dd:	rex
   1400326de:	rex push rcx
   1400326e0:	rex.RB
   1400326e1:	rex.B
   1400326e2:	pop    r8
   1400326e4:	rex.W
   1400326e5:	rex pop rdx
   1400326e7:	add    BYTE PTR [rbx+0xd],dl
   1400326ea:	(bad)  
   1400326eb:	imul   ebp,DWORD PTR [rsi+0x73],0x40747265
   1400326f2:	push   rcx
   1400326f3:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   1400326fb:	rex
   1400326fc:	rex push rcx
   1400326fe:	rex.RB
   1400326ff:	rex.B
   140032700:	push   r8
   140032702:	rex.RB
   140032703:	push   r8
   140032705:	rex.RB
   140032706:	pop    r8
   140032708:	rex.W
   140032709:	rex pop rdx
   14003270b:	add    ah,al
   14003270d:	or     al,0x3f
   14003270f:	push   0x68537361
   140032714:	jb     0x14003278b
   140032716:	outs   dx,BYTE PTR ds:[rsi]
   140032717:	imul   eax,DWORD PTR [rax+0x51],0x48
   14003271b:	(bad)  
   14003271c:	jae    0x140032786
   14003271e:	rex.R (bad) 
   140032720:	je     0x140032783
   140032722:	rex
   140032723:	rex push rcx
   140032725:	rex.RB
   140032726:	rex.B
   140032727:	pop    r8
   140032729:	pop    rax
   14003272a:	pop    rdx
   14003272b:	add    BYTE PTR [rbx],al
   14003272d:	or     edi,DWORD PTR [rdi]
   14003272f:	outs   dx,BYTE PTR gs:[rsi]
   140032731:	fs jae 0x14003278b
   140032734:	imul   esi,DWORD PTR [rax+rbp*2+0x40],0x72745351
   14003273c:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140032743:	rex.X
   140032744:	pop    r15
   140032746:	rex.WRX
   140032747:	rex.B
   140032748:	rex.RB
   140032749:	rex.X push rsi
   14003274b:	xor    DWORD PTR [rax+0x57],eax
   14003274e:	xor    al,0x43
   140032750:	(bad)  
   140032751:	jae    0x1400327b8
   140032753:	push   rbx
   140032754:	outs   dx,BYTE PTR gs:[rsi]
   140032756:	jae    0x1400327c1
   140032758:	je     0x1400327c3
   14003275a:	jbe    0x1400327c5
   14003275c:	je     0x1400327d7
   14003275e:	rex push rcx
   140032760:	je     0x1400327a2
   140032762:	rex
   140032763:	rex pop rdx
   140032765:	add    BYTE PTR [rcx+0x313f3f02],cl
   14003276b:	push   rcx
   14003276c:	imul   r13d,DWORD PTR [rbp+r12*2+0x40],0x41455540
   140032775:	rex.B
   140032776:	rex pop rax
   140032778:	pop    rdx
   140032779:	add    cl,ch
   14003277b:	adc    BYTE PTR [rdi],bh
   14003277d:	outs   dx,DWORD PTR ds:[rsi]
   14003277e:	jo     0x1400327e5
   140032780:	outs   dx,BYTE PTR ds:[rsi]
   140032781:	rex push rcx
   140032783:	imul   r13d,DWORD PTR [rbp+r12*2+0x40],0x41455140
   14003278c:	pop    r15
   14003278e:	rex.WRX push rax
   140032790:	rex.RB
   140032791:	push   r13
   140032793:	pop    rdi
   140032794:	imul   ebp,DWORD PTR [rdi+0x62],0x40406675
   14003279b:	push   rsi
   14003279c:	(bad)  
   14003279d:	and    al,0x51
   14003279f:	rex.RX ins BYTE PTR es:[rdi],dx
   1400327a1:	(bad)  
   1400327a2:	addr32 jae 0x1400327e5
   1400327a5:	push   rdi
   1400327a6:	xor    al,0x4f
   1400327a8:	jo     0x14003280f
   1400327aa:	outs   dx,BYTE PTR ds:[rsi]
   1400327ab:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   1400327ad:	fs gs rex.RX ins BYTE PTR es:[rdi],dx
   1400327b1:	(bad)  
   1400327b2:	addr32 rex push rcx
   1400327b5:	rex.WB
   1400327b6:	rex.WRXB
   1400327b7:	rex.R
   1400327b8:	gs jbe 0x140032824
   1400327bb:	movsxd esp,DWORD PTR [rbp+0x40]
   1400327be:	rex
   1400327bf:	rex
   1400327c0:	rex push rsi
   1400327c2:	(bad)  
   1400327c3:	and    al,0x51
   1400327c5:	rex.RX ins BYTE PTR es:[rdi],dx
   1400327c7:	(bad)  
   1400327c8:	addr32 jae 0x14003280b
   1400327cb:	push   rdi
   1400327cc:	xor    al,0x46
   1400327ce:	imul   ebp,DWORD PTR [rbp+riz*2+0x48],0x6c646e61
   1400327d6:	gs rex.RX ins BYTE PTR es:[rdi],dx
   1400327d9:	(bad)  
   1400327da:	addr32 rex push rcx
   1400327dd:	imul   r13d,DWORD PTR [rbp+r12*2+0x44],0x63697665
   1400327e6:	gs rex
   1400327e8:	rex
   1400327e9:	rex
   1400327ea:	rex
   1400327eb:	rex pop rdx
   1400327ed:	add    ah,ah
   1400327ef:	(bad)  
   1400327f0:	(bad)  
   1400327f1:	(bad)  
   1400327f2:	jb     0x14003285b
   1400327f4:	rex push rcx
   1400327f6:	push   rbx
   1400327f7:	je     0x14003286b
   1400327f9:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140032800:	rex.X
   140032801:	rex.B (bad) 
   140032803:	push   r14
   140032805:	xor    DWORD PTR [rax+0x41],eax
   140032808:	rex.RB
   140032809:	rex.X push rsi
   14003280b:	xor    DWORD PTR [rax+0x30],eax
   14003280e:	rex pop rdx
   140032810:	add    BYTE PTR [rax],al
   140032812:	cmp    eax,0x72653f0b
   140032817:	jb     0x140032888
   140032819:	jb     0x14003286e
   14003281b:	je     0x14003288f
   14003281d:	imul   ebp,DWORD PTR [rsi+0x67],0x4f495140
   140032824:	rex.R
   140032825:	gs jbe 0x140032891
   140032828:	movsxd esp,DWORD PTR [rbp+0x40]
   14003282b:	rex push rcx
   14003282d:	rex.RB
   14003282e:	rex.X
   14003282f:	rex.B (bad) 
   140032831:	push   r14
   140032833:	push   rcx
   140032834:	push   rbx
   140032835:	je     0x1400328a9
   140032837:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   14003283e:	add    BYTE PTR [rax],al
   140032840:	(bad)  
   140032841:	adc    BYTE PTR [rdi],bh
   140032843:	outs   dx,DWORD PTR ds:[rsi]
   140032844:	jo     0x1400328ab
   140032846:	outs   dx,BYTE PTR ds:[rsi]
   140032847:	rex push rcx
   140032849:	imul   r13d,DWORD PTR [rbp+r12*2+0x40],0x41455540
   140032852:	pop    r15
   140032854:	rex.WRX push rsi
   140032856:	(bad)  
   140032857:	and    al,0x51
   140032859:	rex.RX ins BYTE PTR es:[rdi],dx
   14003285b:	(bad)  
   14003285c:	addr32 jae 0x14003289f
   14003285f:	push   rdi
   140032860:	xor    al,0x4f
   140032862:	jo     0x1400328c9
   140032864:	outs   dx,BYTE PTR ds:[rsi]
   140032865:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140032867:	fs gs rex.RX ins BYTE PTR es:[rdi],dx
   14003286b:	(bad)  
   14003286c:	addr32 rex push rcx
   14003286f:	rex.WB
   140032870:	rex.WRXB
   140032871:	rex.R
   140032872:	gs jbe 0x1400328de
   140032875:	movsxd esp,DWORD PTR [rbp+0x40]
   140032878:	rex
   140032879:	rex
   14003287a:	rex
   14003287b:	rex pop rdx
   14003287d:	add    BYTE PTR [rdi+0x65733f15],ah
   140032883:	je     0x1400328cb
   140032885:	imul   ebp,DWORD PTR [rbp+riz*2+0x4e],0x40656d61
   14003288d:	push   rcx
   14003288e:	imul   r13d,DWORD PTR [rbp+r12*2+0x40],0x41455140
   140032897:	pop    r8
   140032899:	rex.B
   14003289a:	rex.RB
   14003289b:	rex.X push rsi
   14003289d:	push   rcx
   14003289e:	push   rbx
   14003289f:	je     0x140032913
   1400328a1:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   1400328a8:	add    BYTE PTR [rax],al
   1400328aa:	mov    al,0x0
   1400328ac:	(bad)  
   1400328ad:	(bad)  
   1400328ae:	xor    BYTE PTR [rcx+0x46],dl
   1400328b1:	imul   ebp,DWORD PTR [rbp+riz*2+0x40],0x41455140
   1400328b9:	rex.B
   1400328ba:	rex pop rax
   1400328bc:	pop    rdx
   1400328bd:	add    BYTE PTR [rbx+0x313f3f02],cl
   1400328c3:	push   rcx
   1400328c4:	imul   r13d,DWORD PTR [rbp+r12*2+0x49],0x406f666e
   1400328cd:	rex push rcx
   1400328cf:	rex.RB
   1400328d0:	rex.B
   1400328d1:	rex.B
   1400328d2:	rex pop rax
   1400328d4:	pop    rdx
   1400328d5:	add    BYTE PTR [rdx],dh
   1400328d7:	add    edi,DWORD PTR [rdi]
   1400328d9:	(bad)  
   1400328da:	xor    al,0x51
   1400328dc:	imul   r14d,DWORD PTR [rdx+0x40],0x41455140
   1400328e4:	rex.B
   1400328e5:	rex.B
   1400328e6:	rex.RB
   1400328e7:	push   r14
   1400328e9:	xor    BYTE PTR [rax+0x41],al
   1400328ec:	rex.RB
   1400328ed:	rex.X push rsi
   1400328ef:	xor    BYTE PTR [rax+0x40],al
   1400328f2:	pop    rdx
   1400328f3:	add    BYTE PTR [rcx],bh
   1400328f5:	(bad)  
   1400328f6:	(bad)  
   1400328f7:	(bad)  
   1400328f8:	(bad)
   1400328fd:	je     0x140032964
   1400328ff:	imul   r14d,DWORD PTR [rdx+0x40],0x6c694651
   140032907:	rex.WB outs dx,BYTE PTR gs:[rsi]
   14003290a:	outs   dx,WORD PTR ds:[rsi]
   14003290c:	rex
   14003290d:	rex push rcx
   14003290f:	rex.RB
   140032910:	rex.X
   140032911:	rex.B (bad) 
   140032913:	push   r14
   140032915:	push   rcx
   140032916:	imul   r14d,DWORD PTR [rdx+0x40],0x5a5840
   14003291e:	mov    bh,0x0
   140032920:	(bad)  
   140032921:	(bad)  
   140032922:	xor    BYTE PTR [rcx+0x46],dl
   140032925:	imul   ebp,DWORD PTR [rbp+riz*2+0x49],0x406f666e
   14003292d:	rex push rcx
   14003292f:	rex.RB
   140032930:	rex.B
   140032931:	rex.B
   140032932:	rex
   140032933:	rex.B
   140032934:	rex.RB
   140032935:	rex.X push rsi
   140032937:	push   rcx
   140032938:	push   rbx
   140032939:	je     0x1400329ad
   14003293b:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   140032942:	add    BYTE PTR [rax],al
   140032944:	sbb    edx,DWORD PTR [rax]
   140032946:	(bad)  
   140032947:	ins    DWORD PTR es:[rdi],dx
   140032948:	imul   esp,DWORD PTR [rax+rax*2+0x51],0x69727453
   140032950:	outs   dx,BYTE PTR ds:[rsi]
   140032951:	addr32 rex
   140032953:	rex push rcx
   140032955:	rex.RB
   140032956:	rex.X
   140032957:	rex.B (bad) 
   140032959:	push   r14
   14003295b:	xor    DWORD PTR [rax+0x48],eax
   14003295e:	rex.W
   14003295f:	rex pop rdx
   140032961:	add    BYTE PTR [rip+0x6e693f0d],al        # 0x1ae6c6874
   140032967:	fs gs js 0x1400329ba
   14003296b:	rex push cx
   14003296e:	push   rbx
   14003296f:	je     0x1400329e3
   140032971:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140032978:	rex.X
   140032979:	rex.B
   14003297a:	rex.W
   14003297b:	rex.B
   14003297c:	rex.RB
   14003297d:	push   r14
   14003297f:	push   rcx
   140032980:	push   rdx
   140032981:	gs addr32 rex.RB js 0x1400329f6
   140032986:	rex
   140032987:	rex
   140032988:	rex.W
   140032989:	rex pop rdx
   14003298b:	add    BYTE PTR [rbx],al
   14003298d:	add    DWORD PTR [rdi],edi
   14003298f:	(bad)  
   140032990:	xor    BYTE PTR [rcx+0x4c],dl
   140032993:	outs   dx,DWORD PTR ds:[rsi]
   140032994:	movsxd esp,DWORD PTR [rcx+0x6c]
   140032997:	gs rex
   140032999:	rex push rcx
   14003299b:	rex.RB
   14003299c:	rex.B
   14003299d:	rex.B
   14003299e:	rex
   14003299f:	rex.B
   1400329a0:	rex.RB
   1400329a1:	rex.X push rsi
   1400329a3:	push   rcx
   1400329a4:	push   rbx
   1400329a5:	je     0x140032a19
   1400329a7:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   1400329ae:	add    BYTE PTR [rax],al
   1400329b0:	push   rdi
   1400329b1:	add    DWORD PTR [rdi],edi
   1400329b3:	(bad)  
   1400329b4:	xor    BYTE PTR [rcx+0x52],dl
   1400329b7:	gs addr32 rex.RB js 0x140032a2c
   1400329bc:	rex
   1400329bd:	rex push rcx
   1400329bf:	rex.RB
   1400329c0:	rex.B
   1400329c1:	rex.B
   1400329c2:	rex
   1400329c3:	rex.B
   1400329c4:	rex.RB
   1400329c5:	rex.X push rsi
   1400329c7:	push   rcx
   1400329c8:	push   rbx
   1400329c9:	je     0x140032a3d
   1400329cb:	imul   ebp,DWORD PTR [rsi+0x67],0x34574040
   1400329d2:	rex.XB (bad) 
   1400329d4:	jae    0x140032a3b
   1400329d6:	push   rbx
   1400329d7:	outs   dx,BYTE PTR gs:[rsi]
   1400329d9:	jae    0x140032a44
   1400329db:	je     0x140032a46
   1400329dd:	jbe    0x140032a48
   1400329df:	je     0x140032a5a
   1400329e1:	rex push rcx
   1400329e3:	je     0x140032a25
   1400329e5:	rex push rdi
   1400329e7:	xor    al,0x50
   1400329e9:	(bad)  
   1400329ea:	je     0x140032a60
   1400329ec:	gs jb  0x140032a5d
   1400329ef:	push   rbx
   1400329f0:	jns    0x140032a60
   1400329f2:	je     0x140032a55
   1400329f4:	js     0x140032a36
   1400329f6:	xor    BYTE PTR [rax+0x40],al
   1400329f9:	pop    rdx
   1400329fa:	add    BYTE PTR [rax],al
   1400329fc:	or     edi,DWORD PTR cs:[rdi]
   1400329ff:	gs jb  0x140032a63
   140032a02:	jae    0x140032a69
   140032a04:	rex push rcx
   140032a06:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   140032a0e:	rex
   140032a0f:	rex push rcx
   140032a11:	rex.RB
   140032a12:	rex.B
   140032a13:	push   r8
   140032a15:	rex.RB
   140032a16:	push   r8
   140032a18:	rex.RB
   140032a19:	pop    r8
   140032a1b:	push   rax
   140032a1c:	rex.RB
   140032a1d:	push   r8
   140032a1f:	rex.RB
   140032a20:	pop    r8
   140032a22:	rex pop rdx
   140032a24:	add    BYTE PTR [rax],al
   140032a26:	enter  0x3f13,0x72
   140032a2a:	gs ins DWORD PTR es:[rdi],dx
   140032a2c:	outs   dx,DWORD PTR ds:[rsi]
   140032a2d:	jbe    0x140032a94
   140032a2f:	rex push rcx
   140032a31:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   140032a39:	rex
   140032a3a:	rex push rcx
   140032a3c:	rex.RB
   140032a3d:	rex.B
   140032a3e:	pop    r8
   140032a40:	rex.W
   140032a41:	rex pop rdx
   140032a43:	add    BYTE PTR [rdi+rdx*1],ch
   140032a46:	(bad)  
   140032a47:	jae    0x140032ab9
   140032a49:	ins    BYTE PTR es:[rdi],dx
   140032a4a:	imul   esi,DWORD PTR [rax+rax*2+0x51],0x69727453
   140032a52:	outs   dx,BYTE PTR ds:[rsi]
   140032a53:	addr32 rex
   140032a55:	rex push rcx
   140032a57:	rex.RB
   140032a58:	rex.X
   140032a59:	rex.B (bad) 
   140032a5b:	push   r14
   140032a5d:	push   rcx
   140032a5e:	push   rbx
   140032a5f:	je     0x140032ad3
   140032a61:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   140032a68:	rex
   140032a69:	rex
   140032a6a:	rex.B
   140032a6b:	rex.RB
   140032a6c:	rex.X push rsi
   140032a6e:	xor    DWORD PTR [rax+0x57],eax
   140032a71:	xor    al,0x53
   140032a73:	jo     0x140032ae1
   140032a75:	imul   esi,DWORD PTR [rdx+rax*2+0x65],0x69766168
   140032a7d:	outs   dx,DWORD PTR ds:[rsi]
   140032a7e:	jb     0x140032ac0
   140032a80:	xor    DWORD PTR [rax+0x57],eax
   140032a83:	xor    al,0x43
   140032a85:	(bad)  
   140032a86:	jae    0x140032aed
   140032a88:	push   rbx
   140032a89:	outs   dx,BYTE PTR gs:[rsi]
   140032a8b:	jae    0x140032af6
   140032a8d:	je     0x140032af8
   140032a8f:	jbe    0x140032afa
   140032a91:	je     0x140032b0c
   140032a93:	rex push rcx
   140032a95:	je     0x140032ad7
   140032a97:	rex
   140032a98:	rex pop rdx
   140032a9a:	add    BYTE PTR [rax],al
   140032a9c:	ficomp WORD PTR [rdx]
   140032a9e:	(bad)  
   140032a9f:	ja     0x140032b0a
   140032aa1:	ins    BYTE PTR es:[rdi],dx
   140032aa2:	ins    BYTE PTR es:[rdi],dx
   140032aa3:	rex.RXB jb 0x140032b15
   140032aa6:	ja     0x140032ae8
   140032aa8:	push   rcx
   140032aa9:	rex.W (bad) 
   140032aab:	jae    0x140032b15
   140032aad:	rex.R (bad) 
   140032aaf:	je     0x140032b12
   140032ab1:	rex
   140032ab2:	rex push rcx
   140032ab4:	rex.RB
   140032ab5:	rex.B
   140032ab6:	pop    r15
   140032ab8:	rex.WRX pop rax
   140032aba:	pop    rdx
   140032abb:	add    ah,ch
   140032abd:	or     edi,DWORD PTR [rdi]
   140032abf:	imul   si,WORD PTR [rdx+0x73],0x4e74
   140032ac5:	outs   dx,DWORD PTR ds:[rsi]
   140032ac6:	fs gs rex push rcx
   140032aca:	rex.W (bad) 
   140032acc:	jae    0x140032b36
   140032ace:	rex.R (bad) 
   140032ad0:	je     0x140032b33
   140032ad2:	rex
   140032ad3:	rex push rcx
   140032ad5:	rex.RB
   140032ad6:	rex.B
   140032ad7:	push   r8
   140032ad9:	rex.RB
   140032ada:	push   r13
   140032adc:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   140032ade:	fs rex xor DWORD PTR gs:[rax+0x58],eax
   140032ae4:	pop    rdx
   140032ae5:	add    BYTE PTR [rdx+rax*1+0x51313f3f],bh
   140032aec:	push   rdx
   140032aed:	gs addr32 rex.RB js 0x140032b62
   140032af2:	rex
   140032af3:	rex push rcx
   140032af5:	rex.RB
   140032af6:	rex.B
   140032af7:	rex.B
   140032af8:	rex pop rax
   140032afa:	pop    rdx
   140032afb:	add    BYTE PTR [rbp+0x4],cl
   140032afe:	(bad)  
   140032aff:	(bad)  
   140032b00:	ss push rcx
   140032b02:	push   rsp
   140032b03:	gs js  0x140032b7a
   140032b06:	push   rbx
   140032b07:	je     0x140032b7b
   140032b09:	gs (bad) 
   140032b0b:	ins    DWORD PTR es:[rdi],dx
   140032b0c:	rex
   140032b0d:	rex push rcx
   140032b0f:	rex.RB
   140032b10:	rex.B
   140032b11:	rex.B
   140032b12:	rex.B
   140032b13:	rex.RB
   140032b14:	push   r14
   140032b16:	xor    BYTE PTR [rax+0x44],al
   140032b19:	rex pop rdx
   140032b1b:	add    BYTE PTR [rax+0x4],dl
   140032b1e:	(bad)  
   140032b1f:	(bad)  
   140032b20:	ss push rcx
   140032b22:	push   rsp
   140032b23:	gs js  0x140032b9a
   140032b26:	push   rbx
   140032b27:	je     0x140032b9b
   140032b29:	gs (bad) 
   140032b2b:	ins    DWORD PTR es:[rdi],dx
   140032b2c:	rex
   140032b2d:	rex push rcx
   140032b2f:	rex.RB
   140032b30:	rex.B
   140032b31:	rex.B
   140032b32:	rex.B
   140032b33:	rex.RB
   140032b34:	push   r14
   140032b36:	xor    BYTE PTR [rax+0x48],al
   140032b39:	rex pop rdx
   140032b3b:	add    BYTE PTR [rcx+rax*1],cl
   140032b3e:	(bad)  
   140032b3f:	(bad)  
   140032b40:	xor    BYTE PTR [rcx+0x4d],dl
   140032b43:	gs jae 0x140032bb9
   140032b46:	(bad)  
   140032b47:	rex.WR outs dx,DWORD PTR gs:[esi]
   140032b4b:	addr32 addr32 gs jb 0x140032b90
   140032b50:	rex push rcx
   140032b52:	rex.RB
   140032b53:	rex.B
   140032b54:	rex.B
   140032b55:	rex push rax
   140032b57:	rex.RB
   140032b58:	rex.X
   140032b59:	rex.R
   140032b5a:	rex.W xor BYTE PTR [rax+0x5a],al
   140032b5e:	add    BYTE PTR [rax],al
   140032b60:	or     eax,0x6c633f08
   140032b65:	gs (bad) 
   140032b67:	jb     0x140032ba9
   140032b69:	push   rcx
   140032b6a:	push   rbx
   140032b6b:	je     0x140032bdf
   140032b6d:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140032b74:	rex.B
   140032b75:	pop    r8
   140032b77:	pop    rax
   140032b78:	pop    rdx
   140032b79:	add    ah,al
   140032b7b:	(bad)  
   140032b7c:	(bad)  
   140032b7d:	(bad)  
   140032b7e:	jo     0x140032bf0
   140032b80:	outs   dx,BYTE PTR gs:[rsi]
   140032b82:	fs rex push rcx
   140032b85:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   140032b8d:	rex
   140032b8e:	rex push rcx
   140032b90:	rex.RB
   140032b91:	rex.B
   140032b92:	push   r8
   140032b94:	rex.RB
   140032b95:	push   r8
   140032b97:	rex.RB
   140032b98:	pop    r8
   140032b9a:	rex.B
   140032b9b:	rex.RB
   140032b9c:	rex.X push rbp
   140032b9e:	xor    DWORD PTR [rax+0x40],eax
   140032ba1:	pop    rdx
   140032ba2:	add    BYTE PTR [rax],al
   140032ba4:	adc    dil,BYTE PTR [r15]
   140032ba7:	jno    0x140032c1c
   140032ba9:	je     0x140032c1d
   140032bab:	movsxd ebp,DWORD PTR [rbp+0x70]
   140032bae:	rex
   140032baf:	rex pop rcx
   140032bb1:	rex.B
   140032bb2:	rex.W
   140032bb3:	rex.B
   140032bb4:	rex.RB
   140032bb5:	rex.X push rsi
   140032bb7:	push   rcx
   140032bb8:	rex.X jns 0x140032c2f
   140032bbb:	gs rex.B jb 0x140032c31
   140032bbf:	(bad)  
   140032bc0:	jns    0x140032c02
   140032bc2:	xor    BYTE PTR [rax+0x5a],al
   140032bc6:	add    BYTE PTR [rax],al
   140032bc8:	mov    esi,0x70613f06
   140032bcd:	jo     0x140032c34
   140032bcf:	outs   dx,BYTE PTR ds:[rsi]
   140032bd0:	fs rex push rcx
   140032bd3:	rex.X jns 0x140032c4a
   140032bd6:	gs rex.B jb 0x140032c4c
   140032bda:	(bad)  
   140032bdb:	jns    0x140032c1d
   140032bdd:	rex push rcx
   140032bdf:	rex.RB
   140032be0:	rex.B
   140032be1:	rex.B
   140032be2:	rex.B
   140032be3:	rex.RB
   140032be4:	push   r14
   140032be6:	xor    DWORD PTR [rax+0x41],eax
   140032be9:	rex.RB
   140032bea:	rex.X push rsi
   140032bec:	xor    DWORD PTR [rax+0x40],eax
   140032bef:	pop    rdx
   140032bf0:	add    BYTE PTR [rax],al
   140032bf2:	add    BYTE PTR [r15],r15b
   140032bf5:	(bad)  
   140032bf6:	xor    BYTE PTR [rcx+0x42],dl
   140032bf9:	jns    0x140032c6f
   140032bfb:	gs rex.B jb 0x140032c71
   140032bff:	(bad)  
   140032c00:	jns    0x140032c42
   140032c02:	rex push rcx
   140032c04:	rex.RB
   140032c05:	rex.B
   140032c06:	rex.B
   140032c07:	rex
   140032c08:	rex.B
   140032c09:	rex.RB
   140032c0a:	rex.X push rsi
   140032c0c:	xor    BYTE PTR [rax+0x40],al
   140032c0f:	pop    rdx
   140032c10:	add    BYTE PTR [rax],al
   140032c12:	call   0x1a1676b20
   140032c17:	je     0x140032c7a
   140032c19:	rex push rcx
   140032c1b:	rex.X jns 0x140032c92
   140032c1e:	gs rex.B jb 0x140032c94
   140032c22:	(bad)  
   140032c23:	jns    0x140032c65
   140032c25:	rex push rcx
   140032c27:	rex.RB
   140032c28:	rex.X
   140032c29:	push   r8
   140032c2b:	rex.RB
   140032c2c:	rex.X
   140032c2d:	rex.R pop rax
   140032c2f:	pop    rdx
   140032c30:	add    BYTE PTR [rax],al
   140032c32:	rex.WRXB sbb QWORD PTR [r15],r15
   140032c35:	je     0x140032ca6
   140032c37:	push   rbp
   140032c38:	je     0x140032ca0
   140032c3a:	cmp    BYTE PTR [rax+0x51],al
   140032c3d:	push   rbx
   140032c3e:	je     0x140032cb2
   140032c40:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140032c47:	rex.X
   140032c48:	rex.B (bad) 
   140032c4a:	push   r14
   140032c4c:	push   rcx
   140032c4d:	rex.X jns 0x140032cc4
   140032c50:	gs rex.B jb 0x140032cc6
   140032c54:	(bad)  
   140032c55:	jns    0x140032c97
   140032c57:	rex pop rax
   140032c59:	pop    rdx
   140032c5a:	add    BYTE PTR [rax],al
   140032c5c:	rex.W add BYTE PTR [rdi],dil
   140032c5f:	(bad)  
   140032c60:	xor    BYTE PTR [rcx+0x42],dl
   140032c63:	jns    0x140032cd9
   140032c65:	gs rex.B jb 0x140032cdb
   140032c69:	(bad)  
   140032c6a:	jns    0x140032cac
   140032c6c:	rex push rcx
   140032c6e:	rex.RB
   140032c6f:	rex.B
   140032c70:	rex.B
   140032c71:	rex push rax
   140032c73:	rex.RB
   140032c74:	rex.X
   140032c75:	rex.R
   140032c76:	rex.W
   140032c77:	rex pop rdx
   140032c79:	add    BYTE PTR [rbx+0x2],dh
   140032c7c:	(bad)  
   140032c7d:	(bad)  
   140032c7e:	xor    DWORD PTR [rcx+0x44],edx
   140032c81:	(bad)  
   140032c82:	je     0x140032ce5
   140032c84:	push   rbx
   140032c85:	je     0x140032cf9
   140032c87:	gs (bad) 
   140032c89:	ins    DWORD PTR es:[rdi],dx
   140032c8a:	rex
   140032c8b:	rex push rcx
   140032c8d:	rex.RB
   140032c8e:	rex.B
   140032c8f:	rex.B
   140032c90:	rex pop rax
   140032c92:	pop    rdx
   140032c93:	add    BYTE PTR [rsp+rax*1],ch
   140032c96:	(bad)  
   140032c97:	(bad)  
   140032c98:	ss push rcx
   140032c9a:	rex.R (bad) 
   140032c9c:	je     0x140032cff
   140032c9e:	push   rbx
   140032c9f:	je     0x140032d13
   140032ca1:	gs (bad) 
   140032ca3:	ins    DWORD PTR es:[rdi],dx
   140032ca4:	rex
   140032ca5:	rex push rcx
   140032ca7:	rex.RB
   140032ca8:	rex.B
   140032ca9:	rex.B
   140032caa:	rex.B
   140032cab:	rex.RB
   140032cac:	push   r14
   140032cae:	xor    BYTE PTR [rax+0x48],al
   140032cb1:	rex pop rdx
   140032cb3:	add    BYTE PTR [rax],ch
   140032cb5:	add    al,0x3f
   140032cb7:	(bad)  
   140032cb8:	ss push rcx
   140032cba:	rex.R (bad) 
   140032cbc:	je     0x140032d1f
   140032cbe:	push   rbx
   140032cbf:	je     0x140032d33
   140032cc1:	gs (bad) 
   140032cc3:	ins    DWORD PTR es:[rdi],dx
   140032cc4:	rex
   140032cc5:	rex push rcx
   140032cc7:	rex.RB
   140032cc8:	rex.B
   140032cc9:	rex.B
   140032cca:	rex.B
   140032ccb:	rex.RB
   140032ccc:	push   r14
   140032cce:	xor    BYTE PTR [rax+0x43],al
   140032cd1:	rex pop rdx
   140032cd3:	add    BYTE PTR [rip+0x72773f1b],cl        # 0x1b27a6bf4
   140032cd9:	imul   esi,DWORD PTR [rbp+riz*2+0x52],0x61447761
   140032ce1:	je     0x140032d44
   140032ce3:	rex push rcx
   140032ce5:	rex.R (bad) 
   140032ce7:	je     0x140032d4a
   140032ce9:	push   rbx
   140032cea:	je     0x140032d5e
   140032cec:	gs (bad) 
   140032cee:	ins    DWORD PTR es:[rdi],dx
   140032cef:	rex
   140032cf0:	rex push rcx
   140032cf2:	rex.RB
   140032cf3:	rex.B
   140032cf4:	rex.B
   140032cf5:	rex.W push rax
   140032cf7:	rex.RB
   140032cf8:	rex.X
   140032cf9:	rex.R
   140032cfa:	rex.W
   140032cfb:	rex pop rdx
   140032cfd:	add    BYTE PTR [rcx+0x0],dh
   140032d00:	(bad)  
   140032d01:	(bad)  
   140032d02:	xor    BYTE PTR [rcx+0x44],dl
   140032d05:	(bad)  
   140032d06:	je     0x140032d69
   140032d08:	push   rbx
   140032d09:	je     0x140032d7d
   140032d0b:	gs (bad) 
   140032d0d:	ins    DWORD PTR es:[rdi],dx
   140032d0e:	rex
   140032d0f:	rex push rcx
   140032d11:	rex.RB
   140032d12:	rex.B
   140032d13:	rex.B
   140032d14:	rex push rax
   140032d16:	rex.RB
   140032d17:	push   r14
   140032d19:	push   rcx
   140032d1a:	rex.WB
   140032d1b:	rex.WRXB
   140032d1c:	rex.R
   140032d1d:	gs jbe 0x140032d89
   140032d20:	movsxd esp,DWORD PTR [rbp+0x40]
   140032d23:	rex
   140032d24:	rex pop rdx
   140032d26:	add    BYTE PTR [rax],al
   140032d28:	rcl    BYTE PTR [rsi],cl
   140032d2a:	(bad)  
   140032d2b:	jae    0x140032d95
   140032d2d:	(bad)  
   140032d2e:	jb     0x140032d95
   140032d30:	fs pop rdi
   140032d32:	outs   dx,BYTE PTR ds:[rsi]
   140032d33:	jne    0x140032da1
   140032d35:	ins    BYTE PTR es:[rdi],dx
   140032d36:	rex push rcx
   140032d38:	rex.WRB (bad) 
   140032d3a:	jo     0x140032d80
   140032d3c:	(bad)  
   140032d3d:	je     0x140032da0
   140032d3f:	rex.X (bad) 
   140032d41:	jae    0x140032da8
   140032d43:	rex
   140032d44:	xor    dl,BYTE PTR [rbp+0x31]
   140032d48:	rex
   140032d49:	rex.X add BYTE PTR [rax],al
   140032d4c:	xchg   esp,eax
   140032d4d:	adc    BYTE PTR [rdi],bh
   140032d4f:	outs   dx,BYTE PTR ds:[rsi]
   140032d50:	gs js  0x140032dc7
   140032d53:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   140032d55:	fs gs rex push rcx
   140032d59:	rex.WRB (bad) 
   140032d5b:	jo     0x140032dab
   140032d5d:	outs   dx,DWORD PTR ds:[rsi]
   140032d5e:	fs gs rex.X (bad) 
   140032d62:	jae    0x140032dc9
   140032d64:	rex
   140032d65:	rex push rcx
   140032d67:	rex.RB
   140032d68:	rex.X
   140032d69:	push   r8
   140032d6b:	rex.RB
   140032d6c:	rex.X push rbp
   140032d6e:	xor    DWORD PTR [rax+0x58],eax
   140032d71:	pop    rdx
   140032d72:	add    BYTE PTR [rax],al
   140032d74:	sbb    eax,0x72633f09
   140032d79:	gs (bad) 
   140032d7b:	je     0x140032de2
   140032d7d:	rex.R (bad) 
   140032d7f:	je     0x140032de2
   140032d81:	rex push rcx
   140032d83:	rex.WRB (bad) 
   140032d85:	jo     0x140032dcb
   140032d87:	(bad)  
   140032d88:	je     0x140032deb
   140032d8a:	rex.X (bad) 
   140032d8c:	jae    0x140032df3
   140032d8e:	rex
   140032d8f:	rex push rbx
   140032d91:	push   r8
   140032d93:	rex.RB
   140032d94:	push   r13
   140032d96:	xor    DWORD PTR [rax+0x58],eax
   140032d99:	pop    rdx
   140032d9a:	add    BYTE PTR [rax],al
   140032d9c:	sub    ecx,DWORD PTR [rcx]
   140032d9e:	(bad)  
   140032d9f:	movsxd esi,DWORD PTR [rdx+0x65]
   140032da2:	(bad)  
   140032da3:	je     0x140032e0a
   140032da5:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   140032da7:	fs gs rex push rcx
   140032dab:	rex.WRB (bad) 
   140032dad:	jo     0x140032df3
   140032daf:	(bad)  
   140032db0:	je     0x140032e13
   140032db2:	rex.X (bad) 
   140032db4:	jae    0x140032e1b
   140032db6:	rex
   140032db7:	rex push rcx
   140032db9:	rex.RB
   140032dba:	rex.B
   140032dbb:	push   r8
   140032dbd:	rex.RB
   140032dbe:	push   r13
   140032dc0:	push   rcx
   140032dc1:	rex.WRB (bad) 
   140032dc3:	jo     0x140032e13
   140032dc5:	outs   dx,DWORD PTR ds:[rsi]
   140032dc6:	fs gs rex.X (bad) 
   140032dca:	jae    0x140032e31
   140032dcc:	rex
   140032dcd:	rex
   140032dce:	rex.W
   140032dcf:	rex.W push rax
   140032dd1:	rex.RB
   140032dd2:	push   r13
   140032dd4:	xor    al,BYTE PTR [rax+0x5f]
   140032dd7:	rex.WRX
   140032dd8:	rex pop rdx
   140032dda:	add    BYTE PTR [rax],al
   140032ddc:	(bad)  
   140032ddd:	add    al,0x3f
   140032ddf:	(bad)  
   140032de0:	ss rex pop rcx
   140032de3:	rex.B
   140032de4:	rex.B
   140032de5:	rex.RB
   140032de6:	push   r14
   140032de8:	push   rcx
   140032de9:	rex.R (bad) 
   140032deb:	je     0x140032e4e
   140032ded:	push   rbx
   140032dee:	je     0x140032e62
   140032df0:	gs (bad) 
   140032df2:	ins    DWORD PTR es:[rdi],dx
   140032df3:	rex
   140032df4:	rex
   140032df5:	rex.B
   140032df6:	rex.RB
   140032df7:	push   r14
   140032df9:	xor    BYTE PTR [rax+0x41],al
   140032dfc:	rex.RB
   140032dfd:	rex.X push rsi
   140032dff:	push   rcx
   140032e00:	rex.X jns 0x140032e77
   140032e03:	gs rex.B jb 0x140032e79
   140032e07:	(bad)  
   140032e08:	jns    0x140032e4a
   140032e0a:	rex
   140032e0b:	rex pop rdx
   140032e0d:	add    BYTE PTR [rdi],bl
   140032e0f:	add    al,0x3f
   140032e11:	(bad)  
   140032e12:	ss rex pop rcx
   140032e15:	rex.B
   140032e16:	rex.B
   140032e17:	rex.RB
   140032e18:	push   r14
   140032e1a:	push   rcx
   140032e1b:	rex.R (bad) 
   140032e1d:	je     0x140032e80
   140032e1f:	push   rbx
   140032e20:	je     0x140032e94
   140032e22:	gs (bad) 
   140032e24:	ins    DWORD PTR es:[rdi],dx
   140032e25:	rex
   140032e26:	rex
   140032e27:	rex.B
   140032e28:	rex.RB
   140032e29:	push   r14
   140032e2b:	xor    BYTE PTR [rax+0x41],al
   140032e2e:	rex.RB
   140032e2f:	rex.X push rsi
   140032e31:	push   rcx
   140032e32:	push   rbx
   140032e33:	je     0x140032ea7
   140032e35:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   140032e3c:	add    BYTE PTR [rax],al
   140032e3e:	rex.WXB add dil,BYTE PTR [r15]
   140032e41:	(bad)  
   140032e42:	xor    DWORD PTR [rbx+0x6f],eax
   140032e45:	outs   dx,BYTE PTR ds:[rsi]
   140032e46:	jbe    0x140032ead
   140032e48:	jb     0x140032ebe
   140032e4a:	gs jb  0x140032ea0
   140032e4d:	je     0x140032eb0
   140032e4f:	je     0x140032eb6
   140032e51:	rex push rcx
   140032e53:	push   rsp
   140032e54:	gs js  0x140032ecb
   140032e57:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140032e59:	fs movsxd eax,DWORD PTR gs:[rax+0x40]
   140032e5e:	push   rcx
   140032e5f:	rex.RB
   140032e60:	rex.B
   140032e61:	rex.B
   140032e62:	rex pop rax
   140032e64:	pop    rdx
   140032e65:	add    BYTE PTR [rax+0x19],al
   140032e68:	(bad)  
   140032e69:	je     0x140032eda
   140032e6b:	push   rbp
   140032e6c:	outs   dx,BYTE PTR ds:[rsi]
   140032e6d:	imul   esp,DWORD PTR [rbx+0x6f],0x51406564
   140032e74:	push   rsp
   140032e75:	gs js  0x140032eec
   140032e78:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140032e7a:	fs movsxd eax,DWORD PTR gs:[rax+0x40]
   140032e7f:	push   rcx
   140032e80:	rex.RB
   140032e81:	rex.X
   140032e82:	rex.B (bad) 
   140032e84:	push   r14
   140032e86:	push   rcx
   140032e87:	push   rbx
   140032e88:	je     0x140032efc
   140032e8a:	imul   ebp,DWORD PTR [rsi+0x67],0x45504040
   140032e91:	rex.X
   140032e92:	rex.R
   140032e93:	rex.W push rax
   140032e95:	rex.RB
   140032e96:	push   r13
   140032e98:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140032e9a:	outs   dx,BYTE PTR ds:[rsi]
   140032e9b:	jbe    0x140032f02
   140032e9d:	jb     0x140032f13
   140032e9f:	gs jb  0x140032ef5
   140032ea2:	je     0x140032f05
   140032ea4:	je     0x140032f0b
   140032ea6:	rex xor DWORD PTR [rax+0x40],eax
   140032eaa:	pop    rdx
   140032eab:	add    BYTE PTR [rdx],bh
   140032ead:	or     BYTE PTR [rdi],bh
   140032eaf:	movsxd ebp,DWORD PTR [rdi+0x64]
   140032eb2:	movsxd eax,DWORD PTR gs:[rsi+0x6f]
   140032eb6:	jb     0x140032f06
   140032eb8:	(bad)  
   140032eb9:	ins    DWORD PTR es:[rdi],dx
   140032eba:	gs rex push rcx
   140032ebd:	push   rsp
   140032ebe:	gs js  0x140032f35
   140032ec1:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140032ec3:	fs movsxd eax,DWORD PTR gs:[rax+0x40]
   140032ec8:	push   rbx
   140032ec9:	push   r8
   140032ecb:	rex.RB
   140032ecc:	push   r14
   140032ece:	xor    DWORD PTR [rax+0x50],eax
   140032ed1:	rex.RB
   140032ed2:	rex.X
   140032ed3:	rex.R
   140032ed4:	rex pop rdx
   140032ed6:	add    BYTE PTR [rax],al
   140032ed8:	(bad)  
   140032ed9:	or     al,0x3f
   140032edb:	data16 jb 0x140032f43
   140032ede:	gs rex.R (bad) 
   140032ee1:	je     0x140032f44
   140032ee3:	rex push rcx
   140032ee5:	rex.WRB (bad) 
   140032ee7:	jo     0x140032f2d
   140032ee9:	(bad)  
   140032eea:	je     0x140032f4d
   140032eec:	rex.X (bad) 
   140032eee:	jae    0x140032f55
   140032ef0:	rex
   140032ef1:	rex push rbx
   140032ef3:	pop    r8
   140032ef5:	push   rax
   140032ef6:	rex.RB
   140032ef7:	push   r13
   140032ef9:	xor    DWORD PTR [rax+0x40],eax
   140032efc:	pop    rdx
   140032efd:	add    BYTE PTR [rcx],dl
   140032eff:	or     al,0x3f
   140032f01:	data16 jb 0x140032f69
   140032f04:	gs push rsp
   140032f06:	jb     0x140032f6d
   140032f08:	gs rex push rcx
   140032f0b:	rex.WRB (bad) 
   140032f0d:	jo     0x140032f53
   140032f0f:	(bad)  
   140032f10:	je     0x140032f73
   140032f12:	rex.X (bad) 
   140032f14:	jae    0x140032f7b
   140032f16:	rex
   140032f17:	rex push rcx
   140032f19:	rex.RB
   140032f1a:	rex.B
   140032f1b:	pop    r8
   140032f1d:	push   rax
   140032f1e:	rex.RB
   140032f1f:	push   r13
   140032f21:	push   rcx
   140032f22:	rex.WRB (bad) 
   140032f24:	jo     0x140032f74
   140032f26:	outs   dx,DWORD PTR ds:[rsi]
   140032f27:	fs gs rex.X (bad) 
   140032f2b:	jae    0x140032f92
   140032f2d:	rex
   140032f2e:	rex
   140032f2f:	rex.W
   140032f30:	rex pop rdx
   140032f32:	add    BYTE PTR [rax],al
   140032f34:	jg     0x140032f49
   140032f36:	(bad)  
   140032f37:	jb     0x140032f9e
   140032f39:	movsxd esp,DWORD PTR [rcx+0x6c]
   140032f3c:	movsxd ecx,DWORD PTR [rbp+0x6f]
   140032f3f:	jae    0x140032fb5
   140032f41:	rex.WR
   140032f42:	gs data16 je 0x140032f94
   140032f46:	outs   dx,DWORD PTR ds:[rsi]
   140032f47:	fs gs rex push rcx
   140032f4b:	rex.WRB (bad) 
   140032f4d:	jo     0x140032f93
   140032f4f:	(bad)  
   140032f50:	je     0x140032fb3
   140032f52:	rex.X (bad) 
   140032f54:	jae    0x140032fbb
   140032f56:	rex
   140032f57:	rex push rcx
   140032f59:	rex.RB
   140032f5a:	rex.B
   140032f5b:	pop    r8
   140032f5d:	pop    rax
   140032f5e:	pop    rdx
   140032f5f:	add    BYTE PTR [rsi],al
   140032f61:	or     eax,0x646e693f
   140032f66:	gs js  0x140032fb8
   140032f69:	rex push cx
   140032f6c:	push   rbx
   140032f6d:	je     0x140032fe1
   140032f6f:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140032f76:	rex.X
   140032f77:	rex.B
   140032f78:	rex.W
   140032f79:	rex.B
   140032f7a:	rex.RB
   140032f7b:	rex.X push rsi
   140032f7d:	xor    DWORD PTR [rax+0x48],eax
   140032f80:	push   rdi
   140032f81:	xor    al,0x43
   140032f83:	(bad)  
   140032f84:	jae    0x140032feb
   140032f86:	push   rbx
   140032f87:	outs   dx,BYTE PTR gs:[rsi]
   140032f89:	jae    0x140032ff4
   140032f8b:	je     0x140032ff6
   140032f8d:	jbe    0x140032ff8
   140032f8f:	je     0x14003300a
   140032f91:	rex push rcx
   140032f93:	je     0x140032fd5
   140032f95:	rex
   140032f96:	rex pop rdx
   140032f98:	add    BYTE PTR [rax],al
   140032f9a:	adc    DWORD PTR [rax],eax
   140032f9c:	(bad)  
   140032f9d:	(bad)  
   140032f9e:	xor    BYTE PTR [rbx+0x6f],al
   140032fa1:	outs   dx,BYTE PTR ds:[rsi]
   140032fa2:	jbe    0x140033009
   140032fa4:	jb     0x14003301a
   140032fa6:	gs jb  0x140032ffc
   140032fa9:	je     0x14003300c
   140032fab:	je     0x140033012
   140032fad:	rex push rcx
   140032faf:	push   rsp
   140032fb0:	gs js  0x140033027
   140032fb3:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140032fb5:	fs movsxd eax,DWORD PTR gs:[rax+0x40]
   140032fba:	push   rcx
   140032fbb:	rex.RB
   140032fbc:	rex.B
   140032fbd:	rex.B
   140032fbe:	rex push rsi
   140032fc0:	(bad)  
   140032fc1:	and    al,0x51
   140032fc3:	rex.RX ins BYTE PTR es:[rdi],dx
   140032fc5:	(bad)  
   140032fc6:	addr32 jae 0x140033009
   140032fc9:	push   rdi
   140032fca:	xor    al,0x43
   140032fcc:	outs   dx,DWORD PTR ds:[rsi]
   140032fcd:	outs   dx,BYTE PTR ds:[rsi]
   140032fce:	jbe    0x140033035
   140032fd0:	jb     0x140033045
   140032fd2:	imul   ebp,DWORD PTR [rdi+0x6e],0x67616c46
   140032fd9:	rex push rcx
   140032fdb:	push   rsp
   140032fdc:	gs js  0x140033053
   140032fdf:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140032fe1:	fs movsxd eax,DWORD PTR gs:[rax+0x40]
   140032fe6:	rex
   140032fe7:	rex
   140032fe8:	rex pop rdx
   140032fea:	add    BYTE PTR [rax],al
   140032fec:	add    edi,DWORD PTR es:[rdi]
   140032fef:	(bad)  
   140032ff0:	xor    al,0x51
   140032ff2:	rex.XB push 0x65527261
   140032ff8:	data16 rex
   140032ffa:	rex push rcx
   140032ffc:	rex.RB
   140032ffd:	rex.B
   140032ffe:	rex.B
   140032fff:	rex.B
   140033000:	rex.RB
   140033001:	push   r14
   140033003:	xor    BYTE PTR [rax+0x56],al
   140033006:	push   rcx
   140033007:	rex.XB push 0x40407261
   14003300d:	rex pop rdx
   14003300f:	add    BYTE PTR [rcx],al
   140033011:	(bad)  
   140033012:	(bad)  
   140033013:	(bad)  
   140033014:	je     0x140033056
   140033016:	push   rcx
   140033017:	push   rbx
   140033018:	je     0x14003308c
   14003301a:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140033021:	rex.X
   140033022:	rex.B (bad) 
   140033024:	rex.X push rsi
   140033026:	push   rcx
   140033027:	rex.XB push 0x40407261
   14003302d:	rex.W
   14003302e:	rex pop rdx
   140033030:	add    BYTE PTR [rax],al
   140033032:	xchg   ebx,eax
   140033033:	add    DWORD PTR [rdi],edi
   140033035:	(bad)  
   140033036:	xor    BYTE PTR [rcx+0x53],dl
   140033039:	je     0x1400330ad
   14003303b:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140033042:	rex.B
   140033043:	rex.B
   140033044:	rex push rax
   140033046:	rex.RB
   140033047:	rex.X push rsi
   140033049:	push   rcx
   14003304a:	rex.XB push 0x40407261
   140033050:	rex.W
   140033051:	rex pop rdx
   140033053:	add    BYTE PTR [rbx+0x353f3f03],bh
   140033059:	rex pop rcx
   14003305b:	rex.B
   14003305c:	rex.B
   14003305d:	rex.RB
   14003305e:	push   r14
   140033060:	push   rcx
   140033061:	rex.R (bad) 
   140033063:	je     0x1400330c6
   140033065:	push   rbx
   140033066:	je     0x1400330da
   140033068:	gs (bad) 
   14003306a:	ins    DWORD PTR es:[rdi],dx
   14003306b:	rex
   14003306c:	rex
   14003306d:	rex.B
   14003306e:	rex.RB
   14003306f:	push   r14
   140033071:	xor    BYTE PTR [rax+0x41],al
   140033074:	rex.RB
   140033075:	push   r14
   140033077:	push   rcx
   140033078:	push   rbx
   140033079:	je     0x1400330ed
   14003307b:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   140033082:	add    BYTE PTR [rax],al
   140033084:	add    eax,0x74613f07
   140033089:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14003308b:	fs rex push rcx
   14003308e:	rex.R (bad) 
   140033090:	je     0x1400330f3
   140033092:	push   rbx
   140033093:	je     0x140033107
   140033095:	gs (bad) 
   140033097:	ins    DWORD PTR es:[rdi],dx
   140033098:	rex
   140033099:	rex push rcx
   14003309b:	rex.RB
   14003309c:	rex.X
   14003309d:	pop    r15
   14003309f:	rex.WRX pop rax
   1400330a1:	pop    rdx
   1400330a2:	add    BYTE PTR [rax],al
   1400330a4:	outs   dx,DWORD PTR ds:[rsi]
   1400330a5:	add    BYTE PTR [rdi],bh
   1400330a7:	(bad)  
   1400330a8:	xor    BYTE PTR [rcx+0x44],dl
   1400330ab:	(bad)  
   1400330ac:	je     0x14003310f
   1400330ae:	push   rbx
   1400330af:	je     0x140033123
   1400330b1:	gs (bad) 
   1400330b3:	ins    DWORD PTR es:[rdi],dx
   1400330b4:	rex
   1400330b5:	rex push rcx
   1400330b7:	rex.RB
   1400330b8:	rex.B
   1400330b9:	rex.B
   1400330ba:	rex
   1400330bb:	rex.B
   1400330bc:	rex.RB
   1400330bd:	rex.X push rsi
   1400330bf:	push   rcx
   1400330c0:	rex.X jns 0x140033137
   1400330c3:	gs rex.B jb 0x140033139
   1400330c7:	(bad)  
   1400330c8:	jns    0x14003310a
   1400330ca:	rex
   1400330cb:	rex pop rdx
   1400330cd:	add    bh,ah
   1400330cf:	or     DWORD PTR [rdi],edi
   1400330d1:	fs (bad) 
   1400330d3:	je     0x140033136
   1400330d5:	rex push rcx
   1400330d7:	rex.X jns 0x14003314e
   1400330da:	gs rex.B jb 0x140033150
   1400330de:	(bad)  
   1400330df:	jns    0x140033121
   1400330e1:	rex push rcx
   1400330e3:	rex.RB
   1400330e4:	rex.B
   1400330e5:	push   r8
   1400330e7:	rex.RB
   1400330e8:	rex.B
   1400330e9:	rex.R pop rax
   1400330eb:	pop    rdx
   1400330ec:	add    BYTE PTR [rax],al
   1400330ee:	adc    r15,QWORD PTR [rdi]
   1400330f1:	jb     0x140033158
   1400330f3:	(bad)  
   1400330f4:	fs rex.B ins BYTE PTR es:[rdi],dx
   1400330f7:	ins    BYTE PTR es:[rdi],dx
   1400330f8:	rex push rcx
   1400330fa:	rex.WB
   1400330fb:	rex.WRXB
   1400330fc:	rex.R
   1400330fd:	gs jbe 0x140033169
   140033100:	movsxd esp,DWORD PTR [rbp+0x40]
   140033103:	rex push rcx
   140033105:	rex.RB
   140033106:	rex.B
   140033107:	rex.B (bad) 
   140033109:	push   r14
   14003310b:	push   rcx
   14003310c:	rex.X jns 0x140033183
   14003310f:	gs rex.B jb 0x140033185
   140033113:	(bad)  
   140033114:	jns    0x140033156
   140033116:	rex pop rax
   140033118:	pop    rdx
   140033119:	add    BYTE PTR [rdx+0x0],cl
   14003311c:	(bad)  
   14003311d:	(bad)  
   14003311e:	xor    BYTE PTR [rcx+0x42],dl
   140033121:	jns    0x140033197
   140033123:	gs rex.B jb 0x140033199
   140033127:	(bad)  
   140033128:	jns    0x14003316a
   14003312a:	rex push rcx
   14003312c:	rex.RB
   14003312d:	rex.B
   14003312e:	rex.B
   14003312f:	rex pop rax
   140033131:	pop    rdx
   140033132:	add    BYTE PTR [rax],al
   140033134:	(bad)  
   140033135:	sbb    bh,BYTE PTR [rdi]
   140033137:	ja     0x14003319a
   140033139:	jb     0x1400331a9
   14003313b:	imul   ebp,DWORD PTR [rsi+0x67],0x654d5140
   140033142:	jae    0x1400331b7
   140033144:	(bad)  
   140033145:	rex.WR outs dx,DWORD PTR gs:[esi]
   140033149:	addr32 addr32 gs jb 0x14003318e
   14003314e:	rex push rcx
   140033150:	rex.RB
   140033151:	rex.X
   140033152:	pop    r8
   140033154:	push   rax
   140033155:	rex.RB
   140033156:	rex.X
   140033157:	rex.R pop rdx
   140033159:	pop    rdx
   14003315a:	add    BYTE PTR [rax],al
   14003315c:	sub    al,BYTE PTR [rdi+rdi*1]
   14003315f:	(bad)  
   140033160:	ss push rcx
   140033162:	rex.R (bad) 
   140033164:	je     0x1400331c7
   140033166:	push   rbx
   140033167:	je     0x1400331db
   140033169:	gs (bad) 
   14003316b:	ins    DWORD PTR es:[rdi],dx
   14003316c:	rex
   14003316d:	rex push rcx
   14003316f:	rex.RB
   140033170:	rex.B
   140033171:	rex.B
   140033172:	rex.B
   140033173:	rex.RB
   140033174:	push   r14
   140033176:	xor    BYTE PTR [rax+0x46],al
   140033179:	rex pop rdx
   14003317b:	add    BYTE PTR [rbp+0x14],dh
   14003317e:	(bad)  
   14003317f:	jb     0x1400331e6
   140033181:	jae    0x1400331ec
   140033183:	jp     0x1400331ea
   140033185:	rex push rcx
   140033187:	rex.X jns 0x1400331fe
   14003318a:	gs rex.B jb 0x140033200
   14003318e:	(bad)  
   14003318f:	jns    0x1400331d1
   140033191:	rex push rcx
   140033193:	rex.RB
   140033194:	rex.B
   140033195:	pop    r8
   140033197:	rex.W
   140033198:	rex pop rdx
   14003319a:	add    BYTE PTR [rax],al
   14003319c:	jo     0x14003319e
   14003319e:	(bad)  
   14003319f:	(bad)  
   1400331a0:	xor    BYTE PTR [rcx+0x44],dl
   1400331a3:	(bad)  
   1400331a4:	je     0x140033207
   1400331a6:	push   rbx
   1400331a7:	je     0x14003321b
   1400331a9:	gs (bad) 
   1400331ab:	ins    DWORD PTR es:[rdi],dx
   1400331ac:	rex
   1400331ad:	rex push rcx
   1400331af:	rex.RB
   1400331b0:	rex.B
   1400331b1:	rex.B
   1400331b2:	rex push rax
   1400331b4:	rex.RB
   1400331b5:	push   r14
   1400331b7:	push   rcx
   1400331b8:	rex.X jns 0x14003322f
   1400331bb:	gs rex.B jb 0x140033231
   1400331bf:	(bad)  
   1400331c0:	jns    0x140033202
   1400331c2:	rex push rsi
   1400331c4:	(bad)  
   1400331c5:	and    al,0x51
   1400331c7:	rex.RX ins BYTE PTR es:[rdi],dx
   1400331c9:	(bad)  
   1400331ca:	addr32 jae 0x14003320d
   1400331cd:	push   rdi
   1400331ce:	xor    al,0x4f
   1400331d0:	jo     0x140033237
   1400331d2:	outs   dx,BYTE PTR ds:[rsi]
   1400331d3:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   1400331d5:	fs gs rex.RX ins BYTE PTR es:[rdi],dx
   1400331d9:	(bad)  
   1400331da:	addr32 rex push rcx
   1400331dd:	rex.WB
   1400331de:	rex.WRXB
   1400331df:	rex.R
   1400331e0:	gs jbe 0x14003324c
   1400331e3:	movsxd esp,DWORD PTR [rbp+0x40]
   1400331e6:	rex
   1400331e7:	rex
   1400331e8:	rex
   1400331e9:	rex pop rdx
   1400331eb:	add    BYTE PTR [rax+rcx*1],al
   1400331ee:	(bad)  
   1400331ef:	movsxd ebp,DWORD PTR [rbp+riz*2+0x61]
   1400331f3:	jb     0x140033235
   1400331f5:	push   rcx
   1400331f6:	rex.X jns 0x14003326d
   1400331f9:	gs rex.B jb 0x14003326f
   1400331fd:	(bad)  
   1400331fe:	jns    0x140033240
   140033200:	rex push rcx
   140033202:	rex.RB
   140033203:	rex.B
   140033204:	pop    r8
   140033206:	pop    rax
   140033207:	pop    rdx
   140033208:	add    BYTE PTR [rax],al
   14003320a:	jmp    0x1b2647115
   14003320f:	addr32 rex push rcx
   140033212:	push   rbx
   140033213:	je     0x140033287
   140033215:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14003321c:	rex.X
   14003321d:	rex.B (bad) 
   14003321f:	push   r14
   140033221:	xor    DWORD PTR [rax+0x48],eax
   140033224:	rex.W
   140033225:	rex.W push rsi
   140033227:	push   rcx
   140033228:	rex.XB push 0x40407261
   14003322e:	rex pop rdx
   140033230:	add    BYTE PTR [rax],al
   140033232:	add    DWORD PTR [rbx],0x3f
   140033235:	(bad)  
   140033236:	xor    al,0x51
   140033238:	push   rbx
   140033239:	je     0x1400332ad
   14003323b:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140033242:	rex.B
   140033243:	rex.B
   140033244:	rex.B
   140033245:	rex.RB
   140033246:	push   r14
   140033248:	xor    BYTE PTR [rax+0x56],al
   14003324b:	push   rcx
   14003324c:	rex.WR (bad) 
   14003324e:	je     0x1400332b9
   140033250:	outs   dx,BYTE PTR ds:[rsi]
   140033251:	xor    DWORD PTR [rbx+0x74],edx
   140033254:	jb     0x1400332bf
   140033256:	outs   dx,BYTE PTR ds:[rsi]
   140033257:	addr32 rex
   140033259:	rex
   14003325a:	rex pop rdx
   14003325c:	add    BYTE PTR [rax],al
   14003325e:	gs add al,0x3f
   140033261:	(bad)  
   140033262:	cmp    BYTE PTR [rax+0x59],al
   140033265:	pop    r15
   140033267:	rex.WRX push rsi
   140033269:	push   rcx
   14003326a:	rex.WR (bad) 
   14003326c:	je     0x1400332d7
   14003326e:	outs   dx,BYTE PTR ds:[rsi]
   14003326f:	xor    DWORD PTR [rbx+0x74],edx
   140033272:	jb     0x1400332dd
   140033274:	outs   dx,BYTE PTR ds:[rsi]
   140033275:	addr32 rex
   140033277:	rex
   140033278:	rex.B
   140033279:	rex.RB
   14003327a:	rex.X push rsi
   14003327c:	push   rcx
   14003327d:	push   rbx
   14003327e:	je     0x1400332f2
   140033280:	imul   ebp,DWORD PTR [rsi+0x67],0x40666552
   140033287:	rex
   140033288:	rex pop rdx
   14003328a:	add    BYTE PTR [rax],al
   14003328c:	sub    al,0x2
   14003328e:	(bad)  
   14003328f:	(bad)  
   140033290:	xor    BYTE PTR [rcx+0x58],dl
   140033293:	ins    DWORD PTR es:[rdi],dx
   140033294:	ins    BYTE PTR es:[rdi],dx
   140033295:	push   rbx
   140033296:	je     0x14003330a
   140033298:	gs (bad) 
   14003329a:	ins    DWORD PTR es:[rdi],dx
   14003329b:	push   rdx
   14003329c:	gs (bad) 
   14003329e:	fs gs jb 0x1400332e2
   1400332a2:	rex push rcx
   1400332a4:	rex.RB
   1400332a5:	rex.B
   1400332a6:	rex.B
   1400332a7:	rex push rax
   1400332a9:	rex.RB
   1400332aa:	push   r14
   1400332ac:	push   rcx
   1400332ad:	rex.WB
   1400332ae:	rex.WRXB
   1400332af:	rex.R
   1400332b0:	gs jbe 0x14003331c
   1400332b3:	movsxd esp,DWORD PTR [rbp+0x40]
   1400332b6:	rex
   1400332b7:	rex pop rdx
   1400332b9:	add    BYTE PTR [rcx],cl
   1400332bb:	sbb    bh,BYTE PTR [rdi]
   1400332bd:	je     0x140033331
   1400332bf:	imul   ebp,DWORD PTR [rbp+0x6d],0x51406465
   1400332c6:	push   rbx
   1400332c7:	je     0x14003333b
   1400332c9:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   1400332d0:	rex.X
   1400332d1:	rex.B (bad) 
   1400332d3:	push   r14
   1400332d5:	xor    DWORD PTR [rax+0x58],eax
   1400332d8:	pop    rdx
   1400332d9:	add    BYTE PTR [rcx],dl
   1400332db:	sbb    DWORD PTR [rdi],edi
   1400332dd:	je     0x14003334e
   1400332df:	push   rbx
   1400332e0:	je     0x140033354
   1400332e2:	imul   ebp,DWORD PTR [rsi+0x67],0x74535140
   1400332e9:	jb     0x140033354
   1400332eb:	outs   dx,BYTE PTR ds:[rsi]
   1400332ec:	addr32 push rdx
   1400332ee:	gs data16 rex
   1400332f1:	rex push rcx
   1400332f3:	rex.RB
   1400332f4:	rex.X
   1400332f5:	rex.B (bad) 
   1400332f7:	push   r14
   1400332f9:	push   rcx
   1400332fa:	push   rbx
   1400332fb:	je     0x14003336f
   1400332fd:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   140033304:	add    BYTE PTR [rax],al
   140033306:	cmp    eax,0x65743f18
   14003330b:	js     0x140033381
   14003330d:	rex push rcx
   14003330f:	pop    rax
   140033310:	ins    DWORD PTR es:[rdi],dx
   140033311:	ins    BYTE PTR es:[rdi],dx
   140033312:	push   rbx
   140033313:	je     0x140033387
   140033315:	gs (bad) 
   140033317:	ins    DWORD PTR es:[rdi],dx
   140033318:	push   rdx
   140033319:	gs (bad) 
   14003331b:	fs gs jb 0x14003335f
   14003331f:	rex push rcx
   140033321:	rex.RB
   140033322:	rex.X
   140033323:	rex.B (bad) 
   140033325:	push   r14
   140033327:	push   rcx
   140033328:	push   rbx
   140033329:	je     0x14003339d
   14003332b:	imul   ebp,DWORD PTR [rsi+0x67],0x40666552
   140033332:	rex pop rax
   140033334:	pop    rdx
   140033335:	add    BYTE PTR [rcx+0x19],ah
   140033338:	(bad)  
   140033339:	je     0x1400333aa
   14003333b:	imul   esp,DWORD PTR [rbp+0x6e],0x54
   14003333f:	jns    0x1400333b1
   140033341:	gs rex push rcx
   140033344:	pop    rax
   140033345:	ins    DWORD PTR es:[rdi],dx
   140033346:	ins    BYTE PTR es:[rdi],dx
   140033347:	push   rbx
   140033348:	je     0x1400333bc
   14003334a:	gs (bad) 
   14003334c:	ins    DWORD PTR es:[rdi],dx
   14003334d:	push   rdx
   14003334e:	gs (bad) 
   140033350:	fs gs jb 0x140033394
   140033354:	rex push rcx
   140033356:	rex.RB
   140033357:	rex.X
   140033358:	rex.B (bad) 
   14003335a:	push   r15
   14003335c:	xor    al,0x54
   14003335e:	outs   dx,DWORD PTR ds:[rsi]
   14003335f:	imul   esp,DWORD PTR [rbp+0x6e],0x54
   140033363:	jns    0x1400333d5
   140033365:	rex xor DWORD PTR gs:[rax+0x58],eax
   14003336a:	pop    rdx
   14003336b:	add    cl,bh
   14003336d:	add    bh,BYTE PTR [rdi]
   14003336f:	(bad)  
   140033370:	xor    DWORD PTR [rcx+0x58],edx
   140033373:	ins    DWORD PTR es:[rdi],dx
   140033374:	ins    BYTE PTR es:[rdi],dx
   140033375:	push   rbx
   140033376:	je     0x1400333ea
   140033378:	gs (bad) 
   14003337a:	ins    DWORD PTR es:[rdi],dx
   14003337b:	push   rdx
   14003337c:	gs (bad) 
   14003337e:	fs gs jb 0x1400333c2
   140033382:	rex push rcx
   140033384:	rex.RB
   140033385:	rex.B
   140033386:	rex.B
   140033387:	rex pop rax
   140033389:	pop    rdx
   14003338a:	add    BYTE PTR [rax],al
   14003338c:	push   rbp
   14003338d:	add    eax,0x51593f3f
   140033392:	push   rbx
   140033393:	je     0x140033407
   140033395:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14003339c:	rex.B
   14003339d:	rex.B
   14003339e:	rex.B
   14003339f:	rex.RB
   1400333a0:	push   r14
   1400333a2:	xor    BYTE PTR [rax+0x56],al
   1400333a5:	push   rcx
   1400333a6:	rex.XB push 0x40407261
   1400333ac:	rex pop rdx
   1400333ae:	add    BYTE PTR [rax],al
   1400333b0:	(bad)  
   1400333b1:	(bad)  
   1400333b2:	(bad)  
   1400333b3:	(bad)  
   1400333b4:	jb     0x14003341d
   1400333b6:	rex push rcx
   1400333b8:	push   rbx
   1400333b9:	je     0x14003342d
   1400333bb:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   1400333c2:	rex.X
   1400333c3:	rex.B (bad) 
   1400333c5:	push   r14
   1400333c7:	xor    DWORD PTR [rax+0x49],eax
   1400333ca:	rex.W
   1400333cb:	rex.W push rsi
   1400333cd:	push   rcx
   1400333ce:	rex.XB push 0x40407261
   1400333d4:	rex pop rdx
   1400333d6:	add    BYTE PTR [rax],al
   1400333d8:	rex.WXB adc al,0x3f
   1400333db:	jb     0x140033442
   1400333dd:	jo     0x14003344b
   1400333df:	(bad)  
   1400333e0:	movsxd esp,DWORD PTR [rbp+0x40]
   1400333e3:	push   rcx
   1400333e4:	push   rbx
   1400333e5:	je     0x140033459
   1400333e7:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   1400333ee:	rex.B
   1400333ef:	rex.B
   1400333f0:	rex.B
   1400333f1:	rex.RB
   1400333f2:	push   r14
   1400333f4:	xor    DWORD PTR [rax+0x56],eax
   1400333f7:	push   rcx
   1400333f8:	rex.XB push 0x40407261
   1400333fe:	xor    BYTE PTR [rdi+0x34],dl
   140033401:	rex.XB (bad) 
   140033403:	jae    0x14003346a
   140033405:	push   rbx
   140033406:	outs   dx,BYTE PTR gs:[rsi]
   140033408:	jae    0x140033473
   14003340a:	je     0x140033475
   14003340c:	jbe    0x140033477
   14003340e:	je     0x140033489
   140033410:	rex push rcx
   140033412:	je     0x140033454
   140033414:	rex
   140033415:	rex pop rdx
   140033417:	add    dl,cl
   140033419:	(bad)  
   14003341a:	(bad)  
   14003341b:	(bad)  
   14003341c:	jo     0x14003348e
   14003341e:	outs   dx,BYTE PTR gs:[rsi]
   140033420:	fs rex push rcx
   140033423:	push   rbx
   140033424:	je     0x140033498
   140033426:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14003342d:	rex.B
   14003342e:	rex.B
   14003342f:	rex.B
   140033430:	rex.RB
   140033431:	push   r14
   140033433:	xor    DWORD PTR [rax+0x41],eax
   140033436:	rex.RB
   140033437:	rex.X push rsi
   140033439:	push   rcx
   14003343a:	push   rbx
   14003343b:	je     0x1400334af
   14003343d:	imul   ebp,DWORD PTR [rsi+0x67],0x40666552
   140033444:	rex
   140033445:	rex pop rdx
   140033447:	add    ah,dh
   140033449:	add    bh,BYTE PTR [rdi]
   14003344b:	(bad)  
   14003344c:	xor    DWORD PTR [rcx+0x58],edx
   14003344f:	ins    DWORD PTR es:[rdi],dx
   140033450:	ins    BYTE PTR es:[rdi],dx
   140033451:	push   rbx
   140033452:	je     0x1400334c6
   140033454:	gs (bad) 
   140033456:	ins    DWORD PTR es:[rdi],dx
   140033457:	rex.B je 0x1400334ce
   14003345a:	jb     0x1400334c5
   14003345c:	(bad)  
   14003345d:	jne    0x1400334d3
   14003345f:	gs jae 0x1400334a2
   140033462:	rex push rcx
   140033464:	rex.RB
   140033465:	rex.B
   140033466:	rex.B
   140033467:	rex pop rax
   140033469:	pop    rdx
   14003346a:	add    BYTE PTR [rax],al
   14003346c:	movabs al,ds:0x4065756c61763f1a
   140033475:	push   rcx
   140033476:	pop    rax
   140033477:	ins    DWORD PTR es:[rdi],dx
   140033478:	ins    BYTE PTR es:[rdi],dx
   140033479:	push   rbx
   14003347a:	je     0x1400334ee
   14003347c:	gs (bad) 
   14003347e:	ins    DWORD PTR es:[rdi],dx
   14003347f:	rex.B je 0x1400334f6
   140033482:	jb     0x1400334ed
   140033484:	(bad)  
   140033485:	jne    0x1400334fb
   140033487:	gs jae 0x1400334ca
   14003348a:	rex push rcx
   14003348c:	rex.RB
   14003348d:	rex.X
   14003348e:	rex.B (bad) 
   140033490:	push   r14
   140033492:	push   rcx
   140033493:	push   rbx
   140033494:	je     0x140033508
   140033496:	imul   ebp,DWORD PTR [rsi+0x67],0x40666552
   14003349d:	rex push rsi
   14003349f:	push   rcx
   1400334a0:	rex.WR (bad) 
   1400334a2:	je     0x14003350d
   1400334a4:	outs   dx,BYTE PTR ds:[rsi]
   1400334a5:	xor    DWORD PTR [rbx+0x74],edx
   1400334a8:	jb     0x140033513
   1400334aa:	outs   dx,BYTE PTR ds:[rsi]
   1400334ab:	addr32 rex
   1400334ad:	rex
   1400334ae:	rex pop rdx
   1400334b0:	add    BYTE PTR [rax],al
   1400334b2:	sysret 
   1400334b4:	(bad)  
   1400334b5:	(bad)  
   1400334b6:	je     0x14003352c
   1400334b8:	jb     0x140033523
   1400334ba:	(bad)  
   1400334bb:	jne    0x140033531
   1400334bd:	gs jae 0x140033500
   1400334c0:	push   rcx
   1400334c1:	pop    rax
   1400334c2:	ins    DWORD PTR es:[rdi],dx
   1400334c3:	ins    BYTE PTR es:[rdi],dx
   1400334c4:	push   rbx
   1400334c5:	je     0x140033539
   1400334c7:	gs (bad) 
   1400334c9:	ins    DWORD PTR es:[rdi],dx
   1400334ca:	push   rdx
   1400334cb:	gs (bad) 
   1400334cd:	fs gs jb 0x140033511
   1400334d1:	rex push rcx
   1400334d3:	rex.RB
   1400334d4:	rex.X
   1400334d5:	rex.B (bad) 
   1400334d7:	push   r14
   1400334d9:	push   rcx
   1400334da:	pop    rax
   1400334db:	ins    DWORD PTR es:[rdi],dx
   1400334dc:	ins    BYTE PTR es:[rdi],dx
   1400334dd:	push   rbx
   1400334de:	je     0x140033552
   1400334e0:	gs (bad) 
   1400334e2:	ins    DWORD PTR es:[rdi],dx
   1400334e3:	rex.B je 0x14003355a
   1400334e6:	jb     0x140033551
   1400334e8:	(bad)  
   1400334e9:	jne    0x14003355f
   1400334eb:	gs jae 0x14003352e
   1400334ee:	rex pop rax
   1400334f0:	pop    rdx
   1400334f1:	add    BYTE PTR [rax+rdx*1+0x3f],bh
   1400334f5:	outs   dx,BYTE PTR ds:[rsi]
   1400334f6:	(bad)  
   1400334f7:	ins    DWORD PTR es:[rdi],dx
   1400334f8:	gs rex push rcx
   1400334fb:	pop    rax
   1400334fc:	ins    DWORD PTR es:[rdi],dx
   1400334fd:	ins    BYTE PTR es:[rdi],dx
   1400334fe:	push   rbx
   1400334ff:	je     0x140033573
   140033501:	gs (bad) 
   140033503:	ins    DWORD PTR es:[rdi],dx
   140033504:	push   rdx
   140033505:	gs (bad) 
   140033507:	fs gs jb 0x14003354b
   14003350b:	rex push rcx
   14003350d:	rex.RB
   14003350e:	rex.X
   14003350f:	rex.B (bad) 
   140033511:	push   r14
   140033513:	push   rcx
   140033514:	push   rbx
   140033515:	je     0x140033589
   140033517:	imul   ebp,DWORD PTR [rsi+0x67],0x40666552
   14003351e:	rex pop rax
   140033520:	pop    rdx
   140033521:	add    BYTE PTR [rbp+0x13],ah
   140033524:	(bad)  
   140033525:	jb     0x14003358c
   140033527:	(bad)  
   140033528:	fs rex.WRX
   14003352a:	gs js  0x1400335a1
   14003352d:	rex push rcx
   14003352f:	pop    rax
   140033530:	ins    DWORD PTR es:[rdi],dx
   140033531:	ins    BYTE PTR es:[rdi],dx
   140033532:	push   rbx
   140033533:	je     0x1400335a7
   140033535:	gs (bad) 
   140033537:	ins    DWORD PTR es:[rdi],dx
   140033538:	push   rdx
   140033539:	gs (bad) 
   14003353b:	fs gs jb 0x14003357f
   14003353f:	rex push rcx
   140033541:	rex.RB
   140033542:	rex.B
   140033543:	rex.B (bad) 
   140033545:	push   r15
   140033547:	xor    al,0x54
   140033549:	outs   dx,DWORD PTR ds:[rsi]
   14003354a:	imul   esp,DWORD PTR [rbp+0x6e],0x54
   14003354e:	jns    0x1400335c0
   140033550:	rex xor DWORD PTR gs:[rax+0x58],eax
   140033555:	pop    rdx
   140033556:	add    BYTE PTR [rax],al
   140033558:	or     al,BYTE PTR [rdi]
   14003355a:	(bad)  
   14003355b:	(bad)  
   14003355c:	je     0x1400335a3
   14003355e:	outs   dx,BYTE PTR ds:[rsi]
   14003355f:	fs rex push rcx
   140033562:	pop    rax
   140033563:	ins    DWORD PTR es:[rdi],dx
   140033564:	ins    BYTE PTR es:[rdi],dx
   140033565:	push   rbx
   140033566:	je     0x1400335da
   140033568:	gs (bad) 
   14003356a:	ins    DWORD PTR es:[rdi],dx
   14003356b:	push   rdx
   14003356c:	gs (bad) 
   14003356e:	fs gs jb 0x1400335b2
   140033572:	rex push rcx
   140033574:	rex.RB
   140033575:	rex.X
   140033576:	pop    r15
   140033578:	rex.WRX pop rax
   14003357a:	pop    rdx
   14003357b:	add    ah,bl
   14003357d:	add    bh,BYTE PTR [rdi]
   14003357f:	(bad)  
   140033580:	xor    DWORD PTR [rcx+0x54],edx
   140033583:	gs js  0x1400335fa
   140033586:	push   rbx
   140033587:	je     0x1400335fb
   140033589:	gs (bad) 
   14003358b:	ins    DWORD PTR es:[rdi],dx
   14003358c:	rex
   14003358d:	rex push rbp
   14003358f:	rex.RB
   140033590:	rex.B
   140033591:	rex.B
   140033592:	rex pop rax
   140033594:	pop    rdx
   140033595:	add    BYTE PTR [rbx+0x4],cl
   140033598:	(bad)  
   140033599:	(bad)  
   14003359a:	ss push rcx
   14003359c:	push   rsp
   14003359d:	gs js  0x140033614
   1400335a0:	push   rbx
   1400335a1:	je     0x140033615
   1400335a3:	gs (bad) 
   1400335a5:	ins    DWORD PTR es:[rdi],dx
   1400335a6:	rex
   1400335a7:	rex push rcx
   1400335a9:	rex.RB
   1400335aa:	rex.B
   1400335ab:	rex.B
   1400335ac:	rex.B
   1400335ad:	rex.RB
   1400335ae:	push   r14
   1400335b0:	xor    BYTE PTR [rax+0x41],al
   1400335b3:	rex.RB
   1400335b4:	rex.X push rsi
   1400335b6:	push   rcx
   1400335b7:	push   rbx
   1400335b8:	je     0x14003362c
   1400335ba:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   1400335c1:	add    BYTE PTR [rsi+0x4],dl
   1400335c4:	(bad)  
   1400335c5:	(bad)  
   1400335c6:	ss push rcx
   1400335c8:	push   rsp
   1400335c9:	gs js  0x140033640
   1400335cc:	push   rbx
   1400335cd:	je     0x140033641
   1400335cf:	gs (bad) 
   1400335d1:	ins    DWORD PTR es:[rdi],dx
   1400335d2:	rex
   1400335d3:	rex push rcx
   1400335d5:	rex.RB
   1400335d6:	rex.B
   1400335d7:	rex.B
   1400335d8:	rex.B
   1400335d9:	rex.RB
   1400335da:	push   r14
   1400335dc:	xor    BYTE PTR [rax+0x50],al
   1400335df:	rex.RB
   1400335e0:	rex.X
   1400335e1:	rex.R
   1400335e2:	rex pop rdx
   1400335e4:	add    BYTE PTR [rax],al
   1400335e6:	rex.WXB adc rax,0x7465733f
   1400335ec:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400335ee:	fs movsxd eax,DWORD PTR gs:[rax+0x51]
   1400335f3:	push   rsp
   1400335f4:	gs js  0x14003366b
   1400335f7:	push   rbx
   1400335f8:	je     0x14003366c
   1400335fa:	gs (bad) 
   1400335fc:	ins    DWORD PTR es:[rdi],dx
   1400335fd:	rex
   1400335fe:	rex push rcx
   140033600:	rex.RB
   140033601:	rex.B
   140033602:	pop    r8
   140033604:	push   rax
   140033605:	rex.RB
   140033606:	push   r14
   140033608:	push   rcx
   140033609:	push   rsp
   14003360a:	gs js  0x140033681
   14003360d:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14003360f:	fs movsxd eax,DWORD PTR gs:[rax+0x40]
   140033614:	rex pop rdx
   140033616:	add    BYTE PTR [rax],al
   140033618:	mov    edx,0x303f3f01
   14003361d:	push   rcx
   14003361e:	push   rsp
   14003361f:	gs js  0x140033696
   140033622:	push   rbx
   140033623:	je     0x140033697
   140033625:	gs (bad) 
   140033627:	ins    DWORD PTR es:[rdi],dx
   140033628:	rex
   140033629:	rex push rcx
   14003362b:	rex.RB
   14003362c:	rex.B
   14003362d:	rex.B
   14003362e:	rex push rax
   140033630:	rex.RB
   140033631:	push   r14
   140033633:	push   rcx
   140033634:	rex.WB
   140033635:	rex.WRXB
   140033636:	rex.R
   140033637:	gs jbe 0x1400336a3
   14003363a:	movsxd esp,DWORD PTR [rbp+0x40]
   14003363d:	rex
   14003363e:	rex pop rdx
   140033640:	add    BYTE PTR [rax],al
   140033642:	rex.X adc dil,BYTE PTR [rdi]
   140033645:	jno    0x1400336ba
   140033647:	je     0x1400336bb
   140033649:	movsxd ebp,DWORD PTR [rbp+0x70]
   14003364c:	rex
   14003364d:	rex pop rcx
   14003364f:	rex.B
   140033650:	rex.W
   140033651:	rex.B
   140033652:	rex.RB
   140033653:	rex.X push rsi
   140033655:	push   rcx
   140033656:	rex.X jns 0x1400336cd
   140033659:	gs rex.B jb 0x1400336cf
   14003365d:	(bad)  
   14003365e:	jns    0x1400336a0
   140033660:	rex push rax
   140033662:	rex.RB
   140033663:	rex.X
   140033664:	rex.R
   140033665:	rex pop rdx
   140033667:	add    dh,bl
   140033669:	or     bh,BYTE PTR [rdi]
   14003366b:	outs   dx,BYTE PTR gs:[rsi]
   14003366d:	fs rex push rcx
   140033670:	rex.X jns 0x1400336e7
   140033673:	gs rex.B jb 0x1400336e9
   140033677:	(bad)  
   140033678:	jns    0x1400336ba
   14003367a:	rex push rcx
   14003367c:	rex.RB
   14003367d:	rex.X
   14003367e:	push   r8
   140033680:	rex.RB
   140033681:	rex.X
   140033682:	rex.R pop rax
   140033684:	pop    rdx
   140033685:	add    BYTE PTR [rsi+0x17],ch
   140033688:	(bad)  
   140033689:	jae    0x1400336ff
   14003368b:	(bad)  
   14003368c:	jb     0x140033702
   14003368e:	jae    0x1400336e7
   140033690:	imul   esi,DWORD PTR [rax+rbp*2+0x40],0x74794251
   140033698:	gs rex.B jb 0x14003370e
   14003369c:	(bad)  
   14003369d:	jns    0x1400336df
   14003369f:	rex push rcx
   1400336a1:	rex.RB
   1400336a2:	rex.X
   1400336a3:	pop    r15
   1400336a5:	rex.WRX push rax
   1400336a7:	rex.RB
   1400336a8:	rex.X
   1400336a9:	rex.R
   1400336aa:	rex pop rdx
   1400336ac:	add    BYTE PTR [rax],al
   1400336ae:	adc    DWORD PTR [rdx],ebx
   1400336b0:	(bad)  
   1400336b1:	je     0x140033725
   1400336b3:	jne    0x140033723
   1400336b5:	movsxd esp,DWORD PTR [rcx+0x74]
   1400336b8:	gs rex push rcx
   1400336bb:	rex.X jns 0x140033732
   1400336be:	gs rex.B jb 0x140033734
   1400336c2:	(bad)  
   1400336c3:	jns    0x140033705
   1400336c5:	rex push rcx
   1400336c7:	rex.RB
   1400336c8:	rex.B
   1400336c9:	pop    r8
   1400336cb:	rex.W
   1400336cc:	rex pop rdx
   1400336ce:	add    BYTE PTR [rax],al
   1400336d0:	sbb    DWORD PTR [rax],edx
   1400336d2:	(bad)  
   1400336d3:	ins    DWORD PTR es:[rdi],dx
   1400336d4:	imul   esp,DWORD PTR [rax+rax*2+0x51],0x65747942
   1400336dc:	rex.B jb 0x140033751
   1400336df:	(bad)  
   1400336e0:	jns    0x140033722
   1400336e2:	rex push rcx
   1400336e4:	rex.RB
   1400336e5:	rex.X
   1400336e6:	rex.B (bad) 
   1400336e8:	push   r14
   1400336ea:	xor    DWORD PTR [rax+0x48],eax
   1400336ed:	rex.W
   1400336ee:	rex pop rdx
   1400336f0:	add    BYTE PTR [rax],al
   1400336f2:	rex.WRB adc al,0x3f
   1400336f5:	jb     0x14003375c
   1400336f7:	jo     0x140033765
   1400336f9:	(bad)  
   1400336fa:	movsxd esp,DWORD PTR [rbp+0x40]
   1400336fd:	push   rcx
   1400336fe:	push   rbx
   1400336ff:	je     0x140033773
   140033701:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140033708:	rex.B
   140033709:	rex.B
   14003370a:	rex.B
   14003370b:	rex.RB
   14003370c:	push   r14
   14003370e:	xor    DWORD PTR [rax+0x56],eax
   140033711:	push   rcx
   140033712:	rex.XB push 0x40407261
   140033718:	push   rsi
   140033719:	push   rcx
   14003371a:	rex.WR (bad) 
   14003371c:	je     0x140033787
   14003371e:	outs   dx,BYTE PTR ds:[rsi]
   14003371f:	xor    DWORD PTR [rbx+0x74],edx
   140033722:	jb     0x14003378d
   140033724:	outs   dx,BYTE PTR ds:[rsi]
   140033725:	addr32 rex
   140033727:	rex push rdi
   140033729:	xor    al,0x43
   14003372b:	(bad)  
   14003372c:	jae    0x140033793
   14003372e:	push   rbx
   14003372f:	outs   dx,BYTE PTR gs:[rsi]
   140033731:	jae    0x14003379c
   140033733:	je     0x14003379e
   140033735:	jbe    0x1400337a0
   140033737:	je     0x1400337b2
   140033739:	rex push rcx
   14003373b:	je     0x14003377d
   14003373d:	rex
   14003373e:	rex pop rdx
   140033740:	add    BYTE PTR [rax],al
   140033742:	rol    BYTE PTR [rsi],0x3f
   140033745:	(bad)  
   140033746:	jo     0x1400337b8
   140033748:	outs   dx,BYTE PTR gs:[rsi]
   14003374a:	fs rex push rcx
   14003374d:	rex.X jns 0x1400337c4
   140033750:	gs rex.B jb 0x1400337c6
   140033754:	(bad)  
   140033755:	jns    0x140033797
   140033757:	rex push rcx
   140033759:	rex.RB
   14003375a:	rex.B
   14003375b:	rex.B
   14003375c:	rex.B
   14003375d:	rex.RB
   14003375e:	push   r14
   140033760:	xor    DWORD PTR [rax+0x44],eax
   140033763:	rex pop rdx
   140033765:	add    BYTE PTR [rdi+rdx*1+0x3f],ch
   140033769:	jae    0x1400337df
   14003376b:	(bad)  
   14003376c:	jb     0x1400337e2
   14003376e:	jae    0x1400337c7
   140033770:	imul   esi,DWORD PTR [rax+rbp*2+0x40],0x74794251
   140033778:	gs rex.B jb 0x1400337ee
   14003377c:	(bad)  
   14003377d:	jns    0x1400337bf
   14003377f:	rex push rcx
   140033781:	rex.RB
   140033782:	rex.X
   140033783:	pop    r15
   140033785:	rex.WRX
   140033786:	rex.B
   140033787:	rex.RB
   140033788:	rex.X push rsi
   14003378a:	xor    DWORD PTR [rax+0x40],eax
   14003378d:	pop    rdx
   14003378e:	add    BYTE PTR [rax],al
   140033790:	std    
   140033791:	(bad)  
   140033792:	(bad)  
   140033793:	(bad)  
   140033794:	je     0x1400337d6
   140033796:	push   rcx
   140033797:	rex.X jns 0x14003380e
   14003379a:	gs rex.B jb 0x140033810
   14003379e:	(bad)  
   14003379f:	jns    0x1400337e1
   1400337a1:	rex push rcx
   1400337a3:	rex.RB
   1400337a4:	rex.X
   1400337a5:	rex.B
   1400337a6:	rex.R
   1400337a7:	rex.W
   1400337a8:	rex pop rdx
   1400337aa:	add    BYTE PTR [rax],al
   1400337ac:	pop    rsp
   1400337ad:	adc    al,0x3f
   1400337af:	jb     0x140033816
   1400337b1:	jae    0x140033818
   1400337b3:	jb     0x14003382b
   1400337b5:	gs rex push rcx
   1400337b8:	rex.X jns 0x14003382f
   1400337bb:	gs rex.B jb 0x140033831
   1400337bf:	(bad)  
   1400337c0:	jns    0x140033802
   1400337c2:	rex push rcx
   1400337c4:	rex.RB
   1400337c5:	rex.B
   1400337c6:	pop    r8
   1400337c8:	rex.W
   1400337c9:	rex pop rdx
   1400337cb:	add    BYTE PTR [rdi+0x0],al
   1400337ce:	(bad)  
   1400337cf:	(bad)  
   1400337d0:	xor    BYTE PTR [rcx+0x42],dl
   1400337d3:	jns    0x140033849
   1400337d5:	gs rex.B jb 0x14003384b
   1400337d9:	(bad)  
   1400337da:	jns    0x14003381c
   1400337dc:	rex push rcx
   1400337de:	rex.RB
   1400337df:	rex.B
   1400337e0:	rex.B
   1400337e1:	rex
   1400337e2:	rex.W push rdi
   1400337e4:	xor    al,0x49
   1400337e6:	outs   dx,BYTE PTR ds:[rsi]
   1400337e7:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x617a696c
   1400337ef:	je     0x14003385a
   1400337f1:	outs   dx,DWORD PTR ds:[rsi]
   1400337f2:	outs   dx,BYTE PTR ds:[rsi]
   1400337f3:	rex push rcx
   1400337f5:	je     0x140033837
   1400337f7:	rex
   1400337f8:	rex pop rdx
   1400337fa:	add    BYTE PTR [rax],al
   1400337fc:	(bad)  
   1400337fd:	sbb    BYTE PTR [rdi],bh
   1400337ff:	je     0x140033870
   140033801:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140033803:	ja     0x14003386a
   140033805:	jb     0x140033847
   140033807:	push   rcx
   140033808:	push   rbx
   140033809:	je     0x14003387d
   14003380b:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140033812:	rex.X
   140033813:	rex.B (bad) 
   140033815:	push   r14
   140033817:	xor    DWORD PTR [rax+0x58],eax
   14003381a:	pop    rdx
   14003381b:	add    BYTE PTR [rcx+rdx*1+0x3f],dh
   14003381f:	jo     0x140033893
   140033821:	gs jo  0x140033889
   140033824:	outs   dx,BYTE PTR ds:[rsi]
   140033825:	fs rex push rcx
   140033828:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   140033830:	rex
   140033831:	rex push rcx
   140033833:	rex.RB
   140033834:	rex.B
   140033835:	push   r8
   140033837:	rex.RB
   140033838:	push   r8
   14003383a:	rex.RB
   14003383b:	pop    r8
   14003383d:	pop    rax
   14003383e:	pop    rdx
   14003383f:	add    BYTE PTR [rbx+rdx*1+0x3f],dh
   140033843:	jb     0x1400338aa
   140033845:	(bad)  
   140033846:	ins    BYTE PTR es:[rdi],dx
   140033847:	ins    BYTE PTR es:[rdi],dx
   140033848:	outs   dx,DWORD PTR ds:[rsi]
   140033849:	movsxd eax,DWORD PTR [rax+0x51]
   14003384c:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   140033854:	rex
   140033855:	rex push rcx
   140033857:	rex.RB
   140033858:	rex.B
   140033859:	pop    r8
   14003385b:	rex.W
   14003385c:	rex pop rdx
   14003385e:	add    BYTE PTR [rax],al
   140033860:	out    dx,al
   140033861:	(bad)  
   140033862:	(bad)  
   140033863:	(bad)  
   140033864:	jb     0x1400338cd
   140033866:	rex push rcx
   140033868:	push   rbx
   140033869:	je     0x1400338dd
   14003386b:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140033872:	rex.X
   140033873:	rex.B (bad) 
   140033875:	push   r14
   140033877:	xor    DWORD PTR [rax+0x56],eax
   14003387a:	push   rcx
   14003387b:	rex.XB push 0x40407261
   140033881:	rex.W xor BYTE PTR [rax+0x5a],al
   140033885:	add    BYTE PTR [rsi],ah
   140033887:	sbb    DWORD PTR [rdi],edi
   140033889:	je     0x1400338fa
   14003388b:	push   rbp
   14003388c:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14003388e:	je     0x1400338d0
   140033890:	push   rcx
   140033891:	rex.X jns 0x140033908
   140033894:	gs rex.B jb 0x14003390a
   140033898:	(bad)  
   140033899:	jns    0x1400338db
   14003389b:	rex push rcx
   14003389d:	rex.RB
   14003389e:	rex.X
   14003389f:	rex.B
   1400338a0:	rex.WB push r8
   1400338a2:	rex.RB
   1400338a3:	pop    r15
   1400338a5:	rex.WRX
   1400338a6:	rex.W
   1400338a7:	rex pop rdx
   1400338a9:	add    dl,dl
   1400338ab:	add    al,0x3f
   1400338ad:	(bad)  
   1400338ae:	push   r9
   1400338b0:	rex.X jns 0x140033927
   1400338b3:	gs rex.B jb 0x140033929
   1400338b7:	(bad)  
   1400338b8:	jns    0x1400338fa
   1400338ba:	rex push rcx
   1400338bc:	rex.RB
   1400338bd:	rex.X
   1400338be:	rex.B
   1400338bf:	rex.R
   1400338c0:	rex.W
   1400338c1:	rex pop rdx
   1400338c3:	add    BYTE PTR [rdx],bl
   1400338c5:	adc    BYTE PTR [rdi],bh
   1400338c7:	ins    DWORD PTR es:[rdi],dx
   1400338c8:	imul   esp,DWORD PTR [rax+rax*2+0x51],0x746e6f43
   1400338d0:	(bad)  
   1400338d1:	imul   ebp,DWORD PTR [rsi+0x65],0x706d4972
   1400338d8:	ins    BYTE PTR es:[rdi],dx
   1400338d9:	rex.W
   1400338da:	gs ins BYTE PTR es:[rdi],dx
   1400338dc:	jo     0x140033943
   1400338de:	jb     0x140033920
   1400338e0:	push   rcx
   1400338e1:	je     0x140033933
   1400338e3:	jb     0x14003394e
   1400338e5:	jbe    0x140033948
   1400338e7:	je     0x14003394e
   1400338e9:	rex
   1400338ea:	rex push rbx
   1400338ec:	rex.B (bad) 
   1400338ee:	push   r15
   1400338f0:	xor    al,0x43
   1400338f2:	jne    0x140033968
   1400338f4:	push   rdx
   1400338f5:	gs jae 0x14003396d
   1400338f8:	ins    BYTE PTR es:[rdi],dx
   1400338f9:	je     0x14003393b
   1400338fb:	xor    DWORD PTR [rdx],esi
   1400338fd:	rex
   1400338fe:	rex.W push rax
   140033900:	rex.RB
   140033901:	rex.B
   140033902:	rex.W xor BYTE PTR [rax+0x5a],al
   140033906:	add    BYTE PTR [rax],al
   140033908:	(bad)  
   140033909:	(bad)  
   14003390a:	(bad)  
   14003390b:	jae    0x14003397d
   14003390d:	ins    BYTE PTR es:[rdi],dx
   14003390e:	imul   esi,DWORD PTR [rax+rax*2+0x51],0x69727453
   140033916:	outs   dx,BYTE PTR ds:[rsi]
   140033917:	addr32 rex
   140033919:	rex push rcx
   14003391b:	rex.RB
   14003391c:	rex.X
   14003391d:	rex.B (bad) 
   14003391f:	push   r14
   140033921:	push   rcx
   140033922:	push   rbx
   140033923:	je     0x140033997
   140033925:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   14003392c:	rex
   14003392d:	rex push rsi
   14003392f:	push   rcx
   140033930:	rex.XB push 0x40407261
   140033936:	push   rdi
   140033937:	xor    al,0x53
   140033939:	jo     0x1400339a7
   14003393b:	imul   esi,DWORD PTR [rdx+rax*2+0x65],0x69766168
   140033943:	outs   dx,DWORD PTR ds:[rsi]
   140033944:	jb     0x140033986
   140033946:	xor    DWORD PTR [rax+0x57],eax
   140033949:	xor    al,0x43
   14003394b:	(bad)  
   14003394c:	jae    0x1400339b3
   14003394e:	push   rbx
   14003394f:	outs   dx,BYTE PTR gs:[rsi]
   140033951:	jae    0x1400339bc
   140033953:	je     0x1400339be
   140033955:	jbe    0x1400339c0
   140033957:	je     0x1400339d2
   140033959:	rex push rcx
   14003395b:	je     0x14003399d
   14003395d:	rex
   14003395e:	rex pop rdx
   140033960:	add    BYTE PTR [rax],al
   140033962:	icebp  
   140033963:	(bad)  
   140033964:	(bad)  
   140033965:	movsxd ebp,DWORD PTR [rax+0x6f]
   140033968:	jo     0x1400339aa
   14003396a:	push   rcx
   14003396b:	push   rbx
   14003396c:	je     0x1400339e0
   14003396e:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140033975:	rex.B
   140033976:	pop    r8
   140033978:	rex.W
   140033979:	rex pop rdx
   14003397b:	add    BYTE PTR [rip+0x6e653f0b],al        # 0x1ae68788c
   140033981:	fs jae 0x1400339db
   140033984:	imul   esi,DWORD PTR [rax+rbp*2+0x40],0x72745351
   14003398c:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140033993:	rex.X
   140033994:	pop    r15
   140033996:	rex.WRX push rsi
   140033998:	push   rcx
   140033999:	rex.XB push 0x40407261
   14003399f:	push   rdi
   1400339a0:	xor    al,0x43
   1400339a2:	(bad)  
   1400339a3:	jae    0x140033a0a
   1400339a5:	push   rbx
   1400339a6:	outs   dx,BYTE PTR gs:[rsi]
   1400339a8:	jae    0x140033a13
   1400339aa:	je     0x140033a15
   1400339ac:	jbe    0x140033a17
   1400339ae:	je     0x140033a29
   1400339b0:	rex push rcx
   1400339b2:	je     0x1400339f4
   1400339b4:	rex
   1400339b5:	rex pop rdx
   1400339b7:	add    BYTE PTR [rbx],cl
   1400339b9:	or     eax,0x646e693f
   1400339be:	gs js  0x140033a10
   1400339c1:	rex push cx
   1400339c4:	push   rbx
   1400339c5:	je     0x140033a39
   1400339c7:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   1400339ce:	rex.X
   1400339cf:	rex.B
   1400339d0:	rex.W push rsi
   1400339d2:	push   rcx
   1400339d3:	rex.XB push 0x40407261
   1400339d9:	rex.W push rdi
   1400339db:	xor    al,0x43
   1400339dd:	(bad)  
   1400339de:	jae    0x140033a45
   1400339e0:	push   rbx
   1400339e1:	outs   dx,BYTE PTR gs:[rsi]
   1400339e3:	jae    0x140033a4e
   1400339e5:	je     0x140033a50
   1400339e7:	jbe    0x140033a52
   1400339e9:	je     0x140033a64
   1400339eb:	rex push rcx
   1400339ed:	je     0x140033a2f
   1400339ef:	rex
   1400339f0:	rex pop rdx
   1400339f2:	add    BYTE PTR [rax],al
   1400339f4:	sub    al,0xf
   1400339f6:	(bad)  
   1400339f7:	ins    BYTE PTR es:[rdi],dx
   1400339f8:	(bad)  
   1400339f9:	jae    0x140033a6f
   1400339fb:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400339fd:	fs gs js 0x140033a50
   140033a01:	rex push cx
   140033a04:	push   rbx
   140033a05:	je     0x140033a79
   140033a07:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140033a0e:	rex.X
   140033a0f:	rex.B
   140033a10:	rex.W push rsi
   140033a12:	push   rcx
   140033a13:	rex.XB push 0x40407261
   140033a19:	rex.W push rdi
   140033a1b:	xor    al,0x43
   140033a1d:	(bad)  
   140033a1e:	jae    0x140033a85
   140033a20:	push   rbx
   140033a21:	outs   dx,BYTE PTR gs:[rsi]
   140033a23:	jae    0x140033a8e
   140033a25:	je     0x140033a90
   140033a27:	jbe    0x140033a92
   140033a29:	je     0x140033aa4
   140033a2b:	rex push rcx
   140033a2d:	je     0x140033a6f
   140033a2f:	rex
   140033a30:	rex pop rdx
   140033a32:	add    BYTE PTR [rax],al
   140033a34:	rcl    BYTE PTR [rax],0x3f
   140033a37:	outs   dx,BYTE PTR ds:[rsi]
   140033a38:	jne    0x140033aa7
   140033a3a:	(bad)  
   140033a3b:	gs jb  0x140033a7e
   140033a3e:	push   rcx
   140033a3f:	push   rbx
   140033a40:	je     0x140033ab4
   140033a42:	imul   ebp,DWORD PTR [rsi+0x67],0x41534040
   140033a49:	(bad)  
   140033a4a:	push   r14
   140033a4c:	xor    DWORD PTR [rax+0x48],eax
   140033a4f:	rex.W
   140033a50:	rex pop rdx
   140033a52:	add    BYTE PTR [rax],al
   140033a54:	fild   DWORD PTR [rdi+rdi*1]
   140033a57:	(bad)  
   140033a58:	push   r9
   140033a5a:	push   rbx
   140033a5b:	je     0x140033acf
   140033a5d:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140033a64:	rex.X
   140033a65:	rex.B (bad) 
   140033a67:	rex.X push rsi
   140033a69:	push   rcx
   140033a6a:	rex.XB push 0x40407261
   140033a70:	rex.W
   140033a71:	rex pop rdx
   140033a73:	add    BYTE PTR [rbp+0x0],dl
   140033a76:	(bad)  
   140033a77:	(bad)  
   140033a78:	xor    BYTE PTR [rcx+0x43],dl
   140033a7b:	push   0x40407261
   140033a80:	push   rcx
   140033a81:	rex.RB
   140033a82:	rex.B
   140033a83:	rex.B
   140033a84:	rex
   140033a85:	rex.W
   140033a86:	rex pop rdx
   140033a88:	add    BYTE PTR [rax],al
   140033a8a:	jrcxz  0x140033a96
   140033a8c:	(bad)  
   140033a8d:	outs   dx,BYTE PTR gs:[rsi]
   140033a8f:	fs rex push rcx
   140033a92:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   140033a9a:	rex
   140033a9b:	rex push rcx
   140033a9d:	rex.RB
   140033a9e:	rex.X
   140033a9f:	push   r8
   140033aa1:	rex.RB
   140033aa2:	push   r8
   140033aa4:	rex.RB
   140033aa5:	pop    r8
   140033aa7:	pop    rax
   140033aa8:	pop    rdx
   140033aa9:	add    BYTE PTR [rdx+0x7],al
   140033aac:	(bad)  
   140033aad:	(bad)  
   140033aae:	imul   ebp,DWORD PTR gs:[esi+0x40],0x73694c51
   140033ab7:	je     0x140033afd
   140033ab9:	(bad)  
   140033aba:	je     0x140033b1d
   140033abc:	rex
   140033abd:	rex push rcx
   140033abf:	rex.RB
   140033ac0:	rex.X
   140033ac1:	push   r8
   140033ac3:	rex.RB
   140033ac4:	push   r8
   140033ac6:	rex.RB
   140033ac7:	pop    r8
   140033ac9:	pop    rax
   140033aca:	pop    rdx
   140033acb:	add    BYTE PTR [rax+0x5],dl
   140033ace:	(bad)  
   140033acf:	(bad)  
   140033ad0:	pop    rcx
   140033ad1:	push   rcx
   140033ad2:	push   rbx
   140033ad3:	je     0x140033b47
   140033ad5:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140033adc:	rex.B
   140033add:	rex.B
   140033ade:	rex.B
   140033adf:	rex.RB
   140033ae0:	push   r14
   140033ae2:	xor    BYTE PTR [rax+0x41],al
   140033ae5:	rex.RB
   140033ae6:	rex.X push rsi
   140033ae8:	xor    BYTE PTR [rax+0x40],al
   140033aeb:	pop    rdx
   140033aec:	add    BYTE PTR [rax],al
   140033aee:	cwde   
   140033aef:	sbb    BYTE PTR [rdi],bh
   140033af1:	je     0x140033b62
   140033af3:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140033af5:	je     0x140033b37
   140033af7:	push   rcx
   140033af8:	push   rbx
   140033af9:	je     0x140033b6d
   140033afb:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140033b02:	rex.X
   140033b03:	rex.B
   140033b04:	rex.W push rax
   140033b06:	rex.RB
   140033b07:	pop    r15
   140033b09:	rex.WRX
   140033b0a:	rex.W
   140033b0b:	rex pop rdx
   140033b0d:	add    BYTE PTR [rcx],bh
   140033b0f:	or     BYTE PTR [rdi],bh
   140033b11:	movsxd ebp,DWORD PTR [rdi+0x64]
   140033b14:	movsxd eax,DWORD PTR gs:[rsi+0x6f]
   140033b18:	jb     0x140033b68
   140033b1a:	(bad)  
   140033b1b:	ins    DWORD PTR es:[rdi],dx
   140033b1c:	gs rex push rcx
   140033b1f:	push   rsp
   140033b20:	gs js  0x140033b97
   140033b23:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140033b25:	fs movsxd eax,DWORD PTR gs:[rax+0x40]
   140033b2a:	push   rbx
   140033b2b:	push   r8
   140033b2d:	rex.RB
   140033b2e:	push   r14
   140033b30:	xor    DWORD PTR [rax+0x41],eax
   140033b33:	rex.RB
   140033b34:	rex.X push rsi
   140033b36:	push   rcx
   140033b37:	rex.X jns 0x140033bae
   140033b3a:	gs rex.B jb 0x140033bb0
   140033b3e:	(bad)  
   140033b3f:	jns    0x140033b81
   140033b41:	rex
   140033b42:	rex pop rdx
   140033b44:	add    BYTE PTR [rax],al
   140033b46:	(bad)  
   140033b47:	(bad)  
   140033b49:	ins    BYTE PTR es:[rdi],dx
   140033b4a:	gs data16 je 0x140033b8e
   140033b4e:	push   rcx
   140033b4f:	rex.X jns 0x140033bc6
   140033b52:	gs rex.B jb 0x140033bc8
   140033b56:	(bad)  
   140033b57:	jns    0x140033b99
   140033b59:	rex push rcx
   140033b5b:	rex.RB
   140033b5c:	rex.X
   140033b5d:	rex.B (bad) 
   140033b5f:	push   r14
   140033b61:	xor    DWORD PTR [rax+0x48],eax
   140033b64:	rex pop rdx
   140033b66:	add    BYTE PTR [rax],al
   140033b68:	sub    dl,BYTE PTR [rdi]
   140033b6a:	(bad)  
   140033b6b:	jae    0x140033bdd
   140033b6d:	ins    BYTE PTR es:[rdi],dx
   140033b6e:	imul   esi,DWORD PTR [rax+rax*2+0x51],0x65747942
   140033b76:	rex.B jb 0x140033beb
   140033b79:	(bad)  
   140033b7a:	jns    0x140033bbc
   140033b7c:	rex push rcx
   140033b7e:	rex.RB
   140033b7f:	rex.X
   140033b80:	rex.B (bad) 
   140033b82:	push   r14
   140033b84:	(bad)  
   140033b85:	and    al,0x51
   140033b87:	imul   r14,QWORD PTR [rbx+0x74],0x42515640
   140033b8f:	jns    0x140033c05
   140033b91:	gs rex.B jb 0x140033c07
   140033b95:	(bad)  
   140033b96:	jns    0x140033bd8
   140033b98:	rex
   140033b99:	rex
   140033b9a:	rex
   140033b9b:	rex.R
   140033b9c:	rex pop rdx
   140033b9e:	add    BYTE PTR [rax],al
   140033ba0:	add    DWORD PTR [rip+0x646e693f],ecx        # 0x1a471a4e5
   140033ba6:	gs js  0x140033bf8
   140033ba9:	rex push cx
   140033bac:	rex.X jns 0x140033c23
   140033baf:	gs rex.B jb 0x140033c25
   140033bb3:	(bad)  
   140033bb4:	jns    0x140033bf6
   140033bb6:	rex push rcx
   140033bb8:	rex.RB
   140033bb9:	rex.X
   140033bba:	rex.B
   140033bbb:	rex.W
   140033bbc:	rex.R
   140033bbd:	rex.W
   140033bbe:	rex pop rdx
   140033bc0:	add    BYTE PTR [rax],al
   140033bc2:	sbb    DWORD PTR ds:[rdi],edi
   140033bc5:	je     0x140033c36
   140033bc7:	push   rbp
   140033bc8:	outs   dx,BYTE PTR ds:[rsi]
   140033bc9:	imul   esp,DWORD PTR [rbx+0x6f],0x51406564
   140033bd0:	push   rsp
   140033bd1:	gs js  0x140033c48
   140033bd4:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140033bd6:	fs movsxd eax,DWORD PTR gs:[rax+0x40]
   140033bdb:	push   rcx
   140033bdc:	rex.RB
   140033bdd:	rex.X
   140033bde:	rex.B (bad) 
   140033be0:	push   r14
   140033be2:	push   rcx
   140033be3:	push   rbx
   140033be4:	je     0x140033c58
   140033be6:	imul   ebp,DWORD PTR [rsi+0x67],0x45414040
   140033bed:	rex.X push rsi
   140033bef:	push   rcx
   140033bf0:	rex.X jns 0x140033c67
   140033bf3:	gs rex.B jb 0x140033c69
   140033bf7:	(bad)  
   140033bf8:	jns    0x140033c3a
   140033bfa:	rex
   140033bfb:	rex pop rdx
   140033bfd:	add    BYTE PTR [rdi+0xf],al
   140033c00:	(bad)  
   140033c01:	ins    BYTE PTR es:[rdi],dx
   140033c02:	outs   dx,BYTE PTR gs:[rsi]
   140033c04:	addr32 je 0x140033c6f
   140033c07:	rex push rcx
   140033c09:	push   rbx
   140033c0a:	je     0x140033c7e
   140033c0c:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140033c13:	rex.X
   140033c14:	rex.B
   140033c15:	rex.W pop rax
   140033c17:	pop    rdx
   140033c18:	add    BYTE PTR [rax],al
   140033c1a:	sub    eax,0x70733f17
   140033c1f:	ins    BYTE PTR es:[rdi],dx
   140033c20:	imul   esi,DWORD PTR [rax+rax*2+0x51],0x69727453
   140033c28:	outs   dx,BYTE PTR ds:[rsi]
   140033c29:	addr32 rex
   140033c2b:	rex push rcx
   140033c2d:	rex.RB
   140033c2e:	rex.X
   140033c2f:	rex.B (bad) 
   140033c31:	push   r14
   140033c33:	push   rcx
   140033c34:	push   rbx
   140033c35:	je     0x140033ca9
   140033c37:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   140033c3e:	rex
   140033c3f:	rex
   140033c40:	rex.B
   140033c41:	rex.RB
   140033c42:	rex.X push rsi
   140033c44:	push   rcx
   140033c45:	push   rdx
   140033c46:	gs addr32 rex.RB js 0x140033cbb
   140033c4b:	rex
   140033c4c:	rex push rdi
   140033c4e:	xor    al,0x53
   140033c50:	jo     0x140033cbe
   140033c52:	imul   esi,DWORD PTR [rdx+rax*2+0x65],0x69766168
   140033c5a:	outs   dx,DWORD PTR ds:[rsi]
   140033c5b:	jb     0x140033c9d
   140033c5d:	xor    DWORD PTR [rax+0x40],eax
   140033c60:	pop    rdx
   140033c61:	add    BYTE PTR [rcx],ah
   140033c63:	or     al,0x3f
   140033c65:	data16 jb 0x140033cd7
   140033c68:	ins    DWORD PTR es:[rdi],dx
   140033c69:	rex.WR (bad) 
   140033c6b:	je     0x140033cd6
   140033c6d:	outs   dx,BYTE PTR ds:[rsi]
   140033c6e:	xor    DWORD PTR [rax+0x51],eax
   140033c71:	push   rbx
   140033c72:	je     0x140033ce6
   140033c74:	imul   ebp,DWORD PTR [rsi+0x67],0x41534040
   140033c7b:	(bad)  
   140033c7c:	push   r14
   140033c7e:	xor    DWORD PTR [rax+0x41],eax
   140033c81:	rex.RB
   140033c82:	rex.X push rsi
   140033c84:	push   rcx
   140033c85:	rex.X jns 0x140033cfc
   140033c88:	gs rex.B jb 0x140033cfe
   140033c8c:	(bad)  
   140033c8d:	jns    0x140033ccf
   140033c8f:	rex
   140033c90:	rex pop rdx
   140033c92:	add    BYTE PTR [rax],al
   140033c94:	rex.RXB add eax,0x51593f3f
   140033c9a:	rex.X jns 0x140033d11
   140033c9d:	gs rex.B jb 0x140033d13
   140033ca1:	(bad)  
   140033ca2:	jns    0x140033ce4
   140033ca4:	rex push rcx
   140033ca6:	rex.RB
   140033ca7:	rex.B
   140033ca8:	rex.B
   140033ca9:	rex.B
   140033caa:	rex.RB
   140033cab:	push   r14
   140033cad:	xor    BYTE PTR [rax+0x44],al
   140033cb0:	rex pop rdx
   140033cb2:	add    BYTE PTR [rax],al
   140033cb4:	rex.RB add eax,0x51593f3f
   140033cba:	rex.X jns 0x140033d31
   140033cbd:	gs rex.B jb 0x140033d33
   140033cc1:	(bad)  
   140033cc2:	jns    0x140033d04
   140033cc4:	rex push rcx
   140033cc6:	rex.RB
   140033cc7:	rex.B
   140033cc8:	rex.B
   140033cc9:	rex.B
   140033cca:	rex.RB
   140033ccb:	push   r14
   140033ccd:	xor    BYTE PTR [rax+0x41],al
   140033cd0:	rex.RB
   140033cd1:	rex.X push rsi
   140033cd3:	xor    BYTE PTR [rax+0x40],al
   140033cd6:	pop    rdx
   140033cd7:	add    dh,bh
   140033cd9:	(bad)  
   140033cda:	(bad)  
   140033cdb:	jae    0x140033d46
   140033cdd:	jp     0x140033d44
   140033cdf:	rex push rcx
   140033ce1:	rex.X jns 0x140033d58
   140033ce4:	gs rex.B jb 0x140033d5a
   140033ce8:	(bad)  
   140033ce9:	jns    0x140033d2b
   140033ceb:	rex push rcx
   140033ced:	rex.RB
   140033cee:	rex.X
   140033cef:	rex.B
   140033cf0:	rex.W pop rax
   140033cf2:	pop    rdx
   140033cf3:	add    BYTE PTR [rbp+0x17],ch
   140033cf6:	(bad)  
   140033cf7:	jae    0x140033d6d
   140033cf9:	(bad)  
   140033cfa:	jb     0x140033d70
   140033cfc:	jae    0x140033d55
   140033cfe:	imul   esi,DWORD PTR [rax+rbp*2+0x40],0x74794251
   140033d06:	gs rex.B jb 0x140033d7c
   140033d0a:	(bad)  
   140033d0b:	jns    0x140033d4d
   140033d0d:	rex push rcx
   140033d0f:	rex.RB
   140033d10:	rex.X
   140033d11:	pop    r15
   140033d13:	rex.WRX
   140033d14:	rex.R
   140033d15:	rex pop rdx
   140033d17:	add    BYTE PTR [rax],cl
   140033d19:	sbb    bh,BYTE PTR [rdi]
   140033d1b:	je     0x140033d8f
   140033d1d:	imul   ebp,DWORD PTR [rbp+0x6d],0x51406465
   140033d24:	rex.X jns 0x140033d9b
   140033d27:	gs rex.B jb 0x140033d9d
   140033d2b:	(bad)  
   140033d2c:	jns    0x140033d6e
   140033d2e:	rex push rcx
   140033d30:	rex.RB
   140033d31:	rex.X
   140033d32:	rex.B (bad) 
   140033d34:	push   r14
   140033d36:	xor    DWORD PTR [rax+0x58],eax
   140033d39:	pop    rdx
   140033d3a:	add    BYTE PTR [rax],al
   140033d3c:	pop    rbx
   140033d3d:	adc    edi,DWORD PTR [rdi]
   140033d3f:	jb     0x140033da6
   140033d41:	(bad)  
   140033d42:	imul   r13,QWORD PTR fs:[rsi+0x65],0x4f495140
   140033d4b:	rex.R
   140033d4c:	gs jbe 0x140033db8
   140033d4f:	movsxd esp,DWORD PTR [rbp+0x40]
   140033d52:	rex push rcx
   140033d54:	rex.RB
   140033d55:	rex.B
   140033d56:	rex.B (bad) 
   140033d58:	push   r14
   140033d5a:	push   rcx
   140033d5b:	rex.X jns 0x140033dd2
   140033d5e:	gs rex.B jb 0x140033dd4
   140033d62:	(bad)  
   140033d63:	jns    0x140033da5
   140033d65:	rex pop rdi
   140033d67:	rex.WX
   140033d68:	rex pop rdx
   140033d6a:	add    BYTE PTR [rax],al
   140033d6c:	(bad)  
   140033d6d:	or     eax,0x4473693f
   140033d72:	imul   esp,DWORD PTR [rdi+0x69],0x43514074
   140033d79:	push   0x40407261
   140033d7e:	push   rcx
   140033d7f:	rex.RB
   140033d80:	rex.X
   140033d81:	pop    r15
   140033d83:	rex.WRX pop rax
   140033d85:	pop    rdx
   140033d86:	add    BYTE PTR [rax],al
   140033d88:	pop    rcx
   140033d89:	add    al,0x3f
   140033d8b:	(bad)  
   140033d8c:	ss push rcx
   140033d8e:	push   rsp
   140033d8f:	gs js  0x140033e06
   140033d92:	push   rbx
   140033d93:	je     0x140033e07
   140033d95:	gs (bad) 
   140033d97:	ins    DWORD PTR es:[rdi],dx
   140033d98:	rex
   140033d99:	rex push rcx
   140033d9b:	rex.RB
   140033d9c:	rex.B
   140033d9d:	rex.B
   140033d9e:	rex.B
   140033d9f:	rex.RB
   140033da0:	push   r14
   140033da2:	xor    BYTE PTR [rax+0x56],al
   140033da5:	push   rcx
   140033da6:	rex.WR (bad) 
   140033da8:	je     0x140033e13
   140033daa:	outs   dx,BYTE PTR ds:[rsi]
   140033dab:	xor    DWORD PTR [rbx+0x74],edx
   140033dae:	jb     0x140033e19
   140033db0:	outs   dx,BYTE PTR ds:[rsi]
   140033db1:	addr32 rex
   140033db3:	rex
   140033db4:	rex pop rdx
   140033db6:	add    BYTE PTR [rax],al
   140033db8:	sti    
   140033db9:	or     bh,BYTE PTR [rdi]
   140033dbb:	outs   dx,BYTE PTR gs:[rsi]
   140033dbd:	fs ins BYTE PTR es:[rdi],dx
   140033dbf:	rex
   140033dc0:	rex pop rcx
   140033dc2:	rex.B
   140033dc3:	rex.B
   140033dc4:	rex.RB
   140033dc5:	push   r14
   140033dc7:	push   rcx
   140033dc8:	push   rsp
   140033dc9:	gs js  0x140033e40
   140033dcc:	push   rbx
   140033dcd:	je     0x140033e41
   140033dcf:	gs (bad) 
   140033dd1:	ins    DWORD PTR es:[rdi],dx
   140033dd2:	rex
   140033dd3:	rex
   140033dd4:	rex.B
   140033dd5:	rex.RB
   140033dd6:	push   r14
   140033dd8:	xor    DWORD PTR [rax+0x40],eax
   140033ddb:	pop    rdx
   140033ddc:	add    BYTE PTR [rax],al
   140033dde:	xor    ecx,DWORD PTR [rax]
   140033de0:	(bad)  
   140033de1:	movsxd ebp,DWORD PTR [rdi+0x64]
   140033de4:	movsxd eax,DWORD PTR gs:[rax+0x51]
   140033de8:	push   rsp
   140033de9:	gs js  0x140033e60
   140033dec:	push   rbx
   140033ded:	je     0x140033e61
   140033def:	gs (bad) 
   140033df1:	ins    DWORD PTR es:[rdi],dx
   140033df2:	rex
   140033df3:	rex push rcx
   140033df5:	rex.RB
   140033df6:	rex.X
   140033df7:	push   r8
   140033df9:	rex.RB
   140033dfa:	push   r14
   140033dfc:	push   rcx
   140033dfd:	push   rsp
   140033dfe:	gs js  0x140033e75
   140033e01:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140033e03:	fs movsxd eax,DWORD PTR gs:[rax+0x40]
   140033e08:	pop    rax
   140033e09:	pop    rdx
   140033e0a:	add    BYTE PTR [rax],al
   140033e0c:	rex.WR adc rax,0x7465733f
   140033e12:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140033e14:	fs movsxd eax,DWORD PTR gs:[rax+0x51]
   140033e19:	push   rsp
   140033e1a:	gs js  0x140033e91
   140033e1d:	push   rbx
   140033e1e:	je     0x140033e92
   140033e20:	gs (bad) 
   140033e22:	ins    DWORD PTR es:[rdi],dx
   140033e23:	rex
   140033e24:	rex push rcx
   140033e26:	rex.RB
   140033e27:	rex.B
   140033e28:	pop    r8
   140033e2a:	push   rax
   140033e2b:	rex.RB
   140033e2c:	rex.X
   140033e2d:	rex.R
   140033e2e:	rex pop rdx
   140033e30:	add    BYTE PTR [rax],al
   140033e32:	(bad)  
   140033e33:	sbb    BYTE PTR [rdi],bh
   140033e35:	jae    0x140033eae
   140033e37:	(bad)  
   140033e38:	jo     0x140033e7a
   140033e3a:	push   rcx
   140033e3b:	push   rbx
   140033e3c:	je     0x140033eb0
   140033e3e:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140033e45:	rex.B
   140033e46:	pop    r8
   140033e48:	rex.B
   140033e49:	rex.RB
   140033e4a:	push   r14
   140033e4c:	xor    DWORD PTR [rax+0x40],eax
   140033e4f:	pop    rdx
   140033e50:	add    BYTE PTR [rax],al
   140033e52:	movsxd eax,DWORD PTR [rdi+rdi*1]
   140033e55:	(bad)  
   140033e56:	cmp    BYTE PTR [rax+0x59],al
   140033e59:	pop    r15
   140033e5b:	rex.WRX
   140033e5c:	rex.B
   140033e5d:	rex.RB
   140033e5e:	rex.X push rsi
   140033e60:	push   rcx
   140033e61:	push   rbx
   140033e62:	je     0x140033ed6
   140033e64:	imul   ebp,DWORD PTR [rsi+0x67],0x45414040
   140033e6b:	rex.X push rsi
   140033e6d:	push   rcx
   140033e6e:	push   rbx
   140033e6f:	je     0x140033ee3
   140033e71:	imul   ebp,DWORD PTR [rsi+0x67],0x40666552
   140033e78:	rex
   140033e79:	rex pop rdx
   140033e7b:	add    BYTE PTR [rbp+0x303f3f01],dl
   140033e81:	push   rcx
   140033e82:	push   rbx
   140033e83:	je     0x140033ef7
   140033e85:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140033e8c:	rex.B
   140033e8d:	rex.B
   140033e8e:	rex push rsi
   140033e90:	push   rcx
   140033e91:	rex.XB push 0x40407261
   140033e97:	rex pop rdx
   140033e99:	add    BYTE PTR [rcx],ch
   140033e9b:	sbb    DWORD PTR [rdi],edi
   140033e9d:	je     0x140033f0e
   140033e9f:	push   rbp
   140033ea0:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140033ea2:	je     0x140033ee4
   140033ea4:	push   rcx
   140033ea5:	push   rbx
   140033ea6:	je     0x140033f1a
   140033ea8:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140033eaf:	rex.X
   140033eb0:	rex.B
   140033eb1:	rex.WB push r8
   140033eb3:	rex.RB
   140033eb4:	pop    r15
   140033eb6:	rex.WRX
   140033eb7:	rex.W
   140033eb8:	rex pop rdx
   140033eba:	add    BYTE PTR [rax],al
   140033ebc:	inc    DWORD PTR [rdi+rdi*1]
   140033ebf:	(bad)  
   140033ec0:	rex.WRB
   140033ec1:	rex pop rcx
   140033ec3:	pop    r15
   140033ec5:	rex.WRX
   140033ec6:	rex.B
   140033ec7:	rex.RB
   140033ec8:	rex.X push rsi
   140033eca:	push   rcx
   140033ecb:	push   rbx
   140033ecc:	je     0x140033f40
   140033ece:	imul   ebp,DWORD PTR [rsi+0x67],0x40304040
   140033ed5:	pop    rdx
   140033ed6:	add    BYTE PTR [rax],al
   140033ed8:	xor    BYTE PTR [rbx],dl
   140033eda:	(bad)  
   140033edb:	jb     0x140033f3e
   140033edd:	imul   esi,DWORD PTR [rbx+0x65],0x6f727245
   140033ee4:	jb     0x140033f26
   140033ee6:	push   rcx
   140033ee7:	pop    rax
   140033ee8:	ins    DWORD PTR es:[rdi],dx
   140033ee9:	ins    BYTE PTR es:[rdi],dx
   140033eea:	push   rbx
   140033eeb:	je     0x140033f5f
   140033eed:	gs (bad) 
   140033eef:	ins    DWORD PTR es:[rdi],dx
   140033ef0:	push   rdx
   140033ef1:	gs (bad) 
   140033ef3:	fs gs jb 0x140033f37
   140033ef7:	rex push rcx
   140033ef9:	rex.RB
   140033efa:	rex.B
   140033efb:	pop    r8
   140033efd:	rex.B
   140033efe:	rex.RB
   140033eff:	rex.X push rsi
   140033f01:	push   rcx
   140033f02:	push   rbx
   140033f03:	je     0x140033f77
   140033f05:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   140033f0c:	add    BYTE PTR [rax],al
   140033f0e:	or     rdi,QWORD PTR [r15]
   140033f11:	gs jb  0x140033f86
   140033f14:	outs   dx,DWORD PTR ds:[rsi]
   140033f15:	jb     0x140033f6a
   140033f17:	je     0x140033f8b
   140033f19:	imul   ebp,DWORD PTR [rsi+0x67],0x6d585140
   140033f20:	ins    BYTE PTR es:[rdi],dx
   140033f21:	push   rbx
   140033f22:	je     0x140033f96
   140033f24:	gs (bad) 
   140033f26:	ins    DWORD PTR es:[rdi],dx
   140033f27:	push   rdx
   140033f28:	gs (bad) 
   140033f2a:	fs gs jb 0x140033f6e
   140033f2e:	rex push rcx
   140033f30:	rex.RB
   140033f31:	rex.X
   140033f32:	rex.B (bad) 
   140033f34:	push   r14
   140033f36:	push   rcx
   140033f37:	push   rbx
   140033f38:	je     0x140033fac
   140033f3a:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   140033f41:	add    bh,ch
   140033f43:	(bad)  
   140033f44:	(bad)  
   140033f45:	(bad)  
   140033f46:	jb     0x140033faf
   140033f48:	rex push rcx
   140033f4a:	push   rbx
   140033f4b:	je     0x140033fbf
   140033f4d:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140033f54:	rex.X
   140033f55:	rex.B (bad) 
   140033f57:	push   r14
   140033f59:	xor    DWORD PTR [rax+0x5f],eax
   140033f5c:	rex.WX
   140033f5d:	rex.W
   140033f5e:	rex.W push rsi
   140033f60:	push   rcx
   140033f61:	rex.XB push 0x40407261
   140033f67:	rex pop rdx
   140033f69:	add    BYTE PTR [rsi+0xf],cl
   140033f6c:	(bad)  
   140033f6d:	ins    BYTE PTR es:[rdi],dx
   140033f6e:	imul   ebp,DWORD PTR [rsi+0x65],0x626d754e
   140033f75:	gs jb  0x140033fb8
   140033f78:	push   rcx
   140033f79:	pop    rax
   140033f7a:	ins    DWORD PTR es:[rdi],dx
   140033f7b:	ins    BYTE PTR es:[rdi],dx
   140033f7c:	push   rbx
   140033f7d:	je     0x140033ff1
   140033f7f:	gs (bad) 
   140033f81:	ins    DWORD PTR es:[rdi],dx
   140033f82:	push   rdx
   140033f83:	gs (bad) 
   140033f85:	fs gs jb 0x140033fc9
   140033f89:	rex push rcx
   140033f8b:	rex.RB
   140033f8c:	rex.X
   140033f8d:	pop    r15
   140033f8f:	rex.WX pop rax
   140033f91:	pop    rdx
   140033f92:	add    BYTE PTR [rax],al
   140033f94:	rex.RX or BYTE PTR [rdi],r15b
   140033f97:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140033f9a:	jne    0x140034009
   140033f9c:	outs   dx,BYTE PTR ds:[rsi]
   140033f9d:	rex.WRX jne 0x14003400d
   140033fa0:	(bad)  
   140033fa1:	gs jb  0x140033fe4
   140033fa4:	push   rcx
   140033fa5:	pop    rax
   140033fa6:	ins    DWORD PTR es:[rdi],dx
   140033fa7:	ins    BYTE PTR es:[rdi],dx
   140033fa8:	push   rbx
   140033fa9:	je     0x14003401d
   140033fab:	gs (bad) 
   140033fad:	ins    DWORD PTR es:[rdi],dx
   140033fae:	push   rdx
   140033faf:	gs (bad) 
   140033fb1:	fs gs jb 0x140033ff5
   140033fb5:	rex push rcx
   140033fb7:	rex.RB
   140033fb8:	rex.X
   140033fb9:	pop    r15
   140033fbb:	rex.WX pop rax
   140033fbd:	pop    rdx
   140033fbe:	add    BYTE PTR [rax],al
   140033fc0:	cmp    BYTE PTR [rbx],cl
   140033fc2:	(bad)  
   140033fc3:	gs jb  0x140034038
   140033fc6:	outs   dx,DWORD PTR ds:[rsi]
   140033fc7:	jb     0x140034009
   140033fc9:	push   rcx
   140033fca:	pop    rax
   140033fcb:	ins    DWORD PTR es:[rdi],dx
   140033fcc:	ins    BYTE PTR es:[rdi],dx
   140033fcd:	push   rbx
   140033fce:	je     0x140034042
   140033fd0:	gs (bad) 
   140033fd2:	ins    DWORD PTR es:[rdi],dx
   140033fd3:	push   rdx
   140033fd4:	gs (bad) 
   140033fd6:	fs gs jb 0x14003401a
   140033fda:	rex push rcx
   140033fdc:	rex.RB
   140033fdd:	rex.X
   140033fde:	rex.B (bad) 
   140033fe0:	push   r15
   140033fe2:	xor    al,0x45
   140033fe4:	jb     0x140034058
   140033fe6:	outs   dx,DWORD PTR ds:[rsi]
   140033fe7:	jb     0x140034029
   140033fe9:	xor    DWORD PTR [rax+0x58],eax
   140033fec:	pop    rdx
   140033fed:	add    BYTE PTR [rbp+0x61763f1a],bl
   140033ff3:	ins    BYTE PTR es:[rdi],dx
   140033ff4:	jne    0x14003405b
   140033ff6:	rex push rcx
   140033ff8:	pop    rax
   140033ff9:	ins    DWORD PTR es:[rdi],dx
   140033ffa:	ins    BYTE PTR es:[rdi],dx
   140033ffb:	push   rbx
   140033ffc:	je     0x140034070
   140033ffe:	gs (bad) 
   140034000:	ins    DWORD PTR es:[rdi],dx
   140034001:	rex.B je 0x140034078
   140034004:	jb     0x14003406f
   140034006:	(bad)  
   140034007:	jne    0x14003407d
   140034009:	gs jae 0x14003404c
   14003400c:	rex push rcx
   14003400e:	rex.RB
   14003400f:	rex.X
   140034010:	rex.B (bad) 
   140034012:	push   r14
   140034014:	push   rcx
   140034015:	push   rbx
   140034016:	je     0x14003408a
   140034018:	imul   ebp,DWORD PTR [rsi+0x67],0x40666552
   14003401f:	rex
   140034020:	rex.B
   140034021:	rex.RB
   140034022:	rex.X push rsi
   140034024:	push   rcx
   140034025:	push   rbx
   140034026:	je     0x14003409a
   140034028:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   14003402f:	add    BYTE PTR [rdi+0x17],ch
   140034032:	(bad)  
   140034033:	jae    0x1400340a9
   140034035:	(bad)  
   140034036:	jb     0x1400340ac
   140034038:	jae    0x140034091
   14003403a:	imul   esi,DWORD PTR [rax+rbp*2+0x40],0x72745351
   140034042:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140034049:	rex.X
   14003404a:	pop    r15
   14003404c:	rex.WRX
   14003404d:	rex.B
   14003404e:	rex.RB
   14003404f:	rex.X push rsi
   140034051:	xor    DWORD PTR [rax+0x57],eax
   140034054:	xor    al,0x43
   140034056:	(bad)  
   140034057:	jae    0x1400340be
   140034059:	push   rbx
   14003405a:	outs   dx,BYTE PTR gs:[rsi]
   14003405c:	jae    0x1400340c7
   14003405e:	je     0x1400340c9
   140034060:	jbe    0x1400340cb
   140034062:	je     0x1400340dd
   140034064:	rex push rcx
   140034066:	je     0x1400340a8
   140034068:	rex
   140034069:	rex pop rdx
   14003406b:	add    BYTE PTR [rdi+0x13],dl
   14003406e:	(bad)  
   14003406f:	jb     0x1400340d6
   140034071:	(bad)  
   140034072:	fs rex.RB ins BYTE PTR es:[rdi],dx
   140034075:	gs ins DWORD PTR es:[rdi],dx
   140034077:	outs   dx,BYTE PTR gs:[rsi]
   140034079:	je     0x1400340cf
   14003407b:	gs js  0x1400340f2
   14003407e:	rex push rcx
   140034080:	pop    rax
   140034081:	ins    DWORD PTR es:[rdi],dx
   140034082:	ins    BYTE PTR es:[rdi],dx
   140034083:	push   rbx
   140034084:	je     0x1400340f8
   140034086:	gs (bad) 
   140034088:	ins    DWORD PTR es:[rdi],dx
   140034089:	push   rdx
   14003408a:	gs (bad) 
   14003408c:	fs gs jb 0x1400340d0
   140034090:	rex push rcx
   140034092:	rex.RB
   140034093:	rex.B
   140034094:	rex.B (bad) 
   140034096:	push   r14
   140034098:	push   rcx
   140034099:	push   rbx
   14003409a:	je     0x14003410e
   14003409c:	imul   ebp,DWORD PTR [rsi+0x67],0x34574040
   1400340a3:	push   rdx
   1400340a4:	gs (bad) 
   1400340a6:	fs rex.RB ins BYTE PTR es:[rdi],dx
   1400340a9:	gs ins DWORD PTR es:[rdi],dx
   1400340ab:	outs   dx,BYTE PTR gs:[rsi]
   1400340ad:	je     0x140034103
   1400340af:	gs js  0x140034126
   1400340b2:	rex.X
   1400340b3:	gs push 0x6f697661
   1400340b9:	jne    0x14003412d
   1400340bb:	rex xor DWORD PTR [rax+0x40],eax
   1400340bf:	pop    rdx
   1400340c0:	add    BYTE PTR [rax],al
   1400340c2:	pop    rax
   1400340c3:	or     al,0x3f
   1400340c5:	data16 jb 0x140034137
   1400340c8:	ins    DWORD PTR es:[rdi],dx
   1400340c9:	push   rbp
   1400340ca:	je     0x140034132
   1400340cc:	cmp    BYTE PTR [rax+0x51],al
   1400340cf:	push   rbx
   1400340d0:	je     0x140034144
   1400340d2:	imul   ebp,DWORD PTR [rsi+0x67],0x41534040
   1400340d9:	(bad)  
   1400340da:	push   r14
   1400340dc:	xor    DWORD PTR [rax+0x50],eax
   1400340df:	rex.RB
   1400340e0:	rex.X
   1400340e1:	rex.R
   1400340e2:	rex.W
   1400340e3:	rex pop rdx
   1400340e5:	add    BYTE PTR [rax+0xb],dh
   1400340e8:	(bad)  
   1400340e9:	gs js  0x14003414d
   1400340ec:	movsxd esi,DWORD PTR [rbp+rcx*2+0x61]
   1400340f0:	je     0x140034155
   1400340f2:	push   0x65525140
   1400340f7:	addr32 rex.RB js 0x14003416b
   1400340fb:	rex
   1400340fc:	rex push rcx
   1400340fe:	rex.RB
   1400340ff:	rex.X
   140034100:	pop    r15
   140034102:	rex.WRX
   140034103:	rex.B
   140034104:	rex.RB
   140034105:	rex.X push rsi
   140034107:	push   rcx
   140034108:	push   rbx
   140034109:	je     0x14003417d
   14003410b:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   140034112:	add    BYTE PTR [rax],al
   140034114:	mov    cl,0x13
   140034116:	(bad)  
   140034117:	jb     0x14003417e
   140034119:	ins    BYTE PTR es:[rdi],dx
   14003411a:	(bad)  
   14003411b:	je     0x140034186
   14003411d:	jbe    0x140034184
   14003411f:	imul   r13d,DWORD PTR [rbp+r12*2+0x50],0x40687461
   140034128:	push   rcx
   140034129:	imul   r14d,DWORD PTR [rdx+0x40],0x42455140
   140034131:	rex.B (bad) 
   140034133:	push   r14
   140034135:	push   rcx
   140034136:	push   rbx
   140034137:	je     0x1400341ab
   140034139:	imul   ebp,DWORD PTR [rsi+0x67],0x45414040
   140034140:	rex.X push rsi
   140034142:	xor    al,BYTE PTR [rax+0x40]
   140034145:	pop    rdx
   140034146:	add    BYTE PTR [rax],al
   140034148:	push   rsi
   140034149:	add    DWORD PTR [rdi],edi
   14003414b:	(bad)  
   14003414c:	xor    BYTE PTR [rcx+0x52],dl
   14003414f:	gs addr32 rex.RB js 0x1400341c4
   140034154:	rex
   140034155:	rex push rcx
   140034157:	rex.RB
   140034158:	rex.B
   140034159:	rex.B
   14003415a:	rex
   14003415b:	rex.B
   14003415c:	rex.RB
   14003415d:	rex.X push rsi
   14003415f:	xor    BYTE PTR [rax+0x40],al
   140034162:	pop    rdx
   140034163:	add    BYTE PTR [rsi+0x6f743f18],ah
   140034169:	rex.WR (bad) 
   14003416b:	je     0x1400341d6
   14003416d:	outs   dx,BYTE PTR ds:[rsi]
   14003416e:	xor    DWORD PTR [rax+0x51],eax
   140034171:	push   rbx
   140034172:	je     0x1400341e6
   140034174:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14003417b:	rex.X
   14003417c:	rex.B (bad) 
   14003417e:	push   r14
   140034180:	push   rcx
   140034181:	rex.X jns 0x1400341f8
   140034184:	gs rex.B jb 0x1400341fa
   140034188:	(bad)  
   140034189:	jns    0x1400341cb
   14003418b:	rex pop rax
   14003418d:	pop    rdx
   14003418e:	add    BYTE PTR [rax],al
   140034190:	ror    DWORD PTR [rbx],0x3f
   140034193:	imul   bp,WORD PTR [rsp+rbp*2+0x40],0x5351
   14003419a:	je     0x14003420e
   14003419c:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   1400341a3:	rex.B
   1400341a4:	rex.B
   1400341a5:	rex.B
   1400341a6:	rex.RB
   1400341a7:	push   r14
   1400341a9:	xor    DWORD PTR [rax+0x56],eax
   1400341ac:	push   rcx
   1400341ad:	rex.XB push 0x40407261
   1400341b3:	rex.W
   1400341b4:	rex pop rdx
   1400341b6:	add    BYTE PTR [rax],al
   1400341b8:	out    0x6,al
   1400341ba:	(bad)  
   1400341bb:	(bad)  
   1400341bc:	jb     0x140034225
   1400341be:	rex push rcx
   1400341c0:	push   rbx
   1400341c1:	je     0x140034235
   1400341c3:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   1400341ca:	rex.X
   1400341cb:	rex.B (bad) 
   1400341cd:	push   r14
   1400341cf:	xor    DWORD PTR [rax+0x44],eax
   1400341d2:	rex.W push rsi
   1400341d4:	push   rcx
   1400341d5:	rex.XB push 0x40407261
   1400341db:	rex pop rdx
   1400341dd:	add    dh,cl
   1400341df:	(bad)  
   1400341e0:	(bad)  
   1400341e1:	jae    0x14003424b
   1400341e3:	(bad)  
   1400341e4:	jb     0x14003424b
   1400341e6:	fs pop rdi
   1400341e8:	outs   dx,BYTE PTR ds:[rsi]
   1400341e9:	jne    0x140034257
   1400341eb:	ins    BYTE PTR es:[rdi],dx
   1400341ec:	rex push rcx
   1400341ee:	rex.B jb 0x140034263
   1400341f1:	(bad)  
   1400341f2:	jns    0x140034238
   1400341f4:	(bad)  
   1400341f5:	je     0x140034258
   1400341f7:	rex
   1400341f8:	xor    dl,BYTE PTR [rcx+0x42]
   1400341fc:	push   rbp
   1400341fd:	xor    DWORD PTR [rax+0x42],eax
   140034200:	add    BYTE PTR [rax],al
   140034202:	adc    BYTE PTR [rdx],cl
   140034204:	(bad)  
   140034205:	fs gs (bad) 
   140034208:	ins    BYTE PTR es:[rdi],dx
   140034209:	ins    BYTE PTR es:[rdi],dx
   14003420a:	outs   dx,DWORD PTR ds:[rsi]
   14003420b:	movsxd esp,DWORD PTR [rcx+0x74]
   14003420e:	gs rex push rcx
   140034211:	rex.B jb 0x140034286
   140034214:	(bad)  
   140034215:	jns    0x14003425b
   140034217:	(bad)  
   140034218:	je     0x14003427b
   14003421a:	rex
   14003421b:	rex push rbx
   14003421d:	pop    r8
   14003421f:	push   rax
   140034220:	rex.RB
   140034221:	push   r13
   140034223:	xor    DWORD PTR [rax+0x5f],eax
   140034226:	rex.WXB xor QWORD PTR [r8+0x5a],rax
   14003422a:	add    BYTE PTR [rax],al
   14003422c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003422d:	(bad)  
   14003422e:	(bad)  
   14003422f:	(bad)  
   140034230:	ins    BYTE PTR es:[rdi],dx
   140034231:	ins    BYTE PTR es:[rdi],dx
   140034232:	outs   dx,DWORD PTR ds:[rsi]
   140034233:	movsxd esp,DWORD PTR [rcx+0x74]
   140034236:	gs rex push rcx
   140034239:	rex.B jb 0x1400342ae
   14003423c:	(bad)  
   14003423d:	jns    0x140034283
   14003423f:	(bad)  
   140034240:	je     0x1400342a3
   140034242:	rex
   140034243:	rex push rbx
   140034245:	push   r8
   140034247:	rex.RB
   140034248:	push   r13
   14003424a:	xor    DWORD PTR [rax+0x5f],eax
   14003424d:	rex.WXB xor BYTE PTR [r8],sil
   140034250:	push   rsi
   140034251:	(bad)  
   140034252:	and    al,0x51
   140034254:	rex.RX ins BYTE PTR es:[rdi],dx
   140034256:	(bad)  
   140034257:	addr32 jae 0x14003429a
   14003425a:	push   rdi
   14003425b:	xor    al,0x41
   14003425d:	ins    BYTE PTR es:[rdi],dx
   14003425e:	ins    BYTE PTR es:[rdi],dx
   14003425f:	outs   dx,DWORD PTR ds:[rsi]
   140034260:	movsxd esp,DWORD PTR [rcx+0x74]
   140034263:	imul   ebp,DWORD PTR [rdi+0x6e],0x6974704f
   14003426a:	outs   dx,DWORD PTR ds:[rsi]
   14003426b:	outs   dx,BYTE PTR ds:[rsi]
   14003426c:	rex push rcx
   14003426e:	rex.B jb 0x1400342e3
   140034271:	(bad)  
   140034272:	jns    0x1400342b8
   140034274:	(bad)  
   140034275:	je     0x1400342d8
   140034277:	rex
   140034278:	rex
   140034279:	rex
   14003427a:	rex
   14003427b:	rex pop rdx
   14003427d:	add    BYTE PTR [rsi+0x14],cl
   140034280:	(bad)  
   140034281:	jb     0x1400342e8
   140034283:	jo     0x1400342f1
   140034285:	(bad)  
   140034286:	movsxd esp,DWORD PTR [rbp+0x40]
   140034289:	push   rcx
   14003428a:	push   rbx
   14003428b:	je     0x1400342ff
   14003428d:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140034294:	rex.B
   140034295:	rex.B
   140034296:	rex.B
   140034297:	rex.RB
   140034298:	push   r14
   14003429a:	xor    DWORD PTR [rax+0x56],eax
   14003429d:	push   rcx
   14003429e:	rex.WR (bad) 
   1400342a0:	je     0x14003430b
   1400342a2:	outs   dx,BYTE PTR ds:[rsi]
   1400342a3:	xor    DWORD PTR [rbx+0x74],edx
   1400342a6:	jb     0x140034311
   1400342a8:	outs   dx,BYTE PTR ds:[rsi]
   1400342a9:	addr32 rex
   1400342ab:	xor    BYTE PTR [rdi+0x34],dl
   1400342af:	rex.XB (bad) 
   1400342b1:	jae    0x140034318
   1400342b3:	push   rbx
   1400342b4:	outs   dx,BYTE PTR gs:[rsi]
   1400342b6:	jae    0x140034321
   1400342b8:	je     0x140034323
   1400342ba:	jbe    0x140034325
   1400342bc:	je     0x140034337
   1400342be:	rex push rcx
   1400342c0:	je     0x140034302
   1400342c2:	rex
   1400342c3:	rex pop rdx
   1400342c5:	add    BYTE PTR [rdi],dh
   1400342c7:	(bad)  
   1400342c8:	(bad)  
   1400342c9:	jae    0x14003433b
   1400342cb:	jb     0x140034336
   1400342cd:	outs   dx,BYTE PTR ds:[rsi]
   1400342ce:	je     0x140034336
   1400342d0:	rex push rcx
   1400342d2:	push   rbx
   1400342d3:	je     0x140034347
   1400342d5:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   1400342dc:	rex.B
   1400342dd:	rex.B
   1400342de:	rex.B
   1400342df:	rex.RB
   1400342e0:	push   r14
   1400342e2:	xor    DWORD PTR [rax+0x50],eax
   1400342e5:	rex.RB
   1400342e6:	rex.X
   1400342e7:	rex.R pop rdx
   1400342e9:	pop    rdx
   1400342ea:	add    BYTE PTR [rax],al
   1400342ec:	rex.WX add al,0x3f
   1400342ef:	(bad)  
   1400342f0:	ss push rcx
   1400342f2:	push   rsp
   1400342f3:	gs js  0x14003436a
   1400342f6:	push   rbx
   1400342f7:	je     0x14003436b
   1400342f9:	gs (bad) 
   1400342fb:	ins    DWORD PTR es:[rdi],dx
   1400342fc:	rex
   1400342fd:	rex push rcx
   1400342ff:	rex.RB
   140034300:	rex.B
   140034301:	rex.B
   140034302:	rex.B
   140034303:	rex.RB
   140034304:	push   r14
   140034306:	xor    BYTE PTR [rax+0x41],al
   140034309:	rex.RB
   14003430a:	rex.X push rsi
   14003430c:	push   rcx
   14003430d:	rex.X jns 0x140034384
   140034310:	gs rex.B jb 0x140034386
   140034314:	(bad)  
   140034315:	jns    0x140034357
   140034317:	rex
   140034318:	rex pop rdx
   14003431a:	add    BYTE PTR [rax],al
   14003431c:	rol    DWORD PTR [rsi],0x3f
   14003431f:	(bad)  
   140034320:	jo     0x140034392
   140034322:	outs   dx,BYTE PTR gs:[rsi]
   140034324:	fs rex push rcx
   140034327:	rex.X jns 0x14003439e
   14003432a:	gs rex.B jb 0x1400343a0
   14003432e:	(bad)  
   14003432f:	jns    0x140034371
   140034331:	rex push rcx
   140034333:	rex.RB
   140034334:	rex.B
   140034335:	rex.B
   140034336:	rex.B
   140034337:	rex.RB
   140034338:	push   r14
   14003433a:	xor    DWORD PTR [rax+0x50],eax
   14003433d:	rex.RB
   14003433e:	rex.X
   14003433f:	rex.R
   140034340:	rex pop rdx
   140034342:	add    BYTE PTR [rax],al
   140034344:	sbb    al,BYTE PTR [rbx]
   140034346:	(bad)  
   140034347:	(bad)  
   140034348:	xor    al,0x51
   14003434a:	rex.X jns 0x1400343c1
   14003434d:	gs rex.B jb 0x1400343c3
   140034351:	(bad)  
   140034352:	jns    0x140034394
   140034354:	rex push rcx
   140034356:	rex.RB
   140034357:	rex.B
   140034358:	rex.B
   140034359:	rex.B
   14003435a:	rex.RB
   14003435b:	push   r14
   14003435d:	xor    BYTE PTR [rax+0x50],al
   140034360:	rex.RB
   140034361:	rex.X
   140034362:	rex.R
   140034363:	rex pop rdx
   140034365:	add    BYTE PTR [rax+0x65733f15],ah
   14003436b:	je     0x1400343b3
   14003436d:	imul   esp,DWORD PTR [rbp+0x6c],0x696c4164
   140034374:	outs   dx,BYTE PTR ds:[esi]
   140034376:	ins    DWORD PTR es:[rdi],dx
   140034377:	outs   dx,BYTE PTR gs:[rsi]
   140034379:	je     0x1400343bb
   14003437b:	push   rcx
   14003437c:	push   rsp
   14003437d:	gs js  0x1400343f4
   140034380:	push   rbx
   140034381:	je     0x1400343f5
   140034383:	gs (bad) 
   140034385:	ins    DWORD PTR es:[rdi],dx
   140034386:	rex
   140034387:	rex push rcx
   140034389:	rex.RB
   14003438a:	rex.B
   14003438b:	pop    r8
   14003438d:	push   rdi
   14003438e:	xor    al,0x46
   140034390:	imul   esp,DWORD PTR [rbp+0x6c],0x696c4164
   140034397:	outs   dx,BYTE PTR ds:[esi]
   140034399:	ins    DWORD PTR es:[rdi],dx
   14003439a:	outs   dx,BYTE PTR gs:[rsi]
   14003439c:	je     0x1400343de
   14003439e:	xor    DWORD PTR [rax+0x40],eax
   1400343a1:	pop    rdx
   1400343a2:	add    BYTE PTR [rax],al
   1400343a4:	push   rcx
   1400343a5:	je     0x1400343dc
   1400343a7:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400343a9:	jb     0x140034410
   1400343ab:	cs fs ins BYTE PTR es:[rdi],dx
   1400343ae:	ins    BYTE PTR es:[rdi],dx
   1400343af:	add    BYTE PTR [rbp+0x5],bl
   1400343b2:	(bad)  
   1400343b3:	pop    rdi
   1400343b4:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400343b6:	movsxd ebp,DWORD PTR [rbx+0x40]
   1400343b9:	pop    rdi
   1400343ba:	rex.WRB jne 0x140034431
   1400343bd:	gs js  0x140034400
   1400343c0:	jae    0x140034436
   1400343c2:	fs rex
   1400343c4:	rex push rcx
   1400343c6:	rex.RB
   1400343c7:	rex.B
   1400343c8:	pop    r8
   1400343ca:	pop    rax
   1400343cb:	pop    rdx
   1400343cc:	add    BYTE PTR [rax],al
   1400343ce:	loopne 0x1400343d5
   1400343d0:	(bad)  
   1400343d1:	pop    rdi
   1400343d2:	push   rbp
   1400343d3:	outs   dx,BYTE PTR ds:[rsi]
   1400343d4:	ins    BYTE PTR es:[rdi],dx
   1400343d5:	outs   dx,DWORD PTR ds:[rsi]
   1400343d6:	movsxd ebp,DWORD PTR [rbx+0x40]
   1400343d9:	pop    rdi
   1400343da:	rex.WRB jne 0x140034451
   1400343dd:	gs js  0x140034420
   1400343e0:	jae    0x140034456
   1400343e2:	fs rex
   1400343e4:	rex push rcx
   1400343e6:	rex.RB
   1400343e7:	rex.B
   1400343e8:	pop    r8
   1400343ea:	pop    rax
   1400343eb:	pop    rdx
   1400343ec:	add    BYTE PTR [rax],al
   1400343ee:	(bad)  
   1400343ef:	or     BYTE PTR [rdi],bh
   1400343f1:	data16 ins BYTE PTR es:[rdi],dx
   1400343f3:	jne    0x140034468
   1400343f5:	push   0x62243f40
   1400343fa:	(bad)  
   1400343fb:	jae    0x140034466
   1400343fd:	movsxd ebx,DWORD PTR [rdi+0x6f]
   140034400:	jae    0x140034476
   140034402:	jb     0x140034469
   140034404:	(bad)  
   140034405:	ins    DWORD PTR es:[rdi],dx
   140034406:	rex
   140034407:	rex.R push rbp
   140034409:	(bad)  
   14003440a:	and    al,0x63
   14003440c:	push   0x745f7261
   140034411:	jb     0x140034474
   140034413:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14003441b:	fs rex
   14003441d:	rex
   14003441e:	rex jae 0x140034495
   140034421:	fs rex
   140034423:	rex push rcx
   140034425:	rex.RB
   140034426:	rex.B
   140034427:	rex.B
   140034428:	rex.B
   140034429:	rex.RB
   14003442a:	push   r14
   14003442c:	xor    DWORD PTR [rdx],esi
   14003442e:	rex pop rax
   140034430:	pop    rdx
   140034431:	add    BYTE PTR [rsi+0x4f5f3f05],al
   140034437:	jae    0x14003449f
   140034439:	js     0x14003447b
   14003443b:	(bad)  
   14003443c:	and    al,0x62
   14003443e:	(bad)  
   14003443f:	jae    0x1400344aa
   140034441:	movsxd ebx,DWORD PTR [rdi+0x6f]
   140034444:	jae    0x1400344ba
   140034446:	jb     0x1400344ad
   140034448:	(bad)  
   140034449:	ins    DWORD PTR es:[rdi],dx
   14003444a:	rex
   14003444b:	rex.R push rbp
   14003444d:	(bad)  
   14003444e:	and    al,0x63
   140034450:	push   0x745f7261
   140034455:	jb     0x1400344b8
   140034457:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14003445f:	fs rex
   140034461:	rex
   140034462:	rex jae 0x1400344d9
   140034465:	fs rex
   140034467:	rex push rcx
   140034469:	rex.RB
   14003446a:	rex.B
   14003446b:	pop    r8
   14003446d:	pop    rax
   14003446e:	pop    rdx
   14003446f:	add    dl,bh
   140034471:	or     edi,DWORD PTR [rdi]
   140034473:	jne    0x1400344e3
   140034475:	movsxd esp,DWORD PTR [rcx+0x75]
   140034478:	addr32 push 0x78655f74
   14003447e:	movsxd esp,DWORD PTR [rbp+0x70]
   140034481:	je     0x1400344ec
   140034483:	outs   dx,DWORD PTR ds:[rsi]
   140034484:	outs   dx,BYTE PTR ds:[rsi]
   140034485:	rex jae 0x1400344fc
   140034488:	fs rex
   14003448a:	rex pop rcx
   14003448c:	pop    r15
   14003448e:	rex.WRX pop rax
   140034490:	pop    rdx
   140034491:	add    BYTE PTR [rdx+0xb],bl
   140034494:	(bad)  
   140034495:	jae    0x1400344fc
   140034497:	je     0x14003450c
   140034499:	je     0x1400344fc
   14003449b:	je     0x140034502
   14003449d:	rex (bad) 
   14003449f:	and    al,0x62
   1400344a1:	(bad)  
   1400344a2:	jae    0x14003450d
   1400344a4:	movsxd ebx,DWORD PTR [rdi+0x69]
   1400344a7:	outs   dx,DWORD PTR ds:[rsi]
   1400344a8:	jae    0x1400344ea
   1400344aa:	rex.R push rbp
   1400344ac:	(bad)  
   1400344ad:	and    al,0x63
   1400344af:	push   0x745f7261
   1400344b4:	jb     0x140034517
   1400344b6:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   1400344be:	fs rex
   1400344c0:	rex
   1400344c1:	rex jae 0x140034538
   1400344c4:	fs rex
   1400344c6:	rex push rcx
   1400344c8:	rex.RB
   1400344c9:	rex.B
   1400344ca:	pop    r8
   1400344cc:	rex.W pop rdi
   1400344ce:	rex.WRX
   1400344cf:	rex pop rdx
   1400344d1:	add    BYTE PTR [rbx+rcx*1+0x7570733f],cl
   1400344d8:	je     0x140034548
   1400344da:	rex (bad) 
   1400344dc:	and    al,0x62
   1400344de:	(bad)  
   1400344df:	jae    0x14003454a
   1400344e1:	movsxd ebx,DWORD PTR [rdi+0x73]
   1400344e4:	je     0x140034558
   1400344e6:	gs (bad) 
   1400344e8:	ins    DWORD PTR es:[rdi],dx
   1400344e9:	(bad)  
   1400344ea:	jne    0x140034552
   1400344ec:	rex
   1400344ed:	rex.R push rbp
   1400344ef:	(bad)  
   1400344f0:	and    al,0x63
   1400344f2:	push   0x745f7261
   1400344f7:	jb     0x14003455a
   1400344f9:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   140034501:	fs rex
   140034503:	rex
   140034504:	rex jae 0x14003457b
   140034507:	fs rex
   140034509:	rex push rcx
   14003450b:	rex.RB
   14003450c:	rex.B
   14003450d:	pop    r15
   14003450f:	rex.WX push rax
   140034511:	rex.RB
   140034512:	rex.X
   140034513:	rex.R pop rdi
   140034515:	rex.WX
   140034516:	rex pop rdx
   140034518:	add    BYTE PTR [rax],al
   14003451a:	mov    DWORD PTR [rbx],ecx
   14003451c:	(bad)  
   14003451d:	jae    0x14003458f
   14003451f:	jne    0x140034595
   140034521:	movsxd eax,DWORD PTR [rax+0x3f]
   140034524:	and    al,0x62
   140034526:	(bad)  
   140034527:	jae    0x140034592
   140034529:	movsxd ebx,DWORD PTR [rdi+0x73]
   14003452c:	je     0x1400345a0
   14003452e:	gs (bad) 
   140034530:	ins    DWORD PTR es:[rdi],dx
   140034531:	(bad)  
   140034532:	jne    0x14003459a
   140034534:	rex
   140034535:	rex.R push rbp
   140034537:	(bad)  
   140034538:	and    al,0x63
   14003453a:	push   0x745f7261
   14003453f:	jb     0x1400345a2
   140034541:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   140034549:	fs rex
   14003454b:	rex
   14003454c:	rex jae 0x1400345c3
   14003454f:	fs rex
   140034551:	rex push rcx
   140034553:	rex.RB
   140034554:	rex.B
   140034555:	rex.B
   140034556:	rex.W
   140034557:	rex.R
   140034558:	rex pop rdx
   14003455a:	add    BYTE PTR [rax],al
   14003455c:	cwde   
   14003455d:	(bad)  
   14003455e:	(bad)  
   14003455f:	movsxd ebp,DWORD PTR [rdi+0x75]
   140034562:	je     0x1400345a4
   140034564:	jae    0x1400345da
   140034566:	fs rex
   140034568:	rex xor edx,DWORD PTR [rsi+0x3f]
   14003456c:	and    al,0x62
   14003456e:	(bad)  
   14003456f:	jae    0x1400345da
   140034571:	movsxd ebx,DWORD PTR [rdi+0x6f]
   140034574:	jae    0x1400345ea
   140034576:	jb     0x1400345dd
   140034578:	(bad)  
   140034579:	ins    DWORD PTR es:[rdi],dx
   14003457a:	rex
   14003457b:	rex.R push rbp
   14003457d:	(bad)  
   14003457e:	and    al,0x63
   140034580:	push   0x745f7261
   140034585:	jb     0x1400345e8
   140034587:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14003458f:	fs rex
   140034591:	rex
   140034592:	rex xor DWORD PTR [rax+0x41],eax
   140034596:	add    BYTE PTR [rax],al
   140034598:	push   rax
   140034599:	(bad)  
   14003459a:	(bad)  
   14003459b:	movsxd esp,DWORD PTR [rbp+0x72]
   14003459e:	jb     0x1400345e0
   1400345a0:	jae    0x140034616
   1400345a2:	fs rex
   1400345a4:	rex xor edx,DWORD PTR [rsi+0x3f]
   1400345a8:	and    al,0x62
   1400345aa:	(bad)  
   1400345ab:	jae    0x140034616
   1400345ad:	movsxd ebx,DWORD PTR [rdi+0x6f]
   1400345b0:	jae    0x140034626
   1400345b2:	jb     0x140034619
   1400345b4:	(bad)  
   1400345b5:	ins    DWORD PTR es:[rdi],dx
   1400345b6:	rex
   1400345b7:	rex.R push rbp
   1400345b9:	(bad)  
   1400345ba:	and    al,0x63
   1400345bc:	push   0x745f7261
   1400345c1:	jb     0x140034624
   1400345c3:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   1400345cb:	fs rex
   1400345cd:	rex
   1400345ce:	rex xor DWORD PTR [rax+0x41],eax
   1400345d2:	add    BYTE PTR [rax],al
   1400345d4:	sbb    eax,0x363f3f03
   1400345d9:	(bad)  
   1400345da:	and    al,0x62
   1400345dc:	(bad)  
   1400345dd:	jae    0x140034648
   1400345df:	movsxd ebx,DWORD PTR [rdi+0x6f]
   1400345e2:	jae    0x140034658
   1400345e4:	jb     0x14003464b
   1400345e6:	(bad)  
   1400345e7:	ins    DWORD PTR es:[rdi],dx
   1400345e8:	rex
   1400345e9:	rex.R push rbp
   1400345eb:	(bad)  
   1400345ec:	and    al,0x63
   1400345ee:	push   0x745f7261
   1400345f3:	jb     0x140034656
   1400345f5:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   1400345fd:	fs rex
   1400345ff:	rex
   140034600:	rex jae 0x140034677
   140034603:	fs rex
   140034605:	rex push rcx
   140034607:	rex.RB
   140034608:	rex.B
   140034609:	rex.B
   14003460a:	rex.B
   14003460b:	rex.RB
   14003460c:	push   r14
   14003460e:	xor    BYTE PTR [rcx],dh
   140034610:	rex push rax
   140034612:	ss rex.B
   140034614:	rex.B
   140034615:	rex.RB
   140034616:	push   r14
   140034618:	xor    BYTE PTR [rcx],dh
   14003461a:	rex
   14003461b:	rex.B
   14003461c:	rex.RB
   14003461d:	push   r14
   14003461f:	xor    BYTE PTR [rcx],dh
   140034621:	rex
   140034622:	rex pop rdx
   140034624:	rex pop rdx
   140034626:	add    BYTE PTR [rax],al
   140034628:	mov    edx,0x6e653f07
   14003462d:	fs ins BYTE PTR es:[rdi],dx
   14003462f:	rex jae 0x1400346a6
   140034632:	fs rex
   140034634:	rex pop rcx
   140034636:	rex.B
   140034637:	rex.B
   140034638:	rex.RB
   140034639:	push   r14
   14003463b:	(bad)  
   14003463c:	and    al,0x62
   14003463e:	(bad)  
   14003463f:	jae    0x1400346aa
   140034641:	movsxd ebx,DWORD PTR [rdi+0x6f]
   140034644:	jae    0x1400346ba
   140034646:	jb     0x1400346ad
   140034648:	(bad)  
   140034649:	ins    DWORD PTR es:[rdi],dx
   14003464a:	rex
   14003464b:	rex.R push rbp
   14003464d:	(bad)  
   14003464e:	and    al,0x63
   140034650:	push   0x745f7261
   140034655:	jb     0x1400346b8
   140034657:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14003465f:	fs rex
   140034661:	rex
   140034662:	rex xor DWORD PTR [rax+0x41],eax
   140034666:	rex.RB
   140034667:	push   r14
   140034669:	xor    dh,BYTE PTR [rcx]
   14003466b:	rex
   14003466c:	rex pop rdx
   14003466e:	add    BYTE PTR [rax],al
   140034670:	rex.WRB push r11
   140034672:	push   rsi
   140034673:	rex.XB push r8
   140034675:	cmp    DWORD PTR [rax],esi
   140034677:	cs fs ins BYTE PTR es:[rdi],dx
   14003467a:	ins    BYTE PTR es:[rdi],dx
   14003467b:	add    al,dh
   14003467d:	add    al,0x6d
   14003467f:	gs ins DWORD PTR es:[rdi],dx
   140034681:	movsxd esi,DWORD PTR [rax+0x79]
   140034684:	add    BYTE PTR [rax],al
   140034686:	adc    eax,DWORD PTR [rax]
   140034688:	(bad)  
   140034689:	(bad)  
   14003468a:	xor    eax,DWORD PTR [rax+0x59]
   14003468d:	pop    r8
   14003468f:	push   rax
   140034690:	rex.RB
   140034691:	pop    r8
   140034693:	rex pop rdx
   140034695:	add    BYTE PTR [rcx],dl
   140034697:	add    BYTE PTR [rdi],bh
   140034699:	(bad)  
   14003469a:	xor    al,BYTE PTR [rax+0x59]
   14003469d:	push   r8
   14003469f:	rex.RB
   1400346a0:	pop    r8
   1400346a2:	pop    rdi
   1400346a3:	rex.WXB
   1400346a4:	rex pop rdx
   1400346a6:	add    BYTE PTR [rax],al
   1400346a8:	movsxd eax,DWORD PTR [rax]
   1400346aa:	pop    rdi
   1400346ab:	pop    rdi
   1400346ac:	rex.XB js 0x140034727
   1400346af:	rex.RX jb 0x140034713
   1400346b2:	ins    DWORD PTR es:[rdi],dx
   1400346b3:	gs rex.W (bad) 
   1400346b6:	outs   dx,BYTE PTR ds:[rsi]
   1400346b7:	fs ins BYTE PTR es:[rdi],dx
   1400346b9:	gs jb  0x1400346ef
   1400346bc:	add    BYTE PTR [rax],al
   1400346be:	xchg   edx,eax
   1400346bf:	add    BYTE PTR [rdi+0x5f],bl
   1400346c2:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
   1400346c9:	movsxd eax,DWORD PTR [rax]
   1400346cb:	add    BYTE PTR [rip+0x65735f03],ah        # 0x1a576a5d4
   1400346d1:	je     0x140034740
   1400346d3:	outs   dx,DWORD PTR ds:[rsi]
   1400346d4:	fs add BYTE PTR gs:[rax],al
   1400346d8:	out    dx,eax
   1400346d9:	add    al,0x6d
   1400346db:	gs ins DWORD PTR es:[rdi],dx
   1400346dd:	movsxd ebp,DWORD PTR [rbp+0x70]
   1400346e0:	add    BYTE PTR [rax],al
   1400346e2:	and    eax,DWORD PTR [rax]
   1400346e4:	(bad)  
   1400346e5:	(bad)  
   1400346e6:	pop    rdi
   1400346e7:	push   rsi
   1400346e8:	rex pop rcx
   1400346ea:	pop    r8
   1400346ec:	push   rax
   1400346ed:	rex.RB
   1400346ee:	pop    r8
   1400346f0:	rex pop rdx
   1400346f2:	add    BYTE PTR [rax],al
   1400346f4:	hlt    
   1400346f5:	add    al,0x6d
   1400346f7:	gs ins DWORD PTR es:[rdi],dx
   1400346f9:	jae    0x140034760
   1400346fb:	je     0x1400346fd
   1400346fd:	add    bl,bl
   1400346ff:	add    al,0x69
   140034701:	jae    0x14003477b
   140034703:	imul   esp,DWORD PTR fs:[rdi+0x69],0xcc000074
   14003470b:	add    al,0x69
   14003470d:	jae    0x140034782
   14003470f:	jo     0x140034772
   140034711:	movsxd esp,DWORD PTR [rbp+0x0]
   140034714:	rex.WRB push r11
   140034716:	push   rsi
   140034717:	rex.XB push r10
   140034719:	cmp    DWORD PTR [rax],esi
   14003471b:	cs fs ins BYTE PTR es:[rdi],dx
   14003471e:	ins    BYTE PTR es:[rdi],dx
   14003471f:	add    BYTE PTR [rcx+0x0],bl
   140034722:	pop    rdi
   140034723:	pop    rdi
   140034724:	rex.XB pop r15
   140034726:	jae    0x140034798
   140034728:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14003472c:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   140034733:	ins    BYTE PTR es:[rdi],dx
   140034734:	gs jb  0x140034737
   140034737:	add    BYTE PTR [rbx+rax*1+0x6c6e755f],ah
   14003473e:	outs   dx,DWORD PTR ds:[rsi]
   14003473f:	movsxd ebp,DWORD PTR [rbx+0x0]
   140034742:	test   DWORD PTR [rax],eax
   140034744:	pop    rdi
   140034745:	pop    rdi
   140034746:	fs ins BYTE PTR es:[rdi],dx
   140034748:	ins    BYTE PTR es:[rdi],dx
   140034749:	outs   dx,DWORD PTR ds:[rsi]
   14003474a:	outs   dx,BYTE PTR ds:[rsi]
   14003474b:	gs js  0x1400347b7
   14003474e:	je     0x140034750
   140034750:	(bad)  
   140034751:	add    DWORD PTR [rdi+0x65],ebx
   140034754:	outs   dx,BYTE PTR ds:[rsi]
   140034755:	movsxd ebp,DWORD PTR [rdi+0x64]
   140034758:	gs pop rdi
   14003475a:	jo     0x1400347cb
   14003475c:	imul   ebp,DWORD PTR [rsi+0x74],0x3d007265
   140034763:	add    bl,BYTE PTR [rdi+0x6c]
   140034766:	outs   dx,DWORD PTR ds:[rsi]
   140034767:	movsxd ebp,DWORD PTR [rbx+0x0]
   14003476a:	in     al,0x2
   14003476c:	pop    rdi
   14003476d:	outs   dx,DWORD PTR ds:[rsi]
   14003476e:	outs   dx,BYTE PTR ds:[rsi]
   14003476f:	gs js  0x1400347db
   140034772:	je     0x140034774
   140034774:	sub    eax,0x65645f01
   140034779:	movsxd ebp,DWORD PTR [rdi+0x64]
   14003477c:	gs pop rdi
   14003477e:	jo     0x1400347ef
   140034780:	imul   ebp,DWORD PTR [rsi+0x74],0xe2007265
   140034787:	add    BYTE PTR [rdi+0x61],bl
   14003478a:	ins    DWORD PTR es:[rdi],dx
   14003478b:	jae    0x1400347f4
   14003478d:	pop    rdi
   14003478e:	gs js  0x1400347fa
   140034791:	je     0x140034793
   140034793:	add    BYTE PTR [rax+0x675f5f00],dl
   140034799:	gs je  0x140034809
   14003479c:	(bad)  
   14003479d:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   1400347a4:	push   rbp
   1400347a5:	add    BYTE PTR [rdi+0x58],bl
   1400347a8:	movsxd esi,DWORD PTR [rax+0x74]
   1400347ab:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x1460072
   1400347b4:	pop    rdi
   1400347b5:	gs js  0x140034821
   1400347b8:	je     0x1400347ba
   1400347ba:	stc    
   1400347bb:	add    BYTE PTR [rdi+0x63],bl
   1400347be:	gs js  0x14003482a
   1400347c1:	je     0x1400347c3
   1400347c3:	add    BYTE PTR [rcx+0x69786504],dl
   1400347c9:	je     0x1400347cb
   1400347cb:	add    BYTE PTR [rcx+0x695f5f00],dl
   1400347d1:	outs   dx,BYTE PTR ds:[rsi]
   1400347d2:	imul   esi,DWORD PTR [rbp+riz*2+0x6e],0x1ce0076
   1400347da:	pop    rdi
   1400347db:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   1400347e2:	ins    DWORD PTR es:[rdi],dx
   1400347e3:	add    bh,cl
   1400347e5:	add    DWORD PTR [rdi+0x69],ebx
   1400347e8:	outs   dx,BYTE PTR ds:[rsi]
   1400347e9:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x655f6d72
   1400347f1:	add    BYTE PTR [rcx],cl
   1400347f3:	add    DWORD PTR [rdi+0x63],ebx
   1400347f6:	outs   dx,DWORD PTR ds:[rsi]
   1400347f7:	outs   dx,BYTE PTR ds:[rsi]
   1400347f8:	imul   sp,WORD PTR [rdi+0x74],0x7268
   1400347fe:	gs (bad) 
   140034800:	fs ins BYTE PTR es:[rdi],dx
   140034802:	outs   dx,DWORD PTR ds:[rsi]
   140034803:	movsxd esp,DWORD PTR [rcx+0x6c]
   140034806:	add    BYTE PTR gs:[rdi+0x735f5f00],bh
   14003480d:	gs je  0x140034885
   140034810:	jae    0x140034877
   140034812:	jb     0x140034881
   140034814:	(bad)  
   140034815:	je     0x14003487f
   140034817:	gs jb  0x14003488c
   14003481a:	add    BYTE PTR [rax],al
   14003481c:	or     BYTE PTR [rcx],al
   14003481e:	pop    rdi
   14003481f:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140034822:	ins    DWORD PTR es:[rdi],dx
   140034823:	outs   dx,DWORD PTR ds:[rsi]
   140034824:	fs add BYTE PTR gs:[rax],al
   140034828:	(bad)
   14003482d:	outs   dx,DWORD PTR ds:[rsi]
   14003482e:	fs add BYTE PTR gs:[rax],al
   140034832:	mov    esp,0x735f5f00
   140034837:	gs je  0x140034899
   14003483a:	(bad)  
   14003483b:	jo     0x1400348ad
   14003483d:	pop    rdi
   14003483e:	je     0x1400348b9
   140034840:	jo     0x1400348a7
   140034842:	add    BYTE PTR [rax],al
   140034844:	rex.XB add BYTE PTR [r15],dil
   140034847:	je     0x1400348ae
   140034849:	jb     0x1400348b8
   14003484b:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   140034852:	pop    rcx
   140034853:	pop    r8
   140034855:	pop    rax
   140034856:	pop    rdx
   140034857:	add    BYTE PTR [rax],bh
   140034859:	add    BYTE PTR [rdi],bh
   14003485b:	pop    rdi
   14003485c:	je     0x1400348d7
   14003485e:	jo     0x1400348c5
   140034860:	pop    rdi
   140034861:	imul   ebp,DWORD PTR [rsi+0x66],0x74645f6f
   140034868:	outs   dx,DWORD PTR ds:[rsi]
   140034869:	jb     0x1400348ca
   14003486b:	imul   ebp,DWORD PTR [rsi+0x74],0x616e7265
   140034872:	ins    BYTE PTR es:[rdi],dx
   140034873:	pop    rdi
   140034874:	ins    DWORD PTR es:[rdi],dx
   140034875:	gs je  0x1400348e0
   140034878:	outs   dx,DWORD PTR ds:[rsi]
   140034879:	fs rex je 0x1400348f6
   14003487d:	jo     0x1400348e4
   14003487f:	pop    rdi
   140034880:	imul   ebp,DWORD PTR [rsi+0x66],0x5140406f
   140034887:	rex.RB
   140034888:	rex.B
   140034889:	pop    r8
   14003488b:	pop    rax
   14003488c:	pop    rdx
   14003488d:	add    al,al
   14003488f:	add    al,0x53
   140034891:	ins    BYTE PTR es:[rdi],dx
   140034892:	gs gs jo 0x140034896
   140034896:	mov    bl,0x4
   140034898:	push   rbx
   140034899:	gs je  0x1400348f1
   14003489c:	outs   dx,BYTE PTR ds:[rsi]
   14003489d:	push   0x6c646e61
   1400348a2:	gs fs rex.RB js 0x14003490a
   1400348a7:	gs jo  0x14003491e
   1400348aa:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   1400348b1:	gs jb  0x1400348b4
   1400348b4:	test   eax,0x65755103
   1400348b9:	jb     0x140034934
   1400348bb:	push   rax
   1400348bc:	gs jb  0x140034925
   1400348bf:	outs   dx,DWORD PTR ds:[rsi]
   1400348c0:	jb     0x14003492f
   1400348c2:	(bad)  
   1400348c3:	outs   dx,BYTE PTR ds:[rsi]
   1400348c4:	movsxd esp,DWORD PTR [rbp+0x43]
   1400348c7:	outs   dx,DWORD PTR ds:[rsi]
   1400348c8:	jne    0x140034938
   1400348ca:	je     0x140034931
   1400348cc:	jb     0x1400348ce
   1400348ce:	(bad)  
   1400348cf:	add    al,BYTE PTR [rdi+0x65]
   1400348d2:	je     0x140034928
   1400348d4:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   1400348db:	je     0x1400348dd
   1400348dd:	add    bl,cl
   1400348df:	add    DWORD PTR [rdi+0x65],eax
   1400348e2:	je     0x140034927
   1400348e4:	jne    0x140034958
   1400348e6:	jb     0x14003494d
   1400348e8:	outs   dx,BYTE PTR ds:[rsi]
   1400348e9:	je     0x14003493f
   1400348eb:	push   0x64616572
   1400348f0:	rex.WB
   1400348f1:	add    BYTE PTR fs:[rax],al
   1400348f4:	mov    DWORD PTR [rcx],0x43746547
   1400348fa:	jne    0x14003496e
   1400348fc:	jb     0x140034963
   1400348fe:	outs   dx,BYTE PTR ds:[rsi]
   1400348ff:	je     0x140034951
   140034901:	jb     0x140034972
   140034903:	movsxd esp,DWORD PTR [rbp+0x73]
   140034906:	jae    0x140034951
   140034908:	add    BYTE PTR fs:[rax+0x74654702],al
   14003490f:	push   rbx
   140034910:	jns    0x140034985
   140034912:	je     0x140034979
   140034914:	ins    DWORD PTR es:[rdi],dx
   140034915:	push   rsp
   140034916:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   14003491d:	ins    BYTE PTR es:[rdi],dx
   14003491e:	gs push rsp
   140034920:	imul   ebp,DWORD PTR [rbp+0x65],0x52454b00
   140034927:	rex.WRX
   140034928:	rex.RB
   140034929:	xor    r14,QWORD PTR [rdx]
   14003492c:	cs fs ins BYTE PTR es:[rdi],dx
   14003492f:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .data:

0000000140035000 <.data>:
   140035000:	jo     0x140034fbc
   140035002:	add    al,BYTE PTR [rax+0x1]
	...
   14003500d:	add    BYTE PTR [rax],al
   14003500f:	add    BYTE PTR [rax-0x46],dh
   140035012:	add    al,BYTE PTR [rax+0x1]
	...
   14003502d:	add    BYTE PTR [rax],al
   14003502f:	add    BYTE PTR [rax],dh
   140035031:	mov    DWORD PTR [rdx],0x140
   140035037:	add    BYTE PTR [rax+0x14002c9],dl
	...
   140035045:	add    BYTE PTR [rax],al
   140035047:	add    BYTE PTR [rax-0x34],al
   14003504a:	add    al,BYTE PTR [rax+0x1]
   14003504d:	add    BYTE PTR [rax],al
   14003504f:	add    BYTE PTR [rax-0x3a],ah
   140035052:	add    al,BYTE PTR [rax+0x1]
   140035055:	add    BYTE PTR [rax],al
   140035057:	add    BYTE PTR [rdx],al
   140035059:	add    BYTE PTR [rax],al
   14003505b:	add    BYTE PTR [rax],al
   14003505d:	add    BYTE PTR [rax],al
   14003505f:	add    BYTE PTR [rax-0x39],al
   140035062:	add    al,BYTE PTR [rax+0x1]
   140035065:	add    BYTE PTR [rax],al
   140035067:	add    al,dh
   140035069:	leave  
   14003506a:	add    al,BYTE PTR [rax+0x1]
	...
   140035075:	add    BYTE PTR [rax],al
   140035077:	add    BYTE PTR [rax-0x34],bl
   14003507a:	add    al,BYTE PTR [rax+0x1]
   14003507d:	add    BYTE PTR [rax],al
   14003507f:	add    BYTE PTR [rsi+rax*8+0x2],ah
   140035083:	rex add DWORD PTR [rax],eax
   140035086:	add    BYTE PTR [rax],al
   140035088:	add    al,BYTE PTR [rax]
   14003508a:	add    BYTE PTR [rax],al
   14003508c:	add    BYTE PTR [rax],al
   14003508e:	add    BYTE PTR [rax],al
   140035090:	pop    rax
   140035091:	mov    DWORD PTR [rdx],0x140
   140035097:	add    BYTE PTR [rax-0x35],bl
   14003509a:	add    al,BYTE PTR [rax+0x1]
   14003509d:	add    BYTE PTR [rax],al
   14003509f:	add    BYTE PTR [rax],ch
   1400350a1:	int3   
   1400350a2:	add    al,BYTE PTR [rax+0x1]
   1400350a5:	add    BYTE PTR [rax],al
   1400350a7:	add    BYTE PTR [rax-0x34],bh
   1400350aa:	add    al,BYTE PTR [rax+0x1]
   1400350ad:	add    BYTE PTR [rax],al
   1400350af:	add    BYTE PTR [rax-0x3a],ch
   1400350b2:	add    al,BYTE PTR [rax+0x1]
   1400350b5:	add    BYTE PTR [rax],al
   1400350b7:	add    BYTE PTR [rax],cl
   1400350b9:	add    BYTE PTR [rax],al
   1400350bb:	add    BYTE PTR [rax],al
   1400350bd:	add    BYTE PTR [rax],al
   1400350bf:	add    BYTE PTR [rax+0x14002c7],cl
   1400350c5:	add    BYTE PTR [rax],al
   1400350c7:	add    BYTE PTR [rax+0x14002c9],cl
	...
   1400350d5:	add    BYTE PTR [rax],al
   1400350d7:	add    BYTE PTR [rax+0x14002cc],ah
   1400350dd:	add    BYTE PTR [rax],al
   1400350df:	add    BYTE PTR [rax-0x3a],dh
   1400350e2:	add    al,BYTE PTR [rax+0x1]
   1400350e5:	add    BYTE PTR [rax],al
   1400350e7:	add    BYTE PTR [rip+0x0],al        # 0x1400350ed
   1400350ed:	add    BYTE PTR [rax],al
   1400350ef:	add    BYTE PTR [rax-0x39],dh
   1400350f2:	add    al,BYTE PTR [rax+0x1]
   1400350f5:	add    BYTE PTR [rax],al
   1400350f7:	add    BYTE PTR [rax-0x35],bh
   1400350fa:	add    al,BYTE PTR [rax+0x1]
	...
   140035105:	add    BYTE PTR [rax],al
   140035107:	add    al,ah
   140035109:	int3   
   14003510a:	add    al,BYTE PTR [rax+0x1]
   14003510d:	add    BYTE PTR [rax],al
   14003510f:	add    BYTE PTR [rax-0x3a],bh
   140035112:	add    al,BYTE PTR [rax+0x1]
   140035115:	add    BYTE PTR [rax],al
   140035117:	add    BYTE PTR [rip+0x0],al        # 0x14003511d
   14003511d:	add    BYTE PTR [rax],al
   14003511f:	add    BYTE PTR [rax+0x14002c7],ch
   140035125:	add    BYTE PTR [rax],al
   140035127:	add    BYTE PTR [rax+0x14002cb],al
	...
   140035135:	add    BYTE PTR [rax],al
   140035137:	add    BYTE PTR [rax],bl
   140035139:	int    0x2
   14003513b:	rex add DWORD PTR [rax],eax
   14003513e:	add    BYTE PTR [rax],al
   140035140:	add    dh,0x2
   140035143:	rex add DWORD PTR [rax],eax
   140035146:	add    BYTE PTR [rax],al
   140035148:	sldt   WORD PTR [rax]
   14003514b:	add    BYTE PTR [rax],al
   14003514d:	add    BYTE PTR [rax],al
   14003514f:	add    al,cl
   140035151:	mov    DWORD PTR [rdx],0x140
   140035157:	add    BYTE PTR [rax+0x14002cb],ch
	...
   140035165:	add    BYTE PTR [rax],al
   140035167:	add    BYTE PTR [rax-0x33],dl
   14003516a:	add    al,BYTE PTR [rax+0x1]
   14003516d:	add    BYTE PTR [rax],al
   14003516f:	add    BYTE PTR [rax+0x14002c6],dl
   140035175:	add    BYTE PTR [rax],al
   140035177:	add    BYTE PTR [rsi],al
   140035179:	add    BYTE PTR [rax],al
   14003517b:	add    BYTE PTR [rax],al
   14003517d:	add    BYTE PTR [rax],al
   14003517f:	add    al,dh
   140035181:	mov    DWORD PTR [rdx],0x140
   140035187:	add    BYTE PTR [rax+0x14002cb],dh
	...
   140035195:	add    BYTE PTR [rax],al
   140035197:	add    BYTE PTR [rax+0x14002cd],dh
   14003519d:	add    BYTE PTR [rax],al
   14003519f:	add    BYTE PTR [rax+0x14002c6],bl
   1400351a5:	add    BYTE PTR [rax],al
   1400351a7:	add    BYTE PTR [rip+0x0],al        # 0x1400351ad
   1400351ad:	add    BYTE PTR [rax],al
   1400351af:	add    BYTE PTR [rax],dl
   1400351b1:	enter  0x4002,0x1
   1400351b5:	add    BYTE PTR [rax],al
   1400351b7:	add    al,al
   1400351b9:	retf   
   1400351ba:	add    al,BYTE PTR [rax+0x1]
	...
   1400351c5:	add    BYTE PTR [rax],al
   1400351c7:	add    al,dh
   1400351c9:	int    0x2
   1400351cb:	rex add DWORD PTR [rax],eax
   1400351ce:	add    BYTE PTR [rax],al
   1400351d0:	movabs al,ds:0xc000000014002c6
   1400351d9:	add    BYTE PTR [rax],al
   1400351db:	add    BYTE PTR [rax],al
   1400351dd:	add    BYTE PTR [rax],al
   1400351df:	add    BYTE PTR [rax],dh
   1400351e1:	enter  0x4002,0x1
   1400351e5:	add    BYTE PTR [rax],al
   1400351e7:	add    al,cl
   1400351e9:	retf   
   1400351ea:	add    al,BYTE PTR [rax+0x1]
	...
   1400351f5:	add    BYTE PTR [rax],al
   1400351f7:	add    BYTE PTR [rax],dh
   1400351f9:	(bad)  
   1400351fa:	add    al,BYTE PTR [rax+0x1]
   1400351fd:	add    BYTE PTR [rax],al
   1400351ff:	add    BYTE PTR [rax+0x14002c6],dh
   140035205:	add    BYTE PTR [rax],al
   140035207:	add    BYTE PTR [rip+0x0],cl        # 0x14003520d
   14003520d:	add    BYTE PTR [rax],al
   14003520f:	add    BYTE PTR [rax-0x38],dl
   140035212:	add    al,BYTE PTR [rax+0x1]
   140035215:	add    BYTE PTR [rax],al
   140035217:	add    al,dl
   140035219:	retf   
   14003521a:	add    al,BYTE PTR [rax+0x1]
	...
   140035225:	add    BYTE PTR [rax],al
   140035227:	add    BYTE PTR [rax+0x14002ce],dl
   14003522d:	add    BYTE PTR [rax],al
   14003522f:	add    al,al
   140035231:	mov    BYTE PTR [rdx],0x40
   140035234:	add    DWORD PTR [rax],eax
   140035236:	add    BYTE PTR [rax],al
   140035238:	or     al,BYTE PTR [rax]
   14003523a:	add    BYTE PTR [rax],al
   14003523c:	add    BYTE PTR [rax],al
   14003523e:	add    BYTE PTR [rax],al
   140035240:	jo     0x14003520a
   140035242:	add    al,BYTE PTR [rax+0x1]
   140035245:	add    BYTE PTR [rax],al
   140035247:	add    al,dh
   140035249:	retf   
   14003524a:	add    al,BYTE PTR [rax+0x1]
	...
   140035259:	iret   
   14003525a:	add    al,BYTE PTR [rax+0x1]
   14003525d:	add    BYTE PTR [rax],al
   14003525f:	add    al,dl
   140035261:	mov    BYTE PTR [rdx],0x40
   140035264:	add    DWORD PTR [rax],eax
   140035266:	add    BYTE PTR [rax],al
   140035268:	or     DWORD PTR [rax],eax
   14003526a:	add    BYTE PTR [rax],al
   14003526c:	add    BYTE PTR [rax],al
   14003526e:	add    BYTE PTR [rax],al
   140035270:	nop
   140035271:	enter  0x4002,0x1
   140035275:	add    BYTE PTR [rax],al
   140035277:	add    al,bh
   140035279:	retf   
   14003527a:	add    al,BYTE PTR [rax+0x1]
	...
   140035285:	add    BYTE PTR [rax],al
   140035287:	add    BYTE PTR [rax-0x31],ah
   14003528a:	add    al,BYTE PTR [rax+0x1]
   14003528d:	add    BYTE PTR [rax],al
   14003528f:	add    al,ah
   140035291:	mov    BYTE PTR [rdx],0x40
   140035294:	add    DWORD PTR [rax],eax
   140035296:	add    BYTE PTR [rax],al
   140035298:	or     DWORD PTR [rax],eax
   14003529a:	add    BYTE PTR [rax],al
   14003529c:	add    BYTE PTR [rax],al
   14003529e:	add    BYTE PTR [rax],al
   1400352a0:	mov    al,0xc8
   1400352a2:	add    al,BYTE PTR [rax+0x1]
   1400352a5:	add    BYTE PTR [rax],al
   1400352a7:	add    BYTE PTR [rax],al
   1400352a9:	int3   
   1400352aa:	add    al,BYTE PTR [rax+0x1]
	...
   1400352b5:	add    BYTE PTR [rax],al
   1400352b7:	add    BYTE PTR [rax+0x14002cf],dh
   1400352bd:	add    BYTE PTR [rax],al
   1400352bf:	add    al,dh
   1400352c1:	mov    BYTE PTR [rdx],0x40
   1400352c4:	add    DWORD PTR [rax],eax
   1400352c6:	add    BYTE PTR [rax],al
   1400352c8:	or     eax,0x0
   1400352cd:	add    BYTE PTR [rax],al
   1400352cf:	add    al,bl
   1400352d1:	enter  0x4002,0x1
   1400352d5:	add    BYTE PTR [rax],al
   1400352d7:	add    BYTE PTR [rax],cl
   1400352d9:	int3   
   1400352da:	add    al,BYTE PTR [rax+0x1]
	...
   1400352e5:	add    BYTE PTR [rax],al
   1400352e7:	add    BYTE PTR [rax],dl
   1400352e9:	rol    BYTE PTR [rdx],1
   1400352eb:	rex add DWORD PTR [rax],eax
   1400352ee:	add    BYTE PTR [rax],al
   1400352f0:	add    bh,al
   1400352f2:	add    al,BYTE PTR [rax+0x1]
   1400352f5:	add    BYTE PTR [rax],al
   1400352f7:	add    BYTE PTR [rax+rax*1],cl
   1400352fa:	add    BYTE PTR [rax],al
   1400352fc:	add    BYTE PTR [rax],al
   1400352fe:	add    BYTE PTR [rax],al
   140035300:	add    cl,cl
   140035302:	add    al,BYTE PTR [rax+0x1]
   140035305:	add    BYTE PTR [rax],al
   140035307:	add    BYTE PTR [rax],dl
   140035309:	int3   
   14003530a:	add    al,BYTE PTR [rax+0x1]
	...
   140035315:	add    BYTE PTR [rax],al
   140035317:	add    BYTE PTR [rax+0x14002d0],al
   14003531d:	add    BYTE PTR [rax],al
   14003531f:	add    BYTE PTR [rax],dl
   140035321:	mov    DWORD PTR [rdx],0x140
   140035327:	add    BYTE PTR [rdi],cl
   140035329:	add    BYTE PTR [rax],al
   14003532b:	add    BYTE PTR [rax],al
   14003532d:	add    BYTE PTR [rax],al
   14003532f:	add    BYTE PTR [rax],dh
   140035331:	leave  
   140035332:	add    al,BYTE PTR [rax+0x1]
   140035335:	add    BYTE PTR [rax],al
   140035337:	add    BYTE PTR [rax],bl
   140035339:	int3   
   14003533a:	add    al,BYTE PTR [rax+0x1]
	...
   140035345:	add    BYTE PTR [rax],al
   140035347:	add    al,dl
   140035349:	rol    BYTE PTR [rdx],1
   14003534b:	rex add DWORD PTR [rax],eax
   14003534e:	add    BYTE PTR [rax],al
   140035350:	and    bh,al
   140035352:	add    al,BYTE PTR [rax+0x1]
   140035355:	add    BYTE PTR [rax],al
   140035357:	add    BYTE PTR [rbx],cl
   140035359:	add    BYTE PTR [rax],al
   14003535b:	add    BYTE PTR [rax],al
   14003535d:	add    BYTE PTR [rax],al
   14003535f:	add    BYTE PTR [rax-0x37],ch
   140035362:	add    al,BYTE PTR [rax+0x1]
   140035365:	add    BYTE PTR [rax],al
   140035367:	add    BYTE PTR [rax],ah
   140035369:	int3   
   14003536a:	add    al,BYTE PTR [rax+0x1]
	...
   140035375:	add    BYTE PTR [rax],al
   140035377:	add    BYTE PTR [rax-0x2f],al
   14003537a:	add    al,BYTE PTR [rax+0x1]
   14003537d:	add    BYTE PTR [rax],al
   14003537f:	add    BYTE PTR [rax-0x46],dh
   140035382:	add    al,BYTE PTR [rax+0x1]
   140035385:	add    BYTE PTR [rax],al
   140035387:	add    BYTE PTR [rax-0x46],dh
   14003538a:	add    al,BYTE PTR [rax+0x1]
   14003538d:	add    BYTE PTR [rax],al
   14003538f:	add    BYTE PTR [rax-0x46],dh
   140035392:	add    al,BYTE PTR [rax+0x1]
   140035395:	add    BYTE PTR [rax],al
   140035397:	add    BYTE PTR [rax-0x46],dh
   14003539a:	add    al,BYTE PTR [rax+0x1]
   14003539d:	add    BYTE PTR [rax],al
   14003539f:	add    BYTE PTR [rax-0x46],dh
   1400353a2:	add    al,BYTE PTR [rax+0x1]
   1400353a5:	add    BYTE PTR [rax],al
   1400353a7:	add    BYTE PTR [rax-0x46],dh
   1400353aa:	add    al,BYTE PTR [rax+0x1]
   1400353ad:	add    BYTE PTR [rax],al
   1400353af:	add    BYTE PTR [rax-0x46],dh
   1400353b2:	add    al,BYTE PTR [rax+0x1]
   1400353b5:	add    BYTE PTR [rax],al
   1400353b7:	add    BYTE PTR [rax-0x1d],cl
   1400353ba:	add    al,BYTE PTR [rax+0x1]
   1400353bd:	add    BYTE PTR [rax],al
   1400353bf:	add    BYTE PTR [rax],dh
   1400353c1:	jrcxz  0x1400353c5
   1400353c3:	rex add DWORD PTR [rax],eax
   1400353c6:	add    BYTE PTR [rax],al
   1400353c8:	sub    bl,ah
   1400353ca:	add    al,BYTE PTR [rax+0x1]
   1400353cd:	add    BYTE PTR [rax],al
   1400353cf:	add    BYTE PTR [rax],dl
   1400353d1:	jrcxz  0x1400353d5
   1400353d3:	rex add DWORD PTR [rax],eax
   1400353d6:	add    BYTE PTR [rax],al
   1400353d8:	clc    
   1400353d9:	loop   0x1400353dd
   1400353db:	rex add DWORD PTR [rax],eax
   1400353de:	add    BYTE PTR [rax],al
   1400353e0:	fsub   st,st(2)
   1400353e2:	add    al,BYTE PTR [rax+0x1]
   1400353e5:	add    BYTE PTR [rax],al
   1400353e7:	add    al,al
   1400353e9:	loop   0x1400353ed
   1400353eb:	rex add DWORD PTR [rax],eax
   1400353ee:	add    BYTE PTR [rax],al
   1400353f0:	cwde   
   1400353f1:	loop   0x1400353f5
   1400353f3:	rex add DWORD PTR [rax],eax
   1400353f6:	add    BYTE PTR [rax],al
   1400353f8:	jo     0x1400353dc
   1400353fa:	add    al,BYTE PTR [rax+0x1]
   1400353fd:	add    BYTE PTR [rax],al
   1400353ff:	add    BYTE PTR [rax-0x1e],cl
   140035402:	add    al,BYTE PTR [rax+0x1]
   140035405:	add    BYTE PTR [rax],al
   140035407:	add    BYTE PTR [rax-0x15],bh
   14003540a:	add    al,BYTE PTR [rax+0x1]
	...
   140035415:	add    BYTE PTR [rax],al
   140035417:	add    BYTE PTR [rsi],ch
   140035419:	(bad)  
   14003541a:	push   r14
   14003541c:	pop    rax
   14003541d:	rex.WR
   14003541e:	rex.WB
   14003541f:	rex.RX
   140035420:	rex.RX
   140035421:	rex.W (bad) 
   140035423:	outs   dx,BYTE PTR ds:[rsi]
   140035424:	fs ins BYTE PTR es:[rdi],dx
   140035426:	gs jb  0x140035469
   140035429:	add    BYTE PTR [rax],al
   14003542c:	add    BYTE PTR [rax],al
   14003542e:	add    BYTE PTR [rax],al
   140035430:	js     0x14003541d
   140035432:	add    al,BYTE PTR [rax+0x1]
	...
   14003543d:	add    BYTE PTR [rax],al
   14003543f:	add    BYTE PTR [rsi],ch
   140035441:	(bad)  
   140035442:	push   r14
   140035444:	push   rcx
   140035445:	pop    rax
   140035446:	ins    DWORD PTR es:[rdi],dx
   140035447:	ins    BYTE PTR es:[rdi],dx
   140035448:	rex.R
   140035449:	gs data16 (bad) 
   14003544c:	jne    0x1400354ba
   14003544e:	je     0x140035498
   140035450:	(bad)  
   140035451:	outs   dx,BYTE PTR ds:[rsi]
   140035452:	fs ins BYTE PTR es:[rdi],dx
   140035454:	gs jb  0x140035497
   140035457:	add    BYTE PTR [rax],al
   14003545a:	add    BYTE PTR [rax],al
   14003545c:	add    BYTE PTR [rax],al
   14003545e:	add    BYTE PTR [rax],al
   140035460:	js     0x14003544d
   140035462:	add    al,BYTE PTR [rax+0x1]
	...
   14003546d:	add    BYTE PTR [rax],al
   14003546f:	add    BYTE PTR [rsi],ch
   140035471:	(bad)  
   140035472:	push   r14
   140035474:	push   rcx
   140035475:	pop    rax
   140035476:	ins    DWORD PTR es:[rdi],dx
   140035477:	ins    BYTE PTR es:[rdi],dx
   140035478:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14003547a:	outs   dx,BYTE PTR ds:[rsi]
   14003547b:	je     0x1400354e2
   14003547d:	outs   dx,BYTE PTR ds:[rsi]
   14003547e:	je     0x1400354c8
   140035480:	(bad)  
   140035481:	outs   dx,BYTE PTR ds:[rsi]
   140035482:	fs ins BYTE PTR es:[rdi],dx
   140035484:	gs jb  0x1400354c7
   140035487:	add    BYTE PTR [rax],al
   14003548a:	add    BYTE PTR [rax],al
   14003548c:	add    BYTE PTR [rax],al
   14003548e:	add    BYTE PTR [rax],al
   140035490:	js     0x14003547d
   140035492:	add    al,BYTE PTR [rax+0x1]
	...
   14003549d:	add    BYTE PTR [rax],al
   14003549f:	add    BYTE PTR [rsi],ch
   1400354a1:	(bad)  
   1400354a2:	push   r14
   1400354a4:	push   rcx
   1400354a5:	pop    rax
   1400354a6:	ins    DWORD PTR es:[rdi],dx
   1400354a7:	ins    BYTE PTR es:[rdi],dx
   1400354a8:	rex.RB jb 0x14003551d
   1400354ab:	outs   dx,DWORD PTR ds:[rsi]
   1400354ac:	jb     0x1400354f6
   1400354ae:	(bad)  
   1400354af:	outs   dx,BYTE PTR ds:[rsi]
   1400354b0:	fs ins BYTE PTR es:[rdi],dx
   1400354b2:	gs jb  0x1400354f5
   1400354b5:	add    BYTE PTR [rax],al
   1400354b8:	js     0x1400354a5
   1400354ba:	add    al,BYTE PTR [rax+0x1]
	...
   1400354c5:	add    BYTE PTR [rax],al
   1400354c7:	add    BYTE PTR [rsi],ch
   1400354c9:	(bad)  
   1400354ca:	push   r14
   1400354cc:	push   rcx
   1400354cd:	pop    rax
   1400354ce:	ins    DWORD PTR es:[rdi],dx
   1400354cf:	ins    BYTE PTR es:[rdi],dx
   1400354d0:	rex.R push rsp
   1400354d2:	rex.R
   1400354d3:	rex.W (bad) 
   1400354d5:	outs   dx,BYTE PTR ds:[rsi]
   1400354d6:	fs ins BYTE PTR es:[rdi],dx
   1400354d8:	gs jb  0x14003551b
   1400354db:	add    BYTE PTR [rax],al
   1400354de:	add    BYTE PTR [rax],al
   1400354e0:	js     0x1400354cd
   1400354e2:	add    al,BYTE PTR [rax+0x1]
	...
   1400354ed:	add    BYTE PTR [rax],al
   1400354ef:	add    BYTE PTR [rsi],ch
   1400354f1:	(bad)  
   1400354f2:	push   r14
   1400354f4:	push   rcx
   1400354f5:	pop    rax
   1400354f6:	ins    DWORD PTR es:[rdi],dx
   1400354f7:	ins    BYTE PTR es:[rdi],dx
   1400354f8:	rex.RB outs dx,BYTE PTR ds:[rsi]
   1400354fa:	je     0x140035565
   1400354fc:	je     0x140035577
   1400354fe:	push   rdx
   1400354ff:	gs jae 0x140035571
   140035502:	ins    BYTE PTR es:[rdi],dx
   140035503:	jbe    0x14003556a
   140035505:	jb     0x140035547
   140035507:	add    BYTE PTR [rax],al
   14003550a:	add    BYTE PTR [rax],al
   14003550c:	add    BYTE PTR [rax],al
   14003550e:	add    BYTE PTR [rax],al
   140035510:	js     0x1400354fd
   140035512:	add    al,BYTE PTR [rax+0x1]
	...
   14003551d:	add    BYTE PTR [rax],al
   14003551f:	add    BYTE PTR [rsi],ch
   140035521:	(bad)  
   140035522:	push   r14
   140035524:	push   rcx
   140035525:	pop    rax
   140035526:	ins    DWORD PTR es:[rdi],dx
   140035527:	ins    BYTE PTR es:[rdi],dx
   140035528:	rex.WR
   140035529:	gs js  0x140035595
   14003552c:	movsxd esp,DWORD PTR [rcx+0x6c]
   14003552f:	rex.W (bad) 
   140035531:	outs   dx,BYTE PTR ds:[rsi]
   140035532:	fs ins BYTE PTR es:[rdi],dx
   140035534:	gs jb  0x140035577
   140035537:	add    BYTE PTR [rax],al
   14003553a:	add    BYTE PTR [rax],al
   14003553c:	add    BYTE PTR [rax],al
   14003553e:	add    BYTE PTR [rax],al
   140035540:	js     0x14003552d
   140035542:	add    al,BYTE PTR [rax+0x1]
	...
   14003554d:	add    BYTE PTR [rax],al
   14003554f:	add    BYTE PTR [rsi],ch
   140035551:	(bad)  
   140035552:	push   r14
   140035554:	push   rcx
   140035555:	pop    rax
   140035556:	ins    DWORD PTR es:[rdi],dx
   140035557:	ins    BYTE PTR es:[rdi],dx
   140035558:	rex.R
   140035559:	movsxd ebp,DWORD PTR gs:[rax+rcx*2+0x61]
   14003555e:	outs   dx,BYTE PTR ds:[rsi]
   14003555f:	fs ins BYTE PTR es:[rdi],dx
   140035561:	gs jb  0x1400355a4
   140035564:	add    BYTE PTR [rax],al
   140035567:	add    BYTE PTR [rax-0x46],dh
   14003556a:	add    al,BYTE PTR [rax+0x1]
   14003556d:	add    BYTE PTR [rax],al
   14003556f:	add    BYTE PTR [rax-0x15],bh
   140035572:	add    al,BYTE PTR [rax+0x1]
	...
   14003557d:	add    BYTE PTR [rax],al
   14003557f:	add    BYTE PTR [rsi],ch
   140035581:	(bad)  
   140035582:	push   r14
   140035584:	je     0x1400355ff
   140035586:	jo     0x1400355ed
   140035588:	pop    rdi
   140035589:	imul   ebp,DWORD PTR [rsi+0x66],0x40406f
   140035590:	(bad)  
   140035591:	(bad)  
   140035592:	(bad)  
   140035593:	(bad)  
   140035594:	(bad)  
   140035595:	(bad)  
   140035596:	(bad)  
   140035597:	(bad)  
   140035598:	(bad)  
   140035599:	(bad)  
   14003559a:	(bad)  
   14003559b:	inc    DWORD PTR [rcx]
   14003559d:	add    BYTE PTR [rax],al
   14003559f:	add    BYTE PTR [rdx],dh
   1400355a1:	movabs ds:0x5dcd00002b992ddf,al
   1400355aa:	and    dl,dl
   1400355ac:	data16 (bad) 
   1400355ae:	(bad)  
   1400355af:	inc    DWORD PTR [rax]
	...

Disassembly of section .pdata:

0000000140036000 <.pdata>:
   140036000:	add    BYTE PTR [rax],dl
   140036002:	add    BYTE PTR [rax],al
   140036004:	sbb    DWORD PTR [rax],edx
   140036006:	add    BYTE PTR [rax],al
   140036008:	and    al,0xf2
   14003600a:	add    al,BYTE PTR [rax]
   14003600c:	sbb    DWORD PTR [rax],edx
   14003600e:	add    BYTE PTR [rax],al
   140036010:	mov    ss,WORD PTR [rax]
   140036012:	add    BYTE PTR [rax],al
   140036014:	enter  0x2f0,0x0
   140036018:	mov    ss,WORD PTR [rax]
   14003601a:	add    BYTE PTR [rax],al
   14003601c:	nop
   14003601d:	adc    BYTE PTR [rax],al
   14003601f:	add    BYTE PTR [rax-0x6ffffd10],bh
   140036025:	adc    BYTE PTR [rax],al
   140036027:	add    BYTE PTR [rbx+0x12],bh
   14003602a:	add    BYTE PTR [rax],al
   14003602c:	hlt    
   14003602d:	lock add al,BYTE PTR [rax]
   140036030:	nop
   140036031:	adc    al,BYTE PTR [rax]
   140036033:	add    BYTE PTR [rcx+0x12],bh
   140036039:	hlt    
   14003603a:	add    al,BYTE PTR [rax]
   14003603c:	mov    ecx,0xf2000012
   140036041:	adc    al,BYTE PTR [rax]
   140036043:	add    BYTE PTR [rcx+rsi*8+0x12f20002],cl
   14003604a:	add    BYTE PTR [rax],al
   14003604c:	or     edx,DWORD PTR [rbx]
   14003604e:	add    BYTE PTR [rax],al
   140036050:	jl     0x140036043
   140036052:	add    al,BYTE PTR [rax]
   140036054:	adc    BYTE PTR [rbx],dl
   140036056:	add    BYTE PTR [rax],al
   140036058:	pop    rdx
   140036059:	adc    eax,DWORD PTR [rax]
   14003605b:	add    BYTE PTR [rdi+rax*1+0x13600003],al
   140036062:	add    BYTE PTR [rax],al
   140036064:	jns    0x140036079
   140036066:	add    BYTE PTR [rax],al
   140036068:	enter  0x2f1,0x0
   14003606c:	jns    0x140036081
   14003606e:	add    BYTE PTR [rax],al
   140036070:	or     dl,BYTE PTR [rax+rax*1]
   140036073:	add    BYTE PTR [rax+0xa0002f1],dh
   140036079:	adc    al,0x0
   14003607b:	add    BYTE PTR [rsp+rdx*1],cl
   14003607e:	add    BYTE PTR [rax],al
   140036080:	movabs al,ds:0x33000014100002f1
   140036089:	adc    al,0x0
   14003608b:	add    BYTE PTR [rax+0x400002f3],dl
   140036091:	adc    al,0x0
   140036093:	add    BYTE PTR [rcx+0x14],ch
   140036096:	add    BYTE PTR [rax],al
   140036098:	add    ah,dh
   14003609a:	add    al,BYTE PTR [rax]
   14003609c:	imul   edx,DWORD PTR [rax+rax*1],0x149800
   1400360a3:	add    al,ch
   1400360a5:	icebp  
   1400360a6:	add    al,BYTE PTR [rax]
   1400360a8:	cwde   
   1400360a9:	adc    al,0x0
   1400360ab:	add    BYTE PTR [rcx-0x27ffffec],dh
   1400360b1:	icebp  
   1400360b2:	add    al,BYTE PTR [rax]
   1400360b4:	rcl    BYTE PTR [rax+rax*1],0x0
   1400360b8:	fst    DWORD PTR [rax+rax*1]
   1400360bb:	add    BYTE PTR [rdx+rsi*8],ah
   1400360be:	add    al,BYTE PTR [rax]
   1400360c0:	fst    DWORD PTR [rax+rax*1]
   1400360c3:	add    BYTE PTR [rax+0x15],cl
   1400360c6:	add    BYTE PTR [rax],al
   1400360c8:	or     al,0xf2
   1400360ca:	add    al,BYTE PTR [rax]
   1400360cc:	adc    rax,0x154a0000
   1400360d2:	add    BYTE PTR [rax],al
   1400360d4:	cld    
   1400360d5:	icebp  
   1400360d6:	add    al,BYTE PTR [rax]
   1400360d8:	(bad)  
   1400360d9:	adc    eax,0x156e0000
   1400360de:	add    BYTE PTR [rax],al
   1400360e0:	xchg   esp,eax
   1400360e1:	repnz add al,BYTE PTR [rax]
   1400360e4:	outs   dx,BYTE PTR ds:[rsi]
   1400360e5:	adc    eax,0x15ab0000
   1400360ea:	add    BYTE PTR [rax],al
   1400360ec:	jl     0x1400360e0
   1400360ee:	add    al,BYTE PTR [rax]
   1400360f0:	stos   DWORD PTR es:[rdi],eax
   1400360f1:	adc    eax,0x168a0000
   1400360f6:	add    BYTE PTR [rax],al
   1400360f8:	push   0xffffffff8a0002f2
   1400360fd:	(bad)  
   1400360fe:	add    BYTE PTR [rax],al
   140036100:	movabs eax,ds:0xa10002f258000016
   140036109:	(bad)  
   14003610a:	add    BYTE PTR [rax],al
   14003610c:	call   0x184036127
   140036111:	repnz add al,BYTE PTR [rax]
   140036114:	call   0x13c03612f
   140036119:	(bad)  
   14003611a:	add    BYTE PTR [rax],al
   14003611c:	xor    al,0xf2
   14003611e:	add    al,BYTE PTR [rax]
   140036120:	add    BYTE PTR [rdi],dl
   140036122:	add    BYTE PTR [rax],al
   140036124:	cmp    DWORD PTR [rdi],edx
   140036126:	add    BYTE PTR [rax],al
   140036128:	(bad)  
   140036129:	repnz add al,BYTE PTR [rax]
   14003612c:	cmp    DWORD PTR [rdi],edx
   14003612e:	add    BYTE PTR [rax],al
   140036130:	cwde   
   140036131:	(bad)  
   140036132:	add    BYTE PTR [rax],al
   140036134:	lods   al,BYTE PTR ds:[rsi]
   140036135:	repnz add al,BYTE PTR [rax]
   140036138:	cwde   
   140036139:	(bad)  
   14003613a:	add    BYTE PTR [rax],al
   14003613c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003613d:	(bad)  
   14003613e:	add    BYTE PTR [rax],al
   140036140:	pushf  
   140036141:	repnz add al,BYTE PTR [rax]
   140036144:	mov    al,0x17
   140036146:	add    BYTE PTR [rax],al
   140036148:	int    0x17
   14003614a:	add    BYTE PTR [rax],al
   14003614c:	rex.WR test BYTE PTR [rdx],0x0
   140036150:	int    0x17
   140036152:	add    BYTE PTR [rax],al
   140036154:	sub    bl,BYTE PTR [rax]
   140036156:	add    BYTE PTR [rax],al
   140036158:	loopne 0x14003614c
   14003615a:	add    al,BYTE PTR [rax]
   14003615c:	sub    bl,BYTE PTR [rax]
   14003615e:	add    BYTE PTR [rax],al
   140036160:	(bad)  
   140036161:	sbb    BYTE PTR [rax],al
   140036163:	add    al,dl
   140036165:	repnz add al,BYTE PTR [rax]
   140036168:	xor    BYTE PTR [rax],bl
   14003616a:	add    BYTE PTR [rax],al
   14003616c:	rex.WX sbb BYTE PTR [rax],al
   14003616f:	add    BYTE PTR [rbx+rsi*8],bh
   140036172:	add    al,BYTE PTR [rax]
   140036174:	rex.WX sbb BYTE PTR [rax],al
   140036177:	add    ah,ah
   140036179:	sbb    BYTE PTR [rax],al
   14003617b:	add    BYTE PTR [rax],ah
   14003617d:	repz add al,BYTE PTR [rax]
   140036180:	in     al,0x18
   140036182:	add    BYTE PTR [rax],al
   140036184:	repnz sbb BYTE PTR [rax],al
   140036187:	add    BYTE PTR [rbx+rsi*8],cl
   14003618a:	add    al,BYTE PTR [rax]
   14003618c:	repnz sbb BYTE PTR [rax],al
   14003618f:	add    bl,bh
   140036191:	sbb    BYTE PTR [rax],al
   140036193:	add    ah,bh
   140036195:	repnz add al,BYTE PTR [rax]
   140036198:	add    BYTE PTR [rcx],bl
   14003619a:	add    BYTE PTR [rax],al
   14003619c:	sbb    DWORD PTR ds:[rax],eax
   14003619f:	add    BYTE PTR [rax+0x3e0002f3],dl
   1400361a5:	sbb    DWORD PTR [rax],eax
   1400361a7:	add    BYTE PTR [rbp+0x54000019],al
   1400361ad:	repz add al,BYTE PTR [rax]
   1400361b0:	test   DWORD PTR [rcx],ebx
   1400361b2:	add    BYTE PTR [rax],al
   1400361b4:	mov    ebx,DWORD PTR [rcx]
   1400361b6:	add    BYTE PTR [rax],al
   1400361b8:	rex.R
   1400361b9:	repz add al,BYTE PTR [rax]
   1400361bc:	nop
   1400361bd:	sbb    DWORD PTR [rax],eax
   1400361bf:	add    BYTE PTR [rsi],al
   1400361c1:	sbb    al,BYTE PTR [rax]
   1400361c3:	add    BYTE PTR [rcx+rcx*1+0x3],cl
   1400361c7:	add    BYTE PTR [rax],dl
   1400361c9:	sbb    al,BYTE PTR [rax]
   1400361cb:	add    BYTE PTR [rdx+0x1b],cl
   1400361ce:	add    BYTE PTR [rax],al
   1400361d0:	ins    BYTE PTR es:[rdi],dx
   1400361d1:	repz add al,BYTE PTR [rax]
   1400361d4:	push   rax
   1400361d5:	sbb    eax,DWORD PTR [rax]
   1400361d7:	add    BYTE PTR [rsi+0x3400001b],bh
   1400361dd:	or     al,BYTE PTR [rbx]
   1400361df:	add    al,al
   1400361e1:	sbb    eax,DWORD PTR [rax]
   1400361e3:	add    ch,ch
   1400361e5:	sbb    eax,DWORD PTR [rax]
   1400361e7:	add    BYTE PTR [rax-0xffffd0d],dl
   1400361ed:	sbb    eax,DWORD PTR [rax]
   1400361ef:	add    bl,cl
   1400361f1:	sbb    al,0x0
   1400361f3:	add    BYTE PTR [rax],cl
   1400361f5:	test   BYTE PTR [rdx],0x0
   1400361f8:	rcr    BYTE PTR [rax+rax*1],1
   1400361fb:	add    BYTE PTR [rcx-0xbffffe3],dl
   140036201:	sti    
   140036202:	add    al,BYTE PTR [rax]
   140036204:	movabs al,ds:0x400001e1b00001d
   14003620d:	or     BYTE PTR [rbx],al
   14003620f:	add    BYTE PTR [rax],ah
   140036211:	(bad)  
   140036212:	add    BYTE PTR [rax],al
   140036214:	xchg   esp,eax
   140036215:	(bad)  
   140036216:	add    BYTE PTR [rax],al
   140036218:	test   bl,dh
   14003621a:	add    al,BYTE PTR [rax]
   14003621c:	movabs al,ds:0x4c00001f7700001e
   140036225:	or     DWORD PTR [rbx],eax
   140036227:	add    BYTE PTR [rax+0x5100001f],al
   14003622d:	and    BYTE PTR [rax],al
   14003622f:	add    BYTE PTR [rcx+rcx*1+0x3],cl
   140036233:	add    BYTE PTR [rax+0x20],ah
   140036236:	add    BYTE PTR [rax],al
   140036238:	shl    BYTE PTR [rax],1
   14003623a:	add    BYTE PTR [rax],al
   14003623c:	or     QWORD PTR [rbx],r8
   14003623f:	add    al,dl
   140036241:	and    BYTE PTR [rax],al
   140036243:	add    cl,bl
   140036245:	and    DWORD PTR [rax],eax
   140036247:	add    BYTE PTR [rcx+rcx*1+0x3],cl
   14003624b:	add    al,ah
   14003624d:	and    DWORD PTR [rax],eax
   14003624f:	add    BYTE PTR [rcx-0x6fffffde],bh
   140036255:	repz add al,BYTE PTR [rax]
   140036258:	shl    BYTE PTR [rdx],0x0
   14003625b:	add    BYTE PTR [rip+0xffffffffbc000025],bl        # 0xfc036286
   140036261:	repz add al,BYTE PTR [rax]
   140036264:	sbb    eax,0x7e000025
   140036269:	and    eax,0xf3a80000
   14003626e:	add    al,BYTE PTR [rax]
   140036270:	jle    0x140036297
   140036272:	add    BYTE PTR [rax],al
   140036274:	rex.RB
   140036275:	add    BYTE PTR es:[rax],al
   140036278:	cwde   
   140036279:	repz add al,BYTE PTR [rax]
   14003627c:	push   rax
   14003627d:	add    BYTE PTR es:[rax],al
   140036280:	xchg   ebx,eax
   140036281:	add    BYTE PTR es:[rax],al
   140036284:	or     QWORD PTR [rbx],r8
   140036287:	add    BYTE PTR [rax-0xffffda],ah
   14003628d:	add    BYTE PTR es:[rax],al
   140036290:	int3   
   140036291:	repz add al,BYTE PTR [rax]
   140036294:	add    BYTE PTR [rdi],ah
   140036296:	add    BYTE PTR [rax],al
   140036298:	sub    DWORD PTR [rdi],esp
   14003629a:	add    BYTE PTR [rax],al
   14003629c:	add    ah,dh
   14003629e:	add    al,BYTE PTR [rax]
   1400362a0:	sub    DWORD PTR [rdi],esp
   1400362a2:	add    BYTE PTR [rax],al
   1400362a4:	push   rdi
   1400362a5:	(bad)  
   1400362a6:	add    BYTE PTR [rax],al
   1400362a8:	in     al,dx
   1400362a9:	repz add al,BYTE PTR [rax]
   1400362ac:	push   rdi
   1400362ad:	(bad)  
   1400362ae:	add    BYTE PTR [rax],al
   1400362b0:	jo     0x1400362d9
   1400362b2:	add    BYTE PTR [rax],al
   1400362b4:	fdivr  st(3),st
   1400362b6:	add    al,BYTE PTR [rax]
   1400362b8:	jo     0x1400362e1
   1400362ba:	add    BYTE PTR [rax],al
   1400362bc:	sub    ch,BYTE PTR [rax]
   1400362be:	add    BYTE PTR [rax],al
   1400362c0:	nop
   1400362c1:	add    eax,DWORD PTR [rbx]
   1400362c3:	add    BYTE PTR [rax],dh
   1400362c5:	sub    BYTE PTR [rax],al
   1400362c7:	add    BYTE PTR [rdi],bh
   1400362c9:	sub    DWORD PTR [rax],eax
   1400362cb:	add    BYTE PTR [rcx+rcx*1+0x3],cl
   1400362cf:	add    BYTE PTR [rax+0x29],al
   1400362d2:	add    BYTE PTR [rax],al
   1400362d4:	(bad)  
   1400362d5:	rex.WXB add BYTE PTR [r8],al
   1400362d8:	adc    ah,dh
   1400362da:	add    al,BYTE PTR [rax]
   1400362dc:	jo     0x140036329
   1400362de:	add    BYTE PTR [rax],al
   1400362e0:	imul   ecx,DWORD PTR [rax+rax*1+0x0],0x74
   1400362e5:	hlt    
   1400362e6:	add    al,BYTE PTR [rax]
   1400362e8:	imul   ecx,DWORD PTR [rax+rax*1+0x0],0xffffff92
   1400362ed:	rex.WR add BYTE PTR [rax],r8b
   1400362f0:	(bad)  
   1400362f1:	hlt    
   1400362f2:	add    al,BYTE PTR [rax]
   1400362f4:	xchg   edx,eax
   1400362f5:	rex.WR add BYTE PTR [rax],r8b
   1400362f8:	lock rex.WR add BYTE PTR [rax],r8b
   1400362fc:	rex.WR hlt 
   1400362fe:	add    al,BYTE PTR [rax]
   140036300:	lock rex.WR add BYTE PTR [rax],r8b
   140036304:	movsxd ecx,DWORD PTR [rbp+0x0]
   140036307:	add    BYTE PTR [rsp+rsi*8],bh
   14003630a:	add    al,BYTE PTR [rax]
   14003630c:	movsxd ecx,DWORD PTR [rbp+0x0]
   14003630f:	add    BYTE PTR [rbx+0x2c00004e],bl
   140036315:	hlt    
   140036316:	add    al,BYTE PTR [rax]
   140036318:	movabs al,ds:0xf000004f6600004e
   140036321:	inc    DWORD PTR [rdx]
   140036323:	add    BYTE PTR [rax+0x4f],dh
   140036326:	add    BYTE PTR [rax],al
   140036328:	xchg   DWORD PTR [rdi+0x0],ecx
   14003632b:	add    BYTE PTR [rsi+rsi*8+0x2],cl
   14003632f:	add    BYTE PTR [rax+0x6100004f],dl
   140036335:	push   rax
   140036336:	add    BYTE PTR [rax],al
   140036338:	mov    ah,dh
   14003633a:	add    al,BYTE PTR [rax]
   14003633c:	jo     0x14003638e
   14003633e:	add    BYTE PTR [rax],al
   140036340:	not    DWORD PTR [rcx+0x0]
   140036343:	add    BYTE PTR [rsp+rsi*8+0x52000002],dl
   14003634a:	add    BYTE PTR [rax],al
   14003634c:	rex.R push rdx
   14003634e:	add    BYTE PTR [rax],al
   140036350:	test   BYTE PTR [rdi],al
   140036352:	add    eax,DWORD PTR [rax]
   140036354:	adc    BYTE PTR [rdx+0x0],0x0
   140036358:	or     al,0x53
   14003635a:	add    BYTE PTR [rax],al
   14003635c:	push   rsp
   14003635d:	add    BYTE PTR [rbx],al
   14003635f:	add    BYTE PTR [rax],dh
   140036361:	push   rbx
   140036362:	add    BYTE PTR [rax],al
   140036364:	mov    bh,0x53
   140036366:	add    BYTE PTR [rax],al
   140036368:	add    al,0x8
   14003636a:	add    eax,DWORD PTR [rax]
   14003636c:	rcl    BYTE PTR [rbx+0x0],0x0
   140036370:	in     eax,dx
   140036371:	push   rbx
   140036372:	add    BYTE PTR [rax],al
   140036374:	clc    
   140036375:	cmc    
   140036376:	add    al,BYTE PTR [rax]
   140036378:	in     eax,dx
   140036379:	push   rbx
   14003637a:	add    BYTE PTR [rax],al
   14003637c:	add    eax,0xe8000054
   140036381:	hlt    
   140036382:	add    al,BYTE PTR [rax]
   140036384:	add    eax,0x62000054
   140036389:	push   rsp
   14003638a:	add    BYTE PTR [rax],al
   14003638c:	(bad)  
   14003638d:	hlt    
   14003638e:	add    al,BYTE PTR [rax]
   140036390:	(bad)  
   140036391:	push   rsp
   140036392:	add    BYTE PTR [rax],al
   140036394:	js     0x1400363ea
   140036396:	add    BYTE PTR [rax],al
   140036398:	(bad)  
   140036399:	hlt    
   14003639a:	add    al,BYTE PTR [rax]
   14003639c:	js     0x1400363f2
   14003639e:	add    BYTE PTR [rax],al
   1400363a0:	jge    0x1400363f6
   1400363a2:	add    BYTE PTR [rax],al
   1400363a4:	mov    al,0xf4
   1400363a6:	add    al,BYTE PTR [rax]
   1400363a8:	jge    0x1400363fe
   1400363aa:	add    BYTE PTR [rax],al
   1400363ac:	xchg   ecx,eax
   1400363ad:	push   rsp
   1400363ae:	add    BYTE PTR [rax],al
   1400363b0:	movabs al,ds:0xca000054a00002f4
   1400363b9:	push   rsp
   1400363ba:	add    BYTE PTR [rax],al
   1400363bc:	and    al,0xf5
   1400363be:	add    al,BYTE PTR [rax]
   1400363c0:	retf   0x54
   1400363c3:	add    BYTE PTR [rdx],dl
   1400363c5:	push   rbp
   1400363c6:	add    BYTE PTR [rax],al
   1400363c8:	or     al,0xf5
   1400363ca:	add    al,BYTE PTR [rax]
   1400363cc:	adc    dl,BYTE PTR [rbp+0x0]
   1400363cf:	add    BYTE PTR [rdx*2-0xb040000],dl
   1400363d6:	add    al,BYTE PTR [rax]
   1400363d8:	and    BYTE PTR [rbp+0x0],dl
   1400363db:	add    BYTE PTR [rbp+0x55],al
   1400363de:	add    BYTE PTR [rax],al
   1400363e0:	ins    BYTE PTR es:[rdi],dx
   1400363e1:	cmc    
   1400363e2:	add    al,BYTE PTR [rax]
   1400363e4:	rex.RB push r13
   1400363e6:	add    BYTE PTR [rax],al
   1400363e8:	(bad)  
   1400363e9:	push   rbp
   1400363ea:	add    BYTE PTR [rax],al
   1400363ec:	push   rsp
   1400363ed:	cmc    
   1400363ee:	add    al,BYTE PTR [rax]
   1400363f0:	(bad)  
   1400363f1:	push   rbp
   1400363f2:	add    BYTE PTR [rax],al
   1400363f4:	out    0x55,eax
   1400363f6:	add    BYTE PTR [rax],al
   1400363f8:	rex cmc 
   1400363fa:	add    al,BYTE PTR [rax]
   1400363fc:	out    0x55,eax
   1400363fe:	add    BYTE PTR [rax],al
   140036400:	repz push rbp
   140036402:	add    BYTE PTR [rax],al
   140036404:	xor    ch,dh
   140036406:	add    al,BYTE PTR [rax]
   140036408:	add    BYTE PTR [rsi+0x0],dl
   14003640b:	add    BYTE PTR [rcx],ah
   14003640d:	push   rsi
   14003640e:	add    BYTE PTR [rax],al
   140036410:	(bad)  
   140036411:	cmc    
   140036412:	add    al,BYTE PTR [rax]
   140036414:	and    DWORD PTR [rsi+0x0],edx
   140036417:	add    BYTE PTR [rsi+0x56],cl
   14003641a:	add    BYTE PTR [rax],al
   14003641c:	lods   al,BYTE PTR ds:[rsi]
   14003641d:	cmc    
   14003641e:	add    al,BYTE PTR [rax]
   140036420:	rex.WRX push rsi
   140036422:	add    BYTE PTR [rax],al
   140036424:	leave  
   140036425:	push   rsi
   140036426:	add    BYTE PTR [rax],al
   140036428:	cwde   
   140036429:	cmc    
   14003642a:	add    al,BYTE PTR [rax]
   14003642c:	leave  
   14003642d:	push   rsi
   14003642e:	add    BYTE PTR [rax],al
   140036430:	(bad)  
   140036431:	push   rdi
   140036432:	add    BYTE PTR [rax],al
   140036434:	mov    ch,dh
   140036436:	add    al,BYTE PTR [rax]
   140036438:	(bad)  
   140036439:	push   rdi
   14003643a:	add    BYTE PTR [rax],al
   14003643c:	ins    BYTE PTR es:[rdi],dx
   14003643d:	push   rdi
   14003643e:	add    BYTE PTR [rax],al
   140036440:	js     0x140036437
   140036442:	add    al,BYTE PTR [rax]
   140036444:	jo     0x14003649d
   140036446:	add    BYTE PTR [rax],al
   140036448:	lahf   
   140036449:	push   rdi
   14003644a:	add    BYTE PTR [rax],al
   14003644c:	clc    
   14003644d:	cmc    
   14003644e:	add    al,BYTE PTR [rax]
   140036450:	lahf   
   140036451:	push   rdi
   140036452:	add    BYTE PTR [rax],al
   140036454:	jrcxz  0x1400364ad
   140036456:	add    BYTE PTR [rax],al
   140036458:	loopne 0x14003644f
   14003645a:	add    al,BYTE PTR [rax]
   14003645c:	jrcxz  0x1400364b5
   14003645e:	add    BYTE PTR [rax],al
   140036460:	(bad)  
   140036461:	pop    rax
   140036462:	add    BYTE PTR [rax],al
   140036464:	shl    ch,1
   140036466:	add    al,BYTE PTR [rax]
   140036468:	and    BYTE PTR [rax+0x0],bl
   14003646b:	add    BYTE PTR [rax+0x4000058],ch
   140036471:	or     BYTE PTR [rbx],al
   140036473:	add    BYTE PTR [rax-0x74ffffa8],dh
   140036479:	pop    rcx
   14003647a:	add    BYTE PTR [rax],al
   14003647c:	or     dh,dh
   14003647e:	add    al,BYTE PTR [rax]
   140036480:	nop
   140036481:	pop    rcx
   140036482:	add    BYTE PTR [rax],al
   140036484:	(bad)  
   140036485:	pop    rcx
   140036486:	add    BYTE PTR [rax],al
   140036488:	xor    al,0xa
   14003648a:	add    eax,DWORD PTR [rax]
   14003648c:	add    BYTE PTR [rdx+0x0],bl
   14003648f:	add    BYTE PTR [rsi+0x5a],ch
   140036492:	add    BYTE PTR [rax],al
   140036494:	xor    al,0xa
   140036496:	add    eax,DWORD PTR [rax]
   140036498:	jo     0x1400364f4
   14003649a:	add    BYTE PTR [rax],al
   14003649c:	rex.WXB pop r11
   14003649e:	add    BYTE PTR [rax],al
   1400364a0:	or     dh,dh
   1400364a2:	add    al,BYTE PTR [rax]
   1400364a4:	push   rax
   1400364a5:	pop    rbx
   1400364a6:	add    BYTE PTR [rax],al
   1400364a8:	mov    esi,0x3400005b
   1400364ad:	or     al,BYTE PTR [rbx]
   1400364af:	add    al,al
   1400364b1:	pop    rbx
   1400364b2:	add    BYTE PTR [rax],al
   1400364b4:	cmp    ebx,DWORD PTR [rax+rax*1+0x0]
   1400364b8:	add    al,0x8
   1400364ba:	add    eax,DWORD PTR [rax]
   1400364bc:	rex pop rsp
   1400364be:	add    BYTE PTR [rax],al
   1400364c0:	mov    al,0x5c
   1400364c2:	add    BYTE PTR [rax],al
   1400364c4:	or     QWORD PTR [rbx],r8
   1400364c7:	add    BYTE PTR [rax+0x5200005c],dh
   1400364cd:	pop    rbp
   1400364ce:	add    BYTE PTR [rax],al
   1400364d0:	rex test BYTE PTR [rdx],0x0
   1400364d4:	push   rdx
   1400364d5:	pop    rbp
   1400364d6:	add    BYTE PTR [rax],al
   1400364d8:	nop
   1400364d9:	pop    rbp
   1400364da:	add    BYTE PTR [rax],al
   1400364dc:	sub    al,0xf6
   1400364de:	add    al,BYTE PTR [rax]
   1400364e0:	nop
   1400364e1:	pop    rbp
   1400364e2:	add    BYTE PTR [rax],al
   1400364e4:	fwait
   1400364e5:	pop    rbp
   1400364e6:	add    BYTE PTR [rax],al
   1400364e8:	sbb    al,0xf6
   1400364ea:	add    al,BYTE PTR [rax]
   1400364ec:	movabs al,ds:0x4c00005ddd00005d
   1400364f5:	test   BYTE PTR [rdx],0x0
   1400364f8:	loopne 0x140036557
   1400364fa:	add    BYTE PTR [rax],al
   1400364fc:	rcr    BYTE PTR [rsi+0x0],0x0
   140036500:	or     QWORD PTR [rbx],r8
   140036503:	add    al,al
   140036505:	pop    rsi
   140036506:	add    BYTE PTR [rax],al
   140036508:	fistp  DWORD PTR [rsi+0x0]
   14003650b:	add    BYTE PTR [rax-0x1ffffd0d],dl
   140036511:	pop    rsi
   140036512:	add    BYTE PTR [rax],al
   140036514:	ret    0x5f
   140036517:	add    BYTE PTR [rsi+rsi*8+0x2],dl
   14003651b:	add    al,dl
   14003651d:	pop    rdi
   14003651e:	add    BYTE PTR [rax],al
   140036520:	jae    0x140036582
   140036522:	add    BYTE PTR [rax],al
   140036524:	add    al,0x8
   140036526:	add    eax,DWORD PTR [rax]
   140036528:	and    BYTE PTR [rax+0x0],0x0
   14003652c:	lock (bad) 
   14003652e:	add    BYTE PTR [rax],al
   140036530:	nop
   140036531:	test   BYTE PTR [rdx],0x0
   140036534:	lock (bad) 
   140036536:	add    BYTE PTR [rax],al
   140036538:	(bad)  
   14003653a:	add    BYTE PTR [rax],al
   14003653c:	js     0x140036534
   14003653e:	add    al,BYTE PTR [rax]
   140036540:	(bad)  
   140036542:	add    BYTE PTR [rax],al
   140036544:	jge    0x1400365a7
   140036546:	add    BYTE PTR [rax],al
   140036548:	push   0xffffffff800002f6
   14003654d:	(bad)  
   14003654e:	add    BYTE PTR [rax],al
   140036550:	out    0x61,eax
   140036552:	add    BYTE PTR [rax],al
   140036554:	enter  0x2f6,0x0
   140036558:	out    0x61,eax
   14003655a:	add    BYTE PTR [rax],al
   14003655c:	outs   dx,DWORD PTR ds:[rsi]
   14003655d:	(bad)  
   14003655e:	add    BYTE PTR [rax],al
   140036560:	mov    ah,0xf6
   140036562:	add    al,BYTE PTR [rax]
   140036564:	outs   dx,DWORD PTR ds:[rsi]
   140036565:	(bad)  
   140036566:	add    BYTE PTR [rax],al
   140036568:	mov    DWORD PTR [rdx+0x0],esp
   14003656b:	add    BYTE PTR [rsi+rsi*8+0x62900002],ah
   140036572:	add    BYTE PTR [rax],al
   140036574:	xor    esp,DWORD PTR [rbx+0x0]
   140036577:	add    BYTE PTR [rax+rcx*1],al
   14003657a:	add    eax,DWORD PTR [rax]
   14003657c:	rex movsxd eax,DWORD PTR [rax]
   14003657f:	add    cl,ah
   140036581:	movsxd eax,DWORD PTR [rax]
   140036583:	add    BYTE PTR [rax],al
   140036585:	test   DWORD PTR [rdx],0x63e100
   14003658b:	add    BYTE PTR [rsp+riz*2-0x9140000],cl
   140036592:	add    al,BYTE PTR [rax]
   140036594:	mov    WORD PTR [rax+rax*1+0x0],fs
   140036598:	mov    cl,0x64
   14003659a:	add    BYTE PTR [rax],al
   14003659c:	fdivr  st(6),st
   14003659e:	add    al,BYTE PTR [rax]
   1400365a0:	shl    BYTE PTR [rax+rax*1+0x0],0x3f
   1400365a5:	data16 add BYTE PTR [rax],al
   1400365a8:	sbb    al,0xf7
   1400365aa:	add    al,BYTE PTR [rax]
   1400365ac:	rex
   1400365ad:	data16 add BYTE PTR [rax],al
   1400365b0:	test   BYTE PTR [rdi+0x0],ah
   1400365b3:	add    BYTE PTR [rax],bh
   1400365b5:	test   DWORD PTR [rdx],0x679000
   1400365bb:	add    cl,cl
   1400365bd:	add    BYTE PTR [eax],al
   1400365c0:	ins    BYTE PTR es:[rdi],dx
   1400365c1:	test   DWORD PTR [rdx],0x67c900
   1400365c7:	add    BYTE PTR [rax],ch
   1400365c9:	push   0xfffffffff7580000
   1400365ce:	add    al,BYTE PTR [rax]
   1400365d0:	sub    BYTE PTR [rax+0x0],ch
   1400365d3:	add    BYTE PTR [rbp+0x69],bl
   1400365d6:	add    BYTE PTR [rax],al
   1400365d8:	test   QWORD PTR [rdx],0x696000
   1400365df:	add    BYTE PTR [rbx+0x7c00006a],ch
   1400365e5:	test   DWORD PTR [rdx],0x6ab000
   1400365eb:	add    ch,dh
   1400365ed:	imul   eax,DWORD PTR [rax],0x0
   1400365f0:	nop
   1400365f1:	test   DWORD PTR [rdx],0x6c0000
   1400365f7:	add    BYTE PTR [rdi],dl
   1400365f9:	ins    BYTE PTR es:[rdi],dx
   1400365fa:	add    BYTE PTR [rax],al
   1400365fc:	nop
   1400365fd:	repz add al,BYTE PTR [rax]
   140036600:	(bad)  
   140036601:	ins    BYTE PTR es:[rdi],dx
   140036602:	add    BYTE PTR [rax],al
   140036604:	test   DWORD PTR [rax+rax*1+0x0],ebp
   140036608:	mov    al,0xf7
   14003660a:	add    al,BYTE PTR [rax]
   14003660c:	test   DWORD PTR [rax+rax*1+0x0],ebp
   140036610:	mov    ebp,DWORD PTR [rax+rax*1+0x0]
   140036614:	movabs al,ds:0x400006c900002f7
   14003661d:	ins    DWORD PTR es:[rdi],dx
   14003661e:	add    BYTE PTR [rax],al
   140036620:	in     al,dx
   140036621:	test   DWORD PTR [rdx],0x6d0400
   140036627:	add    bh,dl
   140036629:	outs   dx,DWORD PTR ds:[rsi]
   14003662a:	add    BYTE PTR [rax],al
   14003662c:	fdiv   st,st(7)
   14003662e:	add    al,BYTE PTR [rax]
   140036630:	xlat   BYTE PTR ds:[rbx]
   140036631:	outs   dx,DWORD PTR ds:[rsi]
   140036632:	add    BYTE PTR [rax],al
   140036634:	lock outs dx,DWORD PTR ds:[rsi]
   140036636:	add    BYTE PTR [rax],al
   140036638:	enter  0x2f7,0x0
   14003663c:	lock outs dx,DWORD PTR ds:[rsi]
   14003663e:	add    BYTE PTR [rax],al
   140036640:	adc    dh,BYTE PTR [rbx+0x0]
   140036643:	add    BYTE PTR [rax+rdi*8],ah
   140036646:	add    al,BYTE PTR [rax]
   140036648:	adc    dh,BYTE PTR [rbx+0x0]
   14003664b:	add    BYTE PTR [rdi+rsi*2],bl
   14003664e:	add    BYTE PTR [rax],al
   140036650:	adc    al,bh
   140036652:	add    al,BYTE PTR [rax]
   140036654:	sbb    al,0x77
   140036656:	add    BYTE PTR [rax],al
   140036658:	cs ja  0x14003665b
   14003665b:	add    BYTE PTR [rax],al
   14003665d:	clc    
   14003665e:	add    al,BYTE PTR [rax]
   140036660:	xor    BYTE PTR [rdi+0x0],dh
   140036663:	add    BYTE PTR [rbx+0x7a],dl
   140036666:	add    BYTE PTR [rax],al
   140036668:	(bad)  
   140036669:	clc    
   14003666a:	add    al,BYTE PTR [rax]
   14003666c:	push   rbx
   14003666d:	jp     0x14003666f
   14003666f:	add    BYTE PTR [rcx+0x4c00007e],dh
   140036675:	clc    
   140036676:	add    al,BYTE PTR [rax]
   140036678:	mov    cl,0x7e
   14003667a:	add    BYTE PTR [rax],al
   14003667c:	int    0x7e
   14003667e:	add    BYTE PTR [rax],al
   140036680:	cmp    al,0xf8
   140036682:	add    al,BYTE PTR [rax]
   140036684:	sar    BYTE PTR [rsi+0x0],1
   140036687:	add    BYTE PTR [rcx+0x7f],ch
   14003668a:	add    BYTE PTR [rax],al
   14003668c:	(bad)  
   14003668d:	clc    
   14003668e:	add    al,BYTE PTR [rax]
   140036690:	imul   edi,DWORD PTR [rdi+0x0],0x7f8200
   140036697:	add    BYTE PTR [rax-0x7dfffd08],dh
   14003669d:	jg     0x14003669f
   14003669f:	add    ch,bh
   1400366a1:	jg     0x1400366a3
   1400366a3:	add    BYTE PTR [rax+rdi*8+0x7ffd0002],bl
   1400366aa:	add    BYTE PTR [rax],al
   1400366ac:	sbb    eax,0x8c000080
   1400366b1:	clc    
   1400366b2:	add    al,BYTE PTR [rax]
   1400366b4:	sbb    eax,0xbd000080
   1400366b9:	add    BYTE PTR [rax],0x0
   1400366bc:	jl     0x1400366b6
   1400366be:	add    al,BYTE PTR [rax]
   1400366c0:	rol    BYTE PTR [rax-0x7f310000],0x0
   1400366c7:	add    BYTE PTR [rax-0x7],bl
   1400366ca:	add    al,BYTE PTR [rax]
   1400366cc:	iret   
   1400366cd:	add    BYTE PTR [rax],0x0
   1400366d0:	je     0x140036654
   1400366d2:	add    BYTE PTR [rax],al
   1400366d4:	rex stc 
   1400366d6:	add    al,BYTE PTR [rax]
   1400366d8:	je     0x14003665c
   1400366da:	add    BYTE PTR [rax],al
   1400366dc:	pop    QWORD PTR [rdx-0x6d40000]
   1400366e2:	add    al,BYTE PTR [rax]
   1400366e4:	pop    QWORD PTR [rdx-0x7d2b0000]
   1400366ea:	add    BYTE PTR [rax],al
   1400366ec:	sbb    cl,bh
   1400366ee:	add    al,BYTE PTR [rax]
   1400366f0:	(bad)  
   1400366f1:	(bad)  
   1400366f2:	add    BYTE PTR [rax],al
   1400366f4:	out    0x82,al
   1400366f6:	add    BYTE PTR [rax],al
   1400366f8:	or     cl,bh
   1400366fa:	add    al,BYTE PTR [rax]
   1400366fc:	out    0x82,al
   1400366fe:	add    BYTE PTR [rax],al
   140036700:	clc    
   140036701:	(bad)  
   140036702:	add    BYTE PTR [rax],al
   140036704:	clc    
   140036705:	clc    
   140036706:	add    al,BYTE PTR [rax]
   140036708:	clc    
   140036709:	(bad)  
   14003670a:	add    BYTE PTR [rax],al
   14003670c:	mov    al,0x83
   14003670e:	add    BYTE PTR [rax],al
   140036710:	in     al,0xf8
   140036712:	add    al,BYTE PTR [rax]
   140036714:	mov    al,0x83
   140036716:	add    BYTE PTR [rax],al
   140036718:	xchg   esi,eax
   140036719:	test   BYTE PTR [rax],al
   14003671b:	add    ah,dl
   14003671d:	clc    
   14003671e:	add    al,BYTE PTR [rax]
   140036720:	movabs al,ds:0x90000084c4000084
   140036729:	repz add al,BYTE PTR [rax]
   14003672c:	rol    BYTE PTR [rax+rax*1+0x851a00],1
   140036733:	add    BYTE PTR [rcx+rcx*1+0x3],cl
   140036737:	add    BYTE PTR [rax],ah
   140036739:	test   DWORD PTR [rax],eax
   14003673b:	add    bh,bh
   14003673d:	xchg   BYTE PTR [rax],al
   14003673f:	add    BYTE PTR [rcx+rdi*8+0x2],ah
   140036743:	add    BYTE PTR [rax],al
   140036745:	xchg   DWORD PTR [rax],eax
   140036747:	add    BYTE PTR [rsi-0x79],dh
   14003674a:	add    BYTE PTR [rax],al
   14003674c:	or     QWORD PTR [rbx],r8
   14003674f:	add    BYTE PTR [rax-0x42ffff79],al
   140036755:	mov    BYTE PTR [rax],al
   140036757:	add    BYTE PTR [rbx+rsi*8+0x2],ch
   14003675b:	add    al,al
   14003675d:	mov    BYTE PTR [rax],al
   14003675f:	add    BYTE PTR [rdx],dh
   140036761:	mov    DWORD PTR [rax],eax
   140036763:	add    BYTE PTR [rax+0x400002f3],dl
   140036769:	mov    DWORD PTR [rax],eax
   14003676b:	add    BYTE PTR [rbp-0x77],bl
   14003676e:	add    BYTE PTR [rax],al
   140036770:	nop
   140036771:	repz add al,BYTE PTR [rax]
   140036774:	(bad)  
   140036775:	mov    DWORD PTR [rax],eax
   140036777:	add    ch,ah
   140036779:	mov    DWORD PTR [rax],eax
   14003677b:	add    BYTE PTR [rcx+rcx*1+0x3],cl
   14003677f:	add    al,dh
   140036781:	mov    DWORD PTR [rax],eax
   140036783:	add    BYTE PTR [rdx],bh
   140036785:	mov    al,BYTE PTR [rax]
   140036787:	add    BYTE PTR [rax+rcx*1],al
   14003678a:	add    eax,DWORD PTR [rax]
   14003678c:	mov    al,BYTE PTR [rax]
   14003678f:	add    BYTE PTR [rax-0x2bffff76],bh
   140036795:	stc    
   140036796:	add    al,BYTE PTR [rax]
   140036798:	mov    eax,0xc800008a
   14003679d:	mov    al,BYTE PTR [rax]
   14003679f:	add    BYTE PTR [rcx+rdi*8-0x7537fffe],bh
   1400367a6:	add    BYTE PTR [rax],al
   1400367a8:	(bad)  
   1400367a9:	lea    eax,[rax]
   1400367ab:	add    BYTE PTR [rcx+rdi*8-0x7270fffe],ah
   1400367b2:	add    BYTE PTR [rax],al
   1400367b4:	dec    DWORD PTR [rbp-0x6700000]
   1400367ba:	add    al,BYTE PTR [rax]
   1400367bc:	dec    DWORD PTR [rbp-0x70e50000]
   1400367c2:	add    BYTE PTR [rax],al
   1400367c4:	jl     0x1400367bf
   1400367c6:	add    al,BYTE PTR [rax]
   1400367c8:	and    BYTE PTR [rdi-0x704f0000],cl
   1400367ce:	add    BYTE PTR [rax],al
   1400367d0:	add    al,0x8
   1400367d2:	add    eax,DWORD PTR [rax]
   1400367d4:	ror    BYTE PTR [rdi-0x70250000],0x0
   1400367db:	add    BYTE PTR [rax-0x6],ah
   1400367de:	add    al,BYTE PTR [rax]
   1400367e0:	fisttp DWORD PTR [rdi-0x70210000]
   1400367e6:	add    BYTE PTR [rax],al
   1400367e8:	rex.WR cli 
   1400367ea:	add    al,BYTE PTR [rax]
   1400367ec:	fisttp WORD PTR [rdi-0x6fb40000]
   1400367f2:	add    BYTE PTR [rax],al
   1400367f4:	xor    dl,bh
   1400367f6:	add    al,BYTE PTR [rax]
   1400367f8:	rex.WR xchg rax,rax
   1400367fa:	add    BYTE PTR [rax],al
   1400367fc:	rcr    DWORD PTR [rax-0x5e80000],0x2
   140036803:	add    cl,al
   140036805:	cwde   
   140036806:	add    BYTE PTR [rax],al
   140036808:	loopne 0x1400367a2
   14003680a:	add    BYTE PTR [rax],al
   14003680c:	or     dl,bh
   14003680e:	add    al,BYTE PTR [rax]
   140036810:	loopne 0x1400367aa
   140036812:	add    BYTE PTR [rax],al
   140036814:	(bad)  
   140036815:	cdq    
   140036816:	add    BYTE PTR [rax],al
   140036818:	clc    
   140036819:	stc    
   14003681a:	add    al,BYTE PTR [rax]
   14003681c:	(bad)  
   14003681d:	cdq    
   14003681e:	add    BYTE PTR [rax],al
   140036820:	push   rdx
   140036821:	cdq    
   140036822:	add    BYTE PTR [rax],al
   140036824:	call   0x1a0036b22
   140036829:	cdq    
   14003682a:	add    BYTE PTR [rax],al
   14003682c:	xchg   ebp,eax
   14003682d:	cdq    
   14003682e:	add    BYTE PTR [rax],al
   140036830:	(bad)  
   140036831:	cli    
   140036832:	add    al,BYTE PTR [rax]
   140036834:	xchg   ebp,eax
   140036835:	cdq    
   140036836:	add    BYTE PTR [rax],al
   140036838:	adc    eax,0xc000009a
   14003683d:	cli    
   14003683e:	add    al,BYTE PTR [rax]
   140036840:	adc    eax,0xb800009a
   140036845:	sahf   
   140036846:	add    BYTE PTR [rax],al
   140036848:	movabs al,ds:0xfe00009eb80002fa
   140036851:	sahf   
   140036852:	add    BYTE PTR [rax],al
   140036854:	mov    edx,?
   140036856:	add    al,BYTE PTR [rax]
   140036858:	(bad)  
   140036859:	sahf   
   14003685a:	add    BYTE PTR [rax],al
   14003685c:	(bad)  
   14003685d:	lahf   
   14003685e:	add    BYTE PTR [rax],al
   140036860:	jl     0x14003685c
   140036862:	add    al,BYTE PTR [rax]
   140036864:	(bad)  
   140036865:	lahf   
   140036866:	add    BYTE PTR [rax],al
   140036868:	adc    bl,BYTE PTR [rdi-0x5940000]
   14003686e:	add    al,BYTE PTR [rax]
   140036870:	and    BYTE PTR [rdi-0x5fbc0000],bl
   140036876:	add    BYTE PTR [rax],al
   140036878:	or     al,0xfb
   14003687a:	add    al,BYTE PTR [rax]
   14003687c:	rex.R movabs al,ds:0xfaf40000a4a00000
   140036886:	add    al,BYTE PTR [rax]
   140036888:	movabs al,ds:0xe40000a5650000a4
   140036891:	cli    
   140036892:	add    al,BYTE PTR [rax]
   140036894:	jo     0x14003683b
   140036896:	add    BYTE PTR [rax],al
   140036898:	jl     0x140036840
   14003689a:	add    BYTE PTR [rax],al
   14003689c:	and    bl,bh
   14003689e:	add    al,BYTE PTR [rax]
   1400368a0:	and    BYTE PTR [rsi-0x58780000],0x0
   1400368a7:	add    BYTE PTR [rax],ah
   1400368a9:	sti    
   1400368aa:	add    al,BYTE PTR [rax]
   1400368ac:	nop
   1400368ad:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400368ae:	add    BYTE PTR [rax],al
   1400368b0:	rex.RB test al,0x0
   1400368b3:	add    BYTE PTR [rax],dh
   1400368b5:	sti    
   1400368b6:	add    al,BYTE PTR [rax]
   1400368b8:	push   rax
   1400368b9:	test   al,0x0
   1400368bb:	add    BYTE PTR [rsi+0x440000b3],bl
   1400368c1:	sti    
   1400368c2:	add    al,BYTE PTR [rax]
   1400368c4:	movabs al,ds:0x900000b3de0000b3
   1400368cd:	repz add al,BYTE PTR [rax]
   1400368d0:	fidiv  WORD PTR [rbx-0x4c050000]
   1400368d6:	add    BYTE PTR [rax],al
   1400368d8:	fdiv   st(3),st
   1400368da:	add    al,BYTE PTR [rax]
   1400368dc:	sti    
   1400368dd:	mov    bl,0x0
   1400368df:	add    BYTE PTR [rax],ch
   1400368e1:	mov    ah,0x0
   1400368e3:	add    al,cl
   1400368e5:	sti    
   1400368e6:	add    al,BYTE PTR [rax]
   1400368e8:	sub    BYTE PTR [rax+rax*1+0xb43b00],dh
   1400368ef:	add    BYTE PTR [rax+0x3b0002fb],bh
   1400368f5:	mov    ah,0x0
   1400368f7:	add    BYTE PTR [rcx-0x4c],al
   1400368fa:	add    BYTE PTR [rax],al
   1400368fc:	test   al,0xfb
   1400368fe:	add    al,BYTE PTR [rax]
   140036900:	push   rax
   140036901:	mov    ah,0x0
   140036903:	add    al,dh
   140036905:	mov    ah,0x0
   140036907:	add    BYTE PTR [rcx+rcx*1+0x3],cl
   14003690b:	add    al,dh
   14003690d:	mov    ah,0x0
   14003690f:	add    BYTE PTR [rbp-0x6fffff4b],dl
   140036915:	repz add al,BYTE PTR [rax]
   140036918:	movabs al,ds:0xf40000b6870000b5
   140036921:	sti    
   140036922:	add    al,BYTE PTR [rax]
   140036924:	nop
   140036925:	mov    dh,0x0
   140036927:	add    BYTE PTR [rbp-0x49],al
   14003692a:	add    BYTE PTR [rax],al
   14003692c:	xor    al,0xa
   14003692e:	add    eax,DWORD PTR [rax]
   140036930:	push   rax
   140036931:	mov    bh,0x0
   140036933:	add    BYTE PTR [rdi+rsi*4+0x0],bh
   140036937:	add    BYTE PTR [rax],dh
   140036939:	cld    
   14003693a:	add    al,BYTE PTR [rax]
   14003693c:	jl     0x1400368f5
   14003693e:	add    BYTE PTR [rax],al
   140036940:	sbb    DWORD PTR [rax-0x3e80000],edi
   140036946:	add    al,BYTE PTR [rax]
   140036948:	sbb    DWORD PTR [rax-0x47d90000],edi
   14003694e:	add    BYTE PTR [rax],al
   140036950:	or     ah,bh
   140036952:	add    al,BYTE PTR [rax]
   140036954:	xor    BYTE PTR [rax-0x47b50000],bh
   14003695a:	add    BYTE PTR [rax],al
   14003695c:	nop
   14003695d:	repz add al,BYTE PTR [rax]
   140036960:	push   rax
   140036961:	mov    eax,0xb8740000
   140036966:	add    BYTE PTR [rax],al
   140036968:	nop
   140036969:	repz add al,BYTE PTR [rax]
   14003696c:	cmp    BYTE PTR [rax-0x47590000],0x0
   140036973:	add    BYTE PTR [rax-0x58fffd04],dl
   140036979:	mov    eax,0xb8ba0000
   14003697e:	add    BYTE PTR [rax],al
   140036980:	je     0x14003697e
   140036982:	add    al,BYTE PTR [rax]
   140036984:	mov    edx,0x60000b8
   140036989:	mov    ebp,0xfc5c0000
   14003698e:	add    al,BYTE PTR [rax]
   140036990:	(bad)  
   140036991:	mov    ebp,0xbe050000
   140036996:	add    BYTE PTR [rax],al
   140036998:	rex.WR cld 
   14003699a:	add    al,BYTE PTR [rax]
   14003699c:	add    eax,0x290000be
   1400369a1:	mov    esi,0xfc3c0000
   1400369a6:	add    al,BYTE PTR [rax]
   1400369a8:	xor    BYTE PTR [rsi-0x41b20000],bh
   1400369ae:	add    BYTE PTR [rax],al
   1400369b0:	(bad)  
   1400369b1:	cld    
   1400369b2:	add    al,BYTE PTR [rax]
   1400369b4:	rex.WRX movabs rsi,0xfcac0000be8c0000
   1400369be:	add    al,BYTE PTR [rax]
   1400369c0:	mov    WORD PTR [rsi-0x414d0000],?
   1400369c6:	add    BYTE PTR [rax],al
   1400369c8:	pushf  
   1400369c9:	cld    
   1400369ca:	add    al,BYTE PTR [rax]
   1400369cc:	sar    BYTE PTR [rsi-0x40be0000],0x0
   1400369d3:	add    al,dl
   1400369d5:	cld    
   1400369d6:	add    al,BYTE PTR [rax]
   1400369d8:	push   rax
   1400369d9:	mov    edi,0xc0d90000
   1400369de:	add    BYTE PTR [rax],al
   1400369e0:	in     al,0xfc
   1400369e2:	add    al,BYTE PTR [rax]
   1400369e4:	loopne 0x1400369a6
   1400369e6:	add    BYTE PTR [rax],al
   1400369e8:	lods   eax,DWORD PTR ds:[rsi]
   1400369e9:	rol    DWORD PTR [rax],0x0
   1400369ec:	jl     0x1400369f6
   1400369ee:	add    eax,DWORD PTR [rax]
   1400369f0:	mov    al,0xc1
   1400369f2:	add    BYTE PTR [rax],al
   1400369f4:	int3   
   1400369f5:	rol    DWORD PTR [rax],0x0
   1400369f8:	sub    ch,bh
   1400369fa:	add    al,BYTE PTR [rax]
   1400369fc:	int3   
   1400369fd:	rol    DWORD PTR [rax],0x0
   140036a00:	loopne 0x1400369c4
   140036a02:	add    BYTE PTR [rax],al
   140036a04:	add    al,0xfd
   140036a06:	add    al,BYTE PTR [rax]
   140036a08:	loopne 0x1400369cc
   140036a0a:	add    BYTE PTR [rax],al
   140036a0c:	in     eax,dx
   140036a0d:	ret    0x0
   140036a10:	hlt    
   140036a11:	cld    
   140036a12:	add    al,BYTE PTR [rax]
   140036a14:	lock ret 0x0
   140036a18:	rol    ebx,0x0
   140036a1b:	add    BYTE PTR [rax+rcx*1+0x3],bh
   140036a1f:	add    al,dl
   140036a21:	ret    
   140036a22:	add    BYTE PTR [rax],al
   140036a24:	movabs al,ds:0xa00003087c0000c4
   140036a2d:	(bad)  
   140036a2e:	add    BYTE PTR [rax],al
   140036a30:	(bad)
   140036a34:	nop
   140036a35:	repz add al,BYTE PTR [rax]
   140036a38:	xor    ch,al
   140036a3a:	add    BYTE PTR [rax],al
   140036a3c:	fadd   st,st(5)
   140036a3e:	add    BYTE PTR [rax],al
   140036a40:	add    al,0x8
   140036a42:	add    eax,DWORD PTR [rax]
   140036a44:	loopne 0x140036a0b
   140036a46:	add    BYTE PTR [rax],al
   140036a48:	(bad)
   140036a4c:	pop    rsp
   140036a4d:	std    
   140036a4e:	add    al,BYTE PTR [rax]
   140036a50:	(bad)
   140036a54:	push   0xffffffffffffffc6
   140036a56:	add    BYTE PTR [rax],al
   140036a58:	rex.R std 
   140036a5a:	add    al,BYTE PTR [rax]
   140036a5c:	push   0xffffffffffffffc6
   140036a5e:	add    BYTE PTR [rax],al
   140036a60:	rol    esi,1
   140036a62:	add    BYTE PTR [rax],al
   140036a64:	xor    al,0xfd
   140036a66:	add    al,BYTE PTR [rax]
   140036a68:	loopne 0x140036a30
   140036a6a:	add    BYTE PTR [rax],al
   140036a6c:	(bad)  
   140036a6d:	mov    DWORD PTR [rax],0x2f39000
   140036a73:	add    BYTE PTR [rax],ah
   140036a75:	mov    DWORD PTR [rax],0xc75700
   140036a7b:	add    BYTE PTR [rax+0x600002f3],dl
   140036a81:	mov    DWORD PTR [rax],0xc7fb00
   140036a87:	add    BYTE PTR [rbp+rdi*8+0x2],ch
   140036a8b:	add    BYTE PTR [rax],al
   140036a8d:	enter  0x0,0xaf
   140036a91:	enter  0x0,0x7c
   140036a95:	or     BYTE PTR [rbx],al
   140036a97:	add    BYTE PTR [rax+0x360000c8],dh
   140036a9d:	leave  
   140036a9e:	add    BYTE PTR [rax],al
   140036aa0:	sar    ch,1
   140036aa2:	add    al,BYTE PTR [rax]
   140036aa4:	ss leave 
   140036aa6:	add    BYTE PTR [rax],al
   140036aa8:	and    edx,ebp
   140036aaa:	add    BYTE PTR [rax],al
   140036aac:	mov    al,0xfd
   140036aae:	add    al,BYTE PTR [rax]
   140036ab0:	and    edx,ebp
   140036ab2:	add    BYTE PTR [rax],al
   140036ab4:	sbb    eax,0x900000d6
   140036ab9:	std    
   140036aba:	add    al,BYTE PTR [rax]
   140036abc:	sbb    eax,0xfc0000d6
   140036ac1:	(bad)  
   140036ac2:	add    BYTE PTR [rax],al
   140036ac4:	cmp    ch,0x2
   140036ac7:	add    ah,bh
   140036ac9:	(bad)  
   140036aca:	add    BYTE PTR [rax],al
   140036acc:	sbb    al,0xd7
   140036ace:	add    BYTE PTR [rax],al
   140036ad0:	nop
   140036ad1:	std    
   140036ad2:	add    al,BYTE PTR [rax]
   140036ad4:	and    bh,dl
   140036ad6:	add    BYTE PTR [rax],al
   140036ad8:	jns    0x140036ab1
   140036ada:	add    BYTE PTR [rax],al
   140036adc:	or     QWORD PTR [rbx],r8
   140036adf:	add    BYTE PTR [rax-0x2dffff29],al
   140036ae5:	xlat   BYTE PTR ds:[rbx]
   140036ae6:	add    BYTE PTR [rax],al
   140036ae8:	add    al,0xfe
   140036aea:	add    al,BYTE PTR [rax]
   140036aec:	rcl    bh,cl
   140036aee:	add    BYTE PTR [rax],al
   140036af0:	or     eax,ebx
   140036af2:	add    BYTE PTR [rax],al
   140036af4:	lock std 
   140036af6:	add    al,BYTE PTR [rax]
   140036af8:	or     eax,ebx
   140036afa:	add    BYTE PTR [rax],al
   140036afc:	and    al,bl
   140036afe:	add    BYTE PTR [rax],al
   140036b00:	loopne 0x140036aff
   140036b02:	add    al,BYTE PTR [rax]
   140036b04:	and    al,bl
   140036b06:	add    BYTE PTR [rax],al
   140036b08:	fadd   DWORD PTR ds:[rax]
   140036b0b:	add    BYTE PTR [rsi+rdi*8],dh
   140036b0e:	add    al,BYTE PTR [rax]
   140036b10:	fadd   DWORD PTR ds:[rax]
   140036b13:	add    BYTE PTR [rcx+rbx*8],al
   140036b16:	add    BYTE PTR [rax],al
   140036b18:	and    dh,bh
   140036b1a:	add    al,BYTE PTR [rax]
   140036b1c:	add    al,0xd9
   140036b1e:	add    BYTE PTR [rax],al
   140036b20:	adc    bl,cl
   140036b22:	add    BYTE PTR [rax],al
   140036b24:	adc    dh,bh
   140036b26:	add    al,BYTE PTR [rax]
   140036b28:	and    cl,bl
   140036b2a:	add    BYTE PTR [rax],al
   140036b2c:	outs   dx,BYTE PTR ds:[rsi]
   140036b2d:	fld    DWORD PTR [rax]
   140036b2f:	add    BYTE PTR [rax-0x2],dh
   140036b32:	add    al,BYTE PTR [rax]
   140036b34:	outs   dx,BYTE PTR ds:[rsi]
   140036b35:	fld    DWORD PTR [rax]
   140036b37:	add    BYTE PTR [rdx+rbx*8-0x1b00000],cl
   140036b3e:	add    al,BYTE PTR [rax]
   140036b40:	mov    edx,ds
   140036b42:	add    BYTE PTR [rax],al
   140036b44:	(bad)  
   140036b45:	fiadd  DWORD PTR [rax]
   140036b47:	add    BYTE PTR [rax-0x2],al
   140036b4a:	add    al,BYTE PTR [rax]
   140036b4c:	add    bl,bl
   140036b4e:	add    BYTE PTR [rax],al
   140036b50:	int3   
   140036b51:	fadd   QWORD PTR [rax]
   140036b53:	add    BYTE PTR [rax-0x33fffd02],dh
   140036b59:	fadd   QWORD PTR [rax]
   140036b5b:	add    BYTE PTR [rdx-0x6bffff16],bh
   140036b61:	inc    BYTE PTR [rdx]
   140036b63:	add    BYTE PTR [rdx+0xa0000ea],bh
   140036b69:	in     al,dx
   140036b6a:	add    BYTE PTR [rax],al
   140036b6c:	cmp    dh,0x2
   140036b6f:	add    BYTE PTR [rax],dl
   140036b71:	in     al,dx
   140036b72:	add    BYTE PTR [rax],al
   140036b74:	or     ch,ch
   140036b76:	add    BYTE PTR [rax],al
   140036b78:	fdivr  st,st(6)
   140036b7a:	add    al,BYTE PTR [rax]
   140036b7c:	or     ch,ch
   140036b7e:	add    BYTE PTR [rax],al
   140036b80:	mov    dl,0xef
   140036b82:	add    BYTE PTR [rax],al
   140036b84:	(bad)  
   140036b85:	inc    BYTE PTR [rdx]
   140036b87:	add    al,al
   140036b89:	out    dx,eax
   140036b8a:	add    BYTE PTR [rax],al
   140036b8c:	or     esi,ecx
   140036b8e:	add    BYTE PTR [rax],al
   140036b90:	in     al,dx
   140036b91:	inc    BYTE PTR [rdx]
   140036b93:	add    BYTE PTR [rax],dl
   140036b95:	icebp  
   140036b96:	add    BYTE PTR [rax],al
   140036b98:	or     bh,dh
   140036b9a:	add    BYTE PTR [rax],al
   140036b9c:	cld    
   140036b9d:	inc    BYTE PTR [rdx]
   140036b9f:	add    BYTE PTR [rax],dl
   140036ba1:	test   DWORD PTR [rax],0x1029400
   140036ba7:	add    BYTE PTR [rax],bl
   140036ba9:	inc    DWORD PTR [rdx]
   140036bab:	add    BYTE PTR [rax-0x52fffefe],ah
   140036bb1:	add    eax,DWORD PTR [rcx]
   140036bb3:	add    BYTE PTR [rax],dh
   140036bb5:	inc    DWORD PTR [rdx]
   140036bb7:	add    BYTE PTR [rax-0x1fffefd],dh
   140036bbd:	add    eax,DWORD PTR [rcx]
   140036bbf:	add    BYTE PTR [rdi+rdi*8+0x2],ch
   140036bc3:	add    dh,bh
   140036bc5:	add    eax,DWORD PTR [rcx]
   140036bc7:	add    BYTE PTR [rip+0x48000107],al        # 0x188036cd4
   140036bcd:	inc    DWORD PTR [rdx]
   140036bcf:	add    BYTE PTR [rip+0x14000107],al        # 0x154036cdc
   140036bd5:	(bad)  
   140036bd6:	add    DWORD PTR [rax],eax
   140036bd8:	cmp    bh,bh
   140036bda:	add    al,BYTE PTR [rax]
   140036bdc:	and    BYTE PTR [rdi],al
   140036bde:	add    DWORD PTR [rax],eax
   140036be0:	pop    rsi
   140036be1:	(bad)  
   140036be2:	add    DWORD PTR [rax],eax
   140036be4:	mov    al,0xff
   140036be6:	add    al,BYTE PTR [rax]
   140036be8:	pop    rsi
   140036be9:	(bad)  
   140036bea:	add    DWORD PTR [rax],eax
   140036bec:	jle    0x140036bfa
   140036bee:	add    DWORD PTR [rax],eax
   140036bf0:	mov    edi,?
   140036bf2:	add    al,BYTE PTR [rax]
   140036bf4:	jle    0x140036c02
   140036bf6:	add    DWORD PTR [rax],eax
   140036bf8:	cwde   
   140036bf9:	or     al,0x1
   140036bfb:	add    BYTE PTR [rdi+rdi*8+0x2],bh
   140036bff:	add    BYTE PTR [rax+0x2000010c],ah
   140036c05:	or     eax,0xffc00001
   140036c0a:	add    al,BYTE PTR [rax]
   140036c0c:	and    BYTE PTR [rip+0x16a60001],cl        # 0x156a96c13
   140036c12:	add    DWORD PTR [rax],eax
   140036c14:	enter  0x2ff,0x0
   140036c18:	mov    al,0x16
   140036c1a:	add    DWORD PTR [rax],eax
   140036c1c:	mov    ecx,0xe4000117
   140036c21:	inc    DWORD PTR [rdx]
   140036c23:	add    al,al
   140036c25:	(bad)  
   140036c26:	add    DWORD PTR [rax],eax
   140036c28:	lahf   
   140036c29:	sbb    BYTE PTR [rcx],al
   140036c2b:	add    al,dh
   140036c2d:	inc    DWORD PTR [rdx]
   140036c2f:	add    BYTE PTR [rax+0x6e000118],ah
   140036c35:	sbb    DWORD PTR [rcx],eax
   140036c37:	add    BYTE PTR [rdx+rcx*1],dh
   140036c3a:	add    eax,DWORD PTR [rax]
   140036c3c:	jo     0x140036c57
   140036c3e:	add    DWORD PTR [rax],eax
   140036c40:	rex.WX sbb al,BYTE PTR [rcx]
   140036c43:	add    BYTE PTR [rax+rax*1],al
   140036c46:	add    eax,DWORD PTR [rax]
   140036c48:	push   rax
   140036c49:	sbb    al,BYTE PTR [rcx]
   140036c4b:	add    BYTE PTR [rdx-0x7bfffee6],bl
   140036c51:	(bad)  
   140036c52:	add    eax,DWORD PTR [rax]
   140036c54:	movabs al,ds:0x1800011bd100011a
   140036c5d:	add    BYTE PTR [rbx],al
   140036c5f:	add    al,ah
   140036c61:	sbb    eax,DWORD PTR [rcx]
   140036c63:	add    BYTE PTR [rcx],bl
   140036c65:	sbb    eax,0x280001
   140036c6a:	add    eax,DWORD PTR [rax]
   140036c6c:	and    BYTE PTR [rip+0x1dea0001],bl        # 0x15ded6c73
   140036c72:	add    DWORD PTR [rax],eax
   140036c74:	add    BYTE PTR [rbx],al
   140036c77:	add    al,dh
   140036c79:	sbb    eax,0x1e7c0001
   140036c7e:	add    DWORD PTR [rax],eax
   140036c80:	push   rsp
   140036c81:	add    BYTE PTR [rbx],al
   140036c83:	add    BYTE PTR [rax-0x5cfffee2],al
   140036c89:	(bad)  
   140036c8a:	add    DWORD PTR [rax],eax
   140036c8c:	nop
   140036c8d:	repz add al,BYTE PTR [rax]
   140036c90:	mov    al,0x1e
   140036c92:	add    DWORD PTR [rax],eax
   140036c94:	scas   al,BYTE PTR es:[rdi]
   140036c95:	(bad)  
   140036c96:	add    DWORD PTR [rax],eax
   140036c98:	ins    BYTE PTR es:[rdi],dx
   140036c99:	add    BYTE PTR [rbx],al
   140036c9b:	add    BYTE PTR [rax-0x32fffee1],dh
   140036ca1:	(bad)  
   140036ca2:	add    DWORD PTR [rax],eax
   140036ca4:	rex.WR test BYTE PTR [rdx],0x0
   140036ca8:	int    0x1f
   140036caa:	add    DWORD PTR [rax],eax
   140036cac:	sub    ah,BYTE PTR [rax]
   140036cae:	add    DWORD PTR [rax],eax
   140036cb0:	mov    WORD PTR [rax],es
   140036cb2:	add    eax,DWORD PTR [rax]
   140036cb4:	sub    ah,BYTE PTR [rax]
   140036cb6:	add    DWORD PTR [rax],eax
   140036cb8:	(bad)  
   140036cb9:	and    BYTE PTR [rcx],al
   140036cbb:	add    BYTE PTR [rax+rax*1+0x3],bh
   140036cbf:	add    BYTE PTR [rax],dh
   140036cc1:	and    BYTE PTR [rcx],al
   140036cc3:	add    BYTE PTR [rcx+0x20],ch
   140036cc6:	add    DWORD PTR [rax],eax
   140036cc8:	(bad)  
   140036cc9:	repnz add al,BYTE PTR [rax]
   140036ccc:	imul   esp,DWORD PTR [rax],0x20c80001
   140036cd2:	add    DWORD PTR [rax],eax
   140036cd4:	mov    eax,0xc8000300
   140036cd9:	and    BYTE PTR [rcx],al
   140036cdb:	add    dh,dl
   140036cdd:	and    BYTE PTR [rcx],al
   140036cdf:	add    BYTE PTR [rax-0x1ffffd00],ch
   140036ce5:	and    BYTE PTR [rcx],al
   140036ce7:	add    BYTE PTR [rdx],bl
   140036ce9:	and    al,BYTE PTR [rcx]
   140036ceb:	add    BYTE PTR [rbx+rsi*8+0x2],ch
   140036cef:	add    BYTE PTR [rax],ah
   140036cf1:	and    al,BYTE PTR [rcx]
   140036cf3:	add    cl,ah
   140036cf5:	and    al,BYTE PTR [rcx]
   140036cf7:	add    ah,dh
   140036cf9:	sti    
   140036cfa:	add    al,BYTE PTR [rax]
   140036cfc:	lock and al,BYTE PTR [rcx]
   140036cff:	add    BYTE PTR [rsi+0x23],bl
   140036d02:	add    DWORD PTR [rax],eax
   140036d04:	xor    al,0xa
   140036d06:	add    eax,DWORD PTR [rax]
   140036d08:	(bad)  
   140036d09:	and    eax,DWORD PTR [rcx]
   140036d0b:	add    BYTE PTR [rdx+0x23],bh
   140036d0e:	add    DWORD PTR [rax],eax
   140036d10:	cmp    al,0xf3
   140036d12:	add    al,BYTE PTR [rax]
   140036d14:	jp     0x140036d39
   140036d16:	add    DWORD PTR [rax],eax
   140036d18:	adc    al,0x24
   140036d1a:	add    DWORD PTR [rax],eax
   140036d1c:	hlt    
   140036d1d:	add    BYTE PTR [rbx],al
   140036d1f:	add    BYTE PTR [rsp],dl
   140036d22:	add    DWORD PTR [rax],eax
   140036d24:	and    ah,BYTE PTR [rcx+rax*1]
   140036d27:	add    al,ah
   140036d29:	add    BYTE PTR [rbx],al
   140036d2b:	add    BYTE PTR [rdx],ah
   140036d2d:	and    al,0x1
   140036d2f:	add    BYTE PTR [rbx],ch
   140036d31:	and    al,0x1
   140036d33:	add    al,dl
   140036d35:	add    BYTE PTR [rbx],al
   140036d37:	add    BYTE PTR [rax],dh
   140036d39:	and    al,0x1
   140036d3b:	add    BYTE PTR [rdi-0x7bfffedc],bl
   140036d41:	repz add al,BYTE PTR [rax]
   140036d44:	movabs al,ds:0x100001263b000124
   140036d4d:	add    DWORD PTR [rbx],eax
   140036d4f:	add    BYTE PTR [rax+0x26],al
   140036d52:	add    DWORD PTR [rax],eax
   140036d54:	fisub  DWORD PTR [rsi]
   140036d56:	add    DWORD PTR [rax],eax
   140036d58:	nop
   140036d59:	repz add al,BYTE PTR [rax]
   140036d5c:	loopne 0x140036d84
   140036d5e:	add    DWORD PTR [rax],eax
   140036d60:	rex.WRXB sub rax,0x12c0001
   140036d66:	add    eax,DWORD PTR [rax]
   140036d68:	push   rax
   140036d69:	sub    eax,0x2e020001
   140036d6e:	add    DWORD PTR [rax],eax
   140036d70:	nop
   140036d71:	repz add al,BYTE PTR [rax]
   140036d74:	adc    BYTE PTR [rsi],ch
   140036d76:	add    DWORD PTR [rax],eax
   140036d78:	push   rbx
   140036d79:	add    DWORD PTR cs:[rax],eax
   140036d7c:	or     QWORD PTR [rbx],r8
   140036d7f:	add    BYTE PTR [rax+0x2e],ah
   140036d82:	add    DWORD PTR [rax],eax
   140036d84:	pop    rdi
   140036d85:	xor    BYTE PTR [rcx],al
   140036d87:	add    BYTE PTR [rcx+rax*1+0x3],al
   140036d8b:	add    BYTE PTR [rax+0x30],ah
   140036d8e:	add    DWORD PTR [rax],eax
   140036d90:	rex.X xor DWORD PTR [rcx],eax
   140036d93:	add    BYTE PTR [rsi+rsi*8+0x2],dl
   140036d97:	add    BYTE PTR [rax+0x31],dl
   140036d9a:	add    DWORD PTR [rax],eax
   140036d9c:	pop    rcx
   140036d9d:	xor    DWORD PTR [rcx],eax
   140036d9f:	add    BYTE PTR [rax+0x59000301],ah
   140036da5:	xor    DWORD PTR [rcx],eax
   140036da7:	add    BYTE PTR [rdx-0x73fffecf],bl
   140036dad:	add    DWORD PTR [rbx],eax
   140036daf:	add    BYTE PTR [rdx-0x7fffecf],bl
   140036db5:	xor    DWORD PTR [rcx],eax
   140036db7:	add    BYTE PTR [rax+0x1],bh
   140036dba:	add    eax,DWORD PTR [rax]
   140036dbc:	clc    
   140036dbd:	xor    DWORD PTR [rcx],eax
   140036dbf:	add    ch,al
   140036dc1:	xor    al,BYTE PTR [rcx]
   140036dc3:	add    BYTE PTR [rax+0x1],ch
   140036dc6:	add    eax,DWORD PTR [rax]
   140036dc8:	(bad)
   140036dcb:	add    BYTE PTR [rax],bl
   140036dcd:	xor    eax,DWORD PTR [rcx]
   140036dcf:	add    BYTE PTR [rax+0x1],bl
   140036dd2:	add    eax,DWORD PTR [rax]
   140036dd4:	and    BYTE PTR [rbx],dh
   140036dd6:	add    DWORD PTR [rax],eax
   140036dd8:	fidiv  WORD PTR [rbx]
   140036dda:	add    DWORD PTR [rax],eax
   140036ddc:	(bad)  
   140036ddd:	add    DWORD PTR [rbx],eax
   140036ddf:	add    dh,bl
   140036de1:	xor    eax,DWORD PTR [rcx]
   140036de3:	add    BYTE PTR [rax],ah
   140036de5:	xor    al,0x1
   140036de7:	add    al,al
   140036de9:	add    DWORD PTR [rbx],eax
   140036deb:	add    BYTE PTR [rax],ah
   140036ded:	xor    al,0x1
   140036def:	add    BYTE PTR [rsi],bh
   140036df1:	xor    al,0x1
   140036df3:	add    BYTE PTR [rax+0x40000301],dh
   140036df9:	xor    al,0x1
   140036dfb:	add    BYTE PTR [rdi+0x34],cl
   140036dfe:	add    DWORD PTR [rax],eax
   140036e00:	rex.WR add r8b,BYTE PTR [rbx]
   140036e03:	add    BYTE PTR [rdi+0x34],cl
   140036e06:	add    DWORD PTR [rax],eax
   140036e08:	mov    WORD PTR [rcx+rax*1],?
   140036e0b:	add    BYTE PTR [rax],dh
   140036e0d:	add    al,BYTE PTR [rbx]
   140036e0f:	add    BYTE PTR [rsp+rsi*1+0x35920001],cl
   140036e16:	add    DWORD PTR [rax],eax
   140036e18:	sbb    al,0x2
   140036e1a:	add    eax,DWORD PTR [rax]
   140036e1c:	xchg   edx,eax
   140036e1d:	xor    eax,0x35be0001
   140036e22:	add    DWORD PTR [rax],eax
   140036e24:	or     al,0x2
   140036e26:	add    eax,DWORD PTR [rax]
   140036e28:	mov    esi,0x4b000135
   140036e2d:	add    DWORD PTR ss:[rax],eax
   140036e30:	hlt    
   140036e31:	add    DWORD PTR [rbx],eax
   140036e33:	add    BYTE PTR [rbx+0x36],cl
   140036e36:	add    DWORD PTR [rax],eax
   140036e38:	test   al,0x36
   140036e3a:	add    DWORD PTR [rax],eax
   140036e3c:	in     al,0x1
   140036e3e:	add    eax,DWORD PTR [rax]
   140036e40:	mov    al,0x36
   140036e42:	add    DWORD PTR [rax],eax
   140036e44:	mov    dh,BYTE PTR [rdi]
   140036e46:	add    DWORD PTR [rax],eax
   140036e48:	or     QWORD PTR [rbx],r8
   140036e4b:	add    BYTE PTR [rax-0x52fffec9],dl
   140036e51:	(bad)  
   140036e52:	add    DWORD PTR [rax],eax
   140036e54:	add    BYTE PTR [rdx],0x3
   140036e57:	add    BYTE PTR [rbp-0x31fffec9],ch
   140036e5d:	(bad)  
   140036e5e:	add    DWORD PTR [rax],eax
   140036e60:	ins    BYTE PTR es:[rdi],dx
   140036e61:	add    al,BYTE PTR [rbx]
   140036e63:	add    dh,cl
   140036e65:	(bad)  
   140036e66:	add    DWORD PTR [rax],eax
   140036e68:	mov    cl,0x38
   140036e6a:	add    DWORD PTR [rax],eax
   140036e6c:	pop    rsp
   140036e6d:	add    al,BYTE PTR [rbx]
   140036e6f:	add    al,al
   140036e71:	cmp    BYTE PTR [rcx],al
   140036e73:	add    BYTE PTR [rcx+0x39],al
   140036e76:	add    DWORD PTR [rax],eax
   140036e78:	or     QWORD PTR [rbx],r8
   140036e7b:	add    BYTE PTR [rax+0x39],dl
   140036e7e:	add    DWORD PTR [rax],eax
   140036e80:	jno    0x140036ebb
   140036e82:	add    DWORD PTR [rax],eax
   140036e84:	fadd   DWORD PTR [rdx]
   140036e86:	add    eax,DWORD PTR [rax]
   140036e88:	jno    0x140036ec3
   140036e8a:	add    DWORD PTR [rax],eax
   140036e8c:	fadd   DWORD PTR [rdi+0x1]
   140036e8f:	add    BYTE PTR [rdx+rax*1+0x47d80003],bh
   140036e96:	add    DWORD PTR [rax],eax
   140036e98:	rex
   140036e99:	add    QWORD PTR [rax],rax
   140036e9c:	lods   al,BYTE PTR ds:[rsi]
   140036e9d:	add    al,BYTE PTR [rbx]
   140036e9f:	add    BYTE PTR [rax+0x48],al
   140036ea2:	add    DWORD PTR [rax],eax
   140036ea4:	mov    esi,0x90000148
   140036ea9:	add    al,BYTE PTR [rbx]
   140036eab:	add    al,al
   140036ead:	add    QWORD PTR [rax],rax
   140036eb0:	addr32 jle 0x140036eb4
   140036eb3:	add    ah,ch
   140036eb5:	add    al,BYTE PTR [rbx]
   140036eb7:	add    BYTE PTR [rax+0x7e],dh
   140036eba:	add    DWORD PTR [rax],eax
   140036ebc:	movabs ds:0xb00003094c00017f,eax
   140036ec5:	jg     0x140036ec8
   140036ec7:	add    BYTE PTR [rax],dh
   140036ec9:	mov    ecx,0x3040001
   140036ece:	add    eax,DWORD PTR [rax]
   140036ed0:	xor    BYTE PTR [rcx-0x467bffff],bh
   140036ed6:	add    DWORD PTR [rax],eax
   140036ed8:	and    BYTE PTR [rbx],al
   140036eda:	add    eax,DWORD PTR [rax]
   140036edc:	nop
   140036edd:	mov    ecx,0xbb510001
   140036ee2:	add    DWORD PTR [rax],eax
   140036ee4:	sub    al,0x3
   140036ee6:	add    eax,DWORD PTR [rax]
   140036ee8:	(bad)  
   140036ee9:	mov    ebx,0xbbed0001
   140036eee:	add    DWORD PTR [rax],eax
   140036ef0:	xor    al,0xa
   140036ef2:	add    eax,DWORD PTR [rax]
   140036ef4:	lock mov ebx,0xbce20001
   140036efa:	add    DWORD PTR [rax],eax
   140036efc:	mov    WORD PTR [rax],cs
   140036efe:	add    eax,DWORD PTR [rax]
   140036f00:	lock mov esp,0xbda90001
   140036f06:	add    DWORD PTR [rax],eax
   140036f08:	cmp    al,0x3
   140036f0a:	add    eax,DWORD PTR [rax]
   140036f0c:	mov    al,0xbd
   140036f0e:	add    DWORD PTR [rax],eax
   140036f10:	std    
   140036f11:	mov    ebp,0x3800001
   140036f16:	add    eax,DWORD PTR [rax]
   140036f18:	std    
   140036f19:	mov    ebp,0xc0610001
   140036f1e:	add    DWORD PTR [rax],eax
   140036f20:	pop    rsp
   140036f21:	add    eax,DWORD PTR [rbx]
   140036f23:	add    BYTE PTR [rcx-0x40],ah
   140036f26:	add    DWORD PTR [rax],eax
   140036f28:	outs   dx,DWORD PTR ds:[rsi]
   140036f29:	rol    BYTE PTR [rcx],0x0
   140036f2c:	add    r8,QWORD PTR [rbx]
   140036f2f:	add    BYTE PTR [rax-0x40],dh
   140036f32:	add    DWORD PTR [rax],eax
   140036f34:	test   edx,eax
   140036f36:	add    DWORD PTR [rax],eax
   140036f38:	lods   al,BYTE PTR ds:[rsi]
   140036f39:	or     BYTE PTR [rbx],al
   140036f3b:	add    BYTE PTR [rax+0xc0001c2],dl
   140036f41:	ret    
   140036f42:	add    DWORD PTR [rax],eax
   140036f44:	add    al,0x8
   140036f46:	add    eax,DWORD PTR [rax]
   140036f48:	adc    bl,al
   140036f4a:	add    DWORD PTR [rax],eax
   140036f4c:	rol    bl,0x1
   140036f4f:	add    BYTE PTR [rax-0x3ffffcfd],dl
   140036f55:	ret    
   140036f56:	add    DWORD PTR [rax],eax
   140036f58:	out    0xc3,eax
   140036f5a:	add    DWORD PTR [rax],eax
   140036f5c:	int3   
   140036f5d:	add    eax,DWORD PTR [rbx]
   140036f5f:	add    bh,ah
   140036f61:	ret    
   140036f62:	add    DWORD PTR [rax],eax
   140036f64:	cmp    esp,eax
   140036f66:	add    DWORD PTR [rax],eax
   140036f68:	mov    eax,0x39000303
   140036f6d:	(bad)
   140036f71:	(bad)
   140036f75:	add    eax,DWORD PTR [rbx]
   140036f77:	add    BYTE PTR [rax-0x3c],dl
   140036f7a:	add    DWORD PTR [rax],eax
   140036f7c:	add    esp,0x4040001
   140036f82:	add    eax,DWORD PTR [rax]
   140036f84:	add    esp,0xc5740001
   140036f8a:	add    DWORD PTR [rax],eax
   140036f8c:	in     al,dx
   140036f8d:	add    eax,DWORD PTR [rbx]
   140036f8f:	add    BYTE PTR [rbp+rax*8+0x1],dh
   140036f93:	add    BYTE PTR [rbx-0x23fffe3b],ah
   140036f99:	add    eax,DWORD PTR [rbx]
   140036f9b:	add    BYTE PTR [rax+0x740001c5],dh
   140036fa1:	mov    BYTE PTR [rcx],0x0
   140036fa4:	adc    BYTE PTR [rbx+rax*1],al
   140036fa7:	add    BYTE PTR [rax-0x76fffe3a],al
   140036fad:	enter  0x1,0x24
   140036fb1:	add    al,0x3
   140036fb3:	add    BYTE PTR [rax+0x120001c8],dl
   140036fb9:	leave  
   140036fba:	add    DWORD PTR [rax],eax
   140036fbc:	pop    rsp
   140036fbd:	std    
   140036fbe:	add    al,BYTE PTR [rax]
   140036fc0:	and    cl,cl
   140036fc2:	add    DWORD PTR [rax],eax
   140036fc4:	pop    rdx
   140036fc5:	leave  
   140036fc6:	add    DWORD PTR [rax],eax
   140036fc8:	xchg   esp,eax
   140036fc9:	add    al,0x3
   140036fcb:	add    BYTE PTR [rdx-0x37],bl
   140036fce:	add    DWORD PTR [rax],eax
   140036fd0:	test   cl,cl
   140036fd2:	add    DWORD PTR [rax],eax
   140036fd4:	je     0x140036fda
   140036fd6:	add    eax,DWORD PTR [rax]
   140036fd8:	test   cl,cl
   140036fda:	add    DWORD PTR [rax],eax
   140036fdc:	movabs eax,ds:0xa10003045c0001ca
   140036fe5:	retf   0x1
   140036fe8:	adc    eax,0x4c0001ce
   140036fed:	add    al,0x3
   140036fef:	add    BYTE PTR [rip+0x1f0001ce],dl        # 0x15f0371c3
   140036ff5:	(bad)  
   140036ff6:	add    DWORD PTR [rax],eax
   140036ff8:	cmp    al,0x4
   140036ffa:	add    eax,DWORD PTR [rax]
   140036ffc:	and    dh,cl
   140036ffe:	add    DWORD PTR [rax],eax
   140037000:	sub    cl,dh
   140037002:	add    DWORD PTR [rax],eax
   140037004:	(bad)  
   140037005:	add    al,0x3
   140037007:	add    BYTE PTR [rdx],ch
   140037009:	(bad)  
   14003700a:	add    DWORD PTR [rax],eax
   14003700c:	adc    cl,bh
   14003700e:	add    DWORD PTR [rax],eax
   140037010:	mov    al,0x4
   140037012:	add    eax,DWORD PTR [rax]
   140037014:	adc    cl,bh
   140037016:	add    DWORD PTR [rax],eax
   140037018:	push   rbx
   140037019:	rol    BYTE PTR [rcx],1
   14003701b:	add    BYTE PTR [rax+0x60000304],ah
   140037021:	rol    BYTE PTR [rcx],1
   140037023:	add    BYTE PTR [rdi],cl
   140037025:	rol    DWORD PTR [rcx],cl
   140037027:	add    BYTE PTR [rax+0x6],al
   14003702a:	add    eax,DWORD PTR [rax]
   14003702c:	adc    bl,dl
   14003702e:	add    DWORD PTR [rax],eax
   140037030:	cmp    al,0xd3
   140037032:	add    DWORD PTR [rax],eax
   140037034:	add    BYTE PTR [rip+0xffffffffd33c0003],al        # 0x1133f703d
   14003703a:	add    DWORD PTR [rax],eax
   14003703c:	and    eax,0xe00001d4
   140037041:	add    al,0x3
   140037043:	add    BYTE PTR [rip+0x2f0001d4],ah        # 0x16f03721d
   140037049:	(bad)  
   14003704a:	add    DWORD PTR [rax],eax
   14003704c:	rol    BYTE PTR [rbx+rax*1],1
   14003704f:	add    BYTE PTR [rax],dh
   140037051:	(bad)  
   140037052:	add    DWORD PTR [rax],eax
   140037054:	push   rbp
   140037055:	(bad)  
   140037056:	add    DWORD PTR [rax],eax
   140037058:	xor    al,0x5
   14003705a:	add    eax,DWORD PTR [rax]
   14003705c:	push   rbp
   14003705d:	(bad)  
   14003705e:	add    DWORD PTR [rax],eax
   140037060:	lock (bad) 
   140037062:	add    DWORD PTR [rax],eax
   140037064:	sbb    al,0x5
   140037066:	add    eax,DWORD PTR [rax]
   140037068:	lock (bad) 
   14003706a:	add    DWORD PTR [rax],eax
   14003706c:	stc    
   14003706d:	(bad)  
   14003706e:	add    DWORD PTR [rax],eax
   140037070:	or     al,0x5
   140037072:	add    eax,DWORD PTR [rax]
   140037074:	add    ch,dl
   140037076:	add    DWORD PTR [rax],eax
   140037078:	pmullw mm0,QWORD PTR [rcx]
   14003707b:	add    BYTE PTR [rbp+rax*1-0x2af0fffd],bl
   140037082:	add    DWORD PTR [rax],eax
   140037084:	rex.RX loop 0x140037088
   140037087:	add    BYTE PTR [rax+0x46000305],al
   14003708d:	loop   0x140037090
   14003708f:	add    BYTE PTR [rbp+0x600001f7],bh
   140037095:	add    eax,0xf7bd0003
   14003709a:	add    DWORD PTR [rax],eax
   14003709c:	loop   0x140037095
   14003709e:	add    DWORD PTR [rax],eax
   1400370a0:	push   rax
   1400370a1:	add    eax,0xf7e20003
   1400370a6:	add    DWORD PTR [rax],eax
   1400370a8:	(bad)  
   1400370a9:	clc    
   1400370aa:	add    DWORD PTR [rax],eax
   1400370ac:	rex add eax,0xf8300003
   1400370b2:	add    DWORD PTR [rax],eax
   1400370b4:	js     0x1400370ae
   1400370b6:	add    DWORD PTR [rax],eax
   1400370b8:	xor    al,0xa
   1400370ba:	add    eax,DWORD PTR [rax]
   1400370bc:	cmp    al,0x1
   1400370bf:	add    BYTE PTR [rsi],ah
   1400370c1:	cli    
   1400370c2:	add    DWORD PTR [rax],eax
   1400370c4:	test   al,0x5
   1400370c6:	add    eax,DWORD PTR [rax]
   1400370c8:	xor    dl,bh
   1400370ca:	add    DWORD PTR [rax],eax
   1400370cc:	mov    bh,0xfb
   1400370ce:	add    DWORD PTR [rax],eax
   1400370d0:	rol    BYTE PTR [rip+0xfffffffffbc00003],0x1        # 0x13bc370da
   1400370d7:	add    BYTE PTR [rcx],cl
   1400370d9:	cld    
   1400370da:	add    DWORD PTR [rax],eax
   1400370dc:	test   BYTE PTR [rdi],al
   1400370de:	add    eax,DWORD PTR [rax]
   1400370e0:	adc    ah,bh
   1400370e2:	add    DWORD PTR [rax],eax
   1400370e4:	jrcxz  0x1400370e5
   1400370e6:	add    DWORD PTR [rax],eax
   1400370e8:	rol    BYTE PTR [rip+0xfffffffffff00003],1        # 0x13ff370f1
   1400370ee:	add    DWORD PTR [rax],eax
   1400370f0:	(bad)  
   1400370f1:	add    BYTE PTR [rdx],al
   1400370f3:	add    BYTE PTR [rax+0x300002f3],dl
   1400370f9:	add    BYTE PTR [rdx],al
   1400370fb:	add    BYTE PTR [rsi+0x34000200],bl
   140037101:	or     al,BYTE PTR [rbx]
   140037103:	add    BYTE PTR [rax+0x4000200],ah
   140037109:	add    DWORD PTR [rdx],eax
   14003710b:	add    BYTE PTR [rsi+rax*1],dl
   14003710e:	add    eax,DWORD PTR [rax]
   140037110:	add    al,0x1
   140037112:	add    al,BYTE PTR [rax]
   140037114:	push   rdi
   140037115:	add    al,BYTE PTR [rdx]
   140037117:	add    ah,bh
   140037119:	add    eax,0x2570003
   14003711e:	add    al,BYTE PTR [rax]
   140037120:	push   0x2
   140037122:	add    al,BYTE PTR [rax]
   140037124:	in     al,dx
   140037125:	add    eax,0x2700003
   14003712a:	add    al,BYTE PTR [rax]
   14003712c:	xor    ah,BYTE PTR [rdx]
   14003712e:	add    al,BYTE PTR [rax]
   140037130:	and    al,0x6
   140037132:	add    eax,DWORD PTR [rax]
   140037134:	and    al,BYTE PTR [rdx]
   140037137:	add    BYTE PTR [rcx+0x23],cl
   14003713a:	add    al,BYTE PTR [rax]
   14003713c:	in     al,0xff
   14003713e:	add    al,BYTE PTR [rax]
   140037140:	push   rax
   140037141:	and    eax,DWORD PTR [rdx]
   140037143:	add    BYTE PTR [rbx+0x40000224],ah
   140037149:	(bad)  
   14003714a:	add    eax,DWORD PTR [rax]
   14003714c:	mov    al,0x24
   14003714e:	add    al,BYTE PTR [rax]
   140037150:	(bad)  
   140037151:	and    eax,0x6500002
   140037156:	add    eax,DWORD PTR [rax]
   140037158:	and    BYTE PTR [rip+0x25560002],ah        # 0x165597160
   14003715e:	add    al,BYTE PTR [rax]
   140037160:	test   BYTE PTR [rsi],al
   140037162:	add    eax,DWORD PTR [rax]
   140037164:	push   rsi
   140037165:	and    eax,0x26ab0002
   14003716a:	add    al,BYTE PTR [rax]
   14003716c:	jo     0x140037174
   14003716e:	add    eax,DWORD PTR [rax]
   140037170:	stos   DWORD PTR es:[rdi],eax
   140037171:	add    al,BYTE PTR es:[rax]
   140037174:	sub    esp,DWORD PTR [rdi]
   140037176:	add    al,BYTE PTR [rax]
   140037178:	(bad)  
   140037179:	(bad)  
   14003717a:	add    eax,DWORD PTR [rax]
   14003717c:	xor    BYTE PTR [rdi],ah
   14003717e:	add    al,BYTE PTR [rax]
   140037180:	(bad)  
   140037181:	(bad)  
   140037182:	add    al,BYTE PTR [rax]
   140037184:	mov    esp,0x60000306
   140037189:	(bad)  
   14003718a:	add    al,BYTE PTR [rax]
   14003718c:	movabs eax,ds:0xa1000306a0000229
   140037195:	sub    DWORD PTR [rdx],eax
   140037197:	add    BYTE PTR [rbx-0x6ffffdd7],dh
   14003719d:	(bad)  
   14003719e:	add    eax,DWORD PTR [rax]
   1400371a0:	shr    BYTE PTR [rcx],0x2
   1400371a3:	add    ch,dh
   1400371a5:	sub    DWORD PTR [rdx],eax
   1400371a7:	add    BYTE PTR [rax+0x2f3],dl
   1400371ad:	sub    al,BYTE PTR [rdx]
   1400371af:	add    BYTE PTR [rdi+0x2a],cl
   1400371b2:	add    al,BYTE PTR [rax]
   1400371b4:	cld    
   1400371b5:	(bad)  
   1400371b6:	add    eax,DWORD PTR [rax]
   1400371b8:	rex.WRXB sub r8b,BYTE PTR [r10]
   1400371bb:	add    BYTE PTR [rdi+0x2b],bl
   1400371be:	add    al,BYTE PTR [rax]
   1400371c0:	loopne 0x1400371c8
   1400371c2:	add    eax,DWORD PTR [rax]
   1400371c4:	pop    rdi
   1400371c5:	sub    eax,DWORD PTR [rdx]
   1400371c7:	add    BYTE PTR [rsi+0x2b],bh
   1400371ca:	add    al,BYTE PTR [rax]
   1400371cc:	rol    BYTE PTR [rsi],1
   1400371ce:	add    eax,DWORD PTR [rax]
   1400371d0:	sub    BYTE PTR [rbx],0x2
   1400371d3:	add    BYTE PTR [rax+0xc00022e],dl
   1400371d9:	(bad)  
   1400371da:	add    eax,DWORD PTR [rax]
   1400371dc:	nop
   1400371dd:	add    al,BYTE PTR cs:[rax]
   1400371e0:	lea    ebp,[rdi]
   1400371e2:	add    al,BYTE PTR [rax]
   1400371e4:	and    al,0x7
   1400371e6:	add    eax,DWORD PTR [rax]
   1400371e8:	shr    BYTE PTR [rdi],1
   1400371ea:	add    al,BYTE PTR [rax]
   1400371ec:	fld    TBYTE PTR [rdi]
   1400371ee:	add    al,BYTE PTR [rax]
   1400371f0:	(bad)  
   1400371f1:	cmc    
   1400371f2:	add    al,BYTE PTR [rax]
   1400371f4:	fld    TBYTE PTR [rdi]
   1400371f6:	add    al,BYTE PTR [rax]
   1400371f8:	push   rcx
   1400371f9:	xor    BYTE PTR [rdx],al
   1400371fb:	add    BYTE PTR [rax+0x7],dh
   1400371fe:	add    eax,DWORD PTR [rax]
   140037200:	push   rcx
   140037201:	xor    BYTE PTR [rdx],al
   140037203:	add    dh,bh
   140037205:	xor    BYTE PTR [rdx],al
   140037207:	add    BYTE PTR [rax+0x7],bl
   14003720a:	add    eax,DWORD PTR [rax]
   14003720c:	(bad)  
   14003720d:	xor    BYTE PTR [rdx],al
   14003720f:	add    BYTE PTR [rdx],dl
   140037211:	xor    DWORD PTR [rdx],eax
   140037213:	add    BYTE PTR [rax+0x7],cl
   140037216:	add    eax,DWORD PTR [rax]
   140037218:	adc    dh,BYTE PTR [rcx]
   14003721a:	add    al,BYTE PTR [rax]
   14003721c:	rex.RX xor DWORD PTR [rdx],r8d
   14003721f:	add    BYTE PTR [rax],bh
   140037221:	(bad)  
   140037222:	add    eax,DWORD PTR [rax]
   140037224:	push   rax
   140037225:	xor    DWORD PTR [rdx],eax
   140037227:	add    BYTE PTR [rcx-0x7bfffdcf],bl
   14003722d:	(bad)  
   14003722e:	add    eax,DWORD PTR [rax]
   140037230:	movabs al,ds:0xf8000231dd000231
   140037239:	(bad)  
   14003723a:	add    eax,DWORD PTR [rax]
   14003723c:	fnsave [rcx]
   14003723e:	add    al,BYTE PTR [rax]
   140037240:	div    BYTE PTR [rcx]
   140037242:	add    al,BYTE PTR [rax]
   140037244:	loopne 0x14003724d
   140037246:	add    eax,DWORD PTR [rax]
   140037248:	div    BYTE PTR [rcx]
   14003724a:	add    al,BYTE PTR [rax]
   14003724c:	adc    esi,DWORD PTR [rbx]
   14003724e:	add    al,BYTE PTR [rax]
   140037250:	enter  0x307,0x0
   140037254:	adc    esi,DWORD PTR [rbx]
   140037256:	add    al,BYTE PTR [rax]
   140037258:	and    eax,0xb8000233
   14003725d:	(bad)  
   14003725e:	add    eax,DWORD PTR [rax]
   140037260:	and    eax,0x29000233
   140037265:	xor    eax,DWORD PTR [rdx]
   140037267:	add    BYTE PTR [rax+0x29000307],ah
   14003726d:	xor    eax,DWORD PTR [rdx]
   14003726f:	add    cl,bl
   140037271:	xor    eax,DWORD PTR [rdx]
   140037273:	add    BYTE PTR [rax-0x1ffffcf9],dl
   140037279:	xor    eax,DWORD PTR [rdx]
   14003727b:	add    BYTE PTR [rbx+0x4000234],al
   140037281:	or     BYTE PTR [rbx],al
   140037283:	add    BYTE PTR [rax-0x3afffdcc],dl
   140037289:	xor    al,0x2
   14003728b:	add    BYTE PTR [rax+rcx*1+0x3],ch
   14003728f:	add    ch,al
   140037291:	xor    al,0x2
   140037293:	add    ch,cl
   140037295:	xor    al,0x2
   140037297:	add    BYTE PTR [rax+rcx*1+0x3],dl
   14003729b:	add    ch,cl
   14003729d:	xor    al,0x2
   14003729f:	add    ah,ch
   1400372a1:	cmp    al,BYTE PTR [rdx]
   1400372a3:	add    BYTE PTR [rax],bh
   1400372a5:	or     BYTE PTR [rbx],al
   1400372a7:	add    ah,ch
   1400372a9:	cmp    al,BYTE PTR [rdx]
   1400372ab:	add    BYTE PTR [rbx+rdi*1+0x2],ah
   1400372af:	add    BYTE PTR [rax+rcx*1],ah
   1400372b2:	add    eax,DWORD PTR [rax]
   1400372b4:	cmp    eax,DWORD PTR fs:[rdx]
   1400372b7:	add    BYTE PTR [rax+0x3b],dh
   1400372ba:	add    al,BYTE PTR [rax]
   1400372bc:	adc    al,0x8
   1400372be:	add    eax,DWORD PTR [rax]
   1400372c0:	jo     0x1400372fd
   1400372c2:	add    al,BYTE PTR [rax]
   1400372c4:	mov    edx,0x7c00023d
   1400372c9:	or     BYTE PTR [rbx],al
   1400372cb:	add    BYTE PTR [rax+0x3e],ah
   1400372ce:	add    al,BYTE PTR [rax]
   1400372d0:	loope  0x140037311
   1400372d2:	add    al,BYTE PTR [rax]
   1400372d4:	or     QWORD PTR [rbx],r8
   1400372d7:	add    al,dh
   1400372d9:	(bad)  
   1400372da:	add    al,BYTE PTR [rax]
   1400372dc:	hlt    
   1400372dd:	add    al,BYTE PTR [rax]
   1400372e0:	mov    WORD PTR [rax],cs
   1400372e2:	add    eax,DWORD PTR [rax]
   1400372e4:	add    BYTE PTR [rcx+0x2],al
   1400372e7:	add    BYTE PTR [rdi-0x63fffdbf],bl
   1400372ed:	or     BYTE PTR [rbx],al
   1400372ef:	add    BYTE PTR [rax-0x74fffdbf],ah
   1400372f5:	rex.X add al,BYTE PTR [rax]
   1400372f8:	lods   al,BYTE PTR ds:[rsi]
   1400372f9:	or     BYTE PTR [rbx],al
   1400372fb:	add    BYTE PTR [rax-0x5fffdbe],dl
   140037301:	rex.X add al,BYTE PTR [rax]
   140037304:	nop
   140037305:	repz add al,BYTE PTR [rax]
   140037308:	add    BYTE PTR [rbx+0x2],al
   14003730b:	add    BYTE PTR [rdx],ah
   14003730d:	rex.XB add al,BYTE PTR [r8]
   140037310:	nop
   140037311:	repz add al,BYTE PTR [rax]
   140037314:	xor    BYTE PTR [rbx+0x2],al
   140037317:	add    BYTE PTR [rdi+0x43],bl
   14003731a:	add    al,BYTE PTR [rax]
   14003731c:	or     QWORD PTR [rbx],r8
   14003731f:	add    BYTE PTR [rax+0x43],ah
   140037322:	add    al,BYTE PTR [rax]
   140037324:	add    al,BYTE PTR [rdx+rax*1+0x0]
   140037328:	or     QWORD PTR [rbx],r8
   14003732b:	add    BYTE PTR [rax],dl
   14003732d:	add    r8b,BYTE PTR [rax]
   140037330:	jmp    0x140037376
   140037332:	add    al,BYTE PTR [rax]
   140037334:	or     al,0x9
   140037336:	add    eax,DWORD PTR [rax]
   140037338:	jmp    0x14003737e
   14003733a:	add    al,BYTE PTR [rax]
   14003733c:	ror    DWORD PTR [rdx+rax*1+0x0],cl
   140037340:	clc    
   140037341:	or     BYTE PTR [rbx],al
   140037343:	add    bl,dl
   140037345:	rex.WR add r8b,BYTE PTR [rax]
   140037348:	xchg   ebp,eax
   140037349:	push   rbp
   14003734a:	add    al,BYTE PTR [rax]
   14003734c:	in     al,0x8
   14003734e:	add    eax,DWORD PTR [rax]
   140037350:	xchg   ebp,eax
   140037351:	push   rbp
   140037352:	add    al,BYTE PTR [rax]
   140037354:	popf   
   140037355:	push   rbp
   140037356:	add    al,BYTE PTR [rax]
   140037358:	(bad)  
   140037359:	or     BYTE PTR [rbx],al
   14003735b:	add    BYTE PTR [rbp-0x1ffffdab],bl
   140037361:	push   rbp
   140037362:	add    al,BYTE PTR [rax]
   140037364:	(bad)  
   140037365:	or     BYTE PTR [rbx],al
   140037367:	add    al,ah
   140037369:	push   rbp
   14003736a:	add    al,BYTE PTR [rax]
   14003736c:	clc    
   14003736d:	push   rsi
   14003736e:	add    al,BYTE PTR [rax]
   140037370:	cmp    BYTE PTR [rcx],cl
   140037372:	add    eax,DWORD PTR [rax]
   140037374:	clc    
   140037375:	push   rsi
   140037376:	add    al,BYTE PTR [rax]
   140037378:	add    bl,BYTE PTR [rdx+rax*1+0x0]
   14003737c:	sbb    al,0x9
   14003737e:	add    eax,DWORD PTR [rax]
   140037380:	adc    BYTE PTR [rdx+rax*1+0x0],bl
   140037384:	fs pop rsp
   140037386:	add    al,BYTE PTR [rax]
   140037388:	or     QWORD PTR [rbx],r8
   14003738b:	add    BYTE PTR [rax+0x5c],dh
   14003738e:	add    al,BYTE PTR [rax]
   140037390:	loopne 0x1400373ee
   140037392:	add    al,BYTE PTR [rax]
   140037394:	or     QWORD PTR [rbx],r8
   140037397:	add    al,ah
   140037399:	pop    rsp
   14003739a:	add    al,BYTE PTR [rax]
   14003739c:	rex.WRX pop rbp
   14003739e:	add    al,BYTE PTR [rax]
   1400373a0:	xor    al,0xa
   1400373a2:	add    eax,DWORD PTR [rax]
   1400373a4:	push   rax
   1400373a5:	pop    rbp
   1400373a6:	add    al,BYTE PTR [rax]
   1400373a8:	lea    ebp,[rdx+rax*1+0x0]
   1400373ac:	pop    rax
   1400373ad:	or     DWORD PTR [rbx],eax
   1400373af:	add    BYTE PTR [rax-0x49fffd94],dl
   1400373b5:	ins    BYTE PTR es:[rdi],dx
   1400373b6:	add    al,BYTE PTR [rax]
   1400373b8:	xchg   esp,eax
   1400373b9:	or     DWORD PTR [rbx],eax
   1400373bb:	add    BYTE PTR [rsi+0x1f00026c],dh
   1400373c1:	ins    DWORD PTR es:[rdi],dx
   1400373c2:	add    al,BYTE PTR [rax]
   1400373c4:	or     BYTE PTR [rcx],0x3
   1400373c7:	add    BYTE PTR [rdi],bl
   1400373c9:	ins    DWORD PTR es:[rdi],dx
   1400373ca:	add    al,BYTE PTR [rax]
   1400373cc:	add    BYTE PTR [rsi+0x2],ch
   1400373cf:	add    BYTE PTR [rax+0x9],dh
   1400373d2:	add    eax,DWORD PTR [rax]
   1400373d4:	add    BYTE PTR [rsi+0x2],ch
   1400373d7:	add    BYTE PTR [rdx+0x6e],cl
   1400373da:	add    al,BYTE PTR [rax]
   1400373dc:	or     QWORD PTR [rbx],r8
   1400373df:	add    BYTE PTR [rax+0x6e],dl
   1400373e2:	add    al,BYTE PTR [rax]
   1400373e4:	fidiv  DWORD PTR [rcx+0x2]
   1400373e7:	add    al,cl
   1400373e9:	or     DWORD PTR [rbx],eax
   1400373eb:	add    dl,bl
   1400373ed:	jno    0x1400373f1
   1400373ef:	add    BYTE PTR [rdi-0x4bfffd8e],dh
   1400373f5:	or     DWORD PTR [rbx],eax
   1400373f7:	add    BYTE PTR [rdi-0x49fffd8e],dh
   1400373fd:	jbe    0x140037401
   1400373ff:	add    BYTE PTR [rcx+rcx*1+0x76c00003],ah
   140037406:	add    al,BYTE PTR [rax]
   140037408:	and    dh,BYTE PTR [rdi+0x2]
   14003740b:	add    BYTE PTR [rdx+rcx*1],ah
   14003740e:	add    eax,DWORD PTR [rax]
   140037410:	and    dh,BYTE PTR [rdi+0x2]
   140037413:	add    BYTE PTR [rcx+0xc000277],bh
   140037419:	or     al,BYTE PTR [rbx]
   14003741b:	add    BYTE PTR [rcx+0xd000277],bh
   140037421:	js     0x140037425
   140037423:	add    al,bh
   140037425:	or     DWORD PTR [rbx],eax
   140037427:	add    BYTE PTR [rip+0xffffffff84000278],cl        # 0xc40376a5
   14003742d:	js     0x140037431
   14003742f:	add    al,ch
   140037431:	or     DWORD PTR [rbx],eax
   140037433:	add    BYTE PTR [rax+rdi*2+0x78930002],al
   14003743a:	add    al,BYTE PTR [rax]
   14003743c:	fmul   DWORD PTR [rcx]
   14003743e:	add    eax,DWORD PTR [rax]
   140037440:	movabs al,ds:0x90000278e6000278
   140037449:	repz add al,BYTE PTR [rax]
   14003744c:	lock js 0x140037451
   14003744f:	add    BYTE PTR [rdx+0x79],ah
   140037452:	add    al,BYTE PTR [rax]
   140037454:	test   BYTE PTR [rdi],al
   140037456:	add    eax,DWORD PTR [rax]
   140037458:	jo     0x1400374d3
   14003745a:	add    al,BYTE PTR [rax]
   14003745c:	fidivr WORD PTR [rcx+0x2]
   14003745f:	add    BYTE PTR [rdx+rcx*1],dh
   140037462:	add    eax,DWORD PTR [rax]
   140037464:	loopne 0x1400374df
   140037466:	add    al,BYTE PTR [rax]
   140037468:	xchg   ebp,eax
   140037469:	jp     0x14003746d
   14003746b:	add    BYTE PTR [rax+rax*1+0x3],dl
   14003746f:	add    BYTE PTR [rax-0x2fffd86],ah
   140037475:	jp     0x140037479
   140037477:	add    BYTE PTR [rdx+rcx*1+0x3],ah
   14003747b:	add    ch,bh
   14003747d:	jp     0x140037481
   14003747f:	add    BYTE PTR [rsi+0x5000027b],bl
   140037485:	or     al,BYTE PTR [rbx]
   140037487:	add    BYTE PTR [rsi-0x55fffd85],bl
   14003748d:	jnp    0x140037491
   14003748f:	add    BYTE PTR [rax+0xa],al
   140037492:	add    eax,DWORD PTR [rax]
   140037494:	mov    al,0x7b
   140037496:	add    al,BYTE PTR [rax]
   140037498:	jae    0x14003742d
   14003749a:	add    al,BYTE PTR [rax]
   14003749c:	jo     0x1400374a8
   14003749e:	add    eax,DWORD PTR [rax]
   1400374a0:	adc    BYTE PTR [rbx-0x6b72fffe],0x2
   1400374a7:	add    BYTE PTR [rax],dh
   1400374a9:	inc    DWORD PTR [rdx]
   1400374ab:	add    BYTE PTR [rax],bh
   1400374ad:	xchg   ebp,eax
   1400374ae:	add    al,BYTE PTR [rax]
   1400374b0:	call   0xcc03774a
   1400374b5:	or     al,BYTE PTR [rbx]
   1400374b7:	add    al,ch
   1400374b9:	xchg   ebp,eax
   1400374ba:	add    al,BYTE PTR [rax]
   1400374bc:	call   QWORD PTR [rbp-0x9b3fffe]
   1400374c2:	add    al,BYTE PTR [rax]
   1400374c4:	adc    al,0x96
   1400374c6:	add    al,BYTE PTR [rax]
   1400374c8:	jge    0x140037460
   1400374ca:	add    al,BYTE PTR [rax]
   1400374cc:	add    al,0x8
   1400374ce:	add    eax,DWORD PTR [rax]
   1400374d0:	adc    BYTE PTR [rsi-0x691afffe],0x2
   1400374d7:	add    BYTE PTR [rdx+rcx*1-0x6917fffd],ch
   1400374de:	add    al,BYTE PTR [rax]
   1400374e0:	push   0xffffffffb4000298
   1400374e5:	or     al,BYTE PTR [rbx]
   1400374e7:	add    BYTE PTR [rax-0x68],ch
   1400374ea:	add    al,BYTE PTR [rax]
   1400374ec:	rex.WRB cqo 
   1400374ee:	add    al,BYTE PTR [rax]
   1400374f0:	rex.WR test BYTE PTR [rdx],0x0
   1400374f4:	push   rax
   1400374f5:	cdq    
   1400374f6:	add    al,BYTE PTR [rax]
   1400374f8:	(bad)  
   1400374f9:	cdq    
   1400374fa:	add    al,BYTE PTR [rax]
   1400374fc:	rex.WR test BYTE PTR [rdx],0x0
   140037500:	jl     0x14003749b
   140037502:	add    al,BYTE PTR [rax]
   140037504:	(bad)  
   140037505:	cdq    
   140037506:	add    al,BYTE PTR [rax]
   140037508:	loopne 0x140037514
   14003750a:	add    eax,DWORD PTR [rax]
   14003750c:	enter  0x299,0x0
   140037510:	es (bad) 
   140037512:	add    al,BYTE PTR [rax]
   140037514:	or     BYTE PTR [rbx],cl
   140037516:	add    eax,DWORD PTR [rax]
   140037518:	sub    BYTE PTR [rdx-0x6596fffe],bl
   14003751e:	add    al,BYTE PTR [rax]
   140037520:	rex.WR test BYTE PTR [rdx],0x0
   140037524:	ins    BYTE PTR es:[rdi],dx
   140037525:	(bad)  
   140037526:	add    al,BYTE PTR [rax]
   140037528:	test   BYTE PTR [rdx-0x9b3fffe],bl
   14003752e:	add    al,BYTE PTR [rax]
   140037530:	mov    WORD PTR [rdx-0x653bfffe],ds
   140037536:	add    al,BYTE PTR [rax]
   140037538:	or     QWORD PTR [rbx],r8
   14003753b:	add    ah,al
   14003753d:	(bad)  
   14003753e:	add    al,BYTE PTR [rax]
   140037540:	cld    
   140037541:	(bad)  
   140037542:	add    al,BYTE PTR [rax]
   140037544:	or     QWORD PTR [rbx],r8
   140037547:	add    BYTE PTR [rax-0x2efffd65],dl
   14003754d:	fwait
   14003754e:	add    al,BYTE PTR [rax]
   140037550:	xor    BYTE PTR [rbx],cl
   140037552:	add    eax,DWORD PTR [rax]
   140037554:	in     al,0x9b
   140037556:	add    al,BYTE PTR [rax]
   140037558:	xchg   edi,eax
   140037559:	pushf  
   14003755a:	add    al,BYTE PTR [rax]
   14003755c:	push   rax
   14003755d:	or     eax,DWORD PTR [rbx]
   14003755f:	add    BYTE PTR [rax-0x13fffd64],dh
   140037565:	pushf  
   140037566:	add    al,BYTE PTR [rax]
   140037568:	loopne 0x14003755a
   14003756a:	add    al,BYTE PTR [rax]
   14003756c:	in     al,dx
   14003756d:	pushf  
   14003756e:	add    al,BYTE PTR [rax]
   140037570:	add    eax,0xd800029d
   140037575:	or     al,BYTE PTR [rbx]
   140037577:	add    BYTE PTR [rip+0x2100029d],al        # 0x16103781a
   14003757d:	popf   
   14003757e:	add    al,BYTE PTR [rax]
   140037580:	fmul   DWORD PTR [rdx]
   140037582:	add    eax,DWORD PTR [rax]
   140037584:	and    DWORD PTR [rbp-0x629ffffe],ebx
   14003758a:	add    al,BYTE PTR [rax]
   14003758c:	fmul   DWORD PTR [rdx]
   14003758e:	add    eax,DWORD PTR [rax]
   140037590:	(bad)  
   140037591:	popf   
   140037592:	add    al,BYTE PTR [rax]
   140037594:	mov    bl,BYTE PTR [rbp+0xad80002]
   14003759a:	add    eax,DWORD PTR [rax]
   14003759c:	nop
   14003759d:	popf   
   14003759e:	add    al,BYTE PTR [rax]
   1400375a0:	mov    cl,0x9d
   1400375a2:	add    al,BYTE PTR [rax]
   1400375a4:	fmul   DWORD PTR [rdx]
   1400375a6:	add    eax,DWORD PTR [rax]
   1400375a8:	and    BYTE PTR [rsi-0x61b1fffe],bl
   1400375ae:	add    al,BYTE PTR [rax]
   1400375b0:	cmp    al,0xf3
   1400375b2:	add    al,BYTE PTR [rax]
   1400375b4:	rex.WRX sahf 
   1400375b6:	add    al,BYTE PTR [rax]
   1400375b8:	imul   ebx,DWORD PTR [rsi-0x46ffffe],0x2
   1400375bf:	add    BYTE PTR [rbx-0x62],ch
   1400375c2:	add    al,BYTE PTR [rax]
   1400375c4:	movabs ds:0xa20002fb7c00029e,al
   1400375cd:	sahf   
   1400375ce:	add    al,BYTE PTR [rax]
   1400375d0:	mov    ch,0x9e
   1400375d2:	add    al,BYTE PTR [rax]
   1400375d4:	ins    BYTE PTR es:[rdi],dx
   1400375d5:	sti    
   1400375d6:	add    al,BYTE PTR [rax]
   1400375d8:	mov    ch,0x9e
   1400375da:	add    al,BYTE PTR [rax]
   1400375dc:	mov    ebx,0x5c00029e
   1400375e1:	sti    
   1400375e2:	add    al,BYTE PTR [rax]

Disassembly of section .rsrc:

0000000140038000 <.rsrc>:
	...
   140038008:	add    al,0x0
   14003800a:	add    BYTE PTR [rax],al
   14003800c:	add    BYTE PTR [rax],al
   14003800e:	add    DWORD PTR [rax],eax
   140038010:	sbb    BYTE PTR [rax],al
   140038012:	add    BYTE PTR [rax],al
   140038014:	sbb    BYTE PTR [rax],al
   140038016:	add    BYTE PTR [rax+0x0],al
   14003801c:	add    BYTE PTR [rax],al
   14003801e:	add    BYTE PTR [rax],al
   140038020:	add    al,0x0
   140038022:	add    BYTE PTR [rax],al
   140038024:	add    BYTE PTR [rax],al
   140038026:	add    DWORD PTR [rax],eax
   140038028:	add    DWORD PTR [rax],eax
   14003802a:	add    BYTE PTR [rax],al
   14003802c:	xor    BYTE PTR [rax],al
   14003802e:	add    BYTE PTR [rax+0x0],al
   140038034:	add    BYTE PTR [rax],al
   140038036:	add    BYTE PTR [rax],al
   140038038:	add    al,0x0
   14003803a:	add    BYTE PTR [rax],al
   14003803c:	add    BYTE PTR [rax],al
   14003803e:	add    DWORD PTR [rax],eax
   140038040:	or     DWORD PTR [rax+rax*1],eax
   140038043:	add    BYTE PTR [rax+0x0],cl
   140038046:	add    BYTE PTR [rax],al
   140038048:	pop    rax
   140038049:	add    BYTE PTR [rbx],0x0
   14003804c:	push   0x3
   14003804e:	add    BYTE PTR [rax],al
   140038050:	in     al,0x4
   140038052:	add    BYTE PTR [rax],al
   140038054:	add    BYTE PTR [rax],al
   140038056:	add    BYTE PTR [rax],al
   140038058:	cmp    al,0x61
   14003805a:	jae    0x1400380cf
   14003805c:	gs ins DWORD PTR es:[rdi],dx
   14003805e:	(bad)  
   14003805f:	ins    BYTE PTR es:[rdi],dx
   140038060:	jns    0x140038082
   140038062:	js     0x1400380d1
   140038064:	ins    BYTE PTR es:[rdi],dx
   140038065:	outs   dx,BYTE PTR ds:[rsi]
   140038066:	jae    0x1400380a5
   140038068:	and    dh,BYTE PTR [rbp+0x72]
   14003806b:	outs   dx,BYTE PTR ds:[rsi]
   14003806c:	cmp    dh,BYTE PTR [rbx+0x63]
   14003806f:	push   0x73616d65
   140038074:	sub    eax,0x7263696d
   140038079:	outs   dx,DWORD PTR ds:[rsi]
   14003807a:	jae    0x1400380eb
   14003807c:	data16 je 0x1400380ac
   14003807f:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140038082:	cmp    ah,BYTE PTR [rcx+0x73]
   140038085:	ins    DWORD PTR es:[rdi],dx
   140038086:	cs jbe 0x1400380ba
   140038089:	and    ah,BYTE PTR [rax]
   14003808b:	ins    DWORD PTR es:[rdi],dx
   14003808c:	(bad)  
   14003808d:	outs   dx,BYTE PTR ds:[rsi]
   14003808e:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   140038095:	jb     0x14003810a
   140038097:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14003809e:	xor    BYTE PTR [rdx],ah
   1400380a0:	ds or  eax,0x3c20200a
   1400380a6:	je     0x14003811a
   1400380a8:	jne    0x14003811d
   1400380aa:	je     0x1400380f5
   1400380ac:	outs   dx,BYTE PTR ds:[rsi]
   1400380ad:	outs   dx,WORD PTR ds:[rsi]
   1400380af:	and    BYTE PTR [rax+0x6d],bh
   1400380b2:	ins    BYTE PTR es:[rdi],dx
   1400380b3:	outs   dx,BYTE PTR ds:[rsi]
   1400380b4:	jae    0x1400380f3
   1400380b6:	and    dh,BYTE PTR [rbp+0x72]
   1400380b9:	outs   dx,BYTE PTR ds:[rsi]
   1400380ba:	cmp    dh,BYTE PTR [rbx+0x63]
   1400380bd:	push   0x73616d65
   1400380c2:	sub    eax,0x7263696d
   1400380c7:	outs   dx,DWORD PTR ds:[rsi]
   1400380c8:	jae    0x140038139
   1400380ca:	data16 je 0x1400380fa
   1400380cd:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400380d0:	cmp    ah,BYTE PTR [rcx+0x73]
   1400380d3:	ins    DWORD PTR es:[rdi],dx
   1400380d4:	cs jbe 0x14003810a
   1400380d7:	and    bh,BYTE PTR [rsi]
   1400380d9:	or     eax,0x2020200a
   1400380de:	and    BYTE PTR [rbx+rsi*2],bh
   1400380e1:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   1400380e5:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   1400380ed:	and    BYTE PTR [rax],ah
   1400380ef:	and    BYTE PTR [rax],ah
   1400380f1:	cmp    al,0x72
   1400380f3:	gs jno 0x14003816b
   1400380f6:	gs jae 0x14003816d
   1400380f9:	gs fs push rax
   1400380fc:	jb     0x140038167
   1400380fe:	jbe    0x140038169
   140038100:	ins    BYTE PTR es:[rdi],dx
   140038101:	gs addr32 gs jae 0x140038144
   140038106:	or     eax,0x2020200a
   14003810b:	and    BYTE PTR [rax],ah
   14003810d:	and    BYTE PTR [rax],ah
   14003810f:	and    BYTE PTR [rdx+rsi*2],bh
   140038112:	gs jno 0x14003818a
   140038115:	gs jae 0x14003818c
   140038118:	gs fs rex.RB js 0x140038182
   14003811d:	movsxd esi,DWORD PTR [rbp+0x74]
   140038120:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   140038127:	ins    BYTE PTR es:[rdi],dx
   140038128:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14003812c:	gs ins BYTE PTR es:[rdi],dx
   14003812e:	cmp    eax,0x49736122
   140038133:	outs   dx,BYTE PTR ds:[rsi]
   140038134:	jbe    0x1400381a5
   140038136:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14003813a:	and    BYTE PTR [rbp+0x69],dh
   14003813d:	movsxd esp,DWORD PTR [r11+0x65]
   140038141:	jae    0x1400381b6
   140038143:	cmp    eax,0x6c616622
   140038148:	jae    0x1400381af
   14003814a:	and    bh,BYTE PTR [rsi]
   14003814c:	cmp    al,0x2f
   14003814e:	jb     0x1400381b5
   140038150:	jno    0x1400381c7
   140038152:	gs jae 0x1400381c9
   140038155:	gs fs rex.RB js 0x1400381bf
   14003815a:	movsxd esi,DWORD PTR [rbp+0x74]
   14003815d:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   140038164:	ins    BYTE PTR es:[rdi],dx
   140038165:	ds or  eax,0x2020200a
   14003816b:	and    BYTE PTR [rax],ah
   14003816d:	and    BYTE PTR [rdi+rbp*1],bh
   140038170:	jb     0x1400381d7
   140038172:	jno    0x1400381e9
   140038174:	gs jae 0x1400381eb
   140038177:	gs fs push rax
   14003817a:	jb     0x1400381e5
   14003817c:	jbe    0x1400381e7
   14003817e:	ins    BYTE PTR es:[rdi],dx
   14003817f:	gs addr32 gs jae 0x1400381c2
   140038184:	or     eax,0x2020200a
   140038189:	and    BYTE PTR [rdi+rbp*1],bh
   14003818c:	jae    0x1400381f3
   14003818e:	movsxd esi,DWORD PTR [rbp+0x72]
   140038191:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   140038199:	cmp    al,0x2f
   14003819b:	je     0x14003820f
   14003819d:	jne    0x140038212
   14003819f:	je     0x1400381ea
   1400381a1:	outs   dx,BYTE PTR ds:[rsi]
   1400381a2:	outs   dx,WORD PTR ds:[rsi]
   1400381a4:	ds or  eax,0x3c20200a
   1400381aa:	fs gs jo 0x140038213
   1400381ae:	outs   dx,BYTE PTR ds:[rsi]
   1400381af:	fs outs dx,BYTE PTR gs:[rsi]
   1400381b2:	movsxd edi,DWORD PTR [rcx+0x3e]
   1400381b5:	or     eax,0x2020200a
   1400381ba:	and    BYTE PTR [rsp+riz*2],bh
   1400381bd:	gs jo  0x140038225
   1400381c0:	outs   dx,BYTE PTR ds:[rsi]
   1400381c1:	fs outs dx,BYTE PTR gs:[rsi]
   1400381c4:	je     0x140038207
   1400381c6:	jae    0x14003823b
   1400381c8:	gs ins DWORD PTR es:[rdi],dx
   1400381ca:	(bad)  
   1400381cb:	ins    BYTE PTR es:[rdi],dx
   1400381cc:	jns    0x14003820c
   1400381ce:	or     eax,0x2020200a
   1400381d3:	and    BYTE PTR [rax],ah
   1400381d5:	and    BYTE PTR [rcx+riz*2],bh
   1400381d8:	jae    0x14003824d
   1400381da:	gs ins DWORD PTR es:[rdi],dx
   1400381dc:	(bad)  
   1400381dd:	ins    BYTE PTR es:[rdi],dx
   1400381de:	jns    0x140038229
   1400381e0:	fs outs dx,BYTE PTR gs:[rsi]
   1400381e3:	je     0x14003824e
   1400381e5:	je     0x140038260
   1400381e7:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   1400381eb:	gs cmp eax,0x6e697722
   1400381f1:	xor    esi,DWORD PTR [rdx]
   1400381f3:	and    ah,BYTE PTR [rax]
   1400381f5:	outs   dx,BYTE PTR ds:[rsi]
   1400381f6:	(bad)  
   1400381f7:	ins    DWORD PTR es:[rdi],dx
   1400381f8:	gs cmp eax,0x63694d22
   1400381fe:	jb     0x14003826f
   140038200:	jae    0x140038271
   140038202:	data16 je 0x140038233
   140038205:	push   rdi
   140038206:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14003820d:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14003820f:	ins    DWORD PTR es:[rdi],dx
   140038210:	ins    DWORD PTR es:[rdi],dx
   140038211:	outs   dx,DWORD PTR ds:[rsi]
   140038212:	outs   dx,BYTE PTR ds:[rsi]
   140038213:	sub    eax,0x746e6f43
   140038218:	jb     0x140038289
   14003821a:	ins    BYTE PTR es:[rdi],dx
   14003821b:	jae    0x14003823f
   14003821d:	and    BYTE PTR [rsi+0x65],dh
   140038220:	jb     0x140038295
   140038222:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e36223d
   140038229:	xor    BYTE PTR [rsi],ch
   14003822b:	xor    BYTE PTR [rsi],ch
   14003822d:	xor    BYTE PTR [rdx],ah
   14003822f:	and    BYTE PTR [rax+0x75],dh
   140038232:	(bad)  
   140038233:	ins    BYTE PTR es:[rdi],dx
   140038234:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
   14003823b:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
   14003823f:	and    dh,BYTE PTR [rsi]
   140038241:	xor    eax,0x36623539
   140038246:	xor    al,0x31
   140038248:	xor    al,0x34
   14003824a:	movsxd esp,DWORD PTR [rbx+0x66]
   14003824d:	xor    DWORD PTR [rsi+riz*2+0x22],esp
   140038251:	and    BYTE PTR [rcx+riz*2+0x6e],ch
   140038255:	addr32 jne 0x1400382b9
   140038258:	addr32 gs cmp eax,0x20222a22
   14003825f:	jo     0x1400382d3
   140038261:	outs   dx,DWORD PTR ds:[rsi]
   140038262:	movsxd esp,DWORD PTR [rbp+0x73]
   140038265:	jae    0x1400382d6
   140038267:	jb     0x1400382aa
   140038269:	jb     0x1400382ce
   14003826b:	push   0x63657469
   140038270:	je     0x1400382e7
   140038272:	jb     0x1400382d9
   140038274:	cmp    eax,0x3e222a22
   140038279:	cmp    al,0x2f
   14003827b:	(bad)  
   14003827c:	jae    0x1400382f1
   14003827e:	gs ins DWORD PTR es:[rdi],dx
   140038280:	(bad)  
   140038281:	ins    BYTE PTR es:[rdi],dx
   140038282:	jns    0x1400382cd
   140038284:	fs outs dx,BYTE PTR gs:[rsi]
   140038287:	je     0x1400382f2
   140038289:	je     0x140038304
   14003828b:	ds or  eax,0x2020200a
   140038291:	and    BYTE PTR [rdi+rbp*1],bh
   140038294:	fs gs jo 0x1400382fd
   140038298:	outs   dx,BYTE PTR ds:[rsi]
   140038299:	fs outs dx,BYTE PTR gs:[rsi]
   14003829c:	je     0x1400382df
   14003829e:	jae    0x140038313
   1400382a0:	gs ins DWORD PTR es:[rdi],dx
   1400382a2:	(bad)  
   1400382a3:	ins    BYTE PTR es:[rdi],dx
   1400382a4:	jns    0x1400382e4
   1400382a6:	or     eax,0x3c20200a
   1400382ab:	(bad)  
   1400382ac:	fs gs jo 0x140038315
   1400382b0:	outs   dx,BYTE PTR ds:[rsi]
   1400382b1:	fs outs dx,BYTE PTR gs:[rsi]
   1400382b4:	movsxd edi,DWORD PTR [rcx+0x3e]
   1400382b7:	or     eax,0x3c20200a
   1400382bc:	fs gs jo 0x140038325
   1400382c0:	outs   dx,BYTE PTR ds:[rsi]
   1400382c1:	fs outs dx,BYTE PTR gs:[rsi]
   1400382c4:	movsxd edi,DWORD PTR [rcx+0x3e]
   1400382c7:	or     eax,0x2020200a
   1400382cc:	and    BYTE PTR [rsp+riz*2],bh
   1400382cf:	gs jo  0x140038337
   1400382d2:	outs   dx,BYTE PTR ds:[rsi]
   1400382d3:	fs outs dx,BYTE PTR gs:[rsi]
   1400382d6:	je     0x140038319
   1400382d8:	jae    0x14003834d
   1400382da:	gs ins DWORD PTR es:[rdi],dx
   1400382dc:	(bad)  
   1400382dd:	ins    BYTE PTR es:[rdi],dx
   1400382de:	jns    0x14003831e
   1400382e0:	or     eax,0x2020200a
   1400382e5:	and    BYTE PTR [rax],ah
   1400382e7:	and    BYTE PTR [rcx+riz*2],bh
   1400382ea:	jae    0x14003835f
   1400382ec:	gs ins DWORD PTR es:[rdi],dx
   1400382ee:	(bad)  
   1400382ef:	ins    BYTE PTR es:[rdi],dx
   1400382f0:	jns    0x14003833b
   1400382f2:	fs outs dx,BYTE PTR gs:[rsi]
   1400382f5:	je     0x140038360
   1400382f7:	je     0x140038372
   1400382f9:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   1400382fd:	gs cmp eax,0x6e697722
   140038303:	xor    esi,DWORD PTR [rdx]
   140038305:	and    ah,BYTE PTR [rax]
   140038307:	outs   dx,BYTE PTR ds:[rsi]
   140038308:	(bad)  
   140038309:	ins    DWORD PTR es:[rdi],dx
   14003830a:	gs cmp eax,0x63694d22
   140038310:	jb     0x140038381
   140038312:	jae    0x140038383
   140038314:	data16 je 0x140038345
   140038317:	push   rsi
   140038318:	rex.XB cmp DWORD PTR [r8],esi
   14003831b:	cs rex.XB push r10
   14003831e:	push   rsp
   14003831f:	and    ah,BYTE PTR [rax]
   140038321:	jbe    0x140038388
   140038323:	jb     0x140038398
   140038325:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e39223d
   14003832c:	xor    BYTE PTR [rsi],ch
   14003832e:	xor    dh,BYTE PTR [rcx]
   140038330:	xor    BYTE PTR [rdx],dh
   140038332:	xor    ch,BYTE PTR [rsi]
   140038334:	cmp    BYTE PTR [rdx],ah
   140038336:	and    BYTE PTR [rax+0x72],dh
   140038339:	outs   dx,DWORD PTR ds:[rsi]
   14003833a:	movsxd esp,DWORD PTR [rbp+0x73]
   14003833d:	jae    0x1400383ae
   14003833f:	jb     0x140038382
   140038341:	jb     0x1400383a6
   140038343:	push   0x63657469
   140038348:	je     0x1400383bf
   14003834a:	jb     0x1400383b1
   14003834c:	cmp    eax,0x646d6122
   140038351:	ss xor al,0x22
   140038354:	and    BYTE PTR [rax+0x75],dh
   140038357:	(bad)  
   140038358:	ins    BYTE PTR es:[rdi],dx
   140038359:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
   140038360:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
   140038364:	and    dh,BYTE PTR [rcx]
   140038366:	movsxd di,DWORD PTR [rax]
   140038369:	(bad)  
   14003836b:	(bad)  
   14003836c:	cmp    DWORD PTR [rcx+0x31],esp
   14003836f:	xor    DWORD PTR gs:[rax],edi
   140038372:	xor    esp,DWORD PTR gs:[rdx+0x22]
   140038376:	ds cmp al,0x2f
   140038379:	(bad)  
   14003837a:	jae    0x1400383ef
   14003837c:	gs ins DWORD PTR es:[rdi],dx
   14003837e:	(bad)  
   14003837f:	ins    BYTE PTR es:[rdi],dx
   140038380:	jns    0x1400383cb
   140038382:	fs outs dx,BYTE PTR gs:[rsi]
   140038385:	je     0x1400383f0
   140038387:	je     0x140038402
   140038389:	ds or  eax,0x2020200a
   14003838f:	and    BYTE PTR [rdi+rbp*1],bh
   140038392:	fs gs jo 0x1400383fb
   140038396:	outs   dx,BYTE PTR ds:[rsi]
   140038397:	fs outs dx,BYTE PTR gs:[rsi]
   14003839a:	je     0x1400383dd
   14003839c:	jae    0x140038411
   14003839e:	gs ins DWORD PTR es:[rdi],dx
   1400383a0:	(bad)  
   1400383a1:	ins    BYTE PTR es:[rdi],dx
   1400383a2:	jns    0x1400383e2
   1400383a4:	or     eax,0x3c20200a
   1400383a9:	(bad)  
   1400383aa:	fs gs jo 0x140038413
   1400383ae:	outs   dx,BYTE PTR ds:[rsi]
   1400383af:	fs outs dx,BYTE PTR gs:[rsi]
   1400383b2:	movsxd edi,DWORD PTR [rcx+0x3e]
   1400383b5:	or     eax,0x612f3c0a
   1400383ba:	jae    0x14003842f
   1400383bc:	gs ins DWORD PTR es:[rdi],dx
   1400383be:	(bad)  
   1400383bf:	ins    BYTE PTR es:[rdi],dx
   1400383c0:	jns    0x140038400
   1400383c2:	push   rax
   1400383c3:	rex.B

Disassembly of section .reloc:

0000000140039000 <.reloc>:
   140039000:	add    BYTE PTR [rax+0x180002],dh
   140039006:	add    BYTE PTR [rax],al
   140039008:	adc    BYTE PTR [rdx-0x55df55e8],ch
   14003900e:	sub    BYTE PTR [rdx-0x55c755d0],ch
   140039014:	push   rax
   140039015:	stos   BYTE PTR es:[rdi],al
   140039016:	pop    rax
   140039017:	stos   BYTE PTR es:[rdi],al
   140039018:	add    al,al
   14003901a:	add    al,BYTE PTR [rax]
   14003901c:	jl     0x14003901e
   14003901e:	add    BYTE PTR [rax],al
   140039020:	xor    BYTE PTR [rdi-0x58b758c0],ah
   140039026:	pop    rax
   140039027:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140039028:	(bad)  
   140039029:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003902a:	jo     0x140038fd3
   14003902c:	js     0x140038fd5
   14003902e:	mov    BYTE PTR [rdi-0x58675870],ah
   140039034:	test   al,0xa7
   140039036:	mov    al,0xa7
   140039038:	mov    eax,0xd0a7c8a7
   14003903d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003903e:	fsub   DWORD PTR [rdi-0x580f5820]
   140039044:	clc    
   140039045:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140039046:	add    BYTE PTR [rax-0x57e757f0],ch
   14003904c:	and    BYTE PTR [rax-0x57c757d0],ch
   140039052:	test   al,0x50
   140039055:	test   al,0x58
   140039057:	test   al,0x60
   140039059:	test   al,0x70
   14003905b:	test   al,0x78
   14003905d:	test   al,0x80
   14003905f:	test   al,0x90
   140039061:	test   al,0x98
   140039063:	test   al,0xa0
   140039065:	test   al,0xb0
   140039067:	test   al,0xb8
   140039069:	test   al,0xc0
   14003906b:	test   al,0xc8
   14003906d:	test   al,0xd8
   14003906f:	test   al,0xe0
   140039071:	test   al,0xe8
   140039073:	test   al,0xf0
   140039075:	test   al,0x0
   140039077:	test   eax,0xa910a908
   14003907c:	sbb    BYTE PTR [rcx-0x56cf56e0],ch
   140039082:	cmp    BYTE PTR [rcx-0x56b756c0],ch
   140039088:	push   rax
   140039089:	test   eax,0xa968a958
   14003908e:	jo     0x140039039
   140039090:	js     0x14003903b
   140039092:	add    BYTE PTR [rax],al
   140039094:	add    al,dl
   140039096:	add    al,BYTE PTR [rax]
   140039098:	sbb    BYTE PTR [rax],al
   14003909a:	add    BYTE PTR [rax],al
   14003909c:	clc    
   14003909d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003909e:	add    BYTE PTR [rax-0x57ef57f8],ch
   1400390a4:	sbb    BYTE PTR [rax-0x57d757e0],ch
   1400390aa:	add    BYTE PTR [rax],al
   1400390ac:	add    al,ah
   1400390ae:	add    al,BYTE PTR [rax]
   1400390b0:	je     0x1400390b2
   1400390b2:	add    BYTE PTR [rax],al
   1400390b4:	js     0x140039059
   1400390b6:	mov    BYTE PTR [rbx-0x5c575c68],ah
   1400390bc:	mov    eax,0xd8a3c8a3
   1400390c1:	movabs ds:0xa5e0a5d8a5d0a5c8,eax
   1400390ca:	call   0x140a98174
   1400390cf:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400390d0:	or     BYTE PTR [rsi-0x59e759f0],ah
   1400390d6:	and    BYTE PTR [rsi-0x59cf59d8],ah
   1400390dc:	cmp    BYTE PTR [rsi-0x59b759c0],ah
   1400390e2:	push   rax
   1400390e3:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400390e4:	pop    rax
   1400390e5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400390e6:	(bad)  
   1400390e7:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400390e8:	push   0x78a670a6
   1400390ed:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400390ee:	and    BYTE PTR [rsi-0x596f5978],0xa0
   1400390f5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400390f6:	test   al,0xa6
   1400390f8:	mov    al,0xa6
   1400390fa:	mov    eax,0xc8a6c0a6
   1400390ff:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140039100:	shl    BYTE PTR [rsi-0x591f5928],1
   140039106:	call   0x138aa81b1
   14003910b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003910c:	add    BYTE PTR [rdi-0x58ef58f8],ah
   140039112:	sbb    BYTE PTR [rdi-0x58d758e0],ah
   140039118:	xor    BYTE PTR [rdi-0x548f58c8],ah
   14003911e:	js     0x1400390cb
   140039120:	add    BYTE PTR [rax+0x3],dl
   140039123:	add    ah,dl
   140039125:	add    BYTE PTR [rax],al
   140039127:	add    BYTE PTR [rax],al
   140039129:	movabs al,ds:0xa048a038a030a010
   140039132:	push   rax
   140039133:	movabs al,ds:0xa080a078a068a060
   14003913c:	nop
   14003913d:	movabs al,ds:0xa0b0a0a8a0a0a098
   140039146:	shl    BYTE PTR [rax-0x5f275f38],0xe0
   14003914d:	movabs al,ds:0xa110a108a0f8a0f0
   140039156:	and    BYTE PTR [rcx-0x5ec75ed8],ah
   14003915c:	rex movabs eax,ds:0xa170a168a158a150
   140039166:	and    BYTE PTR [rcx-0x5e675e78],0xa0
   14003916d:	movabs eax,ds:0xa1d0a1c8a1b8a1b0
   140039176:	loopne 0x140039119
   140039178:	call   0x140a58a1e
   14003917d:	movabs ds:0xa230a228a218a210,al
   140039186:	movabs ds:0xa270a260a258a248,al
   140039190:	js     0x140039134
   140039192:	mov    BYTE PTR [rdx-0x5d5f5d70],ah
   140039198:	test   al,0xa2
   14003919a:	mov    eax,0xd0a2c0a2
   14003919f:	movabs ds:0xa300a2f0a2e8a2d8,al
   1400391a8:	or     BYTE PTR [rbx-0x5cdf5ce8],ah
   1400391ae:	xor    BYTE PTR [rbx-0x5cb75cc8],ah
   1400391b4:	push   rax
   1400391b5:	movabs ds:0xa380a378a368a360,eax
   1400391be:	mov    BYTE PTR [rbx-0x5c675c70],ah
   1400391c4:	movabs al,ds:0xc0a3b8a3b0a3a8a3
   1400391cd:	movabs ds:0xa3e0a3d8a3d0a3c8,eax
   1400391d6:	call   0x138a7827e
   1400391db:	movabs ds:0xa460a430a408a400,eax
   1400391e4:	nop
   1400391e5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400391e6:	mov    eax,0x10a4e0a4
   1400391eb:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400391ec:	rex movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400391ee:	push   0xa570a5
	...
