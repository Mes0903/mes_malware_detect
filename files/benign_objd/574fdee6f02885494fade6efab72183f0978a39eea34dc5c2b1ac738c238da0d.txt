
574fdee6f02885494fade6efab72183f0978a39eea34dc5c2b1ac738c238da0d.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	mov    QWORD PTR [rsp+0x8],rbx
   140001005:	mov    QWORD PTR [rsp+0x10],rsi
   14000100a:	push   rdi
   14000100b:	sub    rsp,0x20
   14000100f:	mov    rax,rdx
   140001012:	mov    rdi,rcx
   140001015:	test   rdx,rdx
   140001018:	jne    0x14000101e
   14000101a:	lea    rax,[rcx+0x28]
   14000101e:	mov    QWORD PTR [rcx+0x38],r8
   140001022:	lea    rdx,[rip+0x53]        # 0x14000107c
   140001029:	mov    QWORD PTR [rcx+0x40],r9
   14000102d:	mov    r8,rcx
   140001030:	lea    r9,[rcx+0x20]
   140001034:	mov    rcx,rax
   140001037:	call   0x140059e88
   14000103c:	mov    ebx,eax
   14000103e:	test   eax,eax
   140001040:	je     0x140001052
   140001042:	movzx  ebx,ax
   140001045:	or     ebx,0x80070000
   14000104b:	test   eax,eax
   14000104d:	cmovle ebx,eax
   140001050:	jmp    0x140001068
   140001052:	mov    r8,QWORD PTR [rdi+0x8]
   140001056:	mov    edx,0x2
   14000105b:	mov    rcx,QWORD PTR [rdi+0x20]
   14000105f:	movzx  r9d,WORD PTR [r8]
   140001063:	call   0x140059f0c
   140001068:	mov    rsi,QWORD PTR [rsp+0x38]
   14000106d:	mov    eax,ebx
   14000106f:	mov    rbx,QWORD PTR [rsp+0x30]
   140001074:	add    rsp,0x20
   140001078:	pop    rdi
   140001079:	ret    
   14000107a:	int3   
   14000107b:	int3   
   14000107c:	mov    rax,rsp
   14000107f:	mov    QWORD PTR [rax+0x8],rbx
   140001083:	mov    QWORD PTR [rax+0x10],rbp
   140001087:	mov    QWORD PTR [rax+0x18],rsi
   14000108b:	mov    QWORD PTR [rax+0x20],rdi
   14000108f:	push   r12
   140001091:	push   r14
   140001093:	push   r15
   140001095:	sub    rsp,0x40
   140001099:	mov    rbx,QWORD PTR [rsp+0x90]
   1400010a1:	mov    r15,r9
   1400010a4:	mov    sil,r8b
   1400010a7:	mov    r14d,edx
   1400010aa:	mov    r12,rcx
   1400010ad:	test   rbx,rbx
   1400010b0:	je     0x14000111f
   1400010b2:	mov    rbp,QWORD PTR [rsp+0x80]
   1400010ba:	mov    eax,edx
   1400010bc:	test   edx,edx
   1400010be:	je     0x1400010e2
   1400010c0:	cmp    eax,0x1
   1400010c3:	jne    0x1400010e5
   1400010c5:	movzx  ecx,r8b
   1400010c9:	mov    eax,0x100
   1400010ce:	inc    ecx
   1400010d0:	mov    QWORD PTR [rbx+0x10],r9
   1400010d4:	test   r8b,r8b
   1400010d7:	mov    QWORD PTR [rbx+0x18],rbp
   1400010db:	cmovne eax,ecx
   1400010de:	mov    DWORD PTR [rbx],eax
   1400010e0:	jmp    0x1400010e5
   1400010e2:	and    DWORD PTR [rbx],0x0
   1400010e5:	mov    rdi,QWORD PTR [rbx+0x38]
   1400010e9:	test   rdi,rdi
   1400010ec:	je     0x14000111f
   1400010ee:	mov    rcx,rdi
   1400010f1:	call   0x140056aac
   1400010f6:	mov    rax,QWORD PTR [rbx+0x40]
   1400010fa:	mov    r9,r15
   1400010fd:	mov    QWORD PTR [rsp+0x30],rax
   140001102:	mov    r8b,sil
   140001105:	mov    rax,QWORD PTR [rsp+0x88]
   14000110d:	mov    edx,r14d
   140001110:	mov    QWORD PTR [rsp+0x28],rax
   140001115:	mov    rcx,r12
   140001118:	mov    QWORD PTR [rsp+0x20],rbp
   14000111d:	call   rdi
   14000111f:	mov    rbx,QWORD PTR [rsp+0x60]
   140001124:	mov    rbp,QWORD PTR [rsp+0x68]
   140001129:	mov    rsi,QWORD PTR [rsp+0x70]
   14000112e:	mov    rdi,QWORD PTR [rsp+0x78]
   140001133:	add    rsp,0x40
   140001137:	pop    r15
   140001139:	pop    r14
   14000113b:	pop    r12
   14000113d:	ret    
   14000113e:	int3   
   14000113f:	int3   
   140001140:	rex push rbx
   140001142:	sub    rsp,0x40
   140001146:	lea    rax,[rip+0x7834b]        # 0x140079498
   14000114d:	mov    r10d,edx
   140001150:	sub    r10d,eax
   140001153:	mov    r11,r8
   140001156:	mov    al,BYTE PTR [rip+0x783ef]        # 0x14007954b
   14000115c:	lea    r8,[rdx+0x4]
   140001160:	mov    eax,DWORD PTR [rdx]
   140001162:	mov    rbx,rcx
   140001165:	mov    rdx,QWORD PTR [rsp+0x78]
   14000116a:	or     r10d,0xb000000
   140001171:	mov    DWORD PTR [rsp+0x34],eax
   140001175:	mov    eax,DWORD PTR [r8]
   140001178:	mov    DWORD PTR [rsp+0x38],eax
   14000117c:	mov    eax,DWORD PTR [r8+0x4]
   140001180:	add    r8,0x8
   140001184:	mov    DWORD PTR [rsp+0x3c],eax
   140001188:	mov    rax,QWORD PTR [rcx+0x8]
   14000118c:	mov    QWORD PTR [rdx],rax
   14000118f:	mov    rax,QWORD PTR [rcx+0x8]
   140001193:	mov    QWORD PTR [rsp+0x28],rdx
   140001198:	mov    DWORD PTR [rsp+0x30],r10d
   14000119d:	movzx  ecx,WORD PTR [rax]
   1400011a0:	mov    QWORD PTR [rdx+0x10],r8
   1400011a4:	mov    DWORD PTR [rdx+0x8],ecx
   1400011a7:	mov    DWORD PTR [rdx+0xc],0x2
   1400011ae:	movzx  eax,WORD PTR [r8]
   1400011b2:	mov    r8,r11
   1400011b5:	mov    DWORD PTR [rdx+0x18],eax
   1400011b8:	mov    eax,DWORD PTR [rsp+0x70]
   1400011bc:	mov    DWORD PTR [rdx+0x1c],0x1
   1400011c3:	lea    rdx,[rsp+0x30]
   1400011c8:	mov    rcx,QWORD PTR [rbx+0x20]
   1400011cc:	mov    DWORD PTR [rsp+0x20],eax
   1400011d0:	call   0x140059fe4
   1400011d5:	add    rsp,0x40
   1400011d9:	pop    rbx
   1400011da:	ret    
   1400011db:	int3   
   1400011dc:	lea    rcx,[rip+0x8adbd]        # 0x14008bfa0
   1400011e3:	jmp    0x140017a4c
   1400011e8:	lea    rcx,[rip+0x8adb2]        # 0x14008bfa1
   1400011ef:	jmp    0x1400179d8
   1400011f4:	lea    rcx,[rip+0x93665]        # 0x140094860
   1400011fb:	jmp    0x14001bb04
   140001200:	sub    rsp,0x28
   140001204:	lea    rcx,[rip+0x935e5]        # 0x1400947f0
   14000120b:	call   0x14003fe74
   140001210:	lea    rcx,[rip+0x6a6b9]        # 0x14006b8d0
   140001217:	add    rsp,0x28
   14000121b:	jmp    0x14005650c
   140001220:	sub    rsp,0x28
   140001224:	lea    rcx,[rip+0x935d5]        # 0x140094800
   14000122b:	call   0x14003f5e4
   140001230:	lea    rcx,[rip+0x6a6a5]        # 0x14006b8dc
   140001237:	add    rsp,0x28
   14000123b:	jmp    0x14005650c
   140001240:	lea    rcx,[rip+0x6a6a1]        # 0x14006b8e8
   140001247:	jmp    0x14005650c
   14000124c:	lea    rcx,[rip+0x6a6b1]        # 0x14006b904
   140001253:	jmp    0x14005650c
   140001258:	sub    rsp,0x28
   14000125c:	call   0x14004695c
   140001261:	mov    DWORD PTR [rip+0x9d87d],eax        # 0x14009eae4
   140001267:	add    rsp,0x28
   14000126b:	ret    
   14000126c:	sub    rsp,0x28
   140001270:	lea    rcx,[rip+0x9d889]        # 0x14009eb00
   140001277:	call   QWORD PTR [rip+0x6af8b]        # 0x14006c208
   14000127d:	lea    rcx,[rip+0x6a6b4]        # 0x14006b938
   140001284:	add    rsp,0x28
   140001288:	jmp    0x14005650c
   14000128d:	int3   
   14000128e:	int3   
   14000128f:	int3   
   140001290:	lea    rcx,[rip+0x9d8a9]        # 0x14009eb40
   140001297:	jmp    0x140048a44
   14000129c:	int3   
   14000129d:	int3   
   14000129e:	int3   
   14000129f:	int3   
   1400012a0:	mov    r11,rsp
   1400012a3:	sub    rsp,0xa8
   1400012aa:	mov    rax,QWORD PTR [rip+0x80c2f]        # 0x140081ee0
   1400012b1:	xor    rax,rsp
   1400012b4:	mov    QWORD PTR [rsp+0x90],rax
   1400012bc:	and    DWORD PTR [r11-0x28],0x0
   1400012c1:	mov    DWORD PTR [r11-0x20],ecx
   1400012c5:	lea    rcx,[rsp+0x20]
   1400012ca:	mov    DWORD PTR [rsp+0x60],edx
   1400012ce:	mov    DWORD PTR [r11-0x44],r8d
   1400012d2:	mov    DWORD PTR [r11-0x24],0x2
   1400012da:	call   0x1400479a4
   1400012df:	mov    rcx,QWORD PTR [rsp+0x90]
   1400012e7:	xor    rcx,rsp
   1400012ea:	call   0x140055f90
   1400012ef:	add    rsp,0xa8
   1400012f6:	ret    
   1400012f7:	int3   
   1400012f8:	mov    r11,rsp
   1400012fb:	sub    rsp,0xa8
   140001302:	mov    rax,QWORD PTR [rip+0x80bd7]        # 0x140081ee0
   140001309:	xor    rax,rsp
   14000130c:	mov    QWORD PTR [rsp+0x90],rax
   140001314:	mov    DWORD PTR [r11-0x20],ecx
   140001318:	lea    rcx,[rsp+0x20]
   14000131d:	mov    QWORD PTR [rsp+0x20],rdx
   140001322:	mov    DWORD PTR [r11-0x28],0x1
   14000132a:	mov    DWORD PTR [r11-0x48],r8d
   14000132e:	mov    DWORD PTR [r11-0x44],r9d
   140001332:	mov    DWORD PTR [r11-0x24],0x2
   14000133a:	call   0x1400479a4
   14000133f:	mov    rcx,QWORD PTR [rsp+0x90]
   140001347:	xor    rcx,rsp
   14000134a:	call   0x140055f90
   14000134f:	add    rsp,0xa8
   140001356:	ret    
   140001357:	int3   
   140001358:	mov    r11,rsp
   14000135b:	sub    rsp,0xa8
   140001362:	mov    rax,QWORD PTR [rip+0x80b77]        # 0x140081ee0
   140001369:	xor    rax,rsp
   14000136c:	mov    QWORD PTR [rsp+0x90],rax
   140001374:	and    DWORD PTR [r11-0x24],0x0
   140001379:	mov    DWORD PTR [r11-0x20],ecx
   14000137d:	lea    rcx,[rsp+0x20]
   140001382:	mov    QWORD PTR [rsp+0x20],rdx
   140001387:	mov    QWORD PTR [r11-0x80],r8
   14000138b:	mov    DWORD PTR [r11-0x28],0x2
   140001393:	call   0x1400479a4
   140001398:	mov    rcx,QWORD PTR [rsp+0x90]
   1400013a0:	xor    rcx,rsp
   1400013a3:	call   0x140055f90
   1400013a8:	add    rsp,0xa8
   1400013af:	ret    
   1400013b0:	mov    r11,rsp
   1400013b3:	sub    rsp,0xa8
   1400013ba:	mov    rax,QWORD PTR [rip+0x80b1f]        # 0x140081ee0
   1400013c1:	xor    rax,rsp
   1400013c4:	mov    QWORD PTR [rsp+0x90],rax
   1400013cc:	and    DWORD PTR [r11-0x24],0x0
   1400013d1:	mov    DWORD PTR [r11-0x20],ecx
   1400013d5:	lea    rcx,[rsp+0x20]
   1400013da:	mov    QWORD PTR [rsp+0x20],rdx
   1400013df:	mov    DWORD PTR [r11-0x28],0x1
   1400013e7:	call   0x1400479a4
   1400013ec:	mov    rcx,QWORD PTR [rsp+0x90]
   1400013f4:	xor    rcx,rsp
   1400013f7:	call   0x140055f90
   1400013fc:	add    rsp,0xa8
   140001403:	ret    
   140001404:	mov    QWORD PTR [rsp+0x8],rcx
   140001409:	push   rdi
   14000140a:	sub    rsp,0x30
   14000140e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001417:	mov    QWORD PTR [rsp+0x48],rbx
   14000141c:	mov    rbx,rdx
   14000141f:	mov    rdi,rcx
   140001422:	add    rcx,0x8
   140001426:	call   0x1400014a0
   14000142b:	nop
   14000142c:	lea    rcx,[rdi+0x88]
   140001433:	call   0x140046194
   140001438:	nop
   140001439:	and    QWORD PTR [rdi+0x140],0x0
   140001441:	and    QWORD PTR [rdi+0x148],0x0
   140001449:	and    QWORD PTR [rdi+0x150],0x0
   140001451:	and    QWORD PTR [rdi+0x158],0x0
   140001459:	lea    rcx,[rdi+0x160]
   140001460:	call   0x140036dcc
   140001465:	and    WORD PTR [rdi+0x84],0x0
   14000146d:	and    DWORD PTR [rdi+0x70],0x0
   140001471:	and    QWORD PTR [rdi+0x78],0x0
   140001476:	and    DWORD PTR [rdi+0x80],0x0
   14000147d:	mov    QWORD PTR [rdi+0x58],rbx
   140001481:	and    QWORD PTR [rdi+0x60],0x0
   140001486:	and    QWORD PTR [rdi+0x68],0x0
   14000148b:	mov    QWORD PTR [rdi+0x210],rdi
   140001492:	mov    rax,rdi
   140001495:	mov    rbx,QWORD PTR [rsp+0x48]
   14000149a:	add    rsp,0x30
   14000149e:	pop    rdi
   14000149f:	ret    
   1400014a0:	rex push rdi
   1400014a2:	sub    rsp,0x40
   1400014a6:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   1400014af:	mov    QWORD PTR [rsp+0x58],rbx
   1400014b4:	mov    rdi,rcx
   1400014b7:	mov    ecx,0x33508
   1400014bc:	call   0x140055df0
   1400014c1:	mov    QWORD PTR [rsp+0x50],rax
   1400014c6:	xor    ebx,ebx
   1400014c8:	test   rax,rax
   1400014cb:	je     0x1400014f9
   1400014cd:	lea    r8d,[rbx+0x10]
   1400014d1:	mov    QWORD PTR [rax],r8
   1400014d4:	lea    rbx,[rax+0x8]
   1400014d8:	lea    rax,[rip+0x2c1]        # 0x1400017a0
   1400014df:	mov    QWORD PTR [rsp+0x20],rax
   1400014e4:	lea    r9,[rip+0x21]        # 0x14000150c
   1400014eb:	mov    edx,0x3350
   1400014f0:	mov    rcx,rbx
   1400014f3:	call   0x140055c6c
   1400014f8:	nop
   1400014f9:	mov    QWORD PTR [rdi],rbx
   1400014fc:	mov    rax,rdi
   1400014ff:	mov    rbx,QWORD PTR [rsp+0x58]
   140001504:	add    rsp,0x40
   140001508:	pop    rdi
   140001509:	ret    
   14000150a:	int3   
   14000150b:	int3   
   14000150c:	xor    eax,eax
   14000150e:	mov    QWORD PTR [rcx+0x2020],rax
   140001515:	mov    QWORD PTR [rcx+0x2028],rax
   14000151c:	mov    QWORD PTR [rcx+0x2030],rax
   140001523:	mov    QWORD PTR [rcx+0x2038],rax
   14000152a:	mov    QWORD PTR [rcx+0x2040],rax
   140001531:	mov    QWORD PTR [rcx+0x2048],rax
   140001538:	mov    QWORD PTR [rcx+0x2050],rax
   14000153f:	mov    rax,rcx
   140001542:	ret    
   140001543:	int3   
   140001544:	rex push rbx
   140001546:	sub    rsp,0x20
   14000154a:	mov    rbx,rcx
   14000154d:	mov    rax,rdx
   140001550:	lea    rcx,[rip+0x6fe59]        # 0x1400713b0
   140001557:	mov    QWORD PTR [rbx],rcx
   14000155a:	lea    rdx,[rbx+0x8]
   14000155e:	xor    ecx,ecx
   140001560:	mov    QWORD PTR [rdx],rcx
   140001563:	mov    QWORD PTR [rdx+0x8],rcx
   140001567:	lea    rcx,[rax+0x8]
   14000156b:	call   0x1400585cc
   140001570:	lea    rax,[rip+0x6fe51]        # 0x1400713c8
   140001577:	mov    QWORD PTR [rbx],rax
   14000157a:	mov    rax,rbx
   14000157d:	add    rsp,0x20
   140001581:	pop    rbx
   140001582:	ret    
   140001583:	int3   
   140001584:	mov    r9,rcx
   140001587:	mov    ecx,0x8
   14000158c:	lea    r8,[r9+0xf8]
   140001593:	lea    rdx,[r8-0xf8]
   14000159a:	mov    rax,rdx
   14000159d:	not    rax
   1400015a0:	inc    rax
   1400015a3:	and    eax,0x3f
   1400015a6:	add    rax,rdx
   1400015a9:	mov    QWORD PTR [r8-0x8],rax
   1400015ad:	sub    rax,0xffffffffffffff80
   1400015b1:	mov    QWORD PTR [r8],rax
   1400015b4:	add    rax,0x20
   1400015b8:	mov    QWORD PTR [r8+0x8],rax
   1400015bc:	lea    r8,[r8+0x120]
   1400015c3:	add    rax,0x8
   1400015c7:	mov    QWORD PTR [r8-0x110],rax
   1400015ce:	sub    rcx,0x1
   1400015d2:	jne    0x140001593
   1400015d4:	lea    rcx,[r9+0x900]
   1400015db:	mov    rax,rcx
   1400015de:	not    rax
   1400015e1:	inc    rax
   1400015e4:	and    eax,0x3f
   1400015e7:	add    rax,rcx
   1400015ea:	mov    QWORD PTR [rcx+0xf0],rax
   1400015f1:	sub    rax,0xffffffffffffff80
   1400015f5:	mov    QWORD PTR [rcx+0xf8],rax
   1400015fc:	add    rax,0x20
   140001600:	mov    QWORD PTR [rcx+0x100],rax
   140001607:	add    rax,0x8
   14000160b:	mov    QWORD PTR [rcx+0x108],rax
   140001612:	mov    rax,r9
   140001615:	ret    
   140001616:	int3   
   140001617:	int3   
   140001618:	rex push rbx
   14000161a:	sub    rsp,0x20
   14000161e:	mov    rbx,rcx
   140001621:	mov    rax,rdx
   140001624:	lea    rcx,[rip+0x6fd85]        # 0x1400713b0
   14000162b:	mov    QWORD PTR [rbx],rcx
   14000162e:	lea    rdx,[rbx+0x8]
   140001632:	xor    ecx,ecx
   140001634:	mov    QWORD PTR [rdx],rcx
   140001637:	mov    QWORD PTR [rdx+0x8],rcx
   14000163b:	lea    rcx,[rax+0x8]
   14000163f:	call   0x1400585cc
   140001644:	mov    rax,rbx
   140001647:	add    rsp,0x20
   14000164b:	pop    rbx
   14000164c:	ret    
   14000164d:	int3   
   14000164e:	int3   
   14000164f:	int3   
   140001650:	sub    rsp,0x28
   140001654:	mov    rcx,QWORD PTR [rcx]
   140001657:	test   rcx,rcx
   14000165a:	je     0x140001661
   14000165c:	call   0x14005a938
   140001661:	add    rsp,0x28
   140001665:	ret    
   140001666:	int3   
   140001667:	int3   
   140001668:	mov    QWORD PTR [rsp+0x8],rbx
   14000166d:	push   rdi
   14000166e:	sub    rsp,0x20
   140001672:	mov    rbx,rcx
   140001675:	mov    rcx,QWORD PTR [rcx+0x60]
   140001679:	test   rcx,rcx
   14000167c:	je     0x140001688
   14000167e:	mov    rax,QWORD PTR [rcx]
   140001681:	mov    edx,0x1
   140001686:	call   QWORD PTR [rax]
   140001688:	mov    rdi,QWORD PTR [rbx+0x68]
   14000168c:	test   rdi,rdi
   14000168f:	je     0x1400016a6
   140001691:	mov    rcx,rdi
   140001694:	call   0x1400491fc
   140001699:	mov    edx,0xe970
   14000169e:	mov    rcx,rdi
   1400016a1:	call   0x140055de8
   1400016a6:	lea    rcx,[rbx+0x160]
   1400016ad:	call   0x140036e98
   1400016b2:	mov    rcx,QWORD PTR [rbx+0x140]
   1400016b9:	test   rcx,rcx
   1400016bc:	je     0x1400016c3
   1400016be:	call   0x14005a938
   1400016c3:	mov    rcx,QWORD PTR [rbx+0x88]
   1400016ca:	test   rcx,rcx
   1400016cd:	je     0x1400016d4
   1400016cf:	call   0x14005a938
   1400016d4:	lea    rcx,[rbx+0x8]
   1400016d8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400016dd:	add    rsp,0x20
   1400016e1:	pop    rdi
   1400016e2:	jmp    0x140001754
   1400016e7:	int3   
   1400016e8:	rex push rbx
   1400016ea:	sub    rsp,0x20
   1400016ee:	mov    rbx,rcx
   1400016f1:	mov    rcx,QWORD PTR [rcx+0xa6e8]
   1400016f8:	test   rcx,rcx
   1400016fb:	je     0x140001702
   1400016fd:	call   0x14005a938
   140001702:	mov    rcx,QWORD PTR [rbx+0xa630]
   140001709:	test   rcx,rcx
   14000170c:	je     0x140001713
   14000170e:	call   0x14005a938
   140001713:	mov    rcx,QWORD PTR [rbx+0xa578]
   14000171a:	test   rcx,rcx
   14000171d:	je     0x140001724
   14000171f:	call   0x14005a938
   140001724:	mov    rcx,QWORD PTR [rbx+0xa4c0]
   14000172b:	test   rcx,rcx
   14000172e:	je     0x140001735
   140001730:	call   0x14005a938
   140001735:	mov    rcx,QWORD PTR [rbx+0xa408]
   14000173c:	test   rcx,rcx
   14000173f:	je     0x140001746
   140001741:	call   0x14005a938
   140001746:	mov    rcx,rbx
   140001749:	add    rsp,0x20
   14000174d:	pop    rbx
   14000174e:	jmp    0x1400266cc
   140001753:	int3   
   140001754:	rex push rbx
   140001756:	sub    rsp,0x30
   14000175a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001763:	mov    rcx,QWORD PTR [rcx]
   140001766:	test   rcx,rcx
   140001769:	je     0x140001798
   14000176b:	lea    rbx,[rcx-0x8]
   14000176f:	lea    r9,[rip+0x2a]        # 0x1400017a0
   140001776:	mov    r8,QWORD PTR [rbx]
   140001779:	mov    edx,0x3350
   14000177e:	call   0x140055cdc
   140001783:	nop
   140001784:	imul   rdx,QWORD PTR [rbx],0x3350
   14000178b:	add    rdx,0x8
   14000178f:	mov    rcx,rbx
   140001792:	call   0x140055df8
   140001797:	nop
   140001798:	add    rsp,0x30
   14000179c:	pop    rbx
   14000179d:	ret    
   14000179e:	int3   
   14000179f:	int3   
   1400017a0:	sub    rsp,0x28
   1400017a4:	mov    rcx,QWORD PTR [rcx+0x2020]
   1400017ab:	test   rcx,rcx
   1400017ae:	je     0x1400017b5
   1400017b0:	call   0x14005a938
   1400017b5:	add    rsp,0x28
   1400017b9:	ret    
   1400017ba:	int3   
   1400017bb:	int3   
   1400017bc:	mov    QWORD PTR [rsp+0x8],rbx
   1400017c1:	push   rdi
   1400017c2:	sub    rsp,0x20
   1400017c6:	mov    rdi,rdx
   1400017c9:	mov    rbx,rcx
   1400017cc:	sub    rdx,rcx
   1400017cf:	mov    r8d,0x800
   1400017d5:	movzx  eax,WORD PTR [rdx+rcx*1]
   1400017d9:	mov    WORD PTR [rcx],ax
   1400017dc:	lea    rcx,[rcx+0x2]
   1400017e0:	sub    r8,0x1
   1400017e4:	jne    0x1400017d5
   1400017e6:	lea    rdx,[rdi+0x1000]
   1400017ed:	lea    rcx,[rbx+0x1000]
   1400017f4:	call   0x1400243b8
   1400017f9:	movups xmm0,XMMWORD PTR [rdi+0x3318]
   140001800:	movups XMMWORD PTR [rbx+0x3318],xmm0
   140001807:	movups xmm1,XMMWORD PTR [rdi+0x3328]
   14000180e:	movups XMMWORD PTR [rbx+0x3328],xmm1
   140001815:	mov    eax,DWORD PTR [rdi+0x3338]
   14000181b:	mov    DWORD PTR [rbx+0x3338],eax
   140001821:	mov    rax,QWORD PTR [rdi+0x3340]
   140001828:	mov    QWORD PTR [rbx+0x3340],rax
   14000182f:	mov    al,BYTE PTR [rdi+0x3348]
   140001835:	mov    BYTE PTR [rbx+0x3348],al
   14000183b:	mov    al,BYTE PTR [rdi+0x3349]
   140001841:	mov    BYTE PTR [rbx+0x3349],al
   140001847:	mov    rax,rbx
   14000184a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000184f:	add    rsp,0x20
   140001853:	pop    rdi
   140001854:	ret    
   140001855:	int3   
   140001856:	int3   
   140001857:	int3   
   140001858:	mov    QWORD PTR [rsp+0x8],rbx
   14000185d:	mov    QWORD PTR [rsp+0x10],rsi
   140001862:	push   rdi
   140001863:	sub    rsp,0x20
   140001867:	add    QWORD PTR [rcx+0x8],rdx
   14000186b:	mov    rbx,rcx
   14000186e:	mov    rax,QWORD PTR [rcx+0x8]
   140001872:	cmp    rax,QWORD PTR [rcx+0x10]
   140001876:	jbe    0x1400018e6
   140001878:	mov    r8,QWORD PTR [rcx+0x18]
   14000187c:	test   r8,r8
   14000187f:	je     0x1400018a5
   140001881:	cmp    rax,r8
   140001884:	jbe    0x1400018a5
   140001886:	lea    rdx,[rip+0x6aec3]        # 0x14006c750
   14000188d:	lea    rcx,[rip+0x92fcc]        # 0x140094860
   140001894:	call   0x14001bc8c
   140001899:	lea    rcx,[rip+0x92fc0]        # 0x140094860
   1400018a0:	call   0x14001bd24
   1400018a5:	mov    rdx,QWORD PTR [rbx+0x10]
   1400018a9:	mov    rcx,QWORD PTR [rbx]
   1400018ac:	mov    rax,rdx
   1400018af:	shr    rax,0x2
   1400018b3:	lea    rdi,[rdx+0x20]
   1400018b7:	add    rdi,rax
   1400018ba:	cmp    QWORD PTR [rbx+0x8],rdi
   1400018be:	cmova  rdi,QWORD PTR [rbx+0x8]
   1400018c3:	mov    rdx,rdi
   1400018c6:	call   0x14005a940
   1400018cb:	mov    rsi,rax
   1400018ce:	test   rax,rax
   1400018d1:	jne    0x1400018df
   1400018d3:	lea    rcx,[rip+0x92f86]        # 0x140094860
   1400018da:	call   0x14001bd24
   1400018df:	mov    QWORD PTR [rbx],rsi
   1400018e2:	mov    QWORD PTR [rbx+0x10],rdi
   1400018e6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400018eb:	mov    rsi,QWORD PTR [rsp+0x38]
   1400018f0:	add    rsp,0x20
   1400018f4:	pop    rdi
   1400018f5:	ret    
   1400018f6:	int3   
   1400018f7:	int3   
   1400018f8:	mov    QWORD PTR [rsp+0x8],rbx
   1400018fd:	mov    QWORD PTR [rsp+0x10],rsi
   140001902:	push   rdi
   140001903:	sub    rsp,0x20
   140001907:	add    QWORD PTR [rcx+0x8],rdx
   14000190b:	mov    rbx,rcx
   14000190e:	mov    rax,QWORD PTR [rcx+0x8]
   140001912:	cmp    rax,QWORD PTR [rcx+0x10]
   140001916:	jbe    0x14000198b
   140001918:	mov    r8,QWORD PTR [rcx+0x18]
   14000191c:	test   r8,r8
   14000191f:	je     0x140001945
   140001921:	cmp    rax,r8
   140001924:	jbe    0x140001945
   140001926:	lea    rdx,[rip+0x6ae83]        # 0x14006c7b0
   14000192d:	lea    rcx,[rip+0x92f2c]        # 0x140094860
   140001934:	call   0x14001bc8c
   140001939:	lea    rcx,[rip+0x92f20]        # 0x140094860
   140001940:	call   0x14001bd24
   140001945:	mov    rcx,QWORD PTR [rbx+0x10]
   140001949:	mov    rax,rcx
   14000194c:	shr    rax,0x2
   140001950:	lea    rdi,[rcx+0x20]
   140001954:	mov    rcx,QWORD PTR [rbx]
   140001957:	add    rdi,rax
   14000195a:	cmp    QWORD PTR [rbx+0x8],rdi
   14000195e:	cmova  rdi,QWORD PTR [rbx+0x8]
   140001963:	lea    rdx,[rdi+rdi*2]
   140001967:	shl    rdx,0x3
   14000196b:	call   0x14005a940
   140001970:	mov    rsi,rax
   140001973:	test   rax,rax
   140001976:	jne    0x140001984
   140001978:	lea    rcx,[rip+0x92ee1]        # 0x140094860
   14000197f:	call   0x14001bd24
   140001984:	mov    QWORD PTR [rbx],rsi
   140001987:	mov    QWORD PTR [rbx+0x10],rdi
   14000198b:	mov    rbx,QWORD PTR [rsp+0x30]
   140001990:	mov    rsi,QWORD PTR [rsp+0x38]
   140001995:	add    rsp,0x20
   140001999:	pop    rdi
   14000199a:	ret    
   14000199b:	int3   
   14000199c:	rex push rbp
   14000199e:	push   rsi
   14000199f:	push   rdi
   1400019a0:	push   r12
   1400019a2:	push   r13
   1400019a4:	push   r14
   1400019a6:	push   r15
   1400019a8:	lea    rbp,[rsp-0x15120]
   1400019b0:	mov    eax,0x15220
   1400019b5:	call   0x140055f20
   1400019ba:	sub    rsp,rax
   1400019bd:	mov    QWORD PTR [rbp-0x28],0xfffffffffffffffe
   1400019c5:	mov    QWORD PTR [rsp+0x15278],rbx
   1400019cd:	mov    rax,QWORD PTR [rip+0x8050c]        # 0x140081ee0
   1400019d4:	xor    rax,rsp
   1400019d7:	mov    QWORD PTR [rbp+0x15110],rax
   1400019de:	mov    rbx,r8
   1400019e1:	mov    r14,rdx
   1400019e4:	mov    QWORD PTR [rbp-0x58],rdx
   1400019e8:	mov    rsi,rcx
   1400019eb:	xor    r12d,r12d
   1400019ee:	mov    r15d,r12d
   1400019f1:	mov    DWORD PTR [rsp+0x44],r12d
   1400019f6:	mov    r13d,r12d
   1400019f9:	mov    DWORD PTR [rsp+0x4c],r12d
   1400019fe:	mov    DWORD PTR [rsp+0x54],r12d
   140001a03:	mov    rax,QWORD PTR [rcx+0x58]
   140001a07:	cmp    WORD PTR [rax+0x1018],r12w
   140001a0f:	je     0x140001a67
   140001a11:	lea    rdx,[rip+0x6ac80]        # 0x14006c698
   140001a18:	mov    rcx,r14
   140001a1b:	call   0x140030eb8
   140001a20:	test   al,al
   140001a22:	jne    0x140001a67
   140001a24:	lea    rdx,[rip+0x6ac75]        # 0x14006c6a0
   140001a2b:	mov    rcx,r14
   140001a2e:	call   0x140030eb8
   140001a33:	test   al,al
   140001a35:	jne    0x140001a67
   140001a37:	lea    rdx,[rip+0x6ac6a]        # 0x14006c6a8
   140001a3e:	mov    rcx,r14
   140001a41:	call   0x140030eb8
   140001a46:	test   al,al
   140001a48:	jne    0x140001a5c
   140001a4a:	mov    r8,rbx
   140001a4d:	lea    rdx,[rip+0x6ac5c]        # 0x14006c6b0
   140001a54:	mov    rcx,r14
   140001a57:	call   0x140046120
   140001a5c:	mov    rdx,rbx
   140001a5f:	mov    rcx,r14
   140001a62:	call   0x140032900
   140001a67:	mov    r8,QWORD PTR [rsi+0x58]
   140001a6b:	mov    edi,0x1
   140001a70:	cmp    BYTE PTR [r8+0x61d0],r12b
   140001a77:	je     0x140001a8e
   140001a79:	add    r8,0x61d2
   140001a80:	mov    r9b,dil
   140001a83:	mov    rdx,rbx
   140001a86:	mov    rcx,r14
   140001a89:	call   0x14003197c
   140001a8e:	mov    rax,QWORD PTR [rsi+0x58]
   140001a92:	cmp    BYTE PTR [rax+0x61b9],r12b
   140001a99:	je     0x140001aa3
   140001a9b:	mov    rcx,r14
   140001a9e:	call   0x140021c6c
   140001aa3:	mov    WORD PTR [rbp+0x14090],r12w
   140001aab:	mov    WORD PTR [rbp+0x14110],r12w
   140001ab3:	mov    rax,QWORD PTR [rsi+0x58]
   140001ab7:	cmp    QWORD PTR [rax+0x6170],r12
   140001abe:	je     0x140001ac9
   140001ac0:	mov    BYTE PTR [rsi+0x25a],dil
   140001ac7:	jmp    0x140001ad0
   140001ac9:	and    DWORD PTR [rax+0x6154],0xffffffe7
   140001ad0:	cmp    BYTE PTR [rip+0x8149d],r12b        # 0x140082f74
   140001ad7:	jne    0x140001aeb
   140001ad9:	mov    ecx,0xd2c
   140001ade:	call   0x140040118
   140001ae3:	mov    rcx,rax
   140001ae6:	call   0x14001796c
   140001aeb:	mov    BYTE PTR [rsp+0x40],r12b
   140001af0:	mov    rdx,QWORD PTR [rsi+0x58]
   140001af4:	lea    rcx,[rsp+0x70]
   140001af9:	call   0x140006b20
   140001afe:	nop
   140001aff:	lea    r9,[rsp+0x40]
   140001b04:	mov    r8,r14
   140001b07:	lea    rdx,[rsp+0x70]
   140001b0c:	mov    rcx,rsi
   140001b0f:	call   0x14000588c
   140001b14:	mov    rdx,QWORD PTR [rsi+0x58]
   140001b18:	mov    ecx,DWORD PTR [rdx+0x61c0]
   140001b1e:	lea    eax,[rcx-0x3]
   140001b21:	cmp    eax,edi
   140001b23:	jbe    0x140002fd4
   140001b29:	lea    rcx,[rbp+0xb0b0]
   140001b30:	call   0x140007678
   140001b35:	nop
   140001b36:	mov    rdx,QWORD PTR [rsi+0x58]
   140001b3a:	lea    rcx,[rbp+0x20d0]
   140001b41:	call   0x140007678
   140001b46:	nop
   140001b47:	mov    rdi,r12
   140001b4a:	mov    rbx,r12
   140001b4d:	cmp    QWORD PTR [rbp-0x70],r12
   140001b51:	jbe    0x140001bf6
   140001b57:	mov    r15d,0x1
   140001b5d:	mov    rdx,rbx
   140001b60:	lea    rcx,[rsp+0x70]
   140001b65:	call   0x140006b9c
   140001b6a:	cmp    DWORD PTR [rax+0x2c],0x2
   140001b6e:	je     0x140001b83
   140001b70:	mov    rdx,rbx
   140001b73:	lea    rcx,[rsp+0x70]
   140001b78:	call   0x140006b9c
   140001b7d:	cmp    DWORD PTR [rax+0x2c],0x3
   140001b81:	jne    0x140001be4
   140001b83:	mov    rdx,rbx
   140001b86:	lea    rcx,[rsp+0x70]
   140001b8b:	call   0x140006b9c
   140001b90:	cmp    QWORD PTR [rax+0x8],rdi
   140001b94:	jbe    0x140001ba7
   140001b96:	mov    rdx,rbx
   140001b99:	lea    rcx,[rsp+0x70]
   140001b9e:	call   0x140006b9c
   140001ba3:	mov    rdi,QWORD PTR [rax+0x8]
   140001ba7:	mov    rdx,rbx
   140001baa:	lea    rcx,[rsp+0x70]
   140001baf:	call   0x140006b9c
   140001bb4:	mov    rcx,QWORD PTR [rax+0x8]
   140001bb8:	add    QWORD PTR [rbp+0xa090],rcx
   140001bbf:	mov    rdx,rbx
   140001bc2:	lea    rcx,[rsp+0x70]
   140001bc7:	call   0x140006b9c
   140001bcc:	mov    rdx,QWORD PTR [rax]
   140001bcf:	lea    rcx,[rbp+0x20d0]
   140001bd6:	call   0x140008a48
   140001bdb:	mov    eax,eax
   140001bdd:	add    QWORD PTR [rbp+0xa098],rax
   140001be4:	add    rbx,r15
   140001be7:	cmp    rbx,QWORD PTR [rbp-0x70]
   140001beb:	jb     0x140001b5d
   140001bf1:	mov    r15d,DWORD PTR [rsp+0x44]
   140001bf6:	mov    BYTE PTR [rsp+0x41],r12b
   140001bfb:	lea    rax,[rsp+0x41]
   140001c00:	mov    QWORD PTR [rsp+0x28],rax
   140001c05:	lea    rax,[rsp+0x70]
   140001c0a:	mov    QWORD PTR [rsp+0x20],rax
   140001c0f:	lea    r9,[rbp+0x20d0]
   140001c16:	lea    r8,[rbp+0xb0b0]
   140001c1d:	mov    rdx,r14
   140001c20:	mov    rcx,rsi
   140001c23:	call   0x140003b84
   140001c28:	test   al,al
   140001c2a:	jne    0x140001c4a
   140001c2c:	lea    rcx,[rbp+0x20d0]
   140001c33:	call   0x140007880
   140001c38:	nop
   140001c39:	lea    rcx,[rbp+0xb0b0]
   140001c40:	call   0x140007880
   140001c45:	jmp    0x140002ffb
   140001c4a:	mov    edx,DWORD PTR [rbp+0xa058]
   140001c50:	mov    rcx,QWORD PTR [rsi+0x58]
   140001c54:	call   0x14001653c
   140001c59:	mov    rbx,r12
   140001c5c:	cmp    QWORD PTR [rbp-0x70],r12
   140001c60:	jbe    0x140001cbd
   140001c62:	mov    rax,QWORD PTR [rsi+0x58]
   140001c66:	cmp    BYTE PTR [rax+0x615f],r12b
   140001c6d:	je     0x140001c82
   140001c6f:	mov    rdx,rbx
   140001c72:	lea    rcx,[rsp+0x70]
   140001c77:	call   0x140006b9c
   140001c7c:	cmp    DWORD PTR [rax+0x2c],0x2
   140001c80:	je     0x140001c9b
   140001c82:	mov    rdx,rbx
   140001c85:	lea    rcx,[rsp+0x70]
   140001c8a:	call   0x140006b9c
   140001c8f:	mov    r8d,0x1
   140001c95:	cmp    DWORD PTR [rax+0x2c],r8d
   140001c99:	jne    0x140001cb2
   140001c9b:	mov    rdx,rbx
   140001c9e:	lea    rcx,[rsp+0x70]
   140001ca3:	call   0x140006b9c
   140001ca8:	mov    DWORD PTR [rax+0x2c],r12d
   140001cac:	mov    r8d,0x1
   140001cb2:	add    rbx,r8
   140001cb5:	cmp    rbx,QWORD PTR [rbp-0x70]
   140001cb9:	jb     0x140001c62
   140001cbb:	jmp    0x140001cc3
   140001cbd:	mov    r8d,0x1
   140001cc3:	cmp    QWORD PTR [rbp+0xb0b8],0xffffffffffffffff
   140001ccb:	setne  bl
   140001cce:	mov    BYTE PTR [rsp+0x49],bl
   140001cd2:	mov    rcx,QWORD PTR [rsi+0x58]
   140001cd6:	mov    r9d,0x20000
   140001cdc:	cmp    WORD PTR [rcx+0x73d0],r12w
   140001ce4:	jne    0x140001d53
   140001ce6:	test   bl,bl
   140001ce8:	je     0x140001cf3
   140001cea:	cmp    BYTE PTR [rbp+0x1303c],r12b
   140001cf1:	jne    0x140001d53
   140001cf3:	cmp    BYTE PTR [rsp+0x40],r12b
   140001cf8:	jne    0x140001d53
   140001cfa:	mov    eax,DWORD PTR [rcx+0x6154]
   140001d00:	test   eax,eax
   140001d02:	cmovne rdi,QWORD PTR [rbp+0xa090]
   140001d0a:	neg    eax
   140001d0c:	sbb    rax,rax
   140001d0f:	mov    r10d,0xe0000
   140001d15:	and    rax,r10
   140001d18:	add    rax,r9
   140001d1b:	cmp    QWORD PTR [rcx+0x10],rax
   140001d1f:	jbe    0x140001d53
   140001d21:	add    rdi,rdi
   140001d24:	mov    rcx,QWORD PTR [rsi+0x58]
   140001d28:	mov    rax,QWORD PTR [rcx+0x10]
   140001d2c:	cmp    rax,rdi
   140001d2f:	jbe    0x140001d53
   140001d31:	shr    rax,1
   140001d34:	mov    QWORD PTR [rcx+0x10],rax
   140001d38:	mov    rdx,QWORD PTR [rsi+0x58]
   140001d3c:	mov    eax,DWORD PTR [rdx+0x6154]
   140001d42:	neg    eax
   140001d44:	sbb    rcx,rcx
   140001d47:	and    rcx,r10
   140001d4a:	add    rcx,r9
   140001d4d:	cmp    QWORD PTR [rdx+0x10],rcx
   140001d51:	ja     0x140001d24
   140001d53:	mov    ecx,0x400000
   140001d58:	cmp    DWORD PTR [rbp+0xa058],0x2
   140001d5f:	jne    0x140001d6f
   140001d61:	mov    rax,QWORD PTR [rsi+0x58]
   140001d65:	cmp    QWORD PTR [rax+0x10],rcx
   140001d69:	jbe    0x140001d6f
   140001d6b:	mov    QWORD PTR [rax+0x10],rcx
   140001d6f:	mov    rax,QWORD PTR [rsi+0x58]
   140001d73:	cmp    DWORD PTR [rax+0x6140],r12d
   140001d7a:	jne    0x140001d86
   140001d7c:	cmp    QWORD PTR [rax+0x10],r9
   140001d80:	jbe    0x140001d86
   140001d82:	mov    QWORD PTR [rax+0x10],r9
   140001d86:	cmp    DWORD PTR [rbp+0xa058],0x3
   140001d8d:	jne    0x140001da3
   140001d8f:	mov    rax,QWORD PTR [rsi+0x58]
   140001d93:	cmp    BYTE PTR [rax+0x61bd],r12b
   140001d9a:	je     0x140001da3
   140001d9c:	mov    BYTE PTR [rax+0x61bd],r12b
   140001da3:	cmp    BYTE PTR [rbp+0xa05c],r12b
   140001daa:	je     0x140001dbc
   140001dac:	mov    rax,QWORD PTR [rsi+0x58]
   140001db0:	cmp    BYTE PTR [rax+0x619d],r12b
   140001db7:	mov    dl,r8b
   140001dba:	je     0x140001dbf
   140001dbc:	mov    dl,r12b
   140001dbf:	xor    r8d,r8d
   140001dc2:	lea    rcx,[rsp+0x70]
   140001dc7:	call   0x140007568
   140001dcc:	mov    rax,QWORD PTR [rsi+0x58]
   140001dd0:	cmp    DWORD PTR [rax+0x61c0],r12d
   140001dd7:	je     0x140001e0f
   140001dd9:	cmp    DWORD PTR [rbp+0xa058],0x3
   140001de0:	jne    0x140001e0f
   140001de2:	mov    QWORD PTR [rbp+0x40],r12
   140001de6:	mov    DWORD PTR [rbp+0x48],0x79
   140001ded:	lea    rcx,[rbp-0x20]
   140001df1:	call   0x1400479a4
   140001df6:	lea    rdx,[rsp+0x70]
   140001dfb:	mov    rcx,rsi
   140001dfe:	call   0x140004d9c
   140001e03:	lea    rcx,[rip+0x6a85a]        # 0x14006c664
   140001e0a:	call   0x14001796c
   140001e0f:	mov    rcx,QWORD PTR [rsi+0x60]
   140001e13:	test   rcx,rcx
   140001e16:	je     0x140001e22
   140001e18:	mov    rax,QWORD PTR [rcx]
   140001e1b:	mov    edx,0x1
   140001e20:	call   QWORD PTR [rax]
   140001e22:	test   bl,bl
   140001e24:	je     0x140001e31
   140001e26:	cmp    DWORD PTR [rbp+0x13038],0x3
   140001e2d:	je     0x140001e3e
   140001e2f:	jmp    0x140001e68
   140001e31:	mov    rax,QWORD PTR [rsi+0x58]
   140001e35:	cmp    BYTE PTR [rax+0x61b8],r12b
   140001e3c:	je     0x140001e68
   140001e3e:	mov    ecx,0x6328
   140001e43:	call   0x140055dac
   140001e48:	mov    QWORD PTR [rsp+0x60],rax
   140001e4d:	test   rax,rax
   140001e50:	je     0x140001e63
   140001e52:	lea    rdx,[rsi+0x160]
   140001e59:	mov    rcx,rax
   140001e5c:	call   0x140026794
   140001e61:	jmp    0x140001e66
   140001e63:	mov    rax,r12
   140001e66:	jmp    0x140001e90
   140001e68:	mov    ecx,0x21688
   140001e6d:	call   0x140055dac
   140001e72:	mov    QWORD PTR [rsp+0x60],rax
   140001e77:	test   rax,rax
   140001e7a:	je     0x140001e8d
   140001e7c:	lea    rdx,[rsi+0x160]
   140001e83:	mov    rcx,rax
   140001e86:	call   0x14002aaac
   140001e8b:	jmp    0x140001e90
   140001e8d:	mov    rax,r12
   140001e90:	mov    QWORD PTR [rsi+0x60],rax
   140001e94:	mov    rbx,QWORD PTR [rsi+0x68]
   140001e98:	mov    edi,0xe970
   140001e9d:	test   rbx,rbx
   140001ea0:	je     0x140001eb4
   140001ea2:	mov    rcx,rbx
   140001ea5:	call   0x1400491fc
   140001eaa:	mov    edx,edi
   140001eac:	mov    rcx,rbx
   140001eaf:	call   0x140055de8
   140001eb4:	mov    rcx,rdi
   140001eb7:	call   0x140055dac
   140001ebc:	mov    QWORD PTR [rsp+0x60],rax
   140001ec1:	test   rax,rax
   140001ec4:	je     0x140001ed7
   140001ec6:	lea    rdx,[rsi+0x160]
   140001ecd:	mov    rcx,rax
   140001ed0:	call   0x140049044
   140001ed5:	jmp    0x140001eda
   140001ed7:	mov    rax,r12
   140001eda:	mov    QWORD PTR [rsi+0x68],rax
   140001ede:	mov    rcx,QWORD PTR [rsi+0x60]
   140001ee2:	mov    r8,QWORD PTR [rcx]
   140001ee5:	mov    rax,QWORD PTR [rsi+0x58]
   140001ee9:	mov    edx,DWORD PTR [rax+0x83d0]
   140001eef:	call   QWORD PTR [r8+0x40]
   140001ef3:	mov    rax,QWORD PTR [rsi+0x58]
   140001ef7:	mov    ecx,DWORD PTR [rax+0x83d0]
   140001efd:	mov    rdx,QWORD PTR [rsi+0x68]
   140001f01:	mov    eax,0x8
   140001f06:	cmp    ecx,eax
   140001f08:	cmovb  eax,ecx
   140001f0b:	mov    DWORD PTR [rdx+0x30],eax
   140001f0e:	mov    rax,QWORD PTR [rsi+0x58]
   140001f12:	mov    rbx,QWORD PTR [rax+0x10]
   140001f16:	mov    rdx,rbx
   140001f19:	jmp    0x140001f3a
   140001f1b:	mov    rcx,QWORD PTR [rsi+0x58]
   140001f1f:	mov    rax,QWORD PTR [rcx+0x10]
   140001f23:	cmp    rax,0x100000
   140001f29:	jbe    0x140001f4a
   140001f2b:	shr    rax,1
   140001f2e:	mov    QWORD PTR [rcx+0x10],rax
   140001f32:	mov    rdx,QWORD PTR [rsi+0x58]
   140001f36:	mov    rdx,QWORD PTR [rdx+0x10]
   140001f3a:	mov    rcx,QWORD PTR [rsi+0x60]
   140001f3e:	mov    rax,QWORD PTR [rcx]
   140001f41:	call   QWORD PTR [rax+0x8]
   140001f44:	test   al,al
   140001f46:	je     0x140001f1b
   140001f48:	jmp    0x140001f77
   140001f4a:	xor    eax,eax
   140001f4c:	mov    QWORD PTR [rbp-0x40],rax
   140001f50:	lea    rax,[rip+0x6ab19]        # 0x14006ca70
   140001f57:	mov    QWORD PTR [rbp-0x48],rax
   140001f5b:	lea    rax,[rip+0x6f466]        # 0x1400713c8
   140001f62:	mov    QWORD PTR [rbp-0x50],rax
   140001f66:	lea    rdx,[rip+0x7d8db]        # 0x14007f848
   140001f6d:	lea    rcx,[rbp-0x50]
   140001f71:	call   0x140058734
   140001f76:	int3   
   140001f77:	mov    rax,QWORD PTR [rsi+0x58]
   140001f7b:	mov    rcx,QWORD PTR [rax+0x10]
   140001f7f:	cmp    rbx,rcx
   140001f82:	je     0x140001f9b
   140001f84:	shr    rcx,0x14
   140001f88:	shr    rbx,0x14
   140001f8c:	mov    r8d,ecx
   140001f8f:	mov    edx,ebx
   140001f91:	mov    ecx,0x28
   140001f96:	call   0x1400012a0
   140001f9b:	mov    rcx,QWORD PTR [rsi+0x60]
   140001f9f:	mov    rax,QWORD PTR [rcx]
   140001fa2:	lea    rdx,[rsi+0x8]
   140001fa6:	call   QWORD PTR [rax+0x10]
   140001fa9:	mov    QWORD PTR [rsi+0x40],rsi
   140001fad:	mov    rax,QWORD PTR [rsi+0x58]
   140001fb1:	mov    QWORD PTR [rsi+0x48],rax
   140001fb5:	lea    r12,[rsi+0x160]
   140001fbc:	mov    QWORD PTR [rsi+0x50],r12
   140001fc0:	xor    eax,eax
   140001fc2:	mov    QWORD PTR [rsi+0x38],rax
   140001fc6:	mov    QWORD PTR [rsi+0x10],rax
   140001fca:	lea    rax,[rbp+0xb0b0]
   140001fd1:	mov    QWORD PTR [rsi+0x28],rax
   140001fd5:	lea    rax,[rbp+0x20d0]
   140001fdc:	mov    QWORD PTR [rsi+0x30],rax
   140001fe0:	xor    edi,edi
   140001fe2:	mov    BYTE PTR [rsp+0x40],dil
   140001fe7:	mov    BYTE PTR [rsp+0x50],dil
   140001fec:	cmp    BYTE PTR [rbp+0x1303c],dil
   140001ff3:	je     0x14000203e
   140001ff5:	mov    rax,QWORD PTR [rsi+0x58]
   140001ff9:	movzx  ecx,BYTE PTR [rsp+0x41]
   140001ffe:	cmp    BYTE PTR [rax+0x5130],dil
   140002005:	lea    eax,[rdi+0x1]
   140002008:	cmovne ecx,eax
   14000200b:	test   cl,cl
   14000200d:	je     0x14000201c
   14000200f:	mov    rax,QWORD PTR [rsi+0x78]
   140002013:	add    QWORD PTR [rbp+0xa090],rax
   14000201a:	jmp    0x140002020
   14000201c:	mov    BYTE PTR [rsp+0x40],al
   140002020:	lea    rcx,[rbp+0xb0b0]
   140002027:	call   0x14000c0cc
   14000202c:	mov    rdx,rax
   14000202f:	xor    r8d,r8d
   140002032:	lea    rcx,[rbp+0xb0b0]
   140002039:	call   0x14000a280
   14000203e:	mov    QWORD PTR [rbp-0x50],rdi
   140002042:	mov    QWORD PTR [rbp-0x48],rdi
   140002046:	mov    QWORD PTR [rbp-0x40],rdi
   14000204a:	mov    QWORD PTR [rbp-0x38],rdi
   14000204e:	mov    QWORD PTR [rsp+0x68],rdi
   140002053:	mov    rax,rdi
   140002056:	mov    QWORD PTR [rsp+0x58],rax
   14000205b:	cmp    QWORD PTR [rbp-0x70],rdi
   14000205f:	jbe    0x140002d60
   140002065:	mov    r13d,0x1
   14000206b:	mov    rdx,rax
   14000206e:	lea    rcx,[rsp+0x70]
   140002073:	call   0x140006b9c
   140002078:	movups xmm0,XMMWORD PTR [rax]
   14000207b:	movaps XMMWORD PTR [rbp-0x20],xmm0
   14000207f:	movups xmm1,XMMWORD PTR [rax+0x10]
   140002083:	movaps XMMWORD PTR [rbp-0x10],xmm1
   140002087:	movups xmm2,XMMWORD PTR [rax+0x20]
   14000208b:	movaps XMMWORD PTR [rbp+0x0],xmm2
   14000208f:	movups xmm0,XMMWORD PTR [rax+0x30]
   140002093:	movaps XMMWORD PTR [rbp+0x10],xmm0
   140002097:	movups xmm1,XMMWORD PTR [rax+0x40]
   14000209b:	movaps XMMWORD PTR [rbp+0x20],xmm1
   14000209f:	movups xmm0,XMMWORD PTR [rax+0x50]
   1400020a3:	movaps XMMWORD PTR [rbp+0x30],xmm0
   1400020a7:	psrldq xmm2,0xc
   1400020ac:	movd   r15d,xmm2
   1400020b1:	mov    DWORD PTR [rbp+0xc],r15d
   1400020b5:	test   r15d,r15d
   1400020b8:	je     0x140002d34
   1400020be:	mov    rbx,QWORD PTR [rbp+0x0]
   1400020c2:	mov    r14,QWORD PTR [rbp-0x20]
   1400020c6:	xor    r12d,r12d
   1400020c9:	mov    edi,DWORD PTR [rbp+0x2c]
   1400020cc:	cmp    r15d,0x6
   1400020d0:	je     0x140002c5a
   1400020d6:	cmp    r15d,0x5
   1400020da:	je     0x140002c37
   1400020e0:	cmp    r15d,0x4
   1400020e4:	je     0x140002b02
   1400020ea:	xor    edx,edx
   1400020ec:	lea    rcx,[rbp+0x55c0]
   1400020f3:	call   0x140024480
   1400020f8:	mov    QWORD PTR [rbp+0x1060],r12
   1400020ff:	mov    QWORD PTR [rbp+0x1068],r12
   140002106:	mov    QWORD PTR [rbp+0x1070],r12
   14000210d:	lea    rcx,[rbp+0x10a0]
   140002114:	call   0x14002071c
   140002119:	nop
   14000211a:	cmp    BYTE PTR [rbp+0x39],r12b
   14000211e:	je     0x14000215f
   140002120:	cmp    DWORD PTR [rbp+0xa058],0x3
   140002127:	jne    0x14000215f
   140002129:	mov    edx,0x1
   14000212e:	mov    dil,dl
   140002131:	mov    rax,QWORD PTR [rsi+0x58]
   140002135:	cmp    BYTE PTR [rax+0x61a9],r12b
   14000213c:	je     0x140002167
   14000213e:	lea    rdx,[rbp+0x55c0]
   140002145:	mov    rcx,r14
   140002148:	call   0x14001d234
   14000214d:	mov    eax,DWORD PTR [rbp+0x66c8]
   140002153:	neg    eax
   140002155:	sbb    cl,cl
   140002157:	and    cl,dil
   14000215a:	mov    dil,cl
   14000215d:	jmp    0x140002162
   14000215f:	mov    dil,r12b
   140002162:	mov    edx,0x1
   140002167:	mov    cl,BYTE PTR [rbp+0x38]
   14000216a:	test   cl,cl
   14000216c:	jne    0x14000218b
   14000216e:	test   dil,dil
   140002171:	je     0x140002184
   140002173:	mov    rax,QWORD PTR [rsi+0x58]
   140002177:	xor    edi,edi
   140002179:	cmp    BYTE PTR [rax+0x61a9],dil
   140002180:	jne    0x14000218d
   140002182:	jmp    0x140002186
   140002184:	xor    edi,edi
   140002186:	mov    r13b,dil
   140002189:	jmp    0x1400021a4
   14000218b:	xor    edi,edi
   14000218d:	mov    r13b,dl
   140002190:	test   cl,cl
   140002192:	je     0x1400021a4
   140002194:	mov    rax,QWORD PTR [rsi+0x58]
   140002198:	cmp    DWORD PTR [rax+0x6164],edx
   14000219e:	je     0x1400028e4
   1400021a4:	mov    rax,QWORD PTR [rsi+0x58]
   1400021a8:	cmp    WORD PTR [rax+0x73d0],di
   1400021af:	jne    0x1400021d6
   1400021b1:	mov    r8b,BYTE PTR [rax+0x61a9]
   1400021b8:	lea    rdx,[rbp+0x50]
   1400021bc:	mov    rcx,r14
   1400021bf:	call   0x140023280
   1400021c4:	mov    r12b,al
   1400021c7:	cmp    BYTE PTR [rbp+0x38],dil
   1400021cb:	je     0x1400021df
   1400021cd:	mov    QWORD PTR [rbp+0x1070],rbx
   1400021d4:	jmp    0x1400021df
   1400021d6:	mov    r12b,dil
   1400021d9:	mov    DWORD PTR [rbp+0x10b4],edx
   1400021df:	test   r13b,r13b
   1400021e2:	jne    0x140002353
   1400021e8:	mov    rax,QWORD PTR [rsi+0x58]
   1400021ec:	cmp    WORD PTR [rax+0x73d0],di
   1400021f3:	jne    0x140002353
   1400021f9:	test   r12b,r12b
   1400021fc:	je     0x14000221c
   1400021fe:	mov    al,BYTE PTR [rax+0x61b5]
   140002204:	neg    al
   140002206:	sbb    r8d,r8d
   140002209:	and    r8d,0x4
   14000220d:	mov    rdx,r14
   140002210:	lea    rcx,[rbp+0x10a0]
   140002217:	call   0x140020c80
   14000221c:	cmp    QWORD PTR [rbp+0x10a8],0xffffffffffffffff
   140002224:	jne    0x14000229e
   140002226:	mov    r8,r14
   140002229:	mov    rdx,QWORD PTR [rbp-0x58]
   14000222d:	lea    rcx,[rip+0x9262c]        # 0x140094860
   140002234:	call   0x14001bdcc
   140002239:	mov    rax,QWORD PTR [rbp-0x18]
   14000223d:	sub    QWORD PTR [rbp+0xa090],rax
   140002244:	mov    rdx,QWORD PTR [rsp+0x58]
   140002249:	lea    rcx,[rsp+0x70]
   14000224e:	call   0x140006b9c
   140002253:	mov    DWORD PTR [rax+0x2c],edi
   140002256:	mov    r15d,DWORD PTR [rsp+0x44]
   14000225b:	mov    r13d,0x1
   140002261:	add    r15d,r13d
   140002264:	mov    DWORD PTR [rsp+0x44],r15d
   140002269:	cmp    QWORD PTR [rbp+0x20],rdi
   14000226d:	jle    0x1400028fd
   140002273:	mov    edi,DWORD PTR [rbp+0x2c]
   140002276:	xor    r12d,r12d
   140002279:	test   edi,edi
   14000227b:	jne    0x1400028fb
   140002281:	lea    r15d,[r13+0x3]
   140002285:	mov    DWORD PTR [rbp+0xc],r15d
   140002289:	mov    DWORD PTR [rsi+0x70],r12d
   14000228d:	lea    rcx,[rbp+0x10a0]
   140002294:	call   0x140020758
   140002299:	jmp    0x1400020cc
   14000229e:	test   r12b,r12b
   1400022a1:	je     0x1400022d6
   1400022a3:	mov    rax,QWORD PTR [rbp+0x1060]
   1400022aa:	mov    QWORD PTR [rbp-0x8],rax
   1400022ae:	test   DWORD PTR [rbp+0x1058],0x400
   1400022b8:	je     0x1400022d6
   1400022ba:	cmp    QWORD PTR [rbp+0x1050],rdi
   1400022c1:	jne    0x1400022d6
   1400022c3:	lea    rcx,[rbp+0x10a0]
   1400022ca:	call   0x140020b88
   1400022cf:	mov    QWORD PTR [rbp+0x1050],rax
   1400022d6:	cmp    BYTE PTR [rbp+0x39],dil
   1400022da:	jne    0x140002367
   1400022e0:	mov    rax,QWORD PTR [rsi+0x58]
   1400022e4:	cmp    BYTE PTR [rax+0x61aa],dil
   1400022eb:	je     0x140002367
   1400022ed:	cmp    DWORD PTR [rbp+0xa058],0x3
   1400022f4:	jne    0x140002367
   1400022f6:	mov    rax,QWORD PTR [rsp+0x58]
   1400022fb:	mov    QWORD PTR [rbp-0x30],rax
   1400022ff:	lea    r9,[rbp-0x30]
   140002303:	lea    r8,[rbp-0x50]
   140002307:	lea    rdx,[rbp+0x10a0]
   14000230e:	mov    rcx,rsi
   140002311:	call   0x14000542c
   140002316:	test   al,al
   140002318:	je     0x140002367
   14000231a:	mov    DWORD PTR [rbp+0x66c8],0x4
   140002324:	mov    rdx,QWORD PTR [rbp-0x30]
   140002328:	lea    rcx,[rsp+0x70]
   14000232d:	call   0x140006b9c
   140002332:	mov    rdx,rax
   140002335:	mov    r9d,0x800
   14000233b:	lea    r8,[rbp+0x66cc]
   140002342:	mov    rcx,QWORD PTR [rsi+0x58]
   140002346:	call   0x140005b58
   14000234b:	mov    r13b,0x1
   14000234e:	jmp    0x1400023d4
   140002353:	mov    al,BYTE PTR [rbp+0x39]
   140002356:	neg    al
   140002358:	sbb    rcx,rcx
   14000235b:	and    QWORD PTR [rbp+0x1050],rcx
   140002362:	test   r13b,r13b
   140002365:	jne    0x1400023d4
   140002367:	mov    rdi,QWORD PTR [rbp+0x30]
   14000236b:	cmp    rdi,0xffffffffffffffff
   14000236f:	je     0x1400023d2
   140002371:	cmp    QWORD PTR [rbp+0x10a8],0xffffffffffffffff
   140002379:	je     0x140002387
   14000237b:	lea    rcx,[rbp+0x10a0]
   140002382:	call   0x1400207cc
   140002387:	mov    rdx,rdi
   14000238a:	lea    rcx,[rsp+0x70]
   14000238f:	call   0x140006b9c
   140002394:	mov    ecx,DWORD PTR [rax+0x2c]
   140002397:	sub    ecx,0x2
   14000239a:	cmp    ecx,0x1
   14000239d:	ja     0x1400023d2
   14000239f:	mov    DWORD PTR [rbp+0x66c8],0x5
   1400023a9:	mov    rdx,rdi
   1400023ac:	lea    rcx,[rsp+0x70]
   1400023b1:	call   0x140006b9c
   1400023b6:	mov    rdx,rax
   1400023b9:	mov    r9d,0x800
   1400023bf:	lea    r8,[rbp+0x66cc]
   1400023c6:	mov    rcx,QWORD PTR [rsi+0x58]
   1400023ca:	call   0x140005b58
   1400023cf:	mov    r13b,0x1
   1400023d2:	xor    edi,edi
   1400023d4:	mov    r8,r14
   1400023d7:	mov    edx,0x1
   1400023dc:	lea    rcx,[rip+0x9245d]        # 0x140094840
   1400023e3:	call   0x1400259c8
   1400023e8:	mov    r9d,0x800
   1400023ee:	lea    r8,[rbp+0x55e0]
   1400023f5:	lea    rdx,[rbp-0x20]
   1400023f9:	mov    rcx,QWORD PTR [rsi+0x58]
   1400023fd:	call   0x140005b58
   140002402:	cmp    BYTE PTR [rsp+0x50],dil
   140002407:	je     0x14000247f
   140002409:	lea    rcx,[rbp+0xb0b0]
   140002410:	call   0x14000a30c
   140002415:	mov    rdi,rax
   140002418:	lea    rcx,[rbp+0xb0b0]
   14000241f:	call   0x14000c0cc
   140002424:	mov    rdx,rax
   140002427:	xor    r8d,r8d
   14000242a:	lea    rcx,[rbp+0xb0b0]
   140002431:	call   0x14000a280
   140002436:	mov    BYTE PTR [rsp+0x20],0x0
   14000243b:	mov    r9,QWORD PTR [rsi+0x68]
   14000243f:	mov    r8,rdi
   140002442:	lea    rdx,[rbp+0xb0b0]
   140002449:	mov    rcx,rsi
   14000244c:	call   0x1400063c4
   140002451:	mov    rcx,QWORD PTR [rsi+0x60]
   140002455:	mov    r9,QWORD PTR [rcx]
   140002458:	mov    rax,QWORD PTR [rsi+0x58]
   14000245c:	mov    r8d,DWORD PTR [rax+0x6140]
   140002463:	dec    r8d
   140002466:	mov    rdx,QWORD PTR [rsi+0x68]
   14000246a:	call   QWORD PTR [r9+0x20]
   14000246e:	mov    r9d,0x1
   140002474:	mov    BYTE PTR [rsi+0x84],r9b
   14000247b:	xor    edi,edi
   14000247d:	jmp    0x140002485
   14000247f:	mov    r9d,0x1
   140002485:	mov    BYTE PTR [rsp+0x50],dil
   14000248a:	mov    BYTE PTR [rsp+0x40],dil
   14000248f:	cmp    BYTE PTR [rbp+0xa05c],dil
   140002496:	je     0x1400025af
   14000249c:	mov    r14b,dil
   14000249f:	mov    rax,QWORD PTR [rsi+0x58]
   1400024a3:	mov    r8d,DWORD PTR [rax+0x6154]
   1400024aa:	test   r8b,0x2
   1400024ae:	je     0x1400024cf
   1400024b0:	mov    ecx,DWORD PTR [rax+0x6158]
   1400024b6:	test   ecx,ecx
   1400024b8:	jle    0x1400024cf
   1400024ba:	mov    eax,DWORD PTR [rsp+0x4c]
   1400024be:	test   eax,eax
   1400024c0:	jle    0x1400024cf
   1400024c2:	cdq    
   1400024c3:	idiv   ecx
   1400024c5:	movzx  r14d,dil
   1400024c9:	test   edx,edx
   1400024cb:	cmove  r14d,r9d
   1400024cf:	test   r8b,0x4
   1400024d3:	je     0x140002527
   1400024d5:	lea    rcx,[rbp+0x55e0]
   1400024dc:	call   0x140031bd4
   1400024e1:	mov    rdi,rax
   1400024e4:	test   rax,rax
   1400024e7:	je     0x14000251e
   1400024e9:	lea    rdx,[rbp+0x14090]
   1400024f0:	mov    rcx,rax
   1400024f3:	call   0x140046118
   1400024f8:	movzx  r14d,r14b
   1400024fc:	test   eax,eax
   1400024fe:	mov    eax,0x1
   140002503:	cmovne r14d,eax
   140002507:	lea    r8d,[rax+0x3f]
   14000250b:	mov    rdx,rdi
   14000250e:	lea    rcx,[rbp+0x14090]
   140002515:	call   0x140046158
   14000251a:	xor    edi,edi
   14000251c:	jmp    0x140002527
   14000251e:	xor    edi,edi
   140002520:	mov    WORD PTR [rbp+0x14090],di
   140002527:	mov    rax,QWORD PTR [rsi+0x58]
   14000252b:	mov    r9d,DWORD PTR [rax+0x6154]
   140002532:	test   r9b,0x8
   140002536:	jne    0x140002578
   140002538:	lea    rax,[rbp+0x14110]
   14000253f:	lea    r8,[rbp+0x20f6]
   140002546:	sub    r8,rax
   140002549:	movzx  edx,WORD PTR [rax]
   14000254c:	movzx  ecx,WORD PTR [rax+r8*1]
   140002551:	sub    edx,ecx
   140002553:	jne    0x14000255d
   140002555:	add    rax,0x2
   140002559:	test   ecx,ecx
   14000255b:	jne    0x140002549
   14000255d:	test   edx,edx
   14000255f:	je     0x140002578
   140002561:	test   r9b,0x10
   140002565:	jne    0x140002572
   140002567:	cmp    QWORD PTR [rsp+0x68],0x400000
   140002570:	jle    0x140002578
   140002572:	mov    r14d,0x1
   140002578:	test   r14b,r14b
   14000257b:	je     0x14000259b
   14000257d:	cmp    DWORD PTR [rsp+0x4c],edi
   140002581:	jle    0x14000259b
   140002583:	mov    rcx,QWORD PTR [rsi+0x60]
   140002587:	mov    rax,QWORD PTR [rcx]
   14000258a:	call   QWORD PTR [rax+0x28]
   14000258d:	mov    BYTE PTR [rsi+0x84],dil
   140002594:	mov    QWORD PTR [rsp+0x68],rdi
   140002599:	jmp    0x1400025ab
   14000259b:	mov    rdi,QWORD PTR [rsp+0x68]
   1400025a0:	add    rdi,QWORD PTR [rbp-0x18]
   1400025a4:	mov    QWORD PTR [rsp+0x68],rdi
   1400025a9:	xor    edi,edi
   1400025ab:	mov    r14,QWORD PTR [rbp-0x20]
   1400025af:	mov    r8d,0x800
   1400025b5:	lea    rdx,[rbp+0x20f6]
   1400025bc:	lea    rcx,[rbp+0x14110]
   1400025c3:	call   0x140046158
   1400025c8:	cmp    r15d,0x3
   1400025cc:	sete   r8b
   1400025d0:	mov    BYTE PTR [rsp+0x20],dil
   1400025d5:	xor    r9d,r9d
   1400025d8:	mov    rdx,r14
   1400025db:	lea    r15d,[r9+0x1]
   1400025df:	mov    cl,r15b
   1400025e2:	call   0x14004898c
   1400025e7:	mov    rcx,QWORD PTR [rsi+0x58]
   1400025eb:	cmp    WORD PTR [rcx+0x73d0],di
   1400025f2:	jne    0x140002606
   1400025f4:	cmp    QWORD PTR [rbp+0x1060],rdi
   1400025fb:	je     0x140002606
   1400025fd:	mov    rax,QWORD PTR [rbp+0x1050]
   140002604:	jmp    0x140002625
   140002606:	movabs rax,0x7fffffff7fffffff
   140002610:	mov    QWORD PTR [rbp+0x1050],rax
   140002617:	mov    BYTE PTR [rbp+0x66c1],r15b
   14000261e:	mov    BYTE PTR [rbp+0x665a],r15b
   140002625:	mov    DWORD PTR [rbp+0x55c4],0x2
   14000262f:	mov    QWORD PTR [rbp+0x6620],rax
   140002636:	mov    QWORD PTR [rbp+0x6618],rdi
   14000263d:	cmp    DWORD PTR [rbp+0xa058],0x3
   140002644:	jne    0x14000264e
   140002646:	mov    edi,DWORD PTR [rcx+0x6144]
   14000264c:	jmp    0x140002653
   14000264e:	mov    edi,0x2
   140002653:	mov    edx,edi
   140002655:	lea    rcx,[rbp+0x6630]
   14000265c:	call   0x14002422c
   140002661:	mov    rax,QWORD PTR [rsi+0x58]
   140002665:	xor    r8d,r8d
   140002668:	mov    r15b,BYTE PTR [rbp+0x38]
   14000266c:	cmp    BYTE PTR [rax+0x5130],r8b
   140002673:	je     0x1400026ea
   140002675:	test   r15b,r15b
   140002678:	jne    0x1400026ea
   14000267a:	mov    edx,DWORD PTR [rbp+0xa058]
   140002680:	cmp    edx,0x3
   140002683:	jne    0x1400026c5
   140002685:	lea    edx,[r8+0x10]
   140002689:	lea    rcx,[rbp+0x6671]
   140002690:	call   0x140019168
   140002695:	mov    DWORD PTR [rbp+0x66ac],0xf
   14000269f:	mov    r9d,0x1
   1400026a5:	mov    BYTE PTR [rbp+0x6681],r9b
   1400026ac:	xor    r8d,r8d
   1400026af:	cmp    BYTE PTR [rbp+0xa064],r8b
   1400026b6:	sete   BYTE PTR [rbp+0x668a]
   1400026bd:	mov    edx,DWORD PTR [rbp+0xa058]
   1400026c3:	jmp    0x1400026cb
   1400026c5:	mov    r9d,0x1
   1400026cb:	mov    BYTE PTR [rbp+0x665b],r9b
   1400026d2:	mov    BYTE PTR [rbp+0x6660],r9b
   1400026d9:	movups xmm0,XMMWORD PTR [rbp+0xa072]
   1400026e0:	movdqu XMMWORD PTR [rbp+0x6661],xmm0
   1400026e8:	jmp    0x1400026f6
   1400026ea:	mov    edx,DWORD PTR [rbp+0xa058]
   1400026f0:	mov    r9d,0x1
   1400026f6:	mov    eax,0x1d
   1400026fb:	lea    ecx,[rax+0x15]
   1400026fe:	cmp    edx,0x3
   140002701:	cmove  eax,ecx
   140002704:	mov    BYTE PTR [rbp+0x55d9],al
   14000270a:	mov    rax,QWORD PTR [rsi+0x58]
   14000270e:	mov    rcx,QWORD PTR [rax+0x10]
   140002712:	mov    QWORD PTR [rbp+0x66b8],rcx
   140002719:	mov    BYTE PTR [rbp+0x66b1],r8b
   140002720:	movzx  eax,BYTE PTR [rbp+0x66b0]
   140002727:	cmp    BYTE PTR [rsi+0x84],r8b
   14000272e:	cmovne eax,r9d
   140002732:	mov    BYTE PTR [rbp+0x66b0],al
   140002738:	test   r12b,r12b
   14000273b:	je     0x140002769
   14000273d:	mov    rax,QWORD PTR [rbp+0x1060]
   140002744:	mov    QWORD PTR [rbp+0x6600],rax
   14000274b:	mov    rax,QWORD PTR [rbp+0x1070]
   140002752:	mov    QWORD PTR [rbp+0x6610],rax
   140002759:	mov    rax,QWORD PTR [rbp+0x1068]
   140002760:	mov    QWORD PTR [rbp+0x6608],rax
   140002767:	jmp    0x140002790
   140002769:	lea    rcx,[rbp+0x6600]
   140002770:	call   0x1400476c0
   140002775:	xor    r8d,r8d
   140002778:	mov    QWORD PTR [rbp+0x6610],r8
   14000277f:	mov    QWORD PTR [rbp+0x6608],r8
   140002786:	mov    edx,DWORD PTR [rbp+0xa058]
   14000278c:	lea    r9d,[r8+0x1]
   140002790:	mov    eax,DWORD PTR [rbp-0x10]
   140002793:	mov    DWORD PTR [rbp+0x55dc],eax
   140002799:	cmp    edx,0x2
   14000279c:	je     0x1400027a7
   14000279e:	cmp    DWORD PTR [rbp+0x66c8],r8d
   1400027a5:	jne    0x1400027b1
   1400027a7:	btr    eax,0xa
   1400027ab:	mov    DWORD PTR [rbp+0x55dc],eax
   1400027b1:	mov    BYTE PTR [rbp+0x66b1],r15b
   1400027b8:	mov    r8,QWORD PTR [rsi+0x58]
   1400027bc:	mov    al,BYTE PTR [r8+0x6140]
   1400027c3:	mov    BYTE PTR [rbp+0x55da],al
   1400027c9:	mov    eax,0x80000000
   1400027ce:	cmp    QWORD PTR [rbp+0x6620],rax
   1400027d5:	jg     0x1400027dc
   1400027d7:	cmp    edx,0x3
   1400027da:	jne    0x1400027e3
   1400027dc:	mov    BYTE PTR [rbp+0x66c1],r9b
   1400027e3:	lea    rcx,[rsi+0x2d0]
   1400027ea:	mov    r8d,DWORD PTR [r8+0x83d0]
   1400027f1:	mov    edx,edi
   1400027f3:	call   0x1400241ac
   1400027f8:	xor    r15d,r15d
   1400027fb:	mov    DWORD PTR [rbp+0x66c4],r15d
   140002802:	lea    r8,[rbp+0x20d0]
   140002809:	lea    rdx,[rbp+0x10a0]
   140002810:	lea    r12,[rsi+0x160]
   140002817:	mov    rcx,r12
   14000281a:	call   0x140037588
   14000281f:	lea    r8d,[r15+0x1]
   140002823:	mov    BYTE PTR [rsi+0x1f8],r8b
   14000282a:	mov    QWORD PTR [rsi+0x268],r15
   140002831:	mov    rdi,QWORD PTR [rbp+0x1050]
   140002838:	mov    r8,rdi
   14000283b:	mov    QWORD PTR [rbp+0x6628],rdi
   140002842:	test   r13b,r13b
   140002845:	jne    0x14000294f
   14000284b:	mov    rax,QWORD PTR [rsi+0x58]
   14000284f:	cmp    WORD PTR [rax+0x73d0],r15w
   140002857:	jne    0x14000294f
   14000285d:	lea    r9,[rsp+0x48]
   140002862:	lea    r8,[rsp+0x41]
   140002867:	lea    rdx,[rsp+0x60]
   14000286c:	mov    rcx,r12
   14000286f:	call   0x140037420
   140002874:	xor    edi,edi
   140002876:	cmp    BYTE PTR [rsp+0x41],dil
   14000287b:	je     0x14000290e
   140002881:	mov    r8,r14
   140002884:	mov    rdx,QWORD PTR [rbp-0x58]
   140002888:	lea    rcx,[rip+0x91fd1]        # 0x140094860
   14000288f:	call   0x14001bdcc
   140002894:	mov    rax,QWORD PTR [rbp-0x18]
   140002898:	sub    QWORD PTR [rbp+0xa090],rax
   14000289f:	mov    rdx,QWORD PTR [rsp+0x58]
   1400028a4:	lea    rcx,[rsp+0x70]
   1400028a9:	call   0x140006b9c
   1400028ae:	mov    DWORD PTR [rax+0x2c],edi
   1400028b1:	mov    r15d,DWORD PTR [rsp+0x44]
   1400028b6:	lea    r13d,[rdi+0x1]
   1400028ba:	add    r15d,r13d
   1400028bd:	mov    DWORD PTR [rsp+0x44],r15d
   1400028c2:	cmp    QWORD PTR [rbp+0x20],rdi
   1400028c6:	jle    0x1400028fd
   1400028c8:	lea    r15d,[rdi+0x4]
   1400028cc:	mov    DWORD PTR [rbp+0xc],r15d
   1400028d0:	mov    DWORD PTR [rsi+0x70],edi
   1400028d3:	lea    rcx,[rbp+0x10a0]
   1400028da:	call   0x140020758
   1400028df:	jmp    0x1400020c6
   1400028e4:	lea    rcx,[rbp+0x10a0]
   1400028eb:	call   0x140020758
   1400028f0:	mov    r13d,0x1
   1400028f6:	jmp    0x140002d34
   1400028fb:	xor    edi,edi
   1400028fd:	lea    rcx,[rbp+0x10a0]
   140002904:	call   0x140020758
   140002909:	jmp    0x140002d39
   14000290e:	cmp    BYTE PTR [rsp+0x48],dil
   140002913:	je     0x14000292c
   140002915:	mov    rdi,QWORD PTR [rbp+0x1050]
   14000291c:	cmp    rdi,QWORD PTR [rsp+0x60]
   140002921:	setb   r8b
   140002925:	mov    edx,0x1
   14000292a:	jmp    0x14000293d
   14000292c:	mov    rdi,QWORD PTR [rsp+0x60]
   140002931:	mov    QWORD PTR [rbp+0x1050],rdi
   140002938:	xor    r8d,r8d
   14000293b:	xor    edx,edx
   14000293d:	mov    rcx,rdi
   140002940:	call   0x140003fd0
   140002945:	mov    QWORD PTR [rbp+0x6628],rax
   14000294c:	mov    r8,rax
   14000294f:	inc    DWORD PTR [rsp+0x4c]
   140002953:	cmp    DWORD PTR [rbp+0xa058],0x3
   14000295a:	jne    0x14000299b
   14000295c:	lea    rax,[r8-0x400]
   140002963:	mov    rcx,r15
   140002966:	cmp    r8,0x400
   14000296d:	cmova  rcx,rax
   140002971:	movabs rax,0xcccccccccccccccd
   14000297b:	mul    rcx
   14000297e:	shr    rdx,0x3
   140002982:	lea    rax,[rdx+rdx*8]
   140002986:	cmp    rax,rdi
   140002989:	cmovb  rax,rdi
   14000298d:	cmp    rax,r8
   140002990:	cmova  rax,r8
   140002994:	mov    QWORD PTR [rsi+0x298],rax
   14000299b:	mov    edi,0x1
   1400029a0:	test   BYTE PTR [rbp+0x28],dil
   1400029a4:	jne    0x1400029b6
   1400029a6:	mov    rax,QWORD PTR [rsi+0x58]
   1400029aa:	cmp    DWORD PTR [rax+0x6140],r15d
   1400029b1:	mov    bl,r15b
   1400029b4:	jne    0x1400029b9
   1400029b6:	mov    bl,dil
   1400029b9:	test   r13b,r13b
   1400029bc:	jne    0x1400029c2
   1400029be:	test   bl,bl
   1400029c0:	je     0x1400029f6
   1400029c2:	mov    BYTE PTR [rbp+0x55da],r15b
   1400029c9:	mov    rax,QWORD PTR [rsi+0x58]
   1400029cd:	cmp    BYTE PTR [rax+0x5130],r15b
   1400029d4:	jne    0x1400029f2
   1400029d6:	movzx  eax,BYTE PTR [rbp+0x55d9]
   1400029dd:	mov    ecx,0x14
   1400029e2:	cmp    DWORD PTR [rbp+0xa058],0x3
   1400029e9:	cmovne eax,ecx
   1400029ec:	mov    BYTE PTR [rbp+0x55d9],al
   1400029f2:	test   bl,bl
   1400029f4:	jne    0x140002a11
   1400029f6:	mov    rcx,QWORD PTR [rsi+0x60]
   1400029fa:	mov    rax,QWORD PTR [rcx]
   1400029fd:	call   QWORD PTR [rax+0x38]
   140002a00:	mov    eax,eax
   140002a02:	add    rax,QWORD PTR [rbp+0x6620]
   140002a09:	cmp    rax,0x8000
   140002a0f:	jle    0x140002a1b
   140002a11:	mov    rcx,QWORD PTR [rsi+0x60]
   140002a15:	mov    rax,QWORD PTR [rcx]
   140002a18:	call   QWORD PTR [rax+0x28]
   140002a1b:	mov    BYTE PTR [rsp+0x28],r13b
   140002a20:	mov    BYTE PTR [rsp+0x20],dil
   140002a25:	mov    r9,r14
   140002a28:	mov    r8,QWORD PTR [rsi+0x60]
   140002a2c:	lea    rdx,[rbp+0x10a0]
   140002a33:	lea    rdi,[rsi+0x8]
   140002a37:	mov    rcx,rdi
   140002a3a:	call   0x1400061cc
   140002a3f:	test   r13b,r13b
   140002a42:	jne    0x140002aa9
   140002a44:	test   bl,bl
   140002a46:	je     0x140002a6b
   140002a48:	xor    edx,edx
   140002a4a:	mov    rcx,rdi
   140002a4d:	call   0x140006644
   140002a52:	mov    rcx,r12
   140002a55:	call   0x1400067c8
   140002a5a:	xor    edx,edx
   140002a5c:	mov    rcx,rdi
   140002a5f:	call   0x1400049a0
   140002a64:	and    QWORD PTR [rdi+0x8],0x0
   140002a69:	jmp    0x140002aa9
   140002a6b:	mov    rcx,QWORD PTR [rsi+0x60]
   140002a6f:	mov    rax,QWORD PTR [rsi+0x58]
   140002a73:	mov    r10,QWORD PTR [rcx]
   140002a76:	lea    r9,[rax+0x62fc]
   140002a7d:	mov    r8d,DWORD PTR [rax+0x6140]
   140002a84:	mov    ebx,0x1
   140002a89:	sub    r8d,ebx
   140002a8c:	mov    dl,BYTE PTR [rsi+0x84]
   140002a92:	call   QWORD PTR [r10+0x18]
   140002a96:	xor    edi,edi
   140002a98:	cmp    BYTE PTR [rbp+0xa05c],dil
   140002a9f:	je     0x140002ab4
   140002aa1:	mov    BYTE PTR [rsi+0x84],bl
   140002aa7:	jmp    0x140002aab
   140002aa9:	xor    edi,edi
   140002aab:	cmp    BYTE PTR [rbp+0xa05c],dil
   140002ab2:	jne    0x140002abe
   140002ab4:	mov    rcx,QWORD PTR [rsi+0x60]
   140002ab8:	mov    rax,QWORD PTR [rcx]
   140002abb:	call   QWORD PTR [rax+0x28]
   140002abe:	call   0x140046bb4
   140002ac3:	mov    ecx,0xd20
   140002ac8:	call   0x140040118
   140002acd:	mov    r8,rax
   140002ad0:	mov    rax,QWORD PTR [rsi+0x58]
   140002ad4:	lea    rcx,[rip+0x69bb9]        # 0x14006c694
   140002adb:	lea    rdx,[rip+0x69bde]        # 0x14006c6c0
   140002ae2:	cmp    BYTE PTR [rax+0x6150],dil
   140002ae9:	cmovne rdx,rcx
   140002aed:	lea    rcx,[rip+0x69bdc]        # 0x14006c6d0
   140002af4:	call   0x14001796c
   140002af9:	mov    QWORD PTR [rsi+0x38],rdi
   140002afd:	jmp    0x1400028e4
   140002b02:	cmp    BYTE PTR [rbp+0x1303c],r12b
   140002b09:	je     0x140002b62
   140002b0b:	mov    al,BYTE PTR [rsp+0x40]
   140002b0f:	test   al,al
   140002b11:	jne    0x140002b62
   140002b13:	mov    BYTE PTR [rsp+0x20],r12b
   140002b18:	mov    r9,QWORD PTR [rsi+0x68]
   140002b1c:	mov    r8,QWORD PTR [rbp+0x20]
   140002b20:	lea    rdx,[rbp+0xb0b0]
   140002b27:	mov    rcx,rsi
   140002b2a:	call   0x1400063c4
   140002b2f:	mov    DWORD PTR [rsp+0x30],edi
   140002b33:	xor    edi,edi
   140002b35:	mov    BYTE PTR [rsp+0x28],dil
   140002b3a:	mov    rax,QWORD PTR [rsi+0x68]
   140002b3e:	mov    QWORD PTR [rsp+0x20],rax
   140002b43:	mov    r9,QWORD PTR [rsi+0x60]
   140002b47:	lea    r8,[rbp+0x20d0]
   140002b4e:	lea    rdx,[rbp+0xb0b0]
   140002b55:	mov    rcx,rsi
   140002b58:	call   0x140005d8c
   140002b5d:	jmp    0x140002c2d
   140002b62:	mov    rcx,QWORD PTR [rsi+0x60]
   140002b66:	mov    rax,QWORD PTR [rcx]
   140002b69:	call   QWORD PTR [rax+0x28]
   140002b6c:	xor    r8d,r8d
   140002b6f:	mov    rdx,QWORD PTR [rbp+0x20]
   140002b73:	lea    rcx,[rbp+0xb0b0]
   140002b7a:	call   0x14000a280
   140002b7f:	lea    rcx,[rbp+0xb0b0]
   140002b86:	call   0x14000e334
   140002b8b:	lea    rdx,[rbp+0xe5a0]
   140002b92:	lea    rcx,[rbp+0x55c0]
   140002b99:	call   0x1400243b8
   140002b9e:	test   edi,edi
   140002ba0:	je     0x140002bb4
   140002ba2:	mov    r8d,edi
   140002ba5:	lea    rdx,[rbp+0x55c0]
   140002bac:	mov    rcx,rsi
   140002baf:	call   0x1400062a4
   140002bb4:	lea    rcx,[rbp+0xb0b0]
   140002bbb:	call   0x14000c120
   140002bc0:	mov    r12d,DWORD PTR [rsp+0x50]
   140002bc5:	movzx  r12d,r12b
   140002bc9:	movzx  ecx,BYTE PTR [rbp+0x1303c]
   140002bd0:	xor    edi,edi
   140002bd2:	test   al,al
   140002bd4:	cmove  r12d,ecx
   140002bd8:	mov    DWORD PTR [rsp+0x50],r12d
   140002bdd:	test   r12b,r12b
   140002be0:	je     0x140002bff
   140002be2:	mov    rax,QWORD PTR [rsi+0x58]
   140002be6:	mov    rcx,QWORD PTR [rax+0x10]
   140002bea:	mov    rax,QWORD PTR [rbp+0x66b8]
   140002bf1:	cmp    rcx,rax
   140002bf4:	cmova  rax,rcx
   140002bf8:	mov    QWORD PTR [rbp+0x66b8],rax
   140002bff:	mov    BYTE PTR [rsp+0x20],dil
   140002c04:	xor    r9d,r9d
   140002c07:	xor    r8d,r8d
   140002c0a:	lea    edx,[r9+0x2]
   140002c0e:	lea    rcx,[rbp+0x20d0]
   140002c15:	call   0x14000b340
   140002c1a:	lea    rdx,[rbp+0xb0b0]
   140002c21:	lea    rcx,[rbp+0x20d0]
   140002c28:	call   0x1400084a8
   140002c2d:	call   0x140046bb4
   140002c32:	jmp    0x140002d34
   140002c37:	xor    edi,edi
   140002c39:	test   r14,r14
   140002c3c:	je     0x140002c53
   140002c3e:	mov    ecx,0xd9a
   140002c43:	call   0x140040118
   140002c48:	mov    rcx,rax
   140002c4b:	mov    rdx,r14
   140002c4e:	call   0x14001796c
   140002c53:	add    DWORD PTR [rsp+0x54],r13d
   140002c58:	jmp    0x140002c2d
   140002c5a:	mov    rcx,QWORD PTR [rsi+0x60]
   140002c5e:	mov    rax,QWORD PTR [rcx]
   140002c61:	call   QWORD PTR [rax+0x28]
   140002c64:	xor    r8d,r8d
   140002c67:	mov    rdx,QWORD PTR [rbp+0x20]
   140002c6b:	lea    rcx,[rbp+0xb0b0]
   140002c72:	call   0x14000a280
   140002c77:	lea    rcx,[rbp+0xb0b0]
   140002c7e:	call   0x14000e334
   140002c83:	mov    edx,DWORD PTR [rbp+0xd384]
   140002c89:	lea    eax,[rdx-0x2]
   140002c8c:	cmp    eax,r13d
   140002c8f:	jbe    0x140002cdc
   140002c91:	mov    al,BYTE PTR [rbp+0xa064]
   140002c97:	cmp    BYTE PTR [rbp+0x13044],al
   140002c9d:	jne    0x140002d32
   140002ca3:	xor    r8d,r8d
   140002ca6:	mov    rdx,QWORD PTR [rbp+0x13028]
   140002cad:	lea    rcx,[rbp+0xb0b0]
   140002cb4:	call   0x14000a280
   140002cb9:	mov    r8,QWORD PTR [rbp+0x13030]
   140002cc0:	sub    r8,QWORD PTR [rbp+0x13028]
   140002cc7:	lea    rdx,[rbp+0x20d0]
   140002cce:	lea    rcx,[rbp+0xb0b0]
   140002cd5:	call   0x140020834
   140002cda:	jmp    0x140002d32
   140002cdc:	lea    r8,[rbp+0xe5a0]
   140002ce3:	lea    rax,[rbp+0x108f8]
   140002cea:	cmp    edx,0x2
   140002ced:	cmovne r8,rax
   140002cf1:	xor    edi,edi
   140002cf3:	mov    BYTE PTR [rsp+0x20],dil
   140002cf8:	xor    r9d,r9d
   140002cfb:	lea    rcx,[rbp+0x20d0]
   140002d02:	call   0x14000b340
   140002d07:	lea    rcx,[rbp+0xb0b0]
   140002d0e:	call   0x14000a30c
   140002d13:	mov    r8,QWORD PTR [rbp+0x13030]
   140002d1a:	sub    r8,rax
   140002d1d:	lea    rdx,[rbp+0x20d0]
   140002d24:	lea    rcx,[rbp+0xb0b0]
   140002d2b:	call   0x140020834
   140002d30:	jmp    0x140002d34
   140002d32:	xor    edi,edi
   140002d34:	mov    r15d,DWORD PTR [rsp+0x44]
   140002d39:	mov    rax,QWORD PTR [rsp+0x58]
   140002d3e:	add    rax,r13
   140002d41:	mov    QWORD PTR [rsp+0x58],rax
   140002d46:	cmp    rax,QWORD PTR [rbp-0x70]
   140002d4a:	jb     0x14000206b
   140002d50:	mov    r14,QWORD PTR [rbp-0x58]
   140002d54:	lea    r12,[rsi+0x160]
   140002d5b:	mov    r13d,DWORD PTR [rsp+0x4c]
   140002d60:	mov    rcx,QWORD PTR [rsi+0x60]
   140002d64:	mov    rax,QWORD PTR [rcx]
   140002d67:	call   QWORD PTR [rax+0x28]
   140002d6a:	mov    rcx,QWORD PTR [rsi+0x60]
   140002d6e:	test   rcx,rcx
   140002d71:	je     0x140002d7d
   140002d73:	mov    rax,QWORD PTR [rcx]
   140002d76:	mov    edx,0x1
   140002d7b:	call   QWORD PTR [rax]
   140002d7d:	mov    QWORD PTR [rsi+0x60],rdi
   140002d81:	mov    rbx,QWORD PTR [rsi+0x68]
   140002d85:	test   rbx,rbx
   140002d88:	je     0x140002d9f
   140002d8a:	mov    rcx,rbx
   140002d8d:	call   0x1400491fc
   140002d92:	mov    edx,0xe970
   140002d97:	mov    rcx,rbx
   140002d9a:	call   0x140055de8
   140002d9f:	mov    QWORD PTR [rsi+0x68],rdi
   140002da3:	lea    rcx,[rbp-0x50]
   140002da7:	call   0x140009a60
   140002dac:	test   r13d,r13d
   140002daf:	jle    0x140002db9
   140002db1:	mov    rcx,r12
   140002db4:	call   0x1400375f0
   140002db9:	test   r15d,r15d
   140002dbc:	jle    0x140002e03
   140002dbe:	mov    edx,0x6
   140002dc3:	lea    rcx,[rip+0x91a96]        # 0x140094860
   140002dca:	call   0x14001bf08
   140002dcf:	mov    eax,0x1
   140002dd4:	cmp    r15d,eax
   140002dd7:	mov    ecx,0xd4a
   140002ddc:	jg     0x140002de3
   140002dde:	mov    ecx,0xd4c
   140002de3:	call   0x140040118
   140002de8:	mov    rbx,rax
   140002deb:	mov    ecx,0xd48
   140002df0:	call   0x140040118
   140002df5:	mov    rcx,rax
   140002df8:	mov    r8,rbx
   140002dfb:	mov    edx,r15d
   140002dfe:	call   0x14001796c
   140002e03:	test   r13d,r13d
   140002e06:	jne    0x140002e63
   140002e08:	cmp    DWORD PTR [rsp+0x54],edi
   140002e0c:	jne    0x140002e63
   140002e0e:	mov    ecx,0xd4e
   140002e13:	call   0x140040118
   140002e18:	mov    rcx,rax
   140002e1b:	call   0x14001796c
   140002e20:	cmp    DWORD PTR [rip+0x91a39],0x6        # 0x140094860
   140002e27:	jne    0x140002e2e
   140002e29:	test   r15d,r15d
   140002e2c:	jne    0x140002e3f
   140002e2e:	mov    edx,0xa
   140002e33:	lea    rcx,[rip+0x91a26]        # 0x140094860
   140002e3a:	call   0x14001bf08
   140002e3f:	lea    rcx,[rbp+0x20d0]
   140002e46:	call   0x140020a90
   140002e4b:	nop
   140002e4c:	mov    rcx,QWORD PTR [rbp-0x50]
   140002e50:	test   rcx,rcx
   140002e53:	je     0x140001c2c
   140002e59:	call   0x14005a938
   140002e5e:	jmp    0x140001c2c
   140002e63:	lea    rcx,[rbp+0x20d0]
   140002e6a:	cmp    BYTE PTR [rsp+0x49],dil
   140002e6f:	je     0x140002e7f
   140002e71:	lea    rdx,[rbp+0xb0b0]
   140002e78:	call   0x14000a340
   140002e7d:	jmp    0x140002e86
   140002e7f:	xor    edx,edx
   140002e81:	call   0x140008378
   140002e86:	lea    r8,[rbp+0x20f6]
   140002e8d:	xor    edx,edx
   140002e8f:	lea    rcx,[rip+0x919aa]        # 0x140094840
   140002e96:	call   0x1400259c8
   140002e9b:	lea    rdx,[rbp+0x20f6]
   140002ea2:	mov    ecx,0x89
   140002ea7:	call   0x1400013b0
   140002eac:	mov    rdx,QWORD PTR [rsi+0x58]
   140002eb0:	add    rdx,0x63bc
   140002eb7:	cmp    WORD PTR [rdx],di
   140002eba:	je     0x140002ee9
   140002ebc:	mov    eax,0x40
   140002ec1:	cmp    WORD PTR [rdx],ax
   140002ec4:	cmove  rdx,rdi
   140002ec8:	lea    rcx,[rbp+0x20f6]
   140002ecf:	call   0x14004651c
   140002ed4:	test   al,al
   140002ed6:	jne    0x140002ee9
   140002ed8:	mov    edx,0x2
   140002edd:	lea    rcx,[rip+0x9197c]        # 0x140094860
   140002ee4:	call   0x14001bc60
   140002ee9:	mov    rax,QWORD PTR [rsi+0x58]
   140002eed:	cmp    BYTE PTR [rax+0x615c],dil
   140002ef4:	je     0x140002f06
   140002ef6:	mov    r8,r14
   140002ef9:	lea    rdx,[rsp+0x70]
   140002efe:	mov    rcx,rsi
   140002f01:	call   0x1400033a4
   140002f06:	lea    rbx,[rbp+0xa0a2]
   140002f0d:	lea    rax,[rbp+0x20f6]
   140002f14:	cmp    WORD PTR [rbp+0xa0a2],di
   140002f1b:	cmove  rbx,rax
   140002f1f:	mov    rcx,QWORD PTR [rsi+0x58]
   140002f23:	add    rcx,0x9402
   140002f2a:	mov    r8d,0x800
   140002f30:	mov    rdx,rbx
   140002f33:	call   0x140046158
   140002f38:	mov    rax,QWORD PTR [rsi+0x58]
   140002f3c:	cmp    BYTE PTR [rax+0x62f9],dil
   140002f43:	je     0x140002f58
   140002f45:	mov    rdx,rbx
   140002f48:	mov    rcx,rsi
   140002f4b:	call   0x140006844
   140002f50:	test   al,al
   140002f52:	je     0x140002e4c
   140002f58:	mov    rax,QWORD PTR [rsi+0x58]
   140002f5c:	cmp    WORD PTR [rax+0x83e2],0x4d
   140002f64:	je     0x140002f6f
   140002f66:	cmp    BYTE PTR [rax+0x61b6],dil
   140002f6d:	je     0x140002f86
   140002f6f:	mov    r9d,r15d
   140002f72:	lea    r8,[rbp+0x20f6]
   140002f79:	lea    rdx,[rsp+0x70]
   140002f7e:	mov    rcx,rsi
   140002f81:	call   0x140004040
   140002f86:	cmp    BYTE PTR [rbp+0xa05d],dil
   140002f8d:	je     0x140002fac
   140002f8f:	mov    rcx,QWORD PTR [rsi+0x58]
   140002f93:	cmp    DWORD PTR [rcx+0x614c],edi
   140002f99:	je     0x140002fac
   140002f9b:	lea    rdx,[rbp+0xa0a2]
   140002fa2:	call   0x1400392d0
   140002fa7:	jmp    0x140002e4c
   140002fac:	mov    rax,QWORD PTR [rsi+0x58]
   140002fb0:	cmp    BYTE PTR [rax+0x6152],dil
   140002fb7:	jne    0x140002e4c
   140002fbd:	mov    ecx,0xd22
   140002fc2:	call   0x140040118
   140002fc7:	mov    rcx,rax
   140002fca:	call   0x14001796c
   140002fcf:	jmp    0x140002e4c
   140002fd4:	cmp    ecx,0x3
   140002fd7:	jne    0x140002fed
   140002fd9:	mov    QWORD PTR [rbp+0x40],r12
   140002fdd:	mov    DWORD PTR [rbp+0x48],0x79
   140002fe4:	lea    rcx,[rbp-0x20]
   140002fe8:	call   0x1400479a4
   140002fed:	lea    rdx,[rsp+0x70]
   140002ff2:	mov    rcx,rsi
   140002ff5:	call   0x140004d9c
   140002ffa:	nop
   140002ffb:	lea    rcx,[rsp+0x70]
   140003000:	call   0x140006b44
   140003005:	mov    rcx,QWORD PTR [rbp+0x15110]
   14000300c:	xor    rcx,rsp
   14000300f:	call   0x140055f90
   140003014:	mov    rbx,QWORD PTR [rsp+0x15278]
   14000301c:	add    rsp,0x15220
   140003023:	pop    r15
   140003025:	pop    r14
   140003027:	pop    r13
   140003029:	pop    r12
   14000302b:	pop    rdi
   14000302c:	pop    rsi
   14000302d:	pop    rbp
   14000302e:	ret    
   14000302f:	int3   
   140003030:	rex push rbp
   140003032:	push   rbx
   140003033:	push   rsi
   140003034:	push   rdi
   140003035:	push   r14
   140003037:	lea    rbp,[rsp-0xba0]
   14000303f:	sub    rsp,0xca0
   140003046:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   14000304f:	mov    rax,QWORD PTR [rip+0x7ee8a]        # 0x140081ee0
   140003056:	xor    rax,rsp
   140003059:	mov    QWORD PTR [rbp+0xb90],rax
   140003060:	mov    r14,r8
   140003063:	mov    rsi,rdx
   140003066:	mov    rdi,rcx
   140003069:	mov    rax,QWORD PTR [rcx+0x58]
   14000306d:	mov    ebx,DWORD PTR [rax+0x83d0]
   140003073:	lea    rcx,[rsp+0x50]
   140003078:	call   0x140001584
   14000307d:	lea    rcx,[rsp+0x50]
   140003082:	call   0x14001017c
   140003087:	mov    rax,QWORD PTR [rdi]
   14000308a:	mov    QWORD PTR [rbp+0xb78],rax
   140003091:	mov    DWORD PTR [rbp+0xb80],ebx
   140003097:	and    QWORD PTR [rsp+0x20],0x0
   14000309d:	and    QWORD PTR [rsp+0x28],0x0
   1400030a3:	and    QWORD PTR [rsp+0x30],0x0
   1400030a9:	and    QWORD PTR [rsp+0x38],0x0
   1400030af:	mov    edx,0x100000
   1400030b4:	lea    rcx,[rsp+0x20]
   1400030b9:	call   0x140001858
   1400030be:	nop
   1400030bf:	mov    rbx,QWORD PTR [rsp+0x20]
   1400030c4:	jmp    0x1400030db
   1400030c6:	call   0x140046bb4
   1400030cb:	movsxd r8,edi
   1400030ce:	mov    rdx,rbx
   1400030d1:	lea    rcx,[rsp+0x50]
   1400030d6:	call   0x1400101fc
   1400030db:	mov    rax,QWORD PTR [rsi]
   1400030de:	mov    r8,QWORD PTR [rsp+0x28]
   1400030e3:	mov    rdx,rbx
   1400030e6:	mov    rcx,rsi
   1400030e9:	call   QWORD PTR [rax+0x10]
   1400030ec:	test   eax,eax
   1400030ee:	mov    edi,eax
   1400030f0:	jg     0x1400030c6
   1400030f2:	mov    rdx,r14
   1400030f5:	lea    rcx,[rsp+0x50]
   1400030fa:	call   0x140010098
   1400030ff:	nop
   140003100:	test   rbx,rbx
   140003103:	je     0x14000310d
   140003105:	mov    rcx,rbx
   140003108:	call   0x14005a938
   14000310d:	mov    rcx,QWORD PTR [rbp+0xb90]
   140003114:	xor    rcx,rsp
   140003117:	call   0x140055f90
   14000311c:	add    rsp,0xca0
   140003123:	pop    r14
   140003125:	pop    rdi
   140003126:	pop    rsi
   140003127:	pop    rbx
   140003128:	pop    rbp
   140003129:	ret    
   14000312a:	int3   
   14000312b:	int3   
   14000312c:	mov    QWORD PTR [rsp+0x8],rbx
   140003131:	mov    QWORD PTR [rsp+0x18],rbp
   140003136:	mov    QWORD PTR [rsp+0x20],rsi
   14000313b:	push   rdi
   14000313c:	mov    eax,0x1030
   140003141:	call   0x140055f20
   140003146:	sub    rsp,rax
   140003149:	mov    rax,QWORD PTR [rip+0x7ed90]        # 0x140081ee0
   140003150:	xor    rax,rsp
   140003153:	mov    QWORD PTR [rsp+0x1020],rax
   14000315b:	mov    rcx,rdx
   14000315e:	mov    rbx,rdx
   140003161:	call   0x140020b88
   140003166:	mov    r9,QWORD PTR [rbx]
   140003169:	lea    rdx,[rsp+0x20]
   14000316e:	mov    ebp,0x1000
   140003173:	mov    rcx,rbx
   140003176:	mov    r8d,ebp
   140003179:	mov    rsi,rax
   14000317c:	call   QWORD PTR [r9+0x10]
   140003180:	movsxd r8,eax
   140003183:	lea    rdx,[rsp+0x20]
   140003188:	or     ecx,0xffffffff
   14000318b:	call   0x140017ac0
   140003190:	mov    edi,eax
   140003192:	cmp    rsi,rbp
   140003195:	jbe    0x14000320b
   140003197:	cmp    rsi,0x2000
   14000319e:	jbe    0x1400031d6
   1400031a0:	mov    r9,QWORD PTR [rbx]
   1400031a3:	mov    rdx,rsi
   1400031a6:	shr    rdx,1
   1400031a9:	xor    r8d,r8d
   1400031ac:	mov    rcx,rbx
   1400031af:	call   QWORD PTR [r9+0x18]
   1400031b3:	mov    r9,QWORD PTR [rbx]
   1400031b6:	lea    rdx,[rsp+0x20]
   1400031bb:	mov    r8d,ebp
   1400031be:	mov    rcx,rbx
   1400031c1:	call   QWORD PTR [r9+0x10]
   1400031c5:	movsxd r8,eax
   1400031c8:	lea    rdx,[rsp+0x20]
   1400031cd:	mov    ecx,edi
   1400031cf:	call   0x140017ac0
   1400031d4:	mov    edi,eax
   1400031d6:	mov    rax,QWORD PTR [rbx]
   1400031d9:	lea    rdx,[rsi-0x1000]
   1400031e0:	xor    r8d,r8d
   1400031e3:	mov    rcx,rbx
   1400031e6:	call   QWORD PTR [rax+0x18]
   1400031e9:	mov    rax,QWORD PTR [rbx]
   1400031ec:	lea    rdx,[rsp+0x20]
   1400031f1:	mov    r8,rbp
   1400031f4:	mov    rcx,rbx
   1400031f7:	call   QWORD PTR [rax+0x10]
   1400031fa:	movsxd r8,eax
   1400031fd:	lea    rdx,[rsp+0x20]
   140003202:	mov    ecx,edi
   140003204:	call   0x140017ac0
   140003209:	mov    edi,eax
   14000320b:	mov    eax,edi
   14000320d:	mov    rcx,QWORD PTR [rsp+0x1020]
   140003215:	xor    rcx,rsp
   140003218:	call   0x140055f90
   14000321d:	lea    r11,[rsp+0x1030]
   140003225:	mov    rbx,QWORD PTR [r11+0x10]
   140003229:	mov    rbp,QWORD PTR [r11+0x20]
   14000322d:	mov    rsi,QWORD PTR [r11+0x28]
   140003231:	mov    rsp,r11
   140003234:	pop    rdi
   140003235:	ret    
   140003236:	int3   
   140003237:	int3   
   140003238:	mov    QWORD PTR [rsp+0x8],rbx
   14000323d:	mov    QWORD PTR [rsp+0x10],rsi
   140003242:	push   rdi
   140003243:	sub    rsp,0x30
   140003247:	mov    rbx,r8
   14000324a:	mov    rsi,rdx
   14000324d:	mov    rdi,rcx
   140003250:	test   rdx,rdx
   140003253:	je     0x140003306
   140003259:	mov    ecx,DWORD PTR [r8+0x1008]
   140003260:	call   0x1400221f0
   140003265:	test   al,al
   140003267:	jne    0x140003302
   14000326d:	mov    rcx,QWORD PTR [rdi+0x58]
   140003271:	mov    eax,DWORD PTR [rbx+0x1008]
   140003277:	test   DWORD PTR [rcx],eax
   140003279:	jne    0x140003302
   14000327f:	cmp    BYTE PTR [rcx+0x8],0x0
   140003283:	je     0x14000328a
   140003285:	test   DWORD PTR [rcx+0x4],eax
   140003288:	je     0x140003302
   14000328a:	mov    r8b,BYTE PTR [rbx+0x100c]
   140003291:	mov    r9b,0x1
   140003294:	mov    rdx,rbx
   140003297:	mov    BYTE PTR [rsp+0x20],0x1
   14000329c:	call   0x140013da8
   1400032a1:	test   al,al
   1400032a3:	jne    0x140003302
   1400032a5:	mov    rcx,QWORD PTR [rdi+0x58]
   1400032a9:	lea    rdx,[rbx+0x1010]
   1400032b0:	call   0x1400166c4
   1400032b5:	test   al,al
   1400032b7:	jne    0x140003302
   1400032b9:	cmp    BYTE PTR [rbx+0x100c],al
   1400032bf:	jne    0x1400032d5
   1400032c1:	mov    rdx,QWORD PTR [rbx+0x1000]
   1400032c8:	mov    rcx,QWORD PTR [rdi+0x58]
   1400032cc:	call   0x140016644
   1400032d1:	test   al,al
   1400032d3:	jne    0x140003302
   1400032d5:	mov    rdx,rbx
   1400032d8:	mov    rcx,rsi
   1400032db:	call   0x1400217a8
   1400032e0:	test   al,al
   1400032e2:	jne    0x140003302
   1400032e4:	cmp    BYTE PTR [rbx+0x100c],al
   1400032ea:	jne    0x140003306
   1400032ec:	mov    rax,QWORD PTR [rdi+0x58]
   1400032f0:	cmp    BYTE PTR [rax+0x615d],0x0
   1400032f7:	je     0x140003306
   1400032f9:	test   BYTE PTR [rbx+0x1008],0x20
   140003300:	jne    0x140003306
   140003302:	xor    al,al
   140003304:	jmp    0x140003308
   140003306:	mov    al,0x1
   140003308:	mov    rbx,QWORD PTR [rsp+0x40]
   14000330d:	mov    rsi,QWORD PTR [rsp+0x48]
   140003312:	add    rsp,0x30
   140003316:	pop    rdi
   140003317:	ret    
   140003318:	rex push rbx
   14000331a:	sub    rsp,0x20
   14000331e:	mov    ecx,DWORD PTR [rdx+0x7f88]
   140003324:	mov    rbx,rdx
   140003327:	cmp    ecx,0x2
   14000332a:	jne    0x140003338
   14000332c:	mov    al,BYTE PTR [rdx+0x3509]
   140003332:	sub    al,0xd
   140003334:	cmp    al,0x10
   140003336:	ja     0x140003346
   140003338:	cmp    ecx,0x3
   14000333b:	jne    0x14000336c
   14000333d:	cmp    BYTE PTR [rdx+0x3509],0x32
   140003344:	jbe    0x14000336c
   140003346:	lea    r8,[rdx+0x3510]
   14000334d:	mov    ecx,0x2a
   140003352:	add    rdx,0x26
   140003356:	call   0x140001358
   14000335b:	mov    edx,0x2
   140003360:	lea    rcx,[rip+0x914f9]        # 0x140094860
   140003367:	call   0x14001bc60
   14000336c:	cmp    DWORD PTR [rbx+0x7f88],0x2
   140003373:	jne    0x14000339d
   140003375:	cmp    BYTE PTR [rbx+0x3509],0xf
   14000337c:	jne    0x14000339d
   14000337e:	lea    rdx,[rbx+0x26]
   140003382:	mov    ecx,0x2b
   140003387:	call   0x1400013b0
   14000338c:	mov    edx,0x2
   140003391:	lea    rcx,[rip+0x914c8]        # 0x140094860
   140003398:	call   0x14001bc60
   14000339d:	add    rsp,0x20
   1400033a1:	pop    rbx
   1400033a2:	ret    
   1400033a3:	int3   
   1400033a4:	mov    QWORD PTR [rsp+0x20],rbx
   1400033a9:	push   rbp
   1400033aa:	push   rsi
   1400033ab:	push   rdi
   1400033ac:	push   r14
   1400033ae:	push   r15
   1400033b0:	mov    eax,0x10f0
   1400033b5:	call   0x140055f20
   1400033ba:	sub    rsp,rax
   1400033bd:	mov    rax,QWORD PTR [rip+0x7eb1c]        # 0x140081ee0
   1400033c4:	xor    rax,rsp
   1400033c7:	mov    QWORD PTR [rsp+0x10e0],rax
   1400033cf:	mov    rax,QWORD PTR [rcx+0x58]
   1400033d3:	mov    r15,r8
   1400033d6:	mov    rdi,rdx
   1400033d9:	mov    r14,rcx
   1400033dc:	cmp    BYTE PTR [rax+0x615c],0x0
   1400033e3:	je     0x140003511
   1400033e9:	and    DWORD PTR [rsp+0x80],0x0
   1400033f1:	lea    rcx,[rsp+0x20]
   1400033f6:	and    DWORD PTR [rsp+0x84],0x0
   1400033fe:	mov    DWORD PTR [rsp+0x88],0x7a
   140003409:	call   0x1400479a4
   14000340e:	xor    ebp,ebp
   140003410:	xor    ebx,ebx
   140003412:	cmp    QWORD PTR [rdi+0x20],rbx
   140003416:	jbe    0x140003446
   140003418:	mov    rdx,rbx
   14000341b:	mov    rcx,rdi
   14000341e:	call   0x140006b9c
   140003423:	cmp    DWORD PTR [rax+0x2c],0x2
   140003427:	je     0x14000343a
   140003429:	mov    rdx,rbx
   14000342c:	mov    rcx,rdi
   14000342f:	call   0x140006b9c
   140003434:	cmp    DWORD PTR [rax+0x2c],0x3
   140003438:	jne    0x14000343d
   14000343a:	inc    rbp
   14000343d:	inc    rbx
   140003440:	cmp    rbx,QWORD PTR [rdi+0x20]
   140003444:	jb     0x140003418
   140003446:	xor    esi,esi
   140003448:	cmp    QWORD PTR [rdi+0x20],rsi
   14000344c:	jbe    0x140003511
   140003452:	mov    rdx,rsi
   140003455:	mov    rcx,rdi
   140003458:	call   0x140006b9c
   14000345d:	mov    rbx,rax
   140003460:	mov    ecx,DWORD PTR [rax+0x2c]
   140003463:	sub    ecx,0x2
   140003466:	cmp    ecx,0x1
   140003469:	ja     0x140003504
   14000346f:	mov    rcx,QWORD PTR [rax]
   140003472:	lea    rdx,[rsp+0x90]
   14000347a:	and    QWORD PTR [rsp+0x10a0],0x0
   140003483:	xor    r8d,r8d
   140003486:	and    QWORD PTR [rsp+0x10a8],0x0
   14000348f:	and    QWORD PTR [rsp+0x10b0],0x0
   140003498:	call   0x140023280
   14000349d:	test   al,al
   14000349f:	je     0x140003504
   1400034a1:	mov    rax,QWORD PTR [rbx+0x18]
   1400034a5:	cmp    QWORD PTR [rsp+0x10a0],rax
   1400034ad:	jne    0x140003504
   1400034af:	mov    rax,QWORD PTR [rbx+0x8]
   1400034b3:	cmp    QWORD PTR [rsp+0x1090],rax
   1400034bb:	jne    0x140003504
   1400034bd:	cmp    BYTE PTR [rbx+0x58],0x0
   1400034c1:	jne    0x140003504
   1400034c3:	mov    edx,DWORD PTR [rbx+0x10]
   1400034c6:	mov    rcx,QWORD PTR [rbx]
   1400034c9:	and    edx,0xffffffdf
   1400034cc:	call   0x140022740
   1400034d1:	test   al,al
   1400034d3:	jne    0x1400034e5
   1400034d5:	mov    r8,QWORD PTR [rbx]
   1400034d8:	mov    rdx,r15
   1400034db:	mov    ecx,0x10
   1400034e0:	call   0x140001358
   1400034e5:	mov    rdx,QWORD PTR [rbx]
   1400034e8:	mov    ecx,0x7b
   1400034ed:	call   0x1400013b0
   1400034f2:	lea    rdx,[rsi+0x1]
   1400034f6:	mov    r9b,0x1
   1400034f9:	mov    r8,rbp
   1400034fc:	mov    rcx,r14
   1400034ff:	call   0x1400065f0
   140003504:	inc    rsi
   140003507:	cmp    rsi,QWORD PTR [rdi+0x20]
   14000350b:	jb     0x140003452
   140003511:	mov    rcx,QWORD PTR [rsp+0x10e0]
   140003519:	xor    rcx,rsp
   14000351c:	call   0x140055f90
   140003521:	mov    rbx,QWORD PTR [rsp+0x1138]
   140003529:	add    rsp,0x10f0
   140003530:	pop    r15
   140003532:	pop    r14
   140003534:	pop    rdi
   140003535:	pop    rsi
   140003536:	pop    rbp
   140003537:	ret    
   140003538:	sub    rsp,0x28
   14000353c:	cmp    BYTE PTR [rcx+0x39],0x0
   140003540:	jne    0x14000358b
   140003542:	cmp    BYTE PTR [rdx+0x39],0x0
   140003546:	jne    0x14000358b
   140003548:	mov    rax,QWORD PTR [rdx+0x10]
   14000354c:	cmp    QWORD PTR [rcx+0x10],rax
   140003550:	jne    0x14000358b
   140003552:	test   r8b,r8b
   140003555:	je     0x14000355f
   140003557:	mov    eax,DWORD PTR [rdx+0x8]
   14000355a:	cmp    DWORD PTR [rcx+0x8],eax
   14000355d:	jne    0x14000358b
   14000355f:	test   r9b,r9b
   140003562:	je     0x140003587
   140003564:	cmp    BYTE PTR [rcx+0x38],0x0
   140003568:	je     0x14000358b
   14000356a:	cmp    BYTE PTR [rdx+0x38],0x0
   14000356e:	je     0x14000358b
   140003570:	add    rdx,0x18
   140003574:	add    rcx,0x18
   140003578:	mov    r8d,0x20
   14000357e:	call   0x140058e60
   140003583:	test   eax,eax
   140003585:	jne    0x14000358b
   140003587:	mov    al,0x1
   140003589:	jmp    0x14000358d
   14000358b:	xor    al,al
   14000358d:	add    rsp,0x28
   140003591:	ret    
   140003592:	int3   
   140003593:	int3   
   140003594:	rex push rbp
   140003596:	push   rbx
   140003597:	push   rsi
   140003598:	push   rdi
   140003599:	push   r12
   14000359b:	push   r13
   14000359d:	push   r14
   14000359f:	push   r15
   1400035a1:	lea    rbp,[rsp-0x20e8]
   1400035a9:	mov    eax,0x21e8
   1400035ae:	call   0x140055f20
   1400035b3:	sub    rsp,rax
   1400035b6:	mov    rax,QWORD PTR [rip+0x7e923]        # 0x140081ee0
   1400035bd:	xor    rax,rsp
   1400035c0:	mov    QWORD PTR [rbp+0x20d0],rax
   1400035c7:	mov    r12,QWORD PTR [rbp+0x2150]
   1400035ce:	lea    rsi,[rdx+0x3510]
   1400035d5:	mov    rdi,r8
   1400035d8:	mov    QWORD PTR [rsp+0x58],rcx
   1400035dd:	mov    rbx,rdx
   1400035e0:	mov    QWORD PTR [rsp+0x68],r9
   1400035e5:	mov    r15,rcx
   1400035e8:	mov    rdx,rsi
   1400035eb:	mov    r8d,0x800
   1400035f1:	lea    rcx,[rbp+0x10d0]
   1400035f8:	call   0x140046158
   1400035fd:	xor    r14d,r14d
   140003600:	cmp    BYTE PTR [rbx+0x45e3],r14b
   140003607:	je     0x140003620
   140003609:	mov    rax,QWORD PTR [r15+0x58]
   14000360d:	cmp    DWORD PTR [rax+0x73bc],r14d
   140003614:	je     0x140003620
   140003616:	mov    dl,0x1
   140003618:	mov    rcx,rsi
   14000361b:	call   0x140032740
   140003620:	lea    r9,[rsp+0x50]
   140003625:	mov    rdx,rsi
   140003628:	lea    r8,[rsp+0x60]
   14000362d:	mov    rcx,rdi
   140003630:	call   0x140007444
   140003635:	test   al,al
   140003637:	je     0x140003708
   14000363d:	mov    r13,QWORD PTR [rsp+0x60]
   140003642:	cmp    r13,QWORD PTR [rsp+0x50]
   140003647:	jae    0x140003708
   14000364d:	mov    rdx,r13
   140003650:	mov    rcx,rdi
   140003653:	call   0x140006b9c
   140003658:	movups xmm0,XMMWORD PTR [rax]
   14000365b:	movups xmm1,XMMWORD PTR [rax+0x20]
   14000365f:	movups XMMWORD PTR [rsp+0x70],xmm0
   140003664:	movaps XMMWORD PTR [rbp-0x60],xmm0
   140003668:	movups xmm0,XMMWORD PTR [rax+0x10]
   14000366c:	movaps XMMWORD PTR [rbp-0x40],xmm1
   140003670:	movups XMMWORD PTR [rbp-0x80],xmm0
   140003674:	movaps XMMWORD PTR [rbp-0x50],xmm0
   140003678:	movups xmm0,XMMWORD PTR [rax+0x30]
   14000367c:	movups XMMWORD PTR [rsp+0x38],xmm1
   140003681:	movups XMMWORD PTR [rbp+0x0],xmm0
   140003685:	movaps XMMWORD PTR [rbp-0x30],xmm0
   140003689:	movups xmm0,XMMWORD PTR [rax+0x40]
   14000368d:	movaps XMMWORD PTR [rbp-0x20],xmm0
   140003691:	movups xmm0,XMMWORD PTR [rax+0x50]
   140003695:	movups XMMWORD PTR [rbp-0x70],xmm0
   140003699:	movaps XMMWORD PTR [rbp-0x10],xmm0
   14000369d:	movdqa xmm0,xmm1
   1400036a1:	psrldq xmm0,0xc
   1400036a6:	movd   r14d,xmm0
   1400036ab:	mov    DWORD PTR [rsp+0x4c],r14d
   1400036b0:	mov    DWORD PTR [rbp-0x34],r14d
   1400036b4:	lea    eax,[r14-0x1]
   1400036b8:	cmp    eax,0x1
   1400036bb:	ja     0x1400036f7
   1400036bd:	mov    rax,QWORD PTR [rbx+0x7f78]
   1400036c4:	lea    r8,[rbp+0xd0]
   1400036cb:	mov    rcx,QWORD PTR [r15+0x58]
   1400036cf:	lea    rdx,[rbp-0x60]
   1400036d3:	mov    r9d,0x800
   1400036d9:	mov    QWORD PTR [rbp-0x20],rax
   1400036dd:	call   0x140005b58
   1400036e2:	mov    rdx,rsi
   1400036e5:	lea    rcx,[rbp+0xd0]
   1400036ec:	call   0x140046118
   1400036f1:	xor    ecx,ecx
   1400036f3:	test   eax,eax
   1400036f5:	je     0x14000374c
   1400036f7:	inc    r13
   1400036fa:	cmp    r13,QWORD PTR [rsp+0x50]
   1400036ff:	jb     0x14000364d
   140003705:	xor    r14d,r14d
   140003708:	xor    edx,edx
   14000370a:	lea    rcx,[rbp+0x70]
   14000370e:	lea    r8d,[rdx+0x60]
   140003712:	call   0x140058f40
   140003717:	mov    rax,QWORD PTR [rbx+0x7f78]
   14000371e:	xor    ecx,ecx
   140003720:	mov    QWORD PTR [rbp+0xb0],rax
   140003727:	mov    rax,QWORD PTR [r15+0x58]
   14000372b:	mov    QWORD PTR [rbp+0x70],rsi
   14000372f:	lea    r13d,[rcx+0x4]
   140003733:	cmp    BYTE PTR [rax+0x62d2],cl
   140003739:	je     0x140003a8d
   14000373f:	mov    rcx,r12
   140003742:	call   0x1400463a0
   140003747:	jmp    0x140003a7b
   14000374c:	mov    rax,QWORD PTR [r15+0x58]
   140003750:	cmp    BYTE PTR [rax+0x615f],cl
   140003756:	jne    0x140003760
   140003758:	cmp    BYTE PTR [rax+0x6160],cl
   14000375e:	je     0x14000377e
   140003760:	movups xmm0,XMMWORD PTR [rbp-0x80]
   140003764:	mov    rcx,QWORD PTR [rbx+0x4530]
   14000376b:	psrldq xmm0,0x8
   140003770:	movq   rdx,xmm0
   140003775:	cmp    rdx,rcx
   140003778:	jb     0x14000378b
   14000377a:	je     0x14000378b
   14000377c:	xor    ecx,ecx
   14000377e:	cmp    DWORD PTR [rax+0x613c],0x2
   140003785:	mov    BYTE PTR [rsp+0x30],cl
   140003789:	jne    0x140003790
   14000378b:	mov    BYTE PTR [rsp+0x30],0x1
   140003790:	mov    r12d,0x4
   140003796:	cmp    DWORD PTR [rax+0x613c],r12d
   14000379d:	jne    0x1400037fd
   14000379f:	mov    rcx,rbx
   1400037a2:	lea    esi,[r12-0x3]
   1400037a7:	call   0x14000c120
   1400037ac:	test   al,al
   1400037ae:	jne    0x1400037de
   1400037b0:	mov    r9,QWORD PTR [rbx+0x4550]
   1400037b7:	lea    rax,[rbx+0x4530]
   1400037be:	mov    rdx,QWORD PTR [rsp+0x70]
   1400037c3:	xor    r8d,r8d
   1400037c6:	mov    rcx,QWORD PTR [r15+0x58]
   1400037ca:	mov    DWORD PTR [rsp+0x28],0x7
   1400037d2:	mov    QWORD PTR [rsp+0x20],rax
   1400037d7:	call   0x14004861c
   1400037dc:	mov    esi,eax
   1400037de:	sub    esi,0x1
   1400037e1:	je     0x1400038cb
   1400037e7:	sub    esi,0x5
   1400037ea:	jne    0x1400037fd
   1400037ec:	mov    edx,0xff
   1400037f1:	lea    rcx,[rip+0x91068]        # 0x140094860
   1400037f8:	call   0x14001bc60
   1400037fd:	mov    sil,BYTE PTR [rsp+0x30]
   140003802:	mov    rax,QWORD PTR [r15+0x58]
   140003806:	cmp    DWORD PTR [rax+0x73bc],0x0
   14000380d:	je     0x140003a0e
   140003813:	mov    rcx,rbx
   140003816:	call   0x14000c120
   14000381b:	xor    edx,edx
   14000381d:	test   al,al
   14000381f:	je     0x140003836
   140003821:	movups xmm0,XMMWORD PTR [rbp-0x70]
   140003825:	psrldq xmm0,0x8
   14000382a:	movd   eax,xmm0
   14000382e:	test   al,al
   140003830:	jne    0x140003a0e
   140003836:	test   sil,sil
   140003839:	je     0x1400038f3
   14000383f:	cmp    r14d,0x1
   140003843:	je     0x1400038eb
   140003849:	mov    r14d,0x1
   14000384f:	mov    ebx,edx
   140003851:	mov    rsi,rdx
   140003854:	mov    DWORD PTR [rbp-0x34],r14d
   140003858:	mov    DWORD PTR [rbp-0x14],edx
   14000385b:	cmp    QWORD PTR [rdi+0x20],rdx
   14000385f:	jbe    0x1400038d8
   140003861:	xor    r15d,r15d
   140003864:	mov    rdx,rsi
   140003867:	mov    rcx,rdi
   14000386a:	call   0x140006b9c
   14000386f:	cmp    DWORD PTR [rax+0x2c],r12d
   140003873:	jne    0x1400038a8
   140003875:	mov    rdx,rsi
   140003878:	mov    rcx,rdi
   14000387b:	call   0x140006b9c
   140003880:	lea    rcx,[r13+0x1]
   140003884:	cmp    QWORD PTR [rax+0x30],rcx
   140003888:	jne    0x1400038a8
   14000388a:	mov    rdx,rsi
   14000388d:	mov    rcx,rdi
   140003890:	call   0x140006b9c
   140003895:	mov    rdx,rsi
   140003898:	mov    rcx,rdi
   14000389b:	mov    DWORD PTR [rax+0x4c],r15d
   14000389f:	call   0x140006b9c
   1400038a4:	mov    QWORD PTR [rax+0x30],r15
   1400038a8:	inc    rsi
   1400038ab:	cmp    rsi,QWORD PTR [rdi+0x20]
   1400038af:	jb     0x140003864
   1400038b1:	movaps xmm0,XMMWORD PTR [rbp-0x40]
   1400038b5:	xor    edx,edx
   1400038b7:	mov    r15,QWORD PTR [rsp+0x58]
   1400038bc:	mov    sil,BYTE PTR [rsp+0x30]
   1400038c1:	movups XMMWORD PTR [rsp+0x38],xmm0
   1400038c6:	jmp    0x1400039a5
   1400038cb:	mov    sil,0x1
   1400038ce:	mov    BYTE PTR [rsp+0x30],sil
   1400038d3:	jmp    0x140003802
   1400038d8:	movaps xmm0,XMMWORD PTR [rbp-0x40]
   1400038dc:	mov    sil,BYTE PTR [rsp+0x30]
   1400038e1:	movups XMMWORD PTR [rsp+0x38],xmm0
   1400038e6:	jmp    0x1400039a5
   1400038eb:	mov    ebx,DWORD PTR [rbp-0x14]
   1400038ee:	jmp    0x1400039a0
   1400038f3:	mov    ebx,DWORD PTR [rbp-0x14]
   1400038f6:	mov    rax,QWORD PTR [r15+0x58]
   1400038fa:	inc    ebx
   1400038fc:	mov    DWORD PTR [rbp-0x14],ebx
   1400038ff:	mov    ecx,DWORD PTR [rax+0x73bc]
   140003905:	cmp    ecx,0x1
   140003908:	jbe    0x1400039a0
   14000390e:	cmp    ebx,ecx
   140003910:	jb     0x1400039a0
   140003916:	dec    ebx
   140003918:	mov    DWORD PTR [rbp-0x14],ebx
   14000391b:	cmp    QWORD PTR [rdi+0x20],rdx
   14000391f:	jbe    0x1400039a0
   140003921:	mov    r14,QWORD PTR [rsp+0x68]
   140003926:	mov    rsi,rdx
   140003929:	mov    r15d,edx
   14000392c:	mov    rdx,rsi
   14000392f:	mov    rcx,rdi
   140003932:	call   0x140006b9c
   140003937:	cmp    DWORD PTR [rax+0x2c],r12d
   14000393b:	jne    0x140003983
   14000393d:	mov    rdx,rsi
   140003940:	mov    rcx,rdi
   140003943:	call   0x140006b9c
   140003948:	lea    rcx,[r13+0x1]
   14000394c:	cmp    QWORD PTR [rax+0x30],rcx
   140003950:	jne    0x140003983
   140003952:	mov    rdx,rsi
   140003955:	mov    rcx,rdi
   140003958:	call   0x140006b9c
   14000395d:	mov    rdx,rsi
   140003960:	mov    rcx,rdi
   140003963:	cmp    DWORD PTR [rax+0x4c],0x1
   140003967:	jbe    0x140003973
   140003969:	call   0x140006b9c
   14000396e:	dec    DWORD PTR [rax+0x4c]
   140003971:	jmp    0x140003983
   140003973:	call   0x140006b9c
   140003978:	mov    DWORD PTR [rax+0x2c],0x5
   14000397f:	mov    BYTE PTR [r14],0x1
   140003983:	inc    r15d
   140003986:	mov    esi,r15d
   140003989:	cmp    rsi,QWORD PTR [rdi+0x20]
   14000398d:	jb     0x14000392c
   14000398f:	mov    r14d,DWORD PTR [rsp+0x4c]
   140003994:	xor    edx,edx
   140003996:	mov    r15,QWORD PTR [rsp+0x58]
   14000399b:	mov    sil,BYTE PTR [rsp+0x30]
   1400039a0:	movups xmm0,XMMWORD PTR [rsp+0x38]
   1400039a5:	cmp    ebx,DWORD PTR [r15+0x80]
   1400039ac:	jbe    0x1400039b5
   1400039ae:	mov    DWORD PTR [r15+0x80],ebx
   1400039b5:	movups xmm1,XMMWORD PTR [rsp+0x70]
   1400039ba:	lea    rax,[rbp+0x10d0]
   1400039c1:	test   sil,sil
   1400039c4:	movaps XMMWORD PTR [rbp+0x30],xmm0
   1400039c8:	mov    rcx,rdi
   1400039cb:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   1400039cf:	movaps XMMWORD PTR [rbp+0x10],xmm1
   1400039d3:	movups xmm1,XMMWORD PTR [rbp-0x80]
   1400039d7:	mov    QWORD PTR [rbp+0x10],rax
   1400039db:	lea    rax,[r13+0x1]
   1400039df:	cmovne rax,rdx
   1400039e3:	movaps XMMWORD PTR [rbp+0x50],xmm0
   1400039e7:	movups xmm0,XMMWORD PTR [rbp-0x70]
   1400039eb:	lea    rdx,[rbp+0x10]
   1400039ef:	mov    DWORD PTR [rbp+0x3c],r12d
   1400039f3:	movaps XMMWORD PTR [rbp+0x20],xmm1
   1400039f7:	movups xmm1,XMMWORD PTR [rbp+0x0]
   1400039fb:	movaps XMMWORD PTR [rbp+0x60],xmm0
   1400039ff:	movaps XMMWORD PTR [rbp+0x40],xmm1
   140003a03:	mov    QWORD PTR [rbp+0x40],rax
   140003a07:	call   0x140006cf0
   140003a0c:	jmp    0x140003a28
   140003a0e:	neg    sil
   140003a11:	sbb    r14d,r14d
   140003a14:	neg    r14d
   140003a17:	add    r14d,0x3
   140003a1b:	mov    DWORD PTR [rbp-0x34],r14d
   140003a1f:	movaps xmm0,XMMWORD PTR [rbp-0x40]
   140003a23:	movups XMMWORD PTR [rsp+0x38],xmm0
   140003a28:	mov    rdx,r13
   140003a2b:	mov    rcx,rdi
   140003a2e:	call   0x140006b9c
   140003a33:	movups xmm0,XMMWORD PTR [rsp+0x70]
   140003a38:	movups XMMWORD PTR [rax],xmm0
   140003a3b:	movups xmm0,XMMWORD PTR [rbp-0x80]
   140003a3f:	movups XMMWORD PTR [rax+0x10],xmm0
   140003a43:	movups xmm0,XMMWORD PTR [rsp+0x38]
   140003a48:	movups XMMWORD PTR [rax+0x20],xmm0
   140003a4c:	movups xmm0,XMMWORD PTR [rbp+0x0]
   140003a50:	movups XMMWORD PTR [rax+0x30],xmm0
   140003a54:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   140003a58:	movups XMMWORD PTR [rax+0x40],xmm0
   140003a5c:	movups xmm0,XMMWORD PTR [rbp-0x70]
   140003a60:	movups XMMWORD PTR [rax+0x50],xmm0
   140003a64:	mov    eax,r14d
   140003a67:	jmp    0x140003acd
   140003a69:	mov    r8d,r13d
   140003a6c:	mov    rdx,rsi
   140003a6f:	mov    rcx,rax
   140003a72:	call   0x140026254
   140003a77:	test   al,al
   140003a79:	jne    0x140003a8a
   140003a7b:	mov    rcx,r12
   140003a7e:	call   0x140046230
   140003a83:	test   rax,rax
   140003a86:	jne    0x140003a69
   140003a88:	jmp    0x140003a8d
   140003a8a:	mov    r14b,0x1
   140003a8d:	mov    rax,QWORD PTR [r15+0x58]
   140003a91:	xor    esi,esi
   140003a93:	cmp    BYTE PTR [rax+0x62d2],sil
   140003a9a:	je     0x140003ab4
   140003a9c:	cmp    BYTE PTR [rbx+0x45e3],sil
   140003aa3:	jne    0x140003ab4
   140003aa5:	mov    DWORD PTR [rbp+0x9c],0x5
   140003aaf:	test   r14b,r14b
   140003ab2:	je     0x140003abb
   140003ab4:	mov    DWORD PTR [rbp+0x9c],r13d
   140003abb:	lea    rdx,[rbp+0x70]
   140003abf:	mov    rcx,rdi
   140003ac2:	call   0x140006cf0
   140003ac7:	mov    eax,DWORD PTR [rbp+0x9c]
   140003acd:	mov    rcx,QWORD PTR [rbp+0x20d0]
   140003ad4:	xor    rcx,rsp
   140003ad7:	call   0x140055f90
   140003adc:	add    rsp,0x21e8
   140003ae3:	pop    r15
   140003ae5:	pop    r14
   140003ae7:	pop    r13
   140003ae9:	pop    r12
   140003aeb:	pop    rdi
   140003aec:	pop    rsi
   140003aed:	pop    rbx
   140003aee:	pop    rbp
   140003aef:	ret    
   140003af0:	mov    QWORD PTR [rsp+0x8],rbx
   140003af5:	push   rdi
   140003af6:	sub    rsp,0x20
   140003afa:	mov    rdi,rcx
   140003afd:	mov    rbx,rdx
   140003b00:	mov    ecx,DWORD PTR [rip+0x7ee02]        # 0x140082908
   140003b06:	test   ecx,ecx
   140003b08:	je     0x140003b73
   140003b0a:	sub    ecx,0x1
   140003b0d:	je     0x140003b59
   140003b0f:	cmp    ecx,0x1
   140003b12:	jne    0x140003b7d
   140003b14:	mov    al,BYTE PTR [rdi+0x39]
   140003b17:	cmp    al,BYTE PTR [rdx+0x39]
   140003b1a:	je     0x140003b30
   140003b1c:	neg    al
   140003b1e:	sbb    eax,eax
   140003b20:	and    eax,0xfffffffe
   140003b23:	inc    eax
   140003b25:	mov    rbx,QWORD PTR [rsp+0x30]
   140003b2a:	add    rsp,0x20
   140003b2e:	pop    rdi
   140003b2f:	ret    
   140003b30:	mov    rax,QWORD PTR [rdx+0x10]
   140003b34:	cmp    QWORD PTR [rdi+0x10],rax
   140003b38:	jne    0x140003b1e
   140003b3a:	add    rdx,0x18
   140003b3e:	lea    rcx,[rdi+0x18]
   140003b42:	mov    r8d,0x20
   140003b48:	call   0x140058e60
   140003b4d:	test   eax,eax
   140003b4f:	jne    0x140003b25
   140003b51:	mov    rax,QWORD PTR [rbx]
   140003b54:	cmp    QWORD PTR [rdi],rax
   140003b57:	jmp    0x140003b7b
   140003b59:	mov    al,BYTE PTR [rdi+0x39]
   140003b5c:	cmp    al,BYTE PTR [rdx+0x39]
   140003b5f:	jne    0x140003b1c
   140003b61:	mov    rax,QWORD PTR [rdx+0x10]
   140003b65:	cmp    QWORD PTR [rdi+0x10],rax
   140003b69:	jne    0x140003b1e
   140003b6b:	mov    eax,DWORD PTR [rdx+0x8]
   140003b6e:	cmp    DWORD PTR [rdi+0x8],eax
   140003b71:	jmp    0x140003b7b
   140003b73:	mov    rax,QWORD PTR [rdx+0x10]
   140003b77:	cmp    QWORD PTR [rdi+0x10],rax
   140003b7b:	jne    0x140003b1e
   140003b7d:	xor    eax,eax
   140003b7f:	jmp    0x140003b25
   140003b81:	int3   
   140003b82:	int3   
   140003b83:	int3   
   140003b84:	rex push rbx
   140003b86:	push   rbp
   140003b87:	push   rsi
   140003b88:	push   rdi
   140003b89:	push   r12
   140003b8b:	push   r14
   140003b8d:	push   r15
   140003b8f:	mov    eax,0x10f0
   140003b94:	call   0x140055f20
   140003b99:	sub    rsp,rax
   140003b9c:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   140003ba5:	mov    rax,QWORD PTR [rip+0x7e334]        # 0x140081ee0
   140003bac:	xor    rax,rsp
   140003baf:	mov    QWORD PTR [rsp+0x10e0],rax
   140003bb7:	mov    rdi,r9
   140003bba:	mov    rbx,r8
   140003bbd:	mov    r14,rdx
   140003bc0:	mov    rsi,rcx
   140003bc3:	mov    r15,QWORD PTR [rsp+0x1150]
   140003bcb:	mov    rbp,QWORD PTR [rsp+0x1158]
   140003bd3:	mov    rax,QWORD PTR [rcx+0x58]
   140003bd7:	xor    r12d,r12d
   140003bda:	cmp    BYTE PTR [rax+0x5132],r12b
   140003be1:	je     0x140003bf1
   140003be3:	cmp    BYTE PTR [rax+0x5130],r12b
   140003bea:	lea    eax,[r12+0x1]
   140003bef:	jne    0x140003bf4
   140003bf1:	mov    eax,r12d
   140003bf4:	mov    BYTE PTR [r9+0x7f94],al
   140003bfb:	mov    rax,QWORD PTR [rcx+0x58]
   140003bff:	mov    r9d,DWORD PTR [rax+0x73cc]
   140003c06:	mov    r8d,DWORD PTR [rax+0x73c8]
   140003c0d:	mov    edx,DWORD PTR [rax+0x73c4]
   140003c13:	mov    rcx,rdi
   140003c16:	call   0x14000a2dc
   140003c1b:	mov    r9,QWORD PTR [rbx]
   140003c1e:	mov    rax,QWORD PTR [rsi+0x58]
   140003c22:	mov    cl,BYTE PTR [rax+0x61b5]
   140003c28:	neg    cl
   140003c2a:	sbb    r8d,r8d
   140003c2d:	and    r8d,0x3
   140003c31:	inc    r8d
   140003c34:	mov    rdx,r14
   140003c37:	mov    rcx,rbx
   140003c3a:	call   QWORD PTR [r9+0x8]
   140003c3e:	test   al,al
   140003c40:	je     0x140003d3c
   140003c46:	mov    rax,QWORD PTR [rsi+0x58]
   140003c4a:	cmp    QWORD PTR [rax+0x6170],r12
   140003c51:	jne    0x140003c77
   140003c53:	cmp    BYTE PTR [rbx+0x7f8c],r12b
   140003c5a:	jne    0x140003c65
   140003c5c:	cmp    DWORD PTR [rax+0x6154],r12d
   140003c63:	jne    0x140003c77
   140003c65:	cmp    BYTE PTR [rax+0x61b8],r12b
   140003c6c:	je     0x140003cbc
   140003c6e:	cmp    DWORD PTR [rbx+0x7f88],0x2
   140003c75:	jne    0x140003cbc
   140003c77:	mov    rcx,rbx
   140003c7a:	call   0x140020b88
   140003c7f:	cmp    rax,0x14
   140003c83:	sete   al
   140003c86:	test   al,al
   140003c88:	je     0x140003ca1
   140003c8a:	mov    rcx,rbx
   140003c8d:	call   0x140020a90
   140003c92:	mov    DWORD PTR [rbx+0x1028],0x1
   140003c9c:	jmp    0x140003d3c
   140003ca1:	mov    rax,QWORD PTR [rsi+0x58]
   140003ca5:	cmp    QWORD PTR [rax+0x6170],r12
   140003cac:	je     0x140003cbc
   140003cae:	mov    QWORD PTR [rax+0x6170],r12
   140003cb5:	mov    BYTE PTR [rsi+0x25a],r12b
   140003cbc:	xor    edx,edx
   140003cbe:	mov    rcx,rbx
   140003cc1:	call   0x1400082e4
   140003cc6:	mov    rcx,rbx
   140003cc9:	call   0x1400082a4
   140003cce:	test   al,al
   140003cd0:	jne    0x140003ce1
   140003cd2:	mov    rdx,r14
   140003cd5:	lea    rcx,[rip+0x90b84]        # 0x140094860
   140003cdc:	call   0x14001bda4
   140003ce1:	mov    rcx,rbx
   140003ce4:	call   0x14000a7c4
   140003ce9:	xor    edx,edx
   140003ceb:	mov    rcx,rbx
   140003cee:	call   0x140009458
   140003cf3:	test   al,al
   140003cf5:	je     0x140003d08
   140003cf7:	mov    edx,0x4
   140003cfc:	lea    rcx,[rip+0x90b5d]        # 0x140094860
   140003d03:	call   0x14001bc60
   140003d08:	mov    rcx,rbx
   140003d0b:	call   0x140008324
   140003d10:	test   al,al
   140003d12:	je     0x140003d25
   140003d14:	mov    edx,0x3
   140003d19:	lea    rcx,[rip+0x90b40]        # 0x140094860
   140003d20:	call   0x14001bc60
   140003d25:	mov    dl,BYTE PTR [rbx+0x7f8c]
   140003d2b:	mov    BYTE PTR [rdi+0x7f8c],dl
   140003d31:	mov    r9b,0x1
   140003d34:	mov    cl,r9b
   140003d37:	jmp    0x140003ded
   140003d3c:	mov    rdx,r14
   140003d3f:	cmp    DWORD PTR [rbx+0x1028],0x1
   140003d46:	jne    0x140003df7
   140003d4c:	mov    BYTE PTR [rdi+0x7fd0],0x1
   140003d53:	mov    r8d,0x1
   140003d59:	mov    rcx,rdi
   140003d5c:	call   0x140021158
   140003d61:	mov    rax,QWORD PTR [rsi+0x58]
   140003d65:	cmp    WORD PTR [rax+0x1018],r12w
   140003d6d:	je     0x140003dc5
   140003d6f:	lea    rcx,[rsp+0xb0]
   140003d77:	call   0x14002071c
   140003d7c:	nop
   140003d7d:	mov    rdx,QWORD PTR [rsi+0x58]
   140003d81:	add    rdx,0x1018
   140003d88:	lea    rcx,[rsp+0xb0]
   140003d90:	call   0x14002117c
   140003d95:	movabs r8,0x7fffffff7fffffff
   140003d9f:	mov    rdx,rdi
   140003da2:	lea    rcx,[rsp+0xb0]
   140003daa:	call   0x140020834
   140003daf:	mov    ecx,eax
   140003db1:	mov    QWORD PTR [rdi+0x7f98],rcx
   140003db8:	lea    rcx,[rsp+0xb0]
   140003dc0:	call   0x140020758
   140003dc5:	mov    rax,QWORD PTR [rsi+0x58]
   140003dc9:	cmp    DWORD PTR [rax+0x6154],r12d
   140003dd0:	je     0x140003de2
   140003dd2:	cmp    DWORD PTR [rax+0x6140],r12d
   140003dd9:	je     0x140003de2
   140003ddb:	mov    BYTE PTR [rdi+0x7f8c],0x1
   140003de2:	xor    r9d,r9d
   140003de5:	mov    dl,BYTE PTR [rdi+0x7f8c]
   140003deb:	mov    cl,0x1
   140003ded:	mov    r8,r14
   140003df0:	call   0x140048900
   140003df5:	jmp    0x140003e14
   140003df7:	lea    rcx,[rip+0x90a62]        # 0x140094860
   140003dfe:	call   0x14001bc54
   140003e03:	mov    edx,0x9
   140003e08:	lea    rcx,[rip+0x90a51]        # 0x140094860
   140003e0f:	call   0x14001bc60
   140003e14:	cmp    QWORD PTR [rbx+0x8],0xffffffffffffffff
   140003e19:	je     0x140003f00
   140003e1f:	mov    eax,DWORD PTR [rbx+0x7f88]
   140003e25:	mov    DWORD PTR [rdi+0x7f88],eax
   140003e2b:	cmp    QWORD PTR [r15+0x20],r12
   140003e2f:	jne    0x140003e42
   140003e31:	mov    rax,QWORD PTR [rsi+0x58]
   140003e35:	cmp    BYTE PTR [rax+0x62d2],r12b
   140003e3c:	je     0x140003f42
   140003e42:	mov    rcx,rdi
   140003e45:	call   0x1400093e8
   140003e4a:	xor    r9d,r9d
   140003e4d:	mov    r8b,0x1
   140003e50:	mov    rdx,rbx
   140003e53:	mov    rcx,rdi
   140003e56:	call   0x1400084f0
   140003e5b:	lea    rax,[rdi+0x7fa2]
   140003e62:	mov    QWORD PTR [rsp+0x28],rax
   140003e67:	lea    rax,[rsp+0x30]
   140003e6c:	mov    QWORD PTR [rsp+0x20],rax
   140003e71:	mov    r9,rbp
   140003e74:	mov    r8,r15
   140003e77:	mov    rdx,rbx
   140003e7a:	mov    rcx,rsi
   140003e7d:	call   0x140005528
   140003e82:	mov    bpl,BYTE PTR [rsp+0x30]
   140003e87:	test   bpl,bpl
   140003e8a:	je     0x140003f42
   140003e90:	mov    rbx,r12
   140003e93:	cmp    QWORD PTR [r15+0x20],r12
   140003e97:	jbe    0x140003eb8
   140003e99:	mov    rdx,rbx
   140003e9c:	mov    rcx,r15
   140003e9f:	call   0x140006b9c
   140003ea4:	cmp    DWORD PTR [rax+0x2c],0x4
   140003ea8:	jne    0x140003eb5
   140003eaa:	inc    rbx
   140003ead:	cmp    rbx,QWORD PTR [r15+0x20]
   140003eb1:	jb     0x140003e99
   140003eb3:	jmp    0x140003eb8
   140003eb5:	mov    bpl,r12b
   140003eb8:	test   bpl,bpl
   140003ebb:	je     0x140003f42
   140003ec1:	mov    rax,QWORD PTR [rsi+0x58]
   140003ec5:	cmp    DWORD PTR [rax+0x61a0],r12d
   140003ecc:	jne    0x140003f42
   140003ece:	mov    edx,0xa
   140003ed3:	lea    rcx,[rip+0x90986]        # 0x140094860
   140003eda:	call   0x14001bf08
   140003edf:	mov    rcx,rdi
   140003ee2:	call   0x140020a90
   140003ee7:	mov    ecx,0xd4e
   140003eec:	call   0x140040118
   140003ef1:	mov    rcx,rax
   140003ef4:	call   0x14001796c
   140003ef9:	xor    al,al
   140003efb:	jmp    0x140003fac
   140003f00:	mov    rax,QWORD PTR [rsi+0x58]
   140003f04:	mov    cl,BYTE PTR [rax+0x61b8]
   140003f0a:	neg    cl
   140003f0c:	sbb    eax,eax
   140003f0e:	neg    eax
   140003f10:	add    eax,0x2
   140003f13:	mov    DWORD PTR [rdi+0x7f88],eax
   140003f19:	xor    r9d,r9d
   140003f1c:	xor    r8d,r8d
   140003f1f:	mov    rdx,rbx
   140003f22:	mov    rcx,rdi
   140003f25:	call   0x1400084f0
   140003f2a:	mov    rax,QWORD PTR [rsi+0x58]
   140003f2e:	mov    rdx,QWORD PTR [rax+0x6170]
   140003f35:	test   rdx,rdx
   140003f38:	je     0x140003f42
   140003f3a:	mov    rcx,rdi
   140003f3d:	call   0x140055254
   140003f42:	mov    ebx,0xffffffff
   140003f47:	cmp    QWORD PTR [rdi+0x7fc0],rbx
   140003f4e:	jbe    0x140003faa
   140003f50:	mov    rax,QWORD PTR [rsi+0x58]
   140003f54:	cmp    DWORD PTR [rax+0x6140],r12d
   140003f5b:	jne    0x140003faa
   140003f5d:	mov    rcx,r14
   140003f60:	call   0x1400220b4
   140003f65:	test   al,al
   140003f67:	je     0x140003faa
   140003f69:	mov    rax,QWORD PTR [rsi+0x58]
   140003f6d:	mov    rcx,QWORD PTR [rax+0x6170]
   140003f74:	test   rcx,rcx
   140003f77:	je     0x140003f8d
   140003f79:	movabs rax,0x7fffffff7fffffff
   140003f83:	cmp    rcx,rax
   140003f86:	je     0x140003faa
   140003f88:	cmp    rcx,rbx
   140003f8b:	jle    0x140003faa
   140003f8d:	mov    QWORD PTR [rsp+0xa0],r12
   140003f95:	mov    DWORD PTR [rsp+0xa8],0x74
   140003fa0:	lea    rcx,[rsp+0x40]
   140003fa5:	call   0x1400479a4
   140003faa:	mov    al,0x1
   140003fac:	mov    rcx,QWORD PTR [rsp+0x10e0]
   140003fb4:	xor    rcx,rsp
   140003fb7:	call   0x140055f90
   140003fbc:	add    rsp,0x10f0
   140003fc3:	pop    r15
   140003fc5:	pop    r14
   140003fc7:	pop    r12
   140003fc9:	pop    rdi
   140003fca:	pop    rsi
   140003fcb:	pop    rbp
   140003fcc:	pop    rbx
   140003fcd:	ret    
   140003fce:	int3   
   140003fcf:	int3   
   140003fd0:	movabs r9,0x4000000000000000
   140003fda:	test   r8b,r8b
   140003fdd:	je     0x140003fe4
   140003fdf:	mov    rdx,r9
   140003fe2:	jmp    0x140004016
   140003fe4:	test   dl,dl
   140003fe6:	je     0x14000400e
   140003fe8:	movabs rax,0x4000000000000
   140003ff2:	mov    rdx,rcx
   140003ff5:	shl    rdx,0xc
   140003ff9:	cmp    rcx,rax
   140003ffc:	mov    eax,0x400
   140004001:	cmova  rdx,r9
   140004005:	cmp    rdx,rax
   140004008:	jae    0x140004016
   14000400a:	mov    edx,eax
   14000400c:	jmp    0x140004016
   14000400e:	lea    rdx,[rcx*2+0x400]
   140004016:	cmp    rdx,rcx
   140004019:	mov    ecx,0x1
   14000401e:	cmovb  rdx,r9
   140004022:	lea    rax,[rcx-0x1]
   140004026:	cmp    rdx,rax
   140004029:	jb     0x140004036
   14000402b:	shl    rcx,0x7
   14000402f:	test   rcx,rcx
   140004032:	jne    0x140004022
   140004034:	jmp    0x14000403a
   140004036:	lea    rdx,[rcx-0x1]
   14000403a:	mov    rax,rdx
   14000403d:	ret    
   14000403e:	int3   
   14000403f:	int3   
   140004040:	mov    r11,rsp
   140004043:	push   rbp
   140004044:	push   rsi
   140004045:	push   rdi
   140004046:	push   r12
   140004048:	push   r13
   14000404a:	push   r14
   14000404c:	push   r15
   14000404e:	sub    rsp,0xf0
   140004055:	mov    QWORD PTR [rsp+0x68],0xfffffffffffffffe
   14000405e:	mov    QWORD PTR [r11+0x20],rbx
   140004062:	mov    rax,QWORD PTR [rip+0x7de77]        # 0x140081ee0
   140004069:	xor    rax,rsp
   14000406c:	mov    QWORD PTR [rsp+0xe0],rax
   140004074:	mov    edi,r9d
   140004077:	mov    QWORD PTR [rsp+0x38],r8
   14000407c:	mov    rbp,rdx
   14000407f:	mov    r15,rcx
   140004082:	and    DWORD PTR [r11-0x58],0x0
   140004087:	and    DWORD PTR [r11-0x54],0x0
   14000408c:	mov    DWORD PTR [r11-0x50],0x7c
   140004094:	lea    rcx,[rsp+0x70]
   140004099:	call   0x1400479a4
   14000409e:	xor    edx,edx
   1400040a0:	lea    r8d,[rdx+0x1]
   1400040a4:	mov    rcx,rbp
   1400040a7:	call   0x140007568
   1400040ac:	xor    esi,esi
   1400040ae:	mov    QWORD PTR [rsp+0x30],rsi
   1400040b3:	and    QWORD PTR [rsp+0x28],rsi
   1400040b8:	xor    ebx,ebx
   1400040ba:	cmp    QWORD PTR [rbp+0x20],rbx
   1400040be:	jbe    0x1400040f3
   1400040c0:	mov    rdx,rbx
   1400040c3:	mov    rcx,rbp
   1400040c6:	call   0x140006b9c
   1400040cb:	cmp    DWORD PTR [rax+0x2c],0x2
   1400040cf:	je     0x1400040e2
   1400040d1:	mov    rdx,rbx
   1400040d4:	mov    rcx,rbp
   1400040d7:	call   0x140006b9c
   1400040dc:	cmp    DWORD PTR [rax+0x2c],0x3
   1400040e0:	jne    0x1400040e5
   1400040e2:	inc    rsi
   1400040e5:	inc    rbx
   1400040e8:	cmp    rbx,QWORD PTR [rbp+0x20]
   1400040ec:	jb     0x1400040c0
   1400040ee:	mov    QWORD PTR [rsp+0x30],rsi
   1400040f3:	mov    rsi,QWORD PTR [rbp+0x20]
   1400040f7:	dec    rsi
   1400040fa:	or     r12,0xffffffffffffffff
   1400040fe:	mov    r13,r12
   140004101:	lea    rcx,[rsp+0x40]
   140004106:	call   0x1400214c0
   14000410b:	nop
   14000410c:	mov    BYTE PTR [rsp+0x20],0x0
   140004111:	mov    rcx,QWORD PTR [r15+0x58]
   140004115:	cmp    BYTE PTR [rcx+0x61bb],0x0
   14000411c:	je     0x140004305
   140004122:	call   0x140013b54
   140004127:	test   al,al
   140004129:	jne    0x140004305
   14000412f:	test   edi,edi
   140004131:	jne    0x140004305
   140004137:	mov    rax,QWORD PTR [r15+0x58]
   14000413b:	cmp    BYTE PTR [rax+0x615f],dil
   140004142:	jne    0x140004305
   140004148:	cmp    BYTE PTR [rax+0x6160],dil
   14000414f:	jne    0x140004305
   140004155:	mov    BYTE PTR [rsp+0x20],0x1
   14000415a:	xor    esi,esi
   14000415c:	movsxd r12,DWORD PTR [rbp+0x20]
   140004160:	lea    r13d,[rdi+0x1]
   140004164:	jmp    0x140004305
   140004169:	mov    rdx,rsi
   14000416c:	mov    rcx,rbp
   14000416f:	call   0x140006b9c
   140004174:	mov    rbx,rax
   140004177:	mov    ecx,DWORD PTR [rax+0x2c]
   14000417a:	sub    ecx,0x2
   14000417d:	cmp    ecx,0x1
   140004180:	ja     0x140004302
   140004186:	mov    rcx,QWORD PTR [r15+0x58]
   14000418a:	cmp    BYTE PTR [rcx+0x61bb],0x0
   140004191:	jne    0x1400041a7
   140004193:	mov    ecx,DWORD PTR [rax+0x10]
   140004196:	call   0x140021f74
   14000419b:	test   al,al
   14000419d:	jne    0x1400041a7
   14000419f:	mov    rcx,QWORD PTR [rbx]
   1400041a2:	call   0x140022404
   1400041a7:	xor    dil,dil
   1400041aa:	mov    rax,QWORD PTR [r15+0x58]
   1400041ae:	cmp    WORD PTR [rax+0x83e4],0x46
   1400041b6:	setne  r14b
   1400041ba:	cmp    BYTE PTR [rbx+0x58],dil
   1400041be:	je     0x14000424e
   1400041c4:	test   r14b,r14b
   1400041c7:	je     0x140004291
   1400041cd:	mov    cl,BYTE PTR [rax+0x61bb]
   1400041d3:	test   cl,cl
   1400041d5:	je     0x140004207
   1400041d7:	cmp    BYTE PTR [rsp+0x20],dil
   1400041dc:	je     0x140004207
   1400041de:	mov    rcx,QWORD PTR [rbx]
   1400041e1:	call   0x140021dec
   1400041e6:	test   al,al
   1400041e8:	je     0x140004302
   1400041ee:	mov    rdx,QWORD PTR [rbx]
   1400041f1:	lea    rcx,[rsp+0x40]
   1400041f6:	call   0x140021b78
   1400041fb:	lea    rcx,[rsp+0x40]
   140004200:	call   0x140021e00
   140004205:	jmp    0x140004274
   140004207:	cmp    BYTE PTR [rax+0x61ba],0x0
   14000420e:	je     0x140004236
   140004210:	mov    rcx,QWORD PTR [rbx]
   140004213:	call   0x140021f90
   140004218:	test   al,al
   14000421a:	je     0x140004226
   14000421c:	mov    rcx,QWORD PTR [rbx]
   14000421f:	call   0x1400229b8
   140004224:	jmp    0x14000428e
   140004226:	xor    dil,dil
   140004229:	mov    ecx,0x91
   14000422e:	call   QWORD PTR [rip+0x6808c]        # 0x14006c2c0
   140004234:	jmp    0x140004291
   140004236:	test   cl,cl
   140004238:	je     0x140004244
   14000423a:	lea    rcx,[rsp+0x40]
   14000423f:	call   0x140021e00
   140004244:	mov    rcx,QWORD PTR [rbx]
   140004247:	call   0x140021a70
   14000424c:	jmp    0x14000428e
   14000424e:	mov    rcx,QWORD PTR [rbx]
   140004251:	cmp    BYTE PTR [rax+0x61bb],0x0
   140004258:	je     0x140004279
   14000425a:	call   0x140021dec
   14000425f:	test   al,al
   140004261:	je     0x140004302
   140004267:	mov    rdx,QWORD PTR [rbx]
   14000426a:	lea    rcx,[rsp+0x40]
   14000426f:	call   0x140021b78
   140004274:	mov    dil,0x1
   140004277:	jmp    0x140004291
   140004279:	cmp    BYTE PTR [rax+0x61ba],0x0
   140004280:	je     0x140004289
   140004282:	call   0x140022a38
   140004287:	jmp    0x14000428e
   140004289:	call   0x140021af4
   14000428e:	mov    dil,al
   140004291:	mov    al,BYTE PTR [rbx+0x58]
   140004294:	test   al,al
   140004296:	je     0x14000429d
   140004298:	test   r14b,r14b
   14000429b:	je     0x140004302
   14000429d:	movzx  r9d,al
   1400042a1:	movzx  r8d,dil
   1400042a5:	mov    rdx,QWORD PTR [rbx]
   1400042a8:	mov    ecx,0x7d
   1400042ad:	call   0x1400012f8
   1400042b2:	mov    rax,QWORD PTR [r15+0x58]
   1400042b6:	cmp    BYTE PTR [rax+0x61bb],0x0
   1400042bd:	jne    0x1400042df
   1400042bf:	mov    r14,QWORD PTR [rsp+0x28]
   1400042c4:	inc    r14
   1400042c7:	mov    QWORD PTR [rsp+0x28],r14
   1400042cc:	xor    r9d,r9d
   1400042cf:	mov    r8,QWORD PTR [rsp+0x30]
   1400042d4:	mov    rdx,r14
   1400042d7:	mov    rcx,r15
   1400042da:	call   0x1400065f0
   1400042df:	test   dil,dil
   1400042e2:	jne    0x140004302
   1400042e4:	mov    r8,QWORD PTR [rbx]
   1400042e7:	mov    rdx,QWORD PTR [rsp+0x38]
   1400042ec:	mov    ecx,0xe
   1400042f1:	call   0x140001358
   1400042f6:	lea    rcx,[rip+0x90563]        # 0x140094860
   1400042fd:	call   0x14001bf78
   140004302:	add    rsi,r13
   140004305:	cmp    rsi,r12
   140004308:	jne    0x140004169
   14000430e:	lea    rcx,[rsp+0x40]
   140004313:	call   0x1400214dc
   140004318:	mov    rcx,QWORD PTR [rsp+0xe0]
   140004320:	xor    rcx,rsp
   140004323:	call   0x140055f90
   140004328:	mov    rbx,QWORD PTR [rsp+0x148]
   140004330:	add    rsp,0xf0
   140004337:	pop    r15
   140004339:	pop    r14
   14000433b:	pop    r13
   14000433d:	pop    r12
   14000433f:	pop    rdi
   140004340:	pop    rsi
   140004341:	pop    rbp
   140004342:	ret    
   140004343:	int3   
   140004344:	rex push rbp
   140004346:	push   rsi
   140004347:	push   rdi
   140004348:	push   r12
   14000434a:	push   r13
   14000434c:	push   r14
   14000434e:	push   r15
   140004350:	lea    rbp,[rsp-0x208b0]
   140004358:	mov    eax,0x209b0
   14000435d:	call   0x140055f20
   140004362:	sub    rsp,rax
   140004365:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   14000436e:	mov    QWORD PTR [rsp+0x20a00],rbx
   140004376:	mov    rax,QWORD PTR [rip+0x7db63]        # 0x140081ee0
   14000437d:	xor    rax,rsp
   140004380:	mov    QWORD PTR [rbp+0x208a0],rax
   140004387:	mov    rsi,rdx
   14000438a:	mov    rdi,rcx
   14000438d:	mov    rdx,QWORD PTR [rcx+0x58]
   140004391:	lea    rcx,[rsp+0x70]
   140004396:	call   0x140007678
   14000439b:	nop
   14000439c:	mov    rdx,QWORD PTR [rdi+0x58]
   1400043a0:	lea    rcx,[rbp+0x8f50]
   1400043a7:	call   0x140007678
   1400043ac:	nop
   1400043ad:	mov    rdx,rsi
   1400043b0:	lea    rcx,[rsp+0x70]
   1400043b5:	call   0x140008358
   1400043ba:	lea    rcx,[rsp+0x70]
   1400043bf:	call   0x1400082a4
   1400043c4:	xor    r13d,r13d
   1400043c7:	test   al,al
   1400043c9:	jne    0x1400043da
   1400043cb:	mov    rdx,rsi
   1400043ce:	lea    rcx,[rip+0x9048b]        # 0x140094860
   1400043d5:	call   0x14001bda4
   1400043da:	lea    rcx,[rsp+0x70]
   1400043df:	call   0x14000a7c4
   1400043e4:	xor    edx,edx
   1400043e6:	lea    rcx,[rsp+0x70]
   1400043eb:	call   0x140009458
   1400043f0:	test   al,al
   1400043f2:	je     0x140004405
   1400043f4:	mov    edx,0x4
   1400043f9:	lea    rcx,[rip+0x90460]        # 0x140094860
   140004400:	call   0x14001bc60
   140004405:	lea    rcx,[rsp+0x70]
   14000440a:	call   0x140008324
   14000440f:	test   al,al
   140004411:	je     0x140004424
   140004413:	mov    edx,0x3
   140004418:	lea    rcx,[rip+0x90441]        # 0x140094860
   14000441f:	call   0x14001bc60
   140004424:	lea    r8,[rbp-0x6a]
   140004428:	xor    edx,edx
   14000442a:	lea    rcx,[rip+0x9040f]        # 0x140094840
   140004431:	call   0x1400259c8
   140004436:	mov    rax,QWORD PTR [rdi+0x58]
   14000443a:	cmp    BYTE PTR [rax+0x5132],r13b
   140004441:	je     0x140004453
   140004443:	cmp    BYTE PTR [rax+0x5130],r13b
   14000444a:	mov    BYTE PTR [rbp+0x10ee4],0x1
   140004451:	jne    0x14000445a
   140004453:	mov    BYTE PTR [rbp+0x10ee4],r13b
   14000445a:	lea    rcx,[rbp+0x8f50]
   140004461:	call   0x1400093e8
   140004466:	xor    r9d,r9d
   140004469:	mov    r8b,0x1
   14000446c:	lea    rdx,[rsp+0x70]
   140004471:	lea    rcx,[rbp+0x8f50]
   140004478:	call   0x1400084f0
   14000447d:	mov    r12d,r13d
   140004480:	mov    r15d,r13d
   140004483:	mov    ecx,0xd98
   140004488:	call   0x140040118
   14000448d:	mov    rcx,rax
   140004490:	mov    rdx,rsi
   140004493:	call   0x14001796c
   140004498:	mov    rcx,QWORD PTR [rdi+0x60]
   14000449c:	test   rcx,rcx
   14000449f:	je     0x1400044ab
   1400044a1:	mov    rax,QWORD PTR [rcx]
   1400044a4:	mov    edx,0x1
   1400044a9:	call   QWORD PTR [rax]
   1400044ab:	cmp    DWORD PTR [rbp+0x7ef8],0x3
   1400044b2:	jne    0x1400044de
   1400044b4:	mov    ecx,0x6328
   1400044b9:	call   0x140055dac
   1400044be:	mov    QWORD PTR [rsp+0x40],rax
   1400044c3:	test   rax,rax
   1400044c6:	je     0x1400044d9
   1400044c8:	lea    rdx,[rdi+0x160]
   1400044cf:	mov    rcx,rax
   1400044d2:	call   0x140026794
   1400044d7:	jmp    0x1400044dc
   1400044d9:	mov    rax,r13
   1400044dc:	jmp    0x140004519
   1400044de:	mov    rax,QWORD PTR [rdi+0x58]
   1400044e2:	mov    ecx,0x400000
   1400044e7:	cmp    QWORD PTR [rax+0x10],rcx
   1400044eb:	jbe    0x1400044f1
   1400044ed:	mov    QWORD PTR [rax+0x10],rcx
   1400044f1:	mov    ecx,0x21688
   1400044f6:	call   0x140055dac
   1400044fb:	mov    QWORD PTR [rsp+0x40],rax
   140004500:	test   rax,rax
   140004503:	je     0x140004516
   140004505:	lea    rdx,[rdi+0x160]
   14000450c:	mov    rcx,rax
   14000450f:	call   0x14002aaac
   140004514:	jmp    0x140004519
   140004516:	mov    rax,r13
   140004519:	mov    QWORD PTR [rdi+0x60],rax
   14000451d:	lea    r14,[rdi+0x160]
   140004524:	mov    rdx,r14
   140004527:	lea    rcx,[rbp+0x11f30]
   14000452e:	call   0x140049044
   140004533:	nop
   140004534:	cmp    BYTE PTR [rbp+0x7efc],r13b
   14000453b:	je     0x140004624
   140004541:	mov    rcx,QWORD PTR [rdi+0x60]
   140004545:	mov    r8,QWORD PTR [rcx]
   140004548:	mov    rax,QWORD PTR [rdi+0x58]
   14000454c:	mov    edx,DWORD PTR [rax+0x83d0]
   140004552:	call   QWORD PTR [r8+0x40]
   140004556:	mov    rax,QWORD PTR [rdi+0x58]
   14000455a:	mov    rbx,QWORD PTR [rax+0x10]
   14000455e:	mov    rdx,rbx
   140004561:	jmp    0x140004582
   140004563:	mov    rcx,QWORD PTR [rdi+0x58]
   140004567:	mov    rax,QWORD PTR [rcx+0x10]
   14000456b:	cmp    rax,0x100000
   140004571:	jbe    0x140004592
   140004573:	shr    rax,1
   140004576:	mov    QWORD PTR [rcx+0x10],rax
   14000457a:	mov    rdx,QWORD PTR [rdi+0x58]
   14000457e:	mov    rdx,QWORD PTR [rdx+0x10]
   140004582:	mov    rcx,QWORD PTR [rdi+0x60]
   140004586:	mov    rax,QWORD PTR [rcx]
   140004589:	call   QWORD PTR [rax+0x8]
   14000458c:	test   al,al
   14000458e:	je     0x140004563
   140004590:	jmp    0x1400045c3
   140004592:	xor    eax,eax
   140004594:	mov    QWORD PTR [rsp+0x58],rax
   140004599:	lea    rax,[rip+0x684d0]        # 0x14006ca70
   1400045a0:	mov    QWORD PTR [rsp+0x50],rax
   1400045a5:	lea    rax,[rip+0x6ce1c]        # 0x1400713c8
   1400045ac:	mov    QWORD PTR [rsp+0x48],rax
   1400045b1:	lea    rdx,[rip+0x7b290]        # 0x14007f848
   1400045b8:	lea    rcx,[rsp+0x48]
   1400045bd:	call   0x140058734
   1400045c2:	int3   
   1400045c3:	mov    rax,QWORD PTR [rdi+0x58]
   1400045c7:	mov    rcx,QWORD PTR [rax+0x10]
   1400045cb:	cmp    rbx,rcx
   1400045ce:	je     0x1400045e7
   1400045d0:	shr    rcx,0x14
   1400045d4:	shr    rbx,0x14
   1400045d8:	mov    r8d,ecx
   1400045db:	mov    edx,ebx
   1400045dd:	mov    ecx,0x28
   1400045e2:	call   0x1400012a0
   1400045e7:	mov    rcx,QWORD PTR [rdi+0x60]
   1400045eb:	lea    rbx,[rdi+0x8]
   1400045ef:	mov    rax,QWORD PTR [rcx]
   1400045f2:	mov    rdx,rbx
   1400045f5:	call   QWORD PTR [rax+0x10]
   1400045f8:	mov    QWORD PTR [rbx+0x38],rdi
   1400045fc:	mov    rax,QWORD PTR [rdi+0x58]
   140004600:	mov    QWORD PTR [rbx+0x40],rax
   140004604:	mov    QWORD PTR [rbx+0x48],r14
   140004608:	mov    QWORD PTR [rbx+0x30],r13
   14000460c:	mov    QWORD PTR [rbx+0x8],r13
   140004610:	lea    rax,[rsp+0x70]
   140004615:	mov    QWORD PTR [rbx+0x20],rax
   140004619:	lea    rax,[rbp+0x8f50]
   140004620:	mov    QWORD PTR [rbx+0x28],rax
   140004624:	lea    rcx,[rsp+0x70]
   140004629:	call   0x14000c0cc
   14000462e:	mov    r14,rax
   140004631:	xor    r8d,r8d
   140004634:	jmp    0x14000477d
   140004639:	lea    rcx,[rsp+0x70]
   14000463e:	call   0x140008324
   140004643:	test   al,al
   140004645:	je     0x140004658
   140004647:	mov    edx,0x3
   14000464c:	lea    rcx,[rip+0x9020d]        # 0x140094860
   140004653:	call   0x14001bc60
   140004658:	mov    DWORD PTR [rsp+0x28],r13d
   14000465d:	mov    QWORD PTR [rsp+0x20],r13
   140004662:	mov    r9d,0x5
   140004668:	xor    r8d,r8d
   14000466b:	lea    rdx,[rbp+0x3460]
   140004672:	mov    rcx,QWORD PTR [rdi+0x58]
   140004676:	call   0x140013fb8
   14000467b:	test   eax,eax
   14000467d:	je     0x1400046bd
   14000467f:	mov    bl,r13b
   140004682:	lea    r8,[rbp+0x3480]
   140004689:	mov    edx,0x1
   14000468e:	lea    rcx,[rip+0x901ab]        # 0x140094840
   140004695:	call   0x1400259c8
   14000469a:	xor    r8d,r8d
   14000469d:	xor    edx,edx
   14000469f:	lea    rcx,[rbp+0x3480]
   1400046a6:	call   0x1400489c4
   1400046ab:	inc    r15d
   1400046ae:	lea    rcx,[rsp+0x70]
   1400046b3:	call   0x14000a2c8
   1400046b8:	jmp    0x14000477a
   1400046bd:	mov    bl,0x1
   1400046bf:	mov    dl,BYTE PTR [rbp+0x7efc]
   1400046c5:	test   dl,dl
   1400046c7:	sete   r8b
   1400046cb:	lea    rcx,[rbp+0x3480]
   1400046d2:	call   0x1400489c4
   1400046d7:	cmp    BYTE PTR [rbp+0x7efc],r13b
   1400046de:	je     0x14000474b
   1400046e0:	xor    r8d,r8d
   1400046e3:	mov    rdx,r14
   1400046e6:	lea    rcx,[rsp+0x70]
   1400046eb:	call   0x14000a280
   1400046f0:	mov    BYTE PTR [rsp+0x20],bl
   1400046f4:	lea    r9,[rbp+0x11f30]
   1400046fb:	mov    r8,QWORD PTR [rbp+0x7ee8]
   140004702:	lea    rdx,[rsp+0x70]
   140004707:	mov    rcx,rdi
   14000470a:	call   0x1400063c4
   14000470f:	mov    DWORD PTR [rsp+0x30],r13d
   140004714:	mov    BYTE PTR [rsp+0x28],bl
   140004718:	lea    rax,[rbp+0x11f30]
   14000471f:	mov    QWORD PTR [rsp+0x20],rax
   140004724:	mov    r9,QWORD PTR [rdi+0x60]
   140004728:	lea    r8,[rbp+0x8f50]
   14000472f:	lea    rdx,[rsp+0x70]
   140004734:	mov    rcx,rdi
   140004737:	call   0x140005d8c
   14000473c:	lea    rcx,[rsp+0x70]
   140004741:	call   0x14000a30c
   140004746:	mov    r14,rax
   140004749:	jmp    0x140004777
   14000474b:	mov    BYTE PTR [rsp+0x20],r13b
   140004750:	xor    r9d,r9d
   140004753:	xor    r8d,r8d
   140004756:	lea    edx,[r9+0x2]
   14000475a:	lea    rcx,[rbp+0x8f50]
   140004761:	call   0x14000b340
   140004766:	lea    rdx,[rsp+0x70]
   14000476b:	lea    rcx,[rbp+0x8f50]
   140004772:	call   0x1400084a8
   140004777:	inc    r12d
   14000477a:	mov    r8b,bl
   14000477d:	mov    QWORD PTR [rsp+0x20],r13
   140004782:	mov    r9,QWORD PTR [rdi+0x60]
   140004786:	lea    rdx,[rsp+0x70]
   14000478b:	lea    rcx,[rbp+0x8f50]
   140004792:	call   0x1400096dc
   140004797:	test   al,al
   140004799:	jne    0x140004639
   14000479f:	mov    rcx,QWORD PTR [rdi+0x60]
   1400047a3:	mov    rax,QWORD PTR [rcx]
   1400047a6:	call   QWORD PTR [rax+0x28]
   1400047a9:	lea    rcx,[rbp+0x8f50]
   1400047b0:	test   r15d,r15d
   1400047b3:	jne    0x1400047bc
   1400047b5:	call   0x140020a90
   1400047ba:	jmp    0x1400047c6
   1400047bc:	lea    rdx,[rsp+0x70]
   1400047c1:	call   0x14000a340
   1400047c6:	test   r12d,r12d
   1400047c9:	jne    0x1400047e8
   1400047cb:	mov    rcx,rsi
   1400047ce:	call   0x140021af4
   1400047d3:	mov    ecx,0xd9c
   1400047d8:	call   0x140040118
   1400047dd:	mov    rcx,rax
   1400047e0:	mov    rdx,rsi
   1400047e3:	call   0x14001796c
   1400047e8:	test   r15d,r15d
   1400047eb:	jne    0x14000480b
   1400047ed:	mov    rdx,rsi
   1400047f0:	lea    ecx,[r15+0x42]
   1400047f4:	call   0x1400013b0
   1400047f9:	lea    edx,[r15+0xa]
   1400047fd:	lea    rcx,[rip+0x9005c]        # 0x140094860
   140004804:	call   0x14001bf08
   140004809:	jmp    0x14000482b
   14000480b:	mov    rax,QWORD PTR [rdi+0x58]
   14000480f:	cmp    BYTE PTR [rax+0x6152],r13b
   140004816:	jne    0x14000482b
   140004818:	mov    ecx,0xd22
   14000481d:	call   0x140040118
   140004822:	mov    rcx,rax
   140004825:	call   0x14001796c
   14000482a:	nop
   14000482b:	lea    rcx,[rbp+0x11f30]
   140004832:	call   0x1400491fc
   140004837:	nop
   140004838:	lea    rcx,[rbp+0x8f50]
   14000483f:	call   0x140007880
   140004844:	nop
   140004845:	lea    rcx,[rsp+0x70]
   14000484a:	call   0x140007880
   14000484f:	mov    rcx,QWORD PTR [rbp+0x208a0]
   140004856:	xor    rcx,rsp
   140004859:	call   0x140055f90
   14000485e:	mov    rbx,QWORD PTR [rsp+0x20a00]
   140004866:	add    rsp,0x209b0
   14000486d:	pop    r15
   14000486f:	pop    r14
   140004871:	pop    r13
   140004873:	pop    r12
   140004875:	pop    rdi
   140004876:	pop    rsi
   140004877:	pop    rbp
   140004878:	ret    
   140004879:	int3   
   14000487a:	int3   
   14000487b:	int3   
   14000487c:	mov    QWORD PTR [rsp+0x10],rbx
   140004881:	push   rdi
   140004882:	mov    eax,0x1030
   140004887:	call   0x140055f20
   14000488c:	sub    rsp,rax
   14000488f:	mov    rax,QWORD PTR [rip+0x7d64a]        # 0x140081ee0
   140004896:	xor    rax,rsp
   140004899:	mov    QWORD PTR [rsp+0x1020],rax
   1400048a1:	mov    rdi,rcx
   1400048a4:	mov    rcx,QWORD PTR [rcx+0x58]
   1400048a8:	jmp    0x1400048d8
   1400048aa:	mov    r9,QWORD PTR [rdi+0x58]
   1400048ae:	lea    rdx,[rsp+0x20]
   1400048b3:	mov    r8d,0x800
   1400048b9:	mov    rcx,rdi
   1400048bc:	mov    rbx,QWORD PTR [r9+0x10]
   1400048c0:	add    r9,0x83e2
   1400048c7:	call   0x14000199c
   1400048cc:	mov    rax,QWORD PTR [rdi+0x58]
   1400048d0:	mov    QWORD PTR [rax+0x10],rbx
   1400048d4:	mov    rcx,QWORD PTR [rdi+0x58]
   1400048d8:	mov    r8d,0x800
   1400048de:	lea    rdx,[rsp+0x20]
   1400048e3:	call   0x140013e48
   1400048e8:	test   al,al
   1400048ea:	jne    0x1400048aa
   1400048ec:	mov    rcx,QWORD PTR [rsp+0x1020]
   1400048f4:	xor    rcx,rsp
   1400048f7:	call   0x140055f90
   1400048fc:	mov    rbx,QWORD PTR [rsp+0x1048]
   140004904:	add    rsp,0x1030
   14000490b:	pop    rdi
   14000490c:	ret    
   14000490d:	int3   
   14000490e:	int3   
   14000490f:	int3   
   140004910:	rex push rbx
   140004912:	mov    eax,0x1030
   140004917:	call   0x140055f20
   14000491c:	sub    rsp,rax
   14000491f:	mov    rax,QWORD PTR [rip+0x7d5ba]        # 0x140081ee0
   140004926:	xor    rax,rsp
   140004929:	mov    QWORD PTR [rsp+0x1020],rax
   140004931:	mov    rbx,rcx
   140004934:	mov    rcx,QWORD PTR [rcx+0x58]
   140004938:	jmp    0x140004972
   14000493a:	mov    r8,QWORD PTR [rbx+0x58]
   14000493e:	cmp    BYTE PTR [r8+0x61d0],0x0
   140004946:	je     0x140004961
   140004948:	add    r8,0x61d2
   14000494f:	lea    rcx,[rsp+0x20]
   140004954:	xor    r9d,r9d
   140004957:	mov    edx,0x800
   14000495c:	call   0x14003197c
   140004961:	lea    rdx,[rsp+0x20]
   140004966:	mov    rcx,rbx
   140004969:	call   0x140004344
   14000496e:	mov    rcx,QWORD PTR [rbx+0x58]
   140004972:	mov    r8d,0x800
   140004978:	lea    rdx,[rsp+0x20]
   14000497d:	call   0x140013e48
   140004982:	test   al,al
   140004984:	jne    0x14000493a
   140004986:	mov    rcx,QWORD PTR [rsp+0x1020]
   14000498e:	xor    rcx,rsp
   140004991:	call   0x140055f90
   140004996:	add    rsp,0x1030
   14000499d:	pop    rbx
   14000499e:	ret    
   14000499f:	int3   
   1400049a0:	mov    rax,rsp
   1400049a3:	mov    QWORD PTR [rax+0x8],rbx
   1400049a7:	mov    QWORD PTR [rax+0x10],rbp
   1400049ab:	mov    QWORD PTR [rax+0x18],rsi
   1400049af:	mov    QWORD PTR [rax+0x20],rdi
   1400049b3:	push   r12
   1400049b5:	push   r14
   1400049b7:	push   r15
   1400049b9:	sub    rsp,0x50
   1400049bd:	movsxd rax,DWORD PTR [rcx+0xc]
   1400049c1:	xor    r12d,r12d
   1400049c4:	imul   rsi,rax,0x3350
   1400049cb:	mov    r15b,dl
   1400049ce:	mov    rbx,rcx
   1400049d1:	add    rsi,QWORD PTR [rcx]
   1400049d4:	lea    rdi,[rsi+0x1000]
   1400049db:	lea    r14,[rdi+0x1070]
   1400049e2:	mov    BYTE PTR [rdi+0x109a],r12b
   1400049e9:	movups xmm0,XMMWORD PTR [rsi+0x3318]
   1400049f0:	movups XMMWORD PTR [r14],xmm0
   1400049f4:	movups xmm1,XMMWORD PTR [rsi+0x3328]
   1400049fb:	movups XMMWORD PTR [r14+0x10],xmm1
   140004a00:	mov    eax,DWORD PTR [rsi+0x3338]
   140004a06:	mov    DWORD PTR [r14+0x20],eax
   140004a0a:	cmp    BYTE PTR [rdi+0x10ca],r12b
   140004a11:	je     0x140004a22
   140004a13:	lea    rdx,[rdi+0x10cb]
   140004a1a:	mov    rcx,r14
   140004a1d:	call   0x140017f6c
   140004a22:	cmp    DWORD PTR [rdi+0x1108],r12d
   140004a29:	je     0x140004a66
   140004a2b:	mov    rcx,QWORD PTR [rbx+0x28]
   140004a2f:	xor    r8d,r8d
   140004a32:	mov    rdx,QWORD PTR [rbx+0x18]
   140004a36:	mov    rax,QWORD PTR [rcx]
   140004a39:	call   QWORD PTR [rax+0x18]
   140004a3c:	mov    rcx,QWORD PTR [rbx+0x28]
   140004a40:	cmp    DWORD PTR [rcx+0x7f88],0x3
   140004a47:	jne    0x140004ce5
   140004a4d:	xor    r9d,r9d
   140004a50:	mov    BYTE PTR [rsp+0x20],r12b
   140004a55:	mov    r8,rdi
   140004a58:	lea    edx,[r9+0x2]
   140004a5c:	call   0x14000b340
   140004a61:	jmp    0x140004ce5
   140004a66:	mov    rax,QWORD PTR [rsi+0x3340]
   140004a6d:	movabs rcx,0x100000000
   140004a77:	mov    QWORD PTR [rdi+0x1060],rax
   140004a7e:	cmp    rax,rcx
   140004a81:	jb     0x140004aa0
   140004a83:	mov    rax,QWORD PTR [rbx+0x28]
   140004a87:	cmp    DWORD PTR [rax+0x7f88],0x2
   140004a8e:	jne    0x140004aa0
   140004a90:	cmp    BYTE PTR [rdi+0x1101],r12b
   140004a97:	jne    0x140004aa0
   140004a99:	mov    BYTE PTR [rdi+0x109a],0x1
   140004aa0:	mov    rcx,QWORD PTR [rbx+0x48]
   140004aa4:	mov    rax,QWORD PTR [rdi+0x1060]
   140004aab:	cmp    QWORD PTR [rcx+0x110],rax
   140004ab2:	jle    0x140004c88
   140004ab8:	mov    rcx,QWORD PTR [rbx+0x30]
   140004abc:	test   rcx,rcx
   140004abf:	je     0x140004c88
   140004ac5:	mov    rax,QWORD PTR [rbx+0x28]
   140004ac9:	cmp    BYTE PTR [rax+0x7f8d],r12b
   140004ad0:	jne    0x140004c88
   140004ad6:	cmp    BYTE PTR [rax+0x7f8c],r12b
   140004add:	jne    0x140004c88
   140004ae3:	mov    rax,QWORD PTR [rbx+0x40]
   140004ae7:	cmp    BYTE PTR [rax+0x5130],r12b
   140004aee:	jne    0x140004c88
   140004af4:	call   0x140020c58
   140004af9:	test   al,al
   140004afb:	jne    0x140004c88
   140004b01:	mov    rcx,QWORD PTR [rbx+0x28]
   140004b05:	xor    r8d,r8d
   140004b08:	mov    edx,DWORD PTR [rdi+0xc]
   140004b0b:	add    rdx,QWORD PTR [rbx+0x18]
   140004b0f:	mov    rax,QWORD PTR [rcx]
   140004b12:	call   QWORD PTR [rax+0x18]
   140004b15:	mov    rcx,QWORD PTR [rbx+0x28]
   140004b19:	call   0x14002122c
   140004b1e:	test   al,al
   140004b20:	je     0x140004c88
   140004b26:	mov    rcx,QWORD PTR [rbx+0x30]
   140004b2a:	xor    r8d,r8d
   140004b2d:	xor    edx,edx
   140004b2f:	mov    rax,QWORD PTR [rcx]
   140004b32:	call   QWORD PTR [rax+0x18]
   140004b35:	mov    rcx,QWORD PTR [rbx+0x48]
   140004b39:	call   0x1400374e0
   140004b3e:	mov    rcx,QWORD PTR [rbx+0x48]
   140004b42:	mov    rax,QWORD PTR [rcx+0x110]
   140004b49:	sub    QWORD PTR [rcx+0x130],rax
   140004b50:	mov    rax,QWORD PTR [rbx+0x48]
   140004b54:	mov    rdx,QWORD PTR [rbx+0x28]
   140004b58:	mov    rcx,QWORD PTR [rax+0x110]
   140004b5f:	add    QWORD PTR [rdx+0x7fb8],rcx
   140004b66:	mov    rax,QWORD PTR [rsi+0x3340]
   140004b6d:	mov    rcx,QWORD PTR [rbx+0x48]
   140004b71:	sub    QWORD PTR [rcx+0x128],rax
   140004b78:	mov    QWORD PTR [rsi+0x3340],r12
   140004b7f:	mov    rax,QWORD PTR [rbx+0x28]
   140004b83:	cmp    DWORD PTR [rax+0x7f88],0x3
   140004b8a:	jne    0x140004b9e
   140004b8c:	mov    rcx,QWORD PTR [rbx+0x48]
   140004b90:	mov    rax,QWORD PTR [rdi+0x1068]
   140004b97:	mov    QWORD PTR [rcx+0x138],rax
   140004b9e:	mov    rax,QWORD PTR [rbx+0x40]
   140004ba2:	mov    rcx,QWORD PTR [rbx+0x48]
   140004ba6:	mov    edx,DWORD PTR [r14]
   140004ba9:	add    rcx,0x170
   140004bb0:	mov    r8d,DWORD PTR [rax+0x83d0]
   140004bb7:	call   0x1400241ac
   140004bbc:	mov    rax,QWORD PTR [rbx+0x48]
   140004bc0:	lea    rdx,[rdi+0x10c2]
   140004bc7:	mov    QWORD PTR [rsp+0x40],rdx
   140004bcc:	lea    r10,[rdi+0x10b1]
   140004bd3:	lea    r11,[rdi+0x10a1]
   140004bda:	mov    dl,0x1
   140004bdc:	lea    rbp,[rdi+0x10cb]
   140004be3:	mov    QWORD PTR [rax+0x108],r12
   140004bea:	mov    rax,QWORD PTR [rbx+0x48]
   140004bee:	mov    QWORD PTR [rsp+0x38],rbp
   140004bf3:	mov    QWORD PTR [rax+0x110],r12
   140004bfa:	mov    rax,QWORD PTR [rbx+0x28]
   140004bfe:	mov    r9,QWORD PTR [rbx+0x40]
   140004c02:	add    r9,0x5030
   140004c09:	mov    ecx,DWORD PTR [rax+0x7f88]
   140004c0f:	mov    eax,DWORD PTR [rdi+0x10ec]
   140004c15:	sub    ecx,0x3
   140004c18:	neg    ecx
   140004c1a:	mov    DWORD PTR [rsp+0x30],eax
   140004c1e:	mov    rcx,QWORD PTR [rbx+0x48]
   140004c22:	sbb    r8d,r8d
   140004c25:	mov    QWORD PTR [rsp+0x28],r10
   140004c2a:	add    r8d,0x5
   140004c2e:	mov    QWORD PTR [rsp+0x20],r11
   140004c33:	call   0x14003750c
   140004c38:	mov    rcx,QWORD PTR [rbx+0x48]
   140004c3c:	call   0x1400067c8
   140004c41:	mov    rax,QWORD PTR [rsi+0x3340]
   140004c48:	mov    QWORD PTR [rdi+0x1060],rax
   140004c4f:	movups xmm0,XMMWORD PTR [rsi+0x3318]
   140004c56:	movups XMMWORD PTR [r14],xmm0
   140004c5a:	movups xmm1,XMMWORD PTR [rsi+0x3328]
   140004c61:	movups XMMWORD PTR [r14+0x10],xmm1
   140004c66:	mov    eax,DWORD PTR [rsi+0x3338]
   140004c6c:	mov    DWORD PTR [r14+0x20],eax
   140004c70:	cmp    BYTE PTR [rdi+0x10ca],r12b
   140004c77:	je     0x140004c84
   140004c79:	mov    rdx,rbp
   140004c7c:	mov    rcx,r14
   140004c7f:	call   0x140017f6c
   140004c84:	mov    BYTE PTR [rdi+0x1a],r12b
   140004c88:	mov    rax,QWORD PTR [rbx+0x48]
   140004c8c:	mov    rcx,QWORD PTR [rax+0x110]
   140004c93:	mov    QWORD PTR [rdi+0x1058],rcx
   140004c9a:	cmp    BYTE PTR [rdi+0x1099],r12b
   140004ca1:	je     0x140004cac
   140004ca3:	mov    WORD PTR [rdi+0x1098],0x1
   140004cac:	mov    rcx,QWORD PTR [rbx+0x28]
   140004cb0:	xor    r8d,r8d
   140004cb3:	mov    rdx,QWORD PTR [rbx+0x18]
   140004cb7:	mov    rax,QWORD PTR [rcx]
   140004cba:	call   QWORD PTR [rax+0x18]
   140004cbd:	mov    rcx,QWORD PTR [rbx+0x28]
   140004cc1:	xor    r9d,r9d
   140004cc4:	mov    r8,rdi
   140004cc7:	mov    BYTE PTR [rsp+0x20],r12b
   140004ccc:	lea    edx,[r9+0x2]
   140004cd0:	call   0x14000b340
   140004cd5:	mov    rcx,QWORD PTR [rbx+0x28]
   140004cd9:	xor    edx,edx
   140004cdb:	mov    rax,QWORD PTR [rcx]
   140004cde:	lea    r8d,[rdx+0x2]
   140004ce2:	call   QWORD PTR [rax+0x18]
   140004ce5:	cmp    BYTE PTR [rsi+0x3348],r12b
   140004cec:	je     0x140004d3c
   140004cee:	cmp    QWORD PTR [rbx+0x30],r12
   140004cf2:	je     0x140004d22
   140004cf4:	mov    eax,DWORD PTR [rbx+0x8]
   140004cf7:	test   eax,eax
   140004cf9:	je     0x140004d11
   140004cfb:	cmp    eax,0x10
   140004cfe:	jg     0x140004d11
   140004d00:	dec    eax
   140004d02:	movsxd rcx,eax
   140004d05:	imul   rax,rcx,0x3350
   140004d0c:	add    rax,QWORD PTR [rbx]
   140004d0f:	jmp    0x140004d14
   140004d11:	mov    rax,r12
   140004d14:	cmp    rsi,rax
   140004d17:	jne    0x140004d22
   140004d19:	mov    rcx,QWORD PTR [rbx+0x30]
   140004d1d:	call   0x1400207cc
   140004d22:	mov    rcx,QWORD PTR [rbx+0x40]
   140004d26:	cmp    WORD PTR [rcx+0x73d0],r12w
   140004d2e:	jne    0x140004d3c
   140004d30:	mov    rdx,QWORD PTR [rbx+0x28]
   140004d34:	mov    r8,rsi
   140004d37:	call   0x14001da94
   140004d3c:	inc    DWORD PTR [rbx+0xc]
   140004d3f:	test   r15b,r15b
   140004d42:	jne    0x140004d4c
   140004d44:	mov    rcx,rbx
   140004d47:	call   0x1400053ac
   140004d4c:	lea    r11,[rsp+0x50]
   140004d51:	mov    rbx,QWORD PTR [r11+0x20]
   140004d55:	mov    rbp,QWORD PTR [r11+0x28]
   140004d59:	mov    rsi,QWORD PTR [r11+0x30]
   140004d5d:	mov    rdi,QWORD PTR [r11+0x38]
   140004d61:	mov    rsp,r11
   140004d64:	pop    r15
   140004d66:	pop    r14
   140004d68:	pop    r12
   140004d6a:	ret    
   140004d6b:	int3   
   140004d6c:	sub    rsp,0x28
   140004d70:	lea    r8,[rdx+0x3510]
   140004d77:	add    rdx,0x26
   140004d7b:	lea    rcx,[rip+0x8fade]        # 0x140094860
   140004d82:	call   0x14001bbcc
   140004d87:	mov    edx,0x3
   140004d8c:	lea    rcx,[rip+0x8facd]        # 0x140094860
   140004d93:	add    rsp,0x28
   140004d97:	jmp    0x14001bc60
   140004d9c:	rex push rbp
   140004d9e:	push   rsi
   140004d9f:	push   rdi
   140004da0:	push   r12
   140004da2:	push   r13
   140004da4:	push   r14
   140004da6:	push   r15
   140004da8:	lea    rbp,[rsp-0xfb0]
   140004db0:	mov    eax,0x10b0
   140004db5:	call   0x140055f20
   140004dba:	sub    rsp,rax
   140004dbd:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   140004dc6:	mov    QWORD PTR [rsp+0x1100],rbx
   140004dce:	mov    rax,QWORD PTR [rip+0x7d10b]        # 0x140081ee0
   140004dd5:	xor    rax,rsp
   140004dd8:	mov    QWORD PTR [rbp+0xfa8],rax
   140004ddf:	mov    r12,rdx
   140004de2:	mov    r14,rcx
   140004de5:	xor    esi,esi
   140004de7:	xor    ebx,ebx
   140004de9:	cmp    QWORD PTR [rdx+0x20],rbx
   140004ded:	jbe    0x1400052f6
   140004df3:	mov    rdx,rbx
   140004df6:	mov    rcx,r12
   140004df9:	call   0x140006b9c
   140004dfe:	mov    rdx,rax
   140004e01:	mov    rcx,r14
   140004e04:	call   0x1400054f8
   140004e09:	test   al,al
   140004e0b:	je     0x140004e10
   140004e0d:	inc    rsi
   140004e10:	inc    rbx
   140004e13:	cmp    rbx,QWORD PTR [r12+0x20]
   140004e18:	jb     0x140004df3
   140004e1a:	xor    ebx,ebx
   140004e1c:	test   rsi,rsi
   140004e1f:	je     0x1400052f6
   140004e25:	xor    r8d,r8d
   140004e28:	lea    edx,[rbx+0x1]
   140004e2b:	mov    rcx,r14
   140004e2e:	call   0x140005320
   140004e33:	lea    eax,[rbx+0x40]
   140004e36:	mul    rsi
   140004e39:	lea    rcx,[rbx-0x1]
   140004e3d:	cmovo  rax,rcx
   140004e41:	mov    rcx,rax
   140004e44:	call   0x140055df0
   140004e49:	mov    r13,rax
   140004e4c:	mov    QWORD PTR [rsp+0x38],rax
   140004e51:	mov    edi,ebx
   140004e53:	cmp    QWORD PTR [r12+0x20],rbx
   140004e58:	jbe    0x140004eb3
   140004e5a:	mov    r15,rax
   140004e5d:	mov    rdx,rdi
   140004e60:	mov    rcx,r12
   140004e63:	call   0x140006b9c
   140004e68:	mov    QWORD PTR [rsp+0x28],rax
   140004e6d:	mov    rdx,rax
   140004e70:	mov    rcx,r14
   140004e73:	call   0x1400054f8
   140004e78:	test   al,al
   140004e7a:	je     0x140004ea9
   140004e7c:	mov    rbx,r15
   140004e7f:	add    r15,0x40
   140004e83:	mov    QWORD PTR [rbx],rdi
   140004e86:	mov    rax,QWORD PTR [rsp+0x28]
   140004e8b:	mov    rax,QWORD PTR [rax+0x8]
   140004e8f:	mov    QWORD PTR [rbx+0x10],rax
   140004e93:	lea    rcx,[rbx+0x18]
   140004e97:	xor    edx,edx
   140004e99:	lea    r8d,[rdx+0x20]
   140004e9d:	call   0x140058f40
   140004ea2:	and    WORD PTR [rbx+0x38],0x0
   140004ea7:	xor    ebx,ebx
   140004ea9:	inc    rdi
   140004eac:	cmp    rdi,QWORD PTR [r12+0x20]
   140004eb1:	jb     0x140004e5d
   140004eb3:	mov    DWORD PTR [rip+0x7da4f],ebx        # 0x140082908
   140004eb9:	lea    r9,[rip+0xffffffffffffec30]        # 0x140003af0
   140004ec0:	mov    r8d,0x40
   140004ec6:	mov    rdx,rsi
   140004ec9:	mov    rcx,r13
   140004ecc:	call   0x14005aa20
   140004ed1:	mov    r15,rbx
   140004ed4:	test   rsi,rsi
   140004ed7:	je     0x140004f8f
   140004edd:	lea    rdi,[r13+0x50]
   140004ee1:	lea    r13,[rsi-0x1]
   140004ee5:	cmp    r15,r13
   140004ee8:	jae    0x140004efd
   140004eea:	cmp    BYTE PTR [rdi-0x17],bl
   140004eed:	jne    0x140004efd
   140004eef:	cmp    BYTE PTR [rdi+0x29],bl
   140004ef2:	jne    0x140004efd
   140004ef4:	mov    rax,QWORD PTR [rdi]
   140004ef7:	cmp    QWORD PTR [rdi-0x40],rax
   140004efb:	je     0x140004f16
   140004efd:	test   r15,r15
   140004f00:	je     0x140004f7a
   140004f02:	cmp    BYTE PTR [rdi-0x17],bl
   140004f05:	jne    0x140004f7a
   140004f07:	cmp    BYTE PTR [rdi-0x57],bl
   140004f0a:	jne    0x140004f7a
   140004f0c:	mov    rax,QWORD PTR [rdi-0x80]
   140004f10:	cmp    QWORD PTR [rdi-0x40],rax
   140004f14:	jne    0x140004f7a
   140004f16:	call   0x140046bb4
   140004f1b:	lea    r8,[rsi+rsi*1]
   140004f1f:	mov    rdx,r15
   140004f22:	mov    rcx,r14
   140004f25:	call   0x140005320
   140004f2a:	mov    rdx,QWORD PTR [rdi-0x50]
   140004f2e:	mov    rcx,r12
   140004f31:	call   0x140006b9c
   140004f36:	mov    rbx,QWORD PTR [rax]
   140004f39:	lea    rcx,[rsp+0x50]
   140004f3e:	call   0x14002071c
   140004f43:	nop
   140004f44:	xor    r8d,r8d
   140004f47:	mov    rdx,rbx
   140004f4a:	lea    rcx,[rsp+0x50]
   140004f4f:	call   0x140020c80
   140004f54:	xor    ebx,ebx
   140004f56:	test   al,al
   140004f58:	je     0x140004f6c
   140004f5a:	lea    rdx,[rsp+0x50]
   140004f5f:	mov    rcx,r14
   140004f62:	call   0x14000312c
   140004f67:	mov    DWORD PTR [rdi-0x48],eax
   140004f6a:	jmp    0x140004f70
   140004f6c:	mov    BYTE PTR [rdi-0x17],0x1
   140004f70:	lea    rcx,[rsp+0x50]
   140004f75:	call   0x140020758
   140004f7a:	inc    r15
   140004f7d:	add    rdi,0x40
   140004f81:	cmp    r15,rsi
   140004f84:	jb     0x140004ee5
   140004f8a:	mov    r13,QWORD PTR [rsp+0x38]
   140004f8f:	mov    DWORD PTR [rip+0x7d96f],0x1        # 0x140082908
   140004f99:	lea    r9,[rip+0xffffffffffffeb50]        # 0x140003af0
   140004fa0:	mov    r8d,0x40
   140004fa6:	mov    rdx,rsi
   140004fa9:	mov    rcx,r13
   140004fac:	call   0x14005aa20
   140004fb1:	call   0x140046ea4
   140004fb6:	mov    QWORD PTR [r14],rax
   140004fb9:	mov    QWORD PTR [rsp+0x30],rbx
   140004fbe:	xor    ecx,ecx
   140004fc0:	mov    QWORD PTR [rsp+0x20],rcx
   140004fc5:	lea    eax,[rcx+0x2]
   140004fc8:	mov    QWORD PTR [rsp+0x28],rax
   140004fcd:	xor    r15d,r15d
   140004fd0:	test   rsi,rsi
   140004fd3:	je     0x14000510a
   140004fd9:	lea    rax,[rsi-0x1]
   140004fdd:	lea    rdi,[r13+0x50]
   140004fe1:	mov    r13,QWORD PTR [rsp+0x30]
   140004fe6:	cmp    r15,rax
   140004fe9:	jae    0x140005008
   140004feb:	cmp    BYTE PTR [rdi-0x17],0x0
   140004fef:	jne    0x140005008
   140004ff1:	cmp    BYTE PTR [rdi+0x29],0x0
   140004ff5:	jne    0x140005008
   140004ff7:	mov    rax,QWORD PTR [rdi]
   140004ffa:	cmp    QWORD PTR [rdi-0x40],rax
   140004ffe:	jne    0x140005008
   140005000:	mov    eax,DWORD PTR [rdi-0x8]
   140005003:	cmp    DWORD PTR [rdi-0x48],eax
   140005006:	je     0x140005042
   140005008:	test   r15,r15
   14000500b:	je     0x1400050e7
   140005011:	cmp    BYTE PTR [rdi-0x17],0x0
   140005015:	jne    0x1400050e7
   14000501b:	cmp    BYTE PTR [rdi-0x57],0x0
   14000501f:	jne    0x1400050e7
   140005025:	mov    rax,QWORD PTR [rdi-0x80]
   140005029:	cmp    QWORD PTR [rdi-0x40],rax
   14000502d:	jne    0x1400050e7
   140005033:	mov    eax,DWORD PTR [rdi-0x88]
   140005039:	cmp    DWORD PTR [rdi-0x48],eax
   14000503c:	jne    0x1400050e7
   140005042:	test   rcx,rcx
   140005045:	jne    0x14000505c
   140005047:	mov    rdx,QWORD PTR [rdi-0x50]
   14000504b:	mov    rcx,r12
   14000504e:	call   0x140006b9c
   140005053:	add    r13,QWORD PTR [rax+0x8]
   140005057:	jmp    0x1400050e2
   14000505c:	call   0x140046bb4
   140005061:	lea    r8,[r13*2+0x0]
   140005069:	lea    rdx,[rbx+r13*1]
   14000506d:	mov    rcx,r14
   140005070:	call   0x140005320
   140005075:	mov    rdx,QWORD PTR [rdi-0x50]
   140005079:	mov    rcx,r12
   14000507c:	call   0x140006b9c
   140005081:	add    rbx,QWORD PTR [rax+0x8]
   140005085:	mov    QWORD PTR [rsp+0x30],rbx
   14000508a:	mov    rdx,QWORD PTR [rdi-0x50]
   14000508e:	mov    rcx,r12
   140005091:	call   0x140006b9c
   140005096:	mov    rbx,QWORD PTR [rax]
   140005099:	lea    rcx,[rsp+0x50]
   14000509e:	call   0x14002071c
   1400050a3:	nop
   1400050a4:	xor    r8d,r8d
   1400050a7:	mov    rdx,rbx
   1400050aa:	lea    rcx,[rsp+0x50]
   1400050af:	call   0x140020c80
   1400050b4:	test   al,al
   1400050b6:	je     0x1400050cf
   1400050b8:	lea    r8,[rdi-0x38]
   1400050bc:	lea    rdx,[rsp+0x50]
   1400050c1:	mov    rcx,r14
   1400050c4:	call   0x140003030
   1400050c9:	mov    BYTE PTR [rdi-0x18],0x1
   1400050cd:	jmp    0x1400050d3
   1400050cf:	mov    BYTE PTR [rdi-0x17],0x1
   1400050d3:	lea    rcx,[rsp+0x50]
   1400050d8:	call   0x140020758
   1400050dd:	mov    rbx,QWORD PTR [rsp+0x30]
   1400050e2:	mov    rcx,QWORD PTR [rsp+0x20]
   1400050e7:	inc    r15
   1400050ea:	add    rdi,0x40
   1400050ee:	cmp    r15,rsi
   1400050f1:	lea    rax,[rsi-0x1]
   1400050f5:	jb     0x140004fe6
   1400050fb:	mov    QWORD PTR [rsp+0x30],r13
   140005100:	mov    r13,QWORD PTR [rsp+0x38]
   140005105:	mov    rax,QWORD PTR [rsp+0x28]
   14000510a:	inc    rcx
   14000510d:	mov    QWORD PTR [rsp+0x20],rcx
   140005112:	sub    rax,0x1
   140005116:	mov    QWORD PTR [rsp+0x28],rax
   14000511b:	jne    0x140004fcd
   140005121:	mov    DWORD PTR [rip+0x7d7dd],0x2        # 0x140082908
   14000512b:	lea    r9,[rip+0xffffffffffffe9be]        # 0x140003af0
   140005132:	mov    r8d,0x40
   140005138:	mov    rdx,rsi
   14000513b:	mov    rcx,r13
   14000513e:	call   0x14005aa20
   140005143:	mov    edx,0x64
   140005148:	mov    r8d,edx
   14000514b:	mov    rcx,r14
   14000514e:	call   0x140005320
   140005153:	xor    edi,edi
   140005155:	mov    DWORD PTR [rsp+0x20],edi
   140005159:	xor    ebx,ebx
   14000515b:	lea    rax,[rsi-0x1]
   14000515f:	test   rax,rax
   140005162:	je     0x1400052a6
   140005168:	mov    r15,rbx
   14000516b:	shl    r15,0x6
   14000516f:	add    r15,r13
   140005172:	inc    rbx
   140005175:	cmp    rbx,rsi
   140005178:	jae    0x140005299
   14000517e:	mov    rdi,rbx
   140005181:	shl    rdi,0x6
   140005185:	add    rdi,r13
   140005188:	mov    r13d,DWORD PTR [rsp+0x20]
   14000518d:	mov    r9b,0x1
   140005190:	xor    r8d,r8d
   140005193:	mov    rdx,rdi
   140005196:	mov    rcx,r15
   140005199:	call   0x140003538
   14000519e:	test   al,al
   1400051a0:	je     0x14000528b
   1400051a6:	mov    rdx,QWORD PTR [r15]
   1400051a9:	mov    rcx,r12
   1400051ac:	call   0x140006b9c
   1400051b1:	mov    QWORD PTR [rsp+0x28],rax
   1400051b6:	mov    rdx,QWORD PTR [rdi]
   1400051b9:	mov    rcx,r12
   1400051bc:	call   0x140006b9c
   1400051c1:	mov    r8,rax
   1400051c4:	mov    QWORD PTR [rsp+0x20],rax
   1400051c9:	mov    rcx,QWORD PTR [r15]
   1400051cc:	mov    QWORD PTR [rax+0x50],rcx
   1400051d0:	mov    rcx,QWORD PTR [r14+0x58]
   1400051d4:	mov    edx,DWORD PTR [rcx+0x61c0]
   1400051da:	sub    edx,0x2
   1400051dd:	cmp    edx,0x1
   1400051e0:	ja     0x14000525c
   1400051e2:	lea    rcx,[rdi-0x40]
   1400051e6:	cmp    r15,rcx
   1400051e9:	jne    0x140005221
   1400051eb:	mov    r8d,0x14
   1400051f1:	lea    rdx,[rbp+0xf80]
   1400051f8:	mov    rcx,QWORD PTR [rsp+0x28]
   1400051fd:	mov    rcx,QWORD PTR [rcx+0x8]
   140005201:	call   0x140045f5c
   140005206:	mov    rax,QWORD PTR [rsp+0x28]
   14000520b:	mov    r8,QWORD PTR [rax]
   14000520e:	lea    rdx,[rbp+0xf80]
   140005215:	lea    rcx,[rip+0x674e4]        # 0x14006c700
   14000521c:	call   0x14001796c
   140005221:	mov    r8d,0x14
   140005227:	lea    rdx,[rbp+0xf80]
   14000522e:	mov    rcx,QWORD PTR [rsp+0x20]
   140005233:	mov    rcx,QWORD PTR [rcx+0x8]
   140005237:	call   0x140045f5c
   14000523c:	mov    rax,QWORD PTR [rsp+0x20]
   140005241:	mov    r8,QWORD PTR [rax]
   140005244:	lea    rdx,[rbp+0xf80]
   14000524b:	lea    rcx,[rip+0x674c6]        # 0x14006c718
   140005252:	call   0x14001796c
   140005257:	mov    r8,QWORD PTR [rsp+0x20]
   14000525c:	mov    rax,QWORD PTR [r14+0x58]
   140005260:	cmp    DWORD PTR [rax+0x61c0],0x4
   140005267:	jne    0x140005278
   140005269:	mov    rdx,QWORD PTR [r8]
   14000526c:	lea    rcx,[rip+0x674bd]        # 0x14006c730
   140005273:	call   0x14001796c
   140005278:	inc    rbx
   14000527b:	add    rdi,0x40
   14000527f:	inc    r13d
   140005282:	cmp    rbx,rsi
   140005285:	jb     0x14000518d
   14000528b:	mov    DWORD PTR [rsp+0x20],r13d
   140005290:	mov    r13,QWORD PTR [rsp+0x38]
   140005295:	lea    rax,[rsi-0x1]
   140005299:	cmp    rbx,rax
   14000529c:	jb     0x140005168
   1400052a2:	mov    edi,DWORD PTR [rsp+0x20]
   1400052a6:	mov    rax,QWORD PTR [r14+0x58]
   1400052aa:	mov    r8d,DWORD PTR [rax+0x61c0]
   1400052b1:	cmp    r8d,0x4
   1400052b5:	je     0x1400052e6
   1400052b7:	lea    rax,[rip+0x6747a]        # 0x14006c738
   1400052be:	lea    rcx,[rip+0x6747b]        # 0x14006c740
   1400052c5:	cmp    r8d,0x3
   1400052c9:	cmove  rcx,rax
   1400052cd:	call   0x14001796c
   1400052d2:	mov    ecx,0xeae
   1400052d7:	call   0x140040118
   1400052dc:	mov    rcx,rax
   1400052df:	mov    edx,edi
   1400052e1:	call   0x14001796c
   1400052e6:	mov    rcx,r13
   1400052e9:	call   0x140055de8
   1400052ee:	mov    rcx,QWORD PTR [r14]
   1400052f1:	call   0x140047010
   1400052f6:	mov    rcx,QWORD PTR [rbp+0xfa8]
   1400052fd:	xor    rcx,rsp
   140005300:	call   0x140055f90
   140005305:	mov    rbx,QWORD PTR [rsp+0x1100]
   14000530d:	add    rsp,0x10b0
   140005314:	pop    r15
   140005316:	pop    r14
   140005318:	pop    r13
   14000531a:	pop    r12
   14000531c:	pop    rdi
   14000531d:	pop    rsi
   14000531e:	pop    rbp
   14000531f:	ret    
   140005320:	mov    QWORD PTR [rsp+0x8],rbx
   140005325:	mov    QWORD PTR [rsp+0x10],rsi
   14000532a:	push   rdi
   14000532b:	sub    rsp,0x30
   14000532f:	mov    rax,QWORD PTR [rcx+0x58]
   140005333:	mov    rbx,r8
   140005336:	mov    rdi,rdx
   140005339:	cmp    BYTE PTR [rax+0x6150],0x0
   140005340:	jne    0x14000539a
   140005342:	cmp    DWORD PTR [rax+0x61c0],0x4
   140005349:	je     0x14000539a
   14000534b:	cmp    rdx,rbx
   14000534e:	jbe    0x140005368
   140005350:	lea    rcx,[rip+0x67399]        # 0x14006c6f0
   140005357:	call   0x14001796c
   14000535c:	mov    DWORD PTR [rip+0x7d5a6],0x65        # 0x14008290c
   140005366:	jmp    0x14000539a
   140005368:	mov    rdx,rbx
   14000536b:	mov    rcx,rdi
   14000536e:	call   0x14004596c
   140005373:	cmp    eax,DWORD PTR [rip+0x7d593]        # 0x14008290c
   140005379:	mov    esi,eax
   14000537b:	je     0x14000539a
   14000537d:	and    QWORD PTR [rsp+0x20],0x0
   140005383:	mov    r9,rbx
   140005386:	mov    r8,rdi
   140005389:	mov    rdx,rbx
   14000538c:	mov    rcx,rdi
   14000538f:	call   0x14004829c
   140005394:	mov    DWORD PTR [rip+0x7d572],esi        # 0x14008290c
   14000539a:	mov    rbx,QWORD PTR [rsp+0x40]
   14000539f:	mov    rsi,QWORD PTR [rsp+0x48]
   1400053a4:	add    rsp,0x30
   1400053a8:	pop    rdi
   1400053a9:	ret    
   1400053aa:	int3   
   1400053ab:	int3   
   1400053ac:	rex push rbx
   1400053ae:	sub    rsp,0x20
   1400053b2:	mov    eax,DWORD PTR [rcx+0xc]
   1400053b5:	mov    rbx,rcx
   1400053b8:	cmp    eax,DWORD PTR [rcx+0x8]
   1400053bb:	jge    0x1400053ef
   1400053bd:	cdqe   
   1400053bf:	imul   rdx,rax,0x3350
   1400053c6:	mov    rax,QWORD PTR [rbx]
   1400053c9:	cmp    BYTE PTR [rdx+rax*1+0x3349],0x0
   1400053d1:	je     0x1400053ef
   1400053d3:	mov    dl,0x1
   1400053d5:	mov    rcx,rbx
   1400053d8:	call   0x140006644
   1400053dd:	mov    dl,0x1
   1400053df:	mov    rcx,rbx
   1400053e2:	call   0x1400049a0
   1400053e7:	mov    eax,DWORD PTR [rbx+0xc]
   1400053ea:	cmp    eax,DWORD PTR [rbx+0x8]
   1400053ed:	jl     0x1400053bd
   1400053ef:	mov    rcx,rbx
   1400053f2:	add    rsp,0x20
   1400053f6:	pop    rbx
   1400053f7:	jmp    0x140006360
   1400053fc:	mov    eax,DWORD PTR [rcx+0x8]
   1400053ff:	test   eax,eax
   140005401:	je     0x140005418
   140005403:	cmp    eax,0x10
   140005406:	jg     0x140005418
   140005408:	dec    eax
   14000540a:	movsxd rdx,eax
   14000540d:	imul   rax,rdx,0x3350
   140005414:	add    rax,QWORD PTR [rcx]
   140005417:	ret    
   140005418:	xor    eax,eax
   14000541a:	ret    
   14000541b:	int3   
   14000541c:	movsxd rax,DWORD PTR [rcx+0xc]
   140005420:	imul   rax,rax,0x3350
   140005427:	add    rax,QWORD PTR [rcx]
   14000542a:	ret    
   14000542b:	int3   
   14000542c:	rex push rbp
   14000542e:	push   rbx
   14000542f:	push   rdi
   140005430:	lea    rbp,[rsp-0x47]
   140005435:	sub    rsp,0xa0
   14000543c:	mov    rax,QWORD PTR [rip+0x7ca9d]        # 0x140081ee0
   140005443:	xor    rax,rsp
   140005446:	mov    QWORD PTR [rbp+0x3f],rax
   14000544a:	mov    rcx,QWORD PTR [rdx+0x8]
   14000544e:	mov    rdi,r9
   140005451:	lea    rdx,[rbp+0x7]
   140005455:	mov    rbx,r8
   140005458:	call   QWORD PTR [rip+0x66f02]        # 0x14006c360
   14000545e:	xor    ecx,ecx
   140005460:	test   eax,eax
   140005462:	je     0x1400054cd
   140005464:	cmp    DWORD PTR [rbp+0x2f],0x2
   140005468:	jb     0x1400054cd
   14000546a:	mov    edx,DWORD PTR [rbp+0x33]
   14000546d:	mov    eax,DWORD PTR [rbp+0x37]
   140005470:	mov    r9d,DWORD PTR [rbp+0x23]
   140005474:	shl    rdx,0x20
   140005478:	add    rdx,rax
   14000547b:	cmp    QWORD PTR [rbx+0x8],rcx
   14000547f:	jbe    0x1400054a0
   140005481:	mov    r8,QWORD PTR [rbx]
   140005484:	lea    rax,[r8+0x8]
   140005488:	cmp    QWORD PTR [rax+0x8],rdx
   14000548c:	jne    0x140005493
   14000548e:	cmp    QWORD PTR [rax],r9
   140005491:	je     0x1400054e6
   140005493:	inc    rcx
   140005496:	add    rax,0x18
   14000549a:	cmp    rcx,QWORD PTR [rbx+0x8]
   14000549e:	jb     0x140005488
   1400054a0:	mov    rax,QWORD PTR [rdi]
   1400054a3:	mov    rcx,rbx
   1400054a6:	mov    QWORD PTR [rbp-0x29],rdx
   1400054aa:	lea    rdx,[rbp-0x19]
   1400054ae:	movsd  xmm1,QWORD PTR [rbp-0x29]
   1400054b3:	mov    QWORD PTR [rbp-0x39],rax
   1400054b7:	mov    QWORD PTR [rbp-0x31],r9
   1400054bb:	movups xmm0,XMMWORD PTR [rbp-0x39]
   1400054bf:	movsd  QWORD PTR [rbp-0x9],xmm1
   1400054c4:	movaps XMMWORD PTR [rbp-0x19],xmm0
   1400054c8:	call   0x140005c70
   1400054cd:	xor    al,al
   1400054cf:	mov    rcx,QWORD PTR [rbp+0x3f]
   1400054d3:	xor    rcx,rsp
   1400054d6:	call   0x140055f90
   1400054db:	add    rsp,0xa0
   1400054e2:	pop    rdi
   1400054e3:	pop    rbx
   1400054e4:	pop    rbp
   1400054e5:	ret    
   1400054e6:	lea    rcx,[rcx+rcx*2]
   1400054ea:	mov    al,0x1
   1400054ec:	mov    rdx,QWORD PTR [r8+rcx*8]
   1400054f0:	mov    QWORD PTR [rdi],rdx
   1400054f3:	jmp    0x1400054cf
   1400054f5:	int3   
   1400054f6:	int3   
   1400054f7:	int3   
   1400054f8:	mov    eax,DWORD PTR [rdx+0x2c]
   1400054fb:	mov    r8d,0x1
   140005501:	sub    eax,0x2
   140005504:	cmp    eax,r8d
   140005507:	ja     0x140005520
   140005509:	mov    rax,QWORD PTR [rcx+0x58]
   14000550d:	mov    rcx,QWORD PTR [rax+0x61c8]
   140005514:	cmp    QWORD PTR [rdx+0x8],rcx
   140005518:	jb     0x140005520
   14000551a:	cmp    BYTE PTR [rdx+0x58],0x0
   14000551e:	je     0x140005523
   140005520:	xor    r8d,r8d
   140005523:	mov    al,r8b
   140005526:	ret    
   140005527:	int3   
   140005528:	rex push rbp
   14000552a:	push   rbx
   14000552b:	push   rsi
   14000552c:	push   rdi
   14000552d:	push   r12
   14000552f:	push   r13
   140005531:	push   r14
   140005533:	push   r15
   140005535:	lea    rbp,[rsp-0x1098]
   14000553d:	mov    eax,0x1198
   140005542:	call   0x140055f20
   140005547:	sub    rsp,rax
   14000554a:	mov    QWORD PTR [rbp-0x50],0xfffffffffffffffe
   140005552:	mov    rax,QWORD PTR [rip+0x7c987]        # 0x140081ee0
   140005559:	xor    rax,rsp
   14000555c:	mov    QWORD PTR [rbp+0x1080],rax
   140005563:	mov    QWORD PTR [rsp+0x30],r9
   140005568:	mov    r13,r8
   14000556b:	mov    QWORD PTR [rsp+0x38],r8
   140005570:	mov    rbx,rdx
   140005573:	mov    r15,rcx
   140005576:	mov    r14,QWORD PTR [rbp+0x1100]
   14000557d:	mov    rax,QWORD PTR [rbp+0x1108]
   140005584:	mov    QWORD PTR [rsp+0x40],rax
   140005589:	lea    rcx,[rbp-0x40]
   14000558d:	call   0x140046194
   140005592:	nop
   140005593:	xor    edx,edx
   140005595:	lea    r8d,[rdx+0x60]
   140005599:	lea    rcx,[rsp+0x50]
   14000559e:	call   0x140058f40
   1400055a3:	lea    rcx,[rbp-0x40]
   1400055a7:	call   0x1400463a0
   1400055ac:	lea    rsi,[r15+0x88]
   1400055b3:	mov    rcx,rsi
   1400055b6:	call   0x140046230
   1400055bb:	mov    QWORD PTR [rsp+0x50],rax
   1400055c0:	xor    edi,edi
   1400055c2:	test   rax,rax
   1400055c5:	je     0x140005619
   1400055c7:	mov    rax,QWORD PTR [r15+0x140]
   1400055ce:	movzx  ecx,WORD PTR [rax+rdi*1]
   1400055d2:	mov    DWORD PTR [rsp+0x78],ecx
   1400055d6:	mov    r9d,0x800
   1400055dc:	lea    r8,[rbp+0x80]
   1400055e3:	lea    rdx,[rsp+0x50]
   1400055e8:	mov    rcx,QWORD PTR [r15+0x58]
   1400055ec:	call   0x140005b58
   1400055f1:	lea    rdx,[rbp+0x80]
   1400055f8:	lea    rcx,[rbp-0x40]
   1400055fc:	call   0x1400461bc
   140005601:	lea    rdi,[rdi+0x4]
   140005605:	mov    rcx,rsi
   140005608:	call   0x140046230
   14000560d:	mov    QWORD PTR [rsp+0x50],rax
   140005612:	test   rax,rax
   140005615:	jne    0x1400055c7
   140005617:	xor    edi,edi
   140005619:	mov    r12,QWORD PTR [rbx+0x22b0]
   140005620:	mov    rcx,r13
   140005623:	call   0x1400070e0
   140005628:	mov    BYTE PTR [r14],0x1
   14000562c:	mov    r13b,dil
   14000562f:	mov    esi,edi
   140005631:	jmp    0x14000580c
   140005636:	call   0x140046bb4
   14000563b:	mov    edi,DWORD PTR [rbx+0x22d4]
   140005641:	cmp    edi,0x5
   140005644:	je     0x14000581d
   14000564a:	cmp    QWORD PTR [rbx+0x7f80],0x0
   140005652:	jge    0x14000567a
   140005654:	lea    r8,[rbx+0x3510]
   14000565b:	lea    rdx,[rbx+0x26]
   14000565f:	mov    ecx,0x1a
   140005664:	call   0x140001358
   140005669:	mov    edx,0x3
   14000566e:	lea    rcx,[rip+0x8f1eb]        # 0x140094860
   140005675:	call   0x14001bc60
   14000567a:	cmp    edi,0x77
   14000567d:	je     0x1400057af
   140005683:	cmp    edi,0x3
   140005686:	jne    0x140005695
   140005688:	cmp    BYTE PTR [rbx+0x694a],0x0
   14000568f:	jne    0x1400057af
   140005695:	cmp    edi,0x2
   140005698:	je     0x1400056bb
   14000569a:	xor    edi,edi
   14000569c:	cmp    BYTE PTR [rbx+0x3464],dil
   1400056a3:	je     0x1400056ad
   1400056a5:	lea    esi,[rdi+0x5]
   1400056a8:	jmp    0x140005801
   1400056ad:	mov    esi,0x6
   1400056b2:	mov    DWORD PTR [rsp+0x7c],esi
   1400056b6:	jmp    0x1400057d4
   1400056bb:	mov    rcx,rbx
   1400056be:	call   0x140008324
   1400056c3:	xor    edi,edi
   1400056c5:	test   al,al
   1400056c7:	je     0x1400056d8
   1400056c9:	lea    edx,[rdi+0x3]
   1400056cc:	lea    rcx,[rip+0x8f18d]        # 0x140094860
   1400056d3:	call   0x14001bc60
   1400056d8:	cmp    BYTE PTR [rbx+0x458b],dil
   1400056df:	je     0x140005702
   1400056e1:	cmp    DWORD PTR [rbx+0x7f88],0x3
   1400056e8:	jne    0x140005702
   1400056ea:	test   r13b,r13b
   1400056ed:	jne    0x140005702
   1400056ef:	movups xmm0,XMMWORD PTR [rbx+0x4591]
   1400056f6:	mov    rax,QWORD PTR [rsp+0x40]
   1400056fb:	movdqu XMMWORD PTR [rax],xmm0
   1400056ff:	mov    r13b,0x1
   140005702:	cmp    BYTE PTR [rbx+0x7f94],dil
   140005709:	jne    0x140005747
   14000570b:	cmp    BYTE PTR [rbx+0x458b],dil
   140005712:	je     0x140005747
   140005714:	cmp    BYTE PTR [r12+0x5132],dil
   14000571c:	je     0x140005747
   14000571e:	cmp    BYTE PTR [r12+0x5130],dil
   140005726:	je     0x140005747
   140005728:	lea    rdx,[rbx+0x26]
   14000572c:	mov    ecx,0x26
   140005731:	call   0x1400013b0
   140005736:	mov    edx,0x2
   14000573b:	lea    rcx,[rip+0x8f11e]        # 0x140094860
   140005742:	call   0x14001bc60
   140005747:	mov    rax,QWORD PTR [rsp+0x30]
   14000574c:	cmp    DWORD PTR [rbx+0x7f88],0x2
   140005753:	jne    0x14000576a
   140005755:	cmp    BYTE PTR [rbx+0x3509],0x1d
   14000575c:	jae    0x14000576a
   14000575e:	cmp    BYTE PTR [rbx+0x350a],dil
   140005765:	je     0x14000576a
   140005767:	mov    BYTE PTR [rax],0x1
   14000576a:	lea    rcx,[rbp-0x40]
   14000576e:	mov    QWORD PTR [rsp+0x20],rcx
   140005773:	mov    r9,rax
   140005776:	mov    r8,QWORD PTR [rsp+0x38]
   14000577b:	mov    rdx,rbx
   14000577e:	mov    rcx,r15
   140005781:	call   0x140003594
   140005786:	mov    esi,eax
   140005788:	lea    ecx,[rax-0x3]
   14000578b:	test   ecx,0xfffffffd
   140005791:	je     0x1400057a0
   140005793:	mov    rcx,QWORD PTR [rbx+0x4550]
   14000579a:	add    QWORD PTR [r15+0x78],rcx
   14000579e:	jmp    0x1400057a8
   1400057a0:	mov    rax,QWORD PTR [rsp+0x30]
   1400057a5:	mov    BYTE PTR [rax],0x1
   1400057a8:	cmp    esi,0x4
   1400057ab:	je     0x140005804
   1400057ad:	jmp    0x140005801
   1400057af:	cmp    esi,0x3
   1400057b2:	jne    0x1400057c5
   1400057b4:	cmp    edi,esi
   1400057b6:	jne    0x1400057ff
   1400057b8:	xor    edi,edi
   1400057ba:	cmp    BYTE PTR [rbx+0x6948],dil
   1400057c1:	je     0x140005801
   1400057c3:	jmp    0x1400057c7
   1400057c5:	xor    edi,edi
   1400057c7:	cmp    esi,0x5
   1400057ca:	je     0x140005801
   1400057cc:	mov    DWORD PTR [rsp+0x7c],0x6
   1400057d4:	mov    QWORD PTR [rsp+0x50],rdi
   1400057d9:	mov    QWORD PTR [rsp+0x70],rdi
   1400057de:	mov    QWORD PTR [rsp+0x68],rdi
   1400057e3:	mov    rax,QWORD PTR [rbx+0x7f78]
   1400057ea:	mov    QWORD PTR [rbp-0x70],rax
   1400057ee:	lea    rdx,[rsp+0x50]
   1400057f3:	mov    rcx,QWORD PTR [rsp+0x38]
   1400057f8:	call   0x140006cf0
   1400057fd:	jmp    0x140005804
   1400057ff:	xor    edi,edi
   140005801:	mov    BYTE PTR [r14],dil
   140005804:	mov    rcx,rbx
   140005807:	call   0x14000a2c8
   14000580c:	mov    rcx,rbx
   14000580f:	call   0x14000e334
   140005814:	test   rax,rax
   140005817:	jne    0x140005636
   14000581d:	mov    rcx,QWORD PTR [rbp-0x40]
   140005821:	test   rcx,rcx
   140005824:	je     0x14000582b
   140005826:	call   0x14005a938
   14000582b:	mov    rcx,QWORD PTR [rbp+0x1080]
   140005832:	xor    rcx,rsp
   140005835:	call   0x140055f90
   14000583a:	add    rsp,0x1198
   140005841:	pop    r15
   140005843:	pop    r14
   140005845:	pop    r13
   140005847:	pop    r12
   140005849:	pop    rdi
   14000584a:	pop    rsi
   14000584b:	pop    rbx
   14000584c:	pop    rbp
   14000584d:	ret    
   14000584e:	int3   
   14000584f:	int3   
   140005850:	xor    r8d,r8d
   140005853:	lea    rax,[rcx-0x400]
   14000585a:	mov    r9,rdx
   14000585d:	cmp    rcx,0x400
   140005864:	cmova  r8,rax
   140005868:	movabs rax,0xcccccccccccccccd
   140005872:	mul    r8
   140005875:	shr    rdx,0x3
   140005879:	lea    rax,[rdx+rdx*8]
   14000587d:	cmp    rax,r9
   140005880:	cmovb  rax,r9
   140005884:	cmp    rax,rcx
   140005887:	cmova  rax,rcx
   14000588b:	ret    
   14000588c:	rex push rbp
   14000588e:	push   rbx
   14000588f:	push   rsi
   140005890:	push   rdi
   140005891:	push   r12
   140005893:	push   r13
   140005895:	push   r14
   140005897:	push   r15
   140005899:	lea    rbp,[rsp-0x71c8]
   1400058a1:	mov    eax,0x72c8
   1400058a6:	call   0x140055f20
   1400058ab:	sub    rsp,rax
   1400058ae:	mov    QWORD PTR [rbp-0x70],0xfffffffffffffffe
   1400058b6:	mov    rax,QWORD PTR [rip+0x7c623]        # 0x140081ee0
   1400058bd:	xor    rax,rsp
   1400058c0:	mov    QWORD PTR [rbp+0x71b0],rax
   1400058c7:	mov    r15,r9
   1400058ca:	mov    r12,r8
   1400058cd:	mov    r14,rdx
   1400058d0:	mov    rsi,rcx
   1400058d3:	mov    rax,QWORD PTR [rcx+0x58]
   1400058d7:	lea    rdx,[rax+0xa408]
   1400058de:	mov    DWORD PTR [rsp+0x20],0x1
   1400058e6:	mov    r9b,BYTE PTR [rax+0x61a9]
   1400058ed:	mov    r8d,DWORD PTR [rax+0x6168]
   1400058f4:	lea    rcx,[rbp+0xff0]
   1400058fb:	call   0x14004259c
   140005900:	nop
   140005901:	mov    r8d,0x800
   140005907:	mov    rdx,r12
   14000590a:	lea    rcx,[rbp+0x51a8]
   140005911:	call   0x140046158
   140005916:	mov    rax,QWORD PTR [rsi+0x58]
   14000591a:	mov    QWORD PTR [rbp+0x61a8],rax
   140005921:	xor    r13d,r13d
   140005924:	cmp    BYTE PTR [rax+0x62d2],r13b
   14000592b:	je     0x140005959
   14000592d:	lea    rdi,[rsi+0x88]
   140005934:	mov    rcx,rdi
   140005937:	call   0x140046378
   14000593c:	lea    rbx,[rsi+0x140]
   140005943:	mov    rcx,rbx
   140005946:	call   0x140009a60
   14000594b:	mov    QWORD PTR [rbp+0x5188],rdi
   140005952:	mov    QWORD PTR [rbp+0x5190],rbx
   140005959:	mov    QWORD PTR [rbp+0xfb0],r13
   140005960:	mov    QWORD PTR [rbp+0xfb8],r13
   140005967:	mov    QWORD PTR [rbp+0xfc0],r13
   14000596e:	mov    edi,r13d
   140005971:	mov    rbx,QWORD PTR [rsi+0x58]
   140005975:	add    rbx,0x73d0
   14000597c:	cmp    WORD PTR [rbx],r13w
   140005980:	je     0x140005aeb
   140005986:	xor    edx,edx
   140005988:	lea    r8d,[rdx+0x60]
   14000598c:	lea    rcx,[rsp+0x30]
   140005991:	call   0x140058f40
   140005996:	mov    QWORD PTR [rsp+0x30],rbx
   14000599b:	mov    DWORD PTR [rsp+0x5c],0x2
   1400059a3:	or     QWORD PTR [rbp-0x80],0xffffffffffffffff
   1400059a8:	lea    rcx,[rsp+0x48]
   1400059ad:	call   0x1400476c0
   1400059b2:	lea    rdx,[rsp+0x30]
   1400059b7:	mov    rcx,r14
   1400059ba:	call   0x140006cf0
   1400059bf:	jmp    0x140005b03
   1400059c4:	mov    DWORD PTR [rsp+0x20],edi
   1400059c8:	mov    r9,QWORD PTR [r14+0x20]
   1400059cc:	lea    r8,[rbp-0x60]
   1400059d0:	mov    rdx,r12
   1400059d3:	mov    rcx,rsi
   1400059d6:	call   0x140003238
   1400059db:	test   al,al
   1400059dd:	je     0x140005aeb
   1400059e3:	xor    edx,edx
   1400059e5:	lea    r8d,[rdx+0x60]
   1400059e9:	lea    rcx,[rsp+0x30]
   1400059ee:	call   0x140058f40
   1400059f3:	lea    rax,[rbp-0x60]
   1400059f7:	mov    QWORD PTR [rsp+0x30],rax
   1400059fc:	mov    rax,QWORD PTR [rbp+0xfa0]
   140005a03:	mov    QWORD PTR [rsp+0x38],rax
   140005a08:	mov    rax,QWORD PTR [rsi+0x58]
   140005a0c:	mov    dl,BYTE PTR [rbp+0xfac]
   140005a12:	cmp    BYTE PTR [rax+0x62d6],r13b
   140005a19:	je     0x140005a2d
   140005a1b:	mov    al,dl
   140005a1d:	neg    al
   140005a1f:	sbb    ecx,ecx
   140005a21:	and    ecx,0xfffffff0
   140005a24:	add    ecx,0x20
   140005a27:	mov    DWORD PTR [rsp+0x40],ecx
   140005a2b:	jmp    0x140005a37
   140005a2d:	mov    eax,DWORD PTR [rbp+0xfa8]
   140005a33:	mov    DWORD PTR [rsp+0x40],eax
   140005a37:	mov    BYTE PTR [rbp-0x78],dl
   140005a3a:	mov    al,BYTE PTR [rbp+0xfad]
   140005a40:	mov    BYTE PTR [rbp-0x77],al
   140005a43:	or     BYTE PTR [r15],al
   140005a46:	mov    rax,QWORD PTR [rbp+0xfb0]
   140005a4d:	mov    QWORD PTR [rsp+0x48],rax
   140005a52:	mov    rax,QWORD PTR [rbp+0xfc0]
   140005a59:	mov    QWORD PTR [rsp+0x50],rax
   140005a5e:	movzx  eax,WORD PTR [rbp+0x51a0]
   140005a65:	mov    DWORD PTR [rsp+0x58],eax
   140005a69:	mov    DWORD PTR [rsp+0x5c],0x2
   140005a71:	or     QWORD PTR [rbp-0x80],0xffffffffffffffff
   140005a76:	lea    rdx,[rbp-0x60]
   140005a7a:	mov    rcx,QWORD PTR [rsi+0x58]
   140005a7e:	call   0x140016678
   140005a83:	test   al,al
   140005a85:	je     0x140005a8c
   140005a87:	or     DWORD PTR [rsp+0x78],0x1
   140005a8c:	mov    rcx,QWORD PTR [rsi+0x58]
   140005a90:	cmp    DWORD PTR [rcx+0xa4e8],r13d
   140005a97:	jbe    0x140005ad3
   140005a99:	mov    r9d,0x800
   140005a9f:	lea    r8,[rbp+0x61b0]
   140005aa6:	lea    rdx,[rsp+0x30]
   140005aab:	call   0x140005b58
   140005ab0:	mov    BYTE PTR [rsp+0x20],r13b
   140005ab5:	xor    r9d,r9d
   140005ab8:	mov    r8b,BYTE PTR [rbp+0xfac]
   140005abf:	lea    rdx,[rbp+0x61b0]
   140005ac6:	mov    rcx,QWORD PTR [rsi+0x58]
   140005aca:	call   0x140013da8
   140005acf:	test   al,al
   140005ad1:	jne    0x140005aeb
   140005ad3:	lea    rdx,[rsp+0x30]
   140005ad8:	mov    rcx,r14
   140005adb:	call   0x140006cf0
   140005ae0:	cmp    BYTE PTR [rbp+0xfac],r13b
   140005ae7:	jne    0x140005aeb
   140005ae9:	inc    edi
   140005aeb:	lea    rdx,[rbp-0x60]
   140005aef:	lea    rcx,[rbp+0xff0]
   140005af6:	call   0x1400431d8
   140005afb:	test   eax,eax
   140005afd:	je     0x1400059c4
   140005b03:	cmp    DWORD PTR [rbp+0x300c],r13d
   140005b0a:	je     0x140005b1d
   140005b0c:	mov    edx,0x6
   140005b11:	lea    rcx,[rip+0x8ed48]        # 0x140094860
   140005b18:	call   0x14001bf08
   140005b1d:	mov    rcx,r14
   140005b20:	call   0x1400073ac
   140005b25:	nop
   140005b26:	lea    rcx,[rbp+0xff0]
   140005b2d:	call   0x14004266c
   140005b32:	mov    rcx,QWORD PTR [rbp+0x71b0]
   140005b39:	xor    rcx,rsp
   140005b3c:	call   0x140055f90
   140005b41:	add    rsp,0x72c8
   140005b48:	pop    r15
   140005b4a:	pop    r14
   140005b4c:	pop    r13
   140005b4e:	pop    r12
   140005b50:	pop    rdi
   140005b51:	pop    rsi
   140005b52:	pop    rbx
   140005b53:	pop    rbp
   140005b54:	ret    
   140005b55:	int3   
   140005b56:	int3   
   140005b57:	int3   
   140005b58:	mov    rax,rsp
   140005b5b:	mov    QWORD PTR [rax+0x8],rbx
   140005b5f:	mov    QWORD PTR [rax+0x10],rbp
   140005b63:	mov    QWORD PTR [rax+0x18],rsi
   140005b67:	mov    QWORD PTR [rax+0x20],rdi
   140005b6b:	push   r14
   140005b6d:	sub    rsp,0x20
   140005b71:	mov    edi,DWORD PTR [rcx+0x6164]
   140005b77:	mov    rbp,r9
   140005b7a:	mov    rbx,r8
   140005b7d:	mov    rsi,rdx
   140005b80:	mov    r14,rcx
   140005b83:	cmp    edi,0x5
   140005b86:	jne    0x140005b97
   140005b88:	mov    rcx,QWORD PTR [rdx]
   140005b8b:	call   0x140032174
   140005b90:	neg    al
   140005b92:	sbb    edi,edi
   140005b94:	and    edi,0x2
   140005b97:	cmp    edi,0x1
   140005b9a:	je     0x140005bd2
   140005b9c:	mov    r8,rbp
   140005b9f:	cmp    edi,0x2
   140005ba2:	je     0x140005bbe
   140005ba4:	lea    eax,[rdi-0x3]
   140005ba7:	cmp    eax,0x1
   140005baa:	ja     0x140005bb9
   140005bac:	mov    rcx,QWORD PTR [rsi]
   140005baf:	mov    rdx,rbx
   140005bb2:	call   0x140030ef4
   140005bb7:	jmp    0x140005be8
   140005bb9:	mov    rdx,QWORD PTR [rsi]
   140005bbc:	jmp    0x140005be0
   140005bbe:	mov    ecx,DWORD PTR [rsi+0x28]
   140005bc1:	mov    rax,QWORD PTR [rsi]
   140005bc4:	lea    rdx,[rax+rcx*2]
   140005bc8:	mov    rcx,rbx
   140005bcb:	call   0x140046158
   140005bd0:	jmp    0x140005c2f
   140005bd2:	mov    rcx,QWORD PTR [rsi]
   140005bd5:	call   0x1400327bc
   140005bda:	mov    rdx,rax
   140005bdd:	mov    r8,rbp
   140005be0:	mov    rcx,rbx
   140005be3:	call   0x140046158
   140005be8:	cmp    edi,0x4
   140005beb:	jne    0x140005c2f
   140005bed:	movzx  ecx,WORD PTR [rbx+0x2]
   140005bf1:	call   0x140032138
   140005bf6:	test   al,al
   140005bf8:	je     0x140005c10
   140005bfa:	movzx  ecx,WORD PTR [rbx+0x4]
   140005bfe:	call   0x140032274
   140005c03:	test   al,al
   140005c05:	je     0x140005c10
   140005c07:	lea    eax,[rdi+0x5b]
   140005c0a:	mov    WORD PTR [rbx+0x2],ax
   140005c0e:	jmp    0x140005c2f
   140005c10:	movzx  ecx,WORD PTR [rbx]
   140005c13:	call   0x140032274
   140005c18:	test   al,al
   140005c1a:	je     0x140005c2f
   140005c1c:	movzx  ecx,WORD PTR [rbx+0x2]
   140005c20:	call   0x140032274
   140005c25:	test   al,al
   140005c27:	je     0x140005c2f
   140005c29:	mov    DWORD PTR [rbx],0x5f005f
   140005c2f:	mov    rdx,rbx
   140005c32:	mov    rcx,rbx
   140005c35:	call   0x140030fe4
   140005c3a:	lea    rcx,[r14+0x4030]
   140005c41:	cmp    WORD PTR [rcx],0x0
   140005c45:	je     0x140005c55
   140005c47:	mov    r9,rbp
   140005c4a:	mov    r8,rbx
   140005c4d:	mov    rdx,rbx
   140005c50:	call   0x1400322b0
   140005c55:	mov    rbx,QWORD PTR [rsp+0x30]
   140005c5a:	mov    rbp,QWORD PTR [rsp+0x38]
   140005c5f:	mov    rsi,QWORD PTR [rsp+0x40]
   140005c64:	mov    rdi,QWORD PTR [rsp+0x48]
   140005c69:	add    rsp,0x20
   140005c6d:	pop    r14
   140005c6f:	ret    
   140005c70:	mov    QWORD PTR [rsp+0x8],rbx
   140005c75:	push   rdi
   140005c76:	sub    rsp,0x20
   140005c7a:	mov    rdi,rdx
   140005c7d:	mov    rbx,rcx
   140005c80:	mov    edx,0x1
   140005c85:	call   0x1400018f8
   140005c8a:	mov    rax,QWORD PTR [rbx+0x8]
   140005c8e:	movups xmm0,XMMWORD PTR [rdi]
   140005c91:	lea    rcx,[rax+rax*2]
   140005c95:	mov    rax,QWORD PTR [rbx]
   140005c98:	mov    rbx,QWORD PTR [rsp+0x30]
   140005c9d:	movups XMMWORD PTR [rax+rcx*8-0x18],xmm0
   140005ca2:	movsd  xmm1,QWORD PTR [rdi+0x10]
   140005ca7:	movsd  QWORD PTR [rax+rcx*8-0x8],xmm1
   140005cad:	add    rsp,0x20
   140005cb1:	pop    rdi
   140005cb2:	ret    
   140005cb3:	int3   
   140005cb4:	mov    QWORD PTR [rsp+0x8],rbx
   140005cb9:	push   rdi
   140005cba:	sub    rsp,0x50
   140005cbe:	cmp    BYTE PTR [rdx+0x458b],0x0
   140005cc5:	mov    rbx,rdx
   140005cc8:	mov    rdi,rcx
   140005ccb:	je     0x140005d7f
   140005cd1:	mov    r8,QWORD PTR [rcx+0x58]
   140005cd5:	cmp    BYTE PTR [r8+0x5130],0x0
   140005cdd:	jne    0x140005d17
   140005cdf:	add    r8,0x5030
   140005ce6:	add    rdx,0x3510
   140005ced:	mov    ecx,0x1
   140005cf2:	call   0x140048830
   140005cf7:	test   al,al
   140005cf9:	jne    0x140005d0c
   140005cfb:	mov    edx,0xff
   140005d00:	lea    rcx,[rip+0x8eb59]        # 0x140094860
   140005d07:	call   0x14001bc60
   140005d0c:	mov    rax,QWORD PTR [rdi+0x58]
   140005d10:	mov    BYTE PTR [rax+0x5133],0x1
   140005d17:	mov    al,BYTE PTR [rbx+0x4590]
   140005d1d:	lea    r8,[rbx+0x45b2]
   140005d24:	mov    r9,QWORD PTR [rdi+0x58]
   140005d28:	lea    r10,[rbx+0x45bb]
   140005d2f:	mov    QWORD PTR [rsp+0x40],r8
   140005d34:	lea    rcx,[rbx+0x4591]
   140005d3b:	mov    r8d,DWORD PTR [rbx+0x458c]
   140005d42:	lea    r11,[rbx+0x45a1]
   140005d49:	mov    QWORD PTR [rsp+0x38],r10
   140005d4e:	neg    al
   140005d50:	mov    eax,DWORD PTR [rbx+0x45dc]
   140005d56:	sbb    rdx,rdx
   140005d59:	mov    DWORD PTR [rsp+0x30],eax
   140005d5d:	and    rdx,rcx
   140005d60:	mov    QWORD PTR [rsp+0x28],r11
   140005d65:	mov    QWORD PTR [rsp+0x20],rdx
   140005d6a:	lea    rcx,[rdi+0x160]
   140005d71:	xor    edx,edx
   140005d73:	add    r9,0x5030
   140005d7a:	call   0x14003750c
   140005d7f:	mov    rbx,QWORD PTR [rsp+0x60]
   140005d84:	add    rsp,0x50
   140005d88:	pop    rdi
   140005d89:	ret    
   140005d8a:	int3   
   140005d8b:	int3   
   140005d8c:	rex push rbx
   140005d8e:	push   rsi
   140005d8f:	push   rdi
   140005d90:	push   r12
   140005d92:	push   r13
   140005d94:	push   r14
   140005d96:	push   r15
   140005d98:	sub    rsp,0xc0
   140005d9f:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   140005da8:	mov    rax,QWORD PTR [rip+0x7c131]        # 0x140081ee0
   140005daf:	xor    rax,rsp
   140005db2:	mov    QWORD PTR [rsp+0xb0],rax
   140005dba:	mov    r15,r9
   140005dbd:	mov    rdi,r8
   140005dc0:	mov    r14,rdx
   140005dc3:	mov    rsi,rcx
   140005dc6:	mov    QWORD PTR [rsp+0x30],rcx
   140005dcb:	mov    r13,QWORD PTR [rsp+0x120]
   140005dd3:	mov    edx,0x2
   140005dd8:	mov    rcx,r14
   140005ddb:	call   0x14000e778
   140005de0:	xor    r12d,r12d
   140005de3:	cmp    BYTE PTR [r14+0x458b],r12b
   140005dea:	je     0x140005e02
   140005dec:	mov    rax,QWORD PTR [rsi+0x58]
   140005df0:	cmp    BYTE PTR [rax+0x5130],r12b
   140005df7:	jne    0x140005e02
   140005df9:	mov    rax,QWORD PTR [r15]
   140005dfc:	mov    rcx,r15
   140005dff:	call   QWORD PTR [rax+0x28]
   140005e02:	mov    rdx,r14
   140005e05:	mov    rcx,rsi
   140005e08:	call   0x140005cb4
   140005e0d:	lea    rbx,[rdi+0x34f0]
   140005e14:	lea    rdx,[r14+0x34f0]
   140005e1b:	mov    rcx,rbx
   140005e1e:	call   0x1400243b8
   140005e23:	mov    BYTE PTR [rdi+0x458b],r12b
   140005e2a:	mov    BYTE PTR [rdi+0x4590],r12b
   140005e31:	mov    r8d,DWORD PTR [rsp+0x130]
   140005e39:	test   r8d,r8d
   140005e3c:	je     0x140005e49
   140005e3e:	mov    rdx,rbx
   140005e41:	mov    rcx,rsi
   140005e44:	call   0x1400062a4
   140005e49:	cmp    BYTE PTR [rsp+0x128],r12b
   140005e51:	sete   al
   140005e54:	mov    BYTE PTR [rsi+0x1f8],al
   140005e5a:	mov    rax,QWORD PTR [rsi+0x58]
   140005e5e:	cmp    BYTE PTR [rax+0x6150],r12b
   140005e65:	jne    0x140005e9d
   140005e67:	cmp    DWORD PTR [rsi+0x70],r12d
   140005e6b:	jne    0x140005e8b
   140005e6d:	mov    ecx,0xd56
   140005e72:	call   0x140040118
   140005e77:	mov    rcx,rax
   140005e7a:	call   0x14001796c
   140005e7f:	lea    rcx,[rip+0x667c2]        # 0x14006c648
   140005e86:	call   0x14001796c
   140005e8b:	inc    DWORD PTR [rsi+0x70]
   140005e8e:	mov    edx,DWORD PTR [rsi+0x70]
   140005e91:	lea    rcx,[rip+0x667d0]        # 0x14006c668
   140005e98:	call   0x14001796c
   140005e9d:	mov    rdx,r14
   140005ea0:	mov    rcx,rsi
   140005ea3:	call   0x140003318
   140005ea8:	mov    rcx,QWORD PTR [r14+0x4548]
   140005eaf:	test   rcx,rcx
   140005eb2:	je     0x14000614c
   140005eb8:	cmp    BYTE PTR [r14+0x350a],r12b
   140005ebf:	je     0x14000614c
   140005ec5:	mov    rax,QWORD PTR [r14]
   140005ec8:	mov    rdx,QWORD PTR [r14+0x7f80]
   140005ecf:	sub    rdx,rcx
   140005ed2:	xor    r8d,r8d
   140005ed5:	mov    rcx,r14
   140005ed8:	call   QWORD PTR [rax+0x18]
   140005edb:	lea    rbx,[r14+0x4560]
   140005ee2:	mov    rax,QWORD PTR [rsi+0x58]
   140005ee6:	lea    rcx,[rsi+0x2b0]
   140005eed:	mov    r8d,DWORD PTR [rax+0x83d0]
   140005ef4:	mov    edx,DWORD PTR [rbx]
   140005ef6:	call   0x1400241ac
   140005efb:	mov    rax,QWORD PTR [rsi+0x58]
   140005eff:	lea    rcx,[rsi+0x2f0]
   140005f06:	mov    r8d,DWORD PTR [rax+0x83d0]
   140005f0d:	mov    edx,DWORD PTR [rbx]
   140005f0f:	call   0x1400241ac
   140005f14:	lea    rcx,[rsi+0x2d0]
   140005f1b:	mov    rax,QWORD PTR [rsi+0x58]
   140005f1f:	mov    r8d,DWORD PTR [rax+0x83d0]
   140005f26:	mov    edx,DWORD PTR [rbx]
   140005f28:	call   0x1400241ac
   140005f2d:	lea    r12,[rsi+0x160]
   140005f34:	mov    r8,rdi
   140005f37:	mov    rdx,r14
   140005f3a:	mov    rcx,r12
   140005f3d:	call   0x140037588
   140005f42:	and    QWORD PTR [rsi+0x278],0x0
   140005f4a:	and    QWORD PTR [rsi+0x280],0x0
   140005f52:	and    QWORD PTR [rsi+0x268],0x0
   140005f5a:	mov    BYTE PTR [rsi+0x1f9],0x1
   140005f61:	mov    al,BYTE PTR [r14+0x45e0]
   140005f68:	mov    BYTE PTR [rsi+0x85],al
   140005f6e:	mov    al,BYTE PTR [rsi+0x84]
   140005f74:	mov    BYTE PTR [rdi+0x45e0],al
   140005f7a:	mov    rax,QWORD PTR [rsi+0x58]
   140005f7e:	mov    rcx,QWORD PTR [rax+0x10]
   140005f82:	mov    QWORD PTR [rdi+0x45e8],rcx
   140005f89:	mov    ecx,DWORD PTR [rdi+0x7f88]
   140005f8f:	mov    eax,0x1d
   140005f94:	lea    edx,[rax+0x15]
   140005f97:	cmp    ecx,0x3
   140005f9a:	cmove  eax,edx
   140005f9d:	mov    BYTE PTR [rdi+0x3509],al
   140005fa3:	mov    rax,QWORD PTR [rsi+0x58]
   140005fa7:	cmp    BYTE PTR [rax+0x5130],0x0
   140005fae:	je     0x140005ff4
   140005fb0:	mov    BYTE PTR [rdi+0x4590],0x1
   140005fb7:	mov    BYTE PTR [rdi+0x458b],0x1
   140005fbe:	cmp    ecx,0x3
   140005fc1:	jne    0x140005ff4
   140005fc3:	movups xmm0,XMMWORD PTR [rdi+0x7fa2]
   140005fca:	movdqu XMMWORD PTR [rdi+0x4591],xmm0
   140005fd2:	lea    rcx,[rdi+0x45a1]
   140005fd9:	mov    edx,0x10
   140005fde:	call   0x140019168
   140005fe3:	mov    DWORD PTR [rdi+0x45dc],0xf
   140005fed:	mov    BYTE PTR [rdi+0x45b1],0x1
   140005ff4:	cmp    DWORD PTR [rdi+0x7f88],0x3
   140005ffb:	jne    0x14000606d
   140005ffd:	mov    rax,QWORD PTR [r14+0x4550]
   140006004:	mov    rbx,QWORD PTR [r14+0x4548]
   14000600b:	cmp    rax,rbx
   14000600e:	cmovg  rbx,rax
   140006012:	xor    r8d,r8d
   140006015:	xor    edx,edx
   140006017:	mov    rcx,rbx
   14000601a:	call   0x140003fd0
   14000601f:	mov    r8,rax
   140006022:	mov    QWORD PTR [rdi+0x4558],rax
   140006029:	lea    rcx,[rax-0x400]
   140006030:	xor    edx,edx
   140006032:	cmp    rax,0x400
   140006038:	cmova  rdx,rcx
   14000603c:	movabs rax,0xcccccccccccccccd
   140006046:	mul    rdx
   140006049:	shr    rdx,0x3
   14000604d:	lea    rcx,[rdx+rdx*8]
   140006051:	cmp    rcx,rbx
   140006054:	cmovb  rcx,rbx
   140006058:	cmp    rcx,r8
   14000605b:	cmova  rcx,r8
   14000605f:	mov    QWORD PTR [rsi+0x298],rcx
   140006066:	lea    rbx,[r14+0x4560]
   14000606d:	lea    r9,[rdi+0x3510]
   140006074:	lea    rcx,[rsi+0x8]
   140006078:	mov    BYTE PTR [rsp+0x28],0x0
   14000607d:	mov    BYTE PTR [rsp+0x20],0x0
   140006082:	mov    r8,r15
   140006085:	xor    edx,edx
   140006087:	call   0x1400061cc
   14000608c:	nop
   14000608d:	mov    r8b,BYTE PTR [r14+0x45e0]
   140006094:	mov    rdx,QWORD PTR [r14+0x45e8]
   14000609b:	mov    rcx,r13
   14000609e:	call   0x14004b824
   1400060a3:	nop
   1400060a4:	mov    rax,QWORD PTR [r14+0x4550]
   1400060ab:	mov    QWORD PTR [r13+0x4da0],rax
   1400060b2:	mov    BYTE PTR [r13+0x4db8],0x0
   1400060ba:	mov    rdx,r13
   1400060bd:	mov    rcx,r12
   1400060c0:	call   0x1400375d0
   1400060c5:	mov    rax,QWORD PTR [r14+0x4548]
   1400060cc:	mov    QWORD PTR [rsi+0x1f0],rax
   1400060d3:	mov    rax,QWORD PTR [r15]
   1400060d6:	mov    r9,QWORD PTR [rsi+0x58]
   1400060da:	add    r9,0x62fc
   1400060e1:	movzx  r8d,BYTE PTR [r14+0x350a]
   1400060e9:	dec    r8d
   1400060ec:	mov    dl,BYTE PTR [rsi+0x84]
   1400060f2:	mov    rcx,r15
   1400060f5:	call   QWORD PTR [rax+0x18]
   1400060f8:	xor    edx,edx
   1400060fa:	mov    rcx,r12
   1400060fd:	call   0x1400375d0
   140006102:	mov    BYTE PTR [r13+0x4da8],0x0
   14000610a:	call   0x140046bb4
   14000610f:	mov    BYTE PTR [rsi+0x84],0x1
   140006116:	mov    al,BYTE PTR [r14+0x45ba]
   14000611d:	lea    rdx,[r14+0x45bb]
   140006124:	neg    al
   140006126:	sbb    r8,r8
   140006129:	and    r8,rdx
   14000612c:	mov    rdx,rbx
   14000612f:	lea    rcx,[rsi+0x2d0]
   140006136:	call   0x14002413c
   14000613b:	test   al,al
   14000613d:	jne    0x1400061a9
   14000613f:	mov    rdx,rdi
   140006142:	mov    rcx,rsi
   140006145:	call   0x140004d6c
   14000614a:	jmp    0x1400061a9
   14000614c:	mov    rax,QWORD PTR [r15]
   14000614f:	mov    rcx,r15
   140006152:	call   QWORD PTR [rax+0x28]
   140006155:	mov    rax,QWORD PTR [rsi+0x58]
   140006159:	mov    rcx,QWORD PTR [rax+0x10]
   14000615d:	cmp    QWORD PTR [rdi+0x45e8],rcx
   140006164:	jbe    0x14000616d
   140006166:	mov    QWORD PTR [rdi+0x45e8],rcx
   14000616d:	mov    al,BYTE PTR [r14+0x458b]
   140006174:	mov    BYTE PTR [rdi+0x458b],al
   14000617a:	mov    al,BYTE PTR [r14+0x4590]
   140006181:	mov    BYTE PTR [rdi+0x4590],al
   140006187:	mov    BYTE PTR [rsp+0x20],r12b
   14000618c:	xor    r9d,r9d
   14000618f:	xor    r8d,r8d
   140006192:	lea    edx,[r9+0x2]
   140006196:	mov    rcx,rdi
   140006199:	call   0x14000b340
   14000619e:	mov    rdx,r14
   1400061a1:	mov    rcx,rdi
   1400061a4:	call   0x1400084a8
   1400061a9:	mov    rcx,QWORD PTR [rsp+0xb0]
   1400061b1:	xor    rcx,rsp
   1400061b4:	call   0x140055f90
   1400061b9:	add    rsp,0xc0
   1400061c0:	pop    r15
   1400061c2:	pop    r14
   1400061c4:	pop    r13
   1400061c6:	pop    r12
   1400061c8:	pop    rdi
   1400061c9:	pop    rsi
   1400061ca:	pop    rbx
   1400061cb:	ret    
   1400061cc:	mov    QWORD PTR [rsp+0x8],rbx
   1400061d1:	mov    QWORD PTR [rsp+0x10],rbp
   1400061d6:	mov    QWORD PTR [rsp+0x18],rsi
   1400061db:	push   rdi
   1400061dc:	sub    rsp,0x30
   1400061e0:	movsxd rax,DWORD PTR [rcx+0x8]
   1400061e4:	mov    rbx,rcx
   1400061e7:	imul   rdi,rax,0x3350
   1400061ee:	mov    QWORD PTR [rcx+0x30],rdx
   1400061f2:	mov    rsi,r8
   1400061f5:	add    rdi,QWORD PTR [rcx]
   1400061f8:	mov    rcx,rdi
   1400061fb:	sub    rcx,r9
   1400061fe:	xor    ebp,ebp
   140006200:	movzx  eax,WORD PTR [r9]
   140006204:	mov    WORD PTR [rcx+r9*1],ax
   140006209:	lea    r9,[r9+0x2]
   14000620d:	test   ax,ax
   140006210:	jne    0x140006200
   140006212:	mov    rcx,QWORD PTR [rbx+0x28]
   140006216:	xor    r8d,r8d
   140006219:	mov    r9b,0x1
   14000621c:	mov    BYTE PTR [rsp+0x20],bpl
   140006221:	lea    edx,[r8+0x2]
   140006225:	call   0x14000b340
   14000622a:	mov    rdx,QWORD PTR [rbx+0x28]
   14000622e:	lea    rcx,[rdi+0x1000]
   140006235:	add    rdx,0x34f0
   14000623c:	call   0x1400243b8
   140006241:	mov    al,BYTE PTR [rsp+0x60]
   140006245:	lea    rcx,[rdi+0x3318]
   14000624c:	mov    BYTE PTR [rdi+0x3348],al
   140006252:	mov    al,BYTE PTR [rsp+0x68]
   140006256:	mov    BYTE PTR [rdi+0x3349],al
   14000625c:	mov    QWORD PTR [rdi+0x3340],rbp
   140006263:	mov    rax,QWORD PTR [rbx+0x28]
   140006267:	mov    edx,DWORD PTR [rax+0x4560]
   14000626d:	call   0x14002422c
   140006272:	inc    DWORD PTR [rbx+0x8]
   140006275:	cmp    DWORD PTR [rbx+0x8],0x10
   140006279:	jne    0x14000628c
   14000627b:	mov    rax,QWORD PTR [rsi]
   14000627e:	mov    rcx,rsi
   140006281:	call   QWORD PTR [rax+0x30]
   140006284:	mov    rcx,rbx
   140006287:	call   0x1400053ac
   14000628c:	mov    rbx,QWORD PTR [rsp+0x40]
   140006291:	mov    rbp,QWORD PTR [rsp+0x48]
   140006296:	mov    rsi,QWORD PTR [rsp+0x50]
   14000629b:	add    rsp,0x30
   14000629f:	pop    rdi
   1400062a0:	ret    
   1400062a1:	int3   
   1400062a2:	int3   
   1400062a3:	int3   
   1400062a4:	mov    QWORD PTR [rsp+0x20],rbx
   1400062a9:	push   rbp
   1400062aa:	push   rsi
   1400062ab:	push   rdi
   1400062ac:	sub    rsp,0x80
   1400062b3:	mov    rax,QWORD PTR [rip+0x7bc26]        # 0x140081ee0
   1400062ba:	xor    rax,rsp
   1400062bd:	mov    QWORD PTR [rsp+0x70],rax
   1400062c2:	xor    ebp,ebp
   1400062c4:	mov    esi,r8d
   1400062c7:	mov    rbx,rdx
   1400062ca:	mov    rdi,rcx
   1400062cd:	cmp    BYTE PTR [rdx+0x10f3],bpl
   1400062d4:	je     0x1400062ea
   1400062d6:	lea    edx,[rbp+0x3b]
   1400062d9:	lea    rcx,[rbx+0x20]
   1400062dd:	call   0x140058684
   1400062e2:	test   rax,rax
   1400062e5:	je     0x1400062ea
   1400062e7:	mov    WORD PTR [rax],bp
   1400062ea:	mov    ecx,DWORD PTR [rdi+0x80]
   1400062f0:	call   0x140045bd4
   1400062f5:	mov    edi,0x14
   1400062fa:	lea    r8,[rip+0x663df]        # 0x14006c6e0
   140006301:	mov    edx,edi
   140006303:	lea    rcx,[rsp+0x20]
   140006308:	mov    r9d,eax
   14000630b:	call   0x140006acc
   140006310:	mov    r9d,esi
   140006313:	lea    r8,[rsp+0x20]
   140006318:	mov    edx,edi
   14000631a:	lea    rcx,[rsp+0x48]
   14000631f:	call   0x140006acc
   140006324:	lea    rcx,[rbx+0x20]
   140006328:	mov    r8d,0x800
   14000632e:	lea    rdx,[rsp+0x48]
   140006333:	call   0x140046120
   140006338:	mov    BYTE PTR [rbx+0x10f3],0x1
   14000633f:	mov    rcx,QWORD PTR [rsp+0x70]
   140006344:	xor    rcx,rsp
   140006347:	call   0x140055f90
   14000634c:	mov    rbx,QWORD PTR [rsp+0xb8]
   140006354:	add    rsp,0x80
   14000635b:	pop    rdi
   14000635c:	pop    rsi
   14000635d:	pop    rbp
   14000635e:	ret    
   14000635f:	int3   
   140006360:	mov    QWORD PTR [rsp+0x8],rbx
   140006365:	push   rdi
   140006366:	sub    rsp,0x20
   14000636a:	mov    edi,DWORD PTR [rcx+0xc]
   14000636d:	mov    rbx,rcx
   140006370:	cmp    edi,DWORD PTR [rcx+0x8]
   140006373:	jge    0x1400063af
   140006375:	test   edi,edi
   140006377:	je     0x1400063b7
   140006379:	movsxd rax,edi
   14000637c:	imul   rdx,rax,0x3350
   140006383:	mov    eax,edi
   140006385:	sub    eax,DWORD PTR [rbx+0xc]
   140006388:	add    rdx,QWORD PTR [rbx]
   14000638b:	cdqe   
   14000638d:	imul   rcx,rax,0x3350
   140006394:	add    rcx,QWORD PTR [rbx]
   140006397:	call   0x1400017bc
   14000639c:	inc    edi
   14000639e:	cmp    edi,DWORD PTR [rbx+0x8]
   1400063a1:	jl     0x140006379
   1400063a3:	mov    eax,DWORD PTR [rbx+0xc]
   1400063a6:	sub    DWORD PTR [rbx+0x8],eax
   1400063a9:	and    DWORD PTR [rbx+0xc],0x0
   1400063ad:	jmp    0x1400063b7
   1400063af:	and    DWORD PTR [rcx+0x8],0x0
   1400063b3:	and    DWORD PTR [rcx+0xc],0x0
   1400063b7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400063bc:	add    rsp,0x20
   1400063c0:	pop    rdi
   1400063c1:	ret    
   1400063c2:	int3   
   1400063c3:	int3   
   1400063c4:	mov    rax,rsp
   1400063c7:	mov    QWORD PTR [rax+0x8],rbx
   1400063cb:	mov    QWORD PTR [rax+0x10],rbp
   1400063cf:	mov    QWORD PTR [rax+0x18],rsi
   1400063d3:	mov    QWORD PTR [rax+0x20],rdi
   1400063d7:	push   r13
   1400063d9:	push   r14
   1400063db:	push   r15
   1400063dd:	sub    rsp,0x20
   1400063e1:	mov    rax,QWORD PTR [rdx]
   1400063e4:	mov    rbp,rcx
   1400063e7:	mov    rcx,rdx
   1400063ea:	mov    r13,r9
   1400063ed:	mov    r15,r8
   1400063f0:	mov    rsi,rdx
   1400063f3:	xor    r14d,r14d
   1400063f6:	jmp    0x1400065af
   1400063fb:	mov    edx,0x2
   140006400:	mov    rcx,rsi
   140006403:	call   0x14000e778
   140006408:	mov    rdx,rsi
   14000640b:	mov    rcx,rbp
   14000640e:	mov    rbx,rax
   140006411:	call   0x140005cb4
   140006416:	cmp    QWORD PTR [rsi+0x7f78],r15
   14000641d:	jge    0x1400065bd
   140006423:	test   rbx,rbx
   140006426:	je     0x1400065d0
   14000642c:	mov    rax,QWORD PTR [rbp+0x58]
   140006430:	cmp    BYTE PTR [rax+0x6150],0x0
   140006437:	jne    0x140006462
   140006439:	test   r14d,r14d
   14000643c:	jne    0x140006450
   14000643e:	mov    ecx,0xd54
   140006443:	call   0x140040118
   140006448:	mov    rcx,rax
   14000644b:	call   0x14001796c
   140006450:	inc    r14d
   140006453:	lea    rcx,[rip+0x661d6]        # 0x14006c630
   14000645a:	mov    edx,r14d
   14000645d:	call   0x14001796c
   140006462:	mov    rdx,QWORD PTR [rsi+0x7f80]
   140006469:	xor    r8d,r8d
   14000646c:	mov    rax,QWORD PTR [rsi]
   14000646f:	mov    rcx,rsi
   140006472:	sub    rdx,QWORD PTR [rsi+0x4548]
   140006479:	call   QWORD PTR [rax+0x18]
   14000647c:	and    DWORD PTR [rbp+0x70],0x0
   140006480:	mov    rcx,rsi
   140006483:	call   0x14000c120
   140006488:	test   al,al
   14000648a:	jne    0x1400065a9
   140006490:	cmp    BYTE PTR [rsi+0x350a],al
   140006496:	jne    0x1400064a5
   140006498:	mov    rcx,rsi
   14000649b:	call   0x14000a2c8
   1400064a0:	jmp    0x1400065a9
   1400064a5:	mov    rdx,rsi
   1400064a8:	mov    rcx,rbp
   1400064ab:	call   0x140003318
   1400064b0:	and    QWORD PTR [rbp+0x278],0x0
   1400064b8:	lea    rdi,[rsi+0x4560]
   1400064bf:	and    QWORD PTR [rbp+0x280],0x0
   1400064c7:	lea    rcx,[rbp+0x2b0]
   1400064ce:	mov    rax,QWORD PTR [rbp+0x58]
   1400064d2:	mov    WORD PTR [rbp+0x1f8],0x100
   1400064db:	mov    edx,DWORD PTR [rdi]
   1400064dd:	mov    r8d,DWORD PTR [rax+0x83d0]
   1400064e4:	call   0x1400241ac
   1400064e9:	mov    rax,QWORD PTR [rbp+0x58]
   1400064ed:	lea    rbx,[rbp+0x2f0]
   1400064f4:	mov    edx,DWORD PTR [rdi]
   1400064f6:	mov    rcx,rbx
   1400064f9:	mov    r8d,DWORD PTR [rax+0x83d0]
   140006500:	call   0x1400241ac
   140006505:	mov    rax,QWORD PTR [rsi+0x4548]
   14000650c:	lea    rcx,[rbp+0x160]
   140006513:	xor    r8d,r8d
   140006516:	mov    QWORD PTR [rbp+0x1f0],rax
   14000651d:	mov    rdx,rsi
   140006520:	call   0x140037588
   140006525:	mov    BYTE PTR [rbp+0x1fa],0x0
   14000652c:	mov    rcx,r13
   14000652f:	mov    al,BYTE PTR [rsi+0x45e0]
   140006535:	mov    BYTE PTR [rbp+0x85],al
   14000653b:	mov    r8b,BYTE PTR [rsi+0x45e0]
   140006542:	mov    rdx,QWORD PTR [rsi+0x45e8]
   140006549:	call   0x14004b824
   14000654e:	mov    rax,QWORD PTR [rsi+0x4550]
   140006555:	mov    rcx,r13
   140006558:	mov    QWORD PTR [r13+0x4da0],rax
   14000655f:	mov    BYTE PTR [r13+0x4db8],0x0
   140006567:	movzx  edx,BYTE PTR [rsi+0x3509]
   14000656e:	mov    r8b,BYTE PTR [rbp+0x85]
   140006575:	call   0x14004ab9c
   14000657a:	mov    al,BYTE PTR [rsi+0x45ba]
   140006580:	lea    r9,[rsi+0x45bb]
   140006587:	neg    al
   140006589:	mov    rdx,rdi
   14000658c:	mov    rcx,rbx
   14000658f:	sbb    r8,r8
   140006592:	and    r8,r9
   140006595:	call   0x14002413c
   14000659a:	test   al,al
   14000659c:	jne    0x1400065a9
   14000659e:	mov    rdx,rsi
   1400065a1:	mov    rcx,rbp
   1400065a4:	call   0x140004d6c
   1400065a9:	mov    rax,QWORD PTR [rsi]
   1400065ac:	mov    rcx,rsi
   1400065af:	call   QWORD PTR [rax+0x20]
   1400065b2:	cmp    rax,r15
   1400065b5:	jl     0x1400063fb
   1400065bb:	jmp    0x1400065d0
   1400065bd:	mov    rax,QWORD PTR [rsi]
   1400065c0:	xor    r8d,r8d
   1400065c3:	mov    rdx,QWORD PTR [rsi+0x7f78]
   1400065ca:	mov    rcx,rsi
   1400065cd:	call   QWORD PTR [rax+0x18]
   1400065d0:	mov    rbx,QWORD PTR [rsp+0x40]
   1400065d5:	mov    rbp,QWORD PTR [rsp+0x48]
   1400065da:	mov    rsi,QWORD PTR [rsp+0x50]
   1400065df:	mov    rdi,QWORD PTR [rsp+0x58]
   1400065e4:	add    rsp,0x20
   1400065e8:	pop    r15
   1400065ea:	pop    r14
   1400065ec:	pop    r13
   1400065ee:	ret    
   1400065ef:	int3   
   1400065f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400065f5:	push   rdi
   1400065f6:	sub    rsp,0x20
   1400065fa:	mov    rax,QWORD PTR [rcx+0x58]
   1400065fe:	mov    dil,r9b
   140006601:	mov    r9,rdx
   140006604:	cmp    BYTE PTR [rax+0x6150],0x0
   14000660b:	jne    0x140006639
   14000660d:	mov    rdx,r8
   140006610:	mov    rcx,r9
   140006613:	call   0x14004596c
   140006618:	mov    ebx,eax
   14000661a:	test   dil,dil
   14000661d:	je     0x14000662b
   14000661f:	lea    rcx,[rip+0x661e2]        # 0x14006c808
   140006626:	call   0x14001796c
   14000662b:	mov    edx,ebx
   14000662d:	lea    rcx,[rip+0x661e4]        # 0x14006c818
   140006634:	call   0x14001796c
   140006639:	mov    rbx,QWORD PTR [rsp+0x30]
   14000663e:	add    rsp,0x20
   140006642:	pop    rdi
   140006643:	ret    
   140006644:	mov    rax,rsp
   140006647:	mov    QWORD PTR [rax+0x8],rbx
   14000664b:	mov    QWORD PTR [rax+0x10],rbp
   14000664f:	mov    QWORD PTR [rax+0x18],rsi
   140006653:	mov    QWORD PTR [rax+0x20],rdi
   140006657:	push   r14
   140006659:	sub    rsp,0x50
   14000665d:	xor    edi,edi
   14000665f:	mov    rsi,rcx
   140006662:	test   dl,dl
   140006664:	jne    0x14000666b
   140006666:	call   0x1400053ac
   14000666b:	movsxd rax,DWORD PTR [rsi+0xc]
   14000666f:	mov    r14,QWORD PTR [rsi]
   140006672:	mov    rcx,QWORD PTR [rsi+0x28]
   140006676:	imul   rbp,rax,0x3350
   14000667d:	mov    edx,DWORD PTR [r14+rbp*1+0x100c]
   140006685:	call   0x140008a60
   14000668a:	mov    r9,QWORD PTR [rsi+0x48]
   14000668e:	mov    ebx,eax
   140006690:	cmp    BYTE PTR [r9+0xfa],dil
   140006697:	je     0x1400066b4
   140006699:	mov    rcx,QWORD PTR [rsi+0x28]
   14000669d:	lea    rax,[rbx+0x7]
   1400066a1:	cmp    QWORD PTR [rcx+0x7fb8],rax
   1400066a8:	jge    0x1400066b4
   1400066aa:	xor    r8d,r8d
   1400066ad:	xor    edx,edx
   1400066af:	call   0x1400553cc
   1400066b4:	mov    rcx,QWORD PTR [rsi+0x28]
   1400066b8:	mov    rax,QWORD PTR [rcx]
   1400066bb:	call   QWORD PTR [rax+0x20]
   1400066be:	mov    QWORD PTR [rsi+0x18],rax
   1400066c2:	mov    rax,QWORD PTR [rsi+0x28]
   1400066c6:	sub    QWORD PTR [rax+0x7fb8],rbx
   1400066cd:	mov    rcx,QWORD PTR [rsi+0x28]
   1400066d1:	cmp    BYTE PTR [rcx+0x3496],dil
   1400066d8:	je     0x1400066f7
   1400066da:	mov    rax,QWORD PTR [rsi+0x40]
   1400066de:	cmp    DWORD PTR [rax+0x2018],edi
   1400066e4:	je     0x1400066f7
   1400066e6:	mov    rax,0xfffffffffffffff0
   1400066ed:	sub    rax,rbx
   1400066f0:	add    QWORD PTR [rcx+0x7fb8],rax
   1400066f7:	mov    rcx,QWORD PTR [rsi+0x28]
   1400066fb:	mov    r8d,0x1
   140006701:	mov    rdx,rbx
   140006704:	mov    rax,QWORD PTR [rcx]
   140006707:	call   QWORD PTR [rax+0x18]
   14000670a:	mov    rax,QWORD PTR [rsi+0x48]
   14000670e:	mov    QWORD PTR [rax+0x110],rdi
   140006715:	mov    rax,QWORD PTR [rsi+0x40]
   140006719:	mov    rcx,QWORD PTR [rsi+0x48]
   14000671d:	mov    edx,DWORD PTR [r14+rbp*1+0x2070]
   140006725:	add    rcx,0x150
   14000672c:	mov    r8d,DWORD PTR [rax+0x83d0]
   140006733:	call   0x1400241ac
   140006738:	mov    rax,QWORD PTR [rsi+0x28]
   14000673c:	lea    r10,[r14+0x20c2]
   140006743:	mov    r9,QWORD PTR [rsi+0x40]
   140006747:	lea    r11,[r14+0x20cb]
   14000674e:	add    r10,rbp
   140006751:	lea    rbx,[r14+0x20b1]
   140006758:	mov    QWORD PTR [rsp+0x40],r10
   14000675d:	lea    rdi,[r14+0x20a1]
   140006764:	mov    ecx,DWORD PTR [rax+0x7f88]
   14000676a:	add    r11,rbp
   14000676d:	mov    eax,DWORD PTR [r14+rbp*1+0x20ec]
   140006775:	sub    ecx,0x3
   140006778:	mov    QWORD PTR [rsp+0x38],r11
   14000677d:	add    rbx,rbp
   140006780:	add    rdi,rbp
   140006783:	mov    DWORD PTR [rsp+0x30],eax
   140006787:	add    r9,0x5030
   14000678e:	mov    QWORD PTR [rsp+0x28],rbx
   140006793:	neg    ecx
   140006795:	mov    QWORD PTR [rsp+0x20],rdi
   14000679a:	mov    rcx,QWORD PTR [rsi+0x48]
   14000679e:	mov    dl,0x1
   1400067a0:	sbb    r8d,r8d
   1400067a3:	add    r8d,0x5
   1400067a7:	call   0x14003750c
   1400067ac:	mov    rbx,QWORD PTR [rsp+0x60]
   1400067b1:	mov    rbp,QWORD PTR [rsp+0x68]
   1400067b6:	mov    rsi,QWORD PTR [rsp+0x70]
   1400067bb:	mov    rdi,QWORD PTR [rsp+0x78]
   1400067c0:	add    rsp,0x50
   1400067c4:	pop    r14
   1400067c6:	ret    
   1400067c7:	int3   
   1400067c8:	mov    rax,rsp
   1400067cb:	push   rdi
   1400067cc:	sub    rsp,0x50
   1400067d0:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   1400067d8:	mov    rdi,rcx
   1400067db:	and    QWORD PTR [rax-0x30],0x0
   1400067e0:	and    QWORD PTR [rax-0x28],0x0
   1400067e5:	and    QWORD PTR [rax-0x20],0x0
   1400067ea:	and    QWORD PTR [rax-0x18],0x0
   1400067ef:	mov    edx,0x40000
   1400067f4:	lea    rcx,[rax-0x30]
   1400067f8:	call   0x140001858
   1400067fd:	nop
   1400067fe:	jmp    0x14000680d
   140006800:	mov    r8d,eax
   140006803:	mov    rdx,QWORD PTR [rsp+0x28]
   140006808:	call   0x1400372b0
   14000680d:	mov    r8,QWORD PTR [rsp+0x30]
   140006812:	mov    rdx,QWORD PTR [rsp+0x28]
   140006817:	mov    rcx,rdi
   14000681a:	call   0x140037068
   14000681f:	mov    rcx,rdi
   140006822:	test   eax,eax
   140006824:	jne    0x140006800
   140006826:	call   0x140037258
   14000682b:	nop
   14000682c:	cmp    QWORD PTR [rsp+0x28],0x0
   140006832:	je     0x14000683e
   140006834:	mov    rcx,QWORD PTR [rsp+0x28]
   140006839:	call   0x14005a938
   14000683e:	add    rsp,0x50
   140006842:	pop    rdi
   140006843:	ret    
   140006844:	rex push rbp
   140006846:	push   rdi
   140006847:	push   r14
   140006849:	lea    rbp,[rsp-0xfb0]
   140006851:	mov    eax,0x10b0
   140006856:	call   0x140055f20
   14000685b:	sub    rsp,rax
   14000685e:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140006867:	mov    QWORD PTR [rsp+0x10d0],rbx
   14000686f:	mov    QWORD PTR [rsp+0x10e0],rsi
   140006877:	mov    rax,QWORD PTR [rip+0x7b662]        # 0x140081ee0
   14000687e:	xor    rax,rsp
   140006881:	mov    QWORD PTR [rbp+0xfa0],rax
   140006888:	mov    r14,rcx
   14000688b:	mov    r8d,0x800
   140006891:	lea    rcx,[rbp-0x60]
   140006895:	call   0x140046158
   14000689a:	and    DWORD PTR [rbp-0x70],0x0
   14000689e:	and    DWORD PTR [rbp-0x6c],0x0
   1400068a2:	mov    DWORD PTR [rbp-0x68],0x85
   1400068a9:	lea    rcx,[rsp+0x30]
   1400068ae:	call   0x1400479a4
   1400068b3:	mov    ecx,0xa7a0
   1400068b8:	call   0x140055dac
   1400068bd:	mov    QWORD PTR [rsp+0x20],rax
   1400068c2:	test   rax,rax
   1400068c5:	je     0x1400068d4
   1400068c7:	mov    rcx,rax
   1400068ca:	call   0x1400139d0
   1400068cf:	mov    rbx,rax
   1400068d2:	jmp    0x1400068d6
   1400068d4:	xor    ebx,ebx
   1400068d6:	mov    esi,0x1
   1400068db:	mov    BYTE PTR [rbx+0x62f9],sil
   1400068e2:	mov    rax,QWORD PTR [r14+0x58]
   1400068e6:	mov    ecx,DWORD PTR [rax+0x83d0]
   1400068ec:	mov    DWORD PTR [rbx+0x83d0],ecx
   1400068f2:	mov    DWORD PTR [rbx+0x73bc],esi
   1400068f8:	mov    rax,QWORD PTR [r14+0x58]
   1400068fc:	mov    cl,BYTE PTR [rax+0x6150]
   140006902:	mov    BYTE PTR [rbx+0x6150],cl
   140006908:	mov    rax,QWORD PTR [r14+0x58]
   14000690c:	mov    cl,BYTE PTR [rax+0x615e]
   140006912:	mov    BYTE PTR [rbx+0x615e],cl
   140006918:	mov    rax,QWORD PTR [r14+0x58]
   14000691c:	mov    cl,BYTE PTR [rax+0x61b5]
   140006922:	mov    BYTE PTR [rbx+0x61b5],cl
   140006928:	mov    DWORD PTR [rbx+0x83e2],0x54
   140006932:	mov    rax,QWORD PTR [r14+0x58]
   140006936:	lea    rcx,[rbx+0x5030]
   14000693d:	add    rax,0x5030
   140006943:	lea    edx,[rsi+0x1]
   140006946:	lea    r8d,[rsi+0x7f]
   14000694a:	movups xmm0,XMMWORD PTR [rax]
   14000694d:	movups XMMWORD PTR [rcx],xmm0
   140006950:	movups xmm1,XMMWORD PTR [rax+0x10]
   140006954:	movups XMMWORD PTR [rcx+0x10],xmm1
   140006958:	movups xmm0,XMMWORD PTR [rax+0x20]
   14000695c:	movups XMMWORD PTR [rcx+0x20],xmm0
   140006960:	movups xmm1,XMMWORD PTR [rax+0x30]
   140006964:	movups XMMWORD PTR [rcx+0x30],xmm1
   140006968:	movups xmm0,XMMWORD PTR [rax+0x40]
   14000696c:	movups XMMWORD PTR [rcx+0x40],xmm0
   140006970:	movups xmm1,XMMWORD PTR [rax+0x50]
   140006974:	movups XMMWORD PTR [rcx+0x50],xmm1
   140006978:	movups xmm0,XMMWORD PTR [rax+0x60]
   14000697c:	movups XMMWORD PTR [rcx+0x60],xmm0
   140006980:	add    rcx,r8
   140006983:	movups xmm1,XMMWORD PTR [rax+0x70]
   140006987:	movups XMMWORD PTR [rcx-0x10],xmm1
   14000698b:	add    rax,r8
   14000698e:	sub    rdx,rsi
   140006991:	jne    0x14000694a
   140006993:	movzx  eax,WORD PTR [rax]
   140006996:	mov    WORD PTR [rcx],ax
   140006999:	xor    dil,dil
   14000699c:	jmp    0x1400069c5
   14000699e:	mov    rax,QWORD PTR [r14+0x58]
   1400069a2:	cmp    WORD PTR [rax+0x63bc],0x2e
   1400069aa:	je     0x1400069d4
   1400069ac:	mov    edx,0x800
   1400069b1:	lea    rcx,[rbp-0x60]
   1400069b5:	call   0x140048354
   1400069ba:	test   al,al
   1400069bc:	sete   dil
   1400069c0:	cmp    dil,sil
   1400069c3:	je     0x1400069d7
   1400069c5:	lea    rcx,[rbp-0x60]
   1400069c9:	call   0x140021dec
   1400069ce:	test   al,al
   1400069d0:	je     0x14000699e
   1400069d2:	jmp    0x1400069d7
   1400069d4:	mov    dil,sil
   1400069d7:	test   dil,dil
   1400069da:	jne    0x140006a55
   1400069dc:	lea    rdx,[rbp-0x60]
   1400069e0:	mov    rcx,rbx
   1400069e3:	call   0x140013ae4
   1400069e8:	lea    rcx,[rbx+0xa408]
   1400069ef:	lea    rdx,[rip+0x65ce6]        # 0x14006c6dc
   1400069f6:	call   0x1400461bc
   1400069fb:	mov    esi,DWORD PTR [rip+0x8de63]        # 0x140094864
   140006a01:	mov    r14d,0x21e8
   140006a07:	mov    ecx,r14d
   140006a0a:	call   0x140055dac
   140006a0f:	mov    QWORD PTR [rsp+0x20],rax
   140006a14:	test   rax,rax
   140006a17:	je     0x140006a29
   140006a19:	mov    rdx,rbx
   140006a1c:	mov    rcx,rax
   140006a1f:	call   0x14001df6c
   140006a24:	mov    rdi,rax
   140006a27:	jmp    0x140006a2b
   140006a29:	xor    edi,edi
   140006a2b:	mov    rcx,rdi
   140006a2e:	call   0x14001e190
   140006a33:	test   rdi,rdi
   140006a36:	je     0x140006a4b
   140006a38:	mov    rcx,rdi
   140006a3b:	call   0x14001e000
   140006a40:	mov    rdx,r14
   140006a43:	mov    rcx,rdi
   140006a46:	call   0x140055de8
   140006a4b:	cmp    esi,DWORD PTR [rip+0x8de13]        # 0x140094864
   140006a51:	sete   sil
   140006a55:	mov    rcx,rbx
   140006a58:	call   0x1400016e8
   140006a5d:	mov    edx,0xa7a0
   140006a62:	mov    rcx,rbx
   140006a65:	call   0x140055de8
   140006a6a:	and    DWORD PTR [rbp-0x70],0x0
   140006a6e:	and    DWORD PTR [rbp-0x6c],0x0
   140006a72:	mov    DWORD PTR [rbp-0x68],0x86
   140006a79:	lea    rcx,[rsp+0x30]
   140006a7e:	call   0x1400479a4
   140006a83:	mov    al,sil
   140006a86:	mov    rcx,QWORD PTR [rbp+0xfa0]
   140006a8d:	xor    rcx,rsp
   140006a90:	call   0x140055f90
   140006a95:	lea    r11,[rsp+0x10b0]
   140006a9d:	mov    rbx,QWORD PTR [r11+0x20]
   140006aa1:	mov    rsi,QWORD PTR [r11+0x30]
   140006aa5:	mov    rsp,r11
   140006aa8:	pop    r14
   140006aaa:	pop    rdi
   140006aab:	pop    rbp
   140006aac:	ret    
   140006aad:	int3   
   140006aae:	int3   
   140006aaf:	int3   
   140006ab0:	cmp    QWORD PTR [rcx+0x8],0x0
   140006ab5:	lea    rax,[rip+0x65f9c]        # 0x14006ca58
   140006abc:	cmovne rax,QWORD PTR [rcx+0x8]
   140006ac1:	ret    
   140006ac2:	int3   
   140006ac3:	int3   
   140006ac4:	lea    rax,[rip+0x7be35]        # 0x140082900
   140006acb:	ret    
   140006acc:	mov    QWORD PTR [rsp+0x18],r8
   140006ad1:	mov    QWORD PTR [rsp+0x20],r9
   140006ad6:	push   rbx
   140006ad7:	push   rbp
   140006ad8:	push   rsi
   140006ad9:	push   rdi
   140006ada:	sub    rsp,0x38
   140006ade:	mov    rsi,r8
   140006ae1:	lea    rbp,[rsp+0x78]
   140006ae6:	mov    rbx,rdx
   140006ae9:	mov    rdi,rcx
   140006aec:	call   0x140006ac4
   140006af1:	mov    QWORD PTR [rsp+0x28],rbp
   140006af6:	mov    r9,rsi
   140006af9:	and    QWORD PTR [rsp+0x20],0x0
   140006aff:	mov    r8,rbx
   140006b02:	mov    rdx,rdi
   140006b05:	mov    rcx,QWORD PTR [rax]
   140006b08:	call   0x14005d174
   140006b0d:	or     ecx,0xffffffff
   140006b10:	test   eax,eax
   140006b12:	cmovs  eax,ecx
   140006b15:	add    rsp,0x38
   140006b19:	pop    rdi
   140006b1a:	pop    rsi
   140006b1b:	pop    rbp
   140006b1c:	pop    rbx
   140006b1d:	ret    
   140006b1e:	int3   
   140006b1f:	int3   
   140006b20:	xor    eax,eax
   140006b22:	mov    QWORD PTR [rcx],rax
   140006b25:	mov    QWORD PTR [rcx+0x8],rax
   140006b29:	mov    QWORD PTR [rcx+0x10],rax
   140006b2d:	mov    QWORD PTR [rcx+0x18],rax
   140006b31:	mov    QWORD PTR [rcx+0x20],rax
   140006b35:	mov    QWORD PTR [rcx+0x30],rax
   140006b39:	mov    rax,rcx
   140006b3c:	mov    QWORD PTR [rcx+0x28],rdx
   140006b40:	ret    
   140006b41:	int3   
   140006b42:	int3   
   140006b43:	int3   
   140006b44:	mov    QWORD PTR [rsp+0x8],rbx
   140006b49:	mov    QWORD PTR [rsp+0x10],rsi
   140006b4e:	push   rdi
   140006b4f:	sub    rsp,0x20
   140006b53:	xor    edi,edi
   140006b55:	mov    rbx,rcx
   140006b58:	cmp    QWORD PTR [rcx+0x20],rdi
   140006b5c:	jbe    0x140006b7e
   140006b5e:	xor    esi,esi
   140006b60:	mov    rax,QWORD PTR [rbx]
   140006b63:	mov    rcx,QWORD PTR [rsi+rax*1]
   140006b67:	test   rcx,rcx
   140006b6a:	je     0x140006b71
   140006b6c:	call   0x14005a938
   140006b71:	inc    rdi
   140006b74:	add    rsi,0x60
   140006b78:	cmp    rdi,QWORD PTR [rbx+0x20]
   140006b7c:	jb     0x140006b60
   140006b7e:	mov    rcx,QWORD PTR [rbx]
   140006b81:	test   rcx,rcx
   140006b84:	je     0x140006b8b
   140006b86:	call   0x14005a938
   140006b8b:	mov    rbx,QWORD PTR [rsp+0x30]
   140006b90:	mov    rsi,QWORD PTR [rsp+0x38]
   140006b95:	add    rsp,0x20
   140006b99:	pop    rdi
   140006b9a:	ret    
   140006b9b:	int3   
   140006b9c:	lea    rax,[rdx+rdx*2]
   140006ba0:	shl    rax,0x5
   140006ba4:	add    rax,QWORD PTR [rcx]
   140006ba7:	ret    
   140006ba8:	mov    QWORD PTR [rsp+0x8],rbx
   140006bad:	mov    QWORD PTR [rsp+0x10],rsi
   140006bb2:	push   rdi
   140006bb3:	sub    rsp,0x20
   140006bb7:	add    QWORD PTR [rcx+0x8],rdx
   140006bbb:	mov    rbx,rcx
   140006bbe:	mov    rax,QWORD PTR [rcx+0x8]
   140006bc2:	cmp    rax,QWORD PTR [rcx+0x10]
   140006bc6:	jbe    0x140006c3a
   140006bc8:	mov    r8,QWORD PTR [rcx+0x18]
   140006bcc:	test   r8,r8
   140006bcf:	je     0x140006bf5
   140006bd1:	cmp    rax,r8
   140006bd4:	jbe    0x140006bf5
   140006bd6:	lea    rdx,[rip+0x65f83]        # 0x14006cb60
   140006bdd:	lea    rcx,[rip+0x8dc7c]        # 0x140094860
   140006be4:	call   0x14001bc8c
   140006be9:	lea    rcx,[rip+0x8dc70]        # 0x140094860
   140006bf0:	call   0x14001bd24
   140006bf5:	mov    rdx,QWORD PTR [rbx+0x10]
   140006bf9:	mov    rcx,QWORD PTR [rbx]
   140006bfc:	mov    rax,rdx
   140006bff:	shr    rax,0x2
   140006c03:	lea    rdi,[rdx+0x20]
   140006c07:	add    rdi,rax
   140006c0a:	cmp    QWORD PTR [rbx+0x8],rdi
   140006c0e:	cmova  rdi,QWORD PTR [rbx+0x8]
   140006c13:	mov    rdx,rdi
   140006c16:	shl    rdx,0x3
   140006c1a:	call   0x14005a940
   140006c1f:	mov    rsi,rax
   140006c22:	test   rax,rax
   140006c25:	jne    0x140006c33
   140006c27:	lea    rcx,[rip+0x8dc32]        # 0x140094860
   140006c2e:	call   0x14001bd24
   140006c33:	mov    QWORD PTR [rbx],rsi
   140006c36:	mov    QWORD PTR [rbx+0x10],rdi
   140006c3a:	mov    rbx,QWORD PTR [rsp+0x30]
   140006c3f:	mov    rsi,QWORD PTR [rsp+0x38]
   140006c44:	add    rsp,0x20
   140006c48:	pop    rdi
   140006c49:	ret    
   140006c4a:	int3   
   140006c4b:	int3   
   140006c4c:	mov    QWORD PTR [rsp+0x8],rbx
   140006c51:	mov    QWORD PTR [rsp+0x10],rsi
   140006c56:	push   rdi
   140006c57:	sub    rsp,0x20
   140006c5b:	add    QWORD PTR [rcx+0x8],rdx
   140006c5f:	mov    rbx,rcx
   140006c62:	mov    rax,QWORD PTR [rcx+0x8]
   140006c66:	cmp    rax,QWORD PTR [rcx+0x10]
   140006c6a:	jbe    0x140006cdf
   140006c6c:	mov    r8,QWORD PTR [rcx+0x18]
   140006c70:	test   r8,r8
   140006c73:	je     0x140006c99
   140006c75:	cmp    rax,r8
   140006c78:	jbe    0x140006c99
   140006c7a:	lea    rdx,[rip+0x65e7f]        # 0x14006cb00
   140006c81:	lea    rcx,[rip+0x8dbd8]        # 0x140094860
   140006c88:	call   0x14001bc8c
   140006c8d:	lea    rcx,[rip+0x8dbcc]        # 0x140094860
   140006c94:	call   0x14001bd24
   140006c99:	mov    rcx,QWORD PTR [rbx+0x10]
   140006c9d:	mov    rax,rcx
   140006ca0:	shr    rax,0x2
   140006ca4:	lea    rdi,[rcx+0x20]
   140006ca8:	mov    rcx,QWORD PTR [rbx]
   140006cab:	add    rdi,rax
   140006cae:	cmp    QWORD PTR [rbx+0x8],rdi
   140006cb2:	cmova  rdi,QWORD PTR [rbx+0x8]
   140006cb7:	lea    rdx,[rdi+rdi*2]
   140006cbb:	shl    rdx,0x5
   140006cbf:	call   0x14005a940
   140006cc4:	mov    rsi,rax
   140006cc7:	test   rax,rax
   140006cca:	jne    0x140006cd8
   140006ccc:	lea    rcx,[rip+0x8db8d]        # 0x140094860
   140006cd3:	call   0x14001bd24
   140006cd8:	mov    QWORD PTR [rbx],rsi
   140006cdb:	mov    QWORD PTR [rbx+0x10],rdi
   140006cdf:	mov    rbx,QWORD PTR [rsp+0x30]
   140006ce4:	mov    rsi,QWORD PTR [rsp+0x38]
   140006ce9:	add    rsp,0x20
   140006ced:	pop    rdi
   140006cee:	ret    
   140006cef:	int3   
   140006cf0:	mov    QWORD PTR [rsp+0x8],rbx
   140006cf5:	push   rdi
   140006cf6:	sub    rsp,0x40
   140006cfa:	mov    rbx,rdx
   140006cfd:	mov    rdi,rcx
   140006d00:	mov    edx,0x1
   140006d05:	call   0x140006c4c
   140006d0a:	mov    rcx,QWORD PTR [rbx]
   140006d0d:	mov    rax,QWORD PTR [rdi+0x20]
   140006d11:	mov    QWORD PTR [rbx+0x38],rax
   140006d15:	test   rcx,rcx
   140006d18:	je     0x140006d27
   140006d1a:	call   0x140060818
   140006d1f:	mov    QWORD PTR [rbx],rax
   140006d22:	test   rax,rax
   140006d25:	je     0x140006d7d
   140006d27:	mov    rcx,QWORD PTR [rdi+0x20]
   140006d2b:	lea    rax,[rcx+0x1]
   140006d2f:	mov    QWORD PTR [rdi+0x20],rax
   140006d33:	lea    rdx,[rcx+rcx*2]
   140006d37:	movups xmm0,XMMWORD PTR [rbx]
   140006d3a:	mov    rax,QWORD PTR [rdi]
   140006d3d:	shl    rdx,0x5
   140006d41:	movups XMMWORD PTR [rdx+rax*1],xmm0
   140006d45:	movups xmm1,XMMWORD PTR [rbx+0x10]
   140006d49:	movups XMMWORD PTR [rdx+rax*1+0x10],xmm1
   140006d4e:	movups xmm0,XMMWORD PTR [rbx+0x20]
   140006d52:	movups XMMWORD PTR [rdx+rax*1+0x20],xmm0
   140006d57:	movups xmm1,XMMWORD PTR [rbx+0x30]
   140006d5b:	movups XMMWORD PTR [rdx+rax*1+0x30],xmm1
   140006d60:	movups xmm0,XMMWORD PTR [rbx+0x40]
   140006d64:	movups XMMWORD PTR [rdx+rax*1+0x40],xmm0
   140006d69:	movups xmm1,XMMWORD PTR [rbx+0x50]
   140006d6d:	mov    rbx,QWORD PTR [rsp+0x50]
   140006d72:	movups XMMWORD PTR [rdx+rax*1+0x50],xmm1
   140006d77:	add    rsp,0x40
   140006d7b:	pop    rdi
   140006d7c:	ret    
   140006d7d:	mov    QWORD PTR [rsp+0x30],rax
   140006d82:	lea    rdx,[rip+0x78abf]        # 0x14007f848
   140006d89:	lea    rax,[rip+0x65ce0]        # 0x14006ca70
   140006d90:	mov    QWORD PTR [rsp+0x28],rax
   140006d95:	lea    rcx,[rsp+0x20]
   140006d9a:	lea    rax,[rip+0x6a627]        # 0x1400713c8
   140006da1:	mov    QWORD PTR [rsp+0x20],rax
   140006da6:	call   0x140058734
   140006dab:	int3   
   140006dac:	mov    QWORD PTR [rsp+0x8],rbx
   140006db1:	push   rdi
   140006db2:	sub    rsp,0x20
   140006db6:	mov    rbx,rdx
   140006db9:	mov    rdi,rcx
   140006dbc:	mov    rdx,QWORD PTR [rdx]
   140006dbf:	mov    rcx,QWORD PTR [rcx]
   140006dc2:	call   0x1400075a8
   140006dc7:	test   eax,eax
   140006dc9:	jne    0x140006ddc
   140006dcb:	mov    rcx,QWORD PTR [rbx+0x38]
   140006dcf:	cmp    QWORD PTR [rdi+0x38],rcx
   140006dd3:	je     0x140006ddc
   140006dd5:	sbb    eax,eax
   140006dd7:	and    eax,0xfffffffe
   140006dda:	inc    eax
   140006ddc:	mov    rbx,QWORD PTR [rsp+0x30]
   140006de1:	add    rsp,0x20
   140006de5:	pop    rdi
   140006de6:	ret    
   140006de7:	int3   
   140006de8:	mov    QWORD PTR [rsp+0x8],rbx
   140006ded:	mov    QWORD PTR [rsp+0x10],rbp
   140006df2:	mov    QWORD PTR [rsp+0x18],rsi
   140006df7:	push   rdi
   140006df8:	push   r14
   140006dfa:	push   r15
   140006dfc:	sub    rsp,0x20
   140006e00:	mov    eax,DWORD PTR [rcx+0x2c]
   140006e03:	mov    rbx,rdx
   140006e06:	mov    rsi,rcx
   140006e09:	test   eax,eax
   140006e0b:	je     0x140006e1f
   140006e0d:	cmp    DWORD PTR [rdx+0x2c],0x0
   140006e11:	jne    0x140006e1b
   140006e13:	or     eax,0xffffffff
   140006e16:	jmp    0x140006f91
   140006e1b:	test   eax,eax
   140006e1d:	jne    0x140006e3f
   140006e1f:	cmp    DWORD PTR [rdx+0x2c],0x0
   140006e23:	je     0x140006e2f
   140006e25:	mov    eax,0x1
   140006e2a:	jmp    0x140006f91
   140006e2f:	test   eax,eax
   140006e31:	jne    0x140006e3f
   140006e33:	cmp    DWORD PTR [rdx+0x2c],eax
   140006e36:	jne    0x140006e3f
   140006e38:	xor    eax,eax
   140006e3a:	jmp    0x140006f91
   140006e3f:	mov    ecx,DWORD PTR [rip+0x7bacf]        # 0x140082914
   140006e45:	mov    r14d,0x2
   140006e4b:	lea    edi,[r14-0x1]
   140006e4f:	cmp    ecx,edi
   140006e51:	je     0x140006e89
   140006e53:	cmp    eax,r14d
   140006e56:	je     0x140006e83
   140006e58:	cmp    DWORD PTR [rdx+0x2c],r14d
   140006e5c:	je     0x140006e73
   140006e5e:	mov    rax,QWORD PTR [rdx+0x40]
   140006e62:	or     ecx,0xffffffff
   140006e65:	cmp    QWORD PTR [rsi+0x40],rax
   140006e69:	cmovl  edi,ecx
   140006e6c:	mov    eax,edi
   140006e6e:	jmp    0x140006f91
   140006e73:	cmp    eax,r14d
   140006e76:	je     0x140006e83
   140006e78:	cmp    DWORD PTR [rdx+0x2c],r14d
   140006e7c:	je     0x140006e13
   140006e7e:	cmp    eax,r14d
   140006e81:	jne    0x140006e89
   140006e83:	cmp    DWORD PTR [rdx+0x2c],r14d
   140006e87:	jne    0x140006e6c
   140006e89:	test   ecx,ecx
   140006e8b:	jne    0x140006ed5
   140006e8d:	mov    al,BYTE PTR [rsi+0x58]
   140006e90:	test   al,al
   140006e92:	je     0x140006e9d
   140006e94:	cmp    BYTE PTR [rdx+0x58],cl
   140006e97:	je     0x140006e6c
   140006e99:	test   al,al
   140006e9b:	jne    0x140006eab
   140006e9d:	cmp    BYTE PTR [rdx+0x58],0x0
   140006ea1:	jne    0x140006e13
   140006ea7:	test   al,al
   140006ea9:	je     0x140006ed5
   140006eab:	cmp    BYTE PTR [rdx+0x58],0x0
   140006eaf:	je     0x140006ed5
   140006eb1:	mov    rcx,QWORD PTR [rsi]
   140006eb4:	call   0x140007098
   140006eb9:	mov    rcx,QWORD PTR [rbx]
   140006ebc:	mov    rbp,rax
   140006ebf:	call   0x140007098
   140006ec4:	cmp    rbp,rax
   140006ec7:	je     0x140006ed5
   140006ec9:	sbb    eax,eax
   140006ecb:	and    eax,r14d
   140006ece:	dec    eax
   140006ed0:	jmp    0x140006f91
   140006ed5:	cmp    BYTE PTR [rip+0x7ba34],0x0        # 0x140082910
   140006edc:	jne    0x140006ef8
   140006ede:	mov    rax,QWORD PTR [rbx+0x38]
   140006ee2:	cmp    QWORD PTR [rsi+0x38],rax
   140006ee6:	je     0x140006e38
   140006eec:	sbb    eax,eax
   140006eee:	and    eax,0xfffffffe
   140006ef1:	add    eax,edi
   140006ef3:	jmp    0x140006f91
   140006ef8:	mov    eax,DWORD PTR [rsi+0x30]
   140006efb:	mov    edx,DWORD PTR [rbx+0x30]
   140006efe:	cmp    eax,edx
   140006f00:	je     0x140006f0c
   140006f02:	or     ecx,0xffffffff
   140006f05:	cmp    eax,edx
   140006f07:	jmp    0x140006e69
   140006f0c:	mov    rcx,QWORD PTR [rsi]
   140006f0f:	call   0x1400327bc
   140006f14:	mov    rcx,QWORD PTR [rbx]
   140006f17:	mov    r14,rax
   140006f1a:	call   0x1400327bc
   140006f1f:	mov    edx,0x2e
   140006f24:	mov    rcx,r14
   140006f27:	mov    r15,rax
   140006f2a:	call   0x140058684
   140006f2f:	mov    edx,0x2e
   140006f34:	mov    rcx,r15
   140006f37:	mov    rbp,rax
   140006f3a:	call   0x140058684
   140006f3f:	test   rbp,rbp
   140006f42:	jne    0x140006f4e
   140006f44:	test   rax,rax
   140006f47:	je     0x140006f66
   140006f49:	jmp    0x140006e13
   140006f4e:	test   rax,rax
   140006f51:	je     0x140006e6c
   140006f57:	mov    rdx,rax
   140006f5a:	mov    rcx,rbp
   140006f5d:	call   0x140046118
   140006f62:	test   eax,eax
   140006f64:	jne    0x140006f91
   140006f66:	mov    rdx,r15
   140006f69:	mov    rcx,r14
   140006f6c:	call   0x140046118
   140006f71:	test   eax,eax
   140006f73:	jne    0x140006f91
   140006f75:	mov    rax,QWORD PTR [rsi+0x8]
   140006f79:	mov    rcx,QWORD PTR [rbx+0x8]
   140006f7d:	cmp    rax,rcx
   140006f80:	jne    0x140006eec
   140006f86:	mov    rdx,QWORD PTR [rbx]
   140006f89:	mov    rcx,QWORD PTR [rsi]
   140006f8c:	call   0x140046118
   140006f91:	mov    rbx,QWORD PTR [rsp+0x40]
   140006f96:	mov    rbp,QWORD PTR [rsp+0x48]
   140006f9b:	mov    rsi,QWORD PTR [rsp+0x50]
   140006fa0:	add    rsp,0x20
   140006fa4:	pop    r15
   140006fa6:	pop    r14
   140006fa8:	pop    rdi
   140006fa9:	ret    
   140006faa:	int3   
   140006fab:	int3   
   140006fac:	rex push rbx
   140006fae:	mov    eax,0x1030
   140006fb3:	call   0x140055f20
   140006fb8:	sub    rsp,rax
   140006fbb:	mov    rax,QWORD PTR [rip+0x7af1e]        # 0x140081ee0
   140006fc2:	xor    rax,rsp
   140006fc5:	mov    QWORD PTR [rsp+0x1020],rax
   140006fcd:	mov    rbx,rcx
   140006fd0:	lea    r8,[rsp+0x20]
   140006fd5:	mov    rcx,QWORD PTR [rip+0x7b93c]        # 0x140082918
   140006fdc:	mov    r9d,0x800
   140006fe2:	call   0x140005b58
   140006fe7:	mov    rcx,QWORD PTR [rbx]
   140006fea:	lea    rdx,[rsp+0x20]
   140006fef:	call   0x140046118
   140006ff4:	mov    rcx,QWORD PTR [rsp+0x1020]
   140006ffc:	xor    rcx,rsp
   140006fff:	call   0x140055f90
   140007004:	add    rsp,0x1030
   14000700b:	pop    rbx
   14000700c:	ret    
   14000700d:	int3   
   14000700e:	int3   
   14000700f:	int3   
   140007010:	rex push rbx
   140007012:	mov    eax,0x2030
   140007017:	call   0x140055f20
   14000701c:	sub    rsp,rax
   14000701f:	mov    rax,QWORD PTR [rip+0x7aeba]        # 0x140081ee0
   140007026:	xor    rax,rsp
   140007029:	mov    QWORD PTR [rsp+0x2020],rax
   140007031:	mov    rbx,rdx
   140007034:	lea    r8,[rsp+0x1020]
   14000703c:	mov    rdx,rcx
   14000703f:	mov    r9d,0x800
   140007045:	mov    rcx,QWORD PTR [rip+0x7b8cc]        # 0x140082918
   14000704c:	call   0x140005b58
   140007051:	mov    rcx,QWORD PTR [rip+0x7b8c0]        # 0x140082918
   140007058:	lea    r8,[rsp+0x20]
   14000705d:	mov    r9d,0x800
   140007063:	mov    rdx,rbx
   140007066:	call   0x140005b58
   14000706b:	lea    rdx,[rsp+0x20]
   140007070:	lea    rcx,[rsp+0x1020]
   140007078:	call   0x140046118
   14000707d:	mov    rcx,QWORD PTR [rsp+0x2020]
   140007085:	xor    rcx,rsp
   140007088:	call   0x140055f90
   14000708d:	add    rsp,0x2030
   140007094:	pop    rbx
   140007095:	ret    
   140007096:	int3   
   140007097:	int3   
   140007098:	mov    QWORD PTR [rsp+0x8],rbx
   14000709d:	mov    QWORD PTR [rsp+0x10],rsi
   1400070a2:	push   rdi
   1400070a3:	sub    rsp,0x20
   1400070a7:	xor    esi,esi
   1400070a9:	mov    rbx,rcx
   1400070ac:	mov    edi,esi
   1400070ae:	cmp    WORD PTR [rcx],si
   1400070b1:	je     0x1400070cb
   1400070b3:	movzx  ecx,WORD PTR [rbx]
   1400070b6:	call   0x140032274
   1400070bb:	test   al,al
   1400070bd:	je     0x1400070c2
   1400070bf:	inc    rdi
   1400070c2:	add    rbx,0x2
   1400070c6:	cmp    WORD PTR [rbx],si
   1400070c9:	jne    0x1400070b3
   1400070cb:	mov    rbx,QWORD PTR [rsp+0x30]
   1400070d0:	mov    rax,rdi
   1400070d3:	mov    rsi,QWORD PTR [rsp+0x38]
   1400070d8:	add    rsp,0x20
   1400070dc:	pop    rdi
   1400070dd:	ret    
   1400070de:	int3   
   1400070df:	int3   
   1400070e0:	rex push rbx
   1400070e2:	sub    rsp,0x20
   1400070e6:	mov    rdx,QWORD PTR [rcx+0x20]
   1400070ea:	mov    rbx,rcx
   1400070ed:	mov    rax,QWORD PTR [rcx+0x28]
   1400070f1:	mov    QWORD PTR [rip+0x7b820],rax        # 0x140082918
   1400070f8:	cmp    rdx,0x1
   1400070fc:	jbe    0x140007113
   1400070fe:	mov    rcx,QWORD PTR [rcx]
   140007101:	lea    r9,[rip+0xffffffffffffff08]        # 0x140007010
   140007108:	mov    r8d,0x60
   14000710e:	call   0x1400457a4
   140007113:	mov    rax,QWORD PTR [rbx+0x20]
   140007117:	mov    QWORD PTR [rbx+0x30],rax
   14000711b:	add    rsp,0x20
   14000711f:	pop    rbx
   140007120:	ret    
   140007121:	int3   
   140007122:	int3   
   140007123:	int3   
   140007124:	mov    rax,rsp
   140007127:	push   rbp
   140007128:	push   r12
   14000712a:	push   r13
   14000712c:	push   r14
   14000712e:	push   r15
   140007130:	lea    rbp,[rsp-0x60]
   140007135:	sub    rsp,0x160
   14000713c:	mov    QWORD PTR [rbp-0x80],0xfffffffffffffffe
   140007144:	mov    QWORD PTR [rax+0x10],rbx
   140007148:	mov    QWORD PTR [rax+0x18],rsi
   14000714c:	mov    QWORD PTR [rax+0x20],rdi
   140007150:	mov    rax,QWORD PTR [rip+0x7ad89]        # 0x140081ee0
   140007157:	xor    rax,rsp
   14000715a:	mov    QWORD PTR [rbp+0x50],rax
   14000715e:	mov    rsi,rcx
   140007161:	lea    rcx,[rbp-0x70]
   140007165:	call   0x140046194
   14000716a:	nop
   14000716b:	xor    edi,edi
   14000716d:	mov    BYTE PTR [rsp+0x38],dil
   140007172:	mov    BYTE PTR [rsp+0x30],dil
   140007177:	mov    BYTE PTR [rsp+0x28],dil
   14000717c:	mov    DWORD PTR [rsp+0x20],edi
   140007180:	xor    r9d,r9d
   140007183:	mov    r8b,0x1
   140007186:	lea    rdx,[rbp-0x70]
   14000718a:	lea    rcx,[rip+0x65927]        # 0x14006cab8
   140007191:	call   0x140022ce4
   140007196:	test   al,al
   140007198:	je     0x140007370
   14000719e:	mov    r13d,0x7530
   1400071a4:	mov    QWORD PTR [rsp+0x60],rdi
   1400071a9:	mov    QWORD PTR [rsp+0x68],rdi
   1400071ae:	mov    QWORD PTR [rsp+0x70],rdi
   1400071b3:	mov    QWORD PTR [rsp+0x78],rdi
   1400071b8:	mov    edx,DWORD PTR [rbp-0x48]
   1400071bb:	lea    rcx,[rsp+0x60]
   1400071c0:	call   0x140006ba8
   1400071c5:	nop
   1400071c6:	mov    r15d,edi
   1400071c9:	lea    rcx,[rbp-0x70]
   1400071cd:	call   0x140046230
   1400071d2:	mov    rbx,rax
   1400071d5:	mov    r14,QWORD PTR [rsp+0x60]
   1400071da:	test   rax,rax
   1400071dd:	je     0x140007214
   1400071df:	mov    rdi,r14
   1400071e2:	lea    rdx,[rip+0x658ef]        # 0x14006cad8
   1400071e9:	mov    rcx,rbx
   1400071ec:	call   0x140048f34
   1400071f1:	test   eax,eax
   1400071f3:	cmove  r13d,r15d
   1400071f7:	mov    QWORD PTR [rdi],rbx
   1400071fa:	inc    r15d
   1400071fd:	lea    rdi,[rdi+0x8]
   140007201:	lea    rcx,[rbp-0x70]
   140007205:	call   0x140046230
   14000720a:	mov    rbx,rax
   14000720d:	test   rax,rax
   140007210:	jne    0x1400071e2
   140007212:	xor    edi,edi
   140007214:	mov    r12,rdi
   140007217:	mov    QWORD PTR [rsp+0x48],rdi
   14000721c:	cmp    QWORD PTR [rsi+0x20],rdi
   140007220:	jbe    0x140007362
   140007226:	mov    rbx,rdi
   140007229:	mov    rax,QWORD PTR [rsi]
   14000722c:	mov    DWORD PTR [rbx+rax*1+0x30],r13d
   140007231:	mov    rax,QWORD PTR [rsi]
   140007234:	mov    rdi,QWORD PTR [rbx+rax*1]
   140007238:	mov    QWORD PTR [rsp+0x50],rdi
   14000723d:	test   rdi,rdi
   140007240:	je     0x14000734c
   140007246:	lea    rcx,[rbp-0x70]
   14000724a:	call   0x1400463a0
   14000724f:	mov    rcx,rdi
   140007252:	call   0x140031bd4
   140007257:	mov    QWORD PTR [rsp+0x58],rax
   14000725c:	xor    eax,eax
   14000725e:	mov    r15d,eax
   140007261:	mov    DWORD PTR [rsp+0x40],eax
   140007265:	lea    rcx,[rbp-0x70]
   140007269:	call   0x140046230
   14000726e:	mov    rdi,rax
   140007271:	xor    eax,eax
   140007273:	test   rdi,rdi
   140007276:	je     0x14000734c
   14000727c:	mov    r12,QWORD PTR [rsp+0x50]
   140007281:	cmp    WORD PTR [rdi],ax
   140007284:	je     0x140007328
   14000728a:	cmp    WORD PTR [rdi],0x3b
   14000728e:	je     0x140007328
   140007294:	cmp    WORD PTR [rdi],0x2a
   140007298:	jne    0x1400072e5
   14000729a:	cmp    WORD PTR [rdi+0x2],0x2e
   14000729f:	jne    0x1400072e5
   1400072a1:	lea    r15,[rdi+0x4]
   1400072a5:	cmp    WORD PTR [r15],ax
   1400072a9:	je     0x1400072e0
   1400072ab:	lea    rdx,[rip+0x6583a]        # 0x14006caec
   1400072b2:	mov    rcx,r15
   1400072b5:	call   0x14005d4b0
   1400072ba:	test   rax,rax
   1400072bd:	jne    0x1400072e0
   1400072bf:	mov    rax,QWORD PTR [rsp+0x58]
   1400072c4:	test   rax,rax
   1400072c7:	je     0x140007323
   1400072c9:	lea    rcx,[rax+0x2]
   1400072cd:	mov    rdx,r15
   1400072d0:	call   0x140046118
   1400072d5:	mov    r15d,DWORD PTR [rsp+0x40]
   1400072da:	test   eax,eax
   1400072dc:	jne    0x140007328
   1400072de:	jmp    0x1400072e5
   1400072e0:	mov    r15d,DWORD PTR [rsp+0x40]
   1400072e5:	xor    r8d,r8d
   1400072e8:	mov    rdx,r12
   1400072eb:	mov    rcx,rdi
   1400072ee:	call   0x140026254
   1400072f3:	test   al,al
   1400072f5:	je     0x140007328
   1400072f7:	mov    rax,QWORD PTR [rsi]
   1400072fa:	cmp    DWORD PTR [rbx+rax*1+0x30],r13d
   1400072ff:	je     0x140007319
   140007301:	movsxd rcx,DWORD PTR [rbx+rax*1+0x30]
   140007306:	xor    r8d,r8d
   140007309:	mov    rdx,rdi
   14000730c:	mov    rcx,QWORD PTR [r14+rcx*8]
   140007310:	call   0x140026254
   140007315:	test   al,al
   140007317:	je     0x140007328
   140007319:	mov    rax,QWORD PTR [rsi]
   14000731c:	mov    DWORD PTR [rbx+rax*1+0x30],r15d
   140007321:	jmp    0x140007328
   140007323:	mov    r15d,DWORD PTR [rsp+0x40]
   140007328:	inc    r15d
   14000732b:	mov    DWORD PTR [rsp+0x40],r15d
   140007330:	lea    rcx,[rbp-0x70]
   140007334:	call   0x140046230
   140007339:	mov    rdi,rax
   14000733c:	xor    eax,eax
   14000733e:	test   rdi,rdi
   140007341:	jne    0x140007281
   140007347:	mov    r12,QWORD PTR [rsp+0x48]
   14000734c:	inc    r12
   14000734f:	mov    QWORD PTR [rsp+0x48],r12
   140007354:	add    rbx,0x60
   140007358:	cmp    r12,QWORD PTR [rsi+0x20]
   14000735c:	jb     0x140007229
   140007362:	test   r14,r14
   140007365:	je     0x140007370
   140007367:	mov    rcx,r14
   14000736a:	call   0x14005a938
   14000736f:	nop
   140007370:	mov    rcx,QWORD PTR [rbp-0x70]
   140007374:	test   rcx,rcx
   140007377:	je     0x14000737e
   140007379:	call   0x14005a938
   14000737e:	mov    rcx,QWORD PTR [rbp+0x50]
   140007382:	xor    rcx,rsp
   140007385:	call   0x140055f90
   14000738a:	lea    r11,[rsp+0x160]
   140007392:	mov    rbx,QWORD PTR [r11+0x38]
   140007396:	mov    rsi,QWORD PTR [r11+0x40]
   14000739a:	mov    rdi,QWORD PTR [r11+0x48]
   14000739e:	mov    rsp,r11
   1400073a1:	pop    r15
   1400073a3:	pop    r14
   1400073a5:	pop    r13
   1400073a7:	pop    r12
   1400073a9:	pop    rbp
   1400073aa:	ret    
   1400073ab:	int3   
   1400073ac:	mov    QWORD PTR [rsp+0x8],rbx
   1400073b1:	mov    QWORD PTR [rsp+0x10],rsi
   1400073b6:	push   rdi
   1400073b7:	sub    rsp,0x20
   1400073bb:	mov    rdx,QWORD PTR [rcx+0x20]
   1400073bf:	mov    rsi,rcx
   1400073c2:	cmp    rdx,0x2
   1400073c6:	jb     0x140007433
   1400073c8:	mov    rcx,QWORD PTR [rcx]
   1400073cb:	lea    r9,[rip+0xfffffffffffff9da]        # 0x140006dac
   1400073d2:	mov    r8d,0x60
   1400073d8:	call   0x1400457a4
   1400073dd:	mov    eax,DWORD PTR [rsi+0x20]
   1400073e0:	sub    eax,0x2
   1400073e3:	movsxd rdi,eax
   1400073e6:	js     0x140007433
   1400073e8:	lea    rbx,[rdi+0x1]
   1400073ec:	lea    rbx,[rbx+rbx*2]
   1400073f0:	shl    rbx,0x5
   1400073f4:	mov    rcx,QWORD PTR [rsi]
   1400073f7:	mov    eax,DWORD PTR [rbx+rcx*1-0x34]
   1400073fb:	sub    eax,0x2
   1400073fe:	cmp    eax,0x1
   140007401:	ja     0x140007429
   140007403:	mov    eax,DWORD PTR [rbx+rcx*1+0x2c]
   140007407:	sub    eax,0x2
   14000740a:	cmp    eax,0x1
   14000740d:	ja     0x140007429
   14000740f:	mov    rdx,QWORD PTR [rbx+rcx*1]
   140007413:	mov    rcx,QWORD PTR [rbx+rcx*1-0x60]
   140007418:	call   0x1400075a8
   14000741d:	test   eax,eax
   14000741f:	jne    0x140007429
   140007421:	mov    rax,QWORD PTR [rsi]
   140007424:	and    DWORD PTR [rbx+rax*1+0x2c],0x0
   140007429:	sub    rbx,0x60
   14000742d:	sub    rdi,0x1
   140007431:	jns    0x1400073f4
   140007433:	mov    rbx,QWORD PTR [rsp+0x30]
   140007438:	mov    rsi,QWORD PTR [rsp+0x38]
   14000743d:	add    rsp,0x20
   140007441:	pop    rdi
   140007442:	ret    
   140007443:	int3   
   140007444:	mov    rax,rsp
   140007447:	mov    QWORD PTR [rax+0x8],rbx
   14000744b:	mov    QWORD PTR [rax+0x10],rbp
   14000744f:	mov    QWORD PTR [rax+0x18],rsi
   140007453:	push   rdi
   140007454:	push   r14
   140007456:	push   r15
   140007458:	sub    rsp,0x90
   14000745f:	mov    rbx,rdx
   140007462:	mov    r15,r8
   140007465:	xor    edx,edx
   140007467:	mov    rdi,rcx
   14000746a:	lea    rcx,[rax-0x78]
   14000746e:	mov    r14,r9
   140007471:	lea    r8d,[rdx+0x60]
   140007475:	call   0x140058f40
   14000747a:	mov    rax,QWORD PTR [rdi+0x28]
   14000747e:	lea    rcx,[rsp+0x30]
   140007483:	mov    r8,QWORD PTR [rdi+0x30]
   140007487:	mov    r9d,0x60
   14000748d:	mov    rdx,QWORD PTR [rdi]
   140007490:	mov    QWORD PTR [rip+0x7b481],rax        # 0x140082918
   140007497:	lea    rax,[rip+0xfffffffffffffb0e]        # 0x140006fac
   14000749e:	mov    QWORD PTR [rsp+0x20],rax
   1400074a3:	mov    QWORD PTR [rsp+0x30],rbx
   1400074a8:	call   0x14005d3ac
   1400074ad:	mov    rsi,rax
   1400074b0:	test   rax,rax
   1400074b3:	je     0x14000754a
   1400074b9:	lea    rbx,[rax+0x60]
   1400074bd:	cmp    rax,QWORD PTR [rdi]
   1400074c0:	jbe    0x1400074f6
   1400074c2:	lea    rbp,[rsi-0x60]
   1400074c6:	mov    rdx,rbp
   1400074c9:	lea    rcx,[rsp+0x30]
   1400074ce:	call   0x140006fac
   1400074d3:	test   eax,eax
   1400074d5:	jne    0x1400074f6
   1400074d7:	mov    rsi,rbp
   1400074da:	cmp    rbp,QWORD PTR [rdi]
   1400074dd:	ja     0x1400074c2
   1400074df:	jmp    0x1400074f6
   1400074e1:	mov    rdx,rbx
   1400074e4:	lea    rcx,[rsp+0x30]
   1400074e9:	call   0x140006fac
   1400074ee:	test   eax,eax
   1400074f0:	jne    0x14000750a
   1400074f2:	add    rbx,0x60
   1400074f6:	mov    rax,QWORD PTR [rdi+0x30]
   1400074fa:	lea    rcx,[rax+rax*2]
   1400074fe:	shl    rcx,0x5
   140007502:	add    rcx,QWORD PTR [rdi]
   140007505:	cmp    rbx,rcx
   140007508:	jb     0x1400074e1
   14000750a:	sub    rsi,QWORD PTR [rdi]
   14000750d:	movabs r8,0x2aaaaaaaaaaaaaab
   140007517:	mov    rax,r8
   14000751a:	imul   rsi
   14000751d:	mov    rax,r8
   140007520:	sar    rdx,0x4
   140007524:	mov    rcx,rdx
   140007527:	shr    rcx,0x3f
   14000752b:	add    rdx,rcx
   14000752e:	mov    QWORD PTR [r15],rdx
   140007531:	sub    rbx,QWORD PTR [rdi]
   140007534:	imul   rbx
   140007537:	sar    rdx,0x4
   14000753b:	mov    rax,rdx
   14000753e:	shr    rax,0x3f
   140007542:	add    rdx,rax
   140007545:	mov    al,0x1
   140007547:	mov    QWORD PTR [r14],rdx
   14000754a:	lea    r11,[rsp+0x90]
   140007552:	mov    rbx,QWORD PTR [r11+0x20]
   140007556:	mov    rbp,QWORD PTR [r11+0x28]
   14000755a:	mov    rsi,QWORD PTR [r11+0x30]
   14000755e:	mov    rsp,r11
   140007561:	pop    r15
   140007563:	pop    r14
   140007565:	pop    rdi
   140007566:	ret    
   140007567:	int3   
   140007568:	rex push rbx
   14000756a:	sub    rsp,0x20
   14000756e:	mov    BYTE PTR [rip+0x7b39c],dl        # 0x140082910
   140007574:	mov    rbx,rcx
   140007577:	mov    DWORD PTR [rip+0x7b396],r8d        # 0x140082914
   14000757e:	test   dl,dl
   140007580:	je     0x140007587
   140007582:	call   0x140007124
   140007587:	mov    rdx,QWORD PTR [rbx+0x20]
   14000758b:	lea    r9,[rip+0xfffffffffffff856]        # 0x140006de8
   140007592:	mov    rcx,QWORD PTR [rbx]
   140007595:	mov    r8d,0x60
   14000759b:	add    rsp,0x20
   14000759f:	pop    rbx
   1400075a0:	jmp    0x1400457a4
   1400075a5:	int3   
   1400075a6:	int3   
   1400075a7:	int3   
   1400075a8:	mov    QWORD PTR [rsp+0x8],rbx
   1400075ad:	mov    QWORD PTR [rsp+0x10],rsi
   1400075b2:	push   rdi
   1400075b3:	sub    rsp,0x30
   1400075b7:	xor    ebx,ebx
   1400075b9:	mov    rsi,rdx
   1400075bc:	cmp    BYTE PTR [rip+0x7b366],bl        # 0x140082928
   1400075c2:	mov    rdi,rcx
   1400075c5:	jne    0x14000761a
   1400075c7:	mov    rax,QWORD PTR [rip+0x7b352]        # 0x140082920
   1400075ce:	test   rax,rax
   1400075d1:	jne    0x140007626
   1400075d3:	call   0x14002454c
   1400075d8:	cmp    eax,0x600
   1400075dd:	jb     0x14000761a
   1400075df:	lea    rcx,[rip+0x6549a]        # 0x14006ca80
   1400075e6:	call   QWORD PTR [rip+0x64d64]        # 0x14006c350
   1400075ec:	test   rax,rax
   1400075ef:	je     0x14000760a
   1400075f1:	lea    rdx,[rip+0x654a8]        # 0x14006caa0
   1400075f8:	mov    rcx,rax
   1400075fb:	call   QWORD PTR [rip+0x64d57]        # 0x14006c358
   140007601:	mov    QWORD PTR [rip+0x7b318],rax        # 0x140082920
   140007608:	jmp    0x140007611
   14000760a:	mov    rax,QWORD PTR [rip+0x7b30f]        # 0x140082920
   140007611:	mov    BYTE PTR [rip+0x7b310],0x1        # 0x140082928
   140007618:	jmp    0x140007621
   14000761a:	mov    rax,QWORD PTR [rip+0x7b2ff]        # 0x140082920
   140007621:	test   rax,rax
   140007624:	je     0x140007647
   140007626:	or     edx,0xffffffff
   140007629:	mov    DWORD PTR [rsp+0x20],0x1
   140007631:	mov    r9d,edx
   140007634:	mov    r8,rsi
   140007637:	mov    rcx,rdi
   14000763a:	call   rax
   14000763c:	lea    ecx,[rax-0x2]
   14000763f:	neg    eax
   140007641:	sbb    eax,eax
   140007643:	and    eax,ecx
   140007645:	jmp    0x140007665
   140007647:	sub    rsi,rdi
   14000764a:	movzx  eax,WORD PTR [rdi]
   14000764d:	cmp    ax,WORD PTR [rdi+rsi*1]
   140007651:	jne    0x14000765e
   140007653:	add    rdi,0x2
   140007657:	test   ax,ax
   14000765a:	jne    0x14000764a
   14000765c:	jmp    0x140007663
   14000765e:	sbb    ebx,ebx
   140007660:	or     ebx,0x1
   140007663:	mov    eax,ebx
   140007665:	mov    rbx,QWORD PTR [rsp+0x40]
   14000766a:	mov    rsi,QWORD PTR [rsp+0x48]
   14000766f:	add    rsp,0x30
   140007673:	pop    rdi
   140007674:	ret    
   140007675:	int3   
   140007676:	int3   
   140007677:	int3   
   140007678:	mov    rax,rsp
   14000767b:	mov    QWORD PTR [rax+0x8],rcx
   14000767f:	push   rdi
   140007680:	sub    rsp,0x30
   140007684:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14000768c:	mov    QWORD PTR [rax+0x18],rbx
   140007690:	mov    QWORD PTR [rax+0x20],rsi
   140007694:	mov    rdi,rdx
   140007697:	mov    rbx,rcx
   14000769a:	call   0x14002071c
   14000769f:	nop
   1400076a0:	lea    rax,[rip+0x65a49]        # 0x14006d0f0
   1400076a7:	mov    QWORD PTR [rbx],rax
   1400076aa:	lea    rcx,[rbx+0x1030]
   1400076b1:	call   0x140017e04
   1400076b6:	nop
   1400076b7:	lea    rcx,[rbx+0x20f0]
   1400076be:	call   0x140036dcc
   1400076c3:	nop
   1400076c4:	xor    esi,esi
   1400076c6:	mov    QWORD PTR [rbx+0x22c8],rsi
   1400076cd:	lea    rcx,[rbx+0x22f0]
   1400076d4:	call   0x1400349b8
   1400076d9:	nop
   1400076da:	mov    QWORD PTR [rbx+0x4510],rsi
   1400076e1:	mov    QWORD PTR [rbx+0x4518],rsi
   1400076e8:	mov    QWORD PTR [rbx+0x4520],rsi
   1400076ef:	mov    QWORD PTR [rbx+0x4528],rsi
   1400076f6:	mov    QWORD PTR [rbx+0x4530],rsi
   1400076fd:	mov    QWORD PTR [rbx+0x4538],rsi
   140007704:	mov    QWORD PTR [rbx+0x4540],rsi
   14000770b:	mov    QWORD PTR [rbx+0x6868],rsi
   140007712:	mov    QWORD PTR [rbx+0x6870],rsi
   140007719:	mov    QWORD PTR [rbx+0x6878],rsi
   140007720:	mov    QWORD PTR [rbx+0x6880],rsi
   140007727:	mov    QWORD PTR [rbx+0x6888],rsi
   14000772e:	mov    QWORD PTR [rbx+0x6890],rsi
   140007735:	mov    QWORD PTR [rbx+0x6898],rsi
   14000773c:	mov    QWORD PTR [rbx+0x22b0],rsi
   140007743:	mov    QWORD PTR [rbx+0x22e8],rsi
   14000774a:	lea    eax,[rsi+0x4]
   14000774d:	mov    DWORD PTR [rbx+0x22e4],eax
   140007753:	mov    DWORD PTR [rbx+0x22e0],eax
   140007759:	mov    DWORD PTR [rbx+0x22dc],eax
   14000775f:	test   rdi,rdi
   140007762:	sete   al
   140007765:	mov    BYTE PTR [rbx+0x22a8],al
   14000776b:	test   al,al
   14000776d:	je     0x140007792
   14000776f:	mov    ecx,0x83d8
   140007774:	call   0x140055dac
   140007779:	mov    QWORD PTR [rsp+0x48],rax
   14000777e:	test   rax,rax
   140007781:	je     0x14000778d
   140007783:	mov    rcx,rax
   140007786:	call   0x140026668
   14000778b:	jmp    0x140007790
   14000778d:	mov    rax,rsi
   140007790:	jmp    0x140007795
   140007792:	mov    rax,rdi
   140007795:	mov    QWORD PTR [rbx+0x22b0],rax
   14000779c:	mov    al,BYTE PTR [rax+0x61b5]
   1400077a2:	mov    BYTE PTR [rbx+0x24],al
   1400077a5:	mov    QWORD PTR [rbx+0x7f88],0x2
   1400077b0:	mov    DWORD PTR [rbx+0x7f90],esi
   1400077b6:	mov    QWORD PTR [rbx+0x7f98],rsi
   1400077bd:	mov    QWORD PTR [rbx+0x22c8],rsi
   1400077c4:	mov    BYTE PTR [rbx+0x7f94],sil
   1400077cb:	mov    WORD PTR [rbx+0x7fa0],si
   1400077d2:	mov    DWORD PTR [rbx+0x22d0],esi
   1400077d8:	mov    QWORD PTR [rbx+0x7f78],rsi
   1400077df:	mov    QWORD PTR [rbx+0x7f80],rsi
   1400077e6:	or     rax,0xffffffffffffffff
   1400077ea:	mov    QWORD PTR [rbx+0x22b8],rax
   1400077f1:	mov    DWORD PTR [rbx+0x22c0],eax
   1400077f7:	lea    rcx,[rbx+0x3478]
   1400077fe:	xor    edx,edx
   140007800:	lea    r8d,[rax+0x75]
   140007804:	call   0x140058f40
   140007809:	lea    rcx,[rbx+0x5808]
   140007810:	xor    edx,edx
   140007812:	lea    r8d,[rdx+0x20]
   140007816:	call   0x140058f40
   14000781b:	mov    DWORD PTR [rbx+0x7fb4],esi
   140007821:	mov    QWORD PTR [rbx+0x7fb8],rsi
   140007828:	mov    QWORD PTR [rbx+0x7fc0],rsi
   14000782f:	mov    QWORD PTR [rbx+0x7fc8],rsi
   140007836:	lea    rcx,[rbx+0x7fa2]
   14000783d:	mov    edx,0x10
   140007842:	call   0x140019168
   140007847:	mov    WORD PTR [rbx+0x7fd2],si
   14000784e:	mov    BYTE PTR [rbx+0x7fb2],sil
   140007855:	mov    BYTE PTR [rbx+0x7fd0],sil
   14000785c:	mov    BYTE PTR [rbx+0x22d8],sil
   140007863:	mov    BYTE PTR [rbx+0x3450],sil
   14000786a:	mov    rax,rbx
   14000786d:	mov    rbx,QWORD PTR [rsp+0x50]
   140007872:	mov    rsi,QWORD PTR [rsp+0x58]
   140007877:	add    rsp,0x30
   14000787b:	pop    rdi
   14000787c:	ret    
   14000787d:	int3   
   14000787e:	int3   
   14000787f:	int3   
   140007880:	mov    QWORD PTR [rsp+0x8],rbx
   140007885:	push   rdi
   140007886:	sub    rsp,0x20
   14000788a:	cmp    BYTE PTR [rcx+0x22a8],0x0
   140007891:	lea    rax,[rip+0x65858]        # 0x14006d0f0
   140007898:	mov    QWORD PTR [rcx],rax
   14000789b:	mov    rbx,rcx
   14000789e:	je     0x1400078c1
   1400078a0:	mov    rdi,QWORD PTR [rcx+0x22b0]
   1400078a7:	test   rdi,rdi
   1400078aa:	je     0x1400078c1
   1400078ac:	mov    rcx,rdi
   1400078af:	call   0x1400266cc
   1400078b4:	mov    edx,0x83d8
   1400078b9:	mov    rcx,rdi
   1400078bc:	call   0x140055de8
   1400078c1:	mov    rcx,QWORD PTR [rbx+0x22e8]
   1400078c8:	test   rcx,rcx
   1400078cb:	je     0x1400078d7
   1400078cd:	mov    rax,QWORD PTR [rcx]
   1400078d0:	mov    edx,0x1
   1400078d5:	call   QWORD PTR [rax]
   1400078d7:	mov    rcx,QWORD PTR [rbx+0x6868]
   1400078de:	test   rcx,rcx
   1400078e1:	je     0x1400078e8
   1400078e3:	call   0x14005a938
   1400078e8:	mov    rcx,QWORD PTR [rbx+0x4510]
   1400078ef:	test   rcx,rcx
   1400078f2:	je     0x1400078f9
   1400078f4:	call   0x14005a938
   1400078f9:	lea    rcx,[rbx+0x22f0]
   140007900:	call   0x140034a14
   140007905:	lea    rcx,[rbx+0x20f0]
   14000790c:	call   0x140036e98
   140007911:	lea    rcx,[rbx+0x1030]
   140007918:	call   0x140017eec
   14000791d:	mov    rcx,rbx
   140007920:	mov    rbx,QWORD PTR [rsp+0x30]
   140007925:	add    rsp,0x20
   140007929:	pop    rdi
   14000792a:	jmp    0x140020758
   14000792f:	int3   
   140007930:	sub    rsp,0x28
   140007934:	mov    rcx,QWORD PTR [rcx+0x1020]
   14000793b:	test   rcx,rcx
   14000793e:	je     0x140007945
   140007940:	call   0x14005a938
   140007945:	add    rsp,0x28
   140007949:	ret    
   14000794a:	int3   
   14000794b:	int3   
   14000794c:	sub    rsp,0x38
   140007950:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140007959:	mov    rdx,QWORD PTR [rcx+0x8]
   14000795d:	mov    rcx,QWORD PTR [rcx]
   140007960:	mov    rax,QWORD PTR [rcx]
   140007963:	xor    r8d,r8d
   140007966:	add    rsp,0x38
   14000796a:	rex.W jmp QWORD PTR [rax+0x18]
   14000796e:	int3   
   14000796f:	int3   
   140007970:	mov    QWORD PTR [rsp+0x8],rbx
   140007975:	push   rdi
   140007976:	sub    rsp,0x20
   14000797a:	mov    ebx,edx
   14000797c:	mov    rdi,rcx
   14000797f:	call   0x140007880
   140007984:	test   bl,0x1
   140007987:	je     0x140007996
   140007989:	mov    edx,0x8fd8
   14000798e:	mov    rcx,rdi
   140007991:	call   0x140055de8
   140007996:	mov    rax,rdi
   140007999:	mov    rbx,QWORD PTR [rsp+0x30]
   14000799e:	add    rsp,0x20
   1400079a2:	pop    rdi
   1400079a3:	ret    
   1400079a4:	mov    QWORD PTR [rsp+0x8],rbx
   1400079a9:	mov    QWORD PTR [rsp+0x10],rsi
   1400079ae:	push   rdi
   1400079af:	sub    rsp,0x20
   1400079b3:	add    QWORD PTR [rcx+0x8],rdx
   1400079b7:	mov    rbx,rcx
   1400079ba:	mov    rax,QWORD PTR [rcx+0x8]
   1400079be:	cmp    rax,QWORD PTR [rcx+0x10]
   1400079c2:	jbe    0x140007a32
   1400079c4:	mov    r8,QWORD PTR [rcx+0x18]
   1400079c8:	test   r8,r8
   1400079cb:	je     0x1400079f1
   1400079cd:	cmp    rax,r8
   1400079d0:	jbe    0x1400079f1
   1400079d2:	lea    rdx,[rip+0x652e7]        # 0x14006ccc0
   1400079d9:	lea    rcx,[rip+0x8ce80]        # 0x140094860
   1400079e0:	call   0x14001bc8c
   1400079e5:	lea    rcx,[rip+0x8ce74]        # 0x140094860
   1400079ec:	call   0x14001bd24
   1400079f1:	mov    rdx,QWORD PTR [rbx+0x10]
   1400079f5:	mov    rcx,QWORD PTR [rbx]
   1400079f8:	mov    rax,rdx
   1400079fb:	shr    rax,0x2
   1400079ff:	lea    rdi,[rdx+0x20]
   140007a03:	add    rdi,rax
   140007a06:	cmp    QWORD PTR [rbx+0x8],rdi
   140007a0a:	cmova  rdi,QWORD PTR [rbx+0x8]
   140007a0f:	mov    rdx,rdi
   140007a12:	call   0x14005a940
   140007a17:	mov    rsi,rax
   140007a1a:	test   rax,rax
   140007a1d:	jne    0x140007a2b
   140007a1f:	lea    rcx,[rip+0x8ce3a]        # 0x140094860
   140007a26:	call   0x14001bd24
   140007a2b:	mov    QWORD PTR [rbx],rsi
   140007a2e:	mov    QWORD PTR [rbx+0x10],rdi
   140007a32:	mov    rbx,QWORD PTR [rsp+0x30]
   140007a37:	mov    rsi,QWORD PTR [rsp+0x38]
   140007a3c:	add    rsp,0x20
   140007a40:	pop    rdi
   140007a41:	ret    
   140007a42:	int3   
   140007a43:	int3   
   140007a44:	mov    QWORD PTR [rsp+0x8],rbx
   140007a49:	mov    QWORD PTR [rsp+0x10],rsi
   140007a4e:	push   rdi
   140007a4f:	sub    rsp,0x20
   140007a53:	add    QWORD PTR [rcx+0x8],rdx
   140007a57:	mov    rbx,rcx
   140007a5a:	mov    rax,QWORD PTR [rcx+0x8]
   140007a5e:	cmp    rax,QWORD PTR [rcx+0x10]
   140007a62:	jbe    0x140007ad3
   140007a64:	mov    r8,QWORD PTR [rcx+0x18]
   140007a68:	test   r8,r8
   140007a6b:	je     0x140007a91
   140007a6d:	cmp    rax,r8
   140007a70:	jbe    0x140007a91
   140007a72:	lea    rdx,[rip+0x651e7]        # 0x14006cc60
   140007a79:	lea    rcx,[rip+0x8cde0]        # 0x140094860
   140007a80:	call   0x14001bc8c
   140007a85:	lea    rcx,[rip+0x8cdd4]        # 0x140094860
   140007a8c:	call   0x14001bd24
   140007a91:	mov    rdx,QWORD PTR [rbx+0x10]
   140007a95:	mov    rcx,QWORD PTR [rbx]
   140007a98:	mov    rax,rdx
   140007a9b:	shr    rax,0x2
   140007a9f:	lea    rdi,[rdx+0x20]
   140007aa3:	add    rdi,rax
   140007aa6:	cmp    QWORD PTR [rbx+0x8],rdi
   140007aaa:	cmova  rdi,QWORD PTR [rbx+0x8]
   140007aaf:	lea    rdx,[rdi+rdi*1]
   140007ab3:	call   0x14005a940
   140007ab8:	mov    rsi,rax
   140007abb:	test   rax,rax
   140007abe:	jne    0x140007acc
   140007ac0:	lea    rcx,[rip+0x8cd99]        # 0x140094860
   140007ac7:	call   0x14001bd24
   140007acc:	mov    QWORD PTR [rbx],rsi
   140007acf:	mov    QWORD PTR [rbx+0x10],rdi
   140007ad3:	mov    rbx,QWORD PTR [rsp+0x30]
   140007ad8:	mov    rsi,QWORD PTR [rsp+0x38]
   140007add:	add    rsp,0x20
   140007ae1:	pop    rdi
   140007ae2:	ret    
   140007ae3:	int3   
   140007ae4:	rex push rbp
   140007ae6:	push   rdi
   140007ae7:	push   r12
   140007ae9:	push   r14
   140007aeb:	push   r15
   140007aed:	lea    rbp,[rsp-0xf90]
   140007af5:	mov    eax,0x1090
   140007afa:	call   0x140055f20
   140007aff:	sub    rsp,rax
   140007b02:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   140007b0b:	mov    QWORD PTR [rsp+0x10d0],rbx
   140007b13:	mov    QWORD PTR [rsp+0x10d8],rsi
   140007b1b:	mov    rax,QWORD PTR [rip+0x7a3be]        # 0x140081ee0
   140007b22:	xor    rax,rsp
   140007b25:	mov    QWORD PTR [rbp+0xf80],rax
   140007b2c:	mov    r12,rdx
   140007b2f:	mov    r14,rcx
   140007b32:	lea    rcx,[rsp+0x50]
   140007b37:	call   0x14002071c
   140007b3c:	nop
   140007b3d:	xor    r15b,r15b
   140007b40:	mov    rbx,QWORD PTR [r14+0x22b0]
   140007b47:	lea    rdx,[rip+0x651f2]        # 0x14006cd40
   140007b4e:	lea    rcx,[rbx+0x301e]
   140007b55:	call   0x14005d4e8
   140007b5a:	mov    edi,0x1
   140007b5f:	test   eax,eax
   140007b61:	je     0x140007ba0
   140007b63:	mov    ecx,0xd86
   140007b68:	call   0x140040118
   140007b6d:	mov    rcx,rax
   140007b70:	lea    rdx,[rbx+0x301e]
   140007b77:	call   0x14001796c
   140007b7c:	mov    rdx,QWORD PTR [r14+0x22b0]
   140007b83:	add    rdx,0x301e
   140007b8a:	lea    rcx,[rsp+0x50]
   140007b8f:	call   0x140021278
   140007b94:	test   al,al
   140007b96:	jne    0x140007bb9
   140007b98:	xor    dil,dil
   140007b9b:	jmp    0x140007cae
   140007ba0:	mov    ecx,0xd84
   140007ba5:	call   0x140040118
   140007baa:	mov    rcx,rax
   140007bad:	call   0x14001796c
   140007bb2:	mov    DWORD PTR [rsp+0x64],edi
   140007bb6:	mov    r15b,dil
   140007bb9:	mov    rax,QWORD PTR [r14+0x22b0]
   140007bc0:	mov    ecx,0x40000
   140007bc5:	mov    edx,0x80000
   140007bca:	cmp    DWORD PTR [rax+0x4020],0x3
   140007bd1:	cmove  ecx,edx
   140007bd4:	and    QWORD PTR [rsp+0x20],0x0
   140007bda:	and    QWORD PTR [rsp+0x28],0x0
   140007be0:	and    QWORD PTR [rsp+0x30],0x0
   140007be6:	and    QWORD PTR [rsp+0x38],0x0
   140007bec:	movsxd rbx,ecx
   140007bef:	mov    rdx,rbx
   140007bf2:	lea    rcx,[rsp+0x20]
   140007bf7:	call   0x140001858
   140007bfc:	nop
   140007bfd:	mov    r8,rbx
   140007c00:	mov    rbx,QWORD PTR [rsp+0x20]
   140007c05:	mov    rdx,rbx
   140007c08:	lea    rcx,[rsp+0x50]
   140007c0d:	call   0x140020ed4
   140007c12:	mov    esi,eax
   140007c14:	test   r15b,r15b
   140007c17:	je     0x140007c39
   140007c19:	cmp    eax,edi
   140007c1b:	jne    0x140007c27
   140007c1d:	cmp    BYTE PTR [rbx],0xd
   140007c20:	je     0x140007c37
   140007c22:	cmp    BYTE PTR [rbx],0xa
   140007c25:	je     0x140007c37
   140007c27:	cmp    eax,0x2
   140007c2a:	jne    0x140007c39
   140007c2c:	cmp    BYTE PTR [rbx],0xd
   140007c2f:	jne    0x140007c54
   140007c31:	cmp    BYTE PTR [rbx+0x1],0xa
   140007c35:	jne    0x140007c54
   140007c37:	xor    esi,esi
   140007c39:	test   esi,esi
   140007c3b:	jne    0x140007c54
   140007c3d:	mov    ecx,0xd88
   140007c42:	call   0x140040118
   140007c47:	mov    rcx,rax
   140007c4a:	mov    rdx,r12
   140007c4d:	call   0x14001796c
   140007c52:	jmp    0x140007ca0
   140007c54:	mov    ecx,0xd8a
   140007c59:	call   0x140040118
   140007c5e:	mov    rcx,rax
   140007c61:	mov    rdx,r12
   140007c64:	call   0x14001796c
   140007c69:	cmp    DWORD PTR [rsp+0x64],edi
   140007c6d:	je     0x140007c7f
   140007c6f:	mov    rax,QWORD PTR [r14+0x22b0]
   140007c76:	cmp    DWORD PTR [rax+0x4020],0x2
   140007c7d:	jne    0x140007c8e
   140007c7f:	mov    r8d,esi
   140007c82:	mov    rdx,rbx
   140007c85:	mov    rcx,rbx
   140007c88:	call   QWORD PTR [rip+0x6487a]        # 0x14006c508
   140007c8e:	movsxd r8,esi
   140007c91:	xor    r9d,r9d
   140007c94:	mov    rdx,rbx
   140007c97:	mov    rcx,r14
   140007c9a:	call   0x14000bad8
   140007c9f:	nop
   140007ca0:	test   rbx,rbx
   140007ca3:	je     0x140007cae
   140007ca5:	mov    rcx,rbx
   140007ca8:	call   0x14005a938
   140007cad:	nop
   140007cae:	lea    rcx,[rsp+0x50]
   140007cb3:	call   0x140020758
   140007cb8:	mov    al,dil
   140007cbb:	mov    rcx,QWORD PTR [rbp+0xf80]
   140007cc2:	xor    rcx,rsp
   140007cc5:	call   0x140055f90
   140007cca:	lea    r11,[rsp+0x1090]
   140007cd2:	mov    rbx,QWORD PTR [r11+0x40]
   140007cd6:	mov    rsi,QWORD PTR [r11+0x48]
   140007cda:	mov    rsp,r11
   140007cdd:	pop    r15
   140007cdf:	pop    r14
   140007ce1:	pop    r12
   140007ce3:	pop    rdi
   140007ce4:	pop    rbp
   140007ce5:	ret    
   140007ce6:	int3   
   140007ce7:	int3   
   140007ce8:	mov    rax,rsp
   140007ceb:	mov    QWORD PTR [rax+0x10],rdx
   140007cef:	push   rbp
   140007cf0:	push   rsi
   140007cf1:	push   rdi
   140007cf2:	push   r12
   140007cf4:	push   r13
   140007cf6:	push   r14
   140007cf8:	push   r15
   140007cfa:	mov    rbp,rsp
   140007cfd:	sub    rsp,0x80
   140007d04:	mov    QWORD PTR [rbp-0x30],0xfffffffffffffffe
   140007d0c:	mov    QWORD PTR [rax+0x18],rbx
   140007d10:	mov    r15,r9
   140007d13:	mov    r14,r8
   140007d16:	mov    rdi,rdx
   140007d19:	mov    rbx,rcx
   140007d1c:	mov    rax,QWORD PTR [rcx]
   140007d1f:	call   QWORD PTR [rax+0x20]
   140007d22:	mov    QWORD PTR [rbp+0x40],rax
   140007d26:	mov    DWORD PTR [rbx+0x584c],0x3
   140007d30:	lea    rcx,[rbx+0x5868]
   140007d37:	mov    r8d,0x800
   140007d3d:	mov    rdx,QWORD PTR [rbp+0x60]
   140007d41:	call   0x140046158
   140007d46:	test   rdi,rdi
   140007d49:	je     0x140007d50
   140007d4b:	test   r14,r14
   140007d4e:	jne    0x140007d5a
   140007d50:	test   r15,r15
   140007d53:	jne    0x140007d5a
   140007d55:	xor    sil,sil
   140007d58:	jmp    0x140007d5d
   140007d5a:	mov    sil,0x1
   140007d5d:	mov    rax,QWORD PTR [rbx+0x22b0]
   140007d64:	mov    edi,DWORD PTR [rbp+0x68]
   140007d67:	cmp    BYTE PTR [rax+0x5130],0x0
   140007d6e:	je     0x140007d9d
   140007d70:	test   r14,r14
   140007d73:	jne    0x140007d7a
   140007d75:	test   r15,r15
   140007d78:	je     0x140007d9d
   140007d7a:	test   dil,0x4
   140007d7e:	jne    0x140007d98
   140007d80:	test   dil,0x8
   140007d84:	je     0x140007d9d
   140007d86:	cmp    BYTE PTR [rax+0x5132],0x0
   140007d8d:	jne    0x140007d98
   140007d8f:	cmp    BYTE PTR [rbx+0x7f94],0x0
   140007d96:	je     0x140007d9d
   140007d98:	mov    r13b,0x1
   140007d9b:	jmp    0x140007da0
   140007d9d:	xor    r13b,r13b
   140007da0:	mov    eax,DWORD PTR [rbx+0x7f88]
   140007da6:	cmp    eax,0x3
   140007da9:	jne    0x140007db6
   140007dab:	test   dil,0x2
   140007daf:	jne    0x140007db6
   140007db1:	mov    r12b,0x1
   140007db4:	jmp    0x140007db9
   140007db6:	xor    r12b,r12b
   140007db9:	test   r13b,r13b
   140007dbc:	je     0x140007e0f
   140007dbe:	mov    BYTE PTR [rbx+0x68e3],0x1
   140007dc5:	mov    BYTE PTR [rbx+0x68e8],0x1
   140007dcc:	cmp    eax,0x3
   140007dcf:	jne    0x140007df1
   140007dd1:	lea    rcx,[rbx+0x68f9]
   140007dd8:	lea    edx,[rax+0xd]
   140007ddb:	call   0x140019168
   140007de0:	mov    DWORD PTR [rbx+0x6934],0xf
   140007dea:	mov    BYTE PTR [rbx+0x6909],0x1
   140007df1:	movups xmm0,XMMWORD PTR [rbx+0x7fa2]
   140007df8:	movdqu XMMWORD PTR [rbx+0x68e9],xmm0
   140007e00:	mov    rax,r14
   140007e03:	not    rax
   140007e06:	inc    rax
   140007e09:	and    eax,0xf
   140007e0c:	add    r14,rax
   140007e0f:	mov    eax,0x1d
   140007e14:	lea    ecx,[rax+0x15]
   140007e17:	cmp    DWORD PTR [rbx+0x7f88],0x3
   140007e1e:	cmove  eax,ecx
   140007e21:	mov    BYTE PTR [rbx+0x5861],al
   140007e27:	test   r15,r15
   140007e2a:	je     0x140007e44
   140007e2c:	mov    rcx,r15
   140007e2f:	call   0x140020b88
   140007e34:	mov    QWORD PTR [rbx+0x68a0],rax
   140007e3b:	mov    QWORD PTR [rbx+0x68a8],rax
   140007e42:	jmp    0x140007e52
   140007e44:	mov    QWORD PTR [rbx+0x68a0],r14
   140007e4b:	mov    QWORD PTR [rbx+0x68a8],r14
   140007e52:	test   r15,r15
   140007e55:	setne  dl
   140007e58:	xor    r8d,r8d
   140007e5b:	mov    rcx,QWORD PTR [rbx+0x68a8]
   140007e62:	call   0x140003fd0
   140007e67:	mov    QWORD PTR [rbx+0x68b0],rax
   140007e6e:	mov    ecx,DWORD PTR [rbx+0x7f88]
   140007e74:	mov    eax,0x10000
   140007e79:	mov    edx,0x20000
   140007e7e:	cmp    ecx,0x3
   140007e81:	cmove  eax,edx
   140007e84:	mov    QWORD PTR [rbp+0x58],rax
   140007e88:	mov    QWORD PTR [rbx+0x6940],rax
   140007e8f:	test   sil,sil
   140007e92:	je     0x140007ea0
   140007e94:	test   r12b,r12b
   140007e97:	jne    0x140007ea0
   140007e99:	mov    eax,0x3
   140007e9e:	jmp    0x140007ea2
   140007ea0:	xor    eax,eax
   140007ea2:	mov    BYTE PTR [rbx+0x5862],al
   140007ea8:	cmp    ecx,0x2
   140007eab:	jne    0x140007ebc
   140007ead:	lea    rdx,[rbx+0x6888]
   140007eb4:	mov    rcx,rbx
   140007eb7:	call   0x140020c28
   140007ebc:	and    DWORD PTR [rbx+0x694c],0x0
   140007ec3:	mov    BYTE PTR [rsp+0x20],0x0
   140007ec8:	mov    r9b,0x1
   140007ecb:	xor    r8d,r8d
   140007ece:	lea    edx,[r8+0x3]
   140007ed2:	mov    rcx,rbx
   140007ed5:	call   0x14000b340
   140007eda:	mov    rax,QWORD PTR [rbx+0x22b0]
   140007ee1:	cmp    QWORD PTR [rax+0x6170],0x0
   140007ee9:	je     0x140007f22
   140007eeb:	cmp    BYTE PTR [rbx+0x7fd0],0x0
   140007ef2:	je     0x140007f22
   140007ef4:	test   dil,0x1
   140007ef8:	je     0x140007f22
   140007efa:	mov    dil,0x1
   140007efd:	mov    eax,DWORD PTR [rbx+0x5854]
   140007f03:	add    eax,0x5
   140007f06:	cmp    QWORD PTR [rbx+0x7fb8],rax
   140007f0d:	jge    0x140007f25
   140007f0f:	xor    r9d,r9d
   140007f12:	lea    r8,[rbp+0x40]
   140007f16:	xor    edx,edx
   140007f18:	mov    rcx,rbx
   140007f1b:	call   0x1400553cc
   140007f20:	jmp    0x140007f25
   140007f22:	xor    dil,dil
   140007f25:	mov    edx,DWORD PTR [rbx+0x5854]
   140007f2b:	mov    rcx,rbx
   140007f2e:	call   0x14000a85c
   140007f33:	cmp    BYTE PTR [rbx+0x3496],0x0
   140007f3a:	je     0x140007f64
   140007f3c:	mov    rax,QWORD PTR [rbx+0x22b0]
   140007f43:	cmp    DWORD PTR [rax+0x2018],0x0
   140007f4a:	je     0x140007f64
   140007f4c:	mov    edx,DWORD PTR [rbx+0x5854]
   140007f52:	mov    rcx,rbx
   140007f55:	call   0x140008a60
   140007f5a:	add    eax,0x10
   140007f5d:	sub    QWORD PTR [rbx+0x7fb8],rax
   140007f64:	mov    BYTE PTR [rsp+0x20],sil
   140007f69:	xor    r9d,r9d
   140007f6c:	xor    r8d,r8d
   140007f6f:	lea    edx,[r9+0x3]
   140007f73:	mov    rcx,rbx
   140007f76:	call   0x14000b340
   140007f7b:	test   sil,sil
   140007f7e:	je     0x140008237
   140007f84:	lea    rsi,[rbx+0x20f0]
   140007f8b:	mov    rcx,rsi
   140007f8e:	call   0x140036fa8
   140007f93:	mov    rax,QWORD PTR [rbx+0x22b0]
   140007f9a:	mov    r8d,DWORD PTR [rax+0x83d0]
   140007fa1:	mov    edx,DWORD PTR [rbx+0x68b8]
   140007fa7:	lea    rcx,[rbx+0x2260]
   140007fae:	call   0x1400241ac
   140007fb3:	mov    rax,QWORD PTR [rbx+0x22b0]
   140007fba:	lea    rcx,[rbx+0x2240]
   140007fc1:	mov    r8d,DWORD PTR [rax+0x83d0]
   140007fc8:	mov    edx,DWORD PTR [rbx+0x68b8]
   140007fce:	call   0x1400241ac
   140007fd3:	cmp    DWORD PTR [rbx+0x7f88],0x3
   140007fda:	jne    0x140007ff6
   140007fdc:	mov    rdx,QWORD PTR [rbx+0x68a8]
   140007fe3:	mov    rcx,QWORD PTR [rbx+0x68b0]
   140007fea:	call   0x140005850
   140007fef:	mov    QWORD PTR [rbx+0x2228],rax
   140007ff6:	cmp    QWORD PTR [rbx+0x22e8],0x0
   140007ffe:	jne    0x14000809b
   140008004:	test   r12b,r12b
   140008007:	jne    0x14000809b
   14000800d:	cmp    DWORD PTR [rbx+0x7f88],0x3
   140008014:	jne    0x140008037
   140008016:	mov    ecx,0x6328
   14000801b:	call   0x140055dac
   140008020:	mov    QWORD PTR [rbp-0x28],rax
   140008024:	test   rax,rax
   140008027:	je     0x140008035
   140008029:	mov    rdx,rsi
   14000802c:	mov    rcx,rax
   14000802f:	call   0x140026794
   140008034:	nop
   140008035:	jmp    0x140008056
   140008037:	mov    ecx,0x21688
   14000803c:	call   0x140055dac
   140008041:	mov    QWORD PTR [rbp-0x28],rax
   140008045:	test   rax,rax
   140008048:	je     0x140008056
   14000804a:	mov    rdx,rsi
   14000804d:	mov    rcx,rax
   140008050:	call   0x14002aaac
   140008055:	nop
   140008056:	mov    QWORD PTR [rbx+0x22e8],rax
   14000805d:	mov    rcx,rax
   140008060:	mov    rax,QWORD PTR [rax]
   140008063:	mov    rdx,QWORD PTR [rbp+0x58]
   140008067:	call   QWORD PTR [rax+0x8]
   14000806a:	test   al,al
   14000806c:	jne    0x14000809b
   14000806e:	xor    eax,eax
   140008070:	mov    QWORD PTR [rbp-0x10],rax
   140008074:	lea    rax,[rip+0x649f5]        # 0x14006ca70
   14000807b:	mov    QWORD PTR [rbp-0x18],rax
   14000807f:	lea    rax,[rip+0x69342]        # 0x1400713c8
   140008086:	mov    QWORD PTR [rbp-0x20],rax
   14000808a:	lea    rdx,[rip+0x777b7]        # 0x14007f848
   140008091:	lea    rcx,[rbp-0x20]
   140008095:	call   0x140058734
   14000809a:	int3   
   14000809b:	test   r13b,r13b
   14000809e:	je     0x140008104
   1400080a0:	lea    rcx,[rbx+0x690a]
   1400080a7:	lea    rdx,[rbx+0x6913]
   1400080ae:	lea    r10,[rbx+0x68f9]
   1400080b5:	lea    r11,[rbx+0x68e9]
   1400080bc:	mov    r9,QWORD PTR [rbx+0x22b0]
   1400080c3:	add    r9,0x5030
   1400080ca:	mov    eax,DWORD PTR [rbx+0x7f88]
   1400080d0:	sub    eax,0x3
   1400080d3:	neg    eax
   1400080d5:	sbb    r8d,r8d
   1400080d8:	add    r8d,0x5
   1400080dc:	mov    QWORD PTR [rsp+0x40],rcx
   1400080e1:	mov    QWORD PTR [rsp+0x38],rdx
   1400080e6:	mov    eax,DWORD PTR [rbx+0x6934]
   1400080ec:	mov    DWORD PTR [rsp+0x30],eax
   1400080f0:	mov    QWORD PTR [rsp+0x28],r10
   1400080f5:	mov    QWORD PTR [rsp+0x20],r11
   1400080fa:	mov    dl,0x1
   1400080fc:	mov    rcx,rsi
   1400080ff:	call   0x14003750c
   140008104:	xor    r13d,r13d
   140008107:	mov    BYTE PTR [rbx+0x2188],r13b
   14000810e:	mov    r8,rbx
   140008111:	mov    rdx,r15
   140008114:	mov    rcx,rsi
   140008117:	call   0x140037588
   14000811c:	test   dil,dil
   14000811f:	je     0x140008141
   140008121:	mov    BYTE PTR [rbx+0x21ea],0x1
   140008128:	lea    rax,[rbx+0x5848]
   14000812f:	mov    QWORD PTR [rsi+0xb8],rax
   140008136:	lea    rax,[rbp+0x40]
   14000813a:	mov    QWORD PTR [rsi+0xc0],rax
   140008141:	test   r15,r15
   140008144:	jne    0x140008155
   140008146:	mov    r8,r14
   140008149:	mov    rdx,QWORD PTR [rbp+0x48]
   14000814d:	mov    rcx,rsi
   140008150:	call   0x1400375c0
   140008155:	test   r12b,r12b
   140008158:	je     0x1400081af
   14000815a:	mov    QWORD PTR [rbp-0x20],r13
   14000815e:	mov    QWORD PTR [rbp-0x18],r13
   140008162:	mov    QWORD PTR [rbp-0x10],r13
   140008166:	mov    QWORD PTR [rbp-0x8],r13
   14000816a:	mov    edx,0x8000
   14000816f:	lea    rcx,[rbp-0x20]
   140008173:	call   0x140001858
   140008178:	nop
   140008179:	mov    rdi,QWORD PTR [rbp-0x20]
   14000817d:	jmp    0x14000818d
   14000817f:	mov    r8d,eax
   140008182:	mov    rdx,rdi
   140008185:	mov    rcx,rsi
   140008188:	call   0x1400372b0
   14000818d:	mov    r8,QWORD PTR [rbp-0x18]
   140008191:	mov    rdx,rdi
   140008194:	mov    rcx,rsi
   140008197:	call   0x140037068
   14000819c:	test   eax,eax
   14000819e:	jne    0x14000817f
   1400081a0:	test   rdi,rdi
   1400081a3:	je     0x1400081d2
   1400081a5:	mov    rcx,rdi
   1400081a8:	call   0x14005a938
   1400081ad:	jmp    0x1400081d2
   1400081af:	mov    rcx,QWORD PTR [rbx+0x22e8]
   1400081b6:	mov    rax,QWORD PTR [rcx]
   1400081b9:	xor    r9d,r9d
   1400081bc:	xor    edx,edx
   1400081be:	lea    r8d,[r9+0x2]
   1400081c2:	call   QWORD PTR [rax+0x18]
   1400081c5:	mov    rcx,QWORD PTR [rbx+0x22e8]
   1400081cc:	mov    rax,QWORD PTR [rcx]
   1400081cf:	call   QWORD PTR [rax+0x28]
   1400081d2:	mov    rax,QWORD PTR [rbx+0x21f8]
   1400081d9:	mov    QWORD PTR [rbx+0x68a8],rax
   1400081e0:	mov    rax,QWORD PTR [rbx+0x2200]
   1400081e7:	mov    QWORD PTR [rbx+0x68a0],rax
   1400081ee:	lea    rdx,[rbx+0x68b8]
   1400081f5:	lea    rcx,[rbx+0x2260]
   1400081fc:	call   0x140024258
   140008201:	mov    rax,QWORD PTR [rbx]
   140008204:	xor    r8d,r8d
   140008207:	mov    rdx,QWORD PTR [rbp+0x40]
   14000820b:	mov    rcx,rbx
   14000820e:	call   QWORD PTR [rax+0x18]
   140008211:	mov    BYTE PTR [rsp+0x20],r13b
   140008216:	xor    r9d,r9d
   140008219:	xor    r8d,r8d
   14000821c:	lea    edx,[r9+0x3]
   140008220:	mov    rcx,rbx
   140008223:	call   0x14000b340
   140008228:	mov    rax,QWORD PTR [rbx]
   14000822b:	xor    edx,edx
   14000822d:	lea    r8d,[rdx+0x2]
   140008231:	mov    rcx,rbx
   140008234:	call   QWORD PTR [rax+0x18]
   140008237:	mov    rbx,QWORD PTR [rsp+0xd0]
   14000823f:	add    rsp,0x80
   140008246:	pop    r15
   140008248:	pop    r14
   14000824a:	pop    r13
   14000824c:	pop    r12
   14000824e:	pop    rdi
   14000824f:	pop    rsi
   140008250:	pop    rbp
   140008251:	ret    
   140008252:	int3   
   140008253:	int3   
   140008254:	mov    QWORD PTR [rsp+0x8],rbx
   140008259:	mov    QWORD PTR [rsp+0x10],rbp
   14000825e:	mov    QWORD PTR [rsp+0x18],rsi
   140008263:	push   rdi
   140008264:	sub    rsp,0x20
   140008268:	mov    rbx,QWORD PTR [rcx+0x8]
   14000826c:	mov    rbp,rdx
   14000826f:	mov    rdx,r8
   140008272:	mov    rsi,r8
   140008275:	mov    rdi,rcx
   140008278:	call   0x140001858
   14000827d:	mov    rcx,QWORD PTR [rdi]
   140008280:	mov    r8,rsi
   140008283:	add    rcx,rbx
   140008286:	mov    rdx,rbp
   140008289:	mov    rbx,QWORD PTR [rsp+0x30]
   14000828e:	mov    rbp,QWORD PTR [rsp+0x38]
   140008293:	mov    rsi,QWORD PTR [rsp+0x40]
   140008298:	add    rsp,0x20
   14000829c:	pop    rdi
   14000829d:	jmp    0x140059180
   1400082a2:	int3   
   1400082a3:	int3   
   1400082a4:	rex push rbx
   1400082a6:	sub    rsp,0x20
   1400082aa:	lea    rbx,[rcx+0x26]
   1400082ae:	mov    rcx,rbx
   1400082b1:	call   0x140021e60
   1400082b6:	cmp    eax,0xffffffff
   1400082b9:	je     0x1400082db
   1400082bb:	test   al,0x1
   1400082bd:	je     0x1400082db
   1400082bf:	mov    rdx,rbx
   1400082c2:	mov    ecx,0x49
   1400082c7:	call   0x1400013b0
   1400082cc:	mov    ecx,0x1779
   1400082d1:	call   QWORD PTR [rip+0x63fe9]        # 0x14006c2c0
   1400082d7:	xor    al,al
   1400082d9:	jmp    0x1400082dd
   1400082db:	mov    al,0x1
   1400082dd:	add    rsp,0x20
   1400082e1:	pop    rbx
   1400082e2:	ret    
   1400082e3:	int3   
   1400082e4:	rex push rbx
   1400082e6:	sub    rsp,0x20
   1400082ea:	mov    rbx,rcx
   1400082ed:	call   0x140008f4c
   1400082f2:	test   al,al
   1400082f4:	jne    0x14000831d
   1400082f6:	cmp    BYTE PTR [rbx+0x7fa1],al
   1400082fc:	jne    0x14000830c
   1400082fe:	lea    rdx,[rbx+0x26]
   140008302:	mov    ecx,0x38
   140008307:	call   0x1400013b0
   14000830c:	mov    edx,0x2
   140008311:	lea    rcx,[rip+0x8c548]        # 0x140094860
   140008318:	call   0x14001bc60
   14000831d:	add    rsp,0x20
   140008321:	pop    rbx
   140008322:	ret    
   140008323:	int3   
   140008324:	sub    rsp,0x28
   140008328:	cmp    BYTE PTR [rcx+0x7fa0],0x0
   14000832f:	jne    0x14000833e
   140008331:	cmp    BYTE PTR [rcx+0x7fa1],0x0
   140008338:	jne    0x14000833e
   14000833a:	xor    al,al
   14000833c:	jmp    0x140008350
   14000833e:	lea    rdx,[rcx+0x26]
   140008342:	lea    rcx,[rip+0x8c517]        # 0x140094860
   140008349:	call   0x14001bb1c
   14000834e:	mov    al,0x1
   140008350:	add    rsp,0x28
   140008354:	ret    
   140008355:	int3   
   140008356:	int3   
   140008357:	int3   
   140008358:	rex push rbx
   14000835a:	sub    rsp,0x20
   14000835e:	mov    rbx,rcx
   140008361:	call   0x14002117c
   140008366:	xor    edx,edx
   140008368:	mov    rcx,rbx
   14000836b:	add    rsp,0x20
   14000836f:	pop    rbx
   140008370:	jmp    0x1400082e4
   140008375:	int3   
   140008376:	int3   
   140008377:	int3   
   140008378:	mov    QWORD PTR [rsp+0x8],rbx
   14000837d:	push   rdi
   14000837e:	sub    rsp,0x20
   140008382:	mov    rdi,rcx
   140008385:	mov    bl,dl
   140008387:	add    rcx,0x22f0
   14000838e:	call   0x140035428
   140008393:	mov    rax,QWORD PTR [rdi+0x22b0]
   14000839a:	mov    rcx,rdi
   14000839d:	mov    edx,DWORD PTR [rax+0x6148]
   1400083a3:	call   0x140033f88
   1400083a8:	mov    dl,bl
   1400083aa:	mov    rcx,rdi
   1400083ad:	call   0x14000bdbc
   1400083b2:	mov    rax,QWORD PTR [rdi+0x22b0]
   1400083b9:	xor    ebx,ebx
   1400083bb:	cmp    DWORD PTR [rax+0x61a0],0x2
   1400083c2:	jne    0x1400083de
   1400083c4:	lea    rdx,[rdi+0x22c8]
   1400083cb:	cmp    QWORD PTR [rdx],rbx
   1400083ce:	je     0x1400083de
   1400083d0:	xor    r9d,r9d
   1400083d3:	xor    r8d,r8d
   1400083d6:	mov    rcx,rdi
   1400083d9:	call   0x140021078
   1400083de:	mov    rcx,rdi
   1400083e1:	call   0x1400207cc
   1400083e6:	mov    rax,QWORD PTR [rdi+0x22b0]
   1400083ed:	cmp    DWORD PTR [rax+0x61a0],0x2
   1400083f4:	jne    0x14000840d
   1400083f6:	lea    rdx,[rdi+0x22c8]
   1400083fd:	cmp    QWORD PTR [rdx],rbx
   140008400:	je     0x14000840d
   140008402:	xor    r8d,r8d
   140008405:	mov    rcx,rdi
   140008408:	call   0x1400570f4
   14000840d:	cmp    QWORD PTR [rdi+0x7f98],rbx
   140008414:	jbe    0x14000841f
   140008416:	lea    rcx,[rdi+0x26]
   14000841a:	call   0x1400570f4
   14000841f:	cmp    BYTE PTR [rdi+0x7f8f],bl
   140008425:	je     0x140008439
   140008427:	mov    ecx,0xd24
   14000842c:	call   0x140040118
   140008431:	mov    rcx,rax
   140008434:	call   0x14001796c
   140008439:	mov    rcx,rdi
   14000843c:	mov    rbx,QWORD PTR [rsp+0x30]
   140008441:	add    rsp,0x20
   140008445:	pop    rdi
   140008446:	jmp    0x14000a8d8
   14000844b:	int3   
   14000844c:	mov    QWORD PTR [rsp+0x8],rbx
   140008451:	push   rdi
   140008452:	sub    rsp,0x30
   140008456:	mov    rdi,rdx
   140008459:	mov    rbx,rcx
   14000845c:	jmp    0x140008486
   14000845e:	xor    r9d,r9d
   140008461:	mov    BYTE PTR [rsp+0x20],0x0
   140008466:	xor    r8d,r8d
   140008469:	mov    rcx,rbx
   14000846c:	lea    edx,[r9+0x2]
   140008470:	call   0x14000b340
   140008475:	mov    rdx,rdi
   140008478:	mov    rcx,rbx
   14000847b:	call   0x1400084a8
   140008480:	mov    rdx,rdi
   140008483:	mov    rcx,rbx
   140008486:	and    QWORD PTR [rsp+0x20],0x0
   14000848c:	xor    r9d,r9d
   14000848f:	mov    r8b,0x1
   140008492:	call   0x1400096dc
   140008497:	test   al,al
   140008499:	jne    0x14000845e
   14000849b:	mov    rbx,QWORD PTR [rsp+0x40]
   1400084a0:	add    rsp,0x30
   1400084a4:	pop    rdi
   1400084a5:	ret    
   1400084a6:	int3   
   1400084a7:	int3   
   1400084a8:	mov    QWORD PTR [rsp+0x8],rbx
   1400084ad:	push   rdi
   1400084ae:	sub    rsp,0x20
   1400084b2:	mov    rax,QWORD PTR [rdx]
   1400084b5:	mov    rdi,rdx
   1400084b8:	mov    rdx,QWORD PTR [rdx+0x7f80]
   1400084bf:	mov    rbx,rcx
   1400084c2:	xor    r8d,r8d
   1400084c5:	mov    rcx,rdi
   1400084c8:	sub    rdx,QWORD PTR [rdi+0x4548]
   1400084cf:	call   QWORD PTR [rax+0x18]
   1400084d2:	mov    r8,QWORD PTR [rdi+0x4548]
   1400084d9:	mov    rdx,rbx
   1400084dc:	mov    rcx,rdi
   1400084df:	mov    rbx,QWORD PTR [rsp+0x30]
   1400084e4:	add    rsp,0x20
   1400084e8:	pop    rdi
   1400084e9:	jmp    0x140020834
   1400084ee:	int3   
   1400084ef:	int3   
   1400084f0:	rex push rbx
   1400084f2:	push   rbp
   1400084f3:	push   rsi
   1400084f4:	push   rdi
   1400084f5:	push   r14
   1400084f7:	mov    eax,0x1080
   1400084fc:	call   0x140055f20
   140008501:	sub    rsp,rax
   140008504:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14000850d:	mov    rax,QWORD PTR [rip+0x799cc]        # 0x140081ee0
   140008514:	xor    rax,rsp
   140008517:	mov    QWORD PTR [rsp+0x1070],rax
   14000851f:	mov    rbx,r9
   140008522:	mov    r14,rdx
   140008525:	mov    rdi,rcx
   140008528:	cmp    QWORD PTR [rdx+0x8],0xffffffffffffffff
   14000852d:	je     0x14000853b
   14000852f:	mov    eax,DWORD PTR [rdx+0x7f88]
   140008535:	mov    DWORD PTR [rcx+0x7f88],eax
   14000853b:	xor    esi,esi
   14000853d:	test   r8b,r8b
   140008540:	je     0x1400085e7
   140008546:	cmp    QWORD PTR [rcx+0x7f98],rsi
   14000854d:	jne    0x1400085e7
   140008553:	mov    rax,QWORD PTR [rcx+0x22b0]
   14000855a:	cmp    WORD PTR [rax+0x1018],si
   140008561:	je     0x1400085b0
   140008563:	lea    rcx,[rsp+0x40]
   140008568:	call   0x14002071c
   14000856d:	nop
   14000856e:	mov    rdx,QWORD PTR [rdi+0x22b0]
   140008575:	add    rdx,0x1018
   14000857c:	lea    rcx,[rsp+0x40]
   140008581:	call   0x14002117c
   140008586:	movabs r8,0x7fffffff7fffffff
   140008590:	mov    rdx,rdi
   140008593:	lea    rcx,[rsp+0x40]
   140008598:	call   0x140020834
   14000859d:	mov    QWORD PTR [rdi+0x7f98],rax
   1400085a4:	lea    rcx,[rsp+0x40]
   1400085a9:	call   0x140020758
   1400085ae:	jmp    0x1400085e7
   1400085b0:	cmp    QWORD PTR [rdx+0x7f98],rsi
   1400085b7:	jbe    0x1400085e7
   1400085b9:	mov    rax,QWORD PTR [rdx]
   1400085bc:	xor    r8d,r8d
   1400085bf:	xor    edx,edx
   1400085c1:	mov    rcx,r14
   1400085c4:	call   QWORD PTR [rax+0x18]
   1400085c7:	mov    r8,QWORD PTR [r14+0x7f98]
   1400085ce:	mov    rdx,rdi
   1400085d1:	mov    rcx,r14
   1400085d4:	call   0x140020834
   1400085d9:	mov    rax,QWORD PTR [r14+0x7f98]
   1400085e0:	mov    QWORD PTR [rdi+0x7f98],rax
   1400085e7:	cmp    BYTE PTR [r14+0x7f94],sil
   1400085ee:	je     0x140008607
   1400085f0:	mov    BYTE PTR [rdi+0x7f94],0x1
   1400085f7:	movups xmm0,XMMWORD PTR [r14+0x34d4]
   1400085ff:	movdqu XMMWORD PTR [rdi+0x7fa2],xmm0
   140008607:	mov    al,BYTE PTR [r14+0x7f8d]
   14000860e:	mov    BYTE PTR [rdi+0x7f8d],al
   140008614:	mov    al,BYTE PTR [r14+0x7f91]
   14000861b:	mov    BYTE PTR [rdi+0x7f91],al
   140008621:	mov    eax,DWORD PTR [r14+0x7fb4]
   140008628:	mov    DWORD PTR [rdi+0x7fb4],eax
   14000862e:	mov    al,BYTE PTR [r14+0x7f92]
   140008635:	mov    BYTE PTR [rdi+0x7f92],al
   14000863b:	cmp    BYTE PTR [rdi+0x7f8c],sil
   140008642:	jne    0x14000864f
   140008644:	cmp    BYTE PTR [r14+0x7f8c],sil
   14000864b:	mov    eax,esi
   14000864d:	je     0x140008654
   14000864f:	mov    eax,0x1
   140008654:	mov    BYTE PTR [rdi+0x7f8c],al
   14000865a:	mov    BYTE PTR [rdi+0x7f90],sil
   140008661:	mov    BYTE PTR [rdi+0x7f93],sil
   140008668:	mov    rax,QWORD PTR [rdi+0x22b0]
   14000866f:	cmp    WORD PTR [rax+0x301e],si
   140008676:	setne  bpl
   14000867a:	cmp    BYTE PTR [rax+0x62f8],sil
   140008681:	je     0x14000868a
   140008683:	mov    BYTE PTR [rdi+0x7f8f],0x1
   14000868a:	cmp    DWORD PTR [rdi+0x7f88],0x3
   140008691:	jne    0x1400086aa
   140008693:	cmp    DWORD PTR [rax+0x2018],esi
   140008699:	jne    0x1400086a3
   14000869b:	cmp    DWORD PTR [rax+0x6148],esi
   1400086a1:	je     0x1400086aa
   1400086a3:	mov    eax,0x1
   1400086a8:	jmp    0x1400086ac
   1400086aa:	mov    eax,esi
   1400086ac:	mov    BYTE PTR [rdi+0x3496],al
   1400086b2:	mov    QWORD PTR [rdi+0x3498],rsi
   1400086b9:	mov    QWORD PTR [rdi+0x34a8],rsi
   1400086c0:	test   al,al
   1400086c2:	je     0x140008738
   1400086c4:	cmp    QWORD PTR [r14+0x8],0xffffffffffffffff
   1400086c9:	je     0x1400086d8
   1400086cb:	mov    rcx,r14
   1400086ce:	call   0x140020b88
   1400086d3:	mov    rcx,rax
   1400086d6:	jmp    0x1400086db
   1400086d8:	mov    rcx,rsi
   1400086db:	mov    rax,QWORD PTR [rdi+0x7fc8]
   1400086e2:	add    rax,QWORD PTR [rdi+0x7fc0]
   1400086e9:	add    rcx,rax
   1400086ec:	movabs r8,0x1fffffff7fffffff
   1400086f6:	cmp    rcx,0x10000000
   1400086fd:	jae    0x140008707
   1400086ff:	lea    r8,[rcx+0x1]
   140008703:	shl    r8,0xc
   140008707:	mov    rdx,QWORD PTR [rdi+0x22b0]
   14000870e:	mov    eax,DWORD PTR [rdx+0x2018]
   140008714:	neg    eax
   140008716:	sbb    rcx,rcx
   140008719:	and    rcx,r8
   14000871c:	mov    QWORD PTR [rdi+0x34a0],rcx
   140008723:	mov    eax,DWORD PTR [rdx+0x6148]
   140008729:	neg    eax
   14000872b:	sbb    rcx,rcx
   14000872e:	and    rcx,r8
   140008731:	mov    QWORD PTR [rdi+0x34b0],rcx
   140008738:	mov    rax,QWORD PTR [rdi]
   14000873b:	xor    r8d,r8d
   14000873e:	mov    rdx,QWORD PTR [rdi+0x7f98]
   140008745:	mov    rcx,rdi
   140008748:	call   QWORD PTR [rax+0x18]
   14000874b:	mov    BYTE PTR [rsp+0x20],sil
   140008750:	xor    r9d,r9d
   140008753:	xor    r8d,r8d
   140008756:	xor    edx,edx
   140008758:	mov    rcx,rdi
   14000875b:	call   0x14000b340
   140008760:	cmp    BYTE PTR [rdi+0x7f94],sil
   140008767:	je     0x140008789
   140008769:	cmp    DWORD PTR [rdi+0x7f88],0x3
   140008770:	jne    0x140008789
   140008772:	mov    BYTE PTR [rsp+0x20],sil
   140008777:	xor    r9d,r9d
   14000877a:	xor    r8d,r8d
   14000877d:	lea    edx,[r9+0x4]
   140008781:	mov    rcx,rdi
   140008784:	call   0x14000b340
   140008789:	mov    BYTE PTR [rsp+0x20],sil
   14000878e:	xor    r9d,r9d
   140008791:	xor    r8d,r8d
   140008794:	lea    edx,[r9+0x1]
   140008798:	mov    rcx,rdi
   14000879b:	call   0x14000b340
   1400087a0:	test   rbx,rbx
   1400087a3:	jne    0x1400087b6
   1400087a5:	lea    rax,[r14+0x26]
   1400087a9:	lea    rbx,[rdi+0x26]
   1400087ad:	cmp    QWORD PTR [r14+0x8],0xffffffffffffffff
   1400087b2:	cmovne rbx,rax
   1400087b6:	test   bpl,bpl
   1400087b9:	je     0x1400087cd
   1400087bb:	mov    rdx,rbx
   1400087be:	mov    rcx,rdi
   1400087c1:	call   0x140007ae4
   1400087c6:	test   al,al
   1400087c8:	je     0x1400087cd
   1400087ca:	mov    sil,0x1
   1400087cd:	cmp    QWORD PTR [r14+0x8],0xffffffffffffffff
   1400087d2:	je     0x140008824
   1400087d4:	mov    rbx,QWORD PTR [r14]
   1400087d7:	mov    rcx,r14
   1400087da:	call   0x14000c0cc
   1400087df:	mov    rdx,rax
   1400087e2:	xor    r8d,r8d
   1400087e5:	mov    rcx,r14
   1400087e8:	call   QWORD PTR [rbx+0x18]
   1400087eb:	lea    rcx,[rip+0x64546]        # 0x14006cd38
   1400087f2:	neg    sil
   1400087f5:	sbb    rax,rax
   1400087f8:	and    rax,rcx
   1400087fb:	mov    QWORD PTR [rsp+0x20],rax
   140008800:	xor    r9d,r9d
   140008803:	mov    r8b,0x1
   140008806:	mov    rdx,r14
   140008809:	mov    rcx,rdi
   14000880c:	call   0x1400096dc
   140008811:	mov    rax,QWORD PTR [r14]
   140008814:	xor    r8d,r8d
   140008817:	mov    rdx,QWORD PTR [r14+0x7f78]
   14000881e:	mov    rcx,r14
   140008821:	call   QWORD PTR [rax+0x18]
   140008824:	mov    rcx,QWORD PTR [rsp+0x1070]
   14000882c:	xor    rcx,rsp
   14000882f:	call   0x140055f90
   140008834:	add    rsp,0x1080
   14000883b:	pop    r14
   14000883d:	pop    rdi
   14000883e:	pop    rsi
   14000883f:	pop    rbp
   140008840:	pop    rbx
   140008841:	ret    
   140008842:	int3   
   140008843:	int3   
   140008844:	rex push rbp
   140008846:	push   rdi
   140008847:	push   r14
   140008849:	lea    rbp,[rsp-0x4200]
   140008851:	mov    eax,0x4300
   140008856:	call   0x140055f20
   14000885b:	sub    rsp,rax
   14000885e:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140008867:	mov    QWORD PTR [rsp+0x4330],rbx
   14000886f:	mov    rax,QWORD PTR [rip+0x7966a]        # 0x140081ee0
   140008876:	xor    rax,rsp
   140008879:	mov    QWORD PTR [rbp+0x41f0],rax
   140008880:	mov    rdi,rdx
   140008883:	mov    rbx,rcx
   140008886:	mov    rdx,rcx
   140008889:	lea    rcx,[rsp+0x20]
   14000888e:	call   0x14001c178
   140008893:	nop
   140008894:	lea    rdx,[rsp+0x40]
   140008899:	lea    rcx,[rsp+0x20]
   14000889e:	call   0x14001d4d4
   1400088a3:	test   al,al
   1400088a5:	je     0x140008a1b
   1400088ab:	mov    r14d,0x800
   1400088b1:	cmp    WORD PTR [rbx],0x0
   1400088b5:	je     0x1400088e7
   1400088b7:	cmp    WORD PTR [rbx+0x2],0x0
   1400088bc:	jne    0x1400088e7
   1400088be:	mov    eax,DWORD PTR [rip+0x6431c]        # 0x14006cbe0
   1400088c4:	mov    DWORD PTR [rbp+0x21f0],eax
   1400088ca:	movzx  eax,WORD PTR [rip+0x64313]        # 0x14006cbe4
   1400088d1:	mov    WORD PTR [rbp+0x21f4],ax
   1400088d8:	mov    r8d,0x7fe
   1400088de:	lea    rcx,[rbp+0x21f4]
   1400088e5:	jmp    0x1400088f1
   1400088e7:	mov    r8,r14
   1400088ea:	lea    rcx,[rbp+0x21f0]
   1400088f1:	mov    rdx,rbx
   1400088f4:	call   0x140046158
   1400088f9:	mov    r8,r14
   1400088fc:	lea    rdx,[rsp+0x6c]
   140008901:	lea    rcx,[rbp+0x21f0]
   140008908:	call   0x140046120
   14000890d:	lea    rcx,[rbp+0x11c0]
   140008914:	call   0x14002071c
   140008919:	nop
   14000891a:	mov    r8d,0x4
   140008920:	lea    rdx,[rbp+0x21f0]
   140008927:	lea    rcx,[rbp+0x11c0]
   14000892e:	call   0x140020c80
   140008933:	test   al,al
   140008935:	je     0x1400089f8
   14000893b:	cmp    WORD PTR [rdi],0x0
   14000893f:	je     0x140008971
   140008941:	cmp    WORD PTR [rdi+0x2],0x0
   140008946:	jne    0x140008971
   140008948:	mov    eax,DWORD PTR [rip+0x6429a]        # 0x14006cbe8
   14000894e:	mov    DWORD PTR [rbp+0x31f0],eax
   140008954:	movzx  eax,WORD PTR [rip+0x64291]        # 0x14006cbec
   14000895b:	mov    WORD PTR [rbp+0x31f4],ax
   140008962:	mov    r8d,0x7fe
   140008968:	lea    rcx,[rbp+0x31f4]
   14000896f:	jmp    0x14000897b
   140008971:	mov    r8,r14
   140008974:	lea    rcx,[rbp+0x31f0]
   14000897b:	mov    rdx,rdi
   14000897e:	call   0x140046158
   140008983:	mov    r8,r14
   140008986:	lea    rdx,[rsp+0x6c]
   14000898b:	lea    rcx,[rbp+0x31f0]
   140008992:	call   0x140046120
   140008997:	lea    rcx,[rbp+0x190]
   14000899e:	call   0x14002071c
   1400089a3:	nop
   1400089a4:	mov    r8d,0x12
   1400089aa:	lea    rdx,[rbp+0x31f0]
   1400089b1:	lea    rcx,[rbp+0x190]
   1400089b8:	call   0x140020964
   1400089bd:	test   al,al
   1400089bf:	je     0x1400089eb
   1400089c1:	movabs r8,0x7fffffff7fffffff
   1400089cb:	lea    rdx,[rbp+0x190]
   1400089d2:	lea    rcx,[rbp+0x11c0]
   1400089d9:	call   0x140020834
   1400089de:	lea    rcx,[rbp+0x190]
   1400089e5:	call   0x1400207cc
   1400089ea:	nop
   1400089eb:	lea    rcx,[rbp+0x190]
   1400089f2:	call   0x140020758
   1400089f7:	nop
   1400089f8:	lea    rcx,[rbp+0x11c0]
   1400089ff:	call   0x140020758
   140008a04:	lea    rdx,[rsp+0x40]
   140008a09:	lea    rcx,[rsp+0x20]
   140008a0e:	call   0x14001d4d4
   140008a13:	test   al,al
   140008a15:	jne    0x1400088b1
   140008a1b:	lea    rcx,[rsp+0x20]
   140008a20:	call   0x14001c2c4
   140008a25:	mov    rcx,QWORD PTR [rbp+0x41f0]
   140008a2c:	xor    rcx,rsp
   140008a2f:	call   0x140055f90
   140008a34:	mov    rbx,QWORD PTR [rsp+0x4330]
   140008a3c:	add    rsp,0x4300
   140008a43:	pop    r14
   140008a45:	pop    rdi
   140008a46:	pop    rbp
   140008a47:	ret    
   140008a48:	or     rax,0xffffffffffffffff
   140008a4c:	inc    rax
   140008a4f:	cmp    WORD PTR [rdx+rax*2],0x0
   140008a54:	jne    0x140008a4c
   140008a56:	lea    rax,[rax+rax*2]
   140008a5a:	add    rax,0x20
   140008a5e:	ret    
   140008a5f:	int3   
   140008a60:	cmp    BYTE PTR [rcx+0x7f94],0x0
   140008a67:	je     0x140008a8b
   140008a69:	mov    rax,rdx
   140008a6c:	not    rax
   140008a6f:	inc    rax
   140008a72:	and    eax,0xf
   140008a75:	add    rdx,rax
   140008a78:	cmp    DWORD PTR [rcx+0x7f88],0x3
   140008a7f:	jne    0x140008a87
   140008a81:	add    rdx,0x10
   140008a85:	jmp    0x140008a8b
   140008a87:	add    rdx,0x8
   140008a8b:	mov    eax,edx
   140008a8d:	ret    
   140008a8e:	int3   
   140008a8f:	int3   
   140008a90:	rex push rbp
   140008a92:	push   rsi
   140008a93:	push   rdi
   140008a94:	push   r12
   140008a96:	push   r13
   140008a98:	push   r14
   140008a9a:	push   r15
   140008a9c:	lea    rbp,[rsp-0xeab0]
   140008aa4:	mov    eax,0xebb0
   140008aa9:	call   0x140055f20
   140008aae:	sub    rsp,rax
   140008ab1:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   140008aba:	mov    QWORD PTR [rsp+0xec00],rbx
   140008ac2:	mov    rax,QWORD PTR [rip+0x79417]        # 0x140081ee0
   140008ac9:	xor    rax,rsp
   140008acc:	mov    QWORD PTR [rbp+0xeaa0],rax
   140008ad3:	mov    r14,rdx
   140008ad6:	mov    rdi,rcx
   140008ad9:	xor    esi,esi
   140008adb:	cmp    BYTE PTR [rcx+0x7f8e],sil
   140008ae2:	jne    0x140008aeb
   140008ae4:	xor    al,al
   140008ae6:	jmp    0x140008f20
   140008aeb:	mov    QWORD PTR [rsp+0x50],rcx
   140008af0:	mov    rax,QWORD PTR [rcx]
   140008af3:	call   QWORD PTR [rax+0x20]
   140008af6:	mov    QWORD PTR [rsp+0x58],rax
   140008afb:	mov    r15d,0x1
   140008b01:	mov    rcx,rdi
   140008b04:	cmp    DWORD PTR [rdi+0x7f88],r15d
   140008b0b:	jne    0x140008b44
   140008b0d:	mov    rax,QWORD PTR [rdi]
   140008b10:	mov    rdx,QWORD PTR [rdi+0x7f98]
   140008b17:	add    rdx,0x7
   140008b1b:	xor    r8d,r8d
   140008b1e:	call   QWORD PTR [rax+0x18]
   140008b21:	mov    rcx,rdi
   140008b24:	call   0x140020c04
   140008b29:	movzx  ebx,al
   140008b2c:	mov    rcx,rdi
   140008b2f:	call   0x140020c04
   140008b34:	movzx  edx,al
   140008b37:	mov    ecx,0x100
   140008b3c:	imul   edx,ecx
   140008b3f:	add    bx,dx
   140008b42:	jmp    0x140008b94
   140008b44:	cmp    BYTE PTR [rdi+0x3494],sil
   140008b4b:	je     0x140008ecd
   140008b51:	mov    rax,QWORD PTR [rdi]
   140008b54:	mov    rdx,QWORD PTR [rdi+0x7f98]
   140008b5b:	add    rdx,0x14
   140008b5f:	xor    r8d,r8d
   140008b62:	call   QWORD PTR [rax+0x18]
   140008b65:	mov    rcx,rdi
   140008b68:	call   0x14000e334
   140008b6d:	cmp    BYTE PTR [rdi+0x7fa0],sil
   140008b74:	je     0x140008b89
   140008b76:	lea    rdx,[rdi+0x26]
   140008b7a:	mov    ecx,0x39
   140008b7f:	call   0x1400013b0
   140008b84:	jmp    0x140008f0a
   140008b89:	movzx  ebx,WORD PTR [rdi+0x7b6c]
   140008b90:	sub    bx,0xd
   140008b94:	mov    eax,DWORD PTR [rdi+0x7f88]
   140008b9a:	cmp    eax,r15d
   140008b9d:	jne    0x140008bb1
   140008b9f:	cmp    BYTE PTR [rdi+0x3495],sil
   140008ba6:	jne    0x140008bbe
   140008ba8:	cmp    eax,r15d
   140008bab:	je     0x140008db6
   140008bb1:	cmp    BYTE PTR [rdi+0x7b77],0x30
   140008bb8:	je     0x140008db6
   140008bbe:	cmp    eax,r15d
   140008bc1:	je     0x140008be0
   140008bc3:	mov    al,BYTE PTR [rdi+0x7b76]
   140008bc9:	sub    al,0xf
   140008bcb:	cmp    al,0xe
   140008bcd:	ja     0x140008f0a
   140008bd3:	cmp    BYTE PTR [rdi+0x7b77],0x35
   140008bda:	ja     0x140008f0a
   140008be0:	lea    rcx,[rsp+0x70]
   140008be5:	call   0x140036dcc
   140008bea:	nop
   140008beb:	mov    BYTE PTR [rbp+0x9],r15b
   140008bef:	cmp    DWORD PTR [rdi+0x7f88],r15d
   140008bf6:	jne    0x140008c30
   140008bf8:	mov    rcx,rdi
   140008bfb:	call   0x140020c04
   140008c00:	movzx  r12d,al
   140008c04:	mov    rcx,rdi
   140008c07:	call   0x140020c04
   140008c0c:	movzx  eax,al
   140008c0f:	shl    eax,0x8
   140008c12:	add    r12d,eax
   140008c15:	mov    eax,0xfffe
   140008c1a:	add    bx,ax
   140008c1d:	lea    rcx,[rsp+0x70]
   140008c22:	call   0x1400374f8
   140008c27:	mov    BYTE PTR [rdi+0x7b76],0xf
   140008c2e:	jmp    0x140008c38
   140008c30:	movzx  r12d,WORD PTR [rdi+0x7b74]
   140008c38:	xor    r8d,r8d
   140008c3b:	mov    rdx,rdi
   140008c3e:	lea    rcx,[rsp+0x70]
   140008c43:	call   0x140037588
   140008c48:	mov    BYTE PTR [rbp+0x8],sil
   140008c4c:	movzx  eax,bx
   140008c4f:	mov    QWORD PTR [rbp+0x0],rax
   140008c53:	mov    r8d,r15d
   140008c56:	mov    edx,0x2
   140008c5b:	lea    rcx,[rbp+0x100]
   140008c62:	call   0x1400241ac
   140008c67:	lea    rdx,[rsp+0x70]
   140008c6c:	lea    rcx,[rbp+0x130]
   140008c73:	call   0x140049044
   140008c78:	nop
   140008c79:	xor    r8d,r8d
   140008c7c:	mov    edx,0x10000
   140008c81:	lea    rcx,[rbp+0x130]
   140008c88:	call   0x14004b824
   140008c8d:	mov    eax,r12d
   140008c90:	mov    QWORD PTR [rbp+0x4ed0],rax
   140008c97:	mov    BYTE PTR [rbp+0x4ee8],sil
   140008c9e:	movzx  edx,BYTE PTR [rdi+0x7b76]
   140008ca5:	xor    r8d,r8d
   140008ca8:	lea    rcx,[rbp+0x130]
   140008caf:	call   0x14004ab9c
   140008cb4:	cmp    DWORD PTR [rdi+0x7f88],r15d
   140008cbb:	je     0x140008d02
   140008cbd:	lea    rcx,[rbp+0x100]
   140008cc4:	call   0x14002419c
   140008cc9:	movzx  ecx,ax
   140008ccc:	movzx  eax,WORD PTR [rdi+0x7b78]
   140008cd3:	cmp    ecx,eax
   140008cd5:	je     0x140008d02
   140008cd7:	lea    rdx,[rdi+0x26]
   140008cdb:	mov    ecx,0x39
   140008ce0:	call   0x1400013b0
   140008ce5:	nop
   140008ce6:	lea    rcx,[rbp+0x130]
   140008ced:	call   0x1400491fc
   140008cf2:	nop
   140008cf3:	lea    rcx,[rsp+0x70]
   140008cf8:	call   0x140036e98
   140008cfd:	jmp    0x140008f0a
   140008d02:	lea    r8,[rsp+0x20]
   140008d07:	lea    rdx,[rsp+0x28]
   140008d0c:	lea    rcx,[rsp+0x70]
   140008d11:	call   0x140036f90
   140008d16:	mov    r8d,DWORD PTR [rsp+0x20]
   140008d1b:	mov    rcx,QWORD PTR [rsp+0x28]
   140008d20:	mov    rdx,rcx
   140008d23:	call   QWORD PTR [rip+0x637df]        # 0x14006c508
   140008d29:	mov    rax,QWORD PTR [rsp+0x20]
   140008d2e:	inc    rax
   140008d31:	cmp    rax,QWORD PTR [r14+0x10]
   140008d35:	jbe    0x140008d48
   140008d37:	sub    rax,QWORD PTR [r14+0x8]
   140008d3b:	mov    rdx,rax
   140008d3e:	mov    rcx,r14
   140008d41:	call   0x140007a44
   140008d46:	jmp    0x140008d4c
   140008d48:	mov    QWORD PTR [r14+0x8],rax
   140008d4c:	mov    r8,QWORD PTR [r14+0x8]
   140008d50:	add    r8,r8
   140008d53:	xor    edx,edx
   140008d55:	mov    rcx,QWORD PTR [r14]
   140008d58:	call   0x140058f40
   140008d5d:	mov    r8,QWORD PTR [rsp+0x20]
   140008d62:	mov    rdx,QWORD PTR [r14]
   140008d65:	mov    rcx,QWORD PTR [rsp+0x28]
   140008d6a:	call   0x1400489f0
   140008d6f:	mov    rcx,QWORD PTR [r14]
   140008d72:	or     rax,0xffffffffffffffff
   140008d76:	inc    rax
   140008d79:	cmp    WORD PTR [rcx+rax*2],si
   140008d7d:	jne    0x140008d76
   140008d7f:	cmp    rax,QWORD PTR [r14+0x10]
   140008d83:	jbe    0x140008d96
   140008d85:	sub    rax,QWORD PTR [r14+0x8]
   140008d89:	mov    rdx,rax
   140008d8c:	mov    rcx,r14
   140008d8f:	call   0x140007a44
   140008d94:	jmp    0x140008d9a
   140008d96:	mov    QWORD PTR [r14+0x8],rax
   140008d9a:	lea    rcx,[rbp+0x130]
   140008da1:	call   0x1400491fc
   140008da6:	nop
   140008da7:	lea    rcx,[rsp+0x70]
   140008dac:	call   0x140036e98
   140008db1:	jmp    0x140008ec3
   140008db6:	mov    QWORD PTR [rsp+0x30],rsi
   140008dbb:	mov    QWORD PTR [rsp+0x38],rsi
   140008dc0:	mov    QWORD PTR [rsp+0x40],rsi
   140008dc5:	mov    QWORD PTR [rsp+0x48],rsi
   140008dca:	movzx  r13d,bx
   140008dce:	mov    edx,r13d
   140008dd1:	lea    rcx,[rsp+0x30]
   140008dd6:	call   0x140001858
   140008ddb:	nop
   140008ddc:	mov    rax,QWORD PTR [rdi]
   140008ddf:	mov    r8d,r13d
   140008de2:	mov    r12,QWORD PTR [rsp+0x30]
   140008de7:	mov    rdx,r12
   140008dea:	mov    rcx,rdi
   140008ded:	call   QWORD PTR [rax+0x10]
   140008df0:	cmp    DWORD PTR [rdi+0x7f88],r15d
   140008df7:	je     0x140008e3c
   140008df9:	mov    r8d,r13d
   140008dfc:	mov    rdx,r12
   140008dff:	or     ecx,0xffffffff
   140008e02:	call   0x140017ac0
   140008e07:	not    eax
   140008e09:	movzx  ecx,ax
   140008e0c:	movzx  eax,WORD PTR [rdi+0x7b78]
   140008e13:	cmp    eax,ecx
   140008e15:	je     0x140008e3c
   140008e17:	lea    rdx,[rdi+0x26]
   140008e1b:	mov    ecx,0x39
   140008e20:	call   0x1400013b0
   140008e25:	nop
   140008e26:	test   r12,r12
   140008e29:	je     0x140008f0a
   140008e2f:	mov    rcx,r12
   140008e32:	call   0x14005a938
   140008e37:	jmp    0x140008f0a
   140008e3c:	movzx  eax,bx
   140008e3f:	add    eax,r15d
   140008e42:	movsxd rcx,eax
   140008e45:	cmp    rcx,QWORD PTR [r14+0x10]
   140008e49:	jbe    0x140008e5c
   140008e4b:	sub    rcx,QWORD PTR [r14+0x8]
   140008e4f:	mov    rdx,rcx
   140008e52:	mov    rcx,r14
   140008e55:	call   0x140007a44
   140008e5a:	jmp    0x140008e60
   140008e5c:	mov    QWORD PTR [r14+0x8],rcx
   140008e60:	xor    edx,edx
   140008e62:	lea    rcx,[rsp+0x30]
   140008e67:	call   0x1400098b4
   140008e6c:	mov    rbx,QWORD PTR [rsp+0x30]
   140008e71:	mov    rdx,rbx
   140008e74:	mov    rcx,rbx
   140008e77:	call   QWORD PTR [rip+0x6369b]        # 0x14006c518
   140008e7d:	mov    r8,r13
   140008e80:	mov    rdx,QWORD PTR [r14]
   140008e83:	mov    rcx,rbx
   140008e86:	call   0x1400489f0
   140008e8b:	mov    rcx,QWORD PTR [r14]
   140008e8e:	or     rax,0xffffffffffffffff
   140008e92:	inc    rax
   140008e95:	cmp    WORD PTR [rcx+rax*2],si
   140008e99:	jne    0x140008e92
   140008e9b:	cmp    rax,QWORD PTR [r14+0x10]
   140008e9f:	jbe    0x140008eb2
   140008ea1:	sub    rax,QWORD PTR [r14+0x8]
   140008ea5:	mov    rdx,rax
   140008ea8:	mov    rcx,r14
   140008eab:	call   0x140007a44
   140008eb0:	jmp    0x140008eb6
   140008eb2:	mov    QWORD PTR [r14+0x8],rax
   140008eb6:	test   rbx,rbx
   140008eb9:	je     0x140008ec3
   140008ebb:	mov    rcx,rbx
   140008ebe:	call   0x14005a938
   140008ec3:	cmp    QWORD PTR [r14+0x8],rsi
   140008ec7:	seta   sil
   140008ecb:	jmp    0x140008f0a
   140008ecd:	mov    rbx,QWORD PTR [rdi]
   140008ed0:	call   0x14000c0cc
   140008ed5:	mov    rdx,rax
   140008ed8:	xor    r8d,r8d
   140008edb:	mov    rcx,rdi
   140008ede:	call   QWORD PTR [rbx+0x18]
   140008ee1:	lea    rdx,[rip+0x63d10]        # 0x14006cbf8
   140008ee8:	mov    rcx,rdi
   140008eeb:	call   0x14000e8b8
   140008ef0:	test   rax,rax
   140008ef3:	je     0x140008f04
   140008ef5:	mov    rdx,r14
   140008ef8:	mov    rcx,rdi
   140008efb:	call   0x14000993c
   140008f00:	test   al,al
   140008f02:	jne    0x140008f07
   140008f04:	mov    r15b,sil
   140008f07:	mov    sil,r15b
   140008f0a:	mov    r9,QWORD PTR [rdi]
   140008f0d:	xor    r8d,r8d
   140008f10:	mov    rdx,QWORD PTR [rsp+0x58]
   140008f15:	mov    rcx,rdi
   140008f18:	call   QWORD PTR [r9+0x18]
   140008f1c:	nop
   140008f1d:	mov    al,sil
   140008f20:	mov    rcx,QWORD PTR [rbp+0xeaa0]
   140008f27:	xor    rcx,rsp
   140008f2a:	call   0x140055f90
   140008f2f:	mov    rbx,QWORD PTR [rsp+0xec00]
   140008f37:	add    rsp,0xebb0
   140008f3e:	pop    r15
   140008f40:	pop    r14
   140008f42:	pop    r13
   140008f44:	pop    r12
   140008f46:	pop    rdi
   140008f47:	pop    rsi
   140008f48:	pop    rbp
   140008f49:	ret    
   140008f4a:	int3   
   140008f4b:	int3   
   140008f4c:	mov    BYTE PTR [rsp+0x10],dl
   140008f50:	push   rbx
   140008f51:	push   rbp
   140008f52:	push   rdi
   140008f53:	push   r12
   140008f55:	push   r13
   140008f57:	push   r14
   140008f59:	push   r15
   140008f5b:	sub    rsp,0x50
   140008f5f:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140008f68:	mov    r14b,dl
   140008f6b:	mov    rdi,rcx
   140008f6e:	xor    r13d,r13d
   140008f71:	mov    BYTE PTR [rcx+0x7f94],r13b
   140008f78:	mov    BYTE PTR [rcx+0x7fa0],r13b
   140008f7f:	call   0x140020c58
   140008f84:	test   al,al
   140008f86:	je     0x140008f9f
   140008f88:	lea    rdx,[rdi+0x26]
   140008f8c:	mov    r8,rdx
   140008f8f:	lea    ecx,[r13+0x3a]
   140008f93:	call   0x140001358
   140008f98:	xor    al,al
   140008f9a:	jmp    0x14000934d
   140008f9f:	lea    rbp,[rdi+0x3468]
   140008fa6:	mov    rax,QWORD PTR [rdi]
   140008fa9:	mov    r8d,0x7
   140008faf:	mov    rdx,rbp
   140008fb2:	mov    rcx,rdi
   140008fb5:	call   QWORD PTR [rax+0x10]
   140008fb8:	cmp    eax,0x7
   140008fbb:	jne    0x140008f98
   140008fbd:	mov    QWORD PTR [rdi+0x7f98],r13
   140008fc4:	mov    edx,eax
   140008fc6:	mov    rcx,rbp
   140008fc9:	call   0x140009360
   140008fce:	test   eax,eax
   140008fd0:	je     0x140008ffc
   140008fd2:	mov    DWORD PTR [rdi+0x7f88],eax
   140008fd8:	cmp    eax,0x1
   140008fdb:	jne    0x140009158
   140008fe1:	mov    rbx,QWORD PTR [rdi]
   140008fe4:	mov    rcx,rdi
   140008fe7:	call   QWORD PTR [rbx+0x20]
   140008fea:	lea    rdx,[rax-0x7]
   140008fee:	xor    r8d,r8d
   140008ff1:	mov    rcx,rdi
   140008ff4:	call   QWORD PTR [rbx+0x18]
   140008ff7:	jmp    0x140009158
   140008ffc:	mov    QWORD PTR [rsp+0x28],r13
   140009001:	mov    QWORD PTR [rsp+0x30],r13
   140009006:	mov    QWORD PTR [rsp+0x38],r13
   14000900b:	mov    QWORD PTR [rsp+0x40],r13
   140009010:	mov    edx,0x200000
   140009015:	lea    rcx,[rsp+0x28]
   14000901a:	call   0x1400079a4
   14000901f:	nop
   140009020:	mov    rax,QWORD PTR [rdi]
   140009023:	mov    rcx,rdi
   140009026:	call   QWORD PTR [rax+0x20]
   140009029:	mov    QWORD PTR [rsp+0xa0],rax
   140009031:	mov    r9,QWORD PTR [rdi]
   140009034:	mov    r8,QWORD PTR [rsp+0x30]
   140009039:	add    r8,0xfffffffffffffff0
   14000903d:	mov    rbx,QWORD PTR [rsp+0x28]
   140009042:	mov    rdx,rbx
   140009045:	mov    rcx,rdi
   140009048:	call   QWORD PTR [r9+0x10]
   14000904c:	movsxd r12,eax
   14000904f:	mov    r14d,r13d
   140009052:	mov    r15,r13
   140009055:	mov    QWORD PTR [rsp+0x90],r12
   14000905d:	test   eax,eax
   14000905f:	jle    0x140009121
   140009065:	movsxd r13,DWORD PTR [rsp+0xa0]
   14000906d:	mov    rax,r12
   140009070:	cmp    BYTE PTR [r15+rbx*1],0x52
   140009075:	jne    0x1400090d0
   140009077:	movsxd rdx,r12d
   14000907a:	movsxd rcx,r14d
   14000907d:	add    rcx,rbx
   140009080:	call   0x140009360
   140009085:	test   eax,eax
   140009087:	je     0x1400090c8
   140009089:	mov    DWORD PTR [rdi+0x7f88],eax
   14000908f:	cmp    eax,0x1
   140009092:	jne    0x1400090e0
   140009094:	test   r14d,r14d
   140009097:	jle    0x1400090e0
   140009099:	cmp    r13,0x1c
   14000909d:	jge    0x1400090e0
   14000909f:	cmp    QWORD PTR [rsp+0x90],0x1f
   1400090a8:	jle    0x1400090e0
   1400090aa:	mov    rax,rbx
   1400090ad:	sub    rax,r13
   1400090b0:	cmp    BYTE PTR [rax+0x1c],0x52
   1400090b4:	jne    0x1400090c8
   1400090b6:	cmp    BYTE PTR [rax+0x1d],0x53
   1400090ba:	jne    0x1400090c8
   1400090bc:	cmp    BYTE PTR [rax+0x1e],0x46
   1400090c0:	jne    0x1400090c8
   1400090c2:	cmp    BYTE PTR [rax+0x1f],0x58
   1400090c6:	je     0x1400090e0
   1400090c8:	mov    rax,QWORD PTR [rsp+0x90]
   1400090d0:	inc    r14d
   1400090d3:	dec    r12d
   1400090d6:	inc    r15
   1400090d9:	cmp    r15,rax
   1400090dc:	jge    0x140009121
   1400090de:	jmp    0x140009070
   1400090e0:	mov    rax,QWORD PTR [rsp+0xa0]
   1400090e8:	add    eax,r14d
   1400090eb:	movsxd rdx,eax
   1400090ee:	mov    QWORD PTR [rdi+0x7f98],rdx
   1400090f5:	mov    rax,QWORD PTR [rdi]
   1400090f8:	xor    r8d,r8d
   1400090fb:	mov    rcx,rdi
   1400090fe:	call   QWORD PTR [rax+0x18]
   140009101:	mov    eax,DWORD PTR [rdi+0x7f88]
   140009107:	sub    eax,0x2
   14000910a:	cmp    eax,0x1
   14000910d:	ja     0x140009121
   14000910f:	mov    rax,QWORD PTR [rdi]
   140009112:	mov    r8d,0x7
   140009118:	mov    rdx,rbp
   14000911b:	mov    rcx,rdi
   14000911e:	call   QWORD PTR [rax+0x10]
   140009121:	xor    r13d,r13d
   140009124:	cmp    QWORD PTR [rdi+0x7f98],r13
   14000912b:	jne    0x140009143
   14000912d:	test   rbx,rbx
   140009130:	je     0x140008f98
   140009136:	mov    rcx,rbx
   140009139:	call   0x14005a938
   14000913e:	jmp    0x140008f98
   140009143:	test   rbx,rbx
   140009146:	je     0x140009150
   140009148:	mov    rcx,rbx
   14000914b:	call   0x14005a938
   140009150:	mov    r14b,BYTE PTR [rsp+0x98]
   140009158:	mov    eax,DWORD PTR [rdi+0x7f88]
   14000915e:	cmp    eax,0x4
   140009161:	jne    0x140009174
   140009163:	lea    rdx,[rdi+0x26]
   140009167:	lea    ecx,[rax+0x37]
   14000916a:	call   0x1400013b0
   14000916f:	jmp    0x140008f98
   140009174:	cmp    eax,0x3
   140009177:	jne    0x1400091a7
   140009179:	lea    rbx,[rdi+0x346f]
   140009180:	mov    rax,QWORD PTR [rdi]
   140009183:	mov    r8d,0x1
   140009189:	mov    rdx,rbx
   14000918c:	mov    rcx,rdi
   14000918f:	call   QWORD PTR [rax+0x10]
   140009192:	cmp    BYTE PTR [rbx],r13b
   140009195:	jne    0x140008f98
   14000919b:	mov    DWORD PTR [rdi+0x3470],0x8
   1400091a5:	jmp    0x1400091df
   1400091a7:	mov    DWORD PTR [rdi+0x3470],0x7
   1400091b1:	jmp    0x1400091df
   1400091b3:	mov    eax,DWORD PTR [rdi+0x22d4]
   1400091b9:	cmp    eax,0x1
   1400091bc:	je     0x1400091ec
   1400091be:	cmp    BYTE PTR [rdi+0x22d8],r13b
   1400091c5:	je     0x1400091cc
   1400091c7:	cmp    eax,0x4
   1400091ca:	je     0x1400091ec
   1400091cc:	mov    rax,QWORD PTR [rdi]
   1400091cf:	xor    r8d,r8d
   1400091d2:	mov    rdx,QWORD PTR [rdi+0x7f80]
   1400091d9:	mov    rcx,rdi
   1400091dc:	call   QWORD PTR [rax+0x18]
   1400091df:	mov    rcx,rdi
   1400091e2:	call   0x14000e334
   1400091e7:	test   rax,rax
   1400091ea:	jne    0x1400091b3
   1400091ec:	cmp    BYTE PTR [rdi+0x7fa1],r13b
   1400091f3:	je     0x1400091fe
   1400091f5:	test   r14b,r14b
   1400091f8:	je     0x140008f98
   1400091fe:	mov    rax,QWORD PTR [rdi]
   140009201:	xor    r8d,r8d
   140009204:	mov    rdx,QWORD PTR [rdi+0x7f80]
   14000920b:	mov    rcx,rdi
   14000920e:	call   QWORD PTR [rax+0x18]
   140009211:	cmp    BYTE PTR [rdi+0x7fa0],r13b
   140009218:	je     0x140009231
   14000921a:	lea    rdx,[rdi+0x26]
   14000921e:	mov    ecx,0x19
   140009223:	call   0x1400013b0
   140009228:	test   r14b,r14b
   14000922b:	je     0x140008f98
   140009231:	mov    al,BYTE PTR [rdi+0x3494]
   140009237:	mov    BYTE PTR [rdi+0x7f8e],al
   14000923d:	cmp    BYTE PTR [rdi+0x22d8],r13b
   140009244:	je     0x140009253
   140009246:	cmp    BYTE PTR [rdi+0x7f94],r13b
   14000924d:	jne    0x14000931e
   140009253:	mov    QWORD PTR [rsp+0x28],rdi
   140009258:	mov    rax,QWORD PTR [rdi]
   14000925b:	mov    rcx,rdi
   14000925e:	call   QWORD PTR [rax+0x20]
   140009261:	mov    rbx,rax
   140009264:	mov    QWORD PTR [rsp+0x30],rax
   140009269:	mov    rbp,QWORD PTR [rdi+0x7f78]
   140009270:	mov    r14,QWORD PTR [rdi+0x7f80]
   140009277:	mov    r15d,DWORD PTR [rdi+0x22d4]
   14000927e:	jmp    0x1400092ca
   140009280:	mov    eax,DWORD PTR [rdi+0x22d4]
   140009286:	cmp    eax,0x3
   140009289:	jne    0x1400092ad
   14000928b:	cmp    BYTE PTR [rdi+0x7f8d],r13b
   140009292:	je     0x1400092a2
   140009294:	cmp    BYTE PTR [rdi+0x68e0],r13b
   14000929b:	mov    eax,0x1
   1400092a0:	je     0x1400092a5
   1400092a2:	mov    eax,r13d
   1400092a5:	mov    BYTE PTR [rdi+0x7f91],al
   1400092ab:	jmp    0x1400092b7
   1400092ad:	cmp    eax,0x2
   1400092b0:	je     0x1400092d9
   1400092b2:	cmp    eax,0x5
   1400092b5:	je     0x1400092f9
   1400092b7:	mov    rax,QWORD PTR [rdi]
   1400092ba:	xor    r8d,r8d
   1400092bd:	mov    rdx,QWORD PTR [rdi+0x7f80]
   1400092c4:	mov    rcx,rdi
   1400092c7:	call   QWORD PTR [rax+0x18]
   1400092ca:	mov    rcx,rdi
   1400092cd:	call   0x14000e334
   1400092d2:	test   rax,rax
   1400092d5:	jne    0x140009280
   1400092d7:	jmp    0x1400092f9
   1400092d9:	cmp    BYTE PTR [rdi+0x7f8d],r13b
   1400092e0:	je     0x1400092f0
   1400092e2:	cmp    BYTE PTR [rdi+0x4588],r13b
   1400092e9:	mov    eax,0x1
   1400092ee:	je     0x1400092f3
   1400092f0:	mov    eax,r13d
   1400092f3:	mov    BYTE PTR [rdi+0x7f91],al
   1400092f9:	mov    QWORD PTR [rdi+0x7f78],rbp
   140009300:	mov    QWORD PTR [rdi+0x7f80],r14
   140009307:	mov    DWORD PTR [rdi+0x22d4],r15d
   14000930e:	mov    rax,QWORD PTR [rdi]
   140009311:	xor    r8d,r8d
   140009314:	mov    rdx,rbx
   140009317:	mov    rcx,rdi
   14000931a:	call   QWORD PTR [rax+0x18]
   14000931d:	nop
   14000931e:	cmp    BYTE PTR [rdi+0x7f8d],r13b
   140009325:	je     0x140009330
   140009327:	cmp    BYTE PTR [rdi+0x7f91],r13b
   14000932e:	je     0x14000934b
   140009330:	lea    rdx,[rdi+0x26]
   140009334:	sub    rdi,rdx
   140009337:	movzx  ecx,WORD PTR [rdx]
   14000933a:	mov    WORD PTR [rdi+rdx*1+0x7fd2],cx
   140009342:	lea    rdx,[rdx+0x2]
   140009346:	test   cx,cx
   140009349:	jne    0x140009337
   14000934b:	mov    al,0x1
   14000934d:	add    rsp,0x50
   140009351:	pop    r15
   140009353:	pop    r14
   140009355:	pop    r13
   140009357:	pop    r12
   140009359:	pop    rdi
   14000935a:	pop    rbp
   14000935b:	pop    rbx
   14000935c:	ret    
   14000935d:	int3   
   14000935e:	int3   
   14000935f:	int3   
   140009360:	xor    r8d,r8d
   140009363:	cmp    rdx,0x1
   140009367:	jb     0x1400093e3
   140009369:	cmp    BYTE PTR [rcx],0x52
   14000936c:	jne    0x1400093e3
   14000936e:	lea    r9d,[r8+0x4]
   140009372:	cmp    rdx,r9
   140009375:	jb     0x14000938f
   140009377:	cmp    BYTE PTR [rcx+0x1],0x45
   14000937b:	jne    0x14000938f
   14000937d:	cmp    BYTE PTR [rcx+0x2],0x7e
   140009381:	jne    0x14000938f
   140009383:	cmp    BYTE PTR [rcx+0x3],0x5e
   140009387:	jne    0x14000938f
   140009389:	lea    r8d,[r9-0x3]
   14000938d:	jmp    0x1400093e3
   14000938f:	cmp    rdx,0x7
   140009393:	jb     0x1400093e3
   140009395:	cmp    BYTE PTR [rcx+0x1],0x61
   140009399:	jne    0x1400093e3
   14000939b:	cmp    BYTE PTR [rcx+0x2],0x72
   14000939f:	jne    0x1400093e3
   1400093a1:	cmp    BYTE PTR [rcx+0x3],0x21
   1400093a5:	jne    0x1400093e3
   1400093a7:	cmp    BYTE PTR [rcx+0x4],0x1a
   1400093ab:	jne    0x1400093e3
   1400093ad:	cmp    BYTE PTR [rcx+0x5],0x7
   1400093b1:	jne    0x1400093e3
   1400093b3:	cmp    BYTE PTR [rcx+0x6],r8b
   1400093b7:	jne    0x1400093c1
   1400093b9:	mov    r8d,0x2
   1400093bf:	jmp    0x1400093e3
   1400093c1:	cmp    BYTE PTR [rcx+0x6],0x1
   1400093c5:	jne    0x1400093cf
   1400093c7:	mov    r8d,0x3
   1400093cd:	jmp    0x1400093e3
   1400093cf:	mov    eax,r8d
   1400093d2:	mov    r8d,0x2
   1400093d8:	cmp    BYTE PTR [rcx+0x6],r8b
   1400093dc:	cmove  eax,r9d
   1400093e0:	mov    r8d,eax
   1400093e3:	mov    eax,r8d
   1400093e6:	ret    
   1400093e7:	int3   
   1400093e8:	mov    QWORD PTR [rsp+0x8],rbx
   1400093ed:	mov    QWORD PTR [rsp+0x10],rsi
   1400093f2:	push   rdi
   1400093f3:	sub    rsp,0x20
   1400093f7:	mov    rdx,QWORD PTR [rcx+0x22b0]
   1400093fe:	lea    rbx,[rcx+0x26]
   140009402:	mov    rdi,rcx
   140009405:	mov    esi,0x800
   14000940a:	add    rdx,0x18
   14000940e:	mov    r8d,esi
   140009411:	mov    rcx,rbx
   140009414:	call   0x140046158
   140009419:	mov    r8d,esi
   14000941c:	lea    rdx,[rip+0x63905]        # 0x14006cd28
   140009423:	mov    rcx,rbx
   140009426:	call   0x140046120
   14000942b:	mov    edx,esi
   14000942d:	mov    rcx,rbx
   140009430:	call   0x1400222c4
   140009435:	mov    r8d,0x1
   14000943b:	mov    rdx,rbx
   14000943e:	mov    rcx,rdi
   140009441:	mov    rbx,QWORD PTR [rsp+0x30]
   140009446:	mov    rsi,QWORD PTR [rsp+0x38]
   14000944b:	add    rsp,0x20
   14000944f:	pop    rdi
   140009450:	jmp    0x140021158
   140009455:	int3   
   140009456:	int3   
   140009457:	int3   
   140009458:	mov    QWORD PTR [rsp+0x8],rbx
   14000945d:	push   rdi
   14000945e:	sub    rsp,0x20
   140009462:	cmp    DWORD PTR [rcx+0x7f88],0x1
   140009469:	mov    ebx,edx
   14000946b:	jne    0x14000947f
   14000946d:	lea    rdx,[rcx+0x26]
   140009471:	mov    ecx,0x2b
   140009476:	call   0x1400013b0
   14000947b:	mov    al,0x1
   14000947d:	jmp    0x1400094eb
   14000947f:	cmp    BYTE PTR [rcx+0x7f8f],0x0
   140009486:	je     0x1400094ae
   140009488:	test   dl,0x1
   14000948b:	jne    0x1400094ae
   14000948d:	lea    rdx,[rcx+0x26]
   140009491:	mov    ecx,0x2c
   140009496:	call   0x1400013b0
   14000949b:	mov    edx,0x4
   1400094a0:	lea    rcx,[rip+0x8b3b9]        # 0x140094860
   1400094a7:	call   0x14001bf08
   1400094ac:	jmp    0x14000947b
   1400094ae:	cmp    BYTE PTR [rcx+0x7f8d],0x0
   1400094b5:	je     0x1400094e9
   1400094b7:	test   dl,0x2
   1400094ba:	jne    0x1400094e9
   1400094bc:	and    ebx,0x4
   1400094bf:	je     0x1400094ca
   1400094c1:	cmp    BYTE PTR [rcx+0x7f91],0x0
   1400094c8:	jne    0x1400094e9
   1400094ca:	lea    rdi,[rcx+0x26]
   1400094ce:	mov    ecx,0x2d
   1400094d3:	mov    rdx,rdi
   1400094d6:	call   0x1400013b0
   1400094db:	test   ebx,ebx
   1400094dd:	je     0x14000947b
   1400094df:	mov    rdx,rdi
   1400094e2:	mov    ecx,0x2f
   1400094e7:	jmp    0x140009476
   1400094e9:	xor    al,al
   1400094eb:	mov    rbx,QWORD PTR [rsp+0x30]
   1400094f0:	add    rsp,0x20
   1400094f4:	pop    rdi
   1400094f5:	ret    
   1400094f6:	int3   
   1400094f7:	int3   
   1400094f8:	mov    BYTE PTR [rcx+0x33e0],0x0
   1400094ff:	jmp    0x140020c80
   140009504:	mov    rax,rsp
   140009507:	push   rbp
   140009508:	push   r12
   14000950a:	push   r13
   14000950c:	push   r14
   14000950e:	push   r15
   140009510:	lea    rbp,[rax-0x4f]
   140009514:	sub    rsp,0xe0
   14000951b:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140009524:	mov    QWORD PTR [rax+0x8],rbx
   140009528:	mov    QWORD PTR [rax+0x10],rsi
   14000952c:	mov    QWORD PTR [rax+0x18],rdi
   140009530:	mov    rax,QWORD PTR [rip+0x789a9]        # 0x140081ee0
   140009537:	xor    rax,rsp
   14000953a:	mov    QWORD PTR [rbp+0x17],rax
   14000953e:	mov    r15,QWORD PTR [rbp+0x7f]
   140009542:	mov    QWORD PTR [rsp+0x20],r15
   140009547:	lea    rax,[rdx+0x1040]
   14000954e:	mov    QWORD PTR [rbp-0x29],rax
   140009552:	lea    rax,[rdx+0x1048]
   140009559:	mov    QWORD PTR [rbp-0x19],rax
   14000955d:	lea    rax,[rdx+0x1050]
   140009564:	mov    QWORD PTR [rbp-0x9],rax
   140009568:	xor    ebx,ebx
   14000956a:	mov    QWORD PTR [rbp+0x7],rbx
   14000956e:	mov    DWORD PTR [rbp-0x21],r8d
   140009572:	mov    DWORD PTR [rbp-0x11],r9d
   140009576:	mov    eax,DWORD PTR [rbp+0x77]
   140009579:	mov    DWORD PTR [rbp-0x1],eax
   14000957c:	mov    DWORD PTR [rbp+0xf],ebx
   14000957f:	movzx  r14d,bx
   140009583:	lea    rcx,[rsp+0x30]
   140009588:	call   0x140036890
   14000958d:	nop
   14000958e:	xor    edx,edx
   140009590:	lea    rcx,[rsp+0x30]
   140009595:	call   0x1400369a8
   14000959a:	mov    edi,ebx
   14000959c:	lea    r13d,[rbx+0xc]
   1400095a0:	mov    r15d,r13d
   1400095a3:	mov    rax,rdi
   1400095a6:	add    rax,rax
   1400095a9:	mov    r12,QWORD PTR [rbp+rax*8-0x29]
   1400095ae:	mov    esi,DWORD PTR [rbp+rax*8-0x21]
   1400095b2:	test   esi,esi
   1400095b4:	je     0x14000965a
   1400095ba:	cmp    QWORD PTR [r12],rbx
   1400095be:	je     0x14000965a
   1400095c4:	lea    rdx,[rbp-0x59]
   1400095c8:	mov    rcx,r12
   1400095cb:	call   0x1400472e8
   1400095d0:	mov    ecx,DWORD PTR [rbp-0x41]
   1400095d3:	test   rdi,rdi
   1400095d6:	jne    0x1400095e7
   1400095d8:	test   BYTE PTR [rbp-0x45],0x1
   1400095dc:	jne    0x1400095eb
   1400095de:	cmp    esi,0x1
   1400095e1:	je     0x14000965a
   1400095e3:	test   ecx,ecx
   1400095e5:	je     0x14000965a
   1400095e7:	test   BYTE PTR [rbp-0x45],0x1
   1400095eb:	mov    ebx,0x8
   1400095f0:	cmovne ebx,r15d
   1400095f4:	test   rdi,rdi
   1400095f7:	je     0x140009610
   1400095f9:	mov    rcx,r12
   1400095fc:	call   0x1400472a4
   140009601:	mov    edx,eax
   140009603:	lea    rcx,[rsp+0x30]
   140009608:	call   0x1400369f8
   14000960d:	mov    ecx,DWORD PTR [rbp-0x41]
   140009610:	test   ecx,ecx
   140009612:	je     0x14000964e
   140009614:	cmp    esi,0x2
   140009617:	jl     0x14000964e
   140009619:	mov    eax,0x4
   14000961e:	sub    eax,esi
   140009620:	shl    eax,0x3
   140009623:	movsxd r12,eax
   140009626:	lea    eax,[rsi-0x1]
   140009629:	mov    esi,eax
   14000962b:	add    ebx,eax
   14000962d:	mov    edx,ecx
   14000962f:	mov    rcx,r12
   140009632:	shr    rdx,cl
   140009635:	lea    rcx,[rsp+0x30]
   14000963a:	call   0x140036970
   14000963f:	add    r12,0x8
   140009643:	sub    rsi,0x1
   140009647:	je     0x14000964e
   140009649:	mov    ecx,DWORD PTR [rbp-0x41]
   14000964c:	jmp    0x14000962d
   14000964e:	mov    ecx,r13d
   140009651:	shl    bx,cl
   140009654:	or     r14w,bx
   140009658:	xor    ebx,ebx
   14000965a:	sub    r13d,0x4
   14000965e:	inc    rdi
   140009661:	cmp    rdi,0x4
   140009665:	jl     0x1400095a3
   14000966b:	mov    r15,QWORD PTR [rsp+0x20]
   140009670:	mov    rdx,r15
   140009673:	lea    rcx,[rsp+0x30]
   140009678:	call   0x1400368c8
   14000967d:	mov    rax,QWORD PTR [r15]
   140009680:	mov    BYTE PTR [rax],r14b
   140009683:	movzx  edx,r14w
   140009687:	shr    dx,0x8
   14000968b:	mov    rax,QWORD PTR [r15]
   14000968e:	mov    BYTE PTR [rax+0x1],dl
   140009691:	test   r14w,r14w
   140009695:	jne    0x1400096a0
   140009697:	mov    rcx,r15
   14000969a:	call   0x140009a60
   14000969f:	nop
   1400096a0:	mov    rcx,QWORD PTR [rsp+0x30]
   1400096a5:	test   rcx,rcx
   1400096a8:	je     0x1400096af
   1400096aa:	call   0x14005a938
   1400096af:	mov    rcx,QWORD PTR [rbp+0x17]
   1400096b3:	xor    rcx,rsp
   1400096b6:	call   0x140055f90
   1400096bb:	lea    r11,[rsp+0xe0]
   1400096c3:	mov    rbx,QWORD PTR [r11+0x30]
   1400096c7:	mov    rsi,QWORD PTR [r11+0x38]
   1400096cb:	mov    rdi,QWORD PTR [r11+0x40]
   1400096cf:	mov    rsp,r11
   1400096d2:	pop    r15
   1400096d4:	pop    r14
   1400096d6:	pop    r13
   1400096d8:	pop    r12
   1400096da:	pop    rbp
   1400096db:	ret    
   1400096dc:	mov    rax,rsp
   1400096df:	mov    QWORD PTR [rax+0x8],rbx
   1400096e3:	mov    QWORD PTR [rax+0x10],rbp
   1400096e7:	mov    QWORD PTR [rax+0x18],rsi
   1400096eb:	mov    QWORD PTR [rax+0x20],rdi
   1400096ef:	push   r14
   1400096f1:	sub    rsp,0x30
   1400096f5:	mov    r14,r9
   1400096f8:	mov    sil,r8b
   1400096fb:	mov    rbx,rdx
   1400096fe:	mov    rbp,rcx
   140009701:	jmp    0x14000979e
   140009706:	mov    edi,DWORD PTR [rbx+0x22d4]
   14000970c:	lea    eax,[rdi-0x2]
   14000970f:	cmp    eax,0x1
   140009712:	ja     0x14000975e
   140009714:	cmp    BYTE PTR [rbx+0x7f94],0x0
   14000971b:	jne    0x14000975e
   14000971d:	cmp    BYTE PTR [rbx+0x458b],0x0
   140009724:	je     0x14000975e
   140009726:	mov    rax,QWORD PTR [rbp+0x22b0]
   14000972d:	cmp    BYTE PTR [rax+0x5132],0x0
   140009734:	je     0x14000975e
   140009736:	cmp    BYTE PTR [rax+0x5130],0x0
   14000973d:	je     0x14000975e
   14000973f:	lea    rdx,[rbx+0x26]
   140009743:	mov    ecx,0x26
   140009748:	call   0x1400013b0
   14000974d:	mov    edx,0x2
   140009752:	lea    rcx,[rip+0x8b107]        # 0x140094860
   140009759:	call   0x14001bc60
   14000975e:	cmp    edi,0x2
   140009761:	je     0x140009899
   140009767:	cmp    edi,0x5
   14000976a:	je     0x1400097b4
   14000976c:	cmp    edi,0x77
   14000976f:	je     0x1400097d1
   140009771:	cmp    edi,0x3
   140009774:	jne    0x14000977f
   140009776:	cmp    BYTE PTR [rbx+0x694a],0x0
   14000977d:	jne    0x1400097d1
   14000977f:	cmp    BYTE PTR [rbx+0x3464],0x0
   140009786:	je     0x1400097d6
   140009788:	mov    rax,QWORD PTR [rbx]
   14000978b:	xor    r8d,r8d
   14000978e:	mov    rdx,QWORD PTR [rbx+0x7f80]
   140009795:	mov    rcx,rbx
   140009798:	call   QWORD PTR [rax+0x18]
   14000979b:	xor    sil,sil
   14000979e:	call   0x140046bb4
   1400097a3:	mov    rcx,rbx
   1400097a6:	call   0x14000e334
   1400097ab:	test   rax,rax
   1400097ae:	jne    0x140009706
   1400097b4:	xor    al,al
   1400097b6:	mov    rbx,QWORD PTR [rsp+0x40]
   1400097bb:	mov    rbp,QWORD PTR [rsp+0x48]
   1400097c0:	mov    rsi,QWORD PTR [rsp+0x50]
   1400097c5:	mov    rdi,QWORD PTR [rsp+0x58]
   1400097ca:	add    rsp,0x30
   1400097ce:	pop    r14
   1400097d0:	ret    
   1400097d1:	test   sil,sil
   1400097d4:	je     0x140009788
   1400097d6:	cmp    QWORD PTR [rsp+0x60],0x0
   1400097dc:	je     0x14000980e
   1400097de:	cmp    edi,0x3
   1400097e1:	jne    0x14000980e
   1400097e3:	mov    r8,QWORD PTR [rsp+0x60]
   1400097e8:	lea    rax,[rbx+0x5868]
   1400097ef:	sub    r8,rax
   1400097f2:	movzx  ecx,WORD PTR [rax]
   1400097f5:	movzx  edx,WORD PTR [rax+r8*1]
   1400097fa:	sub    ecx,edx
   1400097fc:	jne    0x140009806
   1400097fe:	add    rax,0x2
   140009802:	test   edx,edx
   140009804:	jne    0x1400097f2
   140009806:	test   ecx,ecx
   140009808:	je     0x140009788
   14000980e:	test   r14,r14
   140009811:	je     0x14000981c
   140009813:	mov    rax,QWORD PTR [r14]
   140009816:	mov    rcx,r14
   140009819:	call   QWORD PTR [rax+0x28]
   14000981c:	cmp    BYTE PTR [rbx+0x7f94],0x0
   140009823:	jne    0x140009865
   140009825:	cmp    BYTE PTR [rbp+0x7f94],0x0
   14000982c:	je     0x140009865
   14000982e:	cmp    edi,0x3
   140009831:	jne    0x140009788
   140009837:	lea    r8,[rbx+0x5848]
   14000983e:	mov    BYTE PTR [rsp+0x20],0x0
   140009843:	xor    r9d,r9d
   140009846:	mov    edx,edi
   140009848:	mov    rcx,rbp
   14000984b:	call   0x14000b340
   140009850:	mov    rax,QWORD PTR [rbx]
   140009853:	mov    rcx,rbx
   140009856:	call   QWORD PTR [rax+0x20]
   140009859:	mov    r8,QWORD PTR [rbx+0x7f80]
   140009860:	sub    r8,rax
   140009863:	jmp    0x140009886
   140009865:	mov    rax,QWORD PTR [rbx]
   140009868:	xor    r8d,r8d
   14000986b:	mov    rdx,QWORD PTR [rbx+0x7f78]
   140009872:	mov    rcx,rbx
   140009875:	call   QWORD PTR [rax+0x18]
   140009878:	mov    r8,QWORD PTR [rbx+0x7f80]
   14000987f:	sub    r8,QWORD PTR [rbx+0x7f78]
   140009886:	mov    rdx,rbp
   140009889:	mov    rcx,rbx
   14000988c:	call   0x140020834
   140009891:	mov    sil,0x1
   140009894:	jmp    0x14000979e
   140009899:	lea    rdx,[rbx+0x34f0]
   1400098a0:	lea    rcx,[rbp+0x34f0]
   1400098a7:	call   0x1400243b8
   1400098ac:	mov    al,0x1
   1400098ae:	jmp    0x1400097b6
   1400098b3:	int3   
   1400098b4:	mov    QWORD PTR [rsp+0x8],rbx
   1400098b9:	push   rdi
   1400098ba:	sub    rsp,0x20
   1400098be:	mov    dil,dl
   1400098c1:	mov    rbx,rcx
   1400098c4:	mov    edx,0x1
   1400098c9:	call   0x140001858
   1400098ce:	mov    r8,QWORD PTR [rbx+0x8]
   1400098d2:	mov    rax,QWORD PTR [rbx]
   1400098d5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400098da:	mov    BYTE PTR [r8+rax*1-0x1],dil
   1400098df:	add    rsp,0x20
   1400098e3:	pop    rdi
   1400098e4:	ret    
   1400098e5:	int3   
   1400098e6:	int3   
   1400098e7:	int3   
   1400098e8:	mov    QWORD PTR [rsp+0x10],rbx
   1400098ed:	mov    QWORD PTR [rsp+0x18],rsi
   1400098f2:	push   rdi
   1400098f3:	sub    rsp,0x20
   1400098f7:	mov    rsi,rcx
   1400098fa:	lea    r9,[rsp+0x30]
   1400098ff:	add    rcx,0x22f0
   140009906:	mov    rbx,r8
   140009909:	mov    rdi,rdx
   14000990c:	call   0x140034eec
   140009911:	test   al,al
   140009913:	je     0x14000991b
   140009915:	mov    eax,DWORD PTR [rsp+0x30]
   140009919:	jmp    0x140009929
   14000991b:	mov    r8,rbx
   14000991e:	mov    rdx,rdi
   140009921:	mov    rcx,rsi
   140009924:	call   0x140020ed4
   140009929:	mov    rbx,QWORD PTR [rsp+0x38]
   14000992e:	mov    rsi,QWORD PTR [rsp+0x40]
   140009933:	add    rsp,0x20
   140009937:	pop    rdi
   140009938:	ret    
   140009939:	int3   
   14000993a:	int3   
   14000993b:	int3   
   14000993c:	mov    rax,rsp
   14000993f:	push   r14
   140009941:	sub    rsp,0x50
   140009945:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   14000994d:	mov    QWORD PTR [rax+0x8],rbx
   140009951:	mov    QWORD PTR [rax+0x10],rbp
   140009955:	mov    QWORD PTR [rax+0x18],rsi
   140009959:	mov    QWORD PTR [rax+0x20],rdi
   14000995d:	mov    rbx,rdx
   140009960:	mov    rbp,rcx
   140009963:	xor    r14d,r14d
   140009966:	mov    QWORD PTR [rax-0x30],r14
   14000996a:	mov    QWORD PTR [rax-0x28],r14
   14000996e:	mov    QWORD PTR [rax-0x20],r14
   140009972:	mov    QWORD PTR [rax-0x18],r14
   140009976:	xor    r8d,r8d
   140009979:	lea    rdx,[rax-0x30]
   14000997d:	call   0x14000e3bc
   140009982:	test   al,al
   140009984:	jne    0x14000998e
   140009986:	mov    dil,r14b
   140009989:	jmp    0x140009a30
   14000998e:	mov    rsi,QWORD PTR [rsp+0x30]
   140009993:	xor    edx,edx
   140009995:	lea    rcx,[rsp+0x28]
   14000999a:	call   0x1400098b4
   14000999f:	lea    rax,[rsi+0x1]
   1400099a3:	cmp    rax,QWORD PTR [rbx+0x10]
   1400099a7:	jbe    0x1400099ba
   1400099a9:	sub    rax,QWORD PTR [rbx+0x8]
   1400099ad:	mov    rdx,rax
   1400099b0:	mov    rcx,rbx
   1400099b3:	call   0x140007a44
   1400099b8:	jmp    0x1400099be
   1400099ba:	mov    QWORD PTR [rbx+0x8],rax
   1400099be:	mov    dil,0x1
   1400099c1:	mov    rdx,QWORD PTR [rbx]
   1400099c4:	mov    rcx,QWORD PTR [rsp+0x28]
   1400099c9:	cmp    DWORD PTR [rbp+0x7f88],0x3
   1400099d0:	jne    0x1400099dd
   1400099d2:	mov    r8,QWORD PTR [rbx+0x8]
   1400099d6:	call   0x140048b04
   1400099db:	jmp    0x140009a04
   1400099dd:	test   BYTE PTR [rbp+0x5864],dil
   1400099e4:	je     0x1400099fb
   1400099e6:	shr    rsi,1
   1400099e9:	mov    r8,rsi
   1400099ec:	call   0x140048ab4
   1400099f1:	mov    rax,QWORD PTR [rbx]
   1400099f4:	mov    WORD PTR [rax+rsi*2],r14w
   1400099f9:	jmp    0x140009a04
   1400099fb:	mov    r8,QWORD PTR [rbx+0x8]
   1400099ff:	call   0x1400489f0
   140009a04:	mov    rcx,QWORD PTR [rbx]
   140009a07:	or     rax,0xffffffffffffffff
   140009a0b:	inc    rax
   140009a0e:	cmp    WORD PTR [rcx+rax*2],r14w
   140009a13:	jne    0x140009a0b
   140009a15:	cmp    rax,QWORD PTR [rbx+0x10]
   140009a19:	jbe    0x140009a2c
   140009a1b:	sub    rax,QWORD PTR [rbx+0x8]
   140009a1f:	mov    rdx,rax
   140009a22:	mov    rcx,rbx
   140009a25:	call   0x140007a44
   140009a2a:	jmp    0x140009a30
   140009a2c:	mov    QWORD PTR [rbx+0x8],rax
   140009a30:	mov    rcx,QWORD PTR [rsp+0x28]
   140009a35:	test   rcx,rcx
   140009a38:	je     0x140009a3f
   140009a3a:	call   0x14005a938
   140009a3f:	mov    al,dil
   140009a42:	mov    rbx,QWORD PTR [rsp+0x60]
   140009a47:	mov    rbp,QWORD PTR [rsp+0x68]
   140009a4c:	mov    rsi,QWORD PTR [rsp+0x70]
   140009a51:	mov    rdi,QWORD PTR [rsp+0x78]
   140009a56:	add    rsp,0x50
   140009a5a:	pop    r14
   140009a5c:	ret    
   140009a5d:	int3   
   140009a5e:	int3   
   140009a5f:	int3   
   140009a60:	rex push rbx
   140009a62:	sub    rsp,0x20
   140009a66:	mov    rbx,rcx
   140009a69:	mov    rcx,QWORD PTR [rcx]
   140009a6c:	test   rcx,rcx
   140009a6f:	je     0x140009a7a
   140009a71:	call   0x14005a938
   140009a76:	and    QWORD PTR [rbx],0x0
   140009a7a:	and    QWORD PTR [rbx+0x8],0x0
   140009a7f:	and    QWORD PTR [rbx+0x10],0x0
   140009a84:	add    rsp,0x20
   140009a88:	pop    rbx
   140009a89:	ret    
   140009a8a:	int3   
   140009a8b:	int3   
   140009a8c:	mov    rax,rsp
   140009a8f:	push   rbp
   140009a90:	push   rdi
   140009a91:	push   r14
   140009a93:	lea    rbp,[rax-0x5f]
   140009a97:	sub    rsp,0x100
   140009a9e:	mov    QWORD PTR [rbp-0x69],0xfffffffffffffffe
   140009aa6:	mov    QWORD PTR [rax+0x8],rbx
   140009aaa:	mov    QWORD PTR [rax+0x20],rsi
   140009aae:	mov    rax,QWORD PTR [rip+0x7842b]        # 0x140081ee0
   140009ab5:	xor    rax,rsp
   140009ab8:	mov    QWORD PTR [rbp+0x37],rax
   140009abc:	mov    rbx,r8
   140009abf:	mov    rsi,rdx
   140009ac2:	mov    rdi,rcx
   140009ac5:	lea    rcx,[rsp+0x20]
   140009aca:	call   0x140036890
   140009acf:	nop
   140009ad0:	mov    r14d,0x1
   140009ad6:	mov    edx,r14d
   140009ad9:	lea    rcx,[rsp+0x20]
   140009ade:	call   0x140036b5c
   140009ae3:	xor    edx,edx
   140009ae5:	lea    rcx,[rsp+0x20]
   140009aea:	call   0x140036b5c
   140009aef:	xor    eax,eax
   140009af1:	cmp    BYTE PTR [rbx+0x10c1],al
   140009af7:	cmovne eax,r14d
   140009afb:	cmp    BYTE PTR [rbx+0x10ca],0x0
   140009b02:	je     0x140009b10
   140009b04:	cmp    BYTE PTR [rbx+0x1099],0x0
   140009b0b:	jne    0x140009b10
   140009b0d:	or     eax,0x2
   140009b10:	mov    edx,eax
   140009b12:	lea    rcx,[rsp+0x20]
   140009b17:	call   0x140036b5c
   140009b1c:	mov    edx,DWORD PTR [rbx+0x10ec]
   140009b22:	lea    rcx,[rsp+0x20]
   140009b27:	call   0x140036970
   140009b2c:	lea    rdx,[rbx+0x10a1]
   140009b33:	mov    r14d,0x10
   140009b39:	mov    r8d,r14d
   140009b3c:	lea    rcx,[rsp+0x20]
   140009b41:	call   0x140036aac
   140009b46:	lea    rdx,[rbx+0x10b1]
   140009b4d:	mov    r8d,r14d
   140009b50:	lea    rcx,[rsp+0x20]
   140009b55:	call   0x140036aac
   140009b5a:	cmp    BYTE PTR [rbx+0x10c1],0x0
   140009b61:	je     0x140009bb8
   140009b63:	mov    r14d,0x8
   140009b69:	mov    r8d,r14d
   140009b6c:	lea    rdx,[rbx+0x10c2]
   140009b73:	lea    rcx,[rsp+0x20]
   140009b78:	call   0x140036aac
   140009b7d:	lea    rcx,[rbp-0x59]
   140009b81:	call   0x1400454a4
   140009b86:	mov    r8d,r14d
   140009b89:	lea    rdx,[rbx+0x10c2]
   140009b90:	lea    rcx,[rbp-0x59]
   140009b94:	call   0x1400454e4
   140009b99:	lea    rdx,[rbp+0x17]
   140009b9d:	lea    rcx,[rbp-0x59]
   140009ba1:	call   0x14004538c
   140009ba6:	lea    r8d,[r14-0x4]
   140009baa:	lea    rdx,[rbp+0x17]
   140009bae:	lea    rcx,[rsp+0x20]
   140009bb3:	call   0x140036aac
   140009bb8:	mov    r8,rsi
   140009bbb:	lea    rdx,[rsp+0x20]
   140009bc0:	mov    rcx,rdi
   140009bc3:	call   0x140009bfc
   140009bc8:	nop
   140009bc9:	mov    rcx,QWORD PTR [rsp+0x20]
   140009bce:	test   rcx,rcx
   140009bd1:	je     0x140009bd8
   140009bd3:	call   0x14005a938
   140009bd8:	mov    rcx,QWORD PTR [rbp+0x37]
   140009bdc:	xor    rcx,rsp
   140009bdf:	call   0x140055f90
   140009be4:	lea    r11,[rsp+0x100]
   140009bec:	mov    rbx,QWORD PTR [r11+0x20]
   140009bf0:	mov    rsi,QWORD PTR [r11+0x38]
   140009bf4:	mov    rsp,r11
   140009bf7:	pop    r14
   140009bf9:	pop    rdi
   140009bfa:	pop    rbp
   140009bfb:	ret    
   140009bfc:	mov    rax,rsp
   140009bff:	push   rdi
   140009c00:	sub    rsp,0x60
   140009c04:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   140009c0c:	mov    QWORD PTR [rax+0x8],rbx
   140009c10:	mov    QWORD PTR [rax+0x20],rsi
   140009c14:	mov    rax,QWORD PTR [rip+0x782c5]        # 0x140081ee0
   140009c1b:	xor    rax,rsp
   140009c1e:	mov    QWORD PTR [rsp+0x58],rax
   140009c23:	mov    rsi,r8
   140009c26:	mov    rdi,rdx
   140009c29:	xor    edx,edx
   140009c2b:	mov    rcx,rdi
   140009c2e:	call   0x140036bc0
   140009c33:	mov    rbx,rax
   140009c36:	and    QWORD PTR [rsp+0x20],0x0
   140009c3c:	and    QWORD PTR [rsp+0x28],0x0
   140009c42:	and    QWORD PTR [rsp+0x30],0x0
   140009c48:	and    QWORD PTR [rsp+0x38],0x0
   140009c4e:	mov    rdx,rax
   140009c51:	lea    rcx,[rsp+0x20]
   140009c56:	call   0x140001858
   140009c5b:	nop
   140009c5c:	mov    r8,rbx
   140009c5f:	mov    rdx,QWORD PTR [rsp+0x20]
   140009c64:	mov    rcx,rdi
   140009c67:	call   0x140036934
   140009c6c:	mov    rbx,rax
   140009c6f:	mov    rcx,rdi
   140009c72:	call   0x140036b98
   140009c77:	mov    rdx,rbx
   140009c7a:	mov    rcx,rdi
   140009c7d:	call   0x140036b5c
   140009c82:	mov    r8d,0xa
   140009c88:	lea    rdx,[rsp+0x48]
   140009c8d:	mov    rcx,rdi
   140009c90:	call   0x140036934
   140009c95:	mov    r8,rax
   140009c98:	lea    rdx,[rsp+0x48]
   140009c9d:	mov    rcx,rsi
   140009ca0:	call   0x140008254
   140009ca5:	mov    r8,rbx
   140009ca8:	mov    rdx,QWORD PTR [rsp+0x20]
   140009cad:	mov    rcx,rsi
   140009cb0:	call   0x140008254
   140009cb5:	nop
   140009cb6:	cmp    QWORD PTR [rsp+0x20],0x0
   140009cbc:	je     0x140009cc8
   140009cbe:	mov    rcx,QWORD PTR [rsp+0x20]
   140009cc3:	call   0x14005a938
   140009cc8:	mov    rcx,QWORD PTR [rsp+0x58]
   140009ccd:	xor    rcx,rsp
   140009cd0:	call   0x140055f90
   140009cd5:	lea    r11,[rsp+0x60]
   140009cda:	mov    rbx,QWORD PTR [r11+0x10]
   140009cde:	mov    rsi,QWORD PTR [r11+0x28]
   140009ce2:	mov    rsp,r11
   140009ce5:	pop    rdi
   140009ce6:	ret    
   140009ce7:	int3   
   140009ce8:	mov    rax,rsp
   140009ceb:	push   rdi
   140009cec:	sub    rsp,0x60
   140009cf0:	mov    QWORD PTR [rax-0x48],0xfffffffffffffffe
   140009cf8:	mov    QWORD PTR [rax+0x8],rbx
   140009cfc:	mov    QWORD PTR [rax+0x10],rsi
   140009d00:	mov    rbx,r8
   140009d03:	mov    rdi,rdx
   140009d06:	mov    rsi,rcx
   140009d09:	cmp    DWORD PTR [r8+0x1070],0x3
   140009d11:	jne    0x140009d6f
   140009d13:	lea    rcx,[rax-0x40]
   140009d17:	call   0x140036890
   140009d1c:	nop
   140009d1d:	mov    edx,0x2
   140009d22:	lea    rcx,[rsp+0x28]
   140009d27:	call   0x140036b5c
   140009d2c:	xor    edx,edx
   140009d2e:	lea    rcx,[rsp+0x28]
   140009d33:	call   0x140036b5c
   140009d38:	lea    rdx,[rbx+0x1074]
   140009d3f:	mov    r8d,0x20
   140009d45:	lea    rcx,[rsp+0x28]
   140009d4a:	call   0x140036aac
   140009d4f:	mov    r8,rdi
   140009d52:	lea    rdx,[rsp+0x28]
   140009d57:	mov    rcx,rsi
   140009d5a:	call   0x140009bfc
   140009d5f:	nop
   140009d60:	mov    rcx,QWORD PTR [rsp+0x28]
   140009d65:	test   rcx,rcx
   140009d68:	je     0x140009d6f
   140009d6a:	call   0x14005a938
   140009d6f:	mov    rbx,QWORD PTR [rsp+0x70]
   140009d74:	mov    rsi,QWORD PTR [rsp+0x78]
   140009d79:	add    rsp,0x60
   140009d7d:	pop    rdi
   140009d7e:	ret    
   140009d7f:	int3   
   140009d80:	mov    rax,rsp
   140009d83:	push   r14
   140009d85:	sub    rsp,0x60
   140009d89:	mov    QWORD PTR [rax-0x48],0xfffffffffffffffe
   140009d91:	mov    QWORD PTR [rax+0x8],rbx
   140009d95:	mov    QWORD PTR [rax+0x10],rbp
   140009d99:	mov    QWORD PTR [rax+0x18],rsi
   140009d9d:	mov    QWORD PTR [rax+0x20],rdi
   140009da1:	mov    rbx,r8
   140009da4:	mov    rdi,rdx
   140009da7:	mov    rsi,rcx
   140009daa:	lea    rcx,[rax-0x40]
   140009dae:	call   0x140036890
   140009db3:	nop
   140009db4:	mov    ebp,0x1
   140009db9:	mov    edx,ebp
   140009dbb:	lea    rcx,[rsp+0x28]
   140009dc0:	call   0x140036b5c
   140009dc5:	xor    r14d,r14d
   140009dc8:	mov    eax,r14d
   140009dcb:	cmp    QWORD PTR [rbx+0x28],r14
   140009dcf:	cmova  eax,ebp
   140009dd2:	cmp    QWORD PTR [rbx+0x38],r14
   140009dd6:	jbe    0x140009ddb
   140009dd8:	or     eax,0x2
   140009ddb:	mov    edx,eax
   140009ddd:	lea    rcx,[rsp+0x28]
   140009de2:	call   0x140036970
   140009de7:	mov    r8,QWORD PTR [rbx+0x28]
   140009deb:	test   r8,r8
   140009dee:	je     0x140009e05
   140009df0:	mov    rdx,QWORD PTR [rbx+0x20]
   140009df4:	cmp    rdx,r8
   140009df7:	cmova  rdx,r14
   140009dfb:	lea    rcx,[rsp+0x28]
   140009e00:	call   0x140036b04
   140009e05:	mov    r8,QWORD PTR [rbx+0x38]
   140009e09:	test   r8,r8
   140009e0c:	je     0x140009e23
   140009e0e:	mov    rdx,QWORD PTR [rbx+0x30]
   140009e12:	cmp    rdx,r8
   140009e15:	cmova  rdx,r14
   140009e19:	lea    rcx,[rsp+0x28]
   140009e1e:	call   0x140036b04
   140009e23:	mov    r8,rdi
   140009e26:	lea    rdx,[rsp+0x28]
   140009e2b:	mov    rcx,rsi
   140009e2e:	call   0x140009bfc
   140009e33:	nop
   140009e34:	mov    rcx,QWORD PTR [rsp+0x28]
   140009e39:	test   rcx,rcx
   140009e3c:	je     0x140009e43
   140009e3e:	call   0x14005a938
   140009e43:	lea    r11,[rsp+0x60]
   140009e48:	mov    rbx,QWORD PTR [r11+0x10]
   140009e4c:	mov    rbp,QWORD PTR [r11+0x18]
   140009e50:	mov    rsi,QWORD PTR [r11+0x20]
   140009e54:	mov    rdi,QWORD PTR [r11+0x28]
   140009e58:	mov    rsp,r11
   140009e5b:	pop    r14
   140009e5d:	ret    
   140009e5e:	int3   
   140009e5f:	int3   
   140009e60:	rex push rbx
   140009e62:	push   rbp
   140009e63:	push   rsi
   140009e64:	push   rdi
   140009e65:	push   r12
   140009e67:	push   r14
   140009e69:	push   r15
   140009e6b:	sub    rsp,0x80
   140009e72:	mov    QWORD PTR [rsp+0x50],0xfffffffffffffffe
   140009e7b:	mov    rax,QWORD PTR [rip+0x7805e]        # 0x140081ee0
   140009e82:	xor    rax,rsp
   140009e85:	mov    QWORD PTR [rsp+0x70],rax
   140009e8a:	mov    bpl,r9b
   140009e8d:	mov    rbx,r8
   140009e90:	mov    r12,rdx
   140009e93:	mov    r14,rcx
   140009e96:	cmp    DWORD PTR [rcx+0x22dc],0x0
   140009e9d:	je     0x140009ec2
   140009e9f:	lea    rcx,[r8+0x1040]
   140009ea6:	cmp    QWORD PTR [rcx],0x0
   140009eaa:	je     0x140009ec2
   140009eac:	test   r9b,r9b
   140009eaf:	je     0x140009eb8
   140009eb1:	call   0x140047574
   140009eb6:	jmp    0x140009ebd
   140009eb8:	call   0x140047484
   140009ebd:	mov    rsi,rax
   140009ec0:	jmp    0x140009ec4
   140009ec2:	xor    esi,esi
   140009ec4:	mov    QWORD PTR [rsp+0x58],rsi
   140009ec9:	cmp    DWORD PTR [r14+0x22e0],0x0
   140009ed1:	je     0x140009ef6
   140009ed3:	lea    rcx,[rbx+0x1048]
   140009eda:	cmp    QWORD PTR [rcx],0x0
   140009ede:	je     0x140009ef6
   140009ee0:	test   bpl,bpl
   140009ee3:	je     0x140009eec
   140009ee5:	call   0x140047574
   140009eea:	jmp    0x140009ef1
   140009eec:	call   0x140047484
   140009ef1:	mov    rdi,rax
   140009ef4:	jmp    0x140009ef8
   140009ef6:	xor    edi,edi
   140009ef8:	mov    QWORD PTR [rsp+0x60],rdi
   140009efd:	cmp    DWORD PTR [r14+0x22e4],0x0
   140009f05:	je     0x140009f2a
   140009f07:	lea    rcx,[rbx+0x1050]
   140009f0e:	cmp    QWORD PTR [rcx],0x0
   140009f12:	je     0x140009f2a
   140009f14:	test   bpl,bpl
   140009f17:	je     0x140009f20
   140009f19:	call   0x140047574
   140009f1e:	jmp    0x140009f25
   140009f20:	call   0x140047484
   140009f25:	mov    rbx,rax
   140009f28:	jmp    0x140009f2c
   140009f2a:	xor    ebx,ebx
   140009f2c:	mov    QWORD PTR [rsp+0x68],rbx
   140009f31:	test   rsi,rsi
   140009f34:	jne    0x140009f44
   140009f36:	test   rdi,rdi
   140009f39:	jne    0x140009f44
   140009f3b:	test   rbx,rbx
   140009f3e:	je     0x140009fde
   140009f44:	lea    rcx,[rsp+0x20]
   140009f49:	call   0x140036890
   140009f4e:	nop
   140009f4f:	mov    r15d,0x3
   140009f55:	mov    edx,r15d
   140009f58:	lea    rcx,[rsp+0x20]
   140009f5d:	call   0x140036b5c
   140009f62:	neg    rbx
   140009f65:	sbb    cl,cl
   140009f67:	and    cl,0x8
   140009f6a:	neg    rdi
   140009f6d:	sbb    al,al
   140009f6f:	and    al,0x4
   140009f71:	or     cl,al
   140009f73:	neg    rsi
   140009f76:	sbb    al,al
   140009f78:	and    al,0x2
   140009f7a:	or     cl,al
   140009f7c:	test   bpl,bpl
   140009f7f:	setne  al
   140009f82:	or     cl,al
   140009f84:	movzx  edx,cl
   140009f87:	lea    rcx,[rsp+0x20]
   140009f8c:	call   0x140036b5c
   140009f91:	lea    rbx,[rsp+0x58]
   140009f96:	mov    rdx,QWORD PTR [rbx]
   140009f99:	test   rdx,rdx
   140009f9c:	je     0x140009fb4
   140009f9e:	lea    rcx,[rsp+0x20]
   140009fa3:	test   bpl,bpl
   140009fa6:	je     0x140009faf
   140009fa8:	call   0x1400369f8
   140009fad:	jmp    0x140009fb4
   140009faf:	call   0x140036a7c
   140009fb4:	add    rbx,0x8
   140009fb8:	sub    r15,0x1
   140009fbc:	jne    0x140009f96
   140009fbe:	mov    r8,r12
   140009fc1:	lea    rdx,[rsp+0x20]
   140009fc6:	mov    rcx,r14
   140009fc9:	call   0x140009bfc
   140009fce:	nop
   140009fcf:	mov    rcx,QWORD PTR [rsp+0x20]
   140009fd4:	test   rcx,rcx
   140009fd7:	je     0x140009fde
   140009fd9:	call   0x14005a938
   140009fde:	mov    rcx,QWORD PTR [rsp+0x70]
   140009fe3:	xor    rcx,rsp
   140009fe6:	call   0x140055f90
   140009feb:	add    rsp,0x80
   140009ff2:	pop    r15
   140009ff4:	pop    r14
   140009ff6:	pop    r12
   140009ff8:	pop    rdi
   140009ff9:	pop    rsi
   140009ffa:	pop    rbp
   140009ffb:	pop    rbx
   140009ffc:	ret    
   140009ffd:	int3   
   140009ffe:	int3   
   140009fff:	int3   
   14000a000:	rex push rbp
   14000a002:	push   rsi
   14000a003:	push   rdi
   14000a004:	lea    rbp,[rsp-0x1f70]
   14000a00c:	mov    eax,0x2070
   14000a011:	call   0x140055f20
   14000a016:	sub    rsp,rax
   14000a019:	mov    QWORD PTR [rsp+0x50],0xfffffffffffffffe
   14000a022:	mov    QWORD PTR [rsp+0x2090],rbx
   14000a02a:	mov    rax,QWORD PTR [rip+0x77eaf]        # 0x140081ee0
   14000a031:	xor    rax,rsp
   14000a034:	mov    QWORD PTR [rbp+0x1f60],rax
   14000a03b:	mov    rbx,r8
   14000a03e:	mov    rsi,rdx
   14000a041:	mov    rdi,rcx
   14000a044:	lea    rcx,[rsp+0x20]
   14000a049:	call   0x140036890
   14000a04e:	nop
   14000a04f:	mov    edx,0x5
   14000a054:	lea    rcx,[rsp+0x20]
   14000a059:	call   0x140036b5c
   14000a05e:	movsxd rdx,DWORD PTR [rbx+0x1108]
   14000a065:	lea    rcx,[rsp+0x20]
   14000a06a:	call   0x140036b5c
   14000a06f:	xor    edx,edx
   14000a071:	cmp    BYTE PTR [rbx+0x210c],dl
   14000a077:	setne  dl
   14000a07a:	lea    rcx,[rsp+0x20]
   14000a07f:	call   0x140036b5c
   14000a084:	lea    rcx,[rbx+0x110c]
   14000a08b:	mov    r8d,0x2000
   14000a091:	lea    rdx,[rsp+0x60]
   14000a096:	call   0x140048d2c
   14000a09b:	cmp    DWORD PTR [rbx+0x1104],0x0
   14000a0a2:	jne    0x14000a0b9
   14000a0a4:	mov    r8d,0x2000
   14000a0aa:	lea    rdx,[rsp+0x60]
   14000a0af:	lea    rcx,[rsp+0x60]
   14000a0b4:	call   0x1400311f8
   14000a0b9:	lea    rax,[rsp+0x60]
   14000a0be:	or     rbx,0xffffffffffffffff
   14000a0c2:	inc    rbx
   14000a0c5:	cmp    BYTE PTR [rax+rbx*1],0x0
   14000a0c9:	jne    0x14000a0c2
   14000a0cb:	mov    rdx,rbx
   14000a0ce:	lea    rcx,[rsp+0x20]
   14000a0d3:	call   0x140036b5c
   14000a0d8:	mov    r8,rbx
   14000a0db:	lea    rdx,[rsp+0x60]
   14000a0e0:	lea    rcx,[rsp+0x20]
   14000a0e5:	call   0x140036aac
   14000a0ea:	mov    r8,rsi
   14000a0ed:	lea    rdx,[rsp+0x20]
   14000a0f2:	mov    rcx,rdi
   14000a0f5:	call   0x140009bfc
   14000a0fa:	nop
   14000a0fb:	mov    rcx,QWORD PTR [rsp+0x20]
   14000a100:	test   rcx,rcx
   14000a103:	je     0x14000a10a
   14000a105:	call   0x14005a938
   14000a10a:	mov    rcx,QWORD PTR [rbp+0x1f60]
   14000a111:	xor    rcx,rsp
   14000a114:	call   0x140055f90
   14000a119:	mov    rbx,QWORD PTR [rsp+0x2090]
   14000a121:	add    rsp,0x2070
   14000a128:	pop    rdi
   14000a129:	pop    rsi
   14000a12a:	pop    rbp
   14000a12b:	ret    
   14000a12c:	rex push rdi
   14000a12e:	sub    rsp,0x60
   14000a132:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000a13b:	mov    QWORD PTR [rsp+0x70],rbx
   14000a140:	mov    QWORD PTR [rsp+0x78],rsi
   14000a145:	mov    rdi,rdx
   14000a148:	mov    rsi,rcx
   14000a14b:	mov    dl,0x1
   14000a14d:	mov    rcx,r8
   14000a150:	call   0x140032740
   14000a155:	mov    ebx,eax
   14000a157:	lea    rcx,[rsp+0x28]
   14000a15c:	call   0x140036890
   14000a161:	nop
   14000a162:	mov    edx,0x4
   14000a167:	lea    rcx,[rsp+0x28]
   14000a16c:	call   0x140036b5c
   14000a171:	xor    edx,edx
   14000a173:	lea    rcx,[rsp+0x28]
   14000a178:	call   0x140036b5c
   14000a17d:	mov    edx,ebx
   14000a17f:	lea    rcx,[rsp+0x28]
   14000a184:	call   0x140036b5c
   14000a189:	mov    r8,rdi
   14000a18c:	lea    rdx,[rsp+0x28]
   14000a191:	mov    rcx,rsi
   14000a194:	call   0x140009bfc
   14000a199:	nop
   14000a19a:	mov    rcx,QWORD PTR [rsp+0x28]
   14000a19f:	test   rcx,rcx
   14000a1a2:	je     0x14000a1a9
   14000a1a4:	call   0x14005a938
   14000a1a9:	mov    rbx,QWORD PTR [rsp+0x70]
   14000a1ae:	mov    rsi,QWORD PTR [rsp+0x78]
   14000a1b3:	add    rsp,0x60
   14000a1b7:	pop    rdi
   14000a1b8:	ret    
   14000a1b9:	int3   
   14000a1ba:	int3   
   14000a1bb:	int3   
   14000a1bc:	mov    r11,rsp
   14000a1bf:	push   rdi
   14000a1c0:	sub    rsp,0x80
   14000a1c7:	mov    QWORD PTR [r11-0x68],0xfffffffffffffffe
   14000a1cf:	mov    QWORD PTR [r11+0x8],rbx
   14000a1d3:	mov    rax,QWORD PTR [rip+0x77d06]        # 0x140081ee0
   14000a1da:	xor    rax,rsp
   14000a1dd:	mov    QWORD PTR [rsp+0x70],rax
   14000a1e2:	mov    rdi,r8
   14000a1e5:	mov    rbx,rdx
   14000a1e8:	lea    rcx,[r11-0x60]
   14000a1ec:	call   0x140036890
   14000a1f1:	nop
   14000a1f2:	mov    rdx,QWORD PTR [rdi+0x1028]
   14000a1f9:	inc    rdx
   14000a1fc:	lea    rcx,[rsp+0x28]
   14000a201:	call   0x140036b5c
   14000a206:	mov    edx,0x7
   14000a20b:	lea    rcx,[rsp+0x28]
   14000a210:	call   0x140036b5c
   14000a215:	mov    r8d,0x14
   14000a21b:	lea    rdx,[rsp+0x58]
   14000a220:	lea    rcx,[rsp+0x28]
   14000a225:	call   0x140036934
   14000a22a:	mov    r8,rax
   14000a22d:	lea    rdx,[rsp+0x58]
   14000a232:	mov    rcx,rbx
   14000a235:	call   0x140008254
   14000a23a:	mov    r8,QWORD PTR [rdi+0x1028]
   14000a241:	mov    rdx,QWORD PTR [rdi+0x1020]
   14000a248:	mov    rcx,rbx
   14000a24b:	call   0x140008254
   14000a250:	nop
   14000a251:	mov    rcx,QWORD PTR [rsp+0x28]
   14000a256:	test   rcx,rcx
   14000a259:	je     0x14000a260
   14000a25b:	call   0x14005a938
   14000a260:	mov    rcx,QWORD PTR [rsp+0x70]
   14000a265:	xor    rcx,rsp
   14000a268:	call   0x140055f90
   14000a26d:	mov    rbx,QWORD PTR [rsp+0x90]
   14000a275:	add    rsp,0x80
   14000a27c:	pop    rdi
   14000a27d:	ret    
   14000a27e:	int3   
   14000a27f:	int3   
   14000a280:	mov    QWORD PTR [rsp+0x8],rbx
   14000a285:	mov    QWORD PTR [rsp+0x10],rsi
   14000a28a:	push   rdi
   14000a28b:	sub    rsp,0x20
   14000a28f:	mov    rsi,rcx
   14000a292:	mov    ebx,r8d
   14000a295:	add    rcx,0x22f0
   14000a29c:	mov    rdi,rdx
   14000a29f:	call   0x14003536c
   14000a2a4:	test   al,al
   14000a2a6:	jne    0x14000a2b6
   14000a2a8:	mov    r8d,ebx
   14000a2ab:	mov    rdx,rdi
   14000a2ae:	mov    rcx,rsi
   14000a2b1:	call   0x140021048
   14000a2b6:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a2bb:	mov    rsi,QWORD PTR [rsp+0x38]
   14000a2c0:	add    rsp,0x20
   14000a2c4:	pop    rdi
   14000a2c5:	ret    
   14000a2c6:	int3   
   14000a2c7:	int3   
   14000a2c8:	mov    rax,QWORD PTR [rcx]
   14000a2cb:	xor    r8d,r8d
   14000a2ce:	mov    rdx,QWORD PTR [rcx+0x7f80]
   14000a2d5:	rex.W jmp QWORD PTR [rax+0x18]
   14000a2d9:	int3   
   14000a2da:	int3   
   14000a2db:	int3   
   14000a2dc:	mov    DWORD PTR [rcx+0x22dc],edx
   14000a2e2:	mov    DWORD PTR [rcx+0x22e0],r8d
   14000a2e9:	mov    DWORD PTR [rcx+0x22e4],r9d
   14000a2f0:	ret    
   14000a2f1:	int3   
   14000a2f2:	int3   
   14000a2f3:	int3   
   14000a2f4:	test   rdx,rdx
   14000a2f7:	jne    0x14000a301
   14000a2f9:	and    QWORD PTR [rcx+0x22c8],rdx
   14000a300:	ret    
   14000a301:	mov    rax,QWORD PTR [rdx]
   14000a304:	mov    QWORD PTR [rcx+0x22c8],rax
   14000a30b:	ret    
   14000a30c:	rex push rbx
   14000a30e:	sub    rsp,0x20
   14000a312:	mov    rbx,rcx
   14000a315:	lea    rdx,[rsp+0x30]
   14000a31a:	add    rcx,0x22f0
   14000a321:	call   0x14003540c
   14000a326:	test   al,al
   14000a328:	je     0x14000a331
   14000a32a:	mov    rax,QWORD PTR [rsp+0x30]
   14000a32f:	jmp    0x14000a339
   14000a331:	mov    rcx,rbx
   14000a334:	call   0x1400211a0
   14000a339:	add    rsp,0x20
   14000a33d:	pop    rbx
   14000a33e:	ret    
   14000a33f:	int3   
   14000a340:	rex push rbp
   14000a342:	push   rsi
   14000a343:	push   rdi
   14000a344:	push   r12
   14000a346:	push   r13
   14000a348:	push   r14
   14000a34a:	push   r15
   14000a34c:	lea    rbp,[rsp-0x3f80]
   14000a354:	mov    eax,0x4080
   14000a359:	call   0x140055f20
   14000a35e:	sub    rsp,rax
   14000a361:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14000a36a:	mov    QWORD PTR [rsp+0x40d0],rbx
   14000a372:	mov    rax,QWORD PTR [rip+0x77b67]        # 0x140081ee0
   14000a379:	xor    rax,rsp
   14000a37c:	mov    QWORD PTR [rbp+0x3f70],rax
   14000a383:	mov    rsi,rdx
   14000a386:	mov    rdi,rcx
   14000a389:	mov    rcx,rdx
   14000a38c:	call   0x140008324
   14000a391:	test   al,al
   14000a393:	jne    0x14000a752
   14000a399:	mov    al,BYTE PTR [rsi+0x7f8d]
   14000a39f:	mov    BYTE PTR [rdi+0x7f8d],al
   14000a3a5:	lea    rcx,[rdi+0x22f0]
   14000a3ac:	call   0x140035428
   14000a3b1:	mov    rax,QWORD PTR [rdi+0x22b0]
   14000a3b8:	mov    edx,DWORD PTR [rax+0x6148]
   14000a3be:	mov    rcx,rdi
   14000a3c1:	call   0x140033f88
   14000a3c6:	cmp    BYTE PTR [rsi+0x7f8d],0x0
   14000a3cd:	je     0x14000a3dc
   14000a3cf:	cmp    BYTE PTR [rsi+0x5824],0x0
   14000a3d6:	je     0x14000a3dc
   14000a3d8:	mov    dl,0x1
   14000a3da:	jmp    0x14000a3de
   14000a3dc:	xor    dl,dl
   14000a3de:	mov    rcx,rdi
   14000a3e1:	call   0x14000bdbc
   14000a3e6:	lea    r13,[rdi+0x26]
   14000a3ea:	lea    r14,[rsi+0x26]
   14000a3ee:	mov    rdx,r13
   14000a3f1:	mov    rcx,r14
   14000a3f4:	call   0x140008844
   14000a3f9:	and    QWORD PTR [rsp+0x28],0x0
   14000a3ff:	mov    rax,QWORD PTR [rdi+0x22b0]
   14000a406:	cmp    DWORD PTR [rax+0x61a0],0x1
   14000a40d:	jne    0x14000a42f
   14000a40f:	lea    rdx,[rsp+0x28]
   14000a414:	mov    rcx,rsi
   14000a417:	call   0x140020c28
   14000a41c:	xor    r9d,r9d
   14000a41f:	xor    r8d,r8d
   14000a422:	lea    rdx,[rsp+0x28]
   14000a427:	mov    rcx,rdi
   14000a42a:	call   0x140021078
   14000a42f:	mov    rax,QWORD PTR [rdi+0x22b0]
   14000a436:	cmp    DWORD PTR [rax+0x61a0],0x2
   14000a43d:	jne    0x14000a45a
   14000a43f:	lea    rdx,[rdi+0x22c8]
   14000a446:	cmp    QWORD PTR [rdx],0x0
   14000a44a:	je     0x14000a45a
   14000a44c:	xor    r9d,r9d
   14000a44f:	xor    r8d,r8d
   14000a452:	mov    rcx,rdi
   14000a455:	call   0x140021078
   14000a45a:	mov    rcx,r14
   14000a45d:	call   0x140031c68
   14000a462:	mov    r12d,eax
   14000a465:	mov    rcx,r13
   14000a468:	call   0x140031c68
   14000a46d:	mov    r15d,eax
   14000a470:	mov    DWORD PTR [rsp+0x20],eax
   14000a474:	cmp    r12d,0xffffffff
   14000a478:	je     0x14000a4d8
   14000a47a:	cmp    r12d,eax
   14000a47d:	je     0x14000a4d8
   14000a47f:	mov    rcx,rsi
   14000a482:	call   0x140020b88
   14000a487:	mov    rbx,rax
   14000a48a:	mov    rcx,rdi
   14000a48d:	call   0x140020b88
   14000a492:	mov    r15,rax
   14000a495:	sub    r15,rbx
   14000a498:	test   r15,r15
   14000a49b:	jle    0x14000a4d3
   14000a49d:	mov    rcx,r14
   14000a4a0:	call   0x140021edc
   14000a4a5:	cmp    r15,rax
   14000a4a8:	jle    0x14000a4d3
   14000a4aa:	mov    r8b,0x1
   14000a4ad:	mov    rdx,r14
   14000a4b0:	lea    rcx,[rip+0x8a3a9]        # 0x140094860
   14000a4b7:	call   0x14001bb80
   14000a4bc:	test   al,al
   14000a4be:	jne    0x14000a49d
   14000a4c0:	mov    edx,0x5
   14000a4c5:	lea    rcx,[rip+0x8a394]        # 0x140094860
   14000a4cc:	call   0x14001bc60
   14000a4d1:	jmp    0x14000a49d
   14000a4d3:	mov    r15d,DWORD PTR [rsp+0x20]
   14000a4d8:	mov    rcx,rdi
   14000a4db:	call   0x1400207cc
   14000a4e0:	mov    rcx,rsi
   14000a4e3:	call   0x1400207cc
   14000a4e8:	xor    edx,edx
   14000a4ea:	lea    rcx,[rip+0x8a36f]        # 0x140094860
   14000a4f1:	call   0x14001bf4c
   14000a4f6:	lea    rcx,[rsp+0x40]
   14000a4fb:	call   0x14002071c
   14000a500:	nop
   14000a501:	mov    r8d,0x9
   14000a507:	mov    rdx,r14
   14000a50a:	lea    rcx,[rsp+0x40]
   14000a50f:	call   0x140020c80
   14000a514:	test   al,al
   14000a516:	je     0x14000a52a
   14000a518:	lea    rcx,[rsp+0x40]
   14000a51d:	call   0x1400207cc
   14000a522:	test   al,al
   14000a524:	je     0x14000a52a
   14000a526:	mov    bl,0x1
   14000a528:	jmp    0x14000a52c
   14000a52a:	xor    bl,bl
   14000a52c:	mov    r8d,0x800
   14000a532:	mov    rdx,r14
   14000a535:	lea    rcx,[rbp+0xf70]
   14000a53c:	call   0x140046158
   14000a541:	test   bl,bl
   14000a543:	mov    ebx,0x800
   14000a548:	jne    0x14000a5ba
   14000a54a:	mov    r8d,ebx
   14000a54d:	mov    rdx,r14
   14000a550:	lea    rcx,[rbp+0x2f70]
   14000a557:	call   0x140046158
   14000a55c:	mov    r8d,ebx
   14000a55f:	mov    rdx,r14
   14000a562:	lea    rcx,[rbp+0x1f70]
   14000a569:	call   0x140046158
   14000a56e:	mov    r8d,ebx
   14000a571:	lea    rdx,[rip+0x62678]        # 0x14006cbf0
   14000a578:	lea    rcx,[rbp+0x1f70]
   14000a57f:	call   0x140032848
   14000a584:	mov    edx,ebx
   14000a586:	lea    rcx,[rbp+0x1f70]
   14000a58d:	call   0x1400222c4
   14000a592:	test   rax,rax
   14000a595:	je     0x14000a5c6
   14000a597:	lea    rdx,[rbp+0x1f70]
   14000a59e:	mov    rcx,rsi
   14000a5a1:	call   0x140020fd4
   14000a5a6:	test   al,al
   14000a5a8:	je     0x14000a5c6
   14000a5aa:	lea    rcx,[rbp+0x2f70]
   14000a5b1:	call   0x140021dec
   14000a5b6:	test   al,al
   14000a5b8:	jne    0x14000a5c6
   14000a5ba:	mov    rcx,rsi
   14000a5bd:	call   0x140020a90
   14000a5c2:	test   al,al
   14000a5c4:	jne    0x14000a5eb
   14000a5c6:	mov    dl,0x1
   14000a5c8:	lea    rcx,[rip+0x8a291]        # 0x140094860
   14000a5cf:	call   0x14001bf4c
   14000a5d4:	mov    rcx,rdi
   14000a5d7:	call   0x140020a90
   14000a5dc:	mov    rdx,r14
   14000a5df:	lea    rcx,[rip+0x8a27a]        # 0x140094860
   14000a5e6:	call   0x14001bda4
   14000a5eb:	cmp    r12d,r15d
   14000a5ee:	je     0x14000a5fc
   14000a5f0:	cmp    r12d,0xffffffff
   14000a5f4:	je     0x14000a5fc
   14000a5f6:	cmp    r15d,0xffffffff
   14000a5fa:	jne    0x14000a613
   14000a5fc:	lea    rdx,[rbp+0xf70]
   14000a603:	mov    rcx,r13
   14000a606:	call   0x1400224c8
   14000a60b:	test   al,al
   14000a60d:	jne    0x14000a6a6
   14000a613:	mov    r8d,0x11
   14000a619:	lea    rdx,[rbp+0xf70]
   14000a620:	mov    rcx,rsi
   14000a623:	call   0x140021158
   14000a628:	mov    rdx,r13
   14000a62b:	mov    rcx,rdi
   14000a62e:	call   0x14002117c
   14000a633:	movabs r8,0x7fffffff7fffffff
   14000a63d:	mov    rdx,rsi
   14000a640:	mov    rcx,rdi
   14000a643:	call   0x140020834
   14000a648:	mov    rax,QWORD PTR [rdi+0x22b0]
   14000a64f:	cmp    DWORD PTR [rax+0x61a0],0x1
   14000a656:	jne    0x14000a66b
   14000a658:	xor    r9d,r9d
   14000a65b:	xor    r8d,r8d
   14000a65e:	lea    rdx,[rsp+0x28]
   14000a663:	mov    rcx,rsi
   14000a666:	call   0x140021078
   14000a66b:	mov    rax,QWORD PTR [rdi+0x22b0]
   14000a672:	cmp    DWORD PTR [rax+0x61a0],0x2
   14000a679:	jne    0x14000a696
   14000a67b:	lea    rdx,[rdi+0x22c8]
   14000a682:	cmp    QWORD PTR [rdx],0x0
   14000a686:	je     0x14000a696
   14000a688:	xor    r9d,r9d
   14000a68b:	xor    r8d,r8d
   14000a68e:	mov    rcx,rsi
   14000a691:	call   0x140021078
   14000a696:	mov    rcx,rsi
   14000a699:	call   0x1400207cc
   14000a69e:	mov    rcx,rdi
   14000a6a1:	call   0x140020a90
   14000a6a6:	mov    r8,rbx
   14000a6a9:	lea    rdx,[rbp+0xf70]
   14000a6b0:	mov    rcx,r13
   14000a6b3:	call   0x140046158
   14000a6b8:	mov    rax,QWORD PTR [rdi+0x22b0]
   14000a6bf:	cmp    DWORD PTR [rax+0x61a0],0x1
   14000a6c6:	jne    0x14000a6d8
   14000a6c8:	xor    r8d,r8d
   14000a6cb:	lea    rdx,[rsp+0x28]
   14000a6d0:	mov    rcx,rsi
   14000a6d3:	call   0x1400570f4
   14000a6d8:	mov    rax,QWORD PTR [rdi+0x22b0]
   14000a6df:	cmp    DWORD PTR [rax+0x61a0],0x2
   14000a6e6:	jne    0x14000a700
   14000a6e8:	lea    rdx,[rdi+0x22c8]
   14000a6ef:	cmp    QWORD PTR [rdx],0x0
   14000a6f3:	je     0x14000a700
   14000a6f5:	xor    r8d,r8d
   14000a6f8:	mov    rcx,rsi
   14000a6fb:	call   0x1400570f4
   14000a700:	cmp    QWORD PTR [rdi+0x7f98],0x0
   14000a708:	jbe    0x14000a716
   14000a70a:	lea    rcx,[rbp+0xf70]
   14000a711:	call   0x1400570f4
   14000a716:	mov    dl,0x1
   14000a718:	lea    rcx,[rip+0x8a141]        # 0x140094860
   14000a71f:	call   0x14001bf4c
   14000a724:	cmp    BYTE PTR [rdi+0x7f8f],0x0
   14000a72b:	je     0x14000a73f
   14000a72d:	mov    ecx,0xd24
   14000a732:	call   0x140040118
   14000a737:	mov    rcx,rax
   14000a73a:	call   0x14001796c
   14000a73f:	mov    rcx,rdi
   14000a742:	call   0x14000a8d8
   14000a747:	nop
   14000a748:	lea    rcx,[rsp+0x40]
   14000a74d:	call   0x140020758
   14000a752:	mov    rcx,QWORD PTR [rbp+0x3f70]
   14000a759:	xor    rcx,rsp
   14000a75c:	call   0x140055f90
   14000a761:	mov    rbx,QWORD PTR [rsp+0x40d0]
   14000a769:	add    rsp,0x4080
   14000a770:	pop    r15
   14000a772:	pop    r14
   14000a774:	pop    r13
   14000a776:	pop    r12
   14000a778:	pop    rdi
   14000a779:	pop    rsi
   14000a77a:	pop    rbp
   14000a77b:	ret    
   14000a77c:	mov    QWORD PTR [rsp+0x8],rbx
   14000a781:	push   rdi
   14000a782:	sub    rsp,0x20
   14000a786:	mov    rax,QWORD PTR [rdx+0x1040]
   14000a78d:	mov    rbx,rdx
   14000a790:	mov    rdi,rcx
   14000a793:	cmp    QWORD PTR [rcx+0x22c8],rax
   14000a79a:	jae    0x14000a7b6
   14000a79c:	mov    ecx,DWORD PTR [rdx+0x1c]
   14000a79f:	call   0x140021f7c
   14000a7a4:	test   al,al
   14000a7a6:	jne    0x14000a7b6
   14000a7a8:	mov    rax,QWORD PTR [rbx+0x1040]
   14000a7af:	mov    QWORD PTR [rdi+0x22c8],rax
   14000a7b6:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a7bb:	add    rsp,0x20
   14000a7bf:	pop    rdi
   14000a7c0:	ret    
   14000a7c1:	int3   
   14000a7c2:	int3   
   14000a7c3:	int3   
   14000a7c4:	mov    r11,rsp
   14000a7c7:	push   rdi
   14000a7c8:	sub    rsp,0x50
   14000a7cc:	mov    QWORD PTR [r11-0x38],0xfffffffffffffffe
   14000a7d4:	mov    rax,QWORD PTR [rcx+0x22b0]
   14000a7db:	cmp    BYTE PTR [rax+0x615e],0x0
   14000a7e2:	jne    0x14000a855
   14000a7e4:	and    QWORD PTR [r11-0x30],0x0
   14000a7e9:	and    QWORD PTR [r11-0x28],0x0
   14000a7ee:	and    QWORD PTR [r11-0x20],0x0
   14000a7f3:	and    QWORD PTR [r11-0x18],0x0
   14000a7f8:	lea    rdx,[r11-0x30]
   14000a7fc:	call   0x140008a90
   14000a801:	test   al,al
   14000a803:	je     0x14000a843
   14000a805:	mov    rdi,QWORD PTR [rsp+0x30]
   14000a80a:	mov    edx,0x1a
   14000a80f:	mov    rcx,QWORD PTR [rsp+0x28]
   14000a814:	call   0x1400590e0
   14000a819:	test   rax,rax
   14000a81c:	je     0x14000a829
   14000a81e:	mov    rdi,rax
   14000a821:	sub    rdi,QWORD PTR [rsp+0x28]
   14000a826:	sar    rdi,1
   14000a829:	lea    rcx,[rip+0x62428]        # 0x14006cc58
   14000a830:	call   0x14001796c
   14000a835:	mov    rdx,rdi
   14000a838:	mov    rcx,QWORD PTR [rsp+0x28]
   14000a83d:	call   0x1400171a4
   14000a842:	nop
   14000a843:	cmp    QWORD PTR [rsp+0x28],0x0
   14000a849:	je     0x14000a855
   14000a84b:	mov    rcx,QWORD PTR [rsp+0x28]
   14000a850:	call   0x14005a938
   14000a855:	add    rsp,0x50
   14000a859:	pop    rdi
   14000a85a:	ret    
   14000a85b:	int3   
   14000a85c:	rex push rbx
   14000a85e:	sub    rsp,0x20
   14000a862:	mov    rbx,rcx
   14000a865:	call   0x140008a60
   14000a86a:	mov    ecx,eax
   14000a86c:	mov    rax,QWORD PTR [rbx+0x7fb8]
   14000a873:	cmp    rax,rcx
   14000a876:	jle    0x14000a884
   14000a878:	sub    rax,rcx
   14000a87b:	mov    QWORD PTR [rbx+0x7fb8],rax
   14000a882:	jmp    0x14000a88c
   14000a884:	and    QWORD PTR [rbx+0x7fb8],0x0
   14000a88c:	add    rsp,0x20
   14000a890:	pop    rbx
   14000a891:	ret    
   14000a892:	int3   
   14000a893:	int3   
   14000a894:	rex push rbx
   14000a896:	sub    rsp,0x20
   14000a89a:	mov    rbx,rcx
   14000a89d:	call   0x140021278
   14000a8a2:	test   al,al
   14000a8a4:	jne    0x14000a8aa
   14000a8a6:	xor    al,al
   14000a8a8:	jmp    0x14000a8d2
   14000a8aa:	xor    edx,edx
   14000a8ac:	mov    rcx,rbx
   14000a8af:	call   0x140008f4c
   14000a8b4:	test   al,al
   14000a8b6:	jne    0x14000a8d0
   14000a8b8:	lea    rdx,[rbx+0x26]
   14000a8bc:	mov    ecx,0x38
   14000a8c1:	call   0x1400013b0
   14000a8c6:	mov    rcx,rbx
   14000a8c9:	call   0x1400207cc
   14000a8ce:	jmp    0x14000a8a6
   14000a8d0:	mov    al,0x1
   14000a8d2:	add    rsp,0x20
   14000a8d6:	pop    rbx
   14000a8d7:	ret    
   14000a8d8:	rex push rbx
   14000a8da:	mov    eax,0x1080
   14000a8df:	call   0x140055f20
   14000a8e4:	sub    rsp,rax
   14000a8e7:	mov    rax,QWORD PTR [rip+0x775f2]        # 0x140081ee0
   14000a8ee:	xor    rax,rsp
   14000a8f1:	mov    QWORD PTR [rsp+0x1070],rax
   14000a8f9:	and    QWORD PTR [rsp+0x1030],0x0
   14000a902:	and    QWORD PTR [rsp+0x1038],0x0
   14000a90b:	and    QWORD PTR [rsp+0x1040],0x0
   14000a914:	cmp    QWORD PTR [rcx+0x7f98],0x0
   14000a91c:	jbe    0x14000a963
   14000a91e:	lea    rbx,[rcx+0x26]
   14000a922:	xor    r8d,r8d
   14000a925:	mov    rcx,rbx
   14000a928:	lea    rdx,[rsp+0x20]
   14000a92d:	call   0x140023280
   14000a932:	test   al,al
   14000a934:	je     0x14000a963
   14000a936:	mov    eax,0xffffffff
   14000a93b:	cmp    QWORD PTR [rsp+0x1020],rax
   14000a943:	jbe    0x14000a963
   14000a945:	mov    rdx,rbx
   14000a948:	mov    ecx,0x4a
   14000a94d:	call   0x1400013b0
   14000a952:	mov    edx,0x1
   14000a957:	lea    rcx,[rip+0x89f02]        # 0x140094860
   14000a95e:	call   0x14001bf08
   14000a963:	mov    rcx,QWORD PTR [rsp+0x1070]
   14000a96b:	xor    rcx,rsp
   14000a96e:	call   0x140055f90
   14000a973:	add    rsp,0x1080
   14000a97a:	pop    rbx
   14000a97b:	ret    
   14000a97c:	rex push rbp
   14000a97e:	push   rbx
   14000a97f:	push   rsi
   14000a980:	push   rdi
   14000a981:	push   r12
   14000a983:	push   r13
   14000a985:	push   r14
   14000a987:	push   r15
   14000a989:	lea    rbp,[rsp-0x1868]
   14000a991:	mov    eax,0x1968
   14000a996:	call   0x140055f20
   14000a99b:	sub    rsp,rax
   14000a99e:	mov    QWORD PTR [rbp-0x70],0xfffffffffffffffe
   14000a9a6:	mov    rax,QWORD PTR [rip+0x77533]        # 0x140081ee0
   14000a9ad:	xor    rax,rsp
   14000a9b0:	mov    QWORD PTR [rbp+0x1850],rax
   14000a9b7:	mov    r12b,r9b
   14000a9ba:	mov    BYTE PTR [rsp+0x52],r9b
   14000a9bf:	mov    r15,r8
   14000a9c2:	mov    ebx,edx
   14000a9c4:	mov    r14,rcx
   14000a9c7:	lea    rcx,[rsp+0x58]
   14000a9cc:	call   0x140036890
   14000a9d1:	nop
   14000a9d2:	xor    r8d,r8d
   14000a9d5:	mov    dl,r8b
   14000a9d8:	mov    BYTE PTR [rsp+0x50],dl
   14000a9dc:	lea    esi,[r8+0x5]
   14000a9e0:	lea    r9d,[r8+0x1]
   14000a9e4:	lea    r10d,[r8+0x4]
   14000a9e8:	lea    r11d,[r8+0x10]
   14000a9ec:	cmp    BYTE PTR [r14+0x7f94],r8b
   14000a9f3:	je     0x14000aaa3
   14000a9f9:	test   ebx,ebx
   14000a9fb:	je     0x14000b2a8
   14000aa01:	cmp    ebx,r10d
   14000aa04:	je     0x14000aaa3
   14000aa0a:	mov    edx,r11d
   14000aa0d:	lea    rcx,[rbp+0x38]
   14000aa11:	call   0x140019168
   14000aa16:	lea    r10d,[rsi-0x4]
   14000aa1a:	mov    BYTE PTR [rsp+0x50],r10b
   14000aa1f:	lea    rdi,[r14+0x1030]
   14000aa26:	lea    rcx,[r14+0x34d4]
   14000aa2d:	mov    r9,QWORD PTR [r14+0x22b0]
   14000aa34:	add    r9,0x5030
   14000aa3b:	lea    rax,[rbp+0x30]
   14000aa3f:	mov    QWORD PTR [rsp+0x40],rax
   14000aa44:	xor    edx,edx
   14000aa46:	mov    QWORD PTR [rsp+0x38],rdx
   14000aa4b:	mov    eax,DWORD PTR [r14+0x34d0]
   14000aa52:	mov    DWORD PTR [rsp+0x30],eax
   14000aa56:	lea    rax,[rbp+0x38]
   14000aa5a:	mov    QWORD PTR [rsp+0x28],rax
   14000aa5f:	mov    QWORD PTR [rsp+0x20],rcx
   14000aa64:	mov    r8d,esi
   14000aa67:	mov    dl,r10b
   14000aa6a:	mov    rcx,rdi
   14000aa6d:	call   0x1400185ec
   14000aa72:	xor    r8d,r8d
   14000aa75:	test   r12b,r12b
   14000aa78:	jne    0x14000aa8d
   14000aa7a:	lea    r8d,[rsi+0xb]
   14000aa7e:	lea    rdx,[rbp+0x38]
   14000aa82:	mov    rcx,r14
   14000aa85:	call   0x1400212ac
   14000aa8a:	xor    r8d,r8d
   14000aa8d:	mov    QWORD PTR [rbp-0x80],rdi
   14000aa91:	mov    dl,BYTE PTR [rsp+0x50]
   14000aa95:	mov    r9d,0x1
   14000aa9b:	lea    r10d,[r9+0x3]
   14000aa9f:	lea    r11d,[r9+0xf]
   14000aaa3:	test   ebx,ebx
   14000aaa5:	je     0x14000b2a8
   14000aaab:	cmp    ebx,r9d
   14000aaae:	je     0x14000b162
   14000aab4:	jle    0x14000b30e
   14000aaba:	mov    r13d,0x3
   14000aac0:	cmp    ebx,r13d
   14000aac3:	jle    0x14000ac8d
   14000aac9:	cmp    ebx,r10d
   14000aacc:	je     0x14000ab52
   14000aad2:	cmp    ebx,esi
   14000aad4:	jne    0x14000b30e
   14000aada:	lea    rbx,[r14+0x5808]
   14000aae1:	test   r15,r15
   14000aae4:	cmovne rbx,r15
   14000aae8:	mov    QWORD PTR [rbx+0x4],rsi
   14000aaec:	movzx  edi,r8w
   14000aaf0:	mov    eax,r8d
   14000aaf3:	cmp    BYTE PTR [rbx+0x10],r8b
   14000aaf7:	cmovne eax,r10d
   14000aafb:	mov    DWORD PTR [rbx+0x8],eax
   14000aafe:	cmp    BYTE PTR [rbx+0x1c],r8b
   14000ab02:	je     0x14000ab07
   14000ab04:	mov    edi,r9d
   14000ab07:	mov    rdx,rsi
   14000ab0a:	lea    rcx,[rsp+0x58]
   14000ab0f:	call   0x140036b5c
   14000ab14:	mov    edx,DWORD PTR [rbx+0x8]
   14000ab17:	lea    rcx,[rsp+0x58]
   14000ab1c:	call   0x140036b5c
   14000ab21:	movzx  edx,di
   14000ab24:	lea    rcx,[rsp+0x58]
   14000ab29:	call   0x140036b5c
   14000ab2e:	xor    edx,edx
   14000ab30:	test   r12b,r12b
   14000ab33:	cmovne r14,rdx
   14000ab37:	xor    r9d,r9d
   14000ab3a:	mov    r8d,r13d
   14000ab3d:	mov    rdx,r14
   14000ab40:	lea    rcx,[rsp+0x58]
   14000ab45:	call   0x140036c04
   14000ab4a:	mov    DWORD PTR [rbx+0xc],eax
   14000ab4d:	jmp    0x14000b30e
   14000ab52:	lea    rsi,[r14+0x34b8]
   14000ab59:	test   r15,r15
   14000ab5c:	cmovne rsi,r15
   14000ab60:	mov    QWORD PTR [rsi+0x4],0x4
   14000ab68:	mov    BYTE PTR [rsi+0x14],r9b
   14000ab6c:	mov    DWORD PTR [rsi+0x18],0xf
   14000ab73:	mov    rdx,r10
   14000ab76:	lea    rcx,[rsp+0x58]
   14000ab7b:	call   0x140036b5c
   14000ab80:	mov    edx,DWORD PTR [rsi+0x8]
   14000ab83:	lea    rcx,[rsp+0x58]
   14000ab88:	call   0x140036b5c
   14000ab8d:	xor    edx,edx
   14000ab8f:	lea    rcx,[rsp+0x58]
   14000ab94:	call   0x140036b5c
   14000ab99:	mov    r15d,0x1
   14000ab9f:	mov    edx,r15d
   14000aba2:	lea    rcx,[rsp+0x58]
   14000aba7:	call   0x140036b5c
   14000abac:	mov    edx,DWORD PTR [rsi+0x18]
   14000abaf:	lea    rcx,[rsp+0x58]
   14000abb4:	call   0x140036970
   14000abb9:	lea    rbx,[rsi+0x1c]
   14000abbd:	movups xmm0,XMMWORD PTR [r14+0x7fa2]
   14000abc5:	movdqu XMMWORD PTR [rbx],xmm0
   14000abc9:	lea    rdi,[rsi+0x2c]
   14000abcd:	mov    r9,QWORD PTR [r14+0x22b0]
   14000abd4:	add    r9,0x5030
   14000abdb:	lea    rcx,[r14+0x1030]
   14000abe2:	mov    QWORD PTR [rsp+0x40],rdi
   14000abe7:	xor    edx,edx
   14000abe9:	mov    QWORD PTR [rsp+0x38],rdx
   14000abee:	mov    eax,DWORD PTR [rsi+0x18]
   14000abf1:	mov    DWORD PTR [rsp+0x30],eax
   14000abf5:	mov    QWORD PTR [rsp+0x28],rdx
   14000abfa:	mov    QWORD PTR [rsp+0x20],rbx
   14000abff:	lea    r8d,[r15+0x4]
   14000ac03:	mov    dl,r15b
   14000ac06:	call   0x1400185ec
   14000ac0b:	lea    r8d,[r15+0xf]
   14000ac0f:	mov    rdx,rbx
   14000ac12:	lea    rcx,[rsp+0x58]
   14000ac17:	call   0x140036aac
   14000ac1c:	mov    r15d,0x8
   14000ac22:	mov    r8d,r15d
   14000ac25:	mov    rdx,rdi
   14000ac28:	lea    rcx,[rsp+0x58]
   14000ac2d:	call   0x140036aac
   14000ac32:	lea    rcx,[rbp-0x60]
   14000ac36:	call   0x1400454a4
   14000ac3b:	mov    r8d,r15d
   14000ac3e:	mov    rdx,rdi
   14000ac41:	lea    rcx,[rbp-0x60]
   14000ac45:	call   0x1400454e4
   14000ac4a:	lea    rdx,[rbp+0x10]
   14000ac4e:	lea    rcx,[rbp-0x60]
   14000ac52:	call   0x14004538c
   14000ac57:	lea    r8d,[r15-0x4]
   14000ac5b:	lea    rdx,[rbp+0x10]
   14000ac5f:	lea    rcx,[rsp+0x58]
   14000ac64:	call   0x140036aac
   14000ac69:	xor    eax,eax
   14000ac6b:	test   r12b,r12b
   14000ac6e:	cmovne r14,rax
   14000ac72:	xor    r9d,r9d
   14000ac75:	mov    r8d,r13d
   14000ac78:	mov    rdx,r14
   14000ac7b:	lea    rcx,[rsp+0x58]
   14000ac80:	call   0x140036c04
   14000ac85:	mov    DWORD PTR [rsi+0xc],eax
   14000ac88:	jmp    0x14000b30e
   14000ac8d:	mov    QWORD PTR [rbp+0x10],r8
   14000ac91:	mov    QWORD PTR [rbp+0x18],r8
   14000ac95:	mov    QWORD PTR [rbp+0x20],r8
   14000ac99:	mov    QWORD PTR [rbp+0x28],r8
   14000ac9d:	mov    r12d,0x2
   14000aca3:	cmp    ebx,r12d
   14000aca6:	sete   sil
   14000acaa:	lea    rax,[r14+0x34f0]
   14000acb1:	lea    rbx,[r14+0x5848]
   14000acb8:	test   sil,sil
   14000acbb:	cmovne rbx,rax
   14000acbf:	test   r15,r15
   14000acc2:	cmovne rbx,r15
   14000acc6:	mov    al,sil
   14000acc9:	neg    al
   14000accb:	sbb    ecx,ecx
   14000accd:	add    ecx,r13d
   14000acd0:	mov    DWORD PTR [rbx+0x4],ecx
   14000acd3:	mov    DWORD PTR [rbx+0x1094],r8d
   14000acda:	mov    eax,r12d
   14000acdd:	lea    ecx,[r12+0x4]
   14000ace2:	cmp    BYTE PTR [rbx+0x10],r8b
   14000ace6:	cmovne eax,ecx
   14000ace9:	mov    DWORD PTR [rbx+0x8],eax
   14000acec:	lea    r15d,[r12+0x6]
   14000acf1:	cmp    BYTE PTR [rbx+0x1098],r8b
   14000acf8:	je     0x14000acfe
   14000acfa:	or     DWORD PTR [rbx+0x8],r15d
   14000acfe:	cmp    BYTE PTR [rbx+0x1099],r8b
   14000ad05:	je     0x14000ad0b
   14000ad07:	or     DWORD PTR [rbx+0x8],r11d
   14000ad0b:	cmp    BYTE PTR [rbx+0x19],0x32
   14000ad0f:	ja     0x14000ad16
   14000ad11:	mov    eax,r8d
   14000ad14:	jmp    0x14000ad1d
   14000ad16:	movzx  eax,BYTE PTR [rbx+0x19]
   14000ad1a:	sub    eax,0x32
   14000ad1d:	movzx  edi,BYTE PTR [rbx+0x1a]
   14000ad21:	shl    edi,0x7
   14000ad24:	or     edi,eax
   14000ad26:	cmp    BYTE PTR [rbx+0x10f1],r8b
   14000ad2d:	je     0x14000ad38
   14000ad2f:	mov    DWORD PTR [rbx+0x1094],r9d
   14000ad36:	jmp    0x14000ad54
   14000ad38:	mov    eax,0x20000
   14000ad3d:	mov    rcx,QWORD PTR [rbx+0x10f8]
   14000ad44:	jmp    0x14000ad4f
   14000ad46:	add    edi,0x400
   14000ad4c:	add    rax,rax
   14000ad4f:	cmp    rax,rcx
   14000ad52:	jb     0x14000ad46
   14000ad54:	cmp    BYTE PTR [rbx+0x10f0],r8b
   14000ad5b:	je     0x14000ad60
   14000ad5d:	or     edi,0x40
   14000ad60:	cmp    BYTE PTR [rbx+0x1102],r8b
   14000ad67:	je     0x14000ad6d
   14000ad69:	or     DWORD PTR [rbx+0x8],0x20
   14000ad6d:	cmp    BYTE PTR [rbx+0x1100],r8b
   14000ad74:	je     0x14000ad82
   14000ad76:	test   sil,sil
   14000ad79:	jne    0x14000ad82
   14000ad7b:	mov    DWORD PTR [rbx+0x8],0x40
   14000ad82:	cmp    DWORD PTR [rbx+0x1070],r12d
   14000ad89:	jne    0x14000ad92
   14000ad8b:	or     DWORD PTR [rbx+0x1094],r10d
   14000ad92:	cmp    BYTE PTR [rbx+0x109a],r8b
   14000ad99:	je     0x14000ada2
   14000ad9b:	or     DWORD PTR [rbx+0x1094],r15d
   14000ada2:	test   dl,dl
   14000ada4:	je     0x14000adb1
   14000ada6:	mov    rax,QWORD PTR [rbp+0x30]
   14000adaa:	mov    QWORD PTR [rbx+0x10c2],rax
   14000adb1:	cmp    BYTE PTR [rbx+0x109b],r8b
   14000adb8:	je     0x14000adc9
   14000adba:	mov    r8,rbx
   14000adbd:	lea    rdx,[rbp+0x10]
   14000adc1:	mov    rcx,r14
   14000adc4:	call   0x140009a8c
   14000adc9:	cmp    DWORD PTR [rbx+0x1070],r13d
   14000add0:	jne    0x14000ade1
   14000add2:	mov    r8,rbx
   14000add5:	lea    rdx,[rbp+0x10]
   14000add9:	mov    rcx,r14
   14000addc:	call   0x140009ce8
   14000ade1:	xor    edx,edx
   14000ade3:	mov    BYTE PTR [rsp+0x51],dl
   14000ade7:	mov    eax,DWORD PTR [r14+0x22dc]
   14000adee:	lea    r8d,[rdx+0x1]
   14000adf2:	test   eax,eax
   14000adf4:	je     0x14000ae2b
   14000adf6:	cmp    DWORD PTR [r14+0x22e0],edx
   14000adfd:	jne    0x14000ae2b
   14000adff:	cmp    DWORD PTR [r14+0x22e4],edx
   14000ae06:	jne    0x14000ae2b
   14000ae08:	cmp    QWORD PTR [rbx+0x1040],rdx
   14000ae0f:	je     0x14000ae2b
   14000ae11:	cmp    eax,r8d
   14000ae14:	sete   cl
   14000ae17:	mov    BYTE PTR [rsp+0x51],cl
   14000ae1b:	test   cl,cl
   14000ae1d:	je     0x14000ae2b
   14000ae1f:	or     DWORD PTR [rbx+0x1094],r12d
   14000ae26:	xor    r12d,r12d
   14000ae29:	jmp    0x14000ae75
   14000ae2b:	xor    r12d,r12d
   14000ae2e:	test   sil,sil
   14000ae31:	je     0x14000ae75
   14000ae33:	test   eax,eax
   14000ae35:	jne    0x14000ae49
   14000ae37:	cmp    DWORD PTR [r14+0x22e0],r12d
   14000ae3e:	jne    0x14000ae49
   14000ae40:	cmp    DWORD PTR [r14+0x22e4],r12d
   14000ae47:	je     0x14000ae75
   14000ae49:	cmp    eax,r8d
   14000ae4c:	jg     0x14000ae63
   14000ae4e:	cmp    DWORD PTR [r14+0x22e0],r8d
   14000ae55:	jg     0x14000ae63
   14000ae57:	cmp    DWORD PTR [r14+0x22e4],r8d
   14000ae5e:	mov    r9b,r8b
   14000ae61:	jle    0x14000ae66
   14000ae63:	mov    r9b,r12b
   14000ae66:	mov    r8,rbx
   14000ae69:	lea    rdx,[rbp+0x10]
   14000ae6d:	mov    rcx,r14
   14000ae70:	call   0x140009e60
   14000ae75:	mov    r8d,0x800
   14000ae7b:	lea    rdx,[rbp+0x850]
   14000ae82:	lea    rcx,[rbx+0x20]
   14000ae86:	call   0x140031234
   14000ae8b:	cmp    BYTE PTR [rbx+0x10f3],r12b
   14000ae92:	je     0x14000aea7
   14000ae94:	lea    r8,[rbp+0x850]
   14000ae9b:	lea    rdx,[rbp+0x10]
   14000ae9f:	mov    rcx,r14
   14000aea2:	call   0x14000a12c
   14000aea7:	cmp    DWORD PTR [rbx+0x1108],r12d
   14000aeae:	je     0x14000aebf
   14000aeb0:	mov    r8,rbx
   14000aeb3:	lea    rdx,[rbp+0x10]
   14000aeb7:	mov    rcx,r14
   14000aeba:	call   0x14000a000
   14000aebf:	cmp    QWORD PTR [rbx+0x1028],r12
   14000aec6:	je     0x14000aed7
   14000aec8:	mov    r8,rbx
   14000aecb:	lea    rdx,[rbp+0x10]
   14000aecf:	mov    rcx,r14
   14000aed2:	call   0x14000a1bc
   14000aed7:	cmp    QWORD PTR [rbp+0x18],r12
   14000aedb:	je     0x14000aee5
   14000aedd:	mov    ecx,0x1
   14000aee2:	or     DWORD PTR [rbx+0x8],ecx
   14000aee5:	movsxd rdx,DWORD PTR [rbx+0x4]
   14000aee9:	lea    rcx,[rsp+0x58]
   14000aeee:	call   0x140036b5c
   14000aef3:	mov    edx,DWORD PTR [rbx+0x8]
   14000aef6:	lea    rcx,[rsp+0x58]
   14000aefb:	call   0x140036b5c
   14000af00:	mov    r8,QWORD PTR [rbp+0x18]
   14000af04:	test   r8,r8
   14000af07:	je     0x14000af16
   14000af09:	mov    rdx,r8
   14000af0c:	lea    rcx,[rsp+0x58]
   14000af11:	call   0x140036b5c
   14000af16:	mov    r8,QWORD PTR [rbx+0x1068]
   14000af1d:	mov    rdx,QWORD PTR [rbx+0x1058]
   14000af24:	lea    rcx,[rsp+0x58]
   14000af29:	call   0x140036b04
   14000af2e:	mov    edx,DWORD PTR [rbx+0x1094]
   14000af34:	lea    rcx,[rsp+0x58]
   14000af39:	call   0x140036b5c
   14000af3e:	mov    r8,QWORD PTR [rbx+0x1068]
   14000af45:	mov    rdx,QWORD PTR [rbx+0x1060]
   14000af4c:	lea    rcx,[rsp+0x58]
   14000af51:	call   0x140036b04
   14000af56:	mov    edx,DWORD PTR [rbx+0x1c]
   14000af59:	lea    rcx,[rsp+0x58]
   14000af5e:	call   0x140036b5c
   14000af63:	cmp    BYTE PTR [rsp+0x51],r12b
   14000af68:	je     0x14000af83
   14000af6a:	lea    rcx,[rbx+0x1040]
   14000af71:	call   0x140047574
   14000af76:	mov    rdx,rax
   14000af79:	lea    rcx,[rsp+0x58]
   14000af7e:	call   0x1400369f8
   14000af83:	test   BYTE PTR [rbx+0x1094],0x4
   14000af8a:	je     0x14000af9c
   14000af8c:	mov    edx,DWORD PTR [rbx+0x1074]
   14000af92:	lea    rcx,[rsp+0x58]
   14000af97:	call   0x1400369f8
   14000af9c:	mov    edx,edi
   14000af9e:	mov    r8d,0x3fff
   14000afa4:	lea    rcx,[rsp+0x58]
   14000afa9:	call   0x140036b04
   14000afae:	mov    eax,0x1
   14000afb3:	cmp    DWORD PTR [rbx+0x1104],eax
   14000afb9:	sete   al
   14000afbc:	mov    BYTE PTR [rbx+0x18],al
   14000afbf:	movzx  edx,al
   14000afc2:	lea    rcx,[rsp+0x58]
   14000afc7:	call   0x140036b5c
   14000afcc:	test   sil,sil
   14000afcf:	je     0x14000afe0
   14000afd1:	lea    rdx,[rbp+0x850]
   14000afd8:	mov    rcx,r14
   14000afdb:	call   0x14000c080
   14000afe0:	mov    r8d,0x800
   14000afe6:	lea    rdx,[rbp+0x50]
   14000afea:	lea    rcx,[rbp+0x850]
   14000aff1:	call   0x140048d2c
   14000aff6:	lea    rax,[rbp+0x50]
   14000affa:	or     rdi,0xffffffffffffffff
   14000affe:	inc    rdi
   14000b001:	cmp    BYTE PTR [rax+rdi*1],r12b
   14000b005:	jne    0x14000affe
   14000b007:	mov    rdx,rdi
   14000b00a:	lea    rcx,[rsp+0x58]
   14000b00f:	call   0x140036b5c
   14000b014:	mov    r8,rdi
   14000b017:	lea    rdx,[rbp+0x50]
   14000b01b:	lea    rcx,[rsp+0x58]
   14000b020:	call   0x140036aac
   14000b025:	mov    r8,QWORD PTR [rbp+0x18]
   14000b029:	test   r8,r8
   14000b02c:	je     0x14000b03c
   14000b02e:	mov    rdx,QWORD PTR [rbp+0x10]
   14000b032:	lea    rcx,[rsp+0x58]
   14000b037:	call   0x140036aac
   14000b03c:	test   sil,sil
   14000b03f:	je     0x14000b04c
   14000b041:	mov    rdx,rbx
   14000b044:	mov    rcx,r14
   14000b047:	call   0x14000a77c
   14000b04c:	mov    rdx,r14
   14000b04f:	mov    dil,BYTE PTR [rsp+0x52]
   14000b054:	test   dil,dil
   14000b057:	cmovne rdx,r12
   14000b05b:	lea    r9,[rbp-0x78]
   14000b05f:	mov    r8d,r13d
   14000b062:	lea    rcx,[rsp+0x58]
   14000b067:	call   0x140036c04
   14000b06c:	mov    DWORD PTR [rbx+0xc],eax
   14000b06f:	xor    r8d,r8d
   14000b072:	cmp    BYTE PTR [r14+0x3496],r8b
   14000b079:	je     0x14000b150
   14000b07f:	mov    rax,QWORD PTR [r14+0x22b0]
   14000b086:	mov    ecx,DWORD PTR [rax+0x2018]
   14000b08c:	test   ecx,ecx
   14000b08e:	je     0x14000b150
   14000b094:	test   dil,dil
   14000b097:	jne    0x14000b150
   14000b09d:	cmp    BYTE PTR [rbp+0x18d0],r8b
   14000b0a4:	jne    0x14000b150
   14000b0aa:	test   sil,sil
   14000b0ad:	jne    0x14000b0d6
   14000b0af:	movzx  eax,WORD PTR [rbx+0x20]
   14000b0b3:	cmp    ax,WORD PTR [rip+0x61c66]        # 0x14006cd20
   14000b0ba:	jne    0x14000b0d6
   14000b0bc:	movzx  eax,WORD PTR [rbx+0x22]
   14000b0c0:	cmp    ax,WORD PTR [rip+0x61c5b]        # 0x14006cd22
   14000b0c7:	jne    0x14000b0d6
   14000b0c9:	movzx  eax,WORD PTR [rbx+0x24]
   14000b0cd:	cmp    ax,WORD PTR [rip+0x61c50]        # 0x14006cd24
   14000b0d4:	je     0x14000b150
   14000b0d6:	mov    rdx,QWORD PTR [rbp-0x78]
   14000b0da:	test   rdx,rdx
   14000b0dd:	je     0x14000b150
   14000b0df:	test   sil,sil
   14000b0e2:	je     0x14000b0f6
   14000b0e4:	mov    rdx,QWORD PTR [rbx+0x1058]
   14000b0eb:	call   0x140034c98
   14000b0f0:	mov    rdx,QWORD PTR [rbp-0x78]
   14000b0f4:	jmp    0x14000b0fd
   14000b0f6:	mov    al,BYTE PTR [r14+0x3450]
   14000b0fd:	test   sil,sil
   14000b100:	je     0x14000b109
   14000b102:	mov    BYTE PTR [r14+0x3450],al
   14000b109:	test   al,al
   14000b10b:	je     0x14000b13b
   14000b10d:	mov    al,BYTE PTR [rsp+0x50]
   14000b111:	neg    al
   14000b113:	sbb    r9,r9
   14000b116:	lea    rax,[rbp+0x38]
   14000b11a:	and    r9,rax
   14000b11d:	mov    r8d,DWORD PTR [rbx+0xc]
   14000b121:	lea    rcx,[r14+0x22f0]
   14000b128:	mov    rax,QWORD PTR [r14+0x7f78]
   14000b12f:	mov    QWORD PTR [rsp+0x20],rax
   14000b134:	call   0x140034a4c
   14000b139:	jmp    0x14000b150
   14000b13b:	mov    edx,DWORD PTR [rbx+0xc]
   14000b13e:	mov    rcx,r14
   14000b141:	call   0x140008a60
   14000b146:	add    eax,0x10
   14000b149:	add    QWORD PTR [r14+0x7fb8],rax
   14000b150:	mov    rcx,QWORD PTR [rbp+0x10]
   14000b154:	test   rcx,rcx
   14000b157:	je     0x14000b30e
   14000b15d:	jmp    0x14000b2a1
   14000b162:	mov    rsi,r8
   14000b165:	mov    QWORD PTR [rbp+0x10],r8
   14000b169:	mov    rbx,r8
   14000b16c:	mov    QWORD PTR [rbp+0x18],rbx
   14000b170:	mov    QWORD PTR [rbp+0x20],r8
   14000b174:	mov    QWORD PTR [rbp+0x28],r8
   14000b178:	lea    rdi,[r14+0x3478]
   14000b17f:	test   r15,r15
   14000b182:	cmovne rdi,r15
   14000b186:	mov    DWORD PTR [rdi+0x4],r9d
   14000b18a:	mov    rdx,r9
   14000b18d:	lea    rcx,[rsp+0x58]
   14000b192:	call   0x140036b5c
   14000b197:	xor    r13d,r13d
   14000b19a:	cmp    BYTE PTR [rdi+0x1e],r13b
   14000b19e:	je     0x14000b1b7
   14000b1a0:	mov    r8,rdi
   14000b1a3:	lea    rdx,[rbp+0x10]
   14000b1a7:	mov    rcx,r14
   14000b1aa:	call   0x140009d80
   14000b1af:	mov    rbx,QWORD PTR [rbp+0x18]
   14000b1b3:	mov    rsi,QWORD PTR [rbp+0x10]
   14000b1b7:	mov    r15d,0x4
   14000b1bd:	mov    eax,r15d
   14000b1c0:	test   rbx,rbx
   14000b1c3:	lea    edx,[r15+0x1]
   14000b1c7:	cmovne eax,edx
   14000b1ca:	mov    edx,eax
   14000b1cc:	lea    rcx,[rsp+0x58]
   14000b1d1:	call   0x140036b5c
   14000b1d6:	test   rbx,rbx
   14000b1d9:	je     0x14000b1e8
   14000b1db:	mov    rdx,rbx
   14000b1de:	lea    rcx,[rsp+0x58]
   14000b1e3:	call   0x140036b5c
   14000b1e8:	movzx  eax,r13w
   14000b1ec:	cmp    BYTE PTR [r14+0x7f8d],r13b
   14000b1f3:	je     0x14000b212
   14000b1f5:	cmp    r13d,DWORD PTR [r14+0x7fb4]
   14000b1fc:	sbb    ax,ax
   14000b1ff:	mov    r12d,0x2
   14000b205:	and    ax,r12w
   14000b209:	or     ax,0x1
   14000b20d:	mov    r12b,BYTE PTR [rsp+0x52]
   14000b212:	cmp    BYTE PTR [r14+0x7f8c],r13b
   14000b219:	je     0x14000b21f
   14000b21b:	or     ax,r15w
   14000b21f:	cmp    BYTE PTR [r14+0x7f93],r13b
   14000b226:	je     0x14000b22c
   14000b228:	or     ax,0x8
   14000b22c:	cmp    BYTE PTR [r14+0x7f8f],r13b
   14000b233:	je     0x14000b239
   14000b235:	or     ax,0x10
   14000b239:	movzx  edx,ax
   14000b23c:	lea    rcx,[rsp+0x58]
   14000b241:	call   0x140036b5c
   14000b246:	cmp    BYTE PTR [r14+0x7f8d],r13b
   14000b24d:	je     0x14000b266
   14000b24f:	mov    eax,DWORD PTR [r14+0x7fb4]
   14000b256:	test   eax,eax
   14000b258:	je     0x14000b266
   14000b25a:	mov    edx,eax
   14000b25c:	lea    rcx,[rsp+0x58]
   14000b261:	call   0x140036b5c
   14000b266:	test   rbx,rbx
   14000b269:	je     0x14000b27b
   14000b26b:	mov    r8,rbx
   14000b26e:	mov    rdx,rsi
   14000b271:	lea    rcx,[rsp+0x58]
   14000b276:	call   0x140036aac
   14000b27b:	test   r12b,r12b
   14000b27e:	cmovne r14,r13
   14000b282:	xor    r9d,r9d
   14000b285:	lea    r8d,[r9+0x3]
   14000b289:	mov    rdx,r14
   14000b28c:	lea    rcx,[rsp+0x58]
   14000b291:	call   0x140036c04
   14000b296:	mov    DWORD PTR [rdi+0xc],eax
   14000b299:	test   rsi,rsi
   14000b29c:	je     0x14000b30e
   14000b29e:	mov    rcx,rsi
   14000b2a1:	call   0x14005a938
   14000b2a6:	jmp    0x14000b30e
   14000b2a8:	lea    rdx,[r14+0x3468]
   14000b2af:	mov    BYTE PTR [rdx],0x52
   14000b2b2:	mov    eax,DWORD PTR [rip+0x61a60]        # 0x14006cd18
   14000b2b8:	mov    DWORD PTR [r14+0x3469],eax
   14000b2bf:	movzx  eax,WORD PTR [rip+0x61a56]        # 0x14006cd1c
   14000b2c6:	mov    WORD PTR [r14+0x346d],ax
   14000b2ce:	mov    al,BYTE PTR [rip+0x61a4a]        # 0x14006cd1e
   14000b2d4:	mov    BYTE PTR [r14+0x346f],al
   14000b2db:	mov    r15d,0x8
   14000b2e1:	mov    DWORD PTR [r14+0x3470],r15d
   14000b2e8:	test   r12b,r12b
   14000b2eb:	jne    0x14000b2f8
   14000b2ed:	mov    r8d,r15d
   14000b2f0:	mov    rcx,r14
   14000b2f3:	call   0x1400212ac
   14000b2f8:	lea    rcx,[r14+0x22f0]
   14000b2ff:	mov    r8d,0x1
   14000b305:	mov    rdx,r14
   14000b308:	call   0x140034c34
   14000b30d:	nop
   14000b30e:	mov    rcx,QWORD PTR [rsp+0x58]
   14000b313:	test   rcx,rcx
   14000b316:	je     0x14000b31d
   14000b318:	call   0x14005a938
   14000b31d:	mov    rcx,QWORD PTR [rbp+0x1850]
   14000b324:	xor    rcx,rsp
   14000b327:	call   0x140055f90
   14000b32c:	add    rsp,0x1968
   14000b333:	pop    r15
   14000b335:	pop    r14
   14000b337:	pop    r13
   14000b339:	pop    r12
   14000b33b:	pop    rdi
   14000b33c:	pop    rsi
   14000b33d:	pop    rbx
   14000b33e:	pop    rbp
   14000b33f:	ret    
   14000b340:	rex push rbp
   14000b342:	push   rbx
   14000b343:	push   rsi
   14000b344:	push   rdi
   14000b345:	push   r12
   14000b347:	push   r13
   14000b349:	push   r14
   14000b34b:	push   r15
   14000b34d:	lea    rbp,[rsp-0x37f8]
   14000b355:	mov    eax,0x38f8
   14000b35a:	call   0x140055f20
   14000b35f:	sub    rsp,rax
   14000b362:	mov    QWORD PTR [rbp-0x48],0xfffffffffffffffe
   14000b36a:	mov    rax,QWORD PTR [rip+0x76b6f]        # 0x140081ee0
   14000b371:	xor    rax,rsp
   14000b374:	mov    QWORD PTR [rbp+0x37e0],rax
   14000b37b:	mov    r12b,r9b
   14000b37e:	mov    BYTE PTR [rsp+0x50],r9b
   14000b383:	mov    r15,r8
   14000b386:	mov    r14d,edx
   14000b389:	mov    rsi,rcx
   14000b38c:	xor    edi,edi
   14000b38e:	test   r9b,r9b
   14000b391:	jne    0x14000b3a0
   14000b393:	mov    rax,QWORD PTR [rcx]
   14000b396:	call   QWORD PTR [rax+0x20]
   14000b399:	mov    QWORD PTR [rsi+0x7f78],rax
   14000b3a0:	lea    r13,[rsi+0x7f88]
   14000b3a7:	mov    QWORD PTR [rbp-0x50],r13
   14000b3ab:	cmp    DWORD PTR [r13+0x0],0x3
   14000b3b0:	jne    0x14000b3d2
   14000b3b2:	mov    al,BYTE PTR [rbp+0x3860]
   14000b3b8:	mov    BYTE PTR [rsp+0x20],al
   14000b3bc:	mov    r9b,r12b
   14000b3bf:	mov    r8,r15
   14000b3c2:	mov    edx,r14d
   14000b3c5:	mov    rcx,rsi
   14000b3c8:	call   0x14000a97c
   14000b3cd:	jmp    0x14000bab2
   14000b3d2:	cmp    r14d,0x74
   14000b3d6:	je     0x14000b3e6
   14000b3d8:	cmp    r14d,0x7a
   14000b3dc:	jne    0x14000b3ec
   14000b3de:	mov    r14d,0x3
   14000b3e4:	jmp    0x14000b3ec
   14000b3e6:	mov    r14d,0x2
   14000b3ec:	lea    rcx,[rsp+0x58]
   14000b3f1:	call   0x140036890
   14000b3f6:	nop
   14000b3f7:	mov    edx,0x4
   14000b3fc:	lea    r9d,[rdx+0x4]
   14000b400:	cmp    BYTE PTR [rsi+0x7f94],dil
   14000b407:	je     0x14000b47e
   14000b409:	test   r12b,r12b
   14000b40c:	jne    0x14000b47e
   14000b40e:	test   r14d,r14d
   14000b411:	je     0x14000ba63
   14000b417:	cmp    r14d,0x1
   14000b41b:	je     0x14000b47e
   14000b41d:	lea    rbx,[rsi+0x7fa2]
   14000b424:	lea    rdi,[rsi+0x1030]
   14000b42b:	mov    r9,QWORD PTR [rsi+0x22b0]
   14000b432:	add    r9,0x5030
   14000b439:	xor    eax,eax
   14000b43b:	mov    QWORD PTR [rsp+0x40],rax
   14000b440:	mov    QWORD PTR [rsp+0x38],rax
   14000b445:	mov    DWORD PTR [rsp+0x30],eax
   14000b449:	mov    QWORD PTR [rsp+0x28],rax
   14000b44e:	mov    QWORD PTR [rsp+0x20],rbx
   14000b453:	mov    r8d,edx
   14000b456:	mov    dl,0x1
   14000b458:	mov    rcx,rdi
   14000b45b:	call   0x1400185ec
   14000b460:	mov    r8d,0x8
   14000b466:	mov    rdx,rbx
   14000b469:	mov    rcx,rsi
   14000b46c:	call   0x1400212ac
   14000b471:	mov    QWORD PTR [rbp-0x80],rdi
   14000b475:	xor    edi,edi
   14000b477:	lea    edx,[rdi+0x4]
   14000b47a:	lea    r9d,[rdi+0x8]
   14000b47e:	test   r14d,r14d
   14000b481:	je     0x14000ba63
   14000b487:	cmp    r14d,0x1
   14000b48b:	je     0x14000b997
   14000b491:	jle    0x14000baa3
   14000b497:	cmp    r14d,0x3
   14000b49b:	jle    0x14000b586
   14000b4a1:	cmp    r14d,0x5
   14000b4a5:	jne    0x14000baa3
   14000b4ab:	lea    rbx,[rsi+0x5808]
   14000b4b2:	test   r15,r15
   14000b4b5:	cmovne rbx,r15
   14000b4b9:	lea    r8d,[r14+0x76]
   14000b4bd:	mov    QWORD PTR [rbx+0x4],r8
   14000b4c1:	mov    eax,edi
   14000b4c3:	mov    ecx,0x4000
   14000b4c8:	cmp    BYTE PTR [rbx+0x10],dil
   14000b4cc:	cmovne eax,ecx
   14000b4cf:	mov    DWORD PTR [rbx+0x8],eax
   14000b4d2:	cmp    BYTE PTR [rbx+0x1c],dil
   14000b4d6:	je     0x14000b4dc
   14000b4d8:	or     DWORD PTR [rbx+0x8],0x1
   14000b4dc:	cmp    BYTE PTR [rbx+0x1d],dil
   14000b4e0:	je     0x14000b4e6
   14000b4e2:	or     DWORD PTR [rbx+0x8],0x2
   14000b4e6:	cmp    BYTE PTR [rbx+0x1e],dil
   14000b4ea:	je     0x14000b4ef
   14000b4ec:	or     DWORD PTR [rbx+0x8],edx
   14000b4ef:	cmp    BYTE PTR [rbx+0x1f],dil
   14000b4f3:	je     0x14000b4f9
   14000b4f5:	or     DWORD PTR [rbx+0x8],r9d
   14000b4f9:	mov    rdx,r8
   14000b4fc:	lea    rcx,[rsp+0x58]
   14000b501:	call   0x140036970
   14000b506:	mov    edx,DWORD PTR [rbx+0x8]
   14000b509:	lea    rcx,[rsp+0x58]
   14000b50e:	call   0x1400369a8
   14000b513:	mov    edx,DWORD PTR [rbx+0xc]
   14000b516:	lea    rcx,[rsp+0x58]
   14000b51b:	call   0x1400369a8
   14000b520:	cmp    BYTE PTR [rbx+0x1d],dil
   14000b524:	je     0x14000b533
   14000b526:	mov    edx,DWORD PTR [rbx+0x14]
   14000b529:	lea    rcx,[rsp+0x58]
   14000b52e:	call   0x1400369f8
   14000b533:	cmp    BYTE PTR [rbx+0x1f],dil
   14000b537:	je     0x14000b546
   14000b539:	mov    edx,DWORD PTR [rbx+0x18]
   14000b53c:	lea    rcx,[rsp+0x58]
   14000b541:	call   0x1400369a8
   14000b546:	cmp    BYTE PTR [rbx+0x1e],dil
   14000b54a:	je     0x14000b563
   14000b54c:	mov    edi,0x7
   14000b551:	xor    edx,edx
   14000b553:	lea    rcx,[rsp+0x58]
   14000b558:	call   0x140036970
   14000b55d:	sub    rdi,0x1
   14000b561:	jne    0x14000b551
   14000b563:	test   r12b,r12b
   14000b566:	cmovne rsi,rdi
   14000b56a:	xor    r9d,r9d
   14000b56d:	mov    r8d,DWORD PTR [r13+0x0]
   14000b571:	mov    rdx,rsi
   14000b574:	lea    rcx,[rsp+0x58]
   14000b579:	call   0x140036c04
   14000b57e:	mov    DWORD PTR [rbx+0xc],eax
   14000b581:	jmp    0x14000baa3
   14000b586:	cmp    r14d,0x2
   14000b58a:	sete   r14b
   14000b58e:	lea    rax,[rsi+0x34f0]
   14000b595:	lea    rbx,[rsi+0x5848]
   14000b59c:	test   r14b,r14b
   14000b59f:	cmovne rbx,rax
   14000b5a3:	test   r15,r15
   14000b5a6:	cmovne rbx,r15
   14000b5aa:	mov    al,r14b
   14000b5ad:	neg    al
   14000b5af:	sbb    ecx,ecx
   14000b5b1:	and    ecx,0xfffffffa
   14000b5b4:	add    ecx,0x7a
   14000b5b7:	mov    DWORD PTR [rbx+0x4],ecx
   14000b5ba:	mov    DWORD PTR [rbx+0x8],0x8000
   14000b5c1:	mov    DWORD PTR [rbx+0x1094],edi
   14000b5c7:	mov    eax,DWORD PTR [rbx+0x8]
   14000b5ca:	mov    ecx,0xc000
   14000b5cf:	cmp    BYTE PTR [rbx+0x10],dil
   14000b5d3:	cmovne eax,ecx
   14000b5d6:	mov    DWORD PTR [rbx+0x8],eax
   14000b5d9:	cmp    BYTE PTR [rbx+0x1098],dil
   14000b5e0:	je     0x14000b5e6
   14000b5e2:	or     DWORD PTR [rbx+0x8],0x1
   14000b5e6:	cmp    BYTE PTR [rbx+0x1099],dil
   14000b5ed:	je     0x14000b5f3
   14000b5ef:	or     DWORD PTR [rbx+0x8],0x2
   14000b5f3:	cmp    BYTE PTR [rbx+0x109b],dil
   14000b5fa:	je     0x14000b5ff
   14000b5fc:	or     DWORD PTR [rbx+0x8],edx
   14000b5ff:	cmp    BYTE PTR [rbx+0x10f1],dil
   14000b606:	je     0x14000b611
   14000b608:	or     DWORD PTR [rbx+0x8],0xe0
   14000b60f:	jmp    0x14000b631
   14000b611:	mov    eax,edi
   14000b613:	mov    ecx,0x10000
   14000b618:	mov    rdx,QWORD PTR [rbx+0x10f8]
   14000b61f:	jmp    0x14000b626
   14000b621:	inc    eax
   14000b623:	add    rcx,rcx
   14000b626:	cmp    rcx,rdx
   14000b629:	jb     0x14000b621
   14000b62b:	shl    eax,0x5
   14000b62e:	or     DWORD PTR [rbx+0x8],eax
   14000b631:	cmp    BYTE PTR [rbx+0x10a0],dil
   14000b638:	je     0x14000b63f
   14000b63a:	bts    DWORD PTR [rbx+0x8],0xa
   14000b63f:	mov    r15d,0x100
   14000b645:	cmp    BYTE PTR [rbx+0x1101],dil
   14000b64c:	je     0x14000b652
   14000b64e:	or     DWORD PTR [rbx+0x8],r15d
   14000b652:	cmp    BYTE PTR [rbx+0x10f0],dil
   14000b659:	jne    0x14000b664
   14000b65b:	cmp    BYTE PTR [rbx+0x1102],dil
   14000b662:	je     0x14000b66c
   14000b664:	mov    ecx,0x10
   14000b669:	or     DWORD PTR [rbx+0x8],ecx
   14000b66c:	cmp    BYTE PTR [rbx+0x10f3],dil
   14000b673:	je     0x14000b67a
   14000b675:	bts    DWORD PTR [rbx+0x8],0xb
   14000b67a:	cmp    BYTE PTR [rbx+0x1100],dil
   14000b681:	je     0x14000b68f
   14000b683:	test   r14b,r14b
   14000b686:	jne    0x14000b68f
   14000b688:	mov    DWORD PTR [rbx+0x1c],0x80000000
   14000b68f:	lea    rcx,[rbx+0x20]
   14000b693:	call   0x140045d38
   14000b698:	test   al,al
   14000b69a:	sete   r13b
   14000b69e:	test   r13b,r13b
   14000b6a1:	je     0x14000b6a8
   14000b6a3:	bts    DWORD PTR [rbx+0x8],0x9
   14000b6a8:	mov    r8d,0x800
   14000b6ae:	lea    rdx,[rbp+0x7e0]
   14000b6b5:	lea    rcx,[rbx+0x20]
   14000b6b9:	call   0x140032960
   14000b6be:	test   r14b,r14b
   14000b6c1:	je     0x14000b6d2
   14000b6c3:	lea    rdx,[rbp+0x7e0]
   14000b6ca:	mov    rcx,rsi
   14000b6cd:	call   0x14000c080
   14000b6d2:	mov    r8d,0x800
   14000b6d8:	lea    rdx,[rbp-0x20]
   14000b6dc:	lea    rcx,[rbp+0x7e0]
   14000b6e3:	call   0x140048ca8
   14000b6e8:	lea    rdx,[rbp-0x20]
   14000b6ec:	lea    rcx,[rbp-0x20]
   14000b6f0:	call   QWORD PTR [rip+0x60e1a]        # 0x14006c510
   14000b6f6:	lea    rcx,[rbp-0x20]
   14000b6fa:	or     rdi,0xffffffffffffffff
   14000b6fe:	xor    eax,eax
   14000b700:	inc    rdi
   14000b703:	cmp    BYTE PTR [rcx+rdi*1],al
   14000b706:	jne    0x14000b700
   14000b708:	mov    r12,rdi
   14000b70b:	mov    DWORD PTR [rbp-0x78],eax
   14000b70e:	test   r14b,r14b
   14000b711:	je     0x14000b74b
   14000b713:	test   r13b,r13b
   14000b716:	je     0x14000b74b
   14000b718:	lea    rcx,[rbp-0x40]
   14000b71c:	call   0x14001b6e0
   14000b721:	lea    r9,[rbp+0x17e0]
   14000b728:	lea    r8,[rbp+0x7e0]
   14000b72f:	lea    rdx,[rbp-0x20]
   14000b733:	lea    rcx,[rbp-0x40]
   14000b737:	call   0x14001b8e4
   14000b73c:	mov    QWORD PTR [rbp-0x78],rax
   14000b740:	lea    ecx,[rax+0x1]
   14000b743:	movsxd r12,ecx
   14000b746:	add    r12,rdi
   14000b749:	xor    eax,eax
   14000b74b:	mov    QWORD PTR [rbp-0x70],rax
   14000b74f:	mov    QWORD PTR [rbp-0x68],rax
   14000b753:	mov    QWORD PTR [rbp-0x60],rax
   14000b757:	mov    QWORD PTR [rbp-0x58],rax
   14000b75b:	test   r14b,r14b
   14000b75e:	je     0x14000b798
   14000b760:	lea    rax,[rbp-0x70]
   14000b764:	mov    QWORD PTR [rsp+0x28],rax
   14000b769:	mov    eax,DWORD PTR [rsi+0x22e4]
   14000b76f:	mov    DWORD PTR [rsp+0x20],eax
   14000b773:	mov    r9d,DWORD PTR [rsi+0x22e0]
   14000b77a:	mov    r8d,DWORD PTR [rsi+0x22dc]
   14000b781:	mov    rdx,rbx
   14000b784:	mov    rcx,rsi
   14000b787:	call   0x140009504
   14000b78c:	cmp    QWORD PTR [rbp-0x68],0x0
   14000b791:	je     0x14000b798
   14000b793:	bts    DWORD PTR [rbx+0x8],0xc
   14000b798:	mov    eax,DWORD PTR [rbx+0x1058]
   14000b79e:	mov    DWORD PTR [rbx+0x14],eax
   14000b7a1:	movsxd rdx,DWORD PTR [rbx+0x4]
   14000b7a5:	lea    rcx,[rsp+0x58]
   14000b7aa:	call   0x140036970
   14000b7af:	mov    edx,DWORD PTR [rbx+0x8]
   14000b7b2:	lea    rcx,[rsp+0x58]
   14000b7b7:	call   0x1400369a8
   14000b7bc:	mov    edx,DWORD PTR [rbx+0xc]
   14000b7bf:	lea    rcx,[rsp+0x58]
   14000b7c4:	call   0x1400369a8
   14000b7c9:	mov    edx,DWORD PTR [rbx+0x14]
   14000b7cc:	lea    rcx,[rsp+0x58]
   14000b7d1:	call   0x1400369f8
   14000b7d6:	mov    eax,0xffffffff
   14000b7db:	lea    rcx,[rsp+0x58]
   14000b7e0:	cmp    BYTE PTR [rbx+0x109a],0x0
   14000b7e7:	mov    edx,eax
   14000b7e9:	jne    0x14000b7f1
   14000b7eb:	mov    edx,DWORD PTR [rbx+0x1060]
   14000b7f1:	call   0x1400369f8
   14000b7f6:	cmp    DWORD PTR [rbx+0x1104],0x1
   14000b7fd:	sete   al
   14000b800:	add    al,0x2
   14000b802:	movzx  edx,al
   14000b805:	mov    BYTE PTR [rbx+0x18],dl
   14000b808:	lea    rcx,[rsp+0x58]
   14000b80d:	call   0x140036970
   14000b812:	mov    edx,DWORD PTR [rbx+0x1074]
   14000b818:	lea    rcx,[rsp+0x58]
   14000b81d:	call   0x1400369f8
   14000b822:	lea    rcx,[rbx+0x1040]
   14000b829:	xor    eax,eax
   14000b82b:	cmp    QWORD PTR [rcx],rax
   14000b82e:	je     0x14000b835
   14000b830:	call   0x1400472a4
   14000b835:	mov    edx,eax
   14000b837:	lea    rcx,[rsp+0x58]
   14000b83c:	call   0x1400369f8
   14000b841:	movzx  edx,BYTE PTR [rbx+0x19]
   14000b845:	lea    rcx,[rsp+0x58]
   14000b84a:	call   0x140036970
   14000b84f:	mov    al,BYTE PTR [rbx+0x1a]
   14000b852:	add    al,0x30
   14000b854:	movzx  edx,al
   14000b857:	lea    rcx,[rsp+0x58]
   14000b85c:	call   0x140036970
   14000b861:	mov    rdx,r12
   14000b864:	lea    rcx,[rsp+0x58]
   14000b869:	call   0x1400369a8
   14000b86e:	mov    edx,DWORD PTR [rbx+0x1c]
   14000b871:	lea    rcx,[rsp+0x58]
   14000b876:	call   0x1400369f8
   14000b87b:	test   DWORD PTR [rbx+0x8],r15d
   14000b87f:	je     0x14000b8bf
   14000b881:	mov    rdx,QWORD PTR [rbx+0x1058]
   14000b888:	sar    rdx,0x20
   14000b88c:	mov    edx,edx
   14000b88e:	lea    rcx,[rsp+0x58]
   14000b893:	call   0x1400369f8
   14000b898:	lea    rcx,[rsp+0x58]
   14000b89d:	cmp    BYTE PTR [rbx+0x109a],0x0
   14000b8a4:	je     0x14000b8ad
   14000b8a6:	mov    edx,0xffffffff
   14000b8ab:	jmp    0x14000b8ba
   14000b8ad:	mov    rdx,QWORD PTR [rbx+0x1060]
   14000b8b4:	sar    rdx,0x20
   14000b8b8:	mov    edx,edx
   14000b8ba:	call   0x1400369f8
   14000b8bf:	mov    r8,rdi
   14000b8c2:	lea    rdx,[rbp-0x20]
   14000b8c6:	lea    rcx,[rsp+0x58]
   14000b8cb:	call   0x140036aac
   14000b8d0:	xor    edi,edi
   14000b8d2:	test   r14b,r14b
   14000b8d5:	je     0x14000b8f5
   14000b8d7:	test   r13b,r13b
   14000b8da:	je     0x14000b912
   14000b8dc:	xor    edx,edx
   14000b8de:	lea    rcx,[rsp+0x58]
   14000b8e3:	call   0x140036970
   14000b8e8:	movsxd r8,DWORD PTR [rbp-0x78]
   14000b8ec:	lea    rdx,[rbp+0x17e0]
   14000b8f3:	jmp    0x14000b908
   14000b8f5:	mov    r8,QWORD PTR [rbx+0x1028]
   14000b8fc:	test   r8,r8
   14000b8ff:	je     0x14000b912
   14000b901:	mov    rdx,QWORD PTR [rbx+0x1020]
   14000b908:	lea    rcx,[rsp+0x58]
   14000b90d:	call   0x140036aac
   14000b912:	test   DWORD PTR [rbx+0x8],0x400
   14000b919:	je     0x14000b932
   14000b91b:	lea    rdx,[rbx+0x10a1]
   14000b922:	mov    r8d,0x8
   14000b928:	lea    rcx,[rsp+0x58]
   14000b92d:	call   0x140036aac
   14000b932:	test   DWORD PTR [rbx+0x8],0x1000
   14000b939:	je     0x14000b94d
   14000b93b:	mov    r8,QWORD PTR [rbp-0x68]
   14000b93f:	mov    rdx,QWORD PTR [rbp-0x70]
   14000b943:	lea    rcx,[rsp+0x58]
   14000b948:	call   0x140036aac
   14000b94d:	test   r14b,r14b
   14000b950:	je     0x14000b95d
   14000b952:	mov    rdx,rbx
   14000b955:	mov    rcx,rsi
   14000b958:	call   0x14000a77c
   14000b95d:	cmp    BYTE PTR [rsp+0x50],dil
   14000b962:	cmovne rsi,rdi
   14000b966:	xor    r9d,r9d
   14000b969:	mov    rax,QWORD PTR [rbp-0x50]
   14000b96d:	mov    r8d,DWORD PTR [rax]
   14000b970:	mov    rdx,rsi
   14000b973:	lea    rcx,[rsp+0x58]
   14000b978:	call   0x140036c04
   14000b97d:	mov    DWORD PTR [rbx+0xc],eax
   14000b980:	mov    rcx,QWORD PTR [rbp-0x70]
   14000b984:	test   rcx,rcx
   14000b987:	je     0x14000baa3
   14000b98d:	call   0x14005a938
   14000b992:	jmp    0x14000baa3
   14000b997:	lea    rbx,[rsi+0x3478]
   14000b99e:	test   r15,r15
   14000b9a1:	cmovne rbx,r15
   14000b9a5:	mov    r8d,0x73
   14000b9ab:	mov    DWORD PTR [rbx+0x4],r8d
   14000b9af:	movzx  eax,di
   14000b9b2:	cmp    BYTE PTR [rsi+0x7f8d],dil
   14000b9b9:	je     0x14000b9bf
   14000b9bb:	lea    eax,[r8-0x72]
   14000b9bf:	cmp    BYTE PTR [rsi+0x7f8c],dil
   14000b9c6:	je     0x14000b9cc
   14000b9c8:	or     ax,r9w
   14000b9cc:	cmp    BYTE PTR [rsi+0x7f91],dil
   14000b9d3:	je     0x14000b9df
   14000b9d5:	mov    r15d,0x100
   14000b9db:	or     ax,r15w
   14000b9df:	cmp    BYTE PTR [rsi+0x7f94],dil
   14000b9e6:	je     0x14000b9f0
   14000b9e8:	mov    ecx,0x80
   14000b9ed:	or     ax,cx
   14000b9f0:	cmp    BYTE PTR [rsi+0x7f93],dil
   14000b9f7:	je     0x14000b9fd
   14000b9f9:	or     ax,0x40
   14000b9fd:	cmp    BYTE PTR [rsi+0x7f8f],dil
   14000ba04:	je     0x14000ba09
   14000ba06:	or     ax,dx
   14000ba09:	cmp    BYTE PTR [rsi+0x7f92],dil
   14000ba10:	je     0x14000ba16
   14000ba12:	or     ax,0x10
   14000ba16:	movzx  eax,ax
   14000ba19:	mov    DWORD PTR [rbx+0x8],eax
   14000ba1c:	mov    rdx,r8
   14000ba1f:	lea    rcx,[rsp+0x58]
   14000ba24:	call   0x140036970
   14000ba29:	mov    edx,DWORD PTR [rbx+0x8]
   14000ba2c:	lea    rcx,[rsp+0x58]
   14000ba31:	call   0x1400369a8
   14000ba36:	mov    edx,DWORD PTR [rbx+0xc]
   14000ba39:	lea    rcx,[rsp+0x58]
   14000ba3e:	call   0x1400369a8
   14000ba43:	movzx  edx,WORD PTR [rbx+0x14]
   14000ba47:	lea    rcx,[rsp+0x58]
   14000ba4c:	call   0x1400369a8
   14000ba51:	mov    edx,DWORD PTR [rbx+0x18]
   14000ba54:	lea    rcx,[rsp+0x58]
   14000ba59:	call   0x1400369f8
   14000ba5e:	jmp    0x14000b563
   14000ba63:	lea    rdx,[rsi+0x3468]
   14000ba6a:	mov    BYTE PTR [rdx],0x52
   14000ba6d:	mov    eax,DWORD PTR [rip+0x61245]        # 0x14006ccb8
   14000ba73:	mov    DWORD PTR [rsi+0x3469],eax
   14000ba79:	movzx  eax,WORD PTR [rip+0x6123c]        # 0x14006ccbc
   14000ba80:	mov    WORD PTR [rsi+0x346d],ax
   14000ba87:	mov    edi,0x7
   14000ba8c:	mov    DWORD PTR [rsi+0x3470],edi
   14000ba92:	test   r12b,r12b
   14000ba95:	jne    0x14000baa3
   14000ba97:	mov    r8d,edi
   14000ba9a:	mov    rcx,rsi
   14000ba9d:	call   0x1400212ac
   14000baa2:	nop
   14000baa3:	mov    rcx,QWORD PTR [rsp+0x58]
   14000baa8:	test   rcx,rcx
   14000baab:	je     0x14000bab2
   14000baad:	call   0x14005a938
   14000bab2:	mov    rcx,QWORD PTR [rbp+0x37e0]
   14000bab9:	xor    rcx,rsp
   14000babc:	call   0x140055f90
   14000bac1:	add    rsp,0x38f8
   14000bac8:	pop    r15
   14000baca:	pop    r14
   14000bacc:	pop    r13
   14000bace:	pop    r12
   14000bad0:	pop    rdi
   14000bad1:	pop    rsi
   14000bad2:	pop    rbx
   14000bad3:	pop    rbp
   14000bad4:	ret    
   14000bad5:	int3   
   14000bad6:	int3   
   14000bad7:	int3   
   14000bad8:	mov    rax,rsp
   14000badb:	push   rbp
   14000badc:	push   rsi
   14000badd:	push   rdi
   14000bade:	push   r12
   14000bae0:	push   r13
   14000bae2:	push   r14
   14000bae4:	push   r15
   14000bae6:	mov    rbp,rsp
   14000bae9:	sub    rsp,0x80
   14000baf0:	mov    QWORD PTR [rbp-0x50],0xfffffffffffffffe
   14000baf8:	mov    QWORD PTR [rax+0x18],rbx
   14000bafc:	mov    bl,r9b
   14000baff:	mov    rdi,r8
   14000bb02:	mov    r12,rdx
   14000bb05:	mov    r14,rcx
   14000bb08:	add    rcx,0x5848
   14000bb0f:	xor    edx,edx
   14000bb11:	call   0x140024480
   14000bb16:	xor    edx,edx
   14000bb18:	test   bl,bl
   14000bb1a:	je     0x14000bb2c
   14000bb1c:	mov    BYTE PTR [r14+0x694a],0x1
   14000bb24:	mov    BYTE PTR [r14+0x6948],0x1
   14000bb2c:	cmp    BYTE PTR [r12],0xff
   14000bb31:	jne    0x14000bb42
   14000bb33:	cmp    BYTE PTR [r12+0x1],0xfe
   14000bb39:	mov    DWORD PTR [rbp+0x48],0x1
   14000bb40:	je     0x14000bb45
   14000bb42:	mov    DWORD PTR [rbp+0x48],edx
   14000bb45:	cmp    BYTE PTR [r12],0xfe
   14000bb4a:	jne    0x14000bb5b
   14000bb4c:	cmp    BYTE PTR [r12+0x1],0xff
   14000bb52:	mov    DWORD PTR [rbp+0x40],0x1
   14000bb59:	je     0x14000bb5e
   14000bb5b:	mov    DWORD PTR [rbp+0x40],edx
   14000bb5e:	mov    rax,QWORD PTR [r14+0x22b0]
   14000bb65:	cmp    DWORD PTR [rax+0x4020],0x3
   14000bb6c:	sete   al
   14000bb6f:	mov    BYTE PTR [rbp+0x58],al
   14000bb72:	test   al,al
   14000bb74:	jne    0x14000bb9b
   14000bb76:	cmp    DWORD PTR [r14+0x7f88],0x3
   14000bb7e:	je     0x14000bb9b
   14000bb80:	mov    cl,dl
   14000bb82:	mov    rax,rdx
   14000bb85:	test   rdi,rdi
   14000bb88:	je     0x14000bb9d
   14000bb8a:	cmp    BYTE PTR [rax+r12*1],0x7f
   14000bb8f:	ja     0x14000bb9b
   14000bb91:	inc    rax
   14000bb94:	cmp    rax,rdi
   14000bb97:	jb     0x14000bb8a
   14000bb99:	jmp    0x14000bb9d
   14000bb9b:	mov    cl,0x1
   14000bb9d:	mov    rbx,rdx
   14000bba0:	mov    QWORD PTR [rbp-0x48],rdx
   14000bba4:	mov    r15,rdx
   14000bba7:	mov    QWORD PTR [rbp-0x40],rdx
   14000bbab:	mov    r13,rdx
   14000bbae:	mov    QWORD PTR [rbp-0x38],rdx
   14000bbb2:	mov    QWORD PTR [rbp-0x30],rdx
   14000bbb6:	test   cl,cl
   14000bbb8:	je     0x14000bd5b
   14000bbbe:	mov    QWORD PTR [rbp-0x28],rdx
   14000bbc2:	mov    QWORD PTR [rbp-0x20],rdx
   14000bbc6:	mov    QWORD PTR [rbp-0x18],rdx
   14000bbca:	mov    QWORD PTR [rbp-0x10],rdx
   14000bbce:	lea    rsi,[rdi+0x1]
   14000bbd2:	mov    rdx,rsi
   14000bbd5:	lea    rcx,[rbp-0x28]
   14000bbd9:	call   0x140007a44
   14000bbde:	nop
   14000bbdf:	xor    r8d,r8d
   14000bbe2:	cmp    BYTE PTR [rbp+0x58],r8b
   14000bbe6:	je     0x14000bc6e
   14000bbec:	mov    r9d,r8d
   14000bbef:	lea    ecx,[r8+0x2]
   14000bbf3:	mov    eax,DWORD PTR [rbp+0x48]
   14000bbf6:	mov    edx,DWORD PTR [rbp+0x40]
   14000bbf9:	test   eax,eax
   14000bbfb:	jne    0x14000bc07
   14000bbfd:	test   edx,edx
   14000bbff:	jne    0x14000bc07
   14000bc01:	lea    eax,[rcx-0x1]
   14000bc04:	mov    ecx,r8d
   14000bc07:	mov    rsi,QWORD PTR [rbp-0x28]
   14000bc0b:	cmp    rcx,rdi
   14000bc0e:	jae    0x14000bc64
   14000bc10:	movsxd r9,eax
   14000bc13:	movsxd rax,edx
   14000bc16:	lea    r8,[rax+rcx*1]
   14000bc1a:	add    r8,r12
   14000bc1d:	mov    r10,rsi
   14000bc20:	sub    r9,rax
   14000bc23:	mov    QWORD PTR [rbp+0x40],r9
   14000bc27:	sub    rdi,rcx
   14000bc2a:	lea    r9,[rdi-0x1]
   14000bc2e:	shr    r9,1
   14000bc31:	inc    r9
   14000bc34:	mov    r11,r9
   14000bc37:	mov    rdi,QWORD PTR [rbp+0x40]
   14000bc3b:	movzx  edx,BYTE PTR [rdi+r8*1]
   14000bc40:	mov    ecx,0x100
   14000bc45:	imul   edx,ecx
   14000bc48:	movzx  eax,BYTE PTR [r8]
   14000bc4c:	add    dx,ax
   14000bc4f:	mov    WORD PTR [r10],dx
   14000bc53:	lea    r10,[r10+0x2]
   14000bc57:	lea    r8,[r8+0x2]
   14000bc5b:	sub    r11,0x1
   14000bc5f:	jne    0x14000bc3b
   14000bc61:	xor    r8d,r8d
   14000bc64:	movsxd rax,r9d
   14000bc67:	mov    WORD PTR [rsi+rax*2],r8w
   14000bc6c:	jmp    0x14000bcbc
   14000bc6e:	mov    r15,rsi
   14000bc71:	test   rsi,rsi
   14000bc74:	je     0x14000bc90
   14000bc76:	mov    rdx,rsi
   14000bc79:	lea    rcx,[rbp-0x48]
   14000bc7d:	call   0x140001858
   14000bc82:	mov    r13,QWORD PTR [rbp-0x38]
   14000bc86:	mov    r15,QWORD PTR [rbp-0x40]
   14000bc8a:	mov    rbx,QWORD PTR [rbp-0x48]
   14000bc8e:	jmp    0x14000bc94
   14000bc90:	mov    QWORD PTR [rbp-0x40],rsi
   14000bc94:	mov    r8,rdi
   14000bc97:	mov    rdx,r12
   14000bc9a:	mov    rcx,rbx
   14000bc9d:	call   0x140059180
   14000bca2:	xor    eax,eax
   14000bca4:	mov    BYTE PTR [rbx+rdi*1],al
   14000bca7:	mov    r8,rsi
   14000bcaa:	mov    rsi,QWORD PTR [rbp-0x28]
   14000bcae:	mov    rdx,rsi
   14000bcb1:	mov    rcx,rbx
   14000bcb4:	call   0x1400489f0
   14000bcb9:	xor    r8d,r8d
   14000bcbc:	cmp    DWORD PTR [r14+0x7f88],0x2
   14000bcc4:	jne    0x14000bd14
   14000bcc6:	or     DWORD PTR [r14+0x5864],0x1
   14000bcce:	or     r12,0xffffffffffffffff
   14000bcd2:	inc    r12
   14000bcd5:	cmp    WORD PTR [rsi+r12*2],r8w
   14000bcda:	jne    0x14000bcd2
   14000bcdc:	lea    rdi,[r12+r12*1]
   14000bce0:	lea    rax,[rdi+0x2]
   14000bce4:	cmp    rax,r13
   14000bce7:	jbe    0x14000bcfe
   14000bce9:	sub    rax,r15
   14000bcec:	mov    rdx,rax
   14000bcef:	lea    rcx,[rbp-0x48]
   14000bcf3:	call   0x140001858
   14000bcf8:	mov    rbx,QWORD PTR [rbp-0x48]
   14000bcfc:	jmp    0x14000bd02
   14000bcfe:	mov    QWORD PTR [rbp-0x40],rax
   14000bd02:	lea    r8,[r12+0x1]
   14000bd07:	mov    rdx,rbx
   14000bd0a:	mov    rcx,rsi
   14000bd0d:	call   0x140048cfc
   14000bd12:	jmp    0x14000bd4b
   14000bd14:	mov    rcx,rsi
   14000bd17:	call   0x140048e20
   14000bd1c:	mov    rdi,rax
   14000bd1f:	cmp    rax,r13
   14000bd22:	jbe    0x14000bd39
   14000bd24:	mov    rdx,rax
   14000bd27:	sub    rdx,r15
   14000bd2a:	lea    rcx,[rbp-0x48]
   14000bd2e:	call   0x140001858
   14000bd33:	mov    rbx,QWORD PTR [rbp-0x48]
   14000bd37:	jmp    0x14000bd3d
   14000bd39:	mov    QWORD PTR [rbp-0x40],rax
   14000bd3d:	mov    r8,rdi
   14000bd40:	mov    rdx,rbx
   14000bd43:	mov    rcx,rsi
   14000bd46:	call   0x140048d2c
   14000bd4b:	mov    r12,rbx
   14000bd4e:	test   rsi,rsi
   14000bd51:	je     0x14000bd5b
   14000bd53:	mov    rcx,rsi
   14000bd56:	call   0x14005a938
   14000bd5b:	lea    rcx,[r14+0x68b8]
   14000bd62:	mov    edx,0x2
   14000bd67:	call   0x14002422c
   14000bd6c:	mov    DWORD PTR [rsp+0x28],0x8
   14000bd74:	lea    rax,[rip+0x60fd5]        # 0x14006cd50
   14000bd7b:	mov    QWORD PTR [rsp+0x20],rax
   14000bd80:	xor    r9d,r9d
   14000bd83:	mov    r8,rdi
   14000bd86:	mov    rdx,r12
   14000bd89:	mov    rcx,r14
   14000bd8c:	call   0x140007ce8
   14000bd91:	nop
   14000bd92:	test   rbx,rbx
   14000bd95:	je     0x14000bd9f
   14000bd97:	mov    rcx,rbx
   14000bd9a:	call   0x14005a938
   14000bd9f:	mov    rbx,QWORD PTR [rsp+0xd0]
   14000bda7:	add    rsp,0x80
   14000bdae:	pop    r15
   14000bdb0:	pop    r14
   14000bdb2:	pop    r13
   14000bdb4:	pop    r12
   14000bdb6:	pop    rdi
   14000bdb7:	pop    rsi
   14000bdb8:	pop    rbp
   14000bdb9:	ret    
   14000bdba:	int3   
   14000bdbb:	int3   
   14000bdbc:	mov    QWORD PTR [rsp+0x10],rbx
   14000bdc1:	mov    QWORD PTR [rsp+0x18],rsi
   14000bdc6:	mov    QWORD PTR [rsp+0x20],rdi
   14000bdcb:	push   r14
   14000bdcd:	mov    eax,0x2040
   14000bdd2:	call   0x140055f20
   14000bdd7:	sub    rsp,rax
   14000bdda:	mov    rax,QWORD PTR [rip+0x760ff]        # 0x140081ee0
   14000bde1:	xor    rax,rsp
   14000bde4:	mov    QWORD PTR [rsp+0x2030],rax
   14000bdec:	mov    rax,QWORD PTR [rcx+0x22b0]
   14000bdf3:	mov    bl,dl
   14000bdf5:	mov    rdi,rcx
   14000bdf8:	mov    esi,0x2
   14000bdfd:	cmp    BYTE PTR [rax+0x61bc],0x0
   14000be04:	je     0x14000be16
   14000be06:	test   dl,dl
   14000be08:	jne    0x14000be16
   14000be0a:	cmp    DWORD PTR [rcx+0x7f88],esi
   14000be10:	je     0x14000bf47
   14000be16:	and    DWORD PTR [rcx+0x5824],0x0
   14000be1d:	movabs r14,0x7fffffff7fffffff
   14000be27:	mov    BYTE PTR [rcx+0x5818],0x0
   14000be2e:	cmp    BYTE PTR [rcx+0x7f8d],0x0
   14000be35:	mov    BYTE PTR [rcx+0x5818],0x1
   14000be3c:	mov    BYTE PTR [rcx+0x5824],bl
   14000be42:	je     0x14000be96
   14000be44:	cmp    DWORD PTR [rcx+0x7f88],esi
   14000be4a:	jne    0x14000be81
   14000be4c:	mov    r9d,DWORD PTR [rax+0x83d0]
   14000be53:	lea    rdx,[rdi+0x581c]
   14000be5a:	mov    al,BYTE PTR [rax+0x6150]
   14000be60:	neg    al
   14000be62:	sbb    ecx,ecx
   14000be64:	xor    r8d,r8d
   14000be67:	add    ecx,esi
   14000be69:	mov    DWORD PTR [rsp+0x28],ecx
   14000be6d:	mov    rcx,rdi
   14000be70:	mov    QWORD PTR [rsp+0x20],r14
   14000be75:	call   0x140021500
   14000be7a:	mov    BYTE PTR [rdi+0x5825],0x1
   14000be81:	mov    eax,DWORD PTR [rdi+0x7fb4]
   14000be87:	mov    DWORD PTR [rdi+0x5820],eax
   14000be8d:	mov    WORD PTR [rdi+0x5826],0x101
   14000be96:	mov    rax,QWORD PTR [rdi]
   14000be99:	mov    r8d,esi
   14000be9c:	xor    edx,edx
   14000be9e:	mov    rcx,rdi
   14000bea1:	call   QWORD PTR [rax+0x18]
   14000bea4:	xor    r9d,r9d
   14000bea7:	mov    BYTE PTR [rsp+0x20],0x0
   14000beac:	xor    r8d,r8d
   14000beaf:	mov    rcx,rdi
   14000beb2:	lea    edx,[r9+0x5]
   14000beb6:	call   0x14000b340
   14000bebb:	test   bl,bl
   14000bebd:	je     0x14000bf47
   14000bec3:	mov    rax,QWORD PTR [rdi+0x22b0]
   14000beca:	cmp    QWORD PTR [rax+0x6170],r14
   14000bed1:	je     0x14000bf47
   14000bed3:	mov    rdx,QWORD PTR [rdi]
   14000bed6:	mov    rcx,rdi
   14000bed9:	mov    rbx,QWORD PTR [rax+0x6170]
   14000bee0:	call   QWORD PTR [rdx+0x20]
   14000bee3:	mov    rsi,rbx
   14000bee6:	sub    rsi,rax
   14000bee9:	test   rsi,rsi
   14000beec:	jle    0x14000bf47
   14000beee:	cmp    rsi,0x400
   14000bef5:	jl     0x14000bf0b
   14000bef7:	mov    rax,rbx
   14000befa:	cqo    
   14000befc:	and    edx,0x7f
   14000beff:	add    rax,rdx
   14000bf02:	sar    rax,0x7
   14000bf06:	cmp    rsi,rax
   14000bf09:	jge    0x14000bf47
   14000bf0b:	mov    r14d,0x2000
   14000bf11:	lea    rcx,[rsp+0x30]
   14000bf16:	mov    r8d,r14d
   14000bf19:	xor    edx,edx
   14000bf1b:	call   0x140058f40
   14000bf20:	call   0x140046bb4
   14000bf25:	cmp    rsi,r14
   14000bf28:	lea    rdx,[rsp+0x30]
   14000bf2d:	mov    rbx,rsi
   14000bf30:	mov    rcx,rdi
   14000bf33:	cmova  rbx,r14
   14000bf37:	mov    r8,rbx
   14000bf3a:	call   0x1400212ac
   14000bf3f:	sub    rsi,rbx
   14000bf42:	test   rsi,rsi
   14000bf45:	jg     0x14000bf20
   14000bf47:	mov    rcx,QWORD PTR [rsp+0x2030]
   14000bf4f:	xor    rcx,rsp
   14000bf52:	call   0x140055f90
   14000bf57:	lea    r11,[rsp+0x2040]
   14000bf5f:	mov    rbx,QWORD PTR [r11+0x18]
   14000bf63:	mov    rsi,QWORD PTR [r11+0x20]
   14000bf67:	mov    rdi,QWORD PTR [r11+0x28]
   14000bf6b:	mov    rsp,r11
   14000bf6e:	pop    r14
   14000bf70:	ret    
   14000bf71:	int3   
   14000bf72:	int3   
   14000bf73:	int3   
   14000bf74:	rex push rbx
   14000bf76:	sub    rsp,0x20
   14000bf7a:	mov    rbx,rcx
   14000bf7d:	lea    rdx,[rcx+0x26]
   14000bf81:	mov    ecx,0x18
   14000bf86:	call   0x1400013b0
   14000bf8b:	mov    edx,0x3
   14000bf90:	mov    BYTE PTR [rbx+0x7fa0],0x1
   14000bf97:	lea    rcx,[rip+0x888c2]        # 0x140094860
   14000bf9e:	add    rsp,0x20
   14000bfa2:	pop    rbx
   14000bfa3:	jmp    0x14001bf08
   14000bfa8:	cmp    DWORD PTR [rcx+0x45f4],0x0
   14000bfaf:	je     0x14000bfc7
   14000bfb1:	mov    al,BYTE PTR [rcx+0x45e1]
   14000bfb7:	neg    al
   14000bfb9:	sbb    edx,edx
   14000bfbb:	and    edx,0xfffffff0
   14000bfbe:	add    edx,0x20
   14000bfc1:	mov    DWORD PTR [rcx+0x350c],edx
   14000bfc7:	ret    
   14000bfc8:	mov    QWORD PTR [rsp+0x8],rbx
   14000bfcd:	push   rdi
   14000bfce:	sub    rsp,0x20
   14000bfd2:	cmp    DWORD PTR [rcx+0x7f88],0x2
   14000bfd9:	mov    rbx,rdx
   14000bfdc:	mov    rdi,rcx
   14000bfdf:	jne    0x14000bff4
   14000bfe1:	cmp    BYTE PTR [rdx+0x19],0x14
   14000bfe5:	jae    0x14000bff4
   14000bfe7:	test   BYTE PTR [rdx+0x1c],0x10
   14000bfeb:	je     0x14000bff4
   14000bfed:	mov    BYTE PTR [rdx+0x10f1],0x1
   14000bff4:	mov    edx,DWORD PTR [rdx+0x1104]
   14000bffa:	cmp    edx,0x2
   14000bffd:	jne    0x14000c012
   14000bfff:	mov    al,BYTE PTR [rbx+0x10f1]
   14000c005:	neg    al
   14000c007:	sbb    ecx,ecx
   14000c009:	and    ecx,0xfffffff0
   14000c00c:	add    ecx,0x20
   14000c00f:	mov    DWORD PTR [rbx+0x1c],ecx
   14000c012:	cmp    edx,0x1
   14000c015:	jne    0x14000c025
   14000c017:	lea    rcx,[rbx+0x20]
   14000c01b:	mov    edx,0x800
   14000c020:	call   0x140031164
   14000c025:	add    rbx,0x20
   14000c029:	cmp    WORD PTR [rbx],0x0
   14000c02d:	je     0x14000c072
   14000c02f:	mov    eax,0x5c
   14000c034:	lea    ecx,[rax+0x3]
   14000c037:	cmp    WORD PTR [rbx],ax
   14000c03a:	jne    0x14000c048
   14000c03c:	cmp    DWORD PTR [rdi+0x7f88],0x3
   14000c043:	jne    0x14000c048
   14000c045:	mov    WORD PTR [rbx],cx
   14000c048:	cmp    WORD PTR [rbx],0x3a
   14000c04c:	jne    0x14000c051
   14000c04e:	mov    WORD PTR [rbx],cx
   14000c051:	cmp    WORD PTR [rbx],0x2f
   14000c055:	je     0x14000c065
   14000c057:	cmp    WORD PTR [rbx],ax
   14000c05a:	jne    0x14000c068
   14000c05c:	cmp    DWORD PTR [rdi+0x7f88],0x3
   14000c063:	je     0x14000c068
   14000c065:	mov    WORD PTR [rbx],ax
   14000c068:	add    rbx,0x2
   14000c06c:	cmp    WORD PTR [rbx],0x0
   14000c070:	jne    0x14000c037
   14000c072:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c077:	add    rsp,0x20
   14000c07b:	pop    rdi
   14000c07c:	ret    
   14000c07d:	int3   
   14000c07e:	int3   
   14000c07f:	int3   
   14000c080:	mov    QWORD PTR [rsp+0x8],rbx
   14000c085:	push   rdi
   14000c086:	sub    rsp,0x20
   14000c08a:	mov    rax,QWORD PTR [rcx+0x22b0]
   14000c091:	mov    rbx,rdx
   14000c094:	mov    rdi,rcx
   14000c097:	cmp    DWORD PTR [rax+0x61a4],0x1
   14000c09e:	jne    0x14000c0a8
   14000c0a0:	mov    rcx,rdx
   14000c0a3:	call   0x140049008
   14000c0a8:	mov    rax,QWORD PTR [rdi+0x22b0]
   14000c0af:	cmp    DWORD PTR [rax+0x61a4],0x2
   14000c0b6:	jne    0x14000c0c0
   14000c0b8:	mov    rcx,rbx
   14000c0bb:	call   0x140048f64
   14000c0c0:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c0c5:	add    rsp,0x20
   14000c0c9:	pop    rdi
   14000c0ca:	ret    
   14000c0cb:	int3   
   14000c0cc:	mov    QWORD PTR [rsp+0x8],rbx
   14000c0d1:	push   rdi
   14000c0d2:	sub    rsp,0x20
   14000c0d6:	mov    ebx,DWORD PTR [rcx+0x3470]
   14000c0dc:	mov    rdi,rcx
   14000c0df:	add    rbx,QWORD PTR [rcx+0x7f98]
   14000c0e6:	cmp    DWORD PTR [rcx+0x7f88],0x2
   14000c0ed:	jne    0x14000c0fa
   14000c0ef:	mov    eax,DWORD PTR [rcx+0x3484]
   14000c0f5:	add    rbx,rax
   14000c0f8:	jmp    0x14000c110
   14000c0fa:	mov    edx,DWORD PTR [rcx+0x3484]
   14000c100:	call   0x140008a60
   14000c105:	add    eax,DWORD PTR [rdi+0x34c4]
   14000c10b:	mov    ecx,eax
   14000c10d:	add    rbx,rcx
   14000c110:	mov    rax,rbx
   14000c113:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c118:	add    rsp,0x20
   14000c11c:	pop    rdi
   14000c11d:	ret    
   14000c11e:	int3   
   14000c11f:	int3   
   14000c120:	mov    al,BYTE PTR [rcx+0x45e1]
   14000c126:	ret    
   14000c127:	int3   
   14000c128:	mov    QWORD PTR [rsp+0x18],rbx
   14000c12d:	push   rbp
   14000c12e:	push   rsi
   14000c12f:	push   rdi
   14000c130:	push   r12
   14000c132:	push   r13
   14000c134:	push   r14
   14000c136:	push   r15
   14000c138:	lea    rbp,[rsp-0x1fe0]
   14000c140:	mov    eax,0x20e0
   14000c145:	call   0x140055f20
   14000c14a:	sub    rsp,rax
   14000c14d:	mov    rax,QWORD PTR [rip+0x75d8c]        # 0x140081ee0
   14000c154:	xor    rax,rsp
   14000c157:	mov    QWORD PTR [rbp+0x1fd0],rax
   14000c15e:	mov    rdi,rdx
   14000c161:	mov    rsi,r9
   14000c164:	mov    rdx,QWORD PTR [rdx+0x28]
   14000c168:	mov    r13,rcx
   14000c16b:	mov    rax,rdx
   14000c16e:	sub    rax,r8
   14000c171:	cmp    rax,QWORD PTR [rdi+0x30]
   14000c175:	jb     0x14000c6a6
   14000c17b:	sub    rdx,rax
   14000c17e:	mov    QWORD PTR [rdi+0x30],rax
   14000c182:	cmp    rdx,0x2
   14000c186:	jb     0x14000c6a6
   14000c18c:	mov    rcx,rdi
   14000c18f:	call   0x140036678
   14000c194:	test   rax,rax
   14000c197:	je     0x14000c6a6
   14000c19d:	mov    rdx,QWORD PTR [rdi+0x30]
   14000c1a1:	mov    rcx,QWORD PTR [rdi+0x28]
   14000c1a5:	sub    rcx,rdx
   14000c1a8:	je     0x14000c6a6
   14000c1ae:	cmp    rax,rcx
   14000c1b1:	jg     0x14000c6a6
   14000c1b7:	lea    r12,[rdx+rax*1]
   14000c1bb:	mov    rcx,rdi
   14000c1be:	mov    QWORD PTR [rsp+0x28],r12
   14000c1c3:	call   0x140036678
   14000c1c8:	mov    r14,r12
   14000c1cb:	mov    rbx,rax
   14000c1ce:	sub    r14,QWORD PTR [rdi+0x30]
   14000c1d2:	cmp    DWORD PTR [rsi+0x4],0x1
   14000c1d6:	jne    0x14000c229
   14000c1d8:	cmp    rax,0x1
   14000c1dc:	jne    0x14000c229
   14000c1de:	mov    rcx,rdi
   14000c1e1:	mov    BYTE PTR [rsi+0x1e],al
   14000c1e4:	call   0x140036678
   14000c1e9:	mov    r15,rax
   14000c1ec:	test   bl,al
   14000c1ee:	je     0x14000c20b
   14000c1f0:	mov    rcx,rdi
   14000c1f3:	call   0x140036678
   14000c1f8:	test   rax,rax
   14000c1fb:	je     0x14000c20b
   14000c1fd:	mov    rdx,QWORD PTR [r13+0x7f78]
   14000c204:	add    rdx,rax
   14000c207:	mov    QWORD PTR [rsi+0x20],rdx
   14000c20b:	test   r15b,0x2
   14000c20f:	je     0x14000c229
   14000c211:	mov    rcx,rdi
   14000c214:	call   0x140036678
   14000c219:	test   rax,rax
   14000c21c:	je     0x14000c229
   14000c21e:	add    rax,QWORD PTR [r13+0x7f78]
   14000c225:	mov    QWORD PTR [rsi+0x30],rax
   14000c229:	mov    ecx,DWORD PTR [rsi+0x4]
   14000c22c:	lea    eax,[rcx-0x2]
   14000c22f:	cmp    eax,0x1
   14000c232:	ja     0x14000c692
   14000c238:	sub    rbx,0x1
   14000c23c:	je     0x14000c56c
   14000c242:	sub    rbx,0x1
   14000c246:	je     0x14000c542
   14000c24c:	sub    rbx,0x1
   14000c250:	je     0x14000c47c
   14000c256:	sub    rbx,0x1
   14000c25a:	je     0x14000c420
   14000c260:	sub    rbx,0x1
   14000c264:	je     0x14000c39c
   14000c26a:	sub    rbx,0x1
   14000c26e:	je     0x14000c2c3
   14000c270:	cmp    rbx,0x1
   14000c274:	jne    0x14000c692
   14000c27a:	cmp    ecx,0x3
   14000c27d:	jne    0x14000c28e
   14000c27f:	mov    rax,QWORD PTR [rdi+0x28]
   14000c283:	sub    rax,r12
   14000c286:	cmp    rax,rbx
   14000c289:	jne    0x14000c28e
   14000c28b:	inc    r14
   14000c28e:	lea    rbx,[rsi+0x1020]
   14000c295:	cmp    r14,QWORD PTR [rbx+0x10]
   14000c299:	jbe    0x14000c2ac
   14000c29b:	mov    rdx,r14
   14000c29e:	mov    rcx,rbx
   14000c2a1:	sub    rdx,QWORD PTR [rbx+0x8]
   14000c2a5:	call   0x140001858
   14000c2aa:	jmp    0x14000c2b0
   14000c2ac:	mov    QWORD PTR [rbx+0x8],r14
   14000c2b0:	mov    rdx,QWORD PTR [rbx]
   14000c2b3:	mov    r8,r14
   14000c2b6:	mov    rcx,rdi
   14000c2b9:	call   0x140036594
   14000c2be:	jmp    0x14000c692
   14000c2c3:	mov    rcx,rdi
   14000c2c6:	call   0x140036678
   14000c2cb:	mov    ecx,eax
   14000c2cd:	lea    r12,[rsi+0x2210]
   14000c2d4:	shr    ecx,0x2
   14000c2d7:	lea    r15,[rsi+0x2110]
   14000c2de:	and    cl,0x1
   14000c2e1:	mov    r14,rax
   14000c2e4:	mov    BYTE PTR [rsi+0x210e],cl
   14000c2ea:	mov    ecx,eax
   14000c2ec:	shr    ecx,0x3
   14000c2ef:	and    cl,0x1
   14000c2f2:	mov    BYTE PTR [rsi+0x210f],cl
   14000c2f8:	mov    BYTE PTR [r12],0x0
   14000c2fd:	mov    BYTE PTR [r15],0x0
   14000c301:	test   al,0x1
   14000c303:	je     0x14000c32e
   14000c305:	mov    rcx,rdi
   14000c308:	call   0x140036678
   14000c30d:	mov    ecx,0xff
   14000c312:	mov    rdx,r15
   14000c315:	cmp    rax,rcx
   14000c318:	mov    ebx,ecx
   14000c31a:	mov    rcx,rdi
   14000c31d:	cmovb  rbx,rax
   14000c321:	mov    r8,rbx
   14000c324:	call   0x140036594
   14000c329:	mov    BYTE PTR [r15+rbx*1],0x0
   14000c32e:	test   r14b,0x2
   14000c332:	je     0x14000c35d
   14000c334:	mov    rcx,rdi
   14000c337:	call   0x140036678
   14000c33c:	mov    ecx,0xff
   14000c341:	mov    rdx,r12
   14000c344:	cmp    rax,rcx
   14000c347:	mov    ebx,ecx
   14000c349:	mov    rcx,rdi
   14000c34c:	cmovb  rbx,rax
   14000c350:	mov    r8,rbx
   14000c353:	call   0x140036594
   14000c358:	mov    BYTE PTR [r12+rbx*1],0x0
   14000c35d:	cmp    BYTE PTR [rsi+0x210e],0x0
   14000c364:	je     0x14000c374
   14000c366:	mov    rcx,rdi
   14000c369:	call   0x140036678
   14000c36e:	mov    DWORD PTR [rsi+0x2310],eax
   14000c374:	cmp    BYTE PTR [rsi+0x210f],0x0
   14000c37b:	je     0x14000c38b
   14000c37d:	mov    rcx,rdi
   14000c380:	call   0x140036678
   14000c385:	mov    DWORD PTR [rsi+0x2314],eax
   14000c38b:	mov    r12,QWORD PTR [rsp+0x28]
   14000c390:	mov    BYTE PTR [rsi+0x210d],0x1
   14000c397:	jmp    0x14000c692
   14000c39c:	mov    rcx,rdi
   14000c39f:	call   0x140036678
   14000c3a4:	mov    rcx,rdi
   14000c3a7:	mov    DWORD PTR [rsi+0x1108],eax
   14000c3ad:	call   0x140036678
   14000c3b2:	and    al,0x1
   14000c3b4:	mov    rcx,rdi
   14000c3b7:	mov    BYTE PTR [rsi+0x210c],al
   14000c3bd:	call   0x140036678
   14000c3c2:	mov    BYTE PTR [rbp-0x30],0x0
   14000c3c6:	mov    rbx,rax
   14000c3c9:	cmp    rax,0x1fff
   14000c3cf:	jae    0x14000c3f2
   14000c3d1:	mov    r8,rax
   14000c3d4:	lea    rdx,[rbp-0x30]
   14000c3d8:	mov    rcx,rdi
   14000c3db:	call   0x140036594
   14000c3e0:	cmp    rbx,0x2000
   14000c3e7:	jae    0x14000c6d0
   14000c3ed:	mov    BYTE PTR [rbp+rbx*1-0x30],0x0
   14000c3f2:	mov    r8d,0x2000
   14000c3f8:	lea    rdx,[rbp-0x30]
   14000c3fc:	lea    rcx,[rbp-0x30]
   14000c400:	call   0x140032924
   14000c405:	lea    rdx,[rsi+0x110c]
   14000c40c:	mov    r8d,0x800
   14000c412:	lea    rcx,[rbp-0x30]
   14000c416:	call   0x140048b04
   14000c41b:	jmp    0x14000c692
   14000c420:	cmp    r14,0x1
   14000c424:	jl     0x14000c692
   14000c42a:	mov    rcx,rdi
   14000c42d:	call   0x140036678
   14000c432:	mov    rcx,rdi
   14000c435:	call   0x140036678
   14000c43a:	test   eax,eax
   14000c43c:	je     0x14000c692
   14000c442:	mov    r9d,eax
   14000c445:	mov    BYTE PTR [rsi+0x10f3],0x1
   14000c44c:	lea    r8,[rip+0x60d5d]        # 0x14006d1b0
   14000c453:	mov    edx,0x14
   14000c458:	lea    rcx,[rbp-0x60]
   14000c45c:	call   0x140006acc
   14000c461:	lea    rcx,[r13+0x3510]
   14000c468:	mov    r8d,0x800
   14000c46e:	lea    rdx,[rbp-0x60]
   14000c472:	call   0x140046120
   14000c477:	jmp    0x14000c692
   14000c47c:	cmp    r14,0x9
   14000c480:	jl     0x14000c692
   14000c486:	mov    rcx,rdi
   14000c489:	call   0x140036678
   14000c48e:	mov    bl,al
   14000c490:	mov    r14,rax
   14000c493:	and    bl,0x1
   14000c496:	test   al,0x2
   14000c498:	je     0x14000c4ca
   14000c49a:	mov    rcx,rdi
   14000c49d:	test   bl,bl
   14000c49f:	je     0x14000c4b6
   14000c4a1:	call   0x14003651c
   14000c4a6:	mov    edx,eax
   14000c4a8:	lea    rcx,[rsi+0x1040]
   14000c4af:	call   0x140047288
   14000c4b4:	jmp    0x14000c4ca
   14000c4b6:	call   0x140036564
   14000c4bb:	mov    rdx,rax
   14000c4be:	lea    rcx,[rsi+0x1040]
   14000c4c5:	call   0x1400479a0
   14000c4ca:	test   r14b,0x4
   14000c4ce:	je     0x14000c500
   14000c4d0:	mov    rcx,rdi
   14000c4d3:	test   bl,bl
   14000c4d5:	je     0x14000c4ec
   14000c4d7:	call   0x14003651c
   14000c4dc:	mov    edx,eax
   14000c4de:	lea    rcx,[rsi+0x1048]
   14000c4e5:	call   0x140047288
   14000c4ea:	jmp    0x14000c500
   14000c4ec:	call   0x140036564
   14000c4f1:	mov    rdx,rax
   14000c4f4:	lea    rcx,[rsi+0x1048]
   14000c4fb:	call   0x1400479a0
   14000c500:	test   r14b,0x8
   14000c504:	je     0x14000c692
   14000c50a:	mov    rcx,rdi
   14000c50d:	test   bl,bl
   14000c50f:	je     0x14000c529
   14000c511:	call   0x14003651c
   14000c516:	mov    edx,eax
   14000c518:	lea    rcx,[rsi+0x1050]
   14000c51f:	call   0x140047288
   14000c524:	jmp    0x14000c692
   14000c529:	call   0x140036564
   14000c52e:	mov    rdx,rax
   14000c531:	lea    rcx,[rsi+0x1050]
   14000c538:	call   0x1400479a0
   14000c53d:	jmp    0x14000c692
   14000c542:	mov    rcx,rdi
   14000c545:	call   0x140036678
   14000c54a:	test   eax,eax
   14000c54c:	jne    0x14000c692
   14000c552:	mov    DWORD PTR [rsi+0x1070],0x3
   14000c55c:	lea    rdx,[rsi+0x1074]
   14000c563:	lea    r8d,[rax+0x20]
   14000c567:	jmp    0x14000c2b6
   14000c56c:	mov    rcx,rdi
   14000c56f:	call   0x140036678
   14000c574:	test   eax,eax
   14000c576:	je     0x14000c589
   14000c578:	lea    rdx,[rsi+0x20]
   14000c57c:	mov    rcx,r13
   14000c57f:	call   0x14000e99c
   14000c584:	jmp    0x14000c692
   14000c589:	mov    rcx,rdi
   14000c58c:	call   0x140036678
   14000c591:	mov    cl,al
   14000c593:	shr    eax,1
   14000c595:	and    cl,0x1
   14000c598:	and    al,0x1
   14000c59a:	mov    BYTE PTR [rsi+0x10c1],cl
   14000c5a0:	mov    rcx,rdi
   14000c5a3:	mov    BYTE PTR [rsi+0x10ca],al
   14000c5a9:	call   0x1400364c0
   14000c5ae:	movzx  eax,al
   14000c5b1:	mov    DWORD PTR [rsi+0x10ec],eax
   14000c5b7:	cmp    eax,0x18
   14000c5ba:	jbe    0x14000c5c8
   14000c5bc:	lea    rdx,[rsi+0x20]
   14000c5c0:	mov    rcx,r13
   14000c5c3:	call   0x14000e99c
   14000c5c8:	lea    rdx,[rsi+0x10a1]
   14000c5cf:	mov    r8d,0x10
   14000c5d5:	mov    rcx,rdi
   14000c5d8:	call   0x140036594
   14000c5dd:	lea    rdx,[rsi+0x10b1]
   14000c5e4:	mov    r8d,0x10
   14000c5ea:	mov    rcx,rdi
   14000c5ed:	call   0x140036594
   14000c5f2:	cmp    BYTE PTR [rsi+0x10c1],0x0
   14000c5f9:	je     0x14000c67a
   14000c5fb:	lea    rbx,[rsi+0x10c2]
   14000c602:	mov    r8d,0x8
   14000c608:	mov    rdx,rbx
   14000c60b:	mov    rcx,rdi
   14000c60e:	call   0x140036594
   14000c613:	mov    r8d,0x4
   14000c619:	lea    rdx,[rsp+0x20]
   14000c61e:	mov    rcx,rdi
   14000c621:	call   0x140036594
   14000c626:	lea    rcx,[rsp+0x30]
   14000c62b:	call   0x1400454a4
   14000c630:	mov    r8d,0x8
   14000c636:	lea    rcx,[rsp+0x30]
   14000c63b:	mov    rdx,rbx
   14000c63e:	call   0x1400454e4
   14000c643:	lea    rdx,[rbp-0x60]
   14000c647:	lea    rcx,[rsp+0x30]
   14000c64c:	call   0x14004538c
   14000c651:	mov    eax,DWORD PTR [rsp+0x20]
   14000c655:	cmp    eax,DWORD PTR [rbp-0x60]
   14000c658:	sete   al
   14000c65b:	cmp    DWORD PTR [rsi+0x4],0x3
   14000c65f:	mov    BYTE PTR [rsi+0x10c1],al
   14000c665:	jne    0x14000c67a
   14000c667:	mov    rax,QWORD PTR [rbx]
   14000c66a:	cmp    rax,QWORD PTR [rip+0x60b2f]        # 0x14006d1a0
   14000c671:	jne    0x14000c67a
   14000c673:	mov    BYTE PTR [rsi+0x10c1],0x0
   14000c67a:	mov    BYTE PTR [rsi+0x10a0],0x1
   14000c681:	mov    DWORD PTR [rsi+0x109c],0x5
   14000c68b:	mov    BYTE PTR [rsi+0x109b],0x1
   14000c692:	mov    QWORD PTR [rdi+0x30],r12
   14000c696:	mov    rax,QWORD PTR [rdi+0x28]
   14000c69a:	sub    rax,r12
   14000c69d:	cmp    rax,0x2
   14000c6a1:	jmp    0x14000c186
   14000c6a6:	mov    rcx,QWORD PTR [rbp+0x1fd0]
   14000c6ad:	xor    rcx,rsp
   14000c6b0:	call   0x140055f90
   14000c6b5:	mov    rbx,QWORD PTR [rsp+0x2130]
   14000c6bd:	add    rsp,0x20e0
   14000c6c4:	pop    r15
   14000c6c6:	pop    r14
   14000c6c8:	pop    r13
   14000c6ca:	pop    r12
   14000c6cc:	pop    rdi
   14000c6cd:	pop    rsi
   14000c6ce:	pop    rbp
   14000c6cf:	ret    
   14000c6d0:	call   0x1400560e8
   14000c6d5:	int3   
   14000c6d6:	int3   
   14000c6d7:	int3   
   14000c6d8:	mov    rax,rsp
   14000c6db:	push   rbp
   14000c6dc:	push   rdi
   14000c6dd:	push   r14
   14000c6df:	lea    rbp,[rax-0x798]
   14000c6e6:	sub    rsp,0x880
   14000c6ed:	mov    QWORD PTR [rsp+0x68],0xfffffffffffffffe
   14000c6f6:	mov    QWORD PTR [rax+0x10],rbx
   14000c6fa:	mov    QWORD PTR [rax+0x18],rsi
   14000c6fe:	mov    rax,QWORD PTR [rip+0x757db]        # 0x140081ee0
   14000c705:	xor    rax,rsp
   14000c708:	mov    QWORD PTR [rbp+0x770],rax
   14000c70f:	mov    rdi,rcx
   14000c712:	mov    rdx,rcx
   14000c715:	lea    rcx,[rsp+0x20]
   14000c71a:	call   0x140036498
   14000c71f:	nop
   14000c720:	mov    rax,QWORD PTR [rdi+0x7f98]
   14000c727:	lea    rcx,[rsp+0x20]
   14000c72c:	cmp    QWORD PTR [rdi+0x7f78],rax
   14000c733:	jg     0x14000c7e0
   14000c739:	mov    edx,0x7
   14000c73e:	call   0x140036798
   14000c743:	lea    rcx,[rdi+0x3478]
   14000c74a:	call   0x140024528
   14000c74f:	mov    r8d,0x4
   14000c755:	lea    rdx,[rsp+0x60]
   14000c75a:	lea    rcx,[rsp+0x20]
   14000c75f:	call   0x140036594
   14000c764:	lea    rcx,[rsp+0x20]
   14000c769:	call   0x1400364e0
   14000c76e:	movzx  ebx,ax
   14000c771:	lea    rcx,[rsp+0x20]
   14000c776:	call   0x1400364c0
   14000c77b:	mov    dl,al
   14000c77d:	mov    ecx,ebx
   14000c77f:	add    rcx,QWORD PTR [rdi+0x7f78]
   14000c786:	mov    QWORD PTR [rdi+0x7f80],rcx
   14000c78d:	mov    esi,0x1
   14000c792:	mov    DWORD PTR [rdi+0x22d4],esi
   14000c798:	mov    cl,al
   14000c79a:	and    cl,sil
   14000c79d:	mov    BYTE PTR [rdi+0x7f8d],cl
   14000c7a3:	mov    cl,al
   14000c7a5:	shr    cl,0x3
   14000c7a8:	and    cl,sil
   14000c7ab:	mov    BYTE PTR [rdi+0x7f8c],cl
   14000c7b1:	mov    cl,al
   14000c7b3:	shr    cl,0x2
   14000c7b6:	and    cl,sil
   14000c7b9:	mov    BYTE PTR [rdi+0x7f8f],cl
   14000c7bf:	shr    al,1
   14000c7c1:	and    al,sil
   14000c7c4:	mov    BYTE PTR [rdi+0x3494],al
   14000c7ca:	shr    dl,0x4
   14000c7cd:	and    dl,sil
   14000c7d0:	mov    BYTE PTR [rdi+0x3495],dl
   14000c7d6:	mov    rdx,QWORD PTR [rsp+0x48]
   14000c7db:	jmp    0x14000c9c2
   14000c7e0:	mov    edx,0x15
   14000c7e5:	call   0x140036798
   14000c7ea:	lea    rcx,[rdi+0x34f0]
   14000c7f1:	xor    edx,edx
   14000c7f3:	call   0x140024480
   14000c7f8:	mov    DWORD PTR [rdi+0x34f4],0x2
   14000c802:	lea    rcx,[rsp+0x20]
   14000c807:	call   0x14003651c
   14000c80c:	mov    DWORD PTR [rdi+0x3504],eax
   14000c812:	lea    rcx,[rsp+0x20]
   14000c817:	call   0x14003651c
   14000c81c:	mov    eax,eax
   14000c81e:	mov    QWORD PTR [rdi+0x4550],rax
   14000c825:	mov    esi,0x1
   14000c82a:	mov    DWORD PTR [rdi+0x4560],esi
   14000c830:	lea    rcx,[rsp+0x20]
   14000c835:	call   0x1400364e0
   14000c83a:	movzx  eax,ax
   14000c83d:	mov    DWORD PTR [rdi+0x4564],eax
   14000c843:	lea    rcx,[rsp+0x20]
   14000c848:	call   0x1400364e0
   14000c84d:	movzx  eax,ax
   14000c850:	mov    DWORD PTR [rdi+0x34fc],eax
   14000c856:	lea    rcx,[rsp+0x20]
   14000c85b:	call   0x14003651c
   14000c860:	mov    ebx,eax
   14000c862:	lea    rcx,[rsp+0x20]
   14000c867:	call   0x1400364c0
   14000c86c:	movzx  ecx,al
   14000c86f:	mov    DWORD PTR [rdi+0x350c],ecx
   14000c875:	lea    rcx,[rsp+0x20]
   14000c87a:	call   0x1400364c0
   14000c87f:	movzx  ecx,al
   14000c882:	bts    ecx,0xf
   14000c886:	mov    DWORD PTR [rdi+0x34f8],ecx
   14000c88c:	lea    rcx,[rsp+0x20]
   14000c891:	call   0x1400364c0
   14000c896:	lea    ecx,[rsi+0x9]
   14000c899:	lea    edx,[rsi+0xc]
   14000c89c:	cmp    al,0x2
   14000c89e:	cmove  ecx,edx
   14000c8a1:	mov    BYTE PTR [rdi+0x3509],cl
   14000c8a7:	lea    rcx,[rsp+0x20]
   14000c8ac:	call   0x1400364c0
   14000c8b1:	movzx  r14d,al
   14000c8b5:	lea    rcx,[rsp+0x20]
   14000c8ba:	call   0x1400364c0
   14000c8bf:	mov    BYTE PTR [rdi+0x350a],al
   14000c8c5:	mov    al,BYTE PTR [rdi+0x34f8]
   14000c8cb:	and    al,sil
   14000c8ce:	mov    BYTE PTR [rdi+0x4588],al
   14000c8d4:	mov    ecx,DWORD PTR [rdi+0x34f8]
   14000c8da:	mov    eax,ecx
   14000c8dc:	shr    eax,1
   14000c8de:	and    al,sil
   14000c8e1:	mov    BYTE PTR [rdi+0x4589],al
   14000c8e7:	shr    ecx,0x2
   14000c8ea:	and    cl,sil
   14000c8ed:	mov    BYTE PTR [rdi+0x458b],cl
   14000c8f3:	lea    eax,[rsi-0x1]
   14000c8f6:	setne  al
   14000c8f9:	mov    DWORD PTR [rdi+0x458c],eax
   14000c8ff:	mov    eax,DWORD PTR [rdi+0x3504]
   14000c905:	mov    QWORD PTR [rdi+0x4548],rax
   14000c90c:	mov    QWORD PTR [rdi+0x45e8],0x10000
   14000c917:	lea    rcx,[rdi+0x4530]
   14000c91e:	mov    edx,ebx
   14000c920:	call   0x140047710
   14000c925:	mov    edx,r14d
   14000c928:	lea    rcx,[rsp+0x20]
   14000c92d:	call   0x140036798
   14000c932:	mov    esi,0x800
   14000c937:	mov    r8d,esi
   14000c93a:	cmp    r14,rsi
   14000c93d:	cmovb  r8d,r14d
   14000c941:	lea    rdx,[rsp+0x70]
   14000c946:	lea    rcx,[rsp+0x20]
   14000c94b:	call   0x140036594
   14000c950:	cmp    r14,rsi
   14000c953:	jae    0x14000c9ea
   14000c959:	mov    BYTE PTR [rsp+r14*1+0x70],0x0
   14000c95f:	mov    r8d,esi
   14000c962:	lea    rdx,[rsp+0x70]
   14000c967:	lea    rcx,[rsp+0x70]
   14000c96c:	call   0x140045cd8
   14000c971:	lea    rbx,[rdi+0x3510]
   14000c978:	mov    r8d,esi
   14000c97b:	mov    rdx,rbx
   14000c97e:	lea    rcx,[rsp+0x70]
   14000c983:	call   0x1400489f0
   14000c988:	mov    rdx,rbx
   14000c98b:	mov    rcx,rdi
   14000c98e:	call   0x14000c080
   14000c993:	mov    rdx,QWORD PTR [rsp+0x48]
   14000c998:	test   rdx,rdx
   14000c99b:	je     0x14000c9b8
   14000c99d:	mov    eax,DWORD PTR [rdi+0x34fc]
   14000c9a3:	add    rax,QWORD PTR [rdi+0x4548]
   14000c9aa:	add    rax,QWORD PTR [rdi+0x7f78]
   14000c9b1:	mov    QWORD PTR [rdi+0x7f80],rax
   14000c9b8:	mov    DWORD PTR [rdi+0x22d4],0x2
   14000c9c2:	xor    ebx,ebx
   14000c9c4:	mov    rcx,QWORD PTR [rdi+0x7f78]
   14000c9cb:	cmp    QWORD PTR [rdi+0x7f80],rcx
   14000c9d2:	cmovg  rbx,rdx
   14000c9d6:	mov    rcx,QWORD PTR [rsp+0x20]
   14000c9db:	test   rcx,rcx
   14000c9de:	je     0x14000c9e5
   14000c9e0:	call   0x14005a938
   14000c9e5:	mov    rax,rbx
   14000c9e8:	jmp    0x14000c9f0
   14000c9ea:	call   0x1400560e8
   14000c9ef:	nop
   14000c9f0:	mov    rcx,QWORD PTR [rbp+0x770]
   14000c9f7:	xor    rcx,rsp
   14000c9fa:	call   0x140055f90
   14000c9ff:	lea    r11,[rsp+0x880]
   14000ca07:	mov    rbx,QWORD PTR [r11+0x28]
   14000ca0b:	mov    rsi,QWORD PTR [r11+0x30]
   14000ca0f:	mov    rsp,r11
   14000ca12:	pop    r14
   14000ca14:	pop    rdi
   14000ca15:	pop    rbp
   14000ca16:	ret    
   14000ca17:	int3   
   14000ca18:	rex push rbp
   14000ca1a:	push   r12
   14000ca1c:	push   r13
   14000ca1e:	push   r14
   14000ca20:	push   r15
   14000ca22:	lea    rbp,[rsp-0x2010]
   14000ca2a:	mov    eax,0x2110
   14000ca2f:	call   0x140055f20
   14000ca34:	sub    rsp,rax
   14000ca37:	mov    QWORD PTR [rbp-0x60],0xfffffffffffffffe
   14000ca3f:	mov    QWORD PTR [rsp+0x2148],rbx
   14000ca47:	mov    QWORD PTR [rsp+0x2150],rsi
   14000ca4f:	mov    QWORD PTR [rsp+0x2158],rdi
   14000ca57:	mov    rax,QWORD PTR [rip+0x75482]        # 0x140081ee0
   14000ca5e:	xor    rax,rsp
   14000ca61:	mov    QWORD PTR [rbp+0x2000],rax
   14000ca68:	mov    rdi,rcx
   14000ca6b:	mov    rdx,rcx
   14000ca6e:	lea    rcx,[rsp+0x60]
   14000ca73:	call   0x140036498
   14000ca78:	nop
   14000ca79:	mov    esi,0x8
   14000ca7e:	lea    r14d,[rsi-0x1]
   14000ca82:	xor    r13d,r13d
   14000ca85:	cmp    BYTE PTR [rdi+0x7f94],r13b
   14000ca8c:	je     0x14000cb2f
   14000ca92:	mov    rax,QWORD PTR [rdi+0x7f98]
   14000ca99:	add    rax,r14
   14000ca9c:	cmp    QWORD PTR [rdi+0x7f78],rax
   14000caa3:	jle    0x14000cb2f
   14000caa9:	mov    BYTE PTR [rsp+0x50],0x1
   14000caae:	mov    rcx,rdi
   14000cab1:	call   0x14000e6b8
   14000cab6:	mov    rax,QWORD PTR [rdi]
   14000cab9:	mov    r8d,esi
   14000cabc:	lea    rdx,[rbp-0x10]
   14000cac0:	mov    rcx,rdi
   14000cac3:	call   QWORD PTR [rax+0x10]
   14000cac6:	cmp    eax,esi
   14000cac8:	je     0x14000cae9
   14000caca:	mov    rcx,rdi
   14000cacd:	call   0x14000e954
   14000cad2:	nop
   14000cad3:	mov    rcx,QWORD PTR [rsp+0x60]
   14000cad8:	test   rcx,rcx
   14000cadb:	je     0x14000cae2
   14000cadd:	call   0x14005a938
   14000cae2:	xor    eax,eax
   14000cae4:	jmp    0x14000da37
   14000cae9:	lea    rbx,[rdi+0x1030]
   14000caf0:	mov    r9,QWORD PTR [rdi+0x22b0]
   14000caf7:	add    r9,0x5030
   14000cafe:	mov    QWORD PTR [rsp+0x40],r13
   14000cb03:	mov    QWORD PTR [rsp+0x38],r13
   14000cb08:	mov    DWORD PTR [rsp+0x30],r13d
   14000cb0d:	mov    QWORD PTR [rsp+0x28],r13
   14000cb12:	lea    rax,[rbp-0x10]
   14000cb16:	mov    QWORD PTR [rsp+0x20],rax
   14000cb1b:	xor    edx,edx
   14000cb1d:	lea    r8d,[rdx+0x4]
   14000cb21:	mov    rcx,rbx
   14000cb24:	call   0x1400185ec
   14000cb29:	mov    QWORD PTR [rbp-0x68],rbx
   14000cb2d:	jmp    0x14000cb34
   14000cb2f:	mov    BYTE PTR [rsp+0x50],r13b
   14000cb34:	mov    rdx,r14
   14000cb37:	lea    rcx,[rsp+0x60]
   14000cb3c:	call   0x140036798
   14000cb41:	cmp    QWORD PTR [rbp-0x78],r13
   14000cb45:	je     0x14000caca
   14000cb47:	lea    rcx,[rsp+0x60]
   14000cb4c:	call   0x1400364e0
   14000cb51:	movzx  eax,ax
   14000cb54:	mov    DWORD PTR [rdi+0x3454],eax
   14000cb5a:	mov    BYTE PTR [rdi+0x3464],r13b
   14000cb61:	lea    rcx,[rsp+0x60]
   14000cb66:	call   0x1400364c0
   14000cb6b:	movzx  ebx,al
   14000cb6e:	lea    rcx,[rsp+0x60]
   14000cb73:	call   0x1400364e0
   14000cb78:	movzx  eax,ax
   14000cb7b:	mov    DWORD PTR [rdi+0x345c],eax
   14000cb81:	shr    eax,0xe
   14000cb84:	and    al,0x1
   14000cb86:	mov    BYTE PTR [rdi+0x3464],al
   14000cb8c:	lea    rcx,[rsp+0x60]
   14000cb91:	call   0x1400364e0
   14000cb96:	movzx  ecx,ax
   14000cb99:	mov    DWORD PTR [rdi+0x3460],ecx
   14000cb9f:	mov    DWORD PTR [rdi+0x3458],ebx
   14000cba5:	cmp    ecx,r14d
   14000cba8:	jae    0x14000cbb7
   14000cbaa:	mov    rcx,rdi
   14000cbad:	call   0x14000bf74
   14000cbb2:	jmp    0x14000cad3
   14000cbb7:	mov    edx,0x6
   14000cbbc:	sub    ebx,0x73
   14000cbbf:	je     0x14000cbf3
   14000cbc1:	sub    ebx,0x1
   14000cbc4:	je     0x14000cbe7
   14000cbc6:	sub    ebx,edx
   14000cbc8:	je     0x14000cbdb
   14000cbca:	sub    ebx,0x1
   14000cbcd:	jne    0x14000cbfd
   14000cbcf:	mov    DWORD PTR [rdi+0x3458],0x5
   14000cbd9:	jmp    0x14000cbfd
   14000cbdb:	mov    DWORD PTR [rdi+0x3458],0x3
   14000cbe5:	jmp    0x14000cbfd
   14000cbe7:	mov    DWORD PTR [rdi+0x3458],0x2
   14000cbf1:	jmp    0x14000cbfd
   14000cbf3:	mov    DWORD PTR [rdi+0x3458],0x1
   14000cbfd:	mov    eax,DWORD PTR [rdi+0x3458]
   14000cc03:	mov    DWORD PTR [rdi+0x22d4],eax
   14000cc09:	cmp    eax,0x75
   14000cc0c:	je     0x14000cc1f
   14000cc0e:	cmp    eax,0x1
   14000cc11:	jne    0x14000cc1c
   14000cc13:	test   BYTE PTR [rdi+0x345c],0x2
   14000cc1a:	jne    0x14000cc1f
   14000cc1c:	lea    edx,[rcx-0x7]
   14000cc1f:	lea    rcx,[rsp+0x60]
   14000cc24:	call   0x140036798
   14000cc29:	mov    edx,DWORD PTR [rdi+0x3460]
   14000cc2f:	mov    rcx,rdi
   14000cc32:	call   0x140008a60
   14000cc37:	mov    ecx,eax
   14000cc39:	add    rcx,QWORD PTR [rdi+0x7f78]
   14000cc40:	mov    QWORD PTR [rdi+0x7f80],rcx
   14000cc47:	mov    eax,DWORD PTR [rdi+0x3458]
   14000cc4d:	cmp    eax,0x1
   14000cc50:	je     0x14000d84f
   14000cc56:	jle    0x14000d827
   14000cc5c:	cmp    eax,0x3
   14000cc5f:	jle    0x14000d1a0
   14000cc65:	cmp    eax,0x5
   14000cc68:	je     0x14000d10d
   14000cc6e:	cmp    eax,0x75
   14000cc71:	je     0x14000d0ac
   14000cc77:	cmp    eax,0x76
   14000cc7a:	je     0x14000d04d
   14000cc80:	cmp    eax,0x77
   14000cc83:	je     0x14000cd7c
   14000cc89:	cmp    eax,0x78
   14000cc8c:	je     0x14000cce8
   14000cc8e:	cmp    eax,0x79
   14000cc91:	jne    0x14000d827
   14000cc97:	movups xmm0,XMMWORD PTR [rdi+0x3454]
   14000cc9e:	movups XMMWORD PTR [rdi+0x7bc0],xmm0
   14000cca5:	mov    eax,DWORD PTR [rdi+0x3464]
   14000ccab:	mov    DWORD PTR [rdi+0x7bd0],eax
   14000ccb1:	lea    rcx,[rsp+0x60]
   14000ccb6:	call   0x14003651c
   14000ccbb:	mov    DWORD PTR [rdi+0x7bd4],eax
   14000ccc1:	lea    rcx,[rsp+0x60]
   14000ccc6:	call   0x1400364e0
   14000cccb:	mov    WORD PTR [rdi+0x7bd8],ax
   14000ccd2:	lea    rcx,[rsp+0x60]
   14000ccd7:	call   0x1400364e0
   14000ccdc:	mov    WORD PTR [rdi+0x7bda],ax
   14000cce3:	jmp    0x14000d932
   14000cce8:	movups xmm0,XMMWORD PTR [rdi+0x3454]
   14000ccef:	movups XMMWORD PTR [rdi+0x7b7c],xmm0
   14000ccf6:	mov    eax,DWORD PTR [rdi+0x3464]
   14000ccfc:	mov    DWORD PTR [rdi+0x7b8c],eax
   14000cd02:	lea    rcx,[rsp+0x60]
   14000cd07:	call   0x14003651c
   14000cd0c:	mov    DWORD PTR [rdi+0x7b90],eax
   14000cd12:	lea    rcx,[rsp+0x60]
   14000cd17:	call   0x1400364c0
   14000cd1c:	mov    BYTE PTR [rdi+0x7b94],al
   14000cd22:	lea    rcx,[rsp+0x60]
   14000cd27:	call   0x1400364e0
   14000cd2c:	mov    WORD PTR [rdi+0x7b96],ax
   14000cd33:	lea    rcx,[rsp+0x60]
   14000cd38:	call   0x14003651c
   14000cd3d:	mov    DWORD PTR [rdi+0x7b98],eax
   14000cd43:	lea    rdx,[rdi+0x7b9c]
   14000cd4a:	mov    r8,rsi
   14000cd4d:	lea    rcx,[rsp+0x60]
   14000cd52:	call   0x140036594
   14000cd57:	mov    eax,DWORD PTR [rdi+0x7b90]
   14000cd5d:	add    QWORD PTR [rdi+0x7f80],rax
   14000cd64:	movzx  eax,WORD PTR [rdi+0x7b96]
   14000cd6b:	shl    eax,0x9
   14000cd6e:	cdqe   
   14000cd70:	mov    QWORD PTR [rdi+0x22b8],rax
   14000cd77:	jmp    0x14000d932
   14000cd7c:	movups xmm0,XMMWORD PTR [rdi+0x3454]
   14000cd83:	movups XMMWORD PTR [rdi+0x5828],xmm0
   14000cd8a:	mov    eax,DWORD PTR [rdi+0x3464]
   14000cd90:	mov    DWORD PTR [rdi+0x5838],eax
   14000cd96:	lea    rcx,[rsp+0x60]
   14000cd9b:	call   0x14003651c
   14000cda0:	mov    eax,eax
   14000cda2:	mov    DWORD PTR [rdi+0x583c],eax
   14000cda8:	add    QWORD PTR [rdi+0x7f80],rax
   14000cdaf:	lea    rcx,[rsp+0x60]
   14000cdb4:	call   0x1400364e0
   14000cdb9:	mov    WORD PTR [rdi+0x5840],ax
   14000cdc0:	lea    rcx,[rsp+0x60]
   14000cdc5:	call   0x1400364c0
   14000cdca:	mov    BYTE PTR [rdi+0x5842],al
   14000cdd0:	movzx  eax,WORD PTR [rdi+0x5840]
   14000cdd7:	mov    ebx,0x100
   14000cddc:	cmp    eax,ebx
   14000cdde:	je     0x14000cfde
   14000cde4:	cmp    eax,0x101
   14000cde9:	je     0x14000cf1c
   14000cdef:	lea    ecx,[rbx+0x2]
   14000cdf2:	cmp    eax,ecx
   14000cdf4:	je     0x14000cecd
   14000cdfa:	jle    0x14000d932
   14000ce00:	lea    ebx,[rcx+0x2]
   14000ce03:	cmp    eax,ebx
   14000ce05:	jle    0x14000cfde
   14000ce0b:	cmp    eax,0x105
   14000ce10:	jne    0x14000d932
   14000ce16:	movups xmm0,XMMWORD PTR [rdi+0x5828]
   14000ce1d:	movups XMMWORD PTR [rdi+0x7e48],xmm0
   14000ce24:	movsd  xmm1,QWORD PTR [rdi+0x5838]
   14000ce2c:	movsd  QWORD PTR [rdi+0x7e58],xmm1
   14000ce34:	mov    eax,DWORD PTR [rdi+0x5840]
   14000ce3a:	mov    DWORD PTR [rdi+0x7e60],eax
   14000ce40:	lea    rcx,[rsp+0x60]
   14000ce45:	call   0x14003651c
   14000ce4a:	mov    DWORD PTR [rdi+0x7e64],eax
   14000ce50:	lea    rcx,[rsp+0x60]
   14000ce55:	call   0x1400364c0
   14000ce5a:	mov    BYTE PTR [rdi+0x7e68],al
   14000ce60:	lea    rcx,[rsp+0x60]
   14000ce65:	call   0x1400364c0
   14000ce6a:	mov    BYTE PTR [rdi+0x7e69],al
   14000ce70:	lea    rcx,[rsp+0x60]
   14000ce75:	call   0x14003651c
   14000ce7a:	mov    DWORD PTR [rdi+0x7e6c],eax
   14000ce80:	lea    rcx,[rsp+0x60]
   14000ce85:	call   0x1400364e0
   14000ce8a:	mov    WORD PTR [rdi+0x7e70],ax
   14000ce91:	cmp    ax,bx
   14000ce94:	jb     0x14000cea0
   14000ce96:	lea    eax,[rbx-0x1]
   14000ce99:	mov    WORD PTR [rdi+0x7e70],ax
   14000cea0:	movzx  r8d,WORD PTR [rdi+0x7e70]
   14000cea8:	lea    rdx,[rdi+0x7e72]
   14000ceaf:	lea    rcx,[rsp+0x60]
   14000ceb4:	call   0x140036594
   14000ceb9:	movzx  eax,WORD PTR [rdi+0x7e70]
   14000cec0:	mov    BYTE PTR [rax+rdi*1+0x7e72],r13b
   14000cec8:	jmp    0x14000d932
   14000cecd:	movups xmm0,XMMWORD PTR [rdi+0x5828]
   14000ced4:	movups XMMWORD PTR [rdi+0x7dfc],xmm0
   14000cedb:	movsd  xmm1,QWORD PTR [rdi+0x5838]
   14000cee3:	movsd  QWORD PTR [rdi+0x7e0c],xmm1
   14000ceeb:	mov    eax,DWORD PTR [rdi+0x5840]
   14000cef1:	mov    DWORD PTR [rdi+0x7e14],eax
   14000cef7:	lea    rcx,[rsp+0x60]
   14000cefc:	call   0x14003651c
   14000cf01:	mov    DWORD PTR [rdi+0x7e18],eax
   14000cf07:	lea    rcx,[rsp+0x60]
   14000cf0c:	call   0x14003651c
   14000cf11:	mov    DWORD PTR [rdi+0x7e1c],eax
   14000cf17:	jmp    0x14000d932
   14000cf1c:	movups xmm0,XMMWORD PTR [rdi+0x5828]
   14000cf23:	movups XMMWORD PTR [rdi+0x7bdc],xmm0
   14000cf2a:	movsd  xmm1,QWORD PTR [rdi+0x5838]
   14000cf32:	movsd  QWORD PTR [rdi+0x7bec],xmm1
   14000cf3a:	mov    eax,DWORD PTR [rdi+0x5840]
   14000cf40:	mov    DWORD PTR [rdi+0x7bf4],eax
   14000cf46:	lea    rcx,[rsp+0x60]
   14000cf4b:	call   0x1400364e0
   14000cf50:	mov    WORD PTR [rdi+0x7bf8],ax
   14000cf57:	lea    rcx,[rsp+0x60]
   14000cf5c:	call   0x1400364e0
   14000cf61:	mov    WORD PTR [rdi+0x7bfa],ax
   14000cf68:	mov    ecx,0xff
   14000cf6d:	cmp    WORD PTR [rdi+0x7bf8],bx
   14000cf74:	jb     0x14000cf7d
   14000cf76:	mov    WORD PTR [rdi+0x7bf8],cx
   14000cf7d:	cmp    ax,bx
   14000cf80:	jb     0x14000cf89
   14000cf82:	mov    WORD PTR [rdi+0x7bfa],cx
   14000cf89:	movzx  r8d,WORD PTR [rdi+0x7bf8]
   14000cf91:	lea    rdx,[rdi+0x7bfc]
   14000cf98:	lea    rcx,[rsp+0x60]
   14000cf9d:	call   0x140036594
   14000cfa2:	movzx  r8d,WORD PTR [rdi+0x7bfa]
   14000cfaa:	lea    rdx,[rdi+0x7cfc]
   14000cfb1:	lea    rcx,[rsp+0x60]
   14000cfb6:	call   0x140036594
   14000cfbb:	movzx  eax,WORD PTR [rdi+0x7bf8]
   14000cfc2:	mov    BYTE PTR [rax+rdi*1+0x7bfc],r13b
   14000cfca:	movzx  eax,WORD PTR [rdi+0x7bfa]
   14000cfd1:	mov    BYTE PTR [rax+rdi*1+0x7cfc],r13b
   14000cfd9:	jmp    0x14000d932
   14000cfde:	movups xmm0,XMMWORD PTR [rdi+0x5828]
   14000cfe5:	movups XMMWORD PTR [rdi+0x7e20],xmm0
   14000cfec:	movsd  xmm1,QWORD PTR [rdi+0x5838]
   14000cff4:	movsd  QWORD PTR [rdi+0x7e30],xmm1
   14000cffc:	mov    eax,DWORD PTR [rdi+0x5840]
   14000d002:	mov    DWORD PTR [rdi+0x7e38],eax
   14000d008:	lea    rcx,[rsp+0x60]
   14000d00d:	call   0x14003651c
   14000d012:	mov    DWORD PTR [rdi+0x7e3c],eax
   14000d018:	lea    rcx,[rsp+0x60]
   14000d01d:	call   0x1400364c0
   14000d022:	mov    BYTE PTR [rdi+0x7e40],al
   14000d028:	lea    rcx,[rsp+0x60]
   14000d02d:	call   0x1400364c0
   14000d032:	mov    BYTE PTR [rdi+0x7e41],al
   14000d038:	lea    rcx,[rsp+0x60]
   14000d03d:	call   0x14003651c
   14000d042:	mov    DWORD PTR [rdi+0x7e44],eax
   14000d048:	jmp    0x14000d932
   14000d04d:	movups xmm0,XMMWORD PTR [rdi+0x3454]
   14000d054:	movups XMMWORD PTR [rdi+0x7ba4],xmm0
   14000d05b:	mov    eax,DWORD PTR [rdi+0x3464]
   14000d061:	mov    DWORD PTR [rdi+0x7bb4],eax
   14000d067:	lea    rcx,[rsp+0x60]
   14000d06c:	call   0x1400364c0
   14000d071:	mov    BYTE PTR [rdi+0x7bb8],al
   14000d077:	lea    rcx,[rsp+0x60]
   14000d07c:	call   0x1400364c0
   14000d081:	mov    BYTE PTR [rdi+0x7bb9],al
   14000d087:	lea    rcx,[rsp+0x60]
   14000d08c:	call   0x1400364c0
   14000d091:	mov    BYTE PTR [rdi+0x7bba],al
   14000d097:	lea    rcx,[rsp+0x60]
   14000d09c:	call   0x14003651c
   14000d0a1:	mov    DWORD PTR [rdi+0x7bbc],eax
   14000d0a7:	jmp    0x14000d932
   14000d0ac:	movups xmm0,XMMWORD PTR [rdi+0x3454]
   14000d0b3:	movups XMMWORD PTR [rdi+0x7b60],xmm0
   14000d0ba:	mov    eax,DWORD PTR [rdi+0x3464]
   14000d0c0:	mov    DWORD PTR [rdi+0x7b70],eax
   14000d0c6:	lea    rcx,[rsp+0x60]
   14000d0cb:	call   0x1400364e0
   14000d0d0:	mov    WORD PTR [rdi+0x7b74],ax
   14000d0d7:	lea    rcx,[rsp+0x60]
   14000d0dc:	call   0x1400364c0
   14000d0e1:	mov    BYTE PTR [rdi+0x7b76],al
   14000d0e7:	lea    rcx,[rsp+0x60]
   14000d0ec:	call   0x1400364c0
   14000d0f1:	mov    BYTE PTR [rdi+0x7b77],al
   14000d0f7:	lea    rcx,[rsp+0x60]
   14000d0fc:	call   0x1400364e0
   14000d101:	mov    WORD PTR [rdi+0x7b78],ax
   14000d108:	jmp    0x14000d932
   14000d10d:	movups xmm0,XMMWORD PTR [rdi+0x3454]
   14000d114:	movups XMMWORD PTR [rdi+0x5808],xmm0
   14000d11b:	mov    eax,DWORD PTR [rdi+0x3464]
   14000d121:	mov    DWORD PTR [rdi+0x5818],eax
   14000d127:	mov    al,BYTE PTR [rdi+0x5810]
   14000d12d:	and    al,0x1
   14000d12f:	mov    BYTE PTR [rdi+0x5824],al
   14000d135:	mov    edx,DWORD PTR [rdi+0x5810]
   14000d13b:	mov    ecx,edx
   14000d13d:	shr    ecx,1
   14000d13f:	and    cl,0x1
   14000d142:	mov    BYTE PTR [rdi+0x5825],cl
   14000d148:	mov    eax,edx
   14000d14a:	shr    eax,0x2
   14000d14d:	and    al,0x1
   14000d14f:	mov    BYTE PTR [rdi+0x5826],al
   14000d155:	shr    edx,0x3
   14000d158:	and    dl,0x1
   14000d15b:	mov    BYTE PTR [rdi+0x5827],dl
   14000d161:	test   cl,cl
   14000d163:	je     0x14000d175
   14000d165:	lea    rcx,[rsp+0x60]
   14000d16a:	call   0x14003651c
   14000d16f:	mov    DWORD PTR [rdi+0x581c],eax
   14000d175:	cmp    BYTE PTR [rdi+0x5827],r13b
   14000d17c:	je     0x14000d932
   14000d182:	lea    rcx,[rsp+0x60]
   14000d187:	call   0x1400364e0
   14000d18c:	movzx  eax,ax
   14000d18f:	mov    DWORD PTR [rdi+0x5820],eax
   14000d195:	mov    DWORD PTR [rdi+0x7fb4],eax
   14000d19b:	jmp    0x14000d932
   14000d1a0:	cmp    eax,0x2
   14000d1a3:	sete   r12b
   14000d1a7:	mov    BYTE PTR [rsp+0x51],r12b
   14000d1ac:	lea    rax,[rdi+0x34f0]
   14000d1b3:	lea    rsi,[rdi+0x5848]
   14000d1ba:	test   r12b,r12b
   14000d1bd:	cmovne rsi,rax
   14000d1c1:	mov    QWORD PTR [rbp-0x10],rsi
   14000d1c5:	xor    edx,edx
   14000d1c7:	mov    rcx,rsi
   14000d1ca:	call   0x140024480
   14000d1cf:	movups xmm0,XMMWORD PTR [rdi+0x3454]
   14000d1d6:	movups XMMWORD PTR [rsi],xmm0
   14000d1d9:	mov    eax,DWORD PTR [rdi+0x3464]
   14000d1df:	mov    DWORD PTR [rsi+0x10],eax
   14000d1e2:	mov    al,BYTE PTR [rsi+0x8]
   14000d1e5:	and    al,0x1
   14000d1e7:	mov    BYTE PTR [rsi+0x1098],al
   14000d1ed:	mov    edx,DWORD PTR [rsi+0x8]
   14000d1f0:	mov    eax,edx
   14000d1f2:	shr    eax,1
   14000d1f4:	and    al,0x1
   14000d1f6:	mov    BYTE PTR [rsi+0x1099],al
   14000d1fc:	mov    eax,edx
   14000d1fe:	shr    eax,0x2
   14000d201:	and    al,0x1
   14000d203:	mov    BYTE PTR [rsi+0x109b],al
   14000d209:	mov    eax,edx
   14000d20b:	shr    eax,0xa
   14000d20e:	and    al,0x1
   14000d210:	mov    BYTE PTR [rsi+0x10a0],al
   14000d216:	test   r12b,r12b
   14000d219:	je     0x14000d225
   14000d21b:	test   dl,0x10
   14000d21e:	mov    eax,0x1
   14000d223:	jne    0x14000d228
   14000d225:	mov    eax,r13d
   14000d228:	mov    BYTE PTR [rsi+0x10f0],al
   14000d22e:	test   r12b,r12b
   14000d231:	jne    0x14000d23d
   14000d233:	test   dl,0x10
   14000d236:	mov    eax,0x1
   14000d23b:	jne    0x14000d240
   14000d23d:	mov    eax,r13d
   14000d240:	mov    BYTE PTR [rsi+0x1102],al
   14000d246:	mov    eax,edx
   14000d248:	and    eax,0xe0
   14000d24d:	cmp    al,0xe0
   14000d24f:	sete   al
   14000d252:	mov    BYTE PTR [rsi+0x10f1],al
   14000d258:	test   al,al
   14000d25a:	je     0x14000d261
   14000d25c:	mov    r8d,r13d
   14000d25f:	jmp    0x14000d272
   14000d261:	mov    ecx,edx
   14000d263:	shr    ecx,0x5
   14000d266:	and    ecx,r14d
   14000d269:	mov    r8d,0x10000
   14000d26f:	shl    r8d,cl
   14000d272:	movsxd rax,r8d
   14000d275:	mov    QWORD PTR [rsi+0x10f8],rax
   14000d27c:	mov    eax,edx
   14000d27e:	shr    eax,0x3
   14000d281:	and    al,0x1
   14000d283:	mov    BYTE PTR [rsi+0x10f2],al
   14000d289:	shr    edx,0xb
   14000d28c:	and    dl,0x1
   14000d28f:	mov    BYTE PTR [rsi+0x10f3],dl
   14000d295:	lea    rcx,[rsp+0x60]
   14000d29a:	call   0x14003651c
   14000d29f:	mov    DWORD PTR [rsi+0x14],eax
   14000d2a2:	lea    rcx,[rsp+0x60]
   14000d2a7:	call   0x14003651c
   14000d2ac:	mov    r14d,eax
   14000d2af:	lea    rcx,[rsp+0x60]
   14000d2b4:	call   0x1400364c0
   14000d2b9:	mov    BYTE PTR [rsi+0x18],al
   14000d2bc:	mov    DWORD PTR [rsi+0x1070],0x2
   14000d2c6:	lea    rcx,[rsp+0x60]
   14000d2cb:	call   0x14003651c
   14000d2d0:	mov    DWORD PTR [rsi+0x1074],eax
   14000d2d6:	lea    rcx,[rsp+0x60]
   14000d2db:	call   0x14003651c
   14000d2e0:	mov    r13d,eax
   14000d2e3:	lea    rcx,[rsp+0x60]
   14000d2e8:	call   0x1400364c0
   14000d2ed:	mov    BYTE PTR [rsi+0x19],al
   14000d2f0:	lea    rcx,[rsp+0x60]
   14000d2f5:	call   0x1400364c0
   14000d2fa:	sub    al,0x30
   14000d2fc:	mov    BYTE PTR [rsi+0x1a],al
   14000d2ff:	lea    rcx,[rsp+0x60]
   14000d304:	call   0x1400364e0
   14000d309:	movzx  r15d,ax
   14000d30d:	lea    rcx,[rsp+0x60]
   14000d312:	call   0x14003651c
   14000d317:	mov    edx,eax
   14000d319:	mov    DWORD PTR [rsi+0x1c],eax
   14000d31c:	xor    ecx,ecx
   14000d31e:	mov    DWORD PTR [rsi+0x109c],ecx
   14000d324:	cmp    BYTE PTR [rsi+0x109b],cl
   14000d32a:	je     0x14000d373
   14000d32c:	mov    cl,BYTE PTR [rsi+0x19]
   14000d32f:	cmp    cl,0xd
   14000d332:	je     0x14000d367
   14000d334:	cmp    cl,0xf
   14000d337:	je     0x14000d35b
   14000d339:	cmp    cl,0x14
   14000d33c:	je     0x14000d34f
   14000d33e:	cmp    cl,0x1a
   14000d341:	je     0x14000d34f
   14000d343:	mov    DWORD PTR [rsi+0x109c],0x4
   14000d34d:	jmp    0x14000d371
   14000d34f:	mov    DWORD PTR [rsi+0x109c],0x3
   14000d359:	jmp    0x14000d371
   14000d35b:	mov    DWORD PTR [rsi+0x109c],0x2
   14000d365:	jmp    0x14000d371
   14000d367:	mov    DWORD PTR [rsi+0x109c],0x1
   14000d371:	xor    ecx,ecx
   14000d373:	mov    DWORD PTR [rsi+0x1104],0x2
   14000d37d:	mov    al,BYTE PTR [rsi+0x18]
   14000d380:	sub    al,0x3
   14000d382:	test   al,0xfd
   14000d384:	je     0x14000d394
   14000d386:	cmp    BYTE PTR [rsi+0x18],0x6
   14000d38a:	jae    0x14000d39e
   14000d38c:	mov    DWORD PTR [rsi+0x1104],ecx
   14000d392:	jmp    0x14000d39e
   14000d394:	mov    DWORD PTR [rsi+0x1104],0x1
   14000d39e:	mov    DWORD PTR [rsi+0x1108],ecx
   14000d3a4:	cmp    BYTE PTR [rsi+0x18],0x3
   14000d3a8:	jne    0x14000d3c9
   14000d3aa:	and    edx,0xf000
   14000d3b0:	cmp    edx,0xa000
   14000d3b6:	jne    0x14000d3c9
   14000d3b8:	mov    DWORD PTR [rsi+0x1108],0x1
   14000d3c2:	mov    WORD PTR [rsi+0x110c],cx
   14000d3c9:	test   r12b,r12b
   14000d3cc:	jne    0x14000d3dc
   14000d3ce:	test   DWORD PTR [rsi+0x1c],0x80000000
   14000d3d5:	mov    eax,0x1
   14000d3da:	jne    0x14000d3de
   14000d3dc:	mov    eax,ecx
   14000d3de:	mov    BYTE PTR [rsi+0x1100],al
   14000d3e4:	mov    eax,DWORD PTR [rsi+0x8]
   14000d3e7:	shr    eax,0x8
   14000d3ea:	and    al,0x1
   14000d3ec:	mov    BYTE PTR [rsi+0x1101],al
   14000d3f2:	je     0x14000d42b
   14000d3f4:	lea    rcx,[rsp+0x60]
   14000d3f9:	call   0x14003651c
   14000d3fe:	mov    ebx,eax
   14000d400:	lea    rcx,[rsp+0x60]
   14000d405:	call   0x14003651c
   14000d40a:	mov    edx,eax
   14000d40c:	or     ecx,0xffffffff
   14000d40f:	cmp    r14d,ecx
   14000d412:	jne    0x14000d41f
   14000d414:	cmp    eax,ecx
   14000d416:	jne    0x14000d41f
   14000d418:	mov    ecx,0x1
   14000d41d:	jmp    0x14000d423
   14000d41f:	xor    eax,eax
   14000d421:	mov    ecx,eax
   14000d423:	mov    BYTE PTR [rsi+0x109a],cl
   14000d429:	jmp    0x14000d43e
   14000d42b:	mov    edx,ecx
   14000d42d:	mov    ebx,ecx
   14000d42f:	or     ecx,0xffffffff
   14000d432:	cmp    r14d,ecx
   14000d435:	sete   al
   14000d438:	mov    BYTE PTR [rsi+0x109a],al
   14000d43e:	mov    ecx,ebx
   14000d440:	shl    rcx,0x20
   14000d444:	mov    eax,DWORD PTR [rsi+0x14]
   14000d447:	add    rcx,rax
   14000d44a:	mov    QWORD PTR [rsi+0x1058],rcx
   14000d451:	mov    ecx,edx
   14000d453:	shl    rcx,0x20
   14000d457:	add    rcx,r14
   14000d45a:	movabs rax,0x7fffffff7fffffff
   14000d464:	xor    r14d,r14d
   14000d467:	cmp    BYTE PTR [rsi+0x109a],r14b
   14000d46e:	cmovne rcx,rax
   14000d472:	mov    QWORD PTR [rsi+0x1060],rcx
   14000d479:	mov    ebx,0x1fff
   14000d47e:	cmp    r15,rbx
   14000d481:	cmovb  rbx,r15
   14000d485:	mov    r8,rbx
   14000d488:	lea    rdx,[rbp+0x0]
   14000d48c:	lea    rcx,[rsp+0x60]
   14000d491:	call   0x140036594
   14000d496:	cmp    rbx,0x2000
   14000d49d:	jae    0x14000d821
   14000d4a3:	mov    BYTE PTR [rbp+rbx*1+0x0],r14b
   14000d4a8:	mov    ebx,0x800
   14000d4ad:	test   r12b,r12b
   14000d4b0:	je     0x14000d548
   14000d4b6:	test   DWORD PTR [rsi+0x8],0x200
   14000d4bd:	je     0x14000d508
   14000d4bf:	lea    rcx,[rbp-0x30]
   14000d4c3:	call   0x14001b6e0
   14000d4c8:	lea    rcx,[rbp+0x0]
   14000d4cc:	or     rax,0xffffffffffffffff
   14000d4d0:	inc    rax
   14000d4d3:	cmp    BYTE PTR [rcx+rax*1],r14b
   14000d4d7:	jne    0x14000d4d0
   14000d4d9:	inc    rax
   14000d4dc:	lea    r14,[rsi+0x20]
   14000d4e0:	sub    r15,rax
   14000d4e3:	lea    r8,[rbp+0x0]
   14000d4e7:	add    r8,rax
   14000d4ea:	mov    QWORD PTR [rsp+0x28],rbx
   14000d4ef:	mov    QWORD PTR [rsp+0x20],r14
   14000d4f4:	mov    r9,r15
   14000d4f7:	lea    rdx,[rbp+0x0]
   14000d4fb:	lea    rcx,[rbp-0x30]
   14000d4ff:	call   0x14001b72c
   14000d504:	xor    eax,eax
   14000d506:	jmp    0x14000d512
   14000d508:	lea    r14,[rsi+0x20]
   14000d50c:	xor    eax,eax
   14000d50e:	mov    WORD PTR [r14],ax
   14000d512:	cmp    WORD PTR [r14],ax
   14000d516:	jne    0x14000d52d
   14000d518:	mov    r9d,0x1
   14000d51e:	mov    r8,rbx
   14000d521:	mov    rdx,r14
   14000d524:	lea    rcx,[rbp+0x0]
   14000d528:	call   0x1400459a4
   14000d52d:	mov    rdx,r14
   14000d530:	mov    rcx,rdi
   14000d533:	call   0x14000c080
   14000d538:	mov    rdx,rsi
   14000d53b:	mov    rcx,rdi
   14000d53e:	call   0x14000bfc8
   14000d543:	jmp    0x14000d68a
   14000d548:	lea    r14,[rsi+0x20]
   14000d54c:	mov    r8,rbx
   14000d54f:	mov    rdx,r14
   14000d552:	lea    rcx,[rbp+0x0]
   14000d556:	call   0x1400489f0
   14000d55b:	mov    eax,DWORD PTR [rsi+0xc]
   14000d55e:	sub    eax,r15d
   14000d561:	sub    eax,0x20
   14000d564:	test   DWORD PTR [rsi+0x8],0x400
   14000d56b:	je     0x14000d570
   14000d56d:	sub    eax,0x8
   14000d570:	test   eax,eax
   14000d572:	jle    0x14000d670
   14000d578:	movsxd r15,eax
   14000d57b:	lea    rbx,[rsi+0x1020]
   14000d582:	cmp    r15,QWORD PTR [rbx+0x10]
   14000d586:	jbe    0x14000d599
   14000d588:	mov    rdx,r15
   14000d58b:	sub    rdx,QWORD PTR [rbx+0x8]
   14000d58f:	mov    rcx,rbx
   14000d592:	call   0x140001858
   14000d597:	jmp    0x14000d59d
   14000d599:	mov    QWORD PTR [rbx+0x8],r15
   14000d59d:	mov    r8,r15
   14000d5a0:	mov    rdx,QWORD PTR [rbx]
   14000d5a3:	lea    rcx,[rsp+0x60]
   14000d5a8:	call   0x140036594
   14000d5ad:	movzx  eax,WORD PTR [r14]
   14000d5b1:	cmp    ax,WORD PTR [rip+0x5fbd0]        # 0x14006d188
   14000d5b8:	jne    0x14000d670
   14000d5be:	movzx  eax,WORD PTR [r14+0x2]
   14000d5c3:	cmp    ax,WORD PTR [rip+0x5fbc0]        # 0x14006d18a
   14000d5ca:	jne    0x14000d670
   14000d5d0:	movzx  eax,WORD PTR [r14+0x4]
   14000d5d5:	cmp    ax,WORD PTR [rip+0x5fbb0]        # 0x14006d18c
   14000d5dc:	jne    0x14000d670
   14000d5e2:	mov    rdx,QWORD PTR [rbx]
   14000d5e5:	movzx  ecx,BYTE PTR [rdx+0xb]
   14000d5e9:	shl    ecx,0x8
   14000d5ec:	movzx  eax,BYTE PTR [rdx+0xa]
   14000d5f0:	add    ecx,eax
   14000d5f2:	shl    ecx,0x8
   14000d5f5:	movzx  eax,BYTE PTR [rdx+0x9]
   14000d5f9:	add    ecx,eax
   14000d5fb:	shl    ecx,0x8
   14000d5fe:	movzx  eax,BYTE PTR [rdx+0x8]
   14000d602:	add    eax,ecx
   14000d604:	shl    rax,0x9
   14000d608:	mov    QWORD PTR [rdi+0x22b8],rax
   14000d60f:	mov    rax,QWORD PTR [rdi]
   14000d612:	mov    rcx,rdi
   14000d615:	call   QWORD PTR [rax+0x20]
   14000d618:	mov    rbx,rax
   14000d61b:	mov    rdx,rax
   14000d61e:	mov    rcx,QWORD PTR [rdi+0x22b8]
   14000d625:	call   0x14004596c
   14000d62a:	mov    r15d,eax
   14000d62d:	mov    DWORD PTR [rdi+0x22c0],eax
   14000d633:	movabs rax,0xa3d70a3d70a3d70b
   14000d63d:	imul   rbx
   14000d640:	lea    rcx,[rbx+rdx*1]
   14000d644:	sar    rcx,0x7
   14000d648:	mov    rdx,rcx
   14000d64b:	shr    rdx,0x3f
   14000d64f:	add    rcx,rdx
   14000d652:	add    rcx,QWORD PTR [rdi+0x22b8]
   14000d659:	mov    rdx,rbx
   14000d65c:	call   0x14004596c
   14000d661:	cmp    eax,r15d
   14000d664:	jle    0x14000d670
   14000d666:	lea    eax,[r15+0x1]
   14000d66a:	mov    DWORD PTR [rdi+0x22c0],eax
   14000d670:	lea    rdx,[rip+0x5fb19]        # 0x14006d190
   14000d677:	mov    rcx,r14
   14000d67a:	call   0x14005d4e8
   14000d67f:	test   eax,eax
   14000d681:	jne    0x14000d68a
   14000d683:	mov    BYTE PTR [rdi+0x7f8e],0x1
   14000d68a:	test   DWORD PTR [rsi+0x8],0x400
   14000d691:	je     0x14000d6aa
   14000d693:	lea    rdx,[rsi+0x10a1]
   14000d69a:	mov    r8d,0x8
   14000d6a0:	lea    rcx,[rsp+0x60]
   14000d6a5:	call   0x140036594
   14000d6aa:	lea    rcx,[rsi+0x1040]
   14000d6b1:	mov    edx,r13d
   14000d6b4:	call   0x140047710
   14000d6b9:	test   DWORD PTR [rsi+0x8],0x1000
   14000d6c0:	je     0x14000d7a7
   14000d6c6:	lea    rcx,[rsp+0x60]
   14000d6cb:	call   0x1400364e0
   14000d6d0:	lea    rcx,[rdi+0x4530]
   14000d6d7:	mov    QWORD PTR [rbp-0x30],rcx
   14000d6db:	lea    rcx,[rdi+0x4538]
   14000d6e2:	mov    QWORD PTR [rbp-0x28],rcx
   14000d6e6:	lea    rcx,[rdi+0x4540]
   14000d6ed:	mov    QWORD PTR [rbp-0x20],rcx
   14000d6f1:	xor    edx,edx
   14000d6f3:	mov    QWORD PTR [rbp-0x18],rdx
   14000d6f7:	mov    r12d,edx
   14000d6fa:	movzx  esi,ax
   14000d6fd:	lea    r13,[rbp-0x30]
   14000d701:	mov    ecx,0x3
   14000d706:	sub    cl,r12b
   14000d709:	shl    cl,0x2
   14000d70c:	mov    ebx,esi
   14000d70e:	shr    ebx,cl
   14000d710:	test   bl,0x8
   14000d713:	je     0x14000d78d
   14000d715:	cmp    QWORD PTR [r13+0x0],rdx
   14000d719:	je     0x14000d78d
   14000d71b:	test   r12d,r12d
   14000d71e:	je     0x14000d735
   14000d720:	lea    rcx,[rsp+0x60]
   14000d725:	call   0x14003651c
   14000d72a:	mov    edx,eax
   14000d72c:	mov    rcx,QWORD PTR [r13+0x0]
   14000d730:	call   0x140047710
   14000d735:	lea    rdx,[rbp-0x58]
   14000d739:	mov    rcx,QWORD PTR [r13+0x0]
   14000d73d:	call   0x1400472e8
   14000d742:	test   bl,0x4
   14000d745:	je     0x14000d74a
   14000d747:	inc    DWORD PTR [rbp-0x44]
   14000d74a:	xor    eax,eax
   14000d74c:	mov    DWORD PTR [rbp-0x40],eax
   14000d74f:	and    ebx,0x3
   14000d752:	jle    0x14000d77e
   14000d754:	lea    r15d,[rax+0x3]
   14000d758:	sub    r15d,ebx
   14000d75b:	shl    r15d,0x3
   14000d75f:	lea    rcx,[rsp+0x60]
   14000d764:	call   0x1400364c0
   14000d769:	movzx  edx,al
   14000d76c:	mov    ecx,r15d
   14000d76f:	shl    edx,cl
   14000d771:	or     DWORD PTR [rbp-0x40],edx
   14000d774:	add    r15d,0x8
   14000d778:	sub    rbx,0x1
   14000d77c:	jne    0x14000d75f
   14000d77e:	lea    rdx,[rbp-0x58]
   14000d782:	mov    rcx,QWORD PTR [r13+0x0]
   14000d786:	call   0x14004786c
   14000d78b:	xor    edx,edx
   14000d78d:	inc    r12d
   14000d790:	add    r13,0x8
   14000d794:	cmp    r12d,0x4
   14000d798:	jl     0x14000d701
   14000d79e:	mov    rsi,QWORD PTR [rbp-0x10]
   14000d7a2:	mov    r12b,BYTE PTR [rsp+0x51]
   14000d7a7:	xor    r13d,r13d
   14000d7aa:	test   r12b,r12b
   14000d7ad:	je     0x14000d7ba
   14000d7af:	mov    rdx,rsi
   14000d7b2:	mov    rcx,rdi
   14000d7b5:	call   0x14000a77c
   14000d7ba:	mov    rax,QWORD PTR [rsi+0x1058]
   14000d7c1:	add    QWORD PTR [rdi+0x7f80],rax
   14000d7c8:	mov    dl,BYTE PTR [rsi+0x10f2]
   14000d7ce:	lea    rcx,[rsp+0x60]
   14000d7d3:	call   0x140036610
   14000d7d8:	movzx  eax,ax
   14000d7db:	cmp    DWORD PTR [rsi],eax
   14000d7dd:	je     0x14000d92c
   14000d7e3:	mov    BYTE PTR [rdi+0x7fa0],0x1
   14000d7ea:	mov    edx,0x1
   14000d7ef:	lea    rcx,[rip+0x8706a]        # 0x140094860
   14000d7f6:	call   0x14001bf08
   14000d7fb:	mov    r15b,BYTE PTR [rsp+0x50]
   14000d800:	test   r15b,r15b
   14000d803:	jne    0x14000d816
   14000d805:	lea    rdx,[rdi+0x26]
   14000d809:	mov    r8,r14
   14000d80c:	mov    ecx,0x1a
   14000d811:	call   0x140001358
   14000d816:	mov    r14d,0x7
   14000d81c:	jmp    0x14000d937
   14000d821:	call   0x1400560e8
   14000d826:	int3   
   14000d827:	test   DWORD PTR [rdi+0x345c],0x8000
   14000d831:	je     0x14000d932
   14000d837:	lea    rcx,[rsp+0x60]
   14000d83c:	call   0x14003651c
   14000d841:	mov    eax,eax
   14000d843:	add    QWORD PTR [rdi+0x7f80],rax
   14000d84a:	jmp    0x14000d932
   14000d84f:	lea    rbx,[rdi+0x3478]
   14000d856:	mov    rcx,rbx
   14000d859:	call   0x140024528
   14000d85e:	movups xmm0,XMMWORD PTR [rdi+0x3454]
   14000d865:	movups XMMWORD PTR [rbx],xmm0
   14000d868:	mov    eax,DWORD PTR [rdi+0x3464]
   14000d86e:	mov    DWORD PTR [rbx+0x10],eax
   14000d871:	lea    rcx,[rsp+0x60]
   14000d876:	call   0x1400364e0
   14000d87b:	mov    WORD PTR [rdi+0x348c],ax
   14000d882:	lea    rcx,[rsp+0x60]
   14000d887:	call   0x14003651c
   14000d88c:	mov    edx,eax
   14000d88e:	mov    DWORD PTR [rdi+0x3490],eax
   14000d894:	mov    cl,BYTE PTR [rdi+0x3480]
   14000d89a:	and    cl,0x1
   14000d89d:	mov    BYTE PTR [rdi+0x7f8d],cl
   14000d8a3:	mov    r8d,DWORD PTR [rdi+0x3480]
   14000d8aa:	mov    ecx,r8d
   14000d8ad:	shr    ecx,0x3
   14000d8b0:	and    cl,0x1
   14000d8b3:	mov    BYTE PTR [rdi+0x7f8c],cl
   14000d8b9:	mov    ecx,r8d
   14000d8bc:	shr    ecx,0x2
   14000d8bf:	and    cl,0x1
   14000d8c2:	mov    BYTE PTR [rdi+0x7f8f],cl
   14000d8c8:	mov    eax,r8d
   14000d8cb:	shr    eax,0x6
   14000d8ce:	and    al,0x1
   14000d8d0:	mov    BYTE PTR [rdi+0x7f93],al
   14000d8d6:	mov    eax,r8d
   14000d8d9:	shr    eax,0x7
   14000d8dc:	and    al,0x1
   14000d8de:	mov    BYTE PTR [rdi+0x7f94],al
   14000d8e4:	test   edx,edx
   14000d8e6:	jne    0x14000d8f5
   14000d8e8:	cmp    WORD PTR [rdi+0x348c],r13w
   14000d8f0:	mov    eax,r13d
   14000d8f3:	je     0x14000d8fa
   14000d8f5:	mov    eax,0x1
   14000d8fa:	mov    BYTE PTR [rdi+0x7f90],al
   14000d900:	mov    eax,r8d
   14000d903:	shr    eax,1
   14000d905:	and    al,0x1
   14000d907:	mov    BYTE PTR [rdi+0x3494],al
   14000d90d:	mov    eax,r8d
   14000d910:	shr    eax,0x8
   14000d913:	and    al,0x1
   14000d915:	mov    BYTE PTR [rdi+0x7f91],al
   14000d91b:	shr    r8d,0x4
   14000d91f:	and    r8b,0x1
   14000d923:	mov    BYTE PTR [rdi+0x7f92],r8b
   14000d92a:	jmp    0x14000d932
   14000d92c:	mov    r14d,0x7
   14000d932:	mov    r15b,BYTE PTR [rsp+0x50]
   14000d937:	xor    edx,edx
   14000d939:	lea    rcx,[rsp+0x60]
   14000d93e:	call   0x140036610
   14000d943:	movzx  eax,ax
   14000d946:	cmp    DWORD PTR [rdi+0x3454],eax
   14000d94c:	je     0x14000da0d
   14000d952:	mov    eax,DWORD PTR [rdi+0x3458]
   14000d958:	cmp    eax,0x79
   14000d95b:	je     0x14000da0d
   14000d961:	cmp    eax,0x76
   14000d964:	je     0x14000da0d
   14000d96a:	cmp    eax,0x5
   14000d96d:	jne    0x14000d9d3
   14000d96f:	cmp    BYTE PTR [rdi+0x5826],r13b
   14000d976:	je     0x14000d9d3
   14000d978:	mov    QWORD PTR [rbp-0x10],rdi
   14000d97c:	mov    rax,QWORD PTR [rdi]
   14000d97f:	mov    rcx,rdi
   14000d982:	call   QWORD PTR [rax+0x20]
   14000d985:	mov    rsi,rax
   14000d988:	mov    QWORD PTR [rbp-0x8],rax
   14000d98c:	mov    rdx,QWORD PTR [rdi]
   14000d98f:	mov    rcx,rdi
   14000d992:	call   QWORD PTR [rdx+0x20]
   14000d995:	mov    r9,QWORD PTR [rdi]
   14000d998:	lea    rdx,[rax-0x7]
   14000d99c:	xor    r8d,r8d
   14000d99f:	mov    rcx,rdi
   14000d9a2:	call   QWORD PTR [r9+0x18]
   14000d9a6:	mov    bl,0x1
   14000d9a8:	mov    rcx,rdi
   14000d9ab:	call   0x140020c04
   14000d9b0:	movzx  ebx,bl
   14000d9b3:	test   al,al
   14000d9b5:	cmovne ebx,r13d
   14000d9b9:	sub    r14,0x1
   14000d9bd:	jne    0x14000d9a8
   14000d9bf:	mov    rax,QWORD PTR [rdi]
   14000d9c2:	xor    r8d,r8d
   14000d9c5:	mov    rdx,rsi
   14000d9c8:	mov    rcx,rdi
   14000d9cb:	call   QWORD PTR [rax+0x18]
   14000d9ce:	nop
   14000d9cf:	test   bl,bl
   14000d9d1:	jne    0x14000da0d
   14000d9d3:	mov    BYTE PTR [rdi+0x7fa0],0x1
   14000d9da:	mov    edx,0x3
   14000d9df:	lea    rcx,[rip+0x86e7a]        # 0x140094860
   14000d9e6:	call   0x14001bf08
   14000d9eb:	test   r15b,r15b
   14000d9ee:	je     0x14000da0d
   14000d9f0:	lea    rdx,[rdi+0x26]
   14000d9f4:	mov    r8,rdx
   14000d9f7:	mov    ecx,0x4
   14000d9fc:	call   0x140001358
   14000da01:	mov    BYTE PTR [rdi+0x7fa1],0x1
   14000da08:	jmp    0x14000cad3
   14000da0d:	mov    rax,QWORD PTR [rdi+0x7f78]
   14000da14:	cmp    QWORD PTR [rdi+0x7f80],rax
   14000da1b:	jle    0x14000cbaa
   14000da21:	mov    rbx,QWORD PTR [rbp-0x78]
   14000da25:	mov    rcx,QWORD PTR [rsp+0x60]
   14000da2a:	test   rcx,rcx
   14000da2d:	je     0x14000da34
   14000da2f:	call   0x14005a938
   14000da34:	mov    rax,rbx
   14000da37:	mov    rcx,QWORD PTR [rbp+0x2000]
   14000da3e:	xor    rcx,rsp
   14000da41:	call   0x140055f90
   14000da46:	lea    r11,[rsp+0x2110]
   14000da4e:	mov    rbx,QWORD PTR [r11+0x38]
   14000da52:	mov    rsi,QWORD PTR [r11+0x40]
   14000da56:	mov    rdi,QWORD PTR [r11+0x48]
   14000da5a:	mov    rsp,r11
   14000da5d:	pop    r15
   14000da5f:	pop    r14
   14000da61:	pop    r13
   14000da63:	pop    r12
   14000da65:	pop    rbp
   14000da66:	ret    
   14000da67:	int3   
   14000da68:	rex push rbp
   14000da6a:	push   r12
   14000da6c:	push   r13
   14000da6e:	push   r14
   14000da70:	push   r15
   14000da72:	lea    rbp,[rsp-0x2050]
   14000da7a:	mov    eax,0x2150
   14000da7f:	call   0x140055f20
   14000da84:	sub    rsp,rax
   14000da87:	mov    QWORD PTR [rbp-0x70],0xfffffffffffffffe
   14000da8f:	mov    QWORD PTR [rsp+0x2188],rbx
   14000da97:	mov    QWORD PTR [rsp+0x2190],rsi
   14000da9f:	mov    QWORD PTR [rsp+0x2198],rdi
   14000daa7:	mov    rax,QWORD PTR [rip+0x74432]        # 0x140081ee0
   14000daae:	xor    rax,rsp
   14000dab1:	mov    QWORD PTR [rbp+0x2040],rax
   14000dab8:	mov    r15,rcx
   14000dabb:	mov    rdx,rcx
   14000dabe:	lea    rcx,[rsp+0x50]
   14000dac3:	call   0x140036498
   14000dac8:	nop
   14000dac9:	mov    edi,0x1
   14000dace:	xor    r12d,r12d
   14000dad1:	cmp    BYTE PTR [r15+0x7f94],r12b
   14000dad8:	je     0x14000dbbc
   14000dade:	mov    rax,QWORD PTR [r15+0x7f98]
   14000dae5:	add    rax,0x8
   14000dae9:	cmp    QWORD PTR [r15+0x7f78],rax
   14000daf0:	jle    0x14000dbbc
   14000daf6:	mov    r14b,dil
   14000daf9:	mov    rcx,r15
   14000dafc:	call   0x14000e6b8
   14000db01:	mov    rax,QWORD PTR [r15]
   14000db04:	lea    r8d,[rdi+0xf]
   14000db08:	lea    rdx,[rbp+0x18]
   14000db0c:	mov    rcx,r15
   14000db0f:	call   QWORD PTR [rax+0x10]
   14000db12:	cmp    eax,0x10
   14000db15:	je     0x14000db24
   14000db17:	mov    rcx,r15
   14000db1a:	call   0x14000e954
   14000db1f:	jmp    0x14000e2f2
   14000db24:	lea    rbx,[r15+0x1030]
   14000db2b:	lea    rcx,[r15+0x34d4]
   14000db32:	mov    r9,QWORD PTR [r15+0x22b0]
   14000db39:	add    r9,0x5030
   14000db40:	lea    rax,[rbp+0x10]
   14000db44:	mov    QWORD PTR [rsp+0x40],rax
   14000db49:	mov    QWORD PTR [rsp+0x38],r12
   14000db4e:	mov    eax,DWORD PTR [r15+0x34d0]
   14000db55:	mov    DWORD PTR [rsp+0x30],eax
   14000db59:	lea    rax,[rbp+0x18]
   14000db5d:	mov    QWORD PTR [rsp+0x28],rax
   14000db62:	mov    QWORD PTR [rsp+0x20],rcx
   14000db67:	xor    edx,edx
   14000db69:	lea    r8d,[rdx+0x5]
   14000db6d:	mov    rcx,rbx
   14000db70:	call   0x1400185ec
   14000db75:	cmp    BYTE PTR [r15+0x34cc],r12b
   14000db7c:	je     0x14000dbb6
   14000db7e:	mov    rax,QWORD PTR [rbp+0x10]
   14000db82:	cmp    rax,QWORD PTR [r15+0x34e4]
   14000db89:	je     0x14000dbb6
   14000db8b:	lea    rdx,[r15+0x26]
   14000db8f:	mov    ecx,0x6
   14000db94:	call   0x1400013b0
   14000db99:	mov    BYTE PTR [r15+0x7fa1],dil
   14000dba0:	mov    edx,0xb
   14000dba5:	lea    rcx,[rip+0x86cb4]        # 0x140094860
   14000dbac:	call   0x14001bf08
   14000dbb1:	jmp    0x14000e2f2
   14000dbb6:	mov    QWORD PTR [rbp-0x78],rbx
   14000dbba:	jmp    0x14000dbbf
   14000dbbc:	mov    r14b,r12b
   14000dbbf:	mov    edx,0x7
   14000dbc4:	lea    rcx,[rsp+0x50]
   14000dbc9:	call   0x140036798
   14000dbce:	cmp    rax,0x7
   14000dbd2:	jb     0x14000db17
   14000dbd8:	mov    BYTE PTR [r15+0x3464],r12b
   14000dbdf:	lea    rcx,[rsp+0x50]
   14000dbe4:	call   0x14003651c
   14000dbe9:	mov    DWORD PTR [r15+0x3454],eax
   14000dbf0:	mov    edx,0x4
   14000dbf5:	lea    rcx,[rsp+0x50]
   14000dbfa:	call   0x1400366c8
   14000dbff:	mov    ebx,eax
   14000dc01:	lea    rcx,[rsp+0x50]
   14000dc06:	call   0x140036678
   14000dc0b:	test   rax,rax
   14000dc0e:	je     0x14000e2e9
   14000dc14:	test   ebx,ebx
   14000dc16:	je     0x14000e2e9
   14000dc1c:	lea    ecx,[rbx-0x3]
   14000dc1f:	lea    esi,[rbx+0x4]
   14000dc22:	add    esi,eax
   14000dc24:	add    ecx,eax
   14000dc26:	js     0x14000e2e9
   14000dc2c:	cmp    esi,0x7
   14000dc2f:	jb     0x14000e2e9
   14000dc35:	movsxd rdx,ecx
   14000dc38:	lea    rcx,[rsp+0x50]
   14000dc3d:	call   0x140036798
   14000dc42:	mov    eax,esi
   14000dc44:	cmp    QWORD PTR [rsp+0x78],rax
   14000dc49:	jb     0x14000db17
   14000dc4f:	lea    rcx,[rsp+0x50]
   14000dc54:	call   0x140036648
   14000dc59:	mov    ebx,eax
   14000dc5b:	lea    rcx,[rsp+0x50]
   14000dc60:	call   0x140036678
   14000dc65:	mov    DWORD PTR [r15+0x3458],eax
   14000dc6c:	lea    rcx,[rsp+0x50]
   14000dc71:	call   0x140036678
   14000dc76:	mov    DWORD PTR [r15+0x345c],eax
   14000dc7d:	shr    eax,0x2
   14000dc80:	and    al,dil
   14000dc83:	mov    BYTE PTR [r15+0x3464],al
   14000dc8a:	mov    DWORD PTR [r15+0x3460],esi
   14000dc91:	mov    eax,DWORD PTR [r15+0x3458]
   14000dc98:	mov    DWORD PTR [r15+0x22d4],eax
   14000dc9f:	cmp    DWORD PTR [r15+0x3454],ebx
   14000dca6:	setne  r13b
   14000dcaa:	test   r13b,r13b
   14000dcad:	je     0x14000dcf1
   14000dcaf:	mov    rcx,r15
   14000dcb2:	call   0x14000bf74
   14000dcb7:	mov    BYTE PTR [r15+0x7fa0],dil
   14000dcbe:	mov    edx,0x3
   14000dcc3:	lea    rcx,[rip+0x86b96]        # 0x140094860
   14000dcca:	call   0x14001bf08
   14000dccf:	test   r14b,r14b
   14000dcd2:	je     0x14000dcf1
   14000dcd4:	lea    rdx,[r15+0x26]
   14000dcd8:	mov    r8,rdx
   14000dcdb:	mov    ecx,0x4
   14000dce0:	call   0x140001358
   14000dce5:	mov    BYTE PTR [r15+0x7fa1],dil
   14000dcec:	jmp    0x14000e2f2
   14000dcf1:	mov    rsi,r12
   14000dcf4:	test   BYTE PTR [r15+0x345c],dil
   14000dcfb:	je     0x14000dd1a
   14000dcfd:	lea    rcx,[rsp+0x50]
   14000dd02:	call   0x140036678
   14000dd07:	mov    rsi,rax
   14000dd0a:	mov    ecx,DWORD PTR [r15+0x3460]
   14000dd11:	cmp    rax,rcx
   14000dd14:	jae    0x14000e2e9
   14000dd1a:	mov    r14,r12
   14000dd1d:	test   BYTE PTR [r15+0x345c],0x2
   14000dd25:	je     0x14000dd34
   14000dd27:	lea    rcx,[rsp+0x50]
   14000dd2c:	call   0x140036678
   14000dd31:	mov    r14,rax
   14000dd34:	mov    edx,DWORD PTR [r15+0x3460]
   14000dd3b:	mov    rcx,r15
   14000dd3e:	call   0x140008a60
   14000dd43:	mov    ecx,eax
   14000dd45:	add    rcx,r14
   14000dd48:	add    rcx,QWORD PTR [r15+0x7f78]
   14000dd4f:	mov    QWORD PTR [r15+0x7f80],rcx
   14000dd56:	mov    ecx,DWORD PTR [r15+0x3458]
   14000dd5d:	cmp    ecx,edi
   14000dd5f:	je     0x14000e187
   14000dd65:	jle    0x14000e2c0
   14000dd6b:	cmp    ecx,0x3
   14000dd6e:	jle    0x14000dec1
   14000dd74:	cmp    ecx,0x4
   14000dd77:	je     0x14000ddc8
   14000dd79:	cmp    ecx,0x5
   14000dd7c:	jne    0x14000e2c0
   14000dd82:	movups xmm0,XMMWORD PTR [r15+0x3454]
   14000dd8a:	movups XMMWORD PTR [r15+0x5808],xmm0
   14000dd92:	mov    eax,DWORD PTR [r15+0x3464]
   14000dd99:	mov    DWORD PTR [r15+0x5818],eax
   14000dda0:	lea    rcx,[rsp+0x50]
   14000dda5:	call   0x140036678
   14000ddaa:	and    al,dil
   14000ddad:	mov    BYTE PTR [r15+0x5824],al
   14000ddb4:	mov    WORD PTR [r15+0x5826],r12w
   14000ddbc:	mov    BYTE PTR [r15+0x5825],r12b
   14000ddc3:	jmp    0x14000e2c0
   14000ddc8:	movups xmm0,XMMWORD PTR [r15+0x3454]
   14000ddd0:	movups XMMWORD PTR [r15+0x34b8],xmm0
   14000ddd8:	mov    eax,DWORD PTR [r15+0x3464]
   14000dddf:	mov    DWORD PTR [r15+0x34c8],eax
   14000dde6:	lea    rcx,[rsp+0x50]
   14000ddeb:	call   0x140036678
   14000ddf0:	test   eax,eax
   14000ddf2:	je     0x14000de05
   14000ddf4:	lea    rdx,[r15+0x26]
   14000ddf8:	mov    rcx,r15
   14000ddfb:	call   0x14000e99c
   14000de00:	jmp    0x14000e2f2
   14000de05:	lea    rcx,[rsp+0x50]
   14000de0a:	call   0x140036678
   14000de0f:	and    al,dil
   14000de12:	mov    BYTE PTR [r15+0x34cc],al
   14000de19:	lea    rcx,[rsp+0x50]
   14000de1e:	call   0x1400364c0
   14000de23:	movzx  eax,al
   14000de26:	mov    DWORD PTR [r15+0x34d0],eax
   14000de2d:	cmp    eax,0x18
   14000de30:	ja     0x14000ddf4
   14000de32:	lea    rdx,[r15+0x34d4]
   14000de39:	mov    r8d,0x10
   14000de3f:	lea    rcx,[rsp+0x50]
   14000de44:	call   0x140036594
   14000de49:	cmp    BYTE PTR [r15+0x34cc],r12b
   14000de50:	je     0x14000deb5
   14000de52:	lea    rbx,[r15+0x34e4]
   14000de59:	mov    esi,0x8
   14000de5e:	mov    r8d,esi
   14000de61:	mov    rdx,rbx
   14000de64:	lea    rcx,[rsp+0x50]
   14000de69:	call   0x140036594
   14000de6e:	lea    r8d,[rsi-0x4]
   14000de72:	lea    rdx,[rbp+0x10]
   14000de76:	lea    rcx,[rsp+0x50]
   14000de7b:	call   0x140036594
   14000de80:	lea    rcx,[rbp-0x60]
   14000de84:	call   0x1400454a4
   14000de89:	mov    r8d,esi
   14000de8c:	mov    rdx,rbx
   14000de8f:	lea    rcx,[rbp-0x60]
   14000de93:	call   0x1400454e4
   14000de98:	lea    rdx,[rbp+0x18]
   14000de9c:	lea    rcx,[rbp-0x60]
   14000dea0:	call   0x14004538c
   14000dea5:	mov    eax,DWORD PTR [rbp+0x10]
   14000dea8:	cmp    eax,DWORD PTR [rbp+0x18]
   14000deab:	sete   al
   14000deae:	mov    BYTE PTR [r15+0x34cc],al
   14000deb5:	mov    BYTE PTR [r15+0x7f94],dil
   14000debc:	jmp    0x14000e2c0
   14000dec1:	lea    rax,[r15+0x34f0]
   14000dec8:	lea    rbx,[r15+0x5848]
   14000decf:	cmp    ecx,0x2
   14000ded2:	cmove  rbx,rax
   14000ded6:	xor    edx,edx
   14000ded8:	mov    rcx,rbx
   14000dedb:	call   0x140024480
   14000dee0:	movups xmm0,XMMWORD PTR [r15+0x3454]
   14000dee8:	movups XMMWORD PTR [rbx],xmm0
   14000deeb:	mov    eax,DWORD PTR [r15+0x3464]
   14000def2:	mov    DWORD PTR [rbx+0x10],eax
   14000def5:	cmp    DWORD PTR [r15+0x3458],0x2
   14000defd:	sete   r12b
   14000df01:	mov    BYTE PTR [rbx+0x1101],dil
   14000df08:	mov    QWORD PTR [rbx+0x1058],r14
   14000df0f:	lea    rcx,[rsp+0x50]
   14000df14:	call   0x140036678
   14000df19:	mov    DWORD PTR [rbx+0x1094],eax
   14000df1f:	lea    rcx,[rsp+0x50]
   14000df24:	call   0x140036678
   14000df29:	mov    ecx,DWORD PTR [rbx+0x1094]
   14000df2f:	shr    ecx,0x3
   14000df32:	and    cl,dil
   14000df35:	mov    BYTE PTR [rbx+0x109a],cl
   14000df3b:	movabs rcx,0x7fffffff7fffffff
   14000df45:	cmovne rax,rcx
   14000df49:	mov    QWORD PTR [rbx+0x1060],rax
   14000df50:	mov    rcx,QWORD PTR [rbx+0x1058]
   14000df57:	cmp    rcx,rax
   14000df5a:	cmovg  rax,rcx
   14000df5e:	mov    QWORD PTR [rbx+0x1068],rax
   14000df65:	lea    rcx,[rsp+0x50]
   14000df6a:	call   0x140036678
   14000df6f:	mov    DWORD PTR [rbx+0x1c],eax
   14000df72:	test   BYTE PTR [rbx+0x1094],0x2
   14000df79:	je     0x14000df93
   14000df7b:	lea    rcx,[rsp+0x50]
   14000df80:	call   0x14003651c
   14000df85:	mov    edx,eax
   14000df87:	lea    rcx,[rbx+0x1040]
   14000df8e:	call   0x140047288
   14000df93:	xor    r14d,r14d
   14000df96:	mov    DWORD PTR [rbx+0x1070],r14d
   14000df9d:	test   BYTE PTR [rbx+0x1094],0x4
   14000dfa4:	je     0x14000dfc0
   14000dfa6:	mov    DWORD PTR [rbx+0x1070],0x2
   14000dfb0:	lea    rcx,[rsp+0x50]
   14000dfb5:	call   0x14003651c
   14000dfba:	mov    DWORD PTR [rbx+0x1074],eax
   14000dfc0:	mov    DWORD PTR [rbx+0x1108],r14d
   14000dfc7:	lea    rcx,[rsp+0x50]
   14000dfcc:	call   0x140036678
   14000dfd1:	mov    r14,rax
   14000dfd4:	mov    ecx,eax
   14000dfd6:	shr    ecx,0x7
   14000dfd9:	and    cl,0x7
   14000dfdc:	mov    BYTE PTR [rbx+0x1a],cl
   14000dfdf:	mov    cl,al
   14000dfe1:	and    cl,0x3f
   14000dfe4:	add    cl,0x32
   14000dfe7:	mov    BYTE PTR [rbx+0x19],cl
   14000dfea:	lea    rcx,[rsp+0x50]
   14000dfef:	call   0x140036678
   14000dff4:	mov    BYTE PTR [rbx+0x18],al
   14000dff7:	lea    rcx,[rsp+0x50]
   14000dffc:	call   0x140036678
   14000e001:	mov    r8,rax
   14000e004:	mov    ecx,DWORD PTR [r15+0x345c]
   14000e00b:	shr    ecx,0x6
   14000e00e:	and    cl,dil
   14000e011:	mov    BYTE PTR [rbx+0x1100],cl
   14000e017:	mov    DWORD PTR [rbx+0x1104],0x2
   14000e021:	mov    cl,BYTE PTR [rbx+0x18]
   14000e024:	cmp    cl,dil
   14000e027:	jne    0x14000e031
   14000e029:	mov    DWORD PTR [rbx+0x1104],edi
   14000e02f:	jmp    0x14000e03b
   14000e031:	neg    cl
   14000e033:	sbb    eax,eax
   14000e035:	and    DWORD PTR [rbx+0x1104],eax
   14000e03b:	mov    ecx,DWORD PTR [rbx+0x8]
   14000e03e:	mov    eax,ecx
   14000e040:	shr    eax,0x3
   14000e043:	and    al,dil
   14000e046:	mov    BYTE PTR [rbx+0x1098],al
   14000e04c:	mov    eax,ecx
   14000e04e:	shr    eax,0x4
   14000e051:	and    al,dil
   14000e054:	mov    BYTE PTR [rbx+0x1099],al
   14000e05a:	shr    ecx,0x5
   14000e05d:	and    cl,dil
   14000e060:	mov    BYTE PTR [rbx+0x1102],cl
   14000e066:	xor    r9d,r9d
   14000e069:	test   r12b,r12b
   14000e06c:	je     0x14000e076
   14000e06e:	test   r14b,0x40
   14000e072:	mov    eax,edi
   14000e074:	jne    0x14000e079
   14000e076:	mov    eax,r9d
   14000e079:	mov    BYTE PTR [rbx+0x10f0],al
   14000e07f:	mov    dl,BYTE PTR [rbx+0x1094]
   14000e085:	and    dl,dil
   14000e088:	mov    BYTE PTR [rbx+0x10f1],dl
   14000e08e:	shr    r14d,0xa
   14000e092:	and    r14d,0xf
   14000e096:	mov    eax,0x20000
   14000e09b:	mov    cl,r14b
   14000e09e:	shl    rax,cl
   14000e0a1:	test   dl,dl
   14000e0a3:	cmovne rax,r9
   14000e0a7:	mov    QWORD PTR [rbx+0x10f8],rax
   14000e0ae:	mov    al,BYTE PTR [rbx+0x109b]
   14000e0b4:	neg    al
   14000e0b6:	sbb    ecx,ecx
   14000e0b8:	and    ecx,0x5
   14000e0bb:	mov    DWORD PTR [rbx+0x109c],ecx
   14000e0c1:	mov    r14d,0x1fff
   14000e0c7:	cmp    r8,r14
   14000e0ca:	cmovb  r14,r8
   14000e0ce:	mov    r8,r14
   14000e0d1:	lea    rdx,[rbp+0x40]
   14000e0d5:	lea    rcx,[rsp+0x50]
   14000e0da:	call   0x140036594
   14000e0df:	cmp    r14,0x2000
   14000e0e6:	jae    0x14000e181
   14000e0ec:	mov    BYTE PTR [rbp+r14*1+0x40],0x0
   14000e0f2:	lea    r14,[rbx+0x20]
   14000e0f6:	mov    r8d,0x800
   14000e0fc:	mov    rdx,r14
   14000e0ff:	lea    rcx,[rbp+0x40]
   14000e103:	call   0x140048b04
   14000e108:	test   rsi,rsi
   14000e10b:	je     0x14000e120
   14000e10d:	mov    r9,rbx
   14000e110:	mov    r8,rsi
   14000e113:	lea    rdx,[rsp+0x50]
   14000e118:	mov    rcx,r15
   14000e11b:	call   0x14000c128
   14000e120:	test   r12b,r12b
   14000e123:	je     0x14000e148
   14000e125:	mov    rdx,r14
   14000e128:	mov    rcx,r15
   14000e12b:	call   0x14000c080
   14000e130:	mov    rdx,rbx
   14000e133:	mov    rcx,r15
   14000e136:	call   0x14000bfc8
   14000e13b:	mov    rdx,rbx
   14000e13e:	mov    rcx,r15
   14000e141:	call   0x14000a77c
   14000e146:	jmp    0x14000e162
   14000e148:	lea    rdx,[rip+0x5f049]        # 0x14006d198
   14000e14f:	mov    rcx,r14
   14000e152:	call   0x14005d4e8
   14000e157:	test   eax,eax
   14000e159:	jne    0x14000e162
   14000e15b:	mov    BYTE PTR [r15+0x7f8e],dil
   14000e162:	test   r13b,r13b
   14000e165:	je     0x14000e2c0
   14000e16b:	lea    rdx,[r15+0x26]
   14000e16f:	mov    r8,r14
   14000e172:	mov    ecx,0x1a
   14000e177:	call   0x140001358
   14000e17c:	jmp    0x14000e2c0
   14000e181:	call   0x1400560e8
   14000e186:	int3   
   14000e187:	lea    rbx,[r15+0x3478]
   14000e18e:	mov    rcx,rbx
   14000e191:	call   0x140024528
   14000e196:	movups xmm0,XMMWORD PTR [r15+0x3454]
   14000e19e:	movups XMMWORD PTR [rbx],xmm0
   14000e1a1:	mov    eax,DWORD PTR [r15+0x3464]
   14000e1a8:	mov    DWORD PTR [rbx+0x10],eax
   14000e1ab:	lea    rcx,[rsp+0x50]
   14000e1b0:	call   0x140036678
   14000e1b5:	mov    rdx,rax
   14000e1b8:	mov    cl,al
   14000e1ba:	and    cl,dil
   14000e1bd:	mov    BYTE PTR [r15+0x7f8d],cl
   14000e1c4:	mov    ecx,eax
   14000e1c6:	shr    ecx,0x2
   14000e1c9:	and    cl,dil
   14000e1cc:	mov    BYTE PTR [r15+0x7f8c],cl
   14000e1d3:	mov    ecx,eax
   14000e1d5:	shr    ecx,0x4
   14000e1d8:	and    cl,dil
   14000e1db:	mov    BYTE PTR [r15+0x7f8f],cl
   14000e1e2:	shr    eax,0x3
   14000e1e5:	and    al,dil
   14000e1e8:	mov    BYTE PTR [r15+0x7f93],al
   14000e1ef:	mov    BYTE PTR [r15+0x7f90],r12b
   14000e1f6:	mov    BYTE PTR [r15+0x7f92],dil
   14000e1fd:	test   dl,0x2
   14000e200:	je     0x14000e215
   14000e202:	lea    rcx,[rsp+0x50]
   14000e207:	call   0x140036678
   14000e20c:	mov    DWORD PTR [r15+0x7fb4],eax
   14000e213:	jmp    0x14000e21c
   14000e215:	mov    DWORD PTR [r15+0x7fb4],r12d
   14000e21c:	cmp    BYTE PTR [r15+0x7f8d],r12b
   14000e223:	je     0x14000e22e
   14000e225:	cmp    DWORD PTR [r15+0x7fb4],r12d
   14000e22c:	je     0x14000e231
   14000e22e:	mov    edi,r12d
   14000e231:	mov    BYTE PTR [r15+0x7f91],dil
   14000e238:	test   rsi,rsi
   14000e23b:	je     0x14000e250
   14000e23d:	mov    r9,rbx
   14000e240:	mov    r8,rsi
   14000e243:	lea    rdx,[rsp+0x50]
   14000e248:	mov    rcx,r15
   14000e24b:	call   0x14000c128
   14000e250:	cmp    BYTE PTR [r15+0x3496],r12b
   14000e257:	je     0x14000e2c0
   14000e259:	cmp    QWORD PTR [r15+0x3498],r12
   14000e260:	jbe    0x14000e2c0
   14000e262:	mov    rax,QWORD PTR [r15+0x22b0]
   14000e269:	cmp    DWORD PTR [rax+0x2018],r12d
   14000e270:	je     0x14000e2c0
   14000e272:	mov    rdi,QWORD PTR [r15+0x7f78]
   14000e279:	mov    rsi,QWORD PTR [r15+0x7f80]
   14000e280:	mov    r14d,DWORD PTR [r15+0x22d4]
   14000e287:	lea    rbx,[r15+0x22f0]
   14000e28e:	xor    r8d,r8d
   14000e291:	mov    rdx,r15
   14000e294:	mov    rcx,rbx
   14000e297:	call   0x140034c34
   14000e29c:	mov    rdx,QWORD PTR [r15+0x3498]
   14000e2a3:	mov    rcx,rbx
   14000e2a6:	call   0x140034cb4
   14000e2ab:	mov    QWORD PTR [r15+0x7f78],rdi
   14000e2b2:	mov    QWORD PTR [r15+0x7f80],rsi
   14000e2b9:	mov    DWORD PTR [r15+0x22d4],r14d
   14000e2c0:	mov    rax,QWORD PTR [r15+0x7f78]
   14000e2c7:	cmp    QWORD PTR [r15+0x7f80],rax
   14000e2ce:	jle    0x14000e2e9
   14000e2d0:	mov    rbx,QWORD PTR [rsp+0x78]
   14000e2d5:	mov    rcx,QWORD PTR [rsp+0x50]
   14000e2da:	test   rcx,rcx
   14000e2dd:	je     0x14000e2e4
   14000e2df:	call   0x14005a938
   14000e2e4:	mov    rax,rbx
   14000e2e7:	jmp    0x14000e303
   14000e2e9:	mov    rcx,r15
   14000e2ec:	call   0x14000bf74
   14000e2f1:	nop
   14000e2f2:	mov    rcx,QWORD PTR [rsp+0x50]
   14000e2f7:	test   rcx,rcx
   14000e2fa:	je     0x14000e301
   14000e2fc:	call   0x14005a938
   14000e301:	xor    eax,eax
   14000e303:	mov    rcx,QWORD PTR [rbp+0x2040]
   14000e30a:	xor    rcx,rsp
   14000e30d:	call   0x140055f90
   14000e312:	lea    r11,[rsp+0x2150]
   14000e31a:	mov    rbx,QWORD PTR [r11+0x38]
   14000e31e:	mov    rsi,QWORD PTR [r11+0x40]
   14000e322:	mov    rdi,QWORD PTR [r11+0x48]
   14000e326:	mov    rsp,r11
   14000e329:	pop    r15
   14000e32b:	pop    r14
   14000e32d:	pop    r13
   14000e32f:	pop    r12
   14000e331:	pop    rbp
   14000e332:	ret    
   14000e333:	int3   
   14000e334:	rex push rbx
   14000e336:	sub    rsp,0x20
   14000e33a:	cmp    BYTE PTR [rcx+0x7fa1],0x0
   14000e341:	mov    rbx,rcx
   14000e344:	je     0x14000e34a
   14000e346:	xor    eax,eax
   14000e348:	jmp    0x14000e3b4
   14000e34a:	mov    rax,QWORD PTR [rcx]
   14000e34d:	call   QWORD PTR [rax+0x20]
   14000e350:	mov    ecx,DWORD PTR [rbx+0x7f88]
   14000e356:	mov    QWORD PTR [rbx+0x7f78],rax
   14000e35d:	sub    ecx,0x1
   14000e360:	je     0x14000e387
   14000e362:	sub    ecx,0x1
   14000e365:	je     0x14000e37d
   14000e367:	cmp    ecx,0x1
   14000e36a:	jne    0x14000e376
   14000e36c:	mov    rcx,rbx
   14000e36f:	call   0x14000da68
   14000e374:	jmp    0x14000e38f
   14000e376:	mov    rcx,QWORD PTR [rsp+0x30]
   14000e37b:	jmp    0x14000e392
   14000e37d:	mov    rcx,rbx
   14000e380:	call   0x14000ca18
   14000e385:	jmp    0x14000e38f
   14000e387:	mov    rcx,rbx
   14000e38a:	call   0x14000c6d8
   14000e38f:	mov    rcx,rax
   14000e392:	test   rcx,rcx
   14000e395:	je     0x14000e3b1
   14000e397:	mov    rax,QWORD PTR [rbx+0x7f78]
   14000e39e:	cmp    QWORD PTR [rbx+0x7f80],rax
   14000e3a5:	jg     0x14000e3b1
   14000e3a7:	mov    rcx,rbx
   14000e3aa:	call   0x14000bf74
   14000e3af:	jmp    0x14000e346
   14000e3b1:	mov    rax,rcx
   14000e3b4:	add    rsp,0x20
   14000e3b8:	pop    rbx
   14000e3b9:	ret    
   14000e3ba:	int3   
   14000e3bb:	int3   
   14000e3bc:	rex push rbx
   14000e3be:	push   rbp
   14000e3bf:	push   rsi
   14000e3c0:	push   rdi
   14000e3c1:	push   r12
   14000e3c3:	push   r14
   14000e3c5:	push   r15
   14000e3c7:	mov    eax,0xe9e0
   14000e3cc:	call   0x140055f20
   14000e3d1:	sub    rsp,rax
   14000e3d4:	mov    QWORD PTR [rsp+0x50],0xfffffffffffffffe
   14000e3dd:	mov    rax,QWORD PTR [rip+0x73afc]        # 0x140081ee0
   14000e3e4:	xor    rax,rsp
   14000e3e7:	mov    QWORD PTR [rsp+0xe9d0],rax
   14000e3ef:	mov    r12,r8
   14000e3f2:	mov    rsi,rdx
   14000e3f5:	mov    rbx,rcx
   14000e3f8:	xor    edi,edi
   14000e3fa:	cmp    BYTE PTR [rcx+0x7fa0],dil
   14000e401:	je     0x14000e423
   14000e403:	lea    rdx,[rcx+0x26]
   14000e407:	lea    ecx,[rdi+0x1b]
   14000e40a:	call   0x1400013b0
   14000e40f:	lea    edx,[rdi+0x3]
   14000e412:	lea    rcx,[rip+0x86447]        # 0x140094860
   14000e419:	call   0x14001bf08
   14000e41e:	jmp    0x14000e694
   14000e423:	cmp    BYTE PTR [rcx+0x5862],0x5
   14000e42a:	ja     0x14000e686
   14000e430:	mov    ecx,0x1d
   14000e435:	lea    eax,[rcx+0x15]
   14000e438:	cmp    DWORD PTR [rbx+0x7f88],0x3
   14000e43f:	cmove  ecx,eax
   14000e442:	movzx  eax,BYTE PTR [rbx+0x5861]
   14000e449:	cmp    eax,ecx
   14000e44b:	jg     0x14000e686
   14000e451:	cmp    QWORD PTR [rbx+0x68a0],rdi
   14000e458:	jne    0x14000e46a
   14000e45a:	cmp    BYTE PTR [rbx+0x68e1],dil
   14000e461:	jne    0x14000e46a
   14000e463:	mov    al,0x1
   14000e465:	jmp    0x14000e696
   14000e46a:	lea    rbp,[rbx+0x20f0]
   14000e471:	mov    rcx,rbp
   14000e474:	call   0x140036fa8
   14000e479:	mov    rdx,rbp
   14000e47c:	lea    rcx,[rsp+0x60]
   14000e481:	call   0x140049044
   14000e486:	nop
   14000e487:	xor    r8d,r8d
   14000e48a:	mov    rdx,QWORD PTR [rbx+0x6940]
   14000e491:	lea    rcx,[rsp+0x60]
   14000e496:	call   0x14004b824
   14000e49b:	test   r12,r12
   14000e49e:	jne    0x14000e4fd
   14000e4a0:	mov    rax,QWORD PTR [rbx+0x68a8]
   14000e4a7:	cmp    rax,0x1000000
   14000e4ad:	jle    0x14000e4c2
   14000e4af:	lea    rdx,[rbx+0x26]
   14000e4b3:	lea    ecx,[r12+0x1c]
   14000e4b8:	call   0x1400013b0
   14000e4bd:	jmp    0x14000e677
   14000e4c2:	test   rsi,rsi
   14000e4c5:	jne    0x14000e4d0
   14000e4c7:	mov    BYTE PTR [rbx+0x2189],0x1
   14000e4ce:	jmp    0x14000e4fd
   14000e4d0:	cmp    rax,QWORD PTR [rsi+0x10]
   14000e4d4:	jbe    0x14000e4e7
   14000e4d6:	sub    rax,QWORD PTR [rsi+0x8]
   14000e4da:	mov    rdx,rax
   14000e4dd:	mov    rcx,rsi
   14000e4e0:	call   0x140001858
   14000e4e5:	jmp    0x14000e4eb
   14000e4e7:	mov    QWORD PTR [rsi+0x8],rax
   14000e4eb:	mov    r8d,DWORD PTR [rbx+0x68a8]
   14000e4f2:	mov    rdx,QWORD PTR [rsi]
   14000e4f5:	mov    rcx,rbp
   14000e4f8:	call   0x1400375e0
   14000e4fd:	cmp    BYTE PTR [rbx+0x68e3],dil
   14000e504:	je     0x14000e57a
   14000e506:	mov    r9,QWORD PTR [rbx+0x22b0]
   14000e50d:	cmp    BYTE PTR [r9+0x5130],dil
   14000e514:	je     0x14000e677
   14000e51a:	lea    r8,[rbx+0x690a]
   14000e521:	lea    r10,[rbx+0x6913]
   14000e528:	lea    r11,[rbx+0x68f9]
   14000e52f:	mov    al,BYTE PTR [rbx+0x68e8]
   14000e535:	lea    rcx,[rbx+0x68e9]
   14000e53c:	neg    al
   14000e53e:	sbb    rdx,rdx
   14000e541:	and    rdx,rcx
   14000e544:	add    r9,0x5030
   14000e54b:	mov    QWORD PTR [rsp+0x40],r8
   14000e550:	mov    QWORD PTR [rsp+0x38],r10
   14000e555:	mov    eax,DWORD PTR [rbx+0x6934]
   14000e55b:	mov    DWORD PTR [rsp+0x30],eax
   14000e55f:	mov    QWORD PTR [rsp+0x28],r11
   14000e564:	mov    QWORD PTR [rsp+0x20],rdx
   14000e569:	mov    r8d,DWORD PTR [rbx+0x68e4]
   14000e570:	xor    edx,edx
   14000e572:	mov    rcx,rbp
   14000e575:	call   0x14003750c
   14000e57a:	lea    r14,[rbx+0x68b8]
   14000e581:	lea    r15,[rbx+0x2280]
   14000e588:	mov    r8d,0x1
   14000e58e:	mov    edx,DWORD PTR [r14]
   14000e591:	mov    rcx,r15
   14000e594:	call   0x1400241ac
   14000e599:	mov    rax,QWORD PTR [rbx+0x68a0]
   14000e5a0:	mov    QWORD PTR [rbx+0x2180],rax
   14000e5a7:	mov    BYTE PTR [rbx+0x2188],dil
   14000e5ae:	mov    r8,r12
   14000e5b1:	mov    rdx,rbx
   14000e5b4:	mov    rcx,rbp
   14000e5b7:	call   0x140037588
   14000e5bc:	mov    al,BYTE PTR [rbx+0x68e1]
   14000e5c2:	mov    BYTE PTR [rbx+0x21eb],al
   14000e5c8:	lea    rax,[rbx+0x5848]
   14000e5cf:	mov    QWORD PTR [rbp+0xb8],rax
   14000e5d6:	mov    QWORD PTR [rbp+0xc0],rdi
   14000e5dd:	mov    rdx,QWORD PTR [rbx+0x68a8]
   14000e5e4:	mov    QWORD PTR [rsp+0x4e00],rdx
   14000e5ec:	mov    BYTE PTR [rsp+0x4e18],dil
   14000e5f4:	cmp    BYTE PTR [rbx+0x5862],dil
   14000e5fb:	jne    0x14000e607
   14000e5fd:	mov    rcx,rbp
   14000e600:	call   0x140020228
   14000e605:	jmp    0x14000e61b
   14000e607:	movzx  edx,BYTE PTR [rbx+0x5861]
   14000e60e:	xor    r8d,r8d
   14000e611:	lea    rcx,[rsp+0x60]
   14000e616:	call   0x14004ab9c
   14000e61b:	mov    al,BYTE PTR [rbx+0x6912]
   14000e621:	lea    r9,[rbx+0x6913]
   14000e628:	neg    al
   14000e62a:	sbb    r8,r8
   14000e62d:	and    r8,r9
   14000e630:	mov    rdx,r14
   14000e633:	mov    rcx,r15
   14000e636:	call   0x14002413c
   14000e63b:	test   al,al
   14000e63d:	jne    0x14000e674
   14000e63f:	lea    r8,[rbx+0x5868]
   14000e646:	lea    rdx,[rbx+0x26]
   14000e64a:	mov    ecx,0x1d
   14000e64f:	call   0x140001358
   14000e654:	mov    edx,0x3
   14000e659:	lea    rcx,[rip+0x86200]        # 0x140094860
   14000e660:	call   0x14001bf08
   14000e665:	test   rsi,rsi
   14000e668:	je     0x14000e677
   14000e66a:	mov    rcx,rsi
   14000e66d:	call   0x140009a60
   14000e672:	jmp    0x14000e677
   14000e674:	mov    dil,0x1
   14000e677:	lea    rcx,[rsp+0x60]
   14000e67c:	call   0x1400491fc
   14000e681:	mov    al,dil
   14000e684:	jmp    0x14000e696
   14000e686:	lea    rdx,[rbx+0x26]
   14000e68a:	mov    ecx,0x1c
   14000e68f:	call   0x1400013b0
   14000e694:	xor    al,al
   14000e696:	mov    rcx,QWORD PTR [rsp+0xe9d0]
   14000e69e:	xor    rcx,rsp
   14000e6a1:	call   0x140055f90
   14000e6a6:	add    rsp,0xe9e0
   14000e6ad:	pop    r15
   14000e6af:	pop    r14
   14000e6b1:	pop    r12
   14000e6b3:	pop    rdi
   14000e6b4:	pop    rsi
   14000e6b5:	pop    rbp
   14000e6b6:	pop    rbx
   14000e6b7:	ret    
   14000e6b8:	rex push rbx
   14000e6ba:	sub    rsp,0xa0
   14000e6c1:	mov    rax,QWORD PTR [rip+0x73818]        # 0x140081ee0
   14000e6c8:	xor    rax,rsp
   14000e6cb:	mov    QWORD PTR [rsp+0x90],rax
   14000e6d3:	mov    r8,QWORD PTR [rcx+0x22b0]
   14000e6da:	mov    rbx,rcx
   14000e6dd:	cmp    BYTE PTR [r8+0x5130],0x0
   14000e6e5:	jne    0x14000e75c
   14000e6e7:	lea    rdx,[rcx+0x26]
   14000e6eb:	add    r8,0x5030
   14000e6f2:	mov    ecx,0x2
   14000e6f7:	call   0x140048830
   14000e6fc:	test   al,al
   14000e6fe:	je     0x14000e710
   14000e700:	mov    rax,QWORD PTR [rbx+0x22b0]
   14000e707:	cmp    BYTE PTR [rax+0x5130],0x0
   14000e70e:	jne    0x14000e74e
   14000e710:	mov    rcx,rbx
   14000e713:	call   0x1400207cc
   14000e718:	and    DWORD PTR [rsp+0x80],0x0
   14000e720:	lea    rcx,[rsp+0x20]
   14000e725:	and    DWORD PTR [rsp+0x84],0x0
   14000e72d:	mov    DWORD PTR [rsp+0x88],0x2
   14000e738:	call   0x1400479a4
   14000e73d:	mov    edx,0xff
   14000e742:	lea    rcx,[rip+0x86117]        # 0x140094860
   14000e749:	call   0x14001bc60
   14000e74e:	mov    rax,QWORD PTR [rbx+0x22b0]
   14000e755:	mov    BYTE PTR [rax+0x5133],0x1
   14000e75c:	mov    rcx,QWORD PTR [rsp+0x90]
   14000e764:	xor    rcx,rsp
   14000e767:	call   0x140055f90
   14000e76c:	add    rsp,0xa0
   14000e773:	pop    rbx
   14000e774:	ret    
   14000e775:	int3   
   14000e776:	int3   
   14000e777:	int3   
   14000e778:	mov    QWORD PTR [rsp+0x8],rbx
   14000e77d:	mov    QWORD PTR [rsp+0x10],rbp
   14000e782:	mov    QWORD PTR [rsp+0x18],rsi
   14000e787:	push   rdi
   14000e788:	sub    rsp,0x20
   14000e78c:	mov    ebp,edx
   14000e78e:	mov    rbx,rcx
   14000e791:	xor    esi,esi
   14000e793:	jmp    0x14000e7c4
   14000e795:	cmp    ebp,0x5
   14000e798:	je     0x14000e7a3
   14000e79a:	cmp    DWORD PTR [rbx+0x22d4],0x5
   14000e7a1:	je     0x14000e7d1
   14000e7a3:	inc    rsi
   14000e7a6:	test   sil,0x7f
   14000e7aa:	jne    0x14000e7b1
   14000e7ac:	call   0x140046bb4
   14000e7b1:	cmp    DWORD PTR [rbx+0x22d4],ebp
   14000e7b7:	je     0x14000e7e8
   14000e7b9:	mov    rcx,rbx
   14000e7bc:	call   0x14000a2c8
   14000e7c1:	mov    rcx,rbx
   14000e7c4:	call   0x14000e334
   14000e7c9:	mov    rdi,rax
   14000e7cc:	test   rax,rax
   14000e7cf:	jne    0x14000e795
   14000e7d1:	xor    eax,eax
   14000e7d3:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e7d8:	mov    rbp,QWORD PTR [rsp+0x38]
   14000e7dd:	mov    rsi,QWORD PTR [rsp+0x40]
   14000e7e2:	add    rsp,0x20
   14000e7e6:	pop    rdi
   14000e7e7:	ret    
   14000e7e8:	mov    rax,rdi
   14000e7eb:	jmp    0x14000e7d3
   14000e7ed:	int3   
   14000e7ee:	int3   
   14000e7ef:	int3   
   14000e7f0:	mov    QWORD PTR [rsp+0x8],rbx
   14000e7f5:	push   rdi
   14000e7f6:	sub    rsp,0x20
   14000e7fa:	cmp    BYTE PTR [rcx+0x3496],0x0
   14000e801:	mov    rbx,rcx
   14000e804:	je     0x14000e89b
   14000e80a:	cmp    QWORD PTR [rcx+0x34a8],0x0
   14000e812:	je     0x14000e89b
   14000e818:	mov    rax,QWORD PTR [rcx]
   14000e81b:	call   QWORD PTR [rax+0x20]
   14000e81e:	mov    r9,QWORD PTR [rbx]
   14000e821:	xor    r8d,r8d
   14000e824:	mov    rdx,QWORD PTR [rbx+0x34a8]
   14000e82b:	mov    rcx,rbx
   14000e82e:	mov    rdi,rax
   14000e831:	call   QWORD PTR [r9+0x18]
   14000e835:	mov    rcx,rbx
   14000e838:	call   0x14000e334
   14000e83d:	mov    rdx,rax
   14000e840:	test   rax,rax
   14000e843:	je     0x14000e88c
   14000e845:	cmp    BYTE PTR [rbx+0x7fa0],0x0
   14000e84c:	jne    0x14000e88c
   14000e84e:	cmp    DWORD PTR [rbx+0x22d4],0x3
   14000e855:	jne    0x14000e88c
   14000e857:	movzx  ecx,WORD PTR [rbx+0x5868]
   14000e85e:	cmp    cx,WORD PTR [rip+0x5e913]        # 0x14006d178
   14000e865:	jne    0x14000e88c
   14000e867:	movzx  eax,WORD PTR [rbx+0x586a]
   14000e86e:	cmp    ax,WORD PTR [rip+0x5e905]        # 0x14006d17a
   14000e875:	jne    0x14000e88c
   14000e877:	movzx  eax,WORD PTR [rbx+0x586c]
   14000e87e:	cmp    ax,WORD PTR [rip+0x5e8f7]        # 0x14006d17c
   14000e885:	jne    0x14000e88c
   14000e887:	mov    rax,rdx
   14000e88a:	jmp    0x14000e8aa
   14000e88c:	mov    rax,QWORD PTR [rbx]
   14000e88f:	xor    r8d,r8d
   14000e892:	mov    rdx,rdi
   14000e895:	mov    rcx,rbx
   14000e898:	call   QWORD PTR [rax+0x18]
   14000e89b:	lea    rdx,[rip+0x5e8de]        # 0x14006d180
   14000e8a2:	mov    rcx,rbx
   14000e8a5:	call   0x14000e8b8
   14000e8aa:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e8af:	add    rsp,0x20
   14000e8b3:	pop    rdi
   14000e8b4:	ret    
   14000e8b5:	int3   
   14000e8b6:	int3   
   14000e8b7:	int3   
   14000e8b8:	mov    QWORD PTR [rsp+0x8],rbx
   14000e8bd:	mov    QWORD PTR [rsp+0x10],rbp
   14000e8c2:	mov    QWORD PTR [rsp+0x18],rsi
   14000e8c7:	push   rdi
   14000e8c8:	sub    rsp,0x20
   14000e8cc:	mov    rbp,rdx
   14000e8cf:	mov    rbx,rcx
   14000e8d2:	xor    esi,esi
   14000e8d4:	call   0x14000e334
   14000e8d9:	mov    rdi,rax
   14000e8dc:	test   rax,rax
   14000e8df:	je     0x14000e93a
   14000e8e1:	cmp    DWORD PTR [rbx+0x22d4],0x5
   14000e8e8:	je     0x14000e93a
   14000e8ea:	inc    rsi
   14000e8ed:	test   sil,0x7f
   14000e8f1:	jne    0x14000e8f8
   14000e8f3:	call   0x140046bb4
   14000e8f8:	cmp    DWORD PTR [rbx+0x22d4],0x3
   14000e8ff:	jne    0x14000e928
   14000e901:	lea    rax,[rbx+0x5868]
   14000e908:	mov    rdx,rbp
   14000e90b:	sub    rdx,rax
   14000e90e:	movzx  ecx,WORD PTR [rax]
   14000e911:	movzx  r8d,WORD PTR [rax+rdx*1]
   14000e916:	sub    ecx,r8d
   14000e919:	jne    0x14000e924
   14000e91b:	add    rax,0x2
   14000e91f:	test   r8d,r8d
   14000e922:	jne    0x14000e90e
   14000e924:	test   ecx,ecx
   14000e926:	je     0x14000e935
   14000e928:	mov    rcx,rbx
   14000e92b:	call   0x14000a2c8
   14000e930:	mov    rcx,rbx
   14000e933:	jmp    0x14000e8d4
   14000e935:	mov    rax,rdi
   14000e938:	jmp    0x14000e93c
   14000e93a:	xor    eax,eax
   14000e93c:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e941:	mov    rbp,QWORD PTR [rsp+0x38]
   14000e946:	mov    rsi,QWORD PTR [rsp+0x40]
   14000e94b:	add    rsp,0x20
   14000e94f:	pop    rdi
   14000e950:	ret    
   14000e951:	int3   
   14000e952:	int3   
   14000e953:	int3   
   14000e954:	rex push rbx
   14000e956:	sub    rsp,0x20
   14000e95a:	mov    rbx,rcx
   14000e95d:	call   0x140020b88
   14000e962:	cmp    QWORD PTR [rbx+0x7f78],rax
   14000e969:	jne    0x14000e974
   14000e96b:	cmp    QWORD PTR [rbx+0x7f80],rax
   14000e972:	je     0x14000e993
   14000e974:	lea    rdx,[rbx+0x26]
   14000e978:	mov    ecx,0x37
   14000e97d:	call   0x1400013b0
   14000e982:	mov    edx,0x1
   14000e987:	lea    rcx,[rip+0x85ed2]        # 0x140094860
   14000e98e:	call   0x14001bf08
   14000e993:	add    rsp,0x20
   14000e997:	pop    rbx
   14000e998:	ret    
   14000e999:	int3   
   14000e99a:	int3   
   14000e99b:	int3   
   14000e99c:	sub    rsp,0x28
   14000e9a0:	mov    r8,rdx
   14000e9a3:	lea    rdx,[rcx+0x26]
   14000e9a7:	mov    ecx,0x20
   14000e9ac:	call   0x140001358
   14000e9b1:	mov    edx,0x1
   14000e9b6:	lea    rcx,[rip+0x85ea3]        # 0x140094860
   14000e9bd:	add    rsp,0x28
   14000e9c1:	jmp    0x14001bf08
   14000e9c6:	int3   
   14000e9c7:	int3   
   14000e9c8:	jmp    0x14000e9d0
   14000e9cd:	int3   
   14000e9ce:	int3   
   14000e9cf:	int3   
   14000e9d0:	mov    QWORD PTR [rsp+0x8],rbx
   14000e9d5:	mov    QWORD PTR [rsp+0x10],rbp
   14000e9da:	mov    QWORD PTR [rsp+0x18],rsi
   14000e9df:	push   rdi
   14000e9e0:	sub    rsp,0x20
   14000e9e4:	mov    rbx,QWORD PTR [rcx+0x10]
   14000e9e8:	mov    rsi,rcx
   14000e9eb:	mov    rdi,QWORD PTR [rcx+0x8]
   14000e9ef:	mov    ebp,0x200
   14000e9f4:	jmp    0x14000ea26
   14000e9f6:	cmp    DWORD PTR [rip+0x900e7],0x1        # 0x14009eae4
   14000e9fd:	jl     0x14000ea0f
   14000e9ff:	cmp    rbx,0x400
   14000ea06:	jb     0x14000ea0f
   14000ea08:	prefetcht0 BYTE PTR [rdi+0x200]
   14000ea0f:	mov    rcx,QWORD PTR [rsi]
   14000ea12:	mov    r8d,0x40
   14000ea18:	mov    rdx,rdi
   14000ea1b:	call   0x14000ffa4
   14000ea20:	add    rdi,rbp
   14000ea23:	sub    rbx,rbp
   14000ea26:	cmp    rbx,rbp
   14000ea29:	jae    0x14000e9f6
   14000ea2b:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ea30:	mov    rbp,QWORD PTR [rsp+0x38]
   14000ea35:	mov    rsi,QWORD PTR [rsp+0x40]
   14000ea3a:	add    rsp,0x20
   14000ea3e:	pop    rdi
   14000ea3f:	ret    
   14000ea40:	mov    rax,rsp
   14000ea43:	mov    QWORD PTR [rax+0x10],rbx
   14000ea47:	mov    QWORD PTR [rax+0x18],rsi
   14000ea4b:	mov    QWORD PTR [rax+0x20],rdi
   14000ea4f:	push   rbp
   14000ea50:	push   r12
   14000ea52:	push   r13
   14000ea54:	push   r14
   14000ea56:	push   r15
   14000ea58:	lea    rbp,[rax-0x5f]
   14000ea5c:	sub    rsp,0xf0
   14000ea63:	mov    rax,QWORD PTR [rip+0x73476]        # 0x140081ee0
   14000ea6a:	xor    rax,rsp
   14000ea6d:	mov    QWORD PTR [rbp+0x27],rax
   14000ea71:	mov    rbx,rcx
   14000ea74:	mov    QWORD PTR [rbp-0x69],rcx
   14000ea78:	lea    rcx,[rbp-0x19]
   14000ea7c:	mov    r8d,0x40
   14000ea82:	call   0x140059180
   14000ea87:	mov    rax,QWORD PTR [rbx+0xf8]
   14000ea8e:	lea    r9,[rip+0x5e86b]        # 0x14006d300
   14000ea95:	mov    r8,QWORD PTR [rbx+0x100]
   14000ea9c:	movups xmm0,XMMWORD PTR [rax]
   14000ea9f:	movups xmm1,XMMWORD PTR [rax+0x10]
   14000eaa3:	lea    rax,[rip+0x5e866]        # 0x14006d310
   14000eaaa:	movups XMMWORD PTR [rbp-0x59],xmm0
   14000eaae:	sub    r8,rax
   14000eab1:	movups xmm0,XMMWORD PTR [rip+0x5e848]        # 0x14006d300
   14000eab8:	xor    r11d,r11d
   14000eabb:	movups XMMWORD PTR [rbp-0x49],xmm1
   14000eabf:	mov    QWORD PTR [rbp-0x71],r11
   14000eac3:	mov    edx,r11d
   14000eac6:	movups XMMWORD PTR [rbp-0x39],xmm0
   14000eaca:	lea    rax,[rdx+r9*1]
   14000eace:	mov    ecx,DWORD PTR [r8+rax*1+0x10]
   14000ead3:	xor    ecx,DWORD PTR [rax+0x10]
   14000ead6:	mov    DWORD PTR [rbp+rdx*1-0x29],ecx
   14000eada:	add    rdx,0x4
   14000eade:	cmp    rdx,0x8
   14000eae2:	jl     0x14000eaca
   14000eae4:	mov    r8,QWORD PTR [rbx+0x108]
   14000eaeb:	lea    rax,[rip+0x5e826]        # 0x14006d318
   14000eaf2:	sub    r8,rax
   14000eaf5:	mov    rdx,r11
   14000eaf8:	lea    rax,[rdx+r9*1]
   14000eafc:	mov    ecx,DWORD PTR [r8+rax*1+0x18]
   14000eb01:	xor    ecx,DWORD PTR [rax+0x18]
   14000eb04:	mov    DWORD PTR [rbp+rdx*1-0x21],ecx
   14000eb08:	add    rdx,0x4
   14000eb0c:	cmp    rdx,0x8
   14000eb10:	jl     0x14000eaf8
   14000eb12:	mov    eax,DWORD PTR [rbp-0x41]
   14000eb15:	lea    rsi,[rip+0x5e745]        # 0x14006d261
   14000eb1c:	mov    ecx,DWORD PTR [rbp-0x45]
   14000eb1f:	mov    edx,DWORD PTR [rbp-0x55]
   14000eb22:	mov    edi,DWORD PTR [rbp-0x1d]
   14000eb25:	mov    r13d,DWORD PTR [rbp-0x21]
   14000eb29:	mov    r12d,DWORD PTR [rbp-0x25]
   14000eb2d:	mov    r15d,DWORD PTR [rbp-0x29]
   14000eb31:	mov    r11d,DWORD PTR [rbp-0x2d]
   14000eb35:	mov    ebx,DWORD PTR [rbp-0x31]
   14000eb38:	mov    r9d,DWORD PTR [rbp-0x35]
   14000eb3c:	mov    r8d,DWORD PTR [rbp-0x39]
   14000eb40:	mov    r14d,DWORD PTR [rbp-0x3d]
   14000eb44:	mov    r10d,DWORD PTR [rbp-0x59]
   14000eb48:	mov    DWORD PTR [rbp-0x7d],eax
   14000eb4b:	mov    eax,DWORD PTR [rbp-0x49]
   14000eb4e:	mov    DWORD PTR [rsp+0x30],eax
   14000eb52:	mov    eax,DWORD PTR [rbp-0x4d]
   14000eb55:	mov    DWORD PTR [rsp+0x38],ecx
   14000eb59:	mov    ecx,DWORD PTR [rbp-0x51]
   14000eb5c:	mov    DWORD PTR [rsp+0x20],eax
   14000eb60:	mov    QWORD PTR [rbp-0x79],0xa
   14000eb68:	mov    DWORD PTR [rsp+0x2c],ecx
   14000eb6c:	mov    DWORD PTR [rsp+0x24],edx
   14000eb70:	movzx  eax,BYTE PTR [rsi-0x1]
   14000eb74:	mov    ecx,DWORD PTR [rbp+rax*4-0x19]
   14000eb78:	add    ecx,DWORD PTR [rsp+0x30]
   14000eb7c:	movzx  eax,BYTE PTR [rsi]
   14000eb7f:	add    r10d,ecx
   14000eb82:	xor    r15d,r10d
   14000eb85:	ror    r15d,0x10
   14000eb89:	add    r8d,r15d
   14000eb8c:	mov    ecx,DWORD PTR [rbp+rax*4-0x19]
   14000eb90:	mov    edx,r8d
   14000eb93:	xor    edx,DWORD PTR [rsp+0x30]
   14000eb97:	movzx  eax,BYTE PTR [rsi+0x1]
   14000eb9b:	ror    edx,0xc
   14000eb9e:	add    ecx,edx
   14000eba0:	add    r10d,ecx
   14000eba3:	mov    ecx,DWORD PTR [rbp+rax*4-0x19]
   14000eba7:	xor    r15d,r10d
   14000ebaa:	add    ecx,DWORD PTR [rsp+0x38]
   14000ebae:	movzx  eax,BYTE PTR [rsi+0x2]
   14000ebb2:	mov    DWORD PTR [rsp+0x28],r10d
   14000ebb7:	ror    r15d,0x8
   14000ebbb:	add    r8d,r15d
   14000ebbe:	mov    r10d,r8d
   14000ebc1:	mov    DWORD PTR [rsp+0x34],r8d
   14000ebc6:	mov    r8d,DWORD PTR [rsp+0x24]
   14000ebcb:	xor    r10d,edx
   14000ebce:	add    r8d,ecx
   14000ebd1:	ror    r10d,0x7
   14000ebd5:	mov    ecx,DWORD PTR [rbp+rax*4-0x19]
   14000ebd9:	xor    r12d,r8d
   14000ebdc:	movzx  eax,BYTE PTR [rsi+0x3]
   14000ebe0:	ror    r12d,0x10
   14000ebe4:	add    r9d,r12d
   14000ebe7:	mov    edx,r9d
   14000ebea:	xor    edx,DWORD PTR [rsp+0x38]
   14000ebee:	ror    edx,0xc
   14000ebf1:	add    ecx,edx
   14000ebf3:	add    r8d,ecx
   14000ebf6:	mov    ecx,DWORD PTR [rbp+rax*4-0x19]
   14000ebfa:	add    ecx,DWORD PTR [rbp-0x7d]
   14000ebfd:	xor    r12d,r8d
   14000ec00:	movzx  eax,BYTE PTR [rsi+0x4]
   14000ec04:	mov    DWORD PTR [rsp+0x24],r8d
   14000ec09:	ror    r12d,0x8
   14000ec0d:	add    r9d,r12d
   14000ec10:	mov    r8d,r9d
   14000ec13:	mov    DWORD PTR [rsp+0x30],r9d
   14000ec18:	mov    r9d,DWORD PTR [rsp+0x2c]
   14000ec1d:	xor    r8d,edx
   14000ec20:	add    r9d,ecx
   14000ec23:	ror    r8d,0x7
   14000ec27:	mov    ecx,DWORD PTR [rbp+rax*4-0x19]
   14000ec2b:	xor    r13d,r9d
   14000ec2e:	movzx  eax,BYTE PTR [rsi+0x5]
   14000ec32:	ror    r13d,0x10
   14000ec36:	add    ebx,r13d
   14000ec39:	mov    edx,ebx
   14000ec3b:	xor    edx,DWORD PTR [rbp-0x7d]
   14000ec3e:	ror    edx,0xc
   14000ec41:	add    ecx,edx
   14000ec43:	add    r9d,ecx
   14000ec46:	mov    ecx,DWORD PTR [rbp+rax*4-0x19]
   14000ec4a:	mov    eax,DWORD PTR [rsp+0x20]
   14000ec4e:	xor    r13d,r9d
   14000ec51:	add    ecx,r14d
   14000ec54:	mov    DWORD PTR [rsp+0x2c],r9d
   14000ec59:	add    eax,ecx
   14000ec5b:	ror    r13d,0x8
   14000ec5f:	xor    edi,eax
   14000ec61:	mov    DWORD PTR [rsp+0x20],eax
   14000ec65:	movzx  eax,BYTE PTR [rsi+0x6]
   14000ec69:	add    ebx,r13d
   14000ec6c:	ror    edi,0x10
   14000ec6f:	mov    r9d,ebx
   14000ec72:	xor    r9d,edx
   14000ec75:	add    r11d,edi
   14000ec78:	mov    edx,r11d
   14000ec7b:	ror    r9d,0x7
   14000ec7f:	mov    ecx,DWORD PTR [rbp+rax*4-0x19]
   14000ec83:	xor    edx,r14d
   14000ec86:	ror    edx,0xc
   14000ec89:	mov    eax,DWORD PTR [rsp+0x20]
   14000ec8d:	add    ecx,edx
   14000ec8f:	add    eax,ecx
   14000ec91:	xor    edi,eax
   14000ec93:	mov    DWORD PTR [rsp+0x20],eax
   14000ec97:	movzx  eax,BYTE PTR [rsi+0x7]
   14000ec9b:	ror    edi,0x8
   14000ec9e:	add    r11d,edi
   14000eca1:	mov    r14d,r11d
   14000eca4:	mov    ecx,DWORD PTR [rbp+rax*4-0x19]
   14000eca8:	xor    r14d,edx
   14000ecab:	mov    eax,DWORD PTR [rsp+0x28]
   14000ecaf:	add    ecx,r8d
   14000ecb2:	add    eax,ecx
   14000ecb4:	ror    r14d,0x7
   14000ecb8:	xor    edi,eax
   14000ecba:	mov    DWORD PTR [rsp+0x28],eax
   14000ecbe:	movzx  eax,BYTE PTR [rsi+0x8]
   14000ecc2:	ror    edi,0x10
   14000ecc5:	add    ebx,edi
   14000ecc7:	mov    edx,ebx
   14000ecc9:	mov    ecx,DWORD PTR [rbp+rax*4-0x19]
   14000eccd:	xor    edx,r8d
   14000ecd0:	mov    eax,DWORD PTR [rsp+0x28]
   14000ecd4:	ror    edx,0xc
   14000ecd7:	add    ecx,edx
   14000ecd9:	add    eax,ecx
   14000ecdb:	xor    edi,eax
   14000ecdd:	mov    DWORD PTR [rsp+0x28],eax
   14000ece1:	mov    DWORD PTR [rbp-0x59],eax
   14000ece4:	ror    edi,0x8
   14000ece7:	add    ebx,edi
   14000ece9:	mov    eax,ebx
   14000eceb:	xor    eax,edx
   14000eced:	mov    edx,DWORD PTR [rsp+0x24]
   14000ecf1:	ror    eax,0x7
   14000ecf4:	mov    DWORD PTR [rsp+0x38],eax
   14000ecf8:	mov    DWORD PTR [rbp-0x45],eax
   14000ecfb:	movzx  eax,BYTE PTR [rsi+0x9]
   14000ecff:	mov    ecx,DWORD PTR [rbp+rax*4-0x19]
   14000ed03:	movzx  eax,BYTE PTR [rsi+0xa]
   14000ed07:	add    ecx,r9d
   14000ed0a:	add    edx,ecx
   14000ed0c:	mov    DWORD PTR [rsp+0x24],edx
   14000ed10:	xor    edx,r15d
   14000ed13:	ror    edx,0x10
   14000ed16:	mov    ecx,DWORD PTR [rbp+rax*4-0x19]
   14000ed1a:	add    r11d,edx
   14000ed1d:	mov    eax,DWORD PTR [rsp+0x24]
   14000ed21:	mov    r8d,r11d
   14000ed24:	xor    r8d,r9d
   14000ed27:	mov    r9d,DWORD PTR [rsp+0x2c]
   14000ed2c:	ror    r8d,0xc
   14000ed30:	add    ecx,r8d
   14000ed33:	add    eax,ecx
   14000ed35:	mov    r15d,eax
   14000ed38:	mov    DWORD PTR [rsp+0x24],eax
   14000ed3c:	xor    r15d,edx
   14000ed3f:	mov    DWORD PTR [rbp-0x55],eax
   14000ed42:	ror    r15d,0x8
   14000ed46:	add    r11d,r15d
   14000ed49:	mov    eax,r11d
   14000ed4c:	xor    eax,r8d
   14000ed4f:	mov    r8d,DWORD PTR [rsp+0x34]
   14000ed54:	ror    eax,0x7
   14000ed57:	mov    DWORD PTR [rbp-0x7d],eax
   14000ed5a:	mov    DWORD PTR [rbp-0x41],eax
   14000ed5d:	movzx  eax,BYTE PTR [rsi+0xb]
   14000ed61:	mov    ecx,DWORD PTR [rbp+rax*4-0x19]
   14000ed65:	movzx  eax,BYTE PTR [rsi+0xc]
   14000ed69:	add    ecx,r14d
   14000ed6c:	add    r9d,ecx
   14000ed6f:	mov    edx,r9d
   14000ed72:	xor    edx,r12d
   14000ed75:	mov    ecx,DWORD PTR [rbp+rax*4-0x19]
   14000ed79:	ror    edx,0x10
   14000ed7c:	add    r8d,edx
   14000ed7f:	xor    r14d,r8d
   14000ed82:	ror    r14d,0xc
   14000ed86:	add    ecx,r14d
   14000ed89:	add    r9d,ecx
   14000ed8c:	movzx  eax,BYTE PTR [rsi+0xd]
   14000ed90:	lea    rsi,[rsi+0x10]
   14000ed94:	mov    r12d,r9d
   14000ed97:	mov    DWORD PTR [rsp+0x2c],r9d
   14000ed9c:	xor    r12d,edx
   14000ed9f:	mov    DWORD PTR [rbp-0x51],r9d
   14000eda3:	mov    r9d,DWORD PTR [rsp+0x30]
   14000eda8:	mov    ecx,DWORD PTR [rbp+rax*4-0x19]
   14000edac:	mov    eax,DWORD PTR [rsp+0x20]
   14000edb0:	add    ecx,r10d
   14000edb3:	add    eax,ecx
   14000edb5:	ror    r12d,0x8
   14000edb9:	add    r8d,r12d
   14000edbc:	mov    DWORD PTR [rsp+0x20],eax
   14000edc0:	mov    edx,eax
   14000edc2:	mov    DWORD PTR [rsp+0x34],r8d
   14000edc7:	movzx  eax,BYTE PTR [rsi-0x2]
   14000edcb:	xor    r14d,r8d
   14000edce:	xor    edx,r13d
   14000edd1:	mov    DWORD PTR [rbp-0x39],r8d
   14000edd5:	ror    edx,0x10
   14000edd8:	add    r9d,edx
   14000eddb:	ror    r14d,0x7
   14000eddf:	mov    ecx,DWORD PTR [rbp+rax*4-0x19]
   14000ede3:	mov    r8d,r9d
   14000ede6:	mov    eax,DWORD PTR [rsp+0x20]
   14000edea:	xor    r8d,r10d
   14000eded:	mov    r10d,DWORD PTR [rsp+0x28]
   14000edf2:	ror    r8d,0xc
   14000edf6:	add    ecx,r8d
   14000edf9:	add    eax,ecx
   14000edfb:	mov    r13d,eax
   14000edfe:	mov    DWORD PTR [rsp+0x20],eax
   14000ee02:	mov    DWORD PTR [rbp-0x4d],eax
   14000ee05:	xor    r13d,edx
   14000ee08:	ror    r13d,0x8
   14000ee0c:	add    r9d,r13d
   14000ee0f:	mov    eax,r9d
   14000ee12:	mov    DWORD PTR [rbp-0x35],r9d
   14000ee16:	xor    eax,r8d
   14000ee19:	mov    r8d,DWORD PTR [rsp+0x34]
   14000ee1e:	ror    eax,0x7
   14000ee21:	sub    QWORD PTR [rbp-0x79],0x1
   14000ee26:	mov    DWORD PTR [rsp+0x30],eax
   14000ee2a:	mov    DWORD PTR [rbp-0x49],eax
   14000ee2d:	jne    0x14000eb70
   14000ee33:	mov    DWORD PTR [rbp-0x2d],r11d
   14000ee37:	mov    r11,QWORD PTR [rbp-0x71]
   14000ee3b:	mov    DWORD PTR [rbp-0x31],ebx
   14000ee3e:	mov    rbx,QWORD PTR [rbp-0x69]
   14000ee42:	mov    DWORD PTR [rbp-0x1d],edi
   14000ee45:	mov    DWORD PTR [rbp-0x3d],r14d
   14000ee49:	mov    DWORD PTR [rbp-0x29],r15d
   14000ee4d:	mov    DWORD PTR [rbp-0x25],r12d
   14000ee51:	mov    DWORD PTR [rbp-0x21],r13d
   14000ee55:	mov    rcx,QWORD PTR [rbx+0xf8]
   14000ee5c:	mov    eax,DWORD PTR [rbp+r11*1-0x39]
   14000ee61:	xor    eax,DWORD PTR [r11+rcx*1]
   14000ee65:	xor    eax,DWORD PTR [rbp+r11*1-0x59]
   14000ee6a:	mov    DWORD PTR [r11+rcx*1],eax
   14000ee6e:	add    r11,0x4
   14000ee72:	cmp    r11,0x20
   14000ee76:	jb     0x14000ee55
   14000ee78:	mov    rcx,QWORD PTR [rbp+0x27]
   14000ee7c:	xor    rcx,rsp
   14000ee7f:	call   0x140055f90
   14000ee84:	lea    r11,[rsp+0xf0]
   14000ee8c:	mov    rbx,QWORD PTR [r11+0x38]
   14000ee90:	mov    rsi,QWORD PTR [r11+0x40]
   14000ee94:	mov    rdi,QWORD PTR [r11+0x48]
   14000ee98:	mov    rsp,r11
   14000ee9b:	pop    r15
   14000ee9d:	pop    r14
   14000ee9f:	pop    r13
   14000eea1:	pop    r12
   14000eea3:	pop    rbp
   14000eea4:	ret    
   14000eea5:	int3   
   14000eea6:	int3   
   14000eea7:	int3   
   14000eea8:	mov    r11,rsp
   14000eeab:	sub    rsp,0x108
   14000eeb2:	movd   xmm0,DWORD PTR [rdx+0x10]
   14000eeb7:	mov    r8,QWORD PTR [rcx+0xf8]
   14000eebe:	mov    rax,QWORD PTR [rcx+0x100]
   14000eec5:	movaps XMMWORD PTR [r11-0x18],xmm6
   14000eeca:	movd   xmm6,DWORD PTR [rdx+0x1c]
   14000eecf:	movdqa xmm5,XMMWORD PTR [r8+0x10]
   14000eed5:	movdqa xmm4,XMMWORD PTR [rax]
   14000eed9:	pxor   xmm4,XMMWORD PTR [rip+0x73a5f]        # 0x140082940
   14000eee1:	movaps XMMWORD PTR [r11-0x28],xmm7
   14000eee6:	movd   xmm7,DWORD PTR [rdx+0x14]
   14000eeeb:	movaps XMMWORD PTR [r11-0x38],xmm8
   14000eef0:	movaps XMMWORD PTR [r11-0x48],xmm9
   14000eef5:	movd   xmm9,DWORD PTR [rdx+0x28]
   14000eefb:	movaps XMMWORD PTR [r11-0x58],xmm10
   14000ef00:	movd   xmm10,DWORD PTR [rdx+0xc]
   14000ef06:	movdqa XMMWORD PTR [rsp+0x50],xmm5
   14000ef0c:	movaps XMMWORD PTR [r11-0x68],xmm11
   14000ef11:	movd   xmm11,DWORD PTR [rdx+0x38]
   14000ef17:	movaps XMMWORD PTR [r11-0x78],xmm12
   14000ef1c:	movd   xmm12,DWORD PTR [rdx]
   14000ef21:	movaps XMMWORD PTR [r11-0x88],xmm13
   14000ef29:	movdqa xmm8,xmm12
   14000ef2e:	punpckldq xmm8,xmm0
   14000ef33:	movaps XMMWORD PTR [rsp+0x70],xmm14
   14000ef39:	movaps XMMWORD PTR [rsp+0x60],xmm15
   14000ef3f:	movdqa xmm2,xmm8
   14000ef44:	movd   xmm0,DWORD PTR [rdx+0x18]
   14000ef49:	movd   xmm14,DWORD PTR [rdx+0x8]
   14000ef4f:	movdqa XMMWORD PTR [rsp+0x10],xmm7
   14000ef55:	movdqa xmm1,xmm14
   14000ef5a:	punpckldq xmm1,xmm0
   14000ef5e:	punpckldq xmm2,xmm1
   14000ef62:	paddd  xmm2,XMMWORD PTR [r8]
   14000ef67:	paddd  xmm2,xmm5
   14000ef6b:	movdqa XMMWORD PTR [rsp+0x20],xmm1
   14000ef71:	pxor   xmm4,xmm2
   14000ef75:	pshufb xmm4,XMMWORD PTR [rip+0x739e2]        # 0x140082960
   14000ef7e:	movdqa xmm3,xmm4
   14000ef82:	paddd  xmm3,XMMWORD PTR [rip+0x739a6]        # 0x140082930
   14000ef8a:	movdqa xmm0,xmm3
   14000ef8e:	pxor   xmm0,xmm5
   14000ef92:	movd   xmm5,DWORD PTR [rdx+0x4]
   14000ef97:	movdqa xmm1,xmm0
   14000ef9b:	punpckldq xmm5,xmm7
   14000ef9f:	psrld  xmm0,0xc
   14000efa4:	pslld  xmm1,0x14
   14000efa9:	pxor   xmm1,xmm0
   14000efad:	movdqa xmm0,xmm10
   14000efb2:	punpckldq xmm0,xmm6
   14000efb6:	punpckldq xmm5,xmm0
   14000efba:	paddd  xmm5,xmm2
   14000efbe:	paddd  xmm5,xmm1
   14000efc2:	pxor   xmm4,xmm5
   14000efc6:	pshufb xmm4,XMMWORD PTR [rip+0x73981]        # 0x140082950
   14000efcf:	movdqa xmm2,xmm4
   14000efd3:	pshufd xmm7,xmm4,0x93
   14000efd8:	paddd  xmm2,xmm3
   14000efdc:	movdqa xmm0,xmm2
   14000efe0:	pshufd xmm3,xmm2,0x4e
   14000efe5:	movd   xmm2,DWORD PTR [rdx+0x20]
   14000efea:	pxor   xmm0,xmm1
   14000efee:	movdqa xmm1,xmm0
   14000eff2:	psrld  xmm0,0x7
   14000eff7:	pslld  xmm1,0x19
   14000effc:	pxor   xmm1,xmm0
   14000f000:	movdqa xmm0,xmm9
   14000f005:	pshufd xmm4,xmm1,0x39
   14000f00a:	movd   xmm1,DWORD PTR [rdx+0x30]
   14000f00f:	punpckldq xmm2,xmm1
   14000f013:	punpckldq xmm0,xmm11
   14000f018:	punpckldq xmm2,xmm0
   14000f01c:	paddd  xmm2,xmm5
   14000f020:	paddd  xmm2,xmm4
   14000f024:	pxor   xmm7,xmm2
   14000f028:	pshufb xmm7,XMMWORD PTR [rip+0x7392f]        # 0x140082960
   14000f031:	movdqa xmm5,xmm7
   14000f035:	paddd  xmm5,xmm3
   14000f039:	movdqa xmm0,xmm5
   14000f03d:	pxor   xmm0,xmm4
   14000f041:	movdqa xmm1,xmm0
   14000f045:	pslld  xmm1,0x14
   14000f04a:	movd   xmm13,DWORD PTR [rdx+0x24]
   14000f050:	movd   xmm15,DWORD PTR [rdx+0x34]
   14000f056:	movdqa xmm3,xmm13
   14000f05b:	movd   xmm4,DWORD PTR [rdx+0x3c]
   14000f060:	psrld  xmm0,0xc
   14000f065:	pxor   xmm1,xmm0
   14000f069:	punpckldq xmm3,xmm15
   14000f06e:	movd   xmm0,DWORD PTR [rdx+0x2c]
   14000f073:	movdqa xmm6,xmm3
   14000f077:	movdqa XMMWORD PTR [rsp],xmm0
   14000f07c:	punpckldq xmm0,xmm4
   14000f080:	punpckldq xmm6,xmm0
   14000f084:	paddd  xmm6,xmm2
   14000f088:	movdqa XMMWORD PTR [rsp+0x30],xmm3
   14000f08e:	paddd  xmm6,xmm1
   14000f092:	punpckldq xmm11,xmm13
   14000f097:	pxor   xmm7,xmm6
   14000f09b:	pshufb xmm7,XMMWORD PTR [rip+0x738ac]        # 0x140082950
   14000f0a4:	movdqa xmm2,xmm7
   14000f0a8:	pshufd xmm7,xmm7,0x39
   14000f0ad:	paddd  xmm2,xmm5
   14000f0b1:	pshufd xmm3,xmm2,0x4e
   14000f0b6:	movdqa xmm0,xmm2
   14000f0ba:	pxor   xmm0,xmm1
   14000f0be:	movdqa xmm2,xmm11
   14000f0c3:	movdqa xmm1,xmm0
   14000f0c7:	psrld  xmm0,0x7
   14000f0cc:	pslld  xmm1,0x19
   14000f0d1:	pxor   xmm1,xmm0
   14000f0d5:	movd   xmm0,DWORD PTR [rdx+0x10]
   14000f0da:	punpckldq xmm0,xmm15
   14000f0df:	punpckldq xmm2,xmm0
   14000f0e3:	paddd  xmm2,xmm6
   14000f0e7:	pshufd xmm4,xmm1,0x93
   14000f0ec:	paddd  xmm2,xmm4
   14000f0f0:	movdqa xmm6,xmm9
   14000f0f5:	pxor   xmm7,xmm2
   14000f0f9:	pshufb xmm7,XMMWORD PTR [rip+0x7385e]        # 0x140082960
   14000f102:	movdqa xmm5,xmm7
   14000f106:	paddd  xmm5,xmm3
   14000f10a:	movd   xmm3,DWORD PTR [rdx+0x18]
   14000f10f:	movdqa xmm0,xmm5
   14000f113:	pxor   xmm0,xmm4
   14000f117:	movdqa xmm1,xmm0
   14000f11b:	psrld  xmm0,0xc
   14000f120:	pslld  xmm1,0x14
   14000f125:	pxor   xmm1,xmm0
   14000f129:	movd   xmm0,DWORD PTR [rdx+0x3c]
   14000f12e:	punpckldq xmm6,xmm0
   14000f132:	movd   xmm0,DWORD PTR [rdx+0x20]
   14000f137:	punpckldq xmm0,xmm3
   14000f13b:	punpckldq xmm6,xmm0
   14000f13f:	paddd  xmm6,xmm2
   14000f143:	paddd  xmm6,xmm1
   14000f147:	pxor   xmm7,xmm6
   14000f14b:	pshufb xmm7,XMMWORD PTR [rip+0x737fc]        # 0x140082950
   14000f154:	movdqa xmm2,xmm7
   14000f158:	pshufd xmm7,xmm7,0x93
   14000f15d:	paddd  xmm2,xmm5
   14000f161:	movd   xmm5,DWORD PTR [rdx+0x2c]
   14000f166:	movdqa xmm0,xmm2
   14000f16a:	pshufd xmm3,xmm2,0x4e
   14000f16f:	movd   xmm2,DWORD PTR [rdx+0x4]
   14000f174:	pxor   xmm0,xmm1
   14000f178:	movdqa xmm1,xmm0
   14000f17c:	punpckldq xmm2,xmm5
   14000f180:	psrld  xmm0,0x7
   14000f185:	pslld  xmm1,0x19
   14000f18a:	pxor   xmm1,xmm0
   14000f18e:	movdqa xmm0,xmm12
   14000f193:	pshufd xmm4,xmm1,0x39
   14000f198:	movd   xmm1,DWORD PTR [rdx+0x14]
   14000f19d:	punpckldq xmm0,xmm1
   14000f1a1:	punpckldq xmm2,xmm0
   14000f1a5:	paddd  xmm2,xmm6
   14000f1a9:	paddd  xmm2,xmm4
   14000f1ad:	pxor   xmm7,xmm2
   14000f1b1:	pshufb xmm7,XMMWORD PTR [rip+0x737a6]        # 0x140082960
   14000f1ba:	movdqa xmm5,xmm7
   14000f1be:	paddd  xmm5,xmm3
   14000f1c2:	movdqa xmm0,xmm5
   14000f1c6:	movd   xmm6,DWORD PTR [rdx+0x30]
   14000f1cb:	pxor   xmm0,xmm4
   14000f1cf:	movdqa xmm1,xmm0
   14000f1d3:	psrld  xmm0,0xc
   14000f1d8:	pslld  xmm1,0x14
   14000f1dd:	pxor   xmm1,xmm0
   14000f1e1:	movd   xmm0,DWORD PTR [rdx+0x1c]
   14000f1e6:	punpckldq xmm6,xmm0
   14000f1ea:	movdqa xmm0,xmm14
   14000f1ef:	punpckldq xmm0,xmm10
   14000f1f4:	punpckldq xmm6,xmm0
   14000f1f8:	paddd  xmm6,xmm2
   14000f1fc:	paddd  xmm6,xmm1
   14000f200:	pxor   xmm7,xmm6
   14000f204:	pshufb xmm7,XMMWORD PTR [rip+0x73743]        # 0x140082950
   14000f20d:	movdqa xmm2,xmm7
   14000f211:	pshufd xmm7,xmm7,0x39
   14000f216:	paddd  xmm2,xmm5
   14000f21a:	pshufd xmm3,xmm2,0x4e
   14000f21f:	movdqa xmm0,xmm2
   14000f223:	movd   xmm2,DWORD PTR [rdx+0x2c]
   14000f228:	pxor   xmm0,xmm1
   14000f22c:	movdqa xmm1,xmm0
   14000f230:	psrld  xmm0,0x7
   14000f235:	pslld  xmm1,0x19
   14000f23a:	pxor   xmm1,xmm0
   14000f23e:	movd   xmm0,DWORD PTR [rdx+0x14]
   14000f243:	punpckldq xmm2,xmm0
   14000f247:	movd   xmm0,DWORD PTR [rdx+0x30]
   14000f24c:	pshufd xmm4,xmm1,0x93
   14000f251:	movd   xmm1,DWORD PTR [rdx+0x3c]
   14000f256:	punpckldq xmm0,xmm1
   14000f25a:	punpckldq xmm2,xmm0
   14000f25e:	paddd  xmm2,xmm6
   14000f262:	movd   xmm6,DWORD PTR [rdx+0x20]
   14000f267:	paddd  xmm2,xmm4
   14000f26b:	punpckldq xmm6,xmm14
   14000f270:	pxor   xmm7,xmm2
   14000f274:	pshufb xmm7,XMMWORD PTR [rip+0x736e3]        # 0x140082960
   14000f27d:	movdqa xmm5,xmm7
   14000f281:	paddd  xmm5,xmm3
   14000f285:	movdqa xmm0,xmm5
   14000f289:	pxor   xmm0,xmm4
   14000f28d:	movdqa xmm1,xmm0
   14000f291:	psrld  xmm0,0xc
   14000f296:	pslld  xmm1,0x14
   14000f29b:	pxor   xmm1,xmm0
   14000f29f:	movdqa xmm0,xmm12
   14000f2a4:	punpckldq xmm0,xmm15
   14000f2a9:	movdqa xmm12,xmm9
   14000f2ae:	punpckldq xmm6,xmm0
   14000f2b2:	paddd  xmm6,xmm2
   14000f2b6:	paddd  xmm6,xmm1
   14000f2ba:	pxor   xmm7,xmm6
   14000f2be:	pshufb xmm7,XMMWORD PTR [rip+0x73689]        # 0x140082950
   14000f2c7:	movdqa xmm2,xmm7
   14000f2cb:	pshufd xmm7,xmm7,0x93
   14000f2d0:	paddd  xmm2,xmm5
   14000f2d4:	movdqa xmm0,xmm2
   14000f2d8:	pshufd xmm3,xmm2,0x4e
   14000f2dd:	pxor   xmm0,xmm1
   14000f2e1:	movdqa xmm1,xmm0
   14000f2e5:	psrld  xmm0,0x7
   14000f2ea:	pslld  xmm1,0x19
   14000f2ef:	pxor   xmm1,xmm0
   14000f2f3:	movd   xmm0,DWORD PTR [rdx+0x1c]
   14000f2f8:	punpckldq xmm12,xmm0
   14000f2fd:	movdqa xmm0,xmm10
   14000f302:	punpckldq xmm0,xmm13
   14000f307:	movdqa xmm2,xmm12
   14000f30c:	punpckldq xmm2,xmm0
   14000f310:	pshufd xmm4,xmm1,0x39
   14000f315:	paddd  xmm2,xmm6
   14000f319:	paddd  xmm2,xmm4
   14000f31d:	pxor   xmm7,xmm2
   14000f321:	pshufb xmm7,XMMWORD PTR [rip+0x73636]        # 0x140082960
   14000f32a:	movdqa xmm5,xmm7
   14000f32e:	paddd  xmm5,xmm3
   14000f332:	movdqa xmm0,xmm5
   14000f336:	pxor   xmm0,xmm4
   14000f33a:	movdqa xmm1,xmm0
   14000f33e:	movd   xmm3,DWORD PTR [rdx+0x10]
   14000f343:	movdqa xmm9,xmm10
   14000f348:	movd   xmm4,DWORD PTR [rdx+0x38]
   14000f34d:	movdqa xmm10,xmm14
   14000f352:	psrld  xmm0,0xc
   14000f357:	pslld  xmm1,0x14
   14000f35c:	pxor   xmm1,xmm0
   14000f360:	movd   xmm0,DWORD PTR [rdx+0x4]
   14000f365:	punpckldq xmm4,xmm0
   14000f369:	movd   xmm0,DWORD PTR [rdx+0x18]
   14000f36e:	punpckldq xmm0,xmm3
   14000f372:	punpckldq xmm4,xmm0
   14000f376:	paddd  xmm4,xmm2
   14000f37a:	paddd  xmm4,xmm1
   14000f37e:	pxor   xmm7,xmm4
   14000f382:	pshufb xmm7,XMMWORD PTR [rip+0x735c5]        # 0x140082950
   14000f38b:	movdqa xmm2,xmm7
   14000f38f:	pshufd xmm6,xmm7,0x39
   14000f394:	paddd  xmm2,xmm5
   14000f398:	movd   xmm5,DWORD PTR [rdx+0x2c]
   14000f39d:	movdqa xmm0,xmm2
   14000f3a1:	punpckldq xmm9,xmm5
   14000f3a6:	pxor   xmm0,xmm1
   14000f3aa:	movdqa xmm5,xmm13
   14000f3af:	movdqa xmm1,xmm0
   14000f3b3:	psrld  xmm0,0x7
   14000f3b8:	pslld  xmm1,0x19
   14000f3bd:	pxor   xmm1,xmm0
   14000f3c1:	pshufd xmm0,xmm2,0x4e
   14000f3c6:	movd   xmm2,DWORD PTR [rdx+0x1c]
   14000f3cb:	pshufd xmm3,xmm1,0x93
   14000f3d0:	punpckldq xmm2,xmm15
   14000f3d5:	punpckldq xmm2,xmm9
   14000f3da:	paddd  xmm2,xmm4
   14000f3de:	paddd  xmm2,xmm3
   14000f3e2:	pxor   xmm6,xmm2
   14000f3e6:	pshufb xmm6,XMMWORD PTR [rip+0x73571]        # 0x140082960
   14000f3ef:	movdqa xmm4,xmm6
   14000f3f3:	paddd  xmm4,xmm0
   14000f3f7:	movdqa xmm0,xmm4
   14000f3fb:	pxor   xmm0,xmm3
   14000f3ff:	movd   xmm3,DWORD PTR [rdx+0x38]
   14000f404:	movdqa xmm1,xmm0
   14000f408:	psrld  xmm0,0xc
   14000f40d:	pslld  xmm1,0x14
   14000f412:	pxor   xmm1,xmm0
   14000f416:	movd   xmm0,DWORD PTR [rdx+0x30]
   14000f41b:	punpckldq xmm5,xmm0
   14000f41f:	movd   xmm0,DWORD PTR [rdx+0x4]
   14000f424:	punpckldq xmm0,xmm3
   14000f428:	punpckldq xmm5,xmm0
   14000f42c:	paddd  xmm5,xmm2
   14000f430:	paddd  xmm5,xmm1
   14000f434:	pxor   xmm6,xmm5
   14000f438:	pshufb xmm6,XMMWORD PTR [rip+0x7350f]        # 0x140082950
   14000f441:	movdqa xmm2,xmm6
   14000f445:	pshufd xmm7,xmm6,0x93
   14000f44a:	paddd  xmm2,xmm4
   14000f44e:	movdqa xmm0,xmm2
   14000f452:	pshufd xmm3,xmm2,0x4e
   14000f457:	pxor   xmm0,xmm1
   14000f45b:	movdqa xmm1,xmm0
   14000f45f:	psrld  xmm0,0x7
   14000f464:	pslld  xmm1,0x19
   14000f469:	pxor   xmm1,xmm0
   14000f46d:	movd   xmm0,DWORD PTR [rdx+0x10]
   14000f472:	punpckldq xmm10,xmm0
   14000f477:	movd   xmm0,DWORD PTR [rdx+0x14]
   14000f47c:	movdqa xmm2,xmm10
   14000f481:	pshufd xmm4,xmm1,0x39
   14000f486:	movd   xmm1,DWORD PTR [rdx+0x3c]
   14000f48b:	punpckldq xmm0,xmm1
   14000f48f:	punpckldq xmm2,xmm0
   14000f493:	paddd  xmm2,xmm5
   14000f497:	paddd  xmm2,xmm4
   14000f49b:	pxor   xmm7,xmm2
   14000f49f:	pshufb xmm7,XMMWORD PTR [rip+0x734b8]        # 0x140082960
   14000f4a8:	movdqa xmm5,xmm7
   14000f4ac:	paddd  xmm5,xmm3
   14000f4b0:	movdqa xmm0,xmm5
   14000f4b4:	pxor   xmm0,xmm4
   14000f4b8:	movd   xmm3,DWORD PTR [rdx+0x20]
   14000f4bd:	movdqa xmm1,xmm0
   14000f4c1:	movd   xmm6,DWORD PTR [rdx+0x18]
   14000f4c6:	psrld  xmm0,0xc
   14000f4cb:	pslld  xmm1,0x14
   14000f4d0:	pxor   xmm1,xmm0
   14000f4d4:	movd   xmm0,DWORD PTR [rdx]
   14000f4d8:	punpckldq xmm6,xmm0
   14000f4dc:	movd   xmm0,DWORD PTR [rdx+0x28]
   14000f4e1:	punpckldq xmm0,xmm3
   14000f4e5:	punpckldq xmm6,xmm0
   14000f4e9:	paddd  xmm6,xmm2
   14000f4ed:	paddd  xmm6,xmm1
   14000f4f1:	pxor   xmm7,xmm6
   14000f4f5:	pshufb xmm7,XMMWORD PTR [rip+0x73452]        # 0x140082950
   14000f4fe:	movdqa xmm2,xmm7
   14000f502:	pshufd xmm7,xmm7,0x39
   14000f507:	paddd  xmm2,xmm5
   14000f50b:	pshufd xmm3,xmm2,0x4e
   14000f510:	movdqa xmm0,xmm2
   14000f514:	pxor   xmm0,xmm1
   14000f518:	movdqa xmm2,xmm13
   14000f51d:	movdqa xmm1,xmm0
   14000f521:	punpckldq xmm2,xmm14
   14000f526:	psrld  xmm0,0x7
   14000f52b:	pslld  xmm1,0x19
   14000f530:	pxor   xmm1,xmm0
   14000f534:	movd   xmm0,DWORD PTR [rdx+0x14]
   14000f539:	pshufd xmm4,xmm1,0x93
   14000f53e:	movd   xmm1,DWORD PTR [rdx+0x28]
   14000f543:	punpckldq xmm0,xmm1
   14000f547:	punpckldq xmm2,xmm0
   14000f54b:	paddd  xmm2,xmm6
   14000f54f:	paddd  xmm2,xmm4
   14000f553:	pxor   xmm7,xmm2
   14000f557:	pshufb xmm7,XMMWORD PTR [rip+0x73400]        # 0x140082960
   14000f560:	movdqa xmm5,xmm7
   14000f564:	paddd  xmm5,xmm3
   14000f568:	movd   xmm3,DWORD PTR [rdx+0x3c]
   14000f56d:	movdqa xmm0,xmm5
   14000f571:	pxor   xmm0,xmm4
   14000f575:	movdqa xmm1,xmm0
   14000f579:	psrld  xmm0,0xc
   14000f57e:	pslld  xmm1,0x14
   14000f583:	pxor   xmm1,xmm0
   14000f587:	movd   xmm0,DWORD PTR [rdx+0x1c]
   14000f58c:	punpckldq xmm0,xmm3
   14000f590:	punpckldq xmm8,xmm0
   14000f595:	paddd  xmm8,xmm2
   14000f59a:	paddd  xmm8,xmm1
   14000f59f:	pxor   xmm7,xmm8
   14000f5a4:	pshufb xmm7,XMMWORD PTR [rip+0x733a3]        # 0x140082950
   14000f5ad:	movdqa xmm2,xmm7
   14000f5b1:	pshufd xmm6,xmm7,0x93
   14000f5b6:	movd   xmm7,DWORD PTR [rdx+0xc]
   14000f5bb:	paddd  xmm2,xmm5
   14000f5bf:	movdqa xmm0,xmm2
   14000f5c3:	pshufd xmm3,xmm2,0x4e
   14000f5c8:	movd   xmm2,DWORD PTR [rdx+0x38]
   14000f5cd:	pxor   xmm0,xmm1
   14000f5d1:	movdqa xmm1,xmm0
   14000f5d5:	psrld  xmm0,0x7
   14000f5da:	pslld  xmm1,0x19
   14000f5df:	pxor   xmm1,xmm0
   14000f5e3:	movd   xmm0,DWORD PTR [rdx+0x18]
   14000f5e8:	punpckldq xmm2,xmm0
   14000f5ec:	movd   xmm0,DWORD PTR [rdx+0x2c]
   14000f5f1:	punpckldq xmm0,xmm7
   14000f5f5:	punpckldq xmm2,xmm0
   14000f5f9:	pshufd xmm4,xmm1,0x39
   14000f5fe:	paddd  xmm2,xmm8
   14000f603:	paddd  xmm2,xmm4
   14000f607:	pxor   xmm6,xmm2
   14000f60b:	pshufb xmm6,XMMWORD PTR [rip+0x7334c]        # 0x140082960
   14000f614:	movdqa xmm5,xmm6
   14000f618:	paddd  xmm5,xmm3
   14000f61c:	movdqa xmm0,xmm5
   14000f620:	pxor   xmm0,xmm4
   14000f624:	movdqa xmm1,xmm0
   14000f628:	psrld  xmm0,0xc
   14000f62d:	pslld  xmm1,0x14
   14000f632:	pxor   xmm1,xmm0
   14000f636:	movd   xmm4,DWORD PTR [rdx+0x4]
   14000f63b:	movd   xmm0,DWORD PTR [rdx+0x20]
   14000f640:	movd   xmm8,DWORD PTR [rdx+0x18]
   14000f646:	punpckldq xmm4,xmm0
   14000f64a:	movd   xmm0,DWORD PTR [rdx+0x30]
   14000f64f:	punpckldq xmm0,xmm15
   14000f654:	punpckldq xmm4,xmm0
   14000f658:	paddd  xmm4,xmm2
   14000f65c:	paddd  xmm4,xmm1
   14000f660:	pxor   xmm6,xmm4
   14000f664:	pshufb xmm6,XMMWORD PTR [rip+0x732e3]        # 0x140082950
   14000f66d:	movdqa xmm2,xmm6
   14000f671:	pshufd xmm6,xmm6,0x39
   14000f676:	paddd  xmm2,xmm5
   14000f67a:	movd   xmm5,DWORD PTR [rdx+0x30]
   14000f67f:	movdqa xmm0,xmm2
   14000f683:	pxor   xmm0,xmm1
   14000f687:	movdqa xmm1,xmm0
   14000f68b:	psrld  xmm0,0x7
   14000f690:	pslld  xmm1,0x19
   14000f695:	pxor   xmm1,xmm0
   14000f699:	pshufd xmm0,xmm2,0x4e
   14000f69e:	pshufd xmm3,xmm1,0x93
   14000f6a3:	movdqa xmm2,xmm14
   14000f6a8:	movd   xmm1,DWORD PTR [rdx+0x20]
   14000f6ad:	punpckldq xmm8,xmm1
   14000f6b2:	movd   xmm1,DWORD PTR [rdx]
   14000f6b6:	punpckldq xmm2,xmm1
   14000f6ba:	punpckldq xmm2,xmm8
   14000f6bf:	paddd  xmm2,xmm4
   14000f6c3:	paddd  xmm2,xmm3
   14000f6c7:	pxor   xmm6,xmm2
   14000f6cb:	pshufb xmm6,XMMWORD PTR [rip+0x7328c]        # 0x140082960
   14000f6d4:	movdqa xmm4,xmm6
   14000f6d8:	paddd  xmm4,xmm0
   14000f6dc:	movdqa xmm0,xmm4
   14000f6e0:	pxor   xmm0,xmm3
   14000f6e4:	movdqa xmm1,xmm0
   14000f6e8:	psrld  xmm0,0xc
   14000f6ed:	pslld  xmm1,0x14
   14000f6f2:	pxor   xmm1,xmm0
   14000f6f6:	movd   xmm0,DWORD PTR [rdx+0x2c]
   14000f6fb:	punpckldq xmm5,xmm0
   14000f6ff:	movd   xmm0,DWORD PTR [rdx+0x28]
   14000f704:	punpckldq xmm0,xmm7
   14000f708:	punpckldq xmm5,xmm0
   14000f70c:	paddd  xmm5,xmm2
   14000f710:	paddd  xmm5,xmm1
   14000f714:	pxor   xmm6,xmm5
   14000f718:	pshufb xmm6,XMMWORD PTR [rip+0x7322f]        # 0x140082950
   14000f721:	movdqa xmm2,xmm6
   14000f725:	pshufd xmm7,xmm6,0x93
   14000f72a:	paddd  xmm2,xmm4
   14000f72e:	movdqa xmm0,xmm2
   14000f732:	pshufd xmm3,xmm2,0x4e
   14000f737:	movd   xmm2,DWORD PTR [rdx+0x10]
   14000f73c:	pxor   xmm0,xmm1
   14000f740:	movdqa xmm1,xmm0
   14000f744:	psrld  xmm0,0x7
   14000f749:	pslld  xmm1,0x19
   14000f74e:	pxor   xmm1,xmm0
   14000f752:	movd   xmm0,DWORD PTR [rdx+0x3c]
   14000f757:	punpckldq xmm2,xmm0
   14000f75b:	movd   xmm0,DWORD PTR [rdx+0x1c]
   14000f760:	pshufd xmm4,xmm1,0x39
   14000f765:	movd   xmm1,DWORD PTR [rdx+0x4]
   14000f76a:	punpckldq xmm0,xmm1
   14000f76e:	punpckldq xmm2,xmm0
   14000f772:	paddd  xmm2,xmm5
   14000f776:	paddd  xmm2,xmm4
   14000f77a:	pxor   xmm7,xmm2
   14000f77e:	pshufb xmm7,XMMWORD PTR [rip+0x731d9]        # 0x140082960
   14000f787:	movdqa xmm5,xmm7
   14000f78b:	paddd  xmm5,xmm3
   14000f78f:	movdqa xmm0,xmm5
   14000f793:	pxor   xmm0,xmm4
   14000f797:	movdqa xmm1,xmm0
   14000f79b:	psrld  xmm0,0xc
   14000f7a0:	pslld  xmm1,0x14
   14000f7a5:	pxor   xmm1,xmm0
   14000f7a9:	movd   xmm0,DWORD PTR [rdx+0x38]
   14000f7ae:	movdqa xmm6,xmm15
   14000f7b3:	punpckldq xmm6,xmm0
   14000f7b7:	movd   xmm0,DWORD PTR [rdx+0x14]
   14000f7bc:	punpckldq xmm0,xmm13
   14000f7c1:	punpckldq xmm6,xmm0
   14000f7c5:	paddd  xmm6,xmm2
   14000f7c9:	paddd  xmm6,xmm1
   14000f7cd:	pxor   xmm7,xmm6
   14000f7d1:	pshufb xmm7,XMMWORD PTR [rip+0x73176]        # 0x140082950
   14000f7da:	movdqa xmm2,xmm7
   14000f7de:	pshufd xmm7,xmm7,0x39
   14000f7e3:	paddd  xmm2,xmm5
   14000f7e7:	pshufd xmm3,xmm2,0x4e
   14000f7ec:	movdqa xmm0,xmm2
   14000f7f0:	movd   xmm2,DWORD PTR [rdx+0x30]
   14000f7f5:	pxor   xmm0,xmm1
   14000f7f9:	movdqa xmm1,xmm0
   14000f7fd:	psrld  xmm0,0x7
   14000f802:	pslld  xmm1,0x19
   14000f807:	pxor   xmm1,xmm0
   14000f80b:	movd   xmm0,DWORD PTR [rdx+0x38]
   14000f810:	punpckldq xmm2,xmm0
   14000f814:	movd   xmm0,DWORD PTR [rdx+0x4]
   14000f819:	pshufd xmm4,xmm1,0x93
   14000f81e:	movd   xmm1,DWORD PTR [rdx+0x10]
   14000f823:	punpckldq xmm0,xmm1
   14000f827:	punpckldq xmm2,xmm0
   14000f82b:	paddd  xmm2,xmm6
   14000f82f:	paddd  xmm2,xmm4
   14000f833:	pxor   xmm7,xmm2
   14000f837:	pshufb xmm7,XMMWORD PTR [rip+0x73120]        # 0x140082960
   14000f840:	movdqa xmm5,xmm7
   14000f844:	paddd  xmm5,xmm3
   14000f848:	movd   xmm3,DWORD PTR [rdx+0x28]
   14000f84d:	movdqa xmm0,xmm5
   14000f851:	pxor   xmm0,xmm4
   14000f855:	movd   xmm4,DWORD PTR [rdx+0x14]
   14000f85a:	movdqa xmm1,xmm0
   14000f85e:	punpckldq xmm4,xmm15
   14000f863:	psrld  xmm0,0xc
   14000f868:	pslld  xmm1,0x14
   14000f86d:	pxor   xmm1,xmm0
   14000f871:	movd   xmm0,DWORD PTR [rdx+0x3c]
   14000f876:	punpckldq xmm0,xmm3
   14000f87a:	punpckldq xmm4,xmm0
   14000f87e:	paddd  xmm4,xmm2
   14000f882:	paddd  xmm4,xmm1
   14000f886:	pxor   xmm7,xmm4
   14000f88a:	pshufb xmm7,XMMWORD PTR [rip+0x730bd]        # 0x140082950
   14000f893:	movdqa xmm2,xmm7
   14000f897:	pshufd xmm6,xmm7,0x93
   14000f89c:	paddd  xmm2,xmm5
   14000f8a0:	movdqa xmm0,xmm2
   14000f8a4:	pxor   xmm0,xmm1
   14000f8a8:	movdqa xmm1,xmm0
   14000f8ac:	psrld  xmm0,0x7
   14000f8b1:	pslld  xmm1,0x19
   14000f8b6:	pxor   xmm1,xmm0
   14000f8ba:	pshufd xmm0,xmm2,0x4e
   14000f8bf:	movd   xmm2,DWORD PTR [rdx]
   14000f8c3:	pshufd xmm3,xmm1,0x39
   14000f8c8:	punpckldq xmm2,xmm13
   14000f8cd:	punpckldq xmm2,xmm8
   14000f8d2:	movd   xmm8,DWORD PTR [rdx+0x1c]
   14000f8d8:	paddd  xmm2,xmm4
   14000f8dc:	paddd  xmm2,xmm3
   14000f8e0:	movdqa xmm5,xmm8
   14000f8e5:	punpckldq xmm5,xmm14
   14000f8ea:	pxor   xmm6,xmm2
   14000f8ee:	pshufb xmm6,XMMWORD PTR [rip+0x73069]        # 0x140082960
   14000f8f7:	punpckldq xmm5,xmm9
   14000f8fc:	movdqa xmm4,xmm6
   14000f900:	paddd  xmm5,xmm2
   14000f904:	paddd  xmm4,xmm0
   14000f908:	movdqa xmm0,xmm4
   14000f90c:	pxor   xmm0,xmm3
   14000f910:	movdqa xmm1,xmm0
   14000f914:	psrld  xmm0,0xc
   14000f919:	pslld  xmm1,0x14
   14000f91e:	pxor   xmm1,xmm0
   14000f922:	movd   xmm9,DWORD PTR [rdx+0xc]
   14000f928:	paddd  xmm5,xmm1
   14000f92c:	pxor   xmm6,xmm5
   14000f930:	pshufb xmm6,XMMWORD PTR [rip+0x73017]        # 0x140082950
   14000f939:	movdqa xmm2,xmm6
   14000f93d:	pshufd xmm7,xmm6,0x39
   14000f942:	movd   xmm6,DWORD PTR [rdx+0x2c]
   14000f947:	paddd  xmm2,xmm4
   14000f94b:	pshufd xmm3,xmm2,0x4e
   14000f950:	movdqa xmm0,xmm2
   14000f954:	pxor   xmm0,xmm1
   14000f958:	movdqa xmm2,xmm15
   14000f95d:	movdqa xmm1,xmm0
   14000f961:	psrld  xmm0,0x7
   14000f966:	pslld  xmm1,0x19
   14000f96b:	pxor   xmm1,xmm0
   14000f96f:	movd   xmm0,DWORD PTR [rdx+0x30]
   14000f974:	punpckldq xmm2,xmm0
   14000f978:	movdqa xmm0,xmm8
   14000f97d:	movd   xmm8,DWORD PTR [rdx+0x28]
   14000f983:	punpckldq xmm0,xmm9
   14000f988:	punpckldq xmm2,xmm0
   14000f98c:	paddd  xmm2,xmm5
   14000f990:	pshufd xmm4,xmm1,0x93
   14000f995:	paddd  xmm2,xmm4
   14000f999:	pxor   xmm7,xmm2
   14000f99d:	pshufb xmm7,XMMWORD PTR [rip+0x72fba]        # 0x140082960
   14000f9a6:	movdqa xmm5,xmm7
   14000f9aa:	paddd  xmm5,xmm3
   14000f9ae:	movdqa xmm0,xmm5
   14000f9b2:	pxor   xmm0,xmm4
   14000f9b6:	movdqa xmm1,xmm0
   14000f9ba:	psrld  xmm0,0xc
   14000f9bf:	pslld  xmm1,0x14
   14000f9c4:	pxor   xmm1,xmm0
   14000f9c8:	movd   xmm0,DWORD PTR [rdx+0x4]
   14000f9cd:	punpckldq xmm6,xmm0
   14000f9d1:	punpckldq xmm6,xmm11
   14000f9d6:	movd   xmm11,DWORD PTR [rdx]
   14000f9db:	paddd  xmm6,xmm2
   14000f9df:	paddd  xmm6,xmm1
   14000f9e3:	pxor   xmm7,xmm6
   14000f9e7:	pshufb xmm7,XMMWORD PTR [rip+0x72f60]        # 0x140082950
   14000f9f0:	movdqa xmm2,xmm7
   14000f9f4:	pshufd xmm7,xmm7,0x93
   14000f9f9:	paddd  xmm2,xmm5
   14000f9fd:	movdqa xmm0,xmm2
   14000fa01:	pshufd xmm3,xmm2,0x4e
   14000fa06:	movd   xmm2,DWORD PTR [rdx+0x14]
   14000fa0b:	pxor   xmm0,xmm1
   14000fa0f:	movdqa xmm1,xmm0
   14000fa13:	psrld  xmm0,0x7
   14000fa18:	pslld  xmm1,0x19
   14000fa1d:	pxor   xmm1,xmm0
   14000fa21:	movd   xmm0,DWORD PTR [rdx+0x20]
   14000fa26:	punpckldq xmm2,xmm0
   14000fa2a:	movd   xmm0,DWORD PTR [rdx+0x3c]
   14000fa2f:	punpckldq xmm0,xmm14
   14000fa34:	movd   xmm14,DWORD PTR [rdx+0x18]
   14000fa3a:	punpckldq xmm2,xmm0
   14000fa3e:	pshufd xmm4,xmm1,0x39
   14000fa43:	paddd  xmm2,xmm6
   14000fa47:	paddd  xmm2,xmm4
   14000fa4b:	pxor   xmm7,xmm2
   14000fa4f:	pshufb xmm7,XMMWORD PTR [rip+0x72f08]        # 0x140082960
   14000fa58:	movdqa xmm5,xmm7
   14000fa5c:	paddd  xmm5,xmm3
   14000fa60:	movdqa xmm0,xmm5
   14000fa64:	pxor   xmm0,xmm4
   14000fa68:	movdqa xmm4,xmm11
   14000fa6d:	movdqa xmm1,xmm0
   14000fa71:	punpckldq xmm4,xmm14
   14000fa76:	psrld  xmm0,0xc
   14000fa7b:	pslld  xmm1,0x14
   14000fa80:	pxor   xmm1,xmm0
   14000fa84:	movd   xmm0,DWORD PTR [rdx+0x10]
   14000fa89:	punpckldq xmm0,xmm8
   14000fa8e:	punpckldq xmm4,xmm0
   14000fa92:	paddd  xmm4,xmm2
   14000fa96:	paddd  xmm4,xmm1
   14000fa9a:	pxor   xmm7,xmm4
   14000fa9e:	punpckldq xmm14,XMMWORD PTR [rsp]
   14000faa4:	pshufb xmm7,XMMWORD PTR [rip+0x72ea3]        # 0x140082950
   14000faad:	punpckldq xmm15,xmm8
   14000fab2:	movdqa xmm2,xmm7
   14000fab6:	pshufd xmm6,xmm7,0x39
   14000fabb:	movd   xmm7,DWORD PTR [rdx+0x20]
   14000fac0:	paddd  xmm2,xmm5
   14000fac4:	movdqa xmm0,xmm2
   14000fac8:	punpckldq xmm13,xmm7
   14000facd:	pxor   xmm0,xmm1
   14000fad1:	movdqa xmm1,xmm0
   14000fad5:	psrld  xmm0,0x7
   14000fada:	pslld  xmm1,0x19
   14000fadf:	pxor   xmm1,xmm0
   14000fae3:	pshufd xmm0,xmm2,0x4e
   14000fae8:	pshufd xmm3,xmm1,0x93
   14000faed:	movd   xmm1,DWORD PTR [rdx+0x38]
   14000faf2:	punpckldq xmm1,xmm11
   14000faf7:	movd   xmm11,DWORD PTR [rdx+0x3c]
   14000fafd:	punpckldq xmm14,xmm1
   14000fb02:	movdqa XMMWORD PTR [rsp+0x40],xmm1
   14000fb08:	paddd  xmm14,xmm4
   14000fb0d:	paddd  xmm14,xmm3
   14000fb12:	punpckldq xmm11,xmm9
   14000fb17:	movd   xmm9,DWORD PTR [rdx+0x4]
   14000fb1d:	pxor   xmm6,xmm14
   14000fb22:	pshufb xmm6,XMMWORD PTR [rip+0x72e35]        # 0x140082960
   14000fb2b:	movdqa xmm5,xmm11
   14000fb30:	movdqa xmm4,xmm6
   14000fb34:	punpckldq xmm5,xmm13
   14000fb39:	movd   xmm13,DWORD PTR [rdx+0x30]
   14000fb3f:	paddd  xmm4,xmm0
   14000fb43:	movdqa xmm0,xmm4
   14000fb47:	paddd  xmm5,xmm14
   14000fb4c:	movdqa xmm14,XMMWORD PTR [rip+0x72dfb]        # 0x140082950
   14000fb55:	pxor   xmm0,xmm3
   14000fb59:	movdqa xmm1,xmm0
   14000fb5d:	psrld  xmm0,0xc
   14000fb62:	pslld  xmm1,0x14
   14000fb67:	pxor   xmm1,xmm0
   14000fb6b:	paddd  xmm5,xmm1
   14000fb6f:	pxor   xmm6,xmm5
   14000fb73:	pshufb xmm6,xmm14
   14000fb79:	movdqa xmm2,xmm6
   14000fb7d:	pshufd xmm6,xmm6,0x93
   14000fb82:	paddd  xmm2,xmm4
   14000fb86:	movdqa xmm0,xmm2
   14000fb8a:	pxor   xmm0,xmm1
   14000fb8e:	movdqa xmm1,xmm0
   14000fb92:	psrld  xmm0,0x7
   14000fb97:	pslld  xmm1,0x19
   14000fb9c:	pxor   xmm1,xmm0
   14000fba0:	pshufd xmm0,xmm2,0x4e
   14000fba5:	pshufd xmm3,xmm1,0x39
   14000fbaa:	movdqa xmm2,xmm13
   14000fbaf:	punpckldq xmm2,xmm9
   14000fbb4:	punpckldq xmm2,xmm15
   14000fbb9:	movdqa xmm15,XMMWORD PTR [rip+0x72d9e]        # 0x140082960
   14000fbc2:	paddd  xmm2,xmm5
   14000fbc6:	paddd  xmm2,xmm3
   14000fbca:	pxor   xmm6,xmm2
   14000fbce:	pshufb xmm6,xmm15
   14000fbd4:	movdqa xmm4,xmm6
   14000fbd8:	paddd  xmm4,xmm0
   14000fbdc:	movdqa xmm0,xmm4
   14000fbe0:	pxor   xmm0,xmm3
   14000fbe4:	movdqa xmm1,xmm0
   14000fbe8:	psrld  xmm0,0xc
   14000fbed:	pslld  xmm1,0x14
   14000fbf2:	pxor   xmm1,xmm0
   14000fbf6:	movd   xmm0,DWORD PTR [rdx+0x1c]
   14000fbfb:	punpckldq xmm0,XMMWORD PTR [rsp+0x10]
   14000fc01:	punpckldq xmm10,xmm0
   14000fc06:	paddd  xmm10,xmm2
   14000fc0b:	paddd  xmm10,xmm1
   14000fc10:	pxor   xmm6,xmm10
   14000fc15:	pshufb xmm6,xmm14
   14000fc1b:	movdqa xmm2,xmm6
   14000fc1f:	paddd  xmm2,xmm4
   14000fc23:	movdqa xmm0,xmm2
   14000fc27:	pxor   xmm0,xmm1
   14000fc2b:	punpckldq xmm11,XMMWORD PTR [rsp+0x30]
   14000fc32:	lea    r11,[r11]
   14000fc35:	movdqa xmm1,xmm0
   14000fc39:	pshufd xmm5,xmm6,0x39
   14000fc3e:	movdqa xmm6,XMMWORD PTR [rsp+0x20]
   14000fc44:	psrld  xmm0,0x7
   14000fc49:	pslld  xmm1,0x19
   14000fc4e:	pxor   xmm1,xmm0
   14000fc52:	punpckldq xmm7,xmm9
   14000fc57:	pshufd xmm3,xmm1,0x93
   14000fc5c:	pshufd xmm0,xmm2,0x4e
   14000fc61:	punpckldq xmm12,xmm7
   14000fc66:	paddd  xmm12,xmm10
   14000fc6b:	paddd  xmm12,xmm3
   14000fc70:	pxor   xmm5,xmm12
   14000fc75:	pshufb xmm5,xmm15
   14000fc7b:	movdqa xmm4,xmm5
   14000fc7f:	paddd  xmm4,xmm0
   14000fc83:	movdqa xmm0,xmm4
   14000fc87:	pxor   xmm0,xmm3
   14000fc8b:	movdqa xmm1,xmm0
   14000fc8f:	psrld  xmm0,0xc
   14000fc94:	pslld  xmm1,0x14
   14000fc99:	pxor   xmm1,xmm0
   14000fc9d:	movd   xmm0,DWORD PTR [rdx+0x10]
   14000fca2:	punpckldq xmm0,XMMWORD PTR [rsp+0x10]
   14000fca8:	punpckldq xmm6,xmm0
   14000fcac:	paddd  xmm6,xmm12
   14000fcb1:	paddd  xmm6,xmm1
   14000fcb5:	pxor   xmm5,xmm6
   14000fcb9:	paddd  xmm11,xmm6
   14000fcbe:	movd   xmm6,DWORD PTR [rdx+0x2c]
   14000fcc3:	pshufb xmm5,xmm14
   14000fcc9:	punpckldq xmm6,xmm13
   14000fcce:	punpckldq xmm6,XMMWORD PTR [rsp+0x40]
   14000fcd4:	movdqa xmm2,xmm5
   14000fcd8:	paddd  xmm2,xmm4
   14000fcdc:	pshufd xmm5,xmm5,0x93
   14000fce1:	movdqa xmm0,xmm2
   14000fce5:	pxor   xmm0,xmm1
   14000fce9:	movdqa xmm1,xmm0
   14000fced:	psrld  xmm0,0x7
   14000fcf2:	pslld  xmm1,0x19
   14000fcf7:	pxor   xmm1,xmm0
   14000fcfb:	pshufd xmm0,xmm2,0x4e
   14000fd00:	pshufd xmm3,xmm1,0x39
   14000fd05:	paddd  xmm11,xmm3
   14000fd0a:	pxor   xmm5,xmm11
   14000fd0f:	paddd  xmm6,xmm11
   14000fd14:	pshufb xmm5,xmm15
   14000fd1a:	movdqa xmm4,xmm5
   14000fd1e:	paddd  xmm4,xmm0
   14000fd22:	movdqa xmm0,xmm4
   14000fd26:	pxor   xmm0,xmm3
   14000fd2a:	movdqa xmm1,xmm0
   14000fd2e:	psrld  xmm0,0xc
   14000fd33:	pslld  xmm1,0x14
   14000fd38:	pxor   xmm1,xmm0
   14000fd3c:	paddd  xmm6,xmm1
   14000fd40:	pxor   xmm5,xmm6
   14000fd44:	pshufb xmm5,xmm14
   14000fd4a:	movdqa xmm2,xmm5
   14000fd4e:	pshufd xmm3,xmm5,0x39
   14000fd53:	paddd  xmm2,xmm4
   14000fd57:	movdqa xmm0,xmm2
   14000fd5b:	pxor   xmm0,xmm1
   14000fd5f:	movdqa xmm1,xmm0
   14000fd63:	psrld  xmm0,0x7
   14000fd68:	pslld  xmm1,0x19
   14000fd6d:	pxor   xmm1,xmm0
   14000fd71:	pshufd xmm0,xmm2,0x4e
   14000fd76:	pxor   xmm0,xmm6
   14000fd7a:	pshufd xmm1,xmm1,0x93
   14000fd7f:	pxor   xmm0,XMMWORD PTR [r8]
   14000fd84:	pxor   xmm3,xmm1
   14000fd88:	pxor   xmm3,XMMWORD PTR [rsp+0x50]
   14000fd8e:	movaps xmm6,XMMWORD PTR [r11-0x18]
   14000fd93:	movdqa XMMWORD PTR [r8],xmm0
   14000fd98:	mov    rax,QWORD PTR [rcx+0xf8]
   14000fd9f:	movdqa XMMWORD PTR [rax+0x10],xmm3
   14000fda4:	xor    eax,eax
   14000fda6:	movaps xmm7,XMMWORD PTR [r11-0x28]
   14000fdab:	movaps xmm8,XMMWORD PTR [r11-0x38]
   14000fdb0:	movaps xmm9,XMMWORD PTR [r11-0x48]
   14000fdb5:	movaps xmm10,XMMWORD PTR [r11-0x58]
   14000fdba:	movaps xmm11,XMMWORD PTR [r11-0x68]
   14000fdbf:	movaps xmm12,XMMWORD PTR [r11-0x78]
   14000fdc4:	movaps xmm13,XMMWORD PTR [r11-0x88]
   14000fdcc:	movaps xmm14,XMMWORD PTR [rsp+0x70]
   14000fdd2:	movaps xmm15,XMMWORD PTR [rsp+0x60]
   14000fdd8:	mov    rsp,r11
   14000fddb:	ret    
   14000fddc:	mov    QWORD PTR [rsp+0x8],rbx
   14000fde1:	mov    QWORD PTR [rsp+0x10],rsi
   14000fde6:	push   rdi
   14000fde7:	sub    rsp,0x20
   14000fdeb:	xor    edi,edi
   14000fded:	mov    rsi,rdx
   14000fdf0:	cmp    QWORD PTR [rcx+0x110],0x40
   14000fdf8:	mov    rbx,rcx
   14000fdfb:	jbe    0x14000fe3f
   14000fdfd:	mov    rax,QWORD PTR [rcx+0x100]
   14000fe04:	add    DWORD PTR [rax],0x40
   14000fe07:	mov    rax,QWORD PTR [rcx+0x100]
   14000fe0e:	cmp    DWORD PTR [rax],0x40
   14000fe11:	adc    DWORD PTR [rax+0x4],edi
   14000fe14:	mov    rdx,QWORD PTR [rcx+0xf0]
   14000fe1b:	call   0x14000ea40
   14000fe20:	mov    rcx,QWORD PTR [rbx+0xf0]
   14000fe27:	add    QWORD PTR [rbx+0x110],0xffffffffffffffc0
   14000fe2f:	mov    r8,QWORD PTR [rbx+0x110]
   14000fe36:	lea    rdx,[rcx+0x40]
   14000fe3a:	call   0x140059180
   14000fe3f:	mov    ecx,DWORD PTR [rbx+0x110]
   14000fe45:	mov    rax,QWORD PTR [rbx+0x100]
   14000fe4c:	add    DWORD PTR [rax],ecx
   14000fe4e:	mov    rax,QWORD PTR [rbx+0x100]
   14000fe55:	cmp    DWORD PTR [rax],ecx
   14000fe57:	adc    DWORD PTR [rax+0x4],edi
   14000fe5a:	or     ecx,0xffffffff
   14000fe5d:	cmp    BYTE PTR [rbx+0x118],dil
   14000fe64:	je     0x14000fe70
   14000fe66:	mov    rax,QWORD PTR [rbx+0x108]
   14000fe6d:	mov    DWORD PTR [rax+0x4],ecx
   14000fe70:	mov    rax,QWORD PTR [rbx+0x108]
   14000fe77:	mov    r8d,0x80
   14000fe7d:	xor    edx,edx
   14000fe7f:	mov    DWORD PTR [rax],ecx
   14000fe81:	mov    rcx,QWORD PTR [rbx+0x110]
   14000fe88:	sub    r8,rcx
   14000fe8b:	add    rcx,QWORD PTR [rbx+0xf0]
   14000fe92:	call   0x140058f40
   14000fe97:	mov    rdx,QWORD PTR [rbx+0xf0]
   14000fe9e:	mov    rcx,rbx
   14000fea1:	call   0x14000ea40
   14000fea6:	mov    rax,QWORD PTR [rbx+0xf8]
   14000fead:	mov    ecx,DWORD PTR [rdi+rax*1]
   14000feb0:	mov    DWORD PTR [rdi+rsi*1],ecx
   14000feb3:	add    rdi,0x4
   14000feb7:	cmp    rdi,0x20
   14000febb:	jl     0x14000fea6
   14000febd:	mov    rbx,QWORD PTR [rsp+0x30]
   14000fec2:	mov    rsi,QWORD PTR [rsp+0x38]
   14000fec7:	add    rsp,0x20
   14000fecb:	pop    rdi
   14000fecc:	ret    
   14000fecd:	int3   
   14000fece:	int3   
   14000fecf:	int3   
   14000fed0:	mov    QWORD PTR [rsp+0x8],rbx
   14000fed5:	mov    QWORD PTR [rsp+0x10],rsi
   14000feda:	push   rdi
   14000fedb:	sub    rsp,0x20
   14000fedf:	cmp    DWORD PTR [rip+0x8ebfe],0x2        # 0x14009eae4
   14000fee6:	mov    edi,r8d
   14000fee9:	mov    esi,edx
   14000feeb:	mov    rbx,rcx
   14000feee:	jl     0x14000ff30
   14000fef0:	movdqa xmm0,XMMWORD PTR [rip+0x5d458]        # 0x14006d350
   14000fef8:	movdqa xmm1,XMMWORD PTR [rip+0x5d440]        # 0x14006d340
   14000ff00:	movdqa XMMWORD PTR [rip+0x72a28],xmm0        # 0x140082930
   14000ff08:	movdqa xmm0,XMMWORD PTR [rip+0x5d410]        # 0x14006d320
   14000ff10:	movdqa XMMWORD PTR [rip+0x72a28],xmm1        # 0x140082940
   14000ff18:	movdqa xmm1,XMMWORD PTR [rip+0x5d410]        # 0x14006d330
   14000ff20:	movdqa XMMWORD PTR [rip+0x72a28],xmm0        # 0x140082950
   14000ff28:	movdqa XMMWORD PTR [rip+0x72a30],xmm1        # 0x140082960
   14000ff30:	xor    edx,edx
   14000ff32:	mov    r8d,0xf0
   14000ff38:	call   0x140058f40
   14000ff3d:	xor    edx,edx
   14000ff3f:	mov    QWORD PTR [rbx+0x110],rdx
   14000ff46:	mov    BYTE PTR [rbx+0x118],dl
   14000ff4c:	mov    rcx,QWORD PTR [rbx+0xf8]
   14000ff53:	lea    rax,[rip+0x5d3a6]        # 0x14006d300
   14000ff5a:	mov    eax,DWORD PTR [rdx+rax*1]
   14000ff5d:	mov    DWORD PTR [rdx+rcx*1],eax
   14000ff60:	add    rdx,0x4
   14000ff64:	cmp    rdx,0x20
   14000ff68:	jl     0x14000ff4c
   14000ff6a:	mov    rax,QWORD PTR [rbx+0xf8]
   14000ff71:	bts    edi,0xd
   14000ff75:	shl    edi,0x10
   14000ff78:	xor    DWORD PTR [rax],0x2080020
   14000ff7e:	mov    rax,QWORD PTR [rbx+0xf8]
   14000ff85:	xor    DWORD PTR [rax+0x8],esi
   14000ff88:	mov    rax,QWORD PTR [rbx+0xf8]
   14000ff8f:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ff94:	mov    rsi,QWORD PTR [rsp+0x38]
   14000ff99:	xor    DWORD PTR [rax+0xc],edi
   14000ff9c:	add    rsp,0x20
   14000ffa0:	pop    rdi
   14000ffa1:	ret    
   14000ffa2:	int3   
   14000ffa3:	int3   
   14000ffa4:	test   r8,r8
   14000ffa7:	je     0x140010095
   14000ffad:	mov    QWORD PTR [rsp+0x8],rbx
   14000ffb2:	mov    QWORD PTR [rsp+0x10],rbp
   14000ffb7:	mov    QWORD PTR [rsp+0x18],rsi
   14000ffbc:	push   rdi
   14000ffbd:	sub    rsp,0x20
   14000ffc1:	mov    rdi,r8
   14000ffc4:	mov    rbp,rdx
   14000ffc7:	mov    rbx,rcx
   14000ffca:	mov    rcx,QWORD PTR [rbx+0x110]
   14000ffd1:	mov    esi,0x80
   14000ffd6:	sub    rsi,rcx
   14000ffd9:	mov    rdx,rbp
   14000ffdc:	add    rcx,QWORD PTR [rbx+0xf0]
   14000ffe3:	cmp    rdi,rsi
   14000ffe6:	jbe    0x140010064
   14000ffe8:	mov    r8,rsi
   14000ffeb:	call   0x140059180
   14000fff0:	add    QWORD PTR [rbx+0x110],rsi
   14000fff7:	mov    rcx,rbx
   14000fffa:	mov    rax,QWORD PTR [rbx+0x100]
   140010001:	add    DWORD PTR [rax],0x40
   140010004:	mov    rax,QWORD PTR [rbx+0x100]
   14001000b:	cmp    DWORD PTR [rax],0x40
   14001000e:	adc    DWORD PTR [rax+0x4],0x0
   140010012:	cmp    DWORD PTR [rip+0x8eacb],0x3        # 0x14009eae4
   140010019:	mov    rdx,QWORD PTR [rbx+0xf0]
   140010020:	jl     0x140010029
   140010022:	call   0x14000eea8
   140010027:	jmp    0x14001002e
   140010029:	call   0x14000ea40
   14001002e:	mov    rax,QWORD PTR [rbx+0xf0]
   140010035:	add    rbp,rsi
   140010038:	movups xmm0,XMMWORD PTR [rax+0x40]
   14001003c:	movups xmm1,XMMWORD PTR [rax+0x50]
   140010040:	movups XMMWORD PTR [rax],xmm0
   140010043:	movups xmm0,XMMWORD PTR [rax+0x60]
   140010047:	movups XMMWORD PTR [rax+0x10],xmm1
   14001004b:	movups xmm1,XMMWORD PTR [rax+0x70]
   14001004f:	movups XMMWORD PTR [rax+0x20],xmm0
   140010053:	movups XMMWORD PTR [rax+0x30],xmm1
   140010057:	add    QWORD PTR [rbx+0x110],0xffffffffffffffc0
   14001005f:	sub    rdi,rsi
   140010062:	jmp    0x140010078
   140010064:	mov    r8,rdi
   140010067:	call   0x140059180
   14001006c:	add    QWORD PTR [rbx+0x110],rdi
   140010073:	add    rbp,rdi
   140010076:	xor    edi,edi
   140010078:	test   rdi,rdi
   14001007b:	jne    0x14000ffca
   140010081:	mov    rbx,QWORD PTR [rsp+0x30]
   140010086:	mov    rbp,QWORD PTR [rsp+0x38]
   14001008b:	mov    rsi,QWORD PTR [rsp+0x40]
   140010090:	add    rsp,0x20
   140010094:	pop    rdi
   140010095:	ret    
   140010096:	int3   
   140010097:	int3   
   140010098:	mov    QWORD PTR [rsp+0x18],rbx
   14001009d:	push   rbp
   14001009e:	push   rsi
   14001009f:	push   rdi
   1400100a0:	push   r14
   1400100a2:	push   r15
   1400100a4:	sub    rsp,0x130
   1400100ab:	mov    rax,QWORD PTR [rip+0x71e2e]        # 0x140081ee0
   1400100b2:	xor    rax,rsp
   1400100b5:	mov    QWORD PTR [rsp+0x120],rax
   1400100bd:	xor    ebx,ebx
   1400100bf:	lea    rbp,[rsp+0x20]
   1400100c4:	mov    r14,rdx
   1400100c7:	mov    rdi,rcx
   1400100ca:	mov    rsi,rcx
   1400100cd:	lea    r15d,[rbx+0x40]
   1400100d1:	mov    r8,QWORD PTR [rdi+0xc20]
   1400100d8:	cmp    r8,rbx
   1400100db:	jbe    0x1400100f9
   1400100dd:	sub    r8,rbx
   1400100e0:	lea    rdx,[rdi+0xa20]
   1400100e7:	cmp    r8,r15
   1400100ea:	mov    rcx,rsi
   1400100ed:	cmova  r8,r15
   1400100f1:	add    rdx,rbx
   1400100f4:	call   0x14000ffa4
   1400100f9:	mov    rdx,rbp
   1400100fc:	mov    rcx,rsi
   1400100ff:	call   0x14000fddc
   140010104:	add    rbx,r15
   140010107:	add    rbp,0x20
   14001010b:	add    rsi,0x120
   140010112:	cmp    rbx,0x200
   140010119:	jb     0x1400100d1
   14001011b:	lea    rbx,[rsp+0x20]
   140010120:	mov    esi,0x8
   140010125:	mov    r8d,0x20
   14001012b:	lea    rcx,[rdi+0x900]
   140010132:	mov    rdx,rbx
   140010135:	call   0x14000ffa4
   14001013a:	add    rbx,0x20
   14001013e:	sub    rsi,0x1
   140010142:	jne    0x140010125
   140010144:	mov    rdx,r14
   140010147:	lea    rcx,[rdi+0x900]
   14001014e:	call   0x14000fddc
   140010153:	mov    rcx,QWORD PTR [rsp+0x120]
   14001015b:	xor    rcx,rsp
   14001015e:	call   0x140055f90
   140010163:	mov    rbx,QWORD PTR [rsp+0x170]
   14001016b:	add    rsp,0x130
   140010172:	pop    r15
   140010174:	pop    r14
   140010176:	pop    rdi
   140010177:	pop    rsi
   140010178:	pop    rbp
   140010179:	ret    
   14001017a:	int3   
   14001017b:	int3   
   14001017c:	mov    QWORD PTR [rsp+0x8],rbx
   140010181:	mov    QWORD PTR [rsp+0x10],rsi
   140010186:	push   rdi
   140010187:	sub    rsp,0x20
   14001018b:	mov    rbx,rcx
   14001018e:	xor    edx,edx
   140010190:	add    rcx,0xa20
   140010197:	mov    r8d,0x200
   14001019d:	call   0x140058f40
   1400101a2:	xor    edi,edi
   1400101a4:	lea    rcx,[rbx+0x900]
   1400101ab:	xor    edx,edx
   1400101ad:	mov    QWORD PTR [rbx+0xc20],rdi
   1400101b4:	lea    r8d,[rdi+0x1]
   1400101b8:	call   0x14000fed0
   1400101bd:	mov    rsi,rbx
   1400101c0:	xor    r8d,r8d
   1400101c3:	mov    edx,edi
   1400101c5:	mov    rcx,rsi
   1400101c8:	call   0x14000fed0
   1400101cd:	inc    edi
   1400101cf:	add    rsi,0x120
   1400101d6:	cmp    edi,0x8
   1400101d9:	jb     0x1400101c0
   1400101db:	mov    rsi,QWORD PTR [rsp+0x38]
   1400101e0:	mov    BYTE PTR [rbx+0xa18],0x1
   1400101e7:	mov    BYTE PTR [rbx+0x8f8],0x1
   1400101ee:	mov    rbx,QWORD PTR [rsp+0x30]
   1400101f3:	add    rsp,0x20
   1400101f7:	pop    rdi
   1400101f8:	ret    
   1400101f9:	int3   
   1400101fa:	int3   
   1400101fb:	int3   
   1400101fc:	mov    QWORD PTR [rsp+0x20],rbx
   140010201:	push   rbp
   140010202:	push   rsi
   140010203:	push   rdi
   140010204:	push   r12
   140010206:	push   r13
   140010208:	push   r14
   14001020a:	push   r15
   14001020c:	sub    rsp,0x100
   140010213:	mov    rax,QWORD PTR [rip+0x71cc6]        # 0x140081ee0
   14001021a:	xor    rax,rsp
   14001021d:	mov    QWORD PTR [rsp+0xf0],rax
   140010225:	mov    r15,QWORD PTR [rcx+0xc20]
   14001022c:	mov    ebx,0x200
   140010231:	sub    rbx,r15
   140010234:	mov    rdi,r8
   140010237:	mov    rbp,rdx
   14001023a:	mov    rsi,rcx
   14001023d:	test   r15,r15
   140010240:	je     0x140010294
   140010242:	cmp    r8,rbx
   140010245:	jb     0x140010294
   140010247:	lea    rcx,[r15+0xa20]
   14001024e:	mov    r8,rbx
   140010251:	add    rcx,rsi
   140010254:	call   0x140059180
   140010259:	mov    r14,rsi
   14001025c:	lea    r15,[rsi+0xa20]
   140010263:	mov    r12d,0x8
   140010269:	mov    r8d,0x40
   14001026f:	mov    rdx,r15
   140010272:	mov    rcx,r14
   140010275:	call   0x14000ffa4
   14001027a:	add    r15,0x40
   14001027e:	add    r14,0x120
   140010285:	sub    r12,0x1
   140010289:	jne    0x140010269
   14001028b:	add    rbp,rbx
   14001028e:	sub    rdi,rbx
   140010291:	xor    r15d,r15d
   140010294:	cmp    rdi,0x1000
   14001029b:	jae    0x1400102a4
   14001029d:	mov    ebx,0x1
   1400102a2:	jmp    0x1400102b8
   1400102a4:	mov    ebx,DWORD PTR [rsi+0xc30]
   1400102aa:	mov    ecx,0x4
   1400102af:	lea    eax,[rbx-0x6]
   1400102b2:	cmp    eax,0x1
   1400102b5:	cmovbe ebx,ecx
   1400102b8:	xor    r12d,r12d
   1400102bb:	and    DWORD PTR [rsp+0x20],0x0
   1400102c0:	test   ebx,ebx
   1400102c2:	je     0x140010343
   1400102c4:	lea    r13,[r12+r12*8]
   1400102c8:	mov    rax,r12
   1400102cb:	shl    r13,0x5
   1400102cf:	lea    r14,[rsp+0x30]
   1400102d4:	add    r13,rsi
   1400102d7:	shl    rax,0x6
   1400102db:	add    rax,rbp
   1400102de:	mov    QWORD PTR [rsp+0x28],rax
   1400102e3:	cmp    r12,0x8
   1400102e7:	jae    0x140010343
   1400102e9:	mov    QWORD PTR [r14+0x10],rdi
   1400102ed:	mov    QWORD PTR [r14+0x8],rax
   1400102f1:	mov    QWORD PTR [r14],r13
   1400102f4:	cmp    ebx,0x1
   1400102f7:	jbe    0x140010311
   1400102f9:	mov    rcx,QWORD PTR [rsi+0xc28]
   140010300:	lea    rdx,[rip+0xffffffffffffe6c1]        # 0x14000e9c8
   140010307:	mov    r8,r14
   14001030a:	call   0x140046dd8
   14001030f:	jmp    0x140010319
   140010311:	mov    rcx,r14
   140010314:	call   0x14000e9d0
   140010319:	mov    rax,QWORD PTR [rsp+0x28]
   14001031e:	inc    r12
   140010321:	mov    ecx,DWORD PTR [rsp+0x20]
   140010325:	add    rax,0x40
   140010329:	inc    ecx
   14001032b:	mov    QWORD PTR [rsp+0x28],rax
   140010330:	add    r13,0x120
   140010337:	mov    DWORD PTR [rsp+0x20],ecx
   14001033b:	add    r14,0x18
   14001033f:	cmp    ecx,ebx
   140010341:	jb     0x1400102e3
   140010343:	mov    rcx,QWORD PTR [rsi+0xc28]
   14001034a:	test   rcx,rcx
   14001034d:	je     0x140010354
   14001034f:	call   0x140047214
   140010354:	cmp    r12,0x8
   140010358:	jb     0x1400102bb
   14001035e:	mov    rbx,rdi
   140010361:	and    ebx,0x1ff
   140010367:	sub    rdi,rbx
   14001036a:	add    rbp,rdi
   14001036d:	test   rbx,rbx
   140010370:	je     0x140010387
   140010372:	lea    rcx,[rsi+0xa20]
   140010379:	mov    r8d,ebx
   14001037c:	add    rcx,r15
   14001037f:	mov    rdx,rbp
   140010382:	call   0x140059180
   140010387:	lea    rax,[rbx+r15*1]
   14001038b:	mov    QWORD PTR [rsi+0xc20],rax
   140010392:	mov    rcx,QWORD PTR [rsp+0xf0]
   14001039a:	xor    rcx,rsp
   14001039d:	call   0x140055f90
   1400103a2:	mov    rbx,QWORD PTR [rsp+0x158]
   1400103aa:	add    rsp,0x100
   1400103b1:	pop    r15
   1400103b3:	pop    r14
   1400103b5:	pop    r13
   1400103b7:	pop    r12
   1400103b9:	pop    rdi
   1400103ba:	pop    rsi
   1400103bb:	pop    rbp
   1400103bc:	ret    
   1400103bd:	int3   
   1400103be:	int3   
   1400103bf:	int3   
   1400103c0:	mov    rax,rsp
   1400103c3:	mov    QWORD PTR [rax+0x8],rcx
   1400103c7:	push   rdi
   1400103c8:	sub    rsp,0x30
   1400103cc:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   1400103d4:	mov    QWORD PTR [rax+0x10],rbx
   1400103d8:	mov    QWORD PTR [rax+0x18],rsi
   1400103dc:	mov    rbx,rdx
   1400103df:	mov    rsi,rcx
   1400103e2:	lea    rdi,[rcx+0x20]
   1400103e6:	mov    rcx,rdi
   1400103e9:	call   0x140034600
   1400103ee:	nop
   1400103ef:	mov    QWORD PTR [rsi],rbx
   1400103f2:	xor    ebx,ebx
   1400103f4:	mov    QWORD PTR [rsi+0x58],rbx
   1400103f8:	mov    QWORD PTR [rsi+0x10],rbx
   1400103fc:	mov    DWORD PTR [rsi+0x18],ebx
   1400103ff:	mov    QWORD PTR [rsi+0x48],rbx
   140010403:	mov    DWORD PTR [rsi+0x50],ebx
   140010406:	mov    DWORD PTR [rsi+0x54],0x1
   14001040d:	call   0x140046ea4
   140010412:	mov    QWORD PTR [rsi+0x8],rax
   140010416:	mov    r9d,0x40000
   14001041c:	mov    r8,QWORD PTR [rsi]
   14001041f:	lea    rdx,[rip+0x50e]        # 0x140010934
   140010426:	mov    rcx,rdi
   140010429:	call   0x140034948
   14001042e:	mov    rcx,rdi
   140010431:	call   0x140034734
   140010436:	mov    DWORD PTR [rsi+0x1c],ebx
   140010439:	mov    rax,rsi
   14001043c:	mov    rbx,QWORD PTR [rsp+0x48]
   140010441:	mov    rsi,QWORD PTR [rsp+0x50]
   140010446:	add    rsp,0x30
   14001044a:	pop    rdi
   14001044b:	ret    
   14001044c:	rex push rbx
   14001044e:	sub    rsp,0x20
   140010452:	mov    rbx,rcx
   140010455:	add    rcx,0x18
   140010459:	call   0x140034600
   14001045e:	xor    eax,eax
   140010460:	mov    QWORD PTR [rbx+0x8a8],rax
   140010467:	mov    QWORD PTR [rbx+0x8b0],rax
   14001046e:	mov    QWORD PTR [rbx+0x8b8],rax
   140010475:	mov    QWORD PTR [rbx+0x8c0],rax
   14001047c:	mov    rax,rbx
   14001047f:	add    rsp,0x20
   140010483:	pop    rbx
   140010484:	ret    
   140010485:	int3   
   140010486:	int3   
   140010487:	int3   
   140010488:	rex push rdi
   14001048a:	sub    rsp,0x30
   14001048e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140010497:	mov    QWORD PTR [rsp+0x40],rbx
   14001049c:	mov    rdi,rcx
   14001049f:	mov    rcx,QWORD PTR [rcx+0x10]
   1400104a3:	call   0x140055de8
   1400104a8:	nop
   1400104a9:	mov    rcx,QWORD PTR [rdi+0x48]
   1400104ad:	test   rcx,rcx
   1400104b0:	je     0x1400104df
   1400104b2:	lea    rbx,[rcx-0x8]
   1400104b6:	lea    r9,[rip+0x3f]        # 0x1400104fc
   1400104bd:	mov    r8,QWORD PTR [rbx]
   1400104c0:	mov    edx,0x8d0
   1400104c5:	call   0x140055cdc
   1400104ca:	nop
   1400104cb:	imul   rdx,QWORD PTR [rbx],0x8d0
   1400104d2:	add    rdx,0x8
   1400104d6:	mov    rcx,rbx
   1400104d9:	call   0x140055df8
   1400104de:	nop
   1400104df:	mov    rcx,QWORD PTR [rdi+0x8]
   1400104e3:	call   0x140047010
   1400104e8:	nop
   1400104e9:	lea    rcx,[rdi+0x20]
   1400104ed:	mov    rbx,QWORD PTR [rsp+0x40]
   1400104f2:	add    rsp,0x30
   1400104f6:	pop    rdi
   1400104f7:	jmp    0x14003461c
   1400104fc:	rex push rbx
   1400104fe:	sub    rsp,0x20
   140010502:	mov    rbx,rcx
   140010505:	mov    rcx,QWORD PTR [rcx+0x8a8]
   14001050c:	test   rcx,rcx
   14001050f:	je     0x140010516
   140010511:	call   0x14005a938
   140010516:	lea    rcx,[rbx+0x18]
   14001051a:	add    rsp,0x20
   14001051e:	pop    rbx
   14001051f:	jmp    0x14003461c
   140010524:	mov    QWORD PTR [rsp+0x8],rbx
   140010529:	mov    QWORD PTR [rsp+0x10],rsi
   14001052e:	push   rdi
   14001052f:	sub    rsp,0x20
   140010533:	add    QWORD PTR [rcx+0x8],rdx
   140010537:	mov    rbx,rcx
   14001053a:	mov    rax,QWORD PTR [rcx+0x8]
   14001053e:	cmp    rax,QWORD PTR [rcx+0x10]
   140010542:	jbe    0x1400105b7
   140010544:	mov    r8,QWORD PTR [rcx+0x18]
   140010548:	test   r8,r8
   14001054b:	je     0x140010571
   14001054d:	cmp    rax,r8
   140010550:	jbe    0x140010571
   140010552:	lea    rdx,[rip+0x5ce07]        # 0x14006d360
   140010559:	lea    rcx,[rip+0x84300]        # 0x140094860
   140010560:	call   0x14001bc8c
   140010565:	lea    rcx,[rip+0x842f4]        # 0x140094860
   14001056c:	call   0x14001bd24
   140010571:	mov    rcx,QWORD PTR [rbx+0x10]
   140010575:	mov    rax,rcx
   140010578:	shr    rax,0x2
   14001057c:	lea    rdi,[rcx+0x20]
   140010580:	mov    rcx,QWORD PTR [rbx]
   140010583:	add    rdi,rax
   140010586:	cmp    QWORD PTR [rbx+0x8],rdi
   14001058a:	cmova  rdi,QWORD PTR [rbx+0x8]
   14001058f:	lea    rdx,[rdi+rdi*2]
   140010593:	shl    rdx,0x2
   140010597:	call   0x14005a940
   14001059c:	mov    rsi,rax
   14001059f:	test   rax,rax
   1400105a2:	jne    0x1400105b0
   1400105a4:	lea    rcx,[rip+0x842b5]        # 0x140094860
   1400105ab:	call   0x14001bd24
   1400105b0:	mov    QWORD PTR [rbx],rsi
   1400105b3:	mov    QWORD PTR [rbx+0x10],rdi
   1400105b7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400105bc:	mov    rsi,QWORD PTR [rsp+0x38]
   1400105c1:	add    rsp,0x20
   1400105c5:	pop    rdi
   1400105c6:	ret    
   1400105c7:	int3   
   1400105c8:	mov    QWORD PTR [rsp+0x10],rbx
   1400105cd:	mov    QWORD PTR [rsp+0x18],rbp
   1400105d2:	mov    QWORD PTR [rsp+0x20],rsi
   1400105d7:	push   rdi
   1400105d8:	push   r12
   1400105da:	push   r13
   1400105dc:	push   r14
   1400105de:	push   r15
   1400105e0:	sub    rsp,0x250
   1400105e7:	mov    rax,QWORD PTR [rip+0x718f2]        # 0x140081ee0
   1400105ee:	xor    rax,rsp
   1400105f1:	mov    QWORD PTR [rsp+0x240],rax
   1400105f9:	xor    esi,esi
   1400105fb:	xor    ebp,ebp
   1400105fd:	mov    rdi,rcx
   140010600:	cmp    DWORD PTR [rcx+0x1c],esi
   140010603:	jbe    0x140010653
   140010605:	mov    r14d,0x4000
   14001060b:	mov    eax,DWORD PTR [rdi+0x1c]
   14001060e:	mov    edx,r14d
   140010611:	sub    eax,ebp
   140010613:	cmp    eax,r14d
   140010616:	cmovb  edx,eax
   140010619:	mov    eax,esi
   14001061b:	imul   rbx,rax,0x8d0
   140010622:	add    rbx,QWORD PTR [rdi+0x48]
   140010626:	mov    QWORD PTR [rbx],rdi
   140010629:	mov    rax,QWORD PTR [rdi+0x10]
   14001062d:	mov    DWORD PTR [rbx+0x10],edx
   140010630:	lea    rcx,[rax+rbp*8]
   140010634:	mov    QWORD PTR [rbx+0x8],rcx
   140010638:	lea    rcx,[rbx+0x18]
   14001063c:	call   0x140034734
   140010641:	and    QWORD PTR [rbx+0x8b0],0x0
   140010649:	inc    esi
   14001064b:	add    ebp,r14d
   14001064e:	cmp    ebp,DWORD PTR [rdi+0x1c]
   140010651:	jb     0x14001060b
   140010653:	cmp    DWORD PTR [rdi+0x54],0x2
   140010657:	mov    eax,esi
   140010659:	setb   r13b
   14001065d:	xor    edx,edx
   14001065f:	div    DWORD PTR [rdi+0x54]
   140010662:	mov    ebx,eax
   140010664:	test   edx,edx
   140010666:	je     0x14001066a
   140010668:	inc    ebx
   14001066a:	xor    r12d,r12d
   14001066d:	xor    ebp,ebp
   14001066f:	test   esi,esi
   140010671:	je     0x1400106ec
   140010673:	mov    eax,r12d
   140010676:	lea    r14,[rsp+0x40]
   14001067b:	shl    rax,0x4
   14001067f:	inc    r12d
   140010682:	add    r14,rax
   140010685:	mov    eax,ebp
   140010687:	imul   rcx,rax,0x8d0
   14001068e:	mov    eax,esi
   140010690:	add    rcx,QWORD PTR [rdi+0x48]
   140010694:	sub    eax,ebp
   140010696:	cmp    ebx,eax
   140010698:	mov    QWORD PTR [r14],rcx
   14001069b:	cmovb  eax,ebx
   14001069e:	mov    DWORD PTR [r14+0x8],eax
   1400106a2:	cmp    esi,0x1
   1400106a5:	je     0x1400106c1
   1400106a7:	test   r13b,r13b
   1400106aa:	jne    0x1400106c1
   1400106ac:	mov    rcx,QWORD PTR [rdi+0x8]
   1400106b0:	lea    rdx,[rip+0x509]        # 0x140010bc0
   1400106b7:	mov    r8,r14
   1400106ba:	call   0x140046dd8
   1400106bf:	jmp    0x1400106e6
   1400106c1:	xor    r15d,r15d
   1400106c4:	test   eax,eax
   1400106c6:	je     0x1400106e6
   1400106c8:	mov    eax,r15d
   1400106cb:	mov    rcx,rdi
   1400106ce:	imul   rdx,rax,0x8d0
   1400106d5:	add    rdx,QWORD PTR [r14]
   1400106d8:	call   0x1400109ac
   1400106dd:	inc    r15d
   1400106e0:	cmp    r15d,DWORD PTR [r14+0x8]
   1400106e4:	jb     0x1400106c8
   1400106e6:	add    ebp,ebx
   1400106e8:	cmp    ebp,esi
   1400106ea:	jb     0x140010673
   1400106ec:	mov    rcx,QWORD PTR [rdi+0x8]
   1400106f0:	call   0x140047214
   1400106f5:	xor    r12d,r12d
   1400106f8:	xor    ebp,ebp
   1400106fa:	test   esi,esi
   1400106fc:	je     0x140010777
   1400106fe:	mov    eax,r12d
   140010701:	lea    r14,[rsp+0x40]
   140010706:	shl    rax,0x4
   14001070a:	inc    r12d
   14001070d:	add    r14,rax
   140010710:	mov    eax,ebp
   140010712:	imul   rcx,rax,0x8d0
   140010719:	mov    eax,esi
   14001071b:	add    rcx,QWORD PTR [rdi+0x48]
   14001071f:	sub    eax,ebp
   140010721:	cmp    ebx,eax
   140010723:	mov    QWORD PTR [r14],rcx
   140010726:	cmovb  eax,ebx
   140010729:	mov    DWORD PTR [r14+0x8],eax
   14001072d:	cmp    esi,0x1
   140010730:	je     0x14001074c
   140010732:	test   r13b,r13b
   140010735:	jne    0x14001074c
   140010737:	mov    rcx,QWORD PTR [rdi+0x8]
   14001073b:	lea    rdx,[rip+0xac2]        # 0x140011204
   140010742:	mov    r8,r14
   140010745:	call   0x140046dd8
   14001074a:	jmp    0x140010771
   14001074c:	xor    r15d,r15d
   14001074f:	test   eax,eax
   140010751:	je     0x140010771
   140010753:	mov    eax,r15d
   140010756:	mov    rcx,rdi
   140010759:	imul   rdx,rax,0x8d0
   140010760:	add    rdx,QWORD PTR [r14]
   140010763:	call   0x140010d00
   140010768:	inc    r15d
   14001076b:	cmp    r15d,DWORD PTR [r14+0x8]
   14001076f:	jb     0x140010753
   140010771:	add    ebp,ebx
   140010773:	cmp    ebp,esi
   140010775:	jb     0x1400106fe
   140010777:	mov    rcx,QWORD PTR [rdi+0x8]
   14001077b:	call   0x140047214
   140010780:	test   esi,esi
   140010782:	je     0x140010890
   140010788:	xor    ebx,ebx
   14001078a:	mov    r13d,esi
   14001078d:	mov    rsi,QWORD PTR [rdi+0x48]
   140010791:	lea    rcx,[rsi+0x18]
   140010795:	add    rcx,rbx
   140010798:	call   0x1400346a8
   14001079d:	xor    ebp,ebp
   14001079f:	mov    DWORD PTR [rsp+0x30],eax
   1400107a3:	xor    r12d,r12d
   1400107a6:	cmp    QWORD PTR [rbx+rsi*1+0x8b0],rbp
   1400107ae:	jbe    0x140010847
   1400107b4:	xor    ecx,ecx
   1400107b6:	mov    r15,QWORD PTR [rbx+rsi*1+0x8a8]
   1400107be:	lea    r14,[rcx+rcx*2]
   1400107c2:	mov    edx,DWORD PTR [r15+r14*4+0x4]
   1400107c7:	cmp    edx,ebp
   1400107c9:	jbe    0x140010809
   1400107cb:	cmp    BYTE PTR [r15+r14*4],0x5
   1400107d0:	mov    rcx,rdi
   1400107d3:	mov    r8d,DWORD PTR [r15+r14*4+0x8]
   1400107d8:	sete   al
   1400107db:	test   ebp,ebp
   1400107dd:	mov    BYTE PTR [rsp+0x20],al
   1400107e1:	sete   r9b
   1400107e5:	sub    edx,ebp
   1400107e7:	call   0x140011244
   1400107ec:	mov    r8d,DWORD PTR [r15+r14*4+0x4]
   1400107f1:	lea    rcx,[rdi+0x20]
   1400107f5:	mov    edx,ebp
   1400107f7:	sub    r8d,ebp
   1400107fa:	add    rdx,QWORD PTR [rbx+rsi*1+0x30]
   1400107ff:	call   0x140034764
   140010804:	mov    ebp,DWORD PTR [r15+r14*4+0x4]
   140010809:	mov    rcx,rdi
   14001080c:	call   0x1400108fc
   140010811:	mov    rcx,QWORD PTR [rdi+0x58]
   140010815:	test   rcx,rcx
   140010818:	je     0x14001082f
   14001081a:	xor    edx,edx
   14001081c:	cmp    BYTE PTR [r15+r14*4],0x4
   140010821:	jne    0x14001082a
   140010823:	call   0x140006644
   140010828:	jmp    0x14001082f
   14001082a:	call   0x1400049a0
   14001082f:	inc    r12d
   140010832:	mov    ecx,r12d
   140010835:	cmp    rcx,QWORD PTR [rbx+rsi*1+0x8b0]
   14001083d:	jb     0x1400107b6
   140010843:	mov    eax,DWORD PTR [rsp+0x30]
   140010847:	mov    edx,DWORD PTR [rbx+rsi*1+0x38]
   14001084b:	cmp    ebp,edx
   14001084d:	jae    0x14001087f
   14001084f:	test   ebp,ebp
   140010851:	mov    BYTE PTR [rsp+0x20],0x0
   140010856:	mov    r8d,eax
   140010859:	mov    rcx,rdi
   14001085c:	sete   r9b
   140010860:	sub    edx,ebp
   140010862:	call   0x140011244
   140010867:	mov    r8d,DWORD PTR [rbx+rsi*1+0x38]
   14001086c:	lea    rcx,[rdi+0x20]
   140010870:	mov    edx,ebp
   140010872:	sub    r8d,ebp
   140010875:	add    rdx,QWORD PTR [rbx+rsi*1+0x30]
   14001087a:	call   0x140034764
   14001087f:	add    rbx,0x8d0
   140010886:	sub    r13,0x1
   14001088a:	jne    0x14001078d
   140010890:	mov    rcx,QWORD PTR [rdi+0x58]
   140010894:	test   rcx,rcx
   140010897:	je     0x14001089e
   140010899:	call   0x140006360
   14001089e:	and    DWORD PTR [rdi+0x1c],0x0
   1400108a2:	mov    rcx,QWORD PTR [rsp+0x240]
   1400108aa:	xor    rcx,rsp
   1400108ad:	call   0x140055f90
   1400108b2:	lea    r11,[rsp+0x250]
   1400108ba:	mov    rbx,QWORD PTR [r11+0x38]
   1400108be:	mov    rbp,QWORD PTR [r11+0x40]
   1400108c2:	mov    rsi,QWORD PTR [r11+0x48]
   1400108c6:	mov    rsp,r11
   1400108c9:	pop    r15
   1400108cb:	pop    r14
   1400108cd:	pop    r13
   1400108cf:	pop    r12
   1400108d1:	pop    rdi
   1400108d2:	ret    
   1400108d3:	int3   
   1400108d4:	sub    rsp,0x28
   1400108d8:	mov    r8d,DWORD PTR [rcx+0x1c]
   1400108dc:	mov    eax,0x4000
   1400108e1:	and    r8d,0x3fff
   1400108e8:	sub    eax,edx
   1400108ea:	cmp    r8d,eax
   1400108ed:	jb     0x1400108f4
   1400108ef:	call   0x1400105c8
   1400108f4:	add    rsp,0x28
   1400108f8:	ret    
   1400108f9:	int3   
   1400108fa:	int3   
   1400108fb:	int3   
   1400108fc:	mov    QWORD PTR [rsp+0x8],rbx
   140010901:	push   rdi
   140010902:	sub    rsp,0x20
   140010906:	mov    rdi,rcx
   140010909:	add    rcx,0x20
   14001090d:	call   0x1400346a8
   140010912:	lea    rcx,[rdi+0x20]
   140010916:	call   0x140034684
   14001091b:	mov    rcx,QWORD PTR [rdi+0x58]
   14001091f:	test   rcx,rcx
   140010922:	je     0x140010929
   140010924:	call   0x1400053ac
   140010929:	mov    rbx,QWORD PTR [rsp+0x30]
   14001092e:	add    rsp,0x20
   140010932:	pop    rdi
   140010933:	ret    
   140010934:	mov    QWORD PTR [rsp+0x8],rbx
   140010939:	mov    QWORD PTR [rsp+0x10],rsi
   14001093e:	push   rdi
   14001093f:	sub    rsp,0x20
   140010943:	mov    rbx,r8
   140010946:	mov    rdi,rdx
   140010949:	mov    rsi,rcx
   14001094c:	test   r8b,0xf
   140010950:	je     0x14001096c
   140010952:	or     r8,0xf
   140010956:	cmp    rbx,r8
   140010959:	ja     0x14001096c
   14001095b:	sub    r8,rbx
   14001095e:	lea    rcx,[rdx+rbx*1]
   140010962:	inc    r8
   140010965:	xor    edx,edx
   140010967:	call   0x140058f40
   14001096c:	mov    r8,rbx
   14001096f:	mov    rdx,rdi
   140010972:	mov    rcx,rsi
   140010975:	mov    rbx,QWORD PTR [rsp+0x30]
   14001097a:	mov    rsi,QWORD PTR [rsp+0x38]
   14001097f:	add    rsp,0x20
   140010983:	pop    rdi
   140010984:	jmp    0x1400372b0
   140010989:	int3   
   14001098a:	int3   
   14001098b:	int3   
   14001098c:	test   dl,dl
   14001098e:	jne    0x1400109aa
   140010990:	push   rbx
   140010991:	sub    rsp,0x20
   140010995:	mov    rbx,rcx
   140010998:	add    rcx,0x20
   14001099c:	call   0x140034734
   1400109a1:	and    DWORD PTR [rbx+0x1c],0x0
   1400109a5:	add    rsp,0x20
   1400109a9:	pop    rbx
   1400109aa:	ret    
   1400109ab:	int3   
   1400109ac:	mov    QWORD PTR [rsp+0x8],rbx
   1400109b1:	push   rbp
   1400109b2:	lea    rbp,[rsp-0x5f0]
   1400109ba:	sub    rsp,0x6f0
   1400109c1:	mov    rax,QWORD PTR [rip+0x71518]        # 0x140081ee0
   1400109c8:	xor    rax,rsp
   1400109cb:	mov    QWORD PTR [rbp+0x5e0],rax
   1400109d2:	cmp    DWORD PTR [rcx+0x1c],0x0
   1400109d6:	mov    rbx,rdx
   1400109d9:	jbe    0x1400109eb
   1400109db:	mov    rax,QWORD PTR [rdx+0x8]
   1400109df:	cmp    BYTE PTR [rax],0x4
   1400109e2:	jne    0x1400109eb
   1400109e4:	mov    eax,0x1
   1400109e9:	jmp    0x1400109ed
   1400109eb:	xor    eax,eax
   1400109ed:	mov    BYTE PTR [rdx+0x8c8],al
   1400109f3:	lea    rcx,[rbp+0x110]
   1400109fa:	xor    edx,edx
   1400109fc:	mov    r8d,0x4c8
   140010a02:	call   0x140058f40
   140010a07:	xor    edx,edx
   140010a09:	lea    rcx,[rbp+0x10]
   140010a0d:	mov    r8d,0x100
   140010a13:	call   0x140058f40
   140010a18:	xor    edx,edx
   140010a1a:	lea    rcx,[rsp+0x60]
   140010a1f:	mov    r8d,0xb0
   140010a25:	call   0x140058f40
   140010a2a:	xor    edx,edx
   140010a2c:	lea    rcx,[rsp+0x20]
   140010a31:	lea    r8d,[rdx+0x40]
   140010a35:	call   0x140058f40
   140010a3a:	mov    rdx,QWORD PTR [rbx+0x8]
   140010a3e:	mov    eax,DWORD PTR [rbx+0x10]
   140010a41:	lea    r9,[rdx+rax*8]
   140010a45:	jmp    0x140010b22
   140010a4a:	mov    al,BYTE PTR [rdx]
   140010a4c:	test   al,al
   140010a4e:	jne    0x140010a60
   140010a50:	movzx  eax,BYTE PTR [rdx+0x4]
   140010a54:	inc    DWORD PTR [rbp+rax*4+0x110]
   140010a5b:	jmp    0x140010b1e
   140010a60:	cmp    al,0x1
   140010a62:	jne    0x140010aca
   140010a64:	movzx  r8d,WORD PTR [rdx+0x2]
   140010a69:	cmp    r8d,0x8
   140010a6d:	jb     0x140010a85
   140010a6f:	bsr    eax,r8d
   140010a73:	lea    ecx,[rax-0x2]
   140010a76:	shr    r8d,cl
   140010a79:	and    r8d,0x3
   140010a7d:	lea    r8d,[r8+rax*4]
   140010a81:	add    r8d,0xfffffffc
   140010a85:	lea    eax,[r8+0x106]
   140010a8c:	inc    DWORD PTR [rbp+rax*4+0x110]
   140010a93:	mov    r8d,DWORD PTR [rdx+0x4]
   140010a97:	cmp    r8d,0x4
   140010a9b:	jb     0x140010aaf
   140010a9d:	bsr    eax,r8d
   140010aa1:	lea    ecx,[rax-0x1]
   140010aa4:	shr    r8d,cl
   140010aa7:	and    r8d,0x1
   140010aab:	lea    r8d,[r8+rax*2]
   140010aaf:	mov    eax,r8d
   140010ab2:	inc    DWORD PTR [rbp+rax*4+0x10]
   140010ab6:	cmp    r8d,0x9
   140010aba:	jbe    0x140010b1e
   140010abc:	mov    al,BYTE PTR [rdx+0x4]
   140010abf:	and    al,0xf
   140010ac1:	movzx  eax,al
   140010ac4:	inc    DWORD PTR [rsp+rax*4+0x20]
   140010ac8:	jmp    0x140010b1e
   140010aca:	cmp    al,0x2
   140010acc:	jne    0x140010ad6
   140010ace:	inc    DWORD PTR [rbp+0x514]
   140010ad4:	jmp    0x140010b1e
   140010ad6:	cmp    al,0x3
   140010ad8:	jne    0x140010b14
   140010ada:	mov    eax,DWORD PTR [rdx+0x4]
   140010add:	add    eax,0x102
   140010ae2:	inc    DWORD PTR [rbp+rax*4+0x110]
   140010ae9:	movzx  r8d,WORD PTR [rdx+0x2]
   140010aee:	cmp    r8d,0x8
   140010af2:	jb     0x140010b0a
   140010af4:	bsr    eax,r8d
   140010af8:	lea    ecx,[rax-0x2]
   140010afb:	shr    r8d,cl
   140010afe:	and    r8d,0x3
   140010b02:	lea    r8d,[r8+rax*4]
   140010b06:	add    r8d,0xfffffffc
   140010b0a:	inc    DWORD PTR [rsp+r8*4+0x60]
   140010b0f:	mov    eax,r8d
   140010b12:	jmp    0x140010b1e
   140010b14:	cmp    al,0x6
   140010b16:	jne    0x140010b1e
   140010b18:	inc    DWORD PTR [rbp+0x510]
   140010b1e:	add    rdx,0x8
   140010b22:	cmp    rdx,r9
   140010b25:	jb     0x140010a4a
   140010b2b:	lea    r9,[rbx+0x40]
   140010b2f:	mov    ecx,0x132
   140010b34:	lea    r8,[rbx+0x6f8]
   140010b3b:	lea    rdx,[rbp+0x110]
   140010b42:	call   0x140026024
   140010b47:	lea    r9,[rbx+0x508]
   140010b4e:	mov    ecx,0x40
   140010b53:	lea    r8,[rbx+0x82a]
   140010b5a:	lea    rdx,[rbp+0x10]
   140010b5e:	call   0x140026024
   140010b63:	lea    r9,[rbx+0x608]
   140010b6a:	mov    ecx,0x10
   140010b6f:	lea    r8,[rbx+0x86a]
   140010b76:	lea    rdx,[rsp+0x20]
   140010b7b:	call   0x140026024
   140010b80:	lea    r9,[rbx+0x648]
   140010b87:	mov    ecx,0x2c
   140010b8c:	lea    r8,[rbx+0x87a]
   140010b93:	lea    rdx,[rsp+0x60]
   140010b98:	call   0x140026024
   140010b9d:	mov    rcx,QWORD PTR [rbp+0x5e0]
   140010ba4:	xor    rcx,rsp
   140010ba7:	call   0x140055f90
   140010bac:	mov    rbx,QWORD PTR [rsp+0x700]
   140010bb4:	add    rsp,0x6f0
   140010bbb:	pop    rbp
   140010bbc:	ret    
   140010bbd:	int3   
   140010bbe:	int3   
   140010bbf:	int3   
   140010bc0:	mov    QWORD PTR [rsp+0x8],rbx
   140010bc5:	push   rdi
   140010bc6:	sub    rsp,0x20
   140010bca:	xor    ebx,ebx
   140010bcc:	mov    rdi,rcx
   140010bcf:	cmp    DWORD PTR [rcx+0x8],ebx
   140010bd2:	jbe    0x140010bf2
   140010bd4:	mov    rcx,QWORD PTR [rdi]
   140010bd7:	mov    eax,ebx
   140010bd9:	imul   rdx,rax,0x8d0
   140010be0:	add    rdx,rcx
   140010be3:	mov    rcx,QWORD PTR [rcx]
   140010be6:	call   0x1400109ac
   140010beb:	inc    ebx
   140010bed:	cmp    ebx,DWORD PTR [rdi+0x8]
   140010bf0:	jb     0x140010bd4
   140010bf2:	mov    rbx,QWORD PTR [rsp+0x30]
   140010bf7:	add    rsp,0x20
   140010bfb:	pop    rdi
   140010bfc:	ret    
   140010bfd:	int3   
   140010bfe:	int3   
   140010bff:	int3   
   140010c00:	mov    QWORD PTR [rsp+0x8],rbx
   140010c05:	push   rdi
   140010c06:	sub    rsp,0x20
   140010c0a:	mov    rdi,rdx
   140010c0d:	mov    rbx,rcx
   140010c10:	mov    edx,0x1
   140010c15:	call   0x140010524
   140010c1a:	mov    rax,QWORD PTR [rbx+0x8]
   140010c1e:	mov    rcx,QWORD PTR [rbx]
   140010c21:	movsd  xmm0,QWORD PTR [rdi]
   140010c25:	mov    rbx,QWORD PTR [rsp+0x30]
   140010c2a:	lea    r8,[rax+rax*2]
   140010c2e:	movsd  QWORD PTR [rcx+r8*4-0xc],xmm0
   140010c35:	mov    eax,DWORD PTR [rdi+0x8]
   140010c38:	mov    DWORD PTR [rcx+r8*4-0x4],eax
   140010c3d:	add    rsp,0x20
   140010c41:	pop    rdi
   140010c42:	ret    
   140010c43:	int3   
   140010c44:	rex push rdi
   140010c46:	sub    rsp,0x40
   140010c4a:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140010c53:	mov    QWORD PTR [rsp+0x58],rbx
   140010c58:	mov    QWORD PTR [rsp+0x68],rsi
   140010c5d:	mov    rsi,rcx
   140010c60:	mov    DWORD PTR [rcx+0x54],edx
   140010c63:	add    edx,edx
   140010c65:	mov    DWORD PTR [rcx+0x50],edx
   140010c68:	shl    edx,0xe
   140010c6b:	mov    r8d,edx
   140010c6e:	mov    DWORD PTR [rcx+0x18],r8d
   140010c72:	mov    eax,0x8
   140010c77:	mul    r8
   140010c7a:	mov    rbx,0xffffffffffffffff
   140010c81:	cmovo  rax,rbx
   140010c85:	mov    rcx,rax
   140010c88:	call   0x140055df0
   140010c8d:	mov    QWORD PTR [rsi+0x10],rax
   140010c91:	mov    edi,DWORD PTR [rsi+0x50]
   140010c94:	mov    QWORD PTR [rsp+0x50],rdi
   140010c99:	mov    eax,0x8d0
   140010c9e:	mul    rdi
   140010ca1:	cmovo  rax,rbx
   140010ca5:	add    rax,0x8
   140010ca9:	cmovb  rax,rbx
   140010cad:	mov    rcx,rax
   140010cb0:	call   0x140055df0
   140010cb5:	mov    QWORD PTR [rsp+0x60],rax
   140010cba:	xor    ebx,ebx
   140010cbc:	test   rax,rax
   140010cbf:	je     0x140010cec
   140010cc1:	mov    QWORD PTR [rax],rdi
   140010cc4:	lea    rbx,[rax+0x8]
   140010cc8:	lea    rax,[rip+0xfffffffffffff82d]        # 0x1400104fc
   140010ccf:	mov    QWORD PTR [rsp+0x20],rax
   140010cd4:	lea    r9,[rip+0xfffffffffffff771]        # 0x14001044c
   140010cdb:	mov    r8d,edi
   140010cde:	mov    edx,0x8d0
   140010ce3:	mov    rcx,rbx
   140010ce6:	call   0x140055c6c
   140010ceb:	nop
   140010cec:	mov    QWORD PTR [rsi+0x48],rbx
   140010cf0:	mov    rbx,QWORD PTR [rsp+0x58]
   140010cf5:	mov    rsi,QWORD PTR [rsp+0x68]
   140010cfa:	add    rsp,0x40
   140010cfe:	pop    rdi
   140010cff:	ret    
   140010d00:	mov    QWORD PTR [rsp+0x18],rbx
   140010d05:	mov    QWORD PTR [rsp+0x8],rcx
   140010d0a:	push   rbp
   140010d0b:	push   rsi
   140010d0c:	push   rdi
   140010d0d:	push   r12
   140010d0f:	push   r13
   140010d11:	push   r14
   140010d13:	push   r15
   140010d15:	mov    rbp,rsp
   140010d18:	sub    rsp,0x60
   140010d1c:	cmp    BYTE PTR [rdx+0x8c8],0x0
   140010d23:	mov    rbx,rdx
   140010d26:	mov    r14,rcx
   140010d29:	jne    0x140010d30
   140010d2b:	call   0x14001133c
   140010d30:	mov    rsi,QWORD PTR [rbx+0x8]
   140010d34:	mov    eax,DWORD PTR [rbx+0x10]
   140010d37:	lea    rax,[rsi+rax*8]
   140010d3b:	mov    QWORD PTR [rbp+0x48],rax
   140010d3f:	cmp    rsi,rax
   140010d42:	jae    0x1400111ea
   140010d48:	mov    rdi,rax
   140010d4b:	mov    al,BYTE PTR [rsi]
   140010d4d:	test   al,al
   140010d4f:	jne    0x140010dac
   140010d51:	movzx  eax,BYTE PTR [rsi+0x4]
   140010d55:	mov    ecx,DWORD PTR [rbx+0x2c]
   140010d58:	movzx  r15d,BYTE PTR [rax+rbx*1+0x6f8]
   140010d61:	mov    r14d,DWORD PTR [rbx+rax*4+0x40]
   140010d66:	cmp    r15d,ecx
   140010d69:	ja     0x140010d81
   140010d6b:	sub    ecx,r15d
   140010d6e:	shl    r14d,cl
   140010d71:	or     DWORD PTR [rbx+0x28],r14d
   140010d75:	mov    DWORD PTR [rbx+0x2c],ecx
   140010d78:	mov    rdi,QWORD PTR [rbp+0x48]
   140010d7c:	jmp    0x1400111d9
   140010d81:	sub    r15d,ecx
   140010d84:	mov    eax,r14d
   140010d87:	mov    ecx,r15d
   140010d8a:	shr    eax,cl
   140010d8c:	lea    rcx,[rbx+0x18]
   140010d90:	or     DWORD PTR [rbx+0x28],eax
   140010d93:	mov    edx,DWORD PTR [rbx+0x28]
   140010d96:	call   0x140034800
   140010d9b:	mov    ecx,0x20
   140010da0:	sub    ecx,r15d
   140010da3:	shl    r14d,cl
   140010da6:	mov    DWORD PTR [rbx+0x28],r14d
   140010daa:	jmp    0x140010d75
   140010dac:	cmp    al,0x1
   140010dae:	jne    0x140011044
   140010db4:	movzx  r12d,WORD PTR [rsi+0x2]
   140010db9:	mov    eax,r12d
   140010dbc:	cmp    r12d,0x8
   140010dc0:	jae    0x140010dc7
   140010dc2:	xor    r14d,r14d
   140010dc5:	jmp    0x140010de3
   140010dc7:	bsr    edx,r12d
   140010dcb:	lea    ecx,[rdx-0x2]
   140010dce:	shr    eax,cl
   140010dd0:	and    eax,0x3
   140010dd3:	lea    eax,[rax+rdx*4]
   140010dd6:	add    eax,0xfffffffc
   140010dd9:	mov    r14d,eax
   140010ddc:	shr    r14d,0x2
   140010de0:	dec    r14d
   140010de3:	lea    eax,[rax+0x106]
   140010de9:	movzx  r13d,BYTE PTR [rax+rbx*1+0x6f8]
   140010df2:	lea    rdi,[rbx+0x18]
   140010df6:	mov    ecx,DWORD PTR [rdi+0x14]
   140010df9:	mov    r15d,DWORD PTR [rbx+rax*4+0x40]
   140010dfe:	cmp    r13d,ecx
   140010e01:	ja     0x140010e0f
   140010e03:	sub    ecx,r13d
   140010e06:	shl    r15d,cl
   140010e09:	or     DWORD PTR [rdi+0x10],r15d
   140010e0d:	jmp    0x140010e37
   140010e0f:	sub    r13d,ecx
   140010e12:	mov    eax,r15d
   140010e15:	mov    ecx,r13d
   140010e18:	shr    eax,cl
   140010e1a:	mov    rcx,rdi
   140010e1d:	or     DWORD PTR [rdi+0x10],eax
   140010e20:	mov    edx,DWORD PTR [rdi+0x10]
   140010e23:	call   0x140034800
   140010e28:	mov    ecx,0x20
   140010e2d:	sub    ecx,r13d
   140010e30:	shl    r15d,cl
   140010e33:	mov    DWORD PTR [rdi+0x10],r15d
   140010e37:	mov    DWORD PTR [rdi+0x14],ecx
   140010e3a:	test   r14d,r14d
   140010e3d:	je     0x140010e90
   140010e3f:	mov    ecx,r14d
   140010e42:	mov    r15d,0x1
   140010e48:	shl    r15d,cl
   140010e4b:	mov    ecx,DWORD PTR [rdi+0x14]
   140010e4e:	dec    r15d
   140010e51:	and    r15d,r12d
   140010e54:	cmp    r14d,ecx
   140010e57:	ja     0x140010e65
   140010e59:	sub    ecx,r14d
   140010e5c:	shl    r15d,cl
   140010e5f:	or     DWORD PTR [rdi+0x10],r15d
   140010e63:	jmp    0x140010e8d
   140010e65:	sub    r14d,ecx
   140010e68:	mov    eax,r15d
   140010e6b:	mov    ecx,r14d
   140010e6e:	shr    eax,cl
   140010e70:	mov    rcx,rdi
   140010e73:	or     DWORD PTR [rdi+0x10],eax
   140010e76:	mov    edx,DWORD PTR [rdi+0x10]
   140010e79:	call   0x140034800
   140010e7e:	mov    ecx,0x20
   140010e83:	sub    ecx,r14d
   140010e86:	shl    r15d,cl
   140010e89:	mov    DWORD PTR [rdi+0x10],r15d
   140010e8d:	mov    DWORD PTR [rdi+0x14],ecx
   140010e90:	mov    r12d,DWORD PTR [rsi+0x4]
   140010e94:	cmp    r12d,0x4
   140010e98:	jae    0x140010ea2
   140010e9a:	xor    r14d,r14d
   140010e9d:	mov    eax,r12d
   140010ea0:	jmp    0x140010ebd
   140010ea2:	bsr    edx,r12d
   140010ea6:	mov    eax,r12d
   140010ea9:	lea    ecx,[rdx-0x1]
   140010eac:	shr    eax,cl
   140010eae:	and    eax,0x1
   140010eb1:	lea    eax,[rax+rdx*2]
   140010eb4:	mov    r14d,eax
   140010eb7:	shr    r14d,1
   140010eba:	dec    r14d
   140010ebd:	movzx  r13d,BYTE PTR [rax+rbx*1+0x82a]
   140010ec6:	mov    ecx,DWORD PTR [rdi+0x14]
   140010ec9:	mov    r15d,DWORD PTR [rbx+rax*4+0x508]
   140010ed1:	cmp    r13d,ecx
   140010ed4:	ja     0x140010ee2
   140010ed6:	sub    ecx,r13d
   140010ed9:	shl    r15d,cl
   140010edc:	or     DWORD PTR [rdi+0x10],r15d
   140010ee0:	jmp    0x140010f0a
   140010ee2:	sub    r13d,ecx
   140010ee5:	mov    eax,r15d
   140010ee8:	mov    ecx,r13d
   140010eeb:	shr    eax,cl
   140010eed:	mov    rcx,rdi
   140010ef0:	or     DWORD PTR [rdi+0x10],eax
   140010ef3:	mov    edx,DWORD PTR [rdi+0x10]
   140010ef6:	call   0x140034800
   140010efb:	mov    ecx,0x20
   140010f00:	sub    ecx,r13d
   140010f03:	shl    r15d,cl
   140010f06:	mov    DWORD PTR [rdi+0x10],r15d
   140010f0a:	mov    DWORD PTR [rdi+0x14],ecx
   140010f0d:	cmp    r14d,0x4
   140010f11:	jb     0x140010fdf
   140010f17:	mov    r13d,r12d
   140010f1a:	and    r13d,0xf
   140010f1e:	cmp    r14d,0x4
   140010f22:	jbe    0x140010f81
   140010f24:	mov    ecx,r14d
   140010f27:	shr    r12d,0x4
   140010f2b:	mov    r15d,0x1
   140010f31:	add    r14d,0xfffffffc
   140010f35:	shl    r15d,cl
   140010f38:	mov    ecx,DWORD PTR [rdi+0x14]
   140010f3b:	dec    r15d
   140010f3e:	shr    r15d,0x4
   140010f42:	and    r15d,r12d
   140010f45:	cmp    r14d,ecx
   140010f48:	ja     0x140010f56
   140010f4a:	sub    ecx,r14d
   140010f4d:	shl    r15d,cl
   140010f50:	or     DWORD PTR [rdi+0x10],r15d
   140010f54:	jmp    0x140010f7e
   140010f56:	sub    r14d,ecx
   140010f59:	mov    eax,r15d
   140010f5c:	mov    ecx,r14d
   140010f5f:	shr    eax,cl
   140010f61:	mov    rcx,rdi
   140010f64:	or     DWORD PTR [rdi+0x10],eax
   140010f67:	mov    edx,DWORD PTR [rdi+0x10]
   140010f6a:	call   0x140034800
   140010f6f:	mov    ecx,0x20
   140010f74:	sub    ecx,r14d
   140010f77:	shl    r15d,cl
   140010f7a:	mov    DWORD PTR [rdi+0x10],r15d
   140010f7e:	mov    DWORD PTR [rdi+0x14],ecx
   140010f81:	movzx  r15d,BYTE PTR [r13+rbx*1+0x86a]
   140010f8a:	mov    ecx,DWORD PTR [rdi+0x14]
   140010f8d:	mov    r14d,DWORD PTR [rbx+r13*4+0x608]
   140010f95:	mov    eax,r13d
   140010f98:	cmp    r15d,ecx
   140010f9b:	ja     0x140010faf
   140010f9d:	sub    ecx,r15d
   140010fa0:	shl    r14d,cl
   140010fa3:	or     DWORD PTR [rdi+0x10],r14d
   140010fa7:	mov    DWORD PTR [rdi+0x14],ecx
   140010faa:	jmp    0x140010d78
   140010faf:	sub    r15d,ecx
   140010fb2:	mov    eax,r14d
   140010fb5:	mov    ecx,r15d
   140010fb8:	shr    eax,cl
   140010fba:	mov    rcx,rdi
   140010fbd:	or     DWORD PTR [rdi+0x10],eax
   140010fc0:	mov    edx,DWORD PTR [rdi+0x10]
   140010fc3:	call   0x140034800
   140010fc8:	mov    ecx,0x20
   140010fcd:	sub    ecx,r15d
   140010fd0:	shl    r14d,cl
   140010fd3:	mov    DWORD PTR [rdi+0x10],r14d
   140010fd7:	mov    DWORD PTR [rdi+0x14],ecx
   140010fda:	jmp    0x140010d78
   140010fdf:	test   r14d,r14d
   140010fe2:	je     0x140010d78
   140010fe8:	mov    ecx,r14d
   140010feb:	mov    r15d,0x1
   140010ff1:	shl    r15d,cl
   140010ff4:	mov    ecx,DWORD PTR [rdi+0x14]
   140010ff7:	dec    r15d
   140010ffa:	and    r15d,r12d
   140010ffd:	cmp    r14d,ecx
   140011000:	ja     0x140011014
   140011002:	sub    ecx,r14d
   140011005:	shl    r15d,cl
   140011008:	or     DWORD PTR [rdi+0x10],r15d
   14001100c:	mov    DWORD PTR [rdi+0x14],ecx
   14001100f:	jmp    0x140010d78
   140011014:	sub    r14d,ecx
   140011017:	mov    eax,r15d
   14001101a:	mov    ecx,r14d
   14001101d:	shr    eax,cl
   14001101f:	mov    rcx,rdi
   140011022:	or     DWORD PTR [rdi+0x10],eax
   140011025:	mov    edx,DWORD PTR [rdi+0x10]
   140011028:	call   0x140034800
   14001102d:	mov    ecx,0x20
   140011032:	sub    ecx,r14d
   140011035:	shl    r15d,cl
   140011038:	mov    DWORD PTR [rdi+0x10],r15d
   14001103c:	mov    DWORD PTR [rdi+0x14],ecx
   14001103f:	jmp    0x140010d78
   140011044:	cmp    al,0x2
   140011046:	jne    0x140011064
   140011048:	movzx  edx,BYTE PTR [rbx+0x7f9]
   14001104f:	lea    rcx,[rbx+0x18]
   140011053:	mov    r8d,DWORD PTR [rbx+0x444]
   14001105a:	call   0x140034958
   14001105f:	jmp    0x1400111dd
   140011064:	cmp    al,0x3
   140011066:	jne    0x1400110f8
   14001106c:	mov    eax,DWORD PTR [rsi+0x4]
   14001106f:	lea    r14,[rbx+0x18]
   140011073:	add    eax,0x102
   140011078:	mov    rcx,r14
   14001107b:	movzx  edx,BYTE PTR [rax+rbx*1+0x6f8]
   140011083:	mov    r8d,DWORD PTR [rbx+rax*4+0x40]
   140011088:	call   0x140034958
   14001108d:	movzx  edx,WORD PTR [rsi+0x2]
   140011091:	cmp    edx,0x8
   140011094:	jae    0x14001109a
   140011096:	xor    edi,edi
   140011098:	jmp    0x1400110b2
   14001109a:	bsr    eax,edx
   14001109d:	lea    ecx,[rax-0x2]
   1400110a0:	shr    edx,cl
   1400110a2:	and    edx,0x3
   1400110a5:	lea    edx,[rdx+rax*4]
   1400110a8:	add    edx,0xfffffffc
   1400110ab:	mov    edi,edx
   1400110ad:	shr    edi,0x2
   1400110b0:	dec    edi
   1400110b2:	mov    eax,edx
   1400110b4:	mov    rcx,r14
   1400110b7:	movzx  edx,BYTE PTR [rdx+rbx*1+0x87a]
   1400110bf:	mov    r8d,DWORD PTR [rbx+rax*4+0x648]
   1400110c7:	call   0x140034958
   1400110cc:	test   edi,edi
   1400110ce:	je     0x140010d78
   1400110d4:	movzx  eax,WORD PTR [rsi+0x2]
   1400110d8:	mov    ecx,edi
   1400110da:	mov    r8d,0x1
   1400110e0:	mov    edx,edi
   1400110e2:	shl    r8d,cl
   1400110e5:	mov    rcx,r14
   1400110e8:	dec    r8d
   1400110eb:	and    r8d,eax
   1400110ee:	call   0x140034958
   1400110f3:	jmp    0x140010d78
   1400110f8:	cmp    al,0x4
   1400110fa:	jne    0x140011159
   1400110fc:	lea    rcx,[rbx+0x18]
   140011100:	mov    BYTE PTR [rbp-0x40],al
   140011103:	call   0x1400346a8
   140011108:	mov    ecx,DWORD PTR [rbx+0x38]
   14001110b:	lea    rdx,[rbp-0x30]
   14001110f:	mov    DWORD PTR [rbp-0x3c],ecx
   140011112:	lea    rcx,[rbx+0x8a8]
   140011119:	movsd  xmm0,QWORD PTR [rbp-0x40]
   14001111e:	movsd  QWORD PTR [rbp-0x30],xmm0
   140011123:	mov    DWORD PTR [rbp-0x28],eax
   140011126:	call   0x140010c00
   14001112b:	cmp    BYTE PTR [rbx+0x8c8],0x0
   140011132:	je     0x1400111dd
   140011138:	cmp    DWORD PTR [rbx+0x10],0x1
   14001113c:	jbe    0x1400111dd
   140011142:	mov    rdx,rbx
   140011145:	mov    rcx,r14
   140011148:	call   0x14001133c
   14001114d:	mov    BYTE PTR [rbx+0x8c8],0x0
   140011154:	jmp    0x1400111dd
   140011159:	cmp    al,0x5
   14001115b:	jne    0x14001118e
   14001115d:	lea    rcx,[rbx+0x18]
   140011161:	mov    BYTE PTR [rbp-0x20],al
   140011164:	call   0x1400346a8
   140011169:	mov    ecx,DWORD PTR [rbx+0x38]
   14001116c:	lea    rdx,[rbp-0x10]
   140011170:	mov    DWORD PTR [rbp-0x1c],ecx
   140011173:	lea    rcx,[rbx+0x8a8]
   14001117a:	movsd  xmm0,QWORD PTR [rbp-0x20]
   14001117f:	movsd  QWORD PTR [rbp-0x10],xmm0
   140011184:	mov    DWORD PTR [rbp-0x8],eax
   140011187:	call   0x140010c00
   14001118c:	jmp    0x1400111dd
   14001118e:	cmp    al,0x6
   140011190:	jne    0x1400111dd
   140011192:	movzx  edx,BYTE PTR [rbx+0x7f8]
   140011199:	lea    rcx,[rbx+0x18]
   14001119d:	mov    r8d,DWORD PTR [rbx+0x440]
   1400111a4:	call   0x140034958
   1400111a9:	mov    r15,QWORD PTR [rbp+0x48]
   1400111ad:	lea    rdi,[rsi+0x8]
   1400111b1:	jmp    0x1400111d1
   1400111b3:	cmp    BYTE PTR [rdi],0x7
   1400111b6:	jne    0x1400111d6
   1400111b8:	movzx  edx,WORD PTR [rdi+0x2]
   1400111bc:	lea    rcx,[rbx+0x18]
   1400111c0:	mov    r8d,DWORD PTR [rdi+0x4]
   1400111c4:	add    rdi,0x8
   1400111c8:	add    rsi,0x8
   1400111cc:	call   0x140034958
   1400111d1:	cmp    rdi,r15
   1400111d4:	jb     0x1400111b3
   1400111d6:	mov    rdi,r15
   1400111d9:	mov    r14,QWORD PTR [rbp+0x40]
   1400111dd:	add    rsi,0x8
   1400111e1:	cmp    rsi,rdi
   1400111e4:	jb     0x140010d4b
   1400111ea:	mov    rbx,QWORD PTR [rsp+0xb0]
   1400111f2:	add    rsp,0x60
   1400111f6:	pop    r15
   1400111f8:	pop    r14
   1400111fa:	pop    r13
   1400111fc:	pop    r12
   1400111fe:	pop    rdi
   1400111ff:	pop    rsi
   140011200:	pop    rbp
   140011201:	ret    
   140011202:	int3   
   140011203:	int3   
   140011204:	mov    QWORD PTR [rsp+0x8],rbx
   140011209:	push   rdi
   14001120a:	sub    rsp,0x20
   14001120e:	xor    ebx,ebx
   140011210:	mov    rdi,rcx
   140011213:	cmp    DWORD PTR [rcx+0x8],ebx
   140011216:	jbe    0x140011236
   140011218:	mov    rcx,QWORD PTR [rdi]
   14001121b:	mov    eax,ebx
   14001121d:	imul   rdx,rax,0x8d0
   140011224:	add    rdx,rcx
   140011227:	mov    rcx,QWORD PTR [rcx]
   14001122a:	call   0x140010d00
   14001122f:	inc    ebx
   140011231:	cmp    ebx,DWORD PTR [rdi+0x8]
   140011234:	jb     0x140011218
   140011236:	mov    rbx,QWORD PTR [rsp+0x30]
   14001123b:	add    rsp,0x20
   14001123f:	pop    rdi
   140011240:	ret    
   140011241:	int3   
   140011242:	int3   
   140011243:	int3   
   140011244:	mov    QWORD PTR [rsp+0x8],rbx
   140011249:	mov    QWORD PTR [rsp+0x10],rbp
   14001124e:	mov    QWORD PTR [rsp+0x18],rsi
   140011253:	push   rdi
   140011254:	push   r14
   140011256:	push   r15
   140011258:	sub    rsp,0x20
   14001125c:	mov    r15d,edx
   14001125f:	mov    esi,edx
   140011261:	shr    r15d,0x8
   140011265:	mov    rbx,rcx
   140011268:	mov    edi,0x1
   14001126d:	test   r15d,r15d
   140011270:	je     0x140011282
   140011272:	lea    ecx,[rdi+0x7]
   140011275:	add    ecx,0x8
   140011278:	mov    eax,edx
   14001127a:	shr    eax,cl
   14001127c:	inc    edi
   14001127e:	test   eax,eax
   140011280:	jne    0x140011275
   140011282:	lea    r14d,[rdi-0x1]
   140011286:	shl    r14b,0x3
   14001128a:	neg    r9b
   14001128d:	sbb    al,al
   14001128f:	and    al,0x80
   140011291:	or     r14b,al
   140011294:	neg    BYTE PTR [rsp+0x60]
   140011298:	sbb    al,al
   14001129a:	add    rbx,0x20
   14001129e:	and    al,0x40
   1400112a0:	dec    r8b
   1400112a3:	or     r14b,al
   1400112a6:	or     r14b,r8b
   1400112a9:	mov    eax,DWORD PTR [rbx+0x24]
   1400112ac:	cmp    DWORD PTR [rbx+0x20],eax
   1400112af:	jne    0x1400112b9
   1400112b1:	mov    rcx,rbx
   1400112b4:	call   0x140034744
   1400112b9:	mov    ecx,DWORD PTR [rbx+0x20]
   1400112bc:	mov    ebp,esi
   1400112be:	mov    rax,QWORD PTR [rbx+0x18]
   1400112c2:	shr    ebp,0x10
   1400112c5:	xor    bpl,r15b
   1400112c8:	xor    bpl,sil
   1400112cb:	mov    BYTE PTR [rcx+rax*1],r14b
   1400112cf:	xor    bpl,r14b
   1400112d2:	inc    DWORD PTR [rbx+0x20]
   1400112d5:	xor    bpl,0x5a
   1400112d9:	mov    eax,DWORD PTR [rbx+0x24]
   1400112dc:	cmp    DWORD PTR [rbx+0x20],eax
   1400112df:	jne    0x1400112e9
   1400112e1:	mov    rcx,rbx
   1400112e4:	call   0x140034744
   1400112e9:	mov    ecx,DWORD PTR [rbx+0x20]
   1400112ec:	mov    rax,QWORD PTR [rbx+0x18]
   1400112f0:	mov    BYTE PTR [rcx+rax*1],bpl
   1400112f4:	inc    DWORD PTR [rbx+0x20]
   1400112f7:	jmp    0x14001131c
   1400112f9:	mov    eax,DWORD PTR [rbx+0x24]
   1400112fc:	dec    edi
   1400112fe:	cmp    DWORD PTR [rbx+0x20],eax
   140011301:	jne    0x14001130b
   140011303:	mov    rcx,rbx
   140011306:	call   0x140034744
   14001130b:	mov    ecx,DWORD PTR [rbx+0x20]
   14001130e:	mov    rax,QWORD PTR [rbx+0x18]
   140011312:	mov    BYTE PTR [rcx+rax*1],sil
   140011316:	inc    DWORD PTR [rbx+0x20]
   140011319:	shr    esi,0x8
   14001131c:	test   edi,edi
   14001131e:	jne    0x1400112f9
   140011320:	mov    rbx,QWORD PTR [rsp+0x40]
   140011325:	mov    rbp,QWORD PTR [rsp+0x48]
   14001132a:	mov    rsi,QWORD PTR [rsp+0x50]
   14001132f:	add    rsp,0x20
   140011333:	pop    r15
   140011335:	pop    r14
   140011337:	pop    rdi
   140011338:	ret    
   140011339:	int3   
   14001133a:	int3   
   14001133b:	int3   
   14001133c:	mov    rax,rsp
   14001133f:	mov    QWORD PTR [rax+0x8],rbx
   140011343:	mov    QWORD PTR [rax+0x18],rsi
   140011347:	mov    QWORD PTR [rax+0x20],rdi
   14001134b:	push   rbp
   14001134c:	push   r12
   14001134e:	push   r13
   140011350:	push   r14
   140011352:	push   r15
   140011354:	lea    rbp,[rax-0x5f]
   140011358:	sub    rsp,0xe0
   14001135f:	mov    rax,QWORD PTR [rip+0x70b7a]        # 0x140081ee0
   140011366:	xor    rax,rsp
   140011369:	mov    QWORD PTR [rbp+0x2f],rax
   14001136d:	mov    r14,rdx
   140011370:	lea    rdi,[rdx+0x6f8]
   140011377:	xor    edx,edx
   140011379:	lea    rcx,[rsp+0x20]
   14001137e:	lea    r8d,[rdx+0x50]
   140011382:	call   0x140058f40
   140011387:	xor    r8d,r8d
   14001138a:	mov    r10d,0x1ae
   140011390:	mov    r11d,0x87
   140011396:	lea    r12d,[r8+0x1]
   14001139a:	cmp    r8d,0x1ac
   1400113a1:	jge    0x140011474
   1400113a7:	movsxd rax,r8d
   1400113aa:	mov    dl,BYTE PTR [rax+rdi*1]
   1400113ad:	test   dl,dl
   1400113af:	jne    0x140011404
   1400113b1:	lea    eax,[r8+0x1]
   1400113b5:	movsxd rcx,eax
   1400113b8:	cmp    BYTE PTR [rcx+rdi*1],dl
   1400113bb:	jne    0x140011404
   1400113bd:	lea    eax,[r8+0x2]
   1400113c1:	movsxd rcx,eax
   1400113c4:	cmp    BYTE PTR [rcx+rdi*1],dl
   1400113c7:	jne    0x140011404
   1400113c9:	add    r8d,0x3
   1400113cd:	xor    ecx,ecx
   1400113cf:	movsxd rax,r8d
   1400113d2:	cmp    rax,r10
   1400113d5:	jge    0x1400113fb
   1400113d7:	cmp    BYTE PTR [rax+rdi*1],0x0
   1400113db:	jne    0x1400113f0
   1400113dd:	cmp    ecx,r11d
   1400113e0:	jge    0x1400113f0
   1400113e2:	add    ecx,r12d
   1400113e5:	add    r8d,r12d
   1400113e8:	add    rax,r12
   1400113eb:	cmp    rax,r10
   1400113ee:	jl     0x1400113d7
   1400113f0:	cmp    ecx,0x7
   1400113f3:	jle    0x1400113fb
   1400113f5:	add    DWORD PTR [rbp-0x3d],r12d
   1400113f9:	jmp    0x1400113ff
   1400113fb:	add    DWORD PTR [rbp-0x41],r12d
   1400113ff:	sub    r8d,r12d
   140011402:	jmp    0x140011480
   140011404:	test   r8d,r8d
   140011407:	jle    0x140011474
   140011409:	lea    eax,[r8-0x1]
   14001140d:	movsxd rcx,eax
   140011410:	cmp    dl,BYTE PTR [rcx+rdi*1]
   140011413:	jne    0x140011474
   140011415:	lea    eax,[r8+0x1]
   140011419:	movsxd rcx,eax
   14001141c:	cmp    dl,BYTE PTR [rcx+rdi*1]
   14001141f:	jne    0x140011474
   140011421:	lea    eax,[r8+0x2]
   140011425:	movsxd rcx,eax
   140011428:	cmp    dl,BYTE PTR [rcx+rdi*1]
   14001142b:	jne    0x140011474
   14001142d:	add    r8d,0x3
   140011431:	xor    edx,edx
   140011433:	movsxd rax,r8d
   140011436:	cmp    rax,r10
   140011439:	jge    0x14001146e
   14001143b:	mov    r9,rdi
   14001143e:	lea    rcx,[rax+rdi*1]
   140011442:	neg    r9
   140011445:	mov    al,BYTE PTR [rcx-0x1]
   140011448:	cmp    BYTE PTR [rcx],al
   14001144a:	jne    0x140011463
   14001144c:	cmp    edx,r11d
   14001144f:	jge    0x140011463
   140011451:	add    rcx,r12
   140011454:	add    edx,r12d
   140011457:	add    r8d,r12d
   14001145a:	lea    rax,[r9+rcx*1]
   14001145e:	cmp    rax,r10
   140011461:	jl     0x140011445
   140011463:	cmp    edx,0x7
   140011466:	jle    0x14001146e
   140011468:	add    DWORD PTR [rbp-0x45],r12d
   14001146c:	jmp    0x1400113ff
   14001146e:	add    DWORD PTR [rbp-0x49],r12d
   140011472:	jmp    0x1400113ff
   140011474:	movsxd rax,r8d
   140011477:	movzx  ecx,BYTE PTR [rax+rdi*1]
   14001147b:	add    DWORD PTR [rsp+rcx*4+0x20],r12d
   140011480:	add    r8d,r12d
   140011483:	cmp    r8d,r10d
   140011486:	jl     0x14001139a
   14001148c:	lea    r9,[rbp-0x39]
   140011490:	mov    ecx,0x14
   140011495:	lea    r8,[rbp+0x17]
   140011499:	lea    rdx,[rsp+0x20]
   14001149e:	call   0x140026024
   1400114a3:	xor    ebx,ebx
   1400114a5:	xor    r15d,r15d
   1400114a8:	add    r14,0x18
   1400114ac:	xor    r13d,r13d
   1400114af:	xor    esi,esi
   1400114b1:	mov    ecx,ebx
   1400114b3:	cmp    ebx,0x14
   1400114b6:	jae    0x140011511
   1400114b8:	movsxd rax,ebx
   1400114bb:	lea    rdx,[rbp+0x17]
   1400114bf:	add    rdx,rax
   1400114c2:	cmp    BYTE PTR [rdx+rsi*1],0x0
   1400114c6:	jne    0x1400114dc
   1400114c8:	cmp    rsi,0x11
   1400114cc:	jge    0x1400114dc
   1400114ce:	add    r13d,r12d
   1400114d1:	add    rsi,r12
   1400114d4:	add    ecx,r12d
   1400114d7:	cmp    ecx,0x14
   1400114da:	jb     0x1400114c2
   1400114dc:	cmp    rsi,0x3
   1400114e0:	jl     0x140011511
   1400114e2:	mov    edx,0x4
   1400114e7:	mov    rcx,r14
   1400114ea:	lea    r8d,[rdx+0xb]
   1400114ee:	call   0x140034958
   1400114f3:	lea    r8d,[r13-0x2]
   1400114f7:	mov    edx,0x4
   1400114fc:	mov    rcx,r14
   1400114ff:	call   0x140034958
   140011504:	dec    ebx
   140011506:	dec    r15
   140011509:	add    ebx,r13d
   14001150c:	add    r15,rsi
   14001150f:	jmp    0x140011540
   140011511:	mov    al,BYTE PTR [rbp+r15*1+0x17]
   140011516:	mov    edx,0x4
   14001151b:	mov    rcx,r14
   14001151e:	cmp    al,0xf
   140011520:	jne    0x140011537
   140011522:	lea    r8d,[rdx+0xb]
   140011526:	call   0x140034958
   14001152b:	xor    r8d,r8d
   14001152e:	mov    rcx,r14
   140011531:	lea    edx,[r8+0x4]
   140011535:	jmp    0x14001153b
   140011537:	movzx  r8d,al
   14001153b:	call   0x140034958
   140011540:	add    ebx,r12d
   140011543:	add    r15,r12
   140011546:	cmp    ebx,0x14
   140011549:	jb     0x1400114ac
   14001154f:	xor    ebx,ebx
   140011551:	mov    r15d,0x1ae
   140011557:	lea    r13d,[rbx+0x7]
   14001155b:	cmp    ebx,0x1ac
   140011561:	jge    0x140011676
   140011567:	movsxd rax,ebx
   14001156a:	mov    dl,BYTE PTR [rax+rdi*1]
   14001156d:	test   dl,dl
   14001156f:	jne    0x1400115fa
   140011575:	lea    eax,[rbx+0x1]
   140011578:	movsxd rcx,eax
   14001157b:	cmp    BYTE PTR [rcx+rdi*1],dl
   14001157e:	jne    0x1400115fa
   140011580:	lea    eax,[rbx+0x2]
   140011583:	movsxd rcx,eax
   140011586:	cmp    BYTE PTR [rcx+rdi*1],dl
   140011589:	jne    0x1400115fa
   14001158b:	add    ebx,0x3
   14001158e:	xor    esi,esi
   140011590:	movsxd rax,ebx
   140011593:	cmp    rax,r15
   140011596:	jge    0x1400115d2
   140011598:	cmp    BYTE PTR [rax+rdi*1],0x0
   14001159c:	jne    0x1400115b4
   14001159e:	cmp    esi,0x87
   1400115a4:	jge    0x1400115b4
   1400115a6:	add    esi,r12d
   1400115a9:	add    ebx,r12d
   1400115ac:	add    rax,r12
   1400115af:	cmp    rax,r15
   1400115b2:	jl     0x140011598
   1400115b4:	cmp    esi,r13d
   1400115b7:	jle    0x1400115d2
   1400115b9:	movzx  edx,BYTE PTR [rbp+0x2a]
   1400115bd:	mov    r8d,DWORD PTR [rbp+0x13]
   1400115c1:	mov    rcx,r14
   1400115c4:	call   0x140034958
   1400115c9:	lea    r8d,[rsi-0x8]
   1400115cd:	mov    edx,r13d
   1400115d0:	jmp    0x1400115ea
   1400115d2:	movzx  edx,BYTE PTR [rbp+0x29]
   1400115d6:	mov    r8d,DWORD PTR [rbp+0xf]
   1400115da:	mov    rcx,r14
   1400115dd:	call   0x140034958
   1400115e2:	mov    r8d,esi
   1400115e5:	mov    edx,0x3
   1400115ea:	mov    rcx,r14
   1400115ed:	call   0x140034958
   1400115f2:	sub    ebx,r12d
   1400115f5:	jmp    0x14001168f
   1400115fa:	test   ebx,ebx
   1400115fc:	jle    0x140011676
   1400115fe:	lea    eax,[rbx-0x1]
   140011601:	movsxd rcx,eax
   140011604:	cmp    dl,BYTE PTR [rcx+rdi*1]
   140011607:	jne    0x140011676
   140011609:	lea    eax,[rbx+0x1]
   14001160c:	movsxd rcx,eax
   14001160f:	cmp    dl,BYTE PTR [rcx+rdi*1]
   140011612:	jne    0x140011676
   140011614:	lea    eax,[rbx+0x2]
   140011617:	movsxd rcx,eax
   14001161a:	cmp    dl,BYTE PTR [rcx+rdi*1]
   14001161d:	jne    0x140011676
   14001161f:	add    ebx,0x3
   140011622:	xor    esi,esi
   140011624:	movsxd rax,ebx
   140011627:	cmp    rax,r15
   14001162a:	jge    0x140011669
   14001162c:	mov    rdx,rdi
   14001162f:	lea    rcx,[rax+rdi*1]
   140011633:	neg    rdx
   140011636:	mov    al,BYTE PTR [rcx-0x1]
   140011639:	cmp    BYTE PTR [rcx],al
   14001163b:	jne    0x140011657
   14001163d:	cmp    esi,0x87
   140011643:	jge    0x140011657
   140011645:	add    rcx,r12
   140011648:	add    esi,r12d
   14001164b:	add    ebx,r12d
   14001164e:	lea    rax,[rcx+rdx*1]
   140011652:	cmp    rax,r15
   140011655:	jl     0x140011636
   140011657:	cmp    esi,r13d
   14001165a:	jle    0x140011669
   14001165c:	movzx  edx,BYTE PTR [rbp+0x28]
   140011660:	mov    r8d,DWORD PTR [rbp+0xb]
   140011664:	jmp    0x1400115c1
   140011669:	movzx  edx,BYTE PTR [rbp+0x27]
   14001166d:	mov    r8d,DWORD PTR [rbp+0x7]
   140011671:	jmp    0x1400115da
   140011676:	movsxd rax,ebx
   140011679:	movzx  ecx,BYTE PTR [rax+rdi*1]
   14001167d:	movzx  edx,BYTE PTR [rbp+rcx*1+0x17]
   140011682:	mov    r8d,DWORD PTR [rbp+rcx*4-0x39]
   140011687:	mov    rcx,r14
   14001168a:	call   0x140034958
   14001168f:	add    ebx,r12d
   140011692:	cmp    ebx,r15d
   140011695:	jl     0x14001155b
   14001169b:	mov    rcx,QWORD PTR [rbp+0x2f]
   14001169f:	xor    rcx,rsp
   1400116a2:	call   0x140055f90
   1400116a7:	lea    r11,[rsp+0xe0]
   1400116af:	mov    rbx,QWORD PTR [r11+0x30]
   1400116b3:	mov    rsi,QWORD PTR [r11+0x40]
   1400116b7:	mov    rdi,QWORD PTR [r11+0x48]
   1400116bb:	mov    rsp,r11
   1400116be:	pop    r15
   1400116c0:	pop    r14
   1400116c2:	pop    r13
   1400116c4:	pop    r12
   1400116c6:	pop    rbp
   1400116c7:	ret    
   1400116c8:	mov    rax,rsp
   1400116cb:	mov    QWORD PTR [rax+0x8],rcx
   1400116cf:	push   rdi
   1400116d0:	sub    rsp,0x30
   1400116d4:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   1400116dc:	mov    QWORD PTR [rax+0x10],rbx
   1400116e0:	mov    QWORD PTR [rax+0x18],rsi
   1400116e4:	mov    rbx,rdx
   1400116e7:	mov    rsi,rcx
   1400116ea:	lea    rdi,[rcx+0x1d0]
   1400116f1:	mov    rcx,rdi
   1400116f4:	call   0x140034600
   1400116f9:	nop
   1400116fa:	mov    QWORD PTR [rsi],rbx
   1400116fd:	xor    eax,eax
   1400116ff:	mov    QWORD PTR [rsi+0x1c8],rax
   140011706:	mov    QWORD PTR [rsi+0x10],rax
   14001170a:	mov    DWORD PTR [rsi+0x18],eax
   14001170d:	mov    QWORD PTR [rsi+0x20],rax
   140011711:	mov    DWORD PTR [rsi+0x28],eax
   140011714:	mov    DWORD PTR [rsi+0x2c],0x1
   14001171b:	call   0x140046ea4
   140011720:	mov    QWORD PTR [rsi+0x8],rax
   140011724:	mov    r9d,0x40000
   14001172a:	mov    r8,QWORD PTR [rsi]
   14001172d:	lea    rdx,[rip+0xfffffffffffff200]        # 0x140010934
   140011734:	mov    rcx,rdi
   140011737:	call   0x140034948
   14001173c:	xor    edx,edx
   14001173e:	mov    rcx,rsi
   140011741:	call   0x140011dd0
   140011746:	nop
   140011747:	mov    rax,rsi
   14001174a:	mov    rbx,QWORD PTR [rsp+0x48]
   14001174f:	mov    rsi,QWORD PTR [rsp+0x50]
   140011754:	add    rsp,0x30
   140011758:	pop    rdi
   140011759:	ret    
   14001175a:	int3   
   14001175b:	int3   
   14001175c:	rex push rbx
   14001175e:	sub    rsp,0x20
   140011762:	mov    rbx,rcx
   140011765:	add    rcx,0x18
   140011769:	call   0x140034600
   14001176e:	xor    eax,eax
   140011770:	mov    QWORD PTR [rbx+0x828],rax
   140011777:	mov    QWORD PTR [rbx+0x830],rax
   14001177e:	mov    QWORD PTR [rbx+0x838],rax
   140011785:	mov    QWORD PTR [rbx+0x840],rax
   14001178c:	mov    rax,rbx
   14001178f:	add    rsp,0x20
   140011793:	pop    rbx
   140011794:	ret    
   140011795:	int3   
   140011796:	int3   
   140011797:	int3   
   140011798:	rex push rdi
   14001179a:	sub    rsp,0x30
   14001179e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400117a7:	mov    QWORD PTR [rsp+0x40],rbx
   1400117ac:	mov    rdi,rcx
   1400117af:	mov    rcx,QWORD PTR [rcx+0x10]
   1400117b3:	call   0x140055de8
   1400117b8:	nop
   1400117b9:	mov    rcx,QWORD PTR [rdi+0x20]
   1400117bd:	test   rcx,rcx
   1400117c0:	je     0x1400117ef
   1400117c2:	lea    rbx,[rcx-0x8]
   1400117c6:	lea    r9,[rip+0x43]        # 0x140011810
   1400117cd:	mov    r8,QWORD PTR [rbx]
   1400117d0:	mov    edx,0x9e8
   1400117d5:	call   0x140055cdc
   1400117da:	nop
   1400117db:	imul   rdx,QWORD PTR [rbx],0x9e8
   1400117e2:	add    rdx,0x8
   1400117e6:	mov    rcx,rbx
   1400117e9:	call   0x140055df8
   1400117ee:	nop
   1400117ef:	mov    rcx,QWORD PTR [rdi+0x8]
   1400117f3:	call   0x140047010
   1400117f8:	nop
   1400117f9:	lea    rcx,[rdi+0x1d0]
   140011800:	mov    rbx,QWORD PTR [rsp+0x40]
   140011805:	add    rsp,0x30
   140011809:	pop    rdi
   14001180a:	jmp    0x14003461c
   14001180f:	int3   
   140011810:	rex push rbx
   140011812:	sub    rsp,0x20
   140011816:	mov    rbx,rcx
   140011819:	mov    rcx,QWORD PTR [rcx+0x828]
   140011820:	test   rcx,rcx
   140011823:	je     0x14001182a
   140011825:	call   0x14005a938
   14001182a:	lea    rcx,[rbx+0x18]
   14001182e:	add    rsp,0x20
   140011832:	pop    rbx
   140011833:	jmp    0x14003461c
   140011838:	mov    QWORD PTR [rsp+0x8],rbx
   14001183d:	mov    QWORD PTR [rsp+0x10],rsi
   140011842:	push   rdi
   140011843:	sub    rsp,0x20
   140011847:	add    QWORD PTR [rcx+0x8],rdx
   14001184b:	mov    rbx,rcx
   14001184e:	mov    rax,QWORD PTR [rcx+0x8]
   140011852:	cmp    rax,QWORD PTR [rcx+0x10]
   140011856:	jbe    0x1400118ca
   140011858:	mov    r8,QWORD PTR [rcx+0x18]
   14001185c:	test   r8,r8
   14001185f:	je     0x140011885
   140011861:	cmp    rax,r8
   140011864:	jbe    0x140011885
   140011866:	lea    rdx,[rip+0x5bbc3]        # 0x14006d430
   14001186d:	lea    rcx,[rip+0x82fec]        # 0x140094860
   140011874:	call   0x14001bc8c
   140011879:	lea    rcx,[rip+0x82fe0]        # 0x140094860
   140011880:	call   0x14001bd24
   140011885:	mov    rdx,QWORD PTR [rbx+0x10]
   140011889:	mov    rcx,QWORD PTR [rbx]
   14001188c:	mov    rax,rdx
   14001188f:	shr    rax,0x2
   140011893:	lea    rdi,[rdx+0x20]
   140011897:	add    rdi,rax
   14001189a:	cmp    QWORD PTR [rbx+0x8],rdi
   14001189e:	cmova  rdi,QWORD PTR [rbx+0x8]
   1400118a3:	mov    rdx,rdi
   1400118a6:	shl    rdx,0x3
   1400118aa:	call   0x14005a940
   1400118af:	mov    rsi,rax
   1400118b2:	test   rax,rax
   1400118b5:	jne    0x1400118c3
   1400118b7:	lea    rcx,[rip+0x82fa2]        # 0x140094860
   1400118be:	call   0x14001bd24
   1400118c3:	mov    QWORD PTR [rbx],rsi
   1400118c6:	mov    QWORD PTR [rbx+0x10],rdi
   1400118ca:	mov    rbx,QWORD PTR [rsp+0x30]
   1400118cf:	mov    rsi,QWORD PTR [rsp+0x38]
   1400118d4:	add    rsp,0x20
   1400118d8:	pop    rdi
   1400118d9:	ret    
   1400118da:	int3   
   1400118db:	int3   
   1400118dc:	mov    QWORD PTR [rsp+0x10],rbx
   1400118e1:	mov    QWORD PTR [rsp+0x18],rbp
   1400118e6:	mov    QWORD PTR [rsp+0x20],rsi
   1400118eb:	push   rdi
   1400118ec:	push   r12
   1400118ee:	push   r13
   1400118f0:	push   r14
   1400118f2:	push   r15
   1400118f4:	sub    rsp,0x240
   1400118fb:	mov    rax,QWORD PTR [rip+0x705de]        # 0x140081ee0
   140011902:	xor    rax,rsp
   140011905:	mov    QWORD PTR [rsp+0x230],rax
   14001190d:	xor    esi,esi
   14001190f:	xor    ebp,ebp
   140011911:	mov    rdi,rcx
   140011914:	cmp    DWORD PTR [rcx+0x1c],esi
   140011917:	jbe    0x140011967
   140011919:	mov    r14d,0x4000
   14001191f:	mov    eax,DWORD PTR [rdi+0x1c]
   140011922:	mov    edx,r14d
   140011925:	sub    eax,ebp
   140011927:	cmp    eax,r14d
   14001192a:	cmovb  edx,eax
   14001192d:	mov    eax,esi
   14001192f:	imul   rbx,rax,0x9e8
   140011936:	add    rbx,QWORD PTR [rdi+0x20]
   14001193a:	mov    QWORD PTR [rbx],rdi
   14001193d:	mov    rax,QWORD PTR [rdi+0x10]
   140011941:	mov    DWORD PTR [rbx+0x10],edx
   140011944:	lea    rcx,[rax+rbp*8]
   140011948:	mov    QWORD PTR [rbx+0x8],rcx
   14001194c:	lea    rcx,[rbx+0x18]
   140011950:	call   0x140034734
   140011955:	and    QWORD PTR [rbx+0x830],0x0
   14001195d:	inc    esi
   14001195f:	add    ebp,r14d
   140011962:	cmp    ebp,DWORD PTR [rdi+0x1c]
   140011965:	jb     0x14001191f
   140011967:	cmp    DWORD PTR [rdi+0x2c],0x2
   14001196b:	mov    eax,esi
   14001196d:	setb   r13b
   140011971:	xor    edx,edx
   140011973:	div    DWORD PTR [rdi+0x2c]
   140011976:	mov    DWORD PTR [rsp+0x20],eax
   14001197a:	mov    r15d,eax
   14001197d:	test   edx,edx
   14001197f:	je     0x140011989
   140011981:	inc    r15d
   140011984:	mov    DWORD PTR [rsp+0x20],r15d
   140011989:	xor    r12d,r12d
   14001198c:	xor    ebx,ebx
   14001198e:	test   esi,esi
   140011990:	je     0x140011a0b
   140011992:	mov    eax,r12d
   140011995:	lea    r14,[rsp+0x30]
   14001199a:	shl    rax,0x4
   14001199e:	inc    r12d
   1400119a1:	add    r14,rax
   1400119a4:	mov    eax,ebx
   1400119a6:	imul   rcx,rax,0x9e8
   1400119ad:	mov    eax,esi
   1400119af:	add    rcx,QWORD PTR [rdi+0x20]
   1400119b3:	sub    eax,ebx
   1400119b5:	cmp    r15d,eax
   1400119b8:	mov    QWORD PTR [r14],rcx
   1400119bb:	cmovb  eax,r15d
   1400119bf:	mov    DWORD PTR [r14+0x8],eax
   1400119c3:	cmp    esi,0x1
   1400119c6:	je     0x1400119e2
   1400119c8:	test   r13b,r13b
   1400119cb:	jne    0x1400119e2
   1400119cd:	mov    rcx,QWORD PTR [rdi+0x8]
   1400119d1:	lea    rdx,[rip+0x434]        # 0x140011e0c
   1400119d8:	mov    r8,r14
   1400119db:	call   0x140046dd8
   1400119e0:	jmp    0x140011a04
   1400119e2:	xor    ebp,ebp
   1400119e4:	test   eax,eax
   1400119e6:	je     0x140011a04
   1400119e8:	mov    eax,ebp
   1400119ea:	mov    rcx,rdi
   1400119ed:	imul   rdx,rax,0x9e8
   1400119f4:	add    rdx,QWORD PTR [r14]
   1400119f7:	call   0x140011e4c
   1400119fc:	inc    ebp
   1400119fe:	cmp    ebp,DWORD PTR [r14+0x8]
   140011a02:	jb     0x1400119e8
   140011a04:	add    ebx,r15d
   140011a07:	cmp    ebx,esi
   140011a09:	jb     0x140011992
   140011a0b:	mov    rcx,QWORD PTR [rdi+0x8]
   140011a0f:	call   0x140047214
   140011a14:	xor    r9d,r9d
   140011a17:	mov    r11d,0x80
   140011a1d:	test   esi,esi
   140011a1f:	je     0x140011b2b
   140011a25:	xor    ecx,ecx
   140011a27:	lea    r15d,[r9+0x3]
   140011a2b:	mov    r8,QWORD PTR [rdi+0x20]
   140011a2f:	mov    r10,r15
   140011a32:	lea    rdx,[r8+0x849]
   140011a39:	add    rdx,rcx
   140011a3c:	test   r9d,r9d
   140011a3f:	jne    0x140011aa3
   140011a41:	lea    rax,[rdi+0x30]
   140011a45:	movups xmm0,XMMWORD PTR [rax]
   140011a48:	movups XMMWORD PTR [rdx],xmm0
   140011a4b:	movups xmm1,XMMWORD PTR [rax+0x10]
   140011a4f:	movups XMMWORD PTR [rdx+0x10],xmm1
   140011a53:	movups xmm0,XMMWORD PTR [rax+0x20]
   140011a57:	movups XMMWORD PTR [rdx+0x20],xmm0
   140011a5b:	movups xmm1,XMMWORD PTR [rax+0x30]
   140011a5f:	movups XMMWORD PTR [rdx+0x30],xmm1
   140011a63:	movups xmm0,XMMWORD PTR [rax+0x40]
   140011a67:	movups XMMWORD PTR [rdx+0x40],xmm0
   140011a6b:	movups xmm1,XMMWORD PTR [rax+0x50]
   140011a6f:	movups XMMWORD PTR [rdx+0x50],xmm1
   140011a73:	movups xmm0,XMMWORD PTR [rax+0x60]
   140011a77:	movups XMMWORD PTR [rdx+0x60],xmm0
   140011a7b:	add    rdx,r11
   140011a7e:	movups xmm1,XMMWORD PTR [rax+0x70]
   140011a82:	add    rax,r11
   140011a85:	movups XMMWORD PTR [rdx-0x10],xmm1
   140011a89:	sub    r10,0x1
   140011a8d:	jne    0x140011a45
   140011a8f:	movups xmm0,XMMWORD PTR [rax]
   140011a92:	movups XMMWORD PTR [rdx],xmm0
   140011a95:	mov    eax,DWORD PTR [rax+0x10]
   140011a98:	mov    DWORD PTR [rdx+0x10],eax
   140011a9b:	mov    eax,DWORD PTR [rdi+0x1c4]
   140011aa1:	jmp    0x140011b0b
   140011aa3:	lea    rax,[r8-0x358]
   140011aaa:	add    rax,rcx
   140011aad:	movups xmm0,XMMWORD PTR [rax]
   140011ab0:	movups XMMWORD PTR [rdx],xmm0
   140011ab3:	movups xmm1,XMMWORD PTR [rax+0x10]
   140011ab7:	movups XMMWORD PTR [rdx+0x10],xmm1
   140011abb:	movups xmm0,XMMWORD PTR [rax+0x20]
   140011abf:	movups XMMWORD PTR [rdx+0x20],xmm0
   140011ac3:	movups xmm1,XMMWORD PTR [rax+0x30]
   140011ac7:	movups XMMWORD PTR [rdx+0x30],xmm1
   140011acb:	movups xmm0,XMMWORD PTR [rax+0x40]
   140011acf:	movups XMMWORD PTR [rdx+0x40],xmm0
   140011ad3:	movups xmm1,XMMWORD PTR [rax+0x50]
   140011ad7:	movups XMMWORD PTR [rdx+0x50],xmm1
   140011adb:	movups xmm0,XMMWORD PTR [rax+0x60]
   140011adf:	movups XMMWORD PTR [rdx+0x60],xmm0
   140011ae3:	add    rdx,r11
   140011ae6:	movups xmm1,XMMWORD PTR [rax+0x70]
   140011aea:	add    rax,r11
   140011aed:	movups XMMWORD PTR [rdx-0x10],xmm1
   140011af1:	sub    r10,0x1
   140011af5:	jne    0x140011aad
   140011af7:	movups xmm0,XMMWORD PTR [rax]
   140011afa:	movups XMMWORD PTR [rdx],xmm0
   140011afd:	mov    eax,DWORD PTR [rax+0x10]
   140011b00:	mov    DWORD PTR [rdx+0x10],eax
   140011b03:	mov    eax,DWORD PTR [rcx+r8*1-0x9d8]
   140011b0b:	mov    DWORD PTR [rcx+r8*1+0x9e0],eax
   140011b13:	inc    r9d
   140011b16:	add    rcx,0x9e8
   140011b1d:	cmp    r9d,esi
   140011b20:	jb     0x140011a2b
   140011b26:	mov    r15d,DWORD PTR [rsp+0x20]
   140011b2b:	xor    r12d,r12d
   140011b2e:	xor    ebx,ebx
   140011b30:	test   esi,esi
   140011b32:	je     0x140011bad
   140011b34:	mov    eax,r12d
   140011b37:	lea    r14,[rsp+0x30]
   140011b3c:	shl    rax,0x4
   140011b40:	inc    r12d
   140011b43:	add    r14,rax
   140011b46:	mov    eax,ebx
   140011b48:	imul   rcx,rax,0x9e8
   140011b4f:	mov    eax,esi
   140011b51:	add    rcx,QWORD PTR [rdi+0x20]
   140011b55:	sub    eax,ebx
   140011b57:	cmp    r15d,eax
   140011b5a:	mov    QWORD PTR [r14],rcx
   140011b5d:	cmovb  eax,r15d
   140011b61:	mov    DWORD PTR [r14+0x8],eax
   140011b65:	cmp    esi,0x1
   140011b68:	je     0x140011b84
   140011b6a:	test   r13b,r13b
   140011b6d:	jne    0x140011b84
   140011b6f:	mov    rcx,QWORD PTR [rdi+0x8]
   140011b73:	lea    rdx,[rip+0x7ba]        # 0x140012334
   140011b7a:	mov    r8,r14
   140011b7d:	call   0x140046dd8
   140011b82:	jmp    0x140011ba6
   140011b84:	xor    ebp,ebp
   140011b86:	test   eax,eax
   140011b88:	je     0x140011ba6
   140011b8a:	mov    eax,ebp
   140011b8c:	mov    rcx,rdi
   140011b8f:	imul   rdx,rax,0x9e8
   140011b96:	add    rdx,QWORD PTR [r14]
   140011b99:	call   0x140012374
   140011b9e:	inc    ebp
   140011ba0:	cmp    ebp,DWORD PTR [r14+0x8]
   140011ba4:	jb     0x140011b8a
   140011ba6:	add    ebx,r15d
   140011ba9:	cmp    ebx,esi
   140011bab:	jb     0x140011b34
   140011bad:	mov    rcx,QWORD PTR [rdi+0x8]
   140011bb1:	call   0x140047214
   140011bb6:	test   esi,esi
   140011bb8:	je     0x140011d14
   140011bbe:	mov    r14d,esi
   140011bc1:	xor    ebx,ebx
   140011bc3:	mov    QWORD PTR [rsp+0x20],r14
   140011bc8:	mov    rbp,QWORD PTR [rdi+0x20]
   140011bcc:	xor    r15d,r15d
   140011bcf:	xor    r12d,r12d
   140011bd2:	cmp    QWORD PTR [rbx+rbp*1+0x830],r12
   140011bda:	jbe    0x140011c4c
   140011bdc:	xor    r14d,r14d
   140011bdf:	mov    r13,QWORD PTR [rbx+rbp*1+0x828]
   140011be7:	mov    r8d,DWORD PTR [r13+r14*8+0x4]
   140011bec:	cmp    r8d,r15d
   140011bef:	jbe    0x140011c0d
   140011bf1:	mov    edx,r15d
   140011bf4:	lea    rcx,[rdi+0x1d0]
   140011bfb:	add    rdx,QWORD PTR [rbx+rbp*1+0x30]
   140011c00:	sub    r8d,r15d
   140011c03:	call   0x140034764
   140011c08:	mov    r15d,DWORD PTR [r13+r14*8+0x4]
   140011c0d:	mov    rcx,rdi
   140011c10:	call   0x140011d84
   140011c15:	mov    rcx,QWORD PTR [rdi+0x1c8]
   140011c1c:	test   rcx,rcx
   140011c1f:	je     0x140011c37
   140011c21:	xor    edx,edx
   140011c23:	cmp    BYTE PTR [r13+r14*8+0x0],0x5
   140011c29:	jne    0x140011c32
   140011c2b:	call   0x140006644
   140011c30:	jmp    0x140011c37
   140011c32:	call   0x1400049a0
   140011c37:	inc    r12d
   140011c3a:	mov    r14d,r12d
   140011c3d:	cmp    r14,QWORD PTR [rbx+rbp*1+0x830]
   140011c45:	jb     0x140011bdf
   140011c47:	mov    r14,QWORD PTR [rsp+0x20]
   140011c4c:	mov    r8d,DWORD PTR [rbx+rbp*1+0x38]
   140011c51:	cmp    r15d,r8d
   140011c54:	jae    0x140011c6d
   140011c56:	mov    edx,r15d
   140011c59:	lea    rcx,[rdi+0x1d0]
   140011c60:	add    rdx,QWORD PTR [rbx+rbp*1+0x30]
   140011c65:	sub    r8d,r15d
   140011c68:	call   0x140034764
   140011c6d:	add    rbx,0x9e8
   140011c74:	sub    r14,0x1
   140011c78:	mov    QWORD PTR [rsp+0x20],r14
   140011c7d:	jne    0x140011bc8
   140011c83:	test   esi,esi
   140011c85:	je     0x140011d14
   140011c8b:	mov    r8,QWORD PTR [rdi+0x20]
   140011c8f:	lea    rcx,[rdi+0x30]
   140011c93:	mov    eax,esi
   140011c95:	mov    r9d,0x3
   140011c9b:	imul   rdx,rax,0x9e8
   140011ca2:	lea    rax,[r8-0x358]
   140011ca9:	add    rax,rdx
   140011cac:	lea    r10d,[r9+0x7d]
   140011cb0:	movups xmm0,XMMWORD PTR [rax]
   140011cb3:	movups XMMWORD PTR [rcx],xmm0
   140011cb6:	movups xmm1,XMMWORD PTR [rax+0x10]
   140011cba:	movups XMMWORD PTR [rcx+0x10],xmm1
   140011cbe:	movups xmm0,XMMWORD PTR [rax+0x20]
   140011cc2:	movups XMMWORD PTR [rcx+0x20],xmm0
   140011cc6:	movups xmm1,XMMWORD PTR [rax+0x30]
   140011cca:	movups XMMWORD PTR [rcx+0x30],xmm1
   140011cce:	movups xmm0,XMMWORD PTR [rax+0x40]
   140011cd2:	movups XMMWORD PTR [rcx+0x40],xmm0
   140011cd6:	movups xmm1,XMMWORD PTR [rax+0x50]
   140011cda:	movups XMMWORD PTR [rcx+0x50],xmm1
   140011cde:	movups xmm0,XMMWORD PTR [rax+0x60]
   140011ce2:	movups XMMWORD PTR [rcx+0x60],xmm0
   140011ce6:	add    rcx,r10
   140011ce9:	movups xmm1,XMMWORD PTR [rax+0x70]
   140011ced:	add    rax,r10
   140011cf0:	movups XMMWORD PTR [rcx-0x10],xmm1
   140011cf4:	sub    r9,0x1
   140011cf8:	jne    0x140011cb0
   140011cfa:	movups xmm0,XMMWORD PTR [rax]
   140011cfd:	movups XMMWORD PTR [rcx],xmm0
   140011d00:	mov    eax,DWORD PTR [rax+0x10]
   140011d03:	mov    DWORD PTR [rcx+0x10],eax
   140011d06:	mov    eax,DWORD PTR [rdx+r8*1-0x9d8]
   140011d0e:	mov    DWORD PTR [rdi+0x1c4],eax
   140011d14:	mov    rcx,QWORD PTR [rdi+0x1c8]
   140011d1b:	test   rcx,rcx
   140011d1e:	je     0x140011d25
   140011d20:	call   0x140006360
   140011d25:	and    DWORD PTR [rdi+0x1c],0x0
   140011d29:	mov    rcx,QWORD PTR [rsp+0x230]
   140011d31:	xor    rcx,rsp
   140011d34:	call   0x140055f90
   140011d39:	lea    r11,[rsp+0x240]
   140011d41:	mov    rbx,QWORD PTR [r11+0x38]
   140011d45:	mov    rbp,QWORD PTR [r11+0x40]
   140011d49:	mov    rsi,QWORD PTR [r11+0x48]
   140011d4d:	mov    rsp,r11
   140011d50:	pop    r15
   140011d52:	pop    r14
   140011d54:	pop    r13
   140011d56:	pop    r12
   140011d58:	pop    rdi
   140011d59:	ret    
   140011d5a:	int3   
   140011d5b:	int3   
   140011d5c:	sub    rsp,0x28
   140011d60:	mov    r8d,DWORD PTR [rcx+0x1c]
   140011d64:	mov    eax,0x4000
   140011d69:	and    r8d,0x3fff
   140011d70:	sub    eax,edx
   140011d72:	cmp    r8d,eax
   140011d75:	jb     0x140011d7c
   140011d77:	call   0x1400118dc
   140011d7c:	add    rsp,0x28
   140011d80:	ret    
   140011d81:	int3   
   140011d82:	int3   
   140011d83:	int3   
   140011d84:	mov    QWORD PTR [rsp+0x8],rbx
   140011d89:	push   rdi
   140011d8a:	sub    rsp,0x20
   140011d8e:	lea    rbx,[rcx+0x1d0]
   140011d95:	mov    rdi,rcx
   140011d98:	mov    rcx,rbx
   140011d9b:	call   0x1400346a8
   140011da0:	mov    rcx,rbx
   140011da3:	call   0x140034684
   140011da8:	mov    rcx,QWORD PTR [rdi+0x1c8]
   140011daf:	test   rcx,rcx
   140011db2:	je     0x140011db9
   140011db4:	call   0x1400053ac
   140011db9:	mov    rbx,QWORD PTR [rsp+0x30]
   140011dbe:	add    rsp,0x20
   140011dc2:	pop    rdi
   140011dc3:	ret    
   140011dc4:	mov    eax,DWORD PTR [rcx+0x1c]
   140011dc7:	and    eax,0x3fff
   140011dcc:	ret    
   140011dcd:	int3   
   140011dce:	int3   
   140011dcf:	int3   
   140011dd0:	test   dl,dl
   140011dd2:	jne    0x140011e09
   140011dd4:	push   rbx
   140011dd5:	sub    rsp,0x20
   140011dd9:	mov    rbx,rcx
   140011ddc:	add    rcx,0x1d0
   140011de3:	call   0x140034734
   140011de8:	and    DWORD PTR [rbx+0x1c],0x0
   140011dec:	lea    rcx,[rbx+0x30]
   140011df0:	and    DWORD PTR [rbx+0x1c4],0x0
   140011df7:	xor    edx,edx
   140011df9:	mov    r8d,0x194
   140011dff:	call   0x140058f40
   140011e04:	add    rsp,0x20
   140011e08:	pop    rbx
   140011e09:	ret    
   140011e0a:	int3   
   140011e0b:	int3   
   140011e0c:	mov    QWORD PTR [rsp+0x8],rbx
   140011e11:	push   rdi
   140011e12:	sub    rsp,0x20
   140011e16:	xor    ebx,ebx
   140011e18:	mov    rdi,rcx
   140011e1b:	cmp    DWORD PTR [rcx+0x8],ebx
   140011e1e:	jbe    0x140011e3e
   140011e20:	mov    rcx,QWORD PTR [rdi]
   140011e23:	mov    eax,ebx
   140011e25:	imul   rdx,rax,0x9e8
   140011e2c:	add    rdx,rcx
   140011e2f:	mov    rcx,QWORD PTR [rcx]
   140011e32:	call   0x140011e4c
   140011e37:	inc    ebx
   140011e39:	cmp    ebx,DWORD PTR [rdi+0x8]
   140011e3c:	jb     0x140011e20
   140011e3e:	mov    rbx,QWORD PTR [rsp+0x30]
   140011e43:	add    rsp,0x20
   140011e47:	pop    rdi
   140011e48:	ret    
   140011e49:	int3   
   140011e4a:	int3   
   140011e4b:	int3   
   140011e4c:	mov    rax,rsp
   140011e4f:	mov    QWORD PTR [rax+0x8],rbx
   140011e53:	mov    QWORD PTR [rax+0x18],rsi
   140011e57:	mov    QWORD PTR [rax+0x20],rdi
   140011e5b:	push   rbp
   140011e5c:	push   r14
   140011e5e:	push   r15
   140011e60:	lea    rbp,[rax-0x5b8]
   140011e67:	sub    rsp,0x6a0
   140011e6e:	mov    rax,QWORD PTR [rip+0x7006b]        # 0x140081ee0
   140011e75:	xor    rax,rsp
   140011e78:	mov    QWORD PTR [rbp+0x590],rax
   140011e7f:	cmp    DWORD PTR [rcx+0x1c],0x0
   140011e83:	mov    rbx,rdx
   140011e86:	mov    rdi,rcx
   140011e89:	mov    r14d,0x1
   140011e8f:	jbe    0x140011e9f
   140011e91:	mov    rax,QWORD PTR [rdx+0x8]
   140011e95:	cmp    BYTE PTR [rax],0x5
   140011e98:	jne    0x140011e9f
   140011e9a:	mov    eax,r14d
   140011e9d:	jmp    0x140011ea1
   140011e9f:	xor    eax,eax
   140011ea1:	mov    BYTE PTR [rdx+0x848],al
   140011ea7:	lea    rcx,[rbp+0xe0]
   140011eae:	mov    BYTE PTR [rdx+0x9e4],al
   140011eb4:	mov    r8d,0x4ac
   140011eba:	xor    edx,edx
   140011ebc:	call   0x140058f40
   140011ec1:	xor    edx,edx
   140011ec3:	lea    rcx,[rbp-0x10]
   140011ec7:	mov    r8d,0xf0
   140011ecd:	call   0x140058f40
   140011ed2:	xor    edx,edx
   140011ed4:	lea    rcx,[rbp-0x80]
   140011ed8:	lea    r8d,[rdx+0x70]
   140011edc:	call   0x140058f40
   140011ee1:	xor    edx,edx
   140011ee3:	lea    rcx,[rsp+0x30]
   140011ee8:	lea    r8d,[rdx+0x44]
   140011eec:	call   0x140058f40
   140011ef1:	mov    r8,QWORD PTR [rbx+0x8]
   140011ef5:	xor    r10b,r10b
   140011ef8:	mov    eax,DWORD PTR [rbx+0x10]
   140011efb:	xor    r9b,r9b
   140011efe:	lea    rsi,[r8+rax*8]
   140011f02:	cmp    r8,rsi
   140011f05:	jae    0x1400120bf
   140011f0b:	mov    r11,QWORD PTR [rsp+0x20]
   140011f10:	lea    r15,[rip+0xfffffffffffee0e9]        # 0x140000000
   140011f17:	mov    al,BYTE PTR [r8]
   140011f1a:	test   al,al
   140011f1c:	jne    0x140011f28
   140011f1e:	movzx  eax,BYTE PTR [r8+0x4]
   140011f23:	jmp    0x140012052
   140011f28:	cmp    al,r14b
   140011f2b:	jne    0x14001202f
   140011f31:	movzx  eax,BYTE PTR [r8+0x1]
   140011f36:	cmp    eax,0x20
   140011f39:	jae    0x140011f46
   140011f3b:	movzx  eax,BYTE PTR [rax+r15*1+0x81000]
   140011f44:	jmp    0x140011f53
   140011f46:	shr    rax,0x3
   140011f4a:	movzx  eax,BYTE PTR [rax+r15*1+0x81020]
   140011f53:	add    eax,0x10f
   140011f58:	movsxd rcx,eax
   140011f5b:	add    DWORD PTR [rbp+rcx*4+0xe0],r14d
   140011f63:	mov    edx,DWORD PTR [r8+0x4]
   140011f67:	cmp    edx,0x40
   140011f6a:	jae    0x140011f77
   140011f6c:	movzx  ecx,BYTE PTR [rdx+r15*1+0x81040]
   140011f75:	jmp    0x140011fd3
   140011f77:	cmp    edx,0x800
   140011f7d:	jae    0x140011f91
   140011f7f:	mov    rax,rdx
   140011f82:	shr    rax,0x5
   140011f86:	movzx  ecx,BYTE PTR [rax+r15*1+0x81080]
   140011f8f:	jmp    0x140011fd3
   140011f91:	cmp    edx,0x10000
   140011f97:	jae    0x140011fab
   140011f99:	mov    rax,rdx
   140011f9c:	shr    rax,0xa
   140011fa0:	movzx  ecx,BYTE PTR [rax+r15*1+0x810c0]
   140011fa9:	jmp    0x140011fd3
   140011fab:	mov    ecx,edx
   140011fad:	cmp    edx,0x20000
   140011fb3:	jae    0x140011fbd
   140011fb5:	shr    ecx,0xf
   140011fb8:	add    ecx,0x1e
   140011fbb:	jmp    0x140011fd3
   140011fbd:	cmp    edx,0x100000
   140011fc3:	jae    0x140011fcd
   140011fc5:	shr    ecx,0x10
   140011fc8:	add    ecx,0x20
   140011fcb:	jmp    0x140011fd3
   140011fcd:	shr    ecx,0x12
   140011fd0:	add    ecx,0x2c
   140011fd3:	add    DWORD PTR [rbp+rcx*4-0x10],r14d
   140011fd8:	mov    eax,ecx
   140011fda:	cmp    ecx,0x9
   140011fdd:	jbe    0x140012021
   140011fdf:	and    dl,0xf
   140011fe2:	movzx  eax,dl
   140011fe5:	add    DWORD PTR [rsp+rax*4+0x30],r14d
   140011fea:	cmp    dl,r10b
   140011fed:	jne    0x140012002
   140011fef:	cmp    r9b,0x10
   140011ff3:	jae    0x140012006
   140011ff5:	add    r9b,r14b
   140011ff8:	cmp    r9b,r14b
   140011ffb:	jne    0x140012021
   140011ffd:	mov    r11,r8
   140012000:	jmp    0x140012021
   140012002:	cmp    r9b,0x10
   140012006:	jne    0x14001201b
   140012008:	movzx  eax,r10b
   14001200c:	add    DWORD PTR [rsp+rax*4+0x30],0xfffffff0
   140012011:	add    DWORD PTR [rsp+0x70],r14d
   140012016:	mov    BYTE PTR [r11+0x3],0x10
   14001201b:	xor    r9b,r9b
   14001201e:	mov    r10b,dl
   140012021:	mov    BYTE PTR [r8+0x2],cl
   140012025:	mov    BYTE PTR [r8+0x3],0x0
   14001202a:	jmp    0x1400120b2
   14001202f:	cmp    al,0x2
   140012031:	jne    0x14001205c
   140012033:	mov    eax,DWORD PTR [r8+0x4]
   140012037:	cmp    eax,0x20
   14001203a:	jae    0x140012047
   14001203c:	movzx  eax,BYTE PTR [rax+r15*1+0x81100]
   140012045:	jmp    0x14001204d
   140012047:	shr    eax,0x6
   14001204a:	add    eax,0x4
   14001204d:	add    eax,0x107
   140012052:	add    DWORD PTR [rbp+rax*4+0xe0],r14d
   14001205a:	jmp    0x1400120b2
   14001205c:	cmp    al,0x3
   14001205e:	jne    0x140012069
   140012060:	add    DWORD PTR [rbp+0x4e8],r14d
   140012067:	jmp    0x1400120b2
   140012069:	cmp    al,0x4
   14001206b:	jne    0x1400120a7
   14001206d:	mov    eax,DWORD PTR [r8+0x4]
   140012071:	add    eax,0x103
   140012076:	add    DWORD PTR [rbp+rax*4+0xe0],r14d
   14001207e:	movzx  eax,BYTE PTR [r8+0x1]
   140012083:	cmp    eax,0x20
   140012086:	jae    0x140012093
   140012088:	movzx  eax,BYTE PTR [rax+r15*1+0x81000]
   140012091:	jmp    0x1400120a0
   140012093:	shr    rax,0x3
   140012097:	movzx  eax,BYTE PTR [rax+r15*1+0x81020]
   1400120a0:	add    DWORD PTR [rbp+rax*4-0x80],r14d
   1400120a5:	jmp    0x1400120b2
   1400120a7:	cmp    al,0x7
   1400120a9:	jne    0x1400120b2
   1400120ab:	add    DWORD PTR [rbp+0x4e4],r14d
   1400120b2:	add    r8,0x8
   1400120b6:	cmp    r8,rsi
   1400120b9:	jb     0x140011f17
   1400120bf:	mov    esi,0x12b
   1400120c4:	mov    DWORD PTR [rbp+0x4e0],r14d
   1400120cb:	mov    r8d,esi
   1400120ce:	lea    rdx,[rbp+0xe0]
   1400120d5:	mov    rcx,rdi
   1400120d8:	call   0x140012240
   1400120dd:	mov    r14d,0x3c
   1400120e3:	lea    rdx,[rbp-0x10]
   1400120e7:	mov    r8d,r14d
   1400120ea:	mov    rcx,rdi
   1400120ed:	call   0x140012240
   1400120f2:	lea    r15d,[r14-0x2b]
   1400120f6:	mov    rcx,rdi
   1400120f9:	mov    r8d,r15d
   1400120fc:	lea    rdx,[rsp+0x30]
   140012101:	call   0x140012240
   140012106:	lea    r8d,[r14-0x20]
   14001210a:	mov    rcx,rdi
   14001210d:	lea    rdx,[rbp-0x80]
   140012111:	call   0x140012240
   140012116:	lea    r9,[rbx+0x40]
   14001211a:	mov    ecx,esi
   14001211c:	lea    r8,[rbx+0x690]
   140012123:	lea    rdx,[rbp+0xe0]
   14001212a:	call   0x140026024
   14001212f:	lea    r9,[rbx+0x4ec]
   140012136:	mov    ecx,r14d
   140012139:	lea    r8,[rbx+0x7bb]
   140012140:	lea    rdx,[rbp-0x10]
   140012144:	call   0x140026024
   140012149:	lea    r9,[rbx+0x5dc]
   140012150:	mov    ecx,r15d
   140012153:	lea    r8,[rbx+0x7f7]
   14001215a:	lea    rdx,[rsp+0x30]
   14001215f:	call   0x140026024
   140012164:	lea    r9,[rbx+0x620]
   14001216b:	lea    r8,[rbx+0x808]
   140012172:	lea    rdx,[rbp-0x80]
   140012176:	lea    ecx,[r14-0x20]
   14001217a:	call   0x140026024
   14001217f:	mov    rcx,QWORD PTR [rbp+0x590]
   140012186:	xor    rcx,rsp
   140012189:	call   0x140055f90
   14001218e:	lea    r11,[rsp+0x6a0]
   140012196:	mov    rbx,QWORD PTR [r11+0x20]
   14001219a:	mov    rsi,QWORD PTR [r11+0x30]
   14001219e:	mov    rdi,QWORD PTR [r11+0x38]
   1400121a2:	mov    rsp,r11
   1400121a5:	pop    r15
   1400121a7:	pop    r14
   1400121a9:	pop    rbp
   1400121aa:	ret    
   1400121ab:	int3   
   1400121ac:	mov    QWORD PTR [rsp+0x10],rdx
   1400121b1:	push   rbx
   1400121b2:	sub    rsp,0x20
   1400121b6:	mov    edx,0x1
   1400121bb:	mov    rbx,rcx
   1400121be:	call   0x140011838
   1400121c3:	mov    rdx,QWORD PTR [rbx+0x8]
   1400121c7:	mov    rcx,QWORD PTR [rbx]
   1400121ca:	mov    rax,QWORD PTR [rsp+0x38]
   1400121cf:	mov    QWORD PTR [rcx+rdx*8-0x8],rax
   1400121d4:	add    rsp,0x20
   1400121d8:	pop    rbx
   1400121d9:	ret    
   1400121da:	int3   
   1400121db:	int3   
   1400121dc:	mov    eax,0x3
   1400121e1:	add    rcx,0x30
   1400121e5:	lea    r8d,[rax+0x7d]
   1400121e9:	movups xmm0,XMMWORD PTR [rdx]
   1400121ec:	movups XMMWORD PTR [rcx],xmm0
   1400121ef:	movups xmm1,XMMWORD PTR [rdx+0x10]
   1400121f3:	movups XMMWORD PTR [rcx+0x10],xmm1
   1400121f7:	movups xmm0,XMMWORD PTR [rdx+0x20]
   1400121fb:	movups XMMWORD PTR [rcx+0x20],xmm0
   1400121ff:	movups xmm1,XMMWORD PTR [rdx+0x30]
   140012203:	movups XMMWORD PTR [rcx+0x30],xmm1
   140012207:	movups xmm0,XMMWORD PTR [rdx+0x40]
   14001220b:	movups XMMWORD PTR [rcx+0x40],xmm0
   14001220f:	movups xmm1,XMMWORD PTR [rdx+0x50]
   140012213:	movups XMMWORD PTR [rcx+0x50],xmm1
   140012217:	movups xmm0,XMMWORD PTR [rdx+0x60]
   14001221b:	movups XMMWORD PTR [rcx+0x60],xmm0
   14001221f:	add    rcx,r8
   140012222:	movups xmm1,XMMWORD PTR [rdx+0x70]
   140012226:	add    rdx,r8
   140012229:	movups XMMWORD PTR [rcx-0x10],xmm1
   14001222d:	sub    rax,0x1
   140012231:	jne    0x1400121e9
   140012233:	movups xmm0,XMMWORD PTR [rdx]
   140012236:	movups XMMWORD PTR [rcx],xmm0
   140012239:	mov    eax,DWORD PTR [rdx+0x10]
   14001223c:	mov    DWORD PTR [rcx+0x10],eax
   14001223f:	ret    
   140012240:	xor    eax,eax
   140012242:	movsxd r9,r8d
   140012245:	xor    ecx,ecx
   140012247:	test   r8d,r8d
   14001224a:	jle    0x140012275
   14001224c:	cmp    eax,0x2
   14001224f:	jge    0x140012261
   140012251:	cmp    DWORD PTR [rdx+rcx*4],0x0
   140012255:	je     0x140012259
   140012257:	inc    eax
   140012259:	inc    rcx
   14001225c:	cmp    rcx,r9
   14001225f:	jl     0x14001224c
   140012261:	cmp    eax,0x1
   140012264:	jne    0x140012275
   140012266:	cmp    DWORD PTR [rdx],0x0
   140012269:	jne    0x14001226e
   14001226b:	mov    DWORD PTR [rdx],eax
   14001226d:	ret    
   14001226e:	mov    DWORD PTR [rdx+0x4],0x1
   140012275:	ret    
   140012276:	int3   
   140012277:	int3   
   140012278:	rex push rdi
   14001227a:	sub    rsp,0x40
   14001227e:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140012287:	mov    QWORD PTR [rsp+0x58],rbx
   14001228c:	mov    QWORD PTR [rsp+0x68],rsi
   140012291:	mov    rsi,rcx
   140012294:	mov    DWORD PTR [rcx+0x2c],edx
   140012297:	add    edx,edx
   140012299:	mov    DWORD PTR [rcx+0x28],edx
   14001229c:	shl    edx,0xe
   14001229f:	mov    r8d,edx
   1400122a2:	mov    DWORD PTR [rcx+0x18],r8d
   1400122a6:	mov    eax,0x8
   1400122ab:	mul    r8
   1400122ae:	mov    rbx,0xffffffffffffffff
   1400122b5:	cmovo  rax,rbx
   1400122b9:	mov    rcx,rax
   1400122bc:	call   0x140055df0
   1400122c1:	mov    QWORD PTR [rsi+0x10],rax
   1400122c5:	mov    edi,DWORD PTR [rsi+0x28]
   1400122c8:	mov    QWORD PTR [rsp+0x50],rdi
   1400122cd:	mov    eax,0x9e8
   1400122d2:	mul    rdi
   1400122d5:	cmovo  rax,rbx
   1400122d9:	add    rax,0x8
   1400122dd:	cmovb  rax,rbx
   1400122e1:	mov    rcx,rax
   1400122e4:	call   0x140055df0
   1400122e9:	mov    QWORD PTR [rsp+0x60],rax
   1400122ee:	xor    ebx,ebx
   1400122f0:	test   rax,rax
   1400122f3:	je     0x140012320
   1400122f5:	mov    QWORD PTR [rax],rdi
   1400122f8:	lea    rbx,[rax+0x8]
   1400122fc:	lea    rax,[rip+0xfffffffffffff50d]        # 0x140011810
   140012303:	mov    QWORD PTR [rsp+0x20],rax
   140012308:	lea    r9,[rip+0xfffffffffffff44d]        # 0x14001175c
   14001230f:	mov    r8d,edi
   140012312:	mov    edx,0x9e8
   140012317:	mov    rcx,rbx
   14001231a:	call   0x140055c6c
   14001231f:	nop
   140012320:	mov    QWORD PTR [rsi+0x20],rbx
   140012324:	mov    rbx,QWORD PTR [rsp+0x58]
   140012329:	mov    rsi,QWORD PTR [rsp+0x68]
   14001232e:	add    rsp,0x40
   140012332:	pop    rdi
   140012333:	ret    
   140012334:	mov    QWORD PTR [rsp+0x8],rbx
   140012339:	push   rdi
   14001233a:	sub    rsp,0x20
   14001233e:	xor    ebx,ebx
   140012340:	mov    rdi,rcx
   140012343:	cmp    DWORD PTR [rcx+0x8],ebx
   140012346:	jbe    0x140012366
   140012348:	mov    rcx,QWORD PTR [rdi]
   14001234b:	mov    eax,ebx
   14001234d:	imul   rdx,rax,0x9e8
   140012354:	add    rdx,rcx
   140012357:	mov    rcx,QWORD PTR [rcx]
   14001235a:	call   0x140012374
   14001235f:	inc    ebx
   140012361:	cmp    ebx,DWORD PTR [rdi+0x8]
   140012364:	jb     0x140012348
   140012366:	mov    rbx,QWORD PTR [rsp+0x30]
   14001236b:	add    rsp,0x20
   14001236f:	pop    rdi
   140012370:	ret    
   140012371:	int3   
   140012372:	int3   
   140012373:	int3   
   140012374:	mov    QWORD PTR [rsp+0x8],rcx
   140012379:	push   rbx
   14001237a:	push   rbp
   14001237b:	push   rsi
   14001237c:	push   rdi
   14001237d:	push   r12
   14001237f:	push   r13
   140012381:	push   r14
   140012383:	push   r15
   140012385:	sub    rsp,0x48
   140012389:	xor    al,al
   14001238b:	xor    bl,bl
   14001238d:	mov    rdi,rdx
   140012390:	mov    rsi,rcx
   140012393:	mov    r12d,0x1
   140012399:	mov    BYTE PTR [rsp+0xa0],al
   1400123a0:	mov    BYTE PTR [rsp+0x98],bl
   1400123a7:	cmp    BYTE PTR [rdx+0x848],al
   1400123ad:	jne    0x1400123be
   1400123af:	call   0x140012b30
   1400123b4:	mov    bl,r12b
   1400123b7:	mov    BYTE PTR [rsp+0x98],bl
   1400123be:	mov    r14,QWORD PTR [rdi+0x8]
   1400123c2:	mov    r15d,0x20
   1400123c8:	mov    eax,DWORD PTR [rdi+0x10]
   1400123cb:	lea    rax,[r14+rax*8]
   1400123cf:	mov    QWORD PTR [rsp+0x30],rax
   1400123d4:	cmp    r14,rax
   1400123d7:	jae    0x140012a88
   1400123dd:	lea    r8,[rip+0xfffffffffffedc1c]        # 0x140000000
   1400123e4:	mov    al,BYTE PTR [r14]
   1400123e7:	test   al,al
   1400123e9:	jne    0x14001244d
   1400123eb:	movzx  eax,BYTE PTR [r14+0x4]
   1400123f0:	lea    rbx,[rdi+0x18]
   1400123f4:	mov    ecx,DWORD PTR [rbx+0x14]
   1400123f7:	movzx  ebp,BYTE PTR [rax+rdi*1+0x690]
   1400123ff:	mov    esi,DWORD PTR [rdi+rax*4+0x40]
   140012403:	cmp    ebp,ecx
   140012405:	ja     0x140012416
   140012407:	sub    ecx,ebp
   140012409:	shl    esi,cl
   14001240b:	or     DWORD PTR [rbx+0x10],esi
   14001240e:	mov    DWORD PTR [rbx+0x14],ecx
   140012411:	jmp    0x140012a6a
   140012416:	sub    ebp,ecx
   140012418:	mov    eax,esi
   14001241a:	mov    ecx,ebp
   14001241c:	shr    eax,cl
   14001241e:	mov    rcx,rbx
   140012421:	or     DWORD PTR [rbx+0x10],eax
   140012424:	mov    edx,DWORD PTR [rbx+0x10]
   140012427:	call   0x140034800
   14001242c:	mov    ecx,r15d
   14001242f:	sub    ecx,ebp
   140012431:	shl    esi,cl
   140012433:	mov    DWORD PTR [rbx+0x10],esi
   140012436:	mov    DWORD PTR [rbx+0x14],ecx
   140012439:	mov    rsi,QWORD PTR [rsp+0x90]
   140012441:	lea    r8,[rip+0xfffffffffffedbb8]        # 0x140000000
   140012448:	jmp    0x140012a72
   14001244d:	cmp    al,r12b
   140012450:	jne    0x1400126fb
   140012456:	movzx  r12d,BYTE PTR [r14+0x1]
   14001245b:	cmp    r12d,r15d
   14001245e:	jae    0x14001246b
   140012460:	movzx  ebp,BYTE PTR [r12+r8*1+0x81000]
   140012469:	jmp    0x14001247b
   14001246b:	mov    rax,r12
   14001246e:	shr    rax,0x3
   140012472:	movzx  ebp,BYTE PTR [rax+r8*1+0x81020]
   14001247b:	lea    eax,[rbp+0x10f]
   140012481:	movzx  r13d,BYTE PTR [rax+rdi*1+0x690]
   14001248a:	lea    rbx,[rdi+0x18]
   14001248e:	mov    ecx,DWORD PTR [rbx+0x14]
   140012491:	mov    esi,DWORD PTR [rdi+rax*4+0x40]
   140012495:	cmp    r13d,ecx
   140012498:	ja     0x1400124a4
   14001249a:	sub    ecx,r13d
   14001249d:	shl    esi,cl
   14001249f:	or     DWORD PTR [rbx+0x10],esi
   1400124a2:	jmp    0x1400124ce
   1400124a4:	sub    r13d,ecx
   1400124a7:	mov    eax,esi
   1400124a9:	mov    ecx,r13d
   1400124ac:	shr    eax,cl
   1400124ae:	mov    rcx,rbx
   1400124b1:	or     DWORD PTR [rbx+0x10],eax
   1400124b4:	mov    edx,DWORD PTR [rbx+0x10]
   1400124b7:	call   0x140034800
   1400124bc:	mov    ecx,r15d
   1400124bf:	lea    r8,[rip+0xfffffffffffedb3a]        # 0x140000000
   1400124c6:	sub    ecx,r13d
   1400124c9:	shl    esi,cl
   1400124cb:	mov    DWORD PTR [rbx+0x10],esi
   1400124ce:	movzx  ebp,BYTE PTR [rbp+r8*1+0x81178]
   1400124d7:	mov    DWORD PTR [rbx+0x14],ecx
   1400124da:	test   ebp,ebp
   1400124dc:	je     0x140012520
   1400124de:	mov    esi,DWORD PTR [r8+rbp*4+0x81120]
   1400124e6:	and    esi,r12d
   1400124e9:	cmp    ebp,ecx
   1400124eb:	ja     0x1400124f6
   1400124ed:	sub    ecx,ebp
   1400124ef:	shl    esi,cl
   1400124f1:	or     DWORD PTR [rbx+0x10],esi
   1400124f4:	jmp    0x14001251d
   1400124f6:	sub    ebp,ecx
   1400124f8:	mov    eax,esi
   1400124fa:	mov    ecx,ebp
   1400124fc:	shr    eax,cl
   1400124fe:	mov    rcx,rbx
   140012501:	or     DWORD PTR [rbx+0x10],eax
   140012504:	mov    edx,DWORD PTR [rbx+0x10]
   140012507:	call   0x140034800
   14001250c:	mov    ecx,r15d
   14001250f:	lea    r8,[rip+0xfffffffffffedaea]        # 0x140000000
   140012516:	sub    ecx,ebp
   140012518:	shl    esi,cl
   14001251a:	mov    DWORD PTR [rbx+0x10],esi
   14001251d:	mov    DWORD PTR [rbx+0x14],ecx
   140012520:	movzx  eax,BYTE PTR [r14+0x2]
   140012525:	mov    ecx,DWORD PTR [rbx+0x14]
   140012528:	mov    r13d,eax
   14001252b:	mov    r12d,DWORD PTR [r14+0x4]
   14001252f:	movzx  ebp,BYTE PTR [rdi+rax*1+0x7bb]
   140012537:	mov    esi,DWORD PTR [rdi+rax*4+0x4ec]
   14001253e:	cmp    ebp,ecx
   140012540:	ja     0x14001254b
   140012542:	sub    ecx,ebp
   140012544:	shl    esi,cl
   140012546:	or     DWORD PTR [rbx+0x10],esi
   140012549:	jmp    0x140012575
   14001254b:	sub    ebp,ecx
   14001254d:	mov    eax,esi
   14001254f:	mov    ecx,ebp
   140012551:	shr    eax,cl
   140012553:	mov    rcx,rbx
   140012556:	or     DWORD PTR [rbx+0x10],eax
   140012559:	mov    edx,DWORD PTR [rbx+0x10]
   14001255c:	call   0x140034800
   140012561:	mov    ecx,r15d
   140012564:	lea    r8,[rip+0xfffffffffffeda95]        # 0x140000000
   14001256b:	sub    ecx,ebp
   14001256d:	mov    eax,r13d
   140012570:	shl    esi,cl
   140012572:	mov    DWORD PTR [rbx+0x10],esi
   140012575:	movzx  esi,BYTE PTR [r8+r13*1+0x81198]
   14001257e:	mov    DWORD PTR [rbx+0x14],ecx
   140012581:	cmp    eax,0x9
   140012584:	jbe    0x1400126b5
   14001258a:	mov    r13d,r12d
   14001258d:	and    r13d,0xf
   140012591:	cmp    esi,0x4
   140012594:	jbe    0x1400125e4
   140012596:	mov    ebp,DWORD PTR [r8+rsi*4+0x81120]
   14001259e:	mov    eax,esi
   1400125a0:	shr    ebp,0x4
   1400125a3:	add    esi,0xfffffffc
   1400125a6:	shr    r12d,0x4
   1400125aa:	and    ebp,r12d
   1400125ad:	cmp    esi,ecx
   1400125af:	ja     0x1400125ba
   1400125b1:	sub    ecx,esi
   1400125b3:	shl    ebp,cl
   1400125b5:	or     DWORD PTR [rbx+0x10],ebp
   1400125b8:	jmp    0x1400125e1
   1400125ba:	sub    esi,ecx
   1400125bc:	mov    eax,ebp
   1400125be:	mov    ecx,esi
   1400125c0:	shr    eax,cl
   1400125c2:	mov    rcx,rbx
   1400125c5:	or     DWORD PTR [rbx+0x10],eax
   1400125c8:	mov    edx,DWORD PTR [rbx+0x10]
   1400125cb:	call   0x140034800
   1400125d0:	mov    ecx,r15d
   1400125d3:	lea    r8,[rip+0xfffffffffffeda26]        # 0x140000000
   1400125da:	sub    ecx,esi
   1400125dc:	shl    ebp,cl
   1400125de:	mov    DWORD PTR [rbx+0x10],ebp
   1400125e1:	mov    DWORD PTR [rbx+0x14],ecx
   1400125e4:	mov    dl,BYTE PTR [rsp+0xa0]
   1400125eb:	test   dl,dl
   1400125ed:	jne    0x1400126a9
   1400125f3:	mov    dl,BYTE PTR [r14+0x3]
   1400125f7:	mov    ecx,DWORD PTR [rbx+0x14]
   1400125fa:	mov    BYTE PTR [rsp+0xa0],dl
   140012601:	cmp    dl,0x10
   140012604:	jne    0x140012657
   140012606:	movzx  ebp,BYTE PTR [rdi+0x807]
   14001260d:	mov    esi,DWORD PTR [rdi+0x61c]
   140012613:	cmp    ebp,ecx
   140012615:	ja     0x140012620
   140012617:	sub    ecx,ebp
   140012619:	shl    esi,cl
   14001261b:	or     DWORD PTR [rbx+0x10],esi
   14001261e:	jmp    0x140012640
   140012620:	sub    ebp,ecx
   140012622:	mov    eax,esi
   140012624:	mov    ecx,ebp
   140012626:	shr    eax,cl
   140012628:	mov    rcx,rbx
   14001262b:	or     DWORD PTR [rbx+0x10],eax
   14001262e:	mov    edx,DWORD PTR [rbx+0x10]
   140012631:	call   0x140034800
   140012636:	mov    ecx,r15d
   140012639:	sub    ecx,ebp
   14001263b:	shl    esi,cl
   14001263d:	mov    DWORD PTR [rbx+0x10],esi
   140012640:	mov    al,0xf
   140012642:	mov    BYTE PTR [rsp+0xa0],al
   140012649:	mov    DWORD PTR [rbx+0x14],ecx
   14001264c:	mov    r12d,0x1
   140012652:	jmp    0x140012439
   140012657:	mov    esi,DWORD PTR [rdi+r13*4+0x5dc]
   14001265f:	movzx  ebp,BYTE PTR [r13+rdi*1+0x7f7]
   140012668:	mov    eax,r13d
   14001266b:	cmp    ebp,ecx
   14001266d:	ja     0x140012684
   14001266f:	sub    ecx,ebp
   140012671:	shl    esi,cl
   140012673:	mov    DWORD PTR [rbx+0x14],ecx
   140012676:	or     DWORD PTR [rbx+0x10],esi
   140012679:	mov    r12d,0x1
   14001267f:	jmp    0x140012a6a
   140012684:	sub    ebp,ecx
   140012686:	mov    eax,esi
   140012688:	mov    ecx,ebp
   14001268a:	shr    eax,cl
   14001268c:	mov    rcx,rbx
   14001268f:	or     DWORD PTR [rbx+0x10],eax
   140012692:	mov    edx,DWORD PTR [rbx+0x10]
   140012695:	call   0x140034800
   14001269a:	mov    ecx,r15d
   14001269d:	sub    ecx,ebp
   14001269f:	shl    esi,cl
   1400126a1:	mov    DWORD PTR [rbx+0x14],ecx
   1400126a4:	mov    DWORD PTR [rbx+0x10],esi
   1400126a7:	jmp    0x14001264c
   1400126a9:	add    dl,0xff
   1400126ac:	mov    BYTE PTR [rsp+0xa0],dl
   1400126b3:	jmp    0x140012679
   1400126b5:	mov    ebp,DWORD PTR [r8+rsi*4+0x81120]
   1400126bd:	mov    rax,rsi
   1400126c0:	mov    ecx,DWORD PTR [rbx+0x14]
   1400126c3:	and    ebp,r12d
   1400126c6:	cmp    esi,ecx
   1400126c8:	ja     0x1400126d6
   1400126ca:	sub    ecx,esi
   1400126cc:	shl    ebp,cl
   1400126ce:	or     DWORD PTR [rbx+0x10],ebp
   1400126d1:	mov    DWORD PTR [rbx+0x14],ecx
   1400126d4:	jmp    0x140012679
   1400126d6:	sub    esi,ecx
   1400126d8:	mov    eax,ebp
   1400126da:	mov    ecx,esi
   1400126dc:	shr    eax,cl
   1400126de:	mov    rcx,rbx
   1400126e1:	or     DWORD PTR [rbx+0x10],eax
   1400126e4:	mov    edx,DWORD PTR [rbx+0x10]
   1400126e7:	call   0x140034800
   1400126ec:	mov    ecx,r15d
   1400126ef:	sub    ecx,esi
   1400126f1:	shl    ebp,cl
   1400126f3:	mov    DWORD PTR [rbx+0x10],ebp
   1400126f6:	jmp    0x140012649
   1400126fb:	cmp    al,0x2
   1400126fd:	jne    0x14001279b
   140012703:	mov    r12d,DWORD PTR [r14+0x4]
   140012707:	cmp    r12d,r15d
   14001270a:	jae    0x140012717
   14001270c:	movzx  esi,BYTE PTR [r12+r8*1+0x81100]
   140012715:	jmp    0x140012720
   140012717:	mov    esi,r12d
   14001271a:	shr    esi,0x6
   14001271d:	add    esi,0x4
   140012720:	lea    eax,[rsi+0x107]
   140012726:	movzx  r13d,BYTE PTR [rax+rdi*1+0x690]
   14001272f:	lea    rbx,[rdi+0x18]
   140012733:	mov    ecx,DWORD PTR [rbx+0x14]
   140012736:	mov    ebp,DWORD PTR [rdi+rax*4+0x40]
   14001273a:	cmp    r13d,ecx
   14001273d:	ja     0x140012749
   14001273f:	sub    ecx,r13d
   140012742:	shl    ebp,cl
   140012744:	or     DWORD PTR [rbx+0x10],ebp
   140012747:	jmp    0x140012773
   140012749:	sub    r13d,ecx
   14001274c:	mov    eax,ebp
   14001274e:	mov    ecx,r13d
   140012751:	shr    eax,cl
   140012753:	mov    rcx,rbx
   140012756:	or     DWORD PTR [rbx+0x10],eax
   140012759:	mov    edx,DWORD PTR [rbx+0x10]
   14001275c:	call   0x140034800
   140012761:	mov    ecx,r15d
   140012764:	lea    r8,[rip+0xfffffffffffed895]        # 0x140000000
   14001276b:	sub    ecx,r13d
   14001276e:	shl    ebp,cl
   140012770:	mov    DWORD PTR [rbx+0x10],ebp
   140012773:	movzx  ebp,BYTE PTR [rsi+r8*1+0x811d8]
   14001277c:	mov    DWORD PTR [rbx+0x14],ecx
   14001277f:	mov    eax,esi
   140012781:	test   ebp,ebp
   140012783:	je     0x140012679
   140012789:	mov    esi,DWORD PTR [r8+rbp*4+0x81120]
   140012791:	mov    eax,ebp
   140012793:	and    esi,r12d
   140012796:	jmp    0x14001266b
   14001279b:	cmp    al,0x3
   14001279d:	jne    0x1400127bb
   14001279f:	movzx  edx,BYTE PTR [rdi+0x792]
   1400127a6:	lea    rcx,[rdi+0x18]
   1400127aa:	mov    r8d,DWORD PTR [rdi+0x448]
   1400127b1:	call   0x140034958
   1400127b6:	jmp    0x140012441
   1400127bb:	cmp    al,0x4
   1400127bd:	jne    0x14001285a
   1400127c3:	mov    eax,DWORD PTR [r14+0x4]
   1400127c7:	lea    rbp,[rdi+0x18]
   1400127cb:	add    eax,0x103
   1400127d0:	mov    rcx,rbp
   1400127d3:	movzx  edx,BYTE PTR [rax+rdi*1+0x690]
   1400127db:	mov    r8d,DWORD PTR [rdi+rax*4+0x40]
   1400127e0:	call   0x140034958
   1400127e5:	movzx  esi,BYTE PTR [r14+0x1]
   1400127ea:	lea    rcx,[rip+0xfffffffffffed80f]        # 0x140000000
   1400127f1:	mov    eax,esi
   1400127f3:	cmp    esi,r15d
   1400127f6:	jae    0x140012802
   1400127f8:	movzx  ecx,BYTE PTR [rsi+rcx*1+0x81000]
   140012800:	jmp    0x14001280e
   140012802:	shr    rax,0x3
   140012806:	movzx  ecx,BYTE PTR [rax+rcx*1+0x81020]
   14001280e:	movzx  edx,BYTE PTR [rcx+rdi*1+0x808]
   140012816:	mov    r8d,DWORD PTR [rdi+rcx*4+0x620]
   14001281e:	mov    ebx,ecx
   140012820:	mov    rcx,rbp
   140012823:	call   0x140034958
   140012828:	lea    r8,[rip+0xfffffffffffed7d1]        # 0x140000000
   14001282f:	movzx  edx,BYTE PTR [rbx+r8*1+0x81178]
   140012838:	test   edx,edx
   14001283a:	je     0x140012a6a
   140012840:	mov    r8d,DWORD PTR [r8+rdx*4+0x81120]
   140012848:	mov    eax,edx
   14001284a:	and    r8d,esi
   14001284d:	mov    rcx,rbp
   140012850:	call   0x140034958
   140012855:	jmp    0x140012439
   14001285a:	cmp    al,0x5
   14001285c:	jne    0x1400128bc
   14001285e:	lea    rcx,[rdi+0x18]
   140012862:	call   0x1400346a8
   140012867:	mov    eax,DWORD PTR [rdi+0x38]
   14001286a:	lea    rcx,[rdi+0x828]
   140012871:	mov    DWORD PTR [rsp+0x24],eax
   140012875:	mov    BYTE PTR [rsp+0x20],0x5
   14001287a:	mov    rdx,QWORD PTR [rsp+0x20]
   14001287f:	call   0x1400121ac
   140012884:	cmp    BYTE PTR [rdi+0x848],0x0
   14001288b:	je     0x140012441
   140012891:	cmp    DWORD PTR [rdi+0x10],r12d
   140012895:	jbe    0x140012441
   14001289b:	mov    rdx,rdi
   14001289e:	mov    rcx,rsi
   1400128a1:	call   0x140012b30
   1400128a6:	mov    bl,r12b
   1400128a9:	mov    BYTE PTR [rdi+0x848],0x0
   1400128b0:	mov    BYTE PTR [rsp+0x98],bl
   1400128b7:	jmp    0x1400129cf
   1400128bc:	cmp    al,0x6
   1400128be:	jne    0x1400129db
   1400128c4:	movzx  ebp,BYTE PTR [rdi+0x790]
   1400128cb:	lea    rsi,[rdi+0x18]
   1400128cf:	mov    ecx,DWORD PTR [rsi+0x14]
   1400128d2:	mov    ebx,DWORD PTR [rdi+0x440]
   1400128d8:	cmp    ebp,ecx
   1400128da:	ja     0x1400128e5
   1400128dc:	sub    ecx,ebp
   1400128de:	shl    ebx,cl
   1400128e0:	or     DWORD PTR [rsi+0x10],ebx
   1400128e3:	jmp    0x140012905
   1400128e5:	sub    ebp,ecx
   1400128e7:	mov    eax,ebx
   1400128e9:	mov    ecx,ebp
   1400128eb:	shr    eax,cl
   1400128ed:	mov    rcx,rsi
   1400128f0:	or     DWORD PTR [rsi+0x10],eax
   1400128f3:	mov    edx,DWORD PTR [rsi+0x10]
   1400128f6:	call   0x140034800
   1400128fb:	mov    ecx,r15d
   1400128fe:	sub    ecx,ebp
   140012900:	shl    ebx,cl
   140012902:	mov    DWORD PTR [rsi+0x10],ebx
   140012905:	mov    rax,QWORD PTR [rsp+0x30]
   14001290a:	add    rax,0xfffffffffffffff8
   14001290e:	mov    DWORD PTR [rsi+0x14],ecx
   140012911:	cmp    r14,rax
   140012914:	mov    eax,ecx
   140012916:	jne    0x140012959
   140012918:	cmp    eax,0x2
   14001291b:	jb     0x140012928
   14001291d:	mov    eax,DWORD PTR [rsi+0x10]
   140012920:	lea    ecx,[rcx-0x2]
   140012923:	bts    eax,ecx
   140012926:	jmp    0x14001294e
   140012928:	mov    ebx,0x2
   14001292d:	sub    ebx,eax
   14001292f:	mov    eax,r12d
   140012932:	mov    ecx,ebx
   140012934:	shr    eax,cl
   140012936:	mov    rcx,rsi
   140012939:	or     DWORD PTR [rsi+0x10],eax
   14001293c:	mov    edx,DWORD PTR [rsi+0x10]
   14001293f:	call   0x140034800
   140012944:	mov    ecx,r15d
   140012947:	mov    eax,r12d
   14001294a:	sub    ecx,ebx
   14001294c:	shl    eax,cl
   14001294e:	xor    bl,bl
   140012950:	mov    BYTE PTR [rsp+0x98],bl
   140012957:	jmp    0x14001299c
   140012959:	cmp    eax,0x2
   14001295c:	jb     0x140012971
   14001295e:	mov    bl,BYTE PTR [rsp+0x98]
   140012965:	lea    ecx,[rax-0x2]
   140012968:	xor    eax,eax
   14001296a:	shl    eax,cl
   14001296c:	or     DWORD PTR [rsi+0x10],eax
   14001296f:	jmp    0x14001299f
   140012971:	mov    ebx,0x2
   140012976:	sub    ebx,eax
   140012978:	xor    eax,eax
   14001297a:	mov    ecx,ebx
   14001297c:	shr    eax,cl
   14001297e:	mov    rcx,rsi
   140012981:	or     DWORD PTR [rsi+0x10],eax
   140012984:	mov    edx,DWORD PTR [rsi+0x10]
   140012987:	call   0x140034800
   14001298c:	mov    ecx,r15d
   14001298f:	xor    eax,eax
   140012991:	sub    ecx,ebx
   140012993:	mov    bl,BYTE PTR [rsp+0x98]
   14001299a:	shl    eax,cl
   14001299c:	mov    DWORD PTR [rsi+0x10],eax
   14001299f:	mov    DWORD PTR [rsi+0x14],ecx
   1400129a2:	mov    rcx,rsi
   1400129a5:	call   0x1400346a8
   1400129aa:	mov    eax,DWORD PTR [rdi+0x38]
   1400129ad:	lea    rcx,[rdi+0x828]
   1400129b4:	mov    DWORD PTR [rsp+0x2c],eax
   1400129b8:	mov    BYTE PTR [rsp+0x28],0x6
   1400129bd:	mov    rdx,QWORD PTR [rsp+0x28]
   1400129c2:	call   0x1400121ac
   1400129c7:	mov    rsi,QWORD PTR [rsp+0x90]
   1400129cf:	lea    r8,[rip+0xfffffffffffed62a]        # 0x140000000
   1400129d6:	jmp    0x140012a79
   1400129db:	cmp    al,0x7
   1400129dd:	jne    0x140012a72
   1400129e3:	movzx  edx,BYTE PTR [rdi+0x791]
   1400129ea:	lea    rsi,[rdi+0x18]
   1400129ee:	mov    r8d,DWORD PTR [rdi+0x444]
   1400129f5:	mov    rcx,rsi
   1400129f8:	call   0x140034958
   1400129fd:	movzx  r8d,BYTE PTR [r14+0x1]
   140012a02:	mov    edx,0x8
   140012a07:	mov    rcx,rsi
   140012a0a:	call   0x140034958
   140012a0f:	mov    ebx,DWORD PTR [r14+0x4]
   140012a13:	cmp    ebx,0x6
   140012a16:	jbe    0x140012a3b
   140012a18:	mov    rcx,rsi
   140012a1b:	cmp    ebx,0x106
   140012a21:	ja     0x140012a2e
   140012a23:	lea    r8d,[rbx-0x7]
   140012a27:	mov    edx,0x8
   140012a2c:	jmp    0x140012a36
   140012a2e:	mov    r8d,ebx
   140012a31:	mov    edx,0x10
   140012a36:	call   0x140034958
   140012a3b:	test   ebx,ebx
   140012a3d:	je     0x140012a63
   140012a3f:	lea    rbp,[r14+0xc]
   140012a43:	movzx  r8d,BYTE PTR [rbp+0x0]
   140012a48:	mov    edx,0x8
   140012a4d:	mov    rcx,rsi
   140012a50:	call   0x140034958
   140012a55:	lea    rbp,[rbp+0x8]
   140012a59:	sub    rbx,r12
   140012a5c:	jne    0x140012a43
   140012a5e:	jmp    0x140012439
   140012a63:	lea    r8,[rip+0xfffffffffffed596]        # 0x140000000
   140012a6a:	mov    rsi,QWORD PTR [rsp+0x90]
   140012a72:	mov    bl,BYTE PTR [rsp+0x98]
   140012a79:	add    r14,0x8
   140012a7d:	cmp    r14,QWORD PTR [rsp+0x30]
   140012a82:	jb     0x1400123e4
   140012a88:	test   bl,bl
   140012a8a:	je     0x140012b1f
   140012a90:	movzx  esi,BYTE PTR [rdi+0x790]
   140012a97:	mov    ebx,DWORD PTR [rdi+0x440]
   140012a9d:	add    rdi,0x18
   140012aa1:	mov    ecx,DWORD PTR [rdi+0x14]
   140012aa4:	cmp    esi,ecx
   140012aa6:	ja     0x140012ab1
   140012aa8:	sub    ecx,esi
   140012aaa:	shl    ebx,cl
   140012aac:	or     DWORD PTR [rdi+0x10],ebx
   140012aaf:	jmp    0x140012ad1
   140012ab1:	sub    esi,ecx
   140012ab3:	mov    eax,ebx
   140012ab5:	mov    ecx,esi
   140012ab7:	shr    eax,cl
   140012ab9:	mov    rcx,rdi
   140012abc:	or     DWORD PTR [rdi+0x10],eax
   140012abf:	mov    edx,DWORD PTR [rdi+0x10]
   140012ac2:	call   0x140034800
   140012ac7:	mov    ecx,r15d
   140012aca:	sub    ecx,esi
   140012acc:	shl    ebx,cl
   140012ace:	mov    DWORD PTR [rdi+0x10],ebx
   140012ad1:	mov    eax,ecx
   140012ad3:	mov    DWORD PTR [rdi+0x14],ecx
   140012ad6:	cmp    eax,r12d
   140012ad9:	jb     0x140012aec
   140012adb:	mov    eax,DWORD PTR [rdi+0x10]
   140012ade:	lea    ecx,[rcx-0x1]
   140012ae1:	bts    eax,ecx
   140012ae4:	mov    DWORD PTR [rdi+0x14],ecx
   140012ae7:	mov    DWORD PTR [rdi+0x10],eax
   140012aea:	jmp    0x140012b17
   140012aec:	mov    ebx,r12d
   140012aef:	sub    ebx,eax
   140012af1:	mov    eax,r12d
   140012af4:	mov    ecx,ebx
   140012af6:	shr    eax,cl
   140012af8:	mov    rcx,rdi
   140012afb:	or     DWORD PTR [rdi+0x10],eax
   140012afe:	mov    edx,DWORD PTR [rdi+0x10]
   140012b01:	call   0x140034800
   140012b06:	sub    r15d,ebx
   140012b09:	mov    ecx,r15d
   140012b0c:	mov    DWORD PTR [rdi+0x14],r15d
   140012b10:	shl    r12d,cl
   140012b13:	mov    DWORD PTR [rdi+0x10],r12d
   140012b17:	mov    rcx,rdi
   140012b1a:	call   0x1400346a8
   140012b1f:	add    rsp,0x48
   140012b23:	pop    r15
   140012b25:	pop    r14
   140012b27:	pop    r13
   140012b29:	pop    r12
   140012b2b:	pop    rdi
   140012b2c:	pop    rsi
   140012b2d:	pop    rbp
   140012b2e:	pop    rbx
   140012b2f:	ret    
   140012b30:	mov    rax,rsp
   140012b33:	mov    QWORD PTR [rax+0x8],rbx
   140012b37:	mov    QWORD PTR [rax+0x18],rsi
   140012b3b:	mov    QWORD PTR [rax+0x20],rdi
   140012b3f:	push   rbp
   140012b40:	push   r12
   140012b42:	push   r13
   140012b44:	push   r14
   140012b46:	push   r15
   140012b48:	lea    rbp,[rax-0x5f]
   140012b4c:	sub    rsp,0xe0
   140012b53:	mov    rax,QWORD PTR [rip+0x6f386]        # 0x140081ee0
   140012b5a:	xor    rax,rsp
   140012b5d:	mov    QWORD PTR [rbp+0x2f],rax
   140012b61:	lea    r14,[rdx+0x18]
   140012b65:	xor    r8d,r8d
   140012b68:	mov    r12,rdx
   140012b6b:	lea    rdi,[rdx+0x690]
   140012b72:	mov    rbx,rcx
   140012b75:	mov    rcx,r14
   140012b78:	lea    esi,[r8+0x1]
   140012b7c:	mov    edx,esi
   140012b7e:	call   0x140034958
   140012b83:	xor    r15d,r15d
   140012b86:	mov    r13d,0x194
   140012b8c:	cmp    DWORD PTR [r12+0x9e0],0x3e8
   140012b98:	jb     0x140012bb3
   140012b9a:	cmp    BYTE PTR [r12+0x9e4],r15b
   140012ba2:	jne    0x140012bb3
   140012ba4:	mov    r8d,esi
   140012ba7:	mov    edx,esi
   140012ba9:	mov    rcx,r14
   140012bac:	call   0x140034958
   140012bb1:	jmp    0x140012bd2
   140012bb3:	xor    r8d,r8d
   140012bb6:	mov    edx,esi
   140012bb8:	mov    rcx,r14
   140012bbb:	call   0x140034958
   140012bc0:	lea    rcx,[r12+0x849]
   140012bc8:	mov    r8,r13
   140012bcb:	xor    edx,edx
   140012bcd:	call   0x140058f40
   140012bd2:	xor    edx,edx
   140012bd4:	lea    rcx,[rsp+0x20]
   140012bd9:	lea    r8d,[rdx+0x50]
   140012bdd:	call   0x140058f40
   140012be2:	mov    r8d,r15d
   140012be5:	mov    r10d,0x87
   140012beb:	cmp    r8d,0x192
   140012bf2:	jge    0x140012cc6
   140012bf8:	movsxd rax,r8d
   140012bfb:	mov    dl,BYTE PTR [rax+rdi*1]
   140012bfe:	test   dl,dl
   140012c00:	jne    0x140012c58
   140012c02:	lea    eax,[r8+0x1]
   140012c06:	movsxd rcx,eax
   140012c09:	cmp    BYTE PTR [rcx+rdi*1],r15b
   140012c0d:	jne    0x140012c58
   140012c0f:	lea    eax,[r8+0x2]
   140012c13:	movsxd rcx,eax
   140012c16:	cmp    BYTE PTR [rcx+rdi*1],r15b
   140012c1a:	jne    0x140012c58
   140012c1c:	add    r8d,0x3
   140012c20:	mov    ecx,r15d
   140012c23:	movsxd rax,r8d
   140012c26:	cmp    rax,r13
   140012c29:	jge    0x140012c4d
   140012c2b:	cmp    BYTE PTR [rax+rdi*1],r15b
   140012c2f:	jne    0x140012c43
   140012c31:	cmp    ecx,r10d
   140012c34:	jge    0x140012c43
   140012c36:	add    ecx,esi
   140012c38:	add    r8d,esi
   140012c3b:	add    rax,rsi
   140012c3e:	cmp    rax,r13
   140012c41:	jl     0x140012c2b
   140012c43:	cmp    ecx,0x7
   140012c46:	jle    0x140012c4d
   140012c48:	add    DWORD PTR [rbp-0x3d],esi
   140012c4b:	jmp    0x140012c50
   140012c4d:	add    DWORD PTR [rbp-0x41],esi
   140012c50:	sub    r8d,esi
   140012c53:	jmp    0x140012cdf
   140012c58:	test   r8d,r8d
   140012c5b:	jle    0x140012cc6
   140012c5d:	lea    eax,[r8-0x1]
   140012c61:	movsxd rcx,eax
   140012c64:	cmp    dl,BYTE PTR [rcx+rdi*1]
   140012c67:	jne    0x140012cc6
   140012c69:	lea    eax,[r8+0x1]
   140012c6d:	movsxd rcx,eax
   140012c70:	cmp    dl,BYTE PTR [rcx+rdi*1]
   140012c73:	jne    0x140012cc6
   140012c75:	lea    eax,[r8+0x2]
   140012c79:	movsxd rcx,eax
   140012c7c:	cmp    dl,BYTE PTR [rcx+rdi*1]
   140012c7f:	jne    0x140012cc6
   140012c81:	add    r8d,0x3
   140012c85:	mov    edx,r15d
   140012c88:	movsxd rax,r8d
   140012c8b:	cmp    rax,r13
   140012c8e:	jge    0x140012cc1
   140012c90:	mov    r9,rdi
   140012c93:	lea    rcx,[rax+rdi*1]
   140012c97:	neg    r9
   140012c9a:	mov    al,BYTE PTR [rcx-0x1]
   140012c9d:	cmp    BYTE PTR [rcx],al
   140012c9f:	jne    0x140012cb7
   140012ca1:	cmp    edx,r10d
   140012ca4:	jge    0x140012cb7
   140012ca6:	add    rcx,rsi
   140012ca9:	add    edx,esi
   140012cab:	add    r8d,esi
   140012cae:	lea    rax,[r9+rcx*1]
   140012cb2:	cmp    rax,r13
   140012cb5:	jl     0x140012c9a
   140012cb7:	cmp    edx,0x7
   140012cba:	jle    0x140012cc1
   140012cbc:	add    DWORD PTR [rbp-0x45],esi
   140012cbf:	jmp    0x140012c50
   140012cc1:	add    DWORD PTR [rbp-0x49],esi
   140012cc4:	jmp    0x140012c50
   140012cc6:	movsxd rax,r8d
   140012cc9:	movzx  edx,BYTE PTR [rax+rdi*1]
   140012ccd:	movzx  ecx,BYTE PTR [rax+r12*1+0x849]
   140012cd6:	sub    edx,ecx
   140012cd8:	and    edx,0xf
   140012cdb:	add    DWORD PTR [rsp+rdx*4+0x20],esi
   140012cdf:	add    r8d,esi
   140012ce2:	cmp    r8d,r13d
   140012ce5:	jl     0x140012beb
   140012ceb:	mov    esi,0x14
   140012cf0:	lea    rdx,[rsp+0x20]
   140012cf5:	mov    r8d,esi
   140012cf8:	mov    rcx,rbx
   140012cfb:	call   0x140012240
   140012d00:	lea    r9,[rbp-0x39]
   140012d04:	mov    ecx,esi
   140012d06:	lea    r8,[rbp+0x17]
   140012d0a:	lea    rdx,[rsp+0x20]
   140012d0f:	call   0x140026024
   140012d14:	mov    ebx,r15d
   140012d17:	xor    r13d,r13d
   140012d1a:	xor    esi,esi
   140012d1c:	mov    ecx,ebx
   140012d1e:	cmp    ebx,0x14
   140012d21:	jae    0x140012d7b
   140012d23:	movsxd rax,ebx
   140012d26:	lea    rdx,[rbp+0x17]
   140012d2a:	add    rdx,rax
   140012d2d:	cmp    BYTE PTR [rdx+rsi*1],0x0
   140012d31:	jne    0x140012d46
   140012d33:	cmp    rsi,0x11
   140012d37:	jge    0x140012d46
   140012d39:	inc    r13d
   140012d3c:	inc    rsi
   140012d3f:	inc    ecx
   140012d41:	cmp    ecx,0x14
   140012d44:	jb     0x140012d2d
   140012d46:	cmp    rsi,0x3
   140012d4a:	jl     0x140012d7b
   140012d4c:	mov    edx,0x4
   140012d51:	mov    rcx,r14
   140012d54:	lea    r8d,[rdx+0xb]
   140012d58:	call   0x140034958
   140012d5d:	lea    r8d,[r13-0x2]
   140012d61:	mov    edx,0x4
   140012d66:	mov    rcx,r14
   140012d69:	call   0x140034958
   140012d6e:	dec    ebx
   140012d70:	dec    r15
   140012d73:	add    ebx,r13d
   140012d76:	add    r15,rsi
   140012d79:	jmp    0x140012daa
   140012d7b:	mov    al,BYTE PTR [rbp+r15*1+0x17]
   140012d80:	mov    edx,0x4
   140012d85:	mov    rcx,r14
   140012d88:	cmp    al,0xf
   140012d8a:	jne    0x140012da1
   140012d8c:	lea    r8d,[rdx+0xb]
   140012d90:	call   0x140034958
   140012d95:	xor    r8d,r8d
   140012d98:	mov    rcx,r14
   140012d9b:	lea    edx,[r8+0x4]
   140012d9f:	jmp    0x140012da5
   140012da1:	movzx  r8d,al
   140012da5:	call   0x140034958
   140012daa:	mov    r13d,0x1
   140012db0:	add    ebx,r13d
   140012db3:	add    r15,r13
   140012db6:	cmp    ebx,0x14
   140012db9:	jb     0x140012d17
   140012dbf:	xor    ebx,ebx
   140012dc1:	mov    r15d,0x194
   140012dc7:	cmp    ebx,0x192
   140012dcd:	jge    0x140012ee4
   140012dd3:	movsxd rax,ebx
   140012dd6:	mov    dl,BYTE PTR [rax+rdi*1]
   140012dd9:	test   dl,dl
   140012ddb:	jne    0x140012e68
   140012de1:	lea    eax,[rbx+0x1]
   140012de4:	movsxd rcx,eax
   140012de7:	cmp    BYTE PTR [rcx+rdi*1],dl
   140012dea:	jne    0x140012e68
   140012dec:	lea    eax,[rbx+0x2]
   140012def:	movsxd rcx,eax
   140012df2:	cmp    BYTE PTR [rcx+rdi*1],dl
   140012df5:	jne    0x140012e68
   140012df7:	add    ebx,0x3
   140012dfa:	xor    esi,esi
   140012dfc:	movsxd rax,ebx
   140012dff:	cmp    rax,r15
   140012e02:	jge    0x140012e40
   140012e04:	cmp    BYTE PTR [rax+rdi*1],0x0
   140012e08:	jne    0x140012e20
   140012e0a:	cmp    esi,0x87
   140012e10:	jge    0x140012e20
   140012e12:	add    esi,r13d
   140012e15:	add    ebx,r13d
   140012e18:	add    rax,r13
   140012e1b:	cmp    rax,r15
   140012e1e:	jl     0x140012e04
   140012e20:	cmp    esi,0x7
   140012e23:	jle    0x140012e40
   140012e25:	movzx  edx,BYTE PTR [rbp+0x2a]
   140012e29:	mov    r8d,DWORD PTR [rbp+0x13]
   140012e2d:	mov    rcx,r14
   140012e30:	call   0x140034958
   140012e35:	lea    r8d,[rsi-0x8]
   140012e39:	mov    edx,0x7
   140012e3e:	jmp    0x140012e58
   140012e40:	movzx  edx,BYTE PTR [rbp+0x29]
   140012e44:	mov    r8d,DWORD PTR [rbp+0xf]
   140012e48:	mov    rcx,r14
   140012e4b:	call   0x140034958
   140012e50:	mov    r8d,esi
   140012e53:	mov    edx,0x3
   140012e58:	mov    rcx,r14
   140012e5b:	call   0x140034958
   140012e60:	sub    ebx,r13d
   140012e63:	jmp    0x140012f0f
   140012e68:	test   ebx,ebx
   140012e6a:	jle    0x140012ee4
   140012e6c:	lea    eax,[rbx-0x1]
   140012e6f:	movsxd rcx,eax
   140012e72:	cmp    dl,BYTE PTR [rcx+rdi*1]
   140012e75:	jne    0x140012ee4
   140012e77:	lea    eax,[rbx+0x1]
   140012e7a:	movsxd rcx,eax
   140012e7d:	cmp    dl,BYTE PTR [rcx+rdi*1]
   140012e80:	jne    0x140012ee4
   140012e82:	lea    eax,[rbx+0x2]
   140012e85:	movsxd rcx,eax
   140012e88:	cmp    dl,BYTE PTR [rcx+rdi*1]
   140012e8b:	jne    0x140012ee4
   140012e8d:	add    ebx,0x3
   140012e90:	xor    esi,esi
   140012e92:	movsxd rax,ebx
   140012e95:	cmp    rax,r15
   140012e98:	jge    0x140012ed7
   140012e9a:	mov    rdx,rdi
   140012e9d:	lea    rcx,[rax+rdi*1]
   140012ea1:	neg    rdx
   140012ea4:	mov    al,BYTE PTR [rcx-0x1]
   140012ea7:	cmp    BYTE PTR [rcx],al
   140012ea9:	jne    0x140012ec5
   140012eab:	cmp    esi,0x87
   140012eb1:	jge    0x140012ec5
   140012eb3:	add    rcx,r13
   140012eb6:	add    esi,r13d
   140012eb9:	add    ebx,r13d
   140012ebc:	lea    rax,[rdx+rcx*1]
   140012ec0:	cmp    rax,r15
   140012ec3:	jl     0x140012ea4
   140012ec5:	cmp    esi,0x7
   140012ec8:	jle    0x140012ed7
   140012eca:	movzx  edx,BYTE PTR [rbp+0x28]
   140012ece:	mov    r8d,DWORD PTR [rbp+0xb]
   140012ed2:	jmp    0x140012e2d
   140012ed7:	movzx  edx,BYTE PTR [rbp+0x27]
   140012edb:	mov    r8d,DWORD PTR [rbp+0x7]
   140012edf:	jmp    0x140012e48
   140012ee4:	movsxd rax,ebx
   140012ee7:	movzx  r8d,BYTE PTR [rax+rdi*1]
   140012eec:	movzx  ecx,BYTE PTR [rax+r12*1+0x849]
   140012ef5:	sub    r8d,ecx
   140012ef8:	mov    rcx,r14
   140012efb:	and    r8d,0xf
   140012eff:	movzx  edx,BYTE PTR [rbp+r8*1+0x17]
   140012f05:	mov    r8d,DWORD PTR [rbp+r8*4-0x39]
   140012f0a:	call   0x140034958
   140012f0f:	add    ebx,r13d
   140012f12:	cmp    ebx,r15d
   140012f15:	jl     0x140012dc7
   140012f1b:	mov    rcx,QWORD PTR [rbp+0x2f]
   140012f1f:	xor    rcx,rsp
   140012f22:	call   0x140055f90
   140012f27:	lea    r11,[rsp+0xe0]
   140012f2f:	mov    rbx,QWORD PTR [r11+0x30]
   140012f33:	mov    rsi,QWORD PTR [r11+0x40]
   140012f37:	mov    rdi,QWORD PTR [r11+0x48]
   140012f3b:	mov    rsp,r11
   140012f3e:	pop    r15
   140012f40:	pop    r14
   140012f42:	pop    r13
   140012f44:	pop    r12
   140012f46:	pop    rbp
   140012f47:	ret    
   140012f48:	mov    QWORD PTR [rsp+0x18],rbx
   140012f4d:	mov    QWORD PTR [rsp+0x10],rdx
   140012f52:	push   rbp
   140012f53:	push   rsi
   140012f54:	push   rdi
   140012f55:	push   r12
   140012f57:	push   r13
   140012f59:	push   r14
   140012f5b:	push   r15
   140012f5d:	lea    rbp,[rsp-0xc80]
   140012f65:	sub    rsp,0xd80
   140012f6c:	mov    rax,QWORD PTR [rip+0x6ef6d]        # 0x140081ee0
   140012f73:	xor    rax,rsp
   140012f76:	mov    QWORD PTR [rbp+0xc70],rax
   140012f7d:	mov    BYTE PTR [rsp+0x20],r8b
   140012f82:	lea    rdx,[rip+0x5a597]        # 0x14006d520
   140012f89:	mov    QWORD PTR [rsp+0x28],rcx
   140012f8e:	mov    r8d,0x40
   140012f94:	or     ecx,0xffffffff
   140012f97:	call   0x140017ac0
   140012f9c:	cmp    eax,0x26e831b8
   140012fa1:	jne    0x14001357e
   140012fa7:	lea    r15,[rip+0x6f9c2]        # 0x140082970
   140012fae:	xor    edx,edx
   140012fb0:	mov    rcx,r15
   140012fb3:	mov    r8d,0x604
   140012fb9:	call   0x140058f40
   140012fbe:	mov    esi,0x400
   140012fc3:	lea    r8,[rbp+0x70]
   140012fc7:	mov    r9d,esi
   140012fca:	lea    rdx,[rbp+0xcc8]
   140012fd1:	lea    rcx,[rsp+0x28]
   140012fd6:	call   0x140013760
   140012fdb:	xor    r12d,r12d
   140012fde:	jmp    0x140012ffe
   140012fe0:	cmp    BYTE PTR [rbp+0x70],0x23
   140012fe4:	jne    0x140013002
   140012fe6:	mov    r9,rsi
   140012fe9:	lea    r8,[rbp+0x70]
   140012fed:	lea    rdx,[rbp+0xcc8]
   140012ff4:	lea    rcx,[rsp+0x28]
   140012ff9:	call   0x140013760
   140012ffe:	test   al,al
   140013000:	jne    0x140012fe0
   140013002:	mov    r13d,0x100
   140013008:	lea    rdx,[rbp+0xcc8]
   14001300f:	mov    r9d,r13d
   140013012:	lea    rcx,[rsp+0x28]
   140013017:	mov    r8,r15
   14001301a:	call   0x140013760
   14001301f:	mov    r9d,r13d
   140013022:	lea    r8,[rip+0x6fa47]        # 0x140082a70
   140013029:	lea    rcx,[rsp+0x28]
   14001302e:	lea    rdx,[rbp+0xcc8]
   140013035:	call   0x140013760
   14001303a:	lea    r9d,[r13-0x80]
   14001303e:	lea    r8,[rsp+0x70]
   140013043:	lea    rcx,[rsp+0x28]
   140013048:	lea    rdx,[rbp+0xcc8]
   14001304f:	call   0x140013760
   140013054:	mov    rbx,r12
   140013057:	mov    edi,0x7
   14001305c:	mov    r9,rsi
   14001305f:	lea    r8,[rbp+0x70]
   140013063:	sub    r9,rbx
   140013066:	lea    rdx,[rbp+0xcc8]
   14001306d:	add    r8,rbx
   140013070:	lea    rcx,[rsp+0x28]
   140013075:	call   0x140013760
   14001307a:	add    rbx,0x36
   14001307e:	sub    rdi,0x1
   140013082:	jne    0x14001305c
   140013084:	lea    r15d,[rdi+0x2]
   140013088:	mov    edx,r15d
   14001308b:	lea    rcx,[rbp+0x70]
   14001308f:	call   0x14001396c
   140013094:	lea    edi,[r15+0x1]
   140013098:	movsxd rbx,eax
   14001309b:	mov    edx,edi
   14001309d:	lea    rcx,[rbp+0x72]
   1400130a1:	call   0x14001396c
   1400130a6:	mov    edx,edi
   1400130a8:	movsxd r14,eax
   1400130ab:	lea    rcx,[rbp+0x75]
   1400130af:	call   0x14001396c
   1400130b4:	mov    edx,r15d
   1400130b7:	movsxd rsi,eax
   1400130ba:	lea    rcx,[rbp+0x78]
   1400130be:	call   0x14001396c
   1400130c3:	movsxd r15,eax
   1400130c6:	cmp    r14d,r13d
   1400130c9:	jg     0x14001357e
   1400130cf:	cmp    esi,r13d
   1400130d2:	jg     0x14001357e
   1400130d8:	lea    r13,[rip+0x6fa91]        # 0x140082b70
   1400130df:	mov    r8,rbx
   1400130e2:	mov    rcx,r13
   1400130e5:	lea    rdx,[rbp+0x7a]
   1400130e9:	call   0x14005e100
   1400130ee:	mov    r8,r14
   1400130f1:	lea    rdi,[rbp+0x7a]
   1400130f5:	add    rdi,rbx
   1400130f8:	mov    rbx,r14
   1400130fb:	lea    r14,[rip+0x6fd6e]        # 0x140082e70
   140013102:	mov    rdx,rdi
   140013105:	mov    rcx,r14
   140013108:	call   0x14005e100
   14001310d:	add    rdi,rbx
   140013110:	lea    rcx,[rip+0x6fc59]        # 0x140082d70
   140013117:	mov    rdx,rdi
   14001311a:	mov    r8,rsi
   14001311d:	call   0x14005e100
   140013122:	mov    r8,r15
   140013125:	mov    rbx,r15
   140013128:	lea    r15,[rip+0x6fb41]        # 0x140082c70
   14001312f:	add    rdi,rsi
   140013132:	mov    rcx,r15
   140013135:	mov    rdx,rdi
   140013138:	call   0x14005e100
   14001313d:	xor    edx,edx
   14001313f:	lea    rcx,[rbx+rdi*1]
   140013143:	lea    r8d,[rdx+0xa]
   140013147:	call   0x14005dfac
   14001314c:	or     rdi,0xffffffffffffffff
   140013150:	mov    DWORD PTR [rip+0x6fe1a],eax        # 0x140082f70
   140013156:	mov    r8,rdi
   140013159:	lea    rsi,[rip+0x6f910]        # 0x140082a70
   140013160:	inc    r8
   140013163:	cmp    BYTE PTR [rsi+r8*1],r12b
   140013167:	jne    0x140013160
   140013169:	mov    rdx,rsi
   14001316c:	or     ecx,0xffffffff
   14001316f:	call   0x140017ac0
   140013174:	mov    r8,rdi
   140013177:	lea    rbx,[rip+0x6f7f2]        # 0x140082970
   14001317e:	inc    r8
   140013181:	cmp    BYTE PTR [rbx+r8*1],r12b
   140013185:	jne    0x14001317e
   140013187:	mov    rdx,rbx
   14001318a:	mov    ecx,eax
   14001318c:	call   0x140017ac0
   140013191:	mov    r8,rdi
   140013194:	inc    r8
   140013197:	cmp    BYTE PTR [r8+r13*1],r12b
   14001319b:	jne    0x140013194
   14001319d:	mov    rdx,r13
   1400131a0:	mov    ecx,eax
   1400131a2:	call   0x140017ac0
   1400131a7:	mov    r8,rdi
   1400131aa:	inc    r8
   1400131ad:	cmp    BYTE PTR [r14+r8*1],r12b
   1400131b1:	jne    0x1400131aa
   1400131b3:	mov    rdx,r14
   1400131b6:	mov    ecx,eax
   1400131b8:	call   0x140017ac0
   1400131bd:	mov    r8,rdi
   1400131c0:	lea    rcx,[rip+0x6fba9]        # 0x140082d70
   1400131c7:	inc    r8
   1400131ca:	cmp    BYTE PTR [rcx+r8*1],r12b
   1400131ce:	jne    0x1400131c7
   1400131d0:	mov    rdx,rcx
   1400131d3:	mov    ecx,eax
   1400131d5:	call   0x140017ac0
   1400131da:	mov    r8,rdi
   1400131dd:	inc    r8
   1400131e0:	cmp    BYTE PTR [r15+r8*1],r12b
   1400131e4:	jne    0x1400131dd
   1400131e6:	mov    rdx,r15
   1400131e9:	mov    ecx,eax
   1400131eb:	call   0x140017ac0
   1400131f0:	cmp    eax,DWORD PTR [rip+0x6fd7a]        # 0x140082f70
   1400131f6:	jne    0x14001357e
   1400131fc:	cmp    BYTE PTR [rip+0x6f86d],r12b        # 0x140082a70
   140013203:	mov    r13d,r12d
   140013206:	mov    DWORD PTR [rsp+0x28],r12d
   14001320b:	je     0x140013462
   140013211:	mov    r14,r12
   140013214:	mov    QWORD PTR [rsp+0x30],r12
   140013219:	lea    rsi,[rip+0x6f859]        # 0x140082a79
   140013220:	movsxd rax,r13d
   140013223:	lea    rdx,[rip+0x5a346]        # 0x14006d570
   14001322a:	add    rax,0x100
   140013230:	mov    r8d,0x9
   140013236:	add    rbx,rax
   140013239:	mov    rcx,rbx
   14001323c:	mov    QWORD PTR [rsp+0x40],rbx
   140013241:	call   0x140046084
   140013246:	test   eax,eax
   140013248:	je     0x140013267
   14001324a:	mov    r8d,0x9
   140013250:	lea    rdx,[rip+0x5a329]        # 0x14006d580
   140013257:	mov    rcx,rbx
   14001325a:	call   0x140046084
   14001325f:	test   eax,eax
   140013261:	jne    0x140013348
   140013267:	cmp    BYTE PTR [rsi],r12b
   14001326a:	mov    r13b,r12b
   14001326d:	mov    rbx,rsi
   140013270:	je     0x14001357e
   140013276:	cmp    BYTE PTR [rbx-0x1],0x20
   14001327a:	jne    0x140013288
   14001327c:	movsx  ecx,BYTE PTR [rbx]
   14001327f:	call   0x140045d18
   140013284:	test   al,al
   140013286:	jne    0x140013290
   140013288:	inc    rbx
   14001328b:	cmp    BYTE PTR [rbx],r12b
   14001328e:	jmp    0x140013270
   140013290:	mov    rcx,rbx
   140013293:	call   0x14005df3c
   140013298:	mov    edx,0x2e
   14001329d:	mov    rcx,rbx
   1400132a0:	mov    r12d,eax
   1400132a3:	call   0x1400595b8
   1400132a8:	mov    r15,rax
   1400132ab:	test   rax,rax
   1400132ae:	je     0x1400132e6
   1400132b0:	lea    r14,[rax+0x1]
   1400132b4:	cmp    BYTE PTR [r14],0x2a
   1400132b8:	je     0x1400132e6
   1400132ba:	mov    rcx,r14
   1400132bd:	call   0x14005df3c
   1400132c2:	movsx  ecx,BYTE PTR [r14]
   1400132c6:	mov    ebx,eax
   1400132c8:	call   0x140045d18
   1400132cd:	test   al,al
   1400132cf:	je     0x1400132e8
   1400132d1:	movsx  ecx,BYTE PTR [r15+0x2]
   1400132d6:	call   0x140045d18
   1400132db:	test   al,al
   1400132dd:	jne    0x1400132e8
   1400132df:	lea    ebx,[rbx+rbx*4]
   1400132e2:	add    ebx,ebx
   1400132e4:	jmp    0x1400132e8
   1400132e6:	mov    ebx,edi
   1400132e8:	cmp    r12d,0x5
   1400132ec:	jne    0x14001330b
   1400132ee:	cmp    ebx,edi
   1400132f0:	je     0x140013308
   1400132f2:	mov    eax,0x66666667
   1400132f7:	imul   ebx
   1400132f9:	sar    edx,0x2
   1400132fc:	mov    eax,edx
   1400132fe:	shr    eax,0x1f
   140013301:	add    edx,eax
   140013303:	cmp    edx,0x4
   140013306:	jne    0x14001330b
   140013308:	mov    r13b,0x1
   14001330b:	mov    r14,QWORD PTR [rsp+0x30]
   140013310:	lea    r15,[rip+0x6f659]        # 0x140082970
   140013317:	cmp    BYTE PTR [r14+r15*1+0x104],0x4d
   140013320:	jne    0x140013332
   140013322:	cmp    r12d,0x5
   140013326:	jg     0x14001332f
   140013328:	jne    0x140013332
   14001332a:	cmp    ebx,0x28
   14001332d:	jl     0x140013332
   14001332f:	mov    r13b,0x1
   140013332:	xor    r12d,r12d
   140013335:	test   r13b,r13b
   140013338:	je     0x14001357e
   14001333e:	mov    rbx,QWORD PTR [rsp+0x40]
   140013343:	mov    r13d,DWORD PTR [rsp+0x28]
   140013348:	mov    r8d,0x9
   14001334e:	lea    rdx,[rip+0x5a23b]        # 0x14006d590
   140013355:	mov    rcx,rbx
   140013358:	call   0x140046084
   14001335d:	test   eax,eax
   14001335f:	jne    0x140013429
   140013365:	cmp    BYTE PTR [rsi],r12b
   140013368:	mov    rbx,rsi
   14001336b:	je     0x14001357e
   140013371:	cmp    BYTE PTR [rbx-0x1],0x20
   140013375:	jne    0x140013383
   140013377:	movsx  ecx,BYTE PTR [rbx]
   14001337a:	call   0x140045d18
   14001337f:	test   al,al
   140013381:	jne    0x14001338b
   140013383:	inc    rbx
   140013386:	cmp    BYTE PTR [rbx],r12b
   140013389:	jmp    0x14001336b
   14001338b:	mov    r14d,0x1
   140013391:	mov    rcx,rbx
   140013394:	mov    r12d,r14d
   140013397:	call   0x14005df3c
   14001339c:	lea    edx,[r14+0x2d]
   1400133a0:	mov    rcx,rbx
   1400133a3:	mov    r15d,eax
   1400133a6:	call   0x1400595b8
   1400133ab:	test   rax,rax
   1400133ae:	je     0x1400133dd
   1400133b0:	lea    rbx,[rax+0x1]
   1400133b4:	mov    rcx,rbx
   1400133b7:	call   0x14005df3c
   1400133bc:	lea    edx,[r12+0x2d]
   1400133c1:	mov    rcx,rbx
   1400133c4:	mov    r14d,eax
   1400133c7:	call   0x1400595b8
   1400133cc:	test   rax,rax
   1400133cf:	je     0x1400133dd
   1400133d1:	lea    rcx,[rax+0x1]
   1400133d5:	call   0x14005df3c
   1400133da:	mov    r12d,eax
   1400133dd:	and    QWORD PTR [rsp+0x38],0x0
   1400133e3:	lea    rcx,[rsp+0x38]
   1400133e8:	call   0x1400476c0
   1400133ed:	lea    rdx,[rsp+0x48]
   1400133f2:	lea    rcx,[rsp+0x38]
   1400133f7:	call   0x1400472e8
   1400133fc:	cmp    r15d,DWORD PTR [rsp+0x48]
   140013401:	ja     0x140013421
   140013403:	jne    0x14001357e
   140013409:	cmp    r14d,DWORD PTR [rsp+0x4c]
   14001340e:	ja     0x140013421
   140013410:	jne    0x14001357e
   140013416:	cmp    r12d,DWORD PTR [rsp+0x50]
   14001341b:	jb     0x14001357e
   140013421:	mov    r14,QWORD PTR [rsp+0x30]
   140013426:	xor    r12d,r12d
   140013429:	inc    r13d
   14001342c:	lea    rbx,[rip+0x6f53d]        # 0x140082970
   140013433:	inc    r14
   140013436:	mov    DWORD PTR [rsp+0x28],r13d
   14001343b:	inc    rsi
   14001343e:	mov    QWORD PTR [rsp+0x30],r14
   140013443:	cmp    BYTE PTR [rsi-0x9],r12b
   140013447:	jne    0x140013220
   14001344d:	lea    rsi,[rip+0x6f61c]        # 0x140082a70
   140013454:	lea    r14,[rip+0x6fa15]        # 0x140082e70
   14001345b:	lea    r15,[rip+0x6f80e]        # 0x140082c70
   140013462:	cmp    BYTE PTR [rsp+0x20],r12b
   140013467:	je     0x14001357a
   14001346d:	mov    rdx,rdi
   140013470:	inc    rdx
   140013473:	cmp    BYTE PTR [rsi+rdx*1],r12b
   140013477:	jne    0x140013470
   140013479:	mov    r9,r14
   14001347c:	lea    r8,[rip+0x5a11d]        # 0x14006d5a0
   140013483:	mov    rcx,rsi
   140013486:	call   0x140019808
   14001348b:	test   eax,eax
   14001348d:	je     0x14001357e
   140013493:	mov    rcx,r12
   140013496:	mov    al,BYTE PTR [rcx+rbx*1]
   140013499:	mov    BYTE PTR [rbp+rcx*1+0x470],al
   1400134a0:	inc    rcx
   1400134a3:	test   al,al
   1400134a5:	jne    0x140013496
   1400134a7:	lea    rcx,[rbp+0x470]
   1400134ae:	dec    rcx
   1400134b1:	inc    rcx
   1400134b4:	cmp    BYTE PTR [rcx],r12b
   1400134b7:	jne    0x1400134b1
   1400134b9:	xor    edx,edx
   1400134bb:	lea    rbx,[rip+0x6f6ae]        # 0x140082b70
   1400134c2:	mov    al,BYTE PTR [rbx+rdx*1]
   1400134c5:	mov    BYTE PTR [rcx+rdx*1],al
   1400134c8:	inc    rdx
   1400134cb:	test   al,al
   1400134cd:	jne    0x1400134c2
   1400134cf:	mov    rcx,r12
   1400134d2:	mov    al,BYTE PTR [rbp+rcx*1+0x470]
   1400134d9:	mov    BYTE PTR [rbp+rcx*1+0x870],al
   1400134e0:	inc    rcx
   1400134e3:	test   al,al
   1400134e5:	jne    0x1400134d2
   1400134e7:	lea    rax,[rbp+0x470]
   1400134ee:	inc    rdi
   1400134f1:	cmp    BYTE PTR [rax+rdi*1],r12b
   1400134f5:	jne    0x1400134ee
   1400134f7:	lea    r9,[rip+0x6f872]        # 0x140082d70
   1400134fe:	mov    rdx,rdi
   140013501:	lea    r8,[rip+0x5a0e8]        # 0x14006d5f0
   140013508:	lea    rcx,[rbp+0x470]
   14001350f:	call   0x140019808
   140013514:	test   eax,eax
   140013516:	je     0x14001357e
   140013518:	mov    rcx,r12
   14001351b:	mov    al,BYTE PTR [rbp+rcx*1+0x870]
   140013522:	mov    BYTE PTR [rbp+rcx*1+0x470],al
   140013529:	inc    rcx
   14001352c:	test   al,al
   14001352e:	jne    0x14001351b
   140013530:	lea    r9,[rsp+0x70]
   140013535:	mov    r8,r15
   140013538:	mov    rdx,rdi
   14001353b:	lea    rcx,[rbp+0x470]
   140013542:	call   0x14001964c
   140013547:	mov    rcx,r12
   14001354a:	mov    al,BYTE PTR [rbp+rcx*1+0x870]
   140013551:	mov    BYTE PTR [rbp+rcx*1+0x470],al
   140013558:	inc    rcx
   14001355b:	test   al,al
   14001355d:	jne    0x14001354a
   14001355f:	lea    r9,[rsp+0x70]
   140013564:	mov    r8,rbx
   140013567:	mov    rdx,rdi
   14001356a:	lea    rcx,[rbp+0x470]
   140013571:	call   0x140019808
   140013576:	test   eax,eax
   140013578:	je     0x14001357e
   14001357a:	mov    al,0x1
   14001357c:	jmp    0x140013580
   14001357e:	xor    al,al
   140013580:	mov    rcx,QWORD PTR [rbp+0xc70]
   140013587:	xor    rcx,rsp
   14001358a:	call   0x140055f90
   14001358f:	mov    rbx,QWORD PTR [rsp+0xdd0]
   140013597:	add    rsp,0xd80
   14001359e:	pop    r15
   1400135a0:	pop    r14
   1400135a2:	pop    r13
   1400135a4:	pop    r12
   1400135a6:	pop    rdi
   1400135a7:	pop    rsi
   1400135a8:	pop    rbp
   1400135a9:	ret    
   1400135aa:	int3   
   1400135ab:	int3   
   1400135ac:	rex push rdi
   1400135ae:	mov    eax,0x1070
   1400135b3:	call   0x140055f20
   1400135b8:	sub    rsp,rax
   1400135bb:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400135c4:	mov    QWORD PTR [rsp+0x1088],rbx
   1400135cc:	mov    QWORD PTR [rsp+0x1090],rsi
   1400135d4:	mov    rax,QWORD PTR [rip+0x6e905]        # 0x140081ee0
   1400135db:	xor    rax,rsp
   1400135de:	mov    QWORD PTR [rsp+0x1060],rax
   1400135e6:	mov    sil,dl
   1400135e9:	mov    rbx,rcx
   1400135ec:	lea    rcx,[rsp+0x30]
   1400135f1:	call   0x14002071c
   1400135f6:	nop
   1400135f7:	xor    r8d,r8d
   1400135fa:	mov    rdx,rbx
   1400135fd:	lea    rcx,[rsp+0x30]
   140013602:	call   0x140020c80
   140013607:	xor    ebx,ebx
   140013609:	test   al,al
   14001360b:	je     0x140013653
   14001360d:	mov    ecx,0x2000
   140013612:	call   0x14005d520
   140013617:	mov    rdi,rax
   14001361a:	test   rax,rax
   14001361d:	je     0x140013653
   14001361f:	mov    r8d,0x2000
   140013625:	mov    rdx,rax
   140013628:	lea    rcx,[rsp+0x30]
   14001362d:	call   0x140020ed4
   140013632:	test   eax,eax
   140013634:	jle    0x14001364a
   140013636:	movsxd rdx,eax
   140013639:	mov    r8b,sil
   14001363c:	mov    rcx,rdi
   14001363f:	call   0x140012f48
   140013644:	test   al,al
   140013646:	je     0x14001364a
   140013648:	mov    bl,0x1
   14001364a:	mov    rcx,rdi
   14001364d:	call   0x14005a938
   140013652:	nop
   140013653:	lea    rcx,[rsp+0x30]
   140013658:	call   0x140020758
   14001365d:	mov    al,bl
   14001365f:	mov    rcx,QWORD PTR [rsp+0x1060]
   140013667:	xor    rcx,rsp
   14001366a:	call   0x140055f90
   14001366f:	lea    r11,[rsp+0x1070]
   140013677:	mov    rbx,QWORD PTR [r11+0x18]
   14001367b:	mov    rsi,QWORD PTR [r11+0x20]
   14001367f:	mov    rsp,r11
   140013682:	pop    rdi
   140013683:	ret    
   140013684:	rex push rbx
   140013686:	push   rbp
   140013687:	push   rsi
   140013688:	push   rdi
   140013689:	push   r14
   14001368b:	sub    rsp,0x830
   140013692:	mov    rax,QWORD PTR [rip+0x6e847]        # 0x140081ee0
   140013699:	xor    rax,rsp
   14001369c:	mov    QWORD PTR [rsp+0x820],rax
   1400136a4:	mov    rdi,r8
   1400136a7:	mov    rsi,rdx
   1400136aa:	mov    r8d,0x5
   1400136b0:	lea    rdx,[rip+0x59ead]        # 0x14006d564
   1400136b7:	mov    rbx,r9
   1400136ba:	mov    rbp,rcx
   1400136bd:	call   0x14005e070
   1400136c2:	test   eax,eax
   1400136c4:	sete   r14b
   1400136c8:	test   r14b,r14b
   1400136cb:	je     0x140013716
   1400136cd:	mov    eax,0x400
   1400136d2:	lea    rcx,[rbp+0x5]
   1400136d6:	cmp    rbx,rax
   1400136d9:	lea    rdx,[rsp+0x20]
   1400136de:	cmova  rbx,rax
   1400136e2:	mov    r8,rbx
   1400136e5:	call   0x140048b04
   1400136ea:	test   rsi,rsi
   1400136ed:	je     0x1400136ff
   1400136ef:	mov    r8,rbx
   1400136f2:	lea    rcx,[rsp+0x20]
   1400136f7:	mov    rdx,rsi
   1400136fa:	call   0x140048ca8
   1400136ff:	test   rdi,rdi
   140013702:	je     0x14001373c
   140013704:	mov    r8,rbx
   140013707:	lea    rdx,[rsp+0x20]
   14001370c:	mov    rcx,rdi
   14001370f:	call   0x14005e00c
   140013714:	jmp    0x14001373c
   140013716:	test   rsi,rsi
   140013719:	je     0x140013729
   14001371b:	mov    r8,rbx
   14001371e:	mov    rdx,rbp
   140013721:	mov    rcx,rsi
   140013724:	call   0x14005e100
   140013729:	test   rdi,rdi
   14001372c:	je     0x14001373c
   14001372e:	mov    r8,rbx
   140013731:	mov    rdx,rdi
   140013734:	mov    rcx,rbp
   140013737:	call   0x1400489f0
   14001373c:	mov    al,r14b
   14001373f:	mov    rcx,QWORD PTR [rsp+0x820]
   140013747:	xor    rcx,rsp
   14001374a:	call   0x140055f90
   14001374f:	add    rsp,0x830
   140013756:	pop    r14
   140013758:	pop    rdi
   140013759:	pop    rsi
   14001375a:	pop    rbp
   14001375b:	pop    rbx
   14001375c:	ret    
   14001375d:	int3   
   14001375e:	int3   
   14001375f:	int3   
   140013760:	mov    QWORD PTR [rsp+0x8],rbx
   140013765:	mov    QWORD PTR [rsp+0x10],rdi
   14001376a:	mov    BYTE PTR [r8],0x0
   14001376e:	mov    rdi,r9
   140013771:	cmp    QWORD PTR [rdx],0x0
   140013775:	mov    r10,r8
   140013778:	mov    r11,rcx
   14001377b:	jbe    0x14001379a
   14001377d:	mov    rax,QWORD PTR [rcx]
   140013780:	cmp    BYTE PTR [rax],0xd
   140013783:	je     0x14001378a
   140013785:	cmp    BYTE PTR [rax],0xa
   140013788:	jne    0x140013796
   14001378a:	inc    rax
   14001378d:	mov    QWORD PTR [rcx],rax
   140013790:	sub    QWORD PTR [rdx],0x1
   140013794:	jne    0x14001377d
   140013796:	cmp    QWORD PTR [rdx],0x0
   14001379a:	jne    0x1400137a0
   14001379c:	xor    al,al
   14001379e:	jmp    0x1400137e7
   1400137a0:	xor    ecx,ecx
   1400137a2:	cmp    QWORD PTR [rdx],rcx
   1400137a5:	jbe    0x1400137e0
   1400137a7:	lea    ebx,[rcx+0x1]
   1400137aa:	sub    rbx,r8
   1400137ad:	mov    rax,QWORD PTR [r11]
   1400137b0:	mov    r9b,BYTE PTR [rax]
   1400137b3:	inc    rax
   1400137b6:	mov    QWORD PTR [r11],rax
   1400137b9:	dec    QWORD PTR [rdx]
   1400137bc:	cmp    r9b,0xd
   1400137c0:	je     0x1400137e0
   1400137c2:	cmp    r9b,0xa
   1400137c6:	je     0x1400137e0
   1400137c8:	lea    rax,[rbx+r8*1]
   1400137cc:	cmp    rax,rdi
   1400137cf:	jae    0x1400137da
   1400137d1:	inc    rcx
   1400137d4:	mov    BYTE PTR [r8],r9b
   1400137d7:	inc    r8
   1400137da:	cmp    QWORD PTR [rdx],0x0
   1400137de:	ja     0x1400137ad
   1400137e0:	mov    BYTE PTR [rcx+r10*1],0x0
   1400137e5:	mov    al,0x1
   1400137e7:	mov    rbx,QWORD PTR [rsp+0x8]
   1400137ec:	mov    rdi,QWORD PTR [rsp+0x10]
   1400137f1:	ret    
   1400137f2:	int3   
   1400137f3:	int3   
   1400137f4:	rex push rbp
   1400137f6:	push   r12
   1400137f8:	push   r14
   1400137fa:	lea    rbp,[rsp-0x3fa0]
   140013802:	mov    eax,0x40a0
   140013807:	call   0x140055f20
   14001380c:	sub    rsp,rax
   14001380f:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140013818:	mov    QWORD PTR [rsp+0x40c0],rbx
   140013820:	mov    QWORD PTR [rsp+0x40c8],rsi
   140013828:	mov    QWORD PTR [rsp+0x40d0],rdi
   140013830:	mov    rax,QWORD PTR [rip+0x6e6a9]        # 0x140081ee0
   140013837:	xor    rax,rsp
   14001383a:	mov    QWORD PTR [rbp+0x3f90],rax
   140013841:	mov    r14b,cl
   140013844:	xor    esi,esi
   140013846:	xor    r9d,r9d
   140013849:	mov    r12d,0x800
   14001384f:	mov    r8d,r12d
   140013852:	lea    rdx,[rbp+0x1f90]
   140013859:	xor    ecx,ecx
   14001385b:	call   0x140031278
   140013860:	test   al,al
   140013862:	je     0x14001393b
   140013868:	lea    rax,[rip+0x59c91]        # 0x14006d500
   14001386f:	mov    QWORD PTR [rsp+0x20],rax
   140013874:	xor    ebx,ebx
   140013876:	lea    rdi,[rsp+0x20]
   14001387b:	mov    r9,r12
   14001387e:	lea    r8,[rbp+0x2f90]
   140013885:	mov    rdx,QWORD PTR [rdi]
   140013888:	lea    rcx,[rbp+0x1f90]
   14001388f:	call   0x1400322b0
   140013894:	lea    rcx,[rsp+0x30]
   140013899:	call   0x14002324c
   14001389e:	nop
   14001389f:	lea    rdx,[rbp+0x2f90]
   1400138a6:	lea    rcx,[rsp+0x30]
   1400138ab:	call   0x1400233f4
   1400138b0:	and    QWORD PTR [rbp+0x1f50],0x0
   1400138b8:	and    QWORD PTR [rbp+0x1f58],0x0
   1400138c0:	and    QWORD PTR [rbp+0x1f60],0x0
   1400138c8:	jmp    0x1400138dd
   1400138ca:	mov    dl,r14b
   1400138cd:	lea    rcx,[rbp+0xf40]
   1400138d4:	call   0x1400135ac
   1400138d9:	test   al,al
   1400138db:	jne    0x14001392d
   1400138dd:	xor    r8d,r8d
   1400138e0:	lea    rdx,[rbp+0xf40]
   1400138e7:	lea    rcx,[rsp+0x30]
   1400138ec:	call   0x1400232f8
   1400138f1:	test   al,al
   1400138f3:	jne    0x1400138ca
   1400138f5:	lea    rcx,[rsp+0x30]
   1400138fa:	call   0x140023264
   1400138ff:	inc    ebx
   140013901:	add    rdi,0x8
   140013905:	cmp    ebx,0x1
   140013908:	jb     0x14001387b
   14001390e:	inc    esi
   140013910:	xor    r9d,r9d
   140013913:	mov    r8,r12
   140013916:	lea    rdx,[rbp+0x1f90]
   14001391d:	mov    ecx,esi
   14001391f:	call   0x140031278
   140013924:	test   al,al
   140013926:	je     0x14001393b
   140013928:	jmp    0x140013874
   14001392d:	lea    rcx,[rsp+0x30]
   140013932:	call   0x140023264
   140013937:	mov    al,0x1
   140013939:	jmp    0x14001393d
   14001393b:	xor    al,al
   14001393d:	mov    rcx,QWORD PTR [rbp+0x3f90]
   140013944:	xor    rcx,rsp
   140013947:	call   0x140055f90
   14001394c:	lea    r11,[rsp+0x40a0]
   140013954:	mov    rbx,QWORD PTR [r11+0x20]
   140013958:	mov    rsi,QWORD PTR [r11+0x28]
   14001395c:	mov    rdi,QWORD PTR [r11+0x30]
   140013960:	mov    rsp,r11
   140013963:	pop    r14
   140013965:	pop    r12
   140013967:	pop    rbp
   140013968:	ret    
   140013969:	int3   
   14001396a:	int3   
   14001396b:	int3   
   14001396c:	mov    QWORD PTR [rsp+0x8],rbx
   140013971:	mov    QWORD PTR [rsp+0x10],rbp
   140013976:	mov    QWORD PTR [rsp+0x18],rsi
   14001397b:	push   rdi
   14001397c:	sub    rsp,0x20
   140013980:	xor    edi,edi
   140013982:	movsxd rbp,edx
   140013985:	mov    rbx,rcx
   140013988:	test   edx,edx
   14001398a:	jle    0x1400139b6
   14001398c:	mov    rsi,rcx
   14001398f:	neg    rsi
   140013992:	movsx  ecx,BYTE PTR [rbx]
   140013995:	call   0x140045d18
   14001399a:	test   al,al
   14001399c:	je     0x1400139b6
   14001399e:	movsx  eax,BYTE PTR [rbx]
   1400139a1:	lea    ecx,[rdi-0x6]
   1400139a4:	inc    rbx
   1400139a7:	lea    ecx,[rdi+rcx*4]
   1400139aa:	lea    edi,[rax+rcx*2]
   1400139ad:	lea    rcx,[rsi+rbx*1]
   1400139b1:	cmp    rcx,rbp
   1400139b4:	jl     0x140013992
   1400139b6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400139bb:	mov    eax,edi
   1400139bd:	mov    rbp,QWORD PTR [rsp+0x38]
   1400139c2:	mov    rsi,QWORD PTR [rsp+0x40]
   1400139c7:	add    rsp,0x20
   1400139cb:	pop    rdi
   1400139cc:	ret    
   1400139cd:	int3   
   1400139ce:	int3   
   1400139cf:	int3   
   1400139d0:	mov    QWORD PTR [rsp+0x8],rcx
   1400139d5:	push   rbx
   1400139d6:	sub    rsp,0x30
   1400139da:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400139e3:	mov    rbx,rcx
   1400139e6:	call   0x140026668
   1400139eb:	nop
   1400139ec:	lea    rcx,[rbx+0xa408]
   1400139f3:	call   0x140046194
   1400139f8:	nop
   1400139f9:	lea    rcx,[rbx+0xa4c0]
   140013a00:	call   0x140046194
   140013a05:	nop
   140013a06:	lea    rcx,[rbx+0xa578]
   140013a0d:	call   0x140046194
   140013a12:	nop
   140013a13:	lea    rcx,[rbx+0xa630]
   140013a1a:	call   0x140046194
   140013a1f:	nop
   140013a20:	lea    rcx,[rbx+0xa6e8]
   140013a27:	call   0x140046194
   140013a2c:	nop
   140013a2d:	mov    rcx,rbx
   140013a30:	call   0x140013f44
   140013a35:	nop
   140013a36:	mov    rax,rbx
   140013a39:	add    rsp,0x30
   140013a3d:	pop    rbx
   140013a3e:	ret    
   140013a3f:	int3   
   140013a40:	mov    QWORD PTR [rsp+0x8],rbx
   140013a45:	mov    QWORD PTR [rsp+0x10],rsi
   140013a4a:	push   rdi
   140013a4b:	sub    rsp,0x20
   140013a4f:	add    QWORD PTR [rcx+0x8],rdx
   140013a53:	mov    rbx,rcx
   140013a56:	mov    rax,QWORD PTR [rcx+0x8]
   140013a5a:	cmp    rax,QWORD PTR [rcx+0x10]
   140013a5e:	jbe    0x140013ad2
   140013a60:	mov    r8,QWORD PTR [rcx+0x18]
   140013a64:	test   r8,r8
   140013a67:	je     0x140013a8d
   140013a69:	cmp    rax,r8
   140013a6c:	jbe    0x140013a8d
   140013a6e:	lea    rdx,[rip+0x59ccb]        # 0x14006d740
   140013a75:	lea    rcx,[rip+0x80de4]        # 0x140094860
   140013a7c:	call   0x14001bc8c
   140013a81:	lea    rcx,[rip+0x80dd8]        # 0x140094860
   140013a88:	call   0x14001bd24
   140013a8d:	mov    rdx,QWORD PTR [rbx+0x10]
   140013a91:	mov    rcx,QWORD PTR [rbx]
   140013a94:	mov    rax,rdx
   140013a97:	shr    rax,0x2
   140013a9b:	lea    rdi,[rdx+0x20]
   140013a9f:	add    rdi,rax
   140013aa2:	cmp    QWORD PTR [rbx+0x8],rdi
   140013aa6:	cmova  rdi,QWORD PTR [rbx+0x8]
   140013aab:	mov    rdx,rdi
   140013aae:	shl    rdx,0x3
   140013ab2:	call   0x14005a940
   140013ab7:	mov    rsi,rax
   140013aba:	test   rax,rax
   140013abd:	jne    0x140013acb
   140013abf:	lea    rcx,[rip+0x80d9a]        # 0x140094860
   140013ac6:	call   0x14001bd24
   140013acb:	mov    QWORD PTR [rbx],rsi
   140013ace:	mov    QWORD PTR [rbx+0x10],rdi
   140013ad2:	mov    rbx,QWORD PTR [rsp+0x30]
   140013ad7:	mov    rsi,QWORD PTR [rsp+0x38]
   140013adc:	add    rsp,0x20
   140013ae0:	pop    rdi
   140013ae1:	ret    
   140013ae2:	int3   
   140013ae3:	int3   
   140013ae4:	add    rcx,0xa630
   140013aeb:	jmp    0x1400461bc
   140013af0:	mov    QWORD PTR [rsp+0x8],rbx
   140013af5:	mov    QWORD PTR [rsp+0x10],rsi
   140013afa:	push   rdi
   140013afb:	sub    rsp,0x20
   140013aff:	mov    rsi,rdx
   140013b02:	xor    r8d,r8d
   140013b05:	xor    edx,edx
   140013b07:	mov    rdi,rcx
   140013b0a:	call   0x140045b10
   140013b0f:	mov    rbx,rax
   140013b12:	test   rax,rax
   140013b15:	jne    0x140013b1b
   140013b17:	xor    eax,eax
   140013b19:	jmp    0x140013b44
   140013b1b:	sub    rbx,rdi
   140013b1e:	sar    rbx,1
   140013b21:	add    rbx,0x2
   140013b25:	lea    rcx,[rbx+rbx*1]
   140013b29:	call   0x14005d520
   140013b2e:	mov    QWORD PTR [rsi],rax
   140013b31:	test   rax,rax
   140013b34:	je     0x140013b17
   140013b36:	mov    r8,rbx
   140013b39:	mov    rdx,rax
   140013b3c:	mov    rcx,rdi
   140013b3f:	call   0x140045b10
   140013b44:	mov    rbx,QWORD PTR [rsp+0x30]
   140013b49:	mov    rsi,QWORD PTR [rsp+0x38]
   140013b4e:	add    rsp,0x20
   140013b52:	pop    rdi
   140013b53:	ret    
   140013b54:	xor    eax,eax
   140013b56:	cmp    DWORD PTR [rcx+0xa4e8],eax
   140013b5c:	ja     0x140013ba5
   140013b5e:	cmp    DWORD PTR [rcx+0xa5a0],eax
   140013b64:	ja     0x140013ba5
   140013b66:	cmp    QWORD PTR [rcx+0x62d8],rax
   140013b6d:	jne    0x140013ba5
   140013b6f:	cmp    QWORD PTR [rcx+0x62e0],rax
   140013b76:	jne    0x140013ba5
   140013b78:	movabs rdx,0x7fffffff7fffffff
   140013b82:	cmp    QWORD PTR [rcx+0x62e8],rdx
   140013b89:	jne    0x140013ba5
   140013b8b:	cmp    QWORD PTR [rcx+0x62f0],rdx
   140013b92:	jne    0x140013ba5
   140013b94:	cmp    DWORD PTR [rcx],eax
   140013b96:	jne    0x140013ba5
   140013b98:	cmp    BYTE PTR [rcx+0x8],al
   140013b9b:	jne    0x140013ba5
   140013b9d:	cmp    BYTE PTR [rcx+0x615d],al
   140013ba3:	je     0x140013baa
   140013ba5:	mov    eax,0x1
   140013baa:	ret    
   140013bab:	int3   
   140013bac:	rex push rbx
   140013bae:	sub    rsp,0x20
   140013bb2:	mov    ecx,0xe56
   140013bb7:	mov    rbx,rdx
   140013bba:	call   0x140040118
   140013bbf:	mov    rcx,rax
   140013bc2:	mov    rdx,rbx
   140013bc5:	call   0x14001796c
   140013bca:	mov    edx,0x7
   140013bcf:	lea    rcx,[rip+0x80c8a]        # 0x140094860
   140013bd6:	add    rsp,0x20
   140013bda:	pop    rbx
   140013bdb:	jmp    0x14001bc60
   140013be0:	mov    QWORD PTR [rsp+0x10],rbx
   140013be5:	push   rbp
   140013be6:	push   rsi
   140013be7:	push   rdi
   140013be8:	push   r12
   140013bea:	push   r13
   140013bec:	push   r14
   140013bee:	push   r15
   140013bf0:	lea    rbp,[rsp-0x2f40]
   140013bf8:	mov    eax,0x3040
   140013bfd:	call   0x140055f20
   140013c02:	sub    rsp,rax
   140013c05:	mov    rax,QWORD PTR [rip+0x6e2d4]        # 0x140081ee0
   140013c0c:	xor    rax,rsp
   140013c0f:	mov    QWORD PTR [rbp+0x2f30],rax
   140013c16:	mov    r13b,dl
   140013c19:	mov    r14,rcx
   140013c1c:	xor    edx,edx
   140013c1e:	mov    rcx,r8
   140013c21:	mov    r12b,r9b
   140013c24:	mov    r15,r8
   140013c27:	call   0x140030fe4
   140013c2c:	xor    edi,edi
   140013c2e:	mov    rcx,r14
   140013c31:	mov    WORD PTR [rbp+0xf20],di
   140013c38:	mov    rsi,rax
   140013c3b:	call   0x1400463a0
   140013c40:	mov    r8d,0x800
   140013c46:	lea    rdx,[rsp+0x20]
   140013c4b:	mov    rcx,r14
   140013c4e:	call   0x140046290
   140013c53:	test   al,al
   140013c55:	je     0x140013d4f
   140013c5b:	lea    rcx,[rsp+0x20]
   140013c60:	call   0x140032798
   140013c65:	mov    rbx,rax
   140013c68:	movzx  ecx,WORD PTR [rax]
   140013c6b:	call   0x140032274
   140013c70:	test   r13b,r13b
   140013c73:	je     0x140013c7e
   140013c75:	test   al,al
   140013c77:	je     0x140013c99
   140013c79:	mov    WORD PTR [rbx],di
   140013c7c:	jmp    0x140013c99
   140013c7e:	test   al,al
   140013c80:	je     0x140013c99
   140013c82:	mov    r8d,0x800
   140013c88:	lea    rdx,[rip+0x59a05]        # 0x14006d694
   140013c8f:	lea    rcx,[rsp+0x20]
   140013c94:	call   0x140046120
   140013c99:	test   r12b,r12b
   140013c9c:	je     0x140013cee
   140013c9e:	lea    rcx,[rsp+0x20]
   140013ca3:	call   0x140032174
   140013ca8:	test   al,al
   140013caa:	je     0x140013cee
   140013cac:	cmp    WORD PTR [rbp+0xf20],di
   140013cb3:	jne    0x140013cca
   140013cb5:	mov    r8d,0x800
   140013cbb:	lea    rdx,[rbp+0xf20]
   140013cc2:	mov    rcx,r15
   140013cc5:	call   0x140030ef4
   140013cca:	mov    r8d,DWORD PTR [rbp+0x2fa0]
   140013cd1:	lea    rdx,[rbp+0xf20]
   140013cd8:	lea    rcx,[rsp+0x20]
   140013cdd:	call   0x140026254
   140013ce2:	test   al,al
   140013ce4:	je     0x140013c40
   140013cea:	mov    al,0x1
   140013cec:	jmp    0x140013d51
   140013cee:	xor    edx,edx
   140013cf0:	lea    rcx,[rsp+0x20]
   140013cf5:	mov    rdi,rsi
   140013cf8:	call   0x140030fe4
   140013cfd:	mov    rbx,rax
   140013d00:	cmp    WORD PTR [rax],0x2a
   140013d04:	jne    0x140013d39
   140013d06:	movzx  ecx,WORD PTR [rax+0x2]
   140013d0a:	call   0x140032274
   140013d0f:	test   al,al
   140013d11:	je     0x140013d39
   140013d13:	mov    r8d,0x800
   140013d19:	mov    DWORD PTR [rbp+0x1f20],0x5c002e
   140013d23:	mov    rdx,rsi
   140013d26:	lea    rcx,[rbp+0x1f24]
   140013d2d:	call   0x140046158
   140013d32:	lea    rdi,[rbp+0x1f20]
   140013d39:	mov    r8d,DWORD PTR [rbp+0x2fa0]
   140013d40:	mov    rdx,rdi
   140013d43:	mov    rcx,rbx
   140013d46:	call   0x140026254
   140013d4b:	xor    edi,edi
   140013d4d:	jmp    0x140013ce2
   140013d4f:	xor    al,al
   140013d51:	mov    rcx,QWORD PTR [rbp+0x2f30]
   140013d58:	xor    rcx,rsp
   140013d5b:	call   0x140055f90
   140013d60:	mov    rbx,QWORD PTR [rsp+0x3088]
   140013d68:	add    rsp,0x3040
   140013d6f:	pop    r15
   140013d71:	pop    r14
   140013d73:	pop    r13
   140013d75:	pop    r12
   140013d77:	pop    rdi
   140013d78:	pop    rsi
   140013d79:	pop    rbp
   140013d7a:	ret    
   140013d7b:	int3   
   140013d7c:	mov    eax,0x10000
   140013d81:	cmp    QWORD PTR [rcx+0x10],rax
   140013d85:	je     0x140013da4
   140013d87:	add    rax,rax
   140013d8a:	movabs rdx,0x100000000
   140013d94:	cmp    rax,rdx
   140013d97:	jbe    0x140013d81
   140013d99:	mov    QWORD PTR [rcx+0x10],0x400000
   140013da1:	xor    al,al
   140013da3:	ret    
   140013da4:	mov    al,0x1
   140013da6:	ret    
   140013da7:	int3   
   140013da8:	mov    rax,rsp
   140013dab:	mov    QWORD PTR [rax+0x8],rbx
   140013daf:	mov    QWORD PTR [rax+0x10],rbp
   140013db3:	mov    QWORD PTR [rax+0x18],rsi
   140013db7:	push   rdi
   140013db8:	sub    rsp,0x30
   140013dbc:	mov    sil,r8b
   140013dbf:	mov    DWORD PTR [rax-0x18],0x5
   140013dc6:	mov    r8,rdx
   140013dc9:	mov    rbp,rdx
   140013dcc:	mov    rbx,rcx
   140013dcf:	mov    dl,sil
   140013dd2:	add    rcx,0xa4c0
   140013dd9:	mov    dil,r9b
   140013ddc:	call   0x140013be0
   140013de1:	test   al,al
   140013de3:	je     0x140013de9
   140013de5:	mov    al,0x1
   140013de7:	jmp    0x140013e1f
   140013de9:	cmp    BYTE PTR [rsp+0x60],0x0
   140013dee:	je     0x140013e1d
   140013df0:	cmp    DWORD PTR [rbx+0xa5a0],0x0
   140013df7:	je     0x140013e1d
   140013df9:	lea    rcx,[rbx+0xa578]
   140013e00:	mov    DWORD PTR [rsp+0x20],0x5
   140013e08:	mov    r9b,dil
   140013e0b:	mov    r8,rbp
   140013e0e:	mov    dl,sil
   140013e11:	call   0x140013be0
   140013e16:	test   al,al
   140013e18:	sete   al
   140013e1b:	jmp    0x140013e1f
   140013e1d:	xor    al,al
   140013e1f:	mov    rbx,QWORD PTR [rsp+0x40]
   140013e24:	mov    rbp,QWORD PTR [rsp+0x48]
   140013e29:	mov    rsi,QWORD PTR [rsp+0x50]
   140013e2e:	add    rsp,0x30
   140013e32:	pop    rdi
   140013e33:	ret    
   140013e34:	mov    eax,0x400
   140013e39:	test   eax,edx
   140013e3b:	je     0x140013e44
   140013e3d:	test   DWORD PTR [rcx],eax
   140013e3f:	je     0x140013e44
   140013e41:	mov    al,0x1
   140013e43:	ret    
   140013e44:	xor    al,al
   140013e46:	ret    
   140013e47:	int3   
   140013e48:	movsxd r8,r8d
   140013e4b:	add    rcx,0xa630
   140013e52:	jmp    0x140046290
   140013e57:	int3   
   140013e58:	mov    QWORD PTR [rsp+0x8],rbx
   140013e5d:	mov    QWORD PTR [rsp+0x10],rsi
   140013e62:	push   rdi
   140013e63:	sub    rsp,0x20
   140013e67:	movzx  ecx,WORD PTR [rdx]
   140013e6a:	mov    rdi,rdx
   140013e6d:	call   0x140045d18
   140013e72:	xor    esi,esi
   140013e74:	test   al,al
   140013e76:	je     0x140013e87
   140013e78:	xor    r8d,r8d
   140013e7b:	xor    edx,edx
   140013e7d:	mov    rcx,rdi
   140013e80:	call   0x14005dfdc
   140013e85:	jmp    0x140013ed1
   140013e87:	mov    ebx,esi
   140013e89:	jmp    0x140013ec7
   140013e8b:	movzx  ecx,ax
   140013e8e:	call   0x140048f28
   140013e93:	sub    eax,0x41
   140013e96:	je     0x140013ec0
   140013e98:	sub    eax,0x3
   140013e9b:	je     0x140013ebb
   140013e9d:	sub    eax,0x4
   140013ea0:	je     0x140013eb6
   140013ea2:	sub    eax,0xa
   140013ea5:	je     0x140013eb1
   140013ea7:	sub    eax,0x1
   140013eaa:	jne    0x140013ec3
   140013eac:	or     ebx,0x4
   140013eaf:	jmp    0x140013ec3
   140013eb1:	or     ebx,0x1
   140013eb4:	jmp    0x140013ec3
   140013eb6:	or     ebx,0x2
   140013eb9:	jmp    0x140013ec3
   140013ebb:	or     ebx,0x10
   140013ebe:	jmp    0x140013ec3
   140013ec0:	or     ebx,0x20
   140013ec3:	add    rdi,0x2
   140013ec7:	movzx  eax,WORD PTR [rdi]
   140013eca:	test   ax,ax
   140013ecd:	jne    0x140013e8b
   140013ecf:	mov    eax,ebx
   140013ed1:	mov    rbx,QWORD PTR [rsp+0x30]
   140013ed6:	mov    rsi,QWORD PTR [rsp+0x38]
   140013edb:	add    rsp,0x20
   140013edf:	pop    rdi
   140013ee0:	ret    
   140013ee1:	int3   
   140013ee2:	int3   
   140013ee3:	int3   
   140013ee4:	mov    QWORD PTR [rsp+0x8],rbx
   140013ee9:	mov    QWORD PTR [rsp+0x10],rsi
   140013eee:	push   rdi
   140013eef:	sub    rsp,0x20
   140013ef3:	cmp    WORD PTR [rdx],0x2d
   140013ef7:	mov    rdi,rdx
   140013efa:	jne    0x140013f00
   140013efc:	xor    eax,eax
   140013efe:	jmp    0x140013f33
   140013f00:	xor    esi,esi
   140013f02:	cmp    WORD PTR [rdx],si
   140013f05:	jne    0x140013f0c
   140013f07:	mov    eax,r8d
   140013f0a:	jmp    0x140013f33
   140013f0c:	mov    rcx,rdx
   140013f0f:	call   0x140048f08
   140013f14:	mov    ebx,eax
   140013f16:	cmp    eax,0x64
   140013f19:	jg     0x140013f31
   140013f1b:	lea    rdx,[rip+0x597de]        # 0x14006d700
   140013f22:	mov    rcx,rdi
   140013f25:	call   0x14005d4b0
   140013f2a:	test   rax,rax
   140013f2d:	je     0x140013f31
   140013f2f:	neg    ebx
   140013f31:	mov    eax,ebx
   140013f33:	mov    rbx,QWORD PTR [rsp+0x30]
   140013f38:	mov    rsi,QWORD PTR [rsp+0x38]
   140013f3d:	add    rsp,0x20
   140013f41:	pop    rdi
   140013f42:	ret    
   140013f43:	int3   
   140013f44:	rex push rbx
   140013f46:	sub    rsp,0x20
   140013f4a:	mov    rbx,rcx
   140013f4d:	call   0x140026704
   140013f52:	xor    eax,eax
   140013f54:	lea    rcx,[rbx+0xa408]
   140013f5b:	mov    QWORD PTR [rbx+0x83dc],rax
   140013f62:	mov    WORD PTR [rbx+0x9402],ax
   140013f69:	mov    BYTE PTR [rbx+0x83d8],al
   140013f6f:	call   0x140046378
   140013f74:	lea    rcx,[rbx+0xa4c0]
   140013f7b:	call   0x140046378
   140013f80:	lea    rcx,[rbx+0xa578]
   140013f87:	call   0x140046378
   140013f8c:	lea    rcx,[rbx+0xa6e8]
   140013f93:	call   0x140046378
   140013f98:	lea    rcx,[rbx+0xa630]
   140013f9f:	call   0x140046378
   140013fa4:	lea    rcx,[rbx+0x6178]
   140013fab:	add    rsp,0x20
   140013faf:	pop    rbx
   140013fb0:	jmp    0x140009a60
   140013fb5:	int3   
   140013fb6:	int3   
   140013fb7:	int3   
   140013fb8:	mov    rax,rsp
   140013fbb:	mov    QWORD PTR [rax+0x8],rbx
   140013fbf:	mov    QWORD PTR [rax+0x10],rbp
   140013fc3:	mov    QWORD PTR [rax+0x18],rsi
   140013fc7:	mov    QWORD PTR [rax+0x20],rdi
   140013fcb:	push   r12
   140013fcd:	push   r13
   140013fcf:	push   r14
   140013fd1:	sub    rsp,0x30
   140013fd5:	mov    rsi,QWORD PTR [rsp+0x70]
   140013fda:	mov    rbx,rcx
   140013fdd:	xor    ecx,ecx
   140013fdf:	mov    r13d,r9d
   140013fe2:	mov    r12,r8
   140013fe5:	mov    rdi,rdx
   140013fe8:	test   rsi,rsi
   140013feb:	je     0x140013ff6
   140013fed:	cmp    DWORD PTR [rsp+0x78],ecx
   140013ff1:	jbe    0x140013ff6
   140013ff3:	mov    WORD PTR [rsi],cx
   140013ff6:	lea    r14,[rdx+0x20]
   140013ffa:	or     rax,0xffffffffffffffff
   140013ffe:	inc    rax
   140014001:	cmp    WORD PTR [r14+rax*2],cx
   140014006:	jne    0x140013ffe
   140014008:	cmp    rax,0x800
   14001400e:	jae    0x1400140ac
   140014014:	mov    bpl,BYTE PTR [rdx+0x10f1]
   14001401b:	xor    r9d,r9d
   14001401e:	mov    r8b,bpl
   140014021:	mov    BYTE PTR [rsp+0x20],0x1
   140014026:	mov    rdx,r14
   140014029:	mov    rcx,rbx
   14001402c:	call   0x140013da8
   140014031:	test   al,al
   140014033:	jne    0x1400140ac
   140014035:	lea    rdx,[rdi+0x1040]
   14001403c:	mov    rcx,rbx
   14001403f:	call   0x1400166c4
   140014044:	test   al,al
   140014046:	jne    0x1400140ac
   140014048:	mov    eax,DWORD PTR [rdi+0x1c]
   14001404b:	test   DWORD PTR [rbx],eax
   14001404d:	jne    0x1400140ac
   14001404f:	cmp    BYTE PTR [rbx+0x8],0x0
   140014053:	je     0x14001405a
   140014055:	test   DWORD PTR [rbx+0x4],eax
   140014058:	je     0x1400140ac
   14001405a:	test   bpl,bpl
   14001405d:	jne    0x140014072
   14001405f:	mov    rdx,QWORD PTR [rdi+0x1060]
   140014066:	mov    rcx,rbx
   140014069:	call   0x140016644
   14001406e:	test   al,al
   140014070:	jne    0x1400140ac
   140014072:	lea    rbp,[rbx+0xa408]
   140014079:	mov    rcx,rbp
   14001407c:	call   0x1400463a0
   140014081:	mov    edi,0x1
   140014086:	jmp    0x14001409c
   140014088:	mov    r8d,r13d
   14001408b:	mov    rdx,r14
   14001408e:	mov    rcx,rbx
   140014091:	call   0x140026254
   140014096:	test   al,al
   140014098:	jne    0x1400140cd
   14001409a:	inc    edi
   14001409c:	mov    rcx,rbp
   14001409f:	call   0x140046230
   1400140a4:	mov    rbx,rax
   1400140a7:	test   rax,rax
   1400140aa:	jne    0x140014088
   1400140ac:	xor    eax,eax
   1400140ae:	mov    rbx,QWORD PTR [rsp+0x50]
   1400140b3:	mov    rbp,QWORD PTR [rsp+0x58]
   1400140b8:	mov    rsi,QWORD PTR [rsp+0x60]
   1400140bd:	mov    rdi,QWORD PTR [rsp+0x68]
   1400140c2:	add    rsp,0x30
   1400140c6:	pop    r14
   1400140c8:	pop    r13
   1400140ca:	pop    r12
   1400140cc:	ret    
   1400140cd:	test   r12,r12
   1400140d0:	je     0x1400140e6
   1400140d2:	mov    rdx,r14
   1400140d5:	mov    rcx,rbx
   1400140d8:	call   0x140046118
   1400140dd:	test   eax,eax
   1400140df:	sete   dl
   1400140e2:	mov    BYTE PTR [r12],dl
   1400140e6:	test   rsi,rsi
   1400140e9:	je     0x1400140fb
   1400140eb:	mov    r8d,DWORD PTR [rsp+0x78]
   1400140f0:	mov    rdx,rbx
   1400140f3:	mov    rcx,rsi
   1400140f6:	call   0x140046158
   1400140fb:	mov    eax,edi
   1400140fd:	jmp    0x1400140ae
   1400140ff:	int3   
   140014100:	mov    QWORD PTR [rsp+0x8],rbx
   140014105:	mov    QWORD PTR [rsp+0x10],rsi
   14001410a:	push   rdi
   14001410b:	sub    rsp,0x20
   14001410f:	mov    esi,edx
   140014111:	call   0x14001416c
   140014116:	lea    rbx,[rip+0x6d0c3]        # 0x1400811e0
   14001411d:	mov    edi,0x78
   140014122:	cmp    DWORD PTR [rbx],0xcc6
   140014128:	je     0x140014139
   14001412a:	mov    ecx,DWORD PTR [rbx]
   14001412c:	call   0x140040118
   140014131:	mov    rcx,rax
   140014134:	call   0x14001796c
   140014139:	add    rbx,0x4
   14001413d:	sub    rdi,0x1
   140014141:	jne    0x140014122
   140014143:	lea    rcx,[rip+0x59546]        # 0x14006d690
   14001414a:	call   0x14001796c
   14001414f:	mov    edx,esi
   140014151:	lea    rcx,[rip+0x80708]        # 0x140094860
   140014158:	mov    rbx,QWORD PTR [rsp+0x30]
   14001415d:	mov    rsi,QWORD PTR [rsp+0x38]
   140014162:	add    rsp,0x20
   140014166:	pop    rdi
   140014167:	jmp    0x14001bc60
   14001416c:	mov    QWORD PTR [rsp+0x8],rbx
   140014171:	push   rdi
   140014172:	sub    rsp,0x2e0
   140014179:	mov    rax,QWORD PTR [rip+0x6dd60]        # 0x140081ee0
   140014180:	xor    rax,rsp
   140014183:	mov    QWORD PTR [rsp+0x2d0],rax
   14001418b:	cmp    BYTE PTR [rcx+0x83e0],0x0
   140014192:	mov    rbx,rcx
   140014195:	jne    0x1400142a5
   14001419b:	cmp    BYTE PTR [rcx+0x6151],0x0
   1400141a2:	jne    0x1400142a5
   1400141a8:	cmp    BYTE PTR [rip+0x6edc6],0x0        # 0x140082f75
   1400141af:	jne    0x1400142a5
   1400141b5:	mov    r9d,0x5
   1400141bb:	mov    BYTE PTR [rip+0x6edb3],0x1        # 0x140082f75
   1400141c2:	lea    r8,[rip+0x59807]        # 0x14006d9d0
   1400141c9:	mov    DWORD PTR [rsp+0x20],0x28
   1400141d1:	lea    rcx,[rsp+0x30]
   1400141d6:	lea    edi,[r9+0x4b]
   1400141da:	mov    edx,edi
   1400141dc:	call   0x140006acc
   1400141e1:	mov    r8d,edi
   1400141e4:	lea    rdx,[rip+0x59639]        # 0x14006d824
   1400141eb:	lea    rcx,[rsp+0x30]
   1400141f0:	call   0x140046120
   1400141f5:	mov    ecx,0xbd2
   1400141fa:	call   0x140040118
   1400141ff:	mov    rdx,rax
   140014202:	lea    rcx,[rsp+0x30]
   140014207:	mov    r8d,edi
   14001420a:	call   0x140046120
   14001420f:	cmp    BYTE PTR [rbx+0x6153],0x0
   140014216:	jne    0x1400142c6
   14001421c:	lea    ecx,[rdi-0x49]
   14001421f:	call   0x14004747c
   140014224:	mov    ecx,0xbc6
   140014229:	mov    rbx,rax
   14001422c:	call   0x140040118
   140014231:	mov    r8d,0x7e0
   140014237:	lea    r9d,[rdi-0x41]
   14001423b:	mov    DWORD PTR [rsp+0x28],r8d
   140014240:	lea    rdx,[rsp+0x30]
   140014245:	mov    rcx,rax
   140014248:	mov    QWORD PTR [rsp+0x20],rbx
   14001424d:	call   0x14001796c
   140014252:	mov    r9d,0x100
   140014258:	lea    r8,[rsp+0xd0]
   140014260:	xor    edx,edx
   140014262:	lea    rcx,[rip+0x6e707]        # 0x140082970
   140014269:	call   0x140013684
   14001426e:	cmp    BYTE PTR [rip+0x6ecff],0x0        # 0x140082f74
   140014275:	je     0x140014293
   140014277:	mov    ecx,0xbc8
   14001427c:	call   0x140040118
   140014281:	mov    rcx,rax
   140014284:	lea    rdx,[rsp+0xd0]
   14001428c:	call   0x14001796c
   140014291:	jmp    0x1400142a5
   140014293:	mov    ecx,0xbca
   140014298:	call   0x140040118
   14001429d:	mov    rcx,rax
   1400142a0:	call   0x14001796c
   1400142a5:	mov    rcx,QWORD PTR [rsp+0x2d0]
   1400142ad:	xor    rcx,rsp
   1400142b0:	call   0x140055f90
   1400142b5:	mov    rbx,QWORD PTR [rsp+0x2f0]
   1400142bd:	add    rsp,0x2e0
   1400142c4:	pop    rdi
   1400142c5:	ret    
   1400142c6:	lea    rdx,[rsp+0x30]
   1400142cb:	lea    rcx,[rip+0x5970e]        # 0x14006d9e0
   1400142d2:	call   0x14001796c
   1400142d7:	xor    ecx,ecx
   1400142d9:	call   0x14005e50c
   1400142de:	int3   
   1400142df:	int3   
   1400142e0:	mov    QWORD PTR [rsp+0x18],rbx
   1400142e5:	push   rbp
   1400142e6:	push   rsi
   1400142e7:	push   rdi
   1400142e8:	push   r14
   1400142ea:	push   r15
   1400142ec:	mov    eax,0x10a0
   1400142f1:	call   0x140055f20
   1400142f6:	sub    rsp,rax
   1400142f9:	mov    rax,QWORD PTR [rip+0x6dbe0]        # 0x140081ee0
   140014300:	xor    rax,rsp
   140014303:	mov    QWORD PTR [rsp+0x1090],rax
   14001430b:	movzx  eax,WORD PTR [rdx]
   14001430e:	xor    r15d,r15d
   140014311:	add    eax,0xffffffd3
   140014314:	mov    rdi,rdx
   140014317:	mov    rbx,rcx
   14001431a:	test   eax,0xfffffffd
   14001431f:	jne    0x140014351
   140014321:	cmp    BYTE PTR [rcx+0x83d9],r15b
   140014328:	jne    0x140014351
   14001432a:	add    rdx,0x2
   14001432e:	cmp    WORD PTR [rdx],0x2d
   140014332:	jne    0x140014347
   140014334:	cmp    WORD PTR [rdi+0x4],r15w
   140014339:	jne    0x140014347
   14001433b:	mov    BYTE PTR [rcx+0x83d9],0x1
   140014342:	jmp    0x1400145ad
   140014347:	call   0x140014d8c
   14001434c:	jmp    0x1400145ad
   140014351:	lea    rsi,[rcx+0x83e2]
   140014358:	cmp    WORD PTR [rsi],r15w
   14001435c:	jne    0x14001440f
   140014362:	mov    r8d,0x810
   140014368:	mov    rcx,rsi
   14001436b:	call   0x14005e00c
   140014370:	movzx  ecx,WORD PTR [rsi]
   140014373:	call   0x140048f28
   140014378:	mov    ebp,0x53
   14001437d:	cmp    eax,ebp
   14001437f:	jne    0x1400143e4
   140014381:	lea    rax,[rbx+0x83e4]
   140014388:	cmp    WORD PTR [rax],r15w
   14001438c:	lea    rdi,[rip+0x59405]        # 0x14006d798
   140014393:	cmovne rdi,rax
   140014397:	mov    rcx,rdi
   14001439a:	call   0x1400327bc
   14001439f:	cmp    rax,rdi
   1400143a2:	jne    0x1400143cf
   1400143a4:	mov    rcx,rdi
   1400143a7:	call   0x140021dec
   1400143ac:	test   al,al
   1400143ae:	jne    0x1400143cf
   1400143b0:	lea    rdx,[rbx+0x1018]
   1400143b7:	mov    BYTE PTR [rsp+0x20],r15b
   1400143bc:	mov    r9b,0x1
   1400143bf:	mov    r8d,0x800
   1400143c5:	mov    rcx,rdi
   1400143c8:	call   0x140031b44
   1400143cd:	jmp    0x1400143e4
   1400143cf:	lea    rcx,[rbx+0x1018]
   1400143d6:	mov    r8d,0x800
   1400143dc:	mov    rdx,rdi
   1400143df:	call   0x140046158
   1400143e4:	movzx  ecx,WORD PTR [rsi]
   1400143e7:	call   0x140048f28
   1400143ec:	mov    WORD PTR [rsi],ax
   1400143ef:	cmp    ax,0x49
   1400143f3:	je     0x1400145ad
   1400143f9:	cmp    ax,bp
   1400143fc:	je     0x1400145ad
   140014402:	mov    rcx,rsi
   140014405:	call   0x140049008
   14001440a:	jmp    0x1400145ad
   14001440f:	add    rcx,0x9402
   140014416:	cmp    WORD PTR [rcx],r15w
   14001441a:	je     0x1400144a1
   140014420:	or     rax,0xffffffffffffffff
   140014424:	inc    rax
   140014427:	cmp    WORD PTR [rdx+rax*2],r15w
   14001442c:	jne    0x140014424
   14001442e:	test   rax,rax
   140014431:	jne    0x140014439
   140014433:	movzx  eax,r15w
   140014437:	jmp    0x14001443e
   140014439:	movzx  eax,WORD PTR [rdx+rax*2-0x2]
   14001443e:	movzx  ebp,ax
   140014441:	mov    ecx,ebp
   140014443:	call   0x140032138
   140014448:	test   al,al
   14001444a:	jne    0x14001445a
   14001444c:	mov    ecx,ebp
   14001444e:	call   0x140032274
   140014453:	mov    bpl,r15b
   140014456:	test   al,al
   140014458:	je     0x14001445d
   14001445a:	mov    bpl,0x1
   14001445d:	movzx  ecx,WORD PTR [rsi]
   140014460:	call   0x140048f28
   140014465:	movzx  edx,ax
   140014468:	lea    rcx,[rip+0x59399]        # 0x14006d808
   14001446f:	mov    esi,eax
   140014471:	call   0x1400590e0
   140014476:	test   rax,rax
   140014479:	setne  al
   14001447c:	cmp    si,0x58
   140014480:	je     0x14001448b
   140014482:	mov    r14b,r15b
   140014485:	cmp    si,0x45
   140014489:	jne    0x14001448e
   14001448b:	mov    r14b,0x1
   14001448e:	test   bpl,bpl
   140014491:	je     0x1400144b1
   140014493:	test   al,al
   140014495:	jne    0x1400144bb
   140014497:	lea    rcx,[rbx+0x201e]
   14001449e:	mov    rdx,rdi
   1400144a1:	mov    r8d,0x800
   1400144a7:	call   0x140046158
   1400144ac:	jmp    0x1400145ad
   1400144b1:	test   al,al
   1400144b3:	jne    0x1400144bb
   1400144b5:	cmp    si,0x54
   1400144b9:	jne    0x1400144d2
   1400144bb:	cmp    WORD PTR [rdi],0x40
   1400144bf:	jne    0x14001459e
   1400144c5:	cmp    DWORD PTR [rbx+0x83dc],0x1
   1400144cc:	je     0x14001459e
   1400144d2:	xor    r8d,r8d
   1400144d5:	mov    QWORD PTR [rsp+0x1050],r15
   1400144dd:	lea    rdx,[rsp+0x40]
   1400144e2:	mov    QWORD PTR [rsp+0x1058],r15
   1400144ea:	mov    rcx,rdi
   1400144ed:	mov    QWORD PTR [rsp+0x1060],r15
   1400144f5:	call   0x140023280
   1400144fa:	mov    sil,al
   1400144fd:	test   al,al
   1400144ff:	je     0x14001450a
   140014501:	cmp    DWORD PTR [rbx+0x83dc],0x2
   140014508:	jne    0x14001455d
   14001450a:	cmp    DWORD PTR [rbx+0x83dc],0x1
   140014511:	je     0x14001455d
   140014513:	cmp    WORD PTR [rdi],0x40
   140014517:	jne    0x14001455d
   140014519:	mov    rcx,rdi
   14001451c:	call   0x140032288
   140014521:	test   al,al
   140014523:	jne    0x14001455d
   140014525:	mov    eax,DWORD PTR [rbx+0x4024]
   14001452b:	lea    rdx,[rbx+0xa408]
   140014532:	mov    BYTE PTR [rsp+0x38],0x1
   140014537:	lea    rcx,[rdi+0x2]
   14001453b:	mov    BYTE PTR [rsp+0x30],0x1
   140014540:	mov    r9b,0x1
   140014543:	mov    BYTE PTR [rsp+0x28],0x1
   140014548:	xor    r8d,r8d
   14001454b:	mov    DWORD PTR [rsp+0x20],eax
   14001454f:	mov    BYTE PTR [rbx+0x83d8],0x1
   140014556:	call   0x140022ce4
   14001455b:	jmp    0x1400145ad
   14001455d:	test   sil,sil
   140014560:	je     0x14001459e
   140014562:	cmp    BYTE PTR [rsp+0x104c],r15b
   14001456a:	je     0x14001459e
   14001456c:	test   r14b,r14b
   14001456f:	je     0x14001459e
   140014571:	lea    rsi,[rbx+0x201e]
   140014578:	cmp    WORD PTR [rsi],r15w
   14001457c:	jne    0x14001459e
   14001457e:	mov    r8d,0x800
   140014584:	mov    rdx,rdi
   140014587:	mov    rcx,rsi
   14001458a:	call   0x140046158
   14001458f:	mov    edx,0x800
   140014594:	mov    rcx,rsi
   140014597:	call   0x140030e78
   14001459c:	jmp    0x1400145ad
   14001459e:	mov    rdx,rdi
   1400145a1:	lea    rcx,[rbx+0xa408]
   1400145a8:	call   0x1400461bc
   1400145ad:	mov    rcx,QWORD PTR [rsp+0x1090]
   1400145b5:	xor    rcx,rsp
   1400145b8:	call   0x140055f90
   1400145bd:	mov    rbx,QWORD PTR [rsp+0x10e0]
   1400145c5:	add    rsp,0x10a0
   1400145cc:	pop    r15
   1400145ce:	pop    r14
   1400145d0:	pop    rdi
   1400145d1:	pop    rsi
   1400145d2:	pop    rbp
   1400145d3:	ret    
   1400145d4:	mov    QWORD PTR [rsp+0x10],rbx
   1400145d9:	mov    QWORD PTR [rsp+0x18],rbp
   1400145de:	push   rsi
   1400145df:	push   r14
   1400145e1:	push   r15
   1400145e3:	sub    rsp,0x20
   1400145e7:	xor    r15d,r15d
   1400145ea:	mov    sil,dl
   1400145ed:	mov    WORD PTR [rcx+0x83e2],r15w
   1400145f5:	mov    rbx,rcx
   1400145f8:	mov    BYTE PTR [rcx+0x83d9],r15b
   1400145ff:	call   QWORD PTR [rip+0x57d43]        # 0x14006c348
   140014605:	mov    rcx,rax
   140014608:	mov    r14b,0x1
   14001460b:	jmp    0x14001463b
   14001460d:	test   r14b,r14b
   140014610:	jne    0x14001462b
   140014612:	mov    rdx,QWORD PTR [rsp+0x40]
   140014617:	mov    rcx,rbx
   14001461a:	test   sil,sil
   14001461d:	je     0x140014626
   14001461f:	call   0x1400147a4
   140014624:	jmp    0x14001462b
   140014626:	call   0x1400142e0
   14001462b:	mov    rcx,QWORD PTR [rsp+0x40]
   140014630:	call   0x14005a938
   140014635:	mov    rcx,rbp
   140014638:	mov    r14b,r15b
   14001463b:	lea    rdx,[rsp+0x40]
   140014640:	call   0x140013af0
   140014645:	mov    rbp,rax
   140014648:	test   rax,rax
   14001464b:	jne    0x14001460d
   14001464d:	test   sil,sil
   140014650:	jne    0x14001465a
   140014652:	mov    rcx,rbx
   140014655:	call   0x140014670
   14001465a:	mov    rbx,QWORD PTR [rsp+0x48]
   14001465f:	mov    rbp,QWORD PTR [rsp+0x50]
   140014664:	add    rsp,0x20
   140014668:	pop    r15
   14001466a:	pop    r14
   14001466c:	pop    rsi
   14001466d:	ret    
   14001466e:	int3   
   14001466f:	int3   
   140014670:	rex push rbx
   140014672:	sub    rsp,0x20
   140014676:	cmp    DWORD PTR [rcx+0xa430],0x0
   14001467d:	mov    rbx,rcx
   140014680:	jne    0x14001469e
   140014682:	cmp    BYTE PTR [rcx+0x83d8],0x0
   140014689:	jne    0x14001469e
   14001468b:	add    rcx,0xa408
   140014692:	lea    rdx,[rip+0x59033]        # 0x14006d6cc
   140014699:	call   0x1400461bc
   14001469e:	movzx  ecx,WORD PTR [rbx+0x83e2]
   1400146a5:	call   0x140048f28
   1400146aa:	lea    ecx,[rax-0x45]
   1400146ad:	cmp    cx,0x13
   1400146b1:	ja     0x1400146c4
   1400146b3:	movzx  ecx,cx
   1400146b6:	mov    edx,0x80801
   1400146bb:	bt     edx,ecx
   1400146be:	jae    0x1400146c4
   1400146c0:	mov    cl,0x1
   1400146c2:	jmp    0x1400146c6
   1400146c4:	xor    cl,cl
   1400146c6:	cmp    BYTE PTR [rbx+0x62f9],0x0
   1400146cd:	je     0x1400146da
   1400146cf:	test   cl,cl
   1400146d1:	je     0x1400146da
   1400146d3:	mov    BYTE PTR [rbx+0x62f9],0x0
   1400146da:	cmp    ax,0x4c
   1400146de:	je     0x1400146e6
   1400146e0:	cmp    ax,0x56
   1400146e4:	jne    0x1400146f7
   1400146e6:	cmp    WORD PTR [rbx+0x83e4],0x42
   1400146ee:	jne    0x1400146f7
   1400146f0:	mov    BYTE PTR [rbx+0x83e0],0x1
   1400146f7:	add    rsp,0x20
   1400146fb:	pop    rbx
   1400146fc:	ret    
   1400146fd:	int3   
   1400146fe:	int3   
   1400146ff:	int3   
   140014700:	rex push rsi
   140014702:	sub    rsp,0x50
   140014706:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001470f:	mov    QWORD PTR [rsp+0x60],rbx
   140014714:	mov    rsi,rcx
   140014717:	lea    rcx,[rip+0x58fbe]        # 0x14006d6dc
   14001471e:	call   0x14005e60c
   140014723:	mov    rbx,rax
   140014726:	test   rax,rax
   140014729:	je     0x140014796
   14001472b:	or     rdx,0xffffffffffffffff
   14001472f:	inc    rdx
   140014732:	cmp    BYTE PTR [rax+rdx*1],0x0
   140014736:	jne    0x14001472f
   140014738:	inc    rdx
   14001473b:	and    QWORD PTR [rsp+0x28],0x0
   140014741:	and    QWORD PTR [rsp+0x30],0x0
   140014747:	and    QWORD PTR [rsp+0x38],0x0
   14001474d:	and    QWORD PTR [rsp+0x40],0x0
   140014753:	lea    rcx,[rsp+0x28]
   140014758:	call   0x140007a44
   14001475d:	nop
   14001475e:	mov    r8,QWORD PTR [rsp+0x30]
   140014763:	mov    rdx,QWORD PTR [rsp+0x28]
   140014768:	mov    rcx,rbx
   14001476b:	call   0x1400489f0
   140014770:	mov    rdx,QWORD PTR [rsp+0x28]
   140014775:	mov    rcx,rsi
   140014778:	call   0x1400162d8
   14001477d:	mov    BYTE PTR [rsi+0x83e1],0x0
   140014784:	cmp    QWORD PTR [rsp+0x28],0x0
   14001478a:	je     0x140014796
   14001478c:	mov    rcx,QWORD PTR [rsp+0x28]
   140014791:	call   0x14005a938
   140014796:	mov    rbx,QWORD PTR [rsp+0x60]
   14001479b:	add    rsp,0x50
   14001479f:	pop    rsi
   1400147a0:	ret    
   1400147a1:	int3   
   1400147a2:	int3   
   1400147a3:	int3   
   1400147a4:	mov    QWORD PTR [rsp+0x8],rbx
   1400147a9:	mov    QWORD PTR [rsp+0x10],rsi
   1400147ae:	push   rdi
   1400147af:	sub    rsp,0x20
   1400147b3:	movzx  eax,WORD PTR [rdx]
   1400147b6:	xor    esi,esi
   1400147b8:	add    eax,0xffffffd3
   1400147bb:	mov    rdi,rdx
   1400147be:	mov    rbx,rcx
   1400147c1:	test   eax,0xfffffffd
   1400147c6:	jne    0x14001487d
   1400147cc:	cmp    BYTE PTR [rcx+0x83d9],sil
   1400147d3:	jne    0x14001487d
   1400147d9:	add    rdi,0x2
   1400147dd:	cmp    WORD PTR [rdi],0x2d
   1400147e1:	jne    0x1400147f0
   1400147e3:	cmp    WORD PTR [rdi+0x2],si
   1400147e7:	jne    0x1400147f0
   1400147e9:	mov    BYTE PTR [rcx+0x83d9],0x1
   1400147f0:	lea    rdx,[rip+0x59021]        # 0x14006d818
   1400147f7:	mov    rcx,rdi
   1400147fa:	call   0x140048f34
   1400147ff:	test   eax,eax
   140014801:	jne    0x14001480a
   140014803:	mov    BYTE PTR [rbx+0x201c],0x1
   14001480a:	mov    r8d,0x4
   140014810:	lea    rdx,[rip+0x59011]        # 0x14006d828
   140014817:	mov    rcx,rdi
   14001481a:	call   0x140048f7c
   14001481f:	test   eax,eax
   140014821:	jne    0x140014840
   140014823:	mov    rdx,rdi
   140014826:	mov    rcx,rbx
   140014829:	call   0x140014d8c
   14001482e:	mov    edx,DWORD PTR [rbx+0x4028]
   140014834:	lea    rcx,[rbx+0x5134]
   14001483b:	call   0x140017048
   140014840:	mov    r8d,0x2
   140014846:	lea    rdx,[rip+0x58fe7]        # 0x14006d834
   14001484d:	mov    rcx,rdi
   140014850:	call   0x140048f7c
   140014855:	test   eax,eax
   140014857:	jne    0x140014894
   140014859:	mov    rdx,rdi
   14001485c:	mov    rcx,rbx
   14001485f:	call   0x140014d8c
   140014864:	lea    rcx,[rbx+0x5134]
   14001486b:	cmp    WORD PTR [rcx],si
   14001486e:	je     0x140014894
   140014870:	mov    edx,DWORD PTR [rbx+0x4028]
   140014876:	call   0x140017048
   14001487b:	jmp    0x140014894
   14001487d:	add    rcx,0x83e2
   140014884:	cmp    WORD PTR [rcx],si
   140014887:	jne    0x140014894
   140014889:	mov    r8d,0x810
   14001488f:	call   0x14005e00c
   140014894:	mov    rbx,QWORD PTR [rsp+0x30]
   140014899:	mov    rsi,QWORD PTR [rsp+0x38]
   14001489e:	add    rsp,0x20
   1400148a2:	pop    rdi
   1400148a3:	ret    
   1400148a4:	rex push rbp
   1400148a6:	push   r14
   1400148a8:	push   r15
   1400148aa:	lea    rbp,[rsp-0x8730]
   1400148b2:	mov    eax,0x8830
   1400148b7:	call   0x140055f20
   1400148bc:	sub    rsp,rax
   1400148bf:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   1400148c8:	mov    QWORD PTR [rsp+0x8858],rbx
   1400148d0:	mov    QWORD PTR [rsp+0x8860],rsi
   1400148d8:	mov    QWORD PTR [rsp+0x8868],rdi
   1400148e0:	mov    rax,QWORD PTR [rip+0x6d5f9]        # 0x140081ee0
   1400148e7:	xor    rax,rsp
   1400148ea:	mov    QWORD PTR [rbp+0x8720],rax
   1400148f1:	mov    rbx,rcx
   1400148f4:	movzx  eax,WORD PTR [rcx+0x83e2]
   1400148fb:	xor    r14d,r14d
   1400148fe:	test   ax,ax
   140014901:	je     0x140014921
   140014903:	cmp    WORD PTR [rcx+0x83e4],r14w
   14001490b:	je     0x140014921
   14001490d:	movzx  edx,ax
   140014910:	lea    rcx,[rip+0x58d81]        # 0x14006d698
   140014917:	call   0x1400590e0
   14001491c:	test   rax,rax
   14001491f:	jne    0x14001492b
   140014921:	cmp    WORD PTR [rbx+0x9402],r14w
   140014929:	jne    0x140014942
   14001492b:	movzx  eax,WORD PTR [rbx+0x83e2]
   140014932:	neg    ax
   140014935:	sbb    edx,edx
   140014937:	and    edx,0x7
   14001493a:	mov    rcx,rbx
   14001493d:	call   0x140014100
   140014942:	lea    rdi,[rbx+0x9402]
   140014949:	mov    rcx,rdi
   14001494c:	call   0x140031bd4
   140014951:	mov    rsi,rax
   140014954:	mov    r15d,0x800
   14001495a:	test   rax,rax
   14001495d:	jne    0x140014973
   14001495f:	mov    r8d,r15d
   140014962:	lea    rdx,[rip+0x58d47]        # 0x14006d6b0
   140014969:	mov    rcx,rdi
   14001496c:	call   0x140046120
   140014971:	jmp    0x1400149ef
   140014973:	mov    r8d,0x5
   140014979:	lea    rdx,[rip+0x58d40]        # 0x14006d6c0
   140014980:	mov    rcx,rax
   140014983:	call   0x140048f7c
   140014988:	test   eax,eax
   14001498a:	jne    0x1400149ef
   14001498c:	movzx  ecx,WORD PTR [rsi+0xa]
   140014990:	call   0x140045d18
   140014995:	test   al,al
   140014997:	je     0x1400149ef
   140014999:	mov    rcx,rdi
   14001499c:	call   0x140021dec
   1400149a1:	test   al,al
   1400149a3:	jne    0x1400149ef
   1400149a5:	mov    r8,r15
   1400149a8:	mov    rdx,rdi
   1400149ab:	lea    rcx,[rbp+0x320]
   1400149b2:	call   0x140046158
   1400149b7:	mov    r8,r15
   1400149ba:	lea    rdx,[rip+0x58d0f]        # 0x14006d6d0
   1400149c1:	lea    rcx,[rbp+0x320]
   1400149c8:	call   0x140046120
   1400149cd:	lea    rcx,[rbp+0x320]
   1400149d4:	call   0x140021dec
   1400149d9:	test   al,al
   1400149db:	je     0x1400149ef
   1400149dd:	mov    r8,r15
   1400149e0:	lea    rdx,[rbp+0x320]
   1400149e7:	mov    rcx,rdi
   1400149ea:	call   0x140046158
   1400149ef:	movzx  edx,WORD PTR [rbx+0x83e2]
   1400149f6:	lea    rcx,[rip+0x58ce3]        # 0x14006d6e0
   1400149fd:	call   0x1400590e0
   140014a02:	test   rax,rax
   140014a05:	jne    0x140014ac5
   140014a0b:	cmp    BYTE PTR [rbx+0x61d0],r14b
   140014a12:	je     0x140014a29
   140014a14:	lea    r8,[rbx+0x61d2]
   140014a1b:	xor    r9d,r9d
   140014a1e:	mov    rdx,r15
   140014a21:	mov    rcx,rdi
   140014a24:	call   0x14003197c
   140014a29:	lea    rcx,[rsp+0x40]
   140014a2e:	call   0x140046194
   140014a33:	nop
   140014a34:	mov    rdx,rdi
   140014a37:	lea    rcx,[rsp+0x40]
   140014a3c:	call   0x1400461bc
   140014a41:	mov    DWORD PTR [rsp+0x20],r14d
   140014a46:	mov    r9b,BYTE PTR [rbx+0x61a9]
   140014a4d:	mov    r8d,DWORD PTR [rbx+0x6168]
   140014a54:	lea    rdx,[rsp+0x40]
   140014a59:	lea    rcx,[rbp+0x3560]
   140014a60:	call   0x14004259c
   140014a65:	nop
   140014a66:	mov    QWORD PTR [rbp+0x1330],r14
   140014a6d:	mov    QWORD PTR [rbp+0x1338],r14
   140014a74:	mov    QWORD PTR [rbp+0x1340],r14
   140014a7b:	jmp    0x140014a90
   140014a7d:	lea    rdx,[rbp+0x320]
   140014a84:	lea    rcx,[rbx+0xa630]
   140014a8b:	call   0x1400461bc
   140014a90:	lea    rdx,[rbp+0x320]
   140014a97:	lea    rcx,[rbp+0x3560]
   140014a9e:	call   0x1400431d8
   140014aa3:	test   eax,eax
   140014aa5:	je     0x140014a7d
   140014aa7:	lea    rcx,[rbp+0x3560]
   140014aae:	call   0x14004266c
   140014ab3:	nop
   140014ab4:	mov    rcx,QWORD PTR [rsp+0x40]
   140014ab9:	test   rcx,rcx
   140014abc:	je     0x140014ad4
   140014abe:	call   0x14005a938
   140014ac3:	jmp    0x140014ad4
   140014ac5:	lea    rcx,[rbx+0xa630]
   140014acc:	mov    rdx,rdi
   140014acf:	call   0x1400461bc
   140014ad4:	movzx  edx,WORD PTR [rbx+0x83e2]
   140014adb:	cmp    edx,0x4d
   140014ade:	jg     0x140014ba7
   140014ae4:	je     0x140014bfb
   140014aea:	mov    ecx,edx
   140014aec:	sub    ecx,0x41
   140014aef:	je     0x140014bfb
   140014af5:	sub    ecx,0x2
   140014af8:	je     0x140014b52
   140014afa:	sub    ecx,0x1
   140014afd:	je     0x140014b36
   140014aff:	sub    ecx,0x1
   140014b02:	je     0x140014d1f
   140014b08:	sub    ecx,0x1
   140014b0b:	je     0x140014bfb
   140014b11:	sub    ecx,0x3
   140014b14:	je     0x140014d1f
   140014b1a:	sub    ecx,0x2
   140014b1d:	je     0x140014b2d
   140014b1f:	cmp    ecx,0x1
   140014b22:	je     0x140014bee
   140014b28:	jmp    0x140014bdc
   140014b2d:	mov    BYTE PTR [rbx+0x62f8],0x1
   140014b34:	jmp    0x140014b9a
   140014b36:	mov    rdx,rbx
   140014b39:	lea    rcx,[rbp+0x0]
   140014b3d:	call   0x140001404
   140014b42:	nop
   140014b43:	lea    rcx,[rbp+0x0]
   140014b47:	call   0x140004910
   140014b4c:	nop
   140014b4d:	jmp    0x140014c2a
   140014b52:	movzx  eax,WORD PTR [rbx+0x83e4]
   140014b59:	test   eax,eax
   140014b5b:	je     0x140014b74
   140014b5d:	cmp    eax,0x48
   140014b60:	je     0x140014b9a
   140014b62:	mov    rcx,rbx
   140014b65:	cmp    eax,0x57
   140014b68:	jne    0x140014bdf
   140014b6a:	call   0x140016730
   140014b6f:	jmp    0x140014d48
   140014b74:	cmp    WORD PTR [rbx+0x301e],r14w
   140014b7c:	jne    0x140014b9a
   140014b7e:	movsd  xmm0,QWORD PTR [rip+0x58b6a]        # 0x14006d6f0
   140014b86:	movsd  QWORD PTR [rbx+0x301e],xmm0
   140014b8e:	mov    eax,DWORD PTR [rip+0x58b64]        # 0x14006d6f8
   140014b94:	mov    DWORD PTR [rbx+0x3026],eax
   140014b9a:	mov    rcx,rbx
   140014b9d:	call   0x140032f88
   140014ba2:	jmp    0x140014d48
   140014ba7:	mov    ecx,edx
   140014ba9:	sub    ecx,0x50
   140014bac:	je     0x140014d1f
   140014bb2:	sub    ecx,0x2
   140014bb5:	je     0x140014c45
   140014bbb:	sub    ecx,0x1
   140014bbe:	je     0x140014c38
   140014bc0:	sub    ecx,0x1
   140014bc3:	je     0x140014d1f
   140014bc9:	sub    ecx,0x1
   140014bcc:	je     0x140014bfb
   140014bce:	sub    ecx,0x1
   140014bd1:	je     0x140014bee
   140014bd3:	cmp    ecx,0x2
   140014bd6:	je     0x140014d1f
   140014bdc:	mov    rcx,rbx
   140014bdf:	mov    edx,0x7
   140014be4:	call   0x140014100
   140014be9:	jmp    0x140014d48
   140014bee:	mov    rcx,rbx
   140014bf1:	call   0x1400245d8
   140014bf6:	jmp    0x140014d48
   140014bfb:	cmp    edx,0x46
   140014bfe:	jne    0x140014c07
   140014c00:	mov    BYTE PTR [rbx+0x615f],0x1
   140014c07:	cmp    edx,0x55
   140014c0a:	jne    0x140014c13
   140014c0c:	mov    BYTE PTR [rbx+0x6160],0x1
   140014c13:	mov    rdx,rbx
   140014c16:	lea    rcx,[rbp+0x0]
   140014c1a:	call   0x140001404
   140014c1f:	nop
   140014c20:	lea    rcx,[rbp+0x0]
   140014c24:	call   0x14000487c
   140014c29:	nop
   140014c2a:	lea    rcx,[rbp+0x0]
   140014c2e:	call   0x140001668
   140014c33:	jmp    0x140014d48
   140014c38:	mov    rcx,rbx
   140014c3b:	call   0x1400438d4
   140014c40:	jmp    0x140014d48
   140014c45:	movzx  eax,WORD PTR [rbx+0x83e4]
   140014c4c:	test   eax,eax
   140014c4e:	je     0x140014d15
   140014c54:	cmp    eax,0x43
   140014c57:	je     0x140014ce7
   140014c5d:	mov    rcx,rbx
   140014c60:	cmp    eax,0x4e
   140014c63:	je     0x140014cd8
   140014c65:	cmp    eax,0x52
   140014c68:	je     0x140014cbb
   140014c6a:	cmp    eax,0x56
   140014c6d:	jne    0x140014bdf
   140014c73:	lea    rdx,[rbx+0x83e6]
   140014c7a:	lea    r8d,[rax-0x60]
   140014c7e:	call   0x140013ee4
   140014c83:	mov    DWORD PTR [rbx+0x614c],eax
   140014c89:	lea    rcx,[rbx+0xa630]
   140014c90:	mov    r8,r15
   140014c93:	lea    rdx,[rbp+0x320]
   140014c9a:	call   0x140046290
   140014c9f:	test   al,al
   140014ca1:	je     0x140014d48
   140014ca7:	lea    rdx,[rbp+0x320]
   140014cae:	mov    rcx,rbx
   140014cb1:	call   0x1400392d0
   140014cb6:	jmp    0x140014d48
   140014cbb:	lea    rdx,[rbx+0x83e6]
   140014cc2:	mov    r8d,0xfffffffd
   140014cc8:	call   0x140013ee4
   140014ccd:	mov    DWORD PTR [rbx+0x6148],eax
   140014cd3:	jmp    0x140014b9a
   140014cd8:	call   0x140032e9c
   140014cdd:	mov    rcx,rbx
   140014ce0:	call   0x140032b8c
   140014ce5:	jmp    0x140014d48
   140014ce7:	lea    rcx,[rbx+0xa630]
   140014cee:	mov    r8,r15
   140014cf1:	lea    rdx,[rbp+0x320]
   140014cf8:	call   0x140046290
   140014cfd:	test   al,al
   140014cff:	je     0x140014d48
   140014d01:	xor    r8d,r8d
   140014d04:	lea    rdx,[rbp+0x320]
   140014d0b:	mov    rcx,rbx
   140014d0e:	call   0x140039408
   140014d13:	jmp    0x140014d48
   140014d15:	mov    rcx,rbx
   140014d18:	call   0x14003b8e0
   140014d1d:	jmp    0x140014d48
   140014d1f:	mov    rdx,rbx
   140014d22:	lea    rcx,[rbp+0x1370]
   140014d29:	call   0x14001df6c
   140014d2e:	nop
   140014d2f:	lea    rcx,[rbp+0x1370]
   140014d36:	call   0x14001e190
   140014d3b:	nop
   140014d3c:	lea    rcx,[rbp+0x1370]
   140014d43:	call   0x14001e000
   140014d48:	cmp    BYTE PTR [rbx+0x83e0],r14b
   140014d4f:	jne    0x140014d5d
   140014d51:	lea    rcx,[rip+0x58954]        # 0x14006d6ac
   140014d58:	call   0x14001796c
   140014d5d:	mov    rcx,QWORD PTR [rbp+0x8720]
   140014d64:	xor    rcx,rsp
   140014d67:	call   0x140055f90
   140014d6c:	lea    r11,[rsp+0x8830]
   140014d74:	mov    rbx,QWORD PTR [r11+0x28]
   140014d78:	mov    rsi,QWORD PTR [r11+0x30]
   140014d7c:	mov    rdi,QWORD PTR [r11+0x38]
   140014d80:	mov    rsp,r11
   140014d83:	pop    r15
   140014d85:	pop    r14
   140014d87:	pop    rbp
   140014d88:	ret    
   140014d89:	int3   
   140014d8a:	int3   
   140014d8b:	int3   
   140014d8c:	mov    QWORD PTR [rsp+0x18],rbx
   140014d91:	push   rbp
   140014d92:	push   rsi
   140014d93:	push   rdi
   140014d94:	push   r12
   140014d96:	push   r13
   140014d98:	push   r14
   140014d9a:	push   r15
   140014d9c:	mov    eax,0x1870
   140014da1:	call   0x140055f20
   140014da6:	sub    rsp,rax
   140014da9:	mov    rax,QWORD PTR [rip+0x6d130]        # 0x140081ee0
   140014db0:	xor    rax,rsp
   140014db3:	mov    QWORD PTR [rsp+0x1860],rax
   140014dbb:	mov    rbx,rcx
   140014dbe:	mov    QWORD PTR [rsp+0x50],rcx
   140014dc3:	movzx  ecx,WORD PTR [rdx]
   140014dc6:	mov    r14,rdx
   140014dc9:	call   0x140048f28
   140014dce:	mov    ecx,eax
   140014dd0:	cmp    eax,0x4e
   140014dd3:	jg     0x14001578e
   140014dd9:	je     0x140015fe3
   140014ddf:	cmp    eax,0x46
   140014de2:	jg     0x140015127
   140014de8:	je     0x14001510b
   140014dee:	sub    ecx,0x3f
   140014df1:	je     0x1400150fc
   140014df7:	sub    ecx,0x1
   140014dfa:	je     0x1400150dc
   140014e00:	sub    ecx,0x1
   140014e03:	je     0x140014fce
   140014e09:	mov    ebp,0x2
   140014e0e:	sub    ecx,ebp
   140014e10:	je     0x140014f78
   140014e16:	sub    ecx,0x1
   140014e19:	je     0x140014ee0
   140014e1f:	cmp    ecx,0x1
   140014e22:	jne    0x140015f8a
   140014e28:	lea    rdi,[r14+0x2]
   140014e2c:	movzx  ecx,WORD PTR [rdi]
   140014e2f:	call   0x140048f28
   140014e34:	cmp    eax,0x4e
   140014e37:	je     0x140014ecf
   140014e3d:	cmp    eax,0x50
   140014e40:	je     0x140014e76
   140014e42:	lea    r13d,[rbp+0x29]
   140014e46:	mov    rcx,rbx
   140014e49:	cmp    WORD PTR [rdi],r13w
   140014e4d:	jne    0x140014e67
   140014e4f:	lea    rdx,[r14+0x4]
   140014e53:	call   0x140013e58
   140014e58:	or     DWORD PTR [rbx+0x4],eax
   140014e5b:	lea    edi,[rbp-0x1]
   140014e5e:	mov    BYTE PTR [rbx+0x8],dil
   140014e62:	jmp    0x1400162aa
   140014e67:	mov    rdx,rdi
   140014e6a:	call   0x140013e58
   140014e6f:	or     DWORD PTR [rbx],eax
   140014e71:	jmp    0x1400162aa
   140014e76:	movzx  ecx,WORD PTR [r14+0x4]
   140014e7b:	test   ecx,ecx
   140014e7d:	je     0x140014ebf
   140014e7f:	sub    ecx,0x31
   140014e82:	je     0x140014eb4
   140014e84:	sub    ecx,0x1
   140014e87:	je     0x140014ea2
   140014e89:	cmp    ecx,0x1
   140014e8c:	jne    0x1400162aa
   140014e92:	lea    r12d,[rcx+0x3]
   140014e96:	mov    DWORD PTR [rbx+0x6164],r12d
   140014e9d:	jmp    0x1400162aa
   140014ea2:	mov    r15d,0x3
   140014ea8:	mov    DWORD PTR [rbx+0x6164],r15d
   140014eaf:	jmp    0x1400162aa
   140014eb4:	mov    DWORD PTR [rbx+0x6164],ebp
   140014eba:	jmp    0x1400162aa
   140014ebf:	mov    edi,0x1
   140014ec4:	mov    DWORD PTR [rbx+0x6164],edi
   140014eca:	jmp    0x1400162aa
   140014ecf:	mov    edi,0x1
   140014ed4:	mov    BYTE PTR [rbx+0x61bc],dil
   140014edb:	jmp    0x1400162aa
   140014ee0:	xor    esi,esi
   140014ee2:	cmp    WORD PTR [r14+0x4],si
   140014ee7:	jne    0x1400162aa
   140014eed:	movzx  ecx,WORD PTR [r14+0x2]
   140014ef2:	call   0x140048f28
   140014ef7:	sub    eax,0x46
   140014efa:	je     0x140014f67
   140014efc:	sub    eax,ebp
   140014efe:	je     0x140014f56
   140014f00:	sub    eax,0xa
   140014f03:	je     0x140014f3e
   140014f05:	sub    eax,0x1
   140014f08:	je     0x140014f2d
   140014f0a:	lea    r12d,[rsi+0x4]
   140014f0e:	cmp    eax,r12d
   140014f11:	jne    0x1400162aa
   140014f17:	lea    edi,[rsi+0x1]
   140014f1a:	mov    BYTE PTR [rbx+0x61b6],dil
   140014f21:	mov    BYTE PTR [rbx+0x61ba],dil
   140014f28:	jmp    0x1400162aa
   140014f2d:	mov    edi,0x1
   140014f32:	mov    BYTE PTR [rbx+0x619d],dil
   140014f39:	jmp    0x1400162aa
   140014f3e:	mov    edi,0x1
   140014f43:	mov    BYTE PTR [rbx+0x61b6],dil
   140014f4a:	mov    BYTE PTR [rbx+0x61bb],dil
   140014f51:	jmp    0x1400162aa
   140014f56:	mov    edi,0x1
   140014f5b:	mov    BYTE PTR [rbx+0x61b5],dil
   140014f62:	jmp    0x1400162aa
   140014f67:	mov    edi,0x1
   140014f6c:	mov    BYTE PTR [rbx+0x61b6],dil
   140014f73:	jmp    0x1400162aa
   140014f78:	xor    esi,esi
   140014f7a:	cmp    WORD PTR [r14+0x4],si
   140014f7f:	jne    0x1400162aa
   140014f85:	movzx  ecx,WORD PTR [r14+0x2]
   140014f8a:	call   0x140048f28
   140014f8f:	lea    ecx,[rsi+0x2d]
   140014f92:	cmp    eax,ecx
   140014f94:	je     0x140014fbd
   140014f96:	cmp    eax,0x4c
   140014f99:	je     0x140014fb2
   140014f9b:	cmp    eax,0x55
   140014f9e:	jne    0x1400162aa
   140014fa4:	lea    edi,[rsi+0x1]
   140014fa7:	mov    DWORD PTR [rbx+0x61a4],edi
   140014fad:	jmp    0x1400162aa
   140014fb2:	mov    DWORD PTR [rbx+0x61a4],ebp
   140014fb8:	jmp    0x1400162aa
   140014fbd:	mov    edi,0x1
   140014fc2:	mov    BYTE PTR [rbx+0x615e],dil
   140014fc9:	jmp    0x1400162aa
   140014fce:	movzx  ecx,WORD PTR [r14+0x2]
   140014fd3:	call   0x140048f28
   140014fd8:	sub    eax,0x43
   140014fdb:	je     0x1400150cb
   140014fe1:	sub    eax,0x1
   140014fe4:	je     0x1400150ba
   140014fea:	mov    r15d,0x3
   140014ff0:	sub    eax,r15d
   140014ff3:	je     0x14001507b
   140014ff9:	lea    ebp,[r15-0x1]
   140014ffd:	sub    eax,ebp
   140014fff:	je     0x14001506a
   140015001:	sub    eax,0x5
   140015004:	je     0x1400162aa
   14001500a:	sub    eax,0x1
   14001500d:	je     0x140015059
   14001500f:	sub    eax,0x1
   140015012:	je     0x140015038
   140015014:	sub    eax,r15d
   140015017:	je     0x140015027
   140015019:	cmp    eax,r15d
   14001501c:	je     0x1400162aa
   140015022:	jmp    0x140015f8a
   140015027:	mov    edi,0x1
   14001502c:	mov    BYTE PTR [rbx+0x62d2],dil
   140015033:	jmp    0x1400162aa
   140015038:	add    r14,0x4
   14001503c:	sub    rbx,r14
   14001503f:	movzx  eax,WORD PTR [r14]
   140015043:	mov    WORD PTR [rbx+r14*1+0x4030],ax
   14001504c:	add    r14,rbp
   14001504f:	test   ax,ax
   140015052:	jne    0x14001503f
   140015054:	jmp    0x1400162aa
   140015059:	mov    edi,0x1
   14001505e:	mov    BYTE PTR [rbx+0x615d],dil
   140015065:	jmp    0x1400162aa
   14001506a:	mov    edi,0x1
   14001506f:	mov    BYTE PTR [rbx+0x62d6],dil
   140015076:	jmp    0x1400162aa
   14001507b:	lea    rdx,[r14+0x4]
   14001507f:	mov    ecx,0x2d
   140015084:	cmp    WORD PTR [rdx],cx
   140015087:	jne    0x14001509e
   140015089:	xor    esi,esi
   14001508b:	cmp    WORD PTR [r14+0x6],si
   140015090:	jne    0x14001509e
   140015092:	mov    BYTE PTR [rbx+0x61d0],sil
   140015099:	jmp    0x1400162aa
   14001509e:	mov    edi,0x1
   1400150a3:	lea    rcx,[rbx+0x61d2]
   1400150aa:	mov    BYTE PTR [rbx+0x61d0],dil
   1400150b1:	lea    r8d,[rdi+0x7f]
   1400150b5:	jmp    0x14001558e
   1400150ba:	mov    edi,0x1
   1400150bf:	mov    BYTE PTR [rbx+0x73c0],dil
   1400150c6:	jmp    0x1400162aa
   1400150cb:	mov    edi,0x1
   1400150d0:	mov    BYTE PTR [rbx+0x615c],dil
   1400150d7:	jmp    0x1400162aa
   1400150dc:	xor    esi,esi
   1400150de:	lea    r13d,[rsi+0x2b]
   1400150e2:	cmp    WORD PTR [r14+0x2],r13w
   1400150e7:	lea    edi,[r13-0x2a]
   1400150eb:	sete   sil
   1400150ef:	add    esi,edi
   1400150f1:	mov    DWORD PTR [rbx+0x83dc],esi
   1400150f7:	jmp    0x1400162aa
   1400150fc:	xor    edx,edx
   1400150fe:	mov    rcx,rbx
   140015101:	call   0x140014100
   140015106:	jmp    0x1400162aa
   14001510b:	xor    esi,esi
   14001510d:	cmp    WORD PTR [r14+0x2],si
   140015112:	jne    0x140015f8a
   140015118:	lea    edi,[rsi+0x1]
   14001511b:	mov    BYTE PTR [rbx+0x615f],dil
   140015122:	jmp    0x1400162aa
   140015127:	sub    ecx,0x48
   14001512a:	je     0x1400156da
   140015130:	sub    ecx,0x1
   140015133:	je     0x14001554d
   140015139:	mov    ebp,0x2
   14001513e:	sub    ecx,ebp
   140015140:	je     0x140015516
   140015146:	sub    ecx,0x1
   140015149:	je     0x1400154de
   14001514f:	cmp    ecx,0x1
   140015152:	jne    0x140015f8a
   140015158:	movzx  ecx,WORD PTR [r14+0x2]
   14001515d:	call   0x140048f28
   140015162:	sub    eax,0x41
   140015165:	je     0x1400154bc
   14001516b:	sub    eax,ebp
   14001516d:	je     0x140015331
   140015173:	sub    eax,0x1
   140015176:	je     0x140015285
   14001517c:	sub    eax,0x9
   14001517f:	je     0x1400162aa
   140015185:	sub    eax,0x6
   140015188:	je     0x1400151c1
   14001518a:	cmp    eax,0x1
   14001518d:	je     0x1400151a2
   14001518f:	movzx  eax,WORD PTR [r14+0x2]
   140015194:	sub    eax,0x30
   140015197:	mov    DWORD PTR [rbx+0x6140],eax
   14001519d:	cmp    eax,0x5
   1400151a0:	jmp    0x1400151b6
   1400151a2:	lea    rcx,[r14+0x4]
   1400151a6:	call   0x140048f08
   1400151ab:	mov    DWORD PTR [rbx+0x83d0],eax
   1400151b1:	dec    eax
   1400151b3:	cmp    eax,0x1f
   1400151b6:	jbe    0x1400162aa
   1400151bc:	jmp    0x140015f8a
   1400151c1:	lea    rdx,[r14+0x4]
   1400151c5:	xor    esi,esi
   1400151c7:	cmp    WORD PTR [rdx],si
   1400151ca:	lea    rax,[rip+0x5870f]        # 0x14006d8e0
   1400151d1:	mov    r8d,0x400
   1400151d7:	lea    rcx,[rsp+0x60]
   1400151dc:	cmove  rdx,rax
   1400151e0:	call   0x140046158
   1400151e5:	lea    rdi,[rsp+0x60]
   1400151ea:	cmp    WORD PTR [rsp+0x60],si
   1400151ef:	je     0x1400162aa
   1400151f5:	lea    r14,[rbx+0xa6e8]
   1400151fc:	mov    r13d,0x800
   140015202:	mov    edx,0x3b
   140015207:	mov    rcx,rdi
   14001520a:	call   0x1400590e0
   14001520f:	mov    rbx,rax
   140015212:	test   rax,rax
   140015215:	je     0x14001521a
   140015217:	mov    WORD PTR [rax],si
   14001521a:	cmp    WORD PTR [rdi],0x2e
   14001521e:	jne    0x140015223
   140015220:	add    rdi,rbp
   140015223:	lea    rdx,[rip+0x586ae]        # 0x14006d8d8
   14001522a:	mov    rcx,rdi
   14001522d:	call   0x14005d4b0
   140015232:	lea    rcx,[rsp+0x860]
   14001523a:	test   rax,rax
   14001523d:	jne    0x140015253
   14001523f:	mov    r9,rdi
   140015242:	lea    r8,[rip+0x58717]        # 0x14006d960
   140015249:	mov    rdx,r13
   14001524c:	call   0x140006acc
   140015251:	jmp    0x14001525e
   140015253:	mov    r8,r13
   140015256:	mov    rdx,rdi
   140015259:	call   0x140046158
   14001525e:	lea    rdx,[rsp+0x860]
   140015266:	mov    rcx,r14
   140015269:	call   0x1400461bc
   14001526e:	test   rbx,rbx
   140015271:	je     0x1400162aa
   140015277:	lea    rdi,[rbx+0x2]
   14001527b:	cmp    WORD PTR [rdi],si
   14001527e:	jne    0x140015202
   140015280:	jmp    0x1400162aa
   140015285:	lea    rcx,[r14+0x4]
   140015289:	call   0x140048f08
   14001528e:	xor    esi,esi
   140015290:	movsxd rcx,eax
   140015293:	mov    QWORD PTR [rbx+0x10],rcx
   140015297:	test   eax,eax
   140015299:	jne    0x1400152b6
   14001529b:	movzx  ecx,WORD PTR [r14+0x4]
   1400152a0:	call   0x140048f28
   1400152a5:	mov    edx,0x10000
   1400152aa:	lea    ecx,[rax-0x41]
   1400152ad:	shl    rdx,cl
   1400152b0:	mov    QWORD PTR [rbx+0x10],rdx
   1400152b4:	jmp    0x1400152f5
   1400152b6:	or     rax,0xffffffffffffffff
   1400152ba:	inc    rax
   1400152bd:	cmp    WORD PTR [r14+rax*2],si
   1400152c2:	jne    0x1400152ba
   1400152c4:	movzx  ecx,WORD PTR [r14+rax*2-0x2]
   1400152ca:	call   0x140048f28
   1400152cf:	cmp    eax,0x47
   1400152d2:	je     0x1400152e9
   1400152d4:	cmp    eax,0x4b
   1400152d7:	mov    rax,QWORD PTR [rbx+0x10]
   1400152db:	je     0x1400152e3
   1400152dd:	shl    rax,0x14
   1400152e1:	jmp    0x1400152f1
   1400152e3:	shl    rax,0xa
   1400152e7:	jmp    0x1400152f1
   1400152e9:	mov    rax,QWORD PTR [rbx+0x10]
   1400152ed:	shl    rax,0x1e
   1400152f1:	mov    QWORD PTR [rbx+0x10],rax
   1400152f5:	cmp    QWORD PTR [rbx+0x10],0x40000000
   1400152fd:	ja     0x14001530f
   1400152ff:	mov    rcx,rbx
   140015302:	call   0x140013d7c
   140015307:	test   al,al
   140015309:	jne    0x1400162aa
   14001530f:	mov    ecx,0xe56
   140015314:	call   0x140040118
   140015319:	mov    rcx,rax
   14001531c:	mov    rdx,r14
   14001531f:	call   0x14001796c
   140015324:	mov    QWORD PTR [rbx+0x10],0x400000
   14001532c:	jmp    0x1400162aa
   140015331:	add    r14,0x4
   140015335:	mov    ecx,0x2d
   14001533a:	movzx  eax,WORD PTR [r14]
   14001533e:	cmp    ax,cx
   140015341:	jne    0x140015365
   140015343:	add    rbx,0x62fc
   14001534a:	lea    eax,[rcx-0x1d]
   14001534d:	lea    edi,[rcx-0x2c]
   140015350:	lea    r15d,[rcx-0x2a]
   140015354:	mov    DWORD PTR [rbx],r15d
   140015357:	lea    rbx,[rbx+0xc]
   14001535b:	sub    rax,rdi
   14001535e:	jne    0x140015354
   140015360:	jmp    0x1400162aa
   140015365:	xor    esi,esi
   140015367:	test   ax,ax
   14001536a:	je     0x1400162aa
   140015370:	lea    edi,[rsi+0x1]
   140015373:	lea    ecx,[rsi+0x8]
   140015376:	lea    r13d,[rsi+0x2b]
   14001537a:	lea    r12d,[rsi+0x4]
   14001537e:	lea    r15d,[rsi+0x3]
   140015382:	mov    QWORD PTR [rsp+0x50],rcx
   140015387:	movzx  ecx,ax
   14001538a:	mov    DWORD PTR [rsp+0x44],esi
   14001538e:	mov    DWORD PTR [rsp+0x48],esi
   140015392:	call   0x140045d18
   140015397:	test   al,al
   140015399:	je     0x1400153b9
   14001539b:	mov    rcx,r14
   14001539e:	call   0x140048f08
   1400153a3:	mov    DWORD PTR [rsp+0x44],eax
   1400153a7:	jmp    0x1400153ac
   1400153a9:	add    r14,rbp
   1400153ac:	movzx  ecx,WORD PTR [r14]
   1400153b0:	call   0x140045d18
   1400153b5:	test   al,al
   1400153b7:	jne    0x1400153a9
   1400153b9:	mov    eax,0x3a
   1400153be:	cmp    WORD PTR [r14],ax
   1400153c2:	jne    0x1400153fc
   1400153c4:	lea    rax,[r14+0x2]
   1400153c8:	movzx  ecx,WORD PTR [rax]
   1400153cb:	mov    QWORD PTR [rsp+0x58],rax
   1400153d0:	call   0x140045d18
   1400153d5:	test   al,al
   1400153d7:	je     0x1400153fc
   1400153d9:	mov    r14,QWORD PTR [rsp+0x58]
   1400153de:	mov    rcx,r14
   1400153e1:	call   0x140048f08
   1400153e6:	mov    DWORD PTR [rsp+0x48],eax
   1400153ea:	jmp    0x1400153ef
   1400153ec:	add    r14,rbp
   1400153ef:	movzx  ecx,WORD PTR [r14]
   1400153f3:	call   0x140045d18
   1400153f8:	test   al,al
   1400153fa:	jne    0x1400153ec
   1400153fc:	movzx  ecx,WORD PTR [r14]
   140015400:	add    r14,rbp
   140015403:	call   0x140048f28
   140015408:	sub    eax,0x41
   14001540b:	je     0x14001544b
   14001540d:	sub    eax,ebp
   14001540f:	je     0x140015444
   140015411:	sub    eax,edi
   140015413:	je     0x14001543f
   140015415:	sub    eax,edi
   140015417:	je     0x14001543a
   140015419:	sub    eax,r12d
   14001541c:	je     0x140015433
   14001541e:	sub    eax,0x9
   140015421:	je     0x14001542e
   140015423:	cmp    eax,ebp
   140015425:	jne    0x140015450
   140015427:	mov    edx,0x7
   14001542c:	jmp    0x140015455
   14001542e:	mov    rdx,r15
   140015431:	jmp    0x140015455
   140015433:	mov    edx,0x6
   140015438:	jmp    0x140015455
   14001543a:	mov    rdx,rdi
   14001543d:	jmp    0x140015455
   14001543f:	mov    rdx,rsi
   140015442:	jmp    0x140015455
   140015444:	mov    edx,0x5
   140015449:	jmp    0x140015455
   14001544b:	mov    rdx,r12
   14001544e:	jmp    0x140015455
   140015450:	mov    rdx,QWORD PTR [rsp+0x50]
   140015455:	movzx  ecx,WORD PTR [r14]
   140015459:	mov    r8d,0xfffd
   14001545f:	movzx  eax,cx
   140015462:	sub    ax,r13w
   140015466:	test   r8w,ax
   14001546a:	jne    0x14001547e
   14001546c:	add    r14,rbp
   14001546f:	cmp    cx,r13w
   140015473:	jne    0x140015479
   140015475:	mov    eax,ebp
   140015477:	jmp    0x140015480
   140015479:	mov    eax,r15d
   14001547c:	jmp    0x140015480
   14001547e:	mov    eax,edi
   140015480:	lea    rcx,[rdx+rdx*2]
   140015484:	mov    DWORD PTR [rbx+rcx*4+0x62fc],eax
   14001548b:	lea    rax,[rdx+rdx*2]
   14001548f:	mov    edx,DWORD PTR [rsp+0x44]
   140015493:	mov    DWORD PTR [rbx+rax*4+0x6300],edx
   14001549a:	mov    eax,DWORD PTR [rsp+0x48]
   14001549e:	mov    DWORD PTR [rbx+rcx*4+0x6304],eax
   1400154a5:	mov    ecx,0x8
   1400154aa:	movzx  eax,WORD PTR [r14]
   1400154ae:	test   ax,ax
   1400154b1:	jne    0x140015382
   1400154b7:	jmp    0x1400162aa
   1400154bc:	xor    esi,esi
   1400154be:	cmp    WORD PTR [r14+0x4],si
   1400154c3:	je     0x1400154cd
   1400154c5:	cmp    WORD PTR [r14+0x4],0x35
   1400154cb:	jne    0x1400154d2
   1400154cd:	mov    esi,0x1
   1400154d2:	mov    BYTE PTR [rbx+0x61b8],sil
   1400154d9:	jmp    0x1400162aa
   1400154de:	lea    rcx,[r14+0x2]
   1400154e2:	mov    r8,rbp
   1400154e5:	lea    rdx,[rip+0x583e4]        # 0x14006d8d0
   1400154ec:	call   0x140048f7c
   1400154f1:	test   eax,eax
   1400154f3:	jne    0x1400162aa
   1400154f9:	lea    rdx,[r14+0x6]
   1400154fd:	lea    rcx,[rip+0x7f33c]        # 0x140094840
   140015504:	call   0x140025cdc
   140015509:	test   al,al
   14001550b:	jne    0x1400162aa
   140015511:	jmp    0x140015f8a
   140015516:	movzx  ecx,WORD PTR [r14+0x2]
   14001551b:	call   0x140048f28
   140015520:	test   eax,eax
   140015522:	je     0x14001553c
   140015524:	cmp    eax,0x42
   140015527:	jne    0x1400162aa
   14001552d:	lea    edi,[rax-0x41]
   140015530:	mov    BYTE PTR [rbx+0x61b4],dil
   140015537:	jmp    0x1400162aa
   14001553c:	mov    edi,0x1
   140015541:	mov    BYTE PTR [rbx+0x62f8],dil
   140015548:	jmp    0x1400162aa
   14001554d:	lea    rdi,[r14+0x2]
   140015551:	mov    r15d,0x3
   140015557:	mov    r8d,r15d
   14001555a:	lea    rdx,[rip+0x58327]        # 0x14006d888
   140015561:	mov    rcx,rdi
   140015564:	call   0x140048f7c
   140015569:	xor    esi,esi
   14001556b:	test   eax,eax
   14001556d:	jne    0x140015598
   14001556f:	lea    rdx,[rip+0x5831a]        # 0x14006d890
   140015576:	lea    rcx,[rbx+0x5134]
   14001557d:	lea    rax,[r14+0x8]
   140015581:	cmp    WORD PTR [rax],si
   140015584:	cmovne rdx,rax
   140015588:	mov    r8d,0x800
   14001558e:	call   0x140046158
   140015593:	jmp    0x1400162aa
   140015598:	lea    rdx,[rip+0x58301]        # 0x14006d8a0
   14001559f:	mov    rcx,rdi
   1400155a2:	call   0x140048f34
   1400155a7:	test   eax,eax
   1400155a9:	jne    0x1400155ba
   1400155ab:	lea    edi,[rax+0x1]
   1400155ae:	mov    BYTE PTR [rbx+0x6138],dil
   1400155b5:	jmp    0x1400162aa
   1400155ba:	lea    rdx,[rip+0x582e7]        # 0x14006d8a8
   1400155c1:	mov    rcx,rdi
   1400155c4:	call   0x140048f34
   1400155c9:	test   eax,eax
   1400155cb:	jne    0x1400155db
   1400155cd:	lea    edi,[rax+0x1]
   1400155d0:	mov    DWORD PTR [rbx+0x6134],edi
   1400155d6:	jmp    0x1400162aa
   1400155db:	mov    r8,r15
   1400155de:	lea    rdx,[rip+0x582cb]        # 0x14006d8b0
   1400155e5:	mov    rcx,rdi
   1400155e8:	call   0x140048f7c
   1400155ed:	test   eax,eax
   1400155ef:	jne    0x140015604
   1400155f1:	lea    rdx,[rip+0x58104]        # 0x14006d6fc
   1400155f8:	lea    rcx,[rbx+0x63bc]
   1400155ff:	jmp    0x14001557d
   140015604:	lea    rdx,[rip+0x582ad]        # 0x14006d8b8
   14001560b:	mov    rcx,rdi
   14001560e:	call   0x140048f34
   140015613:	test   eax,eax
   140015615:	jne    0x140015623
   140015617:	mov    DWORD PTR [rbx+0x6134],r15d
   14001561e:	jmp    0x1400162aa
   140015623:	movzx  ecx,WORD PTR [rdi]
   140015626:	call   0x140048f28
   14001562b:	cmp    eax,0x44
   14001562e:	jne    0x140015692
   140015630:	lea    ebp,[rax-0x42]
   140015633:	lea    rax,[r14+0x4]
   140015637:	mov    r15d,ebp
   14001563a:	cmp    WORD PTR [rax],si
   14001563d:	je     0x1400162aa
   140015643:	lea    edi,[rbp-0x1]
   140015646:	movzx  ecx,WORD PTR [rax]
   140015649:	call   0x140048f28
   14001564e:	sub    eax,0x43
   140015651:	je     0x14001567a
   140015653:	sub    eax,edi
   140015655:	je     0x140015671
   140015657:	sub    eax,0xc
   14001565a:	je     0x140015668
   14001565c:	cmp    eax,edi
   14001565e:	jne    0x140015681
   140015660:	mov    DWORD PTR [rbx+0x6134],ebp
   140015666:	jmp    0x140015681
   140015668:	mov    BYTE PTR [rbx+0x6150],dil
   14001566f:	jmp    0x140015681
   140015671:	mov    BYTE PTR [rbx+0x6152],dil
   140015678:	jmp    0x140015681
   14001567a:	mov    BYTE PTR [rbx+0x6151],dil
   140015681:	add    r15d,edi
   140015684:	lea    rax,[r14+r15*2]
   140015688:	cmp    WORD PTR [rax],si
   14001568b:	jne    0x140015646
   14001568d:	jmp    0x1400162aa
   140015692:	lea    rdx,[rip+0x58227]        # 0x14006d8c0
   140015699:	mov    rcx,rdi
   14001569c:	call   0x140048f34
   1400156a1:	test   eax,eax
   1400156a3:	jne    0x1400156b4
   1400156a5:	lea    edi,[rax+0x1]
   1400156a8:	mov    BYTE PTR [rbx+0x73c1],dil
   1400156af:	jmp    0x1400162aa
   1400156b4:	lea    rdx,[rip+0x5820d]        # 0x14006d8c8
   1400156bb:	mov    rcx,rdi
   1400156be:	call   0x140048f34
   1400156c3:	test   eax,eax
   1400156c5:	jne    0x1400162aa
   1400156cb:	lea    edi,[rax+0x1]
   1400156ce:	mov    BYTE PTR [rbx+0x6153],dil
   1400156d5:	jmp    0x1400162aa
   1400156da:	movzx  ecx,WORD PTR [r14+0x2]
   1400156df:	call   0x140048f28
   1400156e4:	cmp    eax,0x50
   1400156e7:	je     0x14001572a
   1400156e9:	cmp    eax,0x54
   1400156ec:	jne    0x140015f8a
   1400156f2:	movzx  ecx,WORD PTR [r14+0x4]
   1400156f7:	call   0x140048f28
   1400156fc:	sub    eax,0x42
   1400156ff:	je     0x140015718
   140015701:	cmp    eax,0x1
   140015704:	jne    0x140015f8a
   14001570a:	lea    ebp,[rax+0x1]
   14001570d:	mov    DWORD PTR [rbx+0x6144],ebp
   140015713:	jmp    0x1400162aa
   140015718:	mov    r15d,0x3
   14001571e:	mov    DWORD PTR [rbx+0x6144],r15d
   140015725:	jmp    0x1400162aa
   14001572a:	mov    edi,0x1
   14001572f:	lea    rdx,[r14+0x4]
   140015733:	xor    esi,esi
   140015735:	mov    BYTE PTR [rbx+0x5132],dil
   14001573c:	cmp    WORD PTR [rdx],si
   14001573f:	je     0x140015760
   140015741:	lea    rcx,[rbx+0x5030]
   140015748:	call   0x140043864
   14001574d:	or     rax,0xffffffffffffffff
   140015751:	inc    rax
   140015754:	cmp    WORD PTR [r14+rax*2],si
   140015759:	jne    0x140015751
   14001575b:	jmp    0x140015d85
   140015760:	cmp    BYTE PTR [rbx+0x5130],sil
   140015767:	jne    0x1400162aa
   14001576d:	lea    r8,[rbx+0x5030]
   140015774:	xor    edx,edx
   140015776:	xor    ecx,ecx
   140015778:	call   0x140048830
   14001577d:	lea    rcx,[rip+0x57f68]        # 0x14006d6ec
   140015784:	call   0x14001778c
   140015789:	jmp    0x1400162aa
   14001578e:	cmp    eax,0x55
   140015791:	jg     0x140015f69
   140015797:	je     0x140015f51
   14001579d:	sub    ecx,0x4f
   1400157a0:	je     0x140015d96
   1400157a6:	sub    ecx,0x1
   1400157a9:	je     0x140015d44
   1400157af:	sub    ecx,0x1
   1400157b2:	je     0x140015ce2
   1400157b8:	sub    ecx,0x1
   1400157bb:	je     0x140015bcd
   1400157c1:	sub    ecx,0x1
   1400157c4:	je     0x14001595e
   1400157ca:	cmp    ecx,0x1
   1400157cd:	jne    0x140015f8a
   1400157d3:	movzx  ecx,WORD PTR [r14+0x2]
   1400157d8:	call   0x140048f28
   1400157dd:	xor    esi,esi
   1400157df:	test   eax,eax
   1400157e1:	je     0x14001594d
   1400157e7:	lea    ecx,[rsi+0x2d]
   1400157ea:	sub    eax,ecx
   1400157ec:	je     0x140015941
   1400157f2:	sub    eax,0x14
   1400157f5:	je     0x140015938
   1400157fb:	sub    eax,0x1
   1400157fe:	je     0x140015923
   140015804:	sub    eax,0x9
   140015807:	je     0x140015913
   14001580d:	sub    eax,0x1
   140015810:	je     0x140015903
   140015816:	sub    eax,0x2
   140015819:	je     0x1400158fa
   14001581f:	sub    eax,0x1
   140015822:	je     0x1400158e5
   140015828:	lea    r12d,[rsi+0x4]
   14001582c:	cmp    eax,r12d
   14001582f:	jne    0x140015f8a
   140015835:	movzx  r8d,WORD PTR [r14+0x4]
   14001583a:	lea    edx,[rsi+0x30]
   14001583d:	movzx  eax,r8w
   140015841:	mov    ebp,r12d
   140015844:	sub    ax,dx
   140015847:	cmp    ax,r12w
   14001584b:	ja     0x140015858
   14001584d:	movzx  ebp,r8w
   140015851:	lea    edi,[rsi+0x1]
   140015854:	sub    ebp,edx
   140015856:	jmp    0x14001585b
   140015858:	mov    dil,sil
   14001585b:	cmp    r8w,cx
   14001585f:	cmove  ebp,esi
   140015862:	test   dil,dil
   140015865:	jne    0x1400158ce
   140015867:	cmp    r8w,cx
   14001586b:	ja     0x14001587d
   14001586d:	movabs r9,0x280000000001
   140015877:	bt     r9,r8
   14001587b:	jb     0x1400158ce
   14001587d:	movzx  eax,WORD PTR [r14+0x6]
   140015882:	sub    ax,dx
   140015885:	cmp    ax,r12w
   140015889:	ja     0x140015892
   14001588b:	movzx  ebp,WORD PTR [r14+0x6]
   140015890:	sub    ebp,edx
   140015892:	cmp    WORD PTR [r14+0x6],cx
   140015897:	movzx  ecx,r8w
   14001589b:	cmove  ebp,esi
   14001589e:	call   0x140048f28
   1400158a3:	cmp    eax,0x41
   1400158a6:	je     0x1400158c3
   1400158a8:	cmp    eax,0x43
   1400158ab:	je     0x1400158b8
   1400158ad:	cmp    eax,0x4d
   1400158b0:	jne    0x1400162aa
   1400158b6:	jmp    0x1400158da
   1400158b8:	mov    DWORD PTR [rbx+0x73c8],ebp
   1400158be:	jmp    0x1400162aa
   1400158c3:	mov    DWORD PTR [rbx+0x73cc],ebp
   1400158c9:	jmp    0x1400162aa
   1400158ce:	mov    DWORD PTR [rbx+0x73cc],ebp
   1400158d4:	mov    DWORD PTR [rbx+0x73c8],ebp
   1400158da:	mov    DWORD PTR [rbx+0x73c4],ebp
   1400158e0:	jmp    0x1400162aa
   1400158e5:	lea    rcx,[rbx+0x62d8]
   1400158ec:	lea    rdx,[r14+0x4]
   1400158f0:	call   0x1400475f8
   1400158f5:	jmp    0x1400162aa
   1400158fa:	lea    rcx,[rbx+0x62e0]
   140015901:	jmp    0x1400158ec
   140015903:	mov    ebp,0x2
   140015908:	mov    DWORD PTR [rbx+0x61a0],ebp
   14001590e:	jmp    0x1400162aa
   140015913:	mov    edi,0x1
   140015918:	mov    DWORD PTR [rbx+0x61a0],edi
   14001591e:	jmp    0x1400162aa
   140015923:	lea    rcx,[rbx+0x62d8]
   14001592a:	lea    rdx,[r14+0x4]
   14001592e:	call   0x140047770
   140015933:	jmp    0x1400162aa
   140015938:	lea    rcx,[rbx+0x62e0]
   14001593f:	jmp    0x14001592a
   140015941:	mov    BYTE PTR [rbx+0x62f9],sil
   140015948:	jmp    0x1400162aa
   14001594d:	mov    edi,0x1
   140015952:	mov    BYTE PTR [rbx+0x62f9],dil
   140015959:	jmp    0x1400162aa
   14001595e:	mov    r15d,0x3
   140015964:	lea    rdx,[rip+0x58005]        # 0x14006d970
   14001596b:	mov    r8d,r15d
   14001596e:	mov    rcx,r14
   140015971:	call   0x140048f7c
   140015976:	xor    esi,esi
   140015978:	lea    edi,[r15-0x2]
   14001597c:	mov    r13d,0x800
   140015982:	test   eax,eax
   140015984:	jne    0x1400159df
   140015986:	lea    rax,[r14+0x6]
   14001598a:	cmp    WORD PTR [rax],si
   14001598d:	lea    rbp,[rip+0x57fe4]        # 0x14006d978
   140015994:	cmovne rbp,rax
   140015998:	mov    rcx,rbp
   14001599b:	call   0x1400327bc
   1400159a0:	cmp    rax,rbp
   1400159a3:	jne    0x1400159cd
   1400159a5:	mov    rcx,rbp
   1400159a8:	call   0x140021dec
   1400159ad:	test   al,al
   1400159af:	jne    0x1400159cd
   1400159b1:	lea    rdx,[rbx+0x1018]
   1400159b8:	mov    BYTE PTR [rsp+0x20],sil
   1400159bd:	mov    r9b,dil
   1400159c0:	mov    r8d,r13d
   1400159c3:	mov    rcx,rbp
   1400159c6:	call   0x140031b44
   1400159cb:	jmp    0x1400159df
   1400159cd:	lea    rcx,[rbx+0x1018]
   1400159d4:	mov    r8,r13
   1400159d7:	mov    rdx,rbp
   1400159da:	call   0x140046158
   1400159df:	lea    r12,[r14+0x2]
   1400159e3:	movzx  ecx,WORD PTR [r12]
   1400159e8:	call   0x140045d18
   1400159ed:	test   al,al
   1400159ef:	je     0x140015a0f
   1400159f1:	mov    ebp,0x2
   1400159f6:	mov    rcx,r12
   1400159f9:	or     DWORD PTR [rbx+0x6154],ebp
   1400159ff:	call   0x140048f08
   140015a04:	mov    DWORD PTR [rbx+0x6158],eax
   140015a0a:	jmp    0x1400162aa
   140015a0f:	movzx  ecx,WORD PTR [r12]
   140015a14:	call   0x140048f28
   140015a19:	test   eax,eax
   140015a1b:	je     0x140015bc2
   140015a21:	mov    ecx,0x2d
   140015a26:	sub    eax,ecx
   140015a28:	je     0x140015bb7
   140015a2e:	sub    eax,0x16
   140015a31:	je     0x140015b04
   140015a37:	sub    eax,edi
   140015a39:	je     0x140015af8
   140015a3f:	sub    eax,edi
   140015a41:	je     0x140015ae6
   140015a47:	sub    eax,0x4
   140015a4a:	je     0x140015ac5
   140015a4c:	sub    eax,r15d
   140015a4f:	je     0x140015a9e
   140015a51:	sub    eax,edi
   140015a53:	je     0x140015a77
   140015a55:	cmp    eax,0x9
   140015a58:	jne    0x1400162aa
   140015a5e:	cmp    WORD PTR [r14+0x4],cx
   140015a63:	lea    eax,[rcx-0x1d]
   140015a66:	lea    edx,[rcx-0x25]
   140015a69:	cmove  eax,edx
   140015a6c:	or     DWORD PTR [rbx+0x6154],eax
   140015a72:	jmp    0x1400162aa
   140015a77:	movzx  ecx,WORD PTR [r14+0x4]
   140015a7c:	call   0x140045d18
   140015a81:	test   al,al
   140015a83:	je     0x1400162aa
   140015a89:	lea    rcx,[r14+0x4]
   140015a8d:	call   0x140048ebc
   140015a92:	mov    QWORD PTR [rbx+0x62f0],rax
   140015a99:	jmp    0x1400162aa
   140015a9e:	movzx  ecx,WORD PTR [r14+0x4]
   140015aa3:	call   0x140045d18
   140015aa8:	test   al,al
   140015aaa:	je     0x1400162aa
   140015ab0:	lea    rcx,[r14+0x4]
   140015ab4:	call   0x140048ebc
   140015ab9:	mov    QWORD PTR [rbx+0x62e8],rax
   140015ac0:	jmp    0x1400162aa
   140015ac5:	lea    rax,[r14+0x4]
   140015ac9:	mov    r8,r13
   140015acc:	cmp    WORD PTR [rax],si
   140015acf:	lea    rdx,[rip+0x57eba]        # 0x14006d990
   140015ad6:	lea    rcx,[rbx+0x73d0]
   140015add:	cmovne rdx,rax
   140015ae1:	jmp    0x14001558e
   140015ae6:	mov    r12d,0x4
   140015aec:	or     DWORD PTR [rbx+0x6154],r12d
   140015af3:	jmp    0x1400162aa
   140015af8:	or     DWORD PTR [rbx+0x6154],0x8
   140015aff:	jmp    0x1400162aa
   140015b04:	movzx  ecx,WORD PTR [r14+0x4]
   140015b09:	mov    r12b,sil
   140015b0c:	call   0x140048f28
   140015b11:	cmp    eax,0x41
   140015b14:	je     0x140015b30
   140015b16:	cmp    eax,0x4f
   140015b19:	je     0x140015b29
   140015b1b:	cmp    eax,0x55
   140015b1e:	jne    0x140015f8a
   140015b24:	mov    ebp,r15d
   140015b27:	jmp    0x140015b32
   140015b29:	mov    ebp,0x2
   140015b2e:	jmp    0x140015b32
   140015b30:	mov    ebp,edi
   140015b32:	cmp    WORD PTR [r14+0x6],si
   140015b37:	jne    0x140015b50
   140015b39:	mov    DWORD PTR [rbx+0x4028],ebp
   140015b3f:	mov    DWORD PTR [rbx+0x4024],ebp
   140015b45:	mov    DWORD PTR [rbx+0x4020],ebp
   140015b4b:	jmp    0x1400162aa
   140015b50:	test   r12b,r12b
   140015b53:	jne    0x1400162aa
   140015b59:	mov    eax,r15d
   140015b5c:	movzx  ecx,WORD PTR [r14+rax*2]
   140015b61:	call   0x140048f28
   140015b66:	cmp    eax,0x43
   140015b69:	je     0x140015ba2
   140015b6b:	cmp    eax,0x47
   140015b6e:	je     0x140015b9a
   140015b70:	cmp    eax,0x4c
   140015b73:	je     0x140015b92
   140015b75:	cmp    eax,0x52
   140015b78:	je     0x140015b8a
   140015b7a:	mov    rdx,r14
   140015b7d:	mov    rcx,rbx
   140015b80:	call   0x140013bac
   140015b85:	mov    r12b,dil
   140015b88:	jmp    0x140015ba8
   140015b8a:	mov    DWORD PTR [rbx+0x402c],ebp
   140015b90:	jmp    0x140015ba8
   140015b92:	mov    DWORD PTR [rbx+0x4024],ebp
   140015b98:	jmp    0x140015ba8
   140015b9a:	mov    DWORD PTR [rbx+0x4028],ebp
   140015ba0:	jmp    0x140015ba8
   140015ba2:	mov    DWORD PTR [rbx+0x4020],ebp
   140015ba8:	add    r15d,edi
   140015bab:	cmp    WORD PTR [r14+r15*2],si
   140015bb0:	jne    0x140015b50
   140015bb2:	jmp    0x1400162aa
   140015bb7:	mov    DWORD PTR [rbx+0x6154],esi
   140015bbd:	jmp    0x1400162aa
   140015bc2:	or     DWORD PTR [rbx+0x6154],edi
   140015bc8:	jmp    0x1400162aa
   140015bcd:	movzx  ecx,WORD PTR [r14+0x2]
   140015bd2:	call   0x140048f28
   140015bd7:	test   eax,eax
   140015bd9:	je     0x140015cd2
   140015bdf:	mov    ecx,0x2d
   140015be4:	cmp    eax,ecx
   140015be6:	je     0x140015cc2
   140015bec:	lea    edx,[rcx+0x3]
   140015bef:	cmp    eax,edx
   140015bf1:	je     0x140015cb0
   140015bf7:	cmp    eax,0x49
   140015bfa:	je     0x140015c42
   140015bfc:	cmp    eax,0x52
   140015bff:	je     0x140015c25
   140015c01:	cmp    eax,0x56
   140015c04:	jne    0x1400162aa
   140015c0a:	lea    r8d,[rcx-0x37]
   140015c0e:	mov    rcx,rbx
   140015c11:	lea    rdx,[r14+0x4]
   140015c15:	call   0x140013ee4
   140015c1a:	mov    DWORD PTR [rbx+0x614c],eax
   140015c20:	jmp    0x1400162aa
   140015c25:	lea    rdx,[r14+0x4]
   140015c29:	mov    r8d,0xfffffffd
   140015c2f:	mov    rcx,rbx
   140015c32:	call   0x140013ee4
   140015c37:	mov    DWORD PTR [rbx+0x6148],eax
   140015c3d:	jmp    0x1400162aa
   140015c42:	lea    rcx,[r14+0x4]
   140015c46:	call   0x140048f08
   140015c4b:	mov    DWORD PTR [rbx+0x61ac],eax
   140015c51:	cmp    eax,0xf
   140015c54:	jbe    0x140015c61
   140015c56:	mov    rdx,r14
   140015c59:	mov    rcx,rbx
   140015c5c:	call   0x140013bac
   140015c61:	mov    edx,0x3a
   140015c66:	lea    rcx,[r14+0x4]
   140015c6a:	call   0x1400590e0
   140015c6f:	test   rax,rax
   140015c72:	je     0x140015ca0
   140015c74:	lea    rcx,[rax+0x2]
   140015c78:	call   0x140048f08
   140015c7d:	mov    DWORD PTR [rbx+0x61b0],eax
   140015c83:	cmp    eax,0x3e8
   140015c88:	jle    0x140015c95
   140015c8a:	mov    rdx,r14
   140015c8d:	mov    rcx,rbx
   140015c90:	call   0x140013bac
   140015c95:	mov    ecx,DWORD PTR [rbx+0x61b0]
   140015c9b:	call   0x1400469a0
   140015ca0:	mov    ecx,DWORD PTR [rbx+0x61ac]
   140015ca6:	call   0x140046a8c
   140015cab:	jmp    0x1400162aa
   140015cb0:	mov    r15d,0x3
   140015cb6:	mov    DWORD PTR [rbx+0x6168],r15d
   140015cbd:	jmp    0x1400162aa
   140015cc2:	mov    edi,0x1
   140015cc7:	mov    DWORD PTR [rbx+0x6168],edi
   140015ccd:	jmp    0x1400162aa
   140015cd2:	mov    ebp,0x2
   140015cd7:	mov    DWORD PTR [rbx+0x6168],ebp
   140015cdd:	jmp    0x1400162aa
   140015ce2:	movzx  ecx,WORD PTR [r14+0x2]
   140015ce7:	call   0x140048f28
   140015cec:	cmp    eax,0x4f
   140015cef:	jne    0x140015f8a
   140015cf5:	movzx  ecx,WORD PTR [r14+0x4]
   140015cfa:	call   0x140048f28
   140015cff:	xor    esi,esi
   140015d01:	test   eax,eax
   140015d03:	je     0x140015d34
   140015d05:	lea    r13d,[rsi+0x2b]
   140015d09:	cmp    eax,r13d
   140015d0c:	je     0x140015d24
   140015d0e:	lea    ecx,[rsi+0x2d]
   140015d11:	cmp    eax,ecx
   140015d13:	jne    0x140015f8a
   140015d19:	mov    DWORD PTR [rbx+0x2018],esi
   140015d1f:	jmp    0x1400162aa
   140015d24:	mov    ebp,0x2
   140015d29:	mov    DWORD PTR [rbx+0x2018],ebp
   140015d2f:	jmp    0x1400162aa
   140015d34:	mov    edi,0x1
   140015d39:	mov    DWORD PTR [rbx+0x2018],edi
   140015d3f:	jmp    0x1400162aa
   140015d44:	lea    rdx,[r14+0x2]
   140015d48:	xor    esi,esi
   140015d4a:	cmp    WORD PTR [rdx],si
   140015d4d:	jne    0x140015d6b
   140015d4f:	lea    r8,[rbx+0x5030]
   140015d56:	xor    edx,edx
   140015d58:	xor    ecx,ecx
   140015d5a:	call   0x140048830
   140015d5f:	lea    rcx,[rip+0x57aae]        # 0x14006d814
   140015d66:	jmp    0x140015784
   140015d6b:	lea    rcx,[rbx+0x5030]
   140015d72:	call   0x140043864
   140015d77:	or     rax,0xffffffffffffffff
   140015d7b:	inc    rax
   140015d7e:	cmp    WORD PTR [r14+rax*2],si
   140015d83:	jne    0x140015d7b
   140015d85:	lea    rdx,[rax+rax*1]
   140015d89:	mov    rcx,r14
   140015d8c:	call   0x1400438bc
   140015d91:	jmp    0x1400162aa
   140015d96:	movzx  ecx,WORD PTR [r14+0x2]
   140015d9b:	call   0x140048f28
   140015da0:	mov    edx,eax
   140015da2:	cmp    eax,0x49
   140015da5:	jg     0x140015ead
   140015dab:	je     0x140015e24
   140015dad:	test   eax,eax
   140015daf:	je     0x140015e12
   140015db1:	mov    r13d,0x2b
   140015db7:	cmp    eax,r13d
   140015dba:	je     0x140015e02
   140015dbc:	lea    ecx,[r13+0x2]
   140015dc0:	cmp    eax,ecx
   140015dc2:	je     0x140015df2
   140015dc4:	cmp    eax,0x43
   140015dc7:	je     0x140015de1
   140015dc9:	cmp    eax,0x48
   140015dcc:	jne    0x140015f8a
   140015dd2:	lea    edi,[rax-0x47]
   140015dd5:	mov    BYTE PTR [rbx+0x61aa],dil
   140015ddc:	jmp    0x1400162aa
   140015de1:	mov    edi,0x1
   140015de6:	mov    BYTE PTR [rbx+0x62d5],dil
   140015ded:	jmp    0x1400162aa
   140015df2:	mov    ebp,0x2
   140015df7:	mov    DWORD PTR [rbx+0x613c],ebp
   140015dfd:	jmp    0x1400162aa
   140015e02:	mov    edi,0x1
   140015e07:	mov    DWORD PTR [rbx+0x613c],edi
   140015e0d:	jmp    0x1400162aa
   140015e12:	mov    r12d,0x4
   140015e18:	mov    DWORD PTR [rbx+0x613c],r12d
   140015e1f:	jmp    0x1400162aa
   140015e24:	movzx  edx,WORD PTR [r14+0x4]
   140015e29:	xor    esi,esi
   140015e2b:	sub    edx,0x2d
   140015e2e:	je     0x140015e7b
   140015e30:	lea    r15d,[rsi+0x3]
   140015e34:	sub    edx,r15d
   140015e37:	je     0x140015e7b
   140015e39:	lea    ebp,[rsi+0x2]
   140015e3c:	sub    edx,ebp
   140015e3e:	je     0x140015e73
   140015e40:	sub    edx,0x1
   140015e43:	je     0x140015e6a
   140015e45:	lea    edi,[rsi+0x1]
   140015e48:	cmp    edx,edi
   140015e4a:	je     0x140015e54
   140015e4c:	mov    DWORD PTR [rbx+0x61c0],edi
   140015e52:	jmp    0x140015e81
   140015e54:	mov    r12d,0x4
   140015e5a:	mov    BYTE PTR [rbx+0x83e0],dil
   140015e61:	mov    DWORD PTR [rbx+0x61c0],r12d
   140015e68:	jmp    0x140015e81
   140015e6a:	mov    DWORD PTR [rbx+0x61c0],r15d
   140015e71:	jmp    0x140015e81
   140015e73:	mov    DWORD PTR [rbx+0x61c0],ebp
   140015e79:	jmp    0x140015e81
   140015e7b:	mov    DWORD PTR [rbx+0x61c0],esi
   140015e81:	mov    edx,0x3a
   140015e86:	lea    rcx,[r14+0x4]
   140015e8a:	call   0x1400590e0
   140015e8f:	test   rax,rax
   140015e92:	je     0x1400162aa
   140015e98:	lea    rcx,[rax+0x2]
   140015e9c:	call   0x140048ebc
   140015ea1:	mov    QWORD PTR [rbx+0x61c8],rax
   140015ea8:	jmp    0x1400162aa
   140015ead:	sub    edx,0x4c
   140015eb0:	je     0x140015f26
   140015eb2:	sub    edx,0x2
   140015eb5:	je     0x140015f04
   140015eb7:	mov    r12d,0x4
   140015ebd:	sub    edx,r12d
   140015ec0:	je     0x140015ef2
   140015ec2:	sub    edx,0x1
   140015ec5:	je     0x140015ee1
   140015ec7:	cmp    edx,r12d
   140015eca:	jne    0x140015f8a
   140015ed0:	lea    edi,[r12-0x3]
   140015ed5:	mov    BYTE PTR [rbx+0x61a8],dil
   140015edc:	jmp    0x1400162aa
   140015ee1:	mov    edi,0x1
   140015ee6:	mov    BYTE PTR [rbx+0x62d4],dil
   140015eed:	jmp    0x1400162aa
   140015ef2:	mov    r15d,0x3
   140015ef8:	mov    DWORD PTR [rbx+0x613c],r15d
   140015eff:	jmp    0x1400162aa
   140015f04:	movzx  ecx,WORD PTR [r14+0x4]
   140015f09:	call   0x140048f28
   140015f0e:	cmp    eax,0x49
   140015f11:	jne    0x1400162aa
   140015f17:	lea    edi,[rax-0x48]
   140015f1a:	mov    BYTE PTR [rbx+0x61b7],dil
   140015f21:	jmp    0x1400162aa
   140015f26:	mov    edi,0x1
   140015f2b:	mov    BYTE PTR [rbx+0x61a9],dil
   140015f32:	movzx  ecx,WORD PTR [r14+0x4]
   140015f37:	call   0x140048f28
   140015f3c:	cmp    eax,0x41
   140015f3f:	jne    0x1400162aa
   140015f45:	mov    BYTE PTR [rbx+0x61ab],dil
   140015f4c:	jmp    0x1400162aa
   140015f51:	xor    esi,esi
   140015f53:	cmp    WORD PTR [r14+0x2],si
   140015f58:	jne    0x140015f8a
   140015f5a:	lea    edi,[rsi+0x1]
   140015f5d:	mov    BYTE PTR [rbx+0x6160],dil
   140015f64:	jmp    0x1400162aa
   140015f69:	sub    ecx,0x56
   140015f6c:	je     0x14001608c
   140015f72:	sub    ecx,0x1
   140015f75:	je     0x140016065
   140015f7b:	sub    ecx,0x1
   140015f7e:	je     0x140015fe3
   140015f80:	sub    ecx,0x1
   140015f83:	je     0x140015fd2
   140015f85:	cmp    ecx,0x1
   140015f88:	je     0x140015f9a
   140015f8a:	mov    rdx,r14
   140015f8d:	mov    rcx,rbx
   140015f90:	call   0x140013bac
   140015f95:	jmp    0x1400162aa
   140015f9a:	lea    rdx,[r14+0x2]
   140015f9e:	xor    esi,esi
   140015fa0:	cmp    WORD PTR [rdx],si
   140015fa3:	jne    0x140015fc6
   140015fa5:	movsd  xmm0,QWORD PTR [rip+0x579f3]        # 0x14006d9a0
   140015fad:	movsd  QWORD PTR [rbx+0x301e],xmm0
   140015fb5:	mov    eax,DWORD PTR [rip+0x579ed]        # 0x14006d9a8
   140015fbb:	mov    DWORD PTR [rbx+0x3026],eax
   140015fc1:	jmp    0x1400162aa
   140015fc6:	lea    rcx,[rbx+0x301e]
   140015fcd:	jmp    0x140015588
   140015fd2:	mov    edi,0x1
   140015fd7:	mov    BYTE PTR [rbx+0x619c],dil
   140015fde:	jmp    0x1400162aa
   140015fe3:	lea    rdi,[r14+0x2]
   140015fe7:	xor    esi,esi
   140015fe9:	cmp    WORD PTR [rdi],si
   140015fec:	je     0x1400162aa
   140015ff2:	movzx  ecx,WORD PTR [r14]
   140015ff6:	call   0x140048f28
   140015ffb:	cmp    eax,0x4e
   140015ffe:	lea    rcx,[rbx+0xa578]
   140016005:	lea    rbp,[rbx+0xa4c0]
   14001600c:	cmove  rbp,rcx
   140016010:	cmp    WORD PTR [rdi],0x40
   140016014:	jne    0x140016055
   140016016:	mov    rcx,r14
   140016019:	call   0x140032288
   14001601e:	test   al,al
   140016020:	jne    0x140016055
   140016022:	mov    eax,DWORD PTR [rbx+0x4024]
   140016028:	lea    edi,[rsi+0x1]
   14001602b:	mov    BYTE PTR [rsp+0x38],dil
   140016030:	lea    rcx,[r14+0x4]
   140016034:	mov    BYTE PTR [rsp+0x30],dil
   140016039:	mov    r9b,dil
   14001603c:	mov    BYTE PTR [rsp+0x28],dil
   140016041:	xor    r8d,r8d
   140016044:	mov    rdx,rbp
   140016047:	mov    DWORD PTR [rsp+0x20],eax
   14001604b:	call   0x140022ce4
   140016050:	jmp    0x1400162aa
   140016055:	mov    rdx,rdi
   140016058:	mov    rcx,rbp
   14001605b:	call   0x1400461bc
   140016060:	jmp    0x1400162aa
   140016065:	mov    r13d,0x800
   14001606b:	lea    rdx,[r14+0x2]
   14001606f:	mov    r8d,r13d
   140016072:	lea    rcx,[rbx+0x18]
   140016076:	call   0x140046158
   14001607b:	mov    edx,r13d
   14001607e:	lea    rcx,[rbx+0x18]
   140016082:	call   0x140030e78
   140016087:	jmp    0x1400162aa
   14001608c:	lea    r12,[r14+0x2]
   140016090:	movzx  ecx,WORD PTR [r12]
   140016095:	call   0x140048f28
   14001609a:	sub    eax,0x2d
   14001609d:	je     0x1400162a1
   1400160a3:	sub    eax,0x17
   1400160a6:	je     0x140016293
   1400160ac:	sub    eax,0x1
   1400160af:	je     0x140016271
   1400160b5:	mov    edi,0x1
   1400160ba:	sub    eax,0x9
   1400160bd:	je     0x140016268
   1400160c3:	lea    ebp,[rdi+0x1]
   1400160c6:	cmp    eax,ebp
   1400160c8:	je     0x14001625f
   1400160ce:	xor    esi,esi
   1400160d0:	cmp    BYTE PTR [rbx+0x83e1],sil
   1400160d7:	jne    0x1400160f3
   1400160d9:	lea    rcx,[rbx+0x6178]
   1400160e0:	mov    QWORD PTR [rbx+0x6170],rsi
   1400160e7:	call   0x140009a60
   1400160ec:	mov    BYTE PTR [rbx+0x83e1],dil
   1400160f3:	mov    r15,rsi
   1400160f6:	mov    r13,rsi
   1400160f9:	cmp    WORD PTR [r12],si
   1400160fe:	je     0x140016232
   140016104:	mov    ebx,edi
   140016106:	movzx  ecx,WORD PTR [r12]
   14001610b:	call   0x140045d18
   140016110:	test   al,al
   140016112:	je     0x14001612f
   140016114:	movzx  eax,WORD PTR [r12]
   140016119:	lea    r15,[r15+r15*4]
   14001611d:	lea    r15,[r15-0x18]
   140016121:	lea    r13,[r13+r13*4+0x0]
   140016126:	add    r13,r13
   140016129:	lea    r15,[rax+r15*2]
   14001612d:	jmp    0x140016139
   14001612f:	cmp    WORD PTR [r12],0x2e
   140016135:	cmove  r13,rdi
   140016139:	add    ebx,edi
   14001613b:	lea    r12,[r14+rbx*2]
   14001613f:	cmp    WORD PTR [r12],si
   140016144:	jne    0x140016106
   140016146:	mov    rbx,QWORD PTR [rsp+0x50]
   14001614b:	test   r15,r15
   14001614e:	je     0x140016232
   140016154:	or     rax,0xffffffffffffffff
   140016158:	inc    rax
   14001615b:	cmp    WORD PTR [r14+rax*2],si
   140016160:	jne    0x140016158
   140016162:	movzx  ecx,WORD PTR [r14+rax*2-0x2]
   140016168:	sub    ecx,0x42
   14001616b:	je     0x140016220
   140016171:	mov    r12d,0x4
   140016177:	sub    ecx,r12d
   14001617a:	je     0x1400161cd
   14001617c:	sub    ecx,edi
   14001617e:	je     0x1400161c4
   140016180:	sub    ecx,0x6
   140016183:	je     0x1400161bb
   140016185:	sub    ecx,0x15
   140016188:	je     0x140016220
   14001618e:	sub    ecx,r12d
   140016191:	je     0x1400161cd
   140016193:	sub    ecx,edi
   140016195:	je     0x1400161b5
   140016197:	sub    ecx,r12d
   14001619a:	je     0x1400161af
   14001619c:	cmp    ecx,ebp
   14001619e:	je     0x1400161a9
   1400161a0:	imul   r15,r15,0x3e8
   1400161a7:	jmp    0x140016220
   1400161a9:	shl    r15,0x14
   1400161ad:	jmp    0x140016220
   1400161af:	shl    r15,0xa
   1400161b3:	jmp    0x140016220
   1400161b5:	shl    r15,0x1e
   1400161b9:	jmp    0x140016220
   1400161bb:	imul   r15,r15,0xf4240
   1400161c2:	jmp    0x140016220
   1400161c4:	imul   r15,r15,0x3b9aca00
   1400161cb:	jmp    0x140016220
   1400161cd:	cmp    r15,0x168
   1400161d4:	je     0x14001621a
   1400161d6:	cmp    r15,0x2d0
   1400161dd:	je     0x140016212
   1400161df:	cmp    r15,0x4b0
   1400161e6:	je     0x14001620a
   1400161e8:	cmp    r15,0x5a0
   1400161ef:	je     0x140016202
   1400161f1:	cmp    r15,0xb40
   1400161f8:	jne    0x140016220
   1400161fa:	mov    r15d,0x2c7c00
   140016200:	jmp    0x140016220
   140016202:	mov    r15d,0x163e00
   140016208:	jmp    0x140016220
   14001620a:	mov    r15d,0x128600
   140016210:	jmp    0x140016220
   140016212:	mov    r15d,0xb2400
   140016218:	jmp    0x140016220
   14001621a:	mov    r15d,0x58800
   140016220:	test   r13,r13
   140016223:	je     0x14001623c
   140016225:	mov    rax,r15
   140016228:	cqo    
   14001622a:	idiv   r13
   14001622d:	mov    r15,rax
   140016230:	jmp    0x14001623c
   140016232:	movabs r15,0x7fffffff7fffffff
   14001623c:	cmp    QWORD PTR [rbx+0x6170],rsi
   140016243:	jne    0x14001624e
   140016245:	mov    QWORD PTR [rbx+0x6170],r15
   14001624c:	jmp    0x1400162aa
   14001624e:	lea    rcx,[rbx+0x6178]
   140016255:	mov    rdx,r15
   140016258:	call   0x140016340
   14001625d:	jmp    0x1400162aa
   14001625f:	mov    BYTE PTR [rbx+0x62fa],dil
   140016266:	jmp    0x1400162aa
   140016268:	mov    BYTE PTR [rbx+0x61bd],dil
   14001626f:	jmp    0x1400162aa
   140016271:	movzx  ecx,WORD PTR [r14+0x4]
   140016276:	call   0x140048f28
   14001627b:	cmp    eax,0x52
   14001627e:	jne    0x1400162aa
   140016280:	lea    rcx,[r14+0x6]
   140016284:	call   0x140048f08
   140016289:	inc    eax
   14001628b:	mov    DWORD PTR [rbx+0x73bc],eax
   140016291:	jmp    0x1400162aa
   140016293:	mov    edi,0x1
   140016298:	mov    BYTE PTR [rbx+0x61b9],dil
   14001629f:	jmp    0x1400162aa
   1400162a1:	xor    esi,esi
   1400162a3:	mov    QWORD PTR [rbx+0x6170],rsi
   1400162aa:	mov    rcx,QWORD PTR [rsp+0x1860]
   1400162b2:	xor    rcx,rsp
   1400162b5:	call   0x140055f90
   1400162ba:	mov    rbx,QWORD PTR [rsp+0x18c0]
   1400162c2:	add    rsp,0x1870
   1400162c9:	pop    r15
   1400162cb:	pop    r14
   1400162cd:	pop    r13
   1400162cf:	pop    r12
   1400162d1:	pop    rdi
   1400162d2:	pop    rsi
   1400162d3:	pop    rbp
   1400162d4:	ret    
   1400162d5:	int3   
   1400162d6:	int3   
   1400162d7:	int3   
   1400162d8:	mov    QWORD PTR [rsp+0x8],rbx
   1400162dd:	mov    QWORD PTR [rsp+0x18],rsi
   1400162e2:	push   rdi
   1400162e3:	sub    rsp,0x20
   1400162e7:	mov    rsi,rcx
   1400162ea:	mov    rax,rdx
   1400162ed:	mov    rcx,rdx
   1400162f0:	jmp    0x14001631c
   1400162f2:	mov    rbx,QWORD PTR [rsp+0x38]
   1400162f7:	movzx  edx,WORD PTR [rbx]
   1400162fa:	add    edx,0xffffffd3
   1400162fd:	test   edx,0xfffffffd
   140016303:	jne    0x140016311
   140016305:	lea    rdx,[rbx+0x2]
   140016309:	mov    rcx,rsi
   14001630c:	call   0x140014d8c
   140016311:	mov    rcx,rbx
   140016314:	call   0x14005a938
   140016319:	mov    rcx,rdi
   14001631c:	lea    rdx,[rsp+0x38]
   140016321:	call   0x140013af0
   140016326:	mov    rdi,rax
   140016329:	test   rax,rax
   14001632c:	jne    0x1400162f2
   14001632e:	mov    rbx,QWORD PTR [rsp+0x30]
   140016333:	mov    rsi,QWORD PTR [rsp+0x40]
   140016338:	add    rsp,0x20
   14001633c:	pop    rdi
   14001633d:	ret    
   14001633e:	int3   
   14001633f:	int3   
   140016340:	mov    QWORD PTR [rsp+0x8],rbx
   140016345:	push   rdi
   140016346:	sub    rsp,0x20
   14001634a:	mov    rdi,rdx
   14001634d:	mov    rbx,rcx
   140016350:	mov    edx,0x1
   140016355:	call   0x140013a40
   14001635a:	mov    r8,QWORD PTR [rbx+0x8]
   14001635e:	mov    rax,QWORD PTR [rbx]
   140016361:	mov    rbx,QWORD PTR [rsp+0x30]
   140016366:	mov    QWORD PTR [rax+r8*8-0x8],rdi
   14001636b:	add    rsp,0x20
   14001636f:	pop    rdi
   140016370:	ret    
   140016371:	int3   
   140016372:	int3   
   140016373:	int3   
   140016374:	mov    rax,rsp
   140016377:	push   rbp
   140016378:	push   r14
   14001637a:	push   r15
   14001637c:	lea    rbp,[rsp-0x80]
   140016381:	sub    rsp,0x180
   140016388:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   140016391:	mov    QWORD PTR [rax+0x10],rbx
   140016395:	mov    QWORD PTR [rax+0x18],rsi
   140016399:	mov    QWORD PTR [rax+0x20],rdi
   14001639d:	mov    rax,QWORD PTR [rip+0x6bb3c]        # 0x140081ee0
   1400163a4:	xor    rax,rsp
   1400163a7:	mov    QWORD PTR [rbp+0x70],rax
   1400163ab:	mov    rsi,rcx
   1400163ae:	lea    rcx,[rsp+0x50]
   1400163b3:	call   0x140046194
   1400163b8:	nop
   1400163b9:	xor    r15d,r15d
   1400163bc:	mov    BYTE PTR [rsp+0x38],r15b
   1400163c1:	mov    BYTE PTR [rsp+0x30],r15b
   1400163c6:	mov    BYTE PTR [rsp+0x28],r15b
   1400163cb:	mov    DWORD PTR [rsp+0x20],r15d
   1400163d0:	xor    r9d,r9d
   1400163d3:	mov    r8b,0x1
   1400163d6:	lea    rdx,[rsp+0x50]
   1400163db:	lea    rcx,[rip+0x5745e]        # 0x14006d840
   1400163e2:	call   0x140022ce4
   1400163e7:	test   al,al
   1400163e9:	je     0x140016503
   1400163ef:	lea    rcx,[rsp+0x50]
   1400163f4:	call   0x140046230
   1400163f9:	mov    rbx,rax
   1400163fc:	test   rax,rax
   1400163ff:	je     0x140016503
   140016405:	lea    r14,[rsi+0x83e2]
   14001640c:	jmp    0x140016412
   14001640e:	add    rbx,0x2
   140016412:	movzx  ecx,WORD PTR [rbx]
   140016415:	call   0x140045d24
   14001641a:	test   al,al
   14001641c:	jne    0x14001640e
   14001641e:	mov    r8d,0x9
   140016424:	lea    rdx,[rip+0x57425]        # 0x14006d850
   14001642b:	mov    rcx,rbx
   14001642e:	call   0x140048f7c
   140016433:	test   eax,eax
   140016435:	jne    0x140016443
   140016437:	lea    rdx,[rbx+0x12]
   14001643b:	mov    rcx,rsi
   14001643e:	call   0x1400162d8
   140016443:	cmp    WORD PTR [r14],r15w
   140016447:	je     0x1400164ed
   14001644d:	mov    r8d,0x10
   140016453:	mov    rdx,r14
   140016456:	lea    rcx,[rbp+0x10]
   14001645a:	call   0x140046158
   14001645f:	movzx  ecx,WORD PTR [rbp+0x10]
   140016463:	call   0x140048f28
   140016468:	mov    edi,eax
   14001646a:	movzx  ecx,WORD PTR [rbp+0x12]
   14001646e:	call   0x140048f28
   140016473:	lea    ecx,[rdi-0x49]
   140016476:	cmp    cx,0xd
   14001647a:	ja     0x14001648b
   14001647c:	mov    edx,0x2419
   140016481:	bt     edx,ecx
   140016484:	jae    0x14001648b
   140016486:	mov    WORD PTR [rbp+0x12],r15w
   14001648b:	cmp    di,0x52
   14001648f:	jne    0x1400164a3
   140016491:	sub    ax,di
   140016494:	mov    ecx,0xfffb
   140016499:	test   cx,ax
   14001649c:	jne    0x1400164a3
   14001649e:	mov    WORD PTR [rbp+0x14],r15w
   1400164a3:	lea    r9,[rbp+0x10]
   1400164a7:	lea    r8,[rip+0x573ba]        # 0x14006d868
   1400164ae:	mov    edx,0x20
   1400164b3:	lea    rcx,[rbp+0x30]
   1400164b7:	call   0x140006acc
   1400164bc:	lea    rax,[rbp+0x30]
   1400164c0:	or     rdi,0xffffffffffffffff
   1400164c4:	inc    rdi
   1400164c7:	cmp    WORD PTR [rax+rdi*2],r15w
   1400164cc:	jne    0x1400164c4
   1400164ce:	mov    r8,rdi
   1400164d1:	lea    rdx,[rbp+0x30]
   1400164d5:	mov    rcx,rbx
   1400164d8:	call   0x140048f7c
   1400164dd:	test   eax,eax
   1400164df:	jne    0x1400164ed
   1400164e1:	lea    rdx,[rbx+rdi*2]
   1400164e5:	mov    rcx,rsi
   1400164e8:	call   0x1400162d8
   1400164ed:	lea    rcx,[rsp+0x50]
   1400164f2:	call   0x140046230
   1400164f7:	mov    rbx,rax
   1400164fa:	test   rax,rax
   1400164fd:	jne    0x140016412
   140016503:	mov    rcx,QWORD PTR [rsp+0x50]
   140016508:	test   rcx,rcx
   14001650b:	je     0x140016512
   14001650d:	call   0x14005a938
   140016512:	mov    rcx,QWORD PTR [rbp+0x70]
   140016516:	xor    rcx,rsp
   140016519:	call   0x140055f90
   14001651e:	lea    r11,[rsp+0x180]
   140016526:	mov    rbx,QWORD PTR [r11+0x28]
   14001652a:	mov    rsi,QWORD PTR [r11+0x30]
   14001652e:	mov    rdi,QWORD PTR [r11+0x38]
   140016532:	mov    rsp,r11
   140016535:	pop    r15
   140016537:	pop    r14
   140016539:	pop    rbp
   14001653a:	ret    
   14001653b:	int3   
   14001653c:	mov    QWORD PTR [rsp+0x8],rbx
   140016541:	mov    QWORD PTR [rsp+0x10],rsi
   140016546:	mov    QWORD PTR [rsp+0x18],rdi
   14001654b:	push   r14
   14001654d:	sub    rsp,0x20
   140016551:	mov    edi,edx
   140016553:	mov    rbx,rcx
   140016556:	mov    esi,0x52
   14001655b:	cmp    edx,0x2
   14001655e:	jne    0x1400165ed
   140016564:	lea    r14d,[rdx+0x2]
   140016568:	cmp    DWORD PTR [rcx+0x6144],edx
   14001656e:	je     0x140016581
   140016570:	mov    r8d,r14d
   140016573:	lea    rdx,[rip+0x5718e]        # 0x14006d708
   14001657a:	mov    ecx,esi
   14001657c:	call   0x140037a34
   140016581:	cmp    BYTE PTR [rbx+0x61a9],0x0
   140016588:	je     0x14001659b
   14001658a:	mov    r8d,r14d
   14001658d:	lea    rdx,[rip+0x5717c]        # 0x14006d710
   140016594:	mov    ecx,esi
   140016596:	call   0x140037a34
   14001659b:	cmp    BYTE PTR [rbx+0x61aa],0x0
   1400165a2:	je     0x1400165b5
   1400165a4:	mov    r8d,r14d
   1400165a7:	lea    rdx,[rip+0x5716a]        # 0x14006d718
   1400165ae:	mov    ecx,esi
   1400165b0:	call   0x140037a34
   1400165b5:	mov    eax,DWORD PTR [rbx+0x61c0]
   1400165bb:	dec    eax
   1400165bd:	cmp    eax,0x1
   1400165c0:	ja     0x1400165d3
   1400165c2:	mov    r8d,r14d
   1400165c5:	lea    rdx,[rip+0x57154]        # 0x14006d720
   1400165cc:	mov    ecx,esi
   1400165ce:	call   0x140037a34
   1400165d3:	cmp    DWORD PTR [rbx+0x2018],0x1
   1400165da:	je     0x14001662b
   1400165dc:	mov    r8d,r14d
   1400165df:	lea    rdx,[rip+0x57142]        # 0x14006d728
   1400165e6:	mov    ecx,esi
   1400165e8:	call   0x140037a34
   1400165ed:	cmp    edi,0x3
   1400165f0:	jne    0x14001662b
   1400165f2:	cmp    BYTE PTR [rbx+0x61bd],0x0
   1400165f9:	mov    edi,0x5
   1400165fe:	je     0x140016611
   140016600:	mov    r8d,edi
   140016603:	lea    rdx,[rip+0x57126]        # 0x14006d730
   14001660a:	mov    ecx,esi
   14001660c:	call   0x140037a34
   140016611:	cmp    BYTE PTR [rbx+0x61bc],0x0
   140016618:	je     0x14001662b
   14001661a:	mov    r8d,edi
   14001661d:	lea    rdx,[rip+0x57114]        # 0x14006d738
   140016624:	mov    ecx,esi
   140016626:	call   0x140037a34
   14001662b:	mov    rbx,QWORD PTR [rsp+0x30]
   140016630:	mov    rsi,QWORD PTR [rsp+0x38]
   140016635:	mov    rdi,QWORD PTR [rsp+0x40]
   14001663a:	add    rsp,0x20
   14001663e:	pop    r14
   140016640:	ret    
   140016641:	int3   
   140016642:	int3   
   140016643:	int3   
   140016644:	mov    rax,QWORD PTR [rcx+0x62e8]
   14001664b:	movabs r8,0x7fffffff7fffffff
   140016655:	cmp    rax,r8
   140016658:	je     0x140016662
   14001665a:	cmp    rdx,rax
   14001665d:	jl     0x140016662
   14001665f:	mov    al,0x1
   140016661:	ret    
   140016662:	mov    rax,QWORD PTR [rcx+0x62f0]
   140016669:	cmp    rax,r8
   14001666c:	je     0x140016673
   14001666e:	cmp    rdx,rax
   140016671:	jle    0x14001665f
   140016673:	xor    al,al
   140016675:	ret    
   140016676:	int3   
   140016677:	int3   
   140016678:	mov    QWORD PTR [rsp+0x8],rbx
   14001667d:	push   rdi
   14001667e:	sub    rsp,0x20
   140016682:	lea    rbx,[rcx+0xa6e8]
   140016689:	mov    rdi,rdx
   14001668c:	mov    rcx,rbx
   14001668f:	call   0x1400463a0
   140016694:	jmp    0x1400166a8
   140016696:	xor    r8d,r8d
   140016699:	mov    rdx,rdi
   14001669c:	mov    rcx,rax
   14001669f:	call   0x140026254
   1400166a4:	test   al,al
   1400166a6:	jne    0x1400166c0
   1400166a8:	mov    rcx,rbx
   1400166ab:	call   0x140046230
   1400166b0:	test   rax,rax
   1400166b3:	jne    0x140016696
   1400166b5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400166ba:	add    rsp,0x20
   1400166be:	pop    rdi
   1400166bf:	ret    
   1400166c0:	mov    al,0x1
   1400166c2:	jmp    0x1400166b5
   1400166c4:	cmp    QWORD PTR [rcx+0x62d8],0x0
   1400166cc:	je     0x1400166df
   1400166ce:	mov    rax,QWORD PTR [rcx+0x62d8]
   1400166d5:	cmp    QWORD PTR [rdx],rax
   1400166d8:	ja     0x1400166dc
   1400166da:	jne    0x1400166df
   1400166dc:	mov    al,0x1
   1400166de:	ret    
   1400166df:	cmp    QWORD PTR [rcx+0x62e0],0x0
   1400166e7:	je     0x1400166f7
   1400166e9:	mov    rax,QWORD PTR [rcx+0x62e0]
   1400166f0:	cmp    QWORD PTR [rdx],rax
   1400166f3:	jb     0x1400166dc
   1400166f5:	je     0x1400166dc
   1400166f7:	xor    al,al
   1400166f9:	ret    
   1400166fa:	int3   
   1400166fb:	int3   
   1400166fc:	mov    QWORD PTR [rsp+0x8],rbx
   140016701:	push   rdi
   140016702:	sub    rsp,0x20
   140016706:	movzx  edi,dx
   140016709:	mov    rbx,rcx
   14001670c:	mov    edx,0x1
   140016711:	call   0x140007a44
   140016716:	mov    r8,QWORD PTR [rbx+0x8]
   14001671a:	mov    rax,QWORD PTR [rbx]
   14001671d:	mov    rbx,QWORD PTR [rsp+0x30]
   140016722:	mov    WORD PTR [rax+r8*2-0x2],di
   140016728:	add    rsp,0x20
   14001672c:	pop    rdi
   14001672d:	ret    
   14001672e:	int3   
   14001672f:	int3   
   140016730:	rex push rbp
   140016732:	push   rdi
   140016733:	push   r14
   140016735:	lea    rbp,[rsp-0xbfb0]
   14001673d:	mov    eax,0xc0b0
   140016742:	call   0x140055f20
   140016747:	sub    rsp,rax
   14001674a:	mov    QWORD PTR [rbp-0x78],0xfffffffffffffffe
   140016752:	mov    QWORD PTR [rsp+0xc0d8],rbx
   14001675a:	mov    QWORD PTR [rsp+0xc0e0],rsi
   140016762:	mov    rax,QWORD PTR [rip+0x6b777]        # 0x140081ee0
   140016769:	xor    rax,rsp
   14001676c:	mov    QWORD PTR [rbp+0xbfa0],rax
   140016773:	mov    rsi,rcx
   140016776:	mov    r8d,0x800
   14001677c:	lea    rdx,[rbp+0xafa0]
   140016783:	call   0x140013e48
   140016788:	xor    r14d,r14d
   14001678b:	test   al,al
   14001678d:	je     0x140016a0b
   140016793:	mov    rdx,rsi
   140016796:	lea    rcx,[rbp+0xfc0]
   14001679d:	call   0x140007678
   1400167a2:	nop
   1400167a3:	lea    rdx,[rbp+0xafa0]
   1400167aa:	lea    rcx,[rbp+0xfc0]
   1400167b1:	call   0x140008358
   1400167b6:	mov    QWORD PTR [rsp+0x68],r14
   1400167bb:	mov    QWORD PTR [rsp+0x70],r14
   1400167c0:	mov    QWORD PTR [rsp+0x78],r14
   1400167c5:	mov    QWORD PTR [rbp-0x80],r14
   1400167c9:	lea    rdx,[rsp+0x68]
   1400167ce:	lea    rcx,[rbp+0xfc0]
   1400167d5:	call   0x140008a90
   1400167da:	test   al,al
   1400167dc:	jne    0x1400167f5
   1400167de:	mov    ecx,0xd96
   1400167e3:	call   0x140040118
   1400167e8:	mov    rcx,rax
   1400167eb:	call   0x14001796c
   1400167f0:	jmp    0x1400169ef
   1400167f5:	mov    dil,r14b
   1400167f8:	lea    rbx,[rsi+0xa408]
   1400167ff:	mov    rcx,rbx
   140016802:	call   0x1400463a0
   140016807:	mov    r8d,0x800
   14001680d:	lea    rdx,[rbp+0x9fa0]
   140016814:	mov    rcx,rbx
   140016817:	call   0x140046290
   14001681c:	test   al,al
   14001681e:	je     0x14001682a
   140016820:	cmp    WORD PTR [rbp+0x9fa0],0x2a
   140016828:	jne    0x14001682d
   14001682a:	mov    dil,0x1
   14001682d:	lea    rcx,[rbp-0x70]
   140016831:	call   0x14002071c
   140016836:	nop
   140016837:	test   dil,dil
   14001683a:	je     0x140016845
   14001683c:	mov    DWORD PTR [rbp-0x5c],0x1
   140016843:	jmp    0x1400168c1
   140016845:	mov    BYTE PTR [rsp+0x38],r14b
   14001684a:	mov    QWORD PTR [rsp+0x30],r14
   14001684f:	movabs rax,0x7fffffff7fffffff
   140016859:	mov    QWORD PTR [rsp+0x28],rax
   14001685e:	lea    rax,[rsp+0x40]
   140016863:	mov    QWORD PTR [rsp+0x20],rax
   140016868:	mov    r9d,0x800
   14001686e:	lea    r8,[rbp+0x9fa0]
   140016875:	lea    rdx,[rbp-0x70]
   140016879:	mov    rcx,rsi
   14001687c:	call   0x1400202cc
   140016881:	test   al,al
   140016883:	jne    0x1400168a8
   140016885:	cmp    BYTE PTR [rsp+0x40],r14b
   14001688a:	jne    0x1400169e5
   140016890:	lea    rdx,[rbp+0x9fa0]
   140016897:	lea    rcx,[rip+0x7dfc2]        # 0x140094860
   14001689e:	call   0x14001bc54
   1400168a3:	jmp    0x1400169e5
   1400168a8:	mov    ecx,0xd94
   1400168ad:	call   0x140040118
   1400168b2:	mov    rcx,rax
   1400168b5:	lea    rdx,[rbp+0x9fa0]
   1400168bc:	call   0x14001796c
   1400168c1:	cmp    DWORD PTR [rsi+0x4020],0x3
   1400168c8:	jne    0x140016920
   1400168ca:	mov    dl,0xff
   1400168cc:	lea    rcx,[rbp-0x70]
   1400168d0:	call   0x140020e38
   1400168d5:	mov    dl,0xfe
   1400168d7:	lea    rcx,[rbp-0x70]
   1400168db:	call   0x140020e38
   1400168e0:	mov    rbx,r14
   1400168e3:	cmp    QWORD PTR [rsp+0x70],r14
   1400168e8:	jbe    0x1400169db
   1400168ee:	mov    rax,QWORD PTR [rsp+0x68]
   1400168f3:	mov    dl,BYTE PTR [rax+rbx*2]
   1400168f6:	lea    rcx,[rbp-0x70]
   1400168fa:	call   0x140020e38
   1400168ff:	mov    rax,QWORD PTR [rsp+0x68]
   140016904:	mov    dl,BYTE PTR [rax+rbx*2+0x1]
   140016908:	lea    rcx,[rbp-0x70]
   14001690c:	call   0x140020e38
   140016911:	inc    rbx
   140016914:	cmp    rbx,QWORD PTR [rsp+0x70]
   140016919:	jb     0x1400168ee
   14001691b:	jmp    0x1400169db
   140016920:	mov    QWORD PTR [rsp+0x48],r14
   140016925:	mov    QWORD PTR [rsp+0x50],r14
   14001692a:	mov    QWORD PTR [rsp+0x58],r14
   14001692f:	mov    QWORD PTR [rsp+0x60],r14
   140016934:	mov    rdx,QWORD PTR [rsp+0x70]
   140016939:	lea    rdx,[rdx*4+0x1]
   140016941:	lea    rcx,[rsp+0x48]
   140016946:	call   0x1400079a4
   14001694b:	nop
   14001694c:	xor    edx,edx
   14001694e:	lea    rcx,[rsp+0x68]
   140016953:	call   0x1400166fc
   140016958:	mov    r8,QWORD PTR [rsp+0x50]
   14001695d:	mov    rdi,QWORD PTR [rsp+0x48]
   140016962:	mov    rdx,rdi
   140016965:	mov    rcx,QWORD PTR [rsp+0x68]
   14001696a:	call   0x140048ca8
   14001696f:	or     rbx,0xffffffffffffffff
   140016973:	inc    rbx
   140016976:	cmp    BYTE PTR [rdi+rbx*1],r14b
   14001697a:	jne    0x140016973
   14001697c:	cmp    rbx,QWORD PTR [rsp+0x58]
   140016981:	jbe    0x1400169a1
   140016983:	sub    rbx,QWORD PTR [rsp+0x50]
   140016988:	mov    rdx,rbx
   14001698b:	lea    rcx,[rsp+0x48]
   140016990:	call   0x1400079a4
   140016995:	mov    rbx,QWORD PTR [rsp+0x50]
   14001699a:	mov    rdi,QWORD PTR [rsp+0x48]
   14001699f:	jmp    0x1400169a6
   1400169a1:	mov    QWORD PTR [rsp+0x50],rbx
   1400169a6:	cmp    DWORD PTR [rsi+0x4020],0x2
   1400169ad:	jne    0x1400169be
   1400169af:	mov    r8d,ebx
   1400169b2:	mov    rdx,rdi
   1400169b5:	mov    rcx,rdi
   1400169b8:	call   QWORD PTR [rip+0x55b42]        # 0x14006c500
   1400169be:	mov    r8,rbx
   1400169c1:	mov    rdx,rdi
   1400169c4:	lea    rcx,[rbp-0x70]
   1400169c8:	call   0x1400212ac
   1400169cd:	nop
   1400169ce:	test   rdi,rdi
   1400169d1:	je     0x1400169db
   1400169d3:	mov    rcx,rdi
   1400169d6:	call   0x14005a938
   1400169db:	lea    rcx,[rbp-0x70]
   1400169df:	call   0x1400207cc
   1400169e4:	nop
   1400169e5:	lea    rcx,[rbp-0x70]
   1400169e9:	call   0x140020758
   1400169ee:	nop
   1400169ef:	mov    rcx,QWORD PTR [rsp+0x68]
   1400169f4:	test   rcx,rcx
   1400169f7:	je     0x1400169ff
   1400169f9:	call   0x14005a938
   1400169fe:	nop
   1400169ff:	lea    rcx,[rbp+0xfc0]
   140016a06:	call   0x140007880
   140016a0b:	mov    rcx,QWORD PTR [rbp+0xbfa0]
   140016a12:	xor    rcx,rsp
   140016a15:	call   0x140055f90
   140016a1a:	lea    r11,[rsp+0xc0b0]
   140016a22:	mov    rbx,QWORD PTR [r11+0x28]
   140016a26:	mov    rsi,QWORD PTR [r11+0x30]
   140016a2a:	mov    rsp,r11
   140016a2d:	pop    r14
   140016a2f:	pop    rdi
   140016a30:	pop    rbp
   140016a31:	ret    
   140016a32:	int3   
   140016a33:	int3   
   140016a34:	mov    rax,rsp
   140016a37:	mov    QWORD PTR [rax+0x10],rbx
   140016a3b:	mov    QWORD PTR [rax+0x18],rsi
   140016a3f:	mov    QWORD PTR [rax+0x20],rdi
   140016a43:	push   rbp
   140016a44:	push   r12
   140016a46:	push   r13
   140016a48:	push   r14
   140016a4a:	push   r15
   140016a4c:	lea    rbp,[rax-0x348]
   140016a53:	sub    rsp,0x420
   140016a5a:	mov    rax,QWORD PTR [rip+0x6b47f]        # 0x140081ee0
   140016a61:	xor    rax,rsp
   140016a64:	mov    QWORD PTR [rbp+0x310],rax
   140016a6b:	mov    rbx,rcx
   140016a6e:	mov    ecx,0x2
   140016a73:	call   0x1400482c0
   140016a78:	xor    edi,edi
   140016a7a:	mov    DWORD PTR [rsp+0x30],edi
   140016a7e:	mov    r13d,edi
   140016a81:	lea    r12d,[rdi+0x1]
   140016a85:	test   rbx,rbx
   140016a88:	je     0x140016bbe
   140016a8e:	mov    r15d,edi
   140016a91:	lea    rsi,[rbp-0x10]
   140016a95:	lea    rax,[rbx+0x2]
   140016a99:	mov    r8d,0x28
   140016a9f:	mov    rdx,rax
   140016aa2:	mov    QWORD PTR [rsp+0x40],rax
   140016aa7:	mov    rcx,rsi
   140016aaa:	call   0x140046158
   140016aaf:	mov    edx,0x5f
   140016ab4:	mov    rcx,rsi
   140016ab7:	call   0x1400590e0
   140016abc:	test   rax,rax
   140016abf:	je     0x140016ac4
   140016ac1:	mov    WORD PTR [rax],di
   140016ac4:	movzx  r14d,WORD PTR [rsi]
   140016ac8:	mov    ecx,edi
   140016aca:	mov    DWORD PTR [rsp+0x20],ecx
   140016ace:	test   r14d,r14d
   140016ad1:	je     0x140016b8f
   140016ad7:	mov    rax,rsi
   140016ada:	mov    r13d,0x1
   140016ae0:	mov    QWORD PTR [rsp+0x28],rax
   140016ae5:	mov    rdx,rdi
   140016ae8:	mov    r12b,dil
   140016aeb:	mov    QWORD PTR [rsp+0x48],rdx
   140016af0:	test   r15,r15
   140016af3:	jle    0x140016b56
   140016af5:	mov    rcx,rdi
   140016af8:	mov    QWORD PTR [rsp+0x38],rcx
   140016afd:	test   r12b,r12b
   140016b00:	jne    0x140016b5e
   140016b02:	movsxd rax,DWORD PTR [rsp+rdx*4+0x50]
   140016b07:	add    rax,rcx
   140016b0a:	movzx  ecx,WORD PTR [rbp+rax*2-0x10]
   140016b0f:	call   0x140048f28
   140016b14:	mov    ecx,r14d
   140016b17:	mov    ebx,eax
   140016b19:	call   0x140048f28
   140016b1e:	mov    rdx,QWORD PTR [rsp+0x48]
   140016b23:	cmp    ebx,eax
   140016b25:	mov    rcx,QWORD PTR [rsp+0x38]
   140016b2a:	movzx  r12d,r12b
   140016b2e:	cmove  r12d,r13d
   140016b32:	add    rdx,r13
   140016b35:	add    rcx,0x28
   140016b39:	mov    QWORD PTR [rsp+0x48],rdx
   140016b3e:	mov    QWORD PTR [rsp+0x38],rcx
   140016b43:	cmp    rdx,r15
   140016b46:	jl     0x140016afd
   140016b48:	mov    rax,QWORD PTR [rsp+0x28]
   140016b4d:	mov    ecx,DWORD PTR [rsp+0x20]
   140016b51:	test   r12b,r12b
   140016b54:	jne    0x140016b67
   140016b56:	cmp    r14d,0x20
   140016b5a:	jne    0x140016b84
   140016b5c:	jmp    0x140016b67
   140016b5e:	mov    rax,QWORD PTR [rsp+0x28]
   140016b63:	mov    ecx,DWORD PTR [rsp+0x20]
   140016b67:	add    rax,0x2
   140016b6b:	add    ecx,r13d
   140016b6e:	mov    DWORD PTR [rsp+0x20],ecx
   140016b72:	mov    QWORD PTR [rsp+0x28],rax
   140016b77:	movzx  r14d,WORD PTR [rax]
   140016b7b:	test   r14d,r14d
   140016b7e:	jne    0x140016ae5
   140016b84:	mov    r13d,DWORD PTR [rsp+0x30]
   140016b89:	mov    r12d,0x1
   140016b8f:	mov    DWORD PTR [rsp+r15*4+0x50],ecx
   140016b94:	add    r13d,r12d
   140016b97:	mov    rcx,QWORD PTR [rsp+0x40]
   140016b9c:	mov    edx,0x5f
   140016ba1:	mov    DWORD PTR [rsp+0x30],r13d
   140016ba6:	add    r15,r12
   140016ba9:	add    rsi,0x50
   140016bad:	call   0x1400590e0
   140016bb2:	mov    rbx,rax
   140016bb5:	test   rax,rax
   140016bb8:	jne    0x140016a95
   140016bbe:	movsxd rbx,r13d
   140016bc1:	mov    r14d,edi
   140016bc4:	mov    QWORD PTR [rsp+0x40],rbx
   140016bc9:	mov    r15,rdi
   140016bcc:	test   r13d,r13d
   140016bcf:	jle    0x140016c98
   140016bd5:	cmp    r13d,0x4
   140016bd9:	mov    QWORD PTR [rsp+0x28],rdi
   140016bde:	lea    rax,[rip+0x57007]        # 0x14006dbec
   140016be5:	lea    r12,[rip+0x57004]        # 0x14006dbf0
   140016bec:	lea    rsi,[rbp-0x10]
   140016bf0:	cmovg  r12,rax
   140016bf4:	mov    QWORD PTR [rsp+0x38],rsi
   140016bf9:	test   r14d,r14d
   140016bfc:	lea    rcx,[rip+0x56ff1]        # 0x14006dbf4
   140016c03:	cmove  rcx,r12
   140016c07:	call   0x14001778c
   140016c0c:	movsxd rax,DWORD PTR [rsp+r15*4+0x50]
   140016c11:	mov    r13,rax
   140016c14:	test   eax,eax
   140016c16:	jle    0x140016c3e
   140016c18:	mov    rbx,rax
   140016c1b:	movzx  edx,WORD PTR [rsi]
   140016c1e:	lea    rcx,[rip+0x56fd7]        # 0x14006dbfc
   140016c25:	call   0x14001778c
   140016c2a:	lea    rsi,[rsi+0x2]
   140016c2e:	sub    rbx,0x1
   140016c32:	jne    0x140016c1b
   140016c34:	mov    rbx,QWORD PTR [rsp+0x40]
   140016c39:	mov    rsi,QWORD PTR [rsp+0x38]
   140016c3e:	movsxd rax,r14d
   140016c41:	lea    r8,[rbp-0x10]
   140016c45:	lea    rdx,[rax+rax*4]
   140016c49:	mov    eax,DWORD PTR [rsp+r15*4+0x50]
   140016c4e:	inc    eax
   140016c50:	movsxd rcx,eax
   140016c53:	lea    rax,[rcx+rdx*8]
   140016c57:	lea    r8,[r8+rax*2]
   140016c5b:	mov    rax,QWORD PTR [rsp+0x28]
   140016c60:	add    rax,r13
   140016c63:	lea    rcx,[rip+0x56f9e]        # 0x14006dc08
   140016c6a:	movzx  edx,WORD PTR [rbp+rax*2-0x10]
   140016c6f:	call   0x14001778c
   140016c74:	add    QWORD PTR [rsp+0x28],0x28
   140016c7a:	add    rsi,0x50
   140016c7e:	inc    r14d
   140016c81:	mov    QWORD PTR [rsp+0x38],rsi
   140016c86:	inc    r15
   140016c89:	cmp    r15,rbx
   140016c8c:	jl     0x140016bf9
   140016c92:	mov    r12d,0x1
   140016c98:	lea    rcx,[rip+0x56f65]        # 0x14006dc04
   140016c9f:	call   0x14001778c
   140016ca4:	mov    edx,0x32
   140016ca9:	lea    rcx,[rbp-0x80]
   140016cad:	call   0x1400177e4
   140016cb2:	movzx  ecx,WORD PTR [rbp-0x80]
   140016cb6:	call   0x140048f28
   140016cbb:	mov    rdx,rdi
   140016cbe:	test   rbx,rbx
   140016cc1:	jle    0x140016ce4
   140016cc3:	mov    r8,rdi
   140016cc6:	movsxd rcx,DWORD PTR [rsp+rdx*4+0x50]
   140016ccb:	add    rcx,r8
   140016cce:	cmp    ax,WORD PTR [rbp+rcx*2-0x10]
   140016cd3:	je     0x140016d16
   140016cd5:	add    edi,r12d
   140016cd8:	add    rdx,r12
   140016cdb:	add    r8,0x28
   140016cdf:	cmp    rdx,rbx
   140016ce2:	jl     0x140016cc6
   140016ce4:	xor    eax,eax
   140016ce6:	mov    rcx,QWORD PTR [rbp+0x310]
   140016ced:	xor    rcx,rsp
   140016cf0:	call   0x140055f90
   140016cf5:	lea    r11,[rsp+0x420]
   140016cfd:	mov    rbx,QWORD PTR [r11+0x38]
   140016d01:	mov    rsi,QWORD PTR [r11+0x40]
   140016d05:	mov    rdi,QWORD PTR [r11+0x48]
   140016d09:	mov    rsp,r11
   140016d0c:	pop    r15
   140016d0e:	pop    r14
   140016d10:	pop    r13
   140016d12:	pop    r12
   140016d14:	pop    rbp
   140016d15:	ret    
   140016d16:	lea    eax,[rdi+0x1]
   140016d19:	jmp    0x140016ce6
   140016d1b:	int3   
   140016d1c:	mov    QWORD PTR [rsp+0x8],rbx
   140016d21:	push   rbp
   140016d22:	push   rsi
   140016d23:	push   rdi
   140016d24:	push   r14
   140016d26:	push   r15
   140016d28:	lea    rbp,[rsp-0x130]
   140016d30:	sub    rsp,0x230
   140016d37:	mov    rax,QWORD PTR [rip+0x6b1a2]        # 0x140081ee0
   140016d3e:	xor    rax,rsp
   140016d41:	mov    QWORD PTR [rbp+0x120],rax
   140016d48:	xor    r14d,r14d
   140016d4b:	mov    rdi,r8
   140016d4e:	cmp    BYTE PTR [rip+0x6d239],r14b        # 0x140083f8e
   140016d55:	mov    rsi,rdx
   140016d58:	mov    ebx,ecx
   140016d5a:	jne    0x140016d65
   140016d5c:	lea    ecx,[r14+0x2]
   140016d60:	call   0x1400482c0
   140016d65:	mov    r15d,0x100
   140016d6b:	cmp    BYTE PTR [rip+0x6d21c],r14b        # 0x140083f8e
   140016d72:	jne    0x140016da3
   140016d74:	test   ebx,ebx
   140016d76:	jne    0x140016d8e
   140016d78:	mov    ecx,0xce2
   140016d7d:	call   0x140040118
   140016d82:	mov    rdx,rax
   140016d85:	lea    rcx,[rip+0x56e54]        # 0x14006dbe0
   140016d8c:	jmp    0x140016d9e
   140016d8e:	mov    ecx,0xce4
   140016d93:	call   0x140040118
   140016d98:	mov    rcx,rax
   140016d9b:	mov    rdx,rsi
   140016d9e:	call   0x14001778c
   140016da3:	mov    edx,0x80
   140016da8:	lea    rcx,[rsp+0x20]
   140016dad:	call   0x140016ea8
   140016db2:	cmp    WORD PTR [rsp+0x20],r14w
   140016db8:	jne    0x140016dc2
   140016dba:	test   ebx,ebx
   140016dbc:	je     0x140016e54
   140016dc2:	cmp    BYTE PTR [rip+0x6d1c5],r14b        # 0x140083f8e
   140016dc9:	jne    0x140016e64
   140016dcf:	test   ebx,ebx
   140016dd1:	jne    0x140016e64
   140016dd7:	mov    ecx,0xce6
   140016ddc:	call   0x140040118
   140016de1:	mov    rcx,rax
   140016de4:	call   0x14001778c
   140016de9:	mov    edx,0x80
   140016dee:	lea    rcx,[rbp+0x20]
   140016df2:	call   0x140016ea8
   140016df7:	cmp    WORD PTR [rbp+0x20],r14w
   140016dfc:	je     0x140016e24
   140016dfe:	lea    rax,[rsp+0x20]
   140016e03:	lea    rdx,[rbp+0x20]
   140016e07:	sub    rdx,rax
   140016e0a:	movzx  ecx,WORD PTR [rax]
   140016e0d:	movzx  r8d,WORD PTR [rax+rdx*1]
   140016e12:	sub    ecx,r8d
   140016e15:	jne    0x140016e20
   140016e17:	add    rax,0x2
   140016e1b:	test   r8d,r8d
   140016e1e:	jne    0x140016e0a
   140016e20:	test   ecx,ecx
   140016e22:	je     0x140016e58
   140016e24:	mov    ecx,0xce8
   140016e29:	call   0x140040118
   140016e2e:	mov    rcx,rax
   140016e31:	call   0x14001778c
   140016e36:	mov    rdx,r15
   140016e39:	lea    rcx,[rsp+0x20]
   140016e3e:	call   0x1400438bc
   140016e43:	mov    rdx,r15
   140016e46:	lea    rcx,[rbp+0x20]
   140016e4a:	call   0x1400438bc
   140016e4f:	jmp    0x140016d6b
   140016e54:	xor    al,al
   140016e56:	jmp    0x140016e80
   140016e58:	mov    rdx,r15
   140016e5b:	lea    rcx,[rbp+0x20]
   140016e5f:	call   0x1400438bc
   140016e64:	lea    rdx,[rsp+0x20]
   140016e69:	mov    rcx,rdi
   140016e6c:	call   0x140043864
   140016e71:	mov    rdx,r15
   140016e74:	lea    rcx,[rsp+0x20]
   140016e79:	call   0x1400438bc
   140016e7e:	mov    al,0x1
   140016e80:	mov    rcx,QWORD PTR [rbp+0x120]
   140016e87:	xor    rcx,rsp
   140016e8a:	call   0x140055f90
   140016e8f:	mov    rbx,QWORD PTR [rsp+0x260]
   140016e97:	add    rsp,0x230
   140016e9e:	pop    r15
   140016ea0:	pop    r14
   140016ea2:	pop    rdi
   140016ea3:	pop    rsi
   140016ea4:	pop    rbp
   140016ea5:	ret    
   140016ea6:	int3   
   140016ea7:	int3   
   140016ea8:	test   edx,edx
   140016eaa:	je     0x140016f87
   140016eb0:	push   rbx
   140016eb1:	push   rbp
   140016eb2:	push   rsi
   140016eb3:	push   rdi
   140016eb4:	push   r14
   140016eb6:	sub    rsp,0x30
   140016eba:	xor    r14d,r14d
   140016ebd:	mov    ebp,edx
   140016ebf:	cmp    BYTE PTR [rip+0x6d0c8],r14b        # 0x140083f8e
   140016ec6:	mov    rsi,rcx
   140016ec9:	je     0x140016ed7
   140016ecb:	mov    edx,ebp
   140016ecd:	call   0x1400177e4
   140016ed2:	jmp    0x140016f6d
   140016ed7:	mov    ecx,0xfffffff6
   140016edc:	call   QWORD PTR [rip+0x55456]        # 0x14006c338
   140016ee2:	mov    ecx,0xfffffff5
   140016ee7:	mov    rbx,rax
   140016eea:	call   QWORD PTR [rip+0x55448]        # 0x14006c338
   140016ef0:	lea    rdx,[rsp+0x70]
   140016ef5:	mov    DWORD PTR [rsp+0x68],r14d
   140016efa:	mov    rcx,rbx
   140016efd:	mov    rdi,rax
   140016f00:	call   QWORD PTR [rip+0x55422]        # 0x14006c328
   140016f06:	lea    rdx,[rsp+0x78]
   140016f0b:	mov    rcx,rdi
   140016f0e:	call   QWORD PTR [rip+0x55414]        # 0x14006c328
   140016f14:	mov    edx,0x2
   140016f19:	mov    rcx,rbx
   140016f1c:	call   QWORD PTR [rip+0x553fe]        # 0x14006c320
   140016f22:	mov    edx,0x3
   140016f27:	mov    rcx,rdi
   140016f2a:	call   QWORD PTR [rip+0x553f0]        # 0x14006c320
   140016f30:	lea    r8d,[rbp-0x1]
   140016f34:	mov    QWORD PTR [rsp+0x20],r14
   140016f39:	lea    r9,[rsp+0x68]
   140016f3e:	mov    rdx,rsi
   140016f41:	mov    rcx,rbx
   140016f44:	call   QWORD PTR [rip+0x553ce]        # 0x14006c318
   140016f4a:	mov    eax,DWORD PTR [rsp+0x68]
   140016f4e:	mov    rcx,rbx
   140016f51:	mov    WORD PTR [rsi+rax*2],r14w
   140016f56:	mov    edx,DWORD PTR [rsp+0x70]
   140016f5a:	call   QWORD PTR [rip+0x553c0]        # 0x14006c320
   140016f60:	mov    edx,DWORD PTR [rsp+0x78]
   140016f64:	mov    rcx,rdi
   140016f67:	call   QWORD PTR [rip+0x553b3]        # 0x14006c320
   140016f6d:	lea    eax,[rbp-0x1]
   140016f70:	mov    rcx,rsi
   140016f73:	mov    WORD PTR [rsi+rax*2],r14w
   140016f78:	call   0x140045ef8
   140016f7d:	add    rsp,0x30
   140016f81:	pop    r14
   140016f83:	pop    rdi
   140016f84:	pop    rsi
   140016f85:	pop    rbp
   140016f86:	pop    rbx
   140016f87:	ret    
   140016f88:	sub    rsp,0x28
   140016f8c:	mov    ecx,0x1
   140016f91:	call   0x14005e734
   140016f96:	mov    rcx,rax
   140016f99:	xor    edx,edx
   140016f9b:	call   0x14005e9dc
   140016fa0:	mov    ecx,0x2
   140016fa5:	call   0x14005e734
   140016faa:	mov    rcx,rax
   140016fad:	xor    edx,edx
   140016faf:	call   0x14005e9dc
   140016fb4:	mov    ecx,0xfffffff5
   140016fb9:	call   0x140017074
   140016fbe:	mov    ecx,0xfffffff4
   140016fc3:	mov    BYTE PTR [rip+0x6cfc3],al        # 0x140083f8c
   140016fc9:	call   0x140017074
   140016fce:	mov    ecx,0xfffffff6
   140016fd3:	mov    BYTE PTR [rip+0x6cfb4],al        # 0x140083f8d
   140016fd9:	call   0x140017074
   140016fde:	cmp    BYTE PTR [rip+0x6cfa7],0x0        # 0x140083f8c
   140016fe5:	mov    BYTE PTR [rip+0x6cfa3],al        # 0x140083f8e
   140016feb:	jne    0x14001700b
   140016fed:	mov    ecx,0x1
   140016ff2:	call   0x14005e734
   140016ff7:	mov    rcx,rax
   140016ffa:	call   0x14005e9b4
   140016fff:	mov    ecx,eax
   140017001:	mov    edx,0x20000
   140017006:	call   0x14005ea38
   14001700b:	cmp    BYTE PTR [rip+0x6cf7b],0x0        # 0x140083f8d
   140017012:	jne    0x140017032
   140017014:	mov    ecx,0x2
   140017019:	call   0x14005e734
   14001701e:	mov    rcx,rax
   140017021:	call   0x14005e9b4
   140017026:	mov    ecx,eax
   140017028:	mov    edx,0x20000
   14001702d:	call   0x14005ea38
   140017032:	add    rsp,0x28
   140017036:	ret    
   140017037:	int3   
   140017038:	mov    DWORD PTR [rip+0x6cf46],ecx        # 0x140083f84
   14001703e:	mov    DWORD PTR [rip+0x6cf44],edx        # 0x140083f88
   140017044:	ret    
   140017045:	int3   
   140017046:	int3   
   140017047:	int3   
   140017048:	rex push rbx
   14001704a:	sub    rsp,0x20
   14001704e:	mov    ebx,edx
   140017050:	mov    r8d,0x800
   140017056:	mov    rdx,rcx
   140017059:	lea    rcx,[rip+0x6bf20]        # 0x140082f80
   140017060:	call   0x140046158
   140017065:	mov    DWORD PTR [rip+0x6cf15],ebx        # 0x140083f80
   14001706b:	add    rsp,0x20
   14001706f:	pop    rbx
   140017070:	ret    
   140017071:	int3   
   140017072:	int3   
   140017073:	int3   
   140017074:	rex push rbx
   140017076:	sub    rsp,0x20
   14001707a:	call   QWORD PTR [rip+0x552b8]        # 0x14006c338
   140017080:	mov    rcx,rax
   140017083:	mov    rbx,rax
   140017086:	call   QWORD PTR [rip+0x552b4]        # 0x14006c340
   14001708c:	cmp    eax,0x2
   14001708f:	jne    0x1400170a5
   140017091:	lea    rdx,[rsp+0x38]
   140017096:	mov    rcx,rbx
   140017099:	call   QWORD PTR [rip+0x55289]        # 0x14006c328
   14001709f:	xor    ecx,ecx
   1400170a1:	test   eax,eax
   1400170a3:	jne    0x1400170aa
   1400170a5:	mov    ecx,0x1
   1400170aa:	mov    al,cl
   1400170ac:	add    rsp,0x20
   1400170b0:	pop    rbx
   1400170b1:	ret    
   1400170b2:	int3   
   1400170b3:	int3   
   1400170b4:	mov    QWORD PTR [rsp+0x10],rdx
   1400170b9:	mov    QWORD PTR [rsp+0x18],r8
   1400170be:	mov    QWORD PTR [rsp+0x20],r9
   1400170c3:	push   rbx
   1400170c4:	push   rsi
   1400170c5:	push   rdi
   1400170c6:	sub    rsp,0x840
   1400170cd:	mov    rax,QWORD PTR [rip+0x6ae0c]        # 0x140081ee0
   1400170d4:	xor    rax,rsp
   1400170d7:	mov    QWORD PTR [rsp+0x830],rax
   1400170df:	mov    rdi,rcx
   1400170e2:	lea    rcx,[rip+0x7d777]        # 0x140094860
   1400170e9:	call   0x14001bd1c
   1400170ee:	xor    ecx,ecx
   1400170f0:	mov    esi,eax
   1400170f2:	call   0x1400482c0
   1400170f7:	mov    rcx,QWORD PTR [rsp+0x868]
   1400170ff:	lea    rdx,[rsp+0x30]
   140017104:	mov    r8d,0x400
   14001710a:	call   0x140045d78
   14001710f:	lea    rbx,[rsp+0x870]
   140017117:	call   0x140006ac4
   14001711c:	mov    QWORD PTR [rsp+0x28],rbx
   140017121:	lea    r9,[rsp+0x30]
   140017126:	and    QWORD PTR [rsp+0x20],0x0
   14001712c:	lea    rbx,[rip+0x6ce5d]        # 0x140083f90
   140017133:	mov    r8d,0x1400
   140017139:	mov    rdx,rbx
   14001713c:	mov    rcx,QWORD PTR [rax]
   14001713f:	call   0x14005d174
   140017144:	mov    rdx,rbx
   140017147:	lea    rcx,[rip+0x56a22]        # 0x14006db70
   14001714e:	call   0x14001778c
   140017153:	cmp    WORD PTR [rbx],0xa
   140017157:	je     0x14001715f
   140017159:	cmp    WORD PTR [rbx],0xd
   14001715d:	jne    0x140017165
   14001715f:	add    rbx,0x2
   140017163:	jmp    0x140017153
   140017165:	mov    rcx,rbx
   140017168:	call   0x140045eac
   14001716d:	mov    rdx,rbx
   140017170:	mov    rcx,rdi
   140017173:	call   0x1400172c0
   140017178:	mov    edx,esi
   14001717a:	lea    rcx,[rip+0x7d6df]        # 0x140094860
   140017181:	call   0x14001bf6c
   140017186:	mov    rcx,QWORD PTR [rsp+0x830]
   14001718e:	xor    rcx,rsp
   140017191:	call   0x140055f90
   140017196:	add    rsp,0x840
   14001719d:	pop    rdi
   14001719e:	pop    rsi
   14001719f:	pop    rbx
   1400171a0:	ret    
   1400171a1:	int3   
   1400171a2:	int3   
   1400171a3:	int3   
   1400171a4:	mov    QWORD PTR [rsp+0x18],rbx
   1400171a9:	push   rbp
   1400171aa:	push   rsi
   1400171ab:	push   rdi
   1400171ac:	push   r14
   1400171ae:	push   r15
   1400171b0:	sub    rsp,0x840
   1400171b7:	mov    rax,QWORD PTR [rip+0x6ad22]        # 0x140081ee0
   1400171be:	xor    rax,rsp
   1400171c1:	mov    QWORD PTR [rsp+0x830],rax
   1400171c9:	xor    r15d,r15d
   1400171cc:	mov    rdi,rdx
   1400171cf:	mov    rsi,rcx
   1400171d2:	mov    ebp,r15d
   1400171d5:	test   rdx,rdx
   1400171d8:	je     0x140017227
   1400171da:	lea    r14d,[r15+0x2]
   1400171de:	cmp    WORD PTR [rsi+rbp*2],0x1b
   1400171e3:	jne    0x14001721c
   1400171e5:	cmp    WORD PTR [rsi+rbp*2+0x2],0x5b
   1400171eb:	jne    0x14001721c
   1400171ed:	mov    rbx,r14
   1400171f0:	cmp    r14,rdi
   1400171f3:	jae    0x14001721c
   1400171f5:	cmp    WORD PTR [rsi+rbx*2],0x22
   1400171fa:	je     0x140017290
   140017200:	movzx  ecx,WORD PTR [rsi+rbx*2]
   140017204:	call   0x140045d18
   140017209:	test   al,al
   14001720b:	jne    0x140017214
   14001720d:	cmp    WORD PTR [rsi+rbx*2],0x3b
   140017212:	jne    0x14001721c
   140017214:	inc    rbx
   140017217:	cmp    rbx,rdi
   14001721a:	jb     0x1400171f5
   14001721c:	inc    rbp
   14001721f:	inc    r14
   140017222:	cmp    rbp,rdi
   140017225:	jb     0x1400171de
   140017227:	mov    rbp,r15
   14001722a:	test   rdi,rdi
   14001722d:	je     0x140017284
   14001722f:	mov    r14d,0x400
   140017235:	mov    rbx,rdi
   140017238:	lea    rcx,[rsp+0x20]
   14001723d:	sub    rbx,rbp
   140017240:	mov    rdx,rsi
   140017243:	cmp    rbx,r14
   140017246:	cmova  rbx,r14
   14001724a:	mov    r8,rbx
   14001724d:	call   0x14005e00c
   140017252:	add    rbx,rbx
   140017255:	cmp    rbx,0x802
   14001725c:	jae    0x1400172b7
   14001725e:	lea    rdx,[rsp+0x20]
   140017263:	mov    WORD PTR [rsp+rbx*1+0x20],r15w
   140017269:	lea    rcx,[rip+0x569a8]        # 0x14006dc18
   140017270:	call   0x14001796c
   140017275:	add    rbp,r14
   140017278:	add    rsi,0x800
   14001727f:	cmp    rbp,rdi
   140017282:	jb     0x140017235
   140017284:	lea    rcx,[rip+0x56995]        # 0x14006dc20
   14001728b:	call   0x14001796c
   140017290:	mov    rcx,QWORD PTR [rsp+0x830]
   140017298:	xor    rcx,rsp
   14001729b:	call   0x140055f90
   1400172a0:	mov    rbx,QWORD PTR [rsp+0x880]
   1400172a8:	add    rsp,0x840
   1400172af:	pop    r15
   1400172b1:	pop    r14
   1400172b3:	pop    rdi
   1400172b4:	pop    rsi
   1400172b5:	pop    rbp
   1400172b6:	ret    
   1400172b7:	call   0x1400560e8
   1400172bc:	int3   
   1400172bd:	int3   
   1400172be:	int3   
   1400172bf:	int3   
   1400172c0:	rex push rbp
   1400172c2:	push   rdi
   1400172c3:	push   r12
   1400172c5:	push   r14
   1400172c7:	push   r15
   1400172c9:	lea    rbp,[rsp-0x2fc0]
   1400172d1:	mov    eax,0x30c0
   1400172d6:	call   0x140055f20
   1400172db:	sub    rsp,rax
   1400172de:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   1400172e7:	mov    QWORD PTR [rsp+0x3100],rbx
   1400172ef:	mov    QWORD PTR [rsp+0x3108],rsi
   1400172f7:	mov    rax,QWORD PTR [rip+0x6abe2]        # 0x140081ee0
   1400172fe:	xor    rax,rsp
   140017301:	mov    QWORD PTR [rbp+0x2fb0],rax
   140017308:	mov    r15,rdx
   14001730b:	mov    rdi,rcx
   14001730e:	xor    r12d,r12d
   140017311:	cmp    WORD PTR [rip+0x6bc67],r12w        # 0x140082f80
   140017319:	je     0x1400175a1
   14001731f:	cmp    BYTE PTR [rip+0x6f46a],r12b        # 0x140086790
   140017326:	jne    0x1400175a1
   14001732c:	mov    BYTE PTR [rip+0x6f45d],0x1        # 0x140086790
   140017333:	test   rcx,rcx
   140017336:	je     0x140017344
   140017338:	movzx  eax,WORD PTR [rcx]
   14001733b:	neg    ax
   14001733e:	sbb    rcx,rcx
   140017341:	and    rdi,rcx
   140017344:	lea    rsi,[rip+0x6bc35]        # 0x140082f80
   14001734b:	mov    rcx,rsi
   14001734e:	call   0x1400327bc
   140017353:	mov    ebx,0x800
   140017358:	mov    r8d,ebx
   14001735b:	cmp    rax,rsi
   14001735e:	jne    0x140017379
   140017360:	mov    BYTE PTR [rsp+0x20],0x1
   140017365:	xor    r9d,r9d
   140017368:	lea    rdx,[rbp+0xfb0]
   14001736f:	mov    rcx,rsi
   140017372:	call   0x140031b44
   140017377:	jmp    0x140017388
   140017379:	mov    rdx,rsi
   14001737c:	lea    rcx,[rbp+0xfb0]
   140017383:	call   0x140046158
   140017388:	mov    QWORD PTR [rsp+0x40],r12
   14001738d:	lea    rcx,[rsp+0x40]
   140017392:	call   0x1400476c0
   140017397:	lea    rdx,[rsp+0x50]
   14001739c:	lea    rcx,[rsp+0x40]
   1400173a1:	call   0x1400472e8
   1400173a6:	mov    r14b,r12b
   1400173a9:	lea    rcx,[rbp-0x80]
   1400173ad:	call   0x14002071c
   1400173b2:	nop
   1400173b3:	mov    r8d,0x1
   1400173b9:	lea    rdx,[rbp+0xfb0]
   1400173c0:	lea    rcx,[rbp-0x80]
   1400173c4:	call   0x140020c80
   1400173c9:	test   al,al
   1400173cb:	jne    0x14001742f
   1400173cd:	mov    r8d,0x12
   1400173d3:	lea    rdx,[rbp+0xfb0]
   1400173da:	lea    rcx,[rbp-0x80]
   1400173de:	call   0x140020964
   1400173e3:	test   al,al
   1400173e5:	je     0x140017411
   1400173e7:	mov    r14b,0x1
   1400173ea:	mov    eax,DWORD PTR [rip+0x6cb90]        # 0x140083f80
   1400173f0:	test   eax,eax
   1400173f2:	je     0x1400173f9
   1400173f4:	cmp    eax,0x3
   1400173f7:	jne    0x14001742f
   1400173f9:	mov    r8d,0x2
   1400173ff:	lea    rdx,[rip+0x56772]        # 0x14006db78
   140017406:	lea    rcx,[rbp-0x80]
   14001740a:	call   0x1400212ac
   14001740f:	jmp    0x14001742f
   140017411:	mov    ecx,0xd1a
   140017416:	call   0x140040118
   14001741b:	mov    rcx,rax
   14001741e:	lea    rdx,[rbp+0xfb0]
   140017425:	call   0x14001778c
   14001742a:	jmp    0x140017591
   14001742f:	xor    edx,edx
   140017431:	lea    r8d,[rdx+0x2]
   140017435:	lea    rcx,[rbp-0x80]
   140017439:	call   0x140021048
   14001743e:	test   rdi,rdi
   140017441:	je     0x140017515
   140017447:	mov    rax,rdi
   14001744a:	lea    rsi,[rip+0x6f34f]        # 0x1400867a0
   140017451:	mov    rdx,rsi
   140017454:	sub    rdx,rdi
   140017457:	movzx  ecx,WORD PTR [rax]
   14001745a:	movzx  r8d,WORD PTR [rax+rdx*1]
   14001745f:	sub    ecx,r8d
   140017462:	jne    0x14001746d
   140017464:	add    rax,0x2
   140017468:	test   r8d,r8d
   14001746b:	jne    0x140017457
   14001746d:	test   ecx,ecx
   14001746f:	je     0x140017551
   140017475:	mov    r8,rbx
   140017478:	lea    rdx,[rbp+0x1fb0]
   14001747f:	mov    rcx,rdi
   140017482:	call   0x140030ef4
   140017487:	test   r14b,r14b
   14001748a:	jne    0x1400174a2
   14001748c:	lea    r8,[rip+0x566e9]        # 0x14006db7c
   140017493:	lea    rdx,[rbp-0x80]
   140017497:	mov    ecx,DWORD PTR [rip+0x6cae3]        # 0x140083f80
   14001749d:	call   0x140022bc0
   1400174a2:	mov    ecx,DWORD PTR [rsp+0x54]
   1400174a6:	dec    ecx
   1400174a8:	call   0x14004747c
   1400174ad:	mov    rbx,rax
   1400174b0:	mov    ecx,0xda0
   1400174b5:	call   0x140040118
   1400174ba:	mov    r8,rax
   1400174bd:	lea    rax,[rbp+0x1fb0]
   1400174c4:	mov    QWORD PTR [rsp+0x30],rax
   1400174c9:	mov    ecx,DWORD PTR [rsp+0x50]
   1400174cd:	mov    DWORD PTR [rsp+0x28],ecx
   1400174d1:	mov    QWORD PTR [rsp+0x20],rbx
   1400174d6:	mov    r9d,DWORD PTR [rsp+0x58]
   1400174db:	lea    rdx,[rbp-0x80]
   1400174df:	mov    ecx,DWORD PTR [rip+0x6ca9b]        # 0x140083f80
   1400174e5:	call   0x140022bc0
   1400174ea:	lea    r8,[rip+0x5668f]        # 0x14006db80
   1400174f1:	lea    rdx,[rbp-0x80]
   1400174f5:	mov    ecx,DWORD PTR [rip+0x6ca85]        # 0x140083f80
   1400174fb:	call   0x140022bc0
   140017500:	sub    rsi,rdi
   140017503:	movzx  eax,WORD PTR [rdi]
   140017506:	mov    WORD PTR [rsi+rdi*1],ax
   14001750a:	lea    rdi,[rdi+0x2]
   14001750e:	test   ax,ax
   140017511:	jne    0x140017503
   140017513:	jmp    0x140017551
   140017515:	cmp    BYTE PTR [rip+0x69ea4],r12b        # 0x1400813c0
   14001751c:	je     0x140017551
   14001751e:	mov    ecx,DWORD PTR [rsp+0x54]
   140017522:	dec    ecx
   140017524:	call   0x14004747c
   140017529:	mov    ecx,DWORD PTR [rsp+0x50]
   14001752d:	mov    DWORD PTR [rsp+0x28],ecx
   140017531:	mov    QWORD PTR [rsp+0x20],rax
   140017536:	mov    r9d,DWORD PTR [rsp+0x58]
   14001753b:	lea    r8,[rip+0x56646]        # 0x14006db88
   140017542:	lea    rdx,[rbp-0x80]
   140017546:	mov    ecx,DWORD PTR [rip+0x6ca34]        # 0x140083f80
   14001754c:	call   0x140022bc0
   140017551:	mov    BYTE PTR [rip+0x69e68],r12b        # 0x1400813c0
   140017558:	mov    QWORD PTR [rsp+0x30],r15
   14001755d:	mov    eax,DWORD PTR [rsp+0x64]
   140017561:	mov    DWORD PTR [rsp+0x28],eax
   140017565:	mov    eax,DWORD PTR [rsp+0x60]
   140017569:	mov    DWORD PTR [rsp+0x20],eax
   14001756d:	mov    r9d,DWORD PTR [rsp+0x5c]
   140017572:	lea    r8,[rip+0x5663f]        # 0x14006dbb8
   140017579:	lea    rdx,[rbp-0x80]
   14001757d:	mov    ecx,DWORD PTR [rip+0x6c9fd]        # 0x140083f80
   140017583:	call   0x140022bc0
   140017588:	lea    rcx,[rbp-0x80]
   14001758c:	call   0x1400207cc
   140017591:	mov    BYTE PTR [rip+0x6f1f8],r12b        # 0x140086790
   140017598:	lea    rcx,[rbp-0x80]
   14001759c:	call   0x140020758
   1400175a1:	mov    rcx,QWORD PTR [rbp+0x2fb0]
   1400175a8:	xor    rcx,rsp
   1400175ab:	call   0x140055f90
   1400175b0:	lea    r11,[rsp+0x30c0]
   1400175b8:	mov    rbx,QWORD PTR [r11+0x40]
   1400175bc:	mov    rsi,QWORD PTR [r11+0x48]
   1400175c0:	mov    rsp,r11
   1400175c3:	pop    r15
   1400175c5:	pop    r14
   1400175c7:	pop    r12
   1400175c9:	pop    rdi
   1400175ca:	pop    rbp
   1400175cb:	ret    
   1400175cc:	mov    QWORD PTR [rsp+0x20],rbx
   1400175d1:	push   rbp
   1400175d2:	push   rsi
   1400175d3:	push   rdi
   1400175d4:	sub    rsp,0x850
   1400175db:	mov    rax,QWORD PTR [rip+0x6a8fe]        # 0x140081ee0
   1400175e2:	xor    rax,rsp
   1400175e5:	mov    QWORD PTR [rsp+0x840],rax
   1400175ed:	mov    rax,rdx
   1400175f0:	mov    rbx,r8
   1400175f3:	mov    rdi,rcx
   1400175f6:	lea    rdx,[rsp+0x40]
   1400175fb:	mov    rcx,rax
   1400175fe:	mov    r8d,0x400
   140017604:	call   0x140045d78
   140017609:	mov    ecx,0x1
   14001760e:	call   0x14005e734
   140017613:	xor    ebp,ebp
   140017615:	cmp    rdi,rax
   140017618:	jne    0x140017623
   14001761a:	cmp    BYTE PTR [rip+0x6c96b],bpl        # 0x140083f8c
   140017621:	jne    0x140017643
   140017623:	mov    ecx,0x2
   140017628:	call   0x14005e734
   14001762d:	cmp    rdi,rax
   140017630:	jne    0x1400176fd
   140017636:	cmp    BYTE PTR [rip+0x6c950],bpl        # 0x140083f8d
   14001763d:	je     0x1400176fd
   140017643:	mov    ecx,0x1
   140017648:	call   0x14005e734
   14001764d:	sub    rdi,rax
   140017650:	neg    rdi
   140017653:	sbb    ecx,ecx
   140017655:	add    ecx,0xfffffff5
   140017658:	call   QWORD PTR [rip+0x54cda]        # 0x14006c338
   14001765e:	mov    rdi,rax
   140017661:	call   0x140006ac4
   140017666:	mov    QWORD PTR [rsp+0x28],rbx
   14001766b:	lea    r9,[rsp+0x40]
   140017670:	mov    esi,0x1800
   140017675:	mov    QWORD PTR [rsp+0x20],rbp
   14001767a:	lea    rbx,[rip+0x7011f]        # 0x1400877a0
   140017681:	mov    r8d,esi
   140017684:	mov    rcx,QWORD PTR [rax]
   140017687:	mov    rdx,rbx
   14001768a:	call   0x14005d174
   14001768f:	cmp    DWORD PTR [rip+0x6c8f2],0x3        # 0x140083f88
   140017696:	jne    0x1400176ae
   140017698:	or     r8,0xffffffffffffffff
   14001769c:	inc    r8
   14001769f:	cmp    WORD PTR [rbx+r8*2],bp
   1400176a4:	jne    0x14001769c
   1400176a6:	add    r8d,r8d
   1400176a9:	mov    rdx,rbx
   1400176ac:	jmp    0x1400176e8
   1400176ae:	mov    r8,rsi
   1400176b1:	mov    rcx,rbx
   1400176b4:	lea    rsi,[rip+0x730e5]        # 0x14008a7a0
   1400176bb:	mov    rdx,rsi
   1400176be:	call   0x140048ca8
   1400176c3:	cmp    DWORD PTR [rip+0x6c8be],0x1        # 0x140083f88
   1400176ca:	je     0x1400176d8
   1400176cc:	mov    rdx,rsi
   1400176cf:	mov    rcx,rsi
   1400176d2:	call   QWORD PTR [rip+0x54e38]        # 0x14006c510
   1400176d8:	or     r8,0xffffffffffffffff
   1400176dc:	inc    r8
   1400176df:	cmp    BYTE PTR [rsi+r8*1],bpl
   1400176e3:	jne    0x1400176dc
   1400176e5:	mov    rdx,rsi
   1400176e8:	lea    r9,[rsp+0x30]
   1400176ed:	mov    QWORD PTR [rsp+0x20],rbp
   1400176f2:	mov    rcx,rdi
   1400176f5:	call   QWORD PTR [rip+0x54c35]        # 0x14006c330
   1400176fb:	jmp    0x140017768
   1400176fd:	call   0x140006ac4
   140017702:	mov    QWORD PTR [rsp+0x28],rbx
   140017707:	lea    r9,[rsp+0x40]
   14001770c:	lea    rbx,[rip+0x7008d]        # 0x1400877a0
   140017713:	mov    QWORD PTR [rsp+0x20],rbp
   140017718:	mov    r8d,0x1800
   14001771e:	mov    rdx,rbx
   140017721:	mov    rcx,QWORD PTR [rax]
   140017724:	call   0x14005d174
   140017729:	mov    ecx,0x2
   14001772e:	call   0x14005e734
   140017733:	mov    ecx,ebp
   140017735:	cmp    rdi,rax
   140017738:	setne  cl
   14001773b:	add    ecx,0xfffffff4
   14001773e:	call   QWORD PTR [rip+0x54bf4]        # 0x14006c338
   140017744:	or     r8,0xffffffffffffffff
   140017748:	inc    r8
   14001774b:	cmp    WORD PTR [rbx+r8*2],bp
   140017750:	jne    0x140017748
   140017752:	lea    r9,[rsp+0x34]
   140017757:	mov    QWORD PTR [rsp+0x20],rbp
   14001775c:	mov    rdx,rbx
   14001775f:	mov    rcx,rax
   140017762:	call   QWORD PTR [rip+0x54ba8]        # 0x14006c310
   140017768:	mov    rcx,QWORD PTR [rsp+0x840]
   140017770:	xor    rcx,rsp
   140017773:	call   0x140055f90
   140017778:	mov    rbx,QWORD PTR [rsp+0x888]
   140017780:	add    rsp,0x850
   140017787:	pop    rdi
   140017788:	pop    rsi
   140017789:	pop    rbp
   14001778a:	ret    
   14001778b:	int3   
   14001778c:	mov    rax,rsp
   14001778f:	mov    QWORD PTR [rax+0x8],rcx
   140017793:	mov    QWORD PTR [rax+0x10],rdx
   140017797:	mov    QWORD PTR [rax+0x18],r8
   14001779b:	mov    QWORD PTR [rax+0x20],r9
   14001779f:	push   rbx
   1400177a0:	sub    rsp,0x20
   1400177a4:	cmp    DWORD PTR [rip+0x6c7d9],0x3        # 0x140083f84
   1400177ab:	je     0x1400177de
   1400177ad:	mov    ecx,0x1
   1400177b2:	call   0x14005e734
   1400177b7:	mov    rcx,rax
   1400177ba:	call   0x14005e970
   1400177bf:	mov    ecx,0x2
   1400177c4:	lea    rbx,[rsp+0x38]
   1400177c9:	call   0x14005e734
   1400177ce:	mov    rdx,QWORD PTR [rsp+0x30]
   1400177d3:	mov    rcx,rax
   1400177d6:	mov    r8,rbx
   1400177d9:	call   0x1400175cc
   1400177de:	add    rsp,0x20
   1400177e2:	pop    rbx
   1400177e3:	ret    
   1400177e4:	rex push rbp
   1400177e6:	push   rdi
   1400177e7:	push   r12
   1400177e9:	push   r14
   1400177eb:	push   r15
   1400177ed:	lea    rbp,[rsp-0xfa0]
   1400177f5:	mov    eax,0x10a0
   1400177fa:	call   0x140055f20
   1400177ff:	sub    rsp,rax
   140017802:	mov    QWORD PTR [rsp+0x58],0xfffffffffffffffe
   14001780b:	mov    QWORD PTR [rsp+0x10e0],rbx
   140017813:	mov    QWORD PTR [rsp+0x10e8],rsi
   14001781b:	mov    rax,QWORD PTR [rip+0x6a6be]        # 0x140081ee0
   140017822:	xor    rax,rsp
   140017825:	mov    QWORD PTR [rbp+0xf90],rax
   14001782c:	mov    rsi,rdx
   14001782f:	mov    rdi,rcx
   140017832:	mov    ecx,0x2
   140017837:	call   0x14005e734
   14001783c:	mov    rcx,rax
   14001783f:	call   0x14005e970
   140017844:	xor    r12d,r12d
   140017847:	mov    WORD PTR [rdi],r12w
   14001784b:	cmp    BYTE PTR [rip+0x6c73c],r12b        # 0x140083f8e
   140017852:	je     0x1400178ff
   140017858:	mov    QWORD PTR [rsp+0x38],r12
   14001785d:	mov    QWORD PTR [rsp+0x40],r12
   140017862:	mov    QWORD PTR [rsp+0x48],r12
   140017867:	mov    QWORD PTR [rsp+0x50],r12
   14001786c:	mov    rdx,rsi
   14001786f:	shl    rdx,0x2
   140017873:	lea    rcx,[rsp+0x38]
   140017878:	call   0x1400079a4
   14001787d:	nop
   14001787e:	lea    rcx,[rsp+0x60]
   140017883:	call   0x14002071c
   140017888:	nop
   140017889:	mov    DWORD PTR [rsp+0x74],0x1
   140017891:	mov    r14,QWORD PTR [rsp+0x40]
   140017896:	lea    r8,[r14-0x1]
   14001789a:	mov    rbx,QWORD PTR [rsp+0x38]
   14001789f:	mov    rdx,rbx
   1400178a2:	lea    rcx,[rsp+0x60]
   1400178a7:	call   0x140020ed4
   1400178ac:	movsxd r15,eax
   1400178af:	test   eax,eax
   1400178b1:	jg     0x1400178c4
   1400178b3:	mov    edx,0xff
   1400178b8:	lea    rcx,[rip+0x7cfa1]        # 0x140094860
   1400178bf:	call   0x14001bc60
   1400178c4:	mov    rax,r15
   1400178c7:	mov    BYTE PTR [r15+rbx*1],r12b
   1400178cb:	mov    r8,rsi
   1400178ce:	mov    rdx,rdi
   1400178d1:	mov    rcx,rbx
   1400178d4:	call   0x1400489f0
   1400178d9:	mov    rdx,r14
   1400178dc:	mov    rcx,rbx
   1400178df:	call   0x1400438bc
   1400178e4:	nop
   1400178e5:	lea    rcx,[rsp+0x60]
   1400178ea:	call   0x140020758
   1400178ef:	nop
   1400178f0:	test   rbx,rbx
   1400178f3:	je     0x140017936
   1400178f5:	mov    rcx,rbx
   1400178f8:	call   0x14005a938
   1400178fd:	jmp    0x140017936
   1400178ff:	mov    DWORD PTR [rsp+0x30],r12d
   140017904:	mov    ecx,0xfffffff6
   140017909:	call   QWORD PTR [rip+0x54a29]        # 0x14006c338
   14001790f:	mov    rcx,rax
   140017912:	mov    QWORD PTR [rsp+0x20],r12
   140017917:	lea    r9,[rsp+0x30]
   14001791c:	lea    r8d,[rsi-0x1]
   140017920:	mov    rdx,rdi
   140017923:	call   QWORD PTR [rip+0x549ef]        # 0x14006c318
   140017929:	test   eax,eax
   14001792b:	je     0x140017940
   14001792d:	mov    edx,DWORD PTR [rsp+0x30]
   140017931:	mov    WORD PTR [rdi+rdx*2],r12w
   140017936:	mov    rcx,rdi
   140017939:	call   0x140045ef8
   14001793e:	mov    al,0x1
   140017940:	mov    rcx,QWORD PTR [rbp+0xf90]
   140017947:	xor    rcx,rsp
   14001794a:	call   0x140055f90
   14001794f:	lea    r11,[rsp+0x10a0]
   140017957:	mov    rbx,QWORD PTR [r11+0x40]
   14001795b:	mov    rsi,QWORD PTR [r11+0x48]
   14001795f:	mov    rsp,r11
   140017962:	pop    r15
   140017964:	pop    r14
   140017966:	pop    r12
   140017968:	pop    rdi
   140017969:	pop    rbp
   14001796a:	ret    
   14001796b:	int3   
   14001796c:	mov    rax,rsp
   14001796f:	mov    QWORD PTR [rax+0x8],rcx
   140017973:	mov    QWORD PTR [rax+0x10],rdx
   140017977:	mov    QWORD PTR [rax+0x18],r8
   14001797b:	mov    QWORD PTR [rax+0x20],r9
   14001797f:	push   rdi
   140017980:	sub    rsp,0x20
   140017984:	mov    eax,DWORD PTR [rip+0x6c5fa]        # 0x140083f84
   14001798a:	add    eax,0xfffffffe
   14001798d:	cmp    eax,0x1
   140017990:	jbe    0x1400179d1
   140017992:	mov    ecx,0x2
   140017997:	call   0x14005e734
   14001799c:	mov    rcx,rax
   14001799f:	call   0x14005e970
   1400179a4:	cmp    DWORD PTR [rip+0x6c5d9],0x1        # 0x140083f84
   1400179ab:	lea    rdi,[rsp+0x38]
   1400179b0:	mov    ecx,0x2
   1400179b5:	je     0x1400179bc
   1400179b7:	mov    ecx,0x1
   1400179bc:	call   0x14005e734
   1400179c1:	mov    rdx,QWORD PTR [rsp+0x30]
   1400179c6:	mov    r8,rdi
   1400179c9:	mov    rcx,rax
   1400179cc:	call   0x1400175cc
   1400179d1:	add    rsp,0x20
   1400179d5:	pop    rdi
   1400179d6:	ret    
   1400179d7:	int3   
   1400179d8:	mov    QWORD PTR [rsp+0x8],rbx
   1400179dd:	push   rdi
   1400179de:	sub    rsp,0x20
   1400179e2:	mov    rbx,rcx
   1400179e5:	lea    rdi,[rip+0x765c4]        # 0x14008dfb0
   1400179ec:	mov    rcx,rdi
   1400179ef:	call   0x140017dac
   1400179f4:	lea    rdx,[rip+0x76db5]        # 0x14008e7b0
   1400179fb:	mov    r9d,0x100
   140017a01:	mov    r8,QWORD PTR [rdx-0x800]
   140017a08:	mov    r10,rdx
   140017a0b:	mov    r11d,0x7
   140017a11:	mov    rax,r8
   140017a14:	movzx  ecx,r8b
   140017a18:	shr    rax,0x8
   140017a1c:	mov    r8,QWORD PTR [rdi+rcx*8]
   140017a20:	xor    r8,rax
   140017a23:	mov    QWORD PTR [r10],r8
   140017a26:	lea    r10,[r10+0x800]
   140017a2d:	sub    r11,0x1
   140017a31:	jne    0x140017a11
   140017a33:	add    rdx,0x8
   140017a37:	sub    r9,0x1
   140017a3b:	jne    0x140017a01
   140017a3d:	mov    rax,rbx
   140017a40:	mov    rbx,QWORD PTR [rsp+0x30]
   140017a45:	add    rsp,0x20
   140017a49:	pop    rdi
   140017a4a:	ret    
   140017a4b:	int3   
   140017a4c:	mov    QWORD PTR [rsp+0x8],rbx
   140017a51:	push   rdi
   140017a52:	sub    rsp,0x20
   140017a56:	mov    rbx,rcx
   140017a59:	lea    rdi,[rip+0x74550]        # 0x14008bfb0
   140017a60:	mov    rcx,rdi
   140017a63:	call   0x140017d64
   140017a68:	lea    rdx,[rip+0x74941]        # 0x14008c3b0
   140017a6f:	mov    r9d,0x100
   140017a75:	mov    r8d,DWORD PTR [rdx-0x400]
   140017a7c:	mov    r10,rdx
   140017a7f:	mov    r11d,0x7
   140017a85:	mov    eax,r8d
   140017a88:	movzx  ecx,r8b
   140017a8c:	shr    eax,0x8
   140017a8f:	mov    r8d,DWORD PTR [rdi+rcx*4]
   140017a93:	xor    r8d,eax
   140017a96:	mov    DWORD PTR [r10],r8d
   140017a99:	lea    r10,[r10+0x400]
   140017aa0:	sub    r11,0x1
   140017aa4:	jne    0x140017a85
   140017aa6:	add    rdx,0x4
   140017aaa:	sub    r9,0x1
   140017aae:	jne    0x140017a75
   140017ab0:	mov    rax,rbx
   140017ab3:	mov    rbx,QWORD PTR [rsp+0x30]
   140017ab8:	add    rsp,0x20
   140017abc:	pop    rdi
   140017abd:	ret    
   140017abe:	int3   
   140017abf:	int3   
   140017ac0:	mov    QWORD PTR [rsp+0x8],rbx
   140017ac5:	mov    QWORD PTR [rsp+0x10],rsi
   140017aca:	mov    QWORD PTR [rsp+0x18],rdi
   140017acf:	lea    rsi,[rip+0x744da]        # 0x14008bfb0
   140017ad6:	mov    r10,r8
   140017ad9:	mov    rbx,rdx
   140017adc:	mov    r11d,ecx
   140017adf:	test   r8,r8
   140017ae2:	je     0x140017b09
   140017ae4:	test   bl,0x7
   140017ae7:	je     0x140017b09
   140017ae9:	movzx  ecx,BYTE PTR [rbx]
   140017aec:	inc    rbx
   140017aef:	movzx  eax,r11b
   140017af3:	xor    rcx,rax
   140017af6:	mov    eax,r11d
   140017af9:	shr    eax,0x8
   140017afc:	mov    r11d,DWORD PTR [rsi+rcx*4]
   140017b00:	xor    r11d,eax
   140017b03:	sub    r10,0x1
   140017b07:	jne    0x140017ae4
   140017b09:	cmp    r10,0x8
   140017b0d:	jb     0x140017bb3
   140017b13:	mov    rdi,r10
   140017b16:	shr    rdi,0x3
   140017b1a:	imul   rax,rdi,0xfffffffffffffff8
   140017b1e:	add    r10,rax
   140017b21:	xor    r11d,DWORD PTR [rbx]
   140017b24:	mov    r9d,DWORD PTR [rbx+0x4]
   140017b28:	add    rbx,0x8
   140017b2c:	mov    eax,r9d
   140017b2f:	shr    eax,0x18
   140017b32:	movzx  edx,al
   140017b35:	mov    eax,r9d
   140017b38:	shr    eax,0x10
   140017b3b:	movzx  ecx,al
   140017b3e:	mov    eax,r9d
   140017b41:	shr    eax,0x8
   140017b44:	mov    r8d,DWORD PTR [rsi+rdx*4]
   140017b48:	xor    r8d,DWORD PTR [rsi+rcx*4+0x400]
   140017b50:	movzx  ecx,al
   140017b53:	mov    eax,r11d
   140017b56:	shr    eax,0x18
   140017b59:	xor    r8d,DWORD PTR [rsi+rcx*4+0x800]
   140017b61:	movzx  ecx,al
   140017b64:	mov    eax,r11d
   140017b67:	shr    eax,0x10
   140017b6a:	xor    r8d,DWORD PTR [rsi+rcx*4+0x1000]
   140017b72:	movzx  ecx,al
   140017b75:	mov    eax,r11d
   140017b78:	shr    eax,0x8
   140017b7b:	xor    r8d,DWORD PTR [rsi+rcx*4+0x1400]
   140017b83:	movzx  ecx,al
   140017b86:	movzx  eax,r9b
   140017b8a:	xor    r8d,DWORD PTR [rsi+rcx*4+0x1800]
   140017b92:	xor    r8d,DWORD PTR [rsi+rax*4+0xc00]
   140017b9a:	movzx  eax,r11b
   140017b9e:	mov    r11d,r8d
   140017ba1:	xor    r11d,DWORD PTR [rsi+rax*4+0x1c00]
   140017ba9:	sub    rdi,0x1
   140017bad:	jne    0x140017b21
   140017bb3:	test   r10,r10
   140017bb6:	je     0x140017bd8
   140017bb8:	movzx  ecx,BYTE PTR [rbx]
   140017bbb:	inc    rbx
   140017bbe:	movzx  eax,r11b
   140017bc2:	xor    rcx,rax
   140017bc5:	mov    eax,r11d
   140017bc8:	shr    eax,0x8
   140017bcb:	mov    r11d,DWORD PTR [rsi+rcx*4]
   140017bcf:	xor    r11d,eax
   140017bd2:	sub    r10,0x1
   140017bd6:	jne    0x140017bb8
   140017bd8:	mov    rbx,QWORD PTR [rsp+0x8]
   140017bdd:	mov    eax,r11d
   140017be0:	mov    rsi,QWORD PTR [rsp+0x10]
   140017be5:	mov    rdi,QWORD PTR [rsp+0x18]
   140017bea:	ret    
   140017beb:	int3   
   140017bec:	mov    rax,rsp
   140017bef:	mov    QWORD PTR [rax+0x8],rbx
   140017bf3:	mov    QWORD PTR [rax+0x10],rsi
   140017bf7:	mov    QWORD PTR [rax+0x18],rdi
   140017bfb:	mov    QWORD PTR [rax+0x20],r14
   140017bff:	xor    esi,esi
   140017c01:	lea    r14,[rip+0x763a8]        # 0x14008dfb0
   140017c08:	mov    r10,r8
   140017c0b:	mov    r11,rdx
   140017c0e:	mov    r9,rcx
   140017c11:	test   r8,r8
   140017c14:	je     0x140017c3e
   140017c16:	test   r11b,0x7
   140017c1a:	je     0x140017c3e
   140017c1c:	movzx  ecx,BYTE PTR [r11]
   140017c20:	inc    r11
   140017c23:	movzx  eax,r9b
   140017c27:	xor    rcx,rax
   140017c2a:	mov    rax,r9
   140017c2d:	shr    rax,0x8
   140017c31:	mov    r9,QWORD PTR [r14+rcx*8]
   140017c35:	xor    r9,rax
   140017c38:	sub    r10,0x1
   140017c3c:	jne    0x140017c16
   140017c3e:	mov    rax,r10
   140017c41:	mov    rdi,rsi
   140017c44:	shr    rax,0x3
   140017c48:	lea    rcx,[r11+rax*8]
   140017c4c:	mov    rbx,rcx
   140017c4f:	sub    rbx,r11
   140017c52:	add    rbx,0x7
   140017c56:	shr    rbx,0x3
   140017c5a:	cmp    r11,rcx
   140017c5d:	cmova  rbx,rsi
   140017c61:	test   rbx,rbx
   140017c64:	je     0x140017d03
   140017c6a:	mov    r8,QWORD PTR [r11]
   140017c6d:	inc    rdi
   140017c70:	xor    r8,r9
   140017c73:	add    r11,0x8
   140017c77:	mov    rdx,r8
   140017c7a:	mov    rax,r8
   140017c7d:	shr    rax,0x30
   140017c81:	movzx  ecx,al
   140017c84:	mov    rax,r8
   140017c87:	shr    rax,0x28
   140017c8b:	shr    rdx,0x38
   140017c8f:	mov    r9,QWORD PTR [r14+rdx*8]
   140017c93:	xor    r9,QWORD PTR [r14+rcx*8+0x800]
   140017c9b:	movzx  ecx,al
   140017c9e:	mov    rax,r8
   140017ca1:	shr    rax,0x20
   140017ca5:	xor    r9,QWORD PTR [r14+rcx*8+0x1000]
   140017cad:	movzx  ecx,al
   140017cb0:	mov    rax,r8
   140017cb3:	shr    rax,0x18
   140017cb7:	xor    r9,QWORD PTR [r14+rcx*8+0x1800]
   140017cbf:	movzx  ecx,al
   140017cc2:	mov    rax,r8
   140017cc5:	shr    rax,0x10
   140017cc9:	xor    r9,QWORD PTR [r14+rcx*8+0x2000]
   140017cd1:	movzx  ecx,al
   140017cd4:	mov    rax,r8
   140017cd7:	shr    rax,0x8
   140017cdb:	xor    r9,QWORD PTR [r14+rcx*8+0x2800]
   140017ce3:	movzx  ecx,al
   140017ce6:	movzx  eax,r8b
   140017cea:	xor    r9,QWORD PTR [r14+rcx*8+0x3000]
   140017cf2:	xor    r9,QWORD PTR [r14+rax*8+0x3800]
   140017cfa:	cmp    rdi,rbx
   140017cfd:	jb     0x140017c6a
   140017d03:	and    r10d,0x7
   140017d07:	jbe    0x140017d2b
   140017d09:	movzx  ecx,BYTE PTR [r11]
   140017d0d:	inc    r11
   140017d10:	movzx  eax,r9b
   140017d14:	xor    rcx,rax
   140017d17:	mov    rax,r9
   140017d1a:	shr    rax,0x8
   140017d1e:	mov    r9,QWORD PTR [r14+rcx*8]
   140017d22:	xor    r9,rax
   140017d25:	sub    r10,0x1
   140017d29:	jne    0x140017d09
   140017d2b:	mov    rbx,QWORD PTR [rsp+0x8]
   140017d30:	mov    rax,r9
   140017d33:	mov    rsi,QWORD PTR [rsp+0x10]
   140017d38:	mov    rdi,QWORD PTR [rsp+0x18]
   140017d3d:	mov    r14,QWORD PTR [rsp+0x20]
   140017d42:	ret    
   140017d43:	int3   
   140017d44:	xor    r9d,r9d
   140017d47:	test   r8,r8
   140017d4a:	je     0x140017d5f
   140017d4c:	movzx  eax,BYTE PTR [r9+rdx*1]
   140017d51:	inc    r9
   140017d54:	add    cx,ax
   140017d57:	rol    cx,1
   140017d5a:	cmp    r9,r8
   140017d5d:	jb     0x140017d4c
   140017d5f:	movzx  eax,cx
   140017d62:	ret    
   140017d63:	int3   
   140017d64:	cmp    DWORD PTR [rcx+0x4],0x0
   140017d68:	mov    r8,rcx
   140017d6b:	jne    0x140017dab
   140017d6d:	xor    r9d,r9d
   140017d70:	mov    r10d,r9d
   140017d73:	mov    r11d,0x8
   140017d79:	mov    edx,r10d
   140017d7c:	mov    ecx,r10d
   140017d7f:	shr    edx,1
   140017d81:	mov    eax,edx
   140017d83:	mov    r10d,edx
   140017d86:	xor    eax,0xedb88320
   140017d8b:	and    cl,0x1
   140017d8e:	cmovne r10d,eax
   140017d92:	sub    r11,0x1
   140017d96:	jne    0x140017d79
   140017d98:	mov    DWORD PTR [r8],r10d
   140017d9b:	inc    r9d
   140017d9e:	add    r8,0x4
   140017da2:	cmp    r9d,0x100
   140017da9:	jb     0x140017d70
   140017dab:	ret    
   140017dac:	mov    QWORD PTR [rsp+0x8],rbx
   140017db1:	mov    r8,rcx
   140017db4:	xor    r9d,r9d
   140017db7:	mov    r11d,0x100
   140017dbd:	mov    r10,r9
   140017dc0:	mov    ebx,0x8
   140017dc5:	mov    rdx,r10
   140017dc8:	mov    cl,r10b
   140017dcb:	shr    rdx,1
   140017dce:	movabs r10,0xc96c5795d7870f42
   140017dd8:	mov    rax,rdx
   140017ddb:	xor    rax,r10
   140017dde:	mov    r10,rdx
   140017de1:	and    cl,0x1
   140017de4:	cmovne r10,rax
   140017de8:	sub    rbx,0x1
   140017dec:	jne    0x140017dc5
   140017dee:	mov    QWORD PTR [r8],r10
   140017df1:	inc    r9
   140017df4:	add    r8,0x8
   140017df8:	sub    r11,0x1
   140017dfc:	jne    0x140017dbd
   140017dfe:	mov    rbx,QWORD PTR [rsp+0x8]
   140017e03:	ret    
   140017e04:	mov    r11,rsp
   140017e07:	mov    QWORD PTR [r11+0x8],rcx
   140017e0b:	push   rdi
   140017e0c:	sub    rsp,0x40
   140017e10:	mov    QWORD PTR [r11-0x18],0xfffffffffffffffe
   140017e18:	mov    QWORD PTR [r11+0x10],rbx
   140017e1c:	mov    rdi,rcx
   140017e1f:	lea    rax,[rip+0x13e]        # 0x140017f64
   140017e26:	mov    QWORD PTR [r11-0x28],rax
   140017e2a:	lea    r9,[rip+0xa3]        # 0x140017ed4
   140017e31:	mov    edx,0x12c
   140017e36:	mov    r8d,0x4
   140017e3c:	call   0x140055c6c
   140017e41:	nop
   140017e42:	lea    rbx,[rdi+0x4b4]
   140017e49:	lea    rax,[rip+0x114]        # 0x140017f64
   140017e50:	mov    QWORD PTR [rsp+0x20],rax
   140017e55:	lea    r9,[rip+0x78]        # 0x140017ed4
   140017e5c:	mov    edx,0x178
   140017e61:	mov    r8d,0x4
   140017e67:	mov    rcx,rbx
   140017e6a:	call   0x140055c6c
   140017e6f:	nop
   140017e70:	lea    rcx,[rdi+0xa9c]
   140017e77:	call   0x140040204
   140017e7c:	and    DWORD PTR [rdi+0xa98],0x0
   140017e83:	xor    edx,edx
   140017e85:	mov    r8d,0x4b0
   140017e8b:	mov    rcx,rdi
   140017e8e:	call   0x140058f40
   140017e93:	xor    edx,edx
   140017e95:	mov    r8d,0x5e0
   140017e9b:	mov    rcx,rbx
   140017e9e:	call   0x140058f40
   140017ea3:	and    DWORD PTR [rdi+0x4b0],0x0
   140017eaa:	and    DWORD PTR [rdi+0xa94],0x0
   140017eb1:	lea    rcx,[rdi+0xba4]
   140017eb8:	xor    edx,edx
   140017eba:	mov    r8d,0x400
   140017ec0:	call   0x140058f40
   140017ec5:	nop
   140017ec6:	mov    rax,rdi
   140017ec9:	mov    rbx,QWORD PTR [rsp+0x58]
   140017ece:	add    rsp,0x40
   140017ed2:	pop    rdi
   140017ed3:	ret    
   140017ed4:	rex push rbx
   140017ed6:	sub    rsp,0x20
   140017eda:	mov    rbx,rcx
   140017edd:	call   0x14004356c
   140017ee2:	mov    rax,rbx
   140017ee5:	add    rsp,0x20
   140017ee9:	pop    rbx
   140017eea:	ret    
   140017eeb:	int3   
   140017eec:	rex push rdi
   140017eee:	sub    rsp,0x30
   140017ef2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140017efb:	mov    QWORD PTR [rsp+0x40],rbx
   140017f00:	mov    rdi,rcx
   140017f03:	mov    edx,0x4b0
   140017f08:	call   0x1400438bc
   140017f0d:	nop
   140017f0e:	lea    rbx,[rdi+0x4b4]
   140017f15:	mov    edx,0x5e0
   140017f1a:	mov    rcx,rbx
   140017f1d:	call   0x1400438bc
   140017f22:	nop
   140017f23:	lea    r9,[rip+0x3a]        # 0x140017f64
   140017f2a:	mov    edx,0x178
   140017f2f:	mov    r8d,0x4
   140017f35:	mov    rcx,rbx
   140017f38:	call   0x140055cdc
   140017f3d:	nop
   140017f3e:	lea    r9,[rip+0x1f]        # 0x140017f64
   140017f45:	mov    edx,0x12c
   140017f4a:	mov    r8d,0x4
   140017f50:	mov    rcx,rdi
   140017f53:	mov    rbx,QWORD PTR [rsp+0x40]
   140017f58:	add    rsp,0x30
   140017f5c:	pop    rdi
   140017f5d:	jmp    0x140055cdc
   140017f62:	int3   
   140017f63:	int3   
   140017f64:	jmp    0x140043640
   140017f69:	int3   
   140017f6a:	int3   
   140017f6b:	int3   
   140017f6c:	mov    r11,rsp
   140017f6f:	mov    QWORD PTR [r11+0x18],rbx
   140017f73:	mov    QWORD PTR [r11+0x20],rsi
   140017f77:	push   rdi
   140017f78:	sub    rsp,0x60
   140017f7c:	mov    rax,QWORD PTR [rip+0x69f5d]        # 0x140081ee0
   140017f83:	xor    rax,rsp
   140017f86:	mov    QWORD PTR [rsp+0x58],rax
   140017f8b:	cmp    DWORD PTR [rcx],0x2
   140017f8e:	mov    rdi,rdx
   140017f91:	mov    rbx,rcx
   140017f94:	mov    esi,0x20
   140017f99:	jne    0x140017fec
   140017f9b:	mov    eax,DWORD PTR [rcx+0x4]
   140017f9e:	lea    r9d,[rsi-0x1c]
   140017fa2:	mov    DWORD PTR [rsp+0x30],eax
   140017fa6:	lea    r8,[r11-0x38]
   140017faa:	lea    rax,[r11-0x30]
   140017fae:	mov    edx,esi
   140017fb0:	mov    rcx,rdi
   140017fb3:	mov    QWORD PTR [r11-0x48],rax
   140017fb7:	call   0x1400192c4
   140017fbc:	xor    r8d,r8d
   140017fbf:	lea    r10,[rsp+0x38]
   140017fc4:	mov    DWORD PTR [rbx+0x4],r8d
   140017fc8:	mov    r9d,r8d
   140017fcb:	movzx  eax,BYTE PTR [r10]
   140017fcf:	mov    ecx,r8d
   140017fd2:	and    ecx,0x3
   140017fd5:	inc    r8d
   140017fd8:	shl    ecx,0x3
   140017fdb:	inc    r10
   140017fde:	shl    eax,cl
   140017fe0:	xor    r9d,eax
   140017fe3:	cmp    r8d,esi
   140017fe6:	jb     0x140017fcb
   140017fe8:	mov    DWORD PTR [rbx+0x4],r9d
   140017fec:	cmp    DWORD PTR [rbx],0x3
   140017fef:	jne    0x14001801f
   140017ff1:	lea    rax,[rsp+0x38]
   140017ff6:	mov    r9,rsi
   140017ff9:	lea    r8,[rbx+0x4]
   140017ffd:	mov    QWORD PTR [rsp+0x20],rax
   140018002:	mov    rdx,rsi
   140018005:	mov    rcx,rdi
   140018008:	call   0x1400192c4
   14001800d:	movups xmm0,XMMWORD PTR [rsp+0x38]
   140018012:	movups xmm1,XMMWORD PTR [rsp+0x48]
   140018017:	movups XMMWORD PTR [rbx+0x4],xmm0
   14001801b:	movups XMMWORD PTR [rbx+0x14],xmm1
   14001801f:	mov    rcx,QWORD PTR [rsp+0x58]
   140018024:	xor    rcx,rsp
   140018027:	call   0x140055f90
   14001802c:	lea    r11,[rsp+0x60]
   140018031:	mov    rbx,QWORD PTR [r11+0x20]
   140018035:	mov    rsi,QWORD PTR [r11+0x28]
   140018039:	mov    rsp,r11
   14001803c:	pop    rdi
   14001803d:	ret    
   14001803e:	int3   
   14001803f:	int3   
   140018040:	mov    r10,rdx
   140018043:	mov    r9,rcx
   140018046:	test   r8,r8
   140018049:	je     0x1400180f0
   14001804f:	mov    eax,0x1234
   140018054:	add    WORD PTR [r9+0x10b8],ax
   14001805c:	movzx  edx,WORD PTR [r9+0x10b8]
   140018064:	mov    eax,edx
   140018066:	shr    rax,1
   140018069:	movzx  eax,al
   14001806c:	movzx  ecx,WORD PTR [r9+rax*4+0xba4]
   140018075:	mov    eax,edx
   140018077:	xor    WORD PTR [r9+0x10ba],cx
   14001807f:	shr    rax,1
   140018082:	movzx  eax,al
   140018085:	movzx  ecx,WORD PTR [r9+rax*4+0xba6]
   14001808e:	sub    WORD PTR [r9+0x10bc],cx
   140018096:	mov    ecx,0x1
   14001809b:	movzx  eax,WORD PTR [r9+0x10bc]
   1400180a3:	xor    ax,dx
   1400180a6:	mov    WORD PTR [r9+0x10b8],ax
   1400180ae:	movzx  eax,WORD PTR [r9+0x10be]
   1400180b6:	ror    ax,cl
   1400180b9:	xor    ax,WORD PTR [r9+0x10ba]
   1400180c1:	ror    ax,cl
   1400180c4:	xor    WORD PTR [r9+0x10b8],ax
   1400180cc:	mov    WORD PTR [r9+0x10be],ax
   1400180d4:	movzx  eax,WORD PTR [r9+0x10b8]
   1400180dc:	shr    ax,0x8
   1400180e0:	xor    BYTE PTR [r10],al
   1400180e3:	inc    r10
   1400180e6:	sub    r8,0x1
   1400180ea:	jne    0x14001804f
   1400180f0:	ret    
   1400180f1:	int3   
   1400180f2:	int3   
   1400180f3:	int3   
   1400180f4:	test   r8,r8
   1400180f7:	je     0x140018122
   1400180f9:	mov    al,BYTE PTR [rcx+0x10b6]
   1400180ff:	add    BYTE PTR [rcx+0x10b5],al
   140018105:	mov    al,BYTE PTR [rcx+0x10b5]
   14001810b:	add    BYTE PTR [rcx+0x10b4],al
   140018111:	mov    al,BYTE PTR [rcx+0x10b4]
   140018117:	sub    BYTE PTR [rdx],al
   140018119:	inc    rdx
   14001811c:	sub    r8,0x1
   140018120:	jne    0x1400180f9
   140018122:	ret    
   140018123:	int3   
   140018124:	mov    QWORD PTR [rsp+0x18],rbx
   140018129:	mov    QWORD PTR [rsp+0x20],rbp
   14001812e:	push   rsi
   14001812f:	push   rdi
   140018130:	push   r12
   140018132:	push   r14
   140018134:	push   r15
   140018136:	sub    rsp,0x40
   14001813a:	mov    rax,QWORD PTR [rip+0x69d9f]        # 0x140081ee0
   140018141:	xor    rax,rsp
   140018144:	mov    QWORD PTR [rsp+0x30],rax
   140018149:	mov    edi,DWORD PTR [rdx]
   14001814b:	mov    r15d,0x1f
   140018151:	mov    r11d,DWORD PTR [rcx+0x10a8]
   140018158:	mov    r9,rdx
   14001815b:	mov    esi,DWORD PTR [rdx+0x8]
   14001815e:	mov    r10,rcx
   140018161:	movups xmm0,XMMWORD PTR [rdx]
   140018164:	mov    ebx,DWORD PTR [rcx+0x10a4]
   14001816a:	mov    r12d,r15d
   14001816d:	xor    r11d,DWORD PTR [rdx+0x4]
   140018171:	xor    edi,ebx
   140018173:	xor    esi,DWORD PTR [rcx+0x10ac]
   140018179:	mov    ebp,DWORD PTR [rdx+0xc]
   14001817c:	xor    ebp,DWORD PTR [rcx+0x10b0]
   140018182:	movdqu XMMWORD PTR [rsp+0x20],xmm0
   140018188:	mov    rax,r12
   14001818b:	mov    edx,ebp
   14001818d:	and    eax,0x3
   140018190:	rol    edx,0xb
   140018193:	add    edx,esi
   140018195:	dec    r12
   140018198:	mov    r8d,DWORD PTR [r10+rax*4+0x10a4]
   1400181a0:	xor    edx,r8d
   1400181a3:	mov    eax,edx
   1400181a5:	shr    eax,0x10
   1400181a8:	movzx  eax,al
   1400181ab:	movzx  r14d,BYTE PTR [rax+r10*1+0xfa4]
   1400181b4:	mov    eax,edx
   1400181b6:	shr    eax,0x18
   1400181b9:	movzx  ecx,BYTE PTR [rax+r10*1+0xfa4]
   1400181c2:	mov    eax,edx
   1400181c4:	shr    eax,0x8
   1400181c7:	movzx  eax,al
   1400181ca:	shl    ecx,0x8
   1400181cd:	or     r14d,ecx
   1400181d0:	movzx  ecx,dl
   1400181d3:	shl    r14d,0x8
   1400181d7:	mov    edx,esi
   1400181d9:	movzx  eax,BYTE PTR [rax+r10*1+0xfa4]
   1400181e2:	or     r14d,eax
   1400181e5:	ror    edx,0xf
   1400181e8:	movzx  eax,BYTE PTR [rcx+r10*1+0xfa4]
   1400181f1:	xor    edx,ebp
   1400181f3:	add    edx,r8d
   1400181f6:	shl    r14d,0x8
   1400181fa:	or     r14d,eax
   1400181fd:	mov    eax,edx
   1400181ff:	shr    eax,0x10
   140018202:	xor    r14d,edi
   140018205:	movzx  eax,al
   140018208:	mov    edi,esi
   14001820a:	mov    esi,r14d
   14001820d:	movzx  r8d,BYTE PTR [rax+r10*1+0xfa4]
   140018216:	mov    eax,edx
   140018218:	shr    eax,0x18
   14001821b:	movzx  ecx,BYTE PTR [rax+r10*1+0xfa4]
   140018224:	mov    eax,edx
   140018226:	shr    eax,0x8
   140018229:	shl    ecx,0x8
   14001822c:	or     r8d,ecx
   14001822f:	movzx  eax,al
   140018232:	shl    r8d,0x8
   140018236:	movzx  ecx,dl
   140018239:	movzx  eax,BYTE PTR [rax+r10*1+0xfa4]
   140018242:	or     r8d,eax
   140018245:	movzx  eax,BYTE PTR [rcx+r10*1+0xfa4]
   14001824e:	shl    r8d,0x8
   140018252:	or     r8d,eax
   140018255:	xor    r8d,r11d
   140018258:	mov    r11d,ebp
   14001825b:	sub    r15d,0x1
   14001825f:	mov    ebp,r8d
   140018262:	jns    0x140018188
   140018268:	xor    ebx,r14d
   14001826b:	lea    rdx,[rsp+0x20]
   140018270:	mov    DWORD PTR [r9],ebx
   140018273:	mov    rcx,r10
   140018276:	mov    eax,DWORD PTR [r10+0x10a8]
   14001827d:	xor    eax,r8d
   140018280:	mov    DWORD PTR [r9+0x4],eax
   140018284:	mov    eax,DWORD PTR [r10+0x10ac]
   14001828b:	xor    eax,edi
   14001828d:	mov    DWORD PTR [r9+0x8],eax
   140018291:	xor    r11d,DWORD PTR [r10+0x10b0]
   140018298:	mov    DWORD PTR [r9+0xc],r11d
   14001829c:	call   0x140019210
   1400182a1:	mov    rcx,QWORD PTR [rsp+0x30]
   1400182a6:	xor    rcx,rsp
   1400182a9:	call   0x140055f90
   1400182ae:	lea    r11,[rsp+0x40]
   1400182b3:	mov    rbx,QWORD PTR [r11+0x40]
   1400182b7:	mov    rbp,QWORD PTR [r11+0x48]
   1400182bb:	mov    rsp,r11
   1400182be:	pop    r15
   1400182c0:	pop    r14
   1400182c2:	pop    r12
   1400182c4:	pop    rdi
   1400182c5:	pop    rsi
   1400182c6:	ret    
   1400182c7:	int3   
   1400182c8:	mov    QWORD PTR [rsp+0x8],rbx
   1400182cd:	mov    QWORD PTR [rsp+0x10],rbp
   1400182d2:	mov    QWORD PTR [rsp+0x18],rsi
   1400182d7:	push   rdi
   1400182d8:	sub    rsp,0x20
   1400182dc:	mov    eax,DWORD PTR [rcx+0xa98]
   1400182e2:	mov    rdi,r8
   1400182e5:	mov    rsi,rdx
   1400182e8:	mov    rbp,rcx
   1400182eb:	cmp    eax,0x1
   1400182ee:	je     0x140018338
   1400182f0:	cmp    eax,0x2
   1400182f3:	je     0x140018331
   1400182f5:	cmp    eax,0x3
   1400182f8:	je     0x140018313
   1400182fa:	add    eax,0xfffffffc
   1400182fd:	cmp    eax,0x1
   140018300:	ja     0x14001833d
   140018302:	add    rcx,0xa9c
   140018309:	mov    r9,rdx
   14001830c:	call   0x1400406d8
   140018311:	jmp    0x14001833d
   140018313:	xor    ebx,ebx
   140018315:	test   r8,r8
   140018318:	je     0x14001833d
   14001831a:	lea    rdx,[rbx+rsi*1]
   14001831e:	mov    rcx,rbp
   140018321:	call   0x140018124
   140018326:	add    rbx,0x10
   14001832a:	cmp    rbx,rdi
   14001832d:	jb     0x14001831a
   14001832f:	jmp    0x14001833d
   140018331:	call   0x140018040
   140018336:	jmp    0x14001833d
   140018338:	call   0x1400180f4
   14001833d:	mov    rbx,QWORD PTR [rsp+0x30]
   140018342:	mov    rbp,QWORD PTR [rsp+0x38]
   140018347:	mov    rsi,QWORD PTR [rsp+0x40]
   14001834c:	add    rsp,0x20
   140018350:	pop    rdi
   140018351:	ret    
   140018352:	int3   
   140018353:	int3   
   140018354:	mov    rax,rsp
   140018357:	mov    QWORD PTR [rax+0x8],rbx
   14001835b:	mov    QWORD PTR [rax+0x10],rbp
   14001835f:	mov    QWORD PTR [rax+0x18],rsi
   140018363:	mov    QWORD PTR [rax+0x20],rdi
   140018367:	push   r12
   140018369:	push   r14
   14001836b:	push   r15
   14001836d:	sub    rsp,0x20
   140018371:	mov    ebx,DWORD PTR [rcx+0x10a4]
   140018377:	mov    r9,rdx
   14001837a:	mov    r11d,DWORD PTR [rcx+0x10a8]
   140018381:	mov    edi,ebx
   140018383:	mov    esi,DWORD PTR [rdx+0x8]
   140018386:	mov    r10,rcx
   140018389:	mov    ebp,DWORD PTR [rdx+0xc]
   14001838c:	xor    edi,DWORD PTR [rdx]
   14001838e:	xor    r11d,DWORD PTR [rdx+0x4]
   140018392:	xor    esi,DWORD PTR [rcx+0x10ac]
   140018398:	xor    ebp,DWORD PTR [rcx+0x10b0]
   14001839e:	xor    r15d,r15d
   1400183a1:	lea    r12d,[r15+0x20]
   1400183a5:	mov    rax,r15
   1400183a8:	mov    edx,ebp
   1400183aa:	and    eax,0x3
   1400183ad:	rol    edx,0xb
   1400183b0:	add    edx,esi
   1400183b2:	inc    r15
   1400183b5:	mov    r8d,DWORD PTR [r10+rax*4+0x10a4]
   1400183bd:	xor    edx,r8d
   1400183c0:	mov    eax,edx
   1400183c2:	shr    eax,0x10
   1400183c5:	movzx  eax,al
   1400183c8:	movzx  r14d,BYTE PTR [rax+r10*1+0xfa4]
   1400183d1:	mov    eax,edx
   1400183d3:	shr    eax,0x18
   1400183d6:	movzx  ecx,BYTE PTR [rax+r10*1+0xfa4]
   1400183df:	mov    eax,edx
   1400183e1:	shr    eax,0x8
   1400183e4:	movzx  eax,al
   1400183e7:	shl    ecx,0x8
   1400183ea:	or     r14d,ecx
   1400183ed:	movzx  ecx,dl
   1400183f0:	shl    r14d,0x8
   1400183f4:	mov    edx,esi
   1400183f6:	movzx  eax,BYTE PTR [rax+r10*1+0xfa4]
   1400183ff:	or     r14d,eax
   140018402:	ror    edx,0xf
   140018405:	movzx  eax,BYTE PTR [rcx+r10*1+0xfa4]
   14001840e:	xor    edx,ebp
   140018410:	add    edx,r8d
   140018413:	shl    r14d,0x8
   140018417:	or     r14d,eax
   14001841a:	mov    eax,edx
   14001841c:	shr    eax,0x10
   14001841f:	xor    r14d,edi
   140018422:	movzx  eax,al
   140018425:	mov    edi,esi
   140018427:	mov    esi,r14d
   14001842a:	movzx  r8d,BYTE PTR [rax+r10*1+0xfa4]
   140018433:	mov    eax,edx
   140018435:	shr    eax,0x18
   140018438:	movzx  ecx,BYTE PTR [rax+r10*1+0xfa4]
   140018441:	mov    eax,edx
   140018443:	shr    eax,0x8
   140018446:	shl    ecx,0x8
   140018449:	or     r8d,ecx
   14001844c:	movzx  eax,al
   14001844f:	shl    r8d,0x8
   140018453:	movzx  ecx,dl
   140018456:	movzx  eax,BYTE PTR [rax+r10*1+0xfa4]
   14001845f:	or     r8d,eax
   140018462:	movzx  eax,BYTE PTR [rcx+r10*1+0xfa4]
   14001846b:	shl    r8d,0x8
   14001846f:	or     r8d,eax
   140018472:	xor    r8d,r11d
   140018475:	mov    r11d,ebp
   140018478:	mov    ebp,r8d
   14001847b:	sub    r12,0x1
   14001847f:	jne    0x1400183a5
   140018485:	xor    ebx,r14d
   140018488:	mov    rdx,r9
   14001848b:	mov    DWORD PTR [r9],ebx
   14001848e:	mov    rcx,r10
   140018491:	mov    eax,DWORD PTR [r10+0x10a8]
   140018498:	xor    eax,r8d
   14001849b:	mov    DWORD PTR [r9+0x4],eax
   14001849f:	mov    eax,DWORD PTR [r10+0x10ac]
   1400184a6:	xor    eax,edi
   1400184a8:	mov    DWORD PTR [r9+0x8],eax
   1400184ac:	xor    r11d,DWORD PTR [r10+0x10b0]
   1400184b3:	mov    DWORD PTR [r9+0xc],r11d
   1400184b7:	mov    rbx,QWORD PTR [rsp+0x40]
   1400184bc:	mov    rbp,QWORD PTR [rsp+0x48]
   1400184c1:	mov    rsi,QWORD PTR [rsp+0x50]
   1400184c6:	mov    rdi,QWORD PTR [rsp+0x58]
   1400184cb:	add    rsp,0x20
   1400184cf:	pop    r15
   1400184d1:	pop    r14
   1400184d3:	pop    r12
   1400184d5:	jmp    0x140019210
   1400184da:	int3   
   1400184db:	int3   
   1400184dc:	sub    rsp,0x28
   1400184e0:	mov    eax,DWORD PTR [rcx+0xa98]
   1400184e6:	sub    eax,0x4
   1400184e9:	cmp    eax,0x1
   1400184ec:	ja     0x1400184fd
   1400184ee:	add    rcx,0xa9c
   1400184f5:	mov    r9,rdx
   1400184f8:	call   0x140040ba4
   1400184fd:	add    rsp,0x28
   140018501:	ret    
   140018502:	int3   
   140018503:	int3   
   140018504:	mov    rax,rsp
   140018507:	mov    QWORD PTR [rax+0x8],rbx
   14001850b:	push   rbp
   14001850c:	push   rsi
   14001850d:	push   rdi
   14001850e:	sub    rsp,0x30
   140018512:	xor    edi,edi
   140018514:	mov    DWORD PTR [rax-0x28],0xf0000040
   14001851b:	mov    rsi,rdx
   14001851e:	mov    QWORD PTR [rax+0x18],rdi
   140018522:	mov    rbp,rcx
   140018525:	xor    r8d,r8d
   140018528:	xor    edx,edx
   14001852a:	lea    rcx,[rax+0x18]
   14001852e:	lea    r9d,[rdi+0x1]
   140018532:	call   QWORD PTR [rip+0x53b28]        # 0x14006c060
   140018538:	test   eax,eax
   14001853a:	je     0x140018563
   14001853c:	mov    rcx,QWORD PTR [rsp+0x60]
   140018541:	mov    r8,rbp
   140018544:	mov    edx,esi
   140018546:	call   QWORD PTR [rip+0x53b04]        # 0x14006c050
   14001854c:	mov    rcx,QWORD PTR [rsp+0x60]
   140018551:	cmp    eax,0x1
   140018554:	sete   bl
   140018557:	xor    edx,edx
   140018559:	call   QWORD PTR [rip+0x53af9]        # 0x14006c058
   14001855f:	test   bl,bl
   140018561:	jne    0x1400185c0
   140018563:	lea    rcx,[rsp+0x68]
   140018568:	mov    QWORD PTR [rsp+0x68],rdi
   14001856d:	call   0x1400476c0
   140018572:	lea    rcx,[rsp+0x68]
   140018577:	call   0x140047484
   14001857c:	mov    rbx,rax
   14001857f:	call   0x14005ec64
   140018584:	movsxd rcx,eax
   140018587:	add    rbx,rcx
   14001858a:	test   rsi,rsi
   14001858d:	je     0x1400185c0
   14001858f:	mov    r8d,DWORD PTR [rip+0x79a1a]        # 0x140091fb0
   140018596:	mov    cl,dil
   140018599:	mov    rdx,rbx
   14001859c:	and    cl,0x7
   14001859f:	shl    cl,0x3
   1400185a2:	shr    rdx,cl
   1400185a5:	xor    dl,dil
   1400185a8:	add    dl,r8b
   1400185ab:	inc    r8d
   1400185ae:	mov    BYTE PTR [rdi+rbp*1],dl
   1400185b1:	inc    rdi
   1400185b4:	cmp    rdi,rsi
   1400185b7:	jb     0x140018596
   1400185b9:	mov    DWORD PTR [rip+0x799f0],r8d        # 0x140091fb0
   1400185c0:	mov    rbx,QWORD PTR [rsp+0x50]
   1400185c5:	add    rsp,0x30
   1400185c9:	pop    rdi
   1400185ca:	pop    rsi
   1400185cb:	pop    rbp
   1400185cc:	ret    
   1400185cd:	int3   
   1400185ce:	int3   
   1400185cf:	int3   
   1400185d0:	mov    DWORD PTR [rcx+0xa98],0x1
   1400185da:	mov    WORD PTR [rcx+0x10b4],0x700
   1400185e3:	mov    BYTE PTR [rcx+0x10b6],0x4d
   1400185ea:	ret    
   1400185eb:	int3   
   1400185ec:	mov    QWORD PTR [rsp+0x18],rbx
   1400185f1:	push   rbp
   1400185f2:	push   rsi
   1400185f3:	push   rdi
   1400185f4:	push   r12
   1400185f6:	push   r13
   1400185f8:	push   r14
   1400185fa:	push   r15
   1400185fc:	lea    rbp,[rsp-0xf0]
   140018604:	sub    rsp,0x1f0
   14001860b:	mov    rax,QWORD PTR [rip+0x698ce]        # 0x140081ee0
   140018612:	xor    rax,rsp
   140018615:	mov    QWORD PTR [rbp+0xe0],rax
   14001861c:	cmp    BYTE PTR [r9+0x100],0x0
   140018624:	mov    rsi,r9
   140018627:	mov    rax,QWORD PTR [rbp+0x170]
   14001862e:	mov    ebx,r8d
   140018631:	mov    r15,QWORD PTR [rbp+0x150]
   140018638:	mov    r14b,dl
   14001863b:	mov    r12,QWORD PTR [rbp+0x158]
   140018642:	mov    rdi,rcx
   140018645:	mov    r13,QWORD PTR [rbp+0x168]
   14001864c:	mov    QWORD PTR [rsp+0x50],rax
   140018651:	je     0x140018744
   140018657:	test   ebx,ebx
   140018659:	je     0x140018744
   14001865f:	mov    DWORD PTR [rcx+0xa98],ebx
   140018665:	lea    rdx,[rbp-0x20]
   140018669:	mov    rcx,r9
   14001866c:	mov    r8d,0x80
   140018672:	call   0x140043660
   140018677:	mov    r8d,0x80
   14001867d:	lea    rdx,[rsp+0x60]
   140018682:	lea    rcx,[rbp-0x20]
   140018686:	call   0x140048ca8
   14001868b:	sub    ebx,0x1
   14001868e:	je     0x140018716
   140018694:	sub    ebx,0x1
   140018697:	je     0x140018707
   140018699:	sub    ebx,0x1
   14001869c:	je     0x1400186f8
   14001869e:	sub    ebx,0x1
   1400186a1:	je     0x1400186df
   1400186a3:	cmp    ebx,0x1
   1400186a6:	jne    0x140018723
   1400186a8:	mov    rax,QWORD PTR [rsp+0x50]
   1400186ad:	lea    r9,[rbp-0x20]
   1400186b1:	mov    QWORD PTR [rsp+0x40],rax
   1400186b6:	mov    r8,rsi
   1400186b9:	mov    eax,DWORD PTR [rbp+0x160]
   1400186bf:	mov    dl,r14b
   1400186c2:	mov    QWORD PTR [rsp+0x38],r13
   1400186c7:	mov    rcx,rdi
   1400186ca:	mov    DWORD PTR [rsp+0x30],eax
   1400186ce:	mov    QWORD PTR [rsp+0x28],r12
   1400186d3:	mov    QWORD PTR [rsp+0x20],r15
   1400186d8:	call   0x140018e28
   1400186dd:	jmp    0x140018723
   1400186df:	lea    r9,[rbp-0x20]
   1400186e3:	mov    QWORD PTR [rsp+0x20],r15
   1400186e8:	mov    r8,rsi
   1400186eb:	mov    dl,r14b
   1400186ee:	mov    rcx,rdi
   1400186f1:	call   0x140018a5c
   1400186f6:	jmp    0x140018723
   1400186f8:	lea    rdx,[rsp+0x60]
   1400186fd:	mov    rcx,rdi
   140018700:	call   0x14001886c
   140018705:	jmp    0x140018723
   140018707:	lea    rdx,[rsp+0x60]
   14001870c:	mov    rcx,rdi
   14001870f:	call   0x1400187c0
   140018714:	jmp    0x140018723
   140018716:	lea    rdx,[rsp+0x60]
   14001871b:	mov    rcx,rdi
   14001871e:	call   0x140018770
   140018723:	mov    edx,0x80
   140018728:	lea    rcx,[rsp+0x60]
   14001872d:	call   0x1400438bc
   140018732:	mov    edx,0x100
   140018737:	lea    rcx,[rbp-0x20]
   14001873b:	call   0x1400438bc
   140018740:	mov    al,0x1
   140018742:	jmp    0x140018746
   140018744:	xor    al,al
   140018746:	mov    rcx,QWORD PTR [rbp+0xe0]
   14001874d:	xor    rcx,rsp
   140018750:	call   0x140055f90
   140018755:	mov    rbx,QWORD PTR [rsp+0x240]
   14001875d:	add    rsp,0x1f0
   140018764:	pop    r15
   140018766:	pop    r14
   140018768:	pop    r13
   14001876a:	pop    r12
   14001876c:	pop    rdi
   14001876d:	pop    rsi
   14001876e:	pop    rbp
   14001876f:	ret    
   140018770:	xor    r11d,r11d
   140018773:	mov    r8,rdx
   140018776:	mov    WORD PTR [rcx+0x10b5],r11w
   14001877e:	mov    BYTE PTR [rcx+0x10b4],r11b
   140018785:	mov    al,BYTE PTR [rdx]
   140018787:	test   al,al
   140018789:	je     0x1400187bc
   14001878b:	mov    dl,r11b
   14001878e:	mov    r9b,r11b
   140018791:	mov    r10b,r11b
   140018794:	add    dl,al
   140018796:	add    r10b,al
   140018799:	xor    r9b,al
   14001879c:	rol    dl,1
   14001879e:	inc    r8
   1400187a1:	mov    BYTE PTR [rcx+0x10b6],dl
   1400187a7:	mov    BYTE PTR [rcx+0x10b4],r10b
   1400187ae:	mov    BYTE PTR [rcx+0x10b5],r9b
   1400187b5:	mov    al,BYTE PTR [r8]
   1400187b8:	test   al,al
   1400187ba:	jne    0x140018794
   1400187bc:	ret    
   1400187bd:	int3   
   1400187be:	int3   
   1400187bf:	int3   
   1400187c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400187c5:	mov    QWORD PTR [rsp+0x10],rsi
   1400187ca:	push   rdi
   1400187cb:	sub    rsp,0x20
   1400187cf:	mov    rbx,rcx
   1400187d2:	mov    rdi,rdx
   1400187d5:	add    rcx,0xba4
   1400187dc:	call   0x140017d64
   1400187e1:	or     r8,0xffffffffffffffff
   1400187e5:	xor    esi,esi
   1400187e7:	inc    r8
   1400187ea:	cmp    BYTE PTR [rdi+r8*1],sil
   1400187ee:	jne    0x1400187e7
   1400187f0:	mov    rdx,rdi
   1400187f3:	or     ecx,0xffffffff
   1400187f6:	call   0x140017ac0
   1400187fb:	mov    WORD PTR [rbx+0x10b8],ax
   140018802:	shr    eax,0x10
   140018805:	mov    WORD PTR [rbx+0x10ba],ax
   14001880c:	mov    DWORD PTR [rbx+0x10bc],esi
   140018812:	mov    al,BYTE PTR [rdi]
   140018814:	test   al,al
   140018816:	je     0x14001885b
   140018818:	mov    r8d,esi
   14001881b:	mov    r9d,esi
   14001881e:	movzx  edx,al
   140018821:	inc    rdi
   140018824:	movzx  ecx,al
   140018827:	movzx  eax,WORD PTR [rbx+rdx*4+0xba4]
   14001882f:	xor    ax,cx
   140018832:	xor    r9w,ax
   140018836:	mov    WORD PTR [rbx+0x10bc],r9w
   14001883e:	movzx  eax,WORD PTR [rbx+rdx*4+0xba6]
   140018846:	add    ax,cx
   140018849:	add    r8w,ax
   14001884d:	mov    WORD PTR [rbx+0x10be],r8w
   140018855:	mov    al,BYTE PTR [rdi]
   140018857:	test   al,al
   140018859:	jne    0x14001881e
   14001885b:	mov    rbx,QWORD PTR [rsp+0x30]
   140018860:	mov    rsi,QWORD PTR [rsp+0x38]
   140018865:	add    rsp,0x20
   140018869:	pop    rdi
   14001886a:	ret    
   14001886b:	int3   
   14001886c:	mov    QWORD PTR [rsp+0x18],rbx
   140018871:	mov    QWORD PTR [rsp+0x20],rbp
   140018876:	push   rsi
   140018877:	push   rdi
   140018878:	push   r12
   14001887a:	push   r14
   14001887c:	push   r15
   14001887e:	sub    rsp,0xb0
   140018885:	mov    rax,QWORD PTR [rip+0x69654]        # 0x140081ee0
   14001888c:	xor    rax,rsp
   14001888f:	mov    QWORD PTR [rsp+0xa0],rax
   140018897:	mov    rsi,rcx
   14001889a:	mov    r14,rdx
   14001889d:	add    rcx,0xba4
   1400188a4:	call   0x140017d64
   1400188a9:	mov    r12d,0x80
   1400188af:	lea    rcx,[rsp+0x20]
   1400188b4:	mov    r8d,r12d
   1400188b7:	mov    rdx,r14
   1400188ba:	call   0x140046054
   1400188bf:	or     rbx,0xffffffffffffffff
   1400188c3:	lea    rax,[rsp+0x20]
   1400188c8:	xor    edi,edi
   1400188ca:	inc    rbx
   1400188cd:	cmp    BYTE PTR [rax+rbx*1],dil
   1400188d1:	jne    0x1400188ca
   1400188d3:	mov    DWORD PTR [rsi+0x10a4],0xd3a3b879
   1400188dd:	lea    rax,[rsi+0xfa4]
   1400188e4:	mov    DWORD PTR [rsi+0x10a8],0x3f6d12f7
   1400188ee:	lea    rcx,[rip+0x68adb]        # 0x1400813d0
   1400188f5:	mov    DWORD PTR [rsi+0x10ac],0x7515a235
   1400188ff:	mov    edx,0x2
   140018904:	mov    DWORD PTR [rsi+0x10b0],0xa4e7f123
   14001890e:	movups xmm0,XMMWORD PTR [rcx]
   140018911:	movups XMMWORD PTR [rax],xmm0
   140018914:	movups xmm1,XMMWORD PTR [rcx+0x10]
   140018918:	movups XMMWORD PTR [rax+0x10],xmm1
   14001891c:	movups xmm0,XMMWORD PTR [rcx+0x20]
   140018920:	movups XMMWORD PTR [rax+0x20],xmm0
   140018924:	movups xmm1,XMMWORD PTR [rcx+0x30]
   140018928:	movups XMMWORD PTR [rax+0x30],xmm1
   14001892c:	movups xmm0,XMMWORD PTR [rcx+0x40]
   140018930:	movups XMMWORD PTR [rax+0x40],xmm0
   140018934:	movups xmm1,XMMWORD PTR [rcx+0x50]
   140018938:	movups XMMWORD PTR [rax+0x50],xmm1
   14001893c:	movups xmm0,XMMWORD PTR [rcx+0x60]
   140018940:	movups XMMWORD PTR [rax+0x60],xmm0
   140018944:	add    rax,r12
   140018947:	movups xmm1,XMMWORD PTR [rcx+0x70]
   14001894b:	add    rcx,r12
   14001894e:	movups XMMWORD PTR [rax-0x10],xmm1
   140018952:	sub    rdx,0x1
   140018956:	jne    0x14001890e
   140018958:	mov    r10d,edi
   14001895b:	mov    r9,rdi
   14001895e:	test   rbx,rbx
   140018961:	je     0x1400189d4
   140018963:	movzx  eax,BYTE PTR [r14+r9*1]
   140018968:	mov    r15d,0x1
   14001896e:	sub    eax,r10d
   140018971:	movzx  eax,al
   140018974:	movzx  r11d,BYTE PTR [rsi+rax*4+0xba4]
   14001897d:	movzx  eax,BYTE PTR [r14+r9*1+0x1]
   140018983:	add    eax,r10d
   140018986:	movzx  eax,al
   140018989:	movzx  ebp,BYTE PTR [rsi+rax*4+0xba4]
   140018991:	jmp    0x1400189c6
   140018993:	mov    cl,BYTE PTR [r11+rsi*1+0xfa4]
   14001899b:	lea    rax,[r11+r15*1]
   14001899f:	add    rax,r9
   1400189a2:	movzx  edx,al
   1400189a5:	inc    r15d
   1400189a8:	mov    al,BYTE PTR [rdx+rsi*1+0xfa4]
   1400189af:	mov    BYTE PTR [r11+rsi*1+0xfa4],al
   1400189b7:	lea    eax,[r11+0x1]
   1400189bb:	movzx  r11d,al
   1400189bf:	mov    BYTE PTR [rdx+rsi*1+0xfa4],cl
   1400189c6:	cmp    r11d,ebp
   1400189c9:	jne    0x140018993
   1400189cb:	add    r9,0x2
   1400189cf:	cmp    r9,rbx
   1400189d2:	jb     0x140018963
   1400189d4:	inc    r10d
   1400189d7:	cmp    r10d,0x100
   1400189de:	jl     0x14001895b
   1400189e4:	test   bl,0xf
   1400189e7:	je     0x140018a0a
   1400189e9:	mov    rcx,rbx
   1400189ec:	mov    rax,rbx
   1400189ef:	or     rcx,0xf
   1400189f3:	cmp    rbx,rcx
   1400189f6:	ja     0x140018a0a
   1400189f8:	cmp    rax,r12
   1400189fb:	jae    0x140018a54
   1400189fd:	mov    BYTE PTR [rsp+rax*1+0x20],dil
   140018a02:	inc    rax
   140018a05:	cmp    rax,rcx
   140018a08:	jbe    0x1400189f8
   140018a0a:	test   rbx,rbx
   140018a0d:	je     0x140018a28
   140018a0f:	lea    rdx,[rsp+0x20]
   140018a14:	mov    rcx,rsi
   140018a17:	add    rdx,rdi
   140018a1a:	call   0x140018354
   140018a1f:	add    rdi,0x10
   140018a23:	cmp    rdi,rbx
   140018a26:	jb     0x140018a0f
   140018a28:	mov    rcx,QWORD PTR [rsp+0xa0]
   140018a30:	xor    rcx,rsp
   140018a33:	call   0x140055f90
   140018a38:	lea    r11,[rsp+0xb0]
   140018a40:	mov    rbx,QWORD PTR [r11+0x40]
   140018a44:	mov    rbp,QWORD PTR [r11+0x48]
   140018a48:	mov    rsp,r11
   140018a4b:	pop    r15
   140018a4d:	pop    r14
   140018a4f:	pop    r12
   140018a51:	pop    rdi
   140018a52:	pop    rsi
   140018a53:	ret    
   140018a54:	call   0x1400560e8
   140018a59:	int3   
   140018a5a:	int3   
   140018a5b:	int3   
   140018a5c:	rex push rbp
   140018a5e:	push   rbx
   140018a5f:	push   rsi
   140018a60:	push   rdi
   140018a61:	push   r12
   140018a63:	push   r13
   140018a65:	push   r14
   140018a67:	push   r15
   140018a69:	lea    rbp,[rsp-0x1f8]
   140018a71:	sub    rsp,0x2f8
   140018a78:	mov    rax,QWORD PTR [rip+0x69461]        # 0x140081ee0
   140018a7f:	xor    rax,rsp
   140018a82:	mov    QWORD PTR [rbp+0x1e0],rax
   140018a89:	mov    r12,QWORD PTR [rbp+0x260]
   140018a90:	lea    r15,[rcx+0x12a]
   140018a97:	xor    edi,edi
   140018a99:	mov    QWORD PTR [rsp+0x38],r9
   140018a9e:	mov    esi,edi
   140018aa0:	mov    BYTE PTR [rsp+0x30],dl
   140018aa4:	mov    r14,r8
   140018aa7:	mov    rbx,rcx
   140018aaa:	mov    eax,esi
   140018aac:	mov    rdx,r14
   140018aaf:	imul   r13,rax,0x12c
   140018ab6:	add    r13,rbx
   140018ab9:	mov    rcx,r13
   140018abc:	call   0x140043594
   140018ac1:	test   al,al
   140018ac3:	je     0x140018ae5
   140018ac5:	test   r12,r12
   140018ac8:	jne    0x140018acf
   140018aca:	cmp    BYTE PTR [r15],dil
   140018acd:	jmp    0x140018adf
   140018acf:	cmp    BYTE PTR [r15],dil
   140018ad2:	je     0x140018ae5
   140018ad4:	mov    rax,QWORD PTR [r13+0x102]
   140018adb:	cmp    rax,QWORD PTR [r12]
   140018adf:	je     0x140018df9
   140018ae5:	inc    esi
   140018ae7:	add    r15,0x12c
   140018aee:	cmp    esi,0x4
   140018af1:	jb     0x140018aaa
   140018af3:	mov    r15,QWORD PTR [rsp+0x38]
   140018af8:	lea    rdx,[rbp+0xd0]
   140018aff:	mov    rcx,r15
   140018b02:	mov    r8d,0x108
   140018b08:	call   0x140048cfc
   140018b0d:	or     rsi,0xffffffffffffffff
   140018b11:	inc    rsi
   140018b14:	cmp    WORD PTR [r15+rsi*2],di
   140018b19:	jne    0x140018b11
   140018b1b:	add    rsi,rsi
   140018b1e:	test   r12,r12
   140018b21:	je     0x140018b33
   140018b23:	mov    rax,QWORD PTR [r12]
   140018b27:	mov    QWORD PTR [rbp+rsi*1+0xd0],rax
   140018b2f:	add    rsi,0x8
   140018b33:	lea    rcx,[rsp+0x40]
   140018b38:	call   0x14004521c
   140018b3d:	mov    r15d,edi
   140018b40:	xor    r9d,r9d
   140018b43:	lea    rdx,[rbp+0xd0]
   140018b4a:	mov    r8,rsi
   140018b4d:	lea    rcx,[rsp+0x40]
   140018b52:	call   0x140045248
   140018b57:	mov    eax,r15d
   140018b5a:	mov    BYTE PTR [rsp+0x34],r15b
   140018b5f:	sar    eax,0x8
   140018b62:	lea    rdx,[rsp+0x34]
   140018b67:	mov    BYTE PTR [rsp+0x35],al
   140018b6b:	lea    rcx,[rsp+0x40]
   140018b70:	xor    r9d,r9d
   140018b73:	mov    eax,r15d
   140018b76:	sar    eax,0x10
   140018b79:	mov    BYTE PTR [rsp+0x36],al
   140018b7d:	lea    r8d,[r9+0x3]
   140018b81:	call   0x140045248
   140018b86:	mov    eax,r15d
   140018b89:	cdq    
   140018b8a:	and    edx,0x3fff
   140018b90:	add    eax,edx
   140018b92:	mov    r13d,eax
   140018b95:	and    eax,0x3fff
   140018b9a:	sar    r13d,0xe
   140018b9e:	cmp    eax,edx
   140018ba0:	jne    0x140018c2f
   140018ba6:	lea    rcx,[rsp+0x40]
   140018bab:	mov    eax,0x80
   140018bb0:	movups xmm0,XMMWORD PTR [rcx]
   140018bb3:	lea    rdx,[rbp-0x20]
   140018bb7:	xor    r8d,r8d
   140018bba:	movups xmm1,XMMWORD PTR [rcx+0x10]
   140018bbe:	movups XMMWORD PTR [rdx],xmm0
   140018bc1:	movups xmm0,XMMWORD PTR [rcx+0x20]
   140018bc5:	movups XMMWORD PTR [rdx+0x10],xmm1
   140018bc9:	movups xmm1,XMMWORD PTR [rcx+0x30]
   140018bcd:	movups XMMWORD PTR [rdx+0x20],xmm0
   140018bd1:	movups xmm0,XMMWORD PTR [rcx+0x40]
   140018bd5:	movups XMMWORD PTR [rdx+0x30],xmm1
   140018bd9:	movups xmm1,XMMWORD PTR [rcx+0x50]
   140018bdd:	movups XMMWORD PTR [rdx+0x40],xmm0
   140018be1:	movups xmm0,XMMWORD PTR [rcx+0x60]
   140018be5:	movups XMMWORD PTR [rdx+0x50],xmm1
   140018be9:	movups xmm1,XMMWORD PTR [rcx+0x70]
   140018bed:	add    rcx,rax
   140018bf0:	movups XMMWORD PTR [rdx+0x60],xmm0
   140018bf4:	add    rdx,rax
   140018bf7:	mov    rax,QWORD PTR [rcx+0x10]
   140018bfb:	movups xmm0,XMMWORD PTR [rcx]
   140018bfe:	movups XMMWORD PTR [rdx-0x10],xmm1
   140018c02:	movups XMMWORD PTR [rdx],xmm0
   140018c05:	mov    QWORD PTR [rdx+0x10],rax
   140018c09:	mov    eax,DWORD PTR [rcx+0x18]
   140018c0c:	lea    rcx,[rbp-0x20]
   140018c10:	mov    DWORD PTR [rdx+0x18],eax
   140018c13:	lea    rdx,[rbp+0x80]
   140018c1a:	call   0x1400450bc
   140018c1f:	mov    al,BYTE PTR [rbp+0x90]
   140018c25:	movsxd rcx,r13d
   140018c28:	mov    BYTE PTR [rbp+rcx*1+0xc0],al
   140018c2f:	inc    r15d
   140018c32:	cmp    r15d,0x40000
   140018c39:	jl     0x140018b40
   140018c3f:	xor    r8d,r8d
   140018c42:	lea    rdx,[rbp+0x98]
   140018c49:	lea    rcx,[rsp+0x40]
   140018c4e:	call   0x1400450bc
   140018c53:	mov    rdx,rdi
   140018c56:	lea    r8,[rbp+0xb0]
   140018c5d:	mov    ecx,edi
   140018c5f:	add    r8,rdx
   140018c62:	mov    eax,DWORD PTR [rbp+rdx*1+0x98]
   140018c69:	shr    eax,cl
   140018c6b:	add    ecx,0x8
   140018c6e:	mov    BYTE PTR [r8],al
   140018c71:	inc    r8
   140018c74:	cmp    ecx,0x20
   140018c77:	jl     0x140018c62
   140018c79:	add    rdx,0x4
   140018c7d:	cmp    rdx,0x10
   140018c81:	jl     0x140018c56
   140018c83:	mov    eax,DWORD PTR [rbx+0x4b0]
   140018c89:	imul   rdx,rax,0x12c
   140018c90:	mov    eax,0x2
   140018c95:	add    rdx,rbx
   140018c98:	lea    ecx,[rax+0x7e]
   140018c9b:	movups xmm0,XMMWORD PTR [r14]
   140018c9f:	movups XMMWORD PTR [rdx],xmm0
   140018ca2:	movups xmm1,XMMWORD PTR [r14+0x10]
   140018ca7:	movups XMMWORD PTR [rdx+0x10],xmm1
   140018cab:	movups xmm0,XMMWORD PTR [r14+0x20]
   140018cb0:	movups XMMWORD PTR [rdx+0x20],xmm0
   140018cb4:	movups xmm1,XMMWORD PTR [r14+0x30]
   140018cb9:	movups XMMWORD PTR [rdx+0x30],xmm1
   140018cbd:	movups xmm0,XMMWORD PTR [r14+0x40]
   140018cc2:	movups XMMWORD PTR [rdx+0x40],xmm0
   140018cc6:	movups xmm1,XMMWORD PTR [r14+0x50]
   140018ccb:	movups XMMWORD PTR [rdx+0x50],xmm1
   140018ccf:	movups xmm0,XMMWORD PTR [r14+0x60]
   140018cd4:	movups XMMWORD PTR [rdx+0x60],xmm0
   140018cd8:	add    rdx,rcx
   140018cdb:	movups xmm1,XMMWORD PTR [r14+0x70]
   140018ce0:	add    r14,rcx
   140018ce3:	movups XMMWORD PTR [rdx-0x10],xmm1
   140018ce7:	sub    rax,0x1
   140018ceb:	jne    0x140018c9b
   140018ced:	movzx  eax,WORD PTR [r14]
   140018cf1:	test   r12,r12
   140018cf4:	mov    WORD PTR [rdx],ax
   140018cf7:	mov    eax,DWORD PTR [rbx+0x4b0]
   140018cfd:	setne  dil
   140018d01:	imul   rcx,rax,0x12c
   140018d08:	mov    BYTE PTR [rcx+rbx*1+0x12a],dil
   140018d10:	cmp    dil,0x1
   140018d14:	jne    0x140018d2f
   140018d16:	mov    eax,DWORD PTR [rbx+0x4b0]
   140018d1c:	imul   rcx,rax,0x12c
   140018d23:	mov    rax,QWORD PTR [r12]
   140018d27:	mov    QWORD PTR [rcx+rbx*1+0x102],rax
   140018d2f:	mov    eax,DWORD PTR [rbx+0x4b0]
   140018d35:	mov    edx,0x108
   140018d3a:	movups xmm0,XMMWORD PTR [rbp+0xb0]
   140018d41:	imul   rcx,rax,0x12c
   140018d48:	movdqu XMMWORD PTR [rcx+rbx*1+0x10a],xmm0
   140018d51:	mov    eax,DWORD PTR [rbx+0x4b0]
   140018d57:	movups xmm0,XMMWORD PTR [rbp+0xc0]
   140018d5e:	imul   rcx,rax,0x12c
   140018d65:	movdqu XMMWORD PTR [rcx+rbx*1+0x11a],xmm0
   140018d6e:	mov    eax,DWORD PTR [rbx+0x4b0]
   140018d74:	lea    rcx,[rbp+0xd0]
   140018d7b:	inc    eax
   140018d7d:	and    eax,0x3
   140018d80:	mov    DWORD PTR [rbx+0x4b0],eax
   140018d86:	call   0x1400438bc
   140018d8b:	mov    dl,BYTE PTR [rsp+0x30]
   140018d8f:	lea    rax,[rbp+0xc0]
   140018d96:	lea    rcx,[rbx+0xa9c]
   140018d9d:	mov    QWORD PTR [rsp+0x20],rax
   140018da2:	mov    r9d,0x80
   140018da8:	lea    r8,[rbp+0xb0]
   140018daf:	call   0x1400405b8
   140018db4:	mov    edx,0x10
   140018db9:	lea    rcx,[rbp+0xb0]
   140018dc0:	call   0x1400438bc
   140018dc5:	mov    edx,0x10
   140018dca:	lea    rcx,[rbp+0xc0]
   140018dd1:	call   0x1400438bc
   140018dd6:	mov    rcx,QWORD PTR [rbp+0x1e0]
   140018ddd:	xor    rcx,rsp
   140018de0:	call   0x140055f90
   140018de5:	add    rsp,0x2f8
   140018dec:	pop    r15
   140018dee:	pop    r14
   140018df0:	pop    r13
   140018df2:	pop    r12
   140018df4:	pop    rdi
   140018df5:	pop    rsi
   140018df6:	pop    rbx
   140018df7:	pop    rbp
   140018df8:	ret    
   140018df9:	mov    eax,esi
   140018dfb:	imul   rcx,rax,0x12c
   140018e02:	movups xmm0,XMMWORD PTR [rcx+rbx*1+0x10a]
   140018e0a:	movups xmm1,XMMWORD PTR [rcx+rbx*1+0x11a]
   140018e12:	movdqu XMMWORD PTR [rbp+0xb0],xmm0
   140018e1a:	movdqu XMMWORD PTR [rbp+0xc0],xmm1
   140018e22:	jmp    0x140018d8b
   140018e27:	int3   
   140018e28:	rex push rbp
   140018e2a:	push   rbx
   140018e2b:	push   rsi
   140018e2c:	push   rdi
   140018e2d:	push   r12
   140018e2f:	push   r13
   140018e31:	push   r14
   140018e33:	push   r15
   140018e35:	lea    rbp,[rsp-0x1d8]
   140018e3d:	sub    rsp,0x2d8
   140018e44:	mov    rax,QWORD PTR [rip+0x69095]        # 0x140081ee0
   140018e4b:	xor    rax,rsp
   140018e4e:	mov    QWORD PTR [rbp+0x1c0],rax
   140018e55:	mov    rax,QWORD PTR [rbp+0x248]
   140018e5c:	mov    rbx,r8
   140018e5f:	mov    r15d,DWORD PTR [rbp+0x250]
   140018e66:	mov    r13,QWORD PTR [rbp+0x240]
   140018e6d:	mov    r12,QWORD PTR [rbp+0x258]
   140018e74:	mov    r14,QWORD PTR [rbp+0x260]
   140018e7b:	mov    QWORD PTR [rsp+0x58],rax
   140018e80:	mov    QWORD PTR [rsp+0x50],r9
   140018e85:	mov    BYTE PTR [rsp+0x40],dl
   140018e89:	mov    QWORD PTR [rsp+0x48],rcx
   140018e8e:	cmp    r15d,0x18
   140018e92:	ja     0x1400190ca
   140018e98:	xor    esi,esi
   140018e9a:	lea    rdi,[rcx+0x4b4]
   140018ea1:	cmp    DWORD PTR [rdi+0x134],r15d
   140018ea8:	jne    0x140018ed7
   140018eaa:	mov    rdx,rbx
   140018ead:	mov    rcx,rdi
   140018eb0:	call   0x140043594
   140018eb5:	test   al,al
   140018eb7:	je     0x140018ed7
   140018eb9:	mov    rax,QWORD PTR [rdi+0x102]
   140018ec0:	cmp    rax,QWORD PTR [r13+0x0]
   140018ec4:	jne    0x140018ed7
   140018ec6:	mov    rax,QWORD PTR [rdi+0x10a]
   140018ecd:	cmp    rax,QWORD PTR [r13+0x8]
   140018ed1:	je     0x1400190ed
   140018ed7:	inc    esi
   140018ed9:	add    rdi,0x178
   140018ee0:	cmp    esi,0x4
   140018ee3:	jb     0x140018ea1
   140018ee5:	mov    rcx,QWORD PTR [rsp+0x50]
   140018eea:	lea    rdx,[rbp-0x40]
   140018eee:	mov    edi,0x200
   140018ef3:	mov    r8d,edi
   140018ef6:	call   0x140048d2c
   140018efb:	mov    ecx,r15d
   140018efe:	mov    eax,0x1
   140018f03:	shl    eax,cl
   140018f05:	lea    rcx,[rbp-0x40]
   140018f09:	or     rdx,0xffffffffffffffff
   140018f0d:	inc    rdx
   140018f10:	cmp    BYTE PTR [rcx+rdx*1],0x0
   140018f14:	jne    0x140018f0d
   140018f16:	mov    DWORD PTR [rsp+0x38],eax
   140018f1a:	lea    rcx,[rbp-0x40]
   140018f1e:	lea    rax,[rbp-0x80]
   140018f22:	mov    r9d,0x10
   140018f28:	mov    QWORD PTR [rsp+0x30],rax
   140018f2d:	mov    r8,r13
   140018f30:	lea    rax,[rsp+0x60]
   140018f35:	mov    QWORD PTR [rsp+0x28],rax
   140018f3a:	lea    rax,[rbp-0x60]
   140018f3e:	mov    QWORD PTR [rsp+0x20],rax
   140018f43:	call   0x14001945c
   140018f48:	mov    rdx,rdi
   140018f4b:	lea    rcx,[rbp-0x40]
   140018f4f:	call   0x1400438bc
   140018f54:	mov    rdi,QWORD PTR [rsp+0x48]
   140018f59:	mov    ecx,DWORD PTR [rdi+0xa94]
   140018f5f:	lea    rdx,[rdi+0x4b4]
   140018f66:	mov    eax,ecx
   140018f68:	and    eax,0x3
   140018f6b:	imul   rax,rax,0x178
   140018f72:	add    rdx,rax
   140018f75:	lea    eax,[rcx+0x1]
   140018f78:	mov    DWORD PTR [rdi+0xa94],eax
   140018f7e:	mov    rcx,rdx
   140018f81:	mov    eax,0x2
   140018f86:	mov    DWORD PTR [rdx+0x134],r15d
   140018f8d:	lea    r8d,[rax+0x7e]
   140018f91:	movups xmm0,XMMWORD PTR [rbx]
   140018f94:	movups XMMWORD PTR [rcx],xmm0
   140018f97:	movups xmm1,XMMWORD PTR [rbx+0x10]
   140018f9b:	movups XMMWORD PTR [rcx+0x10],xmm1
   140018f9f:	movups xmm0,XMMWORD PTR [rbx+0x20]
   140018fa3:	movups XMMWORD PTR [rcx+0x20],xmm0
   140018fa7:	movups xmm1,XMMWORD PTR [rbx+0x30]
   140018fab:	movups XMMWORD PTR [rcx+0x30],xmm1
   140018faf:	movups xmm0,XMMWORD PTR [rbx+0x40]
   140018fb3:	movups XMMWORD PTR [rcx+0x40],xmm0
   140018fb7:	movups xmm1,XMMWORD PTR [rbx+0x50]
   140018fbb:	movups XMMWORD PTR [rcx+0x50],xmm1
   140018fbf:	movups xmm0,XMMWORD PTR [rbx+0x60]
   140018fc3:	movups XMMWORD PTR [rcx+0x60],xmm0
   140018fc7:	add    rcx,r8
   140018fca:	movups xmm1,XMMWORD PTR [rbx+0x70]
   140018fce:	add    rbx,r8
   140018fd1:	movups XMMWORD PTR [rcx-0x10],xmm1
   140018fd5:	sub    rax,0x1
   140018fd9:	jne    0x140018f91
   140018fdb:	movzx  eax,WORD PTR [rbx]
   140018fde:	xor    r9d,r9d
   140018fe1:	mov    WORD PTR [rcx],ax
   140018fe4:	mov    r8b,0x1
   140018fe7:	movups xmm0,XMMWORD PTR [r13+0x0]
   140018fec:	lea    rcx,[rdx+0x112]
   140018ff3:	lea    esi,[r9+0x20]
   140018ff7:	movdqu XMMWORD PTR [rdx+0x102],xmm0
   140018fff:	movups xmm0,XMMWORD PTR [rbp-0x60]
   140019003:	movups XMMWORD PTR [rcx],xmm0
   140019006:	movups xmm1,XMMWORD PTR [rbp-0x50]
   14001900a:	movups XMMWORD PTR [rcx+0x10],xmm1
   14001900e:	movups xmm0,XMMWORD PTR [rbp-0x80]
   140019012:	movups XMMWORD PTR [rdx+0x138],xmm0
   140019019:	movups xmm1,XMMWORD PTR [rbp-0x70]
   14001901d:	movups XMMWORD PTR [rdx+0x148],xmm1
   140019024:	movups xmm0,XMMWORD PTR [rsp+0x60]
   140019029:	movups XMMWORD PTR [rdx+0x158],xmm0
   140019030:	movups xmm1,XMMWORD PTR [rsp+0x70]
   140019035:	movups XMMWORD PTR [rdx+0x168],xmm1
   14001903c:	mov    edx,esi
   14001903e:	call   0x140043710
   140019043:	movups xmm3,XMMWORD PTR [rsp+0x70]
   140019048:	movups xmm2,XMMWORD PTR [rsp+0x60]
   14001904d:	test   r12,r12
   140019050:	je     0x14001905d
   140019052:	movups XMMWORD PTR [r12],xmm2
   140019057:	movups XMMWORD PTR [r12+0x10],xmm3
   14001905d:	test   r14,r14
   140019060:	je     0x140019095
   140019062:	xor    eax,eax
   140019064:	lea    r8,[rbp-0x80]
   140019068:	mov    QWORD PTR [r14],rax
   14001906b:	xor    edx,edx
   14001906d:	mov    r9,rsi
   140019070:	mov    al,BYTE PTR [r8]
   140019073:	mov    rcx,rdx
   140019076:	and    ecx,0x7
   140019079:	inc    rdx
   14001907c:	inc    r8
   14001907f:	xor    BYTE PTR [rcx+r14*1],al
   140019083:	sub    r9,0x1
   140019087:	jne    0x140019070
   140019089:	mov    rdx,rsi
   14001908c:	lea    rcx,[rbp-0x80]
   140019090:	call   0x1400438bc
   140019095:	mov    rax,QWORD PTR [rsp+0x58]
   14001909a:	test   rax,rax
   14001909d:	je     0x1400190be
   14001909f:	mov    dl,BYTE PTR [rsp+0x40]
   1400190a3:	lea    rcx,[rdi+0xa9c]
   1400190aa:	mov    r9d,0x100
   1400190b0:	mov    QWORD PTR [rsp+0x20],rax
   1400190b5:	lea    r8,[rbp-0x60]
   1400190b9:	call   0x1400405b8
   1400190be:	mov    rdx,rsi
   1400190c1:	lea    rcx,[rbp-0x60]
   1400190c5:	call   0x1400438bc
   1400190ca:	mov    rcx,QWORD PTR [rbp+0x1c0]
   1400190d1:	xor    rcx,rsp
   1400190d4:	call   0x140055f90
   1400190d9:	add    rsp,0x2d8
   1400190e0:	pop    r15
   1400190e2:	pop    r14
   1400190e4:	pop    r13
   1400190e6:	pop    r12
   1400190e8:	pop    rdi
   1400190e9:	pop    rsi
   1400190ea:	pop    rbx
   1400190eb:	pop    rbp
   1400190ec:	ret    
   1400190ed:	xor    r9d,r9d
   1400190f0:	lea    rbx,[rdi+0x112]
   1400190f7:	xor    r8d,r8d
   1400190fa:	mov    rcx,rbx
   1400190fd:	lea    esi,[r9+0x20]
   140019101:	mov    edx,esi
   140019103:	call   0x140043710
   140019108:	movups xmm0,XMMWORD PTR [rbx]
   14001910b:	xor    r9d,r9d
   14001910e:	mov    r8b,0x1
   140019111:	movups xmm1,XMMWORD PTR [rbx+0x10]
   140019115:	mov    edx,esi
   140019117:	mov    rcx,rbx
   14001911a:	movups XMMWORD PTR [rbp-0x60],xmm0
   14001911e:	movups XMMWORD PTR [rbp-0x50],xmm1
   140019122:	call   0x140043710
   140019127:	movups xmm0,XMMWORD PTR [rdi+0x138]
   14001912e:	movups xmm1,XMMWORD PTR [rdi+0x148]
   140019135:	movups XMMWORD PTR [rbp-0x80],xmm0
   140019139:	movups xmm0,XMMWORD PTR [rdi+0x158]
   140019140:	movups XMMWORD PTR [rbp-0x70],xmm1
   140019144:	movups xmm1,XMMWORD PTR [rdi+0x168]
   14001914b:	mov    rdi,QWORD PTR [rsp+0x48]
   140019150:	movups xmm2,xmm0
   140019153:	movups XMMWORD PTR [rsp+0x60],xmm0
   140019158:	movups xmm3,xmm1
   14001915b:	movups XMMWORD PTR [rsp+0x70],xmm1
   140019160:	jmp    0x14001904d
   140019165:	int3   
   140019166:	int3   
   140019167:	int3   
   140019168:	mov    r11,rsp
   14001916b:	mov    QWORD PTR [r11+0x18],rbx
   14001916f:	push   rdi
   140019170:	sub    rsp,0xd0
   140019177:	mov    rax,QWORD PTR [rip+0x68d62]        # 0x140081ee0
   14001917e:	xor    rax,rsp
   140019181:	mov    QWORD PTR [rsp+0xc0],rax
   140019189:	mov    rbx,rdx
   14001918c:	mov    rdi,rcx
   14001918f:	mov    edx,0x10
   140019194:	lea    rcx,[r11-0x48]
   140019198:	call   0x140018504
   14001919d:	lea    rcx,[rsp+0x20]
   1400191a2:	call   0x1400454a4
   1400191a7:	mov    r8d,0x10
   1400191ad:	lea    rdx,[rsp+0x90]
   1400191b5:	lea    rcx,[rsp+0x20]
   1400191ba:	call   0x1400454e4
   1400191bf:	lea    rdx,[rsp+0xa0]
   1400191c7:	lea    rcx,[rsp+0x20]
   1400191cc:	call   0x14004538c
   1400191d1:	mov    r8d,0x20
   1400191d7:	lea    rdx,[rsp+0xa0]
   1400191df:	cmp    rbx,r8
   1400191e2:	mov    rcx,rdi
   1400191e5:	cmovb  r8,rbx
   1400191e9:	call   0x140059180
   1400191ee:	mov    rcx,QWORD PTR [rsp+0xc0]
   1400191f6:	xor    rcx,rsp
   1400191f9:	call   0x140055f90
   1400191fe:	mov    rbx,QWORD PTR [rsp+0xf0]
   140019206:	add    rsp,0xd0
   14001920d:	pop    rdi
   14001920e:	ret    
   14001920f:	int3   
   140019210:	mov    rax,rsp
   140019213:	mov    QWORD PTR [rax+0x8],rbx
   140019217:	mov    QWORD PTR [rax+0x10],rbp
   14001921b:	mov    QWORD PTR [rax+0x18],rsi
   14001921f:	mov    QWORD PTR [rax+0x20],rdi
   140019223:	mov    r9d,DWORD PTR [rcx+0x10a4]
   14001922a:	lea    r8,[rdx+0x1]
   14001922e:	mov    r10d,DWORD PTR [rcx+0x10a8]
   140019235:	mov    rdi,rdx
   140019238:	mov    r11d,DWORD PTR [rcx+0x10ac]
   14001923f:	mov    rsi,rdx
   140019242:	mov    ebx,DWORD PTR [rcx+0x10b0]
   140019248:	sub    rdi,r8
   14001924b:	sub    rsi,r8
   14001924e:	mov    ebp,0x4
   140019253:	sub    rdx,r8
   140019256:	movzx  eax,BYTE PTR [rdi+r8*1]
   14001925b:	xor    r9d,DWORD PTR [rcx+rax*4+0xba4]
   140019263:	mov    DWORD PTR [rcx+0x10a4],r9d
   14001926a:	movzx  eax,BYTE PTR [r8]
   14001926e:	lea    r8,[r8+0x4]
   140019272:	xor    r10d,DWORD PTR [rcx+rax*4+0xba4]
   14001927a:	mov    DWORD PTR [rcx+0x10a8],r10d
   140019281:	movzx  eax,BYTE PTR [rsi+r8*1-0x2]
   140019287:	xor    r11d,DWORD PTR [rcx+rax*4+0xba4]
   14001928f:	mov    DWORD PTR [rcx+0x10ac],r11d
   140019296:	movzx  eax,BYTE PTR [rdx+r8*1-0x1]
   14001929c:	xor    ebx,DWORD PTR [rcx+rax*4+0xba4]
   1400192a3:	mov    DWORD PTR [rcx+0x10b0],ebx
   1400192a9:	sub    rbp,0x1
   1400192ad:	jne    0x140019256
   1400192af:	mov    rbx,QWORD PTR [rsp+0x8]
   1400192b4:	mov    rbp,QWORD PTR [rsp+0x10]
   1400192b9:	mov    rsi,QWORD PTR [rsp+0x18]
   1400192be:	mov    rdi,QWORD PTR [rsp+0x20]
   1400192c3:	ret    
   1400192c4:	rex push rbp
   1400192c6:	push   rbx
   1400192c7:	push   rsi
   1400192c8:	push   rdi
   1400192c9:	push   r12
   1400192cb:	push   r13
   1400192cd:	push   r14
   1400192cf:	push   r15
   1400192d1:	lea    rbp,[rsp-0x108]
   1400192d9:	sub    rsp,0x208
   1400192e0:	mov    rax,QWORD PTR [rip+0x68bf9]        # 0x140081ee0
   1400192e7:	xor    rax,rsp
   1400192ea:	mov    QWORD PTR [rbp+0xf0],rax
   1400192f1:	mov    r14,QWORD PTR [rbp+0x170]
   1400192f8:	mov    r13d,0x40
   1400192fe:	mov    r12,r9
   140019301:	mov    r15,r8
   140019304:	mov    rbx,rdx
   140019307:	mov    rsi,rcx
   14001930a:	cmp    rdx,r13
   14001930d:	jbe    0x140019342
   14001930f:	lea    rcx,[rbp+0x0]
   140019313:	call   0x1400454a4
   140019318:	mov    r8,rbx
   14001931b:	lea    rcx,[rbp+0x0]
   14001931f:	mov    rdx,rsi
   140019322:	call   0x1400454e4
   140019327:	lea    rdx,[rbp+0xb0]
   14001932e:	lea    rcx,[rbp+0x0]
   140019332:	call   0x14004538c
   140019337:	lea    rsi,[rbp+0xb0]
   14001933e:	lea    ebx,[r13-0x20]
   140019342:	xor    edi,edi
   140019344:	mov    dl,0x36
   140019346:	mov    r8d,edi
   140019349:	test   rbx,rbx
   14001934c:	je     0x14001936f
   14001934e:	lea    rax,[rbp+0x70]
   140019352:	mov    r9,rsi
   140019355:	sub    r9,rax
   140019358:	lea    rcx,[rbp+0x70]
   14001935c:	add    rcx,r8
   14001935f:	inc    r8
   140019362:	mov    al,BYTE PTR [r9+rcx*1]
   140019366:	xor    al,dl
   140019368:	mov    BYTE PTR [rcx],al
   14001936a:	cmp    r8,rbx
   14001936d:	jb     0x140019358
   14001936f:	cmp    rbx,r13
   140019372:	jae    0x140019386
   140019374:	mov    r8,r13
   140019377:	lea    rcx,[rbp+0x70]
   14001937b:	sub    r8,rbx
   14001937e:	add    rcx,rbx
   140019381:	call   0x140058f40
   140019386:	lea    rcx,[rsp+0x20]
   14001938b:	call   0x1400454a4
   140019390:	mov    r8,r13
   140019393:	lea    rdx,[rbp+0x70]
   140019397:	lea    rcx,[rsp+0x20]
   14001939c:	call   0x1400454e4
   1400193a1:	mov    r8,r12
   1400193a4:	lea    rcx,[rsp+0x20]
   1400193a9:	mov    rdx,r15
   1400193ac:	call   0x1400454e4
   1400193b1:	lea    rdx,[rbp+0xd0]
   1400193b8:	lea    rcx,[rsp+0x20]
   1400193bd:	call   0x14004538c
   1400193c2:	lea    rcx,[rbp-0x70]
   1400193c6:	call   0x1400454a4
   1400193cb:	mov    dl,0x5c
   1400193cd:	test   rbx,rbx
   1400193d0:	je     0x1400193ef
   1400193d2:	lea    rax,[rbp+0x70]
   1400193d6:	sub    rsi,rax
   1400193d9:	lea    rcx,[rbp+0x70]
   1400193dd:	add    rcx,rdi
   1400193e0:	inc    rdi
   1400193e3:	mov    al,BYTE PTR [rsi+rcx*1]
   1400193e6:	xor    al,dl
   1400193e8:	mov    BYTE PTR [rcx],al
   1400193ea:	cmp    rdi,rbx
   1400193ed:	jb     0x1400193d9
   1400193ef:	cmp    rbx,r13
   1400193f2:	jae    0x140019406
   1400193f4:	mov    r8,r13
   1400193f7:	lea    rcx,[rbp+0x70]
   1400193fb:	sub    r8,rbx
   1400193fe:	add    rcx,rbx
   140019401:	call   0x140058f40
   140019406:	mov    r8,r13
   140019409:	lea    rdx,[rbp+0x70]
   14001940d:	lea    rcx,[rbp-0x70]
   140019411:	call   0x1400454e4
   140019416:	mov    r8d,0x20
   14001941c:	lea    rdx,[rbp+0xd0]
   140019423:	lea    rcx,[rbp-0x70]
   140019427:	call   0x1400454e4
   14001942c:	mov    rdx,r14
   14001942f:	lea    rcx,[rbp-0x70]
   140019433:	call   0x14004538c
   140019438:	mov    rcx,QWORD PTR [rbp+0xf0]
   14001943f:	xor    rcx,rsp
   140019442:	call   0x140055f90
   140019447:	add    rsp,0x208
   14001944e:	pop    r15
   140019450:	pop    r14
   140019452:	pop    r13
   140019454:	pop    r12
   140019456:	pop    rdi
   140019457:	pop    rsi
   140019458:	pop    rbx
   140019459:	pop    rbp
   14001945a:	ret    
   14001945b:	int3   
   14001945c:	rex push rbp
   14001945e:	push   rbx
   14001945f:	push   rsi
   140019460:	push   rdi
   140019461:	push   r12
   140019463:	push   r14
   140019465:	push   r15
   140019467:	lea    rbp,[rsp-0x20]
   14001946c:	sub    rsp,0x120
   140019473:	mov    rax,QWORD PTR [rip+0x68a66]        # 0x140081ee0
   14001947a:	xor    rax,rsp
   14001947d:	mov    QWORD PTR [rbp+0x10],rax
   140019481:	mov    rdi,QWORD PTR [rbp+0x80]
   140019488:	mov    rax,r8
   14001948b:	mov    rsi,QWORD PTR [rbp+0x88]
   140019492:	mov    r8d,0x40
   140019498:	mov    r14,QWORD PTR [rbp+0x90]
   14001949f:	cmp    r9,r8
   1400194a2:	mov    r12,rdx
   1400194a5:	mov    r15,rcx
   1400194a8:	cmovb  r8,r9
   1400194ac:	lea    rcx,[rbp-0x40]
   1400194b0:	mov    rdx,rax
   1400194b3:	mov    rbx,r9
   1400194b6:	call   0x140059180
   1400194bb:	cmp    rbx,0x44
   1400194bf:	jae    0x140019646
   1400194c5:	lea    rax,[rbx+0x1]
   1400194c9:	mov    BYTE PTR [rbp+rbx*1-0x40],0x0
   1400194ce:	cmp    rax,0x44
   1400194d2:	jae    0x140019640
   1400194d8:	mov    BYTE PTR [rbp+rax*1-0x40],0x0
   1400194dd:	lea    rax,[rbx+0x2]
   1400194e1:	cmp    rax,0x44
   1400194e5:	jae    0x14001963a
   1400194eb:	mov    BYTE PTR [rbp+rax*1-0x40],0x0
   1400194f0:	lea    r9,[rbx+0x4]
   1400194f4:	lea    rax,[rsp+0x58]
   1400194f9:	mov    BYTE PTR [rbp+rbx*1-0x3d],0x1
   1400194fe:	lea    r8,[rbp-0x40]
   140019502:	mov    QWORD PTR [rsp+0x20],rax
   140019507:	mov    rdx,r12
   14001950a:	mov    rcx,r15
   14001950d:	call   0x1400192c4
   140019512:	movups xmm0,XMMWORD PTR [rsp+0x58]
   140019517:	mov    eax,DWORD PTR [rbp+0x98]
   14001951d:	movups xmm1,XMMWORD PTR [rsp+0x68]
   140019522:	dec    eax
   140019524:	mov    QWORD PTR [rsp+0x40],rdi
   140019529:	mov    QWORD PTR [rsp+0x48],rsi
   14001952e:	lea    rdi,[rsp+0x30]
   140019533:	mov    QWORD PTR [rsp+0x50],r14
   140019538:	lea    rsi,[rsp+0x40]
   14001953d:	movups XMMWORD PTR [rsp+0x78],xmm0
   140019542:	mov    DWORD PTR [rsp+0x30],eax
   140019546:	mov    r14d,0x3
   14001954c:	movups XMMWORD PTR [rbp-0x78],xmm1
   140019550:	mov    DWORD PTR [rsp+0x34],0x10
   140019558:	mov    DWORD PTR [rsp+0x38],0x10
   140019560:	cmp    DWORD PTR [rdi],0x0
   140019563:	jbe    0x1400195c3
   140019565:	mov    ebx,DWORD PTR [rdi]
   140019567:	lea    rax,[rbp-0x68]
   14001956b:	mov    r9d,0x20
   140019571:	lea    r8,[rsp+0x58]
   140019576:	mov    QWORD PTR [rsp+0x20],rax
   14001957b:	mov    rdx,r12
   14001957e:	mov    rcx,r15
   140019581:	call   0x1400192c4
   140019586:	movups xmm0,XMMWORD PTR [rbp-0x68]
   14001958a:	xor    eax,eax
   14001958c:	movups xmm1,XMMWORD PTR [rbp-0x58]
   140019590:	movups XMMWORD PTR [rsp+0x58],xmm0
   140019595:	lea    ecx,[rax+0x2]
   140019598:	movups XMMWORD PTR [rsp+0x68],xmm1
   14001959d:	movdqu xmm0,XMMWORD PTR [rsp+rax*1+0x78]
   1400195a3:	movdqu xmm1,XMMWORD PTR [rsp+rax*1+0x58]
   1400195a9:	lea    rax,[rax+0x10]
   1400195ad:	pxor   xmm1,xmm0
   1400195b1:	movdqu XMMWORD PTR [rsp+rax*1+0x68],xmm1
   1400195b7:	sub    rcx,0x1
   1400195bb:	jne    0x14001959d
   1400195bd:	sub    rbx,0x1
   1400195c1:	jne    0x140019567
   1400195c3:	mov    rax,QWORD PTR [rsi]
   1400195c6:	add    rdi,0x4
   1400195ca:	movups xmm0,XMMWORD PTR [rsp+0x78]
   1400195cf:	add    rsi,0x8
   1400195d3:	movups XMMWORD PTR [rax],xmm0
   1400195d6:	movups xmm1,XMMWORD PTR [rbp-0x78]
   1400195da:	movups XMMWORD PTR [rax+0x10],xmm1
   1400195de:	sub    r14,0x1
   1400195e2:	jne    0x140019560
   1400195e8:	lea    edx,[r14+0x44]
   1400195ec:	lea    rcx,[rbp-0x40]
   1400195f0:	call   0x1400438bc
   1400195f5:	lea    ebx,[r14+0x20]
   1400195f9:	mov    edx,ebx
   1400195fb:	lea    rcx,[rsp+0x78]
   140019600:	call   0x1400438bc
   140019605:	mov    edx,ebx
   140019607:	lea    rcx,[rsp+0x58]
   14001960c:	call   0x1400438bc
   140019611:	mov    edx,ebx
   140019613:	lea    rcx,[rbp-0x68]
   140019617:	call   0x1400438bc
   14001961c:	mov    rcx,QWORD PTR [rbp+0x10]
   140019620:	xor    rcx,rsp
   140019623:	call   0x140055f90
   140019628:	add    rsp,0x120
   14001962f:	pop    r15
   140019631:	pop    r14
   140019633:	pop    r12
   140019635:	pop    rdi
   140019636:	pop    rsi
   140019637:	pop    rbx
   140019638:	pop    rbp
   140019639:	ret    
   14001963a:	call   0x1400560e8
   14001963f:	int3   
   140019640:	call   0x1400560e8
   140019645:	int3   
   140019646:	call   0x1400560e8
   14001964b:	int3   
   14001964c:	sub    rsp,0x38
   140019650:	mov    QWORD PTR [rsp+0x20],r9
   140019655:	mov    r9,r8
   140019658:	xor    r8d,r8d
   14001965b:	call   0x140019668
   140019660:	add    rsp,0x38
   140019664:	ret    
   140019665:	int3   
   140019666:	int3   
   140019667:	int3   
   140019668:	rex push rbp
   14001966a:	push   rbx
   14001966b:	push   rsi
   14001966c:	push   rdi
   14001966d:	push   r14
   14001966f:	push   r15
   140019671:	lea    rbp,[rsp-0x218]
   140019679:	sub    rsp,0x318
   140019680:	mov    rax,QWORD PTR [rip+0x68859]        # 0x140081ee0
   140019687:	xor    rax,rsp
   14001968a:	mov    QWORD PTR [rbp+0x200],rax
   140019691:	mov    r14,QWORD PTR [rbp+0x270]
   140019698:	mov    r15,rdx
   14001969b:	xor    edx,edx
   14001969d:	mov    rsi,r8
   1400196a0:	mov    rdi,rcx
   1400196a3:	mov    rbx,r9
   1400196a6:	lea    rcx,[rsp+0x20]
   1400196ab:	lea    r8d,[rdx+0x48]
   1400196af:	call   0x140058f40
   1400196b4:	mov    rdx,rbx
   1400196b7:	lea    rcx,[rsp+0x20]
   1400196bc:	call   0x14001b02c
   1400196c1:	lea    rdx,[rbp+0xb0]
   1400196c8:	lea    rcx,[rsp+0x20]
   1400196cd:	call   0x14001b0b4
   1400196d2:	test   rdi,rdi
   1400196d5:	jne    0x1400196db
   1400196d7:	xor    ebx,ebx
   1400196d9:	jmp    0x1400196e6
   1400196db:	mov    rcx,rdi
   1400196de:	call   0x14006089c
   1400196e3:	mov    rbx,rax
   1400196e6:	lea    rcx,[rsp+0x20]
   1400196eb:	test   rsi,rsi
   1400196ee:	jne    0x140019701
   1400196f0:	lea    r9d,[rsi+0x2]
   1400196f4:	mov    r8,r15
   1400196f7:	mov    rdx,rdi
   1400196fa:	call   0x14001ae0c
   1400196ff:	jmp    0x140019719
   140019701:	movabs r9,0x7fffffff7fffffff
   14001970b:	mov    r8d,0x2
   140019711:	mov    rdx,rsi
   140019714:	call   0x14001af34
   140019719:	test   rbx,rbx
   14001971c:	je     0x140019738
   14001971e:	mov    rcx,rbx
   140019721:	sub    rdi,rbx
   140019724:	mov    al,BYTE PTR [rcx]
   140019726:	mov    BYTE PTR [rdi+rcx*1],al
   140019729:	inc    rcx
   14001972c:	test   al,al
   14001972e:	jne    0x140019724
   140019730:	mov    rcx,rbx
   140019733:	call   0x14005a938
   140019738:	lea    rdx,[rbp+0x10]
   14001973c:	lea    rcx,[rsp+0x3c]
   140019741:	call   0x14001ad14
   140019746:	call   0x14001a584
   14001974b:	lea    rdx,[rbp+0x60]
   14001974f:	lea    rcx,[rsp+0x20]
   140019754:	call   0x14001b0b4
   140019759:	lea    r9,[rsp+0x70]
   14001975e:	lea    r8,[rbp+0x10]
   140019762:	lea    rdx,[rbp+0x60]
   140019766:	lea    rcx,[rbp+0xb0]
   14001976d:	call   0x1400199bc
   140019772:	cmp    DWORD PTR [rsp+0x70],0x0
   140019777:	je     0x14001974b
   140019779:	lea    rdx,[rbp+0x100]
   140019780:	lea    rcx,[rbp-0x44]
   140019784:	call   0x14001b0f8
   140019789:	lea    rax,[rbp+0x100]
   140019790:	or     rbx,0xffffffffffffffff
   140019794:	inc    rbx
   140019797:	cmp    BYTE PTR [rax+rbx*1],0x0
   14001979b:	jne    0x140019794
   14001979d:	mov    r8d,ebx
   1400197a0:	lea    rdx,[rip+0x5459d]        # 0x14006dd44
   1400197a7:	mov    rcx,r14
   1400197aa:	call   0x14001b688
   1400197af:	lea    rax,[rbp+0x100]
   1400197b6:	mov    rdx,r14
   1400197b9:	sub    rdx,rax
   1400197bc:	lea    rcx,[rbp+0x100]
   1400197c3:	mov    al,BYTE PTR [rcx]
   1400197c5:	mov    BYTE PTR [rdx+rcx*1+0x2],al
   1400197c9:	inc    rcx
   1400197cc:	test   al,al
   1400197ce:	jne    0x1400197c3
   1400197d0:	lea    rdx,[r14+0x2]
   1400197d4:	add    rdx,rbx
   1400197d7:	lea    rcx,[rsp+0x70]
   1400197dc:	call   0x14001b0f8
   1400197e1:	call   0x14001aa6c
   1400197e6:	mov    rcx,QWORD PTR [rbp+0x200]
   1400197ed:	xor    rcx,rsp
   1400197f0:	call   0x140055f90
   1400197f5:	add    rsp,0x318
   1400197fc:	pop    r15
   1400197fe:	pop    r14
   140019800:	pop    rdi
   140019801:	pop    rsi
   140019802:	pop    rbx
   140019803:	pop    rbp
   140019804:	ret    
   140019805:	int3   
   140019806:	int3   
   140019807:	int3   
   140019808:	sub    rsp,0x38
   14001980c:	mov    QWORD PTR [rsp+0x20],r9
   140019811:	mov    r9,r8
   140019814:	mov    r8,rdx
   140019817:	xor    edx,edx
   140019819:	call   0x140019824
   14001981e:	add    rsp,0x38
   140019822:	ret    
   140019823:	int3   
   140019824:	rex push rbp
   140019826:	push   rbx
   140019827:	push   rsi
   140019828:	push   rdi
   140019829:	push   r14
   14001982b:	push   r15
   14001982d:	lea    rbp,[rsp-0xc8]
   140019835:	sub    rsp,0x1c8
   14001983c:	mov    rax,QWORD PTR [rip+0x6869d]        # 0x140081ee0
   140019843:	xor    rax,rsp
   140019846:	mov    QWORD PTR [rbp+0xb0],rax
   14001984d:	mov    r15,QWORD PTR [rbp+0x120]
   140019854:	mov    rsi,rdx
   140019857:	xor    edx,edx
   140019859:	mov    r14,r8
   14001985c:	mov    rdi,rcx
   14001985f:	mov    rbx,r9
   140019862:	lea    rcx,[rbp-0x40]
   140019866:	lea    r8d,[rdx+0x48]
   14001986a:	call   0x140058f40
   14001986f:	lea    rdx,[rbp+0x10]
   140019873:	mov    rcx,rbx
   140019876:	call   0x14001a33c
   14001987b:	test   rdi,rdi
   14001987e:	jne    0x140019884
   140019880:	xor    ebx,ebx
   140019882:	jmp    0x14001988f
   140019884:	mov    rcx,rdi
   140019887:	call   0x14006089c
   14001988c:	mov    rbx,rax
   14001988f:	lea    rcx,[rbp-0x40]
   140019893:	test   rsi,rsi
   140019896:	jne    0x1400198a9
   140019898:	lea    r9d,[rsi+0x2]
   14001989c:	mov    r8,r14
   14001989f:	mov    rdx,rdi
   1400198a2:	call   0x14001ae0c
   1400198a7:	jmp    0x1400198ba
   1400198a9:	mov    r9,r14
   1400198ac:	mov    r8d,0x2
   1400198b2:	mov    rdx,rsi
   1400198b5:	call   0x14001af34
   1400198ba:	mov    esi,0x1
   1400198bf:	test   rbx,rbx
   1400198c2:	je     0x1400198de
   1400198c4:	mov    rcx,rbx
   1400198c7:	sub    rdi,rbx
   1400198ca:	mov    al,BYTE PTR [rcx]
   1400198cc:	mov    BYTE PTR [rdi+rcx*1],al
   1400198cf:	add    rcx,rsi
   1400198d2:	test   al,al
   1400198d4:	jne    0x1400198ca
   1400198d6:	mov    rcx,rbx
   1400198d9:	call   0x14005a938
   1400198de:	lea    rdx,[rbp+0x60]
   1400198e2:	lea    rcx,[rbp-0x24]
   1400198e6:	call   0x14001ad14
   1400198eb:	call   0x14001a584
   1400198f0:	movsx  eax,BYTE PTR [r15]
   1400198f4:	lea    rdx,[rsp+0x6c]
   1400198f9:	lea    ecx,[rax+rax*4]
   1400198fc:	movsx  eax,BYTE PTR [r15+0x1]
   140019901:	lea    ecx,[rcx-0x107]
   140019907:	lea    ecx,[rax+rcx*2]
   14001990a:	movsxd rdi,ecx
   14001990d:	lea    rcx,[r15+0x2]
   140019911:	add    rdi,r15
   140019914:	mov    bl,BYTE PTR [rdi]
   140019916:	mov    BYTE PTR [rdi],0x0
   140019919:	call   0x14001a33c
   14001991e:	lea    rdx,[rsp+0x20]
   140019923:	mov    BYTE PTR [rdi],bl
   140019925:	mov    rcx,rdi
   140019928:	call   0x14001a33c
   14001992d:	mov    ecx,esi
   14001992f:	cmp    DWORD PTR [rsp+0x20],esi
   140019933:	jb     0x140019992
   140019935:	mov    eax,ecx
   140019937:	cmp    DWORD PTR [rsp+rax*4+0x20],0x0
   14001993c:	jne    0x140019948
   14001993e:	add    ecx,esi
   140019940:	cmp    ecx,DWORD PTR [rsp+0x20]
   140019944:	jbe    0x140019935
   140019946:	jmp    0x140019992
   140019948:	mov    ecx,esi
   14001994a:	cmp    DWORD PTR [rsp+0x6c],esi
   14001994e:	jb     0x140019992
   140019950:	mov    eax,ecx
   140019952:	cmp    DWORD PTR [rsp+rax*4+0x6c],0x0
   140019957:	jne    0x140019963
   140019959:	add    ecx,esi
   14001995b:	cmp    ecx,DWORD PTR [rsp+0x6c]
   14001995f:	jbe    0x140019950
   140019961:	jmp    0x140019992
   140019963:	mov    ecx,esi
   140019965:	cmp    DWORD PTR [rbp+0x10],esi
   140019968:	jb     0x140019992
   14001996a:	mov    eax,ecx
   14001996c:	cmp    DWORD PTR [rbp+rax*4+0x10],0x0
   140019971:	jne    0x14001997c
   140019973:	add    ecx,esi
   140019975:	cmp    ecx,DWORD PTR [rbp+0x10]
   140019978:	jbe    0x14001996a
   14001997a:	jmp    0x140019992
   14001997c:	lea    r8,[rsp+0x20]
   140019981:	lea    rdx,[rbp+0x60]
   140019985:	lea    rcx,[rbp+0x10]
   140019989:	call   0x140019b14
   14001998e:	test   eax,eax
   140019990:	jne    0x140019994
   140019992:	xor    esi,esi
   140019994:	call   0x14001aa6c
   140019999:	mov    eax,esi
   14001999b:	mov    rcx,QWORD PTR [rbp+0xb0]
   1400199a2:	xor    rcx,rsp
   1400199a5:	call   0x140055f90
   1400199aa:	add    rsp,0x1c8
   1400199b1:	pop    r15
   1400199b3:	pop    r14
   1400199b5:	pop    rdi
   1400199b6:	pop    rsi
   1400199b7:	pop    rbx
   1400199b8:	pop    rbp
   1400199b9:	ret    
   1400199ba:	int3   
   1400199bb:	int3   
   1400199bc:	rex push rbp
   1400199be:	push   rbx
   1400199bf:	push   rsi
   1400199c0:	push   rdi
   1400199c1:	push   r14
   1400199c3:	lea    rbp,[rsp-0xa0]
   1400199cb:	sub    rsp,0x1a0
   1400199d2:	mov    rax,QWORD PTR [rip+0x68507]        # 0x140081ee0
   1400199d9:	xor    rax,rsp
   1400199dc:	mov    QWORD PTR [rbp+0x90],rax
   1400199e3:	movaps xmm0,XMMWORD PTR [rip+0x543b6]        # 0x14006dda0
   1400199ea:	mov    r14,rcx
   1400199ed:	movaps xmm1,XMMWORD PTR [rip+0x543bc]        # 0x14006ddb0
   1400199f4:	lea    rcx,[rsp+0x20]
   1400199f9:	movups XMMWORD PTR [rsp+0x20],xmm0
   1400199fe:	mov    rdi,r9
   140019a01:	mov    rbx,r8
   140019a04:	movaps xmm0,XMMWORD PTR [rip+0x543b5]        # 0x14006ddc0
   140019a0b:	mov    rsi,rdx
   140019a0e:	movups XMMWORD PTR [rsp+0x30],xmm1
   140019a13:	movaps xmm1,XMMWORD PTR [rip+0x543b6]        # 0x14006ddd0
   140019a1a:	movups XMMWORD PTR [rsp+0x40],xmm0
   140019a1f:	movsd  xmm0,QWORD PTR [rip+0x543b9]        # 0x14006dde0
   140019a27:	movups XMMWORD PTR [rsp+0x50],xmm1
   140019a2c:	movaps xmm1,XMMWORD PTR [rip+0x543fd]        # 0x14006de30
   140019a33:	movsd  QWORD PTR [rsp+0x60],xmm0
   140019a39:	movaps xmm0,XMMWORD PTR [rip+0x54400]        # 0x14006de40
   140019a40:	movups XMMWORD PTR [rbp-0x50],xmm1
   140019a44:	movaps xmm1,XMMWORD PTR [rip+0x54405]        # 0x14006de50
   140019a4b:	movups XMMWORD PTR [rbp-0x40],xmm0
   140019a4f:	movaps xmm0,XMMWORD PTR [rip+0x5440a]        # 0x14006de60
   140019a56:	movups XMMWORD PTR [rbp-0x30],xmm1
   140019a5a:	movsd  xmm1,QWORD PTR [rip+0x5440e]        # 0x14006de70
   140019a62:	movups XMMWORD PTR [rbp-0x20],xmm0
   140019a66:	movsd  QWORD PTR [rbp-0x10],xmm1
   140019a6b:	call   0x14001a0bc
   140019a70:	mov    rdx,rdi
   140019a73:	lea    rcx,[rsp+0x20]
   140019a78:	call   0x14001a958
   140019a7d:	mov    rdx,rbx
   140019a80:	mov    rcx,rdi
   140019a83:	call   0x14001b250
   140019a88:	lea    rdx,[rip+0x542c1]        # 0x14006dd50
   140019a8f:	mov    rcx,rdi
   140019a92:	call   0x14001b400
   140019a97:	cmp    DWORD PTR [rdi],0x0
   140019a9a:	je     0x140019af6
   140019a9c:	lea    r9,[rip+0x542ad]        # 0x14006dd50
   140019aa3:	mov    r8,rdi
   140019aa6:	mov    rdx,r14
   140019aa9:	lea    rcx,[rbp+0x40]
   140019aad:	call   0x14001b30c
   140019ab2:	mov    r8d,DWORD PTR [rsi]
   140019ab5:	lea    rbx,[rdi+0x4c]
   140019ab9:	inc    r8d
   140019abc:	mov    rdx,rsi
   140019abf:	shl    r8,0x2
   140019ac3:	mov    rcx,rbx
   140019ac6:	call   0x140059180
   140019acb:	mov    rdx,rbx
   140019ace:	lea    rcx,[rbp+0x40]
   140019ad2:	call   0x14001b2d4
   140019ad7:	test   eax,eax
   140019ad9:	je     0x140019aea
   140019adb:	lea    rdx,[rip+0x5426e]        # 0x14006dd50
   140019ae2:	mov    rcx,rbx
   140019ae5:	call   0x14001b250
   140019aea:	lea    rdx,[rbp+0x40]
   140019aee:	mov    rcx,rbx
   140019af1:	call   0x14001b61c
   140019af6:	mov    rcx,QWORD PTR [rbp+0x90]
   140019afd:	xor    rcx,rsp
   140019b00:	call   0x140055f90
   140019b05:	add    rsp,0x1a0
   140019b0c:	pop    r14
   140019b0e:	pop    rdi
   140019b0f:	pop    rsi
   140019b10:	pop    rbx
   140019b11:	pop    rbp
   140019b12:	ret    
   140019b13:	int3   
   140019b14:	mov    QWORD PTR [rsp+0x10],rbx
   140019b19:	push   rbp
   140019b1a:	push   rsi
   140019b1b:	push   rdi
   140019b1c:	lea    rbp,[rsp-0x210]
   140019b24:	sub    rsp,0x310
   140019b2b:	mov    rax,QWORD PTR [rip+0x683ae]        # 0x140081ee0
   140019b32:	xor    rax,rsp
   140019b35:	mov    QWORD PTR [rbp+0x200],rax
   140019b3c:	movaps xmm0,XMMWORD PTR [rip+0x5425d]        # 0x14006dda0
   140019b43:	mov    rsi,rdx
   140019b46:	movaps xmm1,XMMWORD PTR [rip+0x54263]        # 0x14006ddb0
   140019b4d:	lea    rdx,[r8+0x4c]
   140019b51:	movups XMMWORD PTR [rsp+0x20],xmm0
   140019b56:	mov    rbx,rcx
   140019b59:	lea    rcx,[rsp+0x20]
   140019b5e:	movaps xmm0,XMMWORD PTR [rip+0x5425b]        # 0x14006ddc0
   140019b65:	mov    rdi,r8
   140019b68:	movups XMMWORD PTR [rsp+0x30],xmm1
   140019b6d:	movaps xmm1,XMMWORD PTR [rip+0x5425c]        # 0x14006ddd0
   140019b74:	movups XMMWORD PTR [rsp+0x40],xmm0
   140019b79:	movsd  xmm0,QWORD PTR [rip+0x5425f]        # 0x14006dde0
   140019b81:	movups XMMWORD PTR [rsp+0x50],xmm1
   140019b86:	movaps xmm1,XMMWORD PTR [rip+0x542a3]        # 0x14006de30
   140019b8d:	movsd  QWORD PTR [rsp+0x60],xmm0
   140019b93:	movaps xmm0,XMMWORD PTR [rip+0x542a6]        # 0x14006de40
   140019b9a:	movups XMMWORD PTR [rbp-0x50],xmm1
   140019b9e:	movaps xmm1,XMMWORD PTR [rip+0x542ab]        # 0x14006de50
   140019ba5:	movups XMMWORD PTR [rbp-0x40],xmm0
   140019ba9:	movaps xmm0,XMMWORD PTR [rip+0x542b0]        # 0x14006de60
   140019bb0:	movups XMMWORD PTR [rbp-0x30],xmm1
   140019bb4:	movsd  xmm1,QWORD PTR [rip+0x542b4]        # 0x14006de70
   140019bbc:	movups XMMWORD PTR [rbp-0x20],xmm0
   140019bc0:	movsd  QWORD PTR [rbp-0x10],xmm1
   140019bc5:	call   0x14001a0bc
   140019bca:	mov    rdx,rbx
   140019bcd:	lea    rcx,[rbp+0x40]
   140019bd1:	call   0x14001a2a0
   140019bd6:	mov    rdx,rdi
   140019bd9:	lea    rcx,[rbp+0x40]
   140019bdd:	call   0x14001a0bc
   140019be2:	lea    rdx,[rbp+0x40]
   140019be6:	lea    rcx,[rsp+0x20]
   140019beb:	call   0x140019cb4
   140019bf0:	lea    rdx,[rbp+0x1b0]
   140019bf7:	lea    rcx,[rsp+0x20]
   140019bfc:	call   0x14001a958
   140019c01:	lea    rdx,[rip+0x54148]        # 0x14006dd50
   140019c08:	lea    rcx,[rbp+0x1b0]
   140019c0f:	call   0x14001b400
   140019c14:	mov    r8d,DWORD PTR [rdi]
   140019c17:	lea    rcx,[rbp+0x160]
   140019c1e:	inc    r8d
   140019c21:	mov    rdx,rdi
   140019c24:	shl    r8,0x2
   140019c28:	call   0x140059180
   140019c2d:	lea    rdx,[rbp+0x160]
   140019c34:	lea    rcx,[rbp+0x1b0]
   140019c3b:	call   0x14001b2d4
   140019c40:	xor    ebx,ebx
   140019c42:	test   eax,eax
   140019c44:	je     0x140019c59
   140019c46:	lea    rdx,[rip+0x54103]        # 0x14006dd50
   140019c4d:	lea    rcx,[rbp+0x160]
   140019c54:	call   0x14001b250
   140019c59:	lea    rdx,[rbp+0x1b0]
   140019c60:	lea    rcx,[rbp+0x160]
   140019c67:	call   0x14001b61c
   140019c6c:	mov    r8d,DWORD PTR [rbp+0x160]
   140019c73:	lea    rcx,[rbp+0x160]
   140019c7a:	inc    r8d
   140019c7d:	mov    rdx,rsi
   140019c80:	shl    r8,0x2
   140019c84:	call   0x140058e60
   140019c89:	test   eax,eax
   140019c8b:	sete   bl
   140019c8e:	mov    eax,ebx
   140019c90:	mov    rcx,QWORD PTR [rbp+0x200]
   140019c97:	xor    rcx,rsp
   140019c9a:	call   0x140055f90
   140019c9f:	mov    rbx,QWORD PTR [rsp+0x338]
   140019ca7:	add    rsp,0x310
   140019cae:	pop    rdi
   140019caf:	pop    rsi
   140019cb0:	pop    rbp
   140019cb1:	ret    
   140019cb2:	int3   
   140019cb3:	int3   
   140019cb4:	mov    QWORD PTR [rsp+0x18],rbx
   140019cb9:	push   rbp
   140019cba:	push   rsi
   140019cbb:	push   rdi
   140019cbc:	lea    rbp,[rsp-0x170]
   140019cc4:	sub    rsp,0x270
   140019ccb:	mov    rax,QWORD PTR [rip+0x6820e]        # 0x140081ee0
   140019cd2:	xor    rax,rsp
   140019cd5:	mov    QWORD PTR [rbp+0x160],rax
   140019cdc:	mov    rdi,rcx
   140019cdf:	mov    rsi,rdx
   140019ce2:	mov    ecx,DWORD PTR [rdx]
   140019ce4:	test   ecx,ecx
   140019ce6:	jne    0x140019cf4
   140019ce8:	cmp    DWORD PTR [rdx+0x90],ecx
   140019cee:	je     0x140019e50
   140019cf4:	mov    eax,DWORD PTR [rdi]
   140019cf6:	test   eax,eax
   140019cf8:	jne    0x140019d2a
   140019cfa:	lea    rbx,[rdi+0x90]
   140019d01:	cmp    DWORD PTR [rbx],eax
   140019d03:	jne    0x140019d2a
   140019d05:	lea    r8d,[rcx+0x1]
   140019d09:	mov    rcx,rdi
   140019d0c:	shl    r8,0x2
   140019d10:	call   0x140059180
   140019d15:	lea    rdx,[rsi+0x90]
   140019d1c:	mov    rcx,rbx
   140019d1f:	mov    r8d,DWORD PTR [rdx]
   140019d22:	inc    r8d
   140019d25:	jmp    0x140019e47
   140019d2a:	lea    r8d,[rax+0x1]
   140019d2e:	mov    rcx,rdi
   140019d31:	call   0x140058e60
   140019d36:	lea    rbx,[rdi+0x90]
   140019d3d:	test   eax,eax
   140019d3f:	jne    0x140019d72
   140019d41:	mov    r8d,DWORD PTR [rbx]
   140019d44:	lea    rdx,[rsi+0x90]
   140019d4b:	inc    r8d
   140019d4e:	mov    rcx,rbx
   140019d51:	call   0x140058e60
   140019d56:	test   eax,eax
   140019d58:	jne    0x140019d67
   140019d5a:	mov    rcx,rdi
   140019d5d:	call   0x140019fbc
   140019d62:	jmp    0x140019e50
   140019d67:	and    DWORD PTR [rbx],0x0
   140019d6a:	and    DWORD PTR [rdi],0x0
   140019d6d:	jmp    0x140019e50
   140019d72:	lea    r8,[rsi+0x90]
   140019d79:	mov    rdx,rbx
   140019d7c:	lea    rcx,[rsp+0x20]
   140019d81:	call   0x14001a3f4
   140019d86:	mov    r8,rsi
   140019d89:	lea    rcx,[rbp+0x40]
   140019d8d:	mov    rdx,rdi
   140019d90:	call   0x14001a3f4
   140019d95:	lea    rdx,[rbp+0x40]
   140019d99:	lea    rcx,[rbp-0x50]
   140019d9d:	call   0x14001a658
   140019da2:	lea    r8,[rbp-0x50]
   140019da6:	lea    rdx,[rsp+0x20]
   140019dab:	lea    rcx,[rbp+0xd0]
   140019db2:	call   0x14001a848
   140019db7:	lea    rdx,[rbp+0xd0]
   140019dbe:	lea    rcx,[rsp+0x20]
   140019dc3:	call   0x14001ab48
   140019dc8:	lea    r8,[rbp+0xd0]
   140019dcf:	lea    rdx,[rsp+0x20]
   140019dd4:	lea    rcx,[rsp+0x20]
   140019dd9:	call   0x14001a3f4
   140019dde:	lea    r8,[rbp+0x40]
   140019de2:	lea    rdx,[rsp+0x20]
   140019de7:	lea    rcx,[rsp+0x20]
   140019dec:	call   0x14001a3f4
   140019df1:	lea    r8,[rsp+0x20]
   140019df6:	mov    rdx,rdi
   140019df9:	lea    rcx,[rbp+0x40]
   140019dfd:	call   0x14001a3f4
   140019e02:	lea    r8,[rbp+0x40]
   140019e06:	lea    rdx,[rbp+0xd0]
   140019e0d:	lea    rcx,[rbp-0x50]
   140019e11:	call   0x14001a848
   140019e16:	lea    r8,[rsp+0x20]
   140019e1b:	lea    rdx,[rbp-0x50]
   140019e1f:	lea    rcx,[rbp-0x50]
   140019e23:	call   0x14001a3f4
   140019e28:	mov    r8,rbx
   140019e2b:	lea    rdx,[rbp-0x50]
   140019e2f:	mov    rcx,rbx
   140019e32:	call   0x14001a3f4
   140019e37:	mov    r8d,DWORD PTR [rsp+0x20]
   140019e3c:	lea    rdx,[rsp+0x20]
   140019e41:	inc    r8d
   140019e44:	mov    rcx,rdi
   140019e47:	shl    r8,0x2
   140019e4b:	call   0x140059180
   140019e50:	mov    rcx,QWORD PTR [rbp+0x160]
   140019e57:	xor    rcx,rsp
   140019e5a:	call   0x140055f90
   140019e5f:	mov    rbx,QWORD PTR [rsp+0x2a0]
   140019e67:	add    rsp,0x270
   140019e6e:	pop    rdi
   140019e6f:	pop    rsi
   140019e70:	pop    rbp
   140019e71:	ret    
   140019e72:	int3   
   140019e73:	int3   
   140019e74:	mov    QWORD PTR [rsp+0x10],rbx
   140019e79:	mov    QWORD PTR [rsp+0x18],rsi
   140019e7e:	push   rbp
   140019e7f:	push   rdi
   140019e80:	push   r14
   140019e82:	lea    rbp,[rsp-0xe0]
   140019e8a:	sub    rsp,0x1e0
   140019e91:	mov    rax,QWORD PTR [rip+0x68048]        # 0x140081ee0
   140019e98:	xor    rax,rsp
   140019e9b:	mov    QWORD PTR [rbp+0xd0],rax
   140019ea2:	xor    ebx,ebx
   140019ea4:	mov    DWORD PTR [rbp+0x44],0xa1
   140019eab:	mov    r14d,0x1
   140019eb1:	mov    esi,edx
   140019eb3:	mov    rdi,rcx
   140019eb6:	mov    DWORD PTR [rbp+0x40],r14d
   140019eba:	cmp    DWORD PTR [rcx],ebx
   140019ebc:	jne    0x140019ed4
   140019ebe:	add    rcx,0x90
   140019ec5:	mov    edx,0xa1
   140019eca:	call   0x14001ac2c
   140019ecf:	jmp    0x140019f91
   140019ed4:	mov    rdx,rcx
   140019ed7:	lea    rcx,[rbp-0x50]
   140019edb:	call   0x14001ab48
   140019ee0:	mov    r8,rdi
   140019ee3:	lea    rdx,[rbp-0x50]
   140019ee7:	lea    rcx,[rsp+0x20]
   140019eec:	call   0x14001a848
   140019ef1:	lea    r8,[rbp+0x40]
   140019ef5:	lea    rdx,[rsp+0x20]
   140019efa:	lea    rcx,[rsp+0x20]
   140019eff:	call   0x14001a3f4
   140019f04:	cmp    DWORD PTR [rsp+0x20],ebx
   140019f08:	jne    0x140019f12
   140019f0a:	mov    DWORD PTR [rdi+0x90],ebx
   140019f10:	jmp    0x140019f91
   140019f12:	mov    edx,0xa1
   140019f17:	lea    rcx,[rbp-0x50]
   140019f1b:	call   0x14001aaf0
   140019f20:	lea    rdx,[rbp-0x50]
   140019f24:	lea    rcx,[rsp+0x20]
   140019f29:	call   0x14001a658
   140019f2e:	lea    r8,[rsp+0x20]
   140019f33:	mov    rdx,rdi
   140019f36:	lea    rcx,[rsp+0x20]
   140019f3b:	call   0x14001a3f4
   140019f40:	cmp    DWORD PTR [rsp+0x20],ebx
   140019f44:	je     0x140019f4f
   140019f46:	mov    eax,DWORD PTR [rsp+0x24]
   140019f4a:	and    eax,r14d
   140019f4d:	jmp    0x140019f51
   140019f4f:	mov    eax,ebx
   140019f51:	test   eax,eax
   140019f53:	je     0x140019f59
   140019f55:	xor    eax,eax
   140019f57:	jmp    0x140019f94
   140019f59:	lea    rdx,[rsp+0x20]
   140019f5e:	lea    rcx,[rbp-0x50]
   140019f62:	call   0x14001a9e8
   140019f67:	mov    eax,DWORD PTR [rbp-0x4c]
   140019f6a:	cmp    DWORD PTR [rbp-0x50],ebx
   140019f6d:	je     0x140019f74
   140019f6f:	mov    ebx,eax
   140019f71:	and    ebx,r14d
   140019f74:	cmp    ebx,esi
   140019f76:	je     0x140019f7e
   140019f78:	xor    eax,r14d
   140019f7b:	mov    DWORD PTR [rbp-0x4c],eax
   140019f7e:	lea    rcx,[rdi+0x90]
   140019f85:	mov    rdx,rdi
   140019f88:	lea    r8,[rbp-0x50]
   140019f8c:	call   0x14001a848
   140019f91:	mov    eax,r14d
   140019f94:	mov    rcx,QWORD PTR [rbp+0xd0]
   140019f9b:	xor    rcx,rsp
   140019f9e:	call   0x140055f90
   140019fa3:	lea    r11,[rsp+0x1e0]
   140019fab:	mov    rbx,QWORD PTR [r11+0x28]
   140019faf:	mov    rsi,QWORD PTR [r11+0x30]
   140019fb3:	mov    rsp,r11
   140019fb6:	pop    r14
   140019fb8:	pop    rdi
   140019fb9:	pop    rbp
   140019fba:	ret    
   140019fbb:	int3   
   140019fbc:	mov    QWORD PTR [rsp+0x10],rbx
   140019fc1:	mov    QWORD PTR [rsp+0x18],rdi
   140019fc6:	push   rbp
   140019fc7:	lea    rbp,[rsp-0xe0]
   140019fcf:	sub    rsp,0x1e0
   140019fd6:	mov    rax,QWORD PTR [rip+0x67f03]        # 0x140081ee0
   140019fdd:	xor    rax,rsp
   140019fe0:	mov    QWORD PTR [rbp+0xd0],rax
   140019fe7:	mov    rdi,rcx
   140019fea:	mov    rdx,rcx
   140019fed:	lea    rcx,[rsp+0x20]
   140019ff2:	call   0x14001a658
   140019ff7:	lea    rbx,[rdi+0x90]
   140019ffe:	mov    rdx,rbx
   14001a001:	lea    r8,[rsp+0x20]
   14001a006:	lea    rcx,[rbp-0x50]
   14001a00a:	call   0x14001a848
   14001a00f:	mov    r8,rdi
   14001a012:	lea    rdx,[rbp-0x50]
   14001a016:	lea    rcx,[rbp-0x50]
   14001a01a:	call   0x14001a3f4
   14001a01f:	lea    rdx,[rbp-0x50]
   14001a023:	lea    rcx,[rsp+0x20]
   14001a028:	call   0x14001ab48
   14001a02d:	lea    r8,[rbp-0x50]
   14001a031:	lea    rdx,[rsp+0x20]
   14001a036:	lea    rcx,[rsp+0x20]
   14001a03b:	call   0x14001a3f4
   14001a040:	mov    rdx,rdi
   14001a043:	mov    rcx,rbx
   14001a046:	call   0x14001ab48
   14001a04b:	lea    r8,[rsp+0x20]
   14001a050:	lea    rdx,[rbp-0x50]
   14001a054:	lea    rcx,[rbp+0x40]
   14001a058:	call   0x14001a848
   14001a05d:	lea    r8,[rbp+0x40]
   14001a061:	mov    rdx,rbx
   14001a064:	mov    rcx,rbx
   14001a067:	call   0x14001a3f4
   14001a06c:	lea    r8,[rsp+0x20]
   14001a071:	mov    rdx,rbx
   14001a074:	mov    rcx,rbx
   14001a077:	call   0x14001a3f4
   14001a07c:	mov    r8d,DWORD PTR [rsp+0x20]
   14001a081:	lea    rdx,[rsp+0x20]
   14001a086:	inc    r8d
   14001a089:	mov    rcx,rdi
   14001a08c:	shl    r8,0x2
   14001a090:	call   0x140059180
   14001a095:	mov    rcx,QWORD PTR [rbp+0xd0]
   14001a09c:	xor    rcx,rsp
   14001a09f:	call   0x140055f90
   14001a0a4:	lea    r11,[rsp+0x1e0]
   14001a0ac:	mov    rbx,QWORD PTR [r11+0x18]
   14001a0b0:	mov    rdi,QWORD PTR [r11+0x20]
   14001a0b4:	mov    rsp,r11
   14001a0b7:	pop    rbp
   14001a0b8:	ret    
   14001a0b9:	int3   
   14001a0ba:	int3   
   14001a0bb:	int3   
   14001a0bc:	mov    QWORD PTR [rsp+0x18],rbx
   14001a0c1:	mov    QWORD PTR [rsp+0x20],rbp
   14001a0c6:	push   rsi
   14001a0c7:	push   rdi
   14001a0c8:	push   r12
   14001a0ca:	push   r14
   14001a0cc:	push   r15
   14001a0ce:	sub    rsp,0x1a0
   14001a0d5:	mov    rax,QWORD PTR [rip+0x67e04]        # 0x140081ee0
   14001a0dc:	xor    rax,rsp
   14001a0df:	mov    QWORD PTR [rsp+0x190],rax
   14001a0e7:	mov    r8d,DWORD PTR [rcx]
   14001a0ea:	mov    r12,rdx
   14001a0ed:	inc    r8d
   14001a0f0:	mov    r15,rcx
   14001a0f3:	mov    rdx,rcx
   14001a0f6:	shl    r8,0x2
   14001a0fa:	lea    rcx,[rsp+0x20]
   14001a0ff:	call   0x140059180
   14001a104:	and    DWORD PTR [r15],0x0
   14001a108:	lea    rbx,[r15+0x90]
   14001a10f:	mov    r8d,DWORD PTR [rbx]
   14001a112:	lea    rcx,[rsp+0xb0]
   14001a11a:	inc    r8d
   14001a11d:	mov    rdx,rbx
   14001a120:	shl    r8,0x2
   14001a124:	call   0x140059180
   14001a129:	and    DWORD PTR [rbx],0x0
   14001a12c:	lea    rcx,[rsp+0x140]
   14001a134:	mov    r8d,0x3
   14001a13a:	mov    rdx,r12
   14001a13d:	call   0x14001b534
   14001a142:	cmp    eax,0xffffffff
   14001a145:	je     0x14001a1f2
   14001a14b:	lea    rcx,[rsp+0x140]
   14001a153:	call   0x14001b3d8
   14001a158:	mov    r14d,DWORD PTR [rsp+0x140]
   14001a160:	mov    ebx,0x1
   14001a165:	shl    r14d,0x4
   14001a169:	lea    ebp,[rax-0x1]
   14001a16c:	cmp    ebx,r14d
   14001a16f:	jb     0x14001a175
   14001a171:	xor    edi,edi
   14001a173:	jmp    0x14001a18d
   14001a175:	mov    eax,ebx
   14001a177:	mov    ecx,ebx
   14001a179:	shr    eax,0x4
   14001a17c:	and    ecx,0xf
   14001a17f:	inc    eax
   14001a181:	mov    edi,DWORD PTR [rsp+rax*4+0x140]
   14001a188:	shr    edi,cl
   14001a18a:	and    edi,0x1
   14001a18d:	mov    eax,DWORD PTR [r12]
   14001a191:	shl    eax,0x4
   14001a194:	cmp    ebx,eax
   14001a196:	jb     0x14001a19c
   14001a198:	xor    esi,esi
   14001a19a:	jmp    0x14001a1b1
   14001a19c:	mov    eax,ebx
   14001a19e:	mov    ecx,ebx
   14001a1a0:	shr    eax,0x4
   14001a1a3:	and    ecx,0xf
   14001a1a6:	inc    eax
   14001a1a8:	mov    esi,DWORD PTR [r12+rax*4]
   14001a1ac:	shr    esi,cl
   14001a1ae:	and    esi,0x1
   14001a1b1:	cmp    edi,0x1
   14001a1b4:	jne    0x14001a1c7
   14001a1b6:	test   esi,esi
   14001a1b8:	jne    0x14001a1dd
   14001a1ba:	lea    rdx,[rsp+0x20]
   14001a1bf:	mov    rcx,r15
   14001a1c2:	call   0x140019cb4
   14001a1c7:	test   edi,edi
   14001a1c9:	jne    0x14001a1dd
   14001a1cb:	cmp    esi,0x1
   14001a1ce:	jne    0x14001a1dd
   14001a1d0:	lea    rdx,[rsp+0x20]
   14001a1d5:	mov    rcx,r15
   14001a1d8:	call   0x14001a220
   14001a1dd:	cmp    ebx,ebp
   14001a1df:	jge    0x14001a1f2
   14001a1e1:	lea    rcx,[rsp+0x20]
   14001a1e6:	call   0x140019fbc
   14001a1eb:	inc    ebx
   14001a1ed:	jmp    0x14001a16c
   14001a1f2:	mov    rcx,QWORD PTR [rsp+0x190]
   14001a1fa:	xor    rcx,rsp
   14001a1fd:	call   0x140055f90
   14001a202:	lea    r11,[rsp+0x1a0]
   14001a20a:	mov    rbx,QWORD PTR [r11+0x40]
   14001a20e:	mov    rbp,QWORD PTR [r11+0x48]
   14001a212:	mov    rsp,r11
   14001a215:	pop    r15
   14001a217:	pop    r14
   14001a219:	pop    r12
   14001a21b:	pop    rdi
   14001a21c:	pop    rsi
   14001a21d:	ret    
   14001a21e:	int3   
   14001a21f:	int3   
   14001a220:	mov    QWORD PTR [rsp+0x18],rbx
   14001a225:	push   rdi
   14001a226:	sub    rsp,0x150
   14001a22d:	mov    rax,QWORD PTR [rip+0x67cac]        # 0x140081ee0
   14001a234:	xor    rax,rsp
   14001a237:	mov    QWORD PTR [rsp+0x140],rax
   14001a23f:	mov    r8d,DWORD PTR [rdx]
   14001a242:	mov    rdi,rcx
   14001a245:	inc    r8d
   14001a248:	lea    rcx,[rsp+0x20]
   14001a24d:	shl    r8,0x2
   14001a251:	mov    rbx,rdx
   14001a254:	call   0x140059180
   14001a259:	lea    r8,[rbx+0x90]
   14001a260:	mov    rdx,rbx
   14001a263:	lea    rcx,[rsp+0xb0]
   14001a26b:	call   0x14001a3f4
   14001a270:	lea    rdx,[rsp+0x20]
   14001a275:	mov    rcx,rdi
   14001a278:	call   0x140019cb4
   14001a27d:	mov    rcx,QWORD PTR [rsp+0x140]
   14001a285:	xor    rcx,rsp
   14001a288:	call   0x140055f90
   14001a28d:	mov    rbx,QWORD PTR [rsp+0x170]
   14001a295:	add    rsp,0x150
   14001a29c:	pop    rdi
   14001a29d:	ret    
   14001a29e:	int3   
   14001a29f:	int3   
   14001a2a0:	mov    QWORD PTR [rsp+0x18],rbx
   14001a2a5:	push   rdi
   14001a2a6:	sub    rsp,0x80
   14001a2ad:	mov    rax,QWORD PTR [rip+0x67c2c]        # 0x140081ee0
   14001a2b4:	xor    rax,rsp
   14001a2b7:	mov    QWORD PTR [rsp+0x70],rax
   14001a2bc:	mov    r8d,DWORD PTR [rdx]
   14001a2bf:	mov    rdi,rcx
   14001a2c2:	inc    r8d
   14001a2c5:	lea    rcx,[rsp+0x20]
   14001a2ca:	shl    r8,0x2
   14001a2ce:	call   0x140059180
   14001a2d3:	cmp    DWORD PTR [rsp+0x20],0x0
   14001a2d8:	je     0x14001a2e3
   14001a2da:	mov    ebx,DWORD PTR [rsp+0x24]
   14001a2de:	and    ebx,0x1
   14001a2e1:	jmp    0x14001a2e5
   14001a2e3:	xor    ebx,ebx
   14001a2e5:	mov    edx,0x1
   14001a2ea:	lea    rcx,[rsp+0x20]
   14001a2ef:	call   0x14001b5b4
   14001a2f4:	lea    rdx,[rsp+0x20]
   14001a2f9:	mov    rcx,rdi
   14001a2fc:	call   0x14001ac84
   14001a301:	cmp    DWORD PTR [rdi],0x0
   14001a304:	jne    0x14001a312
   14001a306:	test   ebx,ebx
   14001a308:	jne    0x14001a312
   14001a30a:	and    DWORD PTR [rdi+0x90],ebx
   14001a310:	jmp    0x14001a31c
   14001a312:	mov    edx,ebx
   14001a314:	mov    rcx,rdi
   14001a317:	call   0x140019e74
   14001a31c:	mov    rcx,QWORD PTR [rsp+0x70]
   14001a321:	xor    rcx,rsp
   14001a324:	call   0x140055f90
   14001a329:	mov    rbx,QWORD PTR [rsp+0xa0]
   14001a331:	add    rsp,0x80
   14001a338:	pop    rdi
   14001a339:	ret    
   14001a33a:	int3   
   14001a33b:	int3   
   14001a33c:	mov    QWORD PTR [rsp+0x8],rbx
   14001a341:	mov    QWORD PTR [rsp+0x18],rsi
   14001a346:	push   rdi
   14001a347:	sub    rsp,0x80
   14001a34e:	mov    rax,QWORD PTR [rip+0x67b8b]        # 0x140081ee0
   14001a355:	xor    rax,rsp
   14001a358:	mov    QWORD PTR [rsp+0x70],rax
   14001a35d:	mov    rsi,rdx
   14001a360:	mov    rdi,rcx
   14001a363:	xor    edx,edx
   14001a365:	mov    rcx,rsi
   14001a368:	lea    r8d,[rdx+0x4c]
   14001a36c:	call   0x140058f40
   14001a371:	mov    DWORD PTR [rsp+0x20],0x1
   14001a379:	cmp    BYTE PTR [rdi],0x0
   14001a37c:	je     0x14001a3cd
   14001a37e:	movsx  ebx,BYTE PTR [rdi]
   14001a381:	inc    rdi
   14001a384:	lea    eax,[rbx-0x30]
   14001a387:	cmp    eax,0x9
   14001a38a:	ja     0x14001a390
   14001a38c:	mov    ebx,eax
   14001a38e:	jmp    0x14001a3a8
   14001a390:	lea    eax,[rbx-0x61]
   14001a393:	cmp    eax,0x19
   14001a396:	ja     0x14001a39d
   14001a398:	add    ebx,0xffffffa9
   14001a39b:	jmp    0x14001a3a8
   14001a39d:	lea    eax,[rbx-0x41]
   14001a3a0:	cmp    eax,0x19
   14001a3a3:	ja     0x14001a3c8
   14001a3a5:	add    ebx,0xffffffc9
   14001a3a8:	mov    edx,0x4
   14001a3ad:	mov    rcx,rsi
   14001a3b0:	call   0x14001b4b0
   14001a3b5:	lea    rdx,[rsp+0x20]
   14001a3ba:	mov    DWORD PTR [rsp+0x24],ebx
   14001a3be:	mov    rcx,rsi
   14001a3c1:	call   0x14001b250
   14001a3c6:	jmp    0x14001a379
   14001a3c8:	cmp    ebx,0x20
   14001a3cb:	jbe    0x14001a379
   14001a3cd:	mov    rax,rdi
   14001a3d0:	mov    rcx,QWORD PTR [rsp+0x70]
   14001a3d5:	xor    rcx,rsp
   14001a3d8:	call   0x140055f90
   14001a3dd:	lea    r11,[rsp+0x80]
   14001a3e5:	mov    rbx,QWORD PTR [r11+0x10]
   14001a3e9:	mov    rsi,QWORD PTR [r11+0x20]
   14001a3ed:	mov    rsp,r11
   14001a3f0:	pop    rdi
   14001a3f1:	ret    
   14001a3f2:	int3   
   14001a3f3:	int3   
   14001a3f4:	mov    QWORD PTR [rsp+0x8],rbx
   14001a3f9:	mov    QWORD PTR [rsp+0x10],rsi
   14001a3fe:	push   rdi
   14001a3ff:	sub    rsp,0x20
   14001a403:	mov    r9d,DWORD PTR [rdx]
   14001a406:	mov    rbx,r8
   14001a409:	mov    rdi,rdx
   14001a40c:	mov    rsi,rcx
   14001a40f:	cmp    r9d,DWORD PTR [r8]
   14001a412:	jbe    0x14001a44b
   14001a414:	cmp    DWORD PTR [r8],0x1
   14001a418:	mov    ecx,0x1
   14001a41d:	jb     0x14001a430
   14001a41f:	mov    eax,DWORD PTR [rdx+rcx*4]
   14001a422:	xor    eax,DWORD PTR [r8+rcx*4]
   14001a426:	mov    DWORD PTR [rsi+rcx*4],eax
   14001a429:	inc    ecx
   14001a42b:	cmp    ecx,DWORD PTR [r8]
   14001a42e:	jbe    0x14001a41f
   14001a430:	mov    r8d,DWORD PTR [rdx]
   14001a433:	lea    rdx,[rdx+rcx*4]
   14001a437:	sub    r8d,DWORD PTR [rbx]
   14001a43a:	lea    rcx,[rsi+rcx*4]
   14001a43e:	shl    r8,0x2
   14001a442:	call   0x140059180
   14001a447:	mov    eax,DWORD PTR [rdi]
   14001a449:	jmp    0x14001a484
   14001a44b:	jae    0x14001a488
   14001a44d:	mov    edx,0x1
   14001a452:	cmp    r9d,edx
   14001a455:	jb     0x14001a469
   14001a457:	mov    ecx,edx
   14001a459:	inc    edx
   14001a45b:	mov    eax,DWORD PTR [rdi+rcx*4]
   14001a45e:	xor    eax,DWORD PTR [r8+rcx*4]
   14001a462:	mov    DWORD PTR [rsi+rcx*4],eax
   14001a465:	cmp    edx,DWORD PTR [rdi]
   14001a467:	jbe    0x14001a457
   14001a469:	mov    r8d,DWORD PTR [r8]
   14001a46c:	sub    r8d,DWORD PTR [rdi]
   14001a46f:	mov    ecx,edx
   14001a471:	shl    r8,0x2
   14001a475:	lea    rdx,[rbx+rcx*4]
   14001a479:	lea    rcx,[rsi+rcx*4]
   14001a47d:	call   0x140059180
   14001a482:	mov    eax,DWORD PTR [rbx]
   14001a484:	mov    DWORD PTR [rsi],eax
   14001a486:	jmp    0x14001a4cb
   14001a488:	or     r8d,0xffffffff
   14001a48c:	test   r9d,r9d
   14001a48f:	je     0x14001a4a8
   14001a491:	lea    rcx,[rbx+r9*4]
   14001a495:	sub    rdx,rbx
   14001a498:	mov    eax,DWORD PTR [rdx+rcx*1]
   14001a49b:	xor    eax,DWORD PTR [rcx]
   14001a49d:	jne    0x14001a4a8
   14001a49f:	sub    rcx,0x4
   14001a4a3:	add    r9d,r8d
   14001a4a6:	jne    0x14001a498
   14001a4a8:	mov    DWORD PTR [rsi],r9d
   14001a4ab:	test   r9d,r9d
   14001a4ae:	je     0x14001a4cb
   14001a4b0:	sub    rdi,rbx
   14001a4b3:	lea    rcx,[rbx+r9*4]
   14001a4b7:	sub    rsi,rbx
   14001a4ba:	mov    eax,DWORD PTR [rcx+rdi*1]
   14001a4bd:	xor    eax,DWORD PTR [rcx]
   14001a4bf:	mov    DWORD PTR [rsi+rcx*1],eax
   14001a4c2:	lea    rcx,[rcx-0x4]
   14001a4c6:	add    r9d,r8d
   14001a4c9:	jne    0x14001a4ba
   14001a4cb:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a4d0:	mov    rsi,QWORD PTR [rsp+0x38]
   14001a4d5:	add    rsp,0x20
   14001a4d9:	pop    rdi
   14001a4da:	ret    
   14001a4db:	int3   
   14001a4dc:	mov    QWORD PTR [rsp+0x8],rbx
   14001a4e1:	mov    QWORD PTR [rsp+0x10],rdi
   14001a4e6:	mov    rbx,QWORD PTR [rip+0x77ad3]        # 0x140091fc0
   14001a4ed:	mov    r10,rcx
   14001a4f0:	mov    eax,edx
   14001a4f2:	mov    edx,DWORD PTR [r9]
   14001a4f5:	add    edx,r8d
   14001a4f8:	mov    edi,DWORD PTR [rbx+rax*4]
   14001a4fb:	mov    eax,r8d
   14001a4fe:	lea    r11,[rcx+rax*4]
   14001a502:	cmp    DWORD PTR [rcx],edx
   14001a504:	jae    0x14001a51c
   14001a506:	inc    DWORD PTR [r10]
   14001a509:	mov    eax,DWORD PTR [r10]
   14001a50c:	and    DWORD PTR [r10+rax*4],0x0
   14001a511:	mov    ecx,DWORD PTR [r9]
   14001a514:	add    ecx,r8d
   14001a517:	cmp    DWORD PTR [r10],ecx
   14001a51a:	jb     0x14001a506
   14001a51c:	mov    edx,DWORD PTR [r9]
   14001a51f:	test   edx,edx
   14001a521:	je     0x14001a561
   14001a523:	lea    r8,[r11+rdx*4]
   14001a527:	sub    r9,r11
   14001a52a:	mov    r11,QWORD PTR [rip+0x77a87]        # 0x140091fb8
   14001a531:	mov    eax,DWORD PTR [r9+r8*1]
   14001a535:	mov    ecx,DWORD PTR [rbx+rax*4]
   14001a538:	cmp    ecx,0x7fff
   14001a53e:	je     0x14001a558
   14001a540:	add    ecx,edi
   14001a542:	cmp    ecx,0x7fff
   14001a548:	lea    eax,[rcx-0x7fff]
   14001a54e:	cmovae ecx,eax
   14001a551:	mov    ecx,DWORD PTR [r11+rcx*4]
   14001a555:	xor    DWORD PTR [r8],ecx
   14001a558:	sub    r8,0x4
   14001a55c:	add    edx,0xffffffff
   14001a55f:	jne    0x14001a531
   14001a561:	cmp    DWORD PTR [r10],0x0
   14001a565:	je     0x14001a579
   14001a567:	mov    eax,DWORD PTR [r10]
   14001a56a:	cmp    DWORD PTR [r10+rax*4],0x0
   14001a56f:	jne    0x14001a579
   14001a571:	sub    eax,0x1
   14001a574:	mov    DWORD PTR [r10],eax
   14001a577:	jne    0x14001a567
   14001a579:	mov    rbx,QWORD PTR [rsp+0x8]
   14001a57e:	mov    rdi,QWORD PTR [rsp+0x10]
   14001a583:	ret    
   14001a584:	rex push rbx
   14001a586:	sub    rsp,0x20
   14001a58a:	mov    eax,DWORD PTR [rip+0x77a38]        # 0x140091fc8
   14001a590:	inc    eax
   14001a592:	mov    DWORD PTR [rip+0x77a30],eax        # 0x140091fc8
   14001a598:	cmp    eax,0x1
   14001a59b:	jg     0x14001a64d
   14001a5a1:	mov    ecx,0x20000
   14001a5a6:	call   0x14005d520
   14001a5ab:	xor    ebx,ebx
   14001a5ad:	mov    QWORD PTR [rip+0x77a0c],rax        # 0x140091fc0
   14001a5b4:	test   rax,rax
   14001a5b7:	jne    0x14001a5c9
   14001a5b9:	dec    DWORD PTR [rip+0x77a09]        # 0x140091fc8
   14001a5bf:	mov    eax,0x1
   14001a5c4:	jmp    0x14001a64f
   14001a5c9:	mov    ecx,0x20000
   14001a5ce:	call   0x14005d520
   14001a5d3:	mov    QWORD PTR [rip+0x779de],rax        # 0x140091fb8
   14001a5da:	mov    rcx,rax
   14001a5dd:	test   rax,rax
   14001a5e0:	jne    0x14001a5fd
   14001a5e2:	dec    DWORD PTR [rip+0x779e0]        # 0x140091fc8
   14001a5e8:	mov    rcx,QWORD PTR [rip+0x779d1]        # 0x140091fc0
   14001a5ef:	call   0x14005a938
   14001a5f4:	mov    QWORD PTR [rip+0x779c5],rbx        # 0x140091fc0
   14001a5fb:	jmp    0x14001a5bf
   14001a5fd:	mov    r10d,0x7fff
   14001a603:	mov    DWORD PTR [rax],0x1
   14001a609:	mov    r9d,r10d
   14001a60c:	lea    rdx,[rax+0x4]
   14001a610:	mov    r8,rax
   14001a613:	mov    eax,DWORD PTR [r8]
   14001a616:	add    eax,eax
   14001a618:	bt     eax,0xf
   14001a61c:	jae    0x14001a623
   14001a61e:	xor    eax,0x8003
   14001a623:	mov    DWORD PTR [rdx],eax
   14001a625:	add    r8,0x4
   14001a629:	add    rdx,0x4
   14001a62d:	sub    r9,0x1
   14001a631:	jne    0x14001a613
   14001a633:	mov    rdx,QWORD PTR [rip+0x77986]        # 0x140091fc0
   14001a63a:	mov    eax,DWORD PTR [rcx]
   14001a63c:	lea    rcx,[rcx+0x4]
   14001a640:	mov    DWORD PTR [rdx+rax*4],ebx
   14001a643:	inc    ebx
   14001a645:	cmp    ebx,r10d
   14001a648:	jb     0x14001a63a
   14001a64a:	mov    DWORD PTR [rdx],r10d
   14001a64d:	xor    eax,eax
   14001a64f:	add    rsp,0x20
   14001a653:	pop    rbx
   14001a654:	ret    
   14001a655:	int3   
   14001a656:	int3   
   14001a657:	int3   
   14001a658:	mov    QWORD PTR [rsp+0x18],rbx
   14001a65d:	push   rbp
   14001a65e:	push   rsi
   14001a65f:	push   rdi
   14001a660:	push   r12
   14001a662:	push   r13
   14001a664:	push   r14
   14001a666:	push   r15
   14001a668:	lea    rbp,[rsp-0xf0]
   14001a670:	sub    rsp,0x1f0
   14001a677:	mov    rax,QWORD PTR [rip+0x67862]        # 0x140081ee0
   14001a67e:	xor    rax,rsp
   14001a681:	mov    QWORD PTR [rbp+0xe0],rax
   14001a688:	cmp    DWORD PTR [rdx],0x0
   14001a68b:	mov    r15,rcx
   14001a68e:	jne    0x14001a69a
   14001a690:	mov    eax,0x1
   14001a695:	jmp    0x14001a7f8
   14001a69a:	and    DWORD PTR [rbp+0x50],0x0
   14001a69e:	mov    esi,0x1
   14001a6a3:	mov    DWORD PTR [rcx],esi
   14001a6a5:	mov    DWORD PTR [rcx+0x4],esi
   14001a6a8:	lea    rcx,[rbp-0x40]
   14001a6ac:	mov    r8d,DWORD PTR [rdx]
   14001a6af:	add    r8d,esi
   14001a6b2:	shl    r8,0x2
   14001a6b6:	call   0x140059180
   14001a6bb:	xor    edx,edx
   14001a6bd:	lea    rcx,[rsp+0x30]
   14001a6c2:	mov    r8d,0x90
   14001a6c8:	call   0x140058f40
   14001a6cd:	mov    r14d,DWORD PTR [rbp-0x40]
   14001a6d1:	lea    r12d,[rsi+0x11]
   14001a6d5:	mov    DWORD PTR [rsp+0x30],r12d
   14001a6da:	mov    DWORD PTR [rsp+0x34],esi
   14001a6de:	mov    DWORD PTR [rsp+0x40],esi
   14001a6e2:	mov    DWORD PTR [rsp+0x78],esi
   14001a6e6:	cmp    r14d,esi
   14001a6e9:	je     0x14001a7eb
   14001a6ef:	mov    r13,QWORD PTR [rip+0x778ca]        # 0x140091fc0
   14001a6f6:	mov    r10d,0x7fff
   14001a6fc:	cmp    r14d,r12d
   14001a6ff:	jae    0x14001a780
   14001a701:	mov    eax,r14d
   14001a704:	mov    r8d,DWORD PTR [rbp+rax*4-0x40]
   14001a709:	mov    QWORD PTR [rsp+0x20],r8
   14001a70e:	mov    eax,r12d
   14001a711:	lea    r9,[rbp-0x40]
   14001a715:	mov    edi,r12d
   14001a718:	sub    edi,r14d
   14001a71b:	mov    ecx,DWORD PTR [rsp+rax*4+0x30]
   14001a71f:	mov    edx,DWORD PTR [r13+rcx*4+0x0]
   14001a724:	sub    edx,DWORD PTR [r13+r8*4+0x0]
   14001a729:	mov    r8d,edi
   14001a72c:	mov    rcx,QWORD PTR [rip+0x77885]        # 0x140091fb8
   14001a733:	add    edx,r10d
   14001a736:	cmp    edx,r10d
   14001a739:	lea    eax,[rdx-0x7fff]
   14001a73f:	cmovae edx,eax
   14001a742:	mov    ebx,DWORD PTR [rcx+rdx*4]
   14001a745:	mov    edx,ebx
   14001a747:	lea    rcx,[rsp+0x30]
   14001a74c:	call   0x14001a4dc
   14001a751:	mov    r9,r15
   14001a754:	lea    rcx,[rbp+0x50]
   14001a758:	mov    r8d,edi
   14001a75b:	mov    edx,ebx
   14001a75d:	call   0x14001a4dc
   14001a762:	mov    r12d,DWORD PTR [rsp+0x30]
   14001a767:	cmp    r12d,esi
   14001a76a:	je     0x14001a822
   14001a770:	mov    r8,QWORD PTR [rsp+0x20]
   14001a775:	mov    r10d,0x7fff
   14001a77b:	cmp    r12d,r14d
   14001a77e:	jae    0x14001a70e
   14001a780:	mov    eax,r14d
   14001a783:	mov    edi,r14d
   14001a786:	sub    edi,r12d
   14001a789:	mov    r8d,edi
   14001a78c:	mov    edx,DWORD PTR [rbp+rax*4-0x40]
   14001a790:	mov    eax,r12d
   14001a793:	mov    r9d,DWORD PTR [r13+rdx*4+0x0]
   14001a798:	mov    ecx,DWORD PTR [rsp+rax*4+0x30]
   14001a79c:	sub    r9d,DWORD PTR [r13+rcx*4+0x0]
   14001a7a1:	mov    rcx,QWORD PTR [rip+0x77810]        # 0x140091fb8
   14001a7a8:	add    r9d,r10d
   14001a7ab:	cmp    r9d,r10d
   14001a7ae:	lea    eax,[r9-0x7fff]
   14001a7b5:	cmovae r9d,eax
   14001a7b9:	mov    ebx,DWORD PTR [rcx+r9*4]
   14001a7bd:	lea    r9,[rsp+0x30]
   14001a7c2:	mov    edx,ebx
   14001a7c4:	lea    rcx,[rbp-0x40]
   14001a7c8:	call   0x14001a4dc
   14001a7cd:	lea    r9,[rbp+0x50]
   14001a7d1:	mov    r8d,edi
   14001a7d4:	mov    edx,ebx
   14001a7d6:	mov    rcx,r15
   14001a7d9:	call   0x14001a4dc
   14001a7de:	mov    r14d,DWORD PTR [rbp-0x40]
   14001a7e2:	cmp    r14d,esi
   14001a7e5:	jne    0x14001a6f6
   14001a7eb:	mov    edx,DWORD PTR [rbp-0x3c]
   14001a7ee:	mov    rcx,r15
   14001a7f1:	call   0x14001aaf0
   14001a7f6:	xor    eax,eax
   14001a7f8:	mov    rcx,QWORD PTR [rbp+0xe0]
   14001a7ff:	xor    rcx,rsp
   14001a802:	call   0x140055f90
   14001a807:	mov    rbx,QWORD PTR [rsp+0x240]
   14001a80f:	add    rsp,0x1f0
   14001a816:	pop    r15
   14001a818:	pop    r14
   14001a81a:	pop    r13
   14001a81c:	pop    r12
   14001a81e:	pop    rdi
   14001a81f:	pop    rsi
   14001a820:	pop    rbp
   14001a821:	ret    
   14001a822:	mov    edx,DWORD PTR [rsp+0x34]
   14001a826:	lea    rcx,[rbp+0x50]
   14001a82a:	call   0x14001aaf0
   14001a82f:	mov    r8d,DWORD PTR [rbp+0x50]
   14001a833:	lea    rdx,[rbp+0x50]
   14001a837:	inc    r8d
   14001a83a:	mov    rcx,r15
   14001a83d:	shl    r8,0x2
   14001a841:	call   0x140059180
   14001a846:	jmp    0x14001a7f6
   14001a848:	mov    QWORD PTR [rsp+0x20],rbx
   14001a84d:	push   rsi
   14001a84e:	push   rdi
   14001a84f:	push   r14
   14001a851:	sub    rsp,0x80
   14001a858:	mov    rax,QWORD PTR [rip+0x67681]        # 0x140081ee0
   14001a85f:	xor    rax,rsp
   14001a862:	mov    QWORD PTR [rsp+0x70],rax
   14001a867:	cmp    DWORD PTR [rdx],0x0
   14001a86a:	mov    rdi,r8
   14001a86d:	mov    rsi,rdx
   14001a870:	mov    rbx,rcx
   14001a873:	je     0x14001a933
   14001a879:	cmp    DWORD PTR [r8],0x0
   14001a87d:	je     0x14001a933
   14001a883:	movsxd rdx,DWORD PTR [r8]
   14001a886:	mov    r14,QWORD PTR [rip+0x77733]        # 0x140091fc0
   14001a88d:	test   rdx,rdx
   14001a890:	je     0x14001a8b0
   14001a892:	lea    rax,[rsp+0x20]
   14001a897:	sub    r8,rax
   14001a89a:	lea    rax,[r8+rdx*4]
   14001a89e:	mov    ecx,DWORD PTR [rsp+rax*1+0x20]
   14001a8a2:	mov    eax,DWORD PTR [r14+rcx*4]
   14001a8a6:	mov    DWORD PTR [rsp+rdx*4+0x20],eax
   14001a8aa:	sub    rdx,0x1
   14001a8ae:	jne    0x14001a89a
   14001a8b0:	xor    edx,edx
   14001a8b2:	mov    r8d,0x90
   14001a8b8:	mov    rcx,rbx
   14001a8bb:	call   0x140058f40
   14001a8c0:	movsxd r9,DWORD PTR [rsi]
   14001a8c3:	test   r9,r9
   14001a8c6:	je     0x14001a91f
   14001a8c8:	mov    r11,QWORD PTR [rip+0x776e9]        # 0x140091fb8
   14001a8cf:	mov    eax,DWORD PTR [rsi+r9*4]
   14001a8d3:	mov    r10d,DWORD PTR [r14+rax*4]
   14001a8d7:	cmp    r10d,0x7fff
   14001a8de:	je     0x14001a919
   14001a8e0:	movsxd r8,DWORD PTR [rdi]
   14001a8e3:	test   r8,r8
   14001a8e6:	je     0x14001a919
   14001a8e8:	mov    eax,DWORD PTR [rsp+r8*4+0x20]
   14001a8ed:	cmp    eax,0x7fff
   14001a8f2:	je     0x14001a913
   14001a8f4:	lea    ecx,[rax+r10*1]
   14001a8f8:	cmp    ecx,0x7fff
   14001a8fe:	lea    eax,[rcx-0x7fff]
   14001a904:	lea    rdx,[r9+r8*1]
   14001a908:	cmovae ecx,eax
   14001a90b:	mov    ecx,DWORD PTR [r11+rcx*4]
   14001a90f:	xor    DWORD PTR [rbx+rdx*4-0x4],ecx
   14001a913:	sub    r8,0x1
   14001a917:	jne    0x14001a8e8
   14001a919:	sub    r9,0x1
   14001a91d:	jne    0x14001a8cf
   14001a91f:	mov    eax,DWORD PTR [rsi]
   14001a921:	mov    rcx,rbx
   14001a924:	mov    edx,DWORD PTR [rdi]
   14001a926:	dec    eax
   14001a928:	add    edx,eax
   14001a92a:	mov    DWORD PTR [rbx],edx
   14001a92c:	call   0x14001aaa8
   14001a931:	jmp    0x14001a936
   14001a933:	and    DWORD PTR [rcx],0x0
   14001a936:	mov    rcx,QWORD PTR [rsp+0x70]
   14001a93b:	xor    rcx,rsp
   14001a93e:	call   0x140055f90
   14001a943:	mov    rbx,QWORD PTR [rsp+0xb8]
   14001a94b:	add    rsp,0x80
   14001a952:	pop    r14
   14001a954:	pop    rdi
   14001a955:	pop    rsi
   14001a956:	ret    
   14001a957:	int3   
   14001a958:	mov    QWORD PTR [rsp+0x8],rbx
   14001a95d:	mov    QWORD PTR [rsp+0x18],rsi
   14001a962:	push   rdi
   14001a963:	sub    rsp,0x80
   14001a96a:	mov    rax,QWORD PTR [rip+0x6756f]        # 0x140081ee0
   14001a971:	xor    rax,rsp
   14001a974:	mov    QWORD PTR [rsp+0x70],rax
   14001a979:	mov    rdi,rdx
   14001a97c:	mov    rsi,rcx
   14001a97f:	xor    edx,edx
   14001a981:	mov    rcx,rdi
   14001a984:	lea    r8d,[rdx+0x4c]
   14001a988:	call   0x140058f40
   14001a98d:	movsxd rbx,DWORD PTR [rsi]
   14001a990:	mov    DWORD PTR [rsp+0x20],0x1
   14001a998:	jmp    0x14001a9be
   14001a99a:	mov    edx,0xf
   14001a99f:	mov    rcx,rdi
   14001a9a2:	call   0x14001b4b0
   14001a9a7:	mov    eax,DWORD PTR [rsi+rbx*4]
   14001a9aa:	lea    rdx,[rsp+0x20]
   14001a9af:	mov    rcx,rdi
   14001a9b2:	mov    DWORD PTR [rsp+0x24],eax
   14001a9b6:	call   0x14001b250
   14001a9bb:	dec    rbx
   14001a9be:	test   rbx,rbx
   14001a9c1:	jg     0x14001a99a
   14001a9c3:	mov    rcx,QWORD PTR [rsp+0x70]
   14001a9c8:	xor    rcx,rsp
   14001a9cb:	call   0x140055f90
   14001a9d0:	lea    r11,[rsp+0x80]
   14001a9d8:	mov    rbx,QWORD PTR [r11+0x10]
   14001a9dc:	mov    rsi,QWORD PTR [r11+0x20]
   14001a9e0:	mov    rsp,r11
   14001a9e3:	pop    rdi
   14001a9e4:	ret    
   14001a9e5:	int3   
   14001a9e6:	int3   
   14001a9e7:	int3   
   14001a9e8:	mov    QWORD PTR [rsp+0x8],rbx
   14001a9ed:	mov    QWORD PTR [rsp+0x10],rsi
   14001a9f2:	push   rdi
   14001a9f3:	sub    rsp,0x20
   14001a9f7:	mov    rbx,rcx
   14001a9fa:	mov    rdi,rdx
   14001a9fd:	mov    ecx,DWORD PTR [rdx]
   14001a9ff:	test   ecx,ecx
   14001aa01:	je     0x14001aa0b
   14001aa03:	mov    eax,DWORD PTR [rdx+0x4]
   14001aa06:	and    eax,0x1
   14001aa09:	jmp    0x14001aa0d
   14001aa0b:	xor    eax,eax
   14001aa0d:	test   eax,eax
   14001aa0f:	je     0x14001aa18
   14001aa11:	mov    eax,0x1
   14001aa16:	jmp    0x14001aa59
   14001aa18:	lea    r8d,[rcx+0x1]
   14001aa1c:	mov    rcx,rbx
   14001aa1f:	shl    r8,0x2
   14001aa23:	call   0x140059180
   14001aa28:	mov    esi,0x7f
   14001aa2d:	mov    rdx,rbx
   14001aa30:	mov    rcx,rbx
   14001aa33:	call   0x14001ab48
   14001aa38:	mov    rdx,rbx
   14001aa3b:	mov    rcx,rbx
   14001aa3e:	call   0x14001ab48
   14001aa43:	mov    r8,rdi
   14001aa46:	mov    rdx,rbx
   14001aa49:	mov    rcx,rbx
   14001aa4c:	call   0x14001a3f4
   14001aa51:	sub    rsi,0x1
   14001aa55:	jne    0x14001aa2d
   14001aa57:	xor    eax,eax
   14001aa59:	mov    rbx,QWORD PTR [rsp+0x30]
   14001aa5e:	mov    rsi,QWORD PTR [rsp+0x38]
   14001aa63:	add    rsp,0x20
   14001aa67:	pop    rdi
   14001aa68:	ret    
   14001aa69:	int3   
   14001aa6a:	int3   
   14001aa6b:	int3   
   14001aa6c:	rex push rbx
   14001aa6e:	sub    rsp,0x20
   14001aa72:	sub    DWORD PTR [rip+0x7754f],0x1        # 0x140091fc8
   14001aa79:	mov    rbx,QWORD PTR [rip+0x77540]        # 0x140091fc0
   14001aa80:	jne    0x14001aaa0
   14001aa82:	mov    rcx,QWORD PTR [rip+0x7752f]        # 0x140091fb8
   14001aa89:	test   rcx,rcx
   14001aa8c:	je     0x14001aa93
   14001aa8e:	call   0x14005a938
   14001aa93:	test   rbx,rbx
   14001aa96:	je     0x14001aaa0
   14001aa98:	mov    rcx,rbx
   14001aa9b:	call   0x14005a938
   14001aaa0:	add    rsp,0x20
   14001aaa4:	pop    rbx
   14001aaa5:	ret    
   14001aaa6:	int3   
   14001aaa7:	int3   
   14001aaa8:	movsxd r8,DWORD PTR [rcx]
   14001aaab:	cmp    r8d,0x11
   14001aaaf:	jle    0x14001aad3
   14001aab1:	lea    rdx,[rcx-0x38]
   14001aab5:	lea    rdx,[rdx+r8*4]
   14001aab9:	add    r8d,0xffffffef
   14001aabd:	mov    eax,DWORD PTR [rdx+0x38]
   14001aac0:	xor    DWORD PTR [rdx-0xc],eax
   14001aac3:	xor    DWORD PTR [rdx],eax
   14001aac5:	and    DWORD PTR [rdx+0x38],0x0
   14001aac9:	lea    rdx,[rdx-0x4]
   14001aacd:	sub    r8,0x1
   14001aad1:	jne    0x14001aabd
   14001aad3:	cmp    DWORD PTR [rcx],0x11
   14001aad6:	jbe    0x14001aaed
   14001aad8:	mov    DWORD PTR [rcx],0x11
   14001aade:	mov    eax,DWORD PTR [rcx]
   14001aae0:	cmp    DWORD PTR [rcx+rax*4],0x0
   14001aae4:	jne    0x14001aaed
   14001aae6:	sub    eax,0x1
   14001aae9:	mov    DWORD PTR [rcx],eax
   14001aaeb:	jne    0x14001aade
   14001aaed:	ret    
   14001aaee:	int3   
   14001aaef:	int3   
   14001aaf0:	mov    r9,QWORD PTR [rip+0x774c9]        # 0x140091fc0
   14001aaf7:	mov    r8,rcx
   14001aafa:	mov    eax,edx
   14001aafc:	movsxd rdx,DWORD PTR [rcx]
   14001aaff:	mov    r11d,DWORD PTR [r9+rax*4]
   14001ab03:	test   rdx,rdx
   14001ab06:	je     0x14001ab46
   14001ab08:	mov    r10,QWORD PTR [rip+0x774a9]        # 0x140091fb8
   14001ab0f:	mov    eax,DWORD PTR [r8+rdx*4]
   14001ab13:	mov    ecx,DWORD PTR [r9+rax*4]
   14001ab17:	cmp    ecx,0x7fff
   14001ab1d:	je     0x14001ab40
   14001ab1f:	mov    eax,0x7fff
   14001ab24:	sub    eax,r11d
   14001ab27:	add    ecx,eax
   14001ab29:	cmp    ecx,0x7fff
   14001ab2f:	lea    eax,[rcx-0x7fff]
   14001ab35:	cmovae ecx,eax
   14001ab38:	mov    ecx,DWORD PTR [r10+rcx*4]
   14001ab3c:	mov    DWORD PTR [r8+rdx*4],ecx
   14001ab40:	sub    rdx,0x1
   14001ab44:	jne    0x14001ab0f
   14001ab46:	ret    
   14001ab47:	int3   
   14001ab48:	mov    QWORD PTR [rsp+0x8],rbx
   14001ab4d:	mov    QWORD PTR [rsp+0x10],rbp
   14001ab52:	push   rdi
   14001ab53:	sub    rsp,0x20
   14001ab57:	movsxd r11,DWORD PTR [rdx]
   14001ab5a:	mov    r10,rdx
   14001ab5d:	mov    r9,rcx
   14001ab60:	test   r11d,r11d
   14001ab63:	je     0x14001ac18
   14001ab69:	mov    r8d,DWORD PTR [rdx+r11*4]
   14001ab6d:	mov    ebp,0x7fff
   14001ab72:	mov    rbx,QWORD PTR [rip+0x77447]        # 0x140091fc0
   14001ab79:	mov    rdi,QWORD PTR [rip+0x77438]        # 0x140091fb8
   14001ab80:	mov    ecx,DWORD PTR [rbx+r8*4]
   14001ab84:	cmp    ecx,ebp
   14001ab86:	je     0x14001abab
   14001ab88:	add    ecx,ecx
   14001ab8a:	cmp    ecx,ebp
   14001ab8c:	lea    eax,[rcx-0x7fff]
   14001ab92:	cmovae ecx,eax
   14001ab95:	lea    eax,[r11*2-0x1]
   14001ab9d:	mov    edx,ecx
   14001ab9f:	movsxd rcx,eax
   14001aba2:	mov    eax,DWORD PTR [rdi+rdx*4]
   14001aba5:	mov    DWORD PTR [r9+rcx*4],eax
   14001aba9:	jmp    0x14001abbb
   14001abab:	lea    eax,[r11*2-0x1]
   14001abb3:	movsxd rcx,eax
   14001abb6:	and    DWORD PTR [r9+rcx*4],0x0
   14001abbb:	mov    eax,DWORD PTR [r10]
   14001abbe:	sub    eax,0x1
   14001abc1:	movsxd rdx,eax
   14001abc4:	je     0x14001ac01
   14001abc6:	lea    r8,[r9-0x4]
   14001abca:	lea    r8,[r8+rdx*8]
   14001abce:	and    DWORD PTR [r8+0x4],0x0
   14001abd3:	mov    eax,DWORD PTR [r10+rdx*4]
   14001abd7:	mov    ecx,DWORD PTR [rbx+rax*4]
   14001abda:	cmp    ecx,ebp
   14001abdc:	je     0x14001abf3
   14001abde:	add    ecx,ecx
   14001abe0:	cmp    ecx,ebp
   14001abe2:	lea    eax,[rcx-0x7fff]
   14001abe8:	cmovae ecx,eax
   14001abeb:	mov    ecx,DWORD PTR [rdi+rcx*4]
   14001abee:	mov    DWORD PTR [r8],ecx
   14001abf1:	jmp    0x14001abf7
   14001abf3:	and    DWORD PTR [r8],0x0
   14001abf7:	sub    r8,0x8
   14001abfb:	sub    rdx,0x1
   14001abff:	jne    0x14001abce
   14001ac01:	mov    eax,DWORD PTR [r10]
   14001ac04:	mov    rcx,r9
   14001ac07:	lea    eax,[rax*2-0x1]
   14001ac0e:	mov    DWORD PTR [r9],eax
   14001ac11:	call   0x14001aaa8
   14001ac16:	jmp    0x14001ac1b
   14001ac18:	and    DWORD PTR [rcx],0x0
   14001ac1b:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ac20:	mov    rbp,QWORD PTR [rsp+0x38]
   14001ac25:	add    rsp,0x20
   14001ac29:	pop    rdi
   14001ac2a:	ret    
   14001ac2b:	int3   
   14001ac2c:	mov    QWORD PTR [rsp+0x8],rbx
   14001ac31:	push   rdi
   14001ac32:	sub    rsp,0xb0
   14001ac39:	mov    DWORD PTR [rsp+0x20],0x1
   14001ac41:	mov    rbx,rcx
   14001ac44:	mov    DWORD PTR [rsp+0x24],edx
   14001ac48:	mov    edi,0x7f
   14001ac4d:	movsd  xmm0,QWORD PTR [rsp+0x20]
   14001ac53:	movsd  QWORD PTR [rcx],xmm0
   14001ac57:	mov    rdx,rbx
   14001ac5a:	mov    rcx,rbx
   14001ac5d:	call   0x14001ab48
   14001ac62:	mov    rdx,rbx
   14001ac65:	mov    rcx,rbx
   14001ac68:	call   0x14001ab48
   14001ac6d:	sub    rdi,0x1
   14001ac71:	jne    0x14001ac57
   14001ac73:	mov    rbx,QWORD PTR [rsp+0xc0]
   14001ac7b:	add    rsp,0xb0
   14001ac82:	pop    rdi
   14001ac83:	ret    
   14001ac84:	mov    QWORD PTR [rsp+0x18],rbx
   14001ac89:	mov    QWORD PTR [rsp+0x20],rsi
   14001ac8e:	push   rdi
   14001ac8f:	sub    rsp,0x80
   14001ac96:	mov    rax,QWORD PTR [rip+0x67243]        # 0x140081ee0
   14001ac9d:	xor    rax,rsp
   14001aca0:	mov    QWORD PTR [rsp+0x70],rax
   14001aca5:	mov    r8d,DWORD PTR [rdx]
   14001aca8:	mov    rsi,rcx
   14001acab:	inc    r8d
   14001acae:	lea    rcx,[rsp+0x20]
   14001acb3:	shl    r8,0x2
   14001acb7:	call   0x140059180
   14001acbc:	xor    edi,edi
   14001acbe:	cmp    DWORD PTR [rsp+0x20],edi
   14001acc2:	je     0x14001acf0
   14001acc4:	lea    ebx,[rdi+0x1]
   14001acc7:	mov    ecx,DWORD PTR [rsp+0x24]
   14001accb:	mov    edx,0xf
   14001acd0:	and    ecx,0x7fff
   14001acd6:	mov    eax,ebx
   14001acd8:	mov    DWORD PTR [rsi+rax*4],ecx
   14001acdb:	lea    rcx,[rsp+0x20]
   14001ace0:	call   0x14001b5b4
   14001ace5:	inc    edi
   14001ace7:	inc    ebx
   14001ace9:	cmp    DWORD PTR [rsp+0x20],0x0
   14001acee:	jne    0x14001acc7
   14001acf0:	mov    DWORD PTR [rsi],edi
   14001acf2:	mov    rcx,QWORD PTR [rsp+0x70]
   14001acf7:	xor    rcx,rsp
   14001acfa:	call   0x140055f90
   14001acff:	lea    r11,[rsp+0x80]
   14001ad07:	mov    rbx,QWORD PTR [r11+0x20]
   14001ad0b:	mov    rsi,QWORD PTR [r11+0x28]
   14001ad0f:	mov    rsp,r11
   14001ad12:	pop    rdi
   14001ad13:	ret    
   14001ad14:	mov    DWORD PTR [rdx],0xf
   14001ad1a:	lea    r9,[rdx+0x8]
   14001ad1e:	xor    r8d,r8d
   14001ad21:	mov    edx,DWORD PTR [rcx+r8*4]
   14001ad25:	inc    r8
   14001ad28:	movzx  eax,dx
   14001ad2b:	shr    edx,0x10
   14001ad2e:	mov    DWORD PTR [r9],edx
   14001ad31:	mov    DWORD PTR [r9-0x4],eax
   14001ad35:	lea    r9,[r9+0x8]
   14001ad39:	cmp    r8,0x8
   14001ad3d:	jl     0x14001ad21
   14001ad3f:	ret    
   14001ad40:	mov    QWORD PTR [rsp+0x10],rbx
   14001ad45:	push   rdi
   14001ad46:	sub    rsp,0x140
   14001ad4d:	mov    rax,QWORD PTR [rip+0x6718c]        # 0x140081ee0
   14001ad54:	xor    rax,rsp
   14001ad57:	mov    QWORD PTR [rsp+0x130],rax
   14001ad5f:	lea    r8,[rcx+0x4]
   14001ad63:	mov    rbx,rcx
   14001ad66:	inc    DWORD PTR [r8]
   14001ad69:	cmp    DWORD PTR [rcx],0x0
   14001ad6c:	jbe    0x14001ada6
   14001ad6e:	mov    r10d,DWORD PTR [rcx]
   14001ad71:	xor    r9d,r9d
   14001ad74:	xor    edi,edi
   14001ad76:	xor    r11d,r11d
   14001ad79:	mov    edx,DWORD PTR [r8]
   14001ad7c:	lea    eax,[r9+rdi*1]
   14001ad80:	mov    ecx,r11d
   14001ad83:	inc    edi
   14001ad85:	shr    edx,cl
   14001ad87:	add    r11d,0x8
   14001ad8b:	mov    BYTE PTR [rsp+rax*1+0xe0],dl
   14001ad92:	cmp    r11d,0x20
   14001ad96:	jb     0x14001ad79
   14001ad98:	add    r8,0x4
   14001ad9c:	add    r9d,0x4
   14001ada0:	sub    r10,0x1
   14001ada4:	jne    0x14001ad74
   14001ada6:	lea    rcx,[rsp+0x20]
   14001adab:	call   0x14004521c
   14001adb0:	mov    r8d,DWORD PTR [rbx]
   14001adb3:	lea    rdx,[rsp+0xe0]
   14001adbb:	shl    r8d,0x2
   14001adbf:	lea    rcx,[rsp+0x20]
   14001adc4:	xor    r9d,r9d
   14001adc7:	call   0x140045248
   14001adcc:	xor    r8d,r8d
   14001adcf:	lea    rdx,[rsp+0xc0]
   14001add7:	lea    rcx,[rsp+0x20]
   14001addc:	call   0x1400450bc
   14001ade1:	movzx  eax,WORD PTR [rsp+0xc0]
   14001ade9:	mov    rcx,QWORD PTR [rsp+0x130]
   14001adf1:	xor    rcx,rsp
   14001adf4:	call   0x140055f90
   14001adf9:	mov    rbx,QWORD PTR [rsp+0x158]
   14001ae01:	add    rsp,0x140
   14001ae08:	pop    rdi
   14001ae09:	ret    
   14001ae0a:	int3   
   14001ae0b:	int3   
   14001ae0c:	mov    QWORD PTR [rsp+0x20],rbx
   14001ae11:	push   rbp
   14001ae12:	push   rsi
   14001ae13:	push   rdi
   14001ae14:	push   r12
   14001ae16:	push   r13
   14001ae18:	push   r14
   14001ae1a:	push   r15
   14001ae1c:	lea    rbp,[rsp-0x80]
   14001ae21:	sub    rsp,0x180
   14001ae28:	mov    rax,QWORD PTR [rip+0x670b1]        # 0x140081ee0
   14001ae2f:	xor    rax,rsp
   14001ae32:	mov    QWORD PTR [rbp+0x70],rax
   14001ae36:	xor    edi,edi
   14001ae38:	mov    ebx,r9d
   14001ae3b:	mov    BYTE PTR [rsp+0x20],dil
   14001ae40:	mov    r13,r8
   14001ae43:	mov    r12,rdx
   14001ae46:	mov    r15,rcx
   14001ae49:	mov    r9b,dil
   14001ae4c:	test   ebx,ebx
   14001ae4e:	jle    0x14001aec7
   14001ae50:	movzx  eax,r9b
   14001ae54:	imul   rcx,rax,0x9c
   14001ae5b:	lea    rax,[rsp+0x30]
   14001ae60:	add    rcx,rax
   14001ae63:	call   0x14004521c
   14001ae68:	mov    r9b,BYTE PTR [rsp+0x20]
   14001ae6d:	cmp    r9b,0x1
   14001ae71:	jne    0x14001ae8d
   14001ae73:	xor    r9d,r9d
   14001ae76:	lea    rdx,[rsp+0x20]
   14001ae7b:	lea    rcx,[rbp-0x34]
   14001ae7f:	lea    r8d,[r9+0x1]
   14001ae83:	call   0x140045248
   14001ae88:	mov    r9b,BYTE PTR [rsp+0x20]
   14001ae8d:	inc    r9b
   14001ae90:	movzx  eax,r9b
   14001ae94:	mov    BYTE PTR [rsp+0x20],r9b
   14001ae99:	cmp    eax,ebx
   14001ae9b:	jl     0x14001ae50
   14001ae9d:	test   ebx,ebx
   14001ae9f:	jle    0x14001aec7
   14001aea1:	lea    rsi,[rsp+0x30]
   14001aea6:	mov    r14,rbx
   14001aea9:	xor    r9d,r9d
   14001aeac:	mov    r8,r13
   14001aeaf:	mov    rdx,r12
   14001aeb2:	mov    rcx,rsi
   14001aeb5:	call   0x140045248
   14001aeba:	add    rsi,0x9c
   14001aec1:	sub    r14,0x1
   14001aec5:	jne    0x14001aea9
   14001aec7:	mov    BYTE PTR [rsp+0x20],dil
   14001aecc:	test   ebx,ebx
   14001aece:	jle    0x14001aefe
   14001aed0:	lea    eax,[rdi+0x1]
   14001aed3:	xor    r8d,r8d
   14001aed6:	lea    eax,[rax+rax*4]
   14001aed9:	cdqe   
   14001aedb:	lea    rcx,[rsp+0x30]
   14001aee0:	add    rax,0x2
   14001aee4:	lea    rdx,[r15+rax*4]
   14001aee8:	call   0x1400450bc
   14001aeed:	mov    al,BYTE PTR [rsp+0x20]
   14001aef1:	inc    al
   14001aef3:	movzx  edi,al
   14001aef6:	mov    BYTE PTR [rsp+0x20],al
   14001aefa:	cmp    edi,ebx
   14001aefc:	jl     0x14001aed0
   14001aefe:	lea    eax,[rbx*4+0x6]
   14001af05:	add    eax,ebx
   14001af07:	mov    DWORD PTR [r15],eax
   14001af0a:	mov    rcx,QWORD PTR [rbp+0x70]
   14001af0e:	xor    rcx,rsp
   14001af11:	call   0x140055f90
   14001af16:	mov    rbx,QWORD PTR [rsp+0x1d8]
   14001af1e:	add    rsp,0x180
   14001af25:	pop    r15
   14001af27:	pop    r14
   14001af29:	pop    r13
   14001af2b:	pop    r12
   14001af2d:	pop    rdi
   14001af2e:	pop    rsi
   14001af2f:	pop    rbp
   14001af30:	ret    
   14001af31:	int3   
   14001af32:	int3   
   14001af33:	int3   
   14001af34:	rex push rbp
   14001af36:	push   rbx
   14001af37:	push   rsi
   14001af38:	push   rdi
   14001af39:	push   r14
   14001af3b:	push   r15
   14001af3d:	lea    rbp,[rsp-0x88]
   14001af45:	sub    rsp,0x188
   14001af4c:	mov    rax,QWORD PTR [rip+0x66f8d]        # 0x140081ee0
   14001af53:	xor    rax,rsp
   14001af56:	mov    QWORD PTR [rbp+0x70],rax
   14001af5a:	xor    edi,edi
   14001af5c:	movsxd rbx,r8d
   14001af5f:	mov    r14,rdx
   14001af62:	mov    dl,dil
   14001af65:	mov    BYTE PTR [rsp+0x20],dl
   14001af69:	mov    r15,r9
   14001af6c:	mov    rsi,rcx
   14001af6f:	test   r8d,r8d
   14001af72:	jle    0x14001afba
   14001af74:	movzx  eax,dl
   14001af77:	imul   rcx,rax,0x9c
   14001af7e:	lea    rax,[rsp+0x30]
   14001af83:	add    rcx,rax
   14001af86:	call   0x14004521c
   14001af8b:	mov    dl,BYTE PTR [rsp+0x20]
   14001af8f:	cmp    dl,0x1
   14001af92:	jne    0x14001afad
   14001af94:	xor    r9d,r9d
   14001af97:	lea    rdx,[rsp+0x20]
   14001af9c:	lea    rcx,[rbp-0x34]
   14001afa0:	lea    r8d,[r9+0x1]
   14001afa4:	call   0x140045248
   14001afa9:	mov    dl,BYTE PTR [rsp+0x20]
   14001afad:	inc    dl
   14001afaf:	movzx  eax,dl
   14001afb2:	mov    BYTE PTR [rsp+0x20],dl
   14001afb6:	cmp    eax,ebx
   14001afb8:	jl     0x14001af74
   14001afba:	mov    r8,rbx
   14001afbd:	lea    rcx,[rsp+0x30]
   14001afc2:	mov    r9,r15
   14001afc5:	mov    rdx,r14
   14001afc8:	call   0x14001b144
   14001afcd:	mov    BYTE PTR [rsp+0x20],dil
   14001afd2:	test   ebx,ebx
   14001afd4:	jle    0x14001b004
   14001afd6:	lea    eax,[rdi+0x1]
   14001afd9:	xor    r8d,r8d
   14001afdc:	lea    eax,[rax+rax*4]
   14001afdf:	cdqe   
   14001afe1:	lea    rcx,[rsp+0x30]
   14001afe6:	add    rax,0x2
   14001afea:	lea    rdx,[rsi+rax*4]
   14001afee:	call   0x1400450bc
   14001aff3:	mov    al,BYTE PTR [rsp+0x20]
   14001aff7:	inc    al
   14001aff9:	movzx  edi,al
   14001affc:	mov    BYTE PTR [rsp+0x20],al
   14001b000:	cmp    edi,ebx
   14001b002:	jl     0x14001afd6
   14001b004:	lea    eax,[rbx*4+0x6]
   14001b00b:	add    eax,ebx
   14001b00d:	mov    DWORD PTR [rsi],eax
   14001b00f:	mov    rcx,QWORD PTR [rbp+0x70]
   14001b013:	xor    rcx,rsp
   14001b016:	call   0x140055f90
   14001b01b:	add    rsp,0x188
   14001b022:	pop    r15
   14001b024:	pop    r14
   14001b026:	pop    rdi
   14001b027:	pop    rsi
   14001b028:	pop    rbx
   14001b029:	pop    rbp
   14001b02a:	ret    
   14001b02b:	int3   
   14001b02c:	mov    QWORD PTR [rsp+0x18],rbx
   14001b031:	push   rdi
   14001b032:	sub    rsp,0xd0
   14001b039:	mov    rax,QWORD PTR [rip+0x66ea0]        # 0x140081ee0
   14001b040:	xor    rax,rsp
   14001b043:	mov    QWORD PTR [rsp+0xc0],rax
   14001b04b:	mov    rdi,rcx
   14001b04e:	mov    rbx,rdx
   14001b051:	lea    rcx,[rsp+0x20]
   14001b056:	call   0x14004521c
   14001b05b:	or     r8,0xffffffffffffffff
   14001b05f:	inc    r8
   14001b062:	cmp    BYTE PTR [rbx+r8*1],0x0
   14001b067:	jne    0x14001b05f
   14001b069:	xor    r9d,r9d
   14001b06c:	lea    rcx,[rsp+0x20]
   14001b071:	mov    rdx,rbx
   14001b074:	call   0x140045248
   14001b079:	lea    rdx,[rdi+0x8]
   14001b07d:	xor    r8d,r8d
   14001b080:	lea    rcx,[rsp+0x20]
   14001b085:	call   0x1400450bc
   14001b08a:	mov    DWORD PTR [rdi],0x6
   14001b090:	mov    rcx,QWORD PTR [rsp+0xc0]
   14001b098:	xor    rcx,rsp
   14001b09b:	call   0x140055f90
   14001b0a0:	mov    rbx,QWORD PTR [rsp+0xf0]
   14001b0a8:	add    rsp,0xd0
   14001b0af:	pop    rdi
   14001b0b0:	ret    
   14001b0b1:	int3   
   14001b0b2:	int3   
   14001b0b3:	int3   
   14001b0b4:	mov    QWORD PTR [rsp+0x8],rbx
   14001b0b9:	mov    QWORD PTR [rsp+0x10],rsi
   14001b0be:	push   rdi
   14001b0bf:	sub    rsp,0x20
   14001b0c3:	mov    rdi,rdx
   14001b0c6:	mov    DWORD PTR [rdx],0xf
   14001b0cc:	mov    rsi,rcx
   14001b0cf:	mov    ebx,0x1
   14001b0d4:	mov    rcx,rsi
   14001b0d7:	call   0x14001ad40
   14001b0dc:	mov    DWORD PTR [rdi+rbx*4],eax
   14001b0df:	inc    rbx
   14001b0e2:	cmp    rbx,0x10
   14001b0e6:	jl     0x14001b0d4
   14001b0e8:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b0ed:	mov    rsi,QWORD PTR [rsp+0x38]
   14001b0f2:	add    rsp,0x20
   14001b0f6:	pop    rdi
   14001b0f7:	ret    
   14001b0f8:	mov    r8d,DWORD PTR [rcx]
   14001b0fb:	test   r8d,r8d
   14001b0fe:	je     0x14001b140
   14001b100:	lea    r9,[rcx+r8*4]
   14001b104:	mov    r11d,DWORD PTR [r9]
   14001b107:	xor    r10d,r10d
   14001b10a:	mov    ecx,0x3
   14001b10f:	mov    rax,r11
   14001b112:	sub    ecx,r10d
   14001b115:	inc    r10d
   14001b118:	shl    ecx,0x2
   14001b11b:	shr    rax,cl
   14001b11e:	lea    rcx,[rip+0x52c0b]        # 0x14006dd30
   14001b125:	and    eax,0xf
   14001b128:	mov    al,BYTE PTR [rax+rcx*1]
   14001b12b:	mov    BYTE PTR [rdx],al
   14001b12d:	inc    rdx
   14001b130:	cmp    r10d,0x4
   14001b134:	jb     0x14001b10a
   14001b136:	sub    r9,0x4
   14001b13a:	add    r8d,0xffffffff
   14001b13e:	jne    0x14001b104
   14001b140:	mov    BYTE PTR [rdx],0x0
   14001b143:	ret    
   14001b144:	mov    QWORD PTR [rsp+0x18],rbx
   14001b149:	push   rbp
   14001b14a:	push   rsi
   14001b14b:	push   rdi
   14001b14c:	push   r12
   14001b14e:	push   r13
   14001b150:	push   r14
   14001b152:	push   r15
   14001b154:	mov    eax,0x4040
   14001b159:	call   0x140055f20
   14001b15e:	sub    rsp,rax
   14001b161:	mov    rax,QWORD PTR [rip+0x66d78]        # 0x140081ee0
   14001b168:	xor    rax,rsp
   14001b16b:	mov    QWORD PTR [rsp+0x4030],rax
   14001b173:	movabs rax,0x7fffffff7fffffff
   14001b17d:	mov    QWORD PTR [rsp+0x20],rcx
   14001b182:	cmp    r9,rax
   14001b185:	mov    rbx,r9
   14001b188:	mov    r13,r8
   14001b18b:	mov    rsi,rdx
   14001b18e:	sete   r15b
   14001b192:	mov    rbp,rcx
   14001b195:	mov    r14d,0x4000
   14001b19b:	test   r15b,r15b
   14001b19e:	jne    0x14001b1a8
   14001b1a0:	mov    r8d,ebx
   14001b1a3:	cmp    rbx,r14
   14001b1a6:	jbe    0x14001b1ab
   14001b1a8:	mov    r8,r14
   14001b1ab:	mov    rax,QWORD PTR [rsi]
   14001b1ae:	lea    rdx,[rsp+0x30]
   14001b1b3:	mov    rcx,rsi
   14001b1b6:	call   QWORD PTR [rax+0x10]
   14001b1b9:	mov    edi,eax
   14001b1bb:	test   eax,eax
   14001b1bd:	je     0x14001b206
   14001b1bf:	test   r13,r13
   14001b1c2:	je     0x14001b1f2
   14001b1c4:	mov    r14,r13
   14001b1c7:	xor    r9d,r9d
   14001b1ca:	lea    rdx,[rsp+0x30]
   14001b1cf:	mov    r8,rdi
   14001b1d2:	mov    rcx,rbp
   14001b1d5:	call   0x140045248
   14001b1da:	add    rbp,0x9c
   14001b1e1:	sub    r14,0x1
   14001b1e5:	jne    0x14001b1c7
   14001b1e7:	mov    rbp,QWORD PTR [rsp+0x20]
   14001b1ec:	mov    r14d,0x4000
   14001b1f2:	cmp    edi,r14d
   14001b1f5:	jb     0x14001b206
   14001b1f7:	test   r15b,r15b
   14001b1fa:	jne    0x14001b1ff
   14001b1fc:	sub    rbx,r14
   14001b1ff:	call   0x140046bb4
   14001b204:	jmp    0x14001b19b
   14001b206:	mov    r8,r14
   14001b209:	lea    rcx,[rsp+0x30]
   14001b20e:	xor    edx,edx
   14001b210:	call   0x140058f40
   14001b215:	mov    rax,QWORD PTR [rsi]
   14001b218:	xor    r8d,r8d
   14001b21b:	xor    edx,edx
   14001b21d:	mov    rcx,rsi
   14001b220:	call   QWORD PTR [rax+0x18]
   14001b223:	mov    rcx,QWORD PTR [rsp+0x4030]
   14001b22b:	xor    rcx,rsp
   14001b22e:	call   0x140055f90
   14001b233:	mov    rbx,QWORD PTR [rsp+0x4090]
   14001b23b:	add    rsp,0x4040
   14001b242:	pop    r15
   14001b244:	pop    r14
   14001b246:	pop    r13
   14001b248:	pop    r12
   14001b24a:	pop    rdi
   14001b24b:	pop    rsi
   14001b24c:	pop    rbp
   14001b24d:	ret    
   14001b24e:	int3   
   14001b24f:	int3   
   14001b250:	mov    r8,rcx
   14001b253:	mov    r11d,0x1
   14001b259:	mov    ecx,DWORD PTR [rcx]
   14001b25b:	jmp    0x14001b262
   14001b25d:	and    DWORD PTR [r8+rcx*4],0x0
   14001b262:	add    ecx,r11d
   14001b265:	cmp    ecx,DWORD PTR [rdx]
   14001b267:	jbe    0x14001b25d
   14001b269:	mov    eax,DWORD PTR [rdx]
   14001b26b:	cmp    DWORD PTR [r8],eax
   14001b26e:	jae    0x14001b273
   14001b270:	mov    DWORD PTR [r8],eax
   14001b273:	xor    r10d,r10d
   14001b276:	mov    r9d,r11d
   14001b279:	cmp    DWORD PTR [rdx],r11d
   14001b27c:	jb     0x14001b29f
   14001b27e:	mov    ecx,r9d
   14001b281:	add    r9d,r11d
   14001b284:	mov    eax,DWORD PTR [rdx+rcx*4]
   14001b287:	add    eax,DWORD PTR [r8+rcx*4]
   14001b28b:	add    r10d,eax
   14001b28e:	movzx  eax,r10w
   14001b292:	shr    r10d,0x10
   14001b296:	mov    DWORD PTR [r8+rcx*4],eax
   14001b29a:	cmp    r9d,DWORD PTR [rdx]
   14001b29d:	jbe    0x14001b27e
   14001b29f:	mov    r9d,DWORD PTR [rdx]
   14001b2a2:	add    r9d,r11d
   14001b2a5:	test   r10d,r10d
   14001b2a8:	je     0x14001b2d0
   14001b2aa:	cmp    r9d,DWORD PTR [r8]
   14001b2ad:	jbe    0x14001b2b7
   14001b2af:	and    DWORD PTR [r8+r9*4],0x0
   14001b2b4:	add    DWORD PTR [r8],r11d
   14001b2b7:	mov    edx,DWORD PTR [r8+r9*4]
   14001b2bb:	add    edx,r11d
   14001b2be:	movzx  eax,dx
   14001b2c1:	mov    DWORD PTR [r8+r9*4],eax
   14001b2c5:	add    r9d,r11d
   14001b2c8:	test   edx,0xffff0000
   14001b2ce:	jne    0x14001b2aa
   14001b2d0:	ret    
   14001b2d1:	int3   
   14001b2d2:	int3   
   14001b2d3:	int3   
   14001b2d4:	movsxd r8,DWORD PTR [rcx]
   14001b2d7:	mov    r9,rcx
   14001b2da:	cmp    r8d,DWORD PTR [rdx]
   14001b2dd:	jbe    0x14001b2e5
   14001b2df:	mov    eax,0x1
   14001b2e4:	ret    
   14001b2e5:	jb     0x14001b309
   14001b2e7:	test   r8d,r8d
   14001b2ea:	jle    0x14001b309
   14001b2ec:	lea    rcx,[rdx+r8*4]
   14001b2f0:	sub    r9,rdx
   14001b2f3:	mov    eax,DWORD PTR [rcx]
   14001b2f5:	cmp    DWORD PTR [r9+rcx*1],eax
   14001b2f9:	ja     0x14001b2df
   14001b2fb:	jb     0x14001b309
   14001b2fd:	dec    r8d
   14001b300:	sub    rcx,0x4
   14001b304:	test   r8d,r8d
   14001b307:	jg     0x14001b2f3
   14001b309:	xor    eax,eax
   14001b30b:	ret    
   14001b30c:	mov    QWORD PTR [rsp+0x10],rbx
   14001b311:	push   rbp
   14001b312:	push   rsi
   14001b313:	push   rdi
   14001b314:	push   r14
   14001b316:	push   r15
   14001b318:	sub    rsp,0x80
   14001b31f:	mov    rax,QWORD PTR [rip+0x66bba]        # 0x140081ee0
   14001b326:	xor    rax,rsp
   14001b329:	mov    QWORD PTR [rsp+0x70],rax
   14001b32e:	mov    rsi,rdx
   14001b331:	mov    rbx,r8
   14001b334:	xor    edx,edx
   14001b336:	mov    r15,r9
   14001b339:	mov    rbp,rcx
   14001b33c:	lea    r8d,[rdx+0x4c]
   14001b340:	call   0x140058f40
   14001b345:	mov    r8d,DWORD PTR [rbx]
   14001b348:	lea    rcx,[rsp+0x20]
   14001b34d:	inc    r8d
   14001b350:	mov    rdx,rbx
   14001b353:	shl    r8,0x2
   14001b357:	call   0x140059180
   14001b35c:	mov    ebx,0x1
   14001b361:	cmp    DWORD PTR [rsi],ebx
   14001b363:	jb     0x14001b3b4
   14001b365:	xor    edi,edi
   14001b367:	mov    r14d,ebx
   14001b36a:	mov    eax,DWORD PTR [rsi+r14*4]
   14001b36e:	bt     eax,edi
   14001b371:	jae    0x14001b38b
   14001b373:	lea    rdx,[rsp+0x20]
   14001b378:	mov    rcx,rbp
   14001b37b:	call   0x14001b250
   14001b380:	mov    rdx,r15
   14001b383:	mov    rcx,rbp
   14001b386:	call   0x14001b400
   14001b38b:	mov    edx,0x1
   14001b390:	lea    rcx,[rsp+0x20]
   14001b395:	call   0x14001b4b0
   14001b39a:	mov    rdx,r15
   14001b39d:	lea    rcx,[rsp+0x20]
   14001b3a2:	call   0x14001b400
   14001b3a7:	inc    edi
   14001b3a9:	cmp    edi,0x10
   14001b3ac:	jb     0x14001b36a
   14001b3ae:	inc    ebx
   14001b3b0:	cmp    ebx,DWORD PTR [rsi]
   14001b3b2:	jbe    0x14001b365
   14001b3b4:	mov    rcx,QWORD PTR [rsp+0x70]
   14001b3b9:	xor    rcx,rsp
   14001b3bc:	call   0x140055f90
   14001b3c1:	mov    rbx,QWORD PTR [rsp+0xb8]
   14001b3c9:	add    rsp,0x80
   14001b3d0:	pop    r15
   14001b3d2:	pop    r14
   14001b3d4:	pop    rdi
   14001b3d5:	pop    rsi
   14001b3d6:	pop    rbp
   14001b3d7:	ret    
   14001b3d8:	mov    edx,DWORD PTR [rcx]
   14001b3da:	mov    r8,rcx
   14001b3dd:	test   edx,edx
   14001b3df:	jne    0x14001b3e4
   14001b3e1:	xor    eax,eax
   14001b3e3:	ret    
   14001b3e4:	mov    r9d,DWORD PTR [r8+rdx*4]
   14001b3e8:	mov    ecx,0x8000
   14001b3ed:	shl    edx,0x4
   14001b3f0:	test   ecx,r9d
   14001b3f3:	jne    0x14001b3fd
   14001b3f5:	dec    edx
   14001b3f7:	shr    ecx,1
   14001b3f9:	jne    0x14001b3f0
   14001b3fb:	jmp    0x14001b3e1
   14001b3fd:	mov    eax,edx
   14001b3ff:	ret    
   14001b400:	mov    QWORD PTR [rsp+0x18],rbx
   14001b405:	push   rdi
   14001b406:	sub    rsp,0x80
   14001b40d:	mov    rax,QWORD PTR [rip+0x66acc]        # 0x140081ee0
   14001b414:	xor    rax,rsp
   14001b417:	mov    QWORD PTR [rsp+0x70],rax
   14001b41c:	mov    r8d,DWORD PTR [rdx]
   14001b41f:	mov    rdi,rcx
   14001b422:	inc    r8d
   14001b425:	lea    rcx,[rsp+0x20]
   14001b42a:	shl    r8,0x2
   14001b42e:	xor    ebx,ebx
   14001b430:	call   0x140059180
   14001b435:	jmp    0x14001b448
   14001b437:	mov    edx,0x1
   14001b43c:	lea    rcx,[rsp+0x20]
   14001b441:	call   0x14001b4b0
   14001b446:	inc    ebx
   14001b448:	lea    rdx,[rsp+0x20]
   14001b44d:	mov    rcx,rdi
   14001b450:	call   0x14001b2d4
   14001b455:	test   eax,eax
   14001b457:	jne    0x14001b437
   14001b459:	mov    rdx,rdi
   14001b45c:	lea    rcx,[rsp+0x20]
   14001b461:	call   0x14001b2d4
   14001b466:	test   eax,eax
   14001b468:	je     0x14001b481
   14001b46a:	test   ebx,ebx
   14001b46c:	je     0x14001b490
   14001b46e:	mov    edx,0x1
   14001b473:	lea    rcx,[rsp+0x20]
   14001b478:	call   0x14001b5b4
   14001b47d:	dec    ebx
   14001b47f:	jmp    0x14001b459
   14001b481:	lea    rdx,[rsp+0x20]
   14001b486:	mov    rcx,rdi
   14001b489:	call   0x14001b61c
   14001b48e:	jmp    0x14001b459
   14001b490:	mov    rcx,QWORD PTR [rsp+0x70]
   14001b495:	xor    rcx,rsp
   14001b498:	call   0x140055f90
   14001b49d:	mov    rbx,QWORD PTR [rsp+0xa0]
   14001b4a5:	add    rsp,0x80
   14001b4ac:	pop    rdi
   14001b4ad:	ret    
   14001b4ae:	int3   
   14001b4af:	int3   
   14001b4b0:	mov    QWORD PTR [rsp+0x8],rbx
   14001b4b5:	mov    r10d,DWORD PTR [rcx]
   14001b4b8:	mov    ebx,edx
   14001b4ba:	mov    r9,rcx
   14001b4bd:	test   r10d,r10d
   14001b4c0:	je     0x14001b52d
   14001b4c2:	mov    r8d,DWORD PTR [rcx+r10*4]
   14001b4c6:	mov    r11d,0x10
   14001b4cc:	sub    r11d,edx
   14001b4cf:	mov    ecx,r11d
   14001b4d2:	shr    r8d,cl
   14001b4d5:	test   r8d,r8d
   14001b4d8:	je     0x14001b4ec
   14001b4da:	cmp    r10d,0x12
   14001b4de:	jae    0x14001b4ec
   14001b4e0:	lea    eax,[r10+0x1]
   14001b4e4:	mov    DWORD PTR [r9],eax
   14001b4e7:	and    DWORD PTR [r9+rax*4],0x0
   14001b4ec:	mov    r8d,DWORD PTR [r9]
   14001b4ef:	cmp    r8d,0x1
   14001b4f3:	jbe    0x14001b51e
   14001b4f5:	lea    r10,[r9+r8*4]
   14001b4f9:	mov    eax,DWORD PTR [r10]
   14001b4fc:	dec    r8d
   14001b4ff:	mov    ecx,r11d
   14001b502:	mov    edx,DWORD PTR [r9+r8*4]
   14001b506:	shr    edx,cl
   14001b508:	mov    ecx,ebx
   14001b50a:	shl    eax,cl
   14001b50c:	or     edx,eax
   14001b50e:	movzx  eax,dx
   14001b511:	mov    DWORD PTR [r10],eax
   14001b514:	lea    r10,[r10-0x4]
   14001b518:	cmp    r8d,0x1
   14001b51c:	ja     0x14001b4f9
   14001b51e:	mov    eax,DWORD PTR [r9+0x4]
   14001b522:	mov    ecx,ebx
   14001b524:	shl    eax,cl
   14001b526:	movzx  eax,ax
   14001b529:	mov    DWORD PTR [r9+0x4],eax
   14001b52d:	mov    rbx,QWORD PTR [rsp+0x8]
   14001b532:	ret    
   14001b533:	int3   
   14001b534:	sub    rsp,0x28
   14001b538:	mov    eax,DWORD PTR [rdx]
   14001b53a:	mov    r10d,r8d
   14001b53d:	mov    r9,rcx
   14001b540:	cmp    eax,0x11
   14001b543:	jbe    0x14001b54a
   14001b545:	or     eax,0xffffffff
   14001b548:	jmp    0x14001b5af
   14001b54a:	cmp    r8d,0x1
   14001b54e:	jbe    0x14001b596
   14001b550:	xor    r8d,r8d
   14001b553:	lea    r11d,[r8+0x1]
   14001b557:	cmp    eax,r11d
   14001b55a:	jb     0x14001b58f
   14001b55c:	mov    ecx,r11d
   14001b55f:	inc    r11d
   14001b562:	mov    eax,DWORD PTR [rdx+rcx*4]
   14001b565:	imul   eax,r10d
   14001b569:	add    r8d,eax
   14001b56c:	movzx  eax,r8w
   14001b570:	shr    r8d,0x10
   14001b574:	mov    DWORD PTR [r9+rcx*4],eax
   14001b578:	cmp    r11d,DWORD PTR [rdx]
   14001b57b:	jbe    0x14001b55c
   14001b57d:	test   r8d,r8d
   14001b580:	je     0x14001b58f
   14001b582:	mov    eax,DWORD PTR [rdx]
   14001b584:	inc    eax
   14001b586:	mov    DWORD PTR [r9],eax
   14001b589:	mov    DWORD PTR [r9+rax*4],r8d
   14001b58d:	jmp    0x14001b5ad
   14001b58f:	mov    eax,DWORD PTR [rdx]
   14001b591:	mov    DWORD PTR [r9],eax
   14001b594:	jmp    0x14001b5ad
   14001b596:	test   r8d,r8d
   14001b599:	je     0x14001b5aa
   14001b59b:	lea    r8d,[rax+0x1]
   14001b59f:	shl    r8,0x2
   14001b5a3:	call   0x140059180
   14001b5a8:	jmp    0x14001b5ad
   14001b5aa:	and    DWORD PTR [rcx],0x0
   14001b5ad:	xor    eax,eax
   14001b5af:	add    rsp,0x28
   14001b5b3:	ret    
   14001b5b4:	mov    QWORD PTR [rsp+0x8],rbx
   14001b5b9:	cmp    DWORD PTR [rcx],0x0
   14001b5bc:	mov    ebx,edx
   14001b5be:	mov    r10,rcx
   14001b5c1:	je     0x14001b614
   14001b5c3:	mov    eax,0x1
   14001b5c8:	cmp    DWORD PTR [rcx],eax
   14001b5ca:	jbe    0x14001b5fc
   14001b5cc:	lea    r11d,[rax+0xf]
   14001b5d0:	sub    r11d,edx
   14001b5d3:	lea    r9d,[rax+0x1]
   14001b5d7:	mov    r8d,eax
   14001b5da:	mov    edx,DWORD PTR [r10+r9*4]
   14001b5de:	mov    ecx,r11d
   14001b5e1:	shl    edx,cl
   14001b5e3:	mov    ecx,ebx
   14001b5e5:	mov    eax,DWORD PTR [r10+r8*4]
   14001b5e9:	shr    eax,cl
   14001b5eb:	or     edx,eax
   14001b5ed:	movzx  eax,dx
   14001b5f0:	mov    DWORD PTR [r10+r8*4],eax
   14001b5f4:	mov    eax,r9d
   14001b5f7:	cmp    r9d,DWORD PTR [r10]
   14001b5fa:	jb     0x14001b5d3
   14001b5fc:	mov    eax,DWORD PTR [r10]
   14001b5ff:	mov    ecx,ebx
   14001b601:	shr    DWORD PTR [r10+rax*4],cl
   14001b605:	mov    eax,DWORD PTR [r10]
   14001b608:	cmp    DWORD PTR [r10+rax*4],0x0
   14001b60d:	jne    0x14001b614
   14001b60f:	dec    eax
   14001b611:	mov    DWORD PTR [r10],eax
   14001b614:	mov    rbx,QWORD PTR [rsp+0x8]
   14001b619:	ret    
   14001b61a:	int3   
   14001b61b:	int3   
   14001b61c:	xor    r11d,r11d
   14001b61f:	mov    r9d,r11d
   14001b622:	lea    r8d,[r11+0x1]
   14001b626:	cmp    DWORD PTR [rdx],r8d
   14001b629:	jb     0x14001b673
   14001b62b:	mov    r10d,r8d
   14001b62e:	mov    eax,DWORD PTR [rcx+r10*4]
   14001b632:	sub    eax,DWORD PTR [rdx+r10*4]
   14001b636:	sub    eax,r9d
   14001b639:	mov    r9d,0x1
   14001b63f:	add    eax,0x10000
   14001b644:	cmp    eax,0x10000
   14001b649:	jb     0x14001b653
   14001b64b:	add    eax,0xffff0000
   14001b650:	mov    r9d,r11d
   14001b653:	inc    r8d
   14001b656:	mov    DWORD PTR [rcx+r10*4],eax
   14001b65a:	cmp    r8d,DWORD PTR [rdx]
   14001b65d:	jbe    0x14001b62b
   14001b65f:	test   r9d,r9d
   14001b662:	je     0x14001b673
   14001b664:	jmp    0x14001b669
   14001b666:	inc    r8d
   14001b669:	cmp    DWORD PTR [rcx+r8*4],r11d
   14001b66d:	je     0x14001b666
   14001b66f:	dec    DWORD PTR [rcx+r8*4]
   14001b673:	mov    eax,DWORD PTR [rcx]
   14001b675:	jmp    0x14001b681
   14001b677:	mov    eax,DWORD PTR [rcx]
   14001b679:	test   eax,eax
   14001b67b:	je     0x14001b687
   14001b67d:	dec    eax
   14001b67f:	mov    DWORD PTR [rcx],eax
   14001b681:	cmp    DWORD PTR [rcx+rax*4],r11d
   14001b685:	je     0x14001b677
   14001b687:	ret    
   14001b688:	mov    rax,rsp
   14001b68b:	mov    QWORD PTR [rax+0x10],rdx
   14001b68f:	mov    QWORD PTR [rax+0x18],r8
   14001b693:	mov    QWORD PTR [rax+0x20],r9
   14001b697:	push   rbx
   14001b698:	push   rsi
   14001b699:	push   rdi
   14001b69a:	sub    rsp,0x30
   14001b69e:	mov    rbx,rdx
   14001b6a1:	lea    rsi,[rax+0x18]
   14001b6a5:	mov    rdi,rcx
   14001b6a8:	call   0x140006ac4
   14001b6ad:	mov    r9,rbx
   14001b6b0:	mov    QWORD PTR [rsp+0x28],rsi
   14001b6b5:	and    QWORD PTR [rsp+0x20],0x0
   14001b6bb:	or     rbx,0xffffffffffffffff
   14001b6bf:	mov    r8,rbx
   14001b6c2:	mov    rdx,rdi
   14001b6c5:	mov    rcx,QWORD PTR [rax]
   14001b6c8:	or     rcx,0x1
   14001b6cc:	call   0x14005cf40
   14001b6d1:	test   eax,eax
   14001b6d3:	cmovs  eax,ebx
   14001b6d6:	add    rsp,0x30
   14001b6da:	pop    rdi
   14001b6db:	pop    rsi
   14001b6dc:	pop    rbx
   14001b6dd:	ret    
   14001b6de:	int3   
   14001b6df:	int3   
   14001b6e0:	xor    eax,eax
   14001b6e2:	mov    BYTE PTR [rcx+0x8],al
   14001b6e5:	mov    DWORD PTR [rcx+0xc],eax
   14001b6e8:	mov    QWORD PTR [rcx+0x10],rax
   14001b6ec:	mov    QWORD PTR [rcx+0x18],rax
   14001b6f0:	mov    rax,rcx
   14001b6f3:	ret    
   14001b6f4:	cmp    DWORD PTR [rcx+0xc],0x8
   14001b6f8:	jne    0x14001b71b
   14001b6fa:	mov    r9,QWORD PTR [rcx+0x10]
   14001b6fe:	mov    al,BYTE PTR [rcx+0x8]
   14001b701:	mov    r8,QWORD PTR [rcx]
   14001b704:	mov    BYTE PTR [r9+r8*1],al
   14001b708:	mov    rax,QWORD PTR [rcx+0x18]
   14001b70c:	mov    QWORD PTR [rcx+0x10],rax
   14001b710:	inc    rax
   14001b713:	and    DWORD PTR [rcx+0xc],0x0
   14001b717:	mov    QWORD PTR [rcx+0x18],rax
   14001b71b:	mov    al,BYTE PTR [rcx+0x8]
   14001b71e:	add    DWORD PTR [rcx+0xc],0x2
   14001b722:	shl    al,0x2
   14001b725:	or     al,dl
   14001b727:	mov    BYTE PTR [rcx+0x8],al
   14001b72a:	ret    
   14001b72b:	int3   
   14001b72c:	mov    rax,rsp
   14001b72f:	mov    QWORD PTR [rax+0x8],rbx
   14001b733:	mov    QWORD PTR [rax+0x10],rbp
   14001b737:	mov    QWORD PTR [rax+0x18],rsi
   14001b73b:	mov    QWORD PTR [rax+0x20],rdi
   14001b73f:	push   r12
   14001b741:	push   r13
   14001b743:	push   r14
   14001b745:	push   r15
   14001b747:	mov    r13b,BYTE PTR [r8]
   14001b74a:	mov    r12,rdx
   14001b74d:	mov    rsi,QWORD PTR [rsp+0x50]
   14001b752:	xor    edx,edx
   14001b754:	mov    r14,QWORD PTR [rsp+0x48]
   14001b759:	mov    r15,r9
   14001b75c:	mov    rdi,r8
   14001b75f:	mov    rbx,rcx
   14001b762:	mov    r10d,edx
   14001b765:	lea    r11d,[rdx+0x1]
   14001b769:	cmp    r11,r9
   14001b76c:	jae    0x14001b859
   14001b772:	mov    r9d,0x100
   14001b778:	cmp    r10,rsi
   14001b77b:	jae    0x14001b859
   14001b781:	cmp    DWORD PTR [rbx+0xc],edx
   14001b784:	jne    0x14001b797
   14001b786:	mov    al,BYTE PTR [r11+rdi*1]
   14001b78a:	inc    r11
   14001b78d:	mov    BYTE PTR [rbx+0x8],al
   14001b790:	mov    DWORD PTR [rbx+0xc],0x8
   14001b797:	movzx  ecx,BYTE PTR [rbx+0x8]
   14001b79b:	shr    ecx,0x6
   14001b79e:	test   ecx,ecx
   14001b7a0:	je     0x14001b8cf
   14001b7a6:	sub    ecx,0x1
   14001b7a9:	je     0x14001b8a9
   14001b7af:	sub    ecx,0x1
   14001b7b2:	je     0x14001b886
   14001b7b8:	cmp    ecx,0x1
   14001b7bb:	jne    0x14001b848
   14001b7c1:	movzx  r9d,BYTE PTR [r11+rdi*1]
   14001b7c6:	inc    r11
   14001b7c9:	test   r9b,r9b
   14001b7cc:	jns    0x14001b822
   14001b7ce:	mov    bpl,BYTE PTR [r11+rdi*1]
   14001b7d2:	and    r9d,0x7f
   14001b7d6:	add    r9d,0x2
   14001b7da:	inc    r11
   14001b7dd:	test   r9d,r9d
   14001b7e0:	jle    0x14001b842
   14001b7e2:	cmp    r10,rsi
   14001b7e5:	jae    0x14001b842
   14001b7e7:	movsx  r8d,BYTE PTR [r10+r12*1]
   14001b7ec:	dec    r9d
   14001b7ef:	movzx  eax,bpl
   14001b7f3:	add    r8w,ax
   14001b7f7:	movzx  edx,r13b
   14001b7fb:	mov    eax,0xff
   14001b800:	and    r8w,ax
   14001b804:	lea    ecx,[rax+0x1]
   14001b807:	imul   edx,ecx
   14001b80a:	add    r8w,dx
   14001b80e:	xor    edx,edx
   14001b810:	mov    WORD PTR [r14+r10*2],r8w
   14001b815:	inc    r10
   14001b818:	test   r9d,r9d
   14001b81b:	jg     0x14001b7e2
   14001b81d:	mov    r9d,ecx
   14001b820:	jmp    0x14001b848
   14001b822:	add    r9d,0x2
   14001b826:	jmp    0x14001b83d
   14001b828:	cmp    r10,rsi
   14001b82b:	jae    0x14001b842
   14001b82d:	movsx  eax,BYTE PTR [r10+r12*1]
   14001b832:	dec    r9d
   14001b835:	mov    WORD PTR [r14+r10*2],ax
   14001b83a:	inc    r10
   14001b83d:	test   r9d,r9d
   14001b840:	jg     0x14001b828
   14001b842:	mov    r9d,0x100
   14001b848:	shl    BYTE PTR [rbx+0x8],0x2
   14001b84c:	add    DWORD PTR [rbx+0xc],0xfffffffe
   14001b850:	cmp    r11,r15
   14001b853:	jb     0x14001b778
   14001b859:	mov    rbx,QWORD PTR [rsp+0x28]
   14001b85e:	lea    rax,[rsi-0x1]
   14001b862:	mov    rbp,QWORD PTR [rsp+0x30]
   14001b867:	cmp    r10,rsi
   14001b86a:	mov    rsi,QWORD PTR [rsp+0x38]
   14001b86f:	mov    rdi,QWORD PTR [rsp+0x40]
   14001b874:	cmovb  rax,r10
   14001b878:	mov    WORD PTR [r14+rax*2],dx
   14001b87d:	pop    r15
   14001b87f:	pop    r14
   14001b881:	pop    r13
   14001b883:	pop    r12
   14001b885:	ret    
   14001b886:	movzx  edx,BYTE PTR [r11+rdi*1+0x1]
   14001b88c:	movzx  eax,BYTE PTR [r11+rdi*1]
   14001b891:	movzx  ecx,r9w
   14001b895:	imul   edx,ecx
   14001b898:	add    dx,ax
   14001b89b:	mov    WORD PTR [r14+r10*2],dx
   14001b8a0:	inc    r10
   14001b8a3:	add    r11,0x2
   14001b8a7:	jmp    0x14001b8c8
   14001b8a9:	movzx  r8d,BYTE PTR [r11+rdi*1]
   14001b8ae:	movzx  edx,r13b
   14001b8b2:	movzx  ecx,r9w
   14001b8b6:	imul   edx,ecx
   14001b8b9:	add    r8w,dx
   14001b8bd:	mov    WORD PTR [r14+r10*2],r8w
   14001b8c2:	inc    r10
   14001b8c5:	inc    r11
   14001b8c8:	xor    edx,edx
   14001b8ca:	jmp    0x14001b848
   14001b8cf:	movzx  eax,BYTE PTR [r11+rdi*1]
   14001b8d4:	mov    WORD PTR [r14+r10*2],ax
   14001b8d9:	inc    r10
   14001b8dc:	inc    r11
   14001b8df:	jmp    0x14001b848
   14001b8e4:	mov    QWORD PTR [rsp+0x20],rbx
   14001b8e9:	mov    QWORD PTR [rsp+0x10],rdx
   14001b8ee:	push   rbp
   14001b8ef:	push   rsi
   14001b8f0:	push   rdi
   14001b8f1:	push   r12
   14001b8f3:	push   r13
   14001b8f5:	push   r14
   14001b8f7:	push   r15
   14001b8f9:	sub    rsp,0x20
   14001b8fd:	mov    r15,r8
   14001b900:	mov    QWORD PTR [rcx],r9
   14001b903:	mov    r14,r9
   14001b906:	mov    r8,rdx
   14001b909:	xor    r9d,r9d
   14001b90c:	mov    rbx,rcx
   14001b90f:	mov    bpl,0x1
   14001b912:	movzx  eax,WORD PTR [r15]
   14001b916:	test   ax,ax
   14001b919:	je     0x14001b93e
   14001b91b:	mov    ecx,r9d
   14001b91e:	mov    edx,0xff
   14001b923:	cmp    ax,dx
   14001b926:	ja     0x14001b937
   14001b928:	inc    rcx
   14001b92b:	movzx  eax,WORD PTR [r15+rcx*2]
   14001b930:	test   ax,ax
   14001b933:	jne    0x14001b91e
   14001b935:	jmp    0x14001b93e
   14001b937:	movzx  ebp,ax
   14001b93a:	shr    bp,0x8
   14001b93e:	mov    rax,QWORD PTR [rbx+0x18]
   14001b942:	mov    rdi,r9
   14001b945:	mov    BYTE PTR [r14+rax*1],bpl
   14001b949:	mov    rax,QWORD PTR [rbx+0x18]
   14001b94d:	inc    rax
   14001b950:	mov    QWORD PTR [rbx+0x10],rax
   14001b954:	inc    rax
   14001b957:	mov    QWORD PTR [rbx+0x18],rax
   14001b95b:	or     rax,0xffffffffffffffff
   14001b95f:	inc    rax
   14001b962:	cmp    BYTE PTR [r8+rax*1],r9b
   14001b966:	jne    0x14001b95f
   14001b968:	mov    QWORD PTR [rsp+0x70],rax
   14001b96d:	cmp    WORD PTR [r15],r9w
   14001b971:	je     0x14001bad4
   14001b977:	lea    rdx,[r15+rdi*2]
   14001b97b:	mov    r11b,BYTE PTR [rdx+0x1]
   14001b97f:	mov    r13b,BYTE PTR [rdx]
   14001b982:	mov    BYTE PTR [rsp+0x60],r11b
   14001b987:	cmp    rdi,rax
   14001b98a:	jae    0x14001ba6e
   14001b990:	lea    r10,[rdi+r8*1]
   14001b994:	mov    esi,r9d
   14001b997:	mov    r9,r10
   14001b99a:	mov    r8,rdx
   14001b99d:	xor    r12d,r12d
   14001b9a0:	cmp    WORD PTR [r8],r12w
   14001b9a4:	je     0x14001b9c3
   14001b9a6:	movzx  ecx,WORD PTR [r8]
   14001b9aa:	movsx  eax,BYTE PTR [r9]
   14001b9ae:	cmp    ecx,eax
   14001b9b0:	jne    0x14001b9c3
   14001b9b2:	inc    esi
   14001b9b4:	add    r8,0x2
   14001b9b8:	inc    r9
   14001b9bb:	cmp    esi,0x81
   14001b9c1:	jl     0x14001b9a0
   14001b9c3:	cmp    esi,0x2
   14001b9c6:	jl     0x14001b9f0
   14001b9c8:	movsxd rax,esi
   14001b9cb:	mov    edx,0x3
   14001b9d0:	mov    rcx,rbx
   14001b9d3:	add    rdi,rax
   14001b9d6:	call   0x14001b6f4
   14001b9db:	mov    rax,QWORD PTR [rbx+0x18]
   14001b9df:	sub    sil,0x2
   14001b9e3:	mov    BYTE PTR [r14+rax*1],sil
   14001b9e7:	inc    QWORD PTR [rbx+0x18]
   14001b9eb:	jmp    0x14001babc
   14001b9f0:	mov    r12b,r13b
   14001b9f3:	sub    r12b,BYTE PTR [r10]
   14001b9f6:	xor    r9d,r9d
   14001b9f9:	mov    esi,r9d
   14001b9fc:	movzx  r8d,WORD PTR [rdx]
   14001ba00:	test   r8w,r8w
   14001ba04:	je     0x14001ba35
   14001ba06:	movzx  ecx,r8w
   14001ba0a:	shr    cx,0x8
   14001ba0e:	cmp    cl,bpl
   14001ba11:	jne    0x14001ba35
   14001ba13:	movsx  ecx,BYTE PTR [r10]
   14001ba17:	movzx  eax,r12b
   14001ba1b:	add    ecx,eax
   14001ba1d:	xor    ecx,r8d
   14001ba20:	test   cl,cl
   14001ba22:	jne    0x14001ba35
   14001ba24:	inc    esi
   14001ba26:	add    rdx,0x2
   14001ba2a:	inc    r10
   14001ba2d:	cmp    esi,0x81
   14001ba33:	jl     0x14001b9fc
   14001ba35:	cmp    esi,0x2
   14001ba38:	jl     0x14001ba6e
   14001ba3a:	movsxd rax,esi
   14001ba3d:	mov    edx,0x3
   14001ba42:	mov    rcx,rbx
   14001ba45:	add    rdi,rax
   14001ba48:	call   0x14001b6f4
   14001ba4d:	mov    rax,QWORD PTR [rbx+0x18]
   14001ba51:	sub    sil,0x2
   14001ba55:	or     sil,0x80
   14001ba59:	mov    BYTE PTR [r14+rax*1],sil
   14001ba5d:	inc    QWORD PTR [rbx+0x18]
   14001ba61:	mov    rax,QWORD PTR [rbx+0x18]
   14001ba65:	mov    BYTE PTR [rax+r14*1],r12b
   14001ba69:	jmp    0x14001b9e7
   14001ba6e:	mov    rcx,rbx
   14001ba71:	test   r11b,r11b
   14001ba74:	jne    0x14001ba87
   14001ba76:	xor    edx,edx
   14001ba78:	call   0x14001b6f4
   14001ba7d:	mov    rax,QWORD PTR [rbx+0x18]
   14001ba81:	mov    BYTE PTR [r14+rax*1],r13b
   14001ba85:	jmp    0x14001bab5
   14001ba87:	cmp    r11b,bpl
   14001ba8a:	jne    0x14001ba93
   14001ba8c:	mov    edx,0x1
   14001ba91:	jmp    0x14001ba78
   14001ba93:	mov    edx,0x2
   14001ba98:	call   0x14001b6f4
   14001ba9d:	mov    rax,QWORD PTR [rbx+0x18]
   14001baa1:	mov    cl,BYTE PTR [rsp+0x60]
   14001baa5:	mov    BYTE PTR [r14+rax*1],r13b
   14001baa9:	inc    QWORD PTR [rbx+0x18]
   14001baad:	mov    rax,QWORD PTR [rbx+0x18]
   14001bab1:	mov    BYTE PTR [rax+r14*1],cl
   14001bab5:	inc    QWORD PTR [rbx+0x18]
   14001bab9:	inc    rdi
   14001babc:	mov    rax,QWORD PTR [rsp+0x70]
   14001bac1:	xor    r9d,r9d
   14001bac4:	mov    r8,QWORD PTR [rsp+0x68]
   14001bac9:	cmp    WORD PTR [r15+rdi*2],r9w
   14001bace:	jne    0x14001b977
   14001bad4:	mov    rax,QWORD PTR [rbx+0x10]
   14001bad8:	mov    ecx,0x8
   14001badd:	sub    ecx,DWORD PTR [rbx+0xc]
   14001bae0:	mov    dl,BYTE PTR [rbx+0x8]
   14001bae3:	shl    dl,cl
   14001bae5:	mov    BYTE PTR [r14+rax*1],dl
   14001bae9:	mov    rax,QWORD PTR [rbx+0x18]
   14001baed:	mov    rbx,QWORD PTR [rsp+0x78]
   14001baf2:	add    rsp,0x20
   14001baf6:	pop    r15
   14001baf8:	pop    r14
   14001bafa:	pop    r13
   14001bafc:	pop    r12
   14001bafe:	pop    rdi
   14001baff:	pop    rsi
   14001bb00:	pop    rbp
   14001bb01:	ret    
   14001bb02:	int3   
   14001bb03:	int3   
   14001bb04:	xor    eax,eax
   14001bb06:	mov    WORD PTR [rcx+0x8],0x1
   14001bb0c:	mov    QWORD PTR [rcx],rax
   14001bb0f:	mov    WORD PTR [rcx+0xb],ax
   14001bb13:	mov    BYTE PTR [rcx+0xa],al
   14001bb16:	mov    rax,rcx
   14001bb19:	ret    
   14001bb1a:	int3   
   14001bb1b:	int3   
   14001bb1c:	rex push rbx
   14001bb1e:	sub    rsp,0x20
   14001bb22:	mov    rbx,rcx
   14001bb25:	mov    ecx,0x17
   14001bb2a:	call   0x1400013b0
   14001bb2f:	cmp    DWORD PTR [rbx],0xb
   14001bb32:	je     0x14001bb3a
   14001bb34:	mov    DWORD PTR [rbx],0x3
   14001bb3a:	inc    DWORD PTR [rbx+0x4]
   14001bb3d:	add    rsp,0x20
   14001bb41:	pop    rbx
   14001bb42:	ret    
   14001bb43:	int3   
   14001bb44:	mov    QWORD PTR [rsp+0x8],rbx
   14001bb49:	push   rdi
   14001bb4a:	sub    rsp,0x20
   14001bb4e:	cmp    BYTE PTR [rcx+0x9],0x0
   14001bb52:	mov    rdi,rdx
   14001bb55:	mov    rbx,rcx
   14001bb58:	jne    0x14001bb71
   14001bb5a:	call   0x14001bf78
   14001bb5f:	mov    rcx,rdi
   14001bb62:	call   0x140048390
   14001bb67:	test   al,al
   14001bb69:	jne    0x14001bb73
   14001bb6b:	mov    BYTE PTR [rbx+0xa],0x1
   14001bb6f:	jmp    0x14001bb73
   14001bb71:	xor    al,al
   14001bb73:	mov    rbx,QWORD PTR [rsp+0x30]
   14001bb78:	add    rsp,0x20
   14001bb7c:	pop    rdi
   14001bb7d:	ret    
   14001bb7e:	int3   
   14001bb7f:	int3   
   14001bb80:	mov    QWORD PTR [rsp+0x8],rbx
   14001bb85:	mov    QWORD PTR [rsp+0x10],rsi
   14001bb8a:	push   rdi
   14001bb8b:	sub    rsp,0x20
   14001bb8f:	cmp    BYTE PTR [rcx+0x9],0x0
   14001bb93:	mov    dil,r8b
   14001bb96:	mov    rsi,rdx
   14001bb99:	mov    rbx,rcx
   14001bb9c:	jne    0x14001bbb8
   14001bb9e:	call   0x14001bf78
   14001bba3:	mov    dl,dil
   14001bba6:	mov    rcx,rsi
   14001bba9:	call   0x1400483dc
   14001bbae:	test   al,al
   14001bbb0:	jne    0x14001bbba
   14001bbb2:	mov    BYTE PTR [rbx+0xa],0x1
   14001bbb6:	jmp    0x14001bbba
   14001bbb8:	xor    al,al
   14001bbba:	mov    rbx,QWORD PTR [rsp+0x30]
   14001bbbf:	mov    rsi,QWORD PTR [rsp+0x38]
   14001bbc4:	add    rsp,0x20
   14001bbc8:	pop    rdi
   14001bbc9:	ret    
   14001bbca:	int3   
   14001bbcb:	int3   
   14001bbcc:	rex push rbx
   14001bbce:	sub    rsp,0x20
   14001bbd2:	mov    rbx,rcx
   14001bbd5:	mov    ecx,0x3
   14001bbda:	call   0x140001358
   14001bbdf:	cmp    DWORD PTR [rbx],0xb
   14001bbe2:	je     0x14001bbea
   14001bbe4:	mov    DWORD PTR [rbx],0x3
   14001bbea:	inc    DWORD PTR [rbx+0x4]
   14001bbed:	add    rsp,0x20
   14001bbf1:	pop    rbx
   14001bbf2:	ret    
   14001bbf3:	int3   
   14001bbf4:	rex push rbx
   14001bbf6:	sub    rsp,0x20
   14001bbfa:	cmp    BYTE PTR [rcx+0xb],0x0
   14001bbfe:	mov    rbx,rcx
   14001bc01:	jne    0x14001bc15
   14001bc03:	mov    ecx,0xa
   14001bc08:	call   0x1400013b0
   14001bc0d:	mov    rcx,rbx
   14001bc10:	call   0x14001bf78
   14001bc15:	mov    edx,0x2
   14001bc1a:	mov    rcx,rbx
   14001bc1d:	add    rsp,0x20
   14001bc21:	pop    rbx
   14001bc22:	jmp    0x14001bc60
   14001bc27:	int3   
   14001bc28:	rex push rbx
   14001bc2a:	sub    rsp,0x20
   14001bc2e:	mov    rbx,rcx
   14001bc31:	mov    ecx,0x9
   14001bc36:	call   0x140001358
   14001bc3b:	mov    rcx,rbx
   14001bc3e:	call   0x14001bf78
   14001bc43:	inc    DWORD PTR [rbx+0x4]
   14001bc46:	mov    DWORD PTR [rbx],0x9
   14001bc4c:	add    rsp,0x20
   14001bc50:	pop    rbx
   14001bc51:	ret    
   14001bc52:	int3   
   14001bc53:	int3   
   14001bc54:	mov    r8,rdx
   14001bc57:	xor    edx,edx
   14001bc59:	jmp    0x14001bc28
   14001bc5e:	int3   
   14001bc5f:	int3   
   14001bc60:	mov    QWORD PTR [rsp+0x8],rbx
   14001bc65:	push   rdi
   14001bc66:	sub    rsp,0x20
   14001bc6a:	mov    rdi,rcx
   14001bc6d:	mov    ebx,edx
   14001bc6f:	xor    ecx,ecx
   14001bc71:	call   0x1400482c0
   14001bc76:	mov    edx,ebx
   14001bc78:	mov    rcx,rdi
   14001bc7b:	mov    rbx,QWORD PTR [rsp+0x30]
   14001bc80:	add    rsp,0x20
   14001bc84:	pop    rdi
   14001bc85:	jmp    0x14001c054
   14001bc8a:	int3   
   14001bc8b:	int3   
   14001bc8c:	mov    r11,rsp
   14001bc8f:	mov    QWORD PTR [r11+0x10],rdx
   14001bc93:	mov    QWORD PTR [r11+0x18],r8
   14001bc97:	mov    QWORD PTR [r11+0x20],r9
   14001bc9b:	push   rbx
   14001bc9c:	push   rsi
   14001bc9d:	push   rdi
   14001bc9e:	sub    rsp,0x840
   14001bca5:	mov    rax,QWORD PTR [rip+0x66234]        # 0x140081ee0
   14001bcac:	xor    rax,rsp
   14001bcaf:	mov    QWORD PTR [rsp+0x830],rax
   14001bcb7:	mov    rbx,rdx
   14001bcba:	lea    rsi,[r11+0x18]
   14001bcbe:	mov    rdi,rcx
   14001bcc1:	call   0x140006ac4
   14001bcc6:	mov    QWORD PTR [rsp+0x28],rsi
   14001bccb:	lea    rdx,[rsp+0x30]
   14001bcd0:	and    QWORD PTR [rsp+0x20],0x0
   14001bcd6:	mov    r9,rbx
   14001bcd9:	mov    r8d,0x400
   14001bcdf:	mov    rcx,QWORD PTR [rax]
   14001bce2:	call   0x14005d174
   14001bce7:	lea    rdx,[rsp+0x30]
   14001bcec:	mov    ecx,0x1
   14001bcf1:	call   0x1400013b0
   14001bcf6:	mov    rcx,rdi
   14001bcf9:	call   0x14001bf78
   14001bcfe:	mov    rcx,QWORD PTR [rsp+0x830]
   14001bd06:	xor    rcx,rsp
   14001bd09:	call   0x140055f90
   14001bd0e:	add    rsp,0x840
   14001bd15:	pop    rdi
   14001bd16:	pop    rsi
   14001bd17:	pop    rbx
   14001bd18:	ret    
   14001bd19:	int3   
   14001bd1a:	int3   
   14001bd1b:	int3   
   14001bd1c:	rex.W jmp QWORD PTR [rip+0x504a5]        # 0x14006c1c8
   14001bd23:	int3   
   14001bd24:	rex push rbx
   14001bd26:	sub    rsp,0x20
   14001bd2a:	mov    rbx,rcx
   14001bd2d:	call   0x14001bd44
   14001bd32:	mov    edx,0x8
   14001bd37:	mov    rcx,rbx
   14001bd3a:	add    rsp,0x20
   14001bd3e:	pop    rbx
   14001bd3f:	jmp    0x14001bc60
   14001bd44:	mov    r11,rsp
   14001bd47:	push   rbx
   14001bd48:	sub    rsp,0xa0
   14001bd4f:	mov    rax,QWORD PTR [rip+0x6618a]        # 0x140081ee0
   14001bd56:	xor    rax,rsp
   14001bd59:	mov    QWORD PTR [rsp+0x90],rax
   14001bd61:	and    DWORD PTR [r11-0x28],0x0
   14001bd66:	mov    rbx,rcx
   14001bd69:	and    DWORD PTR [r11-0x24],0x0
   14001bd6e:	lea    rcx,[rsp+0x20]
   14001bd73:	mov    DWORD PTR [r11-0x20],0x7
   14001bd7b:	call   0x1400479a4
   14001bd80:	inc    DWORD PTR [rbx+0x4]
   14001bd83:	mov    DWORD PTR [rbx],0x8
   14001bd89:	mov    rcx,QWORD PTR [rsp+0x90]
   14001bd91:	xor    rcx,rsp
   14001bd94:	call   0x140055f90
   14001bd99:	add    rsp,0xa0
   14001bda0:	pop    rbx
   14001bda1:	ret    
   14001bda2:	int3   
   14001bda3:	int3   
   14001bda4:	rex push rbx
   14001bda6:	sub    rsp,0x20
   14001bdaa:	mov    r8,rdx
   14001bdad:	mov    rbx,rcx
   14001bdb0:	xor    edx,edx
   14001bdb2:	call   0x14001bdcc
   14001bdb7:	mov    edx,0x6
   14001bdbc:	mov    rcx,rbx
   14001bdbf:	add    rsp,0x20
   14001bdc3:	pop    rbx
   14001bdc4:	jmp    0x14001bc60
   14001bdc9:	int3   
   14001bdca:	int3   
   14001bdcb:	int3   
   14001bdcc:	rex push rbx
   14001bdce:	sub    rsp,0x20
   14001bdd2:	mov    rbx,rcx
   14001bdd5:	mov    ecx,0x8
   14001bdda:	call   0x140001358
   14001bddf:	mov    rcx,rbx
   14001bde2:	call   0x14001bf78
   14001bde7:	inc    DWORD PTR [rbx+0x4]
   14001bdea:	mov    DWORD PTR [rbx],0x6
   14001bdf0:	add    rsp,0x20
   14001bdf4:	pop    rbx
   14001bdf5:	ret    
   14001bdf6:	int3   
   14001bdf7:	int3   
   14001bdf8:	mov    r8,rdx
   14001bdfb:	xor    edx,edx
   14001bdfd:	jmp    0x14001bdcc
   14001be02:	int3   
   14001be03:	int3   
   14001be04:	rex push rbx
   14001be06:	sub    rsp,0x20
   14001be0a:	cmp    ecx,0x5
   14001be0d:	jne    0x14001be18
   14001be0f:	lea    eax,[rcx-0x4]
   14001be12:	add    rsp,0x20
   14001be16:	pop    rbx
   14001be17:	ret    
   14001be18:	mov    ecx,0xcfc
   14001be1d:	mov    BYTE PTR [rip+0x78a47],0x1        # 0x14009486b
   14001be24:	call   0x140040118
   14001be29:	mov    rcx,rax
   14001be2c:	call   0x14001796c
   14001be31:	xor    ebx,ebx
   14001be33:	cmp    BYTE PTR [rip+0x78a33],bl        # 0x14009486c
   14001be39:	jne    0x14001be56
   14001be3b:	cmp    ebx,0x32
   14001be3e:	jae    0x14001be56
   14001be40:	mov    ecx,0x64
   14001be45:	call   QWORD PTR [rip+0x50225]        # 0x14006c070
   14001be4b:	inc    ebx
   14001be4d:	cmp    BYTE PTR [rip+0x78a18],0x0        # 0x14009486c
   14001be54:	je     0x14001be3b
   14001be56:	lea    rcx,[rip+0x78993]        # 0x1400947f0
   14001be5d:	call   0x1400401d0
   14001be62:	mov    ecx,0xff
   14001be67:	call   0x14005e50c
   14001be6c:	int3   
   14001be6d:	int3   
   14001be6e:	int3   
   14001be6f:	int3   
   14001be70:	rex push rbx
   14001be72:	sub    rsp,0x20
   14001be76:	mov    r8,rdx
   14001be79:	mov    rbx,rcx
   14001be7c:	xor    edx,edx
   14001be7e:	call   0x14001be98
   14001be83:	mov    edx,0x2
   14001be88:	mov    rcx,rbx
   14001be8b:	add    rsp,0x20
   14001be8f:	pop    rbx
   14001be90:	jmp    0x14001bc60
   14001be95:	int3   
   14001be96:	int3   
   14001be97:	int3   
   14001be98:	rex push rbx
   14001be9a:	sub    rsp,0x20
   14001be9e:	mov    rbx,rcx
   14001bea1:	mov    ecx,0xc
   14001bea6:	call   0x140001358
   14001beab:	mov    rcx,rbx
   14001beae:	call   0x14001bf78
   14001beb3:	cmp    DWORD PTR [rbx],0x1
   14001beb6:	ja     0x14001bebe
   14001beb8:	mov    DWORD PTR [rbx],0x2
   14001bebe:	inc    DWORD PTR [rbx+0x4]
   14001bec1:	add    rsp,0x20
   14001bec5:	pop    rbx
   14001bec6:	ret    
   14001bec7:	int3   
   14001bec8:	mov    r8,rdx
   14001becb:	xor    edx,edx
   14001becd:	jmp    0x14001be98
   14001bed2:	int3   
   14001bed3:	int3   
   14001bed4:	rex push rbx
   14001bed6:	sub    rsp,0x20
   14001beda:	cmp    BYTE PTR [rcx+0xb],0x0
   14001bede:	mov    rbx,rcx
   14001bee1:	jne    0x14001bef5
   14001bee3:	mov    ecx,0xb
   14001bee8:	call   0x1400013b0
   14001beed:	mov    rcx,rbx
   14001bef0:	call   0x14001bf78
   14001bef5:	mov    edx,0x2
   14001befa:	mov    rcx,rbx
   14001befd:	add    rsp,0x20
   14001bf01:	pop    rbx
   14001bf02:	jmp    0x14001bc60
   14001bf07:	int3   
   14001bf08:	mov    r8d,edx
   14001bf0b:	sub    r8d,0x1
   14001bf0f:	je     0x14001bf26
   14001bf11:	sub    r8d,0x1
   14001bf15:	je     0x14001bf3e
   14001bf17:	sub    r8d,0x1
   14001bf1b:	je     0x14001bf31
   14001bf1d:	cmp    r8d,0xfc
   14001bf24:	jne    0x14001bf2b
   14001bf26:	cmp    DWORD PTR [rcx],0x0
   14001bf29:	jne    0x14001bf2d
   14001bf2b:	mov    DWORD PTR [rcx],edx
   14001bf2d:	inc    DWORD PTR [rcx+0x4]
   14001bf30:	ret    
   14001bf31:	cmp    DWORD PTR [rcx],0xb
   14001bf34:	je     0x14001bf2d
   14001bf36:	mov    DWORD PTR [rcx],0x3
   14001bf3c:	jmp    0x14001bf2d
   14001bf3e:	cmp    DWORD PTR [rcx],0x1
   14001bf41:	ja     0x14001bf2d
   14001bf43:	mov    DWORD PTR [rcx],0x2
   14001bf49:	jmp    0x14001bf2d
   14001bf4b:	int3   
   14001bf4c:	mov    BYTE PTR [rcx+0x8],dl
   14001bf4f:	lea    rax,[rip+0xfffffffffffffeae]        # 0x14001be04
   14001bf56:	neg    dl
   14001bf58:	mov    edx,0x1
   14001bf5d:	sbb    rcx,rcx
   14001bf60:	and    rcx,rax
   14001bf63:	rex.W jmp QWORD PTR [rip+0x50116]        # 0x14006c080
   14001bf6a:	int3   
   14001bf6b:	int3   
   14001bf6c:	mov    ecx,edx
   14001bf6e:	rex.W jmp QWORD PTR [rip+0x5034b]        # 0x14006c2c0
   14001bf75:	int3   
   14001bf76:	int3   
   14001bf77:	int3   
   14001bf78:	mov    QWORD PTR [rsp+0x8],rbx
   14001bf7d:	mov    QWORD PTR [rsp+0x18],rbp
   14001bf82:	push   rsi
   14001bf83:	push   rdi
   14001bf84:	push   r14
   14001bf86:	sub    rsp,0x40
   14001bf8a:	xor    esi,esi
   14001bf8c:	mov    QWORD PTR [rsp+0x68],rsi
   14001bf91:	call   QWORD PTR [rip+0x50231]        # 0x14006c1c8
   14001bf97:	test   eax,eax
   14001bf99:	je     0x14001c031
   14001bf9f:	lea    rcx,[rsp+0x68]
   14001bfa4:	mov    QWORD PTR [rsp+0x30],rsi
   14001bfa9:	mov    DWORD PTR [rsp+0x28],esi
   14001bfad:	mov    r9d,0x400
   14001bfb3:	mov    QWORD PTR [rsp+0x20],rcx
   14001bfb8:	mov    r8d,eax
   14001bfbb:	mov    ecx,0x1100
   14001bfc0:	xor    edx,edx
   14001bfc2:	call   QWORD PTR [rip+0x500b0]        # 0x14006c078
   14001bfc8:	test   eax,eax
   14001bfca:	je     0x14001c031
   14001bfcc:	mov    rbx,QWORD PTR [rsp+0x68]
   14001bfd1:	test   rbx,rbx
   14001bfd4:	je     0x14001c036
   14001bfd6:	lea    ebp,[rsi+0xd]
   14001bfd9:	lea    r14d,[rsi+0xa]
   14001bfdd:	cmp    WORD PTR [rbx],bp
   14001bfe0:	je     0x14001bfe8
   14001bfe2:	cmp    WORD PTR [rbx],r14w
   14001bfe6:	jne    0x14001bfee
   14001bfe8:	add    rbx,0x2
   14001bfec:	jmp    0x14001bfdd
   14001bfee:	cmp    WORD PTR [rbx],si
   14001bff1:	je     0x14001c031
   14001bff3:	mov    edx,ebp
   14001bff5:	mov    rcx,rbx
   14001bff8:	call   0x1400590e0
   14001bffd:	mov    rdi,rax
   14001c000:	test   rax,rax
   14001c003:	jne    0x14001c018
   14001c005:	mov    edx,r14d
   14001c008:	mov    rcx,rbx
   14001c00b:	call   0x1400590e0
   14001c010:	mov    rdi,rax
   14001c013:	test   rax,rax
   14001c016:	je     0x14001c01f
   14001c018:	mov    WORD PTR [rdi],si
   14001c01b:	add    rdi,0x2
   14001c01f:	mov    rdx,rbx
   14001c022:	xor    ecx,ecx
   14001c024:	call   0x1400013b0
   14001c029:	mov    rbx,rdi
   14001c02c:	test   rdi,rdi
   14001c02f:	jne    0x14001bfdd
   14001c031:	mov    rbx,QWORD PTR [rsp+0x68]
   14001c036:	mov    rcx,rbx
   14001c039:	call   QWORD PTR [rip+0x502c9]        # 0x14006c308
   14001c03f:	mov    rbx,QWORD PTR [rsp+0x60]
   14001c044:	mov    rbp,QWORD PTR [rsp+0x70]
   14001c049:	add    rsp,0x40
   14001c04d:	pop    r14
   14001c04f:	pop    rdi
   14001c050:	pop    rsi
   14001c051:	ret    
   14001c052:	int3   
   14001c053:	int3   
   14001c054:	mov    QWORD PTR [rsp+0x8],rbx
   14001c059:	push   rdi
   14001c05a:	sub    rsp,0x20
   14001c05e:	mov    ebx,edx
   14001c060:	mov    rdi,rcx
   14001c063:	cmp    edx,0xff
   14001c069:	jne    0x14001c071
   14001c06b:	cmp    BYTE PTR [rcx+0x8],0x0
   14001c06f:	je     0x14001c07c
   14001c071:	test   edx,edx
   14001c073:	je     0x14001c0a0
   14001c075:	cmp    edx,0x7
   14001c078:	je     0x14001c0a0
   14001c07a:	jmp    0x14001c087
   14001c07c:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c081:	add    rsp,0x20
   14001c085:	pop    rdi
   14001c086:	ret    
   14001c087:	mov    ecx,0xcf6
   14001c08c:	call   0x140040118
   14001c091:	mov    rdx,rax
   14001c094:	lea    rcx,[rip+0x51e25]        # 0x14006dec0
   14001c09b:	call   0x14001796c
   14001c0a0:	mov    edx,ebx
   14001c0a2:	mov    rcx,rdi
   14001c0a5:	call   0x14001bf08
   14001c0aa:	lea    rdx,[rip+0x6381f]        # 0x14007f8d0
   14001c0b1:	mov    DWORD PTR [rsp+0x38],ebx
   14001c0b5:	lea    rcx,[rsp+0x38]
   14001c0ba:	call   0x140058734
   14001c0bf:	int3   
   14001c0c0:	sub    rsp,0x28
   14001c0c4:	mov    ecx,0x1f
   14001c0c9:	call   0x140001358
   14001c0ce:	mov    eax,DWORD PTR [rip+0x7878c]        # 0x140094860
   14001c0d4:	mov    ecx,0x2
   14001c0d9:	cmp    eax,0x1
   14001c0dc:	cmovbe eax,ecx
   14001c0df:	inc    DWORD PTR [rip+0x7877f]        # 0x140094864
   14001c0e5:	mov    DWORD PTR [rip+0x78775],eax        # 0x140094860
   14001c0eb:	add    rsp,0x28
   14001c0ef:	ret    
   14001c0f0:	rex push rbx
   14001c0f2:	sub    rsp,0x20
   14001c0f6:	mov    rbx,rcx
   14001c0f9:	call   0x14001c14c
   14001c0fe:	mov    edx,0x5
   14001c103:	mov    rcx,rbx
   14001c106:	add    rsp,0x20
   14001c10a:	pop    rbx
   14001c10b:	jmp    0x14001bc60
   14001c110:	mov    QWORD PTR [rsp+0x8],rbx
   14001c115:	push   rdi
   14001c116:	sub    rsp,0x20
   14001c11a:	mov    rbx,rdx
   14001c11d:	mov    rdi,rcx
   14001c120:	call   0x14001bf78
   14001c125:	mov    rdx,rbx
   14001c128:	mov    ecx,0x47
   14001c12d:	call   0x1400013b0
   14001c132:	mov    edx,0x5
   14001c137:	mov    rcx,rdi
   14001c13a:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c13f:	add    rsp,0x20
   14001c143:	pop    rdi
   14001c144:	jmp    0x14001bc60
   14001c149:	int3   
   14001c14a:	int3   
   14001c14b:	int3   
   14001c14c:	rex push rbx
   14001c14e:	sub    rsp,0x20
   14001c152:	mov    rbx,rcx
   14001c155:	mov    ecx,0xd
   14001c15a:	call   0x140001358
   14001c15f:	mov    rcx,rbx
   14001c162:	call   0x14001bf78
   14001c167:	inc    DWORD PTR [rbx+0x4]
   14001c16a:	mov    DWORD PTR [rbx],0x5
   14001c170:	add    rsp,0x20
   14001c174:	pop    rbx
   14001c175:	ret    
   14001c176:	int3   
   14001c177:	int3   
   14001c178:	mov    QWORD PTR [rsp+0x18],rbx
   14001c17d:	mov    QWORD PTR [rsp+0x20],rbp
   14001c182:	push   rdi
   14001c183:	mov    eax,0x1050
   14001c188:	call   0x140055f20
   14001c18d:	sub    rsp,rax
   14001c190:	mov    rax,QWORD PTR [rip+0x65d49]        # 0x140081ee0
   14001c197:	xor    rax,rsp
   14001c19a:	mov    QWORD PTR [rsp+0x1040],rax
   14001c1a2:	and    QWORD PTR [rsp+0x30],0x0
   14001c1a8:	mov    rdi,rdx
   14001c1ab:	mov    ebp,0x3
   14001c1b0:	mov    DWORD PTR [rsp+0x28],0x3000000
   14001c1b8:	mov    rbx,rcx
   14001c1bb:	mov    DWORD PTR [rsp+0x20],ebp
   14001c1bf:	mov    r8d,ebp
   14001c1c2:	mov    rcx,rdi
   14001c1c5:	xor    r9d,r9d
   14001c1c8:	mov    edx,0x80000000
   14001c1cd:	call   QWORD PTR [rip+0x4fefd]        # 0x14006c0d0
   14001c1d3:	mov    QWORD PTR [rbx],rax
   14001c1d6:	cmp    rax,0xffffffffffffffff
   14001c1da:	jne    0x14001c21e
   14001c1dc:	mov    r8d,0x800
   14001c1e2:	lea    rdx,[rsp+0x40]
   14001c1e7:	mov    rcx,rdi
   14001c1ea:	call   0x140031ef0
   14001c1ef:	test   al,al
   14001c1f1:	je     0x14001c21e
   14001c1f3:	and    QWORD PTR [rsp+0x30],0x0
   14001c1f9:	lea    rcx,[rsp+0x40]
   14001c1fe:	mov    DWORD PTR [rsp+0x28],0x3000000
   14001c206:	xor    r9d,r9d
   14001c209:	mov    r8d,ebp
   14001c20c:	mov    DWORD PTR [rsp+0x20],ebp
   14001c210:	mov    edx,0x80000000
   14001c215:	call   QWORD PTR [rip+0x4feb5]        # 0x14006c0d0
   14001c21b:	mov    QWORD PTR [rbx],rax
   14001c21e:	cmp    QWORD PTR [rbx],0xffffffffffffffff
   14001c222:	jne    0x14001c295
   14001c224:	and    QWORD PTR [rsp+0x30],0x0
   14001c22a:	xor    r9d,r9d
   14001c22d:	mov    DWORD PTR [rsp+0x28],0x2000000
   14001c235:	mov    r8d,ebp
   14001c238:	mov    edx,0x80000000
   14001c23d:	mov    DWORD PTR [rsp+0x20],ebp
   14001c241:	mov    rcx,rdi
   14001c244:	call   QWORD PTR [rip+0x4fe86]        # 0x14006c0d0
   14001c24a:	mov    QWORD PTR [rbx],rax
   14001c24d:	cmp    rax,0xffffffffffffffff
   14001c251:	jne    0x14001c295
   14001c253:	mov    r8d,0x800
   14001c259:	lea    rdx,[rsp+0x40]
   14001c25e:	mov    rcx,rdi
   14001c261:	call   0x140031ef0
   14001c266:	test   al,al
   14001c268:	je     0x14001c295
   14001c26a:	and    QWORD PTR [rsp+0x30],0x0
   14001c270:	lea    rcx,[rsp+0x40]
   14001c275:	mov    DWORD PTR [rsp+0x28],0x2000000
   14001c27d:	xor    r9d,r9d
   14001c280:	mov    r8d,ebp
   14001c283:	mov    DWORD PTR [rsp+0x20],ebp
   14001c287:	mov    edx,0x80000000
   14001c28c:	call   QWORD PTR [rip+0x4fe3e]        # 0x14006c0d0
   14001c292:	mov    QWORD PTR [rbx],rax
   14001c295:	and    QWORD PTR [rbx+0x8],0x0
   14001c29a:	mov    rax,rbx
   14001c29d:	mov    rcx,QWORD PTR [rsp+0x1040]
   14001c2a5:	xor    rcx,rsp
   14001c2a8:	call   0x140055f90
   14001c2ad:	lea    r11,[rsp+0x1050]
   14001c2b5:	mov    rbx,QWORD PTR [r11+0x20]
   14001c2b9:	mov    rbp,QWORD PTR [r11+0x28]
   14001c2bd:	mov    rsp,r11
   14001c2c0:	pop    rdi
   14001c2c1:	ret    
   14001c2c2:	int3   
   14001c2c3:	int3   
   14001c2c4:	rex push rbx
   14001c2c6:	mov    eax,0x1060
   14001c2cb:	call   0x140055f20
   14001c2d0:	sub    rsp,rax
   14001c2d3:	mov    rax,QWORD PTR [rip+0x65c06]        # 0x140081ee0
   14001c2da:	xor    rax,rsp
   14001c2dd:	mov    QWORD PTR [rsp+0x1050],rax
   14001c2e5:	lea    rax,[rcx+0x8]
   14001c2e9:	mov    rbx,rcx
   14001c2ec:	mov    rcx,QWORD PTR [rcx]
   14001c2ef:	lea    r9,[rsp+0x40]
   14001c2f4:	mov    QWORD PTR [rsp+0x30],rax
   14001c2f9:	lea    rdx,[rsp+0x50]
   14001c2fe:	and    DWORD PTR [rsp+0x28],0x0
   14001c303:	xor    r8d,r8d
   14001c306:	mov    DWORD PTR [rsp+0x20],0x1
   14001c30e:	call   QWORD PTR [rip+0x4fd9c]        # 0x14006c0b0
   14001c314:	cmp    QWORD PTR [rbx],0xffffffffffffffff
   14001c318:	je     0x14001c323
   14001c31a:	mov    rcx,QWORD PTR [rbx]
   14001c31d:	call   QWORD PTR [rip+0x4fd85]        # 0x14006c0a8
   14001c323:	mov    rcx,QWORD PTR [rsp+0x1050]
   14001c32b:	xor    rcx,rsp
   14001c32e:	call   0x140055f90
   14001c333:	add    rsp,0x1060
   14001c33a:	pop    rbx
   14001c33b:	ret    
   14001c33c:	rex push rbp
   14001c33e:	push   rsi
   14001c33f:	push   rdi
   14001c340:	push   r12
   14001c342:	push   r13
   14001c344:	push   r14
   14001c346:	push   r15
   14001c348:	lea    rbp,[rsp-0x3030]
   14001c350:	mov    eax,0x3130
   14001c355:	call   0x140055f20
   14001c35a:	sub    rsp,rax
   14001c35d:	mov    QWORD PTR [rsp+0x78],0xfffffffffffffffe
   14001c366:	mov    QWORD PTR [rsp+0x3188],rbx
   14001c36e:	mov    rax,QWORD PTR [rip+0x65b6b]        # 0x140081ee0
   14001c375:	xor    rax,rsp
   14001c378:	mov    QWORD PTR [rbp+0x3020],rax
   14001c37f:	mov    rdi,r8
   14001c382:	mov    r14,rdx
   14001c385:	mov    QWORD PTR [rsp+0x48],rcx
   14001c38a:	xor    ebx,ebx
   14001c38c:	lea    r15d,[rbx+0x1]
   14001c390:	cmp    BYTE PTR [rip+0x75c39],bl        # 0x140091fcf
   14001c396:	jne    0x14001c3b7
   14001c398:	lea    rcx,[rip+0x51be1]        # 0x14006df80
   14001c39f:	call   0x14001de54
   14001c3a4:	lea    rcx,[rip+0x51bfd]        # 0x14006dfa8
   14001c3ab:	call   0x14001de54
   14001c3b0:	mov    BYTE PTR [rip+0x75c18],r15b        # 0x140091fcf
   14001c3b7:	mov    QWORD PTR [rsp+0x58],rbx
   14001c3bc:	mov    QWORD PTR [rsp+0x60],rbx
   14001c3c1:	mov    QWORD PTR [rsp+0x68],rbx
   14001c3c6:	mov    QWORD PTR [rsp+0x70],rbx
   14001c3cb:	mov    edx,0x1418
   14001c3d0:	lea    rcx,[rsp+0x58]
   14001c3d5:	call   0x140001858
   14001c3da:	nop
   14001c3db:	lea    r13,[rdi+0x110c]
   14001c3e2:	mov    r8d,0x800
   14001c3e8:	mov    rdx,r13
   14001c3eb:	lea    rcx,[rbp+0x1020]
   14001c3f2:	call   0x140046158
   14001c3f7:	lea    rax,[rbp+0x1020]
   14001c3fe:	or     r12,0xffffffffffffffff
   14001c402:	inc    r12
   14001c405:	cmp    WORD PTR [rax+r12*2],bx
   14001c40a:	jne    0x14001c402
   14001c40c:	lea    rbx,[rbp+0x1020]
   14001c413:	lea    rsi,[rbp+0x2020]
   14001c41a:	mov    r8d,0x4
   14001c420:	lea    rdx,[rip+0x51bc1]        # 0x14006dfe8
   14001c427:	lea    rcx,[rbp+0x1020]
   14001c42e:	call   0x14005ecd0
   14001c433:	xor    edx,edx
   14001c435:	test   eax,eax
   14001c437:	sete   cl
   14001c43a:	mov    BYTE PTR [rsp+0x40],cl
   14001c43e:	test   cl,cl
   14001c440:	je     0x14001c482
   14001c442:	lea    rbx,[rbp+0x1028]
   14001c449:	lea    r8d,[rdx+0x4]
   14001c44d:	lea    rdx,[rip+0x51ba4]        # 0x14006dff8
   14001c454:	lea    rcx,[rbp+0x1028]
   14001c45b:	call   0x14005ecd0
   14001c460:	xor    edx,edx
   14001c462:	mov    cl,BYTE PTR [rsp+0x40]
   14001c466:	test   eax,eax
   14001c468:	jne    0x14001c482
   14001c46a:	lea    eax,[rdx+0x5c]
   14001c46d:	mov    WORD PTR [rbp+0x2020],ax
   14001c474:	lea    rsi,[rbp+0x2022]
   14001c47b:	lea    rbx,[rbp+0x102e]
   14001c482:	sub    rsi,rbx
   14001c485:	mov    r8d,0x2
   14001c48b:	movzx  eax,WORD PTR [rbx]
   14001c48e:	mov    WORD PTR [rsi+rbx*1],ax
   14001c492:	add    rbx,r8
   14001c495:	test   ax,ax
   14001c498:	jne    0x14001c48b
   14001c49a:	lea    rax,[rbp+0x2020]
   14001c4a1:	or     rsi,0xffffffffffffffff
   14001c4a5:	inc    rsi
   14001c4a8:	cmp    WORD PTR [rax+rsi*2],dx
   14001c4ac:	jne    0x14001c4a5
   14001c4ae:	mov    rbx,QWORD PTR [rsp+0x58]
   14001c4b3:	mov    rax,QWORD PTR [rsp+0x48]
   14001c4b8:	cmp    BYTE PTR [rax+0x61ab],dl
   14001c4be:	jne    0x14001c4f1
   14001c4c0:	test   cl,cl
   14001c4c2:	jne    0x14001c815
   14001c4c8:	mov    rcx,r13
   14001c4cb:	call   0x140032174
   14001c4d0:	test   al,al
   14001c4d2:	jne    0x14001c815
   14001c4d8:	lea    rcx,[rdi+0x20]
   14001c4dc:	mov    rdx,r13
   14001c4df:	call   0x14001d7f4
   14001c4e4:	xor    r13d,r13d
   14001c4e7:	test   al,al
   14001c4e9:	je     0x14001c818
   14001c4ef:	jmp    0x14001c4f4
   14001c4f1:	xor    r13d,r13d
   14001c4f4:	mov    dl,r15b
   14001c4f7:	mov    rcx,r14
   14001c4fa:	call   0x1400218f4
   14001c4ff:	cmp    BYTE PTR [rdi+0x10f1],r13b
   14001c506:	jne    0x14001c54c
   14001c508:	cmp    BYTE PTR [rdi+0x210c],r13b
   14001c50f:	jne    0x14001c54c
   14001c511:	mov    QWORD PTR [rsp+0x30],r13
   14001c516:	mov    DWORD PTR [rsp+0x28],0x80
   14001c51e:	mov    DWORD PTR [rsp+0x20],r15d
   14001c523:	xor    r9d,r9d
   14001c526:	xor    r8d,r8d
   14001c529:	mov    edx,0x40000000
   14001c52e:	mov    rcx,r14
   14001c531:	call   QWORD PTR [rip+0x4fb99]        # 0x14006c0d0
   14001c537:	cmp    rax,0xffffffffffffffff
   14001c53b:	je     0x14001c818
   14001c541:	mov    rcx,rax
   14001c544:	call   QWORD PTR [rip+0x4fb5e]        # 0x14006c0a8
   14001c54a:	jmp    0x14001c55f
   14001c54c:	xor    edx,edx
   14001c54e:	mov    rcx,r14
   14001c551:	call   QWORD PTR [rip+0x4fb69]        # 0x14006c0c0
   14001c557:	test   eax,eax
   14001c559:	je     0x14001c818
   14001c55f:	mov    eax,DWORD PTR [rdi+0x1108]
   14001c565:	mov    ecx,0x8
   14001c56a:	cmp    eax,0x3
   14001c56d:	jne    0x14001c602
   14001c573:	mov    DWORD PTR [rbx],0xa0000003
   14001c579:	lea    eax,[r12+0x6]
   14001c57e:	add    ax,si
   14001c581:	add    ax,ax
   14001c584:	mov    WORD PTR [rbx+0x4],ax
   14001c588:	and    DWORD PTR [rbx+0x6],0x0
   14001c58c:	movzx  edx,r12w
   14001c590:	add    dx,dx
   14001c593:	mov    WORD PTR [rbx+0xa],dx
   14001c597:	lea    rcx,[rbp+0x1020]
   14001c59e:	lea    rax,[rbp+0x1020]
   14001c5a5:	mov    r8,rbx
   14001c5a8:	sub    r8,rax
   14001c5ab:	mov    r9d,0x2
   14001c5b1:	movzx  eax,WORD PTR [rcx]
   14001c5b4:	mov    WORD PTR [r8+rcx*1+0x10],ax
   14001c5ba:	add    rcx,r9
   14001c5bd:	test   ax,ax
   14001c5c0:	jne    0x14001c5b1
   14001c5c2:	add    dx,r9w
   14001c5c6:	mov    WORD PTR [rbx+0xc],dx
   14001c5ca:	add    si,si
   14001c5cd:	mov    WORD PTR [rbx+0xe],si
   14001c5d1:	lea    rcx,[rbp+0x2020]
   14001c5d8:	lea    rax,[r12*2+0x12]
   14001c5e0:	lea    rdx,[rbp+0x2020]
   14001c5e7:	sub    rax,rdx
   14001c5ea:	lea    rdx,[rax+rbx*1]
   14001c5ee:	movzx  eax,WORD PTR [rcx]
   14001c5f1:	mov    WORD PTR [rdx+rcx*1],ax
   14001c5f5:	add    rcx,r9
   14001c5f8:	test   ax,ax
   14001c5fb:	jne    0x14001c5ee
   14001c5fd:	jmp    0x14001c6a4
   14001c602:	dec    eax
   14001c604:	cmp    eax,r15d
   14001c607:	ja     0x14001c818
   14001c60d:	mov    DWORD PTR [rbx],0xa000000c
   14001c613:	lea    eax,[rsi+r12*1]
   14001c617:	add    ax,cx
   14001c61a:	add    ax,ax
   14001c61d:	mov    WORD PTR [rbx+0x4],ax
   14001c621:	and    DWORD PTR [rbx+0x6],0x0
   14001c625:	movzx  edx,r12w
   14001c629:	add    dx,dx
   14001c62c:	mov    WORD PTR [rbx+0xa],dx
   14001c630:	lea    rcx,[rbp+0x1020]
   14001c637:	lea    rax,[rbp+0x1020]
   14001c63e:	mov    r8,rbx
   14001c641:	sub    r8,rax
   14001c644:	mov    r9d,0x2
   14001c64a:	movzx  eax,WORD PTR [rcx]
   14001c64d:	mov    WORD PTR [r8+rcx*1+0x14],ax
   14001c653:	add    rcx,r9
   14001c656:	test   ax,ax
   14001c659:	jne    0x14001c64a
   14001c65b:	add    dx,r9w
   14001c65f:	mov    WORD PTR [rbx+0xc],dx
   14001c663:	add    si,si
   14001c666:	mov    WORD PTR [rbx+0xe],si
   14001c66a:	lea    rcx,[rbp+0x2020]
   14001c671:	lea    rax,[r12*2+0x16]
   14001c679:	lea    rdx,[rbp+0x2020]
   14001c680:	sub    rax,rdx
   14001c683:	lea    rdx,[rax+rbx*1]
   14001c687:	movzx  eax,WORD PTR [rcx]
   14001c68a:	mov    WORD PTR [rdx+rcx*1],ax
   14001c68e:	add    rcx,r9
   14001c691:	test   ax,ax
   14001c694:	jne    0x14001c687
   14001c696:	mov    eax,r13d
   14001c699:	cmp    BYTE PTR [rsp+0x40],r13b
   14001c69e:	sete   al
   14001c6a1:	mov    DWORD PTR [rbx+0x10],eax
   14001c6a4:	mov    QWORD PTR [rsp+0x30],r13
   14001c6a9:	mov    DWORD PTR [rsp+0x28],0x2200000
   14001c6b1:	mov    DWORD PTR [rsp+0x20],0x3
   14001c6b9:	xor    r9d,r9d
   14001c6bc:	xor    r8d,r8d
   14001c6bf:	mov    edx,0xc0000000
   14001c6c4:	mov    rcx,r14
   14001c6c7:	call   QWORD PTR [rip+0x4fa03]        # 0x14006c0d0
   14001c6cd:	mov    rsi,rax
   14001c6d0:	cmp    rax,0xffffffffffffffff
   14001c6d4:	je     0x14001c818
   14001c6da:	movzx  r9d,WORD PTR [rbx+0x4]
   14001c6df:	add    r9d,0x8
   14001c6e3:	mov    QWORD PTR [rsp+0x38],r13
   14001c6e8:	lea    rax,[rsp+0x50]
   14001c6ed:	mov    QWORD PTR [rsp+0x30],rax
   14001c6f2:	mov    DWORD PTR [rsp+0x28],r13d
   14001c6f7:	mov    QWORD PTR [rsp+0x20],r13
   14001c6fc:	mov    r8,rbx
   14001c6ff:	mov    edx,0x900a4
   14001c704:	mov    rcx,rsi
   14001c707:	call   QWORD PTR [rip+0x4f983]        # 0x14006c090
   14001c70d:	test   eax,eax
   14001c70f:	jne    0x14001c788
   14001c711:	mov    rcx,rsi
   14001c714:	call   QWORD PTR [rip+0x4f98e]        # 0x14006c0a8
   14001c71a:	mov    r8,r14
   14001c71d:	xor    edx,edx
   14001c71f:	lea    ecx,[rdx+0x14]
   14001c722:	call   0x140001358
   14001c727:	call   QWORD PTR [rip+0x4fa9b]        # 0x14006c1c8
   14001c72d:	cmp    eax,0x522
   14001c732:	jne    0x14001c749
   14001c734:	and    QWORD PTR [rbp-0x20],0x0
   14001c739:	mov    DWORD PTR [rbp-0x18],0x16
   14001c740:	lea    rcx,[rbp-0x80]
   14001c744:	call   0x1400479a4
   14001c749:	lea    rcx,[rip+0x78110]        # 0x140094860
   14001c750:	call   0x14001bf78
   14001c755:	mov    edx,0x9
   14001c75a:	lea    rcx,[rip+0x780ff]        # 0x140094860
   14001c761:	call   0x14001bf08
   14001c766:	mov    rcx,r14
   14001c769:	cmp    BYTE PTR [rdi+0x10f1],r13b
   14001c770:	je     0x14001c77d
   14001c772:	call   QWORD PTR [rip+0x4f950]        # 0x14006c0c8
   14001c778:	jmp    0x14001c818
   14001c77d:	call   QWORD PTR [rip+0x4f955]        # 0x14006c0d8
   14001c783:	jmp    0x14001c818
   14001c788:	lea    rcx,[rbp-0x10]
   14001c78c:	call   0x14002071c
   14001c791:	nop
   14001c792:	lea    rcx,[rbp-0x10]
   14001c796:	call   0x1400207cc
   14001c79b:	mov    QWORD PTR [rbp-0x8],rsi
   14001c79f:	mov    rsi,QWORD PTR [rsp+0x48]
   14001c7a4:	mov    eax,DWORD PTR [rsi+0x73cc]
   14001c7aa:	lea    rcx,[rdi+0x1050]
   14001c7b1:	neg    eax
   14001c7b3:	sbb    r9,r9
   14001c7b6:	and    r9,rcx
   14001c7b9:	mov    eax,DWORD PTR [rsi+0x73c8]
   14001c7bf:	lea    rcx,[rdi+0x1048]
   14001c7c6:	neg    eax
   14001c7c8:	sbb    r8,r8
   14001c7cb:	and    r8,rcx
   14001c7ce:	mov    eax,DWORD PTR [rsi+0x73c4]
   14001c7d4:	lea    rcx,[rdi+0x1040]
   14001c7db:	neg    eax
   14001c7dd:	sbb    rdx,rdx
   14001c7e0:	and    rdx,rcx
   14001c7e3:	lea    rcx,[rbp-0x10]
   14001c7e7:	call   0x140021078
   14001c7ec:	lea    rcx,[rbp-0x10]
   14001c7f0:	call   0x1400207cc
   14001c7f5:	cmp    BYTE PTR [rsi+0x62d6],r13b
   14001c7fc:	jne    0x14001c80a
   14001c7fe:	mov    edx,DWORD PTR [rdi+0x1c]
   14001c801:	mov    rcx,r14
   14001c804:	call   0x140022740
   14001c809:	nop
   14001c80a:	lea    rcx,[rbp-0x10]
   14001c80e:	call   0x140020758
   14001c813:	jmp    0x14001c81b
   14001c815:	xor    r13d,r13d
   14001c818:	mov    r15b,r13b
   14001c81b:	test   rbx,rbx
   14001c81e:	je     0x14001c828
   14001c820:	mov    rcx,rbx
   14001c823:	call   0x14005a938
   14001c828:	mov    al,r15b
   14001c82b:	mov    rcx,QWORD PTR [rbp+0x3020]
   14001c832:	xor    rcx,rsp
   14001c835:	call   0x140055f90
   14001c83a:	mov    rbx,QWORD PTR [rsp+0x3188]
   14001c842:	add    rsp,0x3130
   14001c849:	pop    r15
   14001c84b:	pop    r14
   14001c84d:	pop    r13
   14001c84f:	pop    r12
   14001c851:	pop    rdi
   14001c852:	pop    rsi
   14001c853:	pop    rbp
   14001c854:	ret    
   14001c855:	int3   
   14001c856:	int3   
   14001c857:	int3   
   14001c858:	rex push rbp
   14001c85a:	lea    rbp,[rsp-0xea90]
   14001c862:	mov    eax,0xeb90
   14001c867:	call   0x140055f20
   14001c86c:	sub    rsp,rax
   14001c86f:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   14001c878:	mov    QWORD PTR [rsp+0xebb0],rbx
   14001c880:	mov    QWORD PTR [rsp+0xebb8],rdi
   14001c888:	mov    rax,QWORD PTR [rip+0x65651]        # 0x140081ee0
   14001c88f:	xor    rax,rsp
   14001c892:	mov    QWORD PTR [rbp+0xea80],rax
   14001c899:	mov    rdi,rdx
   14001c89c:	mov    rbx,rcx
   14001c89f:	call   0x14001dd30
   14001c8a4:	cmp    BYTE PTR [rbx+0x7fa0],0x0
   14001c8ab:	je     0x14001c8c8
   14001c8ad:	lea    rdx,[rbx+0x26]
   14001c8b1:	mov    r8,rdi
   14001c8b4:	mov    ecx,0x4d
   14001c8b9:	call   0x140001358
   14001c8be:	mov    edx,0x3
   14001c8c3:	jmp    0x14001ca71
   14001c8c8:	mov    al,BYTE PTR [rbx+0x7e41]
   14001c8ce:	sub    al,0x31
   14001c8d0:	cmp    al,0x4
   14001c8d2:	ja     0x14001ca5b
   14001c8d8:	cmp    BYTE PTR [rbx+0x7e40],0x1d
   14001c8df:	ja     0x14001ca5b
   14001c8e5:	lea    rcx,[rsp+0x50]
   14001c8ea:	call   0x140036dcc
   14001c8ef:	nop
   14001c8f0:	lea    rdx,[rsp+0x50]
   14001c8f5:	lea    rcx,[rbp+0x110]
   14001c8fc:	call   0x140049044
   14001c901:	nop
   14001c902:	xor    r8d,r8d
   14001c905:	mov    edx,0x10000
   14001c90a:	lea    rcx,[rbp+0x110]
   14001c911:	call   0x14004b824
   14001c916:	mov    edx,DWORD PTR [rbx+0x7e3c]
   14001c91c:	and    QWORD PTR [rsp+0x20],0x0
   14001c922:	and    QWORD PTR [rsp+0x28],0x0
   14001c928:	and    QWORD PTR [rsp+0x30],0x0
   14001c92e:	and    QWORD PTR [rsp+0x38],0x0
   14001c934:	lea    rcx,[rsp+0x20]
   14001c939:	call   0x140001858
   14001c93e:	nop
   14001c93f:	mov    r8d,DWORD PTR [rbx+0x7e3c]
   14001c946:	mov    rdx,QWORD PTR [rsp+0x20]
   14001c94b:	lea    rcx,[rsp+0x50]
   14001c950:	call   0x1400375e0
   14001c955:	mov    eax,DWORD PTR [rbx+0x7e34]
   14001c95b:	mov    QWORD PTR [rbp-0x20],rax
   14001c95f:	mov    BYTE PTR [rbp-0x18],0x0
   14001c963:	xor    r8d,r8d
   14001c966:	mov    rdx,rbx
   14001c969:	lea    rcx,[rsp+0x50]
   14001c96e:	call   0x140037588
   14001c973:	mov    edx,0x2
   14001c978:	lea    r8d,[rdx-0x1]
   14001c97c:	lea    rcx,[rbp+0xe0]
   14001c983:	call   0x1400241ac
   14001c988:	mov    eax,DWORD PTR [rbx+0x7e3c]
   14001c98e:	mov    QWORD PTR [rbp+0x4eb0],rax
   14001c995:	mov    BYTE PTR [rbp+0x4ec8],0x0
   14001c99c:	movzx  edx,BYTE PTR [rbx+0x7e40]
   14001c9a3:	xor    r8d,r8d
   14001c9a6:	lea    rcx,[rbp+0x110]
   14001c9ad:	call   0x14004ab9c
   14001c9b2:	lea    rcx,[rbp+0xe0]
   14001c9b9:	call   0x14002419c
   14001c9be:	cmp    DWORD PTR [rbx+0x7e44],eax
   14001c9c4:	je     0x14001c9de
   14001c9c6:	lea    rdx,[rbx+0x26]
   14001c9ca:	mov    r8,rdi
   14001c9cd:	mov    ecx,0x4d
   14001c9d2:	call   0x140001358
   14001c9d7:	mov    edx,0x3
   14001c9dc:	jmp    0x14001ca22
   14001c9de:	mov    edx,0x7
   14001c9e3:	lea    eax,[rdx+0x8]
   14001c9e6:	cmp    BYTE PTR [rip+0x755df],0x0        # 0x140091fcc
   14001c9ed:	cmovne edx,eax
   14001c9f0:	mov    r8,QWORD PTR [rsp+0x20]
   14001c9f5:	mov    rcx,rdi
   14001c9f8:	call   QWORD PTR [rip+0x4f632]        # 0x14006c030
   14001c9fe:	test   eax,eax
   14001ca00:	jne    0x14001ca2f
   14001ca02:	lea    rdx,[rbx+0x26]
   14001ca06:	mov    r8,rdi
   14001ca09:	lea    ecx,[rax+0x4f]
   14001ca0c:	call   0x140001358
   14001ca11:	lea    rcx,[rip+0x77e48]        # 0x140094860
   14001ca18:	call   0x14001bf78
   14001ca1d:	mov    edx,0x1
   14001ca22:	lea    rcx,[rip+0x77e37]        # 0x140094860
   14001ca29:	call   0x14001bf08
   14001ca2e:	nop
   14001ca2f:	cmp    QWORD PTR [rsp+0x20],0x0
   14001ca35:	je     0x14001ca42
   14001ca37:	mov    rcx,QWORD PTR [rsp+0x20]
   14001ca3c:	call   0x14005a938
   14001ca41:	nop
   14001ca42:	lea    rcx,[rbp+0x110]
   14001ca49:	call   0x1400491fc
   14001ca4e:	nop
   14001ca4f:	lea    rcx,[rsp+0x50]
   14001ca54:	call   0x140036e98
   14001ca59:	jmp    0x14001ca7d
   14001ca5b:	lea    rdx,[rbx+0x26]
   14001ca5f:	mov    r8,rdi
   14001ca62:	mov    ecx,0x4e
   14001ca67:	call   0x140001358
   14001ca6c:	mov    edx,0x1
   14001ca71:	lea    rcx,[rip+0x77de8]        # 0x140094860
   14001ca78:	call   0x14001bf08
   14001ca7d:	mov    rcx,QWORD PTR [rbp+0xea80]
   14001ca84:	xor    rcx,rsp
   14001ca87:	call   0x140055f90
   14001ca8c:	lea    r11,[rsp+0xeb90]
   14001ca94:	mov    rbx,QWORD PTR [r11+0x20]
   14001ca98:	mov    rdi,QWORD PTR [r11+0x28]
   14001ca9c:	mov    rsp,r11
   14001ca9f:	pop    rbp
   14001caa0:	ret    
   14001caa1:	int3   
   14001caa2:	int3   
   14001caa3:	int3   
   14001caa4:	rex push rbp
   14001caa6:	push   rsi
   14001caa7:	push   rdi
   14001caa8:	mov    eax,0x1060
   14001caad:	call   0x140055f20
   14001cab2:	sub    rsp,rax
   14001cab5:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   14001cabe:	mov    QWORD PTR [rsp+0x1090],rbx
   14001cac6:	mov    rax,QWORD PTR [rip+0x65413]        # 0x140081ee0
   14001cacd:	xor    rax,rsp
   14001cad0:	mov    QWORD PTR [rsp+0x1050],rax
   14001cad8:	mov    rbx,rdx
   14001cadb:	mov    rsi,rcx
   14001cade:	and    QWORD PTR [rsp+0x20],0x0
   14001cae4:	and    QWORD PTR [rsp+0x28],0x0
   14001caea:	and    QWORD PTR [rsp+0x30],0x0
   14001caf0:	and    QWORD PTR [rsp+0x38],0x0
   14001caf6:	xor    r8d,r8d
   14001caf9:	lea    rdx,[rsp+0x20]
   14001cafe:	call   0x14000e3bc
   14001cb03:	test   al,al
   14001cb05:	je     0x14001cb93
   14001cb0b:	call   0x14001dd30
   14001cb10:	mov    edi,0x7
   14001cb15:	lea    eax,[rdi+0x8]
   14001cb18:	cmp    BYTE PTR [rip+0x754ad],0x0        # 0x140091fcc
   14001cb1f:	cmovne edi,eax
   14001cb22:	mov    rbp,QWORD PTR [rsp+0x20]
   14001cb27:	mov    r8,rbp
   14001cb2a:	mov    edx,edi
   14001cb2c:	mov    rcx,rbx
   14001cb2f:	call   QWORD PTR [rip+0x4f4fb]        # 0x14006c030
   14001cb35:	test   eax,eax
   14001cb37:	jne    0x14001cb93
   14001cb39:	mov    r8d,0x800
   14001cb3f:	lea    rdx,[rsp+0x50]
   14001cb44:	mov    rcx,rbx
   14001cb47:	call   0x140031ef0
   14001cb4c:	test   al,al
   14001cb4e:	je     0x14001cb64
   14001cb50:	mov    r8,rbp
   14001cb53:	mov    edx,edi
   14001cb55:	lea    rcx,[rsp+0x50]
   14001cb5a:	call   QWORD PTR [rip+0x4f4d0]        # 0x14006c030
   14001cb60:	test   eax,eax
   14001cb62:	jne    0x14001cb93
   14001cb64:	lea    rdx,[rsi+0x26]
   14001cb68:	mov    r8,rbx
   14001cb6b:	mov    ecx,0x4f
   14001cb70:	call   0x140001358
   14001cb75:	lea    rcx,[rip+0x77ce4]        # 0x140094860
   14001cb7c:	call   0x14001bf78
   14001cb81:	mov    edx,0x1
   14001cb86:	lea    rcx,[rip+0x77cd3]        # 0x140094860
   14001cb8d:	call   0x14001bf08
   14001cb92:	nop
   14001cb93:	mov    rcx,QWORD PTR [rsp+0x20]
   14001cb98:	test   rcx,rcx
   14001cb9b:	je     0x14001cba2
   14001cb9d:	call   0x14005a938
   14001cba2:	mov    rcx,QWORD PTR [rsp+0x1050]
   14001cbaa:	xor    rcx,rsp
   14001cbad:	call   0x140055f90
   14001cbb2:	mov    rbx,QWORD PTR [rsp+0x1090]
   14001cbba:	add    rsp,0x1060
   14001cbc1:	pop    rdi
   14001cbc2:	pop    rsi
   14001cbc3:	pop    rbp
   14001cbc4:	ret    
   14001cbc5:	int3   
   14001cbc6:	int3   
   14001cbc7:	int3   
   14001cbc8:	mov    QWORD PTR [rsp+0x8],rbx
   14001cbcd:	push   rdi
   14001cbce:	sub    rsp,0x20
   14001cbd2:	mov    rdi,rcx
   14001cbd5:	mov    rbx,rdx
   14001cbd8:	mov    rcx,rdx
   14001cbdb:	call   0x140032960
   14001cbe0:	mov    rcx,rbx
   14001cbe3:	call   0x140021dec
   14001cbe8:	test   al,al
   14001cbea:	je     0x14001cc3a
   14001cbec:	mov    dl,0x1
   14001cbee:	mov    rcx,rdi
   14001cbf1:	call   0x1400218f4
   14001cbf6:	xor    r8d,r8d
   14001cbf9:	mov    rdx,rbx
   14001cbfc:	mov    rcx,rdi
   14001cbff:	call   QWORD PTR [rip+0x4f4e3]        # 0x14006c0e8
   14001cc05:	test   eax,eax
   14001cc07:	setne  bl
   14001cc0a:	test   bl,bl
   14001cc0c:	jne    0x14001cc38
   14001cc0e:	mov    rdx,rdi
   14001cc11:	mov    ecx,0x15
   14001cc16:	call   0x1400013b0
   14001cc1b:	lea    rcx,[rip+0x77c3e]        # 0x140094860
   14001cc22:	call   0x14001bf78
   14001cc27:	mov    edx,0x9
   14001cc2c:	lea    rcx,[rip+0x77c2d]        # 0x140094860
   14001cc33:	call   0x14001bf08
   14001cc38:	mov    al,bl
   14001cc3a:	mov    rbx,QWORD PTR [rsp+0x30]
   14001cc3f:	add    rsp,0x20
   14001cc43:	pop    rdi
   14001cc44:	ret    
   14001cc45:	int3   
   14001cc46:	int3   
   14001cc47:	int3   
   14001cc48:	rex push rbp
   14001cc4a:	push   rdi
   14001cc4b:	push   r14
   14001cc4d:	lea    rbp,[rsp-0x13b30]
   14001cc55:	mov    eax,0x13c30
   14001cc5a:	call   0x140055f20
   14001cc5f:	sub    rsp,rax
   14001cc62:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001cc6b:	mov    QWORD PTR [rsp+0x13c60],rbx
   14001cc73:	mov    QWORD PTR [rsp+0x13c68],rsi
   14001cc7b:	mov    rax,QWORD PTR [rip+0x6525e]        # 0x140081ee0
   14001cc82:	xor    rax,rsp
   14001cc85:	mov    QWORD PTR [rbp+0x13b20],rax
   14001cc8c:	mov    rbx,rdx
   14001cc8f:	mov    rdi,rcx
   14001cc92:	xor    r14d,r14d
   14001cc95:	cmp    BYTE PTR [rcx+0x7fa0],r14b
   14001cc9c:	je     0x14001ccb9
   14001cc9e:	lea    rdx,[rcx+0x26]
   14001cca2:	mov    r8,rbx
   14001cca5:	mov    ecx,0x50
   14001ccaa:	call   0x140001358
   14001ccaf:	mov    edx,0x3
   14001ccb4:	jmp    0x14001cfaf
   14001ccb9:	mov    al,BYTE PTR [rcx+0x7e69]
   14001ccbf:	sub    al,0x31
   14001ccc1:	cmp    al,0x4
   14001ccc3:	ja     0x14001cf99
   14001ccc9:	cmp    BYTE PTR [rcx+0x7e68],0x1d
   14001ccd0:	ja     0x14001cf99
   14001ccd6:	cmp    WORD PTR [rdx],r14w
   14001ccda:	je     0x14001cd1c
   14001ccdc:	cmp    WORD PTR [rdx+0x2],r14w
   14001cce1:	jne    0x14001cd1c
   14001cce3:	mov    eax,DWORD PTR [rip+0x511f7]        # 0x14006dee0
   14001cce9:	mov    DWORD PTR [rbp+0x11b10],eax
   14001ccef:	movzx  eax,WORD PTR [rip+0x511ee]        # 0x14006dee4
   14001ccf6:	mov    WORD PTR [rbp+0x11b14],ax
   14001ccfd:	mov    rcx,rdx
   14001cd00:	lea    rdx,[rbp+0x11b14]
   14001cd07:	sub    rdx,rbx
   14001cd0a:	movzx  eax,WORD PTR [rcx]
   14001cd0d:	mov    WORD PTR [rdx+rcx*1],ax
   14001cd11:	lea    rcx,[rcx+0x2]
   14001cd15:	test   ax,ax
   14001cd18:	jne    0x14001cd0a
   14001cd1a:	jmp    0x14001cd39
   14001cd1c:	mov    rcx,rdx
   14001cd1f:	lea    rdx,[rbp+0x11b10]
   14001cd26:	sub    rdx,rbx
   14001cd29:	movzx  eax,WORD PTR [rcx]
   14001cd2c:	mov    WORD PTR [rdx+rcx*1],ax
   14001cd30:	lea    rcx,[rcx+0x2]
   14001cd34:	test   ax,ax
   14001cd37:	jne    0x14001cd29
   14001cd39:	lea    rcx,[rdi+0x7e72]
   14001cd40:	or     rdx,0xffffffffffffffff
   14001cd44:	mov    rax,rdx
   14001cd47:	inc    rax
   14001cd4a:	cmp    BYTE PTR [rcx+rax*1],r14b
   14001cd4e:	jne    0x14001cd47
   14001cd50:	lea    r8,[rbp+0x11b10]
   14001cd57:	inc    rdx
   14001cd5a:	cmp    WORD PTR [r8+rdx*2],r14w
   14001cd5f:	jne    0x14001cd57
   14001cd61:	add    rax,rdx
   14001cd64:	mov    esi,0x802
   14001cd69:	cmp    rax,rsi
   14001cd6c:	jae    0x14001cf90
   14001cd72:	cmp    BYTE PTR [rcx],0x3a
   14001cd75:	jne    0x14001cf90
   14001cd7b:	lea    r8d,[rsi-0x2]
   14001cd7f:	lea    rdx,[rbp+0x12b20]
   14001cd86:	call   0x1400489f0
   14001cd8b:	lea    rdx,[rbp+0x12b22]
   14001cd92:	lea    rcx,[rbp+0x12b22]
   14001cd99:	call   0x140030fe4
   14001cd9e:	mov    r8d,esi
   14001cda1:	lea    rdx,[rbp+0x12b20]
   14001cda8:	lea    rcx,[rbp+0x11b10]
   14001cdaf:	call   0x140046120
   14001cdb4:	mov    QWORD PTR [rbp+0x1100],r14
   14001cdbb:	mov    QWORD PTR [rbp+0x1108],r14
   14001cdc2:	mov    QWORD PTR [rbp+0x1110],r14
   14001cdc9:	xor    r8d,r8d
   14001cdcc:	lea    rdx,[rbp+0xf0]
   14001cdd3:	mov    rcx,rbx
   14001cdd6:	call   0x140023280
   14001cddb:	mov    sil,al
   14001cdde:	mov    edx,DWORD PTR [rbp+0x10f8]
   14001cde4:	test   dl,0x1
   14001cde7:	je     0x14001cdf4
   14001cde9:	and    edx,0xfffffffe
   14001cdec:	mov    rcx,rbx
   14001cdef:	call   0x140022740
   14001cdf4:	lea    rcx,[rbp+0x1140]
   14001cdfb:	call   0x14002071c
   14001ce00:	nop
   14001ce01:	mov    r8d,0x11
   14001ce07:	lea    rdx,[rbp+0x11b10]
   14001ce0e:	lea    rcx,[rbp+0x1140]
   14001ce15:	call   0x140021248
   14001ce1a:	test   al,al
   14001ce1c:	je     0x14001cf14
   14001ce22:	lea    rcx,[rsp+0x30]
   14001ce27:	call   0x140036dcc
   14001ce2c:	nop
   14001ce2d:	lea    rdx,[rsp+0x30]
   14001ce32:	lea    rcx,[rbp+0x31a0]
   14001ce39:	call   0x140049044
   14001ce3e:	nop
   14001ce3f:	xor    r8d,r8d
   14001ce42:	mov    edx,0x10000
   14001ce47:	lea    rcx,[rbp+0x31a0]
   14001ce4e:	call   0x14004b824
   14001ce53:	mov    eax,DWORD PTR [rdi+0x7e5c]
   14001ce59:	mov    QWORD PTR [rbp-0x40],rax
   14001ce5d:	mov    BYTE PTR [rbp-0x38],r14b
   14001ce61:	lea    r8,[rbp+0x1140]
   14001ce68:	mov    rdx,rdi
   14001ce6b:	lea    rcx,[rsp+0x30]
   14001ce70:	call   0x140037588
   14001ce75:	mov    edx,0x2
   14001ce7a:	lea    r8d,[rdx-0x1]
   14001ce7e:	lea    rcx,[rbp+0xc0]
   14001ce85:	call   0x1400241ac
   14001ce8a:	mov    eax,DWORD PTR [rdi+0x7e64]
   14001ce90:	mov    QWORD PTR [rbp+0x7f40],rax
   14001ce97:	mov    BYTE PTR [rbp+0x7f58],r14b
   14001ce9e:	movzx  edx,BYTE PTR [rdi+0x7e68]
   14001cea5:	xor    r8d,r8d
   14001cea8:	lea    rcx,[rbp+0x31a0]
   14001ceaf:	call   0x14004ab9c
   14001ceb4:	lea    rcx,[rbp+0xc0]
   14001cebb:	call   0x14002419c
   14001cec0:	cmp    DWORD PTR [rdi+0x7e6c],eax
   14001cec6:	je     0x14001cef0
   14001cec8:	lea    rdx,[rdi+0x26]
   14001cecc:	lea    r8,[rbp+0x11b10]
   14001ced3:	mov    ecx,0x50
   14001ced8:	call   0x140001358
   14001cedd:	mov    edx,0x3
   14001cee2:	lea    rcx,[rip+0x77977]        # 0x140094860
   14001cee9:	call   0x14001bf08
   14001ceee:	jmp    0x14001cefd
   14001cef0:	lea    rcx,[rbp+0x1140]
   14001cef7:	call   0x1400207cc
   14001cefc:	nop
   14001cefd:	lea    rcx,[rbp+0x31a0]
   14001cf04:	call   0x1400491fc
   14001cf09:	nop
   14001cf0a:	lea    rcx,[rsp+0x30]
   14001cf0f:	call   0x140036e98
   14001cf14:	lea    rcx,[rbp+0x2170]
   14001cf1b:	call   0x14002071c
   14001cf20:	nop
   14001cf21:	test   sil,sil
   14001cf24:	je     0x14001cf61
   14001cf26:	mov    r8d,0x5
   14001cf2c:	mov    rdx,rbx
   14001cf2f:	lea    rcx,[rbp+0x2170]
   14001cf36:	call   0x140020c80
   14001cf3b:	test   al,al
   14001cf3d:	je     0x14001cf61
   14001cf3f:	lea    r9,[rbp+0x1128]
   14001cf46:	lea    r8,[rbp+0x1120]
   14001cf4d:	lea    rdx,[rbp+0x1118]
   14001cf54:	mov    rcx,QWORD PTR [rbp+0x2178]
   14001cf5b:	call   QWORD PTR [rip+0x4f13f]        # 0x14006c0a0
   14001cf61:	mov    edx,DWORD PTR [rbp+0x10f8]
   14001cf67:	test   dl,0x1
   14001cf6a:	je     0x14001cf75
   14001cf6c:	mov    rcx,rbx
   14001cf6f:	call   0x140022740
   14001cf74:	nop
   14001cf75:	lea    rcx,[rbp+0x2170]
   14001cf7c:	call   0x140020758
   14001cf81:	nop
   14001cf82:	lea    rcx,[rbp+0x1140]
   14001cf89:	call   0x140020758
   14001cf8e:	jmp    0x14001cfbb
   14001cf90:	lea    rdx,[rdi+0x26]
   14001cf94:	jmp    0x14001cca2
   14001cf99:	lea    rdx,[rcx+0x26]
   14001cf9d:	mov    r8,rbx
   14001cfa0:	mov    ecx,0x51
   14001cfa5:	call   0x140001358
   14001cfaa:	mov    edx,0x1
   14001cfaf:	lea    rcx,[rip+0x778aa]        # 0x140094860
   14001cfb6:	call   0x14001bf08
   14001cfbb:	mov    rcx,QWORD PTR [rbp+0x13b20]
   14001cfc2:	xor    rcx,rsp
   14001cfc5:	call   0x140055f90
   14001cfca:	lea    r11,[rsp+0x13c30]
   14001cfd2:	mov    rbx,QWORD PTR [r11+0x30]
   14001cfd6:	mov    rsi,QWORD PTR [r11+0x38]
   14001cfda:	mov    rsp,r11
   14001cfdd:	pop    r14
   14001cfdf:	pop    rdi
   14001cfe0:	pop    rbp
   14001cfe1:	ret    
   14001cfe2:	int3   
   14001cfe3:	int3   
   14001cfe4:	rex push rbp
   14001cfe6:	push   rdi
   14001cfe7:	push   r14
   14001cfe9:	lea    rbp,[rsp-0x5000]
   14001cff1:	mov    eax,0x5100
   14001cff6:	call   0x140055f20
   14001cffb:	sub    rsp,rax
   14001cffe:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001d007:	mov    QWORD PTR [rsp+0x5130],rbx
   14001d00f:	mov    QWORD PTR [rsp+0x5138],rsi
   14001d017:	mov    rax,QWORD PTR [rip+0x64ec2]        # 0x140081ee0
   14001d01e:	xor    rax,rsp
   14001d021:	mov    QWORD PTR [rbp+0x4ff0],rax
   14001d028:	mov    sil,r8b
   14001d02b:	mov    rbx,rdx
   14001d02e:	mov    rdi,rcx
   14001d031:	xor    r14d,r14d
   14001d034:	cmp    WORD PTR [rdx],r14w
   14001d038:	je     0x14001d06a
   14001d03a:	cmp    WORD PTR [rdx+0x2],r14w
   14001d03f:	jne    0x14001d06a
   14001d041:	mov    eax,DWORD PTR [rip+0x50ea1]        # 0x14006dee8
   14001d047:	mov    DWORD PTR [rbp+0x2fe0],eax
   14001d04d:	movzx  eax,WORD PTR [rip+0x50e98]        # 0x14006deec
   14001d054:	mov    WORD PTR [rbp+0x2fe4],ax
   14001d05b:	mov    r8d,0x800
   14001d061:	lea    rcx,[rbp+0x2fe4]
   14001d068:	jmp    0x14001d077
   14001d06a:	mov    r8d,0x802
   14001d070:	lea    rcx,[rbp+0x2fe0]
   14001d077:	call   0x140046158
   14001d07c:	mov    r8d,0x800
   14001d082:	lea    rdx,[rbp+0x3ff0]
   14001d089:	mov    rcx,rdi
   14001d08c:	call   0x14001d734
   14001d091:	cmp    WORD PTR [rbp+0x3ff0],0x3a
   14001d099:	je     0x14001d0c2
   14001d09b:	lea    rdx,[rdi+0x26]
   14001d09f:	mov    r8,rbx
   14001d0a2:	mov    ecx,0x50
   14001d0a7:	call   0x140001358
   14001d0ac:	mov    edx,0x3
   14001d0b1:	lea    rcx,[rip+0x777a8]        # 0x140094860
   14001d0b8:	call   0x14001bf08
   14001d0bd:	jmp    0x14001d1f0
   14001d0c2:	test   sil,sil
   14001d0c5:	je     0x14001d0d9
   14001d0c7:	xor    r8d,r8d
   14001d0ca:	xor    edx,edx
   14001d0cc:	mov    rcx,rdi
   14001d0cf:	call   0x14000e3bc
   14001d0d4:	jmp    0x14001d1f0
   14001d0d9:	mov    r8d,0x802
   14001d0df:	lea    rdx,[rbp+0x3ff0]
   14001d0e6:	lea    rcx,[rbp+0x2fe0]
   14001d0ed:	call   0x140046120
   14001d0f2:	mov    QWORD PTR [rbp+0xf40],r14
   14001d0f9:	mov    QWORD PTR [rbp+0xf48],r14
   14001d100:	mov    QWORD PTR [rbp+0xf50],r14
   14001d107:	xor    r8d,r8d
   14001d10a:	lea    rdx,[rsp+0x30]
   14001d10f:	mov    rcx,rbx
   14001d112:	call   0x140023280
   14001d117:	mov    sil,al
   14001d11a:	mov    edx,DWORD PTR [rbp+0xf38]
   14001d120:	test   dl,0x1
   14001d123:	je     0x14001d130
   14001d125:	and    edx,0xfffffffe
   14001d128:	mov    rcx,rbx
   14001d12b:	call   0x140022740
   14001d130:	lea    rcx,[rbp+0xf80]
   14001d137:	call   0x14002071c
   14001d13c:	nop
   14001d13d:	mov    r8d,0x11
   14001d143:	lea    rdx,[rbp+0x2fe0]
   14001d14a:	lea    rcx,[rbp+0xf80]
   14001d151:	call   0x140021248
   14001d156:	test   al,al
   14001d158:	je     0x14001d17b
   14001d15a:	lea    r8,[rbp+0xf80]
   14001d161:	xor    edx,edx
   14001d163:	mov    rcx,rdi
   14001d166:	call   0x14000e3bc
   14001d16b:	test   al,al
   14001d16d:	je     0x14001d17b
   14001d16f:	lea    rcx,[rbp+0xf80]
   14001d176:	call   0x1400207cc
   14001d17b:	lea    rcx,[rbp+0x1fb0]
   14001d182:	call   0x14002071c
   14001d187:	nop
   14001d188:	test   sil,sil
   14001d18b:	je     0x14001d1c8
   14001d18d:	mov    r8d,0x5
   14001d193:	mov    rdx,rbx
   14001d196:	lea    rcx,[rbp+0x1fb0]
   14001d19d:	call   0x140020c80
   14001d1a2:	test   al,al
   14001d1a4:	je     0x14001d1c8
   14001d1a6:	lea    r9,[rbp+0xf68]
   14001d1ad:	lea    r8,[rbp+0xf60]
   14001d1b4:	lea    rdx,[rbp+0xf58]
   14001d1bb:	mov    rcx,QWORD PTR [rbp+0x1fb8]
   14001d1c2:	call   QWORD PTR [rip+0x4eed8]        # 0x14006c0a0
   14001d1c8:	mov    edx,DWORD PTR [rbp+0xf38]
   14001d1ce:	mov    rcx,rbx
   14001d1d1:	call   0x140022740
   14001d1d6:	nop
   14001d1d7:	lea    rcx,[rbp+0x1fb0]
   14001d1de:	call   0x140020758
   14001d1e3:	nop
   14001d1e4:	lea    rcx,[rbp+0xf80]
   14001d1eb:	call   0x140020758
   14001d1f0:	mov    rcx,QWORD PTR [rbp+0x4ff0]
   14001d1f7:	xor    rcx,rsp
   14001d1fa:	call   0x140055f90
   14001d1ff:	lea    r11,[rsp+0x5100]
   14001d207:	mov    rbx,QWORD PTR [r11+0x30]
   14001d20b:	mov    rsi,QWORD PTR [r11+0x38]
   14001d20f:	mov    rsp,r11
   14001d212:	pop    r14
   14001d214:	pop    rdi
   14001d215:	pop    rbp
   14001d216:	ret    
   14001d217:	int3   
   14001d218:	cmp    DWORD PTR [r8+0x7f88],0x3
   14001d220:	jne    0x14001d231
   14001d222:	add    r8,0x34f0
   14001d229:	mov    rdx,r9
   14001d22c:	jmp    0x14001c33c
   14001d231:	xor    al,al
   14001d233:	ret    
   14001d234:	jmp    0x14001d23c
   14001d239:	int3   
   14001d23a:	int3   
   14001d23b:	int3   
   14001d23c:	rex push rbp
   14001d23e:	push   rdi
   14001d23f:	push   r12
   14001d241:	push   r14
   14001d243:	push   r15
   14001d245:	lea    rbp,[rsp-0x11d0]
   14001d24d:	mov    eax,0x12d0
   14001d252:	call   0x140055f20
   14001d257:	sub    rsp,rax
   14001d25a:	mov    QWORD PTR [rsp+0x68],0xfffffffffffffffe
   14001d263:	mov    QWORD PTR [rsp+0x1310],rbx
   14001d26b:	mov    QWORD PTR [rsp+0x1318],rsi
   14001d273:	mov    rax,QWORD PTR [rip+0x64c66]        # 0x140081ee0
   14001d27a:	xor    rax,rsp
   14001d27d:	mov    QWORD PTR [rbp+0x11c0],rax
   14001d284:	mov    rsi,rdx
   14001d287:	mov    r14,rcx
   14001d28a:	xor    r12d,r12d
   14001d28d:	cmp    BYTE PTR [rip+0x74d3a],r12b        # 0x140091fce
   14001d294:	jne    0x14001d2a9
   14001d296:	lea    rcx,[rip+0x50cbb]        # 0x14006df58
   14001d29d:	call   0x14001de54
   14001d2a2:	mov    BYTE PTR [rip+0x74d25],0x1        # 0x140091fce
   14001d2a9:	lea    rdx,[rsp+0x70]
   14001d2ae:	mov    rcx,r14
   14001d2b1:	call   QWORD PTR [rip+0x4ee29]        # 0x14006c0e0
   14001d2b7:	cmp    rax,0xffffffffffffffff
   14001d2bb:	je     0x14001d4a8
   14001d2c1:	mov    rcx,rax
   14001d2c4:	call   QWORD PTR [rip+0x4edce]        # 0x14006c098
   14001d2ca:	test   DWORD PTR [rsp+0x70],0x400
   14001d2d2:	je     0x14001d4a8
   14001d2d8:	cmp    DWORD PTR [rbp-0x6c],0xa0000003
   14001d2df:	je     0x14001d2ee
   14001d2e1:	cmp    DWORD PTR [rbp-0x6c],0xa000000c
   14001d2e8:	jne    0x14001d4a8
   14001d2ee:	mov    QWORD PTR [rsp+0x30],r12
   14001d2f3:	mov    DWORD PTR [rsp+0x28],0x2200000
   14001d2fb:	mov    DWORD PTR [rsp+0x20],0x3
   14001d303:	xor    r9d,r9d
   14001d306:	lea    edx,[r9+0x8]
   14001d30a:	lea    r8d,[r9+0x1]
   14001d30e:	mov    rcx,r14
   14001d311:	call   QWORD PTR [rip+0x4edb9]        # 0x14006c0d0
   14001d317:	mov    r15,rax
   14001d31a:	cmp    rax,0xffffffffffffffff
   14001d31e:	jne    0x14001d334
   14001d320:	mov    rdx,r14
   14001d323:	lea    rcx,[rip+0x77536]        # 0x140094860
   14001d32a:	call   0x14001bdf8
   14001d32f:	jmp    0x14001d4a8
   14001d334:	mov    QWORD PTR [rsp+0x48],r12
   14001d339:	mov    QWORD PTR [rsp+0x50],r12
   14001d33e:	mov    QWORD PTR [rsp+0x58],r12
   14001d343:	mov    QWORD PTR [rsp+0x60],r12
   14001d348:	mov    ebx,0x4000
   14001d34d:	mov    edx,ebx
   14001d34f:	lea    rcx,[rsp+0x48]
   14001d354:	call   0x140001858
   14001d359:	nop
   14001d35a:	mov    QWORD PTR [rsp+0x38],r12
   14001d35f:	lea    rax,[rsp+0x40]
   14001d364:	mov    QWORD PTR [rsp+0x30],rax
   14001d369:	mov    DWORD PTR [rsp+0x28],ebx
   14001d36d:	mov    rdi,QWORD PTR [rsp+0x48]
   14001d372:	mov    QWORD PTR [rsp+0x20],rdi
   14001d377:	xor    r9d,r9d
   14001d37a:	xor    r8d,r8d
   14001d37d:	mov    edx,0x900a8
   14001d382:	mov    rcx,r15
   14001d385:	call   QWORD PTR [rip+0x4ed05]        # 0x14006c090
   14001d38b:	mov    ebx,eax
   14001d38d:	mov    rcx,r15
   14001d390:	call   QWORD PTR [rip+0x4ed12]        # 0x14006c0a8
   14001d396:	test   ebx,ebx
   14001d398:	jne    0x14001d3b8
   14001d39a:	mov    rdx,r14
   14001d39d:	lea    rcx,[rip+0x774bc]        # 0x140094860
   14001d3a4:	call   0x14001bec8
   14001d3a9:	nop
   14001d3aa:	test   rdi,rdi
   14001d3ad:	je     0x14001d4a8
   14001d3b3:	jmp    0x14001d4a0
   14001d3b8:	mov    r14d,0x800
   14001d3be:	mov    r15d,0x1000
   14001d3c4:	cmp    DWORD PTR [rdi],0xa0000003
   14001d3ca:	jne    0x14001d41d
   14001d3cc:	movzx  edx,WORD PTR [rdi+0x8]
   14001d3d0:	shr    edx,1
   14001d3d2:	movzx  ecx,WORD PTR [rdi+0xa]
   14001d3d6:	shr    ecx,1
   14001d3d8:	add    rdx,0x8
   14001d3dc:	lea    rdx,[rdi+rdx*2]
   14001d3e0:	cmp    ecx,r14d
   14001d3e3:	jae    0x14001d4a0
   14001d3e9:	mov    ebx,ecx
   14001d3eb:	mov    r8d,ecx
   14001d3ee:	lea    rcx,[rbp+0x1c0]
   14001d3f5:	call   0x14005e00c
   14001d3fa:	add    rbx,rbx
   14001d3fd:	cmp    rbx,r15
   14001d400:	jae    0x14001d417
   14001d402:	mov    WORD PTR [rbp+rbx*1+0x1c0],r12w
   14001d40b:	mov    DWORD PTR [rsi+0x1108],0x3
   14001d415:	jmp    0x14001d41d
   14001d417:	call   0x1400560e8
   14001d41c:	int3   
   14001d41d:	cmp    DWORD PTR [rdi],0xa000000c
   14001d423:	jne    0x14001d472
   14001d425:	movzx  edx,WORD PTR [rdi+0x8]
   14001d429:	shr    edx,1
   14001d42b:	movzx  ecx,WORD PTR [rdi+0xa]
   14001d42f:	shr    ecx,1
   14001d431:	add    rdx,0xa
   14001d435:	lea    rdx,[rdi+rdx*2]
   14001d439:	cmp    ecx,r14d
   14001d43c:	jae    0x14001d4a0
   14001d43e:	mov    ebx,ecx
   14001d440:	mov    r8d,ecx
   14001d443:	lea    rcx,[rbp+0x1c0]
   14001d44a:	call   0x14005e00c
   14001d44f:	add    rbx,rbx
   14001d452:	cmp    rbx,r15
   14001d455:	jae    0x14001d46c
   14001d457:	mov    WORD PTR [rbp+rbx*1+0x1c0],r12w
   14001d460:	mov    DWORD PTR [rsi+0x1108],0x2
   14001d46a:	jmp    0x14001d472
   14001d46c:	call   0x1400560e8
   14001d471:	int3   
   14001d472:	cmp    DWORD PTR [rsi+0x1108],r12d
   14001d479:	je     0x14001d4a0
   14001d47b:	lea    rcx,[rsi+0x110c]
   14001d482:	mov    r8,r14
   14001d485:	lea    rdx,[rbp+0x1c0]
   14001d48c:	call   0x140046158
   14001d491:	mov    eax,DWORD PTR [rsp+0x70]
   14001d495:	shr    eax,0x4
   14001d498:	and    al,0x1
   14001d49a:	mov    BYTE PTR [rsi+0x210c],al
   14001d4a0:	mov    rcx,rdi
   14001d4a3:	call   0x14005a938
   14001d4a8:	mov    rcx,QWORD PTR [rbp+0x11c0]
   14001d4af:	xor    rcx,rsp
   14001d4b2:	call   0x140055f90
   14001d4b7:	lea    r11,[rsp+0x12d0]
   14001d4bf:	mov    rbx,QWORD PTR [r11+0x40]
   14001d4c3:	mov    rsi,QWORD PTR [r11+0x48]
   14001d4c7:	mov    rsp,r11
   14001d4ca:	pop    r15
   14001d4cc:	pop    r14
   14001d4ce:	pop    r12
   14001d4d0:	pop    rdi
   14001d4d1:	pop    rbp
   14001d4d2:	ret    
   14001d4d3:	int3   
   14001d4d4:	mov    QWORD PTR [rsp+0x18],rbx
   14001d4d9:	push   rbp
   14001d4da:	push   rsi
   14001d4db:	push   rdi
   14001d4dc:	push   r12
   14001d4de:	push   r13
   14001d4e0:	push   r14
   14001d4e2:	push   r15
   14001d4e4:	lea    rbp,[rsp-0x1f70]
   14001d4ec:	mov    eax,0x2070
   14001d4f1:	call   0x140055f20
   14001d4f6:	sub    rsp,rax
   14001d4f9:	mov    rax,QWORD PTR [rip+0x649e0]        # 0x140081ee0
   14001d500:	xor    rax,rsp
   14001d503:	mov    QWORD PTR [rbp+0x1f60],rax
   14001d50a:	mov    rsi,rdx
   14001d50d:	mov    QWORD PTR [rsp+0x50],rdx
   14001d512:	mov    r14,rcx
   14001d515:	xor    edx,edx
   14001d517:	mov    rcx,rsi
   14001d51a:	mov    r8d,0x250
   14001d520:	call   0x140058f40
   14001d525:	cmp    QWORD PTR [r14],0xffffffffffffffff
   14001d529:	je     0x14001d706
   14001d52f:	lea    r15,[r14+0x8]
   14001d533:	xor    r13d,r13d
   14001d536:	mov    rcx,QWORD PTR [r14]
   14001d539:	lea    r9,[rsp+0x40]
   14001d53e:	mov    QWORD PTR [rsp+0x30],r15
   14001d543:	lea    rdx,[rsp+0x60]
   14001d548:	mov    DWORD PTR [rsp+0x28],0x1
   14001d550:	mov    r8d,0x14
   14001d556:	mov    DWORD PTR [rsp+0x20],r13d
   14001d55b:	call   QWORD PTR [rip+0x4eb4f]        # 0x14006c0b0
   14001d561:	test   eax,eax
   14001d563:	je     0x14001d706
   14001d569:	cmp    DWORD PTR [rsp+0x40],r13d
   14001d56e:	jbe    0x14001d706
   14001d574:	mov    eax,DWORD PTR [rsp+0x70]
   14001d578:	test   eax,eax
   14001d57a:	je     0x14001d5cf
   14001d57c:	cmp    eax,0xfea
   14001d581:	jae    0x14001d706
   14001d587:	mov    rcx,QWORD PTR [r14]
   14001d58a:	lea    r9,[rsp+0x40]
   14001d58f:	mov    QWORD PTR [rsp+0x30],r15
   14001d594:	lea    rdx,[rsp+0x74]
   14001d599:	mov    DWORD PTR [rsp+0x28],0x1
   14001d5a1:	mov    r8d,eax
   14001d5a4:	mov    DWORD PTR [rsp+0x20],r13d
   14001d5a9:	call   QWORD PTR [rip+0x4eb01]        # 0x14006c0b0
   14001d5af:	test   eax,eax
   14001d5b1:	je     0x14001d706
   14001d5b7:	mov    eax,DWORD PTR [rsp+0x40]
   14001d5bb:	mov    WORD PTR [rsp+rax*1+0x74],r13w
   14001d5c1:	mov    eax,DWORD PTR [rsp+0x70]
   14001d5c5:	cmp    DWORD PTR [rsp+0x40],eax
   14001d5c9:	jne    0x14001d706
   14001d5cf:	cmp    DWORD PTR [rsp+0x68],r13d
   14001d5d4:	ja     0x14001d5e1
   14001d5d6:	cmp    DWORD PTR [rsp+0x6c],r13d
   14001d5db:	jle    0x14001d6b6
   14001d5e1:	mov    rcx,QWORD PTR [r14]
   14001d5e4:	lea    rax,[rsp+0x44]
   14001d5e9:	mov    QWORD PTR [rsp+0x28],r15
   14001d5ee:	lea    r9,[rsp+0x48]
   14001d5f3:	mov    r8d,0x7fffffff
   14001d5f9:	mov    QWORD PTR [rsp+0x20],rax
   14001d5fe:	or     edx,0xffffffff
   14001d601:	call   QWORD PTR [rip+0x4eab1]        # 0x14006c0b8
   14001d607:	test   eax,eax
   14001d609:	jne    0x14001d6b2
   14001d60f:	mov    ecx,DWORD PTR [rsp+0x68]
   14001d613:	movsxd rax,DWORD PTR [rsp+0x6c]
   14001d618:	cmp    DWORD PTR [rsp+0x48],ecx
   14001d61c:	jne    0x14001d628
   14001d61e:	cmp    DWORD PTR [rsp+0x44],eax
   14001d622:	je     0x14001d6b2
   14001d628:	mov    rdi,rax
   14001d62b:	mov    r12d,r13d
   14001d62e:	shl    rdi,0x20
   14001d632:	add    rdi,rcx
   14001d635:	test   rdi,rdi
   14001d638:	jle    0x14001d68c
   14001d63a:	mov    esi,0x1000
   14001d63f:	cmp    r12d,0x3e8
   14001d646:	jge    0x14001d687
   14001d648:	mov    rcx,QWORD PTR [r14]
   14001d64b:	lea    r9,[rsp+0x4c]
   14001d650:	mov    QWORD PTR [rsp+0x30],r15
   14001d655:	lea    rdx,[rbp+0xf60]
   14001d65c:	cmp    rdi,rsi
   14001d65f:	mov    DWORD PTR [rsp+0x28],0x1
   14001d667:	mov    ebx,edi
   14001d669:	mov    DWORD PTR [rsp+0x20],r13d
   14001d66e:	cmova  ebx,esi
   14001d671:	mov    r8d,ebx
   14001d674:	call   QWORD PTR [rip+0x4ea36]        # 0x14006c0b0
   14001d67a:	mov    eax,ebx
   14001d67c:	inc    r12d
   14001d67f:	sub    rdi,rax
   14001d682:	test   rdi,rdi
   14001d685:	jg     0x14001d63f
   14001d687:	mov    rsi,QWORD PTR [rsp+0x50]
   14001d68c:	mov    rcx,QWORD PTR [r14]
   14001d68f:	lea    rax,[rsp+0x44]
   14001d694:	mov    QWORD PTR [rsp+0x28],r15
   14001d699:	lea    r9,[rsp+0x48]
   14001d69e:	mov    r8d,0x7fffffff
   14001d6a4:	mov    QWORD PTR [rsp+0x20],rax
   14001d6a9:	or     edx,0xffffffff
   14001d6ac:	call   QWORD PTR [rip+0x4ea06]        # 0x14006c0b8
   14001d6b2:	mov    eax,DWORD PTR [rsp+0x70]
   14001d6b6:	test   eax,eax
   14001d6b8:	je     0x14001d536
   14001d6be:	cmp    DWORD PTR [rsp+0x60],0x4
   14001d6c3:	jne    0x14001d536
   14001d6c9:	lea    rcx,[rsi+0x2c]
   14001d6cd:	mov    r8d,0x104
   14001d6d3:	lea    rdx,[rsp+0x74]
   14001d6d8:	call   0x140046158
   14001d6dd:	mov    edx,0x3a
   14001d6e2:	lea    rcx,[rsi+0x2e]
   14001d6e6:	call   0x1400590e0
   14001d6eb:	test   rax,rax
   14001d6ee:	je     0x14001d6f4
   14001d6f0:	mov    WORD PTR [rax],r13w
   14001d6f4:	mov    ecx,DWORD PTR [rsp+0x68]
   14001d6f8:	mov    al,0x1
   14001d6fa:	mov    DWORD PTR [rsi+0x20],ecx
   14001d6fd:	mov    ecx,DWORD PTR [rsp+0x6c]
   14001d701:	mov    DWORD PTR [rsi+0x1c],ecx
   14001d704:	jmp    0x14001d708
   14001d706:	xor    al,al
   14001d708:	mov    rcx,QWORD PTR [rbp+0x1f60]
   14001d70f:	xor    rcx,rsp
   14001d712:	call   0x140055f90
   14001d717:	mov    rbx,QWORD PTR [rsp+0x20c0]
   14001d71f:	add    rsp,0x2070
   14001d726:	pop    r15
   14001d728:	pop    r14
   14001d72a:	pop    r13
   14001d72c:	pop    r12
   14001d72e:	pop    rdi
   14001d72f:	pop    rsi
   14001d730:	pop    rbp
   14001d731:	ret    
   14001d732:	int3   
   14001d733:	int3   
   14001d734:	rex push rbx
   14001d736:	push   rsi
   14001d737:	push   rdi
   14001d738:	mov    eax,0x2030
   14001d73d:	call   0x140055f20
   14001d742:	sub    rsp,rax
   14001d745:	mov    rax,QWORD PTR [rip+0x64794]        # 0x140081ee0
   14001d74c:	xor    rax,rsp
   14001d74f:	mov    QWORD PTR [rsp+0x2020],rax
   14001d757:	cmp    DWORD PTR [rcx+0x7f88],0x2
   14001d75e:	mov    rsi,r8
   14001d761:	mov    r9,QWORD PTR [rcx+0x6868]
   14001d768:	mov    rdi,rdx
   14001d76b:	mov    rax,QWORD PTR [rcx+0x6870]
   14001d772:	jne    0x14001d7ae
   14001d774:	lea    rbx,[r8-0x1]
   14001d778:	shr    rax,1
   14001d77b:	cmp    rax,rbx
   14001d77e:	mov    rcx,r9
   14001d781:	cmovb  rbx,rax
   14001d785:	mov    r8,rbx
   14001d788:	call   0x140048ab4
   14001d78d:	xor    eax,eax
   14001d78f:	mov    WORD PTR [rdi+rbx*2],ax
   14001d793:	mov    rcx,QWORD PTR [rsp+0x2020]
   14001d79b:	xor    rcx,rsp
   14001d79e:	call   0x140055f90
   14001d7a3:	add    rsp,0x2030
   14001d7aa:	pop    rdi
   14001d7ab:	pop    rsi
   14001d7ac:	pop    rbx
   14001d7ad:	ret    
   14001d7ae:	mov    ebx,0x1fff
   14001d7b3:	lea    rcx,[rsp+0x20]
   14001d7b8:	cmp    rax,rbx
   14001d7bb:	mov    rdx,r9
   14001d7be:	cmovb  rbx,rax
   14001d7c2:	mov    r8,rbx
   14001d7c5:	call   0x140059180
   14001d7ca:	cmp    rbx,0x2000
   14001d7d1:	jae    0x14001d7eb
   14001d7d3:	xor    eax,eax
   14001d7d5:	lea    rcx,[rsp+0x20]
   14001d7da:	mov    r8,rsi
   14001d7dd:	mov    BYTE PTR [rsp+rbx*1+0x20],al
   14001d7e1:	mov    rdx,rdi
   14001d7e4:	call   0x140048b04
   14001d7e9:	jmp    0x14001d793
   14001d7eb:	call   0x1400560e8
   14001d7f0:	int3   
   14001d7f1:	int3   
   14001d7f2:	int3   
   14001d7f3:	int3   
   14001d7f4:	mov    rax,rsp
   14001d7f7:	mov    QWORD PTR [rax+0x8],rbx
   14001d7fb:	mov    QWORD PTR [rax+0x10],rbp
   14001d7ff:	mov    QWORD PTR [rax+0x18],rsi
   14001d803:	mov    QWORD PTR [rax+0x20],rdi
   14001d807:	push   r14
   14001d809:	sub    rsp,0x20
   14001d80d:	mov    r14,rdx
   14001d810:	mov    rdi,rcx
   14001d813:	call   0x1400321bc
   14001d818:	xor    ebx,ebx
   14001d81a:	test   al,al
   14001d81c:	je     0x14001d825
   14001d81e:	xor    al,al
   14001d820:	jmp    0x14001d909
   14001d825:	mov    ebp,ebx
   14001d827:	cmp    WORD PTR [rdi],bx
   14001d82a:	je     0x14001d8aa
   14001d82c:	add    rdi,0x2
   14001d830:	movzx  ecx,WORD PTR [rdi-0x2]
   14001d834:	call   0x140032274
   14001d839:	test   al,al
   14001d83b:	je     0x14001d8a0
   14001d83d:	cmp    WORD PTR [rdi],bx
   14001d840:	je     0x14001d8a0
   14001d842:	movzx  ecx,WORD PTR [rdi]
   14001d845:	call   0x140032274
   14001d84a:	test   al,al
   14001d84c:	jne    0x14001d8a0
   14001d84e:	cmp    WORD PTR [rdi],0x2e
   14001d852:	jne    0x14001d86c
   14001d854:	movzx  ecx,WORD PTR [rdi+0x2]
   14001d858:	call   0x140032274
   14001d85d:	test   al,al
   14001d85f:	jne    0x14001d867
   14001d861:	cmp    WORD PTR [rdi+0x2],bx
   14001d865:	jne    0x14001d86c
   14001d867:	mov    sil,0x1
   14001d86a:	jmp    0x14001d86f
   14001d86c:	mov    sil,bl
   14001d86f:	cmp    WORD PTR [rdi],0x2e
   14001d873:	jne    0x14001d893
   14001d875:	cmp    WORD PTR [rdi+0x2],0x2e
   14001d87a:	jne    0x14001d893
   14001d87c:	movzx  ecx,WORD PTR [rdi+0x4]
   14001d880:	call   0x140032274
   14001d885:	test   al,al
   14001d887:	jne    0x14001d88f
   14001d889:	cmp    WORD PTR [rdi+0x4],bx
   14001d88d:	jne    0x14001d893
   14001d88f:	mov    al,0x1
   14001d891:	jmp    0x14001d895
   14001d893:	mov    al,bl
   14001d895:	test   sil,sil
   14001d898:	jne    0x14001d8a0
   14001d89a:	test   al,al
   14001d89c:	jne    0x14001d8a0
   14001d89e:	inc    ebp
   14001d8a0:	add    rdi,0x2
   14001d8a4:	cmp    WORD PTR [rdi-0x2],bx
   14001d8a8:	jne    0x14001d830
   14001d8aa:	mov    rcx,r14
   14001d8ad:	call   0x1400321bc
   14001d8b2:	test   al,al
   14001d8b4:	jne    0x14001d81e
   14001d8ba:	mov    esi,ebx
   14001d8bc:	cmp    WORD PTR [r14],bx
   14001d8c0:	je     0x14001d904
   14001d8c2:	lea    rdi,[r14+0x4]
   14001d8c6:	cmp    WORD PTR [rdi-0x4],0x2e
   14001d8cb:	jne    0x14001d8f8
   14001d8cd:	cmp    WORD PTR [rdi-0x2],0x2e
   14001d8d2:	jne    0x14001d8f8
   14001d8d4:	movzx  ecx,WORD PTR [rdi]
   14001d8d7:	call   0x140032274
   14001d8dc:	test   al,al
   14001d8de:	jne    0x14001d8e5
   14001d8e0:	cmp    WORD PTR [rdi],bx
   14001d8e3:	jne    0x14001d8f8
   14001d8e5:	test   esi,esi
   14001d8e7:	je     0x14001d8f6
   14001d8e9:	movzx  ecx,WORD PTR [rdi-0x6]
   14001d8ed:	call   0x140032274
   14001d8f2:	test   al,al
   14001d8f4:	je     0x14001d8f8
   14001d8f6:	dec    ebp
   14001d8f8:	add    rdi,0x2
   14001d8fc:	inc    esi
   14001d8fe:	cmp    WORD PTR [rdi-0x4],bx
   14001d902:	jne    0x14001d8c6
   14001d904:	test   ebp,ebp
   14001d906:	setns  al
   14001d909:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d90e:	mov    rbp,QWORD PTR [rsp+0x38]
   14001d913:	mov    rsi,QWORD PTR [rsp+0x40]
   14001d918:	mov    rdi,QWORD PTR [rsp+0x48]
   14001d91d:	add    rsp,0x20
   14001d921:	pop    r14
   14001d923:	ret    
   14001d924:	mov    QWORD PTR [rsp+0x18],rbx
   14001d929:	mov    QWORD PTR [rsp+0x20],rsi
   14001d92e:	push   rdi
   14001d92f:	mov    eax,0x3050
   14001d934:	call   0x140055f20
   14001d939:	sub    rsp,rax
   14001d93c:	mov    rax,QWORD PTR [rip+0x6459d]        # 0x140081ee0
   14001d943:	xor    rax,rsp
   14001d946:	mov    QWORD PTR [rsp+0x3040],rax
   14001d94e:	mov    rbx,rdx
   14001d951:	mov    rdi,rcx
   14001d954:	call   0x14001dd30
   14001d959:	cmp    BYTE PTR [rip+0x7466c],0x0        # 0x140091fcc
   14001d960:	lea    r8,[rsp+0x1040]
   14001d968:	mov    esi,0x7
   14001d96d:	mov    r9d,0x2000
   14001d973:	mov    rcx,rbx
   14001d976:	lea    eax,[rsi+0x8]
   14001d979:	cmovne esi,eax
   14001d97c:	lea    rax,[rsp+0x30]
   14001d981:	mov    edx,esi
   14001d983:	mov    QWORD PTR [rsp+0x20],rax
   14001d988:	call   QWORD PTR [rip+0x4e69a]        # 0x14006c028
   14001d98e:	test   eax,eax
   14001d990:	jne    0x14001da0e
   14001d992:	mov    r8d,0x800
   14001d998:	lea    rdx,[rsp+0x40]
   14001d99d:	mov    rcx,rbx
   14001d9a0:	call   0x140031ef0
   14001d9a5:	test   al,al
   14001d9a7:	je     0x14001d9d2
   14001d9a9:	lea    rax,[rsp+0x30]
   14001d9ae:	mov    r9d,0x2000
   14001d9b4:	lea    r8,[rsp+0x1040]
   14001d9bc:	mov    QWORD PTR [rsp+0x20],rax
   14001d9c1:	mov    edx,esi
   14001d9c3:	lea    rcx,[rsp+0x40]
   14001d9c8:	call   QWORD PTR [rip+0x4e65a]        # 0x14006c028
   14001d9ce:	test   eax,eax
   14001d9d0:	jne    0x14001da0e
   14001d9d2:	lea    rdx,[rdi+0x26]
   14001d9d6:	mov    r8,rbx
   14001d9d9:	mov    ecx,0x4c
   14001d9de:	call   0x140001358
   14001d9e3:	lea    rcx,[rip+0x76e76]        # 0x140094860
   14001d9ea:	call   0x14001bf78
   14001d9ef:	lea    rcx,[rip+0x504fa]        # 0x14006def0
   14001d9f6:	call   0x14001796c
   14001d9fb:	mov    edx,0x1
   14001da00:	lea    rcx,[rip+0x76e59]        # 0x140094860
   14001da07:	call   0x14001bf08
   14001da0c:	jmp    0x14001da6f
   14001da0e:	lea    rcx,[rsp+0x1040]
   14001da16:	call   QWORD PTR [rip+0x4e61c]        # 0x14006c038
   14001da1c:	lea    rcx,[rdi+0x5848]
   14001da23:	xor    edx,edx
   14001da25:	movsxd rbx,eax
   14001da28:	call   0x140024480
   14001da2d:	lea    rcx,[rdi+0x68b8]
   14001da34:	mov    BYTE PTR [rdi+0x694a],0x1
   14001da3b:	mov    edx,0x2
   14001da40:	call   0x14002422c
   14001da45:	lea    rax,[rip+0x504b4]        # 0x14006df00
   14001da4c:	mov    DWORD PTR [rsp+0x28],0x7
   14001da54:	mov    r8,rbx
   14001da57:	mov    QWORD PTR [rsp+0x20],rax
   14001da5c:	xor    r9d,r9d
   14001da5f:	lea    rdx,[rsp+0x1040]
   14001da67:	mov    rcx,rdi
   14001da6a:	call   0x140007ce8
   14001da6f:	mov    rcx,QWORD PTR [rsp+0x3040]
   14001da77:	xor    rcx,rsp
   14001da7a:	call   0x140055f90
   14001da7f:	lea    r11,[rsp+0x3050]
   14001da87:	mov    rbx,QWORD PTR [r11+0x20]
   14001da8b:	mov    rsi,QWORD PTR [r11+0x28]
   14001da8f:	mov    rsp,r11
   14001da92:	pop    rdi
   14001da93:	ret    
   14001da94:	mov    QWORD PTR [rsp+0x8],rbx
   14001da99:	mov    QWORD PTR [rsp+0x10],rsi
   14001da9e:	push   rdi
   14001da9f:	sub    rsp,0x20
   14001daa3:	cmp    BYTE PTR [rcx+0x62d4],0x0
   14001daaa:	mov    rdi,r8
   14001daad:	mov    rsi,rdx
   14001dab0:	mov    rbx,rcx
   14001dab3:	je     0x14001daba
   14001dab5:	call   0x14001dae0
   14001daba:	cmp    BYTE PTR [rbx+0x61a8],0x0
   14001dac1:	je     0x14001dace
   14001dac3:	mov    rdx,rdi
   14001dac6:	mov    rcx,rsi
   14001dac9:	call   0x14001d924
   14001dace:	mov    rbx,QWORD PTR [rsp+0x30]
   14001dad3:	mov    rsi,QWORD PTR [rsp+0x38]
   14001dad8:	add    rsp,0x20
   14001dadc:	pop    rdi
   14001dadd:	ret    
   14001dade:	int3   
   14001dadf:	int3   
   14001dae0:	rex push rbp
   14001dae2:	push   rsi
   14001dae3:	push   rdi
   14001dae4:	push   r14
   14001dae6:	push   r15
   14001dae8:	lea    rbp,[rsp-0x41e0]
   14001daf0:	mov    eax,0x42e0
   14001daf5:	call   0x140055f20
   14001dafa:	sub    rsp,rax
   14001dafd:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   14001db06:	mov    QWORD PTR [rsp+0x4328],rbx
   14001db0e:	mov    rax,QWORD PTR [rip+0x643cb]        # 0x140081ee0
   14001db15:	xor    rax,rsp
   14001db18:	mov    QWORD PTR [rbp+0x41d0],rax
   14001db1f:	mov    rsi,r8
   14001db22:	mov    rdi,rdx
   14001db25:	mov    r14,rcx
   14001db28:	mov    rdx,r8
   14001db2b:	lea    rcx,[rsp+0x30]
   14001db30:	call   0x14001c178
   14001db35:	nop
   14001db36:	lea    rdx,[rsp+0x50]
   14001db3b:	lea    rcx,[rsp+0x30]
   14001db40:	call   0x14001d4d4
   14001db45:	xor    r15d,r15d
   14001db48:	jmp    0x14001dcf6
   14001db4d:	cmp    WORD PTR [rsi],r15w
   14001db51:	je     0x14001db83
   14001db53:	cmp    WORD PTR [rsi+0x2],r15w
   14001db58:	jne    0x14001db83
   14001db5a:	mov    eax,DWORD PTR [rip+0x50370]        # 0x14006ded0
   14001db60:	mov    DWORD PTR [rbp+0x11d0],eax
   14001db66:	movzx  eax,WORD PTR [rip+0x50367]        # 0x14006ded4
   14001db6d:	mov    WORD PTR [rbp+0x11d4],ax
   14001db74:	mov    r8d,0x7fe
   14001db7a:	lea    rcx,[rbp+0x11d4]
   14001db81:	jmp    0x14001db90
   14001db83:	mov    r8d,0x800
   14001db89:	lea    rcx,[rbp+0x11d0]
   14001db90:	mov    rdx,rsi
   14001db93:	call   0x140046158
   14001db98:	mov    r8d,0x800
   14001db9e:	lea    rdx,[rsp+0x7c]
   14001dba3:	lea    rcx,[rbp+0x11d0]
   14001dbaa:	call   0x140046120
   14001dbaf:	lea    rcx,[rbp+0x1a0]
   14001dbb6:	call   0x14002071c
   14001dbbb:	nop
   14001dbbc:	mov    r8d,0x4
   14001dbc2:	lea    rdx,[rbp+0x11d0]
   14001dbc9:	lea    rcx,[rbp+0x1a0]
   14001dbd0:	call   0x140020c80
   14001dbd5:	test   al,al
   14001dbd7:	je     0x14001dcdb
   14001dbdd:	lea    rax,[rsp+0x7c]
   14001dbe2:	or     rbx,0xffffffffffffffff
   14001dbe6:	inc    rbx
   14001dbe9:	cmp    WORD PTR [rax+rbx*2],r15w
   14001dbee:	jne    0x14001dbe6
   14001dbf0:	cmp    DWORD PTR [rdi+0x7f88],0x2
   14001dbf7:	jne    0x14001dc1f
   14001dbf9:	lea    rdx,[rbx+rbx*1]
   14001dbfd:	lea    rcx,[rdi+0x5848]
   14001dc04:	call   0x140024480
   14001dc09:	mov    r8,rbx
   14001dc0c:	mov    rdx,QWORD PTR [rdi+0x6868]
   14001dc13:	lea    rcx,[rsp+0x7c]
   14001dc18:	call   0x140048cfc
   14001dc1d:	jmp    0x14001dc6f
   14001dc1f:	mov    r8d,0x2000
   14001dc25:	lea    rdx,[rbp+0x21d0]
   14001dc2c:	lea    rcx,[rsp+0x7c]
   14001dc31:	call   0x140048d2c
   14001dc36:	lea    rax,[rbp+0x21d0]
   14001dc3d:	or     rbx,0xffffffffffffffff
   14001dc41:	inc    rbx
   14001dc44:	cmp    BYTE PTR [rax+rbx*1],r15b
   14001dc48:	jne    0x14001dc41
   14001dc4a:	lea    rcx,[rdi+0x5848]
   14001dc51:	mov    rdx,rbx
   14001dc54:	call   0x140024480
   14001dc59:	mov    r8,rbx
   14001dc5c:	lea    rdx,[rbp+0x21d0]
   14001dc63:	mov    rcx,QWORD PTR [rdi+0x6868]
   14001dc6a:	call   0x140059180
   14001dc6f:	cmp    DWORD PTR [rsp+0x70],r15d
   14001dc74:	jne    0x14001dc7f
   14001dc76:	cmp    DWORD PTR [rsp+0x6c],r15d
   14001dc7b:	mov    bl,0x1
   14001dc7d:	je     0x14001dc82
   14001dc7f:	mov    bl,r15b
   14001dc82:	mov    BYTE PTR [rdi+0x694a],0x1
   14001dc89:	cmp    DWORD PTR [rdi+0x7f88],0x3
   14001dc90:	jne    0x14001dc9b
   14001dc92:	mov    edx,DWORD PTR [r14+0x6144]
   14001dc99:	jmp    0x14001dca0
   14001dc9b:	mov    edx,0x2
   14001dca0:	lea    rcx,[rdi+0x68b8]
   14001dca7:	call   0x14002422c
   14001dcac:	lea    r9,[rbp+0x1a0]
   14001dcb3:	test   bl,bl
   14001dcb5:	cmovne r9,r15
   14001dcb9:	mov    DWORD PTR [rsp+0x28],0x7
   14001dcc1:	lea    rax,[rip+0x50210]        # 0x14006ded8
   14001dcc8:	mov    QWORD PTR [rsp+0x20],rax
   14001dccd:	xor    r8d,r8d
   14001dcd0:	xor    edx,edx
   14001dcd2:	mov    rcx,rdi
   14001dcd5:	call   0x140007ce8
   14001dcda:	nop
   14001dcdb:	lea    rcx,[rbp+0x1a0]
   14001dce2:	call   0x140020758
   14001dce7:	lea    rdx,[rsp+0x50]
   14001dcec:	lea    rcx,[rsp+0x30]
   14001dcf1:	call   0x14001d4d4
   14001dcf6:	test   al,al
   14001dcf8:	jne    0x14001db4d
   14001dcfe:	lea    rcx,[rsp+0x30]
   14001dd03:	call   0x14001c2c4
   14001dd08:	mov    rcx,QWORD PTR [rbp+0x41d0]
   14001dd0f:	xor    rcx,rsp
   14001dd12:	call   0x140055f90
   14001dd17:	mov    rbx,QWORD PTR [rsp+0x4328]
   14001dd1f:	add    rsp,0x42e0
   14001dd26:	pop    r15
   14001dd28:	pop    r14
   14001dd2a:	pop    rdi
   14001dd2b:	pop    rsi
   14001dd2c:	pop    rbp
   14001dd2d:	ret    
   14001dd2e:	int3   
   14001dd2f:	int3   
   14001dd30:	rex push rbx
   14001dd32:	sub    rsp,0x20
   14001dd36:	cmp    BYTE PTR [rip+0x74290],0x0        # 0x140091fcd
   14001dd3d:	jne    0x14001dd74
   14001dd3f:	lea    rcx,[rip+0x501c2]        # 0x14006df08
   14001dd46:	call   0x14001de54
   14001dd4b:	movzx  ecx,BYTE PTR [rip+0x7427a]        # 0x140091fcc
   14001dd52:	test   al,al
   14001dd54:	mov    ebx,0x1
   14001dd59:	cmovne ecx,ebx
   14001dd5c:	mov    BYTE PTR [rip+0x7426a],cl        # 0x140091fcc
   14001dd62:	lea    rcx,[rip+0x501c7]        # 0x14006df30
   14001dd69:	call   0x14001de54
   14001dd6e:	mov    BYTE PTR [rip+0x74259],bl        # 0x140091fcd
   14001dd74:	add    rsp,0x20
   14001dd78:	pop    rbx
   14001dd79:	ret    
   14001dd7a:	int3   
   14001dd7b:	int3   
   14001dd7c:	sub    rsp,0x28
   14001dd80:	cmp    BYTE PTR [rcx+0x62f9],0x0
   14001dd87:	mov    r10,rdx
   14001dd8a:	jne    0x14001ddc6
   14001dd8c:	movzx  r9d,WORD PTR [rdx+0x5840]
   14001dd94:	sub    r9d,0x104
   14001dd9b:	je     0x14001ddb2
   14001dd9d:	cmp    r9d,0x1
   14001dda1:	jne    0x14001ddc6
   14001dda3:	mov    rdx,r8
   14001dda6:	mov    rcx,r10
   14001dda9:	add    rsp,0x28
   14001ddad:	jmp    0x14001cc48
   14001ddb2:	cmp    BYTE PTR [rcx+0x61a8],0x0
   14001ddb9:	je     0x14001ddc6
   14001ddbb:	mov    rdx,r8
   14001ddbe:	mov    rcx,r10
   14001ddc1:	call   0x14001c858
   14001ddc6:	add    rsp,0x28
   14001ddca:	ret    
   14001ddcb:	int3   
   14001ddcc:	mov    QWORD PTR [rsp+0x8],rbx
   14001ddd1:	mov    QWORD PTR [rsp+0x10],rsi
   14001ddd6:	push   rdi
   14001ddd7:	sub    rsp,0x20
   14001dddb:	cmp    BYTE PTR [rcx+0x62f9],0x0
   14001dde2:	mov    rsi,r8
   14001dde5:	mov    rbx,rdx
   14001dde8:	mov    rdi,rcx
   14001ddeb:	jne    0x14001de18
   14001dded:	cmp    BYTE PTR [rcx+0x61a8],0x0
   14001ddf4:	je     0x14001de18
   14001ddf6:	lea    rcx,[rdx+0x5868]
   14001ddfd:	lea    rdx,[rip+0x50204]        # 0x14006e008
   14001de04:	call   0x14005d4e8
   14001de09:	test   eax,eax
   14001de0b:	jne    0x14001de18
   14001de0d:	mov    rdx,rsi
   14001de10:	mov    rcx,rbx
   14001de13:	call   0x14001caa4
   14001de18:	lea    rcx,[rbx+0x5868]
   14001de1f:	lea    rdx,[rip+0x501ea]        # 0x14006e010
   14001de26:	call   0x14005d4e8
   14001de2b:	test   eax,eax
   14001de2d:	jne    0x14001de41
   14001de2f:	mov    r8b,BYTE PTR [rdi+0x62f9]
   14001de36:	mov    rdx,rsi
   14001de39:	mov    rcx,rbx
   14001de3c:	call   0x14001cfe4
   14001de41:	mov    rbx,QWORD PTR [rsp+0x30]
   14001de46:	mov    rsi,QWORD PTR [rsp+0x38]
   14001de4b:	add    rsp,0x20
   14001de4f:	pop    rdi
   14001de50:	ret    
   14001de51:	int3   
   14001de52:	int3   
   14001de53:	int3   
   14001de54:	mov    QWORD PTR [rsp+0x10],rbx
   14001de59:	mov    QWORD PTR [rsp+0x18],rsi
   14001de5e:	push   rdi
   14001de5f:	sub    rsp,0x50
   14001de63:	mov    rax,QWORD PTR [rip+0x64076]        # 0x140081ee0
   14001de6a:	xor    rax,rsp
   14001de6d:	mov    QWORD PTR [rsp+0x48],rax
   14001de72:	mov    rdi,rcx
   14001de75:	xor    ebx,ebx
   14001de77:	call   QWORD PTR [rip+0x4e20b]        # 0x14006c088
   14001de7d:	mov    rcx,rax
   14001de80:	lea    r8,[rsp+0x30]
   14001de85:	lea    edx,[rbx+0x20]
   14001de88:	call   QWORD PTR [rip+0x4e1ba]        # 0x14006c048
   14001de8e:	test   eax,eax
   14001de90:	je     0x14001def1
   14001de92:	lea    esi,[rbx+0x1]
   14001de95:	mov    DWORD PTR [rsp+0x44],0x2
   14001de9d:	lea    r8,[rsp+0x3c]
   14001dea2:	mov    DWORD PTR [rsp+0x38],esi
   14001dea6:	mov    rdx,rdi
   14001dea9:	xor    ecx,ecx
   14001deab:	call   QWORD PTR [rip+0x4e16f]        # 0x14006c020
   14001deb1:	test   eax,eax
   14001deb3:	je     0x14001dee6
   14001deb5:	mov    rcx,QWORD PTR [rsp+0x30]
   14001deba:	lea    r8,[rsp+0x38]
   14001debf:	mov    QWORD PTR [rsp+0x28],rbx
   14001dec4:	xor    r9d,r9d
   14001dec7:	xor    edx,edx
   14001dec9:	mov    QWORD PTR [rsp+0x20],rbx
   14001dece:	call   QWORD PTR [rip+0x4e16c]        # 0x14006c040
   14001ded4:	test   eax,eax
   14001ded6:	je     0x14001dee6
   14001ded8:	call   QWORD PTR [rip+0x4e2ea]        # 0x14006c1c8
   14001dede:	test   eax,eax
   14001dee0:	movzx  ebx,bl
   14001dee3:	cmove  ebx,esi
   14001dee6:	mov    rcx,QWORD PTR [rsp+0x30]
   14001deeb:	call   QWORD PTR [rip+0x4e1b7]        # 0x14006c0a8
   14001def1:	mov    al,bl
   14001def3:	mov    rcx,QWORD PTR [rsp+0x48]
   14001def8:	xor    rcx,rsp
   14001defb:	call   0x140055f90
   14001df00:	mov    rbx,QWORD PTR [rsp+0x68]
   14001df05:	mov    rsi,QWORD PTR [rsp+0x70]
   14001df0a:	add    rsp,0x50
   14001df0e:	pop    rdi
   14001df0f:	ret    
   14001df10:	mov    r11,rsp
   14001df13:	sub    rsp,0xa8
   14001df1a:	mov    rax,QWORD PTR [rip+0x63fbf]        # 0x140081ee0
   14001df21:	xor    rax,rsp
   14001df24:	mov    QWORD PTR [rsp+0x90],rax
   14001df2c:	and    DWORD PTR [r11-0x24],0x0
   14001df31:	mov    DWORD PTR [r11-0x20],ecx
   14001df35:	lea    rcx,[rsp+0x20]
   14001df3a:	mov    QWORD PTR [rsp+0x20],rdx
   14001df3f:	mov    QWORD PTR [r11-0x80],r8
   14001df43:	mov    QWORD PTR [r11-0x78],r9
   14001df47:	mov    DWORD PTR [r11-0x28],0x3
   14001df4f:	call   0x1400479a4
   14001df54:	mov    rcx,QWORD PTR [rsp+0x90]
   14001df5c:	xor    rcx,rsp
   14001df5f:	call   0x140055f90
   14001df64:	add    rsp,0xa8
   14001df6b:	ret    
   14001df6c:	mov    QWORD PTR [rsp+0x8],rcx
   14001df71:	push   rbp
   14001df72:	push   rsi
   14001df73:	push   rdi
   14001df74:	sub    rsp,0x30
   14001df78:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001df81:	mov    QWORD PTR [rsp+0x60],rbx
   14001df86:	mov    rbp,rdx
   14001df89:	mov    rdi,rcx
   14001df8c:	xor    ebx,ebx
   14001df8e:	mov    QWORD PTR [rcx],rbx
   14001df91:	add    rcx,0x10
   14001df95:	call   0x140036dcc
   14001df9a:	nop
   14001df9b:	mov    QWORD PTR [rdi+0x8],rbp
   14001df9f:	mov    WORD PTR [rdi+0x1e0],bx
   14001dfa6:	mov    WORD PTR [rdi+0x11e2],bx
   14001dfad:	mov    DWORD PTR [rdi+0x1d0],ebx
   14001dfb3:	mov    ecx,0xe970
   14001dfb8:	call   0x140055dac
   14001dfbd:	mov    QWORD PTR [rsp+0x58],rax
   14001dfc2:	test   rax,rax
   14001dfc5:	je     0x14001dfd6
   14001dfc7:	lea    rdx,[rdi+0x10]
   14001dfcb:	mov    rcx,rax
   14001dfce:	call   0x140049044
   14001dfd3:	mov    rbx,rax
   14001dfd6:	mov    QWORD PTR [rdi+0x1c8],rbx
   14001dfdd:	mov    eax,DWORD PTR [rbp+0x83d0]
   14001dfe3:	mov    ecx,0x8
   14001dfe8:	cmp    eax,ecx
   14001dfea:	cmovb  ecx,eax
   14001dfed:	mov    DWORD PTR [rbx+0x30],ecx
   14001dff0:	mov    rax,rdi
   14001dff3:	mov    rbx,QWORD PTR [rsp+0x60]
   14001dff8:	add    rsp,0x30
   14001dffc:	pop    rdi
   14001dffd:	pop    rsi
   14001dffe:	pop    rbp
   14001dfff:	ret    
   14001e000:	mov    QWORD PTR [rsp+0x8],rbx
   14001e005:	push   rdi
   14001e006:	sub    rsp,0x20
   14001e00a:	mov    rbx,QWORD PTR [rcx+0x1c8]
   14001e011:	mov    rdi,rcx
   14001e014:	test   rbx,rbx
   14001e017:	je     0x14001e02e
   14001e019:	mov    rcx,rbx
   14001e01c:	call   0x1400491fc
   14001e021:	mov    edx,0xe970
   14001e026:	mov    rcx,rbx
   14001e029:	call   0x140055de8
   14001e02e:	lea    rcx,[rdi+0x10]
   14001e032:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e037:	add    rsp,0x20
   14001e03b:	pop    rdi
   14001e03c:	jmp    0x140036e98
   14001e041:	int3   
   14001e042:	int3   
   14001e043:	int3   
   14001e044:	mov    QWORD PTR [rsp+0x8],rbx
   14001e049:	push   rdi
   14001e04a:	sub    rsp,0x20
   14001e04e:	cmp    DWORD PTR [rdx+0x7f88],0x3
   14001e055:	jne    0x14001e060
   14001e057:	cmp    BYTE PTR [rdx+0x3509],0x32
   14001e05e:	jmp    0x14001e06a
   14001e060:	mov    al,BYTE PTR [rdx+0x3509]
   14001e066:	sub    al,0xd
   14001e068:	cmp    al,0x10
   14001e06a:	mov    al,BYTE PTR [rdx+0x350a]
   14001e070:	seta   cl
   14001e073:	neg    al
   14001e075:	sbb    dil,dil
   14001e078:	and    dil,cl
   14001e07b:	je     0x14001e09d
   14001e07d:	lea    rbx,[rdx+0x26]
   14001e081:	mov    rdx,rbx
   14001e084:	lea    rcx,[rip+0x767d5]        # 0x140094860
   14001e08b:	call   0x14001c0c0
   14001e090:	mov    rdx,rbx
   14001e093:	mov    ecx,0x22
   14001e098:	call   0x1400013b0
   14001e09d:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e0a2:	test   dil,dil
   14001e0a5:	sete   al
   14001e0a8:	add    rsp,0x20
   14001e0ac:	pop    rdi
   14001e0ad:	ret    
   14001e0ae:	int3   
   14001e0af:	int3   
   14001e0b0:	mov    QWORD PTR [rsp+0x10],rbx
   14001e0b5:	push   rdi
   14001e0b6:	sub    rsp,0x1b0
   14001e0bd:	mov    rax,QWORD PTR [rip+0x63e1c]        # 0x140081ee0
   14001e0c4:	xor    rax,rsp
   14001e0c7:	mov    QWORD PTR [rsp+0x1a0],rax
   14001e0cf:	cmp    DWORD PTR [rdx+0x7f88],0x2
   14001e0d6:	mov    rbx,r8
   14001e0d9:	jne    0x14001e16d
   14001e0df:	cmp    BYTE PTR [rdx+0x3508],0x0
   14001e0e6:	jne    0x14001e16d
   14001e0ec:	mov    rcx,QWORD PTR [rcx+0x8]
   14001e0f0:	lea    rdx,[rsp+0xa0]
   14001e0f8:	mov    edi,0x80
   14001e0fd:	add    rcx,0x5030
   14001e104:	mov    r8d,edi
   14001e107:	call   0x140043660
   14001e10c:	mov    r8d,edi
   14001e10f:	lea    rdx,[rsp+0x20]
   14001e114:	lea    rcx,[rsp+0xa0]
   14001e11c:	call   QWORD PTR [rip+0x4e3d6]        # 0x14006c4f8
   14001e122:	mov    r8d,edi
   14001e125:	mov    BYTE PTR [rsp+0x9f],0x0
   14001e12d:	lea    rdx,[rsp+0xa0]
   14001e135:	lea    rcx,[rsp+0x20]
   14001e13a:	call   0x1400489f0
   14001e13f:	lea    rdx,[rsp+0xa0]
   14001e147:	mov    rcx,rbx
   14001e14a:	call   0x140043864
   14001e14f:	mov    edx,0x100
   14001e154:	lea    rcx,[rsp+0xa0]
   14001e15c:	call   0x1400438bc
   14001e161:	mov    edx,edi
   14001e163:	lea    rcx,[rsp+0x20]
   14001e168:	call   0x1400438bc
   14001e16d:	mov    rcx,QWORD PTR [rsp+0x1a0]
   14001e175:	xor    rcx,rsp
   14001e178:	call   0x140055f90
   14001e17d:	mov    rbx,QWORD PTR [rsp+0x1c8]
   14001e185:	add    rsp,0x1b0
   14001e18c:	pop    rdi
   14001e18d:	ret    
   14001e18e:	int3   
   14001e18f:	int3   
   14001e190:	mov    QWORD PTR [rsp+0x10],rbx
   14001e195:	push   rdi
   14001e196:	mov    eax,0x1080
   14001e19b:	call   0x140055f20
   14001e1a0:	sub    rsp,rax
   14001e1a3:	mov    rax,QWORD PTR [rip+0x63d36]        # 0x140081ee0
   14001e1aa:	xor    rax,rsp
   14001e1ad:	mov    QWORD PTR [rsp+0x1070],rax
   14001e1b5:	and    WORD PTR [rcx+0x21e3],0x0
   14001e1bd:	mov    rbx,rcx
   14001e1c0:	mov    BYTE PTR [rcx+0x21e2],0x0
   14001e1c7:	mov    rcx,QWORD PTR [rcx+0x8]
   14001e1cb:	lea    rdi,[rbx+0x1e0]
   14001e1d2:	movzx  eax,WORD PTR [rcx+0x83e2]
   14001e1d9:	and    QWORD PTR [rsp+0x1030],0x0
   14001e1e2:	and    QWORD PTR [rsp+0x1038],0x0
   14001e1eb:	and    QWORD PTR [rsp+0x1040],0x0
   14001e1f4:	mov    WORD PTR [rbx+0x108],ax
   14001e1fb:	jmp    0x14001e224
   14001e1fd:	xor    r8d,r8d
   14001e200:	lea    rdx,[rsp+0x20]
   14001e205:	mov    rcx,rdi
   14001e208:	call   0x140023280
   14001e20d:	test   al,al
   14001e20f:	je     0x14001e220
   14001e211:	mov    rax,QWORD PTR [rsp+0x1020]
   14001e219:	add    QWORD PTR [rbx+0x158],rax
   14001e220:	mov    rcx,QWORD PTR [rbx+0x8]
   14001e224:	mov    r8d,0x800
   14001e22a:	mov    rdx,rdi
   14001e22d:	call   0x140013e48
   14001e232:	test   al,al
   14001e234:	jne    0x14001e1fd
   14001e236:	mov    rcx,QWORD PTR [rbx+0x8]
   14001e23a:	add    rcx,0xa630
   14001e241:	call   0x1400463a0
   14001e246:	jmp    0x14001e28d
   14001e248:	cmp    BYTE PTR [rcx+0x5133],0x0
   14001e24f:	je     0x14001e25d
   14001e251:	add    rcx,0x5030
   14001e258:	call   0x140043640
   14001e25d:	mov    rcx,rbx
   14001e260:	call   0x14001eb38
   14001e265:	cmp    eax,0x1
   14001e268:	je     0x14001e25d
   14001e26a:	xor    r8d,r8d
   14001e26d:	lea    rdx,[rsp+0x20]
   14001e272:	mov    rcx,rdi
   14001e275:	call   0x140023280
   14001e27a:	test   al,al
   14001e27c:	je     0x14001e28d
   14001e27e:	mov    rax,QWORD PTR [rsp+0x1020]
   14001e286:	add    QWORD PTR [rbx+0x150],rax
   14001e28d:	mov    rcx,QWORD PTR [rbx+0x8]
   14001e291:	mov    r8d,0x800
   14001e297:	mov    rdx,rdi
   14001e29a:	call   0x140013e48
   14001e29f:	mov    rcx,QWORD PTR [rbx+0x8]
   14001e2a3:	test   al,al
   14001e2a5:	jne    0x14001e248
   14001e2a7:	cmp    BYTE PTR [rcx+0x5133],al
   14001e2ad:	je     0x14001e2bb
   14001e2af:	add    rcx,0x5030
   14001e2b6:	call   0x140043640
   14001e2bb:	cmp    DWORD PTR [rbx+0x1d0],0x0
   14001e2c2:	jne    0x14001e304
   14001e2c4:	mov    rax,QWORD PTR [rbx+0x8]
   14001e2c8:	cmp    WORD PTR [rax+0x83e2],0x49
   14001e2d0:	je     0x14001e304
   14001e2d2:	cmp    DWORD PTR [rip+0x76587],0xb        # 0x140094860
   14001e2d9:	je     0x14001e304
   14001e2db:	cmp    BYTE PTR [rbx+0x21e2],0x0
   14001e2e2:	jne    0x14001e2f1
   14001e2e4:	mov    rdx,rdi
   14001e2e7:	mov    ecx,0x43
   14001e2ec:	call   0x1400013b0
   14001e2f1:	mov    edx,0xa
   14001e2f6:	lea    rcx,[rip+0x76563]        # 0x140094860
   14001e2fd:	call   0x14001bf08
   14001e302:	jmp    0x14001e354
   14001e304:	mov    rax,QWORD PTR [rbx+0x8]
   14001e308:	cmp    BYTE PTR [rax+0x6152],0x0
   14001e30f:	jne    0x14001e354
   14001e311:	cmp    WORD PTR [rax+0x83e2],0x49
   14001e319:	jne    0x14001e322
   14001e31b:	mov    ecx,0xd22
   14001e320:	jmp    0x14001e331
   14001e322:	mov    ebx,DWORD PTR [rip+0x7653c]        # 0x140094864
   14001e328:	test   ebx,ebx
   14001e32a:	jne    0x14001e340
   14001e32c:	mov    ecx,0xd72
   14001e331:	call   0x140040118
   14001e336:	mov    rcx,rax
   14001e339:	call   0x14001796c
   14001e33e:	jmp    0x14001e354
   14001e340:	mov    ecx,0xd74
   14001e345:	call   0x140040118
   14001e34a:	mov    rcx,rax
   14001e34d:	mov    edx,ebx
   14001e34f:	call   0x14001796c
   14001e354:	mov    rcx,QWORD PTR [rsp+0x1070]
   14001e35c:	xor    rcx,rsp
   14001e35f:	call   0x140055f90
   14001e364:	mov    rbx,QWORD PTR [rsp+0x1098]
   14001e36c:	add    rsp,0x1080
   14001e373:	pop    rdi
   14001e374:	ret    
   14001e375:	int3   
   14001e376:	int3   
   14001e377:	int3   
   14001e378:	mov    QWORD PTR [rsp+0x20],rbx
   14001e37d:	push   rbp
   14001e37e:	push   rsi
   14001e37f:	push   rdi
   14001e380:	push   r14
   14001e382:	push   r15
   14001e384:	mov    eax,0x1060
   14001e389:	call   0x140055f20
   14001e38e:	sub    rsp,rax
   14001e391:	mov    rax,QWORD PTR [rip+0x63b48]        # 0x140081ee0
   14001e398:	xor    rax,rsp
   14001e39b:	mov    QWORD PTR [rsp+0x1050],rax
   14001e3a3:	mov    rax,QWORD PTR [rcx+0x8]
   14001e3a7:	mov    r15,r8
   14001e3aa:	mov    rsi,rdx
   14001e3ad:	mov    rdi,rcx
   14001e3b0:	cmp    BYTE PTR [rax+0x62f9],0x0
   14001e3b7:	je     0x14001e3ec
   14001e3b9:	mov    ecx,0xd64
   14001e3be:	call   0x140040118
   14001e3c3:	mov    rcx,rax
   14001e3c6:	mov    rdx,r15
   14001e3c9:	call   0x14001796c
   14001e3ce:	mov    ecx,0xd20
   14001e3d3:	call   0x140040118
   14001e3d8:	mov    rdx,rax
   14001e3db:	lea    rcx,[rip+0x4fe16]        # 0x14006e1f8
   14001e3e2:	call   0x14001796c
   14001e3e7:	jmp    0x14001e635
   14001e3ec:	cmp    BYTE PTR [rax+0x62d6],0x0
   14001e3f3:	lea    rbx,[rcx+0x11e2]
   14001e3fa:	mov    r8d,DWORD PTR [rsi+0x350c]
   14001e401:	mov    rcx,rbx
   14001e404:	sete   dl
   14001e407:	call   0x1400221f4
   14001e40c:	mov    r14d,eax
   14001e40f:	test   eax,eax
   14001e411:	je     0x14001e565
   14001e417:	mov    rcx,rbx
   14001e41a:	call   0x140021dec
   14001e41f:	mov    bpl,al
   14001e422:	test   al,al
   14001e424:	je     0x14001e480
   14001e426:	mov    rcx,rbx
   14001e429:	call   0x140021e60
   14001e42e:	mov    ecx,eax
   14001e430:	call   0x140021f7c
   14001e435:	test   al,al
   14001e437:	jne    0x14001e477
   14001e439:	mov    rcx,QWORD PTR [rdi+0x8]
   14001e43d:	lea    rax,[rsi+0x4530]
   14001e444:	mov    BYTE PTR [rsp+0x38],0x0
   14001e449:	mov    r9d,0x800
   14001e44f:	mov    QWORD PTR [rsp+0x30],rax
   14001e454:	mov    r8,rbx
   14001e457:	mov    rax,QWORD PTR [rsi+0x4550]
   14001e45e:	xor    edx,edx
   14001e460:	mov    QWORD PTR [rsp+0x28],rax
   14001e465:	lea    rax,[rsp+0x40]
   14001e46a:	mov    QWORD PTR [rsp+0x20],rax
   14001e46f:	call   0x1400202cc
   14001e474:	xor    bpl,bpl
   14001e477:	test   bpl,bpl
   14001e47a:	jne    0x14001e50e
   14001e480:	mov    dl,0x1
   14001e482:	mov    rcx,rbx
   14001e485:	call   0x1400218f4
   14001e48a:	mov    rax,QWORD PTR [rdi+0x8]
   14001e48e:	mov    rcx,rbx
   14001e491:	mov    r8d,DWORD PTR [rsi+0x350c]
   14001e498:	cmp    BYTE PTR [rax+0x62d6],0x0
   14001e49f:	sete   dl
   14001e4a2:	call   0x1400221f4
   14001e4a7:	test   eax,eax
   14001e4a9:	je     0x14001e565
   14001e4af:	mov    r8d,0x800
   14001e4b5:	lea    rcx,[rsp+0x50]
   14001e4ba:	mov    rdx,rbx
   14001e4bd:	call   0x140046158
   14001e4c2:	mov    dl,0x1
   14001e4c4:	mov    rcx,rbx
   14001e4c7:	call   0x1400324fc
   14001e4cc:	mov    dl,0x1
   14001e4ce:	mov    rcx,rbx
   14001e4d1:	call   0x1400218f4
   14001e4d6:	mov    rax,QWORD PTR [rdi+0x8]
   14001e4da:	mov    rcx,rbx
   14001e4dd:	mov    r8d,DWORD PTR [rsi+0x350c]
   14001e4e4:	cmp    BYTE PTR [rax+0x62d6],0x0
   14001e4eb:	sete   dl
   14001e4ee:	call   0x1400221f4
   14001e4f3:	mov    r14d,eax
   14001e4f6:	test   eax,eax
   14001e4f8:	jne    0x14001e513
   14001e4fa:	lea    rdx,[rsi+0x26]
   14001e4fe:	mov    r9,rbx
   14001e501:	lea    r8,[rsp+0x50]
   14001e506:	lea    ecx,[rax+0x21]
   14001e509:	call   0x14001df10
   14001e50e:	test   r14d,r14d
   14001e511:	je     0x14001e565
   14001e513:	test   bpl,bpl
   14001e516:	je     0x14001e535
   14001e518:	mov    rax,QWORD PTR [rdi+0x8]
   14001e51c:	cmp    BYTE PTR [rax+0x62d6],0x0
   14001e523:	jne    0x14001e593
   14001e525:	mov    edx,DWORD PTR [rsi+0x350c]
   14001e52b:	mov    rcx,rbx
   14001e52e:	call   0x140022740
   14001e533:	jmp    0x14001e593
   14001e535:	lea    rdx,[rsi+0x26]
   14001e539:	mov    r8,rbx
   14001e53c:	mov    ecx,0x13
   14001e541:	call   0x140001358
   14001e546:	lea    rcx,[rip+0x76313]        # 0x140094860
   14001e54d:	call   0x14001bf78
   14001e552:	mov    edx,0x9
   14001e557:	lea    rcx,[rip+0x76302]        # 0x140094860
   14001e55e:	call   0x14001bf08
   14001e563:	jmp    0x14001e59a
   14001e565:	mov    ecx,0xd60
   14001e56a:	call   0x140040118
   14001e56f:	mov    rcx,rax
   14001e572:	mov    rdx,rbx
   14001e575:	call   0x14001796c
   14001e57a:	mov    ecx,0xd20
   14001e57f:	call   0x140040118
   14001e584:	mov    rdx,rax
   14001e587:	lea    rcx,[rip+0x4fc72]        # 0x14006e200
   14001e58e:	call   0x14001796c
   14001e593:	mov    BYTE PTR [rdi+0x11e1],0x1
   14001e59a:	cmp    BYTE PTR [rdi+0x11e1],0x0
   14001e5a1:	je     0x14001e635
   14001e5a7:	mov    r8,r15
   14001e5aa:	lea    rcx,[rip+0x7628f]        # 0x140094840
   14001e5b1:	mov    edx,0x1
   14001e5b6:	call   0x1400259c8
   14001e5bb:	mov    rax,QWORD PTR [rdi+0x8]
   14001e5bf:	cmp    BYTE PTR [rax+0x62d5],0x0
   14001e5c6:	je     0x14001e5e7
   14001e5c8:	test   DWORD PTR [rsi+0x350c],0x800
   14001e5d2:	je     0x14001e5e7
   14001e5d4:	call   0x14002454c
   14001e5d9:	test   eax,eax
   14001e5db:	je     0x14001e5e7
   14001e5dd:	mov    dl,0x1
   14001e5df:	mov    rcx,rbx
   14001e5e2:	call   0x1400227d0
   14001e5e7:	mov    r10,QWORD PTR [rdi+0x8]
   14001e5eb:	lea    rdx,[rsi+0x4540]
   14001e5f2:	mov    rcx,rbx
   14001e5f5:	mov    eax,DWORD PTR [r10+0x73cc]
   14001e5fc:	neg    eax
   14001e5fe:	mov    eax,DWORD PTR [r10+0x73c8]
   14001e605:	sbb    r9,r9
   14001e608:	and    r9,rdx
   14001e60b:	lea    rdx,[rsi+0x4538]
   14001e612:	neg    eax
   14001e614:	mov    eax,DWORD PTR [r10+0x73c4]
   14001e61b:	lea    r10,[rsi+0x4530]
   14001e622:	sbb    r8,r8
   14001e625:	and    r8,rdx
   14001e628:	neg    eax
   14001e62a:	sbb    rdx,rdx
   14001e62d:	and    rdx,r10
   14001e630:	call   0x140022578
   14001e635:	mov    rcx,QWORD PTR [rsp+0x1050]
   14001e63d:	xor    rcx,rsp
   14001e640:	call   0x140055f90
   14001e645:	mov    rbx,QWORD PTR [rsp+0x10a8]
   14001e64d:	add    rsp,0x1060
   14001e654:	pop    r15
   14001e656:	pop    r14
   14001e658:	pop    rdi
   14001e659:	pop    rsi
   14001e65a:	pop    rbp
   14001e65b:	ret    
   14001e65c:	mov    QWORD PTR [rsp+0x20],rbx
   14001e661:	push   rbp
   14001e662:	push   rsi
   14001e663:	push   rdi
   14001e664:	push   r12
   14001e666:	push   r13
   14001e668:	push   r14
   14001e66a:	push   r15
   14001e66c:	mov    eax,0x1060
   14001e671:	call   0x140055f20
   14001e676:	sub    rsp,rax
   14001e679:	mov    rax,QWORD PTR [rip+0x63860]        # 0x140081ee0
   14001e680:	xor    rax,rsp
   14001e683:	mov    QWORD PTR [rsp+0x1050],rax
   14001e68b:	mov    rax,QWORD PTR [rcx+0x8]
   14001e68f:	mov    r15,r8
   14001e692:	mov    r14,rdx
   14001e695:	mov    rbp,rcx
   14001e698:	mov    dil,0x1
   14001e69b:	movzx  r8d,WORD PTR [rax+0x83e2]
   14001e6a3:	cmp    r8w,0x50
   14001e6a8:	jne    0x14001e6b2
   14001e6aa:	mov    DWORD PTR [r15+0x14],0x1
   14001e6b2:	cmp    r8w,0x45
   14001e6b7:	je     0x14001e6c4
   14001e6b9:	cmp    r8w,0x58
   14001e6be:	jne    0x14001e7e3
   14001e6c4:	mov    rcx,QWORD PTR [rcx+0x8]
   14001e6c8:	cmp    BYTE PTR [rcx+0x62f9],0x0
   14001e6cf:	jne    0x14001e7e3
   14001e6d5:	mov    rax,QWORD PTR [rdx+0x4550]
   14001e6dc:	lea    r12,[rdx+0x4530]
   14001e6e3:	mov    BYTE PTR [rsp+0x38],0x1
   14001e6e8:	lea    rbx,[rbp+0x11e2]
   14001e6ef:	mov    QWORD PTR [rsp+0x30],r12
   14001e6f4:	mov    r13d,0x800
   14001e6fa:	mov    QWORD PTR [rsp+0x28],rax
   14001e6ff:	mov    r9d,r13d
   14001e702:	lea    rax,[rsp+0x40]
   14001e707:	mov    r8,rbx
   14001e70a:	mov    rdx,r15
   14001e70d:	mov    QWORD PTR [rsp+0x20],rax
   14001e712:	call   0x1400202cc
   14001e717:	test   al,al
   14001e719:	jne    0x14001e7e3
   14001e71f:	xor    dil,dil
   14001e722:	cmp    BYTE PTR [rsp+0x40],dil
   14001e727:	jne    0x14001e7e3
   14001e72d:	lea    rsi,[r14+0x26]
   14001e731:	mov    r8,rbx
   14001e734:	mov    rdx,rsi
   14001e737:	lea    rcx,[rip+0x76122]        # 0x140094860
   14001e73e:	call   0x14001bc28
   14001e743:	mov    rcx,rbx
   14001e746:	call   0x1400321ec
   14001e74b:	test   al,al
   14001e74d:	jne    0x14001e7e3
   14001e753:	mov    rdx,rsi
   14001e756:	mov    ecx,0x6a
   14001e75b:	call   0x1400013b0
   14001e760:	mov    r8d,r13d
   14001e763:	lea    rcx,[rsp+0x50]
   14001e768:	mov    rdx,rbx
   14001e76b:	call   0x140046158
   14001e770:	mov    dl,0x1
   14001e772:	mov    rcx,rbx
   14001e775:	call   0x1400324fc
   14001e77a:	mov    dl,0x1
   14001e77c:	mov    rcx,rbx
   14001e77f:	call   0x1400218f4
   14001e784:	mov    rax,QWORD PTR [r14+0x4550]
   14001e78b:	mov    r9d,r13d
   14001e78e:	mov    rcx,QWORD PTR [rbp+0x8]
   14001e792:	mov    r8,rbx
   14001e795:	mov    BYTE PTR [rsp+0x38],0x1
   14001e79a:	mov    rdx,r15
   14001e79d:	mov    QWORD PTR [rsp+0x30],r12
   14001e7a2:	mov    QWORD PTR [rsp+0x28],rax
   14001e7a7:	lea    rax,[rsp+0x40]
   14001e7ac:	mov    QWORD PTR [rsp+0x20],rax
   14001e7b1:	call   0x1400202cc
   14001e7b6:	mov    rdx,rsi
   14001e7b9:	test   al,al
   14001e7bb:	je     0x14001e7d4
   14001e7bd:	mov    r9,rbx
   14001e7c0:	lea    r8,[rsp+0x50]
   14001e7c5:	mov    ecx,0x21
   14001e7ca:	call   0x14001df10
   14001e7cf:	mov    dil,0x1
   14001e7d2:	jmp    0x14001e7e3
   14001e7d4:	mov    r8,rbx
   14001e7d7:	lea    rcx,[rip+0x76082]        # 0x140094860
   14001e7de:	call   0x14001bc28
   14001e7e3:	mov    al,dil
   14001e7e6:	mov    rcx,QWORD PTR [rsp+0x1050]
   14001e7ee:	xor    rcx,rsp
   14001e7f1:	call   0x140055f90
   14001e7f6:	mov    rbx,QWORD PTR [rsp+0x10b8]
   14001e7fe:	add    rsp,0x1060
   14001e805:	pop    r15
   14001e807:	pop    r14
   14001e809:	pop    r13
   14001e80b:	pop    r12
   14001e80d:	pop    rdi
   14001e80e:	pop    rsi
   14001e80f:	pop    rbp
   14001e810:	ret    
   14001e811:	int3   
   14001e812:	int3   
   14001e813:	int3   
   14001e814:	mov    QWORD PTR [rsp+0x10],rbx
   14001e819:	push   rdi
   14001e81a:	sub    rsp,0xa0
   14001e821:	mov    rax,QWORD PTR [rip+0x636b8]        # 0x140081ee0
   14001e828:	xor    rax,rsp
   14001e82b:	mov    QWORD PTR [rsp+0x90],rax
   14001e833:	mov    rdi,r8
   14001e836:	mov    rbx,rcx
   14001e839:	mov    r8,QWORD PTR [rcx+0x8]
   14001e83d:	cmp    BYTE PTR [r8+0x5130],0x0
   14001e845:	jne    0x14001e8a4
   14001e847:	add    r8,0x5030
   14001e84e:	mov    rdx,rdi
   14001e851:	mov    ecx,0x1
   14001e856:	call   0x140048830
   14001e85b:	test   al,al
   14001e85d:	je     0x14001e878
   14001e85f:	mov    rax,QWORD PTR [rbx+0x8]
   14001e863:	cmp    BYTE PTR [rax+0x5130],0x0
   14001e86a:	je     0x14001e878
   14001e86c:	mov    BYTE PTR [rax+0x5133],0x1
   14001e873:	jmp    0x14001e937
   14001e878:	and    DWORD PTR [rsp+0x80],0x0
   14001e880:	lea    rcx,[rsp+0x20]
   14001e885:	and    DWORD PTR [rsp+0x84],0x0
   14001e88d:	mov    DWORD PTR [rsp+0x88],0x2
   14001e898:	call   0x1400479a4
   14001e89d:	xor    al,al
   14001e89f:	jmp    0x14001e939
   14001e8a4:	cmp    BYTE PTR [rcx+0x11e0],0x0
   14001e8ab:	jne    0x14001e937
   14001e8b1:	cmp    BYTE PTR [rdx+0x45e0],0x0
   14001e8b8:	jne    0x14001e937
   14001e8ba:	mov    ecx,0xd5e
   14001e8bf:	call   0x140040118
   14001e8c4:	mov    rcx,rax
   14001e8c7:	mov    rdx,rdi
   14001e8ca:	call   0x14001778c
   14001e8cf:	mov    rax,QWORD PTR [rbx+0x8]
   14001e8d3:	cmp    BYTE PTR [rax+0x619c],0x0
   14001e8da:	jne    0x14001e937
   14001e8dc:	mov    ecx,0xbbc
   14001e8e1:	call   0x140040118
   14001e8e6:	mov    rcx,rax
   14001e8e9:	call   0x140016a34
   14001e8ee:	cmp    eax,0xffffffff
   14001e8f1:	je     0x14001e906
   14001e8f3:	cmp    eax,0x2
   14001e8f6:	je     0x14001e917
   14001e8f8:	cmp    eax,0x3
   14001e8fb:	jne    0x14001e937
   14001e8fd:	mov    BYTE PTR [rbx+0x11e0],0x1
   14001e904:	jmp    0x14001e937
   14001e906:	mov    edx,0xff
   14001e90b:	lea    rcx,[rip+0x75f4e]        # 0x140094860
   14001e912:	call   0x14001bc60
   14001e917:	mov    r8,QWORD PTR [rbx+0x8]
   14001e91b:	mov    rdx,rdi
   14001e91e:	add    r8,0x5030
   14001e925:	mov    ecx,0x1
   14001e92a:	call   0x140048830
   14001e92f:	test   al,al
   14001e931:	je     0x14001e89d
   14001e937:	mov    al,0x1
   14001e939:	mov    rcx,QWORD PTR [rsp+0x90]
   14001e941:	xor    rcx,rsp
   14001e944:	call   0x140055f90
   14001e949:	mov    rbx,QWORD PTR [rsp+0xb8]
   14001e951:	add    rsp,0xa0
   14001e958:	pop    rdi
   14001e959:	ret    
   14001e95a:	int3   
   14001e95b:	int3   
   14001e95c:	mov    QWORD PTR [rsp+0x8],rbx
   14001e961:	mov    QWORD PTR [rsp+0x10],rbp
   14001e966:	mov    QWORD PTR [rsp+0x18],rsi
   14001e96b:	push   rdi
   14001e96c:	push   r12
   14001e96e:	push   r13
   14001e970:	push   r14
   14001e972:	push   r15
   14001e974:	sub    rsp,0x20
   14001e978:	mov    r14,QWORD PTR [rsp+0x70]
   14001e97d:	mov    rbp,rdx
   14001e980:	mov    rdx,QWORD PTR [rcx+0x8]
   14001e984:	mov    rdi,r8
   14001e987:	mov    r15,rcx
   14001e98a:	add    rdx,0x201e
   14001e991:	mov    r8,r14
   14001e994:	mov    rcx,r9
   14001e997:	mov    rbx,r9
   14001e99a:	call   0x140046158
   14001e99f:	mov    rcx,QWORD PTR [r15+0x8]
   14001e9a3:	xor    r12d,r12d
   14001e9a6:	add    rcx,0x201e
   14001e9ad:	cmp    WORD PTR [rcx],r12w
   14001e9b1:	je     0x14001e9dc
   14001e9b3:	call   0x140032798
   14001e9b8:	movzx  esi,WORD PTR [rax]
   14001e9bb:	mov    ecx,esi
   14001e9bd:	call   0x140032274
   14001e9c2:	test   al,al
   14001e9c4:	jne    0x14001e9dc
   14001e9c6:	mov    ecx,esi
   14001e9c8:	call   0x140032138
   14001e9cd:	test   al,al
   14001e9cf:	jne    0x14001e9dc
   14001e9d1:	mov    rdx,r14
   14001e9d4:	mov    rcx,rbx
   14001e9d7:	call   0x140030e78
   14001e9dc:	mov    rax,QWORD PTR [r15+0x8]
   14001e9e0:	cmp    BYTE PTR [rax+0x73c0],r12b
   14001e9e7:	je     0x14001ea1b
   14001e9e9:	lea    rcx,[rbp+0x7fd2]
   14001e9f0:	call   0x1400327bc
   14001e9f5:	mov    rdx,rax
   14001e9f8:	mov    r8,r14
   14001e9fb:	mov    rcx,rbx
   14001e9fe:	call   0x140046120
   14001ea03:	mov    r8,r14
   14001ea06:	xor    edx,edx
   14001ea08:	mov    rcx,rbx
   14001ea0b:	call   0x140032848
   14001ea10:	mov    rdx,r14
   14001ea13:	mov    rcx,rbx
   14001ea16:	call   0x140030e78
   14001ea1b:	mov    rdx,QWORD PTR [r15+0x8]
   14001ea1f:	or     rax,0xffffffffffffffff
   14001ea23:	mov    rcx,rax
   14001ea26:	inc    rcx
   14001ea29:	cmp    WORD PTR [rdx+rcx*2+0x4030],r12w
   14001ea32:	jne    0x14001ea26
   14001ea34:	mov    r13d,0x5c
   14001ea3a:	test   rcx,rcx
   14001ea3d:	je     0x14001ea6f
   14001ea3f:	inc    rax
   14001ea42:	cmp    WORD PTR [rdi+rax*2],r12w
   14001ea47:	jne    0x14001ea3f
   14001ea49:	cmp    rcx,rax
   14001ea4c:	cmovb  rax,rcx
   14001ea50:	lea    rdi,[rdi+rax*2]
   14001ea54:	jmp    0x14001ea5a
   14001ea56:	add    rdi,0x2
   14001ea5a:	cmp    WORD PTR [rdi],r13w
   14001ea5e:	je     0x14001ea56
   14001ea60:	cmp    WORD PTR [rdi],r12w
   14001ea64:	jne    0x14001ea6f
   14001ea66:	mov    WORD PTR [rbx],r12w
   14001ea6a:	jmp    0x14001eb1a
   14001ea6f:	cmp    DWORD PTR [rdx+0x6164],0x4
   14001ea76:	mov    eax,0x3a
   14001ea7b:	movzx  esi,WORD PTR [rdx+0x83e2]
   14001ea82:	jne    0x14001ea9e
   14001ea84:	cmp    si,0x58
   14001ea88:	jne    0x14001ea9e
   14001ea8a:	mov    ecx,eax
   14001ea8c:	call   0x140032138
   14001ea91:	test   al,al
   14001ea93:	je     0x14001ea9e
   14001ea95:	mov    bpl,0x1
   14001ea98:	mov    WORD PTR [rbx],r12w
   14001ea9c:	jmp    0x14001eaa1
   14001ea9e:	mov    bpl,r12b
   14001eaa1:	cmp    si,0x45
   14001eaa5:	je     0x14001eab9
   14001eaa7:	mov    rax,QWORD PTR [r15+0x8]
   14001eaab:	cmp    DWORD PTR [rax+0x6164],0x1
   14001eab2:	je     0x14001eab9
   14001eab4:	mov    rdx,rdi
   14001eab7:	jmp    0x14001eac4
   14001eab9:	mov    rcx,rdi
   14001eabc:	call   0x1400327bc
   14001eac1:	mov    rdx,rax
   14001eac4:	mov    r8,r14
   14001eac7:	mov    rcx,rbx
   14001eaca:	call   0x140046120
   14001eacf:	movzx  ecx,WORD PTR [rbx]
   14001ead2:	call   0x140048f28
   14001ead7:	mov    edi,eax
   14001ead9:	test   bpl,bpl
   14001eadc:	je     0x14001eb1a
   14001eade:	cmp    WORD PTR [rbx+0x2],0x5f
   14001eae3:	jne    0x14001eb07
   14001eae5:	movzx  ecx,WORD PTR [rbx+0x4]
   14001eae9:	call   0x140032274
   14001eaee:	test   al,al
   14001eaf0:	je     0x14001eb07
   14001eaf2:	sub    di,0x41
   14001eaf6:	cmp    di,0x19
   14001eafa:	ja     0x14001eb07
   14001eafc:	mov    eax,0x3a
   14001eb01:	mov    WORD PTR [rbx+0x2],ax
   14001eb05:	jmp    0x14001eb1a
   14001eb07:	cmp    WORD PTR [rbx],0x5f
   14001eb0b:	jne    0x14001eb1a
   14001eb0d:	cmp    WORD PTR [rbx+0x2],0x5f
   14001eb12:	jne    0x14001eb1a
   14001eb14:	mov    DWORD PTR [rbx],0x5c005c
   14001eb1a:	mov    rbx,QWORD PTR [rsp+0x50]
   14001eb1f:	mov    rbp,QWORD PTR [rsp+0x58]
   14001eb24:	mov    rsi,QWORD PTR [rsp+0x60]
   14001eb29:	add    rsp,0x20
   14001eb2d:	pop    r15
   14001eb2f:	pop    r14
   14001eb31:	pop    r13
   14001eb33:	pop    r12
   14001eb35:	pop    rdi
   14001eb36:	ret    
   14001eb37:	int3   
   14001eb38:	rex push rbp
   14001eb3a:	push   r12
   14001eb3c:	push   r13
   14001eb3e:	push   r14
   14001eb40:	push   r15
   14001eb42:	lea    rbp,[rsp-0xafd0]
   14001eb4a:	mov    eax,0xb0d0
   14001eb4f:	call   0x140055f20
   14001eb54:	sub    rsp,rax
   14001eb57:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14001eb60:	mov    QWORD PTR [rsp+0xb108],rbx
   14001eb68:	mov    QWORD PTR [rsp+0xb110],rsi
   14001eb70:	mov    QWORD PTR [rsp+0xb118],rdi
   14001eb78:	mov    rax,QWORD PTR [rip+0x63361]        # 0x140081ee0
   14001eb7f:	xor    rax,rsp
   14001eb82:	mov    QWORD PTR [rbp+0xafc0],rax
   14001eb89:	mov    rsi,rcx
   14001eb8c:	mov    rdx,QWORD PTR [rcx+0x8]
   14001eb90:	lea    rcx,[rbp+0x1fe0]
   14001eb97:	call   0x140007678
   14001eb9c:	nop
   14001eb9d:	lea    r14,[rsi+0x1e0]
   14001eba4:	mov    rdx,r14
   14001eba7:	lea    rcx,[rbp+0x1fe0]
   14001ebae:	call   0x140021278
   14001ebb3:	xor    edi,edi
   14001ebb5:	test   al,al
   14001ebb7:	je     0x14001efab
   14001ebbd:	lea    ebx,[rdi+0x1]
   14001ebc0:	mov    dl,bl
   14001ebc2:	lea    rcx,[rbp+0x1fe0]
   14001ebc9:	call   0x140008f4c
   14001ebce:	test   al,al
   14001ebd0:	jne    0x14001ec96
   14001ebd6:	lea    rdx,[rip+0x4f5b3]        # 0x14006e190
   14001ebdd:	mov    rcx,r14
   14001ebe0:	call   0x140030eb8
   14001ebe5:	test   al,al
   14001ebe7:	je     0x14001ec57
   14001ebe9:	mov    r9b,bl
   14001ebec:	mov    r8d,0x800
   14001ebf2:	lea    rdx,[rsp+0x40]
   14001ebf7:	mov    rcx,r14
   14001ebfa:	call   0x1400329a4
   14001ebff:	lea    rdx,[rsp+0x40]
   14001ec04:	mov    rcx,r14
   14001ec07:	call   0x140048f34
   14001ec0c:	test   eax,eax
   14001ec0e:	je     0x14001ec3e
   14001ec10:	lea    rcx,[rsp+0x40]
   14001ec15:	call   0x140021dec
   14001ec1a:	test   al,al
   14001ec1c:	je     0x14001ec3e
   14001ec1e:	mov    rcx,QWORD PTR [rsi+0x8]
   14001ec22:	add    rcx,0xa630
   14001ec29:	xor    r8d,r8d
   14001ec2c:	lea    rdx,[rsp+0x40]
   14001ec31:	call   0x1400463a8
   14001ec36:	test   al,al
   14001ec38:	jne    0x14001efab
   14001ec3e:	mov    r8,r14
   14001ec41:	xor    edx,edx
   14001ec43:	mov    rcx,QWORD PTR [rsi+0x8]
   14001ec47:	call   0x14003959c
   14001ec4c:	add    DWORD PTR [rsi+0x1d0],ebx
   14001ec52:	jmp    0x14001efab
   14001ec57:	mov    ecx,0xd12
   14001ec5c:	call   0x140040118
   14001ec61:	mov    rcx,rax
   14001ec64:	mov    rdx,r14
   14001ec67:	call   0x14001796c
   14001ec6c:	lea    rdx,[rip+0x4f525]        # 0x14006e198
   14001ec73:	mov    rcx,r14
   14001ec76:	call   0x140030eb8
   14001ec7b:	test   al,al
   14001ec7d:	je     0x14001efab
   14001ec83:	mov    edx,ebx
   14001ec85:	lea    rcx,[rip+0x75bd4]        # 0x140094860
   14001ec8c:	call   0x14001bf08
   14001ec91:	jmp    0x14001efab
   14001ec96:	cmp    BYTE PTR [rbp+0x9f81],dil
   14001ec9d:	jne    0x14001efab
   14001eca3:	mov    r15d,0x800
   14001eca9:	mov    al,BYTE PTR [rbp+0x9f6d]
   14001ecaf:	test   al,al
   14001ecb1:	je     0x14001ed18
   14001ecb3:	cmp    BYTE PTR [rbp+0x9f71],dil
   14001ecba:	jne    0x14001ed18
   14001ecbc:	mov    r9b,BYTE PTR [rbp+0x9f72]
   14001ecc3:	mov    r8d,r15d
   14001ecc6:	lea    rdx,[rsp+0x40]
   14001eccb:	mov    rcx,r14
   14001ecce:	call   0x1400329a4
   14001ecd3:	lea    rdx,[rsp+0x40]
   14001ecd8:	mov    rcx,r14
   14001ecdb:	call   0x140048f34
   14001ece0:	test   eax,eax
   14001ece2:	je     0x14001ed12
   14001ece4:	lea    rcx,[rsp+0x40]
   14001ece9:	call   0x140021dec
   14001ecee:	test   al,al
   14001ecf0:	je     0x14001ed12
   14001ecf2:	mov    rcx,QWORD PTR [rsi+0x8]
   14001ecf6:	add    rcx,0xa630
   14001ecfd:	xor    r8d,r8d
   14001ed00:	lea    rdx,[rsp+0x40]
   14001ed05:	call   0x1400463a8
   14001ed0a:	test   al,al
   14001ed0c:	jne    0x14001efab
   14001ed12:	mov    al,BYTE PTR [rbp+0x9f6d]
   14001ed18:	mov    r13,rdi
   14001ed1b:	test   al,al
   14001ed1d:	je     0x14001ed8d
   14001ed1f:	mov    rcx,rdi
   14001ed22:	movzx  eax,WORD PTR [rbp+rcx*1+0x2006]
   14001ed2a:	mov    WORD PTR [rsp+rcx*1+0x40],ax
   14001ed2f:	lea    rcx,[rcx+0x2]
   14001ed33:	test   ax,ax
   14001ed36:	jne    0x14001ed22
   14001ed38:	jmp    0x14001ed41
   14001ed3a:	add    r13,QWORD PTR [rbp+0x1f90]
   14001ed41:	cmp    BYTE PTR [rbp+0x9f72],dil
   14001ed48:	sete   r8b
   14001ed4c:	mov    edx,r15d
   14001ed4f:	lea    rcx,[rsp+0x40]
   14001ed54:	call   0x14003259c
   14001ed59:	mov    QWORD PTR [rbp+0x1fa0],rdi
   14001ed60:	mov    QWORD PTR [rbp+0x1fa8],rdi
   14001ed67:	mov    QWORD PTR [rbp+0x1fb0],rdi
   14001ed6e:	xor    r8d,r8d
   14001ed71:	lea    rdx,[rbp+0xf90]
   14001ed78:	lea    rcx,[rsp+0x40]
   14001ed7d:	call   0x140023280
   14001ed82:	test   al,al
   14001ed84:	jne    0x14001ed3a
   14001ed86:	add    QWORD PTR [rsi+0x158],r13
   14001ed8d:	lea    rdx,[rbp+0x1fe0]
   14001ed94:	mov    rcx,rsi
   14001ed97:	call   0x14001eff0
   14001ed9c:	mov    rcx,QWORD PTR [rsi+0x8]
   14001eda0:	movzx  eax,WORD PTR [rcx+0x83e2]
   14001eda7:	cmp    ax,0x54
   14001edab:	je     0x14001edb3
   14001edad:	cmp    ax,0x49
   14001edb1:	jne    0x14001edb9
   14001edb3:	mov    BYTE PTR [rcx+0x62f9],bl
   14001edb9:	lea    r8,[rbp+0x2006]
   14001edc0:	xor    edx,edx
   14001edc2:	lea    rcx,[rip+0x75a77]        # 0x140094840
   14001edc9:	call   0x1400259c8
   14001edce:	mov    rax,QWORD PTR [rsi+0x8]
   14001edd2:	cmp    WORD PTR [rax+0x83e2],0x49
   14001edda:	jne    0x14001ede4
   14001eddc:	mov    BYTE PTR [rax+0x6150],bl
   14001ede2:	jmp    0x14001edf6
   14001ede4:	cmp    BYTE PTR [rax+0x62f9],dil
   14001edeb:	sete   cl
   14001edee:	mov    rdx,r14
   14001edf1:	call   0x140048960
   14001edf6:	lea    rcx,[rbp+0x1fe0]
   14001edfd:	call   0x14000a7c4
   14001ee02:	mov    r12b,dil
   14001ee05:	mov    r15b,dil
   14001ee08:	lea    rcx,[rbp+0x1fe0]
   14001ee0f:	call   0x14000e334
   14001ee14:	mov    rdx,rax
   14001ee17:	mov    QWORD PTR [rsp+0x28],rax
   14001ee1c:	test   rax,rax
   14001ee1f:	je     0x14001ee8a
   14001ee21:	movzx  r15d,r15b
   14001ee25:	cmp    DWORD PTR [rbp+0x42b4],0x5
   14001ee2c:	cmove  r15d,ebx
   14001ee30:	mov    rcx,QWORD PTR [rsi+0x8]
   14001ee34:	cmp    BYTE PTR [rcx+0x62f9],dil
   14001ee3b:	je     0x14001ee8a
   14001ee3d:	cmp    DWORD PTR [rbp+0x42b4],0x3
   14001ee44:	jne    0x14001ee8a
   14001ee46:	movzx  eax,WORD PTR [rbp+0x7848]
   14001ee4d:	cmp    ax,WORD PTR [rip+0x4f34c]        # 0x14006e1a0
   14001ee54:	jne    0x14001ee8a
   14001ee56:	movzx  eax,WORD PTR [rbp+0x784a]
   14001ee5d:	cmp    ax,WORD PTR [rip+0x4f33e]        # 0x14006e1a2
   14001ee64:	jne    0x14001ee8a
   14001ee66:	movzx  eax,WORD PTR [rbp+0x784c]
   14001ee6d:	cmp    ax,WORD PTR [rip+0x4f330]        # 0x14006e1a4
   14001ee74:	jne    0x14001ee8a
   14001ee76:	mov    r12b,bl
   14001ee79:	lea    rcx,[rbp+0x1fe0]
   14001ee80:	call   0x14003bdd8
   14001ee85:	mov    rdx,QWORD PTR [rsp+0x28]
   14001ee8a:	mov    BYTE PTR [rsp+0x20],dil
   14001ee8f:	lea    r9,[rsp+0x20]
   14001ee94:	mov    r8,rdx
   14001ee97:	lea    rdx,[rbp+0x1fe0]
   14001ee9e:	mov    rcx,rsi
   14001eea1:	call   0x14001f050
   14001eea6:	test   al,al
   14001eea8:	jne    0x14001ee08
   14001eeae:	cmp    BYTE PTR [rsp+0x20],dil
   14001eeb3:	je     0x14001ef2f
   14001eeb5:	mov    QWORD PTR [rbp+0xf50],rdi
   14001eebc:	mov    QWORD PTR [rbp+0xf58],rdi
   14001eec3:	mov    QWORD PTR [rbp+0xf60],rdi
   14001eeca:	mov    QWORD PTR [rbp+0x1fa0],rdi
   14001eed1:	mov    QWORD PTR [rbp+0x1fa8],rdi
   14001eed8:	mov    QWORD PTR [rbp+0x1fb0],rdi
   14001eedf:	xor    r8d,r8d
   14001eee2:	lea    rdx,[rsp+0x40]
   14001eee7:	lea    rcx,[rbp+0x2006]
   14001eeee:	call   0x140023280
   14001eef3:	test   al,al
   14001eef5:	je     0x14001efad
   14001eefb:	xor    r8d,r8d
   14001eefe:	lea    rdx,[rbp+0xf90]
   14001ef05:	mov    rcx,r14
   14001ef08:	call   0x140023280
   14001ef0d:	test   al,al
   14001ef0f:	je     0x14001efad
   14001ef15:	mov    rax,QWORD PTR [rbp+0x1f90]
   14001ef1c:	sub    rax,QWORD PTR [rbp+0xf40]
   14001ef23:	sub    rax,r13
   14001ef26:	add    QWORD PTR [rsi+0x158],rax
   14001ef2d:	jmp    0x14001efad
   14001ef2f:	mov    rax,QWORD PTR [rsi+0x8]
   14001ef33:	cmp    BYTE PTR [rax+0x62f9],dil
   14001ef3a:	je     0x14001ef84
   14001ef3c:	cmp    BYTE PTR [rbp+0x9f73],dil
   14001ef43:	je     0x14001ef84
   14001ef45:	cmp    DWORD PTR [rbp+0x9f68],0x3
   14001ef4c:	jne    0x14001ef84
   14001ef4e:	test   r12b,r12b
   14001ef51:	jne    0x14001ef84
   14001ef53:	test   r15b,r15b
   14001ef56:	jne    0x14001ef78
   14001ef58:	lea    rcx,[rbp+0x1fe0]
   14001ef5f:	call   0x14000a30c
   14001ef64:	mov    rbx,rax
   14001ef67:	lea    rcx,[rbp+0x1fe0]
   14001ef6e:	call   0x140020b88
   14001ef73:	cmp    rbx,rax
   14001ef76:	jne    0x14001ef84
   14001ef78:	lea    rcx,[rbp+0x1fe0]
   14001ef7f:	call   0x14003bdd8
   14001ef84:	mov    rcx,QWORD PTR [rsi+0x8]
   14001ef88:	cmp    BYTE PTR [rcx+0x62f9],dil
   14001ef8f:	je     0x14001efaf
   14001ef91:	cmp    BYTE PTR [rbp+0x9f6d],dil
   14001ef98:	je     0x14001efaf
   14001ef9a:	mov    r8,r14
   14001ef9d:	lea    rdx,[rbp+0x1fe0]
   14001efa4:	call   0x14003959c
   14001efa9:	jmp    0x14001efaf
   14001efab:	mov    ebx,edi
   14001efad:	mov    edi,ebx
   14001efaf:	lea    rcx,[rbp+0x1fe0]
   14001efb6:	call   0x140007880
   14001efbb:	mov    eax,edi
   14001efbd:	mov    rcx,QWORD PTR [rbp+0xafc0]
   14001efc4:	xor    rcx,rsp
   14001efc7:	call   0x140055f90
   14001efcc:	lea    r11,[rsp+0xb0d0]
   14001efd4:	mov    rbx,QWORD PTR [r11+0x38]
   14001efd8:	mov    rsi,QWORD PTR [r11+0x40]
   14001efdc:	mov    rdi,QWORD PTR [r11+0x48]
   14001efe0:	mov    rsp,r11
   14001efe3:	pop    r15
   14001efe5:	pop    r14
   14001efe7:	pop    r13
   14001efe9:	pop    r12
   14001efeb:	pop    rbp
   14001efec:	ret    
   14001efed:	int3   
   14001efee:	int3   
   14001efef:	int3   
   14001eff0:	rex push rbx
   14001eff2:	sub    rsp,0x20
   14001eff6:	mov    rbx,rcx
   14001eff9:	mov    rcx,rdx
   14001effc:	call   0x140020b88
   14001f001:	xor    ecx,ecx
   14001f003:	mov    QWORD PTR [rbx+0x110],rax
   14001f00a:	mov    rax,QWORD PTR [rbx+0x8]
   14001f00e:	mov    QWORD PTR [rbx+0x1d4],rcx
   14001f015:	mov    BYTE PTR [rbx+0x1dc],0x1
   14001f01c:	mov    dl,BYTE PTR [rax+0x5130]
   14001f022:	mov    BYTE PTR [rbx+0x10b],cl
   14001f028:	mov    BYTE PTR [rbx+0x11e1],cl
   14001f02e:	mov    BYTE PTR [rbx+0x1df],cl
   14001f034:	mov    rcx,rbx
   14001f037:	mov    BYTE PTR [rbx+0x11e0],dl
   14001f03d:	mov    WORD PTR [rbx+0x1dd],0x1
   14001f046:	add    rsp,0x20
   14001f04a:	pop    rbx
   14001f04b:	jmp    0x1400476c0
   14001f050:	rex push rbp
   14001f052:	push   rsi
   14001f053:	push   rdi
   14001f054:	push   r12
   14001f056:	push   r13
   14001f058:	push   r14
   14001f05a:	push   r15
   14001f05c:	lea    rbp,[rsp-0x4190]
   14001f064:	mov    eax,0x4290
   14001f069:	call   0x140055f20
   14001f06e:	sub    rsp,rax
   14001f071:	mov    QWORD PTR [rsp+0x68],0xfffffffffffffffe
   14001f07a:	mov    QWORD PTR [rsp+0x42e0],rbx
   14001f082:	mov    rax,QWORD PTR [rip+0x62e57]        # 0x140081ee0
   14001f089:	xor    rax,rsp
   14001f08c:	mov    QWORD PTR [rbp+0x4180],rax
   14001f093:	mov    r12,r9
   14001f096:	mov    rsi,rdx
   14001f099:	mov    r14,rcx
   14001f09c:	xor    edi,edi
   14001f09e:	cmp    QWORD PTR [rdx+0x4548],rdi
   14001f0a5:	jge    0x14001f0ae
   14001f0a7:	mov    QWORD PTR [rdx+0x4548],rdi
   14001f0ae:	cmp    QWORD PTR [rdx+0x4550],rdi
   14001f0b5:	jge    0x14001f0be
   14001f0b7:	mov    QWORD PTR [rdx+0x4550],rdi
   14001f0be:	mov    rax,QWORD PTR [rcx+0x8]
   14001f0c2:	movzx  r13d,WORD PTR [rax+0x83e2]
   14001f0ca:	mov    WORD PTR [rsp+0x60],r13w
   14001f0d0:	test   r8,r8
   14001f0d3:	jne    0x14001f10a
   14001f0d5:	cmp    BYTE PTR [rcx+0x10b],dil
   14001f0dc:	je     0x14001f103
   14001f0de:	lea    rdx,[rcx+0x10]
   14001f0e2:	movzx  r9d,r13w
   14001f0e6:	mov    rcx,rsi
   14001f0e9:	call   0x140054dcc
   14001f0ee:	test   al,al
   14001f0f0:	jne    0x14001f10a
   14001f0f2:	mov    edx,0x1
   14001f0f7:	lea    rcx,[rip+0x75762]        # 0x140094860
   14001f0fe:	call   0x14001bf08
   14001f103:	xor    al,al
   14001f105:	jmp    0x1400200c9
   14001f10a:	mov    ebx,DWORD PTR [rsi+0x22d4]
   14001f110:	cmp    ebx,0x2
   14001f113:	je     0x14001f1ab
   14001f119:	cmp    ebx,0x77
   14001f11c:	jne    0x14001f13a
   14001f11e:	cmp    BYTE PTR [r14+0x11e1],dil
   14001f125:	je     0x14001f1a1
   14001f127:	lea    r8,[r14+0x11e2]
   14001f12e:	mov    rdx,rsi
   14001f131:	mov    rcx,QWORD PTR [r14+0x8]
   14001f135:	call   0x14001dd7c
   14001f13a:	cmp    ebx,0x3
   14001f13d:	jne    0x14001f15b
   14001f13f:	cmp    BYTE PTR [r14+0x11e1],dil
   14001f146:	je     0x14001f1a1
   14001f148:	lea    r8,[r14+0x11e2]
   14001f14f:	mov    rdx,rsi
   14001f152:	mov    rcx,QWORD PTR [r14+0x8]
   14001f156:	call   0x14001ddcc
   14001f15b:	cmp    ebx,0x5
   14001f15e:	jne    0x14001f1a1
   14001f160:	cmp    BYTE PTR [rsi+0x5824],dil
   14001f167:	je     0x14001f103
   14001f169:	lea    rdx,[r14+0x10]
   14001f16d:	movzx  r9d,r13w
   14001f171:	xor    r8d,r8d
   14001f174:	mov    rcx,rsi
   14001f177:	call   0x140054dcc
   14001f17c:	test   al,al
   14001f17e:	je     0x14001f0f2
   14001f184:	mov    rax,QWORD PTR [rsi]
   14001f187:	xor    r8d,r8d
   14001f18a:	mov    rdx,QWORD PTR [rsi+0x7f78]
   14001f191:	mov    rcx,rsi
   14001f194:	call   QWORD PTR [rax+0x18]
   14001f197:	mov    eax,0x1
   14001f19c:	jmp    0x1400200c9
   14001f1a1:	mov    rcx,rsi
   14001f1a4:	call   0x14000a2c8
   14001f1a9:	jmp    0x14001f197
   14001f1ab:	mov    BYTE PTR [r14+0x11e1],dil
   14001f1b2:	mov    rcx,QWORD PTR [r14+0x8]
   14001f1b6:	cmp    DWORD PTR [rcx+0x6168],edi
   14001f1bc:	jne    0x14001f1da
   14001f1be:	mov    eax,DWORD PTR [rcx+0xa430]
   14001f1c4:	cmp    DWORD PTR [r14+0x1d8],eax
   14001f1cb:	jb     0x14001f1da
   14001f1cd:	cmp    BYTE PTR [r14+0x1dd],dil
   14001f1d4:	jne    0x14001f103
   14001f1da:	mov    BYTE PTR [rsp+0x52],dil
   14001f1df:	lea    rdx,[rsi+0x34f0]
   14001f1e6:	mov    r15d,0x800
   14001f1ec:	mov    DWORD PTR [rsp+0x28],r15d
   14001f1f1:	lea    rax,[rbp+0x3180]
   14001f1f8:	mov    QWORD PTR [rsp+0x20],rax
   14001f1fd:	mov    r9d,0x5
   14001f203:	lea    r8,[rsp+0x52]
   14001f208:	call   0x140013fb8
   14001f20d:	test   eax,eax
   14001f20f:	setne  bl
   14001f212:	mov    DWORD PTR [rsp+0x5c],ebx
   14001f216:	mov    rcx,QWORD PTR [r14+0x8]
   14001f21a:	cmp    DWORD PTR [rcx+0x6164],0x2
   14001f221:	jne    0x14001f269
   14001f223:	add    rcx,0x4030
   14001f22a:	mov    r8d,r15d
   14001f22d:	lea    rdx,[rbp+0x3180]
   14001f234:	call   0x140046158
   14001f239:	mov    rcx,QWORD PTR [r14+0x8]
   14001f23d:	mov    r15d,0x4030
   14001f243:	add    rcx,r15
   14001f246:	call   0x1400327bc
   14001f24b:	mov    WORD PTR [rax],di
   14001f24e:	mov    rcx,QWORD PTR [r14+0x8]
   14001f252:	add    rcx,r15
   14001f255:	call   0x140032288
   14001f25a:	test   al,al
   14001f25c:	je     0x14001f269
   14001f25e:	mov    rax,QWORD PTR [r14+0x8]
   14001f262:	mov    WORD PTR [rax+0x4030],di
   14001f269:	test   bl,bl
   14001f26b:	je     0x14001f27b
   14001f26d:	cmp    BYTE PTR [rsp+0x52],dil
   14001f272:	jne    0x14001f27b
   14001f274:	mov    BYTE PTR [r14+0x1dd],dil
   14001f27b:	mov    rcx,rsi
   14001f27e:	call   0x14000bfa8
   14001f283:	mov    r15d,0x1
   14001f289:	cmp    BYTE PTR [rsi+0x4588],dil
   14001f290:	je     0x14001f33c
   14001f296:	cmp    BYTE PTR [r14+0x1dc],dil
   14001f29d:	je     0x14001f33c
   14001f2a3:	lea    rbx,[r14+0x1e0]
   14001f2aa:	mov    r8d,0x800
   14001f2b0:	mov    rdx,rbx
   14001f2b3:	lea    rcx,[rbp+0xf0]
   14001f2ba:	call   0x140046158
   14001f2bf:	mov    r9b,BYTE PTR [rsi+0x7f92]
   14001f2c6:	mov    r8d,0x800
   14001f2cc:	mov    rdx,rbx
   14001f2cf:	mov    rcx,rbx
   14001f2d2:	call   0x1400329a4
   14001f2d7:	lea    rdx,[rbp+0xf0]
   14001f2de:	mov    rcx,rbx
   14001f2e1:	call   0x140048f34
   14001f2e6:	test   eax,eax
   14001f2e8:	je     0x14001f2ff
   14001f2ea:	mov    rcx,rbx
   14001f2ed:	call   0x140021dec
   14001f2f2:	test   al,al
   14001f2f4:	je     0x14001f2ff
   14001f2f6:	mov    BYTE PTR [r12],r15b
   14001f2fa:	jmp    0x14001f103
   14001f2ff:	cmp    BYTE PTR [r14+0x1de],dil
   14001f306:	jne    0x14001f323
   14001f308:	mov    BYTE PTR [r14+0x1de],r15b
   14001f30f:	lea    rdx,[rsi+0x26]
   14001f313:	mov    r8b,r15b
   14001f316:	mov    rcx,QWORD PTR [r14+0x8]
   14001f31a:	call   0x140039408
   14001f31f:	test   al,al
   14001f321:	jne    0x14001f2f6
   14001f323:	mov    r8d,0x800
   14001f329:	lea    rdx,[rbp+0xf0]
   14001f330:	mov    rcx,rbx
   14001f333:	call   0x140046158
   14001f338:	mov    ebx,DWORD PTR [rsp+0x5c]
   14001f33c:	lea    rcx,[rsi+0x3510]
   14001f343:	lea    rdx,[rbp+0x2180]
   14001f34a:	call   0x140030fe4
   14001f34f:	mov    rax,QWORD PTR [r14+0x8]
   14001f353:	cmp    BYTE PTR [rax+0x61b7],dil
   14001f35a:	jne    0x14001f368
   14001f35c:	lea    rcx,[rbp+0x2180]
   14001f363:	call   0x14003233c
   14001f368:	cmp    BYTE PTR [rsi+0x45e3],dil
   14001f36f:	je     0x14001f3cf
   14001f371:	mov    rax,QWORD PTR [r14+0x8]
   14001f375:	mov    ecx,DWORD PTR [rax+0x73bc]
   14001f37b:	cmp    ecx,r15d
   14001f37e:	je     0x14001f3f5
   14001f380:	cmp    BYTE PTR [rsp+0x52],dil
   14001f385:	jne    0x14001f3f5
   14001f387:	neg    ecx
   14001f389:	sbb    al,al
   14001f38b:	and    al,bl
   14001f38d:	mov    r12b,al
   14001f390:	mov    DWORD PTR [rsp+0x5c],r12d
   14001f395:	xor    edx,edx
   14001f397:	lea    rcx,[rbp+0x2180]
   14001f39e:	call   0x140032740
   14001f3a3:	mov    rcx,QWORD PTR [r14+0x8]
   14001f3a7:	mov    edx,DWORD PTR [rcx+0x73bc]
   14001f3ad:	sub    edx,r15d
   14001f3b0:	cmp    edx,eax
   14001f3b2:	jne    0x14001f3c5
   14001f3b4:	mov    dl,r15b
   14001f3b7:	lea    rcx,[rbp+0x2180]
   14001f3be:	call   0x140032740
   14001f3c3:	jmp    0x14001f3fa
   14001f3c5:	mov    r12b,dil
   14001f3c8:	mov    DWORD PTR [rsp+0x5c],r12d
   14001f3cd:	jmp    0x14001f3fa
   14001f3cf:	mov    rcx,rsi
   14001f3d2:	call   0x14000c120
   14001f3d7:	mov    r12d,DWORD PTR [rsp+0x5c]
   14001f3dc:	test   al,al
   14001f3de:	jne    0x14001f3fa
   14001f3e0:	mov    rax,QWORD PTR [r14+0x8]
   14001f3e4:	movzx  r12d,r12b
   14001f3e8:	cmp    DWORD PTR [rax+0x73bc],r15d
   14001f3ef:	cmova  r12d,edi
   14001f3f3:	jmp    0x14001f3c8
   14001f3f5:	mov    r12d,DWORD PTR [rsp+0x5c]
   14001f3fa:	mov    al,BYTE PTR [rsi+0x4589]
   14001f400:	mov    BYTE PTR [r14+0x10b],al
   14001f407:	mov    BYTE PTR [r14+0x10c],dil
   14001f40e:	mov    rax,QWORD PTR [rsi]
   14001f411:	mov    rdx,QWORD PTR [rsi+0x7f80]
   14001f418:	sub    rdx,QWORD PTR [rsi+0x4548]
   14001f41f:	xor    r8d,r8d
   14001f422:	mov    rcx,rsi
   14001f425:	call   QWORD PTR [rax+0x18]
   14001f428:	mov    bl,dil
   14001f42b:	mov    r9b,dil
   14001f42e:	mov    BYTE PTR [rsp+0x50],dil
   14001f433:	mov    eax,0x45
   14001f438:	cmp    BYTE PTR [r14+0x1dc],dil
   14001f43f:	je     0x14001f48b
   14001f441:	test   r12b,r12b
   14001f444:	jne    0x14001f44f
   14001f446:	cmp    BYTE PTR [rsi+0x7f8c],dil
   14001f44d:	je     0x14001f48b
   14001f44f:	cmp    BYTE PTR [rsi+0x4588],dil
   14001f456:	je     0x14001f48b
   14001f458:	test   r12b,r12b
   14001f45b:	je     0x14001f483
   14001f45d:	lea    rdx,[rsi+0x26]
   14001f461:	lea    r8,[rbp+0x2180]
   14001f468:	mov    ecx,eax
   14001f46a:	call   0x140001358
   14001f46f:	mov    edx,0x6
   14001f474:	lea    rcx,[rip+0x753e5]        # 0x140094860
   14001f47b:	call   0x14001bf08
   14001f480:	mov    r9b,dil
   14001f483:	mov    r12b,dil
   14001f486:	mov    DWORD PTR [rsp+0x5c],r12d
   14001f48b:	mov    BYTE PTR [r14+0x1dc],dil
   14001f492:	test   r12b,r12b
   14001f495:	jne    0x14001f4ac
   14001f497:	mov    r9b,BYTE PTR [rsi+0x7f8c]
   14001f49e:	mov    BYTE PTR [rsp+0x50],r9b
   14001f4a3:	test   r9b,r9b
   14001f4a6:	je     0x140020099
   14001f4ac:	mov    rax,QWORD PTR [r14+0x8]
   14001f4b0:	mov    cl,BYTE PTR [rax+0x62f9]
   14001f4b6:	test   cl,cl
   14001f4b8:	je     0x14001f4c4
   14001f4ba:	cmp    r13w,0x49
   14001f4bf:	mov    r8b,r15b
   14001f4c2:	jne    0x14001f4c7
   14001f4c4:	mov    r8b,dil
   14001f4c7:	test   cl,cl
   14001f4c9:	sete   dl
   14001f4cc:	lea    rcx,[rbp+0x2180]
   14001f4d3:	call   0x140060460
   14001f4d8:	test   al,al
   14001f4da:	je     0x14001f103
   14001f4e0:	lea    r12,[r14+0x11e2]
   14001f4e7:	mov    QWORD PTR [rsp+0x20],0x800
   14001f4f0:	mov    r9,r12
   14001f4f3:	lea    r8,[rbp+0x2180]
   14001f4fa:	mov    rdx,rsi
   14001f4fd:	mov    rcx,r14
   14001f500:	call   0x14001e95c
   14001f505:	cmp    BYTE PTR [rsp+0x50],dil
   14001f50a:	jne    0x14001f51f
   14001f50c:	cmp    WORD PTR [r12],di
   14001f511:	je     0x14001f51f
   14001f513:	cmp    BYTE PTR [rsi+0x4588],dil
   14001f51a:	mov    bl,r15b
   14001f51d:	je     0x14001f522
   14001f51f:	mov    bl,dil
   14001f522:	mov    DWORD PTR [rsp+0x54],ebx
   14001f526:	mov    rax,QWORD PTR [r14+0x8]
   14001f52a:	mov    ecx,0x58
   14001f52f:	cmp    BYTE PTR [rax+0x615f],dil
   14001f536:	jne    0x14001f541
   14001f538:	cmp    BYTE PTR [rax+0x6160],dil
   14001f53f:	je     0x14001f5ba
   14001f541:	mov    eax,0x45
   14001f546:	cmp    r13w,ax
   14001f54a:	je     0x14001f552
   14001f54c:	cmp    r13w,cx
   14001f550:	jne    0x14001f5ba
   14001f552:	mov    QWORD PTR [rbp+0x1100],rdi
   14001f559:	mov    QWORD PTR [rbp+0x1108],rdi
   14001f560:	mov    QWORD PTR [rbp+0x1110],rdi
   14001f567:	xor    r8d,r8d
   14001f56a:	lea    rdx,[rbp+0xf0]
   14001f571:	mov    rcx,r12
   14001f574:	call   0x140023280
   14001f579:	test   al,al
   14001f57b:	je     0x14001f5a5
   14001f57d:	mov    rcx,QWORD PTR [rsi+0x4530]
   14001f584:	mov    rax,QWORD PTR [rbp+0x1100]
   14001f58b:	cmp    rax,rcx
   14001f58e:	ja     0x14001f592
   14001f590:	jne    0x14001f5ba
   14001f592:	cmp    BYTE PTR [rbp+0x10fc],dil
   14001f599:	je     0x14001f5a0
   14001f59b:	cmp    rax,QWORD PTR [r14]
   14001f59e:	jae    0x14001f5ba
   14001f5a0:	mov    bl,dil
   14001f5a3:	jmp    0x14001f5b6
   14001f5a5:	mov    rax,QWORD PTR [r14+0x8]
   14001f5a9:	movzx  ebx,bl
   14001f5ac:	cmp    BYTE PTR [rax+0x615f],dil
   14001f5b3:	cmovne ebx,edi
   14001f5b6:	mov    DWORD PTR [rsp+0x54],ebx
   14001f5ba:	cmp    BYTE PTR [rsi+0x458b],dil
   14001f5c1:	je     0x14001f608
   14001f5c3:	lea    r8,[rbp+0x2180]
   14001f5ca:	mov    rdx,rsi
   14001f5cd:	mov    rcx,r14
   14001f5d0:	call   0x14001e814
   14001f5d5:	test   al,al
   14001f5d7:	jne    0x14001f5e5
   14001f5d9:	mov    BYTE PTR [r14+0x21e2],r15b
   14001f5e0:	jmp    0x14001f103
   14001f5e5:	mov    rax,QWORD PTR [r14+0x8]
   14001f5e9:	cmp    BYTE PTR [rax+0x5130],dil
   14001f5f0:	jne    0x14001f608
   14001f5f2:	mov    edx,r15d
   14001f5f5:	lea    rcx,[rip+0x75264]        # 0x140094860
   14001f5fc:	call   0x14001bf08
   14001f601:	mov    bl,dil
   14001f604:	mov    DWORD PTR [rsp+0x54],ebx
   14001f608:	lea    r8,[rbp+0x2180]
   14001f60f:	mov    rdx,rsi
   14001f612:	mov    rcx,r14
   14001f615:	call   0x14001e044
   14001f61a:	test   al,al
   14001f61c:	jne    0x14001f646
   14001f61e:	mov    edx,0x2
   14001f623:	lea    rcx,[rip+0x75236]        # 0x140094860
   14001f62a:	call   0x14001bf08
   14001f62f:	mov    rcx,rsi
   14001f632:	call   0x14000a2c8
   14001f637:	cmp    BYTE PTR [rsi+0x7f8c],dil
   14001f63e:	sete   al
   14001f641:	jmp    0x1400200c9
   14001f646:	mov    rax,QWORD PTR [r14+0x8]
   14001f64a:	add    rax,0x5030
   14001f650:	lea    rcx,[rbp-0x20]
   14001f654:	mov    edx,0x2
   14001f659:	lea    r8d,[rdx+0x7e]
   14001f65d:	movups xmm0,XMMWORD PTR [rax]
   14001f660:	movups XMMWORD PTR [rcx],xmm0
   14001f663:	movups xmm1,XMMWORD PTR [rax+0x10]
   14001f667:	movups XMMWORD PTR [rcx+0x10],xmm1
   14001f66b:	movups xmm0,XMMWORD PTR [rax+0x20]
   14001f66f:	movups XMMWORD PTR [rcx+0x20],xmm0
   14001f673:	movups xmm1,XMMWORD PTR [rax+0x30]
   14001f677:	movups XMMWORD PTR [rcx+0x30],xmm1
   14001f67b:	movups xmm0,XMMWORD PTR [rax+0x40]
   14001f67f:	movups XMMWORD PTR [rcx+0x40],xmm0
   14001f683:	movups xmm1,XMMWORD PTR [rax+0x50]
   14001f687:	movups XMMWORD PTR [rcx+0x50],xmm1
   14001f68b:	movups xmm0,XMMWORD PTR [rax+0x60]
   14001f68f:	movups XMMWORD PTR [rcx+0x60],xmm0
   14001f693:	add    rcx,r8
   14001f696:	movups xmm1,XMMWORD PTR [rax+0x70]
   14001f69a:	movups XMMWORD PTR [rcx-0x10],xmm1
   14001f69e:	add    rax,r8
   14001f6a1:	sub    rdx,r15
   14001f6a4:	jne    0x14001f65d
   14001f6a6:	movzx  eax,WORD PTR [rax]
   14001f6a9:	mov    WORD PTR [rcx],ax
   14001f6ac:	lea    r8,[rbp-0x20]
   14001f6b0:	mov    rdx,rsi
   14001f6b3:	mov    rcx,r14
   14001f6b6:	call   0x14001e0b0
   14001f6bb:	lea    r9,[rsi+0x45bb]
   14001f6c2:	lea    r8,[rsi+0x45a1]
   14001f6c9:	mov    al,BYTE PTR [rsi+0x4590]
   14001f6cf:	lea    rcx,[rsi+0x4591]
   14001f6d6:	neg    al
   14001f6d8:	sbb    rdx,rdx
   14001f6db:	and    rdx,rcx
   14001f6de:	lea    rax,[rbp+0x2170]
   14001f6e5:	mov    QWORD PTR [rsp+0x40],rax
   14001f6ea:	mov    QWORD PTR [rsp+0x38],r9
   14001f6ef:	mov    eax,DWORD PTR [rsi+0x45dc]
   14001f6f5:	mov    DWORD PTR [rsp+0x30],eax
   14001f6f9:	mov    QWORD PTR [rsp+0x28],r8
   14001f6fe:	mov    QWORD PTR [rsp+0x20],rdx
   14001f703:	lea    r9,[rbp-0x20]
   14001f707:	mov    r8d,DWORD PTR [rsi+0x458c]
   14001f70e:	xor    edx,edx
   14001f710:	lea    rcx,[r14+0x10]
   14001f714:	call   0x14003750c
   14001f719:	cmp    BYTE PTR [rsi+0x458b],dil
   14001f720:	je     0x14001f76a
   14001f722:	cmp    BYTE PTR [rsi+0x45b1],dil
   14001f729:	je     0x14001f76a
   14001f72b:	mov    rax,QWORD PTR [rsi+0x45b2]
   14001f732:	cmp    rax,QWORD PTR [rbp+0x2170]
   14001f739:	je     0x14001f76a
   14001f73b:	cmp    BYTE PTR [rsi+0x7fa0],dil
   14001f742:	jne    0x14001f76a
   14001f744:	lea    rdx,[rsi+0x26]
   14001f748:	mov    ecx,0x6
   14001f74d:	call   0x1400013b0
   14001f752:	mov    edx,0xb
   14001f757:	lea    rcx,[rip+0x75102]        # 0x140094860
   14001f75e:	call   0x14001bf08
   14001f763:	mov    bl,dil
   14001f766:	mov    DWORD PTR [rsp+0x54],ebx
   14001f76a:	lea    rcx,[rbp+0x1140]
   14001f771:	call   0x14002071c
   14001f776:	nop
   14001f777:	mov    eax,DWORD PTR [rsi+0x45f8]
   14001f77d:	test   eax,eax
   14001f77f:	setne  cl
   14001f782:	mov    BYTE PTR [rsp+0x59],cl
   14001f786:	mov    edx,0x50
   14001f78b:	test   cl,cl
   14001f78d:	je     0x14001f81e
   14001f793:	cmp    eax,0x5
   14001f796:	je     0x14001f81e
   14001f79c:	test   bl,bl
   14001f79e:	je     0x14001f898
   14001f7a4:	cmp    r13w,dx
   14001f7a8:	je     0x14001f894
   14001f7ae:	mov    rax,QWORD PTR [r14+0x8]
   14001f7b2:	cmp    BYTE PTR [rax+0x62f9],dil
   14001f7b9:	jne    0x14001f894
   14001f7bf:	mov    BYTE PTR [rsp+0x51],dil
   14001f7c4:	mov    rcx,r12
   14001f7c7:	call   0x140021dec
   14001f7cc:	test   al,al
   14001f7ce:	je     0x14001f812
   14001f7d0:	cmp    BYTE PTR [rsp+0x51],dil
   14001f7d5:	jne    0x14001f819
   14001f7d7:	lea    rax,[rsi+0x4530]
   14001f7de:	mov    BYTE PTR [rsp+0x38],dil
   14001f7e3:	mov    QWORD PTR [rsp+0x30],rax
   14001f7e8:	mov    rax,QWORD PTR [rsi+0x4550]
   14001f7ef:	mov    QWORD PTR [rsp+0x28],rax
   14001f7f4:	lea    rax,[rsp+0x51]
   14001f7f9:	mov    QWORD PTR [rsp+0x20],rax
   14001f7fe:	mov    r9d,0x800
   14001f804:	mov    r8,r12
   14001f807:	xor    edx,edx
   14001f809:	mov    rcx,QWORD PTR [r14+0x8]
   14001f80d:	call   0x1400202cc
   14001f812:	cmp    BYTE PTR [rsp+0x51],dil
   14001f817:	je     0x14001f894
   14001f819:	mov    bl,dil
   14001f81c:	jmp    0x14001f890
   14001f81e:	mov    rcx,rsi
   14001f821:	call   0x14000c120
   14001f826:	test   al,al
   14001f828:	je     0x14001f878
   14001f82a:	test   bl,bl
   14001f82c:	je     0x14001f8c8
   14001f832:	sub    r13w,0x45
   14001f837:	mov    eax,0xb
   14001f83c:	cmp    r13w,ax
   14001f840:	ja     0x14001f850
   14001f842:	movzx  eax,r13w
   14001f846:	mov    ecx,0x811
   14001f84b:	bt     ecx,eax
   14001f84e:	jb     0x14001f8c8
   14001f850:	mov    rax,QWORD PTR [r14+0x8]
   14001f854:	cmp    DWORD PTR [rax+0x6164],r15d
   14001f85b:	je     0x14001f8c8
   14001f85d:	add    DWORD PTR [r14+0x1d0],r15d
   14001f864:	lea    r8,[rbp+0x2180]
   14001f86b:	mov    rdx,rsi
   14001f86e:	mov    rcx,r14
   14001f871:	call   0x14001e378
   14001f876:	jmp    0x14001f8c8
   14001f878:	test   bl,bl
   14001f87a:	je     0x14001f898
   14001f87c:	lea    r8,[rbp+0x1140]
   14001f883:	mov    rdx,rsi
   14001f886:	mov    rcx,r14
   14001f889:	call   0x14001e65c
   14001f88e:	mov    bl,al
   14001f890:	mov    DWORD PTR [rsp+0x54],ebx
   14001f894:	test   bl,bl
   14001f896:	jne    0x14001f8eb
   14001f898:	cmp    BYTE PTR [rsi+0x7f8c],dil
   14001f89f:	je     0x14001f8e3
   14001f8a1:	mov    bl,r15b
   14001f8a4:	mov    BYTE PTR [rsp+0x50],bl
   14001f8a8:	mov    BYTE PTR [rsp+0x54],r15b
   14001f8ad:	mov    r9b,r15b
   14001f8b0:	xor    r8d,r8d
   14001f8b3:	xor    edx,edx
   14001f8b5:	lea    rcx,[rbp+0x2180]
   14001f8bc:	call   0x140060460
   14001f8c1:	test   al,al
   14001f8c3:	jne    0x14001f8ef
   14001f8c5:	mov    r15b,dil
   14001f8c8:	lea    rcx,[rbp+0x1140]
   14001f8cf:	call   0x140020758
   14001f8d4:	nop
   14001f8d5:	lea    rcx,[rbp-0x20]
   14001f8d9:	call   0x140043640
   14001f8de:	jmp    0x1400200c6
   14001f8e3:	test   bl,bl
   14001f8e5:	je     0x140020070
   14001f8eb:	mov    bl,BYTE PTR [rsp+0x50]
   14001f8ef:	mov    rax,QWORD PTR [r14+0x8]
   14001f8f3:	cmp    BYTE PTR [rax+0x62f9],dil
   14001f8fa:	je     0x14001f90c
   14001f8fc:	mov    BYTE PTR [r14+0x11e1],r15b
   14001f903:	cmp    BYTE PTR [rax+0x62f9],dil
   14001f90a:	jne    0x14001f913
   14001f90c:	test   bl,bl
   14001f90e:	mov    bl,dil
   14001f911:	je     0x14001f916
   14001f913:	mov    bl,r15b
   14001f916:	mov    BYTE PTR [rsp+0x51],bl
   14001f91a:	lea    r8,[rbp+0x2180]
   14001f921:	mov    edx,r15d
   14001f924:	lea    rcx,[rip+0x74f15]        # 0x140094840
   14001f92b:	call   0x1400259c8
   14001f930:	mov    al,BYTE PTR [rsp+0x50]
   14001f934:	test   al,al
   14001f936:	jne    0x14001f986
   14001f938:	test   bl,bl
   14001f93a:	jne    0x14001f97f
   14001f93c:	mov    ecx,0x50
   14001f941:	cmp    r13w,cx
   14001f945:	je     0x14001f97f
   14001f947:	lea    rcx,[rbp+0x1140]
   14001f94e:	call   0x140020c58
   14001f953:	test   al,al
   14001f955:	je     0x14001f97b
   14001f957:	mov    r8,r12
   14001f95a:	lea    rdx,[rsi+0x26]
   14001f95e:	mov    ecx,0x3a
   14001f963:	call   0x140001358
   14001f968:	mov    r8,r12
   14001f96b:	lea    rdx,[rsi+0x26]
   14001f96f:	lea    rcx,[rip+0x74eea]        # 0x140094860
   14001f976:	call   0x14001c0f0
   14001f97b:	mov    al,BYTE PTR [rsp+0x50]
   14001f97f:	add    DWORD PTR [r14+0x1d0],r15d
   14001f986:	add    DWORD PTR [r14+0x1d4],r15d
   14001f98d:	cmp    r13w,0x49
   14001f992:	je     0x14001f9fe
   14001f994:	test   al,al
   14001f996:	je     0x14001f9ab
   14001f998:	mov    ecx,0xd62
   14001f99d:	call   0x140040118
   14001f9a2:	lea    rdx,[rbp+0x2180]
   14001f9a9:	jmp    0x14001f9f6
   14001f9ab:	mov    rax,QWORD PTR [r14+0x8]
   14001f9af:	movzx  ecx,r13w
   14001f9b3:	mov    edx,0x54
   14001f9b8:	cmp    BYTE PTR [rax+0x62f9],dil
   14001f9bf:	cmovne ecx,edx
   14001f9c2:	lea    eax,[rdx-0xf]
   14001f9c5:	cmp    ecx,eax
   14001f9c7:	je     0x14001f9e9
   14001f9c9:	lea    eax,[rdx-0x4]
   14001f9cc:	cmp    ecx,eax
   14001f9ce:	je     0x14001f9e2
   14001f9d0:	cmp    ecx,edx
   14001f9d2:	je     0x14001f9db
   14001f9d4:	cmp    ecx,0x58
   14001f9d7:	je     0x14001f9e9
   14001f9d9:	jmp    0x14001f9fe
   14001f9db:	mov    ecx,0xd64
   14001f9e0:	jmp    0x14001f99d
   14001f9e2:	mov    ecx,0xd6c
   14001f9e7:	jmp    0x14001f99d
   14001f9e9:	mov    ecx,0xd66
   14001f9ee:	call   0x140040118
   14001f9f3:	mov    rdx,r12
   14001f9f6:	mov    rcx,rax
   14001f9f9:	call   0x14001796c
   14001f9fe:	mov    rax,QWORD PTR [r14+0x8]
   14001fa02:	cmp    BYTE PTR [rax+0x6150],dil
   14001fa09:	jne    0x14001fa17
   14001fa0b:	lea    rcx,[rip+0x4e796]        # 0x14006e1a8
   14001fa12:	call   0x14001796c
   14001fa17:	mov    QWORD PTR [r14+0x128],rdi
   14001fa1e:	mov    QWORD PTR [r14+0x130],rdi
   14001fa25:	lea    r12,[rsi+0x4560]
   14001fa2c:	lea    rbx,[r14+0x1a0]
   14001fa33:	mov    rax,QWORD PTR [r14+0x8]
   14001fa37:	mov    r8d,DWORD PTR [rax+0x83d0]
   14001fa3e:	mov    edx,DWORD PTR [r12]
   14001fa42:	mov    rcx,rbx
   14001fa45:	call   0x1400241ac
   14001fa4a:	mov    rax,QWORD PTR [r14+0x8]
   14001fa4e:	lea    rcx,[r14+0x160]
   14001fa55:	mov    r8d,DWORD PTR [rax+0x83d0]
   14001fa5c:	mov    edx,DWORD PTR [r12]
   14001fa60:	call   0x1400241ac
   14001fa65:	mov    rax,QWORD PTR [rsi+0x4548]
   14001fa6c:	mov    QWORD PTR [r14+0xa0],rax
   14001fa73:	lea    r8,[rbp+0x1140]
   14001fa7a:	mov    rdx,rsi
   14001fa7d:	lea    rcx,[r14+0x10]
   14001fa81:	call   0x140037588
   14001fa86:	mov    r12b,BYTE PTR [rsp+0x51]
   14001fa8b:	mov    BYTE PTR [r14+0xa9],r12b
   14001fa92:	mov    cl,BYTE PTR [rsp+0x50]
   14001fa96:	mov    BYTE PTR [r14+0xaa],cl
   14001fa9d:	test   r12b,r12b
   14001faa0:	jne    0x14001fb6b
   14001faa6:	cmp    BYTE PTR [rsi+0x7fa0],dil
   14001faad:	jne    0x14001fb67
   14001fab3:	mov    eax,0xffffffff
   14001fab8:	cmp    QWORD PTR [rsi+0x4550],rax
   14001fabf:	jle    0x14001fb1a
   14001fac1:	mov    al,BYTE PTR [r14+0x21e3]
   14001fac8:	test   al,al
   14001faca:	jne    0x14001fafc
   14001facc:	cmp    BYTE PTR [r14+0x21e4],dil
   14001fad3:	jne    0x14001fb1a
   14001fad5:	test   al,al
   14001fad7:	jne    0x14001fafc
   14001fad9:	mov    rcx,QWORD PTR [r14+0x8]
   14001fadd:	add    rcx,0x201e
   14001fae4:	call   0x1400220b4
   14001fae9:	mov    BYTE PTR [r14+0x21e3],al
   14001faf0:	test   al,al
   14001faf2:	sete   al
   14001faf5:	mov    BYTE PTR [r14+0x21e4],al
   14001fafc:	cmp    BYTE PTR [r14+0x21e3],dil
   14001fb03:	je     0x14001fb1a
   14001fb05:	mov    QWORD PTR [rbp-0x30],rdi
   14001fb09:	mov    DWORD PTR [rbp-0x28],0x74
   14001fb10:	lea    rcx,[rsp+0x70]
   14001fb15:	call   0x1400479a4
   14001fb1a:	cmp    BYTE PTR [rsi+0x7fa0],dil
   14001fb21:	jne    0x14001fb67
   14001fb23:	mov    rcx,QWORD PTR [rsi+0x4550]
   14001fb2a:	mov    rax,QWORD PTR [rsi+0x4548]
   14001fb31:	shl    rax,0xb
   14001fb35:	cmp    rax,rcx
   14001fb38:	jle    0x14001fb67
   14001fb3a:	cmp    rcx,0x5f5e100
   14001fb41:	jl     0x14001fb54
   14001fb43:	mov    rcx,rsi
   14001fb46:	call   0x140020b88
   14001fb4b:	cmp    rax,QWORD PTR [rsi+0x4548]
   14001fb52:	jle    0x14001fb67
   14001fb54:	mov    rdx,QWORD PTR [rsi+0x4550]
   14001fb5b:	lea    rcx,[rbp+0x1140]
   14001fb62:	call   0x140020e04
   14001fb67:	mov    cl,BYTE PTR [rsp+0x50]
   14001fb6b:	cmp    r13w,0x49
   14001fb70:	jne    0x14001fb79
   14001fb72:	test   cl,cl
   14001fb74:	mov    al,r15b
   14001fb77:	je     0x14001fb7c
   14001fb79:	mov    al,dil
   14001fb7c:	mov    BYTE PTR [r14+0x101],al
   14001fb83:	cmp    r13w,0x49
   14001fb88:	jne    0x14001fbb2
   14001fb8a:	test   cl,cl
   14001fb8c:	jne    0x14001fbb2
   14001fb8e:	lea    r9,[rsi+0x26]
   14001fb92:	mov    r8,QWORD PTR [r14+0x8]
   14001fb96:	add    r8,0x83e4
   14001fb9d:	lea    rax,[rsi+0x3510]
   14001fba4:	mov    QWORD PTR [rsp+0x20],rax
   14001fba9:	xor    edx,edx
   14001fbab:	xor    ecx,ecx
   14001fbad:	call   0x1400238e4
   14001fbb2:	mov    rcx,QWORD PTR [r14+0x8]
   14001fbb6:	cmp    BYTE PTR [rcx+0x61b4],dil
   14001fbbd:	sete   BYTE PTR [rbp+0x115b]
   14001fbc4:	test   r12b,r12b
   14001fbc7:	jne    0x14001fbde
   14001fbc9:	cmp    BYTE PTR [rsp+0x50],dil
   14001fbce:	jne    0x14001fbde
   14001fbd0:	mov    eax,0x50
   14001fbd5:	cmp    r13w,ax
   14001fbd9:	mov    r12b,r15b
   14001fbdc:	jne    0x14001fbe1
   14001fbde:	mov    r12b,dil
   14001fbe1:	mov    BYTE PTR [rsp+0x58],r15b
   14001fbe6:	mov    r13b,r15b
   14001fbe9:	cmp    BYTE PTR [rsp+0x59],dil
   14001fbee:	je     0x14001fcff
   14001fbf4:	mov    ebx,DWORD PTR [rsi+0x45f8]
   14001fbfa:	lea    eax,[rbx-0x4]
   14001fbfd:	cmp    eax,r15d
   14001fc00:	jbe    0x14001fc48
   14001fc02:	lea    eax,[rbx-0x1]
   14001fc05:	cmp    eax,0x2
   14001fc08:	jbe    0x14001fc2a
   14001fc0a:	lea    rdx,[rsi+0x26]
   14001fc0e:	lea    r9,[r14+0x11e2]
   14001fc15:	mov    r8,r9
   14001fc18:	mov    ecx,0x46
   14001fc1d:	call   0x140001358
   14001fc22:	mov    r13b,dil
   14001fc25:	jmp    0x14001fcd8
   14001fc2a:	test   r12b,r12b
   14001fc2d:	je     0x14001fcca
   14001fc33:	lea    r9,[r14+0x11e2]
   14001fc3a:	mov    r8,rsi
   14001fc3d:	lea    rdx,[r14+0x10]
   14001fc41:	call   0x14001d218
   14001fc46:	jmp    0x14001fcc3
   14001fc48:	lea    r8,[rsi+0x45fc]
   14001fc4f:	mov    QWORD PTR [rsp+0x20],0x800
   14001fc58:	lea    r9,[rbp+0xf0]
   14001fc5f:	mov    rdx,rsi
   14001fc62:	mov    rcx,r14
   14001fc65:	call   0x14001e95c
   14001fc6a:	test   r12b,r12b
   14001fc6d:	je     0x14001fcca
   14001fc6f:	cmp    WORD PTR [rbp+0xf0],di
   14001fc76:	je     0x14001fcca
   14001fc78:	lea    r9,[r14+0x11e2]
   14001fc7f:	cmp    ebx,0x4
   14001fc82:	jne    0x14001fc9b
   14001fc84:	mov    r8d,0x800
   14001fc8a:	lea    rdx,[rbp+0xf0]
   14001fc91:	mov    rcx,r9
   14001fc94:	call   0x14001cbc8
   14001fc99:	jmp    0x14001fcc3
   14001fc9b:	lea    r8,[rsi+0x26]
   14001fc9f:	mov    QWORD PTR [rsp+0x28],0x800
   14001fca8:	lea    rax,[rbp+0xf0]
   14001fcaf:	mov    QWORD PTR [rsp+0x20],rax
   14001fcb4:	lea    rdx,[rbp+0x1140]
   14001fcbb:	mov    rcx,r14
   14001fcbe:	call   0x1400200f4
   14001fcc3:	mov    r13b,al
   14001fcc6:	test   al,al
   14001fcc8:	je     0x14001fcd8
   14001fcca:	cmp    DWORD PTR [rsi+0x7f88],0x2
   14001fcd1:	jne    0x14001fcdd
   14001fcd3:	test   r12b,r12b
   14001fcd6:	jne    0x14001fce2
   14001fcd8:	mov    BYTE PTR [rsp+0x58],dil
   14001fcdd:	test   r12b,r12b
   14001fce0:	je     0x14001fcea
   14001fce2:	test   r13b,r13b
   14001fce5:	mov    eax,r15d
   14001fce8:	jne    0x14001fcec
   14001fcea:	mov    eax,edi
   14001fcec:	mov    BYTE PTR [r14+0x11e1],al
   14001fcf3:	lea    rbx,[r14+0x1a0]
   14001fcfa:	jmp    0x14001fdad
   14001fcff:	cmp    BYTE PTR [rsi+0x4588],dil
   14001fd06:	jne    0x14001fdad
   14001fd0c:	cmp    BYTE PTR [rsi+0x350a],dil
   14001fd13:	jne    0x14001fd2d
   14001fd15:	mov    rdx,QWORD PTR [rsi+0x4550]
   14001fd1c:	lea    rax,[r14+0x10]
   14001fd20:	mov    rcx,rax
   14001fd23:	call   0x140020228
   14001fd28:	jmp    0x14001fdad
   14001fd2d:	mov    r8b,BYTE PTR [rsi+0x45e0]
   14001fd34:	mov    rdx,QWORD PTR [rsi+0x45e8]
   14001fd3b:	mov    rcx,QWORD PTR [r14+0x1c8]
   14001fd42:	call   0x14004b824
   14001fd47:	mov    rax,QWORD PTR [rsi+0x4550]
   14001fd4e:	mov    rcx,QWORD PTR [r14+0x1c8]
   14001fd55:	mov    QWORD PTR [rcx+0x4da0],rax
   14001fd5c:	mov    BYTE PTR [rcx+0x4db8],dil
   14001fd63:	cmp    DWORD PTR [rsi+0x7f88],0x3
   14001fd6a:	je     0x14001fd93
   14001fd6c:	mov    edx,0xf
   14001fd71:	cmp    BYTE PTR [rsi+0x3509],dl
   14001fd77:	ja     0x14001fd93
   14001fd79:	cmp    DWORD PTR [r14+0x1d4],r15d
   14001fd80:	jbe    0x14001fd8e
   14001fd82:	cmp    BYTE PTR [rsi+0x7f8c],dil
   14001fd89:	mov    r8b,r15b
   14001fd8c:	jne    0x14001fda1
   14001fd8e:	mov    r8b,dil
   14001fd91:	jmp    0x14001fda1
   14001fd93:	movzx  edx,BYTE PTR [rsi+0x3509]
   14001fd9a:	mov    r8b,BYTE PTR [rsi+0x45e0]
   14001fda1:	mov    rcx,QWORD PTR [r14+0x1c8]
   14001fda8:	call   0x14004ab9c
   14001fdad:	mov    rcx,rsi
   14001fdb0:	call   0x14000a2c8
   14001fdb5:	cmp    BYTE PTR [rsi+0x4589],dil
   14001fdbc:	jne    0x14001fde9
   14001fdbe:	mov    al,BYTE PTR [rsi+0x45ba]
   14001fdc4:	neg    al
   14001fdc6:	sbb    r8,r8
   14001fdc9:	lea    rax,[rsi+0x45bb]
   14001fdd0:	and    r8,rax
   14001fdd3:	lea    rdx,[rsi+0x4560]
   14001fdda:	mov    rcx,rbx
   14001fddd:	call   0x14002413c
   14001fde2:	test   al,al
   14001fde4:	mov    al,r15b
   14001fde7:	jne    0x14001fdec
   14001fde9:	mov    al,dil
   14001fdec:	cmp    BYTE PTR [rsi+0x45e0],dil
   14001fdf3:	jne    0x14001fdfe
   14001fdf5:	mov    BYTE PTR [r14+0x1df],dil
   14001fdfc:	jmp    0x14001fe1b
   14001fdfe:	cmp    BYTE PTR [rsi+0x350a],dil
   14001fe05:	je     0x14001fe1b
   14001fe07:	cmp    QWORD PTR [rsi+0x4550],rdi
   14001fe0e:	jle    0x14001fe1b
   14001fe10:	test   al,al
   14001fe12:	je     0x14001fe1b
   14001fe14:	mov    BYTE PTR [r14+0x1df],r15b
   14001fe1b:	mov    bl,dil
   14001fe1e:	cmp    BYTE PTR [rsp+0x50],dil
   14001fe23:	jne    0x14001fef5
   14001fe29:	cmp    BYTE PTR [rsp+0x58],dil
   14001fe2e:	je     0x14001fef5
   14001fe34:	test   al,al
   14001fe36:	je     0x14001fea1
   14001fe38:	movzx  r12d,WORD PTR [rsp+0x60]
   14001fe3e:	mov    eax,0x50
   14001fe43:	cmp    r12w,ax
   14001fe47:	je     0x14001ff07
   14001fe4d:	cmp    r12w,0x49
   14001fe52:	je     0x14001ff07
   14001fe58:	cmp    DWORD PTR [rsi+0x4560],edi
   14001fe5e:	jne    0x14001fe69
   14001fe60:	lea    rax,[rip+0x4e351]        # 0x14006e1b8
   14001fe67:	jmp    0x14001fe73
   14001fe69:	mov    ecx,0xd20
   14001fe6e:	call   0x140040118
   14001fe73:	mov    rcx,QWORD PTR [r14+0x8]
   14001fe77:	lea    r8,[rip+0x4e336]        # 0x14006e1b4
   14001fe7e:	lea    rdx,[rip+0x4e33b]        # 0x14006e1c0
   14001fe85:	cmp    BYTE PTR [rcx+0x6150],dil
   14001fe8c:	cmovne rdx,r8
   14001fe90:	mov    r8,rax
   14001fe93:	lea    rcx,[rip+0x4e336]        # 0x14006e1d0
   14001fe9a:	call   0x14001796c
   14001fe9f:	jmp    0x14001ff07
   14001fea1:	cmp    BYTE PTR [rsi+0x458b],dil
   14001fea8:	je     0x14001feca
   14001feaa:	cmp    BYTE PTR [rsi+0x45b1],dil
   14001feb1:	je     0x14001febc
   14001feb3:	cmp    BYTE PTR [rsi+0x7fa0],dil
   14001feba:	je     0x14001feca
   14001febc:	cmp    BYTE PTR [r14+0x1df],dil
   14001fec3:	mov    ecx,0x4
   14001fec8:	je     0x14001fecf
   14001feca:	mov    ecx,0x3
   14001fecf:	lea    r8,[rbp+0x2180]
   14001fed6:	lea    rdx,[rsi+0x26]
   14001feda:	call   0x140001358
   14001fedf:	mov    bl,r15b
   14001fee2:	mov    edx,0x3
   14001fee7:	lea    rcx,[rip+0x74972]        # 0x140094860
   14001feee:	call   0x14001bf08
   14001fef3:	jmp    0x14001ff01
   14001fef5:	lea    rcx,[rip+0x4e2e4]        # 0x14006e1e0
   14001fefc:	call   0x14001796c
   14001ff01:	movzx  r12d,WORD PTR [rsp+0x60]
   14001ff07:	cmp    BYTE PTR [rsp+0x51],dil
   14001ff0c:	jne    0x14002006c
   14001ff12:	mov    eax,0x58
   14001ff17:	cmp    r12w,ax
   14001ff1b:	je     0x14001ff2c
   14001ff1d:	mov    eax,0x45
   14001ff22:	cmp    r12w,ax
   14001ff26:	jne    0x14002006c
   14001ff2c:	cmp    BYTE PTR [rsp+0x59],dil
   14001ff31:	je     0x14001ff49
   14001ff33:	cmp    DWORD PTR [rsi+0x45f8],0x5
   14001ff3a:	jne    0x14002006c
   14001ff40:	test   r13b,r13b
   14001ff43:	je     0x14002006c
   14001ff49:	test   bl,bl
   14001ff4b:	je     0x14001ff6a
   14001ff4d:	mov    rax,QWORD PTR [r14+0x8]
   14001ff51:	cmp    BYTE PTR [rax+0x61b4],dil
   14001ff58:	je     0x14002006c
   14001ff5e:	lea    rcx,[rbp+0x1140]
   14001ff65:	call   0x14002122c
   14001ff6a:	mov    rax,QWORD PTR [r14+0x8]
   14001ff6e:	cmp    BYTE PTR [rax+0x615c],dil
   14001ff75:	je     0x14001ff7e
   14001ff77:	and    DWORD PTR [rsi+0x350c],0xffffffdf
   14001ff7e:	mov    rdx,QWORD PTR [r14+0x8]
   14001ff82:	lea    rbx,[rsi+0x4540]
   14001ff89:	lea    r12,[rsi+0x4530]
   14001ff90:	mov    eax,DWORD PTR [rdx+0x73cc]
   14001ff96:	neg    eax
   14001ff98:	sbb    r9,r9
   14001ff9b:	and    r9,rbx
   14001ff9e:	mov    eax,DWORD PTR [rdx+0x73c8]
   14001ffa4:	lea    rcx,[rsi+0x4538]
   14001ffab:	neg    eax
   14001ffad:	sbb    r8,r8
   14001ffb0:	and    r8,rcx
   14001ffb3:	mov    eax,DWORD PTR [rdx+0x73c4]
   14001ffb9:	neg    eax
   14001ffbb:	sbb    rdx,rdx
   14001ffbe:	and    rdx,r12
   14001ffc1:	lea    rcx,[rbp+0x1140]
   14001ffc8:	call   0x140021078
   14001ffcd:	lea    rcx,[rbp+0x1140]
   14001ffd4:	call   0x1400207cc
   14001ffd9:	mov    rax,QWORD PTR [r14+0x8]
   14001ffdd:	cmp    BYTE PTR [rax+0x62d5],dil
   14001ffe4:	je     0x140020001
   14001ffe6:	test   DWORD PTR [rsi+0x350c],0x800
   14001fff0:	je     0x140020001
   14001fff2:	mov    dl,r15b
   14001fff5:	lea    rcx,[rbp+0x1166]
   14001fffc:	call   0x1400227d0
   140020001:	mov    rcx,QWORD PTR [r14+0x8]
   140020005:	mov    eax,DWORD PTR [rcx+0x73cc]
   14002000b:	neg    eax
   14002000d:	sbb    r8,r8
   140020010:	and    r8,rbx
   140020013:	mov    eax,DWORD PTR [rcx+0x73c4]
   140020019:	neg    eax
   14002001b:	sbb    rdx,rdx
   14002001e:	and    rdx,r12
   140020021:	lea    rcx,[rbp+0x1140]
   140020028:	call   0x1400570f4
   14002002d:	mov    rax,QWORD PTR [r14+0x8]
   140020031:	cmp    BYTE PTR [rax+0x62d6],dil
   140020038:	jne    0x140020065
   14002003a:	mov    edx,DWORD PTR [rsi+0x350c]
   140020040:	lea    rcx,[rbp+0x1166]
   140020047:	call   0x140022740
   14002004c:	test   al,al
   14002004e:	jne    0x140020065
   140020050:	lea    rdx,[rsi+0x26]
   140020054:	lea    r8,[rbp+0x1166]
   14002005b:	mov    ecx,0x10
   140020060:	call   0x140001358
   140020065:	mov    BYTE PTR [r14+0x11e1],r15b
   14002006c:	mov    ebx,DWORD PTR [rsp+0x54]
   140020070:	lea    rcx,[rbp+0x1140]
   140020077:	call   0x140020758
   14002007c:	nop
   14002007d:	lea    rcx,[rbp-0x20]
   140020081:	call   0x140043640
   140020086:	mov    r9b,BYTE PTR [rsp+0x50]
   14002008b:	cmp    BYTE PTR [rsp+0x5c],dil
   140020090:	je     0x140020099
   140020092:	add    DWORD PTR [r14+0x1d8],r15d
   140020099:	cmp    BYTE PTR [r14+0x10c],dil
   1400200a0:	jne    0x14001f103
   1400200a6:	test   bl,bl
   1400200a8:	jne    0x1400200c6
   1400200aa:	cmp    BYTE PTR [rsi+0x7f8c],dil
   1400200b1:	jne    0x1400200bd
   1400200b3:	mov    rcx,rsi
   1400200b6:	call   0x14000a2c8
   1400200bb:	jmp    0x1400200c6
   1400200bd:	test   r9b,r9b
   1400200c0:	je     0x14001f103
   1400200c6:	mov    al,r15b
   1400200c9:	mov    rcx,QWORD PTR [rbp+0x4180]
   1400200d0:	xor    rcx,rsp
   1400200d3:	call   0x140055f90
   1400200d8:	mov    rbx,QWORD PTR [rsp+0x42e0]
   1400200e0:	add    rsp,0x4290
   1400200e7:	pop    r15
   1400200e9:	pop    r14
   1400200eb:	pop    r13
   1400200ed:	pop    r12
   1400200ef:	pop    rdi
   1400200f0:	pop    rsi
   1400200f1:	pop    rbp
   1400200f2:	ret    
   1400200f3:	int3   
   1400200f4:	rex push rbp
   1400200f6:	push   rbx
   1400200f7:	push   rsi
   1400200f8:	push   rdi
   1400200f9:	push   r14
   1400200fb:	lea    rbp,[rsp-0xf90]
   140020103:	mov    eax,0x1090
   140020108:	call   0x140055f20
   14002010d:	sub    rsp,rax
   140020110:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   140020119:	mov    rax,QWORD PTR [rip+0x61dc0]        # 0x140081ee0
   140020120:	xor    rax,rsp
   140020123:	mov    QWORD PTR [rbp+0xf80],rax
   14002012a:	mov    rsi,r9
   14002012d:	mov    rbx,r8
   140020130:	mov    r14,rdx
   140020133:	mov    rdi,QWORD PTR [rbp+0xfe0]
   14002013a:	mov    r8,QWORD PTR [rbp+0xfe8]
   140020141:	mov    rdx,rdi
   140020144:	mov    rcx,rdi
   140020147:	call   0x140032960
   14002014c:	lea    rcx,[rsp+0x50]
   140020151:	call   0x14002071c
   140020156:	nop
   140020157:	mov    rdx,rdi
   14002015a:	lea    rcx,[rsp+0x50]
   14002015f:	call   0x140021278
   140020164:	test   al,al
   140020166:	jne    0x14002018d
   140020168:	mov    r9,rsi
   14002016b:	mov    r8,rdi
   14002016e:	mov    rdx,rbx
   140020171:	mov    ecx,0x11
   140020176:	call   0x14001df10
   14002017b:	mov    rdx,rbx
   14002017e:	mov    ecx,0x12
   140020183:	call   0x1400013b0
   140020188:	xor    dil,dil
   14002018b:	jmp    0x1400201fb
   14002018d:	and    QWORD PTR [rsp+0x20],0x0
   140020193:	and    QWORD PTR [rsp+0x28],0x0
   140020199:	and    QWORD PTR [rsp+0x30],0x0
   14002019f:	and    QWORD PTR [rsp+0x38],0x0
   1400201a5:	mov    edx,0x100000
   1400201aa:	lea    rcx,[rsp+0x20]
   1400201af:	call   0x1400079a4
   1400201b4:	nop
   1400201b5:	call   0x140046bb4
   1400201ba:	mov    rbx,QWORD PTR [rsp+0x20]
   1400201bf:	jmp    0x1400201d4
   1400201c1:	movsxd r8,eax
   1400201c4:	mov    rdx,rbx
   1400201c7:	mov    rcx,r14
   1400201ca:	call   0x1400212ac
   1400201cf:	call   0x140046bb4
   1400201d4:	mov    r8,QWORD PTR [rsp+0x28]
   1400201d9:	mov    rdx,rbx
   1400201dc:	lea    rcx,[rsp+0x50]
   1400201e1:	call   0x140020ed4
   1400201e6:	test   eax,eax
   1400201e8:	jne    0x1400201c1
   1400201ea:	mov    dil,0x1
   1400201ed:	test   rbx,rbx
   1400201f0:	je     0x1400201fb
   1400201f2:	mov    rcx,rbx
   1400201f5:	call   0x14005a938
   1400201fa:	nop
   1400201fb:	lea    rcx,[rsp+0x50]
   140020200:	call   0x140020758
   140020205:	mov    al,dil
   140020208:	mov    rcx,QWORD PTR [rbp+0xf80]
   14002020f:	xor    rcx,rsp
   140020212:	call   0x140055f90
   140020217:	add    rsp,0x1090
   14002021e:	pop    r14
   140020220:	pop    rdi
   140020221:	pop    rsi
   140020222:	pop    rbx
   140020223:	pop    rbp
   140020224:	ret    
   140020225:	int3   
   140020226:	int3   
   140020227:	int3   
   140020228:	mov    rax,rsp
   14002022b:	push   rdi
   14002022c:	sub    rsp,0x50
   140020230:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   140020238:	mov    QWORD PTR [rax+0x8],rbp
   14002023c:	mov    QWORD PTR [rax+0x10],rsi
   140020240:	mov    rdi,rdx
   140020243:	mov    rbp,rcx
   140020246:	and    QWORD PTR [rax-0x30],0x0
   14002024b:	and    QWORD PTR [rax-0x28],0x0
   140020250:	and    QWORD PTR [rax-0x20],0x0
   140020255:	and    QWORD PTR [rax-0x18],0x0
   14002025a:	mov    edx,0x40000
   14002025f:	lea    rcx,[rax-0x30]
   140020263:	call   0x140001858
   140020268:	nop
   140020269:	jmp    0x140020294
   14002026b:	cmp    eax,0xffffffff
   14002026e:	je     0x1400202aa
   140020270:	mov    ecx,eax
   140020272:	mov    edx,edi
   140020274:	cmp    rcx,rdi
   140020277:	cmovl  edx,eax
   14002027a:	mov    esi,edx
   14002027c:	mov    r8d,edx
   14002027f:	mov    rdx,QWORD PTR [rsp+0x28]
   140020284:	mov    rcx,rbp
   140020287:	call   0x140037918
   14002028c:	test   rdi,rdi
   14002028f:	js     0x140020294
   140020291:	sub    rdi,rsi
   140020294:	mov    r8,QWORD PTR [rsp+0x30]
   140020299:	mov    rdx,QWORD PTR [rsp+0x28]
   14002029e:	mov    rcx,rbp
   1400202a1:	call   0x140037740
   1400202a6:	test   eax,eax
   1400202a8:	jne    0x14002026b
   1400202aa:	cmp    QWORD PTR [rsp+0x28],0x0
   1400202b0:	je     0x1400202bc
   1400202b2:	mov    rcx,QWORD PTR [rsp+0x28]
   1400202b7:	call   0x14005a938
   1400202bc:	mov    rbp,QWORD PTR [rsp+0x60]
   1400202c1:	mov    rsi,QWORD PTR [rsp+0x68]
   1400202c6:	add    rsp,0x50
   1400202ca:	pop    rdi
   1400202cb:	ret    
   1400202cc:	mov    rax,rsp
   1400202cf:	mov    QWORD PTR [rax+0x8],rbx
   1400202d3:	mov    QWORD PTR [rax+0x10],rbp
   1400202d7:	mov    QWORD PTR [rax+0x18],rsi
   1400202db:	mov    QWORD PTR [rax+0x20],rdi
   1400202df:	push   r12
   1400202e1:	push   r14
   1400202e3:	push   r15
   1400202e5:	sub    rsp,0x30
   1400202e9:	mov    rbx,QWORD PTR [rsp+0x70]
   1400202ee:	mov    r15,r9
   1400202f1:	mov    rdi,r8
   1400202f4:	mov    rsi,rdx
   1400202f7:	mov    r12,rcx
   1400202fa:	test   rbx,rbx
   1400202fd:	je     0x140020302
   1400202ff:	mov    BYTE PTR [rbx],0x0
   140020302:	mov    rcx,r8
   140020305:	xor    bpl,bpl
   140020308:	call   0x140021dec
   14002030d:	test   al,al
   14002030f:	je     0x14002037f
   140020311:	mov    r14,QWORD PTR [rsp+0x80]
   140020319:	test   bpl,bpl
   14002031c:	jne    0x14002032d
   14002031e:	mov    rcx,rdi
   140020321:	mov    bpl,0x1
   140020324:	call   0x1400204dc
   140020329:	test   al,al
   14002032b:	jne    0x140020373
   14002032d:	mov    r9,QWORD PTR [rsp+0x78]
   140020332:	xor    eax,eax
   140020334:	xor    bpl,bpl
   140020337:	mov    r8,r15
   14002033a:	test   rsi,rsi
   14002033d:	mov    rdx,rdi
   140020340:	mov    rcx,r12
   140020343:	sete   al
   140020346:	mov    DWORD PTR [rsp+0x28],eax
   14002034a:	mov    QWORD PTR [rsp+0x20],r14
   14002034f:	call   0x14004861c
   140020354:	test   eax,eax
   140020356:	je     0x14002037f
   140020358:	cmp    eax,0x1
   14002035b:	je     0x1400203a6
   14002035d:	cmp    eax,0x6
   140020360:	jne    0x140020373
   140020362:	mov    edx,0xff
   140020367:	lea    rcx,[rip+0x744f2]        # 0x140094860
   14002036e:	call   0x14001bc60
   140020373:	mov    rcx,rdi
   140020376:	call   0x140021dec
   14002037b:	test   al,al
   14002037d:	jne    0x140020319
   14002037f:	neg    BYTE PTR [rsp+0x88]
   140020386:	sbb    ebx,ebx
   140020388:	neg    ebx
   14002038a:	test   rsi,rsi
   14002038d:	je     0x1400203b2
   14002038f:	lea    r8d,[rbx+0x11]
   140020393:	mov    rdx,rdi
   140020396:	mov    rcx,rsi
   140020399:	call   0x140020964
   14002039e:	test   al,al
   1400203a0:	je     0x1400203b2
   1400203a2:	mov    al,0x1
   1400203a4:	jmp    0x1400203da
   1400203a6:	test   rbx,rbx
   1400203a9:	je     0x1400203ae
   1400203ab:	mov    BYTE PTR [rbx],0x1
   1400203ae:	xor    al,al
   1400203b0:	jmp    0x1400203da
   1400203b2:	mov    dl,0x1
   1400203b4:	mov    rcx,rdi
   1400203b7:	call   0x1400218f4
   1400203bc:	test   rsi,rsi
   1400203bf:	je     0x1400203d2
   1400203c1:	lea    r8d,[rbx+0x11]
   1400203c5:	mov    rdx,rdi
   1400203c8:	mov    rcx,rsi
   1400203cb:	call   0x140020964
   1400203d0:	jmp    0x1400203da
   1400203d2:	mov    rcx,rdi
   1400203d5:	call   0x140021af4
   1400203da:	mov    rbx,QWORD PTR [rsp+0x50]
   1400203df:	mov    rbp,QWORD PTR [rsp+0x58]
   1400203e4:	mov    rsi,QWORD PTR [rsp+0x60]
   1400203e9:	mov    rdi,QWORD PTR [rsp+0x68]
   1400203ee:	add    rsp,0x30
   1400203f2:	pop    r15
   1400203f4:	pop    r14
   1400203f6:	pop    r12
   1400203f8:	ret    
   1400203f9:	int3   
   1400203fa:	int3   
   1400203fb:	int3   
   1400203fc:	mov    QWORD PTR [rsp+0x18],rbx
   140020401:	push   rbp
   140020402:	push   rsi
   140020403:	push   rdi
   140020404:	push   r14
   140020406:	push   r15
   140020408:	mov    eax,0x1050
   14002040d:	call   0x140055f20
   140020412:	sub    rsp,rax
   140020415:	mov    rax,QWORD PTR [rip+0x61ac4]        # 0x140081ee0
   14002041c:	xor    rax,rsp
   14002041f:	mov    QWORD PTR [rsp+0x1040],rax
   140020427:	or     rdi,0xffffffffffffffff
   14002042b:	mov    r14,rdx
   14002042e:	xor    r15d,r15d
   140020431:	mov    rbx,rcx
   140020434:	inc    rdi
   140020437:	cmp    WORD PTR [rcx+rdi*2],r15w
   14002043c:	jne    0x140020434
   14002043e:	call   0x140031bd4
   140020443:	mov    rsi,rax
   140020446:	test   rax,rax
   140020449:	jne    0x14002044f
   14002044b:	lea    rsi,[rbx+rdi*2]
   14002044f:	mov    rbp,rsi
   140020452:	mov    edi,0x1
   140020457:	sub    rbp,rbx
   14002045a:	sar    rbp,1
   14002045d:	jmp    0x140020469
   14002045f:	cmp    edi,0xf4240
   140020465:	jae    0x1400204d7
   140020467:	inc    edi
   140020469:	mov    QWORD PTR [rsp+0x30],rsi
   14002046e:	lea    r8,[rip+0x4df1b]        # 0x14006e390
   140020475:	mov    DWORD PTR [rsp+0x28],edi
   140020479:	lea    rcx,[rsp+0x40]
   14002047e:	mov    r9d,ebp
   140020481:	mov    QWORD PTR [rsp+0x20],rbx
   140020486:	mov    edx,0x800
   14002048b:	call   0x140006acc
   140020490:	lea    rcx,[rsp+0x40]
   140020495:	call   0x140021dec
   14002049a:	test   al,al
   14002049c:	jne    0x14002045f
   14002049e:	mov    r8,r14
   1400204a1:	lea    rdx,[rsp+0x40]
   1400204a6:	mov    rcx,rbx
   1400204a9:	call   0x140046158
   1400204ae:	mov    al,0x1
   1400204b0:	mov    rcx,QWORD PTR [rsp+0x1040]
   1400204b8:	xor    rcx,rsp
   1400204bb:	call   0x140055f90
   1400204c0:	mov    rbx,QWORD PTR [rsp+0x1090]
   1400204c8:	add    rsp,0x1050
   1400204cf:	pop    r15
   1400204d1:	pop    r14
   1400204d3:	pop    rdi
   1400204d4:	pop    rsi
   1400204d5:	pop    rbp
   1400204d6:	ret    
   1400204d7:	xor    al,al
   1400204d9:	jmp    0x1400204b0
   1400204db:	int3   
   1400204dc:	rex push rbp
   1400204de:	push   r14
   1400204e0:	push   r15
   1400204e2:	lea    rbp,[rsp-0x4f70]
   1400204ea:	mov    eax,0x5070
   1400204ef:	call   0x140055f20
   1400204f4:	sub    rsp,rax
   1400204f7:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140020500:	mov    QWORD PTR [rsp+0x5098],rbx
   140020508:	mov    QWORD PTR [rsp+0x50a0],rsi
   140020510:	mov    QWORD PTR [rsp+0x50a8],rdi
   140020518:	mov    rax,QWORD PTR [rip+0x619c1]        # 0x140081ee0
   14002051f:	xor    rax,rsp
   140020522:	mov    QWORD PTR [rbp+0x4f60],rax
   140020529:	mov    rbx,rcx
   14002052c:	mov    r15d,0x800
   140020532:	mov    r8d,r15d
   140020535:	lea    rdx,[rbp+0x2f60]
   14002053c:	call   QWORD PTR [rip+0x4bbb6]        # 0x14006c0f8
   140020542:	dec    eax
   140020544:	lea    edi,[r15-0x2]
   140020548:	cmp    eax,edi
   14002054a:	ja     0x1400206eb
   140020550:	mov    r8d,r15d
   140020553:	lea    rdx,[rbp+0x3f60]
   14002055a:	mov    rcx,rbx
   14002055d:	call   QWORD PTR [rip+0x4bb8d]        # 0x14006c0f0
   140020563:	dec    eax
   140020565:	cmp    eax,edi
   140020567:	ja     0x1400206eb
   14002056d:	lea    rcx,[rbp+0x2f60]
   140020574:	call   0x1400327bc
   140020579:	mov    rsi,rax
   14002057c:	lea    rcx,[rbp+0x3f60]
   140020583:	call   0x1400327bc
   140020588:	mov    rdi,rax
   14002058b:	xor    r14d,r14d
   14002058e:	cmp    WORD PTR [rax],r14w
   140020592:	je     0x1400206eb
   140020598:	mov    rdx,rax
   14002059b:	mov    rcx,rsi
   14002059e:	call   0x140048f34
   1400205a3:	test   eax,eax
   1400205a5:	je     0x1400206eb
   1400205ab:	mov    rcx,rbx
   1400205ae:	call   0x1400327bc
   1400205b3:	mov    rcx,rax
   1400205b6:	mov    rdx,rdi
   1400205b9:	call   0x140048f34
   1400205be:	test   eax,eax
   1400205c0:	jne    0x1400206eb
   1400205c6:	movzx  eax,r14w
   1400205ca:	mov    WORD PTR [rbp+0xf60],ax
   1400205d1:	mov    edi,r14d
   1400205d4:	test   ax,ax
   1400205d7:	jne    0x140020643
   1400205d9:	mov    r8,r15
   1400205dc:	mov    rdx,rbx
   1400205df:	lea    rcx,[rbp+0xf60]
   1400205e6:	call   0x140046158
   1400205eb:	lea    rcx,[rbp+0xf60]
   1400205f2:	call   0x1400327bc
   1400205f7:	mov    rcx,rax
   1400205fa:	mov    r9d,edi
   1400205fd:	lea    r8,[rip+0x4ddac]        # 0x14006e3b0
   140020604:	mov    rdx,r15
   140020607:	call   0x140006acc
   14002060c:	lea    rcx,[rbp+0xf60]
   140020613:	call   0x140021dec
   140020618:	test   al,al
   14002061a:	je     0x140020628
   14002061c:	mov    eax,r14d
   14002061f:	mov    WORD PTR [rbp+0xf60],ax
   140020626:	jmp    0x14002062f
   140020628:	movzx  eax,WORD PTR [rbp+0xf60]
   14002062f:	add    edi,0x7b
   140020632:	cmp    edi,0x2710
   140020638:	jl     0x1400205d4
   14002063a:	test   ax,ax
   14002063d:	je     0x1400206eb
   140020643:	mov    r8,r15
   140020646:	mov    rdx,rbx
   140020649:	lea    rcx,[rbp+0x1f60]
   140020650:	call   0x140046158
   140020655:	mov    r8,r15
   140020658:	mov    rdx,rsi
   14002065b:	lea    rcx,[rbp+0x1f60]
   140020662:	call   0x1400328b8
   140020667:	lea    rdx,[rbp+0xf60]
   14002066e:	lea    rcx,[rbp+0x1f60]
   140020675:	call   QWORD PTR [rip+0x4ba85]        # 0x14006c100
   14002067b:	test   eax,eax
   14002067d:	je     0x1400206eb
   14002067f:	lea    rcx,[rsp+0x30]
   140020684:	call   0x14002071c
   140020689:	nop
   14002068a:	mov    dil,r14b
   14002068d:	mov    rcx,rbx
   140020690:	call   0x140021dec
   140020695:	test   al,al
   140020697:	jne    0x1400206af
   140020699:	mov    r8d,0x12
   14002069f:	mov    rdx,rbx
   1400206a2:	lea    rcx,[rsp+0x30]
   1400206a7:	call   0x140020964
   1400206ac:	mov    dil,al
   1400206af:	lea    rdx,[rbp+0x1f60]
   1400206b6:	lea    rcx,[rbp+0xf60]
   1400206bd:	call   QWORD PTR [rip+0x4ba3d]        # 0x14006c100
   1400206c3:	test   dil,dil
   1400206c6:	je     0x1400206dd
   1400206c8:	lea    rcx,[rsp+0x30]
   1400206cd:	call   0x1400207cc
   1400206d2:	lea    rcx,[rsp+0x30]
   1400206d7:	call   0x140020a90
   1400206dc:	nop
   1400206dd:	lea    rcx,[rsp+0x30]
   1400206e2:	call   0x140020758
   1400206e7:	mov    al,0x1
   1400206e9:	jmp    0x1400206ed
   1400206eb:	xor    al,al
   1400206ed:	mov    rcx,QWORD PTR [rbp+0x4f60]
   1400206f4:	xor    rcx,rsp
   1400206f7:	call   0x140055f90
   1400206fc:	lea    r11,[rsp+0x5070]
   140020704:	mov    rbx,QWORD PTR [r11+0x28]
   140020708:	mov    rsi,QWORD PTR [r11+0x30]
   14002070c:	mov    rdi,QWORD PTR [r11+0x38]
   140020710:	mov    rsp,r11
   140020713:	pop    r15
   140020715:	pop    r14
   140020717:	pop    rbp
   140020718:	ret    
   140020719:	int3   
   14002071a:	int3   
   14002071b:	int3   
   14002071c:	or     QWORD PTR [rcx+0x8],0xffffffffffffffff
   140020721:	lea    rax,[rip+0x4dd98]        # 0x14006e4c0
   140020728:	mov    QWORD PTR [rcx],rax
   14002072b:	xor    eax,eax
   14002072d:	mov    WORD PTR [rcx+0x26],ax
   140020731:	mov    BYTE PTR [rcx+0x10],al
   140020734:	mov    DWORD PTR [rcx+0x14],eax
   140020737:	mov    BYTE PTR [rcx+0x18],al
   14002073a:	mov    DWORD PTR [rcx+0x1028],eax
   140020740:	mov    BYTE PTR [rcx+0x24],al
   140020743:	mov    BYTE PTR [rcx+0x1d],al
   140020746:	mov    rax,rcx
   140020749:	mov    DWORD PTR [rcx+0x19],0x1010000
   140020750:	mov    DWORD PTR [rcx+0x20],0x100
   140020757:	ret    
   140020758:	sub    rsp,0x38
   14002075c:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140020765:	lea    rax,[rip+0x4dd54]        # 0x14006e4c0
   14002076c:	mov    QWORD PTR [rcx],rax
   14002076f:	cmp    QWORD PTR [rcx+0x8],0xffffffffffffffff
   140020774:	je     0x140020790
   140020776:	cmp    BYTE PTR [rcx+0x18],0x0
   14002077a:	jne    0x140020790
   14002077c:	cmp    BYTE PTR [rcx+0x1a],0x0
   140020780:	je     0x14002078a
   140020782:	call   0x140020a90
   140020787:	nop
   140020788:	jmp    0x140020790
   14002078a:	call   0x1400207cc
   14002078f:	nop
   140020790:	add    rsp,0x38
   140020794:	ret    
   140020795:	int3   
   140020796:	int3   
   140020797:	int3   
   140020798:	mov    QWORD PTR [rsp+0x8],rbx
   14002079d:	push   rdi
   14002079e:	sub    rsp,0x20
   1400207a2:	mov    ebx,edx
   1400207a4:	mov    rdi,rcx
   1400207a7:	call   0x140020758
   1400207ac:	test   bl,0x1
   1400207af:	je     0x1400207be
   1400207b1:	mov    edx,0x1030
   1400207b6:	mov    rcx,rdi
   1400207b9:	call   0x140055de8
   1400207be:	mov    rax,rdi
   1400207c1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400207c6:	add    rsp,0x20
   1400207ca:	pop    rdi
   1400207cb:	ret    
   1400207cc:	mov    QWORD PTR [rsp+0x8],rbx
   1400207d1:	push   rdi
   1400207d2:	sub    rsp,0x20
   1400207d6:	mov    rbx,rcx
   1400207d9:	mov    edi,0x1
   1400207de:	mov    rcx,QWORD PTR [rcx+0x8]
   1400207e2:	cmp    rcx,0xffffffffffffffff
   1400207e6:	je     0x140020805
   1400207e8:	cmp    BYTE PTR [rbx+0x18],0x0
   1400207ec:	jne    0x140020800
   1400207ee:	cmp    DWORD PTR [rbx+0x14],0x0
   1400207f2:	jne    0x140020800
   1400207f4:	call   QWORD PTR [rip+0x4b8ae]        # 0x14006c0a8
   1400207fa:	cmp    eax,edi
   1400207fc:	sete   dil
   140020800:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   140020805:	and    DWORD PTR [rbx+0x14],0x0
   140020809:	test   dil,dil
   14002080c:	jne    0x140020824
   14002080e:	cmp    BYTE PTR [rbx+0x1c],dil
   140020812:	je     0x140020824
   140020814:	lea    rdx,[rbx+0x26]
   140020818:	lea    rcx,[rip+0x74041]        # 0x140094860
   14002081f:	call   0x14001bbf4
   140020824:	mov    al,dil
   140020827:	mov    rbx,QWORD PTR [rsp+0x30]
   14002082c:	add    rsp,0x20
   140020830:	pop    rdi
   140020831:	ret    
   140020832:	int3   
   140020833:	int3   
   140020834:	mov    rax,rsp
   140020837:	mov    QWORD PTR [rax+0x8],rcx
   14002083b:	push   rdi
   14002083c:	push   r12
   14002083e:	push   r13
   140020840:	push   r14
   140020842:	push   r15
   140020844:	sub    rsp,0x50
   140020848:	mov    QWORD PTR [rax-0x58],0xfffffffffffffffe
   140020850:	mov    QWORD PTR [rax+0x10],rbx
   140020854:	mov    QWORD PTR [rax+0x18],rbp
   140020858:	mov    QWORD PTR [rax+0x20],rsi
   14002085c:	mov    rbx,r8
   14002085f:	mov    r13,rdx
   140020862:	mov    rsi,rcx
   140020865:	and    QWORD PTR [rax-0x50],0x0
   14002086a:	and    QWORD PTR [rax-0x48],0x0
   14002086f:	and    QWORD PTR [rax-0x40],0x0
   140020874:	and    QWORD PTR [rax-0x38],0x0
   140020879:	mov    edx,0x40000
   14002087e:	lea    rcx,[rax-0x50]
   140020882:	call   0x1400079a4
   140020887:	nop
   140020888:	xor    ebp,ebp
   14002088a:	movabs rax,0x7fffffff7fffffff
   140020894:	cmp    rbx,rax
   140020897:	sete   r15b
   14002089b:	mov    rdi,QWORD PTR [rsp+0x28]
   1400208a0:	test   r15b,r15b
   1400208a3:	jne    0x1400208ae
   1400208a5:	test   rbx,rbx
   1400208a8:	jle    0x140020933
   1400208ae:	call   0x140046bb4
   1400208b3:	test   r15b,r15b
   1400208b6:	jne    0x1400208c2
   1400208b8:	cmp    rbx,QWORD PTR [rsp+0x30]
   1400208bd:	mov    r8,rbx
   1400208c0:	jl     0x1400208c7
   1400208c2:	mov    r8,QWORD PTR [rsp+0x30]
   1400208c7:	mov    r12,rdi
   1400208ca:	mov    rax,QWORD PTR [rsi]
   1400208cd:	mov    rdx,rdi
   1400208d0:	mov    rcx,rsi
   1400208d3:	call   QWORD PTR [rax+0x10]
   1400208d6:	test   eax,eax
   1400208d8:	je     0x140020933
   1400208da:	movsxd r14,eax
   1400208dd:	mov    rsi,r14
   1400208e0:	test   rbp,rbp
   1400208e3:	jne    0x14002090d
   1400208e5:	cmp    r14,0x1000
   1400208ec:	jb     0x14002090d
   1400208ee:	mov    r8d,0x400
   1400208f4:	mov    rdx,rdi
   1400208f7:	mov    rcx,r13
   1400208fa:	call   0x1400212ac
   1400208ff:	lea    r12,[rdi+0x400]
   140020906:	sub    rsi,0x400
   14002090d:	mov    r8,rsi
   140020910:	mov    rdx,r12
   140020913:	mov    rcx,r13
   140020916:	call   0x1400212ac
   14002091b:	add    rbp,r14
   14002091e:	test   r15b,r15b
   140020921:	mov    rsi,QWORD PTR [rsp+0x80]
   140020929:	jne    0x1400208ae
   14002092b:	sub    rbx,r14
   14002092e:	jmp    0x1400208a0
   140020933:	test   rdi,rdi
   140020936:	je     0x140020940
   140020938:	mov    rcx,rdi
   14002093b:	call   0x14005a938
   140020940:	mov    rax,rbp
   140020943:	lea    r11,[rsp+0x50]
   140020948:	mov    rbx,QWORD PTR [r11+0x38]
   14002094c:	mov    rbp,QWORD PTR [r11+0x40]
   140020950:	mov    rsi,QWORD PTR [r11+0x48]
   140020954:	mov    rsp,r11
   140020957:	pop    r15
   140020959:	pop    r14
   14002095b:	pop    r13
   14002095d:	pop    r12
   14002095f:	pop    rdi
   140020960:	ret    
   140020961:	int3   
   140020962:	int3   
   140020963:	int3   
   140020964:	rex push rbx
   140020966:	push   rbp
   140020967:	push   rsi
   140020968:	push   rdi
   140020969:	push   r14
   14002096b:	mov    eax,0x1050
   140020970:	call   0x140055f20
   140020975:	sub    rsp,rax
   140020978:	mov    rax,QWORD PTR [rip+0x61561]        # 0x140081ee0
   14002097f:	xor    rax,rsp
   140020982:	mov    QWORD PTR [rsp+0x1040],rax
   14002098a:	mov    eax,r8d
   14002098d:	xor    ebx,ebx
   14002098f:	shr    eax,1
   140020991:	mov    rbp,rdx
   140020994:	and    al,0x1
   140020996:	mov    rdi,rcx
   140020999:	test   r8b,0x10
   14002099d:	jne    0x1400209a6
   14002099f:	cmp    BYTE PTR [rcx+0x24],bl
   1400209a2:	mov    cl,bl
   1400209a4:	je     0x1400209a8
   1400209a6:	mov    cl,0x1
   1400209a8:	neg    al
   1400209aa:	mov    DWORD PTR [rdi+0x20],r8d
   1400209ae:	mov    r14d,ebx
   1400209b1:	sbb    esi,esi
   1400209b3:	and    esi,0x80000000
   1400209b9:	add    esi,0xc0000000
   1400209bf:	test   cl,cl
   1400209c1:	mov    rcx,rdx
   1400209c4:	setne  r14b
   1400209c8:	call   0x140032798
   1400209cd:	cmp    WORD PTR [rax],0x2e
   1400209d1:	je     0x140020a01
   1400209d3:	cmp    WORD PTR [rax],0x20
   1400209d7:	je     0x140020a01
   1400209d9:	mov    QWORD PTR [rsp+0x30],rbx
   1400209de:	xor    r9d,r9d
   1400209e1:	mov    DWORD PTR [rsp+0x28],ebx
   1400209e5:	mov    r8d,r14d
   1400209e8:	mov    edx,esi
   1400209ea:	mov    DWORD PTR [rsp+0x20],0x2
   1400209f2:	mov    rcx,rbp
   1400209f5:	call   QWORD PTR [rip+0x4b6d5]        # 0x14006c0d0
   1400209fb:	mov    QWORD PTR [rdi+0x8],rax
   1400209ff:	jmp    0x140020a06
   140020a01:	or     QWORD PTR [rdi+0x8],0xffffffffffffffff
   140020a06:	cmp    QWORD PTR [rdi+0x8],0xffffffffffffffff
   140020a0b:	jne    0x140020a4c
   140020a0d:	mov    r8d,0x800
   140020a13:	lea    rdx,[rsp+0x40]
   140020a18:	mov    rcx,rbp
   140020a1b:	call   0x140031ef0
   140020a20:	test   al,al
   140020a22:	je     0x140020a4c
   140020a24:	mov    QWORD PTR [rsp+0x30],rbx
   140020a29:	lea    rcx,[rsp+0x40]
   140020a2e:	mov    DWORD PTR [rsp+0x28],ebx
   140020a32:	xor    r9d,r9d
   140020a35:	mov    r8d,r14d
   140020a38:	mov    DWORD PTR [rsp+0x20],0x2
   140020a40:	mov    edx,esi
   140020a42:	call   QWORD PTR [rip+0x4b688]        # 0x14006c0d0
   140020a48:	mov    QWORD PTR [rdi+0x8],rax
   140020a4c:	lea    rcx,[rdi+0x26]
   140020a50:	mov    BYTE PTR [rdi+0x1a],0x1
   140020a54:	mov    r8d,0x800
   140020a5a:	mov    DWORD PTR [rdi+0x14],ebx
   140020a5d:	mov    rdx,rbp
   140020a60:	mov    BYTE PTR [rdi+0x18],bl
   140020a63:	call   0x140046158
   140020a68:	cmp    QWORD PTR [rdi+0x8],0xffffffffffffffff
   140020a6d:	setne  al
   140020a70:	mov    rcx,QWORD PTR [rsp+0x1040]
   140020a78:	xor    rcx,rsp
   140020a7b:	call   0x140055f90
   140020a80:	add    rsp,0x1050
   140020a87:	pop    r14
   140020a89:	pop    rdi
   140020a8a:	pop    rsi
   140020a8b:	pop    rbp
   140020a8c:	pop    rbx
   140020a8d:	ret    
   140020a8e:	int3   
   140020a8f:	int3   
   140020a90:	rex push rbx
   140020a92:	sub    rsp,0x20
   140020a96:	cmp    DWORD PTR [rcx+0x14],0x0
   140020a9a:	mov    rbx,rcx
   140020a9d:	je     0x140020aa7
   140020a9f:	xor    al,al
   140020aa1:	add    rsp,0x20
   140020aa5:	pop    rbx
   140020aa6:	ret    
   140020aa7:	cmp    QWORD PTR [rcx+0x8],0xffffffffffffffff
   140020aac:	je     0x140020ab3
   140020aae:	call   0x1400207cc
   140020ab3:	cmp    BYTE PTR [rbx+0x1b],0x0
   140020ab7:	je     0x140020a9f
   140020ab9:	lea    rcx,[rbx+0x26]
   140020abd:	add    rsp,0x20
   140020ac1:	pop    rbx
   140020ac2:	jmp    0x140021af4
   140020ac7:	int3   
   140020ac8:	mov    QWORD PTR [rsp+0x10],rbx
   140020acd:	mov    QWORD PTR [rsp+0x18],rsi
   140020ad2:	push   rdi
   140020ad3:	sub    rsp,0x30
   140020ad7:	cmp    DWORD PTR [rcx+0x14],0x1
   140020adb:	mov    rdi,r8
   140020ade:	mov    rsi,rdx
   140020ae1:	mov    rbx,rcx
   140020ae4:	jne    0x140020af5
   140020ae6:	mov    ecx,0xfffffff6
   140020aeb:	call   QWORD PTR [rip+0x4b847]        # 0x14006c338
   140020af1:	mov    QWORD PTR [rbx+0x8],rax
   140020af5:	mov    rcx,QWORD PTR [rbx+0x8]
   140020af9:	lea    r9,[rsp+0x40]
   140020afe:	and    QWORD PTR [rsp+0x20],0x0
   140020b04:	mov    r8d,edi
   140020b07:	mov    rdx,rsi
   140020b0a:	call   QWORD PTR [rip+0x4b5f8]        # 0x14006c108
   140020b10:	test   eax,eax
   140020b12:	jne    0x140020b74
   140020b14:	mov    rcx,rbx
   140020b17:	call   0x140020c58
   140020b1c:	test   al,al
   140020b1e:	je     0x140020b38
   140020b20:	mov    r8d,0x4e20
   140020b26:	cmp    rdi,r8
   140020b29:	jbe    0x140020b38
   140020b2b:	mov    rdx,rsi
   140020b2e:	mov    rcx,rbx
   140020b31:	call   0x140020ac8
   140020b36:	jmp    0x140020b78
   140020b38:	cmp    DWORD PTR [rbx+0x14],0x1
   140020b3c:	jne    0x140020b4d
   140020b3e:	call   QWORD PTR [rip+0x4b684]        # 0x14006c1c8
   140020b44:	cmp    eax,0x6d
   140020b47:	jne    0x140020b4d
   140020b49:	xor    eax,eax
   140020b4b:	jmp    0x140020b78
   140020b4d:	cmp    DWORD PTR [rbx+0x14],0x0
   140020b51:	jne    0x140020b6f
   140020b53:	cmp    rdi,0x8000
   140020b5a:	jbe    0x140020b6f
   140020b5c:	call   QWORD PTR [rip+0x4b666]        # 0x14006c1c8
   140020b62:	cmp    eax,0x21
   140020b65:	jne    0x140020b6f
   140020b67:	mov    r8d,0x8000
   140020b6d:	jmp    0x140020b2b
   140020b6f:	or     eax,0xffffffff
   140020b72:	jmp    0x140020b78
   140020b74:	mov    eax,DWORD PTR [rsp+0x40]
   140020b78:	mov    rbx,QWORD PTR [rsp+0x48]
   140020b7d:	mov    rsi,QWORD PTR [rsp+0x50]
   140020b82:	add    rsp,0x30
   140020b86:	pop    rdi
   140020b87:	ret    
   140020b88:	mov    rax,rsp
   140020b8b:	push   rdi
   140020b8c:	sub    rsp,0x40
   140020b90:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   140020b98:	mov    QWORD PTR [rax+0x8],rbx
   140020b9c:	mov    QWORD PTR [rax+0x10],rsi
   140020ba0:	mov    rsi,rcx
   140020ba3:	mov    QWORD PTR [rax-0x20],rcx
   140020ba7:	mov    rax,QWORD PTR [rcx]
   140020baa:	call   QWORD PTR [rax+0x20]
   140020bad:	mov    rdi,rax
   140020bb0:	mov    QWORD PTR [rsp+0x30],rax
   140020bb5:	mov    r9,QWORD PTR [rsi]
   140020bb8:	xor    edx,edx
   140020bba:	lea    r8d,[rdx+0x2]
   140020bbe:	mov    rcx,rsi
   140020bc1:	call   QWORD PTR [r9+0x18]
   140020bc5:	mov    rdx,QWORD PTR [rsi]
   140020bc8:	mov    rcx,rsi
   140020bcb:	call   QWORD PTR [rdx+0x20]
   140020bce:	mov    rbx,rax
   140020bd1:	mov    r9,QWORD PTR [rsi]
   140020bd4:	xor    r8d,r8d
   140020bd7:	mov    rdx,rdi
   140020bda:	mov    rcx,rsi
   140020bdd:	call   QWORD PTR [r9+0x18]
   140020be1:	nop
   140020be2:	mov    rax,rbx
   140020be5:	mov    rbx,QWORD PTR [rsp+0x50]
   140020bea:	mov    rsi,QWORD PTR [rsp+0x58]
   140020bef:	add    rsp,0x40
   140020bf3:	pop    rdi
   140020bf4:	ret    
   140020bf5:	int3   
   140020bf6:	int3   
   140020bf7:	int3   
   140020bf8:	mov    rcx,QWORD PTR [rcx+0x8]
   140020bfc:	rex.W jmp QWORD PTR [rip+0x4b50d]        # 0x14006c110
   140020c03:	int3   
   140020c04:	sub    rsp,0x28
   140020c08:	mov    rax,QWORD PTR [rcx]
   140020c0b:	lea    rdx,[rsp+0x30]
   140020c10:	mov    r8d,0x1
   140020c16:	mov    BYTE PTR [rsp+0x30],0x0
   140020c1b:	call   QWORD PTR [rax+0x10]
   140020c1e:	mov    al,BYTE PTR [rsp+0x30]
   140020c22:	add    rsp,0x28
   140020c26:	ret    
   140020c27:	int3   
   140020c28:	rex push rbx
   140020c2a:	sub    rsp,0x20
   140020c2e:	mov    rcx,QWORD PTR [rcx+0x8]
   140020c32:	lea    r9,[rsp+0x30]
   140020c37:	mov    rbx,rdx
   140020c3a:	xor    r8d,r8d
   140020c3d:	xor    edx,edx
   140020c3f:	call   QWORD PTR [rip+0x4b4e3]        # 0x14006c128
   140020c45:	lea    rdx,[rsp+0x30]
   140020c4a:	mov    rcx,rbx
   140020c4d:	call   0x14004726c
   140020c52:	add    rsp,0x20
   140020c56:	pop    rbx
   140020c57:	ret    
   140020c58:	sub    rsp,0x28
   140020c5c:	mov    rcx,QWORD PTR [rcx+0x8]
   140020c60:	cmp    rcx,0xffffffffffffffff
   140020c64:	jne    0x140020c6a
   140020c66:	xor    al,al
   140020c68:	jmp    0x140020c79
   140020c6a:	call   QWORD PTR [rip+0x4b6d0]        # 0x14006c340
   140020c70:	add    eax,0xfffffffe
   140020c73:	cmp    eax,0x1
   140020c76:	setbe  al
   140020c79:	add    rsp,0x28
   140020c7d:	ret    
   140020c7e:	int3   
   140020c7f:	int3   
   140020c80:	rex push rbx
   140020c82:	push   rbp
   140020c83:	push   rsi
   140020c84:	push   rdi
   140020c85:	push   r12
   140020c87:	push   r14
   140020c89:	push   r15
   140020c8b:	mov    eax,0x1050
   140020c90:	call   0x140055f20
   140020c95:	sub    rsp,rax
   140020c98:	mov    rax,QWORD PTR [rip+0x61241]        # 0x140081ee0
   140020c9f:	xor    rax,rsp
   140020ca2:	mov    QWORD PTR [rsp+0x1040],rax
   140020caa:	and    DWORD PTR [rcx+0x1028],0x0
   140020cb1:	mov    ebx,r8d
   140020cb4:	cmp    BYTE PTR [rcx+0x24],0x0
   140020cb8:	mov    r12,rdx
   140020cbb:	mov    rdi,rcx
   140020cbe:	jne    0x140020cc9
   140020cc0:	test   bl,0x4
   140020cc3:	jne    0x140020cc9
   140020cc5:	xor    cl,cl
   140020cc7:	jmp    0x140020ccb
   140020cc9:	mov    cl,0x1
   140020ccb:	mov    eax,ebx
   140020ccd:	shr    eax,1
   140020ccf:	and    al,0x1
   140020cd1:	neg    al
   140020cd3:	sbb    esi,esi
   140020cd5:	and    esi,0xc0000000
   140020cdb:	add    esi,0x80000000
   140020ce1:	test   bl,0x1
   140020ce4:	je     0x140020cea
   140020ce6:	bts    esi,0x1e
   140020cea:	shr    ebx,0x3
   140020ced:	mov    eax,0x2
   140020cf2:	not    ebx
   140020cf4:	and    ebx,0x1
   140020cf7:	test   cl,cl
   140020cf9:	je     0x140020cfd
   140020cfb:	or     ebx,eax
   140020cfd:	mov    al,BYTE PTR [rdi+0x1d]
   140020d00:	mov    r8d,ebx
   140020d03:	neg    al
   140020d05:	mov    edx,esi
   140020d07:	mov    rcx,r12
   140020d0a:	sbb    r14d,r14d
   140020d0d:	and    QWORD PTR [rsp+0x30],0x0
   140020d13:	not    r14d
   140020d16:	xor    r9d,r9d
   140020d19:	and    r14d,0x8000000
   140020d20:	mov    DWORD PTR [rsp+0x28],r14d
   140020d25:	mov    DWORD PTR [rsp+0x20],0x3
   140020d2d:	call   QWORD PTR [rip+0x4b39d]        # 0x14006c0d0
   140020d33:	mov    rbp,rax
   140020d36:	cmp    rax,0xffffffffffffffff
   140020d3a:	jne    0x140020db2
   140020d3c:	call   QWORD PTR [rip+0x4b486]        # 0x14006c1c8
   140020d42:	mov    r8d,0x800
   140020d48:	lea    rdx,[rsp+0x40]
   140020d4d:	mov    rcx,r12
   140020d50:	mov    r15d,eax
   140020d53:	call   0x140031ef0
   140020d58:	test   al,al
   140020d5a:	je     0x140020d9e
   140020d5c:	and    QWORD PTR [rsp+0x30],0x0
   140020d62:	lea    rcx,[rsp+0x40]
   140020d67:	mov    DWORD PTR [rsp+0x28],r14d
   140020d6c:	xor    r9d,r9d
   140020d6f:	mov    r8d,ebx
   140020d72:	mov    DWORD PTR [rsp+0x20],0x3
   140020d7a:	mov    edx,esi
   140020d7c:	call   QWORD PTR [rip+0x4b34e]        # 0x14006c0d0
   140020d82:	mov    rbp,rax
   140020d85:	call   QWORD PTR [rip+0x4b43d]        # 0x14006c1c8
   140020d8b:	mov    ecx,0x2
   140020d90:	cmp    eax,ecx
   140020d92:	cmove  r15d,ecx
   140020d96:	cmp    rbp,0xffffffffffffffff
   140020d9a:	jne    0x140020db2
   140020d9c:	jmp    0x140020da3
   140020d9e:	mov    ecx,0x2
   140020da3:	cmp    r15d,ecx
   140020da6:	jne    0x140020db2
   140020da8:	mov    DWORD PTR [rdi+0x1028],0x1
   140020db2:	and    DWORD PTR [rdi+0x14],0x0
   140020db6:	cmp    rbp,0xffffffffffffffff
   140020dba:	mov    BYTE PTR [rdi+0x1a],0x0
   140020dbe:	mov    BYTE PTR [rdi+0x18],0x0
   140020dc2:	setne  bl
   140020dc5:	test   bl,bl
   140020dc7:	je     0x140020ddf
   140020dc9:	lea    rcx,[rdi+0x26]
   140020dcd:	mov    QWORD PTR [rdi+0x8],rbp
   140020dd1:	mov    r8d,0x800
   140020dd7:	mov    rdx,r12
   140020dda:	call   0x140046158
   140020ddf:	mov    al,bl
   140020de1:	mov    rcx,QWORD PTR [rsp+0x1040]
   140020de9:	xor    rcx,rsp
   140020dec:	call   0x140055f90
   140020df1:	add    rsp,0x1050
   140020df8:	pop    r15
   140020dfa:	pop    r14
   140020dfc:	pop    r12
   140020dfe:	pop    rdi
   140020dff:	pop    rsi
   140020e00:	pop    rbp
   140020e01:	pop    rbx
   140020e02:	ret    
   140020e03:	int3   
   140020e04:	rex push rbx
   140020e06:	sub    rsp,0x20
   140020e0a:	xor    r8d,r8d
   140020e0d:	mov    rbx,rcx
   140020e10:	call   0x140020e58
   140020e15:	test   al,al
   140020e17:	je     0x140020e31
   140020e19:	mov    rcx,QWORD PTR [rbx+0x8]
   140020e1d:	call   QWORD PTR [rip+0x4b2f5]        # 0x14006c118
   140020e23:	mov    rax,QWORD PTR [rbx]
   140020e26:	xor    r8d,r8d
   140020e29:	xor    edx,edx
   140020e2b:	mov    rcx,rbx
   140020e2e:	call   QWORD PTR [rax+0x18]
   140020e31:	add    rsp,0x20
   140020e35:	pop    rbx
   140020e36:	ret    
   140020e37:	int3   
   140020e38:	mov    BYTE PTR [rsp+0x10],dl
   140020e3c:	sub    rsp,0x28
   140020e40:	mov    r8d,0x1
   140020e46:	lea    rdx,[rsp+0x38]
   140020e4b:	call   0x1400212ac
   140020e50:	add    rsp,0x28
   140020e54:	ret    
   140020e55:	int3   
   140020e56:	int3   
   140020e57:	int3   
   140020e58:	mov    QWORD PTR [rsp+0x10],rbx
   140020e5d:	push   rdi
   140020e5e:	sub    rsp,0x20
   140020e62:	cmp    QWORD PTR [rcx+0x8],0xffffffffffffffff
   140020e67:	mov    rbx,rdx
   140020e6a:	mov    rdi,rcx
   140020e6d:	je     0x140020ec4
   140020e6f:	test   rdx,rdx
   140020e72:	jns    0x140020e92
   140020e74:	test   r8d,r8d
   140020e77:	je     0x140020e92
   140020e79:	cmp    r8d,0x1
   140020e7d:	jne    0x140020e87
   140020e7f:	mov    rax,QWORD PTR [rcx]
   140020e82:	call   QWORD PTR [rax+0x20]
   140020e85:	jmp    0x140020e8c
   140020e87:	call   0x140020b88
   140020e8c:	add    rbx,rax
   140020e8f:	xor    r8d,r8d
   140020e92:	mov    rcx,QWORD PTR [rdi+0x8]
   140020e96:	mov    r9d,r8d
   140020e99:	mov    rax,rbx
   140020e9c:	lea    r8,[rsp+0x30]
   140020ea1:	sar    rax,0x20
   140020ea5:	mov    edx,ebx
   140020ea7:	mov    DWORD PTR [rsp+0x30],eax
   140020eab:	call   QWORD PTR [rip+0x4b26f]        # 0x14006c120
   140020eb1:	cmp    eax,0xffffffff
   140020eb4:	jne    0x140020ec4
   140020eb6:	call   QWORD PTR [rip+0x4b30c]        # 0x14006c1c8
   140020ebc:	test   eax,eax
   140020ebe:	je     0x140020ec4
   140020ec0:	xor    al,al
   140020ec2:	jmp    0x140020ec6
   140020ec4:	mov    al,0x1
   140020ec6:	mov    rbx,QWORD PTR [rsp+0x38]
   140020ecb:	add    rsp,0x20
   140020ecf:	pop    rdi
   140020ed0:	ret    
   140020ed1:	int3   
   140020ed2:	int3   
   140020ed3:	int3   
   140020ed4:	mov    rax,rsp
   140020ed7:	mov    QWORD PTR [rax+0x8],rbx
   140020edb:	mov    QWORD PTR [rax+0x10],rbp
   140020edf:	mov    QWORD PTR [rax+0x18],rsi
   140020ee3:	mov    QWORD PTR [rax+0x20],rdi
   140020ee7:	push   r12
   140020ee9:	push   r14
   140020eeb:	push   r15
   140020eed:	sub    rsp,0x20
   140020ef1:	xor    edi,edi
   140020ef3:	mov    rbp,r8
   140020ef6:	mov    r15,rdx
   140020ef9:	mov    rbx,rcx
   140020efc:	mov    r14d,edi
   140020eff:	cmp    BYTE PTR [rcx+0x19],dil
   140020f03:	je     0x140020f0e
   140020f05:	mov    rax,QWORD PTR [rcx]
   140020f08:	call   QWORD PTR [rax+0x20]
   140020f0b:	mov    r14,rax
   140020f0e:	mov    r8,rbp
   140020f11:	mov    rdx,r15
   140020f14:	mov    rcx,rbx
   140020f17:	call   0x140020ac8
   140020f1c:	mov    esi,eax
   140020f1e:	cmp    eax,0xffffffff
   140020f21:	jne    0x140020fb1
   140020f27:	mov    DWORD PTR [rbx+0x1028],0x2
   140020f31:	cmp    BYTE PTR [rbx+0x1c],dil
   140020f35:	je     0x140020fb1
   140020f37:	cmp    BYTE PTR [rbx+0x19],dil
   140020f3b:	jne    0x140020f68
   140020f3d:	cmp    DWORD PTR [rbx+0x14],edi
   140020f40:	jne    0x140020f56
   140020f42:	lea    rdx,[rbx+0x26]
   140020f46:	lea    rcx,[rip+0x73913]        # 0x140094860
   140020f4d:	call   0x14001bb44
   140020f52:	test   al,al
   140020f54:	jne    0x140020f0e
   140020f56:	lea    rdx,[rbx+0x26]
   140020f5a:	lea    rcx,[rip+0x738ff]        # 0x140094860
   140020f61:	call   0x14001be70
   140020f66:	jmp    0x140020fb1
   140020f68:	mov    esi,edi
   140020f6a:	test   rbp,rbp
   140020f6d:	je     0x140020fb1
   140020f6f:	mov    r12d,0x200
   140020f75:	mov    rax,QWORD PTR [rbx]
   140020f78:	lea    rdx,[rdi+r14*1]
   140020f7c:	xor    r8d,r8d
   140020f7f:	mov    rcx,rbx
   140020f82:	call   QWORD PTR [rax+0x18]
   140020f85:	mov    rax,rbp
   140020f88:	mov    r8,r12
   140020f8b:	sub    rax,rdi
   140020f8e:	mov    rdx,r15
   140020f91:	cmp    rax,r12
   140020f94:	mov    rcx,rbx
   140020f97:	cmovb  r8,rax
   140020f9b:	call   0x140020ac8
   140020fa0:	cmp    eax,0xffffffff
   140020fa3:	cmove  eax,r12d
   140020fa7:	add    rdi,r12
   140020faa:	add    esi,eax
   140020fac:	cmp    rdi,rbp
   140020faf:	jb     0x140020f75
   140020fb1:	mov    rbx,QWORD PTR [rsp+0x40]
   140020fb6:	mov    eax,esi
   140020fb8:	mov    rsi,QWORD PTR [rsp+0x50]
   140020fbd:	mov    rbp,QWORD PTR [rsp+0x48]
   140020fc2:	mov    rdi,QWORD PTR [rsp+0x58]
   140020fc7:	add    rsp,0x20
   140020fcb:	pop    r15
   140020fcd:	pop    r14
   140020fcf:	pop    r12
   140020fd1:	ret    
   140020fd2:	int3   
   140020fd3:	int3   
   140020fd4:	mov    QWORD PTR [rsp+0x8],rbx
   140020fd9:	mov    QWORD PTR [rsp+0x10],rsi
   140020fde:	push   rdi
   140020fdf:	sub    rsp,0x20
   140020fe3:	mov    rdi,rcx
   140020fe6:	mov    r9,rdx
   140020fe9:	add    rcx,0x26
   140020fed:	mov    rbx,rdx
   140020ff0:	mov    rax,rcx
   140020ff3:	sub    r9,rcx
   140020ff6:	movzx  edx,WORD PTR [rax]
   140020ff9:	movzx  r8d,WORD PTR [rax+r9*1]
   140020ffe:	sub    edx,r8d
   140021001:	jne    0x14002100c
   140021003:	add    rax,0x2
   140021007:	test   r8d,r8d
   14002100a:	jne    0x140020ff6
   14002100c:	test   edx,edx
   14002100e:	sete   al
   140021011:	test   al,al
   140021013:	jne    0x140021021
   140021015:	mov    rdx,rbx
   140021018:	call   0x1400224c8
   14002101d:	test   al,al
   14002101f:	je     0x140021035
   140021021:	sub    rdi,rbx
   140021024:	movzx  ecx,WORD PTR [rbx]
   140021027:	mov    WORD PTR [rdi+rbx*1+0x26],cx
   14002102c:	lea    rbx,[rbx+0x2]
   140021030:	test   cx,cx
   140021033:	jne    0x140021024
   140021035:	mov    rbx,QWORD PTR [rsp+0x30]
   14002103a:	mov    rsi,QWORD PTR [rsp+0x38]
   14002103f:	add    rsp,0x20
   140021043:	pop    rdi
   140021044:	ret    
   140021045:	int3   
   140021046:	int3   
   140021047:	int3   
   140021048:	rex push rbx
   14002104a:	sub    rsp,0x20
   14002104e:	mov    rbx,rcx
   140021051:	call   0x140020e58
   140021056:	test   al,al
   140021058:	jne    0x14002106f
   14002105a:	cmp    BYTE PTR [rbx+0x1c],al
   14002105d:	je     0x14002106f
   14002105f:	lea    rdx,[rbx+0x26]
   140021063:	lea    rcx,[rip+0x737f6]        # 0x140094860
   14002106a:	call   0x14001bed4
   14002106f:	add    rsp,0x20
   140021073:	pop    rbx
   140021074:	ret    
   140021075:	int3   
   140021076:	int3   
   140021077:	int3   
   140021078:	rex push rbx
   14002107a:	push   rbp
   14002107b:	push   rsi
   14002107c:	push   rdi
   14002107d:	push   r13
   14002107f:	push   r14
   140021081:	push   r15
   140021083:	sub    rsp,0x20
   140021087:	cmp    DWORD PTR [rcx+0x20],0x100
   14002108e:	mov    r15,r9
   140021091:	mov    r14,r8
   140021094:	mov    rsi,rdx
   140021097:	mov    r13,rcx
   14002109a:	je     0x1400210ac
   14002109c:	test   BYTE PTR [rcx+0x20],0x2
   1400210a0:	jne    0x1400210ac
   1400210a2:	mov    rcx,QWORD PTR [rcx+0x8]
   1400210a6:	call   QWORD PTR [rip+0x4b064]        # 0x14006c110
   1400210ac:	mov    bl,0x1
   1400210ae:	test   rsi,rsi
   1400210b1:	je     0x1400210be
   1400210b3:	cmp    QWORD PTR [rsi],0x0
   1400210b7:	je     0x1400210be
   1400210b9:	mov    bpl,bl
   1400210bc:	jmp    0x1400210c1
   1400210be:	xor    bpl,bpl
   1400210c1:	test   r14,r14
   1400210c4:	je     0x1400210d1
   1400210c6:	cmp    QWORD PTR [r14],0x0
   1400210ca:	je     0x1400210d1
   1400210cc:	mov    dil,bl
   1400210cf:	jmp    0x1400210d4
   1400210d1:	xor    dil,dil
   1400210d4:	test   r15,r15
   1400210d7:	je     0x1400210df
   1400210d9:	cmp    QWORD PTR [r15],0x0
   1400210dd:	jne    0x1400210e1
   1400210df:	xor    bl,bl
   1400210e1:	test   bpl,bpl
   1400210e4:	je     0x1400210f3
   1400210e6:	lea    rdx,[rsp+0x60]
   1400210eb:	mov    rcx,rsi
   1400210ee:	call   0x14004759c
   1400210f3:	test   dil,dil
   1400210f6:	je     0x140021105
   1400210f8:	lea    rdx,[rsp+0x70]
   1400210fd:	mov    rcx,r14
   140021100:	call   0x14004759c
   140021105:	test   bl,bl
   140021107:	je     0x140021116
   140021109:	lea    rdx,[rsp+0x68]
   14002110e:	mov    rcx,r15
   140021111:	call   0x14004759c
   140021116:	mov    rcx,QWORD PTR [r13+0x8]
   14002111a:	lea    rax,[rsp+0x60]
   14002111f:	neg    bpl
   140021122:	sbb    r9,r9
   140021125:	and    r9,rax
   140021128:	lea    rax,[rsp+0x68]
   14002112d:	neg    bl
   14002112f:	sbb    r8,r8
   140021132:	and    r8,rax
   140021135:	lea    rax,[rsp+0x70]
   14002113a:	neg    dil
   14002113d:	sbb    rdx,rdx
   140021140:	and    rdx,rax
   140021143:	call   QWORD PTR [rip+0x4af57]        # 0x14006c0a0
   140021149:	add    rsp,0x20
   14002114d:	pop    r15
   14002114f:	pop    r14
   140021151:	pop    r13
   140021153:	pop    rdi
   140021154:	pop    rsi
   140021155:	pop    rbp
   140021156:	pop    rbx
   140021157:	ret    
   140021158:	sub    rsp,0x28
   14002115c:	call   0x140021248
   140021161:	test   al,al
   140021163:	jne    0x140021176
   140021165:	mov    edx,0x2
   14002116a:	lea    rcx,[rip+0x736ef]        # 0x140094860
   140021171:	call   0x14001bc60
   140021176:	add    rsp,0x28
   14002117a:	ret    
   14002117b:	int3   
   14002117c:	sub    rsp,0x28
   140021180:	call   0x140021278
   140021185:	test   al,al
   140021187:	jne    0x14002119a
   140021189:	mov    edx,0x6
   14002118e:	lea    rcx,[rip+0x736cb]        # 0x140094860
   140021195:	call   0x14001bc60
   14002119a:	add    rsp,0x28
   14002119e:	ret    
   14002119f:	int3   
   1400211a0:	mov    QWORD PTR [rsp+0x10],rbx
   1400211a5:	push   rdi
   1400211a6:	sub    rsp,0x20
   1400211aa:	cmp    QWORD PTR [rcx+0x8],0xffffffffffffffff
   1400211af:	mov    rbx,rcx
   1400211b2:	jne    0x1400211ca
   1400211b4:	cmp    BYTE PTR [rcx+0x1c],0x0
   1400211b8:	je     0x140021224
   1400211ba:	lea    rdx,[rcx+0x26]
   1400211be:	lea    rcx,[rip+0x7369b]        # 0x140094860
   1400211c5:	call   0x14001bed4
   1400211ca:	mov    rcx,QWORD PTR [rbx+0x8]
   1400211ce:	lea    r8,[rsp+0x30]
   1400211d3:	and    DWORD PTR [rsp+0x30],0x0
   1400211d8:	mov    r9d,0x1
   1400211de:	xor    edx,edx
   1400211e0:	call   QWORD PTR [rip+0x4af3a]        # 0x14006c120
   1400211e6:	mov    edi,eax
   1400211e8:	cmp    eax,0xffffffff
   1400211eb:	jne    0x14002120d
   1400211ed:	call   QWORD PTR [rip+0x4afd5]        # 0x14006c1c8
   1400211f3:	test   eax,eax
   1400211f5:	je     0x14002120d
   1400211f7:	cmp    BYTE PTR [rbx+0x1c],0x0
   1400211fb:	je     0x140021224
   1400211fd:	lea    rdx,[rbx+0x26]
   140021201:	lea    rcx,[rip+0x73658]        # 0x140094860
   140021208:	call   0x14001bed4
   14002120d:	movsxd rax,DWORD PTR [rsp+0x30]
   140021212:	shl    rax,0x20
   140021216:	add    rax,rdi
   140021219:	mov    rbx,QWORD PTR [rsp+0x38]
   14002121e:	add    rsp,0x20
   140021222:	pop    rdi
   140021223:	ret    
   140021224:	or     rax,0xffffffffffffffff
   140021228:	jmp    0x140021219
   14002122a:	int3   
   14002122b:	int3   
   14002122c:	sub    rsp,0x28
   140021230:	mov    rcx,QWORD PTR [rcx+0x8]
   140021234:	call   QWORD PTR [rip+0x4aede]        # 0x14006c118
   14002123a:	cmp    eax,0x1
   14002123d:	sete   al
   140021240:	add    rsp,0x28
   140021244:	ret    
   140021245:	int3   
   140021246:	int3   
   140021247:	int3   
   140021248:	rex push rbx
   14002124a:	sub    rsp,0x20
   14002124e:	mov    rbx,rdx
   140021251:	call   0x140020964
   140021256:	test   al,al
   140021258:	je     0x14002125e
   14002125a:	mov    al,0x1
   14002125c:	jmp    0x14002126f
   14002125e:	mov    rdx,rbx
   140021261:	lea    rcx,[rip+0x735f8]        # 0x140094860
   140021268:	call   0x14001bc54
   14002126d:	xor    al,al
   14002126f:	add    rsp,0x20
   140021273:	pop    rbx
   140021274:	ret    
   140021275:	int3   
   140021276:	int3   
   140021277:	int3   
   140021278:	rex push rbx
   14002127a:	sub    rsp,0x20
   14002127e:	mov    rax,QWORD PTR [rcx]
   140021281:	xor    r8d,r8d
   140021284:	mov    rbx,rdx
   140021287:	call   QWORD PTR [rax+0x8]
   14002128a:	test   al,al
   14002128c:	je     0x140021292
   14002128e:	mov    al,0x1
   140021290:	jmp    0x1400212a3
   140021292:	mov    rdx,rbx
   140021295:	lea    rcx,[rip+0x735c4]        # 0x140094860
   14002129c:	call   0x14001bdf8
   1400212a1:	xor    al,al
   1400212a3:	add    rsp,0x20
   1400212a7:	pop    rbx
   1400212a8:	ret    
   1400212a9:	int3   
   1400212aa:	int3   
   1400212ab:	int3   
   1400212ac:	mov    QWORD PTR [rsp+0x8],rbx
   1400212b1:	mov    QWORD PTR [rsp+0x10],rbp
   1400212b6:	mov    QWORD PTR [rsp+0x20],rsi
   1400212bb:	push   rdi
   1400212bc:	push   r12
   1400212be:	push   r13
   1400212c0:	push   r14
   1400212c2:	push   r15
   1400212c4:	sub    rsp,0x30
   1400212c8:	xor    edi,edi
   1400212ca:	mov    rbp,r8
   1400212cd:	mov    r13,rdx
   1400212d0:	mov    rsi,rcx
   1400212d3:	test   r8,r8
   1400212d6:	jne    0x1400212df
   1400212d8:	mov    al,0x1
   1400212da:	jmp    0x14002144f
   1400212df:	cmp    DWORD PTR [rcx+0x14],0x1
   1400212e3:	jne    0x1400212f4
   1400212e5:	mov    ecx,0xfffffff5
   1400212ea:	call   QWORD PTR [rip+0x4b048]        # 0x14006c338
   1400212f0:	mov    QWORD PTR [rsi+0x8],rax
   1400212f4:	mov    r14b,dil
   1400212f7:	mov    DWORD PTR [rsp+0x70],edi
   1400212fb:	cmp    DWORD PTR [rsi+0x14],edi
   1400212fe:	je     0x140021351
   140021300:	mov    rbx,rdi
   140021303:	test   rbp,rbp
   140021306:	je     0x14002137b
   140021308:	mov    r8d,0x4000
   14002130e:	mov    QWORD PTR [rsp+0x20],rdi
   140021313:	mov    eax,ebp
   140021315:	lea    rdx,[rbx+r13*1]
   140021319:	sub    eax,ebx
   14002131b:	lea    r9,[rsp+0x70]
   140021320:	mov    rcx,rbp
   140021323:	sub    rcx,rbx
   140021326:	cmp    rcx,r8
   140021329:	mov    rcx,QWORD PTR [rsi+0x8]
   14002132d:	cmovb  r8d,eax
   140021331:	call   QWORD PTR [rip+0x4aff9]        # 0x14006c330
   140021337:	cmp    eax,0x1
   14002133a:	sete   r14b
   14002133e:	test   r14b,r14b
   140021341:	je     0x14002137b
   140021343:	add    rbx,0x4000
   14002134a:	cmp    rbx,rbp
   14002134d:	jb     0x140021308
   14002134f:	jmp    0x140021372
   140021351:	mov    rcx,QWORD PTR [rsi+0x8]
   140021355:	lea    r9,[rsp+0x70]
   14002135a:	mov    r8d,ebp
   14002135d:	mov    QWORD PTR [rsp+0x20],rdi
   140021362:	mov    rdx,r13
   140021365:	call   QWORD PTR [rip+0x4afc5]        # 0x14006c330
   14002136b:	cmp    eax,0x1
   14002136e:	sete   r14b
   140021372:	test   r14b,r14b
   140021375:	jne    0x140021448
   14002137b:	cmp    BYTE PTR [rsi+0x1c],dil
   14002137f:	je     0x140021448
   140021385:	cmp    DWORD PTR [rsi+0x14],edi
   140021388:	jne    0x140021448
   14002138e:	call   QWORD PTR [rip+0x4ae34]        # 0x14006c1c8
   140021394:	mov    rdx,QWORD PTR [rsi]
   140021397:	mov    rcx,rsi
   14002139a:	mov    edi,eax
   14002139c:	call   QWORD PTR [rdx+0x20]
   14002139f:	lea    r12,[rsi+0x26]
   1400213a3:	mov    r15,rax
   1400213a6:	mov    rcx,r12
   1400213a9:	call   0x140021edc
   1400213ae:	mov    ecx,edi
   1400213b0:	mov    rbx,rax
   1400213b3:	call   QWORD PTR [rip+0x4af07]        # 0x14006c2c0
   1400213b9:	cmp    rbx,rbp
   1400213bc:	jbe    0x1400213e6
   1400213be:	mov    rcx,r15
   1400213c1:	mov    ebx,0xffffffff
   1400213c6:	sub    rcx,rbp
   1400213c9:	cmp    rcx,rbx
   1400213cc:	ja     0x1400213e6
   1400213ce:	lea    rax,[r15+rbp*1]
   1400213d2:	cmp    rax,rbx
   1400213d5:	jbe    0x1400213e6
   1400213d7:	mov    rdx,r12
   1400213da:	lea    rcx,[rip+0x7347f]        # 0x140094860
   1400213e1:	call   0x14001c110
   1400213e6:	xor    r8d,r8d
   1400213e9:	lea    rcx,[rip+0x73470]        # 0x140094860
   1400213f0:	mov    rdx,r12
   1400213f3:	call   0x14001bb80
   1400213f8:	xor    edi,edi
   1400213fa:	test   al,al
   1400213fc:	je     0x140021436
   1400213fe:	mov    ecx,DWORD PTR [rsp+0x70]
   140021402:	mov    eax,ecx
   140021404:	cmp    rcx,rbp
   140021407:	jae    0x1400212f4
   14002140d:	test   ecx,ecx
   14002140f:	je     0x1400212f4
   140021415:	mov    rbx,QWORD PTR [rsi]
   140021418:	mov    rcx,rsi
   14002141b:	call   QWORD PTR [rbx+0x20]
   14002141e:	mov    ecx,DWORD PTR [rsp+0x70]
   140021422:	xor    r8d,r8d
   140021425:	sub    rax,rcx
   140021428:	mov    rcx,rsi
   14002142b:	mov    rdx,rax
   14002142e:	call   QWORD PTR [rbx+0x18]
   140021431:	jmp    0x1400212f4
   140021436:	lea    r8,[rsi+0x26]
   14002143a:	xor    edx,edx
   14002143c:	lea    rcx,[rip+0x7341d]        # 0x140094860
   140021443:	call   0x14001c0f0
   140021448:	mov    BYTE PTR [rsi+0x10],0x1
   14002144c:	mov    al,r14b
   14002144f:	mov    rbx,QWORD PTR [rsp+0x60]
   140021454:	mov    rbp,QWORD PTR [rsp+0x68]
   140021459:	mov    rsi,QWORD PTR [rsp+0x78]
   14002145e:	add    rsp,0x30
   140021462:	pop    r15
   140021464:	pop    r14
   140021466:	pop    r13
   140021468:	pop    r12
   14002146a:	pop    rdi
   14002146b:	ret    
   14002146c:	mov    r11,rsp
   14002146f:	sub    rsp,0xa8
   140021476:	mov    rax,QWORD PTR [rip+0x60a63]        # 0x140081ee0
   14002147d:	xor    rax,rsp
   140021480:	mov    QWORD PTR [rsp+0x90],rax
   140021488:	and    DWORD PTR [r11-0x28],0x0
   14002148d:	mov    DWORD PTR [r11-0x20],ecx
   140021491:	lea    rcx,[rsp+0x20]
   140021496:	mov    DWORD PTR [rsp+0x60],edx
   14002149a:	mov    DWORD PTR [r11-0x24],0x1
   1400214a2:	call   0x1400479a4
   1400214a7:	mov    rcx,QWORD PTR [rsp+0x90]
   1400214af:	xor    rcx,rsp
   1400214b2:	call   0x140055f90
   1400214b7:	add    rsp,0xa8
   1400214be:	ret    
   1400214bf:	int3   
   1400214c0:	xor    eax,eax
   1400214c2:	mov    QWORD PTR [rcx],rax
   1400214c5:	mov    QWORD PTR [rcx+0x8],rax
   1400214c9:	mov    QWORD PTR [rcx+0x10],rax
   1400214cd:	mov    QWORD PTR [rcx+0x18],rax
   1400214d1:	mov    QWORD PTR [rcx+0x20],rax
   1400214d5:	mov    rax,rcx
   1400214d8:	ret    
   1400214d9:	int3   
   1400214da:	int3   
   1400214db:	int3   
   1400214dc:	rex push rbx
   1400214de:	sub    rsp,0x20
   1400214e2:	mov    rbx,rcx
   1400214e5:	call   0x140021e00
   1400214ea:	mov    rcx,QWORD PTR [rbx]
   1400214ed:	test   rcx,rcx
   1400214f0:	je     0x1400214f7
   1400214f2:	call   0x14005a938
   1400214f7:	add    rsp,0x20
   1400214fb:	pop    rbx
   1400214fc:	ret    
   1400214fd:	int3   
   1400214fe:	int3   
   1400214ff:	int3   
   140021500:	rex push rbp
   140021502:	push   rbx
   140021503:	push   rdi
   140021504:	push   r12
   140021506:	push   r13
   140021508:	push   r14
   14002150a:	push   r15
   14002150c:	lea    rbp,[rsp-0x60]
   140021511:	sub    rsp,0x160
   140021518:	mov    QWORD PTR [rbp-0x58],0xfffffffffffffffe
   140021520:	mov    rax,QWORD PTR [rip+0x609b9]        # 0x140081ee0
   140021527:	xor    rax,rsp
   14002152a:	mov    QWORD PTR [rbp+0x50],rax
   14002152e:	mov    r14d,r9d
   140021531:	mov    r12,r8
   140021534:	mov    QWORD PTR [rsp+0x30],rdx
   140021539:	mov    rbx,rcx
   14002153c:	mov    QWORD PTR [rsp+0x38],rcx
   140021541:	mov    rax,QWORD PTR [rcx]
   140021544:	call   QWORD PTR [rax+0x20]
   140021547:	mov    QWORD PTR [rsp+0x40],rax
   14002154c:	movabs rax,0x7fffffff7fffffff
   140021556:	mov    rdi,QWORD PTR [rbp+0xc0]
   14002155d:	cmp    rdi,rax
   140021560:	jne    0x14002156f
   140021562:	mov    rcx,rbx
   140021565:	call   0x140020b88
   14002156a:	mov    r13,rax
   14002156d:	jmp    0x140021572
   14002156f:	mov    r13,rdi
   140021572:	xor    r15d,r15d
   140021575:	test   BYTE PTR [rbp+0xc8],0x3
   14002157c:	je     0x140021592
   14002157e:	mov    QWORD PTR [rbp+0x40],r15
   140021582:	mov    DWORD PTR [rbp+0x48],0x80
   140021589:	lea    rcx,[rbp-0x20]
   14002158d:	call   0x1400479a4
   140021592:	test   BYTE PTR [rbp+0xc8],0x8
   140021599:	jne    0x1400215a9
   14002159b:	mov    rax,QWORD PTR [rbx]
   14002159e:	xor    r8d,r8d
   1400215a1:	xor    edx,edx
   1400215a3:	mov    rcx,rbx
   1400215a6:	call   QWORD PTR [rax+0x18]
   1400215a9:	mov    QWORD PTR [rsp+0x48],r15
   1400215ae:	mov    QWORD PTR [rsp+0x50],r15
   1400215b3:	mov    QWORD PTR [rsp+0x58],r15
   1400215b8:	mov    QWORD PTR [rsp+0x60],r15
   1400215bd:	mov    edx,0x100000
   1400215c2:	lea    rcx,[rsp+0x48]
   1400215c7:	call   0x140001858
   1400215cc:	nop
   1400215cd:	lea    rcx,[rbp-0x78]
   1400215d1:	call   0x140023e64
   1400215d6:	nop
   1400215d7:	lea    rcx,[rsp+0x68]
   1400215dc:	call   0x140023e64
   1400215e1:	nop
   1400215e2:	mov    r8d,r14d
   1400215e5:	mov    edx,0x2
   1400215ea:	lea    rcx,[rbp-0x78]
   1400215ee:	call   0x1400241ac
   1400215f3:	mov    r8d,r14d
   1400215f6:	mov    edx,0x3
   1400215fb:	lea    rcx,[rsp+0x68]
   140021600:	call   0x1400241ac
   140021605:	mov    QWORD PTR [rsp+0x28],r15
   14002160a:	mov    QWORD PTR [rsp+0x20],r15
   14002160f:	mov    r14,QWORD PTR [rsp+0x48]
   140021614:	movabs rax,0x7fffffff7fffffff
   14002161e:	cmp    rdi,rax
   140021621:	jne    0x14002162b
   140021623:	mov    r8d,0x100000
   140021629:	jmp    0x14002163a
   14002162b:	mov    r8,rdi
   14002162e:	mov    eax,0x100000
   140021633:	cmp    rdi,rax
   140021636:	cmovg  r8,rax
   14002163a:	mov    rax,QWORD PTR [rbx]
   14002163d:	mov    rdx,r14
   140021640:	mov    rcx,rbx
   140021643:	call   QWORD PTR [rax+0x10]
   140021646:	test   eax,eax
   140021648:	je     0x1400216f8
   14002164e:	movsxd r15,eax
   140021651:	mov    rax,QWORD PTR [rsp+0x20]
   140021656:	add    rax,r15
   140021659:	mov    QWORD PTR [rsp+0x20],rax
   14002165e:	mov    rcx,QWORD PTR [rsp+0x28]
   140021663:	inc    rcx
   140021666:	mov    QWORD PTR [rsp+0x28],rcx
   14002166b:	test   cl,0xf
   14002166e:	jne    0x1400216b1
   140021670:	test   BYTE PTR [rbp+0xc8],0x4
   140021677:	je     0x14002168c
   140021679:	mov    r9,r13
   14002167c:	mov    r8,rax
   14002167f:	mov    rdx,r13
   140021682:	mov    rcx,rax
   140021685:	call   0x1400487f8
   14002168a:	jmp    0x1400216ac
   14002168c:	test   BYTE PTR [rbp+0xc8],0x2
   140021693:	je     0x1400216ac
   140021695:	mov    rdx,r13
   140021698:	mov    rcx,rax
   14002169b:	call   0x14004596c
   1400216a0:	mov    edx,eax
   1400216a2:	mov    ecx,0x81
   1400216a7:	call   0x14002146c
   1400216ac:	call   0x140046bb4
   1400216b1:	cmp    QWORD PTR [rsp+0x30],0x0
   1400216b7:	je     0x1400216c8
   1400216b9:	mov    r8,r15
   1400216bc:	mov    rdx,r14
   1400216bf:	lea    rcx,[rbp-0x78]
   1400216c3:	call   0x1400242cc
   1400216c8:	test   r12,r12
   1400216cb:	je     0x1400216dd
   1400216cd:	mov    r8,r15
   1400216d0:	mov    rdx,r14
   1400216d3:	lea    rcx,[rsp+0x68]
   1400216d8:	call   0x1400242cc
   1400216dd:	movabs rax,0x7fffffff7fffffff
   1400216e7:	cmp    rdi,rax
   1400216ea:	je     0x140021623
   1400216f0:	sub    rdi,r15
   1400216f3:	jmp    0x14002161e
   1400216f8:	test   BYTE PTR [rbp+0xc8],0x2
   1400216ff:	je     0x140021716
   140021701:	and    QWORD PTR [rbp+0x40],0x0
   140021706:	mov    DWORD PTR [rbp+0x48],0x82
   14002170d:	lea    rcx,[rbp-0x20]
   140021711:	call   0x1400479a4
   140021716:	mov    r15,QWORD PTR [rsp+0x30]
   14002171b:	test   r15,r15
   14002171e:	je     0x14002172c
   140021720:	lea    rcx,[rbp-0x78]
   140021724:	call   0x14002419c
   140021729:	mov    DWORD PTR [r15],eax
   14002172c:	test   r12,r12
   14002172f:	je     0x140021752
   140021731:	lea    rdx,[rbp-0x50]
   140021735:	lea    rcx,[rsp+0x68]
   14002173a:	call   0x140024258
   14002173f:	movups xmm0,XMMWORD PTR [rbp-0x4c]
   140021743:	movups XMMWORD PTR [r12],xmm0
   140021748:	movups xmm1,XMMWORD PTR [rbp-0x3c]
   14002174c:	movups XMMWORD PTR [r12+0x10],xmm1
   140021752:	lea    rcx,[rsp+0x68]
   140021757:	call   0x140023fe8
   14002175c:	nop
   14002175d:	lea    rcx,[rbp-0x78]
   140021761:	call   0x140023fe8
   140021766:	nop
   140021767:	test   r14,r14
   14002176a:	je     0x140021775
   14002176c:	mov    rcx,r14
   14002176f:	call   0x14005a938
   140021774:	nop
   140021775:	mov    rax,QWORD PTR [rbx]
   140021778:	xor    r8d,r8d
   14002177b:	mov    rdx,QWORD PTR [rsp+0x40]
   140021780:	mov    rcx,rbx
   140021783:	call   QWORD PTR [rax+0x18]
   140021786:	nop
   140021787:	mov    rcx,QWORD PTR [rbp+0x50]
   14002178b:	xor    rcx,rsp
   14002178e:	call   0x140055f90
   140021793:	add    rsp,0x160
   14002179a:	pop    r15
   14002179c:	pop    r14
   14002179e:	pop    r13
   1400217a0:	pop    r12
   1400217a2:	pop    rdi
   1400217a3:	pop    rbx
   1400217a4:	pop    rbp
   1400217a5:	ret    
   1400217a6:	int3   
   1400217a7:	int3   
   1400217a8:	rex push rbp
   1400217aa:	push   rsi
   1400217ab:	push   rdi
   1400217ac:	lea    rbp,[rsp-0x2010]
   1400217b4:	mov    eax,0x2110
   1400217b9:	call   0x140055f20
   1400217be:	sub    rsp,rax
   1400217c1:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400217ca:	mov    QWORD PTR [rsp+0x2140],rbx
   1400217d2:	mov    rax,QWORD PTR [rip+0x60707]        # 0x140081ee0
   1400217d9:	xor    rax,rsp
   1400217dc:	mov    QWORD PTR [rbp+0x2000],rax
   1400217e3:	mov    rdi,rdx
   1400217e6:	mov    rsi,rcx
   1400217e9:	mov    rcx,rdx
   1400217ec:	call   0x1400327bc
   1400217f1:	mov    rbx,rax
   1400217f4:	mov    rcx,rsi
   1400217f7:	call   0x1400327bc
   1400217fc:	mov    rcx,rax
   1400217ff:	mov    rdx,rbx
   140021802:	call   0x140046118
   140021807:	xor    ebx,ebx
   140021809:	test   eax,eax
   14002180b:	je     0x140021814
   14002180d:	xor    al,al
   14002180f:	jmp    0x1400218cf
   140021814:	mov    rdx,rdi
   140021817:	mov    rcx,rsi
   14002181a:	call   0x140046118
   14002181f:	test   eax,eax
   140021821:	jne    0x14002182a
   140021823:	mov    al,0x1
   140021825:	jmp    0x1400218cf
   14002182a:	lea    rcx,[rbp+0xfd0]
   140021831:	call   0x14002071c
   140021836:	nop
   140021837:	lea    rcx,[rbp-0x60]
   14002183b:	call   0x14002071c
   140021840:	nop
   140021841:	mov    r8d,0x4
   140021847:	mov    rdx,rsi
   14002184a:	lea    rcx,[rbp+0xfd0]
   140021851:	call   0x140020c80
   140021856:	test   al,al
   140021858:	je     0x1400218b7
   14002185a:	mov    r8d,0x4
   140021860:	mov    rdx,rdi
   140021863:	lea    rcx,[rbp-0x60]
   140021867:	call   0x140020c80
   14002186c:	test   al,al
   14002186e:	je     0x1400218b7
   140021870:	lea    rdx,[rsp+0x60]
   140021875:	mov    rcx,QWORD PTR [rbp+0xfd8]
   14002187c:	call   QWORD PTR [rip+0x4aade]        # 0x14006c360
   140021882:	test   eax,eax
   140021884:	je     0x1400218b7
   140021886:	lea    rdx,[rsp+0x28]
   14002188b:	mov    rcx,QWORD PTR [rbp-0x58]
   14002188f:	call   QWORD PTR [rip+0x4aacb]        # 0x14006c360
   140021895:	test   eax,eax
   140021897:	je     0x1400218b7
   140021899:	mov    eax,DWORD PTR [rsp+0x44]
   14002189d:	cmp    DWORD PTR [rsp+0x7c],eax
   1400218a1:	jne    0x1400218b7
   1400218a3:	mov    eax,DWORD PTR [rsp+0x54]
   1400218a7:	cmp    DWORD PTR [rbp-0x74],eax
   1400218aa:	jne    0x1400218b7
   1400218ac:	mov    eax,DWORD PTR [rsp+0x58]
   1400218b0:	cmp    DWORD PTR [rbp-0x70],eax
   1400218b3:	jne    0x1400218b7
   1400218b5:	mov    bl,0x1
   1400218b7:	lea    rcx,[rbp-0x60]
   1400218bb:	call   0x140020758
   1400218c0:	nop
   1400218c1:	lea    rcx,[rbp+0xfd0]
   1400218c8:	call   0x140020758
   1400218cd:	mov    al,bl
   1400218cf:	mov    rcx,QWORD PTR [rbp+0x2000]
   1400218d6:	xor    rcx,rsp
   1400218d9:	call   0x140055f90
   1400218de:	mov    rbx,QWORD PTR [rsp+0x2140]
   1400218e6:	add    rsp,0x2110
   1400218ed:	pop    rdi
   1400218ee:	pop    rsi
   1400218ef:	pop    rbp
   1400218f0:	ret    
   1400218f1:	int3   
   1400218f2:	int3   
   1400218f3:	int3   
   1400218f4:	mov    QWORD PTR [rsp+0x10],rbx
   1400218f9:	mov    QWORD PTR [rsp+0x18],rbp
   1400218fe:	push   rsi
   1400218ff:	push   rdi
   140021900:	push   r12
   140021902:	push   r14
   140021904:	push   r15
   140021906:	mov    eax,0x1030
   14002190b:	call   0x140055f20
   140021910:	sub    rsp,rax
   140021913:	mov    rax,QWORD PTR [rip+0x605c6]        # 0x140081ee0
   14002191a:	xor    rax,rsp
   14002191d:	mov    QWORD PTR [rsp+0x1020],rax
   140021925:	xor    r12d,r12d
   140021928:	mov    r15b,dl
   14002192b:	mov    rbx,rcx
   14002192e:	test   rcx,rcx
   140021931:	je     0x140021a39
   140021937:	cmp    WORD PTR [rcx],r12w
   14002193b:	je     0x140021a39
   140021941:	mov    r14,rcx
   140021944:	mov    bpl,0x1
   140021947:	neg    r14
   14002194a:	mov    rdi,rcx
   14002194d:	lea    rsi,[r14+rdi*1]
   140021951:	sar    rsi,1
   140021954:	cmp    rsi,0x800
   14002195b:	jae    0x140021a08
   140021961:	movzx  ecx,WORD PTR [rdi]
   140021964:	call   0x140032274
   140021969:	test   al,al
   14002196b:	je     0x1400219fa
   140021971:	cmp    rdi,rbx
   140021974:	jbe    0x1400219fa
   14002197a:	lea    rax,[rbx+0x4]
   14002197e:	cmp    rdi,rax
   140021981:	jne    0x14002198a
   140021983:	cmp    WORD PTR [rbx+0x2],0x3a
   140021988:	je     0x1400219fa
   14002198a:	mov    r8,rsi
   14002198d:	lea    rcx,[rsp+0x20]
   140021992:	mov    rdx,rbx
   140021995:	call   0x14005e00c
   14002199a:	add    rsi,rsi
   14002199d:	cmp    rsi,0x1000
   1400219a4:	jae    0x140021a67
   1400219aa:	xor    r8d,r8d
   1400219ad:	mov    WORD PTR [rsp+rsi*1+0x20],r12w
   1400219b3:	mov    dl,0x1
   1400219b5:	lea    rcx,[rsp+0x20]
   1400219ba:	call   0x1400221f4
   1400219bf:	test   eax,eax
   1400219c1:	sete   bpl
   1400219c5:	test   bpl,bpl
   1400219c8:	je     0x1400219fa
   1400219ca:	mov    ecx,0xd60
   1400219cf:	call   0x140040118
   1400219d4:	mov    rcx,rax
   1400219d7:	lea    rdx,[rsp+0x20]
   1400219dc:	call   0x14001796c
   1400219e1:	mov    ecx,0xd20
   1400219e6:	call   0x140040118
   1400219eb:	mov    rdx,rax
   1400219ee:	lea    rcx,[rip+0x4cafb]        # 0x14006e4f0
   1400219f5:	call   0x14001796c
   1400219fa:	add    rdi,0x2
   1400219fe:	cmp    WORD PTR [rdi],r12w
   140021a02:	jne    0x14002194d
   140021a08:	test   r15b,r15b
   140021a0b:	jne    0x140021a34
   140021a0d:	mov    rcx,rbx
   140021a10:	call   0x140032798
   140021a15:	movzx  ecx,WORD PTR [rax]
   140021a18:	call   0x140032274
   140021a1d:	test   al,al
   140021a1f:	jne    0x140021a34
   140021a21:	xor    r8d,r8d
   140021a24:	mov    dl,0x1
   140021a26:	mov    rcx,rbx
   140021a29:	call   0x1400221f4
   140021a2e:	test   eax,eax
   140021a30:	sete   bpl
   140021a34:	mov    al,bpl
   140021a37:	jmp    0x140021a3b
   140021a39:	xor    al,al
   140021a3b:	mov    rcx,QWORD PTR [rsp+0x1020]
   140021a43:	xor    rcx,rsp
   140021a46:	call   0x140055f90
   140021a4b:	lea    r11,[rsp+0x1030]
   140021a53:	mov    rbx,QWORD PTR [r11+0x38]
   140021a57:	mov    rbp,QWORD PTR [r11+0x40]
   140021a5b:	mov    rsp,r11
   140021a5e:	pop    r15
   140021a60:	pop    r14
   140021a62:	pop    r12
   140021a64:	pop    rdi
   140021a65:	pop    rsi
   140021a66:	ret    
   140021a67:	call   0x1400560e8
   140021a6c:	int3   
   140021a6d:	int3   
   140021a6e:	int3   
   140021a6f:	int3   
   140021a70:	mov    QWORD PTR [rsp+0x10],rbx
   140021a75:	push   rdi
   140021a76:	mov    eax,0x1030
   140021a7b:	call   0x140055f20
   140021a80:	sub    rsp,rax
   140021a83:	mov    rax,QWORD PTR [rip+0x60456]        # 0x140081ee0
   140021a8a:	xor    rax,rsp
   140021a8d:	mov    QWORD PTR [rsp+0x1020],rax
   140021a95:	mov    rdi,rcx
   140021a98:	call   QWORD PTR [rip+0x4a62a]        # 0x14006c0c8
   140021a9e:	test   eax,eax
   140021aa0:	setne  bl
   140021aa3:	test   bl,bl
   140021aa5:	jne    0x140021ace
   140021aa7:	mov    r8d,0x800
   140021aad:	lea    rdx,[rsp+0x20]
   140021ab2:	mov    rcx,rdi
   140021ab5:	call   0x140031ef0
   140021aba:	test   al,al
   140021abc:	je     0x140021ace
   140021abe:	lea    rcx,[rsp+0x20]
   140021ac3:	call   QWORD PTR [rip+0x4a5ff]        # 0x14006c0c8
   140021ac9:	test   eax,eax
   140021acb:	setne  bl
   140021ace:	mov    al,bl
   140021ad0:	mov    rcx,QWORD PTR [rsp+0x1020]
   140021ad8:	xor    rcx,rsp
   140021adb:	call   0x140055f90
   140021ae0:	mov    rbx,QWORD PTR [rsp+0x1048]
   140021ae8:	add    rsp,0x1030
   140021aef:	pop    rdi
   140021af0:	ret    
   140021af1:	int3   
   140021af2:	int3   
   140021af3:	int3   
   140021af4:	mov    QWORD PTR [rsp+0x10],rbx
   140021af9:	push   rdi
   140021afa:	mov    eax,0x1030
   140021aff:	call   0x140055f20
   140021b04:	sub    rsp,rax
   140021b07:	mov    rax,QWORD PTR [rip+0x603d2]        # 0x140081ee0
   140021b0e:	xor    rax,rsp
   140021b11:	mov    QWORD PTR [rsp+0x1020],rax
   140021b19:	mov    rdi,rcx
   140021b1c:	call   QWORD PTR [rip+0x4a5b6]        # 0x14006c0d8
   140021b22:	test   eax,eax
   140021b24:	setne  bl
   140021b27:	test   bl,bl
   140021b29:	jne    0x140021b52
   140021b2b:	mov    r8d,0x800
   140021b31:	lea    rdx,[rsp+0x20]
   140021b36:	mov    rcx,rdi
   140021b39:	call   0x140031ef0
   140021b3e:	test   al,al
   140021b40:	je     0x140021b52
   140021b42:	lea    rcx,[rsp+0x20]
   140021b47:	call   QWORD PTR [rip+0x4a58b]        # 0x14006c0d8
   140021b4d:	test   eax,eax
   140021b4f:	setne  bl
   140021b52:	mov    al,bl
   140021b54:	mov    rcx,QWORD PTR [rsp+0x1020]
   140021b5c:	xor    rcx,rsp
   140021b5f:	call   0x140055f90
   140021b64:	mov    rbx,QWORD PTR [rsp+0x1048]
   140021b6c:	add    rsp,0x1030
   140021b73:	pop    rdi
   140021b74:	ret    
   140021b75:	int3   
   140021b76:	int3   
   140021b77:	int3   
   140021b78:	mov    QWORD PTR [rsp+0x18],rbx
   140021b7d:	mov    QWORD PTR [rsp+0x20],rsi
   140021b82:	push   rdi
   140021b83:	mov    eax,0x1030
   140021b88:	call   0x140055f20
   140021b8d:	sub    rsp,rax
   140021b90:	mov    rax,QWORD PTR [rip+0x60349]        # 0x140081ee0
   140021b97:	xor    rax,rsp
   140021b9a:	mov    QWORD PTR [rsp+0x1020],rax
   140021ba2:	mov    rax,rdx
   140021ba5:	mov    rbx,rcx
   140021ba8:	mov    rcx,rax
   140021bab:	lea    rdx,[rsp+0x20]
   140021bb0:	mov    r8d,0x800
   140021bb6:	call   0x140030ef4
   140021bbb:	or     rdi,0xffffffffffffffff
   140021bbf:	lea    rax,[rsp+0x20]
   140021bc4:	xor    esi,esi
   140021bc6:	inc    rdi
   140021bc9:	cmp    WORD PTR [rax+rdi*2],si
   140021bcd:	jne    0x140021bc6
   140021bcf:	mov    rcx,QWORD PTR [rbx+0x20]
   140021bd3:	add    rcx,0x2
   140021bd7:	add    rcx,rdi
   140021bda:	cmp    rcx,QWORD PTR [rbx+0x10]
   140021bde:	jbe    0x140021bf1
   140021be0:	sub    rcx,QWORD PTR [rbx+0x8]
   140021be4:	mov    rdx,rcx
   140021be7:	mov    rcx,rbx
   140021bea:	call   0x140007a44
   140021bef:	jmp    0x140021bf5
   140021bf1:	mov    QWORD PTR [rbx+0x8],rcx
   140021bf5:	mov    rcx,QWORD PTR [rbx+0x20]
   140021bf9:	lea    rdx,[rsp+0x20]
   140021bfe:	mov    rax,QWORD PTR [rbx]
   140021c01:	lea    r8,[rax+rcx*2]
   140021c05:	movzx  eax,WORD PTR [rdx]
   140021c08:	lea    rdx,[rdx+0x2]
   140021c0c:	mov    WORD PTR [r8],ax
   140021c10:	lea    r8,[r8+0x2]
   140021c14:	test   ax,ax
   140021c17:	jne    0x140021c05
   140021c19:	mov    rdx,QWORD PTR [rbx+0x20]
   140021c1d:	mov    rax,QWORD PTR [rbx]
   140021c20:	add    rdx,rdi
   140021c23:	mov    WORD PTR [rax+rdx*2+0x2],si
   140021c28:	lea    rax,[rdi+0x1]
   140021c2c:	add    QWORD PTR [rbx+0x20],rax
   140021c30:	cmp    QWORD PTR [rbx+0x20],0x2710
   140021c38:	jbe    0x140021c44
   140021c3a:	mov    rcx,rbx
   140021c3d:	call   0x140021e00
   140021c42:	jmp    0x140021c46
   140021c44:	mov    al,0x1
   140021c46:	mov    rcx,QWORD PTR [rsp+0x1020]
   140021c4e:	xor    rcx,rsp
   140021c51:	call   0x140055f90
   140021c56:	lea    r11,[rsp+0x1030]
   140021c5e:	mov    rbx,QWORD PTR [r11+0x20]
   140021c62:	mov    rsi,QWORD PTR [r11+0x28]
   140021c66:	mov    rsp,r11
   140021c69:	pop    rdi
   140021c6a:	ret    
   140021c6b:	int3   
   140021c6c:	rex push rbp
   140021c6e:	lea    rbp,[rsp-0x7220]
   140021c76:	mov    eax,0x7320
   140021c7b:	call   0x140055f20
   140021c80:	sub    rsp,rax
   140021c83:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140021c8c:	mov    QWORD PTR [rsp+0x7338],rbx
   140021c94:	mov    rax,QWORD PTR [rip+0x60245]        # 0x140081ee0
   140021c9b:	xor    rax,rsp
   140021c9e:	mov    QWORD PTR [rbp+0x7210],rax
   140021ca5:	mov    rbx,rcx
   140021ca8:	call   0x140032140
   140021cad:	test   al,al
   140021caf:	je     0x140021dca
   140021cb5:	mov    rcx,rbx
   140021cb8:	call   0x14002217c
   140021cbd:	test   al,al
   140021cbf:	je     0x140021dca
   140021cc5:	movzx  r9d,WORD PTR [rbx]
   140021cc9:	lea    r8,[rip+0x4c840]        # 0x14006e510
   140021cd0:	mov    edx,0x800
   140021cd5:	lea    rcx,[rbp+0x6210]
   140021cdc:	call   0x140006acc
   140021ce1:	movzx  edx,WORD PTR [rbp+0x6210]
   140021ce8:	mov    ecx,0x7f
   140021ced:	call   0x14002146c
   140021cf2:	lea    rcx,[rsp+0x40]
   140021cf7:	call   0x140046194
   140021cfc:	nop
   140021cfd:	lea    rdx,[rbp+0x6210]
   140021d04:	lea    rcx,[rsp+0x40]
   140021d09:	call   0x1400461bc
   140021d0e:	mov    r8d,0x2
   140021d14:	mov    DWORD PTR [rsp+0x20],r8d
   140021d19:	xor    r9d,r9d
   140021d1c:	lea    rdx,[rsp+0x40]
   140021d21:	lea    rcx,[rbp+0x1050]
   140021d28:	call   0x14004259c
   140021d2d:	nop
   140021d2e:	and    QWORD PTR [rbp+0x1010],0x0
   140021d36:	and    QWORD PTR [rbp+0x1018],0x0
   140021d3e:	and    QWORD PTR [rbp+0x1020],0x0
   140021d46:	jmp    0x140021d9a
   140021d48:	movzx  eax,WORD PTR [rbx]
   140021d4b:	cmp    WORD PTR [rbp+0x0],ax
   140021d4f:	jne    0x140021dae
   140021d51:	cmp    WORD PTR [rbp+0x2],0x3a
   140021d56:	jne    0x140021dae
   140021d58:	xor    edx,edx
   140021d5a:	lea    rcx,[rbp+0x0]
   140021d5e:	call   0x140022740
   140021d63:	lea    rcx,[rbp+0x0]
   140021d67:	cmp    BYTE PTR [rbp+0x100c],0x0
   140021d6e:	je     0x140021d77
   140021d70:	call   0x140021a70
   140021d75:	jmp    0x140021d9a
   140021d77:	call   0x140021af4
   140021d7c:	test   al,al
   140021d7e:	jne    0x140021d9a
   140021d80:	lea    r8,[rbp+0x0]
   140021d84:	xor    edx,edx
   140021d86:	lea    ecx,[rdx+0xe]
   140021d89:	call   0x140001358
   140021d8e:	lea    rcx,[rip+0x72acb]        # 0x140094860
   140021d95:	call   0x14001bf78
   140021d9a:	lea    rdx,[rbp+0x0]
   140021d9e:	lea    rcx,[rbp+0x1050]
   140021da5:	call   0x1400431d8
   140021daa:	test   eax,eax
   140021dac:	je     0x140021d48
   140021dae:	lea    rcx,[rbp+0x1050]
   140021db5:	call   0x14004266c
   140021dba:	nop
   140021dbb:	mov    rcx,QWORD PTR [rsp+0x40]
   140021dc0:	test   rcx,rcx
   140021dc3:	je     0x140021dca
   140021dc5:	call   0x14005a938
   140021dca:	mov    rcx,QWORD PTR [rbp+0x7210]
   140021dd1:	xor    rcx,rsp
   140021dd4:	call   0x140055f90
   140021dd9:	mov    rbx,QWORD PTR [rsp+0x7338]
   140021de1:	add    rsp,0x7320
   140021de8:	pop    rbp
   140021de9:	ret    
   140021dea:	int3   
   140021deb:	int3   
   140021dec:	sub    rsp,0x28
   140021df0:	call   0x140021e60
   140021df5:	cmp    eax,0xffffffff
   140021df8:	setne  al
   140021dfb:	add    rsp,0x28
   140021dff:	ret    
   140021e00:	mov    QWORD PTR [rsp+0x8],rbx
   140021e05:	push   rdi
   140021e06:	sub    rsp,0x60
   140021e0a:	xor    ebx,ebx
   140021e0c:	mov    rdi,rcx
   140021e0f:	cmp    QWORD PTR [rcx+0x20],rbx
   140021e13:	jbe    0x140021e53
   140021e15:	mov    QWORD PTR [rcx+0x20],rbx
   140021e19:	lea    r8d,[rbx+0x38]
   140021e1d:	lea    rcx,[rsp+0x20]
   140021e22:	xor    edx,edx
   140021e24:	call   0x140058f40
   140021e29:	mov    rcx,QWORD PTR [rdi]
   140021e2c:	lea    eax,[rbx+0x54]
   140021e2f:	mov    QWORD PTR [rsp+0x30],rcx
   140021e34:	lea    rcx,[rsp+0x20]
   140021e39:	mov    DWORD PTR [rsp+0x28],0x3
   140021e41:	mov    WORD PTR [rsp+0x40],ax
   140021e46:	call   QWORD PTR [rip+0x4a66c]        # 0x14006c4b8
   140021e4c:	test   eax,eax
   140021e4e:	sete   al
   140021e51:	jmp    0x140021e55
   140021e53:	mov    al,0x1
   140021e55:	mov    rbx,QWORD PTR [rsp+0x70]
   140021e5a:	add    rsp,0x60
   140021e5e:	pop    rdi
   140021e5f:	ret    
   140021e60:	mov    QWORD PTR [rsp+0x10],rbx
   140021e65:	push   rdi
   140021e66:	mov    eax,0x1030
   140021e6b:	call   0x140055f20
   140021e70:	sub    rsp,rax
   140021e73:	mov    rax,QWORD PTR [rip+0x60066]        # 0x140081ee0
   140021e7a:	xor    rax,rsp
   140021e7d:	mov    QWORD PTR [rsp+0x1020],rax
   140021e85:	mov    rdi,rcx
   140021e88:	call   QWORD PTR [rip+0x4a2ba]        # 0x14006c148
   140021e8e:	mov    ebx,eax
   140021e90:	cmp    eax,0xffffffff
   140021e93:	jne    0x140021eb9
   140021e95:	mov    r8d,0x800
   140021e9b:	lea    rdx,[rsp+0x20]
   140021ea0:	mov    rcx,rdi
   140021ea3:	call   0x140031ef0
   140021ea8:	test   al,al
   140021eaa:	je     0x140021eb9
   140021eac:	lea    rcx,[rsp+0x20]
   140021eb1:	call   QWORD PTR [rip+0x4a291]        # 0x14006c148
   140021eb7:	mov    ebx,eax
   140021eb9:	mov    eax,ebx
   140021ebb:	mov    rcx,QWORD PTR [rsp+0x1020]
   140021ec3:	xor    rcx,rsp
   140021ec6:	call   0x140055f90
   140021ecb:	mov    rbx,QWORD PTR [rsp+0x1048]
   140021ed3:	add    rsp,0x1030
   140021eda:	pop    rdi
   140021edb:	ret    
   140021edc:	mov    eax,0x1058
   140021ee1:	call   0x140055f20
   140021ee6:	sub    rsp,rax
   140021ee9:	mov    rax,QWORD PTR [rip+0x5fff0]        # 0x140081ee0
   140021ef0:	xor    rax,rsp
   140021ef3:	mov    QWORD PTR [rsp+0x1040],rax
   140021efb:	mov    r8d,0x800
   140021f01:	lea    rdx,[rsp+0x40]
   140021f06:	call   0x140031bf8
   140021f0b:	movzx  eax,WORD PTR [rsp+0x40]
   140021f10:	lea    r9,[rsp+0x28]
   140021f15:	and    DWORD PTR [rsp+0x24],0x0
   140021f1a:	lea    r8,[rsp+0x30]
   140021f1f:	and    DWORD PTR [rsp+0x20],0x0
   140021f24:	lea    rdx,[rsp+0x20]
   140021f29:	neg    ax
   140021f2c:	lea    rax,[rsp+0x40]
   140021f31:	sbb    rcx,rcx
   140021f34:	and    rcx,rax
   140021f37:	call   QWORD PTR [rip+0x4a1fb]        # 0x14006c138
   140021f3d:	test   eax,eax
   140021f3f:	je     0x140021f58
   140021f41:	mov    eax,DWORD PTR [rsp+0x24]
   140021f45:	cmp    eax,DWORD PTR [rsp+0x2c]
   140021f49:	ja     0x140021f58
   140021f4b:	mov    ecx,DWORD PTR [rsp+0x20]
   140021f4f:	shl    rax,0x20
   140021f53:	add    rax,rcx
   140021f56:	jmp    0x140021f5a
   140021f58:	xor    eax,eax
   140021f5a:	mov    rcx,QWORD PTR [rsp+0x1040]
   140021f62:	xor    rcx,rsp
   140021f65:	call   0x140055f90
   140021f6a:	add    rsp,0x1058
   140021f71:	ret    
   140021f72:	int3   
   140021f73:	int3   
   140021f74:	test   cl,0x7
   140021f77:	sete   al
   140021f7a:	ret    
   140021f7b:	int3   
   140021f7c:	cmp    ecx,0xffffffff
   140021f7f:	je     0x140021f8c
   140021f81:	test   cl,0x10
   140021f84:	je     0x140021f8c
   140021f86:	mov    eax,0x1
   140021f8b:	ret    
   140021f8c:	xor    eax,eax
   140021f8e:	ret    
   140021f8f:	int3   
   140021f90:	rex push rbp
   140021f92:	lea    rbp,[rsp-0x2fa0]
   140021f9a:	mov    eax,0x30a0
   140021f9f:	call   0x140055f20
   140021fa4:	sub    rsp,rax
   140021fa7:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140021fb0:	mov    QWORD PTR [rsp+0x30b8],rbx
   140021fb8:	mov    rax,QWORD PTR [rip+0x5ff21]        # 0x140081ee0
   140021fbf:	xor    rax,rsp
   140021fc2:	mov    QWORD PTR [rbp+0x2f90],rax
   140021fc9:	mov    rbx,rcx
   140021fcc:	lea    rcx,[rsp+0x30]
   140021fd1:	call   0x14002324c
   140021fd6:	nop
   140021fd7:	mov    r9d,0x800
   140021fdd:	lea    r8,[rbp+0x1f90]
   140021fe4:	lea    rdx,[rip+0x4c521]        # 0x14006e50c
   140021feb:	mov    rcx,rbx
   140021fee:	call   0x1400322b0
   140021ff3:	lea    rdx,[rbp+0x1f90]
   140021ffa:	lea    rcx,[rsp+0x30]
   140021fff:	call   0x1400233f4
   140022004:	xor    ebx,ebx
   140022006:	mov    QWORD PTR [rbp+0x1f50],rbx
   14002200d:	mov    QWORD PTR [rbp+0x1f58],rbx
   140022014:	mov    QWORD PTR [rbp+0x1f60],rbx
   14002201b:	jmp    0x14002206b
   14002201d:	lea    rcx,[rbp+0xf40]
   140022024:	call   0x1400327bc
   140022029:	mov    rdx,rax
   14002202c:	movzx  ecx,WORD PTR [rax]
   14002202f:	cmp    cx,WORD PTR [rip+0x4c4e6]        # 0x14006e51c
   140022036:	jne    0x140022045
   140022038:	movzx  ecx,WORD PTR [rax+0x2]
   14002203c:	cmp    cx,WORD PTR [rip+0x4c4db]        # 0x14006e51e
   140022043:	je     0x14002206b
   140022045:	movzx  ecx,WORD PTR [rax]
   140022048:	cmp    cx,WORD PTR [rip+0x4c4ed]        # 0x14006e53c
   14002204f:	jne    0x140022085
   140022051:	movzx  eax,WORD PTR [rax+0x2]
   140022055:	cmp    ax,WORD PTR [rip+0x4c4e2]        # 0x14006e53e
   14002205c:	jne    0x140022085
   14002205e:	movzx  eax,WORD PTR [rdx+0x4]
   140022062:	cmp    ax,WORD PTR [rip+0x4c4d7]        # 0x14006e540
   140022069:	jne    0x140022085
   14002206b:	xor    r8d,r8d
   14002206e:	lea    rdx,[rbp+0xf40]
   140022075:	lea    rcx,[rsp+0x30]
   14002207a:	call   0x1400232f8
   14002207f:	test   al,al
   140022081:	jne    0x14002201d
   140022083:	mov    bl,0x1
   140022085:	lea    rcx,[rsp+0x30]
   14002208a:	call   0x140023264
   14002208f:	mov    al,bl
   140022091:	mov    rcx,QWORD PTR [rbp+0x2f90]
   140022098:	xor    rcx,rsp
   14002209b:	call   0x140055f90
   1400220a0:	mov    rbx,QWORD PTR [rsp+0x30b8]
   1400220a8:	add    rsp,0x30a0
   1400220af:	pop    rbp
   1400220b0:	ret    
   1400220b1:	int3   
   1400220b2:	int3   
   1400220b3:	int3   
   1400220b4:	rex push rbx
   1400220b6:	mov    eax,0x1260
   1400220bb:	call   0x140055f20
   1400220c0:	sub    rsp,rax
   1400220c3:	mov    rax,QWORD PTR [rip+0x5fe16]        # 0x140081ee0
   1400220ca:	xor    rax,rsp
   1400220cd:	mov    QWORD PTR [rsp+0x1250],rax
   1400220d5:	mov    r8d,0x800
   1400220db:	lea    rdx,[rsp+0x250]
   1400220e3:	call   0x140031c94
   1400220e8:	mov    DWORD PTR [rsp+0x38],0x105
   1400220f0:	lea    rax,[rsp+0x40]
   1400220f5:	mov    QWORD PTR [rsp+0x30],rax
   1400220fa:	lea    rcx,[rsp+0x250]
   140022102:	xor    ebx,ebx
   140022104:	xor    r9d,r9d
   140022107:	mov    QWORD PTR [rsp+0x28],rbx
   14002210c:	xor    r8d,r8d
   14002210f:	xor    edx,edx
   140022111:	mov    QWORD PTR [rsp+0x20],rbx
   140022116:	call   QWORD PTR [rip+0x4a034]        # 0x14006c150
   14002211c:	test   eax,eax
   14002211e:	je     0x140022153
   140022120:	lea    rdx,[rip+0x4c3d1]        # 0x14006e4f8
   140022127:	lea    rcx,[rsp+0x40]
   14002212c:	call   0x14005d4e8
   140022131:	test   eax,eax
   140022133:	je     0x14002214a
   140022135:	lea    rdx,[rip+0x4c3c4]        # 0x14006e500
   14002213c:	lea    rcx,[rsp+0x40]
   140022141:	call   0x14005d4e8
   140022146:	test   eax,eax
   140022148:	jne    0x14002214f
   14002214a:	mov    ebx,0x1
   14002214f:	mov    al,bl
   140022151:	jmp    0x140022155
   140022153:	xor    al,al
   140022155:	mov    rcx,QWORD PTR [rsp+0x1250]
   14002215d:	xor    rcx,rsp
   140022160:	call   0x140055f90
   140022165:	add    rsp,0x1260
   14002216c:	pop    rbx
   14002216d:	ret    
   14002216e:	int3   
   14002216f:	int3   
   140022170:	shr    ecx,0xa
   140022173:	and    ecx,0x1
   140022176:	mov    al,cl
   140022178:	ret    
   140022179:	int3   
   14002217a:	int3   
   14002217b:	int3   
   14002217c:	mov    eax,0x1038
   140022181:	call   0x140055f20
   140022186:	sub    rsp,rax
   140022189:	mov    rax,QWORD PTR [rip+0x5fd50]        # 0x140081ee0
   140022190:	xor    rax,rsp
   140022193:	mov    QWORD PTR [rsp+0x1020],rax
   14002219b:	mov    r8d,0x800
   1400221a1:	lea    rdx,[rsp+0x20]
   1400221a6:	call   0x140031c94
   1400221ab:	movzx  eax,WORD PTR [rsp+0x20]
   1400221b0:	neg    ax
   1400221b3:	lea    rax,[rsp+0x20]
   1400221b8:	sbb    rcx,rcx
   1400221bb:	and    rcx,rax
   1400221be:	call   QWORD PTR [rip+0x49f6c]        # 0x14006c130
   1400221c4:	cmp    eax,0x2
   1400221c7:	je     0x1400221d2
   1400221c9:	cmp    eax,0x5
   1400221cc:	je     0x1400221d2
   1400221ce:	xor    eax,eax
   1400221d0:	jmp    0x1400221d7
   1400221d2:	mov    eax,0x1
   1400221d7:	mov    rcx,QWORD PTR [rsp+0x1020]
   1400221df:	xor    rcx,rsp
   1400221e2:	call   0x140055f90
   1400221e7:	add    rsp,0x1038
   1400221ee:	ret    
   1400221ef:	int3   
   1400221f0:	xor    al,al
   1400221f2:	ret    
   1400221f3:	int3   
   1400221f4:	mov    QWORD PTR [rsp+0x10],rbx
   1400221f9:	push   rbp
   1400221fa:	push   rsi
   1400221fb:	push   rdi
   1400221fc:	mov    eax,0x1030
   140022201:	call   0x140055f20
   140022206:	sub    rsp,rax
   140022209:	mov    rax,QWORD PTR [rip+0x5fcd0]        # 0x140081ee0
   140022210:	xor    rax,rsp
   140022213:	mov    QWORD PTR [rsp+0x1020],rax
   14002221b:	mov    ebp,r8d
   14002221e:	mov    sil,dl
   140022221:	mov    rdi,rcx
   140022224:	call   0x140032798
   140022229:	xor    ebx,ebx
   14002222b:	cmp    WORD PTR [rax],0x20
   14002222f:	je     0x140022246
   140022231:	cmp    WORD PTR [rax],0x2e
   140022235:	je     0x140022246
   140022237:	xor    edx,edx
   140022239:	mov    rcx,rdi
   14002223c:	call   QWORD PTR [rip+0x49e7e]        # 0x14006c0c0
   140022242:	test   eax,eax
   140022244:	jne    0x14002227b
   140022246:	mov    rcx,rdi
   140022249:	call   0x140021e60
   14002224e:	cmp    eax,0xffffffff
   140022251:	jne    0x14002228e
   140022253:	mov    r8d,0x800
   140022259:	lea    rdx,[rsp+0x20]
   14002225e:	mov    rcx,rdi
   140022261:	call   0x140031ef0
   140022266:	test   al,al
   140022268:	je     0x14002228e
   14002226a:	xor    edx,edx
   14002226c:	lea    rcx,[rsp+0x20]
   140022271:	call   QWORD PTR [rip+0x49e49]        # 0x14006c0c0
   140022277:	test   eax,eax
   140022279:	je     0x14002228e
   14002227b:	test   sil,sil
   14002227e:	je     0x14002228a
   140022280:	mov    edx,ebp
   140022282:	mov    rcx,rdi
   140022285:	call   0x140022740
   14002228a:	xor    eax,eax
   14002228c:	jmp    0x1400222a0
   14002228e:	call   QWORD PTR [rip+0x49f34]        # 0x14006c1c8
   140022294:	add    eax,0xfffffffe
   140022297:	cmp    eax,0x1
   14002229a:	setbe  bl
   14002229d:	lea    eax,[rbx+0x1]
   1400222a0:	mov    rcx,QWORD PTR [rsp+0x1020]
   1400222a8:	xor    rcx,rsp
   1400222ab:	call   0x140055f90
   1400222b0:	mov    rbx,QWORD PTR [rsp+0x1058]
   1400222b8:	add    rsp,0x1030
   1400222bf:	pop    rdi
   1400222c0:	pop    rsi
   1400222c1:	pop    rbp
   1400222c2:	ret    
   1400222c3:	int3   
   1400222c4:	mov    QWORD PTR [rsp+0x10],rbx
   1400222c9:	mov    QWORD PTR [rsp+0x18],rbp
   1400222ce:	mov    QWORD PTR [rsp+0x20],rsi
   1400222d3:	push   rdi
   1400222d4:	push   r14
   1400222d6:	push   r15
   1400222d8:	sub    rsp,0xc0
   1400222df:	mov    rax,QWORD PTR [rip+0x5fbfa]        # 0x140081ee0
   1400222e6:	xor    rax,rsp
   1400222e9:	mov    QWORD PTR [rsp+0xb0],rax
   1400222f1:	or     rdi,0xffffffffffffffff
   1400222f5:	mov    r14,rdx
   1400222f8:	xor    r15d,r15d
   1400222fb:	mov    rsi,rcx
   1400222fe:	inc    rdi
   140022301:	cmp    WORD PTR [rcx+rdi*2],r15w
   140022306:	jne    0x1400222fe
   140022308:	lea    rcx,[rsp+0x30]
   14002230d:	mov    QWORD PTR [rsp+0x30],r15
   140022312:	call   0x1400476c0
   140022317:	lea    rcx,[rsp+0x30]
   14002231c:	call   0x140047484
   140022321:	lea    rcx,[rsp+0x30]
   140022326:	mov    rbp,rax
   140022329:	call   0x1400472a4
   14002232e:	mov    ecx,eax
   140022330:	mov    ebx,r15d
   140022333:	mov    eax,ebp
   140022335:	shr    eax,0xa
   140022338:	xor    ecx,eax
   14002233a:	xor    ebp,ecx
   14002233c:	mov    ecx,ebp
   14002233e:	cmp    ebx,0x64
   140022341:	ja     0x140022355
   140022343:	mov    eax,0x10624dd3
   140022348:	mul    ebp
   14002234a:	shr    edx,0x6
   14002234d:	imul   eax,edx,0x3e8
   140022353:	sub    ecx,eax
   140022355:	mov    DWORD PTR [rsp+0x20],ecx
   140022359:	lea    r8,[rip+0x4c1c0]        # 0x14006e520
   140022360:	lea    rcx,[rsp+0x40]
   140022365:	mov    r9d,ebx
   140022368:	mov    edx,0x32
   14002236d:	call   0x140006acc
   140022372:	lea    rcx,[rsp+0x40]
   140022377:	or     rax,0xffffffffffffffff
   14002237b:	inc    rax
   14002237e:	cmp    WORD PTR [rcx+rax*2],r15w
   140022383:	jne    0x14002237b
   140022385:	add    rax,rdi
   140022388:	cmp    rax,r14
   14002238b:	jae    0x1400223d3
   14002238d:	cmp    ebx,0x3e8
   140022393:	je     0x1400223d3
   140022395:	lea    rdx,[rsp+0x40]
   14002239a:	lea    rax,[rdi+rdi*1]
   14002239e:	sub    rax,rdx
   1400223a1:	lea    rcx,[rsp+0x40]
   1400223a6:	lea    rdx,[rax+rsi*1]
   1400223aa:	movzx  eax,WORD PTR [rcx]
   1400223ad:	mov    WORD PTR [rdx+rcx*1],ax
   1400223b1:	lea    rcx,[rcx+0x2]
   1400223b5:	test   ax,ax
   1400223b8:	jne    0x1400223aa
   1400223ba:	mov    rcx,rsi
   1400223bd:	call   0x140021e60
   1400223c2:	cmp    eax,0xffffffff
   1400223c5:	je     0x1400223ce
   1400223c7:	inc    ebx
   1400223c9:	jmp    0x14002233c
   1400223ce:	mov    rax,rsi
   1400223d1:	jmp    0x1400223d5
   1400223d3:	xor    eax,eax
   1400223d5:	mov    rcx,QWORD PTR [rsp+0xb0]
   1400223dd:	xor    rcx,rsp
   1400223e0:	call   0x140055f90
   1400223e5:	lea    r11,[rsp+0xc0]
   1400223ed:	mov    rbx,QWORD PTR [r11+0x28]
   1400223f1:	mov    rbp,QWORD PTR [r11+0x30]
   1400223f5:	mov    rsi,QWORD PTR [r11+0x38]
   1400223f9:	mov    rsp,r11
   1400223fc:	pop    r15
   1400223fe:	pop    r14
   140022400:	pop    rdi
   140022401:	ret    
   140022402:	int3   
   140022403:	int3   
   140022404:	xor    edx,edx
   140022406:	jmp    0x140022740
   14002240b:	int3   
   14002240c:	mov    QWORD PTR [rsp+0x20],rbx
   140022411:	push   rbp
   140022412:	push   rsi
   140022413:	push   rdi
   140022414:	sub    rsp,0xa0
   14002241b:	mov    rax,QWORD PTR [rip+0x5fabe]        # 0x140081ee0
   140022422:	xor    rax,rsp
   140022425:	mov    QWORD PTR [rsp+0x90],rax
   14002242d:	mov    rdi,rdx
   140022430:	mov    rsi,rcx
   140022433:	mov    rdx,rcx
   140022436:	mov    rbp,r8
   140022439:	mov    rcx,rdi
   14002243c:	call   0x140046158
   140022441:	movsd  xmm0,QWORD PTR [rip+0x4c0e7]        # 0x14006e530
   140022449:	xor    ebx,ebx
   14002244b:	movzx  eax,WORD PTR [rip+0x4c0e6]        # 0x14006e538
   140022452:	movsd  QWORD PTR [rsp+0x20],xmm0
   140022458:	mov    WORD PTR [rsp+0x28],ax
   14002245d:	lea    ecx,[rbx+0x3e8]
   140022463:	mov    r8d,0x2e
   140022469:	lea    rdx,[rsp+0x28]
   14002246e:	call   0x140045f5c
   140022473:	mov    r8,rbp
   140022476:	lea    rdx,[rsp+0x20]
   14002247b:	mov    rcx,rdi
   14002247e:	call   0x1400328b8
   140022483:	mov    rcx,rdi
   140022486:	call   0x140021e60
   14002248b:	cmp    eax,0xffffffff
   14002248e:	je     0x14002249a
   140022490:	inc    ebx
   140022492:	cmp    ebx,0x3e8
   140022498:	jb     0x14002245d
   14002249a:	mov    rdx,rdi
   14002249d:	mov    rcx,rsi
   1400224a0:	call   0x1400224c8
   1400224a5:	mov    rcx,QWORD PTR [rsp+0x90]
   1400224ad:	xor    rcx,rsp
   1400224b0:	call   0x140055f90
   1400224b5:	mov    rbx,QWORD PTR [rsp+0xd8]
   1400224bd:	add    rsp,0xa0
   1400224c4:	pop    rdi
   1400224c5:	pop    rsi
   1400224c6:	pop    rbp
   1400224c7:	ret    
   1400224c8:	mov    QWORD PTR [rsp+0x18],rbx
   1400224cd:	mov    QWORD PTR [rsp+0x20],rsi
   1400224d2:	push   rdi
   1400224d3:	mov    eax,0x2030
   1400224d8:	call   0x140055f20
   1400224dd:	sub    rsp,rax
   1400224e0:	mov    rax,QWORD PTR [rip+0x5f9f9]        # 0x140081ee0
   1400224e7:	xor    rax,rsp
   1400224ea:	mov    QWORD PTR [rsp+0x2020],rax
   1400224f2:	mov    rsi,rdx
   1400224f5:	mov    rdi,rcx
   1400224f8:	call   QWORD PTR [rip+0x49c02]        # 0x14006c100
   1400224fe:	test   eax,eax
   140022500:	setne  bl
   140022503:	test   bl,bl
   140022505:	jne    0x140022550
   140022507:	mov    r8d,0x800
   14002250d:	lea    rdx,[rsp+0x1020]
   140022515:	mov    rcx,rdi
   140022518:	call   0x140031ef0
   14002251d:	test   al,al
   14002251f:	je     0x140022550
   140022521:	mov    r8d,0x800
   140022527:	lea    rdx,[rsp+0x20]
   14002252c:	mov    rcx,rsi
   14002252f:	call   0x140031ef0
   140022534:	test   al,al
   140022536:	je     0x140022550
   140022538:	lea    rdx,[rsp+0x20]
   14002253d:	lea    rcx,[rsp+0x1020]
   140022545:	call   QWORD PTR [rip+0x49bb5]        # 0x14006c100
   14002254b:	test   eax,eax
   14002254d:	setne  bl
   140022550:	mov    al,bl
   140022552:	mov    rcx,QWORD PTR [rsp+0x2020]
   14002255a:	xor    rcx,rsp
   14002255d:	call   0x140055f90
   140022562:	lea    r11,[rsp+0x2030]
   14002256a:	mov    rbx,QWORD PTR [r11+0x20]
   14002256e:	mov    rsi,QWORD PTR [r11+0x28]
   140022572:	mov    rsp,r11
   140022575:	pop    rdi
   140022576:	ret    
   140022577:	int3   
   140022578:	rex push rbx
   14002257a:	push   rbp
   14002257b:	push   rsi
   14002257c:	push   rdi
   14002257d:	push   r12
   14002257f:	push   r13
   140022581:	push   r14
   140022583:	push   r15
   140022585:	mov    eax,0x1088
   14002258a:	call   0x140055f20
   14002258f:	sub    rsp,rax
   140022592:	mov    rax,QWORD PTR [rip+0x5f947]        # 0x140081ee0
   140022599:	xor    rax,rsp
   14002259c:	mov    QWORD PTR [rsp+0x1070],rax
   1400225a4:	mov    rsi,rcx
   1400225a7:	mov    QWORD PTR [rsp+0x48],rdx
   1400225ac:	xor    ecx,ecx
   1400225ae:	mov    r13,r9
   1400225b1:	mov    r15,r8
   1400225b4:	mov    bl,0x1
   1400225b6:	test   rdx,rdx
   1400225b9:	je     0x1400225c3
   1400225bb:	mov    r12b,bl
   1400225be:	cmp    QWORD PTR [rdx],rcx
   1400225c1:	jne    0x1400225c6
   1400225c3:	mov    r12b,cl
   1400225c6:	test   r8,r8
   1400225c9:	je     0x1400225d3
   1400225cb:	mov    r14b,bl
   1400225ce:	cmp    QWORD PTR [r8],rcx
   1400225d1:	jne    0x1400225d6
   1400225d3:	mov    r14b,cl
   1400225d6:	test   r9,r9
   1400225d9:	je     0x1400225e3
   1400225db:	mov    bpl,bl
   1400225de:	cmp    QWORD PTR [r9],rcx
   1400225e1:	jne    0x1400225e6
   1400225e3:	mov    bpl,cl
   1400225e6:	mov    rcx,rsi
   1400225e9:	call   0x140021e60
   1400225ee:	mov    edi,eax
   1400225f0:	cmp    eax,0xffffffff
   1400225f3:	je     0x140022605
   1400225f5:	test   bl,al
   1400225f7:	je     0x140022605
   1400225f9:	xor    edx,edx
   1400225fb:	mov    rcx,rsi
   1400225fe:	call   0x140022740
   140022603:	jmp    0x140022607
   140022605:	xor    bl,bl
   140022607:	and    QWORD PTR [rsp+0x30],0x0
   14002260d:	mov    eax,0x3
   140022612:	mov    r8d,eax
   140022615:	mov    DWORD PTR [rsp+0x28],0x2000000
   14002261d:	xor    r9d,r9d
   140022620:	mov    DWORD PTR [rsp+0x20],eax
   140022624:	mov    edx,0x40000000
   140022629:	mov    rcx,rsi
   14002262c:	call   QWORD PTR [rip+0x49a9e]        # 0x14006c0d0
   140022632:	mov    QWORD PTR [rsp+0x40],rax
   140022637:	cmp    rax,0xffffffffffffffff
   14002263b:	jne    0x140022693
   14002263d:	mov    r8d,0x800
   140022643:	lea    rdx,[rsp+0x70]
   140022648:	mov    rcx,rsi
   14002264b:	call   0x140031ef0
   140022650:	test   al,al
   140022652:	je     0x140022719
   140022658:	and    QWORD PTR [rsp+0x30],0x0
   14002265e:	lea    rcx,[rsp+0x70]
   140022663:	mov    r8d,0x3
   140022669:	mov    DWORD PTR [rsp+0x28],0x2000000
   140022671:	xor    r9d,r9d
   140022674:	mov    DWORD PTR [rsp+0x20],r8d
   140022679:	mov    edx,0x40000000
   14002267e:	call   QWORD PTR [rip+0x49a4c]        # 0x14006c0d0
   140022684:	mov    QWORD PTR [rsp+0x40],rax
   140022689:	cmp    rax,0xffffffffffffffff
   14002268d:	je     0x140022719
   140022693:	test   r12b,r12b
   140022696:	je     0x1400226a7
   140022698:	mov    rcx,QWORD PTR [rsp+0x48]
   14002269d:	lea    rdx,[rsp+0x50]
   1400226a2:	call   0x14004759c
   1400226a7:	test   r14b,r14b
   1400226aa:	je     0x1400226b9
   1400226ac:	lea    rdx,[rsp+0x60]
   1400226b1:	mov    rcx,r15
   1400226b4:	call   0x14004759c
   1400226b9:	test   bpl,bpl
   1400226bc:	je     0x1400226cb
   1400226be:	lea    rdx,[rsp+0x58]
   1400226c3:	mov    rcx,r13
   1400226c6:	call   0x14004759c
   1400226cb:	mov    rcx,QWORD PTR [rsp+0x40]
   1400226d0:	lea    rax,[rsp+0x50]
   1400226d5:	neg    r12b
   1400226d8:	sbb    r9,r9
   1400226db:	and    r9,rax
   1400226de:	lea    rax,[rsp+0x58]
   1400226e3:	neg    bpl
   1400226e6:	sbb    r8,r8
   1400226e9:	and    r8,rax
   1400226ec:	lea    rax,[rsp+0x60]
   1400226f1:	neg    r14b
   1400226f4:	sbb    rdx,rdx
   1400226f7:	and    rdx,rax
   1400226fa:	call   QWORD PTR [rip+0x499a0]        # 0x14006c0a0
   140022700:	mov    rcx,QWORD PTR [rsp+0x40]
   140022705:	call   QWORD PTR [rip+0x4999d]        # 0x14006c0a8
   14002270b:	test   bl,bl
   14002270d:	je     0x140022719
   14002270f:	mov    edx,edi
   140022711:	mov    rcx,rsi
   140022714:	call   0x140022740
   140022719:	mov    rcx,QWORD PTR [rsp+0x1070]
   140022721:	xor    rcx,rsp
   140022724:	call   0x140055f90
   140022729:	add    rsp,0x1088
   140022730:	pop    r15
   140022732:	pop    r14
   140022734:	pop    r13
   140022736:	pop    r12
   140022738:	pop    rdi
   140022739:	pop    rsi
   14002273a:	pop    rbp
   14002273b:	pop    rbx
   14002273c:	ret    
   14002273d:	int3   
   14002273e:	int3   
   14002273f:	int3   
   140022740:	mov    QWORD PTR [rsp+0x18],rbx
   140022745:	mov    QWORD PTR [rsp+0x20],rsi
   14002274a:	push   rdi
   14002274b:	mov    eax,0x1030
   140022750:	call   0x140055f20
   140022755:	sub    rsp,rax
   140022758:	mov    rax,QWORD PTR [rip+0x5f781]        # 0x140081ee0
   14002275f:	xor    rax,rsp
   140022762:	mov    QWORD PTR [rsp+0x1020],rax
   14002276a:	mov    edi,edx
   14002276c:	mov    rsi,rcx
   14002276f:	call   QWORD PTR [rip+0x499cb]        # 0x14006c140
   140022775:	test   eax,eax
   140022777:	setne  bl
   14002277a:	test   bl,bl
   14002277c:	jne    0x1400227a7
   14002277e:	mov    r8d,0x800
   140022784:	lea    rdx,[rsp+0x20]
   140022789:	mov    rcx,rsi
   14002278c:	call   0x140031ef0
   140022791:	test   al,al
   140022793:	je     0x1400227a7
   140022795:	mov    edx,edi
   140022797:	lea    rcx,[rsp+0x20]
   14002279c:	call   QWORD PTR [rip+0x4999e]        # 0x14006c140
   1400227a2:	test   eax,eax
   1400227a4:	setne  bl
   1400227a7:	mov    al,bl
   1400227a9:	mov    rcx,QWORD PTR [rsp+0x1020]
   1400227b1:	xor    rcx,rsp
   1400227b4:	call   0x140055f90
   1400227b9:	lea    r11,[rsp+0x1030]
   1400227c1:	mov    rbx,QWORD PTR [r11+0x20]
   1400227c5:	mov    rsi,QWORD PTR [r11+0x28]
   1400227c9:	mov    rsp,r11
   1400227cc:	pop    rdi
   1400227cd:	ret    
   1400227ce:	int3   
   1400227cf:	int3   
   1400227d0:	mov    QWORD PTR [rsp+0x18],rbx
   1400227d5:	mov    QWORD PTR [rsp+0x20],rbp
   1400227da:	push   rsi
   1400227db:	push   rdi
   1400227dc:	push   r14
   1400227de:	mov    eax,0x1060
   1400227e3:	call   0x140055f20
   1400227e8:	sub    rsp,rax
   1400227eb:	mov    rax,QWORD PTR [rip+0x5f6ee]        # 0x140081ee0
   1400227f2:	xor    rax,rsp
   1400227f5:	mov    QWORD PTR [rsp+0x1050],rax
   1400227fd:	xor    edi,edi
   1400227ff:	mov    bpl,dl
   140022802:	mov    QWORD PTR [rsp+0x30],rdi
   140022807:	xor    r9d,r9d
   14002280a:	mov    DWORD PTR [rsp+0x28],0xa000000
   140022812:	mov    rbx,rcx
   140022815:	lea    r14d,[rdi+0x3]
   140022819:	mov    r8d,r14d
   14002281c:	mov    DWORD PTR [rsp+0x20],r14d
   140022821:	mov    edx,r14d
   140022824:	call   QWORD PTR [rip+0x498a6]        # 0x14006c0d0
   14002282a:	mov    rsi,rax
   14002282d:	cmp    rax,0xffffffffffffffff
   140022831:	jne    0x14002287d
   140022833:	mov    r8d,0x800
   140022839:	lea    rdx,[rsp+0x50]
   14002283e:	mov    rcx,rbx
   140022841:	call   0x140031ef0
   140022846:	test   al,al
   140022848:	je     0x140022879
   14002284a:	mov    QWORD PTR [rsp+0x30],rdi
   14002284f:	lea    rcx,[rsp+0x50]
   140022854:	mov    DWORD PTR [rsp+0x28],0xa000000
   14002285c:	xor    r9d,r9d
   14002285f:	mov    r8d,r14d
   140022862:	mov    DWORD PTR [rsp+0x20],r14d
   140022867:	mov    edx,r14d
   14002286a:	call   QWORD PTR [rip+0x49860]        # 0x14006c0d0
   140022870:	mov    rsi,rax
   140022873:	cmp    rax,0xffffffffffffffff
   140022877:	jne    0x14002287d
   140022879:	xor    al,al
   14002287b:	jmp    0x1400228cb
   14002287d:	mov    eax,edi
   14002287f:	mov    QWORD PTR [rsp+0x38],rdi
   140022884:	test   bpl,bpl
   140022887:	lea    r8,[rsp+0x40]
   14002288c:	mov    r9d,0x2
   140022892:	mov    edx,0x9c040
   140022897:	setne  al
   14002289a:	mov    rcx,rsi
   14002289d:	mov    WORD PTR [rsp+0x40],ax
   1400228a2:	lea    rax,[rsp+0x44]
   1400228a7:	mov    QWORD PTR [rsp+0x30],rax
   1400228ac:	mov    DWORD PTR [rsp+0x28],edi
   1400228b0:	mov    QWORD PTR [rsp+0x20],rdi
   1400228b5:	call   QWORD PTR [rip+0x497d5]        # 0x14006c090
   1400228bb:	mov    rcx,rsi
   1400228be:	mov    ebx,eax
   1400228c0:	call   QWORD PTR [rip+0x497e2]        # 0x14006c0a8
   1400228c6:	test   ebx,ebx
   1400228c8:	setne  al
   1400228cb:	mov    rcx,QWORD PTR [rsp+0x1050]
   1400228d3:	xor    rcx,rsp
   1400228d6:	call   0x140055f90
   1400228db:	lea    r11,[rsp+0x1060]
   1400228e3:	mov    rbx,QWORD PTR [r11+0x30]
   1400228e7:	mov    rbp,QWORD PTR [r11+0x38]
   1400228eb:	mov    rsp,r11
   1400228ee:	pop    r14
   1400228f0:	pop    rdi
   1400228f1:	pop    rsi
   1400228f2:	ret    
   1400228f3:	int3   
   1400228f4:	rex push rdi
   1400228f6:	mov    eax,0x20a0
   1400228fb:	call   0x140055f20
   140022900:	sub    rsp,rax
   140022903:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002290c:	mov    QWORD PTR [rsp+0x20b8],rbx
   140022914:	mov    rax,QWORD PTR [rip+0x5f5c5]        # 0x140081ee0
   14002291b:	xor    rax,rsp
   14002291e:	mov    QWORD PTR [rsp+0x2090],rax
   140022926:	mov    rdi,rcx
   140022929:	call   0x140032288
   14002292e:	xor    ebx,ebx
   140022930:	test   al,al
   140022932:	je     0x140022989
   140022934:	lea    rcx,[rsp+0x30]
   140022939:	call   0x14002324c
   14002293e:	nop
   14002293f:	mov    rdx,rdi
   140022942:	lea    rcx,[rsp+0x30]
   140022947:	call   0x1400233f4
   14002294c:	mov    QWORD PTR [rsp+0x2050],rbx
   140022954:	mov    QWORD PTR [rsp+0x2058],rbx
   14002295c:	mov    QWORD PTR [rsp+0x2060],rbx
   140022964:	xor    r8d,r8d
   140022967:	lea    rdx,[rsp+0x1040]
   14002296f:	lea    rcx,[rsp+0x30]
   140022974:	call   0x1400232f8
   140022979:	mov    bl,al
   14002297b:	lea    rcx,[rsp+0x30]
   140022980:	call   0x140023264
   140022985:	mov    al,bl
   140022987:	jmp    0x140022997
   140022989:	mov    rcx,rdi
   14002298c:	call   0x140021e60
   140022991:	cmp    eax,0xffffffff
   140022994:	setne  al
   140022997:	mov    rcx,QWORD PTR [rsp+0x2090]
   14002299f:	xor    rcx,rsp
   1400229a2:	call   0x140055f90
   1400229a7:	mov    rbx,QWORD PTR [rsp+0x20b8]
   1400229af:	add    rsp,0x20a0
   1400229b6:	pop    rdi
   1400229b7:	ret    
   1400229b8:	mov    QWORD PTR [rsp+0x10],rbx
   1400229bd:	push   rdi
   1400229be:	mov    eax,0x10a0
   1400229c3:	call   0x140055f20
   1400229c8:	sub    rsp,rax
   1400229cb:	mov    rax,QWORD PTR [rip+0x5f50e]        # 0x140081ee0
   1400229d2:	xor    rax,rsp
   1400229d5:	mov    QWORD PTR [rsp+0x1090],rax
   1400229dd:	mov    r8d,0x832
   1400229e3:	lea    rdx,[rsp+0x20]
   1400229e8:	mov    rdi,rcx
   1400229eb:	call   0x14002240c
   1400229f0:	xor    ebx,ebx
   1400229f2:	test   al,al
   1400229f4:	je     0x140022a04
   1400229f6:	lea    rcx,[rsp+0x20]
   1400229fb:	call   0x140021a70
   140022a00:	test   al,al
   140022a02:	jne    0x140022a10
   140022a04:	mov    rcx,rdi
   140022a07:	call   0x140021a70
   140022a0c:	test   al,al
   140022a0e:	je     0x140022a15
   140022a10:	mov    ebx,0x1
   140022a15:	mov    al,bl
   140022a17:	mov    rcx,QWORD PTR [rsp+0x1090]
   140022a1f:	xor    rcx,rsp
   140022a22:	call   0x140055f90
   140022a27:	mov    rbx,QWORD PTR [rsp+0x10b8]
   140022a2f:	add    rsp,0x10a0
   140022a36:	pop    rdi
   140022a37:	ret    
   140022a38:	rex push rbp
   140022a3a:	push   r14
   140022a3c:	push   r15
   140022a3e:	lea    rbp,[rsp-0x2000]
   140022a46:	mov    eax,0x2100
   140022a4b:	call   0x140055f20
   140022a50:	sub    rsp,rax
   140022a53:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   140022a5c:	mov    QWORD PTR [rsp+0x2128],rbx
   140022a64:	mov    QWORD PTR [rsp+0x2130],rdi
   140022a6c:	mov    rax,QWORD PTR [rip+0x5f46d]        # 0x140081ee0
   140022a73:	xor    rax,rsp
   140022a76:	mov    QWORD PTR [rbp+0x1ff0],rax
   140022a7d:	mov    r14,rcx
   140022a80:	lea    rcx,[rsp+0x50]
   140022a85:	call   0x14002071c
   140022a8a:	nop
   140022a8b:	mov    r8d,0x1
   140022a91:	mov    rdx,r14
   140022a94:	lea    rcx,[rsp+0x50]
   140022a99:	call   0x140020c80
   140022a9e:	xor    ebx,ebx
   140022aa0:	test   al,al
   140022aa2:	je     0x140022b52
   140022aa8:	lea    rcx,[rsp+0x50]
   140022aad:	call   0x140020b88
   140022ab2:	mov    rdi,rax
   140022ab5:	mov    QWORD PTR [rsp+0x20],rbx
   140022aba:	mov    QWORD PTR [rsp+0x28],rbx
   140022abf:	mov    QWORD PTR [rsp+0x30],rbx
   140022ac4:	mov    QWORD PTR [rsp+0x38],rbx
   140022ac9:	mov    r15d,0x10000
   140022acf:	mov    edx,r15d
   140022ad2:	lea    rcx,[rsp+0x20]
   140022ad7:	call   0x1400079a4
   140022adc:	nop
   140022add:	mov    r8d,r15d
   140022ae0:	xor    edx,edx
   140022ae2:	mov    rcx,QWORD PTR [rsp+0x20]
   140022ae7:	call   0x140058f40
   140022aec:	test   rdi,rdi
   140022aef:	jle    0x140022b13
   140022af1:	dec    rdi
   140022af4:	shr    rdi,0x10
   140022af8:	inc    rdi
   140022afb:	mov    r8,r15
   140022afe:	mov    rdx,QWORD PTR [rsp+0x20]
   140022b03:	lea    rcx,[rsp+0x50]
   140022b08:	call   0x1400212ac
   140022b0d:	sub    rdi,0x1
   140022b11:	jne    0x140022afb
   140022b13:	lea    rcx,[rsp+0x50]
   140022b18:	call   0x140020bf8
   140022b1d:	xor    r8d,r8d
   140022b20:	xor    edx,edx
   140022b22:	lea    rcx,[rsp+0x50]
   140022b27:	call   0x140021048
   140022b2c:	lea    rcx,[rsp+0x50]
   140022b31:	call   0x14002122c
   140022b36:	lea    rcx,[rsp+0x50]
   140022b3b:	call   0x1400207cc
   140022b40:	nop
   140022b41:	cmp    QWORD PTR [rsp+0x20],rbx
   140022b46:	je     0x140022b52
   140022b48:	mov    rcx,QWORD PTR [rsp+0x20]
   140022b4d:	call   0x14005a938
   140022b52:	mov    r8d,0x832
   140022b58:	lea    rdx,[rbp+0xf80]
   140022b5f:	mov    rcx,r14
   140022b62:	call   0x14002240c
   140022b67:	test   al,al
   140022b69:	je     0x140022b7b
   140022b6b:	lea    rcx,[rbp+0xf80]
   140022b72:	call   0x140021af4
   140022b77:	test   al,al
   140022b79:	jne    0x140022b87
   140022b7b:	mov    rcx,r14
   140022b7e:	call   0x140021af4
   140022b83:	test   al,al
   140022b85:	je     0x140022b89
   140022b87:	mov    bl,0x1
   140022b89:	lea    rcx,[rsp+0x50]
   140022b8e:	call   0x140020758
   140022b93:	mov    al,bl
   140022b95:	mov    rcx,QWORD PTR [rbp+0x1ff0]
   140022b9c:	xor    rcx,rsp
   140022b9f:	call   0x140055f90
   140022ba4:	lea    r11,[rsp+0x2100]
   140022bac:	mov    rbx,QWORD PTR [r11+0x28]
   140022bb0:	mov    rdi,QWORD PTR [r11+0x30]
   140022bb4:	mov    rsp,r11
   140022bb7:	pop    r15
   140022bb9:	pop    r14
   140022bbb:	pop    rbp
   140022bbc:	ret    
   140022bbd:	int3   
   140022bbe:	int3   
   140022bbf:	int3   
   140022bc0:	mov    QWORD PTR [rsp+0x18],r8
   140022bc5:	mov    QWORD PTR [rsp+0x20],r9
   140022bca:	push   rbp
   140022bcb:	push   rbx
   140022bcc:	push   rsi
   140022bcd:	push   rdi
   140022bce:	push   r14
   140022bd0:	lea    rbp,[rsp-0x3740]
   140022bd8:	mov    eax,0x3840
   140022bdd:	call   0x140055f20
   140022be2:	sub    rsp,rax
   140022be5:	mov    rax,QWORD PTR [rip+0x5f2f4]        # 0x140081ee0
   140022bec:	xor    rax,rsp
   140022bef:	mov    QWORD PTR [rbp+0x3730],rax
   140022bf6:	mov    rax,r8
   140022bf9:	lea    rsi,[rbp+0x3788]
   140022c00:	mov    rbx,rdx
   140022c03:	mov    edi,ecx
   140022c05:	mov    rcx,rax
   140022c08:	lea    rdx,[rsp+0x30]
   140022c0d:	mov    r8d,0x400
   140022c13:	call   0x140045d78
   140022c18:	call   0x140006ac4
   140022c1d:	xor    r14d,r14d
   140022c20:	mov    QWORD PTR [rsp+0x28],rsi
   140022c25:	lea    r9,[rsp+0x30]
   140022c2a:	mov    QWORD PTR [rsp+0x20],r14
   140022c2f:	mov    r8d,0xc00
   140022c35:	lea    rdx,[rbp+0x1f30]
   140022c3c:	mov    rcx,QWORD PTR [rax]
   140022c3f:	call   0x14005d174
   140022c44:	lea    eax,[rdi-0x1]
   140022c47:	cmp    eax,0x1
   140022c4a:	jbe    0x140022c6d
   140022c4c:	lea    rax,[rbp+0x1f30]
   140022c53:	or     r8,0xffffffffffffffff
   140022c57:	inc    r8
   140022c5a:	cmp    WORD PTR [rax+r8*2],r14w
   140022c5f:	jne    0x140022c57
   140022c61:	add    r8,r8
   140022c64:	lea    rdx,[rbp+0x1f30]
   140022c6b:	jmp    0x140022cbf
   140022c6d:	mov    esi,0x1800
   140022c72:	lea    rdx,[rbp+0x730]
   140022c79:	mov    r8d,esi
   140022c7c:	lea    rcx,[rbp+0x1f30]
   140022c83:	call   0x140048ca8
   140022c88:	cmp    edi,0x2
   140022c8b:	jne    0x140022ca4
   140022c8d:	mov    r8d,esi
   140022c90:	lea    rdx,[rbp+0x730]
   140022c97:	lea    rcx,[rbp+0x730]
   140022c9e:	call   QWORD PTR [rip+0x4985c]        # 0x14006c500
   140022ca4:	lea    rax,[rbp+0x730]
   140022cab:	or     r8,0xffffffffffffffff
   140022caf:	inc    r8
   140022cb2:	cmp    BYTE PTR [rax+r8*1],r14b
   140022cb6:	jne    0x140022caf
   140022cb8:	lea    rdx,[rbp+0x730]
   140022cbf:	mov    rcx,rbx
   140022cc2:	call   0x1400212ac
   140022cc7:	mov    rcx,QWORD PTR [rbp+0x3730]
   140022cce:	xor    rcx,rsp
   140022cd1:	call   0x140055f90
   140022cd6:	add    rsp,0x3840
   140022cdd:	pop    r14
   140022cdf:	pop    rdi
   140022ce0:	pop    rsi
   140022ce1:	pop    rbx
   140022ce2:	pop    rbp
   140022ce3:	ret    
   140022ce4:	rex push rbp
   140022ce6:	push   rsi
   140022ce7:	push   rdi
   140022ce8:	push   r12
   140022cea:	push   r13
   140022cec:	push   r14
   140022cee:	push   r15
   140022cf0:	lea    rbp,[rsp-0x2fe0]
   140022cf8:	mov    eax,0x30e0
   140022cfd:	call   0x140055f20
   140022d02:	sub    rsp,rax
   140022d05:	mov    QWORD PTR [rbp-0x68],0xfffffffffffffffe
   140022d0d:	mov    QWORD PTR [rsp+0x3130],rbx
   140022d15:	mov    rax,QWORD PTR [rip+0x5f1c4]        # 0x140081ee0
   140022d1c:	xor    rax,rsp
   140022d1f:	mov    QWORD PTR [rbp+0x2fd0],rax
   140022d26:	mov    bl,r9b
   140022d29:	mov    QWORD PTR [rsp+0x50],rdx
   140022d2e:	xor    edi,edi
   140022d30:	mov    WORD PTR [rbp+0xfd0],di
   140022d37:	mov    eax,0x800
   140022d3c:	test   rcx,rcx
   140022d3f:	je     0x140022d6e
   140022d41:	test   r8b,r8b
   140022d44:	mov    r8d,eax
   140022d47:	je     0x140022d5f
   140022d49:	mov    BYTE PTR [rsp+0x20],dil
   140022d4e:	mov    r9b,0x1
   140022d51:	lea    rdx,[rbp+0xfd0]
   140022d58:	call   0x140031b44
   140022d5d:	jmp    0x140022d6e
   140022d5f:	mov    rdx,rcx
   140022d62:	lea    rcx,[rbp+0xfd0]
   140022d69:	call   0x140046158
   140022d6e:	lea    rcx,[rbp-0x60]
   140022d72:	call   0x14002071c
   140022d77:	nop
   140022d78:	cmp    WORD PTR [rbp+0xfd0],di
   140022d7f:	je     0x140022dc1
   140022d81:	lea    rdx,[rbp+0xfd0]
   140022d88:	lea    rcx,[rbp-0x60]
   140022d8c:	test   bl,bl
   140022d8e:	je     0x140022d97
   140022d90:	call   0x140021278
   140022d95:	jmp    0x140022d9f
   140022d97:	xor    r8d,r8d
   140022d9a:	call   0x140020c80
   140022d9f:	test   al,al
   140022da1:	jne    0x140022dc8
   140022da3:	test   bl,bl
   140022da5:	je     0x140023216
   140022dab:	mov    edx,0x6
   140022db0:	lea    rcx,[rip+0x71aa9]        # 0x140094860
   140022db7:	call   0x14001bc60
   140022dbc:	jmp    0x140023216
   140022dc1:	mov    DWORD PTR [rbp-0x4c],0x1
   140022dc8:	mov    ebx,edi
   140022dca:	mov    QWORD PTR [rsp+0x58],rdi
   140022dcf:	mov    QWORD PTR [rsp+0x60],rdi
   140022dd4:	mov    QWORD PTR [rsp+0x68],rdi
   140022dd9:	mov    QWORD PTR [rsp+0x70],rdi
   140022dde:	mov    edx,0x1005
   140022de3:	lea    rcx,[rsp+0x58]
   140022de8:	call   0x140001858
   140022ded:	nop
   140022dee:	mov    esi,0x1000
   140022df3:	mov    r13,QWORD PTR [rsp+0x58]
   140022df8:	mov    rdx,r13
   140022dfb:	jmp    0x140022e15
   140022dfd:	add    ebx,eax
   140022dff:	mov    edx,eax
   140022e01:	lea    rcx,[rsp+0x58]
   140022e06:	call   0x140001858
   140022e0b:	mov    edx,ebx
   140022e0d:	mov    r13,QWORD PTR [rsp+0x58]
   140022e12:	add    rdx,r13
   140022e15:	mov    r8,rsi
   140022e18:	lea    rcx,[rbp-0x60]
   140022e1c:	call   0x140020ed4
   140022e21:	test   eax,eax
   140022e23:	jne    0x140022dfd
   140022e25:	mov    edx,ebx
   140022e27:	xor    eax,eax
   140022e29:	mov    DWORD PTR [rdx+r13*1],eax
   140022e2d:	mov    BYTE PTR [rdx+r13*1+0x4],al
   140022e32:	mov    QWORD PTR [rsp+0x30],rdi
   140022e37:	mov    r12,rdi
   140022e3a:	mov    QWORD PTR [rsp+0x38],rdi
   140022e3f:	mov    r10,rdi
   140022e42:	mov    QWORD PTR [rsp+0x40],rdi
   140022e47:	mov    QWORD PTR [rsp+0x48],rdi
   140022e4c:	cmp    BYTE PTR [r13+0x0],0xff
   140022e51:	jne    0x140022e5d
   140022e53:	cmp    BYTE PTR [r13+0x1],0xfe
   140022e58:	lea    esi,[rax+0x1]
   140022e5b:	je     0x140022e5f
   140022e5d:	mov    esi,edi
   140022e5f:	cmp    BYTE PTR [r13+0x0],0xfe
   140022e64:	jne    0x140022e73
   140022e66:	cmp    BYTE PTR [r13+0x1],0xff
   140022e6b:	mov    r15d,0x1
   140022e71:	je     0x140022e76
   140022e73:	mov    r15d,edi
   140022e76:	mov    r9b,dil
   140022e79:	test   esi,esi
   140022e7b:	jne    0x140022e82
   140022e7d:	test   r15d,r15d
   140022e80:	je     0x140022eb7
   140022e82:	cmp    rdx,0x2
   140022e86:	jbe    0x140022eb7
   140022e88:	lea    rcx,[r13+0x2]
   140022e8c:	mov    r8,r13
   140022e8f:	neg    r8
   140022e92:	cmp    BYTE PTR [rcx],0x1f
   140022e95:	ja     0x140022ea6
   140022e97:	movzx  eax,BYTE PTR [rcx]
   140022e9a:	mov    r11d,0xffffdbff
   140022ea0:	bt     r11d,eax
   140022ea4:	jb     0x140022eb4
   140022ea6:	inc    rcx
   140022ea9:	lea    rax,[r8+rcx*1]
   140022ead:	cmp    rax,rdx
   140022eb0:	jae    0x140022eb7
   140022eb2:	jmp    0x140022e92
   140022eb4:	mov    r9b,0x1
   140022eb7:	mov    r14d,DWORD PTR [rbp+0x3040]
   140022ebe:	cmp    r14d,0x3
   140022ec2:	je     0x140023043
   140022ec8:	test   r14d,r14d
   140022ecb:	jne    0x140022ed6
   140022ecd:	test   r9b,r9b
   140022ed0:	jne    0x140023043
   140022ed6:	mov    rbx,r13
   140022ed9:	mov    r15,QWORD PTR [rsp+0x30]
   140022ede:	cmp    BYTE PTR [r13+0x0],dil
   140022ee2:	je     0x1400231fd
   140022ee8:	mov    r13,QWORD PTR [rsp+0x50]
   140022eed:	mov    rsi,rbx
   140022ef0:	mov    rcx,rdi
   140022ef3:	cmp    BYTE PTR [rbx],0xd
   140022ef6:	je     0x140022f24
   140022ef8:	cmp    BYTE PTR [rsi],0xa
   140022efb:	je     0x140022f24
   140022efd:	cmp    BYTE PTR [rsi],dil
   140022f00:	je     0x140022f24
   140022f02:	cmp    BYTE PTR [rbp+0x3050],dil
   140022f09:	je     0x140022f1c
   140022f0b:	cmp    BYTE PTR [rsi],0x2f
   140022f0e:	jne    0x140022f1c
   140022f10:	cmp    BYTE PTR [rsi+0x1],0x2f
   140022f14:	jne    0x140022f1c
   140022f16:	mov    BYTE PTR [rsi],dil
   140022f19:	mov    rcx,rsi
   140022f1c:	inc    rsi
   140022f1f:	cmp    BYTE PTR [rsi],0xd
   140022f22:	jne    0x140022ef8
   140022f24:	mov    BYTE PTR [rsi],dil
   140022f27:	mov    rax,rsi
   140022f2a:	test   rcx,rcx
   140022f2d:	cmovne rax,rcx
   140022f31:	jmp    0x140022f40
   140022f33:	cmp    BYTE PTR [rax],0x20
   140022f36:	je     0x140022f3d
   140022f38:	cmp    BYTE PTR [rax],0x9
   140022f3b:	jne    0x140022f48
   140022f3d:	mov    BYTE PTR [rax],dil
   140022f40:	dec    rax
   140022f43:	cmp    rax,rbx
   140022f46:	jae    0x140022f33
   140022f48:	cmp    BYTE PTR [rbx],dil
   140022f4b:	je     0x14002301d
   140022f51:	cmp    BYTE PTR [rbp+0x3048],dil
   140022f58:	je     0x140022f7b
   140022f5a:	cmp    BYTE PTR [rbx],0x22
   140022f5d:	jne    0x140022f7b
   140022f5f:	or     rax,0xffffffffffffffff
   140022f63:	inc    rax
   140022f66:	cmp    BYTE PTR [rbx+rax*1],dil
   140022f6a:	jne    0x140022f63
   140022f6c:	cmp    BYTE PTR [rax+rbx*1-0x1],0x22
   140022f71:	jne    0x140022f7b
   140022f73:	mov    BYTE PTR [rax+rbx*1-0x1],dil
   140022f78:	inc    rbx
   140022f7b:	cmp    r14d,0x2
   140022f7f:	jne    0x140022f92
   140022f81:	mov    rdx,rbx
   140022f84:	mov    rcx,rbx
   140022f87:	call   QWORD PTR [rip+0x4958b]        # 0x14006c518
   140022f8d:	mov    r10,QWORD PTR [rsp+0x40]
   140022f92:	or     rax,0xffffffffffffffff
   140022f96:	inc    rax
   140022f99:	cmp    BYTE PTR [rbx+rax*1],dil
   140022f9d:	jne    0x140022f96
   140022f9f:	inc    rax
   140022fa2:	cmp    rax,r10
   140022fa5:	jbe    0x140022fc3
   140022fa7:	sub    rax,r12
   140022faa:	mov    rdx,rax
   140022fad:	lea    rcx,[rsp+0x30]
   140022fb2:	call   0x140007a44
   140022fb7:	mov    r12,QWORD PTR [rsp+0x38]
   140022fbc:	mov    r15,QWORD PTR [rsp+0x30]
   140022fc1:	jmp    0x140022fcb
   140022fc3:	mov    r12,rax
   140022fc6:	mov    QWORD PTR [rsp+0x38],rax
   140022fcb:	mov    r8,r12
   140022fce:	mov    rdx,r15
   140022fd1:	mov    rcx,rbx
   140022fd4:	call   0x1400489f0
   140022fd9:	cmp    BYTE PTR [rbp+0x3058],dil
   140022fe0:	je     0x14002300d
   140022fe2:	cmp    BYTE PTR [rbx],0x25
   140022fe5:	jne    0x14002300d
   140022fe7:	mov    r8d,0x800
   140022fed:	lea    rdx,[rbp+0x1fd0]
   140022ff4:	mov    rcx,r15
   140022ff7:	call   QWORD PTR [rip+0x4915b]        # 0x14006c158
   140022ffd:	dec    eax
   140022fff:	cmp    eax,0x7fe
   140023004:	lea    rdx,[rbp+0x1fd0]
   14002300b:	jbe    0x140023010
   14002300d:	mov    rdx,r15
   140023010:	mov    rcx,r13
   140023013:	call   0x1400461bc
   140023018:	mov    r10,QWORD PTR [rsp+0x40]
   14002301d:	lea    rbx,[rsi+0x1]
   140023021:	cmp    BYTE PTR [rbx],0xd
   140023024:	je     0x14002302b
   140023026:	cmp    BYTE PTR [rbx],0xa
   140023029:	jne    0x140023030
   14002302b:	inc    rbx
   14002302e:	jmp    0x140023021
   140023030:	cmp    BYTE PTR [rbx],dil
   140023033:	jne    0x140022eed
   140023039:	mov    r13,QWORD PTR [rsp+0x58]
   14002303e:	jmp    0x1400231fd
   140023043:	mov    r14d,0x2
   140023049:	test   esi,esi
   14002304b:	jne    0x140023059
   14002304d:	test   r15d,r15d
   140023050:	jne    0x140023059
   140023052:	mov    r14,rdi
   140023055:	lea    esi,[r15+0x1]
   140023059:	mov    QWORD PTR [rsp+0x78],rdi
   14002305e:	mov    QWORD PTR [rbp-0x80],rdi
   140023062:	mov    QWORD PTR [rbp-0x78],rdi
   140023066:	mov    QWORD PTR [rbp-0x70],rdi
   14002306a:	mov    rbx,QWORD PTR [rsp+0x60]
   14002306f:	mov    rdx,rbx
   140023072:	shr    rdx,1
   140023075:	inc    rdx
   140023078:	lea    rcx,[rsp+0x78]
   14002307d:	call   0x140007a44
   140023082:	nop
   140023083:	dec    rbx
   140023086:	mov    r12,QWORD PTR [rsp+0x78]
   14002308b:	cmp    r14,rbx
   14002308e:	jae    0x1400230dc
   140023090:	movsxd r9,esi
   140023093:	movsxd rcx,r15d
   140023096:	lea    r8,[rcx+r13*1]
   14002309a:	add    r8,r14
   14002309d:	sub    r9,rcx
   1400230a0:	mov    r10,r8
   1400230a3:	neg    r10
   1400230a6:	sub    rbx,r14
   1400230a9:	dec    rbx
   1400230ac:	shr    rbx,1
   1400230af:	inc    rbx
   1400230b2:	movzx  edx,BYTE PTR [r9+r8*1]
   1400230b7:	mov    ecx,0x100
   1400230bc:	imul   edx,ecx
   1400230bf:	movzx  eax,BYTE PTR [r8]
   1400230c3:	add    dx,ax
   1400230c6:	lea    rax,[r8+r10*1]
   1400230ca:	shr    rax,1
   1400230cd:	mov    WORD PTR [r12+rax*2],dx
   1400230d2:	lea    r8,[r8+0x2]
   1400230d6:	sub    rbx,0x1
   1400230da:	jne    0x1400230b2
   1400230dc:	mov    rbx,r12
   1400230df:	cmp    WORD PTR [r12],di
   1400230e4:	je     0x1400231f0
   1400230ea:	mov    r13,QWORD PTR [rsp+0x50]
   1400230ef:	mov    rsi,rbx
   1400230f2:	mov    rcx,rdi
   1400230f5:	cmp    WORD PTR [rbx],0xd
   1400230f9:	je     0x14002312c
   1400230fb:	cmp    WORD PTR [rsi],0xa
   1400230ff:	je     0x14002312c
   140023101:	cmp    WORD PTR [rsi],di
   140023104:	je     0x14002312c
   140023106:	cmp    BYTE PTR [rbp+0x3050],dil
   14002310d:	je     0x140023122
   14002310f:	cmp    WORD PTR [rsi],0x2f
   140023113:	jne    0x140023122
   140023115:	cmp    WORD PTR [rsi+0x2],0x2f
   14002311a:	jne    0x140023122
   14002311c:	mov    WORD PTR [rsi],di
   14002311f:	mov    rcx,rsi
   140023122:	add    rsi,0x2
   140023126:	cmp    WORD PTR [rsi],0xd
   14002312a:	jne    0x1400230fb
   14002312c:	mov    WORD PTR [rsi],di
   14002312f:	mov    rax,rsi
   140023132:	test   rcx,rcx
   140023135:	cmovne rax,rcx
   140023139:	jmp    0x14002314a
   14002313b:	cmp    WORD PTR [rax],0x20
   14002313f:	je     0x140023147
   140023141:	cmp    WORD PTR [rax],0x9
   140023145:	jne    0x140023153
   140023147:	mov    WORD PTR [rax],di
   14002314a:	sub    rax,0x2
   14002314e:	cmp    rax,rbx
   140023151:	jae    0x14002313b
   140023153:	cmp    WORD PTR [rbx],di
   140023156:	je     0x1400231cc
   140023158:	or     rax,0xffffffffffffffff
   14002315c:	inc    rax
   14002315f:	cmp    WORD PTR [rbx+rax*2],di
   140023163:	jne    0x14002315c
   140023165:	cmp    BYTE PTR [rbp+0x3048],dil
   14002316c:	je     0x140023185
   14002316e:	cmp    WORD PTR [rbx],0x22
   140023172:	jne    0x140023185
   140023174:	cmp    WORD PTR [rbx+rax*2-0x2],0x22
   14002317a:	jne    0x140023185
   14002317c:	mov    WORD PTR [rbx+rax*2-0x2],di
   140023181:	add    rbx,0x2
   140023185:	cmp    BYTE PTR [rbp+0x3058],dil
   14002318c:	je     0x1400231c1
   14002318e:	cmp    WORD PTR [rbx],0x25
   140023192:	jne    0x1400231c1
   140023194:	mov    WORD PTR [rbp+0x1fd0],di
   14002319b:	mov    r8d,0x800
   1400231a1:	lea    rdx,[rbp+0x1fd0]
   1400231a8:	mov    rcx,rbx
   1400231ab:	call   QWORD PTR [rip+0x48fa7]        # 0x14006c158
   1400231b1:	dec    eax
   1400231b3:	cmp    eax,0x7fe
   1400231b8:	lea    rdx,[rbp+0x1fd0]
   1400231bf:	jbe    0x1400231c4
   1400231c1:	mov    rdx,rbx
   1400231c4:	mov    rcx,r13
   1400231c7:	call   0x1400461bc
   1400231cc:	lea    rbx,[rsi+0x2]
   1400231d0:	cmp    WORD PTR [rbx],0xd
   1400231d4:	je     0x1400231dc
   1400231d6:	cmp    WORD PTR [rbx],0xa
   1400231da:	jne    0x1400231e2
   1400231dc:	add    rbx,0x2
   1400231e0:	jmp    0x1400231d0
   1400231e2:	cmp    WORD PTR [rbx],di
   1400231e5:	jne    0x1400230ef
   1400231eb:	mov    r13,QWORD PTR [rsp+0x58]
   1400231f0:	mov    rcx,r12
   1400231f3:	call   0x14005a938
   1400231f8:	mov    r15,QWORD PTR [rsp+0x30]
   1400231fd:	test   r15,r15
   140023200:	je     0x14002320b
   140023202:	mov    rcx,r15
   140023205:	call   0x14005a938
   14002320a:	nop
   14002320b:	mov    rcx,r13
   14002320e:	call   0x14005a938
   140023213:	mov    dil,0x1
   140023216:	lea    rcx,[rbp-0x60]
   14002321a:	call   0x140020758
   14002321f:	mov    al,dil
   140023222:	mov    rcx,QWORD PTR [rbp+0x2fd0]
   140023229:	xor    rcx,rsp
   14002322c:	call   0x140055f90
   140023231:	mov    rbx,QWORD PTR [rsp+0x3130]
   140023239:	add    rsp,0x30e0
   140023240:	pop    r15
   140023242:	pop    r14
   140023244:	pop    r13
   140023246:	pop    r12
   140023248:	pop    rdi
   140023249:	pop    rsi
   14002324a:	pop    rbp
   14002324b:	ret    
   14002324c:	or     QWORD PTR [rcx+0x1008],0xffffffffffffffff
   140023254:	xor    eax,eax
   140023256:	mov    WORD PTR [rcx],ax
   140023259:	mov    rax,rcx
   14002325c:	mov    BYTE PTR [rcx+0x1000],0x1
   140023263:	ret    
   140023264:	sub    rsp,0x28
   140023268:	mov    rcx,QWORD PTR [rcx+0x1008]
   14002326f:	cmp    rcx,0xffffffffffffffff
   140023273:	je     0x14002327b
   140023275:	call   QWORD PTR [rip+0x48e1d]        # 0x14006c098
   14002327b:	add    rsp,0x28
   14002327f:	ret    
   140023280:	mov    QWORD PTR [rsp+0x8],rbx
   140023285:	push   rdi
   140023286:	sub    rsp,0x20
   14002328a:	mov    rbx,rdx
   14002328d:	mov    BYTE PTR [rdx+0x1044],0x0
   140023294:	mov    rdi,rcx
   140023297:	call   0x140032288
   14002329c:	test   al,al
   14002329e:	je     0x1400232a4
   1400232a0:	xor    al,al
   1400232a2:	jmp    0x1400232ed
   1400232a4:	mov    r8,rbx
   1400232a7:	mov    rdx,rdi
   1400232aa:	or     rcx,0xffffffffffffffff
   1400232ae:	call   0x140023414
   1400232b3:	cmp    rax,0xffffffffffffffff
   1400232b7:	je     0x1400232a0
   1400232b9:	mov    rcx,rax
   1400232bc:	call   QWORD PTR [rip+0x48dd6]        # 0x14006c098
   1400232c2:	mov    ecx,DWORD PTR [rbx+0x1008]
   1400232c8:	and    DWORD PTR [rbx+0x1040],0x0
   1400232cf:	call   0x140021f7c
   1400232d4:	mov    ecx,DWORD PTR [rbx+0x1008]
   1400232da:	mov    BYTE PTR [rbx+0x100c],al
   1400232e0:	call   0x140022170
   1400232e5:	mov    BYTE PTR [rbx+0x100d],al
   1400232eb:	mov    al,0x1
   1400232ed:	mov    rbx,QWORD PTR [rsp+0x30]
   1400232f2:	add    rsp,0x20
   1400232f6:	pop    rdi
   1400232f7:	ret    
   1400232f8:	mov    QWORD PTR [rsp+0x8],rbx
   1400232fd:	mov    QWORD PTR [rsp+0x10],rsi
   140023302:	push   rdi
   140023303:	sub    rsp,0x20
   140023307:	xor    esi,esi
   140023309:	mov    rdi,rdx
   14002330c:	mov    BYTE PTR [rdx+0x1044],sil
   140023313:	mov    rbx,rcx
   140023316:	cmp    WORD PTR [rcx],si
   140023319:	je     0x1400233e2
   14002331f:	mov    r8,rdi
   140023322:	mov    rdx,rbx
   140023325:	cmp    BYTE PTR [rbx+0x1000],sil
   14002332c:	je     0x140023340
   14002332e:	or     rcx,0xffffffffffffffff
   140023332:	call   0x140023414
   140023337:	mov    QWORD PTR [rbx+0x1008],rax
   14002333e:	jmp    0x14002334c
   140023340:	mov    rcx,QWORD PTR [rbx+0x1008]
   140023347:	call   0x140023414
   14002334c:	cmp    rax,0xffffffffffffffff
   140023350:	je     0x1400233e2
   140023356:	mov    ecx,DWORD PTR [rdi+0x1008]
   14002335c:	mov    DWORD PTR [rdi+0x1040],esi
   140023362:	call   0x140021f7c
   140023367:	mov    ecx,DWORD PTR [rdi+0x1008]
   14002336d:	mov    BYTE PTR [rdi+0x100c],al
   140023373:	call   0x140022170
   140023378:	mov    BYTE PTR [rdi+0x100d],al
   14002337e:	mov    rcx,rdi
   140023381:	mov    BYTE PTR [rbx+0x1000],sil
   140023388:	call   0x1400327bc
   14002338d:	mov    rdx,rax
   140023390:	movzx  ecx,WORD PTR [rax]
   140023393:	cmp    cx,WORD PTR [rip+0x4b4a6]        # 0x14006e840
   14002339a:	jne    0x1400233a9
   14002339c:	movzx  ecx,WORD PTR [rax+0x2]
   1400233a0:	cmp    cx,WORD PTR [rip+0x4b49b]        # 0x14006e842
   1400233a7:	je     0x1400233cf
   1400233a9:	movzx  ecx,WORD PTR [rax]
   1400233ac:	cmp    cx,WORD PTR [rip+0x4b491]        # 0x14006e844
   1400233b3:	jne    0x1400233de
   1400233b5:	movzx  eax,WORD PTR [rax+0x2]
   1400233b9:	cmp    ax,WORD PTR [rip+0x4b486]        # 0x14006e846
   1400233c0:	jne    0x1400233de
   1400233c2:	movzx  eax,WORD PTR [rdx+0x4]
   1400233c6:	cmp    ax,WORD PTR [rip+0x4b47b]        # 0x14006e848
   1400233cd:	jne    0x1400233de
   1400233cf:	mov    BYTE PTR [rdi+0x1044],sil
   1400233d6:	cmp    WORD PTR [rbx],si
   1400233d9:	jmp    0x140023319
   1400233de:	mov    al,0x1
   1400233e0:	jmp    0x1400233e4
   1400233e2:	xor    al,al
   1400233e4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400233e9:	mov    rsi,QWORD PTR [rsp+0x38]
   1400233ee:	add    rsp,0x20
   1400233f2:	pop    rdi
   1400233f3:	ret    
   1400233f4:	mov    r8,rcx
   1400233f7:	sub    r8,rdx
   1400233fa:	movzx  eax,WORD PTR [rdx]
   1400233fd:	mov    WORD PTR [r8+rdx*1],ax
   140023402:	lea    rdx,[rdx+0x2]
   140023406:	test   ax,ax
   140023409:	jne    0x1400233fa
   14002340b:	mov    BYTE PTR [rcx+0x1000],0x1
   140023412:	ret    
   140023413:	int3   
   140023414:	rex push rbp
   140023416:	push   rbx
   140023417:	push   rsi
   140023418:	push   rdi
   140023419:	push   r15
   14002341b:	lea    rbp,[rsp-0x1180]
   140023423:	mov    eax,0x1280
   140023428:	call   0x140055f20
   14002342d:	sub    rsp,rax
   140023430:	mov    rax,QWORD PTR [rip+0x5eaa9]        # 0x140081ee0
   140023437:	xor    rax,rsp
   14002343a:	mov    QWORD PTR [rbp+0x1170],rax
   140023441:	mov    rsi,rdx
   140023444:	lea    rdx,[rsp+0x20]
   140023449:	mov    rdi,r8
   14002344c:	mov    rbx,rcx
   14002344f:	mov    r15d,0x800
   140023455:	cmp    rcx,0xffffffffffffffff
   140023459:	jne    0x1400234cc
   14002345b:	mov    rcx,rsi
   14002345e:	call   QWORD PTR [rip+0x48c7c]        # 0x14006c0e0
   140023464:	mov    rbx,rax
   140023467:	cmp    rax,0xffffffffffffffff
   14002346b:	jne    0x1400234f6
   140023471:	mov    r8d,r15d
   140023474:	lea    rdx,[rbp+0x170]
   14002347b:	mov    rcx,rsi
   14002347e:	call   0x140031ef0
   140023483:	test   al,al
   140023485:	je     0x1400234a2
   140023487:	lea    rdx,[rsp+0x20]
   14002348c:	lea    rcx,[rbp+0x170]
   140023493:	call   QWORD PTR [rip+0x48c47]        # 0x14006c0e0
   140023499:	mov    rbx,rax
   14002349c:	cmp    rax,0xffffffffffffffff
   1400234a0:	jne    0x1400234f6
   1400234a2:	call   QWORD PTR [rip+0x48d20]        # 0x14006c1c8
   1400234a8:	lea    ecx,[rax-0x2]
   1400234ab:	test   ecx,0xffffffee
   1400234b1:	jne    0x1400234bc
   1400234b3:	cmp    eax,0x13
   1400234b6:	je     0x1400234bc
   1400234b8:	xor    eax,eax
   1400234ba:	jmp    0x1400234c1
   1400234bc:	mov    eax,0x1
   1400234c1:	mov    BYTE PTR [rdi+0x1044],al
   1400234c7:	jmp    0x14002358b
   1400234cc:	call   QWORD PTR [rip+0x48c8e]        # 0x14006c160
   1400234d2:	test   eax,eax
   1400234d4:	jne    0x1400234ec
   1400234d6:	or     rbx,0xffffffffffffffff
   1400234da:	call   QWORD PTR [rip+0x48ce8]        # 0x14006c1c8
   1400234e0:	cmp    eax,0x12
   1400234e3:	setne  al
   1400234e6:	mov    BYTE PTR [rdi+0x1044],al
   1400234ec:	cmp    rbx,0xffffffffffffffff
   1400234f0:	je     0x14002358b
   1400234f6:	mov    r8,r15
   1400234f9:	mov    rdx,rsi
   1400234fc:	mov    rcx,rdi
   1400234ff:	call   0x140046158
   140023504:	mov    r8,r15
   140023507:	lea    rdx,[rsp+0x4c]
   14002350c:	mov    rcx,rdi
   14002350f:	call   0x1400328b8
   140023514:	mov    eax,DWORD PTR [rsp+0x40]
   140023518:	lea    rdx,[rsp+0x34]
   14002351d:	mov    ecx,DWORD PTR [rsp+0x3c]
   140023521:	shl    rcx,0x20
   140023525:	add    rcx,rax
   140023528:	mov    eax,DWORD PTR [rsp+0x20]
   14002352c:	mov    DWORD PTR [rdi+0x1008],eax
   140023532:	mov    rax,QWORD PTR [rsp+0x24]
   140023537:	mov    QWORD PTR [rdi+0x1028],rax
   14002353e:	mov    rax,QWORD PTR [rsp+0x2c]
   140023543:	mov    QWORD PTR [rdi+0x1030],rax
   14002354a:	mov    rax,QWORD PTR [rsp+0x34]
   14002354f:	mov    QWORD PTR [rdi+0x1000],rcx
   140023556:	lea    rcx,[rdi+0x1010]
   14002355d:	mov    QWORD PTR [rdi+0x1038],rax
   140023564:	call   0x14004726c
   140023569:	lea    rcx,[rdi+0x1018]
   140023570:	lea    rdx,[rsp+0x24]
   140023575:	call   0x14004726c
   14002357a:	lea    rcx,[rdi+0x1020]
   140023581:	lea    rdx,[rsp+0x2c]
   140023586:	call   0x14004726c
   14002358b:	and    DWORD PTR [rdi+0x1040],0x0
   140023592:	mov    rax,rbx
   140023595:	mov    rcx,QWORD PTR [rbp+0x1170]
   14002359c:	xor    rcx,rsp
   14002359f:	call   0x140055f90
   1400235a4:	add    rsp,0x1280
   1400235ab:	pop    r15
   1400235ad:	pop    rdi
   1400235ae:	pop    rsi
   1400235af:	pop    rbx
   1400235b0:	pop    rbp
   1400235b1:	ret    
   1400235b2:	int3   
   1400235b3:	int3   
   1400235b4:	mov    rax,rsp
   1400235b7:	mov    QWORD PTR [rax+0x20],r9
   1400235bb:	mov    QWORD PTR [rax+0x18],r8
   1400235bf:	mov    QWORD PTR [rax+0x10],rdx
   1400235c3:	mov    QWORD PTR [rax+0x8],rcx
   1400235c7:	push   rbp
   1400235c8:	push   rbx
   1400235c9:	push   rsi
   1400235ca:	push   rdi
   1400235cb:	push   r12
   1400235cd:	push   r13
   1400235cf:	push   r14
   1400235d1:	push   r15
   1400235d3:	lea    rbp,[rax-0x47]
   1400235d7:	sub    rsp,0x88
   1400235de:	mov    QWORD PTR [rbp-0x31],0xfffffffffffffffe
   1400235e6:	mov    rax,r9
   1400235e9:	mov    r9,QWORD PTR [rbp+0x8f]
   1400235f0:	and    QWORD PTR [r9],0x0
   1400235f4:	xor    edi,edi
   1400235f6:	mov    QWORD PTR [rbp-0x29],rdi
   1400235fa:	xor    esi,esi
   1400235fc:	mov    QWORD PTR [rbp-0x21],rsi
   140023600:	xor    r13d,r13d
   140023603:	mov    QWORD PTR [rbp-0x19],r13
   140023607:	and    QWORD PTR [rbp-0x11],rsi
   14002360b:	xor    r12d,r12d
   14002360e:	neg    BYTE PTR [rbp+0x9f]
   140023614:	sbb    ecx,ecx
   140023616:	and    ecx,0x3
   140023619:	lea    r14d,[rdi+0x1]
   14002361d:	add    ecx,r14d
   140023620:	mov    DWORD PTR [rbp+0x9f],ecx
   140023626:	test   ecx,ecx
   140023628:	jle    0x140023827
   14002362e:	mov    rdx,r8
   140023631:	mov    QWORD PTR [rbp-0x51],rdx
   140023635:	mov    rbx,rax
   140023638:	mov    r8,QWORD PTR [rbp+0x6f]
   14002363c:	mov    r15,r8
   14002363f:	cmp    r12d,r14d
   140023642:	jne    0x140023695
   140023644:	cmp    rax,r13
   140023647:	jbe    0x14002366a
   140023649:	mov    rdx,rax
   14002364c:	sub    rdx,rsi
   14002364f:	lea    rcx,[rbp-0x29]
   140023653:	call   0x140001858
   140023658:	mov    r13,QWORD PTR [rbp-0x19]
   14002365c:	mov    rsi,QWORD PTR [rbp-0x21]
   140023660:	mov    rdi,QWORD PTR [rbp-0x29]
   140023664:	mov    rax,QWORD PTR [rbp+0x67]
   140023668:	jmp    0x140023671
   14002366a:	mov    rsi,rax
   14002366d:	mov    QWORD PTR [rbp-0x21],rax
   140023671:	mov    r8d,eax
   140023674:	mov    rdx,rdi
   140023677:	mov    rcx,QWORD PTR [rbp+0x5f]
   14002367b:	call   QWORD PTR [rip+0x48e87]        # 0x14006c508
   140023681:	mov    rdx,rdi
   140023684:	mov    QWORD PTR [rbp-0x51],rdx
   140023688:	mov    rax,QWORD PTR [rbp+0x67]
   14002368c:	mov    ecx,DWORD PTR [rbp+0x9f]
   140023692:	mov    r8,r15
   140023695:	cmp    r12d,0x2
   140023699:	jne    0x1400236ef
   14002369b:	mov    rbx,rax
   14002369e:	shr    rbx,1
   1400236a1:	mov    r15,r8
   1400236a4:	shr    r15,1
   1400236a7:	cmp    rbx,r14
   1400236aa:	jb     0x140023813
   1400236b0:	cmp    rbx,r13
   1400236b3:	jbe    0x1400236d2
   1400236b5:	mov    rdx,rbx
   1400236b8:	sub    rdx,rsi
   1400236bb:	lea    rcx,[rbp-0x29]
   1400236bf:	call   0x140001858
   1400236c4:	mov    r13,QWORD PTR [rbp-0x19]
   1400236c8:	mov    rsi,QWORD PTR [rbp-0x21]
   1400236cc:	mov    rdi,QWORD PTR [rbp-0x29]
   1400236d0:	jmp    0x1400236d9
   1400236d2:	mov    rsi,rbx
   1400236d5:	mov    QWORD PTR [rbp-0x21],rbx
   1400236d9:	mov    r8,rbx
   1400236dc:	mov    rdx,rdi
   1400236df:	mov    rcx,QWORD PTR [rbp+0x5f]
   1400236e3:	call   0x140048ca8
   1400236e8:	mov    rdx,rdi
   1400236eb:	mov    QWORD PTR [rbp-0x51],rdx
   1400236ef:	cmp    r12d,0x3
   1400236f3:	jne    0x140023755
   1400236f5:	mov    rax,QWORD PTR [rbp+0x67]
   1400236f9:	lea    rbx,[rax-0x1]
   1400236fd:	shr    rbx,1
   140023700:	mov    r15,QWORD PTR [rbp+0x6f]
   140023704:	dec    r15
   140023707:	shr    r15,1
   14002370a:	cmp    rbx,r14
   14002370d:	jb     0x14002380d
   140023713:	cmp    rbx,r13
   140023716:	jbe    0x140023735
   140023718:	mov    rdx,rbx
   14002371b:	sub    rdx,rsi
   14002371e:	lea    rcx,[rbp-0x29]
   140023722:	call   0x140001858
   140023727:	mov    r13,QWORD PTR [rbp-0x19]
   14002372b:	mov    rsi,QWORD PTR [rbp-0x21]
   14002372f:	mov    rdi,QWORD PTR [rbp-0x29]
   140023733:	jmp    0x14002373c
   140023735:	mov    rsi,rbx
   140023738:	mov    QWORD PTR [rbp-0x21],rbx
   14002373c:	mov    rcx,QWORD PTR [rbp+0x5f]
   140023740:	inc    rcx
   140023743:	mov    r8,rbx
   140023746:	mov    rdx,rdi
   140023749:	call   0x140048ca8
   14002374e:	mov    rdx,rdi
   140023751:	mov    QWORD PTR [rbp-0x51],rdx
   140023755:	xor    eax,eax
   140023757:	mov    QWORD PTR [rbp-0x39],rax
   14002375b:	test   r15,r15
   14002375e:	je     0x140023809
   140023764:	mov    QWORD PTR [rbp-0x49],0x2
   14002376c:	lea    rcx,[rax+0x1]
   140023770:	mov    QWORD PTR [rbp-0x41],rcx
   140023774:	mov    r9,rbx
   140023777:	sub    r9,rax
   14002377a:	lea    r8,[rcx-0x1]
   14002377e:	add    r8,rdx
   140023781:	mov    eax,DWORD PTR [rbp+0x77]
   140023784:	mov    DWORD PTR [rsp+0x20],eax
   140023788:	mov    rdx,QWORD PTR [rbp+0x57]
   14002378c:	mov    rcx,QWORD PTR [rbp+0x4f]
   140023790:	call   0x14002384c
   140023795:	test   al,al
   140023797:	je     0x1400237ef
   140023799:	mov    rax,QWORD PTR [rbp-0x41]
   14002379d:	movsxd rcx,r12d
   1400237a0:	cmp    rcx,0x2
   1400237a4:	cmove  rax,QWORD PTR [rbp-0x49]
   1400237a9:	cmp    rcx,0x3
   1400237ad:	jne    0x1400237b7
   1400237af:	lea    rax,[rax*2+0x1]
   1400237b7:	mov    rcx,QWORD PTR [rbp+0x8f]
   1400237be:	cmp    rax,QWORD PTR [rcx]
   1400237c1:	jbe    0x1400237c6
   1400237c3:	mov    QWORD PTR [rcx],rax
   1400237c6:	mov    QWORD PTR [rsp+0x20],rbx
   1400237cb:	mov    r9,QWORD PTR [rbp-0x39]
   1400237cf:	mov    r8,QWORD PTR [rbp-0x51]
   1400237d3:	mov    rdx,QWORD PTR [rbp+0x87]
   1400237da:	mov    rcx,QWORD PTR [rbp+0x7f]
   1400237de:	call   0x140023c6c
   1400237e3:	mov    rax,QWORD PTR [rbp+0x97]
   1400237ea:	sub    QWORD PTR [rax],r14
   1400237ed:	je     0x140023824
   1400237ef:	mov    rax,QWORD PTR [rbp-0x41]
   1400237f3:	mov    QWORD PTR [rbp-0x39],rax
   1400237f7:	add    QWORD PTR [rbp-0x49],0x2
   1400237fc:	cmp    rax,r15
   1400237ff:	mov    rdx,QWORD PTR [rbp-0x51]
   140023803:	jb     0x14002376c
   140023809:	mov    rax,QWORD PTR [rbp+0x67]
   14002380d:	mov    ecx,DWORD PTR [rbp+0x9f]
   140023813:	add    r12d,r14d
   140023816:	cmp    r12d,ecx
   140023819:	jge    0x140023827
   14002381b:	mov    r8,QWORD PTR [rbp+0x5f]
   14002381f:	jmp    0x14002362e
   140023824:	xor    r14b,r14b
   140023827:	test   rdi,rdi
   14002382a:	je     0x140023834
   14002382c:	mov    rcx,rdi
   14002382f:	call   0x14005a938
   140023834:	mov    al,r14b
   140023837:	add    rsp,0x88
   14002383e:	pop    r15
   140023840:	pop    r14
   140023842:	pop    r13
   140023844:	pop    r12
   140023846:	pop    rdi
   140023847:	pop    rsi
   140023848:	pop    rbx
   140023849:	pop    rbp
   14002384a:	ret    
   14002384b:	int3   
   14002384c:	mov    QWORD PTR [rsp+0x8],rbx
   140023851:	mov    QWORD PTR [rsp+0x10],rbp
   140023856:	mov    QWORD PTR [rsp+0x18],rsi
   14002385b:	push   rdi
   14002385c:	push   r14
   14002385e:	push   r15
   140023860:	sub    rsp,0x20
   140023864:	xor    edi,edi
   140023866:	mov    rbp,r9
   140023869:	mov    r14,r8
   14002386c:	mov    rsi,rdx
   14002386f:	mov    r15,rcx
   140023872:	cmp    DWORD PTR [rsp+0x60],edi
   140023876:	jne    0x140023891
   140023878:	mov    al,BYTE PTR [r8]
   14002387b:	cmp    BYTE PTR [rcx],al
   14002387d:	jne    0x1400238c8
   14002387f:	cmp    r9,rdx
   140023882:	jb     0x1400238c8
   140023884:	mov    r8,rdx
   140023887:	mov    rdx,r14
   14002388a:	call   0x140058e60
   14002388f:	jmp    0x1400238c1
   140023891:	cmp    DWORD PTR [rsp+0x60],0x1
   140023896:	jne    0x1400238c8
   140023898:	mov    cl,BYTE PTR [r8]
   14002389b:	call   0x140046048
   1400238a0:	mov    cl,BYTE PTR [r15]
   1400238a3:	mov    bl,al
   1400238a5:	call   0x140046048
   1400238aa:	cmp    al,bl
   1400238ac:	jne    0x1400238c8
   1400238ae:	cmp    rbp,rsi
   1400238b1:	jb     0x1400238c8
   1400238b3:	mov    r8,rsi
   1400238b6:	mov    rdx,r14
   1400238b9:	mov    rcx,r15
   1400238bc:	call   0x140046084
   1400238c1:	test   eax,eax
   1400238c3:	sete   al
   1400238c6:	jmp    0x1400238ca
   1400238c8:	xor    al,al
   1400238ca:	mov    rbx,QWORD PTR [rsp+0x40]
   1400238cf:	mov    rbp,QWORD PTR [rsp+0x48]
   1400238d4:	mov    rsi,QWORD PTR [rsp+0x50]
   1400238d9:	add    rsp,0x20
   1400238dd:	pop    r15
   1400238df:	pop    r14
   1400238e1:	pop    rdi
   1400238e2:	ret    
   1400238e3:	int3   
   1400238e4:	rex push rbx
   1400238e6:	push   rbp
   1400238e7:	push   rsi
   1400238e8:	push   rdi
   1400238e9:	push   r12
   1400238eb:	push   r13
   1400238ed:	push   r14
   1400238ef:	push   r15
   1400238f1:	sub    rsp,0xc98
   1400238f8:	mov    rax,QWORD PTR [rip+0x5e5e1]        # 0x140081ee0
   1400238ff:	xor    rax,rsp
   140023902:	mov    QWORD PTR [rsp+0xc80],rax
   14002390a:	mov    rbp,QWORD PTR [rsp+0xd00]
   140023912:	xor    r13d,r13d
   140023915:	mov    QWORD PTR [rsp+0x70],rcx
   14002391a:	mov    r14,r9
   14002391d:	mov    rdi,rdx
   140023920:	test   rcx,rcx
   140023923:	jne    0x14002399e
   140023925:	mov    rcx,r8
   140023928:	mov    QWORD PTR [rip+0x70ea1],r13        # 0x1400947d0
   14002392f:	mov    QWORD PTR [rip+0x70e9e],0x1        # 0x1400947d8
   14002393a:	call   0x140045d64
   14002393f:	mov    rcx,rax
   140023942:	lea    rdx,[rip+0x6ea87]        # 0x1400923d0
   140023949:	mov    r8d,0x400
   14002394f:	call   0x140048ca8
   140023954:	mov    rcx,r14
   140023957:	call   0x140045d64
   14002395c:	lea    r14,[rip+0x6ee6d]        # 0x1400927d0
   140023963:	sub    r14,rax
   140023966:	movzx  edx,WORD PTR [rax]
   140023969:	mov    WORD PTR [r14+rax*1],dx
   14002396e:	lea    rax,[rax+0x2]
   140023972:	test   dx,dx
   140023975:	jne    0x140023966
   140023977:	mov    rcx,rbp
   14002397a:	call   0x140045d64
   14002397f:	lea    rsi,[rip+0x6fe4a]        # 0x1400937d0
   140023986:	sub    rsi,rax
   140023989:	movzx  ecx,WORD PTR [rax]
   14002398c:	mov    WORD PTR [rsi+rax*1],cx
   140023990:	lea    rax,[rax+0x2]
   140023994:	test   cx,cx
   140023997:	jne    0x140023989
   140023999:	jmp    0x140023c46
   14002399e:	cmp    QWORD PTR [rip+0x70e33],r13        # 0x1400947d8
   1400239a5:	je     0x140023c46
   1400239ab:	lea    rsi,[rip+0x6ea1e]        # 0x1400923d0
   1400239b2:	mov    edx,0x3d
   1400239b7:	mov    rcx,rsi
   1400239ba:	call   0x1400595b8
   1400239bf:	mov    BYTE PTR [rsp+0x60],r13b
   1400239c4:	mov    r14,rax
   1400239c7:	mov    r12d,0x1
   1400239cd:	test   rax,rax
   1400239d0:	je     0x140023a1e
   1400239d2:	cmp    BYTE PTR [rip+0x6e9f7],0x3d        # 0x1400923d0
   1400239d9:	mov    rbx,rsi
   1400239dc:	je     0x140023a1e
   1400239de:	mov    cl,BYTE PTR [rbx]
   1400239e0:	call   0x140045f38
   1400239e5:	movzx  ecx,al
   1400239e8:	sub    ecx,0x43
   1400239eb:	je     0x140023a13
   1400239ed:	sub    ecx,0x5
   1400239f0:	je     0x140023a0b
   1400239f2:	sub    ecx,0x1
   1400239f5:	je     0x140023a03
   1400239f7:	cmp    ecx,0xb
   1400239fa:	jne    0x140023a16
   1400239fc:	mov    BYTE PTR [rsp+0x60],0x1
   140023a01:	jmp    0x140023a16
   140023a03:	mov    r12d,0x1
   140023a09:	jmp    0x140023a16
   140023a0b:	mov    r12d,0x2
   140023a11:	jmp    0x140023a16
   140023a13:	mov    r12d,r13d
   140023a16:	inc    rbx
   140023a19:	cmp    BYTE PTR [rbx],0x3d
   140023a1c:	jne    0x1400239de
   140023a1e:	test   r14,r14
   140023a21:	lea    rbp,[r14+0x1]
   140023a25:	cmove  rbp,rsi
   140023a29:	cmp    BYTE PTR [rbp+0x0],r13b
   140023a2d:	jne    0x140023a59
   140023a2f:	xor    r9d,r9d
   140023a32:	mov    QWORD PTR [rsp+0x20],r13
   140023a37:	xor    r8d,r8d
   140023a3a:	lea    rdx,[rip+0x6fd8f]        # 0x1400937d0
   140023a41:	lea    rcx,[rip+0x6ed88]        # 0x1400927d0
   140023a48:	call   0x140023c6c
   140023a4d:	mov    QWORD PTR [rip+0x70d84],r13        # 0x1400947d8
   140023a54:	jmp    0x140023c46
   140023a59:	or     r15,0xffffffffffffffff
   140023a5d:	inc    r15
   140023a60:	cmp    BYTE PTR [r15+rbp*1],r13b
   140023a64:	jne    0x140023a5d
   140023a66:	mov    ebx,0x400
   140023a6b:	cmp    r12d,0x2
   140023a6f:	jne    0x140023a92
   140023a71:	mov    r8d,ebx
   140023a74:	lea    rdx,[rsp+0x80]
   140023a7c:	mov    rcx,rbp
   140023a7f:	call   0x140045c40
   140023a84:	mov    r15d,eax
   140023a87:	lea    rbp,[rsp+0x80]
   140023a8f:	mov    r12d,r13d
   140023a92:	mov    r13,QWORD PTR [rip+0x70d37]        # 0x1400947d0
   140023a99:	lea    r14,[rip+0x6ed30]        # 0x1400927d0
   140023aa0:	lea    rsi,[rip+0x6fd29]        # 0x1400937d0
   140023aa7:	lea    rax,[rip+0x6e522]        # 0x140091fd0
   140023aae:	lea    rcx,[rip+0x70d23]        # 0x1400947d8
   140023ab5:	test   r13,r13
   140023ab8:	je     0x140023bc4
   140023abe:	mov    r8,r13
   140023ac1:	lea    rcx,[rsp+0x480]
   140023ac9:	mov    rdx,rax
   140023acc:	call   0x140059180
   140023ad1:	mov    eax,0x800
   140023ad6:	mov    rdx,rdi
   140023ad9:	sub    rax,r13
   140023adc:	cmp    rax,rdi
   140023adf:	cmovb  rdx,rax
   140023ae3:	mov    QWORD PTR [rsp+0x68],rdx
   140023ae8:	test   rdx,rdx
   140023aeb:	je     0x140023b0a
   140023aed:	mov    r8,rdx
   140023af0:	lea    rcx,[rsp+0x480]
   140023af8:	mov    rdx,QWORD PTR [rsp+0x70]
   140023afd:	add    rcx,r13
   140023b00:	call   0x140059180
   140023b05:	mov    rdx,QWORD PTR [rsp+0x68]
   140023b0a:	mov    al,BYTE PTR [rsp+0x60]
   140023b0e:	lea    r9,[rdx+r13*1]
   140023b12:	mov    BYTE PTR [rsp+0x50],al
   140023b16:	lea    r8,[rsp+0x480]
   140023b1e:	lea    rax,[rip+0x70cb3]        # 0x1400947d8
   140023b25:	mov    rdx,r15
   140023b28:	mov    QWORD PTR [rsp+0x48],rax
   140023b2d:	mov    rcx,rbp
   140023b30:	lea    rax,[rsp+0x68]
   140023b35:	mov    QWORD PTR [rsp+0x40],rax
   140023b3a:	mov    QWORD PTR [rsp+0x38],rsi
   140023b3f:	mov    QWORD PTR [rsp+0x30],r14
   140023b44:	mov    DWORD PTR [rsp+0x28],r12d
   140023b49:	mov    QWORD PTR [rsp+0x20],r13
   140023b4e:	call   0x1400235b4
   140023b53:	test   al,al
   140023b55:	je     0x140023c46
   140023b5b:	cmp    rdi,rbx
   140023b5e:	jae    0x140023bb5
   140023b60:	mov    r8,QWORD PTR [rip+0x70c69]        # 0x1400947d0
   140023b67:	lea    rsi,[rip+0x6e462]        # 0x140091fd0
   140023b6e:	sub    rbx,rdi
   140023b71:	cmp    rbx,QWORD PTR [rsp+0x68]
   140023b76:	cmovb  rbx,QWORD PTR [rsp+0x68]
   140023b7c:	cmp    rbx,r8
   140023b7f:	cmova  rbx,r8
   140023b83:	sub    r8,rbx
   140023b86:	je     0x140023b94
   140023b88:	lea    rdx,[rbx+rsi*1]
   140023b8c:	mov    rcx,rsi
   140023b8f:	call   0x140059180
   140023b94:	mov    rdx,QWORD PTR [rsp+0x70]
   140023b99:	lea    rcx,[rbx+rsi*1]
   140023b9d:	mov    r8,rdi
   140023ba0:	call   0x140059180
   140023ba5:	lea    rax,[rdi+rbx*1]
   140023ba9:	mov    QWORD PTR [rip+0x70c20],rax        # 0x1400947d0
   140023bb0:	jmp    0x140023c46
   140023bb5:	and    QWORD PTR [rip+0x70c13],0x0        # 0x1400947d0
   140023bbd:	lea    rcx,[rip+0x70c14]        # 0x1400947d8
   140023bc4:	cmp    QWORD PTR [rip+0x70c0c],0x0        # 0x1400947d8
   140023bcc:	je     0x140023c46
   140023bce:	test   rdi,rdi
   140023bd1:	je     0x140023c46
   140023bd3:	mov    al,BYTE PTR [rsp+0x60]
   140023bd7:	mov    r9,rdi
   140023bda:	mov    BYTE PTR [rsp+0x50],al
   140023bde:	mov    rdx,r15
   140023be1:	mov    QWORD PTR [rsp+0x48],rcx
   140023be6:	lea    rax,[rsp+0x68]
   140023beb:	mov    QWORD PTR [rsp+0x40],rax
   140023bf0:	mov    rcx,rbp
   140023bf3:	mov    QWORD PTR [rsp+0x38],rsi
   140023bf8:	mov    rsi,QWORD PTR [rsp+0x70]
   140023bfd:	mov    QWORD PTR [rsp+0x30],r14
   140023c02:	mov    r8,rsi
   140023c05:	mov    DWORD PTR [rsp+0x28],r12d
   140023c0a:	mov    QWORD PTR [rsp+0x20],rdi
   140023c0f:	call   0x1400235b4
   140023c14:	test   al,al
   140023c16:	je     0x140023c46
   140023c18:	mov    r8,rdi
   140023c1b:	sub    r8,QWORD PTR [rsp+0x68]
   140023c20:	cmp    r8,rbx
   140023c23:	cmova  r8,rbx
   140023c27:	mov    QWORD PTR [rip+0x70ba2],r8        # 0x1400947d0
   140023c2e:	test   r8,r8
   140023c31:	je     0x140023c46
   140023c33:	sub    rdi,r8
   140023c36:	lea    rcx,[rip+0x6e393]        # 0x140091fd0
   140023c3d:	lea    rdx,[rsi+rdi*1]
   140023c41:	call   0x140059180
   140023c46:	mov    rcx,QWORD PTR [rsp+0xc80]
   140023c4e:	xor    rcx,rsp
   140023c51:	call   0x140055f90
   140023c56:	add    rsp,0xc98
   140023c5d:	pop    r15
   140023c5f:	pop    r14
   140023c61:	pop    r13
   140023c63:	pop    r12
   140023c65:	pop    rdi
   140023c66:	pop    rsi
   140023c67:	pop    rbp
   140023c68:	pop    rbx
   140023c69:	ret    
   140023c6a:	int3   
   140023c6b:	int3   
   140023c6c:	rex push rbx
   140023c6e:	push   rsi
   140023c6f:	push   rdi
   140023c70:	sub    rsp,0x80
   140023c77:	mov    rax,QWORD PTR [rip+0x5e262]        # 0x140081ee0
   140023c7e:	xor    rax,rsp
   140023c81:	mov    QWORD PTR [rsp+0x70],rax
   140023c86:	mov    rsi,rdx
   140023c89:	mov    rdi,rcx
   140023c8c:	test   r8,r8
   140023c8f:	jne    0x140023c9d
   140023c91:	lea    r8,[rip+0x4abb8]        # 0x14006e850
   140023c98:	jmp    0x140023d4a
   140023c9d:	xor    eax,eax
   140023c9f:	test   r9,r9
   140023ca2:	je     0x140023cc1
   140023ca4:	cmp    BYTE PTR [r9+r8*1],0xd
   140023ca9:	je     0x140023cbe
   140023cab:	cmp    BYTE PTR [r9+r8*1],0xa
   140023cb0:	je     0x140023cbe
   140023cb2:	inc    eax
   140023cb4:	dec    r9
   140023cb7:	cmp    eax,0x32
   140023cba:	jl     0x140023c9f
   140023cbc:	jmp    0x140023cc1
   140023cbe:	inc    r9
   140023cc1:	mov    rbx,QWORD PTR [rsp+0xc0]
   140023cc9:	cmp    r9,rbx
   140023ccc:	jae    0x140023d55
   140023cd2:	sub    rbx,r9
   140023cd5:	lea    rdx,[r9+r8*1]
   140023cd9:	mov    eax,0x45
   140023cde:	lea    rcx,[rsp+0x20]
   140023ce3:	cmp    rbx,rax
   140023ce6:	cmova  rbx,rax
   140023cea:	mov    r8,rbx
   140023ced:	call   0x140059180
   140023cf2:	lea    rdx,[rip+0x4ab5b]        # 0x14006e854
   140023cf9:	lea    rcx,[rsp+0x20]
   140023cfe:	call   0x140059644
   140023d03:	test   rax,rax
   140023d06:	je     0x140023d0b
   140023d08:	mov    BYTE PTR [rax],0x0
   140023d0b:	cmp    rbx,0x46
   140023d0f:	jae    0x140023d6d
   140023d11:	xor    eax,eax
   140023d13:	mov    BYTE PTR [rsp+rbx*1+0x20],0x0
   140023d18:	test   rbx,rbx
   140023d1b:	je     0x140023d31
   140023d1d:	cmp    BYTE PTR [rsp+rax*1+0x20],0x20
   140023d22:	jae    0x140023d29
   140023d24:	mov    BYTE PTR [rsp+rax*1+0x20],0x20
   140023d29:	inc    rax
   140023d2c:	cmp    rax,rbx
   140023d2f:	jb     0x140023d1d
   140023d31:	mov    al,BYTE PTR [rsp+0x20]
   140023d35:	lea    r8,[rsp+0x20]
   140023d3a:	jmp    0x140023d46
   140023d3c:	cmp    al,0x20
   140023d3e:	jne    0x140023d4a
   140023d40:	inc    r8
   140023d43:	mov    al,BYTE PTR [r8]
   140023d46:	test   al,al
   140023d48:	jne    0x140023d3c
   140023d4a:	mov    rdx,rsi
   140023d4d:	mov    rcx,rdi
   140023d50:	call   0x140048898
   140023d55:	mov    rcx,QWORD PTR [rsp+0x70]
   140023d5a:	xor    rcx,rsp
   140023d5d:	call   0x140055f90
   140023d62:	add    rsp,0x80
   140023d69:	pop    rdi
   140023d6a:	pop    rsi
   140023d6b:	pop    rbx
   140023d6c:	ret    
   140023d6d:	call   0x1400560e8
   140023d72:	int3   
   140023d73:	int3   
   140023d74:	rex push rbx
   140023d76:	sub    rsp,0x20
   140023d7a:	mov    BYTE PTR [rcx+0x8],0x0
   140023d7e:	mov    rbx,rcx
   140023d81:	test   dl,dl
   140023d83:	je     0x140023da5
   140023d85:	mov    ecx,0x8003
   140023d8a:	call   0x140055df0
   140023d8f:	xor    edx,edx
   140023d91:	mov    QWORD PTR [rbx+0x10],rax
   140023d95:	mov    r8d,0x8003
   140023d9b:	mov    rcx,rax
   140023d9e:	call   0x140058f40
   140023da3:	jmp    0x140023daa
   140023da5:	and    QWORD PTR [rcx+0x10],0x0
   140023daa:	mov    rax,rbx
   140023dad:	add    rsp,0x20
   140023db1:	pop    rbx
   140023db2:	ret    
   140023db3:	int3   
   140023db4:	sub    rsp,0x28
   140023db8:	cmp    BYTE PTR [rcx+0x8],0x0
   140023dbc:	jne    0x140023dc7
   140023dbe:	mov    rcx,QWORD PTR [rcx+0x10]
   140023dc2:	call   0x140055de8
   140023dc7:	add    rsp,0x28
   140023dcb:	ret    
   140023dcc:	mov    QWORD PTR [rsp+0x8],rbx
   140023dd1:	push   rdi
   140023dd2:	sub    rsp,0x20
   140023dd6:	mov    rbx,rcx
   140023dd9:	mov    rdi,rdx
   140023ddc:	mov    rcx,QWORD PTR [rcx+0x10]
   140023de0:	test   rcx,rcx
   140023de3:	je     0x140023df0
   140023de5:	cmp    BYTE PTR [rbx+0x8],0x0
   140023de9:	jne    0x140023df0
   140023deb:	call   0x140055de8
   140023df0:	mov    QWORD PTR [rbx+0x10],rdi
   140023df4:	mov    BYTE PTR [rbx+0x8],0x1
   140023df8:	mov    rbx,QWORD PTR [rsp+0x30]
   140023dfd:	add    rsp,0x20
   140023e01:	pop    rdi
   140023e02:	ret    
   140023e03:	int3   
   140023e04:	mov    r8d,DWORD PTR [rcx+0x4]
   140023e08:	add    r8d,edx
   140023e0b:	mov    eax,r8d
   140023e0e:	and    r8d,0x7
   140023e12:	shr    eax,0x3
   140023e15:	add    DWORD PTR [rcx],eax
   140023e17:	mov    DWORD PTR [rcx+0x4],r8d
   140023e1b:	ret    
   140023e1c:	movsxd r8,DWORD PTR [rcx]
   140023e1f:	mov    r11,rcx
   140023e22:	mov    r9,QWORD PTR [rcx+0x10]
   140023e26:	lea    eax,[r8+0x1]
   140023e2a:	movzx  r10d,BYTE PTR [r8+r9*1]
   140023e2f:	movsxd rdx,eax
   140023e32:	shl    r10d,0x8
   140023e36:	movzx  eax,BYTE PTR [rdx+r9*1]
   140023e3b:	or     r10d,eax
   140023e3e:	lea    eax,[r8+0x2]
   140023e42:	movsxd rcx,eax
   140023e45:	shl    r10d,0x8
   140023e49:	movzx  eax,BYTE PTR [rcx+r9*1]
   140023e4e:	mov    ecx,0x8
   140023e53:	sub    ecx,DWORD PTR [r11+0x4]
   140023e57:	or     r10d,eax
   140023e5a:	shr    r10d,cl
   140023e5d:	movzx  eax,r10w
   140023e61:	ret    
   140023e62:	int3   
   140023e63:	int3   
   140023e64:	xor    eax,eax
   140023e66:	mov    QWORD PTR [rcx+0x8],rax
   140023e6a:	mov    DWORD PTR [rcx],eax
   140023e6c:	mov    QWORD PTR [rcx+0x10],rax
   140023e70:	mov    DWORD PTR [rcx+0x18],eax
   140023e73:	mov    rax,rcx
   140023e76:	ret    
   140023e77:	int3   
   140023e78:	mov    rax,rsp
   140023e7b:	mov    QWORD PTR [rax+0x8],rbx
   140023e7f:	mov    QWORD PTR [rax+0x10],rbp
   140023e83:	mov    QWORD PTR [rax+0x18],rsi
   140023e87:	mov    QWORD PTR [rax+0x20],rdi
   140023e8b:	push   r14
   140023e8d:	sub    rsp,0x20
   140023e91:	mov    rbp,rdx
   140023e94:	lea    rsi,[rcx+0xf8]
   140023e9b:	sub    rbp,rcx
   140023e9e:	mov    rdi,rdx
   140023ea1:	mov    rbx,rcx
   140023ea4:	mov    r14d,0x8
   140023eaa:	lea    rcx,[rsi-0xf8]
   140023eb1:	mov    rax,rcx
   140023eb4:	lea    rdx,[rbp-0xf8]
   140023ebb:	not    rax
   140023ebe:	add    rdx,rsi
   140023ec1:	inc    rax
   140023ec4:	and    eax,0x3f
   140023ec7:	add    rax,rcx
   140023eca:	mov    QWORD PTR [rsi-0x8],rax
   140023ece:	sub    rax,0xffffffffffffff80
   140023ed2:	mov    QWORD PTR [rsi],rax
   140023ed5:	add    rax,0x20
   140023ed9:	mov    QWORD PTR [rsi+0x8],rax
   140023edd:	add    rax,0x8
   140023ee1:	mov    QWORD PTR [rsi+0x10],rax
   140023ee5:	call   0x14002403c
   140023eea:	add    rsi,0x120
   140023ef1:	sub    r14,0x1
   140023ef5:	jne    0x140023eaa
   140023ef7:	lea    rcx,[rbx+0x900]
   140023efe:	mov    rax,rcx
   140023f01:	lea    rdx,[rdi+0x900]
   140023f08:	not    rax
   140023f0b:	inc    rax
   140023f0e:	and    eax,0x3f
   140023f11:	add    rax,rcx
   140023f14:	mov    QWORD PTR [rcx+0xf0],rax
   140023f1b:	sub    rax,0xffffffffffffff80
   140023f1f:	mov    QWORD PTR [rcx+0xf8],rax
   140023f26:	add    rax,0x20
   140023f2a:	mov    QWORD PTR [rcx+0x100],rax
   140023f31:	add    rax,0x8
   140023f35:	mov    QWORD PTR [rcx+0x108],rax
   140023f3c:	call   0x14002403c
   140023f41:	lea    edx,[r14+0x4]
   140023f45:	lea    rax,[rbx+0xa20]
   140023f4c:	lea    rcx,[rdi+0xa20]
   140023f53:	lea    r8d,[rdx+0x7c]
   140023f57:	movups xmm0,XMMWORD PTR [rcx]
   140023f5a:	movups XMMWORD PTR [rax],xmm0
   140023f5d:	movups xmm1,XMMWORD PTR [rcx+0x10]
   140023f61:	movups XMMWORD PTR [rax+0x10],xmm1
   140023f65:	movups xmm0,XMMWORD PTR [rcx+0x20]
   140023f69:	movups XMMWORD PTR [rax+0x20],xmm0
   140023f6d:	movups xmm1,XMMWORD PTR [rcx+0x30]
   140023f71:	movups XMMWORD PTR [rax+0x30],xmm1
   140023f75:	movups xmm0,XMMWORD PTR [rcx+0x40]
   140023f79:	movups XMMWORD PTR [rax+0x40],xmm0
   140023f7d:	movups xmm1,XMMWORD PTR [rcx+0x50]
   140023f81:	movups XMMWORD PTR [rax+0x50],xmm1
   140023f85:	movups xmm0,XMMWORD PTR [rcx+0x60]
   140023f89:	movups XMMWORD PTR [rax+0x60],xmm0
   140023f8d:	add    rax,r8
   140023f90:	movups xmm1,XMMWORD PTR [rcx+0x70]
   140023f94:	add    rcx,r8
   140023f97:	movups XMMWORD PTR [rax-0x10],xmm1
   140023f9b:	sub    rdx,0x1
   140023f9f:	jne    0x140023f57
   140023fa1:	mov    rax,QWORD PTR [rdi+0xc20]
   140023fa8:	mov    rbp,QWORD PTR [rsp+0x38]
   140023fad:	mov    rsi,QWORD PTR [rsp+0x40]
   140023fb2:	mov    QWORD PTR [rbx+0xc20],rax
   140023fb9:	mov    rax,QWORD PTR [rdi+0xc28]
   140023fc0:	mov    QWORD PTR [rbx+0xc28],rax
   140023fc7:	mov    eax,DWORD PTR [rdi+0xc30]
   140023fcd:	mov    rdi,QWORD PTR [rsp+0x48]
   140023fd2:	mov    DWORD PTR [rbx+0xc30],eax
   140023fd8:	mov    rax,rbx
   140023fdb:	mov    rbx,QWORD PTR [rsp+0x30]
   140023fe0:	add    rsp,0x20
   140023fe4:	pop    r14
   140023fe6:	ret    
   140023fe7:	int3   
   140023fe8:	rex push rbx
   140023fea:	sub    rsp,0x30
   140023fee:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140023ff7:	mov    rbx,rcx
   140023ffa:	mov    rcx,QWORD PTR [rcx+0x10]
   140023ffe:	call   0x140047010
   140024003:	nop
   140024004:	lea    rcx,[rbx+0x4]
   140024008:	mov    edx,0x4
   14002400d:	call   0x1400438bc
   140024012:	nop
   140024013:	mov    rcx,QWORD PTR [rbx+0x8]
   140024017:	test   rcx,rcx
   14002401a:	je     0x140024036
   14002401c:	mov    edx,0xc38
   140024021:	call   0x1400438bc
   140024026:	nop
   140024027:	mov    edx,0xc38
   14002402c:	mov    rcx,QWORD PTR [rbx+0x8]
   140024030:	call   0x140055de8
   140024035:	nop
   140024036:	add    rsp,0x30
   14002403a:	pop    rbx
   14002403b:	ret    
   14002403c:	cmp    rcx,rdx
   14002403f:	je     0x1400240db
   140024045:	mov    rax,QWORD PTR [rdx+0xf0]
   14002404c:	mov    r9d,0x80
   140024052:	mov    r8,QWORD PTR [rcx+0xf0]
   140024059:	movups xmm0,XMMWORD PTR [rax]
   14002405c:	movups XMMWORD PTR [r8],xmm0
   140024060:	movups xmm1,XMMWORD PTR [rax+0x10]
   140024064:	movups XMMWORD PTR [r8+0x10],xmm1
   140024069:	movups xmm0,XMMWORD PTR [rax+0x20]
   14002406d:	movups XMMWORD PTR [r8+0x20],xmm0
   140024072:	movups xmm1,XMMWORD PTR [rax+0x30]
   140024076:	movups XMMWORD PTR [r8+0x30],xmm1
   14002407b:	movups xmm0,XMMWORD PTR [rax+0x40]
   14002407f:	movups XMMWORD PTR [r8+0x40],xmm0
   140024084:	movups xmm1,XMMWORD PTR [rax+0x50]
   140024088:	movups XMMWORD PTR [r8+0x50],xmm1
   14002408d:	movups xmm0,XMMWORD PTR [rax+0x60]
   140024091:	movups XMMWORD PTR [r8+0x60],xmm0
   140024096:	add    r8,r9
   140024099:	movups xmm0,XMMWORD PTR [rax+0x70]
   14002409d:	movups XMMWORD PTR [r8-0x10],xmm0
   1400240a2:	movups xmm1,XMMWORD PTR [rax+r9*1]
   1400240a7:	movups XMMWORD PTR [r8],xmm1
   1400240ab:	movups xmm0,XMMWORD PTR [rax+r9*1+0x10]
   1400240b1:	movups XMMWORD PTR [r8+0x10],xmm0
   1400240b6:	movups xmm1,XMMWORD PTR [rax+r9*1+0x20]
   1400240bc:	movups XMMWORD PTR [r8+0x20],xmm1
   1400240c1:	mov    rax,QWORD PTR [rdx+0x110]
   1400240c8:	mov    QWORD PTR [rcx+0x110],rax
   1400240cf:	mov    al,BYTE PTR [rdx+0x118]
   1400240d5:	mov    BYTE PTR [rcx+0x118],al
   1400240db:	mov    rax,rcx
   1400240de:	ret    
   1400240df:	int3   
   1400240e0:	rex push rbx
   1400240e2:	sub    rsp,0x20
   1400240e6:	xor    ebx,ebx
   1400240e8:	cmp    DWORD PTR [rcx],ebx
   1400240ea:	je     0x140024134
   1400240ec:	cmp    DWORD PTR [rdx],ebx
   1400240ee:	je     0x140024134
   1400240f0:	cmp    DWORD PTR [rcx],0x1
   1400240f3:	jne    0x1400240fa
   1400240f5:	cmp    DWORD PTR [rdx],0x1
   1400240f8:	je     0x140024104
   1400240fa:	cmp    DWORD PTR [rcx],0x2
   1400240fd:	jne    0x14002410f
   1400240ff:	cmp    DWORD PTR [rdx],0x2
   140024102:	jne    0x14002410f
   140024104:	mov    eax,DWORD PTR [rdx+0x4]
   140024107:	cmp    DWORD PTR [rcx+0x4],eax
   14002410a:	sete   al
   14002410d:	jmp    0x140024136
   14002410f:	cmp    DWORD PTR [rcx],0x3
   140024112:	jne    0x140024130
   140024114:	cmp    DWORD PTR [rdx],0x3
   140024117:	jne    0x140024130
   140024119:	add    rdx,0x4
   14002411d:	add    rcx,0x4
   140024121:	mov    r8d,0x20
   140024127:	call   0x140058e60
   14002412c:	test   eax,eax
   14002412e:	jmp    0x14002410a
   140024130:	xor    al,al
   140024132:	jmp    0x140024136
   140024134:	mov    al,0x1
   140024136:	add    rsp,0x20
   14002413a:	pop    rbx
   14002413b:	ret    
   14002413c:	mov    QWORD PTR [rsp+0x20],rbx
   140024141:	push   rdi
   140024142:	sub    rsp,0x50
   140024146:	mov    rax,QWORD PTR [rip+0x5dd93]        # 0x140081ee0
   14002414d:	xor    rax,rsp
   140024150:	mov    QWORD PTR [rsp+0x48],rax
   140024155:	mov    rdi,rdx
   140024158:	mov    rbx,r8
   14002415b:	lea    rdx,[rsp+0x20]
   140024160:	call   0x140024258
   140024165:	test   rbx,rbx
   140024168:	je     0x140024177
   14002416a:	mov    rdx,rbx
   14002416d:	lea    rcx,[rsp+0x20]
   140024172:	call   0x140017f6c
   140024177:	mov    rdx,rdi
   14002417a:	lea    rcx,[rsp+0x20]
   14002417f:	call   0x1400240e0
   140024184:	mov    rcx,QWORD PTR [rsp+0x48]
   140024189:	xor    rcx,rsp
   14002418c:	call   0x140055f90
   140024191:	mov    rbx,QWORD PTR [rsp+0x78]
   140024196:	add    rsp,0x50
   14002419a:	pop    rdi
   14002419b:	ret    
   14002419c:	cmp    DWORD PTR [rcx],0x2
   14002419f:	jne    0x1400241a7
   1400241a1:	mov    eax,DWORD PTR [rcx+0x4]
   1400241a4:	not    eax
   1400241a6:	ret    
   1400241a7:	xor    eax,eax
   1400241a9:	ret    
   1400241aa:	int3   
   1400241ab:	int3   
   1400241ac:	mov    QWORD PTR [rsp+0x10],rbx
   1400241b1:	mov    QWORD PTR [rsp+0x18],rsi
   1400241b6:	push   rdi
   1400241b7:	sub    rsp,0x20
   1400241bb:	cmp    QWORD PTR [rcx+0x8],0x0
   1400241c0:	mov    esi,r8d
   1400241c3:	mov    edi,edx
   1400241c5:	mov    rbx,rcx
   1400241c8:	jne    0x1400241ea
   1400241ca:	mov    ecx,0xc38
   1400241cf:	call   0x140055dac
   1400241d4:	mov    QWORD PTR [rsp+0x30],rax
   1400241d9:	test   rax,rax
   1400241dc:	je     0x1400241e6
   1400241de:	mov    rcx,rax
   1400241e1:	call   0x140001584
   1400241e6:	mov    QWORD PTR [rbx+0x8],rax
   1400241ea:	mov    DWORD PTR [rbx],edi
   1400241ec:	cmp    edi,0x1
   1400241ef:	jne    0x1400241f5
   1400241f1:	and    DWORD PTR [rbx+0x4],0x0
   1400241f5:	cmp    edi,0x2
   1400241f8:	jne    0x1400241fe
   1400241fa:	or     DWORD PTR [rbx+0x4],0xffffffff
   1400241fe:	cmp    edi,0x3
   140024201:	jne    0x14002420c
   140024203:	mov    rcx,QWORD PTR [rbx+0x8]
   140024207:	call   0x14001017c
   14002420c:	mov    eax,0x8
   140024211:	cmp    esi,eax
   140024213:	cmovb  eax,esi
   140024216:	mov    rsi,QWORD PTR [rsp+0x40]
   14002421b:	mov    DWORD PTR [rbx+0x18],eax
   14002421e:	mov    rbx,QWORD PTR [rsp+0x38]
   140024223:	add    rsp,0x20
   140024227:	pop    rdi
   140024228:	ret    
   140024229:	int3   
   14002422a:	int3   
   14002422b:	int3   
   14002422c:	lea    eax,[rdx-0x1]
   14002422f:	mov    DWORD PTR [rcx],edx
   140024231:	cmp    eax,0x1
   140024234:	ja     0x14002423a
   140024236:	and    DWORD PTR [rcx+0x4],0x0
   14002423a:	cmp    edx,0x3
   14002423d:	jne    0x140024255
   14002423f:	movups xmm0,XMMWORD PTR [rip+0x5d28a]        # 0x1400814d0
   140024246:	movups XMMWORD PTR [rcx+0x4],xmm0
   14002424a:	movups xmm1,XMMWORD PTR [rip+0x5d28f]        # 0x1400814e0
   140024251:	movups XMMWORD PTR [rcx+0x14],xmm1
   140024255:	ret    
   140024256:	int3   
   140024257:	int3   
   140024258:	rex push rbx
   14002425a:	sub    rsp,0xc70
   140024261:	mov    rax,QWORD PTR [rip+0x5dc78]        # 0x140081ee0
   140024268:	xor    rax,rsp
   14002426b:	mov    QWORD PTR [rsp+0xc60],rax
   140024273:	mov    eax,DWORD PTR [rcx]
   140024275:	mov    rbx,rdx
   140024278:	mov    DWORD PTR [rdx],eax
   14002427a:	cmp    DWORD PTR [rcx],0x1
   14002427d:	jne    0x140024285
   14002427f:	mov    eax,DWORD PTR [rcx+0x4]
   140024282:	mov    DWORD PTR [rdx+0x4],eax
   140024285:	cmp    DWORD PTR [rcx],0x2
   140024288:	jne    0x140024292
   14002428a:	mov    eax,DWORD PTR [rcx+0x4]
   14002428d:	not    eax
   14002428f:	mov    DWORD PTR [rdx+0x4],eax
   140024292:	cmp    DWORD PTR [rcx],0x3
   140024295:	jne    0x1400242b3
   140024297:	mov    rdx,QWORD PTR [rcx+0x8]
   14002429b:	lea    rcx,[rsp+0x20]
   1400242a0:	call   0x140023e78
   1400242a5:	lea    rdx,[rbx+0x4]
   1400242a9:	lea    rcx,[rsp+0x20]
   1400242ae:	call   0x140010098
   1400242b3:	mov    rcx,QWORD PTR [rsp+0xc60]
   1400242bb:	xor    rcx,rsp
   1400242be:	call   0x140055f90
   1400242c3:	add    rsp,0xc70
   1400242ca:	pop    rbx
   1400242cb:	ret    
   1400242cc:	mov    QWORD PTR [rsp+0x8],rbx
   1400242d1:	mov    QWORD PTR [rsp+0x10],rsi
   1400242d6:	push   rdi
   1400242d7:	sub    rsp,0x20
   1400242db:	cmp    DWORD PTR [rcx],0x1
   1400242de:	mov    rdi,r8
   1400242e1:	mov    rsi,rdx
   1400242e4:	mov    rbx,rcx
   1400242e7:	jne    0x1400242f8
   1400242e9:	movzx  ecx,WORD PTR [rcx+0x4]
   1400242ed:	call   0x140017d44
   1400242f2:	movzx  eax,ax
   1400242f5:	mov    DWORD PTR [rbx+0x4],eax
   1400242f8:	cmp    DWORD PTR [rbx],0x2
   1400242fb:	jne    0x14002430e
   1400242fd:	mov    ecx,DWORD PTR [rbx+0x4]
   140024300:	mov    r8,rdi
   140024303:	mov    rdx,rsi
   140024306:	call   0x140017ac0
   14002430b:	mov    DWORD PTR [rbx+0x4],eax
   14002430e:	cmp    DWORD PTR [rbx],0x3
   140024311:	jne    0x140024354
   140024313:	cmp    DWORD PTR [rbx+0x18],0x1
   140024317:	jbe    0x140024329
   140024319:	cmp    QWORD PTR [rbx+0x10],0x0
   14002431e:	jne    0x140024329
   140024320:	call   0x140046ea4
   140024325:	mov    QWORD PTR [rbx+0x10],rax
   140024329:	mov    rcx,QWORD PTR [rbx+0x8]
   14002432d:	mov    r8,rdi
   140024330:	mov    rax,QWORD PTR [rbx+0x10]
   140024334:	mov    rdx,rsi
   140024337:	mov    QWORD PTR [rcx+0xc28],rax
   14002433e:	mov    rcx,QWORD PTR [rbx+0x8]
   140024342:	mov    eax,DWORD PTR [rbx+0x18]
   140024345:	mov    DWORD PTR [rcx+0xc30],eax
   14002434b:	mov    rcx,QWORD PTR [rbx+0x8]
   14002434f:	call   0x1400101fc
   140024354:	mov    rbx,QWORD PTR [rsp+0x30]
   140024359:	mov    rsi,QWORD PTR [rsp+0x38]
   14002435e:	add    rsp,0x20
   140024362:	pop    rdi
   140024363:	ret    
   140024364:	mov    QWORD PTR [rsp+0x8],rbx
   140024369:	push   rdi
   14002436a:	sub    rsp,0x20
   14002436e:	mov    rdi,rdx
   140024371:	mov    rbx,rcx
   140024374:	call   0x140009a60
   140024379:	mov    rax,QWORD PTR [rdi+0x8]
   14002437d:	cmp    rax,QWORD PTR [rbx+0x10]
   140024381:	jbe    0x140024394
   140024383:	sub    rax,QWORD PTR [rbx+0x8]
   140024387:	mov    rcx,rbx
   14002438a:	mov    rdx,rax
   14002438d:	call   0x140001858
   140024392:	jmp    0x140024398
   140024394:	mov    QWORD PTR [rbx+0x8],rax
   140024398:	mov    r8,QWORD PTR [rdi+0x8]
   14002439c:	test   r8,r8
   14002439f:	je     0x1400243ac
   1400243a1:	mov    rdx,QWORD PTR [rdi]
   1400243a4:	mov    rcx,QWORD PTR [rbx]
   1400243a7:	call   0x140059180
   1400243ac:	mov    rbx,QWORD PTR [rsp+0x30]
   1400243b1:	add    rsp,0x20
   1400243b5:	pop    rdi
   1400243b6:	ret    
   1400243b7:	int3   
   1400243b8:	mov    QWORD PTR [rsp+0x8],rbx
   1400243bd:	mov    QWORD PTR [rsp+0x10],rsi
   1400243c2:	push   rdi
   1400243c3:	sub    rsp,0x20
   1400243c7:	lea    rbx,[rcx+0x1020]
   1400243ce:	mov    rdi,rcx
   1400243d1:	mov    rcx,rbx
   1400243d4:	mov    rsi,rdx
   1400243d7:	call   0x140009a60
   1400243dc:	mov    ecx,0x46
   1400243e1:	mov    r8,rdi
   1400243e4:	mov    rax,rsi
   1400243e7:	lea    edx,[rcx+0x3a]
   1400243ea:	movups xmm0,XMMWORD PTR [rax]
   1400243ed:	movups XMMWORD PTR [r8],xmm0
   1400243f1:	movups xmm1,XMMWORD PTR [rax+0x10]
   1400243f5:	movups XMMWORD PTR [r8+0x10],xmm1
   1400243fa:	movups xmm0,XMMWORD PTR [rax+0x20]
   1400243fe:	movups XMMWORD PTR [r8+0x20],xmm0
   140024403:	movups xmm1,XMMWORD PTR [rax+0x30]
   140024407:	movups XMMWORD PTR [r8+0x30],xmm1
   14002440c:	movups xmm0,XMMWORD PTR [rax+0x40]
   140024410:	movups XMMWORD PTR [r8+0x40],xmm0
   140024415:	movups xmm1,XMMWORD PTR [rax+0x50]
   140024419:	movups XMMWORD PTR [r8+0x50],xmm1
   14002441e:	movups xmm0,XMMWORD PTR [rax+0x60]
   140024422:	movups XMMWORD PTR [r8+0x60],xmm0
   140024427:	add    r8,rdx
   14002442a:	movups xmm1,XMMWORD PTR [rax+0x70]
   14002442e:	add    rax,rdx
   140024431:	movups XMMWORD PTR [r8-0x10],xmm1
   140024436:	sub    rcx,0x1
   14002443a:	jne    0x1400243ea
   14002443c:	movups xmm0,XMMWORD PTR [rax]
   14002443f:	lea    rdx,[rsi+0x1020]
   140024446:	mov    rcx,rbx
   140024449:	movups XMMWORD PTR [r8],xmm0
   14002444d:	mov    rax,QWORD PTR [rax+0x10]
   140024451:	mov    QWORD PTR [r8+0x10],rax
   140024455:	xor    eax,eax
   140024457:	mov    QWORD PTR [rbx],rax
   14002445a:	mov    QWORD PTR [rbx+0x8],rax
   14002445e:	mov    QWORD PTR [rbx+0x10],rax
   140024462:	mov    QWORD PTR [rbx+0x18],rax
   140024466:	call   0x140024364
   14002446b:	mov    rbx,QWORD PTR [rsp+0x30]
   140024470:	mov    rax,rdi
   140024473:	mov    rsi,QWORD PTR [rsp+0x38]
   140024478:	add    rsp,0x20
   14002447c:	pop    rdi
   14002447d:	ret    
   14002447e:	int3   
   14002447f:	int3   
   140024480:	mov    QWORD PTR [rsp+0x8],rbx
   140024485:	push   rdi
   140024486:	sub    rsp,0x20
   14002448a:	lea    rax,[rcx+0x1020]
   140024491:	mov    rbx,rcx
   140024494:	cmp    rdx,QWORD PTR [rax+0x10]
   140024498:	jbe    0x1400244a8
   14002449a:	sub    rdx,QWORD PTR [rax+0x8]
   14002449e:	mov    rcx,rax
   1400244a1:	call   0x140001858
   1400244a6:	jmp    0x1400244ac
   1400244a8:	mov    QWORD PTR [rax+0x8],rdx
   1400244ac:	xor    edi,edi
   1400244ae:	lea    rcx,[rbx+0x1070]
   1400244b5:	xor    edx,edx
   1400244b7:	mov    BYTE PTR [rbx+0x10],dil
   1400244bb:	call   0x14002422c
   1400244c0:	mov    QWORD PTR [rbx+0x1040],rdi
   1400244c7:	mov    QWORD PTR [rbx+0x1050],rdi
   1400244ce:	mov    QWORD PTR [rbx+0x1048],rdi
   1400244d5:	mov    QWORD PTR [rbx+0x1098],rdi
   1400244dc:	mov    DWORD PTR [rbx+0x1c],edi
   1400244df:	mov    BYTE PTR [rbx+0x10a0],dil
   1400244e6:	mov    BYTE PTR [rbx+0x10c1],dil
   1400244ed:	mov    BYTE PTR [rbx+0x10ca],dil
   1400244f4:	mov    QWORD PTR [rbx+0x10ec],rdi
   1400244fb:	mov    QWORD PTR [rbx+0x10f8],rdi
   140024502:	mov    WORD PTR [rbx+0x1100],di
   140024509:	mov    BYTE PTR [rbx+0x1102],dil
   140024510:	mov    DWORD PTR [rbx+0x1108],edi
   140024516:	mov    BYTE PTR [rbx+0x210d],dil
   14002451d:	mov    rbx,QWORD PTR [rsp+0x30]
   140024522:	add    rsp,0x20
   140024526:	pop    rdi
   140024527:	ret    
   140024528:	xor    eax,eax
   14002452a:	mov    WORD PTR [rcx+0x14],ax
   14002452e:	mov    DWORD PTR [rcx+0x18],eax
   140024531:	mov    WORD PTR [rcx+0x1c],ax
   140024535:	mov    BYTE PTR [rcx+0x1e],al
   140024538:	mov    QWORD PTR [rcx+0x20],rax
   14002453c:	mov    QWORD PTR [rcx+0x28],rax
   140024540:	mov    QWORD PTR [rcx+0x30],rax
   140024544:	mov    QWORD PTR [rcx+0x38],rax
   140024548:	ret    
   140024549:	int3   
   14002454a:	int3   
   14002454b:	int3   
   14002454c:	sub    rsp,0x158
   140024553:	mov    rax,QWORD PTR [rip+0x5d986]        # 0x140081ee0
   14002455a:	xor    rax,rsp
   14002455d:	mov    QWORD PTR [rsp+0x140],rax
   140024565:	mov    ecx,DWORD PTR [rip+0x5cf85]        # 0x1400814f0
   14002456b:	cmp    ecx,0xffffffff
   14002456e:	jne    0x1400245a3
   140024570:	lea    rcx,[rsp+0x20]
   140024575:	mov    DWORD PTR [rsp+0x20],0x114
   14002457d:	call   QWORD PTR [rip+0x47be5]        # 0x14006c168
   140024583:	mov    ecx,DWORD PTR [rsp+0x30]
   140024587:	mov    eax,DWORD PTR [rsp+0x24]
   14002458b:	mov    edx,DWORD PTR [rsp+0x28]
   14002458f:	mov    DWORD PTR [rip+0x5cf5b],ecx        # 0x1400814f0
   140024595:	mov    DWORD PTR [rip+0x702d5],eax        # 0x140094870
   14002459b:	mov    DWORD PTR [rip+0x702d3],edx        # 0x140094874
   1400245a1:	jmp    0x1400245af
   1400245a3:	mov    eax,DWORD PTR [rip+0x702c7]        # 0x140094870
   1400245a9:	mov    edx,DWORD PTR [rip+0x702c5]        # 0x140094874
   1400245af:	cmp    ecx,0x2
   1400245b2:	jne    0x1400245bb
   1400245b4:	shl    eax,0x8
   1400245b7:	add    eax,edx
   1400245b9:	jmp    0x1400245c0
   1400245bb:	mov    eax,0x501
   1400245c0:	mov    rcx,QWORD PTR [rsp+0x140]
   1400245c8:	xor    rcx,rsp
   1400245cb:	call   0x140055f90
   1400245d0:	add    rsp,0x158
   1400245d7:	ret    
   1400245d8:	rex push rbp
   1400245da:	push   r12
   1400245dc:	push   r13
   1400245de:	push   r14
   1400245e0:	push   r15
   1400245e2:	lea    rbp,[rsp-0xa010]
   1400245ea:	mov    eax,0xa110
   1400245ef:	call   0x140055f20
   1400245f4:	sub    rsp,rax
   1400245f7:	mov    QWORD PTR [rsp+0x50],0xfffffffffffffffe
   140024600:	mov    QWORD PTR [rsp+0xa148],rbx
   140024608:	mov    QWORD PTR [rsp+0xa150],rsi
   140024610:	mov    QWORD PTR [rsp+0xa158],rdi
   140024618:	mov    rax,QWORD PTR [rip+0x5d8c1]        # 0x140081ee0
   14002461f:	xor    rax,rsp
   140024622:	mov    QWORD PTR [rbp+0xa000],rax
   140024629:	mov    rsi,rcx
   14002462c:	xor    ecx,ecx
   14002462e:	mov    r14d,ecx
   140024631:	mov    QWORD PTR [rsp+0x40],rcx
   140024636:	mov    r15d,ecx
   140024639:	mov    QWORD PTR [rsp+0x48],rcx
   14002463e:	mov    DWORD PTR [rsp+0x3c],ecx
   140024642:	mov    ebx,ecx
   140024644:	mov    DWORD PTR [rsp+0x38],ecx
   140024648:	movzx  eax,WORD PTR [rsi+0x83e4]
   14002464f:	cmp    ax,0x54
   140024653:	sete   r13b
   140024657:	test   r13b,r13b
   14002465a:	je     0x14002466b
   14002465c:	cmp    WORD PTR [rsi+0x83e6],0x41
   140024664:	mov    BYTE PTR [rsp+0x31],0x1
   140024669:	je     0x14002466f
   14002466b:	mov    BYTE PTR [rsp+0x31],cl
   14002466f:	cmp    ax,0x42
   140024673:	sete   dil
   140024677:	mov    BYTE PTR [rsp+0x34],dil
   14002467c:	cmp    WORD PTR [rsi+0x83e2],0x56
   140024684:	sete   r12b
   140024688:	mov    BYTE PTR [rsp+0x30],r12b
   14002468d:	mov    r8d,0x800
   140024693:	lea    rdx,[rbp+0x9000]
   14002469a:	mov    rcx,rsi
   14002469d:	call   0x140013e48
   1400246a2:	test   al,al
   1400246a4:	je     0x140024cbb
   1400246aa:	cmp    BYTE PTR [rsi+0x5133],r14b
   1400246b1:	je     0x1400246bf
   1400246b3:	lea    rcx,[rsi+0x5030]
   1400246ba:	call   0x140043640
   1400246bf:	mov    rdx,rsi
   1400246c2:	lea    rcx,[rsp+0x60]
   1400246c7:	call   0x140007678
   1400246cc:	nop
   1400246cd:	mov    BYTE PTR [rsp+0x7d],0x1
   1400246d2:	lea    rdx,[rbp+0x9000]
   1400246d9:	lea    rcx,[rsp+0x60]
   1400246de:	call   0x140021278
   1400246e3:	test   al,al
   1400246e5:	je     0x140024c85
   1400246eb:	lea    r8,[rbp-0x7a]
   1400246ef:	xor    edx,edx
   1400246f1:	lea    rcx,[rip+0x70148]        # 0x140094840
   1400246f8:	call   0x1400259c8
   1400246fd:	mov    BYTE PTR [rsp+0x33],0x1
   140024702:	jmp    0x140024c43
   140024707:	xor    ebx,ebx
   140024709:	mov    BYTE PTR [rsp+0x32],bl
   14002470d:	test   dil,dil
   140024710:	jne    0x140024934
   140024716:	lea    rcx,[rsp+0x60]
   14002471b:	call   0x14000a7c4
   140024720:	mov    ecx,0xda4
   140024725:	call   0x140040118
   14002472a:	mov    rdx,rax
   14002472d:	lea    r8,[rbp-0x7a]
   140024731:	lea    rcx,[rip+0x4a238]        # 0x14006e970
   140024738:	call   0x14001796c
   14002473d:	mov    ecx,0xda6
   140024742:	call   0x140040118
   140024747:	mov    rdx,rax
   14002474a:	lea    rcx,[rip+0x4a22f]        # 0x14006e980
   140024751:	call   0x14001796c
   140024756:	lea    rax,[rip+0x4a243]        # 0x14006e9a0
   14002475d:	lea    r8,[rip+0x4a24c]        # 0x14006e9b0
   140024764:	cmp    DWORD PTR [rbp+0x7ee8],0x2
   14002476b:	cmove  r8,rax
   14002476f:	lea    rax,[rip+0x4a21a]        # 0x14006e990
   140024776:	cmp    DWORD PTR [rbp+0x7ee8],0x1
   14002477d:	cmove  r8,rax
   140024781:	lea    edi,[rbx+0x1]
   140024784:	lea    rdx,[rip+0x4a201]        # 0x14006e98c
   14002478b:	lea    rcx,[rip+0x4a236]        # 0x14006e9c8
   140024792:	call   0x14001796c
   140024797:	cmp    BYTE PTR [rbp+0x7eec],bl
   14002479d:	je     0x1400247c2
   14002479f:	lea    edi,[rbx+0x2]
   1400247a2:	mov    ecx,0xda8
   1400247a7:	call   0x140040118
   1400247ac:	mov    r8,rax
   1400247af:	lea    rdx,[rip+0x4a21e]        # 0x14006e9d4
   1400247b6:	lea    rcx,[rip+0x4a223]        # 0x14006e9e0
   1400247bd:	call   0x14001796c
   1400247c2:	cmp    QWORD PTR [rbp+0x7ef8],rbx
   1400247c9:	jbe    0x1400247ff
   1400247cb:	mov    eax,edi
   1400247cd:	inc    edi
   1400247cf:	test   eax,eax
   1400247d1:	lea    rbx,[rip+0x4a214]        # 0x14006e9ec
   1400247d8:	jne    0x1400247e1
   1400247da:	lea    rbx,[rip+0x4a1e3]        # 0x14006e9c4
   1400247e1:	mov    ecx,0xdaa
   1400247e6:	call   0x140040118
   1400247eb:	mov    r8,rax
   1400247ee:	mov    rdx,rbx
   1400247f1:	lea    rcx,[rip+0x4a200]        # 0x14006e9f8
   1400247f8:	call   0x14001796c
   1400247fd:	xor    ebx,ebx
   1400247ff:	cmp    BYTE PTR [rbp+0x7eed],bl
   140024805:	je     0x140024871
   140024807:	mov    eax,edi
   140024809:	inc    edi
   14002480b:	cmp    DWORD PTR [rbp+0x7ee8],0x3
   140024812:	jne    0x140024841
   140024814:	test   eax,eax
   140024816:	je     0x140024824
   140024818:	lea    rcx,[rip+0x4a1e5]        # 0x14006ea04
   14002481f:	call   0x14001796c
   140024824:	mov    ebx,DWORD PTR [rbp+0x7f14]
   14002482a:	mov    ecx,0xe8c
   14002482f:	call   0x140040118
   140024834:	mov    rcx,rax
   140024837:	lea    edx,[rbx+0x1]
   14002483a:	call   0x14001796c
   14002483f:	jmp    0x14002486f
   140024841:	test   eax,eax
   140024843:	lea    rbx,[rip+0x4a1c2]        # 0x14006ea0c
   14002484a:	jne    0x140024853
   14002484c:	lea    rbx,[rip+0x4a189]        # 0x14006e9dc
   140024853:	mov    ecx,0xdac
   140024858:	call   0x140040118
   14002485d:	mov    r8,rax
   140024860:	mov    rdx,rbx
   140024863:	lea    rcx,[rip+0x4a1ae]        # 0x14006ea18
   14002486a:	call   0x14001796c
   14002486f:	xor    ebx,ebx
   140024871:	cmp    BYTE PTR [rbp+0x7ef3],bl
   140024877:	je     0x1400248ad
   140024879:	mov    eax,edi
   14002487b:	inc    edi
   14002487d:	test   eax,eax
   14002487f:	lea    rbx,[rip+0x4a19e]        # 0x14006ea24
   140024886:	jne    0x14002488f
   140024888:	lea    rbx,[rip+0x4a165]        # 0x14006e9f4
   14002488f:	mov    ecx,0xdae
   140024894:	call   0x140040118
   140024899:	mov    r8,rax
   14002489c:	mov    rdx,rbx
   14002489f:	lea    rcx,[rip+0x4a18a]        # 0x14006ea30
   1400248a6:	call   0x14001796c
   1400248ab:	xor    ebx,ebx
   1400248ad:	cmp    BYTE PTR [rbp+0x7eef],bl
   1400248b3:	je     0x1400248e9
   1400248b5:	mov    eax,edi
   1400248b7:	inc    edi
   1400248b9:	test   eax,eax
   1400248bb:	lea    rbx,[rip+0x4a17a]        # 0x14006ea3c
   1400248c2:	jne    0x1400248cb
   1400248c4:	lea    rbx,[rip+0x4a149]        # 0x14006ea14
   1400248cb:	mov    ecx,0xdb0
   1400248d0:	call   0x140040118
   1400248d5:	mov    r8,rax
   1400248d8:	mov    rdx,rbx
   1400248db:	lea    rcx,[rip+0x4a166]        # 0x14006ea48
   1400248e2:	call   0x14001796c
   1400248e7:	xor    ebx,ebx
   1400248e9:	cmp    BYTE PTR [rbp+0x7ef4],bl
   1400248ef:	je     0x140024923
   1400248f1:	lea    rbx,[rip+0x4a15c]        # 0x14006ea54
   1400248f8:	lea    rax,[rip+0x4a12d]        # 0x14006ea2c
   1400248ff:	test   edi,edi
   140024901:	cmove  rbx,rax
   140024905:	mov    ecx,0xdb4
   14002490a:	call   0x140040118
   14002490f:	mov    r8,rax
   140024912:	mov    rdx,rbx
   140024915:	lea    rcx,[rip+0x4a144]        # 0x14006ea60
   14002491c:	call   0x14001796c
   140024921:	xor    ebx,ebx
   140024923:	lea    rcx,[rip+0x4a11a]        # 0x14006ea44
   14002492a:	call   0x14001796c
   14002492f:	mov    dil,BYTE PTR [rsp+0x34]
   140024934:	mov    WORD PTR [rbp+0x8f90],bx
   14002493b:	jmp    0x140024a39
   140024940:	mov    ecx,DWORD PTR [rbp+0x2234]
   140024946:	cmp    ecx,0x5
   140024949:	je     0x140024a51
   14002494f:	sub    ecx,0x2
   140024952:	je     0x1400249ab
   140024954:	cmp    ecx,0x1
   140024957:	jne    0x140024a2f
   14002495d:	cmp    BYTE PTR [rsp+0x33],bl
   140024961:	je     0x140024a2f
   140024967:	test   dil,dil
   14002496a:	jne    0x140024a2f
   140024970:	test   r13b,r13b
   140024973:	je     0x140024a2f
   140024979:	cmp    BYTE PTR [rsp+0x31],bl
   14002497d:	je     0x140024a2f
   140024983:	mov    BYTE PTR [rsp+0x28],bl
   140024987:	mov    BYTE PTR [rsp+0x20],cl
   14002498b:	mov    r9b,BYTE PTR [rsp+0x30]
   140024990:	lea    r8,[rsp+0x32]
   140024995:	lea    rdx,[rbp+0x57a8]
   14002499c:	lea    rcx,[rsp+0x60]
   1400249a1:	call   0x14002500c
   1400249a6:	jmp    0x140024a2f
   1400249ab:	mov    DWORD PTR [rsp+0x28],ebx
   1400249af:	mov    QWORD PTR [rsp+0x20],rbx
   1400249b4:	mov    r9d,0x5
   1400249ba:	xor    r8d,r8d
   1400249bd:	lea    rdx,[rbp+0x3450]
   1400249c4:	mov    rcx,rsi
   1400249c7:	call   0x140013fb8
   1400249cc:	test   eax,eax
   1400249ce:	setne  al
   1400249d1:	mov    BYTE PTR [rsp+0x33],al
   1400249d5:	test   al,al
   1400249d7:	je     0x140024a2f
   1400249d9:	lea    r8,[rbp+0x3470]
   1400249e0:	mov    edx,0x1
   1400249e5:	lea    rcx,[rip+0x6fe54]        # 0x140094840
   1400249ec:	call   0x1400259c8
   1400249f1:	mov    BYTE PTR [rsp+0x28],dil
   1400249f6:	mov    BYTE PTR [rsp+0x20],r13b
   1400249fb:	mov    r9b,BYTE PTR [rsp+0x30]
   140024a00:	lea    r8,[rsp+0x32]
   140024a05:	lea    rdx,[rbp+0x3450]
   140024a0c:	lea    rcx,[rsp+0x60]
   140024a11:	call   0x14002500c
   140024a16:	cmp    BYTE PTR [rbp+0x44e8],bl
   140024a1c:	jne    0x140024a28
   140024a1e:	add    r12,QWORD PTR [rbp+0x44b0]
   140024a25:	inc    r14d
   140024a28:	add    r15,QWORD PTR [rbp+0x44a8]
   140024a2f:	lea    rcx,[rsp+0x60]
   140024a34:	call   0x14000a2c8
   140024a39:	lea    rcx,[rsp+0x60]
   140024a3e:	call   0x14000e334
   140024a43:	test   rax,rax
   140024a46:	jne    0x140024940
   140024a4c:	jmp    0x140024af5
   140024a51:	cmp    BYTE PTR [rbp+0x5787],bl
   140024a57:	je     0x140024a95
   140024a59:	cmp    DWORD PTR [rbp+0x7ee8],0x2
   140024a60:	jne    0x140024a95
   140024a62:	mov    ebx,DWORD PTR [rbp+0x7f14]
   140024a68:	inc    ebx
   140024a6a:	mov    ecx,0xdac
   140024a6f:	call   0x140040118
   140024a74:	mov    r9,rax
   140024a77:	mov    DWORD PTR [rsp+0x20],ebx
   140024a7b:	lea    r8,[rip+0x49fee]        # 0x14006ea70
   140024a82:	mov    edx,0x32
   140024a87:	lea    rcx,[rbp+0x8f90]
   140024a8e:	call   0x140006acc
   140024a93:	xor    ebx,ebx
   140024a95:	test   r13b,r13b
   140024a98:	je     0x140024af5
   140024a9a:	cmp    BYTE PTR [rsp+0x31],bl
   140024a9e:	je     0x140024af5
   140024aa0:	mov    ecx,0xde6
   140024aa5:	call   0x140040118
   140024aaa:	mov    rdx,rax
   140024aad:	lea    r8,[rip+0x49fd4]        # 0x14006ea88
   140024ab4:	lea    rcx,[rip+0x49fd5]        # 0x14006ea90
   140024abb:	call   0x14001796c
   140024ac0:	cmp    WORD PTR [rbp+0x8f90],bx
   140024ac7:	je     0x140024ae9
   140024ac9:	mov    ecx,0xdde
   140024ace:	call   0x140040118
   140024ad3:	mov    rdx,rax
   140024ad6:	lea    r8,[rbp+0x8f90]
   140024add:	lea    rcx,[rip+0x49fc4]        # 0x14006eaa8
   140024ae4:	call   0x14001796c
   140024ae9:	lea    rcx,[rip+0x49f6c]        # 0x14006ea5c
   140024af0:	call   0x14001796c
   140024af5:	test   dil,dil
   140024af8:	jne    0x140024be6
   140024afe:	test   r13b,r13b
   140024b01:	jne    0x140024be6
   140024b07:	cmp    BYTE PTR [rsp+0x32],bl
   140024b0b:	je     0x140024bd4
   140024b11:	mov    r8d,0x14
   140024b17:	lea    rdx,[rbp+0x8f40]
   140024b1e:	mov    rcx,r12
   140024b21:	call   0x140045f5c
   140024b26:	mov    r8d,0x14
   140024b2c:	lea    rdx,[rbp+0x8f68]
   140024b33:	mov    rcx,r15
   140024b36:	call   0x140045f5c
   140024b3b:	cmp    BYTE PTR [rsp+0x30],bl
   140024b3f:	je     0x140024b88
   140024b41:	lea    rcx,[rip+0x49f78]        # 0x14006eac0
   140024b48:	call   0x14001796c
   140024b4d:	mov    rdx,r12
   140024b50:	mov    rcx,r15
   140024b53:	call   0x14004598c
   140024b58:	mov    r9d,eax
   140024b5b:	mov    DWORD PTR [rsp+0x28],r14d
   140024b60:	lea    rax,[rbp+0x8f90]
   140024b67:	mov    QWORD PTR [rsp+0x20],rax
   140024b6c:	lea    r8,[rbp+0x8f68]
   140024b73:	lea    rdx,[rbp+0x8f40]
   140024b7a:	lea    rcx,[rip+0x49fcf]        # 0x14006eb50
   140024b81:	call   0x14001796c
   140024b86:	jmp    0x140024bb1
   140024b88:	lea    rcx,[rip+0x4a001]        # 0x14006eb90
   140024b8f:	call   0x14001796c
   140024b94:	mov    r9d,r14d
   140024b97:	lea    r8,[rbp+0x8f90]
   140024b9e:	lea    rdx,[rbp+0x8f40]
   140024ba5:	lea    rcx,[rip+0x4a044]        # 0x14006ebf0
   140024bac:	call   0x14001796c
   140024bb1:	mov    ebx,DWORD PTR [rsp+0x38]
   140024bb5:	add    ebx,r14d
   140024bb8:	mov    DWORD PTR [rsp+0x38],ebx
   140024bbc:	add    QWORD PTR [rsp+0x48],r12
   140024bc1:	add    QWORD PTR [rsp+0x40],r15
   140024bc6:	lea    rcx,[rip+0x49e9f]        # 0x14006ea6c
   140024bcd:	call   0x14001796c
   140024bd2:	jmp    0x140024bea
   140024bd4:	mov    ecx,0xdfa
   140024bd9:	call   0x140040118
   140024bde:	mov    rcx,rax
   140024be1:	call   0x14001796c
   140024be6:	mov    ebx,DWORD PTR [rsp+0x38]
   140024bea:	inc    DWORD PTR [rsp+0x3c]
   140024bee:	xor    r14d,r14d
   140024bf1:	cmp    QWORD PTR [rsi+0x6170],r14
   140024bf8:	je     0x140024c85
   140024bfe:	cmp    BYTE PTR [rbp+0x44e9],r14b
   140024c05:	jne    0x140024c19
   140024c07:	cmp    DWORD PTR [rbp+0x2234],0x5
   140024c0e:	jne    0x140024c85
   140024c10:	cmp    BYTE PTR [rbp+0x5784],r14b
   140024c17:	je     0x140024c85
   140024c19:	movzx  r9d,WORD PTR [rsi+0x83e2]
   140024c21:	xor    r8d,r8d
   140024c24:	xor    edx,edx
   140024c26:	lea    rcx,[rsp+0x60]
   140024c2b:	call   0x140054dcc
   140024c30:	test   al,al
   140024c32:	je     0x140024c85
   140024c34:	xor    r8d,r8d
   140024c37:	xor    edx,edx
   140024c39:	lea    rcx,[rsp+0x60]
   140024c3e:	call   0x14000a280
   140024c43:	mov    r12,r14
   140024c46:	mov    r15,r14
   140024c49:	mov    dl,0x1
   140024c4b:	lea    rcx,[rsp+0x60]
   140024c50:	call   0x140008f4c
   140024c55:	test   al,al
   140024c57:	jne    0x140024707
   140024c5d:	xor    r14d,r14d
   140024c60:	cmp    DWORD PTR [rsi+0xa658],0x2
   140024c67:	jae    0x140024c85
   140024c69:	test   dil,dil
   140024c6c:	jne    0x140024c85
   140024c6e:	mov    ecx,0xd12
   140024c73:	call   0x140040118
   140024c78:	mov    rcx,rax
   140024c7b:	lea    rdx,[rbp-0x7a]
   140024c7f:	call   0x14001796c
   140024c84:	nop
   140024c85:	lea    rcx,[rsp+0x60]
   140024c8a:	call   0x140007880
   140024c8f:	mov    r8d,0x800
   140024c95:	lea    rdx,[rbp+0x9000]
   140024c9c:	mov    rcx,rsi
   140024c9f:	call   0x140013e48
   140024ca4:	test   al,al
   140024ca6:	jne    0x1400246aa
   140024cac:	mov    r14,QWORD PTR [rsp+0x40]
   140024cb1:	mov    r15,QWORD PTR [rsp+0x48]
   140024cb6:	mov    r12b,BYTE PTR [rsp+0x30]
   140024cbb:	xor    eax,eax
   140024cbd:	cmp    BYTE PTR [rsi+0x5133],al
   140024cc3:	je     0x140024cd1
   140024cc5:	lea    rcx,[rsi+0x5030]
   140024ccc:	call   0x140043640
   140024cd1:	cmp    DWORD PTR [rsp+0x3c],0x1
   140024cd6:	jbe    0x140024d73
   140024cdc:	test   dil,dil
   140024cdf:	jne    0x140024d73
   140024ce5:	test   r13b,r13b
   140024ce8:	jne    0x140024d73
   140024cee:	mov    edi,0x14
   140024cf3:	mov    r8d,edi
   140024cf6:	lea    rdx,[rbp+0x8f40]
   140024cfd:	mov    rcx,r15
   140024d00:	call   0x140045f5c
   140024d05:	mov    r8d,edi
   140024d08:	lea    rdx,[rbp+0x8f68]
   140024d0f:	mov    rcx,r14
   140024d12:	call   0x140045f5c
   140024d17:	test   r12b,r12b
   140024d1a:	je     0x140024d56
   140024d1c:	mov    rdx,r15
   140024d1f:	mov    rcx,r14
   140024d22:	call   0x14004598c
   140024d27:	mov    r9d,eax
   140024d2a:	mov    DWORD PTR [rsp+0x28],ebx
   140024d2e:	lea    rax,[rip+0x49d4f]        # 0x14006ea84
   140024d35:	mov    QWORD PTR [rsp+0x20],rax
   140024d3a:	lea    r8,[rbp+0x8f68]
   140024d41:	lea    rdx,[rbp+0x8f40]
   140024d48:	lea    rcx,[rip+0x49ec9]        # 0x14006ec18
   140024d4f:	call   0x14001796c
   140024d54:	jmp    0x140024d73
   140024d56:	mov    r9d,ebx
   140024d59:	lea    r8,[rip+0x49eec]        # 0x14006ec4c
   140024d60:	lea    rdx,[rbp+0x8f40]
   140024d67:	lea    rcx,[rip+0x49ee2]        # 0x14006ec50
   140024d6e:	call   0x14001796c
   140024d73:	mov    rcx,QWORD PTR [rbp+0xa000]
   140024d7a:	xor    rcx,rsp
   140024d7d:	call   0x140055f90
   140024d82:	lea    r11,[rsp+0xa110]
   140024d8a:	mov    rbx,QWORD PTR [r11+0x38]
   140024d8e:	mov    rsi,QWORD PTR [r11+0x40]
   140024d92:	mov    rdi,QWORD PTR [r11+0x48]
   140024d96:	mov    rsp,r11
   140024d99:	pop    r15
   140024d9b:	pop    r14
   140024d9d:	pop    r13
   140024d9f:	pop    r12
   140024da1:	pop    rbp
   140024da2:	ret    
   140024da3:	int3   
   140024da4:	mov    QWORD PTR [rsp+0x8],rbx
   140024da9:	mov    QWORD PTR [rsp+0x10],rbp
   140024dae:	mov    QWORD PTR [rsp+0x18],rsi
   140024db3:	push   rdi
   140024db4:	push   r12
   140024db6:	push   r13
   140024db8:	push   r14
   140024dba:	push   r15
   140024dbc:	sub    rsp,0x60
   140024dc0:	mov    r13,r9
   140024dc3:	mov    r12,r8
   140024dc6:	mov    r15d,ecx
   140024dc9:	test   edx,edx
   140024dcb:	je     0x140024f4d
   140024dd1:	sub    edx,0x1
   140024dd4:	je     0x140024deb
   140024dd6:	cmp    edx,0x1
   140024dd9:	jne    0x140024fed
   140024ddf:	mov    DWORD PTR [r8],0x3f
   140024de6:	jmp    0x140024fed
   140024deb:	mov    eax,ecx
   140024ded:	mov    r11d,0x2d
   140024df3:	and    eax,0xf000
   140024df8:	cmp    eax,0x4000
   140024dfd:	je     0x140024e13
   140024dff:	cmp    eax,0xa000
   140024e04:	je     0x140024e0c
   140024e06:	mov    WORD PTR [r8],r11w
   140024e0a:	jmp    0x140024e1c
   140024e0c:	mov    eax,0x6c
   140024e11:	jmp    0x140024e18
   140024e13:	mov    eax,0x64
   140024e18:	mov    WORD PTR [r8],ax
   140024e1c:	mov    r8d,ecx
   140024e1f:	mov    r9d,ecx
   140024e22:	and    r9d,0x400
   140024e29:	mov    r10d,ecx
   140024e2c:	and    r10d,0x800
   140024e33:	mov    eax,ecx
   140024e35:	and    eax,0x200
   140024e3a:	mov    ecx,r11d
   140024e3d:	neg    eax
   140024e3f:	sbb    dl,dl
   140024e41:	and    dl,0xfc
   140024e44:	add    dl,0x78
   140024e47:	and    r8b,0x1
   140024e4b:	movzx  eax,dl
   140024e4e:	mov    r8d,r15d
   140024e51:	cmovne ecx,eax
   140024e54:	mov    eax,r15d
   140024e57:	and    al,0x2
   140024e59:	movsx  r14d,cl
   140024e5d:	neg    al
   140024e5f:	mov    eax,r15d
   140024e62:	sbb    ebp,ebp
   140024e64:	and    al,0x4
   140024e66:	and    ebp,0x4a
   140024e69:	add    ebp,r11d
   140024e6c:	neg    al
   140024e6e:	mov    eax,r9d
   140024e71:	sbb    esi,esi
   140024e73:	and    esi,0x45
   140024e76:	add    esi,r11d
   140024e79:	neg    eax
   140024e7b:	sbb    dl,dl
   140024e7d:	and    dl,0xfb
   140024e80:	add    dl,0x78
   140024e83:	neg    r9d
   140024e86:	sbb    al,al
   140024e88:	and    al,0x26
   140024e8a:	add    al,r11b
   140024e8d:	movzx  ecx,al
   140024e90:	and    r8b,0x8
   140024e94:	movzx  eax,dl
   140024e97:	mov    r8d,r15d
   140024e9a:	cmovne ecx,eax
   140024e9d:	mov    eax,r15d
   140024ea0:	and    al,0x10
   140024ea2:	movsx  edi,cl
   140024ea5:	neg    al
   140024ea7:	mov    eax,r15d
   140024eaa:	sbb    ebx,ebx
   140024eac:	and    al,0x20
   140024eae:	and    ebx,0x4a
   140024eb1:	add    ebx,r11d
   140024eb4:	neg    al
   140024eb6:	mov    eax,r10d
   140024eb9:	sbb    r11d,r11d
   140024ebc:	and    r11d,0x45
   140024ec0:	add    r11d,0x2d
   140024ec4:	neg    eax
   140024ec6:	sbb    dl,dl
   140024ec8:	and    dl,0xfb
   140024ecb:	add    dl,0x78
   140024ece:	neg    r10d
   140024ed1:	sbb    al,al
   140024ed3:	and    al,0x26
   140024ed5:	add    al,0x2d
   140024ed7:	and    r8b,0x40
   140024edb:	movzx  ecx,al
   140024ede:	movzx  eax,dl
   140024ee1:	cmovne ecx,eax
   140024ee4:	mov    eax,r15d
   140024ee7:	and    al,0x80
   140024ee9:	movsx  r10d,cl
   140024eed:	neg    al
   140024eef:	sbb    r8d,r8d
   140024ef2:	and    r15d,0x100
   140024ef9:	and    r8d,0x4a
   140024efd:	add    r8d,0x2d
   140024f01:	neg    r15d
   140024f04:	sbb    r9d,r9d
   140024f07:	and    r9d,0x45
   140024f0b:	add    r9d,0x2d
   140024f0f:	mov    DWORD PTR [rsp+0x58],r14d
   140024f14:	lea    rdx,[r13-0x1]
   140024f18:	mov    DWORD PTR [rsp+0x50],ebp
   140024f1c:	lea    rcx,[r12+0x2]
   140024f21:	mov    DWORD PTR [rsp+0x48],esi
   140024f25:	mov    DWORD PTR [rsp+0x40],edi
   140024f29:	mov    DWORD PTR [rsp+0x38],ebx
   140024f2d:	mov    DWORD PTR [rsp+0x30],r11d
   140024f32:	mov    DWORD PTR [rsp+0x28],r10d
   140024f37:	mov    DWORD PTR [rsp+0x20],r8d
   140024f3c:	lea    r8,[rip+0x4a2ed]        # 0x14006f230
   140024f43:	call   0x140006acc
   140024f48:	jmp    0x140024fed
   140024f4d:	mov    eax,ecx
   140024f4f:	mov    edi,0x2e
   140024f54:	and    al,0x1
   140024f56:	neg    al
   140024f58:	mov    eax,ecx
   140024f5a:	sbb    ebx,ebx
   140024f5c:	and    al,0x2
   140024f5e:	and    ebx,0x24
   140024f61:	add    ebx,edi
   140024f63:	neg    al
   140024f65:	mov    DWORD PTR [rsp+0x48],ebx
   140024f69:	mov    eax,ecx
   140024f6b:	sbb    r11d,r11d
   140024f6e:	and    al,0x4
   140024f70:	and    r11d,0x1a
   140024f74:	add    r11d,edi
   140024f77:	neg    al
   140024f79:	mov    DWORD PTR [rsp+0x40],r11d
   140024f7e:	mov    eax,ecx
   140024f80:	sbb    r10d,r10d
   140024f83:	and    al,0x10
   140024f85:	and    r10d,0x25
   140024f89:	add    r10d,edi
   140024f8c:	neg    al
   140024f8e:	mov    DWORD PTR [rsp+0x38],r10d
   140024f93:	mov    eax,ecx
   140024f95:	sbb    r8d,r8d
   140024f98:	and    al,0x20
   140024f9a:	and    r8d,0x16
   140024f9e:	add    r8d,edi
   140024fa1:	neg    al
   140024fa3:	mov    DWORD PTR [rsp+0x30],r8d
   140024fa8:	mov    eax,ecx
   140024faa:	lea    r8,[rip+0x4a25f]        # 0x14006f210
   140024fb1:	sbb    edx,edx
   140024fb3:	and    eax,0x800
   140024fb8:	and    edx,0x13
   140024fbb:	add    edx,edi
   140024fbd:	neg    eax
   140024fbf:	mov    DWORD PTR [rsp+0x28],edx
   140024fc3:	mov    rdx,r13
   140024fc6:	sbb    ecx,ecx
   140024fc8:	and    r15d,0x2000
   140024fcf:	and    ecx,0x15
   140024fd2:	add    ecx,edi
   140024fd4:	neg    r15d
   140024fd7:	mov    DWORD PTR [rsp+0x20],ecx
   140024fdb:	mov    rcx,r12
   140024fde:	sbb    r9d,r9d
   140024fe1:	and    r9d,0x1b
   140024fe5:	add    r9d,edi
   140024fe8:	call   0x140006acc
   140024fed:	lea    r11,[rsp+0x60]
   140024ff2:	mov    rbx,QWORD PTR [r11+0x30]
   140024ff6:	mov    rbp,QWORD PTR [r11+0x38]
   140024ffa:	mov    rsi,QWORD PTR [r11+0x40]
   140024ffe:	mov    rsp,r11
   140025001:	pop    r15
   140025003:	pop    r14
   140025005:	pop    r13
   140025007:	pop    r12
   140025009:	pop    rdi
   14002500a:	ret    
   14002500b:	int3   
   14002500c:	mov    QWORD PTR [rsp+0x20],rbx
   140025011:	push   rbp
   140025012:	push   rsi
   140025013:	push   rdi
   140025014:	push   r12
   140025016:	push   r13
   140025018:	push   r14
   14002501a:	push   r15
   14002501c:	lea    rbp,[rsp-0x2130]
   140025024:	mov    eax,0x2230
   140025029:	call   0x140055f20
   14002502e:	sub    rsp,rax
   140025031:	mov    rax,QWORD PTR [rip+0x5cea8]        # 0x140081ee0
   140025038:	xor    rax,rsp
   14002503b:	mov    QWORD PTR [rbp+0x2120],rax
   140025042:	mov    eax,DWORD PTR [rcx+0x7f88]
   140025048:	lea    r13,[rdx+0x20]
   14002504c:	xor    r12d,r12d
   14002504f:	mov    DWORD PTR [rsp+0x40],eax
   140025053:	mov    dil,r9b
   140025056:	mov    rbx,r8
   140025059:	mov    r15,rdx
   14002505c:	mov    r14,rcx
   14002505f:	cmp    BYTE PTR [rbp+0x2198],r12b
   140025066:	je     0x140025074
   140025068:	lea    rcx,[rip+0x49c69]        # 0x14006ecd8
   14002506f:	jmp    0x1400258e9
   140025074:	mov    sil,BYTE PTR [rbp+0x2190]
   14002507b:	cmp    BYTE PTR [r8],r12b
   14002507e:	jne    0x1400250d4
   140025080:	test   sil,sil
   140025083:	jne    0x1400250d4
   140025085:	test   dil,dil
   140025088:	je     0x1400250ac
   14002508a:	mov    ecx,0xdb8
   14002508f:	call   0x140040118
   140025094:	mov    rdx,rax
   140025097:	lea    rcx,[rip+0x49c42]        # 0x14006ece0
   14002509e:	call   0x14001796c
   1400250a3:	lea    rcx,[rip+0x49c46]        # 0x14006ecf0
   1400250aa:	jmp    0x1400250cc
   1400250ac:	mov    ecx,0xdb6
   1400250b1:	call   0x140040118
   1400250b6:	mov    rdx,rax
   1400250b9:	lea    rcx,[rip+0x49cc0]        # 0x14006ed80
   1400250c0:	call   0x14001796c
   1400250c5:	lea    rcx,[rip+0x49cc4]        # 0x14006ed90
   1400250cc:	call   0x14001796c
   1400250d1:	mov    BYTE PTR [rbx],0x1
   1400250d4:	mov    rcx,QWORD PTR [r15+0x1060]
   1400250db:	movabs rax,0x7fffffff7fffffff
   1400250e5:	mov    ebx,0x1e
   1400250ea:	cmp    rcx,rax
   1400250ed:	jne    0x1400250f8
   1400250ef:	mov    DWORD PTR [rbp-0x30],0x3f
   1400250f6:	jmp    0x140025104
   1400250f8:	mov    r8,rbx
   1400250fb:	lea    rdx,[rbp-0x30]
   1400250ff:	call   0x140045f5c
   140025104:	mov    rcx,QWORD PTR [r15+0x1058]
   14002510b:	lea    rdx,[rbp+0x50]
   14002510f:	mov    r8,rbx
   140025112:	call   0x140045f5c
   140025117:	cmp    DWORD PTR [r15+0x4],0x3
   14002511c:	jne    0x140025147
   14002511e:	mov    al,BYTE PTR [r15+0x1100]
   140025125:	lea    r8,[rip+0x49cc4]        # 0x14006edf0
   14002512c:	neg    al
   14002512e:	lea    rcx,[rbp+0x10]
   140025132:	mov    rdx,rbx
   140025135:	sbb    r9d,r9d
   140025138:	and    r9d,0x1b
   14002513c:	add    r9d,0x2e
   140025140:	call   0x140006acc
   140025145:	jmp    0x14002515e
   140025147:	mov    edx,DWORD PTR [r15+0x1104]
   14002514e:	lea    r8,[rbp+0x10]
   140025152:	mov    ecx,DWORD PTR [r15+0x1c]
   140025156:	mov    r9,rbx
   140025159:	call   0x140024da4
   14002515e:	mov    al,BYTE PTR [r15+0x1098]
   140025165:	test   al,al
   140025167:	je     0x14002518e
   140025169:	cmp    BYTE PTR [r15+0x1099],r12b
   140025170:	je     0x14002517e
   140025172:	movabs rax,0x3e002d003c
   14002517c:	jmp    0x1400251a1
   14002517e:	test   al,al
   140025180:	je     0x14002518e
   140025182:	movabs rax,0x2d002d003c
   14002518c:	jmp    0x1400251a1
   14002518e:	cmp    BYTE PTR [r15+0x1099],r12b
   140025195:	je     0x1400251a8
   140025197:	movabs rax,0x3e002d002d
   1400251a1:	mov    QWORD PTR [rsp+0x48],rax
   1400251a6:	jmp    0x1400251d4
   1400251a8:	mov    rdx,QWORD PTR [r15+0x1060]
   1400251af:	mov    rcx,QWORD PTR [r15+0x1058]
   1400251b6:	call   0x14004598c
   1400251bb:	mov    r9d,eax
   1400251be:	lea    r8,[rip+0x49c4b]        # 0x14006ee10
   1400251c5:	mov    edx,0xa
   1400251ca:	lea    rcx,[rsp+0x48]
   1400251cf:	call   0x140006acc
   1400251d4:	lea    r12,[r15+0x1040]
   1400251db:	mov    r9b,sil
   1400251de:	mov    rcx,r12
   1400251e1:	lea    rdx,[rsp+0x60]
   1400251e6:	mov    r8d,0x32
   1400251ec:	call   0x140047488
   1400251f1:	test   sil,sil
   1400251f4:	je     0x140025835
   1400251fa:	mov    ecx,0xdba
   1400251ff:	call   0x140040118
   140025204:	mov    rdx,rax
   140025207:	lea    rcx,[rip+0x49c1a]        # 0x14006ee28
   14002520e:	mov    r8,r13
   140025211:	call   0x14001796c
   140025216:	cmp    DWORD PTR [r15+0x4],0x2
   14002521b:	sete   al
   14002521e:	xor    edi,edi
   140025220:	test   al,al
   140025222:	jne    0x14002529d
   140025224:	lea    rcx,[r14+0x5868]
   14002522b:	lea    rdx,[rip+0x49c0e]        # 0x14006ee40
   140025232:	call   0x14005d4e8
   140025237:	test   eax,eax
   140025239:	jne    0x140025296
   14002523b:	mov    ecx,0xdcc
   140025240:	call   0x140040118
   140025245:	mov    ecx,0xdbc
   14002524a:	mov    rbx,rax
   14002524d:	call   0x140040118
   140025252:	mov    rdx,rax
   140025255:	lea    rcx,[rip+0x49bec]        # 0x14006ee48
   14002525c:	mov    r8,rbx
   14002525f:	call   0x14001796c
   140025264:	mov    r8d,0x800
   14002526a:	lea    rdx,[rbp+0x120]
   140025271:	mov    rcx,r14
   140025274:	call   0x14001d734
   140025279:	mov    ecx,0xdce
   14002527e:	call   0x140040118
   140025283:	lea    r8,[rbp+0x120]
   14002528a:	lea    rcx,[rip+0x49bcf]        # 0x14006ee60
   140025291:	jmp    0x1400253f0
   140025296:	mov    ecx,0xde6
   14002529b:	jmp    0x1400252b1
   14002529d:	mov    al,BYTE PTR [r15+0x10f1]
   1400252a4:	neg    al
   1400252a6:	sbb    ecx,ecx
   1400252a8:	and    ecx,0x2
   1400252ab:	add    ecx,0xdbe
   1400252b1:	call   0x140040118
   1400252b6:	mov    edx,DWORD PTR [r15+0x1108]
   1400252bd:	mov    rbx,rax
   1400252c0:	test   edx,edx
   1400252c2:	je     0x140025306
   1400252c4:	sub    edx,0x1
   1400252c7:	je     0x1400252f9
   1400252c9:	sub    edx,0x1
   1400252cc:	je     0x1400252f2
   1400252ce:	sub    edx,0x1
   1400252d1:	je     0x1400252eb
   1400252d3:	sub    edx,0x1
   1400252d6:	je     0x1400252e4
   1400252d8:	cmp    edx,0x1
   1400252db:	jne    0x140025306
   1400252dd:	mov    ecx,0xdca
   1400252e2:	jmp    0x1400252fe
   1400252e4:	mov    ecx,0xdc8
   1400252e9:	jmp    0x1400252fe
   1400252eb:	mov    ecx,0xdc6
   1400252f0:	jmp    0x1400252fe
   1400252f2:	mov    ecx,0xdc4
   1400252f7:	jmp    0x1400252fe
   1400252f9:	mov    ecx,0xdc2
   1400252fe:	call   0x140040118
   140025303:	mov    rbx,rax
   140025306:	mov    ecx,0xdbc
   14002530b:	call   0x140040118
   140025310:	mov    rdx,rax
   140025313:	lea    rcx,[rip+0x49b5e]        # 0x14006ee78
   14002531a:	mov    r8,rbx
   14002531d:	call   0x14001796c
   140025322:	cmp    DWORD PTR [r15+0x1108],edi
   140025329:	je     0x1400253f8
   14002532f:	cmp    DWORD PTR [rsp+0x40],0x2
   140025334:	jne    0x1400253d8
   14002533a:	cmp    BYTE PTR [r14+0x458b],dil
   140025341:	je     0x140025360
   140025343:	mov    ebx,0x800
   140025348:	lea    rdx,[rip+0x49acd]        # 0x14006ee1c
   14002534f:	mov    r8d,ebx
   140025352:	lea    rcx,[rbp+0x120]
   140025359:	call   0x140046054
   14002535e:	jmp    0x1400253a8
   140025360:	mov    ebx,0x7ff
   140025365:	cmp    QWORD PTR [r15+0x1058],rbx
   14002536c:	jae    0x140025375
   14002536e:	mov    ebx,DWORD PTR [r15+0x1058]
   140025375:	mov    rax,QWORD PTR [r14]
   140025378:	lea    rdx,[rbp+0x120]
   14002537f:	movsxd r8,ebx
   140025382:	mov    rcx,r14
   140025385:	call   QWORD PTR [rax+0x10]
   140025388:	test   ebx,ebx
   14002538a:	mov    eax,edi
   14002538c:	cmovg  eax,ebx
   14002538f:	mov    ebx,0x800
   140025394:	movsxd rcx,eax
   140025397:	cmp    rcx,rbx
   14002539a:	jae    0x14002591b
   1400253a0:	mov    BYTE PTR [rbp+rcx*1+0x120],dil
   1400253a8:	mov    r8,rbx
   1400253ab:	lea    rdx,[rbp+0x1120]
   1400253b2:	lea    rcx,[rbp+0x120]
   1400253b9:	call   0x1400489f0
   1400253be:	mov    ecx,0xdce
   1400253c3:	call   0x140040118
   1400253c8:	lea    r8,[rbp+0x1120]
   1400253cf:	lea    rcx,[rip+0x49aba]        # 0x14006ee90
   1400253d6:	jmp    0x1400253f0
   1400253d8:	mov    ecx,0xdce
   1400253dd:	call   0x140040118
   1400253e2:	lea    r8,[r15+0x110c]
   1400253e9:	lea    rcx,[rip+0x49ab8]        # 0x14006eea8
   1400253f0:	mov    rdx,rax
   1400253f3:	call   0x14001796c
   1400253f8:	cmp    BYTE PTR [r15+0x10f1],dil
   1400253ff:	jne    0x140025459
   140025401:	mov    ecx,0xdd0
   140025406:	call   0x140040118
   14002540b:	mov    rdx,rax
   14002540e:	lea    r8,[rbp-0x30]
   140025412:	lea    rcx,[rip+0x49aa7]        # 0x14006eec0
   140025419:	call   0x14001796c
   14002541e:	mov    ecx,0xdd2
   140025423:	call   0x140040118
   140025428:	mov    rdx,rax
   14002542b:	lea    r8,[rbp+0x50]
   14002542f:	lea    rcx,[rip+0x49aa2]        # 0x14006eed8
   140025436:	call   0x14001796c
   14002543b:	mov    ecx,0xdd4
   140025440:	call   0x140040118
   140025445:	mov    rdx,rax
   140025448:	lea    r8,[rsp+0x48]
   14002544d:	lea    rcx,[rip+0x49a9c]        # 0x14006eef0
   140025454:	call   0x14001796c
   140025459:	cmp    QWORD PTR [r12],rdi
   14002545d:	je     0x14002547d
   14002545f:	mov    ecx,0xdd6
   140025464:	call   0x140040118
   140025469:	mov    rdx,rax
   14002546c:	lea    r8,[rsp+0x60]
   140025471:	lea    rcx,[rip+0x49a90]        # 0x14006ef08
   140025478:	call   0x14001796c
   14002547d:	lea    rcx,[r15+0x1048]
   140025484:	cmp    QWORD PTR [rcx],rdi
   140025487:	je     0x1400254ba
   140025489:	mov    r9b,0x1
   14002548c:	lea    rdx,[rsp+0x60]
   140025491:	mov    r8d,0x32
   140025497:	call   0x140047488
   14002549c:	mov    ecx,0xdd8
   1400254a1:	call   0x140040118
   1400254a6:	mov    rdx,rax
   1400254a9:	lea    r8,[rsp+0x60]
   1400254ae:	lea    rcx,[rip+0x49a6b]        # 0x14006ef20
   1400254b5:	call   0x14001796c
   1400254ba:	lea    rcx,[r15+0x1050]
   1400254c1:	cmp    QWORD PTR [rcx],rdi
   1400254c4:	je     0x1400254f7
   1400254c6:	mov    r9b,0x1
   1400254c9:	lea    rdx,[rsp+0x60]
   1400254ce:	mov    r8d,0x32
   1400254d4:	call   0x140047488
   1400254d9:	mov    ecx,0xdda
   1400254de:	call   0x140040118
   1400254e3:	mov    rdx,rax
   1400254e6:	lea    r8,[rsp+0x60]
   1400254eb:	lea    rcx,[rip+0x49a46]        # 0x14006ef38
   1400254f2:	call   0x14001796c
   1400254f7:	mov    ecx,0xddc
   1400254fc:	call   0x140040118
   140025501:	mov    rdx,rax
   140025504:	lea    r8,[rbp+0x10]
   140025508:	lea    rcx,[rip+0x49a41]        # 0x14006ef50
   14002550f:	call   0x14001796c
   140025514:	cmp    DWORD PTR [r15+0x1070],0x2
   14002551c:	jne    0x14002555c
   14002551e:	cmp    BYTE PTR [r15+0x10ca],dil
   140025525:	je     0x140025530
   140025527:	lea    rdx,[rip+0x49a3a]        # 0x14006ef68
   14002552e:	jmp    0x140025549
   140025530:	cmp    BYTE PTR [r15+0x1099],dil
   140025537:	lea    rax,[rip+0x49a42]        # 0x14006ef80
   14002553e:	lea    rdx,[rip+0x49a53]        # 0x14006ef98
   140025545:	cmovne rdx,rax
   140025549:	mov    r8d,DWORD PTR [r15+0x1074]
   140025550:	lea    rcx,[rip+0x49a51]        # 0x14006efa8
   140025557:	call   0x14001796c
   14002555c:	cmp    DWORD PTR [r15+0x1070],0x3
   140025564:	jne    0x1400255c7
   140025566:	xor    r8d,r8d
   140025569:	mov    QWORD PTR [rsp+0x20],0x41
   140025572:	lea    rcx,[r15+0x1074]
   140025579:	lea    r9,[rbp+0x90]
   140025580:	lea    edx,[r8+0x20]
   140025584:	call   0x140045a2c
   140025589:	cmp    BYTE PTR [r15+0x10ca],dil
   140025590:	je     0x14002559b
   140025592:	lea    rdx,[rip+0x49a2f]        # 0x14006efc8
   140025599:	jmp    0x1400255b4
   14002559b:	cmp    BYTE PTR [r15+0x1099],dil
   1400255a2:	lea    rax,[rip+0x49a37]        # 0x14006efe0
   1400255a9:	lea    rdx,[rip+0x49a48]        # 0x14006eff8
   1400255b0:	cmovne rdx,rax
   1400255b4:	lea    r8,[rbp+0x90]
   1400255bb:	lea    rcx,[rip+0x49a46]        # 0x14006f008
   1400255c2:	call   0x14001796c
   1400255c7:	mov    ecx,DWORD PTR [rsp+0x40]
   1400255cb:	lea    rbx,[rip+0x49852]        # 0x14006ee24
   1400255d2:	cmp    ecx,0x3
   1400255d5:	jne    0x1400255f7
   1400255d7:	mov    eax,DWORD PTR [r15+0x1104]
   1400255de:	cmp    eax,0x2
   1400255e1:	je     0x140025638
   1400255e3:	test   eax,eax
   1400255e5:	lea    rdx,[rip+0x49a34]        # 0x14006f020
   1400255ec:	lea    rbx,[rip+0x49a3d]        # 0x14006f030
   1400255f3:	cmove  rbx,rdx
   1400255f7:	cmp    ecx,0x2
   1400255fa:	jne    0x140025613
   1400255fc:	cmp    BYTE PTR [r15+0x18],0xa
   140025601:	jae    0x140025613
   140025603:	movzx  eax,BYTE PTR [r15+0x18]
   140025608:	lea    rbx,[rip+0x5bef1]        # 0x140081500
   14002560f:	mov    rbx,QWORD PTR [rbx+rax*8]
   140025613:	cmp    WORD PTR [rbx],di
   140025616:	je     0x140025638
   140025618:	mov    ecx,0xde2
   14002561d:	call   0x140040118
   140025622:	mov    rdx,rax
   140025625:	lea    rcx,[rip+0x49a14]        # 0x14006f040
   14002562c:	mov    r8,rbx
   14002562f:	call   0x14001796c
   140025634:	mov    ecx,DWORD PTR [rsp+0x40]
   140025638:	mov    rax,QWORD PTR [r15+0x10f8]
   14002563f:	mov    r8d,0x100000
   140025645:	mov    r12,rax
   140025648:	cmp    rax,r8
   14002564b:	jb     0x140025653
   14002564d:	shr    r12,0x14
   140025651:	jmp    0x140025657
   140025653:	shr    r12,0xa
   140025657:	movzx  edi,BYTE PTR [r15+0x1a]
   14002565c:	lea    rdx,[rip+0x497d9]        # 0x14006ee3c
   140025663:	movzx  esi,BYTE PTR [r15+0x19]
   140025668:	lea    r14,[rip+0x4990d]        # 0x14006ef7c
   14002566f:	cmp    rax,r8
   140025672:	lea    rbx,[rip+0x499e7]        # 0x14006f060
   140025679:	lea    rax,[rip+0x499d8]        # 0x14006f058
   140025680:	cmovae r14,rdx
   140025684:	cmp    ecx,0x2
   140025687:	mov    ecx,0xde0
   14002568c:	cmove  rbx,rax
   140025690:	call   0x140040118
   140025695:	mov    QWORD PTR [rsp+0x30],r14
   14002569a:	lea    rcx,[rip+0x499df]        # 0x14006f080
   1400256a1:	mov    rdx,rax
   1400256a4:	mov    QWORD PTR [rsp+0x28],r12
   1400256a9:	mov    r9d,esi
   1400256ac:	mov    DWORD PTR [rsp+0x20],edi
   1400256b0:	mov    r8,rbx
   1400256b3:	call   0x14001796c
   1400256b8:	xor    esi,esi
   1400256ba:	cmp    BYTE PTR [r15+0x10f0],sil
   1400256c1:	jne    0x1400256cc
   1400256c3:	cmp    BYTE PTR [r15+0x109b],sil
   1400256ca:	je     0x140025729
   1400256cc:	mov    ecx,0xdde
   1400256d1:	call   0x140040118
   1400256d6:	mov    rdx,rax
   1400256d9:	lea    rcx,[rip+0x49988]        # 0x14006f068
   1400256e0:	call   0x14001796c
   1400256e5:	cmp    BYTE PTR [r15+0x10f0],sil
   1400256ec:	je     0x140025707
   1400256ee:	mov    ecx,0xda8
   1400256f3:	call   0x140040118
   1400256f8:	mov    rdx,rax
   1400256fb:	lea    rcx,[rip+0x499c6]        # 0x14006f0c8
   140025702:	call   0x14001796c
   140025707:	cmp    BYTE PTR [r15+0x109b],sil
   14002570e:	je     0x140025729
   140025710:	mov    ecx,0xdb2
   140025715:	call   0x140040118
   14002571a:	mov    rdx,rax
   14002571d:	lea    rcx,[rip+0x499b4]        # 0x14006f0d8
   140025724:	call   0x14001796c
   140025729:	cmp    BYTE PTR [r15+0x10f3],sil
   140025730:	je     0x14002575e
   140025732:	xor    edx,edx
   140025734:	mov    rcx,r13
   140025737:	call   0x140032740
   14002573c:	mov    ebx,eax
   14002573e:	test   eax,eax
   140025740:	je     0x14002575e
   140025742:	mov    ecx,0xde4
   140025747:	call   0x140040118
   14002574c:	mov    rdx,rax
   14002574f:	lea    rcx,[rip+0x49992]        # 0x14006f0e8
   140025756:	mov    r8d,ebx
   140025759:	call   0x14001796c
   14002575e:	cmp    BYTE PTR [r15+0x210d],sil
   140025765:	je     0x140025824
   14002576b:	lea    rdx,[rip+0x4998e]        # 0x14006f100
   140025772:	lea    rcx,[rip+0x4999f]        # 0x14006f118
   140025779:	call   0x14001796c
   14002577e:	lea    rdi,[r15+0x2110]
   140025785:	cmp    BYTE PTR [rdi],sil
   140025788:	je     0x1400257a1
   14002578a:	mov    rcx,rdi
   14002578d:	call   0x140045bf4
   140025792:	mov    rdx,rax
   140025795:	lea    rcx,[rip+0x49994]        # 0x14006f130
   14002579c:	call   0x14001796c
   1400257a1:	lea    rbx,[r15+0x2210]
   1400257a8:	cmp    BYTE PTR [rbx],sil
   1400257ab:	je     0x1400257c4
   1400257ad:	mov    rcx,rbx
   1400257b0:	call   0x140045bf4
   1400257b5:	mov    rdx,rax
   1400257b8:	lea    rcx,[rip+0x49981]        # 0x14006f140
   1400257bf:	call   0x14001796c
   1400257c4:	cmp    BYTE PTR [rdi],sil
   1400257c7:	jne    0x1400257ce
   1400257c9:	cmp    BYTE PTR [rbx],sil
   1400257cc:	je     0x1400257ec
   1400257ce:	cmp    BYTE PTR [r15+0x210e],sil
   1400257d5:	jne    0x1400257e0
   1400257d7:	cmp    BYTE PTR [r15+0x210f],sil
   1400257de:	je     0x1400257ec
   1400257e0:	lea    rcx,[rip+0x49961]        # 0x14006f148
   1400257e7:	call   0x14001796c
   1400257ec:	cmp    BYTE PTR [r15+0x210e],sil
   1400257f3:	je     0x140025808
   1400257f5:	mov    edx,DWORD PTR [r15+0x2310]
   1400257fc:	lea    rcx,[rip+0x4994d]        # 0x14006f150
   140025803:	call   0x14001796c
   140025808:	cmp    BYTE PTR [r15+0x210f],sil
   14002580f:	je     0x140025824
   140025811:	mov    edx,DWORD PTR [r15+0x2314]
   140025818:	lea    rcx,[rip+0x49941]        # 0x14006f160
   14002581f:	call   0x14001796c
   140025824:	lea    rcx,[rip+0x49779]        # 0x14006efa4
   14002582b:	call   0x14001796c
   140025830:	jmp    0x1400258f1
   140025835:	mov    al,BYTE PTR [r15+0x109b]
   14002583c:	lea    r9,[rbp-0x30]
   140025840:	neg    al
   140025842:	lea    r8,[rbp+0x10]
   140025846:	lea    rcx,[rip+0x49923]        # 0x14006f170
   14002584d:	sbb    edx,edx
   14002584f:	and    edx,0xa
   140025852:	add    edx,0x20
   140025855:	call   0x14001796c
   14002585a:	test   dil,dil
   14002585d:	je     0x140025874
   14002585f:	lea    r8,[rsp+0x48]
   140025864:	lea    rdx,[rbp+0x50]
   140025868:	lea    rcx,[rip+0x49921]        # 0x14006f190
   14002586f:	call   0x14001796c
   140025874:	lea    rdx,[rsp+0x60]
   140025879:	lea    rcx,[rip+0x49928]        # 0x14006f1a8
   140025880:	call   0x14001796c
   140025885:	test   dil,dil
   140025888:	je     0x1400258e2
   14002588a:	mov    eax,DWORD PTR [r15+0x1070]
   140025891:	cmp    eax,0x2
   140025894:	jne    0x1400258ab
   140025896:	mov    edx,DWORD PTR [r15+0x1074]
   14002589d:	lea    rcx,[rip+0x49914]        # 0x14006f1b8
   1400258a4:	call   0x14001796c
   1400258a9:	jmp    0x1400258e2
   1400258ab:	cmp    eax,0x3
   1400258ae:	jne    0x1400258d6
   1400258b0:	movzx  r9d,BYTE PTR [r15+0x1093]
   1400258b8:	lea    rcx,[rip+0x49909]        # 0x14006f1c8
   1400258bf:	movzx  r8d,BYTE PTR [r15+0x1075]
   1400258c7:	movzx  edx,BYTE PTR [r15+0x1074]
   1400258cf:	call   0x14001796c
   1400258d4:	jmp    0x1400258e2
   1400258d6:	lea    rcx,[rip+0x49913]        # 0x14006f1f0
   1400258dd:	call   0x14001796c
   1400258e2:	lea    rcx,[rip+0x4991f]        # 0x14006f208
   1400258e9:	mov    rdx,r13
   1400258ec:	call   0x14001796c
   1400258f1:	mov    rcx,QWORD PTR [rbp+0x2120]
   1400258f8:	xor    rcx,rsp
   1400258fb:	call   0x140055f90
   140025900:	mov    rbx,QWORD PTR [rsp+0x2288]
   140025908:	add    rsp,0x2230
   14002590f:	pop    r15
   140025911:	pop    r14
   140025913:	pop    r13
   140025915:	pop    r12
   140025917:	pop    rdi
   140025918:	pop    rsi
   140025919:	pop    rbp
   14002591a:	ret    
   14002591b:	call   0x1400560e8
   140025920:	int3   
   140025921:	int3   
   140025922:	int3   
   140025923:	int3   
   140025924:	mov    QWORD PTR [rsp+0x8],rbx
   140025929:	mov    QWORD PTR [rsp+0x10],rsi
   14002592e:	push   rdi
   14002592f:	sub    rsp,0x20
   140025933:	add    QWORD PTR [rcx+0x8],rdx
   140025937:	mov    rbx,rcx
   14002593a:	mov    rax,QWORD PTR [rcx+0x8]
   14002593e:	cmp    rax,QWORD PTR [rcx+0x10]
   140025942:	jbe    0x1400259b6
   140025944:	mov    r8,QWORD PTR [rcx+0x18]
   140025948:	test   r8,r8
   14002594b:	je     0x140025971
   14002594d:	cmp    rax,r8
   140025950:	jbe    0x140025971
   140025952:	lea    rdx,[rip+0x49957]        # 0x14006f2b0
   140025959:	lea    rcx,[rip+0x6ef00]        # 0x140094860
   140025960:	call   0x14001bc8c
   140025965:	lea    rcx,[rip+0x6eef4]        # 0x140094860
   14002596c:	call   0x14001bd24
   140025971:	mov    rdx,QWORD PTR [rbx+0x10]
   140025975:	mov    rcx,QWORD PTR [rbx]
   140025978:	mov    rax,rdx
   14002597b:	shr    rax,0x2
   14002597f:	lea    rdi,[rdx+0x20]
   140025983:	add    rdi,rax
   140025986:	cmp    QWORD PTR [rbx+0x8],rdi
   14002598a:	cmova  rdi,QWORD PTR [rbx+0x8]
   14002598f:	imul   rdx,rdi,0x1018
   140025996:	call   0x14005a940
   14002599b:	mov    rsi,rax
   14002599e:	test   rax,rax
   1400259a1:	jne    0x1400259af
   1400259a3:	lea    rcx,[rip+0x6eeb6]        # 0x140094860
   1400259aa:	call   0x14001bd24
   1400259af:	mov    QWORD PTR [rbx],rsi
   1400259b2:	mov    QWORD PTR [rbx+0x10],rdi
   1400259b6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400259bb:	mov    rsi,QWORD PTR [rsp+0x38]
   1400259c0:	add    rsp,0x20
   1400259c4:	pop    rdi
   1400259c5:	ret    
   1400259c6:	int3   
   1400259c7:	int3   
   1400259c8:	test   r8,r8
   1400259cb:	je     0x140025c5a
   1400259d1:	push   rbp
   1400259d2:	push   rsi
   1400259d3:	push   rdi
   1400259d4:	push   r12
   1400259d6:	push   r13
   1400259d8:	push   r14
   1400259da:	push   r15
   1400259dc:	mov    eax,0x1050
   1400259e1:	call   0x140055f20
   1400259e6:	sub    rsp,rax
   1400259e9:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   1400259f2:	mov    QWORD PTR [rsp+0x1098],rbx
   1400259fa:	mov    rax,QWORD PTR [rip+0x5c4df]        # 0x140081ee0
   140025a01:	xor    rax,rsp
   140025a04:	mov    QWORD PTR [rsp+0x1040],rax
   140025a0c:	mov    r12,r8
   140025a0f:	mov    DWORD PTR [rsp+0x20],edx
   140025a13:	mov    r15,rcx
   140025a16:	xor    r14d,r14d
   140025a19:	mov    r13d,r14d
   140025a1c:	mov    rax,QWORD PTR [rcx+0x8]
   140025a20:	test   rax,rax
   140025a23:	je     0x140025c30
   140025a29:	mov    ebx,r14d
   140025a2c:	mov    rdi,QWORD PTR [r15]
   140025a2f:	cmp    DWORD PTR [rbx+rdi*1],edx
   140025a32:	jne    0x140025c19
   140025a38:	cmp    QWORD PTR [rbx+rdi*1+0x1008],r14
   140025a40:	jne    0x140025b5d
   140025a46:	mov    rbp,r14
   140025a49:	test   rax,rax
   140025a4c:	je     0x140025aa5
   140025a4e:	mov    rsi,r14
   140025a51:	mov    r14,QWORD PTR [r15]
   140025a54:	cmp    r13,rbp
   140025a57:	je     0x140025a7b
   140025a59:	cmp    QWORD PTR [rsi+r14*1+0x1008],0x0
   140025a62:	je     0x140025a7b
   140025a64:	lea    rdx,[rdi+0x8]
   140025a68:	add    rdx,rbx
   140025a6b:	lea    rcx,[r14+0x8]
   140025a6f:	add    rcx,rsi
   140025a72:	call   0x140048f34
   140025a77:	test   eax,eax
   140025a79:	je     0x140025a8d
   140025a7b:	inc    rbp
   140025a7e:	add    rsi,0x1018
   140025a85:	cmp    rbp,QWORD PTR [r15+0x8]
   140025a89:	jae    0x140025aa2
   140025a8b:	jmp    0x140025a51
   140025a8d:	mov    rax,QWORD PTR [rsi+r14*1+0x1008]
   140025a95:	mov    QWORD PTR [rbx+rdi*1+0x1008],rax
   140025a9d:	or     DWORD PTR [rbx+rdi*1+0x4],0x4
   140025aa2:	xor    r14d,r14d
   140025aa5:	cmp    QWORD PTR [rbx+rdi*1+0x1008],r14
   140025aad:	jne    0x140025b5d
   140025ab3:	mov    ecx,0x1030
   140025ab8:	call   0x140055dac
   140025abd:	mov    QWORD PTR [rsp+0x30],rax
   140025ac2:	test   rax,rax
   140025ac5:	je     0x140025ad1
   140025ac7:	mov    rcx,rax
   140025aca:	call   0x14002071c
   140025acf:	jmp    0x140025ad4
   140025ad1:	mov    rax,r14
   140025ad4:	mov    QWORD PTR [rbx+rdi*1+0x1008],rax
   140025adc:	test   BYTE PTR [rbx+rdi*1+0x4],0x1
   140025ae1:	je     0x140025b3b
   140025ae3:	lea    rsi,[rdi+0x8]
   140025ae7:	add    rsi,rbx
   140025aea:	mov    rcx,rsi
   140025aed:	call   0x140021dec
   140025af2:	test   al,al
   140025af4:	je     0x140025b3b
   140025af6:	mov    rcx,QWORD PTR [rbx+rdi*1+0x1008]
   140025afe:	mov    rax,QWORD PTR [rcx]
   140025b01:	mov    r8d,0x1
   140025b07:	mov    rdx,rsi
   140025b0a:	call   QWORD PTR [rax+0x8]
   140025b0d:	test   al,al
   140025b0f:	jne    0x140025b25
   140025b11:	mov    rdx,rsi
   140025b14:	lea    rcx,[rip+0x6ed45]        # 0x140094860
   140025b1b:	call   0x14001bdf8
   140025b20:	jmp    0x140025c15
   140025b25:	mov    rcx,QWORD PTR [rbx+rdi*1+0x1008]
   140025b2d:	mov    rax,QWORD PTR [rcx]
   140025b30:	xor    edx,edx
   140025b32:	lea    r8d,[rdx+0x2]
   140025b36:	call   QWORD PTR [rax+0x18]
   140025b39:	jmp    0x140025b5d
   140025b3b:	lea    rdx,[rdi+0x8]
   140025b3f:	add    rdx,rbx
   140025b42:	mov    r8d,0x11
   140025b48:	mov    rcx,QWORD PTR [rbx+rdi*1+0x1008]
   140025b50:	call   0x140021248
   140025b55:	test   al,al
   140025b57:	je     0x140025c15
   140025b5d:	test   BYTE PTR [rbx+rdi*1+0x4],0x2
   140025b62:	je     0x140025bc4
   140025b64:	or     rax,0xffffffffffffffff
   140025b68:	inc    rax
   140025b6b:	cmp    WORD PTR [r12+rax*2],r14w
   140025b70:	jne    0x140025b68
   140025b72:	cmp    rax,0x800
   140025b78:	jae    0x140025b8a
   140025b7a:	or     rsi,0xffffffffffffffff
   140025b7e:	inc    rsi
   140025b81:	cmp    WORD PTR [r12+rsi*2],r14w
   140025b86:	jne    0x140025b7e
   140025b88:	jmp    0x140025b8f
   140025b8a:	mov    esi,0x800
   140025b8f:	mov    r8,rsi
   140025b92:	lea    rdx,[rsp+0x40]
   140025b97:	mov    rcx,r12
   140025b9a:	call   0x140048cfc
   140025b9f:	lea    r8,[rsi+rsi*1]
   140025ba3:	lea    rdx,[rsp+0x40]
   140025ba8:	mov    rcx,QWORD PTR [rbx+rdi*1+0x1008]
   140025bb0:	call   0x1400212ac
   140025bb5:	mov    r8d,0x4
   140025bbb:	lea    rdx,[rip+0x496d6]        # 0x14006f298
   140025bc2:	jmp    0x140025c08
   140025bc4:	mov    r8d,0x800
   140025bca:	lea    rdx,[rsp+0x40]
   140025bcf:	mov    rcx,r12
   140025bd2:	call   0x140048ca8
   140025bd7:	lea    rax,[rsp+0x40]
   140025bdc:	or     r8,0xffffffffffffffff
   140025be0:	inc    r8
   140025be3:	cmp    BYTE PTR [rax+r8*1],r14b
   140025be7:	jne    0x140025be0
   140025be9:	lea    rdx,[rsp+0x40]
   140025bee:	mov    rcx,QWORD PTR [rbx+rdi*1+0x1008]
   140025bf6:	call   0x1400212ac
   140025bfb:	mov    r8d,0x2
   140025c01:	lea    rdx,[rip+0x49698]        # 0x14006f2a0
   140025c08:	mov    rcx,QWORD PTR [rbx+rdi*1+0x1008]
   140025c10:	call   0x1400212ac
   140025c15:	mov    edx,DWORD PTR [rsp+0x20]
   140025c19:	inc    r13
   140025c1c:	add    rbx,0x1018
   140025c23:	mov    rax,QWORD PTR [r15+0x8]
   140025c27:	cmp    r13,rax
   140025c2a:	jb     0x140025a2c
   140025c30:	mov    rcx,QWORD PTR [rsp+0x1040]
   140025c38:	xor    rcx,rsp
   140025c3b:	call   0x140055f90
   140025c40:	mov    rbx,QWORD PTR [rsp+0x1098]
   140025c48:	add    rsp,0x1050
   140025c4f:	pop    r15
   140025c51:	pop    r14
   140025c53:	pop    r13
   140025c55:	pop    r12
   140025c57:	pop    rdi
   140025c58:	pop    rsi
   140025c59:	pop    rbp
   140025c5a:	ret    
   140025c5b:	int3   
   140025c5c:	mov    QWORD PTR [rsp+0x8],rbx
   140025c61:	mov    QWORD PTR [rsp+0x10],rbp
   140025c66:	mov    QWORD PTR [rsp+0x18],rsi
   140025c6b:	push   rdi
   140025c6c:	sub    rsp,0x20
   140025c70:	xor    esi,esi
   140025c72:	mov    rbx,rcx
   140025c75:	cmp    QWORD PTR [rcx+0x8],rsi
   140025c79:	jbe    0x140025cc0
   140025c7b:	xor    edi,edi
   140025c7d:	mov    rbp,QWORD PTR [rbx]
   140025c80:	mov    rcx,QWORD PTR [rdi+rbp*1+0x1008]
   140025c88:	test   rcx,rcx
   140025c8b:	je     0x140025cb0
   140025c8d:	test   BYTE PTR [rdi+rbp*1+0x4],0x4
   140025c92:	jne    0x140025cb0
   140025c94:	call   0x1400207cc
   140025c99:	mov    rcx,QWORD PTR [rdi+rbp*1+0x1008]
   140025ca1:	test   rcx,rcx
   140025ca4:	je     0x140025cb0
   140025ca6:	mov    rax,QWORD PTR [rcx]
   140025ca9:	mov    edx,0x1
   140025cae:	call   QWORD PTR [rax]
   140025cb0:	inc    rsi
   140025cb3:	add    rdi,0x1018
   140025cba:	cmp    rsi,QWORD PTR [rbx+0x8]
   140025cbe:	jb     0x140025c7d
   140025cc0:	mov    rcx,rbx
   140025cc3:	mov    rbx,QWORD PTR [rsp+0x30]
   140025cc8:	mov    rbp,QWORD PTR [rsp+0x38]
   140025ccd:	mov    rsi,QWORD PTR [rsp+0x40]
   140025cd2:	add    rsp,0x20
   140025cd6:	pop    rdi
   140025cd7:	jmp    0x140009a60
   140025cdc:	mov    QWORD PTR [rsp+0x18],rbx
   140025ce1:	mov    QWORD PTR [rsp+0x20],rsi
   140025ce6:	push   rbp
   140025ce7:	push   rdi
   140025ce8:	push   r14
   140025cea:	lea    rbp,[rsp-0x1f70]
   140025cf2:	mov    eax,0x2070
   140025cf7:	call   0x140055f20
   140025cfc:	sub    rsp,rax
   140025cff:	mov    rax,QWORD PTR [rip+0x5c1da]        # 0x140081ee0
   140025d06:	xor    rax,rsp
   140025d09:	mov    QWORD PTR [rbp+0x1f60],rax
   140025d10:	mov    rdi,rdx
   140025d13:	mov    rbx,rcx
   140025d16:	xor    edx,edx
   140025d18:	lea    rcx,[rbp+0xf40]
   140025d1f:	mov    r8d,0x1018
   140025d25:	call   0x140058f40
   140025d2a:	movups xmm0,XMMWORD PTR [rip+0x4954f]        # 0x14006f280
   140025d31:	movzx  eax,WORD PTR [rdi]
   140025d34:	xor    esi,esi
   140025d36:	movsd  xmm1,QWORD PTR [rip+0x49552]        # 0x14006f290
   140025d3e:	mov    DWORD PTR [rbp+0xf40],esi
   140025d44:	movsd  QWORD PTR [rbp+0xf58],xmm1
   140025d4c:	movups XMMWORD PTR [rbp+0xf48],xmm0
   140025d53:	test   ax,ax
   140025d56:	je     0x140025dcf
   140025d58:	lea    r14d,[rsi+0x3d]
   140025d5c:	movzx  ecx,ax
   140025d5f:	call   0x140048f28
   140025d64:	cmp    eax,r14d
   140025d67:	je     0x140025da7
   140025d69:	cmp    eax,0x41
   140025d6c:	je     0x140025d9f
   140025d6e:	cmp    eax,0x46
   140025d71:	je     0x140025d93
   140025d73:	cmp    eax,0x50
   140025d76:	je     0x140025d8a
   140025d78:	cmp    eax,0x55
   140025d7b:	jne    0x140025e18
   140025d81:	or     DWORD PTR [rbp+0xf44],0x2
   140025d88:	jmp    0x140025dbd
   140025d8a:	or     DWORD PTR [rbp+0xf44],0x1
   140025d91:	jmp    0x140025dbd
   140025d93:	mov    DWORD PTR [rbp+0xf40],0x1
   140025d9d:	jmp    0x140025dbd
   140025d9f:	mov    DWORD PTR [rbp+0xf40],esi
   140025da5:	jmp    0x140025dbd
   140025da7:	lea    rdx,[rdi+0x2]
   140025dab:	mov    r8d,0x800
   140025db1:	lea    rcx,[rbp+0xf48]
   140025db8:	call   0x140046158
   140025dbd:	cmp    WORD PTR [rdi],r14w
   140025dc1:	je     0x140025dcf
   140025dc3:	add    rdi,0x2
   140025dc7:	movzx  eax,WORD PTR [rdi]
   140025dca:	test   ax,ax
   140025dcd:	jne    0x140025d5c
   140025dcf:	lea    rdi,[rsp+0x20]
   140025dd4:	mov    ecx,0x1018
   140025dd9:	lea    rsi,[rbp+0xf40]
   140025de0:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140025de2:	mov    rcx,rbx
   140025de5:	lea    rdx,[rsp+0x20]
   140025dea:	call   0x140025e1c
   140025def:	mov    al,0x1
   140025df1:	mov    rcx,QWORD PTR [rbp+0x1f60]
   140025df8:	xor    rcx,rsp
   140025dfb:	call   0x140055f90
   140025e00:	lea    r11,[rsp+0x2070]
   140025e08:	mov    rbx,QWORD PTR [r11+0x30]
   140025e0c:	mov    rsi,QWORD PTR [r11+0x38]
   140025e10:	mov    rsp,r11
   140025e13:	pop    r14
   140025e15:	pop    rdi
   140025e16:	pop    rbp
   140025e17:	ret    
   140025e18:	xor    al,al
   140025e1a:	jmp    0x140025df1
   140025e1c:	mov    QWORD PTR [rsp+0x8],rbx
   140025e21:	push   rdi
   140025e22:	sub    rsp,0x20
   140025e26:	mov    rdi,rdx
   140025e29:	mov    rbx,rcx
   140025e2c:	mov    edx,0x1
   140025e31:	call   0x140025924
   140025e36:	imul   r8,QWORD PTR [rbx+0x8],0x1018
   140025e3e:	mov    rcx,QWORD PTR [rbx]
   140025e41:	mov    eax,0x20
   140025e46:	add    rcx,0xffffffffffffefe8
   140025e4d:	add    rcx,r8
   140025e50:	lea    edx,[rax+0x60]
   140025e53:	movups xmm0,XMMWORD PTR [rdi]
   140025e56:	movups XMMWORD PTR [rcx],xmm0
   140025e59:	movups xmm1,XMMWORD PTR [rdi+0x10]
   140025e5d:	movups XMMWORD PTR [rcx+0x10],xmm1
   140025e61:	movups xmm0,XMMWORD PTR [rdi+0x20]
   140025e65:	movups XMMWORD PTR [rcx+0x20],xmm0
   140025e69:	movups xmm1,XMMWORD PTR [rdi+0x30]
   140025e6d:	movups XMMWORD PTR [rcx+0x30],xmm1
   140025e71:	movups xmm0,XMMWORD PTR [rdi+0x40]
   140025e75:	movups XMMWORD PTR [rcx+0x40],xmm0
   140025e79:	movups xmm1,XMMWORD PTR [rdi+0x50]
   140025e7d:	movups XMMWORD PTR [rcx+0x50],xmm1
   140025e81:	movups xmm0,XMMWORD PTR [rdi+0x60]
   140025e85:	movups XMMWORD PTR [rcx+0x60],xmm0
   140025e89:	add    rcx,rdx
   140025e8c:	movups xmm1,XMMWORD PTR [rdi+0x70]
   140025e90:	add    rdi,rdx
   140025e93:	movups XMMWORD PTR [rcx-0x10],xmm1
   140025e97:	sub    rax,0x1
   140025e9b:	jne    0x140025e53
   140025e9d:	movups xmm0,XMMWORD PTR [rdi]
   140025ea0:	mov    rbx,QWORD PTR [rsp+0x30]
   140025ea5:	movups XMMWORD PTR [rcx],xmm0
   140025ea8:	mov    rax,QWORD PTR [rdi+0x10]
   140025eac:	mov    QWORD PTR [rcx+0x10],rax
   140025eb0:	add    rsp,0x20
   140025eb4:	pop    rdi
   140025eb5:	ret    
   140025eb6:	int3   
   140025eb7:	int3   
   140025eb8:	mov    QWORD PTR [rsp+0x18],rbx
   140025ebd:	mov    QWORD PTR [rsp+0x20],rbp
   140025ec2:	push   rsi
   140025ec3:	push   rdi
   140025ec4:	push   r12
   140025ec6:	push   r14
   140025ec8:	push   r15
   140025eca:	mov    eax,0x2060
   140025ecf:	call   0x140055f20
   140025ed4:	sub    rsp,rax
   140025ed7:	mov    rax,QWORD PTR [rip+0x5c002]        # 0x140081ee0
   140025ede:	xor    rax,rsp
   140025ee1:	mov    QWORD PTR [rsp+0x2050],rax
   140025ee9:	xor    ebx,ebx
   140025eeb:	mov    edi,edx
   140025eed:	mov    r14,rcx
   140025ef0:	test   edx,edx
   140025ef2:	je     0x140025f09
   140025ef4:	lea    rax,[rcx+0x4]
   140025ef8:	mov    edx,edi
   140025efa:	cmp    DWORD PTR [rax],ebx
   140025efc:	cmova  ebx,DWORD PTR [rax]
   140025eff:	lea    rax,[rax+0x8]
   140025f03:	sub    rdx,0x1
   140025f07:	jne    0x140025efa
   140025f09:	mov    esi,0x1
   140025f0e:	test   ebx,ebx
   140025f10:	je     0x140025ff8
   140025f16:	mov    r12,rdi
   140025f19:	lea    r15d,[rdi-0x1]
   140025f1d:	shl    r12,0x3
   140025f21:	xor    edx,edx
   140025f23:	lea    rcx,[rsp+0x20]
   140025f28:	lea    r8d,[rdx+0x28]
   140025f2c:	call   0x140058f40
   140025f31:	test   edi,edi
   140025f33:	je     0x140025f68
   140025f35:	lea    r9,[r14+0x4]
   140025f39:	mov    r10,rdi
   140025f3c:	mov    eax,DWORD PTR [r9]
   140025f3f:	xor    edx,edx
   140025f41:	div    esi
   140025f43:	lea    r9,[r9+0x8]
   140025f47:	mov    r8d,eax
   140025f4a:	mov    eax,0xcccccccd
   140025f4f:	mul    r8d
   140025f52:	shr    edx,0x3
   140025f55:	lea    ecx,[rdx+rdx*4]
   140025f58:	add    ecx,ecx
   140025f5a:	sub    r8d,ecx
   140025f5d:	inc    DWORD PTR [rsp+r8*4+0x20]
   140025f62:	sub    r10,0x1
   140025f66:	jne    0x140025f3c
   140025f68:	lea    rcx,[rsp+0x24]
   140025f6d:	mov    r8d,0x9
   140025f73:	lea    rdx,[rsp+0x20]
   140025f78:	mov    eax,DWORD PTR [rdx]
   140025f7a:	lea    rdx,[rdx+0x4]
   140025f7e:	add    DWORD PTR [rcx],eax
   140025f80:	lea    rcx,[rcx+0x4]
   140025f84:	sub    r8,0x1
   140025f88:	jne    0x140025f78
   140025f8a:	mov    r10d,r15d
   140025f8d:	test   r15d,r15d
   140025f90:	js     0x140025fcf
   140025f92:	xor    edx,edx
   140025f94:	mov    r9d,r10d
   140025f97:	mov    eax,DWORD PTR [r14+r9*8+0x4]
   140025f9c:	div    esi
   140025f9e:	mov    r8d,eax
   140025fa1:	mov    eax,0xcccccccd
   140025fa6:	mul    r8d
   140025fa9:	mov    rax,QWORD PTR [r14+r9*8]
   140025fad:	shr    edx,0x3
   140025fb0:	lea    ecx,[rdx+rdx*4]
   140025fb3:	or     edx,0xffffffff
   140025fb6:	add    ecx,ecx
   140025fb8:	sub    r8d,ecx
   140025fbb:	add    DWORD PTR [rsp+r8*4+0x20],edx
   140025fc0:	add    r10d,edx
   140025fc3:	mov    ecx,DWORD PTR [rsp+r8*4+0x20]
   140025fc8:	mov    QWORD PTR [rsp+rcx*8+0x50],rax
   140025fcd:	jns    0x140025f92
   140025fcf:	mov    r8,r12
   140025fd2:	lea    rdx,[rsp+0x50]
   140025fd7:	mov    rcx,r14
   140025fda:	call   0x140059180
   140025fdf:	mov    eax,0xcccccccd
   140025fe4:	lea    esi,[rsi+rsi*4]
   140025fe7:	mul    ebx
   140025fe9:	add    esi,esi
   140025feb:	mov    ebx,edx
   140025fed:	shr    ebx,0x3
   140025ff0:	test   ebx,ebx
   140025ff2:	jne    0x140025f21
   140025ff8:	mov    rcx,QWORD PTR [rsp+0x2050]
   140026000:	xor    rcx,rsp
   140026003:	call   0x140055f90
   140026008:	lea    r11,[rsp+0x2060]
   140026010:	mov    rbx,QWORD PTR [r11+0x40]
   140026014:	mov    rbp,QWORD PTR [r11+0x48]
   140026018:	mov    rsp,r11
   14002601b:	pop    r15
   14002601d:	pop    r14
   14002601f:	pop    r12
   140026021:	pop    rdi
   140026022:	pop    rsi
   140026023:	ret    
   140026024:	mov    QWORD PTR [rsp+0x8],rbx
   140026029:	push   rbp
   14002602a:	push   rsi
   14002602b:	push   rdi
   14002602c:	push   r12
   14002602e:	push   r13
   140026030:	push   r14
   140026032:	push   r15
   140026034:	lea    rbp,[rsp-0x1fb0]
   14002603c:	mov    eax,0x20b0
   140026041:	call   0x140055f20
   140026046:	sub    rsp,rax
   140026049:	mov    rax,QWORD PTR [rip+0x5be90]        # 0x140081ee0
   140026050:	xor    rax,rsp
   140026053:	mov    QWORD PTR [rbp+0x1fa0],rax
   14002605a:	xor    ebx,ebx
   14002605c:	mov    r15d,ecx
   14002605f:	mov    rsi,r8
   140026062:	mov    r14,r9
   140026065:	xor    r8d,r8d
   140026068:	mov    r10,rdx
   14002606b:	lea    r13d,[rbx+0x1]
   14002606f:	test   ecx,ecx
   140026071:	je     0x14002609c
   140026073:	mov    rdx,rsi
   140026076:	mov    ecx,DWORD PTR [r10]
   140026079:	test   ecx,ecx
   14002607b:	jne    0x140026081
   14002607d:	mov    BYTE PTR [rdx],cl
   14002607f:	jmp    0x14002608d
   140026081:	mov    DWORD PTR [rbp+rbx*8-0x5c],ecx
   140026085:	mov    DWORD PTR [rbp+rbx*8-0x60],r8d
   14002608a:	add    ebx,r13d
   14002608d:	add    r8d,r13d
   140026090:	add    r10,0x4
   140026094:	add    rdx,r13
   140026097:	cmp    r8d,r15d
   14002609a:	jb     0x140026076
   14002609c:	mov    edx,ebx
   14002609e:	lea    rcx,[rbp-0x60]
   1400260a2:	call   0x140025eb8
   1400260a7:	cmp    ebx,0x2
   1400260aa:	jae    0x1400260da
   1400260ac:	test   ebx,ebx
   1400260ae:	je     0x140026227
   1400260b4:	mov    ecx,r13d
   1400260b7:	cmp    ebx,r13d
   1400260ba:	jne    0x1400260c4
   1400260bc:	mov    eax,DWORD PTR [rbp-0x60]
   1400260bf:	test   eax,eax
   1400260c1:	cmovne ecx,eax
   1400260c4:	and    DWORD PTR [r14],0x0
   1400260c8:	mov    eax,ecx
   1400260ca:	mov    DWORD PTR [r14+rax*4],r13d
   1400260ce:	mov    BYTE PTR [rax+rsi*1],r13b
   1400260d2:	mov    BYTE PTR [rsi],r13b
   1400260d5:	jmp    0x140026227
   1400260da:	xor    r8d,r8d
   1400260dd:	lea    r12d,[rbx-0x1]
   1400260e1:	xor    r9d,r9d
   1400260e4:	xor    edi,edi
   1400260e6:	cmp    r8d,ebx
   1400260e9:	je     0x140026104
   1400260eb:	cmp    r9d,edi
   1400260ee:	je     0x1400260fc
   1400260f0:	mov    eax,DWORD PTR [rbp+r9*8-0x5c]
   1400260f5:	cmp    DWORD PTR [rbp+r8*8-0x5c],eax
   1400260fa:	ja     0x140026104
   1400260fc:	mov    r10d,r8d
   1400260ff:	add    r8d,r13d
   140026102:	jmp    0x14002610a
   140026104:	mov    r10d,r9d
   140026107:	add    r9d,r13d
   14002610a:	cmp    r8d,ebx
   14002610d:	je     0x140026128
   14002610f:	cmp    r9d,edi
   140026112:	je     0x140026120
   140026114:	mov    eax,DWORD PTR [rbp+r9*8-0x5c]
   140026119:	cmp    DWORD PTR [rbp+r8*8-0x5c],eax
   14002611e:	ja     0x140026128
   140026120:	mov    eax,r8d
   140026123:	add    r8d,r13d
   140026126:	jmp    0x14002612e
   140026128:	mov    eax,r9d
   14002612b:	add    r9d,r13d
   14002612e:	mov    edx,eax
   140026130:	mov    eax,r10d
   140026133:	mov    ecx,DWORD PTR [rbp+rdx*8-0x5c]
   140026137:	add    ecx,DWORD PTR [rbp+rax*8-0x5c]
   14002613b:	mov    DWORD PTR [rbp+rdx*8-0x5c],edi
   14002613f:	mov    DWORD PTR [rbp+rax*8-0x5c],edi
   140026143:	mov    DWORD PTR [rbp+rdi*8-0x5c],ecx
   140026147:	add    edi,r13d
   14002614a:	cmp    edi,r12d
   14002614d:	jb     0x1400260e6
   14002614f:	xor    edx,edx
   140026151:	lea    rcx,[rsp+0x20]
   140026156:	lea    r8d,[rdx+0x40]
   14002615a:	call   0x140058f40
   14002615f:	or     ebx,0xffffffff
   140026162:	mov    DWORD PTR [rsp+0x24],0x2
   14002616a:	add    edi,ebx
   14002616c:	lea    rdx,[rbp-0x5c]
   140026170:	mov    r11d,0x0
   140026176:	lea    rdx,[rdx+rdi*8]
   14002617a:	mov    DWORD PTR [rdx],r11d
   14002617d:	je     0x1400261bc
   14002617f:	lea    rdx,[rdx-0x8]
   140026183:	add    edi,ebx
   140026185:	mov    eax,DWORD PTR [rdx]
   140026187:	mov    ecx,DWORD PTR [rbp+rax*8-0x5c]
   14002618b:	add    ecx,r13d
   14002618e:	mov    DWORD PTR [rdx],ecx
   140026190:	cmp    ecx,0xf
   140026193:	jb     0x1400261aa
   140026195:	mov    ecx,0xe
   14002619a:	cmp    DWORD PTR [rsp+0x58],r11d
   14002619f:	jne    0x1400261aa
   1400261a1:	add    ecx,ebx
   1400261a3:	cmp    DWORD PTR [rsp+rcx*4+0x20],r11d
   1400261a8:	je     0x1400261a1
   1400261aa:	mov    eax,ecx
   1400261ac:	add    DWORD PTR [rsp+rax*4+0x20],ebx
   1400261b0:	lea    eax,[rcx+0x1]
   1400261b3:	add    DWORD PTR [rsp+rax*4+0x20],0x2
   1400261b8:	test   edi,edi
   1400261ba:	jne    0x14002617f
   1400261bc:	mov    r9d,r13d
   1400261bf:	mov    r10d,r11d
   1400261c2:	mov    rdx,r11
   1400261c5:	mov    r8d,DWORD PTR [rsp+rdx*1+0x24]
   1400261ca:	mov    DWORD PTR [rsp+rdx*1+0x64],r10d
   1400261cf:	add    r10d,r8d
   1400261d2:	add    r10d,r10d
   1400261d5:	test   r8d,r8d
   1400261d8:	je     0x1400261f0
   1400261da:	mov    ecx,DWORD PTR [rbp+r12*8-0x60]
   1400261df:	add    r12d,ebx
   1400261e2:	mov    BYTE PTR [rcx+rsi*1],r9b
   1400261e6:	add    r8d,ebx
   1400261e9:	jne    0x1400261da
   1400261eb:	mov    DWORD PTR [rsp+rdx*1+0x24],r8d
   1400261f0:	add    DWORD PTR [rsp+rdx*1+0x24],ebx
   1400261f4:	add    r9d,r13d
   1400261f7:	add    rdx,0x4
   1400261fb:	cmp    r9d,0xf
   1400261ff:	jbe    0x1400261c5
   140026201:	test   r15d,r15d
   140026204:	je     0x140026227
   140026206:	mov    rdx,r15
   140026209:	movzx  eax,BYTE PTR [rsi]
   14002620c:	mov    ecx,DWORD PTR [rsp+rax*4+0x60]
   140026210:	mov    DWORD PTR [r14],ecx
   140026213:	lea    r14,[r14+0x4]
   140026217:	movzx  eax,BYTE PTR [rsi]
   14002621a:	add    rsi,r13
   14002621d:	add    DWORD PTR [rsp+rax*4+0x60],r13d
   140026222:	sub    rdx,r13
   140026225:	jne    0x140026209
   140026227:	mov    rcx,QWORD PTR [rbp+0x1fa0]
   14002622e:	xor    rcx,rsp
   140026231:	call   0x140055f90
   140026236:	mov    rbx,QWORD PTR [rsp+0x20f0]
   14002623e:	add    rsp,0x20b0
   140026245:	pop    r15
   140026247:	pop    r14
   140026249:	pop    r13
   14002624b:	pop    r12
   14002624d:	pop    rdi
   14002624e:	pop    rsi
   14002624f:	pop    rbp
   140026250:	ret    
   140026251:	int3   
   140026252:	int3   
   140026253:	int3   
   140026254:	mov    QWORD PTR [rsp+0x20],rbx
   140026259:	push   rbp
   14002625a:	push   rsi
   14002625b:	push   rdi
   14002625c:	push   r12
   14002625e:	push   r13
   140026260:	push   r14
   140026262:	push   r15
   140026264:	lea    rbp,[rsp-0x1f30]
   14002626c:	mov    eax,0x2030
   140026271:	call   0x140055f20
   140026276:	sub    rsp,rax
   140026279:	mov    rax,QWORD PTR [rip+0x5bc60]        # 0x140081ee0
   140026280:	xor    rax,rsp
   140026283:	mov    QWORD PTR [rbp+0x1f20],rax
   14002628a:	mov    r14d,r8d
   14002628d:	movzx  r15d,r8w
   140026291:	shr    r14d,0x1f
   140026295:	xor    ebx,ebx
   140026297:	and    r14b,0x1
   14002629b:	mov    r13,rdx
   14002629e:	mov    r12,rcx
   1400262a1:	test   r15d,r15d
   1400262a4:	je     0x14002642a
   1400262aa:	or     rsi,0xffffffffffffffff
   1400262ae:	mov    rdi,rsi
   1400262b1:	inc    rdi
   1400262b4:	cmp    WORD PTR [rcx+rdi*2],bx
   1400262b8:	jne    0x1400262b1
   1400262ba:	lea    eax,[r15-0x2]
   1400262be:	cmp    eax,0x1
   1400262c1:	jbe    0x1400262fc
   1400262c3:	mov    r8,rdi
   1400262c6:	test   r14b,r14b
   1400262c9:	je     0x1400262d2
   1400262cb:	call   0x14005ecd0
   1400262d0:	jmp    0x1400262d7
   1400262d2:	call   0x140048f7c
   1400262d7:	test   eax,eax
   1400262d9:	jne    0x1400262fc
   1400262db:	cmp    WORD PTR [r13+rdi*2+0x0],0x5c
   1400262e2:	je     0x1400262f5
   1400262e4:	cmp    WORD PTR [r13+rdi*2+0x0],0x2f
   1400262eb:	je     0x1400262f5
   1400262ed:	cmp    WORD PTR [r13+rdi*2+0x0],bx
   1400262f3:	jne    0x1400262fc
   1400262f5:	mov    al,0x1
   1400262f7:	jmp    0x1400264a8
   1400262fc:	cmp    r15d,0x1
   140026300:	jne    0x140026309
   140026302:	xor    al,al
   140026304:	jmp    0x1400264a8
   140026309:	mov    edi,0x800
   14002630e:	lea    rdx,[rsp+0x20]
   140026313:	mov    r8d,edi
   140026316:	mov    rcx,r12
   140026319:	call   0x140031bf8
   14002631e:	mov    r8d,edi
   140026321:	lea    rdx,[rbp+0xf20]
   140026328:	mov    rcx,r13
   14002632b:	call   0x140031bf8
   140026330:	lea    eax,[r15-0x2]
   140026334:	cmp    eax,0x1
   140026337:	ja     0x140026378
   140026339:	lea    rdx,[rbp+0xf20]
   140026340:	test   r14b,r14b
   140026343:	je     0x14002636a
   140026345:	lea    rax,[rsp+0x20]
   14002634a:	sub    rdx,rax
   14002634d:	movzx  ecx,WORD PTR [rax]
   140026350:	cmp    cx,WORD PTR [rax+rdx*1]
   140026354:	jne    0x140026363
   140026356:	add    rax,0x2
   14002635a:	test   cx,cx
   14002635d:	jne    0x14002634d
   14002635f:	mov    eax,ebx
   140026361:	jmp    0x140026374
   140026363:	sbb    eax,eax
   140026365:	or     eax,0x1
   140026368:	jmp    0x140026374
   14002636a:	lea    rcx,[rsp+0x20]
   14002636f:	call   0x140046118
   140026374:	test   eax,eax
   140026376:	jne    0x140026302
   140026378:	lea    eax,[r15-0x4]
   14002637c:	cmp    eax,0x1
   14002637f:	ja     0x14002642a
   140026385:	lea    rcx,[rsp+0x20]
   14002638a:	call   0x140032288
   14002638f:	test   al,al
   140026391:	je     0x14002639e
   140026393:	mov    rdx,r13
   140026396:	mov    rcx,r12
   140026399:	jmp    0x1400264a0
   14002639e:	cmp    r15d,0x4
   1400263a2:	je     0x1400263ed
   1400263a4:	mov    rcx,r12
   1400263a7:	call   0x140032288
   1400263ac:	test   al,al
   1400263ae:	jne    0x1400263ed
   1400263b0:	lea    rdx,[rbp+0xf20]
   1400263b7:	test   r14b,r14b
   1400263ba:	je     0x1400263e1
   1400263bc:	lea    rax,[rsp+0x20]
   1400263c1:	sub    rdx,rax
   1400263c4:	movzx  ecx,WORD PTR [rax]
   1400263c7:	cmp    cx,WORD PTR [rax+rdx*1]
   1400263cb:	jne    0x1400263da
   1400263cd:	add    rax,0x2
   1400263d1:	test   cx,cx
   1400263d4:	jne    0x1400263c4
   1400263d6:	mov    eax,ebx
   1400263d8:	jmp    0x140026422
   1400263da:	sbb    eax,eax
   1400263dc:	or     eax,0x1
   1400263df:	jmp    0x140026422
   1400263e1:	lea    rcx,[rsp+0x20]
   1400263e6:	call   0x140046118
   1400263eb:	jmp    0x140026422
   1400263ed:	cmp    WORD PTR [rsp+0x20],bx
   1400263f2:	je     0x14002642a
   1400263f4:	lea    rax,[rsp+0x20]
   1400263f9:	inc    rsi
   1400263fc:	cmp    WORD PTR [rax+rsi*2],bx
   140026400:	jne    0x1400263f9
   140026402:	lea    rdx,[rbp+0xf20]
   140026409:	mov    r8,rsi
   14002640c:	lea    rcx,[rsp+0x20]
   140026411:	test   r14b,r14b
   140026414:	je     0x14002641d
   140026416:	call   0x14005ecd0
   14002641b:	jmp    0x140026422
   14002641d:	call   0x140048f7c
   140026422:	test   eax,eax
   140026424:	jne    0x140026302
   14002642a:	mov    rcx,r12
   14002642d:	call   0x1400327bc
   140026432:	mov    rcx,r13
   140026435:	mov    rdi,rax
   140026438:	call   0x1400327bc
   14002643d:	mov    r8d,0x6
   140026443:	lea    rcx,[rip+0x48ee6]        # 0x14006f330
   14002644a:	mov    rdx,rax
   14002644d:	mov    rsi,rax
   140026450:	call   0x140048f7c
   140026455:	test   eax,eax
   140026457:	je     0x140026302
   14002645d:	cmp    r15d,0x2
   140026461:	jne    0x14002649a
   140026463:	test   r14b,r14b
   140026466:	je     0x140026488
   140026468:	sub    rsi,rdi
   14002646b:	movzx  eax,WORD PTR [rdi]
   14002646e:	cmp    ax,WORD PTR [rdi+rsi*1]
   140026472:	jne    0x140026481
   140026474:	add    rdi,0x2
   140026478:	test   ax,ax
   14002647b:	jne    0x14002646b
   14002647d:	mov    eax,ebx
   14002647f:	jmp    0x140026493
   140026481:	sbb    eax,eax
   140026483:	or     eax,0x1
   140026486:	jmp    0x140026493
   140026488:	mov    rdx,rsi
   14002648b:	mov    rcx,rdi
   14002648e:	call   0x140046118
   140026493:	test   eax,eax
   140026495:	sete   al
   140026498:	jmp    0x1400264a8
   14002649a:	mov    rdx,rsi
   14002649d:	mov    rcx,rdi
   1400264a0:	mov    r8b,r14b
   1400264a3:	call   0x1400264d4
   1400264a8:	mov    rcx,QWORD PTR [rbp+0x1f20]
   1400264af:	xor    rcx,rsp
   1400264b2:	call   0x140055f90
   1400264b7:	mov    rbx,QWORD PTR [rsp+0x2088]
   1400264bf:	add    rsp,0x2030
   1400264c6:	pop    r15
   1400264c8:	pop    r14
   1400264ca:	pop    r13
   1400264cc:	pop    r12
   1400264ce:	pop    rdi
   1400264cf:	pop    rsi
   1400264d0:	pop    rbp
   1400264d1:	ret    
   1400264d2:	int3   
   1400264d3:	int3   
   1400264d4:	mov    QWORD PTR [rsp+0x10],rbx
   1400264d9:	mov    BYTE PTR [rsp+0x18],r8b
   1400264de:	push   rbp
   1400264df:	push   rsi
   1400264e0:	push   rdi
   1400264e1:	sub    rsp,0x20
   1400264e5:	mov    al,r8b
   1400264e8:	mov    rsi,rdx
   1400264eb:	mov    rbp,rcx
   1400264ee:	xor    ebx,ebx
   1400264f0:	movzx  edi,WORD PTR [rsi]
   1400264f3:	test   al,al
   1400264f5:	jne    0x140026500
   1400264f7:	mov    ecx,edi
   1400264f9:	call   0x140048f28
   1400264fe:	mov    edi,eax
   140026500:	movzx  eax,WORD PTR [rbp+0x0]
   140026504:	cmp    BYTE PTR [rsp+0x50],bl
   140026508:	jne    0x140026511
   14002650a:	mov    ecx,eax
   14002650c:	call   0x140048f28
   140026511:	add    rbp,0x2
   140026515:	movzx  ecx,ax
   140026518:	mov    QWORD PTR [rsp+0x40],rbp
   14002651d:	test   ecx,ecx
   14002651f:	je     0x140026652
   140026525:	mov    edx,0x2a
   14002652a:	cmp    ecx,edx
   14002652c:	je     0x14002656a
   14002652e:	cmp    ecx,0x3f
   140026531:	je     0x14002655b
   140026533:	cmp    ax,di
   140026536:	je     0x140026560
   140026538:	lea    ecx,[rdx+0x4]
   14002653b:	cmp    ax,cx
   14002653e:	jne    0x140026554
   140026540:	mov    al,BYTE PTR [rsp+0x50]
   140026544:	test   di,di
   140026547:	je     0x1400264f0
   140026549:	cmp    di,0x5c
   14002654d:	je     0x1400264f0
   14002654f:	cmp    di,cx
   140026552:	je     0x140026564
   140026554:	xor    al,al
   140026556:	jmp    0x140026658
   14002655b:	test   di,di
   14002655e:	je     0x140026554
   140026560:	add    rsi,0x2
   140026564:	mov    al,BYTE PTR [rsp+0x50]
   140026568:	jmp    0x1400264f0
   14002656a:	cmp    WORD PTR [rbp+0x0],bx
   14002656e:	jne    0x140026577
   140026570:	mov    al,0x1
   140026572:	jmp    0x140026658
   140026577:	mov    eax,0x2e
   14002657c:	cmp    WORD PTR [rbp+0x0],ax
   140026580:	jne    0x140026648
   140026586:	lea    rdi,[rbp+0x2]
   14002658a:	cmp    WORD PTR [rdi],dx
   14002658d:	jne    0x140026595
   14002658f:	cmp    WORD PTR [rbp+0x4],bx
   140026593:	je     0x140026570
   140026595:	mov    edx,eax
   140026597:	mov    rcx,rsi
   14002659a:	call   0x1400590e0
   14002659f:	mov    rbp,rax
   1400265a2:	cmp    WORD PTR [rdi],bx
   1400265a5:	jne    0x1400265be
   1400265a7:	test   rax,rax
   1400265aa:	je     0x1400265b2
   1400265ac:	cmp    WORD PTR [rax+0x2],bx
   1400265b0:	jne    0x1400265b7
   1400265b2:	mov    ebx,0x1
   1400265b7:	mov    al,bl
   1400265b9:	jmp    0x140026658
   1400265be:	test   rax,rax
   1400265c1:	je     0x140026625
   1400265c3:	mov    rcx,QWORD PTR [rsp+0x40]
   1400265c8:	lea    rdx,[rip+0x48d71]        # 0x14006f340
   1400265cf:	mov    rsi,rax
   1400265d2:	call   0x14005d4b0
   1400265d7:	test   rax,rax
   1400265da:	jne    0x140026625
   1400265dc:	add    rbp,0x2
   1400265e0:	lea    edx,[rax+0x2e]
   1400265e3:	mov    rcx,rbp
   1400265e6:	call   0x1400590e0
   1400265eb:	test   rax,rax
   1400265ee:	jne    0x140026625
   1400265f0:	cmp    BYTE PTR [rsp+0x50],bl
   1400265f4:	je     0x140026616
   1400265f6:	sub    rbp,rdi
   1400265f9:	movzx  eax,WORD PTR [rdi]
   1400265fc:	cmp    ax,WORD PTR [rdi+rbp*1]
   140026600:	jne    0x14002660f
   140026602:	add    rdi,0x2
   140026606:	test   ax,ax
   140026609:	jne    0x1400265f9
   14002660b:	mov    eax,ebx
   14002660d:	jmp    0x140026621
   14002660f:	sbb    eax,eax
   140026611:	or     eax,0x1
   140026614:	jmp    0x140026621
   140026616:	mov    rdx,rbp
   140026619:	mov    rcx,rdi
   14002661c:	call   0x140046118
   140026621:	test   eax,eax
   140026623:	jmp    0x140026655
   140026625:	mov    rbp,QWORD PTR [rsp+0x40]
   14002662a:	jmp    0x140026648
   14002662c:	mov    r8b,BYTE PTR [rsp+0x50]
   140026631:	mov    rdx,rsi
   140026634:	mov    rcx,rbp
   140026637:	call   0x1400264d4
   14002663c:	add    rsi,0x2
   140026640:	test   al,al
   140026642:	jne    0x140026570
   140026648:	cmp    WORD PTR [rsi],bx
   14002664b:	jne    0x14002662c
   14002664d:	jmp    0x140026554
   140026652:	test   di,di
   140026655:	sete   al
   140026658:	mov    rbx,QWORD PTR [rsp+0x48]
   14002665d:	add    rsp,0x20
   140026661:	pop    rdi
   140026662:	pop    rsi
   140026663:	pop    rbp
   140026664:	ret    
   140026665:	int3   
   140026666:	int3   
   140026667:	int3   
   140026668:	mov    QWORD PTR [rsp+0x8],rcx
   14002666d:	push   rbx
   14002666e:	sub    rsp,0x30
   140026672:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002667b:	mov    rbx,rcx
   14002667e:	add    rcx,0x5030
   140026685:	call   0x14004356c
   14002668a:	nop
   14002668b:	xor    eax,eax
   14002668d:	mov    QWORD PTR [rbx+0x6178],rax
   140026694:	mov    QWORD PTR [rbx+0x6180],rax
   14002669b:	mov    QWORD PTR [rbx+0x6188],rax
   1400266a2:	mov    QWORD PTR [rbx+0x6190],rax
   1400266a9:	mov    QWORD PTR [rbx+0x62d8],rax
   1400266b0:	mov    QWORD PTR [rbx+0x62e0],rax
   1400266b7:	mov    rcx,rbx
   1400266ba:	call   0x140026704
   1400266bf:	nop
   1400266c0:	mov    rax,rbx
   1400266c3:	add    rsp,0x30
   1400266c7:	pop    rbx
   1400266c8:	ret    
   1400266c9:	int3   
   1400266ca:	int3   
   1400266cb:	int3   
   1400266cc:	rex push rbx
   1400266ce:	sub    rsp,0x20
   1400266d2:	xor    edx,edx
   1400266d4:	mov    r8d,0x83d8
   1400266da:	mov    rbx,rcx
   1400266dd:	call   0x140058f40
   1400266e2:	mov    rcx,QWORD PTR [rbx+0x6178]
   1400266e9:	test   rcx,rcx
   1400266ec:	je     0x1400266f3
   1400266ee:	call   0x14005a938
   1400266f3:	lea    rcx,[rbx+0x5030]
   1400266fa:	add    rsp,0x20
   1400266fe:	pop    rbx
   1400266ff:	jmp    0x140043640
   140026704:	rex push rbx
   140026706:	sub    rsp,0x20
   14002670a:	xor    edx,edx
   14002670c:	mov    r8d,0x83d8
   140026712:	mov    rbx,rcx
   140026715:	call   0x140058f40
   14002671a:	xor    eax,eax
   14002671c:	mov    QWORD PTR [rbx+0x10],0x2000000
   140026724:	mov    DWORD PTR [rbx+0x613c],eax
   14002672a:	mov    DWORD PTR [rbx+0x6134],eax
   140026730:	mov    DWORD PTR [rbx+0x61a4],eax
   140026736:	movabs rax,0x7fffffff7fffffff
   140026740:	mov    QWORD PTR [rbx+0x62e8],rax
   140026747:	mov    QWORD PTR [rbx+0x62f0],rax
   14002674e:	mov    DWORD PTR [rbx+0x6140],0x3
   140026758:	mov    DWORD PTR [rbx+0x73c4],0x4
   140026762:	mov    DWORD PTR [rbx+0x6144],0x2
   14002676c:	call   0x1400470f0
   140026771:	mov    DWORD PTR [rbx+0x83d0],eax
   140026777:	mov    DWORD PTR [rbx+0x2018],0x1
   140026781:	mov    QWORD PTR [rbx+0x61c8],0x10000
   14002678c:	add    rsp,0x20
   140026790:	pop    rbx
   140026791:	ret    
   140026792:	int3   
   140026793:	int3   
   140026794:	mov    QWORD PTR [rsp+0x8],rcx
   140026799:	push   rdi
   14002679a:	sub    rsp,0x30
   14002679e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400267a7:	mov    QWORD PTR [rsp+0x48],rbx
   1400267ac:	mov    rbx,rdx
   1400267af:	mov    rdi,rcx
   1400267b2:	lea    rax,[rip+0x48c77]        # 0x14006f430
   1400267b9:	mov    QWORD PTR [rcx],rax
   1400267bc:	add    rcx,0x4150
   1400267c3:	call   0x140030d7c
   1400267c8:	lea    rcx,[rdi+0x62c8]
   1400267cf:	mov    rdx,rbx
   1400267d2:	call   0x1400103c0
   1400267d7:	nop
   1400267d8:	mov    QWORD PTR [rdi+0x6178],rbx
   1400267df:	xor    ebx,ebx
   1400267e1:	mov    QWORD PTR [rdi+0xe0],rbx
   1400267e8:	mov    QWORD PTR [rdi+0x108],rbx
   1400267ef:	mov    QWORD PTR [rdi+0xe8],rbx
   1400267f6:	mov    QWORD PTR [rdi+0xf0],rbx
   1400267fd:	mov    QWORD PTR [rdi+0xf8],rbx
   140026804:	mov    QWORD PTR [rdi+0x100],rbx
   14002680b:	mov    QWORD PTR [rdi+0x4148],rbx
   140026812:	mov    QWORD PTR [rdi+0x8],rbx
   140026816:	mov    QWORD PTR [rdi+0x6188],rbx
   14002681d:	mov    QWORD PTR [rdi+0x62a0],rbx
   140026824:	lea    rcx,[rdi+0x6198]
   14002682b:	xor    edx,edx
   14002682d:	mov    r8d,0x100
   140026833:	call   0x140058f40
   140026838:	mov    DWORD PTR [rdi+0x130],ebx
   14002683e:	mov    DWORD PTR [rdi+0x62a8],ebx
   140026844:	mov    DWORD PTR [rdi+0x6298],0x1
   14002684e:	mov    QWORD PTR [rdi+0x62c0],rbx
   140026855:	mov    QWORD PTR [rdi+0x62b0],rbx
   14002685c:	call   0x140046ea4
   140026861:	mov    QWORD PTR [rdi+0x6180],rax
   140026868:	mov    rax,rdi
   14002686b:	mov    rbx,QWORD PTR [rsp+0x48]
   140026870:	add    rsp,0x30
   140026874:	pop    rdi
   140026875:	ret    
   140026876:	int3   
   140026877:	int3   
   140026878:	lea    rax,[rip+0x48b69]        # 0x14006f3e8
   14002687f:	mov    QWORD PTR [rcx],rax
   140026882:	ret    
   140026883:	int3   
   140026884:	rex push rbx
   140026886:	sub    rsp,0x30
   14002688a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140026893:	mov    rbx,rcx
   140026896:	lea    rax,[rip+0x48b93]        # 0x14006f430
   14002689d:	mov    QWORD PTR [rcx],rax
   1400268a0:	call   0x140028614
   1400268a5:	nop
   1400268a6:	mov    rcx,QWORD PTR [rbx+0x6180]
   1400268ad:	call   0x140047010
   1400268b2:	nop
   1400268b3:	lea    rcx,[rbx+0x62c8]
   1400268ba:	call   0x140010488
   1400268bf:	nop
   1400268c0:	lea    rax,[rip+0x48b21]        # 0x14006f3e8
   1400268c7:	mov    QWORD PTR [rbx],rax
   1400268ca:	add    rsp,0x30
   1400268ce:	pop    rbx
   1400268cf:	ret    
   1400268d0:	rex push rbx
   1400268d2:	sub    rsp,0x20
   1400268d6:	lea    rax,[rip+0x48b0b]        # 0x14006f3e8
   1400268dd:	mov    rbx,rcx
   1400268e0:	mov    QWORD PTR [rcx],rax
   1400268e3:	test   dl,0x1
   1400268e6:	je     0x1400268f2
   1400268e8:	mov    edx,0x8
   1400268ed:	call   0x140055de8
   1400268f2:	mov    rax,rbx
   1400268f5:	add    rsp,0x20
   1400268f9:	pop    rbx
   1400268fa:	ret    
   1400268fb:	int3   
   1400268fc:	mov    QWORD PTR [rsp+0x8],rbx
   140026901:	push   rdi
   140026902:	sub    rsp,0x20
   140026906:	mov    ebx,edx
   140026908:	mov    rdi,rcx
   14002690b:	call   0x140026884
   140026910:	test   bl,0x1
   140026913:	je     0x140026922
   140026915:	mov    edx,0x6328
   14002691a:	mov    rcx,rdi
   14002691d:	call   0x140055de8
   140026922:	mov    rax,rdi
   140026925:	mov    rbx,QWORD PTR [rsp+0x30]
   14002692a:	add    rsp,0x20
   14002692e:	pop    rdi
   14002692f:	ret    
   140026930:	mov    QWORD PTR [rsp+0x8],rbx
   140026935:	mov    QWORD PTR [rsp+0x10],rbp
   14002693a:	mov    QWORD PTR [rsp+0x18],rsi
   14002693f:	push   rdi
   140026940:	push   r12
   140026942:	push   r13
   140026944:	push   r14
   140026946:	push   r15
   140026948:	sub    rsp,0x40
   14002694c:	mov    eax,DWORD PTR [rdx+0x8]
   14002694f:	mov    r14d,0x300
   140026955:	mov    esi,DWORD PTR [rdx+0xc]
   140026958:	mov    ebp,eax
   14002695a:	add    rbp,QWORD PTR [rcx+0xe0]
   140026961:	mov    rdi,rdx
   140026964:	and    DWORD PTR [rdx+0x414],0x0
   14002696b:	mov    rbx,rcx
   14002696e:	mov    r13d,0x3
   140026974:	cmp    eax,r14d
   140026977:	jb     0x1400269ab
   140026979:	mov    r15d,r13d
   14002697c:	mov    r13d,0x100
   140026982:	mov    r8d,DWORD PTR [rdi+0x8]
   140026986:	mov    r9d,r13d
   140026989:	sub    r8,r14
   14002698c:	mov    rdx,rdi
   14002698f:	add    r8,QWORD PTR [rbx+0xe0]
   140026996:	mov    rcx,rbx
   140026999:	call   0x140027614
   14002699e:	sub    r14,r13
   1400269a1:	add    r15d,0xffffffff
   1400269a5:	jne    0x140026982
   1400269a7:	lea    r13d,[r15+0x3]
   1400269ab:	test   esi,esi
   1400269ad:	jle    0x1400269ff
   1400269af:	lea    r12d,[rsi-0x1]
   1400269b3:	mov    r15,rbp
   1400269b6:	shr    r12d,0x8
   1400269ba:	mov    r14d,esi
   1400269bd:	inc    r12d
   1400269c0:	mov    r13d,0x100
   1400269c6:	mov    r9d,r14d
   1400269c9:	cmp    r14d,r13d
   1400269cc:	mov    r8,r15
   1400269cf:	mov    rdx,rdi
   1400269d2:	cmovg  r9d,r13d
   1400269d6:	mov    rcx,rbx
   1400269d9:	call   0x140027614
   1400269de:	mov    ecx,DWORD PTR [rdi+0x414]
   1400269e4:	sub    r14d,r13d
   1400269e7:	add    r15,r13
   1400269ea:	mov    DWORD PTR [rdi+rcx*4+0x14],eax
   1400269ee:	inc    DWORD PTR [rdi+0x414]
   1400269f4:	sub    r12,0x1
   1400269f8:	jne    0x1400269c6
   1400269fa:	lea    r13d,[r12+0x3]
   1400269ff:	cmp    QWORD PTR [rbx+0x6170],0x10000000
   140026a0a:	mov    eax,0x8
   140026a0f:	jge    0x140026a56
   140026a11:	cmp    DWORD PTR [rbx+0x24],r13d
   140026a15:	je     0x140026a32
   140026a17:	cmp    DWORD PTR [rbx+0x24],0x2
   140026a1b:	jne    0x140026a24
   140026a1d:	mov    eax,0x1
   140026a22:	jmp    0x140026a32
   140026a24:	mov    r8d,esi
   140026a27:	mov    rdx,rbp
   140026a2a:	mov    rcx,rbx
   140026a2d:	call   0x140027794
   140026a32:	cmp    eax,0x8
   140026a35:	jne    0x140026a56
   140026a37:	cmp    DWORD PTR [rbx+0x3c],r13d
   140026a3b:	je     0x140026a56
   140026a3d:	cmp    DWORD PTR [rbx+0x3c],0x2
   140026a41:	jne    0x140026a48
   140026a43:	mov    eax,r13d
   140026a46:	jmp    0x140026a56
   140026a48:	mov    r8d,esi
   140026a4b:	mov    rdx,rbp
   140026a4e:	mov    rcx,rbx
   140026a51:	call   0x1400276e0
   140026a56:	mov    DWORD PTR [rdi+0x10],eax
   140026a59:	lea    rcx,[rdi+0x2041c]
   140026a60:	lea    rax,[rdi+0x2441c]
   140026a67:	mov    QWORD PTR [rsp+0x30],0x400
   140026a70:	mov    QWORD PTR [rsp+0x28],rax
   140026a75:	mov    r9d,esi
   140026a78:	mov    QWORD PTR [rsp+0x20],rcx
   140026a7d:	mov    r8,rbp
   140026a80:	mov    rcx,rbx
   140026a83:	mov    rdx,rdi
   140026a86:	call   0x140028234
   140026a8b:	lea    r11,[rsp+0x40]
   140026a90:	mov    rbx,QWORD PTR [r11+0x30]
   140026a94:	mov    rbp,QWORD PTR [r11+0x38]
   140026a98:	mov    rsi,QWORD PTR [r11+0x40]
   140026a9c:	mov    rsp,r11
   140026a9f:	pop    r15
   140026aa1:	pop    r14
   140026aa3:	pop    r13
   140026aa5:	pop    r12
   140026aa7:	pop    rdi
   140026aa8:	ret    
   140026aa9:	int3   
   140026aaa:	int3   
   140026aab:	int3   
   140026aac:	mov    rdx,rcx
   140026aaf:	mov    rcx,QWORD PTR [rcx]
   140026ab2:	jmp    0x140026930
   140026ab7:	int3   
   140026ab8:	mov    rax,rsp
   140026abb:	mov    QWORD PTR [rax+0x8],rbx
   140026abf:	mov    QWORD PTR [rax+0x20],r9
   140026ac3:	mov    DWORD PTR [rax+0x18],r8d
   140026ac7:	mov    DWORD PTR [rax+0x10],edx
   140026aca:	push   rbp
   140026acb:	push   rsi
   140026acc:	push   rdi
   140026acd:	push   r12
   140026acf:	push   r13
   140026ad1:	push   r14
   140026ad3:	push   r15
   140026ad5:	sub    rsp,0x20
   140026ad9:	cmp    BYTE PTR [rcx+0xd8],0x0
   140026ae0:	mov    r15,r9
   140026ae3:	mov    r13d,r8d
   140026ae6:	mov    rbx,rcx
   140026ae9:	je     0x140026af2
   140026aeb:	xor    eax,eax
   140026aed:	jmp    0x140026cbe
   140026af2:	xor    ebp,ebp
   140026af4:	xor    r12d,r12d
   140026af7:	test   r8d,r8d
   140026afa:	je     0x140026cbc
   140026b00:	xor    esi,esi
   140026b02:	xor    edi,edi
   140026b04:	cmp    DWORD PTR [rbx+0x6298],esi
   140026b0a:	jbe    0x140026ba6
   140026b10:	mov    r15d,DWORD PTR [rsp+0x68]
   140026b15:	mov    ecx,r13d
   140026b18:	sub    ecx,r12d
   140026b1b:	je     0x140026ba1
   140026b21:	mov    r14d,0x10000
   140026b27:	mov    eax,edi
   140026b29:	cmp    ecx,r14d
   140026b2c:	cmovb  r14d,ecx
   140026b30:	imul   rdx,rax,0x24428
   140026b37:	lea    eax,[r12+r15*1]
   140026b3b:	add    rdx,QWORD PTR [rbx+0x8]
   140026b3f:	mov    QWORD PTR [rdx],rbx
   140026b42:	and    eax,DWORD PTR [rbx+0x120]
   140026b48:	and    DWORD PTR [rdx+0x2441c],0x0
   140026b4f:	mov    DWORD PTR [rdx+0x8],eax
   140026b52:	mov    DWORD PTR [rdx+0xc],r14d
   140026b56:	mov    DWORD PTR [rdx+0x24420],esi
   140026b5c:	cmp    DWORD PTR [rbx+0x6298],0x1
   140026b63:	jbe    0x140026b86
   140026b65:	test   edi,edi
   140026b67:	jne    0x140026b6e
   140026b69:	cmp    ecx,r14d
   140026b6c:	je     0x140026b86
   140026b6e:	mov    rcx,QWORD PTR [rbx+0x6180]
   140026b75:	mov    r8,rdx
   140026b78:	lea    rdx,[rip+0xffffffffffffff2d]        # 0x140026aac
   140026b7f:	call   0x140046dd8
   140026b84:	jmp    0x140026b8e
   140026b86:	mov    rcx,rbx
   140026b89:	call   0x140026930
   140026b8e:	add    r12d,r14d
   140026b91:	inc    esi
   140026b93:	inc    edi
   140026b95:	cmp    edi,DWORD PTR [rbx+0x6298]
   140026b9b:	jb     0x140026b15
   140026ba1:	mov    r15,QWORD PTR [rsp+0x78]
   140026ba6:	mov    rcx,QWORD PTR [rbx+0x6180]
   140026bad:	call   0x140047214
   140026bb2:	test   esi,esi
   140026bb4:	je     0x140026cb3
   140026bba:	mov    r13d,DWORD PTR [rsp+0x68]
   140026bbf:	xor    edi,edi
   140026bc1:	mov    r14d,esi
   140026bc4:	mov    rcx,QWORD PTR [rbx+0x8]
   140026bc8:	xor    edx,edx
   140026bca:	add    rcx,rdi
   140026bcd:	xor    esi,esi
   140026bcf:	mov    r11d,DWORD PTR [rcx+0x8]
   140026bd3:	mov    r10d,DWORD PTR [rcx+0x10]
   140026bd7:	sub    r11d,r13d
   140026bda:	cmp    DWORD PTR [rcx+0x2441c],edx
   140026be0:	jbe    0x140026c67
   140026be6:	mov    r8d,esi
   140026be9:	add    r8,r8
   140026bec:	mov    r9d,DWORD PTR [rcx+r8*8+0x20420]
   140026bf4:	sub    r9d,edx
   140026bf7:	cmp    r9d,0x64
   140026bfb:	jbe    0x140026c24
   140026bfd:	cmp    r10d,0x8
   140026c01:	je     0x140026c24
   140026c03:	mov    eax,ebp
   140026c05:	cmp    rax,QWORD PTR [rsp+0x80]
   140026c0d:	jae    0x140026c24
   140026c0f:	lea    eax,[rdx+r11*1]
   140026c13:	mov    DWORD PTR [r15],r10d
   140026c16:	inc    ebp
   140026c18:	mov    DWORD PTR [r15+0x4],eax
   140026c1c:	mov    DWORD PTR [r15+0x8],r9d
   140026c20:	add    r15,0x10
   140026c24:	mov    eax,ebp
   140026c26:	cmp    rax,QWORD PTR [rsp+0x80]
   140026c2e:	jae    0x140026c62
   140026c30:	movups xmm0,XMMWORD PTR [rcx+r8*8+0x2041c]
   140026c39:	inc    ebp
   140026c3b:	inc    esi
   140026c3d:	movdqu XMMWORD PTR [r15],xmm0
   140026c42:	add    DWORD PTR [r15+0x4],r11d
   140026c46:	add    r15,0x10
   140026c4a:	mov    edx,DWORD PTR [rcx+r8*8+0x20424]
   140026c52:	add    edx,DWORD PTR [rcx+r8*8+0x20420]
   140026c5a:	cmp    esi,DWORD PTR [rcx+0x2441c]
   140026c60:	jb     0x140026be6
   140026c62:	mov    QWORD PTR [rsp+0x78],r15
   140026c67:	cmp    r10d,0x8
   140026c6b:	je     0x140026c98
   140026c6d:	mov    eax,ebp
   140026c6f:	cmp    rax,QWORD PTR [rsp+0x80]
   140026c77:	jae    0x140026c98
   140026c79:	mov    ecx,DWORD PTR [rcx+0xc]
   140026c7c:	sub    ecx,edx
   140026c7e:	cmp    ecx,0x64
   140026c81:	jbe    0x140026c98
   140026c83:	lea    eax,[rdx+r11*1]
   140026c87:	mov    DWORD PTR [r15],r10d
   140026c8a:	inc    ebp
   140026c8c:	mov    DWORD PTR [r15+0x4],eax
   140026c90:	mov    DWORD PTR [r15+0x8],ecx
   140026c94:	add    r15,0x10
   140026c98:	add    rdi,0x24428
   140026c9f:	sub    r14,0x1
   140026ca3:	jne    0x140026bc4
   140026ca9:	mov    r13d,DWORD PTR [rsp+0x70]
   140026cae:	mov    QWORD PTR [rsp+0x78],r15
   140026cb3:	cmp    r12d,r13d
   140026cb6:	jb     0x140026b00
   140026cbc:	mov    eax,ebp
   140026cbe:	mov    rbx,QWORD PTR [rsp+0x60]
   140026cc3:	add    rsp,0x20
   140026cc7:	pop    r15
   140026cc9:	pop    r14
   140026ccb:	pop    r13
   140026ccd:	pop    r12
   140026ccf:	pop    rdi
   140026cd0:	pop    rsi
   140026cd1:	pop    rbp
   140026cd2:	ret    
   140026cd3:	int3   
   140026cd4:	xor    r8d,r8d
   140026cd7:	mov    r9,rcx
   140026cda:	test   dl,dl
   140026cdc:	jne    0x140026d12
   140026cde:	mov    edx,r8d
   140026ce1:	cmp    QWORD PTR [rcx+0x10],r8
   140026ce5:	jbe    0x140026d12
   140026ce7:	mov    eax,r8d
   140026cea:	lea    r10d,[r8+0x10]
   140026cee:	imul   rcx,rax,0x24428
   140026cf5:	mov    rax,QWORD PTR [r9+0x8]
   140026cf9:	inc    edx
   140026cfb:	mov    DWORD PTR [rcx+rax*1+0x20418],r10d
   140026d03:	add    r10d,0x100
   140026d0a:	mov    eax,edx
   140026d0c:	cmp    rax,QWORD PTR [r9+0x10]
   140026d10:	jb     0x140026cee
   140026d12:	lea    rcx,[r9+0x18]
   140026d16:	inc    r8d
   140026d19:	mov    DWORD PTR [rcx],0x3
   140026d1f:	movsxd rax,r8d
   140026d22:	lea    rcx,[rcx+0xc]
   140026d26:	cmp    rax,0x10
   140026d2a:	jb     0x140026d16
   140026d2c:	mov    BYTE PTR [r9+0xd8],0x1
   140026d34:	ret    
   140026d35:	int3   
   140026d36:	int3   
   140026d37:	int3   
   140026d38:	mov    QWORD PTR [rsp+0x8],rbx
   140026d3d:	mov    QWORD PTR [rsp+0x10],rbp
   140026d42:	mov    QWORD PTR [rsp+0x18],rsi
   140026d47:	push   rdi
   140026d48:	push   r12
   140026d4a:	push   r13
   140026d4c:	push   r14
   140026d4e:	push   r15
   140026d50:	sub    rsp,0x30
   140026d54:	xor    esi,esi
   140026d56:	mov    r12d,r9d
   140026d59:	mov    r13,rdx
   140026d5c:	mov    rbx,rcx
   140026d5f:	cmp    DWORD PTR [rcx+0x4140],esi
   140026d65:	jbe    0x140026e55
   140026d6b:	lea    rbp,[rcx+0x62c8]
   140026d72:	mov    edi,esi
   140026d74:	mov    edx,0x14
   140026d79:	add    rdi,0x14
   140026d7d:	mov    rcx,rbp
   140026d80:	shl    rdi,0x4
   140026d84:	add    rdi,rbx
   140026d87:	movsxd rax,DWORD PTR [rdi+0x4]
   140026d8b:	lea    r15d,[rax+r12*1]
   140026d8f:	and    r15d,DWORD PTR [rbx+0x120]
   140026d96:	lea    r14,[rax+r13*1]
   140026d9a:	call   0x1400108d4
   140026d9f:	mov    ecx,DWORD PTR [rbp+0x1c]
   140026da2:	mov    rax,QWORD PTR [rbp+0x10]
   140026da6:	mov    BYTE PTR [rax+rcx*8],0x6
   140026daa:	mov    BYTE PTR [rax+rcx*8+0x4],0x0
   140026daf:	inc    DWORD PTR [rbp+0x1c]
   140026db2:	mov    eax,DWORD PTR [rbp+0x1c]
   140026db5:	cmp    eax,DWORD PTR [rbp+0x18]
   140026db8:	jb     0x140026dc2
   140026dba:	mov    rcx,rbp
   140026dbd:	call   0x1400105c8
   140026dc2:	mov    edx,DWORD PTR [rbx+0x12c]
   140026dc8:	mov    rcx,rbx
   140026dcb:	sub    edx,DWORD PTR [rbx+0x6164]
   140026dd1:	add    edx,DWORD PTR [rdi+0x4]
   140026dd4:	and    edx,DWORD PTR [rbx+0x120]
   140026dda:	call   0x14002a8c8
   140026ddf:	mov    edx,DWORD PTR [rdi+0x8]
   140026de2:	mov    rcx,rbx
   140026de5:	call   0x14002a8c8
   140026dea:	mov    r9d,DWORD PTR [rbx+0x6170]
   140026df1:	add    r9d,DWORD PTR [rdi+0x4]
   140026df5:	cmp    DWORD PTR [rdi],0x0
   140026df8:	je     0x140026e2f
   140026dfa:	jle    0x140026e47
   140026dfc:	cmp    DWORD PTR [rdi],0x2
   140026dff:	jle    0x140026e17
   140026e01:	cmp    DWORD PTR [rdi],0x3
   140026e04:	jne    0x140026e47
   140026e06:	mov    r8d,DWORD PTR [rdi+0x8]
   140026e0a:	mov    rdx,r14
   140026e0d:	mov    rcx,rbx
   140026e10:	call   0x140027ee8
   140026e15:	jmp    0x140026e47
   140026e17:	mov    r8d,DWORD PTR [rdi+0x8]
   140026e1b:	sete   al
   140026e1e:	mov    rdx,r14
   140026e21:	mov    BYTE PTR [rsp+0x20],al
   140026e25:	mov    rcx,rbx
   140026e28:	call   0x14002812c
   140026e2d:	jmp    0x140026e47
   140026e2f:	mov    r9d,DWORD PTR [rdi+0xc]
   140026e33:	mov    rdx,r14
   140026e36:	mov    r8d,DWORD PTR [rdi+0x8]
   140026e3a:	mov    rcx,rbx
   140026e3d:	mov    DWORD PTR [rsp+0x20],r15d
   140026e42:	call   0x140027fa4
   140026e47:	inc    esi
   140026e49:	cmp    esi,DWORD PTR [rbx+0x4140]
   140026e4f:	jb     0x140026d72
   140026e55:	mov    rbx,QWORD PTR [rsp+0x60]
   140026e5a:	mov    rbp,QWORD PTR [rsp+0x68]
   140026e5f:	mov    rsi,QWORD PTR [rsp+0x70]
   140026e64:	add    rsp,0x30
   140026e68:	pop    r15
   140026e6a:	pop    r14
   140026e6c:	pop    r13
   140026e6e:	pop    r12
   140026e70:	pop    rdi
   140026e71:	ret    
   140026e72:	int3   
   140026e73:	int3   
   140026e74:	mov    QWORD PTR [rsp+0x8],rbx
   140026e79:	mov    QWORD PTR [rsp+0x10],rsi
   140026e7e:	mov    QWORD PTR [rsp+0x18],rdi
   140026e83:	mov    r11d,DWORD PTR [rdx+0x8]
   140026e87:	mov    rsi,rcx
   140026e8a:	mov    ebx,DWORD PTR [rdx+0xc]
   140026e8d:	mov    rdi,QWORD PTR [rdx+0x10]
   140026e91:	add    rbx,r11
   140026e94:	jmp    0x140026f11
   140026e96:	mov    rcx,QWORD PTR [rsi+0xe0]
   140026e9d:	movzx  eax,BYTE PTR [rcx+r11*1]
   140026ea2:	movzx  r9d,BYTE PTR [rcx+r11*1+0x2]
   140026ea8:	movzx  r8d,BYTE PTR [rcx+r11*1+0x3]
   140026eae:	movzx  edx,BYTE PTR [rcx+r11*1+0x4]
   140026eb4:	imul   r10d,eax,0x2773
   140026ebb:	movzx  eax,BYTE PTR [rcx+r11*1+0x1]
   140026ec1:	xor    r10d,eax
   140026ec4:	imul   eax,r10d,0x2773
   140026ecb:	and    r10d,0x3fff
   140026ed2:	xor    r9d,eax
   140026ed5:	imul   eax,r9d,0x2773
   140026edc:	and    r9d,0x3ffff
   140026ee3:	xor    r8d,eax
   140026ee6:	imul   eax,r8d,0x2773
   140026eed:	and    r8d,0x3ffff
   140026ef4:	xor    edx,eax
   140026ef6:	and    edx,DWORD PTR [rsi+0x114]
   140026efc:	mov    DWORD PTR [rdi+0xc],edx
   140026eff:	inc    r11
   140026f02:	mov    DWORD PTR [rdi],r10d
   140026f05:	mov    DWORD PTR [rdi+0x4],r9d
   140026f09:	mov    DWORD PTR [rdi+0x8],r8d
   140026f0d:	lea    rdi,[rdi+0x10]
   140026f11:	cmp    r11,rbx
   140026f14:	jne    0x140026e96
   140026f16:	mov    rbx,QWORD PTR [rsp+0x8]
   140026f1b:	mov    rsi,QWORD PTR [rsp+0x10]
   140026f20:	mov    rdi,QWORD PTR [rsp+0x18]
   140026f25:	ret    
   140026f26:	int3   
   140026f27:	int3   
   140026f28:	mov    rdx,rcx
   140026f2b:	mov    rcx,QWORD PTR [rcx]
   140026f2e:	jmp    0x140026e74
   140026f33:	int3   
   140026f34:	mov    rax,rsp
   140026f37:	mov    QWORD PTR [rax+0x8],rbx
   140026f3b:	mov    QWORD PTR [rax+0x10],rbp
   140026f3f:	mov    QWORD PTR [rax+0x18],rsi
   140026f43:	mov    QWORD PTR [rax+0x20],rdi
   140026f47:	push   r12
   140026f49:	push   r14
   140026f4b:	push   r15
   140026f4d:	mov    r12,QWORD PTR [rcx+0x6188]
   140026f54:	lea    r15d,[rdx+r8*1]
   140026f58:	mov    r14,rcx
   140026f5b:	mov    ebp,edx
   140026f5d:	jmp    0x14002703d
   140026f62:	mov    rcx,QWORD PTR [r14+0xe0]
   140026f69:	mov    r11,QWORD PTR [r14+0xe8]
   140026f70:	movzx  eax,BYTE PTR [rcx+rbp*1]
   140026f74:	movzx  r8d,BYTE PTR [rcx+rbp*1+0x2]
   140026f7a:	movzx  r10d,BYTE PTR [rcx+rbp*1+0x3]
   140026f80:	imul   edx,eax,0x2773
   140026f86:	movzx  eax,BYTE PTR [rcx+rbp*1+0x1]
   140026f8b:	movzx  ecx,BYTE PTR [rcx+rbp*1+0x4]
   140026f90:	xor    edx,eax
   140026f92:	imul   eax,edx,0x2773
   140026f98:	and    edx,0x3fff
   140026f9e:	mov    ebx,edx
   140026fa0:	mov    sil,BYTE PTR [rdx+r11*1]
   140026fa4:	xor    r8d,eax
   140026fa7:	imul   eax,r8d,0x2773
   140026fae:	and    r8d,0x3ffff
   140026fb5:	mov    r9d,r8d
   140026fb8:	xor    r10d,eax
   140026fbb:	imul   eax,r10d,0x2773
   140026fc2:	and    r10d,0x3ffff
   140026fc9:	mov    edx,r10d
   140026fcc:	xor    ecx,eax
   140026fce:	mov    rax,QWORD PTR [r14+0xf0]
   140026fd5:	and    ecx,DWORD PTR [r14+0x114]
   140026fdc:	movzx  edi,WORD PTR [rax+r8*2]
   140026fe1:	mov    rax,QWORD PTR [r14+0xf8]
   140026fe8:	mov    r8d,DWORD PTR [rax+r10*4]
   140026fec:	mov    rax,QWORD PTR [r14+0x100]
   140026ff3:	mov    r10d,DWORD PTR [rax+rcx*4]
   140026ff7:	mov    BYTE PTR [rbx+r11*1],bpl
   140026ffb:	mov    rax,QWORD PTR [r14+0xf0]
   140027002:	mov    WORD PTR [rax+r9*2],bp
   140027007:	mov    rax,QWORD PTR [r14+0xf8]
   14002700e:	mov    DWORD PTR [rax+rdx*4],ebp
   140027011:	mov    rax,QWORD PTR [r14+0x100]
   140027018:	mov    DWORD PTR [rax+rcx*4],ebp
   14002701b:	mov    DWORD PTR [r12+0x3],r8d
   140027020:	mov    WORD PTR [r12+0x1],di
   140027026:	mov    BYTE PTR [r12],sil
   14002702a:	lea    r12,[r12+0x7]
   14002702f:	mov    rax,QWORD PTR [r14+0x108]
   140027036:	mov    DWORD PTR [rax+rbp*4],r10d
   14002703a:	inc    rbp
   14002703d:	cmp    rbp,r15
   140027040:	jne    0x140026f62
   140027046:	mov    rbx,QWORD PTR [rsp+0x20]
   14002704b:	mov    rbp,QWORD PTR [rsp+0x28]
   140027050:	mov    rsi,QWORD PTR [rsp+0x30]
   140027055:	mov    rdi,QWORD PTR [rsp+0x38]
   14002705a:	pop    r15
   14002705c:	pop    r14
   14002705e:	pop    r12
   140027060:	ret    
   140027061:	int3   
   140027062:	int3   
   140027063:	int3   
   140027064:	mov    rax,rsp
   140027067:	push   rbx
   140027068:	sub    rsp,0x50
   14002706c:	mov    rbx,rcx
   14002706f:	mov    QWORD PTR [rax-0x38],rcx
   140027073:	mov    rcx,QWORD PTR [rcx+0x6180]
   14002707a:	mov    DWORD PTR [rax-0x30],edx
   14002707d:	lea    rdx,[rip+0x580]        # 0x140027604
   140027084:	mov    DWORD PTR [rax-0x2c],r8d
   140027088:	lea    r8,[rax-0x38]
   14002708c:	call   0x140046dd8
   140027091:	mov    rcx,QWORD PTR [rbx+0x6180]
   140027098:	lea    r8,[rsp+0x20]
   14002709d:	lea    rdx,[rip+0x464]        # 0x140027508
   1400270a4:	call   0x140046dd8
   1400270a9:	mov    rcx,QWORD PTR [rbx+0x6180]
   1400270b0:	call   0x140047214
   1400270b5:	add    rsp,0x50
   1400270b9:	pop    rbx
   1400270ba:	ret    
   1400270bb:	int3   
   1400270bc:	cmp    DWORD PTR [rcx+0x130],0x0
   1400270c3:	mov    eax,DWORD PTR [rcx+0x6164]
   1400270c9:	mov    DWORD PTR [rcx+0x6190],eax
   1400270cf:	je     0x140027224
   1400270d5:	mov    eax,DWORD PTR [rcx+0x6298]
   1400270db:	cmp    eax,0x2
   1400270de:	jb     0x1400270f7
   1400270e0:	cmp    r8d,0x100
   1400270e7:	jb     0x1400270f7
   1400270e9:	cmp    eax,0x8
   1400270ec:	jb     0x140027064
   1400270f2:	jmp    0x140027280
   1400270f7:	jmp    0x140026f34
   1400270fc:	mov    QWORD PTR [rsp+0x8],rbx
   140027101:	mov    QWORD PTR [rsp+0x10],rdi
   140027106:	mov    r9d,DWORD PTR [rdx+0x24]
   14002710a:	mov    rbx,rcx
   14002710d:	mov    r8d,DWORD PTR [rdx+0x8]
   140027111:	mov    eax,DWORD PTR [rdx+0xc]
   140027114:	mov    r11,QWORD PTR [rdx+0x10]
   140027118:	mov    r10,QWORD PTR [rdx+0x18]
   14002711c:	mov    edi,DWORD PTR [rdx+0x20]
   14002711f:	cmp    r9d,0x5
   140027123:	jne    0x140027177
   140027125:	mov    r11d,DWORD PTR [rcx+0x62b8]
   14002712c:	lea    r9,[r8+rax*1]
   140027130:	dec    r11d
   140027133:	cmp    r8,r9
   140027136:	je     0x140027219
   14002713c:	add    r10,0xc
   140027140:	mov    eax,DWORD PTR [r10]
   140027143:	xor    eax,edi
   140027145:	test   r11d,eax
   140027148:	jne    0x140027166
   14002714a:	mov    rax,QWORD PTR [rbx+0x100]
   140027151:	mov    edx,DWORD PTR [r10]
   140027154:	mov    ecx,DWORD PTR [rax+rdx*4]
   140027157:	mov    DWORD PTR [rax+rdx*4],r8d
   14002715b:	mov    rax,QWORD PTR [rbx+0x108]
   140027162:	mov    DWORD PTR [rax+r8*4],ecx
   140027166:	add    r10,0x10
   14002716a:	inc    r8
   14002716d:	cmp    r8,r9
   140027170:	jne    0x140027140
   140027172:	jmp    0x140027219
   140027177:	cmp    r9d,0x2
   14002717b:	jne    0x1400271a9
   14002717d:	lea    r9,[r8+rax*1]
   140027181:	jmp    0x1400271a2
   140027183:	mov    edx,DWORD PTR [r10]
   140027186:	lea    r10,[r10+0x10]
   14002718a:	mov    rcx,QWORD PTR [rbx+0xe8]
   140027191:	mov    al,BYTE PTR [rdx+rcx*1]
   140027194:	mov    BYTE PTR [rdx+rcx*1],r8b
   140027198:	inc    r8
   14002719b:	mov    BYTE PTR [r11],al
   14002719e:	lea    r11,[r11+0x7]
   1400271a2:	cmp    r8,r9
   1400271a5:	jne    0x140027183
   1400271a7:	jmp    0x140027219
   1400271a9:	cmp    r9d,0x3
   1400271ad:	lea    r9,[r8+rax*1]
   1400271b1:	jne    0x1400271e8
   1400271b3:	cmp    r8,r9
   1400271b6:	je     0x140027219
   1400271b8:	inc    r11
   1400271bb:	add    r10,0x4
   1400271bf:	mov    edx,DWORD PTR [r10]
   1400271c2:	lea    r10,[r10+0x10]
   1400271c6:	mov    rcx,QWORD PTR [rbx+0xf0]
   1400271cd:	movzx  eax,WORD PTR [rcx+rdx*2]
   1400271d1:	mov    WORD PTR [rcx+rdx*2],r8w
   1400271d6:	inc    r8
   1400271d9:	mov    WORD PTR [r11],ax
   1400271dd:	lea    r11,[r11+0x7]
   1400271e1:	cmp    r8,r9
   1400271e4:	jne    0x1400271bf
   1400271e6:	jmp    0x140027219
   1400271e8:	cmp    r8,r9
   1400271eb:	je     0x140027219
   1400271ed:	add    r11,0x3
   1400271f1:	add    r10,0x8
   1400271f5:	mov    edx,DWORD PTR [r10]
   1400271f8:	lea    r10,[r10+0x10]
   1400271fc:	mov    rcx,QWORD PTR [rbx+0xf8]
   140027203:	mov    eax,DWORD PTR [rcx+rdx*4]
   140027206:	mov    DWORD PTR [rcx+rdx*4],r8d
   14002720a:	inc    r8
   14002720d:	mov    DWORD PTR [r11],eax
   140027210:	lea    r11,[r11+0x7]
   140027214:	cmp    r8,r9
   140027217:	jne    0x1400271f5
   140027219:	mov    rbx,QWORD PTR [rsp+0x8]
   14002721e:	mov    rdi,QWORD PTR [rsp+0x10]
   140027223:	ret    
   140027224:	mov    r11,rcx
   140027227:	mov    r9d,edx
   14002722a:	lea    r10d,[rdx+r8*1]
   14002722e:	jmp    0x140027277
   140027230:	mov    r8,QWORD PTR [r11+0xe0]
   140027237:	movzx  eax,BYTE PTR [r9+r8*1]
   14002723c:	movzx  edx,BYTE PTR [r9+r8*1+0x1]
   140027242:	imul   ecx,eax,0x2773
   140027248:	movzx  eax,BYTE PTR [r9+r8*1+0x2]
   14002724e:	xor    edx,ecx
   140027250:	imul   ecx,edx,0x2773
   140027256:	xor    ecx,eax
   140027258:	mov    rax,QWORD PTR [r11+0x100]
   14002725f:	movzx  edx,cx
   140027262:	mov    ecx,DWORD PTR [rax+rdx*4]
   140027265:	mov    DWORD PTR [rax+rdx*4],r9d
   140027269:	mov    rax,QWORD PTR [r11+0x108]
   140027270:	mov    DWORD PTR [rax+r9*4],ecx
   140027274:	inc    r9
   140027277:	cmp    r9,r10
   14002727a:	jne    0x140027230
   14002727c:	ret    
   14002727d:	int3   
   14002727e:	int3   
   14002727f:	int3   
   140027280:	test   r8d,r8d
   140027283:	je     0x14002747e
   140027289:	mov    QWORD PTR [rsp+0x10],rbx
   14002728e:	mov    QWORD PTR [rsp+0x18],rbp
   140027293:	mov    QWORD PTR [rsp+0x20],rsi
   140027298:	push   rdi
   140027299:	push   r12
   14002729b:	push   r13
   14002729d:	push   r14
   14002729f:	push   r15
   1400272a1:	sub    rsp,0x940
   1400272a8:	mov    rax,QWORD PTR [rip+0x5ac31]        # 0x140081ee0
   1400272af:	xor    rax,rsp
   1400272b2:	mov    QWORD PTR [rsp+0x930],rax
   1400272ba:	xor    esi,esi
   1400272bc:	mov    DWORD PTR [rsp+0x28],r8d
   1400272c1:	mov    ebp,r8d
   1400272c4:	mov    DWORD PTR [rsp+0x20],edx
   1400272c8:	mov    r9d,edx
   1400272cb:	mov    DWORD PTR [rsp+0x24],esi
   1400272cf:	mov    rdi,rcx
   1400272d2:	mov    edx,0x20000
   1400272d7:	mov    r8d,0x400
   1400272dd:	mov    ecx,DWORD PTR [rdi+0x6298]
   1400272e3:	mov    eax,ebp
   1400272e5:	sub    eax,esi
   1400272e7:	mov    r15d,esi
   1400272ea:	cmp    eax,edx
   1400272ec:	cmova  eax,edx
   1400272ef:	xor    edx,edx
   1400272f1:	div    ecx
   1400272f3:	cmp    eax,r8d
   1400272f6:	mov    r14d,eax
   1400272f9:	cmovb  r14d,r8d
   1400272fd:	xor    r12d,r12d
   140027300:	test   ecx,ecx
   140027302:	je     0x14002737c
   140027304:	mov    ecx,ebp
   140027306:	sub    ecx,esi
   140027308:	je     0x140027378
   14002730a:	cmp    ecx,r14d
   14002730d:	mov    eax,r12d
   140027310:	mov    ebx,r14d
   140027313:	lea    r8,[rsp+0x530]
   14002731b:	cmovb  ebx,ecx
   14002731e:	lea    rdx,[rip+0xfffffffffffffc03]        # 0x140026f28
   140027325:	shl    rax,0x5
   140027329:	add    r8,rax
   14002732c:	mov    ecx,esi
   14002732e:	sub    rcx,r15
   140027331:	lea    eax,[rsi+r9*1]
   140027335:	and    eax,DWORD PTR [rdi+0x120]
   14002733b:	shl    rcx,0x4
   14002733f:	add    rcx,QWORD PTR [rdi+0x62b0]
   140027346:	mov    QWORD PTR [r8+0x10],rcx
   14002734a:	mov    rcx,QWORD PTR [rdi+0x6180]
   140027351:	mov    QWORD PTR [r8],rdi
   140027354:	mov    DWORD PTR [r8+0x8],eax
   140027358:	mov    DWORD PTR [r8+0xc],ebx
   14002735c:	mov    DWORD PTR [r8+0x18],r12d
   140027360:	call   0x140046dd8
   140027365:	mov    r9d,DWORD PTR [rsp+0x20]
   14002736a:	add    esi,ebx
   14002736c:	inc    r12d
   14002736f:	cmp    r12d,DWORD PTR [rdi+0x6298]
   140027376:	jb     0x140027304
   140027378:	mov    DWORD PTR [rsp+0x24],esi
   14002737c:	mov    rcx,QWORD PTR [rdi+0x6180]
   140027383:	call   0x140047214
   140027388:	mov    ebx,DWORD PTR [rdi+0x62b8]
   14002738e:	mov    r13d,0x0
   140027394:	add    ebx,0x3
   140027397:	je     0x14002742a
   14002739d:	mov    ebp,DWORD PTR [rsp+0x20]
   1400273a1:	lea    r14,[rsp+0x38]
   1400273a6:	mov    r12d,esi
   1400273a9:	add    ebp,r15d
   1400273ac:	sub    r12d,r15d
   1400273af:	imul   rsi,r15,0x7
   1400273b3:	lea    r15,[rsp+0x30]
   1400273b8:	mov    rcx,QWORD PTR [rdi+0x6188]
   1400273bf:	lea    rdx,[rip+0xba]        # 0x140027480
   1400273c6:	add    rcx,rsi
   1400273c9:	mov    QWORD PTR [r14-0x8],rdi
   1400273cd:	mov    QWORD PTR [r14+0x8],rcx
   1400273d1:	mov    eax,ebp
   1400273d3:	and    eax,DWORD PTR [rdi+0x120]
   1400273d9:	mov    ecx,0x5
   1400273de:	mov    DWORD PTR [r14],eax
   1400273e1:	cmp    r13d,0x3
   1400273e5:	mov    rax,QWORD PTR [rdi+0x62b0]
   1400273ec:	mov    r8,r15
   1400273ef:	mov    QWORD PTR [r14+0x10],rax
   1400273f3:	lea    eax,[r13+0x2]
   1400273f7:	cmovb  ecx,eax
   1400273fa:	mov    DWORD PTR [r14+0x4],r12d
   1400273fe:	mov    DWORD PTR [r14+0x1c],ecx
   140027402:	mov    rcx,QWORD PTR [rdi+0x6180]
   140027409:	mov    DWORD PTR [r14+0x18],r13d
   14002740d:	call   0x140046dd8
   140027412:	inc    r13d
   140027415:	lea    r14,[r14+0x28]
   140027419:	add    r15,0x28
   14002741d:	cmp    r13d,ebx
   140027420:	jb     0x1400273b8
   140027422:	mov    esi,DWORD PTR [rsp+0x24]
   140027426:	mov    ebp,DWORD PTR [rsp+0x28]
   14002742a:	mov    rcx,QWORD PTR [rdi+0x6180]
   140027431:	call   0x140047214
   140027436:	mov    r9d,DWORD PTR [rsp+0x20]
   14002743b:	mov    edx,0x20000
   140027440:	mov    r8d,0x400
   140027446:	cmp    esi,ebp
   140027448:	jb     0x1400272dd
   14002744e:	mov    rcx,QWORD PTR [rsp+0x930]
   140027456:	xor    rcx,rsp
   140027459:	call   0x140055f90
   14002745e:	lea    r11,[rsp+0x940]
   140027466:	mov    rbx,QWORD PTR [r11+0x38]
   14002746a:	mov    rbp,QWORD PTR [r11+0x40]
   14002746e:	mov    rsi,QWORD PTR [r11+0x48]
   140027472:	mov    rsp,r11
   140027475:	pop    r15
   140027477:	pop    r14
   140027479:	pop    r13
   14002747b:	pop    r12
   14002747d:	pop    rdi
   14002747e:	ret    
   14002747f:	int3   
   140027480:	mov    rdx,rcx
   140027483:	mov    rcx,QWORD PTR [rcx]
   140027486:	jmp    0x1400270fc
   14002748b:	int3   
   14002748c:	mov    r11,rcx
   14002748f:	mov    r9d,edx
   140027492:	lea    r10d,[rdx+r8*1]
   140027496:	jmp    0x140027501
   140027498:	mov    r8,QWORD PTR [r11+0xe0]
   14002749f:	movzx  eax,BYTE PTR [r9+r8*1]
   1400274a4:	movzx  edx,BYTE PTR [r9+r8*1+0x1]
   1400274aa:	imul   ecx,eax,0x2773
   1400274b0:	movzx  eax,BYTE PTR [r9+r8*1+0x2]
   1400274b6:	xor    edx,ecx
   1400274b8:	imul   ecx,edx,0x2773
   1400274be:	xor    ecx,eax
   1400274c0:	movzx  eax,BYTE PTR [r9+r8*1+0x3]
   1400274c6:	imul   edx,ecx,0x2773
   1400274cc:	xor    edx,eax
   1400274ce:	movzx  eax,BYTE PTR [r9+r8*1+0x4]
   1400274d4:	imul   ecx,edx,0x2773
   1400274da:	xor    ecx,eax
   1400274dc:	mov    rax,QWORD PTR [r11+0x100]
   1400274e3:	and    ecx,DWORD PTR [r11+0x114]
   1400274ea:	mov    edx,ecx
   1400274ec:	mov    ecx,DWORD PTR [rax+rcx*4]
   1400274ef:	mov    DWORD PTR [rax+rdx*4],r9d
   1400274f3:	mov    rax,QWORD PTR [r11+0x108]
   1400274fa:	mov    DWORD PTR [rax+r9*4],ecx
   1400274fe:	inc    r9
   140027501:	cmp    r9,r10
   140027504:	jne    0x140027498
   140027506:	ret    
   140027507:	int3   
   140027508:	mov    r8d,DWORD PTR [rcx+0xc]
   14002750c:	mov    edx,DWORD PTR [rcx+0x8]
   14002750f:	mov    rcx,QWORD PTR [rcx]
   140027512:	jmp    0x14002748c
   140027517:	int3   
   140027518:	mov    rax,rsp
   14002751b:	mov    QWORD PTR [rax+0x8],rbx
   14002751f:	mov    QWORD PTR [rax+0x10],rbp
   140027523:	mov    QWORD PTR [rax+0x18],rsi
   140027527:	mov    QWORD PTR [rax+0x20],rdi
   14002752b:	push   r14
   14002752d:	mov    r14,QWORD PTR [rcx+0x6188]
   140027534:	lea    ebp,[rdx+r8*1]
   140027538:	mov    rsi,rcx
   14002753b:	mov    edi,edx
   14002753d:	jmp    0x1400275e4
   140027542:	mov    rcx,QWORD PTR [rsi+0xe0]
   140027549:	mov    r9,QWORD PTR [rsi+0xe8]
   140027550:	movzx  eax,BYTE PTR [rcx+rdi*1]
   140027554:	movzx  r10d,BYTE PTR [rcx+rdi*1+0x2]
   14002755a:	movzx  edx,BYTE PTR [rcx+rdi*1+0x3]
   14002755f:	imul   r8d,eax,0x2773
   140027566:	movzx  eax,BYTE PTR [rcx+rdi*1+0x1]
   14002756b:	xor    r8d,eax
   14002756e:	imul   eax,r8d,0x2773
   140027575:	and    r8d,0x3fff
   14002757c:	mov    r11d,r8d
   14002757f:	mov    bl,BYTE PTR [r8+r9*1]
   140027583:	xor    r10d,eax
   140027586:	mov    eax,r10d
   140027589:	and    r10d,0x3ffff
   140027590:	imul   eax,eax,0x2773
   140027596:	mov    r8d,r10d
   140027599:	xor    edx,eax
   14002759b:	mov    rax,QWORD PTR [rsi+0xf0]
   1400275a2:	and    edx,0x3ffff
   1400275a8:	movzx  r10d,WORD PTR [rax+r10*2]
   1400275ad:	mov    rax,QWORD PTR [rsi+0xf8]
   1400275b4:	mov    ecx,DWORD PTR [rax+rdx*4]
   1400275b7:	mov    BYTE PTR [r11+r9*1],dil
   1400275bb:	mov    rax,QWORD PTR [rsi+0xf0]
   1400275c2:	mov    WORD PTR [rax+r8*2],di
   1400275c7:	mov    rax,QWORD PTR [rsi+0xf8]
   1400275ce:	mov    DWORD PTR [rax+rdx*4],edi
   1400275d1:	inc    rdi
   1400275d4:	mov    DWORD PTR [r14+0x3],ecx
   1400275d8:	mov    WORD PTR [r14+0x1],r10w
   1400275dd:	mov    BYTE PTR [r14],bl
   1400275e0:	lea    r14,[r14+0x7]
   1400275e4:	cmp    rdi,rbp
   1400275e7:	jne    0x140027542
   1400275ed:	mov    rbx,QWORD PTR [rsp+0x10]
   1400275f2:	mov    rbp,QWORD PTR [rsp+0x18]
   1400275f7:	mov    rsi,QWORD PTR [rsp+0x20]
   1400275fc:	mov    rdi,QWORD PTR [rsp+0x28]
   140027601:	pop    r14
   140027603:	ret    
   140027604:	mov    r8d,DWORD PTR [rcx+0xc]
   140027608:	mov    edx,DWORD PTR [rcx+0x8]
   14002760b:	mov    rcx,QWORD PTR [rcx]
   14002760e:	jmp    0x140027518
   140027613:	int3   
   140027614:	mov    QWORD PTR [rsp+0x8],rbx
   140027619:	mov    QWORD PTR [rsp+0x10],rbp
   14002761e:	mov    QWORD PTR [rsp+0x18],rsi
   140027623:	push   rdi
   140027624:	sub    rsp,0x20
   140027628:	mov    r11d,DWORD PTR [rdx+0x20418]
   14002762f:	lea    rcx,[rdx+0x418]
   140027636:	movsxd rbp,r9d
   140027639:	xor    r10d,r10d
   14002763c:	mov    rdi,rdx
   14002763f:	mov    ebx,r10d
   140027642:	lea    eax,[r11+0x1]
   140027646:	mov    DWORD PTR [rdx+0x20418],eax
   14002764c:	lea    rax,[r8+rbp*1]
   140027650:	mov    r9,rax
   140027653:	sub    r9,r8
   140027656:	cmp    r8,rax
   140027659:	cmova  r9,r10
   14002765d:	test   r9,r9
   140027660:	je     0x14002769c
   140027662:	mov    rdx,r8
   140027665:	lea    esi,[r11-0x3]
   140027669:	neg    rdx
   14002766c:	movzx  eax,BYTE PTR [r8]
   140027670:	shl    r10d,0x5
   140027674:	xor    r10d,eax
   140027677:	and    r10d,0x7fff
   14002767e:	cmp    DWORD PTR [rcx+r10*4],esi
   140027682:	jb     0x14002768c
   140027684:	cmp    DWORD PTR [rcx+r10*4],r11d
   140027688:	ja     0x14002768c
   14002768a:	inc    ebx
   14002768c:	inc    r8
   14002768f:	mov    DWORD PTR [rcx+r10*4],r11d
   140027693:	lea    rax,[rdx+r8*1]
   140027697:	cmp    rax,r9
   14002769a:	jb     0x14002766c
   14002769c:	cmp    DWORD PTR [rdi+0x20418],0x40000000
   1400276a6:	jne    0x1400276bf
   1400276a8:	xor    edx,edx
   1400276aa:	mov    r8d,0x20000
   1400276b0:	call   0x140058f40
   1400276b5:	mov    DWORD PTR [rdi+0x20418],0x10
   1400276bf:	mov    rsi,QWORD PTR [rsp+0x40]
   1400276c4:	xor    edx,edx
   1400276c6:	shl    ebx,0x8
   1400276c9:	mov    eax,ebx
   1400276cb:	mov    rbx,QWORD PTR [rsp+0x30]
   1400276d0:	div    ebp
   1400276d2:	mov    rbp,QWORD PTR [rsp+0x38]
   1400276d7:	add    rsp,0x20
   1400276db:	pop    rdi
   1400276dc:	ret    
   1400276dd:	int3   
   1400276de:	int3   
   1400276df:	int3   
   1400276e0:	rex push rbx
   1400276e2:	sub    rsp,0x20
   1400276e6:	mov    rax,QWORD PTR [rip+0x5a7f3]        # 0x140081ee0
   1400276ed:	xor    rax,rsp
   1400276f0:	mov    QWORD PTR [rsp+0x10],rax
   1400276f5:	xor    eax,eax
   1400276f7:	lea    ebx,[r8-0x4]
   1400276fb:	xor    r9d,r9d
   1400276fe:	mov    QWORD PTR [rsp],rax
   140027702:	xor    r11d,r11d
   140027705:	mov    QWORD PTR [rsp+0x8],rax
   14002770a:	xor    r10d,r10d
   14002770d:	test   ebx,ebx
   14002770f:	jle    0x140027775
   140027711:	add    rdx,0x2
   140027715:	cmp    BYTE PTR [rdx+0x1],0xeb
   140027719:	jne    0x140027768
   14002771b:	movzx  eax,BYTE PTR [rdx-0x1]
   14002771f:	movzx  ecx,BYTE PTR [rdx]
   140027722:	shl    ecx,0x8
   140027725:	add    ecx,eax
   140027727:	movzx  eax,BYTE PTR [rdx-0x2]
   14002772b:	shl    ecx,0x8
   14002772e:	add    ecx,eax
   140027730:	mov    eax,r10d
   140027733:	shr    eax,0x2
   140027736:	add    ecx,eax
   140027738:	lea    rax,[rsp]
   14002773c:	xor    r8d,r8d
   14002773f:	cmp    DWORD PTR [rax],ecx
   140027741:	jne    0x140027750
   140027743:	test   ecx,ecx
   140027745:	je     0x140027750
   140027747:	inc    r11d
   14002774a:	cmp    r11d,0x8
   14002774e:	je     0x14002778d
   140027750:	inc    r8d
   140027753:	add    rax,0x4
   140027757:	cmp    r8d,0x4
   14002775b:	jb     0x14002773f
   14002775d:	mov    DWORD PTR [rsp+r9*4],ecx
   140027761:	inc    r9d
   140027764:	and    r9d,0x3
   140027768:	add    r10d,0x4
   14002776c:	add    rdx,0x4
   140027770:	cmp    r10d,ebx
   140027773:	jl     0x140027715
   140027775:	mov    eax,0x8
   14002777a:	mov    rcx,QWORD PTR [rsp+0x10]
   14002777f:	xor    rcx,rsp
   140027782:	call   0x140055f90
   140027787:	add    rsp,0x20
   14002778b:	pop    rbx
   14002778c:	ret    
   14002778d:	mov    eax,0x3
   140027792:	jmp    0x14002777a
   140027794:	mov    QWORD PTR [rsp+0x8],rbx
   140027799:	mov    QWORD PTR [rsp+0x10],rbp
   14002779e:	mov    QWORD PTR [rsp+0x18],rsi
   1400277a3:	push   rdi
   1400277a4:	push   r12
   1400277a6:	push   r13
   1400277a8:	push   r14
   1400277aa:	push   r15
   1400277ac:	sub    rsp,0x20
   1400277b0:	mov    rax,QWORD PTR [rip+0x5a729]        # 0x140081ee0
   1400277b7:	xor    rax,rsp
   1400277ba:	mov    QWORD PTR [rsp+0x10],rax
   1400277bf:	mov    eax,r8d
   1400277c2:	lea    ecx,[r8-0x5]
   1400277c6:	mov    r10,rdx
   1400277c9:	movsxd r12,ecx
   1400277cc:	cdq    
   1400277cd:	xor    r11d,r11d
   1400277d0:	and    edx,0x7f
   1400277d3:	xor    r14d,r14d
   1400277d6:	xor    ebx,ebx
   1400277d8:	xor    r15d,r15d
   1400277db:	xor    r9b,r9b
   1400277de:	xor    ebp,ebp
   1400277e0:	lea    esi,[rdx+rax*1]
   1400277e3:	xor    eax,eax
   1400277e5:	sar    esi,0x7
   1400277e8:	mov    QWORD PTR [rsp],rax
   1400277ec:	mov    QWORD PTR [rsp+0x8],rax
   1400277f1:	test   ecx,ecx
   1400277f3:	jle    0x1400278df
   1400277f9:	lea    rdi,[rbx-0x4]
   1400277fd:	sub    rdi,r10
   140027800:	lea    r8,[r10+0x4]
   140027804:	lea    r13d,[r11+0x1]
   140027808:	mov    al,BYTE PTR [r8-0x4]
   14002780c:	add    al,0x18
   14002780e:	cmp    al,r13b
   140027811:	ja     0x1400278cc
   140027817:	movzx  eax,BYTE PTR [r8-0x2]
   14002781c:	movzx  edx,BYTE PTR [r8]
   140027820:	movzx  ecx,BYTE PTR [r8-0x1]
   140027825:	shl    ecx,0x8
   140027828:	or     ecx,eax
   14002782a:	mov    eax,edx
   14002782c:	shl    eax,0x18
   14002782f:	shl    ecx,0x8
   140027832:	or     ecx,eax
   140027834:	movzx  eax,BYTE PTR [r8-0x3]
   140027839:	or     ecx,eax
   14002783b:	test   dl,dl
   14002783d:	jne    0x140027843
   14002783f:	test   ecx,ecx
   140027841:	jne    0x14002784c
   140027843:	cmp    dl,0xff
   140027846:	jne    0x1400278cc
   14002784c:	test   r9b,r9b
   14002784f:	jne    0x14002788f
   140027851:	lea    edx,[rcx+rbp*1]
   140027854:	xor    r10d,r10d
   140027857:	lea    rcx,[rsp]
   14002785b:	cmp    DWORD PTR [rcx],edx
   14002785d:	jne    0x140027863
   14002785f:	test   edx,edx
   140027861:	jne    0x140027875
   140027863:	add    r10d,r13d
   140027866:	add    rcx,0x4
   14002786a:	movsxd rax,r10d
   14002786d:	cmp    rax,0x4
   140027871:	jae    0x140027884
   140027873:	jmp    0x14002785b
   140027875:	add    r15d,r13d
   140027878:	movzx  r9d,r9b
   14002787c:	cmp    r15d,0x8
   140027880:	cmove  r9d,r13d
   140027884:	movsxd rax,ebx
   140027887:	inc    ebx
   140027889:	and    ebx,0x3
   14002788c:	mov    DWORD PTR [rsp+rax*4],edx
   14002788f:	cmp    BYTE PTR [r8-0x4],0xe8
   140027894:	jne    0x1400278a8
   140027896:	add    r11d,r13d
   140027899:	cmp    r11d,esi
   14002789c:	jl     0x1400278cc
   14002789e:	test   r9b,r9b
   1400278a1:	je     0x1400278cc
   1400278a3:	mov    eax,r13d
   1400278a6:	jmp    0x1400278e4
   1400278a8:	mov    eax,esi
   1400278aa:	add    r14d,r13d
   1400278ad:	cdq    
   1400278ae:	and    edx,0x3
   1400278b1:	add    eax,edx
   1400278b3:	sar    eax,0x2
   1400278b6:	cmp    r14d,eax
   1400278b9:	jl     0x1400278cc
   1400278bb:	mov    eax,esi
   1400278bd:	cdq    
   1400278be:	sub    eax,edx
   1400278c0:	sar    eax,1
   1400278c2:	cmp    r11d,eax
   1400278c5:	jle    0x1400278cc
   1400278c7:	test   r9b,r9b
   1400278ca:	jne    0x14002790e
   1400278cc:	add    r8,r13
   1400278cf:	add    ebp,r13d
   1400278d2:	lea    rax,[rdi+r8*1]
   1400278d6:	cmp    rax,r12
   1400278d9:	jl     0x140027808
   1400278df:	mov    eax,0x8
   1400278e4:	mov    rcx,QWORD PTR [rsp+0x10]
   1400278e9:	xor    rcx,rsp
   1400278ec:	call   0x140055f90
   1400278f1:	mov    rbx,QWORD PTR [rsp+0x50]
   1400278f6:	mov    rbp,QWORD PTR [rsp+0x58]
   1400278fb:	mov    rsi,QWORD PTR [rsp+0x60]
   140027900:	add    rsp,0x20
   140027904:	pop    r15
   140027906:	pop    r14
   140027908:	pop    r13
   14002790a:	pop    r12
   14002790c:	pop    rdi
   14002790d:	ret    
   14002790e:	mov    eax,0x2
   140027913:	jmp    0x1400278e4
   140027915:	int3   
   140027916:	int3   
   140027917:	int3   
   140027918:	add    rcx,0x62c8
   14002791f:	jmp    0x1400105c8
   140027924:	mov    QWORD PTR [rsp+0x18],rbx
   140027929:	push   rbp
   14002792a:	push   rsi
   14002792b:	push   rdi
   14002792c:	push   r12
   14002792e:	push   r13
   140027930:	push   r14
   140027932:	push   r15
   140027934:	sub    rsp,0x20
   140027938:	lea    rbx,[rcx+0x62c8]
   14002793f:	mov    rdi,rcx
   140027942:	mov    rcx,rbx
   140027945:	call   0x1400105c8
   14002794a:	mov    esi,DWORD PTR [rsp+0x60]
   14002794e:	lea    r10,[rdi+0x4150]
   140027955:	mov    r12d,DWORD PTR [r10]
   140027958:	xor    ebp,ebp
   14002795a:	mov    DWORD PTR [rsp+0x68],r12d
   14002795f:	lea    r13d,[rbp+0x1]
   140027963:	mov    r9d,DWORD PTR [rdi+0x6164]
   14002796a:	cmp    DWORD PTR [r10],r9d
   14002796d:	je     0x140027b7d
   140027973:	mov    r14,QWORD PTR [rdi+0xe0]
   14002797a:	lea    ecx,[r9-0x1]
   14002797e:	mov    r11d,DWORD PTR [rdi+0x120]
   140027985:	xor    r8d,r8d
   140027988:	and    rcx,r11
   14002798b:	mov    r15b,BYTE PTR [r14+r9*1]
   14002798f:	mov    BYTE PTR [rsp+0x60],r15b
   140027994:	cmp    r15b,BYTE PTR [rcx+r14*1]
   140027998:	jne    0x1400279c9
   14002799a:	xor    esi,esi
   14002799c:	mov    ecx,r9d
   14002799f:	cmp    r9d,r12d
   1400279a2:	jae    0x1400279c9
   1400279a4:	cmp    esi,0x1001
   1400279aa:	jae    0x1400279c2
   1400279ac:	mov    eax,ecx
   1400279ae:	and    rax,r11
   1400279b1:	cmp    BYTE PTR [rax+r14*1],r15b
   1400279b5:	jne    0x1400279c2
   1400279b7:	add    esi,r13d
   1400279ba:	add    ecx,r13d
   1400279bd:	cmp    ecx,r12d
   1400279c0:	jb     0x1400279a4
   1400279c2:	cmp    esi,0xa
   1400279c5:	cmova  r8d,r13d
   1400279c9:	test   r9b,0xf
   1400279cd:	je     0x1400279d7
   1400279cf:	test   ebp,ebp
   1400279d1:	je     0x140027a89
   1400279d7:	test   r8d,r8d
   1400279da:	jne    0x140027a92
   1400279e0:	test   ebp,ebp
   1400279e2:	je     0x1400279e6
   1400279e4:	dec    ebp
   1400279e6:	mov    rax,QWORD PTR [rdi+0x108]
   1400279ed:	mov    r8d,r9d
   1400279f0:	mov    r12d,DWORD PTR [rax+r9*4]
   1400279f4:	sub    r8d,r12d
   1400279f7:	and    r8d,r11d
   1400279fa:	je     0x140027b30
   140027a00:	mov    eax,DWORD PTR [r10]
   140027a03:	mov    r15d,0x1001
   140027a09:	sub    eax,r9d
   140027a0c:	mov    r13d,r15d
   140027a0f:	and    eax,r11d
   140027a12:	mov    rcx,r11
   140027a15:	cmp    eax,r15d
   140027a18:	cmovb  r13d,eax
   140027a1c:	mov    eax,r12d
   140027a1f:	and    rax,r11
   140027a22:	and    rcx,r9
   140027a25:	xor    r10d,r10d
   140027a28:	mov    al,BYTE PTR [rax+r14*1]
   140027a2c:	cmp    BYTE PTR [rcx+r14*1],al
   140027a30:	jne    0x140027b2a
   140027a36:	mov    r15d,r9d
   140027a39:	cmp    r10d,r13d
   140027a3c:	jae    0x140027a5b
   140027a3e:	inc    r10d
   140027a41:	inc    r15d
   140027a44:	mov    ecx,r15d
   140027a47:	and    rcx,r11
   140027a4a:	lea    edx,[r10+r12*1]
   140027a4e:	and    rdx,r11
   140027a51:	mov    al,BYTE PTR [rdx+r14*1]
   140027a55:	cmp    BYTE PTR [rcx+r14*1],al
   140027a59:	je     0x140027a39
   140027a5b:	cmp    r10d,0x40
   140027a5f:	jb     0x140027b2a
   140027a65:	cmp    r8d,DWORD PTR [rdi+0x124]
   140027a6c:	jae    0x140027b2a
   140027a72:	mov    r13d,0x1
   140027a78:	test   r8d,r8d
   140027a7b:	je     0x140027b30
   140027a81:	mov    r12d,DWORD PTR [rsp+0x68]
   140027a86:	mov    esi,r10d
   140027a89:	test   r8d,r8d
   140027a8c:	je     0x140027b30
   140027a92:	mov    eax,r12d
   140027a95:	sub    eax,r9d
   140027a98:	and    eax,r11d
   140027a9b:	cmp    eax,esi
   140027a9d:	jbe    0x140027b30
   140027aa3:	cmp    BYTE PTR [rdi+0x6169],0x0
   140027aaa:	jne    0x140027ab1
   140027aac:	cmp    r8d,r9d
   140027aaf:	ja     0x140027b30
   140027ab1:	mov    eax,esi
   140027ab3:	cmp    r8d,0x100
   140027aba:	jbe    0x140027ad5
   140027abc:	lea    eax,[rsi-0x1]
   140027abf:	cmp    r8d,0x2000
   140027ac6:	jbe    0x140027ad5
   140027ac8:	dec    eax
   140027aca:	cmp    r8d,0x40000
   140027ad1:	jbe    0x140027ad5
   140027ad3:	dec    eax
   140027ad5:	mov    edx,DWORD PTR [rbx+0x1c]
   140027ad8:	sub    ax,0x2
   140027adc:	mov    rcx,QWORD PTR [rbx+0x10]
   140027ae0:	mov    WORD PTR [rcx+rdx*8+0x2],ax
   140027ae5:	lea    eax,[r8-0x1]
   140027ae9:	mov    DWORD PTR [rcx+rdx*8+0x4],eax
   140027aed:	mov    BYTE PTR [rcx+rdx*8],r13b
   140027af1:	add    DWORD PTR [rbx+0x1c],r13d
   140027af5:	mov    eax,DWORD PTR [rbx+0x1c]
   140027af8:	cmp    eax,DWORD PTR [rbx+0x18]
   140027afb:	jb     0x140027b05
   140027afd:	mov    rcx,rbx
   140027b00:	call   0x1400105c8
   140027b05:	mov    eax,DWORD PTR [rdi+0x6164]
   140027b0b:	lea    r10,[rdi+0x4150]
   140027b12:	add    eax,esi
   140027b14:	mov    ebp,0x10
   140027b19:	and    eax,DWORD PTR [rdi+0x120]
   140027b1f:	mov    DWORD PTR [rdi+0x6164],eax
   140027b25:	jmp    0x140027963
   140027b2a:	mov    r13d,0x1
   140027b30:	mov    ecx,DWORD PTR [rbx+0x1c]
   140027b33:	mov    rax,QWORD PTR [rbx+0x10]
   140027b37:	mov    dl,BYTE PTR [rsp+0x60]
   140027b3b:	mov    BYTE PTR [rax+rcx*8],0x0
   140027b3f:	mov    BYTE PTR [rax+rcx*8+0x4],dl
   140027b43:	add    DWORD PTR [rbx+0x1c],r13d
   140027b47:	mov    eax,DWORD PTR [rbx+0x1c]
   140027b4a:	cmp    eax,DWORD PTR [rbx+0x18]
   140027b4d:	jb     0x140027b57
   140027b4f:	mov    rcx,rbx
   140027b52:	call   0x1400105c8
   140027b57:	mov    eax,DWORD PTR [rdi+0x6164]
   140027b5d:	lea    r10,[rdi+0x4150]
   140027b64:	mov    r12d,DWORD PTR [rsp+0x68]
   140027b69:	add    eax,r13d
   140027b6c:	and    eax,DWORD PTR [rdi+0x120]
   140027b72:	mov    DWORD PTR [rdi+0x6164],eax
   140027b78:	jmp    0x140027963
   140027b7d:	mov    rcx,r10
   140027b80:	call   0x140030df8
   140027b85:	mov    rcx,rbx
   140027b88:	mov    rbx,QWORD PTR [rsp+0x70]
   140027b8d:	add    rsp,0x20
   140027b91:	pop    r15
   140027b93:	pop    r14
   140027b95:	pop    r13
   140027b97:	pop    r12
   140027b99:	pop    rdi
   140027b9a:	pop    rsi
   140027b9b:	pop    rbp
   140027b9c:	jmp    0x1400105c8
   140027ba1:	int3   
   140027ba2:	int3   
   140027ba3:	int3   
   140027ba4:	mov    QWORD PTR [rsp+0x18],rbx
   140027ba9:	push   rbp
   140027baa:	push   rsi
   140027bab:	push   rdi
   140027bac:	push   r12
   140027bae:	push   r13
   140027bb0:	push   r14
   140027bb2:	push   r15
   140027bb4:	sub    rsp,0x20
   140027bb8:	mov    eax,DWORD PTR [rcx+0x6164]
   140027bbe:	lea    rdi,[rcx+0x4150]
   140027bc5:	mov    rbx,rcx
   140027bc8:	cmp    DWORD PTR [rdi],eax
   140027bca:	je     0x140027d3b
   140027bd0:	mov    esi,DWORD PTR [rdi]
   140027bd2:	mov    ebp,DWORD PTR [rcx+0x6298]
   140027bd8:	sub    esi,eax
   140027bda:	and    esi,DWORD PTR [rcx+0x120]
   140027be0:	mov    eax,DWORD PTR [rcx+0x62a8]
   140027be6:	shl    ebp,0x11
   140027be9:	cmp    ebp,eax
   140027beb:	mov    DWORD PTR [rsp+0x60],esi
   140027bef:	cmova  ebp,eax
   140027bf2:	cmp    ebp,esi
   140027bf4:	cmova  ebp,esi
   140027bf7:	xor    r12d,r12d
   140027bfa:	test   esi,esi
   140027bfc:	je     0x140027d33
   140027c02:	lea    edx,[r12+0x1]
   140027c07:	mov    ecx,DWORD PTR [rbx+0x6298]
   140027c0d:	mov    r15d,esi
   140027c10:	sub    r15d,r12d
   140027c13:	cmp    ebp,r15d
   140027c16:	cmovb  r15d,ebp
   140027c1a:	mov    eax,r15d
   140027c1d:	shr    eax,0xa
   140027c20:	cmp    eax,ecx
   140027c22:	cmovb  ecx,eax
   140027c25:	mov    eax,r15d
   140027c28:	test   ecx,ecx
   140027c2a:	cmove  ecx,edx
   140027c2d:	xor    edx,edx
   140027c2f:	div    ecx
   140027c31:	xor    r14d,r14d
   140027c34:	xor    r13d,r13d
   140027c37:	test   r15d,r15d
   140027c3a:	je     0x140027cd9
   140027c40:	lea    edi,[rcx-0x1]
   140027c43:	mov    esi,eax
   140027c45:	mov    r8,QWORD PTR [rbx+r14*8+0x6198]
   140027c4d:	mov    r9d,r15d
   140027c50:	sub    r9d,r13d
   140027c53:	cmp    esi,r9d
   140027c56:	mov    edx,r9d
   140027c59:	cmovb  edx,esi
   140027c5c:	mov    QWORD PTR [r8],rbx
   140027c5f:	mov    eax,DWORD PTR [rbx+0x6164]
   140027c65:	cmp    r14d,edi
   140027c68:	cmove  edx,r9d
   140027c6c:	add    eax,r13d
   140027c6f:	add    eax,r12d
   140027c72:	mov    DWORD PTR [rsp+0x68],edx
   140027c76:	and    eax,DWORD PTR [rbx+0x120]
   140027c7c:	mov    DWORD PTR [r8+0x8],eax
   140027c80:	mov    DWORD PTR [r8+0xc],edx
   140027c84:	mov    rax,QWORD PTR [rbx+0x62a0]
   140027c8b:	mov    DWORD PTR [r8+0x808c],r14d
   140027c92:	lea    rcx,[rax+r13*8]
   140027c96:	mov    QWORD PTR [r8+0x10],rcx
   140027c9a:	test   r13d,r13d
   140027c9d:	jne    0x140027cb1
   140027c9f:	cmp    edx,r9d
   140027ca2:	jne    0x140027cb1
   140027ca4:	mov    rdx,r8
   140027ca7:	mov    rcx,rbx
   140027caa:	call   0x140029594
   140027caf:	jmp    0x140027cc4
   140027cb1:	mov    rcx,QWORD PTR [rbx+0x6180]
   140027cb8:	lea    rdx,[rip+0x1f39]        # 0x140029bf8
   140027cbf:	call   0x140046dd8
   140027cc4:	add    r13d,DWORD PTR [rsp+0x68]
   140027cc9:	inc    r14d
   140027ccc:	cmp    r13d,r15d
   140027ccf:	jb     0x140027c45
   140027cd5:	mov    esi,DWORD PTR [rsp+0x60]
   140027cd9:	mov    rcx,QWORD PTR [rbx+0x6180]
   140027ce0:	call   0x140047214
   140027ce5:	test   r14d,r14d
   140027ce8:	je     0x140027d1b
   140027cea:	lea    r13,[rbx+0x6198]
   140027cf1:	mov    esi,0x1
   140027cf6:	mov    rdx,QWORD PTR [r13+0x0]
   140027cfa:	lea    rcx,[rbx+0x62c8]
   140027d01:	mov    r8d,DWORD PTR [rdx+0x18]
   140027d05:	mov    rdx,QWORD PTR [rdx+0x10]
   140027d09:	call   0x140029364
   140027d0e:	lea    r13,[r13+0x8]
   140027d12:	sub    r14,rsi
   140027d15:	jne    0x140027cf6
   140027d17:	mov    esi,DWORD PTR [rsp+0x60]
   140027d1b:	add    r12d,r15d
   140027d1e:	mov    edx,0x1
   140027d23:	cmp    r12d,esi
   140027d26:	jb     0x140027c07
   140027d2c:	lea    rdi,[rbx+0x4150]
   140027d33:	mov    eax,DWORD PTR [rdi]
   140027d35:	mov    DWORD PTR [rbx+0x6164],eax
   140027d3b:	mov    rcx,rdi
   140027d3e:	mov    rbx,QWORD PTR [rsp+0x70]
   140027d43:	add    rsp,0x20
   140027d47:	pop    r15
   140027d49:	pop    r14
   140027d4b:	pop    r13
   140027d4d:	pop    r12
   140027d4f:	pop    rdi
   140027d50:	pop    rsi
   140027d51:	pop    rbp
   140027d52:	jmp    0x140030df8
   140027d57:	int3   
   140027d58:	mov    rax,rsp
   140027d5b:	mov    QWORD PTR [rax+0x8],rbx
   140027d5f:	mov    QWORD PTR [rax+0x10],rbp
   140027d63:	mov    QWORD PTR [rax+0x18],rsi
   140027d67:	mov    QWORD PTR [rax+0x20],rdi
   140027d6b:	push   r14
   140027d6d:	sub    rsp,0x20
   140027d71:	lea    rdi,[rcx+0x62c8]
   140027d78:	mov    rbx,rcx
   140027d7b:	mov    rcx,rdi
   140027d7e:	mov    r14,r9
   140027d81:	mov    ebp,r8d
   140027d84:	mov    sil,dl
   140027d87:	call   0x14001098c
   140027d8c:	mov    r10d,DWORD PTR [rdi+0x1c]
   140027d90:	mov    rax,QWORD PTR [rdi+0x10]
   140027d94:	mov    BYTE PTR [rax+r10*8],0x4
   140027d99:	mov    BYTE PTR [rax+r10*8+0x4],0x0
   140027d9f:	inc    DWORD PTR [rdi+0x1c]
   140027da2:	mov    eax,DWORD PTR [rdi+0x1c]
   140027da5:	cmp    eax,DWORD PTR [rdi+0x18]
   140027da8:	jb     0x140027db2
   140027daa:	mov    rcx,rdi
   140027dad:	call   0x1400105c8
   140027db2:	mov    DWORD PTR [rbx+0x130],ebp
   140027db8:	test   sil,sil
   140027dbb:	jne    0x140027dc7
   140027dbd:	mov    dl,0x1
   140027dbf:	mov    rcx,rbx
   140027dc2:	call   0x140028ce8
   140027dc7:	mov    r8d,ebp
   140027dca:	mov    dl,sil
   140027dcd:	mov    rcx,rbx
   140027dd0:	call   0x140027e68
   140027dd5:	test   r14,r14
   140027dd8:	je     0x140027de5
   140027dda:	mov    rdx,r14
   140027ddd:	mov    rcx,rbx
   140027de0:	call   0x14002a45c
   140027de5:	mov    eax,DWORD PTR [rbx+0x6164]
   140027deb:	mov    DWORD PTR [rbx+0x12c],eax
   140027df1:	test   sil,sil
   140027df4:	je     0x140027e03
   140027df6:	cmp    BYTE PTR [rbx+0x6168],0x0
   140027dfd:	je     0x140027e03
   140027dff:	xor    edx,edx
   140027e01:	jmp    0x140027e05
   140027e03:	mov    dl,0x1
   140027e05:	mov    rcx,rbx
   140027e08:	call   0x1400293e4
   140027e0d:	test   eax,eax
   140027e0f:	je     0x140027e1d
   140027e11:	movzx  edx,sil
   140027e15:	mov    rcx,rbx
   140027e18:	call   0x140029084
   140027e1d:	mov    rcx,QWORD PTR [rbx+0x6178]
   140027e24:	call   0x140037258
   140027e29:	mov    edx,DWORD PTR [rdi+0x1c]
   140027e2c:	mov    rax,QWORD PTR [rdi+0x10]
   140027e30:	mov    BYTE PTR [rax+rdx*8],0x5
   140027e34:	mov    BYTE PTR [rax+rdx*8+0x4],0x0
   140027e39:	inc    DWORD PTR [rdi+0x1c]
   140027e3c:	mov    eax,DWORD PTR [rdi+0x1c]
   140027e3f:	cmp    eax,DWORD PTR [rdi+0x18]
   140027e42:	jb     0x140027e4c
   140027e44:	mov    rcx,rdi
   140027e47:	call   0x1400105c8
   140027e4c:	mov    rbx,QWORD PTR [rsp+0x30]
   140027e51:	mov    rbp,QWORD PTR [rsp+0x38]
   140027e56:	mov    rsi,QWORD PTR [rsp+0x40]
   140027e5b:	mov    rdi,QWORD PTR [rsp+0x48]
   140027e60:	add    rsp,0x20
   140027e64:	pop    r14
   140027e66:	ret    
   140027e67:	int3   
   140027e68:	mov    QWORD PTR [rsp+0x8],rbx
   140027e6d:	push   rdi
   140027e6e:	sub    rsp,0x20
   140027e72:	mov    dil,dl
   140027e75:	mov    rbx,rcx
   140027e78:	xor    edx,edx
   140027e7a:	test   dil,dil
   140027e7d:	jne    0x140027e98
   140027e7f:	mov    WORD PTR [rcx+0x6168],dx
   140027e86:	mov    DWORD PTR [rcx+0x12c],edx
   140027e8c:	mov    DWORD PTR [rcx+0x6164],edx
   140027e92:	mov    DWORD PTR [rcx+0x6190],edx
   140027e98:	movsxd rax,r8d
   140027e9b:	lea    rcx,[rip+0x596ae]        # 0x140081550
   140027ea2:	mov    DWORD PTR [rbx+0x13c],edx
   140027ea8:	mov    QWORD PTR [rbx+0x6170],rdx
   140027eaf:	mov    edx,DWORD PTR [rbx+0x120]
   140027eb5:	mov    ecx,DWORD PTR [rcx+rax*4]
   140027eb8:	mov    DWORD PTR [rbx+0x134],ecx
   140027ebe:	shr    ecx,0x2
   140027ec1:	mov    DWORD PTR [rbx+0x138],ecx
   140027ec7:	lea    rcx,[rbx+0x4150]
   140027ece:	call   0x140030e60
   140027ed3:	mov    dl,dil
   140027ed6:	mov    rcx,rbx
   140027ed9:	mov    rbx,QWORD PTR [rsp+0x30]
   140027ede:	add    rsp,0x20
   140027ee2:	pop    rdi
   140027ee3:	jmp    0x140026cd4
   140027ee8:	mov    QWORD PTR [rsp+0x8],rbx
   140027eed:	mov    QWORD PTR [rsp+0x10],rsi
   140027ef2:	push   rdi
   140027ef3:	sub    rsp,0x20
   140027ef7:	add    rcx,0x62c8
   140027efe:	mov    rsi,rdx
   140027f01:	mov    edx,0x3
   140027f06:	mov    ebx,r9d
   140027f09:	mov    edi,r8d
   140027f0c:	mov    r10d,DWORD PTR [rcx+0x1c]
   140027f10:	mov    rax,QWORD PTR [rcx+0x10]
   140027f14:	mov    BYTE PTR [rax+r10*8],0x7
   140027f19:	mov    WORD PTR [rax+r10*8+0x2],dx
   140027f1f:	mov    DWORD PTR [rax+r10*8+0x4],edx
   140027f24:	inc    DWORD PTR [rcx+0x1c]
   140027f27:	mov    eax,DWORD PTR [rcx+0x1c]
   140027f2a:	cmp    eax,DWORD PTR [rcx+0x18]
   140027f2d:	jb     0x140027f34
   140027f2f:	call   0x1400105c8
   140027f34:	lea    eax,[rdi-0x3]
   140027f37:	movsxd rdx,eax
   140027f3a:	test   eax,eax
   140027f3c:	jle    0x140027f92
   140027f3e:	dec    rdx
   140027f41:	lea    r8,[rsi+0x1]
   140027f45:	shr    rdx,0x2
   140027f49:	inc    rdx
   140027f4c:	cmp    BYTE PTR [r8+0x2],0xeb
   140027f51:	jne    0x140027f85
   140027f53:	movzx  eax,BYTE PTR [r8]
   140027f57:	movzx  ecx,BYTE PTR [r8+0x1]
   140027f5c:	shl    ecx,0x8
   140027f5f:	add    ecx,eax
   140027f61:	mov    eax,ebx
   140027f63:	shr    eax,0x2
   140027f66:	shl    ecx,0x8
   140027f69:	add    ecx,eax
   140027f6b:	movzx  eax,BYTE PTR [r8-0x1]
   140027f70:	add    ecx,eax
   140027f72:	mov    eax,ecx
   140027f74:	mov    BYTE PTR [r8-0x1],cl
   140027f78:	shr    eax,0x8
   140027f7b:	shr    ecx,0x10
   140027f7e:	mov    BYTE PTR [r8+0x1],cl
   140027f82:	mov    BYTE PTR [r8],al
   140027f85:	add    ebx,0x4
   140027f88:	add    r8,0x4
   140027f8c:	sub    rdx,0x1
   140027f90:	jne    0x140027f4c
   140027f92:	mov    rbx,QWORD PTR [rsp+0x30]
   140027f97:	mov    rsi,QWORD PTR [rsp+0x38]
   140027f9c:	add    rsp,0x20
   140027fa0:	pop    rdi
   140027fa1:	ret    
   140027fa2:	int3   
   140027fa3:	int3   
   140027fa4:	mov    QWORD PTR [rsp+0x20],rbx
   140027fa9:	mov    DWORD PTR [rsp+0x18],r8d
   140027fae:	mov    QWORD PTR [rsp+0x10],rdx
   140027fb3:	push   rbp
   140027fb4:	push   rsi
   140027fb5:	push   rdi
   140027fb6:	push   r12
   140027fb8:	push   r13
   140027fba:	push   r14
   140027fbc:	push   r15
   140027fbe:	sub    rsp,0x30
   140027fc2:	lea    rbx,[rcx+0x62c8]
   140027fc9:	mov    edi,r9d
   140027fcc:	mov    r10d,DWORD PTR [rbx+0x1c]
   140027fd0:	mov    rsi,rcx
   140027fd3:	mov    rax,QWORD PTR [rbx+0x10]
   140027fd7:	mov    ecx,0x3
   140027fdc:	movsxd r15,r8d
   140027fdf:	and    DWORD PTR [rax+r10*8+0x4],0x0
   140027fe5:	mov    BYTE PTR [rax+r10*8],0x7
   140027fea:	mov    WORD PTR [rax+r10*8+0x2],cx
   140027ff0:	inc    DWORD PTR [rbx+0x1c]
   140027ff3:	mov    eax,DWORD PTR [rbx+0x1c]
   140027ff6:	cmp    eax,DWORD PTR [rbx+0x18]
   140027ff9:	jb     0x140028003
   140027ffb:	mov    rcx,rbx
   140027ffe:	call   0x1400105c8
   140028003:	mov    r8d,DWORD PTR [rbx+0x1c]
   140028007:	mov    eax,0x5
   14002800c:	mov    rdx,QWORD PTR [rbx+0x10]
   140028010:	mov    WORD PTR [rdx+r8*8+0x2],ax
   140028016:	lea    eax,[rdi-0x1]
   140028019:	mov    DWORD PTR [rdx+r8*8+0x4],eax
   14002801e:	mov    BYTE PTR [rdx+r8*8],0x7
   140028023:	inc    DWORD PTR [rbx+0x1c]
   140028026:	mov    eax,DWORD PTR [rbx+0x1c]
   140028029:	cmp    eax,DWORD PTR [rbx+0x18]
   14002802c:	jb     0x140028036
   14002802e:	mov    rcx,rbx
   140028031:	call   0x1400105c8
   140028036:	mov    r12d,DWORD PTR [rsp+0x90]
   14002803e:	mov    eax,r15d
   140028041:	cdq    
   140028042:	mov    rbp,r15
   140028045:	idiv   edi
   140028047:	cmp    eax,0x1d00
   14002804c:	setg   r14b
   140028050:	xor    r13d,r13d
   140028053:	test   edi,edi
   140028055:	jle    0x1400280e4
   14002805b:	xor    ebx,ebx
   14002805d:	movsxd r10,edi
   140028060:	xor    r9d,r9d
   140028063:	mov    QWORD PTR [rsp+0x20],r10
   140028068:	mov    QWORD PTR [rsp+0x70],r9
   14002806d:	lea    r15d,[r13+0x5]
   140028071:	test   r14b,r14b
   140028074:	je     0x140028093
   140028076:	lea    edx,[r12+r13*1]
   14002807a:	mov    r8d,r15d
   14002807d:	lea    rcx,[rsi+0x4150]
   140028084:	call   0x140030d90
   140028089:	mov    r9,QWORD PTR [rsp+0x70]
   14002808e:	mov    r10,QWORD PTR [rsp+0x20]
   140028093:	xor    r8b,r8b
   140028096:	mov    rdx,rbx
   140028099:	cmp    rbx,rbp
   14002809c:	jge    0x1400280d3
   14002809e:	mov    r12,QWORD PTR [rsp+0x78]
   1400280a3:	mov    cl,BYTE PTR [rdx+r12*1]
   1400280a7:	inc    r13d
   1400280aa:	mov    rax,QWORD PTR [rsi+0x4148]
   1400280b1:	sub    r8b,cl
   1400280b4:	add    rdx,r10
   1400280b7:	mov    BYTE PTR [r9+rax*1],r8b
   1400280bb:	inc    r9
   1400280be:	mov    r8b,cl
   1400280c1:	cmp    rdx,rbp
   1400280c4:	jl     0x1400280a3
   1400280c6:	mov    r12d,DWORD PTR [rsp+0x90]
   1400280ce:	mov    QWORD PTR [rsp+0x70],r9
   1400280d3:	inc    rbx
   1400280d6:	sub    rdi,0x1
   1400280da:	jne    0x140028071
   1400280dc:	mov    r15d,DWORD PTR [rsp+0x80]
   1400280e4:	test   r14b,r14b
   1400280e7:	je     0x1400280ff
   1400280e9:	lea    edx,[r15+r12*1]
   1400280ed:	mov    r8d,0x5
   1400280f3:	lea    rcx,[rsi+0x4150]
   1400280fa:	call   0x140030d90
   1400280ff:	mov    rdx,QWORD PTR [rsi+0x4148]
   140028106:	mov    r8,rbp
   140028109:	mov    rcx,QWORD PTR [rsp+0x78]
   14002810e:	mov    rbx,QWORD PTR [rsp+0x88]
   140028116:	add    rsp,0x30
   14002811a:	pop    r15
   14002811c:	pop    r14
   14002811e:	pop    r13
   140028120:	pop    r12
   140028122:	pop    rdi
   140028123:	pop    rsi
   140028124:	pop    rbp
   140028125:	jmp    0x140059180
   14002812a:	int3   
   14002812b:	int3   
   14002812c:	mov    QWORD PTR [rsp+0x8],rbx
   140028131:	mov    QWORD PTR [rsp+0x10],rsi
   140028136:	push   rdi
   140028137:	sub    rsp,0x20
   14002813b:	add    rcx,0x62c8
   140028142:	mov    eax,0x3
   140028147:	mov    esi,r8d
   14002814a:	mov    edi,r9d
   14002814d:	mov    rbx,rdx
   140028150:	mov    r11d,DWORD PTR [rcx+0x1c]
   140028154:	mov    r10,QWORD PTR [rcx+0x10]
   140028158:	mov    WORD PTR [r10+r11*8+0x2],ax
   14002815e:	mov    al,BYTE PTR [rsp+0x50]
   140028162:	neg    al
   140028164:	mov    BYTE PTR [r10+r11*8],0x7
   140028169:	sbb    r8d,r8d
   14002816c:	neg    r8d
   14002816f:	inc    r8d
   140028172:	mov    DWORD PTR [r10+r11*8+0x4],r8d
   140028177:	inc    DWORD PTR [rcx+0x1c]
   14002817a:	mov    eax,DWORD PTR [rcx+0x1c]
   14002817d:	cmp    eax,DWORD PTR [rcx+0x18]
   140028180:	jb     0x140028187
   140028182:	call   0x1400105c8
   140028187:	xor    ecx,ecx
   140028189:	lea    r10d,[rsi-0x4]
   14002818d:	cmp    BYTE PTR [rsp+0x50],cl
   140028191:	setne  r9b
   140028195:	add    r9b,0xe8
   140028199:	test   r10d,r10d
   14002819c:	jle    0x140028224
   1400281a2:	mov    r11d,0x1000000
   1400281a8:	mov    al,BYTE PTR [rbx]
   1400281aa:	inc    ecx
   1400281ac:	inc    rbx
   1400281af:	inc    edi
   1400281b1:	cmp    al,0xe8
   1400281b3:	je     0x1400281ba
   1400281b5:	cmp    al,r9b
   1400281b8:	jne    0x14002821f
   1400281ba:	movzx  eax,BYTE PTR [rbx+0x2]
   1400281be:	mov    edx,edi
   1400281c0:	movzx  r8d,BYTE PTR [rbx+0x3]
   1400281c5:	and    edx,0xffffff
   1400281cb:	shl    r8d,0x8
   1400281cf:	or     r8d,eax
   1400281d2:	movzx  eax,BYTE PTR [rbx+0x1]
   1400281d6:	shl    r8d,0x8
   1400281da:	or     r8d,eax
   1400281dd:	movzx  eax,BYTE PTR [rbx]
   1400281e0:	shl    r8d,0x8
   1400281e4:	or     r8d,eax
   1400281e7:	add    edx,r8d
   1400281ea:	js     0x140028215
   1400281ec:	cmp    r8d,r11d
   1400281ef:	jge    0x140028215
   1400281f1:	cmp    edx,r11d
   1400281f4:	jl     0x1400281fd
   1400281f6:	lea    edx,[r8-0x1000000]
   1400281fd:	mov    eax,edx
   1400281ff:	mov    BYTE PTR [rbx],dl
   140028201:	sar    eax,0x8
   140028204:	mov    BYTE PTR [rbx+0x1],al
   140028207:	mov    eax,edx
   140028209:	sar    eax,0x10
   14002820c:	sar    edx,0x18
   14002820f:	mov    BYTE PTR [rbx+0x3],dl
   140028212:	mov    BYTE PTR [rbx+0x2],al
   140028215:	add    rbx,0x4
   140028219:	add    ecx,0x4
   14002821c:	add    edi,0x4
   14002821f:	cmp    ecx,r10d
   140028222:	jl     0x1400281a8
   140028224:	mov    rbx,QWORD PTR [rsp+0x30]
   140028229:	mov    rsi,QWORD PTR [rsp+0x38]
   14002822e:	add    rsp,0x20
   140028232:	pop    rdi
   140028233:	ret    
   140028234:	mov    QWORD PTR [rsp+0x8],rbx
   140028239:	push   rbp
   14002823a:	push   rsi
   14002823b:	push   rdi
   14002823c:	push   r12
   14002823e:	push   r13
   140028240:	push   r14
   140028242:	push   r15
   140028244:	lea    rbp,[rsp-0x400]
   14002824c:	sub    rsp,0x500
   140028253:	mov    rax,QWORD PTR [rip+0x59c86]        # 0x140081ee0
   14002825a:	xor    rax,rsp
   14002825d:	mov    QWORD PTR [rbp+0x3f0],rax
   140028264:	mov    rsi,QWORD PTR [rbp+0x460]
   14002826b:	xor    edi,edi
   14002826d:	cmp    DWORD PTR [rcx+0x18],0x2
   140028271:	mov    r11,rdx
   140028274:	mov    r12,QWORD PTR [rbp+0x468]
   14002827b:	mov    r10,rcx
   14002827e:	mov    DWORD PTR [rsp+0x30],r9d
   140028283:	lea    r13d,[rdi+0x8]
   140028287:	mov    QWORD PTR [rsp+0x38],r8
   14002828c:	mov    QWORD PTR [rsp+0x48],rdx
   140028291:	mov    QWORD PTR [rsp+0x40],rcx
   140028296:	jne    0x1400282a4
   140028298:	xor    r13d,r13d
   14002829b:	cmp    DWORD PTR [rcx+0x1c],0x20
   14002829f:	sbb    edi,edi
   1400282a1:	and    edi,DWORD PTR [rcx+0x1c]
   1400282a4:	mov    r15d,0x101
   1400282aa:	mov    eax,r9d
   1400282ad:	cdq    
   1400282ae:	mov    ebx,0x1
   1400282b3:	movzx  edx,dl
   1400282b6:	add    eax,edx
   1400282b8:	sar    eax,0x8
   1400282bb:	movsxd rcx,eax
   1400282be:	cmp    rcx,r15
   1400282c1:	cmovb  r15d,eax
   1400282c5:	xor    r8d,r8d
   1400282c8:	movsxd r14,r15d
   1400282cb:	test   edi,edi
   1400282cd:	jne    0x14002834c
   1400282cf:	mov    r8,QWORD PTR [rsp+0x38]
   1400282d4:	lea    rax,[rbp-0x20]
   1400282d8:	mov    DWORD PTR [rsp+0x28],r15d
   1400282dd:	mov    rdx,r11
   1400282e0:	mov    rcx,r10
   1400282e3:	mov    QWORD PTR [rsp+0x20],rax
   1400282e8:	call   0x140028844
   1400282ed:	xor    edx,edx
   1400282ef:	lea    rcx,[rsp+0x50]
   1400282f4:	mov    r8d,0x84
   1400282fa:	call   0x140058f40
   1400282ff:	xor    r10d,r10d
   140028302:	mov    ecx,r10d
   140028305:	test   r15d,r15d
   140028308:	jle    0x14002831b
   14002830a:	movsxd rax,DWORD PTR [rbp+rcx*4-0x20]
   14002830f:	inc    rcx
   140028312:	inc    DWORD PTR [rsp+rax*4+0x50]
   140028316:	cmp    rcx,r14
   140028319:	jl     0x14002830a
   14002831b:	mov    r8d,DWORD PTR [rsp+0x54]
   140028320:	lea    r9,[rsp+0x58]
   140028325:	mov    edx,0x2
   14002832a:	mov    ecx,DWORD PTR [r9]
   14002832d:	lea    r9,[r9+0x4]
   140028331:	movsxd rax,ebx
   140028334:	cmp    ecx,DWORD PTR [rsp+rax*4+0x50]
   140028338:	cmovg  ebx,edx
   14002833b:	add    r8d,ecx
   14002833e:	inc    edx
   140028340:	cmp    edx,0x21
   140028343:	jb     0x14002832a
   140028345:	mov    r9d,DWORD PTR [rsp+0x30]
   14002834a:	jmp    0x14002834f
   14002834c:	xor    r10d,r10d
   14002834f:	cmp    r13d,0x8
   140028353:	je     0x140028379
   140028355:	lea    eax,[rdi-0x1]
   140028358:	cmp    eax,0x1e
   14002835b:	ja     0x140028379
   14002835d:	test   edi,edi
   14002835f:	mov    DWORD PTR [rsi+0x4],r10d
   140028363:	mov    DWORD PTR [rsi+0x8],r9d
   140028367:	cmovne ebx,edi
   14002836a:	mov    DWORD PTR [rsi],r13d
   14002836d:	mov    DWORD PTR [rsi+0xc],ebx
   140028370:	inc    DWORD PTR [r12]
   140028374:	jmp    0x1400285c6
   140028379:	movsxd rax,ebx
   14002837c:	mov    edi,r10d
   14002837f:	mov    edx,ebx
   140028381:	cmp    rax,0x21
   140028385:	jae    0x1400283a6
   140028387:	mov    r9,rax
   14002838a:	lea    rcx,[rsp+0x50]
   14002838f:	shl    r9,0x2
   140028393:	add    rcx,r9
   140028396:	add    edi,DWORD PTR [rcx]
   140028398:	add    edx,ebx
   14002839a:	movsxd rax,edx
   14002839d:	add    rcx,r9
   1400283a0:	cmp    rax,0x21
   1400283a4:	jb     0x140028396
   1400283a6:	cmp    r8d,0x10
   1400283aa:	jle    0x140028488
   1400283b0:	lea    eax,[rdi+rdi*1]
   1400283b3:	cmp    eax,r8d
   1400283b6:	jle    0x140028488
   1400283bc:	mov    edi,r10d
   1400283bf:	mov    rcx,r10
   1400283c2:	test   r15d,r15d
   1400283c5:	jle    0x140028420
   1400283c7:	mov    r8d,DWORD PTR [rbp+rcx*4-0x20]
   1400283cc:	cmp    r8d,0x4
   1400283d0:	jle    0x140028416
   1400283d2:	mov    eax,r8d
   1400283d5:	cdq    
   1400283d6:	idiv   ebx
   1400283d8:	test   edx,edx
   1400283da:	jne    0x140028416
   1400283dc:	movsxd rax,edi
   1400283df:	mov    r9d,r10d
   1400283e2:	mov    rdx,r10
   1400283e5:	cmp    rax,r14
   1400283e8:	jge    0x140028412
   1400283ea:	cmp    DWORD PTR [rbp+rax*4-0x20],r8d
   1400283ef:	jne    0x1400283ff
   1400283f1:	inc    r9d
   1400283f4:	inc    rdx
   1400283f7:	inc    rax
   1400283fa:	cmp    rax,r14
   1400283fd:	jl     0x1400283ea
   1400283ff:	cmp    rdx,0x8
   140028403:	jl     0x140028412
   140028405:	dec    edi
   140028407:	dec    rcx
   14002840a:	add    edi,r9d
   14002840d:	add    rcx,rdx
   140028410:	jmp    0x140028416
   140028412:	mov    DWORD PTR [rbp+rcx*4-0x20],ebx
   140028416:	inc    edi
   140028418:	inc    rcx
   14002841b:	cmp    rcx,r14
   14002841e:	jl     0x1400283c7
   140028420:	lea    r11d,[r15-0x10]
   140028424:	mov    edx,r10d
   140028427:	test   r11d,r11d
   14002842a:	jle    0x140028488
   14002842c:	mov    r9,r10
   14002842f:	mov    r8d,0x10
   140028435:	lea    r10,[rbp-0x20]
   140028439:	xor    ecx,ecx
   14002843b:	mov    rax,r9
   14002843e:	cmp    r9,r8
   140028441:	jge    0x140028471
   140028443:	cmp    DWORD PTR [rbp+rax*4-0x20],ebx
   140028447:	jne    0x14002844b
   140028449:	inc    ecx
   14002844b:	inc    rax
   14002844e:	cmp    rax,r8
   140028451:	jl     0x140028443
   140028453:	cmp    ecx,0x10
   140028456:	je     0x140028471
   140028458:	cmp    ecx,0xc
   14002845b:	jl     0x140028471
   14002845d:	lea    eax,[rdx+0x10]
   140028460:	cmp    edx,eax
   140028462:	jge    0x140028471
   140028464:	sub    eax,edx
   140028466:	mov    rdi,r10
   140028469:	movsxd rcx,eax
   14002846c:	movsxd rax,ebx
   14002846f:	rep stos DWORD PTR es:[rdi],eax
   140028471:	add    edx,0x10
   140028474:	add    r8,0x10
   140028478:	add    r10,0x40
   14002847c:	add    r9,0x10
   140028480:	cmp    edx,r11d
   140028483:	jl     0x140028439
   140028485:	xor    r10d,r10d
   140028488:	lea    eax,[r15-0x2]
   14002848c:	movsxd rcx,eax
   14002848f:	cmp    rcx,0x2
   140028493:	jle    0x1400284b6
   140028495:	lea    rax,[rbp-0x1c]
   140028499:	lea    rdx,[rcx-0x2]
   14002849d:	mov    ecx,DWORD PTR [rax-0x4]
   1400284a0:	cmp    ecx,DWORD PTR [rax]
   1400284a2:	jne    0x1400284ac
   1400284a4:	cmp    ecx,DWORD PTR [rax+0x8]
   1400284a7:	jne    0x1400284ac
   1400284a9:	mov    DWORD PTR [rax+0x4],ecx
   1400284ac:	add    rax,0x4
   1400284b0:	sub    rdx,0x1
   1400284b4:	jne    0x14002849d
   1400284b6:	mov    eax,DWORD PTR [r12]
   1400284ba:	mov    ebx,r10d
   1400284bd:	cmp    rax,QWORD PTR [rbp+0x470]
   1400284c4:	jae    0x1400285c6
   1400284ca:	mov    r15,QWORD PTR [rsp+0x40]
   1400284cf:	mov    rdi,r10
   1400284d2:	jmp    0x1400284e0
   1400284d4:	cmp    DWORD PTR [rbp+rdi*4-0x20],r10d
   1400284d9:	jne    0x1400284e5
   1400284db:	inc    ebx
   1400284dd:	inc    rdi
   1400284e0:	cmp    rdi,r14
   1400284e3:	jl     0x1400284d4
   1400284e5:	mov    r10d,DWORD PTR [rbp+rdi*4-0x20]
   1400284ea:	mov    ecx,ebx
   1400284ec:	shl    ecx,0x8
   1400284ef:	xor    r11d,r11d
   1400284f2:	cmp    rdi,r14
   1400284f5:	jge    0x14002851d
   1400284f7:	mov    rdx,QWORD PTR [rsp+0x48]
   1400284fc:	lea    rax,[rbp-0x20]
   140028500:	sub    rdx,rax
   140028503:	cmp    DWORD PTR [rbp+rdi*4-0x20],r10d
   140028508:	jne    0x14002851d
   14002850a:	lea    rax,[rdx+rdi*4]
   14002850e:	inc    ebx
   140028510:	add    r11d,DWORD PTR [rbp+rax*1-0xc]
   140028515:	inc    rdi
   140028518:	cmp    rdi,r14
   14002851b:	jl     0x140028503
   14002851d:	mov    r9d,DWORD PTR [rsp+0x30]
   140028522:	mov    eax,ebx
   140028524:	shl    eax,0x8
   140028527:	cmp    eax,r9d
   14002852a:	cmovl  r9d,eax
   14002852e:	cmp    ecx,r9d
   140028531:	jge    0x1400285c6
   140028537:	sub    r9d,ecx
   14002853a:	mov    DWORD PTR [rsi+0x4],ecx
   14002853d:	mov    DWORD PTR [rsi+0x8],r9d
   140028541:	mov    DWORD PTR [rsi+0xc],r10d
   140028545:	cmp    r9d,0x200
   14002854c:	jle    0x1400285b2
   14002854e:	cmp    r10d,0x1
   140028552:	jne    0x14002855d
   140028554:	cmp    r9d,0x400
   14002855b:	jle    0x1400285b2
   14002855d:	mov    eax,r9d
   140028560:	cdq    
   140028561:	idiv   r10d
   140028564:	cmp    eax,0x80
   140028569:	jle    0x1400285b2
   14002856b:	movsxd r8,ecx
   14002856e:	mov    edx,r11d
   140028571:	add    r8,QWORD PTR [rsp+0x38]
   140028576:	mov    rcx,r15
   140028579:	mov    DWORD PTR [rsp+0x20],r10d
   14002857e:	call   0x14002c560
   140028583:	xor    r10d,r10d
   140028586:	test   al,al
   140028588:	je     0x1400285b5
   14002858a:	cmp    r13d,0x8
   14002858e:	mov    eax,r13d
   140028591:	cmove  eax,r10d
   140028595:	mov    DWORD PTR [rsi],eax
   140028597:	cdqe   
   140028599:	add    rax,0x2
   14002859d:	lea    rax,[rax+rax*2]
   1400285a1:	cmp    DWORD PTR [r15+rax*4],0x3
   1400285a6:	je     0x1400285b5
   1400285a8:	inc    DWORD PTR [r12]
   1400285ac:	add    rsi,0x10
   1400285b0:	jmp    0x1400285b5
   1400285b2:	xor    r10d,r10d
   1400285b5:	mov    eax,DWORD PTR [r12]
   1400285b9:	cmp    rax,QWORD PTR [rbp+0x470]
   1400285c0:	jb     0x1400284e0
   1400285c6:	mov    rcx,QWORD PTR [rbp+0x3f0]
   1400285cd:	xor    rcx,rsp
   1400285d0:	call   0x140055f90
   1400285d5:	mov    rbx,QWORD PTR [rsp+0x540]
   1400285dd:	add    rsp,0x500
   1400285e4:	pop    r15
   1400285e6:	pop    r14
   1400285e8:	pop    r13
   1400285ea:	pop    r12
   1400285ec:	pop    rdi
   1400285ed:	pop    rsi
   1400285ee:	pop    rbp
   1400285ef:	ret    
   1400285f0:	rex push rbx
   1400285f2:	sub    rsp,0x20
   1400285f6:	lea    rbx,[rcx+0x62c8]
   1400285fd:	mov    rcx,rbx
   140028600:	call   0x1400105c8
   140028605:	mov    rcx,rbx
   140028608:	add    rsp,0x20
   14002860c:	pop    rbx
   14002860d:	jmp    0x1400108fc
   140028612:	int3   
   140028613:	int3   
   140028614:	mov    QWORD PTR [rsp+0x8],rbx
   140028619:	mov    QWORD PTR [rsp+0x10],rbp
   14002861e:	mov    QWORD PTR [rsp+0x18],rsi
   140028623:	push   rdi
   140028624:	sub    rsp,0x20
   140028628:	mov    rdi,rcx
   14002862b:	mov    rcx,QWORD PTR [rcx+0xe0]
   140028632:	call   0x140055de8
   140028637:	mov    rcx,QWORD PTR [rdi+0x108]
   14002863e:	xor    ebp,ebp
   140028640:	mov    QWORD PTR [rdi+0xe0],rbp
   140028647:	call   0x140055de8
   14002864c:	mov    rcx,QWORD PTR [rdi+0xe8]
   140028653:	mov    QWORD PTR [rdi+0x108],rbp
   14002865a:	call   0x140055de8
   14002865f:	mov    rcx,QWORD PTR [rdi+0xf0]
   140028666:	mov    QWORD PTR [rdi+0xe8],rbp
   14002866d:	call   0x140055de8
   140028672:	mov    rcx,QWORD PTR [rdi+0xf8]
   140028679:	mov    QWORD PTR [rdi+0xf0],rbp
   140028680:	call   0x140055de8
   140028685:	mov    rcx,QWORD PTR [rdi+0x100]
   14002868c:	mov    QWORD PTR [rdi+0xf8],rbp
   140028693:	call   0x140055de8
   140028698:	mov    rcx,QWORD PTR [rdi+0x4148]
   14002869f:	mov    QWORD PTR [rdi+0x100],rbp
   1400286a6:	call   0x140055de8
   1400286ab:	mov    rcx,QWORD PTR [rdi+0x8]
   1400286af:	mov    QWORD PTR [rdi+0x4148],rbp
   1400286b6:	call   0x140055de8
   1400286bb:	mov    rcx,QWORD PTR [rdi+0x6188]
   1400286c2:	mov    QWORD PTR [rdi+0x8],rbp
   1400286c6:	call   0x140055de8
   1400286cb:	mov    rcx,QWORD PTR [rdi+0x62a0]
   1400286d2:	mov    QWORD PTR [rdi+0x6188],rbp
   1400286d9:	call   0x140055de8
   1400286de:	mov    esi,ebp
   1400286e0:	mov    QWORD PTR [rdi+0x62a0],rbp
   1400286e7:	cmp    DWORD PTR [rdi+0x6298],ebp
   1400286ed:	jbe    0x140028715
   1400286ef:	mov    ebx,esi
   1400286f1:	mov    edx,0x8090
   1400286f6:	mov    rcx,QWORD PTR [rdi+rbx*8+0x6198]
   1400286fe:	call   0x140055de8
   140028703:	inc    esi
   140028705:	mov    QWORD PTR [rdi+rbx*8+0x6198],rbp
   14002870d:	cmp    esi,DWORD PTR [rdi+0x6298]
   140028713:	jb     0x1400286ef
   140028715:	mov    rcx,rdi
   140028718:	mov    rbx,QWORD PTR [rsp+0x30]
   14002871d:	mov    rbp,QWORD PTR [rsp+0x38]
   140028722:	mov    rsi,QWORD PTR [rsp+0x40]
   140028727:	add    rsp,0x20
   14002872b:	pop    rdi
   14002872c:	jmp    0x140029150
   140028731:	int3   
   140028732:	int3   
   140028733:	int3   
   140028734:	mov    rax,rsp
   140028737:	mov    QWORD PTR [rax+0x8],rbx
   14002873b:	mov    QWORD PTR [rax+0x18],rbp
   14002873f:	mov    DWORD PTR [rax+0x20],r9d
   140028743:	mov    QWORD PTR [rax+0x10],rdx
   140028747:	push   rsi
   140028748:	push   rdi
   140028749:	push   r12
   14002874b:	push   r13
   14002874d:	push   r14
   14002874f:	push   r15
   140028751:	mov    r14d,DWORD PTR [rsp+0x58]
   140028756:	xor    r11d,r11d
   140028759:	mov    eax,r9d
   14002875c:	mov    ebp,r8d
   14002875f:	mov    r12d,r11d
   140028762:	mov    r10d,0x400
   140028768:	lea    ebx,[r11+0x1]
   14002876c:	cmp    r14d,ebx
   14002876f:	jl     0x14002881a
   140028775:	lea    eax,[r14+r14*1]
   140028779:	mov    esi,ebx
   14002877b:	sub    ebp,eax
   14002877d:	lea    ecx,[rbx+0x7]
   140028780:	mov    r9d,r11d
   140028783:	mov    edi,ebp
   140028785:	mov    r8,rdx
   140028788:	mov    r13d,0x4
   14002878e:	cmp    edi,ecx
   140028790:	mov    eax,edi
   140028792:	mov    r11,r8
   140028795:	cmovg  eax,ecx
   140028798:	movsxd r15,eax
   14002879b:	add    r15,r8
   14002879e:	cmp    r8,r15
   1400287a1:	jae    0x1400287dd
   1400287a3:	lea    r14,[r8+rsi*1]
   1400287a7:	mov    dl,BYTE PTR [r14]
   1400287aa:	mov    al,BYTE PTR [r14+rsi*1]
   1400287ae:	sub    al,dl
   1400287b0:	sub    dl,BYTE PTR [r11]
   1400287b3:	movsx  ecx,al
   1400287b6:	movsx  eax,dl
   1400287b9:	sub    eax,ecx
   1400287bb:	mov    ecx,0x20
   1400287c0:	cdq    
   1400287c1:	xor    eax,edx
   1400287c3:	sub    eax,edx
   1400287c5:	cmp    eax,ecx
   1400287c7:	cmovl  ecx,eax
   1400287ca:	inc    r11
   1400287cd:	add    r9d,ecx
   1400287d0:	inc    r14
   1400287d3:	cmp    r11,r15
   1400287d6:	jb     0x1400287a7
   1400287d8:	mov    ecx,0x8
   1400287dd:	add    r8,0x40
   1400287e1:	sub    edi,0x40
   1400287e4:	sub    r13,0x1
   1400287e8:	jne    0x14002878e
   1400287ea:	mov    r14d,DWORD PTR [rsp+0x58]
   1400287ef:	xor    r11d,r11d
   1400287f2:	cmp    r9d,r10d
   1400287f5:	jge    0x140028803
   1400287f7:	mov    r12d,ebx
   1400287fa:	mov    r10d,r9d
   1400287fd:	cmp    r9d,0x10
   140028801:	jl     0x140028816
   140028803:	mov    rdx,QWORD PTR [rsp+0x40]
   140028808:	inc    ebx
   14002880a:	inc    rsi
   14002880d:	cmp    ebx,r14d
   140028810:	jle    0x140028780
   140028816:	mov    eax,DWORD PTR [rsp+0x50]
   14002881a:	mov    rbx,QWORD PTR [rsp+0x38]
   14002881f:	mov    rbp,QWORD PTR [rsp+0x48]
   140028824:	imul   r10d,eax
   140028828:	cmp    r10d,0xc000
   14002882f:	cmovl  r11d,r12d
   140028833:	mov    eax,r11d
   140028836:	pop    r15
   140028838:	pop    r14
   14002883a:	pop    r13
   14002883c:	pop    r12
   14002883e:	pop    rdi
   14002883f:	pop    rsi
   140028840:	ret    
   140028841:	int3   
   140028842:	int3   
   140028843:	int3   
   140028844:	mov    rax,rsp
   140028847:	mov    DWORD PTR [rax+0x20],r9d
   14002884b:	mov    QWORD PTR [rax+0x18],r8
   14002884f:	mov    QWORD PTR [rax+0x10],rdx
   140028853:	mov    QWORD PTR [rax+0x8],rcx
   140028857:	push   rbx
   140028858:	push   rbp
   140028859:	push   rsi
   14002885a:	push   rdi
   14002885b:	push   r12
   14002885d:	push   r13
   14002885f:	push   r14
   140028861:	push   r15
   140028863:	sub    rsp,0x58
   140028867:	movsxd rbp,DWORD PTR [rsp+0xc8]
   14002886f:	mov    r13d,r9d
   140028872:	mov    r12,QWORD PTR [rsp+0xc0]
   14002887a:	mov    r9d,0x20
   140028880:	mov    DWORD PTR [rsp+0x30],r9d
   140028885:	mov    r11,rdx
   140028888:	test   ebp,ebp
   14002888a:	jle    0x140028898
   14002888c:	mov    rcx,rbp
   14002888f:	mov    rdi,r12
   140028892:	or     rax,0xffffffffffffffff
   140028896:	rep stos DWORD PTR es:[rdi],eax
   140028898:	xor    edi,edi
   14002889a:	mov    QWORD PTR [rsp+0x40],r12
   14002889f:	mov    DWORD PTR [rsp+0x34],edi
   1400288a3:	mov    r15,r12
   1400288a6:	lea    eax,[rdi+0x1]
   1400288a9:	mov    ebx,0x20
   1400288ae:	mov    ecx,edi
   1400288b0:	sar    ebx,cl
   1400288b2:	mov    r14d,edi
   1400288b5:	cmp    edi,0x3
   1400288b8:	cmove  ebx,eax
   1400288bb:	xor    dl,dl
   1400288bd:	mov    DWORD PTR [rsp+0xc8],edx
   1400288c4:	cmp    edi,ebp
   1400288c6:	jge    0x1400289bd
   1400288cc:	mov    r8d,ebx
   1400288cf:	movsxd r10,ebx
   1400288d2:	neg    r8d
   1400288d5:	shl    r10,0x2
   1400288d9:	shl    r8d,0x8
   1400288dd:	mov    r9d,ebx
   1400288e0:	shl    r9d,0x8
   1400288e4:	mov    rsi,r15
   1400288e7:	mov    r15d,r13d
   1400288ea:	shl    edi,0x8
   1400288ed:	mov    r13,r11
   1400288f0:	mov    QWORD PTR [rsp+0x48],r10
   1400288f5:	sub    r13,r12
   1400288f8:	mov    DWORD PTR [rsp+0x3c],r9d
   1400288fd:	mov    r12d,DWORD PTR [rsp+0x30]
   140028902:	mov    DWORD PTR [rsp+0x38],r8d
   140028907:	cmp    DWORD PTR [rsi],0xffffffff
   14002890a:	jne    0x140028986
   14002890c:	test   r14d,r14d
   14002890f:	jle    0x14002892b
   140028911:	lea    eax,[rbp-0x1]
   140028914:	cmp    r14d,eax
   140028917:	jge    0x14002892b
   140028919:	cmp    DWORD PTR [rsi-0x4],0x0
   14002891d:	jne    0x14002892b
   14002891f:	cmp    DWORD PTR [rsi+0x4],0x0
   140028923:	jne    0x14002892b
   140028925:	xor    ecx,ecx
   140028927:	and    DWORD PTR [rsi],ecx
   140028929:	jmp    0x140028963
   14002892b:	mov    r9d,DWORD PTR [rsi+r13*1+0x14]
   140028930:	mov    r8d,r15d
   140028933:	mov    rcx,QWORD PTR [rsp+0xa0]
   14002893b:	movsxd rdx,edi
   14002893e:	add    rdx,QWORD PTR [rsp+0xb0]
   140028946:	mov    DWORD PTR [rsp+0x20],r12d
   14002894b:	call   0x140028734
   140028950:	mov    r8d,DWORD PTR [rsp+0x38]
   140028955:	mov    ecx,eax
   140028957:	mov    r9d,DWORD PTR [rsp+0x3c]
   14002895c:	mov    r10,QWORD PTR [rsp+0x48]
   140028961:	mov    DWORD PTR [rsi],eax
   140028963:	mov    eax,r12d
   140028966:	cdq    
   140028967:	sub    eax,edx
   140028969:	mov    edx,DWORD PTR [rsp+0xc8]
   140028970:	sar    eax,1
   140028972:	cmp    ecx,eax
   140028974:	movzx  edx,dl
   140028977:	mov    eax,0x1
   14002897c:	cmovg  edx,eax
   14002897f:	mov    DWORD PTR [rsp+0xc8],edx
   140028986:	add    r14d,ebx
   140028989:	add    edi,r9d
   14002898c:	add    r15d,r8d
   14002898f:	add    rsi,r10
   140028992:	cmp    r14d,ebp
   140028995:	jl     0x140028907
   14002899b:	mov    edi,DWORD PTR [rsp+0x34]
   14002899f:	mov    r15,QWORD PTR [rsp+0x40]
   1400289a4:	mov    r12,QWORD PTR [rsp+0xc0]
   1400289ac:	mov    r13d,DWORD PTR [rsp+0xb8]
   1400289b4:	mov    r9d,DWORD PTR [rsp+0x30]
   1400289b9:	test   dl,dl
   1400289bb:	jne    0x1400289cc
   1400289bd:	mov    eax,r9d
   1400289c0:	cdq    
   1400289c1:	sub    eax,edx
   1400289c3:	sar    eax,1
   1400289c5:	mov    r9d,eax
   1400289c8:	mov    DWORD PTR [rsp+0x30],eax
   1400289cc:	mov    r11,QWORD PTR [rsp+0xa8]
   1400289d4:	add    r15,0x4
   1400289d8:	sub    r13d,0x100
   1400289df:	mov    QWORD PTR [rsp+0x40],r15
   1400289e4:	mov    eax,0x1
   1400289e9:	mov    DWORD PTR [rsp+0xb8],r13d
   1400289f1:	add    edi,eax
   1400289f3:	mov    DWORD PTR [rsp+0x34],edi
   1400289f7:	cmp    edi,0x4
   1400289fa:	jl     0x1400288a9
   140028a00:	add    rsp,0x58
   140028a04:	pop    r15
   140028a06:	pop    r14
   140028a08:	pop    r13
   140028a0a:	pop    r12
   140028a0c:	pop    rdi
   140028a0d:	pop    rsi
   140028a0e:	pop    rbp
   140028a0f:	pop    rbx
   140028a10:	ret    
   140028a11:	int3   
   140028a12:	int3   
   140028a13:	int3   
   140028a14:	add    rcx,0x62c8
   140028a1b:	jmp    0x140011dc4
   140028a20:	mov    rax,rsp
   140028a23:	mov    QWORD PTR [rax+0x8],rcx
   140028a27:	push   rdi
   140028a28:	push   r14
   140028a2a:	push   r15
   140028a2c:	sub    rsp,0x30
   140028a30:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   140028a38:	mov    QWORD PTR [rax+0x10],rbx
   140028a3c:	mov    QWORD PTR [rax+0x18],rsi
   140028a40:	mov    rdi,rdx
   140028a43:	mov    rbx,rcx
   140028a46:	mov    DWORD PTR [rcx+0x110],edx
   140028a4c:	mov    ecx,0x400000
   140028a51:	cmp    rdx,rcx
   140028a54:	jbe    0x140028a62
   140028a56:	mov    rax,rdx
   140028a59:	shr    rax,1
   140028a5c:	mov    DWORD PTR [rbx+0x110],eax
   140028a62:	mov    edx,0x4000000
   140028a67:	cmp    rdi,rdx
   140028a6a:	jbe    0x140028a79
   140028a6c:	mov    rax,rdi
   140028a6f:	shr    rax,0x2
   140028a73:	mov    DWORD PTR [rbx+0x110],eax
   140028a79:	cmp    rdi,0x40000000
   140028a80:	jbe    0x140028a8f
   140028a82:	mov    rax,rdi
   140028a85:	shr    rax,0x3
   140028a89:	mov    DWORD PTR [rbx+0x110],eax
   140028a8f:	mov    eax,DWORD PTR [rbx+0x110]
   140028a95:	dec    eax
   140028a97:	mov    DWORD PTR [rbx+0x114],eax
   140028a9d:	mov    eax,edi
   140028a9f:	cmp    rdi,rcx
   140028aa2:	cmova  eax,ecx
   140028aa5:	mov    DWORD PTR [rbx+0x128],eax
   140028aab:	cmp    rdi,rdx
   140028aae:	jae    0x140028abb
   140028ab0:	lea    eax,[rdi-0x1011]
   140028ab6:	add    rdi,rdi
   140028ab9:	jmp    0x140028ac1
   140028abb:	lea    eax,[rdi-0x400000]
   140028ac1:	mov    DWORD PTR [rbx+0x124],eax
   140028ac7:	add    DWORD PTR [rbx+0x124],0xffffff00
   140028ad1:	mov    QWORD PTR [rbx+0x118],rdi
   140028ad8:	lea    eax,[rdi-0x1]
   140028adb:	mov    DWORD PTR [rbx+0x120],eax
   140028ae1:	lea    rcx,[rbx+0x62c8]
   140028ae8:	mov    edx,DWORD PTR [rbx+0x6298]
   140028aee:	call   0x140010c44
   140028af3:	mov    esi,DWORD PTR [rbx+0x128]
   140028af9:	mov    eax,0x4
   140028afe:	mul    rdi
   140028b01:	mov    r15,0xffffffffffffffff
   140028b08:	cmovo  rax,r15
   140028b0c:	mov    rcx,rax
   140028b0f:	call   0x140055df0
   140028b14:	mov    QWORD PTR [rbx+0x108],rax
   140028b1b:	lea    r14,[rdi+0x1011]
   140028b22:	mov    rcx,r14
   140028b25:	call   0x140055df0
   140028b2a:	mov    QWORD PTR [rbx+0xe0],rax
   140028b31:	mov    r8,rdi
   140028b34:	shl    r8,0x2
   140028b38:	xor    edx,edx
   140028b3a:	mov    rcx,QWORD PTR [rbx+0x108]
   140028b41:	call   0x140058f40
   140028b46:	mov    ecx,0x4000
   140028b4b:	call   0x140055df0
   140028b50:	mov    QWORD PTR [rbx+0xe8],rax
   140028b57:	mov    edi,0x80000
   140028b5c:	mov    ecx,edi
   140028b5e:	call   0x140055df0
   140028b63:	mov    QWORD PTR [rbx+0xf0],rax
   140028b6a:	mov    ecx,0x100000
   140028b6f:	call   0x140055df0
   140028b74:	mov    QWORD PTR [rbx+0xf8],rax
   140028b7b:	mov    ecx,DWORD PTR [rbx+0x110]
   140028b81:	lea    eax,[r15+0x5]
   140028b85:	mul    rcx
   140028b88:	cmovo  rax,r15
   140028b8c:	mov    rcx,rax
   140028b8f:	call   0x140055df0
   140028b94:	mov    QWORD PTR [rbx+0x100],rax
   140028b9b:	mov    ecx,0x40000
   140028ba0:	call   0x140055df0
   140028ba5:	mov    QWORD PTR [rbx+0x4148],rax
   140028bac:	mov    ecx,DWORD PTR [rbx+0x6298]
   140028bb2:	mov    QWORD PTR [rbx+0x10],rcx
   140028bb6:	mov    eax,0x24428
   140028bbb:	mul    rcx
   140028bbe:	cmovo  rax,r15
   140028bc2:	mov    rcx,rax
   140028bc5:	call   0x140055df0
   140028bca:	mov    QWORD PTR [rbx+0x8],rax
   140028bce:	mov    r8,r14
   140028bd1:	xor    edx,edx
   140028bd3:	mov    rcx,QWORD PTR [rbx+0xe0]
   140028bda:	call   0x140058f40
   140028bdf:	xor    edx,edx
   140028be1:	mov    r8d,0x4000
   140028be7:	mov    rcx,QWORD PTR [rbx+0xe8]
   140028bee:	call   0x140058f40
   140028bf3:	mov    r8d,edi
   140028bf6:	xor    edx,edx
   140028bf8:	mov    rcx,QWORD PTR [rbx+0xf0]
   140028bff:	call   0x140058f40
   140028c04:	xor    edx,edx
   140028c06:	mov    r8d,0x100000
   140028c0c:	mov    rcx,QWORD PTR [rbx+0xf8]
   140028c13:	call   0x140058f40
   140028c18:	mov    r8d,DWORD PTR [rbx+0x110]
   140028c1f:	shl    r8,0x2
   140028c23:	xor    edx,edx
   140028c25:	mov    rcx,QWORD PTR [rbx+0x100]
   140028c2c:	call   0x140058f40
   140028c31:	imul   r8,QWORD PTR [rbx+0x10],0x24428
   140028c39:	xor    edx,edx
   140028c3b:	mov    rcx,QWORD PTR [rbx+0x8]
   140028c3f:	call   0x140058f40
   140028c44:	lea    eax,[r15+0x8]
   140028c48:	mul    rsi
   140028c4b:	cmovo  rax,r15
   140028c4f:	mov    rcx,rax
   140028c52:	call   0x140055df0
   140028c57:	mov    QWORD PTR [rbx+0x6188],rax
   140028c5e:	mov    eax,DWORD PTR [rbx+0x6298]
   140028c64:	shl    eax,0x11
   140028c67:	cmp    eax,esi
   140028c69:	cmova  eax,esi
   140028c6c:	mov    DWORD PTR [rbx+0x62a8],eax
   140028c72:	mov    ecx,eax
   140028c74:	lea    eax,[r15+0x9]
   140028c78:	mul    rcx
   140028c7b:	cmovo  rax,r15
   140028c7f:	mov    rcx,rax
   140028c82:	call   0x140055df0
   140028c87:	mov    QWORD PTR [rbx+0x62a0],rax
   140028c8e:	xor    edi,edi
   140028c90:	cmp    edi,DWORD PTR [rbx+0x6298]
   140028c96:	jae    0x140028cae
   140028c98:	mov    ecx,0x8090
   140028c9d:	call   0x140055dac
   140028ca2:	mov    QWORD PTR [rbx+rdi*8+0x6198],rax
   140028caa:	inc    edi
   140028cac:	jmp    0x140028c90
   140028cae:	mov    rcx,rbx
   140028cb1:	call   0x140029174
   140028cb6:	nop
   140028cb7:	xor    edx,edx
   140028cb9:	mov    rcx,rbx
   140028cbc:	call   0x140028ce8
   140028cc1:	xor    r8d,r8d
   140028cc4:	xor    edx,edx
   140028cc6:	mov    rcx,rbx
   140028cc9:	call   0x140027e68
   140028cce:	mov    al,0x1
   140028cd0:	jmp    0x140028cd4
   140028cd2:	xor    al,al
   140028cd4:	mov    rbx,QWORD PTR [rsp+0x58]
   140028cd9:	mov    rsi,QWORD PTR [rsp+0x60]
   140028cde:	add    rsp,0x30
   140028ce2:	pop    r15
   140028ce4:	pop    r14
   140028ce6:	pop    rdi
   140028ce7:	ret    
   140028ce8:	mov    QWORD PTR [rsp+0x8],rbx
   140028ced:	mov    QWORD PTR [rsp+0x10],rsi
   140028cf2:	push   rdi
   140028cf3:	sub    rsp,0x20
   140028cf7:	mov    bl,dl
   140028cf9:	mov    rdi,rcx
   140028cfc:	mov    rcx,QWORD PTR [rcx+0xe8]
   140028d03:	xor    edx,edx
   140028d05:	mov    r8d,0x4000
   140028d0b:	call   0x140058f40
   140028d10:	xor    esi,esi
   140028d12:	test   bl,bl
   140028d14:	je     0x140028def
   140028d1a:	cmp    BYTE PTR [rdi+0x6169],sil
   140028d21:	jne    0x140028def
   140028d27:	mov    eax,DWORD PTR [rdi+0x110]
   140028d2d:	mov    ecx,DWORD PTR [rdi+0x6164]
   140028d33:	shr    eax,0x2
   140028d36:	cmp    ecx,eax
   140028d38:	ja     0x140028def
   140028d3e:	mov    r11d,esi
   140028d41:	test   ecx,ecx
   140028d43:	je     0x140028e30
   140028d49:	mov    ebx,0x3ffff
   140028d4e:	mov    rdx,QWORD PTR [rdi+0xe0]
   140028d55:	mov    r10d,r11d
   140028d58:	inc    r11d
   140028d5b:	movzx  eax,BYTE PTR [rdx+r10*1]
   140028d60:	imul   ecx,eax,0x2773
   140028d66:	movzx  eax,BYTE PTR [rdx+r10*1+0x1]
   140028d6c:	xor    ecx,eax
   140028d6e:	movzx  eax,BYTE PTR [rdx+r10*1+0x2]
   140028d74:	imul   r9d,ecx,0x2773
   140028d7b:	xor    r9d,eax
   140028d7e:	mov    rax,QWORD PTR [rdi+0xf0]
   140028d85:	mov    ecx,r9d
   140028d88:	and    rcx,rbx
   140028d8b:	mov    WORD PTR [rax+rcx*2],si
   140028d8f:	mov    rax,QWORD PTR [rdi+0xe0]
   140028d96:	movzx  r8d,BYTE PTR [rax+r10*1+0x3]
   140028d9c:	imul   eax,r9d,0x2773
   140028da3:	xor    r8d,eax
   140028da6:	mov    rax,QWORD PTR [rdi+0xf8]
   140028dad:	mov    ecx,r8d
   140028db0:	and    rcx,rbx
   140028db3:	mov    DWORD PTR [rax+rcx*4],esi
   140028db6:	mov    rax,QWORD PTR [rdi+0xe0]
   140028dbd:	imul   ecx,r8d,0x2773
   140028dc4:	movzx  edx,BYTE PTR [rax+r10*1+0x4]
   140028dca:	mov    eax,DWORD PTR [rdi+0x114]
   140028dd0:	xor    rdx,rcx
   140028dd3:	and    rdx,rax
   140028dd6:	mov    rax,QWORD PTR [rdi+0x100]
   140028ddd:	mov    DWORD PTR [rax+rdx*4],esi
   140028de0:	cmp    r11d,DWORD PTR [rdi+0x6164]
   140028de7:	jb     0x140028d4e
   140028ded:	jmp    0x140028e30
   140028def:	mov    rcx,QWORD PTR [rdi+0xf0]
   140028df6:	xor    edx,edx
   140028df8:	mov    r8d,0x80000
   140028dfe:	call   0x140058f40
   140028e03:	mov    rcx,QWORD PTR [rdi+0xf8]
   140028e0a:	xor    edx,edx
   140028e0c:	mov    r8d,0x100000
   140028e12:	call   0x140058f40
   140028e17:	mov    r8d,DWORD PTR [rdi+0x110]
   140028e1e:	xor    edx,edx
   140028e20:	mov    rcx,QWORD PTR [rdi+0x100]
   140028e27:	shl    r8,0x2
   140028e2b:	call   0x140058f40
   140028e30:	mov    rbx,QWORD PTR [rsp+0x30]
   140028e35:	mov    rsi,QWORD PTR [rsp+0x38]
   140028e3a:	add    rsp,0x20
   140028e3e:	pop    rdi
   140028e3f:	ret    
   140028e40:	mov    QWORD PTR [rsp+0x8],rbx
   140028e45:	mov    QWORD PTR [rsp+0x10],rsi
   140028e4a:	mov    QWORD PTR [rsp+0x18],rdi
   140028e4f:	mov    r9,QWORD PTR [rcx+0xe0]
   140028e56:	mov    rdi,rcx
   140028e59:	mov    rsi,rdx
   140028e5c:	movzx  eax,BYTE PTR [r9+rdx*1]
   140028e61:	movzx  ebx,BYTE PTR [r9+rdx*1+0x3]
   140028e67:	movzx  ecx,BYTE PTR [r9+rdx*1+0x4]
   140028e6d:	movzx  r11d,BYTE PTR [r9+rdx*1+0x1]
   140028e73:	movzx  r10d,BYTE PTR [r9+rdx*1+0x2]
   140028e79:	mov    r9d,0x3ffff
   140028e7f:	imul   r8d,eax,0x2773
   140028e86:	xor    r11d,r8d
   140028e89:	imul   eax,r11d,0x2773
   140028e90:	xor    r10d,eax
   140028e93:	imul   eax,r10d,0x2773
   140028e9a:	xor    ebx,eax
   140028e9c:	imul   eax,ebx,0x2773
   140028ea2:	xor    ecx,eax
   140028ea4:	mov    rax,QWORD PTR [rdi+0x100]
   140028eab:	and    ecx,DWORD PTR [rdi+0x114]
   140028eb1:	mov    r8d,ecx
   140028eb4:	mov    edx,DWORD PTR [rax+rcx*4]
   140028eb7:	mov    ecx,r11d
   140028eba:	mov    rax,QWORD PTR [rdi+0xe8]
   140028ec1:	and    ecx,0x3fff
   140028ec7:	and    edx,DWORD PTR [rdi+0x120]
   140028ecd:	mov    BYTE PTR [rcx+rax*1],sil
   140028ed1:	mov    ecx,r10d
   140028ed4:	mov    rax,QWORD PTR [rdi+0xf0]
   140028edb:	and    rcx,r9
   140028ede:	mov    WORD PTR [rax+rcx*2],si
   140028ee2:	mov    ecx,ebx
   140028ee4:	mov    rax,QWORD PTR [rdi+0xf8]
   140028eeb:	and    rcx,r9
   140028eee:	mov    rbx,QWORD PTR [rsp+0x8]
   140028ef3:	mov    DWORD PTR [rax+rcx*4],esi
   140028ef6:	mov    rax,QWORD PTR [rdi+0x100]
   140028efd:	mov    DWORD PTR [rax+r8*4],esi
   140028f01:	mov    rax,QWORD PTR [rdi+0x108]
   140028f08:	mov    rdi,QWORD PTR [rsp+0x18]
   140028f0d:	mov    DWORD PTR [rax+rsi*4],edx
   140028f10:	mov    rsi,QWORD PTR [rsp+0x10]
   140028f15:	ret    
   140028f16:	int3   
   140028f17:	int3   
   140028f18:	mov    rax,rsp
   140028f1b:	mov    QWORD PTR [rax+0x8],rbx
   140028f1f:	mov    QWORD PTR [rax+0x10],rbp
   140028f23:	mov    QWORD PTR [rax+0x18],rsi
   140028f27:	mov    QWORD PTR [rax+0x20],rdi
   140028f2b:	push   r12
   140028f2d:	push   r13
   140028f2f:	push   r14
   140028f31:	push   r15
   140028f33:	mov    ebp,DWORD PTR [rdx+0x8050]
   140028f39:	mov    r15,rcx
   140028f3c:	cmp    ebp,0xc
   140028f3f:	jg     0x14002905f
   140028f45:	mov    r13d,DWORD PTR [rdx+0x8048]
   140028f4c:	xor    edi,edi
   140028f4e:	lea    r12d,[r13+0x1]
   140028f52:	cmp    BYTE PTR [rdx+0x8060],0x0
   140028f59:	je     0x140028f6a
   140028f5b:	cmp    rdi,0x3
   140028f5f:	jne    0x140028f6a
   140028f61:	mov    r8d,DWORD PTR [rdx+0x8058]
   140028f68:	jmp    0x140028f72
   140028f6a:	mov    r8d,DWORD PTR [rdx+rdi*4+0x8074]
   140028f72:	test   r8d,r8d
   140028f75:	je     0x140029052
   140028f7b:	cmp    r8d,DWORD PTR [r15+0x124]
   140028f82:	ja     0x140029052
   140028f88:	cmp    BYTE PTR [r15+0x6169],0x0
   140028f90:	jne    0x140028f9b
   140028f92:	cmp    r8d,r13d
   140028f95:	ja     0x140029052
   140028f9b:	mov    eax,DWORD PTR [rdx+0x8054]
   140028fa1:	xor    r9d,r9d
   140028fa4:	mov    rsi,QWORD PTR [r15+0xe0]
   140028fab:	mov    r11d,r12d
   140028fae:	sub    r11d,r8d
   140028fb1:	and    r11d,DWORD PTR [r15+0x120]
   140028fb8:	dec    eax
   140028fba:	lea    r14d,[r9+0xa]
   140028fbe:	cmp    eax,r14d
   140028fc1:	cmovl  r14d,eax
   140028fc5:	mov    eax,r11d
   140028fc8:	mov    al,BYTE PTR [r11+rsi*1]
   140028fcc:	cmp    BYTE PTR [r12+rsi*1],al
   140028fd0:	jne    0x140028fee
   140028fd2:	mov    ebx,r12d
   140028fd5:	sub    r11d,r12d
   140028fd8:	cmp    r9d,r14d
   140028fdb:	jge    0x140028fee
   140028fdd:	inc    ebx
   140028fdf:	inc    r9d
   140028fe2:	lea    eax,[r11+rbx*1]
   140028fe6:	mov    al,BYTE PTR [rax+rsi*1]
   140028fe9:	cmp    BYTE PTR [rbx+rsi*1],al
   140028fec:	je     0x140028fd8
   140028fee:	lea    ecx,[rbp-0x2]
   140028ff1:	cmp    r9d,ecx
   140028ff4:	jl     0x140029052
   140028ff6:	test   r8d,r8d
   140028ff9:	je     0x140029052
   140028ffb:	cmp    r9d,0x2
   140028fff:	jne    0x14002900a
   140029001:	cmp    r8d,0x100
   140029008:	jbe    0x14002902d
   14002900a:	cmp    r9d,0x3
   14002900e:	jne    0x140029019
   140029010:	cmp    r8d,0x2000
   140029017:	jbe    0x14002902d
   140029019:	cmp    r9d,0x4
   14002901d:	jne    0x14002902b
   14002901f:	cmp    r8d,0x40000
   140029026:	jbe    0x14002902d
   140029028:	cmp    r9d,r9d
   14002902b:	jle    0x140029052
   14002902d:	lea    eax,[rbp-0x1]
   140029030:	cmp    r9d,eax
   140029033:	jne    0x140029041
   140029035:	cmp    DWORD PTR [rdx+0x804c],0x1000
   14002903f:	jb     0x140029052
   140029041:	cmp    r9d,ecx
   140029044:	jne    0x14002907e
   140029046:	cmp    DWORD PTR [rdx+0x804c],0x20000
   140029050:	jae    0x14002907e
   140029052:	inc    rdi
   140029055:	cmp    rdi,0x4
   140029059:	jl     0x140028f52
   14002905f:	xor    al,al
   140029061:	mov    rbx,QWORD PTR [rsp+0x28]
   140029066:	mov    rbp,QWORD PTR [rsp+0x30]
   14002906b:	mov    rsi,QWORD PTR [rsp+0x38]
   140029070:	mov    rdi,QWORD PTR [rsp+0x40]
   140029075:	pop    r15
   140029077:	pop    r14
   140029079:	pop    r13
   14002907b:	pop    r12
   14002907d:	ret    
   14002907e:	mov    al,0x1
   140029080:	jmp    0x140029061
   140029082:	int3   
   140029083:	int3   
   140029084:	mov    QWORD PTR [rsp+0x8],rbx
   140029089:	mov    QWORD PTR [rsp+0x10],rsi
   14002908e:	push   rdi
   14002908f:	sub    rsp,0x20
   140029093:	mov    edi,DWORD PTR [rcx+0x13c]
   140029099:	mov    rbx,rcx
   14002909c:	mov    esi,0x1
   1400290a1:	mov    eax,DWORD PTR [rbx+0x13c]
   1400290a7:	test   edi,edi
   1400290a9:	cmove  edi,esi
   1400290ac:	cmp    edi,eax
   1400290ae:	je     0x1400290c4
   1400290b0:	test   eax,eax
   1400290b2:	jne    0x1400290b8
   1400290b4:	cmp    edi,esi
   1400290b6:	je     0x1400290c4
   1400290b8:	lea    rcx,[rbx+0x62c8]
   1400290bf:	call   0x1400105c8
   1400290c4:	mov    ecx,edi
   1400290c6:	mov    DWORD PTR [rbx+0x13c],edi
   1400290cc:	sub    ecx,esi
   1400290ce:	je     0x1400290de
   1400290d0:	cmp    ecx,esi
   1400290d2:	jne    0x1400290e6
   1400290d4:	mov    rcx,rbx
   1400290d7:	call   0x140027924
   1400290dc:	jmp    0x1400290e6
   1400290de:	mov    rcx,rbx
   1400290e1:	call   0x140027ba4
   1400290e6:	mov    ecx,DWORD PTR [rbx+0x4158]
   1400290ec:	sub    ecx,0x3
   1400290ef:	je     0x140029118
   1400290f1:	sub    ecx,esi
   1400290f3:	je     0x140029111
   1400290f5:	cmp    ecx,esi
   1400290f7:	jne    0x14002911a
   1400290f9:	mov    edi,DWORD PTR [rbx+0x13c]
   1400290ff:	cmp    edi,esi
   140029101:	jne    0x14002911a
   140029103:	lea    rcx,[rbx+0x62c8]
   14002910a:	call   0x1400105c8
   14002910f:	jmp    0x14002911a
   140029111:	mov    edi,0x2
   140029116:	jmp    0x14002911a
   140029118:	mov    edi,esi
   14002911a:	mov    eax,DWORD PTR [rbx+0x12c]
   140029120:	cmp    DWORD PTR [rbx+0x6164],eax
   140029126:	jne    0x1400290a1
   14002912c:	xor    edx,edx
   14002912e:	mov    rcx,rbx
   140029131:	call   0x1400293e4
   140029136:	test   eax,eax
   140029138:	jne    0x1400290a1
   14002913e:	mov    rbx,QWORD PTR [rsp+0x30]
   140029143:	mov    rsi,QWORD PTR [rsp+0x38]
   140029148:	add    rsp,0x20
   14002914c:	pop    rdi
   14002914d:	ret    
   14002914e:	int3   
   14002914f:	int3   
   140029150:	rex push rbx
   140029152:	sub    rsp,0x20
   140029156:	mov    rbx,rcx
   140029159:	mov    rcx,QWORD PTR [rcx+0x62b0]
   140029160:	call   0x140055de8
   140029165:	and    QWORD PTR [rbx+0x62b0],0x0
   14002916d:	add    rsp,0x20
   140029171:	pop    rbx
   140029172:	ret    
   140029173:	int3   
   140029174:	rex push rbx
   140029176:	sub    rsp,0x20
   14002917a:	mov    eax,DWORD PTR [rcx+0x6298]
   140029180:	mov    rbx,rcx
   140029183:	cmp    eax,0x4
   140029186:	jae    0x140029194
   140029188:	mov    DWORD PTR [rcx+0x62b8],0x1
   140029192:	jmp    0x1400291a5
   140029194:	cmp    eax,0x8
   140029197:	sbb    eax,eax
   140029199:	and    eax,0xfffffffe
   14002919c:	add    eax,0x4
   14002919f:	mov    DWORD PTR [rcx+0x62b8],eax
   1400291a5:	mov    ecx,0x200000
   1400291aa:	call   0x140055df0
   1400291af:	xor    edx,edx
   1400291b1:	mov    QWORD PTR [rbx+0x62b0],rax
   1400291b8:	mov    r8d,0x200000
   1400291be:	mov    rcx,rax
   1400291c1:	add    rsp,0x20
   1400291c5:	pop    rbx
   1400291c6:	jmp    0x140058f40
   1400291cb:	int3   
   1400291cc:	mov    QWORD PTR [rsp+0x8],rbx
   1400291d1:	mov    QWORD PTR [rsp+0x10],rsi
   1400291d6:	mov    DWORD PTR [rsp+0x18],r8d
   1400291db:	push   rdi
   1400291dc:	push   r12
   1400291de:	push   r13
   1400291e0:	push   r14
   1400291e2:	push   r15
   1400291e4:	sub    rsp,0x20
   1400291e8:	xor    ebx,ebx
   1400291ea:	mov    rsi,rcx
   1400291ed:	mov    BYTE PTR [rcx+0x6169],bl
   1400291f3:	mov    al,BYTE PTR [rdx+0x4daa]
   1400291f9:	mov    BYTE PTR [rcx+0x6168],al
   1400291ff:	mov    rax,QWORD PTR [rcx+0x118]
   140029206:	mov    r9,QWORD PTR [rdx+0xe960]
   14002920d:	cmp    rax,r9
   140029210:	cmovb  r9,rax
   140029214:	lea    rdi,[r9-0x1]
   140029218:	cmp    BYTE PTR [rdx+0x4da9],bl
   14002921e:	jne    0x14002922e
   140029220:	mov    rax,QWORD PTR [rdx+0xc8]
   140029227:	cmp    rdi,rax
   14002922a:	cmovae rdi,rax
   14002922e:	mov    r15,QWORD PTR [rdx+0xc8]
   140029235:	mov    r12,QWORD PTR [rdx+0xe968]
   14002923c:	cmp    BYTE PTR [rdx+0x4d98],bl
   140029242:	je     0x140029280
   140029244:	mov    r14d,0x1
   14002924a:	cmp    r14,rdi
   14002924d:	ja     0x1400292b7
   14002924f:	lea    r13,[rdx+0x4b98]
   140029256:	mov    rdx,r15
   140029259:	mov    rcx,r13
   14002925c:	sub    rdx,r14
   14002925f:	and    rdx,r12
   140029262:	call   0x14004935c
   140029267:	mov    rcx,QWORD PTR [rsi+0xe0]
   14002926e:	sub    rcx,r14
   140029271:	inc    r14
   140029274:	mov    al,BYTE PTR [rax]
   140029276:	mov    BYTE PTR [rcx+rdi*1],al
   140029279:	cmp    r14,rdi
   14002927c:	jbe    0x140029256
   14002927e:	jmp    0x1400292b7
   140029280:	mov    r9,QWORD PTR [rdx+0x4b90]
   140029287:	mov    edx,0x1
   14002928c:	cmp    rdx,rdi
   14002928f:	ja     0x1400292b7
   140029291:	lea    r8,[r15-0x1]
   140029295:	mov    rcx,QWORD PTR [rsi+0xe0]
   14002929c:	mov    rax,r8
   14002929f:	sub    rcx,rdx
   1400292a2:	and    rax,r12
   1400292a5:	inc    rdx
   1400292a8:	dec    r8
   1400292ab:	mov    al,BYTE PTR [rax+r9*1]
   1400292af:	mov    BYTE PTR [rcx+rdi*1],al
   1400292b2:	cmp    rdx,rdi
   1400292b5:	jbe    0x140029295
   1400292b7:	mov    eax,DWORD PTR [rsi+0x120]
   1400292bd:	and    eax,edi
   1400292bf:	mov    DWORD PTR [rsi+0x6164],eax
   1400292c5:	mov    DWORD PTR [rsi+0x6190],eax
   1400292cb:	cmp    DWORD PTR [rsp+0x60],ebx
   1400292cf:	jne    0x14002932d
   1400292d1:	test   eax,eax
   1400292d3:	je     0x14002934a
   1400292d5:	mov    r8,QWORD PTR [rsi+0xe0]
   1400292dc:	movzx  eax,BYTE PTR [r8+rbx*1]
   1400292e1:	imul   ecx,eax,0x2773
   1400292e7:	movzx  eax,BYTE PTR [r8+rbx*1+0x1]
   1400292ed:	xor    ecx,eax
   1400292ef:	movzx  eax,BYTE PTR [r8+rbx*1+0x2]
   1400292f5:	imul   edx,ecx,0x2773
   1400292fb:	mov    ecx,DWORD PTR [rsi+0x120]
   140029301:	xor    edx,eax
   140029303:	mov    rax,QWORD PTR [rsi+0x100]
   14002930a:	movzx  edx,dx
   14002930d:	and    ecx,DWORD PTR [rax+rdx*4]
   140029310:	mov    DWORD PTR [rax+rdx*4],ebx
   140029313:	mov    rax,QWORD PTR [rsi+0x108]
   14002931a:	mov    DWORD PTR [rax+rbx*4],ecx
   14002931d:	inc    rbx
   140029320:	mov    eax,DWORD PTR [rsi+0x6164]
   140029326:	cmp    rbx,rax
   140029329:	jb     0x1400292d5
   14002932b:	jmp    0x14002934a
   14002932d:	test   eax,eax
   14002932f:	je     0x14002934a
   140029331:	mov    rdx,rbx
   140029334:	mov    rcx,rsi
   140029337:	call   0x140028e40
   14002933c:	mov    eax,DWORD PTR [rsi+0x6164]
   140029342:	inc    rbx
   140029345:	cmp    rbx,rax
   140029348:	jb     0x140029331
   14002934a:	mov    rbx,QWORD PTR [rsp+0x50]
   14002934f:	mov    rsi,QWORD PTR [rsp+0x58]
   140029354:	add    rsp,0x20
   140029358:	pop    r15
   14002935a:	pop    r14
   14002935c:	pop    r13
   14002935e:	pop    r12
   140029360:	pop    rdi
   140029361:	ret    
   140029362:	int3   
   140029363:	int3   
   140029364:	test   r8d,r8d
   140029367:	je     0x1400293e2
   140029369:	mov    QWORD PTR [rsp+0x8],rbx
   14002936e:	mov    QWORD PTR [rsp+0x10],rsi
   140029373:	mov    QWORD PTR [rsp+0x18],rdi
   140029378:	push   r14
   14002937a:	sub    rsp,0x20
   14002937e:	mov    esi,r8d
   140029381:	mov    r14,rdx
   140029384:	mov    rbx,rcx
   140029387:	mov    edi,DWORD PTR [rbx+0x18]
   14002938a:	sub    edi,DWORD PTR [rbx+0x1c]
   14002938d:	cmp    esi,edi
   14002938f:	cmovb  edi,esi
   140029392:	test   edi,edi
   140029394:	je     0x1400293b0
   140029396:	mov    ecx,DWORD PTR [rbx+0x1c]
   140029399:	mov    rdx,r14
   14002939c:	mov    rax,QWORD PTR [rbx+0x10]
   1400293a0:	mov    r8d,edi
   1400293a3:	shl    r8,0x3
   1400293a7:	lea    rcx,[rax+rcx*8]
   1400293ab:	call   0x140059180
   1400293b0:	add    DWORD PTR [rbx+0x1c],edi
   1400293b3:	lea    r14,[r14+rdi*8]
   1400293b7:	mov    eax,DWORD PTR [rbx+0x1c]
   1400293ba:	sub    esi,edi
   1400293bc:	cmp    eax,DWORD PTR [rbx+0x18]
   1400293bf:	jne    0x1400293c9
   1400293c1:	mov    rcx,rbx
   1400293c4:	call   0x1400105c8
   1400293c9:	test   esi,esi
   1400293cb:	jne    0x140029387
   1400293cd:	mov    rbx,QWORD PTR [rsp+0x30]
   1400293d2:	mov    rsi,QWORD PTR [rsp+0x38]
   1400293d7:	mov    rdi,QWORD PTR [rsp+0x40]
   1400293dc:	add    rsp,0x20
   1400293e0:	pop    r14
   1400293e2:	ret    
   1400293e3:	int3   
   1400293e4:	mov    rax,rsp
   1400293e7:	mov    QWORD PTR [rax+0x8],rbx
   1400293eb:	mov    QWORD PTR [rax+0x10],rbp
   1400293ef:	mov    QWORD PTR [rax+0x18],rsi
   1400293f3:	mov    QWORD PTR [rax+0x20],rdi
   1400293f7:	push   r14
   1400293f9:	sub    rsp,0x30
   1400293fd:	mov    bl,dl
   1400293ff:	lea    rsi,[rcx+0x4150]
   140029406:	mov    edx,DWORD PTR [rcx+0x120]
   14002940c:	mov    rdi,rcx
   14002940f:	mov    rcx,rsi
   140029412:	call   0x140030e60
   140029417:	test   bl,bl
   140029419:	jne    0x14002942b
   14002941b:	cmp    DWORD PTR [rdi+0x12c],0x0
   140029422:	jne    0x14002942b
   140029424:	mov    BYTE PTR [rdi+0x6169],0x1
   14002942b:	mov    ecx,DWORD PTR [rdi+0x12c]
   140029431:	mov    rax,QWORD PTR [rdi+0x118]
   140029438:	mov    edx,DWORD PTR [rdi+0x128]
   14002943e:	sub    rax,rcx
   140029441:	cmp    rdx,rax
   140029444:	jb     0x14002944e
   140029446:	mov    edx,DWORD PTR [rdi+0x118]
   14002944c:	sub    edx,ecx
   14002944e:	mov    rbp,QWORD PTR [rdi+0xe0]
   140029455:	add    rbp,rcx
   140029458:	mov    r8d,edx
   14002945b:	mov    rcx,QWORD PTR [rdi+0x6178]
   140029462:	mov    rdx,rbp
   140029465:	call   0x140037068
   14002946a:	mov    ebx,eax
   14002946c:	test   eax,eax
   14002946e:	je     0x140029477
   140029470:	mov    BYTE PTR [rdi+0x6168],0x1
   140029477:	mov    r14d,0x80
   14002947d:	cmp    ebx,r14d
   140029480:	jbe    0x1400294be
   140029482:	mov    edx,DWORD PTR [rdi+0x12c]
   140029488:	lea    r9,[rdi+0x140]
   14002948f:	mov    r8d,ebx
   140029492:	mov    QWORD PTR [rsp+0x20],0x400
   14002949b:	mov    rcx,rdi
   14002949e:	call   0x140026ab8
   1400294a3:	mov    r9d,DWORD PTR [rdi+0x12c]
   1400294aa:	mov    r8d,ebx
   1400294ad:	mov    rdx,rbp
   1400294b0:	mov    DWORD PTR [rdi+0x4140],eax
   1400294b6:	mov    rcx,rdi
   1400294b9:	call   0x140026d38
   1400294be:	add    QWORD PTR [rdi+0x6170],rbx
   1400294c5:	cmp    DWORD PTR [rdi+0x12c],0x1011
   1400294cf:	ja     0x14002953d
   1400294d1:	mov    rcx,QWORD PTR [rdi+0xe0]
   1400294d8:	mov    eax,0x20
   1400294dd:	mov    rdx,QWORD PTR [rdi+0x118]
   1400294e4:	add    rdx,rcx
   1400294e7:	movups xmm0,XMMWORD PTR [rcx]
   1400294ea:	movups XMMWORD PTR [rdx],xmm0
   1400294ed:	movups xmm1,XMMWORD PTR [rcx+0x10]
   1400294f1:	movups XMMWORD PTR [rdx+0x10],xmm1
   1400294f5:	movups xmm0,XMMWORD PTR [rcx+0x20]
   1400294f9:	movups XMMWORD PTR [rdx+0x20],xmm0
   1400294fd:	movups xmm1,XMMWORD PTR [rcx+0x30]
   140029501:	movups XMMWORD PTR [rdx+0x30],xmm1
   140029505:	movups xmm0,XMMWORD PTR [rcx+0x40]
   140029509:	movups XMMWORD PTR [rdx+0x40],xmm0
   14002950d:	movups xmm1,XMMWORD PTR [rcx+0x50]
   140029511:	movups XMMWORD PTR [rdx+0x50],xmm1
   140029515:	movups xmm0,XMMWORD PTR [rcx+0x60]
   140029519:	movups XMMWORD PTR [rdx+0x60],xmm0
   14002951d:	add    rdx,r14
   140029520:	movups xmm1,XMMWORD PTR [rcx+0x70]
   140029524:	add    rcx,r14
   140029527:	movups XMMWORD PTR [rdx-0x10],xmm1
   14002952b:	sub    rax,0x1
   14002952f:	jne    0x1400294e7
   140029531:	movups xmm0,XMMWORD PTR [rcx]
   140029534:	movups XMMWORD PTR [rdx],xmm0
   140029537:	mov    al,BYTE PTR [rcx+0x10]
   14002953a:	mov    BYTE PTR [rdx+0x10],al
   14002953d:	test   ebx,ebx
   14002953f:	je     0x140029552
   140029541:	mov    edx,DWORD PTR [rdi+0x12c]
   140029547:	mov    r8d,ebx
   14002954a:	mov    rcx,rdi
   14002954d:	call   0x1400270bc
   140029552:	mov    edx,DWORD PTR [rdi+0x12c]
   140029558:	mov    r8d,0x6
   14002955e:	add    edx,ebx
   140029560:	mov    rcx,rsi
   140029563:	and    edx,DWORD PTR [rdi+0x120]
   140029569:	mov    DWORD PTR [rdi+0x12c],edx
   14002956f:	call   0x140030d90
   140029574:	mov    rbp,QWORD PTR [rsp+0x48]
   140029579:	mov    eax,ebx
   14002957b:	mov    rbx,QWORD PTR [rsp+0x40]
   140029580:	mov    rsi,QWORD PTR [rsp+0x50]
   140029585:	mov    rdi,QWORD PTR [rsp+0x58]
   14002958a:	add    rsp,0x30
   14002958e:	pop    r14
   140029590:	ret    
   140029591:	int3   
   140029592:	int3   
   140029593:	int3   
   140029594:	mov    QWORD PTR [rsp+0x10],rbx
   140029599:	mov    QWORD PTR [rsp+0x18],rbp
   14002959e:	mov    QWORD PTR [rsp+0x20],rsi
   1400295a3:	push   rdi
   1400295a4:	push   r12
   1400295a6:	push   r13
   1400295a8:	push   r14
   1400295aa:	push   r15
   1400295ac:	sub    rsp,0x20
   1400295b0:	xor    eax,eax
   1400295b2:	mov    rbp,rcx
   1400295b5:	xor    ecx,ecx
   1400295b7:	mov    rsi,rdx
   1400295ba:	mov    DWORD PTR [rdx+0x18],ecx
   1400295bd:	mov    DWORD PTR [rdx+0x8088],ecx
   1400295c3:	mov    QWORD PTR [rdx+0x8074],rax
   1400295ca:	mov    QWORD PTR [rdx+0x807c],rax
   1400295d1:	cmp    DWORD PTR [rbp+0x130],ecx
   1400295d7:	jne    0x1400295e6
   1400295d9:	mov    rcx,rbp
   1400295dc:	call   0x140029a20
   1400295e1:	jmp    0x140029a03
   1400295e6:	lea    rdi,[rdx+0x1c]
   1400295ea:	mov    BYTE PTR [rdx+0x8060],cl
   1400295f0:	mov    BYTE PTR [rdx+0x8070],cl
   1400295f6:	mov    r14d,0x4008
   1400295fc:	mov    DWORD PTR [rdx+0x8068],ecx
   140029602:	mov    r8d,r14d
   140029605:	mov    rcx,rdi
   140029608:	xor    edx,edx
   14002960a:	call   0x140058f40
   14002960f:	lea    rbx,[rsi+0x4024]
   140029616:	mov    r8d,r14d
   140029619:	mov    rcx,rbx
   14002961c:	xor    edx,edx
   14002961e:	call   0x140058f40
   140029623:	mov    QWORD PTR [rsi+0x8030],rdi
   14002962a:	xor    edi,edi
   14002962c:	mov    r13d,edi
   14002962f:	mov    QWORD PTR [rsi+0x8038],rbx
   140029636:	mov    r15d,edi
   140029639:	mov    QWORD PTR [rsi+0x8040],rdi
   140029640:	cmp    DWORD PTR [rsi+0xc],edi
   140029643:	jbe    0x1400299ad
   140029649:	mov    ecx,DWORD PTR [rsi+0xc]
   14002964c:	mov    eax,0x1001
   140029651:	mov    ebx,DWORD PTR [rsi+0x8]
   140029654:	sub    ecx,r15d
   140029657:	cmp    ecx,eax
   140029659:	cmovb  eax,ecx
   14002965c:	add    ebx,r15d
   14002965f:	mov    DWORD PTR [rsi+0x8054],eax
   140029665:	and    ebx,DWORD PTR [rbp+0x120]
   14002966b:	mov    DWORD PTR [rsi+0x8048],ebx
   140029671:	mov    ecx,ebx
   140029673:	sub    ecx,DWORD PTR [rbp+0x6190]
   140029679:	mov    r10d,ebx
   14002967c:	mov    r8d,DWORD PTR [rbp+0x120]
   140029683:	and    r10d,0xffffff00
   14002968a:	and    rcx,r8
   14002968d:	imul   rdx,rcx,0x7
   140029691:	add    rdx,QWORD PTR [rbp+0x6188]
   140029698:	movzx  eax,BYTE PTR [rdx]
   14002969b:	movzx  r9d,WORD PTR [rdx+0x1]
   1400296a0:	or     r10d,eax
   1400296a3:	mov    r11d,DWORD PTR [rdx+0x3]
   1400296a7:	mov    eax,ebx
   1400296a9:	and    eax,0xffff0000
   1400296ae:	or     r9d,eax
   1400296b1:	cmp    r9d,ebx
   1400296b4:	jb     0x1400296c0
   1400296b6:	add    r9d,0xffff0000
   1400296bd:	and    r9d,r8d
   1400296c0:	cmp    r10d,ebx
   1400296c3:	jb     0x1400296cf
   1400296c5:	add    r10d,0xffffff00
   1400296cc:	and    r10d,r8d
   1400296cf:	mov    rdx,QWORD PTR [rbp+0xe0]
   1400296d6:	mov    al,BYTE PTR [r10+rdx*1]
   1400296da:	mov    r8b,BYTE PTR [r11+rdx*1]
   1400296de:	mov    dil,BYTE PTR [r9+rdx*1]
   1400296e2:	mov    r12b,BYTE PTR [rbx+rdx*1]
   1400296e6:	mov    BYTE PTR [rsp+0x50],al
   1400296ea:	lea    eax,[rbx+0x1]
   1400296ed:	mov    r14b,BYTE PTR [rax+rdx*1]
   1400296f1:	mov    edx,0x2
   1400296f6:	mov    DWORD PTR [rsi+0x8050],0x1
   140029700:	cmp    DWORD PTR [rsi+0x8040],edx
   140029706:	jl     0x140029724
   140029708:	lea    ecx,[rdx+0x6]
   14002970b:	mov    rax,QWORD PTR [rsi+0x8030]
   140029712:	inc    edx
   140029714:	and    DWORD PTR [rcx+rax*1],0x0
   140029718:	lea    rcx,[rcx+0x4]
   14002971c:	cmp    edx,DWORD PTR [rsi+0x8040]
   140029722:	jle    0x14002970b
   140029724:	and    DWORD PTR [rsi+0x8040],0x0
   14002972b:	cmp    r8b,r12b
   14002972e:	jne    0x1400297a8
   140029730:	mov    r8,QWORD PTR [rbp+0xe0]
   140029737:	lea    eax,[r11+0x1]
   14002973b:	cmp    BYTE PTR [rax+r8*1],r14b
   14002973f:	jne    0x1400297a8
   140029741:	lea    eax,[rbx+0x2]
   140029744:	mov    al,BYTE PTR [rax+r8*1]
   140029748:	lea    edx,[r11+0x2]
   14002974c:	cmp    BYTE PTR [rdx+r8*1],al
   140029750:	jne    0x1400297a8
   140029752:	lea    eax,[rbx+0x3]
   140029755:	mov    al,BYTE PTR [rax+r8*1]
   140029759:	lea    edx,[r11+0x3]
   14002975d:	cmp    BYTE PTR [rdx+r8*1],al
   140029761:	jne    0x1400297a8
   140029763:	cmp    DWORD PTR [rsi+0x8054],0x3
   14002976a:	jle    0x1400297a8
   14002976c:	mov    ecx,ebx
   14002976e:	sub    ecx,r11d
   140029771:	mov    r11d,0x4
   140029777:	and    ecx,DWORD PTR [rbp+0x120]
   14002977d:	lea    eax,[rcx-0x1]
   140029780:	cmp    eax,0x3ffff
   140029785:	ja     0x1400297ae
   140029787:	cmp    ecx,DWORD PTR [rbp+0x124]
   14002978d:	jae    0x1400297ae
   14002978f:	mov    rax,QWORD PTR [rsi+0x8030]
   140029796:	mov    DWORD PTR [rsi+0x8050],r11d
   14002979d:	mov    DWORD PTR [rsi+0x804c],ecx
   1400297a3:	mov    DWORD PTR [rax+0x10],ecx
   1400297a6:	jmp    0x1400297ae
   1400297a8:	mov    r11d,0x4
   1400297ae:	cmp    dil,r12b
   1400297b1:	jne    0x140029823
   1400297b3:	mov    r8,QWORD PTR [rbp+0xe0]
   1400297ba:	lea    eax,[r9+0x1]
   1400297be:	cmp    BYTE PTR [rax+r8*1],r14b
   1400297c2:	jne    0x140029823
   1400297c4:	lea    eax,[rbx+0x2]
   1400297c7:	mov    al,BYTE PTR [rax+r8*1]
   1400297cb:	lea    edx,[r9+0x2]
   1400297cf:	cmp    BYTE PTR [rdx+r8*1],al
   1400297d3:	jne    0x140029823
   1400297d5:	cmp    DWORD PTR [rsi+0x8054],0x2
   1400297dc:	jle    0x140029823
   1400297de:	mov    ecx,ebx
   1400297e0:	sub    ecx,r9d
   1400297e3:	and    ecx,DWORD PTR [rbp+0x120]
   1400297e9:	lea    eax,[rcx-0x1]
   1400297ec:	cmp    eax,0x1fff
   1400297f1:	ja     0x140029823
   1400297f3:	cmp    DWORD PTR [rsi+0x8050],r11d
   1400297fa:	jl     0x140029809
   1400297fc:	mov    eax,DWORD PTR [rsi+0x804c]
   140029802:	shr    eax,0x5
   140029805:	cmp    ecx,eax
   140029807:	jae    0x140029823
   140029809:	mov    rax,QWORD PTR [rsi+0x8030]
   140029810:	mov    DWORD PTR [rsi+0x8050],0x3
   14002981a:	mov    DWORD PTR [rsi+0x804c],ecx
   140029820:	mov    DWORD PTR [rax+0xc],ecx
   140029823:	xor    edi,edi
   140029825:	cmp    DWORD PTR [rsi+0x8050],0x2
   14002982c:	jge    0x14002987d
   14002982e:	cmp    BYTE PTR [rsp+0x50],r12b
   140029833:	jne    0x14002987d
   140029835:	mov    rax,QWORD PTR [rbp+0xe0]
   14002983c:	lea    ecx,[r10+0x1]
   140029840:	cmp    BYTE PTR [rcx+rax*1],r14b
   140029844:	jne    0x14002987d
   140029846:	cmp    DWORD PTR [rsi+0x8054],0x1
   14002984d:	jle    0x14002987d
   14002984f:	test   r13d,r13d
   140029852:	jle    0x140029879
   140029854:	mov    rax,QWORD PTR [rsi+0x8030]
   14002985b:	mov    ecx,ebx
   14002985d:	mov    DWORD PTR [rsi+0x8050],0x2
   140029867:	sub    ecx,r10d
   14002986a:	and    ecx,DWORD PTR [rbp+0x120]
   140029870:	mov    DWORD PTR [rsi+0x804c],ecx
   140029876:	mov    DWORD PTR [rax+0x8],ecx
   140029879:	sub    r13d,0xffffff80
   14002987d:	mov    eax,DWORD PTR [rsi+0x8040]
   140029883:	mov    rdx,rsi
   140029886:	cmp    DWORD PTR [rsi+0x8050],0x1
   14002988d:	mov    rcx,rbp
   140029890:	cmovg  eax,r11d
   140029894:	mov    DWORD PTR [rsi+0x8040],eax
   14002989a:	call   0x140029f80
   14002989f:	mov    eax,DWORD PTR [rsi+0x8050]
   1400298a5:	cmp    eax,0x2
   1400298a8:	je     0x1400298b2
   1400298aa:	dec    r13d
   1400298ad:	cmp    eax,0x2
   1400298b0:	jl     0x140029902
   1400298b2:	cmp    BYTE PTR [rbp+0x6169],dil
   1400298b9:	jne    0x1400298c3
   1400298bb:	cmp    DWORD PTR [rsi+0x804c],ebx
   1400298c1:	ja     0x140029902
   1400298c3:	cmp    DWORD PTR [rbp+0x130],0x2
   1400298ca:	jl     0x1400298e7
   1400298cc:	cmp    eax,DWORD PTR [rsi+0x8054]
   1400298d2:	jge    0x1400298e7
   1400298d4:	mov    rdx,rsi
   1400298d7:	mov    rcx,rbp
   1400298da:	call   0x140029c04
   1400298df:	test   al,al
   1400298e1:	je     0x1400298e7
   1400298e3:	mov    bl,0x1
   1400298e5:	jmp    0x140029905
   1400298e7:	mov    rdx,rsi
   1400298ea:	mov    rcx,rbp
   1400298ed:	call   0x14002a508
   1400298f2:	mov    eax,DWORD PTR [rsi+0x8050]
   1400298f8:	dec    eax
   1400298fa:	add    r15d,eax
   1400298fd:	jmp    0x1400299a0
   140029902:	mov    bl,dil
   140029905:	cmp    BYTE PTR [rsi+0x8070],dil
   14002990c:	je     0x140029932
   14002990e:	mov    edx,DWORD PTR [rsi+0x18]
   140029911:	mov    rcx,QWORD PTR [rsi+0x10]
   140029915:	mov    r8b,BYTE PTR [rsi+0x8064]
   14002991c:	lea    eax,[rdx+0x1]
   14002991f:	mov    DWORD PTR [rsi+0x18],eax
   140029922:	mov    BYTE PTR [rcx+rdx*8],dil
   140029926:	mov    BYTE PTR [rcx+rdx*8+0x4],r8b
   14002992b:	mov    BYTE PTR [rsi+0x8070],dil
   140029932:	cmp    BYTE PTR [rsi+0x8060],dil
   140029939:	je     0x14002995b
   14002993b:	mov    r9d,DWORD PTR [rsi+0x8058]
   140029942:	mov    rdx,rsi
   140029945:	mov    r8d,DWORD PTR [rsi+0x805c]
   14002994c:	mov    rcx,rbp
   14002994f:	call   0x14002a988
   140029954:	mov    BYTE PTR [rsi+0x8060],dil
   14002995b:	test   bl,bl
   14002995d:	je     0x14002998a
   14002995f:	movzx  eax,r12b
   140029963:	mov    DWORD PTR [rsi+0x8064],eax
   140029969:	mov    eax,DWORD PTR [rsi+0x804c]
   14002996f:	mov    DWORD PTR [rsi+0x8068],eax
   140029975:	mov    eax,DWORD PTR [rsi+0x8050]
   14002997b:	mov    DWORD PTR [rsi+0x806c],eax
   140029981:	mov    BYTE PTR [rsi+0x8070],0x1
   140029988:	jmp    0x1400299a0
   14002998a:	mov    edx,DWORD PTR [rsi+0x18]
   14002998d:	mov    rcx,QWORD PTR [rsi+0x10]
   140029991:	lea    eax,[rdx+0x1]
   140029994:	mov    DWORD PTR [rsi+0x18],eax
   140029997:	mov    BYTE PTR [rcx+rdx*8],dil
   14002999b:	mov    BYTE PTR [rcx+rdx*8+0x4],r12b
   1400299a0:	inc    r15d
   1400299a3:	cmp    r15d,DWORD PTR [rsi+0xc]
   1400299a7:	jb     0x140029649
   1400299ad:	cmp    BYTE PTR [rsi+0x8070],dil
   1400299b4:	je     0x1400299da
   1400299b6:	mov    edx,DWORD PTR [rsi+0x18]
   1400299b9:	mov    rcx,QWORD PTR [rsi+0x10]
   1400299bd:	mov    r8b,BYTE PTR [rsi+0x8064]
   1400299c4:	lea    eax,[rdx+0x1]
   1400299c7:	mov    DWORD PTR [rsi+0x18],eax
   1400299ca:	mov    BYTE PTR [rcx+rdx*8],dil
   1400299ce:	mov    BYTE PTR [rcx+rdx*8+0x4],r8b
   1400299d3:	mov    BYTE PTR [rsi+0x8070],dil
   1400299da:	cmp    BYTE PTR [rsi+0x8060],dil
   1400299e1:	je     0x140029a03
   1400299e3:	mov    r9d,DWORD PTR [rsi+0x8058]
   1400299ea:	mov    rdx,rsi
   1400299ed:	mov    r8d,DWORD PTR [rsi+0x805c]
   1400299f4:	mov    rcx,rbp
   1400299f7:	call   0x14002a988
   1400299fc:	mov    BYTE PTR [rsi+0x8060],dil
   140029a03:	mov    rbx,QWORD PTR [rsp+0x58]
   140029a08:	mov    rbp,QWORD PTR [rsp+0x60]
   140029a0d:	mov    rsi,QWORD PTR [rsp+0x68]
   140029a12:	add    rsp,0x20
   140029a16:	pop    r15
   140029a18:	pop    r14
   140029a1a:	pop    r13
   140029a1c:	pop    r12
   140029a1e:	pop    rdi
   140029a1f:	ret    
   140029a20:	mov    QWORD PTR [rsp+0x8],rbx
   140029a25:	mov    QWORD PTR [rsp+0x18],rbp
   140029a2a:	mov    QWORD PTR [rsp+0x20],rsi
   140029a2f:	push   rdi
   140029a30:	push   r12
   140029a32:	push   r13
   140029a34:	push   r14
   140029a36:	push   r15
   140029a38:	sub    rsp,0x20
   140029a3c:	xor    esi,esi
   140029a3e:	mov    rbx,rdx
   140029a41:	mov    rdi,rcx
   140029a44:	cmp    DWORD PTR [rdx+0xc],esi
   140029a47:	jbe    0x140029bd9
   140029a4d:	mov    r11d,DWORD PTR [rbx+0x8]
   140029a51:	mov    r13d,0x1001
   140029a57:	mov    eax,DWORD PTR [rbx+0xc]
   140029a5a:	sub    eax,esi
   140029a5c:	cmp    eax,r13d
   140029a5f:	cmovb  r13d,eax
   140029a63:	add    r11d,esi
   140029a66:	mov    DWORD PTR [rbx+0x8054],r13d
   140029a6d:	and    r11d,DWORD PTR [rdi+0x120]
   140029a74:	mov    DWORD PTR [rbx+0x8048],r11d
   140029a7b:	mov    rax,QWORD PTR [rdi+0x108]
   140029a82:	mov    r10d,DWORD PTR [rax+r11*4]
   140029a86:	mov    rax,QWORD PTR [rdi+0xe0]
   140029a8d:	mov    bpl,BYTE PTR [r11+rax*1]
   140029a91:	mov    DWORD PTR [rbx+0x8050],0x1
   140029a9b:	mov    r15d,DWORD PTR [rdi+0x134]
   140029aa2:	mov    BYTE PTR [rsp+0x58],bpl
   140029aa7:	test   r15d,r15d
   140029aaa:	jle    0x140029bb8
   140029ab0:	mov    r9d,DWORD PTR [rdi+0x120]
   140029ab7:	mov    r8,QWORD PTR [rdi+0xe0]
   140029abe:	mov    eax,r10d
   140029ac1:	and    rax,r9
   140029ac4:	mov    r12d,r10d
   140029ac7:	cmp    BYTE PTR [rax+r8*1],bpl
   140029acb:	jne    0x140029b64
   140029ad1:	lea    ebp,[r10+0x1]
   140029ad5:	mov    edx,0x1
   140029ada:	mov    eax,ebp
   140029adc:	lea    ecx,[r11+0x1]
   140029ae0:	and    rax,r9
   140029ae3:	and    rcx,r9
   140029ae6:	mov    al,BYTE PTR [rax+r8*1]
   140029aea:	cmp    BYTE PTR [rcx+r8*1],al
   140029aee:	jne    0x140029b15
   140029af0:	mov    r14d,r11d
   140029af3:	sub    r14d,r10d
   140029af6:	cmp    edx,r13d
   140029af9:	jge    0x140029b15
   140029afb:	inc    ebp
   140029afd:	inc    edx
   140029aff:	mov    eax,ebp
   140029b01:	and    rax,r9
   140029b04:	lea    ecx,[r14+rbp*1]
   140029b08:	and    rcx,r9
   140029b0b:	mov    al,BYTE PTR [rax+r8*1]
   140029b0f:	cmp    BYTE PTR [rcx+r8*1],al
   140029b13:	je     0x140029af6
   140029b15:	cmp    edx,DWORD PTR [rbx+0x8050]
   140029b1b:	jle    0x140029b5f
   140029b1d:	cmp    edx,0x2
   140029b20:	jle    0x140029b5f
   140029b22:	mov    eax,r11d
   140029b25:	sub    eax,r10d
   140029b28:	and    eax,r9d
   140029b2b:	cmp    eax,DWORD PTR [rdi+0x124]
   140029b31:	ja     0x140029b5f
   140029b33:	test   eax,eax
   140029b35:	je     0x140029b5f
   140029b37:	cmp    edx,0x3
   140029b3a:	jne    0x140029b43
   140029b3c:	cmp    eax,0x2000
   140029b41:	jbe    0x140029b53
   140029b43:	cmp    edx,0x4
   140029b46:	jne    0x140029b51
   140029b48:	cmp    eax,0x40000
   140029b4d:	jbe    0x140029b53
   140029b4f:	cmp    edx,edx
   140029b51:	jle    0x140029b5f
   140029b53:	mov    DWORD PTR [rbx+0x804c],eax
   140029b59:	mov    DWORD PTR [rbx+0x8050],edx
   140029b5f:	mov    bpl,BYTE PTR [rsp+0x58]
   140029b64:	mov    rax,QWORD PTR [rdi+0x108]
   140029b6b:	dec    r15d
   140029b6e:	mov    r10d,DWORD PTR [rax+r12*4]
   140029b72:	test   r15d,r15d
   140029b75:	jg     0x140029ab0
   140029b7b:	mov    r8d,DWORD PTR [rbx+0x8050]
   140029b82:	cmp    r8d,0x2
   140029b86:	jl     0x140029bb8
   140029b88:	cmp    BYTE PTR [rdi+0x6169],0x0
   140029b8f:	jne    0x140029b9a
   140029b91:	cmp    DWORD PTR [rbx+0x804c],r11d
   140029b98:	ja     0x140029bb8
   140029b9a:	mov    r9d,DWORD PTR [rbx+0x804c]
   140029ba1:	mov    rdx,rbx
   140029ba4:	mov    rcx,rdi
   140029ba7:	call   0x14002a988
   140029bac:	mov    eax,DWORD PTR [rbx+0x8050]
   140029bb2:	dec    eax
   140029bb4:	add    esi,eax
   140029bb6:	jmp    0x140029bce
   140029bb8:	mov    edx,DWORD PTR [rbx+0x18]
   140029bbb:	mov    rcx,QWORD PTR [rbx+0x10]
   140029bbf:	lea    eax,[rdx+0x1]
   140029bc2:	mov    DWORD PTR [rbx+0x18],eax
   140029bc5:	mov    BYTE PTR [rcx+rdx*8],0x0
   140029bc9:	mov    BYTE PTR [rcx+rdx*8+0x4],bpl
   140029bce:	inc    esi
   140029bd0:	cmp    esi,DWORD PTR [rbx+0xc]
   140029bd3:	jb     0x140029a4d
   140029bd9:	mov    rbx,QWORD PTR [rsp+0x50]
   140029bde:	mov    rbp,QWORD PTR [rsp+0x60]
   140029be3:	mov    rsi,QWORD PTR [rsp+0x68]
   140029be8:	add    rsp,0x20
   140029bec:	pop    r15
   140029bee:	pop    r14
   140029bf0:	pop    r13
   140029bf2:	pop    r12
   140029bf4:	pop    rdi
   140029bf5:	ret    
   140029bf6:	int3   
   140029bf7:	int3   
   140029bf8:	mov    rdx,rcx
   140029bfb:	mov    rcx,QWORD PTR [rcx]
   140029bfe:	jmp    0x140029594
   140029c03:	int3   
   140029c04:	mov    QWORD PTR [rsp+0x8],rbx
   140029c09:	push   rbp
   140029c0a:	push   rsi
   140029c0b:	push   rdi
   140029c0c:	push   r12
   140029c0e:	push   r13
   140029c10:	push   r14
   140029c12:	push   r15
   140029c14:	sub    rsp,0x40
   140029c18:	mov    edi,DWORD PTR [rdx+0x804c]
   140029c1e:	mov    rbx,rdx
   140029c21:	mov    rsi,rcx
   140029c24:	cmp    DWORD PTR [rdx+0x8074],edi
   140029c2a:	je     0x140029f63
   140029c30:	cmp    DWORD PTR [rdx+0x8078],edi
   140029c36:	je     0x140029f63
   140029c3c:	cmp    DWORD PTR [rdx+0x807c],edi
   140029c42:	je     0x140029f63
   140029c48:	cmp    DWORD PTR [rdx+0x8080],edi
   140029c4e:	je     0x140029f63
   140029c54:	cmp    edi,DWORD PTR [rdx+0x8068]
   140029c5a:	je     0x140029f63
   140029c60:	call   0x140028f18
   140029c65:	test   al,al
   140029c67:	je     0x140029c70
   140029c69:	mov    al,0x1
   140029c6b:	jmp    0x140029f65
   140029c70:	mov    r13d,DWORD PTR [rbx+0x8048]
   140029c77:	xor    r14d,r14d
   140029c7a:	mov    r9,QWORD PTR [rsi+0xe0]
   140029c81:	inc    r13d
   140029c84:	mov    rax,QWORD PTR [rsi+0x108]
   140029c8b:	xor    ebp,ebp
   140029c8d:	mov    r11d,DWORD PTR [rsi+0x120]
   140029c94:	and    r13d,r11d
   140029c97:	mov    DWORD PTR [rsp+0x20],r14d
   140029c9c:	mov    r10d,DWORD PTR [rax+r13*4]
   140029ca0:	mov    al,BYTE PTR [r9+r13*1]
   140029ca4:	movzx  edx,BYTE PTR [r9+r13*1+0x1]
   140029caa:	mov    BYTE PTR [rsp+0x98],al
   140029cb1:	mov    BYTE PTR [rsp+0x88],al
   140029cb8:	movzx  eax,al
   140029cbb:	imul   ecx,eax,0x2773
   140029cc1:	movzx  eax,BYTE PTR [r9+r13*1+0x2]
   140029cc7:	xor    edx,ecx
   140029cc9:	imul   ecx,edx,0x2773
   140029ccf:	xor    ecx,eax
   140029cd1:	movzx  eax,BYTE PTR [r9+r13*1+0x3]
   140029cd7:	imul   edx,ecx,0x2773
   140029cdd:	mov    ecx,DWORD PTR [rsi+0x138]
   140029ce3:	mov    DWORD PTR [rsp+0x28],ecx
   140029ce7:	xor    edx,eax
   140029ce9:	movzx  eax,BYTE PTR [r9+r13*1+0x4]
   140029cef:	imul   r12d,edx,0x2773
   140029cf6:	xor    r12d,eax
   140029cf9:	mov    eax,DWORD PTR [rbx+0x8050]
   140029cff:	and    r12d,DWORD PTR [rsi+0x114]
   140029d06:	dec    eax
   140029d08:	mov    DWORD PTR [rsp+0x30],eax
   140029d0c:	mov    edx,eax
   140029d0e:	mov    DWORD PTR [rsp+0x24],eax
   140029d12:	add    eax,r13d
   140029d15:	mov    al,BYTE PTR [rax+r9*1]
   140029d19:	mov    BYTE PTR [rsp+0x90],al
   140029d20:	test   ecx,ecx
   140029d22:	je     0x140029f63
   140029d28:	mov    r15d,r11d
   140029d2b:	mov    DWORD PTR [rsp+0x2c],r11d
   140029d30:	mov    eax,r13d
   140029d33:	sub    eax,r10d
   140029d36:	and    eax,r15d
   140029d39:	cmp    eax,DWORD PTR [rsi+0x124]
   140029d3f:	ja     0x140029f63
   140029d45:	cmp    eax,ebp
   140029d47:	jbe    0x140029f63
   140029d4d:	mov    r9,QWORD PTR [rsi+0xe0]
   140029d54:	mov    ebp,eax
   140029d56:	mov    r8d,r10d
   140029d59:	mov    DWORD PTR [rsp+0x34],eax
   140029d5d:	mov    al,BYTE PTR [rsp+0x88]
   140029d64:	cmp    BYTE PTR [r8+r9*1],al
   140029d68:	je     0x140029dba
   140029d6a:	movzx  eax,BYTE PTR [r9+r8*1]
   140029d6f:	imul   ecx,eax,0x2773
   140029d75:	movzx  eax,BYTE PTR [r9+r8*1+0x1]
   140029d7b:	xor    ecx,eax
   140029d7d:	movzx  eax,BYTE PTR [r9+r8*1+0x2]
   140029d83:	imul   edx,ecx,0x2773
   140029d89:	xor    edx,eax
   140029d8b:	movzx  eax,BYTE PTR [r9+r8*1+0x3]
   140029d91:	imul   ecx,edx,0x2773
   140029d97:	xor    ecx,eax
   140029d99:	movzx  eax,BYTE PTR [r9+r8*1+0x4]
   140029d9f:	imul   edx,ecx,0x2773
   140029da5:	xor    edx,eax
   140029da7:	and    edx,DWORD PTR [rsi+0x114]
   140029dad:	cmp    edx,r12d
   140029db0:	jne    0x140029f63
   140029db6:	mov    edx,DWORD PTR [rsp+0x24]
   140029dba:	mov    al,BYTE PTR [rsp+0x90]
   140029dc1:	lea    ecx,[rdx+r10*1]
   140029dc5:	cmp    BYTE PTR [rcx+r9*1],al
   140029dc9:	jne    0x140029f4a
   140029dcf:	mov    al,BYTE PTR [rsp+0x98]
   140029dd6:	sub    r10d,r14d
   140029dd9:	and    r10d,r15d
   140029ddc:	xor    r11d,r11d
   140029ddf:	cmp    al,BYTE PTR [r9+r10*1]
   140029de3:	jne    0x140029e14
   140029de5:	mov    r14d,r10d
   140029de8:	mov    r8d,r13d
   140029deb:	sub    r14d,r13d
   140029dee:	cmp    r11d,DWORD PTR [rbx+0x8054]
   140029df5:	jge    0x140029e0b
   140029df7:	inc    r8d
   140029dfa:	inc    r11d
   140029dfd:	lea    eax,[r14+r8*1]
   140029e01:	mov    al,BYTE PTR [rax+r9*1]
   140029e05:	cmp    BYTE PTR [r8+r9*1],al
   140029e09:	je     0x140029dee
   140029e0b:	mov    r14d,DWORD PTR [rsp+0x20]
   140029e10:	mov    edx,DWORD PTR [rsp+0x24]
   140029e14:	cmp    r11d,DWORD PTR [rbx+0x8050]
   140029e1b:	jl     0x140029f40
   140029e21:	xor    eax,eax
   140029e23:	lea    r8d,[r11-0x4]
   140029e27:	mov    DWORD PTR [rsp+0x20],eax
   140029e2b:	mov    edx,0x1
   140029e30:	mov    rax,QWORD PTR [rsi+0x108]
   140029e37:	mov    r14d,DWORD PTR [rax+r10*4]
   140029e3b:	cmp    r8d,edx
   140029e3e:	jle    0x140029e8b
   140029e40:	mov    eax,DWORD PTR [rsi+0x120]
   140029e46:	mov    r15,QWORD PTR [rsi+0x108]
   140029e4d:	mov    r12d,eax
   140029e50:	mov    edi,eax
   140029e52:	mov    eax,DWORD PTR [rbx+0x8048]
   140029e58:	lea    ecx,[rdx+r10*1]
   140029e5c:	and    rcx,r12
   140029e5f:	mov    ebp,DWORD PTR [r15+rcx*4]
   140029e63:	mov    ecx,eax
   140029e65:	sub    ecx,ebp
   140029e67:	sub    eax,r14d
   140029e6a:	and    ecx,edi
   140029e6c:	and    eax,edi
   140029e6e:	cmp    ecx,eax
   140029e70:	jbe    0x140029e79
   140029e72:	mov    DWORD PTR [rsp+0x20],edx
   140029e76:	mov    r14d,ebp
   140029e79:	inc    edx
   140029e7b:	cmp    edx,r8d
   140029e7e:	jl     0x140029e52
   140029e80:	mov    edi,DWORD PTR [rbx+0x804c]
   140029e86:	mov    r15d,DWORD PTR [rsp+0x2c]
   140029e8b:	mov    r14d,DWORD PTR [rsp+0x20]
   140029e90:	lea    eax,[r14+r13*1]
   140029e94:	and    eax,r15d
   140029e97:	mov    r8d,eax
   140029e9a:	movzx  eax,BYTE PTR [r9+rax*1]
   140029e9f:	imul   ecx,eax,0x2773
   140029ea5:	movzx  eax,BYTE PTR [r9+r8*1+0x1]
   140029eab:	xor    ecx,eax
   140029ead:	movzx  eax,BYTE PTR [r9+r8*1+0x2]
   140029eb3:	imul   edx,ecx,0x2773
   140029eb9:	xor    edx,eax
   140029ebb:	movzx  eax,BYTE PTR [r9+r8*1+0x3]
   140029ec1:	imul   ecx,edx,0x2773
   140029ec7:	mov    edx,DWORD PTR [rsp+0x30]
   140029ecb:	sub    edx,r14d
   140029ece:	mov    DWORD PTR [rsp+0x24],edx
   140029ed2:	xor    ecx,eax
   140029ed4:	movzx  eax,BYTE PTR [r9+r8*1+0x4]
   140029eda:	imul   r12d,ecx,0x2773
   140029ee1:	mov    ecx,r13d
   140029ee4:	sub    ecx,r10d
   140029ee7:	and    ecx,r15d
   140029eea:	xor    r12d,eax
   140029eed:	mov    al,BYTE PTR [r8+r9*1]
   140029ef1:	and    r12d,DWORD PTR [rsi+0x114]
   140029ef8:	mov    BYTE PTR [rsp+0x88],al
   140029eff:	mov    eax,edi
   140029f01:	shl    eax,0x7
   140029f04:	cmp    ecx,eax
   140029f06:	ja     0x140029f63
   140029f08:	cmp    ecx,DWORD PTR [rsi+0x124]
   140029f0e:	ja     0x140029f63
   140029f10:	test   ecx,ecx
   140029f12:	je     0x140029f63
   140029f14:	mov    eax,ecx
   140029f16:	shl    eax,0x2
   140029f19:	cmp    eax,edi
   140029f1b:	jb     0x140029c69
   140029f21:	mov    ebp,DWORD PTR [rbx+0x8050]
   140029f27:	cmp    r11d,ebp
   140029f2a:	jle    0x140029f34
   140029f2c:	cmp    ecx,edi
   140029f2e:	jb     0x140029c69
   140029f34:	lea    eax,[rbp+0x1]
   140029f37:	cmp    r11d,eax
   140029f3a:	jg     0x140029c69
   140029f40:	mov    ebp,DWORD PTR [rsp+0x34]
   140029f44:	add    r10d,r14d
   140029f47:	and    r10d,r15d
   140029f4a:	add    DWORD PTR [rsp+0x28],0xffffffff
   140029f4f:	mov    rcx,QWORD PTR [rsi+0x108]
   140029f56:	mov    eax,r10d
   140029f59:	mov    r10d,DWORD PTR [rcx+rax*4]
   140029f5d:	jne    0x140029d30
   140029f63:	xor    al,al
   140029f65:	mov    rbx,QWORD PTR [rsp+0x80]
   140029f6d:	add    rsp,0x40
   140029f71:	pop    r15
   140029f73:	pop    r14
   140029f75:	pop    r13
   140029f77:	pop    r12
   140029f79:	pop    rdi
   140029f7a:	pop    rsi
   140029f7b:	pop    rbp
   140029f7c:	ret    
   140029f7d:	int3   
   140029f7e:	int3   
   140029f7f:	int3   
   140029f80:	mov    QWORD PTR [rsp+0x8],rcx
   140029f85:	push   rbx
   140029f86:	push   rbp
   140029f87:	push   rsi
   140029f88:	push   rdi
   140029f89:	push   r12
   140029f8b:	push   r13
   140029f8d:	push   r14
   140029f8f:	push   r15
   140029f91:	sub    rsp,0x28
   140029f95:	mov    edi,DWORD PTR [rdx+0x8048]
   140029f9b:	mov    r9,rdx
   140029f9e:	mov    r8,QWORD PTR [rcx+0xe0]
   140029fa5:	mov    rsi,rcx
   140029fa8:	mov    r12,QWORD PTR [rcx+0x108]
   140029faf:	mov    r15d,DWORD PTR [r9+0x8050]
   140029fb6:	movzx  eax,BYTE PTR [r8+rdi*1]
   140029fbb:	mov    r11b,BYTE PTR [r8+rdi*1]
   140029fbf:	mov    r10d,DWORD PTR [r12+rdi*4]
   140029fc3:	imul   edx,eax,0x2773
   140029fc9:	movzx  eax,BYTE PTR [r8+rdi*1+0x1]
   140029fcf:	mov    BYTE PTR [rsp+0x80],r11b
   140029fd7:	xor    edx,eax
   140029fd9:	movzx  eax,BYTE PTR [r8+rdi*1+0x2]
   140029fdf:	imul   ecx,edx,0x2773
   140029fe5:	xor    ecx,eax
   140029fe7:	movzx  eax,BYTE PTR [r8+rdi*1+0x3]
   140029fed:	imul   edx,ecx,0x2773
   140029ff3:	mov    ecx,DWORD PTR [rsi+0x134]
   140029ff9:	mov    DWORD PTR [rsp+0x4],ecx
   140029ffd:	xor    edx,eax
   140029fff:	movzx  eax,BYTE PTR [r8+rdi*1+0x4]
   14002a005:	imul   r13d,edx,0x2773
   14002a00c:	xor    edx,edx
   14002a00e:	mov    DWORD PTR [rsp+0x88],edx
   14002a015:	xor    r13d,eax
   14002a018:	lea    eax,[rdi+r15*1]
   14002a01c:	mov    bpl,BYTE PTR [rax+r8*1]
   14002a020:	xor    r8d,r8d
   14002a023:	and    r13d,DWORD PTR [rsi+0x114]
   14002a02a:	mov    DWORD PTR [rsp],r13d
   14002a02e:	mov    BYTE PTR [rsp+0x78],bpl
   14002a033:	test   ecx,ecx
   14002a035:	je     0x14002a2e6
   14002a03b:	mov    r14d,DWORD PTR [rsi+0x120]
   14002a042:	mov    eax,edi
   14002a044:	sub    eax,r10d
   14002a047:	and    eax,r14d
   14002a04a:	cmp    eax,DWORD PTR [rsi+0x124]
   14002a050:	ja     0x14002a2e6
   14002a056:	cmp    eax,r8d
   14002a059:	jbe    0x14002a2e6
   14002a05f:	mov    rbx,QWORD PTR [rsi+0xe0]
   14002a066:	mov    r8d,r10d
   14002a069:	mov    DWORD PTR [rsp+0x8],eax
   14002a06d:	cmp    BYTE PTR [rbx+r8*1],r11b
   14002a071:	je     0x14002a0c6
   14002a073:	movzx  eax,BYTE PTR [rbx+r8*1]
   14002a078:	movzx  edx,BYTE PTR [rbx+r8*1+0x1]
   14002a07e:	imul   ecx,eax,0x2773
   14002a084:	movzx  eax,BYTE PTR [rbx+r8*1+0x2]
   14002a08a:	xor    edx,ecx
   14002a08c:	imul   ecx,edx,0x2773
   14002a092:	xor    ecx,eax
   14002a094:	movzx  eax,BYTE PTR [rbx+r8*1+0x3]
   14002a09a:	imul   edx,ecx,0x2773
   14002a0a0:	xor    edx,eax
   14002a0a2:	movzx  eax,BYTE PTR [rbx+r8*1+0x4]
   14002a0a8:	imul   ecx,edx,0x2773
   14002a0ae:	xor    ecx,eax
   14002a0b0:	and    ecx,DWORD PTR [rsi+0x114]
   14002a0b6:	cmp    ecx,r13d
   14002a0b9:	jne    0x14002a2e6
   14002a0bf:	mov    edx,DWORD PTR [rsp+0x88]
   14002a0c6:	lea    eax,[r15+r10*1]
   14002a0ca:	cmp    BYTE PTR [rax+rbx*1],bpl
   14002a0ce:	jne    0x14002a2c8
   14002a0d4:	sub    r10d,edx
   14002a0d7:	mov    ecx,edi
   14002a0d9:	and    r10d,r14d
   14002a0dc:	xor    r11d,r11d
   14002a0df:	and    QWORD PTR [rsp+0x10],r11
   14002a0e4:	mov    r13d,r10d
   14002a0e7:	mov    al,BYTE PTR [rbx+r10*1]
   14002a0eb:	cmp    BYTE PTR [rcx+rbx*1],al
   14002a0ee:	jne    0x14002a12f
   14002a0f0:	movsxd r13,DWORD PTR [r9+0x8054]
   14002a0f7:	mov    r8d,r10d
   14002a0fa:	mov    rsi,QWORD PTR [rsp+0x10]
   14002a0ff:	mov    ebp,edi
   14002a101:	cmp    rsi,r13
   14002a104:	jge    0x14002a11b
   14002a106:	inc    r8d
   14002a109:	inc    ebp
   14002a10b:	inc    r11d
   14002a10e:	inc    rsi
   14002a111:	mov    cl,BYTE PTR [r8+rbx*1]
   14002a115:	cmp    BYTE PTR [rbp+rbx*1+0x0],cl
   14002a119:	je     0x14002a101
   14002a11b:	mov    edx,DWORD PTR [rsp+0x88]
   14002a122:	mov    QWORD PTR [rsp+0x10],rsi
   14002a127:	mov    rsi,QWORD PTR [rsp+0x70]
   14002a12c:	mov    r13d,r10d
   14002a12f:	mov    ebp,DWORD PTR [r9+0x8050]
   14002a136:	cmp    r11d,ebp
   14002a139:	jle    0x14002a2ad
   14002a13f:	mov    r13d,DWORD PTR [r12+r13*4]
   14002a143:	lea    r8d,[r11-0x4]
   14002a147:	xor    eax,eax
   14002a149:	mov    DWORD PTR [rsp+0x88],eax
   14002a150:	lea    edx,[rax+0x1]
   14002a153:	cmp    r8d,edx
   14002a156:	jle    0x14002a1a4
   14002a158:	mov    rbp,r14
   14002a15b:	mov    r14d,DWORD PTR [rsi+0x120]
   14002a162:	lea    ecx,[rdx+r10*1]
   14002a166:	mov    eax,edi
   14002a168:	and    rcx,rbp
   14002a16b:	sub    eax,r13d
   14002a16e:	and    eax,r14d
   14002a171:	mov    r15d,DWORD PTR [r12+rcx*4]
   14002a175:	mov    ecx,edi
   14002a177:	sub    ecx,r15d
   14002a17a:	and    ecx,r14d
   14002a17d:	cmp    ecx,eax
   14002a17f:	jbe    0x14002a18f
   14002a181:	mov    eax,edx
   14002a183:	mov    DWORD PTR [rsp+0x88],edx
   14002a18a:	mov    r13d,r15d
   14002a18d:	jmp    0x14002a196
   14002a18f:	mov    eax,DWORD PTR [rsp+0x88]
   14002a196:	inc    edx
   14002a198:	cmp    edx,r8d
   14002a19b:	jl     0x14002a162
   14002a19d:	mov    ebp,DWORD PTR [r9+0x8050]
   14002a1a4:	add    eax,edi
   14002a1a6:	mov    r15d,ebp
   14002a1a9:	and    eax,r14d
   14002a1ac:	mov    r8d,eax
   14002a1af:	movzx  edx,BYTE PTR [rbx+rax*1+0x1]
   14002a1b4:	movzx  eax,BYTE PTR [rbx+rax*1]
   14002a1b8:	imul   ecx,eax,0x2773
   14002a1be:	movzx  eax,BYTE PTR [rbx+r8*1+0x2]
   14002a1c4:	xor    edx,ecx
   14002a1c6:	imul   ecx,edx,0x2773
   14002a1cc:	xor    ecx,eax
   14002a1ce:	movzx  eax,BYTE PTR [rbx+r8*1+0x3]
   14002a1d4:	imul   edx,ecx,0x2773
   14002a1da:	mov    ecx,edi
   14002a1dc:	sub    ecx,r10d
   14002a1df:	and    ecx,r14d
   14002a1e2:	xor    edx,eax
   14002a1e4:	movzx  eax,BYTE PTR [rbx+r8*1+0x4]
   14002a1ea:	imul   r13d,edx,0x2773
   14002a1f1:	mov    edx,DWORD PTR [rsp+0x88]
   14002a1f8:	sub    r15d,edx
   14002a1fb:	xor    r13d,eax
   14002a1fe:	mov    al,BYTE PTR [r8+rbx*1]
   14002a202:	and    r13d,DWORD PTR [rsi+0x114]
   14002a209:	mov    DWORD PTR [rsp],r13d
   14002a20d:	mov    BYTE PTR [rsp+0x80],al
   14002a214:	cmp    ecx,DWORD PTR [rsi+0x124]
   14002a21a:	ja     0x14002a2e6
   14002a220:	test   ecx,ecx
   14002a222:	je     0x14002a2e6
   14002a228:	cmp    ebp,0x2
   14002a22b:	jle    0x14002a247
   14002a22d:	mov    eax,DWORD PTR [r9+0x804c]
   14002a234:	shl    eax,0xe
   14002a237:	cmp    ecx,eax
   14002a239:	jbe    0x14002a247
   14002a23b:	lea    eax,[rbp+0x5]
   14002a23e:	cmp    r11d,eax
   14002a241:	jl     0x14002a2e6
   14002a247:	cmp    r11d,0x4
   14002a24b:	jle    0x14002a2b1
   14002a24d:	lea    eax,[rbp+0x1]
   14002a250:	cmp    r11d,eax
   14002a253:	jg     0x14002a263
   14002a255:	mov    eax,ecx
   14002a257:	shr    eax,0x5
   14002a25a:	cmp    eax,DWORD PTR [r9+0x804c]
   14002a261:	ja     0x14002a2b1
   14002a263:	mov    rax,QWORD PTR [r9+0x8030]
   14002a26a:	mov    r8,QWORD PTR [rsp+0x10]
   14002a26f:	mov    DWORD PTR [rax+r8*4],ecx
   14002a273:	mov    DWORD PTR [r9+0x804c],ecx
   14002a27a:	mov    DWORD PTR [r9+0x8050],r11d
   14002a281:	cmp    r11d,DWORD PTR [r9+0x8054]
   14002a288:	jge    0x14002a2e6
   14002a28a:	mov    edi,DWORD PTR [r9+0x8048]
   14002a291:	mov    r15d,r11d
   14002a294:	mov    rax,QWORD PTR [rsi+0xe0]
   14002a29b:	sub    r15d,edx
   14002a29e:	lea    ecx,[rdi+r11*1]
   14002a2a2:	mov    bpl,BYTE PTR [rcx+rax*1]
   14002a2a6:	mov    BYTE PTR [rsp+0x78],bpl
   14002a2ab:	jmp    0x14002a2b6
   14002a2ad:	mov    r13d,DWORD PTR [rsp]
   14002a2b1:	mov    bpl,BYTE PTR [rsp+0x78]
   14002a2b6:	mov    r11b,BYTE PTR [rsp+0x80]
   14002a2be:	add    r10d,edx
   14002a2c1:	and    r10d,DWORD PTR [rsi+0x120]
   14002a2c8:	add    DWORD PTR [rsp+0x4],0xffffffff
   14002a2cd:	mov    r12,QWORD PTR [rsi+0x108]
   14002a2d4:	mov    r8d,DWORD PTR [rsp+0x8]
   14002a2d9:	mov    eax,r10d
   14002a2dc:	mov    r10d,DWORD PTR [r12+rax*4]
   14002a2e0:	jne    0x14002a03b
   14002a2e6:	mov    eax,DWORD PTR [r9+0x8050]
   14002a2ed:	cmp    eax,DWORD PTR [r9+0x8040]
   14002a2f4:	jle    0x14002a2fd
   14002a2f6:	mov    DWORD PTR [r9+0x8040],eax
   14002a2fd:	add    rsp,0x28
   14002a301:	pop    r15
   14002a303:	pop    r14
   14002a305:	pop    r13
   14002a307:	pop    r12
   14002a309:	pop    rdi
   14002a30a:	pop    rsi
   14002a30b:	pop    rbp
   14002a30c:	pop    rbx
   14002a30d:	ret    
   14002a30e:	int3   
   14002a30f:	int3   
   14002a310:	mov    QWORD PTR [rsp+0x8],rbx
   14002a315:	mov    QWORD PTR [rsp+0x10],rbp
   14002a31a:	mov    QWORD PTR [rsp+0x20],rsi
   14002a31f:	push   rdi
   14002a320:	push   r12
   14002a322:	push   r14
   14002a324:	push   r15
   14002a326:	mov    r15d,DWORD PTR [rsp+0x38]
   14002a32b:	lea    r14,[rdx+0x8074]
   14002a332:	xor    r10d,r10d
   14002a335:	mov    r8,rdx
   14002a338:	mov    rbp,rcx
   14002a33b:	lea    r12d,[r10+0x4]
   14002a33f:	mov    r11d,DWORD PTR [r14]
   14002a342:	test   r11d,r11d
   14002a345:	je     0x14002a40a
   14002a34b:	cmp    r11d,DWORD PTR [rbp+0x124]
   14002a352:	ja     0x14002a40a
   14002a358:	cmp    BYTE PTR [rbp+0x6169],0x0
   14002a35f:	jne    0x14002a36e
   14002a361:	cmp    r11d,DWORD PTR [r8+0x8048]
   14002a368:	ja     0x14002a40a
   14002a36e:	mov    edi,DWORD PTR [r8+0x8048]
   14002a375:	xor    r9d,r9d
   14002a378:	mov    rsi,QWORD PTR [rbp+0xe0]
   14002a37f:	mov    ebx,edi
   14002a381:	sub    ebx,r11d
   14002a384:	and    ebx,DWORD PTR [rbp+0x120]
   14002a38a:	mov    eax,ebx
   14002a38c:	mov    cl,BYTE PTR [rbx+rsi*1]
   14002a38f:	cmp    BYTE PTR [rdi+rsi*1],cl
   14002a392:	jne    0x14002a40a
   14002a394:	cmp    r9d,DWORD PTR [r8+0x8054]
   14002a39b:	jge    0x14002a3ae
   14002a39d:	inc    r9d
   14002a3a0:	inc    edi
   14002a3a2:	lea    eax,[r9+rbx*1]
   14002a3a6:	mov    al,BYTE PTR [rax+rsi*1]
   14002a3a9:	cmp    BYTE PTR [rdi+rsi*1],al
   14002a3ac:	je     0x14002a394
   14002a3ae:	cmp    r9d,0x2
   14002a3b2:	jl     0x14002a40a
   14002a3b4:	mov    ecx,DWORD PTR [r8+0x8050]
   14002a3bb:	lea    edx,[rcx-0x3]
   14002a3be:	cmp    r9d,edx
   14002a3c1:	jl     0x14002a40a
   14002a3c3:	lea    eax,[rcx-0x1]
   14002a3c6:	cmp    r9d,eax
   14002a3c9:	jne    0x14002a3d8
   14002a3cb:	cmp    DWORD PTR [r8+0x804c],0x100
   14002a3d6:	jb     0x14002a40a
   14002a3d8:	lea    eax,[rcx-0x2]
   14002a3db:	cmp    r9d,eax
   14002a3de:	jne    0x14002a3ed
   14002a3e0:	cmp    DWORD PTR [r8+0x804c],0x800
   14002a3eb:	jb     0x14002a40a
   14002a3ed:	cmp    r9d,edx
   14002a3f0:	jne    0x14002a3ff
   14002a3f2:	cmp    DWORD PTR [r8+0x804c],0x8000
   14002a3fd:	jb     0x14002a40a
   14002a3ff:	cmp    r9d,r10d
   14002a402:	jle    0x14002a40a
   14002a404:	mov    r10d,r9d
   14002a407:	mov    r15d,r11d
   14002a40a:	add    r14,0x4
   14002a40e:	sub    r12,0x1
   14002a412:	jne    0x14002a33f
   14002a418:	cmp    r10d,0x2
   14002a41c:	jge    0x14002a422
   14002a41e:	xor    al,al
   14002a420:	jmp    0x14002a432
   14002a422:	mov    DWORD PTR [r8+0x8050],r10d
   14002a429:	mov    al,0x1
   14002a42b:	mov    DWORD PTR [r8+0x804c],r15d
   14002a432:	mov    rbx,QWORD PTR [rsp+0x28]
   14002a437:	mov    rbp,QWORD PTR [rsp+0x30]
   14002a43c:	mov    rsi,QWORD PTR [rsp+0x40]
   14002a441:	pop    r15
   14002a443:	pop    r14
   14002a445:	pop    r12
   14002a447:	pop    rdi
   14002a448:	ret    
   14002a449:	int3   
   14002a44a:	int3   
   14002a44b:	int3   
   14002a44c:	mov    QWORD PTR [rcx+0x6320],rdx
   14002a453:	mov    QWORD PTR [rcx+0x62c0],rdx
   14002a45a:	ret    
   14002a45b:	int3   
   14002a45c:	movups xmm0,XMMWORD PTR [rdx]
   14002a45f:	lea    r8,[rcx+0x18]
   14002a463:	mov    r9,rcx
   14002a466:	mov    ecx,0x80
   14002a46b:	movups XMMWORD PTR [r8],xmm0
   14002a46f:	movups xmm1,XMMWORD PTR [rdx+0x10]
   14002a473:	lea    rax,[rcx+r8*1]
   14002a477:	movups XMMWORD PTR [r8+0x10],xmm1
   14002a47c:	movups xmm0,XMMWORD PTR [rdx+0x20]
   14002a480:	movups XMMWORD PTR [r8+0x20],xmm0
   14002a485:	movups xmm1,XMMWORD PTR [rdx+0x30]
   14002a489:	movups XMMWORD PTR [r8+0x30],xmm1
   14002a48e:	movups xmm0,XMMWORD PTR [rdx+0x40]
   14002a492:	movups XMMWORD PTR [r8+0x40],xmm0
   14002a497:	movups xmm1,XMMWORD PTR [rdx+0x50]
   14002a49b:	movups XMMWORD PTR [r8+0x50],xmm1
   14002a4a0:	movups xmm0,XMMWORD PTR [rdx+0x60]
   14002a4a4:	movups XMMWORD PTR [r8+0x60],xmm0
   14002a4a9:	movups xmm0,XMMWORD PTR [rdx+0x70]
   14002a4ad:	add    rdx,rcx
   14002a4b0:	xor    ecx,ecx
   14002a4b2:	movups XMMWORD PTR [rax-0x10],xmm0
   14002a4b6:	movups xmm1,XMMWORD PTR [rdx]
   14002a4b9:	movups XMMWORD PTR [rax],xmm1
   14002a4bc:	movups xmm0,XMMWORD PTR [rdx+0x10]
   14002a4c0:	movups XMMWORD PTR [rax+0x10],xmm0
   14002a4c4:	movups xmm1,XMMWORD PTR [rdx+0x20]
   14002a4c8:	movups XMMWORD PTR [rax+0x20],xmm1
   14002a4cc:	movups xmm0,XMMWORD PTR [rdx+0x30]
   14002a4d0:	movups XMMWORD PTR [rax+0x30],xmm0
   14002a4d4:	cmp    DWORD PTR [r8],0x0
   14002a4d8:	jne    0x14002a4e1
   14002a4da:	mov    DWORD PTR [r8],0x1
   14002a4e1:	cmp    DWORD PTR [r8],0x3
   14002a4e5:	je     0x14002a4ef
   14002a4e7:	mov    BYTE PTR [r9+0xd8],0x0
   14002a4ef:	inc    ecx
   14002a4f1:	add    r8,0xc
   14002a4f5:	movsxd rax,ecx
   14002a4f8:	cmp    rax,0x10
   14002a4fc:	jb     0x14002a4d4
   14002a4fe:	ret    
   14002a4ff:	int3   
   14002a500:	mov    DWORD PTR [rcx+0x6298],edx
   14002a506:	ret    
   14002a507:	int3   
   14002a508:	mov    QWORD PTR [rsp+0x8],rbx
   14002a50d:	mov    QWORD PTR [rsp+0x10],rsi
   14002a512:	mov    QWORD PTR [rsp+0x18],rdi
   14002a517:	push   r12
   14002a519:	push   r13
   14002a51b:	push   r14
   14002a51d:	sub    rsp,0x20
   14002a521:	xor    r13d,r13d
   14002a524:	mov    rbx,rdx
   14002a527:	mov    rdi,rcx
   14002a52a:	cmp    BYTE PTR [rdx+0x8060],r13b
   14002a531:	je     0x14002a7da
   14002a537:	mov    esi,DWORD PTR [rdx+0x805c]
   14002a53d:	lea    r11d,[r13+0x1]
   14002a541:	mov    r9d,DWORD PTR [rdx+0x8058]
   14002a548:	mov    r12d,r13d
   14002a54b:	cmp    esi,r11d
   14002a54e:	jl     0x14002a784
   14002a554:	mov    r14d,DWORD PTR [rdx+0x8048]
   14002a55b:	sub    r14d,DWORD PTR [rdx+0x804c]
   14002a562:	mov    r10d,r14d
   14002a565:	sub    r10d,r11d
   14002a568:	and    r10d,DWORD PTR [rdi+0x120]
   14002a56f:	cmp    BYTE PTR [rdi+0x6169],r13b
   14002a576:	jne    0x14002a585
   14002a578:	cmp    r10d,DWORD PTR [rbx+0x8048]
   14002a57f:	jae    0x14002a61e
   14002a585:	mov    ecx,DWORD PTR [rbx+0x8050]
   14002a58b:	add    ecx,r11d
   14002a58e:	cmp    ecx,DWORD PTR [rbx+0x8054]
   14002a594:	jge    0x14002a61e
   14002a59a:	mov    edx,DWORD PTR [rbx+0x8048]
   14002a5a0:	mov    r8,QWORD PTR [rdi+0xe0]
   14002a5a7:	sub    edx,r11d
   14002a5aa:	mov    eax,DWORD PTR [rdi+0x120]
   14002a5b0:	and    rdx,rax
   14002a5b3:	mov    cl,BYTE PTR [r10+r8*1]
   14002a5b7:	cmp    BYTE PTR [rdx+r8*1],cl
   14002a5bb:	jne    0x14002a62a
   14002a5bd:	mov    rax,QWORD PTR [rbx+0x8038]
   14002a5c4:	mov    edx,esi
   14002a5c6:	sub    edx,r11d
   14002a5c9:	movsxd rcx,edx
   14002a5cc:	mov    r8d,DWORD PTR [rax+rcx*4]
   14002a5d0:	test   r8d,r8d
   14002a5d3:	je     0x14002a608
   14002a5d5:	cmp    edx,0x2
   14002a5d8:	jne    0x14002a5e3
   14002a5da:	cmp    r8d,0x100
   14002a5e1:	jbe    0x14002a603
   14002a5e3:	cmp    edx,0x3
   14002a5e6:	jne    0x14002a5f1
   14002a5e8:	cmp    r8d,0x2000
   14002a5ef:	jbe    0x14002a603
   14002a5f1:	cmp    edx,0x4
   14002a5f4:	jne    0x14002a601
   14002a5f6:	cmp    r8d,0x40000
   14002a5fd:	jbe    0x14002a603
   14002a5ff:	cmp    edx,edx
   14002a601:	jle    0x14002a608
   14002a603:	cmp    r9d,r8d
   14002a606:	ja     0x14002a618
   14002a608:	cmp    edx,0x2
   14002a60b:	jl     0x14002a618
   14002a60d:	jne    0x14002a61e
   14002a60f:	cmp    r9d,0x400
   14002a616:	jbe    0x14002a61e
   14002a618:	mov    r12d,r11d
   14002a61b:	mov    r9d,r8d
   14002a61e:	inc    r11d
   14002a621:	cmp    r11d,esi
   14002a624:	jle    0x14002a562
   14002a62a:	test   r12d,r12d
   14002a62d:	jle    0x14002a784
   14002a633:	mov    r10d,esi
   14002a636:	sub    r10d,r12d
   14002a639:	cmp    BYTE PTR [rbx+0x8070],r13b
   14002a640:	je     0x14002a6c6
   14002a646:	cmp    DWORD PTR [rbx+0x806c],r10d
   14002a64d:	jle    0x14002a6a2
   14002a64f:	cmp    r10d,0x1001
   14002a656:	jae    0x14002a6a2
   14002a658:	mov    edx,DWORD PTR [rbx+0x8068]
   14002a65e:	lea    ecx,[r10+0x1]
   14002a662:	test   edx,edx
   14002a664:	je     0x14002a6a2
   14002a666:	cmp    ecx,0x2
   14002a669:	jne    0x14002a673
   14002a66b:	cmp    edx,0x100
   14002a671:	jbe    0x14002a691
   14002a673:	cmp    ecx,0x3
   14002a676:	jne    0x14002a680
   14002a678:	cmp    edx,0x2000
   14002a67e:	jbe    0x14002a691
   14002a680:	cmp    ecx,0x4
   14002a683:	jne    0x14002a68f
   14002a685:	cmp    edx,0x40000
   14002a68b:	jbe    0x14002a691
   14002a68d:	cmp    ecx,ecx
   14002a68f:	jle    0x14002a6a2
   14002a691:	lea    eax,[rsi+0x1]
   14002a694:	mov    r10d,ecx
   14002a697:	mov    DWORD PTR [rbx+0x805c],eax
   14002a69d:	mov    r9d,edx
   14002a6a0:	jmp    0x14002a6bf
   14002a6a2:	mov    edx,DWORD PTR [rbx+0x18]
   14002a6a5:	mov    rcx,QWORD PTR [rbx+0x10]
   14002a6a9:	mov    r8b,BYTE PTR [rbx+0x8064]
   14002a6b0:	lea    eax,[rdx+0x1]
   14002a6b3:	mov    DWORD PTR [rbx+0x18],eax
   14002a6b6:	mov    BYTE PTR [rcx+rdx*8],r13b
   14002a6ba:	mov    BYTE PTR [rcx+rdx*8+0x4],r8b
   14002a6bf:	mov    BYTE PTR [rbx+0x8070],r13b
   14002a6c6:	cmp    r10d,0x1
   14002a6ca:	jle    0x14002a713
   14002a6cc:	test   r9d,r9d
   14002a6cf:	je     0x14002a713
   14002a6d1:	cmp    r10d,0x2
   14002a6d5:	jne    0x14002a6e0
   14002a6d7:	cmp    r9d,0x100
   14002a6de:	jbe    0x14002a703
   14002a6e0:	cmp    r10d,0x3
   14002a6e4:	jne    0x14002a6ef
   14002a6e6:	cmp    r9d,0x2000
   14002a6ed:	jbe    0x14002a703
   14002a6ef:	cmp    r10d,0x4
   14002a6f3:	jne    0x14002a701
   14002a6f5:	cmp    r9d,0x40000
   14002a6fc:	jbe    0x14002a703
   14002a6fe:	cmp    r10d,r10d
   14002a701:	jle    0x14002a713
   14002a703:	mov    r8d,r10d
   14002a706:	mov    rdx,rbx
   14002a709:	mov    rcx,rdi
   14002a70c:	call   0x14002a988
   14002a711:	jmp    0x14002a75c
   14002a713:	mov    r9d,r13d
   14002a716:	test   r10d,r10d
   14002a719:	jle    0x14002a75c
   14002a71b:	mov    eax,DWORD PTR [rdi+0x120]
   14002a721:	mov    ecx,DWORD PTR [rbx+0x8048]
   14002a727:	sub    ecx,DWORD PTR [rbx+0x805c]
   14002a72d:	mov    edx,DWORD PTR [rbx+0x18]
   14002a730:	add    ecx,r9d
   14002a733:	and    rcx,rax
   14002a736:	inc    r9d
   14002a739:	mov    rax,QWORD PTR [rdi+0xe0]
   14002a740:	mov    r8b,BYTE PTR [rcx+rax*1]
   14002a744:	lea    eax,[rdx+0x1]
   14002a747:	mov    rcx,QWORD PTR [rbx+0x10]
   14002a74b:	mov    DWORD PTR [rbx+0x18],eax
   14002a74e:	mov    BYTE PTR [rcx+rdx*8],r13b
   14002a752:	mov    BYTE PTR [rcx+rdx*8+0x4],r8b
   14002a757:	cmp    r9d,r10d
   14002a75a:	jl     0x14002a71b
   14002a75c:	mov    r8d,DWORD PTR [rbx+0x8050]
   14002a763:	mov    rdx,rbx
   14002a766:	mov    r9d,DWORD PTR [rbx+0x804c]
   14002a76d:	add    r8d,r12d
   14002a770:	mov    rcx,rdi
   14002a773:	call   0x14002a988
   14002a778:	mov    BYTE PTR [rbx+0x8060],r13b
   14002a77f:	jmp    0x14002a8ad
   14002a784:	cmp    BYTE PTR [rbx+0x8070],r13b
   14002a78b:	je     0x14002a7b1
   14002a78d:	mov    edx,DWORD PTR [rbx+0x18]
   14002a790:	mov    rcx,QWORD PTR [rbx+0x10]
   14002a794:	mov    r8b,BYTE PTR [rbx+0x8064]
   14002a79b:	lea    eax,[rdx+0x1]
   14002a79e:	mov    DWORD PTR [rbx+0x18],eax
   14002a7a1:	mov    BYTE PTR [rcx+rdx*8],r13b
   14002a7a5:	mov    BYTE PTR [rcx+rdx*8+0x4],r8b
   14002a7aa:	mov    BYTE PTR [rbx+0x8070],r13b
   14002a7b1:	cmp    BYTE PTR [rbx+0x8060],r13b
   14002a7b8:	je     0x14002a7da
   14002a7ba:	mov    r9d,DWORD PTR [rbx+0x8058]
   14002a7c1:	mov    rdx,rbx
   14002a7c4:	mov    r8d,DWORD PTR [rbx+0x805c]
   14002a7cb:	mov    rcx,rdi
   14002a7ce:	call   0x14002a988
   14002a7d3:	mov    BYTE PTR [rbx+0x8060],r13b
   14002a7da:	mov    rdx,rbx
   14002a7dd:	mov    rcx,rdi
   14002a7e0:	call   0x14002a310
   14002a7e5:	test   al,al
   14002a7e7:	je     0x14002a85a
   14002a7e9:	cmp    BYTE PTR [rbx+0x8070],r13b
   14002a7f0:	je     0x14002a816
   14002a7f2:	mov    edx,DWORD PTR [rbx+0x18]
   14002a7f5:	mov    rcx,QWORD PTR [rbx+0x10]
   14002a7f9:	mov    r8b,BYTE PTR [rbx+0x8064]
   14002a800:	lea    eax,[rdx+0x1]
   14002a803:	mov    DWORD PTR [rbx+0x18],eax
   14002a806:	mov    BYTE PTR [rcx+rdx*8],r13b
   14002a80a:	mov    BYTE PTR [rcx+rdx*8+0x4],r8b
   14002a80f:	mov    BYTE PTR [rbx+0x8070],r13b
   14002a816:	cmp    BYTE PTR [rbx+0x8060],r13b
   14002a81d:	je     0x14002a83f
   14002a81f:	mov    r9d,DWORD PTR [rbx+0x8058]
   14002a826:	mov    rdx,rbx
   14002a829:	mov    r8d,DWORD PTR [rbx+0x805c]
   14002a830:	mov    rcx,rdi
   14002a833:	call   0x14002a988
   14002a838:	mov    BYTE PTR [rbx+0x8060],r13b
   14002a83f:	mov    r9d,DWORD PTR [rbx+0x804c]
   14002a846:	mov    rdx,rbx
   14002a849:	mov    r8d,DWORD PTR [rbx+0x8050]
   14002a850:	mov    rcx,rdi
   14002a853:	call   0x14002a988
   14002a858:	jmp    0x14002a8ad
   14002a85a:	mov    eax,DWORD PTR [rbx+0x8050]
   14002a860:	mov    rcx,QWORD PTR [rbx+0x8030]
   14002a867:	mov    DWORD PTR [rbx+0x805c],eax
   14002a86d:	mov    eax,DWORD PTR [rbx+0x804c]
   14002a873:	mov    DWORD PTR [rbx+0x8058],eax
   14002a879:	mov    rax,QWORD PTR [rbx+0x8038]
   14002a880:	mov    QWORD PTR [rbx+0x8030],rax
   14002a887:	mov    eax,DWORD PTR [rbx+0x8044]
   14002a88d:	mov    QWORD PTR [rbx+0x8038],rcx
   14002a894:	mov    ecx,DWORD PTR [rbx+0x8040]
   14002a89a:	mov    DWORD PTR [rbx+0x8040],eax
   14002a8a0:	mov    DWORD PTR [rbx+0x8044],ecx
   14002a8a6:	mov    BYTE PTR [rbx+0x8060],0x1
   14002a8ad:	mov    rbx,QWORD PTR [rsp+0x40]
   14002a8b2:	mov    rsi,QWORD PTR [rsp+0x48]
   14002a8b7:	mov    rdi,QWORD PTR [rsp+0x50]
   14002a8bc:	add    rsp,0x20
   14002a8c0:	pop    r14
   14002a8c2:	pop    r13
   14002a8c4:	pop    r12
   14002a8c6:	ret    
   14002a8c7:	int3   
   14002a8c8:	mov    QWORD PTR [rsp+0x8],rbx
   14002a8cd:	mov    QWORD PTR [rsp+0x10],rsi
   14002a8d2:	mov    QWORD PTR [rsp+0x18],rdi
   14002a8d7:	push   r14
   14002a8d9:	sub    rsp,0x20
   14002a8dd:	mov    edi,0x1
   14002a8e2:	mov    esi,edx
   14002a8e4:	mov    rbx,rcx
   14002a8e7:	lea    r14d,[rdi+0x7]
   14002a8eb:	test   edx,0xffffff00
   14002a8f1:	jbe    0x14002a903
   14002a8f3:	mov    ecx,r14d
   14002a8f6:	add    ecx,r14d
   14002a8f9:	mov    eax,edx
   14002a8fb:	shr    eax,cl
   14002a8fd:	inc    edi
   14002a8ff:	test   eax,eax
   14002a901:	jne    0x14002a8f6
   14002a903:	add    rbx,0x62c8
   14002a90a:	mov    eax,0x2
   14002a90f:	mov    edx,DWORD PTR [rbx+0x1c]
   14002a912:	mov    rcx,QWORD PTR [rbx+0x10]
   14002a916:	mov    WORD PTR [rcx+rdx*8+0x2],ax
   14002a91b:	lea    eax,[rdi-0x1]
   14002a91e:	mov    DWORD PTR [rcx+rdx*8+0x4],eax
   14002a922:	mov    BYTE PTR [rcx+rdx*8],0x7
   14002a926:	inc    DWORD PTR [rbx+0x1c]
   14002a929:	mov    eax,DWORD PTR [rbx+0x1c]
   14002a92c:	cmp    eax,DWORD PTR [rbx+0x18]
   14002a92f:	jb     0x14002a96c
   14002a931:	mov    rcx,rbx
   14002a934:	call   0x1400105c8
   14002a939:	jmp    0x14002a96c
   14002a93b:	mov    edx,DWORD PTR [rbx+0x1c]
   14002a93e:	dec    edi
   14002a940:	mov    rcx,QWORD PTR [rbx+0x10]
   14002a944:	movzx  eax,sil
   14002a948:	mov    BYTE PTR [rcx+rdx*8],0x7
   14002a94c:	mov    WORD PTR [rcx+rdx*8+0x2],r14w
   14002a952:	mov    DWORD PTR [rcx+rdx*8+0x4],eax
   14002a956:	inc    DWORD PTR [rbx+0x1c]
   14002a959:	mov    eax,DWORD PTR [rbx+0x1c]
   14002a95c:	cmp    eax,DWORD PTR [rbx+0x18]
   14002a95f:	jb     0x14002a969
   14002a961:	mov    rcx,rbx
   14002a964:	call   0x1400105c8
   14002a969:	shr    esi,0x8
   14002a96c:	test   edi,edi
   14002a96e:	jne    0x14002a93b
   14002a970:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a975:	mov    rsi,QWORD PTR [rsp+0x38]
   14002a97a:	mov    rdi,QWORD PTR [rsp+0x40]
   14002a97f:	add    rsp,0x20
   14002a983:	pop    r14
   14002a985:	ret    
   14002a986:	int3   
   14002a987:	int3   
   14002a988:	mov    QWORD PTR [rsp+0x8],rbx
   14002a98d:	mov    QWORD PTR [rsp+0x10],rdi
   14002a992:	mov    ecx,DWORD PTR [rdx+0x18]
   14002a995:	lea    rdi,[rdx+0x8074]
   14002a99c:	mov    r10,QWORD PTR [rdx+0x10]
   14002a9a0:	lea    eax,[rcx+0x1]
   14002a9a3:	mov    DWORD PTR [rdx+0x18],eax
   14002a9a6:	cmp    r9d,DWORD PTR [rdi]
   14002a9a9:	je     0x14002aa30
   14002a9af:	cmp    DWORD PTR [rdx+0x8078],r9d
   14002a9b6:	je     0x14002aa2b
   14002a9b8:	cmp    DWORD PTR [rdx+0x807c],r9d
   14002a9bf:	je     0x14002aa2b
   14002a9c1:	cmp    DWORD PTR [rdx+0x8080],r9d
   14002a9c8:	je     0x14002aa2b
   14002a9ca:	mov    DWORD PTR [rdx+0x8088],r8d
   14002a9d1:	mov    eax,DWORD PTR [rdx+0x807c]
   14002a9d7:	mov    DWORD PTR [rdx+0x8080],eax
   14002a9dd:	mov    eax,DWORD PTR [rdx+0x8078]
   14002a9e3:	mov    DWORD PTR [rdx+0x807c],eax
   14002a9e9:	mov    eax,DWORD PTR [rdi]
   14002a9eb:	mov    DWORD PTR [rdx+0x8078],eax
   14002a9f1:	mov    DWORD PTR [rdi],r9d
   14002a9f4:	mov    BYTE PTR [r10+rcx*8],0x1
   14002a9f9:	cmp    r9d,0x100
   14002aa00:	jbe    0x14002aa20
   14002aa02:	dec    r8d
   14002aa05:	cmp    r9d,0x2000
   14002aa0c:	jbe    0x14002aa20
   14002aa0e:	or     eax,0xffffffff
   14002aa11:	add    r8d,eax
   14002aa14:	cmp    r9d,0x40000
   14002aa1b:	jbe    0x14002aa20
   14002aa1d:	add    r8d,eax
   14002aa20:	lea    eax,[r9-0x1]
   14002aa24:	mov    DWORD PTR [r10+rcx*8+0x4],eax
   14002aa29:	jmp    0x14002aa95
   14002aa2b:	cmp    r9d,DWORD PTR [rdi]
   14002aa2e:	jne    0x14002aa40
   14002aa30:	cmp    r8d,DWORD PTR [rdx+0x8088]
   14002aa37:	jne    0x14002aa40
   14002aa39:	mov    BYTE PTR [r10+rcx*8],0x2
   14002aa3e:	jmp    0x14002aaa0
   14002aa40:	xor    ebx,ebx
   14002aa42:	mov    DWORD PTR [rdx+0x8088],r8d
   14002aa49:	xor    r11d,r11d
   14002aa4c:	mov    rax,rdi
   14002aa4f:	cmp    DWORD PTR [rax],r9d
   14002aa52:	je     0x14002aa65
   14002aa54:	inc    ebx
   14002aa56:	inc    r11
   14002aa59:	add    rax,0x4
   14002aa5d:	cmp    r11,0x4
   14002aa61:	jl     0x14002aa4f
   14002aa63:	jmp    0x14002aaa0
   14002aa65:	movsxd r11,ebx
   14002aa68:	test   ebx,ebx
   14002aa6a:	jle    0x14002aa88
   14002aa6c:	lea    rdx,[rdx+r11*4]
   14002aa70:	add    rdx,0x8074
   14002aa77:	mov    eax,DWORD PTR [rdx-0x4]
   14002aa7a:	dec    r11
   14002aa7d:	mov    DWORD PTR [rdx],eax
   14002aa7f:	lea    rdx,[rdx-0x4]
   14002aa83:	test   r11,r11
   14002aa86:	jg     0x14002aa77
   14002aa88:	mov    DWORD PTR [rdi],r9d
   14002aa8b:	mov    BYTE PTR [r10+rcx*8],0x3
   14002aa90:	mov    DWORD PTR [r10+rcx*8+0x4],ebx
   14002aa95:	sub    r8w,0x2
   14002aa9a:	mov    WORD PTR [r10+rcx*8+0x2],r8w
   14002aaa0:	mov    rbx,QWORD PTR [rsp+0x8]
   14002aaa5:	mov    rdi,QWORD PTR [rsp+0x10]
   14002aaaa:	ret    
   14002aaab:	int3   
   14002aaac:	mov    QWORD PTR [rsp+0x8],rcx
   14002aab1:	push   rdi
   14002aab2:	sub    rsp,0x30
   14002aab6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002aabf:	mov    QWORD PTR [rsp+0x48],rbx
   14002aac4:	mov    rbx,rdx
   14002aac7:	mov    rdi,rcx
   14002aaca:	lea    rax,[rip+0x44a1f]        # 0x14006f4f0
   14002aad1:	mov    QWORD PTR [rcx],rax
   14002aad4:	add    rcx,0x1a610
   14002aadb:	call   0x140034600
   14002aae0:	nop
   14002aae1:	lea    rcx,[rdi+0x1a638]
   14002aae8:	call   0x140030d7c
   14002aaed:	lea    rcx,[rdi+0x1c668]
   14002aaf4:	call   0x140049020
   14002aaf9:	nop
   14002aafa:	lea    rcx,[rdi+0x21490]
   14002ab01:	mov    rdx,rbx
   14002ab04:	call   0x1400116c8
   14002ab09:	nop
   14002ab0a:	mov    QWORD PTR [rdi+0x1c660],rbx
   14002ab11:	xor    ebx,ebx
   14002ab13:	mov    QWORD PTR [rdi+0x4f0],rbx
   14002ab1a:	mov    QWORD PTR [rdi+0x518],rbx
   14002ab21:	mov    QWORD PTR [rdi+0x4f8],rbx
   14002ab28:	mov    QWORD PTR [rdi+0x500],rbx
   14002ab2f:	mov    QWORD PTR [rdi+0x508],rbx
   14002ab36:	mov    QWORD PTR [rdi+0x510],rbx
   14002ab3d:	mov    QWORD PTR [rdi+0x1a5e8],rbx
   14002ab44:	mov    QWORD PTR [rdi+0x1a600],rbx
   14002ab4b:	mov    QWORD PTR [rdi+0x1a608],rbx
   14002ab52:	mov    QWORD PTR [rdi+0x8],rbx
   14002ab56:	mov    QWORD PTR [rdi+0x18],rbx
   14002ab5a:	mov    QWORD PTR [rdi+0x21348],rbx
   14002ab61:	mov    QWORD PTR [rdi+0x21460],rbx
   14002ab68:	lea    rcx,[rdi+0x21358]
   14002ab6f:	xor    edx,edx
   14002ab71:	mov    r8d,0x100
   14002ab77:	call   0x140058f40
   14002ab7c:	mov    QWORD PTR [rdi+0x21470],rbx
   14002ab83:	call   0x140046ea4
   14002ab88:	mov    QWORD PTR [rdi+0x21340],rax
   14002ab8f:	mov    DWORD PTR [rdi+0x538],ebx
   14002ab95:	mov    DWORD PTR [rdi+0x21468],ebx
   14002ab9b:	mov    DWORD PTR [rdi+0x21458],0x1
   14002aba5:	mov    rax,rdi
   14002aba8:	mov    rbx,QWORD PTR [rsp+0x48]
   14002abad:	add    rsp,0x30
   14002abb1:	pop    rdi
   14002abb2:	ret    
   14002abb3:	int3   
   14002abb4:	sub    rsp,0x38
   14002abb8:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002abc1:	add    rcx,0x4ab0
   14002abc8:	call   0x14004e88c
   14002abcd:	nop
   14002abce:	add    rsp,0x38
   14002abd2:	ret    
   14002abd3:	int3   
   14002abd4:	rex push rdi
   14002abd6:	sub    rsp,0x30
   14002abda:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002abe3:	mov    QWORD PTR [rsp+0x40],rbx
   14002abe8:	mov    rbx,rcx
   14002abeb:	lea    rax,[rip+0x448fe]        # 0x14006f4f0
   14002abf2:	mov    QWORD PTR [rcx],rax
   14002abf5:	mov    rcx,QWORD PTR [rcx+0x4f0]
   14002abfc:	call   0x140055de8
   14002ac01:	nop
   14002ac02:	mov    rcx,QWORD PTR [rbx+0x518]
   14002ac09:	call   0x140055de8
   14002ac0e:	nop
   14002ac0f:	mov    rcx,QWORD PTR [rbx+0x4f8]
   14002ac16:	call   0x140055de8
   14002ac1b:	nop
   14002ac1c:	mov    rcx,QWORD PTR [rbx+0x500]
   14002ac23:	call   0x140055de8
   14002ac28:	nop
   14002ac29:	mov    rcx,QWORD PTR [rbx+0x508]
   14002ac30:	call   0x140055de8
   14002ac35:	nop
   14002ac36:	mov    rcx,QWORD PTR [rbx+0x510]
   14002ac3d:	call   0x140055de8
   14002ac42:	nop
   14002ac43:	mov    rcx,QWORD PTR [rbx+0x1a5e8]
   14002ac4a:	call   0x140055de8
   14002ac4f:	nop
   14002ac50:	mov    rcx,QWORD PTR [rbx+0x8]
   14002ac54:	call   0x140055de8
   14002ac59:	nop
   14002ac5a:	mov    rcx,QWORD PTR [rbx+0x18]
   14002ac5e:	call   0x140055de8
   14002ac63:	nop
   14002ac64:	mov    rcx,QWORD PTR [rbx+0x1a600]
   14002ac6b:	xor    edi,edi
   14002ac6d:	test   rcx,rcx
   14002ac70:	je     0x14002ac78
   14002ac72:	call   0x14005a938
   14002ac77:	nop
   14002ac78:	mov    rcx,QWORD PTR [rbx+0x21470]
   14002ac7f:	call   0x140055de8
   14002ac84:	nop
   14002ac85:	mov    rcx,QWORD PTR [rbx+0x21348]
   14002ac8c:	call   0x140055de8
   14002ac91:	nop
   14002ac92:	mov    rcx,QWORD PTR [rbx+0x21460]
   14002ac99:	call   0x140055de8
   14002ac9e:	nop
   14002ac9f:	cmp    DWORD PTR [rbx+0x21458],edi
   14002aca5:	jbe    0x14002acc6
   14002aca7:	mov    eax,edi
   14002aca9:	mov    edx,0x890
   14002acae:	mov    rcx,QWORD PTR [rbx+rax*8+0x21358]
   14002acb6:	call   0x140055de8
   14002acbb:	nop
   14002acbc:	inc    edi
   14002acbe:	cmp    edi,DWORD PTR [rbx+0x21458]
   14002acc4:	jb     0x14002aca7
   14002acc6:	mov    rcx,QWORD PTR [rbx+0x21340]
   14002accd:	call   0x140047010
   14002acd2:	nop
   14002acd3:	lea    rcx,[rbx+0x21490]
   14002acda:	call   0x140011798
   14002acdf:	nop
   14002ace0:	lea    rcx,[rbx+0x21118]
   14002ace7:	call   0x14004e88c
   14002acec:	nop
   14002aced:	lea    rcx,[rbx+0x1a610]
   14002acf4:	call   0x14003461c
   14002acf9:	nop
   14002acfa:	lea    rax,[rip+0x446e7]        # 0x14006f3e8
   14002ad01:	mov    QWORD PTR [rbx],rax
   14002ad04:	mov    rbx,QWORD PTR [rsp+0x40]
   14002ad09:	add    rsp,0x30
   14002ad0d:	pop    rdi
   14002ad0e:	ret    
   14002ad0f:	int3   
   14002ad10:	mov    QWORD PTR [rsp+0x8],rbx
   14002ad15:	push   rdi
   14002ad16:	sub    rsp,0x20
   14002ad1a:	mov    ebx,edx
   14002ad1c:	mov    rdi,rcx
   14002ad1f:	call   0x14002abd4
   14002ad24:	test   bl,0x1
   14002ad27:	je     0x14002ad36
   14002ad29:	mov    edx,0x21688
   14002ad2e:	mov    rcx,rdi
   14002ad31:	call   0x140055de8
   14002ad36:	mov    rax,rdi
   14002ad39:	mov    rbx,QWORD PTR [rsp+0x30]
   14002ad3e:	add    rsp,0x20
   14002ad42:	pop    rdi
   14002ad43:	ret    
   14002ad44:	mov    QWORD PTR [rsp+0x8],rbx
   14002ad49:	push   rdi
   14002ad4a:	sub    rsp,0x20
   14002ad4e:	mov    rdi,rdx
   14002ad51:	mov    rbx,rcx
   14002ad54:	cmp    QWORD PTR [rcx+0x1a608],rdx
   14002ad5b:	jae    0x14002ad88
   14002ad5d:	mov    rcx,QWORD PTR [rcx+0x1a600]
   14002ad64:	call   0x14005a940
   14002ad69:	mov    QWORD PTR [rbx+0x1a600],rax
   14002ad70:	test   rax,rax
   14002ad73:	jne    0x14002ad81
   14002ad75:	lea    rcx,[rip+0x69ae4]        # 0x140094860
   14002ad7c:	call   0x14001bd24
   14002ad81:	mov    QWORD PTR [rbx+0x1a608],rdi
   14002ad88:	mov    rbx,QWORD PTR [rsp+0x30]
   14002ad8d:	add    rsp,0x20
   14002ad91:	pop    rdi
   14002ad92:	ret    
   14002ad93:	int3   
   14002ad94:	mov    rdx,rcx
   14002ad97:	mov    rcx,QWORD PTR [rcx]
   14002ad9a:	jmp    0x14002ada0
   14002ad9f:	int3   
   14002ada0:	mov    QWORD PTR [rsp+0x8],rbx
   14002ada5:	mov    QWORD PTR [rsp+0x10],rbp
   14002adaa:	mov    QWORD PTR [rsp+0x18],rsi
   14002adaf:	push   rdi
   14002adb0:	push   r12
   14002adb2:	push   r13
   14002adb4:	push   r14
   14002adb6:	push   r15
   14002adb8:	sub    rsp,0x40
   14002adbc:	mov    ebp,DWORD PTR [rdx+0x8]
   14002adbf:	xor    r12d,r12d
   14002adc2:	add    rbp,QWORD PTR [rcx+0x4f0]
   14002adc9:	mov    rdi,rdx
   14002adcc:	mov    rbx,rcx
   14002adcf:	mov    esi,DWORD PTR [rdx+0xc]
   14002add2:	mov    r13d,0x3
   14002add8:	cmp    BYTE PTR [rcx+0x4ec],r12b
   14002addf:	jne    0x14002adf3
   14002ade1:	cmp    DWORD PTR [rcx+0xe4],r13d
   14002ade8:	je     0x14002adf3
   14002adea:	test   esi,esi
   14002adec:	jle    0x14002adf3
   14002adee:	call   0x14002f11c
   14002adf3:	cmp    BYTE PTR [rbx+0x4ec],r12b
   14002adfa:	je     0x14002af2d
   14002ae00:	mov    r14d,0x300
   14002ae06:	mov    DWORD PTR [rdi+0x818],r12d
   14002ae0d:	cmp    DWORD PTR [rdi+0x8],r14d
   14002ae11:	jb     0x14002ae45
   14002ae13:	mov    r15d,r13d
   14002ae16:	mov    r13d,0x100
   14002ae1c:	mov    r8d,DWORD PTR [rdi+0x8]
   14002ae20:	mov    r9d,r13d
   14002ae23:	sub    r8,r14
   14002ae26:	mov    rdx,rdi
   14002ae29:	add    r8,QWORD PTR [rbx+0x4f0]
   14002ae30:	mov    rcx,rbx
   14002ae33:	call   0x14002c494
   14002ae38:	sub    r14,r13
   14002ae3b:	add    r15d,0xffffffff
   14002ae3f:	jne    0x14002ae1c
   14002ae41:	lea    r13d,[r15+0x3]
   14002ae45:	test   esi,esi
   14002ae47:	jle    0x14002ae9c
   14002ae49:	lea    r12d,[rsi-0x1]
   14002ae4d:	mov    r15,rbp
   14002ae50:	shr    r12d,0x8
   14002ae54:	mov    r14d,esi
   14002ae57:	inc    r12d
   14002ae5a:	mov    r13d,0x100
   14002ae60:	mov    r9d,r14d
   14002ae63:	cmp    r14d,r13d
   14002ae66:	mov    r8,r15
   14002ae69:	mov    rdx,rdi
   14002ae6c:	cmovg  r9d,r13d
   14002ae70:	mov    rcx,rbx
   14002ae73:	call   0x14002c494
   14002ae78:	mov    ecx,DWORD PTR [rdi+0x818]
   14002ae7e:	sub    r14d,r13d
   14002ae81:	add    r15,r13
   14002ae84:	mov    DWORD PTR [rdi+rcx*4+0x418],eax
   14002ae8b:	inc    DWORD PTR [rdi+0x818]
   14002ae91:	sub    r12,0x1
   14002ae95:	jne    0x14002ae60
   14002ae97:	lea    r13d,[r12+0x3]
   14002ae9c:	cmp    QWORD PTR [rbx+0x1c658],0x10000000
   14002aea7:	mov    eax,0x8
   14002aeac:	jge    0x14002aef5
   14002aeae:	cmp    DWORD PTR [rbx+0x2c],r13d
   14002aeb2:	je     0x14002aecf
   14002aeb4:	cmp    DWORD PTR [rbx+0x2c],0x2
   14002aeb8:	jne    0x14002aec1
   14002aeba:	mov    eax,0x1
   14002aebf:	jmp    0x14002aecf
   14002aec1:	mov    r8d,esi
   14002aec4:	mov    rdx,rbp
   14002aec7:	mov    rcx,rbx
   14002aeca:	call   0x140027794
   14002aecf:	cmp    eax,0x8
   14002aed2:	jne    0x14002aef5
   14002aed4:	cmp    DWORD PTR [rbx+0x68],r13d
   14002aed8:	je     0x14002aef5
   14002aeda:	cmp    DWORD PTR [rbx+0x68],0x2
   14002aede:	jne    0x14002aee7
   14002aee0:	mov    eax,0x6
   14002aee5:	jmp    0x14002aef5
   14002aee7:	mov    r8d,esi
   14002aeea:	mov    rdx,rbp
   14002aeed:	mov    rcx,rbx
   14002aef0:	call   0x14002c768
   14002aef5:	mov    DWORD PTR [rdi+0x414],eax
   14002aefb:	lea    rcx,[rdi+0x830]
   14002af02:	lea    rax,[rdi+0x4830]
   14002af09:	mov    QWORD PTR [rsp+0x30],0x400
   14002af12:	mov    QWORD PTR [rsp+0x28],rax
   14002af17:	mov    r9d,esi
   14002af1a:	mov    QWORD PTR [rsp+0x20],rcx
   14002af1f:	mov    r8,rbp
   14002af22:	mov    rcx,rbx
   14002af25:	mov    rdx,rdi
   14002af28:	call   0x14002dfe0
   14002af2d:	lea    r11,[rsp+0x40]
   14002af32:	mov    rbx,QWORD PTR [r11+0x30]
   14002af36:	mov    rbp,QWORD PTR [r11+0x38]
   14002af3a:	mov    rsi,QWORD PTR [r11+0x40]
   14002af3e:	mov    rsp,r11
   14002af41:	pop    r15
   14002af43:	pop    r14
   14002af45:	pop    r13
   14002af47:	pop    r12
   14002af49:	pop    rdi
   14002af4a:	ret    
   14002af4b:	int3   
   14002af4c:	mov    QWORD PTR [rsp+0x20],r9
   14002af51:	mov    DWORD PTR [rsp+0x18],r8d
   14002af56:	mov    DWORD PTR [rsp+0x10],edx
   14002af5a:	push   rbx
   14002af5b:	push   rbp
   14002af5c:	push   rsi
   14002af5d:	push   rdi
   14002af5e:	push   r12
   14002af60:	push   r13
   14002af62:	push   r14
   14002af64:	push   r15
   14002af66:	sub    rsp,0x38
   14002af6a:	test   r9,r9
   14002af6d:	mov    r14,r9
   14002af70:	mov    rbx,rcx
   14002af73:	setne  al
   14002af76:	mov    BYTE PTR [rcx+0x4ec],al
   14002af7c:	test   al,al
   14002af7e:	jne    0x14002af89
   14002af80:	cmp    DWORD PTR [rcx+0xe4],0x3
   14002af87:	je     0x14002af92
   14002af89:	cmp    BYTE PTR [rcx+0xe0],0x0
   14002af90:	je     0x14002af99
   14002af92:	xor    eax,eax
   14002af94:	jmp    0x14002b3d1
   14002af99:	xor    r15d,r15d
   14002af9c:	cmp    DWORD PTR [rcx+0x544],0x2
   14002afa3:	mov    DWORD PTR [rsp+0x24],r15d
   14002afa8:	sete   al
   14002afab:	xor    r12d,r12d
   14002afae:	mov    BYTE PTR [rsp+0x20],al
   14002afb2:	xor    eax,eax
   14002afb4:	mov    DWORD PTR [rsp+0x2c],r12d
   14002afb9:	mov    DWORD PTR [rsp+0x28],eax
   14002afbd:	test   r8d,r8d
   14002afc0:	je     0x14002b3ce
   14002afc6:	xor    r13d,r13d
   14002afc9:	mov    DWORD PTR [rsp+0x80],eax
   14002afd0:	xor    edi,edi
   14002afd2:	mov    ebp,eax
   14002afd4:	cmp    DWORD PTR [rbx+0x21458],edi
   14002afda:	jbe    0x14002b0c6
   14002afe0:	mov    ebp,DWORD PTR [rsp+0x90]
   14002afe7:	mov    r14d,DWORD PTR [rsp+0x28]
   14002afec:	mov    r15d,DWORD PTR [rsp+0x88]
   14002aff4:	mov    r8d,ebp
   14002aff7:	sub    r8d,r12d
   14002affa:	je     0x14002b0a8
   14002b000:	mov    eax,r14d
   14002b003:	mov    esi,0x10000
   14002b008:	cmp    r8d,esi
   14002b00b:	mov    ecx,edi
   14002b00d:	cmovb  esi,r8d
   14002b011:	shl    ecx,0xf
   14002b014:	imul   rdx,rax,0x4838
   14002b01b:	lea    eax,[r12+r15*1]
   14002b01f:	inc    r14d
   14002b022:	add    rdx,QWORD PTR [rbx+0x8]
   14002b026:	mov    QWORD PTR [rdx],rbx
   14002b029:	and    eax,DWORD PTR [rbx+0x52c]
   14002b02f:	mov    DWORD PTR [rdx+0x8],eax
   14002b032:	mov    DWORD PTR [rdx+0xc],esi
   14002b035:	mov    rax,QWORD PTR [rbx+0x18]
   14002b039:	and    DWORD PTR [rdx+0x4830],0x0
   14002b040:	mov    DWORD PTR [rdx+0x4834],r13d
   14002b047:	lea    rcx,[rax+rcx*4]
   14002b04b:	mov    QWORD PTR [rdx+0x820],rcx
   14002b052:	cmp    BYTE PTR [rbx+0x4ec],0x0
   14002b059:	je     0x14002b062
   14002b05b:	mov    BYTE PTR [rdx+0x82c],0x0
   14002b062:	cmp    DWORD PTR [rbx+0x21458],0x1
   14002b069:	jbe    0x14002b08c
   14002b06b:	test   edi,edi
   14002b06d:	jne    0x14002b074
   14002b06f:	cmp    r8d,esi
   14002b072:	je     0x14002b08c
   14002b074:	mov    rcx,QWORD PTR [rbx+0x21340]
   14002b07b:	mov    r8,rdx
   14002b07e:	lea    rdx,[rip+0xfffffffffffffd0f]        # 0x14002ad94
   14002b085:	call   0x140046dd8
   14002b08a:	jmp    0x14002b094
   14002b08c:	mov    rcx,rbx
   14002b08f:	call   0x14002ada0
   14002b094:	add    r12d,esi
   14002b097:	inc    r13d
   14002b09a:	inc    edi
   14002b09c:	cmp    edi,DWORD PTR [rbx+0x21458]
   14002b0a2:	jb     0x14002aff4
   14002b0a8:	mov    ebp,DWORD PTR [rsp+0x80]
   14002b0af:	mov    r15d,DWORD PTR [rsp+0x24]
   14002b0b4:	mov    DWORD PTR [rsp+0x28],r14d
   14002b0b9:	mov    r14,QWORD PTR [rsp+0x98]
   14002b0c1:	mov    DWORD PTR [rsp+0x2c],r12d
   14002b0c6:	mov    rcx,QWORD PTR [rbx+0x21340]
   14002b0cd:	call   0x140047214
   14002b0d2:	xor    sil,sil
   14002b0d5:	xor    r12d,r12d
   14002b0d8:	mov    BYTE PTR [rsp+0x80],sil
   14002b0e0:	test   r13d,r13d
   14002b0e3:	je     0x14002b3b7
   14002b0e9:	mov    eax,ebp
   14002b0eb:	imul   rbp,rax,0x4838
   14002b0f2:	mov    QWORD PTR [rsp+0x98],rbp
   14002b0fa:	mov    rdi,QWORD PTR [rbx+0x8]
   14002b0fe:	add    rdi,rbp
   14002b101:	cmp    BYTE PTR [rbx+0x4ec],0x0
   14002b108:	jne    0x14002b2b7
   14002b10e:	mov    eax,DWORD PTR [rbx+0xe4]
   14002b114:	cmp    eax,0x3
   14002b117:	je     0x14002b2aa
   14002b11d:	cmp    eax,0x2
   14002b120:	je     0x14002b130
   14002b122:	cmp    BYTE PTR [rdi+0x10],0x0
   14002b126:	jne    0x14002b130
   14002b128:	xor    bpl,bpl
   14002b12b:	jmp    0x14002b230
   14002b130:	test   r12d,r12d
   14002b133:	lea    rax,[rbx+0xe8]
   14002b13a:	lea    rsi,[rdi-0x4824]
   14002b141:	mov    r9,rdi
   14002b144:	cmove  rsi,rax
   14002b148:	mov    bpl,0x1
   14002b14b:	xor    edx,edx
   14002b14d:	xor    r10d,r10d
   14002b150:	xor    r8d,r8d
   14002b153:	mov    rcx,rsi
   14002b156:	sub    r9,rsi
   14002b159:	mov    eax,DWORD PTR [r9+rcx*1+0x14]
   14002b15e:	test   eax,eax
   14002b160:	jle    0x14002b164
   14002b162:	inc    edx
   14002b164:	cmp    eax,0x32
   14002b167:	jbe    0x14002b16e
   14002b169:	cmp    DWORD PTR [rcx],0x0
   14002b16c:	je     0x14002b177
   14002b16e:	test   eax,eax
   14002b170:	jne    0x14002b17a
   14002b172:	cmp    DWORD PTR [rcx],0x32
   14002b175:	jbe    0x14002b17a
   14002b177:	inc    r10d
   14002b17a:	inc    r8d
   14002b17d:	add    rcx,0x4
   14002b181:	movsxd rax,r8d
   14002b184:	cmp    rax,0x100
   14002b18a:	jb     0x14002b159
   14002b18c:	test   edx,edx
   14002b18e:	jle    0x14002b228
   14002b194:	cmp    DWORD PTR [rdi+0xc],0x800
   14002b19b:	jl     0x14002b228
   14002b1a1:	mov    eax,edx
   14002b1a3:	cdq    
   14002b1a4:	sub    eax,edx
   14002b1a6:	sar    eax,1
   14002b1a8:	cmp    r10d,eax
   14002b1ab:	setg   al
   14002b1ae:	test   al,al
   14002b1b0:	je     0x14002b1c9
   14002b1b2:	mov    edx,DWORD PTR [rdi+0x8]
   14002b1b5:	lea    rcx,[rbx+0x1a638]
   14002b1bc:	mov    r8d,0x2
   14002b1c2:	call   0x140030d90
   14002b1c7:	jmp    0x14002b1d2
   14002b1c9:	lea    eax,[r13-0x1]
   14002b1cd:	cmp    r12d,eax
   14002b1d0:	jne    0x14002b228
   14002b1d2:	mov    ecx,0x8
   14002b1d7:	lea    rax,[rdi+0x14]
   14002b1db:	lea    edx,[rcx+0x78]
   14002b1de:	movups xmm0,XMMWORD PTR [rax]
   14002b1e1:	movups XMMWORD PTR [rsi],xmm0
   14002b1e4:	movups xmm1,XMMWORD PTR [rax+0x10]
   14002b1e8:	movups XMMWORD PTR [rsi+0x10],xmm1
   14002b1ec:	movups xmm0,XMMWORD PTR [rax+0x20]
   14002b1f0:	movups XMMWORD PTR [rsi+0x20],xmm0
   14002b1f4:	movups xmm1,XMMWORD PTR [rax+0x30]
   14002b1f8:	movups XMMWORD PTR [rsi+0x30],xmm1
   14002b1fc:	movups xmm0,XMMWORD PTR [rax+0x40]
   14002b200:	movups XMMWORD PTR [rsi+0x40],xmm0
   14002b204:	movups xmm1,XMMWORD PTR [rax+0x50]
   14002b208:	movups XMMWORD PTR [rsi+0x50],xmm1
   14002b20c:	movups xmm0,XMMWORD PTR [rax+0x60]
   14002b210:	movups XMMWORD PTR [rsi+0x60],xmm0
   14002b214:	add    rsi,rdx
   14002b217:	movups xmm1,XMMWORD PTR [rax+0x70]
   14002b21b:	add    rax,rdx
   14002b21e:	movups XMMWORD PTR [rsi-0x10],xmm1
   14002b222:	sub    rcx,0x1
   14002b226:	jne    0x14002b1de
   14002b228:	mov    sil,BYTE PTR [rsp+0x80]
   14002b230:	cmp    BYTE PTR [rsp+0x20],bpl
   14002b235:	je     0x14002b25b
   14002b237:	mov    edx,DWORD PTR [rdi+0x8]
   14002b23a:	lea    rcx,[rbx+0x1a638]
   14002b241:	mov    al,bpl
   14002b244:	neg    al
   14002b246:	sbb    r8d,r8d
   14002b249:	and    r8d,0xfffffffe
   14002b24d:	add    r8d,0x3
   14002b251:	call   0x140030d90
   14002b256:	mov    BYTE PTR [rsp+0x20],bpl
   14002b25b:	test   bpl,bpl
   14002b25e:	je     0x14002b2a2
   14002b260:	test   sil,sil
   14002b263:	jne    0x14002b2a2
   14002b265:	xor    r8d,r8d
   14002b268:	lea    rdx,[rdi+0x14]
   14002b26c:	movsxd rax,DWORD PTR [rbx+0x4e8]
   14002b273:	mov    ecx,DWORD PTR [rdi+rax*4+0x14]
   14002b277:	cmp    DWORD PTR [rdx],ecx
   14002b279:	jae    0x14002b282
   14002b27b:	mov    DWORD PTR [rbx+0x4e8],r8d
   14002b282:	cmp    DWORD PTR [rdx],0x0
   14002b285:	je     0x14002b297
   14002b287:	inc    r8d
   14002b28a:	add    rdx,0x4
   14002b28e:	cmp    r8d,0x100
   14002b295:	jb     0x14002b26c
   14002b297:	mov    sil,0x1
   14002b29a:	mov    BYTE PTR [rsp+0x80],sil
   14002b2a2:	mov    rbp,QWORD PTR [rsp+0x98]
   14002b2aa:	cmp    BYTE PTR [rbx+0x4ec],0x0
   14002b2b1:	je     0x14002b38f
   14002b2b7:	mov    r8d,DWORD PTR [rdi+0x8]
   14002b2bb:	xor    edx,edx
   14002b2bd:	sub    r8d,DWORD PTR [rsp+0x88]
   14002b2c5:	xor    r11d,r11d
   14002b2c8:	mov    r10d,DWORD PTR [rdi+0x414]
   14002b2cf:	cmp    DWORD PTR [rdi+0x4830],edx
   14002b2d5:	jbe    0x14002b35c
   14002b2db:	mov    ecx,r11d
   14002b2de:	add    rcx,0x83
   14002b2e5:	shl    rcx,0x4
   14002b2e9:	add    rcx,rdi
   14002b2ec:	mov    r9d,DWORD PTR [rcx+0x4]
   14002b2f0:	sub    r9d,edx
   14002b2f3:	cmp    r9d,0x64
   14002b2f7:	jbe    0x14002b322
   14002b2f9:	cmp    r10d,0x8
   14002b2fd:	je     0x14002b322
   14002b2ff:	mov    eax,r15d
   14002b302:	cmp    rax,QWORD PTR [rsp+0xa0]
   14002b30a:	jae    0x14002b322
   14002b30c:	lea    eax,[rdx+r8*1]
   14002b310:	mov    DWORD PTR [r14],r10d
   14002b313:	inc    r15d
   14002b316:	mov    DWORD PTR [r14+0x4],eax
   14002b31a:	mov    DWORD PTR [r14+0x8],r9d
   14002b31e:	add    r14,0x10
   14002b322:	mov    eax,r15d
   14002b325:	cmp    rax,QWORD PTR [rsp+0xa0]
   14002b32d:	jae    0x14002b354
   14002b32f:	movups xmm0,XMMWORD PTR [rcx]
   14002b332:	inc    r15d
   14002b335:	inc    r11d
   14002b338:	movdqu XMMWORD PTR [r14],xmm0
   14002b33d:	add    DWORD PTR [r14+0x4],r8d
   14002b341:	add    r14,0x10
   14002b345:	mov    edx,DWORD PTR [rcx+0x8]
   14002b348:	add    edx,DWORD PTR [rcx+0x4]
   14002b34b:	cmp    r11d,DWORD PTR [rdi+0x4830]
   14002b352:	jb     0x14002b2db
   14002b354:	mov    QWORD PTR [rsp+0x98],r14
   14002b35c:	cmp    r10d,0x8
   14002b360:	je     0x14002b38f
   14002b362:	mov    eax,r15d
   14002b365:	cmp    rax,QWORD PTR [rsp+0xa0]
   14002b36d:	jae    0x14002b38f
   14002b36f:	mov    ecx,DWORD PTR [rdi+0xc]
   14002b372:	sub    ecx,edx
   14002b374:	cmp    ecx,0x64
   14002b377:	jbe    0x14002b38f
   14002b379:	lea    eax,[rdx+r8*1]
   14002b37d:	mov    DWORD PTR [r14],r10d
   14002b380:	inc    r15d
   14002b383:	mov    DWORD PTR [r14+0x4],eax
   14002b387:	mov    DWORD PTR [r14+0x8],ecx
   14002b38b:	add    r14,0x10
   14002b38f:	add    rbp,0x4838
   14002b396:	inc    r12d
   14002b399:	mov    QWORD PTR [rsp+0x98],rbp
   14002b3a1:	cmp    r12d,r13d
   14002b3a4:	jb     0x14002b0fa
   14002b3aa:	mov    DWORD PTR [rsp+0x24],r15d
   14002b3af:	mov    QWORD PTR [rsp+0x98],r14
   14002b3b7:	mov    r12d,DWORD PTR [rsp+0x2c]
   14002b3bc:	mov    eax,DWORD PTR [rsp+0x28]
   14002b3c0:	cmp    r12d,DWORD PTR [rsp+0x90]
   14002b3c8:	jb     0x14002afc6
   14002b3ce:	mov    eax,r15d
   14002b3d1:	add    rsp,0x38
   14002b3d5:	pop    r15
   14002b3d7:	pop    r14
   14002b3d9:	pop    r13
   14002b3db:	pop    r12
   14002b3dd:	pop    rdi
   14002b3de:	pop    rsi
   14002b3df:	pop    rbp
   14002b3e0:	pop    rbx
   14002b3e1:	ret    
   14002b3e2:	int3   
   14002b3e3:	int3   
   14002b3e4:	mov    QWORD PTR [rsp+0x8],rbx
   14002b3e9:	push   rdi
   14002b3ea:	sub    rsp,0x20
   14002b3ee:	xor    ebx,ebx
   14002b3f0:	mov    rdi,rcx
   14002b3f3:	test   dl,dl
   14002b3f5:	jne    0x14002b447
   14002b3f7:	add    rcx,0xe8
   14002b3fe:	xor    edx,edx
   14002b400:	mov    r8d,0x400
   14002b406:	call   0x140058f40
   14002b40b:	mov    r8d,ebx
   14002b40e:	mov    DWORD PTR [rdi+0x4e8],0xff
   14002b418:	cmp    QWORD PTR [rdi+0x10],rbx
   14002b41c:	jbe    0x14002b447
   14002b41e:	mov    eax,ebx
   14002b420:	lea    edx,[rbx+0x10]
   14002b423:	imul   rcx,rax,0x4838
   14002b42a:	mov    rax,QWORD PTR [rdi+0x8]
   14002b42e:	inc    r8d
   14002b431:	mov    DWORD PTR [rcx+rax*1+0x828],edx
   14002b438:	add    edx,0x100
   14002b43e:	mov    eax,r8d
   14002b441:	cmp    rax,QWORD PTR [rdi+0x10]
   14002b445:	jb     0x14002b423
   14002b447:	lea    rcx,[rdi+0x20]
   14002b44b:	inc    ebx
   14002b44d:	mov    DWORD PTR [rcx],0x3
   14002b453:	movsxd rax,ebx
   14002b456:	lea    rcx,[rcx+0xc]
   14002b45a:	cmp    rax,0x10
   14002b45e:	jb     0x14002b44b
   14002b460:	mov    BYTE PTR [rdi+0xe0],0x1
   14002b467:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b46c:	add    rsp,0x20
   14002b470:	pop    rdi
   14002b471:	ret    
   14002b472:	int3   
   14002b473:	int3   
   14002b474:	mov    rax,rsp
   14002b477:	mov    QWORD PTR [rax+0x10],rbx
   14002b47b:	mov    DWORD PTR [rax+0x20],r9d
   14002b47f:	mov    QWORD PTR [rax+0x18],r8
   14002b483:	push   rbp
   14002b484:	push   rsi
   14002b485:	push   rdi
   14002b486:	push   r12
   14002b488:	push   r13
   14002b48a:	push   r14
   14002b48c:	push   r15
   14002b48e:	sub    rsp,0x60
   14002b492:	movaps XMMWORD PTR [rax-0x48],xmm6
   14002b496:	xor    r12d,r12d
   14002b499:	movaps XMMWORD PTR [rax-0x58],xmm7
   14002b49d:	or     ebp,0xffffffff
   14002b4a0:	xor    eax,eax
   14002b4a2:	mov    DWORD PTR [rsp+0xa0],r12d
   14002b4aa:	xor    r15d,r15d
   14002b4ad:	mov    DWORD PTR [rsp+0x30],eax
   14002b4b1:	mov    r13,rdx
   14002b4b4:	mov    rdi,rcx
   14002b4b7:	cmp    DWORD PTR [rcx+0x4550],eax
   14002b4bd:	jbe    0x14002b6fc
   14002b4c3:	lea    r14,[rcx+0x4558]
   14002b4ca:	mov    esi,eax
   14002b4cc:	add    rsi,0x55
   14002b4d0:	mov    QWORD PTR [rsp+0x38],r14
   14002b4d5:	shl    rsi,0x4
   14002b4d9:	add    rsi,rdi
   14002b4dc:	cmp    ebp,0xffffffff
   14002b4df:	je     0x14002b51f
   14002b4e1:	mov    r12d,DWORD PTR [rsi+0x4]
   14002b4e5:	sub    r12d,r15d
   14002b4e8:	test   r12d,r12d
   14002b4eb:	jle    0x14002b517
   14002b4ed:	lea    ebx,[r12+rbp*1]
   14002b4f1:	mov    rcx,rdi
   14002b4f4:	movsxd rdx,ebx
   14002b4f7:	call   0x14002ad44
   14002b4fc:	movsxd rdx,r15d
   14002b4ff:	add    rdx,QWORD PTR [r13+0x0]
   14002b503:	movsxd rcx,ebp
   14002b506:	add    rcx,QWORD PTR [rdi+0x1a600]
   14002b50d:	movsxd r8,r12d
   14002b510:	call   0x140059180
   14002b515:	mov    ebp,ebx
   14002b517:	mov    r12d,DWORD PTR [rsp+0xa0]
   14002b51f:	xor    edx,edx
   14002b521:	mov    rcx,r14
   14002b524:	lea    r8d,[rdx+0x58]
   14002b528:	call   0x140058f40
   14002b52d:	movsxd rcx,DWORD PTR [rsi+0x4]
   14002b531:	mov    eax,DWORD PTR [rsp+0xb8]
   14002b538:	mov    rbx,rcx
   14002b53b:	add    rbx,QWORD PTR [r13+0x0]
   14002b53f:	add    eax,ecx
   14002b541:	and    eax,DWORD PTR [rdi+0x52c]
   14002b547:	cmp    DWORD PTR [rsi],0x0
   14002b54a:	je     0x14002b5e8
   14002b550:	jle    0x14002b605
   14002b556:	cmp    DWORD PTR [rsi],0x2
   14002b559:	jle    0x14002b5c3
   14002b55b:	cmp    DWORD PTR [rsi],0x4
   14002b55e:	je     0x14002b5a4
   14002b560:	cmp    DWORD PTR [rsi],0x5
   14002b563:	je     0x14002b58c
   14002b565:	cmp    DWORD PTR [rsi],0x6
   14002b568:	jne    0x14002b605
   14002b56e:	add    ecx,DWORD PTR [rdi+0x1c658]
   14002b574:	mov    r9,r14
   14002b577:	mov    r8d,DWORD PTR [rsi+0x8]
   14002b57b:	mov    rdx,rbx
   14002b57e:	mov    DWORD PTR [rsp+0x20],ecx
   14002b582:	mov    rcx,rdi
   14002b585:	call   0x14002d720
   14002b58a:	jmp    0x14002b605
   14002b58c:	mov    r8d,DWORD PTR [rsi+0x8]
   14002b590:	mov    r9,r14
   14002b593:	mov    rdx,rbx
   14002b596:	mov    DWORD PTR [rsp+0x20],eax
   14002b59a:	mov    rcx,rdi
   14002b59d:	call   0x14002d92c
   14002b5a2:	jmp    0x14002b605
   14002b5a4:	mov    r8d,DWORD PTR [rsi+0x8]
   14002b5a8:	mov    r9,r14
   14002b5ab:	mov    DWORD PTR [rsp+0x28],eax
   14002b5af:	mov    rdx,rbx
   14002b5b2:	mov    eax,DWORD PTR [rsi+0xc]
   14002b5b5:	mov    rcx,rdi
   14002b5b8:	mov    DWORD PTR [rsp+0x20],eax
   14002b5bc:	call   0x14002d208
   14002b5c1:	jmp    0x14002b605
   14002b5c3:	mov    r8d,DWORD PTR [rsi+0x8]
   14002b5c7:	sete   dl
   14002b5ca:	add    ecx,DWORD PTR [rdi+0x1c658]
   14002b5d0:	mov    r9,r14
   14002b5d3:	mov    BYTE PTR [rsp+0x28],dl
   14002b5d7:	mov    rdx,rbx
   14002b5da:	mov    DWORD PTR [rsp+0x20],ecx
   14002b5de:	mov    rcx,rdi
   14002b5e1:	call   0x14002d634
   14002b5e6:	jmp    0x14002b605
   14002b5e8:	mov    r8d,DWORD PTR [rsi+0x8]
   14002b5ec:	mov    r9,r14
   14002b5ef:	mov    DWORD PTR [rsp+0x28],eax
   14002b5f3:	mov    rdx,rbx
   14002b5f6:	mov    eax,DWORD PTR [rsi+0xc]
   14002b5f9:	mov    rcx,rdi
   14002b5fc:	mov    DWORD PTR [rsp+0x20],eax
   14002b600:	call   0x14002d4e8
   14002b605:	cmp    ebp,0xffffffff
   14002b608:	je     0x14002b610
   14002b60a:	add    DWORD PTR [r14+0x44],ebp
   14002b60e:	jmp    0x14002b617
   14002b610:	mov    eax,DWORD PTR [rsi+0x4]
   14002b613:	add    DWORD PTR [r14+0x44],eax
   14002b617:	mov    r15,QWORD PTR [rsp+0x38]
   14002b61c:	inc    r12d
   14002b61f:	add    r14,0x58
   14002b623:	mov    DWORD PTR [rsp+0xa0],r12d
   14002b62b:	cmp    QWORD PTR [r15+0x50],rbx
   14002b62f:	jne    0x14002b636
   14002b631:	cmp    ebp,0xffffffff
   14002b634:	je     0x14002b690
   14002b636:	cmp    ebp,0xffffffff
   14002b639:	jne    0x14002b664
   14002b63b:	cmp    DWORD PTR [rsi+0x4],0x0
   14002b63f:	je     0x14002b661
   14002b641:	movsxd rdx,DWORD PTR [rsi+0x4]
   14002b645:	mov    rcx,rdi
   14002b648:	call   0x14002ad44
   14002b64d:	movsxd r8,DWORD PTR [rsi+0x4]
   14002b651:	mov    rdx,QWORD PTR [r13+0x0]
   14002b655:	mov    rcx,QWORD PTR [rdi+0x1a600]
   14002b65c:	call   0x140059180
   14002b661:	mov    ebp,DWORD PTR [rsi+0x4]
   14002b664:	mov    eax,DWORD PTR [r15+0x48]
   14002b668:	mov    rcx,rdi
   14002b66b:	add    eax,ebp
   14002b66d:	movsxd rdx,eax
   14002b670:	call   0x14002ad44
   14002b675:	movsxd r8,DWORD PTR [r15+0x48]
   14002b679:	mov    rdx,QWORD PTR [r15+0x50]
   14002b67d:	movsxd rcx,ebp
   14002b680:	add    rcx,QWORD PTR [rdi+0x1a600]
   14002b687:	call   0x140059180
   14002b68c:	add    ebp,DWORD PTR [r15+0x48]
   14002b690:	mov    eax,DWORD PTR [rsp+0x30]
   14002b694:	mov    r15d,DWORD PTR [rsi+0x8]
   14002b698:	inc    eax
   14002b69a:	add    r15d,DWORD PTR [rsi+0x4]
   14002b69e:	mov    DWORD PTR [rsp+0x30],eax
   14002b6a2:	cmp    eax,DWORD PTR [rdi+0x4550]
   14002b6a8:	jb     0x14002b4ca
   14002b6ae:	cmp    ebp,0xffffffff
   14002b6b1:	je     0x14002b6fc
   14002b6b3:	mov    r14,QWORD PTR [rsp+0xb0]
   14002b6bb:	mov    esi,DWORD PTR [r14]
   14002b6be:	sub    esi,r15d
   14002b6c1:	test   esi,esi
   14002b6c3:	jle    0x14002b6ee
   14002b6c5:	lea    ebx,[rsi+rbp*1]
   14002b6c8:	mov    rcx,rdi
   14002b6cb:	movsxd rdx,ebx
   14002b6ce:	call   0x14002ad44
   14002b6d3:	movsxd rdx,r15d
   14002b6d6:	add    rdx,QWORD PTR [r13+0x0]
   14002b6da:	movsxd rcx,ebp
   14002b6dd:	add    rcx,QWORD PTR [rdi+0x1a600]
   14002b6e4:	movsxd r8,esi
   14002b6e7:	call   0x140059180
   14002b6ec:	mov    ebp,ebx
   14002b6ee:	mov    rax,QWORD PTR [rdi+0x1a600]
   14002b6f5:	mov    QWORD PTR [r13+0x0],rax
   14002b6f9:	mov    DWORD PTR [r14],ebp
   14002b6fc:	xor    r15d,r15d
   14002b6ff:	movsxd r13,r12d
   14002b702:	lea    ebp,[r12-0x1]
   14002b707:	mov    ecx,r15d
   14002b70a:	test   ebp,ebp
   14002b70c:	jle    0x14002b826
   14002b712:	mov    edx,r15d
   14002b715:	lea    r8,[rdx+0x1]
   14002b719:	mov    r10d,ecx
   14002b71c:	lea    r11d,[rcx+0x1]
   14002b720:	mov    rbx,rdx
   14002b723:	cmp    r8,r13
   14002b726:	jge    0x14002b819
   14002b72c:	imul   rsi,rdx,0x58
   14002b730:	imul   rax,r8,0x58
   14002b734:	mov    r14d,DWORD PTR [rdi+rsi*1+0x459c]
   14002b73c:	lea    r9,[rdi+0x45a0]
   14002b743:	add    r9,rax
   14002b746:	cmp    DWORD PTR [r9-0x4],r14d
   14002b74a:	jne    0x14002b76d
   14002b74c:	mov    eax,DWORD PTR [rdi+rsi*1+0x45a0]
   14002b753:	cmp    DWORD PTR [r9],eax
   14002b756:	jne    0x14002b76d
   14002b758:	mov    r10d,r11d
   14002b75b:	mov    rbx,r8
   14002b75e:	inc    r11d
   14002b761:	inc    r8
   14002b764:	add    r9,0x58
   14002b768:	cmp    r8,r13
   14002b76b:	jl     0x14002b746
   14002b76d:	cmp    r10d,ecx
   14002b770:	je     0x14002b819
   14002b776:	mov    eax,r10d
   14002b779:	sub    eax,ecx
   14002b77b:	inc    eax
   14002b77d:	cdq    
   14002b77e:	sub    eax,edx
   14002b780:	sar    eax,1
   14002b782:	movsxd r8,eax
   14002b785:	test   eax,eax
   14002b787:	jle    0x14002b813
   14002b78d:	imul   rax,rbx,0x58
   14002b791:	lea    rcx,[rdi+0x4558]
   14002b798:	add    rcx,rsi
   14002b79b:	lea    rdx,[rdi+0x4558]
   14002b7a2:	add    rdx,rax
   14002b7a5:	movsd  xmm2,QWORD PTR [rcx+0x50]
   14002b7aa:	movups xmm0,XMMWORD PTR [rdx]
   14002b7ad:	movups xmm3,XMMWORD PTR [rcx]
   14002b7b0:	movups xmm4,XMMWORD PTR [rcx+0x10]
   14002b7b4:	movups xmm5,XMMWORD PTR [rcx+0x20]
   14002b7b8:	movups xmm6,XMMWORD PTR [rcx+0x30]
   14002b7bc:	movups xmm7,XMMWORD PTR [rcx+0x40]
   14002b7c0:	movups XMMWORD PTR [rcx],xmm0
   14002b7c3:	lea    rcx,[rcx+0x58]
   14002b7c7:	movups xmm1,XMMWORD PTR [rdx+0x10]
   14002b7cb:	movups XMMWORD PTR [rcx-0x48],xmm1
   14002b7cf:	movups xmm0,XMMWORD PTR [rdx+0x20]
   14002b7d3:	movups XMMWORD PTR [rcx-0x38],xmm0
   14002b7d7:	movups xmm1,XMMWORD PTR [rdx+0x30]
   14002b7db:	movups XMMWORD PTR [rcx-0x28],xmm1
   14002b7df:	movups xmm0,XMMWORD PTR [rdx+0x40]
   14002b7e3:	movups XMMWORD PTR [rcx-0x18],xmm0
   14002b7e7:	movsd  xmm1,QWORD PTR [rdx+0x50]
   14002b7ec:	movsd  QWORD PTR [rcx-0x8],xmm1
   14002b7f1:	movups XMMWORD PTR [rdx],xmm3
   14002b7f4:	movups XMMWORD PTR [rdx+0x10],xmm4
   14002b7f8:	movups XMMWORD PTR [rdx+0x20],xmm5
   14002b7fc:	movups XMMWORD PTR [rdx+0x30],xmm6
   14002b800:	movups XMMWORD PTR [rdx+0x40],xmm7
   14002b804:	movsd  QWORD PTR [rdx+0x50],xmm2
   14002b809:	lea    rdx,[rdx-0x58]
   14002b80d:	sub    r8,0x1
   14002b811:	jne    0x14002b7a5
   14002b813:	mov    ecx,r10d
   14002b816:	mov    rdx,rbx
   14002b819:	inc    ecx
   14002b81b:	inc    rdx
   14002b81e:	cmp    ecx,ebp
   14002b820:	jl     0x14002b715
   14002b826:	test   r12d,r12d
   14002b829:	jle    0x14002bb51
   14002b82f:	lea    r12,[rdi+0x1a610]
   14002b836:	lea    r14,[rdi+0x4558]
   14002b83d:	mov    esi,DWORD PTR [rdi+0x1a5d8]
   14002b843:	mov    bpl,0x1
   14002b846:	mov    eax,r15d
   14002b849:	test   esi,esi
   14002b84b:	jle    0x14002b86c
   14002b84d:	mov    edx,DWORD PTR [r14]
   14002b850:	lea    rcx,[rdi+0x1a558]
   14002b857:	cmp    DWORD PTR [rcx],edx
   14002b859:	je     0x14002b867
   14002b85b:	inc    eax
   14002b85d:	add    rcx,0x4
   14002b861:	cmp    eax,esi
   14002b863:	jl     0x14002b857
   14002b865:	jmp    0x14002b86c
   14002b867:	mov    esi,eax
   14002b869:	mov    bpl,r15b
   14002b86c:	mov    rcx,r12
   14002b86f:	call   0x140034734
   14002b874:	mov    bl,r15b
   14002b877:	cmp    BYTE PTR [rdi+0x1a5e0],r15b
   14002b87e:	je     0x14002b8b5
   14002b880:	xor    r8d,r8d
   14002b883:	mov    rcx,r12
   14002b886:	mov    bl,0x80
   14002b888:	lea    edx,[r8+0x2]
   14002b88c:	call   0x140034958
   14002b891:	xor    r8d,r8d
   14002b894:	mov    rcx,r12
   14002b897:	lea    edx,[r8+0x4]
   14002b89b:	call   0x140034958
   14002b8a0:	and    QWORD PTR [rdi+0x1a5d8],0x0
   14002b8a8:	mov    bpl,0x1
   14002b8ab:	mov    esi,r15d
   14002b8ae:	mov    BYTE PTR [rdi+0x1a5e0],r15b
   14002b8b5:	test   bpl,bpl
   14002b8b8:	je     0x14002b8d1
   14002b8ba:	movsxd rcx,DWORD PTR [rdi+0x1a5d8]
   14002b8c1:	mov    eax,DWORD PTR [r14]
   14002b8c4:	mov    DWORD PTR [rdi+rcx*4+0x1a558],eax
   14002b8cb:	inc    DWORD PTR [rdi+0x1a5d8]
   14002b8d1:	cmp    esi,DWORD PTR [rdi+0x1a5dc]
   14002b8d7:	je     0x14002b8e7
   14002b8d9:	or     bl,0x80
   14002b8dc:	lea    edx,[rsi+0x1]
   14002b8df:	mov    rcx,rdi
   14002b8e2:	call   0x140030b80
   14002b8e7:	mov    DWORD PTR [rdi+0x1a5dc],esi
   14002b8ed:	mov    edx,DWORD PTR [r14+0x44]
   14002b8f1:	sub    edx,DWORD PTR [rdi+0x1c64c]
   14002b8f7:	add    edx,DWORD PTR [rdi+0x534]
   14002b8fd:	and    edx,DWORD PTR [rdi+0x52c]
   14002b903:	cmp    edx,0x102
   14002b909:	jb     0x14002b914
   14002b90b:	or     bl,0x40
   14002b90e:	add    edx,0xfffffefe
   14002b914:	mov    rcx,rdi
   14002b917:	call   0x140030b80
   14002b91c:	test   bpl,bpl
   14002b91f:	jne    0x14002b931
   14002b921:	mov    eax,DWORD PTR [r14+0x48]
   14002b925:	movsxd rcx,esi
   14002b928:	cmp    DWORD PTR [rdi+rcx*4+0x1a598],eax
   14002b92f:	je     0x14002b940
   14002b931:	mov    edx,DWORD PTR [r14+0x48]
   14002b935:	or     bl,0x20
   14002b938:	mov    rcx,rdi
   14002b93b:	call   0x140030b80
   14002b940:	mov    eax,DWORD PTR [r14+0x48]
   14002b944:	movsxd rcx,esi
   14002b947:	mov    DWORD PTR [rdi+rcx*4+0x1a598],eax
   14002b94e:	mov    al,BYTE PTR [r14+0x4]
   14002b952:	test   al,al
   14002b954:	je     0x14002b999
   14002b956:	or     bl,0x10
   14002b959:	movzx  r8d,al
   14002b95d:	mov    edx,0x7
   14002b962:	mov    rcx,r12
   14002b965:	call   0x140034958
   14002b96a:	mov    esi,r15d
   14002b96d:	lea    r15,[r14+0x8]
   14002b971:	mov    ecx,esi
   14002b973:	mov    edx,0x1
   14002b978:	shl    edx,cl
   14002b97a:	test   BYTE PTR [r14+0x4],dl
   14002b97e:	je     0x14002b98b
   14002b980:	mov    edx,DWORD PTR [r15]
   14002b983:	mov    rcx,rdi
   14002b986:	call   0x140030b80
   14002b98b:	inc    esi
   14002b98d:	add    r15,0x4
   14002b991:	cmp    esi,0x7
   14002b994:	jl     0x14002b971
   14002b996:	xor    r15d,r15d
   14002b999:	test   bpl,bpl
   14002b99c:	je     0x14002b9d7
   14002b99e:	mov    edx,DWORD PTR [r14+0x30]
   14002b9a2:	mov    rcx,rdi
   14002b9a5:	call   0x140030b80
   14002b9aa:	mov    esi,r15d
   14002b9ad:	mov    rbp,r15
   14002b9b0:	cmp    DWORD PTR [r14+0x30],r15d
   14002b9b4:	jle    0x14002b9d7
   14002b9b6:	mov    rax,QWORD PTR [r14+0x28]
   14002b9ba:	mov    edx,0x8
   14002b9bf:	mov    rcx,r12
   14002b9c2:	movzx  r8d,BYTE PTR [rax+rbp*1]
   14002b9c7:	call   0x140034958
   14002b9cc:	inc    esi
   14002b9ce:	inc    rbp
   14002b9d1:	cmp    esi,DWORD PTR [r14+0x30]
   14002b9d5:	jl     0x14002b9b6
   14002b9d7:	mov    edx,DWORD PTR [r14+0x40]
   14002b9db:	test   edx,edx
   14002b9dd:	je     0x14002ba17
   14002b9df:	mov    rcx,rdi
   14002b9e2:	or     bl,0x8
   14002b9e5:	call   0x140030b80
   14002b9ea:	mov    esi,r15d
   14002b9ed:	mov    rbp,r15
   14002b9f0:	cmp    DWORD PTR [r14+0x40],r15d
   14002b9f4:	jle    0x14002ba17
   14002b9f6:	mov    rax,QWORD PTR [r14+0x38]
   14002b9fa:	mov    edx,0x8
   14002b9ff:	mov    rcx,r12
   14002ba02:	movzx  r8d,BYTE PTR [rax+rbp*1]
   14002ba07:	call   0x140034958
   14002ba0c:	inc    esi
   14002ba0e:	inc    rbp
   14002ba11:	cmp    esi,DWORD PTR [r14+0x40]
   14002ba15:	jl     0x14002b9f6
   14002ba17:	mov    rcx,r12
   14002ba1a:	call   0x1400346a8
   14002ba1f:	mov    esi,DWORD PTR [rdi+0x1a630]
   14002ba25:	cmp    esi,0x6
   14002ba28:	ja     0x14002ba31
   14002ba2a:	lea    eax,[rsi-0x1]
   14002ba2d:	or     bl,al
   14002ba2f:	jmp    0x14002ba41
   14002ba31:	cmp    esi,0x106
   14002ba37:	ja     0x14002ba3e
   14002ba39:	or     bl,0x6
   14002ba3c:	jmp    0x14002ba41
   14002ba3e:	or     bl,0x7
   14002ba41:	cmp    DWORD PTR [rdi+0x544],0x2
   14002ba48:	jne    0x14002bacf
   14002ba4e:	mov    edx,DWORD PTR [rdi+0x21334]
   14002ba54:	lea    rbp,[rdi+0x1c668]
   14002ba5b:	mov    rcx,rbp
   14002ba5e:	call   0x14004ac2c
   14002ba63:	mov    edx,0x3
   14002ba68:	mov    rcx,rbp
   14002ba6b:	call   0x14004ac2c
   14002ba70:	movzx  edx,bl
   14002ba73:	mov    rcx,rbp
   14002ba76:	call   0x14004ac2c
   14002ba7b:	cmp    esi,0x6
   14002ba7e:	jbe    0x14002baa6
   14002ba80:	mov    rcx,rbp
   14002ba83:	cmp    esi,0x106
   14002ba89:	ja     0x14002ba90
   14002ba8b:	lea    edx,[rsi-0x7]
   14002ba8e:	jmp    0x14002baa1
   14002ba90:	mov    edx,esi
   14002ba92:	shr    edx,0x8
   14002ba95:	call   0x14004ac2c
   14002ba9a:	movzx  edx,sil
   14002ba9e:	mov    rcx,rbp
   14002baa1:	call   0x14004ac2c
   14002baa6:	test   esi,esi
   14002baa8:	je     0x14002bb43
   14002baae:	mov    rbx,r15
   14002bab1:	mov    rax,QWORD PTR [rdi+0x1a628]
   14002bab8:	mov    rcx,rbp
   14002babb:	movzx  edx,BYTE PTR [rbx+rax*1]
   14002babf:	call   0x14004ac2c
   14002bac4:	inc    rbx
   14002bac7:	sub    rsi,0x1
   14002bacb:	jne    0x14002bab1
   14002bacd:	jmp    0x14002bb43
   14002bacf:	lea    rbp,[rdi+0x21490]
   14002bad6:	mov    rcx,rbp
   14002bad9:	lea    edx,[rsi+0x14]
   14002badc:	call   0x140011d5c
   14002bae1:	mov    ecx,DWORD PTR [rbp+0x1c]
   14002bae4:	mov    rax,QWORD PTR [rbp+0x10]
   14002bae8:	mov    BYTE PTR [rax+rcx*8],0x7
   14002baec:	mov    BYTE PTR [rax+rcx*8+0x1],bl
   14002baf0:	mov    DWORD PTR [rax+rcx*8+0x4],esi
   14002baf4:	inc    DWORD PTR [rbp+0x1c]
   14002baf7:	mov    eax,DWORD PTR [rbp+0x1c]
   14002bafa:	cmp    eax,DWORD PTR [rbp+0x18]
   14002bafd:	jb     0x14002bb07
   14002baff:	mov    rcx,rbp
   14002bb02:	call   0x1400118dc
   14002bb07:	test   esi,esi
   14002bb09:	je     0x14002bb43
   14002bb0b:	mov    rbx,r15
   14002bb0e:	mov    rax,QWORD PTR [rdi+0x1a628]
   14002bb15:	mov    ecx,DWORD PTR [rbp+0x1c]
   14002bb18:	mov    dl,BYTE PTR [rbx+rax*1]
   14002bb1b:	mov    rax,QWORD PTR [rbp+0x10]
   14002bb1f:	mov    BYTE PTR [rax+rcx*8],0x8
   14002bb23:	mov    BYTE PTR [rax+rcx*8+0x4],dl
   14002bb27:	inc    DWORD PTR [rbp+0x1c]
   14002bb2a:	mov    eax,DWORD PTR [rbp+0x1c]
   14002bb2d:	cmp    eax,DWORD PTR [rbp+0x18]
   14002bb30:	jb     0x14002bb3a
   14002bb32:	mov    rcx,rbp
   14002bb35:	call   0x1400118dc
   14002bb3a:	inc    rbx
   14002bb3d:	sub    rsi,0x1
   14002bb41:	jne    0x14002bb0e
   14002bb43:	add    r14,0x58
   14002bb47:	sub    r13,0x1
   14002bb4b:	jne    0x14002b83d
   14002bb51:	mov    rbx,QWORD PTR [rsp+0xa8]
   14002bb59:	movaps xmm6,XMMWORD PTR [rsp+0x50]
   14002bb5e:	movaps xmm7,XMMWORD PTR [rsp+0x40]
   14002bb63:	add    rsp,0x60
   14002bb67:	pop    r15
   14002bb69:	pop    r14
   14002bb6b:	pop    r13
   14002bb6d:	pop    r12
   14002bb6f:	pop    rdi
   14002bb70:	pop    rsi
   14002bb71:	pop    rbp
   14002bb72:	ret    
   14002bb73:	int3   
   14002bb74:	mov    rdx,rcx
   14002bb77:	mov    rcx,QWORD PTR [rcx]
   14002bb7a:	jmp    0x14002bbac
   14002bb7f:	int3   
   14002bb80:	mov    rdx,rcx
   14002bb83:	mov    rcx,QWORD PTR [rcx]
   14002bb86:	jmp    0x14002bee4
   14002bb8b:	int3   
   14002bb8c:	mov    r8d,DWORD PTR [rcx+0xc]
   14002bb90:	mov    edx,DWORD PTR [rcx+0x8]
   14002bb93:	mov    rcx,QWORD PTR [rcx]
   14002bb96:	jmp    0x14002c2a4
   14002bb9b:	int3   
   14002bb9c:	mov    r8d,DWORD PTR [rcx+0xc]
   14002bba0:	mov    edx,DWORD PTR [rcx+0x8]
   14002bba3:	mov    rcx,QWORD PTR [rcx]
   14002bba6:	jmp    0x14002c370
   14002bbab:	int3   
   14002bbac:	mov    rax,rsp
   14002bbaf:	mov    QWORD PTR [rax+0x8],rbx
   14002bbb3:	mov    QWORD PTR [rax+0x10],rbp
   14002bbb7:	mov    QWORD PTR [rax+0x18],rsi
   14002bbbb:	mov    QWORD PTR [rax+0x20],rdi
   14002bbbf:	push   r12
   14002bbc1:	push   r14
   14002bbc3:	push   r15
   14002bbc5:	mov    r8d,DWORD PTR [rdx+0x8]
   14002bbc9:	mov    rbp,rcx
   14002bbcc:	mov    rbx,QWORD PTR [rdx+0x10]
   14002bbd0:	mov    edx,DWORD PTR [rdx+0xc]
   14002bbd3:	add    edx,r8d
   14002bbd6:	cmp    r8d,edx
   14002bbd9:	jae    0x14002bc92
   14002bbdf:	lea    r11d,[r8+0x2]
   14002bbe3:	mov    r15d,r8d
   14002bbe6:	lea    edi,[r8+0x1]
   14002bbea:	sub    r15,r11
   14002bbed:	lea    esi,[r8+0x3]
   14002bbf1:	sub    rdi,r11
   14002bbf4:	lea    r14d,[r8+0x4]
   14002bbf8:	sub    rsi,r11
   14002bbfb:	sub    r14,r11
   14002bbfe:	sub    edx,r8d
   14002bc01:	mov    r12d,edx
   14002bc04:	mov    rdx,QWORD PTR [rbp+0x4f0]
   14002bc0b:	lea    rax,[r15+r11*1]
   14002bc0f:	movzx  ecx,BYTE PTR [rax+rdx*1]
   14002bc13:	lea    rax,[rdi+r11*1]
   14002bc17:	movzx  r9d,BYTE PTR [r11+rdx*1]
   14002bc1c:	imul   r10d,ecx,0x2773
   14002bc23:	movzx  ecx,BYTE PTR [rax+rdx*1]
   14002bc27:	add    r10d,ecx
   14002bc2a:	imul   eax,r10d,0x2773
   14002bc31:	and    r10d,0x3fff
   14002bc38:	add    r9d,eax
   14002bc3b:	lea    rax,[rsi+r11*1]
   14002bc3f:	movzx  r8d,BYTE PTR [rax+rdx*1]
   14002bc44:	imul   eax,r9d,0x2773
   14002bc4b:	and    r9d,0x3ffff
   14002bc52:	add    r8d,eax
   14002bc55:	lea    rax,[r14+r11*1]
   14002bc59:	movzx  ecx,BYTE PTR [rax+rdx*1]
   14002bc5d:	inc    r11
   14002bc60:	imul   eax,r8d,0x2773
   14002bc67:	and    r8d,0x3ffff
   14002bc6e:	add    ecx,eax
   14002bc70:	and    ecx,DWORD PTR [rbp+0x524]
   14002bc76:	mov    DWORD PTR [rbx+0xc],ecx
   14002bc79:	mov    DWORD PTR [rbx],r10d
   14002bc7c:	mov    DWORD PTR [rbx+0x4],r9d
   14002bc80:	mov    DWORD PTR [rbx+0x8],r8d
   14002bc84:	lea    rbx,[rbx+0x10]
   14002bc88:	sub    r12,0x1
   14002bc8c:	jne    0x14002bc04
   14002bc92:	mov    rbx,QWORD PTR [rsp+0x20]
   14002bc97:	mov    rbp,QWORD PTR [rsp+0x28]
   14002bc9c:	mov    rsi,QWORD PTR [rsp+0x30]
   14002bca1:	mov    rdi,QWORD PTR [rsp+0x38]
   14002bca6:	pop    r15
   14002bca8:	pop    r14
   14002bcaa:	pop    r12
   14002bcac:	ret    
   14002bcad:	int3   
   14002bcae:	int3   
   14002bcaf:	int3   
   14002bcb0:	mov    QWORD PTR [rsp+0x10],rbx
   14002bcb5:	push   rbp
   14002bcb6:	push   rsi
   14002bcb7:	push   rdi
   14002bcb8:	push   r12
   14002bcba:	push   r13
   14002bcbc:	push   r14
   14002bcbe:	push   r15
   14002bcc0:	sub    rsp,0x20
   14002bcc4:	mov    rax,QWORD PTR [rcx+0x21348]
   14002bccb:	mov    r15,rcx
   14002bcce:	mov    r14d,edx
   14002bcd1:	mov    QWORD PTR [rsp+0x60],rax
   14002bcd6:	lea    r13d,[r14+r8*1]
   14002bcda:	cmp    edx,r13d
   14002bcdd:	jae    0x14002be37
   14002bce3:	lea    ebp,[r14+0x2]
   14002bce7:	mov    eax,r14d
   14002bcea:	shl    rax,0x2
   14002bcee:	lea    r8d,[r14+0x1]
   14002bcf2:	sub    r8,rbp
   14002bcf5:	mov    QWORD PTR [rsp+0x78],rax
   14002bcfa:	lea    r11d,[r14+0x3]
   14002bcfe:	mov    QWORD PTR [rsp],r8
   14002bd02:	sub    r11,rbp
   14002bd05:	lea    ebx,[r14+0x4]
   14002bd09:	sub    rbx,rbp
   14002bd0c:	mov    QWORD PTR [rsp+0x8],r11
   14002bd11:	mov    r12d,r14d
   14002bd14:	mov    QWORD PTR [rsp+0x10],rbx
   14002bd19:	sub    r12,rbp
   14002bd1c:	mov    rdx,QWORD PTR [r15+0x4f0]
   14002bd23:	lea    rax,[r12+rbp*1]
   14002bd27:	movzx  ecx,BYTE PTR [rax+rdx*1]
   14002bd2b:	lea    rax,[r8+rbp*1]
   14002bd2f:	movzx  r9d,BYTE PTR [rdx+rbp*1]
   14002bd34:	imul   r10d,ecx,0x2773
   14002bd3b:	movzx  ecx,BYTE PTR [rax+rdx*1]
   14002bd3f:	add    r10d,ecx
   14002bd42:	imul   eax,r10d,0x2773
   14002bd49:	and    r10d,0x3fff
   14002bd50:	add    r9d,eax
   14002bd53:	lea    rax,[r11+rbp*1]
   14002bd57:	movzx  r8d,BYTE PTR [rax+rdx*1]
   14002bd5c:	mov    r11,QWORD PTR [r15+0x4f8]
   14002bd63:	imul   eax,r9d,0x2773
   14002bd6a:	and    r9d,0x3ffff
   14002bd71:	mov    sil,BYTE PTR [r10+r11*1]
   14002bd75:	add    r8d,eax
   14002bd78:	lea    rax,[rbx+rbp*1]
   14002bd7c:	movzx  ecx,BYTE PTR [rax+rdx*1]
   14002bd80:	inc    rbp
   14002bd83:	imul   eax,r8d,0x2773
   14002bd8a:	and    r8d,0x3ffff
   14002bd91:	mov    edx,r8d
   14002bd94:	mov    ebx,r10d
   14002bd97:	mov    r10d,r9d
   14002bd9a:	add    ecx,eax
   14002bd9c:	mov    rax,QWORD PTR [r15+0x500]
   14002bda3:	and    ecx,DWORD PTR [r15+0x524]
   14002bdaa:	movzx  edi,WORD PTR [rax+r9*2]
   14002bdaf:	mov    rax,QWORD PTR [r15+0x508]
   14002bdb6:	mov    r8d,DWORD PTR [rax+r8*4]
   14002bdba:	mov    rax,QWORD PTR [r15+0x510]
   14002bdc1:	mov    r9d,DWORD PTR [rax+rcx*4]
   14002bdc5:	mov    BYTE PTR [rbx+r11*1],r14b
   14002bdc9:	mov    rax,QWORD PTR [r15+0x500]
   14002bdd0:	mov    r11,QWORD PTR [rsp+0x8]
   14002bdd5:	mov    rbx,QWORD PTR [rsp+0x10]
   14002bdda:	mov    WORD PTR [rax+r10*2],r14w
   14002bddf:	mov    rax,QWORD PTR [r15+0x508]
   14002bde6:	mov    DWORD PTR [rax+rdx*4],r14d
   14002bdea:	mov    rax,QWORD PTR [r15+0x510]
   14002bdf1:	mov    DWORD PTR [rax+rcx*4],r14d
   14002bdf5:	inc    r14d
   14002bdf8:	mov    rax,QWORD PTR [rsp+0x60]
   14002bdfd:	mov    rcx,QWORD PTR [rsp+0x78]
   14002be02:	mov    DWORD PTR [rax+0x3],r8d
   14002be06:	mov    r8,QWORD PTR [rsp]
   14002be0a:	mov    WORD PTR [rax+0x1],di
   14002be0e:	mov    BYTE PTR [rax],sil
   14002be11:	add    rax,0x7
   14002be15:	mov    QWORD PTR [rsp+0x60],rax
   14002be1a:	mov    rax,QWORD PTR [r15+0x518]
   14002be21:	mov    DWORD PTR [rcx+rax*1],r9d
   14002be25:	add    rcx,0x4
   14002be29:	mov    QWORD PTR [rsp+0x78],rcx
   14002be2e:	cmp    r14d,r13d
   14002be31:	jb     0x14002bd1c
   14002be37:	mov    rbx,QWORD PTR [rsp+0x68]
   14002be3c:	add    rsp,0x20
   14002be40:	pop    r15
   14002be42:	pop    r14
   14002be44:	pop    r13
   14002be46:	pop    r12
   14002be48:	pop    rdi
   14002be49:	pop    rsi
   14002be4a:	pop    rbp
   14002be4b:	ret    
   14002be4c:	mov    rax,rsp
   14002be4f:	push   rbx
   14002be50:	sub    rsp,0x50
   14002be54:	mov    rbx,rcx
   14002be57:	mov    QWORD PTR [rax-0x38],rcx
   14002be5b:	mov    rcx,QWORD PTR [rcx+0x21340]
   14002be62:	mov    DWORD PTR [rax-0x30],edx
   14002be65:	lea    rdx,[rip+0xfffffffffffffd30]        # 0x14002bb9c
   14002be6c:	mov    DWORD PTR [rax-0x2c],r8d
   14002be70:	lea    r8,[rax-0x38]
   14002be74:	call   0x140046dd8
   14002be79:	mov    rcx,QWORD PTR [rbx+0x21340]
   14002be80:	lea    r8,[rsp+0x20]
   14002be85:	lea    rdx,[rip+0xfffffffffffffd00]        # 0x14002bb8c
   14002be8c:	call   0x140046dd8
   14002be91:	mov    rcx,QWORD PTR [rbx+0x21340]
   14002be98:	call   0x140047214
   14002be9d:	add    rsp,0x50
   14002bea1:	pop    rbx
   14002bea2:	ret    
   14002bea3:	int3   
   14002bea4:	cmp    DWORD PTR [rcx+0x538],0x0
   14002beab:	mov    eax,DWORD PTR [rcx+0x1c64c]
   14002beb1:	mov    DWORD PTR [rcx+0x21350],eax
   14002beb7:	je     0x14002c024
   14002bebd:	mov    eax,DWORD PTR [rcx+0x21458]
   14002bec3:	cmp    eax,0x2
   14002bec6:	jb     0x14002bedf
   14002bec8:	cmp    r8d,0x100
   14002becf:	jb     0x14002bedf
   14002bed1:	cmp    eax,0x8
   14002bed4:	jb     0x14002be4c
   14002beda:	jmp    0x14002c0a4
   14002bedf:	jmp    0x14002bcb0
   14002bee4:	mov    QWORD PTR [rsp+0x8],rbx
   14002bee9:	mov    QWORD PTR [rsp+0x10],rsi
   14002beee:	mov    QWORD PTR [rsp+0x18],rdi
   14002bef3:	mov    r9d,DWORD PTR [rdx+0x24]
   14002bef7:	mov    rbx,rcx
   14002befa:	mov    r8d,DWORD PTR [rdx+0x8]
   14002befe:	mov    eax,DWORD PTR [rdx+0xc]
   14002bf01:	mov    r11,QWORD PTR [rdx+0x10]
   14002bf05:	mov    r10,QWORD PTR [rdx+0x18]
   14002bf09:	mov    esi,DWORD PTR [rdx+0x20]
   14002bf0c:	cmp    r9d,0x5
   14002bf10:	jne    0x14002bf6f
   14002bf12:	mov    r9d,DWORD PTR [rcx+0x21488]
   14002bf19:	lea    edi,[rax+r8*1]
   14002bf1d:	dec    r9d
   14002bf20:	cmp    r8d,edi
   14002bf23:	jae    0x14002c011
   14002bf29:	mov    r11d,r8d
   14002bf2c:	shl    r11,0x2
   14002bf30:	add    r10,0xc
   14002bf34:	mov    eax,DWORD PTR [r10]
   14002bf37:	xor    eax,esi
   14002bf39:	test   r9d,eax
   14002bf3c:	jne    0x14002bf5a
   14002bf3e:	mov    rax,QWORD PTR [rbx+0x510]
   14002bf45:	mov    edx,DWORD PTR [r10]
   14002bf48:	mov    ecx,DWORD PTR [rax+rdx*4]
   14002bf4b:	mov    DWORD PTR [rax+rdx*4],r8d
   14002bf4f:	mov    rax,QWORD PTR [rbx+0x518]
   14002bf56:	mov    DWORD PTR [r11+rax*1],ecx
   14002bf5a:	add    r10,0x10
   14002bf5e:	inc    r8d
   14002bf61:	add    r11,0x4
   14002bf65:	cmp    r8d,edi
   14002bf68:	jb     0x14002bf34
   14002bf6a:	jmp    0x14002c011
   14002bf6f:	cmp    r9d,0x2
   14002bf73:	jne    0x14002bfa1
   14002bf75:	lea    r9d,[rax+r8*1]
   14002bf79:	jmp    0x14002bf9a
   14002bf7b:	mov    edx,DWORD PTR [r10]
   14002bf7e:	lea    r10,[r10+0x10]
   14002bf82:	mov    rcx,QWORD PTR [rbx+0x4f8]
   14002bf89:	mov    al,BYTE PTR [rdx+rcx*1]
   14002bf8c:	mov    BYTE PTR [rdx+rcx*1],r8b
   14002bf90:	inc    r8d
   14002bf93:	mov    BYTE PTR [r11],al
   14002bf96:	lea    r11,[r11+0x7]
   14002bf9a:	cmp    r8d,r9d
   14002bf9d:	jb     0x14002bf7b
   14002bf9f:	jmp    0x14002c011
   14002bfa1:	cmp    r9d,0x3
   14002bfa5:	lea    r9d,[rax+r8*1]
   14002bfa9:	jne    0x14002bfe0
   14002bfab:	cmp    r8d,r9d
   14002bfae:	jae    0x14002c011
   14002bfb0:	inc    r11
   14002bfb3:	add    r10,0x4
   14002bfb7:	mov    edx,DWORD PTR [r10]
   14002bfba:	lea    r10,[r10+0x10]
   14002bfbe:	mov    rcx,QWORD PTR [rbx+0x500]
   14002bfc5:	movzx  eax,WORD PTR [rcx+rdx*2]
   14002bfc9:	mov    WORD PTR [rcx+rdx*2],r8w
   14002bfce:	inc    r8d
   14002bfd1:	mov    WORD PTR [r11],ax
   14002bfd5:	lea    r11,[r11+0x7]
   14002bfd9:	cmp    r8d,r9d
   14002bfdc:	jb     0x14002bfb7
   14002bfde:	jmp    0x14002c011
   14002bfe0:	cmp    r8d,r9d
   14002bfe3:	jae    0x14002c011
   14002bfe5:	add    r11,0x3
   14002bfe9:	add    r10,0x8
   14002bfed:	mov    edx,DWORD PTR [r10]
   14002bff0:	lea    r10,[r10+0x10]
   14002bff4:	mov    rcx,QWORD PTR [rbx+0x508]
   14002bffb:	mov    eax,DWORD PTR [rcx+rdx*4]
   14002bffe:	mov    DWORD PTR [rcx+rdx*4],r8d
   14002c002:	inc    r8d
   14002c005:	mov    DWORD PTR [r11],eax
   14002c008:	lea    r11,[r11+0x7]
   14002c00c:	cmp    r8d,r9d
   14002c00f:	jb     0x14002bfed
   14002c011:	mov    rbx,QWORD PTR [rsp+0x8]
   14002c016:	mov    rsi,QWORD PTR [rsp+0x10]
   14002c01b:	mov    rdi,QWORD PTR [rsp+0x18]
   14002c020:	ret    
   14002c021:	int3   
   14002c022:	int3   
   14002c023:	int3   
   14002c024:	mov    QWORD PTR [rsp+0x8],rbx
   14002c029:	mov    QWORD PTR [rsp+0x10],rdi
   14002c02e:	mov    r10d,edx
   14002c031:	mov    rdi,rcx
   14002c034:	lea    r11d,[r10+r8*1]
   14002c038:	cmp    edx,r11d
   14002c03b:	jae    0x14002c099
   14002c03d:	mov    ebx,r10d
   14002c040:	shl    rbx,0x2
   14002c044:	mov    r9,QWORD PTR [rdi+0x4f0]
   14002c04b:	lea    r8d,[r10+0x2]
   14002c04f:	lea    eax,[r8-0x1]
   14002c053:	movzx  eax,BYTE PTR [rax+r9*1]
   14002c058:	movzx  ecx,BYTE PTR [r10+r9*1]
   14002c05d:	imul   edx,eax,0x2773
   14002c063:	imul   eax,ecx,0x3da9
   14002c069:	movzx  ecx,BYTE PTR [r8+r9*1]
   14002c06e:	add    edx,eax
   14002c070:	mov    rax,QWORD PTR [rdi+0x510]
   14002c077:	add    edx,ecx
   14002c079:	movzx  edx,dx
   14002c07c:	mov    ecx,DWORD PTR [rax+rdx*4]
   14002c07f:	mov    DWORD PTR [rax+rdx*4],r10d
   14002c083:	inc    r10d
   14002c086:	mov    rax,QWORD PTR [rdi+0x518]
   14002c08d:	mov    DWORD PTR [rbx+rax*1],ecx
   14002c090:	lea    rbx,[rbx+0x4]
   14002c094:	cmp    r10d,r11d
   14002c097:	jb     0x14002c044
   14002c099:	mov    rbx,QWORD PTR [rsp+0x8]
   14002c09e:	mov    rdi,QWORD PTR [rsp+0x10]
   14002c0a3:	ret    
   14002c0a4:	test   r8d,r8d
   14002c0a7:	je     0x14002c2a2
   14002c0ad:	mov    QWORD PTR [rsp+0x10],rbx
   14002c0b2:	mov    QWORD PTR [rsp+0x18],rbp
   14002c0b7:	mov    QWORD PTR [rsp+0x20],rsi
   14002c0bc:	push   rdi
   14002c0bd:	push   r12
   14002c0bf:	push   r13
   14002c0c1:	push   r14
   14002c0c3:	push   r15
   14002c0c5:	sub    rsp,0x940
   14002c0cc:	mov    rax,QWORD PTR [rip+0x55e0d]        # 0x140081ee0
   14002c0d3:	xor    rax,rsp
   14002c0d6:	mov    QWORD PTR [rsp+0x930],rax
   14002c0de:	xor    esi,esi
   14002c0e0:	mov    DWORD PTR [rsp+0x28],r8d
   14002c0e5:	mov    ebp,r8d
   14002c0e8:	mov    DWORD PTR [rsp+0x20],edx
   14002c0ec:	mov    r9d,edx
   14002c0ef:	mov    DWORD PTR [rsp+0x24],esi
   14002c0f3:	mov    rdi,rcx
   14002c0f6:	mov    edx,0x20000
   14002c0fb:	mov    r8d,0x400
   14002c101:	mov    ecx,DWORD PTR [rdi+0x21458]
   14002c107:	mov    eax,ebp
   14002c109:	sub    eax,esi
   14002c10b:	mov    r15d,esi
   14002c10e:	cmp    eax,edx
   14002c110:	cmova  eax,edx
   14002c113:	xor    edx,edx
   14002c115:	div    ecx
   14002c117:	cmp    eax,r8d
   14002c11a:	mov    r14d,eax
   14002c11d:	cmovb  r14d,r8d
   14002c121:	xor    r12d,r12d
   14002c124:	test   ecx,ecx
   14002c126:	je     0x14002c1a0
   14002c128:	mov    ecx,ebp
   14002c12a:	sub    ecx,esi
   14002c12c:	je     0x14002c19c
   14002c12e:	cmp    ecx,r14d
   14002c131:	mov    eax,r12d
   14002c134:	mov    ebx,r14d
   14002c137:	lea    r8,[rsp+0x530]
   14002c13f:	cmovb  ebx,ecx
   14002c142:	lea    rdx,[rip+0xfffffffffffffa2b]        # 0x14002bb74
   14002c149:	shl    rax,0x5
   14002c14d:	add    r8,rax
   14002c150:	mov    ecx,esi
   14002c152:	sub    rcx,r15
   14002c155:	lea    eax,[rsi+r9*1]
   14002c159:	and    eax,DWORD PTR [rdi+0x52c]
   14002c15f:	shl    rcx,0x4
   14002c163:	add    rcx,QWORD PTR [rdi+0x21470]
   14002c16a:	mov    QWORD PTR [r8+0x10],rcx
   14002c16e:	mov    rcx,QWORD PTR [rdi+0x21340]
   14002c175:	mov    QWORD PTR [r8],rdi
   14002c178:	mov    DWORD PTR [r8+0x8],eax
   14002c17c:	mov    DWORD PTR [r8+0xc],ebx
   14002c180:	mov    DWORD PTR [r8+0x18],r12d
   14002c184:	call   0x140046dd8
   14002c189:	mov    r9d,DWORD PTR [rsp+0x20]
   14002c18e:	add    esi,ebx
   14002c190:	inc    r12d
   14002c193:	cmp    r12d,DWORD PTR [rdi+0x21458]
   14002c19a:	jb     0x14002c128
   14002c19c:	mov    DWORD PTR [rsp+0x24],esi
   14002c1a0:	mov    rcx,QWORD PTR [rdi+0x21340]
   14002c1a7:	call   0x140047214
   14002c1ac:	mov    ebx,DWORD PTR [rdi+0x21488]
   14002c1b2:	mov    r13d,0x0
   14002c1b8:	add    ebx,0x3
   14002c1bb:	je     0x14002c24e
   14002c1c1:	mov    ebp,DWORD PTR [rsp+0x20]
   14002c1c5:	lea    r14,[rsp+0x38]
   14002c1ca:	mov    r12d,esi
   14002c1cd:	add    ebp,r15d
   14002c1d0:	sub    r12d,r15d
   14002c1d3:	imul   rsi,r15,0x7
   14002c1d7:	lea    r15,[rsp+0x30]
   14002c1dc:	mov    rcx,QWORD PTR [rdi+0x21348]
   14002c1e3:	lea    rdx,[rip+0xfffffffffffff996]        # 0x14002bb80
   14002c1ea:	add    rcx,rsi
   14002c1ed:	mov    QWORD PTR [r14-0x8],rdi
   14002c1f1:	mov    QWORD PTR [r14+0x8],rcx
   14002c1f5:	mov    eax,ebp
   14002c1f7:	and    eax,DWORD PTR [rdi+0x52c]
   14002c1fd:	mov    ecx,0x5
   14002c202:	mov    DWORD PTR [r14],eax
   14002c205:	cmp    r13d,0x3
   14002c209:	mov    rax,QWORD PTR [rdi+0x21470]
   14002c210:	mov    r8,r15
   14002c213:	mov    QWORD PTR [r14+0x10],rax
   14002c217:	lea    eax,[r13+0x2]
   14002c21b:	cmovb  ecx,eax
   14002c21e:	mov    DWORD PTR [r14+0x4],r12d
   14002c222:	mov    DWORD PTR [r14+0x1c],ecx
   14002c226:	mov    rcx,QWORD PTR [rdi+0x21340]
   14002c22d:	mov    DWORD PTR [r14+0x18],r13d
   14002c231:	call   0x140046dd8
   14002c236:	inc    r13d
   14002c239:	lea    r14,[r14+0x28]
   14002c23d:	add    r15,0x28
   14002c241:	cmp    r13d,ebx
   14002c244:	jb     0x14002c1dc
   14002c246:	mov    esi,DWORD PTR [rsp+0x24]
   14002c24a:	mov    ebp,DWORD PTR [rsp+0x28]
   14002c24e:	mov    rcx,QWORD PTR [rdi+0x21340]
   14002c255:	call   0x140047214
   14002c25a:	mov    r9d,DWORD PTR [rsp+0x20]
   14002c25f:	mov    edx,0x20000
   14002c264:	mov    r8d,0x400
   14002c26a:	cmp    esi,ebp
   14002c26c:	jb     0x14002c101
   14002c272:	mov    rcx,QWORD PTR [rsp+0x930]
   14002c27a:	xor    rcx,rsp
   14002c27d:	call   0x140055f90
   14002c282:	lea    r11,[rsp+0x940]
   14002c28a:	mov    rbx,QWORD PTR [r11+0x38]
   14002c28e:	mov    rbp,QWORD PTR [r11+0x40]
   14002c292:	mov    rsi,QWORD PTR [r11+0x48]
   14002c296:	mov    rsp,r11
   14002c299:	pop    r15
   14002c29b:	pop    r14
   14002c29d:	pop    r13
   14002c29f:	pop    r12
   14002c2a1:	pop    rdi
   14002c2a2:	ret    
   14002c2a3:	int3   
   14002c2a4:	mov    rax,rsp
   14002c2a7:	mov    QWORD PTR [rax+0x8],rbx
   14002c2ab:	mov    QWORD PTR [rax+0x10],rsi
   14002c2af:	mov    QWORD PTR [rax+0x18],rdi
   14002c2b3:	mov    QWORD PTR [rax+0x20],r14
   14002c2b7:	lea    ebx,[rdx+r8*1]
   14002c2bb:	mov    rsi,rcx
   14002c2be:	cmp    edx,ebx
   14002c2c0:	jae    0x14002c358
   14002c2c6:	mov    r14d,edx
   14002c2c9:	lea    edi,[rdx+0x3]
   14002c2cc:	shl    r14,0x2
   14002c2d0:	mov    r9,QWORD PTR [rsi+0x4f0]
   14002c2d7:	lea    eax,[rdi-0x1]
   14002c2da:	lea    r10d,[rdi-0x3]
   14002c2de:	lea    r11d,[rdi+0x1]
   14002c2e2:	movzx  eax,BYTE PTR [rax+r9*1]
   14002c2e7:	imul   edx,eax,0x2773
   14002c2ed:	mov    eax,edi
   14002c2ef:	movzx  ecx,BYTE PTR [rax+r9*1]
   14002c2f4:	lea    eax,[rdi-0x2]
   14002c2f7:	movzx  eax,BYTE PTR [rax+r9*1]
   14002c2fc:	add    edx,ecx
   14002c2fe:	imul   ecx,eax,0x2f838e15
   14002c304:	mov    edi,r11d
   14002c307:	imul   r8d,edx,0x2773
   14002c30e:	sub    r8d,ecx
   14002c311:	movzx  ecx,BYTE PTR [r10+r9*1]
   14002c316:	imul   eax,ecx,0x62be066f
   14002c31c:	movzx  ecx,BYTE PTR [r11+r9*1]
   14002c321:	sub    r8d,eax
   14002c324:	mov    rax,QWORD PTR [rsi+0x510]
   14002c32b:	add    r8d,ecx
   14002c32e:	and    r8d,DWORD PTR [rsi+0x524]
   14002c335:	mov    ecx,DWORD PTR [rax+r8*4]
   14002c339:	mov    DWORD PTR [rax+r8*4],r10d
   14002c33d:	mov    rax,QWORD PTR [rsi+0x518]
   14002c344:	mov    DWORD PTR [r14+rax*1],ecx
   14002c348:	lea    eax,[r11-0x3]
   14002c34c:	lea    r14,[r14+0x4]
   14002c350:	cmp    eax,ebx
   14002c352:	jb     0x14002c2d0
   14002c358:	mov    rbx,QWORD PTR [rsp+0x8]
   14002c35d:	mov    rsi,QWORD PTR [rsp+0x10]
   14002c362:	mov    rdi,QWORD PTR [rsp+0x18]
   14002c367:	mov    r14,QWORD PTR [rsp+0x20]
   14002c36c:	ret    
   14002c36d:	int3   
   14002c36e:	int3   
   14002c36f:	int3   
   14002c370:	mov    QWORD PTR [rsp+0x10],rbx
   14002c375:	mov    QWORD PTR [rsp+0x18],rbp
   14002c37a:	mov    QWORD PTR [rsp+0x20],rsi
   14002c37f:	push   rdi
   14002c380:	push   r12
   14002c382:	push   r13
   14002c384:	push   r14
   14002c386:	push   r15
   14002c388:	mov    rax,QWORD PTR [rcx+0x21348]
   14002c38f:	mov    rbp,rcx
   14002c392:	mov    edi,edx
   14002c394:	mov    QWORD PTR [rsp+0x30],rax
   14002c399:	lea    r13d,[rdi+r8*1]
   14002c39d:	cmp    edx,r13d
   14002c3a0:	jae    0x14002c478
   14002c3a6:	lea    esi,[rdi+0x2]
   14002c3a9:	mov    r12d,edi
   14002c3ac:	lea    r14d,[rdi+0x1]
   14002c3b0:	lea    r15d,[rdi+0x3]
   14002c3b4:	sub    r14,rsi
   14002c3b7:	sub    r15,rsi
   14002c3ba:	sub    r12,rsi
   14002c3bd:	mov    rdx,QWORD PTR [rbp+0x4f0]
   14002c3c4:	lea    rax,[r12+rsi*1]
   14002c3c8:	movzx  ecx,BYTE PTR [rax+rdx*1]
   14002c3cc:	lea    rax,[r14+rsi*1]
   14002c3d0:	movzx  r8d,BYTE PTR [rsi+rdx*1]
   14002c3d5:	imul   r9d,ecx,0x2773
   14002c3dc:	movzx  ecx,BYTE PTR [rax+rdx*1]
   14002c3e0:	add    r9d,ecx
   14002c3e3:	imul   eax,r9d,0x2773
   14002c3ea:	and    r9d,0x3fff
   14002c3f1:	mov    r11d,r9d
   14002c3f4:	mov    r9,QWORD PTR [rbp+0x4f8]
   14002c3fb:	add    r8d,eax
   14002c3fe:	lea    rax,[r15+rsi*1]
   14002c402:	movzx  edx,BYTE PTR [rax+rdx*1]
   14002c406:	mov    ecx,r8d
   14002c409:	mov    bl,BYTE PTR [r11+r9*1]
   14002c40d:	and    r8d,0x3ffff
   14002c414:	imul   eax,ecx,0x2773
   14002c41a:	inc    rsi
   14002c41d:	add    edx,eax
   14002c41f:	mov    rax,QWORD PTR [rbp+0x500]
   14002c426:	and    edx,0x3ffff
   14002c42c:	movzx  r10d,WORD PTR [rax+r8*2]
   14002c431:	mov    rax,QWORD PTR [rbp+0x508]
   14002c438:	mov    ecx,DWORD PTR [rax+rdx*4]
   14002c43b:	mov    BYTE PTR [r11+r9*1],dil
   14002c43f:	mov    rax,QWORD PTR [rbp+0x500]
   14002c446:	mov    WORD PTR [rax+r8*2],di
   14002c44b:	mov    rax,QWORD PTR [rbp+0x508]
   14002c452:	mov    DWORD PTR [rax+rdx*4],edi
   14002c455:	inc    edi
   14002c457:	mov    rax,QWORD PTR [rsp+0x30]
   14002c45c:	mov    DWORD PTR [rax+0x3],ecx
   14002c45f:	mov    WORD PTR [rax+0x1],r10w
   14002c464:	mov    BYTE PTR [rax],bl
   14002c466:	add    rax,0x7
   14002c46a:	mov    QWORD PTR [rsp+0x30],rax
   14002c46f:	cmp    edi,r13d
   14002c472:	jb     0x14002c3bd
   14002c478:	mov    rbx,QWORD PTR [rsp+0x38]
   14002c47d:	mov    rbp,QWORD PTR [rsp+0x40]
   14002c482:	mov    rsi,QWORD PTR [rsp+0x48]
   14002c487:	pop    r15
   14002c489:	pop    r14
   14002c48b:	pop    r13
   14002c48d:	pop    r12
   14002c48f:	pop    rdi
   14002c490:	ret    
   14002c491:	int3   
   14002c492:	int3   
   14002c493:	int3   
   14002c494:	mov    QWORD PTR [rsp+0x8],rbx
   14002c499:	mov    QWORD PTR [rsp+0x10],rbp
   14002c49e:	mov    QWORD PTR [rsp+0x18],rsi
   14002c4a3:	push   rdi
   14002c4a4:	sub    rsp,0x20
   14002c4a8:	mov    r10d,DWORD PTR [rdx+0x828]
   14002c4af:	xor    ecx,ecx
   14002c4b1:	mov    r11,QWORD PTR [rdx+0x820]
   14002c4b8:	mov    rdi,rdx
   14002c4bb:	movsxd rbp,r9d
   14002c4be:	mov    ebx,ecx
   14002c4c0:	lea    eax,[r10+0x1]
   14002c4c4:	mov    DWORD PTR [rdx+0x828],eax
   14002c4ca:	lea    rax,[r8+rbp*1]
   14002c4ce:	mov    r9,rax
   14002c4d1:	sub    r9,r8
   14002c4d4:	cmp    r8,rax
   14002c4d7:	cmova  r9,rcx
   14002c4db:	test   r9,r9
   14002c4de:	je     0x14002c517
   14002c4e0:	mov    rdx,r8
   14002c4e3:	lea    esi,[r10-0x3]
   14002c4e7:	neg    rdx
   14002c4ea:	movzx  eax,BYTE PTR [r8]
   14002c4ee:	shl    ecx,0x5
   14002c4f1:	xor    ecx,eax
   14002c4f3:	and    ecx,0x7fff
   14002c4f9:	cmp    DWORD PTR [r11+rcx*4],esi
   14002c4fd:	jb     0x14002c507
   14002c4ff:	cmp    DWORD PTR [r11+rcx*4],r10d
   14002c503:	ja     0x14002c507
   14002c505:	inc    ebx
   14002c507:	inc    r8
   14002c50a:	mov    DWORD PTR [r11+rcx*4],r10d
   14002c50e:	lea    rax,[rdx+r8*1]
   14002c512:	cmp    rax,r9
   14002c515:	jb     0x14002c4ea
   14002c517:	cmp    DWORD PTR [rdi+0x828],0x40000000
   14002c521:	jne    0x14002c541
   14002c523:	mov    rcx,QWORD PTR [rdi+0x820]
   14002c52a:	xor    edx,edx
   14002c52c:	mov    r8d,0x20000
   14002c532:	call   0x140058f40
   14002c537:	mov    DWORD PTR [rdi+0x828],0x10
   14002c541:	mov    rsi,QWORD PTR [rsp+0x40]
   14002c546:	xor    edx,edx
   14002c548:	shl    ebx,0x8
   14002c54b:	mov    eax,ebx
   14002c54d:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c552:	div    ebp
   14002c554:	mov    rbp,QWORD PTR [rsp+0x38]
   14002c559:	add    rsp,0x20
   14002c55d:	pop    rdi
   14002c55e:	ret    
   14002c55f:	int3   
   14002c560:	mov    QWORD PTR [rsp+0x8],rbx
   14002c565:	mov    QWORD PTR [rsp+0x10],rbp
   14002c56a:	mov    QWORD PTR [rsp+0x20],rsi
   14002c56f:	push   rdi
   14002c570:	push   r12
   14002c572:	push   r13
   14002c574:	push   r14
   14002c576:	push   r15
   14002c578:	sub    rsp,0x2d0
   14002c57f:	mov    rax,QWORD PTR [rip+0x5595a]        # 0x140081ee0
   14002c586:	xor    rax,rsp
   14002c589:	mov    QWORD PTR [rsp+0x2c0],rax
   14002c591:	shl    edx,0x8
   14002c594:	mov    esi,r9d
   14002c597:	mov    eax,edx
   14002c599:	mov    DWORD PTR [rsp+0x20],r9d
   14002c59e:	cdq    
   14002c59f:	mov    QWORD PTR [rsp+0x38],r8
   14002c5a4:	idiv   r9d
   14002c5a7:	mov    DWORD PTR [rsp+0x24],eax
   14002c5ab:	mov    r12d,eax
   14002c5ae:	cmp    eax,0xfa
   14002c5b3:	jle    0x14002c5bc
   14002c5b5:	xor    al,al
   14002c5b7:	jmp    0x14002c737
   14002c5bc:	xor    ebx,ebx
   14002c5be:	lea    rcx,[rsp+0xc0]
   14002c5c6:	mov    edi,0x100
   14002c5cb:	xor    edx,edx
   14002c5cd:	mov    r8d,edi
   14002c5d0:	mov    r14d,ebx
   14002c5d3:	mov    ebp,ebx
   14002c5d5:	call   0x140058f40
   14002c5da:	mov    r8d,edi
   14002c5dd:	lea    rcx,[rsp+0x1c0]
   14002c5e5:	xor    edx,edx
   14002c5e7:	call   0x140058f40
   14002c5ec:	mov    edi,DWORD PTR [rsp+0x320]
   14002c5f3:	lea    rcx,[rsp+0x40]
   14002c5f8:	movsxd rax,edi
   14002c5fb:	xor    edx,edx
   14002c5fd:	mov    r8,rax
   14002c600:	mov    QWORD PTR [rsp+0x30],rax
   14002c605:	shl    r8,0x2
   14002c609:	call   0x140058f40
   14002c60e:	test   edi,edi
   14002c610:	jle    0x14002c6d2
   14002c616:	mov    eax,esi
   14002c618:	mov    QWORD PTR [rsp+0x28],rdi
   14002c61d:	mov    rsi,QWORD PTR [rsp+0x30]
   14002c622:	lea    rcx,[rsp+0x40]
   14002c627:	sub    eax,edi
   14002c629:	mov    r8d,ebx
   14002c62c:	movsxd r12,eax
   14002c62f:	mov    r10d,edi
   14002c632:	mov    r9d,ebx
   14002c635:	mov    dil,bl
   14002c638:	mov    r11,r8
   14002c63b:	cmp    r8,r12
   14002c63e:	jge    0x14002c6ac
   14002c640:	mov    r15d,DWORD PTR [rcx]
   14002c643:	mov    r10,QWORD PTR [rsp+0x38]
   14002c648:	movzx  edx,BYTE PTR [r11+r10*1]
   14002c64d:	mov    eax,edx
   14002c64f:	cmp    BYTE PTR [rsp+rdx*1+0xc0],bl
   14002c656:	jne    0x14002c663
   14002c658:	mov    BYTE PTR [rsp+rdx*1+0xc0],0x1
   14002c660:	inc    r14d
   14002c663:	sub    r9b,dl
   14002c666:	add    r9b,dil
   14002c669:	movzx  r13d,r9b
   14002c66d:	mov    eax,r13d
   14002c670:	cmp    BYTE PTR [rsp+r13*1+0x1c0],bl
   14002c678:	jne    0x14002c684
   14002c67a:	mov    BYTE PTR [rsp+rax*1+0x1c0],0x1
   14002c682:	inc    ebp
   14002c684:	mov    al,dl
   14002c686:	add    r11,rsi
   14002c689:	sub    al,dil
   14002c68c:	mov    dil,dl
   14002c68f:	movsx  r9d,al
   14002c693:	movsx  eax,r13b
   14002c697:	cdq    
   14002c698:	xor    eax,edx
   14002c69a:	sub    eax,edx
   14002c69c:	add    r15d,eax
   14002c69f:	cmp    r11,r12
   14002c6a2:	jl     0x14002c648
   14002c6a4:	mov    r10,QWORD PTR [rsp+0x28]
   14002c6a9:	mov    DWORD PTR [rcx],r15d
   14002c6ac:	inc    r8
   14002c6af:	add    rcx,0x4
   14002c6b3:	sub    r10,0x1
   14002c6b7:	mov    QWORD PTR [rsp+0x28],r10
   14002c6bc:	jne    0x14002c632
   14002c6c2:	mov    edi,DWORD PTR [rsp+0x320]
   14002c6c9:	mov    esi,DWORD PTR [rsp+0x20]
   14002c6cd:	mov    r12d,DWORD PTR [rsp+0x24]
   14002c6d2:	lea    eax,[r14+r14*1]
   14002c6d6:	cmp    ebp,eax
   14002c6d8:	jg     0x14002c5b5
   14002c6de:	mov    eax,0x10000000
   14002c6e3:	test   edi,edi
   14002c6e5:	jle    0x14002c6fd
   14002c6e7:	lea    rcx,[rsp+0x40]
   14002c6ec:	mov    edx,edi
   14002c6ee:	cmp    DWORD PTR [rcx],eax
   14002c6f0:	cmovl  eax,DWORD PTR [rcx]
   14002c6f3:	lea    rcx,[rcx+0x4]
   14002c6f7:	sub    rdx,0x1
   14002c6fb:	jne    0x14002c6ee
   14002c6fd:	shl    eax,0x8
   14002c700:	cdq    
   14002c701:	idiv   esi
   14002c703:	imul   eax,edi
   14002c706:	cmp    esi,0x400
   14002c70c:	jge    0x14002c719
   14002c70e:	cmp    eax,0xa00
   14002c713:	jg     0x14002c5b5
   14002c719:	cmp    eax,0x1400
   14002c71e:	jg     0x14002c5b5
   14002c724:	lea    ecx,[rax+0x80]
   14002c72a:	imul   ecx,r12d
   14002c72e:	cmp    ecx,0x30000
   14002c734:	setl   al
   14002c737:	mov    rcx,QWORD PTR [rsp+0x2c0]
   14002c73f:	xor    rcx,rsp
   14002c742:	call   0x140055f90
   14002c747:	lea    r11,[rsp+0x2d0]
   14002c74f:	mov    rbx,QWORD PTR [r11+0x30]
   14002c753:	mov    rbp,QWORD PTR [r11+0x38]
   14002c757:	mov    rsi,QWORD PTR [r11+0x48]
   14002c75b:	mov    rsp,r11
   14002c75e:	pop    r15
   14002c760:	pop    r14
   14002c762:	pop    r13
   14002c764:	pop    r12
   14002c766:	pop    rdi
   14002c767:	ret    
   14002c768:	mov    QWORD PTR [rsp+0x8],rbx
   14002c76d:	mov    QWORD PTR [rsp+0x10],rdx
   14002c772:	push   rbp
   14002c773:	push   rsi
   14002c774:	push   rdi
   14002c775:	push   r12
   14002c777:	push   r13
   14002c779:	push   r14
   14002c77b:	push   r15
   14002c77d:	xor    r15d,r15d
   14002c780:	lea    eax,[r8-0x14]
   14002c784:	and    DWORD PTR [rsp+0x50],r15d
   14002c789:	xor    r13d,r13d
   14002c78c:	cdqe   
   14002c78e:	xor    ebx,ebx
   14002c790:	xor    edi,edi
   14002c792:	mov    QWORD PTR [rsp+0x58],rax
   14002c797:	test   rax,rax
   14002c79a:	jle    0x14002c8d4
   14002c7a0:	lea    r12,[rdi+rdx*1]
   14002c7a4:	movzx  eax,BYTE PTR [r12]
   14002c7a9:	lea    rcx,[rip+0x54dc0]        # 0x140081570
   14002c7b0:	and    eax,0x1f
   14002c7b3:	mov    r14d,DWORD PTR [rcx+rax*4]
   14002c7b7:	cmp    r14d,0xffffffff
   14002c7bb:	je     0x14002c8d4
   14002c7c1:	test   r14d,r14d
   14002c7c4:	je     0x14002c8c3
   14002c7ca:	xor    ebp,ebp
   14002c7cc:	lea    esi,[rbp+0x12]
   14002c7cf:	bt     r14d,ebp
   14002c7d3:	jae    0x14002c8b0
   14002c7d9:	lea    r11d,[rsi+0x18]
   14002c7dd:	mov    eax,r11d
   14002c7e0:	and    r11d,0x7
   14002c7e4:	cdq    
   14002c7e5:	and    edx,0x7
   14002c7e8:	add    eax,edx
   14002c7ea:	sar    eax,0x3
   14002c7ed:	movsxd rcx,eax
   14002c7f0:	inc    eax
   14002c7f2:	movzx  r10d,BYTE PTR [rcx+r12*1]
   14002c7f7:	movsxd rcx,eax
   14002c7fa:	inc    eax
   14002c7fc:	movzx  edx,BYTE PTR [rcx+r12*1]
   14002c801:	mov    cl,r11b
   14002c804:	shl    edx,0x8
   14002c807:	or     r10d,edx
   14002c80a:	lea    edx,[rax+0x1]
   14002c80d:	movsxd r8,edx
   14002c810:	cdqe   
   14002c812:	movzx  r9d,BYTE PTR [r8+r12*1]
   14002c817:	movzx  edx,BYTE PTR [rax+r12*1]
   14002c81c:	shl    r9d,0x8
   14002c820:	or     r9d,edx
   14002c823:	shl    r9d,0x10
   14002c827:	or     r9d,r10d
   14002c82a:	shr    r9d,cl
   14002c82d:	and    r9d,0xf
   14002c831:	cmp    r9b,0x5
   14002c835:	jne    0x14002c8b0
   14002c837:	cmp    ebx,r13d
   14002c83a:	je     0x14002c8b0
   14002c83c:	mov    eax,esi
   14002c83e:	cdq    
   14002c83f:	and    edx,0x7
   14002c842:	add    eax,edx
   14002c844:	sar    eax,0x3
   14002c847:	movsxd rcx,eax
   14002c84a:	inc    eax
   14002c84c:	movzx  r8d,BYTE PTR [rcx+r12*1]
   14002c851:	movsxd rcx,eax
   14002c854:	inc    eax
   14002c856:	movzx  edx,BYTE PTR [rcx+r12*1]
   14002c85b:	lea    ecx,[rax+0x1]
   14002c85e:	shl    edx,0x8
   14002c861:	or     r8d,edx
   14002c864:	cdqe   
   14002c866:	movsxd rdx,ecx
   14002c869:	movzx  ecx,BYTE PTR [rax+r12*1]
   14002c86e:	movzx  r9d,BYTE PTR [rdx+r12*1]
   14002c873:	mov    eax,DWORD PTR [rsp+0x50]
   14002c877:	shl    r9d,0x8
   14002c87b:	add    eax,r13d
   14002c87e:	or     r9d,ecx
   14002c881:	mov    ecx,esi
   14002c883:	shl    r9d,0x10
   14002c887:	and    ecx,0x7
   14002c88a:	or     r9d,r8d
   14002c88d:	shr    r9d,cl
   14002c890:	and    r9d,0xfffff
   14002c897:	lea    ecx,[r9+rbx*1]
   14002c89b:	cmp    ecx,eax
   14002c89d:	jne    0x14002c8a8
   14002c89f:	inc    r15d
   14002c8a2:	cmp    r15d,0x4
   14002c8a6:	jg     0x14002c8ea
   14002c8a8:	mov    DWORD PTR [rsp+0x50],r9d
   14002c8ad:	mov    r13d,ebx
   14002c8b0:	inc    ebp
   14002c8b2:	add    esi,0x29
   14002c8b5:	cmp    esi,0x64
   14002c8b8:	jle    0x14002c7cf
   14002c8be:	mov    rdx,QWORD PTR [rsp+0x48]
   14002c8c3:	add    rdi,0x10
   14002c8c7:	inc    ebx
   14002c8c9:	cmp    rdi,QWORD PTR [rsp+0x58]
   14002c8ce:	jl     0x14002c7a0
   14002c8d4:	mov    eax,0x8
   14002c8d9:	mov    rbx,QWORD PTR [rsp+0x40]
   14002c8de:	pop    r15
   14002c8e0:	pop    r14
   14002c8e2:	pop    r13
   14002c8e4:	pop    r12
   14002c8e6:	pop    rdi
   14002c8e7:	pop    rsi
   14002c8e8:	pop    rbp
   14002c8e9:	ret    
   14002c8ea:	mov    eax,0x6
   14002c8ef:	jmp    0x14002c8d9
   14002c8f1:	int3   
   14002c8f2:	int3   
   14002c8f3:	int3   
   14002c8f4:	add    rcx,0x21490
   14002c8fb:	jmp    0x1400118dc
   14002c900:	mov    QWORD PTR [rsp+0x18],rbx
   14002c905:	push   rbp
   14002c906:	push   rsi
   14002c907:	push   rdi
   14002c908:	push   r12
   14002c90a:	push   r13
   14002c90c:	push   r14
   14002c90e:	push   r15
   14002c910:	sub    rsp,0x20
   14002c914:	lea    rdi,[rcx+0x21490]
   14002c91b:	mov    rbx,rcx
   14002c91e:	mov    rcx,rdi
   14002c921:	call   0x1400118dc
   14002c926:	lea    r13,[rbx+0x1a638]
   14002c92d:	xor    ebp,ebp
   14002c92f:	mov    r15d,DWORD PTR [r13+0x0]
   14002c933:	mov    DWORD PTR [rsp+0x68],r15d
   14002c938:	mov    r9d,DWORD PTR [rbx+0x1c64c]
   14002c93f:	cmp    DWORD PTR [r13+0x0],r9d
   14002c943:	je     0x14002cb55
   14002c949:	mov    rsi,QWORD PTR [rbx+0x4f0]
   14002c950:	lea    ecx,[r9-0x1]
   14002c954:	mov    r11d,DWORD PTR [rbx+0x52c]
   14002c95b:	and    rcx,r11
   14002c95e:	mov    r10b,BYTE PTR [rsi+r9*1]
   14002c962:	and    DWORD PTR [rbx+0x548],0x0
   14002c969:	mov    BYTE PTR [rsp+0x60],r10b
   14002c96e:	cmp    r10b,BYTE PTR [rcx+rsi*1]
   14002c972:	jne    0x14002c9bf
   14002c974:	and    DWORD PTR [rbx+0x54c],0x0
   14002c97b:	mov    ecx,r9d
   14002c97e:	cmp    r9d,r15d
   14002c981:	jae    0x14002c9ac
   14002c983:	mov    edx,DWORD PTR [rbx+0x54c]
   14002c989:	cmp    edx,0x101
   14002c98f:	jae    0x14002c9ac
   14002c991:	mov    eax,ecx
   14002c993:	and    rax,r11
   14002c996:	cmp    BYTE PTR [rax+rsi*1],r10b
   14002c99a:	jne    0x14002c9ac
   14002c99c:	inc    ecx
   14002c99e:	lea    eax,[rdx+0x1]
   14002c9a1:	mov    DWORD PTR [rbx+0x54c],eax
   14002c9a7:	cmp    ecx,r15d
   14002c9aa:	jb     0x14002c983
   14002c9ac:	cmp    DWORD PTR [rbx+0x54c],0xa
   14002c9b3:	jle    0x14002c9bf
   14002c9b5:	mov    DWORD PTR [rbx+0x548],0x1
   14002c9bf:	test   r9b,0xf
   14002c9c3:	je     0x14002c9cd
   14002c9c5:	test   ebp,ebp
   14002c9c7:	je     0x14002ca83
   14002c9cd:	cmp    DWORD PTR [rbx+0x548],0x0
   14002c9d4:	jne    0x14002ca83
   14002c9da:	test   ebp,ebp
   14002c9dc:	je     0x14002c9e0
   14002c9de:	dec    ebp
   14002c9e0:	mov    rax,QWORD PTR [rbx+0x518]
   14002c9e7:	mov    r8d,r9d
   14002c9ea:	mov    r15d,DWORD PTR [rax+r9*4]
   14002c9ee:	sub    r8d,r15d
   14002c9f1:	and    r8d,r11d
   14002c9f4:	je     0x14002ca7e
   14002c9fa:	mov    eax,DWORD PTR [r13+0x0]
   14002c9fe:	mov    r12d,0x101
   14002ca04:	sub    eax,r9d
   14002ca07:	mov    rcx,r11
   14002ca0a:	and    eax,r11d
   14002ca0d:	cmp    eax,r12d
   14002ca10:	cmovb  r12d,eax
   14002ca14:	mov    eax,r15d
   14002ca17:	and    rax,r11
   14002ca1a:	and    rcx,r9
   14002ca1d:	xor    r10d,r10d
   14002ca20:	mov    al,BYTE PTR [rax+rsi*1]
   14002ca23:	cmp    BYTE PTR [rcx+rsi*1],al
   14002ca26:	jne    0x14002ca79
   14002ca28:	mov    r14d,r9d
   14002ca2b:	cmp    r10d,r12d
   14002ca2e:	jae    0x14002ca4b
   14002ca30:	inc    r10d
   14002ca33:	inc    r14d
   14002ca36:	mov    ecx,r14d
   14002ca39:	and    rcx,r11
   14002ca3c:	lea    edx,[r10+r15*1]
   14002ca40:	and    rdx,r11
   14002ca43:	mov    al,BYTE PTR [rdx+rsi*1]
   14002ca46:	cmp    BYTE PTR [rcx+rsi*1],al
   14002ca49:	je     0x14002ca2b
   14002ca4b:	cmp    r10d,0x40
   14002ca4f:	jb     0x14002ca79
   14002ca51:	cmp    r8d,DWORD PTR [rbx+0x530]
   14002ca58:	jae    0x14002ca79
   14002ca5a:	mov    r15d,DWORD PTR [rsp+0x68]
   14002ca5f:	test   r8d,r8d
   14002ca62:	je     0x14002ca72
   14002ca64:	mov    DWORD PTR [rbx+0x548],r8d
   14002ca6b:	mov    DWORD PTR [rbx+0x54c],r10d
   14002ca72:	mov    r10b,BYTE PTR [rsp+0x60]
   14002ca77:	jmp    0x14002ca83
   14002ca79:	mov    r10b,BYTE PTR [rsp+0x60]
   14002ca7e:	mov    r15d,DWORD PTR [rsp+0x68]
   14002ca83:	mov    edx,DWORD PTR [rbx+0x548]
   14002ca89:	test   edx,edx
   14002ca8b:	je     0x14002cb19
   14002ca91:	mov    r8d,DWORD PTR [rbx+0x54c]
   14002ca98:	mov    eax,r15d
   14002ca9b:	sub    eax,r9d
   14002ca9e:	and    eax,r11d
   14002caa1:	cmp    eax,r8d
   14002caa4:	jbe    0x14002cb19
   14002caa6:	cmp    BYTE PTR [rbx+0x1c651],0x0
   14002caad:	jne    0x14002cab4
   14002caaf:	cmp    edx,r9d
   14002cab2:	ja     0x14002cb19
   14002cab4:	cmp    edx,0x2000
   14002caba:	jb     0x14002caca
   14002cabc:	dec    r8d
   14002cabf:	cmp    edx,0x40000
   14002cac5:	jb     0x14002caca
   14002cac7:	dec    r8d
   14002caca:	mov    ecx,DWORD PTR [rdi+0x1c]
   14002cacd:	dec    edx
   14002cacf:	mov    rax,QWORD PTR [rdi+0x10]
   14002cad3:	sub    r8b,0x3
   14002cad7:	mov    BYTE PTR [rax+rcx*8],0x1
   14002cadb:	mov    BYTE PTR [rax+rcx*8+0x1],r8b
   14002cae0:	mov    DWORD PTR [rax+rcx*8+0x4],edx
   14002cae4:	inc    DWORD PTR [rdi+0x1c]
   14002cae7:	mov    eax,DWORD PTR [rdi+0x1c]
   14002caea:	cmp    eax,DWORD PTR [rdi+0x18]
   14002caed:	jb     0x14002caf7
   14002caef:	mov    rcx,rdi
   14002caf2:	call   0x1400118dc
   14002caf7:	mov    eax,DWORD PTR [rbx+0x1c64c]
   14002cafd:	mov    ebp,0x10
   14002cb02:	add    eax,DWORD PTR [rbx+0x54c]
   14002cb08:	and    eax,DWORD PTR [rbx+0x52c]
   14002cb0e:	mov    DWORD PTR [rbx+0x1c64c],eax
   14002cb14:	jmp    0x14002c938
   14002cb19:	mov    ecx,DWORD PTR [rdi+0x1c]
   14002cb1c:	mov    rax,QWORD PTR [rdi+0x10]
   14002cb20:	mov    BYTE PTR [rax+rcx*8],0x0
   14002cb24:	mov    BYTE PTR [rax+rcx*8+0x4],r10b
   14002cb29:	inc    DWORD PTR [rdi+0x1c]
   14002cb2c:	mov    eax,DWORD PTR [rdi+0x1c]
   14002cb2f:	cmp    eax,DWORD PTR [rdi+0x18]
   14002cb32:	jb     0x14002cb3c
   14002cb34:	mov    rcx,rdi
   14002cb37:	call   0x1400118dc
   14002cb3c:	mov    eax,DWORD PTR [rbx+0x1c64c]
   14002cb42:	inc    eax
   14002cb44:	and    eax,DWORD PTR [rbx+0x52c]
   14002cb4a:	mov    DWORD PTR [rbx+0x1c64c],eax
   14002cb50:	jmp    0x14002c938
   14002cb55:	mov    rcx,r13
   14002cb58:	call   0x140030df8
   14002cb5d:	mov    rcx,rdi
   14002cb60:	mov    rbx,QWORD PTR [rsp+0x70]
   14002cb65:	add    rsp,0x20
   14002cb69:	pop    r15
   14002cb6b:	pop    r14
   14002cb6d:	pop    r13
   14002cb6f:	pop    r12
   14002cb71:	pop    rdi
   14002cb72:	pop    rsi
   14002cb73:	pop    rbp
   14002cb74:	jmp    0x1400118dc
   14002cb79:	int3   
   14002cb7a:	int3   
   14002cb7b:	int3   
   14002cb7c:	mov    QWORD PTR [rsp+0x18],rbx
   14002cb81:	push   rbp
   14002cb82:	push   rsi
   14002cb83:	push   rdi
   14002cb84:	push   r12
   14002cb86:	push   r13
   14002cb88:	push   r14
   14002cb8a:	push   r15
   14002cb8c:	sub    rsp,0x20
   14002cb90:	mov    eax,DWORD PTR [rcx+0x1c64c]
   14002cb96:	lea    rdi,[rcx+0x1a638]
   14002cb9d:	mov    rbx,rcx
   14002cba0:	cmp    DWORD PTR [rdi],eax
   14002cba2:	je     0x14002cd13
   14002cba8:	mov    esi,DWORD PTR [rdi]
   14002cbaa:	mov    ebp,DWORD PTR [rcx+0x21458]
   14002cbb0:	sub    esi,eax
   14002cbb2:	and    esi,DWORD PTR [rcx+0x52c]
   14002cbb8:	mov    eax,DWORD PTR [rcx+0x21468]
   14002cbbe:	shl    ebp,0x11
   14002cbc1:	cmp    ebp,eax
   14002cbc3:	mov    DWORD PTR [rsp+0x60],esi
   14002cbc7:	cmova  ebp,eax
   14002cbca:	cmp    ebp,esi
   14002cbcc:	cmova  ebp,esi
   14002cbcf:	xor    r12d,r12d
   14002cbd2:	test   esi,esi
   14002cbd4:	je     0x14002cd0b
   14002cbda:	lea    edx,[r12+0x1]
   14002cbdf:	mov    ecx,DWORD PTR [rbx+0x21458]
   14002cbe5:	mov    r15d,esi
   14002cbe8:	sub    r15d,r12d
   14002cbeb:	cmp    ebp,r15d
   14002cbee:	cmovb  r15d,ebp
   14002cbf2:	mov    eax,r15d
   14002cbf5:	shr    eax,0xa
   14002cbf8:	cmp    eax,ecx
   14002cbfa:	cmovb  ecx,eax
   14002cbfd:	mov    eax,r15d
   14002cc00:	test   ecx,ecx
   14002cc02:	cmove  ecx,edx
   14002cc05:	xor    edx,edx
   14002cc07:	div    ecx
   14002cc09:	xor    r14d,r14d
   14002cc0c:	xor    r13d,r13d
   14002cc0f:	test   r15d,r15d
   14002cc12:	je     0x14002ccb1
   14002cc18:	lea    edi,[rcx-0x1]
   14002cc1b:	mov    esi,eax
   14002cc1d:	mov    r8,QWORD PTR [rbx+r14*8+0x21358]
   14002cc25:	mov    r9d,r15d
   14002cc28:	sub    r9d,r13d
   14002cc2b:	cmp    esi,r9d
   14002cc2e:	mov    edx,r9d
   14002cc31:	cmovb  edx,esi
   14002cc34:	mov    QWORD PTR [r8],rbx
   14002cc37:	mov    eax,DWORD PTR [rbx+0x1c64c]
   14002cc3d:	cmp    r14d,edi
   14002cc40:	cmove  edx,r9d
   14002cc44:	add    eax,r13d
   14002cc47:	add    eax,r12d
   14002cc4a:	mov    DWORD PTR [rsp+0x68],edx
   14002cc4e:	and    eax,DWORD PTR [rbx+0x52c]
   14002cc54:	mov    DWORD PTR [r8+0x8],eax
   14002cc58:	mov    DWORD PTR [r8+0xc],edx
   14002cc5c:	mov    rax,QWORD PTR [rbx+0x21460]
   14002cc63:	mov    DWORD PTR [r8+0x88c],r14d
   14002cc6a:	lea    rcx,[rax+r13*8]
   14002cc6e:	mov    QWORD PTR [r8+0x10],rcx
   14002cc72:	test   r13d,r13d
   14002cc75:	jne    0x14002cc89
   14002cc77:	cmp    edx,r9d
   14002cc7a:	jne    0x14002cc89
   14002cc7c:	mov    rdx,r8
   14002cc7f:	mov    rcx,rbx
   14002cc82:	call   0x14002f85c
   14002cc87:	jmp    0x14002cc9c
   14002cc89:	mov    rcx,QWORD PTR [rbx+0x21340]
   14002cc90:	lea    rdx,[rip+0x2bb9]        # 0x14002f850
   14002cc97:	call   0x140046dd8
   14002cc9c:	add    r13d,DWORD PTR [rsp+0x68]
   14002cca1:	inc    r14d
   14002cca4:	cmp    r13d,r15d
   14002cca7:	jb     0x14002cc1d
   14002ccad:	mov    esi,DWORD PTR [rsp+0x60]
   14002ccb1:	mov    rcx,QWORD PTR [rbx+0x21340]
   14002ccb8:	call   0x140047214
   14002ccbd:	test   r14d,r14d
   14002ccc0:	je     0x14002ccf3
   14002ccc2:	lea    r13,[rbx+0x21358]
   14002ccc9:	mov    esi,0x1
   14002ccce:	mov    rdx,QWORD PTR [r13+0x0]
   14002ccd2:	lea    rcx,[rbx+0x21490]
   14002ccd9:	mov    r8d,DWORD PTR [rdx+0x18]
   14002ccdd:	mov    rdx,QWORD PTR [rdx+0x10]
   14002cce1:	call   0x14002f584
   14002cce6:	lea    r13,[r13+0x8]
   14002ccea:	sub    r14,rsi
   14002cced:	jne    0x14002ccce
   14002ccef:	mov    esi,DWORD PTR [rsp+0x60]
   14002ccf3:	add    r12d,r15d
   14002ccf6:	mov    edx,0x1
   14002ccfb:	cmp    r12d,esi
   14002ccfe:	jb     0x14002cbdf
   14002cd04:	lea    rdi,[rbx+0x1a638]
   14002cd0b:	mov    eax,DWORD PTR [rdi]
   14002cd0d:	mov    DWORD PTR [rbx+0x1c64c],eax
   14002cd13:	mov    rcx,rdi
   14002cd16:	mov    rbx,QWORD PTR [rsp+0x70]
   14002cd1b:	add    rsp,0x20
   14002cd1f:	pop    r15
   14002cd21:	pop    r14
   14002cd23:	pop    r13
   14002cd25:	pop    r12
   14002cd27:	pop    rdi
   14002cd28:	pop    rsi
   14002cd29:	pop    rbp
   14002cd2a:	jmp    0x140030df8
   14002cd2f:	int3   
   14002cd30:	mov    rax,rsp
   14002cd33:	mov    QWORD PTR [rax+0x8],rbx
   14002cd37:	mov    QWORD PTR [rax+0x10],rbp
   14002cd3b:	mov    QWORD PTR [rax+0x18],rsi
   14002cd3f:	mov    QWORD PTR [rax+0x20],rdi
   14002cd43:	push   r12
   14002cd45:	push   r14
   14002cd47:	push   r15
   14002cd49:	sub    rsp,0x20
   14002cd4d:	lea    r14,[rcx+0x1a638]
   14002cd54:	mov    rdi,rcx
   14002cd57:	mov    r12d,DWORD PTR [r14]
   14002cd5a:	xor    bpl,bpl
   14002cd5d:	mov    eax,DWORD PTR [rdi+0x1c64c]
   14002cd63:	cmp    DWORD PTR [r14],eax
   14002cd66:	je     0x14002cfa1
   14002cd6c:	mov    r9d,DWORD PTR [rdi+0x52c]
   14002cd73:	and    DWORD PTR [rdi+0x1c64c],r9d
   14002cd7a:	mov    r8d,DWORD PTR [rdi+0x1c64c]
   14002cd81:	mov    rbx,QWORD PTR [rdi+0x4f0]
   14002cd88:	and    DWORD PTR [rdi+0x548],0x0
   14002cd8f:	lea    ecx,[r8-0x1]
   14002cd93:	mov    r15b,BYTE PTR [r8+rbx*1]
   14002cd97:	and    rcx,r9
   14002cd9a:	cmp    r15b,BYTE PTR [rcx+rbx*1]
   14002cd9e:	jne    0x14002cde5
   14002cda0:	mov    DWORD PTR [rdi+0x54c],0x1
   14002cdaa:	lea    ecx,[r8+0x1]
   14002cdae:	jmp    0x14002cdc9
   14002cdb0:	mov    eax,DWORD PTR [rdi+0x54c]
   14002cdb6:	cmp    eax,0x100
   14002cdbb:	jge    0x14002cdd2
   14002cdbd:	inc    eax
   14002cdbf:	mov    DWORD PTR [rdi+0x54c],eax
   14002cdc5:	lea    ecx,[r8+rax*1]
   14002cdc9:	and    rcx,r9
   14002cdcc:	cmp    BYTE PTR [rcx+rbx*1],r15b
   14002cdd0:	je     0x14002cdb0
   14002cdd2:	cmp    DWORD PTR [rdi+0x54c],0x7
   14002cdd9:	jl     0x14002cde5
   14002cddb:	mov    DWORD PTR [rdi+0x548],0x1
   14002cde5:	test   r8b,0xf
   14002cde9:	je     0x14002cdf4
   14002cdeb:	test   bpl,bpl
   14002cdee:	je     0x14002ce83
   14002cdf4:	cmp    DWORD PTR [rdi+0x548],0x0
   14002cdfb:	jne    0x14002ce83
   14002ce01:	mov    rax,QWORD PTR [rdi+0x518]
   14002ce08:	mov    r10d,r8d
   14002ce0b:	mov    esi,DWORD PTR [rax+r8*4]
   14002ce0f:	sub    r10d,esi
   14002ce12:	and    r10d,r9d
   14002ce15:	je     0x14002ce83
   14002ce17:	mov    eax,DWORD PTR [r14]
   14002ce1a:	mov    ebp,0x101
   14002ce1f:	sub    eax,r8d
   14002ce22:	mov    rcx,r8
   14002ce25:	and    eax,r9d
   14002ce28:	cmp    eax,ebp
   14002ce2a:	cmovb  ebp,eax
   14002ce2d:	mov    eax,esi
   14002ce2f:	and    rax,r9
   14002ce32:	and    rcx,r9
   14002ce35:	xor    r11d,r11d
   14002ce38:	mov    al,BYTE PTR [rax+rbx*1]
   14002ce3b:	cmp    BYTE PTR [rcx+rbx*1],al
   14002ce3e:	jne    0x14002ce83
   14002ce40:	cmp    r11d,ebp
   14002ce43:	jae    0x14002ce5e
   14002ce45:	inc    r11d
   14002ce48:	lea    edx,[r11+rsi*1]
   14002ce4c:	and    rdx,r9
   14002ce4f:	lea    ecx,[r8+r11*1]
   14002ce53:	and    rcx,r9
   14002ce56:	mov    al,BYTE PTR [rdx+rbx*1]
   14002ce59:	cmp    BYTE PTR [rcx+rbx*1],al
   14002ce5c:	je     0x14002ce40
   14002ce5e:	cmp    r11d,0x80
   14002ce65:	jb     0x14002ce83
   14002ce67:	cmp    r10d,DWORD PTR [rdi+0x530]
   14002ce6e:	jae    0x14002ce83
   14002ce70:	test   r10d,r10d
   14002ce73:	je     0x14002ce83
   14002ce75:	mov    DWORD PTR [rdi+0x548],r10d
   14002ce7c:	mov    DWORD PTR [rdi+0x54c],r11d
   14002ce83:	mov    ecx,DWORD PTR [rdi+0x548]
   14002ce89:	test   ecx,ecx
   14002ce8b:	je     0x14002cf5b
   14002ce91:	mov    edx,DWORD PTR [rdi+0x54c]
   14002ce97:	mov    eax,r12d
   14002ce9a:	sub    eax,r8d
   14002ce9d:	and    eax,r9d
   14002cea0:	cmp    eax,edx
   14002cea2:	jbe    0x14002cf5b
   14002cea8:	cmp    BYTE PTR [rdi+0x1c651],0x0
   14002ceaf:	jne    0x14002ceba
   14002ceb1:	cmp    ecx,r8d
   14002ceb4:	ja     0x14002cf5b
   14002ceba:	lea    eax,[rdx+r8*1]
   14002cebe:	mov    edx,DWORD PTR [rdi+0x21334]
   14002cec4:	and    eax,r9d
   14002cec7:	lea    rbx,[rdi+0x1c668]
   14002cece:	mov    rcx,rbx
   14002ced1:	mov    DWORD PTR [rdi+0x1c64c],eax
   14002ced7:	call   0x14004ac2c
   14002cedc:	cmp    DWORD PTR [rdi+0x548],0x1
   14002cee3:	mov    rcx,rbx
   14002cee6:	jne    0x14002cefd
   14002cee8:	mov    edx,0x5
   14002ceed:	call   0x14004ac2c
   14002cef2:	mov    edx,DWORD PTR [rdi+0x54c]
   14002cef8:	sub    edx,0x4
   14002cefb:	jmp    0x14002cf4b
   14002cefd:	mov    edx,0x4
   14002cf02:	call   0x14004ac2c
   14002cf07:	add    DWORD PTR [rdi+0x548],0xfffffffe
   14002cf0e:	mov    rcx,rbx
   14002cf11:	mov    edx,DWORD PTR [rdi+0x548]
   14002cf17:	shr    edx,0x10
   14002cf1a:	call   0x14004ac2c
   14002cf1f:	mov    eax,DWORD PTR [rdi+0x548]
   14002cf25:	mov    rcx,rbx
   14002cf28:	shr    eax,0x8
   14002cf2b:	movzx  edx,al
   14002cf2e:	call   0x14004ac2c
   14002cf33:	movzx  edx,BYTE PTR [rdi+0x548]
   14002cf3a:	mov    rcx,rbx
   14002cf3d:	call   0x14004ac2c
   14002cf42:	mov    edx,DWORD PTR [rdi+0x54c]
   14002cf48:	sub    edx,0x20
   14002cf4b:	mov    rcx,rbx
   14002cf4e:	call   0x14004ac2c
   14002cf53:	mov    bpl,0x1
   14002cf56:	jmp    0x14002cd5d
   14002cf5b:	movzx  ebx,r15b
   14002cf5f:	lea    rsi,[rdi+0x1c668]
   14002cf66:	mov    edx,ebx
   14002cf68:	mov    rcx,rsi
   14002cf6b:	xor    bpl,bpl
   14002cf6e:	call   0x14004ac2c
   14002cf73:	cmp    ebx,DWORD PTR [rdi+0x21334]
   14002cf79:	jne    0x14002cf88
   14002cf7b:	mov    edx,0x1
   14002cf80:	mov    rcx,rsi
   14002cf83:	call   0x14004ac2c
   14002cf88:	mov    eax,DWORD PTR [rdi+0x1c64c]
   14002cf8e:	inc    eax
   14002cf90:	and    eax,DWORD PTR [rdi+0x52c]
   14002cf96:	mov    DWORD PTR [rdi+0x1c64c],eax
   14002cf9c:	jmp    0x14002cd5d
   14002cfa1:	mov    rcx,r14
   14002cfa4:	mov    rbx,QWORD PTR [rsp+0x40]
   14002cfa9:	mov    rbp,QWORD PTR [rsp+0x48]
   14002cfae:	mov    rsi,QWORD PTR [rsp+0x50]
   14002cfb3:	mov    rdi,QWORD PTR [rsp+0x58]
   14002cfb8:	add    rsp,0x20
   14002cfbc:	pop    r15
   14002cfbe:	pop    r14
   14002cfc0:	pop    r12
   14002cfc2:	jmp    0x140030df8
   14002cfc7:	int3   
   14002cfc8:	mov    QWORD PTR [rsp+0x8],rbx
   14002cfcd:	mov    QWORD PTR [rsp+0x10],rbp
   14002cfd2:	mov    QWORD PTR [rsp+0x18],rsi
   14002cfd7:	push   rdi
   14002cfd8:	push   r14
   14002cfda:	push   r15
   14002cfdc:	sub    rsp,0x20
   14002cfe0:	lea    rsi,[rcx+0x21490]
   14002cfe7:	mov    rdi,rcx
   14002cfea:	mov    rcx,rsi
   14002cfed:	mov    r14,r9
   14002cff0:	mov    ebp,r8d
   14002cff3:	mov    bl,dl
   14002cff5:	call   0x140011dd0
   14002cffa:	mov    r10d,DWORD PTR [rsi+0x1c]
   14002cffe:	xor    r15d,r15d
   14002d001:	mov    rax,QWORD PTR [rsi+0x10]
   14002d005:	mov    BYTE PTR [rax+r10*8],0x5
   14002d00a:	mov    BYTE PTR [rax+r10*8+0x4],r15b
   14002d00f:	inc    DWORD PTR [rsi+0x1c]
   14002d012:	mov    eax,DWORD PTR [rsi+0x1c]
   14002d015:	cmp    eax,DWORD PTR [rsi+0x18]
   14002d018:	jb     0x14002d022
   14002d01a:	mov    rcx,rsi
   14002d01d:	call   0x1400118dc
   14002d022:	mov    DWORD PTR [rdi+0x538],ebp
   14002d028:	test   bl,bl
   14002d02a:	jne    0x14002d036
   14002d02c:	mov    dl,0x1
   14002d02e:	mov    rcx,rdi
   14002d031:	call   0x14002eb38
   14002d036:	mov    r8d,ebp
   14002d039:	mov    dl,bl
   14002d03b:	mov    rcx,rdi
   14002d03e:	call   0x14002d150
   14002d043:	test   r14,r14
   14002d046:	je     0x14002d08d
   14002d048:	mov    rdx,r14
   14002d04b:	mov    rcx,rdi
   14002d04e:	call   0x1400306f8
   14002d053:	mov    eax,DWORD PTR [r14+0x58]
   14002d057:	mov    edx,0x3f
   14002d05c:	cmp    eax,0x2
   14002d05f:	mov    DWORD PTR [rdi+0x21338],eax
   14002d065:	mov    ecx,DWORD PTR [r14+0x5c]
   14002d069:	cmovl  eax,r15d
   14002d06d:	cmp    eax,edx
   14002d06f:	cmovg  eax,edx
   14002d072:	cmp    ecx,0x1
   14002d075:	mov    DWORD PTR [rdi+0x21338],eax
   14002d07b:	lea    eax,[rdx+0x41]
   14002d07e:	cmovl  ecx,r15d
   14002d082:	cmp    ecx,eax
   14002d084:	cmovg  ecx,eax
   14002d087:	mov    DWORD PTR [rdi+0x2133c],ecx
   14002d08d:	mov    eax,DWORD PTR [rdi+0x1c64c]
   14002d093:	mov    DWORD PTR [rdi+0x534],eax
   14002d099:	test   bl,bl
   14002d09b:	je     0x14002d0a9
   14002d09d:	mov    dl,r15b
   14002d0a0:	cmp    BYTE PTR [rdi+0x1c650],r15b
   14002d0a7:	jne    0x14002d0ab
   14002d0a9:	mov    dl,0x1
   14002d0ab:	mov    rcx,rdi
   14002d0ae:	call   0x14002f604
   14002d0b3:	test   eax,eax
   14002d0b5:	je     0x14002d0c2
   14002d0b7:	movzx  edx,bl
   14002d0ba:	mov    rcx,rdi
   14002d0bd:	call   0x14002eeec
   14002d0c2:	cmp    DWORD PTR [rdi+0x544],0x2
   14002d0c9:	jne    0x14002d0f7
   14002d0cb:	mov    edx,DWORD PTR [rdi+0x21334]
   14002d0d1:	lea    rbx,[rdi+0x1c668]
   14002d0d8:	mov    rcx,rbx
   14002d0db:	call   0x14004ac2c
   14002d0e0:	mov    edx,0x2
   14002d0e5:	mov    rcx,rbx
   14002d0e8:	call   0x14004ac2c
   14002d0ed:	xor    edx,edx
   14002d0ef:	mov    rcx,rbx
   14002d0f2:	call   0x14004ae6c
   14002d0f7:	mov    rcx,QWORD PTR [rdi+0x1c660]
   14002d0fe:	call   0x140037258
   14002d103:	mov    ecx,DWORD PTR [rsi+0x1c]
   14002d106:	mov    rax,QWORD PTR [rsi+0x10]
   14002d10a:	mov    BYTE PTR [rax+rcx*8],0x6
   14002d10e:	mov    BYTE PTR [rax+rcx*8+0x4],r15b
   14002d113:	inc    DWORD PTR [rsi+0x1c]
   14002d116:	mov    eax,DWORD PTR [rsi+0x1c]
   14002d119:	cmp    eax,DWORD PTR [rsi+0x18]
   14002d11c:	jb     0x14002d126
   14002d11e:	mov    rcx,rsi
   14002d121:	call   0x1400118dc
   14002d126:	cmp    DWORD PTR [rdi+0x544],0x1
   14002d12d:	je     0x14002d137
   14002d12f:	mov    rcx,rsi
   14002d132:	call   0x1400118dc
   14002d137:	mov    rbx,QWORD PTR [rsp+0x40]
   14002d13c:	mov    rbp,QWORD PTR [rsp+0x48]
   14002d141:	mov    rsi,QWORD PTR [rsp+0x50]
   14002d146:	add    rsp,0x20
   14002d14a:	pop    r15
   14002d14c:	pop    r14
   14002d14e:	pop    rdi
   14002d14f:	ret    
   14002d150:	mov    QWORD PTR [rsp+0x8],rbx
   14002d155:	mov    QWORD PTR [rsp+0x10],rsi
   14002d15a:	push   rdi
   14002d15b:	sub    rsp,0x20
   14002d15f:	xor    esi,esi
   14002d161:	mov    dil,dl
   14002d164:	mov    rbx,rcx
   14002d167:	test   dl,dl
   14002d169:	jne    0x14002d1a3
   14002d16b:	mov    WORD PTR [rcx+0x1c650],si
   14002d172:	mov    DWORD PTR [rcx+0x534],esi
   14002d178:	mov    DWORD PTR [rcx+0x1c64c],esi
   14002d17e:	mov    BYTE PTR [rcx+0x21330],0x1
   14002d185:	mov    DWORD PTR [rcx+0x21334],0x2
   14002d18f:	mov    QWORD PTR [rcx+0x1a5d8],rsi
   14002d196:	mov    BYTE PTR [rcx+0x1a5e0],0x1
   14002d19d:	mov    DWORD PTR [rcx+0x21350],esi
   14002d1a3:	mov    edx,DWORD PTR [rbx+0x52c]
   14002d1a9:	lea    rcx,[rip+0x546f8]        # 0x1400818a8
   14002d1b0:	movsxd rax,r8d
   14002d1b3:	mov    DWORD PTR [rbx+0x544],esi
   14002d1b9:	mov    QWORD PTR [rbx+0x1c658],rsi
   14002d1c0:	mov    DWORD PTR [rbx+0x1a5f8],esi
   14002d1c6:	mov    ecx,DWORD PTR [rcx+rax*4]
   14002d1c9:	mov    DWORD PTR [rbx+0x53c],ecx
   14002d1cf:	shr    ecx,0x2
   14002d1d2:	mov    DWORD PTR [rbx+0x540],ecx
   14002d1d8:	lea    rcx,[rbx+0x1a638]
   14002d1df:	call   0x140030e60
   14002d1e4:	mov    dl,dil
   14002d1e7:	mov    rcx,rbx
   14002d1ea:	call   0x14002b3e4
   14002d1ef:	mov    QWORD PTR [rbx+0x21338],rsi
   14002d1f6:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d1fb:	mov    rsi,QWORD PTR [rsp+0x38]
   14002d200:	add    rsp,0x20
   14002d204:	pop    rdi
   14002d205:	ret    
   14002d206:	int3   
   14002d207:	int3   
   14002d208:	rex push rbp
   14002d20a:	push   rbx
   14002d20b:	push   rsi
   14002d20c:	push   rdi
   14002d20d:	push   r12
   14002d20f:	push   r13
   14002d211:	push   r14
   14002d213:	push   r15
   14002d215:	lea    rbp,[rsp-0xf]
   14002d21a:	sub    rsp,0x88
   14002d221:	mov    rax,QWORD PTR [rip+0x54cb8]        # 0x140081ee0
   14002d228:	xor    rax,rsp
   14002d22b:	mov    QWORD PTR [rbp-0x1],rax
   14002d22f:	and    DWORD PTR [r9+0x44],0x0
   14002d234:	lea    rax,[rip+0x54445]        # 0x140081680
   14002d23b:	mov    QWORD PTR [r9+0x28],rax
   14002d23f:	mov    rbx,rcx
   14002d242:	mov    eax,DWORD PTR [rbp+0x77]
   14002d245:	xor    ecx,ecx
   14002d247:	movsxd rsi,r8d
   14002d24a:	mov    r14d,0x1
   14002d250:	mov    DWORD PTR [r9],0x4
   14002d257:	mov    r13,rdx
   14002d25a:	mov    DWORD PTR [r9+0x30],0xd8
   14002d262:	mov    r15,rsi
   14002d265:	mov    DWORD PTR [r9+0x48],esi
   14002d269:	mov    QWORD PTR [r9+0x50],rdx
   14002d26d:	mov    BYTE PTR [r9+0x4],r14b
   14002d271:	mov    DWORD PTR [r9+0x8],eax
   14002d275:	mov    DWORD PTR [rbp-0x59],ecx
   14002d278:	test   eax,eax
   14002d27a:	jle    0x14002d493
   14002d280:	xor    edi,edi
   14002d282:	movsxd rdx,eax
   14002d285:	and    QWORD PTR [rbp-0x41],rcx
   14002d289:	lea    r9,[rbx+0x1a638]
   14002d290:	mov    QWORD PTR [rbp-0x39],rdi
   14002d294:	mov    r12d,eax
   14002d297:	mov    QWORD PTR [rbp-0x29],rdx
   14002d29b:	mov    QWORD PTR [rbp-0x31],rax
   14002d29f:	mov    edx,DWORD PTR [rbp+0x7f]
   14002d2a2:	mov    r8d,0x4
   14002d2a8:	add    edx,ecx
   14002d2aa:	mov    rcx,r9
   14002d2ad:	call   0x140030d90
   14002d2b2:	and    DWORD PTR [rbp-0x51],0x0
   14002d2b6:	xor    r8d,r8d
   14002d2b9:	xor    eax,eax
   14002d2bb:	mov    QWORD PTR [rbp-0x21],r8
   14002d2bf:	and    DWORD PTR [rbp-0x55],eax
   14002d2c2:	xor    ecx,ecx
   14002d2c4:	xor    edx,edx
   14002d2c6:	mov    DWORD PTR [rbp-0x4d],ecx
   14002d2c9:	xor    r9d,r9d
   14002d2cc:	mov    QWORD PTR [rbp-0x19],r8
   14002d2d0:	xor    r10d,r10d
   14002d2d3:	mov    QWORD PTR [rbp-0x11],r8
   14002d2d7:	xor    r11d,r11d
   14002d2da:	mov    DWORD PTR [rbp-0x9],r8d
   14002d2de:	mov    r14,rdi
   14002d2e1:	cmp    rdi,r15
   14002d2e4:	jge    0x14002d46c
   14002d2ea:	mov    esi,DWORD PTR [rbp-0x55]
   14002d2ed:	mov    edi,DWORD PTR [rbp-0x59]
   14002d2f0:	mov    r8d,eax
   14002d2f3:	mov    DWORD PTR [rbp-0x59],ecx
   14002d2f6:	mov    r12d,ecx
   14002d2f9:	inc    edi
   14002d2fb:	mov    ecx,eax
   14002d2fd:	sub    r12d,edx
   14002d300:	movzx  edx,BYTE PTR [r14+r13*1]
   14002d305:	mov    eax,r10d
   14002d308:	imul   eax,r12d
   14002d30c:	imul   ecx,r11d
   14002d310:	mov    DWORD PTR [rbp-0x55],r12d
   14002d314:	mov    r12,QWORD PTR [rbp-0x41]
   14002d318:	add    ecx,eax
   14002d31a:	mov    eax,r9d
   14002d31d:	imul   eax,DWORD PTR [rbp-0x4d]
   14002d321:	add    ecx,eax
   14002d323:	mov    eax,DWORD PTR [rbp-0x51]
   14002d326:	lea    eax,[rcx+rax*8]
   14002d329:	shr    eax,0x3
   14002d32c:	movzx  ecx,al
   14002d32f:	mov    rax,QWORD PTR [rbx+0x1a5e8]
   14002d336:	sub    ecx,edx
   14002d338:	mov    BYTE PTR [r12+rax*1],cl
   14002d33c:	mov    al,dl
   14002d33e:	sub    al,BYTE PTR [rbp-0x51]
   14002d341:	inc    r12
   14002d344:	mov    DWORD PTR [rbp-0x51],edx
   14002d347:	mov    QWORD PTR [rbp-0x41],r12
   14002d34b:	movsx  r12d,al
   14002d34f:	mov    DWORD PTR [rbp-0x4d],r12d
   14002d353:	mov    r12d,DWORD PTR [rbp-0x21]
   14002d357:	movsx  ecx,cl
   14002d35a:	shl    ecx,0x3
   14002d35d:	mov    eax,ecx
   14002d35f:	cdq    
   14002d360:	xor    eax,edx
   14002d362:	sub    eax,edx
   14002d364:	add    r12d,eax
   14002d367:	mov    eax,ecx
   14002d369:	sub    eax,DWORD PTR [rbp-0x59]
   14002d36c:	cdq    
   14002d36d:	mov    DWORD PTR [rbp-0x21],r12d
   14002d371:	xor    eax,edx
   14002d373:	sub    eax,edx
   14002d375:	add    DWORD PTR [rbp-0x1d],eax
   14002d378:	mov    eax,DWORD PTR [rbp-0x59]
   14002d37b:	add    eax,ecx
   14002d37d:	cdq    
   14002d37e:	xor    eax,edx
   14002d380:	sub    eax,edx
   14002d382:	add    DWORD PTR [rbp-0x19],eax
   14002d385:	mov    eax,ecx
   14002d387:	sub    eax,DWORD PTR [rbp-0x55]
   14002d38a:	cdq    
   14002d38b:	xor    eax,edx
   14002d38d:	sub    eax,edx
   14002d38f:	add    DWORD PTR [rbp-0x15],eax
   14002d392:	mov    eax,DWORD PTR [rbp-0x55]
   14002d395:	add    eax,ecx
   14002d397:	cdq    
   14002d398:	xor    eax,edx
   14002d39a:	sub    eax,edx
   14002d39c:	add    DWORD PTR [rbp-0x11],eax
   14002d39f:	mov    eax,ecx
   14002d3a1:	sub    eax,r8d
   14002d3a4:	cdq    
   14002d3a5:	xor    eax,edx
   14002d3a7:	sub    eax,edx
   14002d3a9:	add    DWORD PTR [rbp-0xd],eax
   14002d3ac:	lea    eax,[rcx+r8*1]
   14002d3b0:	cdq    
   14002d3b1:	xor    eax,edx
   14002d3b3:	sub    eax,edx
   14002d3b5:	add    DWORD PTR [rbp-0x9],eax
   14002d3b8:	test   sil,0x1f
   14002d3bc:	jne    0x14002d449
   14002d3c2:	xor    ecx,ecx
   14002d3c4:	lea    r8,[rbp-0x1d]
   14002d3c8:	and    DWORD PTR [rbp-0x21],ecx
   14002d3cb:	lea    edx,[rcx+0x1]
   14002d3ce:	cmp    DWORD PTR [r8],r12d
   14002d3d1:	jae    0x14002d3d8
   14002d3d3:	mov    r12d,DWORD PTR [r8]
   14002d3d6:	mov    ecx,edx
   14002d3d8:	and    DWORD PTR [r8],0x0
   14002d3dc:	inc    edx
   14002d3de:	movsxd rax,edx
   14002d3e1:	add    r8,0x4
   14002d3e5:	cmp    rax,0x7
   14002d3e9:	jb     0x14002d3ce
   14002d3eb:	sub    ecx,0x1
   14002d3ee:	je     0x14002d440
   14002d3f0:	sub    ecx,0x1
   14002d3f3:	je     0x14002d435
   14002d3f5:	sub    ecx,0x1
   14002d3f8:	je     0x14002d42a
   14002d3fa:	sub    ecx,0x1
   14002d3fd:	je     0x14002d41f
   14002d3ff:	sub    ecx,0x1
   14002d402:	je     0x14002d414
   14002d404:	cmp    ecx,0x1
   14002d407:	jne    0x14002d449
   14002d409:	cmp    r11d,0x10
   14002d40d:	jge    0x14002d449
   14002d40f:	inc    r11d
   14002d412:	jmp    0x14002d449
   14002d414:	cmp    r11d,0xfffffff0
   14002d418:	jl     0x14002d449
   14002d41a:	dec    r11d
   14002d41d:	jmp    0x14002d449
   14002d41f:	cmp    r10d,0x10
   14002d423:	jge    0x14002d449
   14002d425:	inc    r10d
   14002d428:	jmp    0x14002d449
   14002d42a:	cmp    r10d,0xfffffff0
   14002d42e:	jl     0x14002d449
   14002d430:	dec    r10d
   14002d433:	jmp    0x14002d449
   14002d435:	cmp    r9d,0x10
   14002d439:	jge    0x14002d449
   14002d43b:	inc    r9d
   14002d43e:	jmp    0x14002d449
   14002d440:	cmp    r9d,0xfffffff0
   14002d444:	jl     0x14002d449
   14002d446:	dec    r9d
   14002d449:	add    r14,QWORD PTR [rbp-0x29]
   14002d44d:	inc    esi
   14002d44f:	mov    eax,DWORD PTR [rbp-0x55]
   14002d452:	mov    ecx,DWORD PTR [rbp-0x4d]
   14002d455:	mov    edx,DWORD PTR [rbp-0x59]
   14002d458:	cmp    r14,r15
   14002d45b:	jl     0x14002d2f0
   14002d461:	mov    r12,QWORD PTR [rbp-0x31]
   14002d465:	mov    DWORD PTR [rbp-0x59],edi
   14002d468:	mov    rdi,QWORD PTR [rbp-0x39]
   14002d46c:	mov    ecx,DWORD PTR [rbp-0x59]
   14002d46f:	lea    r9,[rbx+0x1a638]
   14002d476:	mov    r14d,0x1
   14002d47c:	add    rdi,r14
   14002d47f:	sub    r12,r14
   14002d482:	mov    QWORD PTR [rbp-0x39],rdi
   14002d486:	mov    QWORD PTR [rbp-0x31],r12
   14002d48a:	jne    0x14002d29f
   14002d490:	mov    esi,r15d
   14002d493:	mov    rdx,QWORD PTR [rbx+0x1a5e8]
   14002d49a:	mov    r8,r15
   14002d49d:	mov    rcx,r13
   14002d4a0:	call   0x140059180
   14002d4a5:	cmp    DWORD PTR [rbx+0x544],0x2
   14002d4ac:	lea    rcx,[rbx+0x1a638]
   14002d4b3:	mov    edx,DWORD PTR [rbp+0x7f]
   14002d4b6:	mov    r8d,0x3
   14002d4bc:	cmove  r8d,r14d
   14002d4c0:	add    edx,esi
   14002d4c2:	call   0x140030d90
   14002d4c7:	mov    rcx,QWORD PTR [rbp-0x1]
   14002d4cb:	xor    rcx,rsp
   14002d4ce:	call   0x140055f90
   14002d4d3:	add    rsp,0x88
   14002d4da:	pop    r15
   14002d4dc:	pop    r14
   14002d4de:	pop    r13
   14002d4e0:	pop    r12
   14002d4e2:	pop    rdi
   14002d4e3:	pop    rsi
   14002d4e4:	pop    rbx
   14002d4e5:	pop    rbp
   14002d4e6:	ret    
   14002d4e7:	int3   
   14002d4e8:	mov    QWORD PTR [rsp+0x10],rbx
   14002d4ed:	mov    DWORD PTR [rsp+0x18],r8d
   14002d4f2:	push   rbp
   14002d4f3:	push   rsi
   14002d4f4:	push   rdi
   14002d4f5:	push   r12
   14002d4f7:	push   r13
   14002d4f9:	push   r14
   14002d4fb:	push   r15
   14002d4fd:	sub    rsp,0x20
   14002d501:	mov    r10d,DWORD PTR [rsp+0x80]
   14002d509:	lea    rax,[rip+0x542e8]        # 0x1400817f8
   14002d510:	and    DWORD PTR [r9],0x0
   14002d514:	mov    r15,rdx
   14002d517:	and    DWORD PTR [r9+0x44],0x0
   14002d51c:	mov    rdi,rcx
   14002d51f:	mov    QWORD PTR [r9+0x28],rax
   14002d523:	mov    QWORD PTR [r9+0x50],rdx
   14002d527:	movsxd r12,r8d
   14002d52a:	mov    eax,r12d
   14002d52d:	mov    DWORD PTR [r9+0x30],0x1d
   14002d535:	cdq    
   14002d536:	mov    DWORD PTR [r9+0x48],r12d
   14002d53a:	idiv   r10d
   14002d53d:	mov    BYTE PTR [r9+0x4],0x1
   14002d542:	mov    rsi,r12
   14002d545:	cmp    eax,0x1d00
   14002d54a:	mov    DWORD PTR [r9+0x8],r10d
   14002d54e:	setg   r14b
   14002d552:	xor    r9d,r9d
   14002d555:	mov    DWORD PTR [rsp+0x80],r9d
   14002d55d:	test   r10d,r10d
   14002d560:	jle    0x14002d5ea
   14002d566:	mov    r12d,DWORD PTR [rsp+0x88]
   14002d56e:	xor    ebx,ebx
   14002d570:	movsxd r11,r10d
   14002d573:	xor    r13d,r13d
   14002d576:	mov    QWORD PTR [rsp+0x60],r11
   14002d57b:	mov    ebp,r10d
   14002d57e:	test   r14b,r14b
   14002d581:	je     0x14002d5a6
   14002d583:	lea    edx,[r9+r12*1]
   14002d587:	mov    r8d,0x5
   14002d58d:	lea    rcx,[rdi+0x1a638]
   14002d594:	call   0x140030d90
   14002d599:	mov    r9d,DWORD PTR [rsp+0x80]
   14002d5a1:	mov    r11,QWORD PTR [rsp+0x60]
   14002d5a6:	xor    r8b,r8b
   14002d5a9:	mov    rdx,rbx
   14002d5ac:	cmp    rbx,rsi
   14002d5af:	jge    0x14002d5dc
   14002d5b1:	mov    cl,BYTE PTR [rdx+r15*1]
   14002d5b5:	inc    r9d
   14002d5b8:	mov    rax,QWORD PTR [rdi+0x1a5e8]
   14002d5bf:	sub    r8b,cl
   14002d5c2:	add    rdx,r11
   14002d5c5:	mov    BYTE PTR [rax+r13*1],r8b
   14002d5c9:	inc    r13
   14002d5cc:	mov    r8b,cl
   14002d5cf:	cmp    rdx,rsi
   14002d5d2:	jl     0x14002d5b1
   14002d5d4:	mov    DWORD PTR [rsp+0x80],r9d
   14002d5dc:	inc    rbx
   14002d5df:	sub    rbp,0x1
   14002d5e3:	jne    0x14002d57e
   14002d5e5:	mov    r12d,DWORD PTR [rsp+0x70]
   14002d5ea:	test   r14b,r14b
   14002d5ed:	je     0x14002d60b
   14002d5ef:	mov    edx,DWORD PTR [rsp+0x88]
   14002d5f6:	lea    rcx,[rdi+0x1a638]
   14002d5fd:	add    edx,r12d
   14002d600:	mov    r8d,0x5
   14002d606:	call   0x140030d90
   14002d60b:	mov    rdx,QWORD PTR [rdi+0x1a5e8]
   14002d612:	mov    r8,rsi
   14002d615:	mov    rcx,r15
   14002d618:	mov    rbx,QWORD PTR [rsp+0x68]
   14002d61d:	add    rsp,0x20
   14002d621:	pop    r15
   14002d623:	pop    r14
   14002d625:	pop    r13
   14002d627:	pop    r12
   14002d629:	pop    rdi
   14002d62a:	pop    rsi
   14002d62b:	pop    rbp
   14002d62c:	jmp    0x140059180
   14002d631:	int3   
   14002d632:	int3   
   14002d633:	int3   
   14002d634:	xor    ecx,ecx
   14002d636:	cmp    BYTE PTR [rsp+0x30],cl
   14002d63a:	je     0x14002d654
   14002d63c:	mov    DWORD PTR [r9],0x2
   14002d643:	lea    rax,[rip+0x53fee]        # 0x140081638
   14002d64a:	mov    DWORD PTR [r9+0x30],0x39
   14002d652:	jmp    0x14002d66a
   14002d654:	mov    DWORD PTR [r9],0x1
   14002d65b:	lea    rax,[rip+0x53f9e]        # 0x140081600
   14002d662:	mov    DWORD PTR [r9+0x30],0x35
   14002d66a:	cmp    BYTE PTR [rsp+0x30],cl
   14002d66e:	lea    r11d,[r8-0x4]
   14002d672:	mov    QWORD PTR [r9+0x28],rax
   14002d676:	setne  r10b
   14002d67a:	mov    BYTE PTR [r9+0x4],cl
   14002d67e:	add    r10b,0xe8
   14002d682:	mov    DWORD PTR [r9+0x44],ecx
   14002d686:	mov    DWORD PTR [r9+0x48],r8d
   14002d68a:	mov    QWORD PTR [r9+0x50],rdx
   14002d68e:	test   r11d,r11d
   14002d691:	jle    0x14002d71d
   14002d697:	mov    al,BYTE PTR [rdx]
   14002d699:	inc    ecx
   14002d69b:	inc    rdx
   14002d69e:	cmp    al,0xe8
   14002d6a0:	je     0x14002d6a7
   14002d6a2:	cmp    al,r10b
   14002d6a5:	jne    0x14002d714
   14002d6a7:	movzx  eax,BYTE PTR [rdx+0x2]
   14002d6ab:	movzx  r9d,BYTE PTR [rdx+0x3]
   14002d6b0:	shl    r9d,0x8
   14002d6b4:	or     r9d,eax
   14002d6b7:	movzx  eax,BYTE PTR [rdx+0x1]
   14002d6bb:	shl    r9d,0x8
   14002d6bf:	or     r9d,eax
   14002d6c2:	movzx  eax,BYTE PTR [rdx]
   14002d6c5:	shl    r9d,0x8
   14002d6c9:	or     r9d,eax
   14002d6cc:	lea    r8d,[r9+rcx*1]
   14002d6d0:	add    r8d,DWORD PTR [rsp+0x28]
   14002d6d5:	js     0x14002d70d
   14002d6d7:	cmp    r9d,0x1000000
   14002d6de:	jge    0x14002d70d
   14002d6e0:	cmp    r8d,0x1000000
   14002d6e7:	jl     0x14002d6f0
   14002d6e9:	lea    r8d,[r9-0x1000000]
   14002d6f0:	mov    eax,r8d
   14002d6f3:	mov    BYTE PTR [rdx],r8b
   14002d6f6:	sar    eax,0x8
   14002d6f9:	mov    BYTE PTR [rdx+0x1],al
   14002d6fc:	mov    eax,r8d
   14002d6ff:	sar    eax,0x10
   14002d702:	sar    r8d,0x18
   14002d706:	mov    BYTE PTR [rdx+0x3],r8b
   14002d70a:	mov    BYTE PTR [rdx+0x2],al
   14002d70d:	add    rdx,0x4
   14002d711:	add    ecx,0x4
   14002d714:	cmp    ecx,r11d
   14002d717:	jl     0x14002d697
   14002d71d:	ret    
   14002d71e:	int3   
   14002d71f:	int3   
   14002d720:	mov    rax,rsp
   14002d723:	mov    QWORD PTR [rax+0x8],rbx
   14002d727:	mov    QWORD PTR [rax+0x10],rbp
   14002d72b:	mov    QWORD PTR [rax+0x18],rsi
   14002d72f:	mov    QWORD PTR [rax+0x20],rdi
   14002d733:	push   r12
   14002d735:	push   r14
   14002d737:	push   r15
   14002d739:	sub    rsp,0x30
   14002d73d:	mov    edi,DWORD PTR [rsp+0x70]
   14002d741:	lea    rax,[rip+0x540d8]        # 0x140081820
   14002d748:	and    DWORD PTR [r9+0x44],0x0
   14002d74d:	mov    rbx,rdx
   14002d750:	mov    QWORD PTR [r9+0x28],rax
   14002d754:	mov    r12,rcx
   14002d757:	lea    eax,[r8-0x15]
   14002d75b:	shr    edi,0x4
   14002d75e:	mov    DWORD PTR [r9],0x6
   14002d765:	mov    DWORD PTR [r9+0x30],0x78
   14002d76d:	mov    BYTE PTR [r9+0x4],0x0
   14002d772:	mov    DWORD PTR [r9+0x48],r8d
   14002d776:	mov    QWORD PTR [r9+0x50],rdx
   14002d77a:	test   eax,eax
   14002d77c:	jle    0x14002d8a8
   14002d782:	lea    r14d,[rax-0x1]
   14002d786:	shr    r14d,0x4
   14002d78a:	inc    r14d
   14002d78d:	movzx  eax,BYTE PTR [rbx]
   14002d790:	and    eax,0x1f
   14002d793:	sub    eax,0x10
   14002d796:	js     0x14002d898
   14002d79c:	cdqe   
   14002d79e:	lea    rcx,[rip+0x540f3]        # 0x140081898
   14002d7a5:	cmp    BYTE PTR [rax+rcx*1],0x0
   14002d7a9:	je     0x14002d898
   14002d7af:	movzx  r15d,BYTE PTR [rax+rcx*1]
   14002d7b4:	xor    ebp,ebp
   14002d7b6:	lea    esi,[rbp+0x12]
   14002d7b9:	bt     r15d,ebp
   14002d7bd:	jae    0x14002d88a
   14002d7c3:	lea    r11d,[rsi+0x18]
   14002d7c7:	mov    eax,r11d
   14002d7ca:	and    r11d,0x7
   14002d7ce:	cdq    
   14002d7cf:	and    edx,0x7
   14002d7d2:	add    eax,edx
   14002d7d4:	sar    eax,0x3
   14002d7d7:	movsxd rcx,eax
   14002d7da:	inc    eax
   14002d7dc:	movzx  r10d,BYTE PTR [rcx+rbx*1]
   14002d7e1:	movsxd rcx,eax
   14002d7e4:	inc    eax
   14002d7e6:	movzx  edx,BYTE PTR [rcx+rbx*1]
   14002d7ea:	mov    cl,r11b
   14002d7ed:	shl    edx,0x8
   14002d7f0:	or     r10d,edx
   14002d7f3:	lea    edx,[rax+0x1]
   14002d7f6:	movsxd r8,edx
   14002d7f9:	cdqe   
   14002d7fb:	movzx  r9d,BYTE PTR [r8+rbx*1]
   14002d800:	movzx  edx,BYTE PTR [rax+rbx*1]
   14002d804:	shl    r9d,0x8
   14002d808:	or     r9d,edx
   14002d80b:	shl    r9d,0x10
   14002d80f:	or     r9d,r10d
   14002d812:	shr    r9d,cl
   14002d815:	and    r9d,0xf
   14002d819:	cmp    r9b,0x5
   14002d81d:	jne    0x14002d88a
   14002d81f:	mov    eax,esi
   14002d821:	mov    DWORD PTR [rsp+0x20],0x14
   14002d829:	cdq    
   14002d82a:	and    edx,0x7
   14002d82d:	add    eax,edx
   14002d82f:	sar    eax,0x3
   14002d832:	movsxd rcx,eax
   14002d835:	inc    eax
   14002d837:	movzx  r9d,BYTE PTR [rcx+rbx*1]
   14002d83c:	movsxd rcx,eax
   14002d83f:	inc    eax
   14002d841:	movzx  edx,BYTE PTR [rcx+rbx*1]
   14002d845:	lea    ecx,[rax+0x1]
   14002d848:	shl    edx,0x8
   14002d84b:	or     r9d,edx
   14002d84e:	cdqe   
   14002d850:	movsxd rdx,ecx
   14002d853:	movzx  ecx,BYTE PTR [rax+rbx*1]
   14002d857:	movzx  r8d,BYTE PTR [rdx+rbx*1]
   14002d85c:	mov    rdx,rbx
   14002d85f:	shl    r8d,0x8
   14002d863:	or     r8d,ecx
   14002d866:	mov    ecx,esi
   14002d868:	shl    r8d,0x10
   14002d86c:	and    ecx,0x7
   14002d86f:	or     r8d,r9d
   14002d872:	mov    r9d,esi
   14002d875:	shr    r8d,cl
   14002d878:	mov    rcx,r12
   14002d87b:	add    r8d,edi
   14002d87e:	and    r8d,0xfffff
   14002d885:	call   0x14002d8c8
   14002d88a:	inc    ebp
   14002d88c:	add    esi,0x29
   14002d88f:	cmp    esi,0x64
   14002d892:	jle    0x14002d7b9
   14002d898:	add    rbx,0x10
   14002d89c:	inc    edi
   14002d89e:	sub    r14,0x1
   14002d8a2:	jne    0x14002d78d
   14002d8a8:	mov    rbx,QWORD PTR [rsp+0x50]
   14002d8ad:	mov    rbp,QWORD PTR [rsp+0x58]
   14002d8b2:	mov    rsi,QWORD PTR [rsp+0x60]
   14002d8b7:	mov    rdi,QWORD PTR [rsp+0x68]
   14002d8bc:	add    rsp,0x30
   14002d8c0:	pop    r15
   14002d8c2:	pop    r14
   14002d8c4:	pop    r12
   14002d8c6:	ret    
   14002d8c7:	int3   
   14002d8c8:	mov    QWORD PTR [rsp+0x8],rbx
   14002d8cd:	mov    r11,rdx
   14002d8d0:	or     ebx,0xffffffff
   14002d8d3:	mov    ecx,0x20
   14002d8d8:	mov    eax,r9d
   14002d8db:	sub    ecx,DWORD PTR [rsp+0x28]
   14002d8df:	cdq    
   14002d8e0:	shr    ebx,cl
   14002d8e2:	and    edx,0x7
   14002d8e5:	add    eax,edx
   14002d8e7:	mov    r10d,r9d
   14002d8ea:	and    r10d,0x7
   14002d8ee:	sar    eax,0x3
   14002d8f1:	mov    ecx,r10d
   14002d8f4:	movsxd rdx,eax
   14002d8f7:	shl    ebx,cl
   14002d8f9:	shl    r8d,cl
   14002d8fc:	not    ebx
   14002d8fe:	add    rdx,r11
   14002d901:	mov    ecx,0x4
   14002d906:	mov    al,BYTE PTR [rdx]
   14002d908:	and    al,bl
   14002d90a:	shr    ebx,0x8
   14002d90d:	or     al,r8b
   14002d910:	or     ebx,0xff000000
   14002d916:	mov    BYTE PTR [rdx],al
   14002d918:	inc    rdx
   14002d91b:	shr    r8d,0x8
   14002d91f:	sub    rcx,0x1
   14002d923:	jne    0x14002d906
   14002d925:	mov    rbx,QWORD PTR [rsp+0x8]
   14002d92a:	ret    
   14002d92b:	int3   
   14002d92c:	mov    DWORD PTR [rsp+0x18],r8d
   14002d931:	mov    QWORD PTR [rsp+0x10],rdx
   14002d936:	push   rbx
   14002d937:	push   rbp
   14002d938:	push   rsi
   14002d939:	push   rdi
   14002d93a:	push   r12
   14002d93c:	push   r13
   14002d93e:	push   r14
   14002d940:	push   r15
   14002d942:	sub    rsp,0x48
   14002d946:	and    DWORD PTR [r9+0x44],0x0
   14002d94b:	lea    rax,[rip+0x53e0e]        # 0x140081760
   14002d952:	movsxd r14,r8d
   14002d955:	mov    rbx,r9
   14002d958:	mov    QWORD PTR [r9+0x28],rax
   14002d95c:	mov    r8d,r14d
   14002d95f:	mov    DWORD PTR [r9+0x48],r14d
   14002d963:	mov    rsi,rdx
   14002d966:	mov    DWORD PTR [r9],0x5
   14002d96d:	mov    rbp,rcx
   14002d970:	mov    DWORD PTR [r9+0x30],0x95
   14002d978:	mov    QWORD PTR [r9+0x50],rdx
   14002d97c:	xor    r9d,r9d
   14002d97f:	call   0x14002dca8
   14002d984:	movsxd r12,eax
   14002d987:	mov    edi,0x3
   14002d98c:	mov    BYTE PTR [rbx+0x4],dil
   14002d990:	mov    r8d,r14d
   14002d993:	mov    rdx,rsi
   14002d996:	lea    ecx,[r12+0x3]
   14002d99b:	mov    DWORD PTR [rbx+0x8],ecx
   14002d99e:	mov    rcx,rbp
   14002d9a1:	call   0x14002db88
   14002d9a6:	movsxd r8,eax
   14002d9a9:	lea    ecx,[r14-0x2]
   14002d9ad:	movsxd rdx,ecx
   14002d9b0:	lea    r9d,[rdi-0x2]
   14002d9b4:	mov    DWORD PTR [rbx+0xc],eax
   14002d9b7:	movabs rax,0xaaaaaaaaaaaaaaab
   14002d9c1:	cmp    r8,rdx
   14002d9c4:	jge    0x14002d9e9
   14002d9c6:	sub    rdx,r8
   14002d9c9:	lea    rcx,[r8+rsi*1]
   14002d9cd:	sub    rdx,r9
   14002d9d0:	mul    rdx
   14002d9d3:	shr    rdx,1
   14002d9d6:	add    rdx,r9
   14002d9d9:	mov    al,BYTE PTR [rcx+0x1]
   14002d9dc:	sub    BYTE PTR [rcx],al
   14002d9de:	sub    BYTE PTR [rcx+0x2],al
   14002d9e1:	add    rcx,rdi
   14002d9e4:	sub    rdx,r9
   14002d9e7:	jne    0x14002d9d9
   14002d9e9:	mov    rcx,r12
   14002d9ec:	lea    rax,[rbp+0x1a638]
   14002d9f3:	xor    ebx,ebx
   14002d9f5:	mov    QWORD PTR [rsp+0x30],rcx
   14002d9fa:	and    QWORD PTR [rsp+0x28],rbx
   14002d9ff:	xor    r13d,r13d
   14002da02:	mov    r12,rsi
   14002da05:	mov    r15,r14
   14002da08:	sub    r12,rcx
   14002da0b:	mov    r14,rdi
   14002da0e:	mov    QWORD PTR [rsp+0x38],r12
   14002da13:	mov    edx,DWORD PTR [rsp+0xb0]
   14002da1a:	mov    r8d,0x4
   14002da20:	add    edx,r13d
   14002da23:	mov    rcx,rax
   14002da26:	call   0x140030d90
   14002da2b:	xor    r8d,r8d
   14002da2e:	cmp    rbx,r15
   14002da31:	jge    0x14002db22
   14002da37:	mov    r11,rsi
   14002da3a:	lea    r9,[r12+rbx*1]
   14002da3e:	mov    rsi,QWORD PTR [rsp+0x30]
   14002da43:	lea    r12d,[r8+0x1]
   14002da47:	mov    rcx,r15
   14002da4a:	movabs rax,0xaaaaaaaaaaaaaaab
   14002da54:	sub    rcx,rbx
   14002da57:	neg    r11
   14002da5a:	sub    rcx,r12
   14002da5d:	mul    rcx
   14002da60:	mov    rcx,QWORD PTR [rsp+0x28]
   14002da65:	shr    rdx,1
   14002da68:	lea    r10,[rdx+0x1]
   14002da6c:	add    r13d,r10d
   14002da6f:	movzx  eax,BYTE PTR [r9+rsi*1]
   14002da74:	mov    DWORD PTR [rsp+0x20],eax
   14002da78:	lea    rax,[r11+r9*1]
   14002da7c:	cmp    rax,rdi
   14002da7f:	jl     0x14002daec
   14002da81:	movzx  edx,BYTE PTR [r9-0x3]
   14002da86:	movzx  ecx,BYTE PTR [r9]
   14002da8a:	sub    ecx,edx
   14002da8c:	add    ecx,r8d
   14002da8f:	mov    eax,ecx
   14002da91:	sub    eax,r8d
   14002da94:	cdq    
   14002da95:	xor    eax,edx
   14002da97:	sub    eax,edx
   14002da99:	movzx  edx,BYTE PTR [r9]
   14002da9d:	mov    DWORD PTR [rsp+0x90],eax
   14002daa4:	mov    eax,ecx
   14002daa6:	sub    eax,edx
   14002daa8:	cdq    
   14002daa9:	xor    eax,edx
   14002daab:	sub    eax,edx
   14002daad:	mov    DWORD PTR [rsp+0xa8],eax
   14002dab4:	movzx  eax,BYTE PTR [r9-0x3]
   14002dab9:	sub    ecx,eax
   14002dabb:	mov    eax,ecx
   14002dabd:	mov    ecx,DWORD PTR [rsp+0x90]
   14002dac4:	cdq    
   14002dac5:	xor    eax,edx
   14002dac7:	sub    eax,edx
   14002dac9:	mov    edx,DWORD PTR [rsp+0xa8]
   14002dad0:	cmp    ecx,edx
   14002dad2:	jg     0x14002dad8
   14002dad4:	cmp    ecx,eax
   14002dad6:	jle    0x14002dae7
   14002dad8:	movzx  r8d,BYTE PTR [r9-0x3]
   14002dadd:	cmp    edx,eax
   14002dadf:	movzx  eax,BYTE PTR [r9]
   14002dae3:	cmovle r8d,eax
   14002dae7:	mov    rcx,QWORD PTR [rsp+0x28]
   14002daec:	mov    edx,DWORD PTR [rsp+0x20]
   14002daf0:	add    r9,rdi
   14002daf3:	mov    rax,QWORD PTR [rbp+0x1a5e8]
   14002dafa:	sub    r8b,dl
   14002dafd:	mov    BYTE PTR [rcx+rax*1],r8b
   14002db01:	add    rcx,r12
   14002db04:	mov    QWORD PTR [rsp+0x28],rcx
   14002db09:	mov    r8d,edx
   14002db0c:	sub    r10,r12
   14002db0f:	jne    0x14002da6f
   14002db15:	mov    rsi,QWORD PTR [rsp+0x98]
   14002db1d:	mov    r12,QWORD PTR [rsp+0x38]
   14002db22:	mov    eax,0x1
   14002db27:	add    rbx,rax
   14002db2a:	sub    r14,rax
   14002db2d:	lea    rax,[rbp+0x1a638]
   14002db34:	jne    0x14002da13
   14002db3a:	mov    rdx,QWORD PTR [rbp+0x1a5e8]
   14002db41:	mov    r8,r15
   14002db44:	mov    rcx,rsi
   14002db47:	call   0x140059180
   14002db4c:	cmp    DWORD PTR [rbp+0x544],0x2
   14002db53:	lea    rcx,[rbp+0x1a638]
   14002db5a:	mov    edx,DWORD PTR [rsp+0xa0]
   14002db61:	mov    eax,0x1
   14002db66:	cmove  edi,eax
   14002db69:	add    edx,DWORD PTR [rsp+0xb0]
   14002db70:	mov    r8d,edi
   14002db73:	add    rsp,0x48
   14002db77:	pop    r15
   14002db79:	pop    r14
   14002db7b:	pop    r13
   14002db7d:	pop    r12
   14002db7f:	pop    rdi
   14002db80:	pop    rsi
   14002db81:	pop    rbp
   14002db82:	pop    rbx
   14002db83:	jmp    0x140030d90
   14002db88:	mov    rax,rsp
   14002db8b:	mov    QWORD PTR [rax+0x8],rbx
   14002db8f:	mov    QWORD PTR [rax+0x10],rbp
   14002db93:	mov    QWORD PTR [rax+0x18],rsi
   14002db97:	mov    QWORD PTR [rax+0x20],rdi
   14002db9b:	push   r14
   14002db9d:	sub    rsp,0xa0
   14002dba4:	mov    rax,QWORD PTR [rip+0x54335]        # 0x140081ee0
   14002dbab:	xor    rax,rsp
   14002dbae:	mov    QWORD PTR [rsp+0x90],rax
   14002dbb6:	xor    r9d,r9d
   14002dbb9:	lea    eax,[r8-0x78]
   14002dbbd:	lea    r8,[rsp+0x10]
   14002dbc2:	mov    QWORD PTR [rsp+0x4],r9
   14002dbc7:	sub    r8,rdx
   14002dbca:	mov    DWORD PTR [rsp],r9d
   14002dbce:	sub    r8,0x2
   14002dbd2:	movsxd rbp,eax
   14002dbd5:	lea    edi,[r9+0x3]
   14002dbd9:	mov    r14,rdx
   14002dbdc:	mov    r10,r9
   14002dbdf:	cmp    r9,rbp
   14002dbe2:	jge    0x14002dc4e
   14002dbe4:	mov    r11d,DWORD PTR [rsp+r9*4]
   14002dbe8:	mov    rbx,r8
   14002dbeb:	lea    rdx,[r14+0x2]
   14002dbef:	mov    esi,0x28
   14002dbf4:	add    rdx,r10
   14002dbf7:	mov    cl,BYTE PTR [rdx-0x1]
   14002dbfa:	mov    al,BYTE PTR [rdx-0x2]
   14002dbfd:	sub    al,cl
   14002dbff:	mov    BYTE PTR [rbx+rdx*1+0x1],cl
   14002dc03:	mov    BYTE PTR [rbx+rdx*1],al
   14002dc06:	mov    al,BYTE PTR [rdx]
   14002dc08:	lea    rdx,[rdx+0x3]
   14002dc0c:	sub    al,cl
   14002dc0e:	mov    BYTE PTR [rbx+rdx*1-0x1],al
   14002dc12:	sub    rsi,0x1
   14002dc16:	jne    0x14002dbf7
   14002dc18:	lea    ecx,[rsi+0x3]
   14002dc1b:	mov    al,BYTE PTR [rsp+rcx*1+0x10]
   14002dc1f:	sub    al,BYTE PTR [rsp+rcx*1+0xd]
   14002dc23:	inc    rcx
   14002dc26:	movsx  eax,al
   14002dc29:	cdq    
   14002dc2a:	xor    eax,edx
   14002dc2c:	sub    eax,edx
   14002dc2e:	add    r11d,eax
   14002dc31:	cmp    rcx,0x78
   14002dc35:	jl     0x14002dc1b
   14002dc37:	add    r10,0x780
   14002dc3e:	sub    rbx,0x780
   14002dc45:	cmp    r10,rbp
   14002dc48:	jl     0x14002dbeb
   14002dc4a:	mov    DWORD PTR [rsp+r9*4],r11d
   14002dc4e:	inc    r9
   14002dc51:	dec    r8
   14002dc54:	sub    rdi,0x1
   14002dc58:	jne    0x14002dbdc
   14002dc5a:	mov    eax,DWORD PTR [rsp]
   14002dc5d:	mov    ecx,DWORD PTR [rsp+0x4]
   14002dc61:	cmp    eax,ecx
   14002dc63:	ja     0x14002dc6f
   14002dc65:	cmp    eax,DWORD PTR [rsp+0x8]
   14002dc69:	ja     0x14002dc6f
   14002dc6b:	xor    eax,eax
   14002dc6d:	jmp    0x14002dc79
   14002dc6f:	cmp    DWORD PTR [rsp+0x8],ecx
   14002dc73:	sbb    eax,eax
   14002dc75:	neg    eax
   14002dc77:	inc    eax
   14002dc79:	mov    rcx,QWORD PTR [rsp+0x90]
   14002dc81:	xor    rcx,rsp
   14002dc84:	call   0x140055f90
   14002dc89:	lea    r11,[rsp+0xa0]
   14002dc91:	mov    rbx,QWORD PTR [r11+0x10]
   14002dc95:	mov    rbp,QWORD PTR [r11+0x18]
   14002dc99:	mov    rsi,QWORD PTR [r11+0x20]
   14002dc9d:	mov    rdi,QWORD PTR [r11+0x28]
   14002dca1:	mov    rsp,r11
   14002dca4:	pop    r14
   14002dca6:	ret    
   14002dca7:	int3   
   14002dca8:	mov    QWORD PTR [rsp+0x20],rbx
   14002dcad:	push   rbp
   14002dcae:	push   rsi
   14002dcaf:	push   rdi
   14002dcb0:	push   r12
   14002dcb2:	push   r13
   14002dcb4:	push   r14
   14002dcb6:	push   r15
   14002dcb8:	sub    rsp,0x870
   14002dcbf:	mov    rax,QWORD PTR [rip+0x5421a]        # 0x140081ee0
   14002dcc6:	xor    rax,rsp
   14002dcc9:	mov    QWORD PTR [rsp+0x860],rax
   14002dcd1:	mov    r15b,r9b
   14002dcd4:	mov    rax,rdx
   14002dcd7:	mov    r9d,r8d
   14002dcda:	xor    edi,edi
   14002dcdc:	mov    BYTE PTR [rsp+0x20],r15b
   14002dce1:	lea    r13d,[r9-0x3c]
   14002dce5:	mov    QWORD PTR [rsp+0x58],rcx
   14002dcea:	xor    r8d,r8d
   14002dced:	mov    QWORD PTR [rsp+0x48],rax
   14002dcf2:	mov    DWORD PTR [rsp+0x44],r9d
   14002dcf7:	mov    DWORD PTR [rsp+0x30],edi
   14002dcfb:	mov    DWORD PTR [rsp+0x40],r13d
   14002dd00:	test   r13d,r13d
   14002dd03:	jle    0x14002df05
   14002dd09:	lea    r9,[rsp+0x60]
   14002dd0e:	sub    r9,0xc
   14002dd12:	lea    r12d,[rdi+0x3]
   14002dd16:	mov    QWORD PTR [rsp+0x50],r9
   14002dd1b:	and    DWORD PTR [rsp+0x28],0x0
   14002dd20:	mov    r14d,r8d
   14002dd23:	test   r15b,r15b
   14002dd26:	je     0x14002ddd3
   14002dd2c:	movsxd rbp,r13d
   14002dd2f:	lea    r10d,[r8+0x3]
   14002dd33:	cmp    r12,rbp
   14002dd36:	jge    0x14002ddd3
   14002dd3c:	mov    r13,QWORD PTR [rsp+0x48]
   14002dd41:	lea    r9d,[r8+0x780]
   14002dd48:	mov    edi,DWORD PTR [rsp+0x28]
   14002dd4c:	lea    r11d,[r10-0x1e]
   14002dd50:	or     rsi,0xffffffffffffffff
   14002dd54:	lea    rbx,[r13+0x1]
   14002dd58:	add    rbx,r12
   14002dd5b:	sub    rsi,r13
   14002dd5e:	cmp    r10d,r9d
   14002dd61:	jge    0x14002ddc5
   14002dd63:	lea    rcx,[rbx+r13*1]
   14002dd67:	mov    al,BYTE PTR [rcx+rsi*1-0x1]
   14002dd6b:	sub    al,BYTE PTR [rbx+0x1]
   14002dd6e:	movsx  eax,al
   14002dd71:	cdq    
   14002dd72:	mov    r15d,eax
   14002dd75:	mov    al,BYTE PTR [rcx+rsi*1-0x3]
   14002dd79:	sub    al,BYTE PTR [rbx-0x1]
   14002dd7c:	xor    r15d,edx
   14002dd7f:	movsx  eax,al
   14002dd82:	sub    r15d,edx
   14002dd85:	cdq    
   14002dd86:	xor    eax,edx
   14002dd88:	sub    eax,edx
   14002dd8a:	add    r15d,eax
   14002dd8d:	mov    al,BYTE PTR [rcx+rsi*1-0x2]
   14002dd91:	sub    al,BYTE PTR [rbx]
   14002dd93:	movsx  eax,al
   14002dd96:	cdq    
   14002dd97:	xor    eax,edx
   14002dd99:	sub    eax,edx
   14002dd9b:	add    r15d,eax
   14002dd9e:	cmp    r15d,edi
   14002dda1:	jle    0x14002ddb0
   14002dda3:	cmp    r8d,r11d
   14002dda6:	mov    r14d,r11d
   14002dda9:	mov    edi,r15d
   14002ddac:	cmovg  r14d,r8d
   14002ddb0:	add    rbx,0x3
   14002ddb4:	add    r10d,0x3
   14002ddb8:	add    r11d,0x3
   14002ddbc:	lea    rax,[rbx+rsi*1]
   14002ddc0:	cmp    rax,rbp
   14002ddc3:	jl     0x14002dd5e
   14002ddc5:	mov    r9,QWORD PTR [rsp+0x50]
   14002ddca:	mov    edi,DWORD PTR [rsp+0x30]
   14002ddce:	mov    r13d,DWORD PTR [rsp+0x40]
   14002ddd3:	xor    r11d,r11d
   14002ddd6:	movsxd rdx,r14d
   14002ddd9:	or     ebp,0xffffffff
   14002dddc:	add    rdx,QWORD PTR [rsp+0x48]
   14002dde1:	mov    QWORD PTR [rsp+0x38],rdx
   14002dde6:	lea    ebx,[r11+0x30]
   14002ddea:	lea    rcx,[rdx+0x30]
   14002ddee:	mov    QWORD PTR [rsp+0x28],rcx
   14002ddf3:	xor    r10d,r10d
   14002ddf6:	lea    eax,[rbx+r14*1]
   14002ddfa:	cmp    eax,r13d
   14002ddfd:	jge    0x14002de92
   14002de03:	xor    esi,esi
   14002de05:	cmp    r10d,ebp
   14002de08:	jae    0x14002de9d
   14002de0e:	movzx  eax,BYTE PTR [rdx+rsi*1+0x2]
   14002de13:	movzx  ecx,BYTE PTR [rcx+rsi*1+0x2]
   14002de18:	sub    eax,ecx
   14002de1a:	mov    rcx,QWORD PTR [rsp+0x28]
   14002de1f:	cdq    
   14002de20:	mov    r15d,eax
   14002de23:	mov    rax,QWORD PTR [rsp+0x38]
   14002de28:	xor    r15d,edx
   14002de2b:	movzx  ecx,BYTE PTR [rcx+rsi*1+0x1]
   14002de30:	sub    r15d,edx
   14002de33:	movzx  eax,BYTE PTR [rax+rsi*1+0x1]
   14002de38:	sub    eax,ecx
   14002de3a:	cdq    
   14002de3b:	xor    eax,edx
   14002de3d:	sub    eax,edx
   14002de3f:	add    r15d,eax
   14002de42:	mov    rax,QWORD PTR [rsp+0x28]
   14002de47:	movzx  ecx,BYTE PTR [rax+rsi*1]
   14002de4b:	mov    rax,QWORD PTR [rsp+0x38]
   14002de50:	movzx  eax,BYTE PTR [rax+rsi*1]
   14002de54:	sub    eax,ecx
   14002de56:	cdq    
   14002de57:	xor    eax,edx
   14002de59:	sub    eax,edx
   14002de5b:	add    r15d,eax
   14002de5e:	cmp    BYTE PTR [rsp+0x20],0x0
   14002de63:	jne    0x14002de6b
   14002de65:	cmp    r15d,0x32
   14002de69:	jg     0x14002de84
   14002de6b:	mov    rcx,QWORD PTR [rsp+0x28]
   14002de70:	add    r10d,r15d
   14002de73:	mov    rdx,QWORD PTR [rsp+0x38]
   14002de78:	add    rsi,0x3
   14002de7c:	cmp    rsi,0x3c
   14002de80:	jge    0x14002de92
   14002de82:	jmp    0x14002de05
   14002de84:	mov    rcx,QWORD PTR [rsp+0x28]
   14002de89:	or     r10d,0xffffffff
   14002de8d:	mov    rdx,QWORD PTR [rsp+0x38]
   14002de92:	cmp    r10d,ebp
   14002de95:	jae    0x14002de9d
   14002de97:	mov    ebp,r10d
   14002de9a:	mov    r11d,ebx
   14002de9d:	add    rcx,0x3
   14002dea1:	add    ebx,0x3
   14002dea4:	mov    QWORD PTR [rsp+0x28],rcx
   14002dea9:	cmp    ebx,0x2000
   14002deaf:	jl     0x14002ddf3
   14002deb5:	cmp    ebp,0xffffffff
   14002deb8:	je     0x14002deec
   14002deba:	movsxd rax,edi
   14002debd:	cmp    rax,0x100
   14002dec3:	jae    0x14002deec
   14002dec5:	inc    edi
   14002dec7:	mov    DWORD PTR [r9+0xc],r11d
   14002decb:	add    r9,0x4
   14002decf:	mov    DWORD PTR [rsp+0x30],edi
   14002ded3:	mov    QWORD PTR [rsp+0x50],r9
   14002ded8:	cmp    edi,0x2
   14002dedb:	jle    0x14002deec
   14002dedd:	cmp    DWORD PTR [r9+0x4],r11d
   14002dee1:	jne    0x14002deec
   14002dee3:	cmp    DWORD PTR [r9],r11d
   14002dee6:	je     0x14002dfab
   14002deec:	mov    r15b,BYTE PTR [rsp+0x20]
   14002def1:	mov    edx,0x780
   14002def6:	add    r8d,edx
   14002def9:	add    r12,rdx
   14002defc:	cmp    r8d,r13d
   14002deff:	jl     0x14002dd1b
   14002df05:	xor    esi,esi
   14002df07:	lea    rcx,[rsp+0x460]
   14002df0f:	xor    edx,edx
   14002df11:	mov    r8d,0x400
   14002df17:	lea    ebp,[rsi+0x3]
   14002df1a:	call   0x140058f40
   14002df1f:	xor    ecx,ecx
   14002df21:	movsxd rdi,edi
   14002df24:	test   rdi,rdi
   14002df27:	jle    0x14002df8f
   14002df29:	or     r10d,0xffffffff
   14002df2d:	xor    r8d,r8d
   14002df30:	lea    r9,[rcx-0x1]
   14002df34:	test   r10d,r10d
   14002df37:	mov    ebx,r10d
   14002df3a:	js     0x14002df68
   14002df3c:	mov    r11d,DWORD PTR [rsp+r9*4+0x60]
   14002df41:	cmp    r11d,0x64
   14002df45:	jle    0x14002df53
   14002df47:	mov    eax,DWORD PTR [rsp+rcx*4+0x60]
   14002df4b:	cdq    
   14002df4c:	idiv   r11d
   14002df4f:	test   edx,edx
   14002df51:	je     0x14002df5b
   14002df53:	dec    r9
   14002df56:	sub    ebx,0x1
   14002df59:	jmp    0x14002df3a
   14002df5b:	mov    r8d,DWORD PTR [rsp+r9*4+0x460]
   14002df63:	mov    DWORD PTR [rsp+rcx*4+0x60],r11d
   14002df68:	inc    r8d
   14002df6b:	cmp    r8d,esi
   14002df6e:	jle    0x14002df77
   14002df70:	mov    ebp,DWORD PTR [rsp+rcx*4+0x60]
   14002df74:	mov    esi,r8d
   14002df77:	mov    DWORD PTR [rsp+rcx*4+0x460],r8d
   14002df7f:	inc    r10d
   14002df82:	inc    rcx
   14002df85:	cmp    rcx,rdi
   14002df88:	jl     0x14002df2d
   14002df8a:	cmp    esi,0x3
   14002df8d:	jge    0x14002dfb0
   14002df8f:	test   r15b,r15b
   14002df92:	jne    0x14002dfb0
   14002df94:	mov    rax,QWORD PTR [rsp+0x48]
   14002df99:	mov    r15b,0x1
   14002df9c:	mov    r9d,DWORD PTR [rsp+0x44]
   14002dfa1:	mov    rcx,QWORD PTR [rsp+0x58]
   14002dfa6:	jmp    0x14002dcda
   14002dfab:	mov    eax,r11d
   14002dfae:	jmp    0x14002dfb2
   14002dfb0:	mov    eax,ebp
   14002dfb2:	mov    rcx,QWORD PTR [rsp+0x860]
   14002dfba:	xor    rcx,rsp
   14002dfbd:	call   0x140055f90
   14002dfc2:	mov    rbx,QWORD PTR [rsp+0x8c8]
   14002dfca:	add    rsp,0x870
   14002dfd1:	pop    r15
   14002dfd3:	pop    r14
   14002dfd5:	pop    r13
   14002dfd7:	pop    r12
   14002dfd9:	pop    rdi
   14002dfda:	pop    rsi
   14002dfdb:	pop    rbp
   14002dfdc:	ret    
   14002dfdd:	int3   
   14002dfde:	int3   
   14002dfdf:	int3   
   14002dfe0:	mov    QWORD PTR [rsp+0x8],rbx
   14002dfe5:	push   rbp
   14002dfe6:	push   rsi
   14002dfe7:	push   rdi
   14002dfe8:	push   r12
   14002dfea:	push   r13
   14002dfec:	push   r14
   14002dfee:	push   r15
   14002dff0:	lea    rbp,[rsp-0x410]
   14002dff8:	sub    rsp,0x510
   14002dfff:	mov    rax,QWORD PTR [rip+0x53eda]        # 0x140081ee0
   14002e006:	xor    rax,rsp
   14002e009:	mov    QWORD PTR [rbp+0x400],rax
   14002e010:	mov    r15,QWORD PTR [rbp+0x478]
   14002e017:	mov    r14d,0x8
   14002e01d:	mov    r13,QWORD PTR [rbp+0x470]
   14002e024:	xor    edi,edi
   14002e026:	mov    QWORD PTR [rsp+0x48],r8
   14002e02b:	mov    r11d,r9d
   14002e02e:	mov    QWORD PTR [rsp+0x40],rdx
   14002e033:	lea    r8,[rip+0x535b6]        # 0x1400815f0
   14002e03a:	mov    QWORD PTR [rsp+0x58],r15
   14002e03f:	xor    edx,edx
   14002e041:	mov    DWORD PTR [rsp+0x34],r14d
   14002e046:	mov    r10,rcx
   14002e049:	mov    DWORD PTR [rsp+0x30],r9d
   14002e04e:	mov    QWORD PTR [rsp+0x38],rcx
   14002e053:	movsxd r9,DWORD PTR [r8]
   14002e056:	lea    rcx,[r9+r9*2]
   14002e05a:	cmp    DWORD PTR [r10+rcx*4+0x20],0x2
   14002e060:	je     0x14002e06f
   14002e062:	inc    edx
   14002e064:	add    r8,0x4
   14002e068:	cmp    edx,0x3
   14002e06b:	jb     0x14002e053
   14002e06d:	jmp    0x14002e096
   14002e06f:	mov    DWORD PTR [rsp+0x34],r9d
   14002e074:	mov    r14,r9
   14002e077:	cmp    r9d,0x5
   14002e07b:	jne    0x14002e083
   14002e07d:	lea    edi,[r9-0x2]
   14002e081:	jmp    0x14002e096
   14002e083:	lea    rax,[r9+0x3]
   14002e087:	lea    rax,[rax+rax*2]
   14002e08b:	cmp    DWORD PTR [r10+rax*4],0x20
   14002e090:	sbb    edi,edi
   14002e092:	and    edi,DWORD PTR [r10+rax*4]
   14002e096:	mov    esi,0x101
   14002e09b:	mov    eax,r11d
   14002e09e:	cdq    
   14002e09f:	mov    ebx,0x1
   14002e0a4:	movzx  edx,dl
   14002e0a7:	add    eax,edx
   14002e0a9:	sar    eax,0x8
   14002e0ac:	movsxd rcx,eax
   14002e0af:	cmp    rcx,rsi
   14002e0b2:	cmovb  esi,eax
   14002e0b5:	xor    r8d,r8d
   14002e0b8:	movsxd r12,esi
   14002e0bb:	mov    QWORD PTR [rsp+0x50],r12
   14002e0c0:	test   edi,edi
   14002e0c2:	jne    0x14002e13e
   14002e0c4:	mov    r8,QWORD PTR [rsp+0x48]
   14002e0c9:	lea    rax,[rbp-0x10]
   14002e0cd:	mov    rdx,QWORD PTR [rsp+0x40]
   14002e0d2:	mov    r9d,r11d
   14002e0d5:	mov    DWORD PTR [rsp+0x28],esi
   14002e0d9:	mov    rcx,r10
   14002e0dc:	mov    QWORD PTR [rsp+0x20],rax
   14002e0e1:	call   0x14002e69c
   14002e0e6:	xor    edx,edx
   14002e0e8:	lea    rcx,[rsp+0x60]
   14002e0ed:	mov    r8d,0x84
   14002e0f3:	call   0x140058f40
   14002e0f8:	xor    ecx,ecx
   14002e0fa:	test   esi,esi
   14002e0fc:	jle    0x14002e10f
   14002e0fe:	movsxd rax,DWORD PTR [rbp+rcx*4-0x10]
   14002e103:	inc    rcx
   14002e106:	inc    DWORD PTR [rsp+rax*4+0x60]
   14002e10a:	cmp    rcx,r12
   14002e10d:	jl     0x14002e0fe
   14002e10f:	mov    r8d,DWORD PTR [rsp+0x64]
   14002e114:	lea    r9,[rsp+0x68]
   14002e119:	mov    edx,0x2
   14002e11e:	mov    ecx,DWORD PTR [r9]
   14002e121:	lea    r9,[r9+0x4]
   14002e125:	movsxd rax,ebx
   14002e128:	cmp    ecx,DWORD PTR [rsp+rax*4+0x60]
   14002e12c:	cmovg  ebx,edx
   14002e12f:	add    r8d,ecx
   14002e132:	inc    edx
   14002e134:	cmp    edx,0x21
   14002e137:	jb     0x14002e11e
   14002e139:	mov    r11d,DWORD PTR [rsp+0x30]
   14002e13e:	cmp    r14d,0x8
   14002e142:	je     0x14002e16a
   14002e144:	lea    eax,[rdi-0x1]
   14002e147:	cmp    eax,0x1e
   14002e14a:	ja     0x14002e16a
   14002e14c:	and    DWORD PTR [r13+0x4],0x0
   14002e151:	test   edi,edi
   14002e153:	mov    DWORD PTR [r13+0x8],r11d
   14002e157:	mov    DWORD PTR [r13+0x0],r14d
   14002e15b:	cmovne ebx,edi
   14002e15e:	mov    DWORD PTR [r13+0xc],ebx
   14002e162:	inc    DWORD PTR [r15]
   14002e165:	jmp    0x14002e40f
   14002e16a:	xor    edi,edi
   14002e16c:	movsxd rax,ebx
   14002e16f:	mov    edx,ebx
   14002e171:	cmp    rax,0x21
   14002e175:	jae    0x14002e196
   14002e177:	mov    r9,rax
   14002e17a:	lea    rcx,[rsp+0x60]
   14002e17f:	shl    r9,0x2
   14002e183:	add    rcx,r9
   14002e186:	add    edi,DWORD PTR [rcx]
   14002e188:	add    edx,ebx
   14002e18a:	movsxd rax,edx
   14002e18d:	add    rcx,r9
   14002e190:	cmp    rax,0x21
   14002e194:	jb     0x14002e186
   14002e196:	mov    r14d,0x10
   14002e19c:	cmp    r8d,r14d
   14002e19f:	jle    0x14002e270
   14002e1a5:	lea    eax,[rdi+rdi*1]
   14002e1a8:	cmp    eax,r8d
   14002e1ab:	jle    0x14002e270
   14002e1b1:	xor    edi,edi
   14002e1b3:	xor    ecx,ecx
   14002e1b5:	test   esi,esi
   14002e1b7:	jle    0x14002e211
   14002e1b9:	mov    r8d,DWORD PTR [rbp+rcx*4-0x10]
   14002e1be:	cmp    r8d,0x4
   14002e1c2:	jle    0x14002e207
   14002e1c4:	mov    eax,r8d
   14002e1c7:	cdq    
   14002e1c8:	idiv   ebx
   14002e1ca:	test   edx,edx
   14002e1cc:	jne    0x14002e207
   14002e1ce:	xor    r9d,r9d
   14002e1d1:	movsxd rax,edi
   14002e1d4:	xor    edx,edx
   14002e1d6:	cmp    rax,r12
   14002e1d9:	jge    0x14002e203
   14002e1db:	cmp    DWORD PTR [rbp+rax*4-0x10],r8d
   14002e1e0:	jne    0x14002e1f0
   14002e1e2:	inc    r9d
   14002e1e5:	inc    rdx
   14002e1e8:	inc    rax
   14002e1eb:	cmp    rax,r12
   14002e1ee:	jl     0x14002e1db
   14002e1f0:	cmp    rdx,0x8
   14002e1f4:	jl     0x14002e203
   14002e1f6:	dec    edi
   14002e1f8:	dec    rcx
   14002e1fb:	add    edi,r9d
   14002e1fe:	add    rcx,rdx
   14002e201:	jmp    0x14002e207
   14002e203:	mov    DWORD PTR [rbp+rcx*4-0x10],ebx
   14002e207:	inc    edi
   14002e209:	inc    rcx
   14002e20c:	cmp    rcx,r12
   14002e20f:	jl     0x14002e1b9
   14002e211:	lea    r11d,[rsi-0x10]
   14002e215:	xor    edx,edx
   14002e217:	test   r11d,r11d
   14002e21a:	jle    0x14002e270
   14002e21c:	xor    r9d,r9d
   14002e21f:	lea    r10,[rbp-0x10]
   14002e223:	mov    r8,r14
   14002e226:	xor    ecx,ecx
   14002e228:	mov    rax,r9
   14002e22b:	cmp    r9,r8
   14002e22e:	jge    0x14002e25e
   14002e230:	cmp    DWORD PTR [rbp+rax*4-0x10],ebx
   14002e234:	jne    0x14002e238
   14002e236:	inc    ecx
   14002e238:	inc    rax
   14002e23b:	cmp    rax,r8
   14002e23e:	jl     0x14002e230
   14002e240:	cmp    ecx,r14d
   14002e243:	je     0x14002e25e
   14002e245:	cmp    ecx,0xc
   14002e248:	jl     0x14002e25e
   14002e24a:	lea    eax,[rdx+0x10]
   14002e24d:	cmp    edx,eax
   14002e24f:	jge    0x14002e25e
   14002e251:	sub    eax,edx
   14002e253:	mov    rdi,r10
   14002e256:	movsxd rcx,eax
   14002e259:	movsxd rax,ebx
   14002e25c:	rep stos DWORD PTR es:[rdi],eax
   14002e25e:	add    edx,r14d
   14002e261:	add    r8,r14
   14002e264:	add    r10,0x40
   14002e268:	add    r9,r14
   14002e26b:	cmp    edx,r11d
   14002e26e:	jl     0x14002e226
   14002e270:	lea    eax,[rsi-0x2]
   14002e273:	movsxd rcx,eax
   14002e276:	cmp    rcx,0x2
   14002e27a:	jle    0x14002e29d
   14002e27c:	lea    rax,[rbp-0xc]
   14002e280:	lea    rdx,[rcx-0x2]
   14002e284:	mov    ecx,DWORD PTR [rax-0x4]
   14002e287:	cmp    ecx,DWORD PTR [rax]
   14002e289:	jne    0x14002e293
   14002e28b:	cmp    ecx,DWORD PTR [rax+0x8]
   14002e28e:	jne    0x14002e293
   14002e290:	mov    DWORD PTR [rax+0x4],ecx
   14002e293:	add    rax,0x4
   14002e297:	sub    rdx,0x1
   14002e29b:	jne    0x14002e284
   14002e29d:	mov    eax,DWORD PTR [r15]
   14002e2a0:	xor    r14d,r14d
   14002e2a3:	cmp    rax,QWORD PTR [rbp+0x480]
   14002e2aa:	jae    0x14002e40f
   14002e2b0:	xor    edi,edi
   14002e2b2:	jmp    0x14002e2c1
   14002e2b4:	cmp    DWORD PTR [rbp+rdi*4-0x10],0x0
   14002e2b9:	jne    0x14002e2c6
   14002e2bb:	inc    r14d
   14002e2be:	inc    rdi
   14002e2c1:	cmp    rdi,r12
   14002e2c4:	jl     0x14002e2b4
   14002e2c6:	mov    esi,DWORD PTR [rbp+rdi*4-0x10]
   14002e2ca:	mov    ecx,r14d
   14002e2cd:	shl    ecx,0x8
   14002e2d0:	xor    r10d,r10d
   14002e2d3:	xor    r15d,r15d
   14002e2d6:	cmp    rdi,r12
   14002e2d9:	jge    0x14002e314
   14002e2db:	mov    rdx,QWORD PTR [rsp+0x40]
   14002e2e0:	lea    rax,[rbp-0x10]
   14002e2e4:	sub    rdx,rax
   14002e2e7:	cmp    DWORD PTR [rbp+rdi*4-0x10],esi
   14002e2eb:	jne    0x14002e314
   14002e2ed:	lea    rax,[rdx+rdi*4]
   14002e2f1:	cmp    DWORD PTR [rbp+rax*1+0x408],0xee
   14002e2fc:	jb     0x14002e301
   14002e2fe:	inc    r15d
   14002e301:	add    r10d,DWORD PTR [rbp+rax*1+0x408]
   14002e309:	inc    r14d
   14002e30c:	inc    rdi
   14002e30f:	cmp    rdi,r12
   14002e312:	jl     0x14002e2e7
   14002e314:	mov    ebx,DWORD PTR [rsp+0x30]
   14002e318:	mov    eax,r14d
   14002e31b:	shl    eax,0x8
   14002e31e:	cmp    eax,ebx
   14002e320:	cmovl  ebx,eax
   14002e323:	cmp    ecx,ebx
   14002e325:	jge    0x14002e40f
   14002e32b:	sub    ebx,ecx
   14002e32d:	mov    DWORD PTR [r13+0x4],ecx
   14002e331:	mov    DWORD PTR [r13+0x8],ebx
   14002e335:	mov    DWORD PTR [r13+0xc],esi
   14002e339:	cmp    ebx,0x200
   14002e33f:	jle    0x14002e3fb
   14002e345:	cmp    esi,0x1
   14002e348:	jne    0x14002e356
   14002e34a:	cmp    ebx,0x400
   14002e350:	jle    0x14002e3fb
   14002e356:	mov    eax,ebx
   14002e358:	cdq    
   14002e359:	idiv   esi
   14002e35b:	cmp    eax,0x80
   14002e360:	jle    0x14002e3fb
   14002e366:	movsxd r12,ecx
   14002e369:	mov    r9d,ebx
   14002e36c:	add    r12,QWORD PTR [rsp+0x48]
   14002e371:	mov    edx,r10d
   14002e374:	mov    rcx,QWORD PTR [rsp+0x38]
   14002e379:	mov    r8,r12
   14002e37c:	mov    DWORD PTR [rsp+0x20],esi
   14002e380:	call   0x14002c560
   14002e385:	test   al,al
   14002e387:	je     0x14002e3f6
   14002e389:	mov    eax,DWORD PTR [rsp+0x34]
   14002e38d:	cmp    eax,0x8
   14002e390:	jne    0x14002e3c7
   14002e392:	mov    rcx,QWORD PTR [rsp+0x38]
   14002e397:	mov    r9d,esi
   14002e39a:	mov    r8d,ebx
   14002e39d:	mov    rdx,r12
   14002e3a0:	call   0x14002e460
   14002e3a5:	mov    DWORD PTR [r13+0x0],eax
   14002e3a9:	cmp    eax,0x5
   14002e3ac:	jne    0x14002e3cb
   14002e3ae:	test   r15d,r15d
   14002e3b1:	jle    0x14002e3cb
   14002e3b3:	mov    eax,ebx
   14002e3b5:	cdq    
   14002e3b6:	idiv   r15d
   14002e3b9:	cmp    eax,0x4000
   14002e3be:	jge    0x14002e3cb
   14002e3c0:	and    DWORD PTR [r13+0x0],0x0
   14002e3c5:	jmp    0x14002e3cb
   14002e3c7:	mov    DWORD PTR [r13+0x0],eax
   14002e3cb:	movsxd rax,DWORD PTR [r13+0x0]
   14002e3cf:	lea    rcx,[rax+rax*2]
   14002e3d3:	mov    rax,QWORD PTR [rsp+0x38]
   14002e3d8:	cmp    DWORD PTR [rax+rcx*4+0x20],0x3
   14002e3dd:	je     0x14002e3ea
   14002e3df:	mov    rax,QWORD PTR [rsp+0x58]
   14002e3e4:	inc    DWORD PTR [rax]
   14002e3e6:	add    r13,0x10
   14002e3ea:	mov    rax,QWORD PTR [rsp+0x40]
   14002e3ef:	mov    BYTE PTR [rax+0x82c],0x1
   14002e3f6:	mov    r12,QWORD PTR [rsp+0x50]
   14002e3fb:	mov    rax,QWORD PTR [rsp+0x58]
   14002e400:	mov    eax,DWORD PTR [rax]
   14002e402:	cmp    rax,QWORD PTR [rbp+0x480]
   14002e409:	jb     0x14002e2c1
   14002e40f:	mov    rcx,QWORD PTR [rbp+0x400]
   14002e416:	xor    rcx,rsp
   14002e419:	call   0x140055f90
   14002e41e:	mov    rbx,QWORD PTR [rsp+0x550]
   14002e426:	add    rsp,0x510
   14002e42d:	pop    r15
   14002e42f:	pop    r14
   14002e431:	pop    r13
   14002e433:	pop    r12
   14002e435:	pop    rdi
   14002e436:	pop    rsi
   14002e437:	pop    rbp
   14002e438:	ret    
   14002e439:	int3   
   14002e43a:	int3   
   14002e43b:	int3   
   14002e43c:	rex push rbx
   14002e43e:	sub    rsp,0x20
   14002e442:	lea    rbx,[rcx+0x21490]
   14002e449:	mov    rcx,rbx
   14002e44c:	call   0x1400118dc
   14002e451:	mov    rcx,rbx
   14002e454:	add    rsp,0x20
   14002e458:	pop    rbx
   14002e459:	jmp    0x140011d84
   14002e45e:	int3   
   14002e45f:	int3   
   14002e460:	mov    QWORD PTR [rsp+0x8],rbx
   14002e465:	push   rbp
   14002e466:	push   rsi
   14002e467:	push   rdi
   14002e468:	push   r12
   14002e46a:	push   r13
   14002e46c:	push   r14
   14002e46e:	push   r15
   14002e470:	sub    rsp,0x940
   14002e477:	mov    rax,QWORD PTR [rip+0x53a62]        # 0x140081ee0
   14002e47e:	xor    rax,rsp
   14002e481:	mov    QWORD PTR [rsp+0x930],rax
   14002e489:	mov    ebx,r9d
   14002e48c:	mov    esi,r8d
   14002e48f:	mov    DWORD PTR [rsp+0x20],r8d
   14002e494:	mov    r12,rdx
   14002e497:	cmp    r8d,0x800
   14002e49e:	jge    0x14002e4a7
   14002e4a0:	xor    eax,eax
   14002e4a2:	jmp    0x14002e66f
   14002e4a7:	movsxd rdi,ebx
   14002e4aa:	lea    rcx,[rsp+0x130]
   14002e4b2:	mov    r8,rdi
   14002e4b5:	xor    edx,edx
   14002e4b7:	shl    r8,0x6
   14002e4bb:	call   0x140058f40
   14002e4c0:	mov    r15,rdi
   14002e4c3:	lea    rcx,[rsp+0x30]
   14002e4c8:	shl    r15,0x2
   14002e4cc:	xor    edx,edx
   14002e4ce:	mov    r8,r15
   14002e4d1:	call   0x140058f40
   14002e4d6:	mov    r8,r15
   14002e4d9:	lea    rcx,[rsp+0xb0]
   14002e4e1:	xor    edx,edx
   14002e4e3:	call   0x140058f40
   14002e4e8:	lea    eax,[rbx+rbx*1]
   14002e4eb:	mov    r9d,0x4
   14002e4f1:	movsxd rcx,eax
   14002e4f4:	mov    eax,esi
   14002e4f6:	sub    eax,ebx
   14002e4f8:	movsxd r13,eax
   14002e4fb:	cmp    rcx,r13
   14002e4fe:	jge    0x14002e560
   14002e500:	test   ebx,ebx
   14002e502:	jle    0x14002e554
   14002e504:	xor    esi,esi
   14002e506:	lea    r10,[rcx+r12*1]
   14002e50a:	mov    r11,rdi
   14002e50d:	lea    r8,[rsp+0xb0]
   14002e515:	neg    r11
   14002e518:	mov    r14,rdi
   14002e51b:	mov    bpl,BYTE PTR [r10]
   14002e51e:	sub    bpl,BYTE PTR [r11+r10*1]
   14002e522:	movsx  eax,bpl
   14002e526:	cdq    
   14002e527:	xor    eax,edx
   14002e529:	sub    eax,edx
   14002e52b:	cmp    eax,0xf
   14002e52e:	jle    0x14002e533
   14002e530:	inc    DWORD PTR [r8]
   14002e533:	movzx  eax,bpl
   14002e537:	inc    r10
   14002e53a:	and    eax,0xf
   14002e53d:	add    r8,r9
   14002e540:	add    rax,rsi
   14002e543:	add    rsi,0x10
   14002e547:	inc    DWORD PTR [rsp+rax*4+0x130]
   14002e54e:	sub    r14,0x1
   14002e552:	jne    0x14002e51b
   14002e554:	add    rcx,r15
   14002e557:	cmp    rcx,r13
   14002e55a:	jl     0x14002e500
   14002e55c:	mov    esi,DWORD PTR [rsp+0x20]
   14002e560:	xor    r8d,r8d
   14002e563:	mov    r10d,0x10000000
   14002e569:	mov    r11d,r10d
   14002e56c:	test   ebx,ebx
   14002e56e:	jle    0x14002e61c
   14002e574:	mov    r15d,DWORD PTR [rsp+0x20]
   14002e579:	lea    r14,[rsp+0x130]
   14002e581:	mov    eax,esi
   14002e583:	mov    r12,rbx
   14002e586:	cdq    
   14002e587:	and    edx,0x3
   14002e58a:	lea    r13d,[rdx+rax*1]
   14002e58e:	sar    r13d,0x2
   14002e592:	xor    ebp,ebp
   14002e594:	xor    esi,esi
   14002e596:	xor    edi,edi
   14002e598:	xor    ecx,ecx
   14002e59a:	mov    rdx,r14
   14002e59d:	cmp    DWORD PTR [rdx],esi
   14002e59f:	jbe    0x14002e5a6
   14002e5a1:	mov    esi,DWORD PTR [rdx]
   14002e5a3:	mov    r15d,ecx
   14002e5a6:	add    edi,DWORD PTR [rdx]
   14002e5a8:	inc    ecx
   14002e5aa:	movsxd rax,ecx
   14002e5ad:	add    rdx,r9
   14002e5b0:	cmp    rax,0x10
   14002e5b4:	jb     0x14002e59d
   14002e5b6:	mov    eax,DWORD PTR [rsp+rbp*1+0xb0]
   14002e5bd:	imul   eax,ebx
   14002e5c0:	cmp    eax,r13d
   14002e5c3:	setg   cl
   14002e5c6:	test   edi,edi
   14002e5c8:	jne    0x14002e5ce
   14002e5ca:	xor    edx,edx
   14002e5cc:	jmp    0x14002e5d9
   14002e5ce:	xor    edx,edx
   14002e5d0:	mov    eax,esi
   14002e5d2:	shl    eax,0x4
   14002e5d5:	div    edi
   14002e5d7:	mov    edx,eax
   14002e5d9:	cmp    edx,r8d
   14002e5dc:	mov    DWORD PTR [rsp+rbp*1+0x30],edx
   14002e5e0:	cmova  r8d,edx
   14002e5e4:	test   cl,cl
   14002e5e6:	jne    0x14002e604
   14002e5e8:	cmp    edx,r11d
   14002e5eb:	jae    0x14002e604
   14002e5ed:	test   r15d,r15d
   14002e5f0:	je     0x14002e601
   14002e5f2:	mov    eax,DWORD PTR [r14]
   14002e5f5:	lea    ecx,[rax+rax*4]
   14002e5f8:	mov    eax,esi
   14002e5fa:	shl    eax,0x2
   14002e5fd:	cmp    ecx,eax
   14002e5ff:	jbe    0x14002e604
   14002e601:	mov    r11d,edx
   14002e604:	cmp    edx,r10d
   14002e607:	cmovb  r10d,edx
   14002e60b:	add    rbp,r9
   14002e60e:	add    r14,0x40
   14002e612:	sub    r12,0x1
   14002e616:	jne    0x14002e594
   14002e61c:	cmp    ebx,0x3
   14002e61f:	jne    0x14002e646
   14002e621:	cmp    DWORD PTR [rsp+0x30],0xa
   14002e626:	jae    0x14002e646
   14002e628:	cmp    DWORD PTR [rsp+0x34],0xa
   14002e62d:	jae    0x14002e646
   14002e62f:	cmp    DWORD PTR [rsp+0x38],0xa
   14002e634:	jae    0x14002e646
   14002e636:	mov    eax,r8d
   14002e639:	sub    eax,r10d
   14002e63c:	cmp    eax,r9d
   14002e63f:	jae    0x14002e646
   14002e641:	lea    eax,[rbx+0x2]
   14002e644:	jmp    0x14002e66f
   14002e646:	cmp    r11d,0x2
   14002e64a:	jae    0x14002e65e
   14002e64c:	cmp    r8d,0xa
   14002e650:	jbe    0x14002e662
   14002e652:	cmp    DWORD PTR [rsp+0x20],0x4000
   14002e65a:	cmovge r8d,r11d
   14002e65e:	cmp    r8d,0xa
   14002e662:	jae    0x14002e669
   14002e664:	cmp    ebx,r9d
   14002e667:	jle    0x14002e66c
   14002e669:	xor    r9d,r9d
   14002e66c:	mov    eax,r9d
   14002e66f:	mov    rcx,QWORD PTR [rsp+0x930]
   14002e677:	xor    rcx,rsp
   14002e67a:	call   0x140055f90
   14002e67f:	mov    rbx,QWORD PTR [rsp+0x980]
   14002e687:	add    rsp,0x940
   14002e68e:	pop    r15
   14002e690:	pop    r14
   14002e692:	pop    r13
   14002e694:	pop    r12
   14002e696:	pop    rdi
   14002e697:	pop    rsi
   14002e698:	pop    rbp
   14002e699:	ret    
   14002e69a:	int3   
   14002e69b:	int3   
   14002e69c:	mov    rax,rsp
   14002e69f:	mov    DWORD PTR [rax+0x20],r9d
   14002e6a3:	mov    QWORD PTR [rax+0x18],r8
   14002e6a7:	mov    QWORD PTR [rax+0x10],rdx
   14002e6ab:	mov    QWORD PTR [rax+0x8],rcx
   14002e6af:	push   rbx
   14002e6b0:	push   rbp
   14002e6b1:	push   rsi
   14002e6b2:	push   rdi
   14002e6b3:	push   r12
   14002e6b5:	push   r13
   14002e6b7:	push   r14
   14002e6b9:	push   r15
   14002e6bb:	sub    rsp,0x58
   14002e6bf:	movsxd rbp,DWORD PTR [rsp+0xc8]
   14002e6c7:	mov    r13d,r9d
   14002e6ca:	mov    r12,QWORD PTR [rsp+0xc0]
   14002e6d2:	mov    r9d,0x20
   14002e6d8:	mov    DWORD PTR [rsp+0x30],r9d
   14002e6dd:	mov    r11,rdx
   14002e6e0:	test   ebp,ebp
   14002e6e2:	jle    0x14002e6f0
   14002e6e4:	mov    rcx,rbp
   14002e6e7:	mov    rdi,r12
   14002e6ea:	or     rax,0xffffffffffffffff
   14002e6ee:	rep stos DWORD PTR es:[rdi],eax
   14002e6f0:	xor    edi,edi
   14002e6f2:	mov    QWORD PTR [rsp+0x40],r12
   14002e6f7:	mov    DWORD PTR [rsp+0x34],edi
   14002e6fb:	mov    r15,r12
   14002e6fe:	lea    eax,[rdi+0x1]
   14002e701:	mov    ebx,0x20
   14002e706:	mov    ecx,edi
   14002e708:	sar    ebx,cl
   14002e70a:	mov    r14d,edi
   14002e70d:	cmp    edi,0x3
   14002e710:	cmove  ebx,eax
   14002e713:	xor    dl,dl
   14002e715:	mov    DWORD PTR [rsp+0xc8],edx
   14002e71c:	cmp    edi,ebp
   14002e71e:	jge    0x14002e818
   14002e724:	mov    r8d,ebx
   14002e727:	movsxd r10,ebx
   14002e72a:	neg    r8d
   14002e72d:	shl    r10,0x2
   14002e731:	shl    r8d,0x8
   14002e735:	mov    r9d,ebx
   14002e738:	shl    r9d,0x8
   14002e73c:	mov    rsi,r15
   14002e73f:	mov    r15d,r13d
   14002e742:	shl    edi,0x8
   14002e745:	mov    r13,r11
   14002e748:	mov    QWORD PTR [rsp+0x48],r10
   14002e74d:	sub    r13,r12
   14002e750:	mov    DWORD PTR [rsp+0x3c],r9d
   14002e755:	mov    r12d,DWORD PTR [rsp+0x30]
   14002e75a:	mov    DWORD PTR [rsp+0x38],r8d
   14002e75f:	cmp    DWORD PTR [rsi],0xffffffff
   14002e762:	jne    0x14002e7e1
   14002e764:	test   r14d,r14d
   14002e767:	jle    0x14002e783
   14002e769:	lea    eax,[rbp-0x1]
   14002e76c:	cmp    r14d,eax
   14002e76f:	jge    0x14002e783
   14002e771:	cmp    DWORD PTR [rsi-0x4],0x0
   14002e775:	jne    0x14002e783
   14002e777:	cmp    DWORD PTR [rsi+0x4],0x0
   14002e77b:	jne    0x14002e783
   14002e77d:	xor    ecx,ecx
   14002e77f:	and    DWORD PTR [rsi],ecx
   14002e781:	jmp    0x14002e7be
   14002e783:	mov    r9d,DWORD PTR [rsi+r13*1+0x418]
   14002e78b:	mov    r8d,r15d
   14002e78e:	mov    rcx,QWORD PTR [rsp+0xa0]
   14002e796:	movsxd rdx,edi
   14002e799:	add    rdx,QWORD PTR [rsp+0xb0]
   14002e7a1:	mov    DWORD PTR [rsp+0x20],r12d
   14002e7a6:	call   0x140028734
   14002e7ab:	mov    r8d,DWORD PTR [rsp+0x38]
   14002e7b0:	mov    ecx,eax
   14002e7b2:	mov    r9d,DWORD PTR [rsp+0x3c]
   14002e7b7:	mov    r10,QWORD PTR [rsp+0x48]
   14002e7bc:	mov    DWORD PTR [rsi],eax
   14002e7be:	mov    eax,r12d
   14002e7c1:	cdq    
   14002e7c2:	sub    eax,edx
   14002e7c4:	mov    edx,DWORD PTR [rsp+0xc8]
   14002e7cb:	sar    eax,1
   14002e7cd:	cmp    ecx,eax
   14002e7cf:	movzx  edx,dl
   14002e7d2:	mov    eax,0x1
   14002e7d7:	cmovg  edx,eax
   14002e7da:	mov    DWORD PTR [rsp+0xc8],edx
   14002e7e1:	add    r14d,ebx
   14002e7e4:	add    edi,r9d
   14002e7e7:	add    r15d,r8d
   14002e7ea:	add    rsi,r10
   14002e7ed:	cmp    r14d,ebp
   14002e7f0:	jl     0x14002e75f
   14002e7f6:	mov    edi,DWORD PTR [rsp+0x34]
   14002e7fa:	mov    r15,QWORD PTR [rsp+0x40]
   14002e7ff:	mov    r12,QWORD PTR [rsp+0xc0]
   14002e807:	mov    r13d,DWORD PTR [rsp+0xb8]
   14002e80f:	mov    r9d,DWORD PTR [rsp+0x30]
   14002e814:	test   dl,dl
   14002e816:	jne    0x14002e827
   14002e818:	mov    eax,r9d
   14002e81b:	cdq    
   14002e81c:	sub    eax,edx
   14002e81e:	sar    eax,1
   14002e820:	mov    r9d,eax
   14002e823:	mov    DWORD PTR [rsp+0x30],eax
   14002e827:	mov    r11,QWORD PTR [rsp+0xa8]
   14002e82f:	add    r15,0x4
   14002e833:	sub    r13d,0x100
   14002e83a:	mov    QWORD PTR [rsp+0x40],r15
   14002e83f:	mov    eax,0x1
   14002e844:	mov    DWORD PTR [rsp+0xb8],r13d
   14002e84c:	add    edi,eax
   14002e84e:	mov    DWORD PTR [rsp+0x34],edi
   14002e852:	cmp    edi,0x4
   14002e855:	jl     0x14002e701
   14002e85b:	add    rsp,0x58
   14002e85f:	pop    r15
   14002e861:	pop    r14
   14002e863:	pop    r13
   14002e865:	pop    r12
   14002e867:	pop    rdi
   14002e868:	pop    rsi
   14002e869:	pop    rbp
   14002e86a:	pop    rbx
   14002e86b:	ret    
   14002e86c:	add    rcx,0x21490
   14002e873:	jmp    0x140011dc4
   14002e878:	mov    QWORD PTR [rsp+0x8],rbx
   14002e87d:	mov    QWORD PTR [rsp+0x10],rbp
   14002e882:	mov    QWORD PTR [rsp+0x18],rsi
   14002e887:	push   rdi
   14002e888:	push   r12
   14002e88a:	push   r13
   14002e88c:	sub    rsp,0x20
   14002e890:	cmp    rdx,0x100000
   14002e897:	lea    rbx,[rdx+rdx*1]
   14002e89b:	mov    rsi,rcx
   14002e89e:	mov    DWORD PTR [rcx+0x528],ebx
   14002e8a4:	mov    r13d,0x40000
   14002e8aa:	mov    eax,r13d
   14002e8ad:	cmova  eax,edx
   14002e8b0:	mov    DWORD PTR [rcx+0x520],eax
   14002e8b6:	dec    eax
   14002e8b8:	mov    DWORD PTR [rcx+0x524],eax
   14002e8be:	lea    eax,[rdx-0x111]
   14002e8c4:	mov    edx,DWORD PTR [rsi+0x21458]
   14002e8ca:	mov    DWORD PTR [rcx+0x530],eax
   14002e8d0:	lea    eax,[rbx-0x1]
   14002e8d3:	add    DWORD PTR [rcx+0x530],0xffffff00
   14002e8dd:	mov    DWORD PTR [rcx+0x52c],eax
   14002e8e3:	add    rcx,0x21490
   14002e8ea:	call   0x140012278
   14002e8ef:	mov    ebp,DWORD PTR [rsi+0x528]
   14002e8f5:	mov    r12d,0x4
   14002e8fb:	shr    ebp,1
   14002e8fd:	mov    eax,r12d
   14002e900:	mul    rbx
   14002e903:	lea    rcx,[r12-0x5]
   14002e908:	cmovo  rax,rcx
   14002e90c:	mov    rcx,rax
   14002e90f:	call   0x140055df0
   14002e914:	lea    rdi,[rbx+0x111]
   14002e91b:	mov    QWORD PTR [rsi+0x518],rax
   14002e922:	mov    rcx,rdi
   14002e925:	call   0x140055df0
   14002e92a:	mov    rcx,QWORD PTR [rsi+0x518]
   14002e931:	mov    r8,rbx
   14002e934:	shl    r8,0x2
   14002e938:	xor    edx,edx
   14002e93a:	mov    QWORD PTR [rsi+0x4f0],rax
   14002e941:	call   0x140058f40
   14002e946:	mov    ecx,0x4000
   14002e94b:	call   0x140055df0
   14002e950:	mov    ecx,0x80000
   14002e955:	mov    QWORD PTR [rsi+0x4f8],rax
   14002e95c:	call   0x140055df0
   14002e961:	mov    ecx,0x100000
   14002e966:	mov    QWORD PTR [rsi+0x500],rax
   14002e96d:	call   0x140055df0
   14002e972:	mov    edx,DWORD PTR [rsi+0x520]
   14002e978:	lea    rcx,[r12-0x5]
   14002e97d:	mov    QWORD PTR [rsi+0x508],rax
   14002e984:	mov    eax,r12d
   14002e987:	mul    rdx
   14002e98a:	cmovo  rax,rcx
   14002e98e:	mov    rcx,rax
   14002e991:	call   0x140055df0
   14002e996:	mov    ecx,r13d
   14002e999:	mov    QWORD PTR [rsi+0x510],rax
   14002e9a0:	call   0x140055df0
   14002e9a5:	mov    ecx,ebp
   14002e9a7:	mov    QWORD PTR [rsi+0x1a5e8],rax
   14002e9ae:	shr    ecx,0x10
   14002e9b1:	lea    r13,[r12-0x5]
   14002e9b6:	inc    ecx
   14002e9b8:	mov    eax,0x4838
   14002e9bd:	mul    rcx
   14002e9c0:	mov    QWORD PTR [rsi+0x10],rcx
   14002e9c4:	cmovo  rax,r13
   14002e9c8:	mov    rcx,rax
   14002e9cb:	call   0x140055df0
   14002e9d0:	mov    ebx,DWORD PTR [rsi+0x21458]
   14002e9d6:	mov    QWORD PTR [rsi+0x8],rax
   14002e9da:	mov    eax,r12d
   14002e9dd:	shl    ebx,0xf
   14002e9e0:	mul    rbx
   14002e9e3:	cmovo  rax,r13
   14002e9e7:	mov    rcx,rax
   14002e9ea:	call   0x140055df0
   14002e9ef:	mov    rcx,QWORD PTR [rsi+0x4f0]
   14002e9f6:	mov    r8,rdi
   14002e9f9:	xor    edx,edx
   14002e9fb:	mov    QWORD PTR [rsi+0x18],rax
   14002e9ff:	call   0x140058f40
   14002ea04:	xor    edx,edx
   14002ea06:	mov    rcx,QWORD PTR [rsi+0x4f8]
   14002ea0d:	mov    r8d,0x4000
   14002ea13:	call   0x140058f40
   14002ea18:	mov    rcx,QWORD PTR [rsi+0x500]
   14002ea1f:	xor    edx,edx
   14002ea21:	mov    r8d,0x80000
   14002ea27:	call   0x140058f40
   14002ea2c:	mov    rcx,QWORD PTR [rsi+0x508]
   14002ea33:	xor    edx,edx
   14002ea35:	mov    r8d,0x100000
   14002ea3b:	call   0x140058f40
   14002ea40:	mov    r8d,DWORD PTR [rsi+0x520]
   14002ea47:	xor    edx,edx
   14002ea49:	mov    rcx,QWORD PTR [rsi+0x510]
   14002ea50:	shl    r8,0x2
   14002ea54:	call   0x140058f40
   14002ea59:	imul   r8,QWORD PTR [rsi+0x10],0x4838
   14002ea61:	mov    rcx,QWORD PTR [rsi+0x8]
   14002ea65:	xor    edx,edx
   14002ea67:	call   0x140058f40
   14002ea6c:	mov    rcx,QWORD PTR [rsi+0x18]
   14002ea70:	mov    r8d,ebx
   14002ea73:	shl    r8,0x2
   14002ea77:	xor    edx,edx
   14002ea79:	call   0x140058f40
   14002ea7e:	mov    ecx,ebp
   14002ea80:	lea    eax,[r12+0x3]
   14002ea85:	mul    rcx
   14002ea88:	cmovo  rax,r13
   14002ea8c:	mov    rcx,rax
   14002ea8f:	call   0x140055df0
   14002ea94:	mov    QWORD PTR [rsi+0x21348],rax
   14002ea9b:	mov    eax,DWORD PTR [rsi+0x21458]
   14002eaa1:	shl    eax,0x11
   14002eaa4:	mov    DWORD PTR [rsi+0x21468],eax
   14002eaaa:	cmp    eax,ebp
   14002eaac:	jbe    0x14002eab4
   14002eaae:	mov    DWORD PTR [rsi+0x21468],ebp
   14002eab4:	mov    ecx,DWORD PTR [rsi+0x21468]
   14002eaba:	mov    eax,0x8
   14002eabf:	mul    rcx
   14002eac2:	cmovo  rax,r13
   14002eac6:	mov    rcx,rax
   14002eac9:	call   0x140055df0
   14002eace:	xor    ebx,ebx
   14002ead0:	mov    QWORD PTR [rsi+0x21460],rax
   14002ead7:	cmp    DWORD PTR [rsi+0x21458],ebx
   14002eadd:	jbe    0x14002eafb
   14002eadf:	mov    ecx,0x890
   14002eae4:	call   0x140055dac
   14002eae9:	mov    QWORD PTR [rsi+rbx*8+0x21358],rax
   14002eaf1:	inc    ebx
   14002eaf3:	cmp    ebx,DWORD PTR [rsi+0x21458]
   14002eaf9:	jb     0x14002eadf
   14002eafb:	mov    rcx,rsi
   14002eafe:	call   0x14002f0c4
   14002eb03:	xor    edx,edx
   14002eb05:	mov    rcx,rsi
   14002eb08:	call   0x14002eb38
   14002eb0d:	xor    r8d,r8d
   14002eb10:	xor    edx,edx
   14002eb12:	mov    rcx,rsi
   14002eb15:	call   0x14002d150
   14002eb1a:	mov    rbx,QWORD PTR [rsp+0x40]
   14002eb1f:	mov    al,0x1
   14002eb21:	mov    rbp,QWORD PTR [rsp+0x48]
   14002eb26:	mov    rsi,QWORD PTR [rsp+0x50]
   14002eb2b:	add    rsp,0x20
   14002eb2f:	pop    r13
   14002eb31:	pop    r12
   14002eb33:	pop    rdi
   14002eb34:	ret    
   14002eb35:	int3   
   14002eb36:	int3   
   14002eb37:	int3   
   14002eb38:	mov    QWORD PTR [rsp+0x8],rbx
   14002eb3d:	mov    QWORD PTR [rsp+0x10],rsi
   14002eb42:	push   rdi
   14002eb43:	sub    rsp,0x20
   14002eb47:	mov    bl,dl
   14002eb49:	mov    rdi,rcx
   14002eb4c:	mov    rcx,QWORD PTR [rcx+0x4f8]
   14002eb53:	xor    edx,edx
   14002eb55:	mov    r8d,0x4000
   14002eb5b:	call   0x140058f40
   14002eb60:	xor    esi,esi
   14002eb62:	test   bl,bl
   14002eb64:	je     0x14002ec4d
   14002eb6a:	cmp    BYTE PTR [rdi+0x1c651],sil
   14002eb71:	jne    0x14002ec4d
   14002eb77:	mov    eax,DWORD PTR [rdi+0x520]
   14002eb7d:	mov    ecx,DWORD PTR [rdi+0x1c64c]
   14002eb83:	shr    eax,0x2
   14002eb86:	cmp    ecx,eax
   14002eb88:	ja     0x14002ec4d
   14002eb8e:	test   ecx,ecx
   14002eb90:	je     0x14002ec8e
   14002eb96:	mov    ebx,0x3ffff
   14002eb9b:	lea    r11d,[rsi+0x2]
   14002eb9f:	mov    r8,QWORD PTR [rdi+0x4f0]
   14002eba6:	lea    eax,[r11-0x2]
   14002ebaa:	lea    r10d,[r11+0x1]
   14002ebae:	movzx  eax,BYTE PTR [rax+r8*1]
   14002ebb3:	imul   edx,eax,0x2773
   14002ebb9:	lea    eax,[r11-0x1]
   14002ebbd:	movzx  eax,BYTE PTR [rax+r8*1]
   14002ebc2:	add    edx,eax
   14002ebc4:	mov    eax,r11d
   14002ebc7:	imul   r9d,edx,0x2773
   14002ebce:	movzx  ecx,BYTE PTR [rax+r8*1]
   14002ebd3:	mov    rax,QWORD PTR [rdi+0x500]
   14002ebda:	add    r9d,ecx
   14002ebdd:	mov    ecx,r9d
   14002ebe0:	and    rcx,rbx
   14002ebe3:	mov    WORD PTR [rax+rcx*2],si
   14002ebe7:	mov    rax,QWORD PTR [rdi+0x4f0]
   14002ebee:	movzx  r8d,BYTE PTR [r10+rax*1]
   14002ebf3:	imul   eax,r9d,0x2773
   14002ebfa:	add    r8d,eax
   14002ebfd:	mov    rax,QWORD PTR [rdi+0x508]
   14002ec04:	mov    ecx,r8d
   14002ec07:	and    rcx,rbx
   14002ec0a:	mov    DWORD PTR [rax+rcx*4],esi
   14002ec0d:	lea    ecx,[r11+0x2]
   14002ec11:	mov    rax,QWORD PTR [rdi+0x4f0]
   14002ec18:	mov    r11d,r10d
   14002ec1b:	movzx  ecx,BYTE PTR [rcx+rax*1]
   14002ec1f:	imul   eax,r8d,0x2773
   14002ec26:	add    ecx,eax
   14002ec28:	mov    eax,DWORD PTR [rdi+0x524]
   14002ec2e:	and    rcx,rax
   14002ec31:	mov    rax,QWORD PTR [rdi+0x510]
   14002ec38:	mov    DWORD PTR [rax+rcx*4],esi
   14002ec3b:	lea    eax,[r10-0x2]
   14002ec3f:	cmp    eax,DWORD PTR [rdi+0x1c64c]
   14002ec45:	jb     0x14002eb9f
   14002ec4b:	jmp    0x14002ec8e
   14002ec4d:	mov    rcx,QWORD PTR [rdi+0x500]
   14002ec54:	xor    edx,edx
   14002ec56:	mov    r8d,0x80000
   14002ec5c:	call   0x140058f40
   14002ec61:	mov    rcx,QWORD PTR [rdi+0x508]
   14002ec68:	xor    edx,edx
   14002ec6a:	mov    r8d,0x100000
   14002ec70:	call   0x140058f40
   14002ec75:	mov    r8d,DWORD PTR [rdi+0x520]
   14002ec7c:	xor    edx,edx
   14002ec7e:	mov    rcx,QWORD PTR [rdi+0x510]
   14002ec85:	shl    r8,0x2
   14002ec89:	call   0x140058f40
   14002ec8e:	mov    rbx,QWORD PTR [rsp+0x30]
   14002ec93:	mov    rsi,QWORD PTR [rsp+0x38]
   14002ec98:	add    rsp,0x20
   14002ec9c:	pop    rdi
   14002ec9d:	ret    
   14002ec9e:	int3   
   14002ec9f:	int3   
   14002eca0:	mov    QWORD PTR [rsp+0x8],rbx
   14002eca5:	mov    QWORD PTR [rsp+0x10],rsi
   14002ecaa:	mov    QWORD PTR [rsp+0x18],rdi
   14002ecaf:	mov    r9,QWORD PTR [rcx+0x4f0]
   14002ecb6:	mov    rsi,rcx
   14002ecb9:	movsxd rdi,edx
   14002ecbc:	mov    eax,edi
   14002ecbe:	movzx  r8d,BYTE PTR [rax+r9*1]
   14002ecc3:	lea    eax,[rdi+0x1]
   14002ecc6:	movzx  eax,BYTE PTR [rax+r9*1]
   14002eccb:	imul   ebx,r8d,0x2773
   14002ecd2:	add    ebx,eax
   14002ecd4:	lea    eax,[rdi+0x2]
   14002ecd7:	movzx  r11d,BYTE PTR [rax+r9*1]
   14002ecdc:	imul   eax,ebx,0x2773
   14002ece2:	add    r11d,eax
   14002ece5:	lea    eax,[rdi+0x3]
   14002ece8:	movzx  r10d,BYTE PTR [rax+r9*1]
   14002eced:	imul   eax,r11d,0x2773
   14002ecf4:	add    r10d,eax
   14002ecf7:	lea    eax,[rdi+0x4]
   14002ecfa:	movzx  edx,BYTE PTR [rax+r9*1]
   14002ecff:	mov    r9d,0x3ffff
   14002ed05:	imul   eax,r10d,0x2773
   14002ed0c:	add    edx,eax
   14002ed0e:	mov    rax,QWORD PTR [rcx+0x510]
   14002ed15:	and    edx,DWORD PTR [rcx+0x524]
   14002ed1b:	mov    r8d,edx
   14002ed1e:	mov    edx,DWORD PTR [rax+rdx*4]
   14002ed21:	and    edx,DWORD PTR [rcx+0x52c]
   14002ed27:	mov    ecx,ebx
   14002ed29:	mov    rax,QWORD PTR [rsi+0x4f8]
   14002ed30:	and    ecx,0x3fff
   14002ed36:	mov    rbx,QWORD PTR [rsp+0x8]
   14002ed3b:	mov    BYTE PTR [rcx+rax*1],dil
   14002ed3f:	mov    ecx,r11d
   14002ed42:	mov    rax,QWORD PTR [rsi+0x500]
   14002ed49:	and    rcx,r9
   14002ed4c:	mov    WORD PTR [rax+rcx*2],di
   14002ed50:	mov    ecx,r10d
   14002ed53:	mov    rax,QWORD PTR [rsi+0x508]
   14002ed5a:	and    rcx,r9
   14002ed5d:	mov    DWORD PTR [rax+rcx*4],edi
   14002ed60:	mov    rax,QWORD PTR [rsi+0x510]
   14002ed67:	mov    DWORD PTR [rax+r8*4],edi
   14002ed6b:	mov    rax,QWORD PTR [rsi+0x518]
   14002ed72:	mov    rsi,QWORD PTR [rsp+0x10]
   14002ed77:	mov    DWORD PTR [rax+rdi*4],edx
   14002ed7a:	mov    rdi,QWORD PTR [rsp+0x18]
   14002ed7f:	ret    
   14002ed80:	mov    rax,rsp
   14002ed83:	mov    QWORD PTR [rax+0x8],rbx
   14002ed87:	mov    QWORD PTR [rax+0x10],rbp
   14002ed8b:	mov    QWORD PTR [rax+0x18],rsi
   14002ed8f:	mov    QWORD PTR [rax+0x20],rdi
   14002ed93:	push   r12
   14002ed95:	push   r13
   14002ed97:	push   r14
   14002ed99:	push   r15
   14002ed9b:	mov    ebp,DWORD PTR [rdx+0x850]
   14002eda1:	mov    r15,rcx
   14002eda4:	cmp    ebp,0xc
   14002eda7:	jg     0x14002eec7
   14002edad:	mov    r13d,DWORD PTR [rdx+0x848]
   14002edb4:	xor    edi,edi
   14002edb6:	lea    r12d,[r13+0x1]
   14002edba:	cmp    BYTE PTR [rdx+0x860],0x0
   14002edc1:	je     0x14002edd2
   14002edc3:	cmp    rdi,0x3
   14002edc7:	jne    0x14002edd2
   14002edc9:	mov    r8d,DWORD PTR [rdx+0x858]
   14002edd0:	jmp    0x14002edda
   14002edd2:	mov    r8d,DWORD PTR [rdx+rdi*4+0x874]
   14002edda:	test   r8d,r8d
   14002eddd:	je     0x14002eeba
   14002ede3:	cmp    r8d,DWORD PTR [r15+0x530]
   14002edea:	ja     0x14002eeba
   14002edf0:	cmp    BYTE PTR [r15+0x1c651],0x0
   14002edf8:	jne    0x14002ee03
   14002edfa:	cmp    r8d,r13d
   14002edfd:	ja     0x14002eeba
   14002ee03:	mov    eax,DWORD PTR [rdx+0x854]
   14002ee09:	xor    r9d,r9d
   14002ee0c:	mov    rsi,QWORD PTR [r15+0x4f0]
   14002ee13:	mov    r11d,r12d
   14002ee16:	sub    r11d,r8d
   14002ee19:	and    r11d,DWORD PTR [r15+0x52c]
   14002ee20:	dec    eax
   14002ee22:	lea    r14d,[r9+0xa]
   14002ee26:	cmp    eax,r14d
   14002ee29:	cmovl  r14d,eax
   14002ee2d:	mov    eax,r11d
   14002ee30:	mov    al,BYTE PTR [r11+rsi*1]
   14002ee34:	cmp    BYTE PTR [r12+rsi*1],al
   14002ee38:	jne    0x14002ee56
   14002ee3a:	mov    ebx,r12d
   14002ee3d:	sub    r11d,r12d
   14002ee40:	cmp    r9d,r14d
   14002ee43:	jge    0x14002ee56
   14002ee45:	inc    ebx
   14002ee47:	inc    r9d
   14002ee4a:	lea    eax,[r11+rbx*1]
   14002ee4e:	mov    al,BYTE PTR [rax+rsi*1]
   14002ee51:	cmp    BYTE PTR [rbx+rsi*1],al
   14002ee54:	je     0x14002ee40
   14002ee56:	lea    ecx,[rbp-0x2]
   14002ee59:	cmp    r9d,ecx
   14002ee5c:	jl     0x14002eeba
   14002ee5e:	test   r8d,r8d
   14002ee61:	je     0x14002eeba
   14002ee63:	cmp    r9d,0x2
   14002ee67:	jne    0x14002ee72
   14002ee69:	cmp    r8d,0x100
   14002ee70:	jb     0x14002ee95
   14002ee72:	cmp    r9d,0x3
   14002ee76:	jne    0x14002ee81
   14002ee78:	cmp    r8d,0x2000
   14002ee7f:	jb     0x14002ee95
   14002ee81:	cmp    r9d,0x4
   14002ee85:	jne    0x14002ee93
   14002ee87:	cmp    r8d,0x40000
   14002ee8e:	jb     0x14002ee95
   14002ee90:	cmp    r9d,r9d
   14002ee93:	jle    0x14002eeba
   14002ee95:	lea    eax,[rbp-0x1]
   14002ee98:	cmp    r9d,eax
   14002ee9b:	jne    0x14002eea9
   14002ee9d:	cmp    DWORD PTR [rdx+0x84c],0x1000
   14002eea7:	jb     0x14002eeba
   14002eea9:	cmp    r9d,ecx
   14002eeac:	jne    0x14002eee6
   14002eeae:	cmp    DWORD PTR [rdx+0x84c],0x20000
   14002eeb8:	jae    0x14002eee6
   14002eeba:	inc    rdi
   14002eebd:	cmp    rdi,0x4
   14002eec1:	jl     0x14002edba
   14002eec7:	xor    al,al
   14002eec9:	mov    rbx,QWORD PTR [rsp+0x28]
   14002eece:	mov    rbp,QWORD PTR [rsp+0x30]
   14002eed3:	mov    rsi,QWORD PTR [rsp+0x38]
   14002eed8:	mov    rdi,QWORD PTR [rsp+0x40]
   14002eedd:	pop    r15
   14002eedf:	pop    r14
   14002eee1:	pop    r13
   14002eee3:	pop    r12
   14002eee5:	ret    
   14002eee6:	mov    al,0x1
   14002eee8:	jmp    0x14002eec9
   14002eeea:	int3   
   14002eeeb:	int3   
   14002eeec:	mov    QWORD PTR [rsp+0x8],rbx
   14002eef1:	mov    QWORD PTR [rsp+0x10],rbp
   14002eef6:	mov    QWORD PTR [rsp+0x18],rsi
   14002eefb:	push   rdi
   14002eefc:	sub    rsp,0x30
   14002ef00:	mov    esi,DWORD PTR [rcx+0x544]
   14002ef06:	mov    rdi,rcx
   14002ef09:	mov    ebp,0x1
   14002ef0e:	mov    eax,DWORD PTR [rdi+0x544]
   14002ef14:	test   esi,esi
   14002ef16:	cmove  esi,ebp
   14002ef19:	cmp    esi,eax
   14002ef1b:	je     0x14002effb
   14002ef21:	test   eax,eax
   14002ef23:	je     0x14002ef55
   14002ef25:	cmp    eax,0x2
   14002ef28:	jne    0x14002ef59
   14002ef2a:	mov    edx,DWORD PTR [rdi+0x21334]
   14002ef30:	lea    rbx,[rdi+0x1c668]
   14002ef37:	mov    rcx,rbx
   14002ef3a:	call   0x14004ac2c
   14002ef3f:	xor    edx,edx
   14002ef41:	mov    rcx,rbx
   14002ef44:	call   0x14004ac2c
   14002ef49:	xor    edx,edx
   14002ef4b:	mov    rcx,rbx
   14002ef4e:	call   0x14004ae6c
   14002ef53:	jmp    0x14002ef65
   14002ef55:	cmp    esi,ebp
   14002ef57:	je     0x14002ef65
   14002ef59:	lea    rcx,[rdi+0x21490]
   14002ef60:	call   0x1400118dc
   14002ef65:	cmp    esi,0x2
   14002ef68:	jne    0x14002effb
   14002ef6e:	mov    r8d,DWORD PTR [rdi+0x21338]
   14002ef75:	test   r8d,r8d
   14002ef78:	jne    0x14002ef9b
   14002ef7a:	mov    eax,DWORD PTR [rdi+0x538]
   14002ef80:	cmp    eax,0x4
   14002ef83:	jne    0x14002ef8b
   14002ef85:	lea    r8d,[rsi+0x6]
   14002ef89:	jmp    0x14002ef9b
   14002ef8b:	mov    ecx,0x6
   14002ef90:	cmp    eax,0x3
   14002ef93:	lea    r8d,[rcx-0x2]
   14002ef97:	cmove  r8d,ecx
   14002ef9b:	mov    r9d,DWORD PTR [rdi+0x2133c]
   14002efa2:	test   r9d,r9d
   14002efa5:	jne    0x14002efb3
   14002efa7:	mov    eax,DWORD PTR [rdi+0x538]
   14002efad:	add    eax,ebp
   14002efaf:	lea    r9d,[rax+rax*4]
   14002efb3:	mov    ecx,DWORD PTR [rdi+0x4e8]
   14002efb9:	lea    rdx,[rdi+0x21490]
   14002efc0:	cmp    ecx,DWORD PTR [rdi+0x21334]
   14002efc6:	mov    DWORD PTR [rdi+0x21334],ecx
   14002efcc:	setne  al
   14002efcf:	or     r10d,0xffffffff
   14002efd3:	test   al,al
   14002efd5:	mov    al,BYTE PTR [rdi+0x21330]
   14002efdb:	cmovne r10d,ecx
   14002efdf:	lea    rcx,[rdi+0x1c668]
   14002efe6:	mov    DWORD PTR [rsp+0x28],r10d
   14002efeb:	mov    BYTE PTR [rsp+0x20],al
   14002efef:	call   0x14004aeb4
   14002eff4:	mov    BYTE PTR [rdi+0x21330],0x0
   14002effb:	mov    ecx,esi
   14002effd:	mov    DWORD PTR [rdi+0x544],esi
   14002f003:	sub    ecx,ebp
   14002f005:	je     0x14002f023
   14002f007:	sub    ecx,ebp
   14002f009:	je     0x14002f019
   14002f00b:	cmp    ecx,ebp
   14002f00d:	jne    0x14002f02b
   14002f00f:	mov    rcx,rdi
   14002f012:	call   0x14002c900
   14002f017:	jmp    0x14002f02b
   14002f019:	mov    rcx,rdi
   14002f01c:	call   0x14002cd30
   14002f021:	jmp    0x14002f02b
   14002f023:	mov    rcx,rdi
   14002f026:	call   0x14002cb7c
   14002f02b:	mov    ecx,DWORD PTR [rdi+0x1a640]
   14002f031:	sub    ecx,ebp
   14002f033:	je     0x14002f085
   14002f035:	sub    ecx,ebp
   14002f037:	je     0x14002f068
   14002f039:	sub    ecx,ebp
   14002f03b:	je     0x14002f064
   14002f03d:	sub    ecx,ebp
   14002f03f:	je     0x14002f05d
   14002f041:	cmp    ecx,ebp
   14002f043:	jne    0x14002f08a
   14002f045:	mov    esi,DWORD PTR [rdi+0x544]
   14002f04b:	cmp    esi,ebp
   14002f04d:	jne    0x14002f08a
   14002f04f:	lea    rcx,[rdi+0x21490]
   14002f056:	call   0x1400118dc
   14002f05b:	jmp    0x14002f08a
   14002f05d:	mov    esi,0x3
   14002f062:	jmp    0x14002f08a
   14002f064:	mov    esi,ebp
   14002f066:	jmp    0x14002f08a
   14002f068:	mov    eax,DWORD PTR [rdi+0x1c64c]
   14002f06e:	lea    rcx,[rdi+0x1a638]
   14002f075:	cmp    DWORD PTR [rcx],eax
   14002f077:	jne    0x14002f07e
   14002f079:	call   0x140030df8
   14002f07e:	mov    BYTE PTR [rdi+0x21330],bpl
   14002f085:	mov    esi,0x2
   14002f08a:	mov    eax,DWORD PTR [rdi+0x534]
   14002f090:	cmp    DWORD PTR [rdi+0x1c64c],eax
   14002f096:	jne    0x14002ef0e
   14002f09c:	xor    edx,edx
   14002f09e:	mov    rcx,rdi
   14002f0a1:	call   0x14002f604
   14002f0a6:	test   eax,eax
   14002f0a8:	jne    0x14002ef0e
   14002f0ae:	mov    rbx,QWORD PTR [rsp+0x40]
   14002f0b3:	mov    rbp,QWORD PTR [rsp+0x48]
   14002f0b8:	mov    rsi,QWORD PTR [rsp+0x50]
   14002f0bd:	add    rsp,0x30
   14002f0c1:	pop    rdi
   14002f0c2:	ret    
   14002f0c3:	int3   
   14002f0c4:	rex push rbx
   14002f0c6:	sub    rsp,0x20
   14002f0ca:	mov    eax,DWORD PTR [rcx+0x21458]
   14002f0d0:	mov    rbx,rcx
   14002f0d3:	cmp    eax,0x4
   14002f0d6:	jae    0x14002f0e4
   14002f0d8:	mov    DWORD PTR [rcx+0x21488],0x1
   14002f0e2:	jmp    0x14002f0f5
   14002f0e4:	cmp    eax,0x8
   14002f0e7:	sbb    eax,eax
   14002f0e9:	and    eax,0xfffffffe
   14002f0ec:	add    eax,0x4
   14002f0ef:	mov    DWORD PTR [rcx+0x21488],eax
   14002f0f5:	mov    ecx,0x200000
   14002f0fa:	call   0x140055df0
   14002f0ff:	xor    edx,edx
   14002f101:	mov    QWORD PTR [rbx+0x21470],rax
   14002f108:	mov    r8d,0x200000
   14002f10e:	mov    rcx,rax
   14002f111:	add    rsp,0x20
   14002f115:	pop    rbx
   14002f116:	jmp    0x140058f40
   14002f11b:	int3   
   14002f11c:	mov    QWORD PTR [rsp+0x8],rbx
   14002f121:	mov    QWORD PTR [rsp+0x18],rbp
   14002f126:	mov    QWORD PTR [rsp+0x20],rsi
   14002f12b:	push   rdi
   14002f12c:	push   r12
   14002f12e:	push   r13
   14002f130:	push   r14
   14002f132:	push   r15
   14002f134:	sub    rsp,0x20
   14002f138:	cmp    BYTE PTR [rdx+0x82c],0x0
   14002f13f:	mov    rbx,rdx
   14002f142:	mov    rsi,rcx
   14002f145:	jne    0x14002f353
   14002f14b:	mov    eax,DWORD PTR [rdx+0xc]
   14002f14e:	xor    r9d,r9d
   14002f151:	sub    eax,0xc1
   14002f156:	test   eax,eax
   14002f158:	jle    0x14002f253
   14002f15e:	mov    edi,DWORD PTR [rbx+0x8]
   14002f161:	mov    r13,QWORD PTR [rsi+0x518]
   14002f168:	add    edi,r9d
   14002f16b:	xor    r12d,r12d
   14002f16e:	mov    r11d,DWORD PTR [r13+rdi*4+0x0]
   14002f173:	lea    r8d,[rdi+0xbf]
   14002f17a:	mov    QWORD PTR [rsp+0x58],r8
   14002f17f:	mov    eax,edi
   14002f181:	sub    eax,r11d
   14002f184:	and    eax,DWORD PTR [rsi+0x52c]
   14002f18a:	je     0x14002f23e
   14002f190:	cmp    eax,DWORD PTR [rsi+0x530]
   14002f196:	jae    0x14002f23e
   14002f19c:	mov    rdx,QWORD PTR [rsi+0x4f0]
   14002f1a3:	lea    ecx,[r11+0xbf]
   14002f1aa:	mov    al,BYTE PTR [rdx+r8*1]
   14002f1ae:	cmp    BYTE PTR [rcx+rdx*1],al
   14002f1b1:	jne    0x14002f206
   14002f1b3:	xor    r10d,r10d
   14002f1b6:	cmp    r9d,DWORD PTR [rbx+0xc]
   14002f1ba:	jge    0x14002f206
   14002f1bc:	mov    r15d,r11d
   14002f1bf:	mov    r14d,r9d
   14002f1c2:	sub    r15d,edi
   14002f1c5:	mov    ebp,edi
   14002f1c7:	sub    r14d,edi
   14002f1ca:	cmp    r10d,0xc0
   14002f1d1:	jge    0x14002f21c
   14002f1d3:	mov    r8,QWORD PTR [rsi+0x4f0]
   14002f1da:	lea    edx,[r15+rbp*1]
   14002f1de:	mov    eax,ebp
   14002f1e0:	mov    cl,BYTE PTR [rax+r8*1]
   14002f1e4:	cmp    BYTE PTR [rdx+r8*1],cl
   14002f1e8:	jne    0x14002f1f8
   14002f1ea:	inc    ebp
   14002f1ec:	inc    r10d
   14002f1ef:	lea    eax,[r14+rbp*1]
   14002f1f3:	cmp    eax,DWORD PTR [rbx+0xc]
   14002f1f6:	jl     0x14002f1ca
   14002f1f8:	cmp    r10d,0xc0
   14002f1ff:	jge    0x14002f21c
   14002f201:	mov    r8,QWORD PTR [rsp+0x58]
   14002f206:	mov    eax,r11d
   14002f209:	inc    r12d
   14002f20c:	mov    r11d,DWORD PTR [r13+rax*4+0x0]
   14002f211:	cmp    r12d,0x5
   14002f215:	jae    0x14002f23e
   14002f217:	jmp    0x14002f17f
   14002f21c:	mov    eax,r9d
   14002f21f:	test   r9d,r9d
   14002f222:	jns    0x14002f22b
   14002f224:	lea    eax,[r9+0xff]
   14002f22b:	sar    eax,0x8
   14002f22e:	cdqe   
   14002f230:	add    r9d,r10d
   14002f233:	mov    DWORD PTR [rbx+rax*4+0x418],0x101
   14002f23e:	mov    eax,DWORD PTR [rbx+0xc]
   14002f241:	add    r9d,0x10
   14002f245:	sub    eax,0xc1
   14002f24a:	cmp    r9d,eax
   14002f24d:	jl     0x14002f15e
   14002f253:	cmp    DWORD PTR [rsi+0xe4],0x2
   14002f25a:	je     0x14002f296
   14002f25c:	mov    eax,DWORD PTR [rbx+0x818]
   14002f262:	xor    edx,edx
   14002f264:	test   eax,eax
   14002f266:	je     0x14002f28b
   14002f268:	lea    rcx,[rbx+0x418]
   14002f26f:	mov    r8d,eax
   14002f272:	cmp    DWORD PTR [rcx],0x46
   14002f275:	jl     0x14002f27f
   14002f277:	cmp    DWORD PTR [rcx],0x101
   14002f27d:	jne    0x14002f281
   14002f27f:	inc    edx
   14002f281:	add    rcx,0x4
   14002f285:	sub    r8,0x1
   14002f289:	jne    0x14002f272
   14002f28b:	shr    eax,0x2
   14002f28e:	cmp    edx,eax
   14002f290:	setb   al
   14002f293:	mov    BYTE PTR [rbx+0x10],al
   14002f296:	cmp    BYTE PTR [rbx+0x10],0x0
   14002f29a:	jne    0x14002f2e7
   14002f29c:	mov    edi,0x10000
   14002f2a1:	cmp    DWORD PTR [rbx+0xc],edi
   14002f2a4:	jne    0x14002f2e7
   14002f2a6:	mov    ecx,DWORD PTR [rbx+0x8]
   14002f2a9:	xor    r9d,r9d
   14002f2ac:	add    rcx,QWORD PTR [rsi+0x4f0]
   14002f2b3:	xor    r8d,r8d
   14002f2b6:	lea    edx,[r9+0x11]
   14002f2ba:	mov    r11b,BYTE PTR [rcx]
   14002f2bd:	lea    ebp,[rdx+0x1f]
   14002f2c0:	mov    r10d,edx
   14002f2c3:	cmp    BYTE PTR [r8+rcx*1],r11b
   14002f2c7:	jne    0x14002f2e7
   14002f2c9:	mov    eax,ebp
   14002f2cb:	add    r9d,edx
   14002f2ce:	sub    eax,edx
   14002f2d0:	add    r8,r10
   14002f2d3:	mov    edx,eax
   14002f2d5:	mov    rax,rbp
   14002f2d8:	sub    rax,r10
   14002f2db:	mov    r10,rax
   14002f2de:	cmp    r9d,edi
   14002f2e1:	jl     0x14002f2c3
   14002f2e3:	mov    BYTE PTR [rbx+0x10],0x1
   14002f2e7:	lea    rdi,[rbx+0x14]
   14002f2eb:	xor    edx,edx
   14002f2ed:	mov    rcx,rdi
   14002f2f0:	mov    r8d,0x400
   14002f2f6:	call   0x140058f40
   14002f2fb:	xor    r8d,r8d
   14002f2fe:	cmp    DWORD PTR [rbx+0xc],r8d
   14002f302:	jle    0x14002f322
   14002f304:	mov    ecx,DWORD PTR [rbx+0x8]
   14002f307:	mov    rax,QWORD PTR [rsi+0x4f0]
   14002f30e:	add    ecx,r8d
   14002f311:	inc    r8d
   14002f314:	movzx  edx,BYTE PTR [rcx+rax*1]
   14002f318:	inc    DWORD PTR [rbx+rdx*4+0x14]
   14002f31c:	cmp    r8d,DWORD PTR [rbx+0xc]
   14002f320:	jl     0x14002f304
   14002f322:	cmp    DWORD PTR [rsi+0xe4],0x2
   14002f329:	je     0x14002f353
   14002f32b:	cmp    BYTE PTR [rbx+0x10],0x0
   14002f32f:	je     0x14002f353
   14002f331:	xor    eax,eax
   14002f333:	mov    ecx,0x100
   14002f338:	cmp    DWORD PTR [rdi],0xc
   14002f33b:	jbe    0x14002f33f
   14002f33d:	inc    eax
   14002f33f:	add    rdi,0x4
   14002f343:	sub    rcx,0x1
   14002f347:	jne    0x14002f338
   14002f349:	cmp    eax,0x80
   14002f34e:	jbe    0x14002f353
   14002f350:	mov    BYTE PTR [rbx+0x10],cl
   14002f353:	mov    rbx,QWORD PTR [rsp+0x50]
   14002f358:	mov    rbp,QWORD PTR [rsp+0x60]
   14002f35d:	mov    rsi,QWORD PTR [rsp+0x68]
   14002f362:	add    rsp,0x20
   14002f366:	pop    r15
   14002f368:	pop    r14
   14002f36a:	pop    r13
   14002f36c:	pop    r12
   14002f36e:	pop    rdi
   14002f36f:	ret    
   14002f370:	mov    QWORD PTR [rsp+0x8],rbx
   14002f375:	mov    QWORD PTR [rsp+0x10],rsi
   14002f37a:	push   rdi
   14002f37b:	sub    rsp,0x20
   14002f37f:	mov    BYTE PTR [rcx+0x1c651],0x0
   14002f386:	mov    rdi,rdx
   14002f389:	mov    al,BYTE PTR [rdx+0x4daa]
   14002f38f:	mov    rbx,rcx
   14002f392:	mov    BYTE PTR [rcx+0x1c650],al
   14002f398:	mov    esi,r8d
   14002f39b:	mov    eax,DWORD PTR [rdx+0xe6f8]
   14002f3a1:	add    rdx,0xe6fc
   14002f3a8:	mov    DWORD PTR [rcx+0x21334],eax
   14002f3ae:	add    rcx,0x21490
   14002f3b5:	call   0x1400121dc
   14002f3ba:	mov    eax,DWORD PTR [rbx+0x528]
   14002f3c0:	mov    rcx,QWORD PTR [rdi+0xe960]
   14002f3c7:	cmp    rax,rcx
   14002f3ca:	mov    r8,rcx
   14002f3cd:	cmovb  r8,rax
   14002f3d1:	dec    r8
   14002f3d4:	cmp    BYTE PTR [rdi+0x4da9],0x0
   14002f3db:	jne    0x14002f3eb
   14002f3dd:	mov    rax,QWORD PTR [rdi+0xc8]
   14002f3e4:	cmp    r8,rax
   14002f3e7:	cmovae r8,rax
   14002f3eb:	mov    r10,QWORD PTR [rdi+0x4b90]
   14002f3f2:	lea    r11,[rcx-0x1]
   14002f3f6:	mov    r9,QWORD PTR [rdi+0xc8]
   14002f3fd:	mov    edx,0x1
   14002f402:	cmp    rdx,r8
   14002f405:	ja     0x14002f42d
   14002f407:	dec    r9
   14002f40a:	mov    rcx,QWORD PTR [rbx+0x4f0]
   14002f411:	mov    rax,r9
   14002f414:	sub    rcx,rdx
   14002f417:	and    rax,r11
   14002f41a:	inc    rdx
   14002f41d:	dec    r9
   14002f420:	mov    al,BYTE PTR [rax+r10*1]
   14002f424:	mov    BYTE PTR [rcx+r8*1],al
   14002f428:	cmp    rdx,r8
   14002f42b:	jbe    0x14002f40a
   14002f42d:	mov    eax,DWORD PTR [rbx+0x52c]
   14002f433:	and    eax,r8d
   14002f436:	mov    DWORD PTR [rbx+0x1c64c],eax
   14002f43c:	mov    DWORD PTR [rbx+0x21350],eax
   14002f442:	test   esi,esi
   14002f444:	jne    0x14002f4ad
   14002f446:	xor    r10d,r10d
   14002f449:	test   eax,eax
   14002f44b:	je     0x14002f4c7
   14002f44d:	mov    r9,QWORD PTR [rbx+0x4f0]
   14002f454:	lea    r8d,[r10+0x2]
   14002f458:	lea    eax,[r8-0x1]
   14002f45c:	movzx  eax,BYTE PTR [rax+r9*1]
   14002f461:	movzx  ecx,BYTE PTR [r10+r9*1]
   14002f466:	imul   edx,eax,0x2773
   14002f46c:	imul   eax,ecx,0x3da9
   14002f472:	movzx  ecx,BYTE PTR [r8+r9*1]
   14002f477:	add    edx,eax
   14002f479:	mov    rax,QWORD PTR [rbx+0x510]
   14002f480:	add    edx,ecx
   14002f482:	movzx  ecx,dx
   14002f485:	mov    edx,DWORD PTR [rax+rcx*4]
   14002f488:	and    edx,DWORD PTR [rbx+0x52c]
   14002f48e:	mov    DWORD PTR [rax+rcx*4],r10d
   14002f492:	mov    rax,QWORD PTR [rbx+0x518]
   14002f499:	movsxd rcx,r10d
   14002f49c:	inc    r10d
   14002f49f:	mov    DWORD PTR [rax+rcx*4],edx
   14002f4a2:	cmp    r10d,DWORD PTR [rbx+0x1c64c]
   14002f4a9:	jb     0x14002f44d
   14002f4ab:	jmp    0x14002f4c7
   14002f4ad:	xor    esi,esi
   14002f4af:	test   eax,eax
   14002f4b1:	je     0x14002f4c7
   14002f4b3:	mov    edx,esi
   14002f4b5:	mov    rcx,rbx
   14002f4b8:	call   0x14002eca0
   14002f4bd:	inc    esi
   14002f4bf:	cmp    esi,DWORD PTR [rbx+0x1c64c]
   14002f4c5:	jb     0x14002f4b3
   14002f4c7:	mov    r8d,0x99
   14002f4cd:	mov    BYTE PTR [rbx+0x21330],0x0
   14002f4d4:	lea    rcx,[rdi+0x9a30]
   14002f4db:	lea    rdx,[rbx+0x1c668]
   14002f4e2:	mov    rax,rcx
   14002f4e5:	lea    r9d,[r8-0x19]
   14002f4e9:	movups xmm0,XMMWORD PTR [rax]
   14002f4ec:	movups XMMWORD PTR [rdx],xmm0
   14002f4ef:	movups xmm1,XMMWORD PTR [rax+0x10]
   14002f4f3:	movups XMMWORD PTR [rdx+0x10],xmm1
   14002f4f7:	movups xmm0,XMMWORD PTR [rax+0x20]
   14002f4fb:	movups XMMWORD PTR [rdx+0x20],xmm0
   14002f4ff:	movups xmm1,XMMWORD PTR [rax+0x30]
   14002f503:	movups XMMWORD PTR [rdx+0x30],xmm1
   14002f507:	movups xmm0,XMMWORD PTR [rax+0x40]
   14002f50b:	movups XMMWORD PTR [rdx+0x40],xmm0
   14002f50f:	movups xmm1,XMMWORD PTR [rax+0x50]
   14002f513:	movups XMMWORD PTR [rdx+0x50],xmm1
   14002f517:	movups xmm0,XMMWORD PTR [rax+0x60]
   14002f51b:	movups XMMWORD PTR [rdx+0x60],xmm0
   14002f51f:	add    rdx,r9
   14002f522:	movups xmm1,XMMWORD PTR [rax+0x70]
   14002f526:	add    rax,r9
   14002f529:	movups XMMWORD PTR [rdx-0x10],xmm1
   14002f52d:	sub    r8,0x1
   14002f531:	jne    0x14002f4e9
   14002f533:	movups xmm0,XMMWORD PTR [rax]
   14002f536:	movups XMMWORD PTR [rdx],xmm0
   14002f539:	movups xmm1,XMMWORD PTR [rax+0x10]
   14002f53d:	movups XMMWORD PTR [rdx+0x10],xmm1
   14002f541:	movups xmm0,XMMWORD PTR [rax+0x20]
   14002f545:	movups XMMWORD PTR [rdx+0x20],xmm0
   14002f549:	movups xmm1,XMMWORD PTR [rax+0x30]
   14002f54d:	movups XMMWORD PTR [rdx+0x30],xmm1
   14002f551:	mov    rax,QWORD PTR [rax+0x40]
   14002f555:	mov    QWORD PTR [rdx+0x40],rax
   14002f559:	call   0x140049f0c
   14002f55e:	and    DWORD PTR [rbx+0x1a5d8],0x0
   14002f565:	and    DWORD PTR [rbx+0x1a5dc],0x0
   14002f56c:	mov    rsi,QWORD PTR [rsp+0x38]
   14002f571:	mov    BYTE PTR [rbx+0x1a5e0],0x1
   14002f578:	mov    rbx,QWORD PTR [rsp+0x30]
   14002f57d:	add    rsp,0x20
   14002f581:	pop    rdi
   14002f582:	ret    
   14002f583:	int3   
   14002f584:	test   r8d,r8d
   14002f587:	je     0x14002f602
   14002f589:	mov    QWORD PTR [rsp+0x8],rbx
   14002f58e:	mov    QWORD PTR [rsp+0x10],rsi
   14002f593:	mov    QWORD PTR [rsp+0x18],rdi
   14002f598:	push   r14
   14002f59a:	sub    rsp,0x20
   14002f59e:	mov    esi,r8d
   14002f5a1:	mov    r14,rdx
   14002f5a4:	mov    rbx,rcx
   14002f5a7:	mov    edi,DWORD PTR [rbx+0x18]
   14002f5aa:	sub    edi,DWORD PTR [rbx+0x1c]
   14002f5ad:	cmp    esi,edi
   14002f5af:	cmovb  edi,esi
   14002f5b2:	test   edi,edi
   14002f5b4:	je     0x14002f5d0
   14002f5b6:	mov    ecx,DWORD PTR [rbx+0x1c]
   14002f5b9:	mov    rdx,r14
   14002f5bc:	mov    rax,QWORD PTR [rbx+0x10]
   14002f5c0:	mov    r8d,edi
   14002f5c3:	shl    r8,0x3
   14002f5c7:	lea    rcx,[rax+rcx*8]
   14002f5cb:	call   0x140059180
   14002f5d0:	add    DWORD PTR [rbx+0x1c],edi
   14002f5d3:	lea    r14,[r14+rdi*8]
   14002f5d7:	mov    eax,DWORD PTR [rbx+0x1c]
   14002f5da:	sub    esi,edi
   14002f5dc:	cmp    eax,DWORD PTR [rbx+0x18]
   14002f5df:	jne    0x14002f5e9
   14002f5e1:	mov    rcx,rbx
   14002f5e4:	call   0x1400118dc
   14002f5e9:	test   esi,esi
   14002f5eb:	jne    0x14002f5a7
   14002f5ed:	mov    rbx,QWORD PTR [rsp+0x30]
   14002f5f2:	mov    rsi,QWORD PTR [rsp+0x38]
   14002f5f7:	mov    rdi,QWORD PTR [rsp+0x40]
   14002f5fc:	add    rsp,0x20
   14002f600:	pop    r14
   14002f602:	ret    
   14002f603:	int3   
   14002f604:	mov    QWORD PTR [rsp+0x18],rbx
   14002f609:	push   rbp
   14002f60a:	push   rsi
   14002f60b:	push   rdi
   14002f60c:	push   r12
   14002f60e:	push   r13
   14002f610:	push   r14
   14002f612:	push   r15
   14002f614:	sub    rsp,0x30
   14002f618:	mov    bl,dl
   14002f61a:	lea    r12,[rcx+0x1a638]
   14002f621:	mov    edx,DWORD PTR [rcx+0x52c]
   14002f627:	mov    rdi,rcx
   14002f62a:	mov    rcx,r12
   14002f62d:	call   0x140030e60
   14002f632:	test   bl,bl
   14002f634:	jne    0x14002f646
   14002f636:	cmp    DWORD PTR [rdi+0x534],0x0
   14002f63d:	jne    0x14002f646
   14002f63f:	mov    BYTE PTR [rdi+0x1c651],0x1
   14002f646:	mov    eax,DWORD PTR [rdi+0x528]
   14002f64c:	mov    esi,eax
   14002f64e:	mov    ebp,DWORD PTR [rdi+0x534]
   14002f654:	sub    esi,ebp
   14002f656:	shr    eax,1
   14002f658:	cmp    eax,esi
   14002f65a:	cmovb  esi,eax
   14002f65d:	add    rbp,QWORD PTR [rdi+0x4f0]
   14002f664:	mov    eax,DWORD PTR [rdi+0x1a5f8]
   14002f66a:	xor    r13b,r13b
   14002f66d:	test   eax,eax
   14002f66f:	jne    0x14002f73b
   14002f675:	mov    rcx,QWORD PTR [rdi+0x1c660]
   14002f67c:	mov    rdx,rbp
   14002f67f:	movsxd r8,esi
   14002f682:	call   0x140037068
   14002f687:	mov    esi,eax
   14002f689:	test   eax,eax
   14002f68b:	je     0x14002f697
   14002f68d:	mov    r13b,0x1
   14002f690:	mov    BYTE PTR [rdi+0x1c650],r13b
   14002f697:	mov    QWORD PTR [rsp+0x70],rbp
   14002f69c:	mov    ebx,esi
   14002f69e:	mov    DWORD PTR [rsp+0x78],ebx
   14002f6a2:	mov    r14,rbp
   14002f6a5:	cmp    esi,0x80
   14002f6ab:	jbe    0x14002f6f6
   14002f6ad:	mov    edx,DWORD PTR [rdi+0x534]
   14002f6b3:	lea    r9,[rdi+0x550]
   14002f6ba:	mov    r8d,esi
   14002f6bd:	mov    QWORD PTR [rsp+0x20],0x400
   14002f6c6:	mov    rcx,rdi
   14002f6c9:	call   0x14002af4c
   14002f6ce:	mov    r9d,DWORD PTR [rdi+0x534]
   14002f6d5:	lea    r8,[rsp+0x78]
   14002f6da:	lea    rdx,[rsp+0x70]
   14002f6df:	mov    DWORD PTR [rdi+0x4550],eax
   14002f6e5:	mov    rcx,rdi
   14002f6e8:	call   0x14002b474
   14002f6ed:	mov    r14,QWORD PTR [rsp+0x70]
   14002f6f2:	mov    ebx,DWORD PTR [rsp+0x78]
   14002f6f6:	add    QWORD PTR [rdi+0x1c658],rsi
   14002f6fd:	cmp    ebx,esi
   14002f6ff:	ja     0x14002f718
   14002f701:	mov    esi,ebx
   14002f703:	cmp    r14,rbp
   14002f706:	je     0x14002f761
   14002f708:	mov    r8d,ebx
   14002f70b:	mov    rdx,r14
   14002f70e:	mov    rcx,rbp
   14002f711:	call   0x140059180
   14002f716:	jmp    0x14002f761
   14002f718:	mov    r8,rsi
   14002f71b:	mov    rdx,r14
   14002f71e:	mov    rcx,rbp
   14002f721:	call   0x140059180
   14002f726:	sub    ebx,esi
   14002f728:	lea    rax,[rsi+r14*1]
   14002f72c:	mov    DWORD PTR [rdi+0x1a5f8],ebx
   14002f732:	mov    QWORD PTR [rdi+0x1a5f0],rax
   14002f739:	jmp    0x14002f761
   14002f73b:	mov    rdx,QWORD PTR [rdi+0x1a5f0]
   14002f742:	cmp    eax,esi
   14002f744:	mov    rcx,rbp
   14002f747:	cmovl  esi,eax
   14002f74a:	mov    r8d,esi
   14002f74d:	mov    ebx,esi
   14002f74f:	call   0x140059180
   14002f754:	sub    DWORD PTR [rdi+0x1a5f8],esi
   14002f75a:	add    QWORD PTR [rdi+0x1a5f0],rbx
   14002f761:	cmp    DWORD PTR [rdi+0x534],0x111
   14002f76b:	ja     0x14002f7e0
   14002f76d:	mov    rcx,QWORD PTR [rdi+0x4f0]
   14002f774:	mov    eax,0x2
   14002f779:	mov    edx,DWORD PTR [rdi+0x528]
   14002f77f:	add    rdx,rcx
   14002f782:	movups xmm0,XMMWORD PTR [rcx]
   14002f785:	lea    rcx,[rcx+0x80]
   14002f78c:	movups XMMWORD PTR [rdx],xmm0
   14002f78f:	lea    rdx,[rdx+0x80]
   14002f796:	movups xmm1,XMMWORD PTR [rcx-0x70]
   14002f79a:	movups XMMWORD PTR [rdx-0x70],xmm1
   14002f79e:	movups xmm0,XMMWORD PTR [rcx-0x60]
   14002f7a2:	movups XMMWORD PTR [rdx-0x60],xmm0
   14002f7a6:	movups xmm1,XMMWORD PTR [rcx-0x50]
   14002f7aa:	movups XMMWORD PTR [rdx-0x50],xmm1
   14002f7ae:	movups xmm0,XMMWORD PTR [rcx-0x40]
   14002f7b2:	movups XMMWORD PTR [rdx-0x40],xmm0
   14002f7b6:	movups xmm1,XMMWORD PTR [rcx-0x30]
   14002f7ba:	movups XMMWORD PTR [rdx-0x30],xmm1
   14002f7be:	movups xmm0,XMMWORD PTR [rcx-0x20]
   14002f7c2:	movups XMMWORD PTR [rdx-0x20],xmm0
   14002f7c6:	movups xmm1,XMMWORD PTR [rcx-0x10]
   14002f7ca:	movups XMMWORD PTR [rdx-0x10],xmm1
   14002f7ce:	sub    rax,0x1
   14002f7d2:	jne    0x14002f782
   14002f7d4:	movups xmm0,XMMWORD PTR [rcx]
   14002f7d7:	movups XMMWORD PTR [rdx],xmm0
   14002f7da:	mov    al,BYTE PTR [rcx+0x10]
   14002f7dd:	mov    BYTE PTR [rdx+0x10],al
   14002f7e0:	test   esi,esi
   14002f7e2:	je     0x14002f7f5
   14002f7e4:	mov    edx,DWORD PTR [rdi+0x534]
   14002f7ea:	mov    r8d,esi
   14002f7ed:	mov    rcx,rdi
   14002f7f0:	call   0x14002bea4
   14002f7f5:	test   r13b,r13b
   14002f7f8:	je     0x14002f814
   14002f7fa:	and    QWORD PTR [rsp+0x20],0x0
   14002f800:	xor    r9d,r9d
   14002f803:	mov    edx,DWORD PTR [rdi+0x534]
   14002f809:	mov    r8d,esi
   14002f80c:	mov    rcx,rdi
   14002f80f:	call   0x14002af4c
   14002f814:	mov    edx,DWORD PTR [rdi+0x534]
   14002f81a:	mov    r8d,0x6
   14002f820:	add    edx,esi
   14002f822:	mov    rcx,r12
   14002f825:	and    edx,DWORD PTR [rdi+0x52c]
   14002f82b:	mov    DWORD PTR [rdi+0x534],edx
   14002f831:	call   0x140030d90
   14002f836:	mov    rbx,QWORD PTR [rsp+0x80]
   14002f83e:	mov    eax,esi
   14002f840:	add    rsp,0x30
   14002f844:	pop    r15
   14002f846:	pop    r14
   14002f848:	pop    r13
   14002f84a:	pop    r12
   14002f84c:	pop    rdi
   14002f84d:	pop    rsi
   14002f84e:	pop    rbp
   14002f84f:	ret    
   14002f850:	mov    rdx,rcx
   14002f853:	mov    rcx,QWORD PTR [rcx]
   14002f856:	jmp    0x14002f85c
   14002f85b:	int3   
   14002f85c:	mov    QWORD PTR [rsp+0x8],rbx
   14002f861:	mov    QWORD PTR [rsp+0x10],rbp
   14002f866:	mov    QWORD PTR [rsp+0x18],rsi
   14002f86b:	push   rdi
   14002f86c:	push   r12
   14002f86e:	push   r13
   14002f870:	push   r14
   14002f872:	push   r15
   14002f874:	sub    rsp,0x20
   14002f878:	xor    r15d,r15d
   14002f87b:	xor    eax,eax
   14002f87d:	mov    DWORD PTR [rdx+0x18],r15d
   14002f881:	mov    rsi,rdx
   14002f884:	mov    DWORD PTR [rdx+0x888],r15d
   14002f88b:	mov    rbp,rcx
   14002f88e:	mov    QWORD PTR [rdx+0x874],rax
   14002f895:	mov    QWORD PTR [rdx+0x87c],rax
   14002f89c:	cmp    DWORD PTR [rcx+0x538],r15d
   14002f8a3:	jne    0x14002f8af
   14002f8a5:	call   0x14002fcd0
   14002f8aa:	jmp    0x14002fcb0
   14002f8af:	lea    rdi,[rdx+0x1c]
   14002f8b3:	mov    BYTE PTR [rdx+0x860],r15b
   14002f8ba:	mov    BYTE PTR [rdx+0x870],r15b
   14002f8c1:	mov    r14d,0x408
   14002f8c7:	mov    DWORD PTR [rdx+0x868],r15d
   14002f8ce:	mov    r8d,r14d
   14002f8d1:	mov    rcx,rdi
   14002f8d4:	xor    edx,edx
   14002f8d6:	call   0x140058f40
   14002f8db:	lea    rbx,[rsi+0x424]
   14002f8e2:	mov    r8d,r14d
   14002f8e5:	mov    rcx,rbx
   14002f8e8:	xor    edx,edx
   14002f8ea:	call   0x140058f40
   14002f8ef:	mov    QWORD PTR [rsi+0x830],rdi
   14002f8f6:	mov    edi,r15d
   14002f8f9:	mov    QWORD PTR [rsi+0x838],rbx
   14002f900:	mov    QWORD PTR [rsi+0x840],r15
   14002f907:	cmp    DWORD PTR [rsi+0xc],r15d
   14002f90b:	jbe    0x14002fc5a
   14002f911:	mov    ecx,DWORD PTR [rsi+0xc]
   14002f914:	mov    eax,0x101
   14002f919:	mov    ebx,DWORD PTR [rsi+0x8]
   14002f91c:	sub    ecx,edi
   14002f91e:	cmp    ecx,eax
   14002f920:	cmovb  eax,ecx
   14002f923:	add    ebx,edi
   14002f925:	mov    DWORD PTR [rsi+0x854],eax
   14002f92b:	and    ebx,DWORD PTR [rbp+0x52c]
   14002f931:	mov    DWORD PTR [rsi+0x848],ebx
   14002f937:	mov    ecx,ebx
   14002f939:	sub    ecx,DWORD PTR [rbp+0x21350]
   14002f93f:	mov    r10d,ebx
   14002f942:	mov    r9d,DWORD PTR [rbp+0x52c]
   14002f949:	and    r10d,0xffffff00
   14002f950:	and    rcx,r9
   14002f953:	imul   rdx,rcx,0x7
   14002f957:	add    rdx,QWORD PTR [rbp+0x21348]
   14002f95e:	movzx  eax,BYTE PTR [rdx]
   14002f961:	movzx  r8d,WORD PTR [rdx+0x1]
   14002f966:	or     r10d,eax
   14002f969:	mov    r11d,DWORD PTR [rdx+0x3]
   14002f96d:	mov    eax,ebx
   14002f96f:	and    eax,0xffff0000
   14002f974:	or     r8d,eax
   14002f977:	cmp    r8d,ebx
   14002f97a:	jb     0x14002f986
   14002f97c:	add    r8d,0xffff0000
   14002f983:	and    r8d,r9d
   14002f986:	cmp    r10d,ebx
   14002f989:	jb     0x14002f995
   14002f98b:	add    r10d,0xffffff00
   14002f992:	and    r10d,r9d
   14002f995:	mov    rdx,QWORD PTR [rbp+0x4f0]
   14002f99c:	lea    eax,[rbx+0x1]
   14002f99f:	mov    r9b,BYTE PTR [r11+rdx*1]
   14002f9a3:	mov    r15b,BYTE PTR [r8+rdx*1]
   14002f9a7:	mov    r13b,BYTE PTR [r10+rdx*1]
   14002f9ab:	mov    r12b,BYTE PTR [rbx+rdx*1]
   14002f9af:	mov    r14b,BYTE PTR [rax+rdx*1]
   14002f9b3:	mov    edx,0x2
   14002f9b8:	mov    DWORD PTR [rsi+0x850],0x1
   14002f9c2:	cmp    DWORD PTR [rsi+0x840],edx
   14002f9c8:	jl     0x14002f9e6
   14002f9ca:	lea    ecx,[rdx+0x6]
   14002f9cd:	mov    rax,QWORD PTR [rsi+0x830]
   14002f9d4:	inc    edx
   14002f9d6:	and    DWORD PTR [rcx+rax*1],0x0
   14002f9da:	lea    rcx,[rcx+0x4]
   14002f9de:	cmp    edx,DWORD PTR [rsi+0x840]
   14002f9e4:	jle    0x14002f9cd
   14002f9e6:	and    DWORD PTR [rsi+0x840],0x0
   14002f9ed:	cmp    r9b,r12b
   14002f9f0:	jne    0x14002fa6a
   14002f9f2:	mov    r9,QWORD PTR [rbp+0x4f0]
   14002f9f9:	lea    eax,[r11+0x1]
   14002f9fd:	cmp    BYTE PTR [rax+r9*1],r14b
   14002fa01:	jne    0x14002fa6a
   14002fa03:	lea    eax,[rbx+0x2]
   14002fa06:	mov    al,BYTE PTR [rax+r9*1]
   14002fa0a:	lea    edx,[r11+0x2]
   14002fa0e:	cmp    BYTE PTR [rdx+r9*1],al
   14002fa12:	jne    0x14002fa6a
   14002fa14:	lea    eax,[rbx+0x3]
   14002fa17:	mov    al,BYTE PTR [rax+r9*1]
   14002fa1b:	lea    edx,[r11+0x3]
   14002fa1f:	cmp    BYTE PTR [rdx+r9*1],al
   14002fa23:	jne    0x14002fa6a
   14002fa25:	cmp    DWORD PTR [rsi+0x854],0x3
   14002fa2c:	jle    0x14002fa6a
   14002fa2e:	mov    ecx,ebx
   14002fa30:	sub    ecx,r11d
   14002fa33:	mov    r11d,0x4
   14002fa39:	and    ecx,DWORD PTR [rbp+0x52c]
   14002fa3f:	lea    eax,[rcx-0x1]
   14002fa42:	cmp    eax,0x3fffe
   14002fa47:	ja     0x14002fa70
   14002fa49:	cmp    ecx,DWORD PTR [rbp+0x530]
   14002fa4f:	jae    0x14002fa70
   14002fa51:	mov    rax,QWORD PTR [rsi+0x830]
   14002fa58:	mov    DWORD PTR [rsi+0x850],r11d
   14002fa5f:	mov    DWORD PTR [rsi+0x84c],ecx
   14002fa65:	mov    DWORD PTR [rax+0x10],ecx
   14002fa68:	jmp    0x14002fa70
   14002fa6a:	mov    r11d,0x4
   14002fa70:	cmp    r15b,r12b
   14002fa73:	jne    0x14002fae5
   14002fa75:	mov    r9,QWORD PTR [rbp+0x4f0]
   14002fa7c:	lea    eax,[r8+0x1]
   14002fa80:	cmp    BYTE PTR [rax+r9*1],r14b
   14002fa84:	jne    0x14002fae5
   14002fa86:	lea    eax,[rbx+0x2]
   14002fa89:	mov    al,BYTE PTR [rax+r9*1]
   14002fa8d:	lea    edx,[r8+0x2]
   14002fa91:	cmp    BYTE PTR [rdx+r9*1],al
   14002fa95:	jne    0x14002fae5
   14002fa97:	cmp    DWORD PTR [rsi+0x854],0x2
   14002fa9e:	jle    0x14002fae5
   14002faa0:	mov    ecx,ebx
   14002faa2:	sub    ecx,r8d
   14002faa5:	and    ecx,DWORD PTR [rbp+0x52c]
   14002faab:	lea    eax,[rcx-0x1]
   14002faae:	cmp    eax,0x1ffe
   14002fab3:	ja     0x14002fae5
   14002fab5:	cmp    DWORD PTR [rsi+0x850],r11d
   14002fabc:	jl     0x14002facb
   14002fabe:	mov    eax,DWORD PTR [rsi+0x84c]
   14002fac4:	shr    eax,0x5
   14002fac7:	cmp    ecx,eax
   14002fac9:	jae    0x14002fae5
   14002facb:	mov    rax,QWORD PTR [rsi+0x830]
   14002fad2:	mov    DWORD PTR [rsi+0x850],0x3
   14002fadc:	mov    DWORD PTR [rsi+0x84c],ecx
   14002fae2:	mov    DWORD PTR [rax+0xc],ecx
   14002fae5:	cmp    DWORD PTR [rsi+0x850],0x2
   14002faec:	jge    0x14002fb32
   14002faee:	cmp    r13b,r12b
   14002faf1:	jne    0x14002fb32
   14002faf3:	mov    rax,QWORD PTR [rbp+0x4f0]
   14002fafa:	lea    ecx,[r10+0x1]
   14002fafe:	cmp    BYTE PTR [rcx+rax*1],r14b
   14002fb02:	jne    0x14002fb32
   14002fb04:	cmp    DWORD PTR [rsi+0x854],0x1
   14002fb0b:	jle    0x14002fb32
   14002fb0d:	mov    rax,QWORD PTR [rsi+0x830]
   14002fb14:	mov    ecx,ebx
   14002fb16:	mov    DWORD PTR [rsi+0x850],0x2
   14002fb20:	sub    ecx,r10d
   14002fb23:	and    ecx,DWORD PTR [rbp+0x52c]
   14002fb29:	mov    DWORD PTR [rsi+0x84c],ecx
   14002fb2f:	mov    DWORD PTR [rax+0x8],ecx
   14002fb32:	mov    eax,DWORD PTR [rsi+0x840]
   14002fb38:	mov    rdx,rsi
   14002fb3b:	cmp    DWORD PTR [rsi+0x850],0x1
   14002fb42:	mov    rcx,rbp
   14002fb45:	cmovg  eax,r11d
   14002fb49:	mov    DWORD PTR [rsi+0x840],eax
   14002fb4f:	call   0x140030234
   14002fb54:	mov    eax,DWORD PTR [rsi+0x850]
   14002fb5a:	xor    r15d,r15d
   14002fb5d:	cmp    eax,0x2
   14002fb60:	jl     0x14002fbb1
   14002fb62:	cmp    BYTE PTR [rbp+0x1c651],r15b
   14002fb69:	jne    0x14002fb73
   14002fb6b:	cmp    DWORD PTR [rsi+0x84c],ebx
   14002fb71:	ja     0x14002fbb1
   14002fb73:	cmp    DWORD PTR [rbp+0x538],0x2
   14002fb7a:	jl     0x14002fb97
   14002fb7c:	cmp    eax,DWORD PTR [rsi+0x854]
   14002fb82:	jge    0x14002fb97
   14002fb84:	mov    rdx,rsi
   14002fb87:	mov    rcx,rbp
   14002fb8a:	call   0x14002fea8
   14002fb8f:	test   al,al
   14002fb91:	je     0x14002fb97
   14002fb93:	mov    bl,0x1
   14002fb95:	jmp    0x14002fbb4
   14002fb97:	mov    rdx,rsi
   14002fb9a:	mov    rcx,rbp
   14002fb9d:	call   0x1400307c0
   14002fba2:	mov    eax,DWORD PTR [rsi+0x850]
   14002fba8:	dec    eax
   14002fbaa:	add    edi,eax
   14002fbac:	jmp    0x14002fc4f
   14002fbb1:	mov    bl,r15b
   14002fbb4:	cmp    BYTE PTR [rsi+0x870],r15b
   14002fbbb:	je     0x14002fbe1
   14002fbbd:	mov    edx,DWORD PTR [rsi+0x18]
   14002fbc0:	mov    rcx,QWORD PTR [rsi+0x10]
   14002fbc4:	mov    r8b,BYTE PTR [rsi+0x864]
   14002fbcb:	lea    eax,[rdx+0x1]
   14002fbce:	mov    DWORD PTR [rsi+0x18],eax
   14002fbd1:	mov    BYTE PTR [rcx+rdx*8],r15b
   14002fbd5:	mov    BYTE PTR [rcx+rdx*8+0x4],r8b
   14002fbda:	mov    BYTE PTR [rsi+0x870],r15b
   14002fbe1:	cmp    BYTE PTR [rsi+0x860],r15b
   14002fbe8:	je     0x14002fc0a
   14002fbea:	mov    r9d,DWORD PTR [rsi+0x858]
   14002fbf1:	mov    rdx,rsi
   14002fbf4:	mov    r8d,DWORD PTR [rsi+0x85c]
   14002fbfb:	mov    rcx,rbp
   14002fbfe:	call   0x140030c48
   14002fc03:	mov    BYTE PTR [rsi+0x860],r15b
   14002fc0a:	test   bl,bl
   14002fc0c:	je     0x14002fc39
   14002fc0e:	movzx  eax,r12b
   14002fc12:	mov    DWORD PTR [rsi+0x864],eax
   14002fc18:	mov    eax,DWORD PTR [rsi+0x84c]
   14002fc1e:	mov    DWORD PTR [rsi+0x868],eax
   14002fc24:	mov    eax,DWORD PTR [rsi+0x850]
   14002fc2a:	mov    DWORD PTR [rsi+0x86c],eax
   14002fc30:	mov    BYTE PTR [rsi+0x870],0x1
   14002fc37:	jmp    0x14002fc4f
   14002fc39:	mov    edx,DWORD PTR [rsi+0x18]
   14002fc3c:	mov    rcx,QWORD PTR [rsi+0x10]
   14002fc40:	lea    eax,[rdx+0x1]
   14002fc43:	mov    DWORD PTR [rsi+0x18],eax
   14002fc46:	mov    BYTE PTR [rcx+rdx*8],r15b
   14002fc4a:	mov    BYTE PTR [rcx+rdx*8+0x4],r12b
   14002fc4f:	inc    edi
   14002fc51:	cmp    edi,DWORD PTR [rsi+0xc]
   14002fc54:	jb     0x14002f911
   14002fc5a:	cmp    BYTE PTR [rsi+0x870],r15b
   14002fc61:	je     0x14002fc87
   14002fc63:	mov    edx,DWORD PTR [rsi+0x18]
   14002fc66:	mov    rcx,QWORD PTR [rsi+0x10]
   14002fc6a:	mov    r8b,BYTE PTR [rsi+0x864]
   14002fc71:	lea    eax,[rdx+0x1]
   14002fc74:	mov    DWORD PTR [rsi+0x18],eax
   14002fc77:	mov    BYTE PTR [rcx+rdx*8],r15b
   14002fc7b:	mov    BYTE PTR [rcx+rdx*8+0x4],r8b
   14002fc80:	mov    BYTE PTR [rsi+0x870],r15b
   14002fc87:	cmp    BYTE PTR [rsi+0x860],r15b
   14002fc8e:	je     0x14002fcb0
   14002fc90:	mov    r9d,DWORD PTR [rsi+0x858]
   14002fc97:	mov    rdx,rsi
   14002fc9a:	mov    r8d,DWORD PTR [rsi+0x85c]
   14002fca1:	mov    rcx,rbp
   14002fca4:	call   0x140030c48
   14002fca9:	mov    BYTE PTR [rsi+0x860],r15b
   14002fcb0:	mov    rbx,QWORD PTR [rsp+0x50]
   14002fcb5:	mov    rbp,QWORD PTR [rsp+0x58]
   14002fcba:	mov    rsi,QWORD PTR [rsp+0x60]
   14002fcbf:	add    rsp,0x20
   14002fcc3:	pop    r15
   14002fcc5:	pop    r14
   14002fcc7:	pop    r13
   14002fcc9:	pop    r12
   14002fccb:	pop    rdi
   14002fccc:	ret    
   14002fccd:	int3   
   14002fcce:	int3   
   14002fccf:	int3   
   14002fcd0:	mov    QWORD PTR [rsp+0x8],rbx
   14002fcd5:	mov    QWORD PTR [rsp+0x18],rbp
   14002fcda:	mov    QWORD PTR [rsp+0x20],rsi
   14002fcdf:	push   rdi
   14002fce0:	push   r12
   14002fce2:	push   r13
   14002fce4:	push   r14
   14002fce6:	push   r15
   14002fce8:	sub    rsp,0x20
   14002fcec:	xor    esi,esi
   14002fcee:	mov    rbx,rdx
   14002fcf1:	mov    rdi,rcx
   14002fcf4:	cmp    DWORD PTR [rdx+0xc],esi
   14002fcf7:	jbe    0x14002fe89
   14002fcfd:	mov    r11d,DWORD PTR [rbx+0x8]
   14002fd01:	mov    r13d,0x101
   14002fd07:	mov    eax,DWORD PTR [rbx+0xc]
   14002fd0a:	sub    eax,esi
   14002fd0c:	cmp    eax,r13d
   14002fd0f:	cmovb  r13d,eax
   14002fd13:	add    r11d,esi
   14002fd16:	mov    DWORD PTR [rbx+0x854],r13d
   14002fd1d:	and    r11d,DWORD PTR [rdi+0x52c]
   14002fd24:	mov    DWORD PTR [rbx+0x848],r11d
   14002fd2b:	mov    rax,QWORD PTR [rdi+0x518]
   14002fd32:	mov    r10d,DWORD PTR [rax+r11*4]
   14002fd36:	mov    rax,QWORD PTR [rdi+0x4f0]
   14002fd3d:	mov    bpl,BYTE PTR [r11+rax*1]
   14002fd41:	mov    DWORD PTR [rbx+0x850],0x1
   14002fd4b:	mov    r15d,DWORD PTR [rdi+0x53c]
   14002fd52:	mov    BYTE PTR [rsp+0x58],bpl
   14002fd57:	test   r15d,r15d
   14002fd5a:	jle    0x14002fe68
   14002fd60:	mov    r9d,DWORD PTR [rdi+0x52c]
   14002fd67:	mov    r8,QWORD PTR [rdi+0x4f0]
   14002fd6e:	mov    eax,r10d
   14002fd71:	and    rax,r9
   14002fd74:	mov    r12d,r10d
   14002fd77:	cmp    BYTE PTR [rax+r8*1],bpl
   14002fd7b:	jne    0x14002fe14
   14002fd81:	lea    ebp,[r10+0x1]
   14002fd85:	mov    edx,0x1
   14002fd8a:	mov    eax,ebp
   14002fd8c:	lea    ecx,[r11+0x1]
   14002fd90:	and    rax,r9
   14002fd93:	and    rcx,r9
   14002fd96:	mov    al,BYTE PTR [rax+r8*1]
   14002fd9a:	cmp    BYTE PTR [rcx+r8*1],al
   14002fd9e:	jne    0x14002fdc5
   14002fda0:	mov    r14d,r11d
   14002fda3:	sub    r14d,r10d
   14002fda6:	cmp    edx,r13d
   14002fda9:	jge    0x14002fdc5
   14002fdab:	inc    ebp
   14002fdad:	inc    edx
   14002fdaf:	mov    eax,ebp
   14002fdb1:	and    rax,r9
   14002fdb4:	lea    ecx,[r14+rbp*1]
   14002fdb8:	and    rcx,r9
   14002fdbb:	mov    al,BYTE PTR [rax+r8*1]
   14002fdbf:	cmp    BYTE PTR [rcx+r8*1],al
   14002fdc3:	je     0x14002fda6
   14002fdc5:	cmp    edx,DWORD PTR [rbx+0x850]
   14002fdcb:	jle    0x14002fe0f
   14002fdcd:	cmp    edx,0x2
   14002fdd0:	jle    0x14002fe0f
   14002fdd2:	mov    eax,r11d
   14002fdd5:	sub    eax,r10d
   14002fdd8:	and    eax,r9d
   14002fddb:	cmp    eax,DWORD PTR [rdi+0x530]
   14002fde1:	ja     0x14002fe0f
   14002fde3:	test   eax,eax
   14002fde5:	je     0x14002fe0f
   14002fde7:	cmp    edx,0x3
   14002fdea:	jne    0x14002fdf3
   14002fdec:	cmp    eax,0x2000
   14002fdf1:	jb     0x14002fe03
   14002fdf3:	cmp    edx,0x4
   14002fdf6:	jne    0x14002fe01
   14002fdf8:	cmp    eax,0x40000
   14002fdfd:	jb     0x14002fe03
   14002fdff:	cmp    edx,edx
   14002fe01:	jle    0x14002fe0f
   14002fe03:	mov    DWORD PTR [rbx+0x84c],eax
   14002fe09:	mov    DWORD PTR [rbx+0x850],edx
   14002fe0f:	mov    bpl,BYTE PTR [rsp+0x58]
   14002fe14:	mov    rax,QWORD PTR [rdi+0x518]
   14002fe1b:	dec    r15d
   14002fe1e:	mov    r10d,DWORD PTR [rax+r12*4]
   14002fe22:	test   r15d,r15d
   14002fe25:	jg     0x14002fd60
   14002fe2b:	mov    r8d,DWORD PTR [rbx+0x850]
   14002fe32:	cmp    r8d,0x2
   14002fe36:	jl     0x14002fe68
   14002fe38:	cmp    BYTE PTR [rdi+0x1c651],0x0
   14002fe3f:	jne    0x14002fe4a
   14002fe41:	cmp    DWORD PTR [rbx+0x84c],r11d
   14002fe48:	ja     0x14002fe68
   14002fe4a:	mov    r9d,DWORD PTR [rbx+0x84c]
   14002fe51:	mov    rdx,rbx
   14002fe54:	mov    rcx,rdi
   14002fe57:	call   0x140030c48
   14002fe5c:	mov    eax,DWORD PTR [rbx+0x850]
   14002fe62:	dec    eax
   14002fe64:	add    esi,eax
   14002fe66:	jmp    0x14002fe7e
   14002fe68:	mov    edx,DWORD PTR [rbx+0x18]
   14002fe6b:	mov    rcx,QWORD PTR [rbx+0x10]
   14002fe6f:	lea    eax,[rdx+0x1]
   14002fe72:	mov    DWORD PTR [rbx+0x18],eax
   14002fe75:	mov    BYTE PTR [rcx+rdx*8],0x0
   14002fe79:	mov    BYTE PTR [rcx+rdx*8+0x4],bpl
   14002fe7e:	inc    esi
   14002fe80:	cmp    esi,DWORD PTR [rbx+0xc]
   14002fe83:	jb     0x14002fcfd
   14002fe89:	mov    rbx,QWORD PTR [rsp+0x50]
   14002fe8e:	mov    rbp,QWORD PTR [rsp+0x60]
   14002fe93:	mov    rsi,QWORD PTR [rsp+0x68]
   14002fe98:	add    rsp,0x20
   14002fe9c:	pop    r15
   14002fe9e:	pop    r14
   14002fea0:	pop    r13
   14002fea2:	pop    r12
   14002fea4:	pop    rdi
   14002fea5:	ret    
   14002fea6:	int3   
   14002fea7:	int3   
   14002fea8:	mov    QWORD PTR [rsp+0x8],rbx
   14002fead:	push   rbp
   14002feae:	push   rsi
   14002feaf:	push   rdi
   14002feb0:	push   r12
   14002feb2:	push   r13
   14002feb4:	push   r14
   14002feb6:	push   r15
   14002feb8:	sub    rsp,0x30
   14002febc:	mov    edi,DWORD PTR [rdx+0x84c]
   14002fec2:	mov    rbx,rdx
   14002fec5:	mov    rsi,rcx
   14002fec8:	cmp    DWORD PTR [rdx+0x874],edi
   14002fece:	je     0x14003021d
   14002fed4:	cmp    DWORD PTR [rdx+0x878],edi
   14002feda:	je     0x14003021d
   14002fee0:	cmp    DWORD PTR [rdx+0x87c],edi
   14002fee6:	je     0x14003021d
   14002feec:	cmp    DWORD PTR [rdx+0x880],edi
   14002fef2:	je     0x14003021d
   14002fef8:	cmp    edi,DWORD PTR [rdx+0x868]
   14002fefe:	je     0x14003021d
   14002ff04:	call   0x14002ed80
   14002ff09:	test   al,al
   14002ff0b:	je     0x14002ff14
   14002ff0d:	mov    al,0x1
   14002ff0f:	jmp    0x14003021f
   14002ff14:	mov    r8,QWORD PTR [rsi+0x4f0]
   14002ff1b:	xor    r13d,r13d
   14002ff1e:	mov    ebp,DWORD PTR [rbx+0x848]
   14002ff24:	mov    rcx,QWORD PTR [rsi+0x518]
   14002ff2b:	inc    ebp
   14002ff2d:	mov    r14d,DWORD PTR [rsi+0x52c]
   14002ff34:	and    ebp,r14d
   14002ff37:	movzx  r10d,BYTE PTR [r8+rbp*1]
   14002ff3c:	lea    eax,[rbp+0x2]
   14002ff3f:	movzx  eax,BYTE PTR [rax+r8*1]
   14002ff44:	mov    r9d,DWORD PTR [rcx+rbp*4]
   14002ff48:	imul   edx,eax,0x2773
   14002ff4e:	lea    eax,[rbp+0x3]
   14002ff51:	mov    DWORD PTR [rsp+0x28],r10d
   14002ff56:	movzx  eax,BYTE PTR [rax+r8*1]
   14002ff5b:	mov    BYTE PTR [rsp+0x88],r10b
   14002ff63:	add    edx,eax
   14002ff65:	lea    eax,[rbp+0x1]
   14002ff68:	movzx  eax,BYTE PTR [rax+r8*1]
   14002ff6d:	imul   ecx,eax,0x2f838e15
   14002ff73:	lea    eax,[rbp+0x4]
   14002ff76:	imul   r12d,edx,0x2773
   14002ff7d:	movzx  eax,BYTE PTR [rax+r8*1]
   14002ff82:	sub    r12d,ecx
   14002ff85:	mov    ecx,DWORD PTR [rsi+0x540]
   14002ff8b:	add    r12d,eax
   14002ff8e:	mov    DWORD PTR [rsp+0x24],ecx
   14002ff92:	imul   eax,r10d,0x62be066f
   14002ff99:	sub    r12d,eax
   14002ff9c:	mov    eax,DWORD PTR [rbx+0x850]
   14002ffa2:	and    r12d,DWORD PTR [rsi+0x524]
   14002ffa9:	dec    eax
   14002ffab:	mov    DWORD PTR [rsp+0x2c],eax
   14002ffaf:	mov    r15d,eax
   14002ffb2:	mov    DWORD PTR [rsp+0x20],eax
   14002ffb6:	add    eax,ebp
   14002ffb8:	mov    al,BYTE PTR [rax+r8*1]
   14002ffbc:	mov    BYTE PTR [rsp+0x78],al
   14002ffc0:	test   ecx,ecx
   14002ffc2:	je     0x14003021d
   14002ffc8:	mov    edx,r14d
   14002ffcb:	mov    DWORD PTR [rsp+0x80],edx
   14002ffd2:	mov    eax,ebp
   14002ffd4:	sub    eax,r9d
   14002ffd7:	and    eax,edx
   14002ffd9:	cmp    eax,DWORD PTR [rsi+0x530]
   14002ffdf:	ja     0x14003021d
   14002ffe5:	mov    r10,QWORD PTR [rsi+0x4f0]
   14002ffec:	mov    eax,r9d
   14002ffef:	mov    r11b,BYTE PTR [rax+r10*1]
   14002fff3:	cmp    r11b,BYTE PTR [rsp+0x88]
   14002fffb:	je     0x140030060
   14002fffd:	lea    eax,[r9+0x2]
   140030001:	movzx  eax,BYTE PTR [rax+r10*1]
   140030006:	imul   edx,eax,0x2773
   14003000c:	lea    eax,[r9+0x3]
   140030010:	movzx  eax,BYTE PTR [rax+r10*1]
   140030015:	add    edx,eax
   140030017:	lea    eax,[r9+0x1]
   14003001b:	imul   r8d,edx,0x2773
   140030022:	movzx  eax,BYTE PTR [rax+r10*1]
   140030027:	imul   ecx,eax,0x2f838e15
   14003002d:	lea    eax,[r9+0x4]
   140030031:	movzx  eax,BYTE PTR [rax+r10*1]
   140030036:	sub    r8d,ecx
   140030039:	add    r8d,eax
   14003003c:	movzx  eax,r11b
   140030040:	imul   ecx,eax,0x62be066f
   140030046:	sub    r8d,ecx
   140030049:	and    r8d,DWORD PTR [rsi+0x524]
   140030050:	cmp    r8d,r12d
   140030053:	jne    0x14003021d
   140030059:	mov    edx,DWORD PTR [rsp+0x80]
   140030060:	mov    al,BYTE PTR [rsp+0x78]
   140030064:	lea    ecx,[r15+r9*1]
   140030068:	cmp    BYTE PTR [rcx+r10*1],al
   14003006c:	jne    0x140030204
   140030072:	mov    eax,DWORD PTR [rsp+0x28]
   140030076:	sub    r9d,r13d
   140030079:	and    r9d,edx
   14003007c:	xor    r11d,r11d
   14003007f:	cmp    al,BYTE PTR [r9+r10*1]
   140030083:	jne    0x1400300b9
   140030085:	mov    r14d,r9d
   140030088:	mov    r8d,ebp
   14003008b:	sub    r14d,ebp
   14003008e:	cmp    r11d,DWORD PTR [rbx+0x854]
   140030095:	jge    0x1400300ab
   140030097:	inc    r8d
   14003009a:	inc    r11d
   14003009d:	lea    eax,[r14+r8*1]
   1400300a1:	mov    al,BYTE PTR [rax+r10*1]
   1400300a5:	cmp    BYTE PTR [r8+r10*1],al
   1400300a9:	je     0x14003008e
   1400300ab:	mov    r14d,DWORD PTR [rsi+0x52c]
   1400300b2:	mov    edx,DWORD PTR [rsp+0x80]
   1400300b9:	cmp    r11d,DWORD PTR [rbx+0x850]
   1400300c0:	jl     0x1400301f2
   1400300c6:	mov    rax,QWORD PTR [rsi+0x518]
   1400300cd:	lea    r8d,[r11-0x4]
   1400300d1:	xor    r13d,r13d
   1400300d4:	mov    r15d,DWORD PTR [rax+r9*4]
   1400300d8:	lea    edx,[r13+0x1]
   1400300dc:	cmp    r8d,edx
   1400300df:	jle    0x14003012b
   1400300e1:	mov    r12d,DWORD PTR [rsi+0x52c]
   1400300e8:	mov    rdi,rax
   1400300eb:	mov    r10d,r14d
   1400300ee:	mov    eax,DWORD PTR [rbx+0x848]
   1400300f4:	lea    ecx,[rdx+r9*1]
   1400300f8:	and    rcx,r10
   1400300fb:	mov    r14d,DWORD PTR [rdi+rcx*4]
   1400300ff:	mov    ecx,eax
   140030101:	sub    ecx,r14d
   140030104:	sub    eax,r15d
   140030107:	and    ecx,r12d
   14003010a:	and    eax,r12d
   14003010d:	cmp    ecx,eax
   14003010f:	jbe    0x140030117
   140030111:	mov    r13d,edx
   140030114:	mov    r15d,r14d
   140030117:	inc    edx
   140030119:	cmp    edx,r8d
   14003011c:	jl     0x1400300ee
   14003011e:	mov    edi,DWORD PTR [rbx+0x84c]
   140030124:	mov    r10,QWORD PTR [rsi+0x4f0]
   14003012b:	mov    r8d,r13d
   14003012e:	add    r8d,ebp
   140030131:	and    r8d,DWORD PTR [rsp+0x80]
   140030139:	movzx  r14d,BYTE PTR [r8+r10*1]
   14003013e:	lea    eax,[r8+0x2]
   140030142:	movzx  eax,BYTE PTR [rax+r10*1]
   140030147:	imul   edx,eax,0x2773
   14003014d:	lea    eax,[r8+0x3]
   140030151:	mov    DWORD PTR [rsp+0x88],r14d
   140030159:	movzx  eax,BYTE PTR [rax+r10*1]
   14003015e:	add    edx,eax
   140030160:	lea    eax,[r8+0x1]
   140030164:	imul   r12d,edx,0x2773
   14003016b:	movzx  eax,BYTE PTR [rax+r10*1]
   140030170:	mov    edx,DWORD PTR [rsp+0x80]
   140030177:	imul   ecx,eax,0x2f838e15
   14003017d:	lea    eax,[r8+0x4]
   140030181:	movzx  eax,BYTE PTR [rax+r10*1]
   140030186:	sub    r12d,ecx
   140030189:	mov    ecx,ebp
   14003018b:	add    r12d,eax
   14003018e:	sub    ecx,r9d
   140030191:	imul   eax,r14d,0x62be066f
   140030198:	and    ecx,edx
   14003019a:	sub    r12d,eax
   14003019d:	mov    eax,DWORD PTR [rsp+0x2c]
   1400301a1:	and    r12d,DWORD PTR [rsi+0x524]
   1400301a8:	sub    eax,r13d
   1400301ab:	mov    DWORD PTR [rsp+0x20],eax
   1400301af:	mov    eax,edi
   1400301b1:	shl    eax,0x7
   1400301b4:	cmp    ecx,eax
   1400301b6:	ja     0x14003021d
   1400301b8:	cmp    ecx,DWORD PTR [rsi+0x530]
   1400301be:	ja     0x14003021d
   1400301c0:	test   ecx,ecx
   1400301c2:	je     0x14003021d
   1400301c4:	mov    eax,ecx
   1400301c6:	shl    eax,0x2
   1400301c9:	cmp    eax,edi
   1400301cb:	jb     0x14002ff0d
   1400301d1:	mov    r15d,DWORD PTR [rbx+0x850]
   1400301d8:	cmp    r11d,r15d
   1400301db:	jle    0x1400301e5
   1400301dd:	cmp    ecx,edi
   1400301df:	jb     0x14002ff0d
   1400301e5:	lea    eax,[r15+0x1]
   1400301e9:	cmp    r11d,eax
   1400301ec:	jg     0x14002ff0d
   1400301f2:	mov    r14d,DWORD PTR [rsi+0x52c]
   1400301f9:	add    r9d,r13d
   1400301fc:	mov    r15d,DWORD PTR [rsp+0x20]
   140030201:	and    r9d,edx
   140030204:	add    DWORD PTR [rsp+0x24],0xffffffff
   140030209:	mov    rcx,QWORD PTR [rsi+0x518]
   140030210:	mov    eax,r9d
   140030213:	mov    r9d,DWORD PTR [rcx+rax*4]
   140030217:	jne    0x14002ffd2
   14003021d:	xor    al,al
   14003021f:	mov    rbx,QWORD PTR [rsp+0x70]
   140030224:	add    rsp,0x30
   140030228:	pop    r15
   14003022a:	pop    r14
   14003022c:	pop    r13
   14003022e:	pop    r12
   140030230:	pop    rdi
   140030231:	pop    rsi
   140030232:	pop    rbp
   140030233:	ret    
   140030234:	mov    QWORD PTR [rsp+0x10],rdx
   140030239:	mov    QWORD PTR [rsp+0x8],rcx
   14003023e:	push   rbx
   14003023f:	push   rbp
   140030240:	push   rsi
   140030241:	push   rdi
   140030242:	push   r12
   140030244:	push   r13
   140030246:	push   r14
   140030248:	push   r15
   14003024a:	sub    rsp,0x28
   14003024e:	mov    ebx,DWORD PTR [rdx+0x848]
   140030254:	mov    r11,rdx
   140030257:	mov    r9,QWORD PTR [rcx+0x4f0]
   14003025e:	mov    rsi,rcx
   140030261:	mov    rdi,QWORD PTR [rcx+0x518]
   140030268:	xor    r12d,r12d
   14003026b:	mov    r15d,DWORD PTR [r11+0x850]
   140030272:	lea    eax,[rbx+0x2]
   140030275:	movzx  eax,BYTE PTR [rax+r9*1]
   14003027a:	mov    r10d,DWORD PTR [rdi+rbx*4]
   14003027e:	imul   edx,eax,0x2773
   140030284:	lea    eax,[rbx+0x3]
   140030287:	movzx  eax,BYTE PTR [rax+r9*1]
   14003028c:	add    edx,eax
   14003028e:	lea    eax,[rbx+0x1]
   140030291:	movzx  eax,BYTE PTR [rax+r9*1]
   140030296:	imul   ecx,eax,0x2f838e15
   14003029c:	imul   r13d,edx,0x2773
   1400302a3:	mov    dl,BYTE PTR [r9+rbx*1]
   1400302a7:	mov    DWORD PTR [rsp],edx
   1400302aa:	sub    r13d,ecx
   1400302ad:	movzx  ecx,BYTE PTR [rbx+r9*1]
   1400302b2:	imul   eax,ecx,0x62be066f
   1400302b8:	mov    ecx,DWORD PTR [rsi+0x53c]
   1400302be:	mov    DWORD PTR [rsp+0x88],ecx
   1400302c5:	sub    r13d,eax
   1400302c8:	lea    eax,[rbx+0x4]
   1400302cb:	movzx  eax,BYTE PTR [rax+r9*1]
   1400302d0:	add    r13d,eax
   1400302d3:	lea    eax,[rbx+r15*1]
   1400302d7:	and    r13d,DWORD PTR [rsi+0x524]
   1400302de:	mov    r14b,BYTE PTR [rax+r9*1]
   1400302e2:	mov    BYTE PTR [rsp+0x80],r14b
   1400302ea:	test   ecx,ecx
   1400302ec:	je     0x14003058c
   1400302f2:	mov    ebp,DWORD PTR [rsi+0x52c]
   1400302f8:	mov    eax,ebx
   1400302fa:	sub    eax,r10d
   1400302fd:	and    eax,ebp
   1400302ff:	cmp    eax,DWORD PTR [rsi+0x530]
   140030305:	ja     0x14003058c
   14003030b:	mov    rdi,QWORD PTR [rsi+0x4f0]
   140030312:	mov    eax,r10d
   140030315:	mov    r9b,BYTE PTR [rax+rdi*1]
   140030319:	cmp    r9b,dl
   14003031c:	je     0x140030376
   14003031e:	lea    eax,[r10+0x2]
   140030322:	movzx  eax,BYTE PTR [rax+rdi*1]
   140030326:	imul   edx,eax,0x2773
   14003032c:	lea    eax,[r10+0x3]
   140030330:	movzx  eax,BYTE PTR [rax+rdi*1]
   140030334:	add    edx,eax
   140030336:	lea    eax,[r10+0x1]
   14003033a:	imul   r8d,edx,0x2773
   140030341:	movzx  eax,BYTE PTR [rax+rdi*1]
   140030345:	imul   ecx,eax,0x2f838e15
   14003034b:	lea    eax,[r10+0x4]
   14003034f:	movzx  eax,BYTE PTR [rax+rdi*1]
   140030353:	sub    r8d,ecx
   140030356:	add    r8d,eax
   140030359:	movzx  eax,r9b
   14003035d:	imul   ecx,eax,0x62be066f
   140030363:	sub    r8d,ecx
   140030366:	and    r8d,DWORD PTR [rsi+0x524]
   14003036d:	cmp    r8d,r13d
   140030370:	jne    0x14003058c
   140030376:	lea    eax,[r15+r10*1]
   14003037a:	cmp    BYTE PTR [rax+rdi*1],r14b
   14003037e:	jne    0x14003056d
   140030384:	sub    r10d,r12d
   140030387:	mov    ecx,ebx
   140030389:	and    r10d,ebp
   14003038c:	xor    r9d,r9d
   14003038f:	and    QWORD PTR [rsp+0x8],r9
   140030394:	mov    edx,r10d
   140030397:	mov    al,BYTE PTR [rdi+r10*1]
   14003039b:	cmp    BYTE PTR [rcx+rdi*1],al
   14003039e:	jne    0x1400303df
   1400303a0:	movsxd rax,DWORD PTR [r11+0x854]
   1400303a7:	mov    r8d,r10d
   1400303aa:	mov    rsi,QWORD PTR [rsp+0x8]
   1400303af:	mov    r14d,ebx
   1400303b2:	cmp    rsi,rax
   1400303b5:	jge    0x1400303cd
   1400303b7:	inc    r8d
   1400303ba:	inc    r14d
   1400303bd:	inc    r9d
   1400303c0:	inc    rsi
   1400303c3:	mov    cl,BYTE PTR [r8+rdi*1]
   1400303c7:	cmp    BYTE PTR [r14+rdi*1],cl
   1400303cb:	je     0x1400303b2
   1400303cd:	mov    r11,QWORD PTR [rsp+0x78]
   1400303d2:	mov    QWORD PTR [rsp+0x8],rsi
   1400303d7:	mov    rsi,QWORD PTR [rsp+0x70]
   1400303dc:	mov    edx,r10d
   1400303df:	mov    r14d,DWORD PTR [r11+0x850]
   1400303e6:	cmp    r9d,r14d
   1400303e9:	jle    0x14003055b
   1400303ef:	mov    r8,QWORD PTR [rsi+0x518]
   1400303f6:	lea    r15d,[r9-0x4]
   1400303fa:	xor    r12d,r12d
   1400303fd:	mov    eax,DWORD PTR [r8+rdx*4]
   140030401:	lea    edx,[r12+0x1]
   140030406:	mov    DWORD PTR [rsp],eax
   140030409:	cmp    r15d,edx
   14003040c:	jle    0x140030454
   14003040e:	mov    r14d,DWORD PTR [rsp]
   140030412:	mov    rax,rbp
   140030415:	mov    ebp,DWORD PTR [rsi+0x52c]
   14003041b:	mov    rsi,rax
   14003041e:	lea    ecx,[rdx+r10*1]
   140030422:	mov    eax,ebx
   140030424:	and    rcx,rsi
   140030427:	sub    eax,r14d
   14003042a:	and    eax,ebp
   14003042c:	mov    r13d,DWORD PTR [r8+rcx*4]
   140030430:	mov    ecx,ebx
   140030432:	sub    ecx,r13d
   140030435:	and    ecx,ebp
   140030437:	cmp    ecx,eax
   140030439:	jbe    0x140030441
   14003043b:	mov    r12d,edx
   14003043e:	mov    r14d,r13d
   140030441:	inc    edx
   140030443:	cmp    edx,r15d
   140030446:	jl     0x14003041e
   140030448:	mov    rsi,QWORD PTR [rsp+0x70]
   14003044d:	mov    r14d,DWORD PTR [r11+0x850]
   140030454:	lea    r8d,[rbx+r12*1]
   140030458:	and    r8d,ebp
   14003045b:	movzx  r15d,BYTE PTR [r8+rdi*1]
   140030460:	lea    eax,[r8+0x2]
   140030464:	movzx  eax,BYTE PTR [rax+rdi*1]
   140030468:	imul   edx,eax,0x2773
   14003046e:	lea    eax,[r8+0x3]
   140030472:	mov    DWORD PTR [rsp],r15d
   140030476:	movzx  eax,BYTE PTR [rax+rdi*1]
   14003047a:	add    edx,eax
   14003047c:	lea    eax,[r8+0x1]
   140030480:	imul   r13d,edx,0x2773
   140030487:	movzx  eax,BYTE PTR [rax+rdi*1]
   14003048b:	imul   ecx,eax,0x2f838e15
   140030491:	lea    eax,[r8+0x4]
   140030495:	movzx  eax,BYTE PTR [rax+rdi*1]
   140030499:	sub    r13d,ecx
   14003049c:	mov    ecx,ebx
   14003049e:	add    r13d,eax
   1400304a1:	sub    ecx,r10d
   1400304a4:	imul   eax,r15d,0x62be066f
   1400304ab:	and    ecx,ebp
   1400304ad:	mov    r15d,r14d
   1400304b0:	sub    r15d,r12d
   1400304b3:	sub    r13d,eax
   1400304b6:	and    r13d,DWORD PTR [rsi+0x524]
   1400304bd:	cmp    ecx,DWORD PTR [rsi+0x530]
   1400304c3:	ja     0x14003058c
   1400304c9:	test   ecx,ecx
   1400304cb:	je     0x14003058c
   1400304d1:	cmp    r14d,0x2
   1400304d5:	jle    0x1400304f2
   1400304d7:	mov    eax,DWORD PTR [r11+0x84c]
   1400304de:	shl    eax,0xe
   1400304e1:	cmp    ecx,eax
   1400304e3:	jbe    0x1400304f2
   1400304e5:	lea    eax,[r14+0x5]
   1400304e9:	cmp    r9d,eax
   1400304ec:	jl     0x14003058c
   1400304f2:	cmp    r9d,0x4
   1400304f6:	jle    0x14003055b
   1400304f8:	lea    eax,[r14+0x1]
   1400304fc:	cmp    r9d,eax
   1400304ff:	jg     0x14003050f
   140030501:	mov    eax,ecx
   140030503:	shr    eax,0x5
   140030506:	cmp    eax,DWORD PTR [r11+0x84c]
   14003050d:	ja     0x14003055b
   14003050f:	mov    rax,QWORD PTR [r11+0x830]
   140030516:	mov    rdx,QWORD PTR [rsp+0x8]
   14003051b:	mov    DWORD PTR [rax+rdx*4],ecx
   14003051e:	mov    DWORD PTR [r11+0x84c],ecx
   140030525:	mov    DWORD PTR [r11+0x850],r9d
   14003052c:	cmp    r9d,DWORD PTR [r11+0x854]
   140030533:	jge    0x14003058c
   140030535:	mov    ebx,DWORD PTR [r11+0x848]
   14003053c:	mov    r15d,r9d
   14003053f:	mov    rax,QWORD PTR [rsi+0x4f0]
   140030546:	sub    r15d,r12d
   140030549:	lea    ecx,[rbx+r9*1]
   14003054d:	mov    r14b,BYTE PTR [rcx+rax*1]
   140030551:	mov    BYTE PTR [rsp+0x80],r14b
   140030559:	jmp    0x140030563
   14003055b:	mov    r14b,BYTE PTR [rsp+0x80]
   140030563:	add    r10d,r12d
   140030566:	and    r10d,DWORD PTR [rsi+0x52c]
   14003056d:	add    DWORD PTR [rsp+0x88],0xffffffff
   140030575:	mov    rcx,QWORD PTR [rsi+0x518]
   14003057c:	mov    edx,DWORD PTR [rsp]
   14003057f:	mov    eax,r10d
   140030582:	mov    r10d,DWORD PTR [rcx+rax*4]
   140030586:	jne    0x1400302f2
   14003058c:	mov    eax,DWORD PTR [r11+0x850]
   140030593:	cmp    eax,DWORD PTR [r11+0x840]
   14003059a:	jle    0x1400305a3
   14003059c:	mov    DWORD PTR [r11+0x840],eax
   1400305a3:	add    rsp,0x28
   1400305a7:	pop    r15
   1400305a9:	pop    r14
   1400305ab:	pop    r13
   1400305ad:	pop    r12
   1400305af:	pop    rdi
   1400305b0:	pop    rsi
   1400305b1:	pop    rbp
   1400305b2:	pop    rbx
   1400305b3:	ret    
   1400305b4:	mov    QWORD PTR [rsp+0x8],rbx
   1400305b9:	mov    QWORD PTR [rsp+0x10],rbp
   1400305be:	mov    QWORD PTR [rsp+0x20],rsi
   1400305c3:	push   rdi
   1400305c4:	push   r12
   1400305c6:	push   r14
   1400305c8:	push   r15
   1400305ca:	mov    r15d,DWORD PTR [rsp+0x38]
   1400305cf:	lea    r14,[rdx+0x874]
   1400305d6:	xor    r10d,r10d
   1400305d9:	mov    r8,rdx
   1400305dc:	mov    rbp,rcx
   1400305df:	lea    r12d,[r10+0x4]
   1400305e3:	mov    r11d,DWORD PTR [r14]
   1400305e6:	test   r11d,r11d
   1400305e9:	je     0x1400306ae
   1400305ef:	cmp    r11d,DWORD PTR [rbp+0x530]
   1400305f6:	ja     0x1400306ae
   1400305fc:	cmp    BYTE PTR [rbp+0x1c651],0x0
   140030603:	jne    0x140030612
   140030605:	cmp    r11d,DWORD PTR [r8+0x848]
   14003060c:	ja     0x1400306ae
   140030612:	mov    edi,DWORD PTR [r8+0x848]
   140030619:	xor    r9d,r9d
   14003061c:	mov    rsi,QWORD PTR [rbp+0x4f0]
   140030623:	mov    ebx,edi
   140030625:	sub    ebx,r11d
   140030628:	and    ebx,DWORD PTR [rbp+0x52c]
   14003062e:	mov    eax,ebx
   140030630:	mov    cl,BYTE PTR [rbx+rsi*1]
   140030633:	cmp    BYTE PTR [rdi+rsi*1],cl
   140030636:	jne    0x1400306ae
   140030638:	cmp    r9d,DWORD PTR [r8+0x854]
   14003063f:	jge    0x140030652
   140030641:	inc    r9d
   140030644:	inc    edi
   140030646:	lea    eax,[r9+rbx*1]
   14003064a:	mov    al,BYTE PTR [rax+rsi*1]
   14003064d:	cmp    BYTE PTR [rdi+rsi*1],al
   140030650:	je     0x140030638
   140030652:	cmp    r9d,0x2
   140030656:	jl     0x1400306ae
   140030658:	mov    ecx,DWORD PTR [r8+0x850]
   14003065f:	lea    edx,[rcx-0x3]
   140030662:	cmp    r9d,edx
   140030665:	jl     0x1400306ae
   140030667:	lea    eax,[rcx-0x1]
   14003066a:	cmp    r9d,eax
   14003066d:	jne    0x14003067c
   14003066f:	cmp    DWORD PTR [r8+0x84c],0x100
   14003067a:	jb     0x1400306ae
   14003067c:	lea    eax,[rcx-0x2]
   14003067f:	cmp    r9d,eax
   140030682:	jne    0x140030691
   140030684:	cmp    DWORD PTR [r8+0x84c],0x800
   14003068f:	jb     0x1400306ae
   140030691:	cmp    r9d,edx
   140030694:	jne    0x1400306a3
   140030696:	cmp    DWORD PTR [r8+0x84c],0x8000
   1400306a1:	jb     0x1400306ae
   1400306a3:	cmp    r9d,r10d
   1400306a6:	jle    0x1400306ae
   1400306a8:	mov    r10d,r9d
   1400306ab:	mov    r15d,r11d
   1400306ae:	add    r14,0x4
   1400306b2:	sub    r12,0x1
   1400306b6:	jne    0x1400305e3
   1400306bc:	cmp    r10d,0x2
   1400306c0:	jge    0x1400306c6
   1400306c2:	xor    al,al
   1400306c4:	jmp    0x1400306d6
   1400306c6:	mov    DWORD PTR [r8+0x850],r10d
   1400306cd:	mov    al,0x1
   1400306cf:	mov    DWORD PTR [r8+0x84c],r15d
   1400306d6:	mov    rbx,QWORD PTR [rsp+0x28]
   1400306db:	mov    rbp,QWORD PTR [rsp+0x30]
   1400306e0:	mov    rsi,QWORD PTR [rsp+0x40]
   1400306e5:	pop    r15
   1400306e7:	pop    r14
   1400306e9:	pop    r12
   1400306eb:	pop    rdi
   1400306ec:	ret    
   1400306ed:	int3   
   1400306ee:	int3   
   1400306ef:	int3   
   1400306f0:	mov    QWORD PTR [rcx+0x21658],rdx
   1400306f7:	ret    
   1400306f8:	movups xmm0,XMMWORD PTR [rdx]
   1400306fb:	lea    r8,[rcx+0x20]
   1400306ff:	mov    r9d,0x80
   140030705:	movups XMMWORD PTR [r8],xmm0
   140030709:	movups xmm1,XMMWORD PTR [rdx+0x10]
   14003070d:	lea    rax,[r9+r8*1]
   140030711:	movups XMMWORD PTR [r8+0x10],xmm1
   140030716:	movups xmm0,XMMWORD PTR [rdx+0x20]
   14003071a:	movups XMMWORD PTR [r8+0x20],xmm0
   14003071f:	movups xmm1,XMMWORD PTR [rdx+0x30]
   140030723:	movups XMMWORD PTR [r8+0x30],xmm1
   140030728:	movups xmm0,XMMWORD PTR [rdx+0x40]
   14003072c:	movups XMMWORD PTR [r8+0x40],xmm0
   140030731:	movups xmm1,XMMWORD PTR [rdx+0x50]
   140030735:	movups XMMWORD PTR [r8+0x50],xmm1
   14003073a:	movups xmm0,XMMWORD PTR [rdx+0x60]
   14003073e:	movups XMMWORD PTR [r8+0x60],xmm0
   140030743:	movups xmm0,XMMWORD PTR [rdx+0x70]
   140030747:	add    rdx,r9
   14003074a:	movups XMMWORD PTR [rax-0x10],xmm0
   14003074e:	movups xmm1,XMMWORD PTR [rdx]
   140030751:	movups XMMWORD PTR [rax],xmm1
   140030754:	movups xmm0,XMMWORD PTR [rdx+0x10]
   140030758:	movups XMMWORD PTR [rax+0x10],xmm0
   14003075c:	movups xmm1,XMMWORD PTR [rdx+0x20]
   140030760:	movups XMMWORD PTR [rax+0x20],xmm1
   140030764:	movups xmm0,XMMWORD PTR [rdx+0x30]
   140030768:	xor    edx,edx
   14003076a:	movups XMMWORD PTR [rax+0x30],xmm0
   14003076e:	cmp    DWORD PTR [r8],0x0
   140030772:	jne    0x140030792
   140030774:	cmp    edx,0x7
   140030777:	je     0x14003078b
   140030779:	cmp    DWORD PTR [rcx+0x538],0x2
   140030780:	jl     0x14003078b
   140030782:	mov    DWORD PTR [r8],0x1
   140030789:	jmp    0x140030798
   14003078b:	mov    DWORD PTR [r8],0x3
   140030792:	cmp    DWORD PTR [r8],0x3
   140030796:	je     0x14003079f
   140030798:	mov    BYTE PTR [rcx+0xe0],0x0
   14003079f:	inc    edx
   1400307a1:	add    r8,0xc
   1400307a5:	movsxd rax,edx
   1400307a8:	cmp    rax,0x10
   1400307ac:	jb     0x14003076e
   1400307ae:	mov    eax,DWORD PTR [rcx+0x74]
   1400307b1:	mov    DWORD PTR [rcx+0xe4],eax
   1400307b7:	ret    
   1400307b8:	mov    DWORD PTR [rcx+0x21458],edx
   1400307be:	ret    
   1400307bf:	int3   
   1400307c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400307c5:	mov    QWORD PTR [rsp+0x10],rsi
   1400307ca:	mov    QWORD PTR [rsp+0x18],rdi
   1400307cf:	push   r12
   1400307d1:	push   r13
   1400307d3:	push   r14
   1400307d5:	sub    rsp,0x20
   1400307d9:	xor    r13d,r13d
   1400307dc:	mov    rbx,rdx
   1400307df:	mov    rdi,rcx
   1400307e2:	cmp    BYTE PTR [rdx+0x860],r13b
   1400307e9:	je     0x140030a92
   1400307ef:	mov    esi,DWORD PTR [rdx+0x85c]
   1400307f5:	lea    r11d,[r13+0x1]
   1400307f9:	mov    r9d,DWORD PTR [rdx+0x858]
   140030800:	mov    r12d,r13d
   140030803:	cmp    esi,r11d
   140030806:	jl     0x140030a3c
   14003080c:	mov    r14d,DWORD PTR [rdx+0x848]
   140030813:	sub    r14d,DWORD PTR [rdx+0x84c]
   14003081a:	mov    r10d,r14d
   14003081d:	sub    r10d,r11d
   140030820:	and    r10d,DWORD PTR [rdi+0x52c]
   140030827:	cmp    BYTE PTR [rdi+0x1c651],r13b
   14003082e:	jne    0x14003083d
   140030830:	cmp    r10d,DWORD PTR [rbx+0x848]
   140030837:	jae    0x1400308d6
   14003083d:	mov    ecx,DWORD PTR [rbx+0x850]
   140030843:	add    ecx,r11d
   140030846:	cmp    ecx,DWORD PTR [rbx+0x854]
   14003084c:	jge    0x1400308d6
   140030852:	mov    edx,DWORD PTR [rbx+0x848]
   140030858:	mov    r8,QWORD PTR [rdi+0x4f0]
   14003085f:	sub    edx,r11d
   140030862:	mov    eax,DWORD PTR [rdi+0x52c]
   140030868:	and    rdx,rax
   14003086b:	mov    cl,BYTE PTR [r10+r8*1]
   14003086f:	cmp    BYTE PTR [rdx+r8*1],cl
   140030873:	jne    0x1400308e2
   140030875:	mov    rax,QWORD PTR [rbx+0x838]
   14003087c:	mov    edx,esi
   14003087e:	sub    edx,r11d
   140030881:	movsxd rcx,edx
   140030884:	mov    r8d,DWORD PTR [rax+rcx*4]
   140030888:	test   r8d,r8d
   14003088b:	je     0x1400308c0
   14003088d:	cmp    edx,0x2
   140030890:	jne    0x14003089b
   140030892:	cmp    r8d,0x100
   140030899:	jb     0x1400308bb
   14003089b:	cmp    edx,0x3
   14003089e:	jne    0x1400308a9
   1400308a0:	cmp    r8d,0x2000
   1400308a7:	jb     0x1400308bb
   1400308a9:	cmp    edx,0x4
   1400308ac:	jne    0x1400308b9
   1400308ae:	cmp    r8d,0x40000
   1400308b5:	jb     0x1400308bb
   1400308b7:	cmp    edx,edx
   1400308b9:	jle    0x1400308c0
   1400308bb:	cmp    r9d,r8d
   1400308be:	ja     0x1400308d0
   1400308c0:	cmp    edx,0x2
   1400308c3:	jl     0x1400308d0
   1400308c5:	jne    0x1400308d6
   1400308c7:	cmp    r9d,0x400
   1400308ce:	jbe    0x1400308d6
   1400308d0:	mov    r12d,r11d
   1400308d3:	mov    r9d,r8d
   1400308d6:	inc    r11d
   1400308d9:	cmp    r11d,esi
   1400308dc:	jle    0x14003081a
   1400308e2:	test   r12d,r12d
   1400308e5:	jle    0x140030a3c
   1400308eb:	mov    r10d,esi
   1400308ee:	sub    r10d,r12d
   1400308f1:	cmp    BYTE PTR [rbx+0x870],r13b
   1400308f8:	je     0x14003097e
   1400308fe:	cmp    DWORD PTR [rbx+0x86c],r10d
   140030905:	jle    0x14003095a
   140030907:	cmp    r10d,0x101
   14003090e:	jae    0x14003095a
   140030910:	mov    edx,DWORD PTR [rbx+0x868]
   140030916:	lea    ecx,[r10+0x1]
   14003091a:	test   edx,edx
   14003091c:	je     0x14003095a
   14003091e:	cmp    ecx,0x2
   140030921:	jne    0x14003092b
   140030923:	cmp    edx,0x100
   140030929:	jb     0x140030949
   14003092b:	cmp    ecx,0x3
   14003092e:	jne    0x140030938
   140030930:	cmp    edx,0x2000
   140030936:	jb     0x140030949
   140030938:	cmp    ecx,0x4
   14003093b:	jne    0x140030947
   14003093d:	cmp    edx,0x40000
   140030943:	jb     0x140030949
   140030945:	cmp    ecx,ecx
   140030947:	jle    0x14003095a
   140030949:	lea    eax,[rsi+0x1]
   14003094c:	mov    r10d,ecx
   14003094f:	mov    DWORD PTR [rbx+0x85c],eax
   140030955:	mov    r9d,edx
   140030958:	jmp    0x140030977
   14003095a:	mov    edx,DWORD PTR [rbx+0x18]
   14003095d:	mov    rcx,QWORD PTR [rbx+0x10]
   140030961:	mov    r8b,BYTE PTR [rbx+0x864]
   140030968:	lea    eax,[rdx+0x1]
   14003096b:	mov    DWORD PTR [rbx+0x18],eax
   14003096e:	mov    BYTE PTR [rcx+rdx*8],r13b
   140030972:	mov    BYTE PTR [rcx+rdx*8+0x4],r8b
   140030977:	mov    BYTE PTR [rbx+0x870],r13b
   14003097e:	cmp    r10d,0x1
   140030982:	jle    0x1400309cb
   140030984:	test   r9d,r9d
   140030987:	je     0x1400309cb
   140030989:	cmp    r10d,0x2
   14003098d:	jne    0x140030998
   14003098f:	cmp    r9d,0x100
   140030996:	jb     0x1400309bb
   140030998:	cmp    r10d,0x3
   14003099c:	jne    0x1400309a7
   14003099e:	cmp    r9d,0x2000
   1400309a5:	jb     0x1400309bb
   1400309a7:	cmp    r10d,0x4
   1400309ab:	jne    0x1400309b9
   1400309ad:	cmp    r9d,0x40000
   1400309b4:	jb     0x1400309bb
   1400309b6:	cmp    r10d,r10d
   1400309b9:	jle    0x1400309cb
   1400309bb:	mov    r8d,r10d
   1400309be:	mov    rdx,rbx
   1400309c1:	mov    rcx,rdi
   1400309c4:	call   0x140030c48
   1400309c9:	jmp    0x140030a14
   1400309cb:	mov    r9d,r13d
   1400309ce:	test   r10d,r10d
   1400309d1:	jle    0x140030a14
   1400309d3:	mov    eax,DWORD PTR [rdi+0x52c]
   1400309d9:	mov    ecx,DWORD PTR [rbx+0x848]
   1400309df:	sub    ecx,DWORD PTR [rbx+0x85c]
   1400309e5:	mov    edx,DWORD PTR [rbx+0x18]
   1400309e8:	add    ecx,r9d
   1400309eb:	and    rcx,rax
   1400309ee:	inc    r9d
   1400309f1:	mov    rax,QWORD PTR [rdi+0x4f0]
   1400309f8:	mov    r8b,BYTE PTR [rcx+rax*1]
   1400309fc:	lea    eax,[rdx+0x1]
   1400309ff:	mov    rcx,QWORD PTR [rbx+0x10]
   140030a03:	mov    DWORD PTR [rbx+0x18],eax
   140030a06:	mov    BYTE PTR [rcx+rdx*8],r13b
   140030a0a:	mov    BYTE PTR [rcx+rdx*8+0x4],r8b
   140030a0f:	cmp    r9d,r10d
   140030a12:	jl     0x1400309d3
   140030a14:	mov    r8d,DWORD PTR [rbx+0x850]
   140030a1b:	mov    rdx,rbx
   140030a1e:	mov    r9d,DWORD PTR [rbx+0x84c]
   140030a25:	add    r8d,r12d
   140030a28:	mov    rcx,rdi
   140030a2b:	call   0x140030c48
   140030a30:	mov    BYTE PTR [rbx+0x860],r13b
   140030a37:	jmp    0x140030b65
   140030a3c:	cmp    BYTE PTR [rbx+0x870],r13b
   140030a43:	je     0x140030a69
   140030a45:	mov    edx,DWORD PTR [rbx+0x18]
   140030a48:	mov    rcx,QWORD PTR [rbx+0x10]
   140030a4c:	mov    r8b,BYTE PTR [rbx+0x864]
   140030a53:	lea    eax,[rdx+0x1]
   140030a56:	mov    DWORD PTR [rbx+0x18],eax
   140030a59:	mov    BYTE PTR [rcx+rdx*8],r13b
   140030a5d:	mov    BYTE PTR [rcx+rdx*8+0x4],r8b
   140030a62:	mov    BYTE PTR [rbx+0x870],r13b
   140030a69:	cmp    BYTE PTR [rbx+0x860],r13b
   140030a70:	je     0x140030a92
   140030a72:	mov    r9d,DWORD PTR [rbx+0x858]
   140030a79:	mov    rdx,rbx
   140030a7c:	mov    r8d,DWORD PTR [rbx+0x85c]
   140030a83:	mov    rcx,rdi
   140030a86:	call   0x140030c48
   140030a8b:	mov    BYTE PTR [rbx+0x860],r13b
   140030a92:	mov    rdx,rbx
   140030a95:	mov    rcx,rdi
   140030a98:	call   0x1400305b4
   140030a9d:	test   al,al
   140030a9f:	je     0x140030b12
   140030aa1:	cmp    BYTE PTR [rbx+0x870],r13b
   140030aa8:	je     0x140030ace
   140030aaa:	mov    edx,DWORD PTR [rbx+0x18]
   140030aad:	mov    rcx,QWORD PTR [rbx+0x10]
   140030ab1:	mov    r8b,BYTE PTR [rbx+0x864]
   140030ab8:	lea    eax,[rdx+0x1]
   140030abb:	mov    DWORD PTR [rbx+0x18],eax
   140030abe:	mov    BYTE PTR [rcx+rdx*8],r13b
   140030ac2:	mov    BYTE PTR [rcx+rdx*8+0x4],r8b
   140030ac7:	mov    BYTE PTR [rbx+0x870],r13b
   140030ace:	cmp    BYTE PTR [rbx+0x860],r13b
   140030ad5:	je     0x140030af7
   140030ad7:	mov    r9d,DWORD PTR [rbx+0x858]
   140030ade:	mov    rdx,rbx
   140030ae1:	mov    r8d,DWORD PTR [rbx+0x85c]
   140030ae8:	mov    rcx,rdi
   140030aeb:	call   0x140030c48
   140030af0:	mov    BYTE PTR [rbx+0x860],r13b
   140030af7:	mov    r9d,DWORD PTR [rbx+0x84c]
   140030afe:	mov    rdx,rbx
   140030b01:	mov    r8d,DWORD PTR [rbx+0x850]
   140030b08:	mov    rcx,rdi
   140030b0b:	call   0x140030c48
   140030b10:	jmp    0x140030b65
   140030b12:	mov    eax,DWORD PTR [rbx+0x850]
   140030b18:	mov    rcx,QWORD PTR [rbx+0x830]
   140030b1f:	mov    DWORD PTR [rbx+0x85c],eax
   140030b25:	mov    eax,DWORD PTR [rbx+0x84c]
   140030b2b:	mov    DWORD PTR [rbx+0x858],eax
   140030b31:	mov    rax,QWORD PTR [rbx+0x838]
   140030b38:	mov    QWORD PTR [rbx+0x830],rax
   140030b3f:	mov    eax,DWORD PTR [rbx+0x844]
   140030b45:	mov    QWORD PTR [rbx+0x838],rcx
   140030b4c:	mov    ecx,DWORD PTR [rbx+0x840]
   140030b52:	mov    DWORD PTR [rbx+0x840],eax
   140030b58:	mov    DWORD PTR [rbx+0x844],ecx
   140030b5e:	mov    BYTE PTR [rbx+0x860],0x1
   140030b65:	mov    rbx,QWORD PTR [rsp+0x40]
   140030b6a:	mov    rsi,QWORD PTR [rsp+0x48]
   140030b6f:	mov    rdi,QWORD PTR [rsp+0x50]
   140030b74:	add    rsp,0x20
   140030b78:	pop    r14
   140030b7a:	pop    r13
   140030b7c:	pop    r12
   140030b7e:	ret    
   140030b7f:	int3   
   140030b80:	mov    QWORD PTR [rsp+0x8],rbx
   140030b85:	push   rdi
   140030b86:	sub    rsp,0x20
   140030b8a:	lea    rbx,[rcx+0x1a610]
   140030b91:	mov    edi,edx
   140030b93:	mov    rcx,rbx
   140030b96:	cmp    edx,0x10
   140030b99:	jae    0x140030bb4
   140030b9b:	xor    r8d,r8d
   140030b9e:	lea    edx,[r8+0x2]
   140030ba2:	call   0x140034958
   140030ba7:	mov    r8d,edi
   140030baa:	mov    edx,0x4
   140030baf:	jmp    0x140030c35
   140030bb4:	cmp    edx,0x100
   140030bba:	jae    0x140030bd4
   140030bbc:	mov    edx,0x2
   140030bc1:	lea    r8d,[rdx-0x1]
   140030bc5:	call   0x140034958
   140030bca:	mov    r8d,edi
   140030bcd:	mov    edx,0x8
   140030bd2:	jmp    0x140030c35
   140030bd4:	cmp    edx,0x10000
   140030bda:	jae    0x140030bee
   140030bdc:	mov    edx,0x2
   140030be1:	mov    r8d,edx
   140030be4:	call   0x140034958
   140030be9:	mov    r8d,edi
   140030bec:	jmp    0x140030c30
   140030bee:	cmp    edx,0xffffff00
   140030bf4:	jb     0x140030c0a
   140030bf6:	mov    edx,0x6
   140030bfb:	lea    r8d,[rdx+0xa]
   140030bff:	call   0x140034958
   140030c04:	movzx  r8d,dil
   140030c08:	jmp    0x140030bcd
   140030c0a:	mov    edx,0x2
   140030c0f:	lea    r8d,[rdx+0x1]
   140030c13:	call   0x140034958
   140030c18:	mov    r8d,edi
   140030c1b:	mov    edx,0x10
   140030c20:	shr    r8d,0x10
   140030c24:	mov    rcx,rbx
   140030c27:	call   0x140034958
   140030c2c:	movzx  r8d,di
   140030c30:	mov    edx,0x10
   140030c35:	mov    rcx,rbx
   140030c38:	mov    rbx,QWORD PTR [rsp+0x30]
   140030c3d:	add    rsp,0x20
   140030c41:	pop    rdi
   140030c42:	jmp    0x140034958
   140030c47:	int3   
   140030c48:	mov    QWORD PTR [rsp+0x8],rbx
   140030c4d:	mov    QWORD PTR [rsp+0x10],rdi
   140030c52:	mov    ecx,DWORD PTR [rdx+0x18]
   140030c55:	lea    rdi,[rdx+0x874]
   140030c5c:	mov    r10,QWORD PTR [rdx+0x10]
   140030c60:	lea    eax,[rcx+0x1]
   140030c63:	mov    DWORD PTR [rdx+0x18],eax
   140030c66:	cmp    r9d,DWORD PTR [rdi]
   140030c69:	je     0x140030d01
   140030c6f:	cmp    DWORD PTR [rdx+0x878],r9d
   140030c76:	je     0x140030cfc
   140030c7c:	cmp    DWORD PTR [rdx+0x87c],r9d
   140030c83:	je     0x140030cfc
   140030c85:	cmp    DWORD PTR [rdx+0x880],r9d
   140030c8c:	je     0x140030cfc
   140030c8e:	mov    DWORD PTR [rdx+0x888],r8d
   140030c95:	mov    eax,DWORD PTR [rdx+0x87c]
   140030c9b:	mov    DWORD PTR [rdx+0x880],eax
   140030ca1:	mov    eax,DWORD PTR [rdx+0x878]
   140030ca7:	mov    DWORD PTR [rdx+0x87c],eax
   140030cad:	mov    eax,DWORD PTR [rdi]
   140030caf:	mov    DWORD PTR [rdx+0x878],eax
   140030cb5:	mov    DWORD PTR [rdi],r9d
   140030cb8:	cmp    r8d,0x2
   140030cbc:	jne    0x140030cd0
   140030cbe:	lea    eax,[r9-0x1]
   140030cc2:	mov    BYTE PTR [r10+rcx*8],r8b
   140030cc6:	mov    DWORD PTR [r10+rcx*8+0x4],eax
   140030ccb:	jmp    0x140030d6f
   140030cd0:	cmp    r9d,0x2000
   140030cd7:	jb     0x140030ce8
   140030cd9:	dec    r8d
   140030cdc:	cmp    r9d,0x40000
   140030ce3:	jb     0x140030ce8
   140030ce5:	dec    r8d
   140030ce8:	lea    eax,[r9-0x1]
   140030cec:	mov    BYTE PTR [r10+rcx*8],0x1
   140030cf1:	mov    DWORD PTR [r10+rcx*8+0x4],eax
   140030cf6:	sub    r8b,0x3
   140030cfa:	jmp    0x140030d6a
   140030cfc:	cmp    r9d,DWORD PTR [rdi]
   140030cff:	jne    0x140030d11
   140030d01:	cmp    r8d,DWORD PTR [rdx+0x888]
   140030d08:	jne    0x140030d11
   140030d0a:	mov    BYTE PTR [r10+rcx*8],0x3
   140030d0f:	jmp    0x140030d6f
   140030d11:	xor    ebx,ebx
   140030d13:	mov    DWORD PTR [rdx+0x888],r8d
   140030d1a:	xor    r11d,r11d
   140030d1d:	mov    rax,rdi
   140030d20:	cmp    DWORD PTR [rax],r9d
   140030d23:	je     0x140030d36
   140030d25:	inc    ebx
   140030d27:	inc    r11
   140030d2a:	add    rax,0x4
   140030d2e:	cmp    r11,0x4
   140030d32:	jl     0x140030d20
   140030d34:	jmp    0x140030d6f
   140030d36:	movsxd r11,ebx
   140030d39:	test   ebx,ebx
   140030d3b:	jle    0x140030d59
   140030d3d:	lea    rdx,[rdx+r11*4]
   140030d41:	add    rdx,0x874
   140030d48:	mov    eax,DWORD PTR [rdx-0x4]
   140030d4b:	dec    r11
   140030d4e:	mov    DWORD PTR [rdx],eax
   140030d50:	lea    rdx,[rdx-0x4]
   140030d54:	test   r11,r11
   140030d57:	jg     0x140030d48
   140030d59:	mov    DWORD PTR [rdi],r9d
   140030d5c:	sub    r8b,0x2
   140030d60:	mov    BYTE PTR [r10+rcx*8],0x4
   140030d65:	mov    DWORD PTR [r10+rcx*8+0x4],ebx
   140030d6a:	mov    BYTE PTR [r10+rcx*8+0x1],r8b
   140030d6f:	mov    rbx,QWORD PTR [rsp+0x8]
   140030d74:	mov    rdi,QWORD PTR [rsp+0x10]
   140030d79:	ret    
   140030d7a:	int3   
   140030d7b:	int3   
   140030d7c:	xor    eax,eax
   140030d7e:	mov    QWORD PTR [rcx],rax
   140030d81:	mov    DWORD PTR [rcx+0x8],eax
   140030d84:	mov    QWORD PTR [rcx+0x200c],rax
   140030d8b:	mov    rax,rcx
   140030d8e:	ret    
   140030d8f:	int3   
   140030d90:	cmp    DWORD PTR [rcx+0x200c],0x400
   140030d9a:	mov    r9d,r8d
   140030d9d:	jb     0x140030da9
   140030d9f:	mov    DWORD PTR [rcx+0x200c],0x3ff
   140030da9:	mov    eax,DWORD PTR [rcx+0x200c]
   140030daf:	and    edx,DWORD PTR [rcx+0x2010]
   140030db5:	mov    DWORD PTR [rcx+rax*4+0xc],edx
   140030db9:	mov    eax,DWORD PTR [rcx+0x200c]
   140030dbf:	mov    DWORD PTR [rcx+rax*4+0x100c],r8d
   140030dc7:	inc    DWORD PTR [rcx+0x200c]
   140030dcd:	cmp    DWORD PTR [rcx+0x4],0x0
   140030dd1:	je     0x140030dee
   140030dd3:	mov    r8d,DWORD PTR [rcx]
   140030dd6:	cmp    r8d,edx
   140030dd9:	je     0x140030df4
   140030ddb:	mov    eax,DWORD PTR [rcx+0x2010]
   140030de1:	sub    r8d,edx
   140030de4:	and    r8d,eax
   140030de7:	shr    eax,1
   140030de9:	cmp    r8d,eax
   140030dec:	jae    0x140030df4
   140030dee:	mov    DWORD PTR [rcx],edx
   140030df0:	mov    DWORD PTR [rcx+0x4],r9d
   140030df4:	ret    
   140030df5:	int3   
   140030df6:	int3   
   140030df7:	int3   
   140030df8:	mov    eax,DWORD PTR [rcx+0x4]
   140030dfb:	mov    rdx,rcx
   140030dfe:	mov    DWORD PTR [rcx+0x8],eax
   140030e01:	or     r9d,0xffffffff
   140030e05:	or     r11d,0xffffffff
   140030e09:	xor    ecx,ecx
   140030e0b:	mov    r10d,DWORD PTR [rdx+0x200c]
   140030e12:	test   r10d,r10d
   140030e15:	je     0x140030e5c
   140030e17:	mov    r8d,DWORD PTR [rdx+rcx*4+0xc]
   140030e1c:	cmp    r8d,0xffffffff
   140030e20:	je     0x140030e37
   140030e22:	sub    r8d,DWORD PTR [rdx]
   140030e25:	and    r8d,DWORD PTR [rdx+0x2010]
   140030e2c:	cmp    r8d,r11d
   140030e2f:	jae    0x140030e37
   140030e31:	mov    r11d,r8d
   140030e34:	mov    r9d,ecx
   140030e37:	inc    ecx
   140030e39:	cmp    ecx,r10d
   140030e3c:	jb     0x140030e17
   140030e3e:	cmp    r9d,0xffffffff
   140030e42:	je     0x140030e5c
   140030e44:	movsxd rcx,r9d
   140030e47:	mov    eax,DWORD PTR [rdx+rcx*4+0xc]
   140030e4b:	mov    DWORD PTR [rdx],eax
   140030e4d:	mov    eax,DWORD PTR [rdx+rcx*4+0x100c]
   140030e54:	mov    DWORD PTR [rdx+0x4],eax
   140030e57:	or     DWORD PTR [rdx+rcx*4+0xc],0xffffffff
   140030e5c:	ret    
   140030e5d:	int3   
   140030e5e:	int3   
   140030e5f:	int3   
   140030e60:	xor    eax,eax
   140030e62:	mov    DWORD PTR [rcx+0x2010],edx
   140030e68:	mov    QWORD PTR [rcx],rax
   140030e6b:	mov    DWORD PTR [rcx+0x8],eax
   140030e6e:	mov    DWORD PTR [rcx+0x200c],eax
   140030e74:	ret    
   140030e75:	int3   
   140030e76:	int3   
   140030e77:	int3   
   140030e78:	or     rax,0xffffffffffffffff
   140030e7c:	xor    r8d,r8d
   140030e7f:	inc    rax
   140030e82:	cmp    WORD PTR [rcx+rax*2],r8w
   140030e87:	jne    0x140030e7f
   140030e89:	test   rax,rax
   140030e8c:	je     0x140030eb4
   140030e8e:	cmp    WORD PTR [rcx+rax*2-0x2],0x5c
   140030e94:	je     0x140030eb4
   140030e96:	inc    rax
   140030e99:	cmp    rax,rdx
   140030e9c:	jae    0x140030eb4
   140030e9e:	sub    rcx,0x2
   140030ea2:	lea    rcx,[rcx+0x2]
   140030ea6:	cmp    WORD PTR [rcx],r8w
   140030eaa:	jne    0x140030ea2
   140030eac:	mov    eax,DWORD PTR [rip+0x3e68a]        # 0x14006f53c
   140030eb2:	mov    DWORD PTR [rcx],eax
   140030eb4:	ret    
   140030eb5:	int3   
   140030eb6:	int3   
   140030eb7:	int3   
   140030eb8:	mov    QWORD PTR [rsp+0x8],rbx
   140030ebd:	push   rdi
   140030ebe:	sub    rsp,0x20
   140030ec2:	mov    rdi,rdx
   140030ec5:	call   0x140031bd4
   140030eca:	xor    ebx,ebx
   140030ecc:	test   rax,rax
   140030ecf:	je     0x140030ee4
   140030ed1:	lea    rcx,[rax+0x2]
   140030ed5:	mov    rdx,rdi
   140030ed8:	call   0x140048f34
   140030edd:	test   eax,eax
   140030edf:	jne    0x140030ee4
   140030ee1:	lea    ebx,[rax+0x1]
   140030ee4:	mov    al,bl
   140030ee6:	mov    rbx,QWORD PTR [rsp+0x30]
   140030eeb:	add    rsp,0x20
   140030eef:	pop    rdi
   140030ef0:	ret    
   140030ef1:	int3   
   140030ef2:	int3   
   140030ef3:	int3   
   140030ef4:	rex push rbx
   140030ef6:	push   rbp
   140030ef7:	push   rsi
   140030ef8:	push   rdi
   140030ef9:	push   r14
   140030efb:	mov    eax,0x2040
   140030f00:	call   0x140055f20
   140030f05:	sub    rsp,rax
   140030f08:	mov    rax,QWORD PTR [rip+0x50fd1]        # 0x140081ee0
   140030f0f:	xor    rax,rsp
   140030f12:	mov    QWORD PTR [rsp+0x2030],rax
   140030f1a:	xor    r14d,r14d
   140030f1d:	mov    rsi,r8
   140030f20:	mov    rdi,rdx
   140030f23:	mov    rbx,rcx
   140030f26:	test   rcx,rcx
   140030f29:	je     0x140030fba
   140030f2f:	cmp    WORD PTR [rcx],r14w
   140030f33:	je     0x140030fba
   140030f39:	lea    r9,[rsp+0x20]
   140030f3e:	mov    edx,0x800
   140030f43:	lea    r8,[rsp+0x30]
   140030f48:	call   QWORD PTR [rip+0x3b232]        # 0x14006c180
   140030f4e:	mov    ebp,eax
   140030f50:	lea    ecx,[rax-0x1]
   140030f53:	cmp    ecx,0x7ff
   140030f59:	jbe    0x140030f94
   140030f5b:	mov    r8d,0x800
   140030f61:	lea    rdx,[rsp+0x1030]
   140030f69:	mov    rcx,rbx
   140030f6c:	call   0x140031ef0
   140030f71:	test   al,al
   140030f73:	je     0x140030f94
   140030f75:	lea    r9,[rsp+0x20]
   140030f7a:	mov    edx,0x800
   140030f7f:	lea    r8,[rsp+0x30]
   140030f84:	lea    rcx,[rsp+0x1030]
   140030f8c:	call   QWORD PTR [rip+0x3b1ee]        # 0x14006c180
   140030f92:	mov    ebp,eax
   140030f94:	lea    eax,[rbp-0x1]
   140030f97:	cmp    eax,0x7fe
   140030f9c:	ja     0x140030fa5
   140030f9e:	lea    rdx,[rsp+0x30]
   140030fa3:	jmp    0x140030fad
   140030fa5:	cmp    rbx,rdi
   140030fa8:	je     0x140030fc3
   140030faa:	mov    rdx,rbx
   140030fad:	mov    r8,rsi
   140030fb0:	mov    rcx,rdi
   140030fb3:	call   0x140046158
   140030fb8:	jmp    0x140030fc3
   140030fba:	test   r8,r8
   140030fbd:	je     0x140030fc3
   140030fbf:	mov    WORD PTR [rdx],r14w
   140030fc3:	mov    rcx,QWORD PTR [rsp+0x2030]
   140030fcb:	xor    rcx,rsp
   140030fce:	call   0x140055f90
   140030fd3:	add    rsp,0x2040
   140030fda:	pop    r14
   140030fdc:	pop    rdi
   140030fdd:	pop    rsi
   140030fde:	pop    rbp
   140030fdf:	pop    rbx
   140030fe0:	ret    
   140030fe1:	int3   
   140030fe2:	int3   
   140030fe3:	int3   
   140030fe4:	mov    QWORD PTR [rsp+0x18],rbx
   140030fe9:	mov    QWORD PTR [rsp+0x20],rbp
   140030fee:	push   rsi
   140030fef:	push   rdi
   140030ff0:	push   r14
   140030ff2:	mov    eax,0x1030
   140030ff7:	call   0x140055f20
   140030ffc:	sub    rsp,rax
   140030fff:	mov    rax,QWORD PTR [rip+0x50eda]        # 0x140081ee0
   140031006:	xor    rax,rsp
   140031009:	mov    QWORD PTR [rsp+0x1020],rax
   140031011:	xor    ebp,ebp
   140031013:	mov    rbx,rcx
   140031016:	movzx  ecx,WORD PTR [rcx]
   140031019:	mov    rsi,rdx
   14003101c:	lea    r14d,[rbp+0x5c]
   140031020:	test   cx,cx
   140031023:	je     0x140031062
   140031025:	lea    rax,[rbx+0x4]
   140031029:	movzx  edx,cx
   14003102c:	cmp    edx,r14d
   14003102f:	je     0x140031036
   140031031:	cmp    edx,0x2f
   140031034:	jne    0x140031055
   140031036:	cmp    WORD PTR [rax-0x2],0x2e
   14003103b:	jne    0x140031055
   14003103d:	cmp    WORD PTR [rax],0x2e
   140031041:	jne    0x140031055
   140031043:	movzx  ecx,WORD PTR [rax+0x2]
   140031047:	cmp    ecx,r14d
   14003104a:	je     0x140031051
   14003104c:	cmp    ecx,0x2f
   14003104f:	jne    0x140031055
   140031051:	lea    rbx,[rax+0x4]
   140031055:	movzx  ecx,WORD PTR [rax-0x2]
   140031059:	add    rax,0x2
   14003105d:	test   cx,cx
   140031060:	jne    0x140031029
   140031062:	cmp    WORD PTR [rbx],bp
   140031065:	je     0x1400310eb
   14003106b:	mov    rdi,rbx
   14003106e:	cmp    WORD PTR [rbx],bp
   140031071:	je     0x14003107e
   140031073:	cmp    WORD PTR [rbx+0x2],0x3a
   140031078:	jne    0x14003107e
   14003107a:	lea    rdi,[rbx+0x4]
   14003107e:	cmp    WORD PTR [rdi],r14w
   140031082:	jne    0x1400310b1
   140031084:	cmp    WORD PTR [rdi+0x2],r14w
   140031089:	jne    0x1400310b1
   14003108b:	mov    edx,r14d
   14003108e:	lea    rcx,[rdi+0x4]
   140031092:	call   0x1400590e0
   140031097:	test   rax,rax
   14003109a:	je     0x1400310b1
   14003109c:	mov    edx,r14d
   14003109f:	lea    rcx,[rax+0x2]
   1400310a3:	call   0x1400590e0
   1400310a8:	test   rax,rax
   1400310ab:	je     0x1400310b1
   1400310ad:	lea    rdi,[rax+0x2]
   1400310b1:	movzx  eax,WORD PTR [rdi]
   1400310b4:	mov    rcx,rdi
   1400310b7:	jmp    0x1400310d9
   1400310b9:	movzx  edx,ax
   1400310bc:	cmp    edx,r14d
   1400310bf:	je     0x1400310ce
   1400310c1:	cmp    edx,0x2f
   1400310c4:	je     0x1400310ce
   1400310c6:	cmp    ax,0x2e
   1400310ca:	jne    0x1400310de
   1400310cc:	jmp    0x1400310d2
   1400310ce:	lea    rdi,[rcx+0x2]
   1400310d2:	add    rcx,0x2
   1400310d6:	movzx  eax,WORD PTR [rcx]
   1400310d9:	test   ax,ax
   1400310dc:	jne    0x1400310b9
   1400310de:	cmp    rdi,rbx
   1400310e1:	je     0x1400310eb
   1400310e3:	mov    rbx,rdi
   1400310e6:	cmp    WORD PTR [rdi],bp
   1400310e9:	jne    0x14003106b
   1400310eb:	cmp    WORD PTR [rbx],0x2e
   1400310ef:	jne    0x140031103
   1400310f1:	cmp    WORD PTR [rbx+0x2],0x2e
   1400310f6:	jne    0x140031103
   1400310f8:	lea    rax,[rbx+0x4]
   1400310fc:	cmp    WORD PTR [rax],bp
   1400310ff:	cmove  rbx,rax
   140031103:	test   rsi,rsi
   140031106:	je     0x140031138
   140031108:	mov    r8d,0x800
   14003110e:	lea    rcx,[rsp+0x20]
   140031113:	mov    rdx,rbx
   140031116:	call   0x140046158
   14003111b:	lea    rax,[rsp+0x20]
   140031120:	sub    rsi,rax
   140031123:	lea    rdx,[rsp+0x20]
   140031128:	movzx  ecx,WORD PTR [rdx]
   14003112b:	mov    WORD PTR [rsi+rdx*1],cx
   14003112f:	lea    rdx,[rdx+0x2]
   140031133:	test   cx,cx
   140031136:	jne    0x140031128
   140031138:	mov    rax,rbx
   14003113b:	mov    rcx,QWORD PTR [rsp+0x1020]
   140031143:	xor    rcx,rsp
   140031146:	call   0x140055f90
   14003114b:	lea    r11,[rsp+0x1030]
   140031153:	mov    rbx,QWORD PTR [r11+0x30]
   140031157:	mov    rbp,QWORD PTR [r11+0x38]
   14003115b:	mov    rsp,r11
   14003115e:	pop    r14
   140031160:	pop    rdi
   140031161:	pop    rsi
   140031162:	ret    
   140031163:	int3   
   140031164:	mov    QWORD PTR [rsp+0x18],rbx
   140031169:	push   rdi
   14003116a:	mov    eax,0x1040
   14003116f:	call   0x140055f20
   140031174:	sub    rsp,rax
   140031177:	mov    rax,QWORD PTR [rip+0x50d62]        # 0x140081ee0
   14003117e:	xor    rax,rsp
   140031181:	mov    QWORD PTR [rsp+0x1030],rax
   140031189:	mov    rdi,rdx
   14003118c:	mov    rbx,rcx
   14003118f:	call   0x14002454c
   140031194:	cmp    eax,0x600
   140031199:	jb     0x1400311d7
   14003119b:	or     r8d,0xffffffff
   14003119f:	mov    DWORD PTR [rsp+0x20],0x800
   1400311a7:	lea    r9,[rsp+0x30]
   1400311ac:	mov    rdx,rbx
   1400311af:	lea    ecx,[r8+0x21]
   1400311b3:	call   QWORD PTR [rip+0x3afcf]        # 0x14006c188
   1400311b9:	xor    ecx,ecx
   1400311bb:	test   eax,eax
   1400311bd:	je     0x1400311d7
   1400311bf:	mov    WORD PTR [rsp+0x102e],cx
   1400311c7:	lea    rdx,[rsp+0x30]
   1400311cc:	mov    rcx,rbx
   1400311cf:	mov    r8,rdi
   1400311d2:	call   0x140046158
   1400311d7:	mov    rcx,QWORD PTR [rsp+0x1030]
   1400311df:	xor    rcx,rsp
   1400311e2:	call   0x140055f90
   1400311e7:	mov    rbx,QWORD PTR [rsp+0x1060]
   1400311ef:	add    rsp,0x1040
   1400311f6:	pop    rdi
   1400311f7:	ret    
   1400311f8:	xor    r9d,r9d
   1400311fb:	lea    r10,[r8-0x1]
   1400311ff:	test   r10,r10
   140031202:	je     0x14003122e
   140031204:	mov    r8,rdx
   140031207:	sub    r8,rcx
   14003120a:	cmp    BYTE PTR [rcx],0x0
   14003120d:	je     0x14003122e
   14003120f:	cmp    BYTE PTR [rcx],0x5c
   140031212:	mov    r11d,0x2f
   140031218:	movzx  eax,BYTE PTR [rcx]
   14003121b:	cmove  eax,r11d
   14003121f:	inc    r9
   140031222:	mov    BYTE PTR [r8+rcx*1],al
   140031226:	inc    rcx
   140031229:	cmp    r9,r10
   14003122c:	jb     0x14003120a
   14003122e:	mov    BYTE PTR [r9+rdx*1],0x0
   140031233:	ret    
   140031234:	xor    r11d,r11d
   140031237:	mov    r10,rcx
   14003123a:	mov    r9d,r11d
   14003123d:	sub    r8,0x1
   140031241:	je     0x140031272
   140031243:	mov    rax,rdx
   140031246:	sub    r10,rdx
   140031249:	movzx  ecx,WORD PTR [r10+rax*1]
   14003124e:	test   cx,cx
   140031251:	je     0x140031272
   140031253:	cmp    cx,0x5c
   140031257:	jne    0x140031260
   140031259:	mov    ecx,0x2f
   14003125e:	jmp    0x140031263
   140031260:	movzx  ecx,cx
   140031263:	mov    WORD PTR [rax],cx
   140031266:	inc    r9
   140031269:	add    rax,0x2
   14003126d:	cmp    r9,r8
   140031270:	jb     0x140031249
   140031272:	mov    WORD PTR [rdx+r9*2],r11w
   140031277:	ret    
   140031278:	rex push rbx
   14003127a:	sub    rsp,0x20
   14003127e:	mov    rax,r8
   140031281:	mov    rbx,rdx
   140031284:	cmp    ecx,0x1
   140031287:	jbe    0x14003128d
   140031289:	xor    al,al
   14003128b:	jmp    0x1400312b3
   14003128d:	test   ecx,ecx
   14003128f:	jne    0x1400312a1
   140031291:	mov    r8b,r9b
   140031294:	mov    rdx,rax
   140031297:	mov    rcx,rbx
   14003129a:	call   0x140031d60
   14003129f:	jmp    0x1400312b1
   1400312a1:	xor    ecx,ecx
   1400312a3:	call   QWORD PTR [rip+0x3aec7]        # 0x14006c170
   1400312a9:	mov    rcx,rbx
   1400312ac:	call   0x140032810
   1400312b1:	mov    al,0x1
   1400312b3:	add    rsp,0x20
   1400312b7:	pop    rbx
   1400312b8:	ret    
   1400312b9:	int3   
   1400312ba:	int3   
   1400312bb:	int3   
   1400312bc:	rex push rbp
   1400312be:	push   rbx
   1400312bf:	push   rsi
   1400312c0:	push   rdi
   1400312c1:	push   r12
   1400312c3:	push   r13
   1400312c5:	push   r14
   1400312c7:	push   r15
   1400312c9:	lea    rbp,[rsp-0x21f8]
   1400312d1:	mov    eax,0x22f8
   1400312d6:	call   0x140055f20
   1400312db:	sub    rsp,rax
   1400312de:	mov    rax,QWORD PTR [rip+0x50bfb]        # 0x140081ee0
   1400312e5:	xor    rax,rsp
   1400312e8:	mov    QWORD PTR [rbp+0x21e0],rax
   1400312ef:	xor    r13d,r13d
   1400312f2:	mov    QWORD PTR [rsp+0x40],rcx
   1400312f7:	cmp    WORD PTR [rdx],0x2b
   1400312fb:	mov    rsi,rcx
   1400312fe:	mov    QWORD PTR [rsp+0x28],r9
   140031303:	mov    r15d,r8d
   140031306:	mov    DWORD PTR [rsp+0x24],r8d
   14003130b:	mov    rax,rdx
   14003130e:	lea    ecx,[r13+0x1]
   140031312:	mov    BYTE PTR [rsp+0x21],r13b
   140031317:	jne    0x140031321
   140031319:	mov    BYTE PTR [rsp+0x21],cl
   14003131d:	add    rax,0x2
   140031321:	cmp    WORD PTR [rax],r13w
   140031325:	lea    rdx,[rip+0x3e2ec]        # 0x14006f618
   14003132c:	mov    r8d,0x80
   140031332:	lea    rcx,[rbp-0x20]
   140031336:	cmovne rdx,rax
   14003133a:	call   0x140046158
   14003133f:	mov    cl,r13b
   140031342:	mov    r12b,r13b
   140031345:	mov    r14d,r13d
   140031348:	mov    BYTE PTR [rsp+0x20],cl
   14003134c:	mov    edx,0xfffd
   140031351:	cmp    WORD PTR [rbp-0x20],r13w
   140031356:	je     0x14003148d
   14003135c:	mov    rsi,QWORD PTR [rsp+0x28]
   140031361:	mov    r13d,r14d
   140031364:	lea    rdi,[rbp-0x20]
   140031368:	lea    rdi,[rdi+r13*2]
   14003136c:	movzx  eax,WORD PTR [rdi]
   14003136f:	sub    ax,0x7b
   140031373:	mov    QWORD PTR [rsp+0x38],rdi
   140031378:	test   dx,ax
   14003137b:	je     0x1400314fd
   140031381:	xor    ebx,ebx
   140031383:	test   cl,cl
   140031385:	jne    0x140031476
   14003138b:	movzx  ecx,WORD PTR [rdi]
   14003138e:	call   0x140048f28
   140031393:	cmp    eax,0x48
   140031396:	movzx  r12d,r12b
   14003139a:	lea    ecx,[rbx+0x1]
   14003139d:	cmove  r12d,ecx
   1400313a1:	test   r12b,r12b
   1400313a4:	je     0x1400313b1
   1400313a6:	cmp    eax,0x4d
   1400313a9:	jne    0x1400313b1
   1400313ab:	lea    ecx,[rbx+0x49]
   1400313ae:	mov    WORD PTR [rdi],cx
   1400313b1:	mov    ecx,0x4e
   1400313b6:	cmp    eax,ecx
   1400313b8:	jne    0x14003146d
   1400313be:	mov    ecx,r15d
   1400313c1:	call   0x140045bd4
   1400313c6:	movzx  ecx,WORD PTR [rdi]
   1400313c9:	mov    r15d,eax
   1400313cc:	call   0x140048f28
   1400313d1:	mov    ecx,0x4e
   1400313d6:	cmp    eax,ecx
   1400313d8:	jne    0x140031403
   1400313da:	mov    r13d,r14d
   1400313dd:	lea    esi,[rcx-0x4d]
   1400313e0:	mov    edi,ecx
   1400313e2:	add    r13d,esi
   1400313e5:	add    ebx,esi
   1400313e7:	movzx  ecx,WORD PTR [rbp+r13*2-0x20]
   1400313ed:	call   0x140048f28
   1400313f2:	cmp    eax,edi
   1400313f4:	je     0x1400313e2
   1400313f6:	mov    rdi,QWORD PTR [rsp+0x38]
   1400313fb:	mov    rsi,QWORD PTR [rsp+0x28]
   140031400:	mov    r13d,r14d
   140031403:	cmp    r15d,ebx
   140031406:	jbe    0x140031457
   140031408:	mov    eax,ebx
   14003140a:	lea    rdx,[rbp-0x20]
   14003140e:	add    rax,r13
   140031411:	or     r8,0xffffffffffffffff
   140031415:	xor    r9d,r9d
   140031418:	lea    rdx,[rdx+rax*2]
   14003141c:	inc    r8
   14003141f:	cmp    WORD PTR [rdx+r8*2],r9w
   140031424:	jne    0x14003141c
   140031426:	mov    eax,r14d
   140031429:	lea    rcx,[rbp-0x20]
   14003142d:	add    rax,r15
   140031430:	lea    r8,[r8*2+0x2]
   140031438:	lea    rcx,[rcx+rax*2]
   14003143c:	call   0x140059180
   140031441:	test   r15d,r15d
   140031444:	je     0x140031454
   140031446:	mov    eax,0x4e
   14003144b:	mov    rcx,r15
   14003144e:	movzx  eax,ax
   140031451:	rep stos WORD PTR es:[rdi],ax
   140031454:	cmp    r15d,ebx
   140031457:	cmova  ebx,r15d
   14003145b:	mov    ecx,0x1
   140031460:	mov    r15d,DWORD PTR [rsp+0x24]
   140031465:	dec    r14d
   140031468:	add    r14d,ebx
   14003146b:	mov    BYTE PTR [rsi],cl
   14003146d:	mov    cl,BYTE PTR [rsp+0x20]
   140031471:	mov    edx,0xfffd
   140031476:	inc    r14d
   140031479:	xor    r13d,r13d
   14003147c:	cmp    WORD PTR [rbp+r14*2-0x20],r13w
   140031482:	jne    0x140031361
   140031488:	mov    rsi,QWORD PTR [rsp+0x40]
   14003148d:	lea    rcx,[rsp+0x30]
   140031492:	mov    QWORD PTR [rsp+0x30],r13
   140031497:	call   0x1400476c0
   14003149c:	lea    rdx,[rsp+0x48]
   1400314a1:	lea    rcx,[rsp+0x30]
   1400314a6:	call   0x1400472e8
   1400314ab:	mov    rcx,rsi
   1400314ae:	call   0x140031bd4
   1400314b3:	mov    WORD PTR [rbp+0x11e0],r13w
   1400314bb:	mov    rdi,rax
   1400314be:	test   rax,rax
   1400314c1:	jne    0x14003150d
   1400314c3:	mov    rcx,rsi
   1400314c6:	call   0x1400327bc
   1400314cb:	lea    rdx,[rip+0x3e166]        # 0x14006f638
   1400314d2:	lea    rcx,[rip+0x3e133]        # 0x14006f60c
   1400314d9:	cmp    WORD PTR [rax],r13w
   1400314dd:	cmove  rcx,rdx
   1400314e1:	lea    rdx,[rbp+0x11e0]
   1400314e8:	movzx  eax,WORD PTR [rcx]
   1400314eb:	lea    rcx,[rcx+0x2]
   1400314ef:	mov    WORD PTR [rdx],ax
   1400314f2:	lea    rdx,[rdx+0x2]
   1400314f6:	test   ax,ax
   1400314f9:	jne    0x1400314e8
   1400314fb:	jmp    0x140031526
   1400314fd:	cmp    WORD PTR [rdi],0x7b
   140031501:	sete   cl
   140031504:	mov    BYTE PTR [rsp+0x20],cl
   140031508:	jmp    0x140031476
   14003150d:	mov    r8d,0x800
   140031513:	lea    rcx,[rbp+0x11e0]
   14003151a:	mov    rdx,rax
   14003151d:	call   0x140046158
   140031522:	mov    WORD PTR [rdi],r13w
   140031526:	mov    eax,DWORD PTR [rsp+0x64]
   14003152a:	mov    ecx,0x6
   14003152f:	mov    edi,DWORD PTR [rsp+0x68]
   140031533:	test   eax,eax
   140031535:	lea    ebx,[rax-0x1]
   140031538:	cmove  ebx,ecx
   14003153b:	sub    edi,ebx
   14003153d:	jns    0x140031562
   14003153f:	cmp    edi,0xfffffffc
   140031542:	jg     0x14003155f
   140031544:	mov    ecx,DWORD PTR [rsp+0x48]
   140031548:	dec    ecx
   14003154a:	call   0x1400475ac
   14003154f:	neg    al
   140031551:	sbb    ecx,ecx
   140031553:	neg    ecx
   140031555:	add    ecx,0x16d
   14003155b:	add    edi,ecx
   14003155d:	jmp    0x140031562
   14003155f:	mov    edi,r13d
   140031562:	mov    eax,0x92492493
   140031567:	mov    r12d,0x1
   14003156d:	imul   edi
   14003156f:	add    edx,edi
   140031571:	sar    edx,0x2
   140031574:	mov    eax,edx
   140031576:	shr    eax,0x1f
   140031579:	add    edx,eax
   14003157b:	imul   eax,edx,0x7
   14003157e:	lea    r14d,[rdx+0x1]
   140031582:	sub    edi,eax
   140031584:	cmp    edi,0x4
   140031587:	jl     0x14003158c
   140031589:	add    r14d,r12d
   14003158c:	mov    r8d,DWORD PTR [rsp+0x48]
   140031591:	lea    rdx,[rip+0x3e0ac]        # 0x14006f644
   140031598:	lea    rcx,[rbp-0x68]
   14003159c:	call   0x14001b688
   1400315a1:	mov    r8d,DWORD PTR [rsp+0x4c]
   1400315a6:	lea    rdx,[rip+0x3e09f]        # 0x14006f64c
   1400315ad:	lea    rcx,[rbp-0x62]
   1400315b1:	call   0x14001b688
   1400315b6:	mov    r8d,DWORD PTR [rsp+0x50]
   1400315bb:	lea    rdx,[rip+0x3e092]        # 0x14006f654
   1400315c2:	lea    rcx,[rbp-0x5c]
   1400315c6:	call   0x14001b688
   1400315cb:	mov    r8d,DWORD PTR [rsp+0x54]
   1400315d0:	lea    rdx,[rip+0x3e085]        # 0x14006f65c
   1400315d7:	lea    rcx,[rbp-0x56]
   1400315db:	call   0x14001b688
   1400315e0:	mov    r8d,DWORD PTR [rsp+0x58]
   1400315e5:	lea    rdx,[rip+0x3e078]        # 0x14006f664
   1400315ec:	lea    rcx,[rbp-0x50]
   1400315f0:	call   0x14001b688
   1400315f5:	mov    r8d,DWORD PTR [rsp+0x5c]
   1400315fa:	lea    rdx,[rip+0x3e06b]        # 0x14006f66c
   140031601:	lea    rcx,[rbp-0x4a]
   140031605:	call   0x14001b688
   14003160a:	mov    r8d,r14d
   14003160d:	lea    rdx,[rip+0x3e060]        # 0x14006f674
   140031614:	lea    rcx,[rbp-0x44]
   140031618:	call   0x14001b688
   14003161d:	lea    r8d,[rbx+0x1]
   140031621:	lea    rdx,[rip+0x3e054]        # 0x14006f67c
   140031628:	lea    rcx,[rbp-0x3e]
   14003162c:	call   0x14001b688
   140031631:	mov    r8d,DWORD PTR [rsp+0x68]
   140031636:	lea    rdx,[rip+0x3e043]        # 0x14006f680
   14003163d:	inc    r8d
   140031640:	lea    rcx,[rbp-0x38]
   140031644:	call   0x14001b688
   140031649:	mov    r8d,r15d
   14003164c:	lea    rdx,[rip+0x3e035]        # 0x14006f688
   140031653:	lea    rcx,[rbp-0x32]
   140031657:	call   0x14001b688
   14003165c:	xor    edx,edx
   14003165e:	lea    rcx,[rsp+0x70]
   140031663:	lea    r8d,[rdx+0x28]
   140031667:	call   0x140058f40
   14003166c:	movzx  eax,WORD PTR [rbp-0x20]
   140031670:	lea    r14,[rip+0x3e019]        # 0x14006f690
   140031677:	mov    bl,r13b
   14003167a:	test   ax,ax
   14003167d:	je     0x1400316dc
   14003167f:	mov    rdi,r13
   140031682:	lea    rax,[rbp-0x20]
   140031686:	mov    r15d,0xfffd
   14003168c:	movzx  ecx,WORD PTR [rax]
   14003168f:	lea    eax,[rcx-0x7b]
   140031692:	test   r15w,ax
   140031696:	je     0x1400316c0
   140031698:	test   bl,bl
   14003169a:	jne    0x1400316c7
   14003169c:	movzx  ecx,cx
   14003169f:	call   0x140048f28
   1400316a4:	mov    edx,eax
   1400316a6:	mov    rcx,r14
   1400316a9:	call   0x1400590e0
   1400316ae:	test   rax,rax
   1400316b1:	je     0x1400316c7
   1400316b3:	sub    rax,r14
   1400316b6:	sar    rax,1
   1400316b9:	add    DWORD PTR [rsp+rax*4+0x70],r12d
   1400316be:	jmp    0x1400316c7
   1400316c0:	cmp    cx,0x7b
   1400316c4:	sete   bl
   1400316c7:	add    rdi,r12
   1400316ca:	lea    rax,[rbp-0x20]
   1400316ce:	lea    rax,[rax+rdi*2]
   1400316d2:	cmp    WORD PTR [rax],r13w
   1400316d6:	jne    0x14003168c
   1400316d8:	movzx  eax,WORD PTR [rbp-0x20]
   1400316dc:	mov    WORD PTR [rbp+0xe0],r13w
   1400316e4:	mov    dil,r13b
   1400316e7:	mov    BYTE PTR [rsp+0x20],r13b
   1400316ec:	mov    rbx,r13
   1400316ef:	test   ax,ax
   1400316f2:	je     0x140031881
   1400316f8:	lea    r14,[rbp-0x20]
   1400316fc:	lea    r15,[rbp-0x1c]
   140031700:	lea    r12,[rbp-0x1e]
   140031704:	cmp    rbx,0x7f
   140031708:	jae    0x140031881
   14003170e:	movzx  eax,WORD PTR [r14]
   140031712:	mov    ecx,0xfffd
   140031717:	sub    ax,0x7b
   14003171b:	test   cx,ax
   14003171e:	je     0x14003185d
   140031724:	movzx  ecx,WORD PTR [r14]
   140031728:	call   0x140048f28
   14003172d:	mov    edx,eax
   14003172f:	lea    rcx,[rip+0x3df5a]        # 0x14006f690
   140031736:	call   0x1400590e0
   14003173b:	mov    rdx,rax
   14003173e:	test   rax,rax
   140031741:	je     0x140031820
   140031747:	test   dil,dil
   14003174a:	jne    0x140031820
   140031750:	lea    rax,[rip+0x3df39]        # 0x14006f690
   140031757:	or     rdi,0xffffffffffffffff
   14003175b:	sub    rdx,rax
   14003175e:	sar    rdx,1
   140031761:	mov    eax,DWORD PTR [rsp+rdx*4+0x70]
   140031765:	lea    rcx,[rdx+rdx*2]
   140031769:	lea    r13,[rcx+rcx*1]
   14003176d:	lea    rcx,[rbp-0x68]
   140031771:	add    rcx,r13
   140031774:	xor    r9d,r9d
   140031777:	inc    rdi
   14003177a:	cmp    BYTE PTR [rcx+rdi*1],r9b
   14003177e:	jne    0x140031777
   140031780:	sub    edi,eax
   140031782:	dec    eax
   140031784:	mov    DWORD PTR [rsp+rdx*4+0x70],eax
   140031788:	mov    eax,0x1
   14003178d:	cmp    rdx,rax
   140031790:	jne    0x140031801
   140031792:	movzx  ecx,WORD PTR [r12]
   140031797:	call   0x140048f28
   14003179c:	cmp    eax,0x4d
   14003179f:	jne    0x140031801
   1400317a1:	movzx  ecx,WORD PTR [r15]
   1400317a5:	call   0x140048f28
   1400317aa:	cmp    eax,0x4d
   1400317ad:	jne    0x140031801
   1400317af:	mov    ecx,DWORD PTR [rsp+0x4c]
   1400317b3:	lea    edi,[rax+0x33]
   1400317b6:	sub    rdi,rbx
   1400317b9:	dec    ecx
   1400317bb:	call   0x14004747c
   1400317c0:	lea    rcx,[rbp+0xe0]
   1400317c7:	mov    rdx,rax
   1400317ca:	lea    rcx,[rcx+rbx*2]
   1400317ce:	mov    r8,rdi
   1400317d1:	call   0x140046158
   1400317d6:	or     rbx,0xffffffffffffffff
   1400317da:	lea    rax,[rbp+0xe0]
   1400317e1:	xor    r13d,r13d
   1400317e4:	inc    rbx
   1400317e7:	cmp    WORD PTR [rax+rbx*2],r13w
   1400317ec:	jne    0x1400317e4
   1400317ee:	mov    dil,BYTE PTR [rsp+0x20]
   1400317f3:	add    r12,0x4
   1400317f7:	add    r15,0x4
   1400317fb:	add    r14,0x4
   1400317ff:	jmp    0x14003186b
   140031801:	test   edi,edi
   140031803:	jns    0x140031813
   140031805:	movzx  eax,WORD PTR [r14]
   140031809:	mov    dil,BYTE PTR [rsp+0x20]
   14003180e:	xor    r13d,r13d
   140031811:	jmp    0x140031837
   140031813:	movsxd rax,edi
   140031816:	add    rax,r13
   140031819:	movsx  eax,BYTE PTR [rbp+rax*1-0x68]
   14003181e:	jmp    0x140031809
   140031820:	movzx  eax,WORD PTR [r14]
   140031824:	mov    WORD PTR [rbp+rbx*2+0xe0],ax
   14003182c:	cmp    ax,0x3a
   140031830:	jne    0x14003183f
   140031832:	mov    eax,0x5f
   140031837:	mov    WORD PTR [rbp+rbx*2+0xe0],ax
   14003183f:	inc    rbx
   140031842:	lea    rax,[rbx+rbx*1]
   140031846:	cmp    rax,0x100
   14003184c:	jae    0x140031974
   140031852:	mov    WORD PTR [rbp+rax*1+0xe0],r13w
   14003185b:	jmp    0x14003186b
   14003185d:	cmp    WORD PTR [r14],0x7b
   140031862:	sete   dil
   140031866:	mov    BYTE PTR [rsp+0x20],dil
   14003186b:	add    r14,0x2
   14003186f:	add    r12,0x2
   140031873:	add    r15,0x2
   140031877:	cmp    WORD PTR [r14],r13w
   14003187b:	jne    0x140031704
   140031881:	cmp    BYTE PTR [rsp+0x21],r13b
   140031886:	je     0x140031903
   140031888:	mov    edi,0x800
   14003188d:	lea    rdx,[rbp+0x1e0]
   140031894:	mov    r8d,edi
   140031897:	mov    rcx,rsi
   14003189a:	call   0x140031bf8
   14003189f:	mov    edx,edi
   1400318a1:	lea    rcx,[rbp+0x1e0]
   1400318a8:	call   0x140030e78
   1400318ad:	mov    r8d,edi
   1400318b0:	lea    rdx,[rbp+0xe0]
   1400318b7:	lea    rcx,[rbp+0x1e0]
   1400318be:	call   0x140046120
   1400318c3:	mov    rcx,rsi
   1400318c6:	call   0x1400327bc
   1400318cb:	mov    rdx,rax
   1400318ce:	lea    rcx,[rbp+0x1e0]
   1400318d5:	mov    r8d,edi
   1400318d8:	call   0x140046120
   1400318dd:	lea    rax,[rbp+0x1e0]
   1400318e4:	mov    rdx,rsi
   1400318e7:	sub    rdx,rax
   1400318ea:	lea    rcx,[rbp+0x1e0]
   1400318f1:	movzx  eax,WORD PTR [rcx]
   1400318f4:	mov    WORD PTR [rcx+rdx*1],ax
   1400318f8:	lea    rcx,[rcx+0x2]
   1400318fc:	test   ax,ax
   1400318ff:	jne    0x1400318f1
   140031901:	jmp    0x14003192a
   140031903:	lea    rcx,[rsi-0x2]
   140031907:	lea    rcx,[rcx+0x2]
   14003190b:	cmp    WORD PTR [rcx],r13w
   14003190f:	jne    0x140031907
   140031911:	lea    rdi,[rbp+0xe0]
   140031918:	xor    edx,edx
   14003191a:	movzx  eax,WORD PTR [rdi+rdx*2]
   14003191e:	mov    WORD PTR [rcx+rdx*2],ax
   140031922:	inc    rdx
   140031925:	test   ax,ax
   140031928:	jne    0x14003191a
   14003192a:	sub    rsi,0x2
   14003192e:	lea    rsi,[rsi+0x2]
   140031932:	cmp    WORD PTR [rsi],r13w
   140031936:	jne    0x14003192e
   140031938:	lea    rdx,[rbp+0x11e0]
   14003193f:	xor    ecx,ecx
   140031941:	movzx  eax,WORD PTR [rdx+rcx*2]
   140031945:	mov    WORD PTR [rsi+rcx*2],ax
   140031949:	inc    rcx
   14003194c:	test   ax,ax
   14003194f:	jne    0x140031941
   140031951:	mov    rcx,QWORD PTR [rbp+0x21e0]
   140031958:	xor    rcx,rsp
   14003195b:	call   0x140055f90
   140031960:	add    rsp,0x22f8
   140031967:	pop    r15
   140031969:	pop    r14
   14003196b:	pop    r13
   14003196d:	pop    r12
   14003196f:	pop    rdi
   140031970:	pop    rsi
   140031971:	pop    rbx
   140031972:	pop    rbp
   140031973:	ret    
   140031974:	call   0x1400560e8
   140031979:	int3   
   14003197a:	int3   
   14003197b:	int3   
   14003197c:	mov    QWORD PTR [rsp+0x20],rbx
   140031981:	push   rbp
   140031982:	push   rsi
   140031983:	push   rdi
   140031984:	push   r14
   140031986:	push   r15
   140031988:	lea    rbp,[rsp-0x1070]
   140031990:	mov    eax,0x1170
   140031995:	call   0x140055f20
   14003199a:	sub    rsp,rax
   14003199d:	mov    rax,QWORD PTR [rip+0x5053c]        # 0x140081ee0
   1400319a4:	xor    rax,rsp
   1400319a7:	mov    QWORD PTR [rbp+0x1060],rax
   1400319ae:	mov    r15,rdx
   1400319b1:	mov    r14b,r9b
   1400319b4:	mov    rdx,rcx
   1400319b7:	mov    rsi,r8
   1400319ba:	mov    rdi,rcx
   1400319bd:	mov    ebx,0x1
   1400319c2:	jmp    0x1400319d7
   1400319c4:	lea    rcx,[rsp+0x30]
   1400319c9:	call   0x140021dec
   1400319ce:	test   al,al
   1400319d0:	je     0x140031a0a
   1400319d2:	inc    ebx
   1400319d4:	mov    rdx,rdi
   1400319d7:	mov    r8d,0x894
   1400319dd:	lea    rcx,[rsp+0x30]
   1400319e2:	call   0x140046158
   1400319e7:	lea    r9,[rsp+0x20]
   1400319ec:	mov    BYTE PTR [rsp+0x20],0x0
   1400319f1:	mov    r8d,ebx
   1400319f4:	lea    rcx,[rsp+0x30]
   1400319f9:	mov    rdx,rsi
   1400319fc:	call   0x1400312bc
   140031a01:	cmp    BYTE PTR [rsp+0x20],0x0
   140031a06:	jne    0x1400319c4
   140031a08:	jmp    0x140031a45
   140031a0a:	test   r14b,r14b
   140031a0d:	jne    0x140031a45
   140031a0f:	cmp    ebx,0x1
   140031a12:	jbe    0x140031a45
   140031a14:	mov    rcx,rdi
   140031a17:	call   0x140045d64
   140031a1c:	mov    rdx,rax
   140031a1f:	lea    rcx,[rsp+0x30]
   140031a24:	mov    r8d,0x894
   140031a2a:	call   0x140046158
   140031a2f:	lea    r8d,[rbx-0x1]
   140031a33:	mov    rdx,rsi
   140031a36:	lea    r9,[rsp+0x20]
   140031a3b:	lea    rcx,[rsp+0x30]
   140031a40:	call   0x1400312bc
   140031a45:	mov    r8,r15
   140031a48:	lea    rdx,[rsp+0x30]
   140031a4d:	mov    rcx,rdi
   140031a50:	call   0x140046158
   140031a55:	mov    rcx,QWORD PTR [rbp+0x1060]
   140031a5c:	xor    rcx,rsp
   140031a5f:	call   0x140055f90
   140031a64:	mov    rbx,QWORD PTR [rsp+0x11b8]
   140031a6c:	add    rsp,0x1170
   140031a73:	pop    r15
   140031a75:	pop    r14
   140031a77:	pop    rdi
   140031a78:	pop    rsi
   140031a79:	pop    rbp
   140031a7a:	ret    
   140031a7b:	int3   
   140031a7c:	mov    QWORD PTR [rsp+0x10],rbx
   140031a81:	mov    QWORD PTR [rsp+0x18],rbp
   140031a86:	push   rsi
   140031a87:	push   rdi
   140031a88:	push   r14
   140031a8a:	sub    rsp,0x20
   140031a8e:	mov    rbx,rcx
   140031a91:	mov    bpl,r8b
   140031a94:	lea    rcx,[rsp+0x58]
   140031a99:	mov    rsi,rdx
   140031a9c:	call   QWORD PTR [rip+0x3aa0e]        # 0x14006c4b0
   140031aa2:	xor    r14d,r14d
   140031aa5:	lea    r8,[rsp+0x40]
   140031aaa:	xor    ecx,ecx
   140031aac:	mov    WORD PTR [rbx],r14w
   140031ab0:	mov    dil,r14b
   140031ab3:	lea    edx,[r14+0x1a]
   140031ab7:	call   QWORD PTR [rip+0x3a9e3]        # 0x14006c4a0
   140031abd:	test   eax,eax
   140031abf:	jne    0x140031b1d
   140031ac1:	mov    rcx,QWORD PTR [rsp+0x40]
   140031ac6:	mov    rdx,rbx
   140031ac9:	call   QWORD PTR [rip+0x3a9d9]        # 0x14006c4a8
   140031acf:	test   eax,eax
   140031ad1:	je     0x140031b1d
   140031ad3:	cmp    WORD PTR [rbx],r14w
   140031ad7:	je     0x140031b1d
   140031ad9:	mov    rdx,rsi
   140031adc:	mov    rcx,rbx
   140031adf:	call   0x140030e78
   140031ae4:	mov    r8,rsi
   140031ae7:	lea    rdx,[rip+0x3da62]        # 0x14006f550
   140031aee:	mov    rcx,rbx
   140031af1:	call   0x140046120
   140031af6:	mov    rcx,rbx
   140031af9:	call   0x140021dec
   140031afe:	mov    dil,al
   140031b01:	test   al,al
   140031b03:	jne    0x140031b1d
   140031b05:	test   bpl,bpl
   140031b08:	je     0x140031b1d
   140031b0a:	xor    r8d,r8d
   140031b0d:	xor    edx,edx
   140031b0f:	mov    rcx,rbx
   140031b12:	call   0x1400221f4
   140031b17:	test   eax,eax
   140031b19:	sete   dil
   140031b1d:	mov    rcx,QWORD PTR [rsp+0x58]
   140031b22:	mov    rdx,QWORD PTR [rsp+0x40]
   140031b27:	mov    rax,QWORD PTR [rcx]
   140031b2a:	call   QWORD PTR [rax+0x28]
   140031b2d:	mov    rbx,QWORD PTR [rsp+0x48]
   140031b32:	mov    al,dil
   140031b35:	mov    rbp,QWORD PTR [rsp+0x50]
   140031b3a:	add    rsp,0x20
   140031b3e:	pop    r14
   140031b40:	pop    rdi
   140031b41:	pop    rsi
   140031b42:	ret    
   140031b43:	int3   
   140031b44:	mov    QWORD PTR [rsp+0x8],rbx
   140031b49:	mov    QWORD PTR [rsp+0x10],rbp
   140031b4e:	mov    QWORD PTR [rsp+0x18],rsi
   140031b53:	push   rdi
   140031b54:	push   r14
   140031b56:	push   r15
   140031b58:	sub    rsp,0x20
   140031b5c:	xor    r15d,r15d
   140031b5f:	mov    r14,rcx
   140031b62:	mov    WORD PTR [rdx],r15w
   140031b66:	mov    esi,r15d
   140031b69:	xor    ecx,ecx
   140031b6b:	mov    bpl,r9b
   140031b6e:	mov    rdi,r8
   140031b71:	mov    rbx,rdx
   140031b74:	jmp    0x140031baa
   140031b76:	mov    rdx,rdi
   140031b79:	mov    rcx,rbx
   140031b7c:	call   0x140030e78
   140031b81:	mov    r8,rdi
   140031b84:	mov    rdx,r14
   140031b87:	mov    rcx,rbx
   140031b8a:	call   0x140046120
   140031b8f:	test   bpl,bpl
   140031b92:	je     0x140031bb8
   140031b94:	mov    rcx,rbx
   140031b97:	call   0x1400228f4
   140031b9c:	test   al,al
   140031b9e:	jne    0x140031bb8
   140031ba0:	inc    esi
   140031ba2:	mov    r8,rdi
   140031ba5:	mov    ecx,esi
   140031ba7:	mov    rdx,rbx
   140031baa:	mov    r9b,BYTE PTR [rsp+0x60]
   140031baf:	call   0x140031278
   140031bb4:	test   al,al
   140031bb6:	jne    0x140031b76
   140031bb8:	mov    rbx,QWORD PTR [rsp+0x40]
   140031bbd:	mov    rbp,QWORD PTR [rsp+0x48]
   140031bc2:	mov    rsi,QWORD PTR [rsp+0x50]
   140031bc7:	add    rsp,0x20
   140031bcb:	pop    r15
   140031bcd:	pop    r14
   140031bcf:	pop    rdi
   140031bd0:	ret    
   140031bd1:	int3   
   140031bd2:	int3   
   140031bd3:	int3   
   140031bd4:	sub    rsp,0x28
   140031bd8:	xor    eax,eax
   140031bda:	test   rcx,rcx
   140031bdd:	je     0x140031bf1
   140031bdf:	call   0x1400327bc
   140031be4:	mov    edx,0x2e
   140031be9:	mov    rcx,rax
   140031bec:	call   0x140058684
   140031bf1:	add    rsp,0x28
   140031bf5:	ret    
   140031bf6:	int3   
   140031bf7:	int3   
   140031bf8:	test   r8,r8
   140031bfb:	je     0x140031c64
   140031bfd:	mov    QWORD PTR [rsp+0x8],rbx
   140031c02:	mov    QWORD PTR [rsp+0x10],rbp
   140031c07:	mov    QWORD PTR [rsp+0x18],rsi
   140031c0c:	push   rdi
   140031c0d:	sub    rsp,0x20
   140031c11:	mov    rsi,rdx
   140031c14:	lea    rbx,[r8-0x1]
   140031c18:	mov    rdi,rcx
   140031c1b:	xor    ebp,ebp
   140031c1d:	call   0x1400327bc
   140031c22:	sub    rax,rdi
   140031c25:	sar    rax,1
   140031c28:	cmp    rbx,rax
   140031c2b:	jb     0x140031c3e
   140031c2d:	mov    rcx,rdi
   140031c30:	call   0x1400327bc
   140031c35:	mov    rbx,rax
   140031c38:	sub    rbx,rdi
   140031c3b:	sar    rbx,1
   140031c3e:	mov    r8,rbx
   140031c41:	mov    rdx,rdi
   140031c44:	mov    rcx,rsi
   140031c47:	call   0x14005e00c
   140031c4c:	mov    WORD PTR [rsi+rbx*2],bp
   140031c50:	mov    rbx,QWORD PTR [rsp+0x30]
   140031c55:	mov    rbp,QWORD PTR [rsp+0x38]
   140031c5a:	mov    rsi,QWORD PTR [rsp+0x40]
   140031c5f:	add    rsp,0x20
   140031c63:	pop    rdi
   140031c64:	ret    
   140031c65:	int3   
   140031c66:	int3   
   140031c67:	int3   
   140031c68:	rex push rbx
   140031c6a:	sub    rsp,0x20
   140031c6e:	mov    rbx,rcx
   140031c71:	call   0x140032140
   140031c76:	test   al,al
   140031c78:	je     0x140031c8a
   140031c7a:	movzx  ecx,WORD PTR [rbx]
   140031c7d:	call   0x140045f48
   140031c82:	movzx  eax,ax
   140031c85:	sub    eax,0x41
   140031c88:	jmp    0x140031c8d
   140031c8a:	or     eax,0xffffffff
   140031c8d:	add    rsp,0x20
   140031c91:	pop    rbx
   140031c92:	ret    
   140031c93:	int3   
   140031c94:	mov    rax,rsp
   140031c97:	mov    QWORD PTR [rax+0x8],rbx
   140031c9b:	mov    QWORD PTR [rax+0x10],rbp
   140031c9f:	mov    QWORD PTR [rax+0x18],rsi
   140031ca3:	mov    QWORD PTR [rax+0x20],rdi
   140031ca7:	push   r14
   140031ca9:	sub    rsp,0x20
   140031cad:	xor    r14d,r14d
   140031cb0:	mov    rbx,r8
   140031cb3:	mov    WORD PTR [rdx],r14w
   140031cb7:	mov    rsi,rdx
   140031cba:	mov    rdi,rcx
   140031cbd:	call   0x140032140
   140031cc2:	test   al,al
   140031cc4:	je     0x140031cde
   140031cc6:	movzx  r9d,WORD PTR [rdi]
   140031cca:	lea    r8,[rip+0x3d92f]        # 0x14006f600
   140031cd1:	mov    rdx,rbx
   140031cd4:	mov    rcx,rsi
   140031cd7:	call   0x140006acc
   140031cdc:	jmp    0x140031d43
   140031cde:	mov    ebp,0x5c
   140031ce3:	cmp    WORD PTR [rdi],bp
   140031ce6:	jne    0x140031d43
   140031ce8:	cmp    WORD PTR [rdi+0x2],bp
   140031cec:	jne    0x140031d43
   140031cee:	mov    edx,ebp
   140031cf0:	lea    rcx,[rdi+0x4]
   140031cf4:	call   0x1400590e0
   140031cf9:	test   rax,rax
   140031cfc:	je     0x140031d43
   140031cfe:	mov    edx,ebp
   140031d00:	lea    rcx,[rax+0x2]
   140031d04:	call   0x1400590e0
   140031d09:	test   rax,rax
   140031d0c:	je     0x140031d19
   140031d0e:	sub    rax,rdi
   140031d11:	sar    rax,1
   140031d14:	inc    rax
   140031d17:	jmp    0x140031d27
   140031d19:	or     rax,0xffffffffffffffff
   140031d1d:	inc    rax
   140031d20:	cmp    WORD PTR [rdi+rax*2],r14w
   140031d25:	jne    0x140031d1d
   140031d27:	cmp    rax,rbx
   140031d2a:	mov    rdx,rdi
   140031d2d:	mov    rcx,rsi
   140031d30:	sbb    rbx,rbx
   140031d33:	and    rbx,rax
   140031d36:	mov    r8,rbx
   140031d39:	call   0x14005e00c
   140031d3e:	mov    WORD PTR [rsi+rbx*2],r14w
   140031d43:	mov    rbx,QWORD PTR [rsp+0x30]
   140031d48:	mov    rbp,QWORD PTR [rsp+0x38]
   140031d4d:	mov    rsi,QWORD PTR [rsp+0x40]
   140031d52:	mov    rdi,QWORD PTR [rsp+0x48]
   140031d57:	add    rsp,0x20
   140031d5b:	pop    r14
   140031d5d:	ret    
   140031d5e:	int3   
   140031d5f:	int3   
   140031d60:	mov    QWORD PTR [rsp+0x10],rbx
   140031d65:	push   rbp
   140031d66:	push   rsi
   140031d67:	push   rdi
   140031d68:	sub    rsp,0x40
   140031d6c:	xor    ebp,ebp
   140031d6e:	lea    rax,[rsp+0x30]
   140031d73:	mov    sil,r8b
   140031d76:	mov    WORD PTR [rcx],bp
   140031d79:	mov    rdi,rdx
   140031d7c:	mov    QWORD PTR [rsp+0x20],rax
   140031d81:	mov    rbx,rcx
   140031d84:	lea    rdx,[rip+0x3d7d5]        # 0x14006f560
   140031d8b:	lea    r9d,[rbp+0x1]
   140031d8f:	xor    r8d,r8d
   140031d92:	mov    rcx,0xffffffff80000001
   140031d99:	call   QWORD PTR [rip+0x3a271]        # 0x14006c010
   140031d9f:	test   eax,eax
   140031da1:	jne    0x140031ddb
   140031da3:	mov    rcx,QWORD PTR [rsp+0x30]
   140031da8:	lea    rax,[rsp+0x60]
   140031dad:	mov    QWORD PTR [rsp+0x28],rax
   140031db2:	lea    r9,[rsp+0x78]
   140031db7:	xor    r8d,r8d
   140031dba:	mov    QWORD PTR [rsp+0x20],rbx
   140031dbf:	lea    rdx,[rip+0x3d7ca]        # 0x14006f590
   140031dc6:	mov    DWORD PTR [rsp+0x60],edi
   140031dca:	call   QWORD PTR [rip+0x3a238]        # 0x14006c008
   140031dd0:	mov    rcx,QWORD PTR [rsp+0x30]
   140031dd5:	call   QWORD PTR [rip+0x3a23d]        # 0x14006c018
   140031ddb:	cmp    WORD PTR [rbx],bp
   140031dde:	je     0x140031dec
   140031de0:	mov    rcx,rbx
   140031de3:	call   0x140021dec
   140031de8:	test   al,al
   140031dea:	jne    0x140031e14
   140031dec:	mov    r8b,sil
   140031def:	mov    rdx,rdi
   140031df2:	mov    rcx,rbx
   140031df5:	call   0x140031a7c
   140031dfa:	test   al,al
   140031dfc:	jne    0x140031e14
   140031dfe:	mov    r8d,edi
   140031e01:	mov    rdx,rbx
   140031e04:	xor    ecx,ecx
   140031e06:	call   QWORD PTR [rip+0x3a364]        # 0x14006c170
   140031e0c:	mov    rcx,rbx
   140031e0f:	call   0x140032810
   140031e14:	mov    rbx,QWORD PTR [rsp+0x68]
   140031e19:	add    rsp,0x40
   140031e1d:	pop    rdi
   140031e1e:	pop    rsi
   140031e1f:	pop    rbp
   140031e20:	ret    
   140031e21:	int3   
   140031e22:	int3   
   140031e23:	int3   
   140031e24:	mov    rax,rsp
   140031e27:	mov    QWORD PTR [rax+0x8],rbx
   140031e2b:	mov    QWORD PTR [rax+0x10],rbp
   140031e2f:	mov    QWORD PTR [rax+0x18],rsi
   140031e33:	mov    QWORD PTR [rax+0x20],rdi
   140031e37:	push   r14
   140031e39:	sub    rsp,0x20
   140031e3d:	or     rax,0xffffffffffffffff
   140031e41:	mov    rsi,rcx
   140031e44:	xor    ebp,ebp
   140031e46:	inc    rax
   140031e49:	cmp    WORD PTR [rcx+rax*2],bp
   140031e4d:	jne    0x140031e46
   140031e4f:	dec    rax
   140031e52:	lea    rbx,[rcx+rax*2]
   140031e56:	jmp    0x140031e61
   140031e58:	cmp    rbx,rsi
   140031e5b:	jbe    0x140031e6d
   140031e5d:	sub    rbx,0x2
   140031e61:	movzx  ecx,WORD PTR [rbx]
   140031e64:	call   0x140045d18
   140031e69:	test   al,al
   140031e6b:	je     0x140031e58
   140031e6d:	movzx  ecx,WORD PTR [rbx]
   140031e70:	mov    rdi,rbx
   140031e73:	jmp    0x140031e81
   140031e75:	cmp    rdi,rsi
   140031e78:	jbe    0x140031ed1
   140031e7a:	sub    rdi,0x2
   140031e7e:	movzx  ecx,WORD PTR [rdi]
   140031e81:	call   0x140045d18
   140031e86:	test   al,al
   140031e88:	jne    0x140031e75
   140031e8a:	cmp    rdi,rsi
   140031e8d:	jbe    0x140031ed1
   140031e8f:	mov    r14d,0x2e
   140031e95:	cmp    WORD PTR [rdi],r14w
   140031e99:	je     0x140031ed1
   140031e9b:	movzx  ecx,WORD PTR [rdi]
   140031e9e:	call   0x140045d18
   140031ea3:	test   al,al
   140031ea5:	jne    0x140031eb2
   140031ea7:	sub    rdi,0x2
   140031eab:	cmp    rdi,rsi
   140031eae:	ja     0x140031e95
   140031eb0:	jmp    0x140031ed1
   140031eb2:	mov    rcx,rsi
   140031eb5:	call   0x1400327bc
   140031eba:	mov    edx,r14d
   140031ebd:	mov    rcx,rax
   140031ec0:	call   0x1400590e0
   140031ec5:	test   rax,rax
   140031ec8:	je     0x140031ed1
   140031eca:	cmp    rax,rdi
   140031ecd:	cmovb  rbx,rdi
   140031ed1:	mov    rbp,QWORD PTR [rsp+0x38]
   140031ed6:	mov    rax,rbx
   140031ed9:	mov    rbx,QWORD PTR [rsp+0x30]
   140031ede:	mov    rsi,QWORD PTR [rsp+0x40]
   140031ee3:	mov    rdi,QWORD PTR [rsp+0x48]
   140031ee8:	add    rsp,0x20
   140031eec:	pop    r14
   140031eee:	ret    
   140031eef:	int3   
   140031ef0:	mov    QWORD PTR [rsp+0x20],rbx
   140031ef5:	push   rbp
   140031ef6:	push   rsi
   140031ef7:	push   rdi
   140031ef8:	push   r14
   140031efa:	push   r15
   140031efc:	mov    eax,0x1030
   140031f01:	call   0x140055f20
   140031f06:	sub    rsp,rax
   140031f09:	mov    rax,QWORD PTR [rip+0x4ffd0]        # 0x140081ee0
   140031f10:	xor    rax,rsp
   140031f13:	mov    QWORD PTR [rsp+0x1020],rax
   140031f1b:	cmp    WORD PTR [rcx],0x0
   140031f1f:	mov    r14,r8
   140031f22:	mov    rdi,rdx
   140031f25:	mov    rbx,rcx
   140031f28:	je     0x14003210c
   140031f2e:	call   0x140032140
   140031f33:	or     r15,0xffffffffffffffff
   140031f37:	mov    rsi,r15
   140031f3a:	inc    rsi
   140031f3d:	cmp    WORD PTR [rbx+rsi*2],0x0
   140031f42:	jne    0x140031f3a
   140031f44:	mov    rcx,rbx
   140031f47:	call   0x140032174
   140031f4c:	test   al,al
   140031f4e:	je     0x140031ffc
   140031f54:	mov    rcx,rbx
   140031f57:	call   0x140032140
   140031f5c:	test   al,al
   140031f5e:	je     0x140031f9d
   140031f60:	lea    rax,[rsi+0x4]
   140031f64:	cmp    r14,rax
   140031f67:	jbe    0x14003210c
   140031f6d:	mov    r8d,0x4
   140031f73:	lea    rdx,[rip+0x3d72e]        # 0x14006f6a8
   140031f7a:	mov    rcx,rdi
   140031f7d:	call   0x14005e00c
   140031f82:	sub    rdi,rbx
   140031f85:	movzx  eax,WORD PTR [rbx]
   140031f88:	mov    WORD PTR [rdi+rbx*1+0x8],ax
   140031f8d:	lea    rbx,[rbx+0x2]
   140031f91:	test   ax,ax
   140031f94:	jne    0x140031f85
   140031f96:	mov    al,0x1
   140031f98:	jmp    0x14003210e
   140031f9d:	mov    ebp,0x5c
   140031fa2:	cmp    WORD PTR [rbx],bp
   140031fa5:	jne    0x14003210c
   140031fab:	add    rbx,0x2
   140031faf:	cmp    WORD PTR [rbx],bp
   140031fb2:	jne    0x14003210c
   140031fb8:	lea    rax,[rsi+0x6]
   140031fbc:	cmp    r14,rax
   140031fbf:	jbe    0x14003210c
   140031fc5:	lea    r8d,[rbp-0x58]
   140031fc9:	mov    rcx,rdi
   140031fcc:	lea    rdx,[rip+0x3d6d5]        # 0x14006f6a8
   140031fd3:	call   0x14005e00c
   140031fd8:	movabs rax,0x43004e0055
   140031fe2:	mov    QWORD PTR [rdi+0x8],rax
   140031fe6:	sub    rdi,rbx
   140031fe9:	movzx  eax,WORD PTR [rbx]
   140031fec:	mov    WORD PTR [rdi+rbx*1+0xe],ax
   140031ff1:	lea    rbx,[rbx+0x2]
   140031ff5:	test   ax,ax
   140031ff8:	jne    0x140031fe9
   140031ffa:	jmp    0x140031f96
   140031ffc:	lea    rdx,[rsp+0x20]
   140032001:	mov    ecx,0x7ff
   140032006:	call   QWORD PTR [rip+0x3a16c]        # 0x14006c178
   14003200c:	dec    eax
   14003200e:	cmp    eax,0x7fe
   140032013:	ja     0x14003210c
   140032019:	movzx  eax,WORD PTR [rbx]
   14003201c:	mov    ebp,0x5c
   140032021:	cmp    eax,ebp
   140032023:	je     0x1400320c1
   140032029:	cmp    eax,0x2f
   14003202c:	je     0x1400320c1
   140032032:	mov    edx,0x800
   140032037:	lea    rcx,[rsp+0x20]
   14003203c:	call   0x140030e78
   140032041:	lea    rax,[rsp+0x20]
   140032046:	inc    r15
   140032049:	cmp    WORD PTR [rax+r15*2],0x0
   14003204f:	jne    0x140032046
   140032051:	lea    rax,[rsi+0x4]
   140032055:	add    rax,r15
   140032058:	cmp    r14,rax
   14003205b:	jbe    0x14003210c
   140032061:	mov    r8d,0x4
   140032067:	lea    rdx,[rip+0x3d63a]        # 0x14006f6a8
   14003206e:	mov    rcx,rdi
   140032071:	call   0x14005e00c
   140032076:	lea    rax,[rsp+0x20]
   14003207b:	mov    rdx,rdi
   14003207e:	sub    rdx,rax
   140032081:	lea    rcx,[rsp+0x20]
   140032086:	movzx  eax,WORD PTR [rcx]
   140032089:	mov    WORD PTR [rdx+rcx*1+0x8],ax
   14003208e:	lea    rcx,[rcx+0x2]
   140032092:	test   ax,ax
   140032095:	jne    0x140032086
   140032097:	cmp    WORD PTR [rbx],0x2e
   14003209b:	jne    0x1400320ae
   14003209d:	movzx  eax,WORD PTR [rbx+0x2]
   1400320a1:	cmp    eax,ebp
   1400320a3:	je     0x1400320aa
   1400320a5:	cmp    eax,0x2f
   1400320a8:	jne    0x1400320ae
   1400320aa:	add    rbx,0x4
   1400320ae:	mov    r8,r14
   1400320b1:	mov    rdx,rbx
   1400320b4:	mov    rcx,rdi
   1400320b7:	call   0x140046120
   1400320bc:	jmp    0x140031f96
   1400320c1:	lea    rax,[rsi+0x6]
   1400320c5:	cmp    r14,rax
   1400320c8:	jbe    0x14003210c
   1400320ca:	mov    r8d,0x4
   1400320d0:	lea    rdx,[rip+0x3d5d1]        # 0x14006f6a8
   1400320d7:	mov    rcx,rdi
   1400320da:	call   0x14005e00c
   1400320df:	lea    rcx,[rdi+0x8]
   1400320e3:	mov    r8d,0x2
   1400320e9:	lea    rdx,[rsp+0x20]
   1400320ee:	call   0x14005e00c
   1400320f3:	sub    rdi,rbx
   1400320f6:	movzx  eax,WORD PTR [rbx]
   1400320f9:	mov    WORD PTR [rdi+rbx*1+0xc],ax
   1400320fe:	lea    rbx,[rbx+0x2]
   140032102:	test   ax,ax
   140032105:	jne    0x1400320f6
   140032107:	jmp    0x140031f96
   14003210c:	xor    al,al
   14003210e:	mov    rcx,QWORD PTR [rsp+0x1020]
   140032116:	xor    rcx,rsp
   140032119:	call   0x140055f90
   14003211e:	mov    rbx,QWORD PTR [rsp+0x1078]
   140032126:	add    rsp,0x1030
   14003212d:	pop    r15
   14003212f:	pop    r14
   140032131:	pop    rdi
   140032132:	pop    rsi
   140032133:	pop    rbp
   140032134:	ret    
   140032135:	int3   
   140032136:	int3   
   140032137:	int3   
   140032138:	cmp    ecx,0x3a
   14003213b:	sete   al
   14003213e:	ret    
   14003213f:	int3   
   140032140:	rex push rbx
   140032142:	sub    rsp,0x20
   140032146:	mov    rbx,rcx
   140032149:	movzx  ecx,WORD PTR [rcx]
   14003214c:	call   0x140045f48
   140032151:	sub    ax,0x41
   140032155:	cmp    ax,0x19
   140032159:	ja     0x140032169
   14003215b:	cmp    WORD PTR [rbx+0x2],0x3a
   140032160:	jne    0x140032169
   140032162:	mov    eax,0x1
   140032167:	jmp    0x14003216b
   140032169:	xor    eax,eax
   14003216b:	add    rsp,0x20
   14003216f:	pop    rbx
   140032170:	ret    
   140032171:	int3   
   140032172:	int3   
   140032173:	int3   
   140032174:	mov    QWORD PTR [rsp+0x8],rbx
   140032179:	push   rdi
   14003217a:	sub    rsp,0x20
   14003217e:	mov    edi,0x5c
   140032183:	mov    rbx,rcx
   140032186:	cmp    WORD PTR [rcx],di
   140032189:	jne    0x140032191
   14003218b:	cmp    WORD PTR [rcx+0x2],di
   14003218f:	je     0x1400321a9
   140032191:	call   0x140032140
   140032196:	xor    ecx,ecx
   140032198:	test   al,al
   14003219a:	je     0x1400321ae
   14003219c:	movzx  eax,WORD PTR [rbx+0x4]
   1400321a0:	cmp    eax,edi
   1400321a2:	je     0x1400321a9
   1400321a4:	cmp    eax,0x2f
   1400321a7:	jne    0x1400321ae
   1400321a9:	mov    ecx,0x1
   1400321ae:	mov    al,cl
   1400321b0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400321b5:	add    rsp,0x20
   1400321b9:	pop    rdi
   1400321ba:	ret    
   1400321bb:	int3   
   1400321bc:	rex push rbx
   1400321be:	sub    rsp,0x20
   1400321c2:	mov    rbx,rcx
   1400321c5:	call   0x140032174
   1400321ca:	xor    edx,edx
   1400321cc:	test   al,al
   1400321ce:	jne    0x1400321dd
   1400321d0:	movzx  eax,WORD PTR [rbx]
   1400321d3:	cmp    eax,0x2f
   1400321d6:	je     0x1400321dd
   1400321d8:	cmp    eax,0x5c
   1400321db:	jne    0x1400321e2
   1400321dd:	mov    edx,0x1
   1400321e2:	mov    al,dl
   1400321e4:	add    rsp,0x20
   1400321e8:	pop    rbx
   1400321e9:	ret    
   1400321ea:	int3   
   1400321eb:	int3   
   1400321ec:	mov    QWORD PTR [rsp+0x8],rbx
   1400321f1:	push   rdi
   1400321f2:	sub    rsp,0x20
   1400321f6:	xor    ebx,ebx
   1400321f8:	mov    rdi,rcx
   1400321fb:	cmp    WORD PTR [rcx],bx
   1400321fe:	je     0x14003221b
   140032200:	cmp    WORD PTR [rcx+0x2],bx
   140032204:	je     0x14003221b
   140032206:	lea    edx,[rbx+0x3a]
   140032209:	add    rcx,0x4
   14003220d:	call   0x1400590e0
   140032212:	test   rax,rax
   140032215:	je     0x14003221b
   140032217:	xor    al,al
   140032219:	jmp    0x140032267
   14003221b:	movzx  eax,WORD PTR [rdi]
   14003221e:	mov    rcx,rdi
   140032221:	test   ax,ax
   140032224:	je     0x140032265
   140032226:	cmp    ax,0x20
   14003222a:	jb     0x140032217
   14003222c:	je     0x140032234
   14003222e:	cmp    ax,0x2e
   140032232:	jne    0x140032242
   140032234:	movzx  eax,WORD PTR [rcx+0x2]
   140032238:	cmp    eax,0x5c
   14003223b:	je     0x140032217
   14003223d:	cmp    eax,0x2f
   140032240:	je     0x140032217
   140032242:	add    rcx,0x2
   140032246:	movzx  eax,WORD PTR [rcx]
   140032249:	test   ax,ax
   14003224c:	jne    0x140032226
   14003224e:	lea    rdx,[rip+0x3d383]        # 0x14006f5d8
   140032255:	mov    rcx,rdi
   140032258:	call   0x14005d4b0
   14003225d:	test   rax,rax
   140032260:	jne    0x140032265
   140032262:	lea    ebx,[rax+0x1]
   140032265:	mov    al,bl
   140032267:	mov    rbx,QWORD PTR [rsp+0x30]
   14003226c:	add    rsp,0x20
   140032270:	pop    rdi
   140032271:	ret    
   140032272:	int3   
   140032273:	int3   
   140032274:	cmp    ecx,0x5c
   140032277:	je     0x140032281
   140032279:	cmp    ecx,0x2f
   14003227c:	je     0x140032281
   14003227e:	xor    eax,eax
   140032280:	ret    
   140032281:	mov    eax,0x1
   140032286:	ret    
   140032287:	int3   
   140032288:	rex push rbx
   14003228a:	sub    rsp,0x20
   14003228e:	xor    ebx,ebx
   140032290:	test   rcx,rcx
   140032293:	je     0x1400322a7
   140032295:	lea    rdx,[rip+0x3d2ac]        # 0x14006f548
   14003229c:	call   0x14005d4b0
   1400322a1:	test   rax,rax
   1400322a4:	setne  bl
   1400322a7:	mov    al,bl
   1400322a9:	add    rsp,0x20
   1400322ad:	pop    rbx
   1400322ae:	ret    
   1400322af:	int3   
   1400322b0:	rex push rbx
   1400322b2:	push   rbp
   1400322b3:	push   rsi
   1400322b4:	push   rdi
   1400322b5:	mov    eax,0x1038
   1400322ba:	call   0x140055f20
   1400322bf:	sub    rsp,rax
   1400322c2:	mov    rax,QWORD PTR [rip+0x4fc17]        # 0x140081ee0
   1400322c9:	xor    rax,rsp
   1400322cc:	mov    QWORD PTR [rsp+0x1020],rax
   1400322d4:	mov    rbx,rdx
   1400322d7:	mov    rsi,r8
   1400322da:	mov    rdx,rcx
   1400322dd:	mov    ebp,0x800
   1400322e2:	mov    r8d,ebp
   1400322e5:	lea    rcx,[rsp+0x20]
   1400322ea:	mov    rdi,r9
   1400322ed:	call   0x140046158
   1400322f2:	mov    edx,ebp
   1400322f4:	lea    rcx,[rsp+0x20]
   1400322f9:	call   0x140030e78
   1400322fe:	mov    r8d,ebp
   140032301:	lea    rcx,[rsp+0x20]
   140032306:	mov    rdx,rbx
   140032309:	call   0x140046120
   14003230e:	mov    r8,rdi
   140032311:	lea    rdx,[rsp+0x20]
   140032316:	mov    rcx,rsi
   140032319:	call   0x140046158
   14003231e:	mov    rcx,QWORD PTR [rsp+0x1020]
   140032326:	xor    rcx,rsp
   140032329:	call   0x140055f90
   14003232e:	add    rsp,0x1038
   140032335:	pop    rdi
   140032336:	pop    rsi
   140032337:	pop    rbp
   140032338:	pop    rbx
   140032339:	ret    
   14003233a:	int3   
   14003233b:	int3   
   14003233c:	mov    QWORD PTR [rsp+0x8],rbx
   140032341:	mov    QWORD PTR [rsp+0x10],rdi
   140032346:	xor    edi,edi
   140032348:	mov    rbx,rcx
   14003234b:	mov    edx,edi
   14003234d:	mov    eax,edi
   14003234f:	mov    r8,rcx
   140032352:	movzx  r9d,WORD PTR [r8]
   140032356:	cmp    r9d,0x2f
   14003235a:	je     0x140032368
   14003235c:	cmp    r9d,0x5c
   140032360:	je     0x140032368
   140032362:	test   r9w,r9w
   140032366:	jne    0x1400323a4
   140032368:	lea    ecx,[rdx-0x1]
   14003236b:	test   ecx,ecx
   14003236d:	jle    0x1400323a4
   14003236f:	lea    r10,[rbx-0x2]
   140032373:	lea    r10,[r10+rax*2]
   140032377:	cmp    WORD PTR [r10],0x20
   14003237c:	je     0x140032385
   14003237e:	cmp    WORD PTR [r10],0x2e
   140032383:	jne    0x1400323a4
   140032385:	add    r10,0xfffffffffffffffe
   140032389:	movzx  r11d,WORD PTR [r10]
   14003238d:	cmp    r11d,0x5c
   140032391:	je     0x1400323a4
   140032393:	cmp    r11d,0x2f
   140032397:	je     0x1400323a4
   140032399:	dec    edx
   14003239b:	dec    rax
   14003239e:	dec    ecx
   1400323a0:	test   ecx,ecx
   1400323a2:	jg     0x140032377
   1400323a4:	mov    WORD PTR [rbx+rax*2],r9w
   1400323a9:	cmp    WORD PTR [r8],di
   1400323ad:	je     0x1400323ba
   1400323af:	add    r8,0x2
   1400323b3:	inc    edx
   1400323b5:	inc    rax
   1400323b8:	jmp    0x140032352
   1400323ba:	mov    rbx,QWORD PTR [rsp+0x8]
   1400323bf:	mov    rdi,QWORD PTR [rsp+0x10]
   1400323c4:	ret    
   1400323c5:	int3   
   1400323c6:	int3   
   1400323c7:	int3   
   1400323c8:	mov    QWORD PTR [rsp+0x18],rbx
   1400323cd:	push   rbp
   1400323ce:	push   rsi
   1400323cf:	push   rdi
   1400323d0:	mov    eax,0x1030
   1400323d5:	call   0x140055f20
   1400323da:	sub    rsp,rax
   1400323dd:	mov    rax,QWORD PTR [rip+0x4fafc]        # 0x140081ee0
   1400323e4:	xor    rax,rsp
   1400323e7:	mov    QWORD PTR [rsp+0x1020],rax
   1400323ef:	mov    bpl,dl
   1400323f2:	mov    rdi,rcx
   1400323f5:	or     rbx,0xffffffffffffffff
   1400323f9:	inc    rbx
   1400323fc:	cmp    BYTE PTR [rcx+rbx*1],0x0
   140032400:	jne    0x1400323f9
   140032402:	mov    r8d,0x800
   140032408:	lea    rdx,[rsp+0x20]
   14003240d:	call   0x1400489f0
   140032412:	lea    r8,[rbx+0x1]
   140032416:	mov    rdx,rdi
   140032419:	lea    rcx,[rsp+0x20]
   14003241e:	call   0x140048ca8
   140032423:	mov    BYTE PTR [rdi+rbx*1],0x0
   140032427:	mov    rbx,rdi
   14003242a:	cmp    BYTE PTR [rdi],0x0
   14003242d:	je     0x1400324d6
   140032433:	test   bpl,bpl
   140032436:	lea    rax,[rip+0x3d16f]        # 0x14006f5ac
   14003243d:	lea    rsi,[rip+0x3d148]        # 0x14006f58c
   140032444:	cmovne rsi,rax
   140032448:	movsx  edx,BYTE PTR [rbx]
   14003244b:	mov    rcx,rsi
   14003244e:	call   0x1400595b8
   140032453:	test   rax,rax
   140032456:	jne    0x140032462
   140032458:	test   bpl,bpl
   14003245b:	je     0x140032465
   14003245d:	cmp    BYTE PTR [rbx],0x20
   140032460:	jae    0x140032465
   140032462:	mov    BYTE PTR [rbx],0x5f
   140032465:	mov    rax,rbx
   140032468:	sub    rax,rdi
   14003246b:	cmp    rax,0x1
   14003246f:	jle    0x140032479
   140032471:	cmp    BYTE PTR [rbx],0x3a
   140032474:	jne    0x140032479
   140032476:	mov    BYTE PTR [rbx],0x5f
   140032479:	cmp    BYTE PTR [rbx],0x20
   14003247c:	je     0x14003249c
   14003247e:	cmp    BYTE PTR [rbx],0x2e
   140032481:	jne    0x1400324ad
   140032483:	cmp    rbx,rdi
   140032486:	jbe    0x1400324ad
   140032488:	movsx  eax,BYTE PTR [rbx-0x1]
   14003248c:	cmp    eax,0x2f
   14003248f:	je     0x1400324ad
   140032491:	cmp    eax,0x5c
   140032494:	je     0x1400324ad
   140032496:	cmp    BYTE PTR [rbx-0x1],0x2e
   14003249a:	je     0x1400324ad
   14003249c:	movsx  eax,BYTE PTR [rbx+0x1]
   1400324a0:	cmp    eax,0x5c
   1400324a3:	je     0x1400324aa
   1400324a5:	cmp    eax,0x2f
   1400324a8:	jne    0x1400324ad
   1400324aa:	mov    BYTE PTR [rbx],0x5f
   1400324ad:	cmp    BYTE PTR [rip+0x6c78c],0x0        # 0x14009ec40
   1400324b4:	je     0x1400324ca
   1400324b6:	mov    rdx,rbx
   1400324b9:	lea    rcx,[rip+0x6c680]        # 0x14009eb40
   1400324c0:	call   0x140048f10
   1400324c5:	mov    rbx,rax
   1400324c8:	jmp    0x1400324cd
   1400324ca:	inc    rbx
   1400324cd:	cmp    BYTE PTR [rbx],0x0
   1400324d0:	jne    0x140032448
   1400324d6:	mov    rcx,QWORD PTR [rsp+0x1020]
   1400324de:	xor    rcx,rsp
   1400324e1:	call   0x140055f90
   1400324e6:	mov    rbx,QWORD PTR [rsp+0x1060]
   1400324ee:	add    rsp,0x1030
   1400324f5:	pop    rdi
   1400324f6:	pop    rsi
   1400324f7:	pop    rbp
   1400324f8:	ret    
   1400324f9:	int3   
   1400324fa:	int3   
   1400324fb:	int3   
   1400324fc:	mov    QWORD PTR [rsp+0x8],rbx
   140032501:	mov    QWORD PTR [rsp+0x10],rbp
   140032506:	mov    QWORD PTR [rsp+0x18],rsi
   14003250b:	push   rdi
   14003250c:	push   r14
   14003250e:	push   r15
   140032510:	sub    rsp,0x20
   140032514:	xor    r14d,r14d
   140032517:	mov    dil,dl
   14003251a:	mov    rbx,rcx
   14003251d:	cmp    WORD PTR [rcx],r14w
   140032521:	je     0x140032582
   140032523:	test   dl,dl
   140032525:	lea    rax,[rip+0x3d0bc]        # 0x14006f5e8
   14003252c:	lea    rbp,[rip+0x3d0c5]        # 0x14006f5f8
   140032533:	mov    rsi,rcx
   140032536:	cmovne rbp,rax
   14003253a:	lea    r15d,[r14+0x5f]
   14003253e:	neg    rsi
   140032541:	movzx  edx,WORD PTR [rbx]
   140032544:	mov    rcx,rbp
   140032547:	call   0x1400590e0
   14003254c:	test   rax,rax
   14003254f:	jne    0x14003255c
   140032551:	test   dil,dil
   140032554:	je     0x140032560
   140032556:	cmp    WORD PTR [rbx],0x20
   14003255a:	jae    0x140032560
   14003255c:	mov    WORD PTR [rbx],r15w
   140032560:	lea    rax,[rsi+rbx*1]
   140032564:	and    rax,0xfffffffffffffffe
   140032568:	cmp    rax,0x2
   14003256c:	jle    0x140032578
   14003256e:	cmp    WORD PTR [rbx],0x3a
   140032572:	jne    0x140032578
   140032574:	mov    WORD PTR [rbx],r15w
   140032578:	add    rbx,0x2
   14003257c:	cmp    WORD PTR [rbx],r14w
   140032580:	jne    0x140032541
   140032582:	mov    rbx,QWORD PTR [rsp+0x40]
   140032587:	mov    rbp,QWORD PTR [rsp+0x48]
   14003258c:	mov    rsi,QWORD PTR [rsp+0x50]
   140032591:	add    rsp,0x20
   140032595:	pop    r15
   140032597:	pop    r14
   140032599:	pop    rdi
   14003259a:	ret    
   14003259b:	int3   
   14003259c:	mov    rax,rsp
   14003259f:	mov    QWORD PTR [rax+0x8],rbx
   1400325a3:	mov    QWORD PTR [rax+0x10],rbp
   1400325a7:	mov    QWORD PTR [rax+0x18],rsi
   1400325ab:	mov    QWORD PTR [rax+0x20],rdi
   1400325af:	push   r12
   1400325b1:	push   r14
   1400325b3:	push   r15
   1400325b5:	sub    rsp,0x20
   1400325b9:	mov    r15b,r8b
   1400325bc:	mov    r14d,edx
   1400325bf:	mov    rsi,rcx
   1400325c2:	call   0x140031bd4
   1400325c7:	or     rbp,0xffffffffffffffff
   1400325cb:	xor    r12d,r12d
   1400325ce:	mov    rdi,rax
   1400325d1:	test   rax,rax
   1400325d4:	jne    0x1400325f5
   1400325d6:	mov    r8d,r14d
   1400325d9:	lea    rdx,[rip+0x3cfc0]        # 0x14006f5a0
   1400325e0:	mov    rcx,rsi
   1400325e3:	call   0x140046120
   1400325e8:	mov    rcx,rsi
   1400325eb:	call   0x140031bd4
   1400325f0:	mov    rdi,rax
   1400325f3:	jmp    0x140032648
   1400325f5:	lea    rbx,[rax+0x2]
   1400325f9:	cmp    WORD PTR [rbx],r12w
   1400325fd:	jne    0x140032615
   1400325ff:	mov    rdx,rbp
   140032602:	inc    rdx
   140032605:	cmp    WORD PTR [rsi+rdx*2],r12w
   14003260a:	jne    0x140032602
   14003260c:	lea    ecx,[r14-0x3]
   140032610:	cmp    rdx,rcx
   140032613:	jb     0x14003263b
   140032615:	lea    rdx,[rip+0x3cf9c]        # 0x14006f5b8
   14003261c:	mov    rcx,rbx
   14003261f:	call   0x140048f34
   140032624:	test   eax,eax
   140032626:	je     0x14003263b
   140032628:	lea    rdx,[rip+0x3cf91]        # 0x14006f5c0
   14003262f:	mov    rcx,rbx
   140032632:	call   0x140048f34
   140032637:	test   eax,eax
   140032639:	jne    0x140032648
   14003263b:	movabs rax,0x7200610072
   140032645:	mov    QWORD PTR [rbx],rax
   140032648:	test   r15b,r15b
   14003264b:	jne    0x1400326bb
   14003264d:	mov    rcx,rsi
   140032650:	call   0x140031e24
   140032655:	mov    rbx,rax
   140032658:	inc    WORD PTR [rax]
   14003265b:	cmp    WORD PTR [rax],0x3a
   14003265f:	jne    0x14003271f
   140032665:	mov    edi,0x30
   14003266a:	mov    WORD PTR [rbx],di
   14003266d:	sub    rbx,0x2
   140032671:	cmp    rbx,rsi
   140032674:	jb     0x140032690
   140032676:	movzx  ecx,WORD PTR [rbx]
   140032679:	call   0x140045d18
   14003267e:	test   al,al
   140032680:	je     0x140032690
   140032682:	inc    WORD PTR [rbx]
   140032685:	cmp    WORD PTR [rbx],0x3a
   140032689:	je     0x14003266a
   14003268b:	jmp    0x14003271f
   140032690:	inc    rbp
   140032693:	cmp    WORD PTR [rsi+rbp*2],r12w
   140032698:	jne    0x140032690
   14003269a:	lea    rcx,[rsi+rbp*2]
   14003269e:	jmp    0x1400326ab
   1400326a0:	movzx  eax,WORD PTR [rcx]
   1400326a3:	mov    WORD PTR [rcx+0x2],ax
   1400326a7:	sub    rcx,0x2
   1400326ab:	cmp    rcx,rbx
   1400326ae:	jne    0x1400326a0
   1400326b0:	mov    eax,0x31
   1400326b5:	mov    WORD PTR [rbx+0x2],ax
   1400326b9:	jmp    0x14003271f
   1400326bb:	movzx  ecx,WORD PTR [rdi+0x4]
   1400326bf:	call   0x140045d18
   1400326c4:	test   al,al
   1400326c6:	je     0x14003270b
   1400326c8:	lea    rbx,[rdi+0x6]
   1400326cc:	movzx  ecx,WORD PTR [rbx]
   1400326cf:	call   0x140045d18
   1400326d4:	test   al,al
   1400326d6:	je     0x14003270b
   1400326d8:	inc    WORD PTR [rbx]
   1400326db:	cmp    WORD PTR [rbx],0x3a
   1400326df:	jne    0x14003271f
   1400326e1:	mov    edi,0x30
   1400326e6:	lea    rax,[rbx-0x2]
   1400326ea:	cmp    WORD PTR [rax],0x2e
   1400326ee:	je     0x140032701
   1400326f0:	mov    WORD PTR [rbx],di
   1400326f3:	mov    rbx,rax
   1400326f6:	inc    WORD PTR [rax]
   1400326f9:	cmp    WORD PTR [rax],0x3a
   1400326fd:	je     0x1400326e6
   1400326ff:	jmp    0x14003271f
   140032701:	mov    eax,0x41
   140032706:	mov    WORD PTR [rbx],ax
   140032709:	jmp    0x14003271f
   14003270b:	mov    eax,DWORD PTR [rip+0x3cebf]        # 0x14006f5d0
   140032711:	mov    DWORD PTR [rdi+0x4],eax
   140032714:	movzx  eax,WORD PTR [rip+0x3ceb9]        # 0x14006f5d4
   14003271b:	mov    WORD PTR [rdi+0x8],ax
   14003271f:	mov    rbx,QWORD PTR [rsp+0x40]
   140032724:	mov    rbp,QWORD PTR [rsp+0x48]
   140032729:	mov    rsi,QWORD PTR [rsp+0x50]
   14003272e:	mov    rdi,QWORD PTR [rsp+0x58]
   140032733:	add    rsp,0x20
   140032737:	pop    r15
   140032739:	pop    r14
   14003273b:	pop    r12
   14003273d:	ret    
   14003273e:	int3   
   14003273f:	int3   
   140032740:	mov    QWORD PTR [rsp+0x8],rbx
   140032745:	mov    QWORD PTR [rsp+0x10],rbp
   14003274a:	mov    QWORD PTR [rsp+0x18],rsi
   14003274f:	push   rdi
   140032750:	sub    rsp,0x20
   140032754:	xor    ebp,ebp
   140032756:	mov    sil,dl
   140032759:	mov    edi,ebp
   14003275b:	lea    edx,[rbp+0x3b]
   14003275e:	call   0x140058684
   140032763:	mov    rbx,rax
   140032766:	test   rax,rax
   140032769:	je     0x14003277e
   14003276b:	lea    rcx,[rax+0x2]
   14003276f:	call   0x140048f08
   140032774:	mov    edi,eax
   140032776:	test   sil,sil
   140032779:	je     0x14003277e
   14003277b:	mov    WORD PTR [rbx],bp
   14003277e:	mov    rbx,QWORD PTR [rsp+0x30]
   140032783:	mov    eax,edi
   140032785:	mov    rbp,QWORD PTR [rsp+0x38]
   14003278a:	mov    rsi,QWORD PTR [rsp+0x40]
   14003278f:	add    rsp,0x20
   140032793:	pop    rdi
   140032794:	ret    
   140032795:	int3   
   140032796:	int3   
   140032797:	int3   
   140032798:	or     rdx,0xffffffffffffffff
   14003279c:	xor    r8d,r8d
   14003279f:	inc    rdx
   1400327a2:	cmp    WORD PTR [rcx+rdx*2],r8w
   1400327a7:	jne    0x14003279f
   1400327a9:	lea    rax,[rcx-0x2]
   1400327ad:	test   rdx,rdx
   1400327b0:	lea    rax,[rax+rdx*2]
   1400327b4:	cmovne rcx,rax
   1400327b8:	mov    rax,rcx
   1400327bb:	ret    
   1400327bc:	or     rax,0xffffffffffffffff
   1400327c0:	mov    rdx,rcx
   1400327c3:	xor    r9d,r9d
   1400327c6:	inc    rax
   1400327c9:	cmp    WORD PTR [rcx+rax*2],r9w
   1400327ce:	jne    0x1400327c6
   1400327d0:	sub    eax,0x1
   1400327d3:	movsxd rcx,eax
   1400327d6:	js     0x1400327fb
   1400327d8:	movzx  r8d,WORD PTR [rdx+rcx*2]
   1400327dd:	cmp    r8d,0x5c
   1400327e1:	je     0x1400327f1
   1400327e3:	cmp    r8d,0x2f
   1400327e7:	je     0x1400327f1
   1400327e9:	dec    eax
   1400327eb:	sub    rcx,0x1
   1400327ef:	jmp    0x1400327d6
   1400327f1:	inc    eax
   1400327f3:	movsxd rcx,eax
   1400327f6:	lea    rax,[rdx+rcx*2]
   1400327fa:	ret    
   1400327fb:	cmp    WORD PTR [rdx],r9w
   1400327ff:	je     0x14003280c
   140032801:	cmp    WORD PTR [rdx+0x2],0x3a
   140032806:	jne    0x14003280c
   140032808:	add    rdx,0x4
   14003280c:	mov    rax,rdx
   14003280f:	ret    
   140032810:	rex push rbx
   140032812:	sub    rsp,0x20
   140032816:	mov    rbx,rcx
   140032819:	call   0x1400327bc
   14003281e:	lea    rdx,[rbx+0x4]
   140032822:	cmp    rax,rdx
   140032825:	jb     0x14003283b
   140032827:	cmp    WORD PTR [rbx+0x2],0x3a
   14003282c:	jne    0x140032837
   14003282e:	lea    rcx,[rbx+0x8]
   140032832:	cmp    rax,rcx
   140032835:	jb     0x14003283b
   140032837:	sub    rax,0x2
   14003283b:	xor    ecx,ecx
   14003283d:	mov    WORD PTR [rax],cx
   140032840:	add    rsp,0x20
   140032844:	pop    rbx
   140032845:	ret    
   140032846:	int3   
   140032847:	int3   
   140032848:	test   rcx,rcx
   14003284b:	je     0x1400328b7
   14003284d:	mov    QWORD PTR [rsp+0x8],rbx
   140032852:	mov    QWORD PTR [rsp+0x10],rbp
   140032857:	mov    QWORD PTR [rsp+0x18],rsi
   14003285c:	push   rdi
   14003285d:	sub    rsp,0x20
   140032861:	xor    ebp,ebp
   140032863:	mov    rsi,r8
   140032866:	mov    rdi,rdx
   140032869:	mov    rbx,rcx
   14003286c:	cmp    WORD PTR [rcx],bp
   14003286f:	je     0x1400328a3
   140032871:	call   0x140031bd4
   140032876:	test   rax,rax
   140032879:	je     0x14003287e
   14003287b:	mov    WORD PTR [rax],bp
   14003287e:	test   rdi,rdi
   140032881:	je     0x1400328a3
   140032883:	mov    r8,rsi
   140032886:	lea    rdx,[rip+0x3ccab]        # 0x14006f538
   14003288d:	mov    rcx,rbx
   140032890:	call   0x140046120
   140032895:	mov    r8,rsi
   140032898:	mov    rdx,rdi
   14003289b:	mov    rcx,rbx
   14003289e:	call   0x140046120
   1400328a3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400328a8:	mov    rbp,QWORD PTR [rsp+0x38]
   1400328ad:	mov    rsi,QWORD PTR [rsp+0x40]
   1400328b2:	add    rsp,0x20
   1400328b6:	pop    rdi
   1400328b7:	ret    
   1400328b8:	mov    QWORD PTR [rsp+0x8],rbx
   1400328bd:	mov    QWORD PTR [rsp+0x10],rsi
   1400328c2:	push   rdi
   1400328c3:	sub    rsp,0x20
   1400328c7:	mov    rdi,r8
   1400328ca:	mov    rsi,rdx
   1400328cd:	mov    rbx,rcx
   1400328d0:	call   0x1400327bc
   1400328d5:	mov    r9,rax
   1400328d8:	mov    rdx,rsi
   1400328db:	sub    r9,rbx
   1400328de:	mov    rcx,rax
   1400328e1:	sar    r9,1
   1400328e4:	sub    rdi,r9
   1400328e7:	mov    r8,rdi
   1400328ea:	mov    rbx,QWORD PTR [rsp+0x30]
   1400328ef:	mov    rsi,QWORD PTR [rsp+0x38]
   1400328f4:	add    rsp,0x20
   1400328f8:	pop    rdi
   1400328f9:	jmp    0x140046158
   1400328fe:	int3   
   1400328ff:	int3   
   140032900:	sub    rsp,0x28
   140032904:	xor    eax,eax
   140032906:	test   rcx,rcx
   140032909:	je     0x14003291f
   14003290b:	cmp    WORD PTR [rcx],ax
   14003290e:	je     0x14003291f
   140032910:	mov    r8,rdx
   140032913:	lea    rdx,[rip+0x3cc26]        # 0x14006f540
   14003291a:	call   0x140032848
   14003291f:	add    rsp,0x28
   140032923:	ret    
   140032924:	xor    r9d,r9d
   140032927:	lea    r10,[r8-0x1]
   14003292b:	test   r10,r10
   14003292e:	je     0x14003295a
   140032930:	mov    r8,rdx
   140032933:	sub    r8,rcx
   140032936:	cmp    BYTE PTR [rcx],0x0
   140032939:	je     0x14003295a
   14003293b:	cmp    BYTE PTR [rcx],0x2f
   14003293e:	mov    r11d,0x5c
   140032944:	movzx  eax,BYTE PTR [rcx]
   140032947:	cmove  eax,r11d
   14003294b:	inc    r9
   14003294e:	mov    BYTE PTR [r8+rcx*1],al
   140032952:	inc    rcx
   140032955:	cmp    r9,r10
   140032958:	jb     0x140032936
   14003295a:	mov    BYTE PTR [r9+rdx*1],0x0
   14003295f:	ret    
   140032960:	xor    r11d,r11d
   140032963:	mov    r10,rcx
   140032966:	mov    r9d,r11d
   140032969:	sub    r8,0x1
   14003296d:	je     0x14003299e
   14003296f:	mov    rax,rdx
   140032972:	sub    r10,rdx
   140032975:	movzx  ecx,WORD PTR [r10+rax*1]
   14003297a:	test   cx,cx
   14003297d:	je     0x14003299e
   14003297f:	cmp    cx,0x2f
   140032983:	jne    0x14003298c
   140032985:	mov    ecx,0x5c
   14003298a:	jmp    0x14003298f
   14003298c:	movzx  ecx,cx
   14003298f:	mov    WORD PTR [rax],cx
   140032992:	inc    r9
   140032995:	add    rax,0x2
   140032999:	cmp    r9,r8
   14003299c:	jb     0x140032975
   14003299e:	mov    WORD PTR [rdx+r9*2],r11w
   1400329a3:	ret    
   1400329a4:	rex push rbp
   1400329a6:	push   rbx
   1400329a7:	push   rsi
   1400329a8:	push   rdi
   1400329a9:	push   r13
   1400329ab:	push   r14
   1400329ad:	push   r15
   1400329af:	lea    rbp,[rsp-0xbf80]
   1400329b7:	mov    eax,0xc080
   1400329bc:	call   0x140055f20
   1400329c1:	sub    rsp,rax
   1400329c4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400329cd:	mov    rax,QWORD PTR [rip+0x4f50c]        # 0x140081ee0
   1400329d4:	xor    rax,rsp
   1400329d7:	mov    QWORD PTR [rbp+0xbf70],rax
   1400329de:	mov    dil,r9b
   1400329e1:	mov    r15,r8
   1400329e4:	mov    rbx,rdx
   1400329e7:	cmp    rdx,rcx
   1400329ea:	je     0x1400329f7
   1400329ec:	mov    rdx,rcx
   1400329ef:	mov    rcx,rbx
   1400329f2:	call   0x140046158
   1400329f7:	mov    rsi,rbx
   1400329fa:	mov    rcx,rbx
   1400329fd:	test   dil,dil
   140032a00:	je     0x140032a46
   140032a02:	mov    r14d,0x31
   140032a08:	call   0x140031e24
   140032a0d:	mov    rdi,rax
   140032a10:	cmp    rax,rbx
   140032a13:	jbe    0x140032a60
   140032a15:	lea    r13d,[r14-0x1]
   140032a19:	movzx  ecx,WORD PTR [rdi]
   140032a1c:	call   0x140045d18
   140032a21:	test   al,al
   140032a23:	je     0x140032a2f
   140032a25:	mov    WORD PTR [rdi],r14w
   140032a29:	movzx  r14d,r13w
   140032a2d:	jmp    0x140032a35
   140032a2f:	cmp    r14w,r13w
   140032a33:	je     0x140032a40
   140032a35:	sub    rdi,0x2
   140032a39:	cmp    rdi,rbx
   140032a3c:	ja     0x140032a19
   140032a3e:	jmp    0x140032a60
   140032a40:	lea    rsi,[rdi+0x2]
   140032a44:	jmp    0x140032a60
   140032a46:	mov    r8,r15
   140032a49:	lea    rdx,[rip+0x3cbc0]        # 0x14006f610
   140032a50:	call   0x140032848
   140032a55:	mov    rcx,rbx
   140032a58:	call   0x140031bd4
   140032a5d:	mov    rsi,rax
   140032a60:	mov    rcx,rbx
   140032a63:	call   0x140021dec
   140032a68:	test   al,al
   140032a6a:	jne    0x140032b65
   140032a70:	mov    edi,0x800
   140032a75:	mov    r8d,edi
   140032a78:	mov    rdx,rbx
   140032a7b:	lea    rcx,[rbp+0xaf70]
   140032a82:	call   0x140046158
   140032a87:	mov    r8d,edi
   140032a8a:	lea    rdx,[rip+0x3cb23]        # 0x14006f5b4
   140032a91:	lea    rcx,[rbp+0xaf70]
   140032a98:	call   0x140032848
   140032a9d:	lea    rcx,[rsp+0x30]
   140032aa2:	call   0x14002324c
   140032aa7:	nop
   140032aa8:	lea    rdx,[rbp+0xaf70]
   140032aaf:	lea    rcx,[rsp+0x30]
   140032ab4:	call   0x1400233f4
   140032ab9:	and    QWORD PTR [rbp+0x1f50],0x0
   140032ac1:	and    QWORD PTR [rbp+0x1f58],0x0
   140032ac9:	and    QWORD PTR [rbp+0x1f60],0x0
   140032ad1:	xor    r8d,r8d
   140032ad4:	lea    rdx,[rbp+0xf40]
   140032adb:	lea    rcx,[rsp+0x30]
   140032ae0:	call   0x1400232f8
   140032ae5:	test   al,al
   140032ae7:	je     0x140032b5b
   140032ae9:	xor    edx,edx
   140032aeb:	lea    rcx,[rbp+0x1f90]
   140032af2:	call   0x140007678
   140032af7:	nop
   140032af8:	xor    r8d,r8d
   140032afb:	lea    rdx,[rbp+0xf40]
   140032b02:	lea    rcx,[rbp+0x1f90]
   140032b09:	call   0x1400094f8
   140032b0e:	test   al,al
   140032b10:	je     0x140032b2d
   140032b12:	mov    dl,0x1
   140032b14:	lea    rcx,[rbp+0x1f90]
   140032b1b:	call   0x140008f4c
   140032b20:	test   al,al
   140032b22:	je     0x140032b2d
   140032b24:	cmp    BYTE PTR [rbp+0x9f21],0x0
   140032b2b:	jne    0x140032b3b
   140032b2d:	lea    rcx,[rbp+0x1f90]
   140032b34:	call   0x140007880
   140032b39:	jmp    0x140032ad1
   140032b3b:	mov    r8,r15
   140032b3e:	lea    rdx,[rbp+0xf40]
   140032b45:	mov    rcx,rbx
   140032b48:	call   0x140046158
   140032b4d:	nop
   140032b4e:	lea    rcx,[rbp+0x1f90]
   140032b55:	call   0x140007880
   140032b5a:	nop
   140032b5b:	lea    rcx,[rsp+0x30]
   140032b60:	call   0x140023264
   140032b65:	mov    rax,rsi
   140032b68:	mov    rcx,QWORD PTR [rbp+0xbf70]
   140032b6f:	xor    rcx,rsp
   140032b72:	call   0x140055f90
   140032b77:	add    rsp,0xc080
   140032b7e:	pop    r15
   140032b80:	pop    r14
   140032b82:	pop    r13
   140032b84:	pop    rdi
   140032b85:	pop    rsi
   140032b86:	pop    rbx
   140032b87:	pop    rbp
   140032b88:	ret    
   140032b89:	int3   
   140032b8a:	int3   
   140032b8b:	int3   
   140032b8c:	rex push rbp
   140032b8e:	lea    rbp,[rsp-0x12f10]
   140032b96:	mov    eax,0x13010
   140032b9b:	call   0x140055f20
   140032ba0:	sub    rsp,rax
   140032ba3:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140032bac:	mov    QWORD PTR [rsp+0x13028],rbx
   140032bb4:	mov    rax,QWORD PTR [rip+0x4f325]        # 0x140081ee0
   140032bbb:	xor    rax,rsp
   140032bbe:	mov    QWORD PTR [rbp+0x12f00],rax
   140032bc5:	mov    rbx,rcx
   140032bc8:	cmp    DWORD PTR [rcx+0xa430],0x0
   140032bcf:	je     0x140032d74
   140032bd5:	add    rcx,0xa408
   140032bdc:	call   0x1400463a0
   140032be1:	jmp    0x140032d3d
   140032be6:	mov    ecx,0xe4e
   140032beb:	call   0x140040118
   140032bf0:	mov    rcx,rax
   140032bf3:	lea    rdx,[rbp+0x11f00]
   140032bfa:	call   0x14001796c
   140032bff:	mov    rdx,rbx
   140032c02:	lea    rcx,[rbp+0x8f20]
   140032c09:	call   0x140007678
   140032c0e:	nop
   140032c0f:	mov    rdx,rbx
   140032c12:	lea    rcx,[rsp+0x40]
   140032c17:	call   0x140007678
   140032c1c:	nop
   140032c1d:	lea    rdx,[rbp+0x11f00]
   140032c24:	lea    rcx,[rbp+0x8f20]
   140032c2b:	call   0x14000a894
   140032c30:	test   al,al
   140032c32:	je     0x140032d26
   140032c38:	mov    edx,0x2
   140032c3d:	lea    rcx,[rbp+0x8f20]
   140032c44:	call   0x140009458
   140032c49:	test   al,al
   140032c4b:	jne    0x140032d26
   140032c51:	lea    rcx,[rbp+0x8f20]
   140032c58:	call   0x1400082a4
   140032c5d:	test   al,al
   140032c5f:	je     0x140032d26
   140032c65:	lea    rcx,[rbp+0x8f20]
   140032c6c:	call   0x140008324
   140032c71:	test   al,al
   140032c73:	jne    0x140032d26
   140032c79:	cmp    BYTE PTR [rbx+0x5132],al
   140032c7f:	je     0x140032c90
   140032c81:	cmp    BYTE PTR [rbx+0x5130],al
   140032c87:	mov    BYTE PTR [rbp+0x7ed4],0x1
   140032c8e:	jne    0x140032c97
   140032c90:	mov    BYTE PTR [rbp+0x7ed4],0x0
   140032c97:	lea    rcx,[rsp+0x40]
   140032c9c:	call   0x1400093e8
   140032ca1:	xor    r9d,r9d
   140032ca4:	mov    r8b,0x1
   140032ca7:	lea    rdx,[rbp+0x8f20]
   140032cae:	lea    rcx,[rsp+0x40]
   140032cb3:	call   0x1400084f0
   140032cb8:	jmp    0x140032cf3
   140032cba:	lea    rdx,[rbp+0x3430]
   140032cc1:	mov    rcx,rbx
   140032cc4:	call   0x140033128
   140032cc9:	mov    BYTE PTR [rsp+0x20],0x0
   140032cce:	xor    r9d,r9d
   140032cd1:	xor    r8d,r8d
   140032cd4:	lea    edx,[r9+0x2]
   140032cd8:	lea    rcx,[rsp+0x40]
   140032cdd:	call   0x14000b340
   140032ce2:	lea    rdx,[rbp+0x8f20]
   140032ce9:	lea    rcx,[rsp+0x40]
   140032cee:	call   0x1400084a8
   140032cf3:	and    QWORD PTR [rsp+0x20],0x0
   140032cf9:	xor    r9d,r9d
   140032cfc:	mov    r8b,0x1
   140032cff:	lea    rdx,[rbp+0x8f20]
   140032d06:	lea    rcx,[rsp+0x40]
   140032d0b:	call   0x1400096dc
   140032d10:	test   al,al
   140032d12:	jne    0x140032cba
   140032d14:	lea    rdx,[rbp+0x8f20]
   140032d1b:	lea    rcx,[rsp+0x40]
   140032d20:	call   0x14000a340
   140032d25:	nop
   140032d26:	lea    rcx,[rsp+0x40]
   140032d2b:	call   0x140007880
   140032d30:	nop
   140032d31:	lea    rcx,[rbp+0x8f20]
   140032d38:	call   0x140007880
   140032d3d:	mov    r8d,0x800
   140032d43:	lea    rdx,[rbp+0x11f00]
   140032d4a:	mov    rcx,rbx
   140032d4d:	call   0x140013e48
   140032d52:	test   al,al
   140032d54:	jne    0x140032be6
   140032d5a:	cmp    BYTE PTR [rbx+0x6152],al
   140032d60:	jne    0x140032d74
   140032d62:	mov    ecx,0xd22
   140032d67:	call   0x140040118
   140032d6c:	mov    rcx,rax
   140032d6f:	call   0x14001796c
   140032d74:	mov    rcx,QWORD PTR [rbp+0x12f00]
   140032d7b:	xor    rcx,rsp
   140032d7e:	call   0x140055f90
   140032d83:	mov    rbx,QWORD PTR [rsp+0x13028]
   140032d8b:	add    rsp,0x13010
   140032d92:	pop    rbp
   140032d93:	ret    
   140032d94:	mov    rax,rsp
   140032d97:	mov    QWORD PTR [rax+0x8],rbx
   140032d9b:	mov    QWORD PTR [rax+0x10],rbp
   140032d9f:	mov    QWORD PTR [rax+0x18],rsi
   140032da3:	mov    QWORD PTR [rax+0x20],rdi
   140032da7:	push   r12
   140032da9:	push   r14
   140032dab:	push   r15
   140032dad:	sub    rsp,0x20
   140032db1:	mov    rdi,rcx
   140032db4:	xor    r15d,r15d
   140032db7:	movzx  ecx,WORD PTR [rdx]
   140032dba:	mov    rbx,r8
   140032dbd:	mov    rsi,rdx
   140032dc0:	mov    r14,r8
   140032dc3:	test   cx,cx
   140032dc6:	je     0x140032e79
   140032dcc:	movsxd rbp,r9d
   140032dcf:	lea    r12d,[r15+0x2e]
   140032dd3:	mov    rax,rbx
   140032dd6:	sub    rax,r14
   140032dd9:	sar    rax,1
   140032ddc:	cmp    rax,rbp
   140032ddf:	jge    0x140032e79
   140032de5:	movzx  eax,cx
   140032de8:	cmp    eax,0x2a
   140032deb:	je     0x140032e61
   140032ded:	cmp    eax,r12d
   140032df0:	je     0x140032e15
   140032df2:	cmp    eax,0x3f
   140032df5:	je     0x140032e00
   140032df7:	mov    WORD PTR [rbx],cx
   140032dfa:	add    rbx,0x2
   140032dfe:	jmp    0x140032e69
   140032e00:	movzx  eax,WORD PTR [rdi]
   140032e03:	test   ax,ax
   140032e06:	je     0x140032e69
   140032e08:	mov    WORD PTR [rbx],ax
   140032e0b:	add    rbx,0x2
   140032e0f:	add    rdi,0x2
   140032e13:	jmp    0x140032e69
   140032e15:	mov    edx,r12d
   140032e18:	lea    rcx,[rsi+0x2]
   140032e1c:	call   0x1400590e0
   140032e21:	mov    edx,r12d
   140032e24:	mov    rcx,rdi
   140032e27:	test   rax,rax
   140032e2a:	jne    0x140032e33
   140032e2c:	call   0x140058684
   140032e31:	jmp    0x140032e38
   140032e33:	call   0x1400590e0
   140032e38:	test   rax,rax
   140032e3b:	mov    WORD PTR [rbx],r12w
   140032e3f:	lea    rdi,[rax+0x2]
   140032e43:	lea    rcx,[rip+0x3c89e]        # 0x14006f6e8
   140032e4a:	cmove  rdi,rcx
   140032e4e:	jmp    0x140032dfa
   140032e50:	cmp    ax,WORD PTR [rsi+0x2]
   140032e54:	je     0x140032e69
   140032e56:	mov    WORD PTR [rbx],ax
   140032e59:	add    rbx,0x2
   140032e5d:	add    rdi,0x2
   140032e61:	movzx  eax,WORD PTR [rdi]
   140032e64:	test   ax,ax
   140032e67:	jne    0x140032e50
   140032e69:	add    rsi,0x2
   140032e6d:	movzx  ecx,WORD PTR [rsi]
   140032e70:	test   cx,cx
   140032e73:	jne    0x140032dd3
   140032e79:	mov    rbp,QWORD PTR [rsp+0x48]
   140032e7e:	mov    rsi,QWORD PTR [rsp+0x50]
   140032e83:	mov    rdi,QWORD PTR [rsp+0x58]
   140032e88:	mov    WORD PTR [rbx],r15w
   140032e8c:	mov    rbx,QWORD PTR [rsp+0x40]
   140032e91:	add    rsp,0x20
   140032e95:	pop    r15
   140032e97:	pop    r14
   140032e99:	pop    r12
   140032e9b:	ret    
   140032e9c:	mov    rax,rsp
   140032e9f:	push   rdi
   140032ea0:	sub    rsp,0x100
   140032ea7:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140032eb0:	mov    QWORD PTR [rax+0x10],rbx
   140032eb4:	mov    QWORD PTR [rax+0x18],rbp
   140032eb8:	mov    QWORD PTR [rax+0x20],rsi
   140032ebc:	mov    rax,QWORD PTR [rip+0x4f01d]        # 0x140081ee0
   140032ec3:	xor    rax,rsp
   140032ec6:	mov    QWORD PTR [rsp+0xf0],rax
   140032ece:	mov    rbx,rcx
   140032ed1:	lea    rbp,[rcx+0xa6e8]
   140032ed8:	mov    rcx,rbp
   140032edb:	call   0x140046378
   140032ee0:	lea    rcx,[rsp+0x30]
   140032ee5:	call   0x140046194
   140032eea:	nop
   140032eeb:	add    rbx,0xa408
   140032ef2:	jmp    0x140032f1c
   140032ef4:	mov    rcx,rbx
   140032ef7:	call   0x140046230
   140032efc:	mov    rdi,rax
   140032eff:	test   rax,rax
   140032f02:	je     0x140032f2c
   140032f04:	mov    rdx,rsi
   140032f07:	lea    rcx,[rsp+0x30]
   140032f0c:	call   0x1400461bc
   140032f11:	mov    rdx,rdi
   140032f14:	mov    rcx,rbp
   140032f17:	call   0x1400461bc
   140032f1c:	mov    rcx,rbx
   140032f1f:	call   0x140046230
   140032f24:	test   rax,rax
   140032f27:	mov    rsi,rax
   140032f2a:	jne    0x140032ef4
   140032f2c:	mov    rcx,rbx
   140032f2f:	call   0x140046378
   140032f34:	jmp    0x140032f41
   140032f36:	mov    rdx,rax
   140032f39:	mov    rcx,rbx
   140032f3c:	call   0x1400461bc
   140032f41:	lea    rcx,[rsp+0x30]
   140032f46:	call   0x140046230
   140032f4b:	test   rax,rax
   140032f4e:	jne    0x140032f36
   140032f50:	mov    rcx,QWORD PTR [rsp+0x30]
   140032f55:	test   rcx,rcx
   140032f58:	je     0x140032f5f
   140032f5a:	call   0x14005a938
   140032f5f:	mov    rcx,QWORD PTR [rsp+0xf0]
   140032f67:	xor    rcx,rsp
   140032f6a:	call   0x140055f90
   140032f6f:	lea    r11,[rsp+0x100]
   140032f77:	mov    rbx,QWORD PTR [r11+0x18]
   140032f7b:	mov    rbp,QWORD PTR [r11+0x20]
   140032f7f:	mov    rsi,QWORD PTR [r11+0x28]
   140032f83:	mov    rsp,r11
   140032f86:	pop    rdi
   140032f87:	ret    
   140032f88:	rex push rbp
   140032f8a:	lea    rbp,[rsp-0x12f00]
   140032f92:	mov    eax,0x13000
   140032f97:	call   0x140055f20
   140032f9c:	sub    rsp,rax
   140032f9f:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140032fa8:	mov    QWORD PTR [rsp+0x13018],rbx
   140032fb0:	mov    rax,QWORD PTR [rip+0x4ef29]        # 0x140081ee0
   140032fb7:	xor    rax,rsp
   140032fba:	mov    QWORD PTR [rbp+0x12ef0],rax
   140032fc1:	mov    rbx,rcx
   140032fc4:	jmp    0x1400330d1
   140032fc9:	mov    ecx,0xe4e
   140032fce:	call   0x140040118
   140032fd3:	mov    rcx,rax
   140032fd6:	lea    rdx,[rbp+0x11ef0]
   140032fdd:	call   0x14001796c
   140032fe2:	mov    rdx,rbx
   140032fe5:	lea    rcx,[rsp+0x30]
   140032fea:	call   0x140007678
   140032fef:	nop
   140032ff0:	mov    rdx,rbx
   140032ff3:	lea    rcx,[rbp+0x8f10]
   140032ffa:	call   0x140007678
   140032fff:	nop
   140033000:	lea    rdx,[rbp+0x11ef0]
   140033007:	lea    rcx,[rsp+0x30]
   14003300c:	call   0x14000a894
   140033011:	test   al,al
   140033013:	je     0x1400330b7
   140033019:	mov    edx,0x2
   14003301e:	lea    rcx,[rsp+0x30]
   140033023:	call   0x140009458
   140033028:	test   al,al
   14003302a:	jne    0x1400330b7
   140033030:	lea    rcx,[rsp+0x30]
   140033035:	call   0x1400082a4
   14003303a:	test   al,al
   14003303c:	je     0x1400330b7
   14003303e:	lea    r8,[rsp+0x56]
   140033043:	xor    edx,edx
   140033045:	lea    rcx,[rip+0x617f4]        # 0x140094840
   14003304c:	call   0x1400259c8
   140033051:	cmp    BYTE PTR [rbx+0x5132],0x0
   140033058:	je     0x14003306a
   14003305a:	cmp    BYTE PTR [rbx+0x5130],0x0
   140033061:	mov    BYTE PTR [rbp+0x10ea4],0x1
   140033068:	jne    0x140033071
   14003306a:	mov    BYTE PTR [rbp+0x10ea4],0x0
   140033071:	lea    rcx,[rbp+0x8f10]
   140033078:	call   0x1400093e8
   14003307d:	xor    r9d,r9d
   140033080:	mov    r8b,0x1
   140033083:	lea    rdx,[rsp+0x30]
   140033088:	lea    rcx,[rbp+0x8f10]
   14003308f:	call   0x1400084f0
   140033094:	lea    rdx,[rsp+0x30]
   140033099:	lea    rcx,[rbp+0x8f10]
   1400330a0:	call   0x14000844c
   1400330a5:	lea    rdx,[rsp+0x30]
   1400330aa:	lea    rcx,[rbp+0x8f10]
   1400330b1:	call   0x14000a340
   1400330b6:	nop
   1400330b7:	lea    rcx,[rbp+0x8f10]
   1400330be:	call   0x140007880
   1400330c3:	nop
   1400330c4:	lea    rcx,[rsp+0x30]
   1400330c9:	call   0x140007880
   1400330ce:	mov    rcx,rbx
   1400330d1:	mov    r8d,0x800
   1400330d7:	lea    rdx,[rbp+0x11ef0]
   1400330de:	call   0x140013e48
   1400330e3:	test   al,al
   1400330e5:	jne    0x140032fc9
   1400330eb:	cmp    BYTE PTR [rbx+0x6152],al
   1400330f1:	jne    0x140033105
   1400330f3:	mov    ecx,0xd22
   1400330f8:	call   0x140040118
   1400330fd:	mov    rcx,rax
   140033100:	call   0x14001796c
   140033105:	mov    rcx,QWORD PTR [rbp+0x12ef0]
   14003310c:	xor    rcx,rsp
   14003310f:	call   0x140055f90
   140033114:	mov    rbx,QWORD PTR [rsp+0x13018]
   14003311c:	add    rsp,0x13000
   140033123:	pop    rbp
   140033124:	ret    
   140033125:	int3   
   140033126:	int3   
   140033127:	int3   
   140033128:	mov    QWORD PTR [rsp+0x18],rbx
   14003312d:	push   rbp
   14003312e:	push   rsi
   14003312f:	push   rdi
   140033130:	push   r12
   140033132:	push   r13
   140033134:	push   r14
   140033136:	push   r15
   140033138:	lea    rbp,[rsp-0x3f40]
   140033140:	mov    eax,0x4040
   140033145:	call   0x140055f20
   14003314a:	sub    rsp,rax
   14003314d:	mov    rax,QWORD PTR [rip+0x4ed8c]        # 0x140081ee0
   140033154:	xor    rax,rsp
   140033157:	mov    QWORD PTR [rbp+0x3f30],rax
   14003315e:	xor    r12d,r12d
   140033161:	xor    r8d,r8d
   140033164:	mov    DWORD PTR [rsp+0x28],r12d
   140033169:	mov    rdi,rdx
   14003316c:	mov    r14,rcx
   14003316f:	mov    QWORD PTR [rsp+0x20],r12
   140033174:	lea    r9d,[r12+0x3]
   140033179:	call   0x140013fb8
   14003317e:	test   eax,eax
   140033180:	jne    0x1400331a6
   140033182:	mov    DWORD PTR [rsp+0x28],r12d
   140033187:	lea    r9d,[r12+0x1]
   14003318c:	xor    r8d,r8d
   14003318f:	mov    QWORD PTR [rsp+0x20],r12
   140033194:	mov    rdx,rdi
   140033197:	mov    rcx,r14
   14003319a:	call   0x140013fb8
   14003319f:	mov    sil,0x1
   1400331a2:	test   eax,eax
   1400331a4:	jne    0x1400331b1
   1400331a6:	mov    sil,r12b
   1400331a9:	test   eax,eax
   1400331ab:	je     0x14003330b
   1400331b1:	lea    r15d,[rax-0x1]
   1400331b5:	mov    r13d,0x800
   1400331bb:	mov    r9d,r15d
   1400331be:	lea    rcx,[r14+0xa6e8]
   1400331c5:	mov    r8d,r13d
   1400331c8:	lea    rdx,[rbp+0x2f30]
   1400331cf:	call   0x1400462cc
   1400331d4:	test   al,al
   1400331d6:	je     0x14003330b
   1400331dc:	cmp    WORD PTR [rbp+0x2f30],r12w
   1400331e4:	je     0x14003330b
   1400331ea:	or     rbx,0xffffffffffffffff
   1400331ee:	mov    WORD PTR [rbp+0xf30],r12w
   1400331f6:	test   sil,sil
   1400331f9:	je     0x14003326f
   1400331fb:	lea    rcx,[r14+0xa408]
   140033202:	mov    r9d,r15d
   140033205:	mov    r8d,r13d
   140033208:	lea    rdx,[rbp+0x1f30]
   14003320f:	call   0x1400462cc
   140033214:	test   al,al
   140033216:	je     0x14003326f
   140033218:	cmp    WORD PTR [rbp+0x1f30],r12w
   140033220:	je     0x14003326f
   140033222:	lea    rax,[rbp+0x1f30]
   140033229:	mov    rcx,rbx
   14003322c:	inc    rcx
   14003322f:	cmp    WORD PTR [rax+rcx*2],r12w
   140033234:	jne    0x14003322c
   140033236:	cmp    WORD PTR [rdi+rcx*2+0x20],0x2f
   14003323c:	je     0x140033246
   14003323e:	cmp    WORD PTR [rdi+rcx*2+0x20],0x5c
   140033244:	jne    0x14003326f
   140033246:	lea    rdx,[rdi+0x22]
   14003324a:	lea    rdx,[rdx+rcx*2]
   14003324e:	lea    r8,[rbp+0xf30]
   140033255:	sub    r8,rdx
   140033258:	movzx  eax,WORD PTR [rdx]
   14003325b:	mov    WORD PTR [r8+rdx*1],ax
   140033260:	lea    rdx,[rdx+0x2]
   140033264:	test   ax,ax
   140033267:	jne    0x140033258
   140033269:	mov    WORD PTR [rdi+rcx*2+0x20],r12w
   14003326f:	add    rdi,0x20
   140033273:	lea    r8,[rsp+0x30]
   140033278:	mov    esi,0x7ff
   14003327d:	lea    rdx,[rbp+0x2f30]
   140033284:	mov    r9d,esi
   140033287:	mov    rcx,rdi
   14003328a:	call   0x140032d94
   14003328f:	cmp    WORD PTR [rbp+0xf30],r12w
   140033297:	je     0x1400332e5
   140033299:	lea    rcx,[rsp+0x30]
   14003329e:	mov    rax,rbx
   1400332a1:	inc    rax
   1400332a4:	cmp    WORD PTR [rcx+rax*2],r12w
   1400332a9:	jne    0x1400332a1
   1400332ab:	lea    rcx,[rbp+0xf30]
   1400332b2:	inc    rbx
   1400332b5:	cmp    WORD PTR [rcx+rbx*2],r12w
   1400332ba:	jne    0x1400332b2
   1400332bc:	add    rax,rbx
   1400332bf:	cmp    rax,rsi
   1400332c2:	jae    0x1400332e5
   1400332c4:	mov    rdx,r13
   1400332c7:	lea    rcx,[rsp+0x30]
   1400332cc:	call   0x140030e78
   1400332d1:	mov    r8,r13
   1400332d4:	lea    rdx,[rbp+0xf30]
   1400332db:	lea    rcx,[rsp+0x30]
   1400332e0:	call   0x140046120
   1400332e5:	lea    r8,[rsp+0x30]
   1400332ea:	mov    rdx,rdi
   1400332ed:	mov    ecx,0x6d
   1400332f2:	call   0x140001358
   1400332f7:	mov    r8,r13
   1400332fa:	lea    rdx,[rsp+0x30]
   1400332ff:	mov    rcx,rdi
   140033302:	call   0x140046158
   140033307:	mov    al,0x1
   140033309:	jmp    0x14003330d
   14003330b:	xor    al,al
   14003330d:	mov    rcx,QWORD PTR [rbp+0x3f30]
   140033314:	xor    rcx,rsp
   140033317:	call   0x140055f90
   14003331c:	mov    rbx,QWORD PTR [rsp+0x4090]
   140033324:	add    rsp,0x4040
   14003332b:	pop    r15
   14003332d:	pop    r14
   14003332f:	pop    r13
   140033331:	pop    r12
   140033333:	pop    rdi
   140033334:	pop    rsi
   140033335:	pop    rbp
   140033336:	ret    
   140033337:	int3   
   140033338:	mov    QWORD PTR [rsp+0x8],rbx
   14003333d:	mov    QWORD PTR [rsp+0x10],rbp
   140033342:	mov    QWORD PTR [rsp+0x18],rsi
   140033347:	push   rdi
   140033348:	sub    rsp,0x20
   14003334c:	xor    edi,edi
   14003334e:	mov    rbx,rcx
   140033351:	cmp    DWORD PTR [rcx+0x740],edi
   140033357:	jbe    0x140033378
   140033359:	mov    rcx,QWORD PTR [rbx+0x8]
   14003335d:	lea    rdx,[rdi+rdi*2]
   140033361:	add    rdx,rdx
   140033364:	mov    rcx,QWORD PTR [rcx+rdx*8+0x18]
   140033369:	call   0x140055de8
   14003336e:	inc    edi
   140033370:	cmp    edi,DWORD PTR [rbx+0x740]
   140033376:	jb     0x140033359
   140033378:	mov    rcx,QWORD PTR [rbx+0x8]
   14003337c:	call   0x140055de8
   140033381:	mov    rcx,QWORD PTR [rbx+0x718]
   140033388:	call   0x140055de8
   14003338d:	mov    rcx,QWORD PTR [rbx+0x10]
   140033391:	call   0x140055de8
   140033396:	lea    rdi,[rbx+0x20]
   14003339a:	mov    ebp,0x20
   14003339f:	mov    rsi,QWORD PTR [rdi]
   1400333a2:	test   rsi,rsi
   1400333a5:	je     0x1400333bc
   1400333a7:	mov    rcx,rsi
   1400333aa:	call   0x140041c00
   1400333af:	mov    edx,0x40
   1400333b4:	mov    rcx,rsi
   1400333b7:	call   0x140055de8
   1400333bc:	add    rdi,0x38
   1400333c0:	sub    rbp,0x1
   1400333c4:	jne    0x14003339f
   1400333c6:	mov    rcx,QWORD PTR [rbx+0x730]
   1400333cd:	mov    rbx,QWORD PTR [rsp+0x30]
   1400333d2:	mov    rbp,QWORD PTR [rsp+0x38]
   1400333d7:	mov    rsi,QWORD PTR [rsp+0x40]
   1400333dc:	add    rsp,0x20
   1400333e0:	pop    rdi
   1400333e1:	jmp    0x140047010
   1400333e6:	int3   
   1400333e7:	int3   
   1400333e8:	mov    QWORD PTR [rsp+0x8],rbx
   1400333ed:	push   rdi
   1400333ee:	sub    rsp,0x20
   1400333f2:	mov    r8,QWORD PTR [rdx+0x28]
   1400333f6:	mov    rbx,rdx
   1400333f9:	mov    rdx,QWORD PTR [rdx+0x18]
   1400333fd:	mov    rdi,rcx
   140033400:	xor    ecx,ecx
   140033402:	call   0x140017bec
   140033407:	mov    rdx,QWORD PTR [rbx+0x30]
   14003340b:	mov    rcx,QWORD PTR [rdi+0x10]
   14003340f:	mov    rbx,QWORD PTR [rsp+0x30]
   140033414:	mov    QWORD PTR [rcx+rdx*8],rax
   140033418:	add    rsp,0x20
   14003341c:	pop    rdi
   14003341d:	ret    
   14003341e:	int3   
   14003341f:	int3   
   140033420:	mov    QWORD PTR [rsp+0x8],rbx
   140033425:	mov    QWORD PTR [rsp+0x10],rsi
   14003342a:	push   rdi
   14003342b:	sub    rsp,0x30
   14003342f:	xor    ebx,ebx
   140033431:	mov    rsi,rdx
   140033434:	mov    rdi,rcx
   140033437:	cmp    DWORD PTR [rcx+0x73c],ebx
   14003343d:	jbe    0x14003348a
   14003343f:	mov    eax,DWORD PTR [rdi+0x738]
   140033445:	mov    r8d,ebx
   140033448:	mov    r9,QWORD PTR [rsi+0x18]
   14003344c:	add    eax,ebx
   14003344e:	add    r9,QWORD PTR [rsi+0x20]
   140033452:	lea    rcx,[rax+rax*2]
   140033456:	mov    rax,QWORD PTR [rdi+0x8]
   14003345a:	add    rcx,rcx
   14003345d:	mov    rdx,QWORD PTR [rax+rcx*8+0x20]
   140033462:	add    rdx,QWORD PTR [rsi+0x20]
   140033466:	mov    rax,QWORD PTR [rsi+0x28]
   14003346a:	mov    rcx,QWORD PTR [rsi+0x8]
   14003346e:	mov    QWORD PTR [rsp+0x28],rax
   140033473:	mov    QWORD PTR [rsp+0x20],rdx
   140033478:	mov    edx,DWORD PTR [rsi+0x10]
   14003347b:	call   0x1400423a4
   140033480:	inc    ebx
   140033482:	cmp    ebx,DWORD PTR [rdi+0x73c]
   140033488:	jb     0x14003343f
   14003348a:	mov    rbx,QWORD PTR [rsp+0x40]
   14003348f:	mov    rsi,QWORD PTR [rsp+0x48]
   140033494:	add    rsp,0x30
   140033498:	pop    rdi
   140033499:	ret    
   14003349a:	int3   
   14003349b:	int3   
   14003349c:	mov    rax,rsp
   14003349f:	mov    QWORD PTR [rax+0x8],rbx
   1400334a3:	mov    QWORD PTR [rax+0x18],rbp
   1400334a7:	mov    QWORD PTR [rax+0x20],rsi
   1400334ab:	mov    DWORD PTR [rax+0x10],edx
   1400334ae:	push   rdi
   1400334af:	push   r12
   1400334b1:	push   r13
   1400334b3:	push   r14
   1400334b5:	push   r15
   1400334b7:	sub    rsp,0x20
   1400334bb:	mov    rax,QWORD PTR [rcx+0x728]
   1400334c2:	xor    esi,esi
   1400334c4:	xor    r12d,r12d
   1400334c7:	mov    r14d,r9d
   1400334ca:	mov    r13,r8
   1400334cd:	mov    rdi,rcx
   1400334d0:	mov    r10,QWORD PTR [rax+0x22b0]
   1400334d7:	mov    r15d,DWORD PTR [r10+0x83d0]
   1400334de:	test   r9d,r9d
   1400334e1:	je     0x14003357e
   1400334e7:	xor    ebp,ebp
   1400334e9:	test   r15d,r15d
   1400334ec:	je     0x140033565
   1400334ee:	lea    rbx,[rdi+0x40]
   1400334f2:	cmp    esi,r14d
   1400334f5:	jae    0x140033565
   1400334f7:	mov    ecx,r14d
   1400334fa:	mov    eax,esi
   1400334fc:	add    rax,r13
   1400334ff:	sub    ecx,esi
   140033501:	mov    QWORD PTR [rbx-0x10],rax
   140033505:	mov    eax,0x10000
   14003350a:	cmp    ecx,eax
   14003350c:	cmovb  eax,ecx
   14003350f:	mov    QWORD PTR [rbx],rax
   140033512:	mov    eax,DWORD PTR [rdi+0x740]
   140033518:	imul   eax,r12d
   14003351c:	add    eax,edx
   14003351e:	mov    QWORD PTR [rbx+0x8],rax
   140033522:	cmp    r15d,0x1
   140033526:	jbe    0x140033541
   140033528:	mov    rcx,QWORD PTR [rdi+0x730]
   14003352f:	lea    r8,[rbx-0x28]
   140033533:	lea    rdx,[rip+0xa36]        # 0x140033f70
   14003353a:	call   0x140046dd8
   14003353f:	jmp    0x14003354d
   140033541:	lea    rdx,[rbx-0x28]
   140033545:	mov    rcx,rdi
   140033548:	call   0x1400333e8
   14003354d:	mov    edx,DWORD PTR [rsp+0x58]
   140033551:	add    esi,0x10000
   140033557:	inc    r12d
   14003355a:	inc    ebp
   14003355c:	add    rbx,0x38
   140033560:	cmp    ebp,r15d
   140033563:	jb     0x1400334f2
   140033565:	mov    rcx,QWORD PTR [rdi+0x730]
   14003356c:	call   0x140047214
   140033571:	mov    edx,DWORD PTR [rsp+0x58]
   140033575:	cmp    esi,r14d
   140033578:	jb     0x1400334e7
   14003357e:	mov    rbx,QWORD PTR [rsp+0x50]
   140033583:	mov    rbp,QWORD PTR [rsp+0x60]
   140033588:	mov    rsi,QWORD PTR [rsp+0x68]
   14003358d:	add    rsp,0x20
   140033591:	pop    r15
   140033593:	pop    r14
   140033595:	pop    r13
   140033597:	pop    r12
   140033599:	pop    rdi
   14003359a:	ret    
   14003359b:	int3   
   14003359c:	mov    rax,rsp
   14003359f:	mov    QWORD PTR [rax+0x18],r8
   1400335a3:	mov    DWORD PTR [rax+0x10],edx
   1400335a6:	push   rbp
   1400335a7:	push   rsi
   1400335a8:	push   rdi
   1400335a9:	push   r12
   1400335ab:	push   r13
   1400335ad:	push   r14
   1400335af:	push   r15
   1400335b1:	sub    rsp,0x30
   1400335b5:	mov    QWORD PTR [rax-0x48],0xfffffffffffffffe
   1400335bd:	mov    QWORD PTR [rax+0x20],rbx
   1400335c1:	mov    rdi,rcx
   1400335c4:	mov    rax,QWORD PTR [rcx+0x728]
   1400335cb:	mov    r10,QWORD PTR [rax+0x22b0]
   1400335d2:	mov    r15d,DWORD PTR [r10+0x83d0]
   1400335d9:	mov    eax,r9d
   1400335dc:	shr    eax,0xc
   1400335df:	cmp    r15d,eax
   1400335e2:	cmovae r15d,eax
   1400335e6:	mov    r8d,0x1
   1400335ec:	cmp    r15d,r8d
   1400335ef:	cmovb  r15d,r8d
   1400335f3:	xor    edx,edx
   1400335f5:	mov    eax,r9d
   1400335f8:	div    r15d
   1400335fb:	mov    r12d,eax
   1400335fe:	and    r12d,r8d
   140033601:	add    r12d,eax
   140033604:	mov    ecx,r12d
   140033607:	not    ecx
   140033609:	add    ecx,r8d
   14003360c:	and    ecx,0xf
   14003360f:	add    r12d,ecx
   140033612:	mov    eax,0x1000
   140033617:	cmp    r12d,eax
   14003361a:	cmovb  r12d,eax
   14003361e:	xor    ebp,ebp
   140033620:	xor    esi,esi
   140033622:	mov    r13d,r15d
   140033625:	test   r15d,r15d
   140033628:	je     0x1400336fd
   14003362e:	mov    r14d,r9d
   140033631:	lea    rbx,[rdi+0x20]
   140033635:	cmp    rsi,r14
   140033638:	jae    0x1400336fd
   14003363e:	cmp    QWORD PTR [rbx],0x0
   140033642:	jne    0x140033682
   140033644:	mov    ecx,0x40
   140033649:	call   0x140055dac
   14003364e:	mov    QWORD PTR [rsp+0x70],rax
   140033653:	test   rax,rax
   140033656:	je     0x140033661
   140033658:	mov    rcx,rax
   14003365b:	call   0x140041bcc
   140033660:	nop
   140033661:	mov    QWORD PTR [rbx],rax
   140033664:	xor    r9d,r9d
   140033667:	mov    r8d,DWORD PTR [rdi+0x73c]
   14003366e:	mov    edx,DWORD PTR [rdi+0x738]
   140033674:	mov    rcx,rax
   140033677:	call   0x140041c3c
   14003367c:	mov    r8d,0x1
   140033682:	mov    eax,DWORD PTR [rsp+0x78]
   140033686:	mov    DWORD PTR [rbx+0x8],eax
   140033689:	mov    rax,QWORD PTR [rsp+0x80]
   140033691:	mov    QWORD PTR [rbx+0x10],rax
   140033695:	mov    QWORD PTR [rbx+0x18],rsi
   140033699:	mov    edx,r12d
   14003369c:	add    rdx,rsi
   14003369f:	cmp    rdx,r14
   1400336a2:	ja     0x1400336ad
   1400336a4:	lea    ecx,[r15-0x1]
   1400336a8:	cmp    rbp,rcx
   1400336ab:	jne    0x1400336b0
   1400336ad:	mov    rdx,r14
   1400336b0:	mov    rax,rdx
   1400336b3:	sub    rax,rsi
   1400336b6:	mov    QWORD PTR [rbx+0x20],rax
   1400336ba:	mov    rsi,rdx
   1400336bd:	cmp    r15d,r8d
   1400336c0:	jbe    0x1400336db
   1400336c2:	lea    r8,[rbx-0x8]
   1400336c6:	lea    rdx,[rip+0x8af]        # 0x140033f7c
   1400336cd:	mov    rcx,QWORD PTR [rdi+0x730]
   1400336d4:	call   0x140046dd8
   1400336d9:	jmp    0x1400336e7
   1400336db:	lea    rdx,[rbx-0x8]
   1400336df:	mov    rcx,rdi
   1400336e2:	call   0x140033420
   1400336e7:	mov    r8d,0x1
   1400336ed:	add    rbp,r8
   1400336f0:	add    rbx,0x38
   1400336f4:	cmp    rbp,r13
   1400336f7:	jb     0x140033635
   1400336fd:	mov    rcx,QWORD PTR [rdi+0x730]
   140033704:	mov    rbx,QWORD PTR [rsp+0x88]
   14003370c:	add    rsp,0x30
   140033710:	pop    r15
   140033712:	pop    r14
   140033714:	pop    r13
   140033716:	pop    r12
   140033718:	pop    rdi
   140033719:	pop    rsi
   14003371a:	pop    rbp
   14003371b:	jmp    0x140047214
   140033720:	sub    rsp,0x798
   140033727:	mov    r10,r8
   14003372a:	mov    eax,edx
   14003372c:	cmp    ecx,0x2
   14003372f:	jne    0x140033752
   140033731:	mov    rdx,r8
   140033734:	mov    ecx,eax
   140033736:	call   0x140034594
   14003373b:	mov    eax,eax
   14003373d:	shl    rax,0x8
   140033741:	shr    r10,0x9
   140033745:	add    rax,r10
   140033748:	lea    rax,[rax*2+0x36]
   140033750:	jmp    0x140033779
   140033752:	cmp    ecx,0x3
   140033755:	jne    0x140033777
   140033757:	lea    rcx,[rsp+0x20]
   14003375c:	call   0x140034430
   140033761:	mov    eax,DWORD PTR [rsp+0x75c]
   140033768:	imul   rax,QWORD PTR [rsp+0x780]
   140033771:	add    rax,0x16
   140033775:	jmp    0x140033779
   140033777:	xor    eax,eax
   140033779:	add    rsp,0x798
   140033780:	ret    
   140033781:	int3   
   140033782:	int3   
   140033783:	int3   
   140033784:	mov    QWORD PTR [rsp+0x8],rbx
   140033789:	mov    QWORD PTR [rsp+0x10],rsi
   14003378e:	push   rdi
   14003378f:	sub    rsp,0x20
   140033793:	mov    rbx,rcx
   140033796:	mov    QWORD PTR [rcx+0x728],rdx
   14003379d:	lea    rax,[rcx+0x20]
   1400337a1:	mov    esi,r8d
   1400337a4:	mov    ecx,0x20
   1400337a9:	mov    rdi,rdx
   1400337ac:	and    QWORD PTR [rax],0x0
   1400337b0:	mov    QWORD PTR [rax-0x8],rbx
   1400337b4:	lea    rax,[rax+0x38]
   1400337b8:	sub    rcx,0x1
   1400337bc:	jne    0x1400337ac
   1400337be:	call   0x140046ea4
   1400337c3:	xor    edx,edx
   1400337c5:	mov    QWORD PTR [rbx+0x730],rax
   1400337cc:	mov    rax,QWORD PTR [rdi]
   1400337cf:	mov    rcx,rdi
   1400337d2:	lea    r8d,[rdx+0x2]
   1400337d6:	call   QWORD PTR [rax+0x18]
   1400337d9:	mov    rax,QWORD PTR [rdi]
   1400337dc:	mov    rcx,rdi
   1400337df:	call   QWORD PTR [rax+0x20]
   1400337e2:	mov    edx,esi
   1400337e4:	mov    rcx,rbx
   1400337e7:	mov    r8,rax
   1400337ea:	mov    QWORD PTR [rbx+0x750],rax
   1400337f1:	call   0x140034430
   1400337f6:	mov    ecx,DWORD PTR [rbx+0x740]
   1400337fc:	mov    eax,0x30
   140033801:	mul    rcx
   140033804:	mov    rdi,0xffffffffffffffff
   14003380b:	cmovo  rax,rdi
   14003380f:	mov    rcx,rax
   140033812:	call   0x140055df0
   140033817:	xor    edx,edx
   140033819:	mov    QWORD PTR [rbx+0x8],rax
   14003381d:	cmp    DWORD PTR [rbx+0x740],edx
   140033823:	jbe    0x140033840
   140033825:	mov    rax,QWORD PTR [rbx+0x8]
   140033829:	lea    rcx,[rdx+rdx*2]
   14003382d:	add    rcx,rcx
   140033830:	inc    edx
   140033832:	and    QWORD PTR [rax+rcx*8+0x18],0x0
   140033838:	cmp    edx,DWORD PTR [rbx+0x740]
   14003383e:	jb     0x140033825
   140033840:	mov    rax,QWORD PTR [rbx]
   140033843:	mov    ecx,DWORD PTR [rbx+0x740]
   140033849:	and    QWORD PTR [rbx+0x718],0x0
   140033851:	shr    rax,0x10
   140033855:	imul   rcx,rax
   140033859:	mov    eax,0x8
   14003385e:	mul    rcx
   140033861:	cmovo  rax,rdi
   140033865:	mov    rcx,rax
   140033868:	call   0x140055df0
   14003386d:	mov    rsi,QWORD PTR [rsp+0x38]
   140033872:	mov    QWORD PTR [rbx+0x10],rax
   140033876:	mov    rbx,QWORD PTR [rsp+0x30]
   14003387b:	add    rsp,0x20
   14003387f:	pop    rdi
   140033880:	ret    
   140033881:	int3   
   140033882:	int3   
   140033883:	int3   
   140033884:	rex push rbp
   140033886:	push   r12
   140033888:	push   r13
   14003388a:	push   r14
   14003388c:	push   r15
   14003388e:	lea    rbp,[rsp-0x1030]
   140033896:	mov    eax,0x1130
   14003389b:	call   0x140055f20
   1400338a0:	sub    rsp,rax
   1400338a3:	mov    QWORD PTR [rbp-0x60],0xfffffffffffffffe
   1400338ab:	mov    QWORD PTR [rsp+0x1168],rbx
   1400338b3:	mov    QWORD PTR [rsp+0x1170],rsi
   1400338bb:	mov    QWORD PTR [rsp+0x1178],rdi
   1400338c3:	mov    rax,QWORD PTR [rip+0x4e616]        # 0x140081ee0
   1400338ca:	xor    rax,rsp
   1400338cd:	mov    QWORD PTR [rbp+0x1020],rax
   1400338d4:	mov    r14,rcx
   1400338d7:	xor    r13d,r13d
   1400338da:	mov    QWORD PTR [rbp+0x10],r13
   1400338de:	mov    DWORD PTR [rbp+0x18],0x83
   1400338e5:	lea    rcx,[rbp-0x50]
   1400338e9:	call   0x1400479a4
   1400338ee:	mov    rax,QWORD PTR [r14+0x728]
   1400338f5:	lea    r12d,[r13+0x1]
   1400338f9:	mov    BYTE PTR [rax+0x7f93],r12b
   140033900:	mov    rcx,QWORD PTR [r14+0x728]
   140033907:	call   0x140020b88
   14003390c:	mov    r8,QWORD PTR [r14+0x728]
   140033913:	mov    edx,DWORD PTR [r8+0x34c4]
   14003391a:	mov    ecx,DWORD PTR [r8+0x3470]
   140033921:	add    rdx,rcx
   140033924:	add    rdx,QWORD PTR [r8+0x7f98]
   14003392b:	sub    rax,rdx
   14003392e:	mov    QWORD PTR [r8+0x34a8],rax
   140033935:	mov    rcx,QWORD PTR [r14+0x728]
   14003393c:	mov    rax,QWORD PTR [rcx]
   14003393f:	xor    r8d,r8d
   140033942:	call   QWORD PTR [rax+0x18]
   140033945:	mov    BYTE PTR [rsp+0x20],r13b
   14003394a:	xor    r9d,r9d
   14003394d:	xor    r8d,r8d
   140033950:	mov    edx,r12d
   140033953:	mov    rcx,QWORD PTR [r14+0x728]
   14003395a:	call   0x14000b340
   14003395f:	mov    rcx,QWORD PTR [r14+0x728]
   140033966:	mov    rax,QWORD PTR [rcx]
   140033969:	xor    edx,edx
   14003396b:	lea    r8d,[r13+0x2]
   14003396f:	call   QWORD PTR [rax+0x18]
   140033972:	mov    rcx,QWORD PTR [r14+0x728]
   140033979:	add    rcx,0x5848
   140033980:	mov    edx,r12d
   140033983:	call   0x140024480
   140033988:	mov    rax,QWORD PTR [r14+0x728]
   14003398f:	mov    BYTE PTR [rax+0x5858],r12b
   140033996:	mov    rcx,QWORD PTR [r14+0x728]
   14003399d:	add    rcx,0x68b8
   1400339a4:	xor    edx,edx
   1400339a6:	call   0x14002422c
   1400339ab:	mov    rax,QWORD PTR [r14+0x728]
   1400339b2:	mov    rcx,QWORD PTR [rax+0x6868]
   1400339b9:	mov    al,BYTE PTR [r14+0x758]
   1400339c0:	mov    BYTE PTR [rcx],al
   1400339c2:	mov    r8d,DWORD PTR [r14+0x73c]
   1400339c9:	imul   r8,QWORD PTR [r14+0x760]
   1400339d1:	mov    DWORD PTR [rsp+0x28],r13d
   1400339d6:	lea    rax,[rip+0x3bd93]        # 0x14006f770
   1400339dd:	mov    QWORD PTR [rsp+0x20],rax
   1400339e2:	xor    r9d,r9d
   1400339e5:	xor    edx,edx
   1400339e7:	mov    rcx,QWORD PTR [r14+0x728]
   1400339ee:	call   0x140007ce8
   1400339f3:	mov    rcx,QWORD PTR [r14+0x728]
   1400339fa:	mov    rax,QWORD PTR [rcx]
   1400339fd:	call   QWORD PTR [rax+0x20]
   140033a00:	mov    rsi,rax
   140033a03:	lea    rcx,[rsp+0x60]
   140033a08:	call   0x140036890
   140033a0d:	nop
   140033a0e:	mov    edi,r13d
   140033a11:	cmp    DWORD PTR [r14+0x740],r13d
   140033a18:	jbe    0x140033ac4
   140033a1e:	mov    ecx,edi
   140033a20:	lea    rbx,[rcx+rcx*2]
   140033a24:	shl    rbx,0x4
   140033a28:	add    rbx,QWORD PTR [r14+0x8]
   140033a2c:	mov    QWORD PTR [rbx+0x10],r13
   140033a30:	mov    edx,DWORD PTR [r14+0x738]
   140033a37:	cmp    edi,edx
   140033a39:	jae    0x140033a74
   140033a3b:	imul   rcx,QWORD PTR [r14+0x748]
   140033a43:	mov    QWORD PTR [rbx+0x8],rcx
   140033a47:	mov    r8,QWORD PTR [r14+0x750]
   140033a4e:	mov    rdx,QWORD PTR [r14+0x748]
   140033a55:	mov    rax,r8
   140033a58:	sub    rax,rcx
   140033a5b:	cmp    rdx,rax
   140033a5e:	jb     0x140033a66
   140033a60:	mov    rdx,r8
   140033a63:	sub    rdx,rcx
   140033a66:	mov    rax,rdx
   140033a69:	and    rax,r12
   140033a6c:	add    rax,rdx
   140033a6f:	mov    QWORD PTR [rbx],rax
   140033a72:	jmp    0x140033ab4
   140033a74:	mov    ecx,edi
   140033a76:	sub    ecx,edx
   140033a78:	imul   rcx,QWORD PTR [r14+0x760]
   140033a80:	add    rcx,rsi
   140033a83:	mov    QWORD PTR [rbx+0x8],rcx
   140033a87:	mov    rax,QWORD PTR [r14+0x760]
   140033a8e:	mov    QWORD PTR [rbx],rax
   140033a91:	mov    rcx,QWORD PTR [r14]
   140033a94:	add    rcx,0x10
   140033a98:	call   0x140055df0
   140033a9d:	mov    QWORD PTR [rbx+0x18],rax
   140033aa1:	mov    rcx,rax
   140033aa4:	not    rcx
   140033aa7:	add    rcx,r12
   140033aaa:	and    ecx,0xf
   140033aad:	add    rcx,rax
   140033ab0:	mov    QWORD PTR [rbx+0x20],rcx
   140033ab4:	add    edi,r12d
   140033ab7:	cmp    edi,DWORD PTR [r14+0x740]
   140033abe:	jb     0x140033a1e
   140033ac4:	mov    rcx,QWORD PTR [r14]
   140033ac7:	add    rcx,0x10
   140033acb:	call   0x140055df0
   140033ad0:	mov    QWORD PTR [r14+0x718],rax
   140033ad7:	mov    r15,rax
   140033ada:	not    r15
   140033add:	add    r15,r12
   140033ae0:	and    r15d,0xf
   140033ae4:	add    r15,rax
   140033ae7:	mov    QWORD PTR [rbp-0x68],r15
   140033aeb:	mov    QWORD PTR [rsp+0x40],r13
   140033af0:	call   0x140046bb4
   140033af5:	mov    BYTE PTR [rsp+0x38],r13b
   140033afa:	mov    QWORD PTR [rsp+0x48],r13
   140033aff:	mov    r12d,r13d
   140033b02:	mov    edi,r13d
   140033b05:	cmp    DWORD PTR [r14+0x738],r13d
   140033b0c:	jbe    0x140033c5c
   140033b12:	mov    eax,edi
   140033b14:	lea    rbx,[rax+rax*2]
   140033b18:	shl    rbx,0x4
   140033b1c:	add    rbx,QWORD PTR [r14+0x8]
   140033b20:	mov    rcx,QWORD PTR [r14+0x728]
   140033b27:	mov    rax,QWORD PTR [rcx]
   140033b2a:	mov    rdx,QWORD PTR [rbx+0x10]
   140033b2e:	add    rdx,QWORD PTR [rbx+0x8]
   140033b32:	xor    r8d,r8d
   140033b35:	call   QWORD PTR [rax+0x18]
   140033b38:	test   edi,edi
   140033b3a:	jne    0x140033b49
   140033b3c:	mov    rax,QWORD PTR [rbx+0x10]
   140033b40:	add    rax,QWORD PTR [rbx+0x8]
   140033b44:	mov    QWORD PTR [rsp+0x48],rax
   140033b49:	mov    rax,QWORD PTR [rbx]
   140033b4c:	sub    rax,QWORD PTR [rbx+0x10]
   140033b50:	cmp    QWORD PTR [r14],rax
   140033b53:	jae    0x140033b5a
   140033b55:	mov    r13d,DWORD PTR [r14]
   140033b58:	jmp    0x140033b61
   140033b5a:	mov    r13d,DWORD PTR [rbx]
   140033b5d:	sub    r13d,DWORD PTR [rbx+0x10]
   140033b61:	mov    rcx,QWORD PTR [r14+0x728]
   140033b68:	mov    rax,QWORD PTR [rcx]
   140033b6b:	mov    r8d,r13d
   140033b6e:	mov    rdx,r15
   140033b71:	call   QWORD PTR [rax+0x10]
   140033b74:	mov    esi,eax
   140033b76:	cmp    r13d,eax
   140033b79:	je     0x140033b92
   140033b7b:	mov    rdx,QWORD PTR [r14+0x728]
   140033b82:	add    rdx,0x26
   140033b86:	lea    rcx,[rip+0x60cd3]        # 0x140094860
   140033b8d:	call   0x14001be70
   140033b92:	mov    DWORD PTR [rbx+0x28],esi
   140033b95:	add    QWORD PTR [rbx+0x10],rsi
   140033b99:	mov    ecx,DWORD PTR [r14+0x738]
   140033ba0:	mov    r8d,0x1
   140033ba6:	sub    ecx,r8d
   140033ba9:	cmp    edi,ecx
   140033bab:	jne    0x140033bc9
   140033bad:	cmp    esi,r12d
   140033bb0:	jae    0x140033bc9
   140033bb2:	mov    r8d,r12d
   140033bb5:	sub    r8d,esi
   140033bb8:	lea    rcx,[rsi+r15*1]
   140033bbc:	xor    edx,edx
   140033bbe:	call   0x140058f40
   140033bc3:	mov    r8d,0x1
   140033bc9:	xor    r13d,r13d
   140033bcc:	test   edi,edi
   140033bce:	jne    0x140033bec
   140033bd0:	mov    r13d,DWORD PTR [rsp+0x38]
   140033bd5:	movzx  r13d,r13b
   140033bd9:	mov    rax,QWORD PTR [rbx]
   140033bdc:	cmp    QWORD PTR [rbx+0x10],rax
   140033be0:	cmove  r13d,r8d
   140033be4:	mov    DWORD PTR [rsp+0x38],r13d
   140033be9:	xor    r13d,r13d
   140033bec:	cmp    esi,r12d
   140033bef:	cmova  r12d,esi
   140033bf3:	mov    r9d,esi
   140033bf6:	mov    r8,r15
   140033bf9:	mov    edx,edi
   140033bfb:	mov    rcx,r14
   140033bfe:	call   0x14003349c
   140033c03:	mov    r9d,r12d
   140033c06:	mov    r8,r15
   140033c09:	mov    edx,edi
   140033c0b:	mov    rcx,r14
   140033c0e:	call   0x14003359c
   140033c13:	mov    rbx,QWORD PTR [rsp+0x40]
   140033c18:	add    rbx,rsi
   140033c1b:	mov    QWORD PTR [rsp+0x40],rbx
   140033c20:	mov    rax,QWORD PTR [r14+0x728]
   140033c27:	mov    rcx,QWORD PTR [rax+0x22b0]
   140033c2e:	cmp    BYTE PTR [rcx+0x6150],r13b
   140033c35:	jne    0x140033c4d
   140033c37:	mov    r8,QWORD PTR [r14+0x750]
   140033c3e:	mov    rdx,rbx
   140033c41:	lea    rcx,[rip+0x3bb30]        # 0x14006f778
   140033c48:	call   0x140048840
   140033c4d:	inc    edi
   140033c4f:	cmp    edi,DWORD PTR [r14+0x738]
   140033c56:	jb     0x140033b12
   140033c5c:	mov    DWORD PTR [rsp+0x34],r13d
   140033c61:	cmp    DWORD PTR [r14+0x73c],r13d
   140033c68:	jbe    0x140033f0d
   140033c6e:	mov    r15d,r13d
   140033c71:	mov    ebx,r15d
   140033c74:	mov    QWORD PTR [rbp-0x70],rbx
   140033c78:	mov    eax,DWORD PTR [r14+0x738]
   140033c7f:	add    rax,rbx
   140033c82:	lea    r13,[rax+rax*2]
   140033c86:	shl    r13,0x4
   140033c8a:	add    r13,QWORD PTR [r14+0x8]
   140033c8e:	mov    rcx,QWORD PTR [r14+0x728]
   140033c95:	mov    rax,QWORD PTR [rcx]
   140033c98:	mov    rdx,QWORD PTR [r13+0x8]
   140033c9c:	add    rdx,QWORD PTR [r13+0x10]
   140033ca0:	xor    r8d,r8d
   140033ca3:	call   QWORD PTR [rax+0x18]
   140033ca6:	xor    ecx,ecx
   140033ca8:	mov    QWORD PTR [rsp+0x58],rcx
   140033cad:	xor    edi,edi
   140033caf:	mov    DWORD PTR [rsp+0x3c],edi
   140033cb3:	xor    esi,esi
   140033cb5:	mov    DWORD PTR [rsp+0x30],esi
   140033cb9:	test   r12d,r12d
   140033cbc:	je     0x140033ee8
   140033cc2:	mov    r15,QWORD PTR [rsp+0x48]
   140033cc7:	lea    rcx,[rsp+0x60]
   140033ccc:	call   0x140036b98
   140033cd1:	xor    edx,edx
   140033cd3:	lea    rcx,[rsp+0x60]
   140033cd8:	call   0x1400369f8
   140033cdd:	mov    edx,0x1
   140033ce2:	lea    rcx,[rsp+0x60]
   140033ce7:	call   0x140036970
   140033cec:	xor    edx,edx
   140033cee:	lea    rcx,[rsp+0x60]
   140033cf3:	call   0x140036970
   140033cf8:	mov    eax,esi
   140033cfa:	mov    QWORD PTR [rsp+0x50],rax
   140033cff:	lea    rdx,[rsi+r15*1]
   140033d03:	lea    rcx,[rsp+0x60]
   140033d08:	call   0x140036a7c
   140033d0d:	mov    eax,DWORD PTR [r14+0x738]
   140033d14:	dec    eax
   140033d16:	lea    rcx,[rax+rax*2]
   140033d1a:	add    rcx,rcx
   140033d1d:	mov    rax,QWORD PTR [r14+0x8]
   140033d21:	mov    edx,DWORD PTR [rax+rcx*8+0x28]
   140033d25:	sub    edx,esi
   140033d27:	mov    eax,0x10000
   140033d2c:	cmp    edx,eax
   140033d2e:	cmova  edx,eax
   140033d31:	lea    rcx,[rsp+0x60]
   140033d36:	call   0x1400369f8
   140033d3b:	mov    rdx,QWORD PTR [r14+0x750]
   140033d42:	lea    rcx,[rsp+0x60]
   140033d47:	call   0x140036a7c
   140033d4c:	mov    rdx,QWORD PTR [r14+0x748]
   140033d53:	lea    rcx,[rsp+0x60]
   140033d58:	call   0x140036a7c
   140033d5d:	mov    rdx,QWORD PTR [r14+0x760]
   140033d64:	lea    rcx,[rsp+0x60]
   140033d69:	call   0x140036a7c
   140033d6e:	mov    edx,DWORD PTR [r14+0x738]
   140033d75:	lea    rcx,[rsp+0x60]
   140033d7a:	call   0x1400369a8
   140033d7f:	mov    edx,DWORD PTR [r14+0x73c]
   140033d86:	lea    rcx,[rsp+0x60]
   140033d8b:	call   0x1400369a8
   140033d90:	mov    rdx,rbx
   140033d93:	lea    rcx,[rsp+0x60]
   140033d98:	call   0x1400369a8
   140033d9d:	xor    ebx,ebx
   140033d9f:	cmp    DWORD PTR [r14+0x738],ebx
   140033da6:	jbe    0x140033dd1
   140033da8:	mov    eax,edi
   140033daa:	imul   eax,DWORD PTR [r14+0x740]
   140033db2:	add    eax,ebx
   140033db4:	mov    rdx,QWORD PTR [r14+0x10]
   140033db8:	mov    rdx,QWORD PTR [rdx+rax*8]
   140033dbc:	lea    rcx,[rsp+0x60]
   140033dc1:	call   0x140036a7c
   140033dc6:	inc    ebx
   140033dc8:	cmp    ebx,DWORD PTR [r14+0x738]
   140033dcf:	jb     0x140033da8
   140033dd1:	mov    DWORD PTR [rbp+0x20],0x7d42527b
   140033dd8:	mov    r8d,0xff0
   140033dde:	lea    rdx,[rbp+0x30]
   140033de2:	lea    rcx,[rsp+0x60]
   140033de7:	call   0x140036934
   140033dec:	lea    esi,[rax+0x10]
   140033def:	mov    DWORD PTR [rbp+0x30],esi
   140033df2:	mov    ecx,r12d
   140033df5:	sub    ecx,DWORD PTR [rsp+0x30]
   140033df9:	mov    eax,0x10000
   140033dfe:	mov    ebx,eax
   140033e00:	cmp    ecx,eax
   140033e02:	cmovb  ebx,ecx
   140033e05:	lea    edi,[rbx+rsi*1]
   140033e08:	mov    DWORD PTR [rbp+0x2c],edi
   140033e0b:	lea    r8d,[rsi-0xc]
   140033e0f:	lea    rdx,[rbp+0x2c]
   140033e13:	or     rcx,0xffffffffffffffff
   140033e17:	call   0x140017bec
   140033e1c:	mov    rdx,QWORD PTR [rsp+0x50]
   140033e21:	add    rdx,QWORD PTR [r13+0x20]
   140033e25:	mov    r8d,ebx
   140033e28:	mov    rcx,rax
   140033e2b:	call   0x140017bec
   140033e30:	mov    rdx,rax
   140033e33:	not    rdx
   140033e36:	mov    BYTE PTR [rbp+0x24],dl
   140033e39:	mov    rcx,rdx
   140033e3c:	shr    rcx,0x8
   140033e40:	mov    BYTE PTR [rbp+0x25],cl
   140033e43:	mov    rcx,rdx
   140033e46:	shr    rcx,0x10
   140033e4a:	mov    BYTE PTR [rbp+0x26],cl
   140033e4d:	mov    rcx,rdx
   140033e50:	shr    rcx,0x18
   140033e54:	mov    BYTE PTR [rbp+0x27],cl
   140033e57:	mov    rcx,rdx
   140033e5a:	shr    rcx,0x20
   140033e5e:	mov    BYTE PTR [rbp+0x28],cl
   140033e61:	mov    rax,rdx
   140033e64:	shr    rax,0x28
   140033e68:	mov    BYTE PTR [rbp+0x29],al
   140033e6b:	mov    rax,rdx
   140033e6e:	shr    rax,0x30
   140033e72:	mov    BYTE PTR [rbp+0x2a],al
   140033e75:	shr    rdx,0x38
   140033e79:	mov    BYTE PTR [rbp+0x2b],dl
   140033e7c:	mov    r8d,esi
   140033e7f:	lea    rdx,[rbp+0x20]
   140033e83:	mov    rcx,QWORD PTR [r14+0x728]
   140033e8a:	call   0x1400212ac
   140033e8f:	mov    rdx,QWORD PTR [rsp+0x50]
   140033e94:	add    rdx,QWORD PTR [r13+0x20]
   140033e98:	mov    r8d,ebx
   140033e9b:	mov    rcx,QWORD PTR [r14+0x728]
   140033ea2:	call   0x1400212ac
   140033ea7:	mov    eax,edi
   140033ea9:	mov    rcx,QWORD PTR [rsp+0x58]
   140033eae:	add    rcx,rax
   140033eb1:	mov    QWORD PTR [rsp+0x58],rcx
   140033eb6:	mov    esi,DWORD PTR [rsp+0x30]
   140033eba:	mov    eax,0x10000
   140033ebf:	add    esi,eax
   140033ec1:	mov    DWORD PTR [rsp+0x30],esi
   140033ec5:	mov    edi,DWORD PTR [rsp+0x3c]
   140033ec9:	mov    eax,0x1
   140033ece:	add    edi,eax
   140033ed0:	mov    DWORD PTR [rsp+0x3c],edi
   140033ed4:	cmp    esi,r12d
   140033ed7:	mov    rbx,QWORD PTR [rbp-0x70]
   140033edb:	jb     0x140033cc7
   140033ee1:	mov    r15d,DWORD PTR [rsp+0x34]
   140033ee6:	jmp    0x140033eed
   140033ee8:	mov    eax,0x1
   140033eed:	add    QWORD PTR [r13+0x10],rcx
   140033ef1:	add    r15d,eax
   140033ef4:	mov    DWORD PTR [rsp+0x34],r15d
   140033ef9:	cmp    r15d,DWORD PTR [r14+0x73c]
   140033f00:	jb     0x140033c71
   140033f06:	mov    r15,QWORD PTR [rbp-0x68]
   140033f0a:	xor    r13d,r13d
   140033f0d:	cmp    BYTE PTR [rsp+0x38],r13b
   140033f12:	je     0x140033af0
   140033f18:	and    QWORD PTR [rbp+0x10],0x0
   140033f1d:	mov    DWORD PTR [rbp+0x18],0x84
   140033f24:	lea    rcx,[rbp-0x50]
   140033f28:	call   0x1400479a4
   140033f2d:	nop
   140033f2e:	mov    rcx,QWORD PTR [rsp+0x60]
   140033f33:	test   rcx,rcx
   140033f36:	je     0x140033f3d
   140033f38:	call   0x14005a938
   140033f3d:	mov    rcx,QWORD PTR [rbp+0x1020]
   140033f44:	xor    rcx,rsp
   140033f47:	call   0x140055f90
   140033f4c:	lea    r11,[rsp+0x1130]
   140033f54:	mov    rbx,QWORD PTR [r11+0x38]
   140033f58:	mov    rsi,QWORD PTR [r11+0x40]
   140033f5c:	mov    rdi,QWORD PTR [r11+0x48]
   140033f60:	mov    rsp,r11
   140033f63:	pop    r15
   140033f65:	pop    r14
   140033f67:	pop    r13
   140033f69:	pop    r12
   140033f6b:	pop    rbp
   140033f6c:	ret    
   140033f6d:	int3   
   140033f6e:	int3   
   140033f6f:	int3   
   140033f70:	mov    rdx,rcx
   140033f73:	mov    rcx,QWORD PTR [rcx]
   140033f76:	jmp    0x1400333e8
   140033f7b:	int3   
   140033f7c:	mov    rdx,rcx
   140033f7f:	mov    rcx,QWORD PTR [rcx]
   140033f82:	jmp    0x140033420
   140033f87:	int3   
   140033f88:	test   edx,edx
   140033f8a:	je     0x140033ff7
   140033f8c:	sub    rsp,0x7a8
   140033f93:	mov    rax,QWORD PTR [rip+0x4df46]        # 0x140081ee0
   140033f9a:	xor    rax,rsp
   140033f9d:	mov    QWORD PTR [rsp+0x790],rax
   140033fa5:	mov    eax,DWORD PTR [rcx+0x7f88]
   140033fab:	cmp    eax,0x2
   140033fae:	jne    0x140033fb7
   140033fb0:	call   0x140033ff8
   140033fb5:	jmp    0x140033fe0
   140033fb7:	cmp    eax,0x3
   140033fba:	jne    0x140033fe0
   140033fbc:	mov    r8d,edx
   140033fbf:	mov    rdx,rcx
   140033fc2:	lea    rcx,[rsp+0x20]
   140033fc7:	call   0x140033784
   140033fcc:	lea    rcx,[rsp+0x20]
   140033fd1:	call   0x140033884
   140033fd6:	lea    rcx,[rsp+0x20]
   140033fdb:	call   0x140033338
   140033fe0:	mov    rcx,QWORD PTR [rsp+0x790]
   140033fe8:	xor    rcx,rsp
   140033feb:	call   0x140055f90
   140033ff0:	add    rsp,0x7a8
   140033ff7:	ret    
   140033ff8:	rex push rbp
   140033ffa:	push   rsi
   140033ffb:	push   rdi
   140033ffc:	push   r12
   140033ffe:	push   r13
   140034000:	push   r14
   140034002:	push   r15
   140034004:	lea    rbp,[rsp-0x1240]
   14003400c:	mov    eax,0x1340
   140034011:	call   0x140055f20
   140034016:	sub    rsp,rax
   140034019:	mov    QWORD PTR [rsp+0x70],0xfffffffffffffffe
   140034022:	mov    QWORD PTR [rsp+0x1390],rbx
   14003402a:	mov    rax,QWORD PTR [rip+0x4deaf]        # 0x140081ee0
   140034031:	xor    rax,rsp
   140034034:	mov    QWORD PTR [rbp+0x1230],rax
   14003403b:	mov    ebx,edx
   14003403d:	mov    rdi,rcx
   140034040:	xor    r13d,r13d
   140034043:	mov    QWORD PTR [rbp+0x20],r13
   140034047:	mov    DWORD PTR [rbp+0x28],0x83
   14003404e:	lea    rcx,[rbp-0x40]
   140034052:	call   0x1400479a4
   140034057:	mov    rax,QWORD PTR [rdi+0x22b0]
   14003405e:	mov    QWORD PTR [rsp+0x40],rax
   140034063:	mov    BYTE PTR [rdi+0x7f93],0x1
   14003406a:	mov    rax,QWORD PTR [rdi]
   14003406d:	mov    edx,DWORD PTR [rdi+0x3470]
   140034073:	add    rdx,QWORD PTR [rdi+0x7f98]
   14003407a:	xor    r8d,r8d
   14003407d:	mov    rcx,rdi
   140034080:	call   QWORD PTR [rax+0x18]
   140034083:	mov    BYTE PTR [rsp+0x20],r13b
   140034088:	xor    r9d,r9d
   14003408b:	xor    r8d,r8d
   14003408e:	lea    edx,[r13+0x1]
   140034092:	mov    rcx,rdi
   140034095:	call   0x14000b340
   14003409a:	mov    rax,QWORD PTR [rdi]
   14003409d:	lea    r14d,[r13+0x2]
   1400340a1:	mov    r8d,r14d
   1400340a4:	xor    edx,edx
   1400340a6:	mov    rcx,rdi
   1400340a9:	call   QWORD PTR [rax+0x18]
   1400340ac:	mov    rax,QWORD PTR [rdi]
   1400340af:	mov    rcx,rdi
   1400340b2:	call   QWORD PTR [rax+0x20]
   1400340b5:	mov    rsi,rax
   1400340b8:	mov    QWORD PTR [rsp+0x38],rax
   1400340bd:	mov    rdx,rax
   1400340c0:	mov    ecx,ebx
   1400340c2:	call   0x140034594
   1400340c7:	mov    ebx,eax
   1400340c9:	mov    DWORD PTR [rsp+0x34],eax
   1400340cd:	mov    r12d,r13d
   1400340d0:	lea    rcx,[rdi+0x5848]
   1400340d7:	lea    edx,[r13+0x14]
   1400340db:	call   0x140024480
   1400340e0:	mov    BYTE PTR [rdi+0x5858],0x1
   1400340e7:	lea    rcx,[rdi+0x68b8]
   1400340ee:	mov    edx,r14d
   1400340f1:	call   0x14002422c
   1400340f6:	mov    DWORD PTR [rsp+0x28],r13d
   1400340fb:	lea    rax,[rip+0x3b682]        # 0x14006f784
   140034102:	mov    QWORD PTR [rsp+0x20],rax
   140034107:	xor    r9d,r9d
   14003410a:	xor    r8d,r8d
   14003410d:	xor    edx,edx
   14003410f:	mov    rcx,rdi
   140034112:	call   0x140007ce8
   140034117:	mov    rax,QWORD PTR [rdi]
   14003411a:	xor    r8d,r8d
   14003411d:	xor    edx,edx
   14003411f:	mov    rcx,rdi
   140034122:	call   QWORD PTR [rax+0x18]
   140034125:	mov    r15d,r13d
   140034128:	mov    r14d,r13d
   14003412b:	mov    QWORD PTR [rsp+0x50],r13
   140034130:	mov    QWORD PTR [rsp+0x58],r13
   140034135:	mov    QWORD PTR [rsp+0x60],r13
   14003413a:	mov    QWORD PTR [rsp+0x68],r13
   14003413f:	mov    eax,ebx
   140034141:	shl    eax,0x9
   140034144:	cdqe   
   140034146:	mov    QWORD PTR [rsp+0x48],rax
   14003414b:	mov    rdx,rax
   14003414e:	lea    rcx,[rsp+0x50]
   140034153:	call   0x1400079a4
   140034158:	nop
   140034159:	mov    r8,QWORD PTR [rsp+0x58]
   14003415e:	xor    edx,edx
   140034160:	mov    r13,QWORD PTR [rsp+0x50]
   140034165:	mov    rcx,r13
   140034168:	call   0x140058f40
   14003416d:	mov    DWORD PTR [rsp+0x30],0xfffffff
   140034175:	jmp    0x1400342bc
   14003417a:	call   0x140046bb4
   14003417f:	cmp    rsi,0x200
   140034186:	jae    0x1400341a8
   140034188:	mov    ebx,esi
   14003418a:	movsxd rax,esi
   14003418d:	mov    r8d,0x200
   140034193:	sub    r8,rax
   140034196:	lea    rcx,[rbp+0x30]
   14003419a:	add    rcx,rax
   14003419d:	xor    edx,edx
   14003419f:	call   0x140058f40
   1400341a4:	xor    esi,esi
   1400341a6:	jmp    0x1400341b0
   1400341a8:	mov    ebx,0x200
   1400341ad:	sub    rsi,rbx
   1400341b0:	mov    rax,QWORD PTR [rdi]
   1400341b3:	movsxd r8,ebx
   1400341b6:	lea    rdx,[rbp+0x30]
   1400341ba:	mov    rcx,rdi
   1400341bd:	call   QWORD PTR [rax+0x10]
   1400341c0:	mov    ecx,r15d
   1400341c3:	shl    ecx,0x9
   1400341c6:	add    rcx,r13
   1400341c9:	lea    rdx,[rbp+0x30]
   1400341cd:	sub    rdx,rcx
   1400341d0:	mov    r8d,0x200
   1400341d6:	mov    al,BYTE PTR [rdx+rcx*1]
   1400341d9:	xor    BYTE PTR [rcx],al
   1400341db:	inc    rcx
   1400341de:	sub    r8,0x1
   1400341e2:	jne    0x1400341d6
   1400341e4:	mov    r8d,0x200
   1400341ea:	lea    rdx,[rbp+0x30]
   1400341ee:	or     ecx,0xffffffff
   1400341f1:	call   0x140017ac0
   1400341f6:	mov    ecx,r14d
   1400341f9:	mov    BYTE PTR [rbp+rcx*1+0x230],al
   140034200:	inc    r14d
   140034203:	shr    eax,0x8
   140034206:	mov    BYTE PTR [rbp+r14*1+0x230],al
   14003420e:	inc    r14d
   140034211:	cmp    r14d,0x1000
   140034218:	jne    0x140034281
   14003421a:	mov    QWORD PTR [rsp+0x78],rdi
   14003421f:	mov    rax,QWORD PTR [rdi]
   140034222:	mov    rcx,rdi
   140034225:	call   QWORD PTR [rax+0x20]
   140034228:	mov    rbx,rax
   14003422b:	mov    QWORD PTR [rbp-0x80],rax
   14003422f:	mov    r9,QWORD PTR [rdi]
   140034232:	xor    edx,edx
   140034234:	lea    r8d,[rdx+0x2]
   140034238:	mov    rcx,rdi
   14003423b:	call   QWORD PTR [r9+0x18]
   14003423f:	mov    r14d,0x1000
   140034245:	mov    r8d,r14d
   140034248:	lea    rdx,[rbp+0x230]
   14003424f:	mov    rcx,rdi
   140034252:	call   0x1400212ac
   140034257:	mov    r8d,r14d
   14003425a:	lea    rdx,[rbp+0x230]
   140034261:	mov    ecx,DWORD PTR [rsp+0x30]
   140034265:	call   0x140017ac0
   14003426a:	mov    DWORD PTR [rsp+0x30],eax
   14003426e:	xor    r14d,r14d
   140034271:	mov    rax,QWORD PTR [rdi]
   140034274:	xor    r8d,r8d
   140034277:	mov    rdx,rbx
   14003427a:	mov    rcx,rdi
   14003427d:	call   QWORD PTR [rax+0x18]
   140034280:	nop
   140034281:	test   r12b,r12b
   140034284:	jne    0x1400342ac
   140034286:	mov    rax,QWORD PTR [rsp+0x40]
   14003428b:	cmp    BYTE PTR [rax+0x6150],r12b
   140034292:	jne    0x1400342ac
   140034294:	mov    rdx,r12
   140034297:	shl    rdx,0x9
   14003429b:	mov    r8,QWORD PTR [rsp+0x38]
   1400342a0:	lea    rcx,[rip+0x3b4e5]        # 0x14006f78c
   1400342a7:	call   0x140048840
   1400342ac:	inc    r12
   1400342af:	inc    r15d
   1400342b2:	cmp    r15d,DWORD PTR [rsp+0x34]
   1400342b7:	sbb    eax,eax
   1400342b9:	and    r15d,eax
   1400342bc:	test   rsi,rsi
   1400342bf:	jg     0x14003417a
   1400342c5:	mov    rax,QWORD PTR [rdi]
   1400342c8:	mov    r15d,0x2
   1400342ce:	mov    r8d,r15d
   1400342d1:	xor    edx,edx
   1400342d3:	mov    rcx,rdi
   1400342d6:	call   QWORD PTR [rax+0x18]
   1400342d9:	mov    r8d,r14d
   1400342dc:	lea    rdx,[rbp+0x230]
   1400342e3:	mov    rcx,rdi
   1400342e6:	call   0x1400212ac
   1400342eb:	mov    r8d,r14d
   1400342ee:	lea    rdx,[rbp+0x230]
   1400342f5:	mov    ecx,DWORD PTR [rsp+0x30]
   1400342f9:	call   0x140017ac0
   1400342fe:	mov    ebx,eax
   140034300:	mov    rsi,QWORD PTR [rsp+0x48]
   140034305:	mov    r8,rsi
   140034308:	mov    rdx,r13
   14003430b:	mov    rcx,rdi
   14003430e:	call   0x1400212ac
   140034313:	mov    r8,rsi
   140034316:	mov    rdx,r13
   140034319:	mov    ecx,ebx
   14003431b:	call   0x140017ac0
   140034320:	mov    DWORD PTR [rdi+0x68b8],r15d
   140034327:	not    eax
   140034329:	mov    DWORD PTR [rdi+0x68bc],eax
   14003432f:	mov    rax,QWORD PTR [rdi]
   140034332:	xor    r8d,r8d
   140034335:	mov    rdx,QWORD PTR [rsp+0x38]
   14003433a:	mov    rcx,rdi
   14003433d:	call   QWORD PTR [rax+0x18]
   140034340:	lea    rcx,[rbp-0x78]
   140034344:	call   0x140036890
   140034349:	nop
   14003434a:	lea    r8d,[r15+0x6]
   14003434e:	lea    rdx,[rip+0x3b43b]        # 0x14006f790
   140034355:	lea    rcx,[rbp-0x78]
   140034359:	call   0x140036aac
   14003435e:	movsxd rdx,DWORD PTR [rsp+0x34]
   140034363:	lea    rcx,[rbp-0x78]
   140034367:	call   0x1400369f8
   14003436c:	mov    rdx,r12
   14003436f:	lea    rcx,[rbp-0x78]
   140034373:	call   0x140036a7c
   140034378:	lea    rdx,[rdi+0x6868]
   14003437f:	lea    rcx,[rbp-0x78]
   140034383:	call   0x1400368c8
   140034388:	lea    r8,[rsi+r12*2]
   14003438c:	xor    ebx,ebx
   14003438e:	mov    DWORD PTR [rsp+0x28],ebx
   140034392:	lea    rax,[rip+0x3b403]        # 0x14006f79c
   140034399:	mov    QWORD PTR [rsp+0x20],rax
   14003439e:	xor    r9d,r9d
   1400343a1:	xor    edx,edx
   1400343a3:	mov    rcx,rdi
   1400343a6:	call   0x140007ce8
   1400343ab:	mov    rax,QWORD PTR [rdi]
   1400343ae:	mov    r8d,r15d
   1400343b1:	xor    edx,edx
   1400343b3:	mov    rcx,rdi
   1400343b6:	call   QWORD PTR [rax+0x18]
   1400343b9:	mov    rax,QWORD PTR [rsp+0x40]
   1400343be:	cmp    BYTE PTR [rax+0x6150],bl
   1400343c4:	jne    0x1400343d2
   1400343c6:	lea    rcx,[rip+0x3b3db]        # 0x14006f7a8
   1400343cd:	call   0x14001796c
   1400343d2:	mov    QWORD PTR [rbp+0x20],rbx
   1400343d6:	mov    DWORD PTR [rbp+0x28],0x84
   1400343dd:	lea    rcx,[rbp-0x40]
   1400343e1:	call   0x1400479a4
   1400343e6:	nop
   1400343e7:	mov    rcx,QWORD PTR [rbp-0x78]
   1400343eb:	test   rcx,rcx
   1400343ee:	je     0x1400343f6
   1400343f0:	call   0x14005a938
   1400343f5:	nop
   1400343f6:	test   r13,r13
   1400343f9:	je     0x140034403
   1400343fb:	mov    rcx,r13
   1400343fe:	call   0x14005a938
   140034403:	mov    rcx,QWORD PTR [rbp+0x1230]
   14003440a:	xor    rcx,rsp
   14003440d:	call   0x140055f90
   140034412:	mov    rbx,QWORD PTR [rsp+0x1390]
   14003441a:	add    rsp,0x1340
   140034421:	pop    r15
   140034423:	pop    r14
   140034425:	pop    r13
   140034427:	pop    r12
   140034429:	pop    rdi
   14003442a:	pop    rsi
   14003442b:	pop    rbp
   14003442c:	ret    
   14003442d:	int3   
   14003442e:	int3   
   14003442f:	int3   
   140034430:	mov    QWORD PTR [rsp+0x8],rbx
   140034435:	mov    QWORD PTR [rsp+0x10],rsi
   14003443a:	mov    QWORD PTR [rsp+0x18],rdi
   14003443f:	mov    rdi,r8
   140034442:	mov    eax,edx
   140034444:	cdq    
   140034445:	mov    ebx,0x0
   14003444a:	mov    r9d,eax
   14003444d:	mov    r11,rcx
   140034450:	xor    r9d,edx
   140034453:	mov    eax,0x64
   140034458:	sub    r9d,edx
   14003445b:	cmp    r9d,eax
   14003445e:	lea    esi,[rbx+0x1]
   140034461:	cmova  r9d,eax
   140034465:	mov    eax,0xc8
   14003446a:	mov    DWORD PTR [rcx+0x758],r9d
   140034471:	add    r9d,r9d
   140034474:	test   r8,0x3ff
   14003447b:	mov    DWORD PTR [rcx+0x738],eax
   140034481:	mov    r8d,ebx
   140034484:	mov    DWORD PTR [rcx+0x73c],r9d
   14003448b:	setne  r8b
   14003448f:	mov    rcx,rdi
   140034492:	shr    rcx,0xa
   140034496:	add    r8,rcx
   140034499:	cmove  r8,rsi
   14003449d:	cmp    r8,rax
   1400344a0:	jae    0x1400344d2
   1400344a2:	xor    edx,edx
   1400344a4:	mov    DWORD PTR [r11+0x738],r8d
   1400344ab:	div    r8d
   1400344ae:	xor    edx,edx
   1400344b0:	mov    ecx,eax
   1400344b2:	mov    eax,r9d
   1400344b5:	div    ecx
   1400344b7:	mov    ecx,eax
   1400344b9:	mov    eax,0xcccccccd
   1400344be:	shl    ecx,0x2
   1400344c1:	mul    ecx
   1400344c3:	shr    edx,0x2
   1400344c6:	test   edx,edx
   1400344c8:	cmove  edx,esi
   1400344cb:	mov    DWORD PTR [r11+0x73c],edx
   1400344d2:	mov    r10d,DWORD PTR [r11+0x738]
   1400344d9:	mov    rcx,rbx
   1400344dc:	mov    eax,DWORD PTR [r11+0x73c]
   1400344e3:	cmp    eax,r10d
   1400344e6:	cmova  eax,r10d
   1400344ea:	xor    edx,edx
   1400344ec:	mov    DWORD PTR [r11+0x73c],eax
   1400344f3:	mov    r8d,eax
   1400344f6:	add    eax,r10d
   1400344f9:	mov    DWORD PTR [r11+0x740],eax
   140034500:	mov    rax,rdi
   140034503:	mov    rdi,QWORD PTR [rsp+0x18]
   140034508:	div    r10
   14003450b:	test   rdx,rdx
   14003450e:	setne  cl
   140034511:	lea    rdx,[rcx+rax*1]
   140034515:	mov    eax,0x10000000
   14003451a:	mov    r9,rdx
   14003451d:	and    r9,rsi
   140034520:	mov    rsi,QWORD PTR [rsp+0x10]
   140034525:	add    r9,rdx
   140034528:	xor    edx,edx
   14003452a:	div    r8
   14003452d:	mov    rdx,r9
   140034530:	mov    QWORD PTR [r11+0x748],r9
   140034537:	lea    rcx,[r9+0x10000]
   14003453e:	cmp    rax,rcx
   140034541:	cmova  rax,rcx
   140034545:	movzx  ecx,ax
   140034548:	sub    rax,rcx
   14003454b:	mov    ecx,0x10000
   140034550:	cmp    rax,rcx
   140034553:	cmovb  rax,rcx
   140034557:	test   r9w,r9w
   14003455b:	mov    QWORD PTR [r11],rax
   14003455e:	lea    eax,[r10*8+0x40]
   140034566:	setne  bl
   140034569:	mov    ecx,eax
   14003456b:	shr    rdx,0x10
   14003456f:	add    rdx,rbx
   140034572:	mov    DWORD PTR [r11+0x75c],eax
   140034579:	mov    rbx,QWORD PTR [rsp+0x8]
   14003457e:	imul   rcx,rdx
   140034582:	mov    QWORD PTR [r11+0x768],rdx
   140034589:	add    rcx,r9
   14003458c:	mov    QWORD PTR [r11+0x760],rcx
   140034593:	ret    
   140034594:	movsxd r8,ecx
   140034597:	mov    r9,rdx
   14003459a:	test   ecx,ecx
   14003459c:	jns    0x1400345cf
   14003459e:	mov    eax,0xfffffffc
   1400345a3:	lea    ecx,[rcx+rcx*4]
   1400345a6:	add    ecx,ecx
   1400345a8:	sub    eax,ecx
   1400345aa:	movsxd r8,eax
   1400345ad:	movabs rax,0x624dd2f1a9fbe77
   1400345b7:	imul   r8,r9
   1400345bb:	mul    r8
   1400345be:	sub    r8,rdx
   1400345c1:	shr    r8,1
   1400345c4:	add    r8,rdx
   1400345c7:	shr    r8,0x12
   1400345cb:	add    r8,0x2
   1400345cf:	mov    rax,r8
   1400345d2:	shl    rax,0x9
   1400345d6:	cmp    r9,rax
   1400345d9:	jae    0x1400345e5
   1400345db:	mov    r8,r9
   1400345de:	shr    r8,0x9
   1400345e2:	inc    r8
   1400345e5:	cmp    r8,0x4
   1400345e9:	jbe    0x1400345ef
   1400345eb:	or     r8,0x1
   1400345ef:	mov    eax,0x80000
   1400345f4:	cmp    r8,rax
   1400345f7:	cmova  r8,rax
   1400345fb:	mov    eax,r8d
   1400345fe:	ret    
   1400345ff:	int3   
   140034600:	xor    eax,eax
   140034602:	mov    DWORD PTR [rcx+0x14],0x20
   140034609:	mov    QWORD PTR [rcx],rax
   14003460c:	mov    QWORD PTR [rcx+0x20],rax
   140034610:	mov    QWORD PTR [rcx+0x18],rax
   140034614:	mov    DWORD PTR [rcx+0x10],eax
   140034617:	mov    rax,rcx
   14003461a:	ret    
   14003461b:	int3   
   14003461c:	sub    rsp,0x28
   140034620:	mov    rcx,QWORD PTR [rcx+0x18]
   140034624:	test   rcx,rcx
   140034627:	je     0x14003462e
   140034629:	call   0x14005a938
   14003462e:	add    rsp,0x28
   140034632:	ret    
   140034633:	int3   
   140034634:	mov    QWORD PTR [rsp+0x8],rbx
   140034639:	mov    QWORD PTR [rsp+0x10],rsi
   14003463e:	push   rdi
   14003463f:	sub    rsp,0x20
   140034643:	mov    rbx,rcx
   140034646:	mov    edi,edx
   140034648:	cmp    edx,DWORD PTR [rcx+0x24]
   14003464b:	je     0x140034673
   14003464d:	mov    rcx,QWORD PTR [rcx+0x18]
   140034651:	mov    edx,edi
   140034653:	call   0x14005a940
   140034658:	mov    rsi,rax
   14003465b:	test   rax,rax
   14003465e:	jne    0x14003466c
   140034660:	lea    rcx,[rip+0x601f9]        # 0x140094860
   140034667:	call   0x14001bd24
   14003466c:	mov    QWORD PTR [rbx+0x18],rsi
   140034670:	mov    DWORD PTR [rbx+0x24],edi
   140034673:	mov    rbx,QWORD PTR [rsp+0x30]
   140034678:	mov    rsi,QWORD PTR [rsp+0x38]
   14003467d:	add    rsp,0x20
   140034681:	pop    rdi
   140034682:	ret    
   140034683:	int3   
   140034684:	rex push rbx
   140034686:	sub    rsp,0x20
   14003468a:	mov    r8d,DWORD PTR [rcx+0x20]
   14003468e:	mov    rbx,rcx
   140034691:	mov    rdx,QWORD PTR [rcx+0x18]
   140034695:	mov    rcx,QWORD PTR [rcx+0x8]
   140034699:	call   QWORD PTR [rbx]
   14003469b:	and    DWORD PTR [rbx+0x20],0x0
   14003469f:	add    rsp,0x20
   1400346a3:	pop    rbx
   1400346a4:	ret    
   1400346a5:	int3   
   1400346a6:	int3   
   1400346a7:	int3   
   1400346a8:	mov    QWORD PTR [rsp+0x8],rbx
   1400346ad:	mov    QWORD PTR [rsp+0x10],rsi
   1400346b2:	push   rdi
   1400346b3:	sub    rsp,0x20
   1400346b7:	mov    eax,DWORD PTR [rcx+0x14]
   1400346ba:	mov    edi,0x8
   1400346bf:	and    eax,0x7
   1400346c2:	mov    rbx,rcx
   1400346c5:	sub    edi,eax
   1400346c7:	cmp    DWORD PTR [rcx+0x14],0x20
   1400346cb:	jae    0x140034719
   1400346cd:	mov    eax,DWORD PTR [rbx+0x24]
   1400346d0:	movzx  esi,BYTE PTR [rbx+0x13]
   1400346d4:	cmp    DWORD PTR [rbx+0x20],eax
   1400346d7:	jne    0x1400346fd
   1400346d9:	cmp    QWORD PTR [rbx],0x0
   1400346dd:	je     0x1400346e9
   1400346df:	mov    rcx,rbx
   1400346e2:	call   0x140034684
   1400346e7:	jmp    0x1400346fd
   1400346e9:	mov    edx,0x1000
   1400346ee:	test   eax,eax
   1400346f0:	je     0x1400346f5
   1400346f2:	lea    edx,[rax+rax*1]
   1400346f5:	mov    rcx,rbx
   1400346f8:	call   0x140034634
   1400346fd:	mov    edx,DWORD PTR [rbx+0x20]
   140034700:	mov    rcx,QWORD PTR [rbx+0x18]
   140034704:	mov    BYTE PTR [rdx+rcx*1],sil
   140034708:	inc    DWORD PTR [rbx+0x20]
   14003470b:	add    DWORD PTR [rbx+0x14],0x8
   14003470f:	shl    DWORD PTR [rbx+0x10],0x8
   140034713:	cmp    DWORD PTR [rbx+0x14],0x20
   140034717:	jb     0x1400346cd
   140034719:	mov    rsi,QWORD PTR [rsp+0x38]
   14003471e:	mov    eax,edi
   140034720:	mov    DWORD PTR [rbx+0x14],0x20
   140034727:	mov    rbx,QWORD PTR [rsp+0x30]
   14003472c:	add    rsp,0x20
   140034730:	pop    rdi
   140034731:	ret    
   140034732:	int3   
   140034733:	int3   
   140034734:	and    DWORD PTR [rcx+0x10],0x0
   140034738:	and    DWORD PTR [rcx+0x20],0x0
   14003473c:	mov    DWORD PTR [rcx+0x14],0x20
   140034743:	ret    
   140034744:	cmp    QWORD PTR [rcx],0x0
   140034748:	jne    0x140034684
   14003474e:	mov    eax,DWORD PTR [rcx+0x24]
   140034751:	mov    edx,0x1000
   140034756:	test   eax,eax
   140034758:	je     0x14003475d
   14003475a:	lea    edx,[rax+rax*1]
   14003475d:	jmp    0x140034634
   140034762:	int3   
   140034763:	int3   
   140034764:	test   r8d,r8d
   140034767:	je     0x1400347fd
   14003476d:	mov    rax,rsp
   140034770:	mov    QWORD PTR [rax+0x8],rbx
   140034774:	mov    QWORD PTR [rax+0x10],rbp
   140034778:	mov    QWORD PTR [rax+0x18],rsi
   14003477c:	mov    QWORD PTR [rax+0x20],rdi
   140034780:	push   r14
   140034782:	sub    rsp,0x20
   140034786:	mov    ebp,r8d
   140034789:	mov    r14,rdx
   14003478c:	mov    rsi,rcx
   14003478f:	mov    eax,DWORD PTR [rsi+0x24]
   140034792:	cmp    eax,DWORD PTR [rsi+0x20]
   140034795:	jne    0x1400347bb
   140034797:	cmp    QWORD PTR [rsi],0x0
   14003479b:	je     0x1400347a7
   14003479d:	mov    rcx,rsi
   1400347a0:	call   0x140034684
   1400347a5:	jmp    0x1400347bb
   1400347a7:	mov    edx,0x1000
   1400347ac:	test   eax,eax
   1400347ae:	je     0x1400347b3
   1400347b0:	lea    edx,[rax+rax*1]
   1400347b3:	mov    rcx,rsi
   1400347b6:	call   0x140034634
   1400347bb:	mov    ecx,DWORD PTR [rsi+0x20]
   1400347be:	mov    rdx,r14
   1400347c1:	mov    edi,DWORD PTR [rsi+0x24]
   1400347c4:	sub    edi,ecx
   1400347c6:	cmp    ebp,edi
   1400347c8:	cmovb  edi,ebp
   1400347cb:	add    rcx,QWORD PTR [rsi+0x18]
   1400347cf:	mov    r8d,edi
   1400347d2:	mov    ebx,edi
   1400347d4:	call   0x140059180
   1400347d9:	add    DWORD PTR [rsi+0x20],edi
   1400347dc:	add    r14,rbx
   1400347df:	sub    ebp,edi
   1400347e1:	jne    0x14003478f
   1400347e3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400347e8:	mov    rbp,QWORD PTR [rsp+0x38]
   1400347ed:	mov    rsi,QWORD PTR [rsp+0x40]
   1400347f2:	mov    rdi,QWORD PTR [rsp+0x48]
   1400347f7:	add    rsp,0x20
   1400347fb:	pop    r14
   1400347fd:	ret    
   1400347fe:	int3   
   1400347ff:	int3   
   140034800:	mov    QWORD PTR [rsp+0x8],rbx
   140034805:	mov    QWORD PTR [rsp+0x10],rsi
   14003480a:	push   rdi
   14003480b:	sub    rsp,0x20
   14003480f:	mov    edi,edx
   140034811:	mov    rbx,rcx
   140034814:	mov    edx,DWORD PTR [rcx+0x20]
   140034817:	mov    ecx,DWORD PTR [rcx+0x24]
   14003481a:	lea    eax,[rdx+0x4]
   14003481d:	cmp    eax,ecx
   14003481f:	jae    0x14003484f
   140034821:	mov    r8d,edx
   140034824:	mov    eax,edi
   140034826:	add    r8,QWORD PTR [rbx+0x18]
   14003482a:	shr    eax,0x18
   14003482d:	mov    BYTE PTR [r8],al
   140034830:	mov    eax,edi
   140034832:	shr    eax,0x10
   140034835:	mov    BYTE PTR [r8+0x1],al
   140034839:	mov    eax,edi
   14003483b:	shr    eax,0x8
   14003483e:	mov    BYTE PTR [r8+0x2],al
   140034842:	mov    BYTE PTR [r8+0x3],dil
   140034846:	add    DWORD PTR [rbx+0x20],0x4
   14003484a:	jmp    0x140034938
   14003484f:	mov    esi,0x1000
   140034854:	cmp    edx,ecx
   140034856:	jne    0x140034879
   140034858:	cmp    QWORD PTR [rbx],0x0
   14003485c:	je     0x140034868
   14003485e:	mov    rcx,rbx
   140034861:	call   0x140034684
   140034866:	jmp    0x140034879
   140034868:	mov    edx,esi
   14003486a:	test   ecx,ecx
   14003486c:	je     0x140034871
   14003486e:	lea    edx,[rcx+rcx*1]
   140034871:	mov    rcx,rbx
   140034874:	call   0x140034634
   140034879:	mov    ecx,DWORD PTR [rbx+0x20]
   14003487c:	mov    edx,edi
   14003487e:	mov    rax,QWORD PTR [rbx+0x18]
   140034882:	shr    edx,0x18
   140034885:	mov    BYTE PTR [rcx+rax*1],dl
   140034888:	inc    DWORD PTR [rbx+0x20]
   14003488b:	mov    eax,DWORD PTR [rbx+0x24]
   14003488e:	cmp    DWORD PTR [rbx+0x20],eax
   140034891:	jne    0x1400348b4
   140034893:	cmp    QWORD PTR [rbx],0x0
   140034897:	je     0x1400348a3
   140034899:	mov    rcx,rbx
   14003489c:	call   0x140034684
   1400348a1:	jmp    0x1400348b4
   1400348a3:	mov    edx,esi
   1400348a5:	test   eax,eax
   1400348a7:	je     0x1400348ac
   1400348a9:	lea    edx,[rax+rax*1]
   1400348ac:	mov    rcx,rbx
   1400348af:	call   0x140034634
   1400348b4:	mov    ecx,DWORD PTR [rbx+0x20]
   1400348b7:	mov    edx,edi
   1400348b9:	mov    rax,QWORD PTR [rbx+0x18]
   1400348bd:	shr    edx,0x10
   1400348c0:	mov    BYTE PTR [rcx+rax*1],dl
   1400348c3:	inc    DWORD PTR [rbx+0x20]
   1400348c6:	mov    eax,DWORD PTR [rbx+0x24]
   1400348c9:	cmp    DWORD PTR [rbx+0x20],eax
   1400348cc:	jne    0x1400348ef
   1400348ce:	cmp    QWORD PTR [rbx],0x0
   1400348d2:	je     0x1400348de
   1400348d4:	mov    rcx,rbx
   1400348d7:	call   0x140034684
   1400348dc:	jmp    0x1400348ef
   1400348de:	mov    edx,esi
   1400348e0:	test   eax,eax
   1400348e2:	je     0x1400348e7
   1400348e4:	lea    edx,[rax+rax*1]
   1400348e7:	mov    rcx,rbx
   1400348ea:	call   0x140034634
   1400348ef:	mov    ecx,DWORD PTR [rbx+0x20]
   1400348f2:	mov    edx,edi
   1400348f4:	mov    rax,QWORD PTR [rbx+0x18]
   1400348f8:	shr    edx,0x8
   1400348fb:	mov    BYTE PTR [rcx+rax*1],dl
   1400348fe:	inc    DWORD PTR [rbx+0x20]
   140034901:	mov    eax,DWORD PTR [rbx+0x24]
   140034904:	cmp    DWORD PTR [rbx+0x20],eax
   140034907:	jne    0x14003492a
   140034909:	cmp    QWORD PTR [rbx],0x0
   14003490d:	je     0x140034919
   14003490f:	mov    rcx,rbx
   140034912:	call   0x140034684
   140034917:	jmp    0x14003492a
   140034919:	test   eax,eax
   14003491b:	je     0x140034920
   14003491d:	lea    esi,[rax+rax*1]
   140034920:	mov    edx,esi
   140034922:	mov    rcx,rbx
   140034925:	call   0x140034634
   14003492a:	mov    ecx,DWORD PTR [rbx+0x20]
   14003492d:	mov    rax,QWORD PTR [rbx+0x18]
   140034931:	mov    BYTE PTR [rcx+rax*1],dil
   140034935:	inc    DWORD PTR [rbx+0x20]
   140034938:	mov    rbx,QWORD PTR [rsp+0x30]
   14003493d:	mov    rsi,QWORD PTR [rsp+0x38]
   140034942:	add    rsp,0x20
   140034946:	pop    rdi
   140034947:	ret    
   140034948:	mov    QWORD PTR [rcx],rdx
   14003494b:	mov    edx,r9d
   14003494e:	mov    QWORD PTR [rcx+0x8],r8
   140034952:	jmp    0x140034634
   140034957:	int3   
   140034958:	mov    QWORD PTR [rsp+0x8],rbx
   14003495d:	mov    QWORD PTR [rsp+0x10],rsi
   140034962:	push   rdi
   140034963:	sub    rsp,0x20
   140034967:	mov    rbx,rcx
   14003496a:	mov    edi,r8d
   14003496d:	mov    ecx,DWORD PTR [rcx+0x14]
   140034970:	mov    esi,edx
   140034972:	cmp    edx,ecx
   140034974:	ja     0x14003497f
   140034976:	sub    ecx,edx
   140034978:	shl    edi,cl
   14003497a:	or     DWORD PTR [rbx+0x10],edi
   14003497d:	jmp    0x1400349a2
   14003497f:	sub    esi,ecx
   140034981:	mov    eax,r8d
   140034984:	mov    ecx,esi
   140034986:	shr    eax,cl
   140034988:	mov    rcx,rbx
   14003498b:	or     DWORD PTR [rbx+0x10],eax
   14003498e:	mov    edx,DWORD PTR [rbx+0x10]
   140034991:	call   0x140034800
   140034996:	mov    ecx,0x20
   14003499b:	sub    ecx,esi
   14003499d:	shl    edi,cl
   14003499f:	mov    DWORD PTR [rbx+0x10],edi
   1400349a2:	mov    rsi,QWORD PTR [rsp+0x38]
   1400349a7:	mov    DWORD PTR [rbx+0x14],ecx
   1400349aa:	mov    rbx,QWORD PTR [rsp+0x30]
   1400349af:	add    rsp,0x20
   1400349b3:	pop    rdi
   1400349b4:	ret    
   1400349b5:	int3   
   1400349b6:	int3   
   1400349b7:	int3   
   1400349b8:	mov    QWORD PTR [rsp+0x8],rcx
   1400349bd:	push   rbx
   1400349be:	sub    rsp,0x30
   1400349c2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400349cb:	mov    rbx,rcx
   1400349ce:	add    rcx,0x30
   1400349d2:	call   0x140017e04
   1400349d7:	nop
   1400349d8:	xor    eax,eax
   1400349da:	mov    QWORD PTR [rbx+0x1128],rax
   1400349e1:	mov    QWORD PTR [rbx+0x1130],rax
   1400349e8:	mov    QWORD PTR [rbx+0x1138],rax
   1400349ef:	mov    QWORD PTR [rbx+0x1140],rax
   1400349f6:	mov    QWORD PTR [rbx+0x20],rax
   1400349fa:	xor    r8d,r8d
   1400349fd:	xor    edx,edx
   1400349ff:	mov    rcx,rbx
   140034a02:	call   0x140034c34
   140034a07:	nop
   140034a08:	mov    rax,rbx
   140034a0b:	add    rsp,0x30
   140034a0f:	pop    rbx
   140034a10:	ret    
   140034a11:	int3   
   140034a12:	int3   
   140034a13:	int3   
   140034a14:	rex push rbx
   140034a16:	sub    rsp,0x20
   140034a1a:	mov    rbx,rcx
   140034a1d:	call   0x140034b7c
   140034a22:	mov    rcx,QWORD PTR [rbx+0x20]
   140034a26:	call   0x140055de8
   140034a2b:	mov    rcx,QWORD PTR [rbx+0x1128]
   140034a32:	test   rcx,rcx
   140034a35:	je     0x140034a3c
   140034a37:	call   0x14005a938
   140034a3c:	lea    rcx,[rbx+0x30]
   140034a40:	add    rsp,0x20
   140034a44:	pop    rbx
   140034a45:	jmp    0x140017eec
   140034a4a:	int3   
   140034a4b:	int3   
   140034a4c:	mov    QWORD PTR [rsp+0x8],rbx
   140034a51:	mov    QWORD PTR [rsp+0x10],rbp
   140034a56:	mov    QWORD PTR [rsp+0x18],rsi
   140034a5b:	push   rdi
   140034a5c:	push   r12
   140034a5e:	push   r13
   140034a60:	push   r14
   140034a62:	push   r15
   140034a64:	sub    rsp,0x20
   140034a68:	mov    rax,QWORD PTR [rcx]
   140034a6b:	mov    rsi,r9
   140034a6e:	mov    r15,r8
   140034a71:	mov    r13,rdx
   140034a74:	mov    rbx,rcx
   140034a77:	test   rax,rax
   140034a7a:	je     0x140034b5c
   140034a80:	cmp    DWORD PTR [rax+0x7f88],0x3
   140034a87:	jne    0x140034b5c
   140034a8d:	mov    rcx,QWORD PTR [rcx+0x18]
   140034a91:	mov    rax,r9
   140034a94:	mov    r12,QWORD PTR [rsp+0x70]
   140034a99:	neg    rax
   140034a9c:	sbb    r14,r14
   140034a9f:	and    r14d,0x10
   140034aa3:	lea    rbp,[r14+r8*1]
   140034aa7:	test   rcx,rcx
   140034aaa:	je     0x140034b01
   140034aac:	cmp    QWORD PTR [rcx+0x10],r12
   140034ab0:	jne    0x140034b01
   140034ab2:	cmp    QWORD PTR [rcx+0x8],rbp
   140034ab6:	je     0x140034ad7
   140034ab8:	mov    rcx,QWORD PTR [rcx]
   140034abb:	call   0x140055de8
   140034ac0:	mov    rcx,rbp
   140034ac3:	call   0x140055df0
   140034ac8:	mov    rcx,QWORD PTR [rbx+0x18]
   140034acc:	mov    QWORD PTR [rcx],rax
   140034acf:	mov    rax,QWORD PTR [rbx+0x18]
   140034ad3:	mov    QWORD PTR [rax+0x8],rbp
   140034ad7:	test   rsi,rsi
   140034ada:	je     0x140034aea
   140034adc:	mov    rax,QWORD PTR [rbx+0x18]
   140034ae0:	movups xmm0,XMMWORD PTR [rsi]
   140034ae3:	mov    rcx,QWORD PTR [rax]
   140034ae6:	movdqu XMMWORD PTR [rcx],xmm0
   140034aea:	mov    rax,QWORD PTR [rbx+0x18]
   140034aee:	mov    r8,r15
   140034af1:	mov    rdx,r13
   140034af4:	mov    rcx,QWORD PTR [rax]
   140034af7:	add    rcx,r14
   140034afa:	call   0x140059180
   140034aff:	jmp    0x140034b5c
   140034b01:	mov    ecx,0x20
   140034b06:	call   0x140055dac
   140034b0b:	mov    rcx,rbp
   140034b0e:	mov    rdi,rax
   140034b11:	call   0x140055df0
   140034b16:	mov    QWORD PTR [rdi],rax
   140034b19:	test   rsi,rsi
   140034b1c:	je     0x140034b25
   140034b1e:	movups xmm0,XMMWORD PTR [rsi]
   140034b21:	movdqu XMMWORD PTR [rax],xmm0
   140034b25:	mov    rcx,QWORD PTR [rdi]
   140034b28:	mov    r8,r15
   140034b2b:	add    rcx,r14
   140034b2e:	mov    rdx,r13
   140034b31:	call   0x140059180
   140034b36:	and    QWORD PTR [rdi+0x18],0x0
   140034b3b:	mov    QWORD PTR [rdi+0x8],rbp
   140034b3f:	mov    QWORD PTR [rdi+0x10],r12
   140034b43:	cmp    QWORD PTR [rbx+0x10],0x0
   140034b48:	jne    0x140034b50
   140034b4a:	mov    QWORD PTR [rbx+0x10],rdi
   140034b4e:	jmp    0x140034b58
   140034b50:	mov    rax,QWORD PTR [rbx+0x18]
   140034b54:	mov    QWORD PTR [rax+0x18],rdi
   140034b58:	mov    QWORD PTR [rbx+0x18],rdi
   140034b5c:	mov    rbx,QWORD PTR [rsp+0x50]
   140034b61:	mov    rbp,QWORD PTR [rsp+0x58]
   140034b66:	mov    rsi,QWORD PTR [rsp+0x60]
   140034b6b:	add    rsp,0x20
   140034b6f:	pop    r15
   140034b71:	pop    r14
   140034b73:	pop    r13
   140034b75:	pop    r12
   140034b77:	pop    rdi
   140034b78:	ret    
   140034b79:	int3   
   140034b7a:	int3   
   140034b7b:	int3   
   140034b7c:	mov    QWORD PTR [rsp+0x8],rbx
   140034b81:	push   rdi
   140034b82:	sub    rsp,0x20
   140034b86:	mov    rdi,QWORD PTR [rcx+0x10]
   140034b8a:	test   rdi,rdi
   140034b8d:	je     0x140034bb0
   140034b8f:	mov    rcx,QWORD PTR [rdi]
   140034b92:	mov    rbx,QWORD PTR [rdi+0x18]
   140034b96:	call   0x140055de8
   140034b9b:	mov    edx,0x20
   140034ba0:	mov    rcx,rdi
   140034ba3:	call   0x140055de8
   140034ba8:	mov    rdi,rbx
   140034bab:	test   rbx,rbx
   140034bae:	jne    0x140034b8f
   140034bb0:	mov    rbx,QWORD PTR [rsp+0x30]
   140034bb5:	add    rsp,0x20
   140034bb9:	pop    rdi
   140034bba:	ret    
   140034bbb:	int3   
   140034bbc:	rex push rbx
   140034bbe:	sub    rsp,0x20
   140034bc2:	mov    rax,QWORD PTR [rcx]
   140034bc5:	mov    rbx,rcx
   140034bc8:	cmp    BYTE PTR [rax+0x68e3],0x0
   140034bcf:	je     0x140034c17
   140034bd1:	mov    rcx,QWORD PTR [rcx+0x28]
   140034bd5:	test   cl,0xf
   140034bd8:	je     0x140034c06
   140034bda:	mov    rax,rcx
   140034bdd:	jmp    0x140034bee
   140034bdf:	mov    rax,QWORD PTR [rbx+0x20]
   140034be3:	mov    BYTE PTR [rcx+rax*1],0x0
   140034be7:	inc    rcx
   140034bea:	mov    rax,QWORD PTR [rbx+0x28]
   140034bee:	or     rax,0xf
   140034bf2:	cmp    rcx,rax
   140034bf5:	jbe    0x140034bdf
   140034bf7:	mov    rax,QWORD PTR [rbx+0x28]
   140034bfb:	or     rax,0xf
   140034bff:	inc    rax
   140034c02:	mov    QWORD PTR [rbx+0x28],rax
   140034c06:	mov    r8,QWORD PTR [rbx+0x28]
   140034c0a:	lea    rcx,[rbx+0x30]
   140034c0e:	mov    rdx,QWORD PTR [rbx+0x20]
   140034c12:	call   0x1400184dc
   140034c17:	mov    r8,QWORD PTR [rbx+0x28]
   140034c1b:	mov    rdx,QWORD PTR [rbx+0x20]
   140034c1f:	mov    rcx,QWORD PTR [rbx]
   140034c22:	call   0x1400212ac
   140034c27:	and    QWORD PTR [rbx+0x28],0x0
   140034c2c:	add    rsp,0x20
   140034c30:	pop    rbx
   140034c31:	ret    
   140034c32:	int3   
   140034c33:	int3   
   140034c34:	mov    QWORD PTR [rsp+0x8],rbx
   140034c39:	mov    QWORD PTR [rsp+0x10],rsi
   140034c3e:	push   rdi
   140034c3f:	sub    rsp,0x20
   140034c43:	mov    sil,r8b
   140034c46:	mov    rdi,rdx
   140034c49:	mov    rbx,rcx
   140034c4c:	test   rdx,rdx
   140034c4f:	je     0x140034c56
   140034c51:	call   0x140034b7c
   140034c56:	and    QWORD PTR [rbx+0x10],0x0
   140034c5b:	and    QWORD PTR [rbx+0x18],0x0
   140034c60:	cmp    QWORD PTR [rbx+0x20],0x0
   140034c65:	mov    QWORD PTR [rbx],rdi
   140034c68:	mov    BYTE PTR [rbx+0x8],sil
   140034c6c:	jne    0x140034c7c
   140034c6e:	mov    ecx,0x10000
   140034c73:	call   0x140055df0
   140034c78:	mov    QWORD PTR [rbx+0x20],rax
   140034c7c:	and    QWORD PTR [rbx+0x28],0x0
   140034c81:	mov    rsi,QWORD PTR [rsp+0x38]
   140034c86:	mov    BYTE PTR [rbx+0x10f0],0x0
   140034c8d:	mov    rbx,QWORD PTR [rsp+0x30]
   140034c92:	add    rsp,0x20
   140034c96:	pop    rdi
   140034c97:	ret    
   140034c98:	mov    eax,0x1
   140034c9d:	cmp    ecx,0x2
   140034ca0:	je     0x140034cb1
   140034ca2:	cmp    ecx,eax
   140034ca4:	jne    0x140034caf
   140034ca6:	cmp    rdx,0x1000
   140034cad:	ja     0x140034cb1
   140034caf:	xor    eax,eax
   140034cb1:	ret    
   140034cb2:	int3   
   140034cb3:	int3   
   140034cb4:	mov    rax,rsp
   140034cb7:	push   rdi
   140034cb8:	sub    rsp,0x70
   140034cbc:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   140034cc4:	mov    QWORD PTR [rax+0x8],rbx
   140034cc8:	mov    QWORD PTR [rax+0x10],rbp
   140034ccc:	mov    QWORD PTR [rax+0x18],rsi
   140034cd0:	mov    rbp,rdx
   140034cd3:	mov    rbx,rcx
   140034cd6:	cmp    BYTE PTR [rcx+0x10f0],0x0
   140034cdd:	jne    0x140034dca
   140034ce3:	mov    rcx,QWORD PTR [rcx]
   140034ce6:	mov    rax,QWORD PTR [rcx]
   140034ce9:	call   QWORD PTR [rax+0x20]
   140034cec:	mov    QWORD PTR [rbx+0x1150],rax
   140034cf3:	mov    BYTE PTR [rbx+0x1158],0x0
   140034cfa:	mov    rdi,QWORD PTR [rbx]
   140034cfd:	mov    QWORD PTR [rsp+0x58],rdi
   140034d02:	mov    rax,QWORD PTR [rdi]
   140034d05:	mov    rcx,rdi
   140034d08:	call   QWORD PTR [rax+0x20]
   140034d0b:	mov    rsi,rax
   140034d0e:	mov    QWORD PTR [rsp+0x60],rax
   140034d13:	mov    rcx,QWORD PTR [rbx]
   140034d16:	mov    r9,QWORD PTR [rcx]
   140034d19:	xor    r8d,r8d
   140034d1c:	mov    rdx,rbp
   140034d1f:	call   QWORD PTR [r9+0x18]
   140034d23:	mov    rcx,QWORD PTR [rbx]
   140034d26:	call   0x14000e334
   140034d2b:	test   rax,rax
   140034d2e:	je     0x140034db5
   140034d34:	mov    rcx,QWORD PTR [rbx]
   140034d37:	cmp    DWORD PTR [rcx+0x22d4],0x3
   140034d3e:	jne    0x140034db5
   140034d40:	movzx  eax,WORD PTR [rcx+0x5868]
   140034d47:	cmp    ax,WORD PTR [rip+0x3ab4a]        # 0x14006f898
   140034d4e:	jne    0x140034db5
   140034d50:	movzx  eax,WORD PTR [rcx+0x586a]
   140034d57:	cmp    ax,WORD PTR [rip+0x3ab3c]        # 0x14006f89a
   140034d5e:	jne    0x140034db5
   140034d60:	movzx  eax,WORD PTR [rcx+0x586c]
   140034d67:	cmp    ax,WORD PTR [rip+0x3ab2e]        # 0x14006f89c
   140034d6e:	jne    0x140034db5
   140034d70:	mov    rax,QWORD PTR [rcx+0x7f78]
   140034d77:	mov    QWORD PTR [rbx+0x10f8],rax
   140034d7e:	mov    rax,QWORD PTR [rcx]
   140034d81:	call   QWORD PTR [rax+0x20]
   140034d84:	mov    QWORD PTR [rbx+0x1100],rax
   140034d8b:	mov    rax,QWORD PTR [rbx]
   140034d8e:	mov    rdx,QWORD PTR [rax+0x68a8]
   140034d95:	mov    QWORD PTR [rbx+0x1108],rdx
   140034d9c:	mov    BYTE PTR [rbx+0x10f0],0x1
   140034da3:	mov    rax,QWORD PTR [rdi]
   140034da6:	xor    r8d,r8d
   140034da9:	mov    rdx,rsi
   140034dac:	mov    rcx,rdi
   140034daf:	call   QWORD PTR [rax+0x18]
   140034db2:	nop
   140034db3:	jmp    0x140034dca
   140034db5:	mov    rax,QWORD PTR [rdi]
   140034db8:	xor    r8d,r8d
   140034dbb:	mov    rdx,rsi
   140034dbe:	mov    rcx,rdi
   140034dc1:	call   QWORD PTR [rax+0x18]
   140034dc4:	nop
   140034dc5:	jmp    0x140034e71
   140034dca:	mov    r11,QWORD PTR [rbx]
   140034dcd:	cmp    BYTE PTR [r11+0x68e3],0x0
   140034dd5:	je     0x140034e3d
   140034dd7:	mov    r9,QWORD PTR [r11+0x22b0]
   140034dde:	cmp    BYTE PTR [r9+0x5130],0x0
   140034de6:	je     0x140034e71
   140034dec:	lea    rax,[r11+0x690a]
   140034df3:	lea    rdx,[r11+0x6913]
   140034dfa:	lea    r8,[r11+0x68f9]
   140034e01:	lea    r10,[r11+0x68e9]
   140034e08:	add    r9,0x5030
   140034e0f:	lea    rcx,[rbx+0x30]
   140034e13:	mov    QWORD PTR [rsp+0x40],rax
   140034e18:	mov    QWORD PTR [rsp+0x38],rdx
   140034e1d:	mov    eax,DWORD PTR [r11+0x6934]
   140034e24:	mov    DWORD PTR [rsp+0x30],eax
   140034e28:	mov    QWORD PTR [rsp+0x28],r8
   140034e2d:	mov    QWORD PTR [rsp+0x20],r10
   140034e32:	xor    edx,edx
   140034e34:	lea    r8d,[rdx+0x5]
   140034e38:	call   0x1400185ec
   140034e3d:	and    QWORD PTR [rbx+0x1110],0x0
   140034e45:	and    QWORD PTR [rbx+0x1118],0x0
   140034e4d:	and    QWORD PTR [rbx+0x1120],0x0
   140034e55:	lea    rcx,[rbx+0x1128]
   140034e5c:	call   0x140009a60
   140034e61:	and    QWORD PTR [rbx+0x1148],0x0
   140034e69:	mov    rcx,rbx
   140034e6c:	call   0x140035030
   140034e71:	lea    r11,[rsp+0x70]
   140034e76:	mov    rbx,QWORD PTR [r11+0x10]
   140034e7a:	mov    rbp,QWORD PTR [r11+0x18]
   140034e7e:	mov    rsi,QWORD PTR [r11+0x20]
   140034e82:	mov    rsp,r11
   140034e85:	pop    rdi
   140034e86:	ret    
   140034e87:	int3   
   140034e88:	mov    QWORD PTR [rsp+0x8],rbx
   140034e8d:	mov    QWORD PTR [rsp+0x10],rsi
   140034e92:	push   rdi
   140034e93:	sub    rsp,0x20
   140034e97:	mov    rcx,rdx
   140034e9a:	mov    rbx,r9
   140034e9d:	mov    rdi,r8
   140034ea0:	mov    rsi,rdx
   140034ea3:	call   0x140036b98
   140034ea8:	xor    edx,edx
   140034eaa:	mov    rcx,rsi
   140034ead:	call   0x140036b5c
   140034eb2:	sub    rbx,QWORD PTR [rdi+0x10]
   140034eb6:	mov    rcx,rsi
   140034eb9:	mov    rdx,rbx
   140034ebc:	call   0x140036b5c
   140034ec1:	mov    rdx,QWORD PTR [rdi+0x8]
   140034ec5:	mov    rcx,rsi
   140034ec8:	call   0x140036b5c
   140034ecd:	mov    r8,QWORD PTR [rdi+0x8]
   140034ed1:	mov    rcx,rsi
   140034ed4:	mov    rdx,QWORD PTR [rdi]
   140034ed7:	mov    rbx,QWORD PTR [rsp+0x30]
   140034edc:	mov    rsi,QWORD PTR [rsp+0x38]
   140034ee1:	add    rsp,0x20
   140034ee5:	pop    rdi
   140034ee6:	jmp    0x140036aac
   140034eeb:	int3   
   140034eec:	mov    QWORD PTR [rsp+0x8],rbx
   140034ef1:	mov    QWORD PTR [rsp+0x10],rbp
   140034ef6:	mov    QWORD PTR [rsp+0x18],rsi
   140034efb:	push   rdi
   140034efc:	sub    rsp,0x20
   140034f00:	cmp    BYTE PTR [rcx+0x10f0],0x0
   140034f07:	mov    rsi,r9
   140034f0a:	mov    rdi,r8
   140034f0d:	mov    rbp,rdx
   140034f10:	mov    rbx,rcx
   140034f13:	jne    0x140034f1c
   140034f15:	xor    al,al
   140034f17:	jmp    0x140035018
   140034f1c:	mov    rax,QWORD PTR [rcx+0x1130]
   140034f23:	add    rax,QWORD PTR [rcx+0x1148]
   140034f2a:	cmp    rax,QWORD PTR [rcx+0x1150]
   140034f31:	ja     0x140034f56
   140034f33:	mov    rcx,rbx
   140034f36:	call   0x140035130
   140034f3b:	test   al,al
   140034f3d:	je     0x140034f56
   140034f3f:	mov    rax,QWORD PTR [rbx+0x1130]
   140034f46:	add    rax,QWORD PTR [rbx+0x1148]
   140034f4d:	cmp    rax,QWORD PTR [rbx+0x1150]
   140034f54:	jbe    0x140034f33
   140034f56:	cmp    BYTE PTR [rbx+0x10f0],0x0
   140034f5d:	jne    0x140034f7c
   140034f5f:	cmp    BYTE PTR [rbx+0x1158],0x0
   140034f66:	je     0x140034f15
   140034f68:	mov    rdx,QWORD PTR [rbx+0x1150]
   140034f6f:	xor    r8d,r8d
   140034f72:	mov    rcx,QWORD PTR [rbx]
   140034f75:	call   0x140021048
   140034f7a:	jmp    0x140034f15
   140034f7c:	mov    r9,QWORD PTR [rbx+0x1150]
   140034f83:	mov    r8,QWORD PTR [rbx+0x1148]
   140034f8a:	cmp    r9,r8
   140034f8d:	jb     0x140034fcd
   140034f8f:	mov    rcx,QWORD PTR [rbx+0x1130]
   140034f96:	lea    rax,[r9+rdi*1]
   140034f9a:	add    rcx,r8
   140034f9d:	cmp    rax,rcx
   140034fa0:	ja     0x140034fcd
   140034fa2:	mov    rdx,QWORD PTR [rbx+0x1128]
   140034fa9:	mov    rcx,rbp
   140034fac:	sub    rdx,r8
   140034faf:	mov    r8,rdi
   140034fb2:	add    rdx,r9
   140034fb5:	call   0x140059180
   140034fba:	mov    QWORD PTR [rsi],rdi
   140034fbd:	add    QWORD PTR [rbx+0x1150],rdi
   140034fc4:	mov    BYTE PTR [rbx+0x1158],0x1
   140034fcb:	jmp    0x140035016
   140034fcd:	cmp    BYTE PTR [rbx+0x1158],0x0
   140034fd4:	je     0x140034feb
   140034fd6:	mov    rcx,QWORD PTR [rbx]
   140034fd9:	xor    r8d,r8d
   140034fdc:	mov    rdx,r9
   140034fdf:	call   0x140021048
   140034fe4:	mov    BYTE PTR [rbx+0x1158],0x0
   140034feb:	mov    rcx,QWORD PTR [rbx]
   140034fee:	mov    r8,rdi
   140034ff1:	mov    rdx,rbp
   140034ff4:	call   0x140020ed4
   140034ff9:	test   eax,eax
   140034ffb:	jns    0x140035009
   140034ffd:	mov    BYTE PTR [rbx+0x10f0],0x0
   140035004:	jmp    0x140034f15
   140035009:	movsxd rcx,eax
   14003500c:	mov    QWORD PTR [rsi],rcx
   14003500f:	add    QWORD PTR [rbx+0x1150],rcx
   140035016:	mov    al,0x1
   140035018:	mov    rbx,QWORD PTR [rsp+0x30]
   14003501d:	mov    rbp,QWORD PTR [rsp+0x38]
   140035022:	mov    rsi,QWORD PTR [rsp+0x40]
   140035027:	add    rsp,0x20
   14003502b:	pop    rdi
   14003502c:	ret    
   14003502d:	int3   
   14003502e:	int3   
   14003502f:	int3   
   140035030:	mov    rax,rsp
   140035033:	push   rdi
   140035034:	sub    rsp,0x40
   140035038:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   140035040:	mov    QWORD PTR [rax+0x8],rbx
   140035044:	mov    QWORD PTR [rax+0x10],rbp
   140035048:	mov    QWORD PTR [rax+0x18],rsi
   14003504c:	mov    rbx,rcx
   14003504f:	mov    rsi,QWORD PTR [rcx]
   140035052:	mov    QWORD PTR [rax-0x20],rsi
   140035056:	mov    rax,QWORD PTR [rsi]
   140035059:	mov    rcx,rsi
   14003505c:	call   QWORD PTR [rax+0x20]
   14003505f:	mov    rbp,rax
   140035062:	mov    QWORD PTR [rsp+0x30],rax
   140035067:	mov    rdx,QWORD PTR [rbx+0x1100]
   14003506e:	add    rdx,QWORD PTR [rbx+0x1110]
   140035075:	xor    r8d,r8d
   140035078:	mov    rcx,QWORD PTR [rbx]
   14003507b:	call   0x140021048
   140035080:	mov    rcx,QWORD PTR [rbx+0x1108]
   140035087:	sub    rcx,QWORD PTR [rbx+0x1110]
   14003508e:	mov    rdx,QWORD PTR [rbx+0x1118]
   140035095:	mov    r8d,0x10000
   14003509b:	sub    r8,rdx
   14003509e:	cmp    rcx,r8
   1400350a1:	cmovb  r8,rcx
   1400350a5:	mov    rcx,QWORD PTR [rbx]
   1400350a8:	cmp    BYTE PTR [rcx+0x68e3],0x0
   1400350af:	je     0x1400350b5
   1400350b1:	and    r8,0xfffffffffffffff0
   1400350b5:	test   r8,r8
   1400350b8:	je     0x140035104
   1400350ba:	add    rdx,QWORD PTR [rbx+0x20]
   1400350be:	call   0x140020ed4
   1400350c3:	movsxd rdi,eax
   1400350c6:	test   eax,eax
   1400350c8:	jle    0x140035104
   1400350ca:	mov    rax,QWORD PTR [rbx]
   1400350cd:	cmp    BYTE PTR [rax+0x68e3],0x0
   1400350d4:	je     0x1400350f1
   1400350d6:	mov    r8,rdi
   1400350d9:	and    r8,0xfffffffffffffff0
   1400350dd:	mov    rdx,QWORD PTR [rbx+0x1118]
   1400350e4:	add    rdx,QWORD PTR [rbx+0x20]
   1400350e8:	lea    rcx,[rbx+0x30]
   1400350ec:	call   0x1400182c8
   1400350f1:	mov    rax,rdi
   1400350f4:	add    QWORD PTR [rbx+0x1110],rax
   1400350fb:	add    QWORD PTR [rbx+0x1118],rax
   140035102:	jmp    0x140035106
   140035104:	xor    edi,edi
   140035106:	mov    r9,QWORD PTR [rsi]
   140035109:	xor    r8d,r8d
   14003510c:	mov    rdx,rbp
   14003510f:	mov    rcx,rsi
   140035112:	call   QWORD PTR [r9+0x18]
   140035116:	nop
   140035117:	mov    eax,edi
   140035119:	mov    rbx,QWORD PTR [rsp+0x50]
   14003511e:	mov    rbp,QWORD PTR [rsp+0x58]
   140035123:	mov    rsi,QWORD PTR [rsp+0x60]
   140035128:	add    rsp,0x40
   14003512c:	pop    rdi
   14003512d:	ret    
   14003512e:	int3   
   14003512f:	int3   
   140035130:	mov    rax,rsp
   140035133:	push   rdi
   140035134:	sub    rsp,0x70
   140035138:	mov    QWORD PTR [rax-0x58],0xfffffffffffffffe
   140035140:	mov    QWORD PTR [rax+0x8],rbx
   140035144:	mov    QWORD PTR [rax+0x10],rbp
   140035148:	mov    QWORD PTR [rax+0x18],rsi
   14003514c:	mov    rsi,rcx
   14003514f:	xor    edx,edx
   140035151:	lea    rcx,[rax-0x48]
   140035155:	call   0x140036498
   14003515a:	nop
   14003515b:	lea    rdx,[rsp+0x30]
   140035160:	mov    rcx,rsi
   140035163:	call   0x140035200
   140035168:	test   al,al
   14003516a:	jne    0x140035170
   14003516c:	xor    bl,bl
   14003516e:	jmp    0x1400351d9
   140035170:	lea    rcx,[rsp+0x30]
   140035175:	call   0x140036678
   14003517a:	lea    rcx,[rsp+0x30]
   14003517f:	call   0x140036678
   140035184:	mov    rbp,rax
   140035187:	lea    rcx,[rsp+0x30]
   14003518c:	call   0x140036678
   140035191:	mov    rdi,rax
   140035194:	lea    rbx,[rsi+0x1128]
   14003519b:	cmp    rax,QWORD PTR [rbx+0x10]
   14003519f:	jbe    0x1400351b2
   1400351a1:	mov    rdx,rax
   1400351a4:	sub    rdx,QWORD PTR [rbx+0x8]
   1400351a8:	mov    rcx,rbx
   1400351ab:	call   0x140001858
   1400351b0:	jmp    0x1400351b6
   1400351b2:	mov    QWORD PTR [rbx+0x8],rax
   1400351b6:	mov    r8,rdi
   1400351b9:	mov    rdx,QWORD PTR [rbx]
   1400351bc:	lea    rcx,[rsp+0x30]
   1400351c1:	call   0x140036594
   1400351c6:	mov    rax,QWORD PTR [rsi+0x10f8]
   1400351cd:	sub    rax,rbp
   1400351d0:	mov    QWORD PTR [rsi+0x1148],rax
   1400351d7:	mov    bl,0x1
   1400351d9:	mov    rcx,QWORD PTR [rsp+0x30]
   1400351de:	test   rcx,rcx
   1400351e1:	je     0x1400351e8
   1400351e3:	call   0x14005a938
   1400351e8:	mov    al,bl
   1400351ea:	lea    r11,[rsp+0x70]
   1400351ef:	mov    rbx,QWORD PTR [r11+0x10]
   1400351f3:	mov    rbp,QWORD PTR [r11+0x18]
   1400351f7:	mov    rsi,QWORD PTR [r11+0x20]
   1400351fb:	mov    rsp,r11
   1400351fe:	pop    rdi
   1400351ff:	ret    
   140035200:	mov    rax,rsp
   140035203:	mov    QWORD PTR [rax+0x8],rbx
   140035207:	mov    QWORD PTR [rax+0x10],rbp
   14003520b:	mov    QWORD PTR [rax+0x18],rsi
   14003520f:	mov    QWORD PTR [rax+0x20],rdi
   140035213:	push   r12
   140035215:	push   r14
   140035217:	push   r15
   140035219:	sub    rsp,0x20
   14003521d:	mov    r8,QWORD PTR [rcx+0x1120]
   140035224:	mov    eax,0x10000
   140035229:	sub    rax,r8
   14003522c:	xor    esi,esi
   14003522e:	mov    r15,rdx
   140035231:	mov    rdi,rcx
   140035234:	cmp    rax,0x100
   14003523a:	jae    0x14003526c
   14003523c:	mov    rbx,QWORD PTR [rcx+0x1118]
   140035243:	mov    rcx,QWORD PTR [rcx+0x20]
   140035247:	sub    rbx,r8
   14003524a:	lea    rdx,[rcx+r8*1]
   14003524e:	mov    r8,rbx
   140035251:	call   0x140059180
   140035256:	mov    rcx,rdi
   140035259:	mov    QWORD PTR [rdi+0x1120],rsi
   140035260:	mov    QWORD PTR [rdi+0x1118],rbx
   140035267:	call   0x140035030
   14003526c:	mov    rcx,QWORD PTR [rdi+0x1120]
   140035273:	lea    rax,[rcx+0x7]
   140035277:	cmp    rax,QWORD PTR [rdi+0x1118]
   14003527e:	ja     0x14003534a
   140035284:	mov    rdx,QWORD PTR [rdi+0x20]
   140035288:	mov    r8d,0x7
   14003528e:	add    rdx,rcx
   140035291:	mov    rcx,r15
   140035294:	call   0x14003674c
   140035299:	add    QWORD PTR [rdi+0x1120],0x7
   1400352a1:	mov    rcx,r15
   1400352a4:	call   0x14003651c
   1400352a9:	mov    edx,0x4
   1400352ae:	mov    rcx,r15
   1400352b1:	mov    r12d,eax
   1400352b4:	call   0x1400366c8
   1400352b9:	mov    rcx,r15
   1400352bc:	mov    ebx,eax
   1400352be:	call   0x140036678
   1400352c3:	lea    r14d,[rax-0x3]
   1400352c7:	add    r14d,ebx
   1400352ca:	js     0x140035343
   1400352cc:	test   ebx,ebx
   1400352ce:	je     0x140035343
   1400352d0:	test   rax,rax
   1400352d3:	je     0x140035343
   1400352d5:	mov    rbp,QWORD PTR [rdi+0x1118]
   1400352dc:	sub    rbp,QWORD PTR [rdi+0x1120]
   1400352e3:	test   r14d,r14d
   1400352e6:	jle    0x140035333
   1400352e8:	mov    rdx,QWORD PTR [rdi+0x20]
   1400352ec:	mov    rcx,r15
   1400352ef:	movsxd rbx,r14d
   1400352f2:	cmp    rbp,rbx
   1400352f5:	cmovb  rbx,rbp
   1400352f9:	add    rdx,QWORD PTR [rdi+0x1120]
   140035300:	mov    r8,rbx
   140035303:	call   0x14003674c
   140035308:	add    QWORD PTR [rdi+0x1120],rbx
   14003530f:	sub    r14d,ebx
   140035312:	test   r14d,r14d
   140035315:	jle    0x140035333
   140035317:	mov    rcx,rdi
   14003531a:	mov    QWORD PTR [rdi+0x1120],rsi
   140035321:	mov    QWORD PTR [rdi+0x1118],rsi
   140035328:	call   0x140035030
   14003532d:	test   eax,eax
   14003532f:	jne    0x1400352e8
   140035331:	jmp    0x14003534a
   140035333:	mov    rcx,r15
   140035336:	call   0x140036648
   14003533b:	cmp    r12d,eax
   14003533e:	sete   al
   140035341:	jmp    0x14003534c
   140035343:	mov    BYTE PTR [rdi+0x10f0],sil
   14003534a:	xor    al,al
   14003534c:	mov    rbx,QWORD PTR [rsp+0x40]
   140035351:	mov    rbp,QWORD PTR [rsp+0x48]
   140035356:	mov    rsi,QWORD PTR [rsp+0x50]
   14003535b:	mov    rdi,QWORD PTR [rsp+0x58]
   140035360:	add    rsp,0x20
   140035364:	pop    r15
   140035366:	pop    r14
   140035368:	pop    r12
   14003536a:	ret    
   14003536b:	int3   
   14003536c:	mov    QWORD PTR [rsp+0x8],rbx
   140035371:	mov    QWORD PTR [rsp+0x10],rsi
   140035376:	push   rdi
   140035377:	sub    rsp,0x20
   14003537b:	cmp    BYTE PTR [rcx+0x10f0],0x0
   140035382:	mov    esi,r8d
   140035385:	mov    rdi,rdx
   140035388:	mov    rbx,rcx
   14003538b:	jne    0x140035391
   14003538d:	xor    al,al
   14003538f:	jmp    0x1400353fc
   140035391:	test   r8d,r8d
   140035394:	jne    0x1400353bb
   140035396:	cmp    rdx,QWORD PTR [rcx+0x1150]
   14003539d:	jae    0x1400353b4
   14003539f:	cmp    rdx,QWORD PTR [rcx+0x1148]
   1400353a6:	jae    0x1400353b4
   1400353a8:	mov    rdx,QWORD PTR [rcx+0x10f8]
   1400353af:	call   0x140034cb4
   1400353b4:	mov    QWORD PTR [rbx+0x1150],rdi
   1400353bb:	cmp    esi,0x1
   1400353be:	jne    0x1400353c7
   1400353c0:	add    QWORD PTR [rbx+0x1150],rdi
   1400353c7:	mov    r8d,0x2
   1400353cd:	mov    BYTE PTR [rbx+0x1158],0x1
   1400353d4:	cmp    esi,r8d
   1400353d7:	jne    0x1400353fa
   1400353d9:	mov    rcx,QWORD PTR [rbx]
   1400353dc:	mov    rdx,rdi
   1400353df:	call   0x140021048
   1400353e4:	mov    rcx,QWORD PTR [rbx]
   1400353e7:	call   0x1400211a0
   1400353ec:	mov    QWORD PTR [rbx+0x1150],rax
   1400353f3:	mov    BYTE PTR [rbx+0x1158],0x0
   1400353fa:	mov    al,0x1
   1400353fc:	mov    rbx,QWORD PTR [rsp+0x30]
   140035401:	mov    rsi,QWORD PTR [rsp+0x38]
   140035406:	add    rsp,0x20
   14003540a:	pop    rdi
   14003540b:	ret    
   14003540c:	cmp    BYTE PTR [rcx+0x10f0],0x0
   140035413:	jne    0x140035418
   140035415:	xor    al,al
   140035417:	ret    
   140035418:	mov    rax,QWORD PTR [rcx+0x1150]
   14003541f:	mov    QWORD PTR [rdx],rax
   140035422:	mov    al,0x1
   140035424:	ret    
   140035425:	int3   
   140035426:	int3   
   140035427:	int3   
   140035428:	mov    rax,rsp
   14003542b:	push   rdi
   14003542c:	sub    rsp,0x90
   140035433:	mov    QWORD PTR [rax-0x48],0xfffffffffffffffe
   14003543b:	mov    QWORD PTR [rax+0x10],rbx
   14003543f:	mov    QWORD PTR [rax+0x18],rbp
   140035443:	mov    QWORD PTR [rax+0x20],rsi
   140035447:	mov    rbx,rcx
   14003544a:	mov    rcx,QWORD PTR [rcx]
   14003544d:	test   rcx,rcx
   140035450:	je     0x14003564c
   140035456:	cmp    DWORD PTR [rcx+0x7f88],0x3
   14003545d:	jne    0x14003564c
   140035463:	mov    rax,QWORD PTR [rcx]
   140035466:	xor    edx,edx
   140035468:	lea    r8d,[rdx+0x2]
   14003546c:	call   QWORD PTR [rax+0x18]
   14003546f:	mov    rcx,QWORD PTR [rbx]
   140035472:	mov    rax,QWORD PTR [rcx]
   140035475:	call   QWORD PTR [rax+0x20]
   140035478:	mov    rbp,rax
   14003547b:	lea    rcx,[rsp+0x58]
   140035480:	call   0x140036890
   140035485:	nop
   140035486:	xor    esi,esi
   140035488:	mov    rdi,QWORD PTR [rbx+0x10]
   14003548c:	test   rdi,rdi
   14003548f:	je     0x14003563d
   140035495:	mov    r9,rbp
   140035498:	mov    r8,rdi
   14003549b:	lea    rdx,[rsp+0x58]
   1400354a0:	mov    rcx,rbx
   1400354a3:	call   0x140034e88
   1400354a8:	xor    r9d,r9d
   1400354ab:	xor    edx,edx
   1400354ad:	lea    r8d,[r9+0x3]
   1400354b1:	lea    rcx,[rsp+0x58]
   1400354b6:	call   0x140036c04
   1400354bb:	add    rsi,rax
   1400354be:	mov    rdi,QWORD PTR [rdi+0x18]
   1400354c2:	test   rdi,rdi
   1400354c5:	jne    0x140035495
   1400354c7:	test   rsi,rsi
   1400354ca:	je     0x14003563d
   1400354d0:	mov    rcx,QWORD PTR [rbx]
   1400354d3:	mov    edx,DWORD PTR [rcx+0x34c4]
   1400354d9:	mov    eax,DWORD PTR [rcx+0x3470]
   1400354df:	add    rdx,rax
   1400354e2:	add    rdx,QWORD PTR [rcx+0x7f98]
   1400354e9:	mov    rdi,rbp
   1400354ec:	sub    rdi,rdx
   1400354ef:	cmp    rdi,QWORD PTR [rcx+0x34a0]
   1400354f6:	ja     0x14003563d
   1400354fc:	mov    rax,QWORD PTR [rcx]
   1400354ff:	xor    r8d,r8d
   140035502:	call   QWORD PTR [rax+0x18]
   140035505:	mov    rax,QWORD PTR [rbx]
   140035508:	mov    QWORD PTR [rax+0x3498],rdi
   14003550f:	mov    BYTE PTR [rsp+0x20],0x0
   140035514:	xor    r9d,r9d
   140035517:	xor    r8d,r8d
   14003551a:	lea    edx,[r9+0x1]
   14003551e:	mov    rcx,QWORD PTR [rbx]
   140035521:	call   0x14000b340
   140035526:	mov    rcx,QWORD PTR [rbx]
   140035529:	mov    rax,QWORD PTR [rcx]
   14003552c:	xor    r8d,r8d
   14003552f:	mov    rdx,rbp
   140035532:	call   QWORD PTR [rax+0x18]
   140035535:	mov    rcx,QWORD PTR [rbx]
   140035538:	add    rcx,0x5848
   14003553f:	xor    edx,edx
   140035541:	call   0x140024480
   140035546:	mov    rax,QWORD PTR [rbx]
   140035549:	mov    BYTE PTR [rax+0x5858],0x1
   140035550:	mov    rcx,QWORD PTR [rbx]
   140035553:	add    rcx,0x68b8
   14003555a:	xor    edx,edx
   14003555c:	call   0x14002422c
   140035561:	mov    DWORD PTR [rsp+0x28],0x8
   140035569:	lea    rax,[rip+0x3a320]        # 0x14006f890
   140035570:	mov    QWORD PTR [rsp+0x20],rax
   140035575:	xor    r9d,r9d
   140035578:	mov    r8,rsi
   14003557b:	xor    edx,edx
   14003557d:	mov    rcx,QWORD PTR [rbx]
   140035580:	call   0x140007ce8
   140035585:	mov    rdi,QWORD PTR [rbx]
   140035588:	cmp    BYTE PTR [rdi+0x68e3],0x0
   14003558f:	je     0x1400355ea
   140035591:	mov    r9,QWORD PTR [rdi+0x22b0]
   140035598:	lea    rax,[rdi+0x690a]
   14003559f:	lea    r8,[rdi+0x6913]
   1400355a6:	lea    r10,[rdi+0x68f9]
   1400355ad:	lea    r11,[rdi+0x68e9]
   1400355b4:	add    r9,0x5030
   1400355bb:	lea    rcx,[rbx+0x30]
   1400355bf:	mov    QWORD PTR [rsp+0x40],rax
   1400355c4:	mov    QWORD PTR [rsp+0x38],r8
   1400355c9:	mov    eax,DWORD PTR [rdi+0x6934]
   1400355cf:	mov    DWORD PTR [rsp+0x30],eax
   1400355d3:	mov    QWORD PTR [rsp+0x28],r10
   1400355d8:	mov    QWORD PTR [rsp+0x20],r11
   1400355dd:	mov    r8d,0x5
   1400355e3:	mov    dl,0x1
   1400355e5:	call   0x1400185ec
   1400355ea:	mov    rdi,QWORD PTR [rbx+0x10]
   1400355ee:	jmp    0x14003562f
   1400355f0:	mov    r9,rbp
   1400355f3:	mov    r8,rdi
   1400355f6:	lea    rdx,[rsp+0x58]
   1400355fb:	call   0x140034e88
   140035600:	lea    r9,[rsp+0xa0]
   140035608:	xor    edx,edx
   14003560a:	lea    r8d,[rdx+0x3]
   14003560e:	lea    rcx,[rsp+0x58]
   140035613:	call   0x140036c04
   140035618:	mov    r8,rax
   14003561b:	mov    rdx,QWORD PTR [rsp+0xa0]
   140035623:	mov    rcx,rbx
   140035626:	call   0x140035668
   14003562b:	mov    rdi,QWORD PTR [rdi+0x18]
   14003562f:	mov    rcx,rbx
   140035632:	test   rdi,rdi
   140035635:	jne    0x1400355f0
   140035637:	call   0x140034bbc
   14003563c:	nop
   14003563d:	mov    rcx,QWORD PTR [rsp+0x58]
   140035642:	test   rcx,rcx
   140035645:	je     0x14003564c
   140035647:	call   0x14005a938
   14003564c:	lea    r11,[rsp+0x90]
   140035654:	mov    rbx,QWORD PTR [r11+0x18]
   140035658:	mov    rbp,QWORD PTR [r11+0x20]
   14003565c:	mov    rsi,QWORD PTR [r11+0x28]
   140035660:	mov    rsp,r11
   140035663:	pop    rdi
   140035664:	ret    
   140035665:	int3   
   140035666:	int3   
   140035667:	int3   
   140035668:	test   r8,r8
   14003566b:	je     0x1400356e2
   14003566d:	mov    QWORD PTR [rsp+0x8],rbx
   140035672:	mov    QWORD PTR [rsp+0x10],rbp
   140035677:	mov    QWORD PTR [rsp+0x18],rsi
   14003567c:	push   rdi
   14003567d:	sub    rsp,0x20
   140035681:	mov    rdi,r8
   140035684:	mov    rbp,rdx
   140035687:	mov    rsi,rcx
   14003568a:	mov    rcx,QWORD PTR [rsi+0x20]
   14003568e:	mov    ebx,0x10000
   140035693:	sub    rbx,QWORD PTR [rsi+0x28]
   140035697:	mov    rdx,rbp
   14003569a:	cmp    rdi,rbx
   14003569d:	cmovb  rbx,rdi
   1400356a1:	add    rcx,QWORD PTR [rsi+0x28]
   1400356a5:	mov    r8,rbx
   1400356a8:	call   0x140059180
   1400356ad:	add    QWORD PTR [rsi+0x28],rbx
   1400356b1:	sub    rdi,rbx
   1400356b4:	add    rbp,rbx
   1400356b7:	cmp    QWORD PTR [rsi+0x28],0x10000
   1400356bf:	jne    0x1400356c9
   1400356c1:	mov    rcx,rsi
   1400356c4:	call   0x140034bbc
   1400356c9:	test   rdi,rdi
   1400356cc:	jne    0x14003568a
   1400356ce:	mov    rbx,QWORD PTR [rsp+0x30]
   1400356d3:	mov    rbp,QWORD PTR [rsp+0x38]
   1400356d8:	mov    rsi,QWORD PTR [rsp+0x40]
   1400356dd:	add    rsp,0x20
   1400356e1:	pop    rdi
   1400356e2:	ret    
   1400356e3:	int3   
   1400356e4:	rex push rdi
   1400356e6:	sub    rsp,0x30
   1400356ea:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   1400356f3:	mov    QWORD PTR [rsp+0x40],rbx
   1400356f8:	mov    QWORD PTR [rsp+0x48],rsi
   1400356fd:	mov    rdi,rdx
   140035700:	mov    esi,ecx
   140035702:	mov    cl,0x1
   140035704:	call   0x140046a28
   140035709:	call   0x140016f88
   14003570e:	mov    dl,0x1
   140035710:	lea    rcx,[rip+0x5f149]        # 0x140094860
   140035717:	call   0x14001bf4c
   14003571c:	mov    ecx,0x8005
   140035721:	call   QWORD PTR [rip+0x36a69]        # 0x14006c190
   140035727:	xor    ecx,ecx
   140035729:	call   QWORD PTR [rip+0x36c21]        # 0x14006c350
   14003572f:	mov    rdx,rax
   140035732:	xor    r8d,r8d
   140035735:	lea    rcx,[rip+0x5f0b4]        # 0x1400947f0
   14003573c:	call   0x14003ffdc
   140035741:	lea    rdx,[rip+0x3a278]        # 0x14006f9c0
   140035748:	lea    rcx,[rip+0x5f0b1]        # 0x140094800
   14003574f:	call   0x14003f980
   140035754:	mov    BYTE PTR [rsp+0x50],0x0
   140035759:	xor    ecx,ecx
   14003575b:	call   0x1400137f4
   140035760:	mov    BYTE PTR [rip+0x4d80e],al        # 0x140082f74
   140035766:	mov    ecx,0xa7a0
   14003576b:	call   0x140055dac
   140035770:	mov    QWORD PTR [rsp+0x58],rax
   140035775:	test   rax,rax
   140035778:	je     0x140035787
   14003577a:	mov    rcx,rax
   14003577d:	call   0x1400139d0
   140035782:	mov    rbx,rax
   140035785:	jmp    0x140035789
   140035787:	xor    ebx,ebx
   140035789:	mov    r9,rdi
   14003578c:	mov    r8d,esi
   14003578f:	mov    dl,0x1
   140035791:	mov    rcx,rbx
   140035794:	call   0x1400145d4
   140035799:	cmp    BYTE PTR [rbx+0x201c],0x0
   1400357a0:	jne    0x1400357b2
   1400357a2:	mov    rcx,rbx
   1400357a5:	call   0x140016374
   1400357aa:	mov    rcx,rbx
   1400357ad:	call   0x140014700
   1400357b2:	mov    r9,rdi
   1400357b5:	mov    r8d,esi
   1400357b8:	xor    edx,edx
   1400357ba:	mov    rcx,rbx
   1400357bd:	call   0x1400145d4
   1400357c2:	mov    al,BYTE PTR [rbx+0x73c1]
   1400357c8:	mov    BYTE PTR [rsp+0x50],al
   1400357cc:	mov    cl,BYTE PTR [rbx+0x6138]
   1400357d2:	call   0x140048838
   1400357d7:	mov    edx,DWORD PTR [rbx+0x402c]
   1400357dd:	mov    ecx,DWORD PTR [rbx+0x6134]
   1400357e3:	call   0x140017038
   1400357e8:	lea    rcx,[rbx+0x5134]
   1400357ef:	mov    edx,DWORD PTR [rbx+0x4028]
   1400357f5:	call   0x140017048
   1400357fa:	cmp    BYTE PTR [rbx+0x619c],0x0
   140035801:	jne    0x140035810
   140035803:	cmp    DWORD PTR [rbx+0x6134],0x3
   14003580a:	je     0x140035810
   14003580c:	xor    al,al
   14003580e:	jmp    0x140035812
   140035810:	mov    al,0x1
   140035812:	mov    BYTE PTR [rip+0x5f051],al        # 0x140094869
   140035818:	mov    rcx,rbx
   14003581b:	call   0x14001416c
   140035820:	mov    rcx,rbx
   140035823:	call   0x1400148a4
   140035828:	mov    rcx,rbx
   14003582b:	call   0x1400016e8
   140035830:	mov    edx,0xa7a0
   140035835:	mov    rcx,rbx
   140035838:	call   0x140055de8
   14003583d:	nop
   14003583e:	lea    rcx,[rip+0x5effb]        # 0x140094840
   140035845:	call   0x140025c5c
   14003584a:	cmp    BYTE PTR [rsp+0x50],0x0
   14003584f:	je     0x14003585f
   140035851:	cmp    BYTE PTR [rip+0x5f012],0x0        # 0x14009486a
   140035858:	jne    0x14003585f
   14003585a:	call   0x140046b1c
   14003585f:	mov    BYTE PTR [rip+0x5f006],0x1        # 0x14009486c
   140035866:	mov    eax,DWORD PTR [rip+0x5eff4]        # 0x140094860
   14003586c:	mov    rbx,QWORD PTR [rsp+0x40]
   140035871:	mov    rsi,QWORD PTR [rsp+0x48]
   140035876:	add    rsp,0x30
   14003587a:	pop    rdi
   14003587b:	ret    
   14003587c:	rex push rbx
   14003587e:	sub    rsp,0x20
   140035882:	mov    dl,0x1
   140035884:	mov    rbx,rcx
   140035887:	call   0x140023d74
   14003588c:	and    QWORD PTR [rbx+0x18],0x0
   140035891:	mov    rax,rbx
   140035894:	add    rsp,0x20
   140035898:	pop    rbx
   140035899:	ret    
   14003589a:	int3   
   14003589b:	int3   
   14003589c:	rex push rbx
   14003589e:	sub    rsp,0x20
   1400358a2:	mov    rbx,rcx
   1400358a5:	mov    rcx,QWORD PTR [rcx+0x18]
   1400358a9:	call   0x140055de8
   1400358ae:	mov    rcx,rbx
   1400358b1:	add    rsp,0x20
   1400358b5:	pop    rbx
   1400358b6:	jmp    0x140023db4
   1400358bb:	int3   
   1400358bc:	mov    QWORD PTR [rsp+0x8],rbx
   1400358c1:	mov    QWORD PTR [rsp+0x10],rsi
   1400358c6:	push   rdi
   1400358c7:	sub    rsp,0x20
   1400358cb:	add    QWORD PTR [rcx+0x8],rdx
   1400358cf:	mov    rbx,rcx
   1400358d2:	mov    rax,QWORD PTR [rcx+0x8]
   1400358d6:	cmp    rax,QWORD PTR [rcx+0x10]
   1400358da:	jbe    0x14003594b
   1400358dc:	mov    r8,QWORD PTR [rcx+0x18]
   1400358e0:	test   r8,r8
   1400358e3:	je     0x140035909
   1400358e5:	cmp    rax,r8
   1400358e8:	jbe    0x140035909
   1400358ea:	lea    rdx,[rip+0x3a16f]        # 0x14006fa60
   1400358f1:	lea    rcx,[rip+0x5ef68]        # 0x140094860
   1400358f8:	call   0x14001bc8c
   1400358fd:	lea    rcx,[rip+0x5ef5c]        # 0x140094860
   140035904:	call   0x14001bd24
   140035909:	mov    rdx,QWORD PTR [rbx+0x10]
   14003590d:	mov    rcx,QWORD PTR [rbx]
   140035910:	mov    rax,rdx
   140035913:	shr    rax,0x2
   140035917:	lea    rdi,[rdx+0x20]
   14003591b:	add    rdi,rax
   14003591e:	cmp    QWORD PTR [rbx+0x8],rdi
   140035922:	cmova  rdi,QWORD PTR [rbx+0x8]
   140035927:	imul   rdx,rdi,0x38
   14003592b:	call   0x14005a940
   140035930:	mov    rsi,rax
   140035933:	test   rax,rax
   140035936:	jne    0x140035944
   140035938:	lea    rcx,[rip+0x5ef21]        # 0x140094860
   14003593f:	call   0x14001bd24
   140035944:	mov    QWORD PTR [rbx],rsi
   140035947:	mov    QWORD PTR [rbx+0x10],rdi
   14003594b:	mov    rbx,QWORD PTR [rsp+0x30]
   140035950:	mov    rsi,QWORD PTR [rsp+0x38]
   140035955:	add    rsp,0x20
   140035959:	pop    rdi
   14003595a:	ret    
   14003595b:	int3   
   14003595c:	mov    QWORD PTR [rsp+0x8],rbx
   140035961:	mov    QWORD PTR [rsp+0x10],rbp
   140035966:	mov    QWORD PTR [rsp+0x18],rsi
   14003596b:	push   rdi
   14003596c:	sub    rsp,0x20
   140035970:	movups xmm0,XMMWORD PTR [rdx+0x70]
   140035974:	mov    esi,0x2000
   140035979:	mov    rbx,rdx
   14003597c:	mov    ebp,esi
   14003597e:	mov    rdi,rcx
   140035981:	movups XMMWORD PTR [rcx+0x20],xmm0
   140035985:	movsd  xmm1,QWORD PTR [rdx+0x80]
   14003598d:	movsd  QWORD PTR [rcx+0x30],xmm1
   140035992:	mov    eax,DWORD PTR [rdx+0x88]
   140035998:	mov    DWORD PTR [rcx+0x38],eax
   14003599b:	cmp    QWORD PTR [rdx+0x38],rsi
   14003599f:	cmovb  rbp,QWORD PTR [rdx+0x38]
   1400359a4:	test   rbp,rbp
   1400359a7:	je     0x1400359c0
   1400359a9:	mov    rcx,QWORD PTR [rcx+0x18]
   1400359ad:	mov    r8,rbp
   1400359b0:	mov    rdx,QWORD PTR [rdx+0x30]
   1400359b4:	add    rcx,0x3c000
   1400359bb:	call   0x140059180
   1400359c0:	sub    rsi,rbp
   1400359c3:	cmp    QWORD PTR [rbx+0x58],rsi
   1400359c7:	cmovb  rsi,QWORD PTR [rbx+0x58]
   1400359cc:	test   rsi,rsi
   1400359cf:	je     0x1400359eb
   1400359d1:	mov    rcx,QWORD PTR [rdi+0x18]
   1400359d5:	mov    r8,rsi
   1400359d8:	mov    rdx,QWORD PTR [rbx+0x50]
   1400359dc:	add    rcx,0x3c000
   1400359e3:	add    rcx,rbp
   1400359e6:	call   0x140059180
   1400359eb:	mov    ebp,0x40000
   1400359f0:	mov    DWORD PTR [rdi+0x3c],ebp
   1400359f3:	and    DWORD PTR [rdi+0x40],0x0
   1400359f7:	mov    rsi,QWORD PTR [rbx+0x20]
   1400359fb:	test   rsi,rsi
   1400359fe:	jne    0x140035a03
   140035a00:	mov    rsi,QWORD PTR [rbx]
   140035a03:	mov    r8d,DWORD PTR [rbx+0x28]
   140035a07:	test   r8d,r8d
   140035a0a:	jle    0x140035a21
   140035a0c:	mov    rdx,rsi
   140035a0f:	mov    rcx,rdi
   140035a12:	call   0x140035ab8
   140035a17:	test   al,al
   140035a19:	jne    0x140035a21
   140035a1b:	mov    DWORD PTR [rsi],0x16
   140035a21:	mov    r8,QWORD PTR [rdi+0x18]
   140035a25:	mov    eax,0x3ffff
   140035a2a:	mov    ecx,DWORD PTR [r8+0x3c020]
   140035a31:	mov    edx,DWORD PTR [r8+0x3c01c]
   140035a38:	and    ecx,eax
   140035a3a:	and    edx,eax
   140035a3c:	lea    eax,[rdx+rcx*1]
   140035a3f:	cmp    eax,ebp
   140035a41:	jb     0x140035a47
   140035a43:	xor    edx,edx
   140035a45:	xor    ecx,ecx
   140035a47:	mov    eax,ecx
   140035a49:	lea    rsi,[rbx+0x30]
   140035a4d:	add    rax,r8
   140035a50:	mov    DWORD PTR [rbx+0x98],edx
   140035a56:	mov    rcx,rsi
   140035a59:	mov    QWORD PTR [rbx+0x90],rax
   140035a60:	call   0x140009a60
   140035a65:	mov    rax,QWORD PTR [rdi+0x18]
   140035a69:	mov    edx,DWORD PTR [rax+0x3c030]
   140035a6f:	mov    eax,0x1fc0
   140035a74:	cmp    edx,eax
   140035a76:	cmovb  eax,edx
   140035a79:	test   eax,eax
   140035a7b:	je     0x140035aa2
   140035a7d:	add    eax,0x40
   140035a80:	mov    rcx,rsi
   140035a83:	mov    edx,eax
   140035a85:	mov    ebx,eax
   140035a87:	call   0x140001858
   140035a8c:	mov    rdx,QWORD PTR [rdi+0x18]
   140035a90:	mov    r8d,ebx
   140035a93:	mov    rcx,QWORD PTR [rsi]
   140035a96:	add    rdx,0x3c000
   140035a9d:	call   0x140059180
   140035aa2:	mov    rbx,QWORD PTR [rsp+0x30]
   140035aa7:	mov    rbp,QWORD PTR [rsp+0x38]
   140035aac:	mov    rsi,QWORD PTR [rsp+0x40]
   140035ab1:	add    rsp,0x20
   140035ab5:	pop    rdi
   140035ab6:	ret    
   140035ab7:	int3   
   140035ab8:	rex push rbx
   140035aba:	sub    rsp,0x20
   140035abe:	mov    ebx,r8d
   140035ac1:	mov    r11,rdx
   140035ac4:	mov    r10,rcx
   140035ac7:	mov    r9d,0x17d7840
   140035acd:	cmp    DWORD PTR [rdx],0x16
   140035ad0:	je     0x140035ae0
   140035ad2:	cmp    DWORD PTR [rdx],0x28
   140035ad5:	je     0x140035b1b
   140035ad7:	add    rdx,0x38
   140035adb:	dec    r9d
   140035ade:	jmp    0x140035acd
   140035ae0:	mov    r8d,DWORD PTR [r10+0x3c]
   140035ae4:	cmp    r8d,0x40000
   140035aeb:	jae    0x140035b26
   140035aed:	mov    rax,QWORD PTR [r10+0x18]
   140035af1:	mov    ecx,r8d
   140035af4:	and    ecx,0x3ffff
   140035afa:	cmp    DWORD PTR [rcx+rax*1],ebx
   140035afd:	jae    0x140035b26
   140035aff:	dec    r9d
   140035b02:	test   r9d,r9d
   140035b05:	jle    0x140035b2e
   140035b07:	mov    eax,DWORD PTR [rcx+rax*1]
   140035b0a:	imul   rdx,rax,0x38
   140035b0e:	lea    eax,[r8+0x4]
   140035b12:	add    rdx,r11
   140035b15:	mov    DWORD PTR [r10+0x3c],eax
   140035b19:	jmp    0x140035acd
   140035b1b:	mov    edx,DWORD PTR [rdx+0xc]
   140035b1e:	mov    rcx,r10
   140035b21:	call   0x140035b34
   140035b26:	mov    al,0x1
   140035b28:	add    rsp,0x20
   140035b2c:	pop    rbx
   140035b2d:	ret    
   140035b2e:	xor    al,al
   140035b30:	jmp    0x140035b28
   140035b32:	int3   
   140035b33:	int3   
   140035b34:	test   edx,edx
   140035b36:	jle    0x140036162
   140035b3c:	mov    rax,rsp
   140035b3f:	mov    QWORD PTR [rax+0x10],rbx
   140035b43:	mov    QWORD PTR [rax+0x18],rsi
   140035b47:	mov    QWORD PTR [rax+0x20],rdi
   140035b4b:	push   rbp
   140035b4c:	push   r12
   140035b4e:	push   r13
   140035b50:	push   r14
   140035b52:	push   r15
   140035b54:	lea    rbp,[rax-0x5f]
   140035b58:	sub    rsp,0x90
   140035b5f:	mov    rax,QWORD PTR [rip+0x4c37a]        # 0x140081ee0
   140035b66:	xor    rax,rsp
   140035b69:	mov    QWORD PTR [rbp+0x2f],rax
   140035b6d:	mov    rbx,rcx
   140035b70:	cmp    edx,0x2
   140035b73:	jle    0x1400360be
   140035b79:	cmp    edx,0x3
   140035b7c:	je     0x140035f64
   140035b82:	cmp    edx,0x4
   140035b85:	je     0x140035e0d
   140035b8b:	cmp    edx,0x5
   140035b8e:	je     0x140035bff
   140035b90:	cmp    edx,0x6
   140035b93:	jne    0x140036136
   140035b99:	movsxd rcx,DWORD PTR [rcx+0x30]
   140035b9d:	mov    rax,QWORD PTR [rbx+0x18]
   140035ba1:	movsxd r8,DWORD PTR [rbx+0x20]
   140035ba5:	lea    edx,[rcx+rcx*1]
   140035ba8:	mov    DWORD PTR [rax+0x3c020],ecx
   140035bae:	cmp    ecx,0x1e000
   140035bb4:	jae    0x140036136
   140035bba:	test   r8d,r8d
   140035bbd:	jle    0x140036136
   140035bc3:	movsxd rdi,edx
   140035bc6:	xor    r10d,r10d
   140035bc9:	mov    rdx,rcx
   140035bcc:	mov    r11d,r8d
   140035bcf:	xor    r9b,r9b
   140035bd2:	mov    rcx,rdx
   140035bd5:	cmp    rdx,rdi
   140035bd8:	jge    0x140035bf1
   140035bda:	mov    rax,QWORD PTR [rbx+0x18]
   140035bde:	sub    r9b,BYTE PTR [rax+r10*1]
   140035be2:	inc    r10
   140035be5:	mov    BYTE PTR [rax+rcx*1],r9b
   140035be9:	add    rcx,r8
   140035bec:	cmp    rcx,rdi
   140035bef:	jl     0x140035bda
   140035bf1:	inc    rdx
   140035bf4:	sub    r11,0x1
   140035bf8:	jne    0x140035bcf
   140035bfa:	jmp    0x140036136
   140035bff:	movsxd rdi,DWORD PTR [rcx+0x30]
   140035c03:	mov    r13,QWORD PTR [rcx+0x18]
   140035c07:	movsxd rax,DWORD PTR [rcx+0x20]
   140035c0b:	mov    DWORD PTR [rbp-0x19],eax
   140035c0e:	mov    DWORD PTR [r13+0x3c020],edi
   140035c15:	lea    r15,[rdi+r13*1]
   140035c19:	mov    QWORD PTR [rbp-0x1],r15
   140035c1d:	cmp    edi,0x1e000
   140035c23:	jae    0x140036136
   140035c29:	xor    esi,esi
   140035c2b:	mov    QWORD PTR [rbp-0x9],rax
   140035c2f:	xor    ebx,ebx
   140035c31:	mov    DWORD PTR [rbp-0x11],esi
   140035c34:	mov    QWORD PTR [rbp+0x7],rbx
   140035c38:	mov    r14,rax
   140035c3b:	test   eax,eax
   140035c3d:	jle    0x140036136
   140035c43:	and    DWORD PTR [rbp-0x21],0x0
   140035c47:	xor    r8d,r8d
   140035c4a:	xor    eax,eax
   140035c4c:	mov    QWORD PTR [rbp+0xf],r8
   140035c50:	and    DWORD PTR [rbp-0x29],eax
   140035c53:	xor    ecx,ecx
   140035c55:	xor    edx,edx
   140035c57:	mov    DWORD PTR [rbp-0x1d],ecx
   140035c5a:	xor    r9d,r9d
   140035c5d:	mov    QWORD PTR [rbp+0x17],r8
   140035c61:	xor    r10d,r10d
   140035c64:	mov    QWORD PTR [rbp+0x1f],r8
   140035c68:	xor    r11d,r11d
   140035c6b:	mov    DWORD PTR [rbp+0x27],r8d
   140035c6f:	mov    r12d,esi
   140035c72:	cmp    esi,edi
   140035c74:	jge    0x140035df3
   140035c7a:	lea    rsi,[rbx+r15*1]
   140035c7e:	mov    r15d,DWORD PTR [rbp-0x19]
   140035c82:	mov    ebx,DWORD PTR [rbp-0x29]
   140035c85:	mov    r8d,eax
   140035c88:	mov    DWORD PTR [rbp-0x29],ecx
   140035c8b:	mov    eax,ecx
   140035c8d:	mov    ecx,r8d
   140035c90:	sub    eax,edx
   140035c92:	imul   ecx,r11d
   140035c96:	mov    DWORD PTR [rbp-0x25],eax
   140035c99:	mov    eax,r10d
   140035c9c:	imul   eax,DWORD PTR [rbp-0x25]
   140035ca0:	movzx  edx,BYTE PTR [r13+0x0]
   140035ca5:	inc    r13
   140035ca8:	add    ecx,eax
   140035caa:	mov    eax,r9d
   140035cad:	imul   eax,DWORD PTR [rbp-0x1d]
   140035cb1:	add    ecx,eax
   140035cb3:	mov    eax,DWORD PTR [rbp-0x21]
   140035cb6:	lea    eax,[rcx+rax*8]
   140035cb9:	shr    eax,0x3
   140035cbc:	movzx  ecx,al
   140035cbf:	sub    ecx,edx
   140035cc1:	mov    al,cl
   140035cc3:	mov    BYTE PTR [rsi],cl
   140035cc5:	sub    al,BYTE PTR [rbp-0x21]
   140035cc8:	movsx  eax,al
   140035ccb:	mov    DWORD PTR [rbp-0x1d],eax
   140035cce:	mov    DWORD PTR [rbp-0x21],ecx
   140035cd1:	movsx  ecx,dl
   140035cd4:	shl    ecx,0x3
   140035cd7:	mov    eax,ecx
   140035cd9:	cdq    
   140035cda:	xor    eax,edx
   140035cdc:	sub    eax,edx
   140035cde:	mov    edx,DWORD PTR [rbp+0xf]
   140035ce1:	add    edx,eax
   140035ce3:	mov    eax,ecx
   140035ce5:	sub    eax,DWORD PTR [rbp-0x29]
   140035ce8:	mov    DWORD PTR [rbp-0x15],edx
   140035ceb:	mov    DWORD PTR [rbp+0xf],edx
   140035cee:	cdq    
   140035cef:	xor    eax,edx
   140035cf1:	sub    eax,edx
   140035cf3:	add    DWORD PTR [rbp+0x13],eax
   140035cf6:	mov    eax,DWORD PTR [rbp-0x29]
   140035cf9:	add    eax,ecx
   140035cfb:	cdq    
   140035cfc:	xor    eax,edx
   140035cfe:	sub    eax,edx
   140035d00:	add    DWORD PTR [rbp+0x17],eax
   140035d03:	mov    eax,ecx
   140035d05:	sub    eax,DWORD PTR [rbp-0x25]
   140035d08:	cdq    
   140035d09:	xor    eax,edx
   140035d0b:	sub    eax,edx
   140035d0d:	add    DWORD PTR [rbp+0x1b],eax
   140035d10:	mov    eax,DWORD PTR [rbp-0x25]
   140035d13:	add    eax,ecx
   140035d15:	cdq    
   140035d16:	xor    eax,edx
   140035d18:	sub    eax,edx
   140035d1a:	add    DWORD PTR [rbp+0x1f],eax
   140035d1d:	mov    eax,ecx
   140035d1f:	sub    eax,r8d
   140035d22:	cdq    
   140035d23:	xor    eax,edx
   140035d25:	sub    eax,edx
   140035d27:	add    DWORD PTR [rbp+0x23],eax
   140035d2a:	lea    eax,[rcx+r8*1]
   140035d2e:	cdq    
   140035d2f:	xor    eax,edx
   140035d31:	sub    eax,edx
   140035d33:	add    DWORD PTR [rbp+0x27],eax
   140035d36:	test   bl,0x1f
   140035d39:	jne    0x140035dce
   140035d3f:	mov    r14d,DWORD PTR [rbp-0x15]
   140035d43:	lea    r8,[rbp+0x13]
   140035d47:	xor    ecx,ecx
   140035d49:	and    DWORD PTR [rbp+0xf],ecx
   140035d4c:	lea    edx,[rcx+0x1]
   140035d4f:	cmp    DWORD PTR [r8],r14d
   140035d52:	jae    0x140035d59
   140035d54:	mov    r14d,DWORD PTR [r8]
   140035d57:	mov    ecx,edx
   140035d59:	and    DWORD PTR [r8],0x0
   140035d5d:	inc    edx
   140035d5f:	movsxd rax,edx
   140035d62:	add    r8,0x4
   140035d66:	cmp    rax,0x7
   140035d6a:	jb     0x140035d4f
   140035d6c:	mov    r14,QWORD PTR [rbp-0x9]
   140035d70:	sub    ecx,0x1
   140035d73:	je     0x140035dc5
   140035d75:	sub    ecx,0x1
   140035d78:	je     0x140035dba
   140035d7a:	sub    ecx,0x1
   140035d7d:	je     0x140035daf
   140035d7f:	sub    ecx,0x1
   140035d82:	je     0x140035da4
   140035d84:	sub    ecx,0x1
   140035d87:	je     0x140035d99
   140035d89:	cmp    ecx,0x1
   140035d8c:	jne    0x140035dce
   140035d8e:	cmp    r11d,0x10
   140035d92:	jge    0x140035dce
   140035d94:	inc    r11d
   140035d97:	jmp    0x140035dce
   140035d99:	cmp    r11d,0xfffffff0
   140035d9d:	jl     0x140035dce
   140035d9f:	dec    r11d
   140035da2:	jmp    0x140035dce
   140035da4:	cmp    r10d,0x10
   140035da8:	jge    0x140035dce
   140035daa:	inc    r10d
   140035dad:	jmp    0x140035dce
   140035daf:	cmp    r10d,0xfffffff0
   140035db3:	jl     0x140035dce
   140035db5:	dec    r10d
   140035db8:	jmp    0x140035dce
   140035dba:	cmp    r9d,0x10
   140035dbe:	jge    0x140035dce
   140035dc0:	inc    r9d
   140035dc3:	jmp    0x140035dce
   140035dc5:	cmp    r9d,0xfffffff0
   140035dc9:	jl     0x140035dce
   140035dcb:	dec    r9d
   140035dce:	mov    eax,DWORD PTR [rbp-0x25]
   140035dd1:	add    r12d,r15d
   140035dd4:	mov    ecx,DWORD PTR [rbp-0x1d]
   140035dd7:	add    rsi,r14
   140035dda:	mov    edx,DWORD PTR [rbp-0x29]
   140035ddd:	inc    ebx
   140035ddf:	cmp    r12d,edi
   140035de2:	jl     0x140035c85
   140035de8:	mov    rbx,QWORD PTR [rbp+0x7]
   140035dec:	mov    esi,DWORD PTR [rbp-0x11]
   140035def:	mov    r15,QWORD PTR [rbp-0x1]
   140035df3:	inc    esi
   140035df5:	inc    rbx
   140035df8:	mov    DWORD PTR [rbp-0x11],esi
   140035dfb:	mov    QWORD PTR [rbp+0x7],rbx
   140035dff:	cmp    rbx,r14
   140035e02:	jl     0x140035c43
   140035e08:	jmp    0x140036136
   140035e0d:	movsxd r9,DWORD PTR [rcx+0x30]
   140035e11:	mov    eax,DWORD PTR [rcx+0x20]
   140035e14:	mov    rsi,QWORD PTR [rbx+0x18]
   140035e18:	sub    eax,0x3
   140035e1b:	mov    ecx,DWORD PTR [rcx+0x24]
   140035e1e:	mov    DWORD PTR [rbp-0x15],r9d
   140035e22:	mov    DWORD PTR [rbp-0x19],ecx
   140035e25:	mov    DWORD PTR [rsi+0x3c020],r9d
   140035e2c:	lea    rdi,[rsi+r9*1]
   140035e30:	mov    QWORD PTR [rbp-0x9],rdi
   140035e34:	cmp    r9d,0x1e000
   140035e3b:	jae    0x140036136
   140035e41:	test   eax,eax
   140035e43:	js     0x140036136
   140035e49:	test   ecx,ecx
   140035e4b:	js     0x140036136
   140035e51:	movsxd rcx,eax
   140035e54:	xor    r11d,r11d
   140035e57:	mov    rbx,rdi
   140035e5a:	mov    QWORD PTR [rbp-0x1],rcx
   140035e5e:	sub    rbx,rcx
   140035e61:	xor    r8d,r8d
   140035e64:	cmp    r11d,r9d
   140035e67:	jge    0x140035f0c
   140035e6d:	mov    ecx,r9d
   140035e70:	mov    r12,rdi
   140035e73:	mov    rdi,QWORD PTR [rbp-0x1]
   140035e77:	sub    ecx,r11d
   140035e7a:	dec    ecx
   140035e7c:	mov    eax,0xaaaaaaab
   140035e81:	mul    ecx
   140035e83:	neg    r12
   140035e86:	mov    r10,rbx
   140035e89:	shr    edx,1
   140035e8b:	lea    r9d,[rdx+0x1]
   140035e8f:	lea    rax,[r12+r10*1]
   140035e93:	cmp    rax,0x3
   140035e97:	jl     0x140035eec
   140035e99:	movzx  r13d,BYTE PTR [r10]
   140035e9d:	movzx  eax,BYTE PTR [r10-0x3]
   140035ea2:	mov    ecx,r13d
   140035ea5:	sub    ecx,eax
   140035ea7:	add    ecx,r8d
   140035eaa:	mov    eax,ecx
   140035eac:	sub    eax,r8d
   140035eaf:	cdq    
   140035eb0:	mov    r14d,eax
   140035eb3:	mov    eax,ecx
   140035eb5:	sub    eax,r13d
   140035eb8:	xor    r14d,edx
   140035ebb:	sub    r14d,edx
   140035ebe:	cdq    
   140035ebf:	mov    r15d,eax
   140035ec2:	movzx  eax,BYTE PTR [r10-0x3]
   140035ec7:	sub    ecx,eax
   140035ec9:	xor    r15d,edx
   140035ecc:	sub    r15d,edx
   140035ecf:	mov    eax,ecx
   140035ed1:	cdq    
   140035ed2:	xor    eax,edx
   140035ed4:	sub    eax,edx
   140035ed6:	cmp    r14d,r15d
   140035ed9:	jg     0x140035ee0
   140035edb:	cmp    r14d,eax
   140035ede:	jle    0x140035eec
   140035ee0:	movzx  r8d,BYTE PTR [r10-0x3]
   140035ee5:	cmp    r15d,eax
   140035ee8:	cmovle r8d,r13d
   140035eec:	sub    r8b,BYTE PTR [rsi]
   140035eef:	inc    rsi
   140035ef2:	movzx  r8d,r8b
   140035ef6:	mov    BYTE PTR [rdi+r10*1],r8b
   140035efa:	add    r10,0x3
   140035efe:	sub    r9,0x1
   140035f02:	jne    0x140035e8f
   140035f04:	mov    r9d,DWORD PTR [rbp-0x15]
   140035f08:	mov    rdi,QWORD PTR [rbp-0x9]
   140035f0c:	inc    r11d
   140035f0f:	inc    rbx
   140035f12:	cmp    r11d,0x3
   140035f16:	jl     0x140035e61
   140035f1c:	movsxd r8,DWORD PTR [rbp-0x19]
   140035f20:	lea    eax,[r9-0x2]
   140035f24:	movsxd rdx,eax
   140035f27:	cmp    r8,rdx
   140035f2a:	jge    0x140036136
   140035f30:	sub    rdx,r8
   140035f33:	lea    rcx,[r8+rdi*1]
   140035f37:	dec    rdx
   140035f3a:	movabs rax,0xaaaaaaaaaaaaaaab
   140035f44:	mul    rdx
   140035f47:	shr    rdx,1
   140035f4a:	inc    rdx
   140035f4d:	mov    al,BYTE PTR [rcx+0x1]
   140035f50:	add    BYTE PTR [rcx],al
   140035f52:	add    BYTE PTR [rcx+0x2],al
   140035f55:	lea    rcx,[rcx+0x3]
   140035f59:	sub    rdx,0x1
   140035f5d:	jne    0x140035f4d
   140035f5f:	jmp    0x140036136
   140035f64:	mov    eax,DWORD PTR [rcx+0x30]
   140035f67:	mov    rdi,QWORD PTR [rcx+0x18]
   140035f6b:	cmp    eax,0x3c000
   140035f70:	jae    0x140036136
   140035f76:	cmp    eax,0x15
   140035f79:	jl     0x140036136
   140035f7f:	mov    r14d,DWORD PTR [rcx+0x38]
   140035f83:	add    eax,0xffffffeb
   140035f86:	shr    r14d,0x4
   140035f8a:	test   eax,eax
   140035f8c:	jle    0x140036136
   140035f92:	lea    r12d,[rax-0x1]
   140035f96:	shr    r12d,0x4
   140035f9a:	inc    r12d
   140035f9d:	movzx  eax,BYTE PTR [rdi]
   140035fa0:	and    eax,0x1f
   140035fa3:	sub    eax,0x10
   140035fa6:	js     0x1400360ab
   140035fac:	cdqe   
   140035fae:	lea    rcx,[rip+0x4b953]        # 0x140081908
   140035fb5:	cmp    BYTE PTR [rax+rcx*1],0x0
   140035fb9:	je     0x1400360ab
   140035fbf:	movzx  r13d,BYTE PTR [rax+rcx*1]
   140035fc4:	xor    r15d,r15d
   140035fc7:	lea    esi,[r15+0x12]
   140035fcb:	bt     r13d,r15d
   140035fcf:	jae    0x14003609c
   140035fd5:	lea    r11d,[rsi+0x18]
   140035fd9:	mov    eax,r11d
   140035fdc:	and    r11d,0x7
   140035fe0:	cdq    
   140035fe1:	and    edx,0x7
   140035fe4:	add    eax,edx
   140035fe6:	sar    eax,0x3
   140035fe9:	movsxd rcx,eax
   140035fec:	inc    eax
   140035fee:	movzx  r10d,BYTE PTR [rcx+rdi*1]
   140035ff3:	movsxd rcx,eax
   140035ff6:	inc    eax
   140035ff8:	movzx  edx,BYTE PTR [rcx+rdi*1]
   140035ffc:	mov    cl,r11b
   140035fff:	shl    edx,0x8
   140036002:	or     r10d,edx
   140036005:	lea    edx,[rax+0x1]
   140036008:	movsxd r8,edx
   14003600b:	cdqe   
   14003600d:	movzx  r9d,BYTE PTR [r8+rdi*1]
   140036012:	movzx  edx,BYTE PTR [rax+rdi*1]
   140036016:	shl    r9d,0x8
   14003601a:	or     r9d,edx
   14003601d:	shl    r9d,0x10
   140036021:	or     r9d,r10d
   140036024:	shr    r9d,cl
   140036027:	and    r9d,0xf
   14003602b:	cmp    r9b,0x5
   14003602f:	jne    0x14003609c
   140036031:	mov    eax,esi
   140036033:	mov    DWORD PTR [rsp+0x20],0x14
   14003603b:	cdq    
   14003603c:	and    edx,0x7
   14003603f:	add    eax,edx
   140036041:	sar    eax,0x3
   140036044:	movsxd rcx,eax
   140036047:	inc    eax
   140036049:	movzx  r9d,BYTE PTR [rcx+rdi*1]
   14003604e:	movsxd rcx,eax
   140036051:	inc    eax
   140036053:	movzx  edx,BYTE PTR [rcx+rdi*1]
   140036057:	lea    ecx,[rax+0x1]
   14003605a:	shl    edx,0x8
   14003605d:	or     r9d,edx
   140036060:	cdqe   
   140036062:	movsxd rdx,ecx
   140036065:	movzx  ecx,BYTE PTR [rax+rdi*1]
   140036069:	movzx  r8d,BYTE PTR [rdx+rdi*1]
   14003606e:	mov    rdx,rdi
   140036071:	shl    r8d,0x8
   140036075:	or     r8d,ecx
   140036078:	mov    ecx,esi
   14003607a:	shl    r8d,0x10
   14003607e:	and    ecx,0x7
   140036081:	or     r8d,r9d
   140036084:	mov    r9d,esi
   140036087:	shr    r8d,cl
   14003608a:	mov    rcx,rbx
   14003608d:	sub    r8d,r14d
   140036090:	and    r8d,0xfffff
   140036097:	call   0x140036164
   14003609c:	inc    r15d
   14003609f:	add    esi,0x29
   1400360a2:	cmp    esi,0x64
   1400360a5:	jle    0x140035fcb
   1400360ab:	add    rdi,0x10
   1400360af:	inc    r14d
   1400360b2:	sub    r12,0x1
   1400360b6:	jne    0x140035f9d
   1400360bc:	jmp    0x140036136
   1400360be:	mov    eax,DWORD PTR [rbx+0x30]
   1400360c1:	mov    rcx,QWORD PTR [rcx+0x18]
   1400360c5:	mov    r8d,DWORD PTR [rbx+0x38]
   1400360c9:	cmp    eax,0x3c000
   1400360ce:	jae    0x140036136
   1400360d0:	cmp    eax,0x4
   1400360d3:	jl     0x140036136
   1400360d5:	cmp    edx,0x2
   1400360d8:	lea    r11d,[rax-0x4]
   1400360dc:	sete   r10b
   1400360e0:	xor    r9d,r9d
   1400360e3:	add    r10b,0xe8
   1400360e7:	test   r11d,r11d
   1400360ea:	jle    0x140036136
   1400360ec:	mov    al,BYTE PTR [rcx]
   1400360ee:	inc    r9d
   1400360f1:	inc    rcx
   1400360f4:	inc    r8d
   1400360f7:	cmp    al,0xe8
   1400360f9:	je     0x140036100
   1400360fb:	cmp    al,r10b
   1400360fe:	jne    0x140036131
   140036100:	mov    edx,DWORD PTR [rcx]
   140036102:	test   edx,edx
   140036104:	jns    0x140036118
   140036106:	lea    eax,[r8+rdx*1]
   14003610a:	test   eax,eax
   14003610c:	js     0x140036125
   14003610e:	lea    eax,[rdx+0x1000000]
   140036114:	mov    DWORD PTR [rcx],eax
   140036116:	jmp    0x140036125
   140036118:	cmp    edx,0x1000000
   14003611e:	jge    0x140036125
   140036120:	sub    edx,r8d
   140036123:	mov    DWORD PTR [rcx],edx
   140036125:	add    rcx,0x4
   140036129:	add    r9d,0x4
   14003612d:	add    r8d,0x4
   140036131:	cmp    r9d,r11d
   140036134:	jl     0x1400360ec
   140036136:	mov    rcx,QWORD PTR [rbp+0x2f]
   14003613a:	xor    rcx,rsp
   14003613d:	call   0x140055f90
   140036142:	lea    r11,[rsp+0x90]
   14003614a:	mov    rbx,QWORD PTR [r11+0x38]
   14003614e:	mov    rsi,QWORD PTR [r11+0x40]
   140036152:	mov    rdi,QWORD PTR [r11+0x48]
   140036156:	mov    rsp,r11
   140036159:	pop    r15
   14003615b:	pop    r14
   14003615d:	pop    r13
   14003615f:	pop    r12
   140036161:	pop    rbp
   140036162:	ret    
   140036163:	int3   
   140036164:	mov    r11,rdx
   140036167:	mov    eax,r9d
   14003616a:	and    r9d,0x7
   14003616e:	cdq    
   14003616f:	and    edx,0x7
   140036172:	mov    ecx,0x20
   140036177:	sub    ecx,DWORD PTR [rsp+0x28]
   14003617b:	lea    r10d,[rdx+rax*1]
   14003617f:	or     edx,0xffffffff
   140036182:	shr    edx,cl
   140036184:	mov    ecx,r9d
   140036187:	shl    edx,cl
   140036189:	mov    r9d,0x4
   14003618f:	sar    r10d,0x3
   140036193:	not    edx
   140036195:	shl    r8d,cl
   140036198:	mov    al,BYTE PTR [r10+r11*1]
   14003619c:	and    al,dl
   14003619e:	shr    edx,0x8
   1400361a1:	or     al,r8b
   1400361a4:	or     edx,0xff000000
   1400361aa:	mov    BYTE PTR [r10+r11*1],al
   1400361ae:	inc    r10d
   1400361b1:	shr    r8d,0x8
   1400361b5:	sub    r9,0x1
   1400361b9:	jne    0x140036198
   1400361bb:	ret    
   1400361bc:	rex push rbx
   1400361be:	sub    rsp,0x20
   1400361c2:	cmp    QWORD PTR [rcx+0x18],0x0
   1400361c7:	mov    rbx,rcx
   1400361ca:	jne    0x1400361da
   1400361cc:	mov    ecx,0x40004
   1400361d1:	call   0x140055df0
   1400361d6:	mov    QWORD PTR [rbx+0x18],rax
   1400361da:	add    rsp,0x20
   1400361de:	pop    rbx
   1400361df:	ret    
   1400361e0:	rex push rbx
   1400361e2:	sub    rsp,0x20
   1400361e6:	mov    ebx,r8d
   1400361e9:	or     ecx,0xffffffff
   1400361ec:	mov    r8d,r8d
   1400361ef:	call   0x140017ac0
   1400361f4:	lea    r8,[rip+0x4b6c5]        # 0x1400818c0
   1400361fb:	not    eax
   1400361fd:	mov    rcx,r8
   140036200:	xor    edx,edx
   140036202:	cmp    DWORD PTR [rcx+0x4],eax
   140036205:	jne    0x14003620b
   140036207:	cmp    DWORD PTR [rcx],ebx
   140036209:	je     0x14003621e
   14003620b:	inc    edx
   14003620d:	add    rcx,0xc
   140036211:	cmp    edx,0x6
   140036214:	jb     0x140036202
   140036216:	xor    eax,eax
   140036218:	add    rsp,0x20
   14003621c:	pop    rbx
   14003621d:	ret    
   14003621e:	lea    rcx,[rdx+rdx*2]
   140036222:	mov    eax,DWORD PTR [r8+rcx*4+0x8]
   140036227:	jmp    0x140036218
   140036229:	int3   
   14003622a:	int3   
   14003622b:	int3   
   14003622c:	mov    rax,rsp
   14003622f:	mov    QWORD PTR [rax+0x8],rbx
   140036233:	mov    QWORD PTR [rax+0x10],rbp
   140036237:	mov    QWORD PTR [rax+0x18],rsi
   14003623b:	mov    QWORD PTR [rax+0x20],rdi
   14003623f:	push   r14
   140036241:	sub    rsp,0x20
   140036245:	and    DWORD PTR [rcx+0x4],0x0
   140036249:	mov    eax,0x8000
   14003624e:	and    DWORD PTR [rcx],0x0
   140036251:	mov    ebp,r8d
   140036254:	cmp    r8d,eax
   140036257:	mov    r14,rcx
   14003625a:	mov    rcx,QWORD PTR [rcx+0x10]
   14003625e:	mov    rbx,r9
   140036261:	cmovb  eax,r8d
   140036265:	mov    rdi,rdx
   140036268:	mov    r8d,eax
   14003626b:	call   0x140059180
   140036270:	xor    sil,sil
   140036273:	cmp    ebp,0x1
   140036276:	jbe    0x14003628b
   140036278:	lea    rcx,[rdi+0x1]
   14003627c:	lea    edx,[rbp-0x1]
   14003627f:	xor    sil,BYTE PTR [rcx]
   140036282:	inc    rcx
   140036285:	sub    rdx,0x1
   140036289:	jne    0x14003627f
   14003628b:	mov    edx,0x8
   140036290:	mov    rcx,r14
   140036293:	call   0x140023e04
   140036298:	and    DWORD PTR [rbx+0x28],0x0
   14003629c:	cmp    sil,BYTE PTR [rdi]
   14003629f:	jne    0x1400362fd
   1400362a1:	mov    r8d,ebp
   1400362a4:	mov    rdx,rdi
   1400362a7:	mov    rcx,r14
   1400362aa:	call   0x1400361e0
   1400362af:	mov    edi,eax
   1400362b1:	test   eax,eax
   1400362b3:	je     0x1400362fd
   1400362b5:	mov    edx,0x1
   1400362ba:	mov    rcx,rbx
   1400362bd:	call   0x1400358bc
   1400362c2:	movsxd rcx,DWORD PTR [rbx+0x28]
   1400362c6:	mov    rdx,rcx
   1400362c9:	inc    ecx
   1400362cb:	mov    DWORD PTR [rbx+0x28],ecx
   1400362ce:	imul   rcx,rdx,0x38
   1400362d2:	add    rcx,QWORD PTR [rbx]
   1400362d5:	lea    rax,[rcx+0xc]
   1400362d9:	mov    DWORD PTR [rcx],0x28
   1400362df:	mov    DWORD PTR [rax],edi
   1400362e1:	mov    QWORD PTR [rcx+0x18],rax
   1400362e5:	lea    rax,[rcx+0x24]
   1400362e9:	mov    QWORD PTR [rcx+0x30],rax
   1400362ed:	mov    eax,0x3
   1400362f2:	mov    DWORD PTR [rcx+0x20],eax
   1400362f5:	mov    DWORD PTR [rcx+0x8],eax
   1400362f8:	jmp    0x140036381
   1400362fd:	mov    edx,0x1
   140036302:	mov    rcx,rbx
   140036305:	call   0x1400358bc
   14003630a:	movsxd rax,DWORD PTR [rbx+0x28]
   14003630e:	xor    r8d,r8d
   140036311:	mov    rcx,rax
   140036314:	inc    eax
   140036316:	mov    DWORD PTR [rbx+0x28],eax
   140036319:	imul   rdx,rcx,0x38
   14003631d:	add    rdx,QWORD PTR [rbx]
   140036320:	lea    rax,[rdx+0xc]
   140036324:	mov    DWORD PTR [rdx],0x16
   14003632a:	mov    QWORD PTR [rdx+0x18],rax
   14003632e:	lea    rax,[rdx+0x24]
   140036332:	mov    QWORD PTR [rdx+0x30],rax
   140036336:	mov    eax,0x3
   14003633b:	mov    DWORD PTR [rdx+0x20],eax
   14003633e:	mov    DWORD PTR [rdx+0x8],eax
   140036341:	cmp    DWORD PTR [rbx+0x28],r8d
   140036345:	jle    0x140036381
   140036347:	xor    ecx,ecx
   140036349:	mov    rdx,QWORD PTR [rbx]
   14003634c:	cmp    QWORD PTR [rcx+rdx*1+0x18],0x0
   140036352:	jne    0x140036360
   140036354:	lea    rax,[rdx+0xc]
   140036358:	add    rax,rcx
   14003635b:	mov    QWORD PTR [rcx+rdx*1+0x18],rax
   140036360:	cmp    QWORD PTR [rcx+rdx*1+0x30],0x0
   140036366:	jne    0x140036374
   140036368:	lea    rax,[rdx+0x24]
   14003636c:	add    rax,rcx
   14003636f:	mov    QWORD PTR [rcx+rdx*1+0x30],rax
   140036374:	inc    r8d
   140036377:	add    rcx,0x38
   14003637b:	cmp    r8d,DWORD PTR [rbx+0x28]
   14003637f:	jl     0x140036349
   140036381:	mov    rbx,QWORD PTR [rsp+0x30]
   140036386:	mov    rbp,QWORD PTR [rsp+0x38]
   14003638b:	mov    rsi,QWORD PTR [rsp+0x40]
   140036390:	mov    rdi,QWORD PTR [rsp+0x48]
   140036395:	add    rsp,0x20
   140036399:	pop    r14
   14003639b:	ret    
   14003639c:	mov    QWORD PTR [rsp+0x8],rbx
   1400363a1:	push   rdi
   1400363a2:	sub    rsp,0x20
   1400363a6:	mov    rdi,rcx
   1400363a9:	call   0x140023e1c
   1400363ae:	mov    ebx,eax
   1400363b0:	mov    rcx,rdi
   1400363b3:	and    eax,0xc000
   1400363b8:	je     0x14003643f
   1400363be:	cmp    eax,0x4000
   1400363c3:	je     0x14003641a
   1400363c5:	mov    edx,0x2
   1400363ca:	cmp    eax,0x8000
   1400363cf:	je     0x140036409
   1400363d1:	call   0x140023e04
   1400363d6:	mov    rcx,rdi
   1400363d9:	call   0x140023e1c
   1400363de:	mov    ebx,eax
   1400363e0:	mov    edx,0x10
   1400363e5:	mov    rcx,rdi
   1400363e8:	shl    ebx,0x10
   1400363eb:	call   0x140023e04
   1400363f0:	mov    rcx,rdi
   1400363f3:	call   0x140023e1c
   1400363f8:	or     ebx,eax
   1400363fa:	mov    edx,0x10
   1400363ff:	mov    rcx,rdi
   140036402:	call   0x140023e04
   140036407:	jmp    0x14003644f
   140036409:	call   0x140023e04
   14003640e:	mov    rcx,rdi
   140036411:	call   0x140023e1c
   140036416:	mov    ebx,eax
   140036418:	jmp    0x1400363fa
   14003641a:	test   ebx,0x3c00
   140036420:	jne    0x140036432
   140036422:	shr    ebx,0x2
   140036425:	mov    edx,0xe
   14003642a:	or     ebx,0xffffff00
   140036430:	jmp    0x140036402
   140036432:	shr    ebx,0x6
   140036435:	mov    edx,0xa
   14003643a:	movzx  ebx,bl
   14003643d:	jmp    0x140036402
   14003643f:	mov    edx,0x6
   140036444:	call   0x140023e04
   140036449:	shr    ebx,0xa
   14003644c:	and    ebx,0xf
   14003644f:	mov    eax,ebx
   140036451:	mov    rbx,QWORD PTR [rsp+0x30]
   140036456:	add    rsp,0x20
   14003645a:	pop    rdi
   14003645b:	ret    
   14003645c:	mov    DWORD PTR [rdx],r8d
   14003645f:	ret    
   140036460:	sub    rsp,0x28
   140036464:	mov    r10,r8
   140036467:	mov    r8d,0x40000
   14003646d:	cmp    rdx,r8
   140036470:	jae    0x140036490
   140036472:	mov    rcx,QWORD PTR [rcx+0x18]
   140036476:	add    rcx,rdx
   140036479:	cmp    r10,rcx
   14003647c:	je     0x140036490
   14003647e:	sub    r8,rdx
   140036481:	mov    rdx,r10
   140036484:	cmp    r9,r8
   140036487:	cmovb  r8,r9
   14003648b:	call   0x140059180
   140036490:	add    rsp,0x28
   140036494:	ret    
   140036495:	int3   
   140036496:	int3   
   140036497:	int3   
   140036498:	xor    eax,eax
   14003649a:	mov    QWORD PTR [rcx],rax
   14003649d:	mov    QWORD PTR [rcx+0x10],rax
   1400364a1:	mov    QWORD PTR [rcx+0x18],rax
   1400364a5:	mov    QWORD PTR [rcx+0x8],rax
   1400364a9:	mov    QWORD PTR [rcx+0x30],rax
   1400364ad:	mov    QWORD PTR [rcx+0x28],rax
   1400364b1:	mov    QWORD PTR [rcx+0x38],rax
   1400364b5:	mov    rax,rcx
   1400364b8:	mov    QWORD PTR [rcx+0x20],rdx
   1400364bc:	ret    
   1400364bd:	int3   
   1400364be:	int3   
   1400364bf:	int3   
   1400364c0:	mov    rdx,QWORD PTR [rcx+0x30]
   1400364c4:	cmp    rdx,QWORD PTR [rcx+0x28]
   1400364c8:	jae    0x1400364db
   1400364ca:	lea    rax,[rdx+0x1]
   1400364ce:	mov    QWORD PTR [rcx+0x30],rax
   1400364d2:	mov    rax,QWORD PTR [rcx]
   1400364d5:	movzx  ecx,BYTE PTR [rax+rdx*1]
   1400364d9:	jmp    0x1400364dd
   1400364db:	xor    ecx,ecx
   1400364dd:	mov    al,cl
   1400364df:	ret    
   1400364e0:	mov    r11,QWORD PTR [rcx+0x30]
   1400364e4:	mov    r10,rcx
   1400364e7:	lea    rax,[r11+0x1]
   1400364eb:	cmp    rax,QWORD PTR [rcx+0x28]
   1400364ef:	jae    0x140036516
   1400364f1:	mov    r8,QWORD PTR [rcx]
   1400364f4:	mov    ecx,0x100
   1400364f9:	movzx  edx,cx
   1400364fc:	movzx  ecx,BYTE PTR [r11+r8*1]
   140036501:	movzx  eax,BYTE PTR [r11+r8*1+0x1]
   140036507:	imul   eax,edx
   14003650a:	add    ax,cx
   14003650d:	lea    rcx,[r11+0x2]
   140036511:	mov    QWORD PTR [r10+0x30],rcx
   140036515:	ret    
   140036516:	xor    eax,eax
   140036518:	ret    
   140036519:	int3   
   14003651a:	int3   
   14003651b:	int3   
   14003651c:	mov    r10,QWORD PTR [rcx+0x30]
   140036520:	mov    r9,rcx
   140036523:	lea    rax,[r10+0x3]
   140036527:	cmp    rax,QWORD PTR [rcx+0x28]
   14003652b:	jae    0x14003655f
   14003652d:	mov    r8,QWORD PTR [rcx]
   140036530:	movzx  ecx,BYTE PTR [r10+r8*1+0x1]
   140036536:	movzx  eax,BYTE PTR [r10+r8*1+0x3]
   14003653c:	movzx  edx,BYTE PTR [r10+r8*1+0x2]
   140036542:	shl    ecx,0x8
   140036545:	shl    eax,0x18
   140036548:	shl    edx,0x10
   14003654b:	add    eax,edx
   14003654d:	add    eax,ecx
   14003654f:	movzx  ecx,BYTE PTR [r10+r8*1]
   140036554:	add    eax,ecx
   140036556:	lea    rcx,[r10+0x4]
   14003655a:	mov    QWORD PTR [r9+0x30],rcx
   14003655e:	ret    
   14003655f:	xor    eax,eax
   140036561:	ret    
   140036562:	int3   
   140036563:	int3   
   140036564:	mov    QWORD PTR [rsp+0x8],rbx
   140036569:	push   rdi
   14003656a:	sub    rsp,0x20
   14003656e:	mov    rbx,rcx
   140036571:	call   0x14003651c
   140036576:	mov    rcx,rbx
   140036579:	mov    edi,eax
   14003657b:	call   0x14003651c
   140036580:	mov    rbx,QWORD PTR [rsp+0x30]
   140036585:	mov    eax,eax
   140036587:	shl    rax,0x20
   14003658b:	add    rax,rdi
   14003658e:	add    rsp,0x20
   140036592:	pop    rdi
   140036593:	ret    
   140036594:	mov    QWORD PTR [rsp+0x8],rbx
   140036599:	mov    QWORD PTR [rsp+0x10],rbp
   14003659e:	mov    QWORD PTR [rsp+0x18],rsi
   1400365a3:	push   rdi
   1400365a4:	sub    rsp,0x20
   1400365a8:	mov    rsi,rcx
   1400365ab:	mov    rbx,r8
   1400365ae:	mov    rcx,QWORD PTR [rcx+0x30]
   1400365b2:	mov    rdi,r8
   1400365b5:	mov    rbp,rdx
   1400365b8:	mov    rax,QWORD PTR [rsi+0x28]
   1400365bc:	sub    rax,rcx
   1400365bf:	cmp    rax,r8
   1400365c2:	cmovb  rbx,rax
   1400365c6:	test   rbx,rbx
   1400365c9:	je     0x1400365dc
   1400365cb:	mov    rdx,QWORD PTR [rsi]
   1400365ce:	mov    r8,rbx
   1400365d1:	add    rdx,rcx
   1400365d4:	mov    rcx,rbp
   1400365d7:	call   0x140059180
   1400365dc:	cmp    rdi,rbx
   1400365df:	jbe    0x1400365f2
   1400365e1:	sub    rdi,rbx
   1400365e4:	lea    rcx,[rbx+rbp*1]
   1400365e8:	mov    r8,rdi
   1400365eb:	xor    edx,edx
   1400365ed:	call   0x140058f40
   1400365f2:	add    QWORD PTR [rsi+0x30],rbx
   1400365f6:	mov    rax,rbx
   1400365f9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400365fe:	mov    rsi,QWORD PTR [rsp+0x40]
   140036603:	mov    rbp,QWORD PTR [rsp+0x38]
   140036608:	add    rsp,0x20
   14003660c:	pop    rdi
   14003660d:	ret    
   14003660e:	int3   
   14003660f:	int3   
   140036610:	sub    rsp,0x28
   140036614:	mov    r8,QWORD PTR [rcx+0x28]
   140036618:	cmp    r8,0x2
   14003661c:	ja     0x140036622
   14003661e:	xor    eax,eax
   140036620:	jmp    0x140036642
   140036622:	test   dl,dl
   140036624:	je     0x14003662a
   140036626:	mov    r8,QWORD PTR [rcx+0x30]
   14003662a:	mov    rdx,QWORD PTR [rcx]
   14003662d:	add    r8,0xfffffffffffffffe
   140036631:	add    rdx,0x2
   140036635:	or     ecx,0xffffffff
   140036638:	call   0x140017ac0
   14003663d:	not    eax
   14003663f:	movzx  eax,ax
   140036642:	add    rsp,0x28
   140036646:	ret    
   140036647:	int3   
   140036648:	sub    rsp,0x28
   14003664c:	mov    r8,QWORD PTR [rcx+0x28]
   140036650:	cmp    r8,0x4
   140036654:	ja     0x14003665b
   140036656:	or     eax,0xffffffff
   140036659:	jmp    0x140036670
   14003665b:	mov    rdx,QWORD PTR [rcx]
   14003665e:	add    r8,0xfffffffffffffffc
   140036662:	add    rdx,0x4
   140036666:	or     ecx,0xffffffff
   140036669:	call   0x140017ac0
   14003666e:	not    eax
   140036670:	add    rsp,0x28
   140036674:	ret    
   140036675:	int3   
   140036676:	int3   
   140036677:	int3   
   140036678:	mov    QWORD PTR [rsp+0x8],rbx
   14003667d:	mov    r8,rcx
   140036680:	xor    r9d,r9d
   140036683:	mov    ecx,r9d
   140036686:	mov    r10,QWORD PTR [r8+0x28]
   14003668a:	cmp    QWORD PTR [r8+0x30],r10
   14003668e:	jae    0x1400366ba
   140036690:	mov    rbx,QWORD PTR [r8]
   140036693:	mov    rax,QWORD PTR [r8+0x30]
   140036697:	lea    r11,[rax+0x1]
   14003669b:	mov    QWORD PTR [r8+0x30],r11
   14003669f:	movzx  edx,BYTE PTR [rbx+rax*1]
   1400366a3:	mov    eax,edx
   1400366a5:	and    eax,0x7f
   1400366a8:	shl    rax,cl
   1400366ab:	add    r9,rax
   1400366ae:	test   dl,dl
   1400366b0:	jns    0x1400366c2
   1400366b2:	add    ecx,0x7
   1400366b5:	cmp    r11,r10
   1400366b8:	jb     0x140036693
   1400366ba:	xor    eax,eax
   1400366bc:	mov    rbx,QWORD PTR [rsp+0x8]
   1400366c1:	ret    
   1400366c2:	mov    rax,r9
   1400366c5:	jmp    0x1400366bc
   1400366c7:	int3   
   1400366c8:	mov    r8,QWORD PTR [rcx+0x28]
   1400366cc:	mov    rax,rdx
   1400366cf:	cmp    rdx,r8
   1400366d2:	jae    0x1400366e6
   1400366d4:	mov    r9,QWORD PTR [rcx]
   1400366d7:	test   BYTE PTR [r9+rax*1],0x80
   1400366dc:	je     0x1400366e9
   1400366de:	inc    rax
   1400366e1:	cmp    rax,r8
   1400366e4:	jb     0x1400366d7
   1400366e6:	xor    eax,eax
   1400366e8:	ret    
   1400366e9:	sub    rax,rdx
   1400366ec:	inc    rax
   1400366ef:	ret    
   1400366f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400366f5:	mov    QWORD PTR [rsp+0x10],rdi
   1400366fa:	xor    r10d,r10d
   1400366fd:	mov    rdi,rcx
   140036700:	mov    BYTE PTR [r9],r10b
   140036703:	mov    r11d,r8d
   140036706:	mov    ecx,r10d
   140036709:	cmp    DWORD PTR [rdx],r8d
   14003670c:	jae    0x140036733
   14003670e:	mov    eax,DWORD PTR [rdx]
   140036710:	movzx  r8d,BYTE PTR [rax+rdi*1]
   140036715:	lea    ebx,[rax+0x1]
   140036718:	mov    eax,r8d
   14003671b:	mov    DWORD PTR [rdx],ebx
   14003671d:	and    eax,0x7f
   140036720:	shl    rax,cl
   140036723:	add    r10,rax
   140036726:	test   r8b,r8b
   140036729:	jns    0x140036744
   14003672b:	add    ecx,0x7
   14003672e:	cmp    ebx,r11d
   140036731:	jb     0x14003670e
   140036733:	mov    BYTE PTR [r9],0x1
   140036737:	xor    eax,eax
   140036739:	mov    rbx,QWORD PTR [rsp+0x8]
   14003673e:	mov    rdi,QWORD PTR [rsp+0x10]
   140036743:	ret    
   140036744:	mov    rax,r10
   140036747:	jmp    0x140036739
   140036749:	int3   
   14003674a:	int3   
   14003674b:	int3   
   14003674c:	test   r8,r8
   14003674f:	je     0x140036796
   140036751:	mov    QWORD PTR [rsp+0x8],rbx
   140036756:	mov    QWORD PTR [rsp+0x10],rsi
   14003675b:	push   rdi
   14003675c:	sub    rsp,0x20
   140036760:	mov    rbx,r8
   140036763:	mov    rsi,rdx
   140036766:	mov    rdx,rbx
   140036769:	mov    rdi,rcx
   14003676c:	call   0x140001858
   140036771:	mov    rcx,QWORD PTR [rdi+0x28]
   140036775:	mov    r8,rbx
   140036778:	add    rcx,QWORD PTR [rdi]
   14003677b:	mov    rdx,rsi
   14003677e:	call   0x140059180
   140036783:	add    QWORD PTR [rdi+0x28],rbx
   140036787:	mov    rbx,QWORD PTR [rsp+0x30]
   14003678c:	mov    rsi,QWORD PTR [rsp+0x38]
   140036791:	add    rsp,0x20
   140036795:	pop    rdi
   140036796:	ret    
   140036797:	int3   
   140036798:	mov    rax,rsp
   14003679b:	mov    QWORD PTR [rax+0x8],rbx
   14003679f:	mov    QWORD PTR [rax+0x10],rbp
   1400367a3:	mov    QWORD PTR [rax+0x18],rsi
   1400367a7:	mov    QWORD PTR [rax+0x20],rdi
   1400367ab:	push   r14
   1400367ad:	sub    rsp,0x20
   1400367b1:	xor    esi,esi
   1400367b3:	mov    rbp,rdx
   1400367b6:	mov    rdi,rcx
   1400367b9:	cmp    QWORD PTR [rcx+0x38],rsi
   1400367bd:	je     0x140036838
   1400367bf:	mov    r14,QWORD PTR [rcx+0x8]
   1400367c3:	mov    rax,QWORD PTR [rcx+0x28]
   1400367c7:	mov    rcx,r14
   1400367ca:	sub    rcx,rax
   1400367cd:	cmp    rdx,rcx
   1400367d0:	jbe    0x14003682c
   1400367d2:	mov    rax,rdx
   1400367d5:	sub    rax,rcx
   1400367d8:	mov    rcx,rdi
   1400367db:	mov    rbx,rax
   1400367de:	not    rbx
   1400367e1:	inc    rbx
   1400367e4:	and    ebx,0xf
   1400367e7:	add    rbx,rax
   1400367ea:	mov    rdx,rbx
   1400367ed:	call   0x140001858
   1400367f2:	mov    rcx,QWORD PTR [rdi+0x20]
   1400367f6:	mov    r8,rbx
   1400367f9:	mov    rdx,QWORD PTR [rdi]
   1400367fc:	add    rdx,r14
   1400367ff:	mov    rax,QWORD PTR [rcx]
   140036802:	call   QWORD PTR [rax+0x10]
   140036805:	mov    rdx,QWORD PTR [rdi]
   140036808:	mov    r8,rbx
   14003680b:	mov    rcx,QWORD PTR [rdi+0x38]
   14003680f:	add    rdx,r14
   140036812:	movsxd rsi,eax
   140036815:	call   0x1400182c8
   14003681a:	mov    rax,rsi
   14003681d:	neg    rax
   140036820:	sbb    rcx,rcx
   140036823:	and    rcx,rbp
   140036826:	add    QWORD PTR [rdi+0x28],rcx
   14003682a:	jmp    0x14003685d
   14003682c:	add    rax,rdx
   14003682f:	mov    rsi,rdx
   140036832:	mov    QWORD PTR [rdi+0x28],rax
   140036836:	jmp    0x14003685d
   140036838:	test   rdx,rdx
   14003683b:	je     0x14003685d
   14003683d:	call   0x140001858
   140036842:	mov    rcx,QWORD PTR [rdi+0x20]
   140036846:	mov    r8,rbp
   140036849:	mov    rdx,QWORD PTR [rdi+0x28]
   14003684d:	add    rdx,QWORD PTR [rdi]
   140036850:	mov    rax,QWORD PTR [rcx]
   140036853:	call   QWORD PTR [rax+0x10]
   140036856:	movsxd rsi,eax
   140036859:	add    QWORD PTR [rdi+0x28],rsi
   14003685d:	mov    rbx,QWORD PTR [rsp+0x30]
   140036862:	mov    rax,rsi
   140036865:	mov    rsi,QWORD PTR [rsp+0x40]
   14003686a:	mov    rbp,QWORD PTR [rsp+0x38]
   14003686f:	mov    rdi,QWORD PTR [rsp+0x48]
   140036874:	add    rsp,0x20
   140036878:	pop    r14
   14003687a:	ret    
   14003687b:	int3   
   14003687c:	xor    eax,eax
   14003687e:	mov    QWORD PTR [rcx+0x8],rax
   140036882:	mov    QWORD PTR [rcx+0x30],rax
   140036886:	mov    QWORD PTR [rcx+0x28],rax
   14003688a:	mov    QWORD PTR [rcx+0x38],rax
   14003688e:	ret    
   14003688f:	int3   
   140036890:	mov    QWORD PTR [rsp+0x8],rcx
   140036895:	push   rbx
   140036896:	sub    rsp,0x30
   14003689a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400368a3:	mov    rbx,rcx
   1400368a6:	xor    eax,eax
   1400368a8:	mov    QWORD PTR [rcx],rax
   1400368ab:	mov    QWORD PTR [rcx+0x8],rax
   1400368af:	mov    QWORD PTR [rcx+0x10],rax
   1400368b3:	mov    QWORD PTR [rcx+0x18],rax
   1400368b7:	call   0x140036b98
   1400368bc:	nop
   1400368bd:	mov    rax,rbx
   1400368c0:	add    rsp,0x30
   1400368c4:	pop    rbx
   1400368c5:	ret    
   1400368c6:	int3   
   1400368c7:	int3   
   1400368c8:	mov    QWORD PTR [rsp+0x8],rbx
   1400368cd:	mov    QWORD PTR [rsp+0x10],rsi
   1400368d2:	push   rdi
   1400368d3:	sub    rsp,0x20
   1400368d7:	mov    rdi,QWORD PTR [rcx+0x20]
   1400368db:	mov    rbx,rdx
   1400368de:	mov    rsi,rcx
   1400368e1:	cmp    rdi,0x8
   1400368e5:	ja     0x1400368f1
   1400368e7:	mov    rcx,rdx
   1400368ea:	call   0x140009a60
   1400368ef:	jmp    0x140036922
   1400368f1:	add    rdi,0xfffffffffffffff8
   1400368f5:	cmp    rdi,QWORD PTR [rdx+0x10]
   1400368f9:	jbe    0x14003690c
   1400368fb:	mov    rdx,rdi
   1400368fe:	mov    rcx,rbx
   140036901:	sub    rdx,QWORD PTR [rbx+0x8]
   140036905:	call   0x140001858
   14003690a:	jmp    0x140036910
   14003690c:	mov    QWORD PTR [rdx+0x8],rdi
   140036910:	mov    rdx,QWORD PTR [rsi]
   140036913:	mov    r8,rdi
   140036916:	mov    rcx,QWORD PTR [rbx]
   140036919:	add    rdx,0x8
   14003691d:	call   0x140059180
   140036922:	mov    rbx,QWORD PTR [rsp+0x30]
   140036927:	mov    rsi,QWORD PTR [rsp+0x38]
   14003692c:	add    rsp,0x20
   140036930:	pop    rdi
   140036931:	ret    
   140036932:	int3   
   140036933:	int3   
   140036934:	rex push rbx
   140036936:	sub    rsp,0x20
   14003693a:	mov    rbx,QWORD PTR [rcx+0x20]
   14003693e:	mov    rax,rdx
   140036941:	cmp    rbx,0x8
   140036945:	ja     0x14003694b
   140036947:	xor    eax,eax
   140036949:	jmp    0x140036969
   14003694b:	add    rbx,0xfffffffffffffff8
   14003694f:	cmp    r8,rbx
   140036952:	jb     0x140036947
   140036954:	mov    rdx,QWORD PTR [rcx]
   140036957:	mov    r8,rbx
   14003695a:	add    rdx,0x8
   14003695e:	mov    rcx,rax
   140036961:	call   0x140059180
   140036966:	mov    rax,rbx
   140036969:	add    rsp,0x20
   14003696d:	pop    rbx
   14003696e:	ret    
   14003696f:	int3   
   140036970:	mov    QWORD PTR [rsp+0x8],rbx
   140036975:	push   rdi
   140036976:	sub    rsp,0x20
   14003697a:	mov    rdi,rdx
   14003697d:	mov    rbx,rcx
   140036980:	mov    edx,0x1
   140036985:	call   0x140001858
   14003698a:	mov    r8,QWORD PTR [rbx+0x20]
   14003698e:	lea    rax,[r8+0x1]
   140036992:	mov    QWORD PTR [rbx+0x20],rax
   140036996:	mov    rax,QWORD PTR [rbx]
   140036999:	mov    rbx,QWORD PTR [rsp+0x30]
   14003699e:	mov    BYTE PTR [r8+rax*1],dil
   1400369a2:	add    rsp,0x20
   1400369a6:	pop    rdi
   1400369a7:	ret    
   1400369a8:	mov    QWORD PTR [rsp+0x8],rbx
   1400369ad:	push   rdi
   1400369ae:	sub    rsp,0x20
   1400369b2:	mov    rdi,rdx
   1400369b5:	mov    rbx,rcx
   1400369b8:	mov    edx,0x2
   1400369bd:	call   0x140001858
   1400369c2:	mov    r8,QWORD PTR [rbx+0x20]
   1400369c6:	lea    rax,[r8+0x1]
   1400369ca:	mov    QWORD PTR [rbx+0x20],rax
   1400369ce:	mov    rax,QWORD PTR [rbx]
   1400369d1:	mov    BYTE PTR [r8+rax*1],dil
   1400369d5:	mov    r8,QWORD PTR [rbx+0x20]
   1400369d9:	shr    rdi,0x8
   1400369dd:	lea    rax,[r8+0x1]
   1400369e1:	mov    QWORD PTR [rbx+0x20],rax
   1400369e5:	mov    rax,QWORD PTR [rbx]
   1400369e8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400369ed:	mov    BYTE PTR [r8+rax*1],dil
   1400369f1:	add    rsp,0x20
   1400369f5:	pop    rdi
   1400369f6:	ret    
   1400369f7:	int3   
   1400369f8:	mov    QWORD PTR [rsp+0x8],rbx
   1400369fd:	push   rdi
   1400369fe:	sub    rsp,0x20
   140036a02:	mov    rdi,rdx
   140036a05:	mov    rbx,rcx
   140036a08:	mov    edx,0x4
   140036a0d:	call   0x140001858
   140036a12:	mov    r8,QWORD PTR [rbx+0x20]
   140036a16:	mov    rcx,rdi
   140036a19:	shr    rcx,0x8
   140036a1d:	lea    rax,[r8+0x1]
   140036a21:	mov    QWORD PTR [rbx+0x20],rax
   140036a25:	mov    rax,QWORD PTR [rbx]
   140036a28:	mov    BYTE PTR [r8+rax*1],dil
   140036a2c:	mov    r8,QWORD PTR [rbx+0x20]
   140036a30:	lea    rax,[r8+0x1]
   140036a34:	mov    QWORD PTR [rbx+0x20],rax
   140036a38:	mov    rax,QWORD PTR [rbx]
   140036a3b:	mov    BYTE PTR [r8+rax*1],cl
   140036a3f:	mov    rcx,rdi
   140036a42:	mov    rdx,QWORD PTR [rbx+0x20]
   140036a46:	shr    rcx,0x10
   140036a4a:	shr    rdi,0x18
   140036a4e:	lea    rax,[rdx+0x1]
   140036a52:	mov    QWORD PTR [rbx+0x20],rax
   140036a56:	mov    rax,QWORD PTR [rbx]
   140036a59:	mov    BYTE PTR [rdx+rax*1],cl
   140036a5c:	mov    rcx,QWORD PTR [rbx+0x20]
   140036a60:	lea    rax,[rcx+0x1]
   140036a64:	mov    QWORD PTR [rbx+0x20],rax
   140036a68:	mov    rax,QWORD PTR [rbx]
   140036a6b:	mov    rbx,QWORD PTR [rsp+0x30]
   140036a70:	mov    BYTE PTR [rcx+rax*1],dil
   140036a74:	add    rsp,0x20
   140036a78:	pop    rdi
   140036a79:	ret    
   140036a7a:	int3   
   140036a7b:	int3   
   140036a7c:	mov    QWORD PTR [rsp+0x8],rbx
   140036a81:	push   rdi
   140036a82:	sub    rsp,0x20
   140036a86:	mov    rbx,rdx
   140036a89:	mov    rdi,rcx
   140036a8c:	call   0x1400369f8
   140036a91:	shr    rbx,0x20
   140036a95:	mov    rcx,rdi
   140036a98:	mov    rdx,rbx
   140036a9b:	mov    rbx,QWORD PTR [rsp+0x30]
   140036aa0:	add    rsp,0x20
   140036aa4:	pop    rdi
   140036aa5:	jmp    0x1400369f8
   140036aaa:	int3   
   140036aab:	int3   
   140036aac:	mov    QWORD PTR [rsp+0x8],rbx
   140036ab1:	mov    QWORD PTR [rsp+0x10],rsi
   140036ab6:	push   rdi
   140036ab7:	sub    rsp,0x20
   140036abb:	mov    rsi,rdx
   140036abe:	mov    rdi,r8
   140036ac1:	mov    rdx,r8
   140036ac4:	mov    rbx,rcx
   140036ac7:	call   0x140001858
   140036acc:	xor    r9d,r9d
   140036acf:	test   rdi,rdi
   140036ad2:	je     0x140036af2
   140036ad4:	mov    rdx,QWORD PTR [rbx+0x20]
   140036ad8:	mov    rcx,QWORD PTR [rbx]
   140036adb:	lea    rax,[rdx+0x1]
   140036adf:	mov    QWORD PTR [rbx+0x20],rax
   140036ae3:	mov    al,BYTE PTR [r9+rsi*1]
   140036ae7:	inc    r9
   140036aea:	mov    BYTE PTR [rdx+rcx*1],al
   140036aed:	cmp    r9,rdi
   140036af0:	jb     0x140036ad4
   140036af2:	mov    rbx,QWORD PTR [rsp+0x30]
   140036af7:	mov    rsi,QWORD PTR [rsp+0x38]
   140036afc:	add    rsp,0x20
   140036b00:	pop    rdi
   140036b01:	ret    
   140036b02:	int3   
   140036b03:	int3   
   140036b04:	mov    QWORD PTR [rsp+0x8],rbx
   140036b09:	mov    QWORD PTR [rsp+0x10],rsi
   140036b0e:	push   rdi
   140036b0f:	sub    rsp,0x20
   140036b13:	mov    rdi,r8
   140036b16:	mov    rbx,rdx
   140036b19:	mov    rsi,rcx
   140036b1c:	mov    eax,ebx
   140036b1e:	shr    rdi,0x7
   140036b22:	and    eax,0x7f
   140036b25:	shr    rbx,0x7
   140036b29:	test   rbx,rbx
   140036b2c:	jne    0x140036b33
   140036b2e:	test   rdi,rdi
   140036b31:	je     0x140036b37
   140036b33:	bts    eax,0x7
   140036b37:	mov    edx,eax
   140036b39:	mov    rcx,rsi
   140036b3c:	call   0x140036970
   140036b41:	test   rbx,rbx
   140036b44:	jne    0x140036b1c
   140036b46:	test   rdi,rdi
   140036b49:	jne    0x140036b1c
   140036b4b:	mov    rbx,QWORD PTR [rsp+0x30]
   140036b50:	mov    rsi,QWORD PTR [rsp+0x38]
   140036b55:	add    rsp,0x20
   140036b59:	pop    rdi
   140036b5a:	ret    
   140036b5b:	int3   
   140036b5c:	mov    QWORD PTR [rsp+0x8],rbx
   140036b61:	push   rdi
   140036b62:	sub    rsp,0x20
   140036b66:	mov    rbx,rdx
   140036b69:	mov    rdi,rcx
   140036b6c:	mov    eax,ebx
   140036b6e:	shr    rbx,0x7
   140036b72:	and    eax,0x7f
   140036b75:	test   rbx,rbx
   140036b78:	je     0x140036b7e
   140036b7a:	bts    eax,0x7
   140036b7e:	mov    edx,eax
   140036b80:	mov    rcx,rdi
   140036b83:	call   0x140036970
   140036b88:	test   rbx,rbx
   140036b8b:	jne    0x140036b6c
   140036b8d:	mov    rbx,QWORD PTR [rsp+0x30]
   140036b92:	add    rsp,0x20
   140036b96:	pop    rdi
   140036b97:	ret    
   140036b98:	rex push rbx
   140036b9a:	sub    rsp,0x20
   140036b9e:	and    QWORD PTR [rcx+0x8],0x0
   140036ba3:	mov    edx,0x8
   140036ba8:	mov    QWORD PTR [rcx+0x20],rdx
   140036bac:	mov    rbx,rcx
   140036baf:	call   0x140001858
   140036bb4:	and    QWORD PTR [rbx+0x28],0x0
   140036bb9:	add    rsp,0x20
   140036bbd:	pop    rbx
   140036bbe:	ret    
   140036bbf:	int3   
   140036bc0:	sub    edx,0x2
   140036bc3:	je     0x140036bfb
   140036bc5:	cmp    edx,0x1
   140036bc8:	je     0x140036bd3
   140036bca:	mov    rax,QWORD PTR [rcx+0x20]
   140036bce:	sub    rax,0x8
   140036bd2:	ret    
   140036bd3:	mov    rdx,QWORD PTR [rcx+0x20]
   140036bd7:	mov    ecx,0x1
   140036bdc:	lea    r8d,[rcx+0x7f]
   140036be0:	lea    rax,[rdx-0x8]
   140036be4:	jmp    0x140036bec
   140036be6:	inc    ecx
   140036be8:	shr    rax,0x7
   140036bec:	cmp    rax,r8
   140036bef:	jae    0x140036be6
   140036bf1:	mov    eax,ecx
   140036bf3:	add    rax,0xfffffffffffffffc
   140036bf7:	add    rax,rdx
   140036bfa:	ret    
   140036bfb:	mov    rax,QWORD PTR [rcx+0x20]
   140036bff:	sub    rax,0x6
   140036c03:	ret    
   140036c04:	mov    rax,rsp
   140036c07:	mov    QWORD PTR [rax+0x8],rbx
   140036c0b:	mov    QWORD PTR [rax+0x10],rbp
   140036c0f:	mov    QWORD PTR [rax+0x18],rsi
   140036c13:	mov    QWORD PTR [rax+0x20],rdi
   140036c17:	push   r12
   140036c19:	push   r14
   140036c1b:	push   r15
   140036c1d:	sub    rsp,0x20
   140036c21:	xor    esi,esi
   140036c23:	xor    ebx,ebx
   140036c25:	mov    r15,r9
   140036c28:	mov    ebp,r8d
   140036c2b:	mov    r12,rdx
   140036c2e:	mov    rdi,rcx
   140036c31:	lea    r14d,[rsi+0x8]
   140036c35:	cmp    QWORD PTR [rcx+0x20],r14
   140036c39:	jbe    0x140036da1
   140036c3f:	mov    rbx,QWORD PTR [rcx]
   140036c42:	mov    rsi,QWORD PTR [rcx+0x20]
   140036c46:	cmp    r8d,0x2
   140036c4a:	jne    0x140036c7c
   140036c4c:	add    rbx,0x6
   140036c50:	sub    rsi,0x6
   140036c54:	mov    rax,rsi
   140036c57:	or     ecx,0xffffffff
   140036c5a:	shr    rax,0x8
   140036c5e:	lea    r8,[rsi-0x2]
   140036c62:	mov    BYTE PTR [rbx+0x6],al
   140036c65:	lea    rdx,[rbx+0x2]
   140036c69:	mov    BYTE PTR [rbx+0x5],sil
   140036c6d:	call   0x140017ac0
   140036c72:	not    eax
   140036c74:	mov    BYTE PTR [rbx],al
   140036c76:	shr    eax,0x8
   140036c79:	mov    BYTE PTR [rbx+0x1],al
   140036c7c:	cmp    ebp,0x3
   140036c7f:	jne    0x140036d1d
   140036c85:	mov    rax,QWORD PTR [rdi+0x20]
   140036c89:	mov    ebp,0x1
   140036c8e:	sub    rax,r14
   140036c91:	jmp    0x140036c99
   140036c93:	inc    ebp
   140036c95:	shr    rax,0x7
   140036c99:	cmp    rax,0x80
   140036c9f:	jae    0x140036c93
   140036ca1:	lea    eax,[rbp+0x4]
   140036ca4:	cmp    eax,r14d
   140036ca7:	jbe    0x140036ccd
   140036ca9:	lea    rdx,[rip+0x38e70]        # 0x14006fb20
   140036cb0:	lea    rcx,[rip+0x5dba9]        # 0x140094860
   140036cb7:	call   0x14001bc8c
   140036cbc:	mov    edx,0x2
   140036cc1:	lea    rcx,[rip+0x5db98]        # 0x140094860
   140036cc8:	call   0x14001bc60
   140036ccd:	sub    r14d,ebp
   140036cd0:	mov    r10d,ebp
   140036cd3:	mov    eax,r14d
   140036cd6:	sub    rsi,rax
   140036cd9:	add    rbx,rax
   140036cdc:	mov    r9,rsi
   140036cdf:	mov    r8,rbx
   140036ce2:	sub    r9,r10
   140036ce5:	mov    rdx,r9
   140036ce8:	mov    al,dl
   140036cea:	shr    rdx,0x7
   140036cee:	and    al,0x7f
   140036cf0:	test   rdx,rdx
   140036cf3:	je     0x140036cf7
   140036cf5:	or     al,0x80
   140036cf7:	mov    BYTE PTR [r8],al
   140036cfa:	inc    r8
   140036cfd:	test   rdx,rdx
   140036d00:	jne    0x140036ce8
   140036d02:	lea    r8,[r10+r9*1]
   140036d06:	mov    rdx,rbx
   140036d09:	or     ecx,0xffffffff
   140036d0c:	call   0x140017ac0
   140036d11:	sub    rbx,0x4
   140036d15:	not    eax
   140036d17:	add    rsi,0x4
   140036d1b:	mov    DWORD PTR [rbx],eax
   140036d1d:	cmp    QWORD PTR [rdi+0x28],0x0
   140036d22:	je     0x140036d8e
   140036d24:	mov    rcx,QWORD PTR [rdi+0x20]
   140036d28:	mov    r14,rsi
   140036d2b:	sub    rbx,QWORD PTR [rdi]
   140036d2e:	not    r14
   140036d31:	inc    r14
   140036d34:	and    r14d,0xf
   140036d38:	add    rcx,r14
   140036d3b:	cmp    rcx,QWORD PTR [rdi+0x10]
   140036d3f:	jbe    0x140036d52
   140036d41:	sub    rcx,QWORD PTR [rdi+0x8]
   140036d45:	mov    rdx,rcx
   140036d48:	mov    rcx,rdi
   140036d4b:	call   0x140001858
   140036d50:	jmp    0x140036d56
   140036d52:	mov    QWORD PTR [rdi+0x8],rcx
   140036d56:	mov    rdx,QWORD PTR [rdi+0x20]
   140036d5a:	add    rbx,QWORD PTR [rdi]
   140036d5d:	lea    rax,[rdx+r14*1]
   140036d61:	cmp    rdx,rax
   140036d64:	jae    0x140036d7c
   140036d66:	mov    rax,QWORD PTR [rdi]
   140036d69:	mov    BYTE PTR [rdx+rax*1],0x0
   140036d6d:	inc    rdx
   140036d70:	mov    rcx,QWORD PTR [rdi+0x20]
   140036d74:	add    rcx,r14
   140036d77:	cmp    rdx,rcx
   140036d7a:	jb     0x140036d66
   140036d7c:	mov    rcx,QWORD PTR [rdi+0x28]
   140036d80:	add    rsi,r14
   140036d83:	mov    r8,rsi
   140036d86:	mov    rdx,rbx
   140036d89:	call   0x1400184dc
   140036d8e:	test   r12,r12
   140036d91:	je     0x140036da1
   140036d93:	mov    r8,rsi
   140036d96:	mov    rdx,rbx
   140036d99:	mov    rcx,r12
   140036d9c:	call   0x1400212ac
   140036da1:	test   r15,r15
   140036da4:	je     0x140036da9
   140036da6:	mov    QWORD PTR [r15],rbx
   140036da9:	mov    rbx,QWORD PTR [rsp+0x40]
   140036dae:	mov    rax,rsi
   140036db1:	mov    rsi,QWORD PTR [rsp+0x50]
   140036db6:	mov    rbp,QWORD PTR [rsp+0x48]
   140036dbb:	mov    rdi,QWORD PTR [rsp+0x58]
   140036dc0:	add    rsp,0x20
   140036dc4:	pop    r15
   140036dc6:	pop    r14
   140036dc8:	pop    r12
   140036dca:	ret    
   140036dcb:	int3   
   140036dcc:	mov    QWORD PTR [rsp+0x8],rcx
   140036dd1:	push   rdi
   140036dd2:	sub    rsp,0x30
   140036dd6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140036ddf:	mov    QWORD PTR [rsp+0x50],rbx
   140036de4:	mov    rbx,rcx
   140036de7:	xor    edi,edi
   140036de9:	mov    QWORD PTR [rcx+0x8],rdi
   140036ded:	mov    QWORD PTR [rcx+0x10],rdi
   140036df1:	mov    QWORD PTR [rcx+0x18],rdi
   140036df5:	mov    QWORD PTR [rcx+0x20],rdi
   140036df9:	add    rcx,0x150
   140036e00:	call   0x140023e64
   140036e05:	nop
   140036e06:	lea    rcx,[rbx+0x170]
   140036e0d:	call   0x140023e64
   140036e12:	nop
   140036e13:	lea    rcx,[rbx+0x190]
   140036e1a:	call   0x140023e64
   140036e1f:	nop
   140036e20:	mov    ecx,0x100000
   140036e25:	call   0x140055df0
   140036e2a:	mov    QWORD PTR [rbx+0xd8],rax
   140036e31:	mov    ecx,0x10c0
   140036e36:	call   0x140055dac
   140036e3b:	mov    QWORD PTR [rsp+0x48],rax
   140036e40:	test   rax,rax
   140036e43:	je     0x140036e4f
   140036e45:	mov    rcx,rax
   140036e48:	call   0x140017e04
   140036e4d:	jmp    0x140036e52
   140036e4f:	mov    rax,rdi
   140036e52:	mov    QWORD PTR [rbx+0xc8],rax
   140036e59:	mov    ecx,0x10c0
   140036e5e:	call   0x140055dac
   140036e63:	mov    QWORD PTR [rsp+0x48],rax
   140036e68:	test   rax,rax
   140036e6b:	je     0x140036e78
   140036e6d:	mov    rcx,rax
   140036e70:	call   0x140017e04
   140036e75:	mov    rdi,rax
   140036e78:	mov    QWORD PTR [rbx+0xd0],rdi
   140036e7f:	mov    rcx,rbx
   140036e82:	call   0x140036fa8
   140036e87:	nop
   140036e88:	mov    rax,rbx
   140036e8b:	mov    rbx,QWORD PTR [rsp+0x50]
   140036e90:	add    rsp,0x30
   140036e94:	pop    rdi
   140036e95:	ret    
   140036e96:	int3   
   140036e97:	int3   
   140036e98:	mov    QWORD PTR [rsp+0x8],rbx
   140036e9d:	push   rdi
   140036e9e:	sub    rsp,0x20
   140036ea2:	mov    rdi,QWORD PTR [rcx+0xc8]
   140036ea9:	mov    rbx,rcx
   140036eac:	test   rdi,rdi
   140036eaf:	je     0x140036ec6
   140036eb1:	mov    rcx,rdi
   140036eb4:	call   0x140017eec
   140036eb9:	mov    edx,0x10c0
   140036ebe:	mov    rcx,rdi
   140036ec1:	call   0x140055de8
   140036ec6:	mov    rdi,QWORD PTR [rbx+0xd0]
   140036ecd:	test   rdi,rdi
   140036ed0:	je     0x140036ee7
   140036ed2:	mov    rcx,rdi
   140036ed5:	call   0x140017eec
   140036eda:	mov    edx,0x10c0
   140036edf:	mov    rcx,rdi
   140036ee2:	call   0x140055de8
   140036ee7:	mov    rcx,QWORD PTR [rbx+0xd8]
   140036eee:	call   0x140055de8
   140036ef3:	lea    rcx,[rbx+0x190]
   140036efa:	call   0x140023fe8
   140036eff:	lea    rcx,[rbx+0x170]
   140036f06:	call   0x140023fe8
   140036f0b:	lea    rcx,[rbx+0x150]
   140036f12:	call   0x140023fe8
   140036f17:	mov    rcx,QWORD PTR [rbx+0x8]
   140036f1b:	test   rcx,rcx
   140036f1e:	je     0x140036f25
   140036f20:	call   0x14005a938
   140036f25:	mov    rbx,QWORD PTR [rsp+0x30]
   140036f2a:	add    rsp,0x20
   140036f2e:	pop    rdi
   140036f2f:	ret    
   140036f30:	mov    QWORD PTR [rsp+0x8],rbx
   140036f35:	push   rdi
   140036f36:	sub    rsp,0x20
   140036f3a:	mov    rax,QWORD PTR [rcx+0x30]
   140036f3e:	mov    rdi,r8
   140036f41:	mov    r8,QWORD PTR [rcx+0x28]
   140036f45:	mov    r9,rdx
   140036f48:	sub    rax,r8
   140036f4b:	mov    rbx,rcx
   140036f4e:	cmp    rax,rdi
   140036f51:	cmovb  rdi,rax
   140036f55:	test   rdi,rdi
   140036f58:	jne    0x140036f6c
   140036f5a:	cmp    r8,QWORD PTR [rcx+0x30]
   140036f5e:	jne    0x140036f68
   140036f60:	and    QWORD PTR [rcx+0x30],rdi
   140036f64:	and    QWORD PTR [rcx+0x28],rdi
   140036f68:	xor    eax,eax
   140036f6a:	jmp    0x140036f85
   140036f6c:	mov    rdx,QWORD PTR [rcx+0x8]
   140036f70:	mov    rcx,r9
   140036f73:	add    rdx,r8
   140036f76:	mov    r8,rdi
   140036f79:	call   0x140059180
   140036f7e:	add    QWORD PTR [rbx+0x28],rdi
   140036f82:	mov    rax,rdi
   140036f85:	mov    rbx,QWORD PTR [rsp+0x30]
   140036f8a:	add    rsp,0x20
   140036f8e:	pop    rdi
   140036f8f:	ret    
   140036f90:	mov    rax,QWORD PTR [rcx+0x88]
   140036f97:	mov    QWORD PTR [rdx],rax
   140036f9a:	mov    rax,QWORD PTR [rcx+0x80]
   140036fa1:	mov    QWORD PTR [r8],rax
   140036fa4:	ret    
   140036fa5:	int3   
   140036fa6:	int3   
   140036fa7:	int3   
   140036fa8:	xor    edx,edx
   140036faa:	mov    WORD PTR [rcx+0x98],0x1
   140036fb3:	or     rax,0xffffffffffffffff
   140036fb7:	mov    QWORD PTR [rcx],rdx
   140036fba:	mov    BYTE PTR [rcx+0x38],dl
   140036fbd:	mov    QWORD PTR [rcx+0x138],rax
   140036fc4:	mov    QWORD PTR [rcx+0x128],rdx
   140036fcb:	mov    QWORD PTR [rcx+0x130],rdx
   140036fd2:	mov    BYTE PTR [rcx+0x50],dl
   140036fd5:	mov    BYTE PTR [rcx+0x68],dl
   140036fd8:	mov    QWORD PTR [rcx+0x90],rdx
   140036fdf:	mov    BYTE PTR [rcx+0x9a],dl
   140036fe5:	mov    DWORD PTR [rcx+0xf8],edx
   140036feb:	mov    BYTE PTR [rcx+0xfc],dl
   140036ff1:	mov    QWORD PTR [rcx+0xa0],rdx
   140036ff8:	mov    QWORD PTR [rcx+0xa8],rdx
   140036fff:	mov    QWORD PTR [rcx+0x80],rdx
   140037006:	mov    QWORD PTR [rcx+0xb0],rdx
   14003700d:	mov    WORD PTR [rcx+0x1b0],dx
   140037014:	mov    QWORD PTR [rcx+0x120],rdx
   14003701b:	mov    QWORD PTR [rcx+0x118],rdx
   140037022:	mov    QWORD PTR [rcx+0x110],rdx
   140037029:	mov    QWORD PTR [rcx+0x108],rdx
   140037030:	mov    DWORD PTR [rcx+0xf4],eax
   140037036:	mov    QWORD PTR [rcx+0xb8],rdx
   14003703d:	mov    QWORD PTR [rcx+0xc0],rdx
   140037044:	mov    QWORD PTR [rcx+0x148],rdx
   14003704b:	mov    QWORD PTR [rcx+0x140],rdx
   140037052:	mov    WORD PTR [rcx+0xf0],dx
   140037059:	mov    QWORD PTR [rcx+0xe0],rdx
   140037060:	mov    QWORD PTR [rcx+0xe8],rdx
   140037067:	ret    
   140037068:	mov    rax,rsp
   14003706b:	mov    QWORD PTR [rax+0x8],rbx
   14003706f:	mov    QWORD PTR [rax+0x10],rbp
   140037073:	mov    QWORD PTR [rax+0x18],rsi
   140037077:	mov    QWORD PTR [rax+0x20],rdi
   14003707b:	push   r14
   14003707d:	sub    rsp,0x20
   140037081:	mov    rax,QWORD PTR [rcx+0x138]
   140037088:	mov    rbx,r8
   14003708b:	mov    rbp,rdx
   14003708e:	mov    rdi,rcx
   140037091:	cmp    rax,0xffffffffffffffff
   140037095:	je     0x14003709e
   140037097:	cmp    rbx,rax
   14003709a:	cmovg  rbx,rax
   14003709e:	test   rbx,rbx
   1400370a1:	je     0x14003712d
   1400370a7:	cmp    QWORD PTR [rcx],0x0
   1400370ab:	je     0x140037134
   1400370b1:	mov    r8,rbx
   1400370b4:	call   0x140036f30
   1400370b9:	mov    rsi,rax
   1400370bc:	jmp    0x140037124
   1400370be:	mov    rax,QWORD PTR [rdi]
   1400370c1:	cmp    BYTE PTR [rax+0x4db8],0x0
   1400370c8:	jne    0x14003712d
   1400370ca:	mov    rcx,QWORD PTR [rdi+0xa0]
   1400370d1:	mov    BYTE PTR [rdi+0x9a],0x1
   1400370d8:	mov    BYTE PTR [rax+0x4db9],0x1
   1400370df:	mov    rax,QWORD PTR [rdi+0xb0]
   1400370e6:	movzx  edx,BYTE PTR [rcx+0x3509]
   1400370ed:	mov    rcx,QWORD PTR [rdi]
   1400370f0:	mov    r8b,BYTE PTR [rax+0x85]
   1400370f7:	call   0x14004ab9c
   1400370fc:	mov    rax,QWORD PTR [rdi]
   1400370ff:	mov    BYTE PTR [rax+0x4db9],0x0
   140037106:	mov    rax,QWORD PTR [rdi+0x30]
   14003710a:	cmp    QWORD PTR [rdi+0x28],rax
   14003710e:	je     0x1400371da
   140037114:	mov    r8,rbx
   140037117:	mov    rdx,rbp
   14003711a:	mov    rcx,rdi
   14003711d:	call   0x140036f30
   140037122:	mov    esi,eax
   140037124:	test   eax,eax
   140037126:	je     0x1400370be
   140037128:	jmp    0x1400371da
   14003712d:	xor    esi,esi
   14003712f:	jmp    0x1400371da
   140037134:	cmp    BYTE PTR [rcx+0x38],0x0
   140037138:	je     0x140037163
   14003713a:	cmp    QWORD PTR [rcx+0x40],rbx
   14003713e:	jae    0x140037145
   140037140:	mov    esi,DWORD PTR [rcx+0x40]
   140037143:	jmp    0x140037147
   140037145:	mov    esi,ebx
   140037147:	mov    rdx,QWORD PTR [rcx+0x48]
   14003714b:	mov    rcx,rbp
   14003714e:	movsxd rbx,esi
   140037151:	mov    r8,rbx
   140037154:	call   0x140059180
   140037159:	add    QWORD PTR [rdi+0x48],rbx
   14003715d:	sub    QWORD PTR [rdi+0x40],rbx
   140037161:	jmp    0x1400371da
   140037163:	mov    rcx,QWORD PTR [rcx+0xe8]
   14003716a:	mov    r14,rbx
   14003716d:	mov    rax,QWORD PTR [rdi+0xe0]
   140037174:	mov    rdx,QWORD PTR [rdi+0xd8]
   14003717b:	sub    rax,rcx
   14003717e:	cmp    rax,rbx
   140037181:	cmovb  r14,rax
   140037185:	add    rdx,rcx
   140037188:	mov    r8,r14
   14003718b:	mov    rcx,rbp
   14003718e:	call   0x140059180
   140037193:	add    QWORD PTR [rdi+0xe8],r14
   14003719a:	cmp    BYTE PTR [rdi+0xf0],0x0
   1400371a1:	je     0x1400371b9
   1400371a3:	cmp    rbx,r14
   1400371a6:	je     0x1400371b5
   1400371a8:	cmp    QWORD PTR [rdi+0xe0],0x100000
   1400371b3:	je     0x1400371b9
   1400371b5:	xor    esi,esi
   1400371b7:	jmp    0x1400371d7
   1400371b9:	mov    rcx,QWORD PTR [rdi+0xa0]
   1400371c0:	lea    rdx,[r14+rbp*1]
   1400371c4:	sub    rbx,r14
   1400371c7:	mov    r8,rbx
   1400371ca:	mov    rax,QWORD PTR [rcx]
   1400371cd:	call   QWORD PTR [rax+0x10]
   1400371d0:	mov    esi,eax
   1400371d2:	cmp    eax,0xffffffff
   1400371d5:	je     0x1400371da
   1400371d7:	add    esi,r14d
   1400371da:	mov    rax,QWORD PTR [rdi+0x138]
   1400371e1:	movsxd r8,esi
   1400371e4:	add    QWORD PTR [rdi+0x108],r8
   1400371eb:	add    QWORD PTR [rdi+0x128],r8
   1400371f2:	cmp    rax,0xffffffffffffffff
   1400371f6:	je     0x140037202
   1400371f8:	sub    rax,r8
   1400371fb:	mov    QWORD PTR [rdi+0x138],rax
   140037202:	lea    rcx,[rdi+0x170]
   140037209:	mov    rdx,rbp
   14003720c:	call   0x1400242cc
   140037211:	mov    rcx,QWORD PTR [rdi+0xb0]
   140037218:	test   rcx,rcx
   14003721b:	je     0x140037233
   14003721d:	add    rcx,0x8
   140037221:	call   0x1400053fc
   140037226:	test   rax,rax
   140037229:	je     0x140037233
   14003722b:	mov    rcx,rdi
   14003722e:	call   0x1400375f0
   140037233:	call   0x140046bb4
   140037238:	mov    rbx,QWORD PTR [rsp+0x30]
   14003723d:	mov    eax,esi
   14003723f:	mov    rsi,QWORD PTR [rsp+0x40]
   140037244:	mov    rbp,QWORD PTR [rsp+0x38]
   140037249:	mov    rdi,QWORD PTR [rsp+0x48]
   14003724e:	add    rsp,0x20
   140037252:	pop    r14
   140037254:	ret    
   140037255:	int3   
   140037256:	int3   
   140037257:	int3   
   140037258:	mov    QWORD PTR [rsp+0x8],rbx
   14003725d:	push   rdi
   14003725e:	sub    rsp,0x20
   140037262:	mov    rbx,rcx
   140037265:	mov    rcx,QWORD PTR [rcx+0xb0]
   14003726c:	test   rcx,rcx
   14003726f:	je     0x1400372a3
   140037271:	add    rcx,0x8
   140037275:	call   0x1400053fc
   14003727a:	mov    rdi,rax
   14003727d:	test   rax,rax
   140037280:	je     0x1400372a3
   140037282:	lea    rdx,[rax+0x3318]
   140037289:	lea    rcx,[rbx+0x170]
   140037290:	call   0x140024258
   140037295:	mov    rcx,QWORD PTR [rbx+0x108]
   14003729c:	mov    QWORD PTR [rdi+0x3340],rcx
   1400372a3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400372a8:	add    rsp,0x20
   1400372ac:	pop    rdi
   1400372ad:	ret    
   1400372ae:	int3   
   1400372af:	int3   
   1400372b0:	mov    QWORD PTR [rsp+0x10],rbx
   1400372b5:	mov    QWORD PTR [rsp+0x18],rbp
   1400372ba:	push   rsi
   1400372bb:	push   rdi
   1400372bc:	push   r14
   1400372be:	sub    rsp,0x20
   1400372c2:	cmp    BYTE PTR [rcx+0x1b0],0x0
   1400372c9:	mov    rdi,r8
   1400372cc:	mov    r14,rdx
   1400372cf:	mov    rbx,rcx
   1400372d2:	je     0x1400372f2
   1400372d4:	mov    rcx,QWORD PTR [rcx+0xc8]
   1400372db:	mov    rax,r8
   1400372de:	not    rax
   1400372e1:	inc    rax
   1400372e4:	and    eax,0xf
   1400372e7:	add    rdi,rax
   1400372ea:	mov    r8,rdi
   1400372ed:	call   0x1400184dc
   1400372f2:	add    QWORD PTR [rbx+0x130],rdi
   1400372f9:	test   rdi,rdi
   1400372fc:	je     0x140037407
   140037302:	cmp    BYTE PTR [rbx+0xfa],0x0
   140037309:	mov    rbp,QWORD PTR [rbx+0xa8]
   140037310:	je     0x140037329
   140037312:	mov    rax,QWORD PTR [rbp+0x7fb8]
   140037319:	cmp    rax,rdi
   14003731c:	jge    0x140037329
   14003731e:	xor    esi,esi
   140037320:	test   rax,rax
   140037323:	cmovg  rsi,rax
   140037327:	jmp    0x14003732c
   140037329:	mov    rsi,rdi
   14003732c:	mov    r8,rsi
   14003732f:	mov    rdx,r14
   140037332:	mov    rcx,rbp
   140037335:	call   0x1400212ac
   14003733a:	cmp    BYTE PTR [rbx+0xfa],0x0
   140037341:	je     0x140037355
   140037343:	lea    rcx,[rbx+0x150]
   14003734a:	mov    r8,rsi
   14003734d:	mov    rdx,r14
   140037350:	call   0x1400242cc
   140037355:	add    QWORD PTR [rbx+0x110],rsi
   14003735c:	mov    rcx,QWORD PTR [rbx+0xb0]
   140037363:	test   rcx,rcx
   140037366:	jne    0x140037375
   140037368:	cmp    QWORD PTR [rbx+0xb8],rcx
   14003736f:	je     0x1400373fb
   140037375:	cmp    BYTE PTR [rbx+0xfa],0x0
   14003737c:	je     0x1400373fb
   14003737e:	mov    rax,QWORD PTR [rbp+0x7fb8]
   140037385:	cmp    rax,rdi
   140037388:	jge    0x1400373f1
   14003738a:	mov    rdx,QWORD PTR [rbx+0xb8]
   140037391:	test   rdx,rdx
   140037394:	je     0x1400373af
   140037396:	mov    r8,QWORD PTR [rbx+0xc0]
   14003739d:	test   r8,r8
   1400373a0:	je     0x1400373af
   1400373a2:	mov    r9,rbx
   1400373a5:	mov    rcx,rbp
   1400373a8:	call   0x1400553cc
   1400373ad:	jmp    0x1400373fb
   1400373af:	add    rcx,0x8
   1400373b3:	call   0x14000541c
   1400373b8:	mov    r9,rbx
   1400373bb:	lea    r8,[rsp+0x40]
   1400373c0:	lea    rdx,[rax+0x1000]
   1400373c7:	mov    rax,QWORD PTR [rbx+0xb0]
   1400373ce:	mov    rcx,QWORD PTR [rax+0x20]
   1400373d2:	mov    QWORD PTR [rsp+0x40],rcx
   1400373d7:	mov    rcx,rbp
   1400373da:	call   0x1400553cc
   1400373df:	mov    rcx,QWORD PTR [rbx+0xb0]
   1400373e6:	mov    rax,QWORD PTR [rsp+0x40]
   1400373eb:	mov    QWORD PTR [rcx+0x20],rax
   1400373ef:	jmp    0x1400373fb
   1400373f1:	sub    rax,rsi
   1400373f4:	mov    QWORD PTR [rbp+0x7fb8],rax
   1400373fb:	add    r14,rsi
   1400373fe:	sub    rdi,rsi
   140037401:	jne    0x140037302
   140037407:	mov    rbx,QWORD PTR [rsp+0x48]
   14003740c:	mov    rbp,QWORD PTR [rsp+0x50]
   140037411:	add    rsp,0x20
   140037415:	pop    r14
   140037417:	pop    rdi
   140037418:	pop    rsi
   140037419:	jmp    0x140046bb4
   14003741e:	int3   
   14003741f:	int3   
   140037420:	mov    rax,rsp
   140037423:	mov    QWORD PTR [rax+0x8],rbx
   140037427:	mov    QWORD PTR [rax+0x10],rsi
   14003742b:	mov    QWORD PTR [rax+0x18],rdi
   14003742f:	mov    QWORD PTR [rax+0x20],r14
   140037433:	push   r15
   140037435:	sub    rsp,0x20
   140037439:	mov    BYTE PTR [r8],0x0
   14003743d:	mov    rsi,r9
   140037440:	mov    BYTE PTR [r9],0x0
   140037444:	mov    rdi,r8
   140037447:	and    QWORD PTR [rcx+0xe0],0x0
   14003744f:	mov    r14,rdx
   140037452:	and    QWORD PTR [rcx+0xe8],0x0
   14003745a:	mov    rbx,rcx
   14003745d:	mov    BYTE PTR [rcx+0xf0],0x1
   140037464:	mov    r15d,0x100000
   14003746a:	mov    rcx,QWORD PTR [rbx+0xe0]
   140037471:	mov    r8,r15
   140037474:	mov    rdx,QWORD PTR [rbx+0xd8]
   14003747b:	sub    r8,rcx
   14003747e:	add    rdx,rcx
   140037481:	mov    rcx,QWORD PTR [rbx+0xa0]
   140037488:	call   0x140020ac8
   14003748d:	cmp    eax,0xffffffff
   140037490:	je     0x1400374aa
   140037492:	test   eax,eax
   140037494:	je     0x1400374ad
   140037496:	cdqe   
   140037498:	add    QWORD PTR [rbx+0xe0],rax
   14003749f:	cmp    QWORD PTR [rbx+0xe0],r15
   1400374a6:	jb     0x14003746a
   1400374a8:	jmp    0x1400374ad
   1400374aa:	mov    BYTE PTR [rdi],0x1
   1400374ad:	cmp    QWORD PTR [rbx+0xe0],r15
   1400374b4:	mov    rdi,QWORD PTR [rsp+0x40]
   1400374b9:	sete   al
   1400374bc:	mov    BYTE PTR [rsi],al
   1400374be:	mov    rax,QWORD PTR [rbx+0xe0]
   1400374c5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400374ca:	mov    rsi,QWORD PTR [rsp+0x38]
   1400374cf:	mov    QWORD PTR [r14],rax
   1400374d2:	mov    r14,QWORD PTR [rsp+0x48]
   1400374d7:	add    rsp,0x20
   1400374db:	pop    r15
   1400374dd:	ret    
   1400374de:	int3   
   1400374df:	int3   
   1400374e0:	xor    eax,eax
   1400374e2:	mov    QWORD PTR [rcx+0xe0],rax
   1400374e9:	mov    QWORD PTR [rcx+0xe8],rax
   1400374f0:	mov    BYTE PTR [rcx+0xf0],al
   1400374f6:	ret    
   1400374f7:	int3   
   1400374f8:	mov    BYTE PTR [rcx+0x1b1],0x1
   1400374ff:	mov    rcx,QWORD PTR [rcx+0xd0]
   140037506:	jmp    0x1400185d0
   14003750b:	int3   
   14003750c:	mov    r11,rsp
   14003750f:	push   rbx
   140037510:	sub    rsp,0x50
   140037514:	mov    rax,QWORD PTR [rsp+0xa0]
   14003751c:	mov    rbx,rcx
   14003751f:	mov    QWORD PTR [r11-0x18],rax
   140037523:	mov    rax,QWORD PTR [rsp+0x98]
   14003752b:	mov    QWORD PTR [r11-0x20],rax
   14003752f:	mov    eax,DWORD PTR [rsp+0x90]
   140037536:	mov    DWORD PTR [rsp+0x30],eax
   14003753a:	mov    rax,QWORD PTR [rsp+0x88]
   140037542:	mov    QWORD PTR [r11-0x30],rax
   140037546:	mov    rax,QWORD PTR [rsp+0x80]
   14003754e:	mov    QWORD PTR [r11-0x38],rax
   140037552:	test   dl,dl
   140037554:	je     0x14003756c
   140037556:	mov    rcx,QWORD PTR [rcx+0xc8]
   14003755d:	mov    dl,0x1
   14003755f:	call   0x1400185ec
   140037564:	mov    BYTE PTR [rbx+0x1b0],al
   14003756a:	jmp    0x140037580
   14003756c:	mov    rcx,QWORD PTR [rcx+0xd0]
   140037573:	xor    edx,edx
   140037575:	call   0x1400185ec
   14003757a:	mov    BYTE PTR [rbx+0x1b1],al
   140037580:	add    rsp,0x50
   140037584:	pop    rbx
   140037585:	ret    
   140037586:	int3   
   140037587:	int3   
   140037588:	xor    eax,eax
   14003758a:	test   rdx,rdx
   14003758d:	je     0x140037596
   14003758f:	mov    QWORD PTR [rcx+0xa0],rdx
   140037596:	test   r8,r8
   140037599:	je     0x1400375a2
   14003759b:	mov    QWORD PTR [rcx+0xa8],r8
   1400375a2:	or     DWORD PTR [rcx+0xf4],0xffffffff
   1400375a9:	mov    QWORD PTR [rcx+0xe0],rax
   1400375b0:	mov    QWORD PTR [rcx+0xe8],rax
   1400375b7:	mov    BYTE PTR [rcx+0xf0],al
   1400375bd:	ret    
   1400375be:	int3   
   1400375bf:	int3   
   1400375c0:	mov    BYTE PTR [rcx+0x38],0x1
   1400375c4:	mov    QWORD PTR [rcx+0x48],rdx
   1400375c8:	mov    QWORD PTR [rcx+0x40],r8
   1400375cc:	ret    
   1400375cd:	int3   
   1400375ce:	int3   
   1400375cf:	int3   
   1400375d0:	and    QWORD PTR [rcx+0x28],0x0
   1400375d5:	and    QWORD PTR [rcx+0x30],0x0
   1400375da:	mov    QWORD PTR [rcx],rdx
   1400375dd:	ret    
   1400375de:	int3   
   1400375df:	int3   
   1400375e0:	mov    eax,r8d
   1400375e3:	mov    QWORD PTR [rcx+0x70],rax
   1400375e7:	mov    BYTE PTR [rcx+0x68],0x1
   1400375eb:	mov    QWORD PTR [rcx+0x78],rdx
   1400375ef:	ret    
   1400375f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400375f5:	mov    QWORD PTR [rsp+0x10],rbp
   1400375fa:	mov    QWORD PTR [rsp+0x18],rsi
   1400375ff:	push   rdi
   140037600:	sub    rsp,0x30
   140037604:	cmp    BYTE PTR [rcx+0x98],0x0
   14003760b:	mov    rdi,rcx
   14003760e:	je     0x140037677
   140037610:	mov    rsi,QWORD PTR [rcx+0xa8]
   140037617:	mov    rcx,QWORD PTR [rcx+0x128]
   14003761e:	mov    rdx,QWORD PTR [rsi+0x7fc0]
   140037625:	mov    rbx,QWORD PTR [rsi+0x22b0]
   14003762c:	call   0x14004596c
   140037631:	cmp    BYTE PTR [rbx+0x6150],0x0
   140037638:	mov    ebp,eax
   14003763a:	jne    0x140037677
   14003763c:	cmp    eax,DWORD PTR [rdi+0xf4]
   140037642:	je     0x140037677
   140037644:	mov    rcx,QWORD PTR [rdi+0x130]
   14003764b:	mov    r9,QWORD PTR [rsi+0x7fc0]
   140037652:	mov    r8,QWORD PTR [rdi+0x128]
   140037659:	mov    rdx,QWORD PTR [rsi+0x4550]
   140037660:	mov    QWORD PTR [rsp+0x20],rcx
   140037665:	mov    rcx,QWORD PTR [rdi+0x108]
   14003766c:	call   0x14004829c
   140037671:	mov    DWORD PTR [rdi+0xf4],ebp
   140037677:	mov    rbx,QWORD PTR [rsp+0x40]
   14003767c:	mov    rbp,QWORD PTR [rsp+0x48]
   140037681:	mov    rsi,QWORD PTR [rsp+0x50]
   140037686:	add    rsp,0x30
   14003768a:	pop    rdi
   14003768b:	ret    
   14003768c:	mov    QWORD PTR [rsp+0x8],rbx
   140037691:	mov    QWORD PTR [rsp+0x10],rbp
   140037696:	mov    QWORD PTR [rsp+0x18],rsi
   14003769b:	push   rdi
   14003769c:	push   r14
   14003769e:	push   r15
   1400376a0:	sub    rsp,0x20
   1400376a4:	cmp    BYTE PTR [rcx+0x98],0x0
   1400376ab:	mov    r14,r8
   1400376ae:	mov    rsi,rdx
   1400376b1:	mov    rdi,rcx
   1400376b4:	je     0x140037724
   1400376b6:	mov    rbp,QWORD PTR [rcx+0xa0]
   1400376bd:	test   rbp,rbp
   1400376c0:	je     0x140037724
   1400376c2:	cmp    QWORD PTR [rcx],0x0
   1400376c6:	jne    0x140037724
   1400376c8:	mov    rax,QWORD PTR [rcx+0x148]
   1400376cf:	test   rax,rax
   1400376d2:	je     0x1400376de
   1400376d4:	add    rsi,QWORD PTR [rcx+0x140]
   1400376db:	mov    r14,rax
   1400376de:	mov    rbx,QWORD PTR [rbp+0x22b0]
   1400376e5:	mov    rdx,r14
   1400376e8:	mov    rcx,rsi
   1400376eb:	call   0x14004596c
   1400376f0:	cmp    BYTE PTR [rbx+0x6150],0x0
   1400376f7:	mov    r15d,eax
   1400376fa:	jne    0x140037724
   1400376fc:	cmp    eax,DWORD PTR [rdi+0xf4]
   140037702:	je     0x140037724
   140037704:	mov    rdx,QWORD PTR [rbp+0x4550]
   14003770b:	mov    r9,r14
   14003770e:	mov    rcx,QWORD PTR [rdi+0x120]
   140037715:	mov    r8,rsi
   140037718:	call   0x1400487f8
   14003771d:	mov    DWORD PTR [rdi+0xf4],r15d
   140037724:	mov    rbx,QWORD PTR [rsp+0x40]
   140037729:	mov    rbp,QWORD PTR [rsp+0x48]
   14003772e:	mov    rsi,QWORD PTR [rsp+0x50]
   140037733:	add    rsp,0x20
   140037737:	pop    r15
   140037739:	pop    r14
   14003773b:	pop    rdi
   14003773c:	ret    
   14003773d:	int3   
   14003773e:	int3   
   14003773f:	int3   
   140037740:	mov    rax,rsp
   140037743:	mov    QWORD PTR [rax+0x8],rbx
   140037747:	mov    QWORD PTR [rax+0x10],rbp
   14003774b:	mov    QWORD PTR [rax+0x18],rsi
   14003774f:	mov    QWORD PTR [rax+0x20],rdi
   140037753:	push   r12
   140037755:	push   r14
   140037757:	push   r15
   140037759:	sub    rsp,0x20
   14003775d:	cmp    BYTE PTR [rcx+0x1b1],0x0
   140037764:	mov    rsi,r8
   140037767:	mov    r15,rdx
   14003776a:	mov    rbx,rcx
   14003776d:	je     0x140037773
   14003776f:	and    rsi,0xfffffffffffffff0
   140037773:	xor    edi,edi
   140037775:	mov    r12,rdx
   140037778:	xor    ebp,ebp
   14003777a:	test   rsi,rsi
   14003777d:	je     0x1400378a4
   140037783:	cmp    BYTE PTR [rbx+0x50],0x0
   140037787:	mov    r14,QWORD PTR [rbx+0xa0]
   14003778e:	je     0x1400377ad
   140037790:	mov    r8,QWORD PTR [rbx+0x58]
   140037794:	mov    rcx,r15
   140037797:	mov    rdx,QWORD PTR [rbx+0x60]
   14003779b:	call   0x140059180
   1400377a0:	mov    edi,DWORD PTR [rbx+0x58]
   1400377a3:	and    QWORD PTR [rbx+0x58],0x0
   1400377a8:	jmp    0x14003783b
   1400377ad:	mov    rax,QWORD PTR [rbx+0x90]
   1400377b4:	mov    r8,rsi
   1400377b7:	cmp    rsi,rax
   1400377ba:	cmovg  r8,rax
   1400377be:	test   r8,r8
   1400377c1:	je     0x14003783b
   1400377c3:	cmp    BYTE PTR [rbx+0xfb],0x0
   1400377ca:	je     0x1400377f3
   1400377cc:	cmp    BYTE PTR [rbx+0x1b1],0x0
   1400377d3:	je     0x1400377f3
   1400377d5:	cmp    rsi,rax
   1400377d8:	jle    0x1400377f3
   1400377da:	movsxd rax,ebp
   1400377dd:	add    rax,r8
   1400377e0:	mov    rcx,rax
   1400377e3:	and    rcx,0xfffffffffffffff0
   1400377e7:	sub    rcx,rax
   1400377ea:	add    rcx,r8
   1400377ed:	test   ecx,ecx
   1400377ef:	cmovg  r8,rcx
   1400377f3:	cmp    QWORD PTR [r14+0x8],0xffffffffffffffff
   1400377f8:	je     0x14003789f
   1400377fe:	mov    rax,QWORD PTR [r14]
   140037801:	mov    rdx,r12
   140037804:	mov    rcx,r14
   140037807:	call   QWORD PTR [rax+0x10]
   14003780a:	movsxd rdi,eax
   14003780d:	mov    rax,QWORD PTR [rbx+0xb8]
   140037814:	test   rax,rax
   140037817:	jne    0x140037820
   140037819:	lea    rax,[r14+0x34f0]
   140037820:	cmp    BYTE PTR [rax+0x1099],0x0
   140037827:	je     0x14003783b
   140037829:	mov    r8,rdi
   14003782c:	lea    rcx,[rbx+0x150]
   140037833:	mov    rdx,r12
   140037836:	call   0x1400242cc
   14003783b:	movsxd rax,edi
   14003783e:	add    ebp,edi
   140037840:	add    QWORD PTR [rbx+0x118],rax
   140037847:	add    r12,rax
   14003784a:	sub    QWORD PTR [rbx+0x90],rax
   140037851:	sub    rsi,rax
   140037854:	cmp    BYTE PTR [rbx+0xfb],0x0
   14003785b:	je     0x1400378a4
   14003785d:	cmp    QWORD PTR [rbx+0x90],0x0
   140037865:	jne    0x1400378a4
   140037867:	test   edi,edi
   140037869:	je     0x14003787a
   14003786b:	cmp    BYTE PTR [rbx+0x1b1],0x0
   140037872:	je     0x1400378a4
   140037874:	test   bpl,0xf
   140037878:	je     0x1400378a4
   14003787a:	movzx  r9d,WORD PTR [rbx+0xf8]
   140037882:	mov    r8b,0x1
   140037885:	mov    rdx,rbx
   140037888:	mov    rcx,r14
   14003788b:	call   0x140054dcc
   140037890:	test   al,al
   140037892:	jne    0x14003777a
   140037898:	mov    BYTE PTR [rbx+0xfc],0x1
   14003789f:	or     eax,0xffffffff
   1400378a2:	jmp    0x1400378f6
   1400378a4:	mov    rax,QWORD PTR [rbx+0xa0]
   1400378ab:	test   rax,rax
   1400378ae:	je     0x1400378cd
   1400378b0:	mov    rdx,QWORD PTR [rbx+0x118]
   1400378b7:	mov    rcx,rbx
   1400378ba:	add    rdx,QWORD PTR [rax+0x7f78]
   1400378c1:	mov    r8,QWORD PTR [rbx+0x100]
   1400378c8:	call   0x14003768c
   1400378cd:	cmp    edi,0xffffffff
   1400378d0:	je     0x1400378ef
   1400378d2:	cmp    BYTE PTR [rbx+0x1b1],0x0
   1400378d9:	mov    edi,ebp
   1400378db:	je     0x1400378ef
   1400378dd:	mov    rcx,QWORD PTR [rbx+0xd0]
   1400378e4:	mov    rdx,r15
   1400378e7:	movsxd r8,ebp
   1400378ea:	call   0x1400182c8
   1400378ef:	call   0x140046bb4
   1400378f4:	mov    eax,edi
   1400378f6:	mov    rbx,QWORD PTR [rsp+0x40]
   1400378fb:	mov    rbp,QWORD PTR [rsp+0x48]
   140037900:	mov    rsi,QWORD PTR [rsp+0x50]
   140037905:	mov    rdi,QWORD PTR [rsp+0x58]
   14003790a:	add    rsp,0x20
   14003790e:	pop    r15
   140037910:	pop    r14
   140037912:	pop    r12
   140037914:	ret    
   140037915:	int3   
   140037916:	int3   
   140037917:	int3   
   140037918:	mov    rax,rsp
   14003791b:	mov    QWORD PTR [rax+0x8],rbx
   14003791f:	mov    QWORD PTR [rax+0x10],rbp
   140037923:	mov    QWORD PTR [rax+0x18],rsi
   140037927:	mov    QWORD PTR [rax+0x20],rdi
   14003792b:	push   r14
   14003792d:	sub    rsp,0x30
   140037931:	cmp    QWORD PTR [rcx],0x0
   140037935:	mov    rdi,r8
   140037938:	mov    rsi,rdx
   14003793b:	mov    QWORD PTR [rcx+0x88],rdx
   140037942:	mov    rbx,rcx
   140037945:	mov    QWORD PTR [rcx+0x80],r8
   14003794c:	je     0x140037992
   14003794e:	mov    r14,QWORD PTR [rcx+0x30]
   140037952:	add    r14,r8
   140037955:	cmp    r14,QWORD PTR [rcx+0x18]
   140037959:	jbe    0x14003796d
   14003795b:	mov    rdx,r14
   14003795e:	sub    rdx,QWORD PTR [rcx+0x10]
   140037962:	add    rcx,0x8
   140037966:	call   0x140001858
   14003796b:	jmp    0x140037971
   14003796d:	mov    QWORD PTR [rcx+0x10],r14
   140037971:	mov    rcx,QWORD PTR [rbx+0x30]
   140037975:	mov    r8,rdi
   140037978:	add    rcx,QWORD PTR [rbx+0x8]
   14003797c:	mov    rdx,rsi
   14003797f:	call   0x140059180
   140037984:	mov    rax,QWORD PTR [rbx]
   140037987:	mov    QWORD PTR [rbx+0x30],r14
   14003798b:	mov    BYTE PTR [rax+0x4da8],0x1
   140037992:	cmp    BYTE PTR [rbx+0x68],0x0
   140037996:	je     0x1400379b7
   140037998:	cmp    rdi,QWORD PTR [rbx+0x70]
   14003799c:	ja     0x1400379d2
   14003799e:	mov    rcx,QWORD PTR [rbx+0x78]
   1400379a2:	mov    r8,rdi
   1400379a5:	mov    rdx,rsi
   1400379a8:	call   0x140059180
   1400379ad:	add    QWORD PTR [rbx+0x78],rdi
   1400379b1:	sub    QWORD PTR [rbx+0x70],rdi
   1400379b5:	jmp    0x1400379d2
   1400379b7:	cmp    BYTE PTR [rbx+0x99],0x0
   1400379be:	jne    0x1400379d2
   1400379c0:	mov    rcx,QWORD PTR [rbx+0xa8]
   1400379c7:	mov    r8,rdi
   1400379ca:	mov    rdx,rsi
   1400379cd:	call   0x1400212ac
   1400379d2:	add    QWORD PTR [rbx+0x120],rdi
   1400379d9:	cmp    BYTE PTR [rbx+0x9a],0x0
   1400379e0:	jne    0x1400379f4
   1400379e2:	lea    rcx,[rbx+0x190]
   1400379e9:	mov    r8,rdi
   1400379ec:	mov    rdx,rsi
   1400379ef:	call   0x1400242cc
   1400379f4:	cmp    BYTE PTR [rbx+0xf1],0x0
   1400379fb:	je     0x140037a14
   1400379fd:	and    QWORD PTR [rsp+0x20],0x0
   140037a03:	xor    r9d,r9d
   140037a06:	xor    r8d,r8d
   140037a09:	mov    rdx,rdi
   140037a0c:	mov    rcx,rsi
   140037a0f:	call   0x1400238e4
   140037a14:	mov    rbx,QWORD PTR [rsp+0x40]
   140037a19:	mov    rbp,QWORD PTR [rsp+0x48]
   140037a1e:	mov    rsi,QWORD PTR [rsp+0x50]
   140037a23:	mov    rdi,QWORD PTR [rsp+0x58]
   140037a28:	add    rsp,0x30
   140037a2c:	pop    r14
   140037a2e:	jmp    0x140046bb4
   140037a33:	int3   
   140037a34:	mov    r11,rsp
   140037a37:	sub    rsp,0xa8
   140037a3e:	mov    rax,QWORD PTR [rip+0x4a49b]        # 0x140081ee0
   140037a45:	xor    rax,rsp
   140037a48:	mov    QWORD PTR [rsp+0x90],rax
   140037a50:	mov    DWORD PTR [r11-0x20],ecx
   140037a54:	mov    eax,0x1
   140037a59:	mov    QWORD PTR [rsp+0x20],rdx
   140037a5e:	lea    rcx,[rsp+0x20]
   140037a63:	mov    DWORD PTR [r11-0x28],eax
   140037a67:	mov    DWORD PTR [r11-0x48],r8d
   140037a6b:	mov    DWORD PTR [r11-0x24],eax
   140037a6f:	call   0x1400479a4
   140037a74:	mov    rcx,QWORD PTR [rsp+0x90]
   140037a7c:	xor    rcx,rsp
   140037a7f:	call   0x140055f90
   140037a84:	add    rsp,0xa8
   140037a8b:	ret    
   140037a8c:	mov    rax,rsp
   140037a8f:	mov    QWORD PTR [rax+0x8],rcx
   140037a93:	push   rdi
   140037a94:	sub    rsp,0x30
   140037a98:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140037aa0:	mov    QWORD PTR [rax+0x10],rbx
   140037aa4:	mov    QWORD PTR [rax+0x18],rsi
   140037aa8:	mov    bl,dl
   140037aaa:	mov    rdi,rcx
   140037aad:	lea    rsi,[rcx+0x800]
   140037ab4:	and    QWORD PTR [rsi],0x0
   140037ab8:	and    QWORD PTR [rsi+0x8],0x0
   140037abd:	and    QWORD PTR [rsi+0x10],0x0
   140037ac2:	and    QWORD PTR [rsi+0x18],0x0
   140037ac7:	xor    edx,edx
   140037ac9:	mov    r8d,0x800
   140037acf:	call   0x140058f40
   140037ad4:	test   bl,bl
   140037ad6:	je     0x140037ae2
   140037ad8:	and    QWORD PTR [rdi+0x820],0x0
   140037ae0:	jmp    0x140037b1e
   140037ae2:	mov    eax,0x4000000
   140037ae7:	cmp    QWORD PTR [rsi+0x10],rax
   140037aeb:	jae    0x140037afe
   140037aed:	sub    rax,QWORD PTR [rsi+0x8]
   140037af1:	mov    rdx,rax
   140037af4:	mov    rcx,rsi
   140037af7:	call   0x140001858
   140037afc:	jmp    0x140037b02
   140037afe:	mov    QWORD PTR [rsi+0x8],rax
   140037b02:	xor    edx,edx
   140037b04:	mov    r8d,0x800
   140037b0a:	mov    rcx,rdi
   140037b0d:	call   0x140058f40
   140037b12:	call   0x140046ea4
   140037b17:	mov    QWORD PTR [rdi+0x820],rax
   140037b1e:	mov    rax,rdi
   140037b21:	mov    rbx,QWORD PTR [rsp+0x48]
   140037b26:	mov    rsi,QWORD PTR [rsp+0x50]
   140037b2b:	add    rsp,0x30
   140037b2f:	pop    rdi
   140037b30:	ret    
   140037b31:	int3   
   140037b32:	int3   
   140037b33:	int3   
   140037b34:	mov    QWORD PTR [rsp+0x8],rcx
   140037b39:	push   rbx
   140037b3a:	sub    rsp,0x30
   140037b3e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140037b47:	mov    rbx,rcx
   140037b4a:	xor    r8d,r8d
   140037b4d:	mov    QWORD PTR [rcx],r8
   140037b50:	mov    QWORD PTR [rcx+0x8],r8
   140037b54:	mov    QWORD PTR [rcx+0x10],r8
   140037b58:	mov    QWORD PTR [rcx+0x18],r8
   140037b5c:	mov    QWORD PTR [rcx+0x30],r8
   140037b60:	mov    QWORD PTR [rcx+0x20],r8
   140037b64:	mov    QWORD PTR [rcx+0x48],r8
   140037b68:	mov    DWORD PTR [rcx+0x50],r8d
   140037b6c:	mov    QWORD PTR [rcx+0x40],r8
   140037b70:	lea    rax,[rcx+0x78]
   140037b74:	lea    ecx,[r8+0x20]
   140037b78:	mov    QWORD PTR [rax-0x8],rbx
   140037b7c:	mov    QWORD PTR [rax],r8
   140037b7f:	lea    rax,[rax+0x30]
   140037b83:	sub    rcx,0x1
   140037b87:	jne    0x140037b78
   140037b89:	test   dl,dl
   140037b8b:	je     0x140037b93
   140037b8d:	mov    QWORD PTR [rbx+0x68],r8
   140037b91:	jmp    0x140037bbd
   140037b93:	call   0x140046ea4
   140037b98:	mov    QWORD PTR [rbx+0x68],rax
   140037b9c:	mov    ecx,0x4000010
   140037ba1:	call   0x140055df0
   140037ba6:	mov    QWORD PTR [rbx+0x30],rax
   140037baa:	mov    rcx,rax
   140037bad:	not    rcx
   140037bb0:	inc    rcx
   140037bb3:	and    ecx,0xf
   140037bb6:	add    rcx,rax
   140037bb9:	mov    QWORD PTR [rbx+0x38],rcx
   140037bbd:	mov    rax,rbx
   140037bc0:	add    rsp,0x30
   140037bc4:	pop    rbx
   140037bc5:	ret    
   140037bc6:	int3   
   140037bc7:	int3   
   140037bc8:	rex push rdi
   140037bca:	sub    rsp,0x30
   140037bce:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140037bd7:	mov    QWORD PTR [rsp+0x40],rbx
   140037bdc:	mov    rdi,rcx
   140037bdf:	xor    ebx,ebx
   140037be1:	mov    rcx,QWORD PTR [rdi+rbx*8]
   140037be5:	test   rcx,rcx
   140037be8:	je     0x140037bf5
   140037bea:	mov    rax,QWORD PTR [rcx]
   140037bed:	mov    edx,0x1
   140037bf2:	call   QWORD PTR [rax]
   140037bf4:	nop
   140037bf5:	inc    rbx
   140037bf8:	cmp    rbx,0x100
   140037bff:	jb     0x140037be1
   140037c01:	mov    rcx,QWORD PTR [rdi+0x820]
   140037c08:	call   0x140047010
   140037c0d:	nop
   140037c0e:	mov    rcx,QWORD PTR [rdi+0x800]
   140037c15:	test   rcx,rcx
   140037c18:	je     0x140037c20
   140037c1a:	call   0x14005a938
   140037c1f:	nop
   140037c20:	mov    rbx,QWORD PTR [rsp+0x40]
   140037c25:	add    rsp,0x30
   140037c29:	pop    rdi
   140037c2a:	ret    
   140037c2b:	int3   
   140037c2c:	mov    rax,rsp
   140037c2f:	push   rdi
   140037c30:	sub    rsp,0x30
   140037c34:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140037c3c:	mov    QWORD PTR [rax+0x8],rbx
   140037c40:	mov    QWORD PTR [rax+0x10],rbp
   140037c44:	mov    QWORD PTR [rax+0x18],rsi
   140037c48:	mov    rbx,rcx
   140037c4b:	mov    rcx,QWORD PTR [rcx+0x30]
   140037c4f:	call   0x140055de8
   140037c54:	nop
   140037c55:	mov    rcx,QWORD PTR [rbx+0x20]
   140037c59:	call   0x140055de8
   140037c5e:	nop
   140037c5f:	xor    edi,edi
   140037c61:	cmp    QWORD PTR [rbx+0x8],rdi
   140037c65:	jbe    0x140037c91
   140037c67:	xor    eax,eax
   140037c69:	imul   rcx,rax,0x1020
   140037c70:	mov    rax,QWORD PTR [rbx]
   140037c73:	mov    rcx,QWORD PTR [rcx+rax*1]
   140037c77:	test   rcx,rcx
   140037c7a:	je     0x140037c87
   140037c7c:	mov    rax,QWORD PTR [rcx]
   140037c7f:	mov    edx,0x1
   140037c84:	call   QWORD PTR [rax]
   140037c86:	nop
   140037c87:	inc    edi
   140037c89:	mov    eax,edi
   140037c8b:	cmp    rax,QWORD PTR [rbx+0x8]
   140037c8f:	jb     0x140037c69
   140037c91:	lea    rdi,[rbx+0x78]
   140037c95:	mov    ebp,0x20
   140037c9a:	mov    rsi,QWORD PTR [rdi]
   140037c9d:	test   rsi,rsi
   140037ca0:	je     0x140037cb9
   140037ca2:	mov    rcx,rsi
   140037ca5:	call   0x140041c00
   140037caa:	nop
   140037cab:	mov    edx,0x40
   140037cb0:	mov    rcx,rsi
   140037cb3:	call   0x140055de8
   140037cb8:	nop
   140037cb9:	add    rdi,0x30
   140037cbd:	sub    rbp,0x1
   140037cc1:	jne    0x140037c9a
   140037cc3:	mov    rcx,QWORD PTR [rbx+0x68]
   140037cc7:	call   0x140047010
   140037ccc:	nop
   140037ccd:	mov    rcx,QWORD PTR [rbx]
   140037cd0:	test   rcx,rcx
   140037cd3:	je     0x140037cdb
   140037cd5:	call   0x14005a938
   140037cda:	nop
   140037cdb:	mov    rbx,QWORD PTR [rsp+0x40]
   140037ce0:	mov    rbp,QWORD PTR [rsp+0x48]
   140037ce5:	mov    rsi,QWORD PTR [rsp+0x50]
   140037cea:	add    rsp,0x30
   140037cee:	pop    rdi
   140037cef:	ret    
   140037cf0:	mov    QWORD PTR [rsp+0x8],rbx
   140037cf5:	mov    QWORD PTR [rsp+0x10],rsi
   140037cfa:	push   rdi
   140037cfb:	sub    rsp,0x20
   140037cff:	add    QWORD PTR [rcx+0x8],rdx
   140037d03:	mov    rbx,rcx
   140037d06:	mov    rax,QWORD PTR [rcx+0x8]
   140037d0a:	cmp    rax,QWORD PTR [rcx+0x10]
   140037d0e:	jbe    0x140037d82
   140037d10:	mov    r8,QWORD PTR [rcx+0x18]
   140037d14:	test   r8,r8
   140037d17:	je     0x140037d3d
   140037d19:	cmp    rax,r8
   140037d1c:	jbe    0x140037d3d
   140037d1e:	lea    rdx,[rip+0x380ab]        # 0x14006fdd0
   140037d25:	lea    rcx,[rip+0x5cb34]        # 0x140094860
   140037d2c:	call   0x14001bc8c
   140037d31:	lea    rcx,[rip+0x5cb28]        # 0x140094860
   140037d38:	call   0x14001bd24
   140037d3d:	mov    rdx,QWORD PTR [rbx+0x10]
   140037d41:	mov    rcx,QWORD PTR [rbx]
   140037d44:	mov    rax,rdx
   140037d47:	shr    rax,0x2
   140037d4b:	lea    rdi,[rdx+0x20]
   140037d4f:	add    rdi,rax
   140037d52:	cmp    QWORD PTR [rbx+0x8],rdi
   140037d56:	cmova  rdi,QWORD PTR [rbx+0x8]
   140037d5b:	imul   rdx,rdi,0x1020
   140037d62:	call   0x14005a940
   140037d67:	mov    rsi,rax
   140037d6a:	test   rax,rax
   140037d6d:	jne    0x140037d7b
   140037d6f:	lea    rcx,[rip+0x5caea]        # 0x140094860
   140037d76:	call   0x14001bd24
   140037d7b:	mov    QWORD PTR [rbx],rsi
   140037d7e:	mov    QWORD PTR [rbx+0x10],rdi
   140037d82:	mov    rbx,QWORD PTR [rsp+0x30]
   140037d87:	mov    rsi,QWORD PTR [rsp+0x38]
   140037d8c:	add    rsp,0x20
   140037d90:	pop    rdi
   140037d91:	ret    
   140037d92:	int3   
   140037d93:	int3   
   140037d94:	mov    QWORD PTR [rsp+0x10],rbx
   140037d99:	mov    QWORD PTR [rsp+0x18],rsi
   140037d9e:	push   rdi
   140037d9f:	sub    rsp,0x140
   140037da6:	mov    rax,QWORD PTR [rip+0x4a133]        # 0x140081ee0
   140037dad:	xor    rax,rsp
   140037db0:	mov    QWORD PTR [rsp+0x130],rax
   140037db8:	movsxd rdi,DWORD PTR [rcx+0x2c20]
   140037dbf:	mov    rbx,rcx
   140037dc2:	cmp    edi,DWORD PTR [rcx+0x2c24]
   140037dc8:	jge    0x140037e78
   140037dce:	mov    r10d,DWORD PTR [rcx+0x2c40]
   140037dd5:	mov    rsi,rdi
   140037dd8:	movsxd r8,DWORD PTR [rbx+0x2c28]
   140037ddf:	xor    ecx,ecx
   140037de1:	test   r8d,r8d
   140037de4:	jle    0x140037e05
   140037de6:	mov    rdx,QWORD PTR [rbx+0x2c10]
   140037ded:	add    rdx,rsi
   140037df0:	mov    al,BYTE PTR [rdx]
   140037df2:	add    rdx,QWORD PTR [rbx+0x2c30]
   140037df9:	mov    BYTE PTR [rsp+rcx*1+0x30],al
   140037dfd:	inc    rcx
   140037e00:	cmp    rcx,r8
   140037e03:	jl     0x140037df0
   140037e05:	mov    r9,QWORD PTR [rbx+0x2c38]
   140037e0c:	lea    rdx,[rsp+0x30]
   140037e11:	mov    rcx,rbx
   140037e14:	mov    DWORD PTR [rsp+0x20],r10d
   140037e19:	call   0x1400413c0
   140037e1e:	mov    r10d,DWORD PTR [rbx+0x2c40]
   140037e25:	xor    r9d,r9d
   140037e28:	test   r10d,r10d
   140037e2b:	jle    0x140037e67
   140037e2d:	xor    r8d,r8d
   140037e30:	mov    rax,QWORD PTR [rbx+0x2c38]
   140037e37:	inc    r9d
   140037e3a:	movsxd rcx,DWORD PTR [r8+rax*1]
   140037e3e:	lea    r8,[r8+0x4]
   140037e42:	mov    rdx,rcx
   140037e45:	imul   rdx,QWORD PTR [rbx+0x2c30]
   140037e4d:	mov    al,BYTE PTR [rsp+rcx*1+0x30]
   140037e51:	add    rdx,QWORD PTR [rbx+0x2c10]
   140037e58:	mov    BYTE PTR [rdx+rsi*1],al
   140037e5b:	mov    r10d,DWORD PTR [rbx+0x2c40]
   140037e62:	cmp    r9d,r10d
   140037e65:	jl     0x140037e30
   140037e67:	inc    edi
   140037e69:	inc    rsi
   140037e6c:	cmp    edi,DWORD PTR [rbx+0x2c24]
   140037e72:	jl     0x140037dd8
   140037e78:	mov    rcx,QWORD PTR [rsp+0x130]
   140037e80:	xor    rcx,rsp
   140037e83:	call   0x140055f90
   140037e88:	lea    r11,[rsp+0x140]
   140037e90:	mov    rbx,QWORD PTR [r11+0x18]
   140037e94:	mov    rsi,QWORD PTR [r11+0x20]
   140037e98:	mov    rsp,r11
   140037e9b:	pop    rdi
   140037e9c:	ret    
   140037e9d:	int3   
   140037e9e:	int3   
   140037e9f:	int3   
   140037ea0:	mov    QWORD PTR [rsp+0x10],rbx
   140037ea5:	mov    QWORD PTR [rsp+0x18],rsi
   140037eaa:	push   rdi
   140037eab:	sub    rsp,0x230
   140037eb2:	mov    rax,QWORD PTR [rip+0x4a027]        # 0x140081ee0
   140037eb9:	xor    rax,rsp
   140037ebc:	mov    QWORD PTR [rsp+0x220],rax
   140037ec4:	movsxd rdi,DWORD PTR [rcx+0x2c20]
   140037ecb:	mov    rbx,rcx
   140037ece:	cmp    edi,DWORD PTR [rcx+0x2c24]
   140037ed4:	jge    0x140037f68
   140037eda:	mov    rsi,rdi
   140037edd:	movsxd r8,DWORD PTR [rbx+0x2c28]
   140037ee4:	xor    ecx,ecx
   140037ee6:	test   r8d,r8d
   140037ee9:	jle    0x140037f0a
   140037eeb:	mov    rdx,QWORD PTR [rbx+0x2c10]
   140037ef2:	add    rdx,rsi
   140037ef5:	mov    al,BYTE PTR [rdx]
   140037ef7:	add    rdx,QWORD PTR [rbx+0x2c30]
   140037efe:	mov    BYTE PTR [rsp+rcx*1+0x20],al
   140037f02:	inc    rcx
   140037f05:	cmp    rcx,r8
   140037f08:	jl     0x140037ef5
   140037f0a:	lea    r9,[rsp+0x120]
   140037f12:	mov    rcx,rbx
   140037f15:	lea    rdx,[rsp+0x20]
   140037f1a:	call   0x140041814
   140037f1f:	xor    r8d,r8d
   140037f22:	xor    edx,edx
   140037f24:	cmp    DWORD PTR [rbx+0x2c2c],edx
   140037f2a:	jle    0x140037f57
   140037f2c:	mov    rcx,QWORD PTR [rbx+0x2c30]
   140037f33:	inc    r8d
   140037f36:	mov    al,BYTE PTR [rsp+rdx*1+0x120]
   140037f3d:	imul   rcx,rdx
   140037f41:	inc    rdx
   140037f44:	add    rcx,QWORD PTR [rbx+0x2c18]
   140037f4b:	mov    BYTE PTR [rcx+rsi*1],al
   140037f4e:	cmp    r8d,DWORD PTR [rbx+0x2c2c]
   140037f55:	jl     0x140037f2c
   140037f57:	inc    edi
   140037f59:	inc    rsi
   140037f5c:	cmp    edi,DWORD PTR [rbx+0x2c24]
   140037f62:	jl     0x140037edd
   140037f68:	mov    rcx,QWORD PTR [rsp+0x220]
   140037f70:	xor    rcx,rsp
   140037f73:	call   0x140055f90
   140037f78:	lea    r11,[rsp+0x230]
   140037f80:	mov    rbx,QWORD PTR [r11+0x18]
   140037f84:	mov    rsi,QWORD PTR [r11+0x20]
   140037f88:	mov    rsp,r11
   140037f8b:	pop    rdi
   140037f8c:	ret    
   140037f8d:	int3   
   140037f8e:	int3   
   140037f8f:	int3   
   140037f90:	mov    QWORD PTR [rsp+0x8],rbx
   140037f95:	mov    QWORD PTR [rsp+0x10],rbp
   140037f9a:	mov    QWORD PTR [rsp+0x18],rsi
   140037f9f:	push   rdi
   140037fa0:	sub    rsp,0x20
   140037fa4:	mov    rbp,rcx
   140037fa7:	call   0x140031bd4
   140037fac:	xor    edi,edi
   140037fae:	mov    rbx,rax
   140037fb1:	test   rax,rax
   140037fb4:	jne    0x140037fba
   140037fb6:	mov    al,0x1
   140037fb8:	jmp    0x140037fee
   140037fba:	mov    esi,edi
   140037fbc:	jmp    0x140037fdf
   140037fbe:	movzx  ecx,WORD PTR [rbx]
   140037fc1:	call   0x140045d18
   140037fc6:	test   al,al
   140037fc8:	jne    0x140037fdf
   140037fca:	cmp    WORD PTR [rbx],0x5f
   140037fce:	jne    0x140037fe8
   140037fd0:	movzx  ecx,WORD PTR [rbx-0x2]
   140037fd4:	call   0x140045d18
   140037fd9:	test   al,al
   140037fdb:	je     0x140037fe8
   140037fdd:	inc    esi
   140037fdf:	sub    rbx,0x2
   140037fe3:	cmp    rbx,rbp
   140037fe6:	ja     0x140037fbe
   140037fe8:	cmp    esi,0x2
   140037feb:	setl   al
   140037fee:	mov    rbx,QWORD PTR [rsp+0x30]
   140037ff3:	mov    rbp,QWORD PTR [rsp+0x38]
   140037ff8:	mov    rsi,QWORD PTR [rsp+0x40]
   140037ffd:	add    rsp,0x20
   140038001:	pop    rdi
   140038002:	ret    
   140038003:	int3   
   140038004:	rex push rbp
   140038006:	push   rsi
   140038007:	push   rdi
   140038008:	push   r12
   14003800a:	push   r13
   14003800c:	push   r14
   14003800e:	push   r15
   140038010:	lea    rbp,[rsp-0x63910]
   140038018:	mov    eax,0x63a10
   14003801d:	call   0x140055f20
   140038022:	sub    rsp,rax
   140038025:	mov    QWORD PTR [rbp-0x60],0xfffffffffffffffe
   14003802d:	mov    QWORD PTR [rsp+0x63a68],rbx
   140038035:	mov    rax,QWORD PTR [rip+0x49ea4]        # 0x140081ee0
   14003803c:	xor    rax,rsp
   14003803f:	mov    QWORD PTR [rbp+0x63900],rax
   140038046:	mov    rsi,r8
   140038049:	mov    r12,rdx
   14003804c:	mov    QWORD PTR [rsp+0x70],rdx
   140038051:	mov    r13,rcx
   140038054:	mov    QWORD PTR [rsp+0x60],rcx
   140038059:	lea    rcx,[rbp+0x20]
   14003805d:	call   0x140007678
   140038062:	nop
   140038063:	mov    rdx,rsi
   140038066:	lea    rcx,[rbp+0x20]
   14003806a:	call   0x14000a894
   14003806f:	xor    r15d,r15d
   140038072:	test   al,al
   140038074:	je     0x14003875b
   14003807a:	mov    r14b,BYTE PTR [rbp+0x7fb2]
   140038081:	lea    edx,[r15+0x5]
   140038085:	lea    rcx,[rbp+0x20]
   140038089:	call   0x14000e778
   14003808e:	test   rax,rax
   140038091:	je     0x1400380a1
   140038093:	cmp    BYTE PTR [rbp+0x5846],r15b
   14003809a:	mov    BYTE PTR [rsp+0x50],0x1
   14003809f:	jne    0x1400380a6
   1400380a1:	mov    BYTE PTR [rsp+0x50],r15b
   1400380a6:	lea    rcx,[rbp+0x20]
   1400380aa:	call   0x1400207cc
   1400380af:	mov    rcx,rsi
   1400380b2:	lea    rdx,[rbp+0x61900]
   1400380b9:	sub    rdx,rsi
   1400380bc:	movzx  eax,WORD PTR [rcx]
   1400380bf:	mov    WORD PTR [rdx+rcx*1],ax
   1400380c3:	lea    rcx,[rcx+0x2]
   1400380c7:	test   ax,ax
   1400380ca:	jne    0x1400380bc
   1400380cc:	mov    edi,r15d
   1400380cf:	mov    DWORD PTR [rsp+0x68],r15d
   1400380d4:	mov    rcx,rsi
   1400380d7:	call   0x140021dec
   1400380dc:	test   al,al
   1400380de:	je     0x140038168
   1400380e4:	mov    ecx,0x1030
   1400380e9:	call   0x140055dac
   1400380ee:	mov    QWORD PTR [rbp-0x68],rax
   1400380f2:	test   rax,rax
   1400380f5:	je     0x140038104
   1400380f7:	mov    rcx,rax
   1400380fa:	call   0x14002071c
   1400380ff:	mov    rbx,rax
   140038102:	jmp    0x140038107
   140038104:	mov    rbx,r15
   140038107:	mov    rdx,rsi
   14003810a:	mov    rcx,rbx
   14003810d:	call   0x14002117c
   140038112:	movsxd rax,edi
   140038115:	mov    QWORD PTR [r13+rax*8+0x0],rbx
   14003811a:	inc    edi
   14003811c:	mov    DWORD PTR [rsp+0x68],edi
   140038120:	mov    eax,0xff
   140038125:	cmp    edi,eax
   140038127:	jge    0x140038153
   140038129:	test   r14b,r14b
   14003812c:	sete   r8b
   140038130:	mov    edx,0x800
   140038135:	mov    rcx,rsi
   140038138:	call   0x14003259c
   14003813d:	mov    rcx,rsi
   140038140:	call   0x140021dec
   140038145:	test   al,al
   140038147:	jne    0x1400380e4
   140038149:	cmp    edi,0x1
   14003814c:	jne    0x140038168
   14003814e:	jmp    0x14003875b
   140038153:	mov    r8d,eax
   140038156:	mov    rdx,rsi
   140038159:	mov    ecx,0x30
   14003815e:	call   0x140037a34
   140038163:	jmp    0x14003875b
   140038168:	mov    ebx,DWORD PTR [r12+0x614c]
   140038170:	mov    DWORD PTR [rsp+0x54],ebx
   140038174:	test   ebx,ebx
   140038176:	jns    0x14003819f
   140038178:	imul   ebx,edi
   14003817b:	neg    ebx
   14003817d:	mov    eax,0x51eb851f
   140038182:	imul   ebx
   140038184:	sar    edx,0x5
   140038187:	mov    eax,edx
   140038189:	shr    eax,0x1f
   14003818c:	add    edx,eax
   14003818e:	imul   eax,edx,0x64
   140038191:	cmp    ebx,eax
   140038193:	mov    ebx,r15d
   140038196:	setne  bl
   140038199:	add    ebx,edx
   14003819b:	mov    DWORD PTR [rsp+0x54],ebx
   14003819f:	cmp    ebx,edi
   1400381a1:	jl     0x1400381aa
   1400381a3:	lea    ebx,[rdi-0x1]
   1400381a6:	mov    DWORD PTR [rsp+0x54],ebx
   1400381aa:	lea    eax,[rbx+rdi*1]
   1400381ad:	cmp    eax,0xff
   1400381b2:	jle    0x1400381d2
   1400381b4:	mov    r8d,0xff
   1400381ba:	mov    rdx,rsi
   1400381bd:	mov    ecx,0x30
   1400381c2:	call   0x140037a34
   1400381c7:	mov    ebx,0xff
   1400381cc:	sub    ebx,edi
   1400381ce:	mov    DWORD PTR [rsp+0x54],ebx
   1400381d2:	lea    eax,[rbx+rdi*1]
   1400381d5:	movsxd rcx,eax
   1400381d8:	xor    edx,edx
   1400381da:	mov    eax,0x4000000
   1400381df:	div    rcx
   1400381e2:	mov    rcx,rax
   1400381e5:	mov    QWORD PTR [rsp+0x78],rax
   1400381ea:	movsxd rax,edi
   1400381ed:	lea    r15,[rax*8+0x0]
   1400381f5:	add    r15,r13
   1400381f8:	mov    QWORD PTR [rbp-0x68],r15
   1400381fc:	imul   rax,rcx
   140038200:	add    rax,QWORD PTR [r13+0x800]
   140038207:	mov    QWORD PTR [rbp-0x70],rax
   14003820b:	lea    rcx,[rbp+0x61900]
   140038212:	call   0x140031bd4
   140038217:	mov    rsi,rax
   14003821a:	xor    eax,eax
   14003821c:	test   rsi,rsi
   14003821f:	je     0x140038266
   140038221:	test   r14b,r14b
   140038224:	je     0x140038263
   140038226:	lea    rcx,[rbp+0x61900]
   14003822d:	call   0x140031e24
   140038232:	mov    rsi,rax
   140038235:	lea    rax,[rbp+0x61900]
   14003823c:	cmp    rsi,rax
   14003823f:	jbe    0x140038261
   140038241:	lea    r14,[rsi-0x2]
   140038245:	movzx  ecx,WORD PTR [r14]
   140038249:	call   0x140045d18
   14003824e:	test   al,al
   140038250:	je     0x140038261
   140038252:	mov    rsi,r14
   140038255:	lea    rax,[rbp+0x61900]
   14003825c:	cmp    r14,rax
   14003825f:	ja     0x140038241
   140038261:	xor    eax,eax
   140038263:	mov    WORD PTR [rsi],ax
   140038266:	mov    rcx,QWORD PTR [r13+0x0]
   14003826a:	call   0x140020b88
   14003826f:	mov    QWORD PTR [rbp-0x80],rax
   140038273:	mov    ecx,edi
   140038275:	call   0x140045bd4
   14003827a:	mov    r14d,eax
   14003827d:	xor    eax,eax
   14003827f:	test   ebx,ebx
   140038281:	jle    0x1400383dc
   140038287:	lea    esi,[rax+0x1]
   14003828a:	mov    r12d,ebx
   14003828d:	mov    r13,QWORD PTR [rsp+0x70]
   140038292:	mov    WORD PTR [rbp+0x62900],ax
   140038299:	lea    r9,[rbp+0x61900]
   1400382a0:	mov    edx,0x800
   1400382a5:	lea    rcx,[rbp+0x62900]
   1400382ac:	cmp    BYTE PTR [rsp+0x50],al
   1400382b0:	je     0x1400382c9
   1400382b2:	mov    DWORD PTR [rsp+0x28],esi
   1400382b6:	mov    DWORD PTR [rsp+0x20],r14d
   1400382bb:	lea    r8,[rip+0x37af6]        # 0x14006fdb8
   1400382c2:	call   0x140006acc
   1400382c7:	jmp    0x1400382f0
   1400382c9:	mov    DWORD PTR [rsp+0x48],esi
   1400382cd:	mov    DWORD PTR [rsp+0x40],r14d
   1400382d2:	mov    DWORD PTR [rsp+0x38],ebx
   1400382d6:	mov    DWORD PTR [rsp+0x30],r14d
   1400382db:	mov    DWORD PTR [rsp+0x28],edi
   1400382df:	mov    DWORD PTR [rsp+0x20],r14d
   1400382e4:	lea    r8,[rip+0x37b3d]        # 0x14006fe28
   1400382eb:	call   0x140006acc
   1400382f0:	mov    ecx,0x1030
   1400382f5:	call   0x140055dac
   1400382fa:	mov    QWORD PTR [rbp-0x78],rax
   1400382fe:	xor    ecx,ecx
   140038300:	test   rax,rax
   140038303:	je     0x140038311
   140038305:	mov    rcx,rax
   140038308:	call   0x14002071c
   14003830d:	xor    ecx,ecx
   14003830f:	jmp    0x140038314
   140038311:	mov    rax,rcx
   140038314:	mov    QWORD PTR [r15],rax
   140038317:	mov    BYTE PTR [rsp+0x38],cl
   14003831b:	mov    QWORD PTR [rsp+0x30],rcx
   140038320:	movabs rcx,0x7fffffff7fffffff
   14003832a:	mov    QWORD PTR [rsp+0x28],rcx
   14003832f:	lea    rcx,[rsp+0x51]
   140038334:	mov    QWORD PTR [rsp+0x20],rcx
   140038339:	mov    r9d,0x800
   14003833f:	lea    r8,[rbp+0x62900]
   140038346:	mov    rdx,rax
   140038349:	mov    rcx,r13
   14003834c:	call   0x1400202cc
   140038351:	test   al,al
   140038353:	jne    0x14003838f
   140038355:	mov    al,BYTE PTR [rsp+0x51]
   140038359:	test   al,al
   14003835b:	jne    0x140038376
   14003835d:	lea    r8,[rbp+0x62900]
   140038364:	xor    edx,edx
   140038366:	lea    rcx,[rip+0x5c4f3]        # 0x140094860
   14003836d:	call   0x14001bc28
   140038372:	mov    al,BYTE PTR [rsp+0x51]
   140038376:	neg    al
   140038378:	sbb    edx,edx
   14003837a:	and    edx,0xf6
   140038380:	add    edx,0x9
   140038383:	lea    rcx,[rip+0x5c4d6]        # 0x140094860
   14003838a:	call   0x14001bc60
   14003838f:	mov    rdx,QWORD PTR [rbp-0x80]
   140038393:	mov    rcx,QWORD PTR [r15]
   140038396:	call   0x140020e04
   14003839b:	lea    rdx,[rbp+0x62900]
   1400383a2:	mov    ecx,0x6c
   1400383a7:	call   0x1400013b0
   1400383ac:	lea    rdx,[rbp+0x62900]
   1400383b3:	mov    ecx,0x8a
   1400383b8:	call   0x1400013b0
   1400383bd:	inc    esi
   1400383bf:	add    r15,0x8
   1400383c3:	sub    r12,0x1
   1400383c7:	mov    eax,0x0
   1400383cc:	jne    0x140038292
   1400383d2:	mov    r13,QWORD PTR [rsp+0x60]
   1400383d7:	mov    r12,QWORD PTR [rsp+0x70]
   1400383dc:	xor    r15d,r15d
   1400383df:	mov    QWORD PTR [rbp-0x78],r15
   1400383e3:	or     DWORD PTR [rsp+0x58],0xffffffff
   1400383e8:	lea    rcx,[rip+0x37a69]        # 0x14006fe58
   1400383ef:	call   0x14001796c
   1400383f4:	mov    eax,DWORD PTR [r12+0x83d0]
   1400383fc:	mov    DWORD PTR [rsp+0x6c],eax
   140038400:	test   eax,eax
   140038402:	je     0x140038425
   140038404:	lea    rsi,[rbp+0x9000]
   14003840b:	mov    r14d,eax
   14003840e:	mov    edx,ebx
   140038410:	mov    rcx,rsi
   140038413:	call   0x14004197c
   140038418:	add    rsi,0x2c48
   14003841f:	sub    r14,0x1
   140038423:	jne    0x14003840e
   140038425:	mov    esi,r15d
   140038428:	test   edi,edi
   14003842a:	jle    0x14003861d
   140038430:	mov    r14,r15
   140038433:	mov    r15,r13
   140038436:	mov    r13d,edi
   140038439:	mov    rdi,QWORD PTR [rsp+0x60]
   14003843e:	mov    rbx,QWORD PTR [rsp+0x78]
   140038443:	call   0x140046bb4
   140038448:	mov    rdx,QWORD PTR [rdi+0x800]
   14003844f:	add    rdx,r14
   140038452:	mov    rcx,QWORD PTR [r15]
   140038455:	mov    rax,QWORD PTR [rcx]
   140038458:	mov    r8,rbx
   14003845b:	call   QWORD PTR [rax+0x10]
   14003845e:	movsxd r12,eax
   140038461:	mov    rax,r12
   140038464:	cmp    r12,rbx
   140038467:	je     0x140038483
   140038469:	mov    r8,rbx
   14003846c:	sub    r8,rax
   14003846f:	mov    rcx,QWORD PTR [rdi+0x800]
   140038476:	add    rcx,rax
   140038479:	add    rcx,r14
   14003847c:	xor    edx,edx
   14003847e:	call   0x140058f40
   140038483:	cmp    r12d,esi
   140038486:	cmovg  esi,r12d
   14003848a:	add    r14,rbx
   14003848d:	add    r15,0x8
   140038491:	sub    r13,0x1
   140038495:	jne    0x140038443
   140038497:	mov    ebx,DWORD PTR [rsp+0x54]
   14003849b:	mov    edi,DWORD PTR [rsp+0x68]
   14003849f:	xor    r15d,r15d
   1400384a2:	test   esi,esi
   1400384a4:	je     0x140038613
   1400384aa:	xor    edx,edx
   1400384ac:	mov    eax,esi
   1400384ae:	mov    r8d,DWORD PTR [rsp+0x6c]
   1400384b3:	div    r8d
   1400384b6:	mov    r14d,eax
   1400384b9:	cmp    eax,0x100
   1400384be:	cmovl  r14d,esi
   1400384c2:	xor    eax,eax
   1400384c4:	mov    r12d,eax
   1400384c7:	test   esi,esi
   1400384c9:	jle    0x14003856d
   1400384cf:	lea    r13d,[r8-0x1]
   1400384d3:	cmp    r12d,r13d
   1400384d6:	jne    0x1400384de
   1400384d8:	mov    r14d,esi
   1400384db:	sub    r14d,r15d
   1400384de:	mov    eax,r12d
   1400384e1:	imul   rcx,rax,0x2c48
   1400384e8:	lea    rax,[rbp+0x9000]
   1400384ef:	add    rcx,rax
   1400384f2:	mov    r9,QWORD PTR [rsp+0x60]
   1400384f7:	mov    rax,QWORD PTR [r9+0x800]
   1400384fe:	mov    QWORD PTR [rcx+0x2c10],rax
   140038505:	mov    rax,QWORD PTR [rbp-0x70]
   140038509:	mov    QWORD PTR [rcx+0x2c18],rax
   140038510:	mov    DWORD PTR [rcx+0x2c20],r15d
   140038517:	add    r15d,r14d
   14003851a:	mov    DWORD PTR [rcx+0x2c24],r15d
   140038521:	mov    DWORD PTR [rcx+0x2c28],edi
   140038527:	mov    DWORD PTR [rcx+0x2c2c],ebx
   14003852d:	mov    rax,QWORD PTR [rsp+0x78]
   140038532:	mov    QWORD PTR [rcx+0x2c30],rax
   140038539:	cmp    r8d,0x1
   14003853d:	jbe    0x140038557
   14003853f:	mov    r8,rcx
   140038542:	lea    rdx,[rip+0xb57]        # 0x1400390a0
   140038549:	mov    rcx,QWORD PTR [r9+0x820]
   140038550:	call   0x140046dd8
   140038555:	jmp    0x14003855c
   140038557:	call   0x140037ea0
   14003855c:	inc    r12d
   14003855f:	cmp    r15d,esi
   140038562:	mov    r8d,DWORD PTR [rsp+0x6c]
   140038567:	jl     0x1400384d3
   14003856d:	mov    r13,QWORD PTR [rsp+0x60]
   140038572:	mov    rcx,QWORD PTR [r13+0x820]
   140038579:	call   0x140047214
   14003857e:	test   ebx,ebx
   140038580:	jle    0x1400385be
   140038582:	movsxd r13,esi
   140038585:	mov    r14,QWORD PTR [rbp-0x68]
   140038589:	mov    r15,QWORD PTR [rbp-0x70]
   14003858d:	mov    r12,rbx
   140038590:	mov    rbx,QWORD PTR [rsp+0x78]
   140038595:	call   0x140046bb4
   14003859a:	mov    r8,r13
   14003859d:	mov    rdx,r15
   1400385a0:	mov    rcx,QWORD PTR [r14]
   1400385a3:	call   0x1400212ac
   1400385a8:	add    r15,rbx
   1400385ab:	lea    r14,[r14+0x8]
   1400385af:	sub    r12,0x1
   1400385b3:	jne    0x140038595
   1400385b5:	mov    ebx,DWORD PTR [rsp+0x54]
   1400385b9:	mov    r13,QWORD PTR [rsp+0x60]
   1400385be:	mov    rdx,QWORD PTR [rbp-0x80]
   1400385c2:	mov    r15,QWORD PTR [rbp-0x78]
   1400385c6:	mov    rcx,r15
   1400385c9:	call   0x14004596c
   1400385ce:	mov    r14d,eax
   1400385d1:	mov    r12,QWORD PTR [rsp+0x70]
   1400385d6:	xor    eax,eax
   1400385d8:	cmp    BYTE PTR [r12+0x6150],al
   1400385e0:	jne    0x140038601
   1400385e2:	cmp    r14d,DWORD PTR [rsp+0x58]
   1400385e7:	je     0x140038601
   1400385e9:	mov    r8,QWORD PTR [rbp-0x80]
   1400385ed:	mov    rdx,r15
   1400385f0:	lea    rcx,[rip+0x376cd]        # 0x14006fcc4
   1400385f7:	call   0x140048840
   1400385fc:	mov    DWORD PTR [rsp+0x58],r14d
   140038601:	movsxd rax,esi
   140038604:	add    r15,rax
   140038607:	mov    QWORD PTR [rbp-0x78],r15
   14003860b:	xor    r15d,r15d
   14003860e:	jmp    0x140038425
   140038613:	mov    r13,QWORD PTR [rsp+0x60]
   140038618:	mov    r12,QWORD PTR [rsp+0x70]
   14003861d:	cmp    BYTE PTR [r12+0x6150],r15b
   140038625:	jne    0x14003863b
   140038627:	mov    edx,0x64
   14003862c:	mov    r8d,edx
   14003862f:	lea    rcx,[rip+0x3769e]        # 0x14006fcd4
   140038636:	call   0x140048840
   14003863b:	mov    cl,BYTE PTR [rsp+0x50]
   14003863f:	test   cl,cl
   140038641:	je     0x14003865c
   140038643:	and    QWORD PTR [rbp+0x10],0x0
   140038648:	mov    DWORD PTR [rbp+0x18],0x6e
   14003864f:	lea    rcx,[rbp-0x50]
   140038653:	call   0x1400479a4
   140038658:	mov    cl,BYTE PTR [rsp+0x50]
   14003865c:	mov    esi,r15d
   14003865f:	lea    eax,[rbx+rdi*1]
   140038662:	test   eax,eax
   140038664:	jle    0x14003873e
   14003866a:	movsxd rax,esi
   14003866d:	mov    r14,QWORD PTR [r13+rax*8+0x0]
   140038672:	test   cl,cl
   140038674:	je     0x140038722
   14003867a:	cmp    esi,edi
   14003867c:	jl     0x140038722
   140038682:	mov    rax,QWORD PTR [r14]
   140038685:	mov    rcx,r14
   140038688:	call   QWORD PTR [rax+0x20]
   14003868b:	mov    r15,rax
   14003868e:	cmp    rax,0x4
   140038692:	jl     0x14003873b
   140038698:	mov    r9,QWORD PTR [r14]
   14003869b:	lea    rdx,[rax-0x7]
   14003869f:	xor    r8d,r8d
   1400386a2:	mov    rcx,r14
   1400386a5:	call   QWORD PTR [r9+0x18]
   1400386a9:	lea    edx,[rdi-0x1]
   1400386ac:	mov    rcx,r14
   1400386af:	call   0x140020e38
   1400386b4:	lea    edx,[rbx-0x1]
   1400386b7:	mov    rcx,r14
   1400386ba:	call   0x140020e38
   1400386bf:	mov    dl,sil
   1400386c2:	sub    dl,dil
   1400386c5:	mov    rcx,r14
   1400386c8:	call   0x140020e38
   1400386cd:	lea    rdx,[r14+0x26]
   1400386d1:	mov    ecx,0x5d
   1400386d6:	call   0x1400013b0
   1400386db:	lea    rax,[r15-0x4]
   1400386df:	xor    r15d,r15d
   1400386e2:	mov    DWORD PTR [rsp+0x28],r15d
   1400386e7:	mov    QWORD PTR [rsp+0x20],rax
   1400386ec:	mov    r9d,DWORD PTR [r12+0x83d0]
   1400386f4:	xor    r8d,r8d
   1400386f7:	lea    rdx,[rsp+0x58]
   1400386fc:	mov    rcx,r14
   1400386ff:	call   0x140021500
   140038704:	mov    edx,DWORD PTR [rsp+0x58]
   140038708:	mov    ecx,r15d
   14003870b:	shr    edx,cl
   14003870d:	mov    rcx,r14
   140038710:	call   0x140020e38
   140038715:	add    r15d,0x8
   140038719:	cmp    r15d,0x20
   14003871d:	jl     0x140038704
   14003871f:	xor    r15d,r15d
   140038722:	mov    rcx,r14
   140038725:	call   0x1400207cc
   14003872a:	inc    esi
   14003872c:	lea    eax,[rbx+rdi*1]
   14003872f:	cmp    esi,eax
   140038731:	mov    cl,BYTE PTR [rsp+0x50]
   140038735:	jl     0x14003866a
   14003873b:	xor    r15d,r15d
   14003873e:	cmp    BYTE PTR [r12+0x6152],r15b
   140038746:	jne    0x14003875b
   140038748:	mov    ecx,0xd22
   14003874d:	call   0x140040118
   140038752:	mov    rcx,rax
   140038755:	call   0x14001796c
   14003875a:	nop
   14003875b:	lea    rcx,[rbp+0x20]
   14003875f:	call   0x140007880
   140038764:	mov    rcx,QWORD PTR [rbp+0x63900]
   14003876b:	xor    rcx,rsp
   14003876e:	call   0x140055f90
   140038773:	mov    rbx,QWORD PTR [rsp+0x63a68]
   14003877b:	add    rsp,0x63a10
   140038782:	pop    r15
   140038784:	pop    r14
   140038786:	pop    r13
   140038788:	pop    r12
   14003878a:	pop    rdi
   14003878b:	pop    rsi
   14003878c:	pop    rbp
   14003878d:	ret    
   14003878e:	int3   
   14003878f:	int3   
   140038790:	rex push rbp
   140038792:	push   rsi
   140038793:	push   rdi
   140038794:	push   r12
   140038796:	push   r13
   140038798:	push   r14
   14003879a:	push   r15
   14003879c:	lea    rbp,[rsp-0x4030]
   1400387a4:	mov    eax,0x4130
   1400387a9:	call   0x140055f20
   1400387ae:	sub    rsp,rax
   1400387b1:	mov    QWORD PTR [rsp+0x70],0xfffffffffffffffe
   1400387ba:	mov    QWORD PTR [rsp+0x4188],rbx
   1400387c2:	mov    rax,QWORD PTR [rip+0x49717]        # 0x140081ee0
   1400387c9:	xor    rax,rsp
   1400387cc:	mov    QWORD PTR [rbp+0x4020],rax
   1400387d3:	mov    r15,r8
   1400387d6:	mov    rsi,rdx
   1400387d9:	mov    QWORD PTR [rsp+0x50],rdx
   1400387de:	mov    r14,rcx
   1400387e1:	mov    rcx,r8
   1400387e4:	lea    rdi,[rbp+0x3020]
   1400387eb:	sub    rdi,r8
   1400387ee:	xor    r12d,r12d
   1400387f1:	movzx  eax,WORD PTR [rcx]
   1400387f4:	mov    WORD PTR [rdi+rcx*1],ax
   1400387f8:	lea    rcx,[rcx+0x2]
   1400387fc:	test   ax,ax
   1400387ff:	jne    0x1400387f1
   140038801:	mov    r13,r12
   140038804:	mov    QWORD PTR [rsp+0x58],r12
   140038809:	mov    rcx,r8
   14003880c:	call   0x140021dec
   140038811:	mov    ebx,0xffff
   140038816:	test   al,al
   140038818:	je     0x1400388c9
   14003881e:	cmp    QWORD PTR [r14+0x8],rbx
   140038822:	jae    0x1400388bf
   140038828:	mov    ecx,0x1030
   14003882d:	call   0x140055dac
   140038832:	mov    QWORD PTR [rsp+0x60],rax
   140038837:	test   rax,rax
   14003883a:	je     0x140038847
   14003883c:	mov    rcx,rax
   14003883f:	call   0x14002071c
   140038844:	mov    r12,rax
   140038847:	mov    QWORD PTR [rbp+0xfe0],r12
   14003884e:	mov    rdx,r15
   140038851:	mov    rcx,r12
   140038854:	call   0x14002117c
   140038859:	or     DWORD PTR [rbp+0x1fe8],0xffffffff
   140038860:	xor    eax,eax
   140038862:	mov    QWORD PTR [rbp+0x1ff0],rax
   140038869:	lea    rdi,[rbp+0x2000]
   140038870:	lea    rsi,[rbp+0xfe0]
   140038877:	mov    ecx,0x1020
   14003887c:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003887e:	lea    rdx,[rbp+0x2000]
   140038885:	mov    rcx,r14
   140038888:	call   0x140038ffc
   14003888d:	mov    rcx,r12
   140038890:	call   0x140020b88
   140038895:	cmp    rax,r13
   140038898:	cmovg  r13,rax
   14003889c:	xor    r8d,r8d
   14003889f:	mov    edx,0x800
   1400388a4:	mov    rcx,r15
   1400388a7:	call   0x14003259c
   1400388ac:	mov    rcx,r15
   1400388af:	call   0x140021dec
   1400388b4:	xor    r12d,r12d
   1400388b7:	test   al,al
   1400388b9:	jne    0x14003881e
   1400388bf:	mov    QWORD PTR [rsp+0x58],r13
   1400388c4:	mov    rsi,QWORD PTR [rsp+0x50]
   1400388c9:	mov    rcx,QWORD PTR [r14+0x8]
   1400388cd:	mov    DWORD PTR [r14+0x48],ecx
   1400388d1:	cmp    ecx,ebx
   1400388d3:	jb     0x1400388ea
   1400388d5:	mov    r8d,ebx
   1400388d8:	mov    rdx,r15
   1400388db:	mov    ecx,0x30
   1400388e0:	call   0x140037a34
   1400388e5:	jmp    0x140038db6
   1400388ea:	cmp    ecx,0x2
   1400388ed:	jb     0x140038db6
   1400388f3:	mov    edi,DWORD PTR [rsi+0x614c]
   1400388f9:	test   edi,edi
   1400388fb:	jns    0x140038923
   1400388fd:	imul   edi,ecx
   140038900:	neg    edi
   140038902:	mov    eax,0x51eb851f
   140038907:	mul    edi
   140038909:	shr    edx,0x5
   14003890c:	imul   eax,edx,0x64
   14003890f:	cmp    edi,eax
   140038911:	mov    edi,0x0
   140038916:	mov    eax,edi
   140038918:	setne  al
   14003891b:	add    eax,edx
   14003891d:	mov    DWORD PTR [r14+0x4c],eax
   140038921:	jmp    0x140038929
   140038923:	mov    DWORD PTR [r14+0x4c],edi
   140038927:	xor    edi,edi
   140038929:	cmp    DWORD PTR [r14+0x4c],ecx
   14003892d:	jb     0x140038936
   14003892f:	lea    eax,[rcx-0x1]
   140038932:	mov    DWORD PTR [r14+0x4c],eax
   140038936:	add    ecx,DWORD PTR [r14+0x4c]
   14003893a:	mov    DWORD PTR [r14+0x50],ecx
   14003893e:	cmp    ecx,ebx
   140038940:	jbe    0x14003895a
   140038942:	mov    r8d,ebx
   140038945:	mov    rdx,r15
   140038948:	mov    ecx,0x30
   14003894d:	call   0x140037a34
   140038952:	sub    ebx,DWORD PTR [r14+0x48]
   140038956:	mov    DWORD PTR [r14+0x4c],ebx
   14003895a:	mov    ecx,DWORD PTR [r14+0x4c]
   14003895e:	xor    edx,edx
   140038960:	mov    eax,0x4000000
   140038965:	div    rcx
   140038968:	mov    QWORD PTR [r14+0x40],rax
   14003896c:	test   al,0x1
   14003896e:	je     0x140038977
   140038970:	dec    rax
   140038973:	mov    QWORD PTR [r14+0x40],rax
   140038977:	and    QWORD PTR [r14+0x40],0xfffffffffffffff0
   14003897c:	mov    ebx,edi
   14003897e:	lea    rcx,[rbp+0x3020]
   140038985:	call   0x140031bd4
   14003898a:	test   rax,rax
   14003898d:	je     0x1400389dc
   14003898f:	lea    rcx,[rbp+0x3020]
   140038996:	call   0x140031e24
   14003899b:	mov    rdi,rax
   14003899e:	mov    ebx,0x1
   1400389a3:	lea    rax,[rbp+0x3020]
   1400389aa:	cmp    rdi,rax
   1400389ad:	jbe    0x1400389d5
   1400389af:	lea    rsi,[rdi-0x2]
   1400389b3:	movzx  ecx,WORD PTR [rsi]
   1400389b6:	call   0x140045d18
   1400389bb:	test   al,al
   1400389bd:	je     0x1400389d0
   1400389bf:	mov    rdi,rsi
   1400389c2:	inc    ebx
   1400389c4:	lea    rax,[rbp+0x3020]
   1400389cb:	cmp    rsi,rax
   1400389ce:	ja     0x1400389af
   1400389d0:	mov    rsi,QWORD PTR [rsp+0x50]
   1400389d5:	xor    eax,eax
   1400389d7:	mov    WORD PTR [rdi],ax
   1400389da:	xor    edi,edi
   1400389dc:	mov    r12d,edi
   1400389df:	cmp    DWORD PTR [r14+0x4c],edi
   1400389e3:	jbe    0x140038b3b
   1400389e9:	lea    eax,[r12+0x1]
   1400389ee:	mov    DWORD PTR [rsp+0x48],eax
   1400389f2:	mov    DWORD PTR [rsp+0x28],eax
   1400389f6:	mov    DWORD PTR [rsp+0x20],ebx
   1400389fa:	lea    r9,[rbp+0x3020]
   140038a01:	lea    r8,[rip+0x37248]        # 0x14006fc50
   140038a08:	mov    edx,0x800
   140038a0d:	lea    rcx,[rbp+0xfe0]
   140038a14:	call   0x140006acc
   140038a19:	mov    ecx,0x1030
   140038a1e:	call   0x140055dac
   140038a23:	mov    QWORD PTR [rsp+0x60],rax
   140038a28:	test   rax,rax
   140038a2b:	je     0x140038a3a
   140038a2d:	mov    rcx,rax
   140038a30:	call   0x14002071c
   140038a35:	mov    r15,rax
   140038a38:	jmp    0x140038a3d
   140038a3a:	mov    r15,rdi
   140038a3d:	mov    QWORD PTR [rbp+0x2000],r15
   140038a44:	or     DWORD PTR [rbp+0x3008],0xffffffff
   140038a4b:	mov    BYTE PTR [rsp+0x38],dil
   140038a50:	mov    QWORD PTR [rsp+0x30],rdi
   140038a55:	movabs rax,0x7fffffff7fffffff
   140038a5f:	mov    QWORD PTR [rsp+0x28],rax
   140038a64:	lea    rax,[rsp+0x40]
   140038a69:	mov    QWORD PTR [rsp+0x20],rax
   140038a6e:	mov    r9d,0x800
   140038a74:	lea    r8,[rbp+0xfe0]
   140038a7b:	mov    rdx,r15
   140038a7e:	mov    rcx,rsi
   140038a81:	call   0x1400202cc
   140038a86:	test   al,al
   140038a88:	jne    0x140038ac2
   140038a8a:	mov    al,BYTE PTR [rsp+0x40]
   140038a8e:	test   al,al
   140038a90:	jne    0x140038aa9
   140038a92:	lea    rdx,[rbp+0xfe0]
   140038a99:	lea    rcx,[rip+0x5bdc0]        # 0x140094860
   140038aa0:	call   0x14001bc54
   140038aa5:	mov    al,BYTE PTR [rsp+0x40]
   140038aa9:	neg    al
   140038aab:	sbb    edx,edx
   140038aad:	and    edx,0xf6
   140038ab3:	add    edx,0x9
   140038ab6:	lea    rcx,[rip+0x5bda3]        # 0x140094860
   140038abd:	call   0x14001bc60
   140038ac2:	lea    rdi,[rbp-0x40]
   140038ac6:	lea    rsi,[rbp+0x2000]
   140038acd:	mov    ecx,0x1020
   140038ad2:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140038ad4:	lea    rdx,[rbp-0x40]
   140038ad8:	mov    rcx,r14
   140038adb:	call   0x140038ffc
   140038ae0:	mov    rdx,r13
   140038ae3:	mov    rcx,r15
   140038ae6:	call   0x140020e04
   140038aeb:	mov    r8d,DWORD PTR [r14+0x48]
   140038aef:	add    r8d,r12d
   140038af2:	xor    r9d,r9d
   140038af5:	mov    rdx,r15
   140038af8:	mov    rcx,r14
   140038afb:	call   0x14003b494
   140038b00:	lea    rdx,[rbp+0xfe0]
   140038b07:	mov    ecx,0x6c
   140038b0c:	call   0x1400013b0
   140038b11:	lea    rdx,[rbp+0xfe0]
   140038b18:	mov    ecx,0x8a
   140038b1d:	call   0x1400013b0
   140038b22:	mov    r12d,DWORD PTR [rsp+0x48]
   140038b27:	cmp    r12d,DWORD PTR [r14+0x4c]
   140038b2b:	mov    rsi,QWORD PTR [rsp+0x50]
   140038b30:	mov    edi,0x0
   140038b35:	jb     0x1400389e9
   140038b3b:	mov    r13,rdi
   140038b3e:	mov    QWORD PTR [rsp+0x68],rdi
   140038b43:	or     DWORD PTR [rsp+0x48],0xffffffff
   140038b48:	lea    rcx,[rip+0x37119]        # 0x14006fc68
   140038b4f:	call   0x14001796c
   140038b54:	lea    rcx,[rbp-0x80]
   140038b58:	call   0x140041bcc
   140038b5d:	nop
   140038b5e:	xor    r9d,r9d
   140038b61:	mov    r8d,DWORD PTR [r14+0x4c]
   140038b65:	mov    edx,DWORD PTR [r14+0x48]
   140038b69:	lea    rcx,[rbp-0x80]
   140038b6d:	call   0x140041c3c
   140038b72:	mov    rcx,QWORD PTR [r14+0x40]
   140038b76:	add    rcx,0x10
   140038b7a:	call   0x140055df0
   140038b7f:	mov    QWORD PTR [r14+0x20],rax
   140038b83:	mov    r12,rax
   140038b86:	not    r12
   140038b89:	inc    r12
   140038b8c:	and    r12d,0xf
   140038b90:	add    r12,rax
   140038b93:	mov    QWORD PTR [rsp+0x60],r12
   140038b98:	mov    r15d,edi
   140038b9b:	mov    esi,edi
   140038b9d:	cmp    DWORD PTR [r14+0x48],edi
   140038ba1:	jbe    0x140038d2c
   140038ba7:	mov    rbx,QWORD PTR [rsp+0x58]
   140038bac:	sub    rbx,r13
   140038baf:	call   0x140046bb4
   140038bb4:	mov    eax,esi
   140038bb6:	imul   rdi,rax,0x1020
   140038bbd:	add    rdi,QWORD PTR [r14]
   140038bc0:	mov    rcx,QWORD PTR [rdi]
   140038bc3:	mov    rax,QWORD PTR [rcx]
   140038bc6:	mov    r8,QWORD PTR [r14+0x40]
   140038bca:	mov    rdx,r12
   140038bcd:	call   QWORD PTR [rax+0x10]
   140038bd0:	mov    DWORD PTR [rsp+0x44],eax
   140038bd4:	movsxd r8,eax
   140038bd7:	mov    rdx,r12
   140038bda:	mov    ecx,DWORD PTR [rdi+0x1008]
   140038be0:	call   0x140017ac0
   140038be5:	mov    DWORD PTR [rdi+0x1008],eax
   140038beb:	movsxd rcx,DWORD PTR [rsp+0x44]
   140038bf0:	mov    rax,rcx
   140038bf3:	add    QWORD PTR [rdi+0x1010],rax
   140038bfa:	mov    r8,QWORD PTR [r14+0x40]
   140038bfe:	cmp    rcx,r8
   140038c01:	je     0x140038c10
   140038c03:	sub    r8,rax
   140038c06:	add    rcx,r12
   140038c09:	xor    edx,edx
   140038c0b:	call   0x140058f40
   140038c10:	cmp    DWORD PTR [rsp+0x44],r15d
   140038c15:	cmovg  r15d,DWORD PTR [rsp+0x44]
   140038c1b:	cmp    QWORD PTR [r14+0x40],rbx
   140038c1f:	jge    0x140038c27
   140038c21:	mov    eax,DWORD PTR [r14+0x40]
   140038c25:	jmp    0x140038c2e
   140038c27:	mov    eax,DWORD PTR [rsp+0x58]
   140038c2b:	sub    eax,r13d
   140038c2e:	mov    BYTE PTR [rsp+0x28],0x1
   140038c33:	mov    DWORD PTR [rsp+0x20],eax
   140038c37:	mov    r9,r12
   140038c3a:	mov    r8d,esi
   140038c3d:	mov    rdx,QWORD PTR [rsp+0x50]
   140038c42:	mov    rcx,r14
   140038c45:	call   0x140038e70
   140038c4a:	inc    esi
   140038c4c:	cmp    esi,DWORD PTR [r14+0x48]
   140038c50:	jb     0x140038baf
   140038c56:	xor    edi,edi
   140038c58:	test   r15d,r15d
   140038c5b:	je     0x140038d2c
   140038c61:	cmp    DWORD PTR [r14+0x4c],edi
   140038c65:	jbe    0x140038cdd
   140038c67:	mov    r12d,r15d
   140038c6a:	and    r12d,0x1
   140038c6e:	mov    r13d,edi
   140038c71:	call   0x140046bb4
   140038c76:	mov    edx,r15d
   140038c79:	test   r12d,r12d
   140038c7c:	je     0x140038c82
   140038c7e:	lea    edx,[r15+0x1]
   140038c82:	mov    ecx,r13d
   140038c85:	mov    ebx,r13d
   140038c88:	imul   rbx,QWORD PTR [r14+0x40]
   140038c8d:	add    rbx,QWORD PTR [r14+0x38]
   140038c91:	mov    eax,DWORD PTR [r14+0x48]
   140038c95:	add    rax,rcx
   140038c98:	imul   rsi,rax,0x1020
   140038c9f:	add    rsi,QWORD PTR [r14]
   140038ca2:	movsxd rdi,edx
   140038ca5:	mov    r8,rdi
   140038ca8:	mov    rdx,rbx
   140038cab:	mov    rcx,QWORD PTR [rsi]
   140038cae:	call   0x1400212ac
   140038cb3:	mov    r8,rdi
   140038cb6:	mov    rdx,rbx
   140038cb9:	mov    ecx,DWORD PTR [rsi+0x1008]
   140038cbf:	call   0x140017ac0
   140038cc4:	mov    DWORD PTR [rsi+0x1008],eax
   140038cca:	inc    r13d
   140038ccd:	cmp    r13d,DWORD PTR [r14+0x4c]
   140038cd1:	jb     0x140038c71
   140038cd3:	mov    r12,QWORD PTR [rsp+0x60]
   140038cd8:	mov    r13,QWORD PTR [rsp+0x68]
   140038cdd:	mov    rsi,QWORD PTR [rsp+0x58]
   140038ce2:	mov    rdx,rsi
   140038ce5:	mov    rcx,r13
   140038ce8:	call   0x14004596c
   140038ced:	mov    edi,eax
   140038cef:	mov    rax,QWORD PTR [rsp+0x50]
   140038cf4:	xor    ecx,ecx
   140038cf6:	cmp    BYTE PTR [rax+0x6150],cl
   140038cfc:	jne    0x140038d1a
   140038cfe:	cmp    edi,DWORD PTR [rsp+0x48]
   140038d02:	je     0x140038d1a
   140038d04:	mov    r8,rsi
   140038d07:	mov    rdx,r13
   140038d0a:	lea    rcx,[rip+0x36f63]        # 0x14006fc74
   140038d11:	call   0x140048840
   140038d16:	mov    DWORD PTR [rsp+0x48],edi
   140038d1a:	movsxd rax,r15d
   140038d1d:	add    r13,rax
   140038d20:	mov    QWORD PTR [rsp+0x68],r13
   140038d25:	xor    edi,edi
   140038d27:	jmp    0x140038b98
   140038d2c:	xor    ebx,ebx
   140038d2e:	cmp    DWORD PTR [r14+0x50],ebx
   140038d32:	jbe    0x140038d79
   140038d34:	mov    eax,edi
   140038d36:	imul   rcx,rax,0x1020
   140038d3d:	mov    rax,QWORD PTR [r14]
   140038d40:	mov    rsi,QWORD PTR [rcx+rax*1]
   140038d44:	cmp    edi,DWORD PTR [r14+0x48]
   140038d48:	jb     0x140038d69
   140038d4a:	mov    rax,QWORD PTR [rsi]
   140038d4d:	xor    r8d,r8d
   140038d50:	xor    edx,edx
   140038d52:	mov    rcx,rsi
   140038d55:	call   QWORD PTR [rax+0x18]
   140038d58:	mov    r9b,0x1
   140038d5b:	mov    r8d,edi
   140038d5e:	mov    rdx,rsi
   140038d61:	mov    rcx,r14
   140038d64:	call   0x14003b494
   140038d69:	mov    rcx,rsi
   140038d6c:	call   0x1400207cc
   140038d71:	inc    edi
   140038d73:	cmp    edi,DWORD PTR [r14+0x50]
   140038d77:	jb     0x140038d34
   140038d79:	mov    rdi,QWORD PTR [rsp+0x50]
   140038d7e:	cmp    BYTE PTR [rdi+0x6150],bl
   140038d84:	jne    0x140038d92
   140038d86:	lea    rcx,[rip+0x36eeb]        # 0x14006fc78
   140038d8d:	call   0x14001796c
   140038d92:	cmp    BYTE PTR [rdi+0x6152],bl
   140038d98:	jne    0x140038dad
   140038d9a:	mov    ecx,0xd22
   140038d9f:	call   0x140040118
   140038da4:	mov    rcx,rax
   140038da7:	call   0x14001796c
   140038dac:	nop
   140038dad:	lea    rcx,[rbp-0x80]
   140038db1:	call   0x140041c00
   140038db6:	mov    rcx,QWORD PTR [rbp+0x4020]
   140038dbd:	xor    rcx,rsp
   140038dc0:	call   0x140055f90
   140038dc5:	mov    rbx,QWORD PTR [rsp+0x4188]
   140038dcd:	add    rsp,0x4130
   140038dd4:	pop    r15
   140038dd6:	pop    r14
   140038dd8:	pop    r13
   140038dda:	pop    r12
   140038ddc:	pop    rdi
   140038ddd:	pop    rsi
   140038dde:	pop    rbp
   140038ddf:	ret    
   140038de0:	mov    rax,rsp
   140038de3:	mov    QWORD PTR [rax+0x8],rbx
   140038de7:	mov    QWORD PTR [rax+0x10],rbp
   140038deb:	mov    QWORD PTR [rax+0x18],rsi
   140038def:	mov    QWORD PTR [rax+0x20],rdi
   140038df3:	push   r14
   140038df5:	sub    rsp,0x30
   140038df9:	xor    ebx,ebx
   140038dfb:	mov    rbp,rdx
   140038dfe:	mov    rdi,rcx
   140038e01:	cmp    BYTE PTR [rdx+0x10],bl
   140038e04:	je     0x140038e0b
   140038e06:	mov    esi,DWORD PTR [rcx+0x4c]
   140038e09:	jmp    0x140038e0e
   140038e0b:	mov    esi,DWORD PTR [rcx+0x60]
   140038e0e:	test   esi,esi
   140038e10:	je     0x140038e53
   140038e12:	mov    r14,rbx
   140038e15:	mov    rdx,QWORD PTR [rdi+0x40]
   140038e19:	mov    r8d,ebx
   140038e1c:	mov    rax,QWORD PTR [rbp+0x28]
   140038e20:	mov    r9,QWORD PTR [rbp+0x18]
   140038e24:	add    r9,QWORD PTR [rbp+0x20]
   140038e28:	mov    rcx,QWORD PTR [rbp+0x8]
   140038e2c:	imul   rdx,r14
   140038e30:	mov    QWORD PTR [rsp+0x28],rax
   140038e35:	add    rdx,QWORD PTR [rdi+0x38]
   140038e39:	add    rdx,QWORD PTR [rbp+0x20]
   140038e3d:	mov    QWORD PTR [rsp+0x20],rdx
   140038e42:	mov    edx,DWORD PTR [rbp+0x14]
   140038e45:	call   0x1400423a4
   140038e4a:	inc    ebx
   140038e4c:	inc    r14
   140038e4f:	cmp    ebx,esi
   140038e51:	jb     0x140038e15
   140038e53:	mov    rbx,QWORD PTR [rsp+0x40]
   140038e58:	mov    rbp,QWORD PTR [rsp+0x48]
   140038e5d:	mov    rsi,QWORD PTR [rsp+0x50]
   140038e62:	mov    rdi,QWORD PTR [rsp+0x58]
   140038e67:	add    rsp,0x30
   140038e6b:	pop    r14
   140038e6d:	ret    
   140038e6e:	int3   
   140038e6f:	int3   
   140038e70:	mov    rax,rsp
   140038e73:	mov    QWORD PTR [rax+0x20],r9
   140038e77:	mov    DWORD PTR [rax+0x18],r8d
   140038e7b:	push   rbp
   140038e7c:	push   rsi
   140038e7d:	push   rdi
   140038e7e:	push   r12
   140038e80:	push   r13
   140038e82:	push   r14
   140038e84:	push   r15
   140038e86:	sub    rsp,0x30
   140038e8a:	mov    QWORD PTR [rax-0x48],0xfffffffffffffffe
   140038e92:	mov    QWORD PTR [rax+0x10],rbx
   140038e96:	mov    rdi,rcx
   140038e99:	mov    r15d,DWORD PTR [rdx+0x83d0]
   140038ea0:	mov    r10d,DWORD PTR [rsp+0x90]
   140038ea8:	mov    eax,r10d
   140038eab:	shr    eax,0xc
   140038eae:	cmp    r15d,eax
   140038eb1:	cmovae r15d,eax
   140038eb5:	mov    r8d,0x1
   140038ebb:	cmp    r15d,r8d
   140038ebe:	cmovb  r15d,r8d
   140038ec2:	xor    edx,edx
   140038ec4:	mov    eax,r10d
   140038ec7:	div    r15d
   140038eca:	mov    r13d,eax
   140038ecd:	and    r13d,r8d
   140038ed0:	add    r13d,eax
   140038ed3:	mov    ecx,r13d
   140038ed6:	not    ecx
   140038ed8:	add    ecx,r8d
   140038edb:	and    ecx,0xf
   140038ede:	add    r13d,ecx
   140038ee1:	mov    eax,0x1000
   140038ee6:	cmp    r13d,eax
   140038ee9:	cmovb  r13d,eax
   140038eed:	xor    ebp,ebp
   140038eef:	xor    esi,esi
   140038ef1:	test   r15d,r15d
   140038ef4:	je     0x140038fdd
   140038efa:	mov    r14d,r10d
   140038efd:	lea    rbx,[rdi+0x78]
   140038f01:	mov    r12b,BYTE PTR [rsp+0x98]
   140038f09:	cmp    rsi,r14
   140038f0c:	jae    0x140038fdd
   140038f12:	cmp    QWORD PTR [rbx],0x0
   140038f16:	jne    0x140038f5b
   140038f18:	mov    ecx,0x40
   140038f1d:	call   0x140055dac
   140038f22:	mov    QWORD PTR [rsp+0x70],rax
   140038f27:	test   rax,rax
   140038f2a:	je     0x140038f35
   140038f2c:	mov    rcx,rax
   140038f2f:	call   0x140041bcc
   140038f34:	nop
   140038f35:	mov    QWORD PTR [rbx],rax
   140038f38:	test   r12b,r12b
   140038f3b:	je     0x140038f42
   140038f3d:	xor    r9d,r9d
   140038f40:	jmp    0x140038f46
   140038f42:	mov    r9,QWORD PTR [rdi+0x58]
   140038f46:	mov    r8d,DWORD PTR [rdi+0x4c]
   140038f4a:	mov    edx,DWORD PTR [rdi+0x48]
   140038f4d:	mov    rcx,rax
   140038f50:	call   0x140041c3c
   140038f55:	mov    r8d,0x1
   140038f5b:	mov    eax,DWORD PTR [rsp+0x80]
   140038f62:	mov    DWORD PTR [rbx+0xc],eax
   140038f65:	mov    rax,QWORD PTR [rsp+0x88]
   140038f6d:	mov    QWORD PTR [rbx+0x10],rax
   140038f71:	mov    BYTE PTR [rbx+0x8],r12b
   140038f75:	mov    QWORD PTR [rbx+0x18],rsi
   140038f79:	mov    edx,r13d
   140038f7c:	add    rdx,rsi
   140038f7f:	cmp    rdx,r14
   140038f82:	ja     0x140038f8d
   140038f84:	lea    ecx,[r15-0x1]
   140038f88:	cmp    rbp,rcx
   140038f8b:	jne    0x140038f90
   140038f8d:	mov    rdx,r14
   140038f90:	mov    rax,rdx
   140038f93:	sub    rax,rsi
   140038f96:	mov    QWORD PTR [rbx+0x20],rax
   140038f9a:	mov    rsi,rdx
   140038f9d:	cmp    r15d,r8d
   140038fa0:	jbe    0x140038fb8
   140038fa2:	lea    r8,[rbx-0x8]
   140038fa6:	lea    rdx,[rip+0x317]        # 0x1400392c4
   140038fad:	mov    rcx,QWORD PTR [rdi+0x68]
   140038fb1:	call   0x140046dd8
   140038fb6:	jmp    0x140038fc4
   140038fb8:	lea    rdx,[rbx-0x8]
   140038fbc:	mov    rcx,rdi
   140038fbf:	call   0x140038de0
   140038fc4:	mov    r8d,0x1
   140038fca:	add    rbp,r8
   140038fcd:	add    rbx,0x30
   140038fd1:	mov    eax,r15d
   140038fd4:	cmp    rbp,rax
   140038fd7:	jb     0x140038f09
   140038fdd:	mov    rcx,QWORD PTR [rdi+0x68]
   140038fe1:	mov    rbx,QWORD PTR [rsp+0x78]
   140038fe6:	add    rsp,0x30
   140038fea:	pop    r15
   140038fec:	pop    r14
   140038fee:	pop    r13
   140038ff0:	pop    r12
   140038ff2:	pop    rdi
   140038ff3:	pop    rsi
   140038ff4:	pop    rbp
   140038ff5:	jmp    0x140047214
   140038ffa:	int3   
   140038ffb:	int3   
   140038ffc:	mov    QWORD PTR [rsp+0x8],rbx
   140039001:	push   rdi
   140039002:	sub    rsp,0x20
   140039006:	mov    rdi,rdx
   140039009:	mov    rbx,rcx
   14003900c:	mov    edx,0x1
   140039011:	call   0x140037cf0
   140039016:	imul   r8,QWORD PTR [rbx+0x8],0x1020
   14003901e:	mov    rcx,QWORD PTR [rbx]
   140039021:	mov    eax,0x20
   140039026:	add    rcx,0xffffffffffffefe0
   14003902d:	add    rcx,r8
   140039030:	lea    edx,[rax+0x60]
   140039033:	movups xmm0,XMMWORD PTR [rdi]
   140039036:	movups XMMWORD PTR [rcx],xmm0
   140039039:	movups xmm1,XMMWORD PTR [rdi+0x10]
   14003903d:	movups XMMWORD PTR [rcx+0x10],xmm1
   140039041:	movups xmm0,XMMWORD PTR [rdi+0x20]
   140039045:	movups XMMWORD PTR [rcx+0x20],xmm0
   140039049:	movups xmm1,XMMWORD PTR [rdi+0x30]
   14003904d:	movups XMMWORD PTR [rcx+0x30],xmm1
   140039051:	movups xmm0,XMMWORD PTR [rdi+0x40]
   140039055:	movups XMMWORD PTR [rcx+0x40],xmm0
   140039059:	movups xmm1,XMMWORD PTR [rdi+0x50]
   14003905d:	movups XMMWORD PTR [rcx+0x50],xmm1
   140039061:	movups xmm0,XMMWORD PTR [rdi+0x60]
   140039065:	movups XMMWORD PTR [rcx+0x60],xmm0
   140039069:	add    rcx,rdx
   14003906c:	movups xmm1,XMMWORD PTR [rdi+0x70]
   140039070:	add    rdi,rdx
   140039073:	movups XMMWORD PTR [rcx-0x10],xmm1
   140039077:	sub    rax,0x1
   14003907b:	jne    0x140039033
   14003907d:	movups xmm0,XMMWORD PTR [rdi]
   140039080:	mov    rbx,QWORD PTR [rsp+0x30]
   140039085:	movups XMMWORD PTR [rcx],xmm0
   140039088:	movups xmm1,XMMWORD PTR [rdi+0x10]
   14003908c:	movups XMMWORD PTR [rcx+0x10],xmm1
   140039090:	add    rsp,0x20
   140039094:	pop    rdi
   140039095:	ret    
   140039096:	int3   
   140039097:	int3   
   140039098:	jmp    0x140037d94
   14003909d:	int3   
   14003909e:	int3   
   14003909f:	int3   
   1400390a0:	jmp    0x140037ea0
   1400390a5:	int3   
   1400390a6:	int3   
   1400390a7:	int3   
   1400390a8:	mov    rax,rsp
   1400390ab:	push   rbp
   1400390ac:	push   rdi
   1400390ad:	push   r12
   1400390af:	push   r14
   1400390b1:	push   r15
   1400390b3:	mov    rbp,rsp
   1400390b6:	sub    rsp,0x80
   1400390bd:	mov    QWORD PTR [rbp-0x20],0xfffffffffffffffe
   1400390c5:	mov    QWORD PTR [rax+0x18],rbx
   1400390c9:	mov    QWORD PTR [rax+0x20],rsi
   1400390cd:	mov    rax,QWORD PTR [rip+0x48e0c]        # 0x140081ee0
   1400390d4:	xor    rax,rsp
   1400390d7:	mov    QWORD PTR [rbp-0x8],rax
   1400390db:	mov    r15b,r8b
   1400390de:	mov    rdi,rdx
   1400390e1:	mov    rsi,rcx
   1400390e4:	mov    rax,QWORD PTR [rdx]
   1400390e7:	mov    r8d,0x10
   1400390ed:	lea    rdx,[rbp-0x18]
   1400390f1:	mov    rcx,rdi
   1400390f4:	call   QWORD PTR [rax+0x10]
   1400390f7:	cmp    eax,0x10
   1400390fa:	jne    0x140039297
   140039100:	mov    rax,QWORD PTR [rbp-0x18]
   140039104:	cmp    rax,QWORD PTR [rip+0x36be5]        # 0x14006fcf0
   14003910b:	jne    0x140039297
   140039111:	mov    ebx,DWORD PTR [rbp-0xc]
   140039114:	lea    eax,[rbx-0x6]
   140039117:	cmp    eax,0xffffa
   14003911c:	ja     0x140039297
   140039122:	mov    r14d,DWORD PTR [rbp-0x10]
   140039126:	mov    rdx,rdi
   140039129:	lea    rcx,[rbp-0x60]
   14003912d:	call   0x140036498
   140039132:	nop
   140039133:	mov    edx,ebx
   140039135:	lea    rcx,[rbp-0x60]
   140039139:	call   0x140036798
   14003913e:	cmp    rax,rbx
   140039141:	jne    0x140039281
   140039147:	mov    r8d,0x4
   14003914d:	lea    rdx,[rbp-0xc]
   140039151:	or     ecx,0xffffffff
   140039154:	call   0x140017ac0
   140039159:	mov    r8d,ebx
   14003915c:	mov    rdx,QWORD PTR [rbp-0x60]
   140039160:	mov    ecx,eax
   140039162:	call   0x140017ac0
   140039167:	not    eax
   140039169:	cmp    eax,r14d
   14003916c:	jne    0x140039281
   140039172:	lea    rcx,[rbp-0x60]
   140039176:	call   0x1400364c0
   14003917b:	cmp    al,0x1
   14003917d:	jne    0x140039281
   140039183:	lea    rcx,[rbp-0x60]
   140039187:	call   0x1400364e0
   14003918c:	movzx  eax,ax
   14003918f:	mov    DWORD PTR [rsi+0x48],eax
   140039192:	lea    rcx,[rbp-0x60]
   140039196:	call   0x1400364e0
   14003919b:	movzx  ecx,ax
   14003919e:	mov    DWORD PTR [rsi+0x4c],ecx
   1400391a1:	add    ecx,DWORD PTR [rsi+0x48]
   1400391a4:	mov    DWORD PTR [rsi+0x50],ecx
   1400391a7:	lea    rcx,[rbp-0x60]
   1400391ab:	call   0x1400364e0
   1400391b0:	movzx  r14d,ax
   1400391b4:	cmp    r14d,DWORD PTR [rsi+0x50]
   1400391b8:	jae    0x140039281
   1400391be:	cmp    DWORD PTR [rsi+0x50],0xffff
   1400391c5:	ja     0x140039281
   1400391cb:	lea    rcx,[rbp-0x60]
   1400391cf:	call   0x14003651c
   1400391d4:	mov    r12d,eax
   1400391d7:	test   r15b,r15b
   1400391da:	je     0x14003926d
   1400391e0:	mov    rbx,QWORD PTR [rsi+0x8]
   1400391e4:	mov    ecx,DWORD PTR [rsi+0x50]
   1400391e7:	cmp    rcx,QWORD PTR [rsi+0x10]
   1400391eb:	jbe    0x1400391fd
   1400391ed:	sub    rcx,rbx
   1400391f0:	mov    rdx,rcx
   1400391f3:	mov    rcx,rsi
   1400391f6:	call   0x140037cf0
   1400391fb:	jmp    0x140039201
   1400391fd:	mov    QWORD PTR [rsi+0x8],rcx
   140039201:	mov    eax,DWORD PTR [rsi+0x50]
   140039204:	cmp    rbx,rax
   140039207:	jae    0x14003922a
   140039209:	imul   rcx,rbx,0x1020
   140039210:	mov    rax,QWORD PTR [rsi]
   140039213:	and    QWORD PTR [rcx+rax*1],0x0
   140039218:	inc    rbx
   14003921b:	lea    rcx,[rcx+0x1020]
   140039222:	mov    eax,DWORD PTR [rsi+0x50]
   140039225:	cmp    rbx,rax
   140039228:	jb     0x140039210
   14003922a:	xor    r15d,r15d
   14003922d:	cmp    DWORD PTR [rsi+0x48],r15d
   140039231:	jbe    0x14003926d
   140039233:	mov    eax,r15d
   140039236:	imul   rdi,rax,0x1020
   14003923d:	mov    rbx,QWORD PTR [rsi]
   140039240:	lea    rcx,[rbp-0x60]
   140039244:	call   0x140036564
   140039249:	mov    QWORD PTR [rdi+rbx*1+0x1010],rax
   140039251:	mov    rbx,QWORD PTR [rsi]
   140039254:	lea    rcx,[rbp-0x60]
   140039258:	call   0x14003651c
   14003925d:	mov    DWORD PTR [rdi+rbx*1+0x1008],eax
   140039264:	inc    r15d
   140039267:	cmp    r15d,DWORD PTR [rsi+0x48]
   14003926b:	jb     0x140039233
   14003926d:	imul   rcx,r14,0x1020
   140039274:	mov    rax,QWORD PTR [rsi]
   140039277:	mov    DWORD PTR [rcx+rax*1+0x1008],r12d
   14003927f:	jmp    0x140039284
   140039281:	xor    r14d,r14d
   140039284:	mov    rcx,QWORD PTR [rbp-0x60]
   140039288:	test   rcx,rcx
   14003928b:	je     0x140039292
   14003928d:	call   0x14005a938
   140039292:	mov    eax,r14d
   140039295:	jmp    0x140039299
   140039297:	xor    eax,eax
   140039299:	mov    rcx,QWORD PTR [rbp-0x8]
   14003929d:	xor    rcx,rsp
   1400392a0:	call   0x140055f90
   1400392a5:	lea    r11,[rsp+0x80]
   1400392ad:	mov    rbx,QWORD PTR [r11+0x40]
   1400392b1:	mov    rsi,QWORD PTR [r11+0x48]
   1400392b5:	mov    rsp,r11
   1400392b8:	pop    r15
   1400392ba:	pop    r14
   1400392bc:	pop    r12
   1400392be:	pop    rdi
   1400392bf:	pop    rbp
   1400392c0:	ret    
   1400392c1:	int3   
   1400392c2:	int3   
   1400392c3:	int3   
   1400392c4:	mov    rdx,rcx
   1400392c7:	mov    rcx,QWORD PTR [rcx]
   1400392ca:	jmp    0x140038de0
   1400392cf:	int3   
   1400392d0:	rex push rbp
   1400392d2:	lea    rbp,[rsp-0x9750]
   1400392da:	mov    eax,0x9850
   1400392df:	call   0x140055f20
   1400392e4:	sub    rsp,rax
   1400392e7:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400392f0:	mov    QWORD PTR [rsp+0x9870],rbx
   1400392f8:	mov    QWORD PTR [rsp+0x9878],rdi
   140039300:	mov    rax,QWORD PTR [rip+0x48bd9]        # 0x140081ee0
   140039307:	xor    rax,rsp
   14003930a:	mov    QWORD PTR [rbp+0x9740],rax
   140039311:	mov    rbx,rdx
   140039314:	mov    rdi,rcx
   140039317:	cmp    DWORD PTR [rcx+0x614c],0x0
   14003931e:	je     0x1400393e3
   140039324:	mov    rdx,rcx
   140039327:	lea    rcx,[rbp+0x760]
   14003932e:	call   0x140007678
   140039333:	nop
   140039334:	mov    rdx,rbx
   140039337:	lea    rcx,[rbp+0x760]
   14003933e:	call   0x14000a894
   140039343:	test   al,al
   140039345:	je     0x1400393d7
   14003934b:	mov    al,BYTE PTR [rbp+0x86ed]
   140039351:	test   al,al
   140039353:	je     0x1400393c5
   140039355:	cmp    BYTE PTR [rbp+0x86f1],0x0
   14003935c:	je     0x1400393c5
   14003935e:	lea    rcx,[rbp+0x760]
   140039365:	call   0x1400207cc
   14003936a:	xor    edx,edx
   14003936c:	cmp    DWORD PTR [rbp+0x86e8],0x2
   140039373:	jne    0x14003939d
   140039375:	lea    rcx,[rsp+0x30]
   14003937a:	call   0x140037a8c
   14003937f:	nop
   140039380:	mov    r8,rbx
   140039383:	mov    rdx,rdi
   140039386:	lea    rcx,[rsp+0x30]
   14003938b:	call   0x140038004
   140039390:	nop
   140039391:	lea    rcx,[rsp+0x30]
   140039396:	call   0x140037bc8
   14003939b:	jmp    0x1400393d7
   14003939d:	lea    rcx,[rsp+0x30]
   1400393a2:	call   0x140037b34
   1400393a7:	nop
   1400393a8:	mov    r8,rbx
   1400393ab:	mov    rdx,rdi
   1400393ae:	lea    rcx,[rsp+0x30]
   1400393b3:	call   0x140038790
   1400393b8:	nop
   1400393b9:	lea    rcx,[rsp+0x30]
   1400393be:	call   0x140037c2c
   1400393c3:	jmp    0x1400393d7
   1400393c5:	neg    al
   1400393c7:	sbb    ecx,ecx
   1400393c9:	neg    ecx
   1400393cb:	add    ecx,0x2e
   1400393ce:	mov    rdx,rbx
   1400393d1:	call   0x1400013b0
   1400393d6:	nop
   1400393d7:	lea    rcx,[rbp+0x760]
   1400393de:	call   0x140007880
   1400393e3:	mov    rcx,QWORD PTR [rbp+0x9740]
   1400393ea:	xor    rcx,rsp
   1400393ed:	call   0x140055f90
   1400393f2:	lea    r11,[rsp+0x9850]
   1400393fa:	mov    rbx,QWORD PTR [r11+0x20]
   1400393fe:	mov    rdi,QWORD PTR [r11+0x28]
   140039402:	mov    rsp,r11
   140039405:	pop    rbp
   140039406:	ret    
   140039407:	int3   
   140039408:	rex push rbp
   14003940a:	push   rsi
   14003940b:	push   rdi
   14003940c:	push   r14
   14003940e:	push   r15
   140039410:	lea    rbp,[rsp-0x9750]
   140039418:	mov    eax,0x9850
   14003941d:	call   0x140055f20
   140039422:	sub    rsp,rax
   140039425:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14003942e:	mov    QWORD PTR [rsp+0x9890],rbx
   140039436:	mov    rax,QWORD PTR [rip+0x48aa3]        # 0x140081ee0
   14003943d:	xor    rax,rsp
   140039440:	mov    QWORD PTR [rbp+0x9748],rax
   140039447:	mov    r14b,r8b
   14003944a:	mov    rsi,rdx
   14003944d:	mov    r15,rcx
   140039450:	mov    rdx,rcx
   140039453:	lea    rcx,[rbp+0x760]
   14003945a:	call   0x140007678
   14003945f:	nop
   140039460:	xor    r8d,r8d
   140039463:	mov    rdx,rsi
   140039466:	lea    rcx,[rbp+0x760]
   14003946d:	call   0x1400094f8
   140039472:	xor    dil,dil
   140039475:	test   al,al
   140039477:	jne    0x140039496
   140039479:	cmp    r14b,dil
   14003947c:	jne    0x140039567
   140039482:	mov    rdx,rsi
   140039485:	lea    rcx,[rip+0x5b3d4]        # 0x140094860
   14003948c:	call   0x14001bdf8
   140039491:	jmp    0x140039567
   140039496:	mov    ebx,0x2
   14003949b:	mov    dl,0x1
   14003949d:	lea    rcx,[rbp+0x760]
   1400394a4:	call   0x140008f4c
   1400394a9:	cmp    al,dil
   1400394ac:	je     0x1400394b6
   1400394ae:	mov    ebx,DWORD PTR [rbp+0x86e8]
   1400394b4:	jmp    0x1400394fb
   1400394b6:	xor    r8d,r8d
   1400394b9:	xor    edx,edx
   1400394bb:	lea    rcx,[rbp+0x760]
   1400394c2:	call   0x14000a280
   1400394c7:	mov    r8d,0x8
   1400394cd:	lea    rdx,[rbp+0x9740]
   1400394d4:	lea    rcx,[rbp+0x760]
   1400394db:	call   0x1400098e8
   1400394e0:	cmp    eax,0x8
   1400394e3:	jne    0x1400394fb
   1400394e5:	mov    rax,QWORD PTR [rbp+0x9740]
   1400394ec:	mov    ecx,0x3
   1400394f1:	cmp    rax,QWORD PTR [rip+0x36838]        # 0x14006fd30
   1400394f8:	cmove  ebx,ecx
   1400394fb:	lea    rcx,[rbp+0x760]
   140039502:	call   0x1400207cc
   140039507:	xor    edx,edx
   140039509:	cmp    ebx,0x2
   14003950c:	jne    0x14003953b
   14003950e:	lea    rcx,[rsp+0x30]
   140039513:	call   0x140037a8c
   140039518:	nop
   140039519:	mov    r9b,r14b
   14003951c:	mov    r8,rsi
   14003951f:	mov    rdx,r15
   140039522:	lea    rcx,[rsp+0x30]
   140039527:	call   0x140039840
   14003952c:	mov    dil,al
   14003952f:	lea    rcx,[rsp+0x30]
   140039534:	call   0x140037bc8
   140039539:	jmp    0x140039567
   14003953b:	lea    rcx,[rsp+0x30]
   140039540:	call   0x140037b34
   140039545:	nop
   140039546:	mov    r9b,r14b
   140039549:	mov    r8,rsi
   14003954c:	mov    rdx,r15
   14003954f:	lea    rcx,[rsp+0x30]
   140039554:	call   0x14003a634
   140039559:	mov    dil,al
   14003955c:	lea    rcx,[rsp+0x30]
   140039561:	call   0x140037c2c
   140039566:	nop
   140039567:	lea    rcx,[rbp+0x760]
   14003956e:	call   0x140007880
   140039573:	mov    al,dil
   140039576:	mov    rcx,QWORD PTR [rbp+0x9748]
   14003957d:	xor    rcx,rsp
   140039580:	call   0x140055f90
   140039585:	mov    rbx,QWORD PTR [rsp+0x9890]
   14003958d:	add    rsp,0x9850
   140039594:	pop    r15
   140039596:	pop    r14
   140039598:	pop    rdi
   140039599:	pop    rsi
   14003959a:	pop    rbp
   14003959b:	ret    
   14003959c:	rex push rbp
   14003959e:	push   rsi
   14003959f:	push   rdi
   1400395a0:	push   r14
   1400395a2:	push   r15
   1400395a4:	lea    rbp,[rsp-0x5fe0]
   1400395ac:	mov    eax,0x60e0
   1400395b1:	call   0x140055f20
   1400395b6:	sub    rsp,rax
   1400395b9:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400395c2:	mov    QWORD PTR [rsp+0x6128],rbx
   1400395ca:	mov    rax,QWORD PTR [rip+0x4890f]        # 0x140081ee0
   1400395d1:	xor    rax,rsp
   1400395d4:	mov    QWORD PTR [rbp+0x5fd0],rax
   1400395db:	mov    rdi,r8
   1400395de:	mov    rsi,rcx
   1400395e1:	xor    r14d,r14d
   1400395e4:	mov    WORD PTR [rbp+0x3fd0],r14w
   1400395ec:	test   rdx,rdx
   1400395ef:	je     0x14003972a
   1400395f5:	mov    bl,BYTE PTR [rdx+0x7f92]
   1400395fb:	mov    r15d,0x800
   140039601:	mov    r8d,r15d
   140039604:	mov    rdx,rdi
   140039607:	lea    rcx,[rbp+0x2fd0]
   14003960e:	call   0x140046158
   140039613:	mov    r9b,bl
   140039616:	mov    r8d,r15d
   140039619:	lea    rdx,[rbp+0x2fd0]
   140039620:	lea    rcx,[rbp+0x2fd0]
   140039627:	call   0x1400329a4
   14003962c:	mov    rbx,rax
   14003962f:	mov    r8d,r15d
   140039632:	lea    rdx,[rbp+0x2fd0]
   140039639:	lea    rcx,[rbp+0x4fd0]
   140039640:	call   0x140046158
   140039645:	lea    rax,[rbp+0x2fd0]
   14003964c:	sub    rbx,rax
   14003964f:	sar    rbx,1
   140039652:	mov    r8d,r15d
   140039655:	sub    r8,rbx
   140039658:	lea    rcx,[rbp+0x4fd0]
   14003965f:	lea    rcx,[rcx+rbx*2]
   140039663:	lea    rdx,[rip+0x366d6]        # 0x14006fd40
   14003966a:	call   0x140046158
   14003966f:	lea    rcx,[rbp+0xf80]
   140039676:	call   0x14002324c
   14003967b:	nop
   14003967c:	lea    rdx,[rbp+0x4fd0]
   140039683:	lea    rcx,[rbp+0xf80]
   14003968a:	call   0x1400233f4
   14003968f:	mov    QWORD PTR [rbp+0xf40],r14
   140039696:	mov    QWORD PTR [rbp+0xf48],r14
   14003969d:	mov    QWORD PTR [rbp+0xf50],r14
   1400396a4:	xor    r8d,r8d
   1400396a7:	lea    rdx,[rsp+0x30]
   1400396ac:	lea    rcx,[rbp+0xf80]
   1400396b3:	call   0x1400232f8
   1400396b8:	test   al,al
   1400396ba:	je     0x14003970a
   1400396bc:	lea    rcx,[rsp+0x30]
   1400396c1:	call   0x140031e24
   1400396c6:	mov    rbx,rax
   1400396c9:	cmp    WORD PTR [rax],0x31
   1400396cd:	jne    0x1400396a4
   1400396cf:	lea    rax,[rsp+0x30]
   1400396d4:	sub    rbx,0x2
   1400396d8:	cmp    rbx,rax
   1400396db:	jb     0x1400396ef
   1400396dd:	movzx  ecx,WORD PTR [rbx]
   1400396e0:	call   0x140045d18
   1400396e5:	test   al,al
   1400396e7:	je     0x1400396ef
   1400396e9:	cmp    WORD PTR [rbx],0x30
   1400396ed:	jmp    0x1400396cd
   1400396ef:	mov    r8,r15
   1400396f2:	lea    rdx,[rsp+0x30]
   1400396f7:	lea    rcx,[rbp+0x3fd0]
   1400396fe:	call   0x140046158
   140039703:	lea    rdi,[rbp+0x3fd0]
   14003970a:	lea    rcx,[rbp+0xf80]
   140039711:	cmp    WORD PTR [rbp+0x3fd0],r14w
   140039719:	jne    0x140039725
   14003971b:	call   0x140023264
   140039720:	jmp    0x140039819
   140039725:	call   0x140023264
   14003972a:	lea    rcx,[rbp+0x1f90]
   140039731:	call   0x14002071c
   140039736:	nop
   140039737:	xor    r8d,r8d
   14003973a:	mov    rdx,rdi
   14003973d:	lea    rcx,[rbp+0x1f90]
   140039744:	call   0x140020c80
   140039749:	test   al,al
   14003974b:	jne    0x140039761
   14003974d:	mov    rdx,rdi
   140039750:	lea    rcx,[rip+0x5b109]        # 0x140094860
   140039757:	call   0x14001bdf8
   14003975c:	jmp    0x14003980d
   140039761:	lea    rcx,[rip+0x36534]        # 0x14006fc9c
   140039768:	call   0x14001796c
   14003976d:	mov    r8d,0x8
   140039773:	lea    rdx,[rbp+0x2fc0]
   14003977a:	lea    rcx,[rbp+0x1f90]
   140039781:	call   0x140020ed4
   140039786:	cmp    eax,0x8
   140039789:	jne    0x14003979d
   14003978b:	mov    rax,QWORD PTR [rbp+0x2fc0]
   140039792:	cmp    rax,QWORD PTR [rip+0x365b7]        # 0x14006fd50
   140039799:	mov    bl,0x1
   14003979b:	je     0x1400397a0
   14003979d:	mov    bl,r14b
   1400397a0:	lea    rcx,[rbp+0x1f90]
   1400397a7:	call   0x1400207cc
   1400397ac:	mov    dl,0x1
   1400397ae:	test   bl,bl
   1400397b0:	je     0x1400397e0
   1400397b2:	lea    rcx,[rbp+0x2fd0]
   1400397b9:	call   0x140037b34
   1400397be:	nop
   1400397bf:	mov    r8,rdi
   1400397c2:	mov    rdx,rsi
   1400397c5:	lea    rcx,[rbp+0x2fd0]
   1400397cc:	call   0x14003b2a0
   1400397d1:	nop
   1400397d2:	lea    rcx,[rbp+0x2fd0]
   1400397d9:	call   0x140037c2c
   1400397de:	jmp    0x14003980d
   1400397e0:	lea    rcx,[rbp+0x2fd0]
   1400397e7:	call   0x140037a8c
   1400397ec:	nop
   1400397ed:	mov    r8,rdi
   1400397f0:	mov    rdx,rsi
   1400397f3:	lea    rcx,[rbp+0x2fd0]
   1400397fa:	call   0x14003b068
   1400397ff:	nop
   140039800:	lea    rcx,[rbp+0x2fd0]
   140039807:	call   0x140037bc8
   14003980c:	nop
   14003980d:	lea    rcx,[rbp+0x1f90]
   140039814:	call   0x140020758
   140039819:	mov    rcx,QWORD PTR [rbp+0x5fd0]
   140039820:	xor    rcx,rsp
   140039823:	call   0x140055f90
   140039828:	mov    rbx,QWORD PTR [rsp+0x6128]
   140039830:	add    rsp,0x60e0
   140039837:	pop    r15
   140039839:	pop    r14
   14003983b:	pop    rdi
   14003983c:	pop    rsi
   14003983d:	pop    rbp
   14003983e:	ret    
   14003983f:	int3   
   140039840:	rex push rbp
   140039842:	push   rsi
   140039843:	push   rdi
   140039844:	push   r12
   140039846:	push   r13
   140039848:	push   r14
   14003984a:	push   r15
   14003984c:	lea    rbp,[rsp-0x73e60]
   140039854:	mov    eax,0x73f60
   140039859:	call   0x140055f20
   14003985e:	sub    rsp,rax
   140039861:	mov    QWORD PTR [rsp+0x78],0xfffffffffffffffe
   14003986a:	mov    QWORD PTR [rsp+0x73fb8],rbx
   140039872:	mov    rax,QWORD PTR [rip+0x48667]        # 0x140081ee0
   140039879:	xor    rax,rsp
   14003987c:	mov    QWORD PTR [rbp+0x73e50],rax
   140039883:	mov    BYTE PTR [rsp+0x32],r9b
   140039888:	mov    rax,r8
   14003988b:	mov    r14,rdx
   14003988e:	mov    QWORD PTR [rsp+0x50],rdx
   140039893:	mov    r12,rcx
   140039896:	mov    QWORD PTR [rsp+0x58],rcx
   14003989b:	mov    r15d,0x800
   1400398a1:	mov    r8d,r15d
   1400398a4:	mov    rdx,rax
   1400398a7:	lea    rcx,[rbp+0x6de50]
   1400398ae:	call   0x140046158
   1400398b3:	lea    rcx,[rbp+0x6de50]
   1400398ba:	call   0x140031bd4
   1400398bf:	mov    rdi,rax
   1400398c2:	xor    ebx,ebx
   1400398c4:	mov    BYTE PTR [rsp+0x3c],bl
   1400398c8:	test   rax,rax
   1400398cb:	je     0x1400399ff
   1400398d1:	lea    rdx,[rip+0x36590]        # 0x14006fe68
   1400398d8:	mov    rcx,rax
   1400398db:	call   0x140048f34
   1400398e0:	test   eax,eax
   1400398e2:	jne    0x1400399ff
   1400398e8:	mov    sil,0x1
   1400398eb:	mov    BYTE PTR [rsp+0x30],sil
   1400398f0:	lea    rcx,[rbp+0x6de50]
   1400398f7:	call   0x140037f90
   1400398fc:	mov    BYTE PTR [rsp+0x3c],al
   140039900:	lea    rax,[rbp+0x6de52]
   140039907:	cmp    rdi,rax
   14003990a:	jbe    0x140039936
   14003990c:	lea    rsi,[rdi-0x2]
   140039910:	movzx  ecx,WORD PTR [rsi]
   140039913:	call   0x140045d18
   140039918:	test   al,al
   14003991a:	jne    0x140039922
   14003991c:	cmp    WORD PTR [rsi],0x5f
   140039920:	jne    0x140039931
   140039922:	mov    rdi,rsi
   140039925:	lea    rax,[rbp+0x6de52]
   14003992c:	cmp    rsi,rax
   14003992f:	ja     0x14003990c
   140039931:	mov    sil,BYTE PTR [rsp+0x30]
   140039936:	movabs rax,0x2a002e002a
   140039940:	mov    QWORD PTR [rdi],rax
   140039943:	lea    rcx,[rbp-0x10]
   140039947:	call   0x14002324c
   14003994c:	nop
   14003994d:	lea    rdx,[rbp+0x6de50]
   140039954:	lea    rcx,[rbp-0x10]
   140039958:	call   0x1400233f4
   14003995d:	mov    QWORD PTR [rbp+0x6fe60],rbx
   140039964:	mov    QWORD PTR [rbp+0x6fe68],rbx
   14003996b:	mov    QWORD PTR [rbp+0x6fe70],rbx
   140039972:	xor    r8d,r8d
   140039975:	lea    rdx,[rbp+0x6ee50]
   14003997c:	lea    rcx,[rbp-0x10]
   140039980:	call   0x1400232f8
   140039985:	test   al,al
   140039987:	je     0x1400399f4
   140039989:	mov    rdx,r14
   14003998c:	lea    rcx,[rbp+0xc060]
   140039993:	call   0x140007678
   140039998:	nop
   140039999:	lea    rdx,[rbp+0x6ee50]
   1400399a0:	lea    rcx,[rbp+0xc060]
   1400399a7:	call   0x140021278
   1400399ac:	test   al,al
   1400399ae:	je     0x1400399c2
   1400399b0:	mov    dl,0x1
   1400399b2:	lea    rcx,[rbp+0xc060]
   1400399b9:	call   0x140008f4c
   1400399be:	test   al,al
   1400399c0:	jne    0x1400399d0
   1400399c2:	lea    rcx,[rbp+0xc060]
   1400399c9:	call   0x140007880
   1400399ce:	jmp    0x140039972
   1400399d0:	mov    r8,r15
   1400399d3:	lea    rdx,[rbp+0x6ee50]
   1400399da:	lea    rcx,[rbp+0x6de50]
   1400399e1:	call   0x140046158
   1400399e6:	nop
   1400399e7:	lea    rcx,[rbp+0xc060]
   1400399ee:	call   0x140007880
   1400399f3:	nop
   1400399f4:	lea    rcx,[rbp-0x10]
   1400399f8:	call   0x140023264
   1400399fd:	jmp    0x140039a06
   1400399ff:	mov    sil,bl
   140039a02:	mov    BYTE PTR [rsp+0x30],bl
   140039a06:	mov    rdx,r14
   140039a09:	lea    rcx,[rbp+0x3080]
   140039a10:	call   0x140007678
   140039a15:	nop
   140039a16:	lea    rdx,[rbp+0x6de50]
   140039a1d:	lea    rcx,[rbp+0x3080]
   140039a24:	call   0x14000a894
   140039a29:	test   al,al
   140039a2b:	jne    0x140039a40
   140039a2d:	lea    rcx,[rbp+0x3080]
   140039a34:	call   0x140007880
   140039a39:	xor    al,al
   140039a3b:	jmp    0x14003a608
   140039a40:	cmp    BYTE PTR [rbp+0xb00d],bl
   140039a46:	jne    0x140039a5b
   140039a48:	lea    rdx,[rbp+0x6de50]
   140039a4f:	mov    ecx,0x2e
   140039a54:	call   0x1400013b0
   140039a59:	jmp    0x140039a2d
   140039a5b:	mov    dil,BYTE PTR [rbp+0xb012]
   140039a62:	mov    BYTE PTR [rsp+0x38],dil
   140039a67:	lea    rcx,[rbp+0x3080]
   140039a6e:	call   0x1400207cc
   140039a73:	mov    r9b,dil
   140039a76:	mov    r8,r15
   140039a79:	lea    rdx,[rbp+0x6de50]
   140039a80:	lea    rcx,[rbp+0x6de50]
   140039a87:	call   0x1400329a4
   140039a8c:	mov    rdi,rax
   140039a8f:	mov    r8,r15
   140039a92:	lea    rdx,[rbp+0x6de50]
   140039a99:	lea    rcx,[rbp+0x71e50]
   140039aa0:	call   0x140046158
   140039aa5:	lea    rax,[rbp+0x6de50]
   140039aac:	sub    rdi,rax
   140039aaf:	sar    rdi,1
   140039ab2:	mov    QWORD PTR [rsp+0x60],rdi
   140039ab7:	mov    r8,r15
   140039aba:	sub    r8,rdi
   140039abd:	lea    rcx,[rbp+0x71e50]
   140039ac4:	lea    rcx,[rcx+rdi*2]
   140039ac8:	lea    rdx,[rip+0x363b1]        # 0x14006fe80
   140039acf:	call   0x140046158
   140039ad4:	mov    QWORD PTR [rsp+0x68],rbx
   140039ad9:	mov    dil,bl
   140039adc:	mov    BYTE PTR [rsp+0x31],bl
   140039ae0:	lea    rcx,[rbp+0x2070]
   140039ae7:	call   0x14002324c
   140039aec:	nop
   140039aed:	lea    rdx,[rbp+0x71e50]
   140039af4:	lea    rcx,[rbp+0x2070]
   140039afb:	call   0x1400233f4
   140039b00:	mov    QWORD PTR [rbp+0x2030],rbx
   140039b07:	mov    QWORD PTR [rbp+0x2038],rbx
   140039b0e:	mov    QWORD PTR [rbp+0x2040],rbx
   140039b15:	mov    DWORD PTR [rsp+0x34],ebx
   140039b19:	mov    DWORD PTR [rsp+0x44],ebx
   140039b1d:	mov    r13d,ebx
   140039b20:	mov    DWORD PTR [rsp+0x40],ebx
   140039b24:	xor    r8d,r8d
   140039b27:	lea    rdx,[rbp+0x1020]
   140039b2e:	lea    rcx,[rbp+0x2070]
   140039b35:	call   0x1400232f8
   140039b3a:	test   al,al
   140039b3c:	je     0x140039e52
   140039b42:	mov    r15d,0x2e
   140039b48:	mov    r14d,DWORD PTR [rsp+0x3c]
   140039b4d:	test   sil,sil
   140039b50:	jne    0x140039bb0
   140039b52:	test   r14b,r14b
   140039b55:	jne    0x140039bb9
   140039b57:	mov    r14b,0x1
   140039b5a:	mov    DWORD PTR [rsp+0x3c],r14d
   140039b5f:	lea    rcx,[rbp+0x1020]
   140039b66:	call   0x140031bd4
   140039b6b:	test   rax,rax
   140039b6e:	je     0x140039bb0
   140039b70:	mov    ecx,ebx
   140039b72:	sub    rax,0x2
   140039b76:	lea    rdx,[rbp+0x1020]
   140039b7d:	cmp    rax,rdx
   140039b80:	jbe    0x140039bb0
   140039b82:	cmp    WORD PTR [rax],r15w
   140039b86:	je     0x140039ba0
   140039b88:	cmp    WORD PTR [rax],0x5f
   140039b8c:	jne    0x140039b90
   140039b8e:	inc    ecx
   140039b90:	sub    rax,0x2
   140039b94:	lea    rdx,[rbp+0x1020]
   140039b9b:	cmp    rax,rdx
   140039b9e:	ja     0x140039b82
   140039ba0:	movzx  r14d,r14b
   140039ba4:	cmp    ecx,0x2
   140039ba7:	cmove  r14d,ebx
   140039bab:	mov    DWORD PTR [rsp+0x3c],r14d
   140039bb0:	test   r14b,r14b
   140039bb3:	je     0x140039ccc
   140039bb9:	test   dil,dil
   140039bbc:	jne    0x140039bd7
   140039bbe:	mov    QWORD PTR [rbp-0x20],rbx
   140039bc2:	mov    DWORD PTR [rbp-0x18],0x6e
   140039bc9:	lea    rcx,[rbp-0x80]
   140039bcd:	call   0x1400479a4
   140039bd2:	mov    BYTE PTR [rsp+0x31],0x1
   140039bd7:	lea    rdx,[rbp+0x1020]
   140039bde:	mov    ecx,0x5d
   140039be3:	call   0x1400013b0
   140039be8:	lea    rcx,[rbp-0x10]
   140039bec:	call   0x14002071c
   140039bf1:	nop
   140039bf2:	lea    rdx,[rbp+0x1020]
   140039bf9:	lea    rcx,[rbp-0x10]
   140039bfd:	call   0x14002117c
   140039c02:	xor    edx,edx
   140039c04:	lea    r8d,[rdx+0x2]
   140039c08:	lea    rcx,[rbp-0x10]
   140039c0c:	call   0x140021048
   140039c11:	lea    rcx,[rbp-0x10]
   140039c15:	call   0x1400211a0
   140039c1a:	mov    r14,rax
   140039c1d:	lea    rdx,[rax-0x7]
   140039c21:	xor    r8d,r8d
   140039c24:	lea    rcx,[rbp-0x10]
   140039c28:	call   0x140021048
   140039c2d:	lea    rdi,[rbp+0x15048]
   140039c34:	mov    esi,0x3
   140039c39:	lea    rcx,[rbp-0x10]
   140039c3d:	call   0x140020c04
   140039c42:	movzx  ecx,al
   140039c45:	inc    ecx
   140039c47:	mov    DWORD PTR [rdi],ecx
   140039c49:	lea    rdi,[rdi-0x4]
   140039c4d:	sub    rsi,0x1
   140039c51:	jne    0x140039c39
   140039c53:	mov    esi,ebx
   140039c55:	mov    edi,ebx
   140039c57:	lea    rcx,[rbp-0x10]
   140039c5b:	call   0x140020c04
   140039c60:	movzx  eax,al
   140039c63:	mov    ecx,edi
   140039c65:	shl    eax,cl
   140039c67:	or     esi,eax
   140039c69:	add    edi,0x8
   140039c6c:	cmp    edi,0x20
   140039c6f:	jl     0x140039c57
   140039c71:	lea    rax,[r14-0x4]
   140039c75:	mov    DWORD PTR [rsp+0x28],ebx
   140039c79:	mov    QWORD PTR [rsp+0x20],rax
   140039c7e:	mov    rax,QWORD PTR [rsp+0x50]
   140039c83:	mov    r9d,DWORD PTR [rax+0x83d0]
   140039c8a:	xor    r8d,r8d
   140039c8d:	lea    rdx,[rsp+0x48]
   140039c92:	lea    rcx,[rbp-0x10]
   140039c96:	call   0x140021500
   140039c9b:	cmp    esi,DWORD PTR [rsp+0x48]
   140039c9f:	je     0x140039cc1
   140039ca1:	lea    rdx,[rbp+0x1020]
   140039ca8:	mov    ecx,0x73
   140039cad:	call   0x1400013b0
   140039cb2:	nop
   140039cb3:	lea    rcx,[rbp-0x10]
   140039cb7:	call   0x140020758
   140039cbc:	jmp    0x140039dff
   140039cc1:	lea    rcx,[rbp-0x10]
   140039cc5:	call   0x140020758
   140039cca:	jmp    0x140039d44
   140039ccc:	lea    rcx,[rbp+0x1020]
   140039cd3:	call   0x140031bd4
   140039cd8:	mov    rdi,rax
   140039cdb:	test   rax,rax
   140039cde:	je     0x140039e04
   140039ce4:	mov    r14b,bl
   140039ce7:	mov    rsi,rbx
   140039cea:	mov    r12,QWORD PTR [rsp+0x60]
   140039cef:	sub    rdi,0x2
   140039cf3:	movzx  ecx,WORD PTR [rdi]
   140039cf6:	call   0x140045d18
   140039cfb:	test   al,al
   140039cfd:	je     0x140039d0f
   140039cff:	lea    rax,[rbp+0x1020]
   140039d06:	lea    rax,[rax+r12*2]
   140039d0a:	cmp    rdi,rax
   140039d0d:	jae    0x140039cef
   140039d0f:	lea    rcx,[rdi+0x2]
   140039d13:	call   0x140048f08
   140039d18:	mov    DWORD PTR [rbp+rsi*4+0x15040],eax
   140039d1f:	test   eax,eax
   140039d21:	je     0x140039d2a
   140039d23:	cmp    eax,0xff
   140039d28:	jle    0x140039d2d
   140039d2a:	mov    r14b,0x1
   140039d2d:	inc    rsi
   140039d30:	cmp    rsi,0x3
   140039d34:	jb     0x140039cef
   140039d36:	mov    r12,QWORD PTR [rsp+0x58]
   140039d3b:	test   r14b,r14b
   140039d3e:	jne    0x140039dff
   140039d44:	mov    ecx,DWORD PTR [rbp+0x15044]
   140039d4a:	mov    esi,DWORD PTR [rbp+0x15048]
   140039d50:	lea    eax,[rcx+rsi*1]
   140039d53:	cmp    eax,0xff
   140039d58:	jg     0x140039dff
   140039d5e:	mov    r14d,DWORD PTR [rsp+0x44]
   140039d63:	test   r14d,r14d
   140039d66:	je     0x140039d71
   140039d68:	cmp    r14d,ecx
   140039d6b:	jne    0x140039e28
   140039d71:	mov    eax,DWORD PTR [rsp+0x34]
   140039d75:	test   eax,eax
   140039d77:	je     0x140039d81
   140039d79:	cmp    eax,esi
   140039d7b:	jne    0x140039e28
   140039d81:	mov    DWORD PTR [rsp+0x44],ecx
   140039d85:	mov    DWORD PTR [rsp+0x34],esi
   140039d89:	mov    rcx,rbx
   140039d8c:	movzx  eax,WORD PTR [rbp+rcx*1+0x1020]
   140039d94:	mov    WORD PTR [rbp+rcx*1+0x72e50],ax
   140039d9c:	lea    rcx,[rcx+0x2]
   140039da0:	test   ax,ax
   140039da3:	jne    0x140039d8c
   140039da5:	mov    ecx,0x1030
   140039daa:	call   0x140055dac
   140039daf:	mov    QWORD PTR [rsp+0x70],rax
   140039db4:	test   rax,rax
   140039db7:	je     0x140039dc6
   140039db9:	mov    rcx,rax
   140039dbc:	call   0x14002071c
   140039dc1:	mov    rdi,rax
   140039dc4:	jmp    0x140039dc9
   140039dc6:	mov    rdi,rbx
   140039dc9:	lea    rdx,[rbp+0x1020]
   140039dd0:	mov    rcx,rdi
   140039dd3:	call   0x14002117c
   140039dd8:	mov    eax,DWORD PTR [rbp+0x15040]
   140039dde:	dec    eax
   140039de0:	add    eax,esi
   140039de2:	cdqe   
   140039de4:	mov    QWORD PTR [r12+rax*8],rdi
   140039de8:	inc    r13d
   140039deb:	cmp    QWORD PTR [rsp+0x68],rbx
   140039df0:	jne    0x140039dff
   140039df2:	mov    rcx,rdi
   140039df5:	call   0x140020b88
   140039dfa:	mov    QWORD PTR [rsp+0x68],rax
   140039dff:	mov    sil,BYTE PTR [rsp+0x30]
   140039e04:	xor    r8d,r8d
   140039e07:	lea    rdx,[rbp+0x1020]
   140039e0e:	lea    rcx,[rbp+0x2070]
   140039e15:	call   0x1400232f8
   140039e1a:	test   al,al
   140039e1c:	je     0x140039e52
   140039e1e:	mov    dil,BYTE PTR [rsp+0x31]
   140039e23:	jmp    0x140039b48
   140039e28:	lea    r8,[rbp+0x72e50]
   140039e2f:	lea    rdx,[rbp+0x1020]
   140039e36:	mov    ecx,0x31
   140039e3b:	call   0x140001358
   140039e40:	nop
   140039e41:	lea    rcx,[rbp+0x2070]
   140039e48:	call   0x140023264
   140039e4d:	jmp    0x140039a2d
   140039e52:	cmp    BYTE PTR [rsp+0x32],bl
   140039e56:	je     0x140039e5d
   140039e58:	test   r13d,r13d
   140039e5b:	je     0x140039e41
   140039e5d:	mov    edx,r13d
   140039e60:	mov    ecx,0x6f
   140039e65:	call   0x14002146c
   140039e6a:	test   r13d,r13d
   140039e6d:	je     0x140039e41
   140039e6f:	xor    edx,edx
   140039e71:	mov    r8d,0x100
   140039e77:	lea    rcx,[rbp+0x6dd50]
   140039e7e:	call   0x140058f40
   140039e83:	mov    WORD PTR [rbp+0x70e50],bx
   140039e8a:	mov    r15d,ebx
   140039e8d:	mov    r14,rbx
   140039e90:	movsxd rsi,DWORD PTR [rsp+0x34]
   140039e95:	mov    rax,rsi
   140039e98:	mov    QWORD PTR [rbp+0x15040],rax
   140039e9f:	test   esi,esi
   140039ea1:	jle    0x14003a105
   140039ea7:	mov    ecx,0x8fd8
   140039eac:	call   0x140055dac
   140039eb1:	mov    QWORD PTR [rsp+0x70],rax
   140039eb6:	test   rax,rax
   140039eb9:	je     0x140039ecd
   140039ebb:	mov    rdx,QWORD PTR [rsp+0x50]
   140039ec0:	mov    rcx,rax
   140039ec3:	call   0x140007678
   140039ec8:	mov    rdi,rax
   140039ecb:	jmp    0x140039ed0
   140039ecd:	mov    rdi,rbx
   140039ed0:	lea    rcx,[rbp+0x6de50]
   140039ed7:	call   0x140021dec
   140039edc:	test   al,al
   140039ede:	je     0x14003a02a
   140039ee4:	lea    rdx,[rbp+0x6de50]
   140039eeb:	mov    rcx,rdi
   140039eee:	call   0x14002117c
   140039ef3:	xor    edx,edx
   140039ef5:	mov    rcx,rdi
   140039ef8:	call   0x140008f4c
   140039efd:	mov    sil,al
   140039f00:	test   al,al
   140039f02:	je     0x140039f8f
   140039f08:	jmp    0x140039f1b
   140039f0a:	cmp    DWORD PTR [rdi+0x22d4],0x5
   140039f11:	je     0x140039f2a
   140039f13:	mov    rcx,rdi
   140039f16:	call   0x14000a2c8
   140039f1b:	mov    rcx,rdi
   140039f1e:	call   0x14000e334
   140039f23:	test   rax,rax
   140039f26:	jne    0x140039f0a
   140039f28:	jmp    0x140039f8f
   140039f2a:	lea    rdx,[rbp+0x6de50]
   140039f31:	mov    ecx,0x5d
   140039f36:	call   0x1400013b0
   140039f3b:	cmp    BYTE PTR [rdi+0x5825],bl
   140039f41:	je     0x140039f8f
   140039f43:	mov    DWORD PTR [rsp+0x28],ebx
   140039f47:	mov    rax,QWORD PTR [rdi+0x7f78]
   140039f4e:	mov    QWORD PTR [rsp+0x20],rax
   140039f53:	mov    rax,QWORD PTR [rsp+0x50]
   140039f58:	mov    r9d,DWORD PTR [rax+0x83d0]
   140039f5f:	xor    r8d,r8d
   140039f62:	lea    rdx,[rsp+0x48]
   140039f67:	mov    rcx,rdi
   140039f6a:	call   0x140021500
   140039f6f:	mov    eax,DWORD PTR [rsp+0x48]
   140039f73:	cmp    DWORD PTR [rdi+0x581c],eax
   140039f79:	je     0x140039f8f
   140039f7b:	mov    sil,bl
   140039f7e:	lea    rdx,[rbp+0x6de50]
   140039f85:	mov    ecx,0x73
   140039f8a:	call   0x1400013b0
   140039f8f:	test   sil,sil
   140039f92:	jne    0x14003a013
   140039f94:	mov    rcx,rdi
   140039f97:	call   0x1400207cc
   140039f9c:	mov    rcx,rbx
   140039f9f:	movzx  eax,WORD PTR [rbp+rcx*1+0x6de50]
   140039fa7:	mov    WORD PTR [rbp+rcx*1-0x10],ax
   140039fac:	lea    rcx,[rcx+0x2]
   140039fb0:	test   ax,ax
   140039fb3:	jne    0x140039f9f
   140039fb5:	lea    rcx,[rbp-0x10]
   140039fb9:	sub    rcx,0x2
   140039fbd:	lea    rcx,[rcx+0x2]
   140039fc1:	cmp    WORD PTR [rcx],bx
   140039fc4:	jne    0x140039fbd
   140039fc6:	movsd  xmm0,QWORD PTR [rip+0x35ec2]        # 0x14006fe90
   140039fce:	movsd  QWORD PTR [rcx],xmm0
   140039fd2:	movzx  eax,WORD PTR [rip+0x35ebf]        # 0x14006fe98
   140039fd9:	mov    WORD PTR [rcx+0x8],ax
   140039fdd:	lea    rdx,[rbp+0x6de50]
   140039fe4:	mov    ecx,0x6b
   140039fe9:	call   0x1400013b0
   140039fee:	lea    r8,[rbp-0x10]
   140039ff2:	lea    rdx,[rbp+0x6de50]
   140039ff9:	mov    ecx,0x6d
   140039ffe:	call   0x140001358
   14003a003:	lea    rdx,[rbp-0x10]
   14003a007:	lea    rcx,[rbp+0x6de50]
   14003a00e:	call   0x1400224c8
   14003a013:	mov    rax,QWORD PTR [rdi]
   14003a016:	xor    r8d,r8d
   14003a019:	xor    edx,edx
   14003a01b:	mov    rcx,rdi
   14003a01e:	call   QWORD PTR [rax+0x18]
   14003a021:	test   sil,sil
   14003a024:	mov    esi,DWORD PTR [rsp+0x34]
   14003a028:	jne    0x14003a09a
   14003a02a:	mov    r8d,0x12
   14003a030:	lea    rdx,[rbp+0x6de50]
   14003a037:	mov    rcx,rdi
   14003a03a:	call   0x140020964
   14003a03f:	test   al,al
   14003a041:	je     0x14003a0cc
   14003a047:	mov    BYTE PTR [rbp+r14*1+0x6dd50],0x1
   14003a050:	inc    DWORD PTR [rsp+0x40]
   14003a054:	lea    eax,[rsi-0x1]
   14003a057:	cmp    r15d,eax
   14003a05a:	jne    0x14003a078
   14003a05c:	mov    rcx,rbx
   14003a05f:	movzx  eax,WORD PTR [rbp+rcx*1+0x6de50]
   14003a067:	mov    WORD PTR [rbp+rcx*1+0x70e50],ax
   14003a06f:	lea    rcx,[rcx+0x2]
   14003a073:	test   ax,ax
   14003a076:	jne    0x14003a05f
   14003a078:	lea    rdx,[rbp+0x6de50]
   14003a07f:	mov    ecx,0x71
   14003a084:	call   0x1400013b0
   14003a089:	lea    rdx,[rbp+0x6de50]
   14003a090:	mov    ecx,0x89
   14003a095:	call   0x1400013b0
   14003a09a:	mov    QWORD PTR [r12+r14*8],rdi
   14003a09e:	cmp    BYTE PTR [rsp+0x38],bl
   14003a0a2:	sete   r8b
   14003a0a6:	mov    edx,0x800
   14003a0ab:	lea    rcx,[rbp+0x6de50]
   14003a0b2:	call   0x14003259c
   14003a0b7:	inc    r15d
   14003a0ba:	inc    r14
   14003a0bd:	cmp    r14,QWORD PTR [rbp+0x15040]
   14003a0c4:	jl     0x140039ea7
   14003a0ca:	jmp    0x14003a105
   14003a0cc:	mov    edx,r13d
   14003a0cf:	mov    ecx,0x33
   14003a0d4:	call   0x14002146c
   14003a0d9:	mov    QWORD PTR [rbp-0x20],rbx
   14003a0dd:	mov    DWORD PTR [rbp-0x18],0x34
   14003a0e4:	lea    rcx,[rbp-0x80]
   14003a0e8:	call   0x1400479a4
   14003a0ed:	lea    rdx,[rbp+0x6de50]
   14003a0f4:	lea    rcx,[rip+0x5a765]        # 0x140094860
   14003a0fb:	call   0x14001bc54
   14003a100:	jmp    0x140039e41
   14003a105:	mov    edi,DWORD PTR [rsp+0x40]
   14003a109:	mov    edx,edi
   14003a10b:	mov    ecx,0x70
   14003a110:	call   0x14002146c
   14003a115:	test   edi,edi
   14003a117:	jne    0x14003a132
   14003a119:	mov    QWORD PTR [rbp-0x20],rbx
   14003a11d:	mov    DWORD PTR [rbp-0x18],0x32
   14003a124:	lea    rcx,[rbp-0x80]
   14003a128:	call   0x1400479a4
   14003a12d:	jmp    0x140039e41
   14003a132:	cmp    edi,r13d
   14003a135:	jle    0x14003a15d
   14003a137:	mov    edx,r13d
   14003a13a:	mov    ecx,0x33
   14003a13f:	call   0x14002146c
   14003a144:	mov    QWORD PTR [rbp-0x20],rbx
   14003a148:	mov    DWORD PTR [rbp-0x18],0x35
   14003a14f:	lea    rcx,[rbp-0x80]
   14003a153:	call   0x1400479a4
   14003a158:	jmp    0x14003a5ed
   14003a15d:	mov    QWORD PTR [rbp-0x20],rbx
   14003a161:	mov    DWORD PTR [rbp-0x18],0x72
   14003a168:	lea    rcx,[rbp-0x80]
   14003a16c:	call   0x1400479a4
   14003a171:	mov    r14d,DWORD PTR [rsp+0x44]
   14003a176:	lea    r15d,[r14+rsi*1]
   14003a17a:	mov    DWORD PTR [rsp+0x34],r15d
   14003a17f:	mov    r8d,ebx
   14003a182:	mov    DWORD PTR [rsp+0x40],ebx
   14003a186:	mov    edx,ebx
   14003a188:	mov    rax,rbx
   14003a18b:	movsxd rdi,r15d
   14003a18e:	test   r15d,r15d
   14003a191:	jle    0x14003a1c1
   14003a193:	lea    rcx,[rbp+0x15050]
   14003a19a:	cmp    BYTE PTR [rbp+rax*1+0x6dd50],bl
   14003a1a1:	jne    0x14003a1a9
   14003a1a3:	cmp    QWORD PTR [r12+rax*8],rbx
   14003a1a7:	jne    0x14003a1b2
   14003a1a9:	mov    DWORD PTR [rcx],edx
   14003a1ab:	inc    r8d
   14003a1ae:	add    rcx,0x4
   14003a1b2:	inc    edx
   14003a1b4:	inc    rax
   14003a1b7:	cmp    rax,rdi
   14003a1ba:	jl     0x14003a19a
   14003a1bc:	mov    DWORD PTR [rsp+0x40],r8d
   14003a1c1:	mov    QWORD PTR [rsp+0x60],rbx
   14003a1c6:	or     DWORD PTR [rsp+0x44],0xffffffff
   14003a1cb:	lea    rcx,[rip+0x35cce]        # 0x14006fea0
   14003a1d2:	call   0x14001796c
   14003a1d7:	xor    edx,edx
   14003a1d9:	mov    eax,0x4000000
   14003a1de:	div    rdi
   14003a1e1:	mov    r12,rax
   14003a1e4:	mov    rax,QWORD PTR [rsp+0x50]
   14003a1e9:	mov    r13d,DWORD PTR [rax+0x83d0]
   14003a1f0:	mov    DWORD PTR [rsp+0x48],r13d
   14003a1f5:	test   r13d,r13d
   14003a1f8:	je     0x14003a21c
   14003a1fa:	lea    rdi,[rbp+0x15450]
   14003a201:	mov    esi,r13d
   14003a204:	mov    edx,r14d
   14003a207:	mov    rcx,rdi
   14003a20a:	call   0x14004197c
   14003a20f:	add    rdi,0x2c48
   14003a216:	sub    rsi,0x1
   14003a21a:	jne    0x14003a204
   14003a21c:	call   0x140046bb4
   14003a221:	mov    edi,ebx
   14003a223:	mov    r14d,ebx
   14003a226:	mov    rsi,rbx
   14003a229:	test   r15d,r15d
   14003a22c:	jle    0x14003a4c0
   14003a232:	mov    rax,QWORD PTR [rsp+0x58]
   14003a237:	cmp    BYTE PTR [rbp+rsi*1+0x6dd50],bl
   14003a23e:	jne    0x14003a29c
   14003a240:	mov    rcx,QWORD PTR [rax+rsi*8]
   14003a244:	test   rcx,rcx
   14003a247:	je     0x14003a29c
   14003a249:	movsxd r15,r14d
   14003a24c:	imul   r15,r12
   14003a250:	mov    rdx,QWORD PTR [rax+0x800]
   14003a257:	add    rdx,r15
   14003a25a:	mov    rax,QWORD PTR [rcx]
   14003a25d:	mov    r8,r12
   14003a260:	call   QWORD PTR [rax+0x10]
   14003a263:	movsxd r13,eax
   14003a266:	mov    rax,r13
   14003a269:	cmp    r13,r12
   14003a26c:	je     0x14003a28d
   14003a26e:	mov    r8,r12
   14003a271:	sub    r8,rax
   14003a274:	mov    rcx,QWORD PTR [rsp+0x58]
   14003a279:	mov    rcx,QWORD PTR [rcx+0x800]
   14003a280:	add    rcx,rax
   14003a283:	add    rcx,r15
   14003a286:	xor    edx,edx
   14003a288:	call   0x140058f40
   14003a28d:	mov    r15d,DWORD PTR [rsp+0x34]
   14003a292:	cmp    r13d,edi
   14003a295:	jle    0x14003a2b4
   14003a297:	mov    edi,r13d
   14003a29a:	jmp    0x14003a2b4
   14003a29c:	movsxd rcx,r14d
   14003a29f:	imul   rcx,r12
   14003a2a3:	add    rcx,QWORD PTR [rax+0x800]
   14003a2aa:	mov    r8,r12
   14003a2ad:	xor    edx,edx
   14003a2af:	call   0x140058f40
   14003a2b4:	inc    r14d
   14003a2b7:	inc    rsi
   14003a2ba:	movsxd rax,r15d
   14003a2bd:	cmp    rsi,rax
   14003a2c0:	jl     0x14003a232
   14003a2c6:	test   edi,edi
   14003a2c8:	je     0x14003a44c
   14003a2ce:	mov    r15,QWORD PTR [rsp+0x68]
   14003a2d3:	mov    rdx,r15
   14003a2d6:	mov    r14,QWORD PTR [rsp+0x60]
   14003a2db:	mov    rcx,r14
   14003a2de:	call   0x14004596c
   14003a2e3:	mov    esi,eax
   14003a2e5:	mov    rax,QWORD PTR [rsp+0x50]
   14003a2ea:	cmp    BYTE PTR [rax+0x6150],bl
   14003a2f0:	jne    0x14003a30e
   14003a2f2:	cmp    esi,DWORD PTR [rsp+0x44]
   14003a2f6:	je     0x14003a30e
   14003a2f8:	mov    r8,r15
   14003a2fb:	mov    rdx,r14
   14003a2fe:	lea    rcx,[rip+0x359e7]        # 0x14006fcec
   14003a305:	call   0x140048840
   14003a30a:	mov    DWORD PTR [rsp+0x44],esi
   14003a30e:	movsxd rax,edi
   14003a311:	mov    QWORD PTR [rsp+0x70],rax
   14003a316:	add    r14,rax
   14003a319:	mov    QWORD PTR [rsp+0x60],r14
   14003a31e:	mov    r14d,ebx
   14003a321:	xor    edx,edx
   14003a323:	mov    eax,edi
   14003a325:	mov    r13d,DWORD PTR [rsp+0x48]
   14003a32a:	div    r13d
   14003a32d:	mov    esi,eax
   14003a32f:	cmp    eax,0x100
   14003a334:	cmovl  esi,edi
   14003a337:	mov    r15d,ebx
   14003a33a:	test   edi,edi
   14003a33c:	jle    0x14003a3e2
   14003a342:	lea    ebx,[r13-0x1]
   14003a346:	cmp    r15d,ebx
   14003a349:	jne    0x14003a350
   14003a34b:	mov    esi,edi
   14003a34d:	sub    esi,r14d
   14003a350:	mov    eax,r15d
   14003a353:	imul   rcx,rax,0x2c48
   14003a35a:	lea    rax,[rbp+0x15450]
   14003a361:	add    rcx,rax
   14003a364:	mov    r9,QWORD PTR [rsp+0x58]
   14003a369:	mov    rax,QWORD PTR [r9+0x800]
   14003a370:	mov    QWORD PTR [rcx+0x2c10],rax
   14003a377:	mov    DWORD PTR [rcx+0x2c20],r14d
   14003a37e:	add    r14d,esi
   14003a381:	mov    DWORD PTR [rcx+0x2c24],r14d
   14003a388:	mov    eax,DWORD PTR [rsp+0x34]
   14003a38c:	mov    DWORD PTR [rcx+0x2c28],eax
   14003a392:	mov    QWORD PTR [rcx+0x2c30],r12
   14003a399:	lea    rax,[rbp+0x15050]
   14003a3a0:	mov    QWORD PTR [rcx+0x2c38],rax
   14003a3a7:	mov    eax,DWORD PTR [rsp+0x40]
   14003a3ab:	mov    DWORD PTR [rcx+0x2c40],eax
   14003a3b1:	cmp    r13d,0x1
   14003a3b5:	jbe    0x14003a3cf
   14003a3b7:	mov    r8,rcx
   14003a3ba:	lea    rdx,[rip+0xffffffffffffecd7]        # 0x140039098
   14003a3c1:	mov    rcx,QWORD PTR [r9+0x820]
   14003a3c8:	call   0x140046dd8
   14003a3cd:	jmp    0x14003a3d4
   14003a3cf:	call   0x140037d94
   14003a3d4:	inc    r15d
   14003a3d7:	cmp    r14d,edi
   14003a3da:	jl     0x14003a346
   14003a3e0:	xor    ebx,ebx
   14003a3e2:	mov    r13,QWORD PTR [rsp+0x58]
   14003a3e7:	mov    rcx,QWORD PTR [r13+0x820]
   14003a3ee:	call   0x140047214
   14003a3f3:	mov    esi,ebx
   14003a3f5:	mov    rdi,rbx
   14003a3f8:	mov    rax,QWORD PTR [rbp+0x15040]
   14003a3ff:	test   rax,rax
   14003a402:	mov    r15d,DWORD PTR [rsp+0x34]
   14003a407:	jle    0x14003a21c
   14003a40d:	mov    r14,QWORD PTR [rsp+0x70]
   14003a412:	cmp    BYTE PTR [rbp+rdi*1+0x6dd50],bl
   14003a419:	je     0x14003a43d
   14003a41b:	movsxd rdx,esi
   14003a41e:	imul   rdx,r12
   14003a422:	add    rdx,QWORD PTR [r13+0x800]
   14003a429:	mov    r8,r14
   14003a42c:	mov    rcx,QWORD PTR [r13+rdi*8+0x0]
   14003a431:	call   0x1400212ac
   14003a436:	mov    rax,QWORD PTR [rbp+0x15040]
   14003a43d:	inc    esi
   14003a43f:	inc    rdi
   14003a442:	cmp    rdi,rax
   14003a445:	jl     0x14003a412
   14003a447:	jmp    0x14003a21c
   14003a44c:	test   r15d,r15d
   14003a44f:	jle    0x14003a4c0
   14003a451:	lea    rsi,[rbp+0x6dd50]
   14003a458:	mov    r14d,r15d
   14003a45b:	mov    r12,QWORD PTR [rsp+0x58]
   14003a460:	mov    r13d,DWORD PTR [rsp+0x3c]
   14003a465:	mov    rdi,QWORD PTR [r12]
   14003a469:	test   rdi,rdi
   14003a46c:	je     0x14003a4b3
   14003a46e:	test   r13b,r13b
   14003a471:	je     0x14003a4a7
   14003a473:	cmp    BYTE PTR [rsi],bl
   14003a475:	je     0x14003a4a7
   14003a477:	mov    rax,QWORD PTR [rdi]
   14003a47a:	mov    rcx,rdi
   14003a47d:	call   QWORD PTR [rax+0x20]
   14003a480:	mov    r9,QWORD PTR [rdi]
   14003a483:	lea    rdx,[rax-0x7]
   14003a487:	xor    r8d,r8d
   14003a48a:	mov    rcx,rdi
   14003a48d:	call   QWORD PTR [r9+0x18]
   14003a491:	mov    r15d,0x7
   14003a497:	xor    edx,edx
   14003a499:	mov    rcx,rdi
   14003a49c:	call   0x140020e38
   14003a4a1:	sub    r15,0x1
   14003a4a5:	jne    0x14003a497
   14003a4a7:	mov    rcx,rdi
   14003a4aa:	call   0x1400207cc
   14003a4af:	mov    QWORD PTR [r12],rbx
   14003a4b3:	inc    rsi
   14003a4b6:	add    r12,0x8
   14003a4ba:	sub    r14,0x1
   14003a4be:	jne    0x14003a465
   14003a4c0:	cmp    WORD PTR [rbp+0x70e50],bx
   14003a4c7:	je     0x14003a5ad
   14003a4cd:	mov    rdx,QWORD PTR [rsp+0x50]
   14003a4d2:	lea    rcx,[rbp+0xc060]
   14003a4d9:	call   0x140007678
   14003a4de:	nop
   14003a4df:	mov    r8d,0x1
   14003a4e5:	lea    rdx,[rbp+0x70e50]
   14003a4ec:	lea    rcx,[rbp+0xc060]
   14003a4f3:	call   0x1400094f8
   14003a4f8:	test   al,al
   14003a4fa:	je     0x14003a5a1
   14003a500:	mov    dl,0x1
   14003a502:	lea    rcx,[rbp+0xc060]
   14003a509:	call   0x140008f4c
   14003a50e:	test   al,al
   14003a510:	je     0x14003a5a1
   14003a516:	mov    edx,0x5
   14003a51b:	lea    rcx,[rbp+0xc060]
   14003a522:	call   0x14000e778
   14003a527:	test   rax,rax
   14003a52a:	je     0x14003a5a1
   14003a52c:	xor    r8d,r8d
   14003a52f:	mov    rdx,QWORD PTR [rbp+0x13fe0]
   14003a536:	lea    rcx,[rbp+0xc060]
   14003a53d:	call   0x14000a280
   14003a542:	mov    r8d,0x2000
   14003a548:	lea    rdx,[rbp+0x6ee50]
   14003a54f:	lea    rcx,[rbp+0xc060]
   14003a556:	call   0x1400098e8
   14003a55b:	mov    edx,ebx
   14003a55d:	mov    rcx,rbx
   14003a560:	movsxd r8,eax
   14003a563:	test   eax,eax
   14003a565:	jle    0x14003a57a
   14003a567:	cmp    BYTE PTR [rbp+rcx*1+0x6ee50],bl
   14003a56e:	jne    0x14003a57a
   14003a570:	inc    edx
   14003a572:	inc    rcx
   14003a575:	cmp    rcx,r8
   14003a578:	jl     0x14003a567
   14003a57a:	cmp    edx,eax
   14003a57c:	jne    0x14003a5a1
   14003a57e:	xor    r8d,r8d
   14003a581:	mov    rdx,QWORD PTR [rbp+0x13fe0]
   14003a588:	lea    rcx,[rbp+0xc060]
   14003a58f:	call   0x14000a280
   14003a594:	lea    rcx,[rbp+0xc060]
   14003a59b:	call   0x14002122c
   14003a5a0:	nop
   14003a5a1:	lea    rcx,[rbp+0xc060]
   14003a5a8:	call   0x140007880
   14003a5ad:	mov    rax,QWORD PTR [rsp+0x50]
   14003a5b2:	cmp    BYTE PTR [rax+0x6150],bl
   14003a5b8:	jne    0x14003a5cb
   14003a5ba:	lea    rcx,[rip+0x358ef]        # 0x14006feb0
   14003a5c1:	call   0x14001796c
   14003a5c6:	mov    rax,QWORD PTR [rsp+0x50]
   14003a5cb:	cmp    BYTE PTR [rsp+0x32],bl
   14003a5cf:	jne    0x14003a5eb
   14003a5d1:	cmp    BYTE PTR [rax+0x6152],bl
   14003a5d7:	jne    0x14003a5eb
   14003a5d9:	mov    ecx,0xd22
   14003a5de:	call   0x140040118
   14003a5e3:	mov    rcx,rax
   14003a5e6:	call   0x14001796c
   14003a5eb:	mov    bl,0x1
   14003a5ed:	lea    rcx,[rbp+0x2070]
   14003a5f4:	call   0x140023264
   14003a5f9:	nop
   14003a5fa:	lea    rcx,[rbp+0x3080]
   14003a601:	call   0x140007880
   14003a606:	mov    al,bl
   14003a608:	mov    rcx,QWORD PTR [rbp+0x73e50]
   14003a60f:	xor    rcx,rsp
   14003a612:	call   0x140055f90
   14003a617:	mov    rbx,QWORD PTR [rsp+0x73fb8]
   14003a61f:	add    rsp,0x73f60
   14003a626:	pop    r15
   14003a628:	pop    r14
   14003a62a:	pop    r13
   14003a62c:	pop    r12
   14003a62e:	pop    rdi
   14003a62f:	pop    rsi
   14003a630:	pop    rbp
   14003a631:	ret    
   14003a632:	int3   
   14003a633:	int3   
   14003a634:	rex push rbp
   14003a636:	push   rsi
   14003a637:	push   rdi
   14003a638:	push   r12
   14003a63a:	push   r13
   14003a63c:	push   r14
   14003a63e:	push   r15
   14003a640:	lea    rbp,[rsp-0x50b0]
   14003a648:	mov    eax,0x51b0
   14003a64d:	call   0x140055f20
   14003a652:	sub    rsp,rax
   14003a655:	mov    QWORD PTR [rbp-0x78],0xfffffffffffffffe
   14003a65d:	mov    QWORD PTR [rsp+0x5208],rbx
   14003a665:	mov    rax,QWORD PTR [rip+0x47874]        # 0x140081ee0
   14003a66c:	xor    rax,rsp
   14003a66f:	mov    QWORD PTR [rbp+0x50a0],rax
   14003a676:	mov    BYTE PTR [rsp+0x41],r9b
   14003a67b:	mov    rax,r8
   14003a67e:	mov    r13,rdx
   14003a681:	mov    QWORD PTR [rsp+0x48],rdx
   14003a686:	mov    r14,rcx
   14003a689:	mov    r8d,0x800
   14003a68f:	mov    rdx,rax
   14003a692:	lea    rcx,[rbp+0x20a0]
   14003a699:	call   0x140046158
   14003a69e:	lea    rcx,[rbp+0x20a0]
   14003a6a5:	call   0x140031e24
   14003a6aa:	mov    rbx,rax
   14003a6ad:	lea    rax,[rbp+0x20a0]
   14003a6b4:	xor    esi,esi
   14003a6b6:	cmp    rbx,rax
   14003a6b9:	jbe    0x14003a6da
   14003a6bb:	lea    rdi,[rbx-0x2]
   14003a6bf:	movzx  ecx,WORD PTR [rdi]
   14003a6c2:	call   0x140045d18
   14003a6c7:	test   al,al
   14003a6c9:	je     0x14003a6da
   14003a6cb:	mov    rbx,rdi
   14003a6ce:	lea    rax,[rbp+0x20a0]
   14003a6d5:	cmp    rdi,rax
   14003a6d8:	ja     0x14003a6bb
   14003a6da:	lea    rcx,[rbp+0x20a0]
   14003a6e1:	mov    rax,rbx
   14003a6e4:	sub    rax,rcx
   14003a6e7:	sar    rax,1
   14003a6ea:	mov    r8d,0x800
   14003a6f0:	sub    r8,rax
   14003a6f3:	lea    rdx,[rip+0x355a6]        # 0x14006fca0
   14003a6fa:	mov    rcx,rbx
   14003a6fd:	call   0x140046158
   14003a702:	mov    WORD PTR [rbp+0x30a0],si
   14003a709:	mov    QWORD PTR [rsp+0x70],rsi
   14003a70e:	lea    rcx,[rbp+0x1090]
   14003a715:	call   0x14002324c
   14003a71a:	nop
   14003a71b:	lea    rdx,[rbp+0x20a0]
   14003a722:	lea    rcx,[rbp+0x1090]
   14003a729:	call   0x1400233f4
   14003a72e:	mov    QWORD PTR [rbp+0x1050],rsi
   14003a735:	mov    QWORD PTR [rbp+0x1058],rsi
   14003a73c:	mov    QWORD PTR [rbp+0x1060],rsi
   14003a743:	mov    r15d,esi
   14003a746:	xor    r8d,r8d
   14003a749:	lea    rdx,[rbp+0x40]
   14003a74d:	lea    rcx,[rbp+0x1090]
   14003a754:	call   0x1400232f8
   14003a759:	or     QWORD PTR [rsp+0x78],0xffffffffffffffff
   14003a75f:	test   al,al
   14003a761:	je     0x14003a9a8
   14003a767:	call   0x140046bb4
   14003a76c:	mov    ecx,0x8fd8
   14003a771:	call   0x140055dac
   14003a776:	mov    QWORD PTR [rsp+0x68],rax
   14003a77b:	test   rax,rax
   14003a77e:	je     0x14003a790
   14003a780:	mov    rdx,r13
   14003a783:	mov    rcx,rax
   14003a786:	call   0x140007678
   14003a78b:	mov    rbx,rax
   14003a78e:	jmp    0x14003a793
   14003a790:	mov    rbx,rsi
   14003a793:	lea    rdx,[rbp+0x40]
   14003a797:	mov    rcx,rbx
   14003a79a:	call   0x140021278
   14003a79f:	test   al,al
   14003a7a1:	je     0x14003a954
   14003a7a7:	lea    rdx,[rip+0x354fa]        # 0x14006fca8
   14003a7ae:	lea    rcx,[rbp+0x40]
   14003a7b2:	call   0x140030eb8
   14003a7b7:	test   al,al
   14003a7b9:	je     0x14003a7f1
   14003a7bb:	test   r15d,r15d
   14003a7be:	sete   r8b
   14003a7c2:	mov    rdx,rbx
   14003a7c5:	mov    rcx,r14
   14003a7c8:	call   0x1400390a8
   14003a7cd:	mov    edi,eax
   14003a7cf:	test   eax,eax
   14003a7d1:	je     0x14003a954
   14003a7d7:	test   r15d,r15d
   14003a7da:	jne    0x14003a7e9
   14003a7dc:	mov    rcx,rbx
   14003a7df:	call   0x140020b88
   14003a7e4:	mov    QWORD PTR [rsp+0x70],rax
   14003a7e9:	inc    r15d
   14003a7ec:	jmp    0x14003a91b
   14003a7f1:	mov    dl,0x1
   14003a7f3:	mov    rcx,rbx
   14003a7f6:	call   0x140008f4c
   14003a7fb:	test   al,al
   14003a7fd:	je     0x14003a954
   14003a803:	cmp    QWORD PTR [rbx+0x7f98],rsi
   14003a80a:	ja     0x14003a824
   14003a80c:	lea    rdx,[rip+0x3549d]        # 0x14006fcb0
   14003a813:	lea    rcx,[rbp+0x40]
   14003a817:	call   0x140030eb8
   14003a81c:	test   al,al
   14003a81e:	je     0x14003a954
   14003a824:	cmp    BYTE PTR [rbx+0x7f8d],sil
   14003a82b:	jne    0x14003a83a
   14003a82d:	cmp    BYTE PTR [rbx+0x7fa0],sil
   14003a834:	je     0x14003a983
   14003a83a:	mov    BYTE PTR [rbx+0x33e0],sil
   14003a841:	mov    rax,QWORD PTR [rbx]
   14003a844:	xor    r8d,r8d
   14003a847:	xor    edx,edx
   14003a849:	mov    rcx,rbx
   14003a84c:	call   QWORD PTR [rax+0x18]
   14003a84f:	lea    rcx,[rbp+0x40]
   14003a853:	call   0x140031e24
   14003a858:	mov    rdi,rax
   14003a85b:	mov    r13d,esi
   14003a85e:	mov    r12d,0x1
   14003a864:	lea    rax,[rbp+0x40]
   14003a868:	cmp    rdi,rax
   14003a86b:	jb     0x14003a966
   14003a871:	movzx  ecx,WORD PTR [rdi]
   14003a874:	call   0x140045d18
   14003a879:	test   al,al
   14003a87b:	je     0x14003a89e
   14003a87d:	movzx  eax,WORD PTR [rdi]
   14003a880:	sub    eax,0x30
   14003a883:	imul   eax,r12d
   14003a887:	add    r13d,eax
   14003a88a:	lea    r12d,[r12+r12*4]
   14003a88e:	add    r12d,r12d
   14003a891:	sub    rdi,0x2
   14003a895:	lea    rax,[rbp+0x40]
   14003a899:	cmp    rdi,rax
   14003a89c:	jae    0x14003a871
   14003a89e:	lea    eax,[r13-0x1]
   14003a8a2:	cmp    eax,0xfffe
   14003a8a7:	ja     0x14003a966
   14003a8ad:	mov    r12,QWORD PTR [r14+0x8]
   14003a8b1:	mov    edi,r13d
   14003a8b4:	cmp    rdi,r12
   14003a8b7:	jbe    0x14003a8f5
   14003a8b9:	cmp    rdi,QWORD PTR [r14+0x10]
   14003a8bd:	jbe    0x14003a8ce
   14003a8bf:	mov    edx,edi
   14003a8c1:	sub    rdx,r12
   14003a8c4:	mov    rcx,r14
   14003a8c7:	call   0x140037cf0
   14003a8cc:	jmp    0x14003a8d2
   14003a8ce:	mov    QWORD PTR [r14+0x8],rdi
   14003a8d2:	cmp    r12,rdi
   14003a8d5:	jae    0x14003a8f5
   14003a8d7:	imul   rcx,r12,0x1020
   14003a8de:	sub    rdi,r12
   14003a8e1:	mov    rax,QWORD PTR [r14]
   14003a8e4:	mov    QWORD PTR [rcx+rax*1],rsi
   14003a8e8:	lea    rcx,[rcx+0x1020]
   14003a8ef:	sub    rdi,0x1
   14003a8f3:	jne    0x14003a8e1
   14003a8f5:	lea    edi,[r13-0x1]
   14003a8f9:	cmp    WORD PTR [rbp+0x30a0],si
   14003a900:	jne    0x14003a91b
   14003a902:	mov    r9b,0x1
   14003a905:	mov    r8d,0x800
   14003a90b:	lea    rdx,[rbp+0x30a0]
   14003a912:	lea    rcx,[rbp+0x40]
   14003a916:	call   0x1400329a4
   14003a91b:	cmp    edi,0xffffffff
   14003a91e:	je     0x14003a954
   14003a920:	mov    eax,edi
   14003a922:	cmp    rax,QWORD PTR [r14+0x8]
   14003a926:	jae    0x14003a966
   14003a928:	movsxd rax,edi
   14003a92b:	imul   rcx,rax,0x1020
   14003a932:	add    rcx,QWORD PTR [r14]
   14003a935:	mov    QWORD PTR [rcx],rbx
   14003a938:	mov    BYTE PTR [rcx+0x1018],sil
   14003a93f:	add    rcx,0x8
   14003a943:	mov    r8d,0x800
   14003a949:	lea    rdx,[rbp+0x40]
   14003a94d:	call   0x140046158
   14003a952:	jmp    0x14003a966
   14003a954:	test   rbx,rbx
   14003a957:	je     0x14003a966
   14003a959:	mov    rax,QWORD PTR [rbx]
   14003a95c:	mov    edx,0x1
   14003a961:	mov    rcx,rbx
   14003a964:	call   QWORD PTR [rax]
   14003a966:	xor    r8d,r8d
   14003a969:	lea    rdx,[rbp+0x40]
   14003a96d:	lea    rcx,[rbp+0x1090]
   14003a974:	call   0x1400232f8
   14003a979:	mov    r13,QWORD PTR [rsp+0x48]
   14003a97e:	jmp    0x14003a75f
   14003a983:	lea    rdx,[rbp+0x20a0]
   14003a98a:	mov    ecx,0x2e
   14003a98f:	call   0x1400013b0
   14003a994:	nop
   14003a995:	lea    rcx,[rbp+0x1090]
   14003a99c:	call   0x140023264
   14003a9a1:	xor    al,al
   14003a9a3:	jmp    0x14003b03d
   14003a9a8:	cmp    BYTE PTR [rsp+0x41],sil
   14003a9ad:	je     0x14003a9b4
   14003a9af:	test   r15d,r15d
   14003a9b2:	je     0x14003a995
   14003a9b4:	mov    edx,r15d
   14003a9b7:	mov    ecx,0x6f
   14003a9bc:	call   0x14002146c
   14003a9c1:	test   r15d,r15d
   14003a9c4:	je     0x14003a995
   14003a9c6:	mov    QWORD PTR [rbp+0x30],rsi
   14003a9ca:	mov    DWORD PTR [rbp+0x38],0x6e
   14003a9d1:	lea    rcx,[rbp-0x30]
   14003a9d5:	call   0x1400479a4
   14003a9da:	mov    DWORD PTR [r14+0x60],esi
   14003a9de:	mov    edi,esi
   14003a9e0:	cmp    DWORD PTR [r14+0x50],esi
   14003a9e4:	jbe    0x14003aa94
   14003a9ea:	mov    eax,edi
   14003a9ec:	imul   rbx,rax,0x1020
   14003a9f3:	add    rbx,QWORD PTR [r14]
   14003a9f6:	cmp    QWORD PTR [rbx],rsi
   14003a9f9:	je     0x14003aa70
   14003a9fb:	lea    rdx,[rbx+0x8]
   14003a9ff:	mov    ecx,0x5d
   14003aa04:	call   0x1400013b0
   14003aa09:	mov    DWORD PTR [rsp+0x28],0x8
   14003aa11:	movabs rax,0x7fffffff7fffffff
   14003aa1b:	mov    QWORD PTR [rsp+0x20],rax
   14003aa20:	mov    r9d,DWORD PTR [r13+0x83d0]
   14003aa27:	xor    r8d,r8d
   14003aa2a:	lea    rdx,[rsp+0x50]
   14003aa2f:	mov    rcx,QWORD PTR [rbx]
   14003aa32:	call   0x140021500
   14003aa37:	mov    eax,DWORD PTR [rbx+0x1008]
   14003aa3d:	cmp    DWORD PTR [rsp+0x50],eax
   14003aa41:	sete   al
   14003aa44:	mov    BYTE PTR [rbx+0x1019],al
   14003aa4a:	test   al,al
   14003aa4c:	jne    0x14003aa70
   14003aa4e:	lea    rdx,[rbx+0x8]
   14003aa52:	mov    ecx,0x73
   14003aa57:	call   0x1400013b0
   14003aa5c:	cmp    edi,DWORD PTR [r14+0x48]
   14003aa60:	jb     0x14003aa76
   14003aa62:	mov    rcx,QWORD PTR [rbx]
   14003aa65:	call   0x1400207cc
   14003aa6a:	mov    QWORD PTR [rbx],rsi
   14003aa6d:	dec    r15d
   14003aa70:	cmp    edi,DWORD PTR [r14+0x48]
   14003aa74:	jae    0x14003aa88
   14003aa76:	cmp    QWORD PTR [rbx],rsi
   14003aa79:	je     0x14003aa84
   14003aa7b:	cmp    BYTE PTR [rbx+0x1019],sil
   14003aa82:	jne    0x14003aa88
   14003aa84:	inc    DWORD PTR [r14+0x60]
   14003aa88:	inc    edi
   14003aa8a:	cmp    edi,DWORD PTR [r14+0x50]
   14003aa8e:	jb     0x14003a9ea
   14003aa94:	mov    edx,DWORD PTR [r14+0x60]
   14003aa98:	mov    ecx,0x70
   14003aa9d:	call   0x14002146c
   14003aaa2:	cmp    DWORD PTR [r14+0x60],esi
   14003aaa6:	jne    0x14003aac1
   14003aaa8:	mov    DWORD PTR [rbp+0x38],0x32
   14003aaaf:	mov    QWORD PTR [rbp+0x30],rsi
   14003aab3:	lea    rcx,[rbp-0x30]
   14003aab7:	call   0x1400479a4
   14003aabc:	jmp    0x14003a995
   14003aac1:	cmp    DWORD PTR [r14+0x60],r15d
   14003aac5:	jbe    0x14003aadd
   14003aac7:	mov    edx,r15d
   14003aaca:	mov    ecx,0x33
   14003aacf:	call   0x14002146c
   14003aad4:	mov    DWORD PTR [rbp+0x38],0x35
   14003aadb:	jmp    0x14003aaaf
   14003aadd:	mov    QWORD PTR [rbp+0x30],rsi
   14003aae1:	mov    DWORD PTR [rbp+0x38],0x72
   14003aae8:	lea    rcx,[rbp-0x30]
   14003aaec:	call   0x1400479a4
   14003aaf1:	mov    rcx,rsi
   14003aaf4:	mov    QWORD PTR [rsp+0x58],rcx
   14003aaf9:	mov    r12d,esi
   14003aafc:	cmp    DWORD PTR [r14+0x48],esi
   14003ab00:	jbe    0x14003acee
   14003ab06:	mov    eax,r12d
   14003ab09:	imul   rbx,rax,0x1020
   14003ab10:	add    rbx,QWORD PTR [r14]
   14003ab13:	mov    rax,QWORD PTR [rbx+0x1010]
   14003ab1a:	cmp    rax,rcx
   14003ab1d:	cmova  rcx,rax
   14003ab21:	mov    QWORD PTR [rsp+0x58],rcx
   14003ab26:	cmp    QWORD PTR [rbx],rsi
   14003ab29:	je     0x14003abd8
   14003ab2f:	cmp    BYTE PTR [rbx+0x1019],sil
   14003ab36:	jne    0x14003abd5
   14003ab3c:	mov    rcx,QWORD PTR [rbx]
   14003ab3f:	call   0x1400207cc
   14003ab44:	lea    rdi,[rbx+0x8]
   14003ab48:	mov    rcx,rdi
   14003ab4b:	lea    rdx,[rbp+0x40a0]
   14003ab52:	sub    rdx,rdi
   14003ab55:	movzx  eax,WORD PTR [rcx]
   14003ab58:	mov    WORD PTR [rdx+rcx*1],ax
   14003ab5c:	lea    rcx,[rcx+0x2]
   14003ab60:	test   ax,ax
   14003ab63:	jne    0x14003ab55
   14003ab65:	lea    rdx,[rbp+0x40a0]
   14003ab6c:	sub    rdx,0x2
   14003ab70:	lea    rdx,[rdx+0x2]
   14003ab74:	cmp    WORD PTR [rdx],si
   14003ab77:	jne    0x14003ab70
   14003ab79:	movsd  xmm0,QWORD PTR [rip+0x35137]        # 0x14006fcb8
   14003ab81:	movsd  QWORD PTR [rdx],xmm0
   14003ab85:	movzx  eax,WORD PTR [rip+0x35134]        # 0x14006fcc0
   14003ab8c:	mov    WORD PTR [rdx+0x8],ax
   14003ab90:	mov    rdx,rdi
   14003ab93:	mov    ecx,0x6b
   14003ab98:	call   0x1400013b0
   14003ab9d:	lea    r8,[rbp+0x40a0]
   14003aba4:	mov    rdx,rdi
   14003aba7:	mov    ecx,0x6d
   14003abac:	call   0x140001358
   14003abb1:	lea    rdx,[rbp+0x40a0]
   14003abb8:	mov    rcx,rdi
   14003abbb:	call   0x1400224c8
   14003abc0:	mov    rcx,QWORD PTR [rbx]
   14003abc3:	test   rcx,rcx
   14003abc6:	je     0x14003abd2
   14003abc8:	mov    rax,QWORD PTR [rcx]
   14003abcb:	mov    edx,0x1
   14003abd0:	call   QWORD PTR [rax]
   14003abd2:	mov    QWORD PTR [rbx],rsi
   14003abd5:	cmp    QWORD PTR [rbx],rsi
   14003abd8:	sete   al
   14003abdb:	mov    BYTE PTR [rbx+0x1018],al
   14003abe1:	test   al,al
   14003abe3:	je     0x14003acc8
   14003abe9:	lea    r15,[rbx+0x8]
   14003abed:	mov    r8d,0x800
   14003abf3:	lea    rdx,[rbp+0x30a0]
   14003abfa:	mov    rcx,r15
   14003abfd:	call   0x140046158
   14003ac02:	mov    rdx,r15
   14003ac05:	mov    ecx,0x6c
   14003ac0a:	call   0x1400013b0
   14003ac0f:	mov    rdx,r15
   14003ac12:	mov    ecx,0x89
   14003ac17:	call   0x1400013b0
   14003ac1c:	mov    ecx,0x1030
   14003ac21:	call   0x140055dac
   14003ac26:	mov    QWORD PTR [rsp+0x68],rax
   14003ac2b:	test   rax,rax
   14003ac2e:	je     0x14003ac3d
   14003ac30:	mov    rcx,rax
   14003ac33:	call   0x14002071c
   14003ac38:	mov    rdi,rax
   14003ac3b:	jmp    0x14003ac40
   14003ac3d:	mov    rdi,rsi
   14003ac40:	mov    BYTE PTR [rsp+0x38],sil
   14003ac45:	mov    QWORD PTR [rsp+0x30],rsi
   14003ac4a:	movabs rax,0x7fffffff7fffffff
   14003ac54:	mov    QWORD PTR [rsp+0x28],rax
   14003ac59:	lea    rax,[rsp+0x40]
   14003ac5e:	mov    QWORD PTR [rsp+0x20],rax
   14003ac63:	mov    r9d,0x800
   14003ac69:	mov    r8,r15
   14003ac6c:	mov    rdx,rdi
   14003ac6f:	mov    rcx,r13
   14003ac72:	call   0x1400202cc
   14003ac77:	test   al,al
   14003ac79:	jne    0x14003acaf
   14003ac7b:	mov    al,BYTE PTR [rsp+0x40]
   14003ac7f:	test   al,al
   14003ac81:	jne    0x14003ac96
   14003ac83:	mov    rdx,r15
   14003ac86:	lea    rcx,[rip+0x59bd3]        # 0x140094860
   14003ac8d:	call   0x14001bc54
   14003ac92:	mov    al,BYTE PTR [rsp+0x40]
   14003ac96:	neg    al
   14003ac98:	sbb    edx,edx
   14003ac9a:	and    edx,0xf6
   14003aca0:	add    edx,0x9
   14003aca3:	lea    rcx,[rip+0x59bb6]        # 0x140094860
   14003acaa:	call   0x14001bc60
   14003acaf:	mov    rdx,QWORD PTR [rbx+0x1010]
   14003acb6:	mov    rcx,rdi
   14003acb9:	call   0x140020e04
   14003acbe:	mov    QWORD PTR [rbx],rdi
   14003acc1:	mov    BYTE PTR [rbx+0x1018],0x1
   14003acc8:	xor    r8d,r8d
   14003accb:	mov    edx,0x800
   14003acd0:	lea    rcx,[rbp+0x30a0]
   14003acd7:	call   0x14003259c
   14003acdc:	inc    r12d
   14003acdf:	cmp    r12d,DWORD PTR [r14+0x48]
   14003ace3:	mov    rcx,QWORD PTR [rsp+0x58]
   14003ace8:	jb     0x14003ab06
   14003acee:	mov    rdi,rsi
   14003acf1:	mov    QWORD PTR [rsp+0x60],rsi
   14003acf6:	lea    rcx,[rip+0x34fcb]        # 0x14006fcc8
   14003acfd:	call   0x14001796c
   14003ad02:	mov    DWORD PTR [r14+0x60],esi
   14003ad06:	mov    ecx,DWORD PTR [r14+0x50]
   14003ad0a:	call   0x140055df0
   14003ad0f:	mov    QWORD PTR [r14+0x58],rax
   14003ad13:	mov    ecx,esi
   14003ad15:	cmp    DWORD PTR [r14+0x50],esi
   14003ad19:	jbe    0x14003ad64
   14003ad1b:	mov    edx,ecx
   14003ad1d:	imul   rax,rdx,0x1020
   14003ad24:	mov    r8,QWORD PTR [r14]
   14003ad27:	cmp    QWORD PTR [rax+r8*1],rsi
   14003ad2b:	je     0x14003ad3d
   14003ad2d:	cmp    BYTE PTR [rax+r8*1+0x1018],sil
   14003ad35:	mov    r8d,0x1
   14003ad3b:	je     0x14003ad40
   14003ad3d:	mov    r8d,esi
   14003ad40:	mov    rax,QWORD PTR [r14+0x58]
   14003ad44:	mov    BYTE PTR [rdx+rax*1],r8b
   14003ad48:	cmp    ecx,DWORD PTR [r14+0x48]
   14003ad4c:	jae    0x14003ad5c
   14003ad4e:	mov    rax,QWORD PTR [r14+0x58]
   14003ad52:	cmp    BYTE PTR [rdx+rax*1],sil
   14003ad56:	jne    0x14003ad5c
   14003ad58:	inc    DWORD PTR [r14+0x60]
   14003ad5c:	inc    ecx
   14003ad5e:	cmp    ecx,DWORD PTR [r14+0x50]
   14003ad62:	jb     0x14003ad1b
   14003ad64:	mov    ecx,DWORD PTR [r14+0x60]
   14003ad68:	xor    edx,edx
   14003ad6a:	mov    eax,0x4000000
   14003ad6f:	div    rcx
   14003ad72:	mov    QWORD PTR [r14+0x40],rax
   14003ad76:	test   al,0x1
   14003ad78:	je     0x14003ad81
   14003ad7a:	dec    rax
   14003ad7d:	mov    QWORD PTR [r14+0x40],rax
   14003ad81:	and    QWORD PTR [r14+0x40],0xfffffffffffffff0
   14003ad86:	mov    ecx,DWORD PTR [r14+0x50]
   14003ad8a:	mov    eax,0x4
   14003ad8f:	mul    rcx
   14003ad92:	mov    rcx,0xffffffffffffffff
   14003ad99:	cmovo  rax,rcx
   14003ad9d:	mov    rcx,rax
   14003ada0:	call   0x140055df0
   14003ada5:	mov    rbx,rax
   14003ada8:	mov    QWORD PTR [rsp+0x68],rax
   14003adad:	lea    rcx,[rbp-0x70]
   14003adb1:	call   0x140041bcc
   14003adb6:	nop
   14003adb7:	mov    r9,QWORD PTR [r14+0x58]
   14003adbb:	mov    r8d,DWORD PTR [r14+0x4c]
   14003adbf:	mov    edx,DWORD PTR [r14+0x48]
   14003adc3:	lea    rcx,[rbp-0x70]
   14003adc7:	call   0x140041c3c
   14003adcc:	test   al,al
   14003adce:	jne    0x14003ade6
   14003add0:	mov    rcx,QWORD PTR [r14+0x58]
   14003add4:	call   0x140055de8
   14003add9:	mov    rcx,rbx
   14003addc:	call   0x140055de8
   14003ade1:	jmp    0x14003b024
   14003ade6:	mov    rcx,QWORD PTR [r14+0x40]
   14003adea:	add    rcx,0x10
   14003adee:	call   0x140055df0
   14003adf3:	mov    QWORD PTR [r14+0x20],rax
   14003adf7:	mov    r15,rax
   14003adfa:	not    r15
   14003adfd:	inc    r15
   14003ae00:	and    r15d,0xf
   14003ae04:	add    r15,rax
   14003ae07:	mov    QWORD PTR [rbp-0x80],r15
   14003ae0b:	call   0x140046bb4
   14003ae10:	mov    r13d,esi
   14003ae13:	mov    r12d,esi
   14003ae16:	mov    ebx,DWORD PTR [r14+0x48]
   14003ae1a:	test   ebx,ebx
   14003ae1c:	je     0x14003afa3
   14003ae22:	mov    rax,QWORD PTR [rsp+0x58]
   14003ae27:	sub    rax,rdi
   14003ae2a:	mov    QWORD PTR [rsp+0x50],rax
   14003ae2f:	mov    edx,r12d
   14003ae32:	mov    rcx,QWORD PTR [r14+0x58]
   14003ae36:	mov    eax,r12d
   14003ae39:	cmp    BYTE PTR [rax+rcx*1],sil
   14003ae3d:	jne    0x14003ae53
   14003ae3f:	mov    eax,ebx
   14003ae41:	cmp    BYTE PTR [rax+rcx*1],sil
   14003ae45:	jne    0x14003ae4f
   14003ae47:	inc    ebx
   14003ae49:	cmp    BYTE PTR [rbx+rcx*1],sil
   14003ae4d:	je     0x14003ae47
   14003ae4f:	mov    edx,ebx
   14003ae51:	inc    ebx
   14003ae53:	mov    eax,edx
   14003ae55:	imul   rdx,rax,0x1020
   14003ae5c:	add    rdx,QWORD PTR [r14]
   14003ae5f:	mov    edi,esi
   14003ae61:	mov    rcx,QWORD PTR [rdx]
   14003ae64:	test   rcx,rcx
   14003ae67:	je     0x14003ae81
   14003ae69:	cmp    BYTE PTR [rdx+0x1018],sil
   14003ae70:	jne    0x14003ae81
   14003ae72:	mov    rax,QWORD PTR [rcx]
   14003ae75:	mov    r8,QWORD PTR [r14+0x40]
   14003ae79:	mov    rdx,r15
   14003ae7c:	call   QWORD PTR [rax+0x10]
   14003ae7f:	mov    edi,eax
   14003ae81:	movsxd rax,edi
   14003ae84:	mov    r8,QWORD PTR [r14+0x40]
   14003ae88:	cmp    rax,r8
   14003ae8b:	je     0x14003ae9b
   14003ae8d:	sub    r8,rax
   14003ae90:	lea    rcx,[r15+rax*1]
   14003ae94:	xor    edx,edx
   14003ae96:	call   0x140058f40
   14003ae9b:	cmp    edi,r13d
   14003ae9e:	cmovg  r13d,edi
   14003aea2:	mov    rax,QWORD PTR [rsp+0x50]
   14003aea7:	mov    rdi,QWORD PTR [rsp+0x60]
   14003aeac:	cmp    QWORD PTR [r14+0x40],rax
   14003aeb0:	jae    0x14003aeb8
   14003aeb2:	mov    eax,DWORD PTR [r14+0x40]
   14003aeb6:	jmp    0x14003aebe
   14003aeb8:	mov    eax,DWORD PTR [rsp+0x58]
   14003aebc:	sub    eax,edi
   14003aebe:	mov    BYTE PTR [rsp+0x28],sil
   14003aec3:	mov    DWORD PTR [rsp+0x20],eax
   14003aec7:	mov    r9,r15
   14003aeca:	mov    r8d,r12d
   14003aecd:	mov    rdx,QWORD PTR [rsp+0x48]
   14003aed2:	mov    rcx,r14
   14003aed5:	call   0x140038e70
   14003aeda:	inc    r12d
   14003aedd:	cmp    r12d,DWORD PTR [r14+0x48]
   14003aee1:	jb     0x14003ae2f
   14003aee7:	test   r13d,r13d
   14003aeea:	je     0x14003afa3
   14003aef0:	mov    r12d,esi
   14003aef3:	cmp    DWORD PTR [r14+0x48],esi
   14003aef7:	jbe    0x14003af57
   14003aef9:	mov    r15d,esi
   14003aefc:	mov    ecx,r12d
   14003aeff:	mov    rax,QWORD PTR [r14+0x58]
   14003af03:	cmp    BYTE PTR [rcx+rax*1],sil
   14003af07:	jne    0x14003af45
   14003af09:	imul   rdi,rcx,0x1020
   14003af10:	add    rdi,QWORD PTR [r14]
   14003af13:	movsxd rax,r13d
   14003af16:	mov    rbx,QWORD PTR [rdi+0x1010]
   14003af1d:	cmp    rax,rbx
   14003af20:	cmovb  rbx,rax
   14003af24:	mov    edx,r15d
   14003af27:	imul   rdx,QWORD PTR [r14+0x40]
   14003af2c:	add    rdx,QWORD PTR [r14+0x38]
   14003af30:	mov    r8,rbx
   14003af33:	mov    rcx,QWORD PTR [rdi]
   14003af36:	call   0x1400212ac
   14003af3b:	inc    r15d
   14003af3e:	sub    QWORD PTR [rdi+0x1010],rbx
   14003af45:	inc    r12d
   14003af48:	cmp    r12d,DWORD PTR [r14+0x48]
   14003af4c:	jb     0x14003aefc
   14003af4e:	mov    r15,QWORD PTR [rbp-0x80]
   14003af52:	mov    rdi,QWORD PTR [rsp+0x60]
   14003af57:	mov    r12,QWORD PTR [rsp+0x70]
   14003af5c:	mov    rdx,r12
   14003af5f:	mov    rcx,rdi
   14003af62:	call   0x14004596c
   14003af67:	mov    ebx,eax
   14003af69:	mov    rax,QWORD PTR [rsp+0x48]
   14003af6e:	cmp    BYTE PTR [rax+0x6150],sil
   14003af75:	jne    0x14003af93
   14003af77:	cmp    ebx,DWORD PTR [rsp+0x78]
   14003af7b:	je     0x14003af93
   14003af7d:	mov    r8,r12
   14003af80:	mov    rdx,rdi
   14003af83:	lea    rcx,[rip+0x34d02]        # 0x14006fc8c
   14003af8a:	call   0x140048840
   14003af8f:	mov    DWORD PTR [rsp+0x78],ebx
   14003af93:	movsxd rax,r13d
   14003af96:	add    rdi,rax
   14003af99:	mov    QWORD PTR [rsp+0x60],rdi
   14003af9e:	jmp    0x14003ae0b
   14003afa3:	mov    ebx,esi
   14003afa5:	cmp    DWORD PTR [r14+0x50],esi
   14003afa9:	jbe    0x14003afcd
   14003afab:	mov    eax,ebx
   14003afad:	imul   rcx,rax,0x1020
   14003afb4:	mov    rax,QWORD PTR [r14]
   14003afb7:	mov    rcx,QWORD PTR [rcx+rax*1]
   14003afbb:	test   rcx,rcx
   14003afbe:	je     0x14003afc5
   14003afc0:	call   0x1400207cc
   14003afc5:	inc    ebx
   14003afc7:	cmp    ebx,DWORD PTR [r14+0x50]
   14003afcb:	jb     0x14003afab
   14003afcd:	mov    rcx,QWORD PTR [r14+0x58]
   14003afd1:	call   0x140055de8
   14003afd6:	mov    rcx,QWORD PTR [rsp+0x68]
   14003afdb:	call   0x140055de8
   14003afe0:	mov    rax,QWORD PTR [rsp+0x48]
   14003afe5:	cmp    BYTE PTR [rax+0x6150],sil
   14003afec:	jne    0x14003afff
   14003afee:	lea    rcx,[rip+0x34ce3]        # 0x14006fcd8
   14003aff5:	call   0x14001796c
   14003affa:	mov    rax,QWORD PTR [rsp+0x48]
   14003afff:	cmp    BYTE PTR [rsp+0x41],sil
   14003b004:	jne    0x14003b021
   14003b006:	cmp    BYTE PTR [rax+0x6152],sil
   14003b00d:	jne    0x14003b021
   14003b00f:	mov    ecx,0xd22
   14003b014:	call   0x140040118
   14003b019:	mov    rcx,rax
   14003b01c:	call   0x14001796c
   14003b021:	mov    sil,0x1
   14003b024:	lea    rcx,[rbp-0x70]
   14003b028:	call   0x140041c00
   14003b02d:	nop
   14003b02e:	lea    rcx,[rbp+0x1090]
   14003b035:	call   0x140023264
   14003b03a:	mov    al,sil
   14003b03d:	mov    rcx,QWORD PTR [rbp+0x50a0]
   14003b044:	xor    rcx,rsp
   14003b047:	call   0x140055f90
   14003b04c:	mov    rbx,QWORD PTR [rsp+0x5208]
   14003b054:	add    rsp,0x51b0
   14003b05b:	pop    r15
   14003b05d:	pop    r14
   14003b05f:	pop    r13
   14003b061:	pop    r12
   14003b063:	pop    rdi
   14003b064:	pop    rsi
   14003b065:	pop    rbp
   14003b066:	ret    
   14003b067:	int3   
   14003b068:	rex push rbp
   14003b06a:	push   rdi
   14003b06b:	push   r14
   14003b06d:	lea    rbp,[rsp-0x1f80]
   14003b075:	mov    eax,0x2080
   14003b07a:	call   0x140055f20
   14003b07f:	sub    rsp,rax
   14003b082:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   14003b08b:	mov    QWORD PTR [rsp+0x20a0],rbx
   14003b093:	mov    QWORD PTR [rsp+0x20b8],rsi
   14003b09b:	mov    rax,QWORD PTR [rip+0x46e3e]        # 0x140081ee0
   14003b0a2:	xor    rax,rsp
   14003b0a5:	mov    QWORD PTR [rbp+0x1f70],rax
   14003b0ac:	mov    rbx,r8
   14003b0af:	mov    r14,rdx
   14003b0b2:	mov    rcx,r8
   14003b0b5:	call   0x140037f90
   14003b0ba:	mov    rdx,rbx
   14003b0bd:	test   al,al
   14003b0bf:	jne    0x14003b0d5
   14003b0c1:	mov    r8,rbx
   14003b0c4:	lea    rcx,[rip+0x59795]        # 0x140094860
   14003b0cb:	call   0x14001c0c0
   14003b0d0:	jmp    0x14003b276
   14003b0d5:	mov    r8d,0x800
   14003b0db:	lea    rcx,[rbp+0xf70]
   14003b0e2:	call   0x140046158
   14003b0e7:	jmp    0x14003b256
   14003b0ec:	lea    rcx,[rsp+0x40]
   14003b0f1:	call   0x14002071c
   14003b0f6:	nop
   14003b0f7:	xor    r8d,r8d
   14003b0fa:	lea    rdx,[rbp+0xf70]
   14003b101:	lea    rcx,[rsp+0x40]
   14003b106:	call   0x140020c80
   14003b10b:	test   al,al
   14003b10d:	jne    0x14003b127
   14003b10f:	lea    rdx,[rbp+0xf70]
   14003b116:	lea    rcx,[rip+0x59743]        # 0x140094860
   14003b11d:	call   0x14001bdf8
   14003b122:	jmp    0x14003b24c
   14003b127:	xor    r9d,r9d
   14003b12a:	mov    r8b,0x1
   14003b12d:	xor    edx,edx
   14003b12f:	lea    rcx,[rbp+0xf70]
   14003b136:	call   0x140060460
   14003b13b:	test   al,al
   14003b13d:	je     0x14003b26c
   14003b143:	mov    ecx,0xd64
   14003b148:	call   0x140040118
   14003b14d:	mov    rcx,rax
   14003b150:	lea    rdx,[rbp+0xf70]
   14003b157:	call   0x14001796c
   14003b15c:	lea    rcx,[rip+0x34d65]        # 0x14006fec8
   14003b163:	call   0x14001796c
   14003b168:	xor    edx,edx
   14003b16a:	lea    r8d,[rdx+0x2]
   14003b16e:	lea    rcx,[rsp+0x40]
   14003b173:	call   0x140021048
   14003b178:	lea    rcx,[rsp+0x40]
   14003b17d:	call   0x1400211a0
   14003b182:	lea    rsi,[rax-0x4]
   14003b186:	xor    r8d,r8d
   14003b189:	mov    rdx,rsi
   14003b18c:	lea    rcx,[rsp+0x40]
   14003b191:	call   0x140021048
   14003b196:	xor    edi,edi
   14003b198:	xor    ebx,ebx
   14003b19a:	lea    rcx,[rsp+0x40]
   14003b19f:	call   0x140020c04
   14003b1a4:	movzx  eax,al
   14003b1a7:	mov    ecx,ebx
   14003b1a9:	shl    eax,cl
   14003b1ab:	or     edi,eax
   14003b1ad:	add    ebx,0x8
   14003b1b0:	cmp    ebx,0x20
   14003b1b3:	jl     0x14003b19a
   14003b1b5:	mov    al,BYTE PTR [r14+0x6150]
   14003b1bc:	neg    al
   14003b1be:	sbb    ecx,ecx
   14003b1c0:	not    ecx
   14003b1c2:	and    ecx,0x4
   14003b1c5:	mov    DWORD PTR [rsp+0x28],ecx
   14003b1c9:	mov    QWORD PTR [rsp+0x20],rsi
   14003b1ce:	mov    r9d,0x1
   14003b1d4:	xor    r8d,r8d
   14003b1d7:	lea    rdx,[rsp+0x30]
   14003b1dc:	lea    rcx,[rsp+0x40]
   14003b1e1:	call   0x140021500
   14003b1e6:	cmp    edi,DWORD PTR [rsp+0x30]
   14003b1ea:	jne    0x14003b20e
   14003b1ec:	mov    ecx,0xd20
   14003b1f1:	call   0x140040118
   14003b1f6:	mov    r8,rax
   14003b1f9:	lea    rdx,[rip+0x34cd8]        # 0x14006fed8
   14003b200:	lea    rcx,[rip+0x34ce1]        # 0x14006fee8
   14003b207:	call   0x14001796c
   14003b20c:	jmp    0x14003b237
   14003b20e:	lea    r8,[rbp+0xf70]
   14003b215:	lea    rdx,[rbp+0xf70]
   14003b21c:	mov    ecx,0x3
   14003b221:	call   0x140001358
   14003b226:	mov    edx,0x3
   14003b22b:	lea    rcx,[rip+0x5962e]        # 0x140094860
   14003b232:	call   0x14001bf08
   14003b237:	xor    r8d,r8d
   14003b23a:	mov    edx,0x800
   14003b23f:	lea    rcx,[rbp+0xf70]
   14003b246:	call   0x14003259c
   14003b24b:	nop
   14003b24c:	lea    rcx,[rsp+0x40]
   14003b251:	call   0x140020758
   14003b256:	lea    rcx,[rbp+0xf70]
   14003b25d:	call   0x140021dec
   14003b262:	test   al,al
   14003b264:	jne    0x14003b0ec
   14003b26a:	jmp    0x14003b276
   14003b26c:	lea    rcx,[rsp+0x40]
   14003b271:	call   0x140020758
   14003b276:	mov    rcx,QWORD PTR [rbp+0x1f70]
   14003b27d:	xor    rcx,rsp
   14003b280:	call   0x140055f90
   14003b285:	lea    r11,[rsp+0x2080]
   14003b28d:	mov    rbx,QWORD PTR [r11+0x20]
   14003b291:	mov    rsi,QWORD PTR [r11+0x38]
   14003b295:	mov    rsp,r11
   14003b298:	pop    r14
   14003b29a:	pop    rdi
   14003b29b:	pop    rbp
   14003b29c:	ret    
   14003b29d:	int3   
   14003b29e:	int3   
   14003b29f:	int3   
   14003b2a0:	rex push rbp
   14003b2a2:	push   rbx
   14003b2a3:	push   rsi
   14003b2a4:	push   rdi
   14003b2a5:	push   r14
   14003b2a7:	lea    rbp,[rsp-0x1f80]
   14003b2af:	mov    eax,0x2080
   14003b2b4:	call   0x140055f20
   14003b2b9:	sub    rsp,rax
   14003b2bc:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   14003b2c5:	mov    rax,QWORD PTR [rip+0x46c14]        # 0x140081ee0
   14003b2cc:	xor    rax,rsp
   14003b2cf:	mov    QWORD PTR [rbp+0x1f70],rax
   14003b2d6:	mov    rax,r8
   14003b2d9:	mov    r14,rdx
   14003b2dc:	mov    rsi,rcx
   14003b2df:	mov    r8d,0x800
   14003b2e5:	mov    rdx,rax
   14003b2e8:	lea    rcx,[rbp+0xf70]
   14003b2ef:	call   0x140046158
   14003b2f4:	xor    edi,edi
   14003b2f6:	jmp    0x14003b456
   14003b2fb:	lea    rcx,[rsp+0x40]
   14003b300:	call   0x14002071c
   14003b305:	nop
   14003b306:	xor    r8d,r8d
   14003b309:	lea    rdx,[rbp+0xf70]
   14003b310:	lea    rcx,[rsp+0x40]
   14003b315:	call   0x140020c80
   14003b31a:	test   al,al
   14003b31c:	jne    0x14003b336
   14003b31e:	lea    rdx,[rbp+0xf70]
   14003b325:	lea    rcx,[rip+0x59534]        # 0x140094860
   14003b32c:	call   0x14001bdf8
   14003b331:	jmp    0x14003b44c
   14003b336:	xor    r9d,r9d
   14003b339:	mov    r8b,0x1
   14003b33c:	xor    edx,edx
   14003b33e:	lea    rcx,[rbp+0xf70]
   14003b345:	call   0x140060460
   14003b34a:	test   al,al
   14003b34c:	je     0x14003b46c
   14003b352:	mov    ecx,0xd64
   14003b357:	call   0x140040118
   14003b35c:	mov    rcx,rax
   14003b35f:	lea    rdx,[rbp+0xf70]
   14003b366:	call   0x14001796c
   14003b36b:	lea    rcx,[rip+0x3498e]        # 0x14006fd00
   14003b372:	call   0x14001796c
   14003b377:	test   edi,edi
   14003b379:	sete   r8b
   14003b37d:	lea    rdx,[rsp+0x40]
   14003b382:	mov    rcx,rsi
   14003b385:	call   0x1400390a8
   14003b38a:	mov    ebx,eax
   14003b38c:	test   eax,eax
   14003b38e:	je     0x14003b40e
   14003b390:	inc    edi
   14003b392:	mov    cl,BYTE PTR [r14+0x6150]
   14003b399:	neg    cl
   14003b39b:	sbb    edx,edx
   14003b39d:	not    edx
   14003b39f:	and    edx,0x4
   14003b3a2:	or     edx,0x8
   14003b3a5:	mov    DWORD PTR [rsp+0x28],edx
   14003b3a9:	movabs rax,0x7fffffff7fffffff
   14003b3b3:	mov    QWORD PTR [rsp+0x20],rax
   14003b3b8:	mov    r9d,0x1
   14003b3be:	xor    r8d,r8d
   14003b3c1:	lea    rdx,[rsp+0x30]
   14003b3c6:	lea    rcx,[rsp+0x40]
   14003b3cb:	call   0x140021500
   14003b3d0:	imul   rcx,rbx,0x1020
   14003b3d7:	mov    rax,QWORD PTR [rsi]
   14003b3da:	mov    ecx,DWORD PTR [rcx+rax*1+0x1008]
   14003b3e1:	cmp    DWORD PTR [rsp+0x30],ecx
   14003b3e5:	sete   al
   14003b3e8:	test   al,al
   14003b3ea:	je     0x14003b40e
   14003b3ec:	mov    ecx,0xd20
   14003b3f1:	call   0x140040118
   14003b3f6:	mov    r8,rax
   14003b3f9:	lea    rdx,[rip+0x34910]        # 0x14006fd10
   14003b400:	lea    rcx,[rip+0x34919]        # 0x14006fd20
   14003b407:	call   0x14001796c
   14003b40c:	jmp    0x14003b437
   14003b40e:	lea    r8,[rbp+0xf70]
   14003b415:	lea    rdx,[rbp+0xf70]
   14003b41c:	mov    ecx,0x3
   14003b421:	call   0x140001358
   14003b426:	mov    edx,0x3
   14003b42b:	lea    rcx,[rip+0x5942e]        # 0x140094860
   14003b432:	call   0x14001bf08
   14003b437:	xor    r8d,r8d
   14003b43a:	mov    edx,0x800
   14003b43f:	lea    rcx,[rbp+0xf70]
   14003b446:	call   0x14003259c
   14003b44b:	nop
   14003b44c:	lea    rcx,[rsp+0x40]
   14003b451:	call   0x140020758
   14003b456:	lea    rcx,[rbp+0xf70]
   14003b45d:	call   0x140021dec
   14003b462:	test   al,al
   14003b464:	jne    0x14003b2fb
   14003b46a:	jmp    0x14003b476
   14003b46c:	lea    rcx,[rsp+0x40]
   14003b471:	call   0x140020758
   14003b476:	mov    rcx,QWORD PTR [rbp+0x1f70]
   14003b47d:	xor    rcx,rsp
   14003b480:	call   0x140055f90
   14003b485:	add    rsp,0x2080
   14003b48c:	pop    r14
   14003b48e:	pop    rdi
   14003b48f:	pop    rsi
   14003b490:	pop    rbx
   14003b491:	pop    rbp
   14003b492:	ret    
   14003b493:	int3   
   14003b494:	mov    rax,rsp
   14003b497:	push   rbp
   14003b498:	mov    rbp,rsp
   14003b49b:	sub    rsp,0x60
   14003b49f:	mov    QWORD PTR [rbp-0x40],0xfffffffffffffffe
   14003b4a7:	mov    QWORD PTR [rax+0x8],rbx
   14003b4ab:	mov    QWORD PTR [rax+0x10],rsi
   14003b4af:	mov    QWORD PTR [rax+0x18],rdi
   14003b4b3:	mov    QWORD PTR [rax+0x20],r14
   14003b4b7:	mov    sil,r9b
   14003b4ba:	mov    ebx,r8d
   14003b4bd:	mov    r14,rdx
   14003b4c0:	mov    rdi,rcx
   14003b4c3:	mov    r8d,0x8
   14003b4c9:	lea    rdx,[rip+0x347c0]        # 0x14006fc90
   14003b4d0:	mov    rcx,r14
   14003b4d3:	call   0x1400212ac
   14003b4d8:	lea    rcx,[rbp-0x38]
   14003b4dc:	call   0x140036890
   14003b4e1:	nop
   14003b4e2:	xor    edx,edx
   14003b4e4:	lea    rcx,[rbp-0x38]
   14003b4e8:	call   0x1400369f8
   14003b4ed:	xor    edx,edx
   14003b4ef:	lea    rcx,[rbp-0x38]
   14003b4f3:	call   0x1400369f8
   14003b4f8:	mov    edx,0x1
   14003b4fd:	lea    rcx,[rbp-0x38]
   14003b501:	call   0x140036970
   14003b506:	mov    edx,DWORD PTR [rdi+0x48]
   14003b509:	lea    rcx,[rbp-0x38]
   14003b50d:	call   0x1400369a8
   14003b512:	mov    edx,DWORD PTR [rdi+0x4c]
   14003b515:	lea    rcx,[rbp-0x38]
   14003b519:	call   0x1400369a8
   14003b51e:	mov    edx,ebx
   14003b520:	lea    rcx,[rbp-0x38]
   14003b524:	call   0x1400369a8
   14003b529:	test   sil,sil
   14003b52c:	je     0x14003b541
   14003b52e:	imul   rcx,rbx,0x1020
   14003b535:	mov    rax,QWORD PTR [rdi]
   14003b538:	mov    edx,DWORD PTR [rcx+rax*1+0x1008]
   14003b53f:	jmp    0x14003b543
   14003b541:	xor    edx,edx
   14003b543:	not    edx
   14003b545:	lea    rcx,[rbp-0x38]
   14003b549:	call   0x1400369f8
   14003b54e:	xor    ebx,ebx
   14003b550:	cmp    DWORD PTR [rdi+0x48],ebx
   14003b553:	jbe    0x14003b5a9
   14003b555:	test   sil,sil
   14003b558:	je     0x14003b570
   14003b55a:	mov    eax,ebx
   14003b55c:	imul   rcx,rax,0x1020
   14003b563:	mov    rax,QWORD PTR [rdi]
   14003b566:	mov    rdx,QWORD PTR [rcx+rax*1+0x1010]
   14003b56e:	jmp    0x14003b572
   14003b570:	xor    edx,edx
   14003b572:	lea    rcx,[rbp-0x38]
   14003b576:	call   0x140036a7c
   14003b57b:	test   sil,sil
   14003b57e:	je     0x14003b595
   14003b580:	mov    eax,ebx
   14003b582:	imul   rcx,rax,0x1020
   14003b589:	mov    rax,QWORD PTR [rdi]
   14003b58c:	mov    edx,DWORD PTR [rcx+rax*1+0x1008]
   14003b593:	jmp    0x14003b597
   14003b595:	xor    edx,edx
   14003b597:	not    edx
   14003b599:	lea    rcx,[rbp-0x38]
   14003b59d:	call   0x1400369f8
   14003b5a2:	inc    ebx
   14003b5a4:	cmp    ebx,DWORD PTR [rdi+0x48]
   14003b5a7:	jb     0x14003b555
   14003b5a9:	xor    edx,edx
   14003b5ab:	lea    rcx,[rbp-0x38]
   14003b5af:	call   0x140036bc0
   14003b5b4:	mov    rbx,rax
   14003b5b7:	mov    ecx,eax
   14003b5b9:	call   0x140055df0
   14003b5be:	mov    rdi,rax
   14003b5c1:	mov    r8d,ebx
   14003b5c4:	mov    rdx,rax
   14003b5c7:	lea    rcx,[rbp-0x38]
   14003b5cb:	call   0x140036934
   14003b5d0:	lea    rdx,[rdi+0x4]
   14003b5d4:	lea    ecx,[rbx-0x8]
   14003b5d7:	mov    DWORD PTR [rdx],ecx
   14003b5d9:	lea    r8d,[rbx-0x4]
   14003b5dd:	or     ecx,0xffffffff
   14003b5e0:	call   0x140017ac0
   14003b5e5:	not    eax
   14003b5e7:	mov    DWORD PTR [rdi],eax
   14003b5e9:	mov    r8d,ebx
   14003b5ec:	mov    rdx,rdi
   14003b5ef:	mov    rcx,r14
   14003b5f2:	call   0x1400212ac
   14003b5f7:	nop
   14003b5f8:	mov    rcx,QWORD PTR [rbp-0x38]
   14003b5fc:	test   rcx,rcx
   14003b5ff:	je     0x14003b606
   14003b601:	call   0x14005a938
   14003b606:	lea    r11,[rsp+0x60]
   14003b60b:	mov    rbx,QWORD PTR [r11+0x10]
   14003b60f:	mov    rsi,QWORD PTR [r11+0x18]
   14003b613:	mov    rdi,QWORD PTR [r11+0x20]
   14003b617:	mov    r14,QWORD PTR [r11+0x28]
   14003b61b:	mov    rsp,r11
   14003b61e:	pop    rbp
   14003b61f:	ret    
   14003b620:	mov    r11,rsp
   14003b623:	sub    rsp,0xa8
   14003b62a:	mov    rax,QWORD PTR [rip+0x468af]        # 0x140081ee0
   14003b631:	xor    rax,rsp
   14003b634:	mov    QWORD PTR [rsp+0x90],rax
   14003b63c:	and    DWORD PTR [r11-0x28],0x0
   14003b641:	mov    DWORD PTR [r11-0x20],ecx
   14003b645:	lea    rcx,[rsp+0x20]
   14003b64a:	mov    DWORD PTR [rsp+0x60],edx
   14003b64e:	mov    DWORD PTR [r11-0x44],r8d
   14003b652:	mov    DWORD PTR [r11-0x40],r9d
   14003b656:	mov    DWORD PTR [r11-0x24],0x3
   14003b65e:	call   0x1400479a4
   14003b663:	mov    rcx,QWORD PTR [rsp+0x90]
   14003b66b:	xor    rcx,rsp
   14003b66e:	call   0x140055f90
   14003b673:	add    rsp,0xa8
   14003b67a:	ret    
   14003b67b:	int3   
   14003b67c:	and    QWORD PTR [rcx+0x40],0x0
   14003b681:	mov    rax,rcx
   14003b684:	and    QWORD PTR [rcx+0x28],0x0
   14003b689:	ret    
   14003b68a:	int3   
   14003b68b:	int3   
   14003b68c:	mov    rax,rsp
   14003b68f:	mov    QWORD PTR [rax+0x8],rcx
   14003b693:	push   rdi
   14003b694:	sub    rsp,0x30
   14003b698:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14003b6a0:	mov    QWORD PTR [rax+0x10],rbx
   14003b6a4:	mov    QWORD PTR [rax+0x18],rsi
   14003b6a8:	mov    rdi,r8
   14003b6ab:	mov    rbx,rdx
   14003b6ae:	mov    rsi,rcx
   14003b6b1:	and    QWORD PTR [rcx],0x0
   14003b6b5:	and    QWORD PTR [rcx+0x8],0x0
   14003b6ba:	and    QWORD PTR [rcx+0x10],0x0
   14003b6bf:	and    QWORD PTR [rcx+0x18],0x0
   14003b6c4:	add    rcx,0x30
   14003b6c8:	call   0x140041bcc
   14003b6cd:	mov    QWORD PTR [rsi+0x20],rbx
   14003b6d1:	mov    QWORD PTR [rsi+0x28],rdi
   14003b6d5:	and    QWORD PTR [rsi+0x10070],0x0
   14003b6dd:	and    QWORD PTR [rsi+0x10078],0x0
   14003b6e5:	mov    rax,rsi
   14003b6e8:	mov    rbx,QWORD PTR [rsp+0x48]
   14003b6ed:	mov    rsi,QWORD PTR [rsp+0x50]
   14003b6f2:	add    rsp,0x30
   14003b6f6:	pop    rdi
   14003b6f7:	ret    
   14003b6f8:	rex push rbx
   14003b6fa:	sub    rsp,0x20
   14003b6fe:	mov    rbx,rcx
   14003b701:	mov    rcx,QWORD PTR [rcx+0x28]
   14003b705:	call   0x140055de8
   14003b70a:	mov    rcx,QWORD PTR [rbx+0x40]
   14003b70e:	add    rsp,0x20
   14003b712:	pop    rbx
   14003b713:	jmp    0x140055de8
   14003b718:	rex push rdi
   14003b71a:	sub    rsp,0x30
   14003b71e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14003b727:	mov    QWORD PTR [rsp+0x40],rbx
   14003b72c:	mov    rdi,rcx
   14003b72f:	mov    rcx,QWORD PTR [rcx+0x10070]
   14003b736:	test   rcx,rcx
   14003b739:	je     0x14003b765
   14003b73b:	lea    rbx,[rcx-0x8]
   14003b73f:	lea    r9,[rip+0xffffffffffffffb2]        # 0x14003b6f8
   14003b746:	mov    r8,QWORD PTR [rbx]
   14003b749:	mov    edx,0x68
   14003b74e:	call   0x140055cdc
   14003b753:	nop
   14003b754:	imul   rdx,QWORD PTR [rbx],0x68
   14003b758:	add    rdx,0x8
   14003b75c:	mov    rcx,rbx
   14003b75f:	call   0x140055df8
   14003b764:	nop
   14003b765:	mov    rcx,QWORD PTR [rdi+0x10078]
   14003b76c:	call   0x140055de8
   14003b771:	nop
   14003b772:	lea    rcx,[rdi+0x30]
   14003b776:	call   0x140041c00
   14003b77b:	nop
   14003b77c:	mov    rcx,QWORD PTR [rdi]
   14003b77f:	test   rcx,rcx
   14003b782:	je     0x14003b78a
   14003b784:	call   0x14005a938
   14003b789:	nop
   14003b78a:	mov    rbx,QWORD PTR [rsp+0x40]
   14003b78f:	add    rsp,0x30
   14003b793:	pop    rdi
   14003b794:	ret    
   14003b795:	int3   
   14003b796:	int3   
   14003b797:	int3   
   14003b798:	mov    QWORD PTR [rsp+0x8],rbx
   14003b79d:	mov    QWORD PTR [rsp+0x10],rsi
   14003b7a2:	push   rdi
   14003b7a3:	sub    rsp,0x20
   14003b7a7:	add    QWORD PTR [rcx+0x8],rdx
   14003b7ab:	mov    rbx,rcx
   14003b7ae:	mov    rax,QWORD PTR [rcx+0x8]
   14003b7b2:	cmp    rax,QWORD PTR [rcx+0x10]
   14003b7b6:	jbe    0x14003b82a
   14003b7b8:	mov    r8,QWORD PTR [rcx+0x18]
   14003b7bc:	test   r8,r8
   14003b7bf:	je     0x14003b7e5
   14003b7c1:	cmp    rax,r8
   14003b7c4:	jbe    0x14003b7e5
   14003b7c6:	lea    rdx,[rip+0x34b13]        # 0x1400702e0
   14003b7cd:	lea    rcx,[rip+0x5908c]        # 0x140094860
   14003b7d4:	call   0x14001bc8c
   14003b7d9:	lea    rcx,[rip+0x59080]        # 0x140094860
   14003b7e0:	call   0x14001bd24
   14003b7e5:	mov    rdx,QWORD PTR [rbx+0x10]
   14003b7e9:	mov    rcx,QWORD PTR [rbx]
   14003b7ec:	mov    rax,rdx
   14003b7ef:	shr    rax,0x2
   14003b7f3:	lea    rdi,[rdx+0x20]
   14003b7f7:	add    rdi,rax
   14003b7fa:	cmp    QWORD PTR [rbx+0x8],rdi
   14003b7fe:	cmova  rdi,QWORD PTR [rbx+0x8]
   14003b803:	mov    rdx,rdi
   14003b806:	shl    rdx,0x2
   14003b80a:	call   0x14005a940
   14003b80f:	mov    rsi,rax
   14003b812:	test   rax,rax
   14003b815:	jne    0x14003b823
   14003b817:	lea    rcx,[rip+0x59042]        # 0x140094860
   14003b81e:	call   0x14001bd24
   14003b823:	mov    QWORD PTR [rbx],rsi
   14003b826:	mov    QWORD PTR [rbx+0x10],rdi
   14003b82a:	mov    rbx,QWORD PTR [rsp+0x30]
   14003b82f:	mov    rsi,QWORD PTR [rsp+0x38]
   14003b834:	add    rsp,0x20
   14003b838:	pop    rdi
   14003b839:	ret    
   14003b83a:	int3   
   14003b83b:	int3   
   14003b83c:	mov    QWORD PTR [rsp+0x8],rbx
   14003b841:	mov    QWORD PTR [rsp+0x10],rsi
   14003b846:	push   rdi
   14003b847:	sub    rsp,0x20
   14003b84b:	add    QWORD PTR [rcx+0x8],rdx
   14003b84f:	mov    rbx,rcx
   14003b852:	mov    rax,QWORD PTR [rcx+0x8]
   14003b856:	cmp    rax,QWORD PTR [rcx+0x10]
   14003b85a:	jbe    0x14003b8cf
   14003b85c:	mov    r8,QWORD PTR [rcx+0x18]
   14003b860:	test   r8,r8
   14003b863:	je     0x14003b889
   14003b865:	cmp    rax,r8
   14003b868:	jbe    0x14003b889
   14003b86a:	lea    rdx,[rip+0x34acf]        # 0x140070340
   14003b871:	lea    rcx,[rip+0x58fe8]        # 0x140094860
   14003b878:	call   0x14001bc8c
   14003b87d:	lea    rcx,[rip+0x58fdc]        # 0x140094860
   14003b884:	call   0x14001bd24
   14003b889:	mov    rcx,QWORD PTR [rbx+0x10]
   14003b88d:	mov    rax,rcx
   14003b890:	shr    rax,0x2
   14003b894:	lea    rdi,[rcx+0x20]
   14003b898:	mov    rcx,QWORD PTR [rbx]
   14003b89b:	add    rdi,rax
   14003b89e:	cmp    QWORD PTR [rbx+0x8],rdi
   14003b8a2:	cmova  rdi,QWORD PTR [rbx+0x8]
   14003b8a7:	lea    rdx,[rdi+rdi*2]
   14003b8ab:	shl    rdx,0x3
   14003b8af:	call   0x14005a940
   14003b8b4:	mov    rsi,rax
   14003b8b7:	test   rax,rax
   14003b8ba:	jne    0x14003b8c8
   14003b8bc:	lea    rcx,[rip+0x58f9d]        # 0x140094860
   14003b8c3:	call   0x14001bd24
   14003b8c8:	mov    QWORD PTR [rbx],rsi
   14003b8cb:	mov    QWORD PTR [rbx+0x10],rdi
   14003b8cf:	mov    rbx,QWORD PTR [rsp+0x30]
   14003b8d4:	mov    rsi,QWORD PTR [rsp+0x38]
   14003b8d9:	add    rsp,0x20
   14003b8dd:	pop    rdi
   14003b8de:	ret    
   14003b8df:	int3   
   14003b8e0:	rex push rbx
   14003b8e2:	mov    eax,0x1030
   14003b8e7:	call   0x140055f20
   14003b8ec:	sub    rsp,rax
   14003b8ef:	mov    rax,QWORD PTR [rip+0x465ea]        # 0x140081ee0
   14003b8f6:	xor    rax,rsp
   14003b8f9:	mov    QWORD PTR [rsp+0x1020],rax
   14003b901:	mov    rbx,rcx
   14003b904:	jmp    0x14003b91f
   14003b906:	call   0x140046bb4
   14003b90b:	lea    rdx,[rsp+0x20]
   14003b910:	mov    rcx,rbx
   14003b913:	call   0x14003b968
   14003b918:	test   al,al
   14003b91a:	je     0x14003b933
   14003b91c:	mov    rcx,rbx
   14003b91f:	mov    r8d,0x800
   14003b925:	lea    rdx,[rsp+0x20]
   14003b92a:	call   0x140013e48
   14003b92f:	test   al,al
   14003b931:	jne    0x14003b906
   14003b933:	cmp    BYTE PTR [rbx+0x6152],0x0
   14003b93a:	jne    0x14003b94e
   14003b93c:	mov    ecx,0xd22
   14003b941:	call   0x140040118
   14003b946:	mov    rcx,rax
   14003b949:	call   0x14001796c
   14003b94e:	mov    rcx,QWORD PTR [rsp+0x1020]
   14003b956:	xor    rcx,rsp
   14003b959:	call   0x140055f90
   14003b95e:	add    rsp,0x1030
   14003b965:	pop    rbx
   14003b966:	ret    
   14003b967:	int3   
   14003b968:	rex push rbp
   14003b96a:	push   rdi
   14003b96b:	push   r13
   14003b96d:	push   r14
   14003b96f:	push   r15
   14003b971:	lea    rbp,[rsp-0x13f30]
   14003b979:	mov    eax,0x14030
   14003b97e:	call   0x140055f20
   14003b983:	sub    rsp,rax
   14003b986:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   14003b98f:	mov    QWORD PTR [rsp+0x14070],rbx
   14003b997:	mov    QWORD PTR [rsp+0x14078],rsi
   14003b99f:	mov    rax,QWORD PTR [rip+0x4653a]        # 0x140081ee0
   14003b9a6:	xor    rax,rsp
   14003b9a9:	mov    QWORD PTR [rbp+0x13f20],rax
   14003b9b0:	mov    r15,rdx
   14003b9b3:	mov    r14,rcx
   14003b9b6:	mov    rdx,rcx
   14003b9b9:	lea    rcx,[rbp+0x8f40]
   14003b9c0:	call   0x140007678
   14003b9c5:	nop
   14003b9c6:	mov    rdx,r14
   14003b9c9:	lea    rcx,[rsp+0x60]
   14003b9ce:	call   0x140007678
   14003b9d3:	nop
   14003b9d4:	mov    rdx,r15
   14003b9d7:	lea    rcx,[rbp+0x8f40]
   14003b9de:	call   0x14002117c
   14003b9e3:	mov    edi,0x1
   14003b9e8:	mov    BYTE PTR [rbp+0x8f59],dil
   14003b9ef:	lea    rbx,[r14+0x201e]
   14003b9f6:	mov    r13d,0x800
   14003b9fc:	mov    r9d,r13d
   14003b9ff:	lea    r8,[rbp+0x12f20]
   14003ba06:	lea    rdx,[rip+0x347ab]        # 0x1400701b8
   14003ba0d:	mov    rcx,rbx
   14003ba10:	call   0x1400322b0
   14003ba15:	mov    rcx,r15
   14003ba18:	call   0x1400327bc
   14003ba1d:	mov    rdx,rax
   14003ba20:	mov    r8d,r13d
   14003ba23:	lea    rcx,[rbp+0x12f20]
   14003ba2a:	call   0x140046120
   14003ba2f:	xor    edx,edx
   14003ba31:	lea    rcx,[rbp+0x12f20]
   14003ba38:	call   0x1400324fc
   14003ba3d:	mov    r9d,r13d
   14003ba40:	lea    r8,[rbp+0x11f20]
   14003ba47:	lea    rdx,[rip+0x3477a]        # 0x1400701c8
   14003ba4e:	mov    rcx,rbx
   14003ba51:	call   0x1400322b0
   14003ba56:	mov    rcx,r15
   14003ba59:	call   0x1400327bc
   14003ba5e:	mov    rdx,rax
   14003ba61:	mov    r8d,r13d
   14003ba64:	lea    rcx,[rbp+0x11f20]
   14003ba6b:	call   0x140046120
   14003ba70:	lea    rdx,[rip+0x34769]        # 0x1400701e0
   14003ba77:	mov    rcx,r15
   14003ba7a:	call   0x140030eb8
   14003ba7f:	test   al,al
   14003ba81:	jne    0x14003ba96
   14003ba83:	lea    rdx,[rip+0x3475e]        # 0x1400701e8
   14003ba8a:	mov    rcx,r15
   14003ba8d:	call   0x140030eb8
   14003ba92:	test   al,al
   14003ba94:	je     0x14003baac
   14003ba96:	mov    r8,r13
   14003ba99:	lea    rdx,[rip+0x34750]        # 0x1400701f0
   14003baa0:	lea    rcx,[rbp+0x11f20]
   14003baa7:	call   0x140032848
   14003baac:	xor    edx,edx
   14003baae:	lea    rcx,[rbp+0x11f20]
   14003bab5:	call   0x1400324fc
   14003baba:	mov    BYTE PTR [rsp+0x38],0x0
   14003babf:	and    QWORD PTR [rsp+0x30],0x0
   14003bac5:	movabs rax,0x7fffffff7fffffff
   14003bacf:	mov    QWORD PTR [rsp+0x28],rax
   14003bad4:	lea    rax,[rsp+0x40]
   14003bad9:	mov    QWORD PTR [rsp+0x20],rax
   14003bade:	mov    r9,r13
   14003bae1:	lea    r8,[rbp+0x12f20]
   14003bae8:	lea    rdx,[rsp+0x60]
   14003baed:	mov    rcx,r14
   14003baf0:	call   0x1400202cc
   14003baf5:	test   al,al
   14003baf7:	jne    0x14003bb26
   14003baf9:	mov    dil,BYTE PTR [rsp+0x40]
   14003bafe:	test   dil,dil
   14003bb01:	jne    0x14003bd93
   14003bb07:	lea    r8,[rbp+0x12f20]
   14003bb0e:	xor    edx,edx
   14003bb10:	lea    rcx,[rip+0x58d49]        # 0x140094860
   14003bb17:	call   0x14001bc28
   14003bb1c:	mov    dil,BYTE PTR [rsp+0x40]
   14003bb21:	jmp    0x14003bd93
   14003bb26:	lea    rdx,[rbp+0x12f20]
   14003bb2d:	mov    ecx,0x5e
   14003bb32:	call   0x1400013b0
   14003bb37:	mov    ecx,0x10118
   14003bb3c:	call   0x140055dac
   14003bb41:	mov    QWORD PTR [rsp+0x50],rax
   14003bb46:	test   rax,rax
   14003bb49:	je     0x14003bb64
   14003bb4b:	lea    r8,[rsp+0x60]
   14003bb50:	lea    rdx,[rbp+0x8f40]
   14003bb57:	mov    rcx,rax
   14003bb5a:	call   0x14003b68c
   14003bb5f:	mov    rsi,rax
   14003bb62:	jmp    0x14003bb66
   14003bb64:	xor    esi,esi
   14003bb66:	mov    dl,dil
   14003bb69:	lea    rcx,[rbp+0x8f40]
   14003bb70:	call   0x140008f4c
   14003bb75:	test   al,al
   14003bb77:	je     0x14003bba9
   14003bb79:	mov    eax,DWORD PTR [rbp+0x10ec8]
   14003bb7f:	mov    DWORD PTR [rbp+0x7ee8],eax
   14003bb85:	cmp    eax,0x2
   14003bb88:	jne    0x14003bb9d
   14003bb8a:	lea    rdx,[rsp+0x60]
   14003bb8f:	lea    rcx,[rbp+0x8f40]
   14003bb96:	call   0x14003e320
   14003bb9b:	jmp    0x14003bba5
   14003bb9d:	mov    rcx,rsi
   14003bba0:	call   0x14003cd60
   14003bba5:	mov    ebx,eax
   14003bba7:	jmp    0x14003bc06
   14003bba9:	mov    r13d,0x3
   14003bbaf:	mov    DWORD PTR [rbp+0x7ee8],r13d
   14003bbb6:	mov    DWORD PTR [rbp+0x10ec8],r13d
   14003bbbd:	mov    rcx,rsi
   14003bbc0:	call   0x14003cd60
   14003bbc5:	mov    ebx,eax
   14003bbc7:	cmp    eax,edi
   14003bbc9:	jne    0x14003bbf2
   14003bbcb:	mov    DWORD PTR [rbp+0x7ee8],0x2
   14003bbd5:	mov    DWORD PTR [rbp+0x10ec8],0x2
   14003bbdf:	lea    rdx,[rsp+0x60]
   14003bbe4:	lea    rcx,[rbp+0x8f40]
   14003bbeb:	call   0x14003e320
   14003bbf0:	mov    ebx,eax
   14003bbf2:	mov    DWORD PTR [rbp+0x7ee8],r13d
   14003bbf9:	mov    DWORD PTR [rbp+0x10ec8],r13d
   14003bc00:	mov    r13d,0x800
   14003bc06:	test   rsi,rsi
   14003bc09:	je     0x14003bc20
   14003bc0b:	mov    rcx,rsi
   14003bc0e:	call   0x14003b718
   14003bc13:	mov    edx,0x10118
   14003bc18:	mov    rcx,rsi
   14003bc1b:	call   0x140055de8
   14003bc20:	mov    esi,0x89
   14003bc25:	cmp    ebx,edi
   14003bc27:	je     0x14003bc37
   14003bc29:	lea    rdx,[rbp+0x12f20]
   14003bc30:	mov    ecx,esi
   14003bc32:	call   0x1400013b0
   14003bc37:	test   ebx,ebx
   14003bc39:	jne    0x14003bc5d
   14003bc3b:	lea    rcx,[rsp+0x60]
   14003bc40:	call   0x140020b88
   14003bc45:	test   rax,rax
   14003bc48:	jle    0x14003bd93
   14003bc4e:	lea    rcx,[rsp+0x60]
   14003bc53:	call   0x1400207cc
   14003bc58:	jmp    0x14003bd93
   14003bc5d:	cmp    ebx,0x2
   14003bc60:	jne    0x14003bc84
   14003bc62:	lea    rcx,[rsp+0x60]
   14003bc67:	call   0x1400207cc
   14003bc6c:	cmp    BYTE PTR [r14+0x619c],0x0
   14003bc74:	jne    0x14003bc92
   14003bc76:	call   0x1400487c4
   14003bc7b:	test   al,al
   14003bc7d:	jne    0x14003bc92
   14003bc7f:	jmp    0x14003bd93
   14003bc84:	cmp    ebx,edi
   14003bc86:	jne    0x14003bc92
   14003bc88:	lea    rcx,[rsp+0x60]
   14003bc8d:	call   0x140020a90
   14003bc92:	xor    r8d,r8d
   14003bc95:	xor    edx,edx
   14003bc97:	lea    rcx,[rbp+0x8f40]
   14003bc9e:	call   0x14000a280
   14003bca3:	mov    BYTE PTR [rsp+0x38],0x0
   14003bca8:	and    QWORD PTR [rsp+0x30],0x0
   14003bcae:	movabs rax,0x7fffffff7fffffff
   14003bcb8:	mov    QWORD PTR [rsp+0x28],rax
   14003bcbd:	lea    rax,[rsp+0x40]
   14003bcc2:	mov    QWORD PTR [rsp+0x20],rax
   14003bcc7:	mov    r9,r13
   14003bcca:	lea    r8,[rbp+0x11f20]
   14003bcd1:	lea    rdx,[rsp+0x60]
   14003bcd6:	mov    rcx,r14
   14003bcd9:	call   0x1400202cc
   14003bcde:	test   al,al
   14003bce0:	jne    0x14003bd0c
   14003bce2:	mov    al,BYTE PTR [rsp+0x40]
   14003bce6:	test   al,al
   14003bce8:	jne    0x14003bd03
   14003bcea:	lea    rdx,[rbp+0x11f20]
   14003bcf1:	lea    rcx,[rip+0x58b68]        # 0x140094860
   14003bcf8:	call   0x14001bc54
   14003bcfd:	mov    al,BYTE PTR [rsp+0x40]
   14003bd01:	test   al,al
   14003bd03:	sete   dil
   14003bd07:	jmp    0x14003bd93
   14003bd0c:	mov    ecx,0xdfc
   14003bd11:	call   0x140040118
   14003bd16:	mov    rcx,rax
   14003bd19:	mov    rdx,r15
   14003bd1c:	call   0x14001796c
   14003bd21:	lea    rdx,[rbp+0x11f20]
   14003bd28:	mov    ecx,0x5e
   14003bd2d:	call   0x1400013b0
   14003bd32:	mov    edx,DWORD PTR [rbp+0x10ec8]
   14003bd38:	sub    edx,0x1
   14003bd3b:	je     0x14003bd73
   14003bd3d:	sub    edx,0x1
   14003bd40:	je     0x14003bd5d
   14003bd42:	cmp    edx,0x1
   14003bd45:	jne    0x14003bd84
   14003bd47:	lea    r8,[rsp+0x60]
   14003bd4c:	lea    rdx,[rbp+0x8f40]
   14003bd53:	mov    rcx,r14
   14003bd56:	call   0x14003de3c
   14003bd5b:	jmp    0x14003bd84
   14003bd5d:	lea    r8,[rsp+0x60]
   14003bd62:	lea    rdx,[rbp+0x8f40]
   14003bd69:	mov    rcx,r14
   14003bd6c:	call   0x14003d65c
   14003bd71:	jmp    0x14003bd84
   14003bd73:	lea    rdx,[rbp+0x8f66]
   14003bd7a:	mov    ecx,0x3f
   14003bd7f:	call   0x1400013b0
   14003bd84:	lea    rdx,[rbp+0x11f20]
   14003bd8b:	mov    ecx,esi
   14003bd8d:	call   0x1400013b0
   14003bd92:	nop
   14003bd93:	lea    rcx,[rsp+0x60]
   14003bd98:	call   0x140007880
   14003bd9d:	nop
   14003bd9e:	lea    rcx,[rbp+0x8f40]
   14003bda5:	call   0x140007880
   14003bdaa:	mov    al,dil
   14003bdad:	mov    rcx,QWORD PTR [rbp+0x13f20]
   14003bdb4:	xor    rcx,rsp
   14003bdb7:	call   0x140055f90
   14003bdbc:	lea    r11,[rsp+0x14030]
   14003bdc4:	mov    rbx,QWORD PTR [r11+0x40]
   14003bdc8:	mov    rsi,QWORD PTR [r11+0x48]
   14003bdcc:	mov    rsp,r11
   14003bdcf:	pop    r15
   14003bdd1:	pop    r14
   14003bdd3:	pop    r13
   14003bdd5:	pop    rdi
   14003bdd6:	pop    rbp
   14003bdd7:	ret    
   14003bdd8:	mov    r11,rsp
   14003bddb:	push   rdi
   14003bddc:	sub    rsp,0xb0
   14003bde3:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14003bdec:	mov    QWORD PTR [r11+0x10],rbx
   14003bdf0:	mov    QWORD PTR [r11+0x18],rsi
   14003bdf4:	mov    rax,QWORD PTR [rip+0x460e5]        # 0x140081ee0
   14003bdfb:	xor    rax,rsp
   14003bdfe:	mov    QWORD PTR [rsp+0xa0],rax
   14003be06:	mov    rdi,rcx
   14003be09:	cmp    DWORD PTR [rcx+0x7f88],0x3
   14003be10:	jne    0x14003bef0
   14003be16:	and    DWORD PTR [r11-0x28],0x0
   14003be1b:	and    DWORD PTR [r11-0x24],0x0
   14003be20:	mov    DWORD PTR [r11-0x20],0x87
   14003be28:	lea    rcx,[rsp+0x30]
   14003be2d:	call   0x1400479a4
   14003be32:	mov    ecx,0x10118
   14003be37:	call   0x140055dac
   14003be3c:	mov    QWORD PTR [rsp+0x28],rax
   14003be41:	test   rax,rax
   14003be44:	je     0x14003be59
   14003be46:	xor    r8d,r8d
   14003be49:	mov    rdx,rdi
   14003be4c:	mov    rcx,rax
   14003be4f:	call   0x14003b68c
   14003be54:	mov    rbx,rax
   14003be57:	jmp    0x14003be5b
   14003be59:	xor    ebx,ebx
   14003be5b:	mov    rcx,rbx
   14003be5e:	call   0x14003f43c
   14003be63:	mov    sil,al
   14003be66:	test   rbx,rbx
   14003be69:	je     0x14003be80
   14003be6b:	mov    rcx,rbx
   14003be6e:	call   0x14003b718
   14003be73:	mov    edx,0x10118
   14003be78:	mov    rcx,rbx
   14003be7b:	call   0x140055de8
   14003be80:	and    DWORD PTR [rsp+0x90],0x0
   14003be88:	and    DWORD PTR [rsp+0x94],0x0
   14003be90:	mov    DWORD PTR [rsp+0x98],0x88
   14003be9b:	lea    rcx,[rsp+0x30]
   14003bea0:	call   0x1400479a4
   14003bea5:	mov    al,sil
   14003bea8:	neg    al
   14003beaa:	sbb    ecx,ecx
   14003beac:	and    ecx,0xfffffe78
   14003beb2:	add    ecx,0xea8
   14003beb8:	call   0x140040118
   14003bebd:	mov    rdx,rax
   14003bec0:	lea    rcx,[rip+0x34331]        # 0x1400701f8
   14003bec7:	call   0x14001796c
   14003becc:	test   sil,sil
   14003becf:	jne    0x14003bef0
   14003bed1:	mov    edx,0x3
   14003bed6:	lea    rcx,[rip+0x58983]        # 0x140094860
   14003bedd:	call   0x14001bf08
   14003bee2:	lea    rdx,[rdi+0x26]
   14003bee6:	mov    ecx,0x1e
   14003beeb:	call   0x1400013b0
   14003bef0:	mov    rcx,QWORD PTR [rsp+0xa0]
   14003bef8:	xor    rcx,rsp
   14003befb:	call   0x140055f90
   14003bf00:	lea    r11,[rsp+0xb0]
   14003bf08:	mov    rbx,QWORD PTR [r11+0x18]
   14003bf0c:	mov    rsi,QWORD PTR [r11+0x20]
   14003bf10:	mov    rsp,r11
   14003bf13:	pop    rdi
   14003bf14:	ret    
   14003bf15:	int3   
   14003bf16:	int3   
   14003bf17:	int3   
   14003bf18:	mov    QWORD PTR [rsp+0x8],rbx
   14003bf1d:	push   rdi
   14003bf1e:	sub    rsp,0x40
   14003bf22:	cmp    QWORD PTR [rcx+0x8],0x2710
   14003bf2a:	mov    rdi,rdx
   14003bf2d:	mov    rbx,rcx
   14003bf30:	jbe    0x14003bf37
   14003bf32:	call   0x14003bfd8
   14003bf37:	mov    eax,DWORD PTR [rbx+0x10080]
   14003bf3d:	mov    r9,QWORD PTR [rbx+0x8]
   14003bf41:	lea    ecx,[rax+rax*1]
   14003bf44:	cmp    r9,rcx
   14003bf47:	jbe    0x14003bf51
   14003bf49:	mov    rdx,r9
   14003bf4c:	sub    rdx,rcx
   14003bf4f:	jmp    0x14003bf53
   14003bf51:	xor    edx,edx
   14003bf53:	cmp    rdx,r9
   14003bf56:	jae    0x14003bf8b
   14003bf58:	mov    rcx,QWORD PTR [rbx]
   14003bf5b:	lea    rax,[rdx+rdx*2]
   14003bf5f:	lea    r8,[rcx+rax*8]
   14003bf63:	mov    r10,QWORD PTR [r8+0x10]
   14003bf67:	mov    rcx,QWORD PTR [r8]
   14003bf6a:	add    rcx,r10
   14003bf6d:	cmp    rcx,QWORD PTR [rdi]
   14003bf70:	jne    0x14003bf7f
   14003bf72:	mov    rcx,QWORD PTR [r8+0x8]
   14003bf76:	add    rcx,r10
   14003bf79:	cmp    rcx,QWORD PTR [rdi+0x8]
   14003bf7d:	je     0x14003bfb6
   14003bf7f:	inc    rdx
   14003bf82:	add    r8,0x18
   14003bf86:	cmp    rdx,r9
   14003bf89:	jb     0x14003bf63
   14003bf8b:	movups xmm0,XMMWORD PTR [rdi]
   14003bf8e:	lea    rdx,[rsp+0x20]
   14003bf93:	mov    rcx,rbx
   14003bf96:	movsd  xmm1,QWORD PTR [rdi+0x10]
   14003bf9b:	movaps XMMWORD PTR [rsp+0x20],xmm0
   14003bfa0:	movsd  QWORD PTR [rsp+0x30],xmm1
   14003bfa6:	call   0x14003ce7c
   14003bfab:	mov    rbx,QWORD PTR [rsp+0x50]
   14003bfb0:	add    rsp,0x40
   14003bfb4:	pop    rdi
   14003bfb5:	ret    
   14003bfb6:	mov    rax,QWORD PTR [rdi+0x10]
   14003bfba:	add    QWORD PTR [r8+0x10],rax
   14003bfbe:	jmp    0x14003bfab
   14003bfc0:	mov    rax,QWORD PTR [rdx+0x8]
   14003bfc4:	cmp    QWORD PTR [rcx+0x8],rax
   14003bfc8:	jne    0x14003bfcd
   14003bfca:	xor    eax,eax
   14003bfcc:	ret    
   14003bfcd:	sbb    eax,eax
   14003bfcf:	and    eax,0xfffffffe
   14003bfd2:	inc    eax
   14003bfd4:	ret    
   14003bfd5:	int3   
   14003bfd6:	int3   
   14003bfd7:	int3   
   14003bfd8:	mov    rax,rsp
   14003bfdb:	push   rdi
   14003bfdc:	push   r12
   14003bfde:	push   r13
   14003bfe0:	push   r14
   14003bfe2:	push   r15
   14003bfe4:	sub    rsp,0xf0
   14003bfeb:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   14003bff4:	mov    QWORD PTR [rax+0x10],rbx
   14003bff8:	mov    QWORD PTR [rax+0x18],rbp
   14003bffc:	mov    rax,QWORD PTR [rip+0x45edd]        # 0x140081ee0
   14003c003:	xor    rax,rsp
   14003c006:	mov    QWORD PTR [rsp+0xe0],rax
   14003c00e:	mov    rdi,rcx
   14003c011:	lea    r9,[rip+0xffffffffffffffa8]        # 0x14003bfc0
   14003c018:	mov    r8d,0x18
   14003c01e:	mov    rdx,QWORD PTR [rcx+0x8]
   14003c022:	mov    rcx,QWORD PTR [rcx]
   14003c025:	call   0x14005aa20
   14003c02a:	xor    ebx,ebx
   14003c02c:	mov    ebp,ebx
   14003c02e:	mov    rcx,QWORD PTR [rdi+0x8]
   14003c032:	test   rcx,rcx
   14003c035:	je     0x14003c04b
   14003c037:	mov    rax,QWORD PTR [rdi]
   14003c03a:	add    rax,0x10
   14003c03e:	add    rbp,QWORD PTR [rax]
   14003c041:	lea    rax,[rax+0x18]
   14003c045:	sub    rcx,0x1
   14003c049:	jne    0x14003c03e
   14003c04b:	cmp    rbp,0x10000000
   14003c052:	seta   r13b
   14003c056:	test   r13b,r13b
   14003c059:	je     0x14003c078
   14003c05b:	mov    QWORD PTR [rsp+0xd0],rbx
   14003c063:	mov    DWORD PTR [rsp+0xd8],0x64
   14003c06e:	lea    rcx,[rsp+0x70]
   14003c073:	call   0x1400479a4
   14003c078:	mov    QWORD PTR [rsp+0x40],rbx
   14003c07d:	mov    QWORD PTR [rsp+0x48],rbx
   14003c082:	mov    QWORD PTR [rsp+0x50],rbx
   14003c087:	mov    QWORD PTR [rsp+0x58],rbx
   14003c08c:	mov    edx,0x100000
   14003c091:	lea    rcx,[rsp+0x40]
   14003c096:	call   0x1400079a4
   14003c09b:	nop
   14003c09c:	mov    QWORD PTR [rsp+0x30],rbx
   14003c0a1:	mov    r12,rbx
   14003c0a4:	mov    QWORD PTR [rsp+0x38],rbx
   14003c0a9:	cmp    QWORD PTR [rdi+0x8],rbx
   14003c0ad:	jbe    0x14003c16e
   14003c0b3:	mov    r15,rbx
   14003c0b6:	mov    rbx,QWORD PTR [rdi]
   14003c0b9:	mov    rcx,QWORD PTR [rdi+0x20]
   14003c0bd:	mov    rax,QWORD PTR [rcx]
   14003c0c0:	xor    r8d,r8d
   14003c0c3:	mov    rdx,QWORD PTR [r15+rbx*1]
   14003c0c7:	call   QWORD PTR [rax+0x18]
   14003c0ca:	mov    rcx,QWORD PTR [rdi+0x28]
   14003c0ce:	mov    rax,QWORD PTR [rcx]
   14003c0d1:	xor    r8d,r8d
   14003c0d4:	mov    rdx,QWORD PTR [r15+rbx*1+0x8]
   14003c0d9:	call   QWORD PTR [rax+0x18]
   14003c0dc:	mov    r14,QWORD PTR [r15+rbx*1+0x10]
   14003c0e1:	xor    ebx,ebx
   14003c0e3:	test   r14,r14
   14003c0e6:	jle    0x14003c158
   14003c0e8:	mov    r12,QWORD PTR [rsp+0x30]
   14003c0ed:	call   0x140046bb4
   14003c0f2:	mov    r8,QWORD PTR [rsp+0x48]
   14003c0f7:	cmp    r14,r8
   14003c0fa:	cmovl  r8,r14
   14003c0fe:	mov    rcx,QWORD PTR [rdi+0x20]
   14003c102:	mov    rax,QWORD PTR [rcx]
   14003c105:	mov    rdx,QWORD PTR [rsp+0x40]
   14003c10a:	call   QWORD PTR [rax+0x10]
   14003c10d:	test   eax,eax
   14003c10f:	je     0x14003c14e
   14003c111:	movsxd rbx,eax
   14003c114:	mov    r8,rbx
   14003c117:	mov    rdx,QWORD PTR [rsp+0x40]
   14003c11c:	mov    rcx,QWORD PTR [rdi+0x28]
   14003c120:	call   0x1400212ac
   14003c125:	sub    r14,rbx
   14003c128:	add    r12,rbx
   14003c12b:	xor    ebx,ebx
   14003c12d:	test   r13b,r13b
   14003c130:	je     0x14003c149
   14003c132:	mov    QWORD PTR [rsp+0x20],rbp
   14003c137:	mov    r9,r12
   14003c13a:	xor    edx,edx
   14003c13c:	lea    r8d,[rbx+0x1]
   14003c140:	mov    rcx,QWORD PTR [rdi+0x20]
   14003c144:	call   0x14003f3a0
   14003c149:	test   r14,r14
   14003c14c:	jg     0x14003c0ed
   14003c14e:	mov    QWORD PTR [rsp+0x30],r12
   14003c153:	mov    r12,QWORD PTR [rsp+0x38]
   14003c158:	inc    r12
   14003c15b:	mov    QWORD PTR [rsp+0x38],r12
   14003c160:	add    r15,0x18
   14003c164:	cmp    r12,QWORD PTR [rdi+0x8]
   14003c168:	jb     0x14003c0b6
   14003c16e:	mov    rcx,rdi
   14003c171:	call   0x140009a60
   14003c176:	nop
   14003c177:	cmp    QWORD PTR [rsp+0x40],rbx
   14003c17c:	je     0x14003c188
   14003c17e:	mov    rcx,QWORD PTR [rsp+0x40]
   14003c183:	call   0x14005a938
   14003c188:	mov    rcx,QWORD PTR [rsp+0xe0]
   14003c190:	xor    rcx,rsp
   14003c193:	call   0x140055f90
   14003c198:	lea    r11,[rsp+0xf0]
   14003c1a0:	mov    rbx,QWORD PTR [r11+0x38]
   14003c1a4:	mov    rbp,QWORD PTR [r11+0x40]
   14003c1a8:	mov    rsp,r11
   14003c1ab:	pop    r15
   14003c1ad:	pop    r14
   14003c1af:	pop    r13
   14003c1b1:	pop    r12
   14003c1b3:	pop    rdi
   14003c1b4:	ret    
   14003c1b5:	int3   
   14003c1b6:	int3   
   14003c1b7:	int3   
   14003c1b8:	mov    rax,rsp
   14003c1bb:	mov    QWORD PTR [rax+0x10],rbx
   14003c1bf:	mov    QWORD PTR [rax+0x18],rsi
   14003c1c3:	mov    QWORD PTR [rax+0x20],rdi
   14003c1c7:	push   rbp
   14003c1c8:	push   r12
   14003c1ca:	push   r13
   14003c1cc:	push   r14
   14003c1ce:	push   r15
   14003c1d0:	lea    rbp,[rax-0x5f]
   14003c1d4:	sub    rsp,0xe0
   14003c1db:	mov    rax,QWORD PTR [rip+0x45cfe]        # 0x140081ee0
   14003c1e2:	xor    rax,rsp
   14003c1e5:	mov    QWORD PTR [rbp+0x27],rax
   14003c1e9:	mov    rbx,rcx
   14003c1ec:	mov    ecx,DWORD PTR [rcx+0x10088]
   14003c1f2:	call   0x140055df0
   14003c1f7:	or     DWORD PTR [rip+0x5867e],0xffffffff        # 0x14009487c
   14003c1fe:	lea    rcx,[rip+0x3400b]        # 0x140070210
   14003c205:	mov    r13,rax
   14003c208:	mov    QWORD PTR [rbp-0x71],rax
   14003c20c:	call   0x14001796c
   14003c211:	xor    dil,dil
   14003c214:	xor    r12d,r12d
   14003c217:	xor    r15d,r15d
   14003c21a:	mov    BYTE PTR [rbp-0x79],dil
   14003c21e:	xor    r14b,r14b
   14003c221:	mov    QWORD PTR [rbp-0x69],r12
   14003c225:	cmp    QWORD PTR [rbx+0x10098],r12
   14003c22c:	jbe    0x14003c60e
   14003c232:	call   0x140046bb4
   14003c237:	mov    rax,QWORD PTR [rbx+0x10098]
   14003c23e:	xor    edx,edx
   14003c240:	mov    rcx,QWORD PTR [rbx+0x20]
   14003c244:	mov    r9,r12
   14003c247:	mov    QWORD PTR [rsp+0x20],rax
   14003c24c:	lea    r8d,[rdx+0x1]
   14003c250:	call   0x14003f3a0
   14003c255:	mov    rdx,r12
   14003c258:	mov    rcx,rbx
   14003c25b:	call   0x14003d480
   14003c260:	mov    r10d,DWORD PTR [rbx+0x10084]
   14003c267:	or     edx,0xffffffff
   14003c26a:	xor    r8d,r8d
   14003c26d:	xor    edi,edi
   14003c26f:	test   r10d,r10d
   14003c272:	je     0x14003c564
   14003c278:	mov    r11d,DWORD PTR [rbx+0x10080]
   14003c27f:	mov    rsi,QWORD PTR [rbx+0x10070]
   14003c286:	lea    r9d,[r11+r8*1]
   14003c28a:	mov    eax,r9d
   14003c28d:	imul   rcx,rax,0x68
   14003c291:	cmp    BYTE PTR [rcx+rsi*1],0x0
   14003c295:	je     0x14003c2a0
   14003c297:	cmp    edx,0xffffffff
   14003c29a:	cmove  edx,r9d
   14003c29e:	inc    edi
   14003c2a0:	inc    r8d
   14003c2a3:	cmp    r8d,r10d
   14003c2a6:	jb     0x14003c286
   14003c2a8:	cmp    edx,0xffffffff
   14003c2ab:	je     0x14003c564
   14003c2b1:	movsxd rax,edx
   14003c2b4:	xor    r9d,r9d
   14003c2b7:	imul   rcx,rax,0x68
   14003c2bb:	mov    r8d,edi
   14003c2be:	mov    BYTE PTR [rbp-0x78],0x0
   14003c2c2:	mov    rsi,QWORD PTR [rcx+rsi*1+0x8]
   14003c2c7:	mov    rcx,rbx
   14003c2ca:	mov    rdx,rsi
   14003c2cd:	call   0x14003cf40
   14003c2d2:	mov    r14d,eax
   14003c2d5:	test   eax,eax
   14003c2d7:	je     0x14003c2f1
   14003c2d9:	cmp    eax,edi
   14003c2db:	jbe    0x14003c2f1
   14003c2dd:	mov    r9b,0x1
   14003c2e0:	mov    r8d,edi
   14003c2e3:	mov    rdx,rsi
   14003c2e6:	mov    rcx,rbx
   14003c2e9:	call   0x14003cf40
   14003c2ee:	mov    r14d,eax
   14003c2f1:	xor    r8d,r8d
   14003c2f4:	cmp    DWORD PTR [rbx+0x10088],r8d
   14003c2fb:	jbe    0x14003c31e
   14003c2fd:	mov    rax,QWORD PTR [rbx+0x10070]
   14003c304:	mov    edx,r8d
   14003c307:	imul   rcx,rdx,0x68
   14003c30b:	mov    cl,BYTE PTR [rcx+rax*1]
   14003c30e:	mov    BYTE PTR [r8+r13*1],cl
   14003c312:	inc    r8d
   14003c315:	cmp    r8d,DWORD PTR [rbx+0x10088]
   14003c31c:	jb     0x14003c2fd
   14003c31e:	mov    r9,QWORD PTR [rbp-0x71]
   14003c322:	lea    rcx,[rbx+0x30]
   14003c326:	mov    r8d,DWORD PTR [rbx+0x10084]
   14003c32d:	mov    edx,DWORD PTR [rbx+0x10080]
   14003c333:	call   0x140041c3c
   14003c338:	test   r14d,r14d
   14003c33b:	je     0x14003c451
   14003c341:	test   al,al
   14003c343:	je     0x14003c451
   14003c349:	mov    edi,DWORD PTR [rbx+0x10080]
   14003c34f:	xor    esi,esi
   14003c351:	test   edi,edi
   14003c353:	je     0x14003c3a2
   14003c355:	mov    r9,QWORD PTR [rbx+0x10070]
   14003c35c:	mov    eax,esi
   14003c35e:	imul   r10,rax,0x68
   14003c362:	cmp    BYTE PTR [r10+r9*1],0x0
   14003c367:	jne    0x14003c398
   14003c369:	jmp    0x14003c36d
   14003c36b:	inc    edi
   14003c36d:	mov    eax,edi
   14003c36f:	imul   rcx,rax,0x68
   14003c373:	cmp    BYTE PTR [rcx+r9*1],0x0
   14003c378:	je     0x14003c36b
   14003c37a:	mov    r8d,DWORD PTR [rbx+0x100b0]
   14003c381:	mov    rcx,QWORD PTR [r10+r9*1+0x30]
   14003c386:	mov    eax,edi
   14003c388:	imul   rdx,rax,0x68
   14003c38c:	mov    rdx,QWORD PTR [rdx+r9*1+0x30]
   14003c391:	call   0x140059180
   14003c396:	inc    edi
   14003c398:	inc    esi
   14003c39a:	cmp    esi,DWORD PTR [rbx+0x10080]
   14003c3a0:	jb     0x14003c355
   14003c3a2:	xor    edi,edi
   14003c3a4:	cmp    DWORD PTR [rbx+0x10080],edi
   14003c3aa:	jbe    0x14003c409
   14003c3ac:	xor    esi,esi
   14003c3ae:	test   r14d,r14d
   14003c3b1:	je     0x14003c3fb
   14003c3b3:	mov    eax,edi
   14003c3b5:	imul   r12,rax,0x68
   14003c3b9:	mov    eax,DWORD PTR [rbx+0x10080]
   14003c3bf:	mov    r8d,esi
   14003c3c2:	mov    r9,QWORD PTR [rbx+0x10070]
   14003c3c9:	add    eax,esi
   14003c3cb:	mov    ecx,DWORD PTR [rbx+0x100b0]
   14003c3d1:	mov    edx,edi
   14003c3d3:	mov    QWORD PTR [rsp+0x28],rcx
   14003c3d8:	lea    rcx,[rbx+0x30]
   14003c3dc:	imul   rax,rax,0x68
   14003c3e0:	mov    rax,QWORD PTR [rax+r9*1+0x30]
   14003c3e5:	mov    r9,QWORD PTR [r12+r9*1+0x30]
   14003c3ea:	mov    QWORD PTR [rsp+0x20],rax
   14003c3ef:	call   0x1400423a4
   14003c3f4:	inc    esi
   14003c3f6:	cmp    esi,r14d
   14003c3f9:	jb     0x14003c3b9
   14003c3fb:	inc    edi
   14003c3fd:	cmp    edi,DWORD PTR [rbx+0x10080]
   14003c403:	jb     0x14003c3ac
   14003c405:	mov    r12,QWORD PTR [rbp-0x69]
   14003c409:	mov    esi,DWORD PTR [rbx+0x10080]
   14003c40f:	xor    edi,edi
   14003c411:	test   esi,esi
   14003c413:	je     0x14003c451
   14003c415:	mov    rcx,QWORD PTR [rbx+0x10070]
   14003c41c:	mov    eax,edi
   14003c41e:	imul   r9,rax,0x68
   14003c422:	cmp    BYTE PTR [r9+rcx*1],0x0
   14003c427:	jne    0x14003c447
   14003c429:	mov    r8d,DWORD PTR [rbx+0x100b0]
   14003c430:	mov    eax,esi
   14003c432:	imul   rdx,rax,0x68
   14003c436:	mov    rdx,QWORD PTR [rdx+rcx*1+0x30]
   14003c43b:	mov    rcx,QWORD PTR [r9+rcx*1+0x30]
   14003c440:	call   0x140059180
   14003c445:	inc    esi
   14003c447:	inc    edi
   14003c449:	cmp    edi,DWORD PTR [rbx+0x10080]
   14003c44f:	jb     0x14003c415
   14003c451:	xor    r14d,r14d
   14003c454:	cmp    DWORD PTR [rbx+0x10080],r14d
   14003c45b:	jbe    0x14003c520
   14003c461:	mov    rsi,QWORD PTR [rbx+0x10090]
   14003c468:	mov    edx,r14d
   14003c46b:	imul   rdi,rdx,0x68
   14003c46f:	imul   rdx,QWORD PTR [rbx+0x10098]
   14003c477:	add    rdi,QWORD PTR [rbx+0x10070]
   14003c47e:	add    rdx,r12
   14003c481:	cmp    rdx,rsi
   14003c484:	ja     0x14003c510
   14003c48a:	sub    rsi,rdx
   14003c48d:	cmp    QWORD PTR [rdi+0x38],rsi
   14003c491:	cmovb  rsi,QWORD PTR [rdi+0x38]
   14003c496:	test   rsi,rsi
   14003c499:	je     0x14003c510
   14003c49b:	cmp    BYTE PTR [rdi],0x0
   14003c49e:	jne    0x14003c4f4
   14003c4a0:	mov    rcx,QWORD PTR [rbx+0x28]
   14003c4a4:	xor    r8d,r8d
   14003c4a7:	mov    rax,QWORD PTR [rcx]
   14003c4aa:	call   QWORD PTR [rax+0x18]
   14003c4ad:	mov    rdx,QWORD PTR [rdi+0x30]
   14003c4b1:	mov    r8,rsi
   14003c4b4:	mov    rcx,QWORD PTR [rbx+0x28]
   14003c4b8:	call   0x1400212ac
   14003c4bd:	mov    r8,QWORD PTR [rdi+0x38]
   14003c4c1:	xor    ecx,ecx
   14003c4c3:	mov    rdx,QWORD PTR [rdi+0x30]
   14003c4c7:	call   0x140017bec
   14003c4cc:	cmp    rax,QWORD PTR [rdi+0x60]
   14003c4d0:	sete   r9b
   14003c4d4:	test   r9b,r9b
   14003c4d7:	je     0x14003c4de
   14003c4d9:	inc    r15
   14003c4dc:	jmp    0x14003c4e2
   14003c4de:	mov    BYTE PTR [rbp-0x79],0x1
   14003c4e2:	mov    r8d,DWORD PTR [rdi+0x38]
   14003c4e6:	mov    rcx,rbx
   14003c4e9:	mov    rdx,QWORD PTR [rdi+0x8]
   14003c4ed:	call   0x14003ccd8
   14003c4f2:	jmp    0x14003c510
   14003c4f4:	mov    rax,QWORD PTR [rdi+0x8]
   14003c4f8:	mov    rcx,rbx
   14003c4fb:	mov    QWORD PTR [rbp-0x59],rdx
   14003c4ff:	lea    rdx,[rbp-0x61]
   14003c503:	mov    QWORD PTR [rbp-0x61],rax
   14003c507:	mov    QWORD PTR [rbp-0x51],rsi
   14003c50b:	call   0x14003bf18
   14003c510:	inc    r14d
   14003c513:	cmp    r14d,DWORD PTR [rbx+0x10080]
   14003c51a:	jb     0x14003c461
   14003c520:	xor    r8d,r8d
   14003c523:	cmp    DWORD PTR [rbx+0x10084],r8d
   14003c52a:	jbe    0x14003c58a
   14003c52c:	mov    ecx,DWORD PTR [rbx+0x10080]
   14003c532:	mov    eax,r8d
   14003c535:	add    rcx,rax
   14003c538:	imul   rdx,rcx,0x68
   14003c53c:	add    rdx,QWORD PTR [rbx+0x10070]
   14003c543:	cmp    BYTE PTR [rdx],0x0
   14003c546:	je     0x14003c552
   14003c548:	mov    eax,DWORD PTR [rbx+0x100d0]
   14003c54e:	add    QWORD PTR [rdx+0x8],rax
   14003c552:	inc    r8d
   14003c555:	cmp    r8d,DWORD PTR [rbx+0x10084]
   14003c55c:	jb     0x14003c52c
   14003c55e:	mov    r14b,BYTE PTR [rbp-0x78]
   14003c562:	jmp    0x14003c58d
   14003c564:	mov    BYTE PTR [rbp-0x79],0x1
   14003c568:	test   r14b,r14b
   14003c56b:	jne    0x14003c591
   14003c56d:	and    DWORD PTR [rbp+0x17],0x0
   14003c571:	lea    rcx,[rbp-0x49]
   14003c575:	and    DWORD PTR [rbp+0x1b],0x0
   14003c579:	mov    DWORD PTR [rbp+0x1f],0x62
   14003c580:	call   0x1400479a4
   14003c585:	mov    r14b,0x1
   14003c588:	jmp    0x14003c591
   14003c58a:	mov    r14b,r8b
   14003c58d:	mov    r13,QWORD PTR [rbp-0x71]
   14003c591:	mov    eax,DWORD PTR [rbx+0x100b0]
   14003c597:	add    r12,rax
   14003c59a:	mov    QWORD PTR [rbp-0x69],r12
   14003c59e:	cmp    r12,QWORD PTR [rbx+0x10098]
   14003c5a5:	jb     0x14003c232
   14003c5ab:	test   r15,r15
   14003c5ae:	je     0x14003c60a
   14003c5b0:	mov    rax,QWORD PTR [rbx+0x100a8]
   14003c5b7:	test   rax,rax
   14003c5ba:	setne  dil
   14003c5be:	test   dil,dil
   14003c5c1:	je     0x14003c5f2
   14003c5c3:	mov    rcx,QWORD PTR [rbx+0x20]
   14003c5c7:	mov    QWORD PTR [rbp-0x61],rax
   14003c5cb:	mov    rax,QWORD PTR [rbx+0x10090]
   14003c5d2:	mov    QWORD PTR [rbp-0x59],rax
   14003c5d6:	call   0x140020b88
   14003c5db:	sub    rax,QWORD PTR [rbx+0x100a8]
   14003c5e2:	lea    rdx,[rbp-0x61]
   14003c5e6:	mov    rcx,rbx
   14003c5e9:	mov    QWORD PTR [rbp-0x51],rax
   14003c5ed:	call   0x14003bf18
   14003c5f2:	mov    rcx,rbx
   14003c5f5:	call   0x14003bfd8
   14003c5fa:	test   dil,dil
   14003c5fd:	jne    0x14003c60a
   14003c5ff:	mov    rcx,QWORD PTR [rbx+0x28]
   14003c603:	xor    edx,edx
   14003c605:	call   0x14000bdbc
   14003c60a:	mov    dil,BYTE PTR [rbp-0x79]
   14003c60e:	mov    rcx,QWORD PTR [rbx+0x20]
   14003c612:	mov    r9d,0x64
   14003c618:	xor    edx,edx
   14003c61a:	mov    QWORD PTR [rsp+0x20],r9
   14003c61f:	lea    r8d,[r9-0x63]
   14003c623:	call   0x14003f3a0
   14003c628:	mov    edx,r15d
   14003c62b:	mov    ecx,0x63
   14003c630:	call   0x14002146c
   14003c635:	mov    rcx,r13
   14003c638:	call   0x140055de8
   14003c63d:	test   dil,dil
   14003c640:	je     0x14003c64d
   14003c642:	neg    r15
   14003c645:	sbb    eax,eax
   14003c647:	neg    eax
   14003c649:	inc    eax
   14003c64b:	jmp    0x14003c64f
   14003c64d:	xor    eax,eax
   14003c64f:	mov    rcx,QWORD PTR [rbp+0x27]
   14003c653:	xor    rcx,rsp
   14003c656:	call   0x140055f90
   14003c65b:	lea    r11,[rsp+0xe0]
   14003c663:	mov    rbx,QWORD PTR [r11+0x38]
   14003c667:	mov    rsi,QWORD PTR [r11+0x40]
   14003c66b:	mov    rdi,QWORD PTR [r11+0x48]
   14003c66f:	mov    rsp,r11
   14003c672:	pop    r15
   14003c674:	pop    r14
   14003c676:	pop    r13
   14003c678:	pop    r12
   14003c67a:	pop    rbp
   14003c67b:	ret    
   14003c67c:	rex push rbp
   14003c67e:	push   rbx
   14003c67f:	push   rsi
   14003c680:	push   rdi
   14003c681:	push   r12
   14003c683:	push   r13
   14003c685:	push   r14
   14003c687:	push   r15
   14003c689:	lea    rbp,[rsp-0x4c8]
   14003c691:	sub    rsp,0x5c8
   14003c698:	mov    QWORD PTR [rbp-0x70],0xfffffffffffffffe
   14003c6a0:	mov    rax,QWORD PTR [rip+0x45839]        # 0x140081ee0
   14003c6a7:	xor    rax,rsp
   14003c6aa:	mov    QWORD PTR [rbp+0x4b0],rax
   14003c6b1:	mov    rax,r9
   14003c6b4:	mov    QWORD PTR [rsp+0x70],rax
   14003c6b9:	mov    QWORD PTR [rbp-0x78],r8
   14003c6bd:	mov    QWORD PTR [rbp-0x80],rdx
   14003c6c1:	mov    rbx,rcx
   14003c6c4:	mov    rsi,r9
   14003c6c7:	mov    QWORD PTR [rsp+0x48],rax
   14003c6cc:	mov    rax,QWORD PTR [rcx]
   14003c6cf:	xor    r8d,r8d
   14003c6d2:	xor    edx,edx
   14003c6d4:	call   QWORD PTR [rax+0x18]
   14003c6d7:	mov    dil,0x1
   14003c6da:	mov    r12,QWORD PTR [rbp+0x540]
   14003c6e1:	xor    r13d,r13d
   14003c6e4:	test   r12,r12
   14003c6e7:	jle    0x14003cace
   14003c6ed:	mov    QWORD PTR [rbp-0x68],rbx
   14003c6f1:	mov    r15,QWORD PTR [rsp+0x68]
   14003c6f6:	call   0x140046bb4
   14003c6fb:	mov    QWORD PTR [rsp+0x78],r12
   14003c700:	mov    BYTE PTR [rsp+0x20],0x1
   14003c705:	lea    r9,[rbp+0x540]
   14003c70c:	mov    r8d,0x200
   14003c712:	lea    rdx,[rbp+0x1b0]
   14003c719:	mov    rcx,rbx
   14003c71c:	call   0x14003cec0
   14003c721:	mov    DWORD PTR [rsp+0x40],eax
   14003c725:	mov    r8d,0x200
   14003c72b:	lea    rdx,[rbp+0x1b0]
   14003c732:	or     ecx,0xffffffff
   14003c735:	call   0x140017ac0
   14003c73a:	movzx  eax,ax
   14003c73d:	mov    DWORD PTR [rsp+0x30],eax
   14003c741:	mov    rdx,QWORD PTR [rbx]
   14003c744:	mov    rcx,rbx
   14003c747:	call   QWORD PTR [rdx+0x20]
   14003c74a:	mov    r14,rax
   14003c74d:	mov    QWORD PTR [rbp-0x60],rax
   14003c751:	mov    r9,QWORD PTR [rbx]
   14003c754:	xor    r8d,r8d
   14003c757:	mov    rdx,rsi
   14003c75a:	mov    rcx,rbx
   14003c75d:	call   QWORD PTR [r9+0x18]
   14003c761:	mov    r9,QWORD PTR [rbx]
   14003c764:	mov    r8d,0x100
   14003c76a:	lea    rdx,[rbp+0x3b0]
   14003c771:	mov    rcx,rbx
   14003c774:	call   QWORD PTR [r9+0x10]
   14003c778:	movzx  esi,BYTE PTR [rbp+0x3b1]
   14003c77f:	shl    esi,0x8
   14003c782:	movzx  ecx,BYTE PTR [rbp+0x3b0]
   14003c789:	add    esi,ecx
   14003c78b:	mov    r12,QWORD PTR [rbp+0x540]
   14003c792:	test   r12,0x1ff
   14003c799:	mov    edx,0x0
   14003c79e:	setne  dl
   14003c7a1:	mov    rcx,r12
   14003c7a4:	shr    rcx,0x9
   14003c7a8:	add    edx,ecx
   14003c7aa:	xor    r8d,r8d
   14003c7ad:	movsxd r10,edx
   14003c7b0:	test   edx,edx
   14003c7b2:	jle    0x14003c7ee
   14003c7b4:	test   eax,eax
   14003c7b6:	jns    0x14003c7ba
   14003c7b8:	inc    eax
   14003c7ba:	sar    eax,1
   14003c7bc:	lea    r9d,[rax-0x2]
   14003c7c0:	lea    rdx,[rbp+0x3b2]
   14003c7c7:	cmp    r13d,r9d
   14003c7ca:	jge    0x14003c7ee
   14003c7cc:	movzx  ecx,BYTE PTR [rdx+0x1]
   14003c7d0:	shl    ecx,0x8
   14003c7d3:	movzx  eax,BYTE PTR [rdx]
   14003c7d6:	add    ecx,eax
   14003c7d8:	mov    eax,r13d
   14003c7db:	mov    DWORD PTR [rbp+rax*4-0x50],ecx
   14003c7df:	inc    r13d
   14003c7e2:	inc    r8
   14003c7e5:	add    rdx,0x2
   14003c7e9:	cmp    r8,r10
   14003c7ec:	jl     0x14003c7c7
   14003c7ee:	add    QWORD PTR [rsp+0x48],0x2
   14003c7f4:	mov    rax,QWORD PTR [rbx]
   14003c7f7:	xor    r8d,r8d
   14003c7fa:	mov    rdx,r14
   14003c7fd:	mov    rcx,rbx
   14003c800:	call   QWORD PTR [rax+0x18]
   14003c803:	nop
   14003c804:	cmp    esi,DWORD PTR [rsp+0x30]
   14003c808:	jne    0x14003c815
   14003c80a:	mov    dil,0x1
   14003c80d:	xor    r13d,r13d
   14003c810:	jmp    0x14003cac0
   14003c815:	mov    esi,DWORD PTR [rsp+0x40]
   14003c819:	mov    rax,QWORD PTR [rbx]
   14003c81c:	mov    rcx,rbx
   14003c81f:	call   QWORD PTR [rax+0x20]
   14003c822:	mov    r14,rax
   14003c825:	sub    r14,rsi
   14003c828:	xor    esi,esi
   14003c82a:	mov    rax,QWORD PTR [rsp+0x70]
   14003c82f:	mov    QWORD PTR [rsp+0x20],rax
   14003c834:	mov    r9,r14
   14003c837:	xor    edx,edx
   14003c839:	lea    r8d,[rsi+0x2]
   14003c83d:	mov    rcx,rbx
   14003c840:	call   0x14003f3a0
   14003c845:	neg    dil
   14003c848:	sbb    edi,edi
   14003c84a:	and    edi,0xffff0202
   14003c850:	add    edi,0xfdff
   14003c856:	cmp    edi,0x10000
   14003c85c:	jge    0x14003ca79
   14003c862:	movsxd rax,edi
   14003c865:	mov    rcx,QWORD PTR [rsp+0x78]
   14003c86a:	cmp    rax,rcx
   14003c86d:	jge    0x14003ca6d
   14003c873:	sub    rcx,rax
   14003c876:	mov    QWORD PTR [rsp+0x58],rcx
   14003c87b:	mov    QWORD PTR [rsp+0x38],rcx
   14003c880:	lea    rcx,[rax+r14*1]
   14003c884:	mov    QWORD PTR [rsp+0x60],rcx
   14003c889:	mov    rax,QWORD PTR [rbx]
   14003c88c:	xor    r8d,r8d
   14003c88f:	mov    rdx,rcx
   14003c892:	mov    rcx,rbx
   14003c895:	call   QWORD PTR [rax+0x18]
   14003c898:	xor    r12d,r12d
   14003c89b:	mov    BYTE PTR [rsp+0x20],r12b
   14003c8a0:	lea    r9,[rsp+0x38]
   14003c8a5:	mov    r15d,0x200
   14003c8ab:	mov    r8d,r15d
   14003c8ae:	lea    rdx,[rbp+0x1b0]
   14003c8b5:	mov    rcx,rbx
   14003c8b8:	call   0x14003cec0
   14003c8bd:	lea    ecx,[r12+0x1]
   14003c8c2:	lea    rax,[rbp+0x1b1]
   14003c8c9:	mov    dl,BYTE PTR [rbp+0x1b0]
   14003c8cf:	cmp    BYTE PTR [rax],dl
   14003c8d1:	jne    0x14003c8e8
   14003c8d3:	inc    ecx
   14003c8d5:	inc    rax
   14003c8d8:	cmp    ecx,r15d
   14003c8db:	jb     0x14003c8cf
   14003c8dd:	add    edi,0x1ff
   14003c8e3:	jmp    0x14003ca5f
   14003c8e8:	mov    r8,r15
   14003c8eb:	lea    rdx,[rbp+0x1b0]
   14003c8f2:	or     ecx,0xffffffff
   14003c8f5:	call   0x140017ac0
   14003c8fa:	movzx  eax,ax
   14003c8fd:	mov    DWORD PTR [rsp+0x30],eax
   14003c901:	mov    r15d,r12d
   14003c904:	test   r13d,r13d
   14003c907:	je     0x14003ca5b
   14003c90d:	lea    rcx,[rbp-0x50]
   14003c911:	mov    QWORD PTR [rsp+0x38],rcx
   14003c916:	cmp    DWORD PTR [rcx],eax
   14003c918:	jne    0x14003ca0c
   14003c91e:	lea    eax,[r13-0x1]
   14003c922:	cmp    r15d,eax
   14003c925:	jae    0x14003c9fb
   14003c92b:	mov    rax,QWORD PTR [rbx]
   14003c92e:	mov    rdx,QWORD PTR [rsp+0x60]
   14003c933:	add    rdx,0x200
   14003c93a:	xor    r8d,r8d
   14003c93d:	mov    rcx,rbx
   14003c940:	call   QWORD PTR [rax+0x18]
   14003c943:	mov    rax,QWORD PTR [rsp+0x58]
   14003c948:	add    rax,0xfffffffffffffe00
   14003c94e:	mov    QWORD PTR [rsp+0x50],rax
   14003c953:	js     0x14003ca03
   14003c959:	mov    BYTE PTR [rsp+0x20],r12b
   14003c95e:	lea    r9,[rsp+0x50]
   14003c963:	mov    r8d,0x200
   14003c969:	lea    rdx,[rbp+0x1b0]
   14003c970:	mov    rcx,rbx
   14003c973:	call   0x14003cec0
   14003c978:	lea    r12d,[r15+0x2]
   14003c97c:	mov    r8d,0x200
   14003c982:	lea    rdx,[rbp+0x1b0]
   14003c989:	or     ecx,0xffffffff
   14003c98c:	call   0x140017ac0
   14003c991:	movzx  edx,ax
   14003c994:	lea    eax,[r12-0x1]
   14003c999:	cmp    DWORD PTR [rbp+rax*4-0x50],edx
   14003c99d:	jne    0x14003c9f6
   14003c99f:	lea    eax,[r13-0x2]
   14003c9a3:	cmp    r15d,eax
   14003c9a6:	jae    0x14003ca22
   14003c9a8:	mov    rax,QWORD PTR [rsp+0x58]
   14003c9ad:	add    rax,0xfffffffffffffc00
   14003c9b3:	mov    QWORD PTR [rsp+0x50],rax
   14003c9b8:	mov    BYTE PTR [rsp+0x20],0x0
   14003c9bd:	lea    r9,[rsp+0x50]
   14003c9c2:	mov    r8d,0x200
   14003c9c8:	lea    rdx,[rbp+0x1b0]
   14003c9cf:	mov    rcx,rbx
   14003c9d2:	call   0x14003cec0
   14003c9d7:	mov    r8d,0x200
   14003c9dd:	lea    rdx,[rbp+0x1b0]
   14003c9e4:	or     ecx,0xffffffff
   14003c9e7:	call   0x140017ac0
   14003c9ec:	movzx  ecx,ax
   14003c9ef:	cmp    DWORD PTR [rbp+r12*4-0x50],ecx
   14003c9f4:	je     0x14003ca22
   14003c9f6:	xor    r12d,r12d
   14003c9f9:	jmp    0x14003ca03
   14003c9fb:	cmp    r13d,0x4
   14003c9ff:	jb     0x14003ca22
   14003ca01:	jmp    0x14003ca08
   14003ca03:	mov    rcx,QWORD PTR [rsp+0x38]
   14003ca08:	mov    eax,DWORD PTR [rsp+0x30]
   14003ca0c:	inc    r15d
   14003ca0f:	add    rcx,0x4
   14003ca13:	mov    QWORD PTR [rsp+0x38],rcx
   14003ca18:	cmp    r15d,r13d
   14003ca1b:	jae    0x14003ca5b
   14003ca1d:	jmp    0x14003c916
   14003ca22:	lea    eax,[r15+0x1]
   14003ca26:	shl    eax,0x9
   14003ca29:	mov    esi,edi
   14003ca2b:	sub    esi,eax
   14003ca2d:	mov    r12,QWORD PTR [rsp+0x60]
   14003ca32:	dec    r12
   14003ca35:	and    r12,0xfffffffffffffe00
   14003ca3c:	mov    QWORD PTR [rsp+0x68],r12
   14003ca41:	mov    rcx,r14
   14003ca44:	cmp    r12,r14
   14003ca47:	cmovl  rcx,r12
   14003ca4b:	movsxd rax,esi
   14003ca4e:	add    rcx,rax
   14003ca51:	mov    r12d,0x0
   14003ca57:	cmovs  esi,r12d
   14003ca5b:	test   esi,esi
   14003ca5d:	jne    0x14003ca6d
   14003ca5f:	inc    edi
   14003ca61:	cmp    edi,0x10000
   14003ca67:	jl     0x14003c862
   14003ca6d:	mov    r12,QWORD PTR [rbp+0x540]
   14003ca74:	mov    r15,QWORD PTR [rsp+0x68]
   14003ca79:	xor    r13d,r13d
   14003ca7c:	test   esi,esi
   14003ca7e:	setne  dil
   14003ca82:	test   esi,esi
   14003ca84:	je     0x14003caad
   14003ca86:	movsxd rax,esi
   14003ca89:	add    r14,rax
   14003ca8c:	sub    r12,rax
   14003ca8f:	mov    QWORD PTR [rbp+0x540],r12
   14003ca96:	mov    rdx,r15
   14003ca99:	mov    rcx,QWORD PTR [rbp-0x80]
   14003ca9d:	call   0x140016340
   14003caa2:	mov    edx,esi
   14003caa4:	mov    rcx,QWORD PTR [rbp-0x78]
   14003caa8:	call   0x14003ce4c
   14003caad:	mov    rax,QWORD PTR [rbx]
   14003cab0:	mov    edx,DWORD PTR [rsp+0x40]
   14003cab4:	add    rdx,r14
   14003cab7:	xor    r8d,r8d
   14003caba:	mov    rcx,rbx
   14003cabd:	call   QWORD PTR [rax+0x18]
   14003cac0:	test   r12,r12
   14003cac3:	mov    rsi,QWORD PTR [rsp+0x48]
   14003cac8:	jg     0x14003c6f6
   14003cace:	mov    rcx,QWORD PTR [rbp+0x4b0]
   14003cad5:	xor    rcx,rsp
   14003cad8:	call   0x140055f90
   14003cadd:	add    rsp,0x5c8
   14003cae4:	pop    r15
   14003cae6:	pop    r14
   14003cae8:	pop    r13
   14003caea:	pop    r12
   14003caec:	pop    rdi
   14003caed:	pop    rsi
   14003caee:	pop    rbx
   14003caef:	pop    rbp
   14003caf0:	ret    
   14003caf1:	int3   
   14003caf2:	int3   
   14003caf3:	int3   
   14003caf4:	rex push rbp
   14003caf6:	push   rsi
   14003caf7:	push   rdi
   14003caf8:	push   r12
   14003cafa:	push   r14
   14003cafc:	sub    rsp,0x40
   14003cb00:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14003cb09:	mov    QWORD PTR [rsp+0x78],rbx
   14003cb0e:	mov    rbp,rdx
   14003cb11:	mov    rdi,rcx
   14003cb14:	call   0x140009a60
   14003cb19:	mov    r8d,DWORD PTR [rdi+0x10108]
   14003cb20:	mov    DWORD PTR [rdi+0x10080],r8d
   14003cb27:	mov    eax,DWORD PTR [rdi+0x1010c]
   14003cb2d:	mov    DWORD PTR [rdi+0x10084],eax
   14003cb33:	lea    r9d,[rax+r8*1]
   14003cb37:	mov    DWORD PTR [rdi+0x10088],r9d
   14003cb3e:	mov    rax,QWORD PTR [rdi+0x100f0]
   14003cb45:	mov    QWORD PTR [rdi+0x10090],rax
   14003cb4c:	mov    rax,QWORD PTR [rdi+0x100f8]
   14003cb53:	mov    QWORD PTR [rdi+0x10098],rax
   14003cb5a:	mov    rax,QWORD PTR [rdi+0x10100]
   14003cb61:	mov    QWORD PTR [rdi+0x100a0],rax
   14003cb68:	mov    eax,DWORD PTR [rdi+0x100d0]
   14003cb6e:	sub    eax,DWORD PTR [rdi+0x100d4]
   14003cb74:	mov    DWORD PTR [rdi+0x100b0],eax
   14003cb7a:	or     r12,0xffffffffffffffff
   14003cb7e:	mov    QWORD PTR [rdi+0x100b8],r12
   14003cb85:	mov    esi,r9d
   14003cb88:	mov    QWORD PTR [rsp+0x70],rsi
   14003cb8d:	lea    eax,[r12+0x69]
   14003cb92:	mul    rsi
   14003cb95:	cmovo  rax,r12
   14003cb99:	add    rax,0x8
   14003cb9d:	cmovb  rax,r12
   14003cba1:	mov    rcx,rax
   14003cba4:	call   0x140055df0
   14003cba9:	mov    QWORD PTR [rsp+0x80],rax
   14003cbb1:	xor    r14d,r14d
   14003cbb4:	test   rax,rax
   14003cbb7:	je     0x14003cbe5
   14003cbb9:	mov    QWORD PTR [rax],rsi
   14003cbbc:	lea    rbx,[rax+0x8]
   14003cbc0:	lea    rax,[rip+0xffffffffffffeb31]        # 0x14003b6f8
   14003cbc7:	mov    QWORD PTR [rsp+0x20],rax
   14003cbcc:	lea    r9,[rip+0xffffffffffffeaa9]        # 0x14003b67c
   14003cbd3:	mov    r8d,esi
   14003cbd6:	lea    edx,[r12+0x69]
   14003cbdb:	mov    rcx,rbx
   14003cbde:	call   0x140055c6c
   14003cbe3:	jmp    0x14003cbe8
   14003cbe5:	mov    rbx,r14
   14003cbe8:	mov    QWORD PTR [rdi+0x10070],rbx
   14003cbef:	mov    esi,r14d
   14003cbf2:	cmp    DWORD PTR [rdi+0x10088],r14d
   14003cbf9:	jbe    0x14003ccc5
   14003cbff:	mov    eax,esi
   14003cc01:	imul   rbx,rax,0x68
   14003cc05:	add    rbx,QWORD PTR [rdi+0x10070]
   14003cc0c:	mov    BYTE PTR [rbx],r14b
   14003cc0f:	mov    ecx,DWORD PTR [rdi+0x100b0]
   14003cc15:	add    ecx,0x10
   14003cc18:	call   0x140055df0
   14003cc1d:	mov    QWORD PTR [rbx+0x28],rax
   14003cc21:	mov    rcx,rax
   14003cc24:	not    rcx
   14003cc27:	inc    rcx
   14003cc2a:	and    ecx,0xf
   14003cc2d:	add    rcx,rax
   14003cc30:	mov    QWORD PTR [rbx+0x30],rcx
   14003cc34:	mov    QWORD PTR [rbx+0x58],r14
   14003cc38:	mov    QWORD PTR [rbx+0x50],r14
   14003cc3c:	mov    QWORD PTR [rbx+0x48],r14
   14003cc40:	mov    QWORD PTR [rbx+0x40],r14
   14003cc44:	cmp    esi,DWORD PTR [rdi+0x10080]
   14003cc4a:	jae    0x14003cca7
   14003cc4c:	mov    ecx,DWORD PTR [rdi+0x100b0]
   14003cc52:	mov    r8d,0x100000
   14003cc58:	cmp    ecx,r8d
   14003cc5b:	cmova  r8d,ecx
   14003cc5f:	mov    QWORD PTR [rbx+0x48],r8
   14003cc63:	mov    ecx,DWORD PTR [rdi+0x10088]
   14003cc69:	cmp    ecx,0x190
   14003cc6f:	jbe    0x14003cc9a
   14003cc71:	mov    eax,0x51eb851f
   14003cc76:	mul    ecx
   14003cc78:	shr    edx,0x7
   14003cc7b:	mov    ecx,edx
   14003cc7d:	xor    edx,edx
   14003cc7f:	mov    eax,r8d
   14003cc82:	div    rcx
   14003cc85:	mov    QWORD PTR [rbx+0x48],rax
   14003cc89:	mov    ecx,DWORD PTR [rdi+0x100b0]
   14003cc8f:	cmp    rax,rcx
   14003cc92:	cmovb  rax,r14
   14003cc96:	mov    QWORD PTR [rbx+0x48],rax
   14003cc9a:	mov    rcx,QWORD PTR [rbx+0x48]
   14003cc9e:	call   0x140055df0
   14003cca3:	mov    QWORD PTR [rbx+0x40],rax
   14003cca7:	mov    QWORD PTR [rbx+0x10],r14
   14003ccab:	mov    QWORD PTR [rbx+0x20],r12
   14003ccaf:	mov    QWORD PTR [rbx+0x8],rbp
   14003ccb3:	mov    QWORD PTR [rbx+0x18],r14
   14003ccb7:	inc    esi
   14003ccb9:	cmp    esi,DWORD PTR [rdi+0x10088]
   14003ccbf:	jb     0x14003cbff
   14003ccc5:	mov    rbx,QWORD PTR [rsp+0x78]
   14003ccca:	add    rsp,0x40
   14003ccce:	pop    r14
   14003ccd0:	pop    r12
   14003ccd2:	pop    rdi
   14003ccd3:	pop    rsi
   14003ccd4:	pop    rbp
   14003ccd5:	ret    
   14003ccd6:	int3   
   14003ccd7:	int3   
   14003ccd8:	rex push rbx
   14003ccda:	sub    rsp,0xa0
   14003cce1:	mov    rax,QWORD PTR [rip+0x451f8]        # 0x140081ee0
   14003cce8:	xor    rax,rsp
   14003cceb:	mov    QWORD PTR [rsp+0x90],rax
   14003ccf3:	mov    r10d,r8d
   14003ccf6:	mov    bl,r9b
   14003ccf9:	mov    r8,rdx
   14003ccfc:	mov    r9d,edx
   14003ccff:	shr    r8,0x20
   14003cd03:	mov    edx,r10d
   14003cd06:	mov    ecx,0x65
   14003cd0b:	call   0x14003b620
   14003cd10:	and    DWORD PTR [rsp+0x80],0x0
   14003cd18:	lea    rcx,[rsp+0x20]
   14003cd1d:	and    DWORD PTR [rsp+0x84],0x0
   14003cd25:	neg    bl
   14003cd27:	sbb    eax,eax
   14003cd29:	add    eax,0x68
   14003cd2c:	mov    DWORD PTR [rsp+0x88],eax
   14003cd33:	call   0x1400479a4
   14003cd38:	lea    rcx,[rip+0x33441]        # 0x140070180
   14003cd3f:	call   0x14001796c
   14003cd44:	mov    rcx,QWORD PTR [rsp+0x90]
   14003cd4c:	xor    rcx,rsp
   14003cd4f:	call   0x140055f90
   14003cd54:	add    rsp,0xa0
   14003cd5b:	pop    rbx
   14003cd5c:	ret    
   14003cd5d:	int3   
   14003cd5e:	int3   
   14003cd5f:	int3   
   14003cd60:	mov    rax,rsp
   14003cd63:	mov    QWORD PTR [rax+0x10],rbx
   14003cd67:	mov    QWORD PTR [rax+0x18],rbp
   14003cd6b:	mov    QWORD PTR [rax+0x20],rsi
   14003cd6f:	push   rdi
   14003cd70:	sub    rsp,0x30
   14003cd74:	mov    rdx,QWORD PTR [rcx+0x28]
   14003cd78:	lea    r8,[rax+0x8]
   14003cd7c:	mov    rdi,rcx
   14003cd7f:	mov    rcx,QWORD PTR [rcx+0x20]
   14003cd83:	call   0x14003e248
   14003cd88:	cmp    eax,0x3
   14003cd8b:	jne    0x14003ce35
   14003cd91:	mov    rcx,QWORD PTR [rdi+0x20]
   14003cd95:	xor    esi,esi
   14003cd97:	mov    QWORD PTR [rdi+0x100a8],rsi
   14003cd9e:	mov    ebx,esi
   14003cda0:	call   0x14000e7f0
   14003cda5:	test   rax,rax
   14003cda8:	je     0x14003cdd2
   14003cdaa:	mov    rcx,QWORD PTR [rdi+0x20]
   14003cdae:	cmp    BYTE PTR [rcx+0x7fa0],sil
   14003cdb5:	jne    0x14003cdd2
   14003cdb7:	mov    rax,QWORD PTR [rcx+0x7f78]
   14003cdbe:	mov    QWORD PTR [rdi+0x100a8],rax
   14003cdc5:	mov    ebx,DWORD PTR [rcx+0x5854]
   14003cdcb:	add    rbx,QWORD PTR [rcx+0x7f78]
   14003cdd2:	lea    r8,[rdi+0x100c0]
   14003cdd9:	mov    BYTE PTR [rsp+0x20],0x1
   14003cdde:	xor    r9d,r9d
   14003cde1:	mov    rdx,rbx
   14003cde4:	mov    rcx,rdi
   14003cde7:	call   0x14003f014
   14003cdec:	mov    rcx,QWORD PTR [rdi+0x20]
   14003cdf0:	cmp    rax,0xffffffffffffffff
   14003cdf4:	mov    rbp,rax
   14003cdf7:	setne  bl
   14003cdfa:	mov    dl,BYTE PTR [rcx+0x7f94]
   14003ce00:	lea    r8,[rcx+0x26]
   14003ce04:	mov    cl,bl
   14003ce06:	call   0x14003f304
   14003ce0b:	test   bl,bl
   14003ce0d:	jne    0x14003ce22
   14003ce0f:	mov    rcx,QWORD PTR [rdi+0x20]
   14003ce13:	cmp    BYTE PTR [rcx+0x7f94],sil
   14003ce1a:	sete   sil
   14003ce1e:	mov    eax,esi
   14003ce20:	jmp    0x14003ce35
   14003ce22:	mov    rdx,rbp
   14003ce25:	mov    rcx,rdi
   14003ce28:	call   0x14003caf4
   14003ce2d:	mov    rcx,rdi
   14003ce30:	call   0x14003c1b8
   14003ce35:	mov    rbx,QWORD PTR [rsp+0x48]
   14003ce3a:	mov    rbp,QWORD PTR [rsp+0x50]
   14003ce3f:	mov    rsi,QWORD PTR [rsp+0x58]
   14003ce44:	add    rsp,0x30
   14003ce48:	pop    rdi
   14003ce49:	ret    
   14003ce4a:	int3   
   14003ce4b:	int3   
   14003ce4c:	mov    QWORD PTR [rsp+0x8],rbx
   14003ce51:	push   rdi
   14003ce52:	sub    rsp,0x20
   14003ce56:	mov    edi,edx
   14003ce58:	mov    rbx,rcx
   14003ce5b:	mov    edx,0x1
   14003ce60:	call   0x14003b798
   14003ce65:	mov    r8,QWORD PTR [rbx+0x8]
   14003ce69:	mov    rax,QWORD PTR [rbx]
   14003ce6c:	mov    rbx,QWORD PTR [rsp+0x30]
   14003ce71:	mov    DWORD PTR [rax+r8*4-0x4],edi
   14003ce76:	add    rsp,0x20
   14003ce7a:	pop    rdi
   14003ce7b:	ret    
   14003ce7c:	mov    QWORD PTR [rsp+0x8],rbx
   14003ce81:	push   rdi
   14003ce82:	sub    rsp,0x20
   14003ce86:	mov    rdi,rdx
   14003ce89:	mov    rbx,rcx
   14003ce8c:	mov    edx,0x1
   14003ce91:	call   0x14003b83c
   14003ce96:	mov    rax,QWORD PTR [rbx+0x8]
   14003ce9a:	movups xmm0,XMMWORD PTR [rdi]
   14003ce9d:	lea    rcx,[rax+rax*2]
   14003cea1:	mov    rax,QWORD PTR [rbx]
   14003cea4:	mov    rbx,QWORD PTR [rsp+0x30]
   14003cea9:	movups XMMWORD PTR [rax+rcx*8-0x18],xmm0
   14003ceae:	movsd  xmm1,QWORD PTR [rdi+0x10]
   14003ceb3:	movsd  QWORD PTR [rax+rcx*8-0x8],xmm1
   14003ceb9:	add    rsp,0x20
   14003cebd:	pop    rdi
   14003cebe:	ret    
   14003cebf:	int3   
   14003cec0:	mov    QWORD PTR [rsp+0x8],rbx
   14003cec5:	mov    QWORD PTR [rsp+0x10],rbp
   14003ceca:	mov    QWORD PTR [rsp+0x18],rsi
   14003cecf:	push   rdi
   14003ced0:	sub    rsp,0x20
   14003ced4:	movsxd rax,r8d
   14003ced7:	mov    rbx,r9
   14003ceda:	mov    r8,QWORD PTR [r9]
   14003cedd:	mov    rbp,rdx
   14003cee0:	mov    rsi,rcx
   14003cee3:	cmp    r8,rax
   14003cee6:	jge    0x14003cf09
   14003cee8:	lea    rcx,[r8+rdx*1]
   14003ceec:	sub    rax,r8
   14003ceef:	mov    rdi,r8
   14003cef2:	xor    edx,edx
   14003cef4:	mov    r8,rax
   14003cef7:	call   0x140058f40
   14003cefc:	cmp    BYTE PTR [rsp+0x50],0x0
   14003cf01:	je     0x14003cf19
   14003cf03:	and    QWORD PTR [rbx],0x0
   14003cf07:	jmp    0x14003cf19
   14003cf09:	cmp    BYTE PTR [rsp+0x50],0x0
   14003cf0e:	mov    rdi,rax
   14003cf11:	je     0x14003cf19
   14003cf13:	sub    r8,rax
   14003cf16:	mov    QWORD PTR [r9],r8
   14003cf19:	mov    rax,QWORD PTR [rsi]
   14003cf1c:	mov    r8,rdi
   14003cf1f:	mov    rdx,rbp
   14003cf22:	mov    rcx,rsi
   14003cf25:	mov    rbx,QWORD PTR [rsp+0x30]
   14003cf2a:	mov    rbp,QWORD PTR [rsp+0x38]
   14003cf2f:	mov    rsi,QWORD PTR [rsp+0x40]
   14003cf34:	add    rsp,0x20
   14003cf38:	pop    rdi
   14003cf39:	rex.W jmp QWORD PTR [rax+0x10]
   14003cf3d:	int3   
   14003cf3e:	int3   
   14003cf3f:	int3   
   14003cf40:	mov    rax,rsp
   14003cf43:	push   rbp
   14003cf44:	push   rsi
   14003cf45:	push   rdi
   14003cf46:	push   r12
   14003cf48:	push   r13
   14003cf4a:	push   r14
   14003cf4c:	push   r15
   14003cf4e:	sub    rsp,0xf0
   14003cf55:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   14003cf5e:	mov    QWORD PTR [rax+0x18],rbx
   14003cf62:	mov    rax,QWORD PTR [rip+0x44f77]        # 0x140081ee0
   14003cf69:	xor    rax,rsp
   14003cf6c:	mov    QWORD PTR [rsp+0xe0],rax
   14003cf74:	mov    r12b,r9b
   14003cf77:	mov    BYTE PTR [rsp+0x30],r9b
   14003cf7c:	mov    DWORD PTR [rsp+0x34],r8d
   14003cf81:	mov    rbx,rdx
   14003cf84:	mov    rdi,rcx
   14003cf87:	xor    r10d,r10d
   14003cf8a:	cmp    DWORD PTR [rcx+0x10080],r10d
   14003cf91:	jbe    0x14003cfb1
   14003cf93:	mov    eax,r10d
   14003cf96:	imul   rcx,rax,0x68
   14003cf9a:	mov    rax,QWORD PTR [rdi+0x10070]
   14003cfa1:	mov    BYTE PTR [rcx+rax*1],0x0
   14003cfa5:	inc    r10d
   14003cfa8:	cmp    r10d,DWORD PTR [rdi+0x10080]
   14003cfaf:	jb     0x14003cf93
   14003cfb1:	mov    rdx,QWORD PTR [rdi+0x20]
   14003cfb5:	lea    rcx,[rsp+0x40]
   14003cfba:	call   0x140036498
   14003cfbf:	nop
   14003cfc0:	lea    r9,[rsp+0x40]
   14003cfc5:	lea    r8,[rsp+0x80]
   14003cfcd:	mov    rdx,rbx
   14003cfd0:	mov    rcx,rdi
   14003cfd3:	call   0x14003d290
   14003cfd8:	test   al,al
   14003cfda:	jne    0x14003cfe8
   14003cfdc:	mov    r14d,DWORD PTR [rdi+0x10080]
   14003cfe3:	jmp    0x14003d251
   14003cfe8:	xor    r14d,r14d
   14003cfeb:	mov    eax,DWORD PTR [rsp+0x90]
   14003cff2:	sub    eax,DWORD PTR [rsp+0x94]
   14003cff9:	cmp    eax,DWORD PTR [rdi+0x100b0]
   14003cfff:	jae    0x14003d007
   14003d001:	mov    DWORD PTR [rdi+0x100b0],eax
   14003d007:	xor    ebp,ebp
   14003d009:	cmp    DWORD PTR [rdi+0x10080],ebp
   14003d00f:	jbe    0x14003d251
   14003d015:	mov    r13d,ebp
   14003d018:	imul   rsi,r13,0x68
   14003d01c:	add    rsi,QWORD PTR [rdi+0x10070]
   14003d023:	imul   r13,QWORD PTR [rdi+0x10098]
   14003d02b:	add    r13,QWORD PTR [rsp+0xa0]
   14003d033:	mov    rdx,QWORD PTR [rsi+0x10]
   14003d037:	add    rdx,r13
   14003d03a:	mov    QWORD PTR [rsi+0x8],rdx
   14003d03e:	mov    r15d,DWORD PTR [rdi+0x100b0]
   14003d045:	mov    eax,DWORD PTR [rdi+0x10080]
   14003d04b:	dec    eax
   14003d04d:	cmp    ebp,eax
   14003d04f:	cmove  r15d,DWORD PTR [rsp+0xa8]
   14003d058:	mov    rcx,rdx
   14003d05b:	sub    rcx,QWORD PTR [rsi+0x50]
   14003d05f:	js     0x14003d08a
   14003d061:	mov    rax,QWORD PTR [rsi+0x58]
   14003d065:	cmp    rcx,rax
   14003d068:	jae    0x14003d08a
   14003d06a:	mov    r8d,r15d
   14003d06d:	sub    rax,rcx
   14003d070:	cmp    rax,r8
   14003d073:	jb     0x14003d08a
   14003d075:	mov    rdx,QWORD PTR [rsi+0x40]
   14003d079:	add    rdx,rcx
   14003d07c:	mov    rcx,QWORD PTR [rsi+0x30]
   14003d080:	call   0x140059180
   14003d085:	mov    ebx,r15d
   14003d088:	jmp    0x14003d0f2
   14003d08a:	mov    rcx,QWORD PTR [rdi+0x20]
   14003d08e:	mov    rax,QWORD PTR [rcx]
   14003d091:	xor    r8d,r8d
   14003d094:	call   QWORD PTR [rax+0x18]
   14003d097:	mov    rcx,QWORD PTR [rdi+0x20]
   14003d09b:	mov    r12d,r15d
   14003d09e:	mov    rax,QWORD PTR [rcx]
   14003d0a1:	mov    r8d,r15d
   14003d0a4:	mov    rdx,QWORD PTR [rsi+0x30]
   14003d0a8:	call   QWORD PTR [rax+0x10]
   14003d0ab:	mov    ebx,eax
   14003d0ad:	mov    r8,QWORD PTR [rsi+0x48]
   14003d0b1:	mov    rcx,QWORD PTR [rdi+0x10098]
   14003d0b8:	sub    rcx,QWORD PTR [rsp+0xa0]
   14003d0c0:	cmp    r8,rcx
   14003d0c3:	jae    0x14003d0e8
   14003d0c5:	mov    rcx,QWORD PTR [rdi+0x20]
   14003d0c9:	mov    r9,QWORD PTR [rcx]
   14003d0cc:	mov    rdx,QWORD PTR [rsi+0x40]
   14003d0d0:	call   QWORD PTR [r9+0x10]
   14003d0d4:	movsxd rcx,eax
   14003d0d7:	mov    QWORD PTR [rsi+0x58],rcx
   14003d0db:	mov    rcx,QWORD PTR [rsi+0x8]
   14003d0df:	add    rcx,r12
   14003d0e2:	mov    QWORD PTR [rsi+0x50],rcx
   14003d0e6:	jmp    0x14003d0ed
   14003d0e8:	and    QWORD PTR [rsi+0x58],0x0
   14003d0ed:	mov    r12b,BYTE PTR [rsp+0x30]
   14003d0f2:	mov    eax,DWORD PTR [rdi+0x100b0]
   14003d0f8:	cmp    ebx,eax
   14003d0fa:	jae    0x14003d10e
   14003d0fc:	sub    eax,ebx
   14003d0fe:	mov    r8d,eax
   14003d101:	mov    ecx,ebx
   14003d103:	add    rcx,QWORD PTR [rsi+0x30]
   14003d107:	xor    edx,edx
   14003d109:	call   0x140058f40
   14003d10e:	mov    QWORD PTR [rsi+0x38],rbx
   14003d112:	lea    rcx,[rsp+0x40]
   14003d117:	call   0x140036564
   14003d11c:	mov    QWORD PTR [rsi+0x60],rax
   14003d120:	mov    r8,rbx
   14003d123:	mov    rdx,QWORD PTR [rsi+0x30]
   14003d127:	xor    ecx,ecx
   14003d129:	call   0x140017bec
   14003d12e:	cmp    rax,QWORD PTR [rsi+0x60]
   14003d132:	sete   al
   14003d135:	mov    BYTE PTR [rsi],al
   14003d137:	test   al,al
   14003d139:	jne    0x14003d231
   14003d13f:	test   r12b,r12b
   14003d142:	je     0x14003d231
   14003d148:	cmp    r14d,DWORD PTR [rsp+0x34]
   14003d14d:	ja     0x14003d231
   14003d153:	mov    rdx,QWORD PTR [rsi+0x8]
   14003d157:	cmp    rdx,0x800000
   14003d15e:	jbe    0x14003d169
   14003d160:	add    rdx,0xffffffffff800000
   14003d167:	jmp    0x14003d16b
   14003d169:	xor    edx,edx
   14003d16b:	lea    r8,[rdx+0x1000000]
   14003d172:	mov    QWORD PTR [rsp+0x20],rsi
   14003d177:	mov    r9d,r15d
   14003d17a:	mov    rcx,rdi
   14003d17d:	call   0x14003ee34
   14003d182:	mov    rcx,rax
   14003d185:	cmp    rax,0xffffffffffffffff
   14003d189:	jne    0x14003d1f2
   14003d18b:	xor    r10d,r10d
   14003d18e:	mov    r8d,ebp
   14003d191:	test   ebp,ebp
   14003d193:	js     0x14003d1cb
   14003d195:	movsxd rcx,ebp
   14003d198:	mov    r9,QWORD PTR [rdi+0x10070]
   14003d19f:	imul   rax,rcx,0x68
   14003d1a3:	lea    rdx,[r9+0x20]
   14003d1a7:	add    rdx,rax
   14003d1aa:	cmp    QWORD PTR [rdx],0xffffffffffffffff
   14003d1ae:	jne    0x14003d1bf
   14003d1b0:	dec    r8d
   14003d1b3:	sub    rdx,0x68
   14003d1b7:	sub    rcx,0x1
   14003d1bb:	jns    0x14003d1aa
   14003d1bd:	jmp    0x14003d1cb
   14003d1bf:	movsxd rax,r8d
   14003d1c2:	imul   rcx,rax,0x68
   14003d1c6:	mov    r10,QWORD PTR [rcx+r9*1+0x20]
   14003d1cb:	mov    r8,QWORD PTR [rsi+0x8]
   14003d1cf:	add    r8,0x800000
   14003d1d6:	mov    QWORD PTR [rsp+0x20],rsi
   14003d1db:	mov    r9d,r15d
   14003d1de:	mov    rdx,r10
   14003d1e1:	mov    rcx,rdi
   14003d1e4:	call   0x14003ee34
   14003d1e9:	mov    rcx,rax
   14003d1ec:	cmp    rax,0xffffffffffffffff
   14003d1f0:	je     0x14003d231
   14003d1f2:	mov    rax,rcx
   14003d1f5:	sub    rax,r13
   14003d1f8:	mov    r8,rax
   14003d1fb:	sub    r8,QWORD PTR [rsi+0x10]
   14003d1ff:	mov    QWORD PTR [rsi+0x10],rax
   14003d203:	mov    QWORD PTR [rsi+0x8],rcx
   14003d207:	mov    BYTE PTR [rsi],0x1
   14003d20a:	lea    edx,[rbp+0x1]
   14003d20d:	cmp    edx,DWORD PTR [rdi+0x10080]
   14003d213:	jae    0x14003d236
   14003d215:	mov    eax,edx
   14003d217:	imul   rcx,rax,0x68
   14003d21b:	mov    rax,QWORD PTR [rdi+0x10070]
   14003d222:	add    QWORD PTR [rcx+rax*1+0x10],r8
   14003d227:	inc    edx
   14003d229:	cmp    edx,DWORD PTR [rdi+0x10080]
   14003d22f:	jb     0x14003d215
   14003d231:	cmp    BYTE PTR [rsi],0x0
   14003d234:	je     0x14003d240
   14003d236:	mov    rax,QWORD PTR [rsi+0x8]
   14003d23a:	mov    QWORD PTR [rsi+0x20],rax
   14003d23e:	jmp    0x14003d243
   14003d240:	inc    r14d
   14003d243:	inc    ebp
   14003d245:	cmp    ebp,DWORD PTR [rdi+0x10080]
   14003d24b:	jb     0x14003d015
   14003d251:	mov    rcx,QWORD PTR [rsp+0x40]
   14003d256:	test   rcx,rcx
   14003d259:	je     0x14003d260
   14003d25b:	call   0x14005a938
   14003d260:	mov    eax,r14d
   14003d263:	mov    rcx,QWORD PTR [rsp+0xe0]
   14003d26b:	xor    rcx,rsp
   14003d26e:	call   0x140055f90
   14003d273:	mov    rbx,QWORD PTR [rsp+0x140]
   14003d27b:	add    rsp,0xf0
   14003d282:	pop    r15
   14003d284:	pop    r14
   14003d286:	pop    r13
   14003d288:	pop    r12
   14003d28a:	pop    rdi
   14003d28b:	pop    rsi
   14003d28c:	pop    rbp
   14003d28d:	ret    
   14003d28e:	int3   
   14003d28f:	int3   
   14003d290:	rex push rbx
   14003d292:	push   rbp
   14003d293:	push   rsi
   14003d294:	push   rdi
   14003d295:	push   r14
   14003d297:	push   r15
   14003d299:	sub    rsp,0x98
   14003d2a0:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14003d2a9:	mov    rax,QWORD PTR [rip+0x44c30]        # 0x140081ee0
   14003d2b0:	xor    rax,rsp
   14003d2b3:	mov    QWORD PTR [rsp+0x80],rax
   14003d2bb:	mov    r15,r9
   14003d2be:	mov    r14,r8
   14003d2c1:	mov    rbx,rcx
   14003d2c4:	mov    rcx,QWORD PTR [rcx+0x20]
   14003d2c8:	mov    rax,QWORD PTR [rcx]
   14003d2cb:	xor    r8d,r8d
   14003d2ce:	call   QWORD PTR [rax+0x18]
   14003d2d1:	mov    rcx,QWORD PTR [rbx+0x20]
   14003d2d5:	mov    rax,QWORD PTR [rcx]
   14003d2d8:	mov    r8d,0x10
   14003d2de:	lea    rdx,[rsp+0x70]
   14003d2e3:	call   QWORD PTR [rax+0x10]
   14003d2e6:	cmp    eax,0x10
   14003d2e9:	jne    0x14003d45d
   14003d2ef:	mov    ebp,DWORD PTR [rsp+0x7c]
   14003d2f3:	lea    eax,[rbp-0x41]
   14003d2f6:	cmp    eax,0xfffbf
   14003d2fb:	ja     0x14003d45d
   14003d301:	mov    esi,DWORD PTR [rsp+0x78]
   14003d305:	shl    rsi,0x20
   14003d309:	mov    eax,DWORD PTR [rsp+0x74]
   14003d30d:	add    rsi,rax
   14003d310:	mov    rdx,QWORD PTR [rbx+0x20]
   14003d314:	lea    rcx,[rsp+0x30]
   14003d319:	call   0x140036498
   14003d31e:	nop
   14003d31f:	lea    rdi,[rsp+0x30]
   14003d324:	test   r15,r15
   14003d327:	cmovne rdi,r15
   14003d32b:	mov    rcx,rdi
   14003d32e:	call   0x14003687c
   14003d333:	mov    r8d,0x10
   14003d339:	lea    rdx,[rsp+0x70]
   14003d33e:	mov    rcx,rdi
   14003d341:	call   0x14003674c
   14003d346:	lea    rbx,[rbp-0x10]
   14003d34a:	mov    rdx,rbx
   14003d34d:	mov    rcx,rdi
   14003d350:	call   0x140036798
   14003d355:	cmp    rax,rbx
   14003d358:	jne    0x14003d448
   14003d35e:	mov    rdx,QWORD PTR [rdi]
   14003d361:	lea    r8d,[rbp-0xc]
   14003d365:	add    rdx,0xc
   14003d369:	or     rcx,0xffffffffffffffff
   14003d36d:	call   0x140017bec
   14003d372:	not    rax
   14003d375:	cmp    rax,rsi
   14003d378:	jne    0x14003d448
   14003d37e:	mov    r8d,0x4
   14003d384:	mov    rdx,r14
   14003d387:	mov    rcx,rdi
   14003d38a:	call   0x140036594
   14003d38f:	mov    rcx,rdi
   14003d392:	call   0x140036564
   14003d397:	mov    QWORD PTR [r14+0x8],rax
   14003d39b:	mov    rcx,rdi
   14003d39e:	call   0x14003651c
   14003d3a3:	mov    DWORD PTR [r14+0x10],eax
   14003d3a7:	mov    rcx,rdi
   14003d3aa:	call   0x14003651c
   14003d3af:	mov    DWORD PTR [r14+0x14],eax
   14003d3b3:	mov    rcx,rdi
   14003d3b6:	call   0x1400364c0
   14003d3bb:	mov    BYTE PTR [r14+0x18],al
   14003d3bf:	mov    rcx,rdi
   14003d3c2:	call   0x1400364c0
   14003d3c7:	mov    BYTE PTR [r14+0x19],al
   14003d3cb:	mov    rcx,rdi
   14003d3ce:	call   0x140036564
   14003d3d3:	mov    QWORD PTR [r14+0x20],rax
   14003d3d7:	mov    rcx,rdi
   14003d3da:	call   0x14003651c
   14003d3df:	mov    DWORD PTR [r14+0x28],eax
   14003d3e3:	mov    rcx,rdi
   14003d3e6:	call   0x140036564
   14003d3eb:	mov    QWORD PTR [r14+0x30],rax
   14003d3ef:	mov    rcx,rdi
   14003d3f2:	call   0x140036564
   14003d3f7:	mov    QWORD PTR [r14+0x38],rax
   14003d3fb:	mov    rcx,rdi
   14003d3fe:	call   0x140036564
   14003d403:	mov    QWORD PTR [r14+0x40],rax
   14003d407:	mov    rcx,rdi
   14003d40a:	call   0x1400364e0
   14003d40f:	movzx  eax,ax
   14003d412:	mov    DWORD PTR [r14+0x48],eax
   14003d416:	mov    rcx,rdi
   14003d419:	call   0x1400364e0
   14003d41e:	movzx  eax,ax
   14003d421:	mov    DWORD PTR [r14+0x4c],eax
   14003d425:	mov    rcx,rdi
   14003d428:	call   0x1400364e0
   14003d42d:	movzx  eax,ax
   14003d430:	mov    DWORD PTR [r14+0x50],eax
   14003d434:	mov    eax,DWORD PTR [r14+0x10]
   14003d438:	cmp    DWORD PTR [r14+0x14],eax
   14003d43c:	jae    0x14003d448
   14003d43e:	cmp    BYTE PTR [r14+0x18],0x1
   14003d443:	sete   bl
   14003d446:	jmp    0x14003d44a
   14003d448:	xor    bl,bl
   14003d44a:	mov    rcx,QWORD PTR [rsp+0x30]
   14003d44f:	test   rcx,rcx
   14003d452:	je     0x14003d459
   14003d454:	call   0x14005a938
   14003d459:	mov    al,bl
   14003d45b:	jmp    0x14003d45f
   14003d45d:	xor    al,al
   14003d45f:	mov    rcx,QWORD PTR [rsp+0x80]
   14003d467:	xor    rcx,rsp
   14003d46a:	call   0x140055f90
   14003d46f:	add    rsp,0x98
   14003d476:	pop    r15
   14003d478:	pop    r14
   14003d47a:	pop    rdi
   14003d47b:	pop    rsi
   14003d47c:	pop    rbp
   14003d47d:	pop    rbx
   14003d47e:	ret    
   14003d47f:	int3   
   14003d480:	mov    rax,rsp
   14003d483:	push   rbp
   14003d484:	push   rdi
   14003d485:	push   r12
   14003d487:	push   r14
   14003d489:	push   r15
   14003d48b:	lea    rbp,[rax-0x5f]
   14003d48f:	sub    rsp,0xf0
   14003d496:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14003d49f:	mov    QWORD PTR [rax+0x10],rbx
   14003d4a3:	mov    QWORD PTR [rax+0x18],rsi
   14003d4a7:	mov    rax,QWORD PTR [rip+0x44a32]        # 0x140081ee0
   14003d4ae:	xor    rax,rsp
   14003d4b1:	mov    QWORD PTR [rbp+0x27],rax
   14003d4b5:	mov    r12,rdx
   14003d4b8:	mov    rbx,rcx
   14003d4bb:	xor    r15d,r15d
   14003d4be:	xor    esi,esi
   14003d4c0:	cmp    DWORD PTR [rcx+0x10084],esi
   14003d4c6:	jbe    0x14003d631
   14003d4cc:	mov    ecx,esi
   14003d4ce:	mov    eax,DWORD PTR [rbx+0x10080]
   14003d4d4:	add    rcx,rax
   14003d4d7:	imul   rdi,rcx,0x68
   14003d4db:	add    rdi,QWORD PTR [rbx+0x10070]
   14003d4e2:	lea    r14,[r15+0x1]
   14003d4e6:	cmp    QWORD PTR [rdi+0x8],r14
   14003d4ea:	cmova  r14,QWORD PTR [rdi+0x8]
   14003d4ef:	mov    rdx,QWORD PTR [rbx+0x20]
   14003d4f3:	lea    rcx,[rbp-0x79]
   14003d4f7:	call   0x140036498
   14003d4fc:	nop
   14003d4fd:	mov    BYTE PTR [rdi],0x0
   14003d500:	test   r15,r15
   14003d503:	je     0x14003d53d
   14003d505:	mov    rdx,QWORD PTR [rbx+0x100a0]
   14003d50c:	add    rdx,r15
   14003d50f:	lea    r9,[rbp-0x79]
   14003d513:	lea    r8,[rbp-0x39]
   14003d517:	mov    rcx,rbx
   14003d51a:	call   0x14003d290
   14003d51f:	test   al,al
   14003d521:	je     0x14003d53d
   14003d523:	cmp    DWORD PTR [rbp+0x17],esi
   14003d526:	jne    0x14003d53d
   14003d528:	cmp    QWORD PTR [rbp-0x19],r12
   14003d52c:	jne    0x14003d53d
   14003d52e:	mov    BYTE PTR [rdi],0x1
   14003d531:	add    r15,QWORD PTR [rbx+0x100a0]
   14003d538:	jmp    0x14003d5ea
   14003d53d:	xor    r15d,r15d
   14003d540:	cmp    BYTE PTR [rdi],r15b
   14003d543:	jne    0x14003d5ea
   14003d549:	test   esi,esi
   14003d54b:	je     0x14003d553
   14003d54d:	cmp    QWORD PTR [rdi-0x60],r14
   14003d551:	je     0x14003d57b
   14003d553:	lea    r9,[rbp-0x79]
   14003d557:	lea    r8,[rbp-0x39]
   14003d55b:	mov    rdx,r14
   14003d55e:	mov    rcx,rbx
   14003d561:	call   0x14003d290
   14003d566:	test   al,al
   14003d568:	je     0x14003d57b
   14003d56a:	cmp    DWORD PTR [rbp+0x17],esi
   14003d56d:	jne    0x14003d57b
   14003d56f:	cmp    QWORD PTR [rbp-0x19],r12
   14003d573:	jne    0x14003d57b
   14003d575:	mov    BYTE PTR [rdi],0x1
   14003d578:	mov    r15,r14
   14003d57b:	cmp    BYTE PTR [rdi],0x0
   14003d57e:	jne    0x14003d5ea
   14003d580:	cmp    r14,QWORD PTR [rbx+0x100b8]
   14003d587:	jae    0x14003d5e5
   14003d589:	mov    BYTE PTR [rsp+0x20],0x0
   14003d58e:	lea    r9,[rbp-0x79]
   14003d592:	lea    r8,[rbp-0x39]
   14003d596:	mov    rdx,r14
   14003d599:	mov    rcx,rbx
   14003d59c:	call   0x14003f014
   14003d5a1:	cmp    rax,0xffffffffffffffff
   14003d5a5:	je     0x14003d5de
   14003d5a7:	mov    ecx,DWORD PTR [rbp+0x17]
   14003d5aa:	cmp    ecx,esi
   14003d5ac:	jne    0x14003d5b6
   14003d5ae:	cmp    QWORD PTR [rbp-0x19],r12
   14003d5b2:	je     0x14003d5d6
   14003d5b4:	cmp    ecx,esi
   14003d5b6:	ja     0x14003d5e5
   14003d5b8:	cmp    ecx,esi
   14003d5ba:	jne    0x14003d5c2
   14003d5bc:	cmp    QWORD PTR [rbp-0x19],r12
   14003d5c0:	ja     0x14003d5e5
   14003d5c2:	mov    r14d,0x1
   14003d5c8:	cmp    DWORD PTR [rbp-0x29],r14d
   14003d5cc:	cmova  r14d,DWORD PTR [rbp-0x29]
   14003d5d1:	add    r14,rax
   14003d5d4:	jmp    0x14003d580
   14003d5d6:	mov    BYTE PTR [rdi],0x1
   14003d5d9:	mov    r15,rax
   14003d5dc:	jmp    0x14003d5e5
   14003d5de:	mov    QWORD PTR [rbx+0x100b8],r14
   14003d5e5:	cmp    BYTE PTR [rdi],0x0
   14003d5e8:	je     0x14003d615
   14003d5ea:	mov    rax,QWORD PTR [rbp-0x19]
   14003d5ee:	mov    QWORD PTR [rdi+0x18],rax
   14003d5f2:	mov    QWORD PTR [rdi+0x8],r15
   14003d5f6:	mov    eax,DWORD PTR [rbx+0x100d4]
   14003d5fc:	mov    QWORD PTR [rbp-0x49],rax
   14003d600:	mov    r8d,DWORD PTR [rbx+0x100b0]
   14003d607:	mov    rdx,QWORD PTR [rdi+0x30]
   14003d60b:	lea    rcx,[rbp-0x79]
   14003d60f:	call   0x140036594
   14003d614:	nop
   14003d615:	mov    rcx,QWORD PTR [rbp-0x79]
   14003d619:	test   rcx,rcx
   14003d61c:	je     0x14003d623
   14003d61e:	call   0x14005a938
   14003d623:	inc    esi
   14003d625:	cmp    esi,DWORD PTR [rbx+0x10084]
   14003d62b:	jb     0x14003d4cc
   14003d631:	mov    rcx,QWORD PTR [rbp+0x27]
   14003d635:	xor    rcx,rsp
   14003d638:	call   0x140055f90
   14003d63d:	lea    r11,[rsp+0xf0]
   14003d645:	mov    rbx,QWORD PTR [r11+0x38]
   14003d649:	mov    rsi,QWORD PTR [r11+0x40]
   14003d64d:	mov    rsp,r11
   14003d650:	pop    r15
   14003d652:	pop    r14
   14003d654:	pop    r12
   14003d656:	pop    rdi
   14003d657:	pop    rbp
   14003d658:	ret    
   14003d659:	int3   
   14003d65a:	int3   
   14003d65b:	int3   
   14003d65c:	rex push rbp
   14003d65e:	push   rsi
   14003d65f:	push   rdi
   14003d660:	push   r12
   14003d662:	push   r13
   14003d664:	push   r14
   14003d666:	push   r15
   14003d668:	lea    rbp,[rsp-0xfc0]
   14003d670:	mov    eax,0x10c0
   14003d675:	call   0x140055f20
   14003d67a:	sub    rsp,rax
   14003d67d:	mov    QWORD PTR [rbp-0x78],0xfffffffffffffffe
   14003d685:	mov    QWORD PTR [rsp+0x1100],rbx
   14003d68d:	mov    rax,QWORD PTR [rip+0x4484c]        # 0x140081ee0
   14003d694:	xor    rax,rsp
   14003d697:	mov    QWORD PTR [rbp+0xfb0],rax
   14003d69e:	mov    rbx,r8
   14003d6a1:	mov    rdi,rdx
   14003d6a4:	mov    QWORD PTR [rbp-0x80],rcx
   14003d6a8:	mov    rcx,rdx
   14003d6ab:	call   0x140020b88
   14003d6b0:	mov    QWORD PTR [rsp+0x78],rax
   14003d6b5:	xor    r15d,r15d
   14003d6b8:	mov    BYTE PTR [rsp+0x30],r15b
   14003d6bd:	xor    edx,edx
   14003d6bf:	mov    rcx,rdi
   14003d6c2:	call   0x140008f4c
   14003d6c7:	test   al,al
   14003d6c9:	je     0x14003d724
   14003d6cb:	mov    BYTE PTR [rsp+0x30],0x1
   14003d6d0:	mov    cl,BYTE PTR [rdi+0x7f8d]
   14003d6d6:	mov    BYTE PTR [rbx+0x7f8d],cl
   14003d6dc:	mov    cl,BYTE PTR [rdi+0x7f8c]
   14003d6e2:	mov    BYTE PTR [rbx+0x7f8c],cl
   14003d6e8:	mov    al,BYTE PTR [rdi+0x7f8f]
   14003d6ee:	mov    BYTE PTR [rbx+0x7f8f],al
   14003d6f4:	mov    al,BYTE PTR [rdi+0x7f93]
   14003d6fa:	mov    BYTE PTR [rbx+0x7f93],al
   14003d700:	mov    al,BYTE PTR [rdi+0x7f94]
   14003d706:	mov    BYTE PTR [rbx+0x7f94],al
   14003d70c:	mov    al,BYTE PTR [rdi+0x7f91]
   14003d712:	mov    BYTE PTR [rbx+0x7f91],al
   14003d718:	mov    al,BYTE PTR [rdi+0x7f92]
   14003d71e:	mov    BYTE PTR [rbx+0x7f92],al
   14003d724:	mov    DWORD PTR [rbx+0x3490],r15d
   14003d72b:	mov    WORD PTR [rbx+0x348c],r15w
   14003d733:	mov    BYTE PTR [rsp+0x20],r15b
   14003d738:	xor    r9d,r9d
   14003d73b:	xor    r8d,r8d
   14003d73e:	xor    edx,edx
   14003d740:	mov    rcx,rbx
   14003d743:	call   0x14000b340
   14003d748:	mov    BYTE PTR [rsp+0x20],r15b
   14003d74d:	xor    r9d,r9d
   14003d750:	xor    r8d,r8d
   14003d753:	lea    edx,[r9+0x1]
   14003d757:	mov    rcx,rbx
   14003d75a:	call   0x14000b340
   14003d75f:	mov    rax,QWORD PTR [rdi]
   14003d762:	mov    rdx,QWORD PTR [rdi+0x7f78]
   14003d769:	add    rdx,0xd
   14003d76d:	xor    r8d,r8d
   14003d770:	mov    rcx,rdi
   14003d773:	call   QWORD PTR [rax+0x18]
   14003d776:	mov    r8d,DWORD PTR [rbx+0x3484]
   14003d77d:	sub    r8d,0xd
   14003d781:	mov    rdx,rbx
   14003d784:	mov    rcx,rdi
   14003d787:	call   0x140020834
   14003d78c:	mov    rax,QWORD PTR [rdi]
   14003d78f:	xor    r8d,r8d
   14003d792:	xor    edx,edx
   14003d794:	mov    rcx,rdi
   14003d797:	call   QWORD PTR [rax+0x18]
   14003d79a:	mov    QWORD PTR [rsp+0x58],r15
   14003d79f:	mov    QWORD PTR [rsp+0x60],r15
   14003d7a4:	mov    QWORD PTR [rsp+0x68],r15
   14003d7a9:	mov    QWORD PTR [rsp+0x70],r15
   14003d7ae:	mov    edx,0x10000
   14003d7b3:	lea    rcx,[rsp+0x58]
   14003d7b8:	call   0x1400079a4
   14003d7bd:	nop
   14003d7be:	mov    r13,r15
   14003d7c1:	mov    rax,QWORD PTR [rdi]
   14003d7c4:	mov    rsi,QWORD PTR [rsp+0x60]
   14003d7c9:	mov    r8,rsi
   14003d7cc:	mov    rdx,QWORD PTR [rsp+0x58]
   14003d7d1:	mov    rcx,rdi
   14003d7d4:	call   QWORD PTR [rax+0x10]
   14003d7d7:	lea    r12,[rsi-0x1000]
   14003d7de:	mov    QWORD PTR [rsp+0x40],r12
   14003d7e3:	mov    QWORD PTR [rsp+0x50],r12
   14003d7e8:	mov    esi,r15d
   14003d7eb:	mov    DWORD PTR [rsp+0x34],r15d
   14003d7f0:	mov    DWORD PTR [rsp+0x38],r15d
   14003d7f5:	lea    r14,[rbx+0x34f0]
   14003d7fc:	xor    edx,edx
   14003d7fe:	mov    rcx,r14
   14003d801:	call   0x140024480
   14003d806:	inc    esi
   14003d808:	mov    DWORD PTR [rsp+0x48],esi
   14003d80c:	test   esi,0xfffff
   14003d812:	jne    0x14003d819
   14003d814:	call   0x140046bb4
   14003d819:	xor    edx,edx
   14003d81b:	mov    rax,r13
   14003d81e:	div    r12
   14003d821:	mov    rsi,rdx
   14003d824:	add    rsi,QWORD PTR [rsp+0x58]
   14003d829:	movzx  r8d,BYTE PTR [rsi+0x2]
   14003d82e:	mov    DWORD PTR [rbx+0x34f4],r8d
   14003d835:	movzx  edx,BYTE PTR [rsi+0x6]
   14003d839:	shl    edx,0x8
   14003d83c:	movzx  eax,BYTE PTR [rsi+0x5]
   14003d840:	add    edx,eax
   14003d842:	mov    DWORD PTR [rbx+0x34fc],edx
   14003d848:	movzx  r15d,BYTE PTR [rsi+0x1b]
   14003d84d:	shl    r15d,0x8
   14003d851:	movzx  eax,BYTE PTR [rsi+0x1a]
   14003d855:	add    r15d,eax
   14003d858:	cmp    r8d,0x74
   14003d85c:	jne    0x14003dcf1
   14003d862:	cmp    edx,0x1000
   14003d868:	jae    0x14003dcf1
   14003d86e:	lea    eax,[r15-0x1]
   14003d872:	cmp    eax,0x7fe
   14003d877:	ja     0x14003dcf1
   14003d87d:	movsxd r12,r15d
   14003d880:	cmp    r12,0x800
   14003d887:	jae    0x14003dcfa
   14003d88d:	movzx  ecx,BYTE PTR [rsi+0x1]
   14003d891:	shl    ecx,0x8
   14003d894:	movzx  eax,BYTE PTR [rsi]
   14003d897:	add    ecx,eax
   14003d899:	mov    DWORD PTR [r14],ecx
   14003d89c:	movzx  ecx,BYTE PTR [rsi+0x4]
   14003d8a0:	shl    ecx,0x8
   14003d8a3:	movzx  eax,BYTE PTR [rsi+0x3]
   14003d8a7:	add    ecx,eax
   14003d8a9:	mov    DWORD PTR [rbx+0x34f8],ecx
   14003d8af:	movzx  ecx,BYTE PTR [rsi+0xa]
   14003d8b3:	shl    ecx,0x8
   14003d8b6:	movzx  eax,BYTE PTR [rsi+0x9]
   14003d8ba:	add    ecx,eax
   14003d8bc:	shl    ecx,0x8
   14003d8bf:	movzx  eax,BYTE PTR [rsi+0x8]
   14003d8c3:	add    ecx,eax
   14003d8c5:	shl    ecx,0x8
   14003d8c8:	movzx  eax,BYTE PTR [rsi+0x7]
   14003d8cc:	add    ecx,eax
   14003d8ce:	mov    DWORD PTR [rbx+0x3504],ecx
   14003d8d4:	movzx  ecx,BYTE PTR [rsi+0xe]
   14003d8d8:	shl    ecx,0x8
   14003d8db:	movzx  eax,BYTE PTR [rsi+0xd]
   14003d8df:	add    ecx,eax
   14003d8e1:	shl    ecx,0x8
   14003d8e4:	movzx  eax,BYTE PTR [rsi+0xc]
   14003d8e8:	add    ecx,eax
   14003d8ea:	shl    ecx,0x8
   14003d8ed:	movzx  eax,BYTE PTR [rsi+0xb]
   14003d8f1:	add    ecx,eax
   14003d8f3:	mov    DWORD PTR [rsp+0x4c],ecx
   14003d8f7:	mov    al,BYTE PTR [rsi+0xf]
   14003d8fa:	mov    BYTE PTR [rbx+0x3508],al
   14003d900:	mov    DWORD PTR [rbx+0x4560],0x2
   14003d90a:	movzx  ecx,BYTE PTR [rsi+0x13]
   14003d90e:	shl    ecx,0x8
   14003d911:	movzx  eax,BYTE PTR [rsi+0x12]
   14003d915:	add    ecx,eax
   14003d917:	shl    ecx,0x8
   14003d91a:	movzx  eax,BYTE PTR [rsi+0x11]
   14003d91e:	add    ecx,eax
   14003d920:	shl    ecx,0x8
   14003d923:	movzx  eax,BYTE PTR [rsi+0x10]
   14003d927:	add    ecx,eax
   14003d929:	mov    DWORD PTR [rbx+0x4564],ecx
   14003d92f:	movzx  edx,BYTE PTR [rsi+0x17]
   14003d933:	shl    edx,0x8
   14003d936:	movzx  eax,BYTE PTR [rsi+0x16]
   14003d93a:	add    edx,eax
   14003d93c:	shl    edx,0x8
   14003d93f:	movzx  eax,BYTE PTR [rsi+0x15]
   14003d943:	add    edx,eax
   14003d945:	shl    edx,0x8
   14003d948:	movzx  eax,BYTE PTR [rsi+0x14]
   14003d94c:	add    edx,eax
   14003d94e:	lea    rcx,[rbx+0x4530]
   14003d955:	call   0x140047710
   14003d95a:	mov    al,BYTE PTR [rsi+0x18]
   14003d95d:	mov    BYTE PTR [rbx+0x3509],al
   14003d963:	mov    al,BYTE PTR [rsi+0x19]
   14003d966:	mov    BYTE PTR [rbx+0x350a],al
   14003d96c:	movzx  ecx,BYTE PTR [rsi+0x1f]
   14003d970:	shl    ecx,0x8
   14003d973:	movzx  eax,BYTE PTR [rsi+0x1e]
   14003d977:	add    ecx,eax
   14003d979:	shl    ecx,0x8
   14003d97c:	movzx  eax,BYTE PTR [rsi+0x1d]
   14003d980:	add    ecx,eax
   14003d982:	shl    ecx,0x8
   14003d985:	movzx  eax,BYTE PTR [rsi+0x1c]
   14003d989:	add    ecx,eax
   14003d98b:	mov    DWORD PTR [rbx+0x350c],ecx
   14003d991:	xor    r9d,r9d
   14003d994:	mov    ecx,r9d
   14003d997:	mov    edx,r9d
   14003d99a:	mov    r8d,DWORD PTR [rbx+0x34f8]
   14003d9a1:	and    r8d,0x100
   14003d9a8:	je     0x14003d9e8
   14003d9aa:	movzx  ecx,BYTE PTR [rsi+0x23]
   14003d9ae:	shl    ecx,0x8
   14003d9b1:	movzx  eax,BYTE PTR [rsi+0x22]
   14003d9b5:	add    ecx,eax
   14003d9b7:	shl    ecx,0x8
   14003d9ba:	movzx  eax,BYTE PTR [rsi+0x21]
   14003d9be:	add    ecx,eax
   14003d9c0:	shl    ecx,0x8
   14003d9c3:	movzx  eax,BYTE PTR [rsi+0x20]
   14003d9c7:	add    ecx,eax
   14003d9c9:	movzx  edx,BYTE PTR [rsi+0x27]
   14003d9cd:	shl    edx,0x8
   14003d9d0:	movzx  eax,BYTE PTR [rsi+0x26]
   14003d9d4:	add    edx,eax
   14003d9d6:	shl    edx,0x8
   14003d9d9:	movzx  eax,BYTE PTR [rsi+0x25]
   14003d9dd:	add    edx,eax
   14003d9df:	shl    edx,0x8
   14003d9e2:	movzx  eax,BYTE PTR [rsi+0x24]
   14003d9e6:	add    edx,eax
   14003d9e8:	shl    rcx,0x20
   14003d9ec:	mov    eax,DWORD PTR [rbx+0x3504]
   14003d9f2:	add    rcx,rax
   14003d9f5:	mov    QWORD PTR [rbx+0x4548],rcx
   14003d9fc:	mov    ecx,edx
   14003d9fe:	shl    rcx,0x20
   14003da02:	mov    eax,DWORD PTR [rsp+0x4c]
   14003da06:	add    rcx,rax
   14003da09:	mov    QWORD PTR [rbx+0x4550],rcx
   14003da10:	mov    eax,0x20
   14003da15:	test   r8d,r8d
   14003da18:	lea    ecx,[rax+0x8]
   14003da1b:	cmovne eax,ecx
   14003da1e:	movsxd rdx,eax
   14003da21:	add    rdx,rsi
   14003da24:	mov    r8,r12
   14003da27:	lea    rcx,[rbp-0x50]
   14003da2b:	call   0x140059180
   14003da30:	test   DWORD PTR [rbx+0x34f8],0x200
   14003da3a:	je     0x14003da8a
   14003da3c:	lea    rcx,[rbp-0x70]
   14003da40:	call   0x14001b6e0
   14003da45:	lea    rcx,[rbp-0x50]
   14003da49:	or     rax,0xffffffffffffffff
   14003da4d:	inc    rax
   14003da50:	cmp    BYTE PTR [rcx+rax*1],0x0
   14003da54:	jne    0x14003da4d
   14003da56:	inc    rax
   14003da59:	lea    r12,[rbx+0x3510]
   14003da60:	movsxd r9,r15d
   14003da63:	sub    r9,rax
   14003da66:	lea    r8,[rbp-0x50]
   14003da6a:	add    r8,rax
   14003da6d:	mov    QWORD PTR [rsp+0x28],0x800
   14003da76:	mov    QWORD PTR [rsp+0x20],r12
   14003da7b:	lea    rdx,[rbp-0x50]
   14003da7f:	lea    rcx,[rbp-0x70]
   14003da83:	call   0x14001b72c
   14003da88:	jmp    0x14003da99
   14003da8a:	lea    r12,[rbx+0x3510]
   14003da91:	xor    r9d,r9d
   14003da94:	mov    WORD PTR [r12],r9w
   14003da99:	mov    edx,DWORD PTR [rbx+0x34f8]
   14003da9f:	mov    r8d,edx
   14003daa2:	and    r8d,0x400
   14003daa9:	mov    r10d,0x28
   14003daaf:	je     0x14003dace
   14003dab1:	bt     edx,0x8
   14003dab5:	lea    eax,[r10-0x8]
   14003dab9:	cmovb  eax,r10d
   14003dabd:	movsxd rcx,r15d
   14003dac0:	add    rax,rcx
   14003dac3:	mov    rcx,QWORD PTR [rax+rsi*1]
   14003dac7:	mov    QWORD PTR [rbx+0x4591],rcx
   14003dace:	mov    eax,DWORD PTR [rbx+0x34fc]
   14003dad4:	sub    eax,0x2
   14003dad7:	test   eax,eax
   14003dad9:	jle    0x14003dcfa
   14003dadf:	test   dl,0x8
   14003dae2:	je     0x14003daff
   14003dae4:	bt     edx,0x8
   14003dae8:	mov    eax,0x20
   14003daed:	cmovb  eax,r10d
   14003daf1:	test   r8d,r8d
   14003daf4:	je     0x14003daf9
   14003daf6:	add    eax,0x8
   14003daf9:	add    eax,0xfffffffe
   14003dafc:	add    eax,r15d
   14003daff:	movsxd r8,eax
   14003db02:	lea    rdx,[rsi+0x2]
   14003db06:	or     ecx,0xffffffff
   14003db09:	call   0x140017ac0
   14003db0e:	not    ax
   14003db11:	mov    cl,BYTE PTR [rbx+0x3509]
   14003db17:	sub    cl,0xf
   14003db1a:	cmp    cl,0x19
   14003db1d:	ja     0x14003db4b
   14003db1f:	mov    cl,BYTE PTR [rbx+0x350a]
   14003db25:	sub    cl,0x30
   14003db28:	cmp    cl,0x8
   14003db2b:	ja     0x14003dcfa
   14003db31:	cmp    BYTE PTR [rbx+0x3508],0x20
   14003db38:	ja     0x14003dcfa
   14003db3e:	movzx  eax,ax
   14003db41:	cmp    eax,DWORD PTR [r14]
   14003db44:	sete   al
   14003db47:	xor    esi,esi
   14003db49:	jmp    0x14003db50
   14003db4b:	xor    esi,esi
   14003db4d:	mov    al,sil
   14003db50:	test   al,al
   14003db52:	je     0x14003dcfa
   14003db58:	mov    rax,QWORD PTR [rdi]
   14003db5b:	mov    edx,DWORD PTR [rbx+0x34fc]
   14003db61:	add    rdx,r13
   14003db64:	xor    r8d,r8d
   14003db67:	mov    rcx,rdi
   14003db6a:	call   QWORD PTR [rax+0x18]
   14003db6d:	movsxd rax,r15d
   14003db70:	mov    BYTE PTR [rbp+rax*1-0x50],sil
   14003db75:	call   0x140046bb4
   14003db7a:	cmp    WORD PTR [r12],si
   14003db7f:	jne    0x14003dbb6
   14003db81:	mov    dl,0x1
   14003db83:	lea    rcx,[rbp-0x50]
   14003db87:	call   0x1400323c8
   14003db8c:	mov    esi,0x800
   14003db91:	mov    r8d,esi
   14003db94:	lea    rdx,[rbp+0x7b0]
   14003db9b:	lea    rcx,[rbp-0x50]
   14003db9f:	call   0x140045cd8
   14003dba4:	mov    r8d,esi
   14003dba7:	mov    rdx,r12
   14003dbaa:	lea    rcx,[rbp+0x7b0]
   14003dbb1:	call   0x1400489f0
   14003dbb6:	mov    ecx,DWORD PTR [rbx+0x34f8]
   14003dbbc:	mov    eax,ecx
   14003dbbe:	btr    eax,0xc
   14003dbc2:	or     DWORD PTR [rsp+0x38],eax
   14003dbc6:	bt     ecx,0x8
   14003dbca:	mov    eax,0x20
   14003dbcf:	lea    edx,[rax+0x8]
   14003dbd2:	cmovb  eax,edx
   14003dbd5:	bt     ecx,0xa
   14003dbd9:	jae    0x14003dbde
   14003dbdb:	add    eax,0x8
   14003dbde:	add    eax,r15d
   14003dbe1:	mov    DWORD PTR [rbx+0x34fc],eax
   14003dbe7:	mov    rdx,r12
   14003dbea:	mov    ecx,0x69
   14003dbef:	call   0x1400013b0
   14003dbf4:	mov    esi,DWORD PTR [rsp+0x34]
   14003dbf8:	mov    r9d,0x1
   14003dbfe:	add    esi,r9d
   14003dc01:	mov    DWORD PTR [rsp+0x34],esi
   14003dc05:	mov    edx,DWORD PTR [r14+0x8]
   14003dc09:	mov    eax,edx
   14003dc0b:	shr    eax,0xe
   14003dc0e:	and    al,r9b
   14003dc11:	mov    BYTE PTR [r14+0x10],al
   14003dc15:	mov    al,dl
   14003dc17:	and    al,r9b
   14003dc1a:	mov    BYTE PTR [r14+0x1098],al
   14003dc21:	mov    eax,edx
   14003dc23:	shr    eax,1
   14003dc25:	and    al,r9b
   14003dc28:	mov    BYTE PTR [r14+0x1099],al
   14003dc2f:	mov    eax,edx
   14003dc31:	shr    eax,0x2
   14003dc34:	and    al,r9b
   14003dc37:	mov    BYTE PTR [r14+0x109b],al
   14003dc3e:	mov    eax,edx
   14003dc40:	shr    eax,0xa
   14003dc43:	and    al,r9b
   14003dc46:	mov    BYTE PTR [r14+0x10a0],al
   14003dc4d:	mov    eax,edx
   14003dc4f:	shr    eax,0x4
   14003dc52:	and    al,r9b
   14003dc55:	mov    BYTE PTR [r14+0x10f0],al
   14003dc5c:	mov    eax,edx
   14003dc5e:	and    eax,0xe0
   14003dc63:	cmp    al,0xe0
   14003dc65:	sete   al
   14003dc68:	mov    BYTE PTR [r14+0x10f1],al
   14003dc6f:	xor    r15d,r15d
   14003dc72:	test   al,al
   14003dc74:	je     0x14003dc7b
   14003dc76:	mov    r8d,r15d
   14003dc79:	jmp    0x14003dc8c
   14003dc7b:	mov    ecx,edx
   14003dc7d:	shr    ecx,0x5
   14003dc80:	and    ecx,0x7
   14003dc83:	mov    r8d,0x10000
   14003dc89:	shl    r8d,cl
   14003dc8c:	movsxd rax,r8d
   14003dc8f:	mov    QWORD PTR [r14+0x10f8],rax
   14003dc96:	mov    eax,edx
   14003dc98:	shr    eax,0x3
   14003dc9b:	and    al,r9b
   14003dc9e:	mov    BYTE PTR [r14+0x10f2],al
   14003dca5:	mov    eax,edx
   14003dca7:	shr    eax,0xb
   14003dcaa:	and    al,r9b
   14003dcad:	mov    BYTE PTR [r14+0x10f3],al
   14003dcb4:	shr    edx,0x8
   14003dcb7:	and    dl,r9b
   14003dcba:	mov    BYTE PTR [r14+0x1101],dl
   14003dcc1:	add    BYTE PTR [r14+0x1a],0xd0
   14003dcc6:	mov    BYTE PTR [rsp+0x20],r15b
   14003dccb:	xor    r9d,r9d
   14003dcce:	xor    r8d,r8d
   14003dcd1:	lea    edx,[r9+0x2]
   14003dcd5:	mov    rcx,rbx
   14003dcd8:	call   0x14000b340
   14003dcdd:	mov    r8,QWORD PTR [rbx+0x4548]
   14003dce4:	mov    rdx,rbx
   14003dce7:	mov    rcx,rdi
   14003dcea:	call   0x140020834
   14003dcef:	jmp    0x14003dd01
   14003dcf1:	mov    esi,DWORD PTR [rsp+0x34]
   14003dcf5:	xor    r15d,r15d
   14003dcf8:	jmp    0x14003dd06
   14003dcfa:	mov    esi,DWORD PTR [rsp+0x34]
   14003dcfe:	xor    r15d,r15d
   14003dd01:	mov    r12,QWORD PTR [rsp+0x40]
   14003dd06:	inc    r13
   14003dd09:	mov    rax,QWORD PTR [rsp+0x78]
   14003dd0e:	add    rax,0xffffffffffffffe0
   14003dd12:	cmp    r13,rax
   14003dd15:	jge    0x14003dd60
   14003dd17:	xor    edx,edx
   14003dd19:	mov    rax,r13
   14003dd1c:	div    r12
   14003dd1f:	test   rdx,rdx
   14003dd22:	mov    esi,DWORD PTR [rsp+0x48]
   14003dd26:	jne    0x14003d806
   14003dd2c:	mov    rax,QWORD PTR [rdi]
   14003dd2f:	xor    r8d,r8d
   14003dd32:	mov    r15,QWORD PTR [rsp+0x50]
   14003dd37:	mov    rdx,r15
   14003dd3a:	mov    rcx,rdi
   14003dd3d:	call   QWORD PTR [rax+0x18]
   14003dd40:	mov    rax,QWORD PTR [rdi]
   14003dd43:	mov    r8,QWORD PTR [rsp+0x60]
   14003dd48:	mov    rdx,QWORD PTR [rsp+0x58]
   14003dd4d:	mov    rcx,rdi
   14003dd50:	call   QWORD PTR [rax+0x10]
   14003dd53:	add    r15,r12
   14003dd56:	mov    QWORD PTR [rsp+0x50],r15
   14003dd5b:	jmp    0x14003d806
   14003dd60:	test   BYTE PTR [rsp+0x38],0x3
   14003dd65:	je     0x14003dd6e
   14003dd67:	mov    BYTE PTR [rbx+0x7f8d],0x1
   14003dd6e:	test   esi,esi
   14003dd70:	je     0x14003dd9a
   14003dd72:	cmp    BYTE PTR [rsp+0x30],r15b
   14003dd77:	jne    0x14003dd96
   14003dd79:	mov    rax,QWORD PTR [rbp-0x80]
   14003dd7d:	cmp    BYTE PTR [rax+0x619c],r15b
   14003dd84:	jne    0x14003dd96
   14003dd86:	call   0x140048864
   14003dd8b:	test   al,al
   14003dd8d:	je     0x14003dd96
   14003dd8f:	mov    BYTE PTR [rbx+0x7f8c],0x1
   14003dd96:	test   esi,esi
   14003dd98:	jne    0x14003ddbb
   14003dd9a:	lea    rdx,[rdi+0x26]
   14003dd9e:	mov    ecx,0x40
   14003dda3:	call   0x1400013b0
   14003dda8:	mov    edx,0xa
   14003ddad:	lea    rcx,[rip+0x56aac]        # 0x140094860
   14003ddb4:	call   0x14001bf08
   14003ddb9:	jmp    0x14003ddfe
   14003ddbb:	mov    rax,QWORD PTR [rbx]
   14003ddbe:	xor    r8d,r8d
   14003ddc1:	xor    edx,edx
   14003ddc3:	mov    rcx,rbx
   14003ddc6:	call   QWORD PTR [rax+0x18]
   14003ddc9:	mov    BYTE PTR [rsp+0x20],r15b
   14003ddce:	xor    r9d,r9d
   14003ddd1:	xor    r8d,r8d
   14003ddd4:	xor    edx,edx
   14003ddd6:	mov    rcx,rbx
   14003ddd9:	call   0x14000b340
   14003ddde:	mov    BYTE PTR [rsp+0x20],r15b
   14003dde3:	xor    r9d,r9d
   14003dde6:	xor    r8d,r8d
   14003dde9:	lea    edx,[r9+0x1]
   14003dded:	mov    rcx,rbx
   14003ddf0:	call   0x14000b340
   14003ddf5:	mov    rcx,rbx
   14003ddf8:	call   0x1400207cc
   14003ddfd:	nop
   14003ddfe:	cmp    QWORD PTR [rsp+0x58],r15
   14003de03:	je     0x14003de0f
   14003de05:	mov    rcx,QWORD PTR [rsp+0x58]
   14003de0a:	call   0x14005a938
   14003de0f:	mov    rcx,QWORD PTR [rbp+0xfb0]
   14003de16:	xor    rcx,rsp
   14003de19:	call   0x140055f90
   14003de1e:	mov    rbx,QWORD PTR [rsp+0x1100]
   14003de26:	add    rsp,0x10c0
   14003de2d:	pop    r15
   14003de2f:	pop    r14
   14003de31:	pop    r13
   14003de33:	pop    r12
   14003de35:	pop    rdi
   14003de36:	pop    rsi
   14003de37:	pop    rbp
   14003de38:	ret    
   14003de39:	int3   
   14003de3a:	int3   
   14003de3b:	int3   
   14003de3c:	mov    QWORD PTR [rsp+0x8],rbx
   14003de41:	push   rbp
   14003de42:	push   rsi
   14003de43:	push   rdi
   14003de44:	push   r12
   14003de46:	push   r13
   14003de48:	push   r14
   14003de4a:	push   r15
   14003de4c:	mov    rbp,rsp
   14003de4f:	sub    rsp,0x70
   14003de53:	mov    rax,QWORD PTR [rdx]
   14003de56:	lea    rdi,[rdx+0x3468]
   14003de5d:	mov    rbx,rdx
   14003de60:	mov    r13,r8
   14003de63:	mov    esi,0x8
   14003de68:	mov    rdx,rdi
   14003de6b:	mov    r8d,esi
   14003de6e:	mov    rcx,rbx
   14003de71:	call   QWORD PTR [rax+0x10]
   14003de74:	lea    r14d,[rsi-0x5]
   14003de78:	cmp    eax,esi
   14003de7a:	jne    0x14003de8b
   14003de7c:	mov    edx,esi
   14003de7e:	mov    rcx,rdi
   14003de81:	call   0x140009360
   14003de86:	cmp    eax,r14d
   14003de89:	je     0x14003de99
   14003de8b:	mov    rax,QWORD PTR [rbx]
   14003de8e:	xor    r8d,r8d
   14003de91:	xor    edx,edx
   14003de93:	mov    rcx,rbx
   14003de96:	call   QWORD PTR [rax+0x18]
   14003de99:	xor    r9d,r9d
   14003de9c:	mov    DWORD PTR [r13+0x7f88],r14d
   14003dea3:	xor    r8d,r8d
   14003dea6:	mov    BYTE PTR [rsp+0x20],0x0
   14003deab:	xor    edx,edx
   14003dead:	mov    rcx,r13
   14003deb0:	call   0x14000b340
   14003deb5:	mov    r15d,0x1000000
   14003debb:	mov    ecx,r15d
   14003debe:	call   0x140055df0
   14003dec3:	mov    rdx,QWORD PTR [rbx]
   14003dec6:	xor    r14d,r14d
   14003dec9:	and    DWORD PTR [rbp-0x34],r14d
   14003decd:	mov    rcx,rbx
   14003ded0:	mov    rsi,rax
   14003ded3:	mov    DWORD PTR [rbp-0x38],r14d
   14003ded7:	mov    BYTE PTR [rbp+0x50],r14b
   14003dedb:	call   QWORD PTR [rdx+0x20]
   14003dede:	mov    r9,QWORD PTR [rbx]
   14003dee1:	xor    r8d,r8d
   14003dee4:	mov    rdx,rax
   14003dee7:	mov    rcx,rbx
   14003deea:	mov    rdi,rax
   14003deed:	call   QWORD PTR [r9+0x18]
   14003def1:	mov    r9,QWORD PTR [rbx]
   14003def4:	mov    r8d,r15d
   14003def7:	mov    rdx,rsi
   14003defa:	mov    rcx,rbx
   14003defd:	call   QWORD PTR [r9+0x10]
   14003df01:	movsxd r15,eax
   14003df04:	lea    r12d,[r14+0xa]
   14003df08:	cmp    r15,0x7
   14003df0c:	jb     0x14003e1fb
   14003df12:	xor    r12d,r12d
   14003df15:	mov    rdx,rsi
   14003df18:	mov    eax,r15d
   14003df1b:	lea    ecx,[r12+0x4]
   14003df20:	mov    r8d,DWORD PTR [rbp-0x34]
   14003df24:	inc    r8d
   14003df27:	mov    DWORD PTR [rbp-0x3c],eax
   14003df2a:	mov    QWORD PTR [rbp-0x18],rdx
   14003df2e:	mov    DWORD PTR [rbp-0x40],ecx
   14003df31:	mov    DWORD PTR [rbp-0x34],r8d
   14003df35:	test   r8d,0xfffff
   14003df3c:	jne    0x14003df4d
   14003df3e:	call   0x140046bb4
   14003df43:	mov    ecx,DWORD PTR [rbp-0x40]
   14003df46:	mov    eax,DWORD PTR [rbp-0x3c]
   14003df49:	mov    rdx,QWORD PTR [rbp-0x18]
   14003df4d:	cdqe   
   14003df4f:	cmp    rax,0x7
   14003df53:	jb     0x14003e1bd
   14003df59:	cmp    r15d,0x1000000
   14003df60:	jne    0x14003df6e
   14003df62:	cmp    rax,0x200000
   14003df68:	jb     0x14003e1bd
   14003df6e:	mov    eax,DWORD PTR [rdx]
   14003df70:	lea    r8d,[rcx+0x3]
   14003df74:	mov    DWORD PTR [rbp+0x58],ecx
   14003df77:	lea    rdx,[rbp+0x58]
   14003df7b:	mov    rcx,rsi
   14003df7e:	mov    DWORD PTR [rbp-0x28],eax
   14003df81:	lea    r9,[rbp+0x48]
   14003df85:	call   0x1400366f0
   14003df8a:	mov    ecx,DWORD PTR [rbp+0x58]
   14003df8d:	mov    rdx,rax
   14003df90:	mov    QWORD PTR [rbp-0x10],rax
   14003df94:	mov    r8d,r15d
   14003df97:	mov    eax,ecx
   14003df99:	mov    DWORD PTR [rbp-0x20],ecx
   14003df9c:	sub    eax,DWORD PTR [rbp-0x40]
   14003df9f:	sub    r8d,ecx
   14003dfa2:	cmp    BYTE PTR [rbp+0x48],0x0
   14003dfa6:	mov    DWORD PTR [rbp-0x30],eax
   14003dfa9:	jne    0x14003e0e0
   14003dfaf:	cmp    r8d,0x6
   14003dfb3:	jl     0x14003e0e0
   14003dfb9:	cmp    edx,0x2
   14003dfbc:	jb     0x14003e0e0
   14003dfc2:	cmp    edx,r8d
   14003dfc5:	jg     0x14003e0e0
   14003dfcb:	mov    eax,0x8
   14003dfd0:	lea    r9,[rbp+0x48]
   14003dfd4:	cmp    r8d,eax
   14003dfd7:	lea    rdx,[rbp+0x58]
   14003dfdb:	cmovg  r8d,eax
   14003dfdf:	add    r8d,ecx
   14003dfe2:	mov    rcx,rsi
   14003dfe5:	call   0x1400366f0
   14003dfea:	mov    r14d,r15d
   14003dfed:	mov    QWORD PTR [rbp-0x8],rax
   14003dff1:	sub    r14d,DWORD PTR [rbp+0x58]
   14003dff5:	cmp    BYTE PTR [rbp+0x48],0x0
   14003dff9:	jne    0x14003e0e0
   14003dfff:	cmp    r14d,0x1
   14003e003:	jl     0x14003e0e0
   14003e009:	lea    ecx,[rax-0x1]
   14003e00c:	cmp    ecx,0x4
   14003e00f:	ja     0x14003e0e0
   14003e015:	mov    rcx,QWORD PTR [rbp-0x10]
   14003e019:	mov    r8d,DWORD PTR [rbp-0x30]
   14003e01d:	mov    edx,DWORD PTR [rbp-0x40]
   14003e020:	add    r8d,ecx
   14003e023:	or     ecx,0xffffffff
   14003e026:	add    rdx,rsi
   14003e029:	call   0x140017ac0
   14003e02e:	not    eax
   14003e030:	cmp    eax,DWORD PTR [rbp-0x28]
   14003e033:	jne    0x14003e0e0
   14003e039:	mov    eax,0x8
   14003e03e:	lea    r9,[rbp+0x48]
   14003e042:	cmp    r14d,eax
   14003e045:	lea    rdx,[rbp+0x58]
   14003e049:	mov    rcx,rsi
   14003e04c:	cmovg  r14d,eax
   14003e050:	add    r14d,DWORD PTR [rbp+0x58]
   14003e054:	mov    r8d,r14d
   14003e057:	call   0x1400366f0
   14003e05c:	cmp    BYTE PTR [rbp+0x48],0x0
   14003e060:	mov    QWORD PTR [rbp-0x28],rax
   14003e064:	jne    0x14003e0e0
   14003e066:	test   al,0x1
   14003e068:	je     0x14003e09b
   14003e06a:	mov    eax,0x3
   14003e06f:	lea    r9,[rbp+0x48]
   14003e073:	mov    r8d,r15d
   14003e076:	lea    rdx,[rbp+0x58]
   14003e07a:	sub    r8d,DWORD PTR [rbp+0x58]
   14003e07e:	mov    rcx,rsi
   14003e081:	cmp    r8d,eax
   14003e084:	cmova  r8d,eax
   14003e088:	add    r8d,DWORD PTR [rbp+0x58]
   14003e08c:	call   0x1400366f0
   14003e091:	cmp    BYTE PTR [rbp+0x48],0x0
   14003e095:	jne    0x14003e0e0
   14003e097:	mov    rax,QWORD PTR [rbp-0x28]
   14003e09b:	xor    r14d,r14d
   14003e09e:	test   al,0x2
   14003e0a0:	je     0x14003e0d1
   14003e0a2:	lea    eax,[r14+0xa]
   14003e0a6:	mov    r8d,r15d
   14003e0a9:	sub    r8d,DWORD PTR [rbp+0x58]
   14003e0ad:	lea    r9,[rbp+0x48]
   14003e0b1:	cmp    r8d,eax
   14003e0b4:	lea    rdx,[rbp+0x58]
   14003e0b8:	mov    rcx,rsi
   14003e0bb:	cmova  r8d,eax
   14003e0bf:	add    r8d,DWORD PTR [rbp+0x58]
   14003e0c3:	call   0x1400366f0
   14003e0c8:	cmp    BYTE PTR [rbp+0x48],0x0
   14003e0cc:	mov    r14,rax
   14003e0cf:	jne    0x14003e0e0
   14003e0d1:	mov    rax,QWORD PTR [rbp-0x8]
   14003e0d5:	cmp    eax,0x1
   14003e0d8:	jne    0x14003e102
   14003e0da:	cmp    BYTE PTR [rbp+0x50],0x0
   14003e0de:	je     0x14003e0f9
   14003e0e0:	mov    eax,DWORD PTR [rbp-0x3c]
   14003e0e3:	inc    r12d
   14003e0e6:	mov    ecx,DWORD PTR [rbp-0x40]
   14003e0e9:	dec    eax
   14003e0eb:	mov    rdx,QWORD PTR [rbp-0x18]
   14003e0ef:	inc    ecx
   14003e0f1:	inc    rdx
   14003e0f4:	jmp    0x14003df20
   14003e0f9:	mov    r15b,0x1
   14003e0fc:	mov    BYTE PTR [rbp+0x50],r15b
   14003e100:	jmp    0x14003e106
   14003e102:	mov    r15b,BYTE PTR [rbp+0x50]
   14003e106:	cmp    eax,0x2
   14003e109:	jne    0x14003e173
   14003e10b:	test   r15b,r15b
   14003e10e:	jne    0x14003e137
   14003e110:	call   0x140048864
   14003e115:	xor    r9d,r9d
   14003e118:	mov    BYTE PTR [r13+0x7f8c],al
   14003e11f:	xor    r8d,r8d
   14003e122:	mov    BYTE PTR [rsp+0x20],r15b
   14003e127:	mov    rcx,r13
   14003e12a:	lea    edx,[r9+0x1]
   14003e12e:	call   0x14000b340
   14003e133:	mov    BYTE PTR [rbp+0x50],0x1
   14003e137:	mov    rax,QWORD PTR [rbx]
   14003e13a:	xor    r8d,r8d
   14003e13d:	inc    DWORD PTR [rbp-0x38]
   14003e140:	mov    rcx,rbx
   14003e143:	movsxd rdx,r12d
   14003e146:	add    rdx,rdi
   14003e149:	call   QWORD PTR [rax+0x18]
   14003e14c:	mov    rcx,rbx
   14003e14f:	call   0x14000e334
   14003e154:	test   rax,rax
   14003e157:	je     0x14003e173
   14003e159:	cmp    DWORD PTR [rbx+0x22d4],0x2
   14003e160:	jne    0x14003e173
   14003e162:	lea    rdx,[rbx+0x3510]
   14003e169:	mov    ecx,0x69
   14003e16e:	call   0x1400013b0
   14003e173:	mov    r15d,DWORD PTR [rbp-0x20]
   14003e177:	mov    rcx,r13
   14003e17a:	sub    r15d,r12d
   14003e17d:	movsxd rdx,r12d
   14003e180:	add    r15d,DWORD PTR [rbp-0x10]
   14003e184:	add    rdx,rsi
   14003e187:	mov    r8d,r15d
   14003e18a:	call   0x1400212ac
   14003e18f:	lea    ecx,[r15+r12*1]
   14003e193:	add    rdi,rcx
   14003e196:	test   r14,r14
   14003e199:	je     0x14003e1c3
   14003e19b:	mov    rax,QWORD PTR [rbx]
   14003e19e:	xor    r8d,r8d
   14003e1a1:	mov    rdx,rdi
   14003e1a4:	mov    rcx,rbx
   14003e1a7:	call   QWORD PTR [rax+0x18]
   14003e1aa:	mov    r8,r14
   14003e1ad:	mov    rdx,r13
   14003e1b0:	mov    rcx,rbx
   14003e1b3:	call   0x140020834
   14003e1b8:	add    rdi,r14
   14003e1bb:	jmp    0x14003e1c3
   14003e1bd:	movsxd rax,r12d
   14003e1c0:	add    rdi,rax
   14003e1c3:	mov    rax,QWORD PTR [rbx]
   14003e1c6:	xor    r8d,r8d
   14003e1c9:	mov    rdx,rdi
   14003e1cc:	mov    rcx,rbx
   14003e1cf:	call   QWORD PTR [rax+0x18]
   14003e1d2:	mov    rax,QWORD PTR [rbx]
   14003e1d5:	mov    r8d,0x1000000
   14003e1db:	mov    rdx,rsi
   14003e1de:	mov    rcx,rbx
   14003e1e1:	call   QWORD PTR [rax+0x10]
   14003e1e4:	movsxd r15,eax
   14003e1e7:	cmp    r15,0x7
   14003e1eb:	jae    0x14003df12
   14003e1f1:	mov    r14d,DWORD PTR [rbp-0x38]
   14003e1f5:	mov    r12d,0xa
   14003e1fb:	mov    rcx,rsi
   14003e1fe:	call   0x140055de8
   14003e203:	test   r14d,r14d
   14003e206:	jne    0x14003e226
   14003e208:	lea    rdx,[rbx+0x26]
   14003e20c:	lea    ecx,[r14+0x40]
   14003e210:	call   0x1400013b0
   14003e215:	mov    edx,r12d
   14003e218:	lea    rcx,[rip+0x56641]        # 0x140094860
   14003e21f:	call   0x14001bf08
   14003e224:	jmp    0x14003e22e
   14003e226:	mov    rcx,r13
   14003e229:	call   0x1400207cc
   14003e22e:	mov    rbx,QWORD PTR [rsp+0xb0]
   14003e236:	add    rsp,0x70
   14003e23a:	pop    r15
   14003e23c:	pop    r14
   14003e23e:	pop    r13
   14003e240:	pop    r12
   14003e242:	pop    rdi
   14003e243:	pop    rsi
   14003e244:	pop    rbp
   14003e245:	ret    
   14003e246:	int3   
   14003e247:	int3   
   14003e248:	mov    r11,rsp
   14003e24b:	mov    QWORD PTR [r11+0x10],rbx
   14003e24f:	mov    QWORD PTR [r11+0x20],rsi
   14003e253:	push   rdi
   14003e254:	sub    rsp,0xa0
   14003e25b:	mov    rax,QWORD PTR [rip+0x43c7e]        # 0x140081ee0
   14003e262:	xor    rax,rsp
   14003e265:	mov    QWORD PTR [rsp+0x90],rax
   14003e26d:	mov    rsi,rcx
   14003e270:	mov    DWORD PTR [r11-0x20],0x5f
   14003e278:	xor    edi,edi
   14003e27a:	lea    rcx,[rsp+0x20]
   14003e27f:	mov    QWORD PTR [r11-0x28],rdi
   14003e283:	mov    rbx,r8
   14003e286:	call   0x1400479a4
   14003e28b:	mov    rax,QWORD PTR [rsi]
   14003e28e:	xor    r8d,r8d
   14003e291:	xor    edx,edx
   14003e293:	mov    BYTE PTR [rsi+0x33e0],dil
   14003e29a:	mov    rcx,rsi
   14003e29d:	call   QWORD PTR [rax+0x18]
   14003e2a0:	xor    edx,edx
   14003e2a2:	mov    rcx,rsi
   14003e2a5:	call   0x140008f4c
   14003e2aa:	mov    BYTE PTR [rbx],al
   14003e2ac:	test   al,al
   14003e2ae:	je     0x14003e2f4
   14003e2b0:	cmp    BYTE PTR [rsi+0x7f93],dil
   14003e2b7:	jne    0x14003e2f4
   14003e2b9:	mov    r9,QWORD PTR [rsi]
   14003e2bc:	xor    r8d,r8d
   14003e2bf:	xor    edx,edx
   14003e2c1:	mov    rcx,rsi
   14003e2c4:	call   QWORD PTR [r9+0x18]
   14003e2c8:	lea    rcx,[rsp+0x20]
   14003e2cd:	mov    QWORD PTR [rsp+0x80],rdi
   14003e2d5:	mov    DWORD PTR [rsp+0x88],0x61
   14003e2e0:	call   0x1400479a4
   14003e2e5:	cmp    BYTE PTR [rsi+0x7f94],dil
   14003e2ec:	sete   dil
   14003e2f0:	mov    eax,edi
   14003e2f2:	jmp    0x14003e2f9
   14003e2f4:	mov    eax,0x3
   14003e2f9:	mov    rcx,QWORD PTR [rsp+0x90]
   14003e301:	xor    rcx,rsp
   14003e304:	call   0x140055f90
   14003e309:	lea    r11,[rsp+0xa0]
   14003e311:	mov    rbx,QWORD PTR [r11+0x18]
   14003e315:	mov    rsi,QWORD PTR [r11+0x28]
   14003e319:	mov    rsp,r11
   14003e31c:	pop    rdi
   14003e31d:	ret    
   14003e31e:	int3   
   14003e31f:	int3   
   14003e320:	rex push rbp
   14003e322:	push   rsi
   14003e323:	push   rdi
   14003e324:	push   r12
   14003e326:	push   r13
   14003e328:	push   r14
   14003e32a:	push   r15
   14003e32c:	lea    rbp,[rsp-0x2490]
   14003e334:	mov    eax,0x2590
   14003e339:	call   0x140055f20
   14003e33e:	sub    rsp,rax
   14003e341:	mov    QWORD PTR [rbp-0x20],0xfffffffffffffffe
   14003e349:	mov    QWORD PTR [rsp+0x25e0],rbx
   14003e351:	mov    rax,QWORD PTR [rip+0x43b88]        # 0x140081ee0
   14003e358:	xor    rax,rsp
   14003e35b:	mov    QWORD PTR [rbp+0x2480],rax
   14003e362:	mov    QWORD PTR [rbp-0x78],rdx
   14003e366:	mov    rsi,rcx
   14003e369:	lea    r8,[rsp+0x40]
   14003e36e:	call   0x14003e248
   14003e373:	cmp    eax,0x3
   14003e376:	jne    0x14003ee08
   14003e37c:	mov    QWORD PTR [rbp-0x30],rsi
   14003e380:	mov    rax,QWORD PTR [rsi]
   14003e383:	mov    rcx,rsi
   14003e386:	call   QWORD PTR [rax+0x20]
   14003e389:	mov    QWORD PTR [rbp-0x28],rax
   14003e38d:	lea    rdx,[rip+0x31df8]        # 0x14007018c
   14003e394:	mov    rcx,rsi
   14003e397:	call   0x14000e8b8
   14003e39c:	mov    ebx,0x100
   14003e3a1:	mov    r15d,0x1
   14003e3a7:	xor    r14d,r14d
   14003e3aa:	test   rax,rax
   14003e3ad:	je     0x14003e440
   14003e3b3:	cmp    BYTE PTR [rsi+0x7fa0],r14b
   14003e3ba:	jne    0x14003e440
   14003e3c0:	xor    edx,edx
   14003e3c2:	lea    rcx,[rbp+0x200]
   14003e3c9:	call   0x140036498
   14003e3ce:	nop
   14003e3cf:	mov    r8,QWORD PTR [rsi+0x6870]
   14003e3d6:	mov    rdx,QWORD PTR [rsi+0x6868]
   14003e3dd:	lea    rcx,[rbp+0x200]
   14003e3e4:	call   0x14003674c
   14003e3e9:	lea    r8d,[r15+0x7]
   14003e3ed:	lea    rdx,[rbp+0x270]
   14003e3f4:	lea    rcx,[rbp+0x200]
   14003e3fb:	call   0x140036594
   14003e400:	lea    rcx,[rbp+0x200]
   14003e407:	call   0x14003651c
   14003e40c:	mov    r12d,eax
   14003e40f:	lea    rcx,[rbp+0x200]
   14003e416:	call   0x140036564
   14003e41b:	mov    rdi,rax
   14003e41e:	mov    QWORD PTR [rsp+0x58],rax
   14003e423:	mov    r13b,r15b
   14003e426:	mov    rcx,QWORD PTR [rbp+0x200]
   14003e42d:	test   rcx,rcx
   14003e430:	je     0x14003e70f
   14003e436:	call   0x14005a938
   14003e43b:	jmp    0x14003e70f
   14003e440:	mov    rax,QWORD PTR [rsi]
   14003e443:	xor    r8d,r8d
   14003e446:	mov    rdx,QWORD PTR [rsi+0x7f98]
   14003e44d:	mov    rcx,rsi
   14003e450:	call   QWORD PTR [rax+0x18]
   14003e453:	mov    edx,0x78
   14003e458:	mov    rcx,rsi
   14003e45b:	call   0x14000e778
   14003e460:	test   rax,rax
   14003e463:	je     0x14003e489
   14003e465:	cmp    BYTE PTR [rsi+0x7fa0],r14b
   14003e46c:	jne    0x14003e489
   14003e46e:	movzx  r12d,WORD PTR [rsi+0x7b96]
   14003e476:	mov    edi,DWORD PTR [rsi+0x7b98]
   14003e47c:	mov    QWORD PTR [rsp+0x58],rdi
   14003e481:	mov    r13b,r14b
   14003e484:	jmp    0x14003e70f
   14003e489:	cmp    BYTE PTR [rsp+0x40],r14b
   14003e48e:	je     0x14003e4ac
   14003e490:	cmp    BYTE PTR [rsi+0x7f94],r14b
   14003e497:	je     0x14003e4ac
   14003e499:	lea    r8,[rsi+0x26]
   14003e49d:	mov    rdx,r15
   14003e4a0:	xor    ecx,ecx
   14003e4a2:	call   0x14003f304
   14003e4a7:	jmp    0x14003e707
   14003e4ac:	mov    QWORD PTR [rsp+0x50],r14
   14003e4b1:	mov    QWORD PTR [rsi+0x7f78],r14
   14003e4b8:	mov    rax,QWORD PTR [rsi]
   14003e4bb:	xor    r8d,r8d
   14003e4be:	xor    edx,edx
   14003e4c0:	mov    rcx,rsi
   14003e4c3:	call   QWORD PTR [rax+0x18]
   14003e4c6:	mov    rax,QWORD PTR [rsi]
   14003e4c9:	mov    r8d,0x2000
   14003e4cf:	lea    rdx,[rbp+0x480]
   14003e4d6:	mov    rcx,rsi
   14003e4d9:	call   QWORD PTR [rax+0x10]
   14003e4dc:	mov    r12d,DWORD PTR [rsp+0x48]
   14003e4e1:	mov    rdi,QWORD PTR [rbp+0x270]
   14003e4e8:	mov    r13b,BYTE PTR [rsp+0x40]
   14003e4ed:	mov    QWORD PTR [rsp+0x58],rdi
   14003e4f2:	test   eax,eax
   14003e4f4:	mov    ecx,eax
   14003e4f6:	je     0x14003e6d0
   14003e4fc:	mov    eax,r14d
   14003e4ff:	mov    DWORD PTR [rsp+0x44],eax
   14003e503:	add    ecx,0xffffffce
   14003e506:	mov    DWORD PTR [rsp+0x48],ecx
   14003e50a:	test   ecx,ecx
   14003e50c:	jle    0x14003e696
   14003e512:	lea    rdi,[rbp+0x482]
   14003e519:	cmp    BYTE PTR [rdi],0x7a
   14003e51c:	jne    0x14003e55d
   14003e51e:	mov    rax,QWORD PTR [rdi+0x20]
   14003e522:	cmp    rax,QWORD PTR [rip+0x31c6f]        # 0x140070198
   14003e529:	jne    0x14003e559
   14003e52b:	movzx  eax,BYTE PTR [rdi-0x1]
   14003e52f:	movzx  ecx,bx
   14003e532:	mov    ebx,eax
   14003e534:	imul   ebx,ecx
   14003e537:	movzx  eax,BYTE PTR [rdi-0x2]
   14003e53b:	add    bx,ax
   14003e53e:	not    bx
   14003e541:	mov    r8d,0x34
   14003e547:	mov    rdx,rdi
   14003e54a:	or     ecx,0xffffffff
   14003e54d:	call   0x140017ac0
   14003e552:	cmp    bx,ax
   14003e555:	je     0x14003e5c1
   14003e557:	jmp    0x14003e59d
   14003e559:	mov    eax,DWORD PTR [rsp+0x44]
   14003e55d:	cmp    BYTE PTR [rdi],0x78
   14003e560:	jne    0x14003e5aa
   14003e562:	mov    rax,QWORD PTR [rdi+0x10]
   14003e566:	cmp    rax,QWORD PTR [rip+0x31c3b]        # 0x1400701a8
   14003e56d:	jne    0x14003e5a6
   14003e56f:	movzx  ecx,BYTE PTR [rdi-0x1]
   14003e573:	shl    ecx,0x8
   14003e576:	movzx  eax,BYTE PTR [rdi-0x2]
   14003e57a:	add    ecx,eax
   14003e57c:	not    ecx
   14003e57e:	movzx  ebx,cx
   14003e581:	mov    r8d,0x18
   14003e587:	mov    rdx,rdi
   14003e58a:	or     ecx,0xffffffff
   14003e58d:	call   0x140017ac0
   14003e592:	movzx  ecx,ax
   14003e595:	cmp    ebx,ecx
   14003e597:	je     0x14003e647
   14003e59d:	mov    ebx,0x100
   14003e5a2:	mov    ecx,DWORD PTR [rsp+0x48]
   14003e5a6:	mov    eax,DWORD PTR [rsp+0x44]
   14003e5aa:	add    eax,r15d
   14003e5ad:	mov    DWORD PTR [rsp+0x44],eax
   14003e5b1:	add    rdi,r15
   14003e5b4:	cmp    eax,ecx
   14003e5b6:	jge    0x14003e691
   14003e5bc:	jmp    0x14003e519
   14003e5c1:	movzx  r12d,BYTE PTR [rdi+0x2b]
   14003e5c6:	shl    r12d,0x8
   14003e5ca:	movzx  eax,BYTE PTR [rdi+0x2a]
   14003e5ce:	add    r12d,eax
   14003e5d1:	shl    r12d,0x8
   14003e5d5:	movzx  eax,BYTE PTR [rdi+0x29]
   14003e5d9:	add    r12d,eax
   14003e5dc:	shl    r12d,0x8
   14003e5e0:	movzx  eax,BYTE PTR [rdi+0x28]
   14003e5e4:	add    r12d,eax
   14003e5e7:	movzx  edx,BYTE PTR [rdi+0x33]
   14003e5eb:	shl    edx,0x8
   14003e5ee:	movzx  eax,BYTE PTR [rdi+0x32]
   14003e5f2:	add    edx,eax
   14003e5f4:	shl    edx,0x8
   14003e5f7:	movzx  eax,BYTE PTR [rdi+0x31]
   14003e5fb:	add    edx,eax
   14003e5fd:	shl    edx,0x8
   14003e600:	movzx  eax,BYTE PTR [rdi+0x30]
   14003e604:	add    edx,eax
   14003e606:	movzx  ecx,BYTE PTR [rdi+0x2f]
   14003e60a:	shl    ecx,0x8
   14003e60d:	movzx  eax,BYTE PTR [rdi+0x2e]
   14003e611:	add    ecx,eax
   14003e613:	shl    ecx,0x8
   14003e616:	movzx  eax,BYTE PTR [rdi+0x2d]
   14003e61a:	add    ecx,eax
   14003e61c:	shl    ecx,0x8
   14003e61f:	movzx  edi,BYTE PTR [rdi+0x2c]
   14003e623:	add    edi,ecx
   14003e625:	shl    rdx,0x20
   14003e629:	add    rdi,rdx
   14003e62c:	mov    QWORD PTR [rsp+0x58],rdi
   14003e631:	movsxd rax,DWORD PTR [rsp+0x44]
   14003e636:	add    rax,QWORD PTR [rsp+0x50]
   14003e63b:	mov    QWORD PTR [rsi+0x7f78],rax
   14003e642:	mov    r13b,r15b
   14003e645:	jmp    0x14003e696
   14003e647:	movzx  r12d,BYTE PTR [rdi+0xb]
   14003e64c:	shl    r12d,0x8
   14003e650:	movzx  eax,BYTE PTR [rdi+0xa]
   14003e654:	add    r12d,eax
   14003e657:	movzx  ecx,BYTE PTR [rdi+0xf]
   14003e65b:	shl    ecx,0x8
   14003e65e:	movzx  eax,BYTE PTR [rdi+0xe]
   14003e662:	add    ecx,eax
   14003e664:	shl    ecx,0x8
   14003e667:	movzx  eax,BYTE PTR [rdi+0xd]
   14003e66b:	add    ecx,eax
   14003e66d:	shl    ecx,0x8
   14003e670:	movzx  edi,BYTE PTR [rdi+0xc]
   14003e674:	add    edi,ecx
   14003e676:	mov    QWORD PTR [rsp+0x58],rdi
   14003e67b:	movsxd rax,DWORD PTR [rsp+0x44]
   14003e680:	add    rax,QWORD PTR [rsp+0x50]
   14003e685:	mov    QWORD PTR [rsi+0x7f78],rax
   14003e68c:	mov    r13b,r14b
   14003e68f:	jmp    0x14003e696
   14003e691:	mov    rdi,QWORD PTR [rsp+0x58]
   14003e696:	add    QWORD PTR [rsp+0x50],0x1fce
   14003e69f:	mov    rax,QWORD PTR [rsi]
   14003e6a2:	xor    r8d,r8d
   14003e6a5:	mov    rdx,QWORD PTR [rsp+0x50]
   14003e6aa:	mov    rcx,rsi
   14003e6ad:	call   QWORD PTR [rax+0x18]
   14003e6b0:	mov    rax,QWORD PTR [rsi]
   14003e6b3:	mov    r8d,0x2000
   14003e6b9:	lea    rdx,[rbp+0x480]
   14003e6c0:	mov    rcx,rsi
   14003e6c3:	call   QWORD PTR [rax+0x10]
   14003e6c6:	mov    ebx,0x100
   14003e6cb:	jmp    0x14003e4f2
   14003e6d0:	cmp    QWORD PTR [rsi+0x7f78],r14
   14003e6d7:	jne    0x14003e70f
   14003e6d9:	mov    rax,QWORD PTR [rsi]
   14003e6dc:	xor    r8d,r8d
   14003e6df:	xor    edx,edx
   14003e6e1:	mov    rcx,rsi
   14003e6e4:	call   QWORD PTR [rax+0x18]
   14003e6e7:	mov    QWORD PTR [rbp+0x260],r14
   14003e6ee:	mov    DWORD PTR [rbp+0x268],0x61
   14003e6f8:	lea    rcx,[rbp+0x200]
   14003e6ff:	call   0x1400479a4
   14003e704:	mov    r14d,r15d
   14003e707:	mov    ebx,r14d
   14003e70a:	jmp    0x14003edf4
   14003e70f:	xor    r8d,r8d
   14003e712:	xor    edx,edx
   14003e714:	mov    cl,r15b
   14003e717:	call   0x14003f304
   14003e71c:	or     DWORD PTR [rip+0x56159],0xffffffff        # 0x14009487c
   14003e723:	lea    rcx,[rip+0x31ae6]        # 0x140070210
   14003e72a:	call   0x14001796c
   14003e72f:	mov    rbx,QWORD PTR [rsi+0x7f78]
   14003e736:	mov    QWORD PTR [rsp+0x50],rbx
   14003e73b:	mov    QWORD PTR [rbp-0x80],rbx
   14003e73f:	mov    DWORD PTR [rsp+0x48],r14d
   14003e744:	neg    r13b
   14003e747:	sbb    ecx,ecx
   14003e749:	and    ecx,0x1c
   14003e74c:	add    ecx,0x1a
   14003e74f:	cmp    BYTE PTR [rsi+0x7f94],r14b
   14003e756:	je     0x14003e767
   14003e758:	mov    eax,ecx
   14003e75a:	not    eax
   14003e75c:	add    eax,r15d
   14003e75f:	and    eax,0xf
   14003e762:	add    eax,0x8
   14003e765:	add    ecx,eax
   14003e767:	movsxd rax,ecx
   14003e76a:	add    rax,rbx
   14003e76d:	mov    QWORD PTR [rsp+0x70],rax
   14003e772:	mov    QWORD PTR [rbp+0x200],r14
   14003e779:	mov    QWORD PTR [rbp+0x208],r14
   14003e780:	mov    QWORD PTR [rbp+0x210],r14
   14003e787:	mov    QWORD PTR [rbp+0x218],r14
   14003e78e:	mov    QWORD PTR [rbp-0x50],r14
   14003e792:	mov    QWORD PTR [rbp-0x48],r14
   14003e796:	mov    QWORD PTR [rbp-0x40],r14
   14003e79a:	mov    QWORD PTR [rbp-0x38],r14
   14003e79e:	mov    QWORD PTR [rsp+0x30],rbx
   14003e7a3:	mov    QWORD PTR [rsp+0x28],rdi
   14003e7a8:	mov    DWORD PTR [rsp+0x20],r12d
   14003e7ad:	mov    r9,rax
   14003e7b0:	lea    r8,[rbp-0x50]
   14003e7b4:	lea    rdx,[rbp+0x200]
   14003e7bb:	mov    rcx,rsi
   14003e7be:	call   0x14003c67c
   14003e7c3:	mov    QWORD PTR [rbp-0x70],r14
   14003e7c7:	mov    QWORD PTR [rbp-0x68],r14
   14003e7cb:	mov    QWORD PTR [rbp-0x60],r14
   14003e7cf:	mov    QWORD PTR [rbp-0x58],r14
   14003e7d3:	mov    edx,r12d
   14003e7d6:	shl    edx,0x9
   14003e7d9:	lea    rcx,[rbp-0x70]
   14003e7dd:	call   0x140001858
   14003e7e2:	nop
   14003e7e3:	mov    r8,QWORD PTR [rbp-0x68]
   14003e7e7:	xor    edx,edx
   14003e7e9:	mov    rcx,QWORD PTR [rbp-0x70]
   14003e7ed:	call   0x140058f40
   14003e7f2:	mov    rax,QWORD PTR [rsi]
   14003e7f5:	xor    r8d,r8d
   14003e7f8:	xor    edx,edx
   14003e7fa:	mov    rcx,rsi
   14003e7fd:	call   QWORD PTR [rax+0x18]
   14003e800:	test   rbx,rbx
   14003e803:	jle    0x14003e8ec
   14003e809:	mov    r13d,DWORD PTR [rsp+0x48]
   14003e80e:	mov    edi,r13d
   14003e811:	call   0x140046bb4
   14003e816:	mov    rax,QWORD PTR [rbp-0x80]
   14003e81a:	mov    r9,rax
   14003e81d:	sub    r9,rbx
   14003e820:	mov    QWORD PTR [rsp+0x20],rax
   14003e825:	mov    r8d,0x2
   14003e82b:	mov    edx,r15d
   14003e82e:	mov    rcx,rsi
   14003e831:	call   0x14003f3a0
   14003e836:	mov    eax,edi
   14003e838:	cmp    rax,QWORD PTR [rbp+0x208]
   14003e83f:	jae    0x14003e882
   14003e841:	mov    rax,QWORD PTR [rsi]
   14003e844:	mov    rcx,rsi
   14003e847:	call   QWORD PTR [rax+0x20]
   14003e84a:	mov    ecx,edi
   14003e84c:	mov    rdx,QWORD PTR [rbp+0x200]
   14003e853:	cmp    rax,QWORD PTR [rdx+rcx*8]
   14003e857:	jl     0x14003e882
   14003e859:	mov    rax,QWORD PTR [rsi]
   14003e85c:	mov    rdx,QWORD PTR [rbp-0x50]
   14003e860:	movsxd rdx,DWORD PTR [rdx+rcx*4]
   14003e864:	mov    r8d,r15d
   14003e867:	mov    rcx,rsi
   14003e86a:	call   QWORD PTR [rax+0x18]
   14003e86d:	mov    ecx,edi
   14003e86f:	mov    rdx,QWORD PTR [rbp-0x50]
   14003e873:	movsxd rax,DWORD PTR [rdx+rcx*4]
   14003e877:	sub    rbx,rax
   14003e87a:	mov    QWORD PTR [rsp+0x50],rbx
   14003e87f:	add    edi,r15d
   14003e882:	mov    BYTE PTR [rsp+0x20],r15b
   14003e887:	lea    r9,[rsp+0x50]
   14003e88c:	mov    ebx,0x200
   14003e891:	mov    r8d,ebx
   14003e894:	lea    rdx,[rbp+0x280]
   14003e89b:	mov    rcx,rsi
   14003e89e:	call   0x14003cec0
   14003e8a3:	mov    ecx,r13d
   14003e8a6:	shl    ecx,0x9
   14003e8a9:	add    rcx,QWORD PTR [rbp-0x70]
   14003e8ad:	mov    edx,r14d
   14003e8b0:	lea    r8,[rbp+0x280]
   14003e8b7:	sub    r8,rcx
   14003e8ba:	mov    al,BYTE PTR [r8+rcx*1]
   14003e8be:	xor    BYTE PTR [rcx],al
   14003e8c0:	add    edx,r15d
   14003e8c3:	add    rcx,r15
   14003e8c6:	movsxd rax,edx
   14003e8c9:	cmp    rax,rbx
   14003e8cc:	jb     0x14003e8ba
   14003e8ce:	add    r13d,r15d
   14003e8d1:	cmp    r13d,r12d
   14003e8d4:	sbb    eax,eax
   14003e8d6:	and    r13d,eax
   14003e8d9:	mov    rbx,QWORD PTR [rsp+0x50]
   14003e8de:	test   rbx,rbx
   14003e8e1:	jg     0x14003e811
   14003e8e7:	mov    rdi,QWORD PTR [rsp+0x58]
   14003e8ec:	mov    r9d,0x64
   14003e8f2:	mov    QWORD PTR [rsp+0x20],r9
   14003e8f7:	lea    r8d,[r9-0x62]
   14003e8fb:	mov    edx,r15d
   14003e8fe:	mov    rcx,rsi
   14003e901:	call   0x14003f3a0
   14003e906:	mov    rax,QWORD PTR [rsi]
   14003e909:	mov    rcx,QWORD PTR [rsp+0x70]
   14003e90e:	lea    rdx,[rcx+rdi*2]
   14003e912:	xor    r8d,r8d
   14003e915:	mov    rcx,rsi
   14003e918:	call   QWORD PTR [rax+0x18]
   14003e91b:	test   r12d,r12d
   14003e91e:	je     0x14003e965
   14003e920:	mov    rbx,QWORD PTR [rbp-0x70]
   14003e924:	lea    rdi,[rbp+0x280]
   14003e92b:	sub    rdi,rbx
   14003e92e:	mov    r13d,r12d
   14003e931:	mov    edx,0x200
   14003e936:	mov    rax,QWORD PTR [rsi]
   14003e939:	mov    r8,rdx
   14003e93c:	lea    rdx,[rbp+0x280]
   14003e943:	mov    rcx,rsi
   14003e946:	call   QWORD PTR [rax+0x10]
   14003e949:	mov    edx,0x200
   14003e94e:	mov    ecx,edx
   14003e950:	mov    al,BYTE PTR [rdi+rbx*1]
   14003e953:	xor    BYTE PTR [rbx],al
   14003e955:	add    rbx,r15
   14003e958:	sub    rcx,r15
   14003e95b:	jne    0x14003e950
   14003e95d:	sub    rdi,rdx
   14003e960:	sub    r13,r15
   14003e963:	jne    0x14003e936
   14003e965:	mov    rax,QWORD PTR [rsi]
   14003e968:	xor    r8d,r8d
   14003e96b:	xor    edx,edx
   14003e96d:	mov    rcx,rsi
   14003e970:	call   QWORD PTR [rax+0x18]
   14003e973:	mov    rax,QWORD PTR [rbp-0x80]
   14003e977:	mov    rbx,rax
   14003e97a:	mov    QWORD PTR [rsp+0x50],rax
   14003e97f:	mov    edi,r14d
   14003e982:	mov    DWORD PTR [rsp+0x68],r14d
   14003e987:	mov    DWORD PTR [rsp+0x58],r14d
   14003e98c:	or     r13d,0xffffffff
   14003e990:	mov    DWORD PTR [rsp+0x44],r13d
   14003e995:	mov    DWORD PTR [rsp+0x48],r14d
   14003e99a:	mov    DWORD PTR [rsp+0x64],r14d
   14003e99f:	test   rax,rax
   14003e9a2:	jle    0x14003ed7c
   14003e9a8:	mov    QWORD PTR [rbp-0x18],rsi
   14003e9ac:	call   0x140046bb4
   14003e9b1:	mov    edi,DWORD PTR [rsp+0x64]
   14003e9b5:	cmp    rdi,QWORD PTR [rbp+0x208]
   14003e9bc:	jae    0x14003e9fd
   14003e9be:	mov    rax,QWORD PTR [rsi]
   14003e9c1:	mov    rcx,rsi
   14003e9c4:	call   QWORD PTR [rax+0x20]
   14003e9c7:	mov    rcx,QWORD PTR [rbp+0x200]
   14003e9ce:	cmp    rax,QWORD PTR [rcx+rdi*8]
   14003e9d2:	jl     0x14003e9fd
   14003e9d4:	mov    rax,QWORD PTR [rsi]
   14003e9d7:	mov    rcx,QWORD PTR [rbp-0x50]
   14003e9db:	movsxd rdx,DWORD PTR [rcx+rdi*4]
   14003e9df:	mov    r8d,r15d
   14003e9e2:	mov    rcx,rsi
   14003e9e5:	call   QWORD PTR [rax+0x18]
   14003e9e8:	mov    rcx,QWORD PTR [rbp-0x50]
   14003e9ec:	movsxd rax,DWORD PTR [rcx+rdi*4]
   14003e9f0:	sub    rbx,rax
   14003e9f3:	mov    QWORD PTR [rsp+0x50],rbx
   14003e9f8:	add    DWORD PTR [rsp+0x64],r15d
   14003e9fd:	mov    BYTE PTR [rsp+0x20],r15b
   14003ea02:	lea    r9,[rsp+0x50]
   14003ea07:	mov    ebx,0x200
   14003ea0c:	mov    r8d,ebx
   14003ea0f:	lea    rdx,[rbp+0x280]
   14003ea16:	mov    rcx,rsi
   14003ea19:	call   0x14003cec0
   14003ea1e:	mov    eax,eax
   14003ea20:	mov    QWORD PTR [rbp+0x270],rax
   14003ea27:	mov    r8d,eax
   14003ea2a:	lea    rdx,[rbp+0x280]
   14003ea31:	mov    rcx,QWORD PTR [rbp-0x78]
   14003ea35:	call   0x1400212ac
   14003ea3a:	mov    r8d,ebx
   14003ea3d:	lea    rdx,[rbp+0x280]
   14003ea44:	or     ecx,0xffffffff
   14003ea47:	call   0x140017ac0
   14003ea4c:	movzx  edi,ax
   14003ea4f:	mov    rax,QWORD PTR [rsi]
   14003ea52:	mov    rcx,rsi
   14003ea55:	call   QWORD PTR [rax+0x20]
   14003ea58:	mov    rbx,rax
   14003ea5b:	mov    QWORD PTR [rbp-0x10],rax
   14003ea5f:	mov    r9,QWORD PTR [rsi]
   14003ea62:	xor    r8d,r8d
   14003ea65:	mov    rdx,QWORD PTR [rsp+0x70]
   14003ea6a:	mov    rcx,rsi
   14003ea6d:	call   QWORD PTR [r9+0x18]
   14003ea71:	mov    rcx,rsi
   14003ea74:	call   0x140020c04
   14003ea79:	movzx  eax,al
   14003ea7c:	mov    DWORD PTR [rsp+0x60],eax
   14003ea80:	mov    rcx,rsi
   14003ea83:	call   0x140020c04
   14003ea88:	movzx  ecx,al
   14003ea8b:	shl    ecx,0x8
   14003ea8e:	add    DWORD PTR [rsp+0x60],ecx
   14003ea92:	add    QWORD PTR [rsp+0x70],0x2
   14003ea98:	mov    rax,QWORD PTR [rsi]
   14003ea9b:	xor    r8d,r8d
   14003ea9e:	mov    rdx,rbx
   14003eaa1:	mov    rcx,rsi
   14003eaa4:	call   QWORD PTR [rax+0x18]
   14003eaa7:	nop
   14003eaa8:	mov    ebx,DWORD PTR [rsp+0x60]
   14003eaac:	cmp    ebx,edi
   14003eaae:	jne    0x14003eacb
   14003eab0:	mov    r9b,r15b
   14003eab3:	lea    r8,[rsp+0x44]
   14003eab8:	mov    edi,DWORD PTR [rsp+0x68]
   14003eabc:	mov    edx,edi
   14003eabe:	mov    ecx,r13d
   14003eac1:	call   0x14003f270
   14003eac6:	jmp    0x14003ed50
   14003eacb:	lea    rax,[rbp+0x0]
   14003eacf:	lea    rcx,[rbp+0x280]
   14003ead6:	mov    edx,0x4
   14003eadb:	lea    r8d,[rdx+0x7c]
   14003eadf:	movups xmm0,XMMWORD PTR [rcx]
   14003eae2:	movups XMMWORD PTR [rax],xmm0
   14003eae5:	movups xmm1,XMMWORD PTR [rcx+0x10]
   14003eae9:	movups XMMWORD PTR [rax+0x10],xmm1
   14003eaed:	movups xmm0,XMMWORD PTR [rcx+0x20]
   14003eaf1:	movups XMMWORD PTR [rax+0x20],xmm0
   14003eaf5:	movups xmm1,XMMWORD PTR [rcx+0x30]
   14003eaf9:	movups XMMWORD PTR [rax+0x30],xmm1
   14003eafd:	movups xmm0,XMMWORD PTR [rcx+0x40]
   14003eb01:	movups XMMWORD PTR [rax+0x40],xmm0
   14003eb05:	movups xmm1,XMMWORD PTR [rcx+0x50]
   14003eb09:	movups XMMWORD PTR [rax+0x50],xmm1
   14003eb0d:	movups xmm0,XMMWORD PTR [rcx+0x60]
   14003eb11:	movups XMMWORD PTR [rax+0x60],xmm0
   14003eb15:	add    rax,r8
   14003eb18:	movups xmm1,XMMWORD PTR [rcx+0x70]
   14003eb1c:	movups XMMWORD PTR [rax-0x10],xmm1
   14003eb20:	add    rcx,r8
   14003eb23:	sub    rdx,0x1
   14003eb27:	jne    0x14003eadf
   14003eb29:	mov    edi,DWORD PTR [rsp+0x48]
   14003eb2d:	shl    edi,0x9
   14003eb30:	add    rdi,QWORD PTR [rbp-0x70]
   14003eb34:	mov    edx,r14d
   14003eb37:	lea    rcx,[rbp+0x280]
   14003eb3e:	lea    rax,[rbp+0x280]
   14003eb45:	sub    rdi,rax
   14003eb48:	mov    r8d,0x200
   14003eb4e:	mov    al,BYTE PTR [rdi+rcx*1]
   14003eb51:	xor    BYTE PTR [rcx],al
   14003eb53:	add    edx,r15d
   14003eb56:	add    rcx,r15
   14003eb59:	movsxd rax,edx
   14003eb5c:	cmp    rax,r8
   14003eb5f:	jb     0x14003eb4e
   14003eb61:	lea    rdx,[rbp+0x280]
   14003eb68:	or     ecx,0xffffffff
   14003eb6b:	call   0x140017ac0
   14003eb70:	movzx  ecx,ax
   14003eb73:	cmp    ebx,ecx
   14003eb75:	je     0x14003ecf1
   14003eb7b:	mov    ebx,0x40
   14003eb80:	lea    rax,[rbp+0x2c0]
   14003eb87:	mov    QWORD PTR [rsp+0x78],rax
   14003eb8c:	lea    rax,[rbp+0x280]
   14003eb93:	lea    rcx,[rbp+0x0]
   14003eb97:	mov    edx,0x4
   14003eb9c:	lea    r8d,[rdx+0x7c]
   14003eba0:	movups xmm0,XMMWORD PTR [rcx]
   14003eba3:	movups XMMWORD PTR [rax],xmm0
   14003eba6:	movups xmm1,XMMWORD PTR [rcx+0x10]
   14003ebaa:	movups XMMWORD PTR [rax+0x10],xmm1
   14003ebae:	movups xmm0,XMMWORD PTR [rcx+0x20]
   14003ebb2:	movups XMMWORD PTR [rax+0x20],xmm0
   14003ebb6:	movups xmm1,XMMWORD PTR [rcx+0x30]
   14003ebba:	movups XMMWORD PTR [rax+0x30],xmm1
   14003ebbe:	movups xmm0,XMMWORD PTR [rcx+0x40]
   14003ebc2:	movups XMMWORD PTR [rax+0x40],xmm0
   14003ebc6:	movups xmm1,XMMWORD PTR [rcx+0x50]
   14003ebca:	movups XMMWORD PTR [rax+0x50],xmm1
   14003ebce:	movups xmm0,XMMWORD PTR [rcx+0x60]
   14003ebd2:	movups XMMWORD PTR [rax+0x60],xmm0
   14003ebd6:	add    rax,r8
   14003ebd9:	movups xmm1,XMMWORD PTR [rcx+0x70]
   14003ebdd:	movups XMMWORD PTR [rax-0x10],xmm1
   14003ebe1:	add    rcx,r8
   14003ebe4:	sub    rdx,0x1
   14003ebe8:	jne    0x14003eba0
   14003ebea:	test   ebx,ebx
   14003ebec:	jle    0x14003ec04
   14003ebee:	lea    rcx,[rbp+0x280]
   14003ebf5:	mov    edx,ebx
   14003ebf7:	mov    al,BYTE PTR [rcx+rdi*1]
   14003ebfa:	xor    BYTE PTR [rcx],al
   14003ebfc:	add    rcx,r15
   14003ebff:	sub    rdx,r15
   14003ec02:	jne    0x14003ebf7
   14003ec04:	mov    r8d,0x200
   14003ec0a:	lea    rdx,[rbp+0x280]
   14003ec11:	or     ecx,0xffffffff
   14003ec14:	call   0x140017ac0
   14003ec19:	movzx  ecx,ax
   14003ec1c:	cmp    DWORD PTR [rsp+0x60],ecx
   14003ec20:	je     0x14003ecf1
   14003ec26:	lea    rax,[rbp+0x280]
   14003ec2d:	lea    rcx,[rbp+0x0]
   14003ec31:	mov    edx,0x4
   14003ec36:	lea    r8d,[rdx+0x7c]
   14003ec3a:	movups xmm0,XMMWORD PTR [rcx]
   14003ec3d:	movups XMMWORD PTR [rax],xmm0
   14003ec40:	movups xmm1,XMMWORD PTR [rcx+0x10]
   14003ec44:	movups XMMWORD PTR [rax+0x10],xmm1
   14003ec48:	movups xmm0,XMMWORD PTR [rcx+0x20]
   14003ec4c:	movups XMMWORD PTR [rax+0x20],xmm0
   14003ec50:	movups xmm1,XMMWORD PTR [rcx+0x30]
   14003ec54:	movups XMMWORD PTR [rax+0x30],xmm1
   14003ec58:	movups xmm0,XMMWORD PTR [rcx+0x40]
   14003ec5c:	movups XMMWORD PTR [rax+0x40],xmm0
   14003ec60:	movups xmm1,XMMWORD PTR [rcx+0x50]
   14003ec64:	movups XMMWORD PTR [rax+0x50],xmm1
   14003ec68:	movups xmm0,XMMWORD PTR [rcx+0x60]
   14003ec6c:	movups XMMWORD PTR [rax+0x60],xmm0
   14003ec70:	add    rax,r8
   14003ec73:	movups xmm1,XMMWORD PTR [rcx+0x70]
   14003ec77:	movups XMMWORD PTR [rax-0x10],xmm1
   14003ec7b:	add    rcx,r8
   14003ec7e:	sub    rdx,0x1
   14003ec82:	jne    0x14003ec3a
   14003ec84:	mov    edx,ebx
   14003ec86:	movsxd rax,ebx
   14003ec89:	mov    r8d,0x200
   14003ec8f:	cmp    rax,r8
   14003ec92:	jae    0x14003ecac
   14003ec94:	mov    rcx,QWORD PTR [rsp+0x78]
   14003ec99:	mov    al,BYTE PTR [rcx+rdi*1]
   14003ec9c:	xor    BYTE PTR [rcx],al
   14003ec9e:	add    edx,r15d
   14003eca1:	add    rcx,r15
   14003eca4:	movsxd rax,edx
   14003eca7:	cmp    rax,r8
   14003ecaa:	jb     0x14003ec99
   14003ecac:	lea    rdx,[rbp+0x280]
   14003ecb3:	or     ecx,0xffffffff
   14003ecb6:	call   0x140017ac0
   14003ecbb:	movzx  ecx,ax
   14003ecbe:	cmp    DWORD PTR [rsp+0x60],ecx
   14003ecc2:	je     0x14003ecf1
   14003ecc4:	add    ebx,0x40
   14003ecc7:	add    QWORD PTR [rsp+0x78],0x40
   14003eccd:	cmp    ebx,0x100
   14003ecd3:	jl     0x14003eb8c
   14003ecd9:	add    DWORD PTR [rsp+0x58],r15d
   14003ecde:	cmp    r13d,0xffffffff
   14003ece2:	mov    edi,DWORD PTR [rsp+0x68]
   14003ece6:	cmove  r13d,edi
   14003ecea:	mov    DWORD PTR [rsp+0x44],r13d
   14003ecef:	jmp    0x14003ed55
   14003ecf1:	mov    r9b,r15b
   14003ecf4:	lea    r8,[rsp+0x44]
   14003ecf9:	mov    edi,DWORD PTR [rsp+0x68]
   14003ecfd:	mov    edx,edi
   14003ecff:	mov    ecx,r13d
   14003ed02:	call   0x14003f270
   14003ed07:	lea    edx,[rdi+0x1]
   14003ed0a:	xor    r9d,r9d
   14003ed0d:	lea    r8,[rsp+0x44]
   14003ed12:	mov    ecx,edi
   14003ed14:	call   0x14003f270
   14003ed19:	mov    r13,QWORD PTR [rbp-0x78]
   14003ed1d:	mov    rbx,QWORD PTR [r13+0x0]
   14003ed21:	mov    rcx,r13
   14003ed24:	call   QWORD PTR [rbx+0x20]
   14003ed27:	sub    rax,QWORD PTR [rbp+0x270]
   14003ed2e:	xor    r8d,r8d
   14003ed31:	mov    rdx,rax
   14003ed34:	mov    rcx,r13
   14003ed37:	call   QWORD PTR [rbx+0x18]
   14003ed3a:	mov    r8,QWORD PTR [rbp+0x270]
   14003ed41:	lea    rdx,[rbp+0x280]
   14003ed48:	mov    rcx,r13
   14003ed4b:	call   0x1400212ac
   14003ed50:	mov    r13d,DWORD PTR [rsp+0x44]
   14003ed55:	add    edi,r15d
   14003ed58:	mov    DWORD PTR [rsp+0x68],edi
   14003ed5c:	mov    ecx,DWORD PTR [rsp+0x48]
   14003ed60:	add    ecx,r15d
   14003ed63:	cmp    ecx,r12d
   14003ed66:	sbb    eax,eax
   14003ed68:	and    eax,ecx
   14003ed6a:	mov    DWORD PTR [rsp+0x48],eax
   14003ed6e:	mov    rbx,QWORD PTR [rsp+0x50]
   14003ed73:	test   rbx,rbx
   14003ed76:	jg     0x14003e9ac
   14003ed7c:	mov    r9b,r15b
   14003ed7f:	lea    r8,[rsp+0x44]
   14003ed84:	mov    edx,edi
   14003ed86:	mov    ecx,r13d
   14003ed89:	call   0x14003f270
   14003ed8e:	mov    rax,QWORD PTR [rsi]
   14003ed91:	xor    r8d,r8d
   14003ed94:	mov    rdx,QWORD PTR [rbp-0x80]
   14003ed98:	mov    rcx,rsi
   14003ed9b:	call   QWORD PTR [rax+0x18]
   14003ed9e:	movabs r8,0x7fffffff7fffffff
   14003eda8:	mov    rdx,QWORD PTR [rbp-0x78]
   14003edac:	mov    rcx,rsi
   14003edaf:	call   0x140020834
   14003edb4:	neg    DWORD PTR [rsp+0x58]
   14003edb8:	sbb    ebx,ebx
   14003edba:	and    ebx,0x2
   14003edbd:	cmp    QWORD PTR [rbp-0x70],r14
   14003edc1:	je     0x14003edcd
   14003edc3:	mov    rcx,QWORD PTR [rbp-0x70]
   14003edc7:	call   0x14005a938
   14003edcc:	nop
   14003edcd:	mov    rax,QWORD PTR [rbp-0x50]
   14003edd1:	test   rax,rax
   14003edd4:	je     0x14003eddf
   14003edd6:	mov    rcx,rax
   14003edd9:	call   0x14005a938
   14003edde:	nop
   14003eddf:	mov    rax,QWORD PTR [rbp+0x200]
   14003ede6:	test   rax,rax
   14003ede9:	je     0x14003edf4
   14003edeb:	mov    rcx,rax
   14003edee:	call   0x14005a938
   14003edf3:	nop
   14003edf4:	mov    r9,QWORD PTR [rsi]
   14003edf7:	xor    r8d,r8d
   14003edfa:	mov    rdx,QWORD PTR [rbp-0x28]
   14003edfe:	mov    rcx,rsi
   14003ee01:	call   QWORD PTR [r9+0x18]
   14003ee05:	nop
   14003ee06:	mov    eax,ebx
   14003ee08:	mov    rcx,QWORD PTR [rbp+0x2480]
   14003ee0f:	xor    rcx,rsp
   14003ee12:	call   0x140055f90
   14003ee17:	mov    rbx,QWORD PTR [rsp+0x25e0]
   14003ee1f:	add    rsp,0x2590
   14003ee26:	pop    r15
   14003ee28:	pop    r14
   14003ee2a:	pop    r13
   14003ee2c:	pop    r12
   14003ee2e:	pop    rdi
   14003ee2f:	pop    rsi
   14003ee30:	pop    rbp
   14003ee31:	ret    
   14003ee32:	int3   
   14003ee33:	int3   
   14003ee34:	mov    QWORD PTR [rsp+0x8],rbx
   14003ee39:	mov    QWORD PTR [rsp+0x18],r8
   14003ee3e:	push   rbp
   14003ee3f:	push   rsi
   14003ee40:	push   rdi
   14003ee41:	push   r12
   14003ee43:	push   r13
   14003ee45:	push   r14
   14003ee47:	push   r15
   14003ee49:	sub    rsp,0x20
   14003ee4d:	cmp    r9d,DWORD PTR [rip+0x56a2c]        # 0x140095880
   14003ee54:	lea    r15,[rip+0x55a25]        # 0x140094880
   14003ee5b:	mov    ebx,r9d
   14003ee5e:	lea    rbp,[rip+0x5621b]        # 0x140095080
   14003ee65:	mov    r14,r8
   14003ee68:	mov    rdi,rdx
   14003ee6b:	mov    rsi,rcx
   14003ee6e:	je     0x14003eec0
   14003ee70:	mov    rcx,r15
   14003ee73:	call   0x140017dac
   14003ee78:	xor    r10d,r10d
   14003ee7b:	mov    r9,rbp
   14003ee7e:	mov    r8d,0x100
   14003ee84:	movzx  eax,r10b
   14003ee88:	mov    rdx,QWORD PTR [r15+rax*8]
   14003ee8c:	test   ebx,ebx
   14003ee8e:	je     0x14003eeaa
   14003ee90:	mov    r11,rbx
   14003ee93:	mov    rax,rdx
   14003ee96:	movzx  ecx,dl
   14003ee99:	shr    rax,0x8
   14003ee9d:	mov    rdx,QWORD PTR [r15+rcx*8]
   14003eea1:	xor    rdx,rax
   14003eea4:	sub    r11,0x1
   14003eea8:	jne    0x14003ee93
   14003eeaa:	mov    QWORD PTR [r9],rdx
   14003eead:	inc    r10
   14003eeb0:	add    r9,0x8
   14003eeb4:	sub    r8,0x1
   14003eeb8:	jne    0x14003ee84
   14003eeba:	mov    DWORD PTR [rip+0x569c0],ebx        # 0x140095880
   14003eec0:	or     rbp,0xffffffffffffffff
   14003eec4:	cmp    QWORD PTR [rsi+0x10078],0x0
   14003eecc:	jne    0x14003eedf
   14003eece:	mov    ecx,0x400001
   14003eed3:	call   0x140055df0
   14003eed8:	mov    QWORD PTR [rsi+0x10078],rax
   14003eedf:	mov    r12,QWORD PTR [rsi+0x10078]
   14003eee6:	cmp    rdi,r14
   14003eee9:	jae    0x14003effc
   14003eeef:	mov    r15d,0x400000
   14003eef5:	cmp    rbp,0xffffffffffffffff
   14003eef9:	jne    0x14003effc
   14003eeff:	mov    rcx,QWORD PTR [rsi+0x20]
   14003ef03:	xor    r8d,r8d
   14003ef06:	mov    rdx,rdi
   14003ef09:	mov    rax,QWORD PTR [rcx]
   14003ef0c:	call   QWORD PTR [rax+0x18]
   14003ef0f:	mov    rcx,QWORD PTR [rsi+0x20]
   14003ef13:	mov    r8,r14
   14003ef16:	sub    r8,rdi
   14003ef19:	mov    rdx,r12
   14003ef1c:	cmp    r8,r15
   14003ef1f:	mov    rax,QWORD PTR [rcx]
   14003ef22:	cmova  r8,r15
   14003ef26:	call   QWORD PTR [rax+0x10]
   14003ef29:	mov    DWORD PTR [rsp+0x78],eax
   14003ef2d:	mov    r15d,eax
   14003ef30:	cmp    eax,ebx
   14003ef32:	jl     0x14003effc
   14003ef38:	mov    r8,rbx
   14003ef3b:	mov    rdx,r12
   14003ef3e:	xor    ecx,ecx
   14003ef40:	call   0x140017bec
   14003ef45:	mov    r8,rax
   14003ef48:	xor    r9d,r9d
   14003ef4b:	mov    rax,QWORD PTR [rsp+0x80]
   14003ef53:	sub    r15d,ebx
   14003ef56:	mov    r10,QWORD PTR [rax+0x60]
   14003ef5a:	cmp    r8,r10
   14003ef5d:	je     0x14003efa0
   14003ef5f:	lea    ecx,[r9+rbx*1]
   14003ef63:	movzx  ecx,BYTE PTR [rcx+r12*1]
   14003ef68:	lea    rax,[rip+0x55911]        # 0x140094880
   14003ef6f:	xor    rcx,r8
   14003ef72:	movzx  edx,cl
   14003ef75:	movzx  ecx,BYTE PTR [r9+r12*1]
   14003ef7a:	inc    r9d
   14003ef7d:	mov    rdx,QWORD PTR [rax+rdx*8]
   14003ef81:	lea    rax,[rip+0x560f8]        # 0x140095080
   14003ef88:	xor    rdx,QWORD PTR [rax+rcx*8]
   14003ef8c:	mov    rax,r8
   14003ef8f:	shr    rax,0x8
   14003ef93:	mov    r8,rdx
   14003ef96:	xor    r8,rax
   14003ef99:	cmp    r9d,r15d
   14003ef9c:	jbe    0x14003ef5a
   14003ef9e:	jmp    0x14003efe1
   14003efa0:	mov    rbp,QWORD PTR [rsp+0x80]
   14003efa8:	lea    rdx,[r9+r12*1]
   14003efac:	mov    r8,rbx
   14003efaf:	mov    r14d,r9d
   14003efb2:	mov    rcx,QWORD PTR [rbp+0x30]
   14003efb6:	call   0x140059180
   14003efbb:	mov    eax,DWORD PTR [rsi+0x100b0]
   14003efc1:	cmp    ebx,eax
   14003efc3:	jae    0x14003efd8
   14003efc5:	mov    rcx,QWORD PTR [rbp+0x30]
   14003efc9:	sub    eax,ebx
   14003efcb:	mov    r8d,eax
   14003efce:	add    rcx,rbx
   14003efd1:	xor    edx,edx
   14003efd3:	call   0x140058f40
   14003efd8:	lea    rbp,[r14+rdi*1]
   14003efdc:	mov    r14,QWORD PTR [rsp+0x70]
   14003efe1:	cmp    DWORD PTR [rsp+0x78],ebx
   14003efe5:	je     0x14003effc
   14003efe7:	mov    ecx,r15d
   14003efea:	mov    r15d,0x400000
   14003eff0:	add    rdi,rcx
   14003eff3:	cmp    rdi,r14
   14003eff6:	jb     0x14003eef5
   14003effc:	mov    rax,rbp
   14003efff:	mov    rbx,QWORD PTR [rsp+0x60]
   14003f004:	add    rsp,0x20
   14003f008:	pop    r15
   14003f00a:	pop    r14
   14003f00c:	pop    r13
   14003f00e:	pop    r12
   14003f010:	pop    rdi
   14003f011:	pop    rsi
   14003f012:	pop    rbp
   14003f013:	ret    
   14003f014:	mov    rax,rsp
   14003f017:	mov    QWORD PTR [rax+0x20],r9
   14003f01b:	mov    QWORD PTR [rax+0x18],r8
   14003f01f:	mov    QWORD PTR [rax+0x10],rdx
   14003f023:	push   rbx
   14003f024:	push   rsi
   14003f025:	push   rdi
   14003f026:	push   r12
   14003f028:	push   r13
   14003f02a:	push   r14
   14003f02c:	push   r15
   14003f02e:	sub    rsp,0x50
   14003f032:	mov    QWORD PTR [rax-0x58],0xfffffffffffffffe
   14003f03a:	mov    r14,rdx
   14003f03d:	mov    rbx,rcx
   14003f040:	cmp    BYTE PTR [rsp+0xb0],0x0
   14003f048:	je     0x14003f06b
   14003f04a:	or     DWORD PTR [rip+0x5582b],0xffffffff        # 0x14009487c
   14003f051:	lea    rcx,[rip+0x311b8]        # 0x140070210
   14003f058:	call   0x14001796c
   14003f05d:	mov    rcx,QWORD PTR [rbx+0x20]
   14003f061:	call   0x140020b88
   14003f066:	mov    rsi,rax
   14003f069:	jmp    0x14003f073
   14003f06b:	mov    rsi,QWORD PTR [rsp+0x90]
   14003f073:	mov    QWORD PTR [rsp+0x90],rsi
   14003f07b:	mov    rcx,QWORD PTR [rbx+0x20]
   14003f07f:	mov    rax,QWORD PTR [rcx]
   14003f082:	xor    r8d,r8d
   14003f085:	mov    rdx,r14
   14003f088:	call   QWORD PTR [rax+0x18]
   14003f08b:	xor    r15d,r15d
   14003f08e:	mov    dil,0x1
   14003f091:	cmp    BYTE PTR [rsp+0xb0],0x0
   14003f099:	je     0x14003f0b8
   14003f09b:	mov    rax,rsi
   14003f09e:	sub    rax,r14
   14003f0a1:	mov    QWORD PTR [rsp+0x20],rax
   14003f0a6:	mov    r9,r15
   14003f0a9:	xor    edx,edx
   14003f0ab:	lea    r8d,[rdx+0x1]
   14003f0af:	mov    rcx,QWORD PTR [rbx+0x20]
   14003f0b3:	call   0x14003f3a0
   14003f0b8:	mov    rcx,QWORD PTR [rbx+0x20]
   14003f0bc:	test   dil,dil
   14003f0bf:	je     0x14003f0d6
   14003f0c1:	mov    rax,QWORD PTR [rcx]
   14003f0c4:	lea    rdx,[rbx+0x70]
   14003f0c8:	mov    r8d,0x10000
   14003f0ce:	call   QWORD PTR [rax+0x10]
   14003f0d1:	movsxd r14,eax
   14003f0d4:	jmp    0x14003f129
   14003f0d6:	movups xmm0,XMMWORD PTR [rbx+0x10030]
   14003f0dd:	movups XMMWORD PTR [rbx+0x70],xmm0
   14003f0e1:	movups xmm1,XMMWORD PTR [rbx+0x10040]
   14003f0e8:	movups XMMWORD PTR [rbx+0x80],xmm1
   14003f0ef:	movups xmm0,XMMWORD PTR [rbx+0x10050]
   14003f0f6:	movups XMMWORD PTR [rbx+0x90],xmm0
   14003f0fd:	movups xmm1,XMMWORD PTR [rbx+0x10060]
   14003f104:	movups XMMWORD PTR [rbx+0xa0],xmm1
   14003f10b:	mov    rax,QWORD PTR [rcx]
   14003f10e:	lea    rdx,[rbx+0xb0]
   14003f115:	mov    r8d,0xffc0
   14003f11b:	call   QWORD PTR [rax+0x10]
   14003f11e:	movsxd r14,eax
   14003f121:	add    r14,0x40
   14003f125:	sub    r15,0x40
   14003f129:	xor    r13d,r13d
   14003f12c:	cmp    r14,0x40
   14003f130:	jb     0x14003f1da
   14003f136:	xor    edi,edi
   14003f138:	cmp    BYTE PTR [rdi+rbx*1+0x70],0x7b
   14003f13d:	jne    0x14003f1c7
   14003f143:	cmp    BYTE PTR [rdi+rbx*1+0x71],0x52
   14003f148:	jne    0x14003f1c7
   14003f14a:	cmp    BYTE PTR [rdi+rbx*1+0x72],0x42
   14003f14f:	jne    0x14003f1c7
   14003f151:	cmp    BYTE PTR [rdi+rbx*1+0x73],0x7d
   14003f156:	jne    0x14003f1c7
   14003f158:	cmp    BYTE PTR [rdi+rbx*1+0x7f],0x0
   14003f15d:	jne    0x14003f1c7
   14003f15f:	cmp    BYTE PTR [rdi+rbx*1+0x83],0x0
   14003f167:	jne    0x14003f1c7
   14003f169:	cmp    BYTE PTR [rdi+rbx*1+0x84],0x1
   14003f171:	jne    0x14003f1c7
   14003f173:	mov    rsi,QWORD PTR [rbx+0x20]
   14003f177:	mov    QWORD PTR [rsp+0x38],rsi
   14003f17c:	mov    rax,QWORD PTR [rsi]
   14003f17f:	mov    rcx,rsi
   14003f182:	call   QWORD PTR [rax+0x20]
   14003f185:	mov    r12,rax
   14003f188:	mov    QWORD PTR [rsp+0x40],rax
   14003f18d:	add    rdi,r15
   14003f190:	add    rdi,QWORD PTR [rsp+0x98]
   14003f198:	mov    r9,QWORD PTR [rsp+0xa8]
   14003f1a0:	mov    r8,QWORD PTR [rsp+0xa0]
   14003f1a8:	mov    rdx,rdi
   14003f1ab:	mov    rcx,rbx
   14003f1ae:	call   0x14003d290
   14003f1b3:	test   al,al
   14003f1b5:	jne    0x14003f1fe
   14003f1b7:	mov    rax,QWORD PTR [rsi]
   14003f1ba:	xor    r8d,r8d
   14003f1bd:	mov    rdx,r12
   14003f1c0:	mov    rcx,rsi
   14003f1c3:	call   QWORD PTR [rax+0x18]
   14003f1c6:	nop
   14003f1c7:	inc    r13d
   14003f1ca:	mov    edi,r13d
   14003f1cd:	lea    rax,[r13+0x40]
   14003f1d1:	cmp    rax,r14
   14003f1d4:	jbe    0x14003f138
   14003f1da:	cmp    r14,0x10000
   14003f1e1:	jne    0x14003f238
   14003f1e3:	add    r15,r14
   14003f1e6:	xor    dil,dil
   14003f1e9:	mov    rsi,QWORD PTR [rsp+0x90]
   14003f1f1:	mov    r14,QWORD PTR [rsp+0x98]
   14003f1f9:	jmp    0x14003f091
   14003f1fe:	cmp    BYTE PTR [rsp+0xb0],0x0
   14003f206:	je     0x14003f223
   14003f208:	mov    r9d,0x64
   14003f20e:	mov    QWORD PTR [rsp+0x20],r9
   14003f213:	xor    edx,edx
   14003f215:	lea    r8d,[r9-0x63]
   14003f219:	mov    rcx,QWORD PTR [rbx+0x20]
   14003f21d:	call   0x14003f3a0
   14003f222:	nop
   14003f223:	mov    rax,QWORD PTR [rsi]
   14003f226:	xor    r8d,r8d
   14003f229:	mov    rdx,r12
   14003f22c:	mov    rcx,rsi
   14003f22f:	call   QWORD PTR [rax+0x18]
   14003f232:	nop
   14003f233:	mov    rax,rdi
   14003f236:	jmp    0x14003f260
   14003f238:	cmp    BYTE PTR [rsp+0xb0],0x0
   14003f240:	je     0x14003f25c
   14003f242:	mov    r9d,0x64
   14003f248:	mov    QWORD PTR [rsp+0x20],r9
   14003f24d:	xor    edx,edx
   14003f24f:	lea    r8d,[r9-0x63]
   14003f253:	mov    rcx,QWORD PTR [rbx+0x20]
   14003f257:	call   0x14003f3a0
   14003f25c:	or     rax,0xffffffffffffffff
   14003f260:	add    rsp,0x50
   14003f264:	pop    r15
   14003f266:	pop    r14
   14003f268:	pop    r13
   14003f26a:	pop    r12
   14003f26c:	pop    rdi
   14003f26d:	pop    rsi
   14003f26e:	pop    rbx
   14003f26f:	ret    
   14003f270:	mov    QWORD PTR [rsp+0x20],rbx
   14003f275:	push   rdi
   14003f276:	sub    rsp,0xa0
   14003f27d:	mov    rax,QWORD PTR [rip+0x42c5c]        # 0x140081ee0
   14003f284:	xor    rax,rsp
   14003f287:	mov    QWORD PTR [rsp+0x90],rax
   14003f28f:	mov    dil,r9b
   14003f292:	mov    rbx,r8
   14003f295:	cmp    ecx,0xffffffff
   14003f298:	je     0x14003f2de
   14003f29a:	shl    edx,0x9
   14003f29d:	mov    r8d,ecx
   14003f2a0:	mov    r9d,edx
   14003f2a3:	shl    r8d,0x9
   14003f2a7:	mov    edx,ecx
   14003f2a9:	mov    ecx,0x66
   14003f2ae:	call   0x14003b620
   14003f2b3:	and    DWORD PTR [rsp+0x80],0x0
   14003f2bb:	lea    rcx,[rsp+0x20]
   14003f2c0:	and    DWORD PTR [rsp+0x84],0x0
   14003f2c8:	neg    dil
   14003f2cb:	sbb    eax,eax
   14003f2cd:	neg    eax
   14003f2cf:	add    eax,0x67
   14003f2d2:	mov    DWORD PTR [rsp+0x88],eax
   14003f2d9:	call   0x1400479a4
   14003f2de:	or     DWORD PTR [rbx],0xffffffff
   14003f2e1:	mov    rcx,QWORD PTR [rsp+0x90]
   14003f2e9:	xor    rcx,rsp
   14003f2ec:	call   0x140055f90
   14003f2f1:	mov    rbx,QWORD PTR [rsp+0xc8]
   14003f2f9:	add    rsp,0xa0
   14003f300:	pop    rdi
   14003f301:	ret    
   14003f302:	int3   
   14003f303:	int3   
   14003f304:	mov    r11,rsp
   14003f307:	mov    QWORD PTR [r11+0x8],rbx
   14003f30b:	push   rdi
   14003f30c:	sub    rsp,0xa0
   14003f313:	mov    rax,QWORD PTR [rip+0x42bc6]        # 0x140081ee0
   14003f31a:	xor    rax,rsp
   14003f31d:	mov    QWORD PTR [rsp+0x90],rax
   14003f325:	and    DWORD PTR [r11-0x28],0x0
   14003f32a:	mov    rdi,r8
   14003f32d:	and    DWORD PTR [r11-0x24],0x0
   14003f332:	mov    bl,dl
   14003f334:	test   cl,cl
   14003f336:	lea    rcx,[rsp+0x20]
   14003f33b:	je     0x14003f34c
   14003f33d:	mov    DWORD PTR [r11-0x20],0x60
   14003f345:	call   0x1400479a4
   14003f34a:	jmp    0x14003f37e
   14003f34c:	mov    DWORD PTR [rsp+0x88],0x61
   14003f357:	call   0x1400479a4
   14003f35c:	test   bl,bl
   14003f35e:	je     0x14003f37e
   14003f360:	mov    rdx,rdi
   14003f363:	mov    ecx,0x40
   14003f368:	call   0x1400013b0
   14003f36d:	mov    edx,0xa
   14003f372:	lea    rcx,[rip+0x554e7]        # 0x140094860
   14003f379:	call   0x14001bf08
   14003f37e:	mov    rcx,QWORD PTR [rsp+0x90]
   14003f386:	xor    rcx,rsp
   14003f389:	call   0x140055f90
   14003f38e:	mov    rbx,QWORD PTR [rsp+0xb0]
   14003f396:	add    rsp,0xa0
   14003f39d:	pop    rdi
   14003f39e:	ret    
   14003f39f:	int3   
   14003f3a0:	mov    QWORD PTR [rsp+0x8],rbx
   14003f3a5:	mov    QWORD PTR [rsp+0x10],rbp
   14003f3aa:	mov    QWORD PTR [rsp+0x18],rsi
   14003f3af:	push   rdi
   14003f3b0:	sub    rsp,0x20
   14003f3b4:	mov    esi,r8d
   14003f3b7:	mov    edi,edx
   14003f3b9:	mov    rbp,rcx
   14003f3bc:	cmp    edx,0xffffffff
   14003f3bf:	jne    0x14003f3d5
   14003f3c1:	or     DWORD PTR [rip+0x554b5],edx        # 0x14009487c
   14003f3c7:	lea    rcx,[rip+0x30e42]        # 0x140070210
   14003f3ce:	call   0x14001796c
   14003f3d3:	jmp    0x14003f425
   14003f3d5:	mov    rdx,QWORD PTR [rsp+0x50]
   14003f3da:	mov    rcx,r9
   14003f3dd:	call   0x14004596c
   14003f3e2:	mov    rcx,QWORD PTR [rbp+0x22b0]
   14003f3e9:	cdq    
   14003f3ea:	idiv   esi
   14003f3ec:	mov    r8d,0x64
   14003f3f2:	mov    ebx,eax
   14003f3f4:	mov    eax,r8d
   14003f3f7:	cdq    
   14003f3f8:	idiv   esi
   14003f3fa:	imul   eax,edi
   14003f3fd:	add    ebx,eax
   14003f3ff:	cmp    BYTE PTR [rcx+0x6150],0x0
   14003f406:	jne    0x14003f41f
   14003f408:	cmp    ebx,DWORD PTR [rip+0x5546e]        # 0x14009487c
   14003f40e:	je     0x14003f41f
   14003f410:	movsxd rdx,ebx
   14003f413:	lea    rcx,[rip+0x30d8a]        # 0x1400701a4
   14003f41a:	call   0x140048840
   14003f41f:	mov    DWORD PTR [rip+0x55457],ebx        # 0x14009487c
   14003f425:	mov    rbx,QWORD PTR [rsp+0x30]
   14003f42a:	mov    rbp,QWORD PTR [rsp+0x38]
   14003f42f:	mov    rsi,QWORD PTR [rsp+0x40]
   14003f434:	add    rsp,0x20
   14003f438:	pop    rdi
   14003f439:	ret    
   14003f43a:	int3   
   14003f43b:	int3   
   14003f43c:	mov    rax,rsp
   14003f43f:	push   rdi
   14003f440:	push   r12
   14003f442:	push   r13
   14003f444:	push   r14
   14003f446:	push   r15
   14003f448:	sub    rsp,0xc0
   14003f44f:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   14003f458:	mov    QWORD PTR [rax+0x10],rbx
   14003f45c:	mov    QWORD PTR [rax+0x18],rbp
   14003f460:	mov    QWORD PTR [rax+0x20],rsi
   14003f464:	mov    rax,QWORD PTR [rip+0x42a75]        # 0x140081ee0
   14003f46b:	xor    rax,rsp
   14003f46e:	mov    QWORD PTR [rsp+0xb0],rax
   14003f476:	mov    rbx,rcx
   14003f479:	mov    r14,QWORD PTR [rcx+0x20]
   14003f47d:	mov    QWORD PTR [rsp+0x40],r14
   14003f482:	mov    rax,QWORD PTR [r14]
   14003f485:	mov    rcx,r14
   14003f488:	call   QWORD PTR [rax+0x20]
   14003f48b:	mov    r13,rax
   14003f48e:	mov    QWORD PTR [rsp+0x48],rax
   14003f493:	mov    rcx,QWORD PTR [rbx+0x20]
   14003f497:	mov    rdx,QWORD PTR [rcx]
   14003f49a:	call   QWORD PTR [rdx+0x20]
   14003f49d:	mov    rdi,rax
   14003f4a0:	lea    r8,[rbx+0x100c0]
   14003f4a7:	mov    BYTE PTR [rsp+0x20],0x0
   14003f4ac:	xor    r9d,r9d
   14003f4af:	mov    rdx,rax
   14003f4b2:	mov    rcx,rbx
   14003f4b5:	call   0x14003f014
   14003f4ba:	mov    QWORD PTR [rsp+0x30],rax
   14003f4bf:	cmp    rdi,rax
   14003f4c2:	jne    0x14003f59b
   14003f4c8:	cmp    QWORD PTR [rbx+0x100f0],rdi
   14003f4cf:	ja     0x14003f59b
   14003f4d5:	mov    ecx,DWORD PTR [rbx+0x100d0]
   14003f4db:	sub    ecx,DWORD PTR [rbx+0x100d4]
   14003f4e1:	mov    DWORD PTR [rbx+0x100b0],ecx
   14003f4e7:	xor    edi,edi
   14003f4e9:	lea    esi,[rdi+0x1]
   14003f4ec:	cmp    DWORD PTR [rbx+0x1010c],edi
   14003f4f2:	jbe    0x14003f59e
   14003f4f8:	call   0x140046bb4
   14003f4fd:	xor    ebp,ebp
   14003f4ff:	xor    r15d,r15d
   14003f502:	cmp    QWORD PTR [rbx+0x10100],rbp
   14003f509:	jbe    0x14003f564
   14003f50b:	mov    r12d,edi
   14003f50e:	mov    rdx,r12
   14003f511:	imul   rdx,QWORD PTR [rbx+0x10100]
   14003f519:	add    rdx,rbp
   14003f51c:	add    rdx,QWORD PTR [rsp+0x30]
   14003f521:	xor    r9d,r9d
   14003f524:	lea    r8,[rsp+0x50]
   14003f529:	mov    rcx,rbx
   14003f52c:	call   0x14003d290
   14003f531:	test   al,al
   14003f533:	je     0x14003f59b
   14003f535:	cmp    DWORD PTR [rsp+0xa0],edi
   14003f53c:	jne    0x14003f59b
   14003f53e:	mov    eax,DWORD PTR [rbx+0x100b0]
   14003f544:	imul   rax,r15
   14003f548:	cmp    rax,QWORD PTR [rsp+0x70]
   14003f54d:	jne    0x14003f59b
   14003f54f:	mov    eax,DWORD PTR [rbx+0x100d0]
   14003f555:	add    rbp,rax
   14003f558:	add    r15,rsi
   14003f55b:	cmp    rbp,QWORD PTR [rbx+0x10100]
   14003f562:	jb     0x14003f50e
   14003f564:	mov    rax,QWORD PTR [rbx+0x20]
   14003f568:	mov    rcx,QWORD PTR [rax+0x22b0]
   14003f56f:	cmp    BYTE PTR [rcx+0x6150],0x0
   14003f576:	jne    0x14003f58b
   14003f578:	mov    edx,DWORD PTR [rbx+0x1010c]
   14003f57e:	mov    ecx,edi
   14003f580:	mov    r9d,edx
   14003f583:	mov    r8d,edi
   14003f586:	call   0x1400487f8
   14003f58b:	add    edi,esi
   14003f58d:	cmp    edi,DWORD PTR [rbx+0x1010c]
   14003f593:	jb     0x14003f4f8
   14003f599:	jmp    0x14003f59e
   14003f59b:	xor    sil,sil
   14003f59e:	mov    r9,QWORD PTR [r14]
   14003f5a1:	xor    r8d,r8d
   14003f5a4:	mov    rdx,r13
   14003f5a7:	mov    rcx,r14
   14003f5aa:	call   QWORD PTR [r9+0x18]
   14003f5ae:	nop
   14003f5af:	mov    al,sil
   14003f5b2:	mov    rcx,QWORD PTR [rsp+0xb0]
   14003f5ba:	xor    rcx,rsp
   14003f5bd:	call   0x140055f90
   14003f5c2:	lea    r11,[rsp+0xc0]
   14003f5ca:	mov    rbx,QWORD PTR [r11+0x38]
   14003f5ce:	mov    rbp,QWORD PTR [r11+0x40]
   14003f5d2:	mov    rsi,QWORD PTR [r11+0x48]
   14003f5d6:	mov    rsp,r11
   14003f5d9:	pop    r15
   14003f5db:	pop    r14
   14003f5dd:	pop    r13
   14003f5df:	pop    r12
   14003f5e1:	pop    rdi
   14003f5e2:	ret    
   14003f5e3:	int3   
   14003f5e4:	xor    eax,eax
   14003f5e6:	mov    QWORD PTR [rcx+0x10],rax
   14003f5ea:	mov    QWORD PTR [rcx+0x18],rax
   14003f5ee:	mov    QWORD PTR [rcx+0x20],rax
   14003f5f2:	mov    QWORD PTR [rcx+0x28],rax
   14003f5f6:	mov    QWORD PTR [rcx],rax
   14003f5f9:	mov    QWORD PTR [rcx+0x8],rax
   14003f5fd:	mov    BYTE PTR [rcx+0x3c],al
   14003f600:	mov    rax,rcx
   14003f603:	ret    
   14003f604:	rex push rbx
   14003f606:	sub    rsp,0x20
   14003f60a:	mov    rbx,rcx
   14003f60d:	mov    rcx,QWORD PTR [rcx]
   14003f610:	call   0x14005a938
   14003f615:	mov    rcx,QWORD PTR [rbx+0x10]
   14003f619:	test   rcx,rcx
   14003f61c:	je     0x14003f623
   14003f61e:	call   0x14005a938
   14003f623:	add    rsp,0x20
   14003f627:	pop    rbx
   14003f628:	ret    
   14003f629:	int3   
   14003f62a:	int3   
   14003f62b:	int3   
   14003f62c:	mov    QWORD PTR [rsp+0x8],rbx
   14003f631:	mov    QWORD PTR [rsp+0x10],rsi
   14003f636:	push   rdi
   14003f637:	sub    rsp,0x20
   14003f63b:	add    QWORD PTR [rcx+0x8],rdx
   14003f63f:	mov    rbx,rcx
   14003f642:	mov    rax,QWORD PTR [rcx+0x8]
   14003f646:	cmp    rax,QWORD PTR [rcx+0x10]
   14003f64a:	jbe    0x14003f6be
   14003f64c:	mov    r8,QWORD PTR [rcx+0x18]
   14003f650:	test   r8,r8
   14003f653:	je     0x14003f679
   14003f655:	cmp    rax,r8
   14003f658:	jbe    0x14003f679
   14003f65a:	lea    rdx,[rip+0x3101f]        # 0x140070680
   14003f661:	lea    rcx,[rip+0x551f8]        # 0x140094860
   14003f668:	call   0x14001bc8c
   14003f66d:	lea    rcx,[rip+0x551ec]        # 0x140094860
   14003f674:	call   0x14001bd24
   14003f679:	mov    rdx,QWORD PTR [rbx+0x10]
   14003f67d:	mov    rcx,QWORD PTR [rbx]
   14003f680:	mov    rax,rdx
   14003f683:	shr    rax,0x2
   14003f687:	lea    rdi,[rdx+0x20]
   14003f68b:	add    rdi,rax
   14003f68e:	cmp    QWORD PTR [rbx+0x8],rdi
   14003f692:	cmova  rdi,QWORD PTR [rbx+0x8]
   14003f697:	mov    rdx,rdi
   14003f69a:	shl    rdx,0x3
   14003f69e:	call   0x14005a940
   14003f6a3:	mov    rsi,rax
   14003f6a6:	test   rax,rax
   14003f6a9:	jne    0x14003f6b7
   14003f6ab:	lea    rcx,[rip+0x551ae]        # 0x140094860
   14003f6b2:	call   0x14001bd24
   14003f6b7:	mov    QWORD PTR [rbx],rsi
   14003f6ba:	mov    QWORD PTR [rbx+0x10],rdi
   14003f6be:	mov    rbx,QWORD PTR [rsp+0x30]
   14003f6c3:	mov    rsi,QWORD PTR [rsp+0x38]
   14003f6c8:	add    rsp,0x20
   14003f6cc:	pop    rdi
   14003f6cd:	ret    
   14003f6ce:	int3   
   14003f6cf:	int3   
   14003f6d0:	mov    r8,QWORD PTR [rcx]
   14003f6d3:	mov    rcx,QWORD PTR [rip+0x561ae]        # 0x140095888
   14003f6da:	mov    rax,QWORD PTR [rdx]
   14003f6dd:	lea    rdx,[rcx+rax*2]
   14003f6e1:	lea    rcx,[rcx+r8*2]
   14003f6e5:	mov    r8d,0x8
   14003f6eb:	jmp    0x14005ecd0
   14003f6f0:	mov    QWORD PTR [rsp+0x8],rbx
   14003f6f5:	mov    QWORD PTR [rsp+0x10],rbp
   14003f6fa:	mov    QWORD PTR [rsp+0x18],rsi
   14003f6ff:	push   rdi
   14003f700:	push   r14
   14003f702:	push   r15
   14003f704:	sub    rsp,0x20
   14003f708:	mov    r15,QWORD PTR [rcx+0x10]
   14003f70c:	mov    rbp,rdx
   14003f70f:	mov    ebx,DWORD PTR [rcx+0x18]
   14003f712:	mov    rdi,rcx
   14003f715:	jmp    0x14003f74f
   14003f717:	mov    esi,ebx
   14003f719:	mov    r8d,0x8
   14003f71f:	sar    esi,1
   14003f721:	movsxd rax,esi
   14003f724:	lea    r14,[r15+rax*8]
   14003f728:	mov    rax,QWORD PTR [rdi]
   14003f72b:	mov    rcx,QWORD PTR [r14]
   14003f72e:	lea    rdx,[rax+rcx*2]
   14003f732:	mov    rcx,rbp
   14003f735:	call   0x14005ecd0
   14003f73a:	test   eax,eax
   14003f73c:	je     0x14003f76e
   14003f73e:	jns    0x14003f744
   14003f740:	mov    ebx,esi
   14003f742:	jmp    0x14003f74f
   14003f744:	or     eax,0xffffffff
   14003f747:	lea    r15,[r14+0x8]
   14003f74b:	sub    eax,esi
   14003f74d:	add    ebx,eax
   14003f74f:	test   ebx,ebx
   14003f751:	jg     0x14003f717
   14003f753:	xor    eax,eax
   14003f755:	mov    rbx,QWORD PTR [rsp+0x40]
   14003f75a:	mov    rbp,QWORD PTR [rsp+0x48]
   14003f75f:	mov    rsi,QWORD PTR [rsp+0x50]
   14003f764:	add    rsp,0x20
   14003f768:	pop    r15
   14003f76a:	pop    r14
   14003f76c:	pop    rdi
   14003f76d:	ret    
   14003f76e:	mov    rcx,QWORD PTR [r14]
   14003f771:	mov    rax,QWORD PTR [rdi]
   14003f774:	lea    rax,[rax+rcx*2]
   14003f778:	jmp    0x14003f755
   14003f77a:	int3   
   14003f77b:	int3   
   14003f77c:	rex push rbx
   14003f77e:	push   rbp
   14003f77f:	push   rsi
   14003f780:	push   rdi
   14003f781:	push   r12
   14003f783:	push   r13
   14003f785:	push   r14
   14003f787:	push   r15
   14003f789:	mov    eax,0x2058
   14003f78e:	call   0x140055f20
   14003f793:	sub    rsp,rax
   14003f796:	mov    rax,QWORD PTR [rip+0x42743]        # 0x140081ee0
   14003f79d:	xor    rax,rsp
   14003f7a0:	mov    QWORD PTR [rsp+0x2040],rax
   14003f7a8:	mov    r14,QWORD PTR [rsp+0x20c8]
   14003f7b0:	xor    r13d,r13d
   14003f7b3:	mov    rbp,r9
   14003f7b6:	mov    rsi,r8
   14003f7b9:	mov    rbx,rdx
   14003f7bc:	mov    r12,rcx
   14003f7bf:	cmp    QWORD PTR [rcx],r13
   14003f7c2:	je     0x14003f942
   14003f7c8:	mov    ecx,DWORD PTR [rsp+0x20c0]
   14003f7cf:	lea    rdx,[rip+0x30e67]        # 0x14007063d
   14003f7d6:	test   ecx,ecx
   14003f7d8:	je     0x14003f7f6
   14003f7da:	sub    ecx,0x1
   14003f7dd:	je     0x14003f7ed
   14003f7df:	cmp    ecx,0x1
   14003f7e2:	jne    0x14003f7fd
   14003f7e4:	lea    rdx,[rip+0x30e79]        # 0x140070664
   14003f7eb:	jmp    0x14003f7fd
   14003f7ed:	lea    rdx,[rip+0x30e6c]        # 0x140070660
   14003f7f4:	jmp    0x14003f7fd
   14003f7f6:	lea    rdx,[rip+0x30e5f]        # 0x14007065c
   14003f7fd:	mov    r8d,0x1
   14003f803:	or     ecx,0xffffffff
   14003f806:	call   0x140017ac0
   14003f80b:	or     rdi,0xffffffffffffffff
   14003f80f:	mov    r15d,eax
   14003f812:	test   r14,r14
   14003f815:	je     0x14003f854
   14003f817:	mov    r8d,0x1000
   14003f81d:	lea    rdx,[rsp+0x1040]
   14003f825:	mov    rcx,r14
   14003f828:	call   0x140048ca8
   14003f82d:	lea    rax,[rsp+0x1040]
   14003f835:	mov    r8,rdi
   14003f838:	inc    r8
   14003f83b:	cmp    BYTE PTR [rax+r8*1],r13b
   14003f83f:	jne    0x14003f838
   14003f841:	lea    rdx,[rsp+0x1040]
   14003f849:	mov    ecx,r15d
   14003f84c:	call   0x140017ac0
   14003f851:	mov    r15d,eax
   14003f854:	mov    r8d,0x1000
   14003f85a:	lea    rdx,[rsp+0x40]
   14003f85f:	mov    rcx,rbx
   14003f862:	call   0x140048ca8
   14003f867:	lea    rax,[rsp+0x40]
   14003f86c:	mov    BYTE PTR [rsp+0x103f],r13b
   14003f874:	inc    rdi
   14003f877:	cmp    BYTE PTR [rax+rdi*1],r13b
   14003f87b:	jne    0x14003f874
   14003f87d:	mov    r8,rdi
   14003f880:	lea    rdx,[rsp+0x40]
   14003f885:	mov    ecx,r15d
   14003f888:	call   0x140017ac0
   14003f88d:	not    eax
   14003f88f:	lea    r8,[rip+0x30dd2]        # 0x140070668
   14003f896:	mov    r9d,eax
   14003f899:	lea    rcx,[rsp+0x20]
   14003f89e:	mov    edx,0xa
   14003f8a3:	call   0x140006acc
   14003f8a8:	lea    rdx,[rsp+0x20]
   14003f8ad:	mov    rcx,r12
   14003f8b0:	call   0x14003f6f0
   14003f8b5:	test   rax,rax
   14003f8b8:	jne    0x14003f8cc
   14003f8ba:	lea    rdx,[rsp+0x20]
   14003f8bf:	mov    rcx,r12
   14003f8c2:	call   0x14003fdf4
   14003f8c7:	test   rax,rax
   14003f8ca:	je     0x14003f942
   14003f8cc:	lea    rdi,[rax+0x12]
   14003f8d0:	mov    r14d,0x22
   14003f8d6:	cmp    WORD PTR [rdi],r14w
   14003f8da:	jne    0x14003f8e0
   14003f8dc:	add    rdi,0x2
   14003f8e0:	mov    edx,0xc
   14003f8e5:	mov    rcx,rdi
   14003f8e8:	call   0x1400590e0
   14003f8ed:	mov    rcx,rax
   14003f8f0:	mov    ebx,0xff
   14003f8f5:	sub    rcx,rdi
   14003f8f8:	sar    rcx,1
   14003f8fb:	test   rax,rax
   14003f8fe:	lea    rax,[rbp-0x1]
   14003f902:	cmovne rbx,rcx
   14003f906:	cmp    rbx,rax
   14003f909:	jbe    0x14003f914
   14003f90b:	neg    rbp
   14003f90e:	sbb    rbx,rbx
   14003f911:	and    rbx,rax
   14003f914:	test   rbx,rbx
   14003f917:	je     0x14003f927
   14003f919:	mov    r8,rbx
   14003f91c:	mov    rdx,rdi
   14003f91f:	mov    rcx,rsi
   14003f922:	call   0x14005e00c
   14003f927:	mov    edx,r14d
   14003f92a:	mov    WORD PTR [rsi+rbx*2],r13w
   14003f92f:	mov    rcx,rsi
   14003f932:	call   0x140058684
   14003f937:	test   rax,rax
   14003f93a:	je     0x14003f95a
   14003f93c:	mov    WORD PTR [rax],r13w
   14003f940:	jmp    0x14003f95a
   14003f942:	cmp    rbx,rsi
   14003f945:	je     0x14003f95a
   14003f947:	sub    rsi,rbx
   14003f94a:	movzx  eax,WORD PTR [rbx]
   14003f94d:	mov    WORD PTR [rsi+rbx*1],ax
   14003f951:	lea    rbx,[rbx+0x2]
   14003f955:	test   ax,ax
   14003f958:	jne    0x14003f94a
   14003f95a:	mov    rcx,QWORD PTR [rsp+0x2040]
   14003f962:	xor    rcx,rsp
   14003f965:	call   0x140055f90
   14003f96a:	add    rsp,0x2058
   14003f971:	pop    r15
   14003f973:	pop    r14
   14003f975:	pop    r13
   14003f977:	pop    r12
   14003f979:	pop    rdi
   14003f97a:	pop    rsi
   14003f97b:	pop    rbp
   14003f97c:	pop    rbx
   14003f97d:	ret    
   14003f97e:	int3   
   14003f97f:	int3   
   14003f980:	rex push rbx
   14003f982:	mov    eax,0x1030
   14003f987:	call   0x140055f20
   14003f98c:	sub    rsp,rax
   14003f98f:	mov    rax,QWORD PTR [rip+0x4254a]        # 0x140081ee0
   14003f996:	xor    rax,rsp
   14003f999:	mov    QWORD PTR [rsp+0x1020],rax
   14003f9a1:	mov    rax,rdx
   14003f9a4:	mov    rbx,rcx
   14003f9a7:	mov    rcx,rax
   14003f9aa:	lea    rdx,[rsp+0x20]
   14003f9af:	mov    r8d,0x800
   14003f9b5:	call   0x14003fe84
   14003f9ba:	lea    rdx,[rsp+0x20]
   14003f9bf:	mov    rcx,rbx
   14003f9c2:	call   0x14003f9e0
   14003f9c7:	mov    rcx,QWORD PTR [rsp+0x1020]
   14003f9cf:	xor    rcx,rsp
   14003f9d2:	call   0x140055f90
   14003f9d7:	add    rsp,0x1030
   14003f9de:	pop    rbx
   14003f9df:	ret    
   14003f9e0:	rex push rbp
   14003f9e2:	push   rsi
   14003f9e3:	push   rdi
   14003f9e4:	push   r12
   14003f9e6:	push   r13
   14003f9e8:	push   r14
   14003f9ea:	push   r15
   14003f9ec:	lea    rbp,[rsp-0x3f80]
   14003f9f4:	mov    eax,0x4080
   14003f9f9:	call   0x140055f20
   14003f9fe:	sub    rsp,rax
   14003fa01:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14003fa0a:	mov    QWORD PTR [rsp+0x40d0],rbx
   14003fa12:	mov    rax,QWORD PTR [rip+0x424c7]        # 0x140081ee0
   14003fa19:	xor    rax,rsp
   14003fa1c:	mov    QWORD PTR [rbp+0x3f70],rax
   14003fa23:	mov    rdi,rdx
   14003fa26:	mov    rbx,rcx
   14003fa29:	mov    r15d,0x5c
   14003fa2f:	mov    edx,r15d
   14003fa32:	mov    rcx,rdi
   14003fa35:	call   0x1400590e0
   14003fa3a:	xor    r14d,r14d
   14003fa3d:	test   rax,rax
   14003fa40:	jne    0x14003fa85
   14003fa42:	mov    r8d,0x800
   14003fa48:	lea    rdx,[rbp+0xf70]
   14003fa4f:	xor    ecx,ecx
   14003fa51:	call   QWORD PTR [rip+0x2c719]        # 0x14006c170
   14003fa57:	mov    edx,r15d
   14003fa5a:	lea    rcx,[rbp+0xf70]
   14003fa61:	call   0x140058684
   14003fa66:	test   rax,rax
   14003fa69:	je     0x14003fd89
   14003fa6f:	sub    rax,rdi
   14003fa72:	movzx  ecx,WORD PTR [rdi]
   14003fa75:	mov    WORD PTR [rax+rdi*1+0x2],cx
   14003fa7a:	lea    rdi,[rdi+0x2]
   14003fa7e:	test   cx,cx
   14003fa81:	jne    0x14003fa72
   14003fa83:	jmp    0x14003fa9f
   14003fa85:	lea    rcx,[rbp+0xf70]
   14003fa8c:	sub    rcx,rdi
   14003fa8f:	movzx  eax,WORD PTR [rdi]
   14003fa92:	mov    WORD PTR [rcx+rdi*1],ax
   14003fa96:	lea    rdi,[rdi+0x2]
   14003fa9a:	test   ax,ax
   14003fa9d:	jne    0x14003fa8f
   14003fa9f:	lea    rcx,[rsp+0x40]
   14003faa4:	call   0x14002071c
   14003faa9:	nop
   14003faaa:	mov    r8d,0x4
   14003fab0:	lea    rdx,[rbp+0xf70]
   14003fab7:	lea    rcx,[rsp+0x40]
   14003fabc:	call   0x140020c80
   14003fac1:	test   al,al
   14003fac3:	je     0x14003fd7f
   14003fac9:	mov    r13b,r14b
   14003facc:	or     esi,0xffffffff
   14003facf:	mov    r12d,r14d
   14003fad2:	cmp    esi,0xffffffff
   14003fad5:	jne    0x14003fbd4
   14003fadb:	lea    rcx,[rsp+0x40]
   14003fae0:	call   0x1400211a0
   14003fae5:	mov    r15,rax
   14003fae8:	mov    r8d,0x2000
   14003faee:	lea    rdx,[rbp+0x1f70]
   14003faf5:	lea    rcx,[rsp+0x40]
   14003fafa:	call   0x140020ed4
   14003faff:	cdqe   
   14003fb01:	mov    QWORD PTR [rsp+0x28],rax
   14003fb06:	lea    ecx,[rax-0x10]
   14003fb09:	mov    DWORD PTR [rsp+0x20],ecx
   14003fb0d:	test   ecx,ecx
   14003fb0f:	js     0x14003fb97
   14003fb15:	lea    rdi,[rbp+0x1f74]
   14003fb1c:	cmp    BYTE PTR [rdi-0x4],0x2a
   14003fb20:	jne    0x14003fb4b
   14003fb22:	cmp    BYTE PTR [rdi-0x3],0x2a
   14003fb26:	jne    0x14003fb4b
   14003fb28:	lea    rcx,[rdi-0x2]
   14003fb2c:	mov    r8d,0xb
   14003fb32:	lea    rdx,[rip+0x30af7]        # 0x140070630
   14003fb39:	call   0x14005e070
   14003fb3e:	test   eax,eax
   14003fb40:	je     0x14003fb93
   14003fb42:	mov    rax,QWORD PTR [rsp+0x28]
   14003fb47:	mov    ecx,DWORD PTR [rsp+0x20]
   14003fb4b:	cmp    WORD PTR [rdi-0x4],0x2a
   14003fb50:	jne    0x14003fb7e
   14003fb52:	cmp    WORD PTR [rdi-0x2],0x2a
   14003fb57:	jne    0x14003fb7e
   14003fb59:	add    eax,0xffffffe0
   14003fb5c:	cmp    r14d,eax
   14003fb5f:	jg     0x14003fb7e
   14003fb61:	mov    r8d,0xb
   14003fb67:	lea    rdx,[rip+0x30ad2]        # 0x140070640
   14003fb6e:	mov    rcx,rdi
   14003fb71:	call   0x14005ecd0
   14003fb76:	test   eax,eax
   14003fb78:	je     0x14003fb90
   14003fb7a:	mov    ecx,DWORD PTR [rsp+0x20]
   14003fb7e:	inc    r14
   14003fb81:	inc    rdi
   14003fb84:	cmp    r14d,ecx
   14003fb87:	jg     0x14003fb97
   14003fb89:	mov    rax,QWORD PTR [rsp+0x28]
   14003fb8e:	jmp    0x14003fb1c
   14003fb90:	mov    r13b,0x1
   14003fb93:	lea    esi,[r14+r15*1]
   14003fb97:	movsxd rax,r15d
   14003fb9a:	mov    rdx,QWORD PTR [rsp+0x28]
   14003fb9f:	add    rdx,0xfffffffffffffff0
   14003fba3:	add    rdx,rax
   14003fba6:	xor    r8d,r8d
   14003fba9:	lea    rcx,[rsp+0x40]
   14003fbae:	call   0x140021048
   14003fbb3:	inc    r12d
   14003fbb6:	movsxd rax,r12d
   14003fbb9:	cmp    rax,0x100
   14003fbbf:	mov    r14d,0x0
   14003fbc5:	jb     0x14003fad2
   14003fbcb:	cmp    esi,0xffffffff
   14003fbce:	je     0x14003fd7f
   14003fbd4:	movsxd rdx,esi
   14003fbd7:	xor    r8d,r8d
   14003fbda:	lea    rcx,[rsp+0x40]
   14003fbdf:	call   0x140021048
   14003fbe4:	mov    ecx,0x80002
   14003fbe9:	call   0x14005d520
   14003fbee:	mov    QWORD PTR [rbx],rax
   14003fbf1:	test   rax,rax
   14003fbf4:	je     0x14003fd7f
   14003fbfa:	mov    r8d,0x80000
   14003fc00:	mov    rdx,rax
   14003fc03:	lea    rcx,[rsp+0x40]
   14003fc08:	call   0x140020ed4
   14003fc0d:	movsxd rcx,eax
   14003fc10:	mov    QWORD PTR [rbx+0x8],rcx
   14003fc14:	test   r13b,r13b
   14003fc17:	je     0x14003fc22
   14003fc19:	shr    rcx,1
   14003fc1c:	mov    QWORD PTR [rbx+0x8],rcx
   14003fc20:	jmp    0x14003fc63
   14003fc22:	lea    rcx,[rcx*2+0x2]
   14003fc2a:	call   0x14005d520
   14003fc2f:	mov    rdi,rax
   14003fc32:	test   rax,rax
   14003fc35:	je     0x14003fd7f
   14003fc3b:	mov    rdx,QWORD PTR [rbx+0x8]
   14003fc3f:	mov    rcx,QWORD PTR [rbx]
   14003fc42:	mov    BYTE PTR [rdx+rcx*1],r14b
   14003fc46:	mov    r8,QWORD PTR [rbx+0x8]
   14003fc4a:	inc    r8
   14003fc4d:	mov    rdx,rax
   14003fc50:	mov    rcx,QWORD PTR [rbx]
   14003fc53:	call   0x1400489f0
   14003fc58:	mov    rcx,QWORD PTR [rbx]
   14003fc5b:	call   0x14005a938
   14003fc60:	mov    QWORD PTR [rbx],rdi
   14003fc63:	mov    rcx,QWORD PTR [rbx+0x8]
   14003fc67:	mov    eax,0x40000
   14003fc6c:	cmp    rcx,rax
   14003fc6f:	cmova  rcx,rax
   14003fc73:	mov    rax,QWORD PTR [rbx]
   14003fc76:	mov    WORD PTR [rax+rcx*2],r14w
   14003fc7b:	mov    r8,r14
   14003fc7e:	mov    rcx,r14
   14003fc81:	mov    esi,0xc
   14003fc86:	cmp    QWORD PTR [rbx+0x8],r14
   14003fc8a:	jbe    0x14003fd19
   14003fc90:	lea    edi,[rsi+0x16]
   14003fc93:	lea    r10d,[rsi+0x1]
   14003fc97:	lea    r11d,[rsi-0x2]
   14003fc9b:	lea    r15d,[rsi+0x50]
   14003fc9f:	mov    rax,QWORD PTR [rbx]
   14003fca2:	movzx  edx,WORD PTR [rax+r8*2]
   14003fca7:	inc    r8
   14003fcaa:	test   dx,dx
   14003fcad:	je     0x14003fd19
   14003fcaf:	cmp    dx,r15w
   14003fcb3:	jne    0x14003fcfe
   14003fcb5:	movzx  r9d,WORD PTR [rax+r8*2]
   14003fcba:	cmp    r9d,edi
   14003fcbd:	je     0x14003fcf5
   14003fcbf:	cmp    r9d,r15d
   14003fcc2:	je     0x14003fcee
   14003fcc4:	cmp    r9d,0x6e
   14003fcc8:	je     0x14003fce7
   14003fcca:	cmp    r9d,0x72
   14003fcce:	je     0x14003fce0
   14003fcd0:	cmp    r9d,0x74
   14003fcd4:	jne    0x14003fd0c
   14003fcd6:	lea    edx,[r9-0x6b]
   14003fcda:	mov    WORD PTR [rax+rcx*2],dx
   14003fcde:	jmp    0x14003fcf9
   14003fce0:	mov    WORD PTR [rax+rcx*2],r10w
   14003fce5:	jmp    0x14003fcf9
   14003fce7:	mov    WORD PTR [rax+rcx*2],r11w
   14003fcec:	jmp    0x14003fcf9
   14003fcee:	mov    WORD PTR [rax+rcx*2],r15w
   14003fcf3:	jmp    0x14003fcf9
   14003fcf5:	mov    WORD PTR [rax+rcx*2],di
   14003fcf9:	inc    r8
   14003fcfc:	jmp    0x14003fd10
   14003fcfe:	cmp    dx,r10w
   14003fd02:	je     0x14003fd0a
   14003fd04:	cmp    dx,r11w
   14003fd08:	jne    0x14003fd0c
   14003fd0a:	mov    edx,esi
   14003fd0c:	mov    WORD PTR [rax+rcx*2],dx
   14003fd10:	inc    rcx
   14003fd13:	cmp    r8,QWORD PTR [rbx+0x8]
   14003fd17:	jb     0x14003fc9f
   14003fd19:	mov    rax,QWORD PTR [rbx]
   14003fd1c:	mov    WORD PTR [rax+rcx*2],r14w
   14003fd21:	mov    QWORD PTR [rbx+0x8],rcx
   14003fd25:	mov    edi,0x1
   14003fd2a:	lea    eax,[rcx-0x8]
   14003fd2d:	cmp    eax,edi
   14003fd2f:	jle    0x14003fd5a
   14003fd31:	mov    rax,QWORD PTR [rbx]
   14003fd34:	cmp    WORD PTR [rax+rdi*2-0x2],si
   14003fd39:	jne    0x14003fd4d
   14003fd3b:	cmp    WORD PTR [rax+rdi*2],si
   14003fd3f:	je     0x14003fd4d
   14003fd41:	lea    rcx,[rbx+0x10]
   14003fd45:	mov    rdx,rdi
   14003fd48:	call   0x14003fdc0
   14003fd4d:	inc    rdi
   14003fd50:	mov    eax,DWORD PTR [rbx+0x8]
   14003fd53:	sub    eax,0x8
   14003fd56:	cmp    edi,eax
   14003fd58:	jl     0x14003fd31
   14003fd5a:	mov    rax,QWORD PTR [rbx]
   14003fd5d:	mov    QWORD PTR [rip+0x55b24],rax        # 0x140095888
   14003fd64:	lea    r9,[rip+0xfffffffffffff965]        # 0x14003f6d0
   14003fd6b:	mov    r8d,0x8
   14003fd71:	mov    rdx,QWORD PTR [rbx+0x18]
   14003fd75:	mov    rcx,QWORD PTR [rbx+0x10]
   14003fd79:	call   0x14005aa20
   14003fd7e:	nop
   14003fd7f:	lea    rcx,[rsp+0x40]
   14003fd84:	call   0x140020758
   14003fd89:	mov    rcx,QWORD PTR [rbp+0x3f70]
   14003fd90:	xor    rcx,rsp
   14003fd93:	call   0x140055f90
   14003fd98:	mov    rbx,QWORD PTR [rsp+0x40d0]
   14003fda0:	add    rsp,0x4080
   14003fda7:	pop    r15
   14003fda9:	pop    r14
   14003fdab:	pop    r13
   14003fdad:	pop    r12
   14003fdaf:	pop    rdi
   14003fdb0:	pop    rsi
   14003fdb1:	pop    rbp
   14003fdb2:	ret    
   14003fdb3:	int3   
   14003fdb4:	xor    eax,eax
   14003fdb6:	cmp    QWORD PTR [rcx],rax
   14003fdb9:	setne  al
   14003fdbc:	ret    
   14003fdbd:	int3   
   14003fdbe:	int3   
   14003fdbf:	int3   
   14003fdc0:	mov    QWORD PTR [rsp+0x8],rbx
   14003fdc5:	push   rdi
   14003fdc6:	sub    rsp,0x20
   14003fdca:	mov    rdi,rdx
   14003fdcd:	mov    rbx,rcx
   14003fdd0:	mov    edx,0x1
   14003fdd5:	call   0x14003f62c
   14003fdda:	mov    r8,QWORD PTR [rbx+0x8]
   14003fdde:	mov    rax,QWORD PTR [rbx]
   14003fde1:	mov    rbx,QWORD PTR [rsp+0x30]
   14003fde6:	mov    QWORD PTR [rax+r8*8-0x8],rdi
   14003fdeb:	add    rsp,0x20
   14003fdef:	pop    rdi
   14003fdf0:	ret    
   14003fdf1:	int3   
   14003fdf2:	int3   
   14003fdf3:	int3   
   14003fdf4:	mov    QWORD PTR [rsp+0x8],rbx
   14003fdf9:	mov    QWORD PTR [rsp+0x10],rsi
   14003fdfe:	push   rdi
   14003fdff:	sub    rsp,0x20
   14003fe03:	mov    rbx,QWORD PTR [rcx]
   14003fe06:	mov    rdi,rdx
   14003fe09:	movzx  eax,WORD PTR [rbx]
   14003fe0c:	test   ax,ax
   14003fe0f:	je     0x14003fe60
   14003fe11:	cmp    ax,WORD PTR [rdi]
   14003fe14:	jne    0x14003fe4a
   14003fe16:	lea    rdx,[rdi+0x2]
   14003fe1a:	mov    r8d,0x7
   14003fe20:	lea    rcx,[rbx+0x2]
   14003fe24:	call   0x14005ecd0
   14003fe29:	test   eax,eax
   14003fe2b:	jne    0x14003fe4a
   14003fe2d:	cmp    WORD PTR [rbx+0x10],0x3d
   14003fe32:	jne    0x14003fe4a
   14003fe34:	cmp    WORD PTR [rbx+0x12],0x22
   14003fe39:	jne    0x14003fe4a
   14003fe3b:	mov    rax,rbx
   14003fe3e:	jmp    0x14003fe62
   14003fe40:	cmp    ax,0xc
   14003fe44:	je     0x14003fe54
   14003fe46:	add    rbx,0x2
   14003fe4a:	movzx  eax,WORD PTR [rbx]
   14003fe4d:	test   ax,ax
   14003fe50:	jne    0x14003fe40
   14003fe52:	jmp    0x14003fe58
   14003fe54:	add    rbx,0x2
   14003fe58:	cmp    WORD PTR [rbx],0xc
   14003fe5c:	je     0x14003fe54
   14003fe5e:	jmp    0x14003fe09
   14003fe60:	xor    eax,eax
   14003fe62:	mov    rbx,QWORD PTR [rsp+0x30]
   14003fe67:	mov    rsi,QWORD PTR [rsp+0x38]
   14003fe6c:	add    rsp,0x20
   14003fe70:	pop    rdi
   14003fe71:	ret    
   14003fe72:	int3   
   14003fe73:	int3   
   14003fe74:	mov    BYTE PTR [rcx],0x0
   14003fe77:	mov    rax,rcx
   14003fe7a:	ret    
   14003fe7b:	int3   
   14003fe7c:	jmp    0x1400401d0
   14003fe81:	int3   
   14003fe82:	int3   
   14003fe83:	int3   
   14003fe84:	rex push rbp
   14003fe86:	push   rbx
   14003fe87:	push   rsi
   14003fe88:	push   rdi
   14003fe89:	push   r15
   14003fe8b:	lea    rbp,[rsp-0x1f60]
   14003fe93:	mov    eax,0x2060
   14003fe98:	call   0x140055f20
   14003fe9d:	sub    rsp,rax
   14003fea0:	mov    rax,QWORD PTR [rip+0x42039]        # 0x140081ee0
   14003fea7:	xor    rax,rsp
   14003feaa:	mov    QWORD PTR [rbp+0x1f50],rax
   14003feb1:	mov    rsi,r8
   14003feb4:	mov    rdi,rdx
   14003feb7:	mov    rbx,rcx
   14003feba:	cmp    rdx,rcx
   14003febd:	je     0x14003feca
   14003febf:	mov    rdx,rcx
   14003fec2:	mov    rcx,rdi
   14003fec5:	call   0x140046158
   14003feca:	lea    rax,[rsp+0x38]
   14003fecf:	mov    r9d,0x1
   14003fed5:	xor    r8d,r8d
   14003fed8:	mov    QWORD PTR [rsp+0x20],rax
   14003fedd:	lea    rdx,[rip+0x30834]        # 0x140070718
   14003fee4:	mov    rcx,0xffffffff80000001
   14003feeb:	call   QWORD PTR [rip+0x2c11f]        # 0x14006c010
   14003fef1:	xor    r15d,r15d
   14003fef4:	test   eax,eax
   14003fef6:	jne    0x14003ffbc
   14003fefc:	or     rcx,0xffffffffffffffff
   14003ff00:	inc    rcx
   14003ff03:	cmp    WORD PTR [rbx+rcx*2],r15w
   14003ff08:	jne    0x14003ff00
   14003ff0a:	mov    eax,0x7ff
   14003ff0f:	lea    r9,[rsp+0x40]
   14003ff14:	sub    eax,ecx
   14003ff16:	lea    rdx,[rip+0x3082b]        # 0x140070748
   14003ff1d:	mov    rcx,QWORD PTR [rsp+0x38]
   14003ff22:	add    eax,eax
   14003ff24:	mov    DWORD PTR [rsp+0x30],eax
   14003ff28:	xor    r8d,r8d
   14003ff2b:	lea    rax,[rsp+0x30]
   14003ff30:	mov    QWORD PTR [rsp+0x28],rax
   14003ff35:	lea    rax,[rbp+0xf50]
   14003ff3c:	mov    QWORD PTR [rsp+0x20],rax
   14003ff41:	call   QWORD PTR [rip+0x2c0c1]        # 0x14006c008
   14003ff47:	test   eax,eax
   14003ff49:	jne    0x14003ffb1
   14003ff4b:	mov    r8d,0x800
   14003ff51:	mov    WORD PTR [rsp+0x50],r15w
   14003ff57:	lea    rdx,[rsp+0x50]
   14003ff5c:	lea    rcx,[rbp+0xf50]
   14003ff63:	call   QWORD PTR [rip+0x2c1ef]        # 0x14006c158
   14003ff69:	mov    edx,0x800
   14003ff6e:	lea    rcx,[rsp+0x50]
   14003ff73:	call   0x140030e78
   14003ff78:	mov    rcx,rbx
   14003ff7b:	call   0x1400327bc
   14003ff80:	mov    rdx,rax
   14003ff83:	lea    rcx,[rsp+0x50]
   14003ff88:	mov    r8d,0x800
   14003ff8e:	call   0x140046120
   14003ff93:	lea    rcx,[rsp+0x50]
   14003ff98:	call   0x140021dec
   14003ff9d:	test   al,al
   14003ff9f:	je     0x14003ffb1
   14003ffa1:	mov    r8,rsi
   14003ffa4:	lea    rdx,[rsp+0x50]
   14003ffa9:	mov    rcx,rdi
   14003ffac:	call   0x140046158
   14003ffb1:	mov    rcx,QWORD PTR [rsp+0x38]
   14003ffb6:	call   QWORD PTR [rip+0x2c05c]        # 0x14006c018
   14003ffbc:	mov    rcx,QWORD PTR [rbp+0x1f50]
   14003ffc3:	xor    rcx,rsp
   14003ffc6:	call   0x140055f90
   14003ffcb:	add    rsp,0x2060
   14003ffd2:	pop    r15
   14003ffd4:	pop    rdi
   14003ffd5:	pop    rsi
   14003ffd6:	pop    rbx
   14003ffd7:	pop    rbp
   14003ffd8:	ret    
   14003ffd9:	int3   
   14003ffda:	int3   
   14003ffdb:	int3   
   14003ffdc:	mov    rax,rsp
   14003ffdf:	mov    QWORD PTR [rax+0x10],rbx
   14003ffe3:	mov    QWORD PTR [rax+0x18],rsi
   14003ffe7:	mov    QWORD PTR [rax+0x20],rdi
   14003ffeb:	push   rbp
   14003ffec:	push   r14
   14003ffee:	push   r15
   14003fff0:	lea    rbp,[rax-0x1068]
   14003fff7:	mov    eax,0x1150
   14003fffc:	call   0x140055f20
   140040001:	sub    rsp,rax
   140040004:	mov    rax,QWORD PTR [rip+0x41ed5]        # 0x140081ee0
   14004000b:	xor    rax,rsp
   14004000e:	mov    QWORD PTR [rbp+0x1040],rax
   140040015:	mov    rbx,r8
   140040018:	mov    rsi,rdx
   14004001b:	mov    rdi,rcx
   14004001e:	call   0x1400401d0
   140040023:	lea    rdx,[rbp+0x40]
   140040027:	mov    r15d,0x2
   14004002d:	test   rbx,rbx
   140040030:	je     0x140040046
   140040032:	sub    rdx,rbx
   140040035:	movzx  eax,WORD PTR [rbx]
   140040038:	mov    WORD PTR [rdx+rbx*1],ax
   14004003c:	add    rbx,r15
   14004003f:	test   ax,ax
   140040042:	jne    0x140040035
   140040044:	jmp    0x140040054
   140040046:	mov    r8d,0x800
   14004004c:	xor    ecx,ecx
   14004004e:	call   QWORD PTR [rip+0x2c11c]        # 0x14006c170
   140040054:	mov    r8d,0x800
   14004005a:	lea    rdx,[rip+0x3069f]        # 0x140070700
   140040061:	lea    rcx,[rbp+0x40]
   140040065:	call   0x1400328b8
   14004006a:	mov    r8d,0x800
   140040070:	lea    rdx,[rbp+0x40]
   140040074:	lea    rcx,[rbp+0x40]
   140040078:	call   0x14003fe84
   14004007d:	lea    rcx,[rsp+0x20]
   140040082:	mov    DWORD PTR [rsp+0x20],0x11c
   14004008a:	call   QWORD PTR [rip+0x2c0d8]        # 0x14006c168
   140040090:	cmp    DWORD PTR [rsp+0x30],r15d
   140040095:	jne    0x1400400b8
   140040097:	cmp    DWORD PTR [rsp+0x24],0x5
   14004009c:	ja     0x1400400a7
   14004009e:	jne    0x1400400b8
   1400400a0:	cmp    WORD PTR [rbp+0x34],r15w
   1400400a5:	jb     0x1400400b8
   1400400a7:	mov    r8d,r15d
   1400400aa:	lea    rcx,[rbp+0x40]
   1400400ae:	xor    edx,edx
   1400400b0:	call   QWORD PTR [rip+0x2c0f2]        # 0x14006c1a8
   1400400b6:	jmp    0x1400400c2
   1400400b8:	lea    rcx,[rbp+0x40]
   1400400bc:	call   QWORD PTR [rip+0x2c0de]        # 0x14006c1a0
   1400400c2:	test   rax,rax
   1400400c5:	mov    QWORD PTR [rip+0x54714],rax        # 0x1400947e0
   1400400cc:	setne  cl
   1400400cf:	mov    BYTE PTR [rdi],cl
   1400400d1:	test   cl,cl
   1400400d3:	mov    rax,QWORD PTR [rip+0x54706]        # 0x1400947e0
   1400400da:	cmove  rax,rsi
   1400400de:	mov    QWORD PTR [rip+0x54703],rsi        # 0x1400947e8
   1400400e5:	mov    QWORD PTR [rip+0x546f4],rax        # 0x1400947e0
   1400400ec:	mov    rcx,QWORD PTR [rbp+0x1040]
   1400400f3:	xor    rcx,rsp
   1400400f6:	call   0x140055f90
   1400400fb:	lea    r11,[rsp+0x1150]
   140040103:	mov    rbx,QWORD PTR [r11+0x28]
   140040107:	mov    rsi,QWORD PTR [r11+0x30]
   14004010b:	mov    rdi,QWORD PTR [r11+0x38]
   14004010f:	mov    rsp,r11
   140040112:	pop    r15
   140040114:	pop    r14
   140040116:	pop    rbp
   140040117:	ret    
   140040118:	mov    QWORD PTR [rsp+0x8],rbx
   14004011d:	mov    QWORD PTR [rsp+0x10],rsi
   140040122:	push   rdi
   140040123:	sub    rsp,0x30
   140040127:	mov    edx,DWORD PTR [rip+0x57763]        # 0x140097890
   14004012d:	mov    edi,ecx
   14004012f:	inc    edx
   140040131:	lea    rcx,[rip+0x546c8]        # 0x140094800
   140040138:	movsxd rax,edx
   14004013b:	cmp    rax,0x8
   14004013f:	sbb    eax,eax
   140040141:	xor    esi,esi
   140040143:	and    eax,edx
   140040145:	movsxd rbx,eax
   140040148:	mov    DWORD PTR [rip+0x57742],eax        # 0x140097890
   14004014e:	lea    rax,[rip+0x5573b]        # 0x140095890
   140040155:	shl    rbx,0xa
   140040159:	add    rbx,rax
   14004015c:	mov    WORD PTR [rbx],si
   14004015f:	call   0x14003fdb4
   140040164:	test   al,al
   140040166:	jne    0x140040184
   140040168:	mov    rcx,QWORD PTR [rip+0x54671]        # 0x1400947e0
   14004016f:	mov    r9d,0x200
   140040175:	mov    r8,rbx
   140040178:	mov    edx,edi
   14004017a:	call   QWORD PTR [rip+0x2c370]        # 0x14006c4f0
   140040180:	test   eax,eax
   140040182:	jne    0x14004019c
   140040184:	mov    rcx,QWORD PTR [rip+0x5465d]        # 0x1400947e8
   14004018b:	mov    r9d,0x200
   140040191:	mov    r8,rbx
   140040194:	mov    edx,edi
   140040196:	call   QWORD PTR [rip+0x2c354]        # 0x14006c4f0
   14004019c:	mov    QWORD PTR [rsp+0x28],rsi
   1400401a1:	lea    rcx,[rip+0x54658]        # 0x140094800
   1400401a8:	mov    r9d,0x200
   1400401ae:	mov    DWORD PTR [rsp+0x20],esi
   1400401b2:	mov    r8,rbx
   1400401b5:	mov    rdx,rbx
   1400401b8:	call   0x14003f77c
   1400401bd:	mov    rsi,QWORD PTR [rsp+0x48]
   1400401c2:	mov    rax,rbx
   1400401c5:	mov    rbx,QWORD PTR [rsp+0x40]
   1400401ca:	add    rsp,0x30
   1400401ce:	pop    rdi
   1400401cf:	ret    
   1400401d0:	rex push rbx
   1400401d2:	sub    rsp,0x20
   1400401d6:	cmp    BYTE PTR [rcx],0x0
   1400401d9:	mov    rbx,rcx
   1400401dc:	je     0x1400401fc
   1400401de:	mov    rcx,QWORD PTR [rip+0x545fb]        # 0x1400947e0
   1400401e5:	call   QWORD PTR [rip+0x2bfad]        # 0x14006c198
   1400401eb:	mov    rax,QWORD PTR [rip+0x545f6]        # 0x1400947e8
   1400401f2:	mov    QWORD PTR [rip+0x545e7],rax        # 0x1400947e0
   1400401f9:	mov    BYTE PTR [rbx],0x0
   1400401fc:	add    rsp,0x20
   140040200:	pop    rbx
   140040201:	ret    
   140040202:	int3   
   140040203:	int3   
   140040204:	rex push rbx
   140040206:	sub    rsp,0x20
   14004020a:	cmp    BYTE PTR [rip+0x5768f],0x0        # 0x1400978a0
   140040211:	mov    rbx,rcx
   140040214:	jne    0x14004021b
   140040216:	call   0x140040228
   14004021b:	mov    BYTE PTR [rbx+0x1],0x1
   14004021f:	mov    rax,rbx
   140040222:	add    rsp,0x20
   140040226:	pop    rbx
   140040227:	ret    
   140040228:	rex push rbp
   14004022a:	lea    rbp,[rsp-0x210]
   140040232:	sub    rsp,0x310
   140040239:	mov    rax,QWORD PTR [rip+0x41ca0]        # 0x140081ee0
   140040240:	xor    rax,rsp
   140040243:	mov    QWORD PTR [rbp+0x200],rax
   14004024a:	xor    r8d,r8d
   14004024d:	mov    r10d,0x11b
   140040253:	lea    edx,[r8+0x1]
   140040257:	movsxd rax,r8d
   14004025a:	mov    BYTE PTR [rbp+rax*1+0x0],dl
   14004025e:	lea    eax,[r8+0xff]
   140040265:	movsxd rcx,eax
   140040268:	movsxd rax,edx
   14004026b:	mov    BYTE PTR [rbp+rcx*1+0x0],dl
   14004026f:	mov    BYTE PTR [rsp+rax*1],r8b
   140040273:	mov    eax,edx
   140040275:	and    al,0x80
   140040277:	inc    r8d
   14004027a:	neg    al
   14004027c:	lea    eax,[rdx+rdx*1]
   14004027f:	sbb    ecx,ecx
   140040281:	and    ecx,r10d
   140040284:	xor    ecx,eax
   140040286:	xor    edx,ecx
   140040288:	cmp    edx,0x1
   14004028b:	jne    0x140040257
   14004028d:	xor    r8d,r8d
   140040290:	lea    r9,[rip+0x57809]        # 0x140097aa0
   140040297:	mov    eax,edx
   140040299:	mov    BYTE PTR [r9],dl
   14004029c:	and    al,0x80
   14004029e:	neg    al
   1400402a0:	lea    eax,[rdx+rdx*1]
   1400402a3:	sbb    ecx,ecx
   1400402a5:	inc    r8d
   1400402a8:	and    ecx,r10d
   1400402ab:	inc    r9
   1400402ae:	mov    edx,ecx
   1400402b0:	xor    edx,eax
   1400402b2:	movsxd rax,r8d
   1400402b5:	cmp    rax,0x1e
   1400402b9:	jb     0x140040297
   1400402bb:	xor    r10d,r10d
   1400402be:	lea    r11,[rip+0xfffffffffffbfd3b]        # 0x140000000
   1400402c5:	xor    r8d,r8d
   1400402c8:	test   r10b,r10b
   1400402cb:	je     0x1400402e5
   1400402cd:	movzx  eax,r10b
   1400402d1:	movzx  ecx,BYTE PTR [rsp+rax*1]
   1400402d5:	mov    eax,0xff
   1400402da:	sub    eax,ecx
   1400402dc:	cdqe   
   1400402de:	movzx  ecx,BYTE PTR [rbp+rax*1+0x0]
   1400402e3:	jmp    0x1400402e7
   1400402e5:	xor    ecx,ecx
   1400402e7:	lea    eax,[rcx+rcx*1]
   1400402ea:	xor    eax,ecx
   1400402ec:	add    eax,eax
   1400402ee:	xor    eax,ecx
   1400402f0:	add    eax,eax
   1400402f2:	xor    eax,ecx
   1400402f4:	add    eax,eax
   1400402f6:	xor    ecx,eax
   1400402f8:	mov    edx,ecx
   1400402fa:	xor    edx,0x6300
   140040300:	sar    edx,0x8
   140040303:	xor    edx,ecx
   140040305:	mov    BYTE PTR [r8+r11*1+0x978a0],dl
   14004030d:	mov    BYTE PTR [r11+r8*4+0x986c1],dl
   140040315:	mov    BYTE PTR [r11+r8*4+0x986c0],dl
   14004031d:	mov    BYTE PTR [r11+r8*4+0x982c3],dl
   140040325:	mov    BYTE PTR [r11+r8*4+0x982c0],dl
   14004032d:	mov    BYTE PTR [r11+r8*4+0x97ec3],dl
   140040335:	mov    BYTE PTR [r11+r8*4+0x97ec2],dl
   14004033d:	mov    BYTE PTR [r11+r8*4+0x97ac2],dl
   140040345:	mov    BYTE PTR [r11+r8*4+0x97ac1],dl
   14004034d:	test   dl,dl
   14004034f:	je     0x140040364
   140040351:	movzx  eax,dl
   140040354:	movzx  eax,BYTE PTR [rsp+rax*1]
   140040358:	add    eax,0x19
   14004035b:	cdqe   
   14004035d:	movzx  ecx,BYTE PTR [rbp+rax*1+0x0]
   140040362:	jmp    0x140040366
   140040364:	xor    ecx,ecx
   140040366:	mov    BYTE PTR [r11+r8*4+0x986c3],cl
   14004036e:	mov    BYTE PTR [r11+r8*4+0x982c2],cl
   140040376:	mov    BYTE PTR [r11+r8*4+0x97ec1],cl
   14004037e:	mov    BYTE PTR [r11+r8*4+0x97ac0],cl
   140040386:	test   dl,dl
   140040388:	je     0x14004039c
   14004038a:	movzx  eax,dl
   14004038d:	movzx  eax,BYTE PTR [rsp+rax*1]
   140040391:	inc    eax
   140040393:	cdqe   
   140040395:	movzx  ecx,BYTE PTR [rbp+rax*1+0x0]
   14004039a:	jmp    0x14004039e
   14004039c:	xor    ecx,ecx
   14004039e:	mov    BYTE PTR [r11+r8*4+0x986c2],cl
   1400403a6:	mov    BYTE PTR [r11+r8*4+0x982c1],cl
   1400403ae:	mov    BYTE PTR [r11+r8*4+0x97ec0],cl
   1400403b6:	mov    BYTE PTR [r11+r8*4+0x97ac3],cl
   1400403be:	movzx  r9d,r10b
   1400403c2:	mov    eax,r9d
   1400403c5:	shl    eax,0x3
   1400403c8:	xor    eax,r9d
   1400403cb:	shl    eax,0x2
   1400403ce:	xor    eax,r9d
   1400403d1:	add    eax,eax
   1400403d3:	mov    ecx,eax
   1400403d5:	sar    ecx,0x8
   1400403d8:	xor    cl,al
   1400403da:	xor    cl,0x5
   1400403dd:	je     0x140040416
   1400403df:	mov    edx,r9d
   1400403e2:	shl    edx,0x3
   1400403e5:	xor    edx,r9d
   1400403e8:	shl    edx,0x2
   1400403eb:	xor    edx,r9d
   1400403ee:	add    edx,edx
   1400403f0:	mov    eax,edx
   1400403f2:	sar    eax,0x8
   1400403f5:	movzx  ecx,al
   1400403f8:	movzx  eax,dl
   1400403fb:	xor    rcx,rax
   1400403fe:	xor    rcx,0x5
   140040402:	movzx  eax,BYTE PTR [rsp+rcx*1]
   140040406:	mov    ecx,0xff
   14004040b:	sub    ecx,eax
   14004040d:	movsxd rax,ecx
   140040410:	mov    dl,BYTE PTR [rbp+rax*1+0x0]
   140040414:	jmp    0x140040418
   140040416:	xor    dl,dl
   140040418:	mov    BYTE PTR [r8+r11*1+0x979a0],dl
   140040420:	test   dl,dl
   140040422:	je     0x140040438
   140040424:	movzx  eax,dl
   140040427:	movzx  eax,BYTE PTR [rsp+rax*1]
   14004042b:	add    eax,0x68
   14004042e:	cdqe   
   140040430:	movzx  r9d,BYTE PTR [rbp+rax*1+0x0]
   140040436:	jmp    0x14004043b
   140040438:	xor    r9d,r9d
   14004043b:	movzx  ecx,dl
   14004043e:	mov    BYTE PTR [r11+r8*4+0x996c2],r9b
   140040446:	mov    BYTE PTR [r11+r8*4+0x992c1],r9b
   14004044e:	mov    BYTE PTR [r11+r8*4+0x98ec0],r9b
   140040456:	mov    BYTE PTR [r11+rcx*4+0x9a6c2],r9b
   14004045e:	mov    BYTE PTR [r11+rcx*4+0x9a2c1],r9b
   140040466:	mov    BYTE PTR [r11+rcx*4+0x99ec0],r9b
   14004046e:	mov    BYTE PTR [r11+rcx*4+0x99ac3],r9b
   140040476:	mov    BYTE PTR [r11+r8*4+0x98ac3],r9b
   14004047e:	test   dl,dl
   140040480:	je     0x140040495
   140040482:	movzx  eax,BYTE PTR [rsp+rcx*1]
   140040486:	add    eax,0xc7
   14004048b:	cdqe   
   14004048d:	movzx  r9d,BYTE PTR [rbp+rax*1+0x0]
   140040493:	jmp    0x140040498
   140040495:	xor    r9d,r9d
   140040498:	mov    BYTE PTR [r11+r8*4+0x996c0],r9b
   1400404a0:	mov    BYTE PTR [r11+r8*4+0x992c3],r9b
   1400404a8:	mov    BYTE PTR [r11+r8*4+0x98ec2],r9b
   1400404b0:	mov    BYTE PTR [r11+r8*4+0x98ac1],r9b
   1400404b8:	mov    BYTE PTR [r11+rcx*4+0x9a6c0],r9b
   1400404c0:	mov    BYTE PTR [r11+rcx*4+0x9a2c3],r9b
   1400404c8:	mov    BYTE PTR [r11+rcx*4+0x99ec2],r9b
   1400404d0:	mov    BYTE PTR [r11+rcx*4+0x99ac1],r9b
   1400404d8:	test   dl,dl
   1400404da:	je     0x1400404ef
   1400404dc:	movzx  eax,BYTE PTR [rsp+rcx*1]
   1400404e0:	add    eax,0xee
   1400404e5:	cdqe   
   1400404e7:	movzx  r9d,BYTE PTR [rbp+rax*1+0x0]
   1400404ed:	jmp    0x1400404f2
   1400404ef:	xor    r9d,r9d
   1400404f2:	mov    BYTE PTR [r11+r8*4+0x996c1],r9b
   1400404fa:	mov    BYTE PTR [r11+r8*4+0x992c0],r9b
   140040502:	mov    BYTE PTR [r11+r8*4+0x98ec3],r9b
   14004050a:	mov    BYTE PTR [r11+r8*4+0x98ac2],r9b
   140040512:	mov    BYTE PTR [r11+rcx*4+0x9a6c1],r9b
   14004051a:	mov    BYTE PTR [r11+rcx*4+0x9a2c0],r9b
   140040522:	mov    BYTE PTR [r11+rcx*4+0x99ec3],r9b
   14004052a:	mov    BYTE PTR [r11+rcx*4+0x99ac2],r9b
   140040532:	test   dl,dl
   140040534:	je     0x140040548
   140040536:	movzx  eax,BYTE PTR [rsp+rcx*1]
   14004053a:	add    eax,0xdf
   14004053f:	cdqe   
   140040541:	movzx  edx,BYTE PTR [rbp+rax*1+0x0]
   140040546:	jmp    0x14004054a
   140040548:	xor    edx,edx
   14004054a:	mov    BYTE PTR [r11+r8*4+0x996c3],dl
   140040552:	inc    r10d
   140040555:	mov    BYTE PTR [r11+r8*4+0x992c2],dl
   14004055d:	mov    BYTE PTR [r11+r8*4+0x98ec1],dl
   140040565:	mov    BYTE PTR [r11+r8*4+0x98ac0],dl
   14004056d:	inc    r8
   140040570:	mov    BYTE PTR [r11+rcx*4+0x9a6c3],dl
   140040578:	mov    BYTE PTR [r11+rcx*4+0x9a2c2],dl
   140040580:	mov    BYTE PTR [r11+rcx*4+0x99ec1],dl
   140040588:	mov    BYTE PTR [r11+rcx*4+0x99ac0],dl
   140040590:	cmp    r10d,0x100
   140040597:	jl     0x1400402c8
   14004059d:	mov    rcx,QWORD PTR [rbp+0x200]
   1400405a4:	xor    rcx,rsp
   1400405a7:	call   0x140055f90
   1400405ac:	add    rsp,0x310
   1400405b3:	pop    rbp
   1400405b4:	ret    
   1400405b5:	int3   
   1400405b6:	int3   
   1400405b7:	int3   
   1400405b8:	mov    QWORD PTR [rsp+0x10],rbx
   1400405bd:	mov    QWORD PTR [rsp+0x18],rsi
   1400405c2:	push   rdi
   1400405c3:	sub    rsp,0x50
   1400405c7:	mov    rax,QWORD PTR [rip+0x41912]        # 0x140081ee0
   1400405ce:	xor    rax,rsp
   1400405d1:	mov    QWORD PTR [rsp+0x48],rax
   1400405d6:	mov    rdi,rcx
   1400405d9:	mov    eax,0x1
   1400405de:	xor    ecx,ecx
   1400405e0:	mov    sil,dl
   1400405e3:	cpuid  
   1400405e5:	shr    ecx,0x19
   1400405e8:	mov    r10,r8
   1400405eb:	and    cl,0x1
   1400405ee:	mov    DWORD PTR [rsp+0x28],eax
   1400405f2:	mov    DWORD PTR [rsp+0x2c],ebx
   1400405f6:	mov    r8d,0x10
   1400405fc:	mov    DWORD PTR [rsp+0x34],edx
   140040600:	mov    BYTE PTR [rdi],cl
   140040602:	sub    r9d,0x80
   140040609:	je     0x140040638
   14004060b:	sub    r9d,0x40
   14004060f:	je     0x14004062a
   140040611:	cmp    r9d,0x40
   140040615:	jne    0x140040624
   140040617:	lea    eax,[r8+0x10]
   14004061b:	mov    DWORD PTR [rdi+0x4],0xe
   140040622:	jmp    0x140040642
   140040624:	mov    eax,DWORD PTR [rsp+0x20]
   140040628:	jmp    0x140040642
   14004062a:	mov    eax,0x18
   14004062f:	mov    DWORD PTR [rdi+0x4],0xc
   140040636:	jmp    0x140040646
   140040638:	mov    eax,r8d
   14004063b:	mov    DWORD PTR [rdi+0x4],0xa
   140040642:	test   eax,eax
   140040644:	je     0x140040672
   140040646:	xor    ebx,ebx
   140040648:	mov    r9d,eax
   14004064b:	mov    rax,rbx
   14004064e:	lea    rcx,[rsp+0x28]
   140040653:	and    eax,0x3
   140040656:	mov    rdx,rbx
   140040659:	add    rcx,rax
   14004065c:	shr    rdx,0x2
   140040660:	mov    al,BYTE PTR [r10]
   140040663:	inc    rbx
   140040666:	inc    r10
   140040669:	mov    BYTE PTR [rcx+rdx*4],al
   14004066c:	sub    r9,0x1
   140040670:	jne    0x14004064b
   140040672:	mov    rcx,QWORD PTR [rsp+0x80]
   14004067a:	test   rcx,rcx
   14004067d:	jne    0x14004068b
   14004067f:	xor    eax,eax
   140040681:	mov    QWORD PTR [rdi+0x8],rax
   140040685:	mov    QWORD PTR [rdi+0x10],rax
   140040689:	jmp    0x1400406a1
   14004068b:	lea    rdx,[rdi+0x8]
   14004068f:	sub    rcx,rdi
   140040692:	mov    al,BYTE PTR [rcx+rdx*1-0x8]
   140040696:	mov    BYTE PTR [rdx],al
   140040698:	inc    rdx
   14004069b:	sub    r8,0x1
   14004069f:	jne    0x140040692
   1400406a1:	lea    rdx,[rsp+0x28]
   1400406a6:	mov    rcx,rdi
   1400406a9:	call   0x1400411a4
   1400406ae:	test   sil,sil
   1400406b1:	jne    0x1400406bb
   1400406b3:	mov    rcx,rdi
   1400406b6:	call   0x1400410b0
   1400406bb:	mov    rcx,QWORD PTR [rsp+0x48]
   1400406c0:	xor    rcx,rsp
   1400406c3:	call   0x140055f90
   1400406c8:	mov    rbx,QWORD PTR [rsp+0x68]
   1400406cd:	mov    rsi,QWORD PTR [rsp+0x70]
   1400406d2:	add    rsp,0x50
   1400406d6:	pop    rdi
   1400406d7:	ret    
   1400406d8:	test   r8,r8
   1400406db:	je     0x140040b1e
   1400406e1:	mov    QWORD PTR [rsp+0x8],rbx
   1400406e6:	mov    QWORD PTR [rsp+0x10],rsi
   1400406eb:	mov    QWORD PTR [rsp+0x18],rdi
   1400406f0:	push   rbp
   1400406f1:	push   r12
   1400406f3:	push   r13
   1400406f5:	push   r14
   1400406f7:	push   r15
   1400406f9:	mov    rbp,rsp
   1400406fc:	sub    rsp,0x50
   140040700:	shr    r8,0x4
   140040704:	mov    rbx,r9
   140040707:	cmp    BYTE PTR [rcx],0x0
   14004070a:	mov    r11,rdx
   14004070d:	mov    r10,rcx
   140040710:	je     0x14004071c
   140040712:	call   0x140040b20
   140040717:	jmp    0x140040b01
   14004071c:	movups xmm0,XMMWORD PTR [rcx+0x8]
   140040720:	movups XMMWORD PTR [rbp-0x10],xmm0
   140040724:	test   r8,r8
   140040727:	je     0x140040afb
   14004072d:	lea    rsi,[rbp-0x10]
   140040731:	mov    r13d,0x4
   140040737:	neg    rsi
   14004073a:	movsxd r14,DWORD PTR [r10+0x4]
   14004073e:	lea    rcx,[r10+0x18]
   140040742:	mov    rax,r14
   140040745:	lea    r9,[rbp-0x30]
   140040749:	shl    rax,0x4
   14004074d:	mov    rdx,r11
   140040750:	add    rcx,rax
   140040753:	mov    rdi,r13
   140040756:	sub    rdx,rcx
   140040759:	sub    r9,rcx
   14004075c:	mov    eax,DWORD PTR [rdx+rcx*1]
   14004075f:	xor    eax,DWORD PTR [rcx]
   140040761:	mov    DWORD PTR [r9+rcx*1],eax
   140040765:	add    rcx,r13
   140040768:	sub    rdi,0x1
   14004076c:	jne    0x14004075c
   14004076e:	movzx  ecx,BYTE PTR [rbp-0x30]
   140040772:	lea    r9,[rip+0xfffffffffffbf887]        # 0x140000000
   140040779:	movzx  eax,BYTE PTR [rbp-0x29]
   14004077d:	mov    edx,DWORD PTR [r9+rcx*4+0x98ac0]
   140040785:	xor    edx,DWORD PTR [r9+rax*4+0x996c0]
   14004078d:	movzx  eax,BYTE PTR [rbp-0x26]
   140040791:	movzx  ecx,BYTE PTR [rbp-0x2f]
   140040795:	xor    edx,DWORD PTR [r9+rax*4+0x992c0]
   14004079d:	movzx  eax,BYTE PTR [rbp-0x23]
   1400407a1:	xor    edx,DWORD PTR [r9+rax*4+0x98ec0]
   1400407a9:	movzx  eax,BYTE PTR [rbp-0x2c]
   1400407ad:	mov    DWORD PTR [rbp-0x20],edx
   1400407b0:	mov    edx,DWORD PTR [r9+rcx*4+0x98ec0]
   1400407b8:	movzx  ecx,BYTE PTR [rbp-0x2e]
   1400407bc:	xor    edx,DWORD PTR [r9+rax*4+0x98ac0]
   1400407c4:	movzx  eax,BYTE PTR [rbp-0x25]
   1400407c8:	xor    edx,DWORD PTR [r9+rax*4+0x996c0]
   1400407d0:	movzx  eax,BYTE PTR [rbp-0x22]
   1400407d4:	xor    edx,DWORD PTR [r9+rax*4+0x992c0]
   1400407dc:	movzx  eax,BYTE PTR [rbp-0x28]
   1400407e0:	mov    DWORD PTR [rbp-0x1c],edx
   1400407e3:	mov    edx,DWORD PTR [r9+rcx*4+0x992c0]
   1400407eb:	movzx  ecx,BYTE PTR [rbp-0x2d]
   1400407ef:	xor    edx,DWORD PTR [r9+rax*4+0x98ac0]
   1400407f7:	movzx  eax,BYTE PTR [rbp-0x2b]
   1400407fb:	xor    edx,DWORD PTR [r9+rax*4+0x98ec0]
   140040803:	movzx  eax,BYTE PTR [rbp-0x21]
   140040807:	xor    edx,DWORD PTR [r9+rax*4+0x996c0]
   14004080f:	movzx  eax,BYTE PTR [rbp-0x2a]
   140040813:	mov    DWORD PTR [rbp-0x18],edx
   140040816:	mov    edx,DWORD PTR [r9+rcx*4+0x996c0]
   14004081e:	xor    edx,DWORD PTR [r9+rax*4+0x992c0]
   140040826:	movzx  eax,BYTE PTR [rbp-0x27]
   14004082a:	xor    edx,DWORD PTR [r9+rax*4+0x98ec0]
   140040832:	movzx  eax,BYTE PTR [rbp-0x24]
   140040836:	xor    edx,DWORD PTR [r9+rax*4+0x98ac0]
   14004083e:	lea    eax,[r14-0x1]
   140040842:	movsxd rcx,eax
   140040845:	lea    r14,[rip+0xfffffffffffbf7b4]        # 0x140000000
   14004084c:	mov    DWORD PTR [rbp-0x14],edx
   14004084f:	cmp    rcx,0x1
   140040853:	jle    0x140040968
   140040859:	mov    rax,rcx
   14004085c:	lea    rdx,[rbp-0x20]
   140040860:	shl    rax,0x4
   140040864:	lea    r9,[r10+0x18]
   140040868:	sub    rax,rdx
   14004086b:	lea    rdi,[rcx-0x1]
   14004086f:	add    r9,rax
   140040872:	xor    edx,edx
   140040874:	lea    rax,[rbp-0x20]
   140040878:	add    rax,rdx
   14004087b:	mov    ecx,DWORD PTR [r9+rax*1]
   14004087f:	xor    ecx,DWORD PTR [rax]
   140040881:	mov    DWORD PTR [rbp+rdx*1-0x30],ecx
   140040885:	add    rdx,r13
   140040888:	cmp    rdx,0x10
   14004088c:	jl     0x140040874
   14004088e:	movzx  ecx,BYTE PTR [rbp-0x30]
   140040892:	sub    r9,0x10
   140040896:	movzx  eax,BYTE PTR [rbp-0x29]
   14004089a:	mov    edx,DWORD PTR [r14+rcx*4+0x98ac0]
   1400408a2:	xor    edx,DWORD PTR [r14+rax*4+0x996c0]
   1400408aa:	movzx  eax,BYTE PTR [rbp-0x26]
   1400408ae:	movzx  ecx,BYTE PTR [rbp-0x2f]
   1400408b2:	xor    edx,DWORD PTR [r14+rax*4+0x992c0]
   1400408ba:	movzx  eax,BYTE PTR [rbp-0x23]
   1400408be:	xor    edx,DWORD PTR [r14+rax*4+0x98ec0]
   1400408c6:	movzx  eax,BYTE PTR [rbp-0x2c]
   1400408ca:	mov    DWORD PTR [rbp-0x20],edx
   1400408cd:	mov    edx,DWORD PTR [r14+rcx*4+0x98ec0]
   1400408d5:	movzx  ecx,BYTE PTR [rbp-0x2e]
   1400408d9:	xor    edx,DWORD PTR [r14+rax*4+0x98ac0]
   1400408e1:	movzx  eax,BYTE PTR [rbp-0x25]
   1400408e5:	xor    edx,DWORD PTR [r14+rax*4+0x996c0]
   1400408ed:	movzx  eax,BYTE PTR [rbp-0x22]
   1400408f1:	xor    edx,DWORD PTR [r14+rax*4+0x992c0]
   1400408f9:	movzx  eax,BYTE PTR [rbp-0x28]
   1400408fd:	mov    DWORD PTR [rbp-0x1c],edx
   140040900:	mov    edx,DWORD PTR [r14+rcx*4+0x992c0]
   140040908:	movzx  ecx,BYTE PTR [rbp-0x2d]
   14004090c:	xor    edx,DWORD PTR [r14+rax*4+0x98ac0]
   140040914:	movzx  eax,BYTE PTR [rbp-0x2b]
   140040918:	xor    edx,DWORD PTR [r14+rax*4+0x98ec0]
   140040920:	movzx  eax,BYTE PTR [rbp-0x21]
   140040924:	xor    edx,DWORD PTR [r14+rax*4+0x996c0]
   14004092c:	movzx  eax,BYTE PTR [rbp-0x2a]
   140040930:	mov    DWORD PTR [rbp-0x18],edx
   140040933:	mov    edx,DWORD PTR [r14+rcx*4+0x996c0]
   14004093b:	xor    edx,DWORD PTR [r14+rax*4+0x992c0]
   140040943:	movzx  eax,BYTE PTR [rbp-0x27]
   140040947:	xor    edx,DWORD PTR [r14+rax*4+0x98ec0]
   14004094f:	movzx  eax,BYTE PTR [rbp-0x24]
   140040953:	xor    edx,DWORD PTR [r14+rax*4+0x98ac0]
   14004095b:	mov    DWORD PTR [rbp-0x14],edx
   14004095e:	sub    rdi,0x1
   140040962:	jne    0x140040872
   140040968:	lea    rax,[r10+0x28]
   14004096c:	mov    rdx,r13
   14004096f:	neg    rax
   140040972:	lea    r9,[rbp-0x20]
   140040976:	add    r9,rax
   140040979:	lea    rdi,[rbp-0x30]
   14004097d:	add    rdi,rax
   140040980:	lea    rcx,[r10+0x28]
   140040984:	mov    eax,DWORD PTR [r9+rcx*1]
   140040988:	xor    eax,DWORD PTR [rcx]
   14004098a:	mov    DWORD PTR [rdi+rcx*1],eax
   14004098d:	add    rcx,r13
   140040990:	sub    rdx,0x1
   140040994:	jne    0x140040984
   140040996:	movzx  eax,BYTE PTR [rbp-0x30]
   14004099a:	lea    r9,[r10+0x18]
   14004099e:	mov    al,BYTE PTR [rax+r14*1+0x979a0]
   1400409a6:	mov    BYTE PTR [rbp-0x20],al
   1400409a9:	movzx  eax,BYTE PTR [rbp-0x23]
   1400409ad:	mov    al,BYTE PTR [rax+r14*1+0x979a0]
   1400409b5:	mov    BYTE PTR [rbp-0x1f],al
   1400409b8:	movzx  eax,BYTE PTR [rbp-0x26]
   1400409bc:	mov    al,BYTE PTR [rax+r14*1+0x979a0]
   1400409c4:	mov    BYTE PTR [rbp-0x1e],al
   1400409c7:	movzx  eax,BYTE PTR [rbp-0x29]
   1400409cb:	mov    al,BYTE PTR [rax+r14*1+0x979a0]
   1400409d3:	mov    BYTE PTR [rbp-0x1d],al
   1400409d6:	movzx  eax,BYTE PTR [rbp-0x2c]
   1400409da:	mov    al,BYTE PTR [rax+r14*1+0x979a0]
   1400409e2:	mov    BYTE PTR [rbp-0x1c],al
   1400409e5:	movzx  eax,BYTE PTR [rbp-0x2f]
   1400409e9:	mov    al,BYTE PTR [rax+r14*1+0x979a0]
   1400409f1:	mov    BYTE PTR [rbp-0x1b],al
   1400409f4:	movzx  eax,BYTE PTR [rbp-0x22]
   1400409f8:	mov    al,BYTE PTR [rax+r14*1+0x979a0]
   140040a00:	mov    BYTE PTR [rbp-0x1a],al
   140040a03:	movzx  eax,BYTE PTR [rbp-0x25]
   140040a07:	mov    al,BYTE PTR [rax+r14*1+0x979a0]
   140040a0f:	mov    BYTE PTR [rbp-0x19],al
   140040a12:	movzx  eax,BYTE PTR [rbp-0x28]
   140040a16:	mov    al,BYTE PTR [rax+r14*1+0x979a0]
   140040a1e:	mov    BYTE PTR [rbp-0x18],al
   140040a21:	movzx  eax,BYTE PTR [rbp-0x2b]
   140040a25:	mov    al,BYTE PTR [rax+r14*1+0x979a0]
   140040a2d:	mov    BYTE PTR [rbp-0x17],al
   140040a30:	movzx  eax,BYTE PTR [rbp-0x2e]
   140040a34:	mov    al,BYTE PTR [rax+r14*1+0x979a0]
   140040a3c:	mov    BYTE PTR [rbp-0x16],al
   140040a3f:	movzx  eax,BYTE PTR [rbp-0x21]
   140040a43:	mov    al,BYTE PTR [rax+r14*1+0x979a0]
   140040a4b:	mov    BYTE PTR [rbp-0x15],al
   140040a4e:	movzx  eax,BYTE PTR [rbp-0x24]
   140040a52:	mov    al,BYTE PTR [rax+r14*1+0x979a0]
   140040a5a:	mov    BYTE PTR [rbp-0x14],al
   140040a5d:	movzx  eax,BYTE PTR [rbp-0x27]
   140040a61:	mov    al,BYTE PTR [rax+r14*1+0x979a0]
   140040a69:	mov    BYTE PTR [rbp-0x13],al
   140040a6c:	movzx  eax,BYTE PTR [rbp-0x2a]
   140040a70:	mov    al,BYTE PTR [rax+r14*1+0x979a0]
   140040a78:	mov    BYTE PTR [rbp-0x12],al
   140040a7b:	movzx  eax,BYTE PTR [rbp-0x2d]
   140040a7f:	mov    al,BYTE PTR [rax+r14*1+0x979a0]
   140040a87:	mov    BYTE PTR [rbp-0x11],al
   140040a8a:	lea    rax,[rbp-0x20]
   140040a8e:	sub    r9,rax
   140040a91:	lea    rax,[r9+rdx*4]
   140040a95:	mov    ecx,DWORD PTR [rbp+rax*1-0x20]
   140040a99:	xor    DWORD PTR [rbp+rdx*4-0x20],ecx
   140040a9d:	inc    rdx
   140040aa0:	cmp    rdx,r13
   140040aa3:	jl     0x140040a91
   140040aa5:	cmp    BYTE PTR [r10+0x1],0x0
   140040aaa:	je     0x140040abf
   140040aac:	xor    ecx,ecx
   140040aae:	mov    eax,DWORD PTR [rbp+rcx*1-0x10]
   140040ab2:	xor    DWORD PTR [rbp+rcx*1-0x20],eax
   140040ab6:	add    rcx,r13
   140040ab9:	cmp    rcx,0x10
   140040abd:	jl     0x140040aae
   140040abf:	xor    r9d,r9d
   140040ac2:	lea    rdx,[rbp-0x10]
   140040ac6:	add    rdx,r9
   140040ac9:	lea    rax,[rsi+rdx*1]
   140040acd:	mov    ecx,DWORD PTR [rax+r11*1]
   140040ad1:	mov    eax,DWORD PTR [rbp+r9*1-0x20]
   140040ad6:	mov    DWORD PTR [rbx+r9*1],eax
   140040ada:	add    r9,r13
   140040add:	mov    DWORD PTR [rdx],ecx
   140040adf:	cmp    r9,0x10
   140040ae3:	jl     0x140040ac2
   140040ae5:	add    r11,0x10
   140040ae9:	add    rbx,0x10
   140040aed:	sub    r8,0x1
   140040af1:	jne    0x14004073a
   140040af7:	movups xmm0,XMMWORD PTR [rbp-0x10]
   140040afb:	movdqu XMMWORD PTR [r10+0x8],xmm0
   140040b01:	lea    r11,[rsp+0x50]
   140040b06:	mov    rbx,QWORD PTR [r11+0x30]
   140040b0a:	mov    rsi,QWORD PTR [r11+0x38]
   140040b0e:	mov    rdi,QWORD PTR [r11+0x40]
   140040b12:	mov    rsp,r11
   140040b15:	pop    r15
   140040b17:	pop    r14
   140040b19:	pop    r13
   140040b1b:	pop    r12
   140040b1d:	pop    rbp
   140040b1e:	ret    
   140040b1f:	int3   
   140040b20:	lea    r11,[rcx+0x18]
   140040b24:	mov    r10,rcx
   140040b27:	movdqu xmm2,XMMWORD PTR [rcx+0x8]
   140040b2c:	test   r8,r8
   140040b2f:	je     0x140040b9d
   140040b31:	movsxd rcx,DWORD PTR [r10+0x4]
   140040b35:	mov    rax,rdx
   140040b38:	add    rdx,0x10
   140040b3c:	movdqu xmm3,XMMWORD PTR [rax]
   140040b40:	mov    rax,rcx
   140040b43:	add    rax,rax
   140040b46:	dec    ecx
   140040b48:	movdqu xmm1,XMMWORD PTR [r11+rax*8]
   140040b4e:	pxor   xmm1,xmm3
   140040b52:	test   ecx,ecx
   140040b54:	jle    0x140040b73
   140040b56:	movsxd rax,ecx
   140040b59:	shl    rax,0x4
   140040b5d:	add    rax,r11
   140040b60:	movdqu xmm0,XMMWORD PTR [rax]
   140040b64:	dec    ecx
   140040b66:	lea    rax,[rax-0x10]
   140040b6a:	aesdec xmm1,xmm0
   140040b6f:	test   ecx,ecx
   140040b71:	jg     0x140040b60
   140040b73:	cmp    BYTE PTR [r10+0x1],0x0
   140040b78:	movdqu xmm0,XMMWORD PTR [r11]
   140040b7d:	aesdeclast xmm1,xmm0
   140040b82:	je     0x140040b88
   140040b84:	pxor   xmm1,xmm2
   140040b88:	mov    rax,r9
   140040b8b:	movdqa xmm2,xmm3
   140040b8f:	add    r9,0x10
   140040b93:	movdqu XMMWORD PTR [rax],xmm1
   140040b97:	sub    r8,0x1
   140040b9b:	jne    0x140040b31
   140040b9d:	movdqu XMMWORD PTR [r10+0x8],xmm2
   140040ba3:	ret    
   140040ba4:	test   r8,r8
   140040ba7:	je     0x140041019
   140040bad:	mov    QWORD PTR [rsp+0x8],rbx
   140040bb2:	mov    QWORD PTR [rsp+0x10],rsi
   140040bb7:	mov    QWORD PTR [rsp+0x20],rdi
   140040bbc:	push   rbp
   140040bbd:	push   r12
   140040bbf:	push   r13
   140040bc1:	push   r14
   140040bc3:	push   r15
   140040bc5:	mov    rbp,rsp
   140040bc8:	sub    rsp,0x40
   140040bcc:	mov    r11,r8
   140040bcf:	mov    rax,r9
   140040bd2:	shr    r11,0x4
   140040bd6:	mov    rbx,rdx
   140040bd9:	cmp    BYTE PTR [rcx],0x0
   140040bdc:	mov    r10,rcx
   140040bdf:	je     0x140040bee
   140040be1:	mov    r8,r11
   140040be4:	call   0x14004101c
   140040be9:	jmp    0x140040ffc
   140040bee:	lea    r9,[rcx+0x8]
   140040bf2:	mov    r13d,0x4
   140040bf8:	mov    QWORD PTR [rbp+0x40],r9
   140040bfc:	mov    r8,r9
   140040bff:	test   r11,r11
   140040c02:	je     0x140040fe6
   140040c08:	lea    rdi,[rbp-0x20]
   140040c0c:	mov    r12,rcx
   140040c0f:	sub    rdi,rax
   140040c12:	lea    r14,[rbp-0x10]
   140040c16:	lea    rsi,[rax+0x4]
   140040c1a:	sub    r14,rdx
   140040c1d:	lea    rax,[rbp-0x20]
   140040c21:	sub    r12,rax
   140040c24:	lea    r9,[rcx+0x18]
   140040c28:	lea    r15,[rip+0xfffffffffffbf3d1]        # 0x140000000
   140040c2f:	cmp    BYTE PTR [r10+0x1],0x0
   140040c34:	je     0x140040c54
   140040c36:	mov    rcx,rbx
   140040c39:	sub    r8,rbx
   140040c3c:	mov    rdx,r13
   140040c3f:	mov    eax,DWORD PTR [r8+rcx*1]
   140040c43:	xor    eax,DWORD PTR [rcx]
   140040c45:	mov    DWORD PTR [r14+rcx*1],eax
   140040c49:	add    rcx,r13
   140040c4c:	sub    rdx,0x1
   140040c50:	jne    0x140040c3f
   140040c52:	jmp    0x140040c5b
   140040c54:	movups xmm0,XMMWORD PTR [rbx]
   140040c57:	movups XMMWORD PTR [rbp-0x10],xmm0
   140040c5b:	lea    rax,[rbp-0x10]
   140040c5f:	mov    r8,r9
   140040c62:	sub    r8,rax
   140040c65:	xor    edx,edx
   140040c67:	lea    rax,[rbp-0x10]
   140040c6b:	add    rax,rdx
   140040c6e:	mov    ecx,DWORD PTR [r8+rax*1]
   140040c72:	xor    ecx,DWORD PTR [rax]
   140040c74:	mov    DWORD PTR [rbp+rdx*1-0x20],ecx
   140040c78:	add    rdx,r13
   140040c7b:	cmp    rdx,0x10
   140040c7f:	jl     0x140040c67
   140040c81:	movzx  ecx,BYTE PTR [rbp-0x20]
   140040c85:	lea    r8,[rsi-0x4]
   140040c89:	movzx  eax,BYTE PTR [rbp-0x1b]
   140040c8d:	mov    r13d,0x1
   140040c93:	mov    edx,DWORD PTR [r15+rcx*4+0x97ac0]
   140040c9b:	xor    edx,DWORD PTR [r15+rax*4+0x97ec0]
   140040ca3:	movzx  eax,BYTE PTR [rbp-0x16]
   140040ca7:	movzx  ecx,BYTE PTR [rbp-0x1d]
   140040cab:	xor    edx,DWORD PTR [r15+rax*4+0x982c0]
   140040cb3:	movzx  eax,BYTE PTR [rbp-0x11]
   140040cb7:	xor    edx,DWORD PTR [r15+rax*4+0x986c0]
   140040cbf:	movzx  eax,BYTE PTR [rbp-0x1c]
   140040cc3:	mov    DWORD PTR [r8],edx
   140040cc6:	mov    edx,DWORD PTR [r15+rcx*4+0x986c0]
   140040cce:	movzx  ecx,BYTE PTR [rbp-0x1e]
   140040cd2:	xor    edx,DWORD PTR [r15+rax*4+0x97ac0]
   140040cda:	movzx  eax,BYTE PTR [rbp-0x17]
   140040cde:	xor    edx,DWORD PTR [r15+rax*4+0x97ec0]
   140040ce6:	movzx  eax,BYTE PTR [rbp-0x12]
   140040cea:	xor    edx,DWORD PTR [r15+rax*4+0x982c0]
   140040cf2:	movzx  eax,BYTE PTR [rbp-0x19]
   140040cf6:	mov    DWORD PTR [rsi],edx
   140040cf8:	mov    edx,DWORD PTR [r15+rcx*4+0x982c0]
   140040d00:	movzx  ecx,BYTE PTR [rbp-0x1f]
   140040d04:	xor    edx,DWORD PTR [r15+rax*4+0x986c0]
   140040d0c:	movzx  eax,BYTE PTR [rbp-0x18]
   140040d10:	xor    edx,DWORD PTR [r15+rax*4+0x97ac0]
   140040d18:	movzx  eax,BYTE PTR [rbp-0x13]
   140040d1c:	xor    edx,DWORD PTR [r15+rax*4+0x97ec0]
   140040d24:	movzx  eax,BYTE PTR [rbp-0x1a]
   140040d28:	mov    DWORD PTR [rsi+0x4],edx
   140040d2b:	mov    edx,DWORD PTR [r15+rcx*4+0x97ec0]
   140040d33:	xor    edx,DWORD PTR [r15+rax*4+0x982c0]
   140040d3b:	movzx  eax,BYTE PTR [rbp-0x15]
   140040d3f:	xor    edx,DWORD PTR [r15+rax*4+0x986c0]
   140040d47:	movzx  eax,BYTE PTR [rbp-0x14]
   140040d4b:	xor    edx,DWORD PTR [r15+rax*4+0x97ac0]
   140040d53:	mov    DWORD PTR [rsi+0x8],edx
   140040d56:	mov    eax,DWORD PTR [r10+0x4]
   140040d5a:	dec    eax
   140040d5c:	cmp    eax,r13d
   140040d5f:	jle    0x140040e74
   140040d65:	lea    r15,[r12+0x28]
   140040d6a:	add    r15,rdi
   140040d6d:	lea    r9,[rip+0xfffffffffffbf28c]        # 0x140000000
   140040d74:	mov    rcx,r8
   140040d77:	mov    edx,0x4
   140040d7c:	mov    eax,DWORD PTR [r15+rcx*1]
   140040d80:	xor    eax,DWORD PTR [rcx]
   140040d82:	mov    DWORD PTR [rdi+rcx*1],eax
   140040d85:	lea    rcx,[rcx+0x4]
   140040d89:	sub    rdx,0x1
   140040d8d:	jne    0x140040d7c
   140040d8f:	movzx  ecx,BYTE PTR [rbp-0x20]
   140040d93:	inc    r13d
   140040d96:	movzx  eax,BYTE PTR [rbp-0x1b]
   140040d9a:	add    r15,0x10
   140040d9e:	mov    edx,DWORD PTR [r9+rcx*4+0x97ac0]
   140040da6:	xor    edx,DWORD PTR [r9+rax*4+0x97ec0]
   140040dae:	movzx  eax,BYTE PTR [rbp-0x16]
   140040db2:	movzx  ecx,BYTE PTR [rbp-0x1d]
   140040db6:	xor    edx,DWORD PTR [r9+rax*4+0x982c0]
   140040dbe:	movzx  eax,BYTE PTR [rbp-0x11]
   140040dc2:	xor    edx,DWORD PTR [r9+rax*4+0x986c0]
   140040dca:	movzx  eax,BYTE PTR [rbp-0x1c]
   140040dce:	mov    DWORD PTR [r8],edx
   140040dd1:	mov    edx,DWORD PTR [r9+rcx*4+0x986c0]
   140040dd9:	movzx  ecx,BYTE PTR [rbp-0x1e]
   140040ddd:	xor    edx,DWORD PTR [r9+rax*4+0x97ac0]
   140040de5:	movzx  eax,BYTE PTR [rbp-0x17]
   140040de9:	xor    edx,DWORD PTR [r9+rax*4+0x97ec0]
   140040df1:	movzx  eax,BYTE PTR [rbp-0x12]
   140040df5:	xor    edx,DWORD PTR [r9+rax*4+0x982c0]
   140040dfd:	movzx  eax,BYTE PTR [rbp-0x19]
   140040e01:	mov    DWORD PTR [rsi],edx
   140040e03:	mov    edx,DWORD PTR [r9+rcx*4+0x982c0]
   140040e0b:	movzx  ecx,BYTE PTR [rbp-0x1f]
   140040e0f:	xor    edx,DWORD PTR [r9+rax*4+0x986c0]
   140040e17:	movzx  eax,BYTE PTR [rbp-0x18]
   140040e1b:	xor    edx,DWORD PTR [r9+rax*4+0x97ac0]
   140040e23:	movzx  eax,BYTE PTR [rbp-0x13]
   140040e27:	xor    edx,DWORD PTR [r9+rax*4+0x97ec0]
   140040e2f:	movzx  eax,BYTE PTR [rbp-0x1a]
   140040e33:	mov    DWORD PTR [rsi+0x4],edx
   140040e36:	mov    edx,DWORD PTR [r9+rcx*4+0x97ec0]
   140040e3e:	xor    edx,DWORD PTR [r9+rax*4+0x982c0]
   140040e46:	movzx  eax,BYTE PTR [rbp-0x15]
   140040e4a:	xor    edx,DWORD PTR [r9+rax*4+0x986c0]
   140040e52:	movzx  eax,BYTE PTR [rbp-0x14]
   140040e56:	xor    edx,DWORD PTR [r9+rax*4+0x97ac0]
   140040e5e:	mov    DWORD PTR [rsi+0x8],edx
   140040e61:	mov    eax,DWORD PTR [r10+0x4]
   140040e65:	dec    eax
   140040e67:	cmp    r13d,eax
   140040e6a:	jl     0x140040d74
   140040e70:	lea    r9,[r10+0x18]
   140040e74:	mov    eax,DWORD PTR [r10+0x4]
   140040e78:	lea    rdx,[r10+0x18]
   140040e7c:	dec    eax
   140040e7e:	lea    r15,[rbp-0x20]
   140040e82:	movsxd rcx,eax
   140040e85:	mov    r13d,0x4
   140040e8b:	shl    rcx,0x4
   140040e8f:	add    rdx,rcx
   140040e92:	mov    rcx,r8
   140040e95:	sub    rcx,rdx
   140040e98:	sub    r15,rdx
   140040e9b:	mov    eax,DWORD PTR [rdx+rcx*1]
   140040e9e:	xor    eax,DWORD PTR [rdx]
   140040ea0:	mov    DWORD PTR [r15+rdx*1],eax
   140040ea4:	lea    rdx,[rdx+0x4]
   140040ea8:	sub    r13,0x1
   140040eac:	jne    0x140040e9b
   140040eae:	movzx  eax,BYTE PTR [rbp-0x20]
   140040eb2:	lea    rcx,[rip+0xfffffffffffbf147]        # 0x140000000
   140040eb9:	lea    r15,[r10+0x18]
   140040ebd:	mov    r13d,0x4
   140040ec3:	mov    edx,r13d
   140040ec6:	mov    al,BYTE PTR [rcx+rax*4+0x97ac1]
   140040ecd:	mov    BYTE PTR [r8],al
   140040ed0:	movzx  eax,BYTE PTR [rbp-0x1b]
   140040ed4:	mov    al,BYTE PTR [rcx+rax*4+0x97ac1]
   140040edb:	mov    BYTE PTR [rsi-0x3],al
   140040ede:	movzx  eax,BYTE PTR [rbp-0x16]
   140040ee2:	mov    al,BYTE PTR [rcx+rax*4+0x97ac1]
   140040ee9:	mov    BYTE PTR [rsi-0x2],al
   140040eec:	movzx  eax,BYTE PTR [rbp-0x11]
   140040ef0:	mov    al,BYTE PTR [rcx+rax*4+0x97ac1]
   140040ef7:	mov    BYTE PTR [rsi-0x1],al
   140040efa:	movzx  eax,BYTE PTR [rbp-0x1c]
   140040efe:	mov    al,BYTE PTR [rcx+rax*4+0x97ac1]
   140040f05:	mov    BYTE PTR [rsi],al
   140040f07:	movzx  eax,BYTE PTR [rbp-0x17]
   140040f0b:	mov    al,BYTE PTR [rcx+rax*4+0x97ac1]
   140040f12:	mov    BYTE PTR [rsi+0x1],al
   140040f15:	movzx  eax,BYTE PTR [rbp-0x12]
   140040f19:	mov    al,BYTE PTR [rcx+rax*4+0x97ac1]
   140040f20:	mov    BYTE PTR [rsi+0x2],al
   140040f23:	movzx  eax,BYTE PTR [rbp-0x1d]
   140040f27:	mov    al,BYTE PTR [rcx+rax*4+0x97ac1]
   140040f2e:	mov    BYTE PTR [rsi+0x3],al
   140040f31:	movzx  eax,BYTE PTR [rbp-0x18]
   140040f35:	mov    al,BYTE PTR [rcx+rax*4+0x97ac1]
   140040f3c:	mov    BYTE PTR [rsi+0x4],al
   140040f3f:	movzx  eax,BYTE PTR [rbp-0x13]
   140040f43:	mov    al,BYTE PTR [rcx+rax*4+0x97ac1]
   140040f4a:	mov    BYTE PTR [rsi+0x5],al
   140040f4d:	movzx  eax,BYTE PTR [rbp-0x1e]
   140040f51:	mov    al,BYTE PTR [rcx+rax*4+0x97ac1]
   140040f58:	mov    BYTE PTR [rsi+0x6],al
   140040f5b:	movzx  eax,BYTE PTR [rbp-0x19]
   140040f5f:	mov    al,BYTE PTR [rcx+rax*4+0x97ac1]
   140040f66:	mov    BYTE PTR [rsi+0x7],al
   140040f69:	movzx  eax,BYTE PTR [rbp-0x14]
   140040f6d:	mov    al,BYTE PTR [rcx+rax*4+0x97ac1]
   140040f74:	mov    BYTE PTR [rsi+0x8],al
   140040f77:	movzx  eax,BYTE PTR [rbp-0x1f]
   140040f7b:	mov    al,BYTE PTR [rcx+rax*4+0x97ac1]
   140040f82:	mov    BYTE PTR [rsi+0x9],al
   140040f85:	movzx  eax,BYTE PTR [rbp-0x1a]
   140040f89:	mov    al,BYTE PTR [rcx+rax*4+0x97ac1]
   140040f90:	mov    BYTE PTR [rsi+0xa],al
   140040f93:	movzx  eax,BYTE PTR [rbp-0x15]
   140040f97:	mov    al,BYTE PTR [rcx+rax*4+0x97ac1]
   140040f9e:	mov    rcx,r8
   140040fa1:	mov    BYTE PTR [rsi+0xb],al
   140040fa4:	movsxd rax,DWORD PTR [r10+0x4]
   140040fa8:	shl    rax,0x4
   140040fac:	add    r15,rax
   140040faf:	sub    r15,r8
   140040fb2:	mov    eax,DWORD PTR [rcx+r15*1]
   140040fb6:	xor    DWORD PTR [rcx],eax
   140040fb8:	add    rcx,r13
   140040fbb:	sub    rdx,0x1
   140040fbf:	jne    0x140040fb2
   140040fc1:	add    rbx,0x10
   140040fc5:	lea    r15,[rip+0xfffffffffffbf034]        # 0x140000000
   140040fcc:	sub    r14,0x10
   140040fd0:	sub    rdi,0x10
   140040fd4:	add    rsi,0x10
   140040fd8:	sub    r11,0x1
   140040fdc:	jne    0x140040c2f
   140040fe2:	mov    r9,QWORD PTR [rbp+0x40]
   140040fe6:	sub    r8,r9
   140040fe9:	mov    rcx,r13
   140040fec:	mov    eax,DWORD PTR [r8+r9*1]
   140040ff0:	mov    DWORD PTR [r9],eax
   140040ff3:	add    r9,r13
   140040ff6:	sub    rcx,0x1
   140040ffa:	jne    0x140040fec
   140040ffc:	lea    r11,[rsp+0x40]
   140041001:	mov    rbx,QWORD PTR [r11+0x30]
   140041005:	mov    rsi,QWORD PTR [r11+0x38]
   140041009:	mov    rdi,QWORD PTR [r11+0x48]
   14004100d:	mov    rsp,r11
   140041010:	pop    r15
   140041012:	pop    r14
   140041014:	pop    r13
   140041016:	pop    r12
   140041018:	pop    rbp
   140041019:	ret    
   14004101a:	int3   
   14004101b:	int3   
   14004101c:	mov    QWORD PTR [rsp+0x8],rbx
   140041021:	mov    QWORD PTR [rsp+0x10],rdi
   140041026:	mov    rdi,r9
   140041029:	mov    rbx,r8
   14004102c:	mov    r10,rdx
   14004102f:	movdqu xmm1,XMMWORD PTR [rcx+0x8]
   140041034:	test   r8,r8
   140041037:	je     0x14004109e
   140041039:	mov    rax,r10
   14004103c:	add    r10,0x10
   140041040:	cmp    BYTE PTR [rcx+0x1],0x0
   140041044:	movdqu xmm0,XMMWORD PTR [rax]
   140041048:	je     0x14004104e
   14004104a:	pxor   xmm0,xmm1
   14004104e:	movdqu xmm1,XMMWORD PTR [rcx+0x18]
   140041053:	movsxd r8,DWORD PTR [rcx+0x4]
   140041057:	pxor   xmm1,xmm0
   14004105b:	cmp    r8d,0x1
   14004105f:	jle    0x14004107c
   140041061:	lea    rdx,[rcx+0x28]
   140041065:	lea    r9d,[r8-0x1]
   140041069:	movdqu xmm0,XMMWORD PTR [rdx]
   14004106d:	lea    rdx,[rdx+0x10]
   140041071:	aesenc xmm1,xmm0
   140041076:	sub    r9,0x1
   14004107a:	jne    0x140041069
   14004107c:	mov    rax,r8
   14004107f:	add    rax,rax
   140041082:	movdqu xmm0,XMMWORD PTR [rcx+rax*8+0x18]
   140041088:	mov    rax,rdi
   14004108b:	add    rdi,0x10
   14004108f:	aesenclast xmm1,xmm0
   140041094:	movdqu XMMWORD PTR [rax],xmm1
   140041098:	sub    rbx,0x1
   14004109c:	jne    0x140041039
   14004109e:	mov    rbx,QWORD PTR [rsp+0x8]
   1400410a3:	mov    rdi,QWORD PTR [rsp+0x10]
   1400410a8:	movdqu XMMWORD PTR [rcx+0x8],xmm1
   1400410ad:	ret    
   1400410ae:	int3   
   1400410af:	int3   
   1400410b0:	mov    QWORD PTR [rsp+0x10],rbx
   1400410b5:	mov    QWORD PTR [rsp+0x18],rbp
   1400410ba:	mov    QWORD PTR [rsp+0x20],rsi
   1400410bf:	push   rdi
   1400410c0:	push   r14
   1400410c2:	push   r15
   1400410c4:	sub    rsp,0x20
   1400410c8:	mov    rax,QWORD PTR [rip+0x40e11]        # 0x140081ee0
   1400410cf:	xor    rax,rsp
   1400410d2:	mov    QWORD PTR [rsp+0x10],rax
   1400410d7:	mov    edi,0x1
   1400410dc:	mov    r11,rcx
   1400410df:	cmp    DWORD PTR [rcx+0x4],edi
   1400410e2:	jle    0x14004117c
   1400410e8:	lea    r9,[rsp]
   1400410ec:	sub    r9,rcx
   1400410ef:	lea    rbx,[rcx+0x28]
   1400410f3:	sub    r9,0x2a
   1400410f7:	lea    r15,[rip+0xfffffffffffbef02]        # 0x140000000
   1400410fe:	xor    r10d,r10d
   140041101:	lea    rsi,[rbx+0x2]
   140041105:	mov    ebp,0x4
   14004110a:	lea    r14,[r9+r10*1]
   14004110e:	movzx  eax,BYTE PTR [rsi+0x1]
   140041112:	lea    rdx,[r10+rax*4]
   140041116:	movzx  eax,BYTE PTR [rsi-0x1]
   14004111a:	mov    r8b,BYTE PTR [rdx+r15*1+0x9a6c0]
   140041122:	lea    rcx,[r10+rax*4]
   140041126:	movzx  eax,BYTE PTR [rsi-0x2]
   14004112a:	xor    r8b,BYTE PTR [rcx+r15*1+0x99ec0]
   140041132:	lea    rcx,[r10+rax*4]
   140041136:	movzx  eax,BYTE PTR [rsi]
   140041139:	xor    r8b,BYTE PTR [rcx+r15*1+0x99ac0]
   140041141:	lea    rcx,[r10+rax*4]
   140041145:	xor    r8b,BYTE PTR [rcx+r15*1+0x9a2c0]
   14004114d:	mov    BYTE PTR [r14+rsi*1],r8b
   140041151:	lea    rsi,[rsi+0x4]
   140041155:	sub    rbp,0x1
   140041159:	jne    0x14004110e
   14004115b:	inc    r10
   14004115e:	cmp    r10,0x4
   140041162:	jl     0x140041101
   140041164:	movups xmm0,XMMWORD PTR [rsp]
   140041168:	inc    edi
   14004116a:	sub    r9,0x10
   14004116e:	movdqu XMMWORD PTR [rbx],xmm0
   140041172:	add    rbx,0x10
   140041176:	cmp    edi,DWORD PTR [r11+0x4]
   14004117a:	jl     0x1400410fe
   14004117c:	mov    rcx,QWORD PTR [rsp+0x10]
   140041181:	xor    rcx,rsp
   140041184:	call   0x140055f90
   140041189:	mov    rbx,QWORD PTR [rsp+0x48]
   14004118e:	mov    rbp,QWORD PTR [rsp+0x50]
   140041193:	mov    rsi,QWORD PTR [rsp+0x58]
   140041198:	add    rsp,0x20
   14004119c:	pop    r15
   14004119e:	pop    r14
   1400411a0:	pop    rdi
   1400411a1:	ret    
   1400411a2:	int3   
   1400411a3:	int3   
   1400411a4:	mov    QWORD PTR [rsp+0x18],rbx
   1400411a9:	push   rbp
   1400411aa:	push   rsi
   1400411ab:	push   rdi
   1400411ac:	push   r12
   1400411ae:	push   r13
   1400411b0:	push   r14
   1400411b2:	push   r15
   1400411b4:	mov    rbp,rsp
   1400411b7:	sub    rsp,0x30
   1400411bb:	mov    rax,QWORD PTR [rip+0x40d1e]        # 0x140081ee0
   1400411c2:	xor    rax,rsp
   1400411c5:	mov    QWORD PTR [rbp-0x10],rax
   1400411c9:	mov    r14d,DWORD PTR [rcx+0x4]
   1400411cd:	xor    r10d,r10d
   1400411d0:	movups xmm0,XMMWORD PTR [rdx]
   1400411d3:	sub    r14d,0x6
   1400411d7:	xor    ebx,ebx
   1400411d9:	movups xmm1,XMMWORD PTR [rdx+0x10]
   1400411dd:	xor    r9d,r9d
   1400411e0:	movsxd r8,r14d
   1400411e3:	lea    r12d,[r10+0x4]
   1400411e7:	mov    rsi,rcx
   1400411ea:	lea    r15d,[r10+0x1]
   1400411ee:	movups XMMWORD PTR [rbp-0x30],xmm0
   1400411f2:	movups XMMWORD PTR [rbp-0x20],xmm1
   1400411f6:	test   r14d,r14d
   1400411f9:	jle    0x14004124b
   1400411fb:	xor    edx,edx
   1400411fd:	xor    r11d,r11d
   140041200:	cmp    r10d,DWORD PTR [rsi+0x4]
   140041204:	jg     0x140041399
   14004120a:	cmp    r9,r8
   14004120d:	jge    0x140041237
   14004120f:	lea    rdi,[rbp-0x30]
   140041213:	lea    rdi,[rdi+r9*4]
   140041217:	cmp    rdx,r12
   14004121a:	jge    0x14004123a
   14004121c:	mov    eax,DWORD PTR [rdi]
   14004121e:	lea    rcx,[r11+rdx*1]
   140041222:	add    rdi,r12
   140041225:	mov    DWORD PTR [rsi+rcx*4+0x18],eax
   140041229:	add    rdx,r15
   14004122c:	add    r9,r15
   14004122f:	add    ebx,r15d
   140041232:	cmp    r9,r8
   140041235:	jl     0x140041217
   140041237:	cmp    rdx,r12
   14004123a:	jne    0x140041246
   14004123c:	add    r10d,r15d
   14004123f:	add    r11,r12
   140041242:	xor    ebx,ebx
   140041244:	xor    edx,edx
   140041246:	cmp    r9,r8
   140041249:	jl     0x140041200
   14004124b:	cmp    r10d,DWORD PTR [rsi+0x4]
   14004124f:	jg     0x140041399
   140041255:	movsxd r11,ebx
   140041258:	lea    r13,[rip+0x56641]        # 0x1400978a0
   14004125f:	lea    rbx,[rip+0x5683a]        # 0x140097aa0
   140041266:	movsxd rdi,r10d
   140041269:	movzx  ecx,BYTE PTR [rbp+r8*4-0x33]
   14004126f:	mov    al,BYTE PTR [rbp-0x30]
   140041272:	xor    al,BYTE PTR [rcx+r13*1]
   140041276:	mov    BYTE PTR [rbp-0x30],al
   140041279:	movzx  eax,BYTE PTR [rbp+r8*4-0x32]
   14004127f:	mov    al,BYTE PTR [rax+r13*1]
   140041283:	xor    BYTE PTR [rbp-0x2f],al
   140041286:	movzx  eax,BYTE PTR [rbp+r8*4-0x31]
   14004128c:	mov    al,BYTE PTR [rax+r13*1]
   140041290:	xor    BYTE PTR [rbp-0x2e],al
   140041293:	movzx  eax,BYTE PTR [rbp+r8*4-0x34]
   140041299:	mov    al,BYTE PTR [rax+r13*1]
   14004129d:	xor    BYTE PTR [rbp-0x2d],al
   1400412a0:	mov    al,BYTE PTR [rbx]
   1400412a2:	add    rbx,r15
   1400412a5:	xor    BYTE PTR [rbp-0x30],al
   1400412a8:	cmp    r14d,0x8
   1400412ac:	je     0x1400412d6
   1400412ae:	cmp    r8,r15
   1400412b1:	jle    0x140041344
   1400412b7:	lea    rcx,[rbp-0x2c]
   1400412bb:	lea    r9,[r8-0x1]
   1400412bf:	mov    rdx,r12
   1400412c2:	mov    al,BYTE PTR [rcx-0x4]
   1400412c5:	xor    BYTE PTR [rcx],al
   1400412c7:	add    rcx,r15
   1400412ca:	sub    rdx,r15
   1400412cd:	jne    0x1400412c2
   1400412cf:	sub    r9,r15
   1400412d2:	jne    0x1400412bf
   1400412d4:	jmp    0x140041344
   1400412d6:	lea    rcx,[rbp-0x2c]
   1400412da:	mov    r9d,0x3
   1400412e0:	mov    rdx,r12
   1400412e3:	mov    al,BYTE PTR [rcx-0x4]
   1400412e6:	xor    BYTE PTR [rcx],al
   1400412e8:	add    rcx,r15
   1400412eb:	sub    rdx,r15
   1400412ee:	jne    0x1400412e3
   1400412f0:	sub    r9,r15
   1400412f3:	jne    0x1400412e0
   1400412f5:	movzx  eax,BYTE PTR [rbp-0x24]
   1400412f9:	mov    al,BYTE PTR [rax+r13*1]
   1400412fd:	xor    BYTE PTR [rbp-0x20],al
   140041300:	movzx  eax,BYTE PTR [rbp-0x23]
   140041304:	mov    al,BYTE PTR [rax+r13*1]
   140041308:	xor    BYTE PTR [rbp-0x1f],al
   14004130b:	movzx  eax,BYTE PTR [rbp-0x22]
   14004130f:	mov    al,BYTE PTR [rax+r13*1]
   140041313:	xor    BYTE PTR [rbp-0x1e],al
   140041316:	movzx  eax,BYTE PTR [rbp-0x21]
   14004131a:	mov    al,BYTE PTR [rax+r13*1]
   14004131e:	xor    BYTE PTR [rbp-0x1d],al
   140041321:	cmp    r8,0x5
   140041325:	jle    0x140041344
   140041327:	lea    rcx,[rbp-0x1c]
   14004132b:	lea    r9,[r8-0x5]
   14004132f:	mov    rdx,r12
   140041332:	mov    al,BYTE PTR [rcx-0x4]
   140041335:	xor    BYTE PTR [rcx],al
   140041337:	add    rcx,r15
   14004133a:	sub    rdx,r15
   14004133d:	jne    0x140041332
   14004133f:	sub    r9,r15
   140041342:	jne    0x14004132f
   140041344:	xor    edx,edx
   140041346:	test   r14d,r14d
   140041349:	jle    0x14004138f
   14004134b:	cmp    r10d,DWORD PTR [rsi+0x4]
   14004134f:	jg     0x140041399
   140041351:	cmp    rdx,r8
   140041354:	jge    0x14004137c
   140041356:	lea    r9,[rbp-0x30]
   14004135a:	lea    r9,[r9+rdx*4]
   14004135e:	cmp    r11,r12
   140041361:	jge    0x14004137f
   140041363:	mov    eax,DWORD PTR [r9]
   140041366:	lea    rcx,[r11+rdi*4]
   14004136a:	add    r9,r12
   14004136d:	mov    DWORD PTR [rsi+rcx*4+0x18],eax
   140041371:	add    r11,r15
   140041374:	add    rdx,r15
   140041377:	cmp    rdx,r8
   14004137a:	jl     0x14004135e
   14004137c:	cmp    r11,r12
   14004137f:	jne    0x14004138a
   140041381:	add    r10d,r15d
   140041384:	add    rdi,r15
   140041387:	xor    r11d,r11d
   14004138a:	cmp    rdx,r8
   14004138d:	jl     0x14004134b
   14004138f:	cmp    r10d,DWORD PTR [rsi+0x4]
   140041393:	jle    0x140041269
   140041399:	mov    rcx,QWORD PTR [rbp-0x10]
   14004139d:	xor    rcx,rsp
   1400413a0:	call   0x140055f90
   1400413a5:	mov    rbx,QWORD PTR [rsp+0x80]
   1400413ad:	add    rsp,0x30
   1400413b1:	pop    r15
   1400413b3:	pop    r14
   1400413b5:	pop    r13
   1400413b7:	pop    r12
   1400413b9:	pop    rdi
   1400413ba:	pop    rsi
   1400413bb:	pop    rbp
   1400413bc:	ret    
   1400413bd:	int3   
   1400413be:	int3   
   1400413bf:	int3   
   1400413c0:	mov    QWORD PTR [rsp+0x20],rbx
   1400413c5:	push   rbp
   1400413c6:	push   rsi
   1400413c7:	push   rdi
   1400413c8:	push   r12
   1400413ca:	push   r13
   1400413cc:	push   r14
   1400413ce:	push   r15
   1400413d0:	mov    eax,0x1040
   1400413d5:	call   0x140055f20
   1400413da:	sub    rsp,rax
   1400413dd:	mov    rax,QWORD PTR [rip+0x40afc]        # 0x140081ee0
   1400413e4:	xor    rax,rsp
   1400413e7:	mov    QWORD PTR [rsp+0x1030],rax
   1400413ef:	mov    r11d,DWORD PTR [rcx+0x2404]
   1400413f6:	xor    ebx,ebx
   1400413f8:	movsxd r13,r8d
   1400413fb:	mov    r12,r9
   1400413fe:	mov    QWORD PTR [rsp+0x20],rdx
   140041403:	mov    r15,rdx
   140041406:	mov    rdi,rcx
   140041409:	mov    r10b,0x1
   14004140c:	test   r11d,r11d
   14004140f:	jle    0x1400417e4
   140041415:	lea    rax,[rsp+0x30]
   14004141a:	mov    r9,rcx
   14004141d:	sub    r9,rax
   140041420:	lea    rdx,[rsp+0x30]
   140041425:	mov    ebp,r11d
   140041428:	mov    eax,ebx
   14004142a:	mov    r8,rbx
   14004142d:	test   r13d,r13d
   140041430:	jle    0x14004146b
   140041432:	movsxd r14,DWORD PTR [r9+rdx*1+0x4]
   140041437:	cmp    DWORD PTR [r9+rdx*1+0x4],ebx
   14004143c:	je     0x14004145a
   14004143e:	test   eax,eax
   140041440:	je     0x14004145a
   140041442:	cdqe   
   140041444:	mov    eax,DWORD PTR [rdi+rax*4+0x800]
   14004144b:	add    eax,DWORD PTR [rdi+r14*4+0x800]
   140041453:	cdqe   
   140041455:	mov    ecx,DWORD PTR [rdi+rax*4]
   140041458:	jmp    0x14004145c
   14004145a:	mov    ecx,ebx
   14004145c:	movzx  eax,BYTE PTR [r8+r15*1]
   140041461:	inc    r8
   140041464:	xor    eax,ecx
   140041466:	cmp    r8,r13
   140041469:	jl     0x140041437
   14004146b:	test   eax,eax
   14004146d:	movzx  r10d,r10b
   140041471:	mov    DWORD PTR [rdx],eax
   140041473:	cmovne r10d,ebx
   140041477:	add    rdx,0x4
   14004147b:	sub    rbp,0x1
   14004147f:	jne    0x140041428
   140041481:	test   r10b,r10b
   140041484:	jne    0x1400417e4
   14004148a:	mov    esi,0xff
   14004148f:	cmp    BYTE PTR [rdi+0x2c08],bl
   140041495:	jne    0x1400416aa
   14004149b:	lea    eax,[r11+0x1]
   14004149f:	mov    BYTE PTR [rdi+0x2c08],0x1
   1400414a6:	mov    edx,ebx
   1400414a8:	test   eax,eax
   1400414aa:	jle    0x1400414c7
   1400414ac:	lea    rcx,[rdi+0x2408]
   1400414b3:	mov    DWORD PTR [rcx],ebx
   1400414b5:	inc    edx
   1400414b7:	mov    eax,DWORD PTR [rdi+0x2404]
   1400414bd:	lea    rcx,[rcx+0x4]
   1400414c1:	inc    eax
   1400414c3:	cmp    edx,eax
   1400414c5:	jl     0x1400414b3
   1400414c7:	movsxd r10,DWORD PTR [rsp+0x10a0]
   1400414cf:	lea    r15,[rdi+0x2408]
   1400414d6:	mov    DWORD PTR [r15],0x1
   1400414dd:	mov    r9,rbx
   1400414e0:	test   r10,r10
   1400414e3:	jle    0x140041549
   1400414e5:	movsxd rdx,DWORD PTR [rdi+0x2404]
   1400414ec:	test   rdx,rdx
   1400414ef:	jle    0x140041541
   1400414f1:	mov    eax,r13d
   1400414f4:	lea    r8,[rdi+0x2408]
   1400414fb:	sub    eax,DWORD PTR [r12+r9*4]
   1400414ff:	lea    r8,[r8+rdx*4]
   140041503:	dec    eax
   140041505:	cdqe   
   140041507:	movsxd r11,DWORD PTR [rdi+rax*4]
   14004150b:	test   r11,r11
   14004150e:	je     0x140041530
   140041510:	cmp    DWORD PTR [r8-0x4],ebx
   140041514:	je     0x140041530
   140041516:	movsxd rax,DWORD PTR [r8-0x4]
   14004151a:	mov    eax,DWORD PTR [rdi+rax*4+0x800]
   140041521:	add    eax,DWORD PTR [rdi+r11*4+0x800]
   140041529:	cdqe   
   14004152b:	mov    ecx,DWORD PTR [rdi+rax*4]
   14004152e:	jmp    0x140041532
   140041530:	mov    ecx,ebx
   140041532:	xor    DWORD PTR [r8],ecx
   140041535:	dec    rdx
   140041538:	sub    r8,0x4
   14004153c:	test   rdx,rdx
   14004153f:	jg     0x14004150b
   140041541:	inc    r9
   140041544:	cmp    r9,r10
   140041547:	jl     0x1400414e5
   140041549:	mov    r8d,esi
   14004154c:	mov    DWORD PTR [rdi+0x2000],ebx
   140041552:	sub    r8d,r13d
   140041555:	mov    r12d,0x100
   14004155b:	cmp    r8d,r12d
   14004155e:	jge    0x1400416aa
   140041564:	mov    r9d,esi
   140041567:	lea    r14d,[r8+r8*1]
   14004156b:	sub    r9d,r8d
   14004156e:	mov    eax,DWORD PTR [rdi+0x2404]
   140041574:	mov    r10d,ebx
   140041577:	inc    eax
   140041579:	test   eax,eax
   14004157b:	jle    0x1400415e8
   14004157d:	mov    r11d,ebx
   140041580:	mov    ebp,eax
   140041582:	mov    rsi,r15
   140041585:	mov    eax,0x80808081
   14004158a:	mov    ecx,r11d
   14004158d:	imul   r11d
   140041590:	add    edx,r11d
   140041593:	sar    edx,0x7
   140041596:	mov    eax,edx
   140041598:	shr    eax,0x1f
   14004159b:	add    edx,eax
   14004159d:	imul   eax,edx,0xff
   1400415a3:	sub    ecx,eax
   1400415a5:	movsxd rax,ecx
   1400415a8:	cmp    DWORD PTR [rdi+rax*4],ebx
   1400415ab:	je     0x1400415cd
   1400415ad:	cmp    DWORD PTR [rsi],ebx
   1400415af:	je     0x1400415cd
   1400415b1:	movsxd rax,DWORD PTR [rdi+rax*4]
   1400415b5:	movsxd rcx,DWORD PTR [rsi]
   1400415b8:	mov    eax,DWORD PTR [rdi+rax*4+0x800]
   1400415bf:	add    eax,DWORD PTR [rdi+rcx*4+0x800]
   1400415c6:	cdqe   
   1400415c8:	mov    ecx,DWORD PTR [rdi+rax*4]
   1400415cb:	jmp    0x1400415cf
   1400415cd:	mov    ecx,ebx
   1400415cf:	xor    r10d,ecx
   1400415d2:	add    r11d,r8d
   1400415d5:	add    rsi,0x4
   1400415d9:	sub    rbp,0x1
   1400415dd:	jne    0x140041585
   1400415df:	test   r10d,r10d
   1400415e2:	jne    0x140041697
   1400415e8:	movsxd rax,DWORD PTR [rdi+0x2000]
   1400415ef:	mov    r11d,0x1
   1400415f5:	mov    DWORD PTR [rdi+rax*4+0x1c00],r9d
   1400415fd:	movsxd rax,DWORD PTR [rdi+0x2000]
   140041604:	mov    DWORD PTR [rdi+rax*4+0x2004],ebx
   14004160b:	mov    eax,DWORD PTR [rdi+0x2404]
   140041611:	inc    eax
   140041613:	cmp    eax,r11d
   140041616:	jle    0x140041691
   140041618:	mov    r10d,ebx
   14004161b:	lea    rsi,[rdi+0x240c]
   140041622:	mov    eax,0x80808081
   140041627:	mov    ecx,r10d
   14004162a:	imul   r10d
   14004162d:	add    edx,r10d
   140041630:	sar    edx,0x7
   140041633:	mov    eax,edx
   140041635:	shr    eax,0x1f
   140041638:	add    edx,eax
   14004163a:	imul   eax,edx,0xff
   140041640:	sub    ecx,eax
   140041642:	movsxd rax,ecx
   140041645:	movsxd rcx,DWORD PTR [rdi+rax*4]
   140041649:	cmp    DWORD PTR [rsi],ebx
   14004164b:	je     0x140041669
   14004164d:	test   ecx,ecx
   14004164f:	je     0x140041669
   140041651:	movsxd rax,DWORD PTR [rsi]
   140041654:	mov    eax,DWORD PTR [rdi+rax*4+0x800]
   14004165b:	add    eax,DWORD PTR [rdi+rcx*4+0x800]
   140041662:	cdqe   
   140041664:	mov    ecx,DWORD PTR [rdi+rax*4]
   140041667:	jmp    0x14004166b
   140041669:	mov    ecx,ebx
   14004166b:	movsxd rax,DWORD PTR [rdi+0x2000]
   140041672:	add    r11d,0x2
   140041676:	add    r10d,r14d
   140041679:	add    rsi,0x8
   14004167d:	xor    DWORD PTR [rdi+rax*4+0x2004],ecx
   140041684:	mov    eax,DWORD PTR [rdi+0x2404]
   14004168a:	inc    eax
   14004168c:	cmp    r11d,eax
   14004168f:	jl     0x140041622
   140041691:	inc    DWORD PTR [rdi+0x2000]
   140041697:	inc    r8d
   14004169a:	dec    r9d
   14004169d:	add    r14d,0x2
   1400416a1:	cmp    r8d,r12d
   1400416a4:	jl     0x14004156e
   1400416aa:	lea    rdx,[rdi+0x2408]
   1400416b1:	mov    rcx,rdi
   1400416b4:	lea    r9,[rsp+0x830]
   1400416bc:	lea    r8,[rsp+0x30]
   1400416c1:	call   0x140041afc
   1400416c6:	mov    eax,DWORD PTR [rdi+0x2000]
   1400416cc:	cmp    eax,DWORD PTR [rdi+0x2404]
   1400416d2:	jg     0x1400417d3
   1400416d8:	test   eax,eax
   1400416da:	jle    0x1400417d3
   1400416e0:	mov    r12,QWORD PTR [rsp+0x20]
   1400416e5:	lea    r9,[rdi+0x2004]
   1400416ec:	mov    esi,ebx
   1400416ee:	mov    r8d,DWORD PTR [r9-0x404]
   1400416f5:	mov    r10d,ebx
   1400416f8:	mov    eax,DWORD PTR [rdi+0x2404]
   1400416fe:	neg    r8d
   140041701:	lea    r15d,[r8+0xff]
   140041708:	test   eax,eax
   14004170a:	jle    0x140041773
   14004170c:	mov    r11d,ebx
   14004170f:	lea    r14,[rsp+0x830]
   140041717:	mov    ebp,eax
   140041719:	mov    eax,0x80808081
   14004171e:	mov    ecx,r11d
   140041721:	imul   r11d
   140041724:	add    edx,r11d
   140041727:	sar    edx,0x7
   14004172a:	mov    eax,edx
   14004172c:	shr    eax,0x1f
   14004172f:	add    edx,eax
   140041731:	imul   eax,edx,0xff
   140041737:	sub    ecx,eax
   140041739:	movsxd rax,ecx
   14004173c:	movsxd rcx,DWORD PTR [rdi+rax*4]
   140041740:	cmp    DWORD PTR [r14],ebx
   140041743:	je     0x140041761
   140041745:	test   ecx,ecx
   140041747:	je     0x140041761
   140041749:	movsxd rax,DWORD PTR [r14]
   14004174c:	mov    eax,DWORD PTR [rdi+rax*4+0x800]
   140041753:	add    eax,DWORD PTR [rdi+rcx*4+0x800]
   14004175a:	cdqe   
   14004175c:	mov    ecx,DWORD PTR [rdi+rax*4]
   14004175f:	jmp    0x140041763
   140041761:	mov    ecx,ebx
   140041763:	xor    r10d,ecx
   140041766:	add    r11d,r15d
   140041769:	add    r14,0x4
   14004176d:	sub    rbp,0x1
   140041771:	jne    0x140041719
   140041773:	dec    r8d
   140041776:	add    r8d,r13d
   140041779:	js     0x1400417c1
   14004177b:	cmp    r8d,r13d
   14004177e:	jge    0x1400417c1
   140041780:	movsxd rax,DWORD PTR [r9]
   140041783:	mov    ecx,0xff
   140041788:	sub    ecx,DWORD PTR [rdi+rax*4+0x800]
   14004178f:	movsxd rax,ecx
   140041792:	test   r10d,r10d
   140041795:	je     0x1400417b8
   140041797:	cmp    DWORD PTR [rdi+rax*4],ebx
   14004179a:	je     0x1400417b8
   14004179c:	movsxd rax,DWORD PTR [rdi+rax*4]
   1400417a0:	movsxd rcx,r10d
   1400417a3:	mov    eax,DWORD PTR [rdi+rax*4+0x800]
   1400417aa:	add    eax,DWORD PTR [rdi+rcx*4+0x800]
   1400417b1:	cdqe   
   1400417b3:	mov    ecx,DWORD PTR [rdi+rax*4]
   1400417b6:	jmp    0x1400417ba
   1400417b8:	mov    ecx,ebx
   1400417ba:	movsxd rax,r8d
   1400417bd:	xor    BYTE PTR [rax+r12*1],cl
   1400417c1:	inc    esi
   1400417c3:	add    r9,0x4
   1400417c7:	cmp    esi,DWORD PTR [rdi+0x2000]
   1400417cd:	jl     0x1400416ee
   1400417d3:	mov    eax,DWORD PTR [rdi+0x2404]
   1400417d9:	cmp    DWORD PTR [rdi+0x2000],eax
   1400417df:	setle  al
   1400417e2:	jmp    0x1400417e6
   1400417e4:	mov    al,0x1
   1400417e6:	mov    rcx,QWORD PTR [rsp+0x1030]
   1400417ee:	xor    rcx,rsp
   1400417f1:	call   0x140055f90
   1400417f6:	mov    rbx,QWORD PTR [rsp+0x1098]
   1400417fe:	add    rsp,0x1040
   140041805:	pop    r15
   140041807:	pop    r14
   140041809:	pop    r13
   14004180b:	pop    r12
   14004180d:	pop    rdi
   14004180e:	pop    rsi
   14004180f:	pop    rbp
   140041810:	ret    
   140041811:	int3   
   140041812:	int3   
   140041813:	int3   
   140041814:	mov    QWORD PTR [rsp+0x10],rbx
   140041819:	push   rbp
   14004181a:	push   rsi
   14004181b:	push   rdi
   14004181c:	push   r12
   14004181e:	push   r13
   140041820:	push   r14
   140041822:	push   r15
   140041824:	sub    rsp,0x440
   14004182b:	mov    rax,QWORD PTR [rip+0x406ae]        # 0x140081ee0
   140041832:	xor    rax,rsp
   140041835:	mov    QWORD PTR [rsp+0x430],rax
   14004183d:	movsxd rdi,DWORD PTR [rcx+0x2404]
   140041844:	xor    ebx,ebx
   140041846:	mov    r14,r9
   140041849:	mov    QWORD PTR [rsp+0x28],r9
   14004184e:	movsxd rbp,r8d
   140041851:	mov    rsi,rcx
   140041854:	mov    QWORD PTR [rsp+0x20],rdx
   140041859:	lea    eax,[rdi+0x1]
   14004185c:	test   eax,eax
   14004185e:	jle    0x140041873
   140041860:	movsxd r8,eax
   140041863:	lea    rcx,[rsp+0x30]
   140041868:	shl    r8,0x2
   14004186c:	xor    edx,edx
   14004186e:	call   0x140058f40
   140041873:	mov    r8,rbx
   140041876:	mov    r11,rbp
   140041879:	test   ebp,ebp
   14004187b:	jle    0x140041930
   140041881:	movsxd r12,DWORD PTR [rsi+0xc00]
   140041888:	lea    r15,[rdi-0x1]
   14004188c:	mov    r14,QWORD PTR [rsp+0x20]
   140041891:	mov    r13,rdi
   140041894:	movzx  edx,BYTE PTR [r8+r14*1]
   140041899:	mov    r10,r15
   14004189c:	xor    edx,DWORD PTR [rsp+r13*4+0x2c]
   1400418a1:	test   r15,r15
   1400418a4:	jle    0x1400418f7
   1400418a6:	lea    rax,[rsp+0x30]
   1400418ab:	movsxd r13,edx
   1400418ae:	mov    rbp,rsi
   1400418b1:	lea    r9,[rsp+r15*4+0x2c]
   1400418b6:	sub    rbp,rax
   1400418b9:	movsxd rax,DWORD PTR [r9+rbp*1+0xc04]
   1400418c1:	test   eax,eax
   1400418c3:	je     0x1400418df
   1400418c5:	test   edx,edx
   1400418c7:	je     0x1400418df
   1400418c9:	mov    eax,DWORD PTR [rsi+rax*4+0x800]
   1400418d0:	add    eax,DWORD PTR [rsi+r13*4+0x800]
   1400418d8:	cdqe   
   1400418da:	mov    ecx,DWORD PTR [rsi+rax*4]
   1400418dd:	jmp    0x1400418e1
   1400418df:	mov    ecx,ebx
   1400418e1:	xor    ecx,DWORD PTR [r9]
   1400418e4:	dec    r10
   1400418e7:	mov    DWORD PTR [r9+0x4],ecx
   1400418eb:	sub    r9,0x4
   1400418ef:	test   r10,r10
   1400418f2:	jg     0x1400418b9
   1400418f4:	mov    r13,rdi
   1400418f7:	test   r12,r12
   1400418fa:	je     0x140041919
   1400418fc:	test   edx,edx
   1400418fe:	je     0x140041919
   140041900:	movsxd rax,edx
   140041903:	mov    eax,DWORD PTR [rsi+rax*4+0x800]
   14004190a:	add    eax,DWORD PTR [rsi+r12*4+0x800]
   140041912:	cdqe   
   140041914:	mov    ecx,DWORD PTR [rsi+rax*4]
   140041917:	jmp    0x14004191b
   140041919:	mov    ecx,ebx
   14004191b:	inc    r8
   14004191e:	mov    DWORD PTR [rsp+0x30],ecx
   140041922:	cmp    r8,r11
   140041925:	jl     0x140041894
   14004192b:	mov    r14,QWORD PTR [rsp+0x28]
   140041930:	test   edi,edi
   140041932:	jle    0x140041951
   140041934:	sub    edi,ebx
   140041936:	inc    ebx
   140041938:	lea    eax,[rdi-0x1]
   14004193b:	cdqe   
   14004193d:	mov    cl,BYTE PTR [rsp+rax*4+0x30]
   140041941:	mov    BYTE PTR [r14],cl
   140041944:	inc    r14
   140041947:	mov    edi,DWORD PTR [rsi+0x2404]
   14004194d:	cmp    ebx,edi
   14004194f:	jl     0x140041934
   140041951:	mov    rcx,QWORD PTR [rsp+0x430]
   140041959:	xor    rcx,rsp
   14004195c:	call   0x140055f90
   140041961:	mov    rbx,QWORD PTR [rsp+0x488]
   140041969:	add    rsp,0x440
   140041970:	pop    r15
   140041972:	pop    r14
   140041974:	pop    r13
   140041976:	pop    r12
   140041978:	pop    rdi
   140041979:	pop    rsi
   14004197a:	pop    rbp
   14004197b:	ret    
   14004197c:	rex push rbx
   14004197e:	sub    rsp,0x20
   140041982:	mov    rbx,rcx
   140041985:	mov    DWORD PTR [rcx+0x2404],edx
   14004198b:	mov    BYTE PTR [rcx+0x2c08],0x0
   140041992:	call   0x1400419a4
   140041997:	mov    rcx,rbx
   14004199a:	add    rsp,0x20
   14004199e:	pop    rbx
   14004199f:	jmp    0x140041a00
   1400419a4:	mov    QWORD PTR [rsp+0x8],rsi
   1400419a9:	mov    QWORD PTR [rsp+0x10],rdi
   1400419ae:	mov    edx,0x1
   1400419b3:	xor    edi,edi
   1400419b5:	mov    rsi,rcx
   1400419b8:	mov    r8d,0xff
   1400419be:	movsxd rax,edx
   1400419c1:	mov    DWORD PTR [rcx+rax*4+0x800],edi
   1400419c8:	mov    DWORD PTR [rsi],edx
   1400419ca:	add    edx,edx
   1400419cc:	cmp    edx,r8d
   1400419cf:	jle    0x1400419d7
   1400419d1:	xor    edx,0x11d
   1400419d7:	inc    edi
   1400419d9:	add    rsi,0x4
   1400419dd:	cmp    edi,r8d
   1400419e0:	jl     0x1400419be
   1400419e2:	lea    rdi,[rcx+0x3fc]
   1400419e9:	mov    rsi,rcx
   1400419ec:	mov    ecx,0x101
   1400419f1:	rep movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400419f3:	mov    rsi,QWORD PTR [rsp+0x8]
   1400419f8:	mov    rdi,QWORD PTR [rsp+0x10]
   1400419fd:	ret    
   1400419fe:	int3   
   1400419ff:	int3   
   140041a00:	mov    QWORD PTR [rsp+0x10],rbx
   140041a05:	mov    QWORD PTR [rsp+0x18],rbp
   140041a0a:	push   rsi
   140041a0b:	push   rdi
   140041a0c:	push   r14
   140041a0e:	sub    rsp,0x830
   140041a15:	mov    rax,QWORD PTR [rip+0x404c4]        # 0x140081ee0
   140041a1c:	xor    rax,rsp
   140041a1f:	mov    QWORD PTR [rsp+0x820],rax
   140041a27:	movsxd rbx,DWORD PTR [rcx+0x2404]
   140041a2e:	mov    rdi,rcx
   140041a31:	test   ebx,ebx
   140041a33:	jle    0x140041a4b
   140041a35:	mov    r8,rbx
   140041a38:	lea    rcx,[rsp+0x420]
   140041a40:	shl    r8,0x2
   140041a44:	xor    edx,edx
   140041a46:	call   0x140058f40
   140041a4b:	mov    esi,0x1
   140041a50:	mov    DWORD PTR [rsp+0x420],0x1
   140041a5b:	cmp    ebx,esi
   140041a5d:	jl     0x140041ad4
   140041a5f:	lea    rbp,[rdi+0xc00]
   140041a66:	lea    r14,[rdi+0x4]
   140041a6a:	test   ebx,ebx
   140041a6c:	jle    0x140041a81
   140041a6e:	movsxd r8,ebx
   140041a71:	lea    rcx,[rsp+0x20]
   140041a76:	shl    r8,0x2
   140041a7a:	xor    edx,edx
   140041a7c:	call   0x140058f40
   140041a81:	mov    eax,DWORD PTR [r14]
   140041a84:	lea    r8,[rsp+0x420]
   140041a8c:	mov    r9,rbp
   140041a8f:	mov    DWORD PTR [rsp+0x20],eax
   140041a93:	lea    rdx,[rsp+0x20]
   140041a98:	mov    DWORD PTR [rsp+0x24],0x1
   140041aa0:	mov    rcx,rdi
   140041aa3:	call   0x140041afc
   140041aa8:	movsxd rbx,DWORD PTR [rdi+0x2404]
   140041aaf:	mov    r8,rbx
   140041ab2:	test   ebx,ebx
   140041ab4:	jle    0x140041aca
   140041ab6:	shl    r8,0x2
   140041aba:	lea    rcx,[rsp+0x420]
   140041ac2:	mov    rdx,rbp
   140041ac5:	call   0x140059180
   140041aca:	inc    esi
   140041acc:	add    r14,0x4
   140041ad0:	cmp    esi,ebx
   140041ad2:	jle    0x140041a6a
   140041ad4:	mov    rcx,QWORD PTR [rsp+0x820]
   140041adc:	xor    rcx,rsp
   140041adf:	call   0x140055f90
   140041ae4:	lea    r11,[rsp+0x830]
   140041aec:	mov    rbx,QWORD PTR [r11+0x28]
   140041af0:	mov    rbp,QWORD PTR [r11+0x30]
   140041af4:	mov    rsp,r11
   140041af7:	pop    r14
   140041af9:	pop    rdi
   140041afa:	pop    rsi
   140041afb:	ret    
   140041afc:	mov    QWORD PTR [rsp+0x8],rbx
   140041b01:	mov    QWORD PTR [rsp+0x10],rsi
   140041b06:	mov    QWORD PTR [rsp+0x18],rdi
   140041b0b:	mov    r10,rcx
   140041b0e:	mov    rdi,r9
   140041b11:	xor    ecx,ecx
   140041b13:	mov    rbx,r8
   140041b16:	mov    r11,rdx
   140041b19:	cmp    DWORD PTR [r10+0x2404],ecx
   140041b20:	jle    0x140041b37
   140041b22:	mov    rax,r9
   140041b25:	and    DWORD PTR [rax],0x0
   140041b28:	inc    ecx
   140041b2a:	lea    rax,[rax+0x4]
   140041b2e:	cmp    ecx,DWORD PTR [r10+0x2404]
   140041b35:	jl     0x140041b25
   140041b37:	mov    eax,DWORD PTR [r10+0x2404]
   140041b3e:	xor    r8d,r8d
   140041b41:	test   eax,eax
   140041b43:	jle    0x140041bba
   140041b45:	sub    rbx,r9
   140041b48:	sub    rdi,rdx
   140041b4b:	cmp    DWORD PTR [r11],0x0
   140041b4f:	je     0x140041ba3
   140041b51:	xor    esi,esi
   140041b53:	sub    eax,r8d
   140041b56:	test   eax,eax
   140041b58:	jle    0x140041ba3
   140041b5a:	lea    r9,[rdi+r11*1]
   140041b5e:	cmp    DWORD PTR [r11],0x0
   140041b62:	je     0x140041b8a
   140041b64:	cmp    DWORD PTR [rbx+r9*1],0x0
   140041b69:	je     0x140041b8a
   140041b6b:	movsxd rax,DWORD PTR [r11]
   140041b6e:	movsxd rcx,DWORD PTR [rbx+r9*1]
   140041b72:	mov    eax,DWORD PTR [r10+rax*4+0x800]
   140041b7a:	add    eax,DWORD PTR [r10+rcx*4+0x800]
   140041b82:	cdqe   
   140041b84:	mov    ecx,DWORD PTR [r10+rax*4]
   140041b88:	jmp    0x140041b8c
   140041b8a:	xor    ecx,ecx
   140041b8c:	xor    DWORD PTR [r9],ecx
   140041b8f:	inc    esi
   140041b91:	mov    eax,DWORD PTR [r10+0x2404]
   140041b98:	add    r9,0x4
   140041b9c:	sub    eax,r8d
   140041b9f:	cmp    esi,eax
   140041ba1:	jl     0x140041b5e
   140041ba3:	mov    eax,DWORD PTR [r10+0x2404]
   140041baa:	inc    r8d
   140041bad:	add    r11,0x4
   140041bb1:	sub    rbx,0x4
   140041bb5:	cmp    r8d,eax
   140041bb8:	jl     0x140041b4b
   140041bba:	mov    rbx,QWORD PTR [rsp+0x8]
   140041bbf:	mov    rsi,QWORD PTR [rsp+0x10]
   140041bc4:	mov    rdi,QWORD PTR [rsp+0x18]
   140041bc9:	ret    
   140041bca:	int3   
   140041bcb:	int3   
   140041bcc:	rex push rbx
   140041bce:	sub    rsp,0x20
   140041bd2:	xor    eax,eax
   140041bd4:	mov    rbx,rcx
   140041bd7:	mov    BYTE PTR [rcx+0x10],al
   140041bda:	mov    QWORD PTR [rcx+0x18],rax
   140041bde:	mov    DWORD PTR [rcx+0x14],eax
   140041be1:	mov    QWORD PTR [rcx+0x20],rax
   140041be5:	mov    QWORD PTR [rcx+0x28],rax
   140041be9:	mov    QWORD PTR [rcx+0x30],rax
   140041bed:	mov    QWORD PTR [rcx+0x38],rax
   140041bf1:	call   0x1400424d0
   140041bf6:	mov    rax,rbx
   140041bf9:	add    rsp,0x20
   140041bfd:	pop    rbx
   140041bfe:	ret    
   140041bff:	int3   
   140041c00:	rex push rbx
   140041c02:	sub    rsp,0x20
   140041c06:	mov    rbx,rcx
   140041c09:	mov    rcx,QWORD PTR [rcx]
   140041c0c:	call   0x140055de8
   140041c11:	mov    rcx,QWORD PTR [rbx+0x8]
   140041c15:	call   0x140055de8
   140041c1a:	mov    rcx,QWORD PTR [rbx+0x30]
   140041c1e:	call   0x140055de8
   140041c23:	mov    rcx,QWORD PTR [rbx+0x28]
   140041c27:	call   0x140055de8
   140041c2c:	mov    rcx,QWORD PTR [rbx+0x20]
   140041c30:	add    rsp,0x20
   140041c34:	pop    rbx
   140041c35:	jmp    0x140055de8
   140041c3a:	int3   
   140041c3b:	int3   
   140041c3c:	mov    QWORD PTR [rsp+0x8],rbx
   140041c41:	push   rdi
   140041c42:	sub    rsp,0x20
   140041c46:	and    DWORD PTR [rcx+0x1c],0x0
   140041c4a:	mov    rdi,r9
   140041c4d:	test   r9,r9
   140041c50:	mov    DWORD PTR [rcx+0x14],edx
   140041c53:	mov    rbx,rcx
   140041c56:	mov    DWORD PTR [rcx+0x18],r8d
   140041c5a:	setne  al
   140041c5d:	mov    BYTE PTR [rcx+0x10],al
   140041c60:	test   al,al
   140041c62:	je     0x140041d02
   140041c68:	mov    rcx,QWORD PTR [rcx+0x20]
   140041c6c:	call   0x140055de8
   140041c71:	mov    ecx,DWORD PTR [rbx+0x18]
   140041c74:	add    ecx,DWORD PTR [rbx+0x14]
   140041c77:	call   0x140055df0
   140041c7c:	mov    QWORD PTR [rbx+0x20],rax
   140041c80:	xor    r8d,r8d
   140041c83:	mov    eax,DWORD PTR [rbx+0x18]
   140041c86:	add    eax,DWORD PTR [rbx+0x14]
   140041c89:	je     0x140041ca5
   140041c8b:	mov    al,BYTE PTR [r8+rdi*1]
   140041c8f:	mov    rcx,QWORD PTR [rbx+0x20]
   140041c93:	mov    BYTE PTR [r8+rcx*1],al
   140041c97:	inc    r8d
   140041c9a:	mov    eax,DWORD PTR [rbx+0x18]
   140041c9d:	add    eax,DWORD PTR [rbx+0x14]
   140041ca0:	cmp    r8d,eax
   140041ca3:	jb     0x140041c8b
   140041ca5:	mov    ecx,DWORD PTR [rbx+0x14]
   140041ca8:	test   ecx,ecx
   140041caa:	je     0x140041cc3
   140041cac:	mov    rax,QWORD PTR [rbx+0x20]
   140041cb0:	mov    edx,ecx
   140041cb2:	cmp    BYTE PTR [rax],0x0
   140041cb5:	jne    0x140041cba
   140041cb7:	inc    DWORD PTR [rbx+0x1c]
   140041cba:	inc    rax
   140041cbd:	sub    rdx,0x1
   140041cc1:	jne    0x140041cb2
   140041cc3:	mov    eax,DWORD PTR [rbx+0x18]
   140041cc6:	xor    edx,edx
   140041cc8:	lea    r8d,[rax+rcx*1]
   140041ccc:	cmp    ecx,r8d
   140041ccf:	jae    0x140041ce7
   140041cd1:	mov    r9,QWORD PTR [rbx+0x20]
   140041cd5:	cmp    BYTE PTR [rcx+r9*1],0x0
   140041cda:	mov    eax,ecx
   140041cdc:	je     0x140041ce0
   140041cde:	inc    edx
   140041ce0:	inc    ecx
   140041ce2:	cmp    ecx,r8d
   140041ce5:	jb     0x140041cd5
   140041ce7:	cmp    DWORD PTR [rbx+0x1c],edx
   140041cea:	ja     0x140041d96
   140041cf0:	cmp    DWORD PTR [rbx+0x1c],0x0
   140041cf4:	je     0x140041d96
   140041cfa:	test   edx,edx
   140041cfc:	je     0x140041d96
   140041d02:	mov    edx,DWORD PTR [rbx+0x18]
   140041d05:	mov    ecx,DWORD PTR [rbx+0x14]
   140041d08:	lea    eax,[rcx+rdx*1]
   140041d0b:	cmp    eax,0xffff
   140041d10:	ja     0x140041d96
   140041d16:	cmp    edx,ecx
   140041d18:	ja     0x140041d96
   140041d1a:	test   ecx,ecx
   140041d1c:	je     0x140041d96
   140041d1e:	test   edx,edx
   140041d20:	je     0x140041d96
   140041d22:	mov    rcx,QWORD PTR [rbx+0x28]
   140041d26:	call   0x140055de8
   140041d2b:	cmp    BYTE PTR [rbx+0x10],0x0
   140041d2f:	mov    eax,0x4
   140041d34:	je     0x140041d69
   140041d36:	mov    ecx,DWORD PTR [rbx+0x1c]
   140041d39:	imul   ecx,DWORD PTR [rbx+0x14]
   140041d3d:	mul    rcx
   140041d40:	mov    rcx,0xffffffffffffffff
   140041d47:	cmovo  rax,rcx
   140041d4b:	mov    rcx,rax
   140041d4e:	call   0x140055df0
   140041d53:	mov    rcx,rbx
   140041d56:	mov    QWORD PTR [rbx+0x28],rax
   140041d5a:	call   0x140042004
   140041d5f:	mov    rcx,rbx
   140041d62:	call   0x140041da4
   140041d67:	jmp    0x140041d92
   140041d69:	mov    ecx,DWORD PTR [rbx+0x18]
   140041d6c:	imul   ecx,DWORD PTR [rbx+0x14]
   140041d70:	mul    rcx
   140041d73:	mov    rcx,0xffffffffffffffff
   140041d7a:	cmovo  rax,rcx
   140041d7e:	mov    rcx,rax
   140041d81:	call   0x140055df0
   140041d86:	mov    rcx,rbx
   140041d89:	mov    QWORD PTR [rbx+0x28],rax
   140041d8d:	call   0x14004209c
   140041d92:	mov    al,0x1
   140041d94:	jmp    0x140041d98
   140041d96:	xor    al,al
   140041d98:	mov    rbx,QWORD PTR [rsp+0x30]
   140041d9d:	add    rsp,0x20
   140041da1:	pop    rdi
   140041da2:	ret    
   140041da3:	int3   
   140041da4:	mov    QWORD PTR [rsp+0x20],rbx
   140041da9:	push   rbp
   140041daa:	push   rsi
   140041dab:	push   rdi
   140041dac:	push   r12
   140041dae:	push   r13
   140041db0:	push   r14
   140041db2:	push   r15
   140041db4:	sub    rsp,0x20
   140041db8:	mov    edx,DWORD PTR [rcx+0x14]
   140041dbb:	mov    rbx,rcx
   140041dbe:	imul   edx,DWORD PTR [rcx+0x1c]
   140041dc2:	mov    eax,0x4
   140041dc7:	mov    rcx,0xffffffffffffffff
   140041dce:	mul    rdx
   140041dd1:	cmovo  rax,rcx
   140041dd5:	mov    rcx,rax
   140041dd8:	call   0x140055df0
   140041ddd:	mov    r8d,DWORD PTR [rbx+0x14]
   140041de1:	xor    edx,edx
   140041de3:	imul   r8d,DWORD PTR [rbx+0x1c]
   140041de8:	mov    rcx,rax
   140041deb:	mov    rdi,rax
   140041dee:	mov    QWORD PTR [rsp+0x70],rax
   140041df3:	shl    r8,0x2
   140041df7:	call   0x140058f40
   140041dfc:	xor    r9d,r9d
   140041dff:	mov    edx,r9d
   140041e02:	mov    ecx,r9d
   140041e05:	lea    r12d,[r9+0x1]
   140041e09:	cmp    DWORD PTR [rbx+0x1c],r9d
   140041e0d:	jbe    0x140041e3b
   140041e0f:	mov    r8,QWORD PTR [rbx+0x20]
   140041e13:	mov    eax,ecx
   140041e15:	cmp    BYTE PTR [rax+r8*1],r9b
   140041e19:	je     0x140041e24
   140041e1b:	add    ecx,r12d
   140041e1e:	cmp    BYTE PTR [rcx+r8*1],r9b
   140041e22:	jne    0x140041e1b
   140041e24:	mov    eax,DWORD PTR [rbx+0x14]
   140041e27:	imul   eax,edx
   140041e2a:	add    edx,r12d
   140041e2d:	add    eax,ecx
   140041e2f:	add    ecx,r12d
   140041e32:	mov    DWORD PTR [rdi+rax*4],r12d
   140041e36:	cmp    edx,DWORD PTR [rbx+0x1c]
   140041e39:	jb     0x140041e0f
   140041e3b:	mov    esi,r9d
   140041e3e:	mov    r10d,r9d
   140041e41:	cmp    DWORD PTR [rbx+0x14],r9d
   140041e45:	jbe    0x140041fc2
   140041e4b:	mov    rax,QWORD PTR [rbx+0x20]
   140041e4f:	mov    ecx,r10d
   140041e52:	cmp    BYTE PTR [rcx+rax*1],r9b
   140041e56:	je     0x140041e94
   140041e58:	mov    edx,DWORD PTR [rbx+0x1c]
   140041e5b:	cmp    r10d,DWORD PTR [rbx+0x14]
   140041e5f:	jae    0x140041e98
   140041e61:	mov    r8d,r9d
   140041e64:	test   edx,edx
   140041e66:	je     0x140041e87
   140041e68:	mov    edx,DWORD PTR [rbx+0x14]
   140041e6b:	mov    rax,QWORD PTR [rbx+0x28]
   140041e6f:	imul   edx,r8d
   140041e73:	add    r8d,r12d
   140041e76:	add    edx,r10d
   140041e79:	mov    ecx,DWORD PTR [rax+rdx*4]
   140041e7c:	xor    DWORD PTR [rdi+rdx*4],ecx
   140041e7f:	mov    edx,DWORD PTR [rbx+0x1c]
   140041e82:	cmp    r8d,edx
   140041e85:	jb     0x140041e68
   140041e87:	mov    rax,QWORD PTR [rbx+0x20]
   140041e8b:	add    r10d,r12d
   140041e8e:	cmp    BYTE PTR [r10+rax*1],r9b
   140041e92:	jne    0x140041e5b
   140041e94:	cmp    r10d,DWORD PTR [rbx+0x14]
   140041e98:	je     0x140041fc2
   140041e9e:	mov    ecx,DWORD PTR [rbx+0x14]
   140041ea1:	mov    rax,QWORD PTR [rbx+0x28]
   140041ea5:	imul   ecx,esi
   140041ea8:	mov    r13d,r10d
   140041eab:	lea    r15,[rax+rcx*4]
   140041eaf:	lea    r14,[rdi+rcx*4]
   140041eb3:	mov    QWORD PTR [rsp+0x68],r14
   140041eb8:	cmp    DWORD PTR [r15+r13*4],r9d
   140041ebc:	jne    0x140041ec3
   140041ebe:	mov    eax,r9d
   140041ec1:	jmp    0x140041ed9
   140041ec3:	mov    rax,QWORD PTR [rbx+0x8]
   140041ec7:	mov    ecx,0xffff
   140041ecc:	mov    edx,DWORD PTR [r15+r13*4]
   140041ed0:	sub    ecx,DWORD PTR [rax+rdx*4]
   140041ed3:	mov    rax,QWORD PTR [rbx]
   140041ed6:	mov    eax,DWORD PTR [rax+rcx*4]
   140041ed9:	mov    r11d,r9d
   140041edc:	cmp    DWORD PTR [rbx+0x14],r9d
   140041ee0:	jbe    0x140041f20
   140041ee2:	mov    ebp,eax
   140041ee4:	mov    rdx,QWORD PTR [rbx+0x8]
   140041ee8:	mov    r8d,r11d
   140041eeb:	add    r11d,r12d
   140041eee:	mov    eax,DWORD PTR [r15+r8*4]
   140041ef2:	mov    ecx,DWORD PTR [rdx+rax*4]
   140041ef5:	add    ecx,DWORD PTR [rdx+rbp*4]
   140041ef8:	mov    rax,QWORD PTR [rbx]
   140041efb:	mov    ecx,DWORD PTR [rax+rcx*4]
   140041efe:	mov    DWORD PTR [r15+r8*4],ecx
   140041f02:	mov    rdx,QWORD PTR [rbx+0x8]
   140041f06:	mov    eax,DWORD PTR [r14+r8*4]
   140041f0a:	mov    ecx,DWORD PTR [rdx+rax*4]
   140041f0d:	add    ecx,DWORD PTR [rdx+rbp*4]
   140041f10:	mov    rax,QWORD PTR [rbx]
   140041f13:	mov    ecx,DWORD PTR [rax+rcx*4]
   140041f16:	mov    DWORD PTR [r14+r8*4],ecx
   140041f1a:	cmp    r11d,DWORD PTR [rbx+0x14]
   140041f1e:	jb     0x140041ee4
   140041f20:	mov    r11d,r9d
   140041f23:	cmp    DWORD PTR [rbx+0x1c],r9d
   140041f27:	jbe    0x140041fb2
   140041f2d:	cmp    r11d,esi
   140041f30:	je     0x140041fa5
   140041f32:	mov    ecx,DWORD PTR [rbx+0x14]
   140041f35:	mov    ebp,r9d
   140041f38:	mov    rax,QWORD PTR [rbx+0x28]
   140041f3c:	imul   ecx,r11d
   140041f40:	lea    r14,[rax+rcx*4]
   140041f44:	lea    rax,[rdi+rcx*4]
   140041f48:	cmp    DWORD PTR [rbx+0x14],r9d
   140041f4c:	jbe    0x140041fa5
   140041f4e:	mov    r12d,DWORD PTR [r14+r13*4]
   140041f52:	mov    r13,rax
   140041f55:	mov    rdi,QWORD PTR [rsp+0x68]
   140041f5a:	mov    rdx,QWORD PTR [rbx+0x8]
   140041f5e:	mov    r8d,ebp
   140041f61:	inc    ebp
   140041f63:	mov    eax,DWORD PTR [r15+r8*4]
   140041f67:	mov    ecx,DWORD PTR [rdx+rax*4]
   140041f6a:	add    ecx,DWORD PTR [rdx+r12*4]
   140041f6e:	mov    rax,QWORD PTR [rbx]
   140041f71:	mov    ecx,DWORD PTR [rax+rcx*4]
   140041f74:	xor    DWORD PTR [r14+r8*4],ecx
   140041f78:	mov    rdx,QWORD PTR [rbx+0x8]
   140041f7c:	mov    eax,DWORD PTR [rdi+r8*4]
   140041f80:	mov    ecx,DWORD PTR [rdx+rax*4]
   140041f83:	add    ecx,DWORD PTR [rdx+r12*4]
   140041f87:	mov    rax,QWORD PTR [rbx]
   140041f8a:	mov    ecx,DWORD PTR [rax+rcx*4]
   140041f8d:	xor    DWORD PTR [r13+r8*4+0x0],ecx
   140041f92:	cmp    ebp,DWORD PTR [rbx+0x14]
   140041f95:	jb     0x140041f5a
   140041f97:	mov    rdi,QWORD PTR [rsp+0x70]
   140041f9c:	mov    r12d,0x1
   140041fa2:	mov    r13d,r10d
   140041fa5:	add    r11d,r12d
   140041fa8:	cmp    r11d,DWORD PTR [rbx+0x1c]
   140041fac:	jb     0x140041f2d
   140041fb2:	add    esi,r12d
   140041fb5:	add    r10d,r12d
   140041fb8:	cmp    r10d,DWORD PTR [rbx+0x14]
   140041fbc:	jb     0x140041e4b
   140041fc2:	mov    eax,DWORD PTR [rbx+0x14]
   140041fc5:	imul   eax,DWORD PTR [rbx+0x1c]
   140041fc9:	test   eax,eax
   140041fcb:	je     0x140041fe8
   140041fcd:	mov    eax,DWORD PTR [rdi+r9*4]
   140041fd1:	mov    rcx,QWORD PTR [rbx+0x28]
   140041fd5:	mov    DWORD PTR [rcx+r9*4],eax
   140041fd9:	add    r9d,r12d
   140041fdc:	mov    eax,DWORD PTR [rbx+0x14]
   140041fdf:	imul   eax,DWORD PTR [rbx+0x1c]
   140041fe3:	cmp    r9d,eax
   140041fe6:	jb     0x140041fcd
   140041fe8:	mov    rcx,rdi
   140041feb:	mov    rbx,QWORD PTR [rsp+0x78]
   140041ff0:	add    rsp,0x20
   140041ff4:	pop    r15
   140041ff6:	pop    r14
   140041ff8:	pop    r13
   140041ffa:	pop    r12
   140041ffc:	pop    rdi
   140041ffd:	pop    rsi
   140041ffe:	pop    rbp
   140041fff:	jmp    0x140055de8
   140042004:	mov    QWORD PTR [rsp+0x8],rbx
   140042009:	mov    QWORD PTR [rsp+0x10],rdi
   14004200e:	mov    r8d,DWORD PTR [rcx+0x14]
   140042012:	xor    r11d,r11d
   140042015:	xor    edi,edi
   140042017:	mov    r10,rcx
   14004201a:	mov    r9d,r8d
   14004201d:	test   r8d,r8d
   140042020:	je     0x140042091
   140042022:	mov    rcx,QWORD PTR [r10+0x20]
   140042026:	cmp    BYTE PTR [r11+rcx*1],0x0
   14004202b:	jne    0x140042085
   14004202d:	mov    eax,r9d
   140042030:	cmp    BYTE PTR [rax+rcx*1],0x0
   140042034:	jne    0x140042040
   140042036:	inc    r9d
   140042039:	cmp    BYTE PTR [r9+rcx*1],0x0
   14004203e:	je     0x140042036
   140042040:	xor    ebx,ebx
   140042042:	test   r8d,r8d
   140042045:	je     0x140042080
   140042047:	mov    eax,ebx
   140042049:	xor    eax,r9d
   14004204c:	jne    0x140042052
   14004204e:	xor    edx,edx
   140042050:	jmp    0x140042066
   140042052:	mov    edx,eax
   140042054:	mov    ecx,0xffff
   140042059:	mov    rax,QWORD PTR [r10+0x8]
   14004205d:	sub    ecx,DWORD PTR [rax+rdx*4]
   140042060:	mov    rax,QWORD PTR [r10]
   140042063:	mov    edx,DWORD PTR [rax+rcx*4]
   140042066:	mov    rax,QWORD PTR [r10+0x28]
   14004206a:	imul   r8d,edi
   14004206e:	add    r8d,ebx
   140042071:	inc    ebx
   140042073:	mov    DWORD PTR [rax+r8*4],edx
   140042077:	mov    r8d,DWORD PTR [r10+0x14]
   14004207b:	cmp    ebx,r8d
   14004207e:	jb     0x140042047
   140042080:	inc    edi
   140042082:	inc    r9d
   140042085:	mov    r8d,DWORD PTR [r10+0x14]
   140042089:	inc    r11d
   14004208c:	cmp    r11d,r8d
   14004208f:	jb     0x140042022
   140042091:	mov    rbx,QWORD PTR [rsp+0x8]
   140042096:	mov    rdi,QWORD PTR [rsp+0x10]
   14004209b:	ret    
   14004209c:	xor    r10d,r10d
   14004209f:	mov    r8,rcx
   1400420a2:	cmp    DWORD PTR [rcx+0x18],r10d
   1400420a6:	jbe    0x1400420f9
   1400420a8:	mov    r9d,DWORD PTR [rcx+0x14]
   1400420ac:	xor    r11d,r11d
   1400420af:	test   r9d,r9d
   1400420b2:	je     0x1400420f0
   1400420b4:	lea    eax,[r9+r10*1]
   1400420b8:	xor    eax,r11d
   1400420bb:	jne    0x1400420c1
   1400420bd:	xor    edx,edx
   1400420bf:	jmp    0x1400420d5
   1400420c1:	mov    edx,eax
   1400420c3:	mov    ecx,0xffff
   1400420c8:	mov    rax,QWORD PTR [r8+0x8]
   1400420cc:	sub    ecx,DWORD PTR [rax+rdx*4]
   1400420cf:	mov    rax,QWORD PTR [r8]
   1400420d2:	mov    edx,DWORD PTR [rax+rcx*4]
   1400420d5:	mov    rax,QWORD PTR [r8+0x28]
   1400420d9:	imul   r9d,r10d
   1400420dd:	add    r9d,r11d
   1400420e0:	inc    r11d
   1400420e3:	mov    DWORD PTR [rax+r9*4],edx
   1400420e7:	mov    r9d,DWORD PTR [r8+0x14]
   1400420eb:	cmp    r11d,r9d
   1400420ee:	jb     0x1400420b4
   1400420f0:	inc    r10d
   1400420f3:	cmp    r10d,DWORD PTR [r8+0x18]
   1400420f7:	jb     0x1400420ac
   1400420f9:	ret    
   1400420fa:	int3   
   1400420fb:	int3   
   1400420fc:	mov    rax,rsp
   1400420ff:	mov    QWORD PTR [rax+0x8],rbx
   140042103:	mov    QWORD PTR [rax+0x10],rsi
   140042107:	mov    QWORD PTR [rax+0x18],rdi
   14004210b:	mov    QWORD PTR [rax+0x20],r12
   14004210f:	push   rbp
   140042110:	push   r13
   140042112:	push   r14
   140042114:	lea    rbp,[rax-0x4f]
   140042118:	sub    rsp,0xb0
   14004211f:	mov    r11,QWORD PTR [rbp+0x77]
   140042123:	mov    rsi,r9
   140042126:	movaps XMMWORD PTR [rax-0x28],xmm6
   14004212a:	mov    r10,rcx
   14004212d:	movaps XMMWORD PTR [rax-0x38],xmm7
   140042131:	movaps XMMWORD PTR [rax-0x48],xmm8
   140042136:	mov    al,r9b
   140042139:	or     al,r11b
   14004213c:	test   al,0xf
   14004213e:	jne    0x140042370
   140042144:	cmp    DWORD PTR [rip+0x5c999],0x3        # 0x14009eae4
   14004214b:	jl     0x140042370
   140042151:	mov    ecx,DWORD PTR [rcx+0x14]
   140042154:	mov    rax,QWORD PTR [r10+0x28]
   140042158:	mov    r14,QWORD PTR [r10+0x8]
   14004215c:	mov    r9,QWORD PTR [r10]
   14004215f:	imul   ecx,r8d
   140042163:	add    ecx,edx
   140042165:	xor    edi,edi
   140042167:	mov    ebx,edi
   140042169:	mov    r8d,edi
   14004216c:	mov    r13d,DWORD PTR [rax+rcx*4]
   140042170:	lea    r12d,[rdi+0x10]
   140042174:	mov    eax,DWORD PTR [r14+r8*4]
   140042178:	add    eax,DWORD PTR [r14+r13*4]
   14004217c:	mov    ecx,eax
   14004217e:	mov    al,BYTE PTR [r9+rax*4]
   140042182:	mov    BYTE PTR [rbp+r8*1-0x69],al
   140042187:	mov    eax,DWORD PTR [r9+rcx*4]
   14004218b:	shr    eax,0x8
   14004218e:	mov    BYTE PTR [rbp+r8*1-0x29],al
   140042193:	mov    eax,ebx
   140042195:	shl    eax,0x4
   140042198:	mov    ecx,DWORD PTR [r14+rax*4]
   14004219c:	add    ecx,DWORD PTR [r14+r13*4]
   1400421a0:	mov    al,BYTE PTR [r9+rcx*4]
   1400421a4:	mov    BYTE PTR [rbp+r8*1-0x79],al
   1400421a9:	mov    eax,DWORD PTR [r9+rcx*4]
   1400421ad:	shr    eax,0x8
   1400421b0:	mov    BYTE PTR [rbp+r8*1-0x39],al
   1400421b5:	mov    eax,ebx
   1400421b7:	shl    eax,0x8
   1400421ba:	mov    ecx,DWORD PTR [r14+rax*4]
   1400421be:	add    ecx,DWORD PTR [r14+r13*4]
   1400421c2:	mov    al,BYTE PTR [r9+rcx*4]
   1400421c6:	mov    BYTE PTR [rbp+r8*1-0x59],al
   1400421cb:	mov    eax,DWORD PTR [r9+rcx*4]
   1400421cf:	shr    eax,0x8
   1400421d2:	mov    BYTE PTR [rbp+r8*1-0x19],al
   1400421d7:	mov    eax,ebx
   1400421d9:	shl    eax,0xc
   1400421dc:	inc    ebx
   1400421de:	mov    ecx,DWORD PTR [r14+rax*4]
   1400421e2:	add    ecx,DWORD PTR [r14+r13*4]
   1400421e6:	mov    al,BYTE PTR [r9+rcx*4]
   1400421ea:	mov    BYTE PTR [rbp+r8*1-0x49],al
   1400421ef:	mov    eax,DWORD PTR [r9+rcx*4]
   1400421f3:	shr    eax,0x8
   1400421f6:	mov    BYTE PTR [rbp+r8*1-0x9],al
   1400421fb:	inc    r8
   1400421fe:	cmp    ebx,r12d
   140042201:	jb     0x140042174
   140042207:	mov    r9,QWORD PTR [rbp+0x7f]
   14004220b:	movdqa xmm8,XMMWORD PTR [rip+0x2e56c]        # 0x140070780
   140042214:	psllw  xmm8,0x4
   14004221a:	cmp    r9,0x20
   14004221e:	jb     0x140042330
   140042224:	mov    rcx,rsi
   140042227:	lea    rdx,[r11+0x10]
   14004222b:	sub    rcx,r11
   14004222e:	sub    r12,r11
   140042231:	movdqa xmm7,XMMWORD PTR [rdx+rcx*1-0x10]
   140042237:	add    rdi,0x20
   14004223b:	movdqa xmm0,XMMWORD PTR [rcx+rdx*1]
   140042240:	movdqa xmm5,XMMWORD PTR [rip+0x2e528]        # 0x140070770
   140042248:	pand   xmm5,XMMWORD PTR [rdx+rcx*1-0x10]
   14004224e:	movdqa xmm6,XMMWORD PTR [rbp-0x79]
   140042253:	movdqa xmm1,XMMWORD PTR [rbp-0x59]
   140042258:	movdqa xmm2,XMMWORD PTR [rbp-0x39]
   14004225d:	psrlw  xmm0,0x8
   140042262:	psrlw  xmm7,0x8
   140042267:	packuswb xmm7,xmm0
   14004226b:	movdqa xmm0,XMMWORD PTR [rip+0x2e4fd]        # 0x140070770
   140042273:	movdqa xmm3,xmm7
   140042277:	pand   xmm0,XMMWORD PTR [rcx+rdx*1]
   14004227c:	pand   xmm7,xmm8
   140042281:	pand   xmm3,XMMWORD PTR [rip+0x2e4f7]        # 0x140070780
   140042289:	packuswb xmm5,xmm0
   14004228d:	movdqa xmm0,XMMWORD PTR [rbp-0x69]
   140042292:	movdqa xmm4,xmm5
   140042296:	pand   xmm4,XMMWORD PTR [rip+0x2e4e2]        # 0x140070780
   14004229e:	pand   xmm5,xmm8
   1400422a3:	pshufb xmm0,xmm4
   1400422a8:	pshufb xmm1,xmm3
   1400422ad:	psrlw  xmm5,0x4
   1400422b2:	pshufb xmm6,xmm5
   1400422b7:	pshufb xmm2,xmm5
   1400422bc:	pxor   xmm6,xmm0
   1400422c0:	psrlw  xmm7,0x4
   1400422c5:	movdqa xmm0,XMMWORD PTR [rbp-0x49]
   1400422ca:	pxor   xmm6,xmm1
   1400422ce:	movdqa xmm1,XMMWORD PTR [rbp-0x19]
   1400422d3:	pshufb xmm0,xmm7
   1400422d8:	pshufb xmm1,xmm3
   1400422dd:	pxor   xmm6,xmm0
   1400422e1:	movdqa xmm0,XMMWORD PTR [rbp-0x29]
   1400422e6:	pshufb xmm0,xmm4
   1400422eb:	pxor   xmm2,xmm0
   1400422ef:	movdqa xmm0,XMMWORD PTR [rbp-0x9]
   1400422f4:	pshufb xmm0,xmm7
   1400422f9:	pxor   xmm2,xmm1
   1400422fd:	pxor   xmm2,xmm0
   140042301:	movdqa xmm0,xmm6
   140042305:	punpcklbw xmm0,xmm2
   140042309:	pxor   xmm0,XMMWORD PTR [rdx-0x10]
   14004230e:	punpckhbw xmm6,xmm2
   140042312:	pxor   xmm6,XMMWORD PTR [rdx]
   140042316:	movdqa XMMWORD PTR [rdx-0x10],xmm0
   14004231b:	movdqa XMMWORD PTR [rdx],xmm6
   14004231f:	lea    rdx,[rdx+0x20]
   140042323:	lea    rax,[rdx+r12*1]
   140042327:	cmp    rax,r9
   14004232a:	jbe    0x140042231
   140042330:	cmp    rdi,r9
   140042333:	jae    0x14004236c
   140042335:	sub    r9,rdi
   140042338:	lea    rbx,[rdi+r11*1]
   14004233c:	dec    r9
   14004233f:	sub    rsi,r11
   140042342:	shr    r9,1
   140042345:	inc    r9
   140042348:	movzx  ecx,WORD PTR [rsi+rbx*1]
   14004234c:	mov    r8,QWORD PTR [r10+0x8]
   140042350:	mov    edx,DWORD PTR [r8+rcx*4]
   140042354:	add    edx,DWORD PTR [r8+r13*4]
   140042358:	mov    rcx,QWORD PTR [r10]
   14004235b:	movzx  edx,WORD PTR [rcx+rdx*4]
   14004235f:	xor    WORD PTR [rbx],dx
   140042362:	lea    rbx,[rbx+0x2]
   140042366:	sub    r9,0x1
   14004236a:	jne    0x140042348
   14004236c:	mov    al,0x1
   14004236e:	jmp    0x140042372
   140042370:	xor    al,al
   140042372:	lea    r11,[rsp+0xb0]
   14004237a:	mov    rbx,QWORD PTR [r11+0x20]
   14004237e:	mov    rsi,QWORD PTR [r11+0x28]
   140042382:	mov    rdi,QWORD PTR [r11+0x30]
   140042386:	mov    r12,QWORD PTR [r11+0x38]
   14004238a:	movaps xmm6,XMMWORD PTR [r11-0x10]
   14004238f:	movaps xmm7,XMMWORD PTR [r11-0x20]
   140042394:	movaps xmm8,XMMWORD PTR [r11-0x30]
   140042399:	mov    rsp,r11
   14004239c:	pop    r14
   14004239e:	pop    r13
   1400423a0:	pop    rbp
   1400423a1:	ret    
   1400423a2:	int3   
   1400423a3:	int3   
   1400423a4:	mov    rax,rsp
   1400423a7:	mov    QWORD PTR [rax+0x8],rbx
   1400423ab:	mov    QWORD PTR [rax+0x10],rbp
   1400423af:	mov    QWORD PTR [rax+0x18],rsi
   1400423b3:	mov    QWORD PTR [rax+0x20],rdi
   1400423b7:	push   r12
   1400423b9:	push   r14
   1400423bb:	push   r15
   1400423bd:	sub    rsp,0x30
   1400423c1:	mov    rsi,QWORD PTR [rsp+0x78]
   1400423c6:	xor    ebx,ebx
   1400423c8:	mov    rbp,QWORD PTR [rsp+0x70]
   1400423cd:	mov    r12,r9
   1400423d0:	mov    r14d,r8d
   1400423d3:	mov    r15d,edx
   1400423d6:	mov    rdi,rcx
   1400423d9:	test   edx,edx
   1400423db:	jne    0x1400423e8
   1400423dd:	mov    r8,rsi
   1400423e0:	mov    rcx,rbp
   1400423e3:	call   0x140058f40
   1400423e8:	mov    QWORD PTR [rsp+0x28],rsi
   1400423ed:	mov    r9,r12
   1400423f0:	mov    r8d,r14d
   1400423f3:	mov    QWORD PTR [rsp+0x20],rbp
   1400423f8:	mov    edx,r15d
   1400423fb:	mov    rcx,rdi
   1400423fe:	call   0x1400420fc
   140042403:	test   al,al
   140042405:	jne    0x1400424b0
   14004240b:	test   r14d,r14d
   14004240e:	jne    0x140042466
   140042410:	cmp    QWORD PTR [rdi+0x38],rsi
   140042414:	je     0x140042441
   140042416:	mov    rcx,QWORD PTR [rdi+0x30]
   14004241a:	call   0x140055de8
   14004241f:	mov    rcx,0xffffffffffffffff
   140042426:	lea    eax,[r14+0x4]
   14004242a:	mul    rsi
   14004242d:	cmovo  rax,rcx
   140042431:	mov    rcx,rax
   140042434:	call   0x140055df0
   140042439:	mov    QWORD PTR [rdi+0x30],rax
   14004243d:	mov    QWORD PTR [rdi+0x38],rsi
   140042441:	mov    r8,rbx
   140042444:	test   rsi,rsi
   140042447:	je     0x140042466
   140042449:	movzx  edx,WORD PTR [r8+r12*1]
   14004244e:	mov    rax,QWORD PTR [rdi+0x8]
   140042452:	mov    rcx,QWORD PTR [rdi+0x30]
   140042456:	mov    eax,DWORD PTR [rax+rdx*4]
   140042459:	mov    DWORD PTR [rcx+r8*4],eax
   14004245d:	add    r8,0x2
   140042461:	cmp    r8,rsi
   140042464:	jb     0x140042449
   140042466:	mov    ecx,DWORD PTR [rdi+0x14]
   140042469:	mov    rax,QWORD PTR [rdi+0x28]
   14004246d:	imul   ecx,r14d
   140042471:	add    ecx,r15d
   140042474:	mov    edx,DWORD PTR [rax+rcx*4]
   140042477:	mov    rax,QWORD PTR [rdi+0x8]
   14004247b:	mov    r8d,DWORD PTR [rax+rdx*4]
   14004247f:	test   rsi,rsi
   140042482:	je     0x1400424b0
   140042484:	dec    rsi
   140042487:	shr    rsi,1
   14004248a:	inc    rsi
   14004248d:	mov    rax,QWORD PTR [rdi+0x30]
   140042491:	mov    ecx,DWORD PTR [rbx+rax*1]
   140042494:	lea    rbx,[rbx+0x8]
   140042498:	mov    rax,QWORD PTR [rdi]
   14004249b:	add    ecx,r8d
   14004249e:	movzx  ecx,WORD PTR [rax+rcx*4]
   1400424a2:	xor    WORD PTR [rbp+0x0],cx
   1400424a6:	lea    rbp,[rbp+0x2]
   1400424aa:	sub    rsi,0x1
   1400424ae:	jne    0x14004248d
   1400424b0:	mov    rbx,QWORD PTR [rsp+0x50]
   1400424b5:	mov    rbp,QWORD PTR [rsp+0x58]
   1400424ba:	mov    rsi,QWORD PTR [rsp+0x60]
   1400424bf:	mov    rdi,QWORD PTR [rsp+0x68]
   1400424c4:	add    rsp,0x30
   1400424c8:	pop    r15
   1400424ca:	pop    r14
   1400424cc:	pop    r12
   1400424ce:	ret    
   1400424cf:	int3   
   1400424d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400424d5:	push   rdi
   1400424d6:	sub    rsp,0x20
   1400424da:	mov    rdi,rcx
   1400424dd:	mov    ecx,0xffff4
   1400424e2:	call   0x140055df0
   1400424e7:	mov    ecx,0x40000
   1400424ec:	mov    QWORD PTR [rdi],rax
   1400424ef:	call   0x140055df0
   1400424f4:	xor    r8d,r8d
   1400424f7:	mov    QWORD PTR [rdi+0x8],rax
   1400424fb:	xor    r9d,r9d
   1400424fe:	mov    edx,0x1
   140042503:	mov    r10d,0x3fffc
   140042509:	mov    r11d,0xffff
   14004250f:	mov    rax,QWORD PTR [rdi+0x8]
   140042513:	mov    ecx,edx
   140042515:	mov    DWORD PTR [rax+rcx*4],r8d
   140042519:	mov    rax,QWORD PTR [rdi]
   14004251c:	mov    DWORD PTR [r9+rax*1],edx
   140042520:	mov    rax,QWORD PTR [rdi]
   140042523:	mov    DWORD PTR [r10+rax*1],edx
   140042527:	add    edx,edx
   140042529:	cmp    edx,r11d
   14004252c:	jbe    0x140042534
   14004252e:	xor    edx,0x1100b
   140042534:	inc    r8d
   140042537:	add    r10,0x4
   14004253b:	add    r9,0x4
   14004253f:	cmp    r8d,r11d
   140042542:	jb     0x14004250f
   140042544:	mov    rax,QWORD PTR [rdi+0x8]
   140042548:	mov    ebx,0x1fffe
   14004254d:	mov    DWORD PTR [rax],ebx
   14004254f:	mov    rax,QWORD PTR [rdi]
   140042552:	lea    rcx,[rax+0x7fff8]
   140042559:	add    rax,0xffff0
   14004255f:	cmp    rcx,rdi
   140042562:	ja     0x140042569
   140042564:	cmp    rax,rdi
   140042567:	jae    0x14004257b
   140042569:	xor    edx,edx
   14004256b:	mov    r8d,0x7fff0
   140042571:	mov    ebx,0x3fffa
   140042576:	call   0x140058f40
   14004257b:	mov    rax,QWORD PTR [rdi]
   14004257e:	mov    ecx,ebx
   140042580:	inc    ebx
   140042582:	and    DWORD PTR [rax+rcx*4],0x0
   140042586:	cmp    ebx,0x3fffc
   14004258c:	jbe    0x14004257b
   14004258e:	mov    rbx,QWORD PTR [rsp+0x30]
   140042593:	add    rsp,0x20
   140042597:	pop    rdi
   140042598:	ret    
   140042599:	int3   
   14004259a:	int3   
   14004259b:	int3   
   14004259c:	mov    rax,rsp
   14004259f:	mov    QWORD PTR [rax+0x8],rcx
   1400425a3:	push   rdi
   1400425a4:	sub    rsp,0x30
   1400425a8:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   1400425b0:	mov    QWORD PTR [rax+0x10],rbx
   1400425b4:	mov    QWORD PTR [rax+0x18],rbp
   1400425b8:	mov    QWORD PTR [rax+0x20],rsi
   1400425bc:	mov    sil,r9b
   1400425bf:	mov    edi,r8d
   1400425c2:	mov    rbx,rdx
   1400425c5:	mov    rbp,rcx
   1400425c8:	add    rcx,0x4028
   1400425cf:	call   0x140046194
   1400425d4:	nop
   1400425d5:	lea    rcx,[rbp+0x40e0]
   1400425dc:	call   0x140046194
   1400425e1:	mov    QWORD PTR [rbp+0x2008],rbx
   1400425e8:	mov    DWORD PTR [rbp+0x2010],edi
   1400425ee:	mov    BYTE PTR [rbp+0x2014],sil
   1400425f5:	mov    eax,DWORD PTR [rsp+0x60]
   1400425f9:	mov    DWORD PTR [rbp+0x2018],eax
   1400425ff:	xor    ebx,ebx
   140042601:	mov    BYTE PTR [rbp+0x2020],bl
   140042607:	mov    BYTE PTR [rbp+0x41a8],bl
   14004260d:	mov    DWORD PTR [rbp+0x2004],ebx
   140042613:	mov    WORD PTR [rbp+0x2022],bx
   14004261a:	xor    edx,edx
   14004261c:	mov    r8d,0x2000
   140042622:	mov    rcx,rbp
   140042625:	call   0x140058f40
   14004262a:	mov    DWORD PTR [rbp+0x2000],ebx
   140042630:	mov    DWORD PTR [rbp+0x201c],ebx
   140042636:	mov    WORD PTR [rbp+0x41b8],bx
   14004263d:	mov    QWORD PTR [rbp+0x51b8],rbx
   140042644:	mov    QWORD PTR [rbp+0x4198],rbx
   14004264b:	mov    QWORD PTR [rbp+0x41a0],rbx
   140042652:	mov    rax,rbp
   140042655:	mov    rbx,QWORD PTR [rsp+0x48]
   14004265a:	mov    rbp,QWORD PTR [rsp+0x50]
   14004265f:	mov    rsi,QWORD PTR [rsp+0x58]
   140042664:	add    rsp,0x30
   140042668:	pop    rdi
   140042669:	ret    
   14004266a:	int3   
   14004266b:	int3   
   14004266c:	mov    QWORD PTR [rsp+0x8],rbx
   140042671:	mov    QWORD PTR [rsp+0x10],rbp
   140042676:	mov    QWORD PTR [rsp+0x18],rsi
   14004267b:	push   rdi
   14004267c:	sub    rsp,0x20
   140042680:	movsxd rbx,DWORD PTR [rcx+0x2000]
   140042687:	mov    rdi,rcx
   14004268a:	test   ebx,ebx
   14004268c:	js     0x1400426b8
   14004268e:	lea    rsi,[rcx+rbx*8]
   140042692:	mov    rbp,QWORD PTR [rsi]
   140042695:	test   rbp,rbp
   140042698:	je     0x1400426af
   14004269a:	mov    rcx,rbp
   14004269d:	call   0x140023264
   1400426a2:	mov    edx,0x1010
   1400426a7:	mov    rcx,rbp
   1400426aa:	call   0x140055de8
   1400426af:	sub    rsi,0x8
   1400426b3:	sub    ebx,0x1
   1400426b6:	jns    0x140042692
   1400426b8:	mov    rcx,QWORD PTR [rdi+0x40e0]
   1400426bf:	test   rcx,rcx
   1400426c2:	je     0x1400426c9
   1400426c4:	call   0x14005a938
   1400426c9:	mov    rcx,QWORD PTR [rdi+0x4028]
   1400426d0:	test   rcx,rcx
   1400426d3:	je     0x1400426da
   1400426d5:	call   0x14005a938
   1400426da:	mov    rbx,QWORD PTR [rsp+0x30]
   1400426df:	mov    rbp,QWORD PTR [rsp+0x38]
   1400426e4:	mov    rsi,QWORD PTR [rsp+0x40]
   1400426e9:	add    rsp,0x20
   1400426ed:	pop    rdi
   1400426ee:	ret    
   1400426ef:	int3   
   1400426f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400426f5:	mov    QWORD PTR [rsp+0x10],rsi
   1400426fa:	push   rdi
   1400426fb:	sub    rsp,0x20
   1400426ff:	add    QWORD PTR [rcx+0x8],rdx
   140042703:	mov    rbx,rcx
   140042706:	mov    rax,QWORD PTR [rcx+0x8]
   14004270a:	cmp    rax,QWORD PTR [rcx+0x10]
   14004270e:	jbe    0x140042782
   140042710:	mov    r8,QWORD PTR [rcx+0x18]
   140042714:	test   r8,r8
   140042717:	je     0x14004273d
   140042719:	cmp    rax,r8
   14004271c:	jbe    0x14004273d
   14004271e:	lea    rdx,[rip+0x2e0db]        # 0x140070800
   140042725:	lea    rcx,[rip+0x52134]        # 0x140094860
   14004272c:	call   0x14001bc8c
   140042731:	lea    rcx,[rip+0x52128]        # 0x140094860
   140042738:	call   0x14001bd24
   14004273d:	mov    rdx,QWORD PTR [rbx+0x10]
   140042741:	mov    rcx,QWORD PTR [rbx]
   140042744:	mov    rax,rdx
   140042747:	shr    rax,0x2
   14004274b:	lea    rdi,[rdx+0x20]
   14004274f:	add    rdi,rax
   140042752:	cmp    QWORD PTR [rbx+0x8],rdi
   140042756:	cmova  rdi,QWORD PTR [rbx+0x8]
   14004275b:	mov    rdx,rdi
   14004275e:	shl    rdx,0x2
   140042762:	call   0x14005a940
   140042767:	mov    rsi,rax
   14004276a:	test   rax,rax
   14004276d:	jne    0x14004277b
   14004276f:	lea    rcx,[rip+0x520ea]        # 0x140094860
   140042776:	call   0x14001bd24
   14004277b:	mov    QWORD PTR [rbx],rsi
   14004277e:	mov    QWORD PTR [rbx+0x10],rdi
   140042782:	mov    rbx,QWORD PTR [rsp+0x30]
   140042787:	mov    rsi,QWORD PTR [rsp+0x38]
   14004278c:	add    rsp,0x20
   140042790:	pop    rdi
   140042791:	ret    
   140042792:	int3   
   140042793:	int3   
   140042794:	rex push rbp
   140042796:	push   r12
   140042798:	push   r13
   14004279a:	push   r14
   14004279c:	push   r15
   14004279e:	lea    rbp,[rsp-0x2fa0]
   1400427a6:	mov    eax,0x30a0
   1400427ab:	call   0x140055f20
   1400427b0:	sub    rsp,rax
   1400427b3:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400427bc:	mov    QWORD PTR [rsp+0x30d8],rbx
   1400427c4:	mov    QWORD PTR [rsp+0x30e0],rsi
   1400427cc:	mov    QWORD PTR [rsp+0x30e8],rdi
   1400427d4:	mov    rax,QWORD PTR [rip+0x3f705]        # 0x140081ee0
   1400427db:	xor    rax,rsp
   1400427de:	mov    QWORD PTR [rbp+0x2f90],rax
   1400427e5:	mov    r15,rcx
   1400427e8:	xor    r13d,r13d
   1400427eb:	mov    r14b,r13b
   1400427ee:	mov    r12d,r13d
   1400427f1:	mov    esi,r13d
   1400427f4:	lea    rdi,[rcx+0x2022]
   1400427fb:	cmp    WORD PTR [rdi],r13w
   1400427ff:	je     0x14004283b
   140042801:	mov    rax,rdi
   140042804:	mov    rbx,rdi
   140042807:	cmp    WORD PTR [rax],0x3f
   14004280b:	je     0x140042813
   14004280d:	cmp    WORD PTR [rax],0x2a
   140042811:	jne    0x140042816
   140042813:	mov    r14b,0x1
   140042816:	test   r14b,r14b
   140042819:	je     0x140042827
   14004281b:	movzx  ecx,WORD PTR [rax]
   14004281e:	call   0x140032274
   140042823:	test   al,al
   140042825:	jne    0x140042838
   140042827:	inc    esi
   140042829:	add    rbx,0x2
   14004282d:	mov    rax,rbx
   140042830:	cmp    WORD PTR [rbx],r13w
   140042834:	je     0x14004283b
   140042836:	jmp    0x140042807
   140042838:	mov    r12d,esi
   14004283b:	mov    r14d,0x800
   140042841:	mov    r8d,r14d
   140042844:	mov    rdx,rdi
   140042847:	lea    rcx,[rbp+0x1f90]
   14004284e:	call   0x140046158
   140042853:	mov    esi,r12d
   140042856:	lea    rax,[rsi+rsi*1]
   14004285a:	cmp    rax,0x1000
   140042860:	jae    0x140042977
   140042866:	mov    WORD PTR [rbp+rax*1+0x1f90],r13w
   14004286f:	lea    rbx,[r15+0x4028]
   140042876:	mov    rcx,rbx
   140042879:	call   0x140046378
   14004287e:	lea    rcx,[rbp+0xf80]
   140042885:	call   0x14002324c
   14004288a:	nop
   14004288b:	lea    rdx,[rbp+0x1f90]
   140042892:	lea    rcx,[rbp+0xf80]
   140042899:	call   0x1400233f4
   14004289e:	mov    QWORD PTR [rbp+0xf40],r13
   1400428a5:	mov    QWORD PTR [rbp+0xf48],r13
   1400428ac:	mov    QWORD PTR [rbp+0xf50],r13
   1400428b3:	jmp    0x140042923
   1400428b5:	cmp    BYTE PTR [rbp+0xf3c],r13b
   1400428bc:	je     0x140042923
   1400428be:	lea    rdx,[r15+0x2022]
   1400428c5:	lea    rdx,[rdx+rsi*2]
   1400428c9:	mov    r8,r14
   1400428cc:	lea    rcx,[rsp+0x30]
   1400428d1:	call   0x140046120
   1400428d6:	lea    rcx,[rsp+0x30]
   1400428db:	call   0x1400327bc
   1400428e0:	movzx  ecx,WORD PTR [rax]
   1400428e3:	cmp    cx,WORD PTR [rip+0x2dea6]        # 0x140070790
   1400428ea:	jne    0x1400428f9
   1400428ec:	movzx  ecx,WORD PTR [rax+0x2]
   1400428f0:	cmp    cx,WORD PTR [rip+0x2de9b]        # 0x140070792
   1400428f7:	je     0x14004290c
   1400428f9:	lea    rdx,[rip+0x2de98]        # 0x140070798
   140042900:	mov    rcx,rax
   140042903:	call   0x14005d4e8
   140042908:	test   eax,eax
   14004290a:	jne    0x140042916
   14004290c:	lea    rcx,[rsp+0x30]
   140042911:	call   0x140032810
   140042916:	lea    rdx,[rsp+0x30]
   14004291b:	mov    rcx,rbx
   14004291e:	call   0x1400461bc
   140042923:	xor    r8d,r8d
   140042926:	lea    rdx,[rsp+0x30]
   14004292b:	lea    rcx,[rbp+0xf80]
   140042932:	call   0x1400232f8
   140042937:	test   al,al
   140042939:	jne    0x1400428b5
   14004293f:	cmp    DWORD PTR [r15+0x4050],r13d
   140042946:	jne    0x140042958
   140042948:	lea    rcx,[rbp+0xf80]
   14004294f:	call   0x140023264
   140042954:	xor    al,al
   140042956:	jmp    0x14004297d
   140042958:	mov    r8,r14
   14004295b:	mov    rdx,rdi
   14004295e:	mov    rcx,rbx
   140042961:	call   0x140046290
   140042966:	nop
   140042967:	lea    rcx,[rbp+0xf80]
   14004296e:	call   0x140023264
   140042973:	mov    al,0x1
   140042975:	jmp    0x14004297d
   140042977:	call   0x1400560e8
   14004297c:	int3   
   14004297d:	mov    rcx,QWORD PTR [rbp+0x2f90]
   140042984:	xor    rcx,rsp
   140042987:	call   0x140055f90
   14004298c:	lea    r11,[rsp+0x30a0]
   140042994:	mov    rbx,QWORD PTR [r11+0x38]
   140042998:	mov    rsi,QWORD PTR [r11+0x40]
   14004299c:	mov    rdi,QWORD PTR [r11+0x48]
   1400429a0:	mov    rsp,r11
   1400429a3:	pop    r15
   1400429a5:	pop    r14
   1400429a7:	pop    r13
   1400429a9:	pop    r12
   1400429ab:	pop    rbp
   1400429ac:	ret    
   1400429ad:	int3   
   1400429ae:	int3   
   1400429af:	int3   
   1400429b0:	rex push rbp
   1400429b2:	push   rdi
   1400429b3:	push   r13
   1400429b5:	push   r14
   1400429b7:	push   r15
   1400429b9:	lea    rbp,[rsp-0x1f60]
   1400429c1:	mov    eax,0x2060
   1400429c6:	call   0x140055f20
   1400429cb:	sub    rsp,rax
   1400429ce:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   1400429d7:	mov    QWORD PTR [rsp+0x20a0],rbx
   1400429df:	mov    QWORD PTR [rsp+0x20a8],rsi
   1400429e7:	mov    rax,QWORD PTR [rip+0x3f4f2]        # 0x140081ee0
   1400429ee:	xor    rax,rsp
   1400429f1:	mov    QWORD PTR [rbp+0x1f50],rax
   1400429f8:	mov    rsi,rdx
   1400429fb:	mov    rbx,rcx
   1400429fe:	lea    r14,[rcx+0x2022]
   140042a05:	xor    r13d,r13d
   140042a08:	cmp    WORD PTR [r14],r13w
   140042a0c:	jne    0x140042a18
   140042a0e:	mov    eax,0x3
   140042a13:	jmp    0x140042f49
   140042a18:	mov    r15b,r13b
   140042a1b:	movsxd rax,DWORD PTR [rcx+0x2000]
   140042a22:	cmp    QWORD PTR [rcx+rax*8],r13
   140042a26:	jne    0x140042bcf
   140042a2c:	mov    rcx,r14
   140042a2f:	call   0x140032288
   140042a34:	mov    r13b,al
   140042a37:	xor    r8d,r8d
   140042a3a:	test   al,al
   140042a3c:	jne    0x140042a78
   140042a3e:	mov    r8b,BYTE PTR [rbx+0x2014]
   140042a45:	mov    rdx,rsi
   140042a48:	mov    rcx,r14
   140042a4b:	call   0x140023280
   140042a50:	xor    r8d,r8d
   140042a53:	test   al,al
   140042a55:	je     0x140042a78
   140042a57:	mov    cl,0x1
   140042a59:	cmp    BYTE PTR [rsi+0x100c],r8b
   140042a60:	je     0x140042a7b
   140042a62:	cmp    BYTE PTR [rbx+0x2014],r8b
   140042a69:	je     0x140042a74
   140042a6b:	cmp    BYTE PTR [rsi+0x100d],r8b
   140042a72:	jne    0x140042a7b
   140042a74:	mov    dl,0x1
   140042a76:	jmp    0x140042ab8
   140042a78:	mov    cl,r8b
   140042a7b:	mov    dl,r8b
   140042a7e:	cmp    DWORD PTR [rbx+0x2000],r8d
   140042a85:	jg     0x140042abd
   140042a87:	mov    eax,DWORD PTR [rbx+0x2010]
   140042a8d:	cmp    eax,0x2
   140042a90:	je     0x140042abd
   140042a92:	cmp    BYTE PTR [rbx+0x41a8],r8b
   140042a99:	je     0x140042aa0
   140042a9b:	cmp    eax,0x1
   140042a9e:	jne    0x140042abd
   140042aa0:	test   r13b,r13b
   140042aa3:	je     0x140042aaa
   140042aa5:	cmp    eax,0x3
   140042aa8:	je     0x140042abd
   140042aaa:	cmp    BYTE PTR [rbx+0x2020],r8b
   140042ab1:	je     0x140042ab8
   140042ab3:	cmp    eax,0x1
   140042ab6:	jne    0x140042abd
   140042ab8:	mov    dil,r8b
   140042abb:	jmp    0x140042ac0
   140042abd:	mov    dil,0x1
   140042ac0:	cmp    DWORD PTR [rbx+0x2000],r8d
   140042ac7:	jne    0x140042ad0
   140042ac9:	mov    BYTE PTR [rbx+0x41a9],dil
   140042ad0:	test   dil,dil
   140042ad3:	jne    0x140042b59
   140042ad9:	test   r13b,r13b
   140042adc:	jne    0x140042b59
   140042ade:	xor    r13d,r13d
   140042ae1:	test   cl,cl
   140042ae3:	je     0x140042afa
   140042ae5:	test   dl,dl
   140042ae7:	je     0x140042afa
   140042ae9:	cmp    DWORD PTR [rbx+0x2010],0x1
   140042af0:	je     0x140042afa
   140042af2:	mov    r15b,0x1
   140042af5:	jmp    0x140042dbd
   140042afa:	mov    edi,r13d
   140042afd:	test   cl,cl
   140042aff:	jne    0x140042b4e
   140042b01:	mov    al,BYTE PTR [rsi+0x1044]
   140042b07:	neg    al
   140042b09:	sbb    edi,edi
   140042b0b:	add    edi,0x3
   140042b0e:	mov    rcx,QWORD PTR [rbx+0x51b8]
   140042b15:	test   rcx,rcx
   140042b18:	je     0x140042b38
   140042b1a:	mov    BYTE PTR [rsp+0x20],0x1
   140042b1f:	mov    r9b,0x1
   140042b22:	xor    r8d,r8d
   140042b25:	mov    rdx,r14
   140042b28:	call   0x140013da8
   140042b2d:	test   al,al
   140042b2f:	je     0x140042b38
   140042b31:	mov    edi,0x3
   140042b36:	jmp    0x140042b4e
   140042b38:	lea    rdx,[rbx+0x41b8]
   140042b3f:	mov    r8,r14
   140042b42:	lea    rcx,[rip+0x51d17]        # 0x140094860
   140042b49:	call   0x14001bdcc
   140042b4e:	mov    WORD PTR [r14],r13w
   140042b52:	mov    eax,edi
   140042b54:	jmp    0x140042f49
   140042b59:	mov    ecx,0x1010
   140042b5e:	call   0x140055dac
   140042b63:	mov    QWORD PTR [rsp+0x40],rax
   140042b68:	xor    r13d,r13d
   140042b6b:	test   rax,rax
   140042b6e:	je     0x140042b7d
   140042b70:	mov    rcx,rax
   140042b73:	call   0x14002324c
   140042b78:	mov    rcx,rax
   140042b7b:	jmp    0x140042b80
   140042b7d:	mov    rcx,r13
   140042b80:	movsxd rax,DWORD PTR [rbx+0x2000]
   140042b87:	mov    QWORD PTR [rbx+rax*8],rcx
   140042b8b:	mov    r8d,0x800
   140042b91:	mov    rdx,r14
   140042b94:	lea    rcx,[rsp+0x50]
   140042b99:	call   0x140046158
   140042b9e:	test   dil,dil
   140042ba1:	je     0x140042bba
   140042ba3:	mov    r8d,0x800
   140042ba9:	lea    rdx,[rip+0x2dc08]        # 0x1400707b8
   140042bb0:	lea    rcx,[rsp+0x50]
   140042bb5:	call   0x1400328b8
   140042bba:	movsxd rcx,DWORD PTR [rbx+0x2000]
   140042bc1:	lea    rdx,[rsp+0x50]
   140042bc6:	mov    rcx,QWORD PTR [rbx+rcx*8]
   140042bca:	call   0x1400233f4
   140042bcf:	movsxd rcx,DWORD PTR [rbx+0x2000]
   140042bd6:	mov    r8b,BYTE PTR [rbx+0x2014]
   140042bdd:	mov    rdx,rsi
   140042be0:	mov    rcx,QWORD PTR [rbx+rcx*8]
   140042be4:	call   0x1400232f8
   140042be9:	test   al,al
   140042beb:	jne    0x140042dbd
   140042bf1:	mov    dil,BYTE PTR [rsi+0x1044]
   140042bf8:	mov    BYTE PTR [rsp+0x30],dil
   140042bfd:	test   dil,dil
   140042c00:	je     0x140042c14
   140042c02:	lea    rdx,[rsp+0x30]
   140042c07:	mov    rcx,rbx
   140042c0a:	call   0x140043424
   140042c0f:	mov    dil,BYTE PTR [rsp+0x30]
   140042c14:	mov    WORD PTR [rbp+0xf50],r13w
   140042c1c:	movsxd rax,DWORD PTR [rbx+0x2000]
   140042c23:	mov    r15,QWORD PTR [rbx+rax*8]
   140042c27:	test   r15,r15
   140042c2a:	je     0x140042c41
   140042c2c:	mov    rcx,r15
   140042c2f:	call   0x140023264
   140042c34:	mov    edx,0x1010
   140042c39:	mov    rcx,r15
   140042c3c:	call   0x140055de8
   140042c41:	movsxd rax,DWORD PTR [rbx+0x2000]
   140042c48:	mov    QWORD PTR [rbx+rax*8],r13
   140042c4c:	or     rax,0xffffffffffffffff
   140042c50:	add    DWORD PTR [rbx+0x2000],eax
   140042c56:	mov    ecx,DWORD PTR [rbx+0x2000]
   140042c5c:	js     0x140042c72
   140042c5e:	movsxd rax,ecx
   140042c61:	cmp    QWORD PTR [rbx+rax*8],r13
   140042c65:	jne    0x140042c72
   140042c67:	sub    ecx,0x1
   140042c6a:	mov    DWORD PTR [rbx+0x2000],ecx
   140042c70:	jns    0x140042c5e
   140042c72:	cmp    DWORD PTR [rbx+0x2000],r13d
   140042c79:	jge    0x140042c90
   140042c7b:	test   dil,dil
   140042c7e:	je     0x140042c86
   140042c80:	inc    DWORD PTR [rbx+0x201c]
   140042c86:	mov    eax,0x1
   140042c8b:	jmp    0x140042f49
   140042c90:	mov    edx,0x5c
   140042c95:	mov    rcx,r14
   140042c98:	call   0x140058684
   140042c9d:	mov    r15,rax
   140042ca0:	test   rax,rax
   140042ca3:	je     0x140042d70
   140042ca9:	mov    rdx,rax
   140042cac:	lea    r8,[rsp+0x50]
   140042cb1:	sub    r8,rax
   140042cb4:	movzx  ecx,WORD PTR [rdx]
   140042cb7:	mov    WORD PTR [r8+rdx*1],cx
   140042cbc:	lea    rdx,[rdx+0x2]
   140042cc0:	test   cx,cx
   140042cc3:	jne    0x140042cb4
   140042cc5:	mov    eax,DWORD PTR [rbx+0x2004]
   140042ccb:	cmp    DWORD PTR [rbx+0x2000],eax
   140042cd1:	jge    0x140042cf7
   140042cd3:	lea    rcx,[rbx+0x3022]
   140042cda:	call   0x1400327bc
   140042cdf:	lea    rdx,[rsp+0x52]
   140042ce4:	sub    rdx,rax
   140042ce7:	movzx  ecx,WORD PTR [rax]
   140042cea:	mov    WORD PTR [rdx+rax*1],cx
   140042cee:	lea    rax,[rax+0x2]
   140042cf2:	test   cx,cx
   140042cf5:	jne    0x140042ce7
   140042cf7:	mov    WORD PTR [r15],r13w
   140042cfb:	mov    rdx,r14
   140042cfe:	lea    rcx,[rbp+0xf50]
   140042d05:	sub    rcx,r14
   140042d08:	movzx  eax,WORD PTR [rdx]
   140042d0b:	mov    WORD PTR [rcx+rdx*1],ax
   140042d0f:	lea    rdx,[rdx+0x2]
   140042d13:	test   ax,ax
   140042d16:	jne    0x140042d08
   140042d18:	mov    edx,0x5c
   140042d1d:	mov    rcx,r14
   140042d20:	call   0x140058684
   140042d25:	mov    rdx,rax
   140042d28:	test   rax,rax
   140042d2b:	jne    0x140042d53
   140042d2d:	lea    rcx,[rsp+0x52]
   140042d32:	lea    rax,[rsp+0x52]
   140042d37:	mov    rdx,rbx
   140042d3a:	sub    rdx,rax
   140042d3d:	movzx  eax,WORD PTR [rcx]
   140042d40:	mov    WORD PTR [rdx+rcx*1+0x2022],ax
   140042d48:	lea    rcx,[rcx+0x2]
   140042d4c:	test   ax,ax
   140042d4f:	jne    0x140042d3d
   140042d51:	jmp    0x140042d70
   140042d53:	lea    rcx,[rsp+0x50]
   140042d58:	lea    rax,[rsp+0x50]
   140042d5d:	sub    rdx,rax
   140042d60:	movzx  eax,WORD PTR [rcx]
   140042d63:	mov    WORD PTR [rdx+rcx*1],ax
   140042d67:	lea    rcx,[rcx+0x2]
   140042d6b:	test   ax,ax
   140042d6e:	jne    0x140042d60
   140042d70:	cmp    DWORD PTR [rbx+0x2018],0x2
   140042d77:	jne    0x140042db0
   140042d79:	mov    r8b,BYTE PTR [rbx+0x2014]
   140042d80:	mov    rdx,rsi
   140042d83:	lea    rcx,[rbp+0xf50]
   140042d8a:	call   0x140023280
   140042d8f:	test   al,al
   140042d91:	je     0x140042db0
   140042d93:	cmp    BYTE PTR [rsi+0x100c],r13b
   140042d9a:	je     0x140042db0
   140042d9c:	or     DWORD PTR [rsi+0x1040],0x1
   140042da3:	neg    dil
   140042da6:	sbb    eax,eax
   140042da8:	and    eax,0x2
   140042dab:	jmp    0x140042f49
   140042db0:	neg    dil
   140042db3:	sbb    eax,eax
   140042db5:	add    eax,0x3
   140042db8:	jmp    0x140042f49
   140042dbd:	cmp    BYTE PTR [rsi+0x100c],r13b
   140042dc4:	je     0x140042f2c
   140042dca:	cmp    BYTE PTR [rbx+0x2014],r13b
   140042dd1:	je     0x140042de0
   140042dd3:	cmp    BYTE PTR [rsi+0x100d],r13b
   140042dda:	jne    0x140042f2c
   140042de0:	test   r15b,r15b
   140042de3:	jne    0x140042e0c
   140042de5:	cmp    DWORD PTR [rbx+0x2000],r13d
   140042dec:	jne    0x140042e0c
   140042dee:	cmp    BYTE PTR [rbx+0x41a9],r13b
   140042df5:	jne    0x140042e0c
   140042df7:	mov    eax,DWORD PTR [rbx+0x2018]
   140042dfd:	sub    eax,0x3
   140042e00:	neg    eax
   140042e02:	sbb    eax,eax
   140042e04:	and    eax,0x3
   140042e07:	jmp    0x140042f49
   140042e0c:	mov    rcx,QWORD PTR [rbx+0x51b8]
   140042e13:	test   rcx,rcx
   140042e16:	je     0x140042e52
   140042e18:	mov    BYTE PTR [rsp+0x20],r13b
   140042e1d:	xor    r9d,r9d
   140042e20:	mov    r8b,0x1
   140042e23:	mov    rdx,rsi
   140042e26:	call   0x140013da8
   140042e2b:	test   al,al
   140042e2d:	jne    0x140042e45
   140042e2f:	mov    edx,DWORD PTR [rsi+0x1008]
   140042e35:	mov    rcx,QWORD PTR [rbx+0x51b8]
   140042e3c:	call   0x140013e34
   140042e41:	test   al,al
   140042e43:	je     0x140042e52
   140042e45:	neg    r15b
   140042e48:	sbb    eax,eax
   140042e4a:	and    eax,0xfffffffe
   140042e4d:	jmp    0x140042db5
   140042e52:	test   r15b,r15b
   140042e55:	je     0x140042e60
   140042e57:	lea    rax,[rip+0x2d95e]        # 0x1400707bc
   140042e5e:	jmp    0x140042e68
   140042e60:	mov    rcx,r14
   140042e63:	call   0x1400327bc
   140042e68:	lea    rdx,[rsp+0x50]
   140042e6d:	sub    rdx,rax
   140042e70:	movzx  ecx,WORD PTR [rax]
   140042e73:	mov    WORD PTR [rdx+rax*1],cx
   140042e77:	lea    rax,[rax+0x2]
   140042e7b:	test   cx,cx
   140042e7e:	jne    0x140042e70
   140042e80:	mov    rcx,rsi
   140042e83:	mov    rdx,rbx
   140042e86:	sub    rdx,rsi
   140042e89:	movzx  eax,WORD PTR [rcx]
   140042e8c:	mov    WORD PTR [rdx+rcx*1+0x2022],ax
   140042e94:	lea    rcx,[rcx+0x2]
   140042e98:	test   ax,ax
   140042e9b:	jne    0x140042e89
   140042e9d:	or     rax,0xffffffffffffffff
   140042ea1:	mov    rcx,rax
   140042ea4:	inc    rcx
   140042ea7:	cmp    WORD PTR [r14+rcx*2],r13w
   140042eac:	jne    0x140042ea4
   140042eae:	lea    rdx,[rsp+0x50]
   140042eb3:	inc    rax
   140042eb6:	cmp    WORD PTR [rdx+rax*2],r13w
   140042ebb:	jne    0x140042eb3
   140042ebd:	inc    rax
   140042ec0:	add    rax,rcx
   140042ec3:	mov    edi,0x800
   140042ec8:	cmp    rax,rdi
   140042ecb:	jae    0x140042f0c
   140042ecd:	cmp    DWORD PTR [rbx+0x2000],0x3ff
   140042ed7:	jge    0x140042f0c
   140042ed9:	mov    edx,edi
   140042edb:	mov    rcx,r14
   140042ede:	call   0x140030e78
   140042ee3:	mov    r8d,edi
   140042ee6:	lea    rdx,[rsp+0x50]
   140042eeb:	mov    rcx,r14
   140042eee:	call   0x140046120
   140042ef3:	inc    DWORD PTR [rbx+0x2000]
   140042ef9:	mov    eax,DWORD PTR [rbx+0x2000]
   140042eff:	test   r15b,r15b
   140042f02:	je     0x140042f31
   140042f04:	mov    DWORD PTR [rbx+0x2004],eax
   140042f0a:	jmp    0x140042f2c
   140042f0c:	lea    r9,[rsp+0x50]
   140042f11:	lea    r8,[rip+0x2d8a8]        # 0x1400707c0
   140042f18:	mov    rdx,r14
   140042f1b:	mov    ecx,0x53
   140042f20:	call   0x14001df10
   140042f25:	mov    eax,0x2
   140042f2a:	jmp    0x140042f49
   140042f2c:	test   r15b,r15b
   140042f2f:	jne    0x140042f47
   140042f31:	xor    r8d,r8d
   140042f34:	mov    rdx,rsi
   140042f37:	mov    rcx,r14
   140042f3a:	call   0x140026254
   140042f3f:	test   al,al
   140042f41:	je     0x140042a0e
   140042f47:	xor    eax,eax
   140042f49:	mov    rcx,QWORD PTR [rbp+0x1f50]
   140042f50:	xor    rcx,rsp
   140042f53:	call   0x140055f90
   140042f58:	lea    r11,[rsp+0x2060]
   140042f60:	mov    rbx,QWORD PTR [r11+0x40]
   140042f64:	mov    rsi,QWORD PTR [r11+0x48]
   140042f68:	mov    rsp,r11
   140042f6b:	pop    r15
   140042f6d:	pop    r14
   140042f6f:	pop    r13
   140042f71:	pop    rdi
   140042f72:	pop    rbp
   140042f73:	ret    
   140042f74:	mov    QWORD PTR [rsp+0x10],rbx
   140042f79:	mov    QWORD PTR [rsp+0x18],rbp
   140042f7e:	mov    QWORD PTR [rsp+0x20],rsi
   140042f83:	push   rdi
   140042f84:	push   r12
   140042f86:	push   r13
   140042f88:	push   r14
   140042f8a:	push   r15
   140042f8c:	mov    eax,0x1030
   140042f91:	call   0x140055f20
   140042f96:	sub    rsp,rax
   140042f99:	mov    rax,QWORD PTR [rip+0x3ef40]        # 0x140081ee0
   140042fa0:	xor    rax,rsp
   140042fa3:	mov    QWORD PTR [rsp+0x1020],rax
   140042fab:	xor    ebp,ebp
   140042fad:	mov    rbx,rcx
   140042fb0:	mov    edi,0x800
   140042fb5:	cmp    DWORD PTR [rcx+0x4050],ebp
   140042fbb:	jbe    0x140042fdb
   140042fbd:	lea    rdx,[rcx+0x2022]
   140042fc4:	mov    r8d,edi
   140042fc7:	add    rcx,0x4028
   140042fce:	call   0x140046290
   140042fd3:	test   al,al
   140042fd5:	jne    0x1400431a3
   140042fdb:	lea    rcx,[rbx+0x40e0]
   140042fe2:	mov    BYTE PTR [rbx+0x41a8],bpl
   140042fe9:	call   0x140046378
   140042fee:	mov    rcx,QWORD PTR [rbx+0x2008]
   140042ff5:	lea    r14,[rbx+0x2022]
   140042ffc:	mov    rdx,r14
   140042fff:	mov    r8,rdi
   140043002:	call   0x140046290
   140043007:	test   al,al
   140043009:	je     0x1400431a5
   14004300f:	mov    r15b,bpl
   140043012:	mov    esi,ebp
   140043014:	mov    edi,ebp
   140043016:	mov    r13d,ebp
   140043019:	cmp    WORD PTR [r14],bp
   14004301d:	je     0x1400431a3
   140043023:	mov    r12,r14
   140043026:	mov    rbp,r14
   140043029:	mov    r14d,0x2a
   14004302f:	cmp    WORD PTR [r12],0x3f
   140043035:	je     0x14004303e
   140043037:	cmp    WORD PTR [r12],r14w
   14004303c:	jne    0x140043041
   14004303e:	mov    r15b,0x1
   140043041:	movzx  ecx,WORD PTR [r12]
   140043046:	call   0x140032274
   14004304b:	xor    ecx,ecx
   14004304d:	test   al,al
   14004304f:	jne    0x140043061
   140043051:	movzx  ecx,WORD PTR [r12]
   140043056:	call   0x140032138
   14004305b:	xor    ecx,ecx
   14004305d:	test   al,al
   14004305f:	je     0x140043071
   140043061:	test   r15b,r15b
   140043064:	je     0x14004306b
   140043066:	inc    esi
   140043068:	mov    r15b,cl
   14004306b:	test   esi,esi
   14004306d:	cmove  edi,r13d
   140043071:	add    rbp,0x2
   140043075:	inc    r13d
   140043078:	mov    r12,rbp
   14004307b:	cmp    WORD PTR [rbp+0x0],cx
   14004307f:	jne    0x14004302f
   140043081:	xor    r15d,r15d
   140043084:	lea    r14,[rbx+0x2022]
   14004308b:	test   esi,esi
   14004308d:	je     0x1400431a3
   140043093:	cmp    DWORD PTR [rbx+0x2010],0x1
   14004309a:	mov    BYTE PTR [rbx+0x41a8],0x1
   1400430a1:	ja     0x1400430b5
   1400430a3:	cmp    esi,0x1
   1400430a6:	jne    0x1400430b5
   1400430a8:	mov    rcx,rbx
   1400430ab:	call   0x140042794
   1400430b0:	jmp    0x1400431a5
   1400430b5:	mov    r12d,0x800
   1400430bb:	mov    DWORD PTR [rsp+0x20],0x2a
   1400430c3:	mov    edx,r12d
   1400430c6:	lea    rcx,[rsp+0x20]
   1400430cb:	call   0x140030e78
   1400430d0:	mov    esi,edi
   1400430d2:	lea    rbp,[rbx+rsi*2]
   1400430d6:	movzx  ecx,WORD PTR [rbp+0x2022]
   1400430dd:	call   0x140032274
   1400430e2:	test   al,al
   1400430e4:	jne    0x1400430ff
   1400430e6:	movzx  ecx,WORD PTR [rbp+0x2022]
   1400430ed:	call   0x140032138
   1400430f2:	test   al,al
   1400430f4:	jne    0x1400430ff
   1400430f6:	lea    rdx,[rbp+0x2022]
   1400430fd:	jmp    0x14004310a
   1400430ff:	lea    rdx,[rbx+0x2024]
   140043106:	lea    rdx,[rdx+rsi*2]
   14004310a:	mov    r8,r12
   14004310d:	lea    rcx,[rsp+0x20]
   140043112:	call   0x140046120
   140043117:	lea    rcx,[rsp+0x20]
   14004311c:	call   0x1400327bc
   140043121:	mov    rsi,rax
   140043124:	movzx  ecx,WORD PTR [rax]
   140043127:	cmp    cx,WORD PTR [rip+0x2d672]        # 0x1400707a0
   14004312e:	jne    0x14004313d
   140043130:	movzx  ecx,WORD PTR [rax+0x2]
   140043134:	cmp    cx,WORD PTR [rip+0x2d667]        # 0x1400707a2
   14004313b:	je     0x140043150
   14004313d:	lea    rdx,[rip+0x2d664]        # 0x1400707a8
   140043144:	mov    rcx,rax
   140043147:	call   0x14005d4e8
   14004314c:	test   eax,eax
   14004314e:	jne    0x140043154
   140043150:	mov    WORD PTR [rsi],r15w
   140043154:	lea    rdx,[rsp+0x20]
   140043159:	lea    rcx,[rbx+0x40e0]
   140043160:	call   0x1400461bc
   140043165:	movzx  ecx,WORD PTR [rbp+0x2022]
   14004316c:	call   0x140032138
   140043171:	test   al,al
   140043173:	je     0x140043177
   140043175:	inc    edi
   140043177:	mov    edx,edi
   140043179:	mov    WORD PTR [rbx+rdx*2+0x2022],r15w
   140043182:	test   al,al
   140043184:	jne    0x1400431a3
   140043186:	mov    rdx,r12
   140043189:	mov    rcx,r14
   14004318c:	call   0x140030e78
   140043191:	mov    r8,r12
   140043194:	lea    rdx,[rip+0x2d609]        # 0x1400707a4
   14004319b:	mov    rcx,r14
   14004319e:	call   0x140046120
   1400431a3:	mov    al,0x1
   1400431a5:	mov    rcx,QWORD PTR [rsp+0x1020]
   1400431ad:	xor    rcx,rsp
   1400431b0:	call   0x140055f90
   1400431b5:	lea    r11,[rsp+0x1030]
   1400431bd:	mov    rbx,QWORD PTR [r11+0x38]
   1400431c1:	mov    rbp,QWORD PTR [r11+0x40]
   1400431c5:	mov    rsi,QWORD PTR [r11+0x48]
   1400431c9:	mov    rsp,r11
   1400431cc:	pop    r15
   1400431ce:	pop    r14
   1400431d0:	pop    r13
   1400431d2:	pop    r12
   1400431d4:	pop    rdi
   1400431d5:	ret    
   1400431d6:	int3   
   1400431d7:	int3   
   1400431d8:	mov    rax,rsp
   1400431db:	mov    QWORD PTR [rax+0x8],rbx
   1400431df:	mov    QWORD PTR [rax+0x10],rbp
   1400431e3:	mov    QWORD PTR [rax+0x18],rsi
   1400431e7:	mov    QWORD PTR [rax+0x20],rdi
   1400431eb:	push   r14
   1400431ed:	sub    rsp,0x30
   1400431f1:	xor    r14d,r14d
   1400431f4:	mov    rbp,rdx
   1400431f7:	mov    rbx,rcx
   1400431fa:	cmp    DWORD PTR [rcx+0x2000],r14d
   140043201:	jge    0x14004320d
   140043203:	mov    eax,0x1
   140043208:	jmp    0x1400432b2
   14004320d:	mov    esi,r14d
   140043210:	cmp    WORD PTR [rbx+0x2022],r14w
   140043218:	jne    0x140043226
   14004321a:	mov    rcx,rbx
   14004321d:	call   0x1400432d0
   140043222:	test   al,al
   140043224:	je     0x140043203
   140043226:	inc    esi
   140043228:	test   esi,0x3ff
   14004322e:	jne    0x140043235
   140043230:	call   0x140046bb4
   140043235:	mov    rdx,rbp
   140043238:	mov    rcx,rbx
   14004323b:	call   0x1400429b0
   140043240:	mov    edi,eax
   140043242:	cmp    eax,0x2
   140043245:	jne    0x14004324f
   140043247:	inc    DWORD PTR [rbx+0x201c]
   14004324d:	jmp    0x140043210
   14004324f:	cmp    eax,0x3
   140043252:	je     0x140043210
   140043254:	test   eax,eax
   140043256:	jne    0x14004326a
   140043258:	cmp    BYTE PTR [rbp+0x100c],r14b
   14004325f:	je     0x14004327b
   140043261:	cmp    DWORD PTR [rbx+0x2018],r14d
   140043268:	je     0x140043210
   14004326a:	cmp    eax,0x1
   14004326d:	jne    0x14004327b
   14004326f:	mov    rcx,rbx
   140043272:	call   0x1400432d0
   140043277:	test   al,al
   140043279:	jne    0x140043210
   14004327b:	cmp    DWORD PTR [rbx+0x4108],r14d
   140043282:	jbe    0x1400432b0
   140043284:	test   edi,edi
   140043286:	jne    0x1400432b0
   140043288:	mov    dl,BYTE PTR [rbp+0x100c]
   14004328e:	lea    rcx,[rbx+0x40e0]
   140043295:	xor    r9d,r9d
   140043298:	mov    DWORD PTR [rsp+0x20],0x5
   1400432a0:	mov    r8,rbp
   1400432a3:	call   0x140013be0
   1400432a8:	test   al,al
   1400432aa:	je     0x140043210
   1400432b0:	mov    eax,edi
   1400432b2:	mov    rbx,QWORD PTR [rsp+0x40]
   1400432b7:	mov    rbp,QWORD PTR [rsp+0x48]
   1400432bc:	mov    rsi,QWORD PTR [rsp+0x50]
   1400432c1:	mov    rdi,QWORD PTR [rsp+0x58]
   1400432c6:	add    rsp,0x30
   1400432ca:	pop    r14
   1400432cc:	ret    
   1400432cd:	int3   
   1400432ce:	int3   
   1400432cf:	int3   
   1400432d0:	mov    rax,rsp
   1400432d3:	mov    QWORD PTR [rax+0x8],rbx
   1400432d7:	mov    QWORD PTR [rax+0x10],rbp
   1400432db:	mov    QWORD PTR [rax+0x18],rsi
   1400432df:	mov    QWORD PTR [rax+0x20],rdi
   1400432e3:	push   r14
   1400432e5:	sub    rsp,0x20
   1400432e9:	mov    rsi,rcx
   1400432ec:	call   0x140042f74
   1400432f1:	xor    ebp,ebp
   1400432f3:	test   al,al
   1400432f5:	je     0x1400433d6
   1400432fb:	lea    rbx,[rsi+0x2022]
   140043302:	mov    r14d,0x800
   140043308:	mov    r8d,r14d
   14004330b:	mov    rdx,rbx
   14004330e:	mov    rcx,rbx
   140043311:	call   0x140032960
   140043316:	mov    rcx,rbx
   140043319:	call   0x140032140
   14004331e:	test   al,al
   140043320:	je     0x140043340
   140043322:	movzx  ecx,WORD PTR [rsi+0x2026]
   140043329:	call   0x140032274
   14004332e:	test   al,al
   140043330:	je     0x140043340
   140043332:	mov    eax,0x1
   140043337:	cmp    WORD PTR [rsi+0x2028],bp
   14004333e:	je     0x140043342
   140043340:	mov    eax,ebp
   140043342:	mov    rcx,rbx
   140043345:	mov    BYTE PTR [rsi+0x2020],al
   14004334b:	call   0x1400327bc
   140043350:	mov    rdi,rax
   140043353:	cmp    WORD PTR [rax],bp
   140043356:	jne    0x14004336a
   140043358:	mov    r8,r14
   14004335b:	lea    rdx,[rip+0x2d44e]        # 0x1400707b0
   140043362:	mov    rcx,rbx
   140043365:	call   0x140046120
   14004336a:	cmp    WORD PTR [rdi],0x2e
   14004336e:	jne    0x1400433a0
   140043370:	cmp    WORD PTR [rdi+0x2],bp
   140043374:	je     0x140043383
   140043376:	cmp    WORD PTR [rdi+0x2],0x2e
   14004337b:	jne    0x1400433a0
   14004337d:	cmp    WORD PTR [rdi+0x4],bp
   140043381:	jne    0x1400433a0
   140043383:	mov    rdx,r14
   140043386:	mov    rcx,rbx
   140043389:	call   0x140030e78
   14004338e:	mov    r8,r14
   140043391:	lea    rdx,[rip+0x2d41c]        # 0x1400707b4
   140043398:	mov    rcx,rbx
   14004339b:	call   0x140046120
   1400433a0:	sub    rdi,rsi
   1400433a3:	mov    DWORD PTR [rsi+0x2000],ebp
   1400433a9:	sub    rdi,0x2022
   1400433b0:	sar    rdi,1
   1400433b3:	mov    QWORD PTR [rsi+0x41b0],rdi
   1400433ba:	add    rsi,0x3022
   1400433c1:	sub    rsi,rbx
   1400433c4:	movzx  ecx,WORD PTR [rbx]
   1400433c7:	mov    WORD PTR [rsi+rbx*1],cx
   1400433cb:	lea    rbx,[rbx+0x2]
   1400433cf:	test   cx,cx
   1400433d2:	jne    0x1400433c4
   1400433d4:	mov    al,0x1
   1400433d6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400433db:	mov    rbp,QWORD PTR [rsp+0x38]
   1400433e0:	mov    rsi,QWORD PTR [rsp+0x40]
   1400433e5:	mov    rdi,QWORD PTR [rsp+0x48]
   1400433ea:	add    rsp,0x20
   1400433ee:	pop    r14
   1400433f0:	ret    
   1400433f1:	int3   
   1400433f2:	int3   
   1400433f3:	int3   
   1400433f4:	mov    QWORD PTR [rsp+0x8],rbx
   1400433f9:	push   rdi
   1400433fa:	sub    rsp,0x20
   1400433fe:	mov    edi,edx
   140043400:	mov    rbx,rcx
   140043403:	mov    edx,0x1
   140043408:	call   0x1400426f0
   14004340d:	mov    r8,QWORD PTR [rbx+0x8]
   140043411:	mov    rax,QWORD PTR [rbx]
   140043414:	mov    rbx,QWORD PTR [rsp+0x30]
   140043419:	mov    DWORD PTR [rax+r8*4-0x4],edi
   14004341e:	add    rsp,0x20
   140043422:	pop    rdi
   140043423:	ret    
   140043424:	mov    QWORD PTR [rsp+0x18],rbx
   140043429:	mov    QWORD PTR [rsp+0x20],rbp
   14004342e:	push   rsi
   14004342f:	push   rdi
   140043430:	push   r14
   140043432:	mov    eax,0x1040
   140043437:	call   0x140055f20
   14004343c:	sub    rsp,rax
   14004343f:	mov    rax,QWORD PTR [rip+0x3ea9a]        # 0x140081ee0
   140043446:	xor    rax,rsp
   140043449:	mov    QWORD PTR [rsp+0x1030],rax
   140043451:	xor    r14d,r14d
   140043454:	mov    rbx,rdx
   140043457:	mov    rsi,rcx
   14004345a:	cmp    BYTE PTR [rdx],r14b
   14004345d:	je     0x140043542
   140043463:	lea    rdi,[rcx+0x2022]
   14004346a:	mov    rcx,rdi
   14004346d:	call   0x1400327bc
   140043472:	mov    rbp,rax
   140043475:	cmp    rax,rdi
   140043478:	jbe    0x14004349e
   14004347a:	mov    rcx,rdi
   14004347d:	mov    WORD PTR [rax-0x2],r14w
   140043482:	call   QWORD PTR [rip+0x28cc0]        # 0x14006c148
   140043488:	lea    ecx,[r14+0x5c]
   14004348c:	mov    WORD PTR [rbp-0x2],cx
   140043490:	cmp    eax,0xffffffff
   140043493:	je     0x14004349e
   140043495:	bt     eax,0xa
   140043499:	jae    0x14004349e
   14004349b:	mov    BYTE PTR [rbx],r14b
   14004349e:	lea    rdx,[rip+0x2d323]        # 0x1400707c8
   1400434a5:	mov    rcx,rdi
   1400434a8:	call   0x140059860
   1400434ad:	test   rax,rax
   1400434b0:	je     0x1400434b5
   1400434b2:	mov    BYTE PTR [rbx],r14b
   1400434b5:	cmp    BYTE PTR [rbx],r14b
   1400434b8:	je     0x140043542
   1400434be:	mov    rcx,QWORD PTR [rsi+0x51b8]
   1400434c5:	test   rcx,rcx
   1400434c8:	je     0x1400434e4
   1400434ca:	mov    r9b,0x1
   1400434cd:	mov    BYTE PTR [rsp+0x20],0x1
   1400434d2:	xor    r8d,r8d
   1400434d5:	mov    rdx,rdi
   1400434d8:	call   0x140013da8
   1400434dd:	test   al,al
   1400434df:	je     0x1400434e4
   1400434e1:	mov    BYTE PTR [rbx],r14b
   1400434e4:	cmp    BYTE PTR [rbx],r14b
   1400434e7:	je     0x140043542
   1400434e9:	mov    rcx,QWORD PTR [rsi+0x4198]
   1400434f0:	test   rcx,rcx
   1400434f3:	je     0x1400434fd
   1400434f5:	mov    rdx,rdi
   1400434f8:	call   0x1400461bc
   1400434fd:	mov    rcx,QWORD PTR [rsi+0x41a0]
   140043504:	test   rcx,rcx
   140043507:	je     0x140043514
   140043509:	mov    edx,DWORD PTR [rsi+0x41b0]
   14004350f:	call   0x1400433f4
   140043514:	mov    r8d,0x800
   14004351a:	lea    rdx,[rsp+0x30]
   14004351f:	mov    rcx,rdi
   140043522:	call   0x140030ef4
   140043527:	lea    rdx,[rsp+0x30]
   14004352c:	mov    ecx,0x54
   140043531:	call   0x1400013b0
   140043536:	lea    rcx,[rip+0x51323]        # 0x140094860
   14004353d:	call   0x14001bf78
   140043542:	mov    rcx,QWORD PTR [rsp+0x1030]
   14004354a:	xor    rcx,rsp
   14004354d:	call   0x140055f90
   140043552:	lea    r11,[rsp+0x1040]
   14004355a:	mov    rbx,QWORD PTR [r11+0x30]
   14004355e:	mov    rbp,QWORD PTR [r11+0x38]
   140043562:	mov    rsp,r11
   140043565:	pop    r14
   140043567:	pop    rdi
   140043568:	pop    rsi
   140043569:	ret    
   14004356a:	int3   
   14004356b:	int3   
   14004356c:	rex push rbx
   14004356e:	sub    rsp,0x20
   140043572:	lea    rdx,[rip+0x2d357]        # 0x1400708d0
   140043579:	mov    BYTE PTR [rcx+0x101],0x0
   140043580:	mov    rbx,rcx
   140043583:	call   0x140043864
   140043588:	mov    rax,rbx
   14004358b:	add    rsp,0x20
   14004358f:	pop    rbx
   140043590:	ret    
   140043591:	int3   
   140043592:	int3   
   140043593:	int3   
   140043594:	mov    QWORD PTR [rsp+0x18],rbx
   140043599:	push   rdi
   14004359a:	sub    rsp,0x230
   1400435a1:	mov    rax,QWORD PTR [rip+0x3e938]        # 0x140081ee0
   1400435a8:	xor    rax,rsp
   1400435ab:	mov    QWORD PTR [rsp+0x220],rax
   1400435b3:	mov    rdi,rdx
   1400435b6:	mov    ebx,0x80
   1400435bb:	mov    r8d,ebx
   1400435be:	lea    rdx,[rsp+0x20]
   1400435c3:	call   0x140043660
   1400435c8:	mov    r8d,ebx
   1400435cb:	lea    rdx,[rsp+0x120]
   1400435d3:	mov    rcx,rdi
   1400435d6:	call   0x140043660
   1400435db:	lea    rax,[rsp+0x20]
   1400435e0:	lea    r8,[rsp+0x120]
   1400435e8:	sub    r8,rax
   1400435eb:	movzx  edi,WORD PTR [rax]
   1400435ee:	movzx  edx,WORD PTR [rax+r8*1]
   1400435f3:	sub    edi,edx
   1400435f5:	jne    0x1400435ff
   1400435f7:	add    rax,0x2
   1400435fb:	test   edx,edx
   1400435fd:	jne    0x1400435eb
   1400435ff:	test   edi,edi
   140043601:	mov    rcx,rbx
   140043604:	lea    rdi,[rsp+0x20]
   140043609:	sete   dl
   14004360c:	xor    eax,eax
   14004360e:	rep stos BYTE PTR es:[rdi],al
   140043610:	lea    rdi,[rsp+0x120]
   140043618:	mov    rcx,rbx
   14004361b:	rep stos BYTE PTR es:[rdi],al
   14004361d:	mov    al,dl
   14004361f:	mov    rcx,QWORD PTR [rsp+0x220]
   140043627:	xor    rcx,rsp
   14004362a:	call   0x140055f90
   14004362f:	mov    rbx,QWORD PTR [rsp+0x250]
   140043637:	add    rsp,0x230
   14004363e:	pop    rdi
   14004363f:	ret    
   140043640:	mov    QWORD PTR [rsp+0x8],rdi
   140043645:	mov    BYTE PTR [rcx+0x100],0x0
   14004364c:	mov    rdi,rcx
   14004364f:	mov    ecx,0x100
   140043654:	xor    eax,eax
   140043656:	rep stos BYTE PTR es:[rdi],al
   140043658:	mov    rdi,QWORD PTR [rsp+0x8]
   14004365d:	ret    
   14004365e:	int3   
   14004365f:	int3   
   140043660:	mov    rax,rsp
   140043663:	mov    QWORD PTR [rax+0x8],rbx
   140043667:	mov    QWORD PTR [rax+0x10],rsi
   14004366b:	push   rdi
   14004366c:	sub    rsp,0x30
   140043670:	xor    esi,esi
   140043672:	mov    rdi,r8
   140043675:	mov    rbx,rdx
   140043678:	cmp    BYTE PTR [rcx+0x100],sil
   14004367f:	je     0x1400436a1
   140043681:	mov    BYTE PTR [rax-0x10],sil
   140043685:	mov    r9,rdx
   140043688:	mov    QWORD PTR [rax-0x18],r8
   14004368c:	mov    rdx,rcx
   14004368f:	mov    r8d,0x80
   140043695:	call   0x1400436b4
   14004369a:	mov    WORD PTR [rbx+rdi*2-0x2],si
   14004369f:	jmp    0x1400436a4
   1400436a1:	mov    WORD PTR [rdx],si
   1400436a4:	mov    rbx,QWORD PTR [rsp+0x40]
   1400436a9:	mov    rsi,QWORD PTR [rsp+0x48]
   1400436ae:	add    rsp,0x30
   1400436b2:	pop    rdi
   1400436b3:	ret    
   1400436b4:	mov    QWORD PTR [rsp+0x8],rbx
   1400436b9:	mov    QWORD PTR [rsp+0x10],rsi
   1400436be:	push   rdi
   1400436bf:	sub    rsp,0x20
   1400436c3:	mov    rbx,QWORD PTR [rsp+0x50]
   1400436c8:	mov    rax,r8
   1400436cb:	cmp    rax,rbx
   1400436ce:	mov    rdi,rcx
   1400436d1:	mov    r8,rbx
   1400436d4:	mov    rcx,r9
   1400436d7:	cmovb  r8,rax
   1400436db:	mov    rsi,r9
   1400436de:	add    r8,r8
   1400436e1:	call   0x140059180
   1400436e6:	mov    r9b,BYTE PTR [rdi+0x101]
   1400436ed:	lea    rdx,[rbx+rbx*1]
   1400436f1:	mov    r8b,BYTE PTR [rsp+0x58]
   1400436f6:	mov    rcx,rsi
   1400436f9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400436fe:	mov    rsi,QWORD PTR [rsp+0x38]
   140043703:	add    rsp,0x20
   140043707:	pop    rdi
   140043708:	jmp    0x140043710
   14004370d:	int3   
   14004370e:	int3   
   14004370f:	int3   
   140043710:	mov    rax,rsp
   140043713:	mov    QWORD PTR [rax+0x8],rbx
   140043717:	mov    QWORD PTR [rax+0x10],rbp
   14004371b:	mov    QWORD PTR [rax+0x18],rsi
   14004371f:	mov    QWORD PTR [rax+0x20],rdi
   140043723:	push   r14
   140043725:	sub    rsp,0x20
   140043729:	mov    r10,QWORD PTR [rip+0x573a0]        # 0x14009aad0
   140043730:	xor    ebx,ebx
   140043732:	mov    bpl,r9b
   140043735:	mov    r14b,r8b
   140043738:	mov    rsi,rdx
   14004373b:	mov    rdi,rcx
   14004373e:	test   r10,r10
   140043741:	jne    0x1400437b1
   140043743:	cmp    BYTE PTR [rip+0x5737f],bl        # 0x14009aac8
   140043749:	jne    0x1400437b1
   14004374b:	lea    rcx,[rip+0x2d1f6]        # 0x140070948
   140043752:	call   0x1400469a8
   140043757:	mov    QWORD PTR [rip+0x57362],rax        # 0x14009aac0
   14004375e:	test   rax,rax
   140043761:	je     0x14004379a
   140043763:	lea    rdx,[rip+0x2d1f6]        # 0x140070960
   14004376a:	mov    rcx,rax
   14004376d:	call   QWORD PTR [rip+0x28be5]        # 0x14006c358
   140043773:	mov    rcx,QWORD PTR [rip+0x57346]        # 0x14009aac0
   14004377a:	lea    rdx,[rip+0x2d1f7]        # 0x140070978
   140043781:	mov    QWORD PTR [rip+0x57348],rax        # 0x14009aad0
   140043788:	call   QWORD PTR [rip+0x28bca]        # 0x14006c358
   14004378e:	mov    r9,rax
   140043791:	mov    QWORD PTR [rip+0x57340],rax        # 0x14009aad8
   140043798:	jmp    0x1400437a1
   14004379a:	mov    r9,QWORD PTR [rip+0x57337]        # 0x14009aad8
   1400437a1:	mov    r10,QWORD PTR [rip+0x57328]        # 0x14009aad0
   1400437a8:	mov    BYTE PTR [rip+0x57319],0x1        # 0x14009aac8
   1400437af:	jmp    0x1400437b8
   1400437b1:	mov    r9,QWORD PTR [rip+0x57320]        # 0x14009aad8
   1400437b8:	mov    rax,rsi
   1400437bb:	mov    rcx,rsi
   1400437be:	and    eax,0xf
   1400437c1:	mov    r8d,ebx
   1400437c4:	sub    rcx,rax
   1400437c7:	test   bpl,bpl
   1400437ca:	setne  r8b
   1400437ce:	test   r14b,r14b
   1400437d1:	je     0x140043811
   1400437d3:	test   r10,r10
   1400437d6:	je     0x14004382b
   1400437d8:	mov    edx,ecx
   1400437da:	mov    rcx,rdi
   1400437dd:	call   r10
   1400437e0:	test   eax,eax
   1400437e2:	jne    0x140043846
   1400437e4:	lea    rdx,[rip+0x2d0ed]        # 0x1400708d8
   1400437eb:	lea    rbx,[rip+0x5106e]        # 0x140094860
   1400437f2:	mov    rcx,rbx
   1400437f5:	call   0x14001bc8c
   1400437fa:	mov    rcx,rbx
   1400437fd:	call   0x14001bf78
   140043802:	mov    edx,0x2
   140043807:	mov    rcx,rbx
   14004380a:	call   0x14001bc60
   14004380f:	jmp    0x140043846
   140043811:	test   r9,r9
   140043814:	je     0x14004382b
   140043816:	mov    edx,ecx
   140043818:	mov    rcx,rdi
   14004381b:	call   r9
   14004381e:	test   eax,eax
   140043820:	jne    0x140043846
   140043822:	lea    rdx,[rip+0x2d0e7]        # 0x140070910
   140043829:	jmp    0x1400437eb
   14004382b:	call   QWORD PTR [rip+0x2897f]        # 0x14006c1b0
   140043831:	test   rsi,rsi
   140043834:	je     0x140043846
   140043836:	add    al,0x4b
   140043838:	lea    ecx,[rbx+rax*1]
   14004383b:	xor    BYTE PTR [rbx+rdi*1],cl
   14004383e:	inc    rbx
   140043841:	cmp    rbx,rsi
   140043844:	jb     0x140043838
   140043846:	mov    rbx,QWORD PTR [rsp+0x30]
   14004384b:	mov    rbp,QWORD PTR [rsp+0x38]
   140043850:	mov    rsi,QWORD PTR [rsp+0x40]
   140043855:	mov    rdi,QWORD PTR [rsp+0x48]
   14004385a:	add    rsp,0x20
   14004385e:	pop    r14
   140043860:	ret    
   140043861:	int3   
   140043862:	int3   
   140043863:	int3   
   140043864:	sub    rsp,0x38
   140043868:	xor    eax,eax
   14004386a:	cmp    WORD PTR [rdx],ax
   14004386d:	jne    0x140043886
   14004386f:	xor    edx,edx
   140043871:	mov    BYTE PTR [rcx+0x100],al
   140043877:	mov    r8d,0x100
   14004387d:	add    rsp,0x38
   140043881:	jmp    0x140058f40
   140043886:	mov    BYTE PTR [rcx+0x100],0x1
   14004388d:	or     r8,0xffffffffffffffff
   140043891:	inc    r8
   140043894:	cmp    WORD PTR [rdx+r8*2],ax
   140043899:	jne    0x140043891
   14004389b:	inc    r8
   14004389e:	mov    BYTE PTR [rsp+0x28],0x1
   1400438a3:	mov    r9,rcx
   1400438a6:	mov    QWORD PTR [rsp+0x20],0x80
   1400438af:	call   0x1400436b4
   1400438b4:	add    rsp,0x38
   1400438b8:	ret    
   1400438b9:	int3   
   1400438ba:	int3   
   1400438bb:	int3   
   1400438bc:	mov    QWORD PTR [rsp+0x8],rdi
   1400438c1:	mov    rdi,rcx
   1400438c4:	xor    eax,eax
   1400438c6:	mov    rcx,rdx
   1400438c9:	rep stos BYTE PTR es:[rdi],al
   1400438cb:	mov    rdi,QWORD PTR [rsp+0x8]
   1400438d0:	ret    
   1400438d1:	int3   
   1400438d2:	int3   
   1400438d3:	int3   
   1400438d4:	rex push rbp
   1400438d6:	push   rdi
   1400438d7:	push   r12
   1400438d9:	push   r14
   1400438db:	push   r15
   1400438dd:	lea    rbp,[rsp-0x14f60]
   1400438e5:	mov    eax,0x15060
   1400438ea:	call   0x140055f20
   1400438ef:	sub    rsp,rax
   1400438f2:	mov    QWORD PTR [rsp+0x50],0xfffffffffffffffe
   1400438fb:	mov    QWORD PTR [rsp+0x15098],rbx
   140043903:	mov    QWORD PTR [rsp+0x150a0],rsi
   14004390b:	mov    rax,QWORD PTR [rip+0x3e5ce]        # 0x140081ee0
   140043912:	xor    rax,rsp
   140043915:	mov    QWORD PTR [rbp+0x14f50],rax
   14004391c:	mov    rdi,rcx
   14004391f:	lea    rsi,[rcx+0x1018]
   140043926:	mov    rcx,rsi
   140043929:	call   0x1400327bc
   14004392e:	movzx  r8d,WORD PTR [rax]
   140043932:	movzx  edx,WORD PTR [rip+0x2d057]        # 0x140070990
   140043939:	sub    r8d,edx
   14004393c:	jne    0x14004394d
   14004393e:	movzx  r8d,WORD PTR [rax+0x2]
   140043943:	movzx  eax,WORD PTR [rip+0x2d048]        # 0x140070992
   14004394a:	sub    r8d,eax
   14004394d:	xor    r14d,r14d
   140043950:	test   r8d,r8d
   140043953:	sete   bl
   140043956:	mov    al,bl
   140043958:	neg    al
   14004395a:	sbb    ecx,ecx
   14004395c:	and    ecx,0x2
   14004395f:	add    ecx,0xd0c
   140043965:	call   0x140040118
   14004396a:	mov    rcx,rax
   14004396d:	call   0x14001796c
   140043972:	mov    r15d,0x800
   140043978:	mov    r8d,r15d
   14004397b:	lea    rdx,[rbp+0x12f50]
   140043982:	mov    rcx,rdi
   140043985:	call   0x140013e48
   14004398a:	test   al,al
   14004398c:	je     0x140043d48
   140043992:	movabs r12,0x7fffffff7fffffff
   14004399c:	mov    ecx,0xd0a
   1400439a1:	call   0x140040118
   1400439a6:	mov    rcx,rax
   1400439a9:	lea    rdx,[rbp+0x12f50]
   1400439b0:	call   0x14001796c
   1400439b5:	mov    rdx,rdi
   1400439b8:	lea    rcx,[rbp+0xf90]
   1400439bf:	call   0x140007678
   1400439c4:	nop
   1400439c5:	mov    rdx,rdi
   1400439c8:	lea    rcx,[rbp+0x9f70]
   1400439cf:	call   0x140007678
   1400439d4:	nop
   1400439d5:	lea    rdx,[rbp+0x12f50]
   1400439dc:	lea    rcx,[rbp+0xf90]
   1400439e3:	call   0x14000a894
   1400439e8:	test   al,al
   1400439ea:	je     0x140043d15
   1400439f0:	test   bl,bl
   1400439f2:	je     0x140043a13
   1400439f4:	cmp    QWORD PTR [rbp+0x8f28],r14
   1400439fb:	jne    0x140043a13
   1400439fd:	mov    ecx,0x23
   140043a02:	lea    rdx,[rbp+0x12f50]
   140043a09:	call   0x1400013b0
   140043a0e:	jmp    0x140043d15
   140043a13:	cmp    DWORD PTR [rbp+0x8f18],0x1
   140043a1a:	jne    0x140043a23
   140043a1c:	mov    ecx,0x24
   140043a21:	jmp    0x140043a02
   140043a23:	mov    edx,0x5
   140043a28:	lea    rcx,[rbp+0xf90]
   140043a2f:	call   0x140009458
   140043a34:	test   al,al
   140043a36:	jne    0x140043d15
   140043a3c:	cmp    QWORD PTR [rbp+0x8f28],r14
   140043a43:	je     0x140043a62
   140043a45:	test   bl,bl
   140043a47:	jne    0x140043a62
   140043a49:	mov    edx,0x4
   140043a4e:	lea    rcx,[rbp+0xf90]
   140043a55:	call   0x140009458
   140043a5a:	test   al,al
   140043a5c:	jne    0x140043d15
   140043a62:	lea    rcx,[rbp+0xf90]
   140043a69:	call   0x14000a7c4
   140043a6e:	lea    rcx,[rbp+0xf90]
   140043a75:	call   0x140008324
   140043a7a:	test   al,al
   140043a7c:	jne    0x140043d15
   140043a82:	mov    rcx,r14
   140043a85:	movzx  eax,WORD PTR [rbp+rcx*1+0x12f50]
   140043a8d:	mov    WORD PTR [rbp+rcx*1+0x13f50],ax
   140043a95:	lea    rcx,[rcx+0x2]
   140043a99:	test   ax,ax
   140043a9c:	jne    0x140043a85
   140043a9e:	lea    rcx,[rbp+0x13f50]
   140043aa5:	test   bl,bl
   140043aa7:	je     0x140043aba
   140043aa9:	mov    r8,r15
   140043aac:	lea    rdx,[rip+0x2cee5]        # 0x140070998
   140043ab3:	call   0x140032848
   140043ab8:	jmp    0x140043ac2
   140043aba:	mov    rdx,r15
   140043abd:	call   0x140032900
   140043ac2:	cmp    QWORD PTR [rbp+0x8f28],r14
   140043ac9:	jbe    0x140043add
   140043acb:	test   bl,bl
   140043acd:	jne    0x140043add
   140043acf:	lea    rcx,[rbp+0x9f70]
   140043ad6:	call   0x1400093e8
   140043adb:	jmp    0x140043b36
   140043add:	mov    BYTE PTR [rsp+0x38],r14b
   140043ae2:	mov    QWORD PTR [rsp+0x30],r14
   140043ae7:	mov    QWORD PTR [rsp+0x28],r12
   140043aec:	lea    rax,[rsp+0x40]
   140043af1:	mov    QWORD PTR [rsp+0x20],rax
   140043af6:	mov    r9,r15
   140043af9:	lea    r8,[rbp+0x13f50]
   140043b00:	lea    rdx,[rbp+0x9f70]
   140043b07:	mov    rcx,rdi
   140043b0a:	call   0x1400202cc
   140043b0f:	test   al,al
   140043b11:	jne    0x140043b36
   140043b13:	cmp    BYTE PTR [rsp+0x40],r14b
   140043b18:	jne    0x140043d15
   140043b1e:	lea    rdx,[rbp+0x13f50]
   140043b25:	lea    rcx,[rip+0x50d34]        # 0x140094860
   140043b2c:	call   0x14001bc54
   140043b31:	jmp    0x140043d15
   140043b36:	test   bl,bl
   140043b38:	jne    0x140043b77
   140043b3a:	lea    rcx,[rsp+0x60]
   140043b3f:	call   0x14002071c
   140043b44:	nop
   140043b45:	mov    rdx,rsi
   140043b48:	lea    rcx,[rsp+0x60]
   140043b4d:	call   0x14002117c
   140043b52:	mov    r8,r12
   140043b55:	lea    rdx,[rbp+0x9f70]
   140043b5c:	lea    rcx,[rsp+0x60]
   140043b61:	call   0x140020834
   140043b66:	mov    QWORD PTR [rbp+0x11f08],rax
   140043b6d:	lea    rcx,[rsp+0x60]
   140043b72:	call   0x140020758
   140043b77:	lea    r9,[rbp+0x13f50]
   140043b7e:	xor    r8d,r8d
   140043b81:	lea    rdx,[rbp+0xf90]
   140043b88:	lea    rcx,[rbp+0x9f70]
   140043b8f:	call   0x1400084f0
   140043b94:	jmp    0x140043bf3
   140043b96:	mov    cl,BYTE PTR [rbp+0x4499]
   140043b9c:	mov    eax,DWORD PTR [rbp+0x8f18]
   140043ba2:	cmp    eax,0x2
   140043ba5:	jl     0x140043bc1
   140043ba7:	jne    0x140043bb7
   140043ba9:	cmp    cl,0x1d
   140043bac:	je     0x140043bc5
   140043bae:	cmp    BYTE PTR [rbp+0x449a],r14b
   140043bb5:	jne    0x140043bc1
   140043bb7:	cmp    eax,0x3
   140043bba:	jne    0x140043bc5
   140043bbc:	cmp    cl,0x32
   140043bbf:	jbe    0x140043bc5
   140043bc1:	test   bl,bl
   140043bc3:	je     0x140043c17
   140043bc5:	mov    BYTE PTR [rsp+0x20],r14b
   140043bca:	xor    r9d,r9d
   140043bcd:	xor    r8d,r8d
   140043bd0:	lea    edx,[r9+0x2]
   140043bd4:	lea    rcx,[rbp+0x9f70]
   140043bdb:	call   0x14000b340
   140043be0:	lea    rdx,[rbp+0xf90]
   140043be7:	lea    rcx,[rbp+0x9f70]
   140043bee:	call   0x1400084a8
   140043bf3:	mov    QWORD PTR [rsp+0x20],r14
   140043bf8:	xor    r9d,r9d
   140043bfb:	mov    r8b,0x1
   140043bfe:	lea    rdx,[rbp+0xf90]
   140043c05:	lea    rcx,[rbp+0x9f70]
   140043c0c:	call   0x1400096dc
   140043c11:	test   al,al
   140043c13:	jne    0x140043b96
   140043c15:	jmp    0x140043c55
   140043c17:	movzx  r9d,cl
   140043c1b:	mov    eax,0x66666667
   140043c20:	imul   r9d
   140043c23:	sar    edx,0x2
   140043c26:	mov    eax,edx
   140043c28:	shr    eax,0x1f
   140043c2b:	add    edx,eax
   140043c2d:	lea    eax,[rdx+rdx*4]
   140043c30:	add    eax,eax
   140043c32:	sub    r9d,eax
   140043c35:	mov    r8d,edx
   140043c38:	lea    rdx,[rbp+0x12f50]
   140043c3f:	mov    ecx,0x25
   140043c44:	call   0x1400012f8
   140043c49:	lea    rcx,[rbp+0xf90]
   140043c50:	call   0x1400207cc
   140043c55:	cmp    QWORD PTR [rbp+0xf98],0xffffffffffffffff
   140043c5d:	je     0x140043d15
   140043c63:	mov    QWORD PTR [rsp+0x48],r14
   140043c68:	cmp    DWORD PTR [rdi+0x61a0],0x1
   140043c6f:	jne    0x140043c99
   140043c71:	lea    rdx,[rsp+0x48]
   140043c76:	lea    rcx,[rbp+0xf90]
   140043c7d:	call   0x140020c28
   140043c82:	xor    r9d,r9d
   140043c85:	xor    r8d,r8d
   140043c88:	lea    rdx,[rsp+0x48]
   140043c8d:	lea    rcx,[rbp+0x9f70]
   140043c94:	call   0x140021078
   140043c99:	cmp    QWORD PTR [rbp+0x8f28],r14
   140043ca0:	jbe    0x140043cbb
   140043ca2:	test   bl,bl
   140043ca4:	jne    0x140043cbb
   140043ca6:	lea    rdx,[rbp+0xf90]
   140043cad:	lea    rcx,[rbp+0x9f70]
   140043cb4:	call   0x14000a340
   140043cb9:	jmp    0x140043d02
   140043cbb:	mov    rcx,r14
   140043cbe:	movzx  eax,WORD PTR [rbp+rcx*1+0x9f96]
   140043cc6:	mov    WORD PTR [rbp+rcx*1+0x12f50],ax
   140043cce:	lea    rcx,[rcx+0x2]
   140043cd2:	test   ax,ax
   140043cd5:	jne    0x140043cbe
   140043cd7:	xor    edx,edx
   140043cd9:	lea    rcx,[rbp+0x9f70]
   140043ce0:	call   0x140008378
   140043ce5:	cmp    DWORD PTR [rdi+0x61a0],0x1
   140043cec:	jne    0x140043d02
   140043cee:	xor    r8d,r8d
   140043cf1:	lea    rdx,[rsp+0x48]
   140043cf6:	lea    rcx,[rbp+0x9f70]
   140043cfd:	call   0x1400570f4
   140043d02:	mov    ecx,0xd20
   140043d07:	call   0x140040118
   140043d0c:	mov    rcx,rax
   140043d0f:	call   0x14001796c
   140043d14:	nop
   140043d15:	lea    rcx,[rbp+0x9f70]
   140043d1c:	call   0x140007880
   140043d21:	nop
   140043d22:	lea    rcx,[rbp+0xf90]
   140043d29:	call   0x140007880
   140043d2e:	mov    r8d,r15d
   140043d31:	lea    rdx,[rbp+0x12f50]
   140043d38:	mov    rcx,rdi
   140043d3b:	call   0x140013e48
   140043d40:	test   al,al
   140043d42:	jne    0x14004399c
   140043d48:	cmp    BYTE PTR [rdi+0x6152],r14b
   140043d4f:	jne    0x140043d63
   140043d51:	mov    ecx,0xd22
   140043d56:	call   0x140040118
   140043d5b:	mov    rcx,rax
   140043d5e:	call   0x14001796c
   140043d63:	mov    rcx,QWORD PTR [rbp+0x14f50]
   140043d6a:	xor    rcx,rsp
   140043d6d:	call   0x140055f90
   140043d72:	lea    r11,[rsp+0x15060]
   140043d7a:	mov    rbx,QWORD PTR [r11+0x38]
   140043d7e:	mov    rsi,QWORD PTR [r11+0x40]
   140043d82:	mov    rsp,r11
   140043d85:	pop    r15
   140043d87:	pop    r14
   140043d89:	pop    r12
   140043d8b:	pop    rdi
   140043d8c:	pop    rbp
   140043d8d:	ret    
   140043d8e:	int3   
   140043d8f:	int3   
   140043d90:	mov    QWORD PTR [rsp+0x10],rbx
   140043d95:	mov    QWORD PTR [rsp+0x8],rcx
   140043d9a:	push   rbp
   140043d9b:	push   rsi
   140043d9c:	push   rdi
   140043d9d:	push   r12
   140043d9f:	push   r13
   140043da1:	push   r14
   140043da3:	push   r15
   140043da5:	sub    rsp,0x80
   140043dac:	mov    QWORD PTR [rsp+0x60],rdx
   140043db1:	mov    rbp,rdx
   140043db4:	test   r9b,r9b
   140043db7:	je     0x140043ddd
   140043db9:	movups xmm0,XMMWORD PTR [r8]
   140043dbd:	movups XMMWORD PTR [rdx],xmm0
   140043dc0:	movups xmm1,XMMWORD PTR [r8+0x10]
   140043dc5:	movups XMMWORD PTR [rdx+0x10],xmm1
   140043dc9:	movups xmm0,XMMWORD PTR [r8+0x20]
   140043dce:	movups XMMWORD PTR [rdx+0x20],xmm0
   140043dd2:	movups xmm1,XMMWORD PTR [r8+0x30]
   140043dd7:	movups XMMWORD PTR [rdx+0x30],xmm1
   140043ddb:	jmp    0x140043de5
   140043ddd:	mov    rbp,r8
   140043de0:	mov    QWORD PTR [rsp+0x60],r8
   140043de5:	mov    ebx,DWORD PTR [rcx]
   140043de7:	mov    r12d,0xff00ff00
   140043ded:	mov    r10d,DWORD PTR [rcx+0x4]
   140043df1:	mov    esi,0xff00ff
   140043df6:	mov    r9d,DWORD PTR [rcx+0x8]
   140043dfa:	mov    r8d,DWORD PTR [rcx+0xc]
   140043dfe:	mov    edx,DWORD PTR [rcx+0x10]
   140043e01:	mov    ecx,r8d
   140043e04:	mov    eax,DWORD PTR [rbp+0x0]
   140043e07:	xor    ecx,r9d
   140043e0a:	mov    r11d,eax
   140043e0d:	and    ecx,r10d
   140043e10:	xor    ecx,r8d
   140043e13:	rol    eax,0x8
   140043e16:	and    eax,esi
   140043e18:	ror    r11d,0x8
   140043e1c:	add    edx,0x5a827999
   140043e22:	ror    r10d,0x2
   140043e26:	add    r8d,0x5a827999
   140043e2d:	and    r11d,r12d
   140043e30:	or     r11d,eax
   140043e33:	mov    eax,ebx
   140043e35:	rol    eax,0x5
   140043e38:	mov    DWORD PTR [rsp+0x4c],r11d
   140043e3d:	add    r11d,eax
   140043e40:	mov    eax,DWORD PTR [rbp+0x4]
   140043e43:	add    r11d,ecx
   140043e46:	add    r11d,edx
   140043e49:	mov    ecx,r9d
   140043e4c:	mov    edx,eax
   140043e4e:	xor    ecx,r10d
   140043e51:	rol    eax,0x8
   140043e54:	and    ecx,ebx
   140043e56:	xor    ecx,r9d
   140043e59:	ror    edx,0x8
   140043e5c:	and    eax,esi
   140043e5e:	ror    ebx,0x2
   140043e61:	add    r9d,0x5a827999
   140043e68:	and    edx,r12d
   140043e6b:	or     edx,eax
   140043e6d:	mov    eax,r11d
   140043e70:	rol    eax,0x5
   140043e73:	mov    DWORD PTR [rsp+0x50],edx
   140043e77:	add    edx,eax
   140043e79:	mov    eax,DWORD PTR [rbp+0x8]
   140043e7c:	add    edx,ecx
   140043e7e:	add    edx,r8d
   140043e81:	mov    ecx,r10d
   140043e84:	mov    r8d,eax
   140043e87:	xor    ecx,ebx
   140043e89:	rol    eax,0x8
   140043e8c:	and    ecx,r11d
   140043e8f:	and    eax,esi
   140043e91:	ror    r8d,0x8
   140043e95:	xor    ecx,r10d
   140043e98:	ror    r11d,0x2
   140043e9c:	and    r8d,r12d
   140043e9f:	or     r8d,eax
   140043ea2:	mov    eax,edx
   140043ea4:	rol    eax,0x5
   140043ea7:	mov    DWORD PTR [rsp+0x30],r8d
   140043eac:	add    r8d,eax
   140043eaf:	mov    eax,DWORD PTR [rbp+0xc]
   140043eb2:	add    r8d,ecx
   140043eb5:	add    r8d,r9d
   140043eb8:	mov    ecx,r11d
   140043ebb:	mov    r9d,eax
   140043ebe:	xor    ecx,ebx
   140043ec0:	ror    r9d,0x8
   140043ec4:	and    ecx,edx
   140043ec6:	rol    eax,0x8
   140043ec9:	and    r9d,r12d
   140043ecc:	and    eax,esi
   140043ece:	xor    ecx,ebx
   140043ed0:	or     r9d,eax
   140043ed3:	mov    eax,r8d
   140043ed6:	rol    eax,0x5
   140043ed9:	mov    DWORD PTR [rsp+0x38],r9d
   140043ede:	add    r9d,eax
   140043ee1:	add    r9d,ecx
   140043ee4:	add    r10d,0x5a827999
   140043eeb:	mov    eax,DWORD PTR [rbp+0x10]
   140043eee:	add    r9d,r10d
   140043ef1:	mov    r10d,eax
   140043ef4:	ror    edx,0x2
   140043ef7:	rol    eax,0x8
   140043efa:	add    ebx,0x5a827999
   140043f00:	and    eax,esi
   140043f02:	ror    r10d,0x8
   140043f06:	and    r10d,r12d
   140043f09:	mov    ecx,r11d
   140043f0c:	or     r10d,eax
   140043f0f:	xor    ecx,edx
   140043f11:	and    ecx,r8d
   140043f14:	mov    DWORD PTR [rsp+0x3c],r10d
   140043f19:	xor    ecx,r11d
   140043f1c:	ror    r8d,0x2
   140043f20:	mov    eax,r9d
   140043f23:	rol    eax,0x5
   140043f26:	add    r10d,eax
   140043f29:	mov    eax,DWORD PTR [rbp+0x14]
   140043f2c:	add    r10d,ecx
   140043f2f:	mov    ecx,edx
   140043f31:	xor    ecx,r8d
   140043f34:	add    r10d,ebx
   140043f37:	mov    ebx,eax
   140043f39:	and    ecx,r9d
   140043f3c:	rol    eax,0x8
   140043f3f:	xor    ecx,edx
   140043f41:	and    eax,esi
   140043f43:	ror    ebx,0x8
   140043f46:	and    ebx,r12d
   140043f49:	ror    r9d,0x2
   140043f4d:	or     ebx,eax
   140043f4f:	mov    eax,r10d
   140043f52:	rol    eax,0x5
   140043f55:	add    eax,0x5a827999
   140043f5a:	mov    DWORD PTR [rsp+0x54],ebx
   140043f5e:	add    eax,ebx
   140043f60:	add    ecx,eax
   140043f62:	mov    eax,DWORD PTR [rbp+0x18]
   140043f65:	mov    r13d,eax
   140043f68:	add    r11d,ecx
   140043f6b:	rol    eax,0x8
   140043f6e:	mov    ecx,r8d
   140043f71:	and    eax,esi
   140043f73:	ror    r13d,0x8
   140043f77:	xor    ecx,r9d
   140043f7a:	and    r13d,r12d
   140043f7d:	or     r13d,eax
   140043f80:	and    ecx,r10d
   140043f83:	xor    ecx,r8d
   140043f86:	ror    r10d,0x2
   140043f8a:	mov    eax,r11d
   140043f8d:	rol    eax,0x5
   140043f90:	add    eax,0x5a827999
   140043f95:	add    eax,r13d
   140043f98:	add    ecx,eax
   140043f9a:	mov    eax,DWORD PTR [rbp+0x1c]
   140043f9d:	mov    r14d,eax
   140043fa0:	add    edx,ecx
   140043fa2:	rol    eax,0x8
   140043fa5:	mov    ecx,r9d
   140043fa8:	and    eax,esi
   140043faa:	ror    r14d,0x8
   140043fae:	xor    ecx,r10d
   140043fb1:	and    r14d,r12d
   140043fb4:	or     r14d,eax
   140043fb7:	and    ecx,r11d
   140043fba:	xor    ecx,r9d
   140043fbd:	ror    r11d,0x2
   140043fc1:	mov    eax,edx
   140043fc3:	rol    eax,0x5
   140043fc6:	add    eax,0x5a827999
   140043fcb:	add    eax,r14d
   140043fce:	add    ecx,eax
   140043fd0:	mov    eax,DWORD PTR [rbp+0x20]
   140043fd3:	mov    ebx,eax
   140043fd5:	add    r8d,ecx
   140043fd8:	ror    ebx,0x8
   140043fdb:	and    ebx,r12d
   140043fde:	rol    eax,0x8
   140043fe1:	and    eax,esi
   140043fe3:	add    r9d,0x5a827999
   140043fea:	or     ebx,eax
   140043fec:	mov    ecx,r11d
   140043fef:	xor    ecx,r10d
   140043ff2:	mov    DWORD PTR [rsp+0x34],ebx
   140043ff6:	and    ecx,edx
   140043ff8:	mov    edi,r11d
   140043ffb:	xor    ecx,r10d
   140043ffe:	ror    edx,0x2
   140044001:	xor    edi,edx
   140044003:	add    r10d,0x5a827999
   14004400a:	and    edi,r8d
   14004400d:	mov    eax,r8d
   140044010:	rol    eax,0x5
   140044013:	xor    edi,r11d
   140044016:	add    ebx,eax
   140044018:	ror    r8d,0x2
   14004401c:	mov    eax,DWORD PTR [rbp+0x24]
   14004401f:	add    ebx,ecx
   140044021:	add    ebx,r9d
   140044024:	add    r11d,0x5a827999
   14004402b:	mov    r9d,eax
   14004402e:	rol    eax,0x8
   140044031:	and    eax,esi
   140044033:	ror    r9d,0x8
   140044037:	and    r9d,r12d
   14004403a:	or     r9d,eax
   14004403d:	mov    eax,ebx
   14004403f:	rol    eax,0x5
   140044042:	add    eax,r9d
   140044045:	mov    DWORD PTR [rsp+0xd8],r9d
   14004404d:	add    edi,eax
   14004404f:	mov    r9d,r8d
   140044052:	mov    eax,DWORD PTR [rbp+0x28]
   140044055:	add    edi,r10d
   140044058:	mov    r15d,eax
   14004405b:	mov    r10d,0xff00ff00
   140044061:	rol    eax,0x8
   140044064:	and    eax,esi
   140044066:	ror    r15d,0x8
   14004406a:	and    r15d,r12d
   14004406d:	mov    esi,edx
   14004406f:	or     r15d,eax
   140044072:	xor    esi,r8d
   140044075:	and    esi,ebx
   140044077:	mov    eax,edi
   140044079:	rol    eax,0x5
   14004407c:	xor    esi,edx
   14004407e:	add    eax,r15d
   140044081:	ror    ebx,0x2
   140044084:	add    esi,eax
   140044086:	xor    r9d,ebx
   140044089:	mov    eax,DWORD PTR [rbp+0x2c]
   14004408c:	and    r9d,edi
   14004408f:	mov    r12d,eax
   140044092:	ror    edi,0x2
   140044095:	rol    eax,0x8
   140044098:	add    esi,r11d
   14004409b:	ror    r12d,0x8
   14004409f:	xor    r9d,r8d
   1400440a2:	and    r12d,r10d
   1400440a5:	mov    r11d,0xff00ff
   1400440ab:	and    eax,r11d
   1400440ae:	add    edx,0x5a827999
   1400440b4:	or     r12d,eax
   1400440b7:	mov    eax,esi
   1400440b9:	rol    eax,0x5
   1400440bc:	add    eax,r12d
   1400440bf:	add    r9d,eax
   1400440c2:	mov    eax,DWORD PTR [rbp+0x30]
   1400440c5:	mov    ebp,eax
   1400440c7:	add    r9d,edx
   1400440ca:	ror    ebp,0x8
   1400440cd:	rol    eax,0x8
   1400440d0:	and    ebp,r10d
   1400440d3:	and    eax,r11d
   1400440d6:	mov    r10d,ebx
   1400440d9:	or     ebp,eax
   1400440db:	mov    eax,r9d
   1400440de:	rol    eax,0x5
   1400440e1:	add    eax,ebp
   1400440e3:	xor    r10d,edi
   1400440e6:	and    r10d,esi
   1400440e9:	add    r8d,0x5a827999
   1400440f0:	ror    esi,0x2
   1400440f3:	xor    r10d,ebx
   1400440f6:	add    r10d,eax
   1400440f9:	mov    ecx,esi
   1400440fb:	add    r10d,r8d
   1400440fe:	add    ebx,0x5a827999
   140044104:	mov    r8,QWORD PTR [rsp+0x60]
   140044109:	mov    eax,DWORD PTR [r8+0x34]
   14004410d:	mov    edx,eax
   14004410f:	rol    eax,0x8
   140044112:	and    eax,r11d
   140044115:	ror    edx,0x8
   140044118:	and    edx,0xff00ff00
   14004411e:	mov    r11d,esi
   140044121:	or     edx,eax
   140044123:	xor    r11d,edi
   140044126:	mov    DWORD PTR [rsp+0x44],edx
   14004412a:	and    r11d,r9d
   14004412d:	xor    r11d,edi
   140044130:	ror    r9d,0x2
   140044134:	xor    ecx,r9d
   140044137:	add    edi,0x5a827999
   14004413d:	and    ecx,r10d
   140044140:	mov    eax,r10d
   140044143:	rol    eax,0x5
   140044146:	xor    ecx,esi
   140044148:	add    eax,edx
   14004414a:	ror    r10d,0x2
   14004414e:	add    r11d,eax
   140044151:	add    esi,0x5a827999
   140044157:	mov    eax,DWORD PTR [r8+0x38]
   14004415b:	add    r11d,ebx
   14004415e:	mov    edx,eax
   140044160:	mov    ebx,0xff00ff
   140044165:	rol    eax,0x8
   140044168:	and    eax,ebx
   14004416a:	ror    edx,0x8
   14004416d:	and    edx,0xff00ff00
   140044173:	or     edx,eax
   140044175:	mov    eax,r11d
   140044178:	rol    eax,0x5
   14004417b:	mov    DWORD PTR [rsp+0x40],edx
   14004417f:	add    edx,eax
   140044181:	mov    eax,DWORD PTR [r8+0x3c]
   140044185:	add    edx,ecx
   140044187:	add    edx,edi
   140044189:	mov    r8d,r9d
   14004418c:	mov    edi,eax
   14004418e:	xor    r8d,r10d
   140044191:	rol    eax,0x8
   140044194:	and    r8d,r11d
   140044197:	and    eax,ebx
   140044199:	ror    edi,0x8
   14004419c:	xor    r8d,r9d
   14004419f:	ror    r11d,0x2
   1400441a3:	and    edi,0xff00ff00
   1400441a9:	mov    ecx,r10d
   1400441ac:	or     edi,eax
   1400441ae:	xor    ecx,r11d
   1400441b1:	and    ecx,edx
   1400441b3:	mov    DWORD PTR [rsp+0x48],edi
   1400441b7:	mov    eax,edx
   1400441b9:	xor    ecx,r10d
   1400441bc:	rol    eax,0x5
   1400441bf:	add    eax,edi
   1400441c1:	add    r8d,eax
   1400441c4:	add    r8d,esi
   1400441c7:	mov    esi,DWORD PTR [rsp+0x4c]
   1400441cb:	xor    esi,DWORD PTR [rsp+0x30]
   1400441cf:	mov    eax,r8d
   1400441d2:	xor    esi,DWORD PTR [rsp+0x34]
   1400441d6:	xor    esi,DWORD PTR [rsp+0x44]
   1400441da:	rol    eax,0x5
   1400441dd:	rol    esi,1
   1400441df:	add    eax,0x5a827999
   1400441e4:	mov    DWORD PTR [rsp+0x4c],esi
   1400441e8:	add    eax,esi
   1400441ea:	add    ecx,eax
   1400441ec:	mov    ebx,DWORD PTR [rsp+0x50]
   1400441f0:	xor    ebx,DWORD PTR [rsp+0x38]
   1400441f4:	add    r9d,ecx
   1400441f7:	xor    ebx,DWORD PTR [rsp+0xd8]
   1400441fe:	mov    ecx,r11d
   140044201:	xor    ebx,DWORD PTR [rsp+0x40]
   140044205:	mov    eax,r9d
   140044208:	rol    eax,0x5
   14004420b:	add    eax,0x5a827999
   140044210:	rol    ebx,1
   140044212:	add    eax,ebx
   140044214:	ror    edx,0x2
   140044217:	xor    ecx,edx
   140044219:	mov    DWORD PTR [rsp+0x50],ebx
   14004421d:	and    ecx,r8d
   140044220:	ror    r8d,0x2
   140044224:	xor    ecx,r11d
   140044227:	add    ecx,eax
   140044229:	mov    eax,DWORD PTR [rsp+0x30]
   14004422d:	xor    eax,DWORD PTR [rsp+0x3c]
   140044231:	add    r10d,ecx
   140044234:	xor    eax,r15d
   140044237:	mov    ecx,r8d
   14004423a:	xor    eax,edi
   14004423c:	xor    ecx,edx
   14004423e:	rol    eax,1
   140044240:	and    ecx,r9d
   140044243:	mov    DWORD PTR [rsp+0x30],eax
   140044247:	xor    ecx,edx
   140044249:	mov    edi,DWORD PTR [rsp+0x30]
   14004424d:	mov    eax,r10d
   140044250:	rol    eax,0x5
   140044253:	add    edi,0x5a827999
   140044259:	add    eax,edi
   14004425b:	ror    r9d,0x2
   14004425f:	add    ecx,eax
   140044261:	mov    eax,DWORD PTR [rsp+0x38]
   140044265:	xor    eax,DWORD PTR [rsp+0x54]
   140044269:	add    r11d,ecx
   14004426c:	xor    eax,r12d
   14004426f:	mov    ecx,r8d
   140044272:	xor    eax,esi
   140044274:	xor    ecx,r9d
   140044277:	rol    eax,1
   140044279:	and    ecx,r10d
   14004427c:	mov    DWORD PTR [rsp+0x38],eax
   140044280:	xor    ecx,r8d
   140044283:	mov    esi,DWORD PTR [rsp+0x38]
   140044287:	mov    eax,r11d
   14004428a:	rol    eax,0x5
   14004428d:	add    esi,0x5a827999
   140044293:	add    eax,esi
   140044295:	ror    r10d,0x2
   140044299:	mov    esi,DWORD PTR [rsp+0x3c]
   14004429d:	add    ecx,eax
   14004429f:	add    edx,ecx
   1400442a1:	xor    esi,r13d
   1400442a4:	xor    esi,ebp
   1400442a6:	mov    eax,edx
   1400442a8:	xor    esi,ebx
   1400442aa:	rol    eax,0x5
   1400442ad:	mov    ebx,DWORD PTR [rsp+0x30]
   1400442b1:	add    eax,0x6ed9eba1
   1400442b6:	xor    ebx,DWORD PTR [rsp+0x44]
   1400442ba:	mov    ecx,r9d
   1400442bd:	xor    ebx,DWORD PTR [rsp+0x54]
   1400442c1:	xor    ecx,r10d
   1400442c4:	xor    ecx,r11d
   1400442c7:	rol    esi,1
   1400442c9:	add    eax,esi
   1400442cb:	ror    r11d,0x2
   1400442cf:	add    ecx,eax
   1400442d1:	mov    DWORD PTR [rsp+0x3c],esi
   1400442d5:	add    r8d,ecx
   1400442d8:	xor    ebx,r14d
   1400442db:	mov    eax,r8d
   1400442de:	rol    ebx,1
   1400442e0:	rol    eax,0x5
   1400442e3:	mov    ecx,r10d
   1400442e6:	xor    ecx,r11d
   1400442e9:	mov    edi,DWORD PTR [rsp+0x34]
   1400442ed:	xor    ecx,edx
   1400442ef:	xor    edi,DWORD PTR [rsp+0x38]
   1400442f3:	add    eax,0x6ed9eba1
   1400442f8:	xor    edi,DWORD PTR [rsp+0x40]
   1400442fc:	add    eax,ebx
   1400442fe:	add    ecx,eax
   140044300:	mov    esi,DWORD PTR [rsp+0xd8]
   140044307:	xor    esi,DWORD PTR [rsp+0x3c]
   14004430b:	add    r9d,ecx
   14004430e:	xor    esi,DWORD PTR [rsp+0x48]
   140044312:	mov    ecx,r8d
   140044315:	xor    ecx,r11d
   140044318:	ror    edx,0x2
   14004431b:	xor    esi,r14d
   14004431e:	ror    r8d,0x2
   140044322:	mov    r14d,DWORD PTR [rsp+0x34]
   140044327:	xor    ecx,edx
   140044329:	xor    r14d,r15d
   14004432c:	rol    esi,1
   14004432e:	xor    r14d,ebx
   140044331:	mov    eax,r9d
   140044334:	xor    r14d,DWORD PTR [rsp+0x4c]
   140044339:	xor    edi,r13d
   14004433c:	rol    eax,0x5
   14004433f:	add    eax,0x6ed9eba1
   140044344:	rol    r14d,1
   140044347:	mov    DWORD PTR [rsp+0x34],r14d
   14004434c:	add    r14d,0x6ed9eba1
   140044353:	rol    edi,1
   140044355:	add    eax,edi
   140044357:	add    ecx,eax
   140044359:	add    r10d,ecx
   14004435c:	mov    ecx,r8d
   14004435f:	xor    ecx,r9d
   140044362:	mov    eax,r10d
   140044365:	xor    ecx,edx
   140044367:	rol    eax,0x5
   14004436a:	add    eax,0x6ed9eba1
   14004436f:	ror    r9d,0x2
   140044373:	add    eax,esi
   140044375:	add    ecx,eax
   140044377:	add    r11d,ecx
   14004437a:	mov    ecx,r8d
   14004437d:	xor    ecx,r9d
   140044380:	mov    eax,r11d
   140044383:	xor    ecx,r10d
   140044386:	rol    eax,0x5
   140044389:	add    eax,r14d
   14004438c:	ror    r10d,0x2
   140044390:	mov    r14d,DWORD PTR [rsp+0xd8]
   140044398:	add    ecx,eax
   14004439a:	xor    r14d,r12d
   14004439d:	add    edx,ecx
   14004439f:	xor    r14d,edi
   1400443a2:	mov    eax,edx
   1400443a4:	xor    r14d,DWORD PTR [rsp+0x50]
   1400443a9:	mov    ecx,r9d
   1400443ac:	rol    r14d,1
   1400443af:	xor    ecx,r10d
   1400443b2:	mov    DWORD PTR [rsp+0xd8],r14d
   1400443ba:	xor    ecx,r11d
   1400443bd:	add    r14d,0x6ed9eba1
   1400443c4:	rol    eax,0x5
   1400443c7:	add    eax,r14d
   1400443ca:	ror    r11d,0x2
   1400443ce:	mov    r14d,DWORD PTR [rsp+0x30]
   1400443d3:	add    ecx,eax
   1400443d5:	add    r8d,ecx
   1400443d8:	xor    r14d,r15d
   1400443db:	xor    r14d,ebp
   1400443de:	mov    eax,r8d
   1400443e1:	rol    eax,0x5
   1400443e4:	xor    r14d,esi
   1400443e7:	add    eax,0x6ed9eba1
   1400443ec:	rol    r14d,1
   1400443ef:	mov    ecx,r10d
   1400443f2:	add    eax,r14d
   1400443f5:	xor    ecx,r11d
   1400443f8:	xor    ecx,edx
   1400443fa:	add    ecx,eax
   1400443fc:	mov    r13d,DWORD PTR [rsp+0x44]
   140044401:	add    r9d,ecx
   140044404:	mov    r15d,DWORD PTR [rsp+0x34]
   140044409:	mov    eax,r9d
   14004440c:	xor    r15d,DWORD PTR [rsp+0x38]
   140044411:	mov    ecx,r8d
   140044414:	rol    eax,0x5
   140044417:	xor    ecx,r11d
   14004441a:	add    eax,0x6ed9eba1
   14004441f:	ror    edx,0x2
   140044422:	xor    ecx,edx
   140044424:	ror    r8d,0x2
   140044428:	xor    r15d,r13d
   14004442b:	xor    r13d,r14d
   14004442e:	xor    r15d,r12d
   140044431:	xor    r13d,ebx
   140044434:	mov    r12d,DWORD PTR [rsp+0xd8]
   14004443c:	xor    r12d,DWORD PTR [rsp+0x3c]
   140044441:	xor    r12d,DWORD PTR [rsp+0x40]
   140044446:	xor    r12d,ebp
   140044449:	rol    r15d,1
   14004444c:	mov    ebp,DWORD PTR [rsp+0x48]
   140044450:	add    eax,r15d
   140044453:	add    ecx,eax
   140044455:	rol    r12d,1
   140044458:	add    r10d,ecx
   14004445b:	mov    DWORD PTR [rsp+0x68],r12d
   140044460:	xor    r13d,ebp
   140044463:	mov    eax,r10d
   140044466:	rol    eax,0x5
   140044469:	xor    ebp,r12d
   14004446c:	add    eax,0x6ed9eba1
   140044471:	rol    r13d,1
   140044474:	add    eax,r12d
   140044477:	mov    DWORD PTR [rsp+0x44],r13d
   14004447c:	add    r13d,0x6ed9eba1
   140044483:	xor    ebp,esi
   140044485:	xor    ebp,DWORD PTR [rsp+0x50]
   140044489:	mov    ecx,r8d
   14004448c:	xor    ecx,r9d
   14004448f:	rol    ebp,1
   140044491:	xor    ecx,edx
   140044493:	ror    r9d,0x2
   140044497:	add    ecx,eax
   140044499:	mov    DWORD PTR [rsp+0x48],ebp
   14004449d:	add    r11d,ecx
   1400444a0:	add    ebp,0x6ed9eba1
   1400444a6:	mov    eax,r11d
   1400444a9:	mov    ecx,r8d
   1400444ac:	rol    eax,0x5
   1400444af:	xor    ecx,r9d
   1400444b2:	add    eax,r13d
   1400444b5:	xor    ecx,r10d
   1400444b8:	add    ecx,eax
   1400444ba:	ror    r10d,0x2
   1400444be:	mov    eax,DWORD PTR [rsp+0x40]
   1400444c2:	add    edx,ecx
   1400444c4:	xor    eax,r15d
   1400444c7:	mov    ecx,r9d
   1400444ca:	xor    eax,edi
   1400444cc:	xor    ecx,r10d
   1400444cf:	xor    eax,DWORD PTR [rsp+0x4c]
   1400444d3:	xor    ecx,r11d
   1400444d6:	rol    eax,1
   1400444d8:	mov    DWORD PTR [rsp+0x40],eax
   1400444dc:	mov    eax,edx
   1400444de:	mov    r13d,DWORD PTR [rsp+0x40]
   1400444e3:	rol    eax,0x5
   1400444e6:	add    r13d,0x6ed9eba1
   1400444ed:	add    eax,r13d
   1400444f0:	ror    r11d,0x2
   1400444f4:	add    ecx,eax
   1400444f6:	add    r8d,ecx
   1400444f9:	mov    ecx,r10d
   1400444fc:	xor    ecx,r11d
   1400444ff:	mov    eax,r8d
   140044502:	rol    eax,0x5
   140044505:	xor    ecx,edx
   140044507:	add    eax,ebp
   140044509:	add    ecx,eax
   14004450b:	add    r9d,ecx
   14004450e:	mov    r12d,DWORD PTR [rsp+0x30]
   140044513:	mov    eax,r9d
   140044516:	mov    r13d,DWORD PTR [rsp+0x38]
   14004451b:	mov    ebp,r12d
   14004451e:	xor    r12d,DWORD PTR [rsp+0x3c]
   140044523:	mov    ecx,r8d
   140044526:	xor    ebp,DWORD PTR [rsp+0x34]
   14004452a:	xor    ecx,r11d
   14004452d:	xor    r13d,DWORD PTR [rsp+0xd8]
   140044535:	xor    r12d,r14d
   140044538:	xor    r12d,DWORD PTR [rsp+0x48]
   14004453d:	xor    ebp,DWORD PTR [rsp+0x44]
   140044541:	xor    r13d,DWORD PTR [rsp+0x40]
   140044546:	xor    ebp,DWORD PTR [rsp+0x4c]
   14004454a:	xor    r13d,DWORD PTR [rsp+0x50]
   14004454f:	rol    eax,0x5
   140044552:	add    eax,0x6ed9eba1
   140044557:	rol    r12d,1
   14004455a:	mov    DWORD PTR [rsp+0x30],r12d
   14004455f:	add    r12d,0x6ed9eba1
   140044566:	ror    edx,0x2
   140044569:	xor    ecx,edx
   14004456b:	ror    r8d,0x2
   14004456f:	rol    ebp,1
   140044571:	add    eax,ebp
   140044573:	rol    r13d,1
   140044576:	add    ecx,eax
   140044578:	add    r10d,ecx
   14004457b:	mov    ecx,r8d
   14004457e:	xor    ecx,r9d
   140044581:	mov    eax,r10d
   140044584:	rol    eax,0x5
   140044587:	xor    ecx,edx
   140044589:	add    eax,0x6ed9eba1
   14004458e:	ror    r9d,0x2
   140044592:	add    eax,r13d
   140044595:	add    ecx,eax
   140044597:	add    r11d,ecx
   14004459a:	mov    ecx,r8d
   14004459d:	xor    ecx,r9d
   1400445a0:	mov    eax,r11d
   1400445a3:	rol    eax,0x5
   1400445a6:	xor    ecx,r10d
   1400445a9:	add    eax,r12d
   1400445ac:	ror    r10d,0x2
   1400445b0:	add    ecx,eax
   1400445b2:	mov    eax,DWORD PTR [rsp+0x38]
   1400445b6:	xor    eax,ebx
   1400445b8:	add    edx,ecx
   1400445ba:	xor    eax,r15d
   1400445bd:	mov    ecx,r9d
   1400445c0:	xor    eax,ebp
   1400445c2:	xor    ecx,r10d
   1400445c5:	rol    eax,1
   1400445c7:	xor    ecx,r11d
   1400445ca:	mov    DWORD PTR [rsp+0x38],eax
   1400445ce:	mov    eax,edx
   1400445d0:	mov    r12d,DWORD PTR [rsp+0x38]
   1400445d5:	rol    eax,0x5
   1400445d8:	add    r12d,0x6ed9eba1
   1400445df:	add    eax,r12d
   1400445e2:	ror    r11d,0x2
   1400445e6:	add    ecx,eax
   1400445e8:	mov    eax,DWORD PTR [rsp+0x3c]
   1400445ec:	xor    eax,edi
   1400445ee:	add    r8d,ecx
   1400445f1:	xor    eax,DWORD PTR [rsp+0x68]
   1400445f5:	mov    ecx,r10d
   1400445f8:	xor    eax,r13d
   1400445fb:	xor    ecx,r11d
   1400445fe:	rol    eax,1
   140044600:	xor    ecx,edx
   140044602:	mov    DWORD PTR [rsp+0x3c],eax
   140044606:	mov    eax,r8d
   140044609:	mov    r12d,DWORD PTR [rsp+0x3c]
   14004460e:	add    r12d,0x6ed9eba1
   140044615:	rol    eax,0x5
   140044618:	add    eax,r12d
   14004461b:	add    ecx,eax
   14004461d:	add    r9d,ecx
   140044620:	ror    edx,0x2
   140044623:	mov    eax,DWORD PTR [rsp+0x30]
   140044627:	mov    ecx,r8d
   14004462a:	xor    eax,DWORD PTR [rsp+0x44]
   14004462e:	xor    ecx,r11d
   140044631:	xor    eax,ebx
   140044633:	ror    r8d,0x2
   140044637:	xor    eax,esi
   140044639:	xor    ecx,edx
   14004463b:	rol    eax,1
   14004463d:	mov    DWORD PTR [rsp+0x5c],eax
   140044641:	mov    eax,r9d
   140044644:	mov    ebx,DWORD PTR [rsp+0x5c]
   140044648:	add    ebx,0x6ed9eba1
   14004464e:	rol    eax,0x5
   140044651:	add    eax,ebx
   140044653:	mov    ebx,DWORD PTR [rsp+0x34]
   140044657:	xor    ebx,DWORD PTR [rsp+0x38]
   14004465b:	add    ecx,eax
   14004465d:	xor    ebx,DWORD PTR [rsp+0x40]
   140044661:	add    r10d,ecx
   140044664:	xor    ebx,edi
   140044666:	mov    ecx,r8d
   140044669:	mov    edi,DWORD PTR [rsp+0x5c]
   14004466d:	xor    ecx,r9d
   140044670:	xor    ecx,edx
   140044672:	rol    ebx,1
   140044674:	mov    DWORD PTR [rsp+0x58],ebx
   140044678:	add    edx,0x6ed9eba1
   14004467e:	add    ebx,0x6ed9eba1
   140044684:	ror    r9d,0x2
   140044688:	mov    eax,r10d
   14004468b:	rol    eax,0x5
   14004468e:	add    eax,ebx
   140044690:	mov    ebx,DWORD PTR [rsp+0xd8]
   140044697:	xor    ebx,DWORD PTR [rsp+0x3c]
   14004469b:	add    ecx,eax
   14004469d:	xor    ebx,DWORD PTR [rsp+0x48]
   1400446a1:	add    r11d,ecx
   1400446a4:	xor    ebx,esi
   1400446a6:	mov    ecx,r8d
   1400446a9:	mov    esi,DWORD PTR [rsp+0x34]
   1400446ad:	xor    ecx,r9d
   1400446b0:	xor    ecx,r10d
   1400446b3:	rol    ebx,1
   1400446b5:	xor    esi,r14d
   1400446b8:	mov    DWORD PTR [rsp+0x54],ebx
   1400446bc:	xor    esi,edi
   1400446be:	ror    r10d,0x2
   1400446c2:	xor    esi,ebp
   1400446c4:	mov    eax,r11d
   1400446c7:	rol    esi,1
   1400446c9:	rol    eax,0x5
   1400446cc:	add    ebx,eax
   1400446ce:	mov    DWORD PTR [rsp+0x34],esi
   1400446d2:	add    ebx,ecx
   1400446d4:	mov    eax,r10d
   1400446d7:	add    ebx,edx
   1400446d9:	and    eax,r11d
   1400446dc:	mov    ecx,r10d
   1400446df:	mov    edx,ebx
   1400446e1:	or     ecx,r11d
   1400446e4:	rol    edx,0x5
   1400446e7:	and    ecx,r9d
   1400446ea:	ror    r11d,0x2
   1400446ee:	or     ecx,eax
   1400446f0:	mov    eax,r11d
   1400446f3:	add    ecx,esi
   1400446f5:	mov    esi,DWORD PTR [rsp+0xd8]
   1400446fc:	add    ecx,r8d
   1400446ff:	xor    esi,r15d
   140044702:	xor    esi,DWORD PTR [rsp+0x58]
   140044706:	lea    r8d,[rdx-0x70e44324]
   14004470d:	add    r8d,ecx
   140044710:	xor    esi,r13d
   140044713:	rol    esi,1
   140044715:	mov    edx,r8d
   140044718:	mov    ecx,r11d
   14004471b:	rol    edx,0x5
   14004471e:	or     ecx,ebx
   140044720:	mov    DWORD PTR [rsp+0xd8],esi
   140044727:	and    ecx,r10d
   14004472a:	and    eax,ebx
   14004472c:	ror    ebx,0x2
   14004472f:	or     ecx,eax
   140044731:	mov    eax,DWORD PTR [rsp+0x30]
   140044735:	xor    eax,r14d
   140044738:	add    ecx,esi
   14004473a:	xor    eax,DWORD PTR [rsp+0x68]
   14004473e:	add    ecx,r9d
   140044741:	xor    eax,DWORD PTR [rsp+0x54]
   140044745:	lea    r9d,[rdx-0x70e44324]
   14004474c:	mov    r14d,DWORD PTR [rsp+0x48]
   140044751:	add    r9d,ecx
   140044754:	rol    eax,1
   140044756:	mov    ecx,r8d
   140044759:	mov    DWORD PTR [rsp+0x50],eax
   14004475d:	or     ecx,ebx
   14004475f:	and    ecx,r11d
   140044762:	mov    eax,r8d
   140044765:	and    eax,ebx
   140044767:	ror    r8d,0x2
   14004476b:	or     ecx,eax
   14004476d:	mov    edx,r9d
   140044770:	add    ecx,DWORD PTR [rsp+0x50]
   140044774:	mov    eax,DWORD PTR [rsp+0x34]
   140044778:	add    ecx,r10d
   14004477b:	xor    eax,DWORD PTR [rsp+0x38]
   14004477f:	xor    eax,DWORD PTR [rsp+0x44]
   140044783:	xor    eax,r15d
   140044786:	rol    edx,0x5
   140044789:	rol    eax,1
   14004478b:	mov    DWORD PTR [rsp+0x4c],eax
   14004478f:	mov    eax,r8d
   140044792:	and    eax,r9d
   140044795:	lea    r10d,[rdx-0x70e44324]
   14004479c:	add    r10d,ecx
   14004479f:	mov    ecx,r8d
   1400447a2:	or     ecx,r9d
   1400447a5:	mov    edx,r10d
   1400447a8:	and    ecx,ebx
   1400447aa:	rol    edx,0x5
   1400447ad:	or     ecx,eax
   1400447af:	ror    r9d,0x2
   1400447b3:	add    ecx,DWORD PTR [rsp+0x4c]
   1400447b7:	mov    eax,esi
   1400447b9:	xor    eax,DWORD PTR [rsp+0x3c]
   1400447bd:	add    ecx,r11d
   1400447c0:	xor    eax,DWORD PTR [rsp+0x40]
   1400447c4:	lea    r11d,[rdx-0x70e44324]
   1400447cb:	xor    eax,DWORD PTR [rsp+0x68]
   1400447cf:	add    r11d,ecx
   1400447d2:	rol    eax,1
   1400447d4:	mov    ecx,r9d
   1400447d7:	mov    DWORD PTR [rsp+0x5c],eax
   1400447db:	or     ecx,r10d
   1400447de:	mov    r12d,DWORD PTR [rsp+0x5c]
   1400447e3:	and    ecx,r8d
   1400447e6:	mov    eax,r9d
   1400447e9:	mov    edx,r11d
   1400447ec:	and    eax,r10d
   1400447ef:	rol    edx,0x5
   1400447f2:	or     ecx,eax
   1400447f4:	ror    r10d,0x2
   1400447f8:	mov    eax,DWORD PTR [rsp+0x44]
   1400447fc:	add    ecx,r12d
   1400447ff:	xor    eax,DWORD PTR [rsp+0x50]
   140044803:	add    ecx,ebx
   140044805:	xor    eax,edi
   140044807:	lea    ebx,[rdx-0x70e44324]
   14004480d:	add    ebx,ecx
   14004480f:	xor    eax,r14d
   140044812:	rol    eax,1
   140044814:	mov    ecx,r10d
   140044817:	mov    DWORD PTR [rsp+0x44],eax
   14004481b:	or     ecx,r11d
   14004481e:	and    ecx,r9d
   140044821:	mov    eax,r10d
   140044824:	and    eax,r11d
   140044827:	mov    edx,ebx
   140044829:	or     ecx,eax
   14004482b:	rol    edx,0x5
   14004482e:	add    ecx,DWORD PTR [rsp+0x44]
   140044832:	mov    eax,DWORD PTR [rsp+0x40]
   140044836:	add    ecx,r8d
   140044839:	xor    eax,DWORD PTR [rsp+0x4c]
   14004483d:	lea    r8d,[rdx-0x70e44324]
   140044844:	mov    r15d,DWORD PTR [rsp+0x58]
   140044849:	add    r8d,ecx
   14004484c:	mov    esi,DWORD PTR [rsp+0x30]
   140044850:	xor    eax,r15d
   140044853:	xor    esi,DWORD PTR [rsp+0x34]
   140044857:	xor    eax,ebp
   140044859:	xor    esi,DWORD PTR [rsp+0x44]
   14004485d:	xor    r14d,r12d
   140044860:	xor    r14d,DWORD PTR [rsp+0x54]
   140044865:	xor    esi,ebp
   140044867:	mov    ebp,DWORD PTR [rsp+0x3c]
   14004486b:	xor    r14d,r13d
   14004486e:	rol    eax,1
   140044870:	mov    edx,r8d
   140044873:	mov    DWORD PTR [rsp+0x40],eax
   140044877:	rol    edx,0x5
   14004487a:	rol    r14d,1
   14004487d:	ror    r11d,0x2
   140044881:	mov    DWORD PTR [rsp+0x48],r14d
   140044886:	mov    ecx,r11d
   140044889:	or     ecx,ebx
   14004488b:	rol    esi,1
   14004488d:	and    ecx,r10d
   140044890:	mov    DWORD PTR [rsp+0x58],esi
   140044894:	mov    eax,r11d
   140044897:	and    eax,ebx
   140044899:	ror    ebx,0x2
   14004489c:	or     ecx,eax
   14004489e:	mov    eax,r8d
   1400448a1:	add    ecx,DWORD PTR [rsp+0x40]
   1400448a5:	and    eax,ebx
   1400448a7:	add    ecx,r9d
   1400448aa:	lea    r9d,[rdx-0x70e44324]
   1400448b1:	add    r9d,ecx
   1400448b4:	mov    ecx,r8d
   1400448b7:	or     ecx,ebx
   1400448b9:	ror    r8d,0x2
   1400448bd:	and    ecx,r11d
   1400448c0:	mov    edx,r9d
   1400448c3:	or     ecx,eax
   1400448c5:	rol    edx,0x5
   1400448c8:	add    ecx,r14d
   1400448cb:	mov    eax,r8d
   1400448ce:	mov    r14d,DWORD PTR [rsp+0x38]
   1400448d3:	add    ecx,r10d
   1400448d6:	xor    r14d,DWORD PTR [rsp+0xd8]
   1400448de:	and    eax,r9d
   1400448e1:	xor    r14d,DWORD PTR [rsp+0x40]
   1400448e6:	lea    r10d,[rdx-0x70e44324]
   1400448ed:	add    r10d,ecx
   1400448f0:	xor    r14d,r13d
   1400448f3:	rol    r14d,1
   1400448f6:	mov    edx,r10d
   1400448f9:	rol    edx,0x5
   1400448fc:	mov    ecx,r8d
   1400448ff:	or     ecx,r9d
   140044902:	mov    DWORD PTR [rsp+0x6c],r14d
   140044907:	and    ecx,ebx
   140044909:	ror    r9d,0x2
   14004490d:	or     ecx,eax
   14004490f:	mov    eax,r9d
   140044912:	add    ecx,esi
   140044914:	and    eax,r10d
   140044917:	add    ecx,r11d
   14004491a:	lea    r11d,[rdx-0x70e44324]
   140044921:	add    r11d,ecx
   140044924:	mov    ecx,r9d
   140044927:	or     ecx,r10d
   14004492a:	mov    edx,r11d
   14004492d:	and    ecx,r8d
   140044930:	rol    edx,0x5
   140044933:	or     ecx,eax
   140044935:	add    ecx,r14d
   140044938:	add    ecx,ebx
   14004493a:	lea    ebx,[rdx-0x70e44324]
   140044940:	add    ebx,ecx
   140044942:	ror    r10d,0x2
   140044946:	mov    r13d,DWORD PTR [rsp+0x30]
   14004494b:	mov    ecx,r10d
   14004494e:	or     ecx,r11d
   140044951:	xor    r13d,ebp
   140044954:	xor    r13d,DWORD PTR [rsp+0x50]
   140044959:	and    ecx,r9d
   14004495c:	xor    r13d,DWORD PTR [rsp+0x48]
   140044961:	xor    ebp,r15d
   140044964:	xor    ebp,r12d
   140044967:	rol    r13d,1
   14004496a:	mov    r12d,DWORD PTR [rsp+0x34]
   14004496f:	xor    ebp,r14d
   140044972:	rol    ebp,1
   140044974:	mov    eax,r10d
   140044977:	and    eax,r11d
   14004497a:	mov    DWORD PTR [rsp+0x30],r13d
   14004497f:	or     ecx,eax
   140044981:	mov    DWORD PTR [rsp+0x3c],ebp
   140044985:	add    ecx,r13d
   140044988:	ror    r11d,0x2
   14004498c:	mov    r13d,DWORD PTR [rsp+0x38]
   140044991:	add    ecx,r8d
   140044994:	xor    r13d,edi
   140044997:	add    ebp,0x8f1bbcdc
   14004499d:	xor    r13d,DWORD PTR [rsp+0x4c]
   1400449a2:	mov    edx,ebx
   1400449a4:	rol    edx,0x5
   1400449a7:	xor    r13d,esi
   1400449aa:	rol    r13d,1
   1400449ad:	mov    eax,r11d
   1400449b0:	and    eax,ebx
   1400449b2:	mov    DWORD PTR [rsp+0x38],r13d
   1400449b7:	xor    r12d,DWORD PTR [rsp+0x38]
   1400449bc:	xor    r12d,DWORD PTR [rsp+0x40]
   1400449c1:	lea    r8d,[rdx-0x70e44324]
   1400449c8:	add    r8d,ecx
   1400449cb:	xor    r12d,r15d
   1400449ce:	mov    ecx,r11d
   1400449d1:	mov    edx,r8d
   1400449d4:	or     ecx,ebx
   1400449d6:	rol    edx,0x5
   1400449d9:	and    ecx,r10d
   1400449dc:	ror    ebx,0x2
   1400449df:	or     ecx,eax
   1400449e1:	mov    eax,r8d
   1400449e4:	add    ecx,r13d
   1400449e7:	and    eax,ebx
   1400449e9:	mov    r13d,DWORD PTR [rsp+0x54]
   1400449ee:	add    ecx,r9d
   1400449f1:	lea    r9d,[rdx-0x70e44324]
   1400449f8:	add    r9d,ecx
   1400449fb:	mov    ecx,r8d
   1400449fe:	or     ecx,ebx
   140044a00:	ror    r8d,0x2
   140044a04:	and    ecx,r11d
   140044a07:	mov    edx,r9d
   140044a0a:	or     ecx,eax
   140044a0c:	rol    edx,0x5
   140044a0f:	add    ecx,ebp
   140044a11:	add    r11d,0x8f1bbcdc
   140044a18:	mov    ebp,DWORD PTR [rsp+0x30]
   140044a1c:	add    r10d,ecx
   140044a1f:	xor    ebp,DWORD PTR [rsp+0x44]
   140044a23:	add    r10d,edx
   140044a26:	xor    ebp,edi
   140044a28:	mov    ecx,r8d
   140044a2b:	or     ecx,r9d
   140044a2e:	xor    ebp,r13d
   140044a31:	and    ecx,ebx
   140044a33:	rol    ebp,1
   140044a35:	mov    eax,r8d
   140044a38:	mov    DWORD PTR [rsp+0x54],ebp
   140044a3c:	and    eax,r9d
   140044a3f:	mov    edi,r10d
   140044a42:	or     ecx,eax
   140044a44:	rol    edi,0x5
   140044a47:	add    ecx,ebp
   140044a49:	ror    r9d,0x2
   140044a4d:	add    ecx,r11d
   140044a50:	add    edi,ecx
   140044a52:	rol    r12d,1
   140044a55:	mov    r11d,DWORD PTR [rsp+0xd8]
   140044a5d:	add    ebx,0x8f1bbcdc
   140044a63:	mov    r15d,r11d
   140044a66:	mov    DWORD PTR [rsp+0x70],r12d
   140044a6b:	xor    r11d,DWORD PTR [rsp+0x4c]
   140044a70:	mov    ecx,r9d
   140044a73:	xor    r15d,DWORD PTR [rsp+0x3c]
   140044a78:	or     ecx,r10d
   140044a7b:	xor    r15d,DWORD PTR [rsp+0x48]
   140044a80:	and    ecx,r8d
   140044a83:	xor    r15d,r13d
   140044a86:	xor    r11d,r12d
   140044a89:	mov    r13d,DWORD PTR [rsp+0x34]
   140044a8e:	xor    r11d,r14d
   140044a91:	xor    r13d,DWORD PTR [rsp+0x50]
   140044a96:	mov    eax,r9d
   140044a99:	and    eax,r10d
   140044a9c:	rol    r11d,1
   140044a9f:	or     ecx,eax
   140044aa1:	ror    r10d,0x2
   140044aa5:	add    ecx,r12d
   140044aa8:	rol    r15d,1
   140044aab:	add    ecx,ebx
   140044aad:	mov    DWORD PTR [rsp+0xd8],r11d
   140044ab5:	xor    r13d,ebp
   140044ab8:	mov    DWORD PTR [rsp+0x68],r15d
   140044abd:	xor    r13d,DWORD PTR [rsp+0x58]
   140044ac2:	mov    eax,r10d
   140044ac5:	mov    ebp,DWORD PTR [rsp+0x30]
   140044ac9:	and    eax,edi
   140044acb:	xor    ebp,DWORD PTR [rsp+0x50]
   140044acf:	mov    esi,edi
   140044ad1:	xor    ebp,DWORD PTR [rsp+0x5c]
   140044ad5:	rol    esi,0x5
   140044ad8:	xor    ebp,r15d
   140044adb:	add    esi,ecx
   140044add:	rol    r13d,1
   140044ae0:	mov    ecx,r10d
   140044ae3:	rol    ebp,1
   140044ae5:	or     ecx,edi
   140044ae7:	mov    DWORD PTR [rsp+0x34],r13d
   140044aec:	and    ecx,r9d
   140044aef:	ror    edi,0x2
   140044af2:	or     ecx,eax
   140044af4:	mov    DWORD PTR [rsp+0x50],ebp
   140044af8:	add    ecx,0x8f1bbcdc
   140044afe:	mov    ebx,esi
   140044b00:	add    ecx,r15d
   140044b03:	rol    ebx,0x5
   140044b06:	add    ecx,r8d
   140044b09:	mov    eax,edi
   140044b0b:	add    ebx,ecx
   140044b0d:	and    eax,esi
   140044b0f:	mov    edx,ebx
   140044b11:	mov    ecx,edi
   140044b13:	or     ecx,esi
   140044b15:	rol    edx,0x5
   140044b18:	and    ecx,r10d
   140044b1b:	ror    esi,0x2
   140044b1e:	or     ecx,eax
   140044b20:	add    r10d,0x8f1bbcdc
   140044b27:	add    ecx,r13d
   140044b2a:	mov    eax,ebx
   140044b2c:	add    ecx,r9d
   140044b2f:	and    eax,esi
   140044b31:	lea    r9d,[rdx-0x70e44324]
   140044b38:	add    r9d,ecx
   140044b3b:	mov    ecx,ebx
   140044b3d:	or     ecx,esi
   140044b3f:	ror    ebx,0x2
   140044b42:	and    ecx,edi
   140044b44:	mov    edx,r9d
   140044b47:	or     ecx,eax
   140044b49:	rol    edx,0x5
   140044b4c:	add    r11d,ecx
   140044b4f:	mov    ecx,ebx
   140044b51:	add    r11d,r10d
   140044b54:	add    r11d,edx
   140044b57:	mov    r10d,r11d
   140044b5a:	rol    r10d,0x5
   140044b5e:	or     ecx,r9d
   140044b61:	and    ecx,esi
   140044b63:	mov    eax,ebx
   140044b65:	and    eax,r9d
   140044b68:	add    edi,0x8f1bbcdc
   140044b6e:	or     ecx,eax
   140044b70:	ror    r9d,0x2
   140044b74:	add    ecx,ebp
   140044b76:	mov    r14d,r13d
   140044b79:	xor    r14d,DWORD PTR [rsp+0x38]
   140044b7e:	add    ecx,edi
   140044b80:	xor    r14d,DWORD PTR [rsp+0x44]
   140044b85:	add    r10d,ecx
   140044b88:	xor    r14d,DWORD PTR [rsp+0x4c]
   140044b8d:	mov    ecx,r9d
   140044b90:	mov    edi,DWORD PTR [rsp+0x40]
   140044b94:	or     ecx,r11d
   140044b97:	mov    r13d,DWORD PTR [rsp+0xd8]
   140044b9f:	and    ecx,ebx
   140044ba1:	xor    r13d,DWORD PTR [rsp+0x3c]
   140044ba6:	add    ebx,0xca62c1d6
   140044bac:	xor    r13d,edi
   140044baf:	rol    r14d,1
   140044bb2:	xor    r13d,DWORD PTR [rsp+0x5c]
   140044bb7:	xor    edi,r14d
   140044bba:	xor    edi,r12d
   140044bbd:	rol    r13d,1
   140044bc0:	xor    edi,DWORD PTR [rsp+0x58]
   140044bc4:	mov    eax,r9d
   140044bc7:	mov    r12d,DWORD PTR [rsp+0x48]
   140044bcc:	and    eax,r11d
   140044bcf:	or     ecx,eax
   140044bd1:	ror    r11d,0x2
   140044bd5:	add    ecx,0x8f1bbcdc
   140044bdb:	rol    edi,1
   140044bdd:	add    ecx,r14d
   140044be0:	mov    DWORD PTR [rsp+0x4c],r14d
   140044be5:	add    ecx,esi
   140044be7:	mov    DWORD PTR [rsp+0x40],edi
   140044beb:	mov    eax,r9d
   140044bee:	xor    r12d,r13d
   140044bf1:	xor    eax,r11d
   140044bf4:	mov    r8d,r10d
   140044bf7:	xor    eax,r10d
   140044bfa:	rol    r8d,0x5
   140044bfe:	add    eax,r13d
   140044c01:	ror    r10d,0x2
   140044c05:	add    eax,ebx
   140044c07:	add    r8d,ecx
   140044c0a:	mov    ebx,DWORD PTR [rsp+0x44]
   140044c0e:	mov    edx,r8d
   140044c11:	xor    ebx,ebp
   140044c13:	rol    edx,0x5
   140044c16:	xor    ebx,DWORD PTR [rsp+0x54]
   140044c1a:	add    edx,eax
   140044c1c:	xor    ebx,DWORD PTR [rsp+0x48]
   140044c20:	mov    eax,r11d
   140044c23:	xor    eax,r10d
   140044c26:	rol    ebx,1
   140044c28:	xor    eax,r8d
   140044c2b:	mov    DWORD PTR [rsp+0x44],ebx
   140044c2f:	add    eax,ebx
   140044c31:	ror    r8d,0x2
   140044c35:	add    eax,r9d
   140044c38:	mov    ecx,edx
   140044c3a:	rol    ecx,0x5
   140044c3d:	xor    r12d,r15d
   140044c40:	xor    r12d,DWORD PTR [rsp+0x6c]
   140044c45:	lea    r9d,[rcx-0x359d3e2a]
   140044c4c:	add    r9d,eax
   140044c4f:	mov    eax,edx
   140044c51:	xor    eax,r10d
   140044c54:	ror    edx,0x2
   140044c57:	xor    eax,r8d
   140044c5a:	mov    ecx,r9d
   140044c5d:	rol    ecx,0x5
   140044c60:	add    eax,edi
   140044c62:	add    eax,r11d
   140044c65:	lea    r11d,[rcx-0x359d3e2a]
   140044c6c:	add    r11d,eax
   140044c6f:	rol    r12d,1
   140044c72:	mov    DWORD PTR [rsp+0x48],r12d
   140044c77:	mov    r15d,DWORD PTR [rsp+0x30]
   140044c7c:	mov    eax,edx
   140044c7e:	xor    r15d,DWORD PTR [rsp+0x34]
   140044c83:	xor    eax,r9d
   140044c86:	xor    eax,r8d
   140044c89:	ror    r9d,0x2
   140044c8d:	add    eax,r12d
   140044c90:	add    r8d,0xca62c1d6
   140044c97:	add    eax,r10d
   140044c9a:	xor    r15d,ebx
   140044c9d:	xor    r15d,DWORD PTR [rsp+0x58]
   140044ca2:	mov    ecx,r11d
   140044ca5:	rol    ecx,0x5
   140044ca8:	rol    r15d,1
   140044cab:	lea    r10d,[rcx-0x359d3e2a]
   140044cb2:	add    r10d,eax
   140044cb5:	mov    rax,QWORD PTR [rsp+0x60]
   140044cba:	mov    ebx,r10d
   140044cbd:	rol    ebx,0x5
   140044cc0:	mov    DWORD PTR [rax],r15d
   140044cc3:	mov    eax,edx
   140044cc5:	xor    eax,r9d
   140044cc8:	xor    eax,r11d
   140044ccb:	ror    r11d,0x2
   140044ccf:	add    eax,r15d
   140044cd2:	add    eax,r8d
   140044cd5:	mov    r8d,DWORD PTR [rsp+0x38]
   140044cda:	add    ebx,eax
   140044cdc:	mov    r12d,r8d
   140044cdf:	xor    r8d,DWORD PTR [rsp+0x54]
   140044ce4:	mov    ecx,ebx
   140044ce6:	xor    r12d,DWORD PTR [rsp+0xd8]
   140044cee:	xor    r8d,r14d
   140044cf1:	mov    rax,QWORD PTR [rsp+0x60]
   140044cf6:	xor    r12d,edi
   140044cf9:	xor    r12d,DWORD PTR [rsp+0x6c]
   140044cfe:	xor    r8d,r15d
   140044d01:	mov    edi,DWORD PTR [rsp+0x30]
   140044d05:	xor    edi,DWORD PTR [rsp+0x3c]
   140044d09:	mov    r14,QWORD PTR [rsp+0x60]
   140044d0e:	xor    edi,ebp
   140044d10:	xor    edi,DWORD PTR [rsp+0x48]
   140044d14:	rol    ecx,0x5
   140044d17:	rol    edi,1
   140044d19:	rol    r8d,1
   140044d1c:	rol    r12d,1
   140044d1f:	mov    DWORD PTR [rax+0x4],r12d
   140044d23:	mov    eax,r9d
   140044d26:	xor    eax,r11d
   140044d29:	mov    DWORD PTR [rsp+0x30],edi
   140044d2d:	xor    eax,r10d
   140044d30:	mov    DWORD PTR [rsp+0x38],r8d
   140044d35:	add    eax,r12d
   140044d38:	ror    r10d,0x2
   140044d3c:	add    eax,edx
   140044d3e:	mov    DWORD PTR [r14+0xc],r8d
   140044d42:	lea    edx,[rcx-0x359d3e2a]
   140044d48:	add    edx,eax
   140044d4a:	mov    rax,QWORD PTR [rsp+0x60]
   140044d4f:	mov    ecx,edx
   140044d51:	rol    ecx,0x5
   140044d54:	mov    DWORD PTR [rax+0x8],edi
   140044d57:	mov    eax,r11d
   140044d5a:	xor    eax,r10d
   140044d5d:	xor    eax,ebx
   140044d5f:	ror    ebx,0x2
   140044d62:	add    eax,edi
   140044d64:	lea    edi,[rcx-0x359d3e2a]
   140044d6a:	add    eax,r9d
   140044d6d:	add    edi,eax
   140044d6f:	mov    eax,edx
   140044d71:	xor    eax,r10d
   140044d74:	mov    ecx,edi
   140044d76:	xor    eax,ebx
   140044d78:	rol    ecx,0x5
   140044d7b:	add    eax,r8d
   140044d7e:	add    eax,r11d
   140044d81:	mov    r11d,DWORD PTR [rsp+0x3c]
   140044d86:	lea    r8d,[rcx-0x359d3e2a]
   140044d8d:	add    r8d,eax
   140044d90:	ror    edx,0x2
   140044d93:	xor    r11d,DWORD PTR [rsp+0x70]
   140044d98:	mov    eax,edx
   140044d9a:	mov    esi,DWORD PTR [rsp+0x30]
   140044d9e:	xor    eax,edi
   140044da0:	xor    esi,DWORD PTR [rsp+0x44]
   140044da4:	xor    eax,ebx
   140044da6:	xor    esi,DWORD PTR [rsp+0x54]
   140044daa:	xor    r11d,r13d
   140044dad:	xor    esi,DWORD PTR [rsp+0x68]
   140044db1:	xor    r11d,r12d
   140044db4:	mov    ebp,DWORD PTR [rsp+0x34]
   140044db8:	add    r10d,0xca62c1d6
   140044dbf:	xor    ebp,DWORD PTR [rsp+0x38]
   140044dc3:	mov    ecx,r8d
   140044dc6:	xor    ebp,DWORD PTR [rsp+0x40]
   140044dca:	xor    ebp,DWORD PTR [rsp+0x70]
   140044dce:	ror    edi,0x2
   140044dd1:	rol    r11d,1
   140044dd4:	mov    DWORD PTR [r14+0x10],r11d
   140044dd8:	mov    DWORD PTR [rsp+0x3c],r11d
   140044ddd:	add    r11d,eax
   140044de0:	add    r11d,r10d
   140044de3:	rol    ecx,0x5
   140044de6:	mov    eax,edx
   140044de8:	rol    esi,1
   140044dea:	xor    eax,edi
   140044dec:	mov    DWORD PTR [r14+0x14],esi
   140044df0:	xor    eax,r8d
   140044df3:	rol    ebp,1
   140044df5:	add    eax,0xca62c1d6
   140044dfa:	ror    r8d,0x2
   140044dfe:	add    eax,esi
   140044e00:	mov    DWORD PTR [r14+0x18],ebp
   140044e04:	mov    r14d,DWORD PTR [rsp+0xd8]
   140044e0c:	add    eax,ebx
   140044e0e:	xor    r14d,DWORD PTR [rsp+0x3c]
   140044e13:	add    r11d,ecx
   140044e16:	xor    r14d,DWORD PTR [rsp+0x48]
   140044e1b:	add    edx,0xca62c1d6
   140044e21:	xor    r14d,DWORD PTR [rsp+0x68]
   140044e26:	mov    r10d,r11d
   140044e29:	rol    r10d,0x5
   140044e2d:	add    r10d,eax
   140044e30:	rol    r14d,1
   140044e33:	mov    eax,edi
   140044e35:	mov    r9d,r10d
   140044e38:	xor    eax,r8d
   140044e3b:	rol    r9d,0x5
   140044e3f:	xor    eax,r11d
   140044e42:	add    edi,0xca62c1d6
   140044e48:	add    eax,ebp
   140044e4a:	ror    r11d,0x2
   140044e4e:	add    eax,edx
   140044e50:	add    r9d,eax
   140044e53:	mov    rax,QWORD PTR [rsp+0x60]
   140044e58:	mov    edx,r9d
   140044e5b:	rol    edx,0x5
   140044e5e:	mov    DWORD PTR [rax+0x1c],r14d
   140044e62:	mov    eax,r8d
   140044e65:	xor    eax,r11d
   140044e68:	xor    eax,r10d
   140044e6b:	ror    r10d,0x2
   140044e6f:	add    eax,r14d
   140044e72:	add    eax,edi
   140044e74:	mov    edi,DWORD PTR [rsp+0x34]
   140044e78:	xor    edi,DWORD PTR [rsp+0x50]
   140044e7c:	add    edx,eax
   140044e7e:	mov    rax,QWORD PTR [rsp+0x60]
   140044e83:	xor    edi,esi
   140044e85:	xor    edi,r15d
   140044e88:	mov    ecx,edx
   140044e8a:	rol    edi,1
   140044e8c:	rol    ecx,0x5
   140044e8f:	mov    DWORD PTR [rax+0x20],edi
   140044e92:	mov    eax,r9d
   140044e95:	xor    eax,r11d
   140044e98:	xor    eax,r10d
   140044e9b:	add    eax,edi
   140044e9d:	add    eax,r8d
   140044ea0:	lea    r8d,[rcx-0x359d3e2a]
   140044ea7:	add    r8d,eax
   140044eaa:	mov    rcx,QWORD PTR [rsp+0x60]
   140044eaf:	mov    eax,DWORD PTR [rsp+0xd8]
   140044eb6:	xor    eax,DWORD PTR [rsp+0x4c]
   140044eba:	xor    eax,ebp
   140044ebc:	ror    r9d,0x2
   140044ec0:	xor    eax,r12d
   140044ec3:	rol    eax,1
   140044ec5:	mov    DWORD PTR [rcx+0x24],eax
   140044ec8:	mov    ecx,r8d
   140044ecb:	mov    DWORD PTR [rsp+0xd8],eax
   140044ed2:	mov    eax,r9d
   140044ed5:	xor    eax,edx
   140044ed7:	rol    ecx,0x5
   140044eda:	xor    eax,r10d
   140044edd:	ror    edx,0x2
   140044ee0:	add    eax,DWORD PTR [rsp+0xd8]
   140044ee7:	add    r10d,0xca62c1d6
   140044eee:	add    eax,r11d
   140044ef1:	lea    r11d,[rcx-0x359d3e2a]
   140044ef8:	mov    rcx,QWORD PTR [rsp+0x60]
   140044efd:	add    r11d,eax
   140044f00:	mov    eax,DWORD PTR [rsp+0x30]
   140044f04:	xor    eax,DWORD PTR [rsp+0x50]
   140044f08:	mov    ebx,r11d
   140044f0b:	xor    eax,r13d
   140044f0e:	rol    ebx,0x5
   140044f11:	xor    eax,r14d
   140044f14:	rol    eax,1
   140044f16:	mov    DWORD PTR [rcx+0x28],eax
   140044f19:	mov    DWORD PTR [rsp+0x30],eax
   140044f1d:	mov    eax,r9d
   140044f20:	xor    eax,edx
   140044f22:	xor    eax,r8d
   140044f25:	ror    r8d,0x2
   140044f29:	add    eax,DWORD PTR [rsp+0x30]
   140044f2d:	add    eax,r10d
   140044f30:	mov    r10d,edi
   140044f33:	xor    r10d,DWORD PTR [rsp+0x38]
   140044f38:	add    ebx,eax
   140044f3a:	xor    r10d,DWORD PTR [rsp+0x44]
   140044f3f:	mov    eax,edx
   140044f41:	xor    r10d,DWORD PTR [rsp+0x4c]
   140044f46:	xor    eax,r8d
   140044f49:	xor    eax,r11d
   140044f4c:	rol    r10d,1
   140044f4f:	add    eax,r10d
   140044f52:	mov    DWORD PTR [rcx+0x2c],r10d
   140044f56:	add    eax,r9d
   140044f59:	mov    DWORD PTR [rsp+0x34],r10d
   140044f5e:	add    edx,0xca62c1d6
   140044f64:	ror    r11d,0x2
   140044f68:	mov    rdi,rcx
   140044f6b:	mov    ecx,ebx
   140044f6d:	rol    ecx,0x5
   140044f70:	lea    r10d,[rcx-0x359d3e2a]
   140044f77:	add    r10d,eax
   140044f7a:	mov    eax,DWORD PTR [rsp+0xd8]
   140044f81:	xor    eax,DWORD PTR [rsp+0x3c]
   140044f85:	mov    r9d,r10d
   140044f88:	xor    eax,DWORD PTR [rsp+0x40]
   140044f8c:	xor    eax,r13d
   140044f8f:	rol    r9d,0x5
   140044f93:	mov    r13d,eax
   140044f96:	mov    eax,r8d
   140044f99:	xor    eax,r11d
   140044f9c:	rol    r13d,1
   140044f9f:	xor    eax,ebx
   140044fa1:	mov    DWORD PTR [rdi+0x30],r13d
   140044fa5:	add    eax,r13d
   140044fa8:	ror    ebx,0x2
   140044fab:	add    eax,edx
   140044fad:	mov    edx,DWORD PTR [rsp+0x30]
   140044fb1:	xor    edx,DWORD PTR [rsp+0x44]
   140044fb5:	add    r9d,eax
   140044fb8:	xor    edx,esi
   140044fba:	mov    ecx,r9d
   140044fbd:	xor    edx,DWORD PTR [rsp+0x48]
   140044fc1:	mov    eax,r10d
   140044fc4:	rol    edx,1
   140044fc6:	mov    DWORD PTR [rdi+0x34],edx
   140044fc9:	rol    ecx,0x5
   140044fcc:	xor    r13d,DWORD PTR [rsp+0x48]
   140044fd1:	xor    eax,r11d
   140044fd4:	xor    eax,ebx
   140044fd6:	ror    r10d,0x2
   140044fda:	add    eax,edx
   140044fdc:	mov    DWORD PTR [rsp+0xd8],r10d
   140044fe4:	mov    edx,DWORD PTR [rsp+0x34]
   140044fe8:	add    eax,r8d
   140044feb:	xor    edx,DWORD PTR [rsp+0x40]
   140044fef:	lea    r8d,[rcx-0x359d3e2a]
   140044ff6:	add    r8d,eax
   140044ff9:	xor    edx,ebp
   140044ffb:	mov    ecx,r8d
   140044ffe:	xor    edx,r15d
   140045001:	rol    ecx,0x5
   140045004:	mov    eax,r10d
   140045007:	xor    eax,r9d
   14004500a:	rol    edx,1
   14004500c:	xor    eax,ebx
   14004500e:	mov    DWORD PTR [rdi+0x38],edx
   140045011:	add    eax,edx
   140045013:	ror    r9d,0x2
   140045017:	add    eax,r11d
   14004501a:	mov    DWORD PTR [rsp+0x70],r9d
   14004501f:	lea    edx,[rcx-0x359d3e2a]
   140045025:	xor    r13d,r14d
   140045028:	add    edx,eax
   14004502a:	xor    r13d,r12d
   14004502d:	mov    ecx,edx
   14004502f:	rol    r13d,1
   140045032:	mov    DWORD PTR [rdi+0x3c],r13d
   140045036:	mov    eax,r10d
   140045039:	xor    eax,r9d
   14004503c:	rol    ecx,0x5
   14004503f:	xor    eax,r8d
   140045042:	mov    DWORD PTR [rsp+0x54],edx
   140045046:	add    eax,r13d
   140045049:	ror    r8d,0x2
   14004504d:	add    ecx,0xca62c1d6
   140045053:	mov    DWORD PTR [rsp+0x6c],r8d
   140045058:	add    eax,ebx
   14004505a:	add    eax,ecx
   14004505c:	mov    rcx,QWORD PTR [rsp+0xc0]
   140045064:	mov    DWORD PTR [rsp+0x58],eax
   140045068:	add    DWORD PTR [rcx],eax
   14004506a:	lea    rax,[rsp+0xd8]
   140045072:	add    DWORD PTR [rcx+0x4],edx
   140045075:	lea    rdx,[rsp+0x54]
   14004507a:	add    DWORD PTR [rcx+0x8],r8d
   14004507e:	lea    r8,[rsp+0x6c]
   140045083:	add    DWORD PTR [rcx+0xc],r9d
   140045087:	lea    r9,[rsp+0x70]
   14004508c:	add    DWORD PTR [rcx+0x10],r10d
   140045090:	lea    rcx,[rsp+0x58]
   140045095:	mov    QWORD PTR [rsp+0x20],rax
   14004509a:	call   0x140045340
   14004509f:	mov    rbx,QWORD PTR [rsp+0xc8]
   1400450a7:	add    rsp,0x80
   1400450ae:	pop    r15
   1400450b0:	pop    r14
   1400450b2:	pop    r13
   1400450b4:	pop    r12
   1400450b6:	pop    rdi
   1400450b7:	pop    rsi
   1400450b8:	pop    rbp
   1400450b9:	ret    
   1400450ba:	int3   
   1400450bb:	int3   
   1400450bc:	mov    QWORD PTR [rsp+0x18],rbx
   1400450c1:	push   rbp
   1400450c2:	push   rsi
   1400450c3:	push   rdi
   1400450c4:	push   r12
   1400450c6:	push   r14
   1400450c8:	mov    rbp,rsp
   1400450cb:	sub    rsp,0x40
   1400450cf:	mov    rax,QWORD PTR [rip+0x3ce0a]        # 0x140081ee0
   1400450d6:	xor    rax,rsp
   1400450d9:	mov    QWORD PTR [rbp-0x8],rax
   1400450dd:	mov    dil,r8b
   1400450e0:	mov    r14,rdx
   1400450e3:	lea    r8,[rbp-0x10]
   1400450e7:	mov    rbx,rcx
   1400450ea:	xor    r9d,r9d
   1400450ed:	mov    eax,r9d
   1400450f0:	mov    ecx,0x3
   1400450f5:	and    eax,0x3
   1400450f8:	sub    ecx,eax
   1400450fa:	xor    eax,eax
   1400450fc:	shl    ecx,0x3
   1400450ff:	cmp    r9d,0x4
   140045103:	setb   al
   140045106:	inc    r9d
   140045109:	mov    edx,DWORD PTR [rbx+rax*4+0x14]
   14004510d:	shr    edx,cl
   14004510f:	mov    BYTE PTR [r8],dl
   140045112:	inc    r8
   140045115:	cmp    r9d,0x8
   140045119:	jb     0x1400450ed
   14004511b:	mov    DWORD PTR [rbp-0x1c],r9d
   14004511f:	lea    rdx,[rbp-0x20]
   140045123:	mov    r9b,dil
   140045126:	mov    BYTE PTR [rbp-0x20],0x80
   14004512a:	mov    r8d,0x1
   140045130:	mov    rcx,rbx
   140045133:	call   0x140045248
   140045138:	lea    rsi,[rbx+0x14]
   14004513c:	mov    r12d,0x1f8
   140045142:	jmp    0x140045157
   140045144:	mov    r8d,0x1
   14004514a:	mov    BYTE PTR [rbp-0x20],0x0
   14004514e:	lea    rdx,[rbp-0x20]
   140045152:	call   0x140045248
   140045157:	mov    eax,DWORD PTR [rsi]
   140045159:	mov    r9b,dil
   14004515c:	and    eax,r12d
   14004515f:	mov    rcx,rbx
   140045162:	cmp    eax,0x1c0
   140045167:	jne    0x140045144
   140045169:	mov    r12d,0x8
   14004516f:	lea    rdx,[rbp-0x10]
   140045173:	mov    r8d,r12d
   140045176:	call   0x140045248
   14004517b:	xor    eax,eax
   14004517d:	mov    DWORD PTR [rbp-0x1c],eax
   140045180:	mov    ecx,eax
   140045182:	mov    eax,DWORD PTR [rbx+rax*4]
   140045185:	mov    DWORD PTR [r14+rcx*4],eax
   140045189:	mov    eax,DWORD PTR [rbp-0x1c]
   14004518c:	inc    eax
   14004518e:	mov    DWORD PTR [rbp-0x1c],eax
   140045191:	cmp    eax,0x5
   140045194:	jb     0x140045180
   140045196:	mov    r14d,0x4
   14004519c:	lea    rcx,[rbp-0x1c]
   1400451a0:	mov    edx,r14d
   1400451a3:	call   0x1400438bc
   1400451a8:	mov    edx,r14d
   1400451ab:	lea    rcx,[rbp-0x18]
   1400451af:	call   0x1400438bc
   1400451b4:	mov    r14d,0x40
   1400451ba:	lea    rcx,[rbx+0x1c]
   1400451be:	mov    edx,r14d
   1400451c1:	call   0x1400438bc
   1400451c6:	lea    edx,[r14-0x2c]
   1400451ca:	mov    rcx,rbx
   1400451cd:	call   0x1400438bc
   1400451d2:	mov    rdx,r12
   1400451d5:	mov    rcx,rsi
   1400451d8:	call   0x1400438bc
   1400451dd:	mov    rdx,r12
   1400451e0:	lea    rcx,[rbp-0x10]
   1400451e4:	call   0x1400438bc
   1400451e9:	test   dil,dil
   1400451ec:	je     0x1400451fc
   1400451ee:	lea    rcx,[rbx+0x5c]
   1400451f2:	mov    r8d,r14d
   1400451f5:	xor    edx,edx
   1400451f7:	call   0x140058f40
   1400451fc:	mov    rcx,QWORD PTR [rbp-0x8]
   140045200:	xor    rcx,rsp
   140045203:	call   0x140055f90
   140045208:	mov    rbx,QWORD PTR [rsp+0x80]
   140045210:	add    rsp,0x40
   140045214:	pop    r14
   140045216:	pop    r12
   140045218:	pop    rdi
   140045219:	pop    rsi
   14004521a:	pop    rbp
   14004521b:	ret    
   14004521c:	and    DWORD PTR [rcx+0x18],0x0
   140045220:	and    DWORD PTR [rcx+0x14],0x0
   140045224:	mov    DWORD PTR [rcx],0x67452301
   14004522a:	mov    DWORD PTR [rcx+0x4],0xefcdab89
   140045231:	mov    DWORD PTR [rcx+0x8],0x98badcfe
   140045238:	mov    DWORD PTR [rcx+0xc],0x10325476
   14004523f:	mov    DWORD PTR [rcx+0x10],0xc3d2e1f0
   140045246:	ret    
   140045247:	int3   
   140045248:	mov    rax,rsp
   14004524b:	mov    QWORD PTR [rax+0x8],rbx
   14004524f:	mov    QWORD PTR [rax+0x10],rbp
   140045253:	mov    QWORD PTR [rax+0x18],rsi
   140045257:	mov    QWORD PTR [rax+0x20],rdi
   14004525b:	push   r12
   14004525d:	push   r14
   14004525f:	push   r15
   140045261:	sub    rsp,0x20
   140045265:	mov    eax,DWORD PTR [rcx+0x14]
   140045268:	mov    rbx,rcx
   14004526b:	mov    ecx,eax
   14004526d:	mov    r10d,r8d
   140045270:	shr    ecx,0x3
   140045273:	mov    r15b,r9b
   140045276:	shl    r10d,0x3
   14004527a:	and    ecx,0x3f
   14004527d:	add    eax,r10d
   140045280:	mov    rdi,r8
   140045283:	mov    DWORD PTR [rbx+0x14],eax
   140045286:	mov    r14,rdx
   140045289:	cmp    eax,r10d
   14004528c:	jae    0x140045291
   14004528e:	inc    DWORD PTR [rbx+0x18]
   140045291:	mov    rax,r8
   140045294:	mov    edx,ecx
   140045296:	shr    rax,0x1d
   14004529a:	add    DWORD PTR [rbx+0x18],eax
   14004529d:	lea    rax,[rcx+r8*1]
   1400452a1:	cmp    rax,0x3f
   1400452a5:	jbe    0x1400452fe
   1400452a7:	mov    esi,0x40
   1400452ac:	sub    esi,ecx
   1400452ae:	lea    rcx,[rbx+0x1c]
   1400452b2:	add    rcx,rdx
   1400452b5:	mov    r8d,esi
   1400452b8:	mov    rdx,r14
   1400452bb:	call   0x140059180
   1400452c0:	lea    r8,[rbx+0x1c]
   1400452c4:	mov    r9b,r15b
   1400452c7:	lea    rdx,[rbx+0x5c]
   1400452cb:	mov    rcx,rbx
   1400452ce:	call   0x140043d90
   1400452d3:	lea    ebp,[rsi+0x3f]
   1400452d6:	jmp    0x1400452f3
   1400452d8:	mov    r8d,esi
   1400452db:	lea    rdx,[rbx+0x5c]
   1400452df:	add    r8,r14
   1400452e2:	mov    r9b,r15b
   1400452e5:	mov    rcx,rbx
   1400452e8:	call   0x140043d90
   1400452ed:	add    esi,0x40
   1400452f0:	add    ebp,0x40
   1400452f3:	mov    eax,ebp
   1400452f5:	cmp    rax,rdi
   1400452f8:	jb     0x1400452d8
   1400452fa:	xor    ecx,ecx
   1400452fc:	jmp    0x140045300
   1400452fe:	xor    esi,esi
   140045300:	mov    eax,esi
   140045302:	cmp    rdi,rax
   140045305:	jbe    0x14004531f
   140045307:	sub    rdi,rax
   14004530a:	lea    rdx,[rsi+r14*1]
   14004530e:	mov    eax,ecx
   140045310:	mov    r8,rdi
   140045313:	lea    rcx,[rbx+0x1c]
   140045317:	add    rcx,rax
   14004531a:	call   0x140059180
   14004531f:	mov    rbx,QWORD PTR [rsp+0x40]
   140045324:	mov    rbp,QWORD PTR [rsp+0x48]
   140045329:	mov    rsi,QWORD PTR [rsp+0x50]
   14004532e:	mov    rdi,QWORD PTR [rsp+0x58]
   140045333:	add    rsp,0x20
   140045337:	pop    r15
   140045339:	pop    r14
   14004533b:	pop    r12
   14004533d:	ret    
   14004533e:	int3   
   14004533f:	int3   
   140045340:	mov    QWORD PTR [rsp+0x20],r9
   140045345:	mov    QWORD PTR [rsp+0x18],r8
   14004534a:	mov    QWORD PTR [rsp+0x10],rdx
   14004534f:	mov    QWORD PTR [rsp+0x8],rcx
   140045354:	mov    rax,QWORD PTR [rsp+0x28]
   140045359:	mov    DWORD PTR [rax],0x0
   14004535f:	mov    rax,QWORD PTR [rsp+0x20]
   140045364:	mov    DWORD PTR [rax],0x0
   14004536a:	mov    rax,QWORD PTR [rsp+0x18]
   14004536f:	mov    DWORD PTR [rax],0x0
   140045375:	mov    rax,QWORD PTR [rsp+0x10]
   14004537a:	mov    DWORD PTR [rax],0x0
   140045380:	mov    rax,QWORD PTR [rsp+0x8]
   140045385:	mov    DWORD PTR [rax],0x0
   14004538b:	ret    
   14004538c:	mov    rax,rsp
   14004538f:	mov    QWORD PTR [rax+0x8],rbx
   140045393:	mov    QWORD PTR [rax+0x10],rbp
   140045397:	mov    QWORD PTR [rax+0x18],rsi
   14004539b:	mov    QWORD PTR [rax+0x20],rdi
   14004539f:	push   r14
   1400453a1:	sub    rsp,0x20
   1400453a5:	mov    rsi,QWORD PTR [rcx+0x20]
   1400453a9:	lea    rbp,[rcx+0x30]
   1400453ad:	mov    edi,DWORD PTR [rcx+0x20]
   1400453b0:	mov    r14,rdx
   1400453b3:	shl    rsi,0x3
   1400453b7:	mov    rbx,rcx
   1400453ba:	and    edi,0x3f
   1400453bd:	mov    QWORD PTR [rcx+0x28],rbp
   1400453c1:	mov    BYTE PTR [rdi+rcx*1+0x30],0x80
   1400453c6:	jmp    0x1400453da
   1400453c8:	and    edi,0x3f
   1400453cb:	jne    0x1400453d5
   1400453cd:	mov    rcx,rbx
   1400453d0:	call   0x14004558c
   1400453d5:	mov    BYTE PTR [rdi+rbx*1+0x30],0x0
   1400453da:	inc    edi
   1400453dc:	cmp    edi,0x38
   1400453df:	jne    0x1400453c8
   1400453e1:	lea    edx,[rdi-0x30]
   1400453e4:	mov    rcx,rsi
   1400453e7:	shl    rsi,0x8
   1400453eb:	shr    rcx,0x38
   1400453ef:	mov    BYTE PTR [rdi+rbx*1+0x30],cl
   1400453f3:	inc    edi
   1400453f5:	sub    rdx,0x1
   1400453f9:	jne    0x1400453e4
   1400453fb:	mov    rcx,rbx
   1400453fe:	call   0x14004558c
   140045403:	xor    r8d,r8d
   140045406:	xor    r9d,r9d
   140045409:	mov    eax,r8d
   14004540c:	mov    ecx,0x3
   140045411:	and    eax,0x3
   140045414:	inc    r8d
   140045417:	sub    ecx,eax
   140045419:	mov    rax,r9
   14004541c:	shr    rax,0x2
   140045420:	inc    r9
   140045423:	shl    ecx,0x3
   140045426:	mov    edx,DWORD PTR [rbx+rax*4]
   140045429:	shr    edx,cl
   14004542b:	mov    BYTE PTR [r14],dl
   14004542e:	inc    r14
   140045431:	cmp    r8d,0x20
   140045435:	jb     0x140045409
   140045437:	mov    DWORD PTR [rbx],0x6a09e667
   14004543d:	xor    ecx,ecx
   14004543f:	mov    DWORD PTR [rbx+0x4],0xbb67ae85
   140045446:	mov    DWORD PTR [rbx+0x8],0x3c6ef372
   14004544d:	mov    DWORD PTR [rbx+0xc],0xa54ff53a
   140045454:	mov    DWORD PTR [rbx+0x10],0x510e527f
   14004545b:	mov    DWORD PTR [rbx+0x14],0x9b05688c
   140045462:	mov    DWORD PTR [rbx+0x18],0x1f83d9ab
   140045469:	mov    DWORD PTR [rbx+0x1c],0x5be0cd19
   140045470:	and    QWORD PTR [rbx+0x20],0x0
   140045475:	call   0x14004558c
   14004547a:	mov    edx,0x40
   14004547f:	mov    rcx,rbp
   140045482:	mov    rbx,QWORD PTR [rsp+0x30]
   140045487:	mov    rbp,QWORD PTR [rsp+0x38]
   14004548c:	mov    rsi,QWORD PTR [rsp+0x40]
   140045491:	mov    rdi,QWORD PTR [rsp+0x48]
   140045496:	add    rsp,0x20
   14004549a:	pop    r14
   14004549c:	jmp    0x1400438bc
   1400454a1:	int3   
   1400454a2:	int3   
   1400454a3:	int3   
   1400454a4:	and    QWORD PTR [rcx+0x20],0x0
   1400454a9:	mov    DWORD PTR [rcx],0x6a09e667
   1400454af:	mov    DWORD PTR [rcx+0x4],0xbb67ae85
   1400454b6:	mov    DWORD PTR [rcx+0x8],0x3c6ef372
   1400454bd:	mov    DWORD PTR [rcx+0xc],0xa54ff53a
   1400454c4:	mov    DWORD PTR [rcx+0x10],0x510e527f
   1400454cb:	mov    DWORD PTR [rcx+0x14],0x9b05688c
   1400454d2:	mov    DWORD PTR [rcx+0x18],0x1f83d9ab
   1400454d9:	mov    DWORD PTR [rcx+0x1c],0x5be0cd19
   1400454e0:	ret    
   1400454e1:	int3   
   1400454e2:	int3   
   1400454e3:	int3   
   1400454e4:	mov    rax,rsp
   1400454e7:	mov    QWORD PTR [rax+0x8],rbx
   1400454eb:	mov    QWORD PTR [rax+0x10],rbp
   1400454ef:	mov    QWORD PTR [rax+0x18],rsi
   1400454f3:	mov    QWORD PTR [rax+0x20],rdi
   1400454f7:	push   r14
   1400454f9:	sub    rsp,0x20
   1400454fd:	mov    ebx,DWORD PTR [rcx+0x20]
   140045500:	mov    rsi,r8
   140045503:	add    QWORD PTR [rcx+0x20],r8
   140045507:	and    ebx,0x3f
   14004550a:	mov    r14,rdx
   14004550d:	mov    rbp,rcx
   140045510:	test   r8,r8
   140045513:	je     0x140045568
   140045515:	mov    eax,0x40
   14004551a:	mov    rdi,rsi
   14004551d:	sub    rax,rbx
   140045520:	cmp    rsi,rax
   140045523:	cmova  rdi,rax
   140045527:	cmp    rdi,0x40
   14004552b:	jne    0x140045533
   14004552d:	mov    QWORD PTR [rbp+0x28],r14
   140045531:	jmp    0x14004554a
   140045533:	lea    rax,[rbp+0x30]
   140045537:	mov    r8,rdi
   14004553a:	lea    rcx,[rax+rbx*1]
   14004553e:	mov    QWORD PTR [rbp+0x28],rax
   140045542:	mov    rdx,r14
   140045545:	call   0x140059180
   14004554a:	add    r14,rdi
   14004554d:	add    rbx,rdi
   140045550:	sub    rsi,rdi
   140045553:	cmp    rbx,0x40
   140045557:	jne    0x140045563
   140045559:	xor    ebx,ebx
   14004555b:	mov    rcx,rbp
   14004555e:	call   0x14004558c
   140045563:	test   rsi,rsi
   140045566:	jne    0x140045515
   140045568:	xor    ecx,ecx
   14004556a:	mov    rbx,QWORD PTR [rsp+0x30]
   14004556f:	mov    rbp,QWORD PTR [rsp+0x38]
   140045574:	mov    rsi,QWORD PTR [rsp+0x40]
   140045579:	mov    rdi,QWORD PTR [rsp+0x48]
   14004557e:	add    rsp,0x20
   140045582:	pop    r14
   140045584:	jmp    0x14004558c
   140045589:	int3   
   14004558a:	int3   
   14004558b:	int3   
   14004558c:	mov    QWORD PTR [rsp+0x10],rbx
   140045591:	mov    QWORD PTR [rsp+0x18],rsi
   140045596:	mov    QWORD PTR [rsp+0x20],rdi
   14004559b:	push   rbp
   14004559c:	push   r12
   14004559e:	push   r13
   1400455a0:	push   r14
   1400455a2:	push   r15
   1400455a4:	lea    rbp,[rsp-0x60]
   1400455a9:	sub    rsp,0x160
   1400455b0:	mov    rax,QWORD PTR [rip+0x3c929]        # 0x140081ee0
   1400455b7:	xor    rax,rsp
   1400455ba:	mov    QWORD PTR [rbp+0x50],rax
   1400455be:	xor    r11d,r11d
   1400455c1:	mov    QWORD PTR [rsp+0x20],rcx
   1400455c6:	mov    r9,rcx
   1400455c9:	test   rcx,rcx
   1400455cc:	jne    0x1400455ef
   1400455ce:	lea    edx,[rcx+0x20]
   1400455d1:	lea    rcx,[rsp+0x28]
   1400455d6:	call   0x1400438bc
   1400455db:	mov    edx,0x100
   1400455e0:	lea    rcx,[rsp+0x50]
   1400455e5:	call   0x1400438bc
   1400455ea:	jmp    0x140045777
   1400455ef:	mov    rcx,QWORD PTR [rcx+0x28]
   1400455f3:	mov    rdx,r11
   1400455f6:	mov    eax,DWORD PTR [rcx]
   1400455f8:	add    rcx,0x4
   1400455fc:	bswap  eax
   1400455fe:	mov    DWORD PTR [rsp+0x50],eax
   140045602:	mov    eax,DWORD PTR [rcx]
   140045604:	lea    rcx,[rcx+0x4]
   140045608:	bswap  eax
   14004560a:	mov    DWORD PTR [rsp+rdx*4+0x54],eax
   14004560e:	inc    rdx
   140045611:	cmp    rdx,0xf
   140045615:	jl     0x140045602
   140045617:	lea    rbx,[rbp-0x70]
   14004561b:	mov    edi,0x30
   140045620:	lea    r10,[rbp-0x78]
   140045624:	mov    ecx,DWORD PTR [r10-0x34]
   140045628:	mov    r8d,ecx
   14004562b:	mov    edx,DWORD PTR [r10]
   14004562e:	mov    eax,ecx
   140045630:	rol    r8d,0xe
   140045634:	lea    r10,[r10+0x4]
   140045638:	shr    ecx,0x3
   14004563b:	ror    eax,0x7
   14004563e:	xor    r8d,eax
   140045641:	mov    eax,edx
   140045643:	xor    r8d,ecx
   140045646:	rol    eax,0xd
   140045649:	mov    ecx,edx
   14004564b:	shr    edx,0xa
   14004564e:	rol    ecx,0xf
   140045651:	xor    ecx,eax
   140045653:	xor    ecx,edx
   140045655:	add    r8d,ecx
   140045658:	add    r8d,DWORD PTR [r10-0x3c]
   14004565c:	add    r8d,DWORD PTR [r10-0x18]
   140045660:	mov    DWORD PTR [rbx],r8d
   140045663:	lea    rbx,[rbx+0x4]
   140045667:	sub    rdi,0x1
   14004566b:	jne    0x140045624
   14004566d:	movups xmm0,XMMWORD PTR [r9]
   140045671:	lea    r12d,[rdi+0x40]
   140045675:	movups xmm1,XMMWORD PTR [r9+0x10]
   14004567a:	movups XMMWORD PTR [rsp+0x28],xmm0
   14004567f:	mov    edi,DWORD PTR [rsp+0x30]
   140045683:	mov    esi,DWORD PTR [rsp+0x2c]
   140045687:	mov    ebx,DWORD PTR [rsp+0x28]
   14004568b:	mov    r9d,DWORD PTR [rsp+0x34]
   140045690:	movups XMMWORD PTR [rsp+0x38],xmm1
   140045695:	mov    r13d,DWORD PTR [rsp+0x44]
   14004569a:	mov    r14d,DWORD PTR [rsp+0x40]
   14004569f:	mov    r15d,DWORD PTR [rsp+0x3c]
   1400456a4:	mov    r10d,DWORD PTR [rsp+0x38]
   1400456a9:	mov    eax,r10d
   1400456ac:	mov    r8d,r10d
   1400456af:	rol    eax,0x7
   1400456b2:	mov    ecx,r10d
   1400456b5:	ror    r8d,0xb
   1400456b9:	not    ecx
   1400456bb:	xor    r8d,eax
   1400456be:	and    ecx,r14d
   1400456c1:	mov    eax,r10d
   1400456c4:	mov    edx,ebx
   1400456c6:	ror    eax,0x6
   1400456c9:	xor    r8d,eax
   1400456cc:	ror    edx,0xd
   1400456cf:	mov    eax,r15d
   1400456d2:	and    eax,r10d
   1400456d5:	xor    ecx,eax
   1400456d7:	lea    rax,[rip+0x2b2f2]        # 0x1400709d0
   1400456de:	add    r8d,ecx
   1400456e1:	mov    ecx,esi
   1400456e3:	add    r8d,DWORD PTR [r11+rax*1]
   1400456e7:	xor    ecx,edi
   1400456e9:	add    r8d,DWORD PTR [rsp+r11*1+0x50]
   1400456ee:	lea    r11,[r11+0x4]
   1400456f2:	add    r8d,r13d
   1400456f5:	and    ecx,ebx
   1400456f7:	mov    eax,ebx
   1400456f9:	mov    r13d,r14d
   1400456fc:	rol    eax,0xa
   1400456ff:	mov    r14d,r15d
   140045702:	xor    edx,eax
   140045704:	mov    r15d,r10d
   140045707:	mov    eax,ebx
   140045709:	lea    r10d,[r9+r8*1]
   14004570d:	ror    eax,0x2
   140045710:	mov    r9d,edi
   140045713:	xor    edx,eax
   140045715:	mov    eax,esi
   140045717:	and    eax,edi
   140045719:	mov    edi,esi
   14004571b:	xor    ecx,eax
   14004571d:	mov    esi,ebx
   14004571f:	add    edx,ecx
   140045721:	lea    ebx,[rdx+r8*1]
   140045725:	sub    r12,0x1
   140045729:	jne    0x1400456a9
   14004572f:	mov    DWORD PTR [rsp+0x34],r9d
   140045734:	lea    rcx,[rsp+0x28]
   140045739:	mov    r9,QWORD PTR [rsp+0x20]
   14004573e:	lea    edx,[r12+0x8]
   140045743:	sub    rcx,r9
   140045746:	mov    DWORD PTR [rsp+0x38],r10d
   14004574b:	mov    DWORD PTR [rsp+0x28],ebx
   14004574f:	mov    DWORD PTR [rsp+0x30],edi
   140045753:	mov    DWORD PTR [rsp+0x2c],esi
   140045757:	mov    DWORD PTR [rsp+0x40],r14d
   14004575c:	mov    DWORD PTR [rsp+0x3c],r15d
   140045761:	mov    DWORD PTR [rsp+0x44],r13d
   140045766:	mov    eax,DWORD PTR [rcx+r9*1]
   14004576a:	add    DWORD PTR [r9],eax
   14004576d:	lea    r9,[r9+0x4]
   140045771:	sub    rdx,0x1
   140045775:	jne    0x140045766
   140045777:	mov    rcx,QWORD PTR [rbp+0x50]
   14004577b:	xor    rcx,rsp
   14004577e:	call   0x140055f90
   140045783:	lea    r11,[rsp+0x160]
   14004578b:	mov    rbx,QWORD PTR [r11+0x38]
   14004578f:	mov    rsi,QWORD PTR [r11+0x40]
   140045793:	mov    rdi,QWORD PTR [r11+0x48]
   140045797:	mov    rsp,r11
   14004579a:	pop    r15
   14004579c:	pop    r14
   14004579e:	pop    r13
   1400457a0:	pop    r12
   1400457a2:	pop    rbp
   1400457a3:	ret    
   1400457a4:	cmp    rdx,0x2
   1400457a8:	jb     0x140045968
   1400457ae:	mov    QWORD PTR [rsp+0x18],rbx
   1400457b3:	mov    QWORD PTR [rsp+0x20],r9
   1400457b8:	mov    QWORD PTR [rsp+0x8],rcx
   1400457bd:	push   rbp
   1400457be:	push   rsi
   1400457bf:	push   rdi
   1400457c0:	push   r12
   1400457c2:	push   r13
   1400457c4:	push   r14
   1400457c6:	push   r15
   1400457c8:	sub    rsp,0x40
   1400457cc:	mov    rbx,r8
   1400457cf:	mov    rbp,rcx
   1400457d2:	mov    rsi,rdx
   1400457d5:	mov    rcx,rbx
   1400457d8:	mov    rdi,rdx
   1400457db:	shr    rsi,1
   1400457de:	call   0x14005d520
   1400457e3:	mov    r15,rax
   1400457e6:	test   rax,rax
   1400457e9:	jne    0x1400457f7
   1400457eb:	lea    rcx,[rip+0x4f06e]        # 0x140094860
   1400457f2:	call   0x14001bd24
   1400457f7:	mov    r14,rdi
   1400457fa:	lea    r13,[rsi*2+0x1]
   140045802:	imul   r14,rbx
   140045806:	mov    r12,rsi
   140045809:	mov    QWORD PTR [rsp+0x88],r13
   140045811:	add    r14,rbp
   140045814:	mov    rax,rbx
   140045817:	neg    rax
   14004581a:	mov    QWORD PTR [rsp+0x20],r14
   14004581f:	imul   r12,rbx
   140045823:	mov    QWORD PTR [rsp+0x38],rax
   140045828:	add    r12,rbp
   14004582b:	mov    QWORD PTR [rsp+0x28],r12
   140045830:	mov    rcx,r15
   140045833:	test   rsi,rsi
   140045836:	je     0x140045854
   140045838:	add    r12,rax
   14004583b:	dec    rsi
   14004583e:	sub    r13,0x2
   140045842:	mov    QWORD PTR [rsp+0x28],r12
   140045847:	mov    QWORD PTR [rsp+0x88],r13
   14004584f:	mov    rdx,r12
   140045852:	jmp    0x140045877
   140045854:	add    r14,rax
   140045857:	mov    QWORD PTR [rsp+0x20],r14
   14004585c:	sub    rdi,0x1
   140045860:	je     0x14004594c
   140045866:	mov    r8,rbx
   140045869:	mov    rdx,r14
   14004586c:	call   0x140059180
   140045871:	mov    rdx,rbp
   140045874:	mov    rcx,r14
   140045877:	mov    r8,rbx
   14004587a:	call   0x140059180
   14004587f:	mov    rbp,rsi
   140045882:	cmp    QWORD PTR [rsp+0x88],rdi
   14004588a:	jae    0x140045918
   140045890:	mov    r14,QWORD PTR [rsp+0x80]
   140045898:	mov    r12,QWORD PTR [rsp+0x98]
   1400458a0:	lea    rax,[r13+0x1]
   1400458a4:	mov    QWORD PTR [rsp+0x30],rax
   1400458a9:	cmp    rax,rdi
   1400458ac:	jae    0x1400458cd
   1400458ae:	mov    rcx,rax
   1400458b1:	mov    rdx,r13
   1400458b4:	imul   rdx,rbx
   1400458b8:	imul   rcx,rbx
   1400458bc:	add    rdx,r14
   1400458bf:	add    rcx,r14
   1400458c2:	call   r12
   1400458c5:	test   eax,eax
   1400458c7:	cmovg  r13,QWORD PTR [rsp+0x30]
   1400458cd:	mov    rax,r13
   1400458d0:	mov    rdx,r15
   1400458d3:	imul   rax,rbx
   1400458d7:	add    rax,r14
   1400458da:	mov    rcx,rax
   1400458dd:	mov    QWORD PTR [rsp+0x30],rax
   1400458e2:	call   r12
   1400458e5:	test   eax,eax
   1400458e7:	jle    0x14004590e
   1400458e9:	mov    rdx,QWORD PTR [rsp+0x30]
   1400458ee:	mov    r8,rbx
   1400458f1:	imul   rbp,rbx
   1400458f5:	lea    rcx,[r14+rbp*1]
   1400458f9:	call   0x140059180
   1400458fe:	mov    rbp,r13
   140045901:	lea    r13,[r13*2+0x1]
   140045909:	cmp    r13,rdi
   14004590c:	jb     0x1400458a0
   14004590e:	mov    r14,QWORD PTR [rsp+0x20]
   140045913:	mov    r12,QWORD PTR [rsp+0x28]
   140045918:	imul   rbp,rbx
   14004591c:	mov    r8,rbx
   14004591f:	mov    rdx,r15
   140045922:	add    rbp,QWORD PTR [rsp+0x80]
   14004592a:	mov    rcx,rbp
   14004592d:	call   0x140059180
   140045932:	mov    rax,QWORD PTR [rsp+0x38]
   140045937:	mov    rbp,QWORD PTR [rsp+0x80]
   14004593f:	mov    r13,QWORD PTR [rsp+0x88]
   140045947:	jmp    0x140045830
   14004594c:	call   0x14005a938
   140045951:	mov    rbx,QWORD PTR [rsp+0x90]
   140045959:	add    rsp,0x40
   14004595d:	pop    r15
   14004595f:	pop    r14
   140045961:	pop    r13
   140045963:	pop    r12
   140045965:	pop    rdi
   140045966:	pop    rsi
   140045967:	pop    rbp
   140045968:	ret    
   140045969:	int3   
   14004596a:	int3   
   14004596b:	int3   
   14004596c:	mov    r8,rdx
   14004596f:	cmp    rdx,rcx
   140045972:	jge    0x14004597a
   140045974:	mov    eax,0x64
   140045979:	ret    
   14004597a:	xor    eax,eax
   14004597c:	test   rdx,rdx
   14004597f:	je     0x14004598a
   140045981:	imul   rax,rcx,0x64
   140045985:	cqo    
   140045987:	idiv   r8
   14004598a:	ret    
   14004598b:	int3   
   14004598c:	mov    r8,rdx
   14004598f:	test   rdx,rdx
   140045992:	jne    0x140045997
   140045994:	xor    eax,eax
   140045996:	ret    
   140045997:	imul   rax,rcx,0x64
   14004599b:	cqo    
   14004599d:	idiv   r8
   1400459a0:	ret    
   1400459a1:	int3   
   1400459a2:	int3   
   1400459a3:	int3   
   1400459a4:	mov    QWORD PTR [rsp+0x20],rbx
   1400459a9:	push   rdi
   1400459aa:	sub    rsp,0x830
   1400459b1:	mov    rax,QWORD PTR [rip+0x3c528]        # 0x140081ee0
   1400459b8:	xor    rax,rsp
   1400459bb:	mov    QWORD PTR [rsp+0x820],rax
   1400459c3:	mov    rbx,r8
   1400459c6:	mov    rdi,rdx
   1400459c9:	cmp    r9d,0x2
   1400459cd:	jne    0x1400459d6
   1400459cf:	call   0x140048b04
   1400459d4:	jmp    0x1400459fc
   1400459d6:	cmp    r9d,0x1
   1400459da:	jne    0x1400459f1
   1400459dc:	mov    r8d,0x800
   1400459e2:	lea    rdx,[rsp+0x20]
   1400459e7:	call   0x140045cd8
   1400459ec:	lea    rcx,[rsp+0x20]
   1400459f1:	mov    r8,rbx
   1400459f4:	mov    rdx,rdi
   1400459f7:	call   0x1400489f0
   1400459fc:	xor    eax,eax
   1400459fe:	test   rbx,rbx
   140045a01:	je     0x140045a08
   140045a03:	mov    WORD PTR [rdi+rbx*2-0x2],ax
   140045a08:	mov    rcx,QWORD PTR [rsp+0x820]
   140045a10:	xor    rcx,rsp
   140045a13:	call   0x140055f90
   140045a18:	mov    rbx,QWORD PTR [rsp+0x858]
   140045a20:	add    rsp,0x830
   140045a27:	pop    rdi
   140045a28:	ret    
   140045a29:	int3   
   140045a2a:	int3   
   140045a2b:	int3   
   140045a2c:	mov    rax,rsp
   140045a2f:	mov    QWORD PTR [rax+0x8],rbx
   140045a33:	mov    QWORD PTR [rax+0x10],rbp
   140045a37:	mov    QWORD PTR [rax+0x18],rsi
   140045a3b:	mov    QWORD PTR [rax+0x20],rdi
   140045a3f:	push   r12
   140045a41:	push   r14
   140045a43:	push   r15
   140045a45:	mov    rbx,QWORD PTR [rsp+0x40]
   140045a4a:	xor    r12d,r12d
   140045a4d:	mov    r14,rdx
   140045a50:	mov    r15,rcx
   140045a53:	mov    r11d,r12d
   140045a56:	mov    r10d,r12d
   140045a59:	mov    edi,r12d
   140045a5c:	test   rdx,rdx
   140045a5f:	je     0x140045ad2
   140045a61:	mov    eax,r12d
   140045a64:	movzx  edx,BYTE PTR [rax+r15*1]
   140045a69:	mov    ecx,edx
   140045a6b:	and    edx,0xf
   140045a6e:	shr    ecx,0x4
   140045a71:	cmp    ecx,0x9
   140045a74:	lea    ebp,[rdx+0x30]
   140045a77:	lea    eax,[rcx+0x57]
   140045a7a:	lea    esi,[rcx+0x30]
   140045a7d:	cmova  esi,eax
   140045a80:	cmp    edx,0x9
   140045a83:	lea    eax,[rdx+0x57]
   140045a86:	cmova  ebp,eax
   140045a89:	test   r8,r8
   140045a8c:	je     0x140045aa8
   140045a8e:	mov    ecx,r11d
   140045a91:	lea    rax,[rbx-0x2]
   140045a95:	cmp    rcx,rax
   140045a98:	jae    0x140045aa8
   140045a9a:	inc    r11d
   140045a9d:	mov    BYTE PTR [rcx+r8*1],sil
   140045aa1:	mov    BYTE PTR [r11+r8*1],bpl
   140045aa5:	inc    r11d
   140045aa8:	test   r9,r9
   140045aab:	je     0x140045ac9
   140045aad:	mov    ecx,r10d
   140045ab0:	lea    rax,[rbx-0x2]
   140045ab4:	cmp    rcx,rax
   140045ab7:	jae    0x140045ac9
   140045ab9:	inc    r10d
   140045abc:	mov    WORD PTR [r9+rcx*2],si
   140045ac1:	mov    WORD PTR [r9+r10*2],bp
   140045ac6:	inc    r10d
   140045ac9:	inc    edi
   140045acb:	mov    eax,edi
   140045acd:	cmp    rax,r14
   140045ad0:	jb     0x140045a64
   140045ad2:	test   r8,r8
   140045ad5:	je     0x140045ae3
   140045ad7:	test   rbx,rbx
   140045ada:	je     0x140045ae3
   140045adc:	mov    eax,r11d
   140045adf:	mov    BYTE PTR [rax+r8*1],r12b
   140045ae3:	test   r9,r9
   140045ae6:	je     0x140045af5
   140045ae8:	test   rbx,rbx
   140045aeb:	je     0x140045af5
   140045aed:	mov    eax,r10d
   140045af0:	mov    WORD PTR [r9+rax*2],r12w
   140045af5:	mov    rbx,QWORD PTR [rsp+0x20]
   140045afa:	mov    rbp,QWORD PTR [rsp+0x28]
   140045aff:	mov    rsi,QWORD PTR [rsp+0x30]
   140045b04:	mov    rdi,QWORD PTR [rsp+0x38]
   140045b09:	pop    r15
   140045b0b:	pop    r14
   140045b0d:	pop    r12
   140045b0f:	ret    
   140045b10:	mov    QWORD PTR [rsp+0x8],rbx
   140045b15:	mov    QWORD PTR [rsp+0x10],rdi
   140045b1a:	mov    r11,r8
   140045b1d:	mov    r9,rdx
   140045b20:	movzx  eax,WORD PTR [rcx]
   140045b23:	cmp    eax,0x20
   140045b26:	je     0x140045b2d
   140045b28:	cmp    eax,0x9
   140045b2b:	jne    0x140045b33
   140045b2d:	add    rcx,0x2
   140045b31:	jmp    0x140045b20
   140045b33:	movzx  r8d,WORD PTR [rcx]
   140045b37:	xor    ebx,ebx
   140045b39:	test   r8w,r8w
   140045b3d:	jne    0x140045b46
   140045b3f:	xor    eax,eax
   140045b41:	jmp    0x140045bc9
   140045b46:	mov    rdx,rbx
   140045b49:	mov    r10b,bl
   140045b4c:	mov    edi,0x22
   140045b51:	test   r10b,r10b
   140045b54:	jne    0x140045b64
   140045b56:	movzx  eax,r8w
   140045b5a:	cmp    eax,0x20
   140045b5d:	je     0x140045bbc
   140045b5f:	cmp    eax,0x9
   140045b62:	je     0x140045bbc
   140045b64:	cmp    r8w,di
   140045b68:	jne    0x140045b98
   140045b6a:	lea    r8,[rcx+0x2]
   140045b6e:	cmp    WORD PTR [r8],di
   140045b72:	jne    0x140045b8f
   140045b74:	test   r9,r9
   140045b77:	je     0x140045b8a
   140045b79:	lea    rax,[r11-0x1]
   140045b7d:	cmp    rdx,rax
   140045b80:	jae    0x140045b8a
   140045b82:	mov    WORD PTR [r9+rdx*2],di
   140045b87:	inc    rdx
   140045b8a:	mov    rcx,r8
   140045b8d:	jmp    0x140045bae
   140045b8f:	test   r10b,r10b
   140045b92:	sete   r10b
   140045b96:	jmp    0x140045bae
   140045b98:	test   r9,r9
   140045b9b:	je     0x140045bae
   140045b9d:	lea    rax,[r11-0x1]
   140045ba1:	cmp    rdx,rax
   140045ba4:	jae    0x140045bae
   140045ba6:	mov    WORD PTR [r9+rdx*2],r8w
   140045bab:	inc    rdx
   140045bae:	add    rcx,0x2
   140045bb2:	movzx  r8d,WORD PTR [rcx]
   140045bb6:	test   r8w,r8w
   140045bba:	jne    0x140045b51
   140045bbc:	test   r9,r9
   140045bbf:	je     0x140045bc6
   140045bc1:	mov    WORD PTR [r9+rdx*2],bx
   140045bc6:	mov    rax,rcx
   140045bc9:	mov    rbx,QWORD PTR [rsp+0x8]
   140045bce:	mov    rdi,QWORD PTR [rsp+0x10]
   140045bd3:	ret    
   140045bd4:	mov    edx,ecx
   140045bd6:	mov    ecx,0x1
   140045bdb:	jmp    0x140045be9
   140045bdd:	mov    eax,0xcccccccd
   140045be2:	mul    edx
   140045be4:	shr    edx,0x3
   140045be7:	inc    ecx
   140045be9:	cmp    edx,0xa
   140045bec:	jae    0x140045bdd
   140045bee:	mov    eax,ecx
   140045bf0:	ret    
   140045bf1:	int3   
   140045bf2:	int3   
   140045bf3:	int3   
   140045bf4:	rex push rbx
   140045bf6:	sub    rsp,0x20
   140045bfa:	mov    eax,DWORD PTR [rip+0x58ee0]        # 0x14009eae0
   140045c00:	mov    r8d,0x800
   140045c06:	inc    eax
   140045c08:	cmp    eax,0x4
   140045c0b:	sbb    edx,edx
   140045c0d:	and    edx,eax
   140045c0f:	lea    rax,[rip+0x54eca]        # 0x14009aae0
   140045c16:	mov    ebx,edx
   140045c18:	mov    DWORD PTR [rip+0x58ec2],edx        # 0x14009eae0
   140045c1e:	shl    rbx,0xc
   140045c22:	add    rbx,rax
   140045c25:	mov    rdx,rbx
   140045c28:	call   0x1400489f0
   140045c2d:	xor    eax,eax
   140045c2f:	mov    WORD PTR [rbx+0xffe],ax
   140045c36:	mov    rax,rbx
   140045c39:	add    rsp,0x20
   140045c3d:	pop    rbx
   140045c3e:	ret    
   140045c3f:	int3   
   140045c40:	mov    al,BYTE PTR [rcx]
   140045c42:	mov    r11,rdx
   140045c45:	mov    r9,rcx
   140045c48:	xor    r10d,r10d
   140045c4b:	jmp    0x140045ccc
   140045c4d:	cmp    al,0x20
   140045c4f:	jne    0x140045c62
   140045c51:	mov    eax,r10d
   140045c54:	cmp    rax,r8
   140045c57:	jae    0x140045c62
   140045c59:	inc    r9
   140045c5c:	cmp    BYTE PTR [r9],0x20
   140045c60:	je     0x140045c54
   140045c62:	cmp    BYTE PTR [r9],0x0
   140045c66:	je     0x140045cd4
   140045c68:	movsx  ecx,BYTE PTR [r9]
   140045c6c:	lea    edx,[rcx-0x30]
   140045c6f:	cmp    edx,0x9
   140045c72:	jbe    0x140045c90
   140045c74:	lea    eax,[rcx-0x61]
   140045c77:	cmp    eax,0x5
   140045c7a:	ja     0x140045c81
   140045c7c:	lea    edx,[rcx-0x57]
   140045c7f:	jmp    0x140045c90
   140045c81:	lea    eax,[rcx-0x41]
   140045c84:	cmp    eax,0x5
   140045c87:	ja     0x140045c8e
   140045c89:	lea    edx,[rcx-0x37]
   140045c8c:	jmp    0x140045c90
   140045c8e:	xor    edx,edx
   140045c90:	movsx  ecx,BYTE PTR [r9+0x1]
   140045c95:	lea    eax,[rcx-0x30]
   140045c98:	cmp    eax,0x9
   140045c9b:	jbe    0x140045cb9
   140045c9d:	lea    eax,[rcx-0x61]
   140045ca0:	cmp    eax,0x5
   140045ca3:	ja     0x140045caa
   140045ca5:	lea    eax,[rcx-0x57]
   140045ca8:	jmp    0x140045cb9
   140045caa:	lea    eax,[rcx-0x41]
   140045cad:	cmp    eax,0x5
   140045cb0:	ja     0x140045cb7
   140045cb2:	lea    eax,[rcx-0x37]
   140045cb5:	jmp    0x140045cb9
   140045cb7:	xor    eax,eax
   140045cb9:	shl    dl,0x4
   140045cbc:	add    dl,al
   140045cbe:	mov    BYTE PTR [r10+r11*1],dl
   140045cc2:	inc    r10d
   140045cc5:	add    r9,0x2
   140045cc9:	mov    al,BYTE PTR [r9]
   140045ccc:	test   al,al
   140045cce:	jne    0x140045c4d
   140045cd4:	mov    eax,r10d
   140045cd7:	ret    
   140045cd8:	mov    QWORD PTR [rsp+0x8],rbx
   140045cdd:	push   rdi
   140045cde:	sub    rsp,0x20
   140045ce2:	mov    rbx,r8
   140045ce5:	mov    rdi,rdx
   140045ce8:	or     rax,0xffffffffffffffff
   140045cec:	inc    rax
   140045cef:	cmp    BYTE PTR [rcx+rax*1],0x0
   140045cf3:	jne    0x140045cec
   140045cf5:	inc    rax
   140045cf8:	cmp    rbx,rax
   140045cfb:	cmova  rbx,rax
   140045cff:	mov    r8d,ebx
   140045d02:	call   QWORD PTR [rip+0x26800]        # 0x14006c508
   140045d08:	mov    BYTE PTR [rdi+rbx*1-0x1],0x0
   140045d0d:	mov    rbx,QWORD PTR [rsp+0x30]
   140045d12:	add    rsp,0x20
   140045d16:	pop    rdi
   140045d17:	ret    
   140045d18:	add    ecx,0xffffffd0
   140045d1b:	cmp    ecx,0x9
   140045d1e:	setbe  al
   140045d21:	ret    
   140045d22:	int3   
   140045d23:	int3   
   140045d24:	cmp    ecx,0x20
   140045d27:	je     0x140045d31
   140045d29:	cmp    ecx,0x9
   140045d2c:	je     0x140045d31
   140045d2e:	xor    eax,eax
   140045d30:	ret    
   140045d31:	mov    eax,0x1
   140045d36:	ret    
   140045d37:	int3   
   140045d38:	movzx  eax,WORD PTR [rcx]
   140045d3b:	xor    r8d,r8d
   140045d3e:	test   ax,ax
   140045d41:	je     0x140045d5c
   140045d43:	mov    edx,r8d
   140045d46:	sub    ax,0x20
   140045d4a:	cmp    ax,0x5f
   140045d4e:	ja     0x140045d5f
   140045d50:	inc    rdx
   140045d53:	movzx  eax,WORD PTR [rcx+rdx*2]
   140045d57:	test   ax,ax
   140045d5a:	jne    0x140045d46
   140045d5c:	mov    al,0x1
   140045d5e:	ret    
   140045d5f:	xor    al,al
   140045d61:	ret    
   140045d62:	int3   
   140045d63:	int3   
   140045d64:	lea    rax,[rip+0x2ad69]        # 0x140070ad4
   140045d6b:	test   rcx,rcx
   140045d6e:	cmove  rcx,rax
   140045d72:	mov    rax,rcx
   140045d75:	ret    
   140045d76:	int3   
   140045d77:	int3   
   140045d78:	mov    rax,rsp
   140045d7b:	mov    QWORD PTR [rax+0x8],rbx
   140045d7f:	mov    QWORD PTR [rax+0x10],rbp
   140045d83:	mov    QWORD PTR [rax+0x18],rsi
   140045d87:	mov    QWORD PTR [rax+0x20],rdi
   140045d8b:	push   r12
   140045d8d:	push   r14
   140045d8f:	push   r15
   140045d91:	xor    r15d,r15d
   140045d94:	mov    rbp,r8
   140045d97:	mov    rbx,rdx
   140045d9a:	mov    r11,rcx
   140045d9d:	mov    r10d,r15d
   140045da0:	mov    r9d,r15d
   140045da3:	cmp    WORD PTR [rcx],r15w
   140045da7:	je     0x140045e87
   140045dad:	lea    r14,[r8-0x1]
   140045db1:	lea    r12d,[r15+0xd]
   140045db5:	mov    esi,r9d
   140045db8:	cmp    rsi,r14
   140045dbb:	jae    0x140045e87
   140045dc1:	mov    eax,r10d
   140045dc4:	lea    rdi,[r11+rax*2]
   140045dc8:	cmp    WORD PTR [rdi],0x25
   140045dcc:	jne    0x140045e44
   140045dce:	test   r10d,r10d
   140045dd1:	je     0x140045ddf
   140045dd3:	lea    eax,[r10-0x1]
   140045dd7:	cmp    WORD PTR [r11+rax*2],0x25
   140045ddd:	je     0x140045e44
   140045ddf:	lea    edx,[r10+0x1]
   140045de3:	movzx  ecx,WORD PTR [r11+rdx*2]
   140045de8:	lea    eax,[rcx-0x30]
   140045deb:	cmp    eax,0x9
   140045dee:	jbe    0x140045df5
   140045df0:	cmp    ecx,0x2d
   140045df3:	jne    0x140045df9
   140045df5:	inc    edx
   140045df7:	jmp    0x140045de3
   140045df9:	cmp    ecx,0x73
   140045dfc:	jne    0x140045e44
   140045dfe:	mov    r8d,edx
   140045e01:	mov    rax,rbp
   140045e04:	sub    r8d,r10d
   140045e07:	lea    ecx,[r8+0x1]
   140045e0b:	sub    rax,rcx
   140045e0e:	cmp    rsi,rax
   140045e11:	jae    0x140045e44
   140045e13:	cmp    r10d,edx
   140045e16:	jae    0x140045e35
   140045e18:	mov    edx,r8d
   140045e1b:	add    r10d,r8d
   140045e1e:	movzx  eax,WORD PTR [rdi]
   140045e21:	lea    rdi,[rdi+0x2]
   140045e25:	mov    ecx,r9d
   140045e28:	inc    r9d
   140045e2b:	mov    WORD PTR [rbx+rcx*2],ax
   140045e2f:	sub    rdx,0x1
   140045e33:	jne    0x140045e1e
   140045e35:	mov    eax,r9d
   140045e38:	mov    ecx,0x6c
   140045e3d:	inc    r9d
   140045e40:	mov    WORD PTR [rbx+rax*2],cx
   140045e44:	mov    edx,r10d
   140045e47:	cmp    WORD PTR [r11+rdx*2],0xa
   140045e4d:	jne    0x140045e6a
   140045e4f:	test   r10d,r10d
   140045e52:	je     0x140045e5f
   140045e54:	lea    eax,[r10-0x1]
   140045e58:	cmp    WORD PTR [r11+rax*2],r12w
   140045e5d:	je     0x140045e6a
   140045e5f:	mov    eax,r9d
   140045e62:	inc    r9d
   140045e65:	mov    WORD PTR [rbx+rax*2],r12w
   140045e6a:	movzx  eax,WORD PTR [r11+rdx*2]
   140045e6f:	inc    r10d
   140045e72:	mov    ecx,r9d
   140045e75:	inc    r9d
   140045e78:	mov    WORD PTR [rbx+rcx*2],ax
   140045e7c:	cmp    WORD PTR [r11+r10*2],r15w
   140045e81:	jne    0x140045db5
   140045e87:	mov    rbp,QWORD PTR [rsp+0x28]
   140045e8c:	mov    rsi,QWORD PTR [rsp+0x30]
   140045e91:	mov    rdi,QWORD PTR [rsp+0x38]
   140045e96:	mov    eax,r9d
   140045e99:	mov    WORD PTR [rbx+rax*2],r15w
   140045e9e:	mov    rbx,QWORD PTR [rsp+0x20]
   140045ea3:	pop    r15
   140045ea5:	pop    r14
   140045ea7:	pop    r12
   140045ea9:	ret    
   140045eaa:	int3   
   140045eab:	int3   
   140045eac:	or     rdx,0xffffffffffffffff
   140045eb0:	mov    r8,rcx
   140045eb3:	xor    r10d,r10d
   140045eb6:	inc    rdx
   140045eb9:	cmp    WORD PTR [rcx+rdx*2],r10w
   140045ebe:	jne    0x140045eb6
   140045ec0:	sub    edx,0x1
   140045ec3:	js     0x140045ef2
   140045ec5:	movsxd rax,edx
   140045ec8:	lea    rcx,[rcx+rax*2]
   140045ecc:	cmp    WORD PTR [rcx],0x20
   140045ed0:	ja     0x140045ef2
   140045ed2:	movzx  eax,WORD PTR [rcx]
   140045ed5:	movabs r9,0x100002600
   140045edf:	bt     r9,rax
   140045ee3:	jae    0x140045ef2
   140045ee5:	mov    WORD PTR [rcx],r10w
   140045ee9:	sub    rcx,0x2
   140045eed:	sub    edx,0x1
   140045ef0:	jns    0x140045ecc
   140045ef2:	mov    rax,r8
   140045ef5:	ret    
   140045ef6:	int3   
   140045ef7:	int3   
   140045ef8:	or     rdx,0xffffffffffffffff
   140045efc:	mov    r8,rcx
   140045eff:	xor    r9d,r9d
   140045f02:	inc    rdx
   140045f05:	cmp    WORD PTR [rcx+rdx*2],r9w
   140045f0a:	jne    0x140045f02
   140045f0c:	sub    edx,0x1
   140045f0f:	js     0x140045f31
   140045f11:	movsxd rax,edx
   140045f14:	lea    rcx,[rcx+rax*2]
   140045f18:	cmp    WORD PTR [rcx],0xd
   140045f1c:	je     0x140045f24
   140045f1e:	cmp    WORD PTR [rcx],0xa
   140045f22:	jne    0x140045f31
   140045f24:	mov    WORD PTR [rcx],r9w
   140045f28:	sub    rcx,0x2
   140045f2c:	sub    edx,0x1
   140045f2f:	jns    0x140045f18
   140045f31:	mov    rax,r8
   140045f34:	ret    
   140045f35:	int3   
   140045f36:	int3   
   140045f37:	int3   
   140045f38:	cmp    cl,0x69
   140045f3b:	jne    0x140045f40
   140045f3d:	mov    al,0x49
   140045f3f:	ret    
   140045f40:	movzx  ecx,cl
   140045f43:	jmp    0x14005f048
   140045f48:	cmp    cx,0x69
   140045f4c:	jne    0x140045f54
   140045f4e:	mov    eax,0x49
   140045f53:	ret    
   140045f54:	movzx  ecx,cx
   140045f57:	jmp    0x140048f28
   140045f5c:	mov    QWORD PTR [rsp+0x8],rbx
   140045f61:	mov    QWORD PTR [rsp+0x18],rsi
   140045f66:	push   rdi
   140045f67:	sub    rsp,0x80
   140045f6e:	mov    rax,QWORD PTR [rip+0x3bf6b]        # 0x140081ee0
   140045f75:	xor    rax,rsp
   140045f78:	mov    QWORD PTR [rsp+0x70],rax
   140045f7d:	xor    esi,esi
   140045f7f:	mov    rbx,rdx
   140045f82:	test   rcx,rcx
   140045f85:	mov    r11d,esi
   140045f88:	mov    r10,rcx
   140045f8b:	mov    r9d,esi
   140045f8e:	sets   r11b
   140045f92:	test   r11d,r11d
   140045f95:	je     0x140045f9a
   140045f97:	neg    r10
   140045f9a:	movsxd rax,r11d
   140045f9d:	mov    edi,0x1
   140045fa2:	sub    r8,rax
   140045fa5:	cmp    rdi,r8
   140045fa8:	jae    0x140045fee
   140045faa:	movabs rax,0x6666666666666667
   140045fb4:	inc    rdi
   140045fb7:	imul   r10
   140045fba:	sar    rdx,0x2
   140045fbe:	mov    rax,rdx
   140045fc1:	shr    rax,0x3f
   140045fc5:	add    rdx,rax
   140045fc8:	movzx  eax,dx
   140045fcb:	shl    ax,0x2
   140045fcf:	lea    ecx,[rax+rdx*1]
   140045fd2:	add    cx,cx
   140045fd5:	sub    r10w,cx
   140045fd9:	add    r10w,0x30
   140045fde:	mov    WORD PTR [rsp+r9*2],r10w
   140045fe3:	inc    r9
   140045fe6:	mov    r10,rdx
   140045fe9:	test   rdx,rdx
   140045fec:	jne    0x140045fa5
   140045fee:	test   r11d,r11d
   140045ff1:	je     0x140046000
   140045ff3:	mov    eax,0x2d
   140045ff8:	mov    WORD PTR [rsp+r9*2],ax
   140045ffd:	inc    r9
   140046000:	mov    rcx,rsi
   140046003:	test   r9,r9
   140046006:	je     0x140046020
   140046008:	lea    rdx,[rsp+r9*2-0x2]
   14004600d:	movzx  eax,WORD PTR [rdx]
   140046010:	lea    rdx,[rdx-0x2]
   140046014:	mov    WORD PTR [rbx+rcx*2],ax
   140046018:	inc    rcx
   14004601b:	cmp    rcx,r9
   14004601e:	jb     0x14004600d
   140046020:	mov    WORD PTR [rbx+r9*2],si
   140046025:	mov    rcx,QWORD PTR [rsp+0x70]
   14004602a:	xor    rcx,rsp
   14004602d:	call   0x140055f90
   140046032:	lea    r11,[rsp+0x80]
   14004603a:	mov    rbx,QWORD PTR [r11+0x10]
   14004603e:	mov    rsi,QWORD PTR [r11+0x20]
   140046042:	mov    rsp,r11
   140046045:	pop    rdi
   140046046:	ret    
   140046047:	int3   
   140046048:	movzx  ecx,cl
   14004604b:	rex.W jmp QWORD PTR [rip+0x26496]        # 0x14006c4e8
   140046052:	int3   
   140046053:	int3   
   140046054:	mov    QWORD PTR [rsp+0x8],rbx
   140046059:	push   rdi
   14004605a:	sub    rsp,0x20
   14004605e:	mov    rdi,r8
   140046061:	mov    rbx,rcx
   140046064:	test   r8,r8
   140046067:	je     0x140046076
   140046069:	dec    r8
   14004606c:	call   0x14005e100
   140046071:	mov    BYTE PTR [rbx+rdi*1-0x1],0x0
   140046076:	mov    rax,rbx
   140046079:	mov    rbx,QWORD PTR [rsp+0x30]
   14004607e:	add    rsp,0x20
   140046082:	pop    rdi
   140046083:	ret    
   140046084:	mov    QWORD PTR [rsp+0x8],rbx
   140046089:	mov    QWORD PTR [rsp+0x10],rbp
   14004608e:	mov    QWORD PTR [rsp+0x18],rsi
   140046093:	push   rdi
   140046094:	sub    rsp,0x30
   140046098:	mov    rsi,rdx
   14004609b:	mov    rbx,r8
   14004609e:	mov    rdx,r8
   1400460a1:	mov    rbp,rcx
   1400460a4:	call   0x14005f268
   1400460a9:	cmp    rax,rbx
   1400460ac:	jae    0x1400460be
   1400460ae:	mov    rdx,rbx
   1400460b1:	mov    rcx,rbp
   1400460b4:	call   0x14005f268
   1400460b9:	mov    rdi,rax
   1400460bc:	jmp    0x1400460c1
   1400460be:	mov    rdi,rbx
   1400460c1:	mov    rdx,rbx
   1400460c4:	mov    rcx,rsi
   1400460c7:	call   0x14005f268
   1400460cc:	cmp    rax,rbx
   1400460cf:	jae    0x1400460df
   1400460d1:	mov    rdx,rbx
   1400460d4:	mov    rcx,rsi
   1400460d7:	call   0x14005f268
   1400460dc:	mov    rbx,rax
   1400460df:	mov    DWORD PTR [rsp+0x28],ebx
   1400460e3:	mov    r9d,edi
   1400460e6:	mov    r8,rbp
   1400460e9:	mov    QWORD PTR [rsp+0x20],rsi
   1400460ee:	mov    edx,0x1001
   1400460f3:	mov    ecx,0x400
   1400460f8:	call   QWORD PTR [rip+0x260ba]        # 0x14006c1b8
   1400460fe:	mov    rbx,QWORD PTR [rsp+0x40]
   140046103:	sub    eax,0x2
   140046106:	mov    rbp,QWORD PTR [rsp+0x48]
   14004610b:	mov    rsi,QWORD PTR [rsp+0x50]
   140046110:	add    rsp,0x30
   140046114:	pop    rdi
   140046115:	ret    
   140046116:	int3   
   140046117:	int3   
   140046118:	jmp    0x140048f34
   14004611d:	int3   
   14004611e:	int3   
   14004611f:	int3   
   140046120:	rex push rbx
   140046122:	sub    rsp,0x20
   140046126:	or     rax,0xffffffffffffffff
   14004612a:	mov    rbx,rcx
   14004612d:	xor    ecx,ecx
   14004612f:	inc    rax
   140046132:	cmp    WORD PTR [rbx+rax*2],cx
   140046136:	jne    0x14004612f
   140046138:	sub    r8d,eax
   14004613b:	dec    r8d
   14004613e:	test   r8d,r8d
   140046141:	jle    0x14004614e
   140046143:	movsxd r8,r8d
   140046146:	mov    rcx,rbx
   140046149:	call   0x14005f074
   14004614e:	mov    rax,rbx
   140046151:	add    rsp,0x20
   140046155:	pop    rbx
   140046156:	ret    
   140046157:	int3   
   140046158:	mov    QWORD PTR [rsp+0x8],rbx
   14004615d:	mov    QWORD PTR [rsp+0x10],rsi
   140046162:	push   rdi
   140046163:	sub    rsp,0x20
   140046167:	xor    esi,esi
   140046169:	mov    rdi,r8
   14004616c:	mov    rbx,rcx
   14004616f:	test   r8,r8
   140046172:	je     0x140046181
   140046174:	dec    r8
   140046177:	call   0x14005e00c
   14004617c:	mov    WORD PTR [rbx+rdi*2-0x2],si
   140046181:	mov    rsi,QWORD PTR [rsp+0x38]
   140046186:	mov    rax,rbx
   140046189:	mov    rbx,QWORD PTR [rsp+0x30]
   14004618e:	add    rsp,0x20
   140046192:	pop    rdi
   140046193:	ret    
   140046194:	rex push rbx
   140046196:	sub    rsp,0x20
   14004619a:	xor    eax,eax
   14004619c:	mov    rbx,rcx
   14004619f:	mov    QWORD PTR [rcx],rax
   1400461a2:	mov    QWORD PTR [rcx+0x8],rax
   1400461a6:	mov    QWORD PTR [rcx+0x10],rax
   1400461aa:	mov    QWORD PTR [rcx+0x18],rax
   1400461ae:	call   0x140046378
   1400461b3:	mov    rax,rbx
   1400461b6:	add    rsp,0x20
   1400461ba:	pop    rbx
   1400461bb:	ret    
   1400461bc:	mov    QWORD PTR [rsp+0x8],rbx
   1400461c1:	mov    QWORD PTR [rsp+0x10],rbp
   1400461c6:	mov    QWORD PTR [rsp+0x18],rsi
   1400461cb:	push   rdi
   1400461cc:	sub    rsp,0x20
   1400461d0:	mov    rsi,QWORD PTR [rcx+0x8]
   1400461d4:	lea    rbx,[rip+0x2a905]        # 0x140070ae0
   1400461db:	xor    ebp,ebp
   1400461dd:	mov    rdi,rcx
   1400461e0:	test   rdx,rdx
   1400461e3:	cmovne rbx,rdx
   1400461e7:	or     rdx,0xffffffffffffffff
   1400461eb:	inc    rdx
   1400461ee:	cmp    WORD PTR [rbx+rdx*2],bp
   1400461f2:	jne    0x1400461eb
   1400461f4:	inc    rdx
   1400461f7:	call   0x140007a44
   1400461fc:	mov    rax,QWORD PTR [rdi]
   1400461ff:	lea    rcx,[rax+rsi*2]
   140046203:	movzx  eax,WORD PTR [rbx]
   140046206:	lea    rbx,[rbx+0x2]
   14004620a:	mov    WORD PTR [rcx],ax
   14004620d:	lea    rcx,[rcx+0x2]
   140046211:	test   ax,ax
   140046214:	jne    0x140046203
   140046216:	inc    DWORD PTR [rdi+0x28]
   140046219:	mov    rbx,QWORD PTR [rsp+0x30]
   14004621e:	mov    rbp,QWORD PTR [rsp+0x38]
   140046223:	mov    rsi,QWORD PTR [rsp+0x40]
   140046228:	add    rsp,0x20
   14004622c:	pop    rdi
   14004622d:	ret    
   14004622e:	int3   
   14004622f:	int3   
   140046230:	sub    rsp,0x28
   140046234:	lea    rdx,[rsp+0x38]
   140046239:	call   0x140046248
   14004623e:	mov    rax,QWORD PTR [rsp+0x38]
   140046243:	add    rsp,0x28
   140046247:	ret    
   140046248:	mov    r9,QWORD PTR [rcx+0x20]
   14004624c:	mov    r8,rcx
   14004624f:	cmp    r9,QWORD PTR [rcx+0x8]
   140046253:	jb     0x140046262
   140046255:	xor    ecx,ecx
   140046257:	test   rdx,rdx
   14004625a:	je     0x14004625f
   14004625c:	mov    QWORD PTR [rdx],rcx
   14004625f:	xor    al,al
   140046261:	ret    
   140046262:	mov    rax,QWORD PTR [rcx]
   140046265:	lea    r10,[rax+r9*2]
   140046269:	or     rax,0xffffffffffffffff
   14004626d:	xor    ecx,ecx
   14004626f:	inc    rax
   140046272:	cmp    WORD PTR [r10+rax*2],cx
   140046277:	jne    0x14004626f
   140046279:	inc    rax
   14004627c:	add    rax,r9
   14004627f:	mov    QWORD PTR [r8+0x20],rax
   140046283:	test   rdx,rdx
   140046286:	je     0x14004628b
   140046288:	mov    QWORD PTR [rdx],r10
   14004628b:	mov    al,0x1
   14004628d:	ret    
   14004628e:	int3   
   14004628f:	int3   
   140046290:	mov    QWORD PTR [rsp+0x8],rbx
   140046295:	push   rdi
   140046296:	sub    rsp,0x20
   14004629a:	mov    rdi,rdx
   14004629d:	mov    rbx,r8
   1400462a0:	lea    rdx,[rsp+0x48]
   1400462a5:	call   0x140046248
   1400462aa:	test   al,al
   1400462ac:	je     0x1400462c0
   1400462ae:	mov    rdx,QWORD PTR [rsp+0x48]
   1400462b3:	mov    r8,rbx
   1400462b6:	mov    rcx,rdi
   1400462b9:	call   0x140046158
   1400462be:	mov    al,0x1
   1400462c0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400462c5:	add    rsp,0x20
   1400462c9:	pop    rdi
   1400462ca:	ret    
   1400462cb:	int3   
   1400462cc:	mov    rax,rsp
   1400462cf:	mov    QWORD PTR [rax+0x8],rbx
   1400462d3:	mov    QWORD PTR [rax+0x10],rbp
   1400462d7:	mov    QWORD PTR [rax+0x18],rsi
   1400462db:	mov    QWORD PTR [rax+0x20],rdi
   1400462df:	push   r14
   1400462e1:	sub    rsp,0x20
   1400462e5:	mov    rbx,rcx
   1400462e8:	mov    esi,r9d
   1400462eb:	mov    rcx,QWORD PTR [rcx+0xb0]
   1400462f2:	mov    rbp,r8
   1400462f5:	mov    r14,rdx
   1400462f8:	mov    edi,0x1
   1400462fd:	cmp    rcx,0x10
   140046301:	jae    0x140046313
   140046303:	mov    rax,QWORD PTR [rbx+0x20]
   140046307:	mov    QWORD PTR [rbx+rcx*8+0x30],rax
   14004630c:	add    QWORD PTR [rbx+0xb0],rdi
   140046313:	and    QWORD PTR [rbx+0x20],0x0
   140046318:	test   r9d,r9d
   14004631b:	js     0x14004633a
   14004631d:	mov    r8,rbp
   140046320:	mov    rdx,r14
   140046323:	mov    rcx,rbx
   140046326:	sub    esi,edi
   140046328:	call   0x140046290
   14004632d:	test   al,al
   14004632f:	je     0x140046337
   140046331:	test   esi,esi
   140046333:	jns    0x14004631d
   140046335:	jmp    0x14004633a
   140046337:	xor    dil,dil
   14004633a:	mov    rcx,QWORD PTR [rbx+0xb0]
   140046341:	test   rcx,rcx
   140046344:	je     0x140046359
   140046346:	dec    rcx
   140046349:	mov    QWORD PTR [rbx+0xb0],rcx
   140046350:	mov    rcx,QWORD PTR [rbx+rcx*8+0x30]
   140046355:	mov    QWORD PTR [rbx+0x20],rcx
   140046359:	mov    rbx,QWORD PTR [rsp+0x30]
   14004635e:	mov    al,dil
   140046361:	mov    rdi,QWORD PTR [rsp+0x48]
   140046366:	mov    rbp,QWORD PTR [rsp+0x38]
   14004636b:	mov    rsi,QWORD PTR [rsp+0x40]
   140046370:	add    rsp,0x20
   140046374:	pop    r14
   140046376:	ret    
   140046377:	int3   
   140046378:	rex push rbx
   14004637a:	sub    rsp,0x20
   14004637e:	and    QWORD PTR [rcx+0x20],0x0
   140046383:	mov    rbx,rcx
   140046386:	call   0x140009a60
   14004638b:	and    DWORD PTR [rbx+0x28],0x0
   14004638f:	and    QWORD PTR [rbx+0xb0],0x0
   140046397:	add    rsp,0x20
   14004639b:	pop    rbx
   14004639c:	ret    
   14004639d:	int3   
   14004639e:	int3   
   14004639f:	int3   
   1400463a0:	and    QWORD PTR [rcx+0x20],0x0
   1400463a5:	ret    
   1400463a6:	int3   
   1400463a7:	int3   
   1400463a8:	mov    QWORD PTR [rsp+0x10],rbx
   1400463ad:	mov    QWORD PTR [rsp+0x18],rbp
   1400463b2:	mov    QWORD PTR [rsp+0x20],rsi
   1400463b7:	push   rdi
   1400463b8:	sub    rsp,0x20
   1400463bc:	mov    rbx,rcx
   1400463bf:	mov    bpl,r8b
   1400463c2:	mov    rcx,QWORD PTR [rcx+0xb0]
   1400463c9:	mov    rsi,rdx
   1400463cc:	cmp    rcx,0x10
   1400463d0:	jae    0x1400463e2
   1400463d2:	mov    rax,QWORD PTR [rbx+0x20]
   1400463d6:	mov    QWORD PTR [rbx+rcx*8+0x30],rax
   1400463db:	inc    QWORD PTR [rbx+0xb0]
   1400463e2:	and    QWORD PTR [rbx+0x20],0x0
   1400463e7:	xor    dil,dil
   1400463ea:	lea    rdx,[rsp+0x30]
   1400463ef:	mov    rcx,rbx
   1400463f2:	call   0x140046248
   1400463f7:	test   al,al
   1400463f9:	je     0x140046441
   1400463fb:	test   rsi,rsi
   1400463fe:	je     0x14004643e
   140046400:	mov    rdx,QWORD PTR [rsp+0x30]
   140046405:	test   rdx,rdx
   140046408:	je     0x14004643e
   14004640a:	test   bpl,bpl
   14004640d:	je     0x140046432
   14004640f:	mov    rax,rsi
   140046412:	sub    rdx,rsi
   140046415:	movzx  ecx,WORD PTR [rax]
   140046418:	cmp    cx,WORD PTR [rax+rdx*1]
   14004641c:	jne    0x14004642b
   14004641e:	add    rax,0x2
   140046422:	test   cx,cx
   140046425:	jne    0x140046415
   140046427:	xor    eax,eax
   140046429:	jmp    0x14004643a
   14004642b:	sbb    eax,eax
   14004642d:	or     eax,0x1
   140046430:	jmp    0x14004643a
   140046432:	mov    rcx,rsi
   140046435:	call   0x140048f34
   14004643a:	test   eax,eax
   14004643c:	jne    0x1400463ea
   14004643e:	mov    dil,0x1
   140046441:	mov    rcx,QWORD PTR [rbx+0xb0]
   140046448:	test   rcx,rcx
   14004644b:	je     0x140046460
   14004644d:	dec    rcx
   140046450:	mov    QWORD PTR [rbx+0xb0],rcx
   140046457:	mov    rcx,QWORD PTR [rbx+rcx*8+0x30]
   14004645c:	mov    QWORD PTR [rbx+0x20],rcx
   140046460:	mov    rbx,QWORD PTR [rsp+0x38]
   140046465:	mov    al,dil
   140046468:	mov    rbp,QWORD PTR [rsp+0x40]
   14004646d:	mov    rsi,QWORD PTR [rsp+0x48]
   140046472:	add    rsp,0x20
   140046476:	pop    rdi
   140046477:	ret    
   140046478:	mov    QWORD PTR [rsp+0x8],rbx
   14004647d:	mov    QWORD PTR [rsp+0x10],rsi
   140046482:	push   rdi
   140046483:	sub    rsp,0x20
   140046487:	add    QWORD PTR [rcx+0x8],rdx
   14004648b:	mov    rbx,rcx
   14004648e:	mov    rax,QWORD PTR [rcx+0x8]
   140046492:	cmp    rax,QWORD PTR [rcx+0x10]
   140046496:	jbe    0x14004650b
   140046498:	mov    r8,QWORD PTR [rcx+0x18]
   14004649c:	test   r8,r8
   14004649f:	je     0x1400464c5
   1400464a1:	cmp    rax,r8
   1400464a4:	jbe    0x1400464c5
   1400464a6:	lea    rdx,[rip+0x2a773]        # 0x140070c20
   1400464ad:	lea    rcx,[rip+0x4e3ac]        # 0x140094860
   1400464b4:	call   0x14001bc8c
   1400464b9:	lea    rcx,[rip+0x4e3a0]        # 0x140094860
   1400464c0:	call   0x14001bd24
   1400464c5:	mov    rcx,QWORD PTR [rbx+0x10]
   1400464c9:	mov    rax,rcx
   1400464cc:	shr    rax,0x2
   1400464d0:	lea    rdi,[rcx+0x20]
   1400464d4:	mov    rcx,QWORD PTR [rbx]
   1400464d7:	add    rdi,rax
   1400464da:	cmp    QWORD PTR [rbx+0x8],rdi
   1400464de:	cmova  rdi,QWORD PTR [rbx+0x8]
   1400464e3:	lea    rdx,[rdi+rdi*4]
   1400464e7:	shl    rdx,0x3
   1400464eb:	call   0x14005a940
   1400464f0:	mov    rsi,rax
   1400464f3:	test   rax,rax
   1400464f6:	jne    0x140046504
   1400464f8:	lea    rcx,[rip+0x4e361]        # 0x140094860
   1400464ff:	call   0x14001bd24
   140046504:	mov    QWORD PTR [rbx],rsi
   140046507:	mov    QWORD PTR [rbx+0x10],rdi
   14004650b:	mov    rbx,QWORD PTR [rsp+0x30]
   140046510:	mov    rsi,QWORD PTR [rsp+0x38]
   140046515:	add    rsp,0x20
   140046519:	pop    rdi
   14004651a:	ret    
   14004651b:	int3   
   14004651c:	rex push rbp
   14004651e:	push   rsi
   14004651f:	push   rdi
   140046520:	push   r12
   140046522:	push   r13
   140046524:	push   r14
   140046526:	push   r15
   140046528:	lea    rbp,[rsp-0x2140]
   140046530:	mov    eax,0x2240
   140046535:	call   0x140055f20
   14004653a:	sub    rsp,rax
   14004653d:	mov    QWORD PTR [rsp+0x78],0xfffffffffffffffe
   140046546:	mov    QWORD PTR [rsp+0x2290],rbx
   14004654e:	mov    rax,QWORD PTR [rip+0x3b98b]        # 0x140081ee0
   140046555:	xor    rax,rsp
   140046558:	mov    QWORD PTR [rbp+0x2130],rax
   14004655f:	mov    rax,rdx
   140046562:	mov    r12,rcx
   140046565:	test   rdx,rdx
   140046568:	jne    0x14004656e
   14004656a:	xor    edi,edi
   14004656c:	jmp    0x14004658a
   14004656e:	mov    r8d,0x400
   140046574:	lea    rdx,[rbp+0x530]
   14004657b:	mov    rcx,rax
   14004657e:	call   0x140048ca8
   140046583:	lea    rdi,[rbp+0x530]
   14004658a:	lea    rcx,[rip+0x2a5bf]        # 0x140070b50
   140046591:	call   0x1400469a8
   140046596:	mov    r14,rax
   140046599:	mov    QWORD PTR [rsp+0x48],rax
   14004659e:	test   rax,rax
   1400465a1:	je     0x14004692f
   1400465a7:	lea    rdx,[rip+0x2a5ba]        # 0x140070b68
   1400465ae:	mov    rcx,rax
   1400465b1:	call   QWORD PTR [rip+0x25da1]        # 0x14006c358
   1400465b7:	mov    rsi,rax
   1400465ba:	mov    QWORD PTR [rsp+0x50],rax
   1400465bf:	lea    rdx,[rip+0x2a5b2]        # 0x140070b78
   1400465c6:	mov    rcx,r14
   1400465c9:	call   QWORD PTR [rip+0x25d89]        # 0x14006c358
   1400465cf:	mov    rbx,rax
   1400465d2:	mov    QWORD PTR [rsp+0x38],rax
   1400465d7:	lea    rdx,[rip+0x2a5aa]        # 0x140070b88
   1400465de:	mov    rcx,r14
   1400465e1:	call   QWORD PTR [rip+0x25d71]        # 0x14006c358
   1400465e7:	mov    r13,rax
   1400465ea:	test   rsi,rsi
   1400465ed:	je     0x140046926
   1400465f3:	test   rbx,rbx
   1400465f6:	je     0x140046926
   1400465fc:	test   rax,rax
   1400465ff:	je     0x140046926
   140046605:	test   rdi,rdi
   140046608:	je     0x140046623
   14004660a:	cmp    BYTE PTR [rdi],0x2e
   14004660d:	jne    0x140046623
   14004660f:	mov    BYTE PTR [rsp+0x30],0x1
   140046614:	inc    rdi
   140046617:	mov    al,BYTE PTR [rdi]
   140046619:	neg    al
   14004661b:	sbb    rcx,rcx
   14004661e:	and    rdi,rcx
   140046621:	jmp    0x140046628
   140046623:	mov    BYTE PTR [rsp+0x30],0x0
   140046628:	xor    ecx,ecx
   14004662a:	call   0x140046a28
   14004662f:	lea    rdx,[rbp+0x1130]
   140046636:	mov    ebx,0x800
   14004663b:	mov    ecx,ebx
   14004663d:	call   QWORD PTR [rip+0x25b35]        # 0x14006c178
   140046643:	mov    r8d,ebx
   140046646:	lea    rdx,[rbp+0x930]
   14004664d:	mov    rcx,r12
   140046650:	call   0x140048ca8
   140046655:	mov    dl,0x1
   140046657:	lea    rcx,[rbp+0x930]
   14004665e:	call   0x1400323c8
   140046663:	lea    r9,[rsp+0x40]
   140046668:	lea    r8,[rbp+0x10]
   14004666c:	mov    edx,0x104
   140046671:	lea    rcx,[rbp+0x930]
   140046678:	call   QWORD PTR [rip+0x25b6a]        # 0x14006c1e8
   14004667e:	xor    edx,edx
   140046680:	lea    r8d,[rdx+0x28]
   140046684:	lea    rcx,[rbp-0x80]
   140046688:	call   0x140058f40
   14004668d:	or     DWORD PTR [rbp-0x78],0xffffffff
   140046691:	lea    rax,[rbp+0x10]
   140046695:	mov    QWORD PTR [rbp-0x70],rax
   140046699:	mov    rbx,QWORD PTR [rsp+0x40]
   14004669e:	mov    QWORD PTR [rbp-0x68],rbx
   1400466a2:	xor    edx,edx
   1400466a4:	lea    r8d,[rdx+0x60]
   1400466a8:	lea    rcx,[rbp-0x50]
   1400466ac:	call   0x140058f40
   1400466b1:	mov    DWORD PTR [rbp+0x0],0x1
   1400466b8:	lea    rax,[rbp-0x80]
   1400466bc:	mov    QWORD PTR [rbp+0x8],rax
   1400466c0:	mov    QWORD PTR [rbp-0x40],rbx
   1400466c4:	mov    QWORD PTR [rbp-0x48],rbx
   1400466c8:	xor    r15d,r15d
   1400466cb:	mov    QWORD PTR [rsp+0x58],r15
   1400466d0:	xor    esi,esi
   1400466d2:	mov    QWORD PTR [rsp+0x60],rsi
   1400466d7:	and    QWORD PTR [rsp+0x68],rsi
   1400466dc:	and    QWORD PTR [rsp+0x70],rsi
   1400466e1:	test   rdi,rdi
   1400466e4:	je     0x140046872
   1400466ea:	mov    rbx,rdi
   1400466ed:	mov    r14,QWORD PTR [rsp+0x38]
   1400466f2:	mov    edx,0x1
   1400466f7:	lea    rcx,[rsp+0x58]
   1400466fc:	call   0x140046478
   140046701:	mov    eax,DWORD PTR [rbp-0x10]
   140046704:	lea    rcx,[rax+rax*4]
   140046708:	mov    r15,QWORD PTR [rsp+0x58]
   14004670d:	lea    rsi,[r15+rcx*8]
   140046711:	xor    edx,edx
   140046713:	lea    r8d,[rdx+0x28]
   140046717:	mov    rcx,rsi
   14004671a:	call   0x140058f40
   14004671f:	mov    eax,DWORD PTR [rip+0x2a473]        # 0x140070b98
   140046725:	mov    DWORD PTR [rbp+0x120],eax
   14004672b:	movzx  eax,WORD PTR [rip+0x2a46a]        # 0x140070b9c
   140046732:	mov    WORD PTR [rbp+0x124],ax
   140046739:	lea    rcx,[rbp+0x120]
   140046740:	dec    rcx
   140046743:	inc    rcx
   140046746:	cmp    BYTE PTR [rcx],0x0
   140046749:	jne    0x140046743
   14004674b:	xor    edx,edx
   14004674d:	mov    al,BYTE PTR [rbx+rdx*1]
   140046750:	mov    BYTE PTR [rcx+rdx*1],al
   140046753:	inc    rdx
   140046756:	test   al,al
   140046758:	jne    0x14004674d
   14004675a:	lea    rdx,[rip+0x2a43f]        # 0x140070ba0
   140046761:	mov    rcx,rbx
   140046764:	call   0x14005f5b4
   140046769:	mov    rbx,rax
   14004676c:	test   rax,rax
   14004676f:	je     0x140046780
   140046771:	inc    rbx
   140046774:	movsx  ecx,BYTE PTR [rbx]
   140046777:	call   0x140045d24
   14004677c:	test   al,al
   14004677e:	jne    0x140046771
   140046780:	lea    rdx,[rip+0x2a41d]        # 0x140070ba4
   140046787:	lea    rcx,[rbp+0x120]
   14004678e:	call   0x14005f5b4
   140046793:	test   rax,rax
   140046796:	je     0x14004679b
   140046798:	mov    BYTE PTR [rax],0x0
   14004679b:	mov    DWORD PTR [rsi+0x4],0x1
   1400467a2:	lea    rax,[rsp+0x38]
   1400467a7:	mov    QWORD PTR [rsp+0x28],rax
   1400467ac:	and    DWORD PTR [rsp+0x20],0x0
   1400467b1:	mov    r9d,0x1
   1400467b7:	lea    r8,[rbp+0x125]
   1400467be:	xor    edx,edx
   1400467c0:	xor    ecx,ecx
   1400467c2:	call   r14
   1400467c5:	test   eax,eax
   1400467c7:	jne    0x140046848
   1400467c9:	mov    rax,QWORD PTR [rsp+0x38]
   1400467ce:	mov    ecx,DWORD PTR [rax]
   1400467d0:	mov    DWORD PTR [rsi],ecx
   1400467d2:	mov    rax,QWORD PTR [rsp+0x38]
   1400467d7:	mov    rcx,QWORD PTR [rax+0x8]
   1400467db:	test   rcx,rcx
   1400467de:	je     0x1400467ee
   1400467e0:	call   0x14006089c
   1400467e5:	mov    QWORD PTR [rsi+0x8],rax
   1400467e9:	mov    rax,QWORD PTR [rsp+0x38]
   1400467ee:	mov    rcx,QWORD PTR [rax+0x10]
   1400467f2:	test   rcx,rcx
   1400467f5:	je     0x140046805
   1400467f7:	call   0x14006089c
   1400467fc:	mov    QWORD PTR [rsi+0x10],rax
   140046800:	mov    rax,QWORD PTR [rsp+0x38]
   140046805:	mov    eax,DWORD PTR [rax+0x18]
   140046808:	mov    DWORD PTR [rsi+0x18],eax
   14004680b:	mov    rcx,QWORD PTR [rsp+0x38]
   140046810:	cmp    QWORD PTR [rcx+0x20],0x0
   140046815:	je     0x140046843
   140046817:	mov    eax,DWORD PTR [rcx+0x18]
   14004681a:	test   eax,eax
   14004681c:	je     0x140046843
   14004681e:	mov    ecx,eax
   140046820:	call   0x14005d520
   140046825:	mov    QWORD PTR [rsi+0x20],rax
   140046829:	mov    rdx,QWORD PTR [rsp+0x38]
   14004682e:	mov    r8d,DWORD PTR [rdx+0x18]
   140046832:	mov    rdx,QWORD PTR [rdx+0x20]
   140046836:	mov    rcx,rax
   140046839:	call   0x140059180
   14004683e:	mov    rcx,QWORD PTR [rsp+0x38]
   140046843:	call   r13
   140046846:	jmp    0x140046858
   140046848:	lea    rcx,[rbp+0x120]
   14004684f:	call   0x14006089c
   140046854:	mov    QWORD PTR [rsi+0x10],rax
   140046858:	inc    DWORD PTR [rbp-0x10]
   14004685b:	test   rbx,rbx
   14004685e:	jne    0x1400466f2
   140046864:	mov    QWORD PTR [rbp-0x8],r15
   140046868:	mov    rsi,QWORD PTR [rsp+0x60]
   14004686d:	mov    r14,QWORD PTR [rsp+0x48]
   140046872:	neg    rdi
   140046875:	sbb    r9d,r9d
   140046878:	and    r9d,0xfffffff8
   14004687c:	add    r9d,0x9
   140046880:	and    DWORD PTR [rsp+0x20],0x0
   140046885:	lea    r8,[rbp-0x50]
   140046889:	xor    edx,edx
   14004688b:	xor    ecx,ecx
   14004688d:	call   QWORD PTR [rsp+0x50]
   140046891:	test   eax,eax
   140046893:	sete   dil
   140046897:	test   rsi,rsi
   14004689a:	je     0x1400468d3
   14004689c:	lea    rbx,[r15+0x10]
   1400468a0:	mov    rcx,QWORD PTR [rbx-0x8]
   1400468a4:	test   rcx,rcx
   1400468a7:	je     0x1400468ae
   1400468a9:	call   0x14005a938
   1400468ae:	mov    rcx,QWORD PTR [rbx]
   1400468b1:	test   rcx,rcx
   1400468b4:	je     0x1400468bb
   1400468b6:	call   0x14005a938
   1400468bb:	mov    rcx,QWORD PTR [rbx+0x10]
   1400468bf:	test   rcx,rcx
   1400468c2:	je     0x1400468c9
   1400468c4:	call   0x14005a938
   1400468c9:	add    rbx,0x28
   1400468cd:	sub    rsi,0x1
   1400468d1:	jne    0x1400468a0
   1400468d3:	lea    rcx,[rbp+0x1130]
   1400468da:	call   QWORD PTR [rip+0x25900]        # 0x14006c1e0
   1400468e0:	mov    rcx,r14
   1400468e3:	call   QWORD PTR [rip+0x258af]        # 0x14006c198
   1400468e9:	mov    cl,0x1
   1400468eb:	call   0x140046a28
   1400468f0:	test   dil,dil
   1400468f3:	je     0x140046906
   1400468f5:	cmp    BYTE PTR [rsp+0x30],0x0
   1400468fa:	je     0x140046914
   1400468fc:	mov    rcx,r12
   1400468ff:	call   0x140021af4
   140046904:	jmp    0x140046914
   140046906:	mov    rdx,r12
   140046909:	mov    ecx,0x4b
   14004690e:	call   0x1400013b0
   140046913:	nop
   140046914:	test   r15,r15
   140046917:	je     0x140046921
   140046919:	mov    rcx,r15
   14004691c:	call   0x14005a938
   140046921:	mov    al,dil
   140046924:	jmp    0x140046931
   140046926:	mov    rcx,r14
   140046929:	call   QWORD PTR [rip+0x25869]        # 0x14006c198
   14004692f:	xor    al,al
   140046931:	mov    rcx,QWORD PTR [rbp+0x2130]
   140046938:	xor    rcx,rsp
   14004693b:	call   0x140055f90
   140046940:	mov    rbx,QWORD PTR [rsp+0x2290]
   140046948:	add    rsp,0x2240
   14004694f:	pop    r15
   140046951:	pop    r14
   140046953:	pop    r13
   140046955:	pop    r12
   140046957:	pop    rdi
   140046958:	pop    rsi
   140046959:	pop    rbp
   14004695a:	ret    
   14004695b:	int3   
   14004695c:	rex push rbx
   14004695e:	sub    rsp,0x10
   140046962:	xor    ecx,ecx
   140046964:	mov    eax,0x1
   140046969:	cpuid  
   14004696b:	bt     ecx,0x13
   14004696f:	jae    0x140046978
   140046971:	mov    eax,0x4
   140046976:	jmp    0x14004699a
   140046978:	bt     ecx,0x9
   14004697c:	jae    0x140046985
   14004697e:	mov    eax,0x3
   140046983:	jmp    0x14004699a
   140046985:	bt     edx,0x1a
   140046989:	jae    0x140046992
   14004698b:	mov    eax,0x2
   140046990:	jmp    0x14004699a
   140046992:	shr    edx,0x19
   140046995:	and    edx,0x1
   140046998:	mov    eax,edx
   14004699a:	add    rsp,0x10
   14004699e:	pop    rbx
   14004699f:	ret    
   1400469a0:	mov    DWORD PTR [rip+0x58142],ecx        # 0x14009eae8
   1400469a6:	ret    
   1400469a7:	int3   
   1400469a8:	rex push rbx
   1400469aa:	mov    eax,0x1030
   1400469af:	call   0x140055f20
   1400469b4:	sub    rsp,rax
   1400469b7:	mov    rax,QWORD PTR [rip+0x3b522]        # 0x140081ee0
   1400469be:	xor    rax,rsp
   1400469c1:	mov    QWORD PTR [rsp+0x1020],rax
   1400469c9:	mov    rbx,rcx
   1400469cc:	mov    edx,0x800
   1400469d1:	lea    rcx,[rsp+0x20]
   1400469d6:	call   QWORD PTR [rip+0x257fc]        # 0x14006c1d8
   1400469dc:	test   eax,eax
   1400469de:	jne    0x1400469e4
   1400469e0:	xor    eax,eax
   1400469e2:	jmp    0x140046a07
   1400469e4:	mov    r9d,0x800
   1400469ea:	lea    r8,[rsp+0x20]
   1400469ef:	mov    rdx,rbx
   1400469f2:	lea    rcx,[rsp+0x20]
   1400469f7:	call   0x1400322b0
   1400469fc:	lea    rcx,[rsp+0x20]
   140046a01:	call   QWORD PTR [rip+0x25799]        # 0x14006c1a0
   140046a07:	mov    rcx,QWORD PTR [rsp+0x1020]
   140046a0f:	xor    rcx,rsp
   140046a12:	call   0x140055f90
   140046a17:	add    rsp,0x1030
   140046a1e:	pop    rbx
   140046a1f:	ret    
   140046a20:	jmp    0x14005ec64
   140046a25:	int3   
   140046a26:	int3   
   140046a27:	int3   
   140046a28:	mov    QWORD PTR [rsp+0x8],rbx
   140046a2d:	push   rdi
   140046a2e:	sub    rsp,0x20
   140046a32:	mov    dil,cl
   140046a35:	lea    rcx,[rip+0x2a194]        # 0x140070bd0
   140046a3c:	call   QWORD PTR [rip+0x2590e]        # 0x14006c350
   140046a42:	mov    rbx,rax
   140046a45:	test   rax,rax
   140046a48:	je     0x140046a81
   140046a4a:	lea    rdx,[rip+0x2a197]        # 0x140070be8
   140046a51:	mov    rcx,rax
   140046a54:	call   QWORD PTR [rip+0x258fe]        # 0x14006c358
   140046a5a:	test   rax,rax
   140046a5d:	je     0x140046a71
   140046a5f:	neg    dil
   140046a62:	lea    rdx,[rip+0x2a17b]        # 0x140070be4
   140046a69:	sbb    rcx,rcx
   140046a6c:	and    rcx,rdx
   140046a6f:	call   rax
   140046a71:	lea    rdx,[rip+0x2a188]        # 0x140070c00
   140046a78:	mov    rcx,rbx
   140046a7b:	call   QWORD PTR [rip+0x258d7]        # 0x14006c358
   140046a81:	mov    rbx,QWORD PTR [rsp+0x30]
   140046a86:	add    rsp,0x20
   140046a8a:	pop    rdi
   140046a8b:	ret    
   140046a8c:	mov    QWORD PTR [rsp+0x8],rbx
   140046a91:	push   rdi
   140046a92:	sub    rsp,0x20
   140046a96:	lea    eax,[rcx-0x1]
   140046a99:	cmp    eax,0xe
   140046a9c:	ja     0x140046b11
   140046a9e:	mov    edi,0x1
   140046aa3:	cmp    ecx,edi
   140046aa5:	jne    0x140046aaf
   140046aa7:	lea    ebx,[rdi+0x3f]
   140046aaa:	lea    edi,[rbx-0x4f]
   140046aad:	jmp    0x140046ae9
   140046aaf:	cmp    ecx,0x7
   140046ab2:	jge    0x140046abe
   140046ab4:	mov    ebx,0x40
   140046ab9:	lea    edi,[rcx-0x4]
   140046abc:	jmp    0x140046ae9
   140046abe:	jne    0x140046ac7
   140046ac0:	mov    ebx,0x4000
   140046ac5:	jmp    0x140046ae9
   140046ac7:	cmp    ecx,0xa
   140046aca:	jge    0x140046ad6
   140046acc:	mov    ebx,0x20
   140046ad1:	lea    edi,[rcx-0x7]
   140046ad4:	jmp    0x140046ae9
   140046ad6:	jne    0x140046ae1
   140046ad8:	mov    ebx,0x8000
   140046add:	xor    edi,edi
   140046adf:	jmp    0x140046ae9
   140046ae1:	mov    ebx,0x80
   140046ae6:	lea    edi,[rcx-0xd]
   140046ae9:	call   QWORD PTR [rip+0x25599]        # 0x14006c088
   140046aef:	mov    rcx,rax
   140046af2:	mov    edx,ebx
   140046af4:	call   QWORD PTR [rip+0x256f6]        # 0x14006c1f0
   140046afa:	call   QWORD PTR [rip+0x256c0]        # 0x14006c1c0
   140046b00:	mov    rcx,rax
   140046b03:	mov    edx,edi
   140046b05:	call   QWORD PTR [rip+0x2585d]        # 0x14006c368
   140046b0b:	mov    DWORD PTR [rip+0x57fe7],edi        # 0x14009eaf8
   140046b11:	mov    rbx,QWORD PTR [rsp+0x30]
   140046b16:	add    rsp,0x20
   140046b1a:	pop    rdi
   140046b1b:	ret    
   140046b1c:	sub    rsp,0x58
   140046b20:	mov    rax,QWORD PTR [rip+0x3b3b9]        # 0x140081ee0
   140046b27:	xor    rax,rsp
   140046b2a:	mov    QWORD PTR [rsp+0x48],rax
   140046b2f:	call   QWORD PTR [rip+0x25553]        # 0x14006c088
   140046b35:	lea    r8,[rsp+0x30]
   140046b3a:	mov    edx,0x28
   140046b3f:	mov    rcx,rax
   140046b42:	call   QWORD PTR [rip+0x25500]        # 0x14006c048
   140046b48:	test   eax,eax
   140046b4a:	je     0x140046b91
   140046b4c:	lea    r8,[rsp+0x3c]
   140046b51:	xor    ecx,ecx
   140046b53:	lea    rdx,[rip+0x2a04e]        # 0x140070ba8
   140046b5a:	call   QWORD PTR [rip+0x254c0]        # 0x14006c020
   140046b60:	and    QWORD PTR [rsp+0x28],0x0
   140046b66:	lea    r8,[rsp+0x38]
   140046b6b:	and    QWORD PTR [rsp+0x20],0x0
   140046b71:	xor    r9d,r9d
   140046b74:	mov    rcx,QWORD PTR [rsp+0x30]
   140046b79:	xor    edx,edx
   140046b7b:	mov    DWORD PTR [rsp+0x38],0x1
   140046b83:	mov    DWORD PTR [rsp+0x44],0x2
   140046b8b:	call   QWORD PTR [rip+0x254af]        # 0x14006c040
   140046b91:	mov    edx,0x80000000
   140046b96:	mov    ecx,0xd
   140046b9b:	call   QWORD PTR [rip+0x2593f]        # 0x14006c4e0
   140046ba1:	mov    rcx,QWORD PTR [rsp+0x48]
   140046ba6:	xor    rcx,rsp
   140046ba9:	call   0x140055f90
   140046bae:	add    rsp,0x58
   140046bb2:	ret    
   140046bb3:	int3   
   140046bb4:	sub    rsp,0x28
   140046bb8:	cmp    BYTE PTR [rip+0x4dcac],0x0        # 0x14009486b
   140046bbf:	je     0x140046bd2
   140046bc1:	mov    edx,0xff
   140046bc6:	lea    rcx,[rip+0x4dc93]        # 0x140094860
   140046bcd:	call   0x14001bc60
   140046bd2:	cmp    DWORD PTR [rip+0x57f0f],0x0        # 0x14009eae8
   140046bd9:	je     0x140046c25
   140046bdb:	mov    rax,QWORD PTR gs:0x58
   140046be4:	mov    ecx,DWORD PTR [rip+0x587a6]        # 0x14009f390
   140046bea:	mov    edx,0x4
   140046bef:	mov    rcx,QWORD PTR [rax+rcx*8]
   140046bf3:	mov    eax,DWORD PTR [rdx+rcx*1]
   140046bf6:	cmp    DWORD PTR [rip+0x57ef4],eax        # 0x14009eaf0
   140046bfc:	jg     0x140046c35
   140046bfe:	call   0x14005ec64
   140046c03:	sub    eax,DWORD PTR [rip+0x57ee3]        # 0x14009eaec
   140046c09:	cmp    eax,0xa
   140046c0c:	jle    0x140046c25
   140046c0e:	mov    ecx,DWORD PTR [rip+0x57ed4]        # 0x14009eae8
   140046c14:	call   QWORD PTR [rip+0x25456]        # 0x14006c070
   140046c1a:	call   0x14005ec64
   140046c1f:	mov    DWORD PTR [rip+0x57ec7],eax        # 0x14009eaec
   140046c25:	mov    ecx,0x1
   140046c2a:	add    rsp,0x28
   140046c2e:	rex.W jmp QWORD PTR [rip+0x2559b]        # 0x14006c1d0
   140046c35:	lea    rcx,[rip+0x57eb4]        # 0x14009eaf0
   140046c3c:	call   0x1400566cc
   140046c41:	cmp    DWORD PTR [rip+0x57ea8],0xffffffff        # 0x14009eaf0
   140046c48:	jne    0x140046bfe
   140046c4a:	call   0x14005ec64
   140046c4f:	lea    rcx,[rip+0x57e9a]        # 0x14009eaf0
   140046c56:	mov    DWORD PTR [rip+0x57e90],eax        # 0x14009eaec
   140046c5c:	call   0x14005666c
   140046c61:	jmp    0x140046bfe
   140046c63:	int3   
   140046c64:	mov    QWORD PTR [rsp+0x8],rbx
   140046c69:	mov    QWORD PTR [rsp+0x10],rsi
   140046c6e:	push   rdi
   140046c6f:	sub    rsp,0x20
   140046c73:	mov    edi,0x20
   140046c78:	mov    BYTE PTR [rcx+0x318],0x0
   140046c7f:	cmp    edx,edi
   140046c81:	mov    rbx,rcx
   140046c84:	cmova  edx,edi
   140046c87:	test   edx,edx
   140046c89:	lea    esi,[rdi-0x1f]
   140046c8c:	cmove  edx,esi
   140046c8f:	and    DWORD PTR [rcx+0x108],0x0
   140046c96:	cmp    edx,edi
   140046c98:	cmova  edx,edi
   140046c9b:	mov    DWORD PTR [rcx],edx
   140046c9d:	add    rcx,0x330
   140046ca4:	call   QWORD PTR [rip+0x2555e]        # 0x14006c208
   140046caa:	xor    r9d,r9d
   140046cad:	mov    r8d,edi
   140046cb0:	xor    edx,edx
   140046cb2:	xor    ecx,ecx
   140046cb4:	call   QWORD PTR [rip+0x25596]        # 0x14006c250
   140046cba:	xor    r9d,r9d
   140046cbd:	mov    r8d,esi
   140046cc0:	mov    edx,esi
   140046cc2:	mov    QWORD PTR [rbx+0x320],rax
   140046cc9:	xor    ecx,ecx
   140046ccb:	call   QWORD PTR [rip+0x25577]        # 0x14006c248
   140046cd1:	cmp    QWORD PTR [rbx+0x320],0x0
   140046cd9:	mov    QWORD PTR [rbx+0x328],rax
   140046ce0:	je     0x140046ce7
   140046ce2:	test   rax,rax
   140046ce5:	jne    0x140046d0b
   140046ce7:	lea    rdx,[rip+0x2a052]        # 0x140070d40
   140046cee:	lea    rcx,[rip+0x4db6b]        # 0x140094860
   140046cf5:	call   0x14001bc8c
   140046cfa:	mov    edx,0x2
   140046cff:	lea    rcx,[rip+0x4db5a]        # 0x140094860
   140046d06:	call   0x14001bc60
   140046d0b:	and    DWORD PTR [rbx+0x310],0x0
   140046d12:	mov    rax,rbx
   140046d15:	and    DWORD PTR [rbx+0x314],0x0
   140046d1c:	and    DWORD PTR [rbx+0x10c],0x0
   140046d23:	mov    rbx,QWORD PTR [rsp+0x30]
   140046d28:	mov    rsi,QWORD PTR [rsp+0x38]
   140046d2d:	add    rsp,0x20
   140046d31:	pop    rdi
   140046d32:	ret    
   140046d33:	int3   
   140046d34:	rex push rdi
   140046d36:	sub    rsp,0x30
   140046d3a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140046d43:	mov    QWORD PTR [rsp+0x40],rbx
   140046d48:	mov    QWORD PTR [rsp+0x48],rsi
   140046d4d:	mov    rdi,rcx
   140046d50:	call   0x140047214
   140046d55:	nop
   140046d56:	mov    BYTE PTR [rdi+0x318],0x1
   140046d5d:	xor    r8d,r8d
   140046d60:	lea    edx,[r8+0x20]
   140046d64:	mov    rcx,QWORD PTR [rdi+0x320]
   140046d6b:	call   QWORD PTR [rip+0x254c7]        # 0x14006c238
   140046d71:	nop
   140046d72:	xor    esi,esi
   140046d74:	cmp    DWORD PTR [rdi+0x108],esi
   140046d7a:	jbe    0x140046d9d
   140046d7c:	mov    rcx,QWORD PTR [rdi+rsi*8+0x8]
   140046d81:	call   0x140046e5c
   140046d86:	nop
   140046d87:	mov    rcx,QWORD PTR [rdi+rsi*8+0x8]
   140046d8c:	call   QWORD PTR [rip+0x25316]        # 0x14006c0a8
   140046d92:	nop
   140046d93:	inc    esi
   140046d95:	cmp    esi,DWORD PTR [rdi+0x108]
   140046d9b:	jb     0x140046d7c
   140046d9d:	lea    rcx,[rdi+0x330]
   140046da4:	call   QWORD PTR [rip+0x25476]        # 0x14006c220
   140046daa:	nop
   140046dab:	mov    rcx,QWORD PTR [rdi+0x320]
   140046db2:	call   QWORD PTR [rip+0x252f0]        # 0x14006c0a8
   140046db8:	nop
   140046db9:	mov    rcx,QWORD PTR [rdi+0x328]
   140046dc0:	mov    rbx,QWORD PTR [rsp+0x40]
   140046dc5:	mov    rsi,QWORD PTR [rsp+0x48]
   140046dca:	add    rsp,0x30
   140046dce:	pop    rdi
   140046dcf:	rex.W jmp QWORD PTR [rip+0x252d2]        # 0x14006c0a8
   140046dd6:	int3   
   140046dd7:	int3   
   140046dd8:	mov    QWORD PTR [rsp+0x8],rbx
   140046ddd:	mov    QWORD PTR [rsp+0x10],rsi
   140046de2:	push   rdi
   140046de3:	sub    rsp,0x20
   140046de7:	cmp    DWORD PTR [rcx+0x108],0x0
   140046dee:	mov    rdi,r8
   140046df1:	mov    rsi,rdx
   140046df4:	mov    rbx,rcx
   140046df7:	jne    0x140046dfe
   140046df9:	call   0x140046f5c
   140046dfe:	mov    eax,DWORD PTR [rbx+0x310]
   140046e04:	inc    eax
   140046e06:	and    eax,0x1f
   140046e09:	cmp    eax,DWORD PTR [rbx+0x314]
   140046e0f:	jne    0x140046e19
   140046e11:	mov    rcx,rbx
   140046e14:	call   0x140047214
   140046e19:	mov    eax,DWORD PTR [rbx+0x310]
   140046e1f:	add    rax,0x11
   140046e23:	add    rax,rax
   140046e26:	mov    QWORD PTR [rbx+rax*8],rsi
   140046e2a:	mov    eax,DWORD PTR [rbx+0x310]
   140046e30:	mov    rsi,QWORD PTR [rsp+0x38]
   140046e35:	add    rax,rax
   140046e38:	mov    QWORD PTR [rbx+rax*8+0x118],rdi
   140046e40:	mov    eax,DWORD PTR [rbx+0x310]
   140046e46:	inc    eax
   140046e48:	and    eax,0x1f
   140046e4b:	mov    DWORD PTR [rbx+0x310],eax
   140046e51:	mov    rbx,QWORD PTR [rsp+0x30]
   140046e56:	add    rsp,0x20
   140046e5a:	pop    rdi
   140046e5b:	ret    
   140046e5c:	sub    rsp,0x28
   140046e60:	or     edx,0xffffffff
   140046e63:	call   QWORD PTR [rip+0x253d7]        # 0x14006c240
   140046e69:	cmp    eax,0xffffffff
   140046e6c:	jne    0x140046e9f
   140046e6e:	call   QWORD PTR [rip+0x25354]        # 0x14006c1c8
   140046e74:	or     r8d,0xffffffff
   140046e78:	lea    rdx,[rip+0x29e51]        # 0x140070cd0
   140046e7f:	mov    r9d,eax
   140046e82:	lea    rcx,[rip+0x4d9d7]        # 0x140094860
   140046e89:	call   0x14001bc8c
   140046e8e:	mov    edx,0x2
   140046e93:	lea    rcx,[rip+0x4d9c6]        # 0x140094860
   140046e9a:	call   0x14001bc60
   140046e9f:	add    rsp,0x28
   140046ea3:	ret    
   140046ea4:	rex push rbx
   140046ea6:	sub    rsp,0x30
   140046eaa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140046eb3:	lea    rcx,[rip+0x57c46]        # 0x14009eb00
   140046eba:	call   QWORD PTR [rip+0x25350]        # 0x14006c210
   140046ec0:	mov    ecx,DWORD PTR [rip+0x57c36]        # 0x14009eafc
   140046ec6:	mov    eax,ecx
   140046ec8:	inc    ecx
   140046eca:	mov    DWORD PTR [rip+0x57c2c],ecx        # 0x14009eafc
   140046ed0:	xor    ebx,ebx
   140046ed2:	test   eax,eax
   140046ed4:	jne    0x140046f07
   140046ed6:	mov    ecx,0x358
   140046edb:	call   0x140055dac
   140046ee0:	mov    QWORD PTR [rsp+0x40],rax
   140046ee5:	test   rax,rax
   140046ee8:	je     0x140046ef7
   140046eea:	lea    edx,[rbx+0x20]
   140046eed:	mov    rcx,rax
   140046ef0:	call   0x140046c64
   140046ef5:	jmp    0x140046efa
   140046ef7:	mov    rax,rbx
   140046efa:	mov    QWORD PTR [rip+0x57c27],rax        # 0x14009eb28
   140046f01:	mov    ecx,DWORD PTR [rip+0x57bf5]        # 0x14009eafc
   140046f07:	cmp    ecx,0x1
   140046f0a:	jbe    0x140046f42
   140046f0c:	mov    ecx,0x358
   140046f11:	call   0x140055dac
   140046f16:	mov    QWORD PTR [rsp+0x40],rax
   140046f1b:	test   rax,rax
   140046f1e:	je     0x140046f30
   140046f20:	mov    edx,0x20
   140046f25:	mov    rcx,rax
   140046f28:	call   0x140046c64
   140046f2d:	mov    rbx,rax
   140046f30:	lea    rcx,[rip+0x57bc9]        # 0x14009eb00
   140046f37:	call   QWORD PTR [rip+0x252db]        # 0x14006c218
   140046f3d:	mov    rax,rbx
   140046f40:	jmp    0x140046f56
   140046f42:	lea    rcx,[rip+0x57bb7]        # 0x14009eb00
   140046f49:	call   QWORD PTR [rip+0x252c9]        # 0x14006c218
   140046f4f:	mov    rax,QWORD PTR [rip+0x57bd2]        # 0x14009eb28
   140046f56:	add    rsp,0x30
   140046f5a:	pop    rbx
   140046f5b:	ret    
   140046f5c:	mov    QWORD PTR [rsp+0x10],rbx
   140046f61:	mov    QWORD PTR [rsp+0x18],rsi
   140046f66:	push   rdi
   140046f67:	sub    rsp,0x30
   140046f6b:	xor    edi,edi
   140046f6d:	mov    rbx,rcx
   140046f70:	cmp    DWORD PTR [rcx],edi
   140046f72:	jbe    0x140046ffe
   140046f78:	lea    rax,[rsp+0x40]
   140046f7d:	mov    r9,rbx
   140046f80:	mov    QWORD PTR [rsp+0x28],rax
   140046f85:	lea    r8,[rip+0x208]        # 0x140047194
   140046f8c:	and    DWORD PTR [rsp+0x20],0x0
   140046f91:	mov    edx,0x10000
   140046f96:	xor    ecx,ecx
   140046f98:	call   QWORD PTR [rip+0x25262]        # 0x14006c200
   140046f9e:	mov    rsi,rax
   140046fa1:	test   rax,rax
   140046fa4:	jne    0x140046fd4
   140046fa6:	lea    rdx,[rip+0x29cf3]        # 0x140070ca0
   140046fad:	lea    rcx,[rip+0x4d8ac]        # 0x140094860
   140046fb4:	call   0x14001bc8c
   140046fb9:	lea    rcx,[rip+0x4d8a0]        # 0x140094860
   140046fc0:	call   0x14001bf78
   140046fc5:	lea    edx,[rsi+0x2]
   140046fc8:	lea    rcx,[rip+0x4d891]        # 0x140094860
   140046fcf:	call   0x14001bc60
   140046fd4:	mov    QWORD PTR [rbx+rdi*8+0x8],rsi
   140046fd9:	inc    DWORD PTR [rbx+0x108]
   140046fdf:	mov    edx,DWORD PTR [rip+0x57b13]        # 0x14009eaf8
   140046fe5:	test   edx,edx
   140046fe7:	je     0x140046ff4
   140046fe9:	mov    rcx,QWORD PTR [rbx+rdi*8+0x8]
   140046fee:	call   QWORD PTR [rip+0x25374]        # 0x14006c368
   140046ff4:	inc    edi
   140046ff6:	cmp    edi,DWORD PTR [rbx]
   140046ff8:	jb     0x140046f78
   140046ffe:	mov    rbx,QWORD PTR [rsp+0x48]
   140047003:	mov    rsi,QWORD PTR [rsp+0x50]
   140047008:	add    rsp,0x30
   14004700c:	pop    rdi
   14004700d:	ret    
   14004700e:	int3   
   14004700f:	int3   
   140047010:	test   rcx,rcx
   140047013:	je     0x1400470a6
   140047019:	mov    QWORD PTR [rsp+0x8],rbx
   14004701e:	push   rdi
   14004701f:	sub    rsp,0x20
   140047023:	mov    rbx,rcx
   140047026:	lea    rcx,[rip+0x57ad3]        # 0x14009eb00
   14004702d:	call   QWORD PTR [rip+0x251dd]        # 0x14006c210
   140047033:	mov    rdi,QWORD PTR [rip+0x57aee]        # 0x14009eb28
   14004703a:	cmp    rbx,rdi
   14004703d:	jne    0x14004707a
   14004703f:	mov    eax,DWORD PTR [rip+0x57ab7]        # 0x14009eafc
   140047045:	test   eax,eax
   140047047:	je     0x140047075
   140047049:	add    eax,0xffffffff
   14004704c:	mov    DWORD PTR [rip+0x57aaa],eax        # 0x14009eafc
   140047052:	jne    0x140047075
   140047054:	test   rdi,rdi
   140047057:	je     0x140047075
   140047059:	mov    rcx,rdi
   14004705c:	call   0x140046d34
   140047061:	mov    edx,0x358
   140047066:	mov    rcx,rdi
   140047069:	call   0x140055de8
   14004706e:	mov    rdi,QWORD PTR [rip+0x57ab3]        # 0x14009eb28
   140047075:	cmp    rbx,rdi
   140047078:	je     0x14004708f
   14004707a:	mov    rcx,rbx
   14004707d:	call   0x140046d34
   140047082:	mov    edx,0x358
   140047087:	mov    rcx,rbx
   14004708a:	call   0x140055de8
   14004708f:	lea    rcx,[rip+0x57a6a]        # 0x14009eb00
   140047096:	call   QWORD PTR [rip+0x2517c]        # 0x14006c218
   14004709c:	mov    rbx,QWORD PTR [rsp+0x30]
   1400470a1:	add    rsp,0x20
   1400470a5:	pop    rdi
   1400470a6:	ret    
   1400470a7:	int3   
   1400470a8:	sub    rsp,0x28
   1400470ac:	call   QWORD PTR [rip+0x24fd6]        # 0x14006c088
   1400470b2:	mov    rcx,rax
   1400470b5:	lea    r8,[rsp+0x38]
   1400470ba:	lea    rdx,[rsp+0x30]
   1400470bf:	call   QWORD PTR [rip+0x25133]        # 0x14006c1f8
   1400470c5:	xor    ecx,ecx
   1400470c7:	test   eax,eax
   1400470c9:	lea    eax,[rcx+0x1]
   1400470cc:	je     0x1400470e8
   1400470ce:	mov    r8,QWORD PTR [rsp+0x30]
   1400470d3:	mov    edx,eax
   1400470d5:	test   r8,rdx
   1400470d8:	je     0x1400470dc
   1400470da:	add    ecx,eax
   1400470dc:	add    rdx,rdx
   1400470df:	jne    0x1400470d5
   1400470e1:	cmp    ecx,eax
   1400470e3:	cmovb  ecx,eax
   1400470e6:	mov    eax,ecx
   1400470e8:	add    rsp,0x28
   1400470ec:	ret    
   1400470ed:	int3   
   1400470ee:	int3   
   1400470ef:	int3   
   1400470f0:	sub    rsp,0x28
   1400470f4:	call   0x1400470a8
   1400470f9:	cmp    eax,0x1
   1400470fc:	jae    0x140047105
   1400470fe:	mov    eax,0x1
   140047103:	jmp    0x14004710f
   140047105:	mov    ecx,0x20
   14004710a:	cmp    eax,ecx
   14004710c:	cmova  eax,ecx
   14004710f:	add    rsp,0x28
   140047113:	ret    
   140047114:	mov    QWORD PTR [rsp+0x8],rbx
   140047119:	mov    QWORD PTR [rsp+0x10],rsi
   14004711e:	push   rdi
   14004711f:	sub    rsp,0x20
   140047123:	mov    rdi,rcx
   140047126:	mov    rsi,rdx
   140047129:	mov    rcx,QWORD PTR [rcx+0x320]
   140047130:	call   0x140046e5c
   140047135:	cmp    BYTE PTR [rdi+0x318],0x0
   14004713c:	je     0x140047142
   14004713e:	xor    al,al
   140047140:	jmp    0x140047184
   140047142:	lea    rbx,[rdi+0x330]
   140047149:	mov    rcx,rbx
   14004714c:	call   QWORD PTR [rip+0x250be]        # 0x14006c210
   140047152:	mov    eax,DWORD PTR [rdi+0x314]
   140047158:	mov    rcx,rbx
   14004715b:	add    rax,0x11
   14004715f:	shl    rax,0x4
   140047163:	movups xmm0,XMMWORD PTR [rax+rdi*1]
   140047167:	movdqu XMMWORD PTR [rsi],xmm0
   14004716b:	mov    edx,DWORD PTR [rdi+0x314]
   140047171:	inc    edx
   140047173:	and    edx,0x1f
   140047176:	mov    DWORD PTR [rdi+0x314],edx
   14004717c:	call   QWORD PTR [rip+0x25096]        # 0x14006c218
   140047182:	mov    al,0x1
   140047184:	mov    rbx,QWORD PTR [rsp+0x30]
   140047189:	mov    rsi,QWORD PTR [rsp+0x38]
   14004718e:	add    rsp,0x20
   140047192:	pop    rdi
   140047193:	ret    
   140047194:	sub    rsp,0x28
   140047198:	call   0x1400471a4
   14004719d:	xor    eax,eax
   14004719f:	add    rsp,0x28
   1400471a3:	ret    
   1400471a4:	mov    QWORD PTR [rsp+0x8],rbx
   1400471a9:	push   rdi
   1400471aa:	sub    rsp,0x30
   1400471ae:	lea    rdx,[rsp+0x20]
   1400471b3:	mov    rbx,rcx
   1400471b6:	call   0x140047114
   1400471bb:	test   al,al
   1400471bd:	je     0x140047208
   1400471bf:	lea    rdi,[rbx+0x330]
   1400471c6:	mov    rcx,QWORD PTR [rsp+0x28]
   1400471cb:	call   QWORD PTR [rsp+0x20]
   1400471cf:	mov    rcx,rdi
   1400471d2:	call   QWORD PTR [rip+0x25038]        # 0x14006c210
   1400471d8:	add    DWORD PTR [rbx+0x10c],0xffffffff
   1400471df:	jne    0x1400471ee
   1400471e1:	mov    rcx,QWORD PTR [rbx+0x328]
   1400471e8:	call   QWORD PTR [rip+0x2503a]        # 0x14006c228
   1400471ee:	mov    rcx,rdi
   1400471f1:	call   QWORD PTR [rip+0x25021]        # 0x14006c218
   1400471f7:	lea    rdx,[rsp+0x20]
   1400471fc:	mov    rcx,rbx
   1400471ff:	call   0x140047114
   140047204:	test   al,al
   140047206:	jne    0x1400471c6
   140047208:	mov    rbx,QWORD PTR [rsp+0x40]
   14004720d:	add    rsp,0x30
   140047211:	pop    rdi
   140047212:	ret    
   140047213:	int3   
   140047214:	rex push rbx
   140047216:	sub    rsp,0x20
   14004721a:	mov    eax,DWORD PTR [rcx+0x310]
   140047220:	mov    rbx,rcx
   140047223:	sub    eax,DWORD PTR [rcx+0x314]
   140047229:	and    eax,0x1f
   14004722c:	mov    DWORD PTR [rcx+0x10c],eax
   140047232:	je     0x140047263
   140047234:	mov    rcx,QWORD PTR [rcx+0x328]
   14004723b:	call   QWORD PTR [rip+0x24fef]        # 0x14006c230
   140047241:	mov    edx,DWORD PTR [rbx+0x10c]
   140047247:	xor    r8d,r8d
   14004724a:	mov    rcx,QWORD PTR [rbx+0x320]
   140047251:	call   QWORD PTR [rip+0x24fe1]        # 0x14006c238
   140047257:	mov    rcx,QWORD PTR [rbx+0x328]
   14004725e:	call   0x140046e5c
   140047263:	add    rsp,0x20
   140047267:	pop    rbx
   140047268:	ret    
   140047269:	int3   
   14004726a:	int3   
   14004726b:	int3   
   14004726c:	mov    eax,DWORD PTR [rdx]
   14004726e:	mov    DWORD PTR [rsp+0x8],eax
   140047272:	mov    eax,DWORD PTR [rdx+0x4]
   140047275:	mov    DWORD PTR [rsp+0xc],eax
   140047279:	mov    rax,QWORD PTR [rsp+0x8]
   14004727e:	mov    QWORD PTR [rcx],rax
   140047281:	mov    rax,rcx
   140047284:	ret    
   140047285:	int3   
   140047286:	int3   
   140047287:	int3   
   140047288:	movabs rax,0x2b6109100
   140047292:	add    rax,rdx
   140047295:	imul   rdx,rax,0x989680
   14004729c:	mov    rax,rcx
   14004729f:	mov    QWORD PTR [rcx],rdx
   1400472a2:	ret    
   1400472a3:	int3   
   1400472a4:	sub    rsp,0x58
   1400472a8:	lea    rdx,[rsp+0x20]
   1400472ad:	call   0x1400472e8
   1400472b2:	mov    eax,DWORD PTR [rsp+0x20]
   1400472b6:	mov    ecx,DWORD PTR [rsp+0x34]
   1400472ba:	add    eax,0xffffffc4
   1400472bd:	shl    eax,0x4
   1400472c0:	or     eax,DWORD PTR [rsp+0x24]
   1400472c4:	shl    eax,0x5
   1400472c7:	or     eax,DWORD PTR [rsp+0x28]
   1400472cb:	shl    eax,0x5
   1400472ce:	or     eax,DWORD PTR [rsp+0x2c]
   1400472d2:	shl    eax,0x6
   1400472d5:	or     eax,DWORD PTR [rsp+0x30]
   1400472d9:	shl    eax,0x5
   1400472dc:	shr    ecx,1
   1400472de:	or     eax,ecx
   1400472e0:	add    rsp,0x58
   1400472e4:	ret    
   1400472e5:	int3   
   1400472e6:	int3   
   1400472e7:	int3   
   1400472e8:	mov    QWORD PTR [rsp+0x8],rbx
   1400472ed:	mov    QWORD PTR [rsp+0x18],rsi
   1400472f2:	push   rbp
   1400472f3:	mov    rbp,rsp
   1400472f6:	sub    rsp,0x80
   1400472fd:	mov    rax,QWORD PTR [rip+0x3abdc]        # 0x140081ee0
   140047304:	xor    rax,rsp
   140047307:	mov    QWORD PTR [rbp-0x10],rax
   14004730b:	mov    rax,QWORD PTR [rcx]
   14004730e:	mov    rbx,rdx
   140047311:	mov    DWORD PTR [rbp-0x58],eax
   140047314:	shr    rax,0x20
   140047318:	mov    DWORD PTR [rbp-0x54],eax
   14004731b:	call   0x14002454c
   140047320:	lea    rcx,[rbp-0x58]
   140047324:	cmp    eax,0x600
   140047329:	jae    0x140047337
   14004732b:	lea    rdx,[rbp-0x60]
   14004732f:	call   QWORD PTR [rip+0x24f43]        # 0x14006c278
   140047335:	jmp    0x1400473a4
   140047337:	lea    rdx,[rbp-0x30]
   14004733b:	call   QWORD PTR [rip+0x24f47]        # 0x14006c288
   140047341:	lea    r8,[rbp-0x20]
   140047345:	xor    ecx,ecx
   140047347:	lea    rdx,[rbp-0x30]
   14004734b:	call   QWORD PTR [rip+0x24f0f]        # 0x14006c260
   140047351:	lea    rdx,[rbp-0x60]
   140047355:	lea    rcx,[rbp-0x20]
   140047359:	call   QWORD PTR [rip+0x24f11]        # 0x14006c270
   14004735f:	lea    rdx,[rbp-0x50]
   140047363:	lea    rcx,[rbp-0x30]
   140047367:	call   QWORD PTR [rip+0x24f03]        # 0x14006c270
   14004736d:	mov    ecx,DWORD PTR [rbp-0x5c]
   140047370:	mov    eax,DWORD PTR [rbp-0x4c]
   140047373:	shl    rax,0x20
   140047377:	shl    rcx,0x20
   14004737b:	sub    rcx,rax
   14004737e:	mov    eax,DWORD PTR [rbp-0x54]
   140047381:	shl    rax,0x20
   140047385:	add    rcx,rax
   140047388:	mov    eax,DWORD PTR [rbp-0x50]
   14004738b:	sub    rcx,rax
   14004738e:	mov    eax,DWORD PTR [rbp-0x60]
   140047391:	add    rcx,rax
   140047394:	mov    eax,DWORD PTR [rbp-0x58]
   140047397:	add    rcx,rax
   14004739a:	mov    DWORD PTR [rbp-0x60],ecx
   14004739d:	sar    rcx,0x20
   1400473a1:	mov    DWORD PTR [rbp-0x5c],ecx
   1400473a4:	lea    rdx,[rbp-0x40]
   1400473a8:	lea    rcx,[rbp-0x60]
   1400473ac:	call   QWORD PTR [rip+0x24ed6]        # 0x14006c288
   1400473b2:	movzx  eax,WORD PTR [rbp-0x38]
   1400473b6:	mov    r8d,0x1
   1400473bc:	movzx  ecx,WORD PTR [rbp-0x3a]
   1400473c0:	movzx  r9d,WORD PTR [rbp-0x3e]
   1400473c5:	movzx  r10d,WORD PTR [rbp-0x40]
   1400473ca:	mov    DWORD PTR [rbx+0xc],eax
   1400473cd:	movzx  eax,WORD PTR [rbp-0x36]
   1400473d1:	mov    DWORD PTR [rbx+0x10],eax
   1400473d4:	movzx  eax,WORD PTR [rbp-0x34]
   1400473d8:	mov    DWORD PTR [rbx+0x14],eax
   1400473db:	movzx  eax,WORD PTR [rbp-0x3c]
   1400473df:	mov    DWORD PTR [rbx+0x1c],eax
   1400473e2:	lea    eax,[rcx-0x1]
   1400473e5:	mov    DWORD PTR [rbx+0x20],eax
   1400473e8:	mov    DWORD PTR [rbx],r10d
   1400473eb:	mov    DWORD PTR [rbx+0x4],r9d
   1400473ef:	mov    DWORD PTR [rbx+0x8],ecx
   1400473f2:	cmp    r9d,r8d
   1400473f5:	jbe    0x140047416
   1400473f7:	cmp    r8d,0xc
   1400473fb:	ja     0x140047416
   1400473fd:	lea    edx,[r8-0x1]
   140047401:	inc    r8d
   140047404:	lea    rax,[rip+0x3a50d]        # 0x140081918
   14004740b:	mov    eax,DWORD PTR [rax+rdx*4]
   14004740e:	add    DWORD PTR [rbx+0x20],eax
   140047411:	cmp    r8d,r9d
   140047414:	jb     0x1400473f7
   140047416:	xor    esi,esi
   140047418:	cmp    r9d,0x2
   14004741c:	jbe    0x14004742d
   14004741e:	mov    ecx,r10d
   140047421:	call   0x1400475ac
   140047426:	test   al,al
   140047428:	je     0x14004742d
   14004742a:	inc    DWORD PTR [rbx+0x20]
   14004742d:	lea    rdx,[rbp-0x48]
   140047431:	mov    WORD PTR [rbp-0x32],si
   140047435:	lea    rcx,[rbp-0x40]
   140047439:	call   QWORD PTR [rip+0x24e31]        # 0x14006c270
   14004743f:	mov    eax,DWORD PTR [rbp-0x44]
   140047442:	mov    ecx,DWORD PTR [rbp-0x5c]
   140047445:	shl    rcx,0x20
   140047449:	shl    rax,0x20
   14004744d:	sub    ecx,eax
   14004744f:	sub    ecx,DWORD PTR [rbp-0x48]
   140047452:	add    ecx,DWORD PTR [rbp-0x60]
   140047455:	mov    DWORD PTR [rbx+0x18],ecx
   140047458:	mov    rcx,QWORD PTR [rbp-0x10]
   14004745c:	xor    rcx,rsp
   14004745f:	call   0x140055f90
   140047464:	lea    r11,[rsp+0x80]
   14004746c:	mov    rbx,QWORD PTR [r11+0x10]
   140047470:	mov    rsi,QWORD PTR [r11+0x20]
   140047474:	mov    rsp,r11
   140047477:	pop    rbp
   140047478:	ret    
   140047479:	int3   
   14004747a:	int3   
   14004747b:	int3   
   14004747c:	jmp    0x14004881c
   140047481:	int3   
   140047482:	int3   
   140047483:	int3   
   140047484:	mov    rax,QWORD PTR [rcx]
   140047487:	ret    
   140047488:	mov    QWORD PTR [rsp+0x8],rbx
   14004748d:	mov    QWORD PTR [rsp+0x10],rsi
   140047492:	mov    QWORD PTR [rsp+0x18],rdi
   140047497:	push   rbp
   140047498:	mov    rbp,rsp
   14004749b:	sub    rsp,0x80
   1400474a2:	cmp    QWORD PTR [rcx],0x0
   1400474a6:	mov    sil,r9b
   1400474a9:	mov    rdi,r8
   1400474ac:	mov    rbx,rdx
   1400474af:	je     0x14004753a
   1400474b5:	lea    rdx,[rbp-0x30]
   1400474b9:	call   0x1400472e8
   1400474be:	mov    r9d,DWORD PTR [rbp-0x30]
   1400474c2:	mov    rcx,rbx
   1400474c5:	test   sil,sil
   1400474c8:	je     0x14004750d
   1400474ca:	mov    eax,0xd1b71759
   1400474cf:	lea    r8,[rip+0x2990a]        # 0x140070de0
   1400474d6:	mul    DWORD PTR [rbp-0x18]
   1400474d9:	mov    eax,DWORD PTR [rbp-0x1c]
   1400474dc:	shr    edx,0xd
   1400474df:	mov    DWORD PTR [rsp+0x48],edx
   1400474e3:	mov    rdx,rdi
   1400474e6:	mov    DWORD PTR [rsp+0x40],eax
   1400474ea:	mov    eax,DWORD PTR [rbp-0x20]
   1400474ed:	mov    DWORD PTR [rsp+0x38],eax
   1400474f1:	mov    eax,DWORD PTR [rbp-0x24]
   1400474f4:	mov    DWORD PTR [rsp+0x30],eax
   1400474f8:	mov    eax,DWORD PTR [rbp-0x28]
   1400474fb:	mov    DWORD PTR [rsp+0x28],eax
   1400474ff:	mov    eax,DWORD PTR [rbp-0x2c]
   140047502:	mov    DWORD PTR [rsp+0x20],eax
   140047506:	call   0x140006acc
   14004750b:	jmp    0x14004755a
   14004750d:	mov    eax,DWORD PTR [rbp-0x20]
   140047510:	lea    r8,[rip+0x29911]        # 0x140070e28
   140047517:	mov    DWORD PTR [rsp+0x38],eax
   14004751b:	mov    rdx,rdi
   14004751e:	mov    eax,DWORD PTR [rbp-0x24]
   140047521:	mov    DWORD PTR [rsp+0x30],eax
   140047525:	mov    eax,DWORD PTR [rbp-0x28]
   140047528:	mov    DWORD PTR [rsp+0x28],eax
   14004752c:	mov    eax,DWORD PTR [rbp-0x2c]
   14004752f:	mov    DWORD PTR [rsp+0x20],eax
   140047533:	call   0x140006acc
   140047538:	jmp    0x14004755a
   14004753a:	movups xmm0,XMMWORD PTR [rip+0x29917]        # 0x140070e58
   140047541:	movups XMMWORD PTR [rdx],xmm0
   140047544:	movups xmm1,XMMWORD PTR [rip+0x2991d]        # 0x140070e68
   14004754b:	movups XMMWORD PTR [rdx+0x10],xmm1
   14004754f:	movzx  eax,WORD PTR [rip+0x29922]        # 0x140070e78
   140047556:	mov    WORD PTR [rdx+0x20],ax
   14004755a:	lea    r11,[rsp+0x80]
   140047562:	mov    rbx,QWORD PTR [r11+0x10]
   140047566:	mov    rsi,QWORD PTR [r11+0x18]
   14004756a:	mov    rdi,QWORD PTR [r11+0x20]
   14004756e:	mov    rsp,r11
   140047571:	pop    rbp
   140047572:	ret    
   140047573:	int3   
   140047574:	mov    rdx,QWORD PTR [rcx]
   140047577:	movabs rax,0x19db1ded53e8000
   140047581:	sub    rdx,rax
   140047584:	movabs rax,0xd6bf94d5e57a42bd
   14004758e:	mul    rdx
   140047591:	shr    rdx,0x17
   140047595:	mov    rax,rdx
   140047598:	ret    
   140047599:	int3   
   14004759a:	int3   
   14004759b:	int3   
   14004759c:	mov    rax,QWORD PTR [rcx]
   14004759f:	mov    DWORD PTR [rdx],eax
   1400475a1:	shr    rax,0x20
   1400475a5:	mov    DWORD PTR [rdx+0x4],eax
   1400475a8:	ret    
   1400475a9:	int3   
   1400475aa:	int3   
   1400475ab:	int3   
   1400475ac:	mov    r9d,ecx
   1400475af:	test   cl,0x3
   1400475b2:	jne    0x1400475f4
   1400475b4:	mov    r10d,0x51eb851f
   1400475ba:	mov    eax,r10d
   1400475bd:	imul   r9d
   1400475c0:	sar    edx,0x5
   1400475c3:	mov    r8d,edx
   1400475c6:	shr    r8d,0x1f
   1400475ca:	add    edx,r8d
   1400475cd:	imul   edx,edx,0x64
   1400475d0:	cmp    ecx,edx
   1400475d2:	jne    0x1400475ee
   1400475d4:	mov    eax,r10d
   1400475d7:	imul   r9d
   1400475da:	sar    edx,0x7
   1400475dd:	mov    eax,edx
   1400475df:	shr    eax,0x1f
   1400475e2:	add    edx,eax
   1400475e4:	imul   eax,edx,0x190
   1400475ea:	cmp    ecx,eax
   1400475ec:	jne    0x1400475f4
   1400475ee:	mov    eax,0x1
   1400475f3:	ret    
   1400475f4:	xor    eax,eax
   1400475f6:	ret    
   1400475f7:	int3   
   1400475f8:	mov    rax,rsp
   1400475fb:	mov    QWORD PTR [rax+0x8],rbx
   1400475ff:	mov    QWORD PTR [rax+0x10],rbp
   140047603:	mov    QWORD PTR [rax+0x18],rsi
   140047607:	mov    QWORD PTR [rax+0x20],rdi
   14004760b:	push   r12
   14004760d:	push   r14
   14004760f:	push   r15
   140047611:	sub    rsp,0x20
   140047615:	xor    r12d,r12d
   140047618:	mov    r14,rdx
   14004761b:	mov    rsi,rcx
   14004761e:	mov    ebx,r12d
   140047621:	mov    edi,r12d
   140047624:	cmp    WORD PTR [rdx],r12w
   140047628:	je     0x14004768d
   14004762a:	mov    ebp,r12d
   14004762d:	mov    rax,rdx
   140047630:	movzx  r15d,WORD PTR [rax]
   140047634:	mov    ecx,r15d
   140047637:	call   0x140045d18
   14004763c:	test   al,al
   14004763e:	je     0x14004764c
   140047640:	lea    edi,[rdi+rdi*4]
   140047643:	lea    edi,[rdi-0x18]
   140047646:	lea    edi,[r15+rdi*2]
   14004764a:	jmp    0x140047680
   14004764c:	mov    cl,r15b
   14004764f:	call   0x140045f38
   140047654:	cmp    al,0x44
   140047656:	je     0x140047675
   140047658:	cmp    al,0x48
   14004765a:	je     0x14004766d
   14004765c:	cmp    al,0x4d
   14004765e:	je     0x140047668
   140047660:	cmp    al,0x53
   140047662:	jne    0x14004767d
   140047664:	add    ebx,edi
   140047666:	jmp    0x14004767d
   140047668:	imul   eax,edi,0x3c
   14004766b:	jmp    0x14004767b
   14004766d:	imul   eax,edi,0xe10
   140047673:	jmp    0x14004767b
   140047675:	imul   eax,edi,0x15180
   14004767b:	add    ebx,eax
   14004767d:	mov    edi,r12d
   140047680:	inc    rbp
   140047683:	lea    rax,[r14+rbp*2]
   140047687:	cmp    WORD PTR [rax],r12w
   14004768b:	jne    0x140047630
   14004768d:	mov    rcx,rsi
   140047690:	call   0x1400476c0
   140047695:	mov    rbp,QWORD PTR [rsp+0x48]
   14004769a:	mov    rdi,QWORD PTR [rsp+0x58]
   14004769f:	mov    eax,ebx
   1400476a1:	mov    rbx,QWORD PTR [rsp+0x40]
   1400476a6:	imul   rcx,rax,0x989680
   1400476ad:	sub    QWORD PTR [rsi],rcx
   1400476b0:	mov    rsi,QWORD PTR [rsp+0x50]
   1400476b5:	add    rsp,0x20
   1400476b9:	pop    r15
   1400476bb:	pop    r14
   1400476bd:	pop    r12
   1400476bf:	ret    
   1400476c0:	rex push rbx
   1400476c2:	sub    rsp,0x40
   1400476c6:	mov    rax,QWORD PTR [rip+0x3a813]        # 0x140081ee0
   1400476cd:	xor    rax,rsp
   1400476d0:	mov    QWORD PTR [rsp+0x38],rax
   1400476d5:	mov    rbx,rcx
   1400476d8:	lea    rcx,[rsp+0x28]
   1400476dd:	call   QWORD PTR [rip+0x24b75]        # 0x14006c258
   1400476e3:	lea    rdx,[rsp+0x20]
   1400476e8:	lea    rcx,[rsp+0x28]
   1400476ed:	call   QWORD PTR [rip+0x24b7d]        # 0x14006c270
   1400476f3:	mov    rax,QWORD PTR [rsp+0x20]
   1400476f8:	mov    QWORD PTR [rbx],rax
   1400476fb:	mov    rcx,QWORD PTR [rsp+0x38]
   140047700:	xor    rcx,rsp
   140047703:	call   0x140055f90
   140047708:	add    rsp,0x40
   14004770c:	pop    rbx
   14004770d:	ret    
   14004770e:	int3   
   14004770f:	int3   
   140047710:	sub    rsp,0x58
   140047714:	and    DWORD PTR [rsp+0x38],0x0
   140047719:	mov    eax,edx
   14004771b:	and    eax,0x1f
   14004771e:	add    eax,eax
   140047720:	mov    DWORD PTR [rsp+0x34],eax
   140047724:	mov    eax,edx
   140047726:	shr    eax,0x5
   140047729:	and    eax,0x3f
   14004772c:	mov    DWORD PTR [rsp+0x30],eax
   140047730:	mov    eax,edx
   140047732:	shr    eax,0xb
   140047735:	and    eax,0x1f
   140047738:	mov    DWORD PTR [rsp+0x2c],eax
   14004773c:	mov    eax,edx
   14004773e:	shr    eax,0x10
   140047741:	and    eax,0x1f
   140047744:	mov    DWORD PTR [rsp+0x28],eax
   140047748:	mov    eax,edx
   14004774a:	shr    edx,0x19
   14004774d:	add    edx,0x7bc
   140047753:	shr    eax,0x15
   140047756:	mov    DWORD PTR [rsp+0x20],edx
   14004775a:	and    eax,0xf
   14004775d:	lea    rdx,[rsp+0x20]
   140047762:	mov    DWORD PTR [rsp+0x24],eax
   140047766:	call   0x14004786c
   14004776b:	add    rsp,0x58
   14004776f:	ret    
   140047770:	mov    QWORD PTR [rsp+0x18],rbx
   140047775:	push   rbp
   140047776:	push   rsi
   140047777:	push   rdi
   140047778:	push   r14
   14004777a:	push   r15
   14004777c:	mov    rbp,rsp
   14004777f:	sub    rsp,0x70
   140047783:	mov    rax,QWORD PTR [rip+0x3a756]        # 0x140081ee0
   14004778a:	xor    rax,rsp
   14004778d:	mov    QWORD PTR [rbp-0x10],rax
   140047791:	mov    rdi,rdx
   140047794:	xor    r14d,r14d
   140047797:	xor    edx,edx
   140047799:	mov    rsi,rcx
   14004779c:	mov    QWORD PTR [rbp-0x28],rdx
   1400477a0:	mov    ecx,edx
   1400477a2:	mov    QWORD PTR [rbp-0x20],rdx
   1400477a6:	mov    r8d,edx
   1400477a9:	movzx  eax,WORD PTR [rdi]
   1400477ac:	mov    ebx,r14d
   1400477af:	mov    QWORD PTR [rbp-0x18],rdx
   1400477b3:	lea    r15d,[rdx+0x1]
   1400477b7:	test   ax,ax
   1400477ba:	je     0x140047812
   1400477bc:	movzx  ecx,ax
   1400477bf:	call   0x140045d18
   1400477c4:	test   al,al
   1400477c6:	je     0x1400477fa
   1400477c8:	cmp    ebx,0x4
   1400477cb:	jae    0x1400477d2
   1400477cd:	mov    eax,r14d
   1400477d0:	jmp    0x1400477da
   1400477d2:	lea    eax,[rbx-0x4]
   1400477d5:	shr    eax,1
   1400477d7:	add    eax,r15d
   1400477da:	movsxd rdx,eax
   1400477dd:	cmp    rdx,0x6
   1400477e1:	jae    0x1400477f7
   1400477e3:	mov    eax,DWORD PTR [rbp+rdx*4-0x28]
   1400477e7:	lea    ecx,[rax+rax*4]
   1400477ea:	movzx  eax,WORD PTR [rdi]
   1400477ed:	lea    ecx,[rcx-0x18]
   1400477f0:	lea    ecx,[rax+rcx*2]
   1400477f3:	mov    DWORD PTR [rbp+rdx*4-0x28],ecx
   1400477f7:	add    ebx,r15d
   1400477fa:	add    rdi,0x2
   1400477fe:	movzx  eax,WORD PTR [rdi]
   140047801:	test   ax,ax
   140047804:	jne    0x1400477bc
   140047806:	mov    r8,QWORD PTR [rbp-0x18]
   14004780a:	mov    rcx,QWORD PTR [rbp-0x20]
   14004780e:	mov    rdx,QWORD PTR [rbp-0x28]
   140047812:	mov    eax,DWORD PTR [rbp-0x14]
   140047815:	test   ecx,ecx
   140047817:	mov    DWORD PTR [rbp-0x3c],eax
   14004781a:	mov    eax,DWORD PTR [rbp-0x1c]
   14004781d:	cmove  ecx,r15d
   140047821:	mov    DWORD PTR [rbp-0x44],eax
   140047824:	mov    eax,DWORD PTR [rbp-0x24]
   140047827:	test   eax,eax
   140047829:	mov    DWORD PTR [rbp-0x48],ecx
   14004782c:	mov    rcx,rsi
   14004782f:	cmove  eax,r15d
   140047833:	mov    DWORD PTR [rbp-0x50],edx
   140047836:	lea    rdx,[rbp-0x50]
   14004783a:	mov    DWORD PTR [rbp-0x4c],eax
   14004783d:	mov    DWORD PTR [rbp-0x40],r8d
   140047841:	mov    DWORD PTR [rbp-0x38],r14d
   140047845:	call   0x14004786c
   14004784a:	mov    rcx,QWORD PTR [rbp-0x10]
   14004784e:	xor    rcx,rsp
   140047851:	call   0x140055f90
   140047856:	mov    rbx,QWORD PTR [rsp+0xb0]
   14004785e:	add    rsp,0x70
   140047862:	pop    r15
   140047864:	pop    r14
   140047866:	pop    rdi
   140047867:	pop    rsi
   140047868:	pop    rbp
   140047869:	ret    
   14004786a:	int3   
   14004786b:	int3   
   14004786c:	mov    QWORD PTR [rsp+0x18],rbx
   140047871:	push   rbp
   140047872:	push   rsi
   140047873:	push   rdi
   140047874:	mov    rbp,rsp
   140047877:	sub    rsp,0x70
   14004787b:	mov    rax,QWORD PTR [rip+0x3a65e]        # 0x140081ee0
   140047882:	xor    rax,rsp
   140047885:	mov    QWORD PTR [rbp-0x8],rax
   140047889:	movzx  eax,WORD PTR [rdx]
   14004788c:	mov    rbx,rdx
   14004788f:	mov    WORD PTR [rbp-0x38],ax
   140047893:	mov    rdi,rcx
   140047896:	movzx  eax,WORD PTR [rdx+0x4]
   14004789a:	lea    rcx,[rbp-0x38]
   14004789e:	mov    WORD PTR [rbp-0x36],ax
   1400478a2:	xor    esi,esi
   1400478a4:	movzx  eax,WORD PTR [rdx+0x8]
   1400478a8:	mov    WORD PTR [rbp-0x32],ax
   1400478ac:	movzx  eax,WORD PTR [rdx+0xc]
   1400478b0:	mov    WORD PTR [rbp-0x30],ax
   1400478b4:	movzx  eax,WORD PTR [rdx+0x10]
   1400478b8:	mov    WORD PTR [rbp-0x2e],ax
   1400478bc:	movzx  eax,WORD PTR [rdx+0x14]
   1400478c0:	lea    rdx,[rbp-0x50]
   1400478c4:	mov    WORD PTR [rbp-0x2c],ax
   1400478c8:	mov    WORD PTR [rbp-0x2a],si
   1400478cc:	mov    WORD PTR [rbp-0x34],si
   1400478d0:	call   QWORD PTR [rip+0x2499a]        # 0x14006c270
   1400478d6:	test   eax,eax
   1400478d8:	je     0x140047981
   1400478de:	mov    eax,DWORD PTR [rbp-0x50]
   1400478e1:	add    eax,DWORD PTR [rbx+0x18]
   1400478e4:	mov    DWORD PTR [rbp-0x50],eax
   1400478e7:	cmp    eax,DWORD PTR [rbx+0x18]
   1400478ea:	jae    0x1400478ef
   1400478ec:	inc    DWORD PTR [rbp-0x4c]
   1400478ef:	call   0x14002454c
   1400478f4:	lea    rcx,[rbp-0x50]
   1400478f8:	cmp    eax,0x600
   1400478fd:	jae    0x14004790b
   1400478ff:	lea    rdx,[rbp-0x48]
   140047903:	call   QWORD PTR [rip+0x24977]        # 0x14006c280
   140047909:	jmp    0x140047978
   14004790b:	lea    rdx,[rbp-0x28]
   14004790f:	call   QWORD PTR [rip+0x24973]        # 0x14006c288
   140047915:	lea    r8,[rbp-0x18]
   140047919:	xor    ecx,ecx
   14004791b:	lea    rdx,[rbp-0x28]
   14004791f:	call   QWORD PTR [rip+0x24943]        # 0x14006c268
   140047925:	lea    rdx,[rbp-0x48]
   140047929:	lea    rcx,[rbp-0x18]
   14004792d:	call   QWORD PTR [rip+0x2493d]        # 0x14006c270
   140047933:	lea    rdx,[rbp-0x40]
   140047937:	lea    rcx,[rbp-0x28]
   14004793b:	call   QWORD PTR [rip+0x2492f]        # 0x14006c270
   140047941:	mov    ecx,DWORD PTR [rbp-0x44]
   140047944:	mov    eax,DWORD PTR [rbp-0x3c]
   140047947:	shl    rax,0x20
   14004794b:	shl    rcx,0x20
   14004794f:	sub    rcx,rax
   140047952:	mov    eax,DWORD PTR [rbp-0x4c]
   140047955:	shl    rax,0x20
   140047959:	add    rcx,rax
   14004795c:	mov    eax,DWORD PTR [rbp-0x40]
   14004795f:	sub    rcx,rax
   140047962:	mov    eax,DWORD PTR [rbp-0x48]
   140047965:	add    rcx,rax
   140047968:	mov    eax,DWORD PTR [rbp-0x50]
   14004796b:	add    rcx,rax
   14004796e:	mov    DWORD PTR [rbp-0x48],ecx
   140047971:	sar    rcx,0x20
   140047975:	mov    DWORD PTR [rbp-0x44],ecx
   140047978:	mov    rax,QWORD PTR [rbp-0x48]
   14004797c:	mov    QWORD PTR [rdi],rax
   14004797f:	jmp    0x140047984
   140047981:	mov    QWORD PTR [rdi],rsi
   140047984:	mov    rcx,QWORD PTR [rbp-0x8]
   140047988:	xor    rcx,rsp
   14004798b:	call   0x140055f90
   140047990:	mov    rbx,QWORD PTR [rsp+0xa0]
   140047998:	add    rsp,0x70
   14004799c:	pop    rdi
   14004799d:	pop    rsi
   14004799e:	pop    rbp
   14004799f:	ret    
   1400479a0:	mov    QWORD PTR [rcx],rdx
   1400479a3:	ret    
   1400479a4:	mov    QWORD PTR [rsp+0x8],rbx
   1400479a9:	push   rdi
   1400479aa:	sub    rsp,0x30
   1400479ae:	cmp    DWORD PTR [rcx+0x68],0x87
   1400479b5:	mov    rdi,rcx
   1400479b8:	ja     0x140048070
   1400479be:	movsxd rax,DWORD PTR [rcx+0x68]
   1400479c2:	lea    rcx,[rip+0xfffffffffffb8637]        # 0x140000000
   1400479c9:	mov    edx,DWORD PTR [rcx+rax*4+0x4807c]
   1400479d0:	add    rdx,rcx
   1400479d3:	jmp    rdx
   1400479d5:	lea    rdx,[rip+0x29514]        # 0x140070ef0
   1400479dc:	mov    r8,QWORD PTR [rdi]
   1400479df:	xor    ecx,ecx
   1400479e1:	call   0x1400170b4
   1400479e6:	jmp    0x140048070
   1400479eb:	mov    ecx,0xd58
   1400479f0:	call   0x140040118
   1400479f5:	mov    r8,QWORD PTR [rdi+0x8]
   1400479f9:	mov    rcx,QWORD PTR [rdi]
   1400479fc:	mov    rdx,rax
   1400479ff:	jmp    0x1400479e1
   140047a01:	mov    ecx,0xd6e
   140047a06:	jmp    0x1400479f0
   140047a08:	mov    ecx,0xe30
   140047a0d:	call   0x140040118
   140047a12:	mov    r9,QWORD PTR [rdi]
   140047a15:	mov    r8,QWORD PTR [rdi+0x8]
   140047a19:	mov    rcx,QWORD PTR [rdi]
   140047a1c:	mov    rdx,rax
   140047a1f:	call   0x1400170b4
   140047a24:	jmp    0x140048070
   140047a29:	mov    ecx,0xe9c
   140047a2e:	call   0x140040118
   140047a33:	mov    rcx,QWORD PTR [rdi]
   140047a36:	mov    rdx,rax
   140047a39:	call   0x1400170b4
   140047a3e:	jmp    0x140048070
   140047a43:	mov    ecx,0xcf2
   140047a48:	call   0x140040118
   140047a4d:	xor    ecx,ecx
   140047a4f:	jmp    0x140047a36
   140047a51:	mov    ecx,0xd1a
   140047a56:	jmp    0x1400479f0
   140047a58:	mov    ecx,0xd18
   140047a5d:	jmp    0x1400479f0
   140047a5f:	mov    ecx,0xcf0
   140047a64:	call   0x140040118
   140047a69:	mov    rdx,rax
   140047a6c:	jmp    0x1400479dc
   140047a71:	mov    ecx,0xcee
   140047a76:	jmp    0x140047a64
   140047a78:	mov    ecx,0xcec
   140047a7d:	jmp    0x1400479f0
   140047a82:	mov    ecx,0xcea
   140047a87:	jmp    0x1400479f0
   140047a8c:	mov    ecx,0xe8e
   140047a91:	jmp    0x1400479f0
   140047a96:	mov    ecx,0xcf8
   140047a9b:	call   0x140040118
   140047aa0:	mov    r9,QWORD PTR [rdi+0x10]
   140047aa4:	jmp    0x140047a15
   140047aa9:	mov    ecx,0xe78
   140047aae:	jmp    0x1400479f0
   140047ab3:	mov    ecx,0xeb2
   140047ab8:	jmp    0x140047a9b
   140047aba:	mov    ecx,0xeb4
   140047abf:	call   0x140040118
   140047ac4:	mov    rcx,QWORD PTR [rdi]
   140047ac7:	mov    rdx,rax
   140047aca:	call   0x1400170b4
   140047acf:	lea    rcx,[rip+0x2942a]        # 0x140070f00
   140047ad6:	call   0x14001796c
   140047adb:	jmp    0x140048070
   140047ae0:	mov    ecx,0xd6a
   140047ae5:	jmp    0x1400479f0
   140047aea:	mov    ecx,0xeb8
   140047aef:	jmp    0x1400479f0
   140047af4:	mov    ecx,0xeba
   140047af9:	jmp    0x140047a64
   140047afe:	mov    ecx,0xebc
   140047b03:	jmp    0x140047a48
   140047b08:	mov    ecx,0xcf4
   140047b0d:	jmp    0x140047a2e
   140047b12:	mov    ecx,0xd7c
   140047b17:	jmp    0x140047a2e
   140047b1c:	mov    ecx,0xd7e
   140047b21:	jmp    0x140047a2e
   140047b26:	mov    ecx,0xd80
   140047b2b:	jmp    0x1400479f0
   140047b30:	mov    ecx,0xe58
   140047b35:	jmp    0x140047a2e
   140047b3a:	mov    ecx,0xe5a
   140047b3f:	jmp    0x140047a2e
   140047b44:	mov    ecx,0xe5c
   140047b49:	jmp    0x1400479f0
   140047b4e:	mov    ecx,0xea4
   140047b53:	jmp    0x140047a2e
   140047b58:	mov    ecx,0xd1c
   140047b5d:	jmp    0x1400479f0
   140047b62:	mov    ecx,0xe9a
   140047b67:	jmp    0x1400479f0
   140047b6c:	mov    ecx,0xe72
   140047b71:	jmp    0x140047a9b
   140047b76:	mov    ecx,0xe98
   140047b7b:	jmp    0x140047a2e
   140047b80:	mov    ecx,0xd10
   140047b85:	call   0x140040118
   140047b8a:	mov    rdx,QWORD PTR [rdi]
   140047b8d:	mov    rcx,rax
   140047b90:	jmp    0x14004806b
   140047b95:	mov    ecx,0xd16
   140047b9a:	jmp    0x140047b85
   140047b9c:	mov    ecx,0xe7a
   140047ba1:	call   0x140040118
   140047ba6:	mov    r9d,DWORD PTR [rdi+0x44]
   140047baa:	mov    rdx,rax
   140047bad:	mov    r8d,DWORD PTR [rdi+0x40]
   140047bb1:	mov    rcx,QWORD PTR [rdi]
   140047bb4:	call   0x1400170b4
   140047bb9:	jmp    0x140048070
   140047bbe:	mov    ecx,0xe7c
   140047bc3:	jmp    0x140047a2e
   140047bc8:	mov    ecx,0xe50
   140047bcd:	jmp    0x140047a2e
   140047bd2:	mov    ecx,0xebe
   140047bd7:	call   0x140040118
   140047bdc:	mov    r8d,DWORD PTR [rdi+0x44]
   140047be0:	mov    rcx,rax
   140047be3:	mov    edx,DWORD PTR [rdi+0x40]
   140047be6:	call   0x14001796c
   140047beb:	jmp    0x140048070
   140047bf0:	mov    ecx,0xec0
   140047bf5:	call   0x140040118
   140047bfa:	mov    rcx,rax
   140047bfd:	jmp    0x140047ad6
   140047c02:	mov    ecx,0xd26
   140047c07:	jmp    0x140047a2e
   140047c0c:	mov    ecx,0xd28
   140047c11:	jmp    0x140047a2e
   140047c16:	mov    ecx,0xd2a
   140047c1b:	jmp    0x140047a2e
   140047c20:	mov    ecx,0xe62
   140047c25:	call   0x140040118
   140047c2a:	mov    r8,QWORD PTR [rdi]
   140047c2d:	jmp    0x1400479f9
   140047c32:	mov    ecx,0xd14
   140047c37:	jmp    0x140047a64
   140047c3c:	mov    ecx,0xe8a
   140047c41:	call   0x140040118
   140047c46:	mov    r8d,DWORD PTR [rdi+0x40]
   140047c4a:	mov    rdx,rax
   140047c4d:	mov    rcx,QWORD PTR [rdi]
   140047c50:	call   0x1400170b4
   140047c55:	jmp    0x140048070
   140047c5a:	mov    ecx,0xe64
   140047c5f:	call   0x140040118
   140047c64:	mov    r9,QWORD PTR [rdi+0x8]
   140047c68:	xor    ecx,ecx
   140047c6a:	mov    r8,QWORD PTR [rdi]
   140047c6d:	jmp    0x140047a1c
   140047c72:	mov    ecx,0xe6a
   140047c77:	jmp    0x140047bf5
   140047c7c:	mov    ecx,0xe6e
   140047c81:	jmp    0x140047bf5
   140047c86:	mov    ecx,0xe6c
   140047c8b:	jmp    0x140047bf5
   140047c90:	mov    ecx,0xe08
   140047c95:	jmp    0x140047a2e
   140047c9a:	mov    ecx,0xce0
   140047c9f:	jmp    0x140047c25
   140047ca1:	mov    ecx,0xd90
   140047ca6:	jmp    0x140047a2e
   140047cab:	mov    ecx,0xe40
   140047cb0:	jmp    0x1400479f0
   140047cb5:	mov    ecx,0xd1e
   140047cba:	jmp    0x140047a2e
   140047cbf:	mov    ecx,0xe00
   140047cc4:	jmp    0x140047a2e
   140047cc9:	mov    ecx,0xe06
   140047cce:	jmp    0x140047a2e
   140047cd3:	mov    ecx,0xd9e
   140047cd8:	jmp    0x140047bf5
   140047cdd:	mov    ecx,0xd70
   140047ce2:	jmp    0x140047bf5
   140047ce7:	mov    ecx,0xcfa
   140047cec:	jmp    0x140047c25
   140047cf1:	mov    ecx,0xe54
   140047cf6:	jmp    0x1400479f0
   140047cfb:	mov    ecx,0xeb0
   140047d00:	jmp    0x1400479f0
   140047d05:	mov    ecx,0xe74
   140047d0a:	jmp    0x140047a64
   140047d0f:	mov    ecx,0xe32
   140047d14:	jmp    0x140047c25
   140047d19:	mov    ecx,0xe92
   140047d1e:	jmp    0x140047a2e
   140047d23:	mov    ecx,0xe7e
   140047d28:	jmp    0x140047a64
   140047d2d:	mov    ecx,0xe34
   140047d32:	jmp    0x1400479f0
   140047d37:	mov    ecx,0xe38
   140047d3c:	jmp    0x1400479f0
   140047d41:	mov    ecx,0xe3a
   140047d46:	jmp    0x1400479f0
   140047d4b:	mov    ecx,0xe36
   140047d50:	jmp    0x1400479f0
   140047d55:	mov    ecx,0xe3c
   140047d5a:	jmp    0x1400479f0
   140047d5f:	mov    ecx,0xe3e
   140047d64:	jmp    0x1400479f0
   140047d69:	mov    ecx,0xeaa
   140047d6e:	call   0x140040118
   140047d73:	mov    r8d,DWORD PTR [rdi+0x40]
   140047d77:	mov    rcx,rax
   140047d7a:	mov    rdx,QWORD PTR [rdi]
   140047d7d:	call   0x14001796c
   140047d82:	jmp    0x140048070
   140047d87:	mov    rax,QWORD PTR [rdi+0x10]
   140047d8b:	lea    rdx,[rip+0x2917e]        # 0x140070f10
   140047d92:	mov    r9,QWORD PTR [rdi+0x8]
   140047d96:	xor    ecx,ecx
   140047d98:	mov    r8,QWORD PTR [rdi]
   140047d9b:	mov    QWORD PTR [rsp+0x20],rax
   140047da0:	call   0x1400170b4
   140047da5:	mov    ecx,0xda2
   140047daa:	jmp    0x140047a48
   140047daf:	mov    ecx,0xe60
   140047db4:	jmp    0x140047a64
   140047db9:	mov    ecx,0xe1c
   140047dbe:	jmp    0x1400479f0
   140047dc3:	mov    ecx,0xe22
   140047dc8:	jmp    0x1400479f0
   140047dcd:	mov    ecx,0xe1e
   140047dd2:	jmp    0x1400479f0
   140047dd7:	mov    ecx,0xe20
   140047ddc:	jmp    0x1400479f0
   140047de1:	mov    ecx,0xe24
   140047de6:	jmp    0x1400479f0
   140047deb:	mov    ecx,0xe26
   140047df0:	jmp    0x140047a64
   140047df5:	mov    ecx,0xe28
   140047dfa:	jmp    0x140047a64
   140047dff:	mov    rdx,QWORD PTR [rdi]
   140047e02:	lea    rcx,[rip+0x2911f]        # 0x140070f28
   140047e09:	jmp    0x14004806b
   140047e0e:	mov    ecx,0xdfe
   140047e13:	jmp    0x140047b85
   140047e18:	mov    ecx,0xe0c
   140047e1d:	jmp    0x140047bf5
   140047e22:	mov    ecx,0xe10
   140047e27:	call   0x140040118
   140047e2c:	mov    rcx,rax
   140047e2f:	call   0x14001796c
   140047e34:	mov    ecx,0xe9e
   140047e39:	jmp    0x140047bf5
   140047e3e:	mov    ecx,0xe0e
   140047e43:	jmp    0x140047bf5
   140047e48:	mov    ecx,0xea4
   140047e4d:	call   0x140040118
   140047e52:	lea    rcx,[rip+0x290d7]        # 0x140070f30
   140047e59:	jmp    0x140048068
   140047e5e:	mov    ecx,0xea2
   140047e63:	call   0x140040118
   140047e68:	mov    rcx,rax
   140047e6b:	mov    edx,DWORD PTR [rdi+0x40]
   140047e6e:	call   0x14001796c
   140047e73:	jmp    0x140048070
   140047e78:	mov    ecx,0xeb6
   140047e7d:	call   0x140040118
   140047e82:	mov    rcx,rax
   140047e85:	call   0x14001796c
   140047e8a:	lea    rcx,[rip+0x290b7]        # 0x140070f48
   140047e91:	jmp    0x140047ad6
   140047e96:	mov    ecx,0xea0
   140047e9b:	call   0x140040118
   140047ea0:	mov    r9d,DWORD PTR [rdi+0x48]
   140047ea4:	mov    rcx,rax
   140047ea7:	mov    r8d,DWORD PTR [rdi+0x44]
   140047eab:	mov    edx,DWORD PTR [rdi+0x40]
   140047eae:	call   0x14001796c
   140047eb3:	jmp    0x140048070
   140047eb8:	mov    ecx,0xe12
   140047ebd:	jmp    0x140047e9b
   140047ebf:	mov    ecx,0xe14
   140047ec4:	jmp    0x140047bf5
   140047ec9:	mov    ecx,0xe16
   140047ece:	jmp    0x140047bf5
   140047ed3:	mov    ecx,0xe02
   140047ed8:	jmp    0x140047b85
   140047edd:	mov    ecx,0xe52
   140047ee2:	jmp    0x140047a2e
   140047ee7:	mov    ecx,0xce0
   140047eec:	jmp    0x140047b85
   140047ef1:	mov    ecx,0xe70
   140047ef6:	jmp    0x140047b85
   140047efb:	mov    ecx,0xe72
   140047f00:	call   0x140040118
   140047f05:	mov    r8,QWORD PTR [rdi+0x8]
   140047f09:	mov    rcx,rax
   140047f0c:	mov    rdx,QWORD PTR [rdi]
   140047f0f:	call   0x14001796c
   140047f14:	jmp    0x140048070
   140047f19:	mov    ecx,0xe94
   140047f1e:	jmp    0x140047bf5
   140047f23:	mov    ecx,0xe68
   140047f28:	jmp    0x140047e63
   140047f2d:	mov    ecx,0xe66
   140047f32:	jmp    0x140047e63
   140047f37:	mov    ecx,0xcfa
   140047f3c:	jmp    0x140047b85
   140047f41:	mov    ecx,0xd58
   140047f46:	jmp    0x140047b85
   140047f4b:	mov    ecx,0xe76
   140047f50:	call   0x140040118
   140047f55:	mov    rcx,rax
   140047f58:	call   0x14001796c
   140047f5d:	lea    rcx,[rip+0x28ff4]        # 0x140070f58
   140047f64:	jmp    0x140047ad6
   140047f69:	mov    ecx,0xd00
   140047f6e:	call   0x140040118
   140047f73:	mov    rcx,rax
   140047f76:	call   0x14001778c
   140047f7b:	jmp    0x140048070
   140047f80:	mov    rdx,QWORD PTR [rdi]
   140047f83:	lea    rcx,[rip+0x4c8d6]        # 0x140094860
   140047f8a:	call   0x14001bc54
   140047f8f:	jmp    0x140048070
   140047f94:	mov    ecx,0xeac
   140047f99:	jmp    0x140047bf5
   140047f9e:	mov    ecx,0xd44
   140047fa3:	call   0x140040118
   140047fa8:	mov    rcx,rax
   140047fab:	call   0x14001796c
   140047fb0:	lea    rcx,[rip+0x28fb1]        # 0x140070f68
   140047fb7:	jmp    0x140047ad6
   140047fbc:	cmp    DWORD PTR [rdi+0x40],0x0
   140047fc0:	setne  bl
   140047fc3:	cmp    DWORD PTR [rdi+0x44],0x0
   140047fc7:	setne  al
   140047fca:	neg    al
   140047fcc:	sbb    ecx,ecx
   140047fce:	and    ecx,0x8
   140047fd1:	add    ecx,0xd3e
   140047fd7:	call   0x140040118
   140047fdc:	mov    rdx,QWORD PTR [rdi]
   140047fdf:	mov    rcx,rax
   140047fe2:	call   0x14001796c
   140047fe7:	neg    bl
   140047fe9:	sbb    ecx,ecx
   140047feb:	and    ecx,0xfffffffe
   140047fee:	add    ecx,0xd42
   140047ff4:	jmp    0x140047bf5
   140047ff9:	mov    ecx,0xe1a
   140047ffe:	jmp    0x140047e63
   140048003:	mov    ecx,0xe90
   140048008:	call   0x140040118
   14004800d:	mov    rcx,rax
   140048010:	call   0x14001796c
   140048015:	lea    rcx,[rip+0x28f5c]        # 0x140070f78
   14004801c:	jmp    0x140047ad6
   140048021:	lea    rcx,[rip+0x28f60]        # 0x140070f88
   140048028:	jmp    0x140047e6b
   14004802d:	lea    rcx,[rip+0x28f6c]        # 0x140070fa0
   140048034:	jmp    0x140047ad6
   140048039:	mov    ecx,0xe18
   14004803e:	call   0x140040118
   140048043:	mov    rcx,rax
   140048046:	call   0x14001796c
   14004804b:	lea    rcx,[rip+0x28f66]        # 0x140070fb8
   140048052:	jmp    0x140047ad6
   140048057:	mov    ecx,0xea6
   14004805c:	call   0x140040118
   140048061:	lea    rcx,[rip+0x28f60]        # 0x140070fc8
   140048068:	mov    rdx,rax
   14004806b:	call   0x14001796c
   140048070:	mov    rbx,QWORD PTR [rsp+0x40]
   140048075:	add    rsp,0x30
   140048079:	pop    rdi
   14004807a:	ret    
   14004807b:	nop
   14004807c:	(bad)  
   14004807d:	jns    0x140048083
   14004807f:	add    ch,dl
   140048081:	jns    0x140048087
   140048083:	add    BYTE PTR [rax-0x80],dh
   140048086:	add    al,0x0
   140048088:	jmp    0x140048103
   14004808a:	add    al,0x0
   14004808c:	add    DWORD PTR [rdx+0x4],edi
   14004808f:	add    BYTE PTR [rax],cl
   140048091:	jp     0x140048097
   140048093:	add    BYTE PTR [rcx],ch
   140048095:	jp     0x14004809b
   140048097:	add    BYTE PTR [rbx+0x7a],al
   14004809a:	add    al,0x0
   14004809c:	push   rcx
   14004809d:	jp     0x1400480a3
   14004809f:	add    BYTE PTR [rax+0x7a],bl
   1400480a2:	add    al,0x0
   1400480a4:	pop    rdi
   1400480a5:	jp     0x1400480ab
   1400480a7:	add    BYTE PTR [rcx+0x7a],dh
   1400480aa:	add    al,0x0
   1400480ac:	js     0x140048128
   1400480ae:	add    al,0x0
   1400480b0:	(bad)  
   1400480b1:	jp     0x1400480b7
   1400480b3:	add    BYTE PTR [rdx+rdi*2+0x7a960004],cl
   1400480ba:	add    al,0x0
   1400480bc:	test   eax,0xb300047a
   1400480c1:	jp     0x1400480c7
   1400480c3:	add    BYTE PTR [rdx-0x1ffffb86],bh
   1400480c9:	jp     0x1400480cf
   1400480cb:	add    dl,ch
   1400480cd:	jp     0x1400480d3
   1400480cf:	add    ah,dh
   1400480d1:	jp     0x1400480d7
   1400480d3:	add    dh,bh
   1400480d5:	jp     0x1400480db
   1400480d7:	add    BYTE PTR [rax],cl
   1400480d9:	jnp    0x1400480df
   1400480db:	add    BYTE PTR [rdx],dl
   1400480dd:	jnp    0x1400480e3
   1400480df:	add    BYTE PTR [rbx+rdi*2],bl
   1400480e2:	add    al,0x0
   1400480e4:	es jnp 0x1400480eb
   1400480e7:	add    BYTE PTR [rax],dh
   1400480e9:	jnp    0x1400480ef
   1400480eb:	add    BYTE PTR [rdx],bh
   1400480ed:	jnp    0x1400480f3
   1400480ef:	add    BYTE PTR [rbx+rdi*2+0x4],al
   1400480f3:	add    BYTE PTR [rsi+0x7b],cl
   1400480f6:	add    al,0x0
   1400480f8:	pop    rax
   1400480f9:	jnp    0x1400480ff
   1400480fb:	add    BYTE PTR [rdx+0x7b],ah
   1400480fe:	add    al,0x0
   140048100:	ins    BYTE PTR es:[rdi],dx
   140048101:	jnp    0x140048107
   140048103:	add    BYTE PTR [rsi+0x7b],dh
   140048106:	add    al,0x0
   140048108:	cmp    BYTE PTR [rbx+0x4],0x0
   14004810c:	xchg   ebp,eax
   14004810d:	jnp    0x140048113
   14004810f:	add    BYTE PTR [rbx+rdi*2+0x7bbe0004],bl
   140048116:	add    al,0x0
   140048118:	enter  0x47b,0x0
   14004811c:	sar    BYTE PTR [rbx+0x4],cl
   14004811f:	add    al,dh
   140048121:	jnp    0x140048127
   140048123:	add    BYTE PTR [rax+0x7b],bl
   140048126:	add    al,0x0
   140048128:	add    bh,BYTE PTR [rsp+rax*1+0x0]
   14004812c:	or     al,0x7c
   14004812e:	add    al,0x0
   140048130:	(bad)  
   140048131:	jl     0x140048137
   140048133:	add    BYTE PTR [rax],ah
   140048135:	jl     0x14004813b
   140048137:	add    BYTE PTR [rdx],dh
   140048139:	jl     0x14004813f
   14004813b:	add    BYTE PTR [rsp+rdi*2],bh
   14004813e:	add    al,0x0
   140048140:	pop    rdx
   140048141:	jl     0x140048147
   140048143:	add    BYTE PTR [rdx+0x7c],dh
   140048146:	add    al,0x0
   140048148:	jo     0x1400480ca
   14004814a:	add    al,0x0
   14004814c:	jl     0x1400481ca
   14004814e:	add    al,0x0
   140048150:	xchg   BYTE PTR [rsp+rax*1+0x0],bh
   140048154:	jo     0x1400480d6
   140048156:	add    al,0x0
   140048158:	nop
   140048159:	jl     0x14004815f
   14004815b:	add    BYTE PTR [rdx-0x5efffb84],bl
   140048161:	jl     0x140048167
   140048163:	add    BYTE PTR [rbx-0x4afffb84],ch
   140048169:	jl     0x14004816f
   14004816b:	add    BYTE PTR [rax-0x80],dh
   14004816e:	add    al,0x0
   140048170:	jo     0x1400480f2
   140048172:	add    al,0x0
   140048174:	jo     0x1400480f6
   140048176:	add    al,0x0
   140048178:	mov    edi,0xc900047c
   14004817d:	jl     0x140048183
   14004817f:	add    BYTE PTR [rax-0x80],dh
   140048182:	add    al,0x0
   140048184:	sar    DWORD PTR [rsp+rax*1+0x0],cl
   140048188:	fnstsw WORD PTR [rsp+rax*1+0x0]
   14004818c:	out    0x7c,eax
   14004818e:	add    al,0x0
   140048190:	icebp  
   140048191:	jl     0x140048197
   140048193:	add    bl,bh
   140048195:	jl     0x14004819b
   140048197:	add    BYTE PTR [rip+0x7000047d],al        # 0x1b004861a
   14004819d:	add    BYTE PTR [rax+rax*1],0xf
   1400481a1:	jge    0x1400481a7
   1400481a3:	add    BYTE PTR [rcx],bl
   1400481a5:	jge    0x1400481ab
   1400481a7:	add    BYTE PTR [rbx],ah
   1400481a9:	jge    0x1400481af
   1400481ab:	add    BYTE PTR [rip+0x3700047d],ch        # 0x17704862e
   1400481b1:	jge    0x1400481b7
   1400481b3:	add    BYTE PTR [rcx+0x7d],al
   1400481b6:	add    al,0x0
   1400481b8:	rex.WXB jge 0x1400481bf
   1400481bb:	add    BYTE PTR [rbp+0x7d],dl
   1400481be:	add    al,0x0
   1400481c0:	pop    rdi
   1400481c1:	jge    0x1400481c7
   1400481c3:	add    BYTE PTR [rcx+0x7d],ch
   1400481c6:	add    al,0x0
   1400481c8:	xchg   DWORD PTR [rbp+0x4],edi
   1400481cb:	add    BYTE PTR [rdi-0x46fffb83],ch
   1400481d1:	jge    0x1400481d7
   1400481d3:	add    bl,al
   1400481d5:	jge    0x1400481db
   1400481d7:	add    ch,cl
   1400481d9:	jge    0x1400481df
   1400481db:	add    bh,dl
   1400481dd:	jge    0x1400481e3
   1400481df:	add    cl,ah
   1400481e1:	jge    0x1400481e7
   1400481e3:	add    bl,ch
   1400481e5:	jge    0x1400481eb
   1400481e7:	add    ch,dh
   1400481e9:	jge    0x1400481ef
   1400481eb:	add    BYTE PTR [rax-0x80],dh
   1400481ee:	add    al,0x0
   1400481f0:	(bad)  
   1400481f1:	jge    0x1400481f7
   1400481f3:	add    BYTE PTR [rsi],cl
   1400481f5:	jle    0x1400481fb
   1400481f7:	add    BYTE PTR [rax],bl
   1400481f9:	jle    0x1400481ff
   1400481fb:	add    BYTE PTR [rdx],ah
   1400481fd:	jle    0x140048203
   1400481ff:	add    BYTE PTR [rsi],bh
   140048201:	jle    0x140048207
   140048203:	add    BYTE PTR [rax+0x7e],cl
   140048206:	add    al,0x0
   140048208:	pop    rsi
   140048209:	jle    0x14004820f
   14004820b:	add    BYTE PTR [rax+0x7e],bh
   14004820e:	add    al,0x0
   140048210:	xchg   esi,eax
   140048211:	jle    0x140048217
   140048213:	add    BYTE PTR [rax-0x40fffb82],bh
   140048219:	jle    0x14004821f
   14004821b:	add    cl,cl
   14004821d:	jle    0x140048223
   14004821f:	add    bl,dl
   140048221:	jle    0x140048227
   140048223:	add    ch,bl
   140048225:	jle    0x14004822b
   140048227:	add    bh,ah
   140048229:	jle    0x14004822f
   14004822b:	add    cl,dh
   14004822d:	jle    0x140048233
   14004822f:	add    bl,bh
   140048231:	jle    0x140048237
   140048233:	add    BYTE PTR [rcx],bl
   140048235:	jg     0x14004823b
   140048237:	add    BYTE PTR [rbx],ah
   140048239:	jg     0x14004823f
   14004823b:	add    BYTE PTR [rip+0x3700047f],ch        # 0x1770486c0
   140048241:	jg     0x140048247
   140048243:	add    BYTE PTR [rsp+rdi*2+0x4],bh
   140048247:	add    BYTE PTR [rcx+0x7f],al
   14004824a:	add    al,0x0
   14004824c:	rex.WXB jg 0x140048253
   14004824f:	add    BYTE PTR [rax-0x80],dh
   140048252:	add    al,0x0
   140048254:	imul   edi,DWORD PTR [rdi+0x4],0x47f8000
   14004825b:	add    BYTE PTR [rax-0x80],dh
   14004825e:	add    al,0x0
   140048260:	xchg   esp,eax
   140048261:	jg     0x140048267
   140048263:	add    BYTE PTR [rsi+0x7000047f],bl
   140048269:	add    BYTE PTR [rax+rax*1],0x70
   14004826d:	add    BYTE PTR [rax+rax*1],0xbc
   140048271:	jg     0x140048277
   140048273:	add    BYTE PTR [rax-0x80],dh
   140048276:	add    al,0x0
   140048278:	stc    
   140048279:	jg     0x14004827f
   14004827b:	add    BYTE PTR [rbx],al
   14004827d:	add    BYTE PTR [rax+rax*1],0x21
   140048281:	add    BYTE PTR [rax+rax*1],0x2d
   140048285:	add    BYTE PTR [rax+rax*1],0x39
   140048289:	add    BYTE PTR [rax+rax*1],0x70
   14004828d:	add    BYTE PTR [rax+rax*1],0x70
   140048291:	add    BYTE PTR [rax+rax*1],0x70
   140048295:	add    BYTE PTR [rax+rax*1],0x57
   140048299:	add    BYTE PTR [rax+rax*1],0x48
   14004829d:	sub    esp,0x28
   1400482a0:	mov    rdx,r9
   1400482a3:	mov    rcx,r8
   1400482a6:	call   0x14004596c
   1400482ab:	mov    edx,eax
   1400482ad:	lea    rcx,[rip+0x28bd4]        # 0x140070e88
   1400482b4:	add    rsp,0x28
   1400482b8:	jmp    0x14001796c
   1400482bd:	int3   
   1400482be:	int3   
   1400482bf:	int3   
   1400482c0:	sub    rsp,0x28
   1400482c4:	cmp    BYTE PTR [rip+0x56865],0x0        # 0x14009eb30
   1400482cb:	je     0x140048304
   1400482cd:	call   0x140046a20
   1400482d2:	mov    ecx,eax
   1400482d4:	mov    eax,0x10624dd3
   1400482d9:	sub    ecx,DWORD PTR [rip+0x39669]        # 0x140081948
   1400482df:	imul   ecx
   1400482e1:	sar    edx,0x6
   1400482e4:	mov    eax,edx
   1400482e6:	shr    eax,0x1f
   1400482e9:	add    edx,eax
   1400482eb:	cmp    edx,0x5
   1400482ee:	jle    0x140048304
   1400482f0:	or     ecx,0xffffffff
   1400482f3:	call   QWORD PTR [rip+0x241df]        # 0x14006c4d8
   1400482f9:	call   0x140046a20
   1400482fe:	mov    DWORD PTR [rip+0x39644],eax        # 0x140081948
   140048304:	add    rsp,0x28
   140048308:	ret    
   140048309:	int3   
   14004830a:	int3   
   14004830b:	int3   
   14004830c:	rex push rbx
   14004830e:	sub    rsp,0x20
   140048312:	mov    ecx,0xcfe
   140048317:	mov    rbx,r8
   14004831a:	call   0x140040118
   14004831f:	mov    rcx,rax
   140048322:	call   0x14001778c
   140048327:	mov    ecx,0xbbc
   14004832c:	call   0x140040118
   140048331:	mov    rcx,rax
   140048334:	call   0x140016a34
   140048339:	cmp    eax,0x3
   14004833c:	sete   cl
   14004833f:	dec    eax
   140048341:	test   eax,0xfffffffd
   140048346:	mov    BYTE PTR [rbx],cl
   140048348:	sete   al
   14004834b:	add    rsp,0x20
   14004834f:	pop    rbx
   140048350:	ret    
   140048351:	int3   
   140048352:	int3   
   140048353:	int3   
   140048354:	rex push rbx
   140048356:	sub    rsp,0x20
   14004835a:	mov    rbx,rcx
   14004835d:	mov    ecx,0xd04
   140048362:	call   0x140040118
   140048367:	mov    rcx,rax
   14004836a:	mov    rdx,rbx
   14004836d:	call   0x14001778c
   140048372:	mov    ecx,0xbc2
   140048377:	call   0x140040118
   14004837c:	mov    rcx,rax
   14004837f:	call   0x140016a34
   140048384:	cmp    eax,0x2
   140048387:	setne  al
   14004838a:	add    rsp,0x20
   14004838e:	pop    rbx
   14004838f:	ret    
   140048390:	rex push rbx
   140048392:	sub    rsp,0x20
   140048396:	mov    rbx,rcx
   140048399:	lea    rcx,[rip+0x28afc]        # 0x140070e9c
   1400483a0:	call   0x14001796c
   1400483a5:	mov    ecx,0xcec
   1400483aa:	call   0x140040118
   1400483af:	mov    rdx,rax
   1400483b2:	mov    r8,rbx
   1400483b5:	xor    ecx,ecx
   1400483b7:	call   0x1400170b4
   1400483bc:	mov    ecx,0xbc4
   1400483c1:	call   0x140040118
   1400483c6:	mov    rcx,rax
   1400483c9:	call   0x140016a34
   1400483ce:	cmp    eax,0x1
   1400483d1:	sete   al
   1400483d4:	add    rsp,0x20
   1400483d8:	pop    rbx
   1400483d9:	ret    
   1400483da:	int3   
   1400483db:	int3   
   1400483dc:	mov    QWORD PTR [rsp+0x8],rbx
   1400483e1:	push   rdi
   1400483e2:	sub    rsp,0x20
   1400483e6:	mov    rdi,rcx
   1400483e9:	mov    bl,dl
   1400483eb:	lea    rcx,[rip+0x28aba]        # 0x140070eac
   1400483f2:	call   0x14001796c
   1400483f7:	neg    bl
   1400483f9:	sbb    ecx,ecx
   1400483fb:	and    ecx,0x1ac
   140048401:	add    ecx,0xcea
   140048407:	call   0x140040118
   14004840c:	mov    rdx,rax
   14004840f:	mov    r8,rdi
   140048412:	xor    ecx,ecx
   140048414:	call   0x1400170b4
   140048419:	mov    ecx,0xbc4
   14004841e:	call   0x140040118
   140048423:	mov    rcx,rax
   140048426:	call   0x140016a34
   14004842b:	mov    rbx,QWORD PTR [rsp+0x30]
   140048430:	cmp    eax,0x1
   140048433:	sete   al
   140048436:	add    rsp,0x20
   14004843a:	pop    rdi
   14004843b:	ret    
   14004843c:	rex push rbp
   14004843e:	push   rbx
   14004843f:	push   rsi
   140048440:	push   rdi
   140048441:	push   r14
   140048443:	lea    rbp,[rsp-0x10c0]
   14004844b:	mov    eax,0x11c0
   140048450:	call   0x140055f20
   140048455:	sub    rsp,rax
   140048458:	mov    rax,QWORD PTR [rip+0x39a81]        # 0x140081ee0
   14004845f:	xor    rax,rsp
   140048462:	mov    QWORD PTR [rbp+0x10b0],rax
   140048469:	mov    rdi,r8
   14004846c:	mov    r14,rdx
   14004846f:	mov    rsi,rcx
   140048472:	xor    edx,edx
   140048474:	mov    r8d,0x1048
   14004847a:	lea    rcx,[rsp+0x30]
   14004847f:	mov    rbx,r9
   140048482:	call   0x140058f40
   140048487:	xor    r8d,r8d
   14004848a:	lea    rdx,[rsp+0x30]
   14004848f:	mov    rcx,rsi
   140048492:	call   0x140023280
   140048497:	mov    rcx,QWORD PTR [rbp+0xf30]
   14004849e:	lea    rdx,[rbp+0xfa8]
   1400484a5:	mov    r8d,0x14
   1400484ab:	call   0x140045f5c
   1400484b0:	xor    r9d,r9d
   1400484b3:	lea    rdx,[rbp+0x1040]
   1400484ba:	lea    rcx,[rbp+0xf40]
   1400484c1:	lea    r8d,[r9+0x32]
   1400484c5:	call   0x140047488
   1400484ca:	movabs rax,0x7fffffff7fffffff
   1400484d4:	cmp    rdi,rax
   1400484d7:	je     0x140048546
   1400484d9:	test   rbx,rbx
   1400484dc:	je     0x140048546
   1400484de:	mov    r8d,0x14
   1400484e4:	lea    rdx,[rbp+0xf80]
   1400484eb:	mov    rcx,rdi
   1400484ee:	call   0x140045f5c
   1400484f3:	xor    r9d,r9d
   1400484f6:	lea    rdx,[rbp+0xfd0]
   1400484fd:	mov    rcx,rbx
   140048500:	lea    r8d,[r9+0x32]
   140048504:	call   0x140047488
   140048509:	mov    ecx,0xd76
   14004850e:	call   0x140040118
   140048513:	mov    rcx,rax
   140048516:	lea    r9,[rbp+0x1040]
   14004851d:	lea    rax,[rbp+0xfd0]
   140048524:	mov    rdx,rsi
   140048527:	mov    QWORD PTR [rsp+0x28],rax
   14004852c:	lea    r8,[rbp+0xfa8]
   140048533:	lea    rax,[rbp+0xf80]
   14004853a:	mov    QWORD PTR [rsp+0x20],rax
   14004853f:	call   0x14001778c
   140048544:	jmp    0x140048567
   140048546:	lea    rcx,[rip+0x28933]        # 0x140070e80
   14004854d:	call   0x14001778c
   140048552:	mov    ecx,0xd78
   140048557:	call   0x140040118
   14004855c:	mov    rcx,rax
   14004855f:	mov    rdx,rsi
   140048562:	call   0x14001778c
   140048567:	mov    bl,BYTE PTR [rbp+0x1110]
   14004856d:	not    bl
   14004856f:	and    bl,0x1
   140048572:	mov    al,bl
   140048574:	neg    al
   140048576:	sbb    edi,edi
   140048578:	and    edi,0x2
   14004857b:	lea    ecx,[rdi+0xbbe]
   140048581:	call   0x140040118
   140048586:	mov    rcx,rax
   140048589:	call   0x140016a34
   14004858e:	test   eax,eax
   140048590:	je     0x14004857b
   140048592:	mov    r8d,eax
   140048595:	sub    r8d,0x1
   140048599:	je     0x1400485fa
   14004859b:	sub    r8d,0x1
   14004859f:	je     0x1400485f3
   1400485a1:	sub    r8d,0x1
   1400485a5:	je     0x1400485ec
   1400485a7:	cmp    r8d,0x1
   1400485ab:	je     0x1400485e5
   1400485ad:	test   bl,bl
   1400485af:	je     0x1400485de
   1400485b1:	cmp    eax,0x5
   1400485b4:	jne    0x1400485de
   1400485b6:	mov    ecx,0xd7a
   1400485bb:	call   0x140040118
   1400485c0:	mov    rcx,rax
   1400485c3:	call   0x14001796c
   1400485c8:	mov    rdx,r14
   1400485cb:	mov    rcx,rsi
   1400485ce:	call   0x1400177e4
   1400485d3:	neg    al
   1400485d5:	sbb    eax,eax
   1400485d7:	and    eax,0x3
   1400485da:	inc    eax
   1400485dc:	jmp    0x1400485fc
   1400485de:	mov    eax,0x6
   1400485e3:	jmp    0x1400485fc
   1400485e5:	mov    eax,0x3
   1400485ea:	jmp    0x1400485fc
   1400485ec:	mov    eax,0x2
   1400485f1:	jmp    0x1400485fc
   1400485f3:	mov    eax,0x1
   1400485f8:	jmp    0x1400485fc
   1400485fa:	xor    eax,eax
   1400485fc:	mov    rcx,QWORD PTR [rbp+0x10b0]
   140048603:	xor    rcx,rsp
   140048606:	call   0x140055f90
   14004860b:	add    rsp,0x11c0
   140048612:	pop    r14
   140048614:	pop    rdi
   140048615:	pop    rsi
   140048616:	pop    rbx
   140048617:	pop    rbp
   140048618:	ret    
   140048619:	int3   
   14004861a:	int3   
   14004861b:	int3   
   14004861c:	rex push rbx
   14004861e:	push   rbp
   14004861f:	push   rsi
   140048620:	push   rdi
   140048621:	mov    eax,0x1058
   140048626:	call   0x140055f20
   14004862b:	sub    rsp,rax
   14004862e:	mov    rax,QWORD PTR [rip+0x398ab]        # 0x140081ee0
   140048635:	xor    rax,rsp
   140048638:	mov    QWORD PTR [rsp+0x1040],rax
   140048640:	mov    rax,QWORD PTR [rsp+0x10a0]
   140048648:	mov    rsi,r9
   14004864b:	mov    QWORD PTR [rsp+0x30],rax
   140048650:	mov    rbp,r8
   140048653:	mov    eax,DWORD PTR [rcx+0x613c]
   140048659:	mov    rbx,rdx
   14004865c:	mov    QWORD PTR [rsp+0x38],r9
   140048661:	mov    rdi,rcx
   140048664:	cmp    eax,0x2
   140048667:	jne    0x140048673
   140048669:	mov    eax,0x1
   14004866e:	jmp    0x1400487a7
   140048673:	cmp    eax,0x3
   140048676:	jne    0x14004868b
   140048678:	mov    rdx,r8
   14004867b:	mov    rcx,rbx
   14004867e:	call   0x1400203fc
   140048683:	test   al,al
   140048685:	jne    0x1400487a5
   14004868b:	cmp    BYTE PTR [rdi+0x619c],0x0
   140048692:	jne    0x14004879d
   140048698:	cmp    DWORD PTR [rdi+0x613c],0x1
   14004869f:	je     0x14004879d
   1400486a5:	mov    r8d,0x800
   1400486ab:	lea    rcx,[rsp+0x40]
   1400486b0:	mov    rdx,rbx
   1400486b3:	call   0x140046158
   1400486b8:	mov    eax,DWORD PTR [rsp+0x10a8]
   1400486bf:	lea    rcx,[rsp+0x40]
   1400486c4:	mov    r9,QWORD PTR [rsp+0x30]
   1400486c9:	mov    r8,rsi
   1400486cc:	mov    edx,0x800
   1400486d1:	mov    DWORD PTR [rsp+0x20],eax
   1400486d5:	call   0x14004843c
   1400486da:	mov    esi,eax
   1400486dc:	test   eax,0xfffffffd
   1400486e1:	jne    0x1400486ff
   1400486e3:	mov    rcx,rbx
   1400486e6:	call   0x140022404
   1400486eb:	cmp    esi,0x2
   1400486ee:	jne    0x1400486ff
   1400486f0:	mov    DWORD PTR [rdi+0x613c],0x1
   1400486fa:	jmp    0x1400487a5
   1400486ff:	cmp    esi,0x3
   140048702:	jne    0x140048713
   140048704:	mov    DWORD PTR [rdi+0x613c],0x2
   14004870e:	jmp    0x140048669
   140048713:	cmp    esi,0x4
   140048716:	jne    0x140048779
   140048718:	lea    rcx,[rsp+0x40]
   14004871d:	call   0x1400327bc
   140048722:	lea    rcx,[rsp+0x40]
   140048727:	mov    r8,rbp
   14004872a:	cmp    rax,rcx
   14004872d:	lea    rdx,[rsp+0x40]
   140048732:	mov    rcx,rbx
   140048735:	jne    0x14004873e
   140048737:	call   0x1400328b8
   14004873c:	jmp    0x140048743
   14004873e:	call   0x140046158
   140048743:	mov    rcx,rbx
   140048746:	call   0x140021dec
   14004874b:	test   al,al
   14004874d:	je     0x1400487a5
   14004874f:	mov    eax,DWORD PTR [rsp+0x10a8]
   140048756:	mov    r8,rbp
   140048759:	mov    r9,QWORD PTR [rsp+0x38]
   14004875e:	mov    rdx,rbx
   140048761:	mov    DWORD PTR [rsp+0x28],eax
   140048765:	mov    rcx,rdi
   140048768:	mov    rax,QWORD PTR [rsp+0x30]
   14004876d:	mov    QWORD PTR [rsp+0x20],rax
   140048772:	call   0x14004861c
   140048777:	jmp    0x1400487a7
   140048779:	cmp    esi,0x5
   14004877c:	jne    0x140048799
   14004877e:	mov    rdx,rbp
   140048781:	mov    rcx,rbx
   140048784:	call   0x1400203fc
   140048789:	test   al,al
   14004878b:	je     0x140048799
   14004878d:	mov    DWORD PTR [rdi+0x613c],0x3
   140048797:	jmp    0x1400487a5
   140048799:	mov    eax,esi
   14004879b:	jmp    0x1400487a7
   14004879d:	mov    rcx,rbx
   1400487a0:	call   0x140022404
   1400487a5:	xor    eax,eax
   1400487a7:	mov    rcx,QWORD PTR [rsp+0x1040]
   1400487af:	xor    rcx,rsp
   1400487b2:	call   0x140055f90
   1400487b7:	add    rsp,0x1058
   1400487be:	pop    rdi
   1400487bf:	pop    rsi
   1400487c0:	pop    rbp
   1400487c1:	pop    rbx
   1400487c2:	ret    
   1400487c3:	int3   
   1400487c4:	sub    rsp,0x28
   1400487c8:	mov    ecx,0xe0a
   1400487cd:	call   0x140040118
   1400487d2:	mov    rcx,rax
   1400487d5:	call   0x14001778c
   1400487da:	mov    ecx,0xbba
   1400487df:	call   0x140040118
   1400487e4:	mov    rcx,rax
   1400487e7:	call   0x140016a34
   1400487ec:	cmp    eax,0x1
   1400487ef:	sete   al
   1400487f2:	add    rsp,0x28
   1400487f6:	ret    
   1400487f7:	int3   
   1400487f8:	sub    rsp,0x28
   1400487fc:	mov    rdx,r9
   1400487ff:	mov    rcx,r8
   140048802:	call   0x14004596c
   140048807:	mov    edx,eax
   140048809:	lea    rcx,[rip+0x286b0]        # 0x140070ec0
   140048810:	add    rsp,0x28
   140048814:	jmp    0x14001796c
   140048819:	int3   
   14004881a:	int3   
   14004881b:	int3   
   14004881c:	movsxd rax,ecx
   14004881f:	lea    rcx,[rip+0x3912a]        # 0x140081950
   140048826:	mov    ecx,DWORD PTR [rcx+rax*4]
   140048829:	jmp    0x140040118
   14004882e:	int3   
   14004882f:	int3   
   140048830:	jmp    0x140016d1c
   140048835:	int3   
   140048836:	int3   
   140048837:	int3   
   140048838:	mov    BYTE PTR [rip+0x562f2],cl        # 0x14009eb30
   14004883e:	ret    
   14004883f:	int3   
   140048840:	sub    rsp,0x28
   140048844:	mov    rcx,rdx
   140048847:	mov    rdx,r8
   14004884a:	call   0x14004596c
   14004884f:	mov    edx,eax
   140048851:	lea    rcx,[rip+0x28680]        # 0x140070ed8
   140048858:	add    rsp,0x28
   14004885c:	jmp    0x14001796c
   140048861:	int3   
   140048862:	int3   
   140048863:	int3   
   140048864:	sub    rsp,0x28
   140048868:	mov    ecx,0xe04
   14004886d:	call   0x140040118
   140048872:	mov    rcx,rax
   140048875:	call   0x14001778c
   14004887a:	mov    ecx,0xbba
   14004887f:	call   0x140040118
   140048884:	mov    rcx,rax
   140048887:	call   0x140016a34
   14004888c:	cmp    eax,0x1
   14004888f:	sete   al
   140048892:	add    rsp,0x28
   140048896:	ret    
   140048897:	int3   
   140048898:	mov    QWORD PTR [rsp+0x8],rbx
   14004889d:	mov    QWORD PTR [rsp+0x10],rsi
   1400488a2:	push   rdi
   1400488a3:	sub    rsp,0x20
   1400488a7:	mov    rbx,rcx
   1400488aa:	mov    rsi,r8
   1400488ad:	mov    ecx,0xe02
   1400488b2:	mov    rdi,rdx
   1400488b5:	call   0x140040118
   1400488ba:	mov    rcx,rax
   1400488bd:	mov    rdx,rbx
   1400488c0:	call   0x14001796c
   1400488c5:	mov    rdx,rdi
   1400488c8:	lea    rcx,[rip+0x285d1]        # 0x140070ea0
   1400488cf:	call   0x14001796c
   1400488d4:	cmp    BYTE PTR [rsi],0x0
   1400488d7:	je     0x1400488f0
   1400488d9:	mov    rcx,rsi
   1400488dc:	call   0x140045bf4
   1400488e1:	mov    rdx,rax
   1400488e4:	lea    rcx,[rip+0x285c5]        # 0x140070eb0
   1400488eb:	call   0x14001796c
   1400488f0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400488f5:	mov    rsi,QWORD PTR [rsp+0x38]
   1400488fa:	add    rsp,0x20
   1400488fe:	pop    rdi
   1400488ff:	ret    
   140048900:	mov    QWORD PTR [rsp+0x8],rbx
   140048905:	mov    QWORD PTR [rsp+0x10],rsi
   14004890a:	push   rdi
   14004890b:	sub    rsp,0x20
   14004890f:	mov    dil,r9b
   140048912:	mov    rsi,r8
   140048915:	test   dl,dl
   140048917:	je     0x140048928
   140048919:	mov    ecx,0xd32
   14004891e:	call   0x140040118
   140048923:	mov    rbx,rax
   140048926:	jmp    0x14004892f
   140048928:	lea    rbx,[rip+0x28555]        # 0x140070e84
   14004892f:	neg    dil
   140048932:	sbb    ecx,ecx
   140048934:	and    ecx,0x2
   140048937:	add    ecx,0xd2e
   14004893d:	call   0x140040118
   140048942:	mov    rcx,rax
   140048945:	mov    r8,rsi
   140048948:	mov    rdx,rbx
   14004894b:	mov    rbx,QWORD PTR [rsp+0x30]
   140048950:	mov    rsi,QWORD PTR [rsp+0x38]
   140048955:	add    rsp,0x20
   140048959:	pop    rdi
   14004895a:	jmp    0x14001796c
   14004895f:	int3   
   140048960:	rex push rbx
   140048962:	sub    rsp,0x20
   140048966:	neg    cl
   140048968:	mov    rbx,rdx
   14004896b:	sbb    ecx,ecx
   14004896d:	and    ecx,0x2
   140048970:	add    ecx,0xd5a
   140048976:	call   0x140040118
   14004897b:	mov    rcx,rax
   14004897e:	mov    rdx,rbx
   140048981:	add    rsp,0x20
   140048985:	pop    rbx
   140048986:	jmp    0x14001796c
   14004898b:	int3   
   14004898c:	test   r9b,r9b
   14004898f:	jne    0x1400489c3
   140048991:	push   rbx
   140048992:	sub    rsp,0x20
   140048996:	mov    rbx,rdx
   140048999:	cmp    BYTE PTR [rsp+0x50],r9b
   14004899e:	jne    0x1400489be
   1400489a0:	neg    r8b
   1400489a3:	sbb    ecx,ecx
   1400489a5:	and    ecx,0x2
   1400489a8:	add    ecx,0xd34
   1400489ae:	call   0x140040118
   1400489b3:	mov    rcx,rax
   1400489b6:	mov    rdx,rbx
   1400489b9:	call   0x14001796c
   1400489be:	add    rsp,0x20
   1400489c2:	pop    rbx
   1400489c3:	ret    
   1400489c4:	test   dl,dl
   1400489c6:	jne    0x1400489ef
   1400489c8:	push   rbx
   1400489c9:	sub    rsp,0x20
   1400489cd:	mov    rbx,rcx
   1400489d0:	test   r8b,r8b
   1400489d3:	jne    0x1400489ea
   1400489d5:	mov    ecx,0xd9a
   1400489da:	call   0x140040118
   1400489df:	mov    rcx,rax
   1400489e2:	mov    rdx,rbx
   1400489e5:	call   0x14001796c
   1400489ea:	add    rsp,0x20
   1400489ee:	pop    rbx
   1400489ef:	ret    
   1400489f0:	mov    rax,rsp
   1400489f3:	mov    QWORD PTR [rax+0x8],rbx
   1400489f7:	mov    QWORD PTR [rax+0x10],rsi
   1400489fb:	push   rdi
   1400489fc:	sub    rsp,0x30
   140048a00:	mov    rbx,r8
   140048a03:	mov    rdi,rdx
   140048a06:	mov    DWORD PTR [rax-0x10],ebx
   140048a09:	mov    r8,rcx
   140048a0c:	mov    QWORD PTR [rax-0x18],rdx
   140048a10:	xor    esi,esi
   140048a12:	mov    WORD PTR [rdx],si
   140048a15:	or     r9d,0xffffffff
   140048a19:	xor    edx,edx
   140048a1b:	xor    ecx,ecx
   140048a1d:	call   QWORD PTR [rip+0x2387d]        # 0x14006c2a0
   140048a23:	neg    eax
   140048a25:	sbb    al,al
   140048a27:	and    al,0x1
   140048a29:	test   rbx,rbx
   140048a2c:	je     0x140048a33
   140048a2e:	mov    WORD PTR [rdi+rbx*2-0x2],si
   140048a33:	mov    rbx,QWORD PTR [rsp+0x40]
   140048a38:	mov    rsi,QWORD PTR [rsp+0x48]
   140048a3d:	add    rsp,0x30
   140048a41:	pop    rdi
   140048a42:	ret    
   140048a43:	int3   
   140048a44:	mov    QWORD PTR [rsp+0x10],rbx
   140048a49:	push   rdi
   140048a4a:	sub    rsp,0x40
   140048a4e:	mov    rax,QWORD PTR [rip+0x3948b]        # 0x140081ee0
   140048a55:	xor    rax,rsp
   140048a58:	mov    QWORD PTR [rsp+0x38],rax
   140048a5d:	mov    rdi,rcx
   140048a60:	lea    rdx,[rsp+0x20]
   140048a65:	xor    ecx,ecx
   140048a67:	call   QWORD PTR [rip+0x23823]        # 0x14006c290
   140048a6d:	cmp    DWORD PTR [rsp+0x20],0x1
   140048a72:	seta   al
   140048a75:	xor    ebx,ebx
   140048a77:	mov    BYTE PTR [rdi+0x100],al
   140048a7d:	mov    cl,bl
   140048a7f:	call   QWORD PTR [rip+0x23813]        # 0x14006c298
   140048a85:	test   eax,eax
   140048a87:	setne  al
   140048a8a:	inc    ebx
   140048a8c:	mov    BYTE PTR [rdi],al
   140048a8e:	inc    rdi
   140048a91:	cmp    ebx,0x100
   140048a97:	jb     0x140048a7d
   140048a99:	mov    rcx,QWORD PTR [rsp+0x38]
   140048a9e:	xor    rcx,rsp
   140048aa1:	call   0x140055f90
   140048aa6:	mov    rbx,QWORD PTR [rsp+0x58]
   140048aab:	add    rsp,0x40
   140048aaf:	pop    rdi
   140048ab0:	ret    
   140048ab1:	int3   
   140048ab2:	int3   
   140048ab3:	int3   
   140048ab4:	mov    QWORD PTR [rsp+0x8],rbx
   140048ab9:	mov    QWORD PTR [rsp+0x10],rdi
   140048abe:	xor    edi,edi
   140048ac0:	mov    r9,rcx
   140048ac3:	mov    r10d,edi
   140048ac6:	test   r8,r8
   140048ac9:	je     0x140048af5
   140048acb:	mov    rbx,rdx
   140048ace:	sub    rbx,rcx
   140048ad1:	movzx  ecx,BYTE PTR [r9+0x1]
   140048ad6:	movzx  eax,BYTE PTR [r9]
   140048ada:	shl    ecx,0x8
   140048add:	add    ecx,eax
   140048adf:	mov    WORD PTR [rbx+r9*1],cx
   140048ae4:	test   cx,cx
   140048ae7:	je     0x140048af5
   140048ae9:	inc    r10
   140048aec:	add    r9,0x2
   140048af0:	cmp    r10,r8
   140048af3:	jb     0x140048ad1
   140048af5:	mov    rbx,QWORD PTR [rsp+0x8]
   140048afa:	mov    rax,rdx
   140048afd:	mov    rdi,QWORD PTR [rsp+0x10]
   140048b02:	ret    
   140048b03:	int3   
   140048b04:	mov    QWORD PTR [rsp+0x8],rbx
   140048b09:	mov    al,BYTE PTR [rcx]
   140048b0b:	dec    r8d
   140048b0e:	xor    ebx,ebx
   140048b10:	mov    r9,rdx
   140048b13:	mov    r10,rcx
   140048b16:	mov    r11b,0x1
   140048b19:	test   al,al
   140048b1b:	je     0x140048c96
   140048b21:	movzx  edx,al
   140048b24:	inc    r10
   140048b27:	cmp    edx,0x80
   140048b2d:	jb     0x140048c1e
   140048b33:	mov    eax,edx
   140048b35:	and    eax,0xffffffe0
   140048b38:	cmp    eax,0xc0
   140048b3d:	jne    0x140048b67
   140048b3f:	mov    al,BYTE PTR [r10]
   140048b42:	and    al,0xc0
   140048b44:	cmp    al,0x80
   140048b46:	jne    0x140048c93
   140048b4c:	movsx  ecx,BYTE PTR [r10]
   140048b50:	and    edx,0x1f
   140048b53:	mov    eax,edx
   140048b55:	and    ecx,0x3f
   140048b58:	shl    eax,0x6
   140048b5b:	mov    edx,ecx
   140048b5d:	or     edx,eax
   140048b5f:	inc    r10
   140048b62:	jmp    0x140048c1e
   140048b67:	mov    eax,edx
   140048b69:	and    eax,0xfffffff0
   140048b6c:	cmp    eax,0xe0
   140048b71:	jne    0x140048bb4
   140048b73:	mov    al,BYTE PTR [r10]
   140048b76:	and    al,0xc0
   140048b78:	cmp    al,0x80
   140048b7a:	jne    0x140048c93
   140048b80:	mov    al,BYTE PTR [r10+0x1]
   140048b84:	and    al,0xc0
   140048b86:	cmp    al,0x80
   140048b88:	jne    0x140048c93
   140048b8e:	movsx  ecx,BYTE PTR [r10]
   140048b92:	and    edx,0xf
   140048b95:	movsx  eax,BYTE PTR [r10+0x1]
   140048b9a:	and    ecx,0x3f
   140048b9d:	and    eax,0x3f
   140048ba0:	shl    ecx,0x6
   140048ba3:	or     ecx,eax
   140048ba5:	mov    eax,edx
   140048ba7:	shl    eax,0xc
   140048baa:	mov    edx,ecx
   140048bac:	or     edx,eax
   140048bae:	add    r10,0x2
   140048bb2:	jmp    0x140048c1e
   140048bb4:	mov    eax,edx
   140048bb6:	and    eax,0xfffffff8
   140048bb9:	cmp    eax,0xf0
   140048bbe:	jne    0x140048c93
   140048bc4:	mov    al,BYTE PTR [r10]
   140048bc7:	and    al,0xc0
   140048bc9:	cmp    al,0x80
   140048bcb:	jne    0x140048c93
   140048bd1:	mov    al,BYTE PTR [r10+0x1]
   140048bd5:	and    al,0xc0
   140048bd7:	cmp    al,0x80
   140048bd9:	jne    0x140048c93
   140048bdf:	mov    al,BYTE PTR [r10+0x2]
   140048be3:	and    al,0xc0
   140048be5:	cmp    al,0x80
   140048be7:	jne    0x140048c93
   140048bed:	movsx  ecx,BYTE PTR [r10]
   140048bf1:	and    edx,0x7
   140048bf4:	movsx  eax,BYTE PTR [r10+0x1]
   140048bf9:	and    ecx,0x3f
   140048bfc:	and    eax,0x3f
   140048bff:	shl    ecx,0x6
   140048c02:	or     ecx,eax
   140048c04:	movsx  eax,BYTE PTR [r10+0x2]
   140048c09:	and    eax,0x3f
   140048c0c:	shl    ecx,0x6
   140048c0f:	or     ecx,eax
   140048c11:	mov    eax,edx
   140048c13:	shl    eax,0x12
   140048c16:	mov    edx,ecx
   140048c18:	or     edx,eax
   140048c1a:	add    r10,0x3
   140048c1e:	test   r9,r9
   140048c21:	je     0x140048c29
   140048c23:	sub    r8d,0x1
   140048c27:	js     0x140048c96
   140048c29:	cmp    edx,0xffff
   140048c2f:	jbe    0x140048c7e
   140048c31:	test   r9,r9
   140048c34:	je     0x140048c3c
   140048c36:	sub    r8d,0x1
   140048c3a:	js     0x140048c96
   140048c3c:	cmp    edx,0x10ffff
   140048c42:	jbe    0x140048c49
   140048c44:	mov    r11b,bl
   140048c47:	jmp    0x140048c8b
   140048c49:	test   r9,r9
   140048c4c:	je     0x140048c8b
   140048c4e:	lea    eax,[rdx-0x10000]
   140048c54:	mov    ecx,0x2800
   140048c59:	shr    eax,0xa
   140048c5c:	sub    ax,cx
   140048c5f:	mov    WORD PTR [r9],ax
   140048c63:	mov    eax,0x3ff
   140048c68:	and    dx,ax
   140048c6b:	mov    eax,0x2400
   140048c70:	sub    dx,ax
   140048c73:	mov    WORD PTR [r9+0x2],dx
   140048c78:	add    r9,0x4
   140048c7c:	jmp    0x140048c8b
   140048c7e:	test   r9,r9
   140048c81:	je     0x140048c8b
   140048c83:	mov    WORD PTR [r9],dx
   140048c87:	add    r9,0x2
   140048c8b:	mov    al,BYTE PTR [r10]
   140048c8e:	jmp    0x140048b19
   140048c93:	mov    r11b,bl
   140048c96:	test   r9,r9
   140048c99:	je     0x140048c9f
   140048c9b:	mov    WORD PTR [r9],bx
   140048c9f:	mov    rbx,QWORD PTR [rsp+0x8]
   140048ca4:	mov    al,r11b
   140048ca7:	ret    
   140048ca8:	mov    rax,rsp
   140048cab:	mov    QWORD PTR [rax+0x8],rbx
   140048caf:	push   rdi
   140048cb0:	sub    rsp,0x40
   140048cb4:	and    QWORD PTR [rax-0x10],0x0
   140048cb9:	mov    rbx,r8
   140048cbc:	and    QWORD PTR [rax-0x18],0x0
   140048cc1:	mov    rdi,rdx
   140048cc4:	mov    DWORD PTR [rax-0x20],ebx
   140048cc7:	mov    r8,rcx
   140048cca:	mov    QWORD PTR [rax-0x28],rdx
   140048cce:	or     r9d,0xffffffff
   140048cd2:	mov    BYTE PTR [rdx],0x0
   140048cd5:	xor    ecx,ecx
   140048cd7:	xor    edx,edx
   140048cd9:	call   QWORD PTR [rip+0x235c9]        # 0x14006c2a8
   140048cdf:	neg    eax
   140048ce1:	sbb    al,al
   140048ce3:	and    al,0x1
   140048ce5:	test   rbx,rbx
   140048ce8:	je     0x140048cef
   140048cea:	mov    BYTE PTR [rdi+rbx*1-0x1],0x0
   140048cef:	mov    rbx,QWORD PTR [rsp+0x50]
   140048cf4:	add    rsp,0x40
   140048cf8:	pop    rdi
   140048cf9:	ret    
   140048cfa:	int3   
   140048cfb:	int3   
   140048cfc:	xor    r10d,r10d
   140048cff:	mov    r9d,r10d
   140048d02:	test   r8,r8
   140048d05:	je     0x140048d27
   140048d07:	mov    al,BYTE PTR [rcx]
   140048d09:	mov    BYTE PTR [rdx+r9*2],al
   140048d0d:	mov    al,BYTE PTR [rcx+0x1]
   140048d10:	mov    BYTE PTR [rdx+r9*2+0x1],al
   140048d15:	cmp    WORD PTR [rcx],r10w
   140048d19:	je     0x140048d27
   140048d1b:	inc    r9
   140048d1e:	add    rcx,0x2
   140048d22:	cmp    r9,r8
   140048d25:	jb     0x140048d07
   140048d27:	mov    rax,rdx
   140048d2a:	ret    
   140048d2b:	int3   
   140048d2c:	mov    QWORD PTR [rsp+0x8],rsi
   140048d31:	movzx  eax,WORD PTR [rcx]
   140048d34:	lea    r9d,[r8-0x1]
   140048d38:	mov    r10,rcx
   140048d3b:	test   ax,ax
   140048d3e:	je     0x140048e16
   140048d44:	mov    esi,0x3ff
   140048d49:	mov    r11d,0x1
   140048d4f:	sub    r9d,r11d
   140048d52:	js     0x140048e16
   140048d58:	movzx  ecx,ax
   140048d5b:	add    r10,0x2
   140048d5f:	cmp    ecx,0x80
   140048d65:	jb     0x140048e04
   140048d6b:	cmp    ecx,0x800
   140048d71:	jae    0x140048d81
   140048d73:	sub    r9d,r11d
   140048d76:	js     0x140048d81
   140048d78:	mov    eax,ecx
   140048d7a:	shr    eax,0x6
   140048d7d:	or     al,0xc0
   140048d7f:	jmp    0x140048df9
   140048d81:	lea    eax,[rcx-0xd800]
   140048d87:	cmp    eax,esi
   140048d89:	ja     0x140048db1
   140048d8b:	movzx  eax,WORD PTR [r10]
   140048d8f:	mov    r8d,0x2400
   140048d95:	add    ax,r8w
   140048d99:	cmp    ax,si
   140048d9c:	ja     0x140048db1
   140048d9e:	movzx  eax,WORD PTR [r10]
   140048da2:	add    ecx,0xffff2809
   140048da8:	shl    ecx,0xa
   140048dab:	add    ecx,eax
   140048dad:	add    r10,0x2
   140048db1:	cmp    ecx,0x10000
   140048db7:	jae    0x140048dc8
   140048db9:	sub    r9d,0x2
   140048dbd:	js     0x140048dc8
   140048dbf:	mov    eax,ecx
   140048dc1:	shr    eax,0xc
   140048dc4:	or     al,0xe0
   140048dc6:	jmp    0x140048deb
   140048dc8:	cmp    ecx,0x200000
   140048dce:	jae    0x140048e09
   140048dd0:	sub    r9d,0x3
   140048dd4:	js     0x140048e09
   140048dd6:	mov    eax,ecx
   140048dd8:	shr    eax,0x12
   140048ddb:	or     al,0xf0
   140048ddd:	mov    BYTE PTR [rdx],al
   140048ddf:	mov    eax,ecx
   140048de1:	shr    eax,0xc
   140048de4:	add    rdx,r11
   140048de7:	and    al,0x3f
   140048de9:	or     al,0x80
   140048deb:	mov    BYTE PTR [rdx],al
   140048ded:	mov    eax,ecx
   140048def:	shr    eax,0x6
   140048df2:	add    rdx,r11
   140048df5:	and    al,0x3f
   140048df7:	or     al,0x80
   140048df9:	mov    BYTE PTR [rdx],al
   140048dfb:	and    cl,0x3f
   140048dfe:	add    rdx,r11
   140048e01:	or     cl,0x80
   140048e04:	mov    BYTE PTR [rdx],cl
   140048e06:	add    rdx,r11
   140048e09:	movzx  eax,WORD PTR [r10]
   140048e0d:	test   ax,ax
   140048e10:	jne    0x140048d4f
   140048e16:	mov    rsi,QWORD PTR [rsp+0x8]
   140048e1b:	mov    BYTE PTR [rdx],0x0
   140048e1e:	ret    
   140048e1f:	int3   
   140048e20:	movzx  eax,WORD PTR [rcx]
   140048e23:	xor    r10d,r10d
   140048e26:	mov    edx,r10d
   140048e29:	test   ax,ax
   140048e2c:	je     0x140048eb5
   140048e32:	mov    r11d,0x3ff
   140048e38:	mov    r8d,0x80
   140048e3e:	cmp    ax,r8w
   140048e42:	jae    0x140048e49
   140048e44:	inc    rdx
   140048e47:	jmp    0x140048ea9
   140048e49:	mov    r8d,0x800
   140048e4f:	cmp    ax,r8w
   140048e53:	jae    0x140048e5b
   140048e55:	add    rdx,0x2
   140048e59:	jmp    0x140048ea9
   140048e5b:	movzx  r8d,ax
   140048e5f:	cmp    r8d,0x10000
   140048e66:	jge    0x140048e9c
   140048e68:	mov    r8d,0x2800
   140048e6e:	add    ax,r8w
   140048e72:	cmp    ax,r11w
   140048e76:	ja     0x140048e96
   140048e78:	movzx  eax,WORD PTR [rcx+0x2]
   140048e7c:	mov    r9d,0x2400
   140048e82:	add    ax,r9w
   140048e86:	cmp    ax,r11w
   140048e8a:	ja     0x140048e96
   140048e8c:	add    rdx,0x4
   140048e90:	add    rcx,0x2
   140048e94:	jmp    0x140048ea9
   140048e96:	add    rdx,0x3
   140048e9a:	jmp    0x140048ea9
   140048e9c:	cmp    r8d,0x200000
   140048ea3:	jge    0x140048ea9
   140048ea5:	add    rdx,0x4
   140048ea9:	add    rcx,0x2
   140048ead:	movzx  eax,WORD PTR [rcx]
   140048eb0:	test   ax,ax
   140048eb3:	jne    0x140048e38
   140048eb5:	lea    rax,[rdx+0x1]
   140048eb9:	ret    
   140048eba:	int3   
   140048ebb:	int3   
   140048ebc:	cmp    WORD PTR [rcx],0x2d
   140048ec0:	mov    rdx,rcx
   140048ec3:	mov    r8d,0x1
   140048ec9:	jne    0x140048ed3
   140048ecb:	add    rdx,0x2
   140048ecf:	or     r8d,0xffffffff
   140048ed3:	xor    r9d,r9d
   140048ed6:	lea    r10d,[r9+0x30]
   140048eda:	jmp    0x140048ef7
   140048edc:	cmp    ax,0x39
   140048ee0:	ja     0x140048f00
   140048ee2:	movzx  eax,ax
   140048ee5:	sub    eax,r10d
   140048ee8:	movsxd rcx,eax
   140048eeb:	add    rdx,0x2
   140048eef:	lea    rax,[r9+r9*4]
   140048ef3:	lea    r9,[rcx+rax*2]
   140048ef7:	movzx  eax,WORD PTR [rdx]
   140048efa:	cmp    ax,r10w
   140048efe:	jae    0x140048edc
   140048f00:	movsxd rax,r8d
   140048f03:	imul   rax,r9
   140048f07:	ret    
   140048f08:	jmp    0x140048ebc
   140048f0d:	int3   
   140048f0e:	int3   
   140048f0f:	int3   
   140048f10:	movzx  eax,BYTE PTR [rdx]
   140048f13:	cmp    BYTE PTR [rax+rcx*1],0x0
   140048f17:	je     0x140048f23
   140048f19:	cmp    BYTE PTR [rdx+0x1],0x0
   140048f1d:	lea    rax,[rdx+0x2]
   140048f21:	jne    0x140048f27
   140048f23:	lea    rax,[rdx+0x1]
   140048f27:	ret    
   140048f28:	movsxd rcx,ecx
   140048f2b:	rex.W jmp QWORD PTR [rip+0x2359e]        # 0x14006c4d0
   140048f32:	int3   
   140048f33:	int3   
   140048f34:	sub    rsp,0x38
   140048f38:	or     r9d,0xffffffff
   140048f3c:	mov    r8,rcx
   140048f3f:	mov    DWORD PTR [rsp+0x28],r9d
   140048f44:	mov    ecx,0x400
   140048f49:	mov    QWORD PTR [rsp+0x20],rdx
   140048f4e:	mov    edx,0x1001
   140048f53:	call   QWORD PTR [rip+0x23357]        # 0x14006c2b0
   140048f59:	sub    eax,0x2
   140048f5c:	add    rsp,0x38
   140048f60:	ret    
   140048f61:	int3   
   140048f62:	int3   
   140048f63:	int3   
   140048f64:	rex push rbx
   140048f66:	sub    rsp,0x20
   140048f6a:	mov    rbx,rcx
   140048f6d:	call   QWORD PTR [rip+0x23555]        # 0x14006c4c8
   140048f73:	mov    rax,rbx
   140048f76:	add    rsp,0x20
   140048f7a:	pop    rbx
   140048f7b:	ret    
   140048f7c:	sub    rsp,0x38
   140048f80:	or     rax,0xffffffffffffffff
   140048f84:	mov    r11,rdx
   140048f87:	mov    r9,rax
   140048f8a:	mov    r10,rcx
   140048f8d:	inc    r9
   140048f90:	cmp    WORD PTR [rcx+r9*2],0x0
   140048f96:	jne    0x140048f8d
   140048f98:	inc    r9
   140048f9b:	cmp    r9,r8
   140048f9e:	jae    0x140048fb3
   140048fa0:	mov    rcx,rax
   140048fa3:	inc    rcx
   140048fa6:	cmp    WORD PTR [r10+rcx*2],0x0
   140048fac:	jne    0x140048fa3
   140048fae:	inc    rcx
   140048fb1:	jmp    0x140048fb6
   140048fb3:	mov    rcx,r8
   140048fb6:	mov    rdx,rax
   140048fb9:	inc    rdx
   140048fbc:	cmp    WORD PTR [r11+rdx*2],0x0
   140048fc2:	jne    0x140048fb9
   140048fc4:	inc    rdx
   140048fc7:	cmp    rdx,r8
   140048fca:	jae    0x140048fdc
   140048fcc:	inc    rax
   140048fcf:	cmp    WORD PTR [r11+rax*2],0x0
   140048fd5:	jne    0x140048fcc
   140048fd7:	inc    rax
   140048fda:	jmp    0x140048fdf
   140048fdc:	mov    rax,r8
   140048fdf:	mov    r9d,ecx
   140048fe2:	mov    DWORD PTR [rsp+0x28],eax
   140048fe6:	mov    ecx,0x400
   140048feb:	mov    QWORD PTR [rsp+0x20],r11
   140048ff0:	mov    r8,r10
   140048ff3:	mov    edx,0x1001
   140048ff8:	call   QWORD PTR [rip+0x232b2]        # 0x14006c2b0
   140048ffe:	sub    eax,0x2
   140049001:	add    rsp,0x38
   140049005:	ret    
   140049006:	int3   
   140049007:	int3   
   140049008:	rex push rbx
   14004900a:	sub    rsp,0x20
   14004900e:	mov    rbx,rcx
   140049011:	call   QWORD PTR [rip+0x234b9]        # 0x14006c4d0
   140049017:	mov    rax,rbx
   14004901a:	add    rsp,0x20
   14004901e:	pop    rbx
   14004901f:	ret    
   140049020:	xor    eax,eax
   140049022:	mov    DWORD PTR [rcx+0x4ab0],eax
   140049028:	mov    QWORD PTR [rcx+0x648],rax
   14004902f:	mov    QWORD PTR [rcx+0x658],rax
   140049036:	mov    QWORD PTR [rcx+0x650],rax
   14004903d:	mov    rax,rcx
   140049040:	ret    
   140049041:	int3   
   140049042:	int3   
   140049043:	int3   
   140049044:	mov    rax,rsp
   140049047:	mov    QWORD PTR [rax+0x8],rcx
   14004904b:	push   rdi
   14004904c:	sub    rsp,0x30
   140049050:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140049058:	mov    QWORD PTR [rax+0x10],rbx
   14004905c:	mov    QWORD PTR [rax+0x18],rsi
   140049060:	mov    rbx,rdx
   140049063:	mov    rdi,rcx
   140049066:	add    rcx,0x8
   14004906a:	mov    dl,0x1
   14004906c:	call   0x140023d74
   140049071:	nop
   140049072:	xor    esi,esi
   140049074:	mov    QWORD PTR [rdi+0x40],rsi
   140049078:	mov    QWORD PTR [rdi+0x48],rsi
   14004907c:	mov    QWORD PTR [rdi+0x50],rsi
   140049080:	mov    QWORD PTR [rdi+0x58],rsi
   140049084:	mov    QWORD PTR [rdi+0x60],rsi
   140049088:	mov    QWORD PTR [rdi+0x68],rsi
   14004908c:	mov    QWORD PTR [rdi+0x70],rsi
   140049090:	mov    QWORD PTR [rdi+0x78],rsi
   140049094:	mov    QWORD PTR [rdi+0x80],rsi
   14004909b:	mov    QWORD PTR [rdi+0x88],rsi
   1400490a2:	mov    QWORD PTR [rdi+0x90],rsi
   1400490a9:	mov    QWORD PTR [rdi+0x98],rsi
   1400490b0:	lea    rcx,[rdi+0x4b98]
   1400490b7:	xor    edx,edx
   1400490b9:	mov    r8d,0x200
   1400490bf:	call   0x140058f40
   1400490c4:	nop
   1400490c5:	mov    DWORD PTR [rdi+0xe4e0],esi
   1400490cb:	mov    QWORD PTR [rdi+0xa078],rsi
   1400490d2:	mov    QWORD PTR [rdi+0xa088],rsi
   1400490d9:	mov    QWORD PTR [rdi+0xa080],rsi
   1400490e0:	lea    rcx,[rdi+0xe898]
   1400490e7:	call   0x14003587c
   1400490ec:	nop
   1400490ed:	lea    rcx,[rdi+0xe8e0]
   1400490f4:	mov    dl,0x1
   1400490f6:	call   0x140023d74
   1400490fb:	nop
   1400490fc:	mov    QWORD PTR [rdi+0xe8f8],rsi
   140049103:	mov    QWORD PTR [rdi+0xe900],rsi
   14004910a:	mov    QWORD PTR [rdi+0xe908],rsi
   140049111:	mov    QWORD PTR [rdi+0xe910],rsi
   140049118:	mov    QWORD PTR [rdi+0xe918],rsi
   14004911f:	mov    QWORD PTR [rdi+0xe920],rsi
   140049126:	mov    QWORD PTR [rdi+0xe928],rsi
   14004912d:	mov    QWORD PTR [rdi+0xe930],rsi
   140049134:	mov    QWORD PTR [rdi+0xe938],rsi
   14004913b:	mov    QWORD PTR [rdi+0xe940],rsi
   140049142:	mov    QWORD PTR [rdi+0xe948],rsi
   140049149:	mov    QWORD PTR [rdi+0xe950],rsi
   140049150:	mov    QWORD PTR [rdi],rbx
   140049153:	mov    QWORD PTR [rdi+0x4b90],rsi
   14004915a:	mov    BYTE PTR [rdi+0x4d98],sil
   140049161:	mov    WORD PTR [rdi+0x4da8],si
   140049168:	mov    BYTE PTR [rdi+0x4daa],sil
   14004916f:	mov    DWORD PTR [rdi+0x30],0x1
   140049176:	call   0x140046ea4
   14004917b:	mov    QWORD PTR [rdi+0x20],rax
   14004917f:	mov    QWORD PTR [rdi+0x38],rsi
   140049183:	mov    QWORD PTR [rdi+0x28],rsi
   140049187:	mov    BYTE PTR [rdi+0x4db9],sil
   14004918e:	mov    QWORD PTR [rdi+0xe960],rsi
   140049195:	mov    QWORD PTR [rdi+0xe968],rsi
   14004919c:	xor    edx,edx
   14004919e:	mov    rcx,rdi
   1400491a1:	call   0x14004e9c8
   1400491a6:	xor    edx,edx
   1400491a8:	mov    rcx,rdi
   1400491ab:	call   0x14004e8ac
   1400491b0:	mov    rcx,rdi
   1400491b3:	call   0x14004bb84
   1400491b8:	nop
   1400491b9:	mov    rax,rdi
   1400491bc:	mov    rbx,QWORD PTR [rsp+0x48]
   1400491c1:	mov    rsi,QWORD PTR [rsp+0x50]
   1400491c6:	add    rsp,0x30
   1400491ca:	pop    rdi
   1400491cb:	ret    
   1400491cc:	rex push rbx
   1400491ce:	sub    rsp,0x20
   1400491d2:	mov    rbx,rcx
   1400491d5:	xor    edx,edx
   1400491d7:	add    rcx,0x8
   1400491db:	call   0x140023d74
   1400491e0:	and    QWORD PTR [rbx+0x4ae0],0x0
   1400491e8:	mov    rax,rbx
   1400491eb:	add    rsp,0x20
   1400491ef:	pop    rbx
   1400491f0:	ret    
   1400491f1:	int3   
   1400491f2:	int3   
   1400491f3:	int3   
   1400491f4:	jmp    0x14004e0ac
   1400491f9:	int3   
   1400491fa:	int3   
   1400491fb:	int3   
   1400491fc:	rex push rdi
   1400491fe:	sub    rsp,0x30
   140049202:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14004920b:	mov    QWORD PTR [rsp+0x40],rbx
   140049210:	mov    rdi,rcx
   140049213:	xor    edx,edx
   140049215:	call   0x14004ba80
   14004921a:	nop
   14004921b:	mov    rcx,QWORD PTR [rdi+0x4b90]
   140049222:	test   rcx,rcx
   140049225:	je     0x14004922d
   140049227:	call   0x14005a938
   14004922c:	nop
   14004922d:	mov    rcx,QWORD PTR [rdi+0x20]
   140049231:	call   0x140047010
   140049236:	nop
   140049237:	mov    rcx,QWORD PTR [rdi+0x38]
   14004923b:	call   0x140055de8
   140049240:	nop
   140049241:	mov    rcx,QWORD PTR [rdi+0x28]
   140049245:	test   rcx,rcx
   140049248:	je     0x140049277
   14004924a:	lea    rbx,[rcx-0x8]
   14004924e:	lea    r9,[rip+0xdf]        # 0x140049334
   140049255:	mov    r8,QWORD PTR [rbx]
   140049258:	mov    edx,0x4af8
   14004925d:	call   0x140055cdc
   140049262:	nop
   140049263:	imul   rdx,QWORD PTR [rbx],0x4af8
   14004926a:	add    rdx,0x8
   14004926e:	mov    rcx,rbx
   140049271:	call   0x140055df8
   140049276:	nop
   140049277:	mov    rcx,QWORD PTR [rdi+0xe938]
   14004927e:	test   rcx,rcx
   140049281:	je     0x140049289
   140049283:	call   0x14005a938
   140049288:	nop
   140049289:	mov    rcx,QWORD PTR [rdi+0xe918]
   140049290:	test   rcx,rcx
   140049293:	je     0x14004929b
   140049295:	call   0x14005a938
   14004929a:	nop
   14004929b:	mov    rcx,QWORD PTR [rdi+0xe8f8]
   1400492a2:	test   rcx,rcx
   1400492a5:	je     0x1400492ad
   1400492a7:	call   0x14005a938
   1400492ac:	nop
   1400492ad:	lea    rcx,[rdi+0xe8e0]
   1400492b4:	call   0x140023db4
   1400492b9:	nop
   1400492ba:	lea    rcx,[rdi+0xe898]
   1400492c1:	call   0x14003589c
   1400492c6:	nop
   1400492c7:	cmp    DWORD PTR [rdi+0xe4e0],0x0
   1400492ce:	je     0x1400492e4
   1400492d0:	and    DWORD PTR [rdi+0xe4e0],0x0
   1400492d7:	mov    rcx,QWORD PTR [rdi+0xe590]
   1400492de:	call   0x14005a938
   1400492e3:	nop
   1400492e4:	lea    rcx,[rdi+0x4b98]
   1400492eb:	call   0x14004e0ac
   1400492f0:	nop
   1400492f1:	mov    rcx,QWORD PTR [rdi+0x80]
   1400492f8:	test   rcx,rcx
   1400492fb:	je     0x140049303
   1400492fd:	call   0x14005a938
   140049302:	nop
   140049303:	mov    rcx,QWORD PTR [rdi+0x60]
   140049307:	test   rcx,rcx
   14004930a:	je     0x140049312
   14004930c:	call   0x14005a938
   140049311:	nop
   140049312:	mov    rcx,QWORD PTR [rdi+0x40]
   140049316:	test   rcx,rcx
   140049319:	je     0x140049321
   14004931b:	call   0x14005a938
   140049320:	nop
   140049321:	lea    rcx,[rdi+0x8]
   140049325:	mov    rbx,QWORD PTR [rsp+0x40]
   14004932a:	add    rsp,0x30
   14004932e:	pop    rdi
   14004932f:	jmp    0x140023db4
   140049334:	rex push rbx
   140049336:	sub    rsp,0x20
   14004933a:	mov    rbx,rcx
   14004933d:	mov    rcx,QWORD PTR [rcx+0x4ae0]
   140049344:	test   rcx,rcx
   140049347:	je     0x14004934e
   140049349:	call   0x14005a938
   14004934e:	lea    rcx,[rbx+0x8]
   140049352:	add    rsp,0x20
   140049356:	pop    rbx
   140049357:	jmp    0x140023db4
   14004935c:	mov    r9,rdx
   14004935f:	mov    r8,rcx
   140049362:	cmp    rdx,QWORD PTR [rcx+0x100]
   140049369:	jae    0x140049372
   14004936b:	mov    rax,QWORD PTR [rcx]
   14004936e:	add    rax,rdx
   140049371:	ret    
   140049372:	mov    edx,0x1
   140049377:	lea    rax,[rcx+0x108]
   14004937e:	cmp    r9,QWORD PTR [rax]
   140049381:	jb     0x140049392
   140049383:	inc    edx
   140049385:	add    rax,0x8
   140049389:	cmp    edx,0x20
   14004938c:	jb     0x14004937e
   14004938e:	mov    rax,QWORD PTR [rcx]
   140049391:	ret    
   140049392:	mov    eax,edx
   140049394:	lea    ecx,[rdx-0x1]
   140049397:	mov    rax,QWORD PTR [r8+rax*8]
   14004939b:	sub    rax,QWORD PTR [r8+rcx*8+0x100]
   1400493a3:	add    rax,r9
   1400493a6:	ret    
   1400493a7:	int3   
   1400493a8:	mov    QWORD PTR [rsp+0x8],rbx
   1400493ad:	mov    QWORD PTR [rsp+0x10],rsi
   1400493b2:	push   rdi
   1400493b3:	sub    rsp,0x20
   1400493b7:	add    QWORD PTR [rcx+0x8],rdx
   1400493bb:	mov    rbx,rcx
   1400493be:	mov    rax,QWORD PTR [rcx+0x8]
   1400493c2:	cmp    rax,QWORD PTR [rcx+0x10]
   1400493c6:	jbe    0x14004943a
   1400493c8:	mov    r8,QWORD PTR [rcx+0x18]
   1400493cc:	test   r8,r8
   1400493cf:	je     0x1400493f5
   1400493d1:	cmp    rax,r8
   1400493d4:	jbe    0x1400493f5
   1400493d6:	lea    rdx,[rip+0x27c63]        # 0x140071040
   1400493dd:	lea    rcx,[rip+0x4b47c]        # 0x140094860
   1400493e4:	call   0x14001bc8c
   1400493e9:	lea    rcx,[rip+0x4b470]        # 0x140094860
   1400493f0:	call   0x14001bd24
   1400493f5:	mov    rdx,QWORD PTR [rbx+0x10]
   1400493f9:	mov    rcx,QWORD PTR [rbx]
   1400493fc:	mov    rax,rdx
   1400493ff:	shr    rax,0x2
   140049403:	lea    rdi,[rdx+0x20]
   140049407:	add    rdi,rax
   14004940a:	cmp    QWORD PTR [rbx+0x8],rdi
   14004940e:	cmova  rdi,QWORD PTR [rbx+0x8]
   140049413:	mov    rdx,rdi
   140049416:	shl    rdx,0x3
   14004941a:	call   0x14005a940
   14004941f:	mov    rsi,rax
   140049422:	test   rax,rax
   140049425:	jne    0x140049433
   140049427:	lea    rcx,[rip+0x4b432]        # 0x140094860
   14004942e:	call   0x14001bd24
   140049433:	mov    QWORD PTR [rbx],rsi
   140049436:	mov    QWORD PTR [rbx+0x10],rdi
   14004943a:	mov    rbx,QWORD PTR [rsp+0x30]
   14004943f:	mov    rsi,QWORD PTR [rsp+0x38]
   140049444:	add    rsp,0x20
   140049448:	pop    rdi
   140049449:	ret    
   14004944a:	int3   
   14004944b:	int3   
   14004944c:	mov    QWORD PTR [rsp+0x8],rbx
   140049451:	mov    QWORD PTR [rsp+0x10],rsi
   140049456:	push   rdi
   140049457:	sub    rsp,0x20
   14004945b:	add    QWORD PTR [rcx+0x8],rdx
   14004945f:	mov    rbx,rcx
   140049462:	mov    rax,QWORD PTR [rcx+0x8]
   140049466:	cmp    rax,QWORD PTR [rcx+0x10]
   14004946a:	jbe    0x1400494de
   14004946c:	mov    r8,QWORD PTR [rcx+0x18]
   140049470:	test   r8,r8
   140049473:	je     0x140049499
   140049475:	cmp    rax,r8
   140049478:	jbe    0x140049499
   14004947a:	lea    rdx,[rip+0x27c1f]        # 0x1400710a0
   140049481:	lea    rcx,[rip+0x4b3d8]        # 0x140094860
   140049488:	call   0x14001bc8c
   14004948d:	lea    rcx,[rip+0x4b3cc]        # 0x140094860
   140049494:	call   0x14001bd24
   140049499:	mov    rcx,QWORD PTR [rbx+0x10]
   14004949d:	mov    rax,rcx
   1400494a0:	shr    rax,0x2
   1400494a4:	lea    rdi,[rcx+0x20]
   1400494a8:	mov    rcx,QWORD PTR [rbx]
   1400494ab:	add    rdi,rax
   1400494ae:	cmp    QWORD PTR [rbx+0x8],rdi
   1400494b2:	cmova  rdi,QWORD PTR [rbx+0x8]
   1400494b7:	mov    rdx,rdi
   1400494ba:	shl    rdx,0x4
   1400494be:	call   0x14005a940
   1400494c3:	mov    rsi,rax
   1400494c6:	test   rax,rax
   1400494c9:	jne    0x1400494d7
   1400494cb:	lea    rcx,[rip+0x4b38e]        # 0x140094860
   1400494d2:	call   0x14001bd24
   1400494d7:	mov    QWORD PTR [rbx],rsi
   1400494da:	mov    QWORD PTR [rbx+0x10],rdi
   1400494de:	mov    rbx,QWORD PTR [rsp+0x30]
   1400494e3:	mov    rsi,QWORD PTR [rsp+0x38]
   1400494e8:	add    rsp,0x20
   1400494ec:	pop    rdi
   1400494ed:	ret    
   1400494ee:	int3   
   1400494ef:	int3   
   1400494f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400494f5:	mov    QWORD PTR [rsp+0x10],rsi
   1400494fa:	push   rdi
   1400494fb:	sub    rsp,0x30
   1400494ff:	xor    edi,edi
   140049501:	mov    rsi,rdx
   140049504:	cmp    QWORD PTR [rcx+0x88],0x2000
   14004950f:	mov    rbx,rcx
   140049512:	jb     0x14004952d
   140049514:	call   0x14004f1dc
   140049519:	cmp    QWORD PTR [rbx+0x88],0x2000
   140049524:	jb     0x14004952d
   140049526:	mov    QWORD PTR [rbx+0x88],rdi
   14004952d:	mov    rcx,QWORD PTR [rbx+0xc8]
   140049534:	mov    rax,QWORD PTR [rbx+0xc0]
   14004953b:	cmp    rcx,rax
   14004953e:	je     0x140049557
   140049540:	sub    rcx,rax
   140049543:	mov    eax,DWORD PTR [rsi+0x4]
   140049546:	and    rcx,QWORD PTR [rbx+0xe968]
   14004954d:	cmp    rcx,rax
   140049550:	ja     0x140049557
   140049552:	mov    edi,0x1
   140049557:	mov    BYTE PTR [rsi+0xd],dil
   14004955b:	lea    rdx,[rsp+0x20]
   140049560:	mov    ecx,DWORD PTR [rbx+0xc0]
   140049566:	add    ecx,DWORD PTR [rsi+0x4]
   140049569:	and    ecx,DWORD PTR [rbx+0xe968]
   14004956f:	mov    DWORD PTR [rsi+0x4],ecx
   140049572:	lea    rcx,[rbx+0x80]
   140049579:	movups xmm0,XMMWORD PTR [rsi]
   14004957c:	movdqu XMMWORD PTR [rsp+0x20],xmm0
   140049582:	call   0x14004c948
   140049587:	mov    rbx,QWORD PTR [rsp+0x40]
   14004958c:	mov    al,0x1
   14004958e:	mov    rsi,QWORD PTR [rsp+0x48]
   140049593:	add    rsp,0x30
   140049597:	pop    rdi
   140049598:	ret    
   140049599:	int3   
   14004959a:	int3   
   14004959b:	int3   
   14004959c:	mov    rax,rsp
   14004959f:	mov    DWORD PTR [rax+0x10],edx
   1400495a2:	push   rbp
   1400495a3:	push   rsi
   1400495a4:	push   rdi
   1400495a5:	push   r12
   1400495a7:	push   r13
   1400495a9:	push   r14
   1400495ab:	push   r15
   1400495ad:	sub    rsp,0x50
   1400495b1:	mov    QWORD PTR [rax-0x60],0xfffffffffffffffe
   1400495b9:	mov    QWORD PTR [rax+0x18],rbx
   1400495bd:	mov    rax,r8
   1400495c0:	mov    ebp,edx
   1400495c2:	mov    rbx,rcx
   1400495c5:	lea    r15,[rcx+0xe8e0]
   1400495cc:	xor    edi,edi
   1400495ce:	mov    QWORD PTR [r15],rdi
   1400495d1:	mov    ecx,0x8000
   1400495d6:	cmp    r9d,ecx
   1400495d9:	cmovg  r9d,ecx
   1400495dd:	movsxd r8,r9d
   1400495e0:	mov    rdx,rax
   1400495e3:	mov    rcx,QWORD PTR [rbx+0xe8f0]
   1400495ea:	call   0x140059180
   1400495ef:	lea    rax,[rbx+0xe898]
   1400495f6:	mov    QWORD PTR [rsp+0x20],rax
   1400495fb:	mov    rcx,rax
   1400495fe:	call   0x1400361bc
   140049603:	test   bpl,bpl
   140049606:	jns    0x140049628
   140049608:	mov    rcx,r15
   14004960b:	call   0x14003639c
   140049610:	mov    r14d,eax
   140049613:	test   eax,eax
   140049615:	jne    0x140049623
   140049617:	xor    edx,edx
   140049619:	mov    rcx,rbx
   14004961c:	call   0x14004ba80
   140049621:	jmp    0x14004962f
   140049623:	dec    r14d
   140049626:	jmp    0x14004962f
   140049628:	mov    r14d,DWORD PTR [rbx+0xe958]
   14004962f:	mov    rax,QWORD PTR [rbx+0xe900]
   140049636:	mov    r12d,r14d
   140049639:	cmp    r12,rax
   14004963c:	ja     0x140049bed
   140049642:	cmp    r12,QWORD PTR [rbx+0xe940]
   140049649:	ja     0x140049bed
   14004964f:	mov    DWORD PTR [rbx+0xe958],r14d
   140049656:	cmp    r12,rax
   140049659:	sete   bpl
   14004965d:	mov    BYTE PTR [rsp+0xa8],bpl
   140049665:	mov    r13d,0xb8
   14004966b:	mov    ecx,r13d
   14004966e:	call   0x140055dac
   140049673:	mov    rsi,rax
   140049676:	mov    QWORD PTR [rsp+0x90],rax
   14004967e:	test   rax,rax
   140049681:	je     0x1400496c5
   140049683:	mov    QWORD PTR [rax+0x18],rdi
   140049687:	mov    QWORD PTR [rax+0x20],rdi
   14004968b:	mov    QWORD PTR [rax+0x28],rdi
   14004968f:	mov    QWORD PTR [rax+0x30],rdi
   140049693:	mov    QWORD PTR [rax+0x48],rdi
   140049697:	mov    QWORD PTR [rax+0x50],rdi
   14004969b:	mov    QWORD PTR [rax+0x58],rdi
   14004969f:	mov    QWORD PTR [rax+0x60],rdi
   1400496a3:	mov    QWORD PTR [rax+0x68],rdi
   1400496a7:	mov    QWORD PTR [rax+0x70],rdi
   1400496ab:	mov    QWORD PTR [rax+0x78],rdi
   1400496af:	mov    QWORD PTR [rax+0x80],rdi
   1400496b6:	mov    QWORD PTR [rax+0x38],rdi
   1400496ba:	mov    DWORD PTR [rax+0xb0],edi
   1400496c0:	mov    DWORD PTR [rax+0x40],edi
   1400496c3:	jmp    0x1400496c8
   1400496c5:	mov    rsi,rdi
   1400496c8:	test   bpl,bpl
   1400496cb:	je     0x1400497c4
   1400496d1:	cmp    r14d,0x2000
   1400496d8:	jbe    0x14004971d
   1400496da:	test   rsi,rsi
   1400496dd:	je     0x140049bed
   1400496e3:	mov    rcx,QWORD PTR [rsi+0x68]
   1400496e7:	test   rcx,rcx
   1400496ea:	je     0x1400496f1
   1400496ec:	call   0x14005a938
   1400496f1:	mov    rcx,QWORD PTR [rsi+0x48]
   1400496f5:	test   rcx,rcx
   1400496f8:	je     0x1400496ff
   1400496fa:	call   0x14005a938
   1400496ff:	mov    rcx,QWORD PTR [rsi+0x18]
   140049703:	test   rcx,rcx
   140049706:	je     0x14004970d
   140049708:	call   0x14005a938
   14004970d:	mov    rdx,r13
   140049710:	mov    rcx,rsi
   140049713:	call   0x140055de8
   140049718:	jmp    0x140049bed
   14004971d:	lea    r13,[rbx+0xe8f8]
   140049724:	mov    r14d,0x1
   14004972a:	mov    edx,r14d
   14004972d:	mov    rcx,r13
   140049730:	call   0x1400493a8
   140049735:	mov    ecx,0xb8
   14004973a:	call   0x140055dac
   14004973f:	mov    rbp,rax
   140049742:	mov    QWORD PTR [rsp+0x90],rax
   14004974a:	test   rax,rax
   14004974d:	je     0x140049791
   14004974f:	mov    QWORD PTR [rax+0x18],rdi
   140049753:	mov    QWORD PTR [rax+0x20],rdi
   140049757:	mov    QWORD PTR [rax+0x28],rdi
   14004975b:	mov    QWORD PTR [rax+0x30],rdi
   14004975f:	mov    QWORD PTR [rax+0x48],rdi
   140049763:	mov    QWORD PTR [rax+0x50],rdi
   140049767:	mov    QWORD PTR [rax+0x58],rdi
   14004976b:	mov    QWORD PTR [rax+0x60],rdi
   14004976f:	mov    QWORD PTR [rax+0x68],rdi
   140049773:	mov    QWORD PTR [rax+0x70],rdi
   140049777:	mov    QWORD PTR [rax+0x78],rdi
   14004977b:	mov    QWORD PTR [rax+0x80],rdi
   140049782:	mov    QWORD PTR [rax+0x38],rdi
   140049786:	mov    DWORD PTR [rax+0xb0],edi
   14004978c:	mov    DWORD PTR [rax+0x40],edi
   14004978f:	jmp    0x140049794
   140049791:	mov    rbp,rdi
   140049794:	mov    rcx,QWORD PTR [rbx+0xe900]
   14004979b:	mov    rax,QWORD PTR [r13+0x0]
   14004979f:	mov    QWORD PTR [rax+rcx*8-0x8],rbp
   1400497a4:	mov    rax,QWORD PTR [rbx+0xe900]
   1400497ab:	lea    ecx,[rax-0x1]
   1400497ae:	mov    DWORD PTR [rsi+0x10],ecx
   1400497b1:	lea    rcx,[rbx+0xe938]
   1400497b8:	xor    edx,edx
   1400497ba:	call   0x14003ce4c
   1400497bf:	mov    DWORD PTR [rbp+0x8],edi
   1400497c2:	jmp    0x1400497dd
   1400497c4:	mov    rax,QWORD PTR [rbx+0xe8f8]
   1400497cb:	mov    rbp,QWORD PTR [rax+r12*8]
   1400497cf:	mov    DWORD PTR [rsi+0x10],r14d
   1400497d3:	mov    r14d,0x1
   1400497d9:	add    DWORD PTR [rbp+0x8],r14d
   1400497dd:	mov    r8d,edi
   1400497e0:	mov    r10d,edi
   1400497e3:	cmp    QWORD PTR [rbx+0xe920],rdi
   1400497ea:	jbe    0x140049832
   1400497ec:	mov    r9,rdi
   1400497ef:	lea    r13,[rbx+0xe918]
   1400497f6:	mov    rdx,QWORD PTR [r13+0x0]
   1400497fa:	mov    ecx,r10d
   1400497fd:	sub    ecx,r8d
   140049800:	mov    rax,QWORD PTR [rdx+r9*8]
   140049804:	mov    QWORD PTR [rdx+rcx*8],rax
   140049808:	mov    rax,QWORD PTR [r13+0x0]
   14004980c:	cmp    QWORD PTR [rax+r9*8],rdi
   140049810:	jne    0x140049815
   140049812:	add    r8d,r14d
   140049815:	test   r8d,r8d
   140049818:	jle    0x14004981e
   14004981a:	mov    QWORD PTR [rax+r9*8],rdi
   14004981e:	add    r10d,r14d
   140049821:	mov    r9d,r10d
   140049824:	cmp    r9,QWORD PTR [rbx+0xe920]
   14004982b:	jb     0x1400497f6
   14004982d:	test   r8d,r8d
   140049830:	jne    0x140049888
   140049832:	cmp    QWORD PTR [rbx+0xe920],0x2000
   14004983d:	jbe    0x140049873
   14004983f:	mov    rcx,QWORD PTR [rsi+0x68]
   140049843:	test   rcx,rcx
   140049846:	je     0x14004984d
   140049848:	call   0x14005a938
   14004984d:	mov    rcx,QWORD PTR [rsi+0x48]
   140049851:	test   rcx,rcx
   140049854:	je     0x14004985b
   140049856:	call   0x14005a938
   14004985b:	mov    rcx,QWORD PTR [rsi+0x18]
   14004985f:	test   rcx,rcx
   140049862:	je     0x140049869
   140049864:	call   0x14005a938
   140049869:	mov    edx,0xb8
   14004986e:	jmp    0x140049710
   140049873:	lea    r13,[rbx+0xe918]
   14004987a:	mov    rdx,r14
   14004987d:	mov    rcx,r13
   140049880:	call   0x1400493a8
   140049885:	mov    r8d,r14d
   140049888:	mov    rax,QWORD PTR [rbx+0xe920]
   14004988f:	sub    eax,r8d
   140049892:	movsxd rcx,eax
   140049895:	mov    rax,QWORD PTR [r13+0x0]
   140049899:	mov    QWORD PTR [rax+rcx*8],rsi
   14004989d:	mov    eax,DWORD PTR [rbp+0x8]
   1400498a0:	mov    DWORD PTR [rsi+0x8],eax
   1400498a3:	mov    rcx,r15
   1400498a6:	call   0x14003639c
   1400498ab:	mov    r13d,eax
   1400498ae:	mov    edx,DWORD PTR [rsp+0x98]
   1400498b5:	test   dl,0x40
   1400498b8:	je     0x1400498c1
   1400498ba:	add    r13d,0x102
   1400498c1:	mov    ecx,DWORD PTR [rbx+0xc0]
   1400498c7:	add    ecx,r13d
   1400498ca:	and    ecx,DWORD PTR [rbx+0xe968]
   1400498d0:	mov    DWORD PTR [rsi],ecx
   1400498d2:	test   dl,0x20
   1400498d5:	je     0x1400498f6
   1400498d7:	mov    rcx,r15
   1400498da:	call   0x14003639c
   1400498df:	mov    DWORD PTR [rsi+0x4],eax
   1400498e2:	mov    rcx,QWORD PTR [rbx+0xe938]
   1400498e9:	mov    DWORD PTR [rcx+r12*4],eax
   1400498ed:	mov    edx,DWORD PTR [rsp+0x98]
   1400498f4:	jmp    0x140049911
   1400498f6:	cmp    r12,QWORD PTR [rbx+0xe940]
   1400498fd:	jae    0x14004990c
   1400498ff:	mov    rax,QWORD PTR [rbx+0xe938]
   140049906:	mov    ecx,DWORD PTR [rax+r12*4]
   14004990a:	jmp    0x14004990e
   14004990c:	mov    ecx,edi
   14004990e:	mov    DWORD PTR [rsi+0x4],ecx
   140049911:	mov    rcx,QWORD PTR [rbx+0xc8]
   140049918:	mov    rax,QWORD PTR [rbx+0xc0]
   14004991f:	cmp    rcx,rax
   140049922:	je     0x140049939
   140049924:	sub    rcx,rax
   140049927:	and    rcx,QWORD PTR [rbx+0xe968]
   14004992e:	mov    eax,r13d
   140049931:	cmp    rcx,rax
   140049934:	mov    eax,r14d
   140049937:	jbe    0x14004993b
   140049939:	mov    eax,edi
   14004993b:	mov    BYTE PTR [rsi+0xc],al
   14004993e:	lea    r12,[rsi+0x88]
   140049945:	xor    eax,eax
   140049947:	mov    QWORD PTR [r12],rax
   14004994b:	mov    QWORD PTR [r12+0x8],rax
   140049950:	mov    QWORD PTR [r12+0x10],rax
   140049955:	mov    DWORD PTR [r12+0x18],eax
   14004995a:	mov    DWORD PTR [rsi+0x94],0x3c000
   140049964:	mov    eax,DWORD PTR [rsi+0x4]
   140049967:	mov    DWORD PTR [rsi+0x98],eax
   14004996d:	mov    eax,DWORD PTR [rsi+0x8]
   140049970:	mov    DWORD PTR [rsi+0x9c],eax
   140049976:	test   dl,0x10
   140049979:	je     0x1400499ca
   14004997b:	mov    rcx,r15
   14004997e:	call   0x140023e1c
   140049983:	shr    eax,0x9
   140049986:	mov    DWORD PTR [rsp+0x90],eax
   14004998d:	mov    edx,0x7
   140049992:	mov    rcx,r15
   140049995:	call   0x140023e04
   14004999a:	mov    ebx,edi
   14004999c:	mov    r13,r12
   14004999f:	mov    eax,DWORD PTR [rsp+0x90]
   1400499a6:	bt     eax,ebx
   1400499a9:	jae    0x1400499be
   1400499ab:	mov    rcx,r15
   1400499ae:	call   0x14003639c
   1400499b3:	mov    DWORD PTR [r13+0x0],eax
   1400499b7:	mov    eax,DWORD PTR [rsp+0x90]
   1400499be:	add    ebx,r14d
   1400499c1:	add    r13,0x4
   1400499c5:	cmp    ebx,0x7
   1400499c8:	jl     0x1400499a6
   1400499ca:	cmp    BYTE PTR [rsp+0xa8],dil
   1400499d2:	je     0x140049aa5
   1400499d8:	mov    rcx,r15
   1400499db:	call   0x14003639c
   1400499e0:	mov    r13d,eax
   1400499e3:	lea    ecx,[r13-0x1]
   1400499e7:	cmp    ecx,0xfffe
   1400499ed:	ja     0x140049bed
   1400499f3:	mov    QWORD PTR [rsp+0x30],rdi
   1400499f8:	mov    QWORD PTR [rsp+0x38],rdi
   1400499fd:	mov    QWORD PTR [rsp+0x40],rdi
   140049a02:	mov    QWORD PTR [rsp+0x48],rdi
   140049a07:	mov    edx,r13d
   140049a0a:	lea    rcx,[rsp+0x30]
   140049a0f:	call   0x140001858
   140049a14:	nop
   140049a15:	mov    DWORD PTR [rsp+0xa8],edi
   140049a1c:	mov    rbx,QWORD PTR [rsp+0x30]
   140049a21:	test   r13d,r13d
   140049a24:	je     0x140049a83
   140049a26:	mov    eax,DWORD PTR [r15]
   140049a29:	add    eax,0x3
   140049a2c:	cmp    eax,0x8000
   140049a31:	jae    0x140049a6d
   140049a33:	mov    rcx,r15
   140049a36:	call   0x140023e1c
   140049a3b:	shr    eax,0x8
   140049a3e:	mov    ecx,DWORD PTR [rsp+0xa8]
   140049a45:	mov    BYTE PTR [rcx+rbx*1],al
   140049a48:	mov    edx,0x8
   140049a4d:	mov    rcx,r15
   140049a50:	call   0x140023e04
   140049a55:	mov    ecx,DWORD PTR [rsp+0xa8]
   140049a5c:	add    ecx,r14d
   140049a5f:	mov    DWORD PTR [rsp+0xa8],ecx
   140049a66:	cmp    ecx,r13d
   140049a69:	jb     0x140049a26
   140049a6b:	jmp    0x140049a83
   140049a6d:	test   rbx,rbx
   140049a70:	je     0x140049bed
   140049a76:	mov    rcx,rbx
   140049a79:	call   0x14005a938
   140049a7e:	jmp    0x140049bed
   140049a83:	lea    r9,[rbp+0x18]
   140049a87:	mov    r8d,r13d
   140049a8a:	mov    rdx,rbx
   140049a8d:	mov    rcx,QWORD PTR [rsp+0x20]
   140049a92:	call   0x14003622c
   140049a97:	nop
   140049a98:	test   rbx,rbx
   140049a9b:	je     0x140049aa5
   140049a9d:	mov    rcx,rbx
   140049aa0:	call   0x14005a938
   140049aa5:	mov    rax,QWORD PTR [rbp+0x18]
   140049aa9:	mov    QWORD PTR [rsi+0x38],rax
   140049aad:	mov    eax,DWORD PTR [rbp+0x40]
   140049ab0:	mov    DWORD PTR [rsi+0x40],eax
   140049ab3:	mov    r13,QWORD PTR [rbp+0x70]
   140049ab7:	lea    rax,[r13-0x1]
   140049abb:	cmp    rax,0x1ffe
   140049ac1:	ja     0x140049adf
   140049ac3:	mov    rdx,r13
   140049ac6:	lea    rcx,[rsi+0x68]
   140049aca:	call   0x140001858
   140049acf:	mov    r8,r13
   140049ad2:	mov    rdx,QWORD PTR [rbp+0x68]
   140049ad6:	mov    rcx,QWORD PTR [rsi+0x68]
   140049ada:	call   0x140059180
   140049adf:	cmp    QWORD PTR [rsi+0x50],0x40
   140049ae4:	jae    0x140049afd
   140049ae6:	lea    rcx,[rsi+0x48]
   140049aea:	call   0x140009a60
   140049aef:	mov    edx,0x40
   140049af4:	lea    rcx,[rsi+0x48]
   140049af8:	call   0x140001858
   140049afd:	mov    rbp,QWORD PTR [rsi+0x48]
   140049b01:	mov    r13,rbp
   140049b04:	mov    ebx,0x7
   140049b09:	mov    rdi,QWORD PTR [rsp+0x20]
   140049b0e:	mov    r8d,DWORD PTR [r12]
   140049b12:	mov    rdx,r13
   140049b15:	mov    rcx,rdi
   140049b18:	call   0x14003645c
   140049b1d:	add    r13,0x4
   140049b21:	lea    r12,[r12+0x4]
   140049b26:	sub    rbx,r14
   140049b29:	jne    0x140049b0e
   140049b2b:	lea    rdx,[rbp+0x1c]
   140049b2f:	mov    r8d,DWORD PTR [rsi+0x4]
   140049b33:	mov    rcx,rdi
   140049b36:	call   0x14003645c
   140049b3b:	lea    rdx,[rbp+0x20]
   140049b3f:	xor    r8d,r8d
   140049b42:	mov    rcx,rdi
   140049b45:	call   0x14003645c
   140049b4a:	lea    rdx,[rbp+0x2c]
   140049b4e:	mov    r8d,DWORD PTR [rsi+0x8]
   140049b52:	mov    rcx,rdi
   140049b55:	call   0x14003645c
   140049b5a:	xor    eax,eax
   140049b5c:	mov    QWORD PTR [rbp+0x30],rax
   140049b60:	mov    QWORD PTR [rbp+0x38],rax
   140049b64:	mov    ebp,DWORD PTR [rsp+0x98]
   140049b6b:	test   bpl,0x8
   140049b6f:	mov    edi,eax
   140049b71:	je     0x140049be8
   140049b73:	mov    eax,DWORD PTR [r15]
   140049b76:	add    eax,0x3
   140049b79:	mov    r12d,0x8000
   140049b7f:	cmp    eax,r12d
   140049b82:	jae    0x140049bed
   140049b84:	mov    rcx,r15
   140049b87:	call   0x14003639c
   140049b8c:	mov    ebp,eax
   140049b8e:	cmp    eax,0x1fc0
   140049b93:	ja     0x140049bed
   140049b95:	add    eax,0x40
   140049b98:	mov    edx,eax
   140049b9a:	cmp    QWORD PTR [rsi+0x50],rdx
   140049b9e:	jae    0x140049bad
   140049ba0:	sub    rdx,QWORD PTR [rsi+0x50]
   140049ba4:	lea    rcx,[rsi+0x48]
   140049ba8:	call   0x140001858
   140049bad:	mov    rbx,QWORD PTR [rsi+0x48]
   140049bb1:	add    rbx,0x40
   140049bb5:	test   ebp,ebp
   140049bb7:	je     0x140049be8
   140049bb9:	mov    eax,DWORD PTR [r15]
   140049bbc:	add    eax,0x3
   140049bbf:	cmp    eax,r12d
   140049bc2:	jae    0x140049bed
   140049bc4:	mov    rcx,r15
   140049bc7:	call   0x140023e1c
   140049bcc:	shr    eax,0x8
   140049bcf:	mov    BYTE PTR [rbx],al
   140049bd1:	mov    edx,0x8
   140049bd6:	mov    rcx,r15
   140049bd9:	call   0x140023e04
   140049bde:	add    edi,r14d
   140049be1:	add    rbx,r14
   140049be4:	cmp    edi,ebp
   140049be6:	jb     0x140049bb9
   140049be8:	mov    al,r14b
   140049beb:	jmp    0x140049bef
   140049bed:	xor    al,al
   140049bef:	mov    rbx,QWORD PTR [rsp+0xa0]
   140049bf7:	add    rsp,0x50
   140049bfb:	pop    r15
   140049bfd:	pop    r14
   140049bff:	pop    r13
   140049c01:	pop    r12
   140049c03:	pop    rdi
   140049c04:	pop    rsi
   140049c05:	pop    rbp
   140049c06:	ret    
   140049c07:	int3   
   140049c08:	sub    rsp,0x28
   140049c0c:	lea    eax,[rdx-0x1]
   140049c0f:	mov    r8,rcx
   140049c12:	movsxd rdx,eax
   140049c15:	movzx  r10d,BYTE PTR [rdx+rcx*1+0x2a]
   140049c1b:	mov    rax,QWORD PTR [rcx+r10*8+0xc8]
   140049c23:	test   rax,rax
   140049c26:	je     0x140049c38
   140049c28:	mov    rdx,QWORD PTR [rax]
   140049c2b:	mov    QWORD PTR [rcx+r10*8+0xc8],rdx
   140049c33:	add    rsp,0x28
   140049c37:	ret    
   140049c38:	mov    rax,QWORD PTR [rcx+0xb8]
   140049c3f:	movzx  ecx,BYTE PTR [r10+rcx*1+0x4]
   140049c45:	lea    edx,[rcx+rcx*4]
   140049c48:	shl    edx,0x2
   140049c4b:	add    rdx,rax
   140049c4e:	mov    QWORD PTR [r8+0xb8],rdx
   140049c55:	cmp    rdx,QWORD PTR [r8+0xc0]
   140049c5c:	jbe    0x140049c7f
   140049c5e:	movzx  eax,BYTE PTR [r10+r8*1+0x4]
   140049c64:	mov    rcx,r8
   140049c67:	lea    eax,[rax+rax*4]
   140049c6a:	shl    eax,0x2
   140049c6d:	sub    rdx,rax
   140049c70:	mov    QWORD PTR [r8+0xb8],rdx
   140049c77:	mov    edx,r10d
   140049c7a:	call   0x140049c84
   140049c7f:	add    rsp,0x28
   140049c83:	ret    
   140049c84:	mov    QWORD PTR [rsp+0x8],rbx
   140049c89:	mov    QWORD PTR [rsp+0x10],rsi
   140049c8e:	push   rdi
   140049c8f:	sub    rsp,0x20
   140049c93:	cmp    BYTE PTR [rcx+0xaa],0x0
   140049c9a:	mov    rbx,rcx
   140049c9d:	movsxd rdi,edx
   140049ca0:	jne    0x140049ccb
   140049ca2:	mov    BYTE PTR [rcx+0xaa],0xff
   140049ca9:	call   0x14004b28c
   140049cae:	mov    rax,QWORD PTR [rbx+rdi*8+0xc8]
   140049cb6:	test   rax,rax
   140049cb9:	je     0x140049ccb
   140049cbb:	mov    rcx,QWORD PTR [rax]
   140049cbe:	mov    QWORD PTR [rbx+rdi*8+0xc8],rcx
   140049cc6:	jmp    0x140049d66
   140049ccb:	lea    rax,[rbx+0xc8]
   140049cd2:	mov    r8d,edi
   140049cd5:	lea    rax,[rax+rdi*8]
   140049cd9:	mov    rcx,rdi
   140049cdc:	inc    r8d
   140049cdf:	lea    rax,[rax+0x8]
   140049ce3:	inc    rcx
   140049ce6:	cmp    rcx,0x26
   140049cea:	je     0x140049d15
   140049cec:	mov    rsi,QWORD PTR [rax]
   140049cef:	test   rsi,rsi
   140049cf2:	je     0x140049cdc
   140049cf4:	mov    rcx,QWORD PTR [rsi]
   140049cf7:	mov    r9d,edi
   140049cfa:	movsxd rdx,r8d
   140049cfd:	mov    QWORD PTR [rbx+rdx*8+0xc8],rcx
   140049d05:	mov    rdx,rsi
   140049d08:	mov    rcx,rbx
   140049d0b:	call   0x14004e694
   140049d10:	mov    rax,rsi
   140049d13:	jmp    0x140049d66
   140049d15:	dec    BYTE PTR [rbx+0xaa]
   140049d1b:	movzx  eax,BYTE PTR [rdi+rbx*1+0x4]
   140049d20:	mov    rdx,QWORD PTR [rbx+0x210]
   140049d27:	lea    ecx,[rax+rax*2]
   140049d2a:	lea    r8d,[rax+rax*4]
   140049d2e:	shl    ecx,0x2
   140049d31:	mov    rax,rdx
   140049d34:	movsxd r9,ecx
   140049d37:	sub    rax,QWORD PTR [rbx+0x1f8]
   140049d3e:	shl    r8d,0x2
   140049d42:	cmp    rax,r9
   140049d45:	jle    0x140049d64
   140049d47:	sub    rdx,r9
   140049d4a:	movsxd rax,r8d
   140049d4d:	sub    QWORD PTR [rbx+0x200],rax
   140049d54:	mov    rax,QWORD PTR [rbx+0x200]
   140049d5b:	mov    QWORD PTR [rbx+0x210],rdx
   140049d62:	jmp    0x140049d66
   140049d64:	xor    eax,eax
   140049d66:	mov    rbx,QWORD PTR [rsp+0x30]
   140049d6b:	mov    rsi,QWORD PTR [rsp+0x38]
   140049d70:	add    rsp,0x20
   140049d74:	pop    rdi
   140049d75:	ret    
   140049d76:	int3   
   140049d77:	int3   
   140049d78:	mov    QWORD PTR [rsp+0x8],rbx
   140049d7d:	mov    QWORD PTR [rsp+0x10],rbp
   140049d82:	mov    QWORD PTR [rsp+0x18],rsi
   140049d87:	push   rdi
   140049d88:	push   r14
   140049d8a:	push   r15
   140049d8c:	sub    rsp,0x20
   140049d90:	mov    ebp,r8d
   140049d93:	xor    ebx,ebx
   140049d95:	mov    r8b,BYTE PTR [r9]
   140049d98:	mov    rdi,rdx
   140049d9b:	mov    r10,rdx
   140049d9e:	mov    al,r8b
   140049da1:	test   r8b,r8b
   140049da4:	je     0x140049e91
   140049daa:	test   al,al
   140049dac:	je     0x140049e8d
   140049db2:	cmp    al,0x2
   140049db4:	jbe    0x140049e14
   140049db6:	cmp    al,0x3
   140049db8:	jne    0x140049e8d
   140049dbe:	mov    r8d,DWORD PTR [rcx+0x4db0]
   140049dc5:	add    ebp,0xfffffffd
   140049dc8:	test   ebp,ebp
   140049dca:	jle    0x140049e0c
   140049dcc:	mov    edx,ebx
   140049dce:	add    rdx,rdi
   140049dd1:	cmp    BYTE PTR [rdx+0x3],0xeb
   140049dd5:	jne    0x140049e05
   140049dd7:	movzx  eax,BYTE PTR [rdx+0x1]
   140049ddb:	movzx  ecx,BYTE PTR [rdx+0x2]
   140049ddf:	shl    ecx,0x8
   140049de2:	add    ecx,eax
   140049de4:	lea    eax,[rbx+r8*1]
   140049de8:	shr    eax,0x2
   140049deb:	shl    ecx,0x8
   140049dee:	sub    ecx,eax
   140049df0:	movzx  eax,BYTE PTR [rdx]
   140049df3:	add    ecx,eax
   140049df5:	mov    eax,ecx
   140049df7:	mov    BYTE PTR [rdx],cl
   140049df9:	shr    eax,0x8
   140049dfc:	shr    ecx,0x10
   140049dff:	mov    BYTE PTR [rdx+0x2],cl
   140049e02:	mov    BYTE PTR [rdx+0x1],al
   140049e05:	add    ebx,0x4
   140049e08:	cmp    ebx,ebp
   140049e0a:	jl     0x140049dcc
   140049e0c:	mov    rax,rdi
   140049e0f:	jmp    0x140049ef2
   140049e14:	mov    edx,DWORD PTR [rcx+0x4db0]
   140049e1a:	cmp    r8b,0x2
   140049e1e:	sete   r9b
   140049e22:	add    ebp,0xfffffffc
   140049e25:	add    r9b,0xe8
   140049e29:	test   ebp,ebp
   140049e2b:	jle    0x140049eef
   140049e31:	mov    r11d,0x80000000
   140049e37:	mov    al,BYTE PTR [rdi]
   140049e39:	inc    ebx
   140049e3b:	inc    rdi
   140049e3e:	inc    edx
   140049e40:	cmp    al,0xe8
   140049e42:	je     0x140049e49
   140049e44:	cmp    al,r9b
   140049e47:	jne    0x140049e87
   140049e49:	mov    ecx,DWORD PTR [rdi]
   140049e4b:	mov    r8d,edx
   140049e4e:	and    r8d,0xffffff
   140049e55:	test   r11d,ecx
   140049e58:	je     0x140049e6d
   140049e5a:	lea    eax,[rcx+r8*1]
   140049e5e:	test   r11d,eax
   140049e61:	jne    0x140049e7d
   140049e63:	lea    eax,[rcx+0x1000000]
   140049e69:	mov    DWORD PTR [rdi],eax
   140049e6b:	jmp    0x140049e7d
   140049e6d:	lea    eax,[rcx-0x1000000]
   140049e73:	test   r11d,eax
   140049e76:	je     0x140049e7d
   140049e78:	sub    ecx,r8d
   140049e7b:	mov    DWORD PTR [rdi],ecx
   140049e7d:	add    rdi,0x4
   140049e81:	add    ebx,0x4
   140049e84:	add    edx,0x4
   140049e87:	cmp    ebx,ebp
   140049e89:	jl     0x140049e37
   140049e8b:	jmp    0x140049eef
   140049e8d:	xor    eax,eax
   140049e8f:	jmp    0x140049ef2
   140049e91:	movzx  r14d,BYTE PTR [r9+0xc]
   140049e96:	lea    rsi,[rcx+0x60]
   140049e9a:	mov    r15d,ebx
   140049e9d:	mov    rax,rbp
   140049ea0:	cmp    rbp,QWORD PTR [rsi+0x10]
   140049ea4:	jbe    0x140049eb7
   140049ea6:	sub    rax,QWORD PTR [rsi+0x8]
   140049eaa:	mov    rcx,rsi
   140049ead:	mov    rdx,rax
   140049eb0:	call   0x140001858
   140049eb5:	jmp    0x140049ebb
   140049eb7:	mov    QWORD PTR [rsi+0x8],rax
   140049ebb:	mov    r10,QWORD PTR [rsi]
   140049ebe:	mov    edx,ebx
   140049ec0:	test   r14d,r14d
   140049ec3:	je     0x140049eef
   140049ec5:	mov    r9b,bl
   140049ec8:	mov    r8d,edx
   140049ecb:	cmp    edx,ebp
   140049ecd:	jae    0x140049ee8
   140049ecf:	mov    eax,r15d
   140049ed2:	inc    r15d
   140049ed5:	mov    ecx,r8d
   140049ed8:	add    r8d,r14d
   140049edb:	sub    r9b,BYTE PTR [rax+rdi*1]
   140049edf:	mov    BYTE PTR [rcx+r10*1],r9b
   140049ee3:	cmp    r8d,ebp
   140049ee6:	jb     0x140049ecf
   140049ee8:	inc    edx
   140049eea:	cmp    edx,r14d
   140049eed:	jb     0x140049ec5
   140049eef:	mov    rax,r10
   140049ef2:	mov    rbx,QWORD PTR [rsp+0x40]
   140049ef7:	mov    rbp,QWORD PTR [rsp+0x48]
   140049efc:	mov    rsi,QWORD PTR [rsp+0x50]
   140049f01:	add    rsp,0x20
   140049f05:	pop    r15
   140049f07:	pop    r14
   140049f09:	pop    rdi
   140049f0a:	ret    
   140049f0b:	int3   
   140049f0c:	and    DWORD PTR [rcx+0x4ab0],0x0
   140049f13:	ret    
   140049f14:	mov    QWORD PTR [rsp+0x8],rbx
   140049f19:	push   rdi
   140049f1a:	sub    rsp,0x20
   140049f1e:	lea    rbx,[rcx+0x4ab0]
   140049f25:	mov    rdi,rcx
   140049f28:	cmp    DWORD PTR [rbx],0x0
   140049f2b:	je     0x140049f3c
   140049f2d:	and    DWORD PTR [rbx],0x0
   140049f30:	mov    rcx,QWORD PTR [rbx+0xb0]
   140049f37:	call   0x14005a938
   140049f3c:	mov    edx,0x1
   140049f41:	mov    rcx,rbx
   140049f44:	call   0x14004e800
   140049f49:	mov    edx,0x2
   140049f4e:	mov    rcx,rdi
   140049f51:	mov    rbx,QWORD PTR [rsp+0x30]
   140049f56:	add    rsp,0x20
   140049f5a:	pop    rdi
   140049f5b:	jmp    0x14004e720
   140049f60:	test   r9,r9
   140049f63:	je     0x140049fb5
   140049f65:	mov    QWORD PTR [rsp+0x8],rbx
   140049f6a:	mov    QWORD PTR [rsp+0x10],rbp
   140049f6f:	mov    QWORD PTR [rsp+0x18],rsi
   140049f74:	push   rdi
   140049f75:	sub    rsp,0x20
   140049f79:	mov    rdi,r8
   140049f7c:	mov    rsi,r9
   140049f7f:	sub    rdi,rdx
   140049f82:	mov    rbx,rdx
   140049f85:	mov    rbp,rcx
   140049f88:	lea    rdx,[rdi+rbx*1]
   140049f8c:	mov    rcx,rbp
   140049f8f:	call   0x14004935c
   140049f94:	mov    cl,BYTE PTR [rax]
   140049f96:	mov    BYTE PTR [rbx],cl
   140049f98:	inc    rbx
   140049f9b:	sub    rsi,0x1
   140049f9f:	jne    0x140049f88
   140049fa1:	mov    rbx,QWORD PTR [rsp+0x30]
   140049fa6:	mov    rbp,QWORD PTR [rsp+0x38]
   140049fab:	mov    rsi,QWORD PTR [rsp+0x40]
   140049fb0:	add    rsp,0x20
   140049fb4:	pop    rdi
   140049fb5:	ret    
   140049fb6:	int3   
   140049fb7:	int3   
   140049fb8:	mov    eax,r8d
   140049fbb:	mov    r9,rcx
   140049fbe:	sub    QWORD PTR [rcx+0x4da0],rax
   140049fc5:	test   r8d,r8d
   140049fc8:	je     0x14004a012
   140049fca:	mov    r10,QWORD PTR [rcx+0xe968]
   140049fd1:	mov    r11d,edx
   140049fd4:	mov    rdx,QWORD PTR [r9+0xc0]
   140049fdb:	mov    rcx,QWORD PTR [r9+0x4b90]
   140049fe2:	mov    rax,rdx
   140049fe5:	sub    rax,r11
   140049fe8:	and    rax,r10
   140049feb:	mov    al,BYTE PTR [rax+rcx*1]
   140049fee:	mov    BYTE PTR [rcx+rdx*1],al
   140049ff1:	mov    rax,QWORD PTR [r9+0xc0]
   140049ff8:	mov    r10,QWORD PTR [r9+0xe968]
   140049fff:	inc    rax
   14004a002:	and    rax,r10
   14004a005:	mov    QWORD PTR [r9+0xc0],rax
   14004a00c:	add    r8d,0xffffffff
   14004a010:	jne    0x140049fd4
   14004a012:	ret    
   14004a013:	int3   
   14004a014:	mov    QWORD PTR [rsp+0x8],rbx
   14004a019:	mov    QWORD PTR [rsp+0x10],rdi
   14004a01e:	mov    eax,DWORD PTR [rcx+0xb0]
   14004a024:	mov    r10,rcx
   14004a027:	and    eax,0x3
   14004a02a:	mov    ebx,r8d
   14004a02d:	mov    r9d,edx
   14004a030:	mov    DWORD PTR [rcx+rax*4+0xa0],ebx
   14004a037:	mov    r8,QWORD PTR [rcx+0xc0]
   14004a03e:	mov    rax,QWORD PTR [rcx+0xe960]
   14004a045:	mov    r11,r8
   14004a048:	inc    DWORD PTR [rcx+0xb0]
   14004a04e:	sub    r11,rbx
   14004a051:	sub    QWORD PTR [rcx+0x4da0],r9
   14004a058:	add    rax,0xffffffffffffefff
   14004a05e:	mov    DWORD PTR [rcx+0xb8],ebx
   14004a064:	mov    DWORD PTR [rcx+0xb4],r9d
   14004a06b:	cmp    r11,rax
   14004a06e:	jae    0x14004a16b
   14004a074:	cmp    r8,rax
   14004a077:	jae    0x14004a16b
   14004a07d:	mov    rax,QWORD PTR [rcx+0x4b90]
   14004a084:	lea    rcx,[rax+r11*1]
   14004a088:	lea    rdx,[rax+r8*1]
   14004a08c:	lea    rax,[r8+r9*1]
   14004a090:	mov    QWORD PTR [r10+0xc0],rax
   14004a097:	cmp    ebx,r9d
   14004a09a:	jae    0x14004a0eb
   14004a09c:	cmp    r9d,0x8
   14004a0a0:	jb     0x14004a110
   14004a0a2:	mov    r8d,r9d
   14004a0a5:	shr    r8,0x3
   14004a0a9:	mov    al,BYTE PTR [rcx]
   14004a0ab:	add    r9d,0xfffffff8
   14004a0af:	mov    BYTE PTR [rdx],al
   14004a0b1:	mov    al,BYTE PTR [rcx+0x1]
   14004a0b4:	mov    BYTE PTR [rdx+0x1],al
   14004a0b7:	mov    al,BYTE PTR [rcx+0x2]
   14004a0ba:	mov    BYTE PTR [rdx+0x2],al
   14004a0bd:	mov    al,BYTE PTR [rcx+0x3]
   14004a0c0:	mov    BYTE PTR [rdx+0x3],al
   14004a0c3:	mov    al,BYTE PTR [rcx+0x4]
   14004a0c6:	mov    BYTE PTR [rdx+0x4],al
   14004a0c9:	mov    al,BYTE PTR [rcx+0x5]
   14004a0cc:	mov    BYTE PTR [rdx+0x5],al
   14004a0cf:	mov    al,BYTE PTR [rcx+0x6]
   14004a0d2:	mov    BYTE PTR [rdx+0x6],al
   14004a0d5:	mov    al,BYTE PTR [rcx+0x7]
   14004a0d8:	add    rcx,0x8
   14004a0dc:	mov    BYTE PTR [rdx+0x7],al
   14004a0df:	add    rdx,0x8
   14004a0e3:	sub    r8,0x1
   14004a0e7:	jne    0x14004a0a9
   14004a0e9:	jmp    0x14004a110
   14004a0eb:	cmp    r9d,0x8
   14004a0ef:	jb     0x14004a110
   14004a0f1:	mov    r8,r9
   14004a0f4:	shr    r8,0x3
   14004a0f8:	mov    rax,QWORD PTR [rcx]
   14004a0fb:	add    r9d,0xfffffff8
   14004a0ff:	mov    QWORD PTR [rdx],rax
   14004a102:	add    rcx,0x8
   14004a106:	add    rdx,0x8
   14004a10a:	sub    r8,0x1
   14004a10e:	jne    0x14004a0f8
   14004a110:	test   r9d,r9d
   14004a113:	je     0x14004a1b2
   14004a119:	mov    al,BYTE PTR [rcx]
   14004a11b:	mov    BYTE PTR [rdx],al
   14004a11d:	cmp    r9d,0x1
   14004a121:	jbe    0x14004a1b2
   14004a127:	mov    al,BYTE PTR [rcx+0x1]
   14004a12a:	mov    BYTE PTR [rdx+0x1],al
   14004a12d:	cmp    r9d,0x2
   14004a131:	jbe    0x14004a1b2
   14004a133:	mov    al,BYTE PTR [rcx+0x2]
   14004a136:	mov    BYTE PTR [rdx+0x2],al
   14004a139:	cmp    r9d,0x3
   14004a13d:	jbe    0x14004a1b2
   14004a13f:	mov    al,BYTE PTR [rcx+0x3]
   14004a142:	mov    BYTE PTR [rdx+0x3],al
   14004a145:	cmp    r9d,0x4
   14004a149:	jbe    0x14004a1b2
   14004a14b:	mov    al,BYTE PTR [rcx+0x4]
   14004a14e:	mov    BYTE PTR [rdx+0x4],al
   14004a151:	cmp    r9d,0x5
   14004a155:	jbe    0x14004a1b2
   14004a157:	mov    al,BYTE PTR [rcx+0x5]
   14004a15a:	mov    BYTE PTR [rdx+0x5],al
   14004a15d:	cmp    r9d,0x6
   14004a161:	jbe    0x14004a1b2
   14004a163:	mov    al,BYTE PTR [rcx+0x6]
   14004a166:	mov    BYTE PTR [rdx+0x6],al
   14004a169:	jmp    0x14004a1b2
   14004a16b:	test   edx,edx
   14004a16d:	je     0x14004a1b2
   14004a16f:	mov    r8,QWORD PTR [rcx+0xe968]
   14004a176:	mov    rdx,QWORD PTR [r10+0x4b90]
   14004a17d:	and    r8,r11
   14004a180:	mov    rcx,QWORD PTR [r10+0xc0]
   14004a187:	inc    r11
   14004a18a:	mov    al,BYTE PTR [r8+rdx*1]
   14004a18e:	mov    BYTE PTR [rdx+rcx*1],al
   14004a191:	mov    rax,QWORD PTR [r10+0xc0]
   14004a198:	mov    r8,QWORD PTR [r10+0xe968]
   14004a19f:	inc    rax
   14004a1a2:	and    rax,r8
   14004a1a5:	mov    QWORD PTR [r10+0xc0],rax
   14004a1ac:	add    r9d,0xffffffff
   14004a1b0:	jne    0x14004a176
   14004a1b2:	mov    rbx,QWORD PTR [rsp+0x8]
   14004a1b7:	mov    rdi,QWORD PTR [rsp+0x10]
   14004a1bc:	ret    
   14004a1bd:	int3   
   14004a1be:	int3   
   14004a1bf:	int3   
   14004a1c0:	test   edx,edx
   14004a1c2:	je     0x14004a240
   14004a1c4:	mov    rax,rsp
   14004a1c7:	mov    QWORD PTR [rax+0x8],rbx
   14004a1cb:	mov    QWORD PTR [rax+0x10],rbp
   14004a1cf:	mov    QWORD PTR [rax+0x18],rsi
   14004a1d3:	mov    QWORD PTR [rax+0x20],rdi
   14004a1d7:	push   r14
   14004a1d9:	sub    rsp,0x20
   14004a1dd:	mov    rdi,QWORD PTR [r9]
   14004a1e0:	mov    rsi,r9
   14004a1e3:	mov    eax,r8d
   14004a1e6:	mov    ebp,edx
   14004a1e8:	sub    rdi,rax
   14004a1eb:	mov    r14,rcx
   14004a1ee:	mov    rdx,rdi
   14004a1f1:	mov    rcx,r14
   14004a1f4:	and    rdx,QWORD PTR [rsp+0x50]
   14004a1f9:	call   0x14004935c
   14004a1fe:	mov    rdx,QWORD PTR [rsi]
   14004a201:	mov    rcx,r14
   14004a204:	mov    rbx,rax
   14004a207:	call   0x14004935c
   14004a20c:	mov    cl,BYTE PTR [rbx]
   14004a20e:	inc    rdi
   14004a211:	mov    BYTE PTR [rax],cl
   14004a213:	mov    rax,QWORD PTR [rsi]
   14004a216:	inc    rax
   14004a219:	and    rax,QWORD PTR [rsp+0x50]
   14004a21e:	mov    QWORD PTR [rsi],rax
   14004a221:	add    ebp,0xffffffff
   14004a224:	jne    0x14004a1ee
   14004a226:	mov    rbx,QWORD PTR [rsp+0x30]
   14004a22b:	mov    rbp,QWORD PTR [rsp+0x38]
   14004a230:	mov    rsi,QWORD PTR [rsp+0x40]
   14004a235:	mov    rdi,QWORD PTR [rsp+0x48]
   14004a23a:	add    rsp,0x20
   14004a23e:	pop    r14
   14004a240:	ret    
   14004a241:	int3   
   14004a242:	int3   
   14004a243:	int3   
   14004a244:	rex push rbx
   14004a246:	sub    rsp,0x20
   14004a24a:	mov    rbx,r8
   14004a24d:	mov    ecx,0x7
   14004a252:	movsx  eax,cx
   14004a255:	movd   xmm1,eax
   14004a259:	mov    eax,0x4
   14004a25e:	punpcklwd xmm1,xmm1
   14004a262:	pshufd xmm1,xmm1,0x0
   14004a267:	movdqu xmm0,XMMWORD PTR [rdx]
   14004a26b:	pand   xmm0,XMMWORD PTR [rip+0x26ffd]        # 0x140071270
   14004a273:	por    xmm0,xmm1
   14004a277:	movdqu XMMWORD PTR [rdx],xmm0
   14004a27b:	add    rdx,0x10
   14004a27f:	sub    rax,0x1
   14004a283:	jne    0x14004a267
   14004a285:	sub    ecx,0x1
   14004a288:	jns    0x14004a252
   14004a28a:	xor    edx,edx
   14004a28c:	mov    r8d,0x100
   14004a292:	mov    rcx,rbx
   14004a295:	call   0x140058f40
   14004a29a:	mov    ecx,0x6
   14004a29f:	lea    rdx,[rbx+0x6]
   14004a2a3:	mov    eax,0x7
   14004a2a8:	sub    al,cl
   14004a2aa:	shl    al,0x5
   14004a2ad:	mov    BYTE PTR [rdx],al
   14004a2af:	dec    rdx
   14004a2b2:	sub    ecx,0x1
   14004a2b5:	jns    0x14004a2a3
   14004a2b7:	add    rsp,0x20
   14004a2bb:	pop    rbx
   14004a2bc:	ret    
   14004a2bd:	int3   
   14004a2be:	int3   
   14004a2bf:	int3   
   14004a2c0:	mov    QWORD PTR [rsp+0x10],rbx
   14004a2c5:	push   rdi
   14004a2c6:	sub    rsp,0x240
   14004a2cd:	mov    rax,QWORD PTR [rip+0x37c0c]        # 0x140081ee0
   14004a2d4:	xor    rax,rsp
   14004a2d7:	mov    QWORD PTR [rsp+0x230],rax
   14004a2df:	mov    rax,QWORD PTR [rcx+0x660]
   14004a2e6:	mov    rdi,rcx
   14004a2e9:	mov    r10,QWORD PTR [rcx+0x648]
   14004a2f0:	lea    rbx,[rsp+0x30]
   14004a2f5:	mov    r11d,0x1
   14004a2fb:	mov    r9,QWORD PTR [rax+0x2]
   14004a2ff:	test   dl,dl
   14004a301:	jne    0x14004a314
   14004a303:	cmp    QWORD PTR [r10+0xc],0x0
   14004a308:	lea    rbx,[rsp+0x38]
   14004a30d:	mov    QWORD PTR [rsp+0x30],rax
   14004a312:	je     0x14004a373
   14004a314:	test   r8,r8
   14004a317:	je     0x14004a31f
   14004a319:	mov    r10,QWORD PTR [r10+0xc]
   14004a31d:	jmp    0x14004a347
   14004a31f:	mov    r10,QWORD PTR [r10+0xc]
   14004a323:	cmp    WORD PTR [r10],r11w
   14004a327:	je     0x14004a343
   14004a329:	mov    rax,QWORD PTR [rdi+0x660]
   14004a330:	mov    r8,QWORD PTR [r10+0x4]
   14004a334:	mov    cl,BYTE PTR [rax]
   14004a336:	jmp    0x14004a33c
   14004a338:	add    r8,0xa
   14004a33c:	cmp    BYTE PTR [r8],cl
   14004a33f:	jne    0x14004a338
   14004a341:	jmp    0x14004a347
   14004a343:	lea    r8,[r10+0x2]
   14004a347:	cmp    QWORD PTR [r8+0x2],r9
   14004a34b:	jne    0x14004a35d
   14004a34d:	mov    QWORD PTR [rbx],r8
   14004a350:	add    rbx,0x8
   14004a354:	cmp    QWORD PTR [r10+0xc],0x0
   14004a359:	je     0x14004a361
   14004a35b:	jmp    0x14004a31f
   14004a35d:	mov    r10,QWORD PTR [r8+0x2]
   14004a361:	lea    rax,[rsp+0x30]
   14004a366:	cmp    rbx,rax
   14004a369:	jne    0x14004a373
   14004a36b:	mov    rax,r10
   14004a36e:	jmp    0x14004a41c
   14004a373:	lea    rax,[r9+0x1]
   14004a377:	mov    cl,BYTE PTR [r9]
   14004a37a:	mov    BYTE PTR [rsp+0x20],cl
   14004a37e:	mov    QWORD PTR [rsp+0x22],rax
   14004a383:	cmp    WORD PTR [r10],r11w
   14004a387:	je     0x14004a3e4
   14004a389:	cmp    r10,QWORD PTR [rdi+0x4ca8]
   14004a390:	jbe    0x14004a41a
   14004a396:	mov    rax,QWORD PTR [r10+0x4]
   14004a39a:	jmp    0x14004a3a0
   14004a39c:	add    rax,0xa
   14004a3a0:	cmp    BYTE PTR [rax],cl
   14004a3a2:	jne    0x14004a39c
   14004a3a4:	movzx  ecx,BYTE PTR [rax+0x1]
   14004a3a8:	movzx  eax,WORD PTR [r10]
   14004a3ac:	sub    ecx,r11d
   14004a3af:	movzx  edx,WORD PTR [r10+0x2]
   14004a3b4:	sub    edx,eax
   14004a3b6:	sub    edx,ecx
   14004a3b8:	lea    eax,[rcx+rcx*1]
   14004a3bb:	cmp    eax,edx
   14004a3bd:	ja     0x14004a3cb
   14004a3bf:	lea    eax,[rcx+rcx*4]
   14004a3c2:	xor    ecx,ecx
   14004a3c4:	cmp    eax,edx
   14004a3c6:	seta   cl
   14004a3c9:	jmp    0x14004a3db
   14004a3cb:	lea    eax,[rax+rdx*2]
   14004a3ce:	lea    ecx,[rdx+rdx*1]
   14004a3d1:	dec    eax
   14004a3d3:	add    eax,edx
   14004a3d5:	xor    edx,edx
   14004a3d7:	div    ecx
   14004a3d9:	mov    ecx,eax
   14004a3db:	add    cl,r11b
   14004a3de:	mov    BYTE PTR [rsp+0x21],cl
   14004a3e2:	jmp    0x14004a3ec
   14004a3e4:	mov    al,BYTE PTR [r10+0x3]
   14004a3e8:	mov    BYTE PTR [rsp+0x21],al
   14004a3ec:	sub    rbx,0x8
   14004a3f0:	lea    r9,[rsp+0x20]
   14004a3f5:	mov    rdx,rdi
   14004a3f8:	mov    rcx,r10
   14004a3fb:	mov    r8,QWORD PTR [rbx]
   14004a3fe:	call   0x140053ef8
   14004a403:	mov    r10,rax
   14004a406:	test   rax,rax
   14004a409:	je     0x14004a41a
   14004a40b:	lea    rax,[rsp+0x30]
   14004a410:	cmp    rbx,rax
   14004a413:	jne    0x14004a3ec
   14004a415:	jmp    0x14004a36b
   14004a41a:	xor    eax,eax
   14004a41c:	mov    rcx,QWORD PTR [rsp+0x230]
   14004a424:	xor    rcx,rsp
   14004a427:	call   0x140055f90
   14004a42c:	mov    rbx,QWORD PTR [rsp+0x258]
   14004a434:	add    rsp,0x240
   14004a43b:	pop    rdi
   14004a43c:	ret    
   14004a43d:	int3   
   14004a43e:	int3   
   14004a43f:	int3   
   14004a440:	mov    QWORD PTR [rsp+0x8],rbx
   14004a445:	mov    QWORD PTR [rsp+0x10],rdi
   14004a44a:	movsxd rax,DWORD PTR [rcx+0x98b0]
   14004a451:	mov    rbx,rcx
   14004a454:	imul   rdi,rax,0x5c
   14004a458:	mov    r11d,edx
   14004a45b:	mov    r8d,DWORD PTR [rdi+rcx*1+0x98d4]
   14004a463:	mov    edx,DWORD PTR [rdi+rcx*1+0x98dc]
   14004a46a:	mov    r10d,edx
   14004a46d:	sub    r10d,DWORD PTR [rdi+rcx*1+0x98cc]
   14004a475:	mov    r9d,DWORD PTR [rdi+rcx*1+0x98d0]
   14004a47d:	inc    DWORD PTR [rdi+rcx*1+0x990c]
   14004a484:	mov    eax,DWORD PTR [rdi+rbx*1+0x98c4]
   14004a48b:	imul   eax,r8d
   14004a48f:	mov    DWORD PTR [rdi+rcx*1+0x98cc],edx
   14004a496:	imul   edx,DWORD PTR [rdi+rbx*1+0x98b8]
   14004a49e:	mov    DWORD PTR [rdi+rcx*1+0x98d0],r10d
   14004a4a6:	imul   r10d,DWORD PTR [rdi+rbx*1+0x98bc]
   14004a4af:	mov    DWORD PTR [rdi+rcx*1+0x98d8],r8d
   14004a4b7:	lea    r8,[rbx+0x98e4]
   14004a4be:	mov    DWORD PTR [rdi+rcx*1+0x98d4],r9d
   14004a4c6:	add    r8,rdi
   14004a4c9:	mov    ecx,DWORD PTR [rdi+rcx*1+0x98c8]
   14004a4d0:	imul   ecx,DWORD PTR [rbx+0x98b4]
   14004a4d7:	imul   r9d,DWORD PTR [rdi+rbx*1+0x98c0]
   14004a4e0:	add    ecx,eax
   14004a4e2:	mov    eax,DWORD PTR [rdi+rbx*1+0x9910]
   14004a4e9:	add    ecx,r9d
   14004a4ec:	add    ecx,edx
   14004a4ee:	add    ecx,r10d
   14004a4f1:	lea    ecx,[rcx+rax*8]
   14004a4f4:	sar    ecx,0x3
   14004a4f7:	movzx  r10d,cl
   14004a4fb:	movsx  ecx,r11b
   14004a4ff:	sub    r10d,r11d
   14004a502:	shl    ecx,0x3
   14004a505:	mov    eax,ecx
   14004a507:	cdq    
   14004a508:	xor    eax,edx
   14004a50a:	sub    eax,edx
   14004a50c:	add    DWORD PTR [rdi+rbx*1+0x98e0],eax
   14004a513:	mov    eax,ecx
   14004a515:	sub    eax,DWORD PTR [rdi+rbx*1+0x98cc]
   14004a51c:	cdq    
   14004a51d:	xor    eax,edx
   14004a51f:	sub    eax,edx
   14004a521:	add    DWORD PTR [r8],eax
   14004a524:	mov    eax,DWORD PTR [rdi+rbx*1+0x98cc]
   14004a52b:	add    eax,ecx
   14004a52d:	cdq    
   14004a52e:	xor    eax,edx
   14004a530:	sub    eax,edx
   14004a532:	add    DWORD PTR [rdi+rbx*1+0x98e8],eax
   14004a539:	mov    eax,ecx
   14004a53b:	sub    eax,DWORD PTR [rdi+rbx*1+0x98d0]
   14004a542:	cdq    
   14004a543:	xor    eax,edx
   14004a545:	sub    eax,edx
   14004a547:	add    DWORD PTR [rdi+rbx*1+0x98ec],eax
   14004a54e:	mov    eax,DWORD PTR [rdi+rbx*1+0x98d0]
   14004a555:	add    eax,ecx
   14004a557:	cdq    
   14004a558:	xor    eax,edx
   14004a55a:	sub    eax,edx
   14004a55c:	add    DWORD PTR [rdi+rbx*1+0x98f0],eax
   14004a563:	mov    eax,ecx
   14004a565:	sub    eax,DWORD PTR [rdi+rbx*1+0x98d4]
   14004a56c:	cdq    
   14004a56d:	xor    eax,edx
   14004a56f:	sub    eax,edx
   14004a571:	add    DWORD PTR [rdi+rbx*1+0x98f4],eax
   14004a578:	mov    eax,DWORD PTR [rdi+rbx*1+0x98d4]
   14004a57f:	add    eax,ecx
   14004a581:	cdq    
   14004a582:	xor    eax,edx
   14004a584:	sub    eax,edx
   14004a586:	add    DWORD PTR [rdi+rbx*1+0x98f8],eax
   14004a58d:	mov    eax,ecx
   14004a58f:	sub    eax,DWORD PTR [rdi+rbx*1+0x98d8]
   14004a596:	cdq    
   14004a597:	xor    eax,edx
   14004a599:	sub    eax,edx
   14004a59b:	add    DWORD PTR [rdi+rbx*1+0x98fc],eax
   14004a5a2:	mov    eax,DWORD PTR [rdi+rbx*1+0x98d8]
   14004a5a9:	add    eax,ecx
   14004a5ab:	cdq    
   14004a5ac:	xor    eax,edx
   14004a5ae:	sub    eax,edx
   14004a5b0:	add    DWORD PTR [rdi+rbx*1+0x9900],eax
   14004a5b7:	mov    eax,ecx
   14004a5b9:	sub    eax,DWORD PTR [rbx+0x98b4]
   14004a5bf:	cdq    
   14004a5c0:	xor    eax,edx
   14004a5c2:	sub    eax,edx
   14004a5c4:	add    DWORD PTR [rdi+rbx*1+0x9904],eax
   14004a5cb:	mov    eax,DWORD PTR [rbx+0x98b4]
   14004a5d1:	add    eax,ecx
   14004a5d3:	cdq    
   14004a5d4:	xor    eax,edx
   14004a5d6:	sub    eax,edx
   14004a5d8:	add    DWORD PTR [rdi+rbx*1+0x9908],eax
   14004a5df:	mov    al,r10b
   14004a5e2:	sub    al,BYTE PTR [rdi+rbx*1+0x9910]
   14004a5e9:	movsx  ecx,al
   14004a5ec:	mov    DWORD PTR [rdi+rbx*1+0x98dc],ecx
   14004a5f3:	mov    DWORD PTR [rbx+0x98b4],ecx
   14004a5f9:	test   BYTE PTR [rdi+rbx*1+0x990c],0x1f
   14004a601:	mov    DWORD PTR [rdi+rbx*1+0x9910],r10d
   14004a609:	jne    0x14004a762
   14004a60f:	mov    r9d,DWORD PTR [rdi+rbx*1+0x98e0]
   14004a617:	xor    ecx,ecx
   14004a619:	and    DWORD PTR [rdi+rbx*1+0x98e0],ecx
   14004a620:	lea    edx,[rcx+0x1]
   14004a623:	cmp    DWORD PTR [r8],r9d
   14004a626:	jae    0x14004a62d
   14004a628:	mov    r9d,DWORD PTR [r8]
   14004a62b:	mov    ecx,edx
   14004a62d:	and    DWORD PTR [r8],0x0
   14004a631:	inc    edx
   14004a633:	movsxd rax,edx
   14004a636:	add    r8,0x4
   14004a63a:	cmp    rax,0xb
   14004a63e:	jb     0x14004a623
   14004a640:	cmp    ecx,0x6
   14004a643:	ja     0x14004a6fb
   14004a649:	je     0x14004a6eb
   14004a64f:	sub    ecx,0x1
   14004a652:	je     0x14004a6d0
   14004a654:	sub    ecx,0x1
   14004a657:	je     0x14004a6bc
   14004a659:	sub    ecx,0x1
   14004a65c:	je     0x14004a69e
   14004a65e:	sub    ecx,0x1
   14004a661:	je     0x14004a68a
   14004a663:	cmp    ecx,0x1
   14004a666:	jne    0x14004a762
   14004a66c:	mov    eax,DWORD PTR [rdi+rbx*1+0x98c0]
   14004a673:	cmp    eax,0xfffffff0
   14004a676:	jl     0x14004a762
   14004a67c:	dec    eax
   14004a67e:	mov    DWORD PTR [rdi+rbx*1+0x98c0],eax
   14004a685:	jmp    0x14004a762
   14004a68a:	mov    eax,DWORD PTR [rdi+rbx*1+0x98bc]
   14004a691:	cmp    eax,0x10
   14004a694:	jge    0x14004a762
   14004a69a:	inc    eax
   14004a69c:	jmp    0x14004a6b0
   14004a69e:	mov    eax,DWORD PTR [rdi+rbx*1+0x98bc]
   14004a6a5:	cmp    eax,0xfffffff0
   14004a6a8:	jl     0x14004a762
   14004a6ae:	dec    eax
   14004a6b0:	mov    DWORD PTR [rdi+rbx*1+0x98bc],eax
   14004a6b7:	jmp    0x14004a762
   14004a6bc:	mov    eax,DWORD PTR [rdi+rbx*1+0x98b8]
   14004a6c3:	cmp    eax,0x10
   14004a6c6:	jge    0x14004a762
   14004a6cc:	inc    eax
   14004a6ce:	jmp    0x14004a6e2
   14004a6d0:	mov    eax,DWORD PTR [rdi+rbx*1+0x98b8]
   14004a6d7:	cmp    eax,0xfffffff0
   14004a6da:	jl     0x14004a762
   14004a6e0:	dec    eax
   14004a6e2:	mov    DWORD PTR [rdi+rbx*1+0x98b8],eax
   14004a6e9:	jmp    0x14004a762
   14004a6eb:	mov    eax,DWORD PTR [rdi+rbx*1+0x98c0]
   14004a6f2:	cmp    eax,0x10
   14004a6f5:	jge    0x14004a762
   14004a6f7:	inc    eax
   14004a6f9:	jmp    0x14004a67e
   14004a6fb:	sub    ecx,0x7
   14004a6fe:	je     0x14004a74d
   14004a700:	sub    ecx,0x1
   14004a703:	je     0x14004a736
   14004a705:	sub    ecx,0x1
   14004a708:	je     0x14004a726
   14004a70a:	cmp    ecx,0x1
   14004a70d:	jne    0x14004a762
   14004a70f:	mov    eax,DWORD PTR [rdi+rbx*1+0x98c8]
   14004a716:	cmp    eax,0x10
   14004a719:	jge    0x14004a762
   14004a71b:	inc    eax
   14004a71d:	mov    DWORD PTR [rdi+rbx*1+0x98c8],eax
   14004a724:	jmp    0x14004a762
   14004a726:	mov    eax,DWORD PTR [rdi+rbx*1+0x98c8]
   14004a72d:	cmp    eax,0xfffffff0
   14004a730:	jl     0x14004a762
   14004a732:	dec    eax
   14004a734:	jmp    0x14004a71d
   14004a736:	mov    eax,DWORD PTR [rdi+rbx*1+0x98c4]
   14004a73d:	cmp    eax,0x10
   14004a740:	jge    0x14004a762
   14004a742:	inc    eax
   14004a744:	mov    DWORD PTR [rdi+rbx*1+0x98c4],eax
   14004a74b:	jmp    0x14004a762
   14004a74d:	mov    ecx,DWORD PTR [rdi+rbx*1+0x98c4]
   14004a754:	cmp    ecx,0xfffffff0
   14004a757:	jl     0x14004a762
   14004a759:	dec    ecx
   14004a75b:	mov    DWORD PTR [rdi+rbx*1+0x98c4],ecx
   14004a762:	mov    rbx,QWORD PTR [rsp+0x8]
   14004a767:	mov    al,r10b
   14004a76a:	mov    rdi,QWORD PTR [rsp+0x10]
   14004a76f:	ret    
   14004a770:	mov    QWORD PTR [rsp+0x8],rbx
   14004a775:	mov    QWORD PTR [rsp+0x10],rsi
   14004a77a:	mov    QWORD PTR [rsp+0x18],rdi
   14004a77f:	push   r14
   14004a781:	sub    rsp,0x20
   14004a785:	mov    rbx,rcx
   14004a788:	mov    rcx,QWORD PTR [rcx+0x648]
   14004a78f:	mov    rdx,QWORD PTR [rbx+0x4ca8]
   14004a796:	cmp    rcx,rdx
   14004a799:	jbe    0x14004a7cb
   14004a79b:	mov    rax,QWORD PTR [rbx+0x4cb8]
   14004a7a2:	cmp    rcx,rax
   14004a7a5:	ja     0x14004a7cb
   14004a7a7:	mov    r14d,0x1
   14004a7ad:	cmp    WORD PTR [rcx],r14w
   14004a7b1:	je     0x14004a7e4
   14004a7b3:	cmp    QWORD PTR [rcx+0x4],rdx
   14004a7b7:	jbe    0x14004a7cb
   14004a7b9:	cmp    QWORD PTR [rcx+0x4],rax
   14004a7bd:	ja     0x14004a7cb
   14004a7bf:	mov    rdx,rbx
   14004a7c2:	call   0x140054110
   14004a7c7:	test   al,al
   14004a7c9:	jne    0x14004a7ec
   14004a7cb:	or     eax,0xffffffff
   14004a7ce:	mov    rbx,QWORD PTR [rsp+0x30]
   14004a7d3:	mov    rsi,QWORD PTR [rsp+0x38]
   14004a7d8:	mov    rdi,QWORD PTR [rsp+0x40]
   14004a7dd:	add    rsp,0x20
   14004a7e1:	pop    r14
   14004a7e3:	ret    
   14004a7e4:	mov    rdx,rbx
   14004a7e7:	call   0x140053f90
   14004a7ec:	mov    edx,DWORD PTR [rbx+0x4a90]
   14004a7f2:	mov    eax,edx
   14004a7f4:	mov    ecx,DWORD PTR [rbx+0x4a94]
   14004a7fa:	imul   eax,ecx
   14004a7fd:	add    DWORD PTR [rbx+0x4a88],eax
   14004a803:	mov    eax,DWORD PTR [rbx+0x4a98]
   14004a809:	sub    eax,ecx
   14004a80b:	imul   eax,edx
   14004a80e:	mov    DWORD PTR [rbx+0x4a90],eax
   14004a814:	cmp    QWORD PTR [rbx+0x660],0x0
   14004a81c:	je     0x14004a859
   14004a81e:	cmp    DWORD PTR [rbx+0x670],0x0
   14004a825:	mov    rax,QWORD PTR [rbx+0x660]
   14004a82c:	movzx  esi,BYTE PTR [rax]
   14004a82f:	jne    0x14004a91f
   14004a835:	mov    rax,QWORD PTR [rax+0x2]
   14004a839:	cmp    rax,QWORD PTR [rbx+0x4ca8]
   14004a840:	jbe    0x14004a91f
   14004a846:	mov    QWORD PTR [rbx+0x658],rax
   14004a84d:	mov    QWORD PTR [rbx+0x648],rax
   14004a854:	jmp    0x14004a94b
   14004a859:	mov    ecx,DWORD PTR [rbx+0x4a88]
   14004a85f:	mov    edx,DWORD PTR [rbx+0x4a90]
   14004a865:	lea    eax,[rcx+rdx*1]
   14004a868:	xor    eax,ecx
   14004a86a:	cmp    eax,0x1000000
   14004a86f:	jb     0x14004a887
   14004a871:	cmp    edx,0x8000
   14004a877:	jae    0x14004a8d4
   14004a879:	neg    ecx
   14004a87b:	and    ecx,0x7fff
   14004a881:	mov    DWORD PTR [rbx+0x4a90],ecx
   14004a887:	mov    rdi,QWORD PTR [rbx+0x4aa8]
   14004a88e:	cmp    DWORD PTR [rdi+0x8],0x7fe2
   14004a895:	jle    0x14004a89f
   14004a897:	mov    rcx,rdi
   14004a89a:	call   0x14004eb48
   14004a89f:	movsxd rdx,DWORD PTR [rdi+0x8]
   14004a8a3:	mov    rax,QWORD PTR [rdi+0x18]
   14004a8a7:	movzx  r8d,BYTE PTR [rax+rdx*1]
   14004a8ac:	lea    eax,[rdx+0x1]
   14004a8af:	mov    DWORD PTR [rdi+0x8],eax
   14004a8b2:	mov    eax,DWORD PTR [rbx+0x4a8c]
   14004a8b8:	shl    DWORD PTR [rbx+0x4a90],0x8
   14004a8bf:	shl    eax,0x8
   14004a8c2:	or     eax,r8d
   14004a8c5:	shl    DWORD PTR [rbx+0x4a88],0x8
   14004a8cc:	mov    DWORD PTR [rbx+0x4a8c],eax
   14004a8d2:	jmp    0x14004a859
   14004a8d4:	mov    rax,QWORD PTR [rbx+0x648]
   14004a8db:	add    DWORD PTR [rbx+0x670],r14d
   14004a8e2:	mov    rcx,QWORD PTR [rax+0xc]
   14004a8e6:	mov    QWORD PTR [rbx+0x648],rcx
   14004a8ed:	cmp    rcx,QWORD PTR [rbx+0x4ca8]
   14004a8f4:	jbe    0x14004a7cb
   14004a8fa:	cmp    rcx,QWORD PTR [rbx+0x4cb8]
   14004a901:	ja     0x14004a7cb
   14004a907:	movzx  eax,WORD PTR [rcx]
   14004a90a:	cmp    eax,DWORD PTR [rbx+0x668]
   14004a910:	je     0x14004a8d4
   14004a912:	mov    rdx,rbx
   14004a915:	call   0x14005427c
   14004a91a:	jmp    0x14004a7c7
   14004a91f:	mov    rcx,rbx
   14004a922:	call   0x140053b78
   14004a927:	cmp    BYTE PTR [rbx+0xa80],0x0
   14004a92e:	jne    0x14004a94b
   14004a930:	lea    rcx,[rbx+0x680]
   14004a937:	mov    BYTE PTR [rbx+0xa80],r14b
   14004a93e:	xor    edx,edx
   14004a940:	mov    r8d,0x100
   14004a946:	call   0x140058f40
   14004a94b:	mov    ecx,DWORD PTR [rbx+0x4a88]
   14004a951:	mov    edx,DWORD PTR [rbx+0x4a90]
   14004a957:	lea    eax,[rcx+rdx*1]
   14004a95a:	xor    eax,ecx
   14004a95c:	cmp    eax,0x1000000
   14004a961:	jb     0x14004a979
   14004a963:	cmp    edx,0x8000
   14004a969:	jae    0x14004a9c6
   14004a96b:	neg    ecx
   14004a96d:	and    ecx,0x7fff
   14004a973:	mov    DWORD PTR [rbx+0x4a90],ecx
   14004a979:	mov    rdi,QWORD PTR [rbx+0x4aa8]
   14004a980:	cmp    DWORD PTR [rdi+0x8],0x7fe2
   14004a987:	jle    0x14004a991
   14004a989:	mov    rcx,rdi
   14004a98c:	call   0x14004eb48
   14004a991:	movsxd rdx,DWORD PTR [rdi+0x8]
   14004a995:	mov    rax,QWORD PTR [rdi+0x18]
   14004a999:	movzx  r8d,BYTE PTR [rax+rdx*1]
   14004a99e:	lea    eax,[rdx+0x1]
   14004a9a1:	mov    DWORD PTR [rdi+0x8],eax
   14004a9a4:	mov    eax,DWORD PTR [rbx+0x4a8c]
   14004a9aa:	shl    DWORD PTR [rbx+0x4a90],0x8
   14004a9b1:	shl    eax,0x8
   14004a9b4:	or     eax,r8d
   14004a9b7:	shl    DWORD PTR [rbx+0x4a88],0x8
   14004a9be:	mov    DWORD PTR [rbx+0x4a8c],eax
   14004a9c4:	jmp    0x14004a94b
   14004a9c6:	mov    eax,esi
   14004a9c8:	jmp    0x14004a7ce
   14004a9cd:	int3   
   14004a9ce:	int3   
   14004a9cf:	int3   
   14004a9d0:	mov    QWORD PTR [rsp+0x8],rbx
   14004a9d5:	mov    QWORD PTR [rsp+0x18],rbp
   14004a9da:	push   rsi
   14004a9db:	push   rdi
   14004a9dc:	push   r12
   14004a9de:	push   r14
   14004a9e0:	push   r15
   14004a9e2:	sub    rsp,0x20
   14004a9e6:	cmp    DWORD PTR [rdx+0x8],0x7fe2
   14004a9ed:	mov    r12,r8
   14004a9f0:	mov    rsi,rdx
   14004a9f3:	mov    rdi,rcx
   14004a9f6:	jle    0x14004aa00
   14004a9f8:	mov    rcx,rdx
   14004a9fb:	call   0x14004eb48
   14004aa00:	movsxd r9,DWORD PTR [rsi+0x8]
   14004aa04:	xor    ebp,ebp
   14004aa06:	mov    rax,QWORD PTR [rsi+0x18]
   14004aa0a:	movzx  ebx,BYTE PTR [r9+rax*1]
   14004aa0f:	inc    r9d
   14004aa12:	mov    r14d,ebx
   14004aa15:	mov    DWORD PTR [rsi+0x8],r9d
   14004aa19:	shr    r14d,0x5
   14004aa1d:	and    r14b,0x1
   14004aa21:	je     0x14004aa4b
   14004aa23:	cmp    r9d,0x7fe2
   14004aa2a:	jle    0x14004aa34
   14004aa2c:	mov    rcx,rsi
   14004aa2f:	call   0x14004eb48
   14004aa34:	movsxd rdx,DWORD PTR [rsi+0x8]
   14004aa38:	mov    rax,QWORD PTR [rsi+0x18]
   14004aa3c:	lea    r9d,[rdx+0x1]
   14004aa40:	movzx  r15d,BYTE PTR [rdx+rax*1]
   14004aa45:	mov    DWORD PTR [rsi+0x8],r9d
   14004aa49:	jmp    0x14004aa5f
   14004aa4b:	cmp    DWORD PTR [rdi+0x4ab0],ebp
   14004aa51:	jne    0x14004aa5a
   14004aa53:	xor    al,al
   14004aa55:	jmp    0x14004aaf6
   14004aa5a:	mov    r15d,DWORD PTR [rsp+0x58]
   14004aa5f:	test   bl,0x40
   14004aa62:	je     0x14004aa8d
   14004aa64:	cmp    r9d,0x7fe2
   14004aa6b:	jle    0x14004aa75
   14004aa6d:	mov    rcx,rsi
   14004aa70:	call   0x14004eb48
   14004aa75:	movsxd r8,DWORD PTR [rsi+0x8]
   14004aa79:	mov    rax,QWORD PTR [rsi+0x18]
   14004aa7d:	movzx  edx,BYTE PTR [r8+rax*1]
   14004aa82:	lea    eax,[r8+0x1]
   14004aa86:	mov    DWORD PTR [rsi+0x8],eax
   14004aa89:	mov    DWORD PTR [r12],edx
   14004aa8d:	lea    rcx,[rdi+0x4a88]
   14004aa94:	mov    rdx,rsi
   14004aa97:	call   0x14004ba10
   14004aa9c:	test   r14b,r14b
   14004aa9f:	je     0x14004aaec
   14004aaa1:	and    ebx,0x1f
   14004aaa4:	inc    ebx
   14004aaa6:	cmp    ebx,0x10
   14004aaa9:	jle    0x14004aab1
   14004aaab:	lea    ebx,[rbx+rbx*2]
   14004aaae:	add    ebx,0xffffffe0
   14004aab1:	cmp    ebx,0x1
   14004aab4:	jne    0x14004aad2
   14004aab6:	cmp    DWORD PTR [rdi+0x4ab0],ebp
   14004aabc:	je     0x14004aa53
   14004aabe:	mov    rcx,QWORD PTR [rdi+0x4b60]
   14004aac5:	mov    DWORD PTR [rdi+0x4ab0],ebp
   14004aacb:	call   0x14005a938
   14004aad0:	jmp    0x14004aa53
   14004aad2:	lea    edx,[r15+0x1]
   14004aad6:	lea    rcx,[rdi+0x4ab0]
   14004aadd:	call   0x14004e800
   14004aae2:	mov    edx,ebx
   14004aae4:	mov    rcx,rdi
   14004aae7:	call   0x14004e720
   14004aaec:	cmp    QWORD PTR [rdi+0x648],rbp
   14004aaf3:	setne  al
   14004aaf6:	mov    rbx,QWORD PTR [rsp+0x50]
   14004aafb:	mov    rbp,QWORD PTR [rsp+0x60]
   14004ab00:	add    rsp,0x20
   14004ab04:	pop    r15
   14004ab06:	pop    r14
   14004ab08:	pop    r12
   14004ab0a:	pop    rdi
   14004ab0b:	pop    rsi
   14004ab0c:	ret    
   14004ab0d:	int3   
   14004ab0e:	int3   
   14004ab0f:	int3   
   14004ab10:	mov    rax,rsp
   14004ab13:	mov    QWORD PTR [rax+0x8],rbx
   14004ab17:	mov    QWORD PTR [rax+0x10],rbp
   14004ab1b:	mov    QWORD PTR [rax+0x18],rsi
   14004ab1f:	mov    QWORD PTR [rax+0x20],rdi
   14004ab23:	push   r14
   14004ab25:	sub    rsp,0x20
   14004ab29:	xor    ebp,ebp
   14004ab2b:	mov    ebx,edx
   14004ab2d:	and    ebx,0xfff0
   14004ab33:	mov    r14,r9
   14004ab36:	mov    esi,r8d
   14004ab39:	mov    edi,ebp
   14004ab3b:	cmp    DWORD PTR [r9],ebx
   14004ab3e:	ja     0x14004ab4f
   14004ab40:	mov    rax,r9
   14004ab43:	inc    esi
   14004ab45:	lea    rax,[rax+0x4]
   14004ab49:	inc    edi
   14004ab4b:	cmp    DWORD PTR [rax],ebx
   14004ab4d:	jbe    0x14004ab43
   14004ab4f:	add    rcx,0x8
   14004ab53:	mov    edx,esi
   14004ab55:	call   0x140023e04
   14004ab5a:	test   edi,edi
   14004ab5c:	je     0x14004ab68
   14004ab5e:	lea    eax,[rdi-0x1]
   14004ab61:	movsxd rcx,eax
   14004ab64:	mov    ebp,DWORD PTR [r14+rcx*4]
   14004ab68:	mov    rax,QWORD PTR [rsp+0x50]
   14004ab6d:	sub    ebx,ebp
   14004ab6f:	mov    rbp,QWORD PTR [rsp+0x38]
   14004ab74:	mov    ecx,0x10
   14004ab79:	mov    rdi,QWORD PTR [rsp+0x48]
   14004ab7e:	sub    ecx,esi
   14004ab80:	shr    ebx,cl
   14004ab82:	mov    ecx,esi
   14004ab84:	mov    rsi,QWORD PTR [rsp+0x40]
   14004ab89:	add    ebx,DWORD PTR [rax+rcx*4]
   14004ab8c:	mov    eax,ebx
   14004ab8e:	mov    rbx,QWORD PTR [rsp+0x30]
   14004ab93:	add    rsp,0x20
   14004ab97:	pop    r14
   14004ab99:	ret    
   14004ab9a:	int3   
   14004ab9b:	int3   
   14004ab9c:	sub    rsp,0x28
   14004aba0:	cmp    edx,0xf
   14004aba3:	je     0x14004ac13
   14004aba5:	cmp    edx,0x14
   14004aba8:	je     0x14004abfe
   14004abaa:	cmp    edx,0x1a
   14004abad:	je     0x14004abfe
   14004abaf:	cmp    edx,0x1d
   14004abb2:	je     0x14004abe9
   14004abb4:	cmp    edx,0x32
   14004abb7:	jne    0x14004ac24
   14004abb9:	cmp    DWORD PTR [rcx+0x30],0x1
   14004abbd:	jbe    0x14004abdd
   14004abbf:	cmp    BYTE PTR [rcx+0x4db9],0x0
   14004abc6:	jne    0x14004abdd
   14004abc8:	cmp    BYTE PTR [rcx+0x4d98],0x0
   14004abcf:	jne    0x14004abdd
   14004abd1:	mov    dl,r8b
   14004abd4:	add    rsp,0x28
   14004abd8:	jmp    0x140051f84
   14004abdd:	mov    dl,r8b
   14004abe0:	add    rsp,0x28
   14004abe4:	jmp    0x140051234
   14004abe9:	cmp    BYTE PTR [rcx+0x4d98],0x0
   14004abf0:	jne    0x14004ac24
   14004abf2:	mov    dl,r8b
   14004abf5:	add    rsp,0x28
   14004abf9:	jmp    0x14004ffe4
   14004abfe:	cmp    BYTE PTR [rcx+0x4d98],0x0
   14004ac05:	jne    0x14004ac24
   14004ac07:	mov    dl,r8b
   14004ac0a:	add    rsp,0x28
   14004ac0e:	jmp    0x14004f78c
   14004ac13:	cmp    BYTE PTR [rcx+0x4d98],0x0
   14004ac1a:	jne    0x14004ac24
   14004ac1c:	mov    dl,r8b
   14004ac1f:	call   0x14004f5ec
   14004ac24:	add    rsp,0x28
   14004ac28:	ret    
   14004ac29:	int3   
   14004ac2a:	int3   
   14004ac2b:	int3   
   14004ac2c:	mov    rax,rsp
   14004ac2f:	mov    QWORD PTR [rax+0x8],rbx
   14004ac33:	mov    QWORD PTR [rax+0x10],rbp
   14004ac37:	mov    QWORD PTR [rax+0x18],rsi
   14004ac3b:	mov    QWORD PTR [rax+0x20],rdi
   14004ac3f:	push   r15
   14004ac41:	sub    rsp,0x20
   14004ac45:	mov    rbx,rcx
   14004ac48:	mov    r15d,0x1
   14004ac4e:	mov    rcx,QWORD PTR [rcx+0x648]
   14004ac55:	mov    ebp,edx
   14004ac57:	mov    r8d,edx
   14004ac5a:	mov    rdx,rbx
   14004ac5d:	cmp    WORD PTR [rcx],r15w
   14004ac61:	je     0x14004ac6d
   14004ac63:	call   0x1400545b8
   14004ac68:	jmp    0x14004ad49
   14004ac6d:	call   0x140054450
   14004ac72:	mov    edx,DWORD PTR [rbx+0x4a90]
   14004ac78:	mov    ecx,DWORD PTR [rbx+0x4a94]
   14004ac7e:	mov    eax,ecx
   14004ac80:	shr    edx,0xe
   14004ac83:	imul   eax,edx
   14004ac86:	add    DWORD PTR [rbx+0x4a88],eax
   14004ac8c:	mov    eax,DWORD PTR [rbx+0x4a98]
   14004ac92:	sub    eax,ecx
   14004ac94:	imul   eax,edx
   14004ac97:	mov    DWORD PTR [rbx+0x4a90],eax
   14004ac9d:	jmp    0x14004ad79
   14004aca2:	mov    esi,DWORD PTR [rbx+0x4a88]
   14004aca8:	mov    ecx,DWORD PTR [rbx+0x4a90]
   14004acae:	lea    eax,[rsi+rcx*1]
   14004acb1:	xor    eax,esi
   14004acb3:	cmp    eax,0x1000000
   14004acb8:	jb     0x14004acd1
   14004acba:	cmp    ecx,0x8000
   14004acc0:	jae    0x14004ad11
   14004acc2:	mov    eax,esi
   14004acc4:	neg    eax
   14004acc6:	and    eax,0x7fff
   14004accb:	mov    DWORD PTR [rbx+0x4a90],eax
   14004acd1:	mov    rdi,QWORD PTR [rbx+0x4aa0]
   14004acd8:	add    rdi,0x1d0
   14004acdf:	shr    esi,0x18
   14004ace2:	mov    eax,DWORD PTR [rdi+0x24]
   14004ace5:	cmp    DWORD PTR [rdi+0x20],eax
   14004ace8:	jne    0x14004acf2
   14004acea:	mov    rcx,rdi
   14004aced:	call   0x140034744
   14004acf2:	mov    ecx,DWORD PTR [rdi+0x20]
   14004acf5:	mov    rax,QWORD PTR [rdi+0x18]
   14004acf9:	mov    BYTE PTR [rcx+rax*1],sil
   14004acfd:	add    DWORD PTR [rdi+0x20],r15d
   14004ad01:	shl    DWORD PTR [rbx+0x4a90],0x8
   14004ad08:	shl    DWORD PTR [rbx+0x4a88],0x8
   14004ad0f:	jmp    0x14004aca2
   14004ad11:	mov    rax,QWORD PTR [rbx+0x648]
   14004ad18:	add    DWORD PTR [rbx+0x670],r15d
   14004ad1f:	mov    rcx,QWORD PTR [rax+0xc]
   14004ad23:	mov    QWORD PTR [rbx+0x648],rcx
   14004ad2a:	test   rcx,rcx
   14004ad2d:	je     0x14004ae4f
   14004ad33:	movzx  eax,WORD PTR [rcx]
   14004ad36:	cmp    eax,DWORD PTR [rbx+0x668]
   14004ad3c:	je     0x14004ad11
   14004ad3e:	mov    r8d,ebp
   14004ad41:	mov    rdx,rbx
   14004ad44:	call   0x1400546ec
   14004ad49:	mov    eax,DWORD PTR [rbx+0x4a90]
   14004ad4f:	xor    edx,edx
   14004ad51:	div    DWORD PTR [rbx+0x4a9c]
   14004ad57:	mov    edx,DWORD PTR [rbx+0x4a94]
   14004ad5d:	mov    ecx,edx
   14004ad5f:	imul   ecx,eax
   14004ad62:	add    DWORD PTR [rbx+0x4a88],ecx
   14004ad68:	mov    ecx,DWORD PTR [rbx+0x4a98]
   14004ad6e:	sub    ecx,edx
   14004ad70:	imul   ecx,eax
   14004ad73:	mov    DWORD PTR [rbx+0x4a90],ecx
   14004ad79:	cmp    QWORD PTR [rbx+0x660],0x0
   14004ad81:	je     0x14004aca2
   14004ad87:	cmp    DWORD PTR [rbx+0x670],0x0
   14004ad8e:	jne    0x14004adb4
   14004ad90:	mov    rax,QWORD PTR [rbx+0x660]
   14004ad97:	mov    rcx,QWORD PTR [rax+0x2]
   14004ad9b:	cmp    rcx,QWORD PTR [rbx+0x4ca8]
   14004ada2:	jbe    0x14004adb4
   14004ada4:	mov    QWORD PTR [rbx+0x658],rcx
   14004adab:	mov    QWORD PTR [rbx+0x648],rcx
   14004adb2:	jmp    0x14004ade0
   14004adb4:	mov    rcx,rbx
   14004adb7:	call   0x140053b78
   14004adbc:	cmp    BYTE PTR [rbx+0xa80],0x0
   14004adc3:	jne    0x14004ade0
   14004adc5:	lea    rcx,[rbx+0x680]
   14004adcc:	mov    BYTE PTR [rbx+0xa80],r15b
   14004add3:	xor    edx,edx
   14004add5:	mov    r8d,0x100
   14004addb:	call   0x140058f40
   14004ade0:	mov    esi,DWORD PTR [rbx+0x4a88]
   14004ade6:	mov    ecx,DWORD PTR [rbx+0x4a90]
   14004adec:	lea    eax,[rsi+rcx*1]
   14004adef:	xor    eax,esi
   14004adf1:	cmp    eax,0x1000000
   14004adf6:	jb     0x14004ae0f
   14004adf8:	cmp    ecx,0x8000
   14004adfe:	jae    0x14004ae4f
   14004ae00:	mov    eax,esi
   14004ae02:	neg    eax
   14004ae04:	and    eax,0x7fff
   14004ae09:	mov    DWORD PTR [rbx+0x4a90],eax
   14004ae0f:	mov    rdi,QWORD PTR [rbx+0x4aa0]
   14004ae16:	add    rdi,0x1d0
   14004ae1d:	shr    esi,0x18
   14004ae20:	mov    eax,DWORD PTR [rdi+0x24]
   14004ae23:	cmp    DWORD PTR [rdi+0x20],eax
   14004ae26:	jne    0x14004ae30
   14004ae28:	mov    rcx,rdi
   14004ae2b:	call   0x140034744
   14004ae30:	mov    ecx,DWORD PTR [rdi+0x20]
   14004ae33:	mov    rax,QWORD PTR [rdi+0x18]
   14004ae37:	mov    BYTE PTR [rcx+rax*1],sil
   14004ae3b:	add    DWORD PTR [rdi+0x20],r15d
   14004ae3f:	shl    DWORD PTR [rbx+0x4a90],0x8
   14004ae46:	shl    DWORD PTR [rbx+0x4a88],0x8
   14004ae4d:	jmp    0x14004ade0
   14004ae4f:	mov    rbx,QWORD PTR [rsp+0x30]
   14004ae54:	mov    rbp,QWORD PTR [rsp+0x38]
   14004ae59:	mov    rsi,QWORD PTR [rsp+0x40]
   14004ae5e:	mov    rdi,QWORD PTR [rsp+0x48]
   14004ae63:	add    rsp,0x20
   14004ae67:	pop    r15
   14004ae69:	ret    
   14004ae6a:	int3   
   14004ae6b:	int3   
   14004ae6c:	mov    QWORD PTR [rsp+0x8],rbx
   14004ae71:	push   rdi
   14004ae72:	sub    rsp,0x20
   14004ae76:	mov    rdi,rcx
   14004ae79:	mov    bl,dl
   14004ae7b:	add    rcx,0x4a88
   14004ae82:	call   0x14004b130
   14004ae87:	test   bl,bl
   14004ae89:	je     0x14004aea7
   14004ae8b:	cmp    DWORD PTR [rdi+0x4ab0],0x0
   14004ae92:	je     0x14004aea7
   14004ae94:	and    DWORD PTR [rdi+0x4ab0],0x0
   14004ae9b:	mov    rcx,QWORD PTR [rdi+0x4b60]
   14004aea2:	call   0x14005a938
   14004aea7:	mov    rbx,QWORD PTR [rsp+0x30]
   14004aeac:	add    rsp,0x20
   14004aeb0:	pop    rdi
   14004aeb1:	ret    
   14004aeb2:	int3   
   14004aeb3:	int3   
   14004aeb4:	mov    QWORD PTR [rsp+0x8],rbx
   14004aeb9:	mov    QWORD PTR [rsp+0x10],rbp
   14004aebe:	mov    QWORD PTR [rsp+0x18],rsi
   14004aec3:	push   rdi
   14004aec4:	push   r12
   14004aec6:	push   r13
   14004aec8:	push   r14
   14004aeca:	push   r15
   14004aecc:	sub    rsp,0x20
   14004aed0:	cmp    QWORD PTR [rcx+0x648],0x0
   14004aed8:	mov    r12d,0x1
   14004aede:	movzx  r14d,BYTE PTR [rsp+0x70]
   14004aee4:	mov    r15d,r9d
   14004aee7:	cmove  r14d,r12d
   14004aeeb:	mov    QWORD PTR [rcx+0x4aa0],rdx
   14004aef2:	and    DWORD PTR [rcx+0x4a88],0x0
   14004aef9:	mov    ebx,r8d
   14004aefc:	or     DWORD PTR [rcx+0x4a90],0xffffffff
   14004af03:	mov    rsi,rcx
   14004af06:	mov    edi,0x55555556
   14004af0b:	cmp    r8d,0x10
   14004af0f:	jle    0x14004af27
   14004af11:	lea    ecx,[r8-0x10]
   14004af15:	mov    eax,edi
   14004af17:	imul   ecx
   14004af19:	mov    eax,edx
   14004af1b:	shr    eax,0x1f
   14004af1e:	add    edx,eax
   14004af20:	lea    eax,[rdx+rdx*2]
   14004af23:	sub    ecx,eax
   14004af25:	sub    ebx,ecx
   14004af27:	test   r14b,r14b
   14004af2a:	je     0x14004af45
   14004af2c:	lea    rcx,[rsi+0x4ab0]
   14004af33:	mov    edx,r9d
   14004af36:	call   0x14004e800
   14004af3b:	mov    edx,ebx
   14004af3d:	mov    rcx,rsi
   14004af40:	call   0x14004e720
   14004af45:	cmp    ebx,0x10
   14004af48:	jle    0x14004af5b
   14004af4a:	lea    ecx,[rbx-0x10]
   14004af4d:	mov    eax,edi
   14004af4f:	imul   ecx
   14004af51:	mov    ebx,edx
   14004af53:	shr    ebx,0x1f
   14004af56:	add    ebx,0x10
   14004af59:	add    ebx,edx
   14004af5b:	mov    ebp,DWORD PTR [rsp+0x78]
   14004af5f:	dec    ebx
   14004af61:	bts    ebx,0x7
   14004af65:	cmp    ebp,0xffffffff
   14004af68:	je     0x14004af6d
   14004af6a:	or     ebx,0x40
   14004af6d:	test   r14b,r14b
   14004af70:	je     0x14004af75
   14004af72:	or     ebx,0x20
   14004af75:	mov    rdi,QWORD PTR [rsi+0x4aa0]
   14004af7c:	mov    r13d,0x1d0
   14004af82:	add    rdi,r13
   14004af85:	mov    eax,DWORD PTR [rdi+0x24]
   14004af88:	cmp    DWORD PTR [rdi+0x20],eax
   14004af8b:	jne    0x14004af95
   14004af8d:	mov    rcx,rdi
   14004af90:	call   0x140034744
   14004af95:	mov    ecx,DWORD PTR [rdi+0x20]
   14004af98:	mov    rax,QWORD PTR [rdi+0x18]
   14004af9c:	mov    BYTE PTR [rcx+rax*1],bl
   14004af9f:	add    DWORD PTR [rdi+0x20],r12d
   14004afa3:	test   r14b,r14b
   14004afa6:	je     0x14004afd4
   14004afa8:	mov    rbx,QWORD PTR [rsi+0x4aa0]
   14004afaf:	add    rbx,r13
   14004afb2:	mov    eax,DWORD PTR [rbx+0x24]
   14004afb5:	cmp    DWORD PTR [rbx+0x20],eax
   14004afb8:	jne    0x14004afc2
   14004afba:	mov    rcx,rbx
   14004afbd:	call   0x140034744
   14004afc2:	mov    ecx,DWORD PTR [rbx+0x20]
   14004afc5:	sub    r15b,r12b
   14004afc8:	mov    rax,QWORD PTR [rbx+0x18]
   14004afcc:	mov    BYTE PTR [rcx+rax*1],r15b
   14004afd0:	add    DWORD PTR [rbx+0x20],r12d
   14004afd4:	cmp    ebp,0xffffffff
   14004afd7:	je     0x14004b002
   14004afd9:	mov    rbx,QWORD PTR [rsi+0x4aa0]
   14004afe0:	add    rbx,r13
   14004afe3:	mov    eax,DWORD PTR [rbx+0x24]
   14004afe6:	cmp    DWORD PTR [rbx+0x20],eax
   14004afe9:	jne    0x14004aff3
   14004afeb:	mov    rcx,rbx
   14004afee:	call   0x140034744
   14004aff3:	mov    ecx,DWORD PTR [rbx+0x20]
   14004aff6:	mov    rax,QWORD PTR [rbx+0x18]
   14004affa:	mov    BYTE PTR [rcx+rax*1],bpl
   14004affe:	add    DWORD PTR [rbx+0x20],r12d
   14004b002:	mov    rbx,QWORD PTR [rsp+0x50]
   14004b007:	mov    rbp,QWORD PTR [rsp+0x58]
   14004b00c:	mov    rsi,QWORD PTR [rsp+0x60]
   14004b011:	add    rsp,0x20
   14004b015:	pop    r15
   14004b017:	pop    r14
   14004b019:	pop    r13
   14004b01b:	pop    r12
   14004b01d:	pop    rdi
   14004b01e:	ret    
   14004b01f:	int3   
   14004b020:	mov    QWORD PTR [rsp+0x8],rbx
   14004b025:	mov    QWORD PTR [rsp+0x10],rsi
   14004b02a:	push   rdi
   14004b02b:	sub    rsp,0x20
   14004b02f:	cmp    QWORD PTR [rdx+0x38],0x0
   14004b034:	mov    rdi,rdx
   14004b037:	mov    rsi,rcx
   14004b03a:	jbe    0x14004b08c
   14004b03c:	mov    eax,DWORD PTR [rcx+0x4db0]
   14004b042:	lea    rbx,[rcx+0xe898]
   14004b049:	mov    DWORD PTR [rdx+0x88],eax
   14004b04f:	mov    rdx,QWORD PTR [rdx+0x30]
   14004b053:	mov    r8d,DWORD PTR [rcx+0x4db0]
   14004b05a:	add    rdx,0x24
   14004b05e:	mov    rcx,rbx
   14004b061:	call   0x14003645c
   14004b066:	mov    r8,QWORD PTR [rsi+0x4db0]
   14004b06d:	mov    rcx,rbx
   14004b070:	mov    rdx,QWORD PTR [rdi+0x30]
   14004b074:	sar    r8,0x20
   14004b078:	add    rdx,0x28
   14004b07c:	call   0x14003645c
   14004b081:	mov    rdx,rdi
   14004b084:	mov    rcx,rbx
   14004b087:	call   0x14003595c
   14004b08c:	mov    rbx,QWORD PTR [rsp+0x30]
   14004b091:	mov    rsi,QWORD PTR [rsp+0x38]
   14004b096:	add    rsp,0x20
   14004b09a:	pop    rdi
   14004b09b:	ret    
   14004b09c:	mov    rax,rsp
   14004b09f:	mov    QWORD PTR [rax+0x8],rbx
   14004b0a3:	mov    QWORD PTR [rax+0x10],rbp
   14004b0a7:	mov    QWORD PTR [rax+0x18],rsi
   14004b0ab:	mov    QWORD PTR [rax+0x20],rdi
   14004b0af:	push   r14
   14004b0b1:	sub    rsp,0x20
   14004b0b5:	movsxd rdi,r8d
   14004b0b8:	mov    r14,rdx
   14004b0bb:	mov    rsi,rcx
   14004b0be:	lea    eax,[rdi-0x1]
   14004b0c1:	movsxd r9,eax
   14004b0c4:	movzx  ebp,BYTE PTR [r9+rcx*1+0x2a]
   14004b0ca:	movzx  r9d,BYTE PTR [rdi+rcx*1+0x2a]
   14004b0d0:	cmp    ebp,r9d
   14004b0d3:	jne    0x14004b0da
   14004b0d5:	mov    rax,rdx
   14004b0d8:	jmp    0x14004b113
   14004b0da:	lea    edx,[rdi+0x1]
   14004b0dd:	call   0x140049c08
   14004b0e2:	mov    rbx,rax
   14004b0e5:	test   rax,rax
   14004b0e8:	je     0x14004b110
   14004b0ea:	lea    r8d,[rdi+rdi*4]
   14004b0ee:	mov    rdx,r14
   14004b0f1:	shl    r8d,0x2
   14004b0f5:	mov    rcx,rax
   14004b0f8:	call   0x140059180
   14004b0fd:	mov    rcx,QWORD PTR [rsi+rbp*8+0xc8]
   14004b105:	mov    QWORD PTR [r14],rcx
   14004b108:	mov    QWORD PTR [rsi+rbp*8+0xc8],r14
   14004b110:	mov    rax,rbx
   14004b113:	mov    rbx,QWORD PTR [rsp+0x30]
   14004b118:	mov    rbp,QWORD PTR [rsp+0x38]
   14004b11d:	mov    rsi,QWORD PTR [rsp+0x40]
   14004b122:	mov    rdi,QWORD PTR [rsp+0x48]
   14004b127:	add    rsp,0x20
   14004b12b:	pop    r14
   14004b12d:	ret    
   14004b12e:	int3   
   14004b12f:	int3   
   14004b130:	mov    QWORD PTR [rsp+0x8],rbx
   14004b135:	mov    QWORD PTR [rsp+0x10],rbp
   14004b13a:	mov    QWORD PTR [rsp+0x18],rsi
   14004b13f:	push   rdi
   14004b140:	sub    rsp,0x20
   14004b144:	mov    rdi,rcx
   14004b147:	mov    esi,0x4
   14004b14c:	mov    rbx,QWORD PTR [rdi+0x18]
   14004b150:	movzx  ebp,BYTE PTR [rdi+0x3]
   14004b154:	add    rbx,0x1d0
   14004b15b:	mov    eax,DWORD PTR [rbx+0x24]
   14004b15e:	cmp    DWORD PTR [rbx+0x20],eax
   14004b161:	jne    0x14004b16b
   14004b163:	mov    rcx,rbx
   14004b166:	call   0x140034744
   14004b16b:	mov    ecx,DWORD PTR [rbx+0x20]
   14004b16e:	mov    rax,QWORD PTR [rbx+0x18]
   14004b172:	mov    BYTE PTR [rcx+rax*1],bpl
   14004b176:	inc    DWORD PTR [rbx+0x20]
   14004b179:	shl    DWORD PTR [rdi],0x8
   14004b17c:	sub    rsi,0x1
   14004b180:	jne    0x14004b14c
   14004b182:	mov    rbx,QWORD PTR [rsp+0x30]
   14004b187:	mov    rbp,QWORD PTR [rsp+0x38]
   14004b18c:	mov    rsi,QWORD PTR [rsp+0x40]
   14004b191:	add    rsp,0x20
   14004b195:	pop    rdi
   14004b196:	ret    
   14004b197:	int3   
   14004b198:	xor    r9d,r9d
   14004b19b:	add    rcx,0x100
   14004b1a2:	mov    rax,QWORD PTR [rcx]
   14004b1a5:	cmp    rdx,rax
   14004b1a8:	jb     0x14004b1ba
   14004b1aa:	inc    r9d
   14004b1ad:	add    rcx,0x8
   14004b1b1:	cmp    r9d,0x20
   14004b1b5:	jb     0x14004b1a2
   14004b1b7:	xor    eax,eax
   14004b1b9:	ret    
   14004b1ba:	sub    rax,rdx
   14004b1bd:	cmp    rax,r8
   14004b1c0:	cmovb  r8,rax
   14004b1c4:	mov    rax,r8
   14004b1c7:	ret    
   14004b1c8:	mov    QWORD PTR [rsp+0x8],rbx
   14004b1cd:	mov    QWORD PTR [rsp+0x10],rbp
   14004b1d2:	mov    QWORD PTR [rsp+0x18],rsi
   14004b1d7:	push   rdi
   14004b1d8:	sub    rsp,0x30
   14004b1dc:	mov    rbx,rcx
   14004b1df:	add    rcx,0x8
   14004b1e3:	call   0x140023e1c
   14004b1e8:	mov    edx,eax
   14004b1ea:	lea    r9,[rip+0x3690f]        # 0x140081b00
   14004b1f1:	lea    rax,[rip+0x36928]        # 0x140081b20
   14004b1f8:	mov    r8d,0x5
   14004b1fe:	mov    rcx,rbx
   14004b201:	mov    QWORD PTR [rsp+0x20],rax
   14004b206:	call   0x14004ab10
   14004b20b:	cmp    eax,0x100
   14004b210:	jae    0x14004b276
   14004b212:	mov    edi,eax
   14004b214:	jmp    0x14004b22c
   14004b216:	lea    r8,[rbx+0x57ba]
   14004b21d:	mov    rcx,rbx
   14004b220:	lea    rdx,[rbx+0x53ba]
   14004b227:	call   0x14004a244
   14004b22c:	movzx  edx,WORD PTR [rbx+rdi*2+0x53ba]
   14004b234:	movzx  ecx,dl
   14004b237:	mov    eax,edx
   14004b239:	shr    eax,0x8
   14004b23c:	inc    edx
   14004b23e:	mov    DWORD PTR [rbx+0x58bc],eax
   14004b244:	movzx  r8d,BYTE PTR [rcx+rbx*1+0x57ba]
   14004b24d:	lea    eax,[r8+0x1]
   14004b251:	mov    BYTE PTR [rcx+rbx*1+0x57ba],al
   14004b258:	test   dl,dl
   14004b25a:	je     0x14004b216
   14004b25c:	movzx  eax,WORD PTR [rbx+r8*2+0x53ba]
   14004b265:	mov    WORD PTR [rbx+rdi*2+0x53ba],ax
   14004b26d:	mov    WORD PTR [rbx+r8*2+0x53ba],dx
   14004b276:	mov    rbx,QWORD PTR [rsp+0x40]
   14004b27b:	mov    rbp,QWORD PTR [rsp+0x48]
   14004b280:	mov    rsi,QWORD PTR [rsp+0x50]
   14004b285:	add    rsp,0x30
   14004b289:	pop    rdi
   14004b28a:	ret    
   14004b28b:	int3   
   14004b28c:	rex push rbp
   14004b28e:	mov    rbp,rsp
   14004b291:	sub    rsp,0x20
   14004b295:	mov    rax,QWORD PTR [rcx+0xb8]
   14004b29c:	xor    r10d,r10d
   14004b29f:	mov    r9,rcx
   14004b2a2:	cmp    rax,QWORD PTR [rcx+0xc0]
   14004b2a9:	je     0x14004b2ae
   14004b2ab:	mov    BYTE PTR [rax],r10b
   14004b2ae:	lea    rax,[rbp-0x20]
   14004b2b2:	mov    r8,r10
   14004b2b5:	mov    QWORD PTR [rbp-0x14],rax
   14004b2b9:	lea    rdx,[rcx+0xc8]
   14004b2c0:	lea    rax,[rbp-0x20]
   14004b2c4:	mov    r11d,0xffff
   14004b2ca:	mov    QWORD PTR [rbp-0x1c],rax
   14004b2ce:	jmp    0x14004b303
   14004b2d0:	mov    rcx,QWORD PTR [rdx]
   14004b2d3:	mov    rax,QWORD PTR [rcx]
   14004b2d6:	mov    QWORD PTR [rdx],rax
   14004b2d9:	lea    rax,[rbp-0x20]
   14004b2dd:	mov    QWORD PTR [rcx+0xc],rax
   14004b2e1:	mov    rax,QWORD PTR [rbp-0x1c]
   14004b2e5:	mov    QWORD PTR [rcx+0x4],rax
   14004b2e9:	mov    rax,QWORD PTR [rbp-0x1c]
   14004b2ed:	mov    QWORD PTR [rax+0xc],rcx
   14004b2f1:	mov    QWORD PTR [rbp-0x1c],rcx
   14004b2f5:	mov    WORD PTR [rcx],r11w
   14004b2f9:	movzx  eax,BYTE PTR [r9+r8*1+0x4]
   14004b2ff:	mov    WORD PTR [rcx+0x2],ax
   14004b303:	cmp    QWORD PTR [rdx],r10
   14004b306:	jne    0x14004b2d0
   14004b308:	inc    r8
   14004b30b:	add    rdx,0x8
   14004b30f:	cmp    r8,0x26
   14004b313:	jl     0x14004b303
   14004b315:	mov    rdx,QWORD PTR [rbp-0x1c]
   14004b319:	lea    rax,[rbp-0x20]
   14004b31d:	cmp    rdx,rax
   14004b320:	je     0x14004b43f
   14004b326:	jmp    0x14004b35c
   14004b328:	movzx  ecx,WORD PTR [r8+0x2]
   14004b32d:	movzx  eax,WORD PTR [rdx+0x2]
   14004b331:	add    ecx,eax
   14004b333:	cmp    ecx,0x10000
   14004b339:	jge    0x14004b371
   14004b33b:	mov    rcx,QWORD PTR [r8+0xc]
   14004b33f:	mov    rax,QWORD PTR [r8+0x4]
   14004b343:	mov    QWORD PTR [rcx+0x4],rax
   14004b347:	mov    rax,QWORD PTR [r8+0xc]
   14004b34b:	mov    rcx,QWORD PTR [r8+0x4]
   14004b34f:	mov    QWORD PTR [rcx+0xc],rax
   14004b353:	movzx  eax,WORD PTR [r8+0x2]
   14004b358:	add    WORD PTR [rdx+0x2],ax
   14004b35c:	movzx  eax,WORD PTR [rdx+0x2]
   14004b360:	lea    r8d,[rax+rax*4]
   14004b364:	shl    r8d,0x2
   14004b368:	add    r8,rdx
   14004b36b:	cmp    WORD PTR [r8],r11w
   14004b36f:	je     0x14004b328
   14004b371:	mov    rdx,QWORD PTR [rdx+0x4]
   14004b375:	lea    rax,[rbp-0x20]
   14004b379:	cmp    rdx,rax
   14004b37c:	jne    0x14004b35c
   14004b37e:	jmp    0x14004b43b
   14004b383:	mov    rcx,QWORD PTR [rdx+0xc]
   14004b387:	mov    rax,QWORD PTR [rdx+0x4]
   14004b38b:	mov    QWORD PTR [rcx+0x4],rax
   14004b38f:	mov    rcx,QWORD PTR [rdx+0x4]
   14004b393:	mov    rax,QWORD PTR [rdx+0xc]
   14004b397:	mov    QWORD PTR [rcx+0xc],rax
   14004b39b:	movzx  edx,WORD PTR [r10+0x2]
   14004b3a0:	cmp    edx,0x80
   14004b3a6:	jle    0x14004b3da
   14004b3a8:	lea    eax,[rdx-0x81]
   14004b3ae:	shr    eax,0x7
   14004b3b1:	inc    eax
   14004b3b3:	mov    ecx,eax
   14004b3b5:	neg    eax
   14004b3b7:	shl    eax,0x7
   14004b3ba:	add    edx,eax
   14004b3bc:	mov    rax,QWORD PTR [r9+0x1f0]
   14004b3c3:	mov    QWORD PTR [r10],rax
   14004b3c6:	mov    QWORD PTR [r9+0x1f0],r10
   14004b3cd:	add    r10,0xa00
   14004b3d4:	sub    rcx,0x1
   14004b3d8:	jne    0x14004b3bc
   14004b3da:	lea    eax,[rdx-0x1]
   14004b3dd:	movsxd rcx,eax
   14004b3e0:	movzx  r8d,BYTE PTR [rcx+r9*1+0x2a]
   14004b3e6:	mov    r11d,r8d
   14004b3e9:	movzx  eax,BYTE PTR [r8+r9*1+0x4]
   14004b3ef:	cmp    eax,edx
   14004b3f1:	je     0x14004b428
   14004b3f3:	mov    ecx,edx
   14004b3f5:	dec    r8d
   14004b3f8:	movsxd r11,r8d
   14004b3fb:	movzx  eax,BYTE PTR [r11+r9*1+0x4]
   14004b401:	sub    ecx,eax
   14004b403:	sub    edx,ecx
   14004b405:	lea    r8d,[rcx-0x1]
   14004b409:	lea    edx,[rdx+rdx*4]
   14004b40c:	movsxd rcx,r8d
   14004b40f:	shl    edx,0x2
   14004b412:	add    rdx,r10
   14004b415:	mov    rax,QWORD PTR [r9+rcx*8+0xc8]
   14004b41d:	mov    QWORD PTR [rdx],rax
   14004b420:	mov    QWORD PTR [r9+rcx*8+0xc8],rdx
   14004b428:	mov    rax,QWORD PTR [r9+r11*8+0xc8]
   14004b430:	mov    QWORD PTR [r10],rax
   14004b433:	mov    QWORD PTR [r9+r11*8+0xc8],r10
   14004b43b:	mov    rdx,QWORD PTR [rbp-0x1c]
   14004b43f:	lea    rax,[rbp-0x20]
   14004b443:	mov    r10,rdx
   14004b446:	cmp    rdx,rax
   14004b449:	jne    0x14004b383
   14004b44f:	add    rsp,0x20
   14004b453:	pop    rbp
   14004b454:	ret    
   14004b455:	int3   
   14004b456:	int3   
   14004b457:	int3   
   14004b458:	mov    QWORD PTR [rsp+0x8],rbx
   14004b45d:	mov    QWORD PTR [rsp+0x10],rbp
   14004b462:	mov    QWORD PTR [rsp+0x18],rsi
   14004b467:	push   rdi
   14004b468:	push   r13
   14004b46a:	push   r14
   14004b46c:	sub    rsp,0x30
   14004b470:	lea    rbp,[rcx+0x8]
   14004b474:	mov    rsi,rcx
   14004b477:	mov    rcx,rbp
   14004b47a:	call   0x140023e1c
   14004b47f:	mov    ebx,eax
   14004b481:	lea    r13,[rip+0x36698]        # 0x140081b20
   14004b488:	mov    eax,DWORD PTR [rsi+0x58c0]
   14004b48e:	cmp    eax,0x75ff
   14004b493:	jbe    0x14004b4ab
   14004b495:	lea    rax,[rip+0x3672c]        # 0x140081bc8
   14004b49c:	mov    r8d,0x8
   14004b4a2:	lea    r9,[rip+0x36707]        # 0x140081bb0
   14004b4a9:	jmp    0x14004b514
   14004b4ab:	cmp    eax,0x5dff
   14004b4b0:	jbe    0x14004b4c8
   14004b4b2:	lea    rax,[rip+0x366bf]        # 0x140081b78
   14004b4b9:	mov    r8d,0x6
   14004b4bf:	lea    r9,[rip+0x36692]        # 0x140081b58
   14004b4c6:	jmp    0x14004b514
   14004b4c8:	cmp    eax,0x35ff
   14004b4cd:	jbe    0x14004b4e3
   14004b4cf:	mov    QWORD PTR [rsp+0x20],r13
   14004b4d4:	lea    r9,[rip+0x36625]        # 0x140081b00
   14004b4db:	mov    r8d,0x5
   14004b4e1:	jmp    0x14004b519
   14004b4e3:	cmp    eax,0xdff
   14004b4e8:	jbe    0x14004b500
   14004b4ea:	lea    rax,[rip+0x365d7]        # 0x140081ac8
   14004b4f1:	mov    r8d,0x5
   14004b4f7:	lea    r9,[rip+0x365aa]        # 0x140081aa8
   14004b4fe:	jmp    0x14004b514
   14004b500:	lea    rax,[rip+0x36569]        # 0x140081a70
   14004b507:	mov    r8d,0x4
   14004b50d:	lea    r9,[rip+0x36534]        # 0x140081a48
   14004b514:	mov    QWORD PTR [rsp+0x20],rax
   14004b519:	mov    edx,ebx
   14004b51b:	mov    rcx,rsi
   14004b51e:	call   0x14004ab10
   14004b523:	xor    edi,edi
   14004b525:	movzx  edx,al
   14004b528:	cmp    DWORD PTR [rsi+0x58dc],edi
   14004b52e:	je     0x14004b5f1
   14004b534:	test   al,al
   14004b536:	jne    0x14004b546
   14004b538:	cmp    ebx,0xfff
   14004b53e:	mov    eax,0x100
   14004b543:	cmova  edx,eax
   14004b546:	dec    edx
   14004b548:	cmp    edx,0xffffffff
   14004b54b:	jne    0x14004b617
   14004b551:	mov    rcx,rbp
   14004b554:	call   0x140023e1c
   14004b559:	mov    edx,0x1
   14004b55e:	mov    rcx,rbp
   14004b561:	mov    r14d,eax
   14004b564:	call   0x140023e04
   14004b569:	bt     r14d,0xf
   14004b56e:	jae    0x14004b57c
   14004b570:	mov    QWORD PTR [rsi+0x58d8],rdi
   14004b577:	jmp    0x14004b6d9
   14004b57c:	mov    edx,0x1
   14004b581:	mov    rcx,rbp
   14004b584:	call   0x140023e04
   14004b589:	mov    rcx,rbp
   14004b58c:	call   0x140023e1c
   14004b591:	mov    edx,eax
   14004b593:	mov    QWORD PTR [rsp+0x20],r13
   14004b598:	lea    r9,[rip+0x36561]        # 0x140081b00
   14004b59f:	mov    r8d,0x5
   14004b5a5:	mov    rcx,rsi
   14004b5a8:	call   0x14004ab10
   14004b5ad:	mov    rcx,rbp
   14004b5b0:	mov    ebx,eax
   14004b5b2:	call   0x140023e1c
   14004b5b7:	mov    edi,eax
   14004b5b9:	shl    ebx,0x5
   14004b5bc:	shr    edi,0xb
   14004b5bf:	mov    edx,0x5
   14004b5c4:	mov    rcx,rbp
   14004b5c7:	or     edi,ebx
   14004b5c9:	call   0x140023e04
   14004b5ce:	and    r14d,0x4000
   14004b5d5:	mov    edx,edi
   14004b5d7:	neg    r14d
   14004b5da:	mov    rcx,rsi
   14004b5dd:	sbb    r8d,r8d
   14004b5e0:	neg    r8d
   14004b5e3:	add    r8d,0x3
   14004b5e7:	call   0x140049fb8
   14004b5ec:	jmp    0x14004b6d9
   14004b5f1:	mov    ecx,DWORD PTR [rsi+0x58d8]
   14004b5f7:	lea    eax,[rcx+0x1]
   14004b5fa:	mov    DWORD PTR [rsi+0x58d8],eax
   14004b600:	cmp    ecx,0x10
   14004b603:	jl     0x14004b617
   14004b605:	cmp    DWORD PTR [rsi+0x58e4],edi
   14004b60b:	jne    0x14004b617
   14004b60d:	mov    DWORD PTR [rsi+0x58dc],0x1
   14004b617:	mov    ecx,DWORD PTR [rsi+0x58c0]
   14004b61d:	add    DWORD PTR [rsi+0x58e8],0x10
   14004b624:	add    ecx,edx
   14004b626:	mov    eax,ecx
   14004b628:	shr    eax,0x8
   14004b62b:	sub    ecx,eax
   14004b62d:	cmp    DWORD PTR [rsi+0x58e8],0xff
   14004b637:	mov    DWORD PTR [rsi+0x58c0],ecx
   14004b63d:	jbe    0x14004b64f
   14004b63f:	shr    DWORD PTR [rsi+0x58ec],1
   14004b645:	mov    DWORD PTR [rsi+0x58e8],0x90
   14004b64f:	mov    rcx,QWORD PTR [rsi+0xc0]
   14004b656:	mov    r14d,0xa1
   14004b65c:	movsxd rbx,edx
   14004b65f:	mov    rdx,QWORD PTR [rsi+0x4b90]
   14004b666:	mov    al,BYTE PTR [rsi+rbx*2+0x4dbb]
   14004b66d:	mov    BYTE PTR [rdx+rcx*1],al
   14004b670:	inc    QWORD PTR [rsi+0xc0]
   14004b677:	dec    QWORD PTR [rsi+0x4da0]
   14004b67e:	jmp    0x14004b696
   14004b680:	lea    r8,[rsi+0x55ba]
   14004b687:	mov    rcx,rsi
   14004b68a:	lea    rdx,[rsi+0x4dba]
   14004b691:	call   0x14004a244
   14004b696:	movzx  edx,WORD PTR [rsi+rbx*2+0x4dba]
   14004b69e:	movzx  ecx,dl
   14004b6a1:	inc    edx
   14004b6a3:	movzx  r8d,BYTE PTR [rcx+rsi*1+0x55ba]
   14004b6ac:	lea    eax,[r8+0x1]
   14004b6b0:	mov    BYTE PTR [rcx+rsi*1+0x55ba],al
   14004b6b7:	movzx  eax,dl
   14004b6ba:	cmp    eax,r14d
   14004b6bd:	ja     0x14004b680
   14004b6bf:	movzx  eax,WORD PTR [rsi+r8*2+0x4dba]
   14004b6c8:	mov    WORD PTR [rsi+rbx*2+0x4dba],ax
   14004b6d0:	mov    WORD PTR [rsi+r8*2+0x4dba],dx
   14004b6d9:	mov    rbx,QWORD PTR [rsp+0x50]
   14004b6de:	mov    rbp,QWORD PTR [rsp+0x58]
   14004b6e3:	mov    rsi,QWORD PTR [rsp+0x60]
   14004b6e8:	add    rsp,0x30
   14004b6ec:	pop    r14
   14004b6ee:	pop    r13
   14004b6f0:	pop    rdi
   14004b6f1:	ret    
   14004b6f2:	int3   
   14004b6f3:	int3   
   14004b6f4:	mov    QWORD PTR [rsp+0x8],rbx
   14004b6f9:	mov    QWORD PTR [rsp+0x10],rbp
   14004b6fe:	mov    QWORD PTR [rsp+0x18],rsi
   14004b703:	push   rdi
   14004b704:	push   r12
   14004b706:	push   r13
   14004b708:	push   r14
   14004b70a:	push   r15
   14004b70c:	sub    rsp,0x40
   14004b710:	mov    rsi,rdx
   14004b713:	mov    r15,rcx
   14004b716:	call   0x14004e0ac
   14004b71b:	xor    r14d,r14d
   14004b71e:	xor    edi,edi
   14004b720:	test   rsi,rsi
   14004b723:	je     0x14004b7a2
   14004b725:	cmp    r14d,0x20
   14004b729:	jae    0x14004b79d
   14004b72b:	xor    edx,edx
   14004b72d:	mov    r13d,r14d
   14004b730:	mov    rbx,rsi
   14004b733:	mov    ecx,0x20
   14004b738:	sub    rbx,rdi
   14004b73b:	sub    rcx,r13
   14004b73e:	mov    rax,rbx
   14004b741:	mov    r12d,0x400000
   14004b747:	div    rcx
   14004b74a:	cmp    rax,r12
   14004b74d:	cmova  r12,rax
   14004b751:	xor    ebp,ebp
   14004b753:	jmp    0x14004b76f
   14004b755:	mov    rcx,rbx
   14004b758:	call   0x14005d520
   14004b75d:	mov    rbp,rax
   14004b760:	test   rax,rax
   14004b763:	jne    0x14004b774
   14004b765:	mov    rcx,rbx
   14004b768:	shr    rcx,0x5
   14004b76c:	sub    rbx,rcx
   14004b76f:	cmp    rbx,r12
   14004b772:	jae    0x14004b755
   14004b774:	test   rbp,rbp
   14004b777:	je     0x14004b7f1
   14004b779:	mov    r8,rbx
   14004b77c:	xor    edx,edx
   14004b77e:	mov    rcx,rbp
   14004b781:	call   0x140058f40
   14004b786:	add    rdi,rbx
   14004b789:	mov    QWORD PTR [r15+r14*8],rbp
   14004b78d:	mov    QWORD PTR [r15+r14*8+0x100],rdi
   14004b795:	inc    r14d
   14004b798:	cmp    rdi,rsi
   14004b79b:	jb     0x14004b725
   14004b79d:	cmp    rdi,rsi
   14004b7a0:	jb     0x14004b7c0
   14004b7a2:	lea    r11,[rsp+0x40]
   14004b7a7:	mov    rbx,QWORD PTR [r11+0x30]
   14004b7ab:	mov    rbp,QWORD PTR [r11+0x38]
   14004b7af:	mov    rsi,QWORD PTR [r11+0x40]
   14004b7b3:	mov    rsp,r11
   14004b7b6:	pop    r15
   14004b7b8:	pop    r14
   14004b7ba:	pop    r13
   14004b7bc:	pop    r12
   14004b7be:	pop    rdi
   14004b7bf:	ret    
   14004b7c0:	xor    eax,eax
   14004b7c2:	lea    rdx,[rip+0x3407f]        # 0x14007f848
   14004b7c9:	mov    QWORD PTR [rsp+0x30],rax
   14004b7ce:	lea    rcx,[rsp+0x20]
   14004b7d3:	lea    rax,[rip+0x21296]        # 0x14006ca70
   14004b7da:	mov    QWORD PTR [rsp+0x28],rax
   14004b7df:	lea    rax,[rip+0x25be2]        # 0x1400713c8
   14004b7e6:	mov    QWORD PTR [rsp+0x20],rax
   14004b7eb:	call   0x140058734
   14004b7f0:	int3   
   14004b7f1:	xor    eax,eax
   14004b7f3:	lea    rdx,[rip+0x3404e]        # 0x14007f848
   14004b7fa:	mov    QWORD PTR [rsp+0x30],rax
   14004b7ff:	lea    rcx,[rsp+0x20]
   14004b804:	lea    rax,[rip+0x21265]        # 0x14006ca70
   14004b80b:	mov    QWORD PTR [rsp+0x28],rax
   14004b810:	lea    rax,[rip+0x25bb1]        # 0x1400713c8
   14004b817:	mov    QWORD PTR [rsp+0x20],rax
   14004b81c:	call   0x140058734
   14004b821:	int3   
   14004b822:	int3   
   14004b823:	int3   
   14004b824:	mov    QWORD PTR [rsp+0x8],rbx
   14004b829:	mov    QWORD PTR [rsp+0x10],rbp
   14004b82e:	mov    QWORD PTR [rsp+0x18],rsi
   14004b833:	push   rdi
   14004b834:	sub    rsp,0x40
   14004b838:	mov    sil,r8b
   14004b83b:	mov    rdi,rdx
   14004b83e:	mov    rbx,rcx
   14004b841:	test   rdx,rdx
   14004b844:	jne    0x14004b852
   14004b846:	lea    rcx,[rip+0x49013]        # 0x140094860
   14004b84d:	call   0x14001bd24
   14004b852:	mov    eax,0x40000
   14004b857:	cmp    rdi,rax
   14004b85a:	cmovb  rdi,rax
   14004b85e:	cmp    rdi,QWORD PTR [rbx+0xe960]
   14004b865:	jbe    0x14004b999
   14004b86b:	mov    rax,rdi
   14004b86e:	movabs rcx,0x100000000
   14004b878:	and    rax,0xffffffffffff0000
   14004b87e:	cmp    rax,rcx
   14004b881:	ja     0x14004b999
   14004b887:	test   sil,sil
   14004b88a:	je     0x14004b8b0
   14004b88c:	cmp    QWORD PTR [rbx+0x4b90],0x0
   14004b894:	jne    0x14004b89f
   14004b896:	cmp    BYTE PTR [rbx+0x4d98],0x0
   14004b89d:	je     0x14004b8b0
   14004b89f:	cmp    BYTE PTR [rbx+0x4d98],0x0
   14004b8a6:	mov    bpl,0x1
   14004b8a9:	je     0x14004b8c0
   14004b8ab:	jmp    0x14004b9ae
   14004b8b0:	xor    bpl,bpl
   14004b8b3:	cmp    BYTE PTR [rbx+0x4d98],bpl
   14004b8ba:	je     0x14004b8c0
   14004b8bc:	xor    esi,esi
   14004b8be:	jmp    0x14004b8d0
   14004b8c0:	mov    rcx,rdi
   14004b8c3:	call   0x14005d520
   14004b8c8:	mov    rsi,rax
   14004b8cb:	test   rax,rax
   14004b8ce:	jne    0x14004b915
   14004b8d0:	test   bpl,bpl
   14004b8d3:	jne    0x14004b9df
   14004b8d9:	cmp    rdi,0x1000000
   14004b8e0:	jb     0x14004b9df
   14004b8e6:	mov    rcx,QWORD PTR [rbx+0x4b90]
   14004b8ed:	test   rcx,rcx
   14004b8f0:	je     0x14004b8ff
   14004b8f2:	call   0x14005a938
   14004b8f7:	and    QWORD PTR [rbx+0x4b90],0x0
   14004b8ff:	lea    rcx,[rbx+0x4b98]
   14004b906:	mov    rdx,rdi
   14004b909:	call   0x14004b6f4
   14004b90e:	mov    BYTE PTR [rbx+0x4d98],0x1
   14004b915:	cmp    BYTE PTR [rbx+0x4d98],0x0
   14004b91c:	jne    0x14004b987
   14004b91e:	mov    r8,rdi
   14004b921:	xor    edx,edx
   14004b923:	mov    rcx,rsi
   14004b926:	call   0x140058f40
   14004b92b:	test   bpl,bpl
   14004b92e:	je     0x14004b96f
   14004b930:	mov    r9d,0x1
   14004b936:	jmp    0x14004b966
   14004b938:	mov    r8,QWORD PTR [rbx+0xc0]
   14004b93f:	lea    rcx,[rdi-0x1]
   14004b943:	mov    rdx,QWORD PTR [rbx+0xe960]
   14004b94a:	sub    r8,r9
   14004b94d:	mov    rax,QWORD PTR [rbx+0x4b90]
   14004b954:	dec    rdx
   14004b957:	and    rdx,r8
   14004b95a:	and    rcx,r8
   14004b95d:	inc    r9
   14004b960:	mov    al,BYTE PTR [rdx+rax*1]
   14004b963:	mov    BYTE PTR [rcx+rsi*1],al
   14004b966:	cmp    r9,QWORD PTR [rbx+0xe960]
   14004b96d:	jbe    0x14004b938
   14004b96f:	mov    rcx,QWORD PTR [rbx+0x4b90]
   14004b976:	test   rcx,rcx
   14004b979:	je     0x14004b980
   14004b97b:	call   0x14005a938
   14004b980:	mov    QWORD PTR [rbx+0x4b90],rsi
   14004b987:	lea    rax,[rdi-0x1]
   14004b98b:	mov    QWORD PTR [rbx+0xe960],rdi
   14004b992:	mov    QWORD PTR [rbx+0xe968],rax
   14004b999:	mov    rbx,QWORD PTR [rsp+0x50]
   14004b99e:	mov    rbp,QWORD PTR [rsp+0x58]
   14004b9a3:	mov    rsi,QWORD PTR [rsp+0x60]
   14004b9a8:	add    rsp,0x40
   14004b9ac:	pop    rdi
   14004b9ad:	ret    
   14004b9ae:	xor    eax,eax
   14004b9b0:	lea    rdx,[rip+0x33e91]        # 0x14007f848
   14004b9b7:	mov    QWORD PTR [rsp+0x30],rax
   14004b9bc:	lea    rcx,[rsp+0x20]
   14004b9c1:	lea    rax,[rip+0x210a8]        # 0x14006ca70
   14004b9c8:	mov    QWORD PTR [rsp+0x28],rax
   14004b9cd:	lea    rax,[rip+0x259f4]        # 0x1400713c8
   14004b9d4:	mov    QWORD PTR [rsp+0x20],rax
   14004b9d9:	call   0x140058734
   14004b9de:	int3   
   14004b9df:	xor    eax,eax
   14004b9e1:	lea    rdx,[rip+0x33e60]        # 0x14007f848
   14004b9e8:	mov    QWORD PTR [rsp+0x30],rax
   14004b9ed:	lea    rcx,[rsp+0x20]
   14004b9f2:	lea    rax,[rip+0x21077]        # 0x14006ca70
   14004b9f9:	mov    QWORD PTR [rsp+0x28],rax
   14004b9fe:	lea    rax,[rip+0x259c3]        # 0x1400713c8
   14004ba05:	mov    QWORD PTR [rsp+0x20],rax
   14004ba0a:	call   0x140058734
   14004ba0f:	int3   
   14004ba10:	mov    QWORD PTR [rsp+0x8],rbx
   14004ba15:	mov    QWORD PTR [rsp+0x10],rsi
   14004ba1a:	push   rdi
   14004ba1b:	sub    rsp,0x20
   14004ba1f:	and    DWORD PTR [rcx+0x4],0x0
   14004ba23:	mov    rbx,rcx
   14004ba26:	and    DWORD PTR [rcx],0x0
   14004ba29:	mov    esi,0x4
   14004ba2e:	or     DWORD PTR [rcx+0x8],0xffffffff
   14004ba32:	mov    QWORD PTR [rcx+0x20],rdx
   14004ba36:	mov    rdi,QWORD PTR [rbx+0x20]
   14004ba3a:	cmp    DWORD PTR [rdi+0x8],0x7fe2
   14004ba41:	jle    0x14004ba4b
   14004ba43:	mov    rcx,rdi
   14004ba46:	call   0x14004eb48
   14004ba4b:	movsxd rdx,DWORD PTR [rdi+0x8]
   14004ba4f:	mov    rax,QWORD PTR [rdi+0x18]
   14004ba53:	movzx  r8d,BYTE PTR [rax+rdx*1]
   14004ba58:	lea    eax,[rdx+0x1]
   14004ba5b:	mov    DWORD PTR [rdi+0x8],eax
   14004ba5e:	mov    eax,DWORD PTR [rbx+0x4]
   14004ba61:	shl    eax,0x8
   14004ba64:	or     eax,r8d
   14004ba67:	mov    DWORD PTR [rbx+0x4],eax
   14004ba6a:	sub    rsi,0x1
   14004ba6e:	jne    0x14004ba36
   14004ba70:	mov    rbx,QWORD PTR [rsp+0x30]
   14004ba75:	mov    rsi,QWORD PTR [rsp+0x38]
   14004ba7a:	add    rsp,0x20
   14004ba7e:	pop    rdi
   14004ba7f:	ret    
   14004ba80:	mov    QWORD PTR [rsp+0x8],rbx
   14004ba85:	mov    QWORD PTR [rsp+0x10],rsi
   14004ba8a:	push   rdi
   14004ba8b:	sub    rsp,0x20
   14004ba8f:	mov    rbx,rcx
   14004ba92:	test   dl,dl
   14004ba94:	jne    0x14004bb0b
   14004ba96:	and    QWORD PTR [rcx+0xe940],0x0
   14004ba9e:	xor    edi,edi
   14004baa0:	and    DWORD PTR [rcx+0xe958],0x0
   14004baa7:	cmp    QWORD PTR [rcx+0xe900],rdi
   14004baae:	jbe    0x14004bb03
   14004bab0:	mov    rax,QWORD PTR [rbx+0xe8f8]
   14004bab7:	mov    rsi,QWORD PTR [rax+rdi*8]
   14004babb:	test   rsi,rsi
   14004babe:	je     0x14004baf7
   14004bac0:	mov    rcx,QWORD PTR [rsi+0x68]
   14004bac4:	test   rcx,rcx
   14004bac7:	je     0x14004bace
   14004bac9:	call   0x14005a938
   14004bace:	mov    rcx,QWORD PTR [rsi+0x48]
   14004bad2:	test   rcx,rcx
   14004bad5:	je     0x14004badc
   14004bad7:	call   0x14005a938
   14004badc:	mov    rcx,QWORD PTR [rsi+0x18]
   14004bae0:	test   rcx,rcx
   14004bae3:	je     0x14004baea
   14004bae5:	call   0x14005a938
   14004baea:	mov    edx,0xb8
   14004baef:	mov    rcx,rsi
   14004baf2:	call   0x140055de8
   14004baf7:	inc    rdi
   14004bafa:	cmp    rdi,QWORD PTR [rbx+0xe900]
   14004bb01:	jb     0x14004bab0
   14004bb03:	and    QWORD PTR [rbx+0xe900],0x0
   14004bb0b:	xor    edi,edi
   14004bb0d:	cmp    QWORD PTR [rbx+0xe920],rdi
   14004bb14:	jbe    0x14004bb69
   14004bb16:	mov    rax,QWORD PTR [rbx+0xe918]
   14004bb1d:	mov    rsi,QWORD PTR [rax+rdi*8]
   14004bb21:	test   rsi,rsi
   14004bb24:	je     0x14004bb5d
   14004bb26:	mov    rcx,QWORD PTR [rsi+0x68]
   14004bb2a:	test   rcx,rcx
   14004bb2d:	je     0x14004bb34
   14004bb2f:	call   0x14005a938
   14004bb34:	mov    rcx,QWORD PTR [rsi+0x48]
   14004bb38:	test   rcx,rcx
   14004bb3b:	je     0x14004bb42
   14004bb3d:	call   0x14005a938
   14004bb42:	mov    rcx,QWORD PTR [rsi+0x18]
   14004bb46:	test   rcx,rcx
   14004bb49:	je     0x14004bb50
   14004bb4b:	call   0x14005a938
   14004bb50:	mov    edx,0xb8
   14004bb55:	mov    rcx,rsi
   14004bb58:	call   0x140055de8
   14004bb5d:	inc    rdi
   14004bb60:	cmp    rdi,QWORD PTR [rbx+0xe920]
   14004bb67:	jb     0x14004bb16
   14004bb69:	and    QWORD PTR [rbx+0xe920],0x0
   14004bb71:	mov    rbx,QWORD PTR [rsp+0x30]
   14004bb76:	mov    rsi,QWORD PTR [rsp+0x38]
   14004bb7b:	add    rsp,0x20
   14004bb7f:	pop    rdi
   14004bb80:	ret    
   14004bb81:	int3   
   14004bb82:	int3   
   14004bb83:	int3   
   14004bb84:	mov    QWORD PTR [rsp+0x8],rbx
   14004bb89:	mov    QWORD PTR [rsp+0x10],rsi
   14004bb8e:	push   rdi
   14004bb8f:	sub    rsp,0x20
   14004bb93:	xor    r9d,r9d
   14004bb96:	lea    r10,[rcx+0x4dba]
   14004bb9d:	mov    rdi,rcx
   14004bba0:	mov    esi,0x100
   14004bba5:	lea    r8d,[r9+0x1]
   14004bba9:	movzx  ecx,r9w
   14004bbad:	mov    WORD PTR [r10+0x200],r9w
   14004bbb5:	mov    eax,r9d
   14004bbb8:	not    cx
   14004bbbb:	shl    eax,0x8
   14004bbbe:	add    cx,r8w
   14004bbc2:	mov    WORD PTR [r10+0x400],ax
   14004bbca:	add    r9d,r8d
   14004bbcd:	mov    WORD PTR [r10],ax
   14004bbd1:	lea    r10,[r10+0x2]
   14004bbd5:	movzx  eax,si
   14004bbd8:	movzx  edx,cx
   14004bbdb:	imul   edx,eax
   14004bbde:	mov    eax,0xff00
   14004bbe3:	and    dx,ax
   14004bbe6:	mov    WORD PTR [r10+0x5fe],dx
   14004bbee:	cmp    r9d,esi
   14004bbf1:	jb     0x14004bba9
   14004bbf3:	lea    rcx,[rdi+0x55ba]
   14004bbfa:	mov    r8,rsi
   14004bbfd:	xor    edx,edx
   14004bbff:	call   0x140058f40
   14004bc04:	lea    rbx,[rdi+0x56ba]
   14004bc0b:	mov    r8,rsi
   14004bc0e:	mov    rcx,rbx
   14004bc11:	xor    edx,edx
   14004bc13:	call   0x140058f40
   14004bc18:	lea    rcx,[rdi+0x57ba]
   14004bc1f:	mov    r8,rsi
   14004bc22:	xor    edx,edx
   14004bc24:	call   0x140058f40
   14004bc29:	lea    rdx,[rdi+0x51ba]
   14004bc30:	mov    r8,rbx
   14004bc33:	mov    rcx,rdi
   14004bc36:	mov    rbx,QWORD PTR [rsp+0x30]
   14004bc3b:	mov    rsi,QWORD PTR [rsp+0x38]
   14004bc40:	add    rsp,0x20
   14004bc44:	pop    rdi
   14004bc45:	jmp    0x14004a244
   14004bc4a:	int3   
   14004bc4b:	int3   
   14004bc4c:	rex push rsi
   14004bc4e:	push   rdi
   14004bc4f:	push   r15
   14004bc51:	sub    rsp,0x40
   14004bc55:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14004bc5e:	mov    QWORD PTR [rsp+0x70],rbx
   14004bc63:	mov    QWORD PTR [rsp+0x78],rbp
   14004bc68:	mov    rbx,rcx
   14004bc6b:	cmp    QWORD PTR [rcx+0x38],0x0
   14004bc70:	jne    0x14004bc8f
   14004bc72:	mov    edi,0x400400
   14004bc77:	mov    ecx,edi
   14004bc79:	call   0x140055df0
   14004bc7e:	mov    QWORD PTR [rbx+0x38],rax
   14004bc82:	mov    r8d,edi
   14004bc85:	xor    edx,edx
   14004bc87:	mov    rcx,rax
   14004bc8a:	call   0x140058f40
   14004bc8f:	cmp    QWORD PTR [rbx+0x28],0x0
   14004bc94:	jne    0x14004bd64
   14004bc9a:	mov    ebp,DWORD PTR [rbx+0x30]
   14004bc9d:	add    ebp,ebp
   14004bc9f:	mov    esi,ebp
   14004bca1:	mov    QWORD PTR [rsp+0x60],rsi
   14004bca6:	mov    r15d,0x4af8
   14004bcac:	mov    eax,r15d
   14004bcaf:	mul    rsi
   14004bcb2:	mov    rcx,0xffffffffffffffff
   14004bcb9:	cmovo  rax,rcx
   14004bcbd:	add    rax,0x8
   14004bcc1:	cmovb  rax,rcx
   14004bcc5:	mov    rcx,rax
   14004bcc8:	call   0x140055df0
   14004bccd:	mov    QWORD PTR [rsp+0x68],rax
   14004bcd2:	test   rax,rax
   14004bcd5:	je     0x14004bd01
   14004bcd7:	mov    QWORD PTR [rax],rsi
   14004bcda:	lea    rdi,[rax+0x8]
   14004bcde:	lea    rax,[rip+0xffffffffffffd64f]        # 0x140049334
   14004bce5:	mov    QWORD PTR [rsp+0x20],rax
   14004bcea:	lea    r9,[rip+0xffffffffffffd4db]        # 0x1400491cc
   14004bcf1:	mov    r8d,esi
   14004bcf4:	mov    edx,r15d
   14004bcf7:	mov    rcx,rdi
   14004bcfa:	call   0x140055c6c
   14004bcff:	jmp    0x14004bd03
   14004bd01:	xor    edi,edi
   14004bd03:	mov    QWORD PTR [rbx+0x28],rdi
   14004bd07:	imul   r8,rsi,0x4af8
   14004bd0e:	xor    edx,edx
   14004bd10:	mov    rcx,rdi
   14004bd13:	call   0x140058f40
   14004bd18:	test   ebp,ebp
   14004bd1a:	je     0x14004bd64
   14004bd1c:	xor    edi,edi
   14004bd1e:	mov    rbp,QWORD PTR [rbx+0x28]
   14004bd22:	cmp    QWORD PTR [rdi+rbp*1+0x4ae0],0x0
   14004bd2b:	jne    0x14004bd5b
   14004bd2d:	mov    DWORD PTR [rdi+rbp*1+0x4aec],0x4100
   14004bd38:	mov    ecx,0x30c00
   14004bd3d:	call   0x14005d520
   14004bd42:	mov    QWORD PTR [rdi+rbp*1+0x4ae0],rax
   14004bd4a:	test   rax,rax
   14004bd4d:	jne    0x14004bd5b
   14004bd4f:	lea    rcx,[rip+0x48b0a]        # 0x140094860
   14004bd56:	call   0x14001bd24
   14004bd5b:	add    rdi,r15
   14004bd5e:	sub    rsi,0x1
   14004bd62:	jne    0x14004bd1e
   14004bd64:	mov    rbx,QWORD PTR [rsp+0x70]
   14004bd69:	mov    rbp,QWORD PTR [rsp+0x78]
   14004bd6e:	add    rsp,0x40
   14004bd72:	pop    r15
   14004bd74:	pop    rdi
   14004bd75:	pop    rsi
   14004bd76:	ret    
   14004bd77:	int3   
   14004bd78:	rex push rbx
   14004bd7a:	sub    rsp,0x20
   14004bd7e:	mov    rbx,rcx
   14004bd81:	xor    edx,edx
   14004bd83:	add    rcx,0xc8
   14004bd8a:	mov    r8d,0x130
   14004bd90:	call   0x140058f40
   14004bd95:	mov    r10d,DWORD PTR [rbx]
   14004bd98:	mov    eax,r10d
   14004bd9b:	mov    r11,QWORD PTR [rbx+0xb0]
   14004bda2:	cdq    
   14004bda3:	and    edx,0x7
   14004bda6:	mov    QWORD PTR [rbx+0x1f8],r11
   14004bdad:	add    edx,eax
   14004bdaf:	mov    eax,0xaaaaaaab
   14004bdb4:	sar    edx,0x3
   14004bdb7:	mul    edx
   14004bdb9:	mov    eax,0xaaaaaaab
   14004bdbe:	shr    edx,0x3
   14004bdc1:	imul   r9d,edx,0x54
   14004bdc5:	sub    r10d,r9d
   14004bdc8:	mul    r10d
   14004bdcb:	mov    eax,0xaaaaaaab
   14004bdd0:	mov    ecx,r10d
   14004bdd3:	shr    edx,0x3
   14004bdd6:	add    rcx,r11
   14004bdd9:	inc    edx
   14004bddb:	mov    QWORD PTR [rbx+0x210],rcx
   14004bde2:	lea    r8d,[rdx+rdx*4]
   14004bde6:	mul    r9d
   14004bde9:	shl    r8d,0x2
   14004bded:	mov    eax,0x1
   14004bdf2:	shr    edx,0x3
   14004bdf5:	add    r8,r11
   14004bdf8:	mov    QWORD PTR [rbx+0x200],r8
   14004bdff:	mov    QWORD PTR [rbx+0xb8],r8
   14004be06:	lea    r9d,[rax+0x3]
   14004be0a:	lea    ecx,[rdx+rdx*4]
   14004be0d:	mov    edx,r9d
   14004be10:	shl    ecx,0x2
   14004be13:	add    rcx,r8
   14004be16:	mov    QWORD PTR [rbx+0xc0],rcx
   14004be1d:	lea    rcx,[rbx+0x4]
   14004be21:	mov    BYTE PTR [rcx],al
   14004be23:	inc    rcx
   14004be26:	inc    eax
   14004be28:	sub    rdx,0x1
   14004be2c:	jne    0x14004be21
   14004be2e:	inc    eax
   14004be30:	lea    rcx,[rbx+0x8]
   14004be34:	mov    rdx,r9
   14004be37:	mov    BYTE PTR [rcx],al
   14004be39:	inc    rcx
   14004be3c:	add    eax,0x2
   14004be3f:	sub    rdx,0x1
   14004be43:	jne    0x14004be37
   14004be45:	inc    eax
   14004be47:	lea    rcx,[rbx+0xc]
   14004be4b:	mov    rdx,r9
   14004be4e:	mov    BYTE PTR [rcx],al
   14004be50:	inc    rcx
   14004be53:	add    eax,0x3
   14004be56:	sub    rdx,0x1
   14004be5a:	jne    0x14004be4e
   14004be5c:	inc    eax
   14004be5e:	lea    rcx,[rbx+0x10]
   14004be62:	mov    edx,0x1a
   14004be67:	mov    BYTE PTR [rcx],al
   14004be69:	inc    rcx
   14004be6c:	add    eax,r9d
   14004be6f:	sub    rdx,0x1
   14004be73:	jne    0x14004be67
   14004be75:	xor    r8d,r8d
   14004be78:	mov    BYTE PTR [rbx+0xaa],dl
   14004be7e:	lea    r9,[rbx+0x2a]
   14004be82:	movsxd rax,edx
   14004be85:	inc    r8d
   14004be88:	movzx  ecx,BYTE PTR [rax+rbx*1+0x4]
   14004be8d:	xor    eax,eax
   14004be8f:	cmp    ecx,r8d
   14004be92:	setl   al
   14004be95:	add    edx,eax
   14004be97:	mov    BYTE PTR [r9],dl
   14004be9a:	inc    r9
   14004be9d:	cmp    r8d,0x80
   14004bea4:	jl     0x14004be82
   14004bea6:	add    rsp,0x20
   14004beaa:	pop    rbx
   14004beab:	ret    
   14004beac:	mov    QWORD PTR [rsp+0x10],rbx
   14004beb1:	mov    QWORD PTR [rsp+0x18],rbp
   14004beb6:	mov    QWORD PTR [rsp+0x20],rsi
   14004bebb:	push   rdi
   14004bebc:	push   r12
   14004bebe:	push   r13
   14004bec0:	push   r14
   14004bec2:	push   r15
   14004bec4:	sub    rsp,0x30
   14004bec8:	and    DWORD PTR [rcx+0x58d8],0x0
   14004becf:	mov    rbx,rcx
   14004bed2:	add    DWORD PTR [rcx+0x58ec],0x10
   14004bed9:	cmp    DWORD PTR [rcx+0x58ec],0xff
   14004bee3:	jbe    0x14004bef5
   14004bee5:	shr    DWORD PTR [rcx+0x58e8],1
   14004beeb:	mov    DWORD PTR [rcx+0x58ec],0x90
   14004bef5:	mov    r15d,DWORD PTR [rcx+0x58cc]
   14004befc:	lea    r14,[rcx+0x8]
   14004bf00:	mov    rcx,r14
   14004bf03:	call   0x140023e1c
   14004bf08:	mov    edx,eax
   14004bf0a:	mov    eax,DWORD PTR [rbx+0x58cc]
   14004bf10:	cmp    eax,0x7a
   14004bf13:	jb     0x14004bf2b
   14004bf15:	lea    rax,[rip+0x35af4]        # 0x140081a10
   14004bf1c:	mov    r8d,0x3
   14004bf22:	lea    r9,[rip+0x35abf]        # 0x1400819e8
   14004bf29:	jmp    0x14004bf44
   14004bf2b:	cmp    eax,0x40
   14004bf2e:	jb     0x14004bf55
   14004bf30:	lea    rax,[rip+0x35a79]        # 0x1400819b0
   14004bf37:	mov    r8d,0x2
   14004bf3d:	lea    r9,[rip+0x35a3c]        # 0x140081980
   14004bf44:	mov    rcx,rbx
   14004bf47:	mov    QWORD PTR [rsp+0x20],rax
   14004bf4c:	call   0x14004ab10
   14004bf51:	mov    edi,eax
   14004bf53:	jmp    0x14004bf8b
   14004bf55:	cmp    edx,0x100
   14004bf5b:	jae    0x14004bf66
   14004bf5d:	mov    edi,edx
   14004bf5f:	mov    edx,0x10
   14004bf64:	jmp    0x14004bf83
   14004bf66:	xor    edi,edi
   14004bf68:	mov    r8d,0x8000
   14004bf6e:	test   r8d,edx
   14004bf71:	jne    0x14004bf80
   14004bf73:	inc    edi
   14004bf75:	mov    eax,edx
   14004bf77:	mov    ecx,edi
   14004bf79:	shl    eax,cl
   14004bf7b:	test   r8d,eax
   14004bf7e:	je     0x14004bf73
   14004bf80:	lea    edx,[rdi+0x1]
   14004bf83:	mov    rcx,r14
   14004bf86:	call   0x140023e04
   14004bf8b:	mov    ecx,DWORD PTR [rbx+0x58cc]
   14004bf91:	add    ecx,edi
   14004bf93:	mov    eax,ecx
   14004bf95:	shr    eax,0x5
   14004bf98:	sub    ecx,eax
   14004bf9a:	mov    DWORD PTR [rbx+0x58cc],ecx
   14004bfa0:	mov    rcx,r14
   14004bfa3:	call   0x140023e1c
   14004bfa8:	mov    ecx,DWORD PTR [rbx+0x58c4]
   14004bfae:	cmp    ecx,0x28ff
   14004bfb4:	jbe    0x14004bfcc
   14004bfb6:	lea    rcx,[rip+0x35b63]        # 0x140081b20
   14004bfbd:	lea    r9,[rip+0x35b3c]        # 0x140081b00
   14004bfc4:	mov    r8d,0x5
   14004bfca:	jmp    0x14004bff8
   14004bfcc:	cmp    ecx,0x6ff
   14004bfd2:	jbe    0x14004bfe4
   14004bfd4:	lea    rcx,[rip+0x35aed]        # 0x140081ac8
   14004bfdb:	lea    r9,[rip+0x35ac6]        # 0x140081aa8
   14004bfe2:	jmp    0x14004bfc4
   14004bfe4:	lea    rcx,[rip+0x35a85]        # 0x140081a70
   14004bfeb:	mov    r8d,0x4
   14004bff1:	lea    r9,[rip+0x35a50]        # 0x140081a48
   14004bff8:	mov    QWORD PTR [rsp+0x20],rcx
   14004bffd:	mov    edx,eax
   14004bfff:	mov    rcx,rbx
   14004c002:	call   0x14004ab10
   14004c007:	mov    ecx,DWORD PTR [rbx+0x58c4]
   14004c00d:	mov    edx,eax
   14004c00f:	add    ecx,eax
   14004c011:	mov    r13d,edx
   14004c014:	mov    eax,ecx
   14004c016:	movzx  r12d,dl
   14004c01a:	shr    eax,0x8
   14004c01d:	sub    ecx,eax
   14004c01f:	mov    DWORD PTR [rbx+0x58c4],ecx
   14004c025:	jmp    0x14004c03d
   14004c027:	lea    r8,[rbx+0x56ba]
   14004c02e:	mov    rcx,rbx
   14004c031:	lea    rdx,[rbx+0x51ba]
   14004c038:	call   0x14004a244
   14004c03d:	movzx  ebp,WORD PTR [rbx+r12*2+0x51ba]
   14004c046:	movzx  ecx,bpl
   14004c04a:	inc    ebp
   14004c04c:	movzx  edx,BYTE PTR [rcx+rbx*1+0x56ba]
   14004c054:	lea    eax,[rdx+0x1]
   14004c057:	mov    BYTE PTR [rcx+rbx*1+0x56ba],al
   14004c05e:	test   bpl,bpl
   14004c061:	je     0x14004c027
   14004c063:	movzx  eax,WORD PTR [rbx+rdx*2+0x51ba]
   14004c06b:	mov    rcx,r14
   14004c06e:	mov    WORD PTR [rbx+r13*2+0x51ba],ax
   14004c077:	mov    WORD PTR [rbx+rdx*2+0x51ba],bp
   14004c07f:	call   0x140023e1c
   14004c084:	mov    esi,eax
   14004c086:	and    ebp,0xff00
   14004c08c:	shr    esi,0x8
   14004c08f:	mov    edx,0x7
   14004c094:	or     esi,ebp
   14004c096:	mov    rcx,r14
   14004c099:	shr    esi,1
   14004c09b:	call   0x140023e04
   14004c0a0:	mov    edx,DWORD PTR [rbx+0x58d0]
   14004c0a6:	cmp    edi,0x1
   14004c0a9:	je     0x14004c0db
   14004c0ab:	cmp    edi,0x4
   14004c0ae:	je     0x14004c0db
   14004c0b0:	test   edi,edi
   14004c0b2:	jne    0x14004c0ce
   14004c0b4:	cmp    esi,DWORD PTR [rbx+0x58f0]
   14004c0ba:	ja     0x14004c0ce
   14004c0bc:	lea    ecx,[rdx+0x1]
   14004c0bf:	mov    eax,ecx
   14004c0c1:	shr    eax,0x8
   14004c0c4:	sub    ecx,eax
   14004c0c6:	mov    DWORD PTR [rbx+0x58d0],ecx
   14004c0cc:	jmp    0x14004c0db
   14004c0ce:	test   edx,edx
   14004c0d0:	je     0x14004c0db
   14004c0d2:	lea    eax,[rdx-0x1]
   14004c0d5:	mov    DWORD PTR [rbx+0x58d0],eax
   14004c0db:	add    edi,0x3
   14004c0de:	cmp    esi,DWORD PTR [rbx+0x58f0]
   14004c0e4:	jb     0x14004c0e8
   14004c0e6:	inc    edi
   14004c0e8:	cmp    esi,0x100
   14004c0ee:	ja     0x14004c0f3
   14004c0f0:	add    edi,0x8
   14004c0f3:	cmp    edx,0xb0
   14004c0f9:	ja     0x14004c119
   14004c0fb:	cmp    DWORD PTR [rbx+0x58c0],0x2a00
   14004c105:	jb     0x14004c10d
   14004c107:	cmp    r15d,0x40
   14004c10b:	jb     0x14004c119
   14004c10d:	mov    DWORD PTR [rbx+0x58f0],0x2001
   14004c117:	jmp    0x14004c123
   14004c119:	mov    DWORD PTR [rbx+0x58f0],0x7f00
   14004c123:	mov    eax,DWORD PTR [rbx+0xb0]
   14004c129:	mov    r8d,edi
   14004c12c:	mov    edx,esi
   14004c12e:	mov    rcx,rbx
   14004c131:	mov    DWORD PTR [rbx+rax*4+0xa0],esi
   14004c138:	mov    eax,DWORD PTR [rbx+0xb0]
   14004c13e:	inc    eax
   14004c140:	mov    DWORD PTR [rbx+0xb4],edi
   14004c146:	and    eax,0x3
   14004c149:	mov    DWORD PTR [rbx+0xb8],esi
   14004c14f:	mov    DWORD PTR [rbx+0xb0],eax
   14004c155:	mov    rbx,QWORD PTR [rsp+0x68]
   14004c15a:	mov    rbp,QWORD PTR [rsp+0x70]
   14004c15f:	mov    rsi,QWORD PTR [rsp+0x78]
   14004c164:	add    rsp,0x30
   14004c168:	pop    r15
   14004c16a:	pop    r14
   14004c16c:	pop    r13
   14004c16e:	pop    r12
   14004c170:	pop    rdi
   14004c171:	jmp    0x140049fb8
   14004c176:	int3   
   14004c177:	int3   
   14004c178:	mov    QWORD PTR [rsp+0x8],rbx
   14004c17d:	push   rbp
   14004c17e:	push   rsi
   14004c17f:	push   rdi
   14004c180:	push   r14
   14004c182:	push   r15
   14004c184:	sub    rsp,0x70
   14004c188:	mov    rax,QWORD PTR [rip+0x35d51]        # 0x140081ee0
   14004c18f:	xor    rax,rsp
   14004c192:	mov    QWORD PTR [rsp+0x60],rax
   14004c197:	mov    rsi,rdx
   14004c19a:	mov    edi,r9d
   14004c19d:	xor    edx,edx
   14004c19f:	mov    DWORD PTR [r8],edi
   14004c1a2:	mov    rbx,r8
   14004c1a5:	lea    rcx,[rsp+0x20]
   14004c1aa:	lea    r8d,[rdx+0x40]
   14004c1ae:	call   0x140058f40
   14004c1b3:	xor    r15d,r15d
   14004c1b6:	mov    r8d,edi
   14004c1b9:	mov    r14d,0x1
   14004c1bf:	test   edi,edi
   14004c1c1:	je     0x14004c1db
   14004c1c3:	mov    rcx,rsi
   14004c1c6:	mov    edx,edi
   14004c1c8:	movzx  eax,BYTE PTR [rcx]
   14004c1cb:	add    rcx,r14
   14004c1ce:	and    eax,0xf
   14004c1d1:	add    DWORD PTR [rsp+rax*4+0x20],r14d
   14004c1d6:	sub    rdx,r14
   14004c1d9:	jne    0x14004c1c8
   14004c1db:	add    r8,r8
   14004c1de:	mov    DWORD PTR [rsp+0x20],r15d
   14004c1e3:	lea    rcx,[rbx+0xc88]
   14004c1ea:	xor    edx,edx
   14004c1ec:	call   0x140058f40
   14004c1f1:	lea    rdx,[rbx+0x44]
   14004c1f5:	mov    DWORD PTR [rbx+0x4],r15d
   14004c1f9:	lea    r11,[rsp+0x20]
   14004c1fe:	mov    DWORD PTR [rdx],r15d
   14004c201:	sub    r11,rbx
   14004c204:	lea    rbp,[rsp+0x24]
   14004c209:	sub    rbp,rbx
   14004c20c:	mov    r9d,r15d
   14004c20f:	mov    r10,r14
   14004c212:	mov    r8,rdx
   14004c215:	add    r9d,DWORD PTR [r8+rbp*1-0x44]
   14004c21a:	mov    ecx,0x10
   14004c21f:	sub    cl,r10b
   14004c222:	mov    eax,r9d
   14004c225:	shl    eax,cl
   14004c227:	add    r9d,r9d
   14004c22a:	mov    DWORD PTR [r8-0x3c],eax
   14004c22e:	add    r10,r14
   14004c231:	mov    eax,DWORD PTR [r11+r8*1-0x44]
   14004c236:	add    eax,DWORD PTR [r8]
   14004c239:	mov    DWORD PTR [r8+0x4],eax
   14004c23d:	lea    r8,[r8+0x4]
   14004c241:	cmp    r10,0x10
   14004c245:	jb     0x14004c215
   14004c247:	movups xmm0,XMMWORD PTR [rdx]
   14004c24a:	movups xmm1,XMMWORD PTR [rdx+0x10]
   14004c24e:	movaps XMMWORD PTR [rsp+0x20],xmm0
   14004c253:	movaps XMMWORD PTR [rsp+0x30],xmm1
   14004c258:	movups xmm0,XMMWORD PTR [rdx+0x20]
   14004c25c:	movups xmm1,XMMWORD PTR [rdx+0x30]
   14004c260:	mov    edx,r15d
   14004c263:	movaps XMMWORD PTR [rsp+0x40],xmm0
   14004c268:	movaps XMMWORD PTR [rsp+0x50],xmm1
   14004c26d:	test   edi,edi
   14004c26f:	je     0x14004c296
   14004c271:	mov    al,BYTE PTR [rsi]
   14004c273:	and    al,0xf
   14004c275:	je     0x14004c28c
   14004c277:	movzx  ecx,al
   14004c27a:	mov    eax,DWORD PTR [rsp+rcx*4+0x20]
   14004c27e:	mov    WORD PTR [rbx+rax*2+0xc88],dx
   14004c286:	inc    eax
   14004c288:	mov    DWORD PTR [rsp+rcx*4+0x20],eax
   14004c28c:	add    edx,r14d
   14004c28f:	add    rsi,r14
   14004c292:	cmp    edx,edi
   14004c294:	jb     0x14004c271
   14004c296:	lea    eax,[rdi-0x12a]
   14004c29c:	test   eax,0xfffffff6
   14004c2a1:	jne    0x14004c2b7
   14004c2a3:	cmp    edi,0x133
   14004c2a9:	je     0x14004c2b7
   14004c2ab:	mov    DWORD PTR [rbx+0x84],0xa
   14004c2b5:	jmp    0x14004c2c1
   14004c2b7:	mov    DWORD PTR [rbx+0x84],0x7
   14004c2c1:	mov    ecx,DWORD PTR [rbx+0x84]
   14004c2c7:	mov    r10d,r14d
   14004c2ca:	shl    r10d,cl
   14004c2cd:	mov    edx,r14d
   14004c2d0:	mov    r11d,r15d
   14004c2d3:	test   r10d,r10d
   14004c2d6:	je     0x14004c34c
   14004c2d8:	lea    rsi,[rbx+0x88]
   14004c2df:	lea    r9,[rbx+0x488]
   14004c2e6:	mov    ecx,0x10
   14004c2eb:	mov    r8d,r11d
   14004c2ee:	sub    ecx,DWORD PTR [rbx+0x84]
   14004c2f4:	shl    r8d,cl
   14004c2f7:	jmp    0x14004c305
   14004c2f9:	mov    eax,edx
   14004c2fb:	cmp    r8d,DWORD PTR [rbx+rax*4+0x4]
   14004c300:	jb     0x14004c30a
   14004c302:	add    edx,r14d
   14004c305:	cmp    edx,0x10
   14004c308:	jb     0x14004c2f9
   14004c30a:	lea    eax,[rdx-0x1]
   14004c30d:	mov    BYTE PTR [rsi],dl
   14004c30f:	sub    r8d,DWORD PTR [rbx+rax*4+0x4]
   14004c314:	mov    ecx,0x10
   14004c319:	sub    ecx,edx
   14004c31b:	mov    eax,edx
   14004c31d:	shr    r8d,cl
   14004c320:	add    r8d,DWORD PTR [rbx+rax*4+0x44]
   14004c325:	cmp    r8d,edi
   14004c328:	jae    0x14004c339
   14004c32a:	movzx  ecx,WORD PTR [rbx+r8*2+0xc88]
   14004c333:	mov    WORD PTR [r9],cx
   14004c337:	jmp    0x14004c33d
   14004c339:	mov    WORD PTR [r9],r15w
   14004c33d:	add    r11d,r14d
   14004c340:	add    r9,0x2
   14004c344:	add    rsi,r14
   14004c347:	cmp    r11d,r10d
   14004c34a:	jb     0x14004c2e6
   14004c34c:	mov    rcx,QWORD PTR [rsp+0x60]
   14004c351:	xor    rcx,rsp
   14004c354:	call   0x140055f90
   14004c359:	mov    rbx,QWORD PTR [rsp+0xa0]
   14004c361:	add    rsp,0x70
   14004c365:	pop    r15
   14004c367:	pop    r14
   14004c369:	pop    rdi
   14004c36a:	pop    rsi
   14004c36b:	pop    rbp
   14004c36c:	ret    
   14004c36d:	int3   
   14004c36e:	int3   
   14004c36f:	int3   
   14004c370:	mov    rax,rsp
   14004c373:	mov    QWORD PTR [rax+0x8],rbx
   14004c377:	mov    QWORD PTR [rax+0x10],rsi
   14004c37b:	mov    QWORD PTR [rax+0x18],rdi
   14004c37f:	mov    QWORD PTR [rax+0x20],r12
   14004c383:	push   r15
   14004c385:	sub    rsp,0x30
   14004c389:	mov    rdi,QWORD PTR [rdx+0x4ae0]
   14004c390:	mov    rbx,rcx
   14004c393:	mov    eax,DWORD PTR [rdx+0x4ae8]
   14004c399:	lea    rdx,[rax+rax*2]
   14004c39d:	lea    rsi,[rdi+rdx*4]
   14004c3a1:	cmp    rdi,rsi
   14004c3a4:	jae    0x14004c925
   14004c3aa:	mov    r15d,0x3
   14004c3b0:	mov    r12d,0xfffffff8
   14004c3b6:	mov    rcx,QWORD PTR [rbx+0xe968]
   14004c3bd:	and    QWORD PTR [rbx+0xc0],rcx
   14004c3c4:	mov    r8,QWORD PTR [rbx+0x4b88]
   14004c3cb:	mov    rdx,QWORD PTR [rbx+0xc0]
   14004c3d2:	mov    rax,r8
   14004c3d5:	sub    rax,rdx
   14004c3d8:	and    rax,rcx
   14004c3db:	cmp    rax,0x1004
   14004c3e1:	jae    0x14004c404
   14004c3e3:	cmp    r8,rdx
   14004c3e6:	je     0x14004c404
   14004c3e8:	mov    rcx,rbx
   14004c3eb:	call   0x14004f1dc
   14004c3f0:	mov    rax,QWORD PTR [rbx+0x4da0]
   14004c3f7:	cmp    QWORD PTR [rbx+0x4db0],rax
   14004c3fe:	jg     0x14004c942
   14004c404:	cmp    DWORD PTR [rdi],0x0
   14004c407:	jne    0x14004c479
   14004c409:	cmp    WORD PTR [rdi+0x4],r15w
   14004c40e:	jne    0x14004c441
   14004c410:	mov    rax,QWORD PTR [rbx+0xe960]
   14004c417:	mov    rdx,QWORD PTR [rbx+0xc0]
   14004c41e:	sub    rax,0x4
   14004c422:	cmp    rdx,rax
   14004c425:	jae    0x14004c441
   14004c427:	mov    eax,DWORD PTR [rdi+0x8]
   14004c42a:	mov    rcx,QWORD PTR [rbx+0x4b90]
   14004c431:	mov    DWORD PTR [rdx+rcx*1],eax
   14004c434:	add    QWORD PTR [rbx+0xc0],0x4
   14004c43c:	jmp    0x14004c918
   14004c441:	xor    r8d,r8d
   14004c444:	mov    al,BYTE PTR [r8+rdi*1+0x8]
   14004c449:	inc    r8d
   14004c44c:	mov    rdx,QWORD PTR [rbx+0xc0]
   14004c453:	and    rdx,QWORD PTR [rbx+0xe968]
   14004c45a:	mov    rcx,QWORD PTR [rbx+0x4b90]
   14004c461:	mov    BYTE PTR [rdx+rcx*1],al
   14004c464:	inc    QWORD PTR [rbx+0xc0]
   14004c46b:	movzx  eax,WORD PTR [rdi+0x4]
   14004c46f:	cmp    r8d,eax
   14004c472:	jbe    0x14004c444
   14004c474:	jmp    0x14004c918
   14004c479:	cmp    DWORD PTR [rdi],0x1
   14004c47c:	jne    0x14004c641
   14004c482:	mov    ecx,DWORD PTR [rdi+0x8]
   14004c485:	mov    eax,DWORD PTR [rbx+0xa8]
   14004c48b:	mov    DWORD PTR [rbx+0xac],eax
   14004c491:	mov    eax,DWORD PTR [rbx+0xa4]
   14004c497:	mov    DWORD PTR [rbx+0xa8],eax
   14004c49d:	mov    eax,DWORD PTR [rbx+0xa0]
   14004c4a3:	mov    DWORD PTR [rbx+0xa4],eax
   14004c4a9:	mov    DWORD PTR [rbx+0xa0],ecx
   14004c4af:	movzx  eax,WORD PTR [rdi+0x4]
   14004c4b3:	mov    r9,QWORD PTR [rbx+0xc0]
   14004c4ba:	mov    DWORD PTR [rbx+0xb4],eax
   14004c4c0:	mov    r10,r9
   14004c4c3:	mov    r11d,DWORD PTR [rdi+0x8]
   14004c4c7:	mov    rax,QWORD PTR [rbx+0xe960]
   14004c4ce:	sub    r10,r11
   14004c4d1:	movzx  r8d,WORD PTR [rdi+0x4]
   14004c4d6:	add    rax,0xffffffffffffefff
   14004c4dc:	cmp    r10,rax
   14004c4df:	jae    0x14004c5f0
   14004c4e5:	cmp    r9,rax
   14004c4e8:	jae    0x14004c5f0
   14004c4ee:	mov    rax,QWORD PTR [rbx+0x4b90]
   14004c4f5:	lea    rcx,[rax+r10*1]
   14004c4f9:	lea    rdx,[rax+r9*1]
   14004c4fd:	lea    rax,[r9+r8*1]
   14004c501:	mov    QWORD PTR [rbx+0xc0],rax
   14004c508:	cmp    r11d,r8d
   14004c50b:	jae    0x14004c55b
   14004c50d:	cmp    r8d,0x8
   14004c511:	jb     0x14004c57f
   14004c513:	mov    r9d,r8d
   14004c516:	shr    r9,0x3
   14004c51a:	mov    al,BYTE PTR [rcx]
   14004c51c:	add    r8d,r12d
   14004c51f:	mov    BYTE PTR [rdx],al
   14004c521:	mov    al,BYTE PTR [rcx+0x1]
   14004c524:	mov    BYTE PTR [rdx+0x1],al
   14004c527:	mov    al,BYTE PTR [rcx+0x2]
   14004c52a:	mov    BYTE PTR [rdx+0x2],al
   14004c52d:	mov    al,BYTE PTR [rcx+0x3]
   14004c530:	mov    BYTE PTR [rdx+0x3],al
   14004c533:	mov    al,BYTE PTR [rcx+0x4]
   14004c536:	mov    BYTE PTR [rdx+0x4],al
   14004c539:	mov    al,BYTE PTR [rcx+0x5]
   14004c53c:	mov    BYTE PTR [rdx+0x5],al
   14004c53f:	mov    al,BYTE PTR [rcx+0x6]
   14004c542:	mov    BYTE PTR [rdx+0x6],al
   14004c545:	mov    al,BYTE PTR [rcx+0x7]
   14004c548:	add    rcx,0x8
   14004c54c:	mov    BYTE PTR [rdx+0x7],al
   14004c54f:	add    rdx,0x8
   14004c553:	sub    r9,0x1
   14004c557:	jne    0x14004c51a
   14004c559:	jmp    0x14004c57f
   14004c55b:	cmp    r8d,0x8
   14004c55f:	jb     0x14004c57f
   14004c561:	mov    r9,r8
   14004c564:	shr    r9,0x3
   14004c568:	mov    rax,QWORD PTR [rcx]
   14004c56b:	add    r8d,r12d
   14004c56e:	mov    QWORD PTR [rdx],rax
   14004c571:	add    rcx,0x8
   14004c575:	add    rdx,0x8
   14004c579:	sub    r9,0x1
   14004c57d:	jne    0x14004c568
   14004c57f:	test   r8d,r8d
   14004c582:	je     0x14004c918
   14004c588:	mov    al,BYTE PTR [rcx]
   14004c58a:	mov    BYTE PTR [rdx],al
   14004c58c:	cmp    r8d,0x1
   14004c590:	jbe    0x14004c918
   14004c596:	mov    al,BYTE PTR [rcx+0x1]
   14004c599:	mov    BYTE PTR [rdx+0x1],al
   14004c59c:	cmp    r8d,0x2
   14004c5a0:	jbe    0x14004c918
   14004c5a6:	mov    al,BYTE PTR [rcx+0x2]
   14004c5a9:	mov    BYTE PTR [rdx+0x2],al
   14004c5ac:	cmp    r8d,r15d
   14004c5af:	jbe    0x14004c918
   14004c5b5:	mov    al,BYTE PTR [rcx+0x3]
   14004c5b8:	mov    BYTE PTR [rdx+0x3],al
   14004c5bb:	cmp    r8d,0x4
   14004c5bf:	jbe    0x14004c918
   14004c5c5:	mov    al,BYTE PTR [rcx+0x4]
   14004c5c8:	mov    BYTE PTR [rdx+0x4],al
   14004c5cb:	cmp    r8d,0x5
   14004c5cf:	jbe    0x14004c918
   14004c5d5:	mov    al,BYTE PTR [rcx+0x5]
   14004c5d8:	mov    BYTE PTR [rdx+0x5],al
   14004c5db:	cmp    r8d,0x6
   14004c5df:	jbe    0x14004c918
   14004c5e5:	mov    al,BYTE PTR [rcx+0x6]
   14004c5e8:	mov    BYTE PTR [rdx+0x6],al
   14004c5eb:	jmp    0x14004c918
   14004c5f0:	test   r8d,r8d
   14004c5f3:	je     0x14004c918
   14004c5f9:	mov    r9,QWORD PTR [rbx+0xe968]
   14004c600:	mov    rdx,QWORD PTR [rbx+0x4b90]
   14004c607:	and    r9,r10
   14004c60a:	mov    rcx,QWORD PTR [rbx+0xc0]
   14004c611:	inc    r10
   14004c614:	mov    al,BYTE PTR [r9+rdx*1]
   14004c618:	mov    BYTE PTR [rdx+rcx*1],al
   14004c61b:	mov    rax,QWORD PTR [rbx+0xc0]
   14004c622:	mov    r9,QWORD PTR [rbx+0xe968]
   14004c629:	inc    rax
   14004c62c:	and    rax,r9
   14004c62f:	mov    QWORD PTR [rbx+0xc0],rax
   14004c636:	add    r8d,0xffffffff
   14004c63a:	jne    0x14004c600
   14004c63c:	jmp    0x14004c918
   14004c641:	cmp    DWORD PTR [rdi],r15d
   14004c644:	jne    0x14004c7af
   14004c64a:	mov    ecx,DWORD PTR [rdi+0x8]
   14004c64d:	mov    r11d,DWORD PTR [rbx+rcx*4+0xa0]
   14004c655:	test   ecx,ecx
   14004c657:	je     0x14004c67b
   14004c659:	lea    r8,[rbx+0xa0]
   14004c660:	lea    r8,[r8+rcx*4]
   14004c664:	lea    edx,[rcx-0x1]
   14004c667:	mov    ecx,DWORD PTR [rbx+rdx*4+0xa0]
   14004c66e:	mov    DWORD PTR [r8],ecx
   14004c671:	mov    ecx,edx
   14004c673:	lea    r8,[r8-0x4]
   14004c677:	test   edx,edx
   14004c679:	jne    0x14004c664
   14004c67b:	mov    DWORD PTR [rbx+0xa0],r11d
   14004c682:	movzx  eax,WORD PTR [rdi+0x4]
   14004c686:	mov    r10,QWORD PTR [rbx+0xc0]
   14004c68d:	mov    DWORD PTR [rbx+0xb4],eax
   14004c693:	mov    r9,r10
   14004c696:	mov    rax,QWORD PTR [rbx+0xe960]
   14004c69d:	sub    r9,r11
   14004c6a0:	movzx  r8d,WORD PTR [rdi+0x4]
   14004c6a5:	add    rax,0xffffffffffffefff
   14004c6ab:	cmp    r9,rax
   14004c6ae:	jae    0x14004c75e
   14004c6b4:	cmp    r10,rax
   14004c6b7:	jae    0x14004c75e
   14004c6bd:	mov    rax,QWORD PTR [rbx+0x4b90]
   14004c6c4:	lea    rcx,[rax+r9*1]
   14004c6c8:	lea    rdx,[rax+r10*1]
   14004c6cc:	lea    rax,[r10+r8*1]
   14004c6d0:	mov    QWORD PTR [rbx+0xc0],rax
   14004c6d7:	cmp    r11d,r8d
   14004c6da:	jae    0x14004c731
   14004c6dc:	cmp    r8d,0x8
   14004c6e0:	jb     0x14004c57f
   14004c6e6:	mov    r9d,r8d
   14004c6e9:	shr    r9,0x3
   14004c6ed:	mov    al,BYTE PTR [rcx]
   14004c6ef:	add    r8d,r12d
   14004c6f2:	mov    BYTE PTR [rdx],al
   14004c6f4:	mov    al,BYTE PTR [rcx+0x1]
   14004c6f7:	mov    BYTE PTR [rdx+0x1],al
   14004c6fa:	mov    al,BYTE PTR [rcx+0x2]
   14004c6fd:	mov    BYTE PTR [rdx+0x2],al
   14004c700:	mov    al,BYTE PTR [rcx+0x3]
   14004c703:	mov    BYTE PTR [rdx+0x3],al
   14004c706:	mov    al,BYTE PTR [rcx+0x4]
   14004c709:	mov    BYTE PTR [rdx+0x4],al
   14004c70c:	mov    al,BYTE PTR [rcx+0x5]
   14004c70f:	mov    BYTE PTR [rdx+0x5],al
   14004c712:	mov    al,BYTE PTR [rcx+0x6]
   14004c715:	mov    BYTE PTR [rdx+0x6],al
   14004c718:	mov    al,BYTE PTR [rcx+0x7]
   14004c71b:	add    rcx,0x8
   14004c71f:	mov    BYTE PTR [rdx+0x7],al
   14004c722:	add    rdx,0x8
   14004c726:	sub    r9,0x1
   14004c72a:	jne    0x14004c6ed
   14004c72c:	jmp    0x14004c57f
   14004c731:	cmp    r8d,0x8
   14004c735:	jb     0x14004c57f
   14004c73b:	mov    r9,r8
   14004c73e:	shr    r9,0x3
   14004c742:	mov    rax,QWORD PTR [rcx]
   14004c745:	add    r8d,r12d
   14004c748:	mov    QWORD PTR [rdx],rax
   14004c74b:	add    rcx,0x8
   14004c74f:	add    rdx,0x8
   14004c753:	sub    r9,0x1
   14004c757:	jne    0x14004c742
   14004c759:	jmp    0x14004c57f
   14004c75e:	test   r8d,r8d
   14004c761:	je     0x14004c918
   14004c767:	mov    r10,QWORD PTR [rbx+0xe968]
   14004c76e:	mov    rdx,QWORD PTR [rbx+0x4b90]
   14004c775:	and    r10,r9
   14004c778:	mov    rcx,QWORD PTR [rbx+0xc0]
   14004c77f:	inc    r9
   14004c782:	mov    al,BYTE PTR [r10+rdx*1]
   14004c786:	mov    BYTE PTR [rdx+rcx*1],al
   14004c789:	mov    rax,QWORD PTR [rbx+0xc0]
   14004c790:	mov    r10,QWORD PTR [rbx+0xe968]
   14004c797:	inc    rax
   14004c79a:	and    rax,r10
   14004c79d:	mov    QWORD PTR [rbx+0xc0],rax
   14004c7a4:	add    r8d,0xffffffff
   14004c7a8:	jne    0x14004c76e
   14004c7aa:	jmp    0x14004c918
   14004c7af:	cmp    DWORD PTR [rdi],0x2
   14004c7b2:	jne    0x14004c8e6
   14004c7b8:	mov    r8d,DWORD PTR [rbx+0xb4]
   14004c7bf:	test   r8d,r8d
   14004c7c2:	je     0x14004c918
   14004c7c8:	mov    r10,QWORD PTR [rbx+0xc0]
   14004c7cf:	mov    r11d,DWORD PTR [rbx+0xa0]
   14004c7d6:	mov    r9,r10
   14004c7d9:	mov    rax,QWORD PTR [rbx+0xe960]
   14004c7e0:	sub    r9,r11
   14004c7e3:	add    rax,0xffffffffffffefff
   14004c7e9:	cmp    r9,rax
   14004c7ec:	jae    0x14004c89c
   14004c7f2:	cmp    r10,rax
   14004c7f5:	jae    0x14004c89c
   14004c7fb:	mov    rax,QWORD PTR [rbx+0x4b90]
   14004c802:	lea    rcx,[rax+r9*1]
   14004c806:	lea    rdx,[rax+r10*1]
   14004c80a:	lea    rax,[r10+r8*1]
   14004c80e:	mov    QWORD PTR [rbx+0xc0],rax
   14004c815:	cmp    r11d,r8d
   14004c818:	jae    0x14004c86f
   14004c81a:	cmp    r8d,0x8
   14004c81e:	jb     0x14004c57f
   14004c824:	mov    r9d,r8d
   14004c827:	shr    r9,0x3
   14004c82b:	mov    al,BYTE PTR [rcx]
   14004c82d:	add    r8d,r12d
   14004c830:	mov    BYTE PTR [rdx],al
   14004c832:	mov    al,BYTE PTR [rcx+0x1]
   14004c835:	mov    BYTE PTR [rdx+0x1],al
   14004c838:	mov    al,BYTE PTR [rcx+0x2]
   14004c83b:	mov    BYTE PTR [rdx+0x2],al
   14004c83e:	mov    al,BYTE PTR [rcx+0x3]
   14004c841:	mov    BYTE PTR [rdx+0x3],al
   14004c844:	mov    al,BYTE PTR [rcx+0x4]
   14004c847:	mov    BYTE PTR [rdx+0x4],al
   14004c84a:	mov    al,BYTE PTR [rcx+0x5]
   14004c84d:	mov    BYTE PTR [rdx+0x5],al
   14004c850:	mov    al,BYTE PTR [rcx+0x6]
   14004c853:	mov    BYTE PTR [rdx+0x6],al
   14004c856:	mov    al,BYTE PTR [rcx+0x7]
   14004c859:	add    rcx,0x8
   14004c85d:	mov    BYTE PTR [rdx+0x7],al
   14004c860:	add    rdx,0x8
   14004c864:	sub    r9,0x1
   14004c868:	jne    0x14004c82b
   14004c86a:	jmp    0x14004c57f
   14004c86f:	cmp    r8d,0x8
   14004c873:	jb     0x14004c57f
   14004c879:	mov    r9,r8
   14004c87c:	shr    r9,0x3
   14004c880:	mov    rax,QWORD PTR [rcx]
   14004c883:	add    r8d,r12d
   14004c886:	mov    QWORD PTR [rdx],rax
   14004c889:	add    rcx,0x8
   14004c88d:	add    rdx,0x8
   14004c891:	sub    r9,0x1
   14004c895:	jne    0x14004c880
   14004c897:	jmp    0x14004c57f
   14004c89c:	test   r8d,r8d
   14004c89f:	je     0x14004c918
   14004c8a1:	mov    r10,QWORD PTR [rbx+0xe968]
   14004c8a8:	mov    rdx,QWORD PTR [rbx+0x4b90]
   14004c8af:	and    r10,r9
   14004c8b2:	mov    rcx,QWORD PTR [rbx+0xc0]
   14004c8b9:	inc    r9
   14004c8bc:	mov    al,BYTE PTR [r10+rdx*1]
   14004c8c0:	mov    BYTE PTR [rdx+rcx*1],al
   14004c8c3:	mov    rax,QWORD PTR [rbx+0xc0]
   14004c8ca:	mov    r10,QWORD PTR [rbx+0xe968]
   14004c8d1:	inc    rax
   14004c8d4:	and    rax,r10
   14004c8d7:	mov    QWORD PTR [rbx+0xc0],rax
   14004c8de:	add    r8d,0xffffffff
   14004c8e2:	jne    0x14004c8a8
   14004c8e4:	jmp    0x14004c918
   14004c8e6:	cmp    DWORD PTR [rdi],0x4
   14004c8e9:	jne    0x14004c918
   14004c8eb:	mov    al,BYTE PTR [rdi+0x4]
   14004c8ee:	lea    rdx,[rsp+0x20]
   14004c8f3:	mov    BYTE PTR [rsp+0x20],al
   14004c8f7:	mov    rcx,rbx
   14004c8fa:	mov    eax,DWORD PTR [rdi+0x8]
   14004c8fd:	add    rdi,0xc
   14004c901:	mov    DWORD PTR [rsp+0x24],eax
   14004c905:	mov    al,BYTE PTR [rdi+0x4]
   14004c908:	mov    BYTE PTR [rsp+0x2c],al
   14004c90c:	mov    eax,DWORD PTR [rdi+0x8]
   14004c90f:	mov    DWORD PTR [rsp+0x28],eax
   14004c913:	call   0x1400494f0
   14004c918:	add    rdi,0xc
   14004c91c:	cmp    rdi,rsi
   14004c91f:	jb     0x14004c3b6
   14004c925:	mov    al,0x1
   14004c927:	mov    rbx,QWORD PTR [rsp+0x40]
   14004c92c:	mov    rsi,QWORD PTR [rsp+0x48]
   14004c931:	mov    rdi,QWORD PTR [rsp+0x50]
   14004c936:	mov    r12,QWORD PTR [rsp+0x58]
   14004c93b:	add    rsp,0x30
   14004c93f:	pop    r15
   14004c941:	ret    
   14004c942:	xor    al,al
   14004c944:	jmp    0x14004c927
   14004c946:	int3   
   14004c947:	int3   
   14004c948:	mov    QWORD PTR [rsp+0x8],rbx
   14004c94d:	push   rdi
   14004c94e:	sub    rsp,0x20
   14004c952:	mov    rdi,rdx
   14004c955:	mov    rbx,rcx
   14004c958:	mov    edx,0x1
   14004c95d:	call   0x14004944c
   14004c962:	mov    r8,QWORD PTR [rbx+0x8]
   14004c966:	mov    rax,QWORD PTR [rbx]
   14004c969:	add    r8,r8
   14004c96c:	movups xmm0,XMMWORD PTR [rdi]
   14004c96f:	mov    rbx,QWORD PTR [rsp+0x30]
   14004c974:	movdqu XMMWORD PTR [rax+r8*8-0x10],xmm0
   14004c97b:	add    rsp,0x20
   14004c97f:	pop    rdi
   14004c980:	ret    
   14004c981:	int3   
   14004c982:	int3   
   14004c983:	int3   
   14004c984:	mov    QWORD PTR [rsp+0x8],rbx
   14004c989:	mov    QWORD PTR [rsp+0x10],rbp
   14004c98e:	mov    QWORD PTR [rsp+0x18],rsi
   14004c993:	push   rdi
   14004c994:	push   r12
   14004c996:	push   r13
   14004c998:	push   r14
   14004c99a:	push   r15
   14004c99c:	sub    rsp,0x20
   14004c9a0:	xor    ebx,ebx
   14004c9a2:	mov    rsi,r8
   14004c9a5:	mov    DWORD PTR [r8+0xc],ebx
   14004c9a9:	mov    rdi,rdx
   14004c9ac:	mov    r14,rcx
   14004c9af:	cmp    BYTE PTR [rdx+0x8],bl
   14004c9b2:	jne    0x14004c9d1
   14004c9b4:	mov    eax,DWORD PTR [rcx+0xd0]
   14004c9ba:	sub    eax,0x7
   14004c9bd:	cmp    DWORD PTR [rdx],eax
   14004c9bf:	jle    0x14004c9d1
   14004c9c1:	call   0x14004eb48
   14004c9c6:	test   al,al
   14004c9c8:	jne    0x14004c9d1
   14004c9ca:	xor    al,al
   14004c9cc:	jmp    0x14004cac9
   14004c9d1:	mov    edx,DWORD PTR [rdi+0x4]
   14004c9d4:	mov    rcx,rdi
   14004c9d7:	neg    edx
   14004c9d9:	and    edx,0x7
   14004c9dc:	call   0x140023e04
   14004c9e1:	mov    rcx,rdi
   14004c9e4:	call   0x140023e1c
   14004c9e9:	mov    ebp,eax
   14004c9eb:	mov    r12d,0x8
   14004c9f1:	mov    edx,r12d
   14004c9f4:	shr    ebp,0x8
   14004c9f7:	mov    rcx,rdi
   14004c9fa:	call   0x140023e04
   14004c9ff:	movzx  ecx,bpl
   14004ca03:	mov    r15d,ecx
   14004ca06:	shr    r15d,0x3
   14004ca0a:	and    r15d,0x3
   14004ca0e:	inc    r15d
   14004ca11:	cmp    r15d,0x4
   14004ca15:	je     0x14004c9ca
   14004ca17:	and    ecx,0x7
   14004ca1a:	lea    eax,[r15+0x2]
   14004ca1e:	inc    ecx
   14004ca20:	mov    DWORD PTR [rsi+0xc],eax
   14004ca23:	mov    DWORD PTR [rsi+0x4],ecx
   14004ca26:	mov    rcx,rdi
   14004ca29:	call   0x140023e1c
   14004ca2e:	mov    r13d,eax
   14004ca31:	mov    edx,r12d
   14004ca34:	mov    rcx,rdi
   14004ca37:	shr    r13d,0x8
   14004ca3b:	call   0x140023e04
   14004ca40:	test   r15d,r15d
   14004ca43:	je     0x14004ca77
   14004ca45:	mov    r12d,ebx
   14004ca48:	mov    rcx,rdi
   14004ca4b:	call   0x140023e1c
   14004ca50:	shr    eax,0x8
   14004ca53:	mov    ecx,r12d
   14004ca56:	shl    eax,cl
   14004ca58:	add    r12d,0x8
   14004ca5c:	mov    ecx,DWORD PTR [rdi+0x4]
   14004ca5f:	add    ebx,eax
   14004ca61:	add    ecx,0x8
   14004ca64:	mov    eax,ecx
   14004ca66:	and    ecx,0x7
   14004ca69:	shr    eax,0x3
   14004ca6c:	add    DWORD PTR [rdi],eax
   14004ca6e:	mov    DWORD PTR [rdi+0x4],ecx
   14004ca71:	sub    r15,0x1
   14004ca75:	jne    0x14004ca48
   14004ca77:	mov    ecx,ebx
   14004ca79:	mov    DWORD PTR [rsi],ebx
   14004ca7b:	sar    ecx,0x10
   14004ca7e:	mov    eax,ebx
   14004ca80:	sar    eax,0x8
   14004ca83:	xor    cl,al
   14004ca85:	xor    cl,bl
   14004ca87:	xor    cl,bpl
   14004ca8a:	xor    cl,0x5a
   14004ca8d:	cmp    cl,r13b
   14004ca90:	jne    0x14004c9ca
   14004ca96:	mov    eax,DWORD PTR [rdi]
   14004ca98:	mov    DWORD PTR [rsi+0x8],eax
   14004ca9b:	mov    ecx,DWORD PTR [r14+0xd4]
   14004caa2:	lea    edx,[rax-0x1]
   14004caa5:	mov    al,0x1
   14004caa7:	add    edx,ebx
   14004caa9:	cmp    ecx,edx
   14004caab:	cmovl  edx,ecx
   14004caae:	mov    cl,bpl
   14004cab1:	shr    cl,0x6
   14004cab4:	and    cl,0x1
   14004cab7:	mov    DWORD PTR [r14+0xd4],edx
   14004cabe:	shr    bpl,0x7
   14004cac2:	mov    BYTE PTR [rsi+0x11],bpl
   14004cac6:	mov    BYTE PTR [rsi+0x10],cl
   14004cac9:	mov    rbx,QWORD PTR [rsp+0x50]
   14004cace:	mov    rbp,QWORD PTR [rsp+0x58]
   14004cad3:	mov    rsi,QWORD PTR [rsp+0x60]
   14004cad8:	add    rsp,0x20
   14004cadc:	pop    r15
   14004cade:	pop    r14
   14004cae0:	pop    r13
   14004cae2:	pop    r12
   14004cae4:	pop    rdi
   14004cae5:	ret    
   14004cae6:	int3   
   14004cae7:	int3   
   14004cae8:	movsxd r8,DWORD PTR [rcx+0x8]
   14004caec:	mov    r11,rcx
   14004caef:	mov    r9,QWORD PTR [rcx+0x18]
   14004caf3:	lea    eax,[r8+0x1]
   14004caf7:	movzx  r10d,BYTE PTR [r8+r9*1]
   14004cafc:	movsxd rdx,eax
   14004caff:	shl    r10d,0x8
   14004cb03:	movzx  eax,BYTE PTR [rdx+r9*1]
   14004cb08:	mov    edx,0x1
   14004cb0d:	or     r10d,eax
   14004cb10:	lea    eax,[r8+0x2]
   14004cb14:	movsxd rcx,eax
   14004cb17:	xor    r8b,r8b
   14004cb1a:	shl    r10d,0x8
   14004cb1e:	movzx  eax,BYTE PTR [rcx+r9*1]
   14004cb23:	mov    ecx,0x8
   14004cb28:	sub    ecx,DWORD PTR [r11+0xc]
   14004cb2c:	or     r10d,eax
   14004cb2f:	shr    r10d,cl
   14004cb32:	mov    ecx,DWORD PTR [r11+0xc]
   14004cb36:	movzx  eax,r10w
   14004cb3a:	bt     eax,0xf
   14004cb3e:	jae    0x14004cb44
   14004cb40:	add    ecx,edx
   14004cb42:	jmp    0x14004cb4f
   14004cb44:	shr    eax,0xe
   14004cb47:	mov    r8b,dl
   14004cb4a:	and    dl,al
   14004cb4c:	add    ecx,0x2
   14004cb4f:	mov    eax,ecx
   14004cb51:	and    ecx,0x7
   14004cb54:	shr    eax,0x3
   14004cb57:	add    DWORD PTR [r11+0x8],eax
   14004cb5b:	test   dl,dl
   14004cb5d:	mov    DWORD PTR [r11+0xc],ecx
   14004cb61:	sete   al
   14004cb64:	mov    BYTE PTR [r11+0xe894],al
   14004cb6b:	test   r8b,r8b
   14004cb6e:	je     0x14004cb73
   14004cb70:	xor    al,al
   14004cb72:	ret    
   14004cb73:	mov    rcx,r11
   14004cb76:	jmp    0x14004d470
   14004cb7b:	int3   
   14004cb7c:	mov    QWORD PTR [rsp+0x8],rbx
   14004cb81:	mov    QWORD PTR [rsp+0x10],rsi
   14004cb86:	push   rdi
   14004cb87:	sub    rsp,0x20
   14004cb8b:	cmp    BYTE PTR [rdx+0x8],0x0
   14004cb8f:	mov    rsi,r8
   14004cb92:	mov    rbx,rdx
   14004cb95:	mov    rdi,rcx
   14004cb98:	jne    0x14004cbb0
   14004cb9a:	mov    eax,DWORD PTR [rcx+0xd0]
   14004cba0:	sub    eax,0x10
   14004cba3:	cmp    DWORD PTR [rdx],eax
   14004cba5:	jle    0x14004cbb0
   14004cba7:	call   0x14004eb48
   14004cbac:	test   al,al
   14004cbae:	je     0x14004cc0a
   14004cbb0:	mov    rdx,rbx
   14004cbb3:	mov    rcx,rdi
   14004cbb6:	call   0x14004cc1c
   14004cbbb:	mov    rdx,rbx
   14004cbbe:	mov    DWORD PTR [rsi+0x4],eax
   14004cbc1:	mov    rcx,rdi
   14004cbc4:	call   0x14004cc1c
   14004cbc9:	mov    rcx,rbx
   14004cbcc:	mov    DWORD PTR [rsi+0x8],eax
   14004cbcf:	call   0x140023e1c
   14004cbd4:	shr    eax,0xd
   14004cbd7:	mov    edx,0x3
   14004cbdc:	mov    rcx,rbx
   14004cbdf:	mov    BYTE PTR [rsi],al
   14004cbe1:	call   0x140023e04
   14004cbe6:	cmp    BYTE PTR [rsi],0x0
   14004cbe9:	jne    0x14004cc08
   14004cbeb:	mov    rcx,rbx
   14004cbee:	call   0x140023e1c
   14004cbf3:	shr    eax,0xb
   14004cbf6:	mov    edx,0x5
   14004cbfb:	inc    al
   14004cbfd:	mov    rcx,rbx
   14004cc00:	mov    BYTE PTR [rsi+0xc],al
   14004cc03:	call   0x140023e04
   14004cc08:	mov    al,0x1
   14004cc0a:	mov    rbx,QWORD PTR [rsp+0x30]
   14004cc0f:	mov    rsi,QWORD PTR [rsp+0x38]
   14004cc14:	add    rsp,0x20
   14004cc18:	pop    rdi
   14004cc19:	ret    
   14004cc1a:	int3   
   14004cc1b:	int3   
   14004cc1c:	mov    QWORD PTR [rsp+0x8],rbx
   14004cc21:	mov    QWORD PTR [rsp+0x10],rbp
   14004cc26:	mov    QWORD PTR [rsp+0x18],rsi
   14004cc2b:	push   rdi
   14004cc2c:	sub    rsp,0x20
   14004cc30:	mov    rcx,rdx
   14004cc33:	mov    rdi,rdx
   14004cc36:	call   0x140023e1c
   14004cc3b:	mov    r8d,DWORD PTR [rdi+0x4]
   14004cc3f:	xor    ebx,ebx
   14004cc41:	add    r8d,0x2
   14004cc45:	shr    eax,0xe
   14004cc48:	mov    ecx,r8d
   14004cc4b:	and    r8d,0x7
   14004cc4f:	shr    ecx,0x3
   14004cc52:	add    DWORD PTR [rdi],ecx
   14004cc54:	mov    DWORD PTR [rdi+0x4],r8d
   14004cc58:	add    eax,0x1
   14004cc5b:	je     0x14004cc8e
   14004cc5d:	mov    esi,ebx
   14004cc5f:	mov    ebp,eax
   14004cc61:	mov    rcx,rdi
   14004cc64:	call   0x140023e1c
   14004cc69:	mov    edx,DWORD PTR [rdi+0x4]
   14004cc6c:	mov    ecx,esi
   14004cc6e:	add    edx,0x8
   14004cc71:	shr    eax,0x8
   14004cc74:	shl    eax,cl
   14004cc76:	add    esi,0x8
   14004cc79:	mov    ecx,edx
   14004cc7b:	add    ebx,eax
   14004cc7d:	shr    ecx,0x3
   14004cc80:	and    edx,0x7
   14004cc83:	add    DWORD PTR [rdi],ecx
   14004cc85:	mov    DWORD PTR [rdi+0x4],edx
   14004cc88:	sub    rbp,0x1
   14004cc8c:	jne    0x14004cc61
   14004cc8e:	mov    rbp,QWORD PTR [rsp+0x38]
   14004cc93:	mov    eax,ebx
   14004cc95:	mov    rbx,QWORD PTR [rsp+0x30]
   14004cc9a:	mov    rsi,QWORD PTR [rsp+0x40]
   14004cc9f:	add    rsp,0x20
   14004cca3:	pop    rdi
   14004cca4:	ret    
   14004cca5:	int3   
   14004cca6:	int3   
   14004cca7:	int3   
   14004cca8:	mov    QWORD PTR [rsp+0x8],rbx
   14004ccad:	push   rdi
   14004ccae:	sub    rsp,0x20
   14004ccb2:	mov    eax,DWORD PTR [rcx+0x8]
   14004ccb5:	mov    r8,rcx
   14004ccb8:	add    eax,0x5
   14004ccbb:	cmp    DWORD PTR [rcx+0xd0],eax
   14004ccc1:	jl     0x14004ceef
   14004ccc7:	cmp    DWORD PTR [rcx+0x98a8],0x0
   14004ccce:	je     0x14004cde2
   14004ccd4:	movsxd rbx,DWORD PTR [rcx+0x8]
   14004ccd8:	lea    r11,[rcx+0x58f4]
   14004ccdf:	movsxd rax,DWORD PTR [rcx+0x98b0]
   14004cce6:	mov    edi,DWORD PTR [rcx+0xc]
   14004cce9:	imul   rdx,rax,0xeec
   14004ccf0:	lea    eax,[rbx+0x1]
   14004ccf3:	add    r11,rdx
   14004ccf6:	mov    rdx,QWORD PTR [rcx+0x18]
   14004ccfa:	movsxd rcx,eax
   14004ccfd:	movzx  r9d,BYTE PTR [rbx+rdx*1]
   14004cd02:	movzx  eax,BYTE PTR [rcx+rdx*1]
   14004cd06:	shl    r9d,0x8
   14004cd0a:	or     r9d,eax
   14004cd0d:	lea    eax,[rbx+0x2]
   14004cd10:	shl    r9d,0x8
   14004cd14:	movsxd rcx,eax
   14004cd17:	movzx  eax,BYTE PTR [rcx+rdx*1]
   14004cd1b:	mov    ecx,0x8
   14004cd20:	sub    ecx,edi
   14004cd22:	or     r9d,eax
   14004cd25:	shr    r9d,cl
   14004cd28:	mov    ecx,DWORD PTR [r11+0x84]
   14004cd2f:	and    r9d,0xfffe
   14004cd36:	cmp    r9d,DWORD PTR [r11+rcx*4+0x4]
   14004cd3b:	jae    0x14004cd71
   14004cd3d:	mov    eax,0x10
   14004cd42:	sub    eax,ecx
   14004cd44:	mov    cl,al
   14004cd46:	shr    r9d,cl
   14004cd49:	movzx  ecx,BYTE PTR [r9+r11*1+0x88]
   14004cd52:	add    ecx,edi
   14004cd54:	mov    eax,ecx
   14004cd56:	shr    eax,0x3
   14004cd59:	add    eax,ebx
   14004cd5b:	and    ecx,0x7
   14004cd5e:	mov    DWORD PTR [r8+0x8],eax
   14004cd62:	mov    DWORD PTR [r8+0xc],ecx
   14004cd66:	movzx  eax,WORD PTR [r11+r9*2+0x488]
   14004cd6f:	jmp    0x14004cdd8
   14004cd71:	mov    edx,0xf
   14004cd76:	inc    ecx
   14004cd78:	cmp    ecx,edx
   14004cd7a:	jae    0x14004cd99
   14004cd7c:	mov    r10d,ecx
   14004cd7f:	inc    r10
   14004cd82:	lea    r10,[r11+r10*4]
   14004cd86:	cmp    r9d,DWORD PTR [r10]
   14004cd89:	jb     0x14004cd97
   14004cd8b:	inc    ecx
   14004cd8d:	add    r10,0x4
   14004cd91:	cmp    ecx,edx
   14004cd93:	jb     0x14004cd86
   14004cd95:	jmp    0x14004cd99
   14004cd97:	mov    edx,ecx
   14004cd99:	lea    ecx,[rdi+rdx*1]
   14004cd9c:	mov    eax,ecx
   14004cd9e:	and    ecx,0x7
   14004cda1:	shr    eax,0x3
   14004cda4:	add    eax,ebx
   14004cda6:	mov    DWORD PTR [r8+0xc],ecx
   14004cdaa:	mov    DWORD PTR [r8+0x8],eax
   14004cdae:	mov    ecx,0x10
   14004cdb3:	sub    ecx,edx
   14004cdb5:	lea    eax,[rdx-0x1]
   14004cdb8:	sub    r9d,DWORD PTR [r11+rax*4+0x4]
   14004cdbd:	mov    eax,edx
   14004cdbf:	shr    r9d,cl
   14004cdc2:	add    r9d,DWORD PTR [r11+rax*4+0x44]
   14004cdc7:	cmp    r9d,DWORD PTR [r11]
   14004cdca:	sbb    eax,eax
   14004cdcc:	and    eax,r9d
   14004cdcf:	movzx  eax,WORD PTR [r11+rax*2+0xc88]
   14004cdd8:	cmp    eax,0x100
   14004cddd:	jmp    0x14004cee5
   14004cde2:	movsxd r11,DWORD PTR [rcx+0x8]
   14004cde6:	mov    rdx,QWORD PTR [rcx+0x18]
   14004cdea:	mov    ebx,DWORD PTR [rcx+0xc]
   14004cded:	lea    eax,[r11+0x1]
   14004cdf1:	movzx  r9d,BYTE PTR [r11+rdx*1]
   14004cdf6:	shl    r9d,0x8
   14004cdfa:	movsxd rcx,eax
   14004cdfd:	movzx  eax,BYTE PTR [rcx+rdx*1]
   14004ce01:	or     r9d,eax
   14004ce04:	lea    eax,[r11+0x2]
   14004ce08:	shl    r9d,0x8
   14004ce0c:	movsxd rcx,eax
   14004ce0f:	movzx  eax,BYTE PTR [rcx+rdx*1]
   14004ce13:	mov    ecx,0x8
   14004ce18:	sub    ecx,ebx
   14004ce1a:	or     r9d,eax
   14004ce1d:	shr    r9d,cl
   14004ce20:	mov    ecx,DWORD PTR [r8+0x170]
   14004ce27:	and    r9d,0xfffe
   14004ce2e:	cmp    r9d,DWORD PTR [r8+rcx*4+0xf0]
   14004ce36:	jae    0x14004ce6d
   14004ce38:	mov    eax,0x10
   14004ce3d:	sub    eax,ecx
   14004ce3f:	mov    cl,al
   14004ce41:	shr    r9d,cl
   14004ce44:	movzx  ecx,BYTE PTR [r9+r8*1+0x174]
   14004ce4d:	add    ecx,ebx
   14004ce4f:	mov    eax,ecx
   14004ce51:	shr    eax,0x3
   14004ce54:	add    eax,r11d
   14004ce57:	and    ecx,0x7
   14004ce5a:	mov    DWORD PTR [r8+0x8],eax
   14004ce5e:	mov    DWORD PTR [r8+0xc],ecx
   14004ce62:	movzx  eax,WORD PTR [r8+r9*2+0x574]
   14004ce6b:	jmp    0x14004cee0
   14004ce6d:	mov    edx,0xf
   14004ce72:	inc    ecx
   14004ce74:	cmp    ecx,edx
   14004ce76:	jae    0x14004ce96
   14004ce78:	mov    r10d,ecx
   14004ce7b:	add    r10,0x3c
   14004ce7f:	lea    r10,[r8+r10*4]
   14004ce83:	cmp    r9d,DWORD PTR [r10]
   14004ce86:	jb     0x14004ce94
   14004ce88:	inc    ecx
   14004ce8a:	add    r10,0x4
   14004ce8e:	cmp    ecx,edx
   14004ce90:	jb     0x14004ce83
   14004ce92:	jmp    0x14004ce96
   14004ce94:	mov    edx,ecx
   14004ce96:	lea    ecx,[rbx+rdx*1]
   14004ce99:	mov    eax,ecx
   14004ce9b:	and    ecx,0x7
   14004ce9e:	shr    eax,0x3
   14004cea1:	add    eax,r11d
   14004cea4:	mov    DWORD PTR [r8+0xc],ecx
   14004cea8:	mov    DWORD PTR [r8+0x8],eax
   14004ceac:	mov    ecx,0x10
   14004ceb1:	sub    ecx,edx
   14004ceb3:	lea    eax,[rdx-0x1]
   14004ceb6:	sub    r9d,DWORD PTR [r8+rax*4+0xf0]
   14004cebe:	mov    eax,edx
   14004cec0:	shr    r9d,cl
   14004cec3:	add    r9d,DWORD PTR [r8+rax*4+0x130]
   14004cecb:	cmp    r9d,DWORD PTR [r8+0xec]
   14004ced2:	sbb    eax,eax
   14004ced4:	and    eax,r9d
   14004ced7:	movzx  eax,WORD PTR [r8+rax*2+0xd74]
   14004cee0:	cmp    eax,0x10d
   14004cee5:	jne    0x14004ceef
   14004cee7:	mov    rcx,r8
   14004ceea:	call   0x14004cefc
   14004ceef:	mov    rbx,QWORD PTR [rsp+0x30]
   14004cef4:	add    rsp,0x20
   14004cef8:	pop    rdi
   14004cef9:	ret    
   14004cefa:	int3   
   14004cefb:	int3   
   14004cefc:	mov    rax,rsp
   14004ceff:	mov    QWORD PTR [rax+0x10],rbx
   14004cf03:	mov    QWORD PTR [rax+0x18],rsi
   14004cf07:	mov    QWORD PTR [rax+0x20],rdi
   14004cf0b:	push   rbp
   14004cf0c:	push   r12
   14004cf0e:	push   r13
   14004cf10:	push   r14
   14004cf12:	push   r15
   14004cf14:	lea    rbp,[rax-0x388]
   14004cf1b:	sub    rsp,0x460
   14004cf22:	mov    rax,QWORD PTR [rip+0x34fb7]        # 0x140081ee0
   14004cf29:	xor    rax,rsp
   14004cf2c:	mov    QWORD PTR [rbp+0x350],rax
   14004cf33:	mov    eax,DWORD PTR [rcx+0xd0]
   14004cf39:	xor    edi,edi
   14004cf3b:	sub    eax,0x19
   14004cf3e:	mov    rbx,rcx
   14004cf41:	cmp    DWORD PTR [rcx+0x8],eax
   14004cf44:	jle    0x14004cf56
   14004cf46:	call   0x14004eb48
   14004cf4b:	test   al,al
   14004cf4d:	jne    0x14004cf56
   14004cf4f:	xor    al,al
   14004cf51:	jmp    0x14004d43a
   14004cf56:	movsxd rdx,DWORD PTR [rbx+0x8]
   14004cf5a:	mov    r13d,0x8
   14004cf60:	mov    r8,QWORD PTR [rbx+0x18]
   14004cf64:	lea    eax,[rdx+0x1]
   14004cf67:	movzx  r9d,BYTE PTR [rdx+r8*1]
   14004cf6c:	movsxd rcx,eax
   14004cf6f:	shl    r9d,0x8
   14004cf73:	movzx  eax,BYTE PTR [rcx+r8*1]
   14004cf78:	or     r9d,eax
   14004cf7b:	lea    eax,[rdx+0x2]
   14004cf7e:	movsxd rcx,eax
   14004cf81:	shl    r9d,0x8
   14004cf85:	movzx  eax,BYTE PTR [rcx+r8*1]
   14004cf8a:	mov    ecx,r13d
   14004cf8d:	sub    ecx,DWORD PTR [rbx+0xc]
   14004cf90:	or     r9d,eax
   14004cf93:	shr    r9d,cl
   14004cf96:	movzx  esi,r9w
   14004cf9a:	mov    eax,esi
   14004cf9c:	and    eax,0x8000
   14004cfa1:	mov    DWORD PTR [rbx+0x98a8],eax
   14004cfa7:	bt     esi,0xe
   14004cfab:	jb     0x14004cfc1
   14004cfad:	lea    rcx,[rbx+0x94a4]
   14004cfb4:	xor    edx,edx
   14004cfb6:	mov    r8d,0x404
   14004cfbc:	call   0x140058f40
   14004cfc1:	mov    ecx,DWORD PTR [rbx+0xc]
   14004cfc4:	add    ecx,0x2
   14004cfc7:	mov    eax,ecx
   14004cfc9:	and    ecx,0x7
   14004cfcc:	shr    eax,0x3
   14004cfcf:	add    DWORD PTR [rbx+0x8],eax
   14004cfd2:	mov    DWORD PTR [rbx+0xc],ecx
   14004cfd5:	cmp    DWORD PTR [rbx+0x98a8],edi
   14004cfdb:	je     0x14004d017
   14004cfdd:	shr    esi,0xc
   14004cfe0:	and    esi,0x3
   14004cfe3:	lea    eax,[rsi+0x1]
   14004cfe6:	mov    DWORD PTR [rbx+0x98ac],eax
   14004cfec:	cmp    DWORD PTR [rbx+0x98b0],eax
   14004cff2:	jl     0x14004cffa
   14004cff4:	mov    DWORD PTR [rbx+0x98b0],edi
   14004cffa:	add    ecx,0x2
   14004cffd:	mov    eax,ecx
   14004cfff:	and    ecx,0x7
   14004d002:	shr    eax,0x3
   14004d005:	add    DWORD PTR [rbx+0x8],eax
   14004d008:	mov    DWORD PTR [rbx+0xc],ecx
   14004d00b:	imul   esi,DWORD PTR [rbx+0x98ac],0x101
   14004d015:	jmp    0x14004d01c
   14004d017:	mov    esi,0x176
   14004d01c:	mov    r14d,0x13
   14004d022:	lea    r10,[rsp+0x20]
   14004d027:	mov    r11d,r14d
   14004d02a:	movsxd rdx,DWORD PTR [rbx+0x8]
   14004d02e:	mov    r8,QWORD PTR [rbx+0x18]
   14004d032:	lea    eax,[rdx+0x1]
   14004d035:	movzx  r9d,BYTE PTR [rdx+r8*1]
   14004d03a:	shl    r9d,0x8
   14004d03e:	movsxd rcx,eax
   14004d041:	movzx  eax,BYTE PTR [rcx+r8*1]
   14004d046:	or     r9d,eax
   14004d049:	lea    eax,[rdx+0x2]
   14004d04c:	shl    r9d,0x8
   14004d050:	movsxd rcx,eax
   14004d053:	movzx  eax,BYTE PTR [rcx+r8*1]
   14004d058:	mov    ecx,r13d
   14004d05b:	sub    ecx,DWORD PTR [rbx+0xc]
   14004d05e:	or     r9d,eax
   14004d061:	shr    r9d,cl
   14004d064:	mov    ecx,DWORD PTR [rbx+0xc]
   14004d067:	add    ecx,0x4
   14004d06a:	shr    r9d,0xc
   14004d06e:	mov    eax,ecx
   14004d070:	and    r9b,0xf
   14004d074:	shr    eax,0x3
   14004d077:	and    ecx,0x7
   14004d07a:	add    DWORD PTR [rbx+0x8],eax
   14004d07d:	mov    BYTE PTR [r10],r9b
   14004d080:	inc    r10
   14004d083:	mov    DWORD PTR [rbx+0xc],ecx
   14004d086:	sub    r11,0x1
   14004d08a:	jne    0x14004d02a
   14004d08c:	lea    r15,[rbx+0x3c9c]
   14004d093:	mov    r9d,r14d
   14004d096:	mov    r8,r15
   14004d099:	lea    rdx,[rsp+0x20]
   14004d09e:	mov    rcx,rbx
   14004d0a1:	call   0x14004c178
   14004d0a6:	movsxd r12,esi
   14004d0a9:	mov    r14d,edi
   14004d0ac:	mov    rsi,rdi
   14004d0af:	test   r12,r12
   14004d0b2:	jle    0x14004d327
   14004d0b8:	mov    eax,DWORD PTR [rbx+0xd0]
   14004d0be:	sub    eax,0x5
   14004d0c1:	cmp    DWORD PTR [rbx+0x8],eax
   14004d0c4:	jle    0x14004d0d6
   14004d0c6:	mov    rcx,rbx
   14004d0c9:	call   0x14004eb48
   14004d0ce:	test   al,al
   14004d0d0:	je     0x14004cf4f
   14004d0d6:	movsxd r10,DWORD PTR [rbx+0x8]
   14004d0da:	mov    rdx,QWORD PTR [rbx+0x18]
   14004d0de:	mov    r11d,DWORD PTR [rbx+0xc]
   14004d0e2:	lea    eax,[r10+0x1]
   14004d0e6:	movzx  r8d,BYTE PTR [r10+rdx*1]
   14004d0eb:	shl    r8d,0x8
   14004d0ef:	movsxd rcx,eax
   14004d0f2:	movzx  eax,BYTE PTR [rcx+rdx*1]
   14004d0f6:	or     r8d,eax
   14004d0f9:	lea    eax,[r10+0x2]
   14004d0fd:	shl    r8d,0x8
   14004d101:	movsxd rcx,eax
   14004d104:	movzx  eax,BYTE PTR [rcx+rdx*1]
   14004d108:	mov    ecx,r13d
   14004d10b:	sub    ecx,r11d
   14004d10e:	or     r8d,eax
   14004d111:	shr    r8d,cl
   14004d114:	mov    ecx,DWORD PTR [r15+0x84]
   14004d11b:	and    r8d,0xfffe
   14004d122:	cmp    r8d,DWORD PTR [r15+rcx*4+0x4]
   14004d127:	jae    0x14004d15d
   14004d129:	mov    eax,0x10
   14004d12e:	sub    eax,ecx
   14004d130:	mov    cl,al
   14004d132:	shr    r8d,cl
   14004d135:	movzx  ecx,BYTE PTR [r8+r15*1+0x88]
   14004d13e:	add    ecx,r11d
   14004d141:	mov    eax,ecx
   14004d143:	shr    eax,0x3
   14004d146:	add    eax,r10d
   14004d149:	and    ecx,0x7
   14004d14c:	mov    DWORD PTR [rbx+0x8],eax
   14004d14f:	mov    DWORD PTR [rbx+0xc],ecx
   14004d152:	movzx  ecx,WORD PTR [r15+r8*2+0x488]
   14004d15b:	jmp    0x14004d1ca
   14004d15d:	mov    r9d,0xf
   14004d163:	inc    ecx
   14004d165:	cmp    ecx,r9d
   14004d168:	jae    0x14004d188
   14004d16a:	mov    edx,ecx
   14004d16c:	inc    rdx
   14004d16f:	lea    rdx,[r15+rdx*4]
   14004d173:	cmp    r8d,DWORD PTR [rdx]
   14004d176:	jb     0x14004d185
   14004d178:	inc    ecx
   14004d17a:	add    rdx,0x4
   14004d17e:	cmp    ecx,r9d
   14004d181:	jb     0x14004d173
   14004d183:	jmp    0x14004d188
   14004d185:	mov    r9d,ecx
   14004d188:	lea    ecx,[r9+r11*1]
   14004d18c:	mov    eax,ecx
   14004d18e:	and    ecx,0x7
   14004d191:	shr    eax,0x3
   14004d194:	add    eax,r10d
   14004d197:	mov    DWORD PTR [rbx+0xc],ecx
   14004d19a:	mov    DWORD PTR [rbx+0x8],eax
   14004d19d:	mov    ecx,0x10
   14004d1a2:	sub    ecx,r9d
   14004d1a5:	lea    eax,[r9-0x1]
   14004d1a9:	sub    r8d,DWORD PTR [r15+rax*4+0x4]
   14004d1ae:	shr    r8d,cl
   14004d1b1:	mov    eax,r9d
   14004d1b4:	add    r8d,DWORD PTR [r15+rax*4+0x44]
   14004d1b9:	cmp    r8d,DWORD PTR [r15]
   14004d1bc:	sbb    eax,eax
   14004d1be:	and    eax,r8d
   14004d1c1:	movzx  ecx,WORD PTR [r15+rax*2+0xc88]
   14004d1ca:	cmp    ecx,0x10
   14004d1cd:	jge    0x14004d1e9
   14004d1cf:	mov    al,BYTE PTR [rsi+rbx*1+0x94a4]
   14004d1d6:	inc    r14d
   14004d1d9:	add    al,cl
   14004d1db:	and    al,0xf
   14004d1dd:	mov    BYTE PTR [rsp+rsi*1+0x40],al
   14004d1e1:	inc    rsi
   14004d1e4:	jmp    0x14004d31e
   14004d1e9:	movsxd rdx,DWORD PTR [rbx+0x8]
   14004d1ed:	mov    r8,QWORD PTR [rbx+0x18]
   14004d1f1:	lea    eax,[rdx+0x1]
   14004d1f4:	movzx  r9d,BYTE PTR [rdx+r8*1]
   14004d1f9:	jne    0x14004d274
   14004d1fb:	shl    r9d,0x8
   14004d1ff:	movsxd rcx,eax
   14004d202:	movzx  eax,BYTE PTR [rcx+r8*1]
   14004d207:	or     r9d,eax
   14004d20a:	lea    eax,[rdx+0x2]
   14004d20d:	shl    r9d,0x8
   14004d211:	movsxd rcx,eax
   14004d214:	movzx  eax,BYTE PTR [rcx+r8*1]
   14004d219:	mov    ecx,r13d
   14004d21c:	sub    ecx,DWORD PTR [rbx+0xc]
   14004d21f:	or     r9d,eax
   14004d222:	shr    r9d,cl
   14004d225:	mov    ecx,DWORD PTR [rbx+0xc]
   14004d228:	add    ecx,0x2
   14004d22b:	shr    r9d,0xe
   14004d22f:	mov    eax,ecx
   14004d231:	and    r9d,0x3
   14004d235:	shr    eax,0x3
   14004d238:	and    ecx,0x7
   14004d23b:	add    DWORD PTR [rbx+0x8],eax
   14004d23e:	add    r9d,0x3
   14004d242:	mov    DWORD PTR [rbx+0xc],ecx
   14004d245:	test   rsi,rsi
   14004d248:	jle    0x14004d31e
   14004d24e:	jmp    0x14004d26a
   14004d250:	dec    r9d
   14004d253:	cmp    rsi,r12
   14004d256:	jge    0x14004d327
   14004d25c:	mov    al,BYTE PTR [rsp+rsi*1+0x3f]
   14004d260:	inc    r14d
   14004d263:	mov    BYTE PTR [rsp+rsi*1+0x40],al
   14004d267:	inc    rsi
   14004d26a:	test   r9d,r9d
   14004d26d:	jg     0x14004d250
   14004d26f:	jmp    0x14004d31e
   14004d274:	shl    r9d,0x8
   14004d278:	cmp    ecx,0x11
   14004d27b:	movsxd rcx,eax
   14004d27e:	movzx  eax,BYTE PTR [rcx+r8*1]
   14004d283:	jne    0x14004d2b7
   14004d285:	or     r9d,eax
   14004d288:	lea    eax,[rdx+0x2]
   14004d28b:	shl    r9d,0x8
   14004d28f:	movsxd rcx,eax
   14004d292:	movzx  eax,BYTE PTR [rcx+r8*1]
   14004d297:	mov    ecx,r13d
   14004d29a:	sub    ecx,DWORD PTR [rbx+0xc]
   14004d29d:	or     r9d,eax
   14004d2a0:	shr    r9d,cl
   14004d2a3:	mov    ecx,DWORD PTR [rbx+0xc]
   14004d2a6:	shr    r9d,0xd
   14004d2aa:	and    r9d,0x7
   14004d2ae:	add    r9d,0x3
   14004d2b2:	add    ecx,0x3
   14004d2b5:	jmp    0x14004d2e7
   14004d2b7:	or     r9d,eax
   14004d2ba:	lea    eax,[rdx+0x2]
   14004d2bd:	shl    r9d,0x8
   14004d2c1:	movsxd rcx,eax
   14004d2c4:	movzx  eax,BYTE PTR [rcx+r8*1]
   14004d2c9:	mov    ecx,r13d
   14004d2cc:	sub    ecx,DWORD PTR [rbx+0xc]
   14004d2cf:	or     r9d,eax
   14004d2d2:	shr    r9d,cl
   14004d2d5:	mov    ecx,DWORD PTR [rbx+0xc]
   14004d2d8:	shr    r9d,0x9
   14004d2dc:	and    r9d,0x7f
   14004d2e0:	add    r9d,0xb
   14004d2e4:	add    ecx,0x7
   14004d2e7:	mov    eax,ecx
   14004d2e9:	shr    eax,0x3
   14004d2ec:	add    DWORD PTR [rbx+0x8],eax
   14004d2ef:	and    ecx,0x7
   14004d2f2:	mov    DWORD PTR [rbx+0xc],ecx
   14004d2f5:	jmp    0x14004d319
   14004d2f7:	dec    r9d
   14004d2fa:	cmp    rsi,r12
   14004d2fd:	jge    0x14004d327
   14004d2ff:	mov    rax,rsi
   14004d302:	inc    r14d
   14004d305:	inc    rsi
   14004d308:	cmp    rax,0x404
   14004d30e:	jae    0x14004d46a
   14004d314:	mov    BYTE PTR [rsp+rax*1+0x40],dil
   14004d319:	test   r9d,r9d
   14004d31c:	jg     0x14004d2f7
   14004d31e:	cmp    rsi,r12
   14004d321:	jl     0x14004d0b8
   14004d327:	mov    ecx,DWORD PTR [rbx+0xd0]
   14004d32d:	cmp    DWORD PTR [rbx+0x8],ecx
   14004d330:	jg     0x14004d438
   14004d336:	cmp    DWORD PTR [rbx+0x98a8],edi
   14004d33c:	je     0x14004d38a
   14004d33e:	cmp    DWORD PTR [rbx+0x98ac],edi
   14004d344:	jle    0x14004d3d9
   14004d34a:	mov    esi,edi
   14004d34c:	mov    r14d,0x101
   14004d352:	movsxd rax,edi
   14004d355:	lea    r8,[rbx+0x58f4]
   14004d35c:	imul   rcx,rax,0xeec
   14004d363:	mov    eax,esi
   14004d365:	lea    rdx,[rsp+0x40]
   14004d36a:	add    r8,rcx
   14004d36d:	add    rdx,rax
   14004d370:	mov    rcx,rbx
   14004d373:	mov    r9d,r14d
   14004d376:	call   0x14004c178
   14004d37b:	inc    edi
   14004d37d:	add    esi,r14d
   14004d380:	cmp    edi,DWORD PTR [rbx+0x98ac]
   14004d386:	jl     0x14004d352
   14004d388:	jmp    0x14004d3d9
   14004d38a:	lea    r8,[rbx+0xec]
   14004d391:	mov    r9d,0x12a
   14004d397:	lea    rdx,[rsp+0x40]
   14004d39c:	mov    rcx,rbx
   14004d39f:	call   0x14004c178
   14004d3a4:	lea    r8,[rbx+0xfd8]
   14004d3ab:	mov    r9d,0x30
   14004d3b1:	lea    rdx,[rbp+0x6a]
   14004d3b5:	mov    rcx,rbx
   14004d3b8:	call   0x14004c178
   14004d3bd:	lea    r8,[rbx+0x2db0]
   14004d3c4:	mov    r9d,0x1c
   14004d3ca:	lea    rdx,[rbp+0x9a]
   14004d3d1:	mov    rcx,rbx
   14004d3d4:	call   0x14004c178
   14004d3d9:	add    rbx,0x94a4
   14004d3e0:	lea    rax,[rsp+0x40]
   14004d3e5:	mov    ecx,0x80
   14004d3ea:	movups xmm0,XMMWORD PTR [rax]
   14004d3ed:	movups xmm1,XMMWORD PTR [rax+0x10]
   14004d3f1:	movups XMMWORD PTR [rbx],xmm0
   14004d3f4:	movups xmm0,XMMWORD PTR [rax+0x20]
   14004d3f8:	movups XMMWORD PTR [rbx+0x10],xmm1
   14004d3fc:	movups xmm1,XMMWORD PTR [rax+0x30]
   14004d400:	movups XMMWORD PTR [rbx+0x20],xmm0
   14004d404:	movups xmm0,XMMWORD PTR [rax+0x40]
   14004d408:	movups XMMWORD PTR [rbx+0x30],xmm1
   14004d40c:	movups xmm1,XMMWORD PTR [rax+0x50]
   14004d410:	movups XMMWORD PTR [rbx+0x40],xmm0
   14004d414:	movups xmm0,XMMWORD PTR [rax+0x60]
   14004d418:	movups XMMWORD PTR [rbx+0x50],xmm1
   14004d41c:	movups xmm1,XMMWORD PTR [rax+0x70]
   14004d420:	add    rax,rcx
   14004d423:	movups XMMWORD PTR [rbx+0x60],xmm0
   14004d427:	add    rbx,rcx
   14004d42a:	movups XMMWORD PTR [rbx-0x10],xmm1
   14004d42e:	sub    r13,0x1
   14004d432:	jne    0x14004d3ea
   14004d434:	mov    eax,DWORD PTR [rax]
   14004d436:	mov    DWORD PTR [rbx],eax
   14004d438:	mov    al,0x1
   14004d43a:	mov    rcx,QWORD PTR [rbp+0x350]
   14004d441:	xor    rcx,rsp
   14004d444:	call   0x140055f90
   14004d449:	lea    r11,[rsp+0x460]
   14004d451:	mov    rbx,QWORD PTR [r11+0x38]
   14004d455:	mov    rsi,QWORD PTR [r11+0x40]
   14004d459:	mov    rdi,QWORD PTR [r11+0x48]
   14004d45d:	mov    rsp,r11
   14004d460:	pop    r15
   14004d462:	pop    r14
   14004d464:	pop    r13
   14004d466:	pop    r12
   14004d468:	pop    rbp
   14004d469:	ret    
   14004d46a:	call   0x1400560e8
   14004d46f:	int3   
   14004d470:	mov    rax,rsp
   14004d473:	mov    QWORD PTR [rax+0x10],rbx
   14004d477:	mov    QWORD PTR [rax+0x18],rsi
   14004d47b:	mov    QWORD PTR [rax+0x20],rdi
   14004d47f:	push   rbp
   14004d480:	push   r12
   14004d482:	push   r13
   14004d484:	push   r14
   14004d486:	push   r15
   14004d488:	lea    rbp,[rax-0x118]
   14004d48f:	sub    rsp,0x1f0
   14004d496:	mov    rax,QWORD PTR [rip+0x34a43]        # 0x140081ee0
   14004d49d:	xor    rax,rsp
   14004d4a0:	mov    QWORD PTR [rbp+0xe0],rax
   14004d4a7:	mov    eax,DWORD PTR [rcx+0xd0]
   14004d4ad:	lea    rsi,[rcx+0x8]
   14004d4b1:	sub    eax,0x19
   14004d4b4:	xor    r13d,r13d
   14004d4b7:	mov    rbx,rcx
   14004d4ba:	cmp    DWORD PTR [rsi],eax
   14004d4bc:	jle    0x14004d4ce
   14004d4be:	call   0x14004eaac
   14004d4c3:	test   al,al
   14004d4c5:	jne    0x14004d4ce
   14004d4c7:	xor    al,al
   14004d4c9:	jmp    0x14004d91c
   14004d4ce:	mov    edx,DWORD PTR [rbx+0xc]
   14004d4d1:	mov    rcx,rsi
   14004d4d4:	neg    edx
   14004d4d6:	and    edx,0x7
   14004d4d9:	call   0x140023e04
   14004d4de:	mov    rcx,rsi
   14004d4e1:	call   0x140023e1c
   14004d4e6:	bt     eax,0xf
   14004d4ea:	jae    0x14004d512
   14004d4ec:	mov    edi,0x1
   14004d4f1:	lea    r8,[rbx+0xe6f8]
   14004d4f8:	lea    rcx,[rbx+0x9a30]
   14004d4ff:	mov    DWORD PTR [rbx+0xe890],edi
   14004d505:	mov    rdx,rbx
   14004d508:	call   0x14004a9d0
   14004d50d:	jmp    0x14004d91c
   14004d512:	mov    DWORD PTR [rbx+0xe890],r13d
   14004d519:	mov    QWORD PTR [rbx+0x9a28],r13
   14004d520:	bt     eax,0xe
   14004d524:	jb     0x14004d53a
   14004d526:	lea    rcx,[rbx+0xe6fc]
   14004d52d:	xor    edx,edx
   14004d52f:	mov    r8d,0x194
   14004d535:	call   0x140058f40
   14004d53a:	mov    edx,0x2
   14004d53f:	mov    rcx,rsi
   14004d542:	call   0x140023e04
   14004d547:	mov    r15d,r13d
   14004d54a:	mov    r14,r13
   14004d54d:	mov    edi,0x1
   14004d552:	mov    rcx,rsi
   14004d555:	call   0x140023e1c
   14004d55a:	shr    eax,0xc
   14004d55d:	mov    edx,0x4
   14004d562:	mov    rcx,rsi
   14004d565:	movzx  r12d,al
   14004d569:	call   0x140023e04
   14004d56e:	cmp    r12d,0xf
   14004d572:	jne    0x14004d5d4
   14004d574:	mov    rcx,rsi
   14004d577:	call   0x140023e1c
   14004d57c:	shr    eax,0xc
   14004d57f:	mov    edx,0x4
   14004d584:	mov    rcx,rsi
   14004d587:	movzx  r12d,al
   14004d58b:	call   0x140023e04
   14004d590:	test   r12d,r12d
   14004d593:	jne    0x14004d59d
   14004d595:	mov    BYTE PTR [rsp+r14*1+0x20],0xf
   14004d59b:	jmp    0x14004d5d9
   14004d59d:	add    r12d,0x2
   14004d5a1:	jmp    0x14004d5c7
   14004d5a3:	sub    r12d,edi
   14004d5a6:	movsxd rax,r15d
   14004d5a9:	cmp    rax,0x14
   14004d5ad:	jae    0x14004d5cc
   14004d5af:	mov    rax,r14
   14004d5b2:	add    r15d,edi
   14004d5b5:	add    r14,rdi
   14004d5b8:	cmp    rax,0x14
   14004d5bc:	jae    0x14004d94c
   14004d5c2:	mov    BYTE PTR [rsp+rax*1+0x20],r13b
   14004d5c7:	test   r12d,r12d
   14004d5ca:	jg     0x14004d5a3
   14004d5cc:	sub    r15d,edi
   14004d5cf:	sub    r14,rdi
   14004d5d2:	jmp    0x14004d5d9
   14004d5d4:	mov    BYTE PTR [rsp+r14*1+0x20],r12b
   14004d5d9:	add    r15d,edi
   14004d5dc:	add    r14,rdi
   14004d5df:	cmp    r15d,0x14
   14004d5e3:	jb     0x14004d552
   14004d5e9:	lea    r15,[rbx+0x3c9c]
   14004d5f0:	mov    r9d,0x14
   14004d5f6:	mov    r8,r15
   14004d5f9:	lea    rdx,[rsp+0x20]
   14004d5fe:	mov    rcx,rbx
   14004d601:	call   0x14004c178
   14004d606:	mov    r12d,r13d
   14004d609:	mov    r14,r13
   14004d60c:	mov    r13d,0x3
   14004d612:	mov    eax,DWORD PTR [rbx+0xd0]
   14004d618:	sub    eax,0x5
   14004d61b:	cmp    DWORD PTR [rsi],eax
   14004d61d:	jle    0x14004d62f
   14004d61f:	mov    rcx,rbx
   14004d622:	call   0x14004eaac
   14004d627:	test   al,al
   14004d629:	je     0x14004d4c7
   14004d62f:	movsxd r10,DWORD PTR [rsi]
   14004d632:	mov    rdx,QWORD PTR [rsi+0x10]
   14004d636:	mov    r11d,DWORD PTR [rsi+0x4]
   14004d63a:	lea    eax,[r10+0x1]
   14004d63e:	movzx  r8d,BYTE PTR [r10+rdx*1]
   14004d643:	shl    r8d,0x8
   14004d647:	movsxd rcx,eax
   14004d64a:	movzx  eax,BYTE PTR [rcx+rdx*1]
   14004d64e:	or     r8d,eax
   14004d651:	lea    eax,[r10+0x2]
   14004d655:	shl    r8d,0x8
   14004d659:	movsxd rcx,eax
   14004d65c:	movzx  eax,BYTE PTR [rcx+rdx*1]
   14004d660:	mov    ecx,0x8
   14004d665:	sub    ecx,r11d
   14004d668:	or     r8d,eax
   14004d66b:	shr    r8d,cl
   14004d66e:	mov    ecx,DWORD PTR [r15+0x84]
   14004d675:	and    r8d,0xfffe
   14004d67c:	cmp    r8d,DWORD PTR [r15+rcx*4+0x4]
   14004d681:	jae    0x14004d6b6
   14004d683:	mov    eax,0x10
   14004d688:	sub    eax,ecx
   14004d68a:	mov    cl,al
   14004d68c:	shr    r8d,cl
   14004d68f:	movzx  ecx,BYTE PTR [r8+r15*1+0x88]
   14004d698:	add    ecx,r11d
   14004d69b:	mov    eax,ecx
   14004d69d:	shr    eax,0x3
   14004d6a0:	add    eax,r10d
   14004d6a3:	and    ecx,0x7
   14004d6a6:	mov    DWORD PTR [rsi],eax
   14004d6a8:	mov    DWORD PTR [rsi+0x4],ecx
   14004d6ab:	movzx  ecx,WORD PTR [r15+r8*2+0x488]
   14004d6b4:	jmp    0x14004d722
   14004d6b6:	mov    r9d,0xf
   14004d6bc:	inc    ecx
   14004d6be:	cmp    ecx,r9d
   14004d6c1:	jae    0x14004d6e1
   14004d6c3:	mov    edx,ecx
   14004d6c5:	inc    rdx
   14004d6c8:	lea    rdx,[r15+rdx*4]
   14004d6cc:	cmp    r8d,DWORD PTR [rdx]
   14004d6cf:	jb     0x14004d6de
   14004d6d1:	add    ecx,edi
   14004d6d3:	add    rdx,0x4
   14004d6d7:	cmp    ecx,r9d
   14004d6da:	jb     0x14004d6cc
   14004d6dc:	jmp    0x14004d6e1
   14004d6de:	mov    r9d,ecx
   14004d6e1:	lea    ecx,[r11+r9*1]
   14004d6e5:	mov    eax,ecx
   14004d6e7:	and    ecx,0x7
   14004d6ea:	shr    eax,0x3
   14004d6ed:	add    eax,r10d
   14004d6f0:	mov    DWORD PTR [rsi+0x4],ecx
   14004d6f3:	mov    DWORD PTR [rsi],eax
   14004d6f5:	mov    ecx,0x10
   14004d6fa:	sub    ecx,r9d
   14004d6fd:	lea    eax,[r9-0x1]
   14004d701:	sub    r8d,DWORD PTR [r15+rax*4+0x4]
   14004d706:	shr    r8d,cl
   14004d709:	mov    eax,r9d
   14004d70c:	add    r8d,DWORD PTR [r15+rax*4+0x44]
   14004d711:	cmp    r8d,DWORD PTR [r15]
   14004d714:	sbb    eax,eax
   14004d716:	and    eax,r8d
   14004d719:	movzx  ecx,WORD PTR [r15+rax*2+0xc88]
   14004d722:	cmp    ecx,0x10
   14004d725:	jge    0x14004d743
   14004d727:	mov    al,BYTE PTR [r14+rbx*1+0xe6fc]
   14004d72f:	add    r12d,edi
   14004d732:	add    al,cl
   14004d734:	and    al,0xf
   14004d736:	mov    BYTE PTR [rsp+r14*1+0x40],al
   14004d73b:	add    r14,rdi
   14004d73e:	jmp    0x14004d826
   14004d743:	cmp    ecx,0x12
   14004d746:	jge    0x14004d7bb
   14004d748:	cmp    ecx,0x10
   14004d74b:	mov    rcx,rsi
   14004d74e:	jne    0x14004d764
   14004d750:	call   0x140023e1c
   14004d755:	mov    r15d,eax
   14004d758:	mov    edx,r13d
   14004d75b:	shr    r15d,0xd
   14004d75f:	add    r15d,r13d
   14004d762:	jmp    0x14004d779
   14004d764:	call   0x140023e1c
   14004d769:	mov    r15d,eax
   14004d76c:	mov    edx,0x7
   14004d771:	shr    r15d,0x9
   14004d775:	add    r15d,0xb
   14004d779:	mov    rcx,rsi
   14004d77c:	call   0x140023e04
   14004d781:	test   r14,r14
   14004d784:	jle    0x14004d81f
   14004d78a:	test   r15d,r15d
   14004d78d:	jle    0x14004d81f
   14004d793:	mov    ecx,0x194
   14004d798:	sub    r15d,edi
   14004d79b:	cmp    r14,rcx
   14004d79e:	jge    0x14004d833
   14004d7a4:	mov    al,BYTE PTR [rsp+r14*1+0x3f]
   14004d7a9:	add    r12d,edi
   14004d7ac:	mov    BYTE PTR [rsp+r14*1+0x40],al
   14004d7b1:	add    r14,rdi
   14004d7b4:	test   r15d,r15d
   14004d7b7:	jg     0x14004d798
   14004d7b9:	jmp    0x14004d81f
   14004d7bb:	mov    rcx,rsi
   14004d7be:	jne    0x14004d7d4
   14004d7c0:	call   0x140023e1c
   14004d7c5:	mov    r15d,eax
   14004d7c8:	mov    edx,r13d
   14004d7cb:	shr    r15d,0xd
   14004d7cf:	add    r15d,r13d
   14004d7d2:	jmp    0x14004d7e9
   14004d7d4:	call   0x140023e1c
   14004d7d9:	mov    r15d,eax
   14004d7dc:	mov    edx,0x7
   14004d7e1:	shr    r15d,0x9
   14004d7e5:	add    r15d,0xb
   14004d7e9:	mov    rcx,rsi
   14004d7ec:	call   0x140023e04
   14004d7f1:	test   r15d,r15d
   14004d7f4:	jle    0x14004d81f
   14004d7f6:	mov    ecx,0x194
   14004d7fb:	sub    r15d,edi
   14004d7fe:	cmp    r14,rcx
   14004d801:	jge    0x14004d833
   14004d803:	mov    rax,r14
   14004d806:	add    r12d,edi
   14004d809:	add    r14,rdi
   14004d80c:	cmp    rax,rcx
   14004d80f:	jae    0x14004d952
   14004d815:	mov    BYTE PTR [rsp+rax*1+0x40],0x0
   14004d81a:	test   r15d,r15d
   14004d81d:	jg     0x14004d7fb
   14004d81f:	lea    r15,[rbx+0x3c9c]
   14004d826:	cmp    r14,0x194
   14004d82d:	jl     0x14004d612
   14004d833:	mov    eax,DWORD PTR [rbx+0xd0]
   14004d839:	mov    BYTE PTR [rbx+0xe894],dil
   14004d840:	cmp    DWORD PTR [rsi],eax
   14004d842:	jg     0x14004d4c7
   14004d848:	lea    r8,[rbx+0xec]
   14004d84f:	mov    r9d,0x12b
   14004d855:	lea    rdx,[rsp+0x40]
   14004d85a:	mov    rcx,rbx
   14004d85d:	call   0x14004c178
   14004d862:	lea    r8,[rbx+0xfd8]
   14004d869:	mov    r9d,0x3c
   14004d86f:	lea    rdx,[rbp+0x6b]
   14004d873:	mov    rcx,rbx
   14004d876:	call   0x14004c178
   14004d87b:	lea    r8,[rbx+0x1ec4]
   14004d882:	mov    r9d,0x11
   14004d888:	lea    rdx,[rbp+0xa7]
   14004d88f:	mov    rcx,rbx
   14004d892:	call   0x14004c178
   14004d897:	lea    r8,[rbx+0x2db0]
   14004d89e:	mov    r9d,0x1c
   14004d8a4:	lea    rdx,[rbp+0xb8]
   14004d8ab:	mov    rcx,rbx
   14004d8ae:	call   0x14004c178
   14004d8b3:	add    rbx,0xe6fc
   14004d8ba:	lea    rax,[rsp+0x40]
   14004d8bf:	mov    ecx,0x80
   14004d8c4:	movups xmm0,XMMWORD PTR [rax]
   14004d8c7:	movups xmm1,XMMWORD PTR [rax+0x10]
   14004d8cb:	movups XMMWORD PTR [rbx],xmm0
   14004d8ce:	movups xmm0,XMMWORD PTR [rax+0x20]
   14004d8d2:	movups XMMWORD PTR [rbx+0x10],xmm1
   14004d8d6:	movups xmm1,XMMWORD PTR [rax+0x30]
   14004d8da:	movups XMMWORD PTR [rbx+0x20],xmm0
   14004d8de:	movups xmm0,XMMWORD PTR [rax+0x40]
   14004d8e2:	movups XMMWORD PTR [rbx+0x30],xmm1
   14004d8e6:	movups xmm1,XMMWORD PTR [rax+0x50]
   14004d8ea:	movups XMMWORD PTR [rbx+0x40],xmm0
   14004d8ee:	movups xmm0,XMMWORD PTR [rax+0x60]
   14004d8f2:	movups XMMWORD PTR [rbx+0x50],xmm1
   14004d8f6:	movups xmm1,XMMWORD PTR [rax+0x70]
   14004d8fa:	add    rax,rcx
   14004d8fd:	movups XMMWORD PTR [rbx+0x60],xmm0
   14004d901:	add    rbx,rcx
   14004d904:	movups XMMWORD PTR [rbx-0x10],xmm1
   14004d908:	sub    r13,rdi
   14004d90b:	jne    0x14004d8c4
   14004d90d:	movups xmm0,XMMWORD PTR [rax]
   14004d910:	mov    ecx,DWORD PTR [rax+0x10]
   14004d913:	mov    al,dil
   14004d916:	movups XMMWORD PTR [rbx],xmm0
   14004d919:	mov    DWORD PTR [rbx+0x10],ecx
   14004d91c:	mov    rcx,QWORD PTR [rbp+0xe0]
   14004d923:	xor    rcx,rsp
   14004d926:	call   0x140055f90
   14004d92b:	lea    r11,[rsp+0x1f0]
   14004d933:	mov    rbx,QWORD PTR [r11+0x38]
   14004d937:	mov    rsi,QWORD PTR [r11+0x40]
   14004d93b:	mov    rdi,QWORD PTR [r11+0x48]
   14004d93f:	mov    rsp,r11
   14004d942:	pop    r15
   14004d944:	pop    r14
   14004d946:	pop    r13
   14004d948:	pop    r12
   14004d94a:	pop    rbp
   14004d94b:	ret    
   14004d94c:	call   0x1400560e8
   14004d951:	int3   
   14004d952:	call   0x1400560e8
   14004d957:	int3   
   14004d958:	mov    QWORD PTR [rsp+0x18],rbx
   14004d95d:	push   rbp
   14004d95e:	push   rsi
   14004d95f:	push   rdi
   14004d960:	push   r12
   14004d962:	push   r13
   14004d964:	push   r14
   14004d966:	push   r15
   14004d968:	lea    rbp,[rsp-0x100]
   14004d970:	sub    rsp,0x200
   14004d977:	mov    rax,QWORD PTR [rip+0x34562]        # 0x140081ee0
   14004d97e:	xor    rax,rsp
   14004d981:	mov    QWORD PTR [rbp+0xf0],rax
   14004d988:	xor    r12d,r12d
   14004d98b:	mov    r13,r9
   14004d98e:	mov    rbx,rdx
   14004d991:	mov    r15,rcx
   14004d994:	cmp    BYTE PTR [r8+0x11],r12b
   14004d998:	je     0x14004dcf0
   14004d99e:	cmp    BYTE PTR [rdx+0x8],r12b
   14004d9a2:	jne    0x14004d9c1
   14004d9a4:	mov    eax,DWORD PTR [rcx+0xd0]
   14004d9aa:	sub    eax,0x19
   14004d9ad:	cmp    DWORD PTR [rdx],eax
   14004d9af:	jle    0x14004d9c1
   14004d9b1:	call   0x14004eb48
   14004d9b6:	test   al,al
   14004d9b8:	jne    0x14004d9c1
   14004d9ba:	xor    al,al
   14004d9bc:	jmp    0x14004dcf2
   14004d9c1:	mov    esi,r12d
   14004d9c4:	mov    rdi,r12
   14004d9c7:	mov    rcx,rbx
   14004d9ca:	call   0x140023e1c
   14004d9cf:	shr    eax,0xc
   14004d9d2:	mov    edx,0x4
   14004d9d7:	mov    rcx,rbx
   14004d9da:	movzx  r14d,al
   14004d9de:	call   0x140023e04
   14004d9e3:	cmp    r14d,0xf
   14004d9e7:	jne    0x14004da46
   14004d9e9:	mov    rcx,rbx
   14004d9ec:	call   0x140023e1c
   14004d9f1:	shr    eax,0xc
   14004d9f4:	mov    edx,0x4
   14004d9f9:	mov    rcx,rbx
   14004d9fc:	movzx  r14d,al
   14004da00:	call   0x140023e04
   14004da05:	test   r14d,r14d
   14004da08:	jne    0x14004da11
   14004da0a:	mov    BYTE PTR [rsp+rdi*1+0x20],0xf
   14004da0f:	jmp    0x14004da4b
   14004da11:	add    r14d,0x2
   14004da15:	jmp    0x14004da3a
   14004da17:	dec    r14d
   14004da1a:	movsxd rax,esi
   14004da1d:	cmp    rax,0x14
   14004da21:	jae    0x14004da3f
   14004da23:	mov    rax,rdi
   14004da26:	inc    esi
   14004da28:	inc    rdi
   14004da2b:	cmp    rax,0x14
   14004da2f:	jae    0x14004dd1c
   14004da35:	mov    BYTE PTR [rsp+rax*1+0x20],r12b
   14004da3a:	test   r14d,r14d
   14004da3d:	jg     0x14004da17
   14004da3f:	dec    esi
   14004da41:	dec    rdi
   14004da44:	jmp    0x14004da4b
   14004da46:	mov    BYTE PTR [rsp+rdi*1+0x20],r14b
   14004da4b:	inc    esi
   14004da4d:	inc    rdi
   14004da50:	cmp    esi,0x14
   14004da53:	jb     0x14004d9c7
   14004da59:	lea    r12,[r13+0x3bb0]
   14004da60:	mov    r9d,0x14
   14004da66:	mov    r8,r12
   14004da69:	lea    rdx,[rsp+0x20]
   14004da6e:	mov    rcx,r15
   14004da71:	call   0x14004c178
   14004da76:	xor    r14d,r14d
   14004da79:	xor    edi,edi
   14004da7b:	cmp    BYTE PTR [rbx+0x8],0x0
   14004da7f:	jne    0x14004da9f
   14004da81:	mov    eax,DWORD PTR [r15+0xd0]
   14004da88:	sub    eax,0x5
   14004da8b:	cmp    DWORD PTR [rbx],eax
   14004da8d:	jle    0x14004da9f
   14004da8f:	mov    rcx,r15
   14004da92:	call   0x14004eb48
   14004da97:	test   al,al
   14004da99:	je     0x14004d9ba
   14004da9f:	movsxd r10,DWORD PTR [rbx]
   14004daa2:	mov    rdx,QWORD PTR [rbx+0x10]
   14004daa6:	mov    r11d,DWORD PTR [rbx+0x4]
   14004daaa:	lea    eax,[r10+0x1]
   14004daae:	movzx  r8d,BYTE PTR [r10+rdx*1]
   14004dab3:	shl    r8d,0x8
   14004dab7:	movsxd rcx,eax
   14004daba:	movzx  eax,BYTE PTR [rcx+rdx*1]
   14004dabe:	or     r8d,eax
   14004dac1:	lea    eax,[r10+0x2]
   14004dac5:	shl    r8d,0x8
   14004dac9:	movsxd rcx,eax
   14004dacc:	movzx  eax,BYTE PTR [rcx+rdx*1]
   14004dad0:	mov    ecx,0x8
   14004dad5:	sub    ecx,r11d
   14004dad8:	or     r8d,eax
   14004dadb:	shr    r8d,cl
   14004dade:	mov    ecx,DWORD PTR [r12+0x84]
   14004dae6:	and    r8d,0xfffe
   14004daed:	cmp    r8d,DWORD PTR [r12+rcx*4+0x4]
   14004daf2:	jae    0x14004db27
   14004daf4:	mov    eax,0x10
   14004daf9:	sub    eax,ecx
   14004dafb:	mov    cl,al
   14004dafd:	shr    r8d,cl
   14004db00:	movzx  ecx,BYTE PTR [r8+r12*1+0x88]
   14004db09:	add    ecx,r11d
   14004db0c:	mov    eax,ecx
   14004db0e:	shr    eax,0x3
   14004db11:	add    eax,r10d
   14004db14:	and    ecx,0x7
   14004db17:	mov    DWORD PTR [rbx],eax
   14004db19:	mov    DWORD PTR [rbx+0x4],ecx
   14004db1c:	movzx  eax,WORD PTR [r12+r8*2+0x488]
   14004db25:	jmp    0x14004db94
   14004db27:	mov    r9d,0xf
   14004db2d:	inc    ecx
   14004db2f:	cmp    ecx,r9d
   14004db32:	jae    0x14004db52
   14004db34:	mov    edx,ecx
   14004db36:	inc    rdx
   14004db39:	lea    rdx,[r12+rdx*4]
   14004db3d:	cmp    r8d,DWORD PTR [rdx]
   14004db40:	jb     0x14004db4f
   14004db42:	inc    ecx
   14004db44:	add    rdx,0x4
   14004db48:	cmp    ecx,r9d
   14004db4b:	jb     0x14004db3d
   14004db4d:	jmp    0x14004db52
   14004db4f:	mov    r9d,ecx
   14004db52:	lea    ecx,[r11+r9*1]
   14004db56:	mov    eax,ecx
   14004db58:	and    ecx,0x7
   14004db5b:	shr    eax,0x3
   14004db5e:	add    eax,r10d
   14004db61:	mov    DWORD PTR [rbx+0x4],ecx
   14004db64:	mov    DWORD PTR [rbx],eax
   14004db66:	mov    ecx,0x10
   14004db6b:	sub    ecx,r9d
   14004db6e:	lea    eax,[r9-0x1]
   14004db72:	sub    r8d,DWORD PTR [r12+rax*4+0x4]
   14004db77:	mov    eax,r9d
   14004db7a:	shr    r8d,cl
   14004db7d:	add    r8d,DWORD PTR [r12+rax*4+0x44]
   14004db82:	cmp    r8d,DWORD PTR [r12]
   14004db86:	sbb    eax,eax
   14004db88:	and    eax,r8d
   14004db8b:	movzx  eax,WORD PTR [r12+rax*2+0xc88]
   14004db94:	cmp    eax,0x10
   14004db97:	jge    0x14004dba8
   14004db99:	inc    r14d
   14004db9c:	mov    BYTE PTR [rsp+rdi*1+0x40],al
   14004dba0:	inc    rdi
   14004dba3:	jmp    0x14004dc67
   14004dba8:	mov    rcx,rbx
   14004dbab:	cmp    eax,0x12
   14004dbae:	jge    0x14004dc0c
   14004dbb0:	cmp    eax,0x10
   14004dbb3:	jne    0x14004dbc9
   14004dbb5:	call   0x140023e1c
   14004dbba:	mov    esi,eax
   14004dbbc:	mov    edx,0x3
   14004dbc1:	shr    esi,0xd
   14004dbc4:	add    esi,0x3
   14004dbc7:	jmp    0x14004dbdb
   14004dbc9:	call   0x140023e1c
   14004dbce:	mov    esi,eax
   14004dbd0:	mov    edx,0x7
   14004dbd5:	shr    esi,0x9
   14004dbd8:	add    esi,0xb
   14004dbdb:	mov    rcx,rbx
   14004dbde:	call   0x140023e04
   14004dbe3:	test   rdi,rdi
   14004dbe6:	jle    0x14004dc67
   14004dbe8:	test   esi,esi
   14004dbea:	jle    0x14004dc67
   14004dbec:	mov    ecx,0x1ae
   14004dbf1:	dec    esi
   14004dbf3:	cmp    rdi,rcx
   14004dbf6:	jge    0x14004dc74
   14004dbf8:	mov    al,BYTE PTR [rsp+rdi*1+0x3f]
   14004dbfc:	inc    r14d
   14004dbff:	mov    BYTE PTR [rsp+rdi*1+0x40],al
   14004dc03:	inc    rdi
   14004dc06:	test   esi,esi
   14004dc08:	jg     0x14004dbf1
   14004dc0a:	jmp    0x14004dc67
   14004dc0c:	jne    0x14004dc22
   14004dc0e:	call   0x140023e1c
   14004dc13:	mov    esi,eax
   14004dc15:	mov    edx,0x3
   14004dc1a:	shr    esi,0xd
   14004dc1d:	add    esi,0x3
   14004dc20:	jmp    0x14004dc34
   14004dc22:	call   0x140023e1c
   14004dc27:	mov    esi,eax
   14004dc29:	mov    edx,0x7
   14004dc2e:	shr    esi,0x9
   14004dc31:	add    esi,0xb
   14004dc34:	mov    rcx,rbx
   14004dc37:	call   0x140023e04
   14004dc3c:	test   esi,esi
   14004dc3e:	jle    0x14004dc67
   14004dc40:	mov    ecx,0x1ae
   14004dc45:	dec    esi
   14004dc47:	cmp    rdi,rcx
   14004dc4a:	jge    0x14004dc74
   14004dc4c:	mov    rax,rdi
   14004dc4f:	inc    r14d
   14004dc52:	inc    rdi
   14004dc55:	cmp    rax,rcx
   14004dc58:	jae    0x14004dd22
   14004dc5e:	mov    BYTE PTR [rsp+rax*1+0x40],0x0
   14004dc63:	test   esi,esi
   14004dc65:	jg     0x14004dc45
   14004dc67:	cmp    rdi,0x1ae
   14004dc6e:	jl     0x14004da7b
   14004dc74:	cmp    BYTE PTR [rbx+0x8],0x0
   14004dc78:	jne    0x14004dc89
   14004dc7a:	mov    eax,DWORD PTR [r15+0xd0]
   14004dc81:	cmp    DWORD PTR [rbx],eax
   14004dc83:	jg     0x14004d9ba
   14004dc89:	mov    r9d,0x132
   14004dc8f:	lea    rdx,[rsp+0x40]
   14004dc94:	mov    r8,r13
   14004dc97:	mov    rcx,r15
   14004dc9a:	call   0x14004c178
   14004dc9f:	lea    r8,[r13+0xeec]
   14004dca6:	mov    r9d,0x40
   14004dcac:	lea    rdx,[rbp+0x72]
   14004dcb0:	mov    rcx,r15
   14004dcb3:	call   0x14004c178
   14004dcb8:	lea    r8,[r13+0x1dd8]
   14004dcbf:	mov    r9d,0x10
   14004dcc5:	lea    rdx,[rbp+0xb2]
   14004dccc:	mov    rcx,r15
   14004dccf:	call   0x14004c178
   14004dcd4:	lea    r8,[r13+0x2cc4]
   14004dcdb:	mov    r9d,0x2c
   14004dce1:	lea    rdx,[rbp+0xc2]
   14004dce8:	mov    rcx,r15
   14004dceb:	call   0x14004c178
   14004dcf0:	mov    al,0x1
   14004dcf2:	mov    rcx,QWORD PTR [rbp+0xf0]
   14004dcf9:	xor    rcx,rsp
   14004dcfc:	call   0x140055f90
   14004dd01:	mov    rbx,QWORD PTR [rsp+0x250]
   14004dd09:	add    rsp,0x200
   14004dd10:	pop    r15
   14004dd12:	pop    r14
   14004dd14:	pop    r13
   14004dd16:	pop    r12
   14004dd18:	pop    rdi
   14004dd19:	pop    rsi
   14004dd1a:	pop    rbp
   14004dd1b:	ret    
   14004dd1c:	call   0x1400560e8
   14004dd21:	int3   
   14004dd22:	call   0x1400560e8
   14004dd27:	int3   
   14004dd28:	mov    rax,rsp
   14004dd2b:	push   r12
   14004dd2d:	push   r14
   14004dd2f:	push   r15
   14004dd31:	sub    rsp,0x50
   14004dd35:	mov    QWORD PTR [rax-0x48],0xfffffffffffffffe
   14004dd3d:	mov    QWORD PTR [rax+0x8],rbx
   14004dd41:	mov    QWORD PTR [rax+0x10],rbp
   14004dd45:	mov    QWORD PTR [rax+0x18],rsi
   14004dd49:	mov    QWORD PTR [rax+0x20],rdi
   14004dd4d:	mov    rbx,rcx
   14004dd50:	movsxd r8,DWORD PTR [rcx+0x8]
   14004dd54:	mov    r9,QWORD PTR [rcx+0x18]
   14004dd58:	movzx  r10d,BYTE PTR [r8+r9*1]
   14004dd5d:	shl    r10d,0x8
   14004dd61:	lea    eax,[r8+0x1]
   14004dd65:	movsxd rdx,eax
   14004dd68:	movzx  eax,BYTE PTR [rdx+r9*1]
   14004dd6d:	or     r10d,eax
   14004dd70:	shl    r10d,0x8
   14004dd74:	lea    eax,[r8+0x2]
   14004dd78:	movsxd rcx,eax
   14004dd7b:	movzx  eax,BYTE PTR [rcx+r9*1]
   14004dd80:	or     r10d,eax
   14004dd83:	mov    r11d,0x8
   14004dd89:	mov    ecx,r11d
   14004dd8c:	sub    ecx,DWORD PTR [rbx+0xc]
   14004dd8f:	shr    r10d,cl
   14004dd92:	shr    r10d,0x8
   14004dd96:	movzx  r12d,r10b
   14004dd9a:	mov    ecx,DWORD PTR [rbx+0xc]
   14004dd9d:	add    ecx,r11d
   14004dda0:	mov    eax,ecx
   14004dda2:	shr    eax,0x3
   14004dda5:	add    DWORD PTR [rbx+0x8],eax
   14004dda8:	lea    r10d,[r11-0x1]
   14004ddac:	and    ecx,r10d
   14004ddaf:	mov    DWORD PTR [rbx+0xc],ecx
   14004ddb2:	mov    edi,r12d
   14004ddb5:	and    edi,r10d
   14004ddb8:	inc    edi
   14004ddba:	cmp    edi,r10d
   14004ddbd:	jne    0x14004de0b
   14004ddbf:	movsxd rdx,DWORD PTR [rbx+0x8]
   14004ddc3:	mov    r8,r9
   14004ddc6:	movzx  r9d,BYTE PTR [rdx+r9*1]
   14004ddcb:	shl    r9d,0x8
   14004ddcf:	lea    eax,[rdx+0x1]
   14004ddd2:	movsxd rcx,eax
   14004ddd5:	movzx  eax,BYTE PTR [rcx+r8*1]
   14004ddda:	or     r9d,eax
   14004dddd:	shl    r9d,0x8
   14004dde1:	lea    eax,[rdx+0x2]
   14004dde4:	movsxd rcx,eax
   14004dde7:	movzx  eax,BYTE PTR [rcx+r8*1]
   14004ddec:	or     r9d,eax
   14004ddef:	mov    ecx,r11d
   14004ddf2:	sub    ecx,DWORD PTR [rbx+0xc]
   14004ddf5:	shr    r9d,cl
   14004ddf8:	shr    r9d,0x8
   14004ddfc:	movzx  edi,r9b
   14004de00:	add    edi,r10d
   14004de03:	mov    ecx,DWORD PTR [rbx+0xc]
   14004de06:	add    ecx,r11d
   14004de09:	jmp    0x14004de53
   14004de0b:	cmp    edi,r11d
   14004de0e:	jne    0x14004de61
   14004de10:	movsxd rdx,DWORD PTR [rbx+0x8]
   14004de14:	mov    r8,r9
   14004de17:	movzx  r9d,BYTE PTR [rdx+r9*1]
   14004de1c:	shl    r9d,0x8
   14004de20:	lea    eax,[rdx+0x1]
   14004de23:	movsxd rcx,eax
   14004de26:	movzx  eax,BYTE PTR [rcx+r8*1]
   14004de2b:	or     r9d,eax
   14004de2e:	shl    r9d,0x8
   14004de32:	lea    eax,[rdx+0x2]
   14004de35:	movsxd rcx,eax
   14004de38:	movzx  eax,BYTE PTR [rcx+r8*1]
   14004de3d:	or     r9d,eax
   14004de40:	mov    ecx,r11d
   14004de43:	sub    ecx,DWORD PTR [rbx+0xc]
   14004de46:	shr    r9d,cl
   14004de49:	movzx  edi,r9w
   14004de4d:	mov    ecx,DWORD PTR [rbx+0xc]
   14004de50:	add    ecx,0x10
   14004de53:	mov    eax,ecx
   14004de55:	shr    eax,0x3
   14004de58:	add    DWORD PTR [rbx+0x8],eax
   14004de5b:	and    ecx,r10d
   14004de5e:	mov    DWORD PTR [rbx+0xc],ecx
   14004de61:	and    QWORD PTR [rsp+0x28],0x0
   14004de67:	and    QWORD PTR [rsp+0x30],0x0
   14004de6d:	and    QWORD PTR [rsp+0x38],0x0
   14004de73:	and    QWORD PTR [rsp+0x40],0x0
   14004de79:	movsxd rbp,edi
   14004de7c:	mov    rdx,rbp
   14004de7f:	lea    rcx,[rsp+0x28]
   14004de84:	call   0x140001858
   14004de89:	nop
   14004de8a:	xor    r14d,r14d
   14004de8d:	xor    r15d,r15d
   14004de90:	mov    rsi,QWORD PTR [rsp+0x28]
   14004de95:	test   edi,edi
   14004de97:	jle    0x14004df2a
   14004de9d:	mov    eax,DWORD PTR [rbx+0xd0]
   14004dea3:	dec    eax
   14004dea5:	cmp    DWORD PTR [rbx+0x8],eax
   14004dea8:	jl     0x14004debe
   14004deaa:	mov    rcx,rbx
   14004dead:	call   0x14004eaac
   14004deb2:	test   al,al
   14004deb4:	jne    0x14004debe
   14004deb6:	lea    eax,[rdi-0x1]
   14004deb9:	cmp    r14d,eax
   14004debc:	jl     0x14004df26
   14004debe:	movsxd rdx,DWORD PTR [rbx+0x8]
   14004dec2:	mov    r8,QWORD PTR [rbx+0x18]
   14004dec6:	movzx  r9d,BYTE PTR [rdx+r8*1]
   14004decb:	shl    r9d,0x8
   14004decf:	lea    eax,[rdx+0x1]
   14004ded2:	movsxd rcx,eax
   14004ded5:	movzx  eax,BYTE PTR [rcx+r8*1]
   14004deda:	or     r9d,eax
   14004dedd:	shl    r9d,0x8
   14004dee1:	lea    eax,[rdx+0x2]
   14004dee4:	movsxd rcx,eax
   14004dee7:	movzx  eax,BYTE PTR [rcx+r8*1]
   14004deec:	or     r9d,eax
   14004deef:	mov    ecx,0x8
   14004def4:	sub    ecx,DWORD PTR [rbx+0xc]
   14004def7:	shr    r9d,cl
   14004defa:	shr    r9d,0x8
   14004defe:	mov    BYTE PTR [r15+rsi*1],r9b
   14004df02:	mov    ecx,DWORD PTR [rbx+0xc]
   14004df05:	add    ecx,0x8
   14004df08:	mov    eax,ecx
   14004df0a:	shr    eax,0x3
   14004df0d:	add    DWORD PTR [rbx+0x8],eax
   14004df10:	and    ecx,0x7
   14004df13:	mov    DWORD PTR [rbx+0xc],ecx
   14004df16:	inc    r14d
   14004df19:	inc    r15
   14004df1c:	cmp    r15,rbp
   14004df1f:	jge    0x14004df2a
   14004df21:	jmp    0x14004de9d
   14004df26:	xor    bl,bl
   14004df28:	jmp    0x14004df3d
   14004df2a:	mov    r9d,edi
   14004df2d:	mov    r8,rsi
   14004df30:	mov    edx,r12d
   14004df33:	mov    rcx,rbx
   14004df36:	call   0x14004959c
   14004df3b:	mov    bl,al
   14004df3d:	test   rsi,rsi
   14004df40:	je     0x14004df4a
   14004df42:	mov    rcx,rsi
   14004df45:	call   0x14005a938
   14004df4a:	mov    al,bl
   14004df4c:	lea    r11,[rsp+0x50]
   14004df51:	mov    rbx,QWORD PTR [r11+0x20]
   14004df55:	mov    rbp,QWORD PTR [r11+0x28]
   14004df59:	mov    rsi,QWORD PTR [r11+0x30]
   14004df5d:	mov    rdi,QWORD PTR [r11+0x38]
   14004df61:	mov    rsp,r11
   14004df64:	pop    r15
   14004df66:	pop    r14
   14004df68:	pop    r12
   14004df6a:	ret    
   14004df6b:	int3   
   14004df6c:	mov    rax,rsp
   14004df6f:	push   r12
   14004df71:	push   r14
   14004df73:	push   r15
   14004df75:	sub    rsp,0x50
   14004df79:	mov    QWORD PTR [rax-0x48],0xfffffffffffffffe
   14004df81:	mov    QWORD PTR [rax+0x8],rbx
   14004df85:	mov    QWORD PTR [rax+0x10],rbp
   14004df89:	mov    QWORD PTR [rax+0x18],rsi
   14004df8d:	mov    QWORD PTR [rax+0x20],rdi
   14004df91:	mov    rsi,rcx
   14004df94:	lea    rdi,[rcx+0x9a30]
   14004df9b:	mov    rcx,rdi
   14004df9e:	call   0x14004a770
   14004dfa3:	mov    r15d,eax
   14004dfa6:	cmp    eax,0xffffffff
   14004dfa9:	jne    0x14004dfc1
   14004dfab:	mov    rcx,rdi
   14004dfae:	call   0x140049f14
   14004dfb3:	and    DWORD PTR [rsi+0xe890],0x0
   14004dfba:	xor    al,al
   14004dfbc:	jmp    0x14004e08a
   14004dfc1:	mov    ebx,eax
   14004dfc3:	and    ebx,0x7
   14004dfc6:	inc    ebx
   14004dfc8:	cmp    ebx,0x7
   14004dfcb:	jne    0x14004dfdf
   14004dfcd:	mov    rcx,rdi
   14004dfd0:	call   0x14004a770
   14004dfd5:	cmp    eax,0xffffffff
   14004dfd8:	je     0x14004dfab
   14004dfda:	lea    ebx,[rax+0x7]
   14004dfdd:	jmp    0x14004e005
   14004dfdf:	cmp    ebx,0x8
   14004dfe2:	jne    0x14004e005
   14004dfe4:	mov    rcx,rdi
   14004dfe7:	call   0x14004a770
   14004dfec:	mov    ebx,eax
   14004dfee:	mov    rcx,rdi
   14004dff1:	cmp    eax,0xffffffff
   14004dff4:	je     0x14004dfae
   14004dff6:	call   0x14004a770
   14004dffb:	cmp    eax,0xffffffff
   14004dffe:	je     0x14004dfab
   14004e000:	shl    ebx,0x8
   14004e003:	add    ebx,eax
   14004e005:	and    QWORD PTR [rsp+0x28],0x0
   14004e00b:	and    QWORD PTR [rsp+0x30],0x0
   14004e011:	and    QWORD PTR [rsp+0x38],0x0
   14004e017:	and    QWORD PTR [rsp+0x40],0x0
   14004e01d:	movsxd r12,ebx
   14004e020:	mov    rdx,r12
   14004e023:	lea    rcx,[rsp+0x28]
   14004e028:	call   0x140001858
   14004e02d:	nop
   14004e02e:	xor    r14d,r14d
   14004e031:	mov    rbp,QWORD PTR [rsp+0x28]
   14004e036:	test   ebx,ebx
   14004e038:	jle    0x14004e068
   14004e03a:	mov    rcx,rdi
   14004e03d:	call   0x14004a770
   14004e042:	cmp    eax,0xffffffff
   14004e045:	je     0x14004e055
   14004e047:	mov    BYTE PTR [r14+rbp*1],al
   14004e04b:	inc    r14
   14004e04e:	cmp    r14,r12
   14004e051:	jge    0x14004e068
   14004e053:	jmp    0x14004e03a
   14004e055:	mov    rcx,rdi
   14004e058:	call   0x140049f14
   14004e05d:	and    DWORD PTR [rsi+0xe890],0x0
   14004e064:	xor    bl,bl
   14004e066:	jmp    0x14004e07b
   14004e068:	mov    r9d,ebx
   14004e06b:	mov    r8,rbp
   14004e06e:	mov    edx,r15d
   14004e071:	mov    rcx,rsi
   14004e074:	call   0x14004959c
   14004e079:	mov    bl,al
   14004e07b:	test   rbp,rbp
   14004e07e:	je     0x14004e088
   14004e080:	mov    rcx,rbp
   14004e083:	call   0x14005a938
   14004e088:	mov    al,bl
   14004e08a:	lea    r11,[rsp+0x50]
   14004e08f:	mov    rbx,QWORD PTR [r11+0x20]
   14004e093:	mov    rbp,QWORD PTR [r11+0x28]
   14004e097:	mov    rsi,QWORD PTR [r11+0x30]
   14004e09b:	mov    rdi,QWORD PTR [r11+0x38]
   14004e09f:	mov    rsp,r11
   14004e0a2:	pop    r15
   14004e0a4:	pop    r14
   14004e0a6:	pop    r12
   14004e0a8:	ret    
   14004e0a9:	int3   
   14004e0aa:	int3   
   14004e0ab:	int3   
   14004e0ac:	mov    QWORD PTR [rsp+0x8],rbx
   14004e0b1:	push   rdi
   14004e0b2:	sub    rsp,0x20
   14004e0b6:	mov    rbx,rcx
   14004e0b9:	mov    edi,0x20
   14004e0be:	mov    rcx,QWORD PTR [rbx]
   14004e0c1:	test   rcx,rcx
   14004e0c4:	je     0x14004e0cf
   14004e0c6:	call   0x14005a938
   14004e0cb:	and    QWORD PTR [rbx],0x0
   14004e0cf:	add    rbx,0x8
   14004e0d3:	sub    rdi,0x1
   14004e0d7:	jne    0x14004e0be
   14004e0d9:	mov    rbx,QWORD PTR [rsp+0x30]
   14004e0de:	add    rsp,0x20
   14004e0e2:	pop    rdi
   14004e0e3:	ret    
   14004e0e4:	mov    QWORD PTR [rsp+0x8],rbx
   14004e0e9:	mov    QWORD PTR [rsp+0x10],rsi
   14004e0ee:	mov    QWORD PTR [rsp+0x18],rdi
   14004e0f3:	push   r14
   14004e0f5:	sub    rsp,0x20
   14004e0f9:	mov    rbx,rcx
   14004e0fc:	mov    r14d,0x100
   14004e102:	mov    r8d,r14d
   14004e105:	add    rcx,0x680
   14004e10c:	xor    edx,edx
   14004e10e:	call   0x140058f40
   14004e113:	lea    rsi,[rbx+0x4ab0]
   14004e11a:	mov    rcx,rsi
   14004e11d:	call   0x14004bd78
   14004e122:	mov    eax,DWORD PTR [rbx+0x674]
   14004e128:	mov    edx,0xc
   14004e12d:	cmp    eax,edx
   14004e12f:	cmovl  edx,eax
   14004e132:	or     eax,0xffffffff
   14004e135:	sub    eax,edx
   14004e137:	xor    edi,edi
   14004e139:	mov    DWORD PTR [rbx+0x67c],eax
   14004e13f:	mov    rcx,QWORD PTR [rsi+0xc0]
   14004e146:	cmp    rcx,QWORD PTR [rsi+0xb8]
   14004e14d:	je     0x14004e15c
   14004e14f:	add    rcx,0xffffffffffffffec
   14004e153:	mov    QWORD PTR [rsi+0xc0],rcx
   14004e15a:	jmp    0x14004e181
   14004e15c:	mov    rcx,QWORD PTR [rsi+0xc8]
   14004e163:	test   rcx,rcx
   14004e166:	je     0x14004e174
   14004e168:	mov    rax,QWORD PTR [rcx]
   14004e16b:	mov    QWORD PTR [rsi+0xc8],rax
   14004e172:	jmp    0x14004e181
   14004e174:	xor    edx,edx
   14004e176:	mov    rcx,rsi
   14004e179:	call   0x140049c84
   14004e17e:	mov    rcx,rax
   14004e181:	mov    QWORD PTR [rbx+0x648],rcx
   14004e188:	mov    edx,0x80
   14004e18d:	mov    QWORD PTR [rbx+0x658],rcx
   14004e194:	mov    QWORD PTR [rcx+0xc],rdi
   14004e198:	mov    ecx,0x101
   14004e19d:	mov    eax,DWORD PTR [rbx+0x674]
   14004e1a3:	mov    DWORD PTR [rbx+0x670],eax
   14004e1a9:	mov    rax,QWORD PTR [rbx+0x648]
   14004e1b0:	mov    WORD PTR [rax],r14w
   14004e1b4:	mov    rax,QWORD PTR [rbx+0x648]
   14004e1bb:	mov    WORD PTR [rax+0x2],cx
   14004e1bf:	mov    rcx,rsi
   14004e1c2:	call   0x140049c08
   14004e1c7:	mov    rcx,QWORD PTR [rbx+0x648]
   14004e1ce:	mov    r8d,edi
   14004e1d1:	mov    rdx,rdi
   14004e1d4:	mov    QWORD PTR [rcx+0x4],rax
   14004e1d8:	mov    QWORD PTR [rbx+0x660],rax
   14004e1df:	mov    eax,DWORD PTR [rbx+0x67c]
   14004e1e5:	mov    DWORD PTR [rbx+0x678],eax
   14004e1eb:	mov    BYTE PTR [rbx+0xa81],dil
   14004e1f2:	mov    rax,QWORD PTR [rbx+0x648]
   14004e1f9:	mov    rcx,QWORD PTR [rax+0x4]
   14004e1fd:	mov    BYTE PTR [rdx+rcx*1],r8b
   14004e201:	inc    r8d
   14004e204:	mov    rax,QWORD PTR [rbx+0x648]
   14004e20b:	lea    rdx,[rdx+0xa]
   14004e20f:	mov    rcx,QWORD PTR [rax+0x4]
   14004e213:	mov    BYTE PTR [rcx+rdx*1-0x9],0x1
   14004e218:	mov    rax,QWORD PTR [rbx+0x648]
   14004e21f:	mov    rcx,QWORD PTR [rax+0x4]
   14004e223:	mov    QWORD PTR [rcx+rdx*1-0x8],rdi
   14004e228:	cmp    r8d,r14d
   14004e22b:	jl     0x14004e1f2
   14004e22d:	lea    rsi,[rip+0x23024]        # 0x140071258
   14004e234:	mov    r8,rbx
   14004e237:	sub    r8,rsi
   14004e23a:	mov    r10d,edi
   14004e23d:	add    r8,0xa84
   14004e244:	mov    r14d,0x2
   14004e24a:	mov    r9,rsi
   14004e24d:	movzx  eax,WORD PTR [r9]
   14004e251:	lea    ecx,[r10+0x2]
   14004e255:	cdq    
   14004e256:	mov    r11d,0x8
   14004e25c:	idiv   ecx
   14004e25e:	lea    rdx,[r8+r9*1]
   14004e262:	mov    ecx,0x4000
   14004e267:	sub    cx,ax
   14004e26a:	mov    WORD PTR [rdx],cx
   14004e26d:	add    rdx,0x10
   14004e271:	sub    r11,0x1
   14004e275:	jne    0x14004e262
   14004e277:	add    r9,r14
   14004e27a:	lea    rax,[rip+0x22fe7]        # 0x140071268
   14004e281:	cmp    r9,rax
   14004e284:	jl     0x14004e24d
   14004e286:	inc    r10d
   14004e289:	sub    r8,0xffffffffffffff80
   14004e28d:	cmp    r10d,0x80
   14004e294:	jl     0x14004e24a
   14004e296:	lea    rcx,[rbx+0x3]
   14004e29a:	lea    edx,[r14+rdi*1]
   14004e29e:	movzx  eax,dx
   14004e2a1:	shl    ax,0x2
   14004e2a5:	add    dx,ax
   14004e2a8:	mov    eax,0x10
   14004e2ad:	shl    dx,0x3
   14004e2b1:	mov    WORD PTR [rcx-0x1],0x403
   14004e2b7:	mov    WORD PTR [rcx-0x3],dx
   14004e2bb:	add    rcx,0x4
   14004e2bf:	sub    rax,0x1
   14004e2c3:	jne    0x14004e2b1
   14004e2c5:	inc    edi
   14004e2c7:	cmp    edi,0x19
   14004e2ca:	jl     0x14004e29a
   14004e2cc:	mov    rbx,QWORD PTR [rsp+0x30]
   14004e2d1:	mov    rsi,QWORD PTR [rsp+0x38]
   14004e2d6:	mov    rdi,QWORD PTR [rsp+0x40]
   14004e2db:	add    rsp,0x20
   14004e2df:	pop    r14
   14004e2e1:	ret    
   14004e2e2:	int3   
   14004e2e3:	int3   
   14004e2e4:	mov    rax,rsp
   14004e2e7:	mov    QWORD PTR [rax+0x8],rbx
   14004e2eb:	mov    QWORD PTR [rax+0x10],rbp
   14004e2ef:	mov    QWORD PTR [rax+0x18],rsi
   14004e2f3:	mov    QWORD PTR [rax+0x20],rdi
   14004e2f7:	push   r14
   14004e2f9:	sub    rsp,0x30
   14004e2fd:	and    DWORD PTR [rcx+0x58d8],0x0
   14004e304:	lea    rbp,[rcx+0x8]
   14004e308:	mov    rsi,rcx
   14004e30b:	mov    rcx,rbp
   14004e30e:	call   0x140023e1c
   14004e313:	cmp    DWORD PTR [rsi+0x58e0],0x2
   14004e31a:	mov    edi,eax
   14004e31c:	mov    r14d,0x1
   14004e322:	jne    0x14004e352
   14004e324:	mov    edx,r14d
   14004e327:	mov    rcx,rbp
   14004e32a:	call   0x140023e04
   14004e32f:	cmp    edi,0x8000
   14004e335:	jb     0x14004e349
   14004e337:	mov    r8d,DWORD PTR [rsi+0xb4]
   14004e33e:	mov    edx,DWORD PTR [rsi+0xb8]
   14004e344:	jmp    0x14004e5ca
   14004e349:	add    edi,edi
   14004e34b:	and    DWORD PTR [rsi+0x58e0],0x0
   14004e352:	shr    edi,0x8
   14004e355:	lea    r8,[rip+0xfffffffffffb1ca4]        # 0x140000000
   14004e35c:	xor    ebx,ebx
   14004e35e:	cmp    DWORD PTR [rsi+0x58c8],0x25
   14004e365:	jae    0x14004e3aa
   14004e367:	cmp    ebx,r14d
   14004e36a:	jne    0x14004e377
   14004e36c:	mov    ecx,DWORD PTR [rsi+0x58d4]
   14004e372:	add    ecx,0x3
   14004e375:	jmp    0x14004e37f
   14004e377:	mov    ecx,DWORD PTR [r8+rbx*4+0x81c00]
   14004e37f:	mov    edx,DWORD PTR [r8+rbx*4+0x81c40]
   14004e387:	mov    eax,0xff
   14004e38c:	sar    eax,cl
   14004e38e:	xor    edx,edi
   14004e390:	not    eax
   14004e392:	test   eax,edx
   14004e394:	je     0x14004e39b
   14004e396:	add    ebx,r14d
   14004e399:	jmp    0x14004e367
   14004e39b:	cmp    ebx,r14d
   14004e39e:	je     0x14004e3e2
   14004e3a0:	mov    edx,DWORD PTR [r8+rbx*4+0x81c00]
   14004e3a8:	jmp    0x14004e3f5
   14004e3aa:	cmp    ebx,0x3
   14004e3ad:	jne    0x14004e3b9
   14004e3af:	mov    ecx,DWORD PTR [rsi+0x58d4]
   14004e3b5:	add    ecx,ebx
   14004e3b7:	jmp    0x14004e3c1
   14004e3b9:	mov    ecx,DWORD PTR [r8+rbx*4+0x81c80]
   14004e3c1:	mov    edx,DWORD PTR [r8+rbx*4+0x81cc0]
   14004e3c9:	mov    eax,0xff
   14004e3ce:	sar    eax,cl
   14004e3d0:	xor    edx,edi
   14004e3d2:	not    eax
   14004e3d4:	test   eax,edx
   14004e3d6:	je     0x14004e3dd
   14004e3d8:	add    ebx,r14d
   14004e3db:	jmp    0x14004e3aa
   14004e3dd:	cmp    ebx,0x3
   14004e3e0:	jne    0x14004e3ed
   14004e3e2:	mov    edx,DWORD PTR [rsi+0x58d4]
   14004e3e8:	add    edx,0x3
   14004e3eb:	jmp    0x14004e3f5
   14004e3ed:	mov    edx,DWORD PTR [r8+rbx*4+0x81c80]
   14004e3f5:	mov    rcx,rbp
   14004e3f8:	call   0x140023e04
   14004e3fd:	cmp    ebx,0x9
   14004e400:	jb     0x14004e514
   14004e406:	jne    0x14004e414
   14004e408:	add    DWORD PTR [rsi+0x58e0],r14d
   14004e40f:	jmp    0x14004e337
   14004e414:	and    DWORD PTR [rsi+0x58e0],0x0
   14004e41b:	cmp    ebx,0xe
   14004e41e:	jne    0x14004e47f
   14004e420:	mov    rcx,rbp
   14004e423:	call   0x140023e1c
   14004e428:	mov    edx,eax
   14004e42a:	lea    r9,[rip+0x335b7]        # 0x1400819e8
   14004e431:	lea    rax,[rip+0x335d8]        # 0x140081a10
   14004e438:	mov    rcx,rsi
   14004e43b:	lea    r8d,[rbx-0xb]
   14004e43f:	mov    QWORD PTR [rsp+0x20],rax
   14004e444:	call   0x14004ab10
   14004e449:	mov    rcx,rbp
   14004e44c:	lea    edi,[rax+0x5]
   14004e44f:	call   0x140023e1c
   14004e454:	mov    ebx,eax
   14004e456:	mov    edx,0xf
   14004e45b:	bts    ebx,0x10
   14004e45f:	mov    rcx,rbp
   14004e462:	shr    ebx,1
   14004e464:	call   0x140023e04
   14004e469:	mov    r8d,edi
   14004e46c:	mov    DWORD PTR [rsi+0xb4],edi
   14004e472:	mov    edx,ebx
   14004e474:	mov    DWORD PTR [rsi+0xb8],ebx
   14004e47a:	jmp    0x14004e5ca
   14004e47f:	mov    ecx,DWORD PTR [rsi+0xb0]
   14004e485:	sub    ecx,ebx
   14004e487:	add    ecx,r14d
   14004e48a:	and    ecx,0x3
   14004e48d:	mov    edi,DWORD PTR [rsi+rcx*4+0xa0]
   14004e494:	mov    rcx,rbp
   14004e497:	call   0x140023e1c
   14004e49c:	mov    edx,eax
   14004e49e:	lea    r9,[rip+0x334db]        # 0x140081980
   14004e4a5:	lea    rax,[rip+0x33504]        # 0x1400819b0
   14004e4ac:	mov    r8d,0x2
   14004e4b2:	mov    rcx,rsi
   14004e4b5:	mov    QWORD PTR [rsp+0x20],rax
   14004e4ba:	call   0x14004ab10
   14004e4bf:	lea    r8d,[rax+0x2]
   14004e4c3:	cmp    r8d,0x101
   14004e4ca:	jne    0x14004e4dd
   14004e4cc:	cmp    ebx,0xa
   14004e4cf:	jne    0x14004e4dd
   14004e4d1:	xor    DWORD PTR [rsi+0x58d4],r14d
   14004e4d8:	jmp    0x14004e5d2
   14004e4dd:	cmp    edi,0x100
   14004e4e3:	jbe    0x14004e4e8
   14004e4e5:	add    r8d,r14d
   14004e4e8:	cmp    edi,DWORD PTR [rsi+0x58f0]
   14004e4ee:	jb     0x14004e4f3
   14004e4f0:	add    r8d,r14d
   14004e4f3:	mov    eax,DWORD PTR [rsi+0xb0]
   14004e4f9:	mov    edx,edi
   14004e4fb:	mov    DWORD PTR [rsi+rax*4+0xa0],edi
   14004e502:	mov    DWORD PTR [rsi+0xb4],r8d
   14004e509:	mov    DWORD PTR [rsi+0xb8],edi
   14004e50f:	jmp    0x14004e5b8
   14004e514:	mov    ecx,DWORD PTR [rsi+0x58c8]
   14004e51a:	and    DWORD PTR [rsi+0x58e0],0x0
   14004e521:	add    ecx,ebx
   14004e523:	mov    eax,ecx
   14004e525:	shr    eax,0x4
   14004e528:	sub    ecx,eax
   14004e52a:	mov    DWORD PTR [rsi+0x58c8],ecx
   14004e530:	mov    rcx,rbp
   14004e533:	call   0x140023e1c
   14004e538:	mov    edx,eax
   14004e53a:	lea    r9,[rip+0x335bf]        # 0x140081b00
   14004e541:	lea    rax,[rip+0x335d8]        # 0x140081b20
   14004e548:	mov    r8d,0x5
   14004e54e:	mov    rcx,rsi
   14004e551:	mov    QWORD PTR [rsp+0x20],rax
   14004e556:	call   0x14004ab10
   14004e55b:	movzx  ecx,al
   14004e55e:	movzx  r9d,WORD PTR [rsi+rcx*2+0x4fba]
   14004e567:	sub    ecx,r14d
   14004e56a:	cmp    ecx,0xffffffff
   14004e56d:	je     0x14004e591
   14004e56f:	movsxd rdx,ecx
   14004e572:	lea    eax,[rcx+0x1]
   14004e575:	movsxd rcx,eax
   14004e578:	movzx  eax,WORD PTR [rsi+rdx*2+0x4fba]
   14004e580:	mov    WORD PTR [rsi+rcx*2+0x4fba],ax
   14004e588:	mov    WORD PTR [rsi+rdx*2+0x4fba],r9w
   14004e591:	mov    eax,DWORD PTR [rsi+0xb0]
   14004e597:	add    ebx,0x2
   14004e59a:	add    r9d,r14d
   14004e59d:	mov    r8d,ebx
   14004e5a0:	mov    edx,r9d
   14004e5a3:	mov    DWORD PTR [rsi+rax*4+0xa0],r9d
   14004e5ab:	mov    DWORD PTR [rsi+0xb4],ebx
   14004e5b1:	mov    DWORD PTR [rsi+0xb8],r9d
   14004e5b8:	mov    eax,DWORD PTR [rsi+0xb0]
   14004e5be:	add    eax,r14d
   14004e5c1:	and    eax,0x3
   14004e5c4:	mov    DWORD PTR [rsi+0xb0],eax
   14004e5ca:	mov    rcx,rsi
   14004e5cd:	call   0x140049fb8
   14004e5d2:	mov    rbx,QWORD PTR [rsp+0x40]
   14004e5d7:	mov    rbp,QWORD PTR [rsp+0x48]
   14004e5dc:	mov    rsi,QWORD PTR [rsp+0x50]
   14004e5e1:	mov    rdi,QWORD PTR [rsp+0x58]
   14004e5e6:	add    rsp,0x30
   14004e5ea:	pop    r14
   14004e5ec:	ret    
   14004e5ed:	int3   
   14004e5ee:	int3   
   14004e5ef:	int3   
   14004e5f0:	mov    QWORD PTR [rsp+0x8],rbx
   14004e5f5:	mov    QWORD PTR [rsp+0x10],rbp
   14004e5fa:	mov    QWORD PTR [rsp+0x18],rsi
   14004e5ff:	push   rdi
   14004e600:	sub    rsp,0x20
   14004e604:	lea    eax,[r8-0x1]
   14004e608:	mov    r10d,r9d
   14004e60b:	movsxd r8,eax
   14004e60e:	mov    rbx,rdx
   14004e611:	lea    eax,[r9-0x1]
   14004e615:	mov    rdi,rcx
   14004e618:	movzx  ebp,BYTE PTR [r8+rcx*1+0x2a]
   14004e61e:	movsxd r8,eax
   14004e621:	movzx  r9d,BYTE PTR [r8+rcx*1+0x2a]
   14004e627:	cmp    ebp,r9d
   14004e62a:	jne    0x14004e631
   14004e62c:	mov    rax,rdx
   14004e62f:	jmp    0x14004e67c
   14004e631:	mov    rsi,QWORD PTR [rcx+r9*8+0xc8]
   14004e639:	test   rsi,rsi
   14004e63c:	je     0x14004e671
   14004e63e:	mov    rcx,QWORD PTR [rsi]
   14004e641:	lea    r8d,[r10+r10*4]
   14004e645:	mov    QWORD PTR [rdi+r9*8+0xc8],rcx
   14004e64d:	mov    rcx,rsi
   14004e650:	shl    r8d,0x2
   14004e654:	call   0x140059180
   14004e659:	mov    rcx,QWORD PTR [rdi+rbp*8+0xc8]
   14004e661:	mov    rax,rsi
   14004e664:	mov    QWORD PTR [rbx],rcx
   14004e667:	mov    QWORD PTR [rdi+rbp*8+0xc8],rbx
   14004e66f:	jmp    0x14004e67c
   14004e671:	mov    r8d,ebp
   14004e674:	call   0x14004e694
   14004e679:	mov    rax,rbx
   14004e67c:	mov    rbx,QWORD PTR [rsp+0x30]
   14004e681:	mov    rbp,QWORD PTR [rsp+0x38]
   14004e686:	mov    rsi,QWORD PTR [rsp+0x40]
   14004e68b:	add    rsp,0x20
   14004e68f:	pop    rdi
   14004e690:	ret    
   14004e691:	int3   
   14004e692:	int3   
   14004e693:	int3   
   14004e694:	movsxd rax,r9d
   14004e697:	mov    r10,rcx
   14004e69a:	movzx  r9d,BYTE PTR [rax+rcx*1+0x4]
   14004e6a0:	movsxd rax,r8d
   14004e6a3:	lea    r8d,[r9+r9*4]
   14004e6a7:	movzx  r11d,BYTE PTR [rax+rcx*1+0x4]
   14004e6ad:	sub    r11d,r9d
   14004e6b0:	shl    r8d,0x2
   14004e6b4:	add    r8,rdx
   14004e6b7:	lea    eax,[r11-0x1]
   14004e6bb:	movsxd rdx,eax
   14004e6be:	movzx  r9d,BYTE PTR [rdx+rcx*1+0x2a]
   14004e6c4:	movzx  ecx,BYTE PTR [r9+rcx*1+0x4]
   14004e6ca:	cmp    ecx,r11d
   14004e6cd:	je     0x14004e6fa
   14004e6cf:	dec    r9d
   14004e6d2:	movsxd rcx,r9d
   14004e6d5:	mov    rax,QWORD PTR [r10+rcx*8+0xc8]
   14004e6dd:	mov    QWORD PTR [r8],rax
   14004e6e0:	mov    QWORD PTR [r10+rcx*8+0xc8],r8
   14004e6e8:	movzx  edx,BYTE PTR [rcx+r10*1+0x4]
   14004e6ee:	lea    eax,[rdx+rdx*4]
   14004e6f1:	shl    eax,0x2
   14004e6f4:	add    r8,rax
   14004e6f7:	sub    r11d,edx
   14004e6fa:	lea    eax,[r11-0x1]
   14004e6fe:	movsxd rcx,eax
   14004e701:	movzx  eax,BYTE PTR [rcx+r10*1+0x2a]
   14004e707:	mov    ecx,eax
   14004e709:	mov    rax,QWORD PTR [r10+rax*8+0xc8]
   14004e711:	mov    QWORD PTR [r8],rax
   14004e714:	mov    QWORD PTR [r10+rcx*8+0xc8],r8
   14004e71c:	ret    
   14004e71d:	int3   
   14004e71e:	int3   
   14004e71f:	int3   
   14004e720:	mov    QWORD PTR [rsp+0x8],rbx
   14004e725:	push   rdi
   14004e726:	sub    rsp,0x20
   14004e72a:	mov    rdi,rcx
   14004e72d:	mov    BYTE PTR [rcx+0xa80],0x1
   14004e734:	mov    DWORD PTR [rcx+0x674],edx
   14004e73a:	call   0x14004e0e4
   14004e73f:	movabs rax,0x404040404040404
   14004e749:	mov    WORD PTR [rdi+0x880],0x200
   14004e752:	xor    ebx,ebx
   14004e754:	mov    QWORD PTR [rdi+0x882],rax
   14004e75b:	lea    rcx,[rdi+0x88b]
   14004e762:	mov    BYTE PTR [rdi+0x88a],al
   14004e768:	mov    r8d,0xf5
   14004e76e:	lea    edx,[rbx+0x6]
   14004e771:	call   0x140058f40
   14004e776:	lea    rax,[rdi+0x780]
   14004e77d:	mov    BYTE PTR [rax],bl
   14004e77f:	inc    ebx
   14004e781:	inc    rax
   14004e784:	cmp    ebx,0x3
   14004e787:	jl     0x14004e77d
   14004e789:	mov    ecx,0x100
   14004e78e:	mov    edx,0x1
   14004e793:	mov    r8d,edx
   14004e796:	cmp    ebx,ecx
   14004e798:	jge    0x14004e7c4
   14004e79a:	movsxd rax,ebx
   14004e79d:	lea    r9,[rdi+0x780]
   14004e7a4:	add    r9,rax
   14004e7a7:	sub    ecx,ebx
   14004e7a9:	mov    eax,ecx
   14004e7ab:	mov    BYTE PTR [r9],bl
   14004e7ae:	sub    edx,0x1
   14004e7b1:	jne    0x14004e7bb
   14004e7b3:	inc    r8d
   14004e7b6:	mov    edx,r8d
   14004e7b9:	inc    ebx
   14004e7bb:	inc    r9
   14004e7be:	sub    rax,0x1
   14004e7c2:	jne    0x14004e7ab
   14004e7c4:	xor    edx,edx
   14004e7c6:	lea    rcx,[rdi+0x980]
   14004e7cd:	lea    r8d,[rdx+0x40]
   14004e7d1:	call   0x140058f40
   14004e7d6:	lea    rcx,[rdi+0x9c0]
   14004e7dd:	mov    edx,0x8
   14004e7e2:	mov    r8d,0xc0
   14004e7e8:	call   0x140058f40
   14004e7ed:	mov    rbx,QWORD PTR [rsp+0x30]
   14004e7f2:	mov    BYTE PTR [rdi+0x642],0x7
   14004e7f9:	add    rsp,0x20
   14004e7fd:	pop    rdi
   14004e7fe:	ret    
   14004e7ff:	int3   
   14004e800:	mov    QWORD PTR [rsp+0x8],rbx
   14004e805:	mov    QWORD PTR [rsp+0x10],rsi
   14004e80a:	push   rdi
   14004e80b:	sub    rsp,0x20
   14004e80f:	mov    edi,edx
   14004e811:	mov    rbx,rcx
   14004e814:	shl    edi,0x14
   14004e817:	cmp    DWORD PTR [rcx],edi
   14004e819:	je     0x14004e877
   14004e81b:	cmp    DWORD PTR [rcx],0x0
   14004e81e:	je     0x14004e82f
   14004e820:	and    DWORD PTR [rcx],0x0
   14004e823:	mov    rcx,QWORD PTR [rcx+0xb0]
   14004e82a:	call   0x14005a938
   14004e82f:	mov    eax,0xaaaaaaab
   14004e834:	mul    edi
   14004e836:	shr    edx,0x3
   14004e839:	add    edx,0x2
   14004e83c:	lea    eax,[rdx+rdx*4]
   14004e83f:	shl    eax,0x2
   14004e842:	mov    ecx,eax
   14004e844:	mov    esi,eax
   14004e846:	call   0x14005d520
   14004e84b:	mov    QWORD PTR [rbx+0xb0],rax
   14004e852:	test   rax,rax
   14004e855:	jne    0x14004e867
   14004e857:	lea    rcx,[rip+0x46002]        # 0x140094860
   14004e85e:	call   0x14001bd24
   14004e863:	xor    al,al
   14004e865:	jmp    0x14004e879
   14004e867:	add    rax,0xffffffffffffffec
   14004e86b:	mov    DWORD PTR [rbx],edi
   14004e86d:	add    rax,rsi
   14004e870:	mov    QWORD PTR [rbx+0x208],rax
   14004e877:	mov    al,0x1
   14004e879:	mov    rbx,QWORD PTR [rsp+0x30]
   14004e87e:	mov    rsi,QWORD PTR [rsp+0x38]
   14004e883:	add    rsp,0x20
   14004e887:	pop    rdi
   14004e888:	ret    
   14004e889:	int3   
   14004e88a:	int3   
   14004e88b:	int3   
   14004e88c:	sub    rsp,0x28
   14004e890:	cmp    DWORD PTR [rcx],0x0
   14004e893:	je     0x14004e8a4
   14004e895:	and    DWORD PTR [rcx],0x0
   14004e898:	mov    rcx,QWORD PTR [rcx+0xb0]
   14004e89f:	call   0x14005a938
   14004e8a4:	add    rsp,0x28
   14004e8a8:	ret    
   14004e8a9:	int3   
   14004e8aa:	int3   
   14004e8ab:	int3   
   14004e8ac:	xor    r8d,r8d
   14004e8af:	test   edx,edx
   14004e8b1:	jne    0x14004e8ed
   14004e8b3:	mov    eax,0x80
   14004e8b8:	mov    QWORD PTR [rcx+0x58d4],r8
   14004e8bf:	mov    DWORD PTR [rcx+0x58ec],eax
   14004e8c5:	mov    DWORD PTR [rcx+0x58e8],eax
   14004e8cb:	mov    QWORD PTR [rcx+0x58cc],r8
   14004e8d2:	mov    QWORD PTR [rcx+0x58c4],r8
   14004e8d9:	mov    DWORD PTR [rcx+0x58c0],0x3500
   14004e8e3:	mov    DWORD PTR [rcx+0x58f0],0x2001
   14004e8ed:	mov    QWORD PTR [rcx+0x58e0],r8
   14004e8f4:	mov    DWORD PTR [rcx+0x58bc],r8d
   14004e8fb:	mov    DWORD PTR [rcx+0x58dc],r8d
   14004e902:	mov    DWORD PTR [rcx+0xd0],r8d
   14004e909:	ret    
   14004e90a:	int3   
   14004e90b:	int3   
   14004e90c:	test   edx,edx
   14004e90e:	jne    0x14004e970
   14004e910:	push   rbx
   14004e911:	sub    rsp,0x20
   14004e915:	xor    eax,eax
   14004e917:	mov    DWORD PTR [rcx+0x98ac],0x1
   14004e921:	mov    QWORD PTR [rcx+0x98b0],rax
   14004e928:	mov    rbx,rcx
   14004e92b:	mov    DWORD PTR [rcx+0x98a8],eax
   14004e931:	mov    r8d,0x170
   14004e937:	add    rcx,0x98b8
   14004e93e:	call   0x140058f40
   14004e943:	lea    rcx,[rbx+0x94a4]
   14004e94a:	xor    edx,edx
   14004e94c:	mov    r8d,0x404
   14004e952:	call   0x140058f40
   14004e957:	lea    rcx,[rbx+0x58f4]
   14004e95e:	xor    edx,edx
   14004e960:	mov    r8d,0x3bb0
   14004e966:	call   0x140058f40
   14004e96b:	add    rsp,0x20
   14004e96f:	pop    rbx
   14004e970:	ret    
   14004e971:	int3   
   14004e972:	int3   
   14004e973:	int3   
   14004e974:	mov    QWORD PTR [rsp+0x8],rbx
   14004e979:	push   rdi
   14004e97a:	sub    rsp,0x20
   14004e97e:	mov    dil,dl
   14004e981:	mov    rbx,rcx
   14004e984:	test   dl,dl
   14004e986:	jne    0x14004e9b3
   14004e988:	mov    BYTE PTR [rcx+0xe894],dl
   14004e98e:	mov    r8d,0x194
   14004e994:	add    rcx,0xe6fc
   14004e99b:	xor    edx,edx
   14004e99d:	call   0x140058f40
   14004e9a2:	and    DWORD PTR [rbx+0xe890],0x0
   14004e9a9:	mov    DWORD PTR [rbx+0xe6f8],0x2
   14004e9b3:	mov    dl,dil
   14004e9b6:	mov    rcx,rbx
   14004e9b9:	mov    rbx,QWORD PTR [rsp+0x30]
   14004e9be:	add    rsp,0x20
   14004e9c2:	pop    rdi
   14004e9c3:	jmp    0x14004ba80
   14004e9c8:	mov    QWORD PTR [rsp+0x8],rbx
   14004e9cd:	push   rdi
   14004e9ce:	sub    rsp,0x20
   14004e9d2:	mov    dil,dl
   14004e9d5:	mov    rbx,rcx
   14004e9d8:	test   dl,dl
   14004e9da:	jne    0x14004ea46
   14004e9dc:	xor    eax,eax
   14004e9de:	xor    edx,edx
   14004e9e0:	mov    QWORD PTR [rcx+0xa0],rax
   14004e9e7:	mov    r8d,0x4a9c
   14004e9ed:	mov    QWORD PTR [rcx+0xa8],rax
   14004e9f4:	and    DWORD PTR [rcx+0xb0],eax
   14004e9fa:	and    DWORD PTR [rcx+0xb4],eax
   14004ea00:	and    DWORD PTR [rcx+0xb8],eax
   14004ea06:	add    rcx,0xec
   14004ea0d:	call   0x140058f40
   14004ea12:	mov    rax,QWORD PTR [rbx+0xe960]
   14004ea19:	mov    ecx,0x400000
   14004ea1e:	and    QWORD PTR [rbx+0xc8],0x0
   14004ea26:	and    QWORD PTR [rbx+0xc0],0x0
   14004ea2e:	cmp    rax,rcx
   14004ea31:	cmovb  rcx,rax
   14004ea35:	mov    rax,QWORD PTR [rbx+0xe968]
   14004ea3c:	and    rax,rcx
   14004ea3f:	mov    QWORD PTR [rbx+0x4b88],rax
   14004ea46:	and    QWORD PTR [rbx+0x88],0x0
   14004ea4e:	xor    eax,eax
   14004ea50:	and    DWORD PTR [rbx+0xc],0x0
   14004ea54:	mov    rcx,rbx
   14004ea57:	and    DWORD PTR [rbx+0x8],0x0
   14004ea5b:	and    QWORD PTR [rbx+0x4db0],0x0
   14004ea63:	and    DWORD PTR [rbx+0xd0],0x0
   14004ea6a:	and    DWORD PTR [rbx+0xd4],0x0
   14004ea71:	mov    QWORD PTR [rbx+0xd8],rax
   14004ea78:	mov    QWORD PTR [rbx+0xe0],rax
   14004ea7f:	mov    DWORD PTR [rbx+0xe8],eax
   14004ea85:	or     DWORD PTR [rbx+0xd8],0xffffffff
   14004ea8c:	movzx  edx,dil
   14004ea90:	call   0x14004e90c
   14004ea95:	mov    dl,dil
   14004ea98:	mov    rcx,rbx
   14004ea9b:	mov    rbx,QWORD PTR [rsp+0x30]
   14004eaa0:	add    rsp,0x20
   14004eaa4:	pop    rdi
   14004eaa5:	jmp    0x14004e974
   14004eaaa:	int3   
   14004eaab:	int3   
   14004eaac:	mov    QWORD PTR [rsp+0x8],rbx
   14004eab1:	mov    QWORD PTR [rsp+0x10],rsi
   14004eab6:	push   rdi
   14004eab7:	sub    rsp,0x20
   14004eabb:	mov    eax,DWORD PTR [rcx+0xd0]
   14004eac1:	mov    rbx,rcx
   14004eac4:	mov    edi,eax
   14004eac6:	sub    edi,DWORD PTR [rcx+0x8]
   14004eac9:	jns    0x14004eacf
   14004eacb:	xor    al,al
   14004eacd:	jmp    0x14004eb36
   14004eacf:	xor    esi,esi
   14004ead1:	cmp    DWORD PTR [rcx+0x8],0x4000
   14004ead8:	jle    0x14004eafc
   14004eada:	test   edi,edi
   14004eadc:	jle    0x14004eaf1
   14004eade:	mov    rcx,QWORD PTR [rcx+0x18]
   14004eae2:	movsxd rdx,DWORD PTR [rbx+0x8]
   14004eae6:	add    rdx,rcx
   14004eae9:	movsxd r8,edi
   14004eaec:	call   0x140059180
   14004eaf1:	mov    DWORD PTR [rbx+0x8],esi
   14004eaf4:	mov    DWORD PTR [rbx+0xd0],edi
   14004eafa:	jmp    0x14004eafe
   14004eafc:	mov    edi,eax
   14004eafe:	mov    rcx,QWORD PTR [rbx]
   14004eb01:	mov    eax,0x8000
   14004eb06:	sub    eax,edi
   14004eb08:	movsxd rdx,edi
   14004eb0b:	add    rdx,QWORD PTR [rbx+0x18]
   14004eb0f:	movsxd r8,eax
   14004eb12:	call   0x140037740
   14004eb17:	test   eax,eax
   14004eb19:	jle    0x14004eb21
   14004eb1b:	add    DWORD PTR [rbx+0xd0],eax
   14004eb21:	mov    ecx,DWORD PTR [rbx+0xd0]
   14004eb27:	sub    ecx,0x1e
   14004eb2a:	cmp    eax,0xffffffff
   14004eb2d:	mov    DWORD PTR [rbx+0xd4],ecx
   14004eb33:	setne  al
   14004eb36:	mov    rbx,QWORD PTR [rsp+0x30]
   14004eb3b:	mov    rsi,QWORD PTR [rsp+0x38]
   14004eb40:	add    rsp,0x20
   14004eb44:	pop    rdi
   14004eb45:	ret    
   14004eb46:	int3   
   14004eb47:	int3   
   14004eb48:	mov    QWORD PTR [rsp+0x8],rbx
   14004eb4d:	mov    QWORD PTR [rsp+0x10],rsi
   14004eb52:	push   rdi
   14004eb53:	sub    rsp,0x20
   14004eb57:	mov    rbx,rcx
   14004eb5a:	mov    ecx,DWORD PTR [rcx+0xd0]
   14004eb60:	mov    edi,ecx
   14004eb62:	movsxd rdx,DWORD PTR [rbx+0x8]
   14004eb66:	sub    edi,edx
   14004eb68:	jns    0x14004eb71
   14004eb6a:	xor    al,al
   14004eb6c:	jmp    0x14004ec0d
   14004eb71:	mov    eax,DWORD PTR [rbx+0xe0]
   14004eb77:	xor    esi,esi
   14004eb79:	sub    eax,edx
   14004eb7b:	add    DWORD PTR [rbx+0xd8],eax
   14004eb81:	cmp    edx,0x4000
   14004eb87:	jle    0x14004eba7
   14004eb89:	test   edi,edi
   14004eb8b:	jle    0x14004eb9c
   14004eb8d:	mov    rcx,QWORD PTR [rbx+0x18]
   14004eb91:	add    rdx,rcx
   14004eb94:	movsxd r8,edi
   14004eb97:	call   0x140059180
   14004eb9c:	mov    DWORD PTR [rbx+0x8],esi
   14004eb9f:	mov    DWORD PTR [rbx+0xd0],edi
   14004eba5:	jmp    0x14004eba9
   14004eba7:	mov    edi,ecx
   14004eba9:	mov    ecx,0x8000
   14004ebae:	mov    eax,esi
   14004ebb0:	cmp    edi,ecx
   14004ebb2:	je     0x14004ebd2
   14004ebb4:	sub    ecx,edi
   14004ebb6:	movsxd rdx,edi
   14004ebb9:	add    rdx,QWORD PTR [rbx+0x18]
   14004ebbd:	movsxd r8,ecx
   14004ebc0:	mov    rcx,QWORD PTR [rbx]
   14004ebc3:	call   0x140037740
   14004ebc8:	test   eax,eax
   14004ebca:	jle    0x14004ebd2
   14004ebcc:	add    DWORD PTR [rbx+0xd0],eax
   14004ebd2:	mov    edx,DWORD PTR [rbx+0xd0]
   14004ebd8:	mov    r8d,DWORD PTR [rbx+0xd8]
   14004ebdf:	add    edx,0xffffffe2
   14004ebe2:	mov    ecx,DWORD PTR [rbx+0x8]
   14004ebe5:	mov    DWORD PTR [rbx+0xd4],edx
   14004ebeb:	mov    DWORD PTR [rbx+0xe0],ecx
   14004ebf1:	cmp    r8d,0xffffffff
   14004ebf5:	je     0x14004ec07
   14004ebf7:	dec    ecx
   14004ebf9:	add    ecx,r8d
   14004ebfc:	cmp    edx,ecx
   14004ebfe:	cmovl  ecx,edx
   14004ec01:	mov    DWORD PTR [rbx+0xd4],ecx
   14004ec07:	cmp    eax,0xffffffff
   14004ec0a:	setne  al
   14004ec0d:	mov    rbx,QWORD PTR [rsp+0x30]
   14004ec12:	mov    rsi,QWORD PTR [rsp+0x38]
   14004ec17:	add    rsp,0x20
   14004ec1b:	pop    rdi
   14004ec1c:	ret    
   14004ec1d:	int3   
   14004ec1e:	int3   
   14004ec1f:	int3   
   14004ec20:	mov    rax,rsp
   14004ec23:	mov    QWORD PTR [rax+0x8],rbx
   14004ec27:	mov    QWORD PTR [rax+0x10],rbp
   14004ec2b:	mov    QWORD PTR [rax+0x18],rsi
   14004ec2f:	mov    QWORD PTR [rax+0x20],rdi
   14004ec33:	push   r14
   14004ec35:	sub    rsp,0x20
   14004ec39:	mov    rdi,r8
   14004ec3c:	mov    r14,rdx
   14004ec3f:	mov    rsi,rcx
   14004ec42:	cmp    r8,rdx
   14004ec45:	je     0x14004ec57
   14004ec47:	mov    BYTE PTR [rcx+0x4daa],0x1
   14004ec4e:	jae    0x14004ec57
   14004ec50:	mov    BYTE PTR [rcx+0x4da9],0x1
   14004ec57:	cmp    BYTE PTR [rcx+0x4d98],0x0
   14004ec5e:	je     0x14004ecb2
   14004ec60:	sub    rdi,rdx
   14004ec63:	and    rdi,QWORD PTR [rcx+0xe968]
   14004ec6a:	jbe    0x14004ecf1
   14004ec70:	lea    rbp,[rcx+0x4b98]
   14004ec77:	mov    r8,rdi
   14004ec7a:	mov    rdx,r14
   14004ec7d:	mov    rcx,rbp
   14004ec80:	call   0x14004b198
   14004ec85:	mov    rdx,r14
   14004ec88:	mov    rcx,rbp
   14004ec8b:	mov    rbx,rax
   14004ec8e:	call   0x14004935c
   14004ec93:	mov    rdx,rax
   14004ec96:	mov    r8,rbx
   14004ec99:	mov    rcx,rsi
   14004ec9c:	call   0x14004f5a4
   14004eca1:	add    r14,rbx
   14004eca4:	and    r14,QWORD PTR [rsi+0xe968]
   14004ecab:	sub    rdi,rbx
   14004ecae:	jne    0x14004ec77
   14004ecb0:	jmp    0x14004ecf1
   14004ecb2:	cmp    r8,rdx
   14004ecb5:	jae    0x14004ecdc
   14004ecb7:	mov    r8,QWORD PTR [rcx+0xe960]
   14004ecbe:	sub    r8,rdx
   14004ecc1:	mov    rdx,QWORD PTR [rcx+0x4b90]
   14004ecc8:	add    rdx,r14
   14004eccb:	call   0x14004f5a4
   14004ecd0:	mov    rdx,QWORD PTR [rsi+0x4b90]
   14004ecd7:	mov    rcx,rsi
   14004ecda:	jmp    0x14004ece9
   14004ecdc:	sub    rdi,rdx
   14004ecdf:	mov    rdx,QWORD PTR [rcx+0x4b90]
   14004ece6:	add    rdx,r14
   14004ece9:	mov    r8,rdi
   14004ecec:	call   0x14004f5a4
   14004ecf1:	mov    rbx,QWORD PTR [rsp+0x30]
   14004ecf6:	mov    rbp,QWORD PTR [rsp+0x38]
   14004ecfb:	mov    rsi,QWORD PTR [rsp+0x40]
   14004ed00:	mov    rdi,QWORD PTR [rsp+0x48]
   14004ed05:	add    rsp,0x20
   14004ed09:	pop    r14
   14004ed0b:	ret    
   14004ed0c:	rex push rbx
   14004ed0e:	sub    rsp,0x20
   14004ed12:	mov    r8,QWORD PTR [rcx+0xc0]
   14004ed19:	mov    rbx,rcx
   14004ed1c:	mov    rdx,QWORD PTR [rcx+0xc8]
   14004ed23:	cmp    r8,rdx
   14004ed26:	je     0x14004ed70
   14004ed28:	mov    BYTE PTR [rcx+0x4daa],0x1
   14004ed2f:	jae    0x14004ed70
   14004ed31:	mov    r8,QWORD PTR [rbx+0xe968]
   14004ed38:	mov    eax,edx
   14004ed3a:	add    rdx,QWORD PTR [rbx+0x4b90]
   14004ed41:	neg    eax
   14004ed43:	movsxd rcx,eax
   14004ed46:	and    r8,rcx
   14004ed49:	mov    rcx,QWORD PTR [rbx]
   14004ed4c:	call   0x140037918
   14004ed51:	mov    r8,QWORD PTR [rbx+0xc0]
   14004ed58:	mov    rdx,QWORD PTR [rbx+0x4b90]
   14004ed5f:	mov    rcx,QWORD PTR [rbx]
   14004ed62:	call   0x140037918
   14004ed67:	mov    BYTE PTR [rbx+0x4da9],0x1
   14004ed6e:	jmp    0x14004ed82
   14004ed70:	sub    r8,rdx
   14004ed73:	add    rdx,QWORD PTR [rcx+0x4b90]
   14004ed7a:	mov    rcx,QWORD PTR [rcx]
   14004ed7d:	call   0x140037918
   14004ed82:	mov    rax,QWORD PTR [rbx+0xc0]
   14004ed89:	mov    QWORD PTR [rbx+0xc8],rax
   14004ed90:	add    rsp,0x20
   14004ed94:	pop    rbx
   14004ed95:	ret    
   14004ed96:	int3   
   14004ed97:	int3   
   14004ed98:	mov    QWORD PTR [rsp+0x10],rbx
   14004ed9d:	mov    QWORD PTR [rsp+0x18],rbp
   14004eda2:	mov    QWORD PTR [rsp+0x20],rsi
   14004eda7:	push   rdi
   14004eda8:	push   r12
   14004edaa:	push   r13
   14004edac:	push   r14
   14004edae:	push   r15
   14004edb0:	sub    rsp,0x20
   14004edb4:	mov    edx,DWORD PTR [rcx+0xc0]
   14004edba:	xor    esi,esi
   14004edbc:	mov    ebp,DWORD PTR [rcx+0xc8]
   14004edc2:	mov    rdi,rcx
   14004edc5:	sub    edx,ebp
   14004edc7:	and    edx,DWORD PTR [rcx+0xe968]
   14004edcd:	cmp    QWORD PTR [rcx+0xe920],rsi
   14004edd4:	jbe    0x14004f175
   14004edda:	mov    rax,QWORD PTR [rdi+0xe918]
   14004ede1:	mov    r14,QWORD PTR [rax+rsi*8]
   14004ede5:	test   r14,r14
   14004ede8:	je     0x14004f165
   14004edee:	cmp    BYTE PTR [r14+0xc],0x0
   14004edf3:	je     0x14004edff
   14004edf5:	mov    BYTE PTR [r14+0xc],0x0
   14004edfa:	jmp    0x14004f165
   14004edff:	mov    r12d,DWORD PTR [r14]
   14004ee02:	mov    ebx,DWORD PTR [r14+0x4]
   14004ee06:	mov    ecx,r12d
   14004ee09:	sub    ecx,ebp
   14004ee0b:	mov    eax,edx
   14004ee0d:	and    rcx,QWORD PTR [rdi+0xe968]
   14004ee14:	cmp    rcx,rax
   14004ee17:	jae    0x14004f165
   14004ee1d:	cmp    ebp,r12d
   14004ee20:	je     0x14004ee41
   14004ee22:	mov    r8d,r12d
   14004ee25:	mov    edx,ebp
   14004ee27:	mov    rcx,rdi
   14004ee2a:	call   0x14004ec20
   14004ee2f:	mov    edx,DWORD PTR [rdi+0xc0]
   14004ee35:	mov    ebp,r12d
   14004ee38:	sub    edx,r12d
   14004ee3b:	and    edx,DWORD PTR [rdi+0xe968]
   14004ee41:	cmp    ebx,edx
   14004ee43:	ja     0x14004f1ce
   14004ee49:	lea    ebp,[rbx+r12*1]
   14004ee4d:	and    ebp,DWORD PTR [rdi+0xe968]
   14004ee53:	cmp    r12d,ebp
   14004ee56:	jb     0x14004ee96
   14004ee58:	test   ebp,ebp
   14004ee5a:	je     0x14004ee96
   14004ee5c:	mov    eax,DWORD PTR [rdi+0xe960]
   14004ee62:	lea    r15,[rdi+0xe898]
   14004ee69:	sub    eax,r12d
   14004ee6c:	mov    r8,r12
   14004ee6f:	add    r8,QWORD PTR [rdi+0x4b90]
   14004ee76:	xor    edx,edx
   14004ee78:	mov    r9d,eax
   14004ee7b:	mov    rcx,r15
   14004ee7e:	mov    ebx,eax
   14004ee80:	call   0x140036460
   14004ee85:	mov    r8,QWORD PTR [rdi+0x4b90]
   14004ee8c:	mov    edx,ebx
   14004ee8e:	mov    r9d,ebp
   14004ee91:	mov    rcx,r15
   14004ee94:	jmp    0x14004eeac
   14004ee96:	mov    r8,r12
   14004ee99:	lea    rcx,[rdi+0xe898]
   14004eea0:	add    r8,QWORD PTR [rdi+0x4b90]
   14004eea7:	mov    r9,rbx
   14004eeaa:	xor    edx,edx
   14004eeac:	call   0x140036460
   14004eeb1:	mov    rax,QWORD PTR [rdi+0xe8f8]
   14004eeb8:	mov    ecx,DWORD PTR [r14+0x10]
   14004eebc:	mov    rbx,QWORD PTR [rax+rcx*8]
   14004eec0:	mov    rax,QWORD PTR [rbx+0x50]
   14004eec4:	cmp    rax,0x40
   14004eec8:	jbe    0x14004ef03
   14004eeca:	cmp    rax,QWORD PTR [r14+0x58]
   14004eece:	jbe    0x14004eee2
   14004eed0:	sub    rax,QWORD PTR [r14+0x50]
   14004eed4:	lea    rcx,[r14+0x48]
   14004eed8:	mov    rdx,rax
   14004eedb:	call   0x140001858
   14004eee0:	jmp    0x14004eee6
   14004eee2:	mov    QWORD PTR [r14+0x50],rax
   14004eee6:	mov    r8,QWORD PTR [rbx+0x50]
   14004eeea:	mov    rdx,QWORD PTR [rbx+0x48]
   14004eeee:	sub    r8,0x40
   14004eef2:	mov    rcx,QWORD PTR [r14+0x48]
   14004eef6:	add    rdx,0x40
   14004eefa:	add    rcx,0x40
   14004eefe:	call   0x140059180
   14004ef03:	lea    rdx,[r14+0x18]
   14004ef07:	mov    rcx,rdi
   14004ef0a:	call   0x14004b020
   14004ef0f:	mov    rax,QWORD PTR [r14+0x50]
   14004ef13:	cmp    rax,0x40
   14004ef17:	jbe    0x14004ef5a
   14004ef19:	cmp    QWORD PTR [rbx+0x50],rax
   14004ef1d:	jae    0x14004ef3b
   14004ef1f:	lea    rcx,[rbx+0x48]
   14004ef23:	cmp    rax,QWORD PTR [rcx+0x10]
   14004ef27:	jbe    0x14004ef37
   14004ef29:	sub    rax,QWORD PTR [rcx+0x8]
   14004ef2d:	mov    rdx,rax
   14004ef30:	call   0x140001858
   14004ef35:	jmp    0x14004ef3b
   14004ef37:	mov    QWORD PTR [rcx+0x8],rax
   14004ef3b:	mov    r8,QWORD PTR [r14+0x50]
   14004ef3f:	mov    rdx,QWORD PTR [r14+0x48]
   14004ef43:	sub    r8,0x40
   14004ef47:	mov    rcx,QWORD PTR [rbx+0x48]
   14004ef4b:	add    rdx,0x40
   14004ef4f:	add    rcx,0x40
   14004ef53:	call   0x140059180
   14004ef58:	jmp    0x14004ef63
   14004ef5a:	lea    rcx,[rbx+0x48]
   14004ef5e:	call   0x140009a60
   14004ef63:	mov    rax,QWORD PTR [rdi+0xe918]
   14004ef6a:	mov    r13,QWORD PTR [r14+0xa8]
   14004ef71:	mov    r14d,DWORD PTR [r14+0xb0]
   14004ef78:	mov    rbx,QWORD PTR [rax+rsi*8]
   14004ef7c:	test   rbx,rbx
   14004ef7f:	je     0x14004efb8
   14004ef81:	mov    rcx,QWORD PTR [rbx+0x68]
   14004ef85:	test   rcx,rcx
   14004ef88:	je     0x14004ef8f
   14004ef8a:	call   0x14005a938
   14004ef8f:	mov    rcx,QWORD PTR [rbx+0x48]
   14004ef93:	test   rcx,rcx
   14004ef96:	je     0x14004ef9d
   14004ef98:	call   0x14005a938
   14004ef9d:	mov    rcx,QWORD PTR [rbx+0x18]
   14004efa1:	test   rcx,rcx
   14004efa4:	je     0x14004efab
   14004efa6:	call   0x14005a938
   14004efab:	mov    edx,0xb8
   14004efb0:	mov    rcx,rbx
   14004efb3:	call   0x140055de8
   14004efb8:	mov    rax,QWORD PTR [rdi+0xe918]
   14004efbf:	lea    r15,[rsi+0x1]
   14004efc3:	and    QWORD PTR [rax+rsi*8],0x0
   14004efc8:	jmp    0x14004f12b
   14004efcd:	mov    rax,QWORD PTR [rdi+0xe918]
   14004efd4:	mov    rbx,QWORD PTR [rax+rsi*8+0x8]
   14004efd9:	test   rbx,rbx
   14004efdc:	je     0x14004f138
   14004efe2:	cmp    DWORD PTR [rbx],r12d
   14004efe5:	jne    0x14004f138
   14004efeb:	cmp    DWORD PTR [rbx+0x4],r14d
   14004efef:	jne    0x14004f138
   14004eff5:	cmp    BYTE PTR [rbx+0xc],0x0
   14004eff9:	jne    0x14004f138
   14004efff:	mov    r9d,r14d
   14004f002:	lea    rcx,[rdi+0xe898]
   14004f009:	mov    r8,r13
   14004f00c:	xor    edx,edx
   14004f00e:	call   0x140036460
   14004f013:	mov    rax,QWORD PTR [rdi+0xe8f8]
   14004f01a:	mov    ecx,DWORD PTR [rbx+0x10]
   14004f01d:	mov    rsi,QWORD PTR [rax+rcx*8]
   14004f021:	mov    rax,QWORD PTR [rsi+0x50]
   14004f025:	cmp    rax,0x40
   14004f029:	jbe    0x14004f064
   14004f02b:	cmp    rax,QWORD PTR [rbx+0x58]
   14004f02f:	jbe    0x14004f043
   14004f031:	sub    rax,QWORD PTR [rbx+0x50]
   14004f035:	lea    rcx,[rbx+0x48]
   14004f039:	mov    rdx,rax
   14004f03c:	call   0x140001858
   14004f041:	jmp    0x14004f047
   14004f043:	mov    QWORD PTR [rbx+0x50],rax
   14004f047:	mov    r8,QWORD PTR [rsi+0x50]
   14004f04b:	mov    rdx,QWORD PTR [rsi+0x48]
   14004f04f:	sub    r8,0x40
   14004f053:	mov    rcx,QWORD PTR [rbx+0x48]
   14004f057:	add    rdx,0x40
   14004f05b:	add    rcx,0x40
   14004f05f:	call   0x140059180
   14004f064:	lea    rdx,[rbx+0x18]
   14004f068:	mov    rcx,rdi
   14004f06b:	call   0x14004b020
   14004f070:	mov    rax,QWORD PTR [rbx+0x50]
   14004f074:	cmp    rax,0x40
   14004f078:	jbe    0x14004f0bb
   14004f07a:	cmp    QWORD PTR [rsi+0x50],rax
   14004f07e:	jae    0x14004f09c
   14004f080:	lea    rcx,[rsi+0x48]
   14004f084:	cmp    rax,QWORD PTR [rcx+0x10]
   14004f088:	jbe    0x14004f098
   14004f08a:	sub    rax,QWORD PTR [rcx+0x8]
   14004f08e:	mov    rdx,rax
   14004f091:	call   0x140001858
   14004f096:	jmp    0x14004f09c
   14004f098:	mov    QWORD PTR [rcx+0x8],rax
   14004f09c:	mov    r8,QWORD PTR [rbx+0x50]
   14004f0a0:	mov    rdx,QWORD PTR [rbx+0x48]
   14004f0a4:	sub    r8,0x40
   14004f0a8:	mov    rcx,QWORD PTR [rsi+0x48]
   14004f0ac:	add    rdx,0x40
   14004f0b0:	add    rcx,0x40
   14004f0b4:	call   0x140059180
   14004f0b9:	jmp    0x14004f0c4
   14004f0bb:	lea    rcx,[rsi+0x48]
   14004f0bf:	call   0x140009a60
   14004f0c4:	mov    rax,QWORD PTR [rdi+0xe918]
   14004f0cb:	mov    rsi,r15
   14004f0ce:	mov    r13,QWORD PTR [rbx+0xa8]
   14004f0d5:	mov    r14d,DWORD PTR [rbx+0xb0]
   14004f0dc:	mov    rbx,QWORD PTR [rax+r15*8]
   14004f0e0:	test   rbx,rbx
   14004f0e3:	je     0x14004f11c
   14004f0e5:	mov    rcx,QWORD PTR [rbx+0x68]
   14004f0e9:	test   rcx,rcx
   14004f0ec:	je     0x14004f0f3
   14004f0ee:	call   0x14005a938
   14004f0f3:	mov    rcx,QWORD PTR [rbx+0x48]
   14004f0f7:	test   rcx,rcx
   14004f0fa:	je     0x14004f101
   14004f0fc:	call   0x14005a938
   14004f101:	mov    rcx,QWORD PTR [rbx+0x18]
   14004f105:	test   rcx,rcx
   14004f108:	je     0x14004f10f
   14004f10a:	call   0x14005a938
   14004f10f:	mov    edx,0xb8
   14004f114:	mov    rcx,rbx
   14004f117:	call   0x140055de8
   14004f11c:	mov    rax,QWORD PTR [rdi+0xe918]
   14004f123:	and    QWORD PTR [rax+r15*8],0x0
   14004f128:	inc    r15
   14004f12b:	cmp    r15,QWORD PTR [rdi+0xe920]
   14004f132:	jb     0x14004efcd
   14004f138:	mov    rcx,QWORD PTR [rdi]
   14004f13b:	mov    rdx,r13
   14004f13e:	mov    r8d,r14d
   14004f141:	mov    ebx,r14d
   14004f144:	call   0x140037918
   14004f149:	mov    edx,DWORD PTR [rdi+0xc0]
   14004f14f:	add    QWORD PTR [rdi+0x4db0],rbx
   14004f156:	sub    edx,ebp
   14004f158:	and    edx,DWORD PTR [rdi+0xe968]
   14004f15e:	mov    BYTE PTR [rdi+0x4daa],0x1
   14004f165:	inc    rsi
   14004f168:	cmp    rsi,QWORD PTR [rdi+0xe920]
   14004f16f:	jb     0x14004edda
   14004f175:	mov    r8,QWORD PTR [rdi+0xc0]
   14004f17c:	mov    rcx,rdi
   14004f17f:	mov    edx,ebp
   14004f181:	call   0x14004ec20
   14004f186:	mov    rax,QWORD PTR [rdi+0xc0]
   14004f18d:	mov    rbx,QWORD PTR [rsp+0x58]
   14004f192:	mov    rbp,QWORD PTR [rsp+0x60]
   14004f197:	mov    rsi,QWORD PTR [rsp+0x68]
   14004f19c:	mov    QWORD PTR [rdi+0xc8],rax
   14004f1a3:	add    rsp,0x20
   14004f1a7:	pop    r15
   14004f1a9:	pop    r14
   14004f1ab:	pop    r13
   14004f1ad:	pop    r12
   14004f1af:	pop    rdi
   14004f1b0:	ret    
   14004f1b1:	mov    rax,QWORD PTR [rdi+0xe918]
   14004f1b8:	mov    rcx,QWORD PTR [rax+rsi*8]
   14004f1bc:	test   rcx,rcx
   14004f1bf:	je     0x14004f1cb
   14004f1c1:	cmp    BYTE PTR [rcx+0xc],0x0
   14004f1c5:	je     0x14004f1cb
   14004f1c7:	mov    BYTE PTR [rcx+0xc],0x0
   14004f1cb:	inc    rsi
   14004f1ce:	cmp    rsi,QWORD PTR [rdi+0xe920]
   14004f1d5:	jb     0x14004f1b1
   14004f1d7:	mov    eax,ebp
   14004f1d9:	jmp    0x14004f18d
   14004f1db:	int3   
   14004f1dc:	rex push rbx
   14004f1de:	push   rbp
   14004f1df:	push   rsi
   14004f1e0:	push   rdi
   14004f1e1:	push   r12
   14004f1e3:	push   r13
   14004f1e5:	push   r14
   14004f1e7:	push   r15
   14004f1e9:	sub    rsp,0x38
   14004f1ed:	mov    rbx,QWORD PTR [rcx+0xc8]
   14004f1f4:	mov    rdi,rcx
   14004f1f7:	mov    rdx,QWORD PTR [rcx+0xc0]
   14004f1fe:	xor    bpl,bpl
   14004f201:	sub    rdx,rbx
   14004f204:	mov    BYTE PTR [rsp+0x80],bpl
   14004f20c:	and    rdx,QWORD PTR [rcx+0xe968]
   14004f213:	xor    esi,esi
   14004f215:	mov    rcx,rdx
   14004f218:	mov    QWORD PTR [rsp+0x20],rdx
   14004f21d:	cmp    QWORD PTR [rdi+0x88],rsi
   14004f224:	jbe    0x14004f495
   14004f22a:	xor    r8d,r8d
   14004f22d:	mov    QWORD PTR [rsp+0x98],r8
   14004f235:	mov    r15,QWORD PTR [rdi+0x80]
   14004f23c:	add    r15,r8
   14004f23f:	cmp    BYTE PTR [r15],0x8
   14004f243:	je     0x14004f42d
   14004f249:	cmp    BYTE PTR [r15+0xd],0x0
   14004f24e:	je     0x14004f275
   14004f250:	mov    eax,DWORD PTR [r15+0x4]
   14004f254:	sub    rax,QWORD PTR [rdi+0xc8]
   14004f25b:	and    rax,QWORD PTR [rdi+0xe968]
   14004f262:	cmp    rax,rdx
   14004f265:	ja     0x14004f42d
   14004f26b:	mov    BYTE PTR [r15+0xd],0x0
   14004f270:	jmp    0x14004f42d
   14004f275:	mov    r13d,DWORD PTR [r15+0x4]
   14004f279:	mov    r12d,DWORD PTR [r15+0x8]
   14004f27d:	mov    eax,r13d
   14004f280:	sub    rax,rbx
   14004f283:	mov    r14d,r13d
   14004f286:	and    rax,QWORD PTR [rdi+0xe968]
   14004f28d:	cmp    rax,rcx
   14004f290:	jae    0x14004f42d
   14004f296:	cmp    rbx,r13
   14004f299:	je     0x14004f2c5
   14004f29b:	mov    r8d,r13d
   14004f29e:	mov    rdx,rbx
   14004f2a1:	mov    rcx,rdi
   14004f2a4:	call   0x14004ec20
   14004f2a9:	mov    rcx,QWORD PTR [rdi+0xc0]
   14004f2b0:	mov    ebx,r13d
   14004f2b3:	mov    r8,QWORD PTR [rsp+0x98]
   14004f2bb:	sub    rcx,r13
   14004f2be:	and    rcx,QWORD PTR [rdi+0xe968]
   14004f2c5:	mov    rbp,r12
   14004f2c8:	cmp    r12,rcx
   14004f2cb:	ja     0x14004f44f
   14004f2d1:	test   r12d,r12d
   14004f2d4:	je     0x14004f42d
   14004f2da:	add    r12d,r13d
   14004f2dd:	and    r12d,DWORD PTR [rdi+0xe968]
   14004f2e4:	cmp    rbp,QWORD PTR [rdi+0x50]
   14004f2e8:	jbe    0x14004f2fc
   14004f2ea:	mov    rdx,rbp
   14004f2ed:	lea    rcx,[rdi+0x40]
   14004f2f1:	sub    rdx,QWORD PTR [rdi+0x48]
   14004f2f5:	call   0x140001858
   14004f2fa:	jmp    0x14004f300
   14004f2fc:	mov    QWORD PTR [rdi+0x48],rbp
   14004f300:	mov    r10,QWORD PTR [rdi+0x40]
   14004f304:	mov    QWORD PTR [rsp+0x90],r10
   14004f30c:	cmp    r13d,r12d
   14004f30f:	jb     0x14004f38f
   14004f311:	test   r12d,r12d
   14004f314:	je     0x14004f38f
   14004f316:	mov    r13,QWORD PTR [rdi+0xe960]
   14004f31d:	sub    r13,r14
   14004f320:	cmp    BYTE PTR [rdi+0x4d98],0x0
   14004f327:	je     0x14004f35d
   14004f329:	lea    rbx,[rdi+0x4b98]
   14004f330:	mov    r9,r13
   14004f333:	mov    rcx,rbx
   14004f336:	mov    r8,r14
   14004f339:	mov    rdx,r10
   14004f33c:	call   0x140049f60
   14004f341:	mov    r14,QWORD PTR [rsp+0x90]
   14004f349:	xor    r8d,r8d
   14004f34c:	mov    r9d,r12d
   14004f34f:	mov    rcx,rbx
   14004f352:	lea    rdx,[r14+r13*1]
   14004f356:	call   0x140049f60
   14004f35b:	jmp    0x14004f3cc
   14004f35d:	mov    rdx,QWORD PTR [rdi+0x4b90]
   14004f364:	mov    r8,r13
   14004f367:	add    rdx,r14
   14004f36a:	mov    rcx,r10
   14004f36d:	call   0x140059180
   14004f372:	mov    r14,QWORD PTR [rsp+0x90]
   14004f37a:	mov    rdx,QWORD PTR [rdi+0x4b90]
   14004f381:	mov    r8d,r12d
   14004f384:	lea    rcx,[r14+r13*1]
   14004f388:	call   0x140059180
   14004f38d:	jmp    0x14004f3cc
   14004f38f:	cmp    BYTE PTR [rdi+0x4d98],0x0
   14004f396:	je     0x14004f3af
   14004f398:	lea    rcx,[rdi+0x4b98]
   14004f39f:	mov    r9,rbp
   14004f3a2:	mov    r8,r13
   14004f3a5:	mov    rdx,r10
   14004f3a8:	call   0x140049f60
   14004f3ad:	jmp    0x14004f3c4
   14004f3af:	mov    rdx,QWORD PTR [rdi+0x4b90]
   14004f3b6:	mov    r8,rbp
   14004f3b9:	add    rdx,r13
   14004f3bc:	mov    rcx,r10
   14004f3bf:	call   0x140059180
   14004f3c4:	mov    r14,QWORD PTR [rsp+0x90]
   14004f3cc:	mov    r9,r15
   14004f3cf:	mov    r8d,ebp
   14004f3d2:	mov    rdx,r14
   14004f3d5:	mov    rcx,rdi
   14004f3d8:	call   0x140049d78
   14004f3dd:	mov    rcx,QWORD PTR [rdi+0x80]
   14004f3e4:	mov    rdx,QWORD PTR [rsp+0x98]
   14004f3ec:	mov    BYTE PTR [rdx+rcx*1],0x8
   14004f3f0:	test   rax,rax
   14004f3f3:	je     0x14004f403
   14004f3f5:	mov    rcx,QWORD PTR [rdi]
   14004f3f8:	mov    r8,rbp
   14004f3fb:	mov    rdx,rax
   14004f3fe:	call   0x140037918
   14004f403:	mov    rcx,QWORD PTR [rdi+0xc0]
   14004f40a:	add    QWORD PTR [rdi+0x4db0],rbp
   14004f411:	mov    r8,QWORD PTR [rsp+0x98]
   14004f419:	mov    ebx,r12d
   14004f41c:	sub    rcx,rbx
   14004f41f:	mov    BYTE PTR [rdi+0x4daa],0x1
   14004f426:	and    rcx,QWORD PTR [rdi+0xe968]
   14004f42d:	add    r8,0x10
   14004f431:	inc    rsi
   14004f434:	mov    QWORD PTR [rsp+0x98],r8
   14004f43c:	cmp    rsi,QWORD PTR [rdi+0x88]
   14004f443:	jae    0x14004f48d
   14004f445:	mov    rdx,QWORD PTR [rsp+0x20]
   14004f44a:	jmp    0x14004f235
   14004f44f:	mov    QWORD PTR [rdi+0xc8],rbx
   14004f456:	cmp    rsi,QWORD PTR [rdi+0x88]
   14004f45d:	jae    0x14004f488
   14004f45f:	mov    rax,rsi
   14004f462:	shl    rax,0x4
   14004f466:	mov    rcx,QWORD PTR [rdi+0x80]
   14004f46d:	cmp    BYTE PTR [rax+rcx*1],0x8
   14004f471:	je     0x14004f478
   14004f473:	mov    BYTE PTR [rax+rcx*1+0xd],0x0
   14004f478:	inc    rsi
   14004f47b:	add    rax,0x10
   14004f47f:	cmp    rsi,QWORD PTR [rdi+0x88]
   14004f486:	jb     0x14004f466
   14004f488:	mov    bpl,0x1
   14004f48b:	jmp    0x14004f495
   14004f48d:	mov    bpl,BYTE PTR [rsp+0x80]
   14004f495:	xor    edx,edx
   14004f497:	xor    r10d,r10d
   14004f49a:	cmp    QWORD PTR [rdi+0x88],rdx
   14004f4a1:	jbe    0x14004f50f
   14004f4a3:	lea    r8,[rdi+0x80]
   14004f4aa:	xor    r9d,r9d
   14004f4ad:	test   rdx,rdx
   14004f4b0:	je     0x14004f4c8
   14004f4b2:	mov    rcx,QWORD PTR [r8]
   14004f4b5:	mov    rax,r10
   14004f4b8:	sub    rax,rdx
   14004f4bb:	add    rax,rax
   14004f4be:	movups xmm0,XMMWORD PTR [r9+rcx*1]
   14004f4c3:	movdqu XMMWORD PTR [rcx+rax*8],xmm0
   14004f4c8:	mov    rax,QWORD PTR [r8]
   14004f4cb:	cmp    BYTE PTR [r9+rax*1],0x8
   14004f4d0:	jne    0x14004f4d5
   14004f4d2:	inc    rdx
   14004f4d5:	inc    r10
   14004f4d8:	add    r9,0x10
   14004f4dc:	cmp    r10,QWORD PTR [rdi+0x88]
   14004f4e3:	jb     0x14004f4ad
   14004f4e5:	test   rdx,rdx
   14004f4e8:	je     0x14004f50f
   14004f4ea:	mov    rax,QWORD PTR [rdi+0x88]
   14004f4f1:	sub    rax,rdx
   14004f4f4:	cmp    rax,QWORD PTR [r8+0x10]
   14004f4f8:	jbe    0x14004f50b
   14004f4fa:	sub    rax,QWORD PTR [r8+0x8]
   14004f4fe:	mov    rcx,r8
   14004f501:	mov    rdx,rax
   14004f504:	call   0x14004944c
   14004f509:	jmp    0x14004f50f
   14004f50b:	mov    QWORD PTR [r8+0x8],rax
   14004f50f:	test   bpl,bpl
   14004f512:	jne    0x14004f534
   14004f514:	mov    r8,QWORD PTR [rdi+0xc0]
   14004f51b:	mov    rdx,rbx
   14004f51e:	mov    rcx,rdi
   14004f521:	call   0x14004ec20
   14004f526:	mov    rax,QWORD PTR [rdi+0xc0]
   14004f52d:	mov    QWORD PTR [rdi+0xc8],rax
   14004f534:	mov    rax,QWORD PTR [rdi+0xe960]
   14004f53b:	mov    ecx,0x400000
   14004f540:	mov    rdx,QWORD PTR [rdi+0xc0]
   14004f547:	cmp    rax,rcx
   14004f54a:	mov    r8,QWORD PTR [rdi+0xe968]
   14004f551:	cmovb  rcx,rax
   14004f555:	lea    rax,[rdx+rcx*1]
   14004f559:	and    rax,r8
   14004f55c:	mov    QWORD PTR [rdi+0x4b88],rax
   14004f563:	cmp    rax,rdx
   14004f566:	je     0x14004f585
   14004f568:	mov    rcx,QWORD PTR [rdi+0xc8]
   14004f56f:	cmp    rcx,rdx
   14004f572:	je     0x14004f593
   14004f574:	sub    rcx,rdx
   14004f577:	sub    rax,rdx
   14004f57a:	and    rcx,r8
   14004f57d:	and    rax,r8
   14004f580:	cmp    rcx,rax
   14004f583:	jae    0x14004f593
   14004f585:	mov    rax,QWORD PTR [rdi+0xc8]
   14004f58c:	mov    QWORD PTR [rdi+0x4b88],rax
   14004f593:	add    rsp,0x38
   14004f597:	pop    r15
   14004f599:	pop    r14
   14004f59b:	pop    r13
   14004f59d:	pop    r12
   14004f59f:	pop    rdi
   14004f5a0:	pop    rsi
   14004f5a1:	pop    rbp
   14004f5a2:	pop    rbx
   14004f5a3:	ret    
   14004f5a4:	mov    QWORD PTR [rsp+0x8],rbx
   14004f5a9:	push   rdi
   14004f5aa:	sub    rsp,0x20
   14004f5ae:	mov    rbx,rcx
   14004f5b1:	mov    rdi,r8
   14004f5b4:	mov    rcx,QWORD PTR [rcx+0x4db0]
   14004f5bb:	mov    rax,QWORD PTR [rbx+0x4da0]
   14004f5c2:	cmp    rcx,rax
   14004f5c5:	jge    0x14004f5e0
   14004f5c7:	sub    rax,rcx
   14004f5ca:	mov    rcx,QWORD PTR [rbx]
   14004f5cd:	cmp    r8,rax
   14004f5d0:	cmovg  r8,rax
   14004f5d4:	call   0x140037918
   14004f5d9:	add    QWORD PTR [rbx+0x4db0],rdi
   14004f5e0:	mov    rbx,QWORD PTR [rsp+0x30]
   14004f5e5:	add    rsp,0x20
   14004f5e9:	pop    rdi
   14004f5ea:	ret    
   14004f5eb:	int3   
   14004f5ec:	mov    QWORD PTR [rsp+0x8],rbx
   14004f5f1:	push   rdi
   14004f5f2:	sub    rsp,0x20
   14004f5f6:	movzx  ebx,dl
   14004f5f9:	mov    rdi,rcx
   14004f5fc:	mov    dl,bl
   14004f5fe:	call   0x14004e9c8
   14004f603:	mov    edx,ebx
   14004f605:	mov    rcx,rdi
   14004f608:	call   0x14004e8ac
   14004f60d:	mov    rcx,rdi
   14004f610:	call   0x14004eb48
   14004f615:	test   bl,bl
   14004f617:	jne    0x14004f62b
   14004f619:	mov    rcx,rdi
   14004f61c:	call   0x14004bb84
   14004f621:	and    QWORD PTR [rdi+0xc0],0x0
   14004f629:	jmp    0x14004f639
   14004f62b:	mov    rax,QWORD PTR [rdi+0xc8]
   14004f632:	mov    QWORD PTR [rdi+0xc0],rax
   14004f639:	sub    QWORD PTR [rdi+0x4da0],0x1
   14004f641:	js     0x14004f655
   14004f643:	mov    rcx,rdi
   14004f646:	call   0x14004b1c8
   14004f64b:	mov    DWORD PTR [rdi+0x58e4],0x8
   14004f655:	cmp    QWORD PTR [rdi+0x4da0],0x0
   14004f65d:	jl     0x14004f777
   14004f663:	mov    ebx,0x7
   14004f668:	mov    rax,QWORD PTR [rdi+0xe968]
   14004f66f:	and    QWORD PTR [rdi+0xc0],rax
   14004f676:	mov    eax,DWORD PTR [rdi+0xd0]
   14004f67c:	sub    eax,0x1e
   14004f67f:	cmp    DWORD PTR [rdi+0x8],eax
   14004f682:	jle    0x14004f694
   14004f684:	mov    rcx,rdi
   14004f687:	call   0x14004eb48
   14004f68c:	test   al,al
   14004f68e:	je     0x14004f777
   14004f694:	mov    rcx,QWORD PTR [rdi+0xc8]
   14004f69b:	mov    rdx,QWORD PTR [rdi+0xc0]
   14004f6a2:	mov    rax,rcx
   14004f6a5:	sub    rax,rdx
   14004f6a8:	and    rax,QWORD PTR [rdi+0xe968]
   14004f6af:	cmp    rax,0x10e
   14004f6b5:	jae    0x14004f6c4
   14004f6b7:	cmp    rcx,rdx
   14004f6ba:	je     0x14004f6c4
   14004f6bc:	mov    rcx,rdi
   14004f6bf:	call   0x14004ed0c
   14004f6c4:	cmp    DWORD PTR [rdi+0x58dc],0x0
   14004f6cb:	je     0x14004f6d2
   14004f6cd:	mov    rcx,rdi
   14004f6d0:	jmp    0x14004f70c
   14004f6d2:	sub    DWORD PTR [rdi+0x58e4],0x1
   14004f6d9:	jns    0x14004f6e9
   14004f6db:	mov    rcx,rdi
   14004f6de:	call   0x14004b1c8
   14004f6e3:	mov    DWORD PTR [rdi+0x58e4],ebx
   14004f6e9:	mov    eax,DWORD PTR [rdi+0x58bc]
   14004f6ef:	test   al,al
   14004f6f1:	jns    0x14004f713
   14004f6f3:	add    eax,eax
   14004f6f5:	mov    rcx,rdi
   14004f6f8:	mov    DWORD PTR [rdi+0x58bc],eax
   14004f6fe:	mov    eax,DWORD PTR [rdi+0x58e8]
   14004f704:	cmp    DWORD PTR [rdi+0x58ec],eax
   14004f70a:	ja     0x14004f755
   14004f70c:	call   0x14004b458
   14004f711:	jmp    0x14004f769
   14004f713:	add    eax,eax
   14004f715:	sub    DWORD PTR [rdi+0x58e4],0x1
   14004f71c:	mov    DWORD PTR [rdi+0x58bc],eax
   14004f722:	jns    0x14004f732
   14004f724:	mov    rcx,rdi
   14004f727:	call   0x14004b1c8
   14004f72c:	mov    DWORD PTR [rdi+0x58e4],ebx
   14004f732:	mov    eax,DWORD PTR [rdi+0x58bc]
   14004f738:	mov    rcx,rdi
   14004f73b:	test   al,al
   14004f73d:	jns    0x14004f75c
   14004f73f:	add    eax,eax
   14004f741:	mov    DWORD PTR [rdi+0x58bc],eax
   14004f747:	mov    eax,DWORD PTR [rdi+0x58e8]
   14004f74d:	cmp    DWORD PTR [rdi+0x58ec],eax
   14004f753:	ja     0x14004f70c
   14004f755:	call   0x14004beac
   14004f75a:	jmp    0x14004f769
   14004f75c:	add    eax,eax
   14004f75e:	mov    DWORD PTR [rdi+0x58bc],eax
   14004f764:	call   0x14004e2e4
   14004f769:	cmp    QWORD PTR [rdi+0x4da0],0x0
   14004f771:	jge    0x14004f668
   14004f777:	mov    rcx,rdi
   14004f77a:	mov    rbx,QWORD PTR [rsp+0x30]
   14004f77f:	add    rsp,0x20
   14004f783:	pop    rdi
   14004f784:	jmp    0x14004ed0c
   14004f789:	int3   
   14004f78a:	int3   
   14004f78b:	int3   
   14004f78c:	mov    rax,rsp
   14004f78f:	mov    QWORD PTR [rax+0x8],rbx
   14004f793:	mov    QWORD PTR [rax+0x10],rdi
   14004f797:	mov    QWORD PTR [rax+0x18],r12
   14004f79b:	mov    QWORD PTR [rax+0x20],r14
   14004f79f:	push   r15
   14004f7a1:	sub    rsp,0x20
   14004f7a5:	cmp    BYTE PTR [rcx+0x4da8],0x0
   14004f7ac:	mov    dil,dl
   14004f7af:	mov    rbx,rcx
   14004f7b2:	je     0x14004f7c4
   14004f7b4:	mov    rax,QWORD PTR [rcx+0xc8]
   14004f7bb:	mov    QWORD PTR [rcx+0xc0],rax
   14004f7c2:	jmp    0x14004f7f8
   14004f7c4:	mov    dl,dil
   14004f7c7:	call   0x14004e9c8
   14004f7cc:	mov    rcx,rbx
   14004f7cf:	call   0x14004eb48
   14004f7d4:	test   al,al
   14004f7d6:	je     0x14004ffc9
   14004f7dc:	test   dil,dil
   14004f7df:	jne    0x14004f7f1
   14004f7e1:	mov    rcx,rbx
   14004f7e4:	call   0x14004cefc
   14004f7e9:	test   al,al
   14004f7eb:	je     0x14004ffc9
   14004f7f1:	dec    QWORD PTR [rbx+0x4da0]
   14004f7f8:	cmp    QWORD PTR [rbx+0x4da0],0x0
   14004f800:	jl     0x14004ffb9
   14004f806:	mov    r12d,0x10
   14004f80c:	lea    r15,[rip+0xfffffffffffb07ed]        # 0x140000000
   14004f813:	lea    r14d,[r12-0x1]
   14004f818:	mov    rax,QWORD PTR [rbx+0xe968]
   14004f81f:	and    QWORD PTR [rbx+0xc0],rax
   14004f826:	mov    eax,DWORD PTR [rbx+0xd0]
   14004f82c:	sub    eax,0x1e
   14004f82f:	cmp    DWORD PTR [rbx+0x8],eax
   14004f832:	jle    0x14004f844
   14004f834:	mov    rcx,rbx
   14004f837:	call   0x14004eb48
   14004f83c:	test   al,al
   14004f83e:	je     0x14004ffb9
   14004f844:	mov    rcx,QWORD PTR [rbx+0xc8]
   14004f84b:	mov    rdx,QWORD PTR [rbx+0xc0]
   14004f852:	mov    rax,rcx
   14004f855:	sub    rax,rdx
   14004f858:	and    rax,QWORD PTR [rbx+0xe968]
   14004f85f:	cmp    rax,0x10e
   14004f865:	jae    0x14004f881
   14004f867:	cmp    rcx,rdx
   14004f86a:	je     0x14004f881
   14004f86c:	mov    rcx,rbx
   14004f86f:	call   0x14004ed0c
   14004f874:	cmp    BYTE PTR [rbx+0x4da8],0x0
   14004f87b:	jne    0x14004ffc9
   14004f881:	cmp    DWORD PTR [rbx+0x98a8],0x0
   14004f888:	mov    rdx,QWORD PTR [rbx+0x18]
   14004f88c:	je     0x14004f9f0
   14004f892:	movsxd r11,DWORD PTR [rbx+0x8]
   14004f896:	lea    r9,[rbx+0x58f4]
   14004f89d:	movsxd rax,DWORD PTR [rbx+0x98b0]
   14004f8a4:	mov    edi,DWORD PTR [rbx+0xc]
   14004f8a7:	imul   rcx,rax,0xeec
   14004f8ae:	movzx  r8d,BYTE PTR [r11+rdx*1]
   14004f8b3:	lea    eax,[r11+0x1]
   14004f8b7:	add    r9,rcx
   14004f8ba:	shl    r8d,0x8
   14004f8be:	movsxd rcx,eax
   14004f8c1:	movzx  eax,BYTE PTR [rcx+rdx*1]
   14004f8c5:	or     r8d,eax
   14004f8c8:	lea    eax,[r11+0x2]
   14004f8cc:	shl    r8d,0x8
   14004f8d0:	movsxd rcx,eax
   14004f8d3:	movzx  eax,BYTE PTR [rcx+rdx*1]
   14004f8d7:	mov    ecx,0x8
   14004f8dc:	sub    ecx,edi
   14004f8de:	or     r8d,eax
   14004f8e1:	shr    r8d,cl
   14004f8e4:	mov    ecx,DWORD PTR [r9+0x84]
   14004f8eb:	and    r8d,0xfffe
   14004f8f2:	cmp    r8d,DWORD PTR [r9+rcx*4+0x4]
   14004f8f7:	jae    0x14004f92a
   14004f8f9:	mov    eax,r12d
   14004f8fc:	sub    eax,ecx
   14004f8fe:	mov    cl,al
   14004f900:	shr    r8d,cl
   14004f903:	movzx  ecx,BYTE PTR [r8+r9*1+0x88]
   14004f90c:	add    ecx,edi
   14004f90e:	mov    eax,ecx
   14004f910:	shr    eax,0x3
   14004f913:	add    eax,r11d
   14004f916:	and    ecx,0x7
   14004f919:	mov    DWORD PTR [rbx+0x8],eax
   14004f91c:	mov    DWORD PTR [rbx+0xc],ecx
   14004f91f:	movzx  edx,WORD PTR [r9+r8*2+0x488]
   14004f928:	jmp    0x14004f992
   14004f92a:	inc    ecx
   14004f92c:	mov    r10d,r14d
   14004f92f:	cmp    ecx,r14d
   14004f932:	jae    0x14004f952
   14004f934:	mov    edx,ecx
   14004f936:	inc    rdx
   14004f939:	lea    rdx,[r9+rdx*4]
   14004f93d:	cmp    r8d,DWORD PTR [rdx]
   14004f940:	jb     0x14004f94f
   14004f942:	inc    ecx
   14004f944:	add    rdx,0x4
   14004f948:	cmp    ecx,r14d
   14004f94b:	jb     0x14004f93d
   14004f94d:	jmp    0x14004f952
   14004f94f:	mov    r10d,ecx
   14004f952:	lea    ecx,[rdi+r10*1]
   14004f956:	mov    eax,ecx
   14004f958:	and    ecx,0x7
   14004f95b:	shr    eax,0x3
   14004f95e:	add    eax,r11d
   14004f961:	mov    DWORD PTR [rbx+0xc],ecx
   14004f964:	mov    DWORD PTR [rbx+0x8],eax
   14004f967:	mov    ecx,r12d
   14004f96a:	sub    ecx,r10d
   14004f96d:	lea    eax,[r10-0x1]
   14004f971:	sub    r8d,DWORD PTR [r9+rax*4+0x4]
   14004f976:	mov    eax,r10d
   14004f979:	shr    r8d,cl
   14004f97c:	add    r8d,DWORD PTR [r9+rax*4+0x44]
   14004f981:	cmp    r8d,DWORD PTR [r9]
   14004f984:	sbb    eax,eax
   14004f986:	and    eax,r8d
   14004f989:	movzx  edx,WORD PTR [r9+rax*2+0xc88]
   14004f992:	mov    rcx,rbx
   14004f995:	cmp    edx,0x100
   14004f99b:	jne    0x14004f9af
   14004f99d:	call   0x14004cefc
   14004f9a2:	test   al,al
   14004f9a4:	je     0x14004ffb9
   14004f9aa:	jmp    0x14004ffab
   14004f9af:	call   0x14004a440
   14004f9b4:	mov    rcx,QWORD PTR [rbx+0xc0]
   14004f9bb:	mov    rdx,QWORD PTR [rbx+0x4b90]
   14004f9c2:	mov    BYTE PTR [rdx+rcx*1],al
   14004f9c5:	inc    DWORD PTR [rbx+0x98b0]
   14004f9cb:	inc    QWORD PTR [rbx+0xc0]
   14004f9d2:	mov    eax,DWORD PTR [rbx+0x98b0]
   14004f9d8:	cmp    eax,DWORD PTR [rbx+0x98ac]
   14004f9de:	jne    0x14004fb0a
   14004f9e4:	and    DWORD PTR [rbx+0x98b0],0x0
   14004f9eb:	jmp    0x14004fb0a
   14004f9f0:	movsxd r10,DWORD PTR [rbx+0x8]
   14004f9f4:	mov    r11d,DWORD PTR [rbx+0xc]
   14004f9f8:	movzx  r8d,BYTE PTR [r10+rdx*1]
   14004f9fd:	lea    eax,[r10+0x1]
   14004fa01:	shl    r8d,0x8
   14004fa05:	movsxd rcx,eax
   14004fa08:	movzx  eax,BYTE PTR [rcx+rdx*1]
   14004fa0c:	or     r8d,eax
   14004fa0f:	lea    eax,[r10+0x2]
   14004fa13:	shl    r8d,0x8
   14004fa17:	movsxd rcx,eax
   14004fa1a:	movzx  eax,BYTE PTR [rcx+rdx*1]
   14004fa1e:	mov    ecx,0x8
   14004fa23:	sub    ecx,r11d
   14004fa26:	or     r8d,eax
   14004fa29:	shr    r8d,cl
   14004fa2c:	mov    ecx,DWORD PTR [rbx+0x170]
   14004fa32:	and    r8d,0xfffe
   14004fa39:	cmp    r8d,DWORD PTR [rbx+rcx*4+0xf0]
   14004fa41:	jae    0x14004fa75
   14004fa43:	mov    eax,r12d
   14004fa46:	sub    eax,ecx
   14004fa48:	mov    cl,al
   14004fa4a:	shr    r8d,cl
   14004fa4d:	movzx  ecx,BYTE PTR [r8+rbx*1+0x174]
   14004fa56:	add    ecx,r11d
   14004fa59:	mov    eax,ecx
   14004fa5b:	shr    eax,0x3
   14004fa5e:	add    eax,r10d
   14004fa61:	and    ecx,0x7
   14004fa64:	mov    DWORD PTR [rbx+0x8],eax
   14004fa67:	mov    DWORD PTR [rbx+0xc],ecx
   14004fa6a:	movzx  r8d,WORD PTR [rbx+r8*2+0x574]
   14004fa73:	jmp    0x14004fae8
   14004fa75:	inc    ecx
   14004fa77:	mov    r9d,r14d
   14004fa7a:	cmp    ecx,r14d
   14004fa7d:	jae    0x14004fa9e
   14004fa7f:	mov    edx,ecx
   14004fa81:	add    rdx,0x3c
   14004fa85:	lea    rdx,[rbx+rdx*4]
   14004fa89:	cmp    r8d,DWORD PTR [rdx]
   14004fa8c:	jb     0x14004fa9b
   14004fa8e:	inc    ecx
   14004fa90:	add    rdx,0x4
   14004fa94:	cmp    ecx,r14d
   14004fa97:	jb     0x14004fa89
   14004fa99:	jmp    0x14004fa9e
   14004fa9b:	mov    r9d,ecx
   14004fa9e:	lea    ecx,[r11+r9*1]
   14004faa2:	mov    eax,ecx
   14004faa4:	and    ecx,0x7
   14004faa7:	shr    eax,0x3
   14004faaa:	add    eax,r10d
   14004faad:	mov    DWORD PTR [rbx+0xc],ecx
   14004fab0:	mov    DWORD PTR [rbx+0x8],eax
   14004fab3:	mov    ecx,r12d
   14004fab6:	sub    ecx,r9d
   14004fab9:	lea    eax,[r9-0x1]
   14004fabd:	sub    r8d,DWORD PTR [rbx+rax*4+0xf0]
   14004fac5:	shr    r8d,cl
   14004fac8:	mov    eax,r9d
   14004facb:	add    r8d,DWORD PTR [rbx+rax*4+0x130]
   14004fad3:	cmp    r8d,DWORD PTR [rbx+0xec]
   14004fada:	sbb    eax,eax
   14004fadc:	and    eax,r8d
   14004fadf:	movzx  r8d,WORD PTR [rbx+rax*2+0xd74]
   14004fae8:	cmp    r8d,0x100
   14004faef:	jge    0x14004fb16
   14004faf1:	mov    rax,QWORD PTR [rbx+0xc0]
   14004faf8:	mov    rcx,QWORD PTR [rbx+0x4b90]
   14004faff:	mov    BYTE PTR [rcx+rax*1],r8b
   14004fb03:	inc    QWORD PTR [rbx+0xc0]
   14004fb0a:	dec    QWORD PTR [rbx+0x4da0]
   14004fb11:	jmp    0x14004ffab
   14004fb16:	cmp    r8d,0x10d
   14004fb1d:	jle    0x14004fd3c
   14004fb23:	lea    eax,[r8-0x10e]
   14004fb2a:	movsxd rcx,eax
   14004fb2d:	movzx  r10d,BYTE PTR [rcx+r15*1+0x81d00]
   14004fb36:	movzx  r11d,BYTE PTR [rcx+r15*1+0x81d20]
   14004fb3f:	add    r10d,0x3
   14004fb43:	test   r11d,r11d
   14004fb46:	je     0x14004fba7
   14004fb48:	movsxd rdx,DWORD PTR [rbx+0x8]
   14004fb4c:	mov    r8,QWORD PTR [rbx+0x18]
   14004fb50:	lea    eax,[rdx+0x1]
   14004fb53:	movzx  r9d,BYTE PTR [rdx+r8*1]
   14004fb58:	movsxd rcx,eax
   14004fb5b:	shl    r9d,0x8
   14004fb5f:	movzx  eax,BYTE PTR [rcx+r8*1]
   14004fb64:	or     r9d,eax
   14004fb67:	lea    eax,[rdx+0x2]
   14004fb6a:	movsxd rcx,eax
   14004fb6d:	shl    r9d,0x8
   14004fb71:	movzx  eax,BYTE PTR [rcx+r8*1]
   14004fb76:	mov    ecx,0x8
   14004fb7b:	sub    ecx,DWORD PTR [rbx+0xc]
   14004fb7e:	or     r9d,eax
   14004fb81:	shr    r9d,cl
   14004fb84:	mov    ecx,r12d
   14004fb87:	sub    ecx,r11d
   14004fb8a:	movzx  edx,r9w
   14004fb8e:	shr    edx,cl
   14004fb90:	mov    ecx,DWORD PTR [rbx+0xc]
   14004fb93:	add    r10d,edx
   14004fb96:	add    ecx,r11d
   14004fb99:	mov    eax,ecx
   14004fb9b:	shr    eax,0x3
   14004fb9e:	add    DWORD PTR [rbx+0x8],eax
   14004fba1:	and    ecx,0x7
   14004fba4:	mov    DWORD PTR [rbx+0xc],ecx
   14004fba7:	movsxd r11,DWORD PTR [rbx+0x8]
   14004fbab:	mov    rdx,QWORD PTR [rbx+0x18]
   14004fbaf:	mov    edi,DWORD PTR [rbx+0xc]
   14004fbb2:	lea    eax,[r11+0x1]
   14004fbb6:	movzx  r8d,BYTE PTR [r11+rdx*1]
   14004fbbb:	shl    r8d,0x8
   14004fbbf:	movsxd rcx,eax
   14004fbc2:	movzx  eax,BYTE PTR [rcx+rdx*1]
   14004fbc6:	or     r8d,eax
   14004fbc9:	lea    eax,[r11+0x2]
   14004fbcd:	shl    r8d,0x8
   14004fbd1:	movsxd rcx,eax
   14004fbd4:	movzx  eax,BYTE PTR [rcx+rdx*1]
   14004fbd8:	mov    ecx,0x8
   14004fbdd:	sub    ecx,edi
   14004fbdf:	or     r8d,eax
   14004fbe2:	shr    r8d,cl
   14004fbe5:	mov    ecx,DWORD PTR [rbx+0x105c]
   14004fbeb:	and    r8d,0xfffe
   14004fbf2:	cmp    r8d,DWORD PTR [rbx+rcx*4+0xfdc]
   14004fbfa:	jae    0x14004fc2d
   14004fbfc:	mov    eax,r12d
   14004fbff:	sub    eax,ecx
   14004fc01:	mov    cl,al
   14004fc03:	shr    r8d,cl
   14004fc06:	movzx  ecx,BYTE PTR [r8+rbx*1+0x1060]
   14004fc0f:	add    ecx,edi
   14004fc11:	mov    eax,ecx
   14004fc13:	shr    eax,0x3
   14004fc16:	add    eax,r11d
   14004fc19:	and    ecx,0x7
   14004fc1c:	mov    DWORD PTR [rbx+0x8],eax
   14004fc1f:	mov    DWORD PTR [rbx+0xc],ecx
   14004fc22:	movzx  eax,WORD PTR [rbx+r8*2+0x1460]
   14004fc2b:	jmp    0x14004fca2
   14004fc2d:	inc    ecx
   14004fc2f:	mov    r9d,r14d
   14004fc32:	cmp    ecx,r14d
   14004fc35:	jae    0x14004fc59
   14004fc37:	mov    edx,ecx
   14004fc39:	add    rdx,0x3f7
   14004fc40:	lea    rdx,[rbx+rdx*4]
   14004fc44:	cmp    r8d,DWORD PTR [rdx]
   14004fc47:	jb     0x14004fc56
   14004fc49:	inc    ecx
   14004fc4b:	add    rdx,0x4
   14004fc4f:	cmp    ecx,r14d
   14004fc52:	jb     0x14004fc44
   14004fc54:	jmp    0x14004fc59
   14004fc56:	mov    r9d,ecx
   14004fc59:	lea    ecx,[rdi+r9*1]
   14004fc5d:	mov    eax,ecx
   14004fc5f:	and    ecx,0x7
   14004fc62:	shr    eax,0x3
   14004fc65:	add    eax,r11d
   14004fc68:	mov    DWORD PTR [rbx+0xc],ecx
   14004fc6b:	mov    DWORD PTR [rbx+0x8],eax
   14004fc6e:	mov    ecx,r12d
   14004fc71:	sub    ecx,r9d
   14004fc74:	lea    eax,[r9-0x1]
   14004fc78:	sub    r8d,DWORD PTR [rbx+rax*4+0xfdc]
   14004fc80:	mov    eax,r9d
   14004fc83:	shr    r8d,cl
   14004fc86:	add    r8d,DWORD PTR [rbx+rax*4+0x101c]
   14004fc8e:	cmp    r8d,DWORD PTR [rbx+0xfd8]
   14004fc95:	sbb    eax,eax
   14004fc97:	and    eax,r8d
   14004fc9a:	movzx  eax,WORD PTR [rbx+rax*2+0x1c60]
   14004fca2:	cdqe   
   14004fca4:	mov    r11d,DWORD PTR [r15+rax*4+0x81d40]
   14004fcac:	movzx  edi,BYTE PTR [rax+r15*1+0x81e00]
   14004fcb5:	inc    r11d
   14004fcb8:	test   edi,edi
   14004fcba:	je     0x14004fd19
   14004fcbc:	movsxd rdx,DWORD PTR [rbx+0x8]
   14004fcc0:	mov    r8,QWORD PTR [rbx+0x18]
   14004fcc4:	lea    eax,[rdx+0x1]
   14004fcc7:	movzx  r9d,BYTE PTR [rdx+r8*1]
   14004fccc:	movsxd rcx,eax
   14004fccf:	shl    r9d,0x8
   14004fcd3:	movzx  eax,BYTE PTR [rcx+r8*1]
   14004fcd8:	or     r9d,eax
   14004fcdb:	lea    eax,[rdx+0x2]
   14004fcde:	movsxd rcx,eax
   14004fce1:	shl    r9d,0x8
   14004fce5:	movzx  eax,BYTE PTR [rcx+r8*1]
   14004fcea:	mov    ecx,0x8
   14004fcef:	sub    ecx,DWORD PTR [rbx+0xc]
   14004fcf2:	or     r9d,eax
   14004fcf5:	shr    r9d,cl
   14004fcf8:	mov    ecx,r12d
   14004fcfb:	sub    ecx,edi
   14004fcfd:	movzx  edx,r9w
   14004fd01:	shr    edx,cl
   14004fd03:	mov    ecx,DWORD PTR [rbx+0xc]
   14004fd06:	add    r11d,edx
   14004fd09:	add    ecx,edi
   14004fd0b:	mov    eax,ecx
   14004fd0d:	shr    eax,0x3
   14004fd10:	add    DWORD PTR [rbx+0x8],eax
   14004fd13:	and    ecx,0x7
   14004fd16:	mov    DWORD PTR [rbx+0xc],ecx
   14004fd19:	cmp    r11d,0x2000
   14004fd20:	jb     0x14004fd31
   14004fd22:	inc    r10d
   14004fd25:	cmp    r11d,0x40000
   14004fd2c:	jb     0x14004fd31
   14004fd2e:	inc    r10d
   14004fd31:	mov    r8d,r11d
   14004fd34:	mov    edx,r10d
   14004fd37:	jmp    0x14004ffa3
   14004fd3c:	jne    0x14004fd46
   14004fd3e:	mov    rcx,rbx
   14004fd41:	jmp    0x14004f99d
   14004fd46:	cmp    r8d,0x100
   14004fd4d:	jne    0x14004fd61
   14004fd4f:	mov    r8d,DWORD PTR [rbx+0xb8]
   14004fd56:	mov    edx,DWORD PTR [rbx+0xb4]
   14004fd5c:	jmp    0x14004ffa3
   14004fd61:	cmp    r8d,0x105
   14004fd68:	jge    0x14004ff0b
   14004fd6e:	movsxd r10,DWORD PTR [rbx+0x8]
   14004fd72:	mov    rdx,QWORD PTR [rbx+0x18]
   14004fd76:	mov    eax,DWORD PTR [rbx+0xb0]
   14004fd7c:	mov    edi,DWORD PTR [rbx+0xc]
   14004fd7f:	sub    eax,r8d
   14004fd82:	and    eax,0x3
   14004fd85:	movzx  r8d,BYTE PTR [r10+rdx*1]
   14004fd8a:	shl    r8d,0x8
   14004fd8e:	mov    r11d,DWORD PTR [rbx+rax*4+0xa0]
   14004fd96:	lea    eax,[r10+0x1]
   14004fd9a:	movsxd rcx,eax
   14004fd9d:	movzx  eax,BYTE PTR [rcx+rdx*1]
   14004fda1:	or     r8d,eax
   14004fda4:	lea    eax,[r10+0x2]
   14004fda8:	shl    r8d,0x8
   14004fdac:	movsxd rcx,eax
   14004fdaf:	movzx  eax,BYTE PTR [rcx+rdx*1]
   14004fdb3:	mov    ecx,0x8
   14004fdb8:	sub    ecx,edi
   14004fdba:	or     r8d,eax
   14004fdbd:	shr    r8d,cl
   14004fdc0:	mov    ecx,DWORD PTR [rbx+0x2e34]
   14004fdc6:	and    r8d,0xfffe
   14004fdcd:	cmp    r8d,DWORD PTR [rbx+rcx*4+0x2db4]
   14004fdd5:	jae    0x14004fe08
   14004fdd7:	mov    eax,r12d
   14004fdda:	sub    eax,ecx
   14004fddc:	mov    cl,al
   14004fdde:	shr    r8d,cl
   14004fde1:	movzx  ecx,BYTE PTR [r8+rbx*1+0x2e38]
   14004fdea:	add    ecx,edi
   14004fdec:	mov    eax,ecx
   14004fdee:	shr    eax,0x3
   14004fdf1:	add    eax,r10d
   14004fdf4:	and    ecx,0x7
   14004fdf7:	mov    DWORD PTR [rbx+0x8],eax
   14004fdfa:	mov    DWORD PTR [rbx+0xc],ecx
   14004fdfd:	movzx  eax,WORD PTR [rbx+r8*2+0x3238]
   14004fe06:	jmp    0x14004fe7d
   14004fe08:	inc    ecx
   14004fe0a:	mov    r9d,r14d
   14004fe0d:	cmp    ecx,r14d
   14004fe10:	jae    0x14004fe34
   14004fe12:	mov    edx,ecx
   14004fe14:	add    rdx,0xb6d
   14004fe1b:	lea    rdx,[rbx+rdx*4]
   14004fe1f:	cmp    r8d,DWORD PTR [rdx]
   14004fe22:	jb     0x14004fe31
   14004fe24:	inc    ecx
   14004fe26:	add    rdx,0x4
   14004fe2a:	cmp    ecx,r14d
   14004fe2d:	jb     0x14004fe1f
   14004fe2f:	jmp    0x14004fe34
   14004fe31:	mov    r9d,ecx
   14004fe34:	lea    ecx,[rdi+r9*1]
   14004fe38:	mov    eax,ecx
   14004fe3a:	and    ecx,0x7
   14004fe3d:	shr    eax,0x3
   14004fe40:	add    eax,r10d
   14004fe43:	mov    DWORD PTR [rbx+0xc],ecx
   14004fe46:	mov    DWORD PTR [rbx+0x8],eax
   14004fe49:	mov    ecx,r12d
   14004fe4c:	sub    ecx,r9d
   14004fe4f:	lea    eax,[r9-0x1]
   14004fe53:	sub    r8d,DWORD PTR [rbx+rax*4+0x2db4]
   14004fe5b:	mov    eax,r9d
   14004fe5e:	shr    r8d,cl
   14004fe61:	add    r8d,DWORD PTR [rbx+rax*4+0x2df4]
   14004fe69:	cmp    r8d,DWORD PTR [rbx+0x2db0]
   14004fe70:	sbb    eax,eax
   14004fe72:	and    eax,r8d
   14004fe75:	movzx  eax,WORD PTR [rbx+rax*2+0x3a38]
   14004fe7d:	cdqe   
   14004fe7f:	movzx  r10d,BYTE PTR [rax+r15*1+0x81d00]
   14004fe88:	movzx  edi,BYTE PTR [rax+r15*1+0x81d20]
   14004fe91:	add    r10d,0x2
   14004fe95:	test   edi,edi
   14004fe97:	je     0x14004fef6
   14004fe99:	movsxd rdx,DWORD PTR [rbx+0x8]
   14004fe9d:	mov    r8,QWORD PTR [rbx+0x18]
   14004fea1:	lea    eax,[rdx+0x1]
   14004fea4:	movzx  r9d,BYTE PTR [rdx+r8*1]
   14004fea9:	movsxd rcx,eax
   14004feac:	shl    r9d,0x8
   14004feb0:	movzx  eax,BYTE PTR [rcx+r8*1]
   14004feb5:	or     r9d,eax
   14004feb8:	lea    eax,[rdx+0x2]
   14004febb:	movsxd rcx,eax
   14004febe:	shl    r9d,0x8
   14004fec2:	movzx  eax,BYTE PTR [rcx+r8*1]
   14004fec7:	mov    ecx,0x8
   14004fecc:	sub    ecx,DWORD PTR [rbx+0xc]
   14004fecf:	or     r9d,eax
   14004fed2:	shr    r9d,cl
   14004fed5:	mov    ecx,r12d
   14004fed8:	sub    ecx,edi
   14004feda:	movzx  edx,r9w
   14004fede:	shr    edx,cl
   14004fee0:	mov    ecx,DWORD PTR [rbx+0xc]
   14004fee3:	add    r10d,edx
   14004fee6:	add    ecx,edi
   14004fee8:	mov    eax,ecx
   14004feea:	shr    eax,0x3
   14004feed:	add    DWORD PTR [rbx+0x8],eax
   14004fef0:	and    ecx,0x7
   14004fef3:	mov    DWORD PTR [rbx+0xc],ecx
   14004fef6:	cmp    r11d,0x101
   14004fefd:	jb     0x14004fd31
   14004ff03:	inc    r10d
   14004ff06:	jmp    0x14004fd19
   14004ff0b:	cmp    r8d,0x10e
   14004ff12:	jge    0x14004ffab
   14004ff18:	lea    eax,[r8-0x105]
   14004ff1f:	movsxd rcx,eax
   14004ff22:	movzx  r10d,BYTE PTR [rcx+r15*1+0x81e30]
   14004ff2b:	movzx  r11d,BYTE PTR [rcx+r15*1+0x81e38]
   14004ff34:	inc    r10d
   14004ff37:	test   r11d,r11d
   14004ff3a:	je     0x14004ff9b
   14004ff3c:	movsxd rdx,DWORD PTR [rbx+0x8]
   14004ff40:	mov    r8,QWORD PTR [rbx+0x18]
   14004ff44:	lea    eax,[rdx+0x1]
   14004ff47:	movzx  r9d,BYTE PTR [rdx+r8*1]
   14004ff4c:	movsxd rcx,eax
   14004ff4f:	shl    r9d,0x8
   14004ff53:	movzx  eax,BYTE PTR [rcx+r8*1]
   14004ff58:	or     r9d,eax
   14004ff5b:	lea    eax,[rdx+0x2]
   14004ff5e:	movsxd rcx,eax
   14004ff61:	shl    r9d,0x8
   14004ff65:	movzx  eax,BYTE PTR [rcx+r8*1]
   14004ff6a:	mov    ecx,0x8
   14004ff6f:	sub    ecx,DWORD PTR [rbx+0xc]
   14004ff72:	or     r9d,eax
   14004ff75:	shr    r9d,cl
   14004ff78:	mov    ecx,r12d
   14004ff7b:	sub    ecx,r11d
   14004ff7e:	movzx  edx,r9w
   14004ff82:	shr    edx,cl
   14004ff84:	mov    ecx,DWORD PTR [rbx+0xc]
   14004ff87:	add    r10d,edx
   14004ff8a:	add    ecx,r11d
   14004ff8d:	mov    eax,ecx
   14004ff8f:	shr    eax,0x3
   14004ff92:	add    DWORD PTR [rbx+0x8],eax
   14004ff95:	and    ecx,0x7
   14004ff98:	mov    DWORD PTR [rbx+0xc],ecx
   14004ff9b:	mov    r8d,r10d
   14004ff9e:	mov    edx,0x2
   14004ffa3:	mov    rcx,rbx
   14004ffa6:	call   0x14004a014
   14004ffab:	cmp    QWORD PTR [rbx+0x4da0],0x0
   14004ffb3:	jge    0x14004f818
   14004ffb9:	mov    rcx,rbx
   14004ffbc:	call   0x14004cca8
   14004ffc1:	mov    rcx,rbx
   14004ffc4:	call   0x14004ed0c
   14004ffc9:	mov    rbx,QWORD PTR [rsp+0x30]
   14004ffce:	mov    rdi,QWORD PTR [rsp+0x38]
   14004ffd3:	mov    r12,QWORD PTR [rsp+0x40]
   14004ffd8:	mov    r14,QWORD PTR [rsp+0x48]
   14004ffdd:	add    rsp,0x20
   14004ffe1:	pop    r15
   14004ffe3:	ret    
   14004ffe4:	mov    QWORD PTR [rsp+0x10],rbx
   14004ffe9:	mov    QWORD PTR [rsp+0x18],rbp
   14004ffee:	mov    QWORD PTR [rsp+0x20],rsi
   14004fff3:	push   rdi
   14004fff4:	push   r12
   14004fff6:	push   r13
   14004fff8:	push   r14
   14004fffa:	push   r15
   14004fffc:	sub    rsp,0x20
   140050000:	xor    r12d,r12d
   140050003:	lea    rsi,[rip+0xfffffffffffafff6]        # 0x140000000
   14005000a:	cmp    DWORD PTR [rip+0x4ec43],r12d        # 0x14009ec54
   140050011:	mov    r13b,dl
   140050014:	mov    rbx,rcx
   140050017:	jne    0x14005008b
   140050019:	mov    ebp,r12d
   14005001c:	lea    r14,[rip+0x31e5d]        # 0x140081e80
   140050023:	mov    edi,r12d
   140050026:	mov    esi,r12d
   140050029:	cmp    DWORD PTR [r14],r12d
   14005002c:	jle    0x140050075
   14005002e:	mov    r15d,DWORD PTR [r14]
   140050031:	lea    rax,[rip+0xfffffffffffaffc8]        # 0x140000000
   140050038:	mov    ecx,edi
   14005003a:	mov    r12d,0x1
   140050040:	shl    r12d,cl
   140050043:	mov    r8d,r15d
   140050046:	lea    rcx,[rax+0x9ed50]
   14005004d:	mov    dl,dil
   140050050:	add    rcx,rsi
   140050053:	call   0x140058f40
   140050058:	lea    rax,[rip+0xfffffffffffaffa1]        # 0x140000000
   14005005f:	mov    DWORD PTR [rax+rsi*4+0x9ec50],ebp
   140050066:	inc    rsi
   140050069:	add    ebp,r12d
   14005006c:	sub    r15,0x1
   140050070:	jne    0x14005005f
   140050072:	xor    r12d,r12d
   140050075:	inc    edi
   140050077:	add    r14,0x4
   14005007b:	movsxd rax,edi
   14005007e:	cmp    rax,0x13
   140050082:	jb     0x140050029
   140050084:	lea    rsi,[rip+0xfffffffffffaff75]        # 0x140000000
   14005008b:	mov    BYTE PTR [rbx+0x4db8],0x1
   140050092:	cmp    BYTE PTR [rbx+0x4da8],r12b
   140050099:	jne    0x1400500d4
   14005009b:	mov    dl,r13b
   14005009e:	mov    rcx,rbx
   1400500a1:	call   0x14004e9c8
   1400500a6:	mov    rcx,rbx
   1400500a9:	call   0x14004eaac
   1400500ae:	test   al,al
   1400500b0:	je     0x140051214
   1400500b6:	test   r13b,r13b
   1400500b9:	je     0x1400500c4
   1400500bb:	cmp    BYTE PTR [rbx+0xe894],r12b
   1400500c2:	jne    0x1400500d4
   1400500c4:	mov    rcx,rbx
   1400500c7:	call   0x14004d470
   1400500cc:	test   al,al
   1400500ce:	je     0x140051214
   1400500d4:	mov    r15d,DWORD PTR [rsp+0x50]
   1400500d9:	mov    r14d,0x8
   1400500df:	lea    r13d,[r14-0x7]
   1400500e3:	mov    rax,QWORD PTR [rbx+0xe968]
   1400500ea:	and    QWORD PTR [rbx+0xc0],rax
   1400500f1:	mov    eax,DWORD PTR [rbx+0xd4]
   1400500f7:	cmp    DWORD PTR [rbx+0x8],eax
   1400500fa:	jle    0x14005010c
   1400500fc:	mov    rcx,rbx
   1400500ff:	call   0x14004eaac
   140050104:	test   al,al
   140050106:	je     0x14005120c
   14005010c:	mov    rcx,QWORD PTR [rbx+0xc8]
   140050113:	mov    rdx,QWORD PTR [rbx+0xc0]
   14005011a:	mov    rax,rcx
   14005011d:	sub    rax,rdx
   140050120:	and    rax,QWORD PTR [rbx+0xe968]
   140050127:	cmp    rax,0x104
   14005012d:	jae    0x14005015d
   14005012f:	cmp    rcx,rdx
   140050132:	je     0x14005015d
   140050134:	mov    rcx,rbx
   140050137:	call   0x14004ed98
   14005013c:	mov    rax,QWORD PTR [rbx+0x4da0]
   140050143:	cmp    QWORD PTR [rbx+0x4db0],rax
   14005014a:	jg     0x140051214
   140050150:	cmp    BYTE PTR [rbx+0x4da8],r12b
   140050157:	jne    0x1400511eb
   14005015d:	cmp    DWORD PTR [rbx+0xe890],r13d
   140050164:	jne    0x14005053b
   14005016a:	lea    rsi,[rbx+0x9a30]
   140050171:	mov    rcx,rsi
   140050174:	call   0x14004a770
   140050179:	mov    ebp,eax
   14005017b:	cmp    eax,0xffffffff
   14005017e:	je     0x1400511f9
   140050184:	cmp    eax,DWORD PTR [rbx+0xe6f8]
   14005018a:	jne    0x14005051d
   140050190:	mov    rcx,rsi
   140050193:	call   0x14004a770
   140050198:	mov    edi,eax
   14005019a:	cmp    eax,0xffffffff
   14005019d:	jne    0x1400501ae
   14005019f:	mov    rcx,rsi
   1400501a2:	call   0x140049f14
   1400501a7:	mov    DWORD PTR [rbx+0xe890],r12d
   1400501ae:	test   edi,edi
   1400501b0:	jne    0x1400501ce
   1400501b2:	mov    rcx,rbx
   1400501b5:	call   0x14004d470
   1400501ba:	test   al,al
   1400501bc:	je     0x14005120c
   1400501c2:	lea    rsi,[rip+0xfffffffffffafe37]        # 0x140000000
   1400501c9:	jmp    0x1400500e3
   1400501ce:	cmp    edi,0xffffffff
   1400501d1:	je     0x14005120c
   1400501d7:	cmp    edi,0x2
   1400501da:	je     0x14005120c
   1400501e0:	cmp    edi,0x3
   1400501e3:	jne    0x1400501ef
   1400501e5:	mov    rcx,rbx
   1400501e8:	call   0x14004df6c
   1400501ed:	jmp    0x1400501ba
   1400501ef:	cmp    edi,0x4
   1400501f2:	jne    0x140050417
   1400501f8:	mov    edi,r12d
   1400501fb:	mov    r14b,r12b
   1400501fe:	mov    ebp,r12d
   140050201:	test   r14b,r14b
   140050204:	jne    0x14005120c
   14005020a:	mov    rcx,rsi
   14005020d:	call   0x14004a770
   140050212:	cmp    eax,0xffffffff
   140050215:	jne    0x14005022b
   140050217:	mov    rcx,rsi
   14005021a:	call   0x140049f14
   14005021f:	mov    DWORD PTR [rbx+0xe890],r12d
   140050226:	mov    r14b,r13b
   140050229:	jmp    0x14005023e
   14005022b:	cmp    ebp,0x3
   14005022e:	jne    0x140050236
   140050230:	movzx  r15d,al
   140050234:	jmp    0x14005023e
   140050236:	shl    edi,0x8
   140050239:	movzx  eax,al
   14005023c:	add    edi,eax
   14005023e:	add    ebp,r13d
   140050241:	cmp    ebp,0x4
   140050244:	jl     0x140050201
   140050246:	test   r14b,r14b
   140050249:	jne    0x14005120c
   14005024f:	mov    r10,QWORD PTR [rbx+0xc0]
   140050256:	lea    r8d,[r15+0x20]
   14005025a:	add    edi,0x2
   14005025d:	mov    r9,r10
   140050260:	mov    eax,edi
   140050262:	sub    r9,rax
   140050265:	mov    rax,QWORD PTR [rbx+0xe960]
   14005026c:	add    rax,0xffffffffffffefff
   140050272:	cmp    r9,rax
   140050275:	jae    0x1400503b9
   14005027b:	cmp    r10,rax
   14005027e:	jae    0x1400503b9
   140050284:	mov    rax,QWORD PTR [rbx+0x4b90]
   14005028b:	mov    r14d,0x8
   140050291:	lea    rcx,[rax+r9*1]
   140050295:	lea    rdx,[rax+r10*1]
   140050299:	mov    eax,r8d
   14005029c:	add    rax,r10
   14005029f:	mov    QWORD PTR [rbx+0xc0],rax
   1400502a6:	cmp    edi,r8d
   1400502a9:	jae    0x1400502f6
   1400502ab:	cmp    r8d,r14d
   1400502ae:	jb     0x140050317
   1400502b0:	mov    r9d,r8d
   1400502b3:	shr    r9,0x3
   1400502b7:	mov    al,BYTE PTR [rcx]
   1400502b9:	add    r8d,0xfffffff8
   1400502bd:	mov    BYTE PTR [rdx],al
   1400502bf:	mov    al,BYTE PTR [rcx+0x1]
   1400502c2:	mov    BYTE PTR [rdx+0x1],al
   1400502c5:	mov    al,BYTE PTR [rcx+0x2]
   1400502c8:	mov    BYTE PTR [rdx+0x2],al
   1400502cb:	mov    al,BYTE PTR [rcx+0x3]
   1400502ce:	mov    BYTE PTR [rdx+0x3],al
   1400502d1:	mov    al,BYTE PTR [rcx+0x4]
   1400502d4:	mov    BYTE PTR [rdx+0x4],al
   1400502d7:	mov    al,BYTE PTR [rcx+0x5]
   1400502da:	mov    BYTE PTR [rdx+0x5],al
   1400502dd:	mov    al,BYTE PTR [rcx+0x6]
   1400502e0:	mov    BYTE PTR [rdx+0x6],al
   1400502e3:	mov    al,BYTE PTR [rcx+0x7]
   1400502e6:	add    rcx,r14
   1400502e9:	mov    BYTE PTR [rdx+0x7],al
   1400502ec:	add    rdx,r14
   1400502ef:	sub    r9,r13
   1400502f2:	jne    0x1400502b7
   1400502f4:	jmp    0x140050317
   1400502f6:	cmp    r8d,r14d
   1400502f9:	jb     0x140050317
   1400502fb:	mov    r9d,r8d
   1400502fe:	shr    r9,0x3
   140050302:	mov    rax,QWORD PTR [rcx]
   140050305:	add    r8d,0xfffffff8
   140050309:	mov    QWORD PTR [rdx],rax
   14005030c:	add    rcx,r14
   14005030f:	add    rdx,r14
   140050312:	sub    r9,r13
   140050315:	jne    0x140050302
   140050317:	lea    rsi,[rip+0xfffffffffffafce2]        # 0x140000000
   14005031e:	test   r8d,r8d
   140050321:	je     0x1400500e3
   140050327:	mov    al,BYTE PTR [rcx]
   140050329:	lea    rsi,[rip+0xfffffffffffafcd0]        # 0x140000000
   140050330:	mov    BYTE PTR [rdx],al
   140050332:	cmp    r8d,r13d
   140050335:	jbe    0x1400500e3
   14005033b:	mov    al,BYTE PTR [rcx+0x1]
   14005033e:	lea    rsi,[rip+0xfffffffffffafcbb]        # 0x140000000
   140050345:	mov    BYTE PTR [rdx+0x1],al
   140050348:	cmp    r8d,0x2
   14005034c:	jbe    0x1400500e3
   140050352:	mov    al,BYTE PTR [rcx+0x2]
   140050355:	lea    rsi,[rip+0xfffffffffffafca4]        # 0x140000000
   14005035c:	mov    BYTE PTR [rdx+0x2],al
   14005035f:	cmp    r8d,0x3
   140050363:	jbe    0x1400500e3
   140050369:	mov    al,BYTE PTR [rcx+0x3]
   14005036c:	lea    rsi,[rip+0xfffffffffffafc8d]        # 0x140000000
   140050373:	mov    BYTE PTR [rdx+0x3],al
   140050376:	cmp    r8d,0x4
   14005037a:	jbe    0x1400500e3
   140050380:	mov    al,BYTE PTR [rcx+0x4]
   140050383:	lea    rsi,[rip+0xfffffffffffafc76]        # 0x140000000
   14005038a:	mov    BYTE PTR [rdx+0x4],al
   14005038d:	cmp    r8d,0x5
   140050391:	jbe    0x1400500e3
   140050397:	mov    al,BYTE PTR [rcx+0x5]
   14005039a:	lea    rsi,[rip+0xfffffffffffafc5f]        # 0x140000000
   1400503a1:	mov    BYTE PTR [rdx+0x5],al
   1400503a4:	cmp    r8d,0x6
   1400503a8:	jbe    0x1400500e3
   1400503ae:	mov    al,BYTE PTR [rcx+0x6]
   1400503b1:	mov    BYTE PTR [rdx+0x6],al
   1400503b4:	jmp    0x1400501c2
   1400503b9:	lea    rsi,[rip+0xfffffffffffafc40]        # 0x140000000
   1400503c0:	mov    r14d,0x8
   1400503c6:	test   r8d,r8d
   1400503c9:	je     0x1400500e3
   1400503cf:	mov    r10,QWORD PTR [rbx+0xe968]
   1400503d6:	mov    rdx,QWORD PTR [rbx+0x4b90]
   1400503dd:	and    r10,r9
   1400503e0:	mov    rcx,QWORD PTR [rbx+0xc0]
   1400503e7:	add    r9,r13
   1400503ea:	mov    al,BYTE PTR [r10+rdx*1]
   1400503ee:	mov    BYTE PTR [rdx+rcx*1],al
   1400503f1:	mov    rax,QWORD PTR [rbx+0xc0]
   1400503f8:	mov    r10,QWORD PTR [rbx+0xe968]
   1400503ff:	add    rax,r13
   140050402:	and    rax,r10
   140050405:	mov    QWORD PTR [rbx+0xc0],rax
   14005040c:	add    r8d,0xffffffff
   140050410:	jne    0x1400503d6
   140050412:	jmp    0x1400501c2
   140050417:	cmp    edi,0x5
   14005041a:	jne    0x14005051d
   140050420:	mov    rcx,rsi
   140050423:	call   0x14004a770
   140050428:	cmp    eax,0xffffffff
   14005042b:	je     0x1400511f4
   140050431:	mov    r9,QWORD PTR [rbx+0xc0]
   140050438:	lea    r8d,[rax+0x4]
   14005043c:	mov    rax,QWORD PTR [rbx+0xe960]
   140050443:	add    rax,0xffffffffffffefff
   140050449:	lea    r10,[r9-0x1]
   14005044d:	cmp    r10,rax
   140050450:	jae    0x1400504c5
   140050452:	cmp    r9,rax
   140050455:	jae    0x1400504c5
   140050457:	mov    rax,QWORD PTR [rbx+0x4b90]
   14005045e:	lea    rcx,[rax+r10*1]
   140050462:	lea    rdx,[rax+r9*1]
   140050466:	mov    eax,r8d
   140050469:	add    rax,r9
   14005046c:	mov    QWORD PTR [rbx+0xc0],rax
   140050473:	cmp    r8d,r14d
   140050476:	jb     0x140050317
   14005047c:	mov    r9d,r8d
   14005047f:	shr    r9,0x3
   140050483:	mov    al,BYTE PTR [rcx]
   140050485:	add    r8d,0xfffffff8
   140050489:	mov    BYTE PTR [rdx],al
   14005048b:	mov    al,BYTE PTR [rcx+0x1]
   14005048e:	mov    BYTE PTR [rdx+0x1],al
   140050491:	mov    al,BYTE PTR [rcx+0x2]
   140050494:	mov    BYTE PTR [rdx+0x2],al
   140050497:	mov    al,BYTE PTR [rcx+0x3]
   14005049a:	mov    BYTE PTR [rdx+0x3],al
   14005049d:	mov    al,BYTE PTR [rcx+0x4]
   1400504a0:	mov    BYTE PTR [rdx+0x4],al
   1400504a3:	mov    al,BYTE PTR [rcx+0x5]
   1400504a6:	mov    BYTE PTR [rdx+0x5],al
   1400504a9:	mov    al,BYTE PTR [rcx+0x6]
   1400504ac:	mov    BYTE PTR [rdx+0x6],al
   1400504af:	mov    al,BYTE PTR [rcx+0x7]
   1400504b2:	add    rcx,r14
   1400504b5:	mov    BYTE PTR [rdx+0x7],al
   1400504b8:	add    rdx,r14
   1400504bb:	sub    r9,r13
   1400504be:	jne    0x140050483
   1400504c0:	jmp    0x140050317
   1400504c5:	lea    rsi,[rip+0xfffffffffffafb34]        # 0x140000000
   1400504cc:	test   r8d,r8d
   1400504cf:	je     0x1400500e3
   1400504d5:	mov    r9,QWORD PTR [rbx+0xe968]
   1400504dc:	mov    rdx,QWORD PTR [rbx+0x4b90]
   1400504e3:	and    r9,r10
   1400504e6:	mov    rcx,QWORD PTR [rbx+0xc0]
   1400504ed:	add    r10,r13
   1400504f0:	mov    al,BYTE PTR [r9+rdx*1]
   1400504f4:	mov    BYTE PTR [rdx+rcx*1],al
   1400504f7:	mov    rax,QWORD PTR [rbx+0xc0]
   1400504fe:	mov    r9,QWORD PTR [rbx+0xe968]
   140050505:	add    rax,r13
   140050508:	and    rax,r9
   14005050b:	mov    QWORD PTR [rbx+0xc0],rax
   140050512:	add    r8d,0xffffffff
   140050516:	jne    0x1400504dc
   140050518:	jmp    0x1400501c2
   14005051d:	mov    rax,QWORD PTR [rbx+0xc0]
   140050524:	mov    rcx,QWORD PTR [rbx+0x4b90]
   14005052b:	mov    BYTE PTR [rcx+rax*1],bpl
   14005052f:	add    QWORD PTR [rbx+0xc0],r13
   140050536:	jmp    0x1400501c2
   14005053b:	movsxd r10,DWORD PTR [rbx+0x8]
   14005053f:	mov    rdx,QWORD PTR [rbx+0x18]
   140050543:	mov    r11d,DWORD PTR [rbx+0xc]
   140050547:	lea    eax,[r10+0x1]
   14005054b:	movzx  r8d,BYTE PTR [r10+rdx*1]
   140050550:	shl    r8d,0x8
   140050554:	movsxd rcx,eax
   140050557:	movzx  eax,BYTE PTR [rcx+rdx*1]
   14005055b:	or     r8d,eax
   14005055e:	lea    eax,[r10+0x2]
   140050562:	shl    r8d,0x8
   140050566:	movsxd rcx,eax
   140050569:	movzx  eax,BYTE PTR [rcx+rdx*1]
   14005056d:	mov    ecx,r14d
   140050570:	sub    ecx,r11d
   140050573:	or     r8d,eax
   140050576:	shr    r8d,cl
   140050579:	mov    ecx,DWORD PTR [rbx+0x170]
   14005057f:	and    r8d,0xfffe
   140050586:	cmp    r8d,DWORD PTR [rbx+rcx*4+0xf0]
   14005058e:	jae    0x1400505c4
   140050590:	mov    eax,0x10
   140050595:	sub    eax,ecx
   140050597:	mov    cl,al
   140050599:	shr    r8d,cl
   14005059c:	movzx  ecx,BYTE PTR [r8+rbx*1+0x174]
   1400505a5:	add    ecx,r11d
   1400505a8:	mov    eax,ecx
   1400505aa:	shr    eax,0x3
   1400505ad:	add    eax,r10d
   1400505b0:	and    ecx,0x7
   1400505b3:	mov    DWORD PTR [rbx+0x8],eax
   1400505b6:	mov    DWORD PTR [rbx+0xc],ecx
   1400505b9:	movzx  r8d,WORD PTR [rbx+r8*2+0x574]
   1400505c2:	jmp    0x14005063d
   1400505c4:	mov    r9d,0xf
   1400505ca:	inc    ecx
   1400505cc:	cmp    ecx,r9d
   1400505cf:	jae    0x1400505f1
   1400505d1:	mov    edx,ecx
   1400505d3:	add    rdx,0x3c
   1400505d7:	lea    rdx,[rbx+rdx*4]
   1400505db:	cmp    r8d,DWORD PTR [rdx]
   1400505de:	jb     0x1400505ee
   1400505e0:	add    ecx,r13d
   1400505e3:	add    rdx,0x4
   1400505e7:	cmp    ecx,r9d
   1400505ea:	jb     0x1400505db
   1400505ec:	jmp    0x1400505f1
   1400505ee:	mov    r9d,ecx
   1400505f1:	lea    ecx,[r11+r9*1]
   1400505f5:	mov    eax,ecx
   1400505f7:	and    ecx,0x7
   1400505fa:	shr    eax,0x3
   1400505fd:	add    eax,r10d
   140050600:	mov    DWORD PTR [rbx+0xc],ecx
   140050603:	mov    DWORD PTR [rbx+0x8],eax
   140050606:	mov    ecx,0x10
   14005060b:	sub    ecx,r9d
   14005060e:	lea    eax,[r9-0x1]
   140050612:	sub    r8d,DWORD PTR [rbx+rax*4+0xf0]
   14005061a:	shr    r8d,cl
   14005061d:	mov    eax,r9d
   140050620:	add    r8d,DWORD PTR [rbx+rax*4+0x130]
   140050628:	cmp    r8d,DWORD PTR [rbx+0xec]
   14005062f:	sbb    eax,eax
   140050631:	and    eax,r8d
   140050634:	movzx  r8d,WORD PTR [rbx+rax*2+0xd74]
   14005063d:	cmp    r8d,0x100
   140050644:	jge    0x140050664
   140050646:	mov    rax,QWORD PTR [rbx+0xc0]
   14005064d:	mov    rcx,QWORD PTR [rbx+0x4b90]
   140050654:	mov    BYTE PTR [rcx+rax*1],r8b
   140050658:	add    QWORD PTR [rbx+0xc0],r13
   14005065f:	jmp    0x1400500e3
   140050664:	cmp    r8d,0x10f
   14005066b:	jl     0x140050be8
   140050671:	lea    eax,[r8-0x10f]
   140050678:	movsxd rcx,eax
   14005067b:	movzx  r10d,BYTE PTR [rcx+rsi*1+0x81e40]
   140050684:	movzx  r11d,BYTE PTR [rcx+rsi*1+0x81e60]
   14005068d:	add    r10d,0x3
   140050691:	test   r11d,r11d
   140050694:	je     0x1400506f5
   140050696:	movsxd rdx,DWORD PTR [rbx+0x8]
   14005069a:	mov    r8,QWORD PTR [rbx+0x18]
   14005069e:	lea    eax,[rdx+0x1]
   1400506a1:	movzx  r9d,BYTE PTR [rdx+r8*1]
   1400506a6:	movsxd rcx,eax
   1400506a9:	shl    r9d,0x8
   1400506ad:	movzx  eax,BYTE PTR [rcx+r8*1]
   1400506b2:	or     r9d,eax
   1400506b5:	lea    eax,[rdx+0x2]
   1400506b8:	movsxd rcx,eax
   1400506bb:	shl    r9d,0x8
   1400506bf:	movzx  eax,BYTE PTR [rcx+r8*1]
   1400506c4:	mov    ecx,r14d
   1400506c7:	sub    ecx,DWORD PTR [rbx+0xc]
   1400506ca:	or     r9d,eax
   1400506cd:	shr    r9d,cl
   1400506d0:	mov    ecx,0x10
   1400506d5:	sub    ecx,r11d
   1400506d8:	movzx  edx,r9w
   1400506dc:	shr    edx,cl
   1400506de:	mov    ecx,DWORD PTR [rbx+0xc]
   1400506e1:	add    r10d,edx
   1400506e4:	add    ecx,r11d
   1400506e7:	mov    eax,ecx
   1400506e9:	shr    eax,0x3
   1400506ec:	add    DWORD PTR [rbx+0x8],eax
   1400506ef:	and    ecx,0x7
   1400506f2:	mov    DWORD PTR [rbx+0xc],ecx
   1400506f5:	movsxd r11,DWORD PTR [rbx+0x8]
   1400506f9:	mov    rdx,QWORD PTR [rbx+0x18]
   1400506fd:	mov    edi,DWORD PTR [rbx+0xc]
   140050700:	lea    eax,[r11+0x1]
   140050704:	movzx  r8d,BYTE PTR [r11+rdx*1]
   140050709:	shl    r8d,0x8
   14005070d:	movsxd rcx,eax
   140050710:	movzx  eax,BYTE PTR [rcx+rdx*1]
   140050714:	or     r8d,eax
   140050717:	lea    eax,[r11+0x2]
   14005071b:	shl    r8d,0x8
   14005071f:	movsxd rcx,eax
   140050722:	movzx  eax,BYTE PTR [rcx+rdx*1]
   140050726:	mov    ecx,r14d
   140050729:	sub    ecx,edi
   14005072b:	or     r8d,eax
   14005072e:	shr    r8d,cl
   140050731:	mov    ecx,DWORD PTR [rbx+0x105c]
   140050737:	and    r8d,0xfffe
   14005073e:	cmp    r8d,DWORD PTR [rbx+rcx*4+0xfdc]
   140050746:	jae    0x14005077b
   140050748:	mov    eax,0x10
   14005074d:	sub    eax,ecx
   14005074f:	mov    cl,al
   140050751:	shr    r8d,cl
   140050754:	movzx  ecx,BYTE PTR [r8+rbx*1+0x1060]
   14005075d:	add    ecx,edi
   14005075f:	mov    eax,ecx
   140050761:	shr    eax,0x3
   140050764:	add    eax,r11d
   140050767:	and    ecx,0x7
   14005076a:	mov    DWORD PTR [rbx+0x8],eax
   14005076d:	mov    DWORD PTR [rbx+0xc],ecx
   140050770:	movzx  ecx,WORD PTR [rbx+r8*2+0x1460]
   140050779:	jmp    0x1400507f6
   14005077b:	mov    r9d,0xf
   140050781:	inc    ecx
   140050783:	cmp    ecx,r9d
   140050786:	jae    0x1400507ab
   140050788:	mov    edx,ecx
   14005078a:	add    rdx,0x3f7
   140050791:	lea    rdx,[rbx+rdx*4]
   140050795:	cmp    r8d,DWORD PTR [rdx]
   140050798:	jb     0x1400507a8
   14005079a:	add    ecx,r13d
   14005079d:	add    rdx,0x4
   1400507a1:	cmp    ecx,r9d
   1400507a4:	jb     0x140050795
   1400507a6:	jmp    0x1400507ab
   1400507a8:	mov    r9d,ecx
   1400507ab:	lea    ecx,[rdi+r9*1]
   1400507af:	mov    eax,ecx
   1400507b1:	and    ecx,0x7
   1400507b4:	shr    eax,0x3
   1400507b7:	add    eax,r11d
   1400507ba:	mov    DWORD PTR [rbx+0xc],ecx
   1400507bd:	mov    DWORD PTR [rbx+0x8],eax
   1400507c0:	mov    ecx,0x10
   1400507c5:	sub    ecx,r9d
   1400507c8:	lea    eax,[r9-0x1]
   1400507cc:	sub    r8d,DWORD PTR [rbx+rax*4+0xfdc]
   1400507d4:	shr    r8d,cl
   1400507d7:	mov    eax,r9d
   1400507da:	add    r8d,DWORD PTR [rbx+rax*4+0x101c]
   1400507e2:	cmp    r8d,DWORD PTR [rbx+0xfd8]
   1400507e9:	sbb    eax,eax
   1400507eb:	and    eax,r8d
   1400507ee:	movzx  ecx,WORD PTR [rbx+rax*2+0x1c60]
   1400507f6:	movsxd rax,ecx
   1400507f9:	mov    r11d,DWORD PTR [rsi+rax*4+0x9ec50]
   140050801:	movzx  edi,BYTE PTR [rax+rsi*1+0x9ed50]
   140050809:	add    r11d,r13d
   14005080c:	test   edi,edi
   14005080e:	je     0x140050a20
   140050814:	cmp    ecx,0x9
   140050817:	jle    0x1400509c3
   14005081d:	cmp    edi,0x4
   140050820:	jbe    0x140050885
   140050822:	movsxd rdx,DWORD PTR [rbx+0x8]
   140050826:	mov    r8,QWORD PTR [rbx+0x18]
   14005082a:	lea    eax,[rdx+0x1]
   14005082d:	movzx  r9d,BYTE PTR [rdx+r8*1]
   140050832:	movsxd rcx,eax
   140050835:	shl    r9d,0x8
   140050839:	movzx  eax,BYTE PTR [rcx+r8*1]
   14005083e:	or     r9d,eax
   140050841:	lea    eax,[rdx+0x2]
   140050844:	movsxd rcx,eax
   140050847:	shl    r9d,0x8
   14005084b:	movzx  eax,BYTE PTR [rcx+r8*1]
   140050850:	mov    ecx,r14d
   140050853:	sub    ecx,DWORD PTR [rbx+0xc]
   140050856:	or     r9d,eax
   140050859:	shr    r9d,cl
   14005085c:	mov    ecx,0x14
   140050861:	sub    ecx,edi
   140050863:	movzx  edx,r9w
   140050867:	shr    edx,cl
   140050869:	mov    ecx,DWORD PTR [rbx+0xc]
   14005086c:	add    ecx,0xfffffffc
   14005086f:	shl    edx,0x4
   140050872:	add    ecx,edi
   140050874:	add    r11d,edx
   140050877:	mov    eax,ecx
   140050879:	shr    eax,0x3
   14005087c:	add    DWORD PTR [rbx+0x8],eax
   14005087f:	and    ecx,0x7
   140050882:	mov    DWORD PTR [rbx+0xc],ecx
   140050885:	mov    eax,DWORD PTR [rbx+0x9a2c]
   14005088b:	test   eax,eax
   14005088d:	jle    0x14005089c
   14005088f:	dec    eax
   140050891:	mov    DWORD PTR [rbx+0x9a2c],eax
   140050897:	jmp    0x1400509af
   14005089c:	movsxd rdi,DWORD PTR [rbx+0x8]
   1400508a0:	mov    rdx,QWORD PTR [rbx+0x18]
   1400508a4:	mov    esi,DWORD PTR [rbx+0xc]
   1400508a7:	lea    eax,[rdi+0x1]
   1400508aa:	movzx  r8d,BYTE PTR [rdi+rdx*1]
   1400508af:	shl    r8d,0x8
   1400508b3:	movsxd rcx,eax
   1400508b6:	movzx  eax,BYTE PTR [rcx+rdx*1]
   1400508ba:	or     r8d,eax
   1400508bd:	lea    eax,[rdi+0x2]
   1400508c0:	shl    r8d,0x8
   1400508c4:	movsxd rcx,eax
   1400508c7:	movzx  eax,BYTE PTR [rcx+rdx*1]
   1400508cb:	mov    ecx,r14d
   1400508ce:	sub    ecx,esi
   1400508d0:	or     r8d,eax
   1400508d3:	shr    r8d,cl
   1400508d6:	mov    ecx,DWORD PTR [rbx+0x1f48]
   1400508dc:	and    r8d,0xfffe
   1400508e3:	cmp    r8d,DWORD PTR [rbx+rcx*4+0x1ec8]
   1400508eb:	jae    0x14005091f
   1400508ed:	mov    eax,0x10
   1400508f2:	sub    eax,ecx
   1400508f4:	mov    cl,al
   1400508f6:	shr    r8d,cl
   1400508f9:	movzx  ecx,BYTE PTR [rbx+r8*1+0x1f4c]
   140050902:	add    ecx,esi
   140050904:	mov    eax,ecx
   140050906:	shr    eax,0x3
   140050909:	add    eax,edi
   14005090b:	and    ecx,0x7
   14005090e:	mov    DWORD PTR [rbx+0x8],eax
   140050911:	mov    DWORD PTR [rbx+0xc],ecx
   140050914:	movzx  eax,WORD PTR [rbx+r8*2+0x234c]
   14005091d:	jmp    0x140050999
   14005091f:	mov    r9d,0xf
   140050925:	inc    ecx
   140050927:	cmp    ecx,r9d
   14005092a:	jae    0x14005094f
   14005092c:	mov    edx,ecx
   14005092e:	add    rdx,0x7b2
   140050935:	lea    rdx,[rbx+rdx*4]
   140050939:	cmp    r8d,DWORD PTR [rdx]
   14005093c:	jb     0x14005094c
   14005093e:	add    ecx,r13d
   140050941:	add    rdx,0x4
   140050945:	cmp    ecx,r9d
   140050948:	jb     0x140050939
   14005094a:	jmp    0x14005094f
   14005094c:	mov    r9d,ecx
   14005094f:	lea    ecx,[r9+rsi*1]
   140050953:	mov    eax,ecx
   140050955:	and    ecx,0x7
   140050958:	shr    eax,0x3
   14005095b:	add    eax,edi
   14005095d:	mov    DWORD PTR [rbx+0xc],ecx
   140050960:	mov    DWORD PTR [rbx+0x8],eax
   140050963:	mov    ecx,0x10
   140050968:	sub    ecx,r9d
   14005096b:	lea    eax,[r9-0x1]
   14005096f:	sub    r8d,DWORD PTR [rbx+rax*4+0x1ec8]
   140050977:	mov    eax,r9d
   14005097a:	shr    r8d,cl
   14005097d:	add    r8d,DWORD PTR [rbx+rax*4+0x1f08]
   140050985:	cmp    r8d,DWORD PTR [rbx+0x1ec4]
   14005098c:	sbb    eax,eax
   14005098e:	and    eax,r8d
   140050991:	movzx  eax,WORD PTR [rbx+rax*2+0x2b4c]
   140050999:	lea    rsi,[rip+0xfffffffffffaf660]        # 0x140000000
   1400509a0:	cmp    eax,0x10
   1400509a3:	jne    0x1400509b8
   1400509a5:	mov    DWORD PTR [rbx+0x9a2c],0xf
   1400509af:	add    r11d,DWORD PTR [rbx+0x9a28]
   1400509b6:	jmp    0x140050a20
   1400509b8:	add    r11d,eax
   1400509bb:	mov    DWORD PTR [rbx+0x9a28],eax
   1400509c1:	jmp    0x140050a20
   1400509c3:	movsxd rdx,DWORD PTR [rbx+0x8]
   1400509c7:	mov    r8,QWORD PTR [rbx+0x18]
   1400509cb:	lea    eax,[rdx+0x1]
   1400509ce:	movzx  r9d,BYTE PTR [rdx+r8*1]
   1400509d3:	movsxd rcx,eax
   1400509d6:	shl    r9d,0x8
   1400509da:	movzx  eax,BYTE PTR [rcx+r8*1]
   1400509df:	or     r9d,eax
   1400509e2:	lea    eax,[rdx+0x2]
   1400509e5:	movsxd rcx,eax
   1400509e8:	shl    r9d,0x8
   1400509ec:	movzx  eax,BYTE PTR [rcx+r8*1]
   1400509f1:	mov    ecx,r14d
   1400509f4:	sub    ecx,DWORD PTR [rbx+0xc]
   1400509f7:	or     r9d,eax
   1400509fa:	shr    r9d,cl
   1400509fd:	mov    ecx,0x10
   140050a02:	sub    ecx,edi
   140050a04:	movzx  edx,r9w
   140050a08:	shr    edx,cl
   140050a0a:	mov    ecx,DWORD PTR [rbx+0xc]
   140050a0d:	add    r11d,edx
   140050a10:	add    ecx,edi
   140050a12:	mov    eax,ecx
   140050a14:	shr    eax,0x3
   140050a17:	add    DWORD PTR [rbx+0x8],eax
   140050a1a:	and    ecx,0x7
   140050a1d:	mov    DWORD PTR [rbx+0xc],ecx
   140050a20:	cmp    r11d,0x2000
   140050a27:	jb     0x140050a38
   140050a29:	add    r10d,r13d
   140050a2c:	cmp    r11d,0x40000
   140050a33:	jb     0x140050a38
   140050a35:	add    r10d,r13d
   140050a38:	mov    eax,DWORD PTR [rbx+0xa8]
   140050a3e:	mov    DWORD PTR [rbx+0xac],eax
   140050a44:	mov    eax,DWORD PTR [rbx+0xa4]
   140050a4a:	mov    DWORD PTR [rbx+0xa8],eax
   140050a50:	mov    eax,DWORD PTR [rbx+0xa0]
   140050a56:	mov    DWORD PTR [rbx+0xa4],eax
   140050a5c:	mov    DWORD PTR [rbx+0xa0],r11d
   140050a63:	mov    r9,QWORD PTR [rbx+0xc0]
   140050a6a:	mov    eax,r11d
   140050a6d:	mov    r8,r9
   140050a70:	sub    r8,rax
   140050a73:	mov    DWORD PTR [rbx+0xb4],r10d
   140050a7a:	mov    rax,QWORD PTR [rbx+0xe960]
   140050a81:	add    rax,0xffffffffffffefff
   140050a87:	cmp    r8,rax
   140050a8a:	jae    0x140050b97
   140050a90:	cmp    r9,rax
   140050a93:	jae    0x140050b97
   140050a99:	mov    rax,QWORD PTR [rbx+0x4b90]
   140050aa0:	lea    rcx,[rax+r8*1]
   140050aa4:	lea    rdx,[rax+r9*1]
   140050aa8:	mov    eax,r10d
   140050aab:	add    rax,r9
   140050aae:	mov    QWORD PTR [rbx+0xc0],rax
   140050ab5:	cmp    r11d,r10d
   140050ab8:	jae    0x140050b05
   140050aba:	cmp    r10d,r14d
   140050abd:	jb     0x140050b26
   140050abf:	mov    r8d,r10d
   140050ac2:	shr    r8,0x3
   140050ac6:	mov    al,BYTE PTR [rcx]
   140050ac8:	add    r10d,0xfffffff8
   140050acc:	mov    BYTE PTR [rdx],al
   140050ace:	mov    al,BYTE PTR [rcx+0x1]
   140050ad1:	mov    BYTE PTR [rdx+0x1],al
   140050ad4:	mov    al,BYTE PTR [rcx+0x2]
   140050ad7:	mov    BYTE PTR [rdx+0x2],al
   140050ada:	mov    al,BYTE PTR [rcx+0x3]
   140050add:	mov    BYTE PTR [rdx+0x3],al
   140050ae0:	mov    al,BYTE PTR [rcx+0x4]
   140050ae3:	mov    BYTE PTR [rdx+0x4],al
   140050ae6:	mov    al,BYTE PTR [rcx+0x5]
   140050ae9:	mov    BYTE PTR [rdx+0x5],al
   140050aec:	mov    al,BYTE PTR [rcx+0x6]
   140050aef:	mov    BYTE PTR [rdx+0x6],al
   140050af2:	mov    al,BYTE PTR [rcx+0x7]
   140050af5:	add    rcx,r14
   140050af8:	mov    BYTE PTR [rdx+0x7],al
   140050afb:	add    rdx,r14
   140050afe:	sub    r8,r13
   140050b01:	jne    0x140050ac6
   140050b03:	jmp    0x140050b26
   140050b05:	cmp    r10d,r14d
   140050b08:	jb     0x140050b26
   140050b0a:	mov    r8d,r10d
   140050b0d:	shr    r8,0x3
   140050b11:	mov    rax,QWORD PTR [rcx]
   140050b14:	add    r10d,0xfffffff8
   140050b18:	mov    QWORD PTR [rdx],rax
   140050b1b:	add    rcx,r14
   140050b1e:	add    rdx,r14
   140050b21:	sub    r8,r13
   140050b24:	jne    0x140050b11
   140050b26:	test   r10d,r10d
   140050b29:	je     0x1400500e3
   140050b2f:	mov    al,BYTE PTR [rcx]
   140050b31:	mov    BYTE PTR [rdx],al
   140050b33:	cmp    r10d,r13d
   140050b36:	jbe    0x1400500e3
   140050b3c:	mov    al,BYTE PTR [rcx+0x1]
   140050b3f:	mov    BYTE PTR [rdx+0x1],al
   140050b42:	cmp    r10d,0x2
   140050b46:	jbe    0x1400500e3
   140050b4c:	mov    al,BYTE PTR [rcx+0x2]
   140050b4f:	mov    BYTE PTR [rdx+0x2],al
   140050b52:	cmp    r10d,0x3
   140050b56:	jbe    0x1400500e3
   140050b5c:	mov    al,BYTE PTR [rcx+0x3]
   140050b5f:	mov    BYTE PTR [rdx+0x3],al
   140050b62:	cmp    r10d,0x4
   140050b66:	jbe    0x1400500e3
   140050b6c:	mov    al,BYTE PTR [rcx+0x4]
   140050b6f:	mov    BYTE PTR [rdx+0x4],al
   140050b72:	cmp    r10d,0x5
   140050b76:	jbe    0x1400500e3
   140050b7c:	cmp    r10d,0x6
   140050b80:	mov    al,BYTE PTR [rcx+0x5]
   140050b83:	mov    BYTE PTR [rdx+0x5],al
   140050b86:	jbe    0x1400500e3
   140050b8c:	mov    al,BYTE PTR [rcx+0x6]
   140050b8f:	mov    BYTE PTR [rdx+0x6],al
   140050b92:	jmp    0x1400500e3
   140050b97:	test   r10d,r10d
   140050b9a:	je     0x1400500e3
   140050ba0:	mov    r9,QWORD PTR [rbx+0xe968]
   140050ba7:	mov    rdx,QWORD PTR [rbx+0x4b90]
   140050bae:	and    r9,r8
   140050bb1:	mov    rcx,QWORD PTR [rbx+0xc0]
   140050bb8:	add    r8,r13
   140050bbb:	mov    al,BYTE PTR [r9+rdx*1]
   140050bbf:	mov    BYTE PTR [rdx+rcx*1],al
   140050bc2:	mov    rax,QWORD PTR [rbx+0xc0]
   140050bc9:	mov    r9,QWORD PTR [rbx+0xe968]
   140050bd0:	add    rax,r13
   140050bd3:	and    rax,r9
   140050bd6:	mov    QWORD PTR [rbx+0xc0],rax
   140050bdd:	add    r10d,0xffffffff
   140050be1:	jne    0x140050ba7
   140050be3:	jmp    0x1400500e3
   140050be8:	cmp    r8d,0x100
   140050bef:	jne    0x140050bfb
   140050bf1:	mov    rcx,rbx
   140050bf4:	call   0x14004cae8
   140050bf9:	jmp    0x140050c0c
   140050bfb:	cmp    r8d,0x101
   140050c02:	jne    0x140050c19
   140050c04:	mov    rcx,rbx
   140050c07:	call   0x14004dd28
   140050c0c:	test   al,al
   140050c0e:	je     0x14005120c
   140050c14:	jmp    0x1400500e3
   140050c19:	cmp    r8d,0x102
   140050c20:	jne    0x140050da6
   140050c26:	mov    r8d,DWORD PTR [rbx+0xb4]
   140050c2d:	test   r8d,r8d
   140050c30:	je     0x1400500e3
   140050c36:	mov    r10,QWORD PTR [rbx+0xc0]
   140050c3d:	mov    r11d,DWORD PTR [rbx+0xa0]
   140050c44:	mov    r9,r10
   140050c47:	mov    rax,QWORD PTR [rbx+0xe960]
   140050c4e:	sub    r9,r11
   140050c51:	add    rax,0xffffffffffffefff
   140050c57:	cmp    r9,rax
   140050c5a:	jae    0x140050d53
   140050c60:	cmp    r10,rax
   140050c63:	jae    0x140050d53
   140050c69:	mov    rax,QWORD PTR [rbx+0x4b90]
   140050c70:	lea    rcx,[r9+rax*1]
   140050c74:	lea    rdx,[rax+r10*1]
   140050c78:	lea    rax,[r10+r8*1]
   140050c7c:	mov    QWORD PTR [rbx+0xc0],rax
   140050c83:	cmp    r11d,r8d
   140050c86:	jae    0x140050cd3
   140050c88:	cmp    r8d,r14d
   140050c8b:	jb     0x140050cf4
   140050c8d:	mov    r9d,r8d
   140050c90:	shr    r9,0x3
   140050c94:	mov    al,BYTE PTR [rcx]
   140050c96:	add    r8d,0xfffffff8
   140050c9a:	mov    BYTE PTR [rdx],al
   140050c9c:	mov    al,BYTE PTR [rcx+0x1]
   140050c9f:	mov    BYTE PTR [rdx+0x1],al
   140050ca2:	mov    al,BYTE PTR [rcx+0x2]
   140050ca5:	mov    BYTE PTR [rdx+0x2],al
   140050ca8:	mov    al,BYTE PTR [rcx+0x3]
   140050cab:	mov    BYTE PTR [rdx+0x3],al
   140050cae:	mov    al,BYTE PTR [rcx+0x4]
   140050cb1:	mov    BYTE PTR [rdx+0x4],al
   140050cb4:	mov    al,BYTE PTR [rcx+0x5]
   140050cb7:	mov    BYTE PTR [rdx+0x5],al
   140050cba:	mov    al,BYTE PTR [rcx+0x6]
   140050cbd:	mov    BYTE PTR [rdx+0x6],al
   140050cc0:	mov    al,BYTE PTR [rcx+0x7]
   140050cc3:	add    rcx,r14
   140050cc6:	mov    BYTE PTR [rdx+0x7],al
   140050cc9:	add    rdx,r14
   140050ccc:	sub    r9,r13
   140050ccf:	jne    0x140050c94
   140050cd1:	jmp    0x140050cf4
   140050cd3:	cmp    r8d,r14d
   140050cd6:	jb     0x140050cf4
   140050cd8:	mov    r9,r8
   140050cdb:	shr    r9,0x3
   140050cdf:	mov    rax,QWORD PTR [rcx]
   140050ce2:	add    r8d,0xfffffff8
   140050ce6:	mov    QWORD PTR [rdx],rax
   140050ce9:	add    rcx,r14
   140050cec:	add    rdx,r14
   140050cef:	sub    r9,r13
   140050cf2:	jne    0x140050cdf
   140050cf4:	test   r8d,r8d
   140050cf7:	je     0x1400500e3
   140050cfd:	mov    al,BYTE PTR [rcx]
   140050cff:	mov    BYTE PTR [rdx],al
   140050d01:	cmp    r8d,r13d
   140050d04:	jbe    0x1400500e3
   140050d0a:	mov    al,BYTE PTR [rcx+0x1]
   140050d0d:	mov    BYTE PTR [rdx+0x1],al
   140050d10:	cmp    r8d,0x2
   140050d14:	jbe    0x1400500e3
   140050d1a:	mov    al,BYTE PTR [rcx+0x2]
   140050d1d:	mov    BYTE PTR [rdx+0x2],al
   140050d20:	cmp    r8d,0x3
   140050d24:	jbe    0x1400500e3
   140050d2a:	mov    al,BYTE PTR [rcx+0x3]
   140050d2d:	mov    BYTE PTR [rdx+0x3],al
   140050d30:	cmp    r8d,0x4
   140050d34:	jbe    0x1400500e3
   140050d3a:	mov    al,BYTE PTR [rcx+0x4]
   140050d3d:	mov    BYTE PTR [rdx+0x4],al
   140050d40:	cmp    r8d,0x5
   140050d44:	jbe    0x1400500e3
   140050d4a:	cmp    r8d,0x6
   140050d4e:	jmp    0x140050b80
   140050d53:	test   r8d,r8d
   140050d56:	je     0x1400500e3
   140050d5c:	mov    rcx,QWORD PTR [rbx+0xe968]
   140050d63:	mov    rdx,QWORD PTR [rbx+0x4b90]
   140050d6a:	mov    rax,r9
   140050d6d:	and    rax,rcx
   140050d70:	add    r9,r13
   140050d73:	mov    rcx,QWORD PTR [rbx+0xc0]
   140050d7a:	mov    al,BYTE PTR [rax+rdx*1]
   140050d7d:	mov    BYTE PTR [rdx+rcx*1],al
   140050d80:	mov    rax,QWORD PTR [rbx+0xc0]
   140050d87:	mov    rcx,QWORD PTR [rbx+0xe968]
   140050d8e:	add    rax,r13
   140050d91:	and    rax,rcx
   140050d94:	mov    QWORD PTR [rbx+0xc0],rax
   140050d9b:	add    r8d,0xffffffff
   140050d9f:	jne    0x140050d63
   140050da1:	jmp    0x1400500e3
   140050da6:	cmp    r8d,0x107
   140050dad:	jge    0x140051088
   140050db3:	lea    eax,[r8-0x103]
   140050dba:	movsxd rdx,eax
   140050dbd:	lea    rcx,[rbx+0xa0]
   140050dc4:	lea    rcx,[rcx+rdx*4]
   140050dc8:	mov    edi,DWORD PTR [rcx]
   140050dca:	test   eax,eax
   140050dcc:	jle    0x140050ddf
   140050dce:	mov    eax,DWORD PTR [rcx-0x4]
   140050dd1:	sub    rdx,r13
   140050dd4:	mov    DWORD PTR [rcx],eax
   140050dd6:	lea    rcx,[rcx-0x4]
   140050dda:	test   rdx,rdx
   140050ddd:	jg     0x140050dce
   140050ddf:	mov    DWORD PTR [rbx+0xa0],edi
   140050de5:	movsxd r10,DWORD PTR [rbx+0x8]
   140050de9:	mov    rdx,QWORD PTR [rbx+0x18]
   140050ded:	mov    r11d,DWORD PTR [rbx+0xc]
   140050df1:	lea    eax,[r10+0x1]
   140050df5:	movzx  r8d,BYTE PTR [r10+rdx*1]
   140050dfa:	shl    r8d,0x8
   140050dfe:	movsxd rcx,eax
   140050e01:	movzx  eax,BYTE PTR [rcx+rdx*1]
   140050e05:	or     r8d,eax
   140050e08:	lea    eax,[r10+0x2]
   140050e0c:	shl    r8d,0x8
   140050e10:	movsxd rcx,eax
   140050e13:	movzx  eax,BYTE PTR [rcx+rdx*1]
   140050e17:	mov    ecx,r14d
   140050e1a:	sub    ecx,r11d
   140050e1d:	or     r8d,eax
   140050e20:	shr    r8d,cl
   140050e23:	mov    ecx,DWORD PTR [rbx+0x2e34]
   140050e29:	and    r8d,0xfffe
   140050e30:	cmp    r8d,DWORD PTR [rbx+rcx*4+0x2db4]
   140050e38:	jae    0x140050e6e
   140050e3a:	mov    eax,0x10
   140050e3f:	sub    eax,ecx
   140050e41:	mov    cl,al
   140050e43:	shr    r8d,cl
   140050e46:	movzx  ecx,BYTE PTR [rbx+r8*1+0x2e38]
   140050e4f:	add    ecx,r11d
   140050e52:	mov    eax,ecx
   140050e54:	shr    eax,0x3
   140050e57:	add    eax,r10d
   140050e5a:	and    ecx,0x7
   140050e5d:	mov    DWORD PTR [rbx+0x8],eax
   140050e60:	mov    DWORD PTR [rbx+0xc],ecx
   140050e63:	movzx  eax,WORD PTR [rbx+r8*2+0x3238]
   140050e6c:	jmp    0x140050ee9
   140050e6e:	mov    r9d,0xf
   140050e74:	inc    ecx
   140050e76:	cmp    ecx,r9d
   140050e79:	jae    0x140050e9e
   140050e7b:	mov    edx,ecx
   140050e7d:	add    rdx,0xb6d
   140050e84:	lea    rdx,[rbx+rdx*4]
   140050e88:	cmp    r8d,DWORD PTR [rdx]
   140050e8b:	jb     0x140050e9b
   140050e8d:	add    ecx,r13d
   140050e90:	add    rdx,0x4
   140050e94:	cmp    ecx,r9d
   140050e97:	jb     0x140050e88
   140050e99:	jmp    0x140050e9e
   140050e9b:	mov    r9d,ecx
   140050e9e:	lea    ecx,[r9+r11*1]
   140050ea2:	mov    eax,ecx
   140050ea4:	and    ecx,0x7
   140050ea7:	shr    eax,0x3
   140050eaa:	add    eax,r10d
   140050ead:	mov    DWORD PTR [rbx+0xc],ecx
   140050eb0:	mov    DWORD PTR [rbx+0x8],eax
   140050eb3:	mov    ecx,0x10
   140050eb8:	sub    ecx,r9d
   140050ebb:	lea    eax,[r9-0x1]
   140050ebf:	sub    r8d,DWORD PTR [rbx+rax*4+0x2db4]
   140050ec7:	mov    eax,r9d
   140050eca:	shr    r8d,cl
   140050ecd:	add    r8d,DWORD PTR [rbx+rax*4+0x2df4]
   140050ed5:	cmp    r8d,DWORD PTR [rbx+0x2db0]
   140050edc:	sbb    eax,eax
   140050ede:	and    eax,r8d
   140050ee1:	movzx  eax,WORD PTR [rbx+rax*2+0x3a38]
   140050ee9:	cdqe   
   140050eeb:	movzx  r10d,BYTE PTR [rax+rsi*1+0x81e40]
   140050ef4:	movzx  r11d,BYTE PTR [rax+rsi*1+0x81e60]
   140050efd:	add    r10d,0x2
   140050f01:	test   r11d,r11d
   140050f04:	je     0x140050f65
   140050f06:	movsxd rdx,DWORD PTR [rbx+0x8]
   140050f0a:	mov    r8,QWORD PTR [rbx+0x18]
   140050f0e:	lea    eax,[rdx+0x1]
   140050f11:	movzx  r9d,BYTE PTR [rdx+r8*1]
   140050f16:	movsxd rcx,eax
   140050f19:	shl    r9d,0x8
   140050f1d:	movzx  eax,BYTE PTR [rcx+r8*1]
   140050f22:	or     r9d,eax
   140050f25:	lea    eax,[rdx+0x2]
   140050f28:	movsxd rcx,eax
   140050f2b:	shl    r9d,0x8
   140050f2f:	movzx  eax,BYTE PTR [rcx+r8*1]
   140050f34:	mov    ecx,r14d
   140050f37:	sub    ecx,DWORD PTR [rbx+0xc]
   140050f3a:	or     r9d,eax
   140050f3d:	shr    r9d,cl
   140050f40:	mov    ecx,0x10
   140050f45:	sub    ecx,r11d
   140050f48:	movzx  edx,r9w
   140050f4c:	shr    edx,cl
   140050f4e:	mov    ecx,DWORD PTR [rbx+0xc]
   140050f51:	add    r10d,edx
   140050f54:	add    ecx,r11d
   140050f57:	mov    eax,ecx
   140050f59:	shr    eax,0x3
   140050f5c:	add    DWORD PTR [rbx+0x8],eax
   140050f5f:	and    ecx,0x7
   140050f62:	mov    DWORD PTR [rbx+0xc],ecx
   140050f65:	mov    r9,QWORD PTR [rbx+0xc0]
   140050f6c:	mov    rax,QWORD PTR [rbx+0xe960]
   140050f73:	mov    r8,r9
   140050f76:	sub    r8,rdi
   140050f79:	mov    DWORD PTR [rbx+0xb4],r10d
   140050f80:	add    rax,0xffffffffffffefff
   140050f86:	cmp    r8,rax
   140050f89:	jae    0x140051035
   140050f8f:	cmp    r9,rax
   140050f92:	jae    0x140051035
   140050f98:	mov    rax,QWORD PTR [rbx+0x4b90]
   140050f9f:	lea    rcx,[r8+rax*1]
   140050fa3:	lea    rdx,[rax+r9*1]
   140050fa7:	mov    eax,r10d
   140050faa:	add    rax,r9
   140050fad:	mov    QWORD PTR [rbx+0xc0],rax
   140050fb4:	cmp    edi,r10d
   140050fb7:	jae    0x14005100b
   140050fb9:	cmp    r10d,r14d
   140050fbc:	jb     0x140050b26
   140050fc2:	mov    r8d,r10d
   140050fc5:	shr    r8,0x3
   140050fc9:	mov    al,BYTE PTR [rcx]
   140050fcb:	add    r10d,0xfffffff8
   140050fcf:	mov    BYTE PTR [rdx],al
   140050fd1:	mov    al,BYTE PTR [rcx+0x1]
   140050fd4:	mov    BYTE PTR [rdx+0x1],al
   140050fd7:	mov    al,BYTE PTR [rcx+0x2]
   140050fda:	mov    BYTE PTR [rdx+0x2],al
   140050fdd:	mov    al,BYTE PTR [rcx+0x3]
   140050fe0:	mov    BYTE PTR [rdx+0x3],al
   140050fe3:	mov    al,BYTE PTR [rcx+0x4]
   140050fe6:	mov    BYTE PTR [rdx+0x4],al
   140050fe9:	mov    al,BYTE PTR [rcx+0x5]
   140050fec:	mov    BYTE PTR [rdx+0x5],al
   140050fef:	mov    al,BYTE PTR [rcx+0x6]
   140050ff2:	mov    BYTE PTR [rdx+0x6],al
   140050ff5:	mov    al,BYTE PTR [rcx+0x7]
   140050ff8:	add    rcx,r14
   140050ffb:	mov    BYTE PTR [rdx+0x7],al
   140050ffe:	add    rdx,r14
   140051001:	sub    r8,r13
   140051004:	jne    0x140050fc9
   140051006:	jmp    0x140050b26
   14005100b:	cmp    r10d,r14d
   14005100e:	jb     0x140050b26
   140051014:	mov    r8d,r10d
   140051017:	shr    r8,0x3
   14005101b:	mov    rax,QWORD PTR [rcx]
   14005101e:	add    r10d,0xfffffff8
   140051022:	mov    QWORD PTR [rdx],rax
   140051025:	add    rcx,r14
   140051028:	add    rdx,r14
   14005102b:	sub    r8,r13
   14005102e:	jne    0x14005101b
   140051030:	jmp    0x140050b26
   140051035:	test   r10d,r10d
   140051038:	je     0x1400500e3
   14005103e:	mov    rcx,QWORD PTR [rbx+0xe968]
   140051045:	mov    rdx,QWORD PTR [rbx+0x4b90]
   14005104c:	mov    rax,r8
   14005104f:	and    rax,rcx
   140051052:	add    r8,r13
   140051055:	mov    rcx,QWORD PTR [rbx+0xc0]
   14005105c:	mov    al,BYTE PTR [rax+rdx*1]
   14005105f:	mov    BYTE PTR [rdx+rcx*1],al
   140051062:	mov    rax,QWORD PTR [rbx+0xc0]
   140051069:	mov    rcx,QWORD PTR [rbx+0xe968]
   140051070:	add    rax,r13
   140051073:	and    rax,rcx
   140051076:	mov    QWORD PTR [rbx+0xc0],rax
   14005107d:	add    r10d,0xffffffff
   140051081:	jne    0x140051045
   140051083:	jmp    0x1400500e3
   140051088:	cmp    r8d,0x110
   14005108f:	jge    0x1400500e3
   140051095:	lea    eax,[r8-0x107]
   14005109c:	movsxd rcx,eax
   14005109f:	movzx  r10d,BYTE PTR [rcx+rsi*1+0x81ed0]
   1400510a8:	movzx  r11d,BYTE PTR [rcx+rsi*1+0x81ed8]
   1400510b1:	add    r10d,r13d
   1400510b4:	test   r11d,r11d
   1400510b7:	je     0x140051118
   1400510b9:	movsxd rdx,DWORD PTR [rbx+0x8]
   1400510bd:	mov    r8,QWORD PTR [rbx+0x18]
   1400510c1:	lea    eax,[rdx+0x1]
   1400510c4:	movzx  r9d,BYTE PTR [rdx+r8*1]
   1400510c9:	movsxd rcx,eax
   1400510cc:	shl    r9d,0x8
   1400510d0:	movzx  eax,BYTE PTR [rcx+r8*1]
   1400510d5:	or     r9d,eax
   1400510d8:	lea    eax,[rdx+0x2]
   1400510db:	movsxd rcx,eax
   1400510de:	shl    r9d,0x8
   1400510e2:	movzx  eax,BYTE PTR [rcx+r8*1]
   1400510e7:	mov    ecx,r14d
   1400510ea:	sub    ecx,DWORD PTR [rbx+0xc]
   1400510ed:	or     r9d,eax
   1400510f0:	shr    r9d,cl
   1400510f3:	mov    ecx,0x10
   1400510f8:	sub    ecx,r11d
   1400510fb:	movzx  edx,r9w
   1400510ff:	shr    edx,cl
   140051101:	mov    ecx,DWORD PTR [rbx+0xc]
   140051104:	add    r10d,edx
   140051107:	add    ecx,r11d
   14005110a:	mov    eax,ecx
   14005110c:	shr    eax,0x3
   14005110f:	add    DWORD PTR [rbx+0x8],eax
   140051112:	and    ecx,0x7
   140051115:	mov    DWORD PTR [rbx+0xc],ecx
   140051118:	mov    eax,DWORD PTR [rbx+0xa8]
   14005111e:	mov    r9d,0x2
   140051124:	mov    DWORD PTR [rbx+0xac],eax
   14005112a:	mov    eax,DWORD PTR [rbx+0xa4]
   140051130:	mov    DWORD PTR [rbx+0xa8],eax
   140051136:	mov    eax,DWORD PTR [rbx+0xa0]
   14005113c:	mov    DWORD PTR [rbx+0xa4],eax
   140051142:	mov    DWORD PTR [rbx+0xa0],r10d
   140051149:	mov    rdx,QWORD PTR [rbx+0xc0]
   140051150:	mov    eax,r10d
   140051153:	mov    r8,rdx
   140051156:	sub    r8,rax
   140051159:	mov    DWORD PTR [rbx+0xb4],0x2
   140051163:	mov    rax,QWORD PTR [rbx+0xe960]
   14005116a:	add    rax,0xffffffffffffefff
   140051170:	cmp    r8,rax
   140051173:	jae    0x1400511a1
   140051175:	cmp    rdx,rax
   140051178:	jae    0x1400511a1
   14005117a:	mov    rcx,QWORD PTR [rbx+0x4b90]
   140051181:	lea    rax,[rdx+0x2]
   140051185:	mov    QWORD PTR [rbx+0xc0],rax
   14005118c:	mov    al,BYTE PTR [r8+rcx*1]
   140051190:	mov    BYTE PTR [rcx+rdx*1],al
   140051193:	mov    al,BYTE PTR [r8+rcx*1+0x1]
   140051198:	mov    BYTE PTR [rcx+rdx*1+0x1],al
   14005119c:	jmp    0x1400500e3
   1400511a1:	mov    rcx,QWORD PTR [rbx+0xe968]
   1400511a8:	mov    rdx,QWORD PTR [rbx+0x4b90]
   1400511af:	mov    rax,r8
   1400511b2:	and    rax,rcx
   1400511b5:	add    r8,r13
   1400511b8:	mov    rcx,QWORD PTR [rbx+0xc0]
   1400511bf:	mov    al,BYTE PTR [rax+rdx*1]
   1400511c2:	mov    BYTE PTR [rdx+rcx*1],al
   1400511c5:	mov    rax,QWORD PTR [rbx+0xc0]
   1400511cc:	mov    rcx,QWORD PTR [rbx+0xe968]
   1400511d3:	add    rax,r13
   1400511d6:	and    rax,rcx
   1400511d9:	mov    QWORD PTR [rbx+0xc0],rax
   1400511e0:	add    r9d,0xffffffff
   1400511e4:	jne    0x1400511a8
   1400511e6:	jmp    0x1400500e3
   1400511eb:	mov    BYTE PTR [rbx+0x4db8],r12b
   1400511f2:	jmp    0x140051214
   1400511f4:	mov    rcx,rsi
   1400511f7:	jmp    0x140051200
   1400511f9:	lea    rcx,[rbx+0x9a30]
   140051200:	call   0x140049f14
   140051205:	mov    DWORD PTR [rbx+0xe890],r12d
   14005120c:	mov    rcx,rbx
   14005120f:	call   0x14004ed98
   140051214:	mov    rbx,QWORD PTR [rsp+0x58]
   140051219:	mov    rbp,QWORD PTR [rsp+0x60]
   14005121e:	mov    rsi,QWORD PTR [rsp+0x68]
   140051223:	add    rsp,0x20
   140051227:	pop    r15
   140051229:	pop    r14
   14005122b:	pop    r13
   14005122d:	pop    r12
   14005122f:	pop    rdi
   140051230:	ret    
   140051231:	int3   
   140051232:	int3   
   140051233:	int3   
   140051234:	mov    rax,rsp
   140051237:	mov    QWORD PTR [rax+0x8],rbx
   14005123b:	mov    QWORD PTR [rax+0x10],rbp
   14005123f:	mov    QWORD PTR [rax+0x18],rsi
   140051243:	mov    QWORD PTR [rax+0x20],rdi
   140051247:	push   r12
   140051249:	push   r13
   14005124b:	push   r14
   14005124d:	sub    rsp,0x40
   140051251:	cmp    BYTE PTR [rcx+0x4da8],0x0
   140051258:	mov    r12d,0x1
   14005125e:	mov    BYTE PTR [rcx+0x4db8],r12b
   140051265:	mov    rbx,rcx
   140051268:	jne    0x1400512bb
   14005126a:	call   0x14004e9c8
   14005126f:	mov    rcx,rbx
   140051272:	call   0x14004eb48
   140051277:	test   al,al
   140051279:	je     0x140051aef
   14005127f:	lea    rdi,[rbx+0xd8]
   140051286:	mov    rcx,rbx
   140051289:	mov    r8,rdi
   14005128c:	lea    rdx,[rbx+0x8]
   140051290:	call   0x14004c984
   140051295:	test   al,al
   140051297:	je     0x140051aef
   14005129d:	lea    r9,[rbx+0xec]
   1400512a4:	mov    r8,rdi
   1400512a7:	lea    rdx,[rbx+0x8]
   1400512ab:	mov    rcx,rbx
   1400512ae:	call   0x14004d958
   1400512b3:	test   al,al
   1400512b5:	je     0x140051aef
   1400512bb:	lea    rsi,[rbx+0xc0]
   1400512c2:	mov    r13d,0x8
   1400512c8:	lea    rdi,[rbx+0x8]
   1400512cc:	mov    rax,QWORD PTR [rbx+0xe968]
   1400512d3:	and    QWORD PTR [rsi],rax
   1400512d6:	mov    eax,DWORD PTR [rbx+0xd4]
   1400512dc:	cmp    DWORD PTR [rdi],eax
   1400512de:	jl     0x140051355
   1400512e0:	lea    r14,[rbx+0xd8]
   1400512e7:	mov    edx,DWORD PTR [rbx+0xe0]
   1400512ed:	dec    edx
   1400512ef:	add    edx,DWORD PTR [r14]
   1400512f2:	cmp    DWORD PTR [rdi],edx
   1400512f4:	jg     0x140051303
   1400512f6:	jne    0x140051345
   1400512f8:	mov    eax,DWORD PTR [rbx+0xdc]
   1400512fe:	cmp    DWORD PTR [rbx+0xc],eax
   140051301:	jl     0x140051345
   140051303:	cmp    BYTE PTR [rbx+0xe8],0x0
   14005130a:	jne    0x140051ae7
   140051310:	mov    r8,r14
   140051313:	mov    rdx,rdi
   140051316:	mov    rcx,rbx
   140051319:	call   0x14004c984
   14005131e:	test   al,al
   140051320:	je     0x140051aef
   140051326:	lea    r9,[rbx+0xec]
   14005132d:	mov    r8,r14
   140051330:	mov    rdx,rdi
   140051333:	mov    rcx,rbx
   140051336:	call   0x14004d958
   14005133b:	test   al,al
   14005133d:	je     0x140051aef
   140051343:	jmp    0x1400512e7
   140051345:	mov    rcx,rbx
   140051348:	call   0x14004eb48
   14005134d:	test   al,al
   14005134f:	je     0x140051ae7
   140051355:	mov    rcx,QWORD PTR [rbx+0x4b88]
   14005135c:	mov    rax,rcx
   14005135f:	sub    rax,QWORD PTR [rsi]
   140051362:	and    rax,QWORD PTR [rbx+0xe968]
   140051369:	cmp    rax,0x1004
   14005136f:	jae    0x14005139f
   140051371:	cmp    rcx,QWORD PTR [rsi]
   140051374:	je     0x14005139f
   140051376:	mov    rcx,rbx
   140051379:	call   0x14004f1dc
   14005137e:	mov    rax,QWORD PTR [rbx+0x4da0]
   140051385:	cmp    QWORD PTR [rbx+0x4db0],rax
   14005138c:	jg     0x140051aef
   140051392:	cmp    BYTE PTR [rbx+0x4da8],0x0
   140051399:	jne    0x140051f75
   14005139f:	movsxd r10,DWORD PTR [rdi]
   1400513a2:	mov    rdx,QWORD PTR [rdi+0x10]
   1400513a6:	mov    r11d,DWORD PTR [rdi+0x4]
   1400513aa:	lea    eax,[r10+0x1]
   1400513ae:	movzx  r8d,BYTE PTR [r10+rdx*1]
   1400513b3:	shl    r8d,0x8
   1400513b7:	movsxd rcx,eax
   1400513ba:	movzx  eax,BYTE PTR [rcx+rdx*1]
   1400513be:	or     r8d,eax
   1400513c1:	lea    eax,[r10+0x2]
   1400513c5:	shl    r8d,0x8
   1400513c9:	movsxd rcx,eax
   1400513cc:	movzx  eax,BYTE PTR [rcx+rdx*1]
   1400513d0:	mov    ecx,r13d
   1400513d3:	sub    ecx,r11d
   1400513d6:	or     r8d,eax
   1400513d9:	shr    r8d,cl
   1400513dc:	mov    ecx,DWORD PTR [rbx+0x170]
   1400513e2:	and    r8d,0xfffe
   1400513e9:	cmp    r8d,DWORD PTR [rbx+rcx*4+0xf0]
   1400513f1:	jae    0x140051426
   1400513f3:	mov    eax,0x10
   1400513f8:	sub    eax,ecx
   1400513fa:	mov    cl,al
   1400513fc:	shr    r8d,cl
   1400513ff:	movzx  ecx,BYTE PTR [r8+rbx*1+0x174]
   140051408:	add    ecx,r11d
   14005140b:	mov    eax,ecx
   14005140d:	shr    eax,0x3
   140051410:	add    eax,r10d
   140051413:	and    ecx,0x7
   140051416:	mov    DWORD PTR [rdi],eax
   140051418:	mov    DWORD PTR [rdi+0x4],ecx
   14005141b:	movzx  ebp,WORD PTR [rbx+r8*2+0x574]
   140051424:	jmp    0x140051497
   140051426:	mov    edx,0xf
   14005142b:	inc    ecx
   14005142d:	cmp    ecx,edx
   14005142f:	jae    0x140051450
   140051431:	mov    r9d,ecx
   140051434:	add    r9,0x3c
   140051438:	lea    r9,[rbx+r9*4]
   14005143c:	cmp    r8d,DWORD PTR [r9]
   14005143f:	jb     0x14005144e
   140051441:	add    ecx,r12d
   140051444:	add    r9,0x4
   140051448:	cmp    ecx,edx
   14005144a:	jb     0x14005143c
   14005144c:	jmp    0x140051450
   14005144e:	mov    edx,ecx
   140051450:	lea    ecx,[r11+rdx*1]
   140051454:	mov    eax,ecx
   140051456:	and    ecx,0x7
   140051459:	shr    eax,0x3
   14005145c:	add    eax,r10d
   14005145f:	mov    DWORD PTR [rdi+0x4],ecx
   140051462:	mov    DWORD PTR [rdi],eax
   140051464:	mov    ecx,0x10
   140051469:	sub    ecx,edx
   14005146b:	lea    eax,[rdx-0x1]
   14005146e:	sub    r8d,DWORD PTR [rbx+rax*4+0xf0]
   140051476:	mov    eax,edx
   140051478:	shr    r8d,cl
   14005147b:	add    r8d,DWORD PTR [rbx+rax*4+0x130]
   140051483:	cmp    r8d,DWORD PTR [rbx+0xec]
   14005148a:	sbb    eax,eax
   14005148c:	and    eax,r8d
   14005148f:	movzx  ebp,WORD PTR [rbx+rax*2+0xd74]
   140051497:	cmp    ebp,0x100
   14005149d:	jae    0x1400514dc
   14005149f:	cmp    BYTE PTR [rbx+0x4d98],0x0
   1400514a6:	je     0x1400514c6
   1400514a8:	mov    rdx,QWORD PTR [rsi]
   1400514ab:	lea    rcx,[rbx+0x4b98]
   1400514b2:	lea    rax,[rdx+0x1]
   1400514b6:	mov    QWORD PTR [rsi],rax
   1400514b9:	call   0x14004935c
   1400514be:	mov    BYTE PTR [rax],bpl
   1400514c1:	jmp    0x1400512cc
   1400514c6:	mov    rax,QWORD PTR [rsi]
   1400514c9:	mov    rcx,QWORD PTR [rbx+0x4b90]
   1400514d0:	mov    BYTE PTR [rcx+rax*1],bpl
   1400514d4:	add    QWORD PTR [rsi],r12
   1400514d7:	jmp    0x1400512cc
   1400514dc:	cmp    ebp,0x106
   1400514e2:	jb     0x140051ab6
   1400514e8:	lea    r11d,[rbp-0x106]
   1400514ef:	cmp    r11d,r13d
   1400514f2:	jae    0x1400514fd
   1400514f4:	add    r11d,0x2
   1400514f8:	jmp    0x140051580
   1400514fd:	mov    r14d,r11d
   140051500:	and    r11d,0x3
   140051504:	or     r11d,0x4
   140051508:	shr    r14d,0x2
   14005150c:	sub    r14d,r12d
   14005150f:	mov    ecx,r14d
   140051512:	shl    r11d,cl
   140051515:	add    r11d,0x2
   140051519:	test   r14d,r14d
   14005151c:	je     0x140051580
   14005151e:	movsxd r10,DWORD PTR [rdi]
   140051521:	mov    rdx,QWORD PTR [rdi+0x10]
   140051525:	mov    r9d,DWORD PTR [rdi+0x4]
   140051529:	lea    eax,[r10+0x1]
   14005152d:	movzx  r8d,BYTE PTR [r10+rdx*1]
   140051532:	movsxd rcx,eax
   140051535:	shl    r8d,0x8
   140051539:	movzx  eax,BYTE PTR [rcx+rdx*1]
   14005153d:	or     r8d,eax
   140051540:	lea    eax,[r10+0x2]
   140051544:	movsxd rcx,eax
   140051547:	shl    r8d,0x8
   14005154b:	movzx  eax,BYTE PTR [rcx+rdx*1]
   14005154f:	mov    ecx,r13d
   140051552:	sub    ecx,r9d
   140051555:	or     r8d,eax
   140051558:	shr    r8d,cl
   14005155b:	mov    ecx,0x10
   140051560:	sub    ecx,r14d
   140051563:	movzx  edx,r8w
   140051567:	shr    edx,cl
   140051569:	lea    ecx,[r14+r9*1]
   14005156d:	mov    eax,ecx
   14005156f:	add    r11d,edx
   140051572:	shr    eax,0x3
   140051575:	add    eax,r10d
   140051578:	and    ecx,0x7
   14005157b:	mov    DWORD PTR [rdi],eax
   14005157d:	mov    DWORD PTR [rdi+0x4],ecx
   140051580:	movsxd r10,DWORD PTR [rdi]
   140051583:	mov    rdx,QWORD PTR [rdi+0x10]
   140051587:	mov    ebp,DWORD PTR [rdi+0x4]
   14005158a:	lea    eax,[r10+0x1]
   14005158e:	movzx  r8d,BYTE PTR [r10+rdx*1]
   140051593:	shl    r8d,0x8
   140051597:	movsxd rcx,eax
   14005159a:	movzx  eax,BYTE PTR [rcx+rdx*1]
   14005159e:	or     r8d,eax
   1400515a1:	lea    eax,[r10+0x2]
   1400515a5:	shl    r8d,0x8
   1400515a9:	movsxd rcx,eax
   1400515ac:	movzx  eax,BYTE PTR [rcx+rdx*1]
   1400515b0:	mov    ecx,r13d
   1400515b3:	sub    ecx,ebp
   1400515b5:	or     r8d,eax
   1400515b8:	shr    r8d,cl
   1400515bb:	mov    ecx,DWORD PTR [rbx+0x105c]
   1400515c1:	and    r8d,0xfffe
   1400515c8:	cmp    r8d,DWORD PTR [rbx+rcx*4+0xfdc]
   1400515d0:	jae    0x140051604
   1400515d2:	mov    eax,0x10
   1400515d7:	sub    eax,ecx
   1400515d9:	mov    cl,al
   1400515db:	shr    r8d,cl
   1400515de:	movzx  ecx,BYTE PTR [rbx+r8*1+0x1060]
   1400515e7:	add    ecx,ebp
   1400515e9:	mov    eax,ecx
   1400515eb:	shr    eax,0x3
   1400515ee:	add    eax,r10d
   1400515f1:	and    ecx,0x7
   1400515f4:	mov    DWORD PTR [rdi],eax
   1400515f6:	mov    DWORD PTR [rdi+0x4],ecx
   1400515f9:	movzx  r10d,WORD PTR [rbx+r8*2+0x1460]
   140051602:	jmp    0x14005167f
   140051604:	mov    r9d,0xf
   14005160a:	inc    ecx
   14005160c:	cmp    ecx,r9d
   14005160f:	jae    0x140051634
   140051611:	mov    edx,ecx
   140051613:	add    rdx,0x3f7
   14005161a:	lea    rdx,[rbx+rdx*4]
   14005161e:	cmp    r8d,DWORD PTR [rdx]
   140051621:	jb     0x140051631
   140051623:	add    ecx,r12d
   140051626:	add    rdx,0x4
   14005162a:	cmp    ecx,r9d
   14005162d:	jb     0x14005161e
   14005162f:	jmp    0x140051634
   140051631:	mov    r9d,ecx
   140051634:	lea    ecx,[r9+rbp*1]
   140051638:	mov    eax,ecx
   14005163a:	and    ecx,0x7
   14005163d:	shr    eax,0x3
   140051640:	add    eax,r10d
   140051643:	mov    DWORD PTR [rdi+0x4],ecx
   140051646:	mov    DWORD PTR [rdi],eax
   140051648:	mov    ecx,0x10
   14005164d:	sub    ecx,r9d
   140051650:	lea    eax,[r9-0x1]
   140051654:	sub    r8d,DWORD PTR [rbx+rax*4+0xfdc]
   14005165c:	mov    eax,r9d
   14005165f:	shr    r8d,cl
   140051662:	add    r8d,DWORD PTR [rbx+rax*4+0x101c]
   14005166a:	cmp    r8d,DWORD PTR [rbx+0xfd8]
   140051671:	sbb    eax,eax
   140051673:	and    eax,r8d
   140051676:	movzx  r10d,WORD PTR [rbx+rax*2+0x1c60]
   14005167f:	cmp    r10d,0x4
   140051683:	jae    0x14005168d
   140051685:	inc    r10d
   140051688:	jmp    0x1400518c7
   14005168d:	mov    r14d,r10d
   140051690:	and    r10d,r12d
   140051693:	or     r10d,0x2
   140051697:	shr    r14d,1
   14005169a:	sub    r14d,r12d
   14005169d:	mov    ecx,r14d
   1400516a0:	shl    r10d,cl
   1400516a3:	add    r10d,r12d
   1400516a6:	test   r14d,r14d
   1400516a9:	je     0x1400518c7
   1400516af:	cmp    r14d,0x4
   1400516b3:	jb     0x140051848
   1400516b9:	jbe    0x140051745
   1400516bf:	movsxd rdx,DWORD PTR [rdi]
   1400516c2:	mov    r8,QWORD PTR [rdi+0x10]
   1400516c6:	lea    eax,[rdx+0x1]
   1400516c9:	movzx  r9d,BYTE PTR [rdx+r8*1]
   1400516ce:	shl    r9d,0x8
   1400516d2:	movsxd rcx,eax
   1400516d5:	movzx  eax,BYTE PTR [rcx+r8*1]
   1400516da:	or     r9d,eax
   1400516dd:	lea    eax,[rdx+0x2]
   1400516e0:	shl    r9d,0x8
   1400516e4:	movsxd rcx,eax
   1400516e7:	movzx  eax,BYTE PTR [rcx+r8*1]
   1400516ec:	or     r9d,eax
   1400516ef:	lea    eax,[rdx+0x3]
   1400516f2:	movsxd rcx,eax
   1400516f5:	shl    r9d,0x8
   1400516f9:	movzx  eax,BYTE PTR [rcx+r8*1]
   1400516fe:	mov    ecx,DWORD PTR [rdi+0x4]
   140051701:	or     r9d,eax
   140051704:	shl    r9d,cl
   140051707:	lea    eax,[rdx+0x4]
   14005170a:	movsxd rcx,eax
   14005170d:	movzx  edx,BYTE PTR [rcx+r8*1]
   140051712:	mov    ecx,r13d
   140051715:	sub    cl,BYTE PTR [rdi+0x4]
   140051718:	shr    edx,cl
   14005171a:	mov    ecx,0x24
   14005171f:	sub    ecx,r14d
   140051722:	or     r9d,edx
   140051725:	shr    r9d,cl
   140051728:	mov    ecx,DWORD PTR [rdi+0x4]
   14005172b:	add    ecx,0xfffffffc
   14005172e:	shl    r9d,0x4
   140051732:	add    ecx,r14d
   140051735:	add    r10d,r9d
   140051738:	mov    eax,ecx
   14005173a:	shr    eax,0x3
   14005173d:	add    DWORD PTR [rdi],eax
   14005173f:	and    ecx,0x7
   140051742:	mov    DWORD PTR [rdi+0x4],ecx
   140051745:	movsxd rbp,DWORD PTR [rdi]
   140051748:	mov    rdx,QWORD PTR [rdi+0x10]
   14005174c:	mov    r14d,DWORD PTR [rdi+0x4]
   140051750:	lea    eax,[rbp+0x1]
   140051753:	movzx  r8d,BYTE PTR [rbp+rdx*1+0x0]
   140051759:	shl    r8d,0x8
   14005175d:	movsxd rcx,eax
   140051760:	movzx  eax,BYTE PTR [rcx+rdx*1]
   140051764:	or     r8d,eax
   140051767:	lea    eax,[rbp+0x2]
   14005176a:	shl    r8d,0x8
   14005176e:	movsxd rcx,eax
   140051771:	movzx  eax,BYTE PTR [rcx+rdx*1]
   140051775:	mov    ecx,r13d
   140051778:	sub    ecx,r14d
   14005177b:	or     r8d,eax
   14005177e:	shr    r8d,cl
   140051781:	mov    ecx,DWORD PTR [rbx+0x1f48]
   140051787:	and    r8d,0xfffe
   14005178e:	cmp    r8d,DWORD PTR [rbx+rcx*4+0x1ec8]
   140051796:	jae    0x1400517ca
   140051798:	mov    eax,0x10
   14005179d:	sub    eax,ecx
   14005179f:	mov    cl,al
   1400517a1:	shr    r8d,cl
   1400517a4:	movzx  ecx,BYTE PTR [r8+rbx*1+0x1f4c]
   1400517ad:	add    ecx,r14d
   1400517b0:	mov    eax,ecx
   1400517b2:	shr    eax,0x3
   1400517b5:	add    eax,ebp
   1400517b7:	and    ecx,0x7
   1400517ba:	mov    DWORD PTR [rdi],eax
   1400517bc:	mov    DWORD PTR [rdi+0x4],ecx
   1400517bf:	movzx  eax,WORD PTR [rbx+r8*2+0x234c]
   1400517c8:	jmp    0x140051843
   1400517ca:	mov    r9d,0xf
   1400517d0:	inc    ecx
   1400517d2:	cmp    ecx,r9d
   1400517d5:	jae    0x1400517fa
   1400517d7:	mov    edx,ecx
   1400517d9:	add    rdx,0x7b2
   1400517e0:	lea    rdx,[rbx+rdx*4]
   1400517e4:	cmp    r8d,DWORD PTR [rdx]
   1400517e7:	jb     0x1400517f7
   1400517e9:	add    ecx,r12d
   1400517ec:	add    rdx,0x4
   1400517f0:	cmp    ecx,r9d
   1400517f3:	jb     0x1400517e4
   1400517f5:	jmp    0x1400517fa
   1400517f7:	mov    r9d,ecx
   1400517fa:	lea    ecx,[r14+r9*1]
   1400517fe:	mov    eax,ecx
   140051800:	and    ecx,0x7
   140051803:	shr    eax,0x3
   140051806:	add    eax,ebp
   140051808:	mov    DWORD PTR [rdi+0x4],ecx
   14005180b:	mov    DWORD PTR [rdi],eax
   14005180d:	mov    ecx,0x10
   140051812:	sub    ecx,r9d
   140051815:	lea    eax,[r9-0x1]
   140051819:	sub    r8d,DWORD PTR [rbx+rax*4+0x1ec8]
   140051821:	mov    eax,r9d
   140051824:	shr    r8d,cl
   140051827:	add    r8d,DWORD PTR [rbx+rax*4+0x1f08]
   14005182f:	cmp    r8d,DWORD PTR [rbx+0x1ec4]
   140051836:	sbb    eax,eax
   140051838:	and    eax,r8d
   14005183b:	movzx  eax,WORD PTR [rbx+rax*2+0x2b4c]
   140051843:	add    r10d,eax
   140051846:	jmp    0x1400518c7
   140051848:	movsxd rdx,DWORD PTR [rdi]
   14005184b:	mov    r8,QWORD PTR [rdi+0x10]
   14005184f:	lea    eax,[rdx+0x1]
   140051852:	movzx  r9d,BYTE PTR [rdx+r8*1]
   140051857:	movsxd rcx,eax
   14005185a:	shl    r9d,0x8
   14005185e:	movzx  eax,BYTE PTR [rcx+r8*1]
   140051863:	or     r9d,eax
   140051866:	lea    eax,[rdx+0x2]
   140051869:	movsxd rcx,eax
   14005186c:	shl    r9d,0x8
   140051870:	movzx  eax,BYTE PTR [rcx+r8*1]
   140051875:	or     r9d,eax
   140051878:	lea    eax,[rdx+0x3]
   14005187b:	movsxd rcx,eax
   14005187e:	shl    r9d,0x8
   140051882:	movzx  eax,BYTE PTR [rcx+r8*1]
   140051887:	mov    ecx,DWORD PTR [rdi+0x4]
   14005188a:	or     r9d,eax
   14005188d:	shl    r9d,cl
   140051890:	lea    eax,[rdx+0x4]
   140051893:	movsxd rcx,eax
   140051896:	movzx  edx,BYTE PTR [rcx+r8*1]
   14005189b:	mov    ecx,r13d
   14005189e:	sub    cl,BYTE PTR [rdi+0x4]
   1400518a1:	shr    edx,cl
   1400518a3:	mov    ecx,0x20
   1400518a8:	sub    ecx,r14d
   1400518ab:	or     r9d,edx
   1400518ae:	shr    r9d,cl
   1400518b1:	mov    ecx,DWORD PTR [rdi+0x4]
   1400518b4:	add    r10d,r9d
   1400518b7:	add    ecx,r14d
   1400518ba:	mov    eax,ecx
   1400518bc:	shr    eax,0x3
   1400518bf:	add    DWORD PTR [rdi],eax
   1400518c1:	and    ecx,0x7
   1400518c4:	mov    DWORD PTR [rdi+0x4],ecx
   1400518c7:	cmp    r10d,0x100
   1400518ce:	jbe    0x1400518eb
   1400518d0:	inc    r11d
   1400518d3:	cmp    r10d,0x2000
   1400518da:	jbe    0x1400518eb
   1400518dc:	add    r11d,r12d
   1400518df:	cmp    r10d,0x40000
   1400518e6:	jbe    0x1400518eb
   1400518e8:	add    r11d,r12d
   1400518eb:	mov    eax,DWORD PTR [rbx+0xa8]
   1400518f1:	mov    DWORD PTR [rbx+0xac],eax
   1400518f7:	mov    eax,DWORD PTR [rbx+0xa4]
   1400518fd:	mov    DWORD PTR [rbx+0xa8],eax
   140051903:	mov    eax,DWORD PTR [rbx+0xa0]
   140051909:	mov    DWORD PTR [rbx+0xa4],eax
   14005190f:	mov    DWORD PTR [rbx+0xa0],r10d
   140051916:	cmp    BYTE PTR [rbx+0x4d98],0x0
   14005191d:	mov    DWORD PTR [rbx+0xb4],r11d
   140051924:	je     0x14005194c
   140051926:	mov    r8d,r10d
   140051929:	mov    edx,r11d
   14005192c:	mov    rax,QWORD PTR [rbx+0xe968]
   140051933:	lea    rcx,[rbx+0x4b98]
   14005193a:	mov    r9,rsi
   14005193d:	mov    QWORD PTR [rsp+0x20],rax
   140051942:	call   0x14004a1c0
   140051947:	jmp    0x1400512cc
   14005194c:	mov    r9,QWORD PTR [rsi]
   14005194f:	mov    eax,r10d
   140051952:	mov    r8,r9
   140051955:	sub    r8,rax
   140051958:	mov    rax,QWORD PTR [rbx+0xe960]
   14005195f:	add    rax,0xffffffffffffefff
   140051965:	cmp    r8,rax
   140051968:	jae    0x140051a71
   14005196e:	cmp    r9,rax
   140051971:	jae    0x140051a71
   140051977:	mov    rax,QWORD PTR [rbx+0x4b90]
   14005197e:	lea    rcx,[r8+rax*1]
   140051982:	lea    rdx,[r9+rax*1]
   140051986:	mov    eax,r11d
   140051989:	add    rax,r9
   14005198c:	mov    QWORD PTR [rsi],rax
   14005198f:	cmp    r10d,r11d
   140051992:	jae    0x1400519df
   140051994:	cmp    r11d,r13d
   140051997:	jb     0x140051a00
   140051999:	mov    r8d,r11d
   14005199c:	shr    r8,0x3
   1400519a0:	mov    al,BYTE PTR [rcx]
   1400519a2:	add    r11d,0xfffffff8
   1400519a6:	mov    BYTE PTR [rdx],al
   1400519a8:	mov    al,BYTE PTR [rcx+0x1]
   1400519ab:	mov    BYTE PTR [rdx+0x1],al
   1400519ae:	mov    al,BYTE PTR [rcx+0x2]
   1400519b1:	mov    BYTE PTR [rdx+0x2],al
   1400519b4:	mov    al,BYTE PTR [rcx+0x3]
   1400519b7:	mov    BYTE PTR [rdx+0x3],al
   1400519ba:	mov    al,BYTE PTR [rcx+0x4]
   1400519bd:	mov    BYTE PTR [rdx+0x4],al
   1400519c0:	mov    al,BYTE PTR [rcx+0x5]
   1400519c3:	mov    BYTE PTR [rdx+0x5],al
   1400519c6:	mov    al,BYTE PTR [rcx+0x6]
   1400519c9:	mov    BYTE PTR [rdx+0x6],al
   1400519cc:	mov    al,BYTE PTR [rcx+0x7]
   1400519cf:	add    rcx,r13
   1400519d2:	mov    BYTE PTR [rdx+0x7],al
   1400519d5:	add    rdx,r13
   1400519d8:	sub    r8,r12
   1400519db:	jne    0x1400519a0
   1400519dd:	jmp    0x140051a00
   1400519df:	cmp    r11d,r13d
   1400519e2:	jb     0x140051a00
   1400519e4:	mov    r8d,r11d
   1400519e7:	shr    r8,0x3
   1400519eb:	mov    rax,QWORD PTR [rcx]
   1400519ee:	add    r11d,0xfffffff8
   1400519f2:	mov    QWORD PTR [rdx],rax
   1400519f5:	add    rcx,r13
   1400519f8:	add    rdx,r13
   1400519fb:	sub    r8,r12
   1400519fe:	jne    0x1400519eb
   140051a00:	test   r11d,r11d
   140051a03:	je     0x1400512cc
   140051a09:	mov    al,BYTE PTR [rcx]
   140051a0b:	mov    BYTE PTR [rdx],al
   140051a0d:	cmp    r11d,r12d
   140051a10:	jbe    0x1400512cc
   140051a16:	mov    al,BYTE PTR [rcx+0x1]
   140051a19:	mov    BYTE PTR [rdx+0x1],al
   140051a1c:	cmp    r11d,0x2
   140051a20:	jbe    0x1400512cc
   140051a26:	mov    al,BYTE PTR [rcx+0x2]
   140051a29:	mov    BYTE PTR [rdx+0x2],al
   140051a2c:	cmp    r11d,0x3
   140051a30:	jbe    0x1400512cc
   140051a36:	mov    al,BYTE PTR [rcx+0x3]
   140051a39:	mov    BYTE PTR [rdx+0x3],al
   140051a3c:	cmp    r11d,0x4
   140051a40:	jbe    0x1400512cc
   140051a46:	mov    al,BYTE PTR [rcx+0x4]
   140051a49:	mov    BYTE PTR [rdx+0x4],al
   140051a4c:	cmp    r11d,0x5
   140051a50:	jbe    0x1400512cc
   140051a56:	cmp    r11d,0x6
   140051a5a:	mov    al,BYTE PTR [rcx+0x5]
   140051a5d:	mov    BYTE PTR [rdx+0x5],al
   140051a60:	jbe    0x1400512cc
   140051a66:	mov    al,BYTE PTR [rcx+0x6]
   140051a69:	mov    BYTE PTR [rdx+0x6],al
   140051a6c:	jmp    0x1400512cc
   140051a71:	test   r11d,r11d
   140051a74:	je     0x1400512cc
   140051a7a:	mov    r9,QWORD PTR [rbx+0xe968]
   140051a81:	mov    rdx,QWORD PTR [rbx+0x4b90]
   140051a88:	and    r9,r8
   140051a8b:	mov    rcx,QWORD PTR [rsi]
   140051a8e:	add    r8,r12
   140051a91:	mov    al,BYTE PTR [r9+rdx*1]
   140051a95:	mov    BYTE PTR [rdx+rcx*1],al
   140051a98:	mov    rax,QWORD PTR [rsi]
   140051a9b:	mov    r9,QWORD PTR [rbx+0xe968]
   140051aa2:	add    rax,r12
   140051aa5:	and    rax,r9
   140051aa8:	mov    QWORD PTR [rsi],rax
   140051aab:	add    r11d,0xffffffff
   140051aaf:	jne    0x140051a81
   140051ab1:	jmp    0x1400512cc
   140051ab6:	cmp    ebp,0x100
   140051abc:	jne    0x140051b0e
   140051abe:	lea    r8,[rsp+0x30]
   140051ac3:	mov    rdx,rdi
   140051ac6:	mov    rcx,rbx
   140051ac9:	call   0x14004cb7c
   140051ace:	test   al,al
   140051ad0:	je     0x140051ae7
   140051ad2:	lea    rdx,[rsp+0x30]
   140051ad7:	mov    rcx,rbx
   140051ada:	call   0x1400494f0
   140051adf:	test   al,al
   140051ae1:	jne    0x1400512cc
   140051ae7:	mov    rcx,rbx
   140051aea:	call   0x14004f1dc
   140051aef:	mov    rbx,QWORD PTR [rsp+0x60]
   140051af4:	mov    rbp,QWORD PTR [rsp+0x68]
   140051af9:	mov    rsi,QWORD PTR [rsp+0x70]
   140051afe:	mov    rdi,QWORD PTR [rsp+0x78]
   140051b03:	add    rsp,0x40
   140051b07:	pop    r14
   140051b09:	pop    r13
   140051b0b:	pop    r12
   140051b0d:	ret    
   140051b0e:	cmp    ebp,0x101
   140051b14:	jne    0x140051c9c
   140051b1a:	mov    r10d,DWORD PTR [rbx+0xb4]
   140051b21:	test   r10d,r10d
   140051b24:	je     0x1400512cc
   140051b2a:	cmp    BYTE PTR [rbx+0x4d98],0x0
   140051b31:	je     0x140051b42
   140051b33:	mov    r8d,DWORD PTR [rbx+0xa0]
   140051b3a:	mov    edx,r10d
   140051b3d:	jmp    0x14005192c
   140051b42:	mov    r9,QWORD PTR [rsi]
   140051b45:	mov    r11d,DWORD PTR [rbx+0xa0]
   140051b4c:	mov    r8,r9
   140051b4f:	mov    rax,QWORD PTR [rbx+0xe960]
   140051b56:	sub    r8,r11
   140051b59:	add    rax,0xffffffffffffefff
   140051b5f:	cmp    r8,rax
   140051b62:	jae    0x140051c57
   140051b68:	cmp    r9,rax
   140051b6b:	jae    0x140051c57
   140051b71:	mov    rax,QWORD PTR [rbx+0x4b90]
   140051b78:	lea    rcx,[r8+rax*1]
   140051b7c:	lea    rdx,[r9+rax*1]
   140051b80:	lea    rax,[r9+r10*1]
   140051b84:	mov    QWORD PTR [rsi],rax
   140051b87:	cmp    r11d,r10d
   140051b8a:	jae    0x140051bd7
   140051b8c:	cmp    r10d,r13d
   140051b8f:	jb     0x140051bf8
   140051b91:	mov    r8,r10
   140051b94:	shr    r8,0x3
   140051b98:	mov    al,BYTE PTR [rcx]
   140051b9a:	add    r10d,0xfffffff8
   140051b9e:	mov    BYTE PTR [rdx],al
   140051ba0:	mov    al,BYTE PTR [rcx+0x1]
   140051ba3:	mov    BYTE PTR [rdx+0x1],al
   140051ba6:	mov    al,BYTE PTR [rcx+0x2]
   140051ba9:	mov    BYTE PTR [rdx+0x2],al
   140051bac:	mov    al,BYTE PTR [rcx+0x3]
   140051baf:	mov    BYTE PTR [rdx+0x3],al
   140051bb2:	mov    al,BYTE PTR [rcx+0x4]
   140051bb5:	mov    BYTE PTR [rdx+0x4],al
   140051bb8:	mov    al,BYTE PTR [rcx+0x5]
   140051bbb:	mov    BYTE PTR [rdx+0x5],al
   140051bbe:	mov    al,BYTE PTR [rcx+0x6]
   140051bc1:	mov    BYTE PTR [rdx+0x6],al
   140051bc4:	mov    al,BYTE PTR [rcx+0x7]
   140051bc7:	add    rcx,r13
   140051bca:	mov    BYTE PTR [rdx+0x7],al
   140051bcd:	add    rdx,r13
   140051bd0:	sub    r8,r12
   140051bd3:	jne    0x140051b98
   140051bd5:	jmp    0x140051bf8
   140051bd7:	cmp    r10d,r13d
   140051bda:	jb     0x140051bf8
   140051bdc:	mov    r8,r10
   140051bdf:	shr    r8,0x3
   140051be3:	mov    rax,QWORD PTR [rcx]
   140051be6:	add    r10d,0xfffffff8
   140051bea:	mov    QWORD PTR [rdx],rax
   140051bed:	add    rcx,r13
   140051bf0:	add    rdx,r13
   140051bf3:	sub    r8,r12
   140051bf6:	jne    0x140051be3
   140051bf8:	test   r10d,r10d
   140051bfb:	je     0x1400512cc
   140051c01:	mov    al,BYTE PTR [rcx]
   140051c03:	mov    BYTE PTR [rdx],al
   140051c05:	cmp    r10d,r12d
   140051c08:	jbe    0x1400512cc
   140051c0e:	mov    al,BYTE PTR [rcx+0x1]
   140051c11:	mov    BYTE PTR [rdx+0x1],al
   140051c14:	cmp    r10d,0x2
   140051c18:	jbe    0x1400512cc
   140051c1e:	mov    al,BYTE PTR [rcx+0x2]
   140051c21:	mov    BYTE PTR [rdx+0x2],al
   140051c24:	cmp    r10d,0x3
   140051c28:	jbe    0x1400512cc
   140051c2e:	mov    al,BYTE PTR [rcx+0x3]
   140051c31:	mov    BYTE PTR [rdx+0x3],al
   140051c34:	cmp    r10d,0x4
   140051c38:	jbe    0x1400512cc
   140051c3e:	mov    al,BYTE PTR [rcx+0x4]
   140051c41:	mov    BYTE PTR [rdx+0x4],al
   140051c44:	cmp    r10d,0x5
   140051c48:	jbe    0x1400512cc
   140051c4e:	cmp    r10d,0x6
   140051c52:	jmp    0x140051a5a
   140051c57:	test   r10d,r10d
   140051c5a:	je     0x1400512cc
   140051c60:	mov    r9,QWORD PTR [rbx+0xe968]
   140051c67:	mov    rdx,QWORD PTR [rbx+0x4b90]
   140051c6e:	and    r9,r8
   140051c71:	mov    rcx,QWORD PTR [rsi]
   140051c74:	add    r8,r12
   140051c77:	mov    al,BYTE PTR [r9+rdx*1]
   140051c7b:	mov    BYTE PTR [rdx+rcx*1],al
   140051c7e:	mov    rax,QWORD PTR [rsi]
   140051c81:	mov    r9,QWORD PTR [rbx+0xe968]
   140051c88:	add    rax,r12
   140051c8b:	and    rax,r9
   140051c8e:	mov    QWORD PTR [rsi],rax
   140051c91:	add    r10d,0xffffffff
   140051c95:	jne    0x140051c67
   140051c97:	jmp    0x1400512cc
   140051c9c:	add    ebp,0xfffffefe
   140051ca2:	lea    rdx,[rbx+0xa0]
   140051ca9:	lea    rdx,[rdx+rbp*4]
   140051cad:	mov    r14d,DWORD PTR [rdx]
   140051cb0:	je     0x140051cc4
   140051cb2:	sub    ebp,r12d
   140051cb5:	mov    ecx,DWORD PTR [rbx+rbp*4+0xa0]
   140051cbc:	mov    DWORD PTR [rdx],ecx
   140051cbe:	lea    rdx,[rdx-0x4]
   140051cc2:	jne    0x140051cb2
   140051cc4:	mov    DWORD PTR [rbx+0xa0],r14d
   140051ccb:	movsxd r10,DWORD PTR [rdi]
   140051cce:	mov    rdx,QWORD PTR [rdi+0x10]
   140051cd2:	mov    r11d,DWORD PTR [rdi+0x4]
   140051cd6:	lea    eax,[r10+0x1]
   140051cda:	movzx  r8d,BYTE PTR [r10+rdx*1]
   140051cdf:	shl    r8d,0x8
   140051ce3:	movsxd rcx,eax
   140051ce6:	movzx  eax,BYTE PTR [rcx+rdx*1]
   140051cea:	or     r8d,eax
   140051ced:	lea    eax,[r10+0x2]
   140051cf1:	shl    r8d,0x8
   140051cf5:	movsxd rcx,eax
   140051cf8:	movzx  eax,BYTE PTR [rcx+rdx*1]
   140051cfc:	mov    ecx,r13d
   140051cff:	sub    ecx,r11d
   140051d02:	or     r8d,eax
   140051d05:	shr    r8d,cl
   140051d08:	mov    ecx,DWORD PTR [rbx+0x2e34]
   140051d0e:	and    r8d,0xfffe
   140051d15:	cmp    r8d,DWORD PTR [rbx+rcx*4+0x2db4]
   140051d1d:	jae    0x140051d52
   140051d1f:	mov    eax,0x10
   140051d24:	sub    eax,ecx
   140051d26:	mov    cl,al
   140051d28:	shr    r8d,cl
   140051d2b:	movzx  ecx,BYTE PTR [r8+rbx*1+0x2e38]
   140051d34:	add    ecx,r11d
   140051d37:	mov    eax,ecx
   140051d39:	shr    eax,0x3
   140051d3c:	add    eax,r10d
   140051d3f:	and    ecx,0x7
   140051d42:	mov    DWORD PTR [rdi],eax
   140051d44:	mov    DWORD PTR [rdi+0x4],ecx
   140051d47:	movzx  r11d,WORD PTR [rbx+r8*2+0x3238]
   140051d50:	jmp    0x140051dcd
   140051d52:	mov    r9d,0xf
   140051d58:	inc    ecx
   140051d5a:	cmp    ecx,r9d
   140051d5d:	jae    0x140051d82
   140051d5f:	mov    edx,ecx
   140051d61:	add    rdx,0xb6d
   140051d68:	lea    rdx,[rbx+rdx*4]
   140051d6c:	cmp    r8d,DWORD PTR [rdx]
   140051d6f:	jb     0x140051d7f
   140051d71:	add    ecx,r12d
   140051d74:	add    rdx,0x4
   140051d78:	cmp    ecx,r9d
   140051d7b:	jb     0x140051d6c
   140051d7d:	jmp    0x140051d82
   140051d7f:	mov    r9d,ecx
   140051d82:	lea    ecx,[r11+r9*1]
   140051d86:	mov    eax,ecx
   140051d88:	and    ecx,0x7
   140051d8b:	shr    eax,0x3
   140051d8e:	add    eax,r10d
   140051d91:	mov    DWORD PTR [rdi+0x4],ecx
   140051d94:	mov    DWORD PTR [rdi],eax
   140051d96:	mov    ecx,0x10
   140051d9b:	sub    ecx,r9d
   140051d9e:	lea    eax,[r9-0x1]
   140051da2:	sub    r8d,DWORD PTR [rbx+rax*4+0x2db4]
   140051daa:	mov    eax,r9d
   140051dad:	shr    r8d,cl
   140051db0:	add    r8d,DWORD PTR [rbx+rax*4+0x2df4]
   140051db8:	cmp    r8d,DWORD PTR [rbx+0x2db0]
   140051dbf:	sbb    eax,eax
   140051dc1:	and    eax,r8d
   140051dc4:	movzx  r11d,WORD PTR [rbx+rax*2+0x3a38]
   140051dcd:	cmp    r11d,r13d
   140051dd0:	jae    0x140051dd8
   140051dd2:	add    r11d,0x2
   140051dd6:	jmp    0x140051e57
   140051dd8:	mov    ebp,r11d
   140051ddb:	and    r11d,0x3
   140051ddf:	or     r11d,0x4
   140051de3:	shr    ebp,0x2
   140051de6:	sub    ebp,r12d
   140051de9:	mov    ecx,ebp
   140051deb:	shl    r11d,cl
   140051dee:	add    r11d,0x2
   140051df2:	test   ebp,ebp
   140051df4:	je     0x140051e57
   140051df6:	movsxd r10,DWORD PTR [rdi]
   140051df9:	mov    rdx,QWORD PTR [rdi+0x10]
   140051dfd:	mov    r9d,DWORD PTR [rdi+0x4]
   140051e01:	lea    eax,[r10+0x1]
   140051e05:	movzx  r8d,BYTE PTR [r10+rdx*1]
   140051e0a:	movsxd rcx,eax
   140051e0d:	shl    r8d,0x8
   140051e11:	movzx  eax,BYTE PTR [rcx+rdx*1]
   140051e15:	or     r8d,eax
   140051e18:	lea    eax,[r10+0x2]
   140051e1c:	movsxd rcx,eax
   140051e1f:	shl    r8d,0x8
   140051e23:	movzx  eax,BYTE PTR [rcx+rdx*1]
   140051e27:	mov    ecx,r13d
   140051e2a:	sub    ecx,r9d
   140051e2d:	or     r8d,eax
   140051e30:	shr    r8d,cl
   140051e33:	mov    ecx,0x10
   140051e38:	sub    ecx,ebp
   140051e3a:	movzx  edx,r8w
   140051e3e:	shr    edx,cl
   140051e40:	lea    ecx,[r9+rbp*1]
   140051e44:	mov    eax,ecx
   140051e46:	add    r11d,edx
   140051e49:	shr    eax,0x3
   140051e4c:	add    eax,r10d
   140051e4f:	and    ecx,0x7
   140051e52:	mov    DWORD PTR [rdi],eax
   140051e54:	mov    DWORD PTR [rdi+0x4],ecx
   140051e57:	cmp    BYTE PTR [rbx+0x4d98],0x0
   140051e5e:	mov    DWORD PTR [rbx+0xb4],r11d
   140051e65:	je     0x140051e6f
   140051e67:	mov    r8d,r14d
   140051e6a:	jmp    0x140051929
   140051e6f:	mov    r9,QWORD PTR [rsi]
   140051e72:	mov    rax,QWORD PTR [rbx+0xe960]
   140051e79:	mov    r8,r9
   140051e7c:	sub    r8,r14
   140051e7f:	add    rax,0xffffffffffffefff
   140051e85:	cmp    r8,rax
   140051e88:	jae    0x140051f30
   140051e8e:	cmp    r9,rax
   140051e91:	jae    0x140051f30
   140051e97:	mov    rax,QWORD PTR [rbx+0x4b90]
   140051e9e:	lea    rcx,[r8+rax*1]
   140051ea2:	lea    rdx,[r9+rax*1]
   140051ea6:	mov    eax,r11d
   140051ea9:	add    rax,r9
   140051eac:	mov    QWORD PTR [rsi],rax
   140051eaf:	cmp    r14d,r11d
   140051eb2:	jae    0x140051f06
   140051eb4:	cmp    r11d,r13d
   140051eb7:	jb     0x140051a00
   140051ebd:	mov    r8d,r11d
   140051ec0:	shr    r8,0x3
   140051ec4:	mov    al,BYTE PTR [rcx]
   140051ec6:	add    r11d,0xfffffff8
   140051eca:	mov    BYTE PTR [rdx],al
   140051ecc:	mov    al,BYTE PTR [rcx+0x1]
   140051ecf:	mov    BYTE PTR [rdx+0x1],al
   140051ed2:	mov    al,BYTE PTR [rcx+0x2]
   140051ed5:	mov    BYTE PTR [rdx+0x2],al
   140051ed8:	mov    al,BYTE PTR [rcx+0x3]
   140051edb:	mov    BYTE PTR [rdx+0x3],al
   140051ede:	mov    al,BYTE PTR [rcx+0x4]
   140051ee1:	mov    BYTE PTR [rdx+0x4],al
   140051ee4:	mov    al,BYTE PTR [rcx+0x5]
   140051ee7:	mov    BYTE PTR [rdx+0x5],al
   140051eea:	mov    al,BYTE PTR [rcx+0x6]
   140051eed:	mov    BYTE PTR [rdx+0x6],al
   140051ef0:	mov    al,BYTE PTR [rcx+0x7]
   140051ef3:	add    rcx,r13
   140051ef6:	mov    BYTE PTR [rdx+0x7],al
   140051ef9:	add    rdx,r13
   140051efc:	sub    r8,r12
   140051eff:	jne    0x140051ec4
   140051f01:	jmp    0x140051a00
   140051f06:	cmp    r11d,r13d
   140051f09:	jb     0x140051a00
   140051f0f:	mov    r8d,r11d
   140051f12:	shr    r8,0x3
   140051f16:	mov    rax,QWORD PTR [rcx]
   140051f19:	add    r11d,0xfffffff8
   140051f1d:	mov    QWORD PTR [rdx],rax
   140051f20:	add    rcx,r13
   140051f23:	add    rdx,r13
   140051f26:	sub    r8,r12
   140051f29:	jne    0x140051f16
   140051f2b:	jmp    0x140051a00
   140051f30:	test   r11d,r11d
   140051f33:	je     0x1400512cc
   140051f39:	mov    r9,QWORD PTR [rbx+0xe968]
   140051f40:	mov    rdx,QWORD PTR [rbx+0x4b90]
   140051f47:	and    r9,r8
   140051f4a:	mov    rcx,QWORD PTR [rsi]
   140051f4d:	add    r8,r12
   140051f50:	mov    al,BYTE PTR [r9+rdx*1]
   140051f54:	mov    BYTE PTR [rdx+rcx*1],al
   140051f57:	mov    rax,QWORD PTR [rsi]
   140051f5a:	mov    r9,QWORD PTR [rbx+0xe968]
   140051f61:	add    rax,r12
   140051f64:	and    rax,r9
   140051f67:	mov    QWORD PTR [rsi],rax
   140051f6a:	add    r11d,0xffffffff
   140051f6e:	jne    0x140051f40
   140051f70:	jmp    0x1400512cc
   140051f75:	mov    BYTE PTR [rbx+0x4db8],0x0
   140051f7c:	jmp    0x140051aef
   140051f81:	int3   
   140051f82:	int3   
   140051f83:	int3   
   140051f84:	mov    QWORD PTR [rsp+0x10],rbx
   140051f89:	mov    QWORD PTR [rsp+0x18],rbp
   140051f8e:	mov    QWORD PTR [rsp+0x20],rsi
   140051f93:	push   rdi
   140051f94:	push   r12
   140051f96:	push   r13
   140051f98:	push   r14
   140051f9a:	push   r15
   140051f9c:	sub    rsp,0x240
   140051fa3:	mov    rax,QWORD PTR [rip+0x2ff36]        # 0x140081ee0
   140051faa:	xor    rax,rsp
   140051fad:	mov    QWORD PTR [rsp+0x230],rax
   140051fb5:	mov    bl,dl
   140051fb7:	mov    rdi,rcx
   140051fba:	call   0x14004bc4c
   140051fbf:	mov    dl,bl
   140051fc1:	mov    rcx,rdi
   140051fc4:	call   0x14004e9c8
   140051fc9:	mov    eax,DWORD PTR [rdi+0x30]
   140051fcc:	xor    r8d,r8d
   140051fcf:	mov    edx,r8d
   140051fd2:	add    eax,eax
   140051fd4:	je     0x140051ffc
   140051fd6:	mov    eax,edx
   140051fd8:	inc    edx
   140051fda:	imul   rcx,rax,0x4af8
   140051fe1:	add    rcx,QWORD PTR [rdi+0x28]
   140051fe5:	mov    BYTE PTR [rcx+0x4add],r8b
   140051fec:	mov    BYTE PTR [rcx+0x4adf],r8b
   140051ff3:	mov    eax,DWORD PTR [rdi+0x30]
   140051ff6:	add    eax,eax
   140051ff8:	cmp    edx,eax
   140051ffa:	jb     0x140051fd6
   140051ffc:	mov    rcx,QWORD PTR [rdi+0x28]
   140052000:	lea    rbp,[rdi+0xec]
   140052007:	movups xmm0,XMMWORD PTR [rdi+0xd8]
   14005200e:	mov    ebx,0x95
   140052013:	mov    rdx,rbp
   140052016:	movups XMMWORD PTR [rcx+0x24],xmm0
   14005201a:	mov    eax,DWORD PTR [rdi+0xe8]
   140052020:	mov    DWORD PTR [rcx+0x34],eax
   140052023:	lea    esi,[rbx-0x15]
   140052026:	mov    rcx,QWORD PTR [rdi+0x28]
   14005202a:	mov    eax,ebx
   14005202c:	add    rcx,0x3c
   140052030:	movups xmm0,XMMWORD PTR [rdx]
   140052033:	movups XMMWORD PTR [rcx],xmm0
   140052036:	movups xmm1,XMMWORD PTR [rdx+0x10]
   14005203a:	movups XMMWORD PTR [rcx+0x10],xmm1
   14005203e:	movups xmm0,XMMWORD PTR [rdx+0x20]
   140052042:	movups XMMWORD PTR [rcx+0x20],xmm0
   140052046:	movups xmm1,XMMWORD PTR [rdx+0x30]
   14005204a:	movups XMMWORD PTR [rcx+0x30],xmm1
   14005204e:	movups xmm0,XMMWORD PTR [rdx+0x40]
   140052052:	movups XMMWORD PTR [rcx+0x40],xmm0
   140052056:	movups xmm1,XMMWORD PTR [rdx+0x50]
   14005205a:	movups XMMWORD PTR [rcx+0x50],xmm1
   14005205e:	movups xmm0,XMMWORD PTR [rdx+0x60]
   140052062:	movups XMMWORD PTR [rcx+0x60],xmm0
   140052066:	add    rcx,rsi
   140052069:	movups xmm1,XMMWORD PTR [rdx+0x70]
   14005206d:	add    rdx,rsi
   140052070:	movups XMMWORD PTR [rcx-0x10],xmm1
   140052074:	sub    rax,0x1
   140052078:	jne    0x140052030
   14005207a:	movups xmm0,XMMWORD PTR [rdx]
   14005207d:	mov    bl,r8b
   140052080:	mov    DWORD PTR [rsp+0x24],r8d
   140052085:	mov    r14d,r8d
   140052088:	mov    BYTE PTR [rsp+0x21],bl
   14005208c:	movups XMMWORD PTR [rcx],xmm0
   14005208f:	mov    rax,QWORD PTR [rdx+0x10]
   140052093:	mov    r12d,r8d
   140052096:	mov    QWORD PTR [rcx+0x10],rax
   14005209a:	mov    eax,DWORD PTR [rdx+0x18]
   14005209d:	mov    DWORD PTR [rcx+0x18],eax
   1400520a0:	mov    BYTE PTR [rsp+0x20],r8b
   1400520a5:	mov    rcx,QWORD PTR [rdi]
   1400520a8:	mov    eax,0x400000
   1400520ad:	sub    eax,r14d
   1400520b0:	movsxd rdx,r14d
   1400520b3:	add    rdx,QWORD PTR [rdi+0x38]
   1400520b7:	movsxd r8,eax
   1400520ba:	and    r8,0xfffffffffffffff0
   1400520be:	call   0x140037740
   1400520c3:	xor    r10d,r10d
   1400520c6:	mov    DWORD PTR [rsp+0x28],eax
   1400520ca:	test   eax,eax
   1400520cc:	js     0x140052478
   1400520d2:	add    r14d,eax
   1400520d5:	je     0x140052478
   1400520db:	test   eax,eax
   1400520dd:	jle    0x1400520e8
   1400520df:	cmp    r14d,0x400
   1400520e6:	jl     0x1400520a5
   1400520e8:	cmp    r12d,r14d
   1400520eb:	jge    0x1400520a5
   1400520ed:	mov    eax,DWORD PTR [rdi+0x30]
   1400520f0:	mov    r15d,r10d
   1400520f3:	mov    r13d,r10d
   1400520f6:	add    eax,eax
   1400520f8:	je     0x1400521f5
   1400520fe:	mov    eax,r15d
   140052101:	imul   rsi,rax,0x4af8
   140052108:	mov    DWORD PTR [rsp+0x24],r15d
   14005210d:	add    rsi,QWORD PTR [rdi+0x28]
   140052111:	mov    QWORD PTR [rsi],rdi
   140052114:	cmp    BYTE PTR [rsi+0x4adf],r10b
   14005211b:	je     0x140052126
   14005211d:	mov    DWORD PTR [rsi+0x4ad8],r14d
   140052124:	jmp    0x140052164
   140052126:	lea    rbx,[rsi+0x8]
   14005212a:	movsxd rdx,r12d
   14005212d:	add    rdx,QWORD PTR [rdi+0x38]
   140052131:	mov    rcx,rbx
   140052134:	call   0x140023dcc
   140052139:	xor    r10d,r10d
   14005213c:	mov    eax,r14d
   14005213f:	sub    eax,r12d
   140052142:	mov    QWORD PTR [rbx],r10
   140052145:	mov    DWORD PTR [rsi+0x4ad8],eax
   14005214b:	je     0x1400521f5
   140052151:	mov    bl,BYTE PTR [rsp+0x21]
   140052155:	mov    BYTE PTR [rsi+0x4adc],r10b
   14005215c:	mov    BYTE PTR [rsi+0x20],r10b
   140052160:	mov    BYTE PTR [rsi+0x38],r10b
   140052164:	cmp    DWORD PTR [rsp+0x28],r10d
   140052169:	mov    BYTE PTR [rsi+0x4adf],r10b
   140052170:	sete   al
   140052173:	mov    DWORD PTR [rsi+0x4af0],r15d
   14005217a:	mov    BYTE PTR [rsi+0x4ade],al
   140052180:	cmp    BYTE PTR [rsi+0x20],r10b
   140052184:	jne    0x1400521a1
   140052186:	lea    r8,[rsi+0x24]
   14005218a:	mov    BYTE PTR [rsi+0x20],0x1
   14005218e:	lea    rdx,[rsi+0x8]
   140052192:	mov    rcx,rdi
   140052195:	call   0x14004c984
   14005219a:	xor    r10d,r10d
   14005219d:	test   al,al
   14005219f:	je     0x1400521f0
   1400521a1:	test   bl,bl
   1400521a3:	jne    0x1400521b3
   1400521a5:	cmp    DWORD PTR [rsi+0x24],0x20000
   1400521ac:	jg     0x1400521b3
   1400521ae:	inc    r13d
   1400521b1:	jmp    0x1400521c0
   1400521b3:	mov    bl,0x1
   1400521b5:	mov    BYTE PTR [rsi+0x4add],0x1
   1400521bc:	mov    BYTE PTR [rsp+0x21],bl
   1400521c0:	mov    eax,DWORD PTR [rsi+0x30]
   1400521c3:	inc    r15d
   1400521c6:	add    eax,DWORD PTR [rsi+0x24]
   1400521c9:	add    r12d,eax
   1400521cc:	mov    eax,r14d
   1400521cf:	sub    eax,r12d
   1400521d2:	js     0x1400521da
   1400521d4:	cmp    BYTE PTR [rsi+0x34],r10b
   1400521d8:	jne    0x1400521f5
   1400521da:	cmp    eax,0x400
   1400521df:	jl     0x1400521f5
   1400521e1:	mov    eax,DWORD PTR [rdi+0x30]
   1400521e4:	add    eax,eax
   1400521e6:	cmp    r15d,eax
   1400521e9:	jae    0x1400521f5
   1400521eb:	jmp    0x1400520fe
   1400521f0:	mov    BYTE PTR [rsp+0x20],0x1
   1400521f5:	xor    edx,edx
   1400521f7:	mov    eax,r13d
   1400521fa:	div    DWORD PTR [rdi+0x30]
   1400521fd:	mov    esi,eax
   1400521ff:	test   edx,edx
   140052201:	je     0x140052205
   140052203:	inc    esi
   140052205:	mov    ebx,r10d
   140052208:	test   r13d,r13d
   14005220b:	je     0x14005226e
   14005220d:	mov    ebp,ebx
   14005220f:	mov    eax,ebx
   140052211:	lea    r8,[rsp+0x30]
   140052216:	imul   rdx,rax,0x4af8
   14005221d:	mov    ecx,ebp
   14005221f:	mov    eax,r13d
   140052222:	add    rdx,QWORD PTR [rdi+0x28]
   140052226:	sub    eax,ebx
   140052228:	shl    rcx,0x4
   14005222c:	inc    ebp
   14005222e:	add    r8,rcx
   140052231:	cmp    esi,eax
   140052233:	cmovb  eax,esi
   140052236:	mov    DWORD PTR [r8+0x8],eax
   14005223a:	mov    QWORD PTR [r8],rdx
   14005223d:	cmp    r15d,0x1
   140052241:	jne    0x14005224d
   140052243:	mov    rcx,rdi
   140052246:	call   0x140052560
   14005224b:	jmp    0x14005225d
   14005224d:	mov    rcx,QWORD PTR [rdi+0x20]
   140052251:	lea    rdx,[rip+0xc00]        # 0x140052e58
   140052258:	call   0x140046dd8
   14005225d:	add    ebx,esi
   14005225f:	cmp    ebx,r13d
   140052262:	jb     0x14005220f
   140052264:	lea    rbp,[rdi+0xec]
   14005226b:	xor    r10d,r10d
   14005226e:	test   r15d,r15d
   140052271:	je     0x140052469
   140052277:	mov    rcx,QWORD PTR [rdi+0x20]
   14005227b:	call   0x140047214
   140052280:	xor    r10d,r10d
   140052283:	mov    r13d,r10d
   140052286:	test   r15d,r15d
   140052289:	je     0x1400522ff
   14005228b:	mov    esi,r10d
   14005228e:	mov    rax,QWORD PTR [rdi+0x28]
   140052292:	lea    rbx,[rsi+rax*1]
   140052296:	cmp    BYTE PTR [rbx+0x4add],r10b
   14005229d:	jne    0x1400522be
   14005229f:	mov    rdx,rbx
   1400522a2:	mov    rcx,rdi
   1400522a5:	call   0x14004c370
   1400522aa:	xor    r10d,r10d
   1400522ad:	test   al,al
   1400522af:	je     0x140052478
   1400522b5:	cmp    BYTE PTR [rbx+0x4add],r10b
   1400522bc:	je     0x1400522d4
   1400522be:	mov    rdx,rbx
   1400522c1:	mov    rcx,rdi
   1400522c4:	call   0x140052e98
   1400522c9:	xor    r10d,r10d
   1400522cc:	test   al,al
   1400522ce:	je     0x140052478
   1400522d4:	cmp    BYTE PTR [rbx+0x4adc],r10b
   1400522db:	jne    0x140052478
   1400522e1:	cmp    BYTE PTR [rbx+0x4adf],r10b
   1400522e8:	jne    0x140052337
   1400522ea:	cmp    BYTE PTR [rbx+0x34],r10b
   1400522ee:	jne    0x14005232f
   1400522f0:	inc    r13d
   1400522f3:	add    rsi,0x4af8
   1400522fa:	cmp    r13d,r15d
   1400522fd:	jb     0x14005228e
   1400522ff:	mov    al,BYTE PTR [rsp+0x20]
   140052303:	test   al,al
   140052305:	jne    0x140052478
   14005230b:	mov    ebx,r14d
   14005230e:	sub    ebx,r12d
   140052311:	cmp    ebx,0x400
   140052317:	jl     0x140052448
   14005231d:	mov    bl,BYTE PTR [rsp+0x21]
   140052321:	cmp    r12d,r14d
   140052324:	jge    0x1400520a5
   14005232a:	jmp    0x1400520ed
   14005232f:	mov    al,0x1
   140052331:	mov    BYTE PTR [rsp+0x20],al
   140052335:	jmp    0x140052303
   140052337:	mov    eax,DWORD PTR [rbx+0x18]
   14005233a:	sub    eax,DWORD PTR [rdi+0x38]
   14005233d:	add    eax,DWORD PTR [rbx+0x8]
   140052340:	cmp    r14d,eax
   140052343:	jle    0x140052478
   140052349:	mov    rcx,QWORD PTR [rdi+0x38]
   14005234d:	sub    r14d,eax
   140052350:	movsxd rdx,eax
   140052353:	movsxd r8,r14d
   140052356:	add    rdx,rcx
   140052359:	call   0x140059180
   14005235e:	mov    eax,DWORD PTR [rbx+0x2c]
   140052361:	xor    r10d,r10d
   140052364:	sub    eax,DWORD PTR [rbx+0x8]
   140052367:	add    DWORD PTR [rbx+0x24],eax
   14005236a:	mov    QWORD PTR [rbx+0x2c],r10
   14005236e:	mov    rax,QWORD PTR [rdi+0x38]
   140052372:	mov    QWORD PTR [rbx+0x18],rax
   140052376:	mov    DWORD PTR [rbx+0x8],r10d
   14005237a:	test   r13d,r13d
   14005237d:	je     0x140052466
   140052383:	mov    rcx,QWORD PTR [rdi+0x28]
   140052387:	mov    edx,0x95
   14005238c:	mov    rax,rbx
   14005238f:	mov    r8,QWORD PTR [rcx+0x4ae0]
   140052396:	lea    r11d,[rdx-0x15]
   14005239a:	mov    r9d,DWORD PTR [rcx+0x4aec]
   1400523a1:	movups xmm0,XMMWORD PTR [rax]
   1400523a4:	movups XMMWORD PTR [rcx],xmm0
   1400523a7:	movups xmm1,XMMWORD PTR [rax+0x10]
   1400523ab:	movups XMMWORD PTR [rcx+0x10],xmm1
   1400523af:	movups xmm0,XMMWORD PTR [rax+0x20]
   1400523b3:	movups XMMWORD PTR [rcx+0x20],xmm0
   1400523b7:	movups xmm1,XMMWORD PTR [rax+0x30]
   1400523bb:	movups XMMWORD PTR [rcx+0x30],xmm1
   1400523bf:	movups xmm0,XMMWORD PTR [rax+0x40]
   1400523c3:	movups XMMWORD PTR [rcx+0x40],xmm0
   1400523c7:	movups xmm1,XMMWORD PTR [rax+0x50]
   1400523cb:	movups XMMWORD PTR [rcx+0x50],xmm1
   1400523cf:	movups xmm0,XMMWORD PTR [rax+0x60]
   1400523d3:	movups XMMWORD PTR [rcx+0x60],xmm0
   1400523d7:	add    rcx,r11
   1400523da:	movups xmm1,XMMWORD PTR [rax+0x70]
   1400523de:	add    rax,r11
   1400523e1:	movups XMMWORD PTR [rcx-0x10],xmm1
   1400523e5:	sub    rdx,0x1
   1400523e9:	jne    0x1400523a1
   1400523eb:	movups xmm0,XMMWORD PTR [rax]
   1400523ee:	movups XMMWORD PTR [rcx],xmm0
   1400523f1:	movups xmm1,XMMWORD PTR [rax+0x10]
   1400523f5:	movups XMMWORD PTR [rcx+0x10],xmm1
   1400523f9:	movups xmm0,XMMWORD PTR [rax+0x20]
   1400523fd:	movups XMMWORD PTR [rcx+0x20],xmm0
   140052401:	movups xmm1,XMMWORD PTR [rax+0x30]
   140052405:	movups XMMWORD PTR [rcx+0x30],xmm1
   140052409:	movups xmm0,XMMWORD PTR [rax+0x40]
   14005240d:	movups XMMWORD PTR [rcx+0x40],xmm0
   140052411:	movups xmm1,XMMWORD PTR [rax+0x50]
   140052415:	movups XMMWORD PTR [rcx+0x50],xmm1
   140052419:	movups xmm0,XMMWORD PTR [rax+0x60]
   14005241d:	movups XMMWORD PTR [rcx+0x60],xmm0
   140052421:	mov    rax,QWORD PTR [rax+0x70]
   140052425:	mov    QWORD PTR [rcx+0x70],rax
   140052429:	mov    rax,QWORD PTR [rdi+0x28]
   14005242d:	mov    QWORD PTR [rax+0x4ae0],r8
   140052434:	mov    rax,QWORD PTR [rdi+0x28]
   140052438:	mov    DWORD PTR [rax+0x4aec],r9d
   14005243f:	mov    BYTE PTR [rbx+0x4adf],r10b
   140052446:	jmp    0x140052466
   140052448:	test   ebx,ebx
   14005244a:	js     0x140052478
   14005244c:	jle    0x140052463
   14005244e:	mov    rcx,QWORD PTR [rdi+0x38]
   140052452:	movsxd rdx,r12d
   140052455:	add    rdx,rcx
   140052458:	movsxd r8,ebx
   14005245b:	call   0x140059180
   140052460:	xor    r10d,r10d
   140052463:	mov    r14d,ebx
   140052466:	mov    r12d,r10d
   140052469:	mov    bl,BYTE PTR [rsp+0x21]
   14005246d:	cmp    BYTE PTR [rsp+0x20],r10b
   140052472:	je     0x1400520a5
   140052478:	mov    rax,QWORD PTR [rdi+0xe968]
   14005247f:	mov    rcx,rdi
   140052482:	and    QWORD PTR [rdi+0xc0],rax
   140052489:	call   0x14004f1dc
   14005248e:	mov    ecx,DWORD PTR [rsp+0x24]
   140052492:	mov    ebx,0x95
   140052497:	imul   rdx,rcx,0x4af8
   14005249e:	mov    rcx,QWORD PTR [rdi+0x28]
   1400524a2:	lea    esi,[rbx-0x15]
   1400524a5:	movups xmm0,XMMWORD PTR [rdx+rcx*1+0x24]
   1400524aa:	lea    r8,[rdx+0x3c]
   1400524ae:	add    r8,rcx
   1400524b1:	movups XMMWORD PTR [rdi+0xd8],xmm0
   1400524b8:	mov    eax,DWORD PTR [rdx+rcx*1+0x34]
   1400524bc:	mov    DWORD PTR [rdi+0xe8],eax
   1400524c2:	movups xmm0,XMMWORD PTR [r8]
   1400524c6:	movups XMMWORD PTR [rbp+0x0],xmm0
   1400524ca:	movups xmm1,XMMWORD PTR [r8+0x10]
   1400524cf:	movups XMMWORD PTR [rbp+0x10],xmm1
   1400524d3:	movups xmm0,XMMWORD PTR [r8+0x20]
   1400524d8:	movups XMMWORD PTR [rbp+0x20],xmm0
   1400524dc:	movups xmm1,XMMWORD PTR [r8+0x30]
   1400524e1:	movups XMMWORD PTR [rbp+0x30],xmm1
   1400524e5:	movups xmm0,XMMWORD PTR [r8+0x40]
   1400524ea:	movups XMMWORD PTR [rbp+0x40],xmm0
   1400524ee:	movups xmm1,XMMWORD PTR [r8+0x50]
   1400524f3:	movups XMMWORD PTR [rbp+0x50],xmm1
   1400524f7:	movups xmm0,XMMWORD PTR [r8+0x60]
   1400524fc:	movups XMMWORD PTR [rbp+0x60],xmm0
   140052500:	add    rbp,rsi
   140052503:	movups xmm1,XMMWORD PTR [r8+0x70]
   140052508:	add    r8,rsi
   14005250b:	movups XMMWORD PTR [rbp-0x10],xmm1
   14005250f:	sub    rbx,0x1
   140052513:	jne    0x1400524c2
   140052515:	movups xmm0,XMMWORD PTR [r8]
   140052519:	movups XMMWORD PTR [rbp+0x0],xmm0
   14005251d:	mov    rax,QWORD PTR [r8+0x10]
   140052521:	mov    QWORD PTR [rbp+0x10],rax
   140052525:	mov    eax,DWORD PTR [r8+0x18]
   140052529:	mov    DWORD PTR [rbp+0x18],eax
   14005252c:	mov    rcx,QWORD PTR [rsp+0x230]
   140052534:	xor    rcx,rsp
   140052537:	call   0x140055f90
   14005253c:	lea    r11,[rsp+0x240]
   140052544:	mov    rbx,QWORD PTR [r11+0x38]
   140052548:	mov    rbp,QWORD PTR [r11+0x40]
   14005254c:	mov    rsi,QWORD PTR [r11+0x48]
   140052550:	mov    rsp,r11
   140052553:	pop    r15
   140052555:	pop    r14
   140052557:	pop    r13
   140052559:	pop    r12
   14005255b:	pop    rdi
   14005255c:	ret    
   14005255d:	int3   
   14005255e:	int3   
   14005255f:	int3   
   140052560:	mov    QWORD PTR [rsp+0x18],rbx
   140052565:	mov    QWORD PTR [rsp+0x8],rcx
   14005256a:	push   rbp
   14005256b:	push   rsi
   14005256c:	push   rdi
   14005256d:	push   r12
   14005256f:	push   r13
   140052571:	push   r14
   140052573:	push   r15
   140052575:	sub    rsp,0x30
   140052579:	xor    ebp,ebp
   14005257b:	mov    rbx,rdx
   14005257e:	mov    rsi,rcx
   140052581:	lea    r15d,[rbp+0x1]
   140052585:	cmp    BYTE PTR [rdx+0x38],bpl
   140052589:	jne    0x1400525b0
   14005258b:	mov    BYTE PTR [rdx+0x38],r15b
   14005258f:	lea    r9,[rdx+0x3c]
   140052593:	lea    r8,[rdx+0x24]
   140052597:	add    rdx,0x8
   14005259b:	call   0x14004d958
   1400525a0:	test   al,al
   1400525a2:	jne    0x1400525b0
   1400525a4:	mov    BYTE PTR [rbx+0x4adc],r15b
   1400525ab:	jmp    0x140052e3e
   1400525b0:	mov    ecx,DWORD PTR [rbx+0x30]
   1400525b3:	lea    rdi,[rbx+0x8]
   1400525b7:	mov    edx,DWORD PTR [rbx+0x24]
   1400525ba:	add    ecx,edx
   1400525bc:	cmp    DWORD PTR [rdi],ecx
   1400525be:	jg     0x1400525a4
   1400525c0:	mov    r13d,DWORD PTR [rbx+0x2c]
   1400525c4:	mov    r12d,DWORD PTR [rbx+0x4ad8]
   1400525cb:	dec    r13d
   1400525ce:	add    r13d,edx
   1400525d1:	mov    DWORD PTR [rbx+0x4ae8],ebp
   1400525d7:	sub    r12d,0x10
   1400525db:	cmp    r13d,r12d
   1400525de:	mov    eax,r12d
   1400525e1:	cmovl  eax,r13d
   1400525e5:	mov    DWORD PTR [rsp+0x78],eax
   1400525e9:	mov    ecx,DWORD PTR [rdi]
   1400525eb:	cmp    ecx,eax
   1400525ed:	jl     0x140052624
   1400525ef:	cmp    ecx,r13d
   1400525f2:	jg     0x140052e3e
   1400525f8:	jne    0x140052606
   1400525fa:	mov    eax,DWORD PTR [rbx+0x28]
   1400525fd:	cmp    DWORD PTR [rbx+0xc],eax
   140052600:	jge    0x140052e3e
   140052606:	cmp    ecx,r12d
   140052609:	jl     0x140052618
   14005260b:	cmp    BYTE PTR [rbx+0x4ade],bpl
   140052612:	je     0x140052e37
   140052618:	cmp    ecx,DWORD PTR [rbx+0x4ad8]
   14005261e:	jge    0x140052e37
   140052624:	mov    ecx,DWORD PTR [rbx+0x4aec]
   14005262a:	lea    eax,[rcx-0x8]
   14005262d:	cmp    DWORD PTR [rbx+0x4ae8],eax
   140052633:	jbe    0x140052672
   140052635:	lea    eax,[rcx+rcx*1]
   140052638:	mov    rcx,QWORD PTR [rbx+0x4ae0]
   14005263f:	lea    rdx,[rax+rax*2]
   140052643:	mov    DWORD PTR [rbx+0x4aec],eax
   140052649:	shl    rdx,0x2
   14005264d:	call   0x14005a940
   140052652:	mov    rsi,rax
   140052655:	test   rax,rax
   140052658:	jne    0x140052666
   14005265a:	lea    rcx,[rip+0x421ff]        # 0x140094860
   140052661:	call   0x14001bd24
   140052666:	mov    QWORD PTR [rbx+0x4ae0],rsi
   14005266d:	mov    rsi,QWORD PTR [rsp+0x70]
   140052672:	mov    eax,DWORD PTR [rbx+0x4ae8]
   140052678:	mov    r14,QWORD PTR [rbx+0x4ae0]
   14005267f:	lea    rbp,[rax+rax*2]
   140052683:	inc    eax
   140052685:	mov    DWORD PTR [rbx+0x4ae8],eax
   14005268b:	movsxd r10,DWORD PTR [rdi]
   14005268e:	mov    rdx,QWORD PTR [rdi+0x10]
   140052692:	mov    r11d,DWORD PTR [rdi+0x4]
   140052696:	lea    eax,[r10+0x1]
   14005269a:	movzx  r8d,BYTE PTR [r10+rdx*1]
   14005269f:	shl    r8d,0x8
   1400526a3:	movsxd rcx,eax
   1400526a6:	movzx  eax,BYTE PTR [rcx+rdx*1]
   1400526aa:	or     r8d,eax
   1400526ad:	lea    eax,[r10+0x2]
   1400526b1:	shl    r8d,0x8
   1400526b5:	movsxd rcx,eax
   1400526b8:	movzx  eax,BYTE PTR [rcx+rdx*1]
   1400526bc:	mov    ecx,0x8
   1400526c1:	sub    ecx,r11d
   1400526c4:	or     r8d,eax
   1400526c7:	shr    r8d,cl
   1400526ca:	mov    ecx,DWORD PTR [rbx+0xc0]
   1400526d0:	and    r8d,0xfffe
   1400526d7:	cmp    r8d,DWORD PTR [rbx+rcx*4+0x40]
   1400526dc:	jae    0x140052711
   1400526de:	mov    eax,0x10
   1400526e3:	sub    eax,ecx
   1400526e5:	mov    cl,al
   1400526e7:	shr    r8d,cl
   1400526ea:	movzx  ecx,BYTE PTR [r8+rbx*1+0xc4]
   1400526f3:	add    ecx,r11d
   1400526f6:	mov    eax,ecx
   1400526f8:	shr    eax,0x3
   1400526fb:	add    eax,r10d
   1400526fe:	and    ecx,0x7
   140052701:	mov    DWORD PTR [rdi],eax
   140052703:	mov    DWORD PTR [rdi+0x4],ecx
   140052706:	movzx  ecx,WORD PTR [rbx+r8*2+0x4c4]
   14005270f:	jmp    0x140052782
   140052711:	mov    r9d,0xf
   140052717:	inc    ecx
   140052719:	cmp    ecx,r9d
   14005271c:	jae    0x14005273e
   14005271e:	mov    edx,ecx
   140052720:	add    rdx,0x10
   140052724:	lea    rdx,[rbx+rdx*4]
   140052728:	cmp    r8d,DWORD PTR [rdx]
   14005272b:	jb     0x14005273b
   14005272d:	add    ecx,r15d
   140052730:	add    rdx,0x4
   140052734:	cmp    ecx,r9d
   140052737:	jb     0x140052728
   140052739:	jmp    0x14005273e
   14005273b:	mov    r9d,ecx
   14005273e:	lea    ecx,[r11+r9*1]
   140052742:	mov    eax,ecx
   140052744:	and    ecx,0x7
   140052747:	shr    eax,0x3
   14005274a:	add    eax,r10d
   14005274d:	mov    DWORD PTR [rdi+0x4],ecx
   140052750:	mov    DWORD PTR [rdi],eax
   140052752:	mov    ecx,0x10
   140052757:	sub    ecx,r9d
   14005275a:	lea    eax,[r9-0x1]
   14005275e:	sub    r8d,DWORD PTR [rbx+rax*4+0x40]
   140052763:	shr    r8d,cl
   140052766:	mov    eax,r9d
   140052769:	add    r8d,DWORD PTR [rbx+rax*4+0x80]
   140052771:	cmp    r8d,DWORD PTR [rbx+0x3c]
   140052775:	sbb    eax,eax
   140052777:	and    eax,r8d
   14005277a:	movzx  ecx,WORD PTR [rbx+rax*2+0xcc4]
   140052782:	cmp    ecx,0x100
   140052788:	jae    0x1400527e1
   14005278a:	cmp    DWORD PTR [rbx+0x4ae8],r15d
   140052791:	jbe    0x1400527ce
   140052793:	lea    rdx,[r14+rbp*4]
   140052797:	xor    eax,eax
   140052799:	cmp    DWORD PTR [rdx-0xc],eax
   14005279c:	jne    0x1400527ce
   14005279e:	movzx  eax,WORD PTR [rdx-0x8]
   1400527a2:	mov    r8d,0x3
   1400527a8:	cmp    ax,r8w
   1400527ac:	jae    0x1400527ce
   1400527ae:	add    ax,r15w
   1400527b2:	movzx  eax,ax
   1400527b5:	mov    WORD PTR [rdx-0x8],ax
   1400527b9:	mov    BYTE PTR [rax+rdx*1-0x4],cl
   1400527bd:	dec    DWORD PTR [rbx+0x4ae8]
   1400527c3:	mov    eax,DWORD PTR [rsp+0x78]
   1400527c7:	xor    ebp,ebp
   1400527c9:	jmp    0x1400525e9
   1400527ce:	xor    edx,edx
   1400527d0:	mov    DWORD PTR [r14+rbp*4],edx
   1400527d4:	mov    BYTE PTR [r14+rbp*4+0x8],cl
   1400527d9:	mov    WORD PTR [r14+rbp*4+0x4],dx
   1400527df:	jmp    0x1400527c3
   1400527e1:	cmp    ecx,0x106
   1400527e7:	jb     0x140052c01
   1400527ed:	lea    r11d,[rcx-0x106]
   1400527f4:	cmp    r11d,0x8
   1400527f8:	jae    0x140052803
   1400527fa:	add    r11d,0x2
   1400527fe:	jmp    0x140052884
   140052803:	mov    esi,r11d
   140052806:	and    r11d,0x3
   14005280a:	or     r11d,0x4
   14005280e:	shr    esi,0x2
   140052811:	sub    esi,r15d
   140052814:	mov    ecx,esi
   140052816:	shl    r11d,cl
   140052819:	add    r11d,0x2
   14005281d:	test   esi,esi
   14005281f:	je     0x140052884
   140052821:	movsxd r10,DWORD PTR [rdi]
   140052824:	mov    rdx,QWORD PTR [rdi+0x10]
   140052828:	mov    r9d,DWORD PTR [rdi+0x4]
   14005282c:	lea    eax,[r10+0x1]
   140052830:	movzx  r8d,BYTE PTR [r10+rdx*1]
   140052835:	movsxd rcx,eax
   140052838:	shl    r8d,0x8
   14005283c:	movzx  eax,BYTE PTR [rcx+rdx*1]
   140052840:	or     r8d,eax
   140052843:	lea    eax,[r10+0x2]
   140052847:	movsxd rcx,eax
   14005284a:	shl    r8d,0x8
   14005284e:	movzx  eax,BYTE PTR [rcx+rdx*1]
   140052852:	mov    ecx,0x8
   140052857:	sub    ecx,r9d
   14005285a:	or     r8d,eax
   14005285d:	shr    r8d,cl
   140052860:	mov    ecx,0x10
   140052865:	sub    ecx,esi
   140052867:	movzx  edx,r8w
   14005286b:	shr    edx,cl
   14005286d:	lea    ecx,[r9+rsi*1]
   140052871:	mov    eax,ecx
   140052873:	add    r11d,edx
   140052876:	shr    eax,0x3
   140052879:	add    eax,r10d
   14005287c:	and    ecx,0x7
   14005287f:	mov    DWORD PTR [rdi],eax
   140052881:	mov    DWORD PTR [rdi+0x4],ecx
   140052884:	movsxd r10,DWORD PTR [rdi]
   140052887:	mov    rdx,QWORD PTR [rdi+0x10]
   14005288b:	mov    esi,DWORD PTR [rdi+0x4]
   14005288e:	lea    eax,[r10+0x1]
   140052892:	movzx  r8d,BYTE PTR [r10+rdx*1]
   140052897:	shl    r8d,0x8
   14005289b:	movsxd rcx,eax
   14005289e:	movzx  eax,BYTE PTR [rcx+rdx*1]
   1400528a2:	or     r8d,eax
   1400528a5:	lea    eax,[r10+0x2]
   1400528a9:	shl    r8d,0x8
   1400528ad:	movsxd rcx,eax
   1400528b0:	movzx  eax,BYTE PTR [rcx+rdx*1]
   1400528b4:	mov    ecx,0x8
   1400528b9:	sub    ecx,esi
   1400528bb:	or     r8d,eax
   1400528be:	shr    r8d,cl
   1400528c1:	mov    ecx,DWORD PTR [rbx+0xfac]
   1400528c7:	and    r8d,0xfffe
   1400528ce:	cmp    r8d,DWORD PTR [rbx+rcx*4+0xf2c]
   1400528d6:	jae    0x14005290a
   1400528d8:	mov    eax,0x10
   1400528dd:	sub    eax,ecx
   1400528df:	mov    cl,al
   1400528e1:	shr    r8d,cl
   1400528e4:	movzx  ecx,BYTE PTR [r8+rbx*1+0xfb0]
   1400528ed:	add    ecx,esi
   1400528ef:	mov    eax,ecx
   1400528f1:	shr    eax,0x3
   1400528f4:	add    eax,r10d
   1400528f7:	and    ecx,0x7
   1400528fa:	mov    DWORD PTR [rdi],eax
   1400528fc:	mov    DWORD PTR [rdi+0x4],ecx
   1400528ff:	movzx  r10d,WORD PTR [rbx+r8*2+0x13b0]
   140052908:	jmp    0x140052985
   14005290a:	mov    r9d,0xf
   140052910:	inc    ecx
   140052912:	cmp    ecx,r9d
   140052915:	jae    0x14005293a
   140052917:	mov    edx,ecx
   140052919:	add    rdx,0x3cb
   140052920:	lea    rdx,[rbx+rdx*4]
   140052924:	cmp    r8d,DWORD PTR [rdx]
   140052927:	jb     0x140052937
   140052929:	add    ecx,r15d
   14005292c:	add    rdx,0x4
   140052930:	cmp    ecx,r9d
   140052933:	jb     0x140052924
   140052935:	jmp    0x14005293a
   140052937:	mov    r9d,ecx
   14005293a:	lea    ecx,[rsi+r9*1]
   14005293e:	mov    eax,ecx
   140052940:	and    ecx,0x7
   140052943:	shr    eax,0x3
   140052946:	add    eax,r10d
   140052949:	mov    DWORD PTR [rdi+0x4],ecx
   14005294c:	mov    DWORD PTR [rdi],eax
   14005294e:	mov    ecx,0x10
   140052953:	sub    ecx,r9d
   140052956:	lea    eax,[r9-0x1]
   14005295a:	sub    r8d,DWORD PTR [rbx+rax*4+0xf2c]
   140052962:	mov    eax,r9d
   140052965:	shr    r8d,cl
   140052968:	add    r8d,DWORD PTR [rbx+rax*4+0xf6c]
   140052970:	cmp    r8d,DWORD PTR [rbx+0xf28]
   140052977:	sbb    eax,eax
   140052979:	and    eax,r8d
   14005297c:	movzx  r10d,WORD PTR [rbx+rax*2+0x1bb0]
   140052985:	cmp    r10d,0x4
   140052989:	jae    0x140052993
   14005298b:	inc    r10d
   14005298e:	jmp    0x140052bcf
   140052993:	mov    esi,r10d
   140052996:	and    r10d,r15d
   140052999:	or     r10d,0x2
   14005299d:	shr    esi,1
   14005299f:	sub    esi,r15d
   1400529a2:	mov    ecx,esi
   1400529a4:	shl    r10d,cl
   1400529a7:	add    r10d,r15d
   1400529aa:	test   esi,esi
   1400529ac:	je     0x140052bcf
   1400529b2:	cmp    esi,0x4
   1400529b5:	jb     0x140052b50
   1400529bb:	jbe    0x140052a47
   1400529c1:	movsxd rdx,DWORD PTR [rdi]
   1400529c4:	mov    r8,QWORD PTR [rdi+0x10]
   1400529c8:	lea    eax,[rdx+0x1]
   1400529cb:	movzx  r9d,BYTE PTR [rdx+r8*1]
   1400529d0:	shl    r9d,0x8
   1400529d4:	movsxd rcx,eax
   1400529d7:	movzx  eax,BYTE PTR [rcx+r8*1]
   1400529dc:	or     r9d,eax
   1400529df:	lea    eax,[rdx+0x2]
   1400529e2:	shl    r9d,0x8
   1400529e6:	movsxd rcx,eax
   1400529e9:	movzx  eax,BYTE PTR [rcx+r8*1]
   1400529ee:	or     r9d,eax
   1400529f1:	lea    eax,[rdx+0x3]
   1400529f4:	movsxd rcx,eax
   1400529f7:	shl    r9d,0x8
   1400529fb:	movzx  eax,BYTE PTR [rcx+r8*1]
   140052a00:	mov    ecx,DWORD PTR [rdi+0x4]
   140052a03:	or     r9d,eax
   140052a06:	shl    r9d,cl
   140052a09:	lea    eax,[rdx+0x4]
   140052a0c:	movsxd rcx,eax
   140052a0f:	movzx  edx,BYTE PTR [rcx+r8*1]
   140052a14:	mov    ecx,0x8
   140052a19:	sub    cl,BYTE PTR [rdi+0x4]
   140052a1c:	shr    edx,cl
   140052a1e:	mov    ecx,0x24
   140052a23:	sub    ecx,esi
   140052a25:	or     r9d,edx
   140052a28:	shr    r9d,cl
   140052a2b:	mov    ecx,DWORD PTR [rdi+0x4]
   140052a2e:	add    ecx,0xfffffffc
   140052a31:	shl    r9d,0x4
   140052a35:	add    ecx,esi
   140052a37:	add    r10d,r9d
   140052a3a:	mov    eax,ecx
   140052a3c:	shr    eax,0x3
   140052a3f:	add    DWORD PTR [rdi],eax
   140052a41:	and    ecx,0x7
   140052a44:	mov    DWORD PTR [rdi+0x4],ecx
   140052a47:	movsxd rsi,DWORD PTR [rdi]
   140052a4a:	mov    rdx,QWORD PTR [rdi+0x10]
   140052a4e:	mov    r15d,DWORD PTR [rdi+0x4]
   140052a52:	lea    eax,[rsi+0x1]
   140052a55:	movzx  r8d,BYTE PTR [rsi+rdx*1]
   140052a5a:	shl    r8d,0x8
   140052a5e:	movsxd rcx,eax
   140052a61:	movzx  eax,BYTE PTR [rcx+rdx*1]
   140052a65:	or     r8d,eax
   140052a68:	lea    eax,[rsi+0x2]
   140052a6b:	shl    r8d,0x8
   140052a6f:	movsxd rcx,eax
   140052a72:	movzx  eax,BYTE PTR [rcx+rdx*1]
   140052a76:	mov    ecx,0x8
   140052a7b:	sub    ecx,r15d
   140052a7e:	or     r8d,eax
   140052a81:	shr    r8d,cl
   140052a84:	mov    ecx,DWORD PTR [rbx+0x1e98]
   140052a8a:	and    r8d,0xfffe
   140052a91:	cmp    r8d,DWORD PTR [rbx+rcx*4+0x1e18]
   140052a99:	jae    0x140052acd
   140052a9b:	mov    eax,0x10
   140052aa0:	sub    eax,ecx
   140052aa2:	mov    cl,al
   140052aa4:	shr    r8d,cl
   140052aa7:	movzx  ecx,BYTE PTR [r8+rbx*1+0x1e9c]
   140052ab0:	add    ecx,r15d
   140052ab3:	mov    eax,ecx
   140052ab5:	shr    eax,0x3
   140052ab8:	add    eax,esi
   140052aba:	and    ecx,0x7
   140052abd:	mov    DWORD PTR [rdi],eax
   140052abf:	mov    DWORD PTR [rdi+0x4],ecx
   140052ac2:	movzx  eax,WORD PTR [rbx+r8*2+0x229c]
   140052acb:	jmp    0x140052b45
   140052acd:	mov    r9d,0xf
   140052ad3:	inc    ecx
   140052ad5:	cmp    ecx,r9d
   140052ad8:	jae    0x140052afc
   140052ada:	mov    edx,ecx
   140052adc:	add    rdx,0x786
   140052ae3:	lea    rdx,[rbx+rdx*4]
   140052ae7:	cmp    r8d,DWORD PTR [rdx]
   140052aea:	jb     0x140052af9
   140052aec:	inc    ecx
   140052aee:	add    rdx,0x4
   140052af2:	cmp    ecx,r9d
   140052af5:	jb     0x140052ae7
   140052af7:	jmp    0x140052afc
   140052af9:	mov    r9d,ecx
   140052afc:	lea    ecx,[r15+r9*1]
   140052b00:	mov    eax,ecx
   140052b02:	and    ecx,0x7
   140052b05:	shr    eax,0x3
   140052b08:	add    eax,esi
   140052b0a:	mov    DWORD PTR [rdi+0x4],ecx
   140052b0d:	mov    DWORD PTR [rdi],eax
   140052b0f:	mov    ecx,0x10
   140052b14:	sub    ecx,r9d
   140052b17:	lea    eax,[r9-0x1]
   140052b1b:	sub    r8d,DWORD PTR [rbx+rax*4+0x1e18]
   140052b23:	mov    eax,r9d
   140052b26:	shr    r8d,cl
   140052b29:	add    r8d,DWORD PTR [rbx+rax*4+0x1e58]
   140052b31:	cmp    r8d,DWORD PTR [rbx+0x1e14]
   140052b38:	sbb    eax,eax
   140052b3a:	and    eax,r8d
   140052b3d:	movzx  eax,WORD PTR [rbx+rax*2+0x2a9c]
   140052b45:	add    r10d,eax
   140052b48:	mov    r15d,0x1
   140052b4e:	jmp    0x140052bcf
   140052b50:	movsxd rdx,DWORD PTR [rdi]
   140052b53:	mov    r8,QWORD PTR [rdi+0x10]
   140052b57:	lea    eax,[rdx+0x1]
   140052b5a:	movzx  r9d,BYTE PTR [rdx+r8*1]
   140052b5f:	movsxd rcx,eax
   140052b62:	shl    r9d,0x8
   140052b66:	movzx  eax,BYTE PTR [rcx+r8*1]
   140052b6b:	or     r9d,eax
   140052b6e:	lea    eax,[rdx+0x2]
   140052b71:	movsxd rcx,eax
   140052b74:	shl    r9d,0x8
   140052b78:	movzx  eax,BYTE PTR [rcx+r8*1]
   140052b7d:	or     r9d,eax
   140052b80:	lea    eax,[rdx+0x3]
   140052b83:	movsxd rcx,eax
   140052b86:	shl    r9d,0x8
   140052b8a:	movzx  eax,BYTE PTR [rcx+r8*1]
   140052b8f:	mov    ecx,DWORD PTR [rdi+0x4]
   140052b92:	or     r9d,eax
   140052b95:	shl    r9d,cl
   140052b98:	lea    eax,[rdx+0x4]
   140052b9b:	movsxd rcx,eax
   140052b9e:	movzx  edx,BYTE PTR [rcx+r8*1]
   140052ba3:	mov    ecx,0x8
   140052ba8:	sub    cl,BYTE PTR [rdi+0x4]
   140052bab:	shr    edx,cl
   140052bad:	mov    ecx,0x20
   140052bb2:	sub    ecx,esi
   140052bb4:	or     r9d,edx
   140052bb7:	shr    r9d,cl
   140052bba:	mov    ecx,DWORD PTR [rdi+0x4]
   140052bbd:	add    r10d,r9d
   140052bc0:	add    ecx,esi
   140052bc2:	mov    eax,ecx
   140052bc4:	shr    eax,0x3
   140052bc7:	add    DWORD PTR [rdi],eax
   140052bc9:	and    ecx,0x7
   140052bcc:	mov    DWORD PTR [rdi+0x4],ecx
   140052bcf:	cmp    r10d,0x100
   140052bd6:	jbe    0x140052bf3
   140052bd8:	inc    r11d
   140052bdb:	cmp    r10d,0x2000
   140052be2:	jbe    0x140052bf3
   140052be4:	add    r11d,r15d
   140052be7:	cmp    r10d,0x40000
   140052bee:	jbe    0x140052bf3
   140052bf0:	add    r11d,r15d
   140052bf3:	mov    DWORD PTR [r14+rbp*4],r15d
   140052bf7:	mov    DWORD PTR [r14+rbp*4+0x8],r10d
   140052bfc:	jmp    0x140052e27
   140052c01:	cmp    ecx,0x100
   140052c07:	jne    0x140052c6c
   140052c09:	lea    r8,[rsp+0x20]
   140052c0e:	mov    rdx,rdi
   140052c11:	mov    rcx,rsi
   140052c14:	call   0x14004cb7c
   140052c19:	movzx  eax,BYTE PTR [rsp+0x20]
   140052c1e:	mov    WORD PTR [r14+rbp*4+0x4],ax
   140052c24:	mov    eax,DWORD PTR [rsp+0x24]
   140052c28:	mov    DWORD PTR [r14+rbp*4+0x8],eax
   140052c2d:	mov    DWORD PTR [r14+rbp*4],0x4
   140052c35:	mov    eax,DWORD PTR [rbx+0x4ae8]
   140052c3b:	mov    rcx,QWORD PTR [rbx+0x4ae0]
   140052c42:	lea    rdx,[rax+rax*2]
   140052c46:	inc    eax
   140052c48:	mov    DWORD PTR [rbx+0x4ae8],eax
   140052c4e:	movzx  eax,BYTE PTR [rsp+0x2c]
   140052c53:	mov    WORD PTR [rcx+rdx*4+0x4],ax
   140052c58:	mov    eax,DWORD PTR [rsp+0x28]
   140052c5c:	mov    DWORD PTR [rcx+rdx*4+0x8],eax
   140052c60:	mov    DWORD PTR [rcx+rdx*4],0x4
   140052c67:	jmp    0x1400527c3
   140052c6c:	cmp    ecx,0x101
   140052c72:	jne    0x140052c81
   140052c74:	mov    DWORD PTR [r14+rbp*4],0x2
   140052c7c:	jmp    0x1400527c3
   140052c81:	lea    eax,[rcx-0x102]
   140052c87:	mov    r9d,0x3
   140052c8d:	mov    DWORD PTR [r14+rbp*4+0x8],eax
   140052c92:	mov    DWORD PTR [r14+rbp*4],r9d
   140052c96:	movsxd r10,DWORD PTR [rdi]
   140052c99:	mov    rdx,QWORD PTR [rdi+0x10]
   140052c9d:	mov    r11d,DWORD PTR [rdi+0x4]
   140052ca1:	lea    eax,[r10+0x1]
   140052ca5:	movzx  r8d,BYTE PTR [r10+rdx*1]
   140052caa:	shl    r8d,0x8
   140052cae:	movsxd rcx,eax
   140052cb1:	movzx  eax,BYTE PTR [rcx+rdx*1]
   140052cb5:	or     r8d,eax
   140052cb8:	lea    eax,[r10+0x2]
   140052cbc:	shl    r8d,0x8
   140052cc0:	movsxd rcx,eax
   140052cc3:	movzx  eax,BYTE PTR [rcx+rdx*1]
   140052cc7:	lea    ecx,[r9+0x5]
   140052ccb:	sub    ecx,r11d
   140052cce:	or     r8d,eax
   140052cd1:	shr    r8d,cl
   140052cd4:	mov    ecx,DWORD PTR [rbx+0x2d84]
   140052cda:	and    r8d,0xfffe
   140052ce1:	cmp    r8d,DWORD PTR [rbx+rcx*4+0x2d04]
   140052ce9:	jae    0x140052d1d
   140052ceb:	lea    eax,[r9+0xd]
   140052cef:	sub    eax,ecx
   140052cf1:	mov    cl,al
   140052cf3:	shr    r8d,cl
   140052cf6:	movzx  ecx,BYTE PTR [rbx+r8*1+0x2d88]
   140052cff:	add    ecx,r11d
   140052d02:	mov    eax,ecx
   140052d04:	shr    eax,0x3
   140052d07:	add    eax,r10d
   140052d0a:	and    ecx,0x7
   140052d0d:	mov    DWORD PTR [rdi],eax
   140052d0f:	mov    DWORD PTR [rdi+0x4],ecx
   140052d12:	movzx  r11d,WORD PTR [rbx+r8*2+0x3188]
   140052d1b:	jmp    0x140052d98
   140052d1d:	mov    edx,0xf
   140052d22:	inc    ecx
   140052d24:	cmp    ecx,edx
   140052d26:	jae    0x140052d50
   140052d28:	mov    r9d,ecx
   140052d2b:	add    r9,0xb41
   140052d32:	lea    r9,[rbx+r9*4]
   140052d36:	cmp    r8d,DWORD PTR [r9]
   140052d39:	jb     0x140052d48
   140052d3b:	add    ecx,r15d
   140052d3e:	add    r9,0x4
   140052d42:	cmp    ecx,edx
   140052d44:	jb     0x140052d36
   140052d46:	jmp    0x140052d4a
   140052d48:	mov    edx,ecx
   140052d4a:	mov    r9d,0x3
   140052d50:	lea    ecx,[rdx+r11*1]
   140052d54:	mov    eax,ecx
   140052d56:	and    ecx,0x7
   140052d59:	shr    eax,0x3
   140052d5c:	add    eax,r10d
   140052d5f:	mov    DWORD PTR [rdi+0x4],ecx
   140052d62:	mov    DWORD PTR [rdi],eax
   140052d64:	mov    ecx,0x10
   140052d69:	sub    ecx,edx
   140052d6b:	lea    eax,[rdx-0x1]
   140052d6e:	sub    r8d,DWORD PTR [rbx+rax*4+0x2d04]
   140052d76:	mov    eax,edx
   140052d78:	shr    r8d,cl
   140052d7b:	add    r8d,DWORD PTR [rbx+rax*4+0x2d44]
   140052d83:	cmp    r8d,DWORD PTR [rbx+0x2d00]
   140052d8a:	sbb    eax,eax
   140052d8c:	and    eax,r8d
   140052d8f:	movzx  r11d,WORD PTR [rbx+rax*2+0x3988]
   140052d98:	cmp    r11d,0x8
   140052d9c:	jae    0x140052da7
   140052d9e:	add    r11d,0x2
   140052da2:	jmp    0x140052e27
   140052da7:	mov    esi,r11d
   140052daa:	and    r11d,r9d
   140052dad:	or     r11d,0x4
   140052db1:	shr    esi,0x2
   140052db4:	sub    esi,r15d
   140052db7:	mov    ecx,esi
   140052db9:	shl    r11d,cl
   140052dbc:	add    r11d,0x2
   140052dc0:	test   esi,esi
   140052dc2:	je     0x140052e27
   140052dc4:	movsxd r10,DWORD PTR [rdi]
   140052dc7:	mov    rdx,QWORD PTR [rdi+0x10]
   140052dcb:	mov    r9d,DWORD PTR [rdi+0x4]
   140052dcf:	lea    eax,[r10+0x1]
   140052dd3:	movzx  r8d,BYTE PTR [r10+rdx*1]
   140052dd8:	movsxd rcx,eax
   140052ddb:	shl    r8d,0x8
   140052ddf:	movzx  eax,BYTE PTR [rcx+rdx*1]
   140052de3:	or     r8d,eax
   140052de6:	lea    eax,[r10+0x2]
   140052dea:	movsxd rcx,eax
   140052ded:	shl    r8d,0x8
   140052df1:	movzx  eax,BYTE PTR [rcx+rdx*1]
   140052df5:	mov    ecx,0x8
   140052dfa:	sub    ecx,r9d
   140052dfd:	or     r8d,eax
   140052e00:	shr    r8d,cl
   140052e03:	mov    ecx,0x10
   140052e08:	sub    ecx,esi
   140052e0a:	movzx  edx,r8w
   140052e0e:	shr    edx,cl
   140052e10:	lea    ecx,[rsi+r9*1]
   140052e14:	mov    eax,ecx
   140052e16:	add    r11d,edx
   140052e19:	shr    eax,0x3
   140052e1c:	add    eax,r10d
   140052e1f:	and    ecx,0x7
   140052e22:	mov    DWORD PTR [rdi],eax
   140052e24:	mov    DWORD PTR [rdi+0x4],ecx
   140052e27:	mov    rsi,QWORD PTR [rsp+0x70]
   140052e2c:	mov    WORD PTR [r14+rbp*4+0x4],r11w
   140052e32:	jmp    0x1400527c3
   140052e37:	mov    BYTE PTR [rbx+0x4adf],r15b
   140052e3e:	mov    rbx,QWORD PTR [rsp+0x80]
   140052e46:	add    rsp,0x30
   140052e4a:	pop    r15
   140052e4c:	pop    r14
   140052e4e:	pop    r13
   140052e50:	pop    r12
   140052e52:	pop    rdi
   140052e53:	pop    rsi
   140052e54:	pop    rbp
   140052e55:	ret    
   140052e56:	int3   
   140052e57:	int3   
   140052e58:	mov    QWORD PTR [rsp+0x8],rbx
   140052e5d:	push   rdi
   140052e5e:	sub    rsp,0x20
   140052e62:	xor    ebx,ebx
   140052e64:	mov    rdi,rcx
   140052e67:	cmp    DWORD PTR [rcx+0x8],ebx
   140052e6a:	jbe    0x140052e8a
   140052e6c:	mov    rcx,QWORD PTR [rdi]
   140052e6f:	mov    eax,ebx
   140052e71:	imul   rdx,rax,0x4af8
   140052e78:	add    rdx,rcx
   140052e7b:	mov    rcx,QWORD PTR [rcx]
   140052e7e:	call   0x140052560
   140052e83:	inc    ebx
   140052e85:	cmp    ebx,DWORD PTR [rdi+0x8]
   140052e88:	jb     0x140052e6c
   140052e8a:	mov    rbx,QWORD PTR [rsp+0x30]
   140052e8f:	add    rsp,0x20
   140052e93:	pop    rdi
   140052e94:	ret    
   140052e95:	int3   
   140052e96:	int3   
   140052e97:	int3   
   140052e98:	mov    QWORD PTR [rsp+0x8],rbx
   140052e9d:	mov    QWORD PTR [rsp+0x10],rbp
   140052ea2:	mov    QWORD PTR [rsp+0x18],rsi
   140052ea7:	push   rdi
   140052ea8:	push   r12
   140052eaa:	push   r13
   140052eac:	push   r14
   140052eae:	push   r15
   140052eb0:	sub    rsp,0x30
   140052eb4:	cmp    BYTE PTR [rdx+0x38],0x0
   140052eb8:	mov    rdi,rdx
   140052ebb:	mov    rbx,rcx
   140052ebe:	jne    0x140052ee7
   140052ec0:	mov    BYTE PTR [rdx+0x38],0x1
   140052ec4:	lea    r9,[rdx+0x3c]
   140052ec8:	lea    r8,[rdx+0x24]
   140052ecc:	add    rdx,0x8
   140052ed0:	call   0x14004d958
   140052ed5:	test   al,al
   140052ed7:	jne    0x140052ee7
   140052ed9:	mov    BYTE PTR [rdi+0x4adc],0x1
   140052ee0:	xor    al,al
   140052ee2:	jmp    0x140053b5a
   140052ee7:	mov    edx,DWORD PTR [rdi+0x24]
   140052eea:	lea    rsi,[rdi+0x8]
   140052eee:	mov    eax,DWORD PTR [rdi+0x30]
   140052ef1:	lea    ecx,[rdx+rax*1]
   140052ef4:	cmp    DWORD PTR [rsi],ecx
   140052ef6:	jg     0x140052ed9
   140052ef8:	mov    r15d,DWORD PTR [rdi+0x4ad8]
   140052eff:	lea    r12d,[rdx-0x1]
   140052f03:	mov    eax,DWORD PTR [rdi+0x2c]
   140052f06:	sub    r15d,0x10
   140052f0a:	add    r12d,eax
   140052f0d:	mov    r13d,r15d
   140052f10:	cmp    r12d,r15d
   140052f13:	cmovl  r13d,r12d
   140052f17:	mov    r8,QWORD PTR [rbx+0xe968]
   140052f1e:	and    QWORD PTR [rbx+0xc0],r8
   140052f25:	mov    ecx,DWORD PTR [rsi]
   140052f27:	mov    rdx,QWORD PTR [rbx+0xc0]
   140052f2e:	cmp    ecx,r13d
   140052f31:	jl     0x140052f68
   140052f33:	cmp    ecx,r12d
   140052f36:	jg     0x140053b58
   140052f3c:	jne    0x140052f4a
   140052f3e:	mov    eax,DWORD PTR [rdi+0x28]
   140052f41:	cmp    DWORD PTR [rdi+0xc],eax
   140052f44:	jge    0x140053b58
   140052f4a:	cmp    ecx,r15d
   140052f4d:	jl     0x140052f5c
   140052f4f:	cmp    BYTE PTR [rdi+0x4ade],0x0
   140052f56:	je     0x140053b51
   140052f5c:	cmp    ecx,DWORD PTR [rdi+0x4ad8]
   140052f62:	jge    0x140053b51
   140052f68:	mov    rcx,QWORD PTR [rbx+0x4b88]
   140052f6f:	mov    rax,rcx
   140052f72:	sub    rax,rdx
   140052f75:	and    rax,r8
   140052f78:	cmp    rax,0x1004
   140052f7e:	jae    0x140052fa1
   140052f80:	cmp    rcx,rdx
   140052f83:	je     0x140052fa1
   140052f85:	mov    rcx,rbx
   140052f88:	call   0x14004f1dc
   140052f8d:	mov    rax,QWORD PTR [rbx+0x4da0]
   140052f94:	cmp    QWORD PTR [rbx+0x4db0],rax
   140052f9b:	jg     0x140052ee0
   140052fa1:	movsxd r10,DWORD PTR [rsi]
   140052fa4:	mov    rdx,QWORD PTR [rsi+0x10]
   140052fa8:	mov    r11d,DWORD PTR [rsi+0x4]
   140052fac:	lea    eax,[r10+0x1]
   140052fb0:	movzx  r8d,BYTE PTR [r10+rdx*1]
   140052fb5:	shl    r8d,0x8
   140052fb9:	movsxd rcx,eax
   140052fbc:	movzx  eax,BYTE PTR [rcx+rdx*1]
   140052fc0:	or     r8d,eax
   140052fc3:	lea    eax,[r10+0x2]
   140052fc7:	shl    r8d,0x8
   140052fcb:	movsxd rcx,eax
   140052fce:	movzx  eax,BYTE PTR [rcx+rdx*1]
   140052fd2:	mov    ecx,0x8
   140052fd7:	sub    ecx,r11d
   140052fda:	or     r8d,eax
   140052fdd:	shr    r8d,cl
   140052fe0:	mov    ecx,DWORD PTR [rdi+0xc0]
   140052fe6:	and    r8d,0xfffe
   140052fed:	cmp    r8d,DWORD PTR [rdi+rcx*4+0x40]
   140052ff2:	jae    0x140053027
   140052ff4:	mov    eax,0x10
   140052ff9:	sub    eax,ecx
   140052ffb:	mov    cl,al
   140052ffd:	shr    r8d,cl
   140053000:	movzx  ecx,BYTE PTR [r8+rdi*1+0xc4]
   140053009:	add    ecx,r11d
   14005300c:	mov    eax,ecx
   14005300e:	shr    eax,0x3
   140053011:	add    eax,r10d
   140053014:	and    ecx,0x7
   140053017:	mov    DWORD PTR [rsi],eax
   140053019:	mov    DWORD PTR [rsi+0x4],ecx
   14005301c:	movzx  r8d,WORD PTR [rdi+r8*2+0x4c4]
   140053025:	jmp    0x140053098
   140053027:	mov    r9d,0xf
   14005302d:	inc    ecx
   14005302f:	cmp    ecx,r9d
   140053032:	jae    0x140053053
   140053034:	mov    edx,ecx
   140053036:	add    rdx,0x10
   14005303a:	lea    rdx,[rdi+rdx*4]
   14005303e:	cmp    r8d,DWORD PTR [rdx]
   140053041:	jb     0x140053050
   140053043:	inc    ecx
   140053045:	add    rdx,0x4
   140053049:	cmp    ecx,r9d
   14005304c:	jb     0x14005303e
   14005304e:	jmp    0x140053053
   140053050:	mov    r9d,ecx
   140053053:	lea    ecx,[r11+r9*1]
   140053057:	mov    eax,ecx
   140053059:	and    ecx,0x7
   14005305c:	shr    eax,0x3
   14005305f:	add    eax,r10d
   140053062:	mov    DWORD PTR [rsi+0x4],ecx
   140053065:	mov    DWORD PTR [rsi],eax
   140053067:	mov    ecx,0x10
   14005306c:	sub    ecx,r9d
   14005306f:	lea    eax,[r9-0x1]
   140053073:	sub    r8d,DWORD PTR [rdi+rax*4+0x40]
   140053078:	shr    r8d,cl
   14005307b:	mov    eax,r9d
   14005307e:	add    r8d,DWORD PTR [rdi+rax*4+0x80]
   140053086:	cmp    r8d,DWORD PTR [rdi+0x3c]
   14005308a:	sbb    eax,eax
   14005308c:	and    eax,r8d
   14005308f:	movzx  r8d,WORD PTR [rdi+rax*2+0xcc4]
   140053098:	cmp    r8d,0x100
   14005309f:	jae    0x1400530bf
   1400530a1:	mov    rax,QWORD PTR [rbx+0xc0]
   1400530a8:	mov    rcx,QWORD PTR [rbx+0x4b90]
   1400530af:	mov    BYTE PTR [rcx+rax*1],r8b
   1400530b3:	inc    QWORD PTR [rbx+0xc0]
   1400530ba:	jmp    0x140052f17
   1400530bf:	cmp    r8d,0x106
   1400530c6:	jb     0x140053695
   1400530cc:	lea    r11d,[r8-0x106]
   1400530d3:	cmp    r11d,0x8
   1400530d7:	jae    0x1400530e2
   1400530d9:	add    r11d,0x2
   1400530dd:	jmp    0x140053167
   1400530e2:	mov    r14d,r11d
   1400530e5:	and    r11d,0x3
   1400530e9:	or     r11d,0x4
   1400530ed:	shr    r14d,0x2
   1400530f1:	dec    r14d
   1400530f4:	mov    ecx,r14d
   1400530f7:	shl    r11d,cl
   1400530fa:	add    r11d,0x2
   1400530fe:	test   r14d,r14d
   140053101:	je     0x140053167
   140053103:	movsxd r10,DWORD PTR [rsi]
   140053106:	mov    rdx,QWORD PTR [rsi+0x10]
   14005310a:	mov    r9d,DWORD PTR [rsi+0x4]
   14005310e:	lea    eax,[r10+0x1]
   140053112:	movzx  r8d,BYTE PTR [r10+rdx*1]
   140053117:	movsxd rcx,eax
   14005311a:	shl    r8d,0x8
   14005311e:	movzx  eax,BYTE PTR [rcx+rdx*1]
   140053122:	or     r8d,eax
   140053125:	lea    eax,[r10+0x2]
   140053129:	movsxd rcx,eax
   14005312c:	shl    r8d,0x8
   140053130:	movzx  eax,BYTE PTR [rcx+rdx*1]
   140053134:	mov    ecx,0x8
   140053139:	sub    ecx,r9d
   14005313c:	or     r8d,eax
   14005313f:	shr    r8d,cl
   140053142:	mov    ecx,0x10
   140053147:	sub    ecx,r14d
   14005314a:	movzx  edx,r8w
   14005314e:	shr    edx,cl
   140053150:	lea    ecx,[r14+r9*1]
   140053154:	mov    eax,ecx
   140053156:	add    r11d,edx
   140053159:	shr    eax,0x3
   14005315c:	add    eax,r10d
   14005315f:	and    ecx,0x7
   140053162:	mov    DWORD PTR [rsi],eax
   140053164:	mov    DWORD PTR [rsi+0x4],ecx
   140053167:	movsxd r10,DWORD PTR [rsi]
   14005316a:	mov    rdx,QWORD PTR [rsi+0x10]
   14005316e:	mov    ebp,DWORD PTR [rsi+0x4]
   140053171:	lea    eax,[r10+0x1]
   140053175:	movzx  r8d,BYTE PTR [r10+rdx*1]
   14005317a:	shl    r8d,0x8
   14005317e:	movsxd rcx,eax
   140053181:	movzx  eax,BYTE PTR [rcx+rdx*1]
   140053185:	or     r8d,eax
   140053188:	lea    eax,[r10+0x2]
   14005318c:	shl    r8d,0x8
   140053190:	movsxd rcx,eax
   140053193:	movzx  eax,BYTE PTR [rcx+rdx*1]
   140053197:	mov    ecx,0x8
   14005319c:	sub    ecx,ebp
   14005319e:	or     r8d,eax
   1400531a1:	shr    r8d,cl
   1400531a4:	mov    ecx,DWORD PTR [rdi+0xfac]
   1400531aa:	and    r8d,0xfffe
   1400531b1:	cmp    r8d,DWORD PTR [rdi+rcx*4+0xf2c]
   1400531b9:	jae    0x1400531ed
   1400531bb:	mov    eax,0x10
   1400531c0:	sub    eax,ecx
   1400531c2:	mov    cl,al
   1400531c4:	shr    r8d,cl
   1400531c7:	movzx  ecx,BYTE PTR [rdi+r8*1+0xfb0]
   1400531d0:	add    ecx,ebp
   1400531d2:	mov    eax,ecx
   1400531d4:	shr    eax,0x3
   1400531d7:	add    eax,r10d
   1400531da:	and    ecx,0x7
   1400531dd:	mov    DWORD PTR [rsi],eax
   1400531df:	mov    DWORD PTR [rsi+0x4],ecx
   1400531e2:	movzx  r10d,WORD PTR [rdi+r8*2+0x13b0]
   1400531eb:	jmp    0x140053267
   1400531ed:	mov    r9d,0xf
   1400531f3:	inc    ecx
   1400531f5:	cmp    ecx,r9d
   1400531f8:	jae    0x14005321c
   1400531fa:	mov    edx,ecx
   1400531fc:	add    rdx,0x3cb
   140053203:	lea    rdx,[rdi+rdx*4]
   140053207:	cmp    r8d,DWORD PTR [rdx]
   14005320a:	jb     0x140053219
   14005320c:	inc    ecx
   14005320e:	add    rdx,0x4
   140053212:	cmp    ecx,r9d
   140053215:	jb     0x140053207
   140053217:	jmp    0x14005321c
   140053219:	mov    r9d,ecx
   14005321c:	lea    ecx,[r9+rbp*1]
   140053220:	mov    eax,ecx
   140053222:	and    ecx,0x7
   140053225:	shr    eax,0x3
   140053228:	add    eax,r10d
   14005322b:	mov    DWORD PTR [rsi+0x4],ecx
   14005322e:	mov    DWORD PTR [rsi],eax
   140053230:	mov    ecx,0x10
   140053235:	sub    ecx,r9d
   140053238:	lea    eax,[r9-0x1]
   14005323c:	sub    r8d,DWORD PTR [rdi+rax*4+0xf2c]
   140053244:	mov    eax,r9d
   140053247:	shr    r8d,cl
   14005324a:	add    r8d,DWORD PTR [rdi+rax*4+0xf6c]
   140053252:	cmp    r8d,DWORD PTR [rdi+0xf28]
   140053259:	sbb    eax,eax
   14005325b:	and    eax,r8d
   14005325e:	movzx  r10d,WORD PTR [rdi+rax*2+0x1bb0]
   140053267:	cmp    r10d,0x4
   14005326b:	jae    0x140053275
   14005326d:	inc    r10d
   140053270:	jmp    0x1400534b8
   140053275:	mov    r14d,r10d
   140053278:	and    r10d,0x1
   14005327c:	or     r10d,0x2
   140053280:	shr    r14d,1
   140053283:	dec    r14d
   140053286:	mov    ecx,r14d
   140053289:	shl    r10d,cl
   14005328c:	inc    r10d
   14005328f:	test   r14d,r14d
   140053292:	je     0x1400534b8
   140053298:	cmp    r14d,0x4
   14005329c:	jb     0x140053437
   1400532a2:	jbe    0x140053330
   1400532a8:	movsxd rdx,DWORD PTR [rsi]
   1400532ab:	mov    r8,QWORD PTR [rsi+0x10]
   1400532af:	lea    eax,[rdx+0x1]
   1400532b2:	movzx  r9d,BYTE PTR [rdx+r8*1]
   1400532b7:	shl    r9d,0x8
   1400532bb:	movsxd rcx,eax
   1400532be:	movzx  eax,BYTE PTR [rcx+r8*1]
   1400532c3:	or     r9d,eax
   1400532c6:	lea    eax,[rdx+0x2]
   1400532c9:	shl    r9d,0x8
   1400532cd:	movsxd rcx,eax
   1400532d0:	movzx  eax,BYTE PTR [rcx+r8*1]
   1400532d5:	or     r9d,eax
   1400532d8:	lea    eax,[rdx+0x3]
   1400532db:	movsxd rcx,eax
   1400532de:	shl    r9d,0x8
   1400532e2:	movzx  eax,BYTE PTR [rcx+r8*1]
   1400532e7:	mov    ecx,DWORD PTR [rsi+0x4]
   1400532ea:	or     r9d,eax
   1400532ed:	shl    r9d,cl
   1400532f0:	lea    eax,[rdx+0x4]
   1400532f3:	movsxd rcx,eax
   1400532f6:	movzx  edx,BYTE PTR [rcx+r8*1]
   1400532fb:	mov    ecx,0x8
   140053300:	sub    cl,BYTE PTR [rsi+0x4]
   140053303:	shr    edx,cl
   140053305:	mov    ecx,0x24
   14005330a:	sub    ecx,r14d
   14005330d:	or     r9d,edx
   140053310:	shr    r9d,cl
   140053313:	mov    ecx,DWORD PTR [rsi+0x4]
   140053316:	add    ecx,0xfffffffc
   140053319:	shl    r9d,0x4
   14005331d:	add    ecx,r14d
   140053320:	add    r10d,r9d
   140053323:	mov    eax,ecx
   140053325:	shr    eax,0x3
   140053328:	add    DWORD PTR [rsi],eax
   14005332a:	and    ecx,0x7
   14005332d:	mov    DWORD PTR [rsi+0x4],ecx
   140053330:	movsxd rbp,DWORD PTR [rsi]
   140053333:	mov    rdx,QWORD PTR [rsi+0x10]
   140053337:	mov    r14d,DWORD PTR [rsi+0x4]
   14005333b:	lea    eax,[rbp+0x1]
   14005333e:	movzx  r8d,BYTE PTR [rbp+rdx*1+0x0]
   140053344:	shl    r8d,0x8
   140053348:	movsxd rcx,eax
   14005334b:	movzx  eax,BYTE PTR [rcx+rdx*1]
   14005334f:	or     r8d,eax
   140053352:	lea    eax,[rbp+0x2]
   140053355:	shl    r8d,0x8
   140053359:	movsxd rcx,eax
   14005335c:	movzx  eax,BYTE PTR [rcx+rdx*1]
   140053360:	mov    ecx,0x8
   140053365:	sub    ecx,r14d
   140053368:	or     r8d,eax
   14005336b:	shr    r8d,cl
   14005336e:	mov    ecx,DWORD PTR [rdi+0x1e98]
   140053374:	and    r8d,0xfffe
   14005337b:	cmp    r8d,DWORD PTR [rdi+rcx*4+0x1e18]
   140053383:	jae    0x1400533b7
   140053385:	mov    eax,0x10
   14005338a:	sub    eax,ecx
   14005338c:	mov    cl,al
   14005338e:	shr    r8d,cl
   140053391:	movzx  ecx,BYTE PTR [r8+rdi*1+0x1e9c]
   14005339a:	add    ecx,r14d
   14005339d:	mov    eax,ecx
   14005339f:	shr    eax,0x3
   1400533a2:	add    eax,ebp
   1400533a4:	and    ecx,0x7
   1400533a7:	mov    DWORD PTR [rsi],eax
   1400533a9:	mov    DWORD PTR [rsi+0x4],ecx
   1400533ac:	movzx  eax,WORD PTR [rdi+r8*2+0x229c]
   1400533b5:	jmp    0x14005342f
   1400533b7:	mov    r9d,0xf
   1400533bd:	inc    ecx
   1400533bf:	cmp    ecx,r9d
   1400533c2:	jae    0x1400533e6
   1400533c4:	mov    edx,ecx
   1400533c6:	add    rdx,0x786
   1400533cd:	lea    rdx,[rdi+rdx*4]
   1400533d1:	cmp    r8d,DWORD PTR [rdx]
   1400533d4:	jb     0x1400533e3
   1400533d6:	inc    ecx
   1400533d8:	add    rdx,0x4
   1400533dc:	cmp    ecx,r9d
   1400533df:	jb     0x1400533d1
   1400533e1:	jmp    0x1400533e6
   1400533e3:	mov    r9d,ecx
   1400533e6:	lea    ecx,[r14+r9*1]
   1400533ea:	mov    eax,ecx
   1400533ec:	and    ecx,0x7
   1400533ef:	shr    eax,0x3
   1400533f2:	add    eax,ebp
   1400533f4:	mov    DWORD PTR [rsi+0x4],ecx
   1400533f7:	mov    DWORD PTR [rsi],eax
   1400533f9:	mov    ecx,0x10
   1400533fe:	sub    ecx,r9d
   140053401:	lea    eax,[r9-0x1]
   140053405:	sub    r8d,DWORD PTR [rdi+rax*4+0x1e18]
   14005340d:	mov    eax,r9d
   140053410:	shr    r8d,cl
   140053413:	add    r8d,DWORD PTR [rdi+rax*4+0x1e58]
   14005341b:	cmp    r8d,DWORD PTR [rdi+0x1e14]
   140053422:	sbb    eax,eax
   140053424:	and    eax,r8d
   140053427:	movzx  eax,WORD PTR [rdi+rax*2+0x2a9c]
   14005342f:	add    r10d,eax
   140053432:	jmp    0x1400534b8
   140053437:	movsxd rdx,DWORD PTR [rsi]
   14005343a:	mov    r8,QWORD PTR [rsi+0x10]
   14005343e:	lea    eax,[rdx+0x1]
   140053441:	movzx  r9d,BYTE PTR [rdx+r8*1]
   140053446:	movsxd rcx,eax
   140053449:	shl    r9d,0x8
   14005344d:	movzx  eax,BYTE PTR [rcx+r8*1]
   140053452:	or     r9d,eax
   140053455:	lea    eax,[rdx+0x2]
   140053458:	movsxd rcx,eax
   14005345b:	shl    r9d,0x8
   14005345f:	movzx  eax,BYTE PTR [rcx+r8*1]
   140053464:	or     r9d,eax
   140053467:	lea    eax,[rdx+0x3]
   14005346a:	movsxd rcx,eax
   14005346d:	shl    r9d,0x8
   140053471:	movzx  eax,BYTE PTR [rcx+r8*1]
   140053476:	mov    ecx,DWORD PTR [rsi+0x4]
   140053479:	or     r9d,eax
   14005347c:	shl    r9d,cl
   14005347f:	lea    eax,[rdx+0x4]
   140053482:	movsxd rcx,eax
   140053485:	movzx  edx,BYTE PTR [rcx+r8*1]
   14005348a:	mov    ecx,0x8
   14005348f:	sub    cl,BYTE PTR [rsi+0x4]
   140053492:	shr    edx,cl
   140053494:	mov    ecx,0x20
   140053499:	sub    ecx,r14d
   14005349c:	or     r9d,edx
   14005349f:	shr    r9d,cl
   1400534a2:	mov    ecx,DWORD PTR [rsi+0x4]
   1400534a5:	add    r10d,r9d
   1400534a8:	add    ecx,r14d
   1400534ab:	mov    eax,ecx
   1400534ad:	shr    eax,0x3
   1400534b0:	add    DWORD PTR [rsi],eax
   1400534b2:	and    ecx,0x7
   1400534b5:	mov    DWORD PTR [rsi+0x4],ecx
   1400534b8:	cmp    r10d,0x100
   1400534bf:	jbe    0x1400534dc
   1400534c1:	inc    r11d
   1400534c4:	cmp    r10d,0x2000
   1400534cb:	jbe    0x1400534dc
   1400534cd:	inc    r11d
   1400534d0:	cmp    r10d,0x40000
   1400534d7:	jbe    0x1400534dc
   1400534d9:	inc    r11d
   1400534dc:	mov    eax,DWORD PTR [rbx+0xa8]
   1400534e2:	mov    DWORD PTR [rbx+0xac],eax
   1400534e8:	mov    eax,DWORD PTR [rbx+0xa4]
   1400534ee:	mov    DWORD PTR [rbx+0xa8],eax
   1400534f4:	mov    eax,DWORD PTR [rbx+0xa0]
   1400534fa:	mov    DWORD PTR [rbx+0xa4],eax
   140053500:	mov    DWORD PTR [rbx+0xa0],r10d
   140053507:	mov    r9,QWORD PTR [rbx+0xc0]
   14005350e:	mov    eax,r10d
   140053511:	mov    r8,r9
   140053514:	sub    r8,rax
   140053517:	mov    DWORD PTR [rbx+0xb4],r11d
   14005351e:	mov    rax,QWORD PTR [rbx+0xe960]
   140053525:	add    rax,0xffffffffffffefff
   14005352b:	cmp    r8,rax
   14005352e:	jae    0x140053644
   140053534:	cmp    r9,rax
   140053537:	jae    0x140053644
   14005353d:	mov    rax,QWORD PTR [rbx+0x4b90]
   140053544:	lea    rcx,[r8+rax*1]
   140053548:	lea    rdx,[r9+rax*1]
   14005354c:	mov    eax,r11d
   14005354f:	add    rax,r9
   140053552:	mov    QWORD PTR [rbx+0xc0],rax
   140053559:	cmp    r10d,r11d
   14005355c:	jae    0x1400535ad
   14005355e:	cmp    r11d,0x8
   140053562:	jb     0x1400535d2
   140053564:	mov    r8d,r11d
   140053567:	shr    r8,0x3
   14005356b:	mov    al,BYTE PTR [rcx]
   14005356d:	add    r11d,0xfffffff8
   140053571:	mov    BYTE PTR [rdx],al
   140053573:	mov    al,BYTE PTR [rcx+0x1]
   140053576:	mov    BYTE PTR [rdx+0x1],al
   140053579:	mov    al,BYTE PTR [rcx+0x2]
   14005357c:	mov    BYTE PTR [rdx+0x2],al
   14005357f:	mov    al,BYTE PTR [rcx+0x3]
   140053582:	mov    BYTE PTR [rdx+0x3],al
   140053585:	mov    al,BYTE PTR [rcx+0x4]
   140053588:	mov    BYTE PTR [rdx+0x4],al
   14005358b:	mov    al,BYTE PTR [rcx+0x5]
   14005358e:	mov    BYTE PTR [rdx+0x5],al
   140053591:	mov    al,BYTE PTR [rcx+0x6]
   140053594:	mov    BYTE PTR [rdx+0x6],al
   140053597:	mov    al,BYTE PTR [rcx+0x7]
   14005359a:	add    rcx,0x8
   14005359e:	mov    BYTE PTR [rdx+0x7],al
   1400535a1:	add    rdx,0x8
   1400535a5:	sub    r8,0x1
   1400535a9:	jne    0x14005356b
   1400535ab:	jmp    0x1400535d2
   1400535ad:	cmp    r11d,0x8
   1400535b1:	jb     0x1400535d2
   1400535b3:	mov    r8d,r11d
   1400535b6:	shr    r8,0x3
   1400535ba:	mov    rax,QWORD PTR [rcx]
   1400535bd:	add    r11d,0xfffffff8
   1400535c1:	mov    QWORD PTR [rdx],rax
   1400535c4:	add    rcx,0x8
   1400535c8:	add    rdx,0x8
   1400535cc:	sub    r8,0x1
   1400535d0:	jne    0x1400535ba
   1400535d2:	test   r11d,r11d
   1400535d5:	je     0x140052f17
   1400535db:	mov    al,BYTE PTR [rcx]
   1400535dd:	mov    BYTE PTR [rdx],al
   1400535df:	cmp    r11d,0x1
   1400535e3:	jbe    0x140052f17
   1400535e9:	mov    al,BYTE PTR [rcx+0x1]
   1400535ec:	mov    BYTE PTR [rdx+0x1],al
   1400535ef:	cmp    r11d,0x2
   1400535f3:	jbe    0x140052f17
   1400535f9:	mov    al,BYTE PTR [rcx+0x2]
   1400535fc:	mov    BYTE PTR [rdx+0x2],al
   1400535ff:	cmp    r11d,0x3
   140053603:	jbe    0x140052f17
   140053609:	mov    al,BYTE PTR [rcx+0x3]
   14005360c:	mov    BYTE PTR [rdx+0x3],al
   14005360f:	cmp    r11d,0x4
   140053613:	jbe    0x140052f17
   140053619:	mov    al,BYTE PTR [rcx+0x4]
   14005361c:	mov    BYTE PTR [rdx+0x4],al
   14005361f:	cmp    r11d,0x5
   140053623:	jbe    0x140052f17
   140053629:	cmp    r11d,0x6
   14005362d:	mov    al,BYTE PTR [rcx+0x5]
   140053630:	mov    BYTE PTR [rdx+0x5],al
   140053633:	jbe    0x140052f17
   140053639:	mov    al,BYTE PTR [rcx+0x6]
   14005363c:	mov    BYTE PTR [rdx+0x6],al
   14005363f:	jmp    0x140052f17
   140053644:	test   r11d,r11d
   140053647:	je     0x140052f17
   14005364d:	mov    r9,QWORD PTR [rbx+0xe968]
   140053654:	mov    rdx,QWORD PTR [rbx+0x4b90]
   14005365b:	and    r9,r8
   14005365e:	mov    rcx,QWORD PTR [rbx+0xc0]
   140053665:	inc    r8
   140053668:	mov    al,BYTE PTR [r9+rdx*1]
   14005366c:	mov    BYTE PTR [rdx+rcx*1],al
   14005366f:	mov    rax,QWORD PTR [rbx+0xc0]
   140053676:	mov    r9,QWORD PTR [rbx+0xe968]
   14005367d:	inc    rax
   140053680:	and    rax,r9
   140053683:	mov    QWORD PTR [rbx+0xc0],rax
   14005368a:	add    r11d,0xffffffff
   14005368e:	jne    0x140053654
   140053690:	jmp    0x140052f17
   140053695:	cmp    r8d,0x100
   14005369c:	jne    0x1400536d0
   14005369e:	lea    r8,[rsp+0x20]
   1400536a3:	mov    rdx,rsi
   1400536a6:	mov    rcx,rbx
   1400536a9:	call   0x14004cb7c
   1400536ae:	test   al,al
   1400536b0:	je     0x140053b58
   1400536b6:	lea    rdx,[rsp+0x20]
   1400536bb:	mov    rcx,rbx
   1400536be:	call   0x1400494f0
   1400536c3:	test   al,al
   1400536c5:	je     0x140053b58
   1400536cb:	jmp    0x140052f17
   1400536d0:	cmp    r8d,0x101
   1400536d7:	jne    0x140053864
   1400536dd:	mov    r8d,DWORD PTR [rbx+0xb4]
   1400536e4:	test   r8d,r8d
   1400536e7:	je     0x140052f17
   1400536ed:	mov    r10,QWORD PTR [rbx+0xc0]
   1400536f4:	mov    r11d,DWORD PTR [rbx+0xa0]
   1400536fb:	mov    r9,r10
   1400536fe:	mov    rax,QWORD PTR [rbx+0xe960]
   140053705:	sub    r9,r11
   140053708:	add    rax,0xffffffffffffefff
   14005370e:	cmp    r9,rax
   140053711:	jae    0x140053813
   140053717:	cmp    r10,rax
   14005371a:	jae    0x140053813
   140053720:	mov    rax,QWORD PTR [rbx+0x4b90]
   140053727:	lea    rcx,[r9+rax*1]
   14005372b:	lea    rdx,[r10+rax*1]
   14005372f:	lea    rax,[r10+r8*1]
   140053733:	mov    QWORD PTR [rbx+0xc0],rax
   14005373a:	cmp    r11d,r8d
   14005373d:	jae    0x14005378e
   14005373f:	cmp    r8d,0x8
   140053743:	jb     0x1400537b3
   140053745:	mov    r9d,r8d
   140053748:	shr    r9,0x3
   14005374c:	mov    al,BYTE PTR [rcx]
   14005374e:	add    r8d,0xfffffff8
   140053752:	mov    BYTE PTR [rdx],al
   140053754:	mov    al,BYTE PTR [rcx+0x1]
   140053757:	mov    BYTE PTR [rdx+0x1],al
   14005375a:	mov    al,BYTE PTR [rcx+0x2]
   14005375d:	mov    BYTE PTR [rdx+0x2],al
   140053760:	mov    al,BYTE PTR [rcx+0x3]
   140053763:	mov    BYTE PTR [rdx+0x3],al
   140053766:	mov    al,BYTE PTR [rcx+0x4]
   140053769:	mov    BYTE PTR [rdx+0x4],al
   14005376c:	mov    al,BYTE PTR [rcx+0x5]
   14005376f:	mov    BYTE PTR [rdx+0x5],al
   140053772:	mov    al,BYTE PTR [rcx+0x6]
   140053775:	mov    BYTE PTR [rdx+0x6],al
   140053778:	mov    al,BYTE PTR [rcx+0x7]
   14005377b:	add    rcx,0x8
   14005377f:	mov    BYTE PTR [rdx+0x7],al
   140053782:	add    rdx,0x8
   140053786:	sub    r9,0x1
   14005378a:	jne    0x14005374c
   14005378c:	jmp    0x1400537b3
   14005378e:	cmp    r8d,0x8
   140053792:	jb     0x1400537b3
   140053794:	mov    r9,r8
   140053797:	shr    r9,0x3
   14005379b:	mov    rax,QWORD PTR [rcx]
   14005379e:	add    r8d,0xfffffff8
   1400537a2:	mov    QWORD PTR [rdx],rax
   1400537a5:	add    rcx,0x8
   1400537a9:	add    rdx,0x8
   1400537ad:	sub    r9,0x1
   1400537b1:	jne    0x14005379b
   1400537b3:	test   r8d,r8d
   1400537b6:	je     0x140052f17
   1400537bc:	mov    al,BYTE PTR [rcx]
   1400537be:	mov    BYTE PTR [rdx],al
   1400537c0:	cmp    r8d,0x1
   1400537c4:	jbe    0x140052f17
   1400537ca:	mov    al,BYTE PTR [rcx+0x1]
   1400537cd:	mov    BYTE PTR [rdx+0x1],al
   1400537d0:	cmp    r8d,0x2
   1400537d4:	jbe    0x140052f17
   1400537da:	mov    al,BYTE PTR [rcx+0x2]
   1400537dd:	mov    BYTE PTR [rdx+0x2],al
   1400537e0:	cmp    r8d,0x3
   1400537e4:	jbe    0x140052f17
   1400537ea:	mov    al,BYTE PTR [rcx+0x3]
   1400537ed:	mov    BYTE PTR [rdx+0x3],al
   1400537f0:	cmp    r8d,0x4
   1400537f4:	jbe    0x140052f17
   1400537fa:	mov    al,BYTE PTR [rcx+0x4]
   1400537fd:	mov    BYTE PTR [rdx+0x4],al
   140053800:	cmp    r8d,0x5
   140053804:	jbe    0x140052f17
   14005380a:	cmp    r8d,0x6
   14005380e:	jmp    0x14005362d
   140053813:	test   r8d,r8d
   140053816:	je     0x140052f17
   14005381c:	mov    r10,QWORD PTR [rbx+0xe968]
   140053823:	mov    rdx,QWORD PTR [rbx+0x4b90]
   14005382a:	and    r10,r9
   14005382d:	mov    rcx,QWORD PTR [rbx+0xc0]
   140053834:	inc    r9
   140053837:	mov    al,BYTE PTR [r10+rdx*1]
   14005383b:	mov    BYTE PTR [rdx+rcx*1],al
   14005383e:	mov    rax,QWORD PTR [rbx+0xc0]
   140053845:	mov    r10,QWORD PTR [rbx+0xe968]
   14005384c:	inc    rax
   14005384f:	and    rax,r10
   140053852:	mov    QWORD PTR [rbx+0xc0],rax
   140053859:	add    r8d,0xffffffff
   14005385d:	jne    0x140053823
   14005385f:	jmp    0x140052f17
   140053864:	add    r8d,0xfffffefe
   14005386b:	lea    rdx,[rbx+0xa0]
   140053872:	lea    rdx,[rdx+r8*4]
   140053876:	mov    r14d,DWORD PTR [rdx]
   140053879:	je     0x14005388f
   14005387b:	sub    r8d,0x1
   14005387f:	mov    ecx,DWORD PTR [rbx+r8*4+0xa0]
   140053887:	mov    DWORD PTR [rdx],ecx
   140053889:	lea    rdx,[rdx-0x4]
   14005388d:	jne    0x14005387b
   14005388f:	mov    DWORD PTR [rbx+0xa0],r14d
   140053896:	movsxd r10,DWORD PTR [rsi]
   140053899:	mov    rdx,QWORD PTR [rsi+0x10]
   14005389d:	mov    r11d,DWORD PTR [rsi+0x4]
   1400538a1:	lea    eax,[r10+0x1]
   1400538a5:	movzx  r8d,BYTE PTR [r10+rdx*1]
   1400538aa:	shl    r8d,0x8
   1400538ae:	movsxd rcx,eax
   1400538b1:	movzx  eax,BYTE PTR [rcx+rdx*1]
   1400538b5:	or     r8d,eax
   1400538b8:	lea    eax,[r10+0x2]
   1400538bc:	shl    r8d,0x8
   1400538c0:	movsxd rcx,eax
   1400538c3:	movzx  eax,BYTE PTR [rcx+rdx*1]
   1400538c7:	mov    ecx,0x8
   1400538cc:	sub    ecx,r11d
   1400538cf:	or     r8d,eax
   1400538d2:	shr    r8d,cl
   1400538d5:	mov    ecx,DWORD PTR [rdi+0x2d84]
   1400538db:	and    r8d,0xfffe
   1400538e2:	cmp    r8d,DWORD PTR [rdi+rcx*4+0x2d04]
   1400538ea:	jae    0x14005391f
   1400538ec:	mov    eax,0x10
   1400538f1:	sub    eax,ecx
   1400538f3:	mov    cl,al
   1400538f5:	shr    r8d,cl
   1400538f8:	movzx  ecx,BYTE PTR [r8+rdi*1+0x2d88]
   140053901:	add    ecx,r11d
   140053904:	mov    eax,ecx
   140053906:	shr    eax,0x3
   140053909:	add    eax,r10d
   14005390c:	and    ecx,0x7
   14005390f:	mov    DWORD PTR [rsi],eax
   140053911:	mov    DWORD PTR [rsi+0x4],ecx
   140053914:	movzx  r11d,WORD PTR [rdi+r8*2+0x3188]
   14005391d:	jmp    0x140053999
   14005391f:	mov    r9d,0xf
   140053925:	inc    ecx
   140053927:	cmp    ecx,r9d
   14005392a:	jae    0x14005394e
   14005392c:	mov    edx,ecx
   14005392e:	add    rdx,0xb41
   140053935:	lea    rdx,[rdi+rdx*4]
   140053939:	cmp    r8d,DWORD PTR [rdx]
   14005393c:	jb     0x14005394b
   14005393e:	inc    ecx
   140053940:	add    rdx,0x4
   140053944:	cmp    ecx,r9d
   140053947:	jb     0x140053939
   140053949:	jmp    0x14005394e
   14005394b:	mov    r9d,ecx
   14005394e:	lea    ecx,[r11+r9*1]
   140053952:	mov    eax,ecx
   140053954:	and    ecx,0x7
   140053957:	shr    eax,0x3
   14005395a:	add    eax,r10d
   14005395d:	mov    DWORD PTR [rsi+0x4],ecx
   140053960:	mov    DWORD PTR [rsi],eax
   140053962:	mov    ecx,0x10
   140053967:	sub    ecx,r9d
   14005396a:	lea    eax,[r9-0x1]
   14005396e:	sub    r8d,DWORD PTR [rdi+rax*4+0x2d04]
   140053976:	mov    eax,r9d
   140053979:	shr    r8d,cl
   14005397c:	add    r8d,DWORD PTR [rdi+rax*4+0x2d44]
   140053984:	cmp    r8d,DWORD PTR [rdi+0x2d00]
   14005398b:	sbb    eax,eax
   14005398d:	and    eax,r8d
   140053990:	movzx  r11d,WORD PTR [rdi+rax*2+0x3988]
   140053999:	cmp    r11d,0x8
   14005399d:	jae    0x1400539a8
   14005399f:	add    r11d,0x2
   1400539a3:	jmp    0x140053a28
   1400539a8:	mov    ebp,r11d
   1400539ab:	and    r11d,0x3
   1400539af:	or     r11d,0x4
   1400539b3:	shr    ebp,0x2
   1400539b6:	dec    ebp
   1400539b8:	mov    ecx,ebp
   1400539ba:	shl    r11d,cl
   1400539bd:	add    r11d,0x2
   1400539c1:	test   ebp,ebp
   1400539c3:	je     0x140053a28
   1400539c5:	movsxd r10,DWORD PTR [rsi]
   1400539c8:	mov    rdx,QWORD PTR [rsi+0x10]
   1400539cc:	mov    r9d,DWORD PTR [rsi+0x4]
   1400539d0:	lea    eax,[r10+0x1]
   1400539d4:	movzx  r8d,BYTE PTR [r10+rdx*1]
   1400539d9:	movsxd rcx,eax
   1400539dc:	shl    r8d,0x8
   1400539e0:	movzx  eax,BYTE PTR [rcx+rdx*1]
   1400539e4:	or     r8d,eax
   1400539e7:	lea    eax,[r10+0x2]
   1400539eb:	movsxd rcx,eax
   1400539ee:	shl    r8d,0x8
   1400539f2:	movzx  eax,BYTE PTR [rcx+rdx*1]
   1400539f6:	mov    ecx,0x8
   1400539fb:	sub    ecx,r9d
   1400539fe:	or     r8d,eax
   140053a01:	shr    r8d,cl
   140053a04:	mov    ecx,0x10
   140053a09:	sub    ecx,ebp
   140053a0b:	movzx  edx,r8w
   140053a0f:	shr    edx,cl
   140053a11:	lea    ecx,[r9+rbp*1]
   140053a15:	mov    eax,ecx
   140053a17:	add    r11d,edx
   140053a1a:	shr    eax,0x3
   140053a1d:	add    eax,r10d
   140053a20:	and    ecx,0x7
   140053a23:	mov    DWORD PTR [rsi],eax
   140053a25:	mov    DWORD PTR [rsi+0x4],ecx
   140053a28:	mov    r9,QWORD PTR [rbx+0xc0]
   140053a2f:	mov    rax,QWORD PTR [rbx+0xe960]
   140053a36:	mov    r8,r9
   140053a39:	sub    r8,r14
   140053a3c:	mov    DWORD PTR [rbx+0xb4],r11d
   140053a43:	add    rax,0xffffffffffffefff
   140053a49:	cmp    r8,rax
   140053a4c:	jae    0x140053b00
   140053a52:	cmp    r9,rax
   140053a55:	jae    0x140053b00
   140053a5b:	mov    rax,QWORD PTR [rbx+0x4b90]
   140053a62:	lea    rcx,[r8+rax*1]
   140053a66:	lea    rdx,[r9+rax*1]
   140053a6a:	mov    eax,r11d
   140053a6d:	add    rax,r9
   140053a70:	mov    QWORD PTR [rbx+0xc0],rax
   140053a77:	cmp    r14d,r11d
   140053a7a:	jae    0x140053ad2
   140053a7c:	cmp    r11d,0x8
   140053a80:	jb     0x1400535d2
   140053a86:	mov    r8d,r11d
   140053a89:	shr    r8,0x3
   140053a8d:	mov    al,BYTE PTR [rcx]
   140053a8f:	add    r11d,0xfffffff8
   140053a93:	mov    BYTE PTR [rdx],al
   140053a95:	mov    al,BYTE PTR [rcx+0x1]
   140053a98:	mov    BYTE PTR [rdx+0x1],al
   140053a9b:	mov    al,BYTE PTR [rcx+0x2]
   140053a9e:	mov    BYTE PTR [rdx+0x2],al
   140053aa1:	mov    al,BYTE PTR [rcx+0x3]
   140053aa4:	mov    BYTE PTR [rdx+0x3],al
   140053aa7:	mov    al,BYTE PTR [rcx+0x4]
   140053aaa:	mov    BYTE PTR [rdx+0x4],al
   140053aad:	mov    al,BYTE PTR [rcx+0x5]
   140053ab0:	mov    BYTE PTR [rdx+0x5],al
   140053ab3:	mov    al,BYTE PTR [rcx+0x6]
   140053ab6:	mov    BYTE PTR [rdx+0x6],al
   140053ab9:	mov    al,BYTE PTR [rcx+0x7]
   140053abc:	add    rcx,0x8
   140053ac0:	mov    BYTE PTR [rdx+0x7],al
   140053ac3:	add    rdx,0x8
   140053ac7:	sub    r8,0x1
   140053acb:	jne    0x140053a8d
   140053acd:	jmp    0x1400535d2
   140053ad2:	cmp    r11d,0x8
   140053ad6:	jb     0x1400535d2
   140053adc:	mov    r8d,r11d
   140053adf:	shr    r8,0x3
   140053ae3:	mov    rax,QWORD PTR [rcx]
   140053ae6:	add    r11d,0xfffffff8
   140053aea:	mov    QWORD PTR [rdx],rax
   140053aed:	add    rcx,0x8
   140053af1:	add    rdx,0x8
   140053af5:	sub    r8,0x1
   140053af9:	jne    0x140053ae3
   140053afb:	jmp    0x1400535d2
   140053b00:	test   r11d,r11d
   140053b03:	je     0x140052f17
   140053b09:	mov    r9,QWORD PTR [rbx+0xe968]
   140053b10:	mov    rdx,QWORD PTR [rbx+0x4b90]
   140053b17:	and    r9,r8
   140053b1a:	mov    rcx,QWORD PTR [rbx+0xc0]
   140053b21:	inc    r8
   140053b24:	mov    al,BYTE PTR [r9+rdx*1]
   140053b28:	mov    BYTE PTR [rdx+rcx*1],al
   140053b2b:	mov    rax,QWORD PTR [rbx+0xc0]
   140053b32:	mov    r9,QWORD PTR [rbx+0xe968]
   140053b39:	inc    rax
   140053b3c:	and    rax,r9
   140053b3f:	mov    QWORD PTR [rbx+0xc0],rax
   140053b46:	add    r11d,0xffffffff
   140053b4a:	jne    0x140053b10
   140053b4c:	jmp    0x140052f17
   140053b51:	mov    BYTE PTR [rdi+0x4adf],0x1
   140053b58:	mov    al,0x1
   140053b5a:	mov    rbx,QWORD PTR [rsp+0x60]
   140053b5f:	mov    rbp,QWORD PTR [rsp+0x68]
   140053b64:	mov    rsi,QWORD PTR [rsp+0x70]
   140053b69:	add    rsp,0x30
   140053b6d:	pop    r15
   140053b6f:	pop    r14
   140053b71:	pop    r13
   140053b73:	pop    r12
   140053b75:	pop    rdi
   140053b76:	ret    
   140053b77:	int3   
   140053b78:	mov    r11,rsp
   140053b7b:	mov    QWORD PTR [r11+0x8],rbx
   140053b7f:	mov    QWORD PTR [r11+0x10],rbp
   140053b83:	mov    QWORD PTR [r11+0x18],rsi
   140053b87:	push   rdi
   140053b88:	push   r12
   140053b8a:	push   r13
   140053b8c:	push   r14
   140053b8e:	push   r15
   140053b90:	sub    rsp,0x30
   140053b94:	mov    rax,QWORD PTR [rcx+0x660]
   140053b9b:	xor    r8d,r8d
   140053b9e:	mov    rbx,rcx
   140053ba1:	movsd  xmm0,QWORD PTR [rax]
   140053ba5:	lea    r10d,[r8+0x1]
   140053ba9:	movzx  eax,WORD PTR [rax+0x8]
   140053bad:	mov    WORD PTR [rsp+0x28],ax
   140053bb2:	movsd  QWORD PTR [rsp+0x20],xmm0
   140053bb8:	mov    rax,QWORD PTR [r11-0x38]
   140053bbc:	mov    r12b,BYTE PTR [r11-0x38]
   140053bc0:	shr    rax,0x8
   140053bc4:	cmp    al,0x1f
   140053bc6:	jae    0x140053c4f
   140053bcc:	mov    rax,QWORD PTR [rcx+0x648]
   140053bd3:	mov    r9,QWORD PTR [rax+0xc]
   140053bd7:	test   r9,r9
   140053bda:	je     0x140053c4f
   140053bdc:	cmp    WORD PTR [r9],r10w
   140053be0:	je     0x140053c3f
   140053be2:	mov    r8,QWORD PTR [r9+0x4]
   140053be6:	cmp    BYTE PTR [r8],r12b
   140053be9:	je     0x140053c29
   140053beb:	add    r8,0xa
   140053bef:	cmp    BYTE PTR [r8],r12b
   140053bf2:	jne    0x140053beb
   140053bf4:	mov    al,BYTE PTR [r8-0x9]
   140053bf8:	cmp    BYTE PTR [r8+0x1],al
   140053bfc:	jb     0x140053c29
   140053bfe:	movsd  xmm1,QWORD PTR [r8]
   140053c03:	lea    rdx,[r8-0xa]
   140053c07:	movzx  ecx,WORD PTR [r8+0x8]
   140053c0c:	movsd  xmm0,QWORD PTR [rdx]
   140053c10:	movsd  QWORD PTR [r8],xmm0
   140053c15:	movzx  eax,WORD PTR [rdx+0x8]
   140053c19:	mov    WORD PTR [r8+0x8],ax
   140053c1e:	mov    r8,rdx
   140053c21:	movsd  QWORD PTR [rdx],xmm1
   140053c25:	mov    WORD PTR [rdx+0x8],cx
   140053c29:	mov    al,BYTE PTR [r8+0x1]
   140053c2d:	cmp    al,0x73
   140053c2f:	jae    0x140053c4f
   140053c31:	add    al,0x2
   140053c33:	mov    BYTE PTR [r8+0x1],al
   140053c37:	add    WORD PTR [r9+0x2],0x2
   140053c3d:	jmp    0x140053c4f
   140053c3f:	lea    r8,[r9+0x2]
   140053c43:	mov    al,BYTE PTR [r8+0x1]
   140053c47:	cmp    al,0x20
   140053c49:	adc    al,0x0
   140053c4b:	mov    BYTE PTR [r8+0x1],al
   140053c4f:	cmp    DWORD PTR [rbx+0x670],0x0
   140053c56:	jne    0x140053cad
   140053c58:	mov    dl,r10b
   140053c5b:	mov    rcx,rbx
   140053c5e:	call   0x14004a2c0
   140053c63:	mov    rcx,QWORD PTR [rbx+0x660]
   140053c6a:	mov    QWORD PTR [rcx+0x2],rax
   140053c6e:	mov    QWORD PTR [rbx+0x658],rax
   140053c75:	mov    QWORD PTR [rbx+0x648],rax
   140053c7c:	test   rax,rax
   140053c7f:	jne    0x140053c90
   140053c81:	mov    rcx,rbx
   140053c84:	call   0x14004e0e4
   140053c89:	mov    BYTE PTR [rbx+0xa80],0x0
   140053c90:	mov    rbx,QWORD PTR [rsp+0x60]
   140053c95:	mov    rbp,QWORD PTR [rsp+0x68]
   140053c9a:	mov    rsi,QWORD PTR [rsp+0x70]
   140053c9f:	add    rsp,0x30
   140053ca3:	pop    r15
   140053ca5:	pop    r14
   140053ca7:	pop    r13
   140053ca9:	pop    r12
   140053cab:	pop    rdi
   140053cac:	ret    
   140053cad:	mov    rax,QWORD PTR [rbx+0x4ca8]
   140053cb4:	mov    BYTE PTR [rax],r12b
   140053cb7:	mov    rbp,QWORD PTR [rbx+0x4ca8]
   140053cbe:	inc    rbp
   140053cc1:	mov    QWORD PTR [rbx+0x4ca8],rbp
   140053cc8:	cmp    rbp,QWORD PTR [rbx+0x4cc0]
   140053ccf:	jae    0x140053c81
   140053cd1:	mov    rsi,QWORD PTR [rsp+0x22]
   140053cd6:	test   rsi,rsi
   140053cd9:	je     0x140053d20
   140053cdb:	cmp    rsi,rbp
   140053cde:	ja     0x140053cf8
   140053ce0:	xor    edx,edx
   140053ce2:	mov    rcx,rbx
   140053ce5:	call   0x14004a2c0
   140053cea:	mov    rsi,rax
   140053ced:	test   rax,rax
   140053cf0:	je     0x140053c81
   140053cf2:	mov    r10d,0x1
   140053cf8:	sub    DWORD PTR [rbx+0x670],0x1
   140053cff:	jne    0x140053d32
   140053d01:	mov    rcx,QWORD PTR [rbx+0x648]
   140053d08:	xor    edx,edx
   140053d0a:	cmp    QWORD PTR [rbx+0x658],rcx
   140053d11:	mov    rbp,rsi
   140053d14:	setne  dl
   140053d17:	sub    QWORD PTR [rbx+0x4ca8],rdx
   140053d1e:	jmp    0x140053d32
   140053d20:	mov    rax,QWORD PTR [rbx+0x660]
   140053d27:	mov    QWORD PTR [rax+0x2],rbp
   140053d2b:	mov    rsi,QWORD PTR [rbx+0x648]
   140053d32:	mov    rax,QWORD PTR [rbx+0x648]
   140053d39:	movzx  ecx,BYTE PTR [rsp+0x21]
   140053d3e:	mov    rdi,QWORD PTR [rbx+0x658]
   140053d45:	movzx  r15d,WORD PTR [rax+0x2]
   140053d4a:	movzx  r13d,WORD PTR [rax]
   140053d4e:	sub    r15d,ecx
   140053d51:	sub    r15d,r13d
   140053d54:	add    r15d,r10d
   140053d57:	cmp    rdi,rax
   140053d5a:	je     0x140053ee3
   140053d60:	mov    r11d,0x3
   140053d66:	movzx  r14d,WORD PTR [rdi]
   140053d6a:	cmp    r14d,r10d
   140053d6d:	je     0x140053dd5
   140053d6f:	test   r10b,r14b
   140053d72:	jne    0x140053d9d
   140053d74:	mov    rdx,QWORD PTR [rdi+0x4]
   140053d78:	lea    rcx,[rbx+0x4ab0]
   140053d7f:	mov    r8d,r14d
   140053d82:	shr    r8d,1
   140053d85:	call   0x14004b09c
   140053d8a:	mov    QWORD PTR [rdi+0x4],rax
   140053d8e:	test   rax,rax
   140053d91:	je     0x140053c81
   140053d97:	mov    r11d,0x3
   140053d9d:	movzx  r8d,WORD PTR [rdi+0x2]
   140053da2:	xor    edx,edx
   140053da4:	mov    eax,r14d
   140053da7:	shl    eax,0x3
   140053daa:	cmp    r8d,eax
   140053dad:	mov    eax,r14d
   140053db0:	setbe  dl
   140053db3:	xor    ecx,ecx
   140053db5:	shl    eax,0x2
   140053db8:	cmp    eax,r13d
   140053dbb:	lea    eax,[r14+r14*1]
   140053dbf:	setbe  cl
   140053dc2:	and    dx,cx
   140053dc5:	add    dx,dx
   140053dc8:	cmp    eax,r13d
   140053dcb:	adc    dx,r8w
   140053dcf:	mov    WORD PTR [rdi+0x2],dx
   140053dd3:	jmp    0x140053e33
   140053dd5:	lea    rcx,[rbx+0x4ab0]
   140053ddc:	mov    edx,r10d
   140053ddf:	call   0x140049c08
   140053de4:	test   rax,rax
   140053de7:	je     0x140053c81
   140053ded:	movsd  xmm0,QWORD PTR [rdi+0x2]
   140053df2:	movsd  QWORD PTR [rax],xmm0
   140053df6:	movzx  ecx,WORD PTR [rdi+0xa]
   140053dfa:	mov    WORD PTR [rax+0x8],cx
   140053dfe:	mov    QWORD PTR [rdi+0x4],rax
   140053e02:	mov    cl,BYTE PTR [rax+0x1]
   140053e05:	cmp    cl,0x1e
   140053e08:	jae    0x140053e11
   140053e0a:	add    cl,cl
   140053e0c:	mov    BYTE PTR [rax+0x1],cl
   140053e0f:	jmp    0x140053e15
   140053e11:	mov    BYTE PTR [rax+0x1],0x78
   140053e15:	movzx  eax,BYTE PTR [rax+0x1]
   140053e19:	xor    ecx,ecx
   140053e1b:	lea    r11d,[rcx+0x3]
   140053e1f:	cmp    r13d,r11d
   140053e22:	seta   cl
   140053e25:	add    cx,WORD PTR [rbx+0x66c]
   140053e2c:	add    cx,ax
   140053e2f:	mov    WORD PTR [rdi+0x2],cx
   140053e33:	movzx  r9d,WORD PTR [rdi+0x2]
   140053e38:	movzx  eax,BYTE PTR [rsp+0x21]
   140053e3d:	lea    r8d,[r9+0x6]
   140053e41:	imul   r8d,eax
   140053e45:	lea    r10d,[r9+r15*1]
   140053e49:	lea    eax,[r10+r10*2]
   140053e4d:	add    eax,eax
   140053e4f:	add    r8d,r8d
   140053e52:	cmp    r8d,eax
   140053e55:	jae    0x140053e78
   140053e57:	xor    ecx,ecx
   140053e59:	mov    eax,r10d
   140053e5c:	shl    eax,0x2
   140053e5f:	cmp    r8d,eax
   140053e62:	setae  cl
   140053e65:	xor    eax,eax
   140053e67:	cmp    r8d,r10d
   140053e6a:	seta   al
   140053e6d:	lea    edx,[rax+0x1]
   140053e70:	add    edx,ecx
   140053e72:	add    r9w,r11w
   140053e76:	jmp    0x140053eaa
   140053e78:	xor    edx,edx
   140053e7a:	imul   eax,r10d,0xf
   140053e7e:	cmp    r8d,eax
   140053e81:	lea    eax,[r10+r10*2]
   140053e85:	setae  dl
   140053e88:	xor    ecx,ecx
   140053e8a:	shl    eax,0x2
   140053e8d:	cmp    r8d,eax
   140053e90:	lea    eax,[r10+r10*8]
   140053e94:	setae  cl
   140053e97:	add    edx,ecx
   140053e99:	xor    ecx,ecx
   140053e9b:	cmp    r8d,eax
   140053e9e:	setae  cl
   140053ea1:	add    edx,0x4
   140053ea4:	add    edx,ecx
   140053ea6:	add    r9w,dx
   140053eaa:	mov    rax,QWORD PTR [rdi+0x4]
   140053eae:	lea    rcx,[r14+r14*4]
   140053eb2:	mov    WORD PTR [rdi+0x2],r9w
   140053eb7:	mov    r10d,0x1
   140053ebd:	add    r14w,r10w
   140053ec1:	mov    QWORD PTR [rax+rcx*2+0x2],rbp
   140053ec6:	mov    BYTE PTR [rax+rcx*2],r12b
   140053eca:	mov    BYTE PTR [rax+rcx*2+0x1],dl
   140053ece:	mov    WORD PTR [rdi],r14w
   140053ed2:	mov    rdi,QWORD PTR [rdi+0xc]
   140053ed6:	cmp    rdi,QWORD PTR [rbx+0x648]
   140053edd:	jne    0x140053d66
   140053ee3:	mov    QWORD PTR [rbx+0x648],rsi
   140053eea:	mov    QWORD PTR [rbx+0x658],rsi
   140053ef1:	jmp    0x140053c90
   140053ef6:	int3   
   140053ef7:	int3   
   140053ef8:	mov    QWORD PTR [rsp+0x8],rbx
   140053efd:	mov    QWORD PTR [rsp+0x10],rsi
   140053f02:	push   rdi
   140053f03:	sub    rsp,0x20
   140053f07:	mov    rsi,rcx
   140053f0a:	mov    rbx,r9
   140053f0d:	lea    rcx,[rdx+0x4ab0]
   140053f14:	mov    rdi,r8
   140053f17:	mov    rdx,QWORD PTR [rcx+0xc0]
   140053f1e:	cmp    rdx,QWORD PTR [rcx+0xb8]
   140053f25:	je     0x140053f34
   140053f27:	add    rdx,0xffffffffffffffec
   140053f2b:	mov    QWORD PTR [rcx+0xc0],rdx
   140053f32:	jmp    0x140053f54
   140053f34:	mov    rdx,QWORD PTR [rcx+0xc8]
   140053f3b:	test   rdx,rdx
   140053f3e:	je     0x140053f4c
   140053f40:	mov    rax,QWORD PTR [rdx]
   140053f43:	mov    QWORD PTR [rcx+0xc8],rax
   140053f4a:	jmp    0x140053f54
   140053f4c:	call   0x140049c84
   140053f51:	mov    rdx,rax
   140053f54:	test   rdx,rdx
   140053f57:	je     0x140053f7a
   140053f59:	mov    eax,0x1
   140053f5e:	mov    WORD PTR [rdx],ax
   140053f61:	movsd  xmm0,QWORD PTR [rbx]
   140053f65:	movsd  QWORD PTR [rdx+0x2],xmm0
   140053f6a:	movzx  ecx,WORD PTR [rbx+0x8]
   140053f6e:	mov    WORD PTR [rdx+0xa],cx
   140053f72:	mov    QWORD PTR [rdx+0xc],rsi
   140053f76:	mov    QWORD PTR [rdi+0x2],rdx
   140053f7a:	mov    rbx,QWORD PTR [rsp+0x30]
   140053f7f:	mov    rax,rdx
   140053f82:	mov    rsi,QWORD PTR [rsp+0x38]
   140053f87:	add    rsp,0x20
   140053f8b:	pop    rdi
   140053f8c:	ret    
   140053f8d:	int3   
   140053f8e:	int3   
   140053f8f:	int3   
   140053f90:	mov    rax,QWORD PTR [rdx+0x660]
   140053f97:	lea    r11,[rcx+0x2]
   140053f9b:	mov    r10,rdx
   140053f9e:	movzx  r8d,BYTE PTR [rax]
   140053fa2:	movzx  r9d,BYTE PTR [r8+rdx*1+0x980]
   140053fab:	mov    BYTE PTR [rdx+0xa82],r9b
   140053fb2:	mov    rax,QWORD PTR [rcx+0xc]
   140053fb6:	movzx  eax,WORD PTR [rax]
   140053fb9:	dec    eax
   140053fbb:	cdqe   
   140053fbd:	movzx  edx,BYTE PTR [rax+rdx*1+0x880]
   140053fc5:	movzx  eax,BYTE PTR [r11]
   140053fc9:	movzx  ecx,BYTE PTR [rax+r10*1+0x980]
   140053fd2:	mov    eax,DWORD PTR [r10+0x678]
   140053fd9:	sar    eax,0x1a
   140053fdc:	and    eax,0x20
   140053fdf:	lea    r8d,[rdx+rcx*2]
   140053fe3:	xor    edx,edx
   140053fe5:	add    r8d,eax
   140053fe8:	movzx  eax,BYTE PTR [r10+0xa81]
   140053ff0:	add    r8d,r9d
   140053ff3:	add    r8d,eax
   140053ff6:	movzx  eax,BYTE PTR [r11+0x1]
   140053ffb:	shr    DWORD PTR [r10+0x4a90],0xe
   140054003:	dec    eax
   140054005:	movsxd rcx,eax
   140054008:	mov    eax,DWORD PTR [r10+0x4a8c]
   14005400f:	sub    eax,DWORD PTR [r10+0x4a88]
   140054016:	div    DWORD PTR [r10+0x4a90]
   14005401d:	shl    rcx,0x6
   140054021:	movsxd r9,r8d
   140054024:	add    r9,rcx
   140054027:	movzx  ecx,WORD PTR [r10+r9*2+0xa84]
   140054030:	cmp    eax,ecx
   140054032:	jae    0x140054092
   140054034:	mov    QWORD PTR [r10+0x660],r11
   14005403b:	mov    edx,0x80
   140054040:	mov    al,BYTE PTR [r11+0x1]
   140054044:	cmp    al,dl
   140054046:	adc    al,0x0
   140054048:	mov    BYTE PTR [r11+0x1],al
   14005404c:	and    DWORD PTR [r10+0x4a94],0x0
   140054054:	movzx  eax,WORD PTR [r10+r9*2+0xa84]
   14005405d:	mov    DWORD PTR [r10+0x4a98],eax
   140054064:	movzx  ecx,WORD PTR [r10+r9*2+0xa84]
   14005406d:	lea    eax,[rcx+0x20]
   140054070:	sar    eax,0x7
   140054073:	sub    cx,ax
   140054076:	add    cx,dx
   140054079:	mov    WORD PTR [r10+r9*2+0xa84],cx
   140054082:	inc    DWORD PTR [r10+0x678]
   140054089:	mov    BYTE PTR [r10+0xa81],0x1
   140054091:	ret    
   140054092:	mov    DWORD PTR [r10+0x4a94],ecx
   140054099:	movzx  ecx,WORD PTR [r10+r9*2+0xa84]
   1400540a2:	lea    eax,[rcx+0x20]
   1400540a5:	sar    eax,0x7
   1400540a8:	sub    cx,ax
   1400540ab:	mov    WORD PTR [r10+r9*2+0xa84],cx
   1400540b4:	lea    rcx,[rip+0x1d09d]        # 0x140071158
   1400540bb:	mov    DWORD PTR [r10+0x4a98],0x4000
   1400540c6:	movzx  eax,WORD PTR [r10+r9*2+0xa84]
   1400540cf:	shr    rax,0xa
   1400540d3:	mov    DWORD PTR [r10+0x668],0x1
   1400540de:	movzx  eax,BYTE PTR [rax+rcx*1]
   1400540e2:	mov    DWORD PTR [r10+0x66c],eax
   1400540e9:	movzx  ecx,BYTE PTR [r11]
   1400540ed:	mov    al,BYTE PTR [r10+0xa80]
   1400540f4:	mov    BYTE PTR [rcx+r10*1+0x680],al
   1400540fc:	and    QWORD PTR [r10+0x660],0x0
   140054104:	mov    BYTE PTR [r10+0xa81],0x0
   14005410c:	ret    
   14005410d:	int3   
   14005410e:	int3   
   14005410f:	int3   
   140054110:	rex push rbx
   140054112:	sub    rsp,0x20
   140054116:	movzx  eax,WORD PTR [rcx+0x2]
   14005411a:	mov    rbx,rdx
   14005411d:	mov    DWORD PTR [rdx+0x4a9c],eax
   140054123:	mov    r10,rcx
   140054126:	mov    r9,QWORD PTR [rcx+0x4]
   14005412a:	xor    edx,edx
   14005412c:	mov    eax,DWORD PTR [rbx+0x4a90]
   140054132:	div    DWORD PTR [rbx+0x4a9c]
   140054138:	xor    edx,edx
   14005413a:	mov    r8d,eax
   14005413d:	mov    DWORD PTR [rbx+0x4a90],eax
   140054143:	mov    eax,DWORD PTR [rbx+0x4a8c]
   140054149:	sub    eax,DWORD PTR [rbx+0x4a88]
   14005414f:	mov    ecx,DWORD PTR [rbx+0x4a9c]
   140054155:	div    r8d
   140054158:	mov    r8d,eax
   14005415b:	cmp    eax,ecx
   14005415d:	jl     0x140054166
   14005415f:	xor    al,al
   140054161:	jmp    0x14005420f
   140054166:	movzx  edx,BYTE PTR [r9+0x1]
   14005416b:	cmp    eax,edx
   14005416d:	jge    0x1400541bc
   14005416f:	lea    eax,[rdx+rdx*1]
   140054172:	mov    DWORD PTR [rbx+0x4a98],edx
   140054178:	cmp    eax,ecx
   14005417a:	mov    QWORD PTR [rbx+0x660],r9
   140054181:	seta   al
   140054184:	mov    BYTE PTR [rbx+0xa81],al
   14005418a:	movzx  eax,al
   14005418d:	add    DWORD PTR [rbx+0x678],eax
   140054193:	mov    eax,0x4
   140054198:	add    edx,eax
   14005419a:	mov    BYTE PTR [r9+0x1],dl
   14005419e:	add    WORD PTR [r10+0x2],ax
   1400541a3:	cmp    edx,0x7c
   1400541a6:	jle    0x1400541b3
   1400541a8:	mov    rdx,rbx
   1400541ab:	mov    rcx,r10
   1400541ae:	call   0x14005490c
   1400541b3:	and    DWORD PTR [rbx+0x4a94],0x0
   1400541ba:	jmp    0x14005420d
   1400541bc:	mov    r11,QWORD PTR [rbx+0x660]
   1400541c3:	test   r11,r11
   1400541c6:	je     0x14005415f
   1400541c8:	mov    BYTE PTR [rbx+0xa81],0x0
   1400541cf:	movzx  ecx,WORD PTR [r10]
   1400541d3:	dec    ecx
   1400541d5:	jmp    0x1400541dc
   1400541d7:	sub    ecx,0x1
   1400541da:	je     0x140054215
   1400541dc:	movzx  eax,BYTE PTR [r9+0xb]
   1400541e1:	add    r9,0xa
   1400541e5:	add    edx,eax
   1400541e7:	cmp    edx,r8d
   1400541ea:	jle    0x1400541d7
   1400541ec:	mov    DWORD PTR [rbx+0x4a98],edx
   1400541f2:	mov    r8,r9
   1400541f5:	movzx  eax,BYTE PTR [r9+0x1]
   1400541fa:	mov    rcx,r10
   1400541fd:	sub    edx,eax
   1400541ff:	mov    DWORD PTR [rbx+0x4a94],edx
   140054205:	mov    rdx,rbx
   140054208:	call   0x140054b14
   14005420d:	mov    al,0x1
   14005420f:	add    rsp,0x20
   140054213:	pop    rbx
   140054214:	ret    
   140054215:	movzx  eax,BYTE PTR [r11]
   140054219:	mov    cl,BYTE PTR [rax+rbx*1+0x980]
   140054220:	mov    al,BYTE PTR [rbx+0xa80]
   140054226:	mov    DWORD PTR [rbx+0x4a94],edx
   14005422c:	mov    BYTE PTR [rbx+0xa82],cl
   140054232:	movzx  ecx,BYTE PTR [r9]
   140054236:	mov    BYTE PTR [rcx+rbx*1+0x680],al
   14005423d:	movzx  eax,WORD PTR [r10]
   140054241:	and    QWORD PTR [rbx+0x660],0x0
   140054249:	mov    DWORD PTR [rbx+0x668],eax
   14005424f:	lea    edx,[rax-0x1]
   140054252:	mov    al,BYTE PTR [rbx+0xa80]
   140054258:	lea    r9,[r9-0xa]
   14005425c:	movzx  ecx,BYTE PTR [r9]
   140054260:	mov    BYTE PTR [rcx+rbx*1+0x680],al
   140054267:	sub    edx,0x1
   14005426a:	jne    0x140054252
   14005426c:	mov    eax,DWORD PTR [rbx+0x4a9c]
   140054272:	mov    DWORD PTR [rbx+0x4a98],eax
   140054278:	jmp    0x14005420d
   14005427a:	int3   
   14005427b:	int3   
   14005427c:	mov    QWORD PTR [rsp+0x18],rbx
   140054281:	mov    QWORD PTR [rsp+0x20],rsi
   140054286:	push   rdi
   140054287:	sub    rsp,0x830
   14005428e:	mov    rax,QWORD PTR [rip+0x2dc4b]        # 0x140081ee0
   140054295:	xor    rax,rsp
   140054298:	mov    QWORD PTR [rsp+0x820],rax
   1400542a0:	movzx  esi,WORD PTR [rcx]
   1400542a3:	mov    rbx,rdx
   1400542a6:	sub    esi,DWORD PTR [rdx+0x668]
   1400542ac:	mov    rdi,rcx
   1400542af:	mov    r8d,esi
   1400542b2:	call   0x140054844
   1400542b7:	mov    rcx,QWORD PTR [rdi+0x4]
   1400542bb:	lea    rdx,[rsp+0x20]
   1400542c0:	mov    r9b,BYTE PTR [rbx+0xa80]
   1400542c7:	sub    rcx,0xa
   1400542cb:	xor    r11d,r11d
   1400542ce:	mov    r8,rax
   1400542d1:	add    rcx,0xa
   1400542d5:	movzx  eax,BYTE PTR [rcx]
   1400542d8:	cmp    BYTE PTR [rax+rbx*1+0x680],r9b
   1400542e0:	je     0x1400542d1
   1400542e2:	movzx  eax,BYTE PTR [rcx+0x1]
   1400542e6:	mov    QWORD PTR [rdx],rcx
   1400542e9:	add    r11d,eax
   1400542ec:	add    rdx,0x8
   1400542f0:	sub    esi,0x1
   1400542f3:	jne    0x1400542d1
   1400542f5:	add    DWORD PTR [rbx+0x4a9c],r11d
   1400542fc:	xor    edx,edx
   1400542fe:	mov    eax,DWORD PTR [rbx+0x4a90]
   140054304:	div    DWORD PTR [rbx+0x4a9c]
   14005430a:	xor    edx,edx
   14005430c:	mov    ecx,eax
   14005430e:	mov    DWORD PTR [rbx+0x4a90],eax
   140054314:	mov    eax,DWORD PTR [rbx+0x4a8c]
   14005431a:	sub    eax,DWORD PTR [rbx+0x4a88]
   140054320:	div    ecx
   140054322:	mov    r10d,eax
   140054325:	mov    eax,DWORD PTR [rbx+0x4a9c]
   14005432b:	cmp    r10d,eax
   14005432e:	jl     0x140054337
   140054330:	xor    al,al
   140054332:	jmp    0x140054429
   140054337:	mov    rdx,QWORD PTR [rsp+0x20]
   14005433c:	lea    r9,[rsp+0x20]
   140054341:	cmp    r10d,r11d
   140054344:	jge    0x1400543d5
   14005434a:	movzx  ecx,BYTE PTR [rdx+0x1]
   14005434e:	jmp    0x14005435d
   140054350:	lea    r9,[r9+0x8]
   140054354:	mov    rdx,QWORD PTR [r9]
   140054357:	movzx  eax,BYTE PTR [rdx+0x1]
   14005435b:	add    ecx,eax
   14005435d:	cmp    ecx,r10d
   140054360:	jle    0x140054350
   140054362:	mov    DWORD PTR [rbx+0x4a98],ecx
   140054368:	movzx  eax,BYTE PTR [rdx+0x1]
   14005436c:	sub    ecx,eax
   14005436e:	mov    DWORD PTR [rbx+0x4a94],ecx
   140054374:	mov    cl,BYTE PTR [r8+0x2]
   140054378:	cmp    cl,0x7
   14005437b:	jae    0x1400543a0
   14005437d:	add    BYTE PTR [r8+0x3],0xff
   140054382:	jne    0x1400543a0
   140054384:	movzx  eax,WORD PTR [r8]
   140054388:	add    ax,ax
   14005438b:	mov    WORD PTR [r8],ax
   14005438f:	mov    eax,0x3
   140054394:	shl    al,cl
   140054396:	inc    cl
   140054398:	mov    BYTE PTR [r8+0x3],al
   14005439c:	mov    BYTE PTR [r8+0x2],cl
   1400543a0:	mov    QWORD PTR [rbx+0x660],rdx
   1400543a7:	add    BYTE PTR [rdx+0x1],0x4
   1400543ab:	add    WORD PTR [rdi+0x2],0x4
   1400543b0:	cmp    BYTE PTR [rdx+0x1],0x7c
   1400543b4:	jbe    0x1400543c1
   1400543b6:	mov    rdx,rbx
   1400543b9:	mov    rcx,rdi
   1400543bc:	call   0x14005490c
   1400543c1:	mov    eax,DWORD PTR [rbx+0x67c]
   1400543c7:	inc    BYTE PTR [rbx+0xa80]
   1400543cd:	mov    DWORD PTR [rbx+0x678],eax
   1400543d3:	jmp    0x140054427
   1400543d5:	mov    DWORD PTR [rbx+0x4a94],r11d
   1400543dc:	lea    r9,[rsp+0x20]
   1400543e1:	mov    DWORD PTR [rbx+0x4a98],eax
   1400543e7:	movzx  r10d,WORD PTR [rdi]
   1400543eb:	sub    r10d,DWORD PTR [rbx+0x668]
   1400543f2:	sub    r9,0x8
   1400543f6:	lea    r9,[r9+0x8]
   1400543fa:	mov    rcx,QWORD PTR [r9]
   1400543fd:	movzx  edx,BYTE PTR [rcx]
   140054400:	mov    cl,BYTE PTR [rbx+0xa80]
   140054406:	mov    BYTE PTR [rdx+rbx*1+0x680],cl
   14005440d:	sub    r10d,0x1
   140054411:	jne    0x1400543f6
   140054413:	movzx  ecx,WORD PTR [rbx+0x4a9c]
   14005441a:	add    WORD PTR [r8],cx
   14005441e:	movzx  ecx,WORD PTR [rdi]
   140054421:	mov    DWORD PTR [rbx+0x668],ecx
   140054427:	mov    al,0x1
   140054429:	mov    rcx,QWORD PTR [rsp+0x820]
   140054431:	xor    rcx,rsp
   140054434:	call   0x140055f90
   140054439:	lea    r11,[rsp+0x830]
   140054441:	mov    rbx,QWORD PTR [r11+0x20]
   140054445:	mov    rsi,QWORD PTR [r11+0x28]
   140054449:	mov    rsp,r11
   14005444c:	pop    rdi
   14005444d:	ret    
   14005444e:	int3   
   14005444f:	int3   
   140054450:	mov    QWORD PTR [rsp+0x8],rbx
   140054455:	mov    rax,QWORD PTR [rdx+0x660]
   14005445c:	lea    rbx,[rcx+0x2]
   140054460:	mov    r11,rdx
   140054463:	movzx  r9d,BYTE PTR [rax]
   140054467:	movzx  r10d,BYTE PTR [r9+rdx*1+0x980]
   140054470:	mov    BYTE PTR [rdx+0xa82],r10b
   140054477:	mov    rax,QWORD PTR [rcx+0xc]
   14005447b:	movzx  r9d,BYTE PTR [rbx]
   14005447f:	movzx  eax,WORD PTR [rax]
   140054482:	dec    eax
   140054484:	cdqe   
   140054486:	movzx  ecx,BYTE PTR [rax+rdx*1+0x880]
   14005448e:	movzx  eax,BYTE PTR [r9+rdx*1+0x980]
   140054497:	lea    edx,[rcx+rax*2]
   14005449a:	mov    eax,DWORD PTR [r11+0x678]
   1400544a1:	sar    eax,0x1a
   1400544a4:	and    eax,0x20
   1400544a7:	add    edx,eax
   1400544a9:	movzx  eax,BYTE PTR [r11+0xa81]
   1400544b1:	add    edx,r10d
   1400544b4:	add    edx,eax
   1400544b6:	movzx  eax,BYTE PTR [rbx+0x1]
   1400544ba:	dec    eax
   1400544bc:	movsxd r10,edx
   1400544bf:	movsxd rcx,eax
   1400544c2:	shl    rcx,0x6
   1400544c6:	add    r10,rcx
   1400544c9:	cmp    r9d,r8d
   1400544cc:	jne    0x14005452e
   1400544ce:	mov    QWORD PTR [r11+0x660],rbx
   1400544d5:	mov    edx,0x80
   1400544da:	mov    al,BYTE PTR [rbx+0x1]
   1400544dd:	cmp    al,dl
   1400544df:	adc    al,0x0
   1400544e1:	mov    BYTE PTR [rbx+0x1],al
   1400544e4:	and    DWORD PTR [r11+0x4a94],0x0
   1400544ec:	movzx  eax,WORD PTR [r11+r10*2+0xa84]
   1400544f5:	mov    DWORD PTR [r11+0x4a98],eax
   1400544fc:	movzx  ecx,WORD PTR [r11+r10*2+0xa84]
   140054505:	lea    eax,[rcx+0x20]
   140054508:	sar    eax,0x7
   14005450b:	sub    cx,ax
   14005450e:	add    cx,dx
   140054511:	mov    WORD PTR [r11+r10*2+0xa84],cx
   14005451a:	inc    DWORD PTR [r11+0x678]
   140054521:	mov    BYTE PTR [r11+0xa81],0x1
   140054529:	jmp    0x1400545b0
   14005452e:	movzx  eax,WORD PTR [r11+r10*2+0xa84]
   140054537:	mov    DWORD PTR [r11+0x4a94],eax
   14005453e:	movzx  ecx,WORD PTR [r11+r10*2+0xa84]
   140054547:	lea    eax,[rcx+0x20]
   14005454a:	sar    eax,0x7
   14005454d:	sub    cx,ax
   140054550:	mov    WORD PTR [r11+r10*2+0xa84],cx
   140054559:	lea    rcx,[rip+0x1cbf8]        # 0x140071158
   140054560:	mov    DWORD PTR [r11+0x4a98],0x4000
   14005456b:	movzx  eax,WORD PTR [r11+r10*2+0xa84]
   140054574:	shr    rax,0xa
   140054578:	mov    DWORD PTR [r11+0x668],0x1
   140054583:	movzx  eax,BYTE PTR [rax+rcx*1]
   140054587:	mov    DWORD PTR [r11+0x66c],eax
   14005458e:	movzx  ecx,BYTE PTR [rbx]
   140054591:	mov    al,BYTE PTR [r11+0xa80]
   140054598:	mov    BYTE PTR [rcx+r11*1+0x680],al
   1400545a0:	and    QWORD PTR [r11+0x660],0x0
   1400545a8:	mov    BYTE PTR [r11+0xa81],0x0
   1400545b0:	mov    rbx,QWORD PTR [rsp+0x8]
   1400545b5:	ret    
   1400545b6:	int3   
   1400545b7:	int3   
   1400545b8:	rex push rbx
   1400545ba:	sub    rsp,0x20
   1400545be:	mov    r9,rcx
   1400545c1:	mov    r10d,r8d
   1400545c4:	movzx  ecx,WORD PTR [rcx+0x2]
   1400545c8:	mov    rbx,rdx
   1400545cb:	mov    DWORD PTR [rdx+0x4a9c],ecx
   1400545d1:	mov    r8,QWORD PTR [r9+0x4]
   1400545d5:	movzx  eax,BYTE PTR [r8]
   1400545d9:	cmp    eax,r10d
   1400545dc:	jne    0x14005462d
   1400545de:	movzx  eax,BYTE PTR [r8+0x1]
   1400545e3:	mov    DWORD PTR [rdx+0x4a98],eax
   1400545e9:	add    eax,eax
   1400545eb:	cmp    eax,ecx
   1400545ed:	mov    QWORD PTR [rdx+0x660],r8
   1400545f4:	seta   al
   1400545f7:	mov    BYTE PTR [rdx+0xa81],al
   1400545fd:	movzx  eax,al
   140054600:	add    DWORD PTR [rdx+0x678],eax
   140054606:	add    BYTE PTR [r8+0x1],0x4
   14005460b:	add    WORD PTR [r9+0x2],0x4
   140054611:	cmp    BYTE PTR [r8+0x1],0x7c
   140054616:	jbe    0x140054620
   140054618:	mov    rcx,r9
   14005461b:	call   0x14005490c
   140054620:	and    DWORD PTR [rbx+0x4a94],0x0
   140054627:	add    rsp,0x20
   14005462b:	pop    rbx
   14005462c:	ret    
   14005462d:	mov    BYTE PTR [rdx+0xa81],0x0
   140054634:	movzx  ecx,WORD PTR [r9]
   140054638:	movzx  edx,BYTE PTR [r8+0x1]
   14005463d:	dec    ecx
   14005463f:	jmp    0x14005464d
   140054641:	movzx  eax,BYTE PTR [r8+0x1]
   140054646:	add    edx,eax
   140054648:	sub    ecx,0x1
   14005464b:	je     0x14005467d
   14005464d:	add    r8,0xa
   140054651:	movzx  eax,BYTE PTR [r8]
   140054655:	cmp    eax,r10d
   140054658:	jne    0x140054641
   14005465a:	mov    DWORD PTR [rbx+0x4a94],edx
   140054660:	mov    rcx,r9
   140054663:	movzx  eax,BYTE PTR [r8+0x1]
   140054668:	add    eax,edx
   14005466a:	mov    rdx,rbx
   14005466d:	mov    DWORD PTR [rbx+0x4a98],eax
   140054673:	add    rsp,0x20
   140054677:	pop    rbx
   140054678:	jmp    0x140054b14
   14005467d:	mov    rax,QWORD PTR [rbx+0x660]
   140054684:	movzx  ecx,BYTE PTR [rax]
   140054687:	mov    al,BYTE PTR [rcx+rbx*1+0x980]
   14005468e:	mov    BYTE PTR [rbx+0xa82],al
   140054694:	mov    al,BYTE PTR [rbx+0xa80]
   14005469a:	mov    DWORD PTR [rbx+0x4a94],edx
   1400546a0:	movzx  ecx,BYTE PTR [r8]
   1400546a4:	mov    BYTE PTR [rcx+rbx*1+0x680],al
   1400546ab:	movzx  eax,WORD PTR [r9]
   1400546af:	and    QWORD PTR [rbx+0x660],0x0
   1400546b7:	mov    DWORD PTR [rbx+0x668],eax
   1400546bd:	lea    edx,[rax-0x1]
   1400546c0:	mov    al,BYTE PTR [rbx+0xa80]
   1400546c6:	lea    r8,[r8-0xa]
   1400546ca:	movzx  ecx,BYTE PTR [r8]
   1400546ce:	mov    BYTE PTR [rcx+rbx*1+0x680],al
   1400546d5:	sub    edx,0x1
   1400546d8:	jne    0x1400546c0
   1400546da:	mov    eax,DWORD PTR [rbx+0x4a9c]
   1400546e0:	mov    DWORD PTR [rbx+0x4a98],eax
   1400546e6:	add    rsp,0x20
   1400546ea:	pop    rbx
   1400546eb:	ret    
   1400546ec:	mov    QWORD PTR [rsp+0x8],rbx
   1400546f1:	mov    QWORD PTR [rsp+0x10],rbp
   1400546f6:	mov    QWORD PTR [rsp+0x18],rsi
   1400546fb:	push   rdi
   1400546fc:	sub    rsp,0x20
   140054700:	movzx  edi,WORD PTR [rcx]
   140054703:	mov    ebp,r8d
   140054706:	sub    edi,DWORD PTR [rdx+0x668]
   14005470c:	mov    rbx,rdx
   14005470f:	mov    r8d,edi
   140054712:	mov    rsi,rcx
   140054715:	call   0x140054844
   14005471a:	mov    rdx,QWORD PTR [rsi+0x4]
   14005471e:	mov    r9,rax
   140054721:	sub    rdx,0xa
   140054725:	xor    r8d,r8d
   140054728:	mov    cl,BYTE PTR [rbx+0xa80]
   14005472e:	add    rdx,0xa
   140054732:	movzx  eax,BYTE PTR [rdx]
   140054735:	cmp    BYTE PTR [rax+rbx*1+0x680],cl
   14005473c:	je     0x14005472e
   14005473e:	movzx  eax,BYTE PTR [rdx+0x1]
   140054742:	add    r8d,eax
   140054745:	movzx  eax,BYTE PTR [rdx]
   140054748:	cmp    eax,ebp
   14005474a:	je     0x140054784
   14005474c:	mov    BYTE PTR [rax+rbx*1+0x680],cl
   140054753:	sub    edi,0x1
   140054756:	jne    0x140054728
   140054758:	add    DWORD PTR [rbx+0x4a9c],r8d
   14005475f:	mov    eax,DWORD PTR [rbx+0x4a9c]
   140054765:	mov    DWORD PTR [rbx+0x4a98],eax
   14005476b:	mov    DWORD PTR [rbx+0x4a94],r8d
   140054772:	add    WORD PTR [r9],ax
   140054776:	movzx  eax,WORD PTR [rsi]
   140054779:	mov    DWORD PTR [rbx+0x668],eax
   14005477f:	jmp    0x14005482c
   140054784:	mov    DWORD PTR [rbx+0x4a98],r8d
   14005478b:	mov    ecx,r8d
   14005478e:	movzx  eax,BYTE PTR [rdx+0x1]
   140054792:	sub    ecx,eax
   140054794:	mov    DWORD PTR [rbx+0x4a94],ecx
   14005479a:	sub    edi,0x1
   14005479d:	je     0x1400547c6
   14005479f:	mov    r10b,BYTE PTR [rbx+0xa80]
   1400547a6:	mov    rcx,rdx
   1400547a9:	add    rcx,0xa
   1400547ad:	movzx  eax,BYTE PTR [rcx]
   1400547b0:	cmp    BYTE PTR [rax+rbx*1+0x680],r10b
   1400547b8:	je     0x1400547a9
   1400547ba:	movzx  eax,BYTE PTR [rcx+0x1]
   1400547be:	add    r8d,eax
   1400547c1:	sub    edi,0x1
   1400547c4:	jne    0x1400547a9
   1400547c6:	add    DWORD PTR [rbx+0x4a9c],r8d
   1400547cd:	mov    cl,BYTE PTR [r9+0x2]
   1400547d1:	cmp    cl,0x7
   1400547d4:	jae    0x1400547f9
   1400547d6:	add    BYTE PTR [r9+0x3],0xff
   1400547db:	jne    0x1400547f9
   1400547dd:	movzx  eax,WORD PTR [r9]
   1400547e1:	add    ax,ax
   1400547e4:	mov    WORD PTR [r9],ax
   1400547e8:	mov    eax,0x3
   1400547ed:	shl    al,cl
   1400547ef:	inc    cl
   1400547f1:	mov    BYTE PTR [r9+0x3],al
   1400547f5:	mov    BYTE PTR [r9+0x2],cl
   1400547f9:	mov    QWORD PTR [rbx+0x660],rdx
   140054800:	add    BYTE PTR [rdx+0x1],0x4
   140054804:	add    WORD PTR [rsi+0x2],0x4
   140054809:	cmp    BYTE PTR [rdx+0x1],0x7c
   14005480d:	jbe    0x14005481a
   14005480f:	mov    rdx,rbx
   140054812:	mov    rcx,rsi
   140054815:	call   0x14005490c
   14005481a:	mov    eax,DWORD PTR [rbx+0x67c]
   140054820:	inc    BYTE PTR [rbx+0xa80]
   140054826:	mov    DWORD PTR [rbx+0x678],eax
   14005482c:	mov    rbx,QWORD PTR [rsp+0x30]
   140054831:	mov    rbp,QWORD PTR [rsp+0x38]
   140054836:	mov    rsi,QWORD PTR [rsp+0x40]
   14005483b:	add    rsp,0x20
   14005483f:	pop    rdi
   140054840:	ret    
   140054841:	int3   
   140054842:	int3   
   140054843:	int3   
   140054844:	mov    QWORD PTR [rsp+0x8],rbx
   140054849:	mov    QWORD PTR [rsp+0x10],rdi
   14005484e:	mov    eax,0x100
   140054853:	mov    rdi,rdx
   140054856:	cmp    WORD PTR [rcx],ax
   140054859:	je     0x1400548eb
   14005485f:	mov    rax,QWORD PTR [rcx+0xc]
   140054863:	xor    ebx,ebx
   140054865:	movzx  r10d,WORD PTR [rcx]
   140054869:	mov    edx,ebx
   14005486b:	movzx  ecx,WORD PTR [rcx+0x2]
   14005486f:	mov    r11d,ebx
   140054872:	movzx  r9d,WORD PTR [rax]
   140054876:	sub    r9d,r10d
   140054879:	cmp    r8d,r9d
   14005487c:	setl   r11b
   140054880:	imul   eax,r10d,0xb
   140054884:	cmp    ecx,eax
   140054886:	setl   dl
   140054889:	lea    eax,[rdx+rdx*1]
   14005488c:	cdqe   
   14005488e:	add    r11,rax
   140054891:	lea    eax,[r8-0x1]
   140054895:	movsxd rcx,eax
   140054898:	movzx  eax,BYTE PTR [rcx+rdi*1+0x780]
   1400548a0:	shl    rax,0x4
   1400548a4:	add    r11,rax
   1400548a7:	mov    eax,ebx
   1400548a9:	cmp    DWORD PTR [rdi+0x668],r8d
   1400548b0:	setg   al
   1400548b3:	shl    eax,0x2
   1400548b6:	cdqe   
   1400548b8:	add    r11,rax
   1400548bb:	movzx  eax,BYTE PTR [rdi+0xa82]
   1400548c2:	add    r11,rax
   1400548c5:	lea    r8,[rdi+r11*4]
   1400548c9:	movzx  eax,WORD PTR [r8]
   1400548cd:	mov    cl,BYTE PTR [r8+0x2]
   1400548d1:	mov    edx,eax
   1400548d3:	shr    edx,cl
   1400548d5:	sub    ax,dx
   1400548d8:	test   edx,edx
   1400548da:	mov    WORD PTR [r8],ax
   1400548de:	sete   bl
   1400548e1:	add    ebx,edx
   1400548e3:	mov    DWORD PTR [rdi+0x4a9c],ebx
   1400548e9:	jmp    0x1400548fc
   1400548eb:	lea    r8,[rdx+0x640]
   1400548f2:	mov    DWORD PTR [rdx+0x4a9c],0x1
   1400548fc:	mov    rbx,QWORD PTR [rsp+0x8]
   140054901:	mov    rax,r8
   140054904:	mov    rdi,QWORD PTR [rsp+0x10]
   140054909:	ret    
   14005490a:	int3   
   14005490b:	int3   
   14005490c:	mov    QWORD PTR [rsp+0x8],rbx
   140054911:	mov    QWORD PTR [rsp+0x10],rsi
   140054916:	mov    QWORD PTR [rsp+0x18],rdi
   14005491b:	push   rbp
   14005491c:	push   r14
   14005491e:	push   r15
   140054920:	mov    rbp,rsp
   140054923:	sub    rsp,0x30
   140054927:	movzx  r11d,WORD PTR [rcx]
   14005492b:	mov    rdi,rdx
   14005492e:	mov    r8,QWORD PTR [rdx+0x660]
   140054935:	mov    rbx,rcx
   140054938:	lea    r9d,[r11-0x1]
   14005493c:	cmp    r8,QWORD PTR [rcx+0x4]
   140054940:	je     0x140054978
   140054942:	lea    rdx,[r8-0xa]
   140054946:	movsd  xmm0,QWORD PTR [rdx]
   14005494a:	movsd  xmm1,QWORD PTR [r8]
   14005494f:	movzx  ecx,WORD PTR [r8+0x8]
   140054954:	movsd  QWORD PTR [r8],xmm0
   140054959:	movzx  eax,WORD PTR [rdx+0x8]
   14005495d:	mov    WORD PTR [r8+0x8],ax
   140054962:	sub    r8,0xa
   140054966:	movsd  QWORD PTR [rdx],xmm1
   14005496a:	mov    WORD PTR [rdx+0x8],cx
   14005496e:	lea    rdx,[rdx-0xa]
   140054972:	cmp    r8,QWORD PTR [rbx+0x4]
   140054976:	jne    0x140054946
   140054978:	mov    rax,QWORD PTR [rbx+0x4]
   14005497c:	lea    r10,[rbx+0x2]
   140054980:	xor    r14d,r14d
   140054983:	mov    r15d,0x1
   140054989:	add    BYTE PTR [rax+0x1],0x4
   14005498d:	add    WORD PTR [r10],0x4
   140054992:	movzx  eax,BYTE PTR [r8+0x1]
   140054997:	movzx  edx,WORD PTR [r10]
   14005499b:	sub    edx,eax
   14005499d:	cmp    DWORD PTR [rdi+0x670],r14d
   1400549a4:	setne  r14b
   1400549a8:	add    eax,r14d
   1400549ab:	sar    eax,1
   1400549ad:	mov    BYTE PTR [r8+0x1],al
   1400549b1:	movzx  eax,al
   1400549b4:	mov    WORD PTR [r10],ax
   1400549b8:	movzx  eax,BYTE PTR [r8+0xb]
   1400549bd:	add    r8,0xa
   1400549c1:	sub    edx,eax
   1400549c3:	lea    ecx,[rax+r14*1]
   1400549c7:	sar    ecx,1
   1400549c9:	mov    BYTE PTR [r8+0x1],cl
   1400549cd:	movzx  eax,cl
   1400549d0:	add    WORD PTR [r10],ax
   1400549d4:	mov    al,BYTE PTR [r8-0x9]
   1400549d8:	cmp    BYTE PTR [r8+0x1],al
   1400549dc:	jbe    0x140054a20
   1400549de:	movsd  xmm1,QWORD PTR [r8]
   1400549e3:	mov    rcx,r8
   1400549e6:	movzx  esi,WORD PTR [r8+0x8]
   1400549eb:	movsd  QWORD PTR [rbp-0x10],xmm1
   1400549f0:	movsd  xmm0,QWORD PTR [rcx-0xa]
   1400549f5:	movzx  eax,WORD PTR [rcx-0x2]
   1400549f9:	movsd  QWORD PTR [rcx],xmm0
   1400549fd:	mov    WORD PTR [rcx+0x8],ax
   140054a01:	sub    rcx,0xa
   140054a05:	cmp    rcx,QWORD PTR [rbx+0x4]
   140054a09:	je     0x140054a18
   140054a0b:	mov    rax,QWORD PTR [rbp-0x10]
   140054a0f:	shr    rax,0x8
   140054a13:	cmp    al,BYTE PTR [rcx-0x9]
   140054a16:	ja     0x1400549f0
   140054a18:	movsd  QWORD PTR [rcx],xmm1
   140054a1c:	mov    WORD PTR [rcx+0x8],si
   140054a20:	sub    r9d,r15d
   140054a23:	jne    0x1400549b8
   140054a25:	inc    r8
   140054a28:	cmp    BYTE PTR [r8],r9b
   140054a2b:	jne    0x140054ab9
   140054a31:	add    r9d,r15d
   140054a34:	lea    r8,[r8-0xa]
   140054a38:	cmp    BYTE PTR [r8],0x0
   140054a3c:	je     0x140054a31
   140054a3e:	movzx  eax,WORD PTR [rbx]
   140054a41:	add    edx,r9d
   140054a44:	sub    eax,r9d
   140054a47:	mov    WORD PTR [rbx],ax
   140054a4a:	cmp    ax,r15w
   140054a4e:	jne    0x140054ab9
   140054a50:	mov    r8,QWORD PTR [rbx+0x4]
   140054a54:	movsd  xmm0,QWORD PTR [r8]
   140054a59:	movzx  r9d,WORD PTR [r8+0x8]
   140054a5e:	movsd  QWORD PTR [rbp-0x10],xmm0
   140054a63:	mov    rcx,QWORD PTR [rbp-0x10]
   140054a67:	shr    rcx,0x8
   140054a6b:	mov    al,cl
   140054a6d:	sar    edx,1
   140054a6f:	shr    al,1
   140054a71:	sub    cl,al
   140054a73:	mov    BYTE PTR [rbp-0xf],cl
   140054a76:	cmp    edx,r15d
   140054a79:	jg     0x140054a63
   140054a7b:	movsd  xmm0,QWORD PTR [rbp-0x10]
   140054a80:	lea    eax,[r11+0x1]
   140054a84:	sar    eax,1
   140054a86:	sub    eax,r15d
   140054a89:	cdqe   
   140054a8b:	movzx  ecx,BYTE PTR [rax+rdi*1+0x4ada]
   140054a93:	mov    rax,QWORD PTR [rdi+rcx*8+0x4b78]
   140054a9b:	mov    QWORD PTR [r8],rax
   140054a9e:	mov    QWORD PTR [rdi+rcx*8+0x4b78],r8
   140054aa6:	mov    QWORD PTR [rdi+0x660],r10
   140054aad:	movsd  QWORD PTR [r10],xmm0
   140054ab2:	mov    WORD PTR [r10+0x8],r9w
   140054ab7:	jmp    0x140054af9
   140054ab9:	movzx  r9d,WORD PTR [rbx]
   140054abd:	lea    r8d,[r11+0x1]
   140054ac1:	mov    eax,edx
   140054ac3:	sar    r8d,1
   140054ac6:	sar    eax,1
   140054ac8:	add    r9d,r15d
   140054acb:	sub    dx,ax
   140054ace:	sar    r9d,1
   140054ad1:	add    WORD PTR [r10],dx
   140054ad5:	cmp    r8d,r9d
   140054ad8:	je     0x140054aee
   140054ada:	mov    rdx,QWORD PTR [rbx+0x4]
   140054ade:	lea    rcx,[rdi+0x4ab0]
   140054ae5:	call   0x14004e5f0
   140054aea:	mov    QWORD PTR [rbx+0x4],rax
   140054aee:	mov    rax,QWORD PTR [rbx+0x4]
   140054af2:	mov    QWORD PTR [rdi+0x660],rax
   140054af9:	mov    rbx,QWORD PTR [rsp+0x50]
   140054afe:	mov    rsi,QWORD PTR [rsp+0x58]
   140054b03:	mov    rdi,QWORD PTR [rsp+0x60]
   140054b08:	add    rsp,0x30
   140054b0c:	pop    r15
   140054b0e:	pop    r14
   140054b10:	pop    rbp
   140054b11:	ret    
   140054b12:	int3   
   140054b13:	int3   
   140054b14:	sub    rsp,0x28
   140054b18:	mov    QWORD PTR [rdx+0x660],r8
   140054b1f:	mov    r9,r8
   140054b22:	add    BYTE PTR [r8+0x1],0x4
   140054b27:	mov    r10,rcx
   140054b2a:	add    WORD PTR [rcx+0x2],0x4
   140054b2f:	mov    al,BYTE PTR [r8-0x9]
   140054b33:	cmp    BYTE PTR [r8+0x1],al
   140054b37:	jbe    0x140054b7b
   140054b39:	movsd  xmm1,QWORD PTR [r9]
   140054b3e:	add    r8,0xfffffffffffffff6
   140054b42:	movzx  ecx,WORD PTR [r9+0x8]
   140054b47:	movsd  xmm0,QWORD PTR [r8]
   140054b4c:	movsd  QWORD PTR [r9],xmm0
   140054b51:	movzx  eax,WORD PTR [r8+0x8]
   140054b56:	mov    WORD PTR [r9+0x8],ax
   140054b5b:	movsd  QWORD PTR [r8],xmm1
   140054b60:	mov    WORD PTR [r8+0x8],cx
   140054b65:	mov    QWORD PTR [rdx+0x660],r8
   140054b6c:	cmp    BYTE PTR [r8+0x1],0x7c
   140054b71:	jbe    0x140054b7b
   140054b73:	mov    rcx,r10
   140054b76:	call   0x14005490c
   140054b7b:	add    rsp,0x28
   140054b7f:	ret    
   140054b80:	rex push rbx
   140054b82:	sub    rsp,0x20
   140054b86:	mov    rbx,QWORD PTR [rcx]
   140054b89:	test   rbx,rbx
   140054b8c:	je     0x140054bac
   140054b8e:	mov    rcx,QWORD PTR [rbx+0x1020]
   140054b95:	test   rcx,rcx
   140054b98:	je     0x140054b9f
   140054b9a:	call   0x14005a938
   140054b9f:	mov    edx,0x2318
   140054ba4:	mov    rcx,rbx
   140054ba7:	call   0x140055de8
   140054bac:	add    rsp,0x20
   140054bb0:	pop    rbx
   140054bb1:	ret    
   140054bb2:	int3   
   140054bb3:	int3   
   140054bb4:	rex push rbp
   140054bb6:	push   rbx
   140054bb7:	push   rsi
   140054bb8:	push   rdi
   140054bb9:	push   r14
   140054bbb:	lea    rbp,[rsp-0x2fa0]
   140054bc3:	mov    eax,0x30a0
   140054bc8:	call   0x140055f20
   140054bcd:	sub    rsp,rax
   140054bd0:	mov    rax,QWORD PTR [rip+0x2d309]        # 0x140081ee0
   140054bd7:	xor    rax,rsp
   140054bda:	mov    QWORD PTR [rbp+0x2f90],rax
   140054be1:	xor    r14d,r14d
   140054be4:	mov    rsi,rdx
   140054be7:	mov    rbx,rcx
   140054bea:	mov    r10d,0x3
   140054bf0:	test   r8,r8
   140054bf3:	je     0x140054c2b
   140054bf5:	test   r9,r9
   140054bf8:	je     0x140054c2b
   140054bfa:	mov    rcx,r9
   140054bfd:	movabs rax,0x4924924924924925
   140054c07:	shl    rcx,0x3
   140054c0b:	imul   rcx
   140054c0e:	sar    rdx,1
   140054c11:	mov    rax,rdx
   140054c14:	shr    rax,0x3f
   140054c18:	add    rax,rdx
   140054c1b:	cqo    
   140054c1d:	idiv   r8
   140054c20:	lea    ecx,[rax+0x1]
   140054c23:	call   0x140045bd4
   140054c28:	mov    r10d,eax
   140054c2b:	test   r10d,r10d
   140054c2e:	je     0x140054c43
   140054c30:	mov    eax,0x30
   140054c35:	mov    ecx,r10d
   140054c38:	movzx  eax,ax
   140054c3b:	lea    rdi,[rsp+0x20]
   140054c40:	rep stos WORD PTR es:[rdi],ax
   140054c43:	lea    ecx,[r10-0x1]
   140054c47:	add    rcx,rcx
   140054c4a:	cmp    rcx,0x64
   140054c4e:	jae    0x140054dc4
   140054c54:	mov    WORD PTR [rsp+rcx*1+0x20],r14w
   140054c5a:	lea    rdx,[rip+0x1c647]        # 0x1400712a8
   140054c61:	mov    edi,0x800
   140054c66:	lea    rcx,[rbp+0xf90]
   140054c6d:	mov    r8d,edi
   140054c70:	call   0x140046158
   140054c75:	mov    r8d,edi
   140054c78:	lea    rdx,[rsp+0x20]
   140054c7d:	lea    rcx,[rbp+0xf90]
   140054c84:	call   0x140046120
   140054c89:	mov    r8d,edi
   140054c8c:	lea    rdx,[rip+0x1c611]        # 0x1400712a4
   140054c93:	lea    rcx,[rbp+0xf90]
   140054c9a:	call   0x140046120
   140054c9f:	lea    rcx,[rbp-0x70]
   140054ca3:	sub    rcx,rbx
   140054ca6:	movzx  eax,WORD PTR [rbx]
   140054ca9:	mov    WORD PTR [rcx+rbx*1],ax
   140054cad:	lea    rbx,[rbx+0x2]
   140054cb1:	test   ax,ax
   140054cb4:	jne    0x140054ca6
   140054cb6:	lea    rdx,[rip+0x1c5fb]        # 0x1400712b8
   140054cbd:	lea    rcx,[rbp-0x70]
   140054cc1:	call   0x140030eb8
   140054cc6:	test   al,al
   140054cc8:	jne    0x140054d1a
   140054cca:	lea    rdx,[rip+0x1c5ef]        # 0x1400712c0
   140054cd1:	lea    rcx,[rbp-0x70]
   140054cd5:	call   0x140030eb8
   140054cda:	test   al,al
   140054cdc:	jne    0x140054d1a
   140054cde:	lea    rdx,[rip+0x1c5e3]        # 0x1400712c8
   140054ce5:	lea    rcx,[rbp-0x70]
   140054ce9:	call   0x140030eb8
   140054cee:	test   al,al
   140054cf0:	jne    0x140054d1a
   140054cf2:	mov    r8,rdi
   140054cf5:	lea    rdx,[rbp+0xf90]
   140054cfc:	lea    rcx,[rbp-0x70]
   140054d00:	call   0x140046120
   140054d05:	mov    r8,rdi
   140054d08:	lea    rdx,[rip+0x1c5c1]        # 0x1400712d0
   140054d0f:	lea    rcx,[rbp-0x70]
   140054d13:	call   0x140046120
   140054d18:	jmp    0x140054d8c
   140054d1a:	lea    rcx,[rbp-0x70]
   140054d1e:	call   0x140031bd4
   140054d23:	lea    rdi,[rbp+0x1f90]
   140054d2a:	mov    rdx,rax
   140054d2d:	sub    rdi,rax
   140054d30:	movzx  ecx,WORD PTR [rax]
   140054d33:	mov    WORD PTR [rdi+rax*1],cx
   140054d37:	lea    rax,[rax+0x2]
   140054d3b:	test   cx,cx
   140054d3e:	jne    0x140054d30
   140054d40:	lea    rax,[rbp+0xf90]
   140054d47:	sub    rdx,rax
   140054d4a:	lea    rcx,[rbp+0xf90]
   140054d51:	movzx  eax,WORD PTR [rcx]
   140054d54:	mov    WORD PTR [rdx+rcx*1],ax
   140054d58:	lea    rcx,[rcx+0x2]
   140054d5c:	test   ax,ax
   140054d5f:	jne    0x140054d51
   140054d61:	lea    rcx,[rbp-0x70]
   140054d65:	sub    rcx,0x2
   140054d69:	lea    rcx,[rcx+0x2]
   140054d6d:	cmp    WORD PTR [rcx],r14w
   140054d71:	jne    0x140054d69
   140054d73:	lea    rdi,[rbp+0x1f90]
   140054d7a:	xor    edx,edx
   140054d7c:	movzx  eax,WORD PTR [rdi+rdx*2]
   140054d80:	mov    WORD PTR [rcx+rdx*2],ax
   140054d84:	inc    rdx
   140054d87:	test   ax,ax
   140054d8a:	jne    0x140054d7c
   140054d8c:	lea    rax,[rbp-0x70]
   140054d90:	sub    rsi,rax
   140054d93:	lea    rcx,[rbp-0x70]
   140054d97:	movzx  eax,WORD PTR [rcx]
   140054d9a:	mov    WORD PTR [rsi+rcx*1],ax
   140054d9e:	lea    rcx,[rcx+0x2]
   140054da2:	test   ax,ax
   140054da5:	jne    0x140054d97
   140054da7:	mov    rcx,QWORD PTR [rbp+0x2f90]
   140054dae:	xor    rcx,rsp
   140054db1:	call   0x140055f90
   140054db6:	add    rsp,0x30a0
   140054dbd:	pop    r14
   140054dbf:	pop    rdi
   140054dc0:	pop    rsi
   140054dc1:	pop    rbx
   140054dc2:	pop    rbp
   140054dc3:	ret    
   140054dc4:	call   0x1400560e8
   140054dc9:	int3   
   140054dca:	int3   
   140054dcb:	int3   
   140054dcc:	mov    QWORD PTR [rsp+0x18],rbx
   140054dd1:	push   rbp
   140054dd2:	push   rsi
   140054dd3:	push   rdi
   140054dd4:	push   r12
   140054dd6:	push   r13
   140054dd8:	push   r14
   140054dda:	push   r15
   140054ddc:	lea    rbp,[rsp-0x1f50]
   140054de4:	mov    eax,0x2050
   140054de9:	call   0x140055f20
   140054dee:	sub    rsp,rax
   140054df1:	mov    rax,QWORD PTR [rip+0x2d0e8]        # 0x140081ee0
   140054df8:	xor    rax,rsp
   140054dfb:	mov    QWORD PTR [rbp+0x1f40],rax
   140054e02:	mov    r14d,DWORD PTR [rcx+0x22d4]
   140054e09:	lea    rax,[rcx+0x5848]
   140054e10:	mov    r13,QWORD PTR [rcx+0x22b0]
   140054e17:	lea    rsi,[rcx+0x34f0]
   140054e1e:	cmp    r14d,0x3
   140054e22:	mov    WORD PTR [rsp+0x24],r9w
   140054e28:	mov    rbx,rcx
   140054e2b:	mov    BYTE PTR [rsp+0x23],r8b
   140054e30:	cmove  rsi,rax
   140054e34:	mov    DWORD PTR [rsp+0x28],r14d
   140054e39:	xor    r12d,r12d
   140054e3c:	lea    eax,[r14-0x2]
   140054e40:	movzx  r15d,r9w
   140054e44:	mov    rdi,rdx
   140054e47:	lea    ecx,[r12+0x1]
   140054e4c:	cmp    eax,ecx
   140054e4e:	ja     0x140054e61
   140054e50:	cmp    BYTE PTR [rsi+0x1099],r12b
   140054e57:	je     0x140054e61
   140054e59:	mov    al,cl
   140054e5b:	mov    BYTE PTR [rsp+0x22],cl
   140054e5f:	jmp    0x140054e68
   140054e61:	mov    al,r12b
   140054e64:	mov    BYTE PTR [rsp+0x22],al
   140054e68:	test   rdx,rdx
   140054e6b:	je     0x140054ec7
   140054e6d:	test   al,al
   140054e6f:	je     0x140054ec7
   140054e71:	cmp    DWORD PTR [rbx+0x7f88],0x3
   140054e78:	je     0x140054e89
   140054e7a:	cmp    BYTE PTR [rsi+0x19],0x14
   140054e7e:	jb     0x140054ec7
   140054e80:	cmp    DWORD PTR [rsi+0x1074],0xffffffff
   140054e87:	je     0x140054ec7
   140054e89:	mov    al,BYTE PTR [rsi+0x10ca]
   140054e8f:	lea    rcx,[rsi+0x10cb]
   140054e96:	neg    al
   140054e98:	lea    rdx,[rsi+0x1070]
   140054e9f:	sbb    r8,r8
   140054ea2:	and    r8,rcx
   140054ea5:	lea    rcx,[rdi+0x150]
   140054eac:	call   0x14002413c
   140054eb1:	test   al,al
   140054eb3:	jne    0x140054ec7
   140054eb5:	lea    r8,[rsi+0x20]
   140054eb9:	mov    ecx,0x5
   140054ebe:	lea    rdx,[rbx+0x26]
   140054ec2:	call   0x140001358
   140054ec7:	mov    rax,QWORD PTR [rbx]
   140054eca:	mov    rcx,rbx
   140054ecd:	call   QWORD PTR [rax+0x20]
   140054ed0:	mov    QWORD PTR [rsp+0x30],rax
   140054ed5:	test   rdi,rdi
   140054ed8:	je     0x140054ee9
   140054eda:	mov    rcx,rbx
   140054edd:	call   0x140020b88
   140054ee2:	add    QWORD PTR [rdi+0x140],rax
   140054ee9:	cmp    r15w,0x54
   140054eee:	jne    0x140054f18
   140054ef0:	cmp    DWORD PTR [rbx+0x7f88],0x3
   140054ef7:	jne    0x140054f18
   140054ef9:	cmp    BYTE PTR [rbx+0x7f93],r12b
   140054f00:	je     0x140054f18
   140054f02:	cmp    r14d,0x5
   140054f06:	je     0x140054f18
   140054f08:	mov    rcx,rbx
   140054f0b:	call   0x14000e7f0
   140054f10:	mov    rcx,rbx
   140054f13:	call   0x14003bdd8
   140054f18:	mov    rcx,rbx
   140054f1b:	call   0x1400207cc
   140054f20:	lea    r14,[rbx+0x26]
   140054f24:	lea    rdx,[rsp+0x40]
   140054f29:	mov    rcx,r14
   140054f2c:	sub    rdx,r14
   140054f2f:	movzx  eax,WORD PTR [rcx]
   140054f32:	mov    WORD PTR [rdx+rcx*1],ax
   140054f36:	lea    rcx,[rcx+0x2]
   140054f3a:	test   ax,ax
   140054f3d:	jne    0x140054f2f
   140054f3f:	cmp    BYTE PTR [rbx+0x7f92],r12b
   140054f46:	lea    rcx,[rsp+0x40]
   140054f4b:	mov    edx,0x800
   140054f50:	sete   r8b
   140054f54:	call   0x14003259c
   140054f59:	mov    r15b,r12b
   140054f5c:	mov    BYTE PTR [rsp+0x21],r12b
   140054f61:	cmp    BYTE PTR [r13+0x62fa],r12b
   140054f68:	je     0x140054f88
   140054f6a:	mov    edx,0x800
   140054f6f:	lea    rcx,[rsp+0x40]
   140054f74:	call   0x140048354
   140054f79:	test   al,al
   140054f7b:	movzx  r15d,r12b
   140054f7f:	mov    eax,0x1
   140054f84:	cmove  r15d,eax
   140054f88:	mov    al,BYTE PTR [r13+0x61b5]
   140054f8f:	neg    al
   140054f91:	sbb    r12d,r12d
   140054f94:	and    r12d,0x4
   140054f98:	test   r15b,r15b
   140054f9b:	jne    0x1400551f9
   140054fa1:	mov    rax,QWORD PTR [rbx]
   140054fa4:	lea    rdx,[rsp+0x40]
   140054fa9:	mov    r8d,r12d
   140054fac:	mov    rcx,rbx
   140054faf:	call   QWORD PTR [rax+0x8]
   140054fb2:	xor    r15d,r15d
   140054fb5:	test   al,al
   140054fb7:	jne    0x1400550a9
   140054fbd:	xor    eax,eax
   140054fbf:	test   rdi,rdi
   140054fc2:	je     0x140054fcb
   140054fc4:	mov    QWORD PTR [rdi+0x148],rax
   140054fcb:	test   r15b,r15b
   140054fce:	jne    0x14005502e
   140054fd0:	lea    rdx,[rbp+0xf40]
   140054fd7:	mov    rcx,r14
   140054fda:	sub    rdx,r14
   140054fdd:	xor    r15d,r15d
   140054fe0:	movzx  eax,WORD PTR [rcx]
   140054fe3:	mov    WORD PTR [rdx+rcx*1],ax
   140054fe7:	lea    rcx,[rcx+0x2]
   140054feb:	test   ax,ax
   140054fee:	jne    0x140054fe0
   140054ff0:	mov    edx,0x800
   140054ff5:	lea    rcx,[rbp+0xf40]
   140054ffc:	mov    r8d,0x1
   140055002:	call   0x14003259c
   140055007:	mov    rax,QWORD PTR [rbx]
   14005500a:	lea    rdx,[rbp+0xf40]
   140055011:	mov    r8d,r12d
   140055014:	mov    BYTE PTR [rsp+0x20],0x1
   140055019:	mov    rcx,rbx
   14005501c:	call   QWORD PTR [rax+0x8]
   14005501f:	test   al,al
   140055021:	jne    0x14005511e
   140055027:	mov    r15b,BYTE PTR [rsp+0x20]
   14005502c:	xor    eax,eax
   14005502e:	cmp    BYTE PTR [rsp+0x21],al
   140055032:	jne    0x14005504c
   140055034:	mov    r8d,0x1
   14005503a:	mov    rdx,r14
   14005503d:	mov    rcx,r13
   140055040:	call   0x140039408
   140055045:	mov    BYTE PTR [rsp+0x21],0x1
   14005504a:	jmp    0x14005508d
   14005504c:	cmp    BYTE PTR [r13+0x62fa],al
   140055053:	jne    0x140055069
   140055055:	lea    rcx,[rsp+0x40]
   14005505a:	call   0x14002217c
   14005505f:	test   al,al
   140055061:	je     0x1400551f9
   140055067:	xor    eax,eax
   140055069:	cmp    BYTE PTR [r13+0x619c],al
   140055070:	jne    0x1400551f9
   140055076:	mov    edx,0x800
   14005507b:	lea    rcx,[rsp+0x40]
   140055080:	call   0x140048354
   140055085:	test   al,al
   140055087:	je     0x1400551f9
   14005508d:	mov    rax,QWORD PTR [rbx]
   140055090:	lea    rdx,[rsp+0x40]
   140055095:	mov    r8d,r12d
   140055098:	mov    rcx,rbx
   14005509b:	call   QWORD PTR [rax+0x8]
   14005509e:	test   al,al
   1400550a0:	je     0x140054fbd
   1400550a6:	xor    r15d,r15d
   1400550a9:	movzx  edx,WORD PTR [rsp+0x24]
   1400550ae:	lea    eax,[rdx-0x45]
   1400550b1:	cmp    ax,0x13
   1400550b5:	ja     0x1400550e3
   1400550b7:	movzx  eax,ax
   1400550ba:	mov    ecx,0x88001
   1400550bf:	bt     ecx,eax
   1400550c2:	jae    0x1400550e3
   1400550c4:	mov    ecx,0xd08
   1400550c9:	cmp    dx,0x54
   1400550cd:	lea    eax,[rcx-0x2]
   1400550d0:	cmove  ecx,eax
   1400550d3:	call   0x140040118
   1400550d8:	mov    rcx,rax
   1400550db:	mov    rdx,r14
   1400550de:	call   0x14001796c
   1400550e3:	mov    r8,r14
   1400550e6:	lea    rcx,[rip+0x3f753]        # 0x140094840
   1400550ed:	xor    edx,edx
   1400550ef:	call   0x1400259c8
   1400550f4:	mov    r12d,0x1
   1400550fa:	mov    rcx,rbx
   1400550fd:	mov    dl,r12b
   140055100:	call   0x1400082e4
   140055105:	mov    rcx,rbx
   140055108:	cmp    BYTE PTR [rsp+0x22],r15b
   14005510d:	je     0x14005513c
   14005510f:	mov    r14d,DWORD PTR [rsp+0x28]
   140055114:	mov    edx,r14d
   140055117:	call   0x14000e778
   14005511c:	jmp    0x140055146
   14005511e:	mov    rcx,r15
   140055121:	movzx  eax,WORD PTR [rbp+rcx*1+0xf40]
   140055129:	mov    WORD PTR [rsp+rcx*1+0x40],ax
   14005512e:	lea    rcx,[rcx+0x2]
   140055132:	test   ax,ax
   140055135:	jne    0x140055121
   140055137:	jmp    0x1400550a9
   14005513c:	call   0x14000e334
   140055141:	mov    r14d,DWORD PTR [rsp+0x28]
   140055146:	cmp    DWORD PTR [rbx+0x22d4],0x2
   14005514d:	jne    0x140055171
   14005514f:	mov    rcx,rbx
   140055152:	call   0x14000bfa8
   140055157:	mov    rdx,QWORD PTR [rbx+0x7f80]
   14005515e:	xor    r8d,r8d
   140055161:	mov    rax,QWORD PTR [rbx]
   140055164:	mov    rcx,rbx
   140055167:	sub    rdx,QWORD PTR [rbx+0x4548]
   14005516e:	call   QWORD PTR [rax+0x18]
   140055171:	cmp    BYTE PTR [rsp+0x23],r15b
   140055176:	je     0x1400551a6
   140055178:	mov    ecx,0xd68
   14005517d:	call   0x140040118
   140055182:	mov    rcx,rax
   140055185:	lea    rdx,[rbx+0x3510]
   14005518c:	call   0x14001796c
   140055191:	cmp    BYTE PTR [r13+0x6150],r15b
   140055198:	jne    0x1400551a6
   14005519a:	lea    rcx,[rip+0x1c0f7]        # 0x140071298
   1400551a1:	call   0x14001796c
   1400551a6:	test   rdi,rdi
   1400551a9:	je     0x1400551f4
   1400551ab:	cmp    r14d,0x5
   1400551af:	jne    0x1400551ba
   1400551b1:	mov    BYTE PTR [rdi+0xfb],r15b
   1400551b8:	jmp    0x1400551d4
   1400551ba:	mov    cl,BYTE PTR [rsi+0x1099]
   1400551c0:	mov    BYTE PTR [rdi+0xfb],cl
   1400551c6:	mov    rcx,QWORD PTR [rsi+0x1058]
   1400551cd:	mov    QWORD PTR [rdi+0x90],rcx
   1400551d4:	mov    QWORD PTR [rdi+0x118],r15
   1400551db:	lea    rcx,[rdi+0x150]
   1400551e2:	mov    r8d,DWORD PTR [r13+0x83d0]
   1400551e9:	mov    edx,DWORD PTR [rsi+0x1070]
   1400551ef:	call   0x1400241ac
   1400551f4:	mov    al,r12b
   1400551f7:	jmp    0x14005522a
   1400551f9:	lea    rdx,[rsp+0x40]
   1400551fe:	mov    ecx,0x44
   140055203:	call   0x1400013b0
   140055208:	mov    rax,QWORD PTR [rbx]
   14005520b:	mov    r8d,r12d
   14005520e:	mov    rdx,r14
   140055211:	mov    rcx,rbx
   140055214:	call   QWORD PTR [rax+0x8]
   140055217:	mov    rax,QWORD PTR [rbx]
   14005521a:	xor    r8d,r8d
   14005521d:	mov    rdx,QWORD PTR [rsp+0x30]
   140055222:	mov    rcx,rbx
   140055225:	call   QWORD PTR [rax+0x18]
   140055228:	xor    al,al
   14005522a:	mov    rcx,QWORD PTR [rbp+0x1f40]
   140055231:	xor    rcx,rsp
   140055234:	call   0x140055f90
   140055239:	mov    rbx,QWORD PTR [rsp+0x20a0]
   140055241:	add    rsp,0x2050
   140055248:	pop    r15
   14005524a:	pop    r14
   14005524c:	pop    r13
   14005524e:	pop    r12
   140055250:	pop    rdi
   140055251:	pop    rsi
   140055252:	pop    rbp
   140055253:	ret    
   140055254:	mov    rax,rsp
   140055257:	mov    QWORD PTR [rax+0x8],rbx
   14005525b:	mov    QWORD PTR [rax+0x10],rbp
   14005525f:	mov    QWORD PTR [rax+0x18],rsi
   140055263:	mov    QWORD PTR [rax+0x20],rdi
   140055267:	push   r14
   140055269:	sub    rsp,0x20
   14005526d:	mov    rbp,QWORD PTR [rcx+0x22b0]
   140055274:	movabs rax,0x7fffffff7fffffff
   14005527e:	mov    rdi,rdx
   140055281:	mov    rbx,rcx
   140055284:	cmp    rdx,rax
   140055287:	jne    0x1400552b9
   140055289:	add    rcx,0x26
   14005528d:	call   0x140021edc
   140055292:	mov    rdi,rax
   140055295:	mov    r14d,0xffffffff
   14005529b:	add    rdi,QWORD PTR [rbx+0x7f98]
   1400552a2:	cmp    rdi,r14
   1400552a5:	jle    0x1400552c5
   1400552a7:	lea    rcx,[rbx+0x26]
   1400552ab:	call   0x1400220b4
   1400552b0:	test   al,al
   1400552b2:	je     0x1400552c5
   1400552b4:	mov    edi,r14d
   1400552b7:	jmp    0x1400552c5
   1400552b9:	mov    eax,0x3e8
   1400552be:	cmp    rdx,rax
   1400552c1:	cmovl  rdi,rax
   1400552c5:	cmp    DWORD PTR [rbx+0x7f88],0x3
   1400552cc:	mov    edx,0x14
   1400552d1:	mov    rcx,rbx
   1400552d4:	mov    QWORD PTR [rbx+0x7fb8],rdi
   1400552db:	lea    eax,[rdx-0xc]
   1400552de:	cmove  edx,eax
   1400552e1:	call   0x14000a85c
   1400552e6:	cmp    DWORD PTR [rbp+0x6148],0x0
   1400552ed:	je     0x14005535a
   1400552ef:	mov    rsi,rdi
   1400552f2:	mov    r14d,0x2
   1400552f8:	mov    edx,DWORD PTR [rbp+0x6148]
   1400552fe:	mov    r8,rsi
   140055301:	mov    ecx,DWORD PTR [rbx+0x7f88]
   140055307:	call   0x140033720
   14005530c:	mov    rdx,rax
   14005530f:	mov    rax,rsi
   140055312:	sub    rax,QWORD PTR [rbx+0x7fb8]
   140055319:	add    rdx,rax
   14005531c:	jns    0x14005532f
   14005531e:	cmp    r14d,0x400
   140055325:	jae    0x14005532f
   140055327:	add    r14d,r14d
   14005532a:	sub    rsi,rdx
   14005532d:	jmp    0x1400552f8
   14005532f:	test   rdx,rdx
   140055332:	jle    0x140055350
   140055334:	mov    rax,rdx
   140055337:	mov    ecx,r14d
   14005533a:	cqo    
   14005533c:	idiv   rcx
   14005533f:	mov    ecx,0x1
   140055344:	cmp    rax,rcx
   140055347:	cmovg  rcx,rax
   14005534b:	sub    rsi,rcx
   14005534e:	jmp    0x1400552f8
   140055350:	sub    rsi,rdi
   140055353:	add    QWORD PTR [rbx+0x7fb8],rsi
   14005535a:	mov    rax,QWORD PTR [rbx]
   14005535d:	mov    rcx,rbx
   140055360:	call   QWORD PTR [rax+0x20]
   140055363:	sub    QWORD PTR [rbx+0x7fb8],rax
   14005536a:	cmp    BYTE PTR [rbx+0x3496],0x0
   140055371:	je     0x14005539a
   140055373:	cmp    DWORD PTR [rbp+0x2018],0x0
   14005537a:	je     0x14005539a
   14005537c:	mov    edx,0x15
   140055381:	mov    rcx,rbx
   140055384:	call   0x14000a85c
   140055389:	cmp    BYTE PTR [rbx+0x7f94],0x0
   140055390:	je     0x14005539a
   140055392:	add    QWORD PTR [rbx+0x7fb8],0xffffffffffffffbe
   14005539a:	mov    eax,0x200
   14005539f:	cmp    QWORD PTR [rbx+0x7fb8],rax
   1400553a6:	jge    0x1400553af
   1400553a8:	mov    QWORD PTR [rbx+0x7fb8],rax
   1400553af:	mov    rbx,QWORD PTR [rsp+0x30]
   1400553b4:	mov    rbp,QWORD PTR [rsp+0x38]
   1400553b9:	mov    rsi,QWORD PTR [rsp+0x40]
   1400553be:	mov    rdi,QWORD PTR [rsp+0x48]
   1400553c3:	add    rsp,0x20
   1400553c7:	pop    r14
   1400553c9:	ret    
   1400553ca:	int3   
   1400553cb:	int3   
   1400553cc:	rex push rbp
   1400553ce:	push   rbx
   1400553cf:	push   rsi
   1400553d0:	push   rdi
   1400553d1:	push   r12
   1400553d3:	push   r13
   1400553d5:	push   r14
   1400553d7:	push   r15
   1400553d9:	lea    rbp,[rsp-0x3028]
   1400553e1:	mov    eax,0x3128
   1400553e6:	call   0x140055f20
   1400553eb:	sub    rsp,rax
   1400553ee:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   1400553f7:	mov    rax,QWORD PTR [rip+0x2cae2]        # 0x140081ee0
   1400553fe:	xor    rax,rsp
   140055401:	mov    QWORD PTR [rbp+0x3010],rax
   140055408:	mov    r13,r9
   14005540b:	mov    r12,r8
   14005540e:	mov    QWORD PTR [rsp+0x50],r8
   140055413:	mov    r15,rdx
   140055416:	mov    QWORD PTR [rsp+0x48],rdx
   14005541b:	mov    rsi,rcx
   14005541e:	xor    ebx,ebx
   140055420:	cmp    BYTE PTR [rcx+0x7fb2],bl
   140055426:	jne    0x140055c49
   14005542c:	mov    r14,QWORD PTR [rcx+0x22b0]
   140055433:	lea    edi,[rbx+0x1]
   140055436:	mov    BYTE PTR [rcx+0x7fb2],dil
   14005543d:	test   rdx,rdx
   140055440:	je     0x1400554f3
   140055446:	test   r8,r8
   140055449:	je     0x1400554f3
   14005544f:	test   r9,r9
   140055452:	je     0x1400554f3
   140055458:	mov    rax,QWORD PTR [r9+0x108]
   14005545f:	cmp    QWORD PTR [rdx+0x1060],rax
   140055466:	jge    0x14005546f
   140055468:	mov    BYTE PTR [rdx+0x109a],dil
   14005546f:	mov    rax,QWORD PTR [r9+0x110]
   140055476:	mov    QWORD PTR [rdx+0x1058],rax
   14005547d:	cmp    BYTE PTR [rdx+0x1099],bl
   140055483:	je     0x14005548c
   140055485:	mov    BYTE PTR [rdx+0x1098],dil
   14005548c:	mov    BYTE PTR [rdx+0x1099],dil
   140055493:	lea    rbx,[rdx+0x1070]
   14005549a:	lea    rdi,[r9+0x150]
   1400554a1:	mov    rdx,rbx
   1400554a4:	mov    rcx,rdi
   1400554a7:	call   0x140024258
   1400554ac:	mov    rax,QWORD PTR [rsi]
   1400554af:	xor    r8d,r8d
   1400554b2:	mov    rdx,QWORD PTR [r12]
   1400554b6:	mov    rcx,rsi
   1400554b9:	call   QWORD PTR [rax+0x18]
   1400554bc:	xor    r12d,r12d
   1400554bf:	mov    BYTE PTR [rsp+0x20],r12b
   1400554c4:	xor    r9d,r9d
   1400554c7:	mov    r8,r15
   1400554ca:	mov    edx,DWORD PTR [r15+0x4]
   1400554ce:	mov    rcx,rsi
   1400554d1:	call   0x14000b340
   1400554d6:	mov    QWORD PTR [r13+0x110],r12
   1400554dd:	mov    r8d,DWORD PTR [r14+0x83d0]
   1400554e4:	mov    edx,DWORD PTR [rbx]
   1400554e6:	mov    rcx,rdi
   1400554e9:	call   0x1400241ac
   1400554ee:	xor    ebx,ebx
   1400554f0:	lea    edi,[rbx+0x1]
   1400554f3:	mov    r12b,bl
   1400554f6:	mov    WORD PTR [rbp+0x2010],bx
   1400554fd:	cmp    BYTE PTR [rsi+0x7f8d],bl
   140055503:	jne    0x1400555ca
   140055509:	mov    BYTE PTR [rsi+0x7f8d],dil
   140055510:	mov    BYTE PTR [rsi+0x7f91],dil
   140055517:	cmp    BYTE PTR [r14+0x61bd],bl
   14005551e:	je     0x140055549
   140055520:	mov    BYTE PTR [rsi+0x7f92],bl
   140055526:	lea    rcx,[rsi+0x26]
   14005552a:	mov    rdx,rsi
   14005552d:	sub    rdx,rcx
   140055530:	movzx  eax,WORD PTR [rcx]
   140055533:	mov    WORD PTR [rcx+rdx*1+0x7fd2],ax
   14005553b:	lea    rcx,[rcx+0x2]
   14005553f:	test   ax,ax
   140055542:	jne    0x140055530
   140055544:	jmp    0x1400555d0
   140055549:	mov    BYTE PTR [rsi+0x7f92],dil
   140055550:	mov    r8,QWORD PTR [r14+0x6170]
   140055557:	mov    rax,rbx
   14005555a:	cmp    QWORD PTR [r14+0x6180],rbx
   140055561:	jbe    0x14005557f
   140055563:	mov    rcx,QWORD PTR [r14+0x6178]
   14005556a:	cmp    r8,QWORD PTR [rcx+rax*8]
   14005556e:	cmovg  r8,QWORD PTR [rcx+rax*8]
   140055573:	add    rax,rdi
   140055576:	cmp    rax,QWORD PTR [r14+0x6180]
   14005557d:	jb     0x14005556a
   14005557f:	mov    r9,QWORD PTR [rsi+0x7fc8]
   140055586:	add    r9,QWORD PTR [rsi+0x7fc0]
   14005558d:	lea    rcx,[rsi+0x26]
   140055591:	lea    rdx,[rbp+0x2010]
   140055598:	call   0x140054bb4
   14005559d:	mov    r12b,dil
   1400555a0:	lea    rcx,[rbp+0x2010]
   1400555a7:	lea    rax,[rbp+0x2010]
   1400555ae:	mov    rdx,rsi
   1400555b1:	sub    rdx,rax
   1400555b4:	movzx  eax,WORD PTR [rcx]
   1400555b7:	mov    WORD PTR [rcx+rdx*1+0x7fd2],ax
   1400555bf:	lea    rcx,[rcx+0x2]
   1400555c3:	test   ax,ax
   1400555c6:	jne    0x1400555b4
   1400555c8:	jmp    0x1400555d0
   1400555ca:	mov    BYTE PTR [rsi+0x7f91],bl
   1400555d0:	lea    rcx,[rip+0x1bca9]        # 0x140071280
   1400555d7:	call   0x14001796c
   1400555dc:	mov    r9,QWORD PTR [rsi]
   1400555df:	mov    edx,DWORD PTR [rsi+0x34c4]
   1400555e5:	mov    eax,DWORD PTR [rsi+0x3470]
   1400555eb:	add    rdx,rax
   1400555ee:	add    rdx,QWORD PTR [rsi+0x7f98]
   1400555f5:	xor    r8d,r8d
   1400555f8:	mov    rcx,rsi
   1400555fb:	call   QWORD PTR [r9+0x18]
   1400555ff:	mov    BYTE PTR [rsp+0x20],bl
   140055603:	xor    r9d,r9d
   140055606:	xor    r8d,r8d
   140055609:	mov    edx,edi
   14005560b:	mov    rcx,rsi
   14005560e:	call   0x14000b340
   140055613:	mov    rcx,rsi
   140055616:	call   0x140020b88
   14005561b:	mov    r13,rax
   14005561e:	mov    ecx,0x2318
   140055623:	call   0x140055dac
   140055628:	mov    rdi,rax
   14005562b:	mov    QWORD PTR [rsp+0x58],rax
   140055630:	test   rax,rax
   140055633:	je     0x140055668
   140055635:	mov    QWORD PTR [rax+0x1020],rbx
   14005563c:	mov    QWORD PTR [rax+0x1028],rbx
   140055643:	mov    QWORD PTR [rax+0x1030],rbx
   14005564a:	mov    QWORD PTR [rax+0x1038],rbx
   140055651:	mov    QWORD PTR [rax+0x1040],rbx
   140055658:	mov    QWORD PTR [rax+0x1048],rbx
   14005565f:	mov    QWORD PTR [rax+0x1050],rbx
   140055666:	jmp    0x14005566b
   140055668:	mov    rdi,rbx
   14005566b:	mov    QWORD PTR [rsp+0x58],rdi
   140055670:	lea    rbx,[rsi+0x5848]
   140055677:	mov    rdx,rbx
   14005567a:	mov    rcx,rdi
   14005567d:	call   0x1400243b8
   140055682:	mov    dl,0x1
   140055684:	mov    rcx,rsi
   140055687:	call   0x140008378
   14005568c:	mov    rdx,rdi
   14005568f:	mov    rcx,rbx
   140055692:	call   0x1400243b8
   140055697:	xor    ebx,ebx
   140055699:	test   r12b,r12b
   14005569c:	je     0x14005575f
   1400556a2:	lea    rcx,[rbp+0x2010]
   1400556a9:	call   0x140021dec
   1400556ae:	test   al,al
   1400556b0:	je     0x14005570b
   1400556b2:	lea    rcx,[rbp-0x20]
   1400556b6:	call   0x14002071c
   1400556bb:	nop
   1400556bc:	mov    BYTE PTR [rsp+0x38],bl
   1400556c0:	mov    QWORD PTR [rsp+0x30],rbx
   1400556c5:	movabs rax,0x7fffffff7fffffff
   1400556cf:	mov    QWORD PTR [rsp+0x28],rax
   1400556d4:	lea    rax,[rsp+0x40]
   1400556d9:	mov    QWORD PTR [rsp+0x20],rax
   1400556de:	mov    r9d,0x800
   1400556e4:	lea    r8,[rbp+0x2010]
   1400556eb:	lea    rdx,[rbp-0x20]
   1400556ef:	mov    rcx,r14
   1400556f2:	call   0x1400202cc
   1400556f7:	test   al,al
   1400556f9:	sete   bl
   1400556fc:	lea    rcx,[rbp-0x20]
   140055700:	call   0x140020758
   140055705:	test   bl,bl
   140055707:	jne    0x140055720
   140055709:	xor    ebx,ebx
   14005570b:	lea    rdx,[rbp+0x2010]
   140055712:	mov    rcx,rsi
   140055715:	call   0x140020fd4
   14005571a:	test   al,al
   14005571c:	jne    0x14005575f
   14005571e:	jmp    0x140055722
   140055720:	xor    ebx,ebx
   140055722:	lea    rdx,[rsi+0x26]
   140055726:	lea    r9,[rbp+0x2010]
   14005572d:	mov    r8,rdx
   140055730:	mov    ecx,0xf
   140055735:	call   0x14001df10
   14005573a:	lea    rcx,[rip+0x3f11f]        # 0x140094860
   140055741:	call   0x14001bf78
   140055746:	mov    rcx,rsi
   140055749:	call   0x140020a90
   14005574e:	mov    edx,0x9
   140055753:	lea    rcx,[rip+0x3f106]        # 0x140094860
   14005575a:	call   0x14001bc60
   14005575f:	lea    r12,[rsi+0x26]
   140055763:	mov    r8,r12
   140055766:	xor    edx,edx
   140055768:	lea    rcx,[rip+0x3f0d1]        # 0x140094840
   14005576f:	call   0x1400259c8
   140055774:	mov    rdx,r12
   140055777:	mov    ecx,0x89
   14005577c:	call   0x1400013b0
   140055781:	lea    rdx,[r14+0x63bc]
   140055788:	cmp    WORD PTR [rdx],bx
   14005578b:	je     0x14005579d
   14005578d:	cmp    WORD PTR [rdx],0x40
   140055791:	cmove  rdx,rbx
   140055795:	mov    rcx,r12
   140055798:	call   0x14004651c
   14005579d:	mov    rax,r15
   1400557a0:	lea    rcx,[r15+0x1040]
   1400557a7:	neg    rax
   1400557aa:	sbb    rdx,rdx
   1400557ad:	and    rdx,rcx
   1400557b0:	mov    rcx,rsi
   1400557b3:	call   0x14000a2f4
   1400557b8:	mov    BYTE PTR [rsi+0x7f93],bl
   1400557be:	and    WORD PTR [rsi+0x7f90],0x0
   1400557c6:	mov    QWORD PTR [rsi+0x7f98],rbx
   1400557cd:	mov    QWORD PTR [rsi+0x3498],rbx
   1400557d4:	mov    QWORD PTR [rsi+0x34a8],rbx
   1400557db:	mov    rcx,r12
   1400557de:	lea    rdx,[rbp+0x1010]
   1400557e5:	sub    rdx,r12
   1400557e8:	movzx  eax,WORD PTR [rcx]
   1400557eb:	mov    WORD PTR [rcx+rdx*1],ax
   1400557ef:	lea    rcx,[rcx+0x2]
   1400557f3:	test   ax,ax
   1400557f6:	jne    0x1400557e8
   1400557f8:	mov    r8b,BYTE PTR [r14+0x61bd]
   1400557ff:	mov    edx,0x800
   140055804:	lea    rcx,[rbp+0x1010]
   14005580b:	call   0x14003259c
   140055810:	mov    ecx,DWORD PTR [rsi+0x7fb4]
   140055816:	cmp    rcx,QWORD PTR [r14+0x6180]
   14005581d:	jae    0x140055831
   14005581f:	mov    rax,QWORD PTR [r14+0x6178]
   140055826:	mov    rcx,QWORD PTR [rax+rcx*8]
   14005582a:	mov    QWORD PTR [r14+0x6170],rcx
   140055831:	inc    DWORD PTR [rsi+0x7fb4]
   140055837:	lea    rcx,[rbp+0x1010]
   14005583e:	call   0x14002217c
   140055843:	test   al,al
   140055845:	je     0x140055878
   140055847:	movabs rax,0x7fffffff7fffffff
   140055851:	cmp    QWORD PTR [r14+0x6170],rax
   140055858:	je     0x140055878
   14005585a:	lea    rcx,[rbp+0x1010]
   140055861:	call   0x140021edc
   140055866:	movzx  ebx,bl
   140055869:	cmp    rax,QWORD PTR [r14+0x6170]
   140055870:	mov    eax,0x1
   140055875:	cmovl  ebx,eax
   140055878:	xor    eax,eax
   14005587a:	cmp    BYTE PTR [r14+0x619c],al
   140055881:	jne    0x1400558dc
   140055883:	cmp    BYTE PTR [r14+0x62fa],al
   14005588a:	jne    0x140055890
   14005588c:	test   bl,bl
   14005588e:	je     0x1400558dc
   140055890:	lea    r9,[r14+0x6170]
   140055897:	lea    r8,[rsp+0x40]
   14005589c:	mov    edx,0x800
   1400558a1:	lea    rcx,[rbp+0x1010]
   1400558a8:	call   0x14004830c
   1400558ad:	xor    ebx,ebx
   1400558af:	test   al,al
   1400558b1:	jne    0x1400558c4
   1400558b3:	mov    edx,0xff
   1400558b8:	lea    rcx,[rip+0x3efa1]        # 0x140094860
   1400558bf:	call   0x14001bc60
   1400558c4:	cmp    BYTE PTR [rsp+0x40],bl
   1400558c8:	je     0x1400558de
   1400558ca:	cmp    BYTE PTR [r14+0x61b9],bl
   1400558d1:	jne    0x1400558e7
   1400558d3:	mov    BYTE PTR [r14+0x62fa],bl
   1400558da:	jmp    0x1400558de
   1400558dc:	xor    ebx,ebx
   1400558de:	cmp    BYTE PTR [r14+0x61b9],bl
   1400558e5:	je     0x1400558f3
   1400558e7:	lea    rcx,[rbp+0x1010]
   1400558ee:	call   0x140021c6c
   1400558f3:	movabs r12,0xa3d70a3d70a3d70b
   1400558fd:	movabs r15,0x7fffffff7fffffff
   140055907:	lea    rcx,[rbp+0x1010]
   14005590e:	call   0x140021edc
   140055913:	mov    r8,rax
   140055916:	cmp    rax,0x2710
   14005591c:	jl     0x14005596f
   14005591e:	mov    rcx,QWORD PTR [r14+0x6170]
   140055925:	cmp    rcx,r15
   140055928:	je     0x14005594f
   14005592a:	mov    rax,r12
   14005592d:	imul   rcx
   140055930:	add    rdx,rcx
   140055933:	sar    rdx,0x6
   140055937:	mov    rax,rdx
   14005593a:	shr    rax,0x3f
   14005593e:	add    rdx,rax
   140055941:	cmp    rdx,r8
   140055944:	jg     0x14005596f
   140055946:	cmp    rcx,r15
   140055949:	jne    0x1400559fe
   14005594f:	mov    rax,r12
   140055952:	imul   r13
   140055955:	add    rdx,r13
   140055958:	sar    rdx,0x6
   14005595c:	mov    rax,rdx
   14005595f:	shr    rax,0x3f
   140055963:	add    rdx,rax
   140055966:	cmp    rdx,r8
   140055969:	jle    0x1400559fe
   14005596f:	mov    ecx,0x2
   140055974:	call   0x1400482c0
   140055979:	and    QWORD PTR [rbp-0x30],0x0
   14005597e:	mov    DWORD PTR [rbp-0x28],0x76
   140055985:	lea    rcx,[rsp+0x70]
   14005598a:	call   0x1400479a4
   14005598f:	cmp    BYTE PTR [r14+0x619c],bl
   140055996:	jne    0x1400559b9
   140055998:	lea    r9,[r14+0x6170]
   14005599f:	lea    r8,[rsp+0x40]
   1400559a4:	mov    edx,0x800
   1400559a9:	lea    rcx,[rbp+0x1010]
   1400559b0:	call   0x14004830c
   1400559b5:	test   al,al
   1400559b7:	jne    0x1400559ca
   1400559b9:	mov    edx,0xff
   1400559be:	lea    rcx,[rip+0x3ee9b]        # 0x140094860
   1400559c5:	call   0x14001bc60
   1400559ca:	cmp    BYTE PTR [rsp+0x40],bl
   1400559ce:	je     0x1400559e0
   1400559d0:	cmp    BYTE PTR [r14+0x61b9],bl
   1400559d7:	jne    0x1400559ed
   1400559d9:	mov    BYTE PTR [r14+0x62fa],bl
   1400559e0:	cmp    BYTE PTR [r14+0x61b9],bl
   1400559e7:	je     0x140055907
   1400559ed:	lea    rcx,[rbp+0x1010]
   1400559f4:	call   0x140021c6c
   1400559f9:	jmp    0x140055907
   1400559fe:	xor    r13d,r13d
   140055a01:	mov    BYTE PTR [rsp+0x38],r13b
   140055a06:	mov    QWORD PTR [rsp+0x30],r13
   140055a0b:	mov    QWORD PTR [rsp+0x28],r15
   140055a10:	mov    QWORD PTR [rsp+0x20],r13
   140055a15:	mov    r9d,0x800
   140055a1b:	lea    r8,[rbp+0x1010]
   140055a22:	mov    rdx,rsi
   140055a25:	mov    rcx,r14
   140055a28:	call   0x1400202cc
   140055a2d:	test   al,al
   140055a2f:	mov    r15,QWORD PTR [rsp+0x48]
   140055a34:	jne    0x140055af2
   140055a3a:	movabs r15,0x7fffffff7fffffff
   140055a44:	lea    rdx,[rsi+0x26]
   140055a48:	mov    ecx,0x77
   140055a4d:	call   0x1400013b0
   140055a52:	cmp    BYTE PTR [r14+0x619c],r13b
   140055a59:	jne    0x140055a7c
   140055a5b:	lea    r9,[r14+0x6170]
   140055a62:	lea    r8,[rsp+0x40]
   140055a67:	mov    edx,0x800
   140055a6c:	lea    rcx,[rbp+0x1010]
   140055a73:	call   0x14004830c
   140055a78:	test   al,al
   140055a7a:	jne    0x140055a8d
   140055a7c:	mov    edx,0x9
   140055a81:	lea    rcx,[rip+0x3edd8]        # 0x140094860
   140055a88:	call   0x14001bc60
   140055a8d:	cmp    BYTE PTR [rsp+0x40],r13b
   140055a92:	je     0x140055aa4
   140055a94:	cmp    BYTE PTR [r14+0x61b9],r13b
   140055a9b:	jne    0x140055aad
   140055a9d:	mov    BYTE PTR [r14+0x62fa],r13b
   140055aa4:	cmp    BYTE PTR [r14+0x61b9],r13b
   140055aab:	je     0x140055ab9
   140055aad:	lea    rcx,[rbp+0x1010]
   140055ab4:	call   0x140021c6c
   140055ab9:	mov    BYTE PTR [rsp+0x38],r13b
   140055abe:	mov    QWORD PTR [rsp+0x30],r13
   140055ac3:	mov    QWORD PTR [rsp+0x28],r15
   140055ac8:	mov    QWORD PTR [rsp+0x20],r13
   140055acd:	mov    r9d,0x800
   140055ad3:	lea    r8,[rbp+0x1010]
   140055ada:	mov    rdx,rsi
   140055add:	mov    rcx,r14
   140055ae0:	call   0x1400202cc
   140055ae5:	test   al,al
   140055ae7:	je     0x140055a44
   140055aed:	mov    r15,QWORD PTR [rsp+0x48]
   140055af2:	mov    BYTE PTR [rsp+0x20],r13b
   140055af7:	xor    r9d,r9d
   140055afa:	xor    r8d,r8d
   140055afd:	xor    edx,edx
   140055aff:	mov    rcx,rsi
   140055b02:	call   0x14000b340
   140055b07:	cmp    BYTE PTR [rsi+0x7f94],r13b
   140055b0e:	je     0x140055b30
   140055b10:	cmp    DWORD PTR [rsi+0x7f88],0x3
   140055b17:	jne    0x140055b30
   140055b19:	mov    BYTE PTR [rsp+0x20],r13b
   140055b1e:	xor    r9d,r9d
   140055b21:	xor    r8d,r8d
   140055b24:	lea    edx,[r9+0x4]
   140055b28:	mov    rcx,rsi
   140055b2b:	call   0x14000b340
   140055b30:	mov    BYTE PTR [rsp+0x20],r13b
   140055b35:	xor    r9d,r9d
   140055b38:	xor    r8d,r8d
   140055b3b:	lea    edx,[r9+0x1]
   140055b3f:	mov    rcx,rsi
   140055b42:	call   0x14000b340
   140055b47:	mov    rdx,QWORD PTR [r14+0x6170]
   140055b4e:	mov    rcx,rsi
   140055b51:	call   0x140055254
   140055b56:	cmp    BYTE PTR [rsi+0x7f8c],r13b
   140055b5d:	je     0x140055b6e
   140055b5f:	mov    ecx,0xd32
   140055b64:	call   0x140040118
   140055b69:	mov    rbx,rax
   140055b6c:	jmp    0x140055b75
   140055b6e:	lea    rbx,[rip+0x1b71f]        # 0x140071294
   140055b75:	mov    ecx,0xd02
   140055b7a:	call   0x140040118
   140055b7f:	mov    rcx,rax
   140055b82:	lea    r8,[rsi+0x26]
   140055b86:	mov    rdx,rbx
   140055b89:	call   0x14001796c
   140055b8e:	mov    rbx,QWORD PTR [rsp+0x50]
   140055b93:	test   rbx,rbx
   140055b96:	je     0x140055ba4
   140055b98:	mov    rax,QWORD PTR [rsi]
   140055b9b:	mov    rcx,rsi
   140055b9e:	call   QWORD PTR [rax+0x20]
   140055ba1:	mov    QWORD PTR [rbx],rax
   140055ba4:	test   r15,r15
   140055ba7:	je     0x140055c1f
   140055ba9:	mov    QWORD PTR [r15+0x1058],r13
   140055bb0:	mov    WORD PTR [r15+0x1098],0x1
   140055bba:	mov    ebx,0x1
   140055bbf:	mov    edx,DWORD PTR [r15+0xc]
   140055bc3:	mov    rcx,rsi
   140055bc6:	call   0x14000a85c
   140055bcb:	cmp    BYTE PTR [rsi+0x3496],r13b
   140055bd2:	je     0x140055bf3
   140055bd4:	cmp    DWORD PTR [r14+0x2018],r13d
   140055bdb:	je     0x140055bf3
   140055bdd:	mov    edx,DWORD PTR [r15+0xc]
   140055be1:	mov    rcx,rsi
   140055be4:	call   0x140008a60
   140055be9:	lea    ecx,[rax+0x10]
   140055bec:	sub    QWORD PTR [rsi+0x7fb8],rcx
   140055bf3:	mov    BYTE PTR [rsp+0x20],bl
   140055bf7:	xor    r9d,r9d
   140055bfa:	mov    r8,r15
   140055bfd:	mov    edx,DWORD PTR [r15+0x4]
   140055c01:	mov    rcx,rsi
   140055c04:	call   0x14000b340
   140055c09:	mov    ecx,0xd38
   140055c0e:	call   0x140040118
   140055c13:	mov    rcx,rax
   140055c16:	lea    rdx,[r15+0x20]
   140055c1a:	call   0x14001796c
   140055c1f:	mov    BYTE PTR [rsi+0x7fb2],r13b
   140055c26:	test   rdi,rdi
   140055c29:	je     0x140055c49
   140055c2b:	mov    rcx,QWORD PTR [rdi+0x1020]
   140055c32:	test   rcx,rcx
   140055c35:	je     0x140055c3c
   140055c37:	call   0x14005a938
   140055c3c:	mov    edx,0x2318
   140055c41:	mov    rcx,rdi
   140055c44:	call   0x140055de8
   140055c49:	mov    rcx,QWORD PTR [rbp+0x3010]
   140055c50:	xor    rcx,rsp
   140055c53:	call   0x140055f90
   140055c58:	add    rsp,0x3128
   140055c5f:	pop    r15
   140055c61:	pop    r14
   140055c63:	pop    r13
   140055c65:	pop    r12
   140055c67:	pop    rdi
   140055c68:	pop    rsi
   140055c69:	pop    rbx
   140055c6a:	pop    rbp
   140055c6b:	ret    
   140055c6c:	mov    rax,rsp
   140055c6f:	mov    QWORD PTR [rax+0x18],rbx
   140055c73:	mov    QWORD PTR [rax+0x20],rsi
   140055c77:	mov    QWORD PTR [rax+0x10],rdx
   140055c7b:	mov    QWORD PTR [rax+0x8],rcx
   140055c7f:	push   rdi
   140055c80:	push   r14
   140055c82:	push   r15
   140055c84:	sub    rsp,0x30
   140055c88:	mov    rsi,r9
   140055c8b:	mov    r15,r8
   140055c8e:	mov    r14,rdx
   140055c91:	mov    rdi,rcx
   140055c94:	xor    ebx,ebx
   140055c96:	mov    QWORD PTR [rax-0x20],rbx
   140055c9a:	mov    BYTE PTR [rax-0x28],bl
   140055c9d:	cmp    rbx,r15
   140055ca0:	je     0x140055cc1
   140055ca2:	mov    rcx,rsi
   140055ca5:	call   0x140056aac
   140055caa:	mov    rcx,rdi
   140055cad:	call   rsi
   140055caf:	add    rdi,r14
   140055cb2:	mov    QWORD PTR [rsp+0x50],rdi
   140055cb7:	inc    rbx
   140055cba:	mov    QWORD PTR [rsp+0x28],rbx
   140055cbf:	jmp    0x140055c9d
   140055cc1:	mov    BYTE PTR [rsp+0x20],0x1
   140055cc6:	mov    rbx,QWORD PTR [rsp+0x60]
   140055ccb:	mov    rsi,QWORD PTR [rsp+0x68]
   140055cd0:	add    rsp,0x30
   140055cd4:	pop    r15
   140055cd6:	pop    r14
   140055cd8:	pop    rdi
   140055cd9:	ret    
   140055cda:	int3   
   140055cdb:	int3   
   140055cdc:	mov    rax,rsp
   140055cdf:	mov    QWORD PTR [rax+0x20],r9
   140055ce3:	mov    QWORD PTR [rax+0x18],r8
   140055ce7:	mov    QWORD PTR [rax+0x10],rdx
   140055ceb:	push   rbx
   140055cec:	push   rsi
   140055ced:	push   rdi
   140055cee:	push   r14
   140055cf0:	sub    rsp,0x38
   140055cf4:	mov    rsi,r9
   140055cf7:	mov    rbx,r8
   140055cfa:	mov    r14,rdx
   140055cfd:	mov    BYTE PTR [rax-0x38],0x0
   140055d01:	mov    rdi,rdx
   140055d04:	imul   rdi,r8
   140055d08:	add    rdi,rcx
   140055d0b:	mov    QWORD PTR [rax+0x8],rdi
   140055d0f:	mov    rax,rbx
   140055d12:	dec    rbx
   140055d15:	mov    QWORD PTR [rsp+0x70],rbx
   140055d1a:	test   rax,rax
   140055d1d:	je     0x140055d36
   140055d1f:	sub    rdi,r14
   140055d22:	mov    QWORD PTR [rsp+0x60],rdi
   140055d27:	mov    rcx,rsi
   140055d2a:	call   0x140056aac
   140055d2f:	mov    rcx,rdi
   140055d32:	call   rsi
   140055d34:	jmp    0x140055d0f
   140055d36:	mov    BYTE PTR [rsp+0x20],0x1
   140055d3b:	add    rsp,0x38
   140055d3f:	pop    r14
   140055d41:	pop    rdi
   140055d42:	pop    rsi
   140055d43:	pop    rbx
   140055d44:	ret    
   140055d45:	int3   
   140055d46:	int3   
   140055d47:	int3   
   140055d48:	mov    QWORD PTR [rsp+0x10],rbx
   140055d4d:	mov    QWORD PTR [rsp+0x18],rsi
   140055d52:	mov    QWORD PTR [rsp+0x8],rcx
   140055d57:	push   rdi
   140055d58:	push   r14
   140055d5a:	push   r15
   140055d5c:	sub    rsp,0x50
   140055d60:	mov    rsi,r9
   140055d63:	mov    r14,r8
   140055d66:	mov    r15,rdx
   140055d69:	mov    rdi,rcx
   140055d6c:	xor    ebx,ebx
   140055d6e:	mov    QWORD PTR [rsp+0x28],rbx
   140055d73:	cmp    rbx,r14
   140055d76:	je     0x140055d92
   140055d78:	sub    rdi,r15
   140055d7b:	mov    QWORD PTR [rsp+0x70],rdi
   140055d80:	mov    rcx,rsi
   140055d83:	call   0x140056aac
   140055d88:	mov    rcx,rdi
   140055d8b:	call   rsi
   140055d8d:	inc    rbx
   140055d90:	jmp    0x140055d6e
   140055d92:	jmp    0x140055d94
   140055d94:	lea    r11,[rsp+0x50]
   140055d99:	mov    rbx,QWORD PTR [r11+0x28]
   140055d9d:	mov    rsi,QWORD PTR [r11+0x30]
   140055da1:	mov    rsp,r11
   140055da4:	pop    r15
   140055da6:	pop    r14
   140055da8:	pop    rdi
   140055da9:	ret    
   140055daa:	int3   
   140055dab:	int3   
   140055dac:	rex push rbx
   140055dae:	sub    rsp,0x20
   140055db2:	mov    rbx,rcx
   140055db5:	jmp    0x140055dd8
   140055db7:	mov    rcx,rbx
   140055dba:	call   0x14005f684
   140055dbf:	test   eax,eax
   140055dc1:	jne    0x140055dd5
   140055dc3:	cmp    rbx,0xffffffffffffffff
   140055dc7:	jne    0x140055dd0
   140055dc9:	call   0x140056b68
   140055dce:	jmp    0x140055dd5
   140055dd0:	call   0x140056b48
   140055dd5:	mov    rcx,rbx
   140055dd8:	call   0x14005d520
   140055ddd:	test   rax,rax
   140055de0:	je     0x140055db7
   140055de2:	add    rsp,0x20
   140055de6:	pop    rbx
   140055de7:	ret    
   140055de8:	jmp    0x140056b88
   140055ded:	int3   
   140055dee:	int3   
   140055def:	int3   
   140055df0:	jmp    0x140055dac
   140055df5:	int3   
   140055df6:	int3   
   140055df7:	int3   
   140055df8:	jmp    0x140055de8
   140055dfd:	int3   
   140055dfe:	int3   
   140055dff:	int3   
   140055e00:	sub    rsp,0x28
   140055e04:	mov    r8,QWORD PTR [r9+0x38]
   140055e08:	mov    rcx,rdx
   140055e0b:	mov    rdx,r9
   140055e0e:	call   0x140055e20
   140055e13:	mov    eax,0x1
   140055e18:	add    rsp,0x28
   140055e1c:	ret    
   140055e1d:	int3   
   140055e1e:	int3   
   140055e1f:	int3   
   140055e20:	rex push rbx
   140055e22:	mov    r11d,DWORD PTR [r8]
   140055e25:	mov    rbx,rdx
   140055e28:	and    r11d,0xfffffff8
   140055e2c:	mov    r9,rcx
   140055e2f:	test   BYTE PTR [r8],0x4
   140055e33:	mov    r10,rcx
   140055e36:	je     0x140055e4b
   140055e38:	mov    eax,DWORD PTR [r8+0x8]
   140055e3c:	movsxd r10,DWORD PTR [r8+0x4]
   140055e40:	neg    eax
   140055e42:	add    r10,rcx
   140055e45:	movsxd rcx,eax
   140055e48:	and    r10,rcx
   140055e4b:	movsxd rax,r11d
   140055e4e:	mov    rdx,QWORD PTR [rax+r10*1]
   140055e52:	mov    rax,QWORD PTR [rbx+0x10]
   140055e56:	mov    ecx,DWORD PTR [rax+0x8]
   140055e59:	add    rcx,QWORD PTR [rbx+0x8]
   140055e5d:	test   BYTE PTR [rcx+0x3],0xf
   140055e61:	je     0x140055e6f
   140055e63:	movzx  eax,BYTE PTR [rcx+0x3]
   140055e67:	and    eax,0xfffffff0
   140055e6a:	cdqe   
   140055e6c:	add    r9,rax
   140055e6f:	xor    r9,rdx
   140055e72:	mov    rcx,r9
   140055e75:	pop    rbx
   140055e76:	jmp    0x140055f90
   140055e7b:	int3   
   140055e7c:	mov    rax,rsp
   140055e7f:	mov    QWORD PTR [rax+0x8],rbx
   140055e83:	mov    QWORD PTR [rax+0x10],rbp
   140055e87:	mov    QWORD PTR [rax+0x18],rsi
   140055e8b:	mov    QWORD PTR [rax+0x20],rdi
   140055e8f:	push   r14
   140055e91:	sub    rsp,0x20
   140055e95:	mov    rbx,QWORD PTR [r9+0x38]
   140055e99:	mov    rsi,rdx
   140055e9c:	mov    r14,r8
   140055e9f:	mov    rbp,rcx
   140055ea2:	mov    rdx,r9
   140055ea5:	mov    rcx,rsi
   140055ea8:	mov    rdi,r9
   140055eab:	lea    r8,[rbx+0x4]
   140055eaf:	call   0x140055e20
   140055eb4:	mov    r11d,DWORD PTR [rbx+0x4]
   140055eb8:	mov    r8d,0x1
   140055ebe:	mov    r10d,DWORD PTR [rbp+0x4]
   140055ec2:	mov    eax,r11d
   140055ec5:	and    eax,r8d
   140055ec8:	and    r11d,0x2
   140055ecc:	and    r10b,0x66
   140055ed0:	cmove  r11d,eax
   140055ed4:	test   r11d,r11d
   140055ed7:	je     0x140055eed
   140055ed9:	mov    r9,rdi
   140055edc:	mov    r8,r14
   140055edf:	mov    rdx,rsi
   140055ee2:	mov    rcx,rbp
   140055ee5:	call   0x140058dc8
   140055eea:	mov    r8d,eax
   140055eed:	mov    rbx,QWORD PTR [rsp+0x30]
   140055ef2:	mov    eax,r8d
   140055ef5:	mov    rbp,QWORD PTR [rsp+0x38]
   140055efa:	mov    rsi,QWORD PTR [rsp+0x40]
   140055eff:	mov    rdi,QWORD PTR [rsp+0x48]
   140055f04:	add    rsp,0x20
   140055f08:	pop    r14
   140055f0a:	ret    
   140055f0b:	int3   
   140055f0c:	int3   
   140055f0d:	int3   
   140055f0e:	int3   
   140055f0f:	int3   
   140055f10:	int3   
   140055f11:	int3   
   140055f12:	int3   
   140055f13:	int3   
   140055f14:	int3   
   140055f15:	int3   
   140055f16:	data16 nop WORD PTR [rax+rax*1+0x0]
   140055f20:	sub    rsp,0x10
   140055f24:	mov    QWORD PTR [rsp],r10
   140055f28:	mov    QWORD PTR [rsp+0x8],r11
   140055f2d:	xor    r11,r11
   140055f30:	lea    r10,[rsp+0x18]
   140055f35:	sub    r10,rax
   140055f38:	cmovb  r10,r11
   140055f3c:	mov    r11,QWORD PTR gs:0x10
   140055f45:	cmp    r10,r11
   140055f48:	bnd jae 0x140055f62
   140055f4b:	and    r10w,0xf000
   140055f51:	lea    r11,[r11-0x1000]
   140055f58:	mov    BYTE PTR [r11],0x0
   140055f5c:	cmp    r10,r11
   140055f5f:	bnd jne 0x140055f51
   140055f62:	mov    r10,QWORD PTR [rsp]
   140055f66:	mov    r11,QWORD PTR [rsp+0x8]
   140055f6b:	add    rsp,0x10
   140055f6f:	bnd ret 
   140055f71:	int3   
   140055f72:	int3   
   140055f73:	int3   
   140055f74:	int3   
   140055f75:	int3   
   140055f76:	int3   
   140055f77:	int3   
   140055f78:	int3   
   140055f79:	int3   
   140055f7a:	int3   
   140055f7b:	int3   
   140055f7c:	int3   
   140055f7d:	int3   
   140055f7e:	int3   
   140055f7f:	int3   
   140055f80:	int3   
   140055f81:	int3   
   140055f82:	int3   
   140055f83:	int3   
   140055f84:	int3   
   140055f85:	int3   
   140055f86:	data16 nop WORD PTR [rax+rax*1+0x0]
   140055f90:	cmp    rcx,QWORD PTR [rip+0x2bf49]        # 0x140081ee0
   140055f97:	bnd jne 0x140055fac
   140055f9a:	rol    rcx,0x10
   140055f9e:	test   cx,0xffff
   140055fa3:	bnd jne 0x140055fa8
   140055fa6:	bnd ret 
   140055fa8:	ror    rcx,0x10
   140055fac:	jmp    0x140056014
   140055fb1:	int3   
   140055fb2:	int3   
   140055fb3:	int3   
   140055fb4:	rex push rbx
   140055fb6:	sub    rsp,0x20
   140055fba:	lea    rax,[rip+0x1b34f]        # 0x140071310
   140055fc1:	mov    rbx,rcx
   140055fc4:	mov    QWORD PTR [rcx],rax
   140055fc7:	test   dl,0x1
   140055fca:	je     0x140055fd6
   140055fcc:	mov    edx,0x18
   140055fd1:	call   0x140055de8
   140055fd6:	mov    rax,rbx
   140055fd9:	add    rsp,0x20
   140055fdd:	pop    rbx
   140055fde:	ret    
   140055fdf:	int3   
   140055fe0:	rex push rbx
   140055fe2:	sub    rsp,0x20
   140055fe6:	mov    rbx,rcx
   140055fe9:	xor    ecx,ecx
   140055feb:	call   QWORD PTR [rip+0x163b7]        # 0x14006c3a8
   140055ff1:	mov    rcx,rbx
   140055ff4:	call   QWORD PTR [rip+0x163a6]        # 0x14006c3a0
   140055ffa:	call   QWORD PTR [rip+0x16088]        # 0x14006c088
   140056000:	mov    rcx,rax
   140056003:	mov    edx,0xc0000409
   140056008:	add    rsp,0x20
   14005600c:	pop    rbx
   14005600d:	rex.W jmp QWORD PTR [rip+0x1639c]        # 0x14006c3b0
   140056014:	mov    QWORD PTR [rsp+0x8],rcx
   140056019:	sub    rsp,0x38
   14005601d:	mov    ecx,0x17
   140056022:	call   0x14006a2de
   140056027:	test   eax,eax
   140056029:	je     0x140056032
   14005602b:	mov    ecx,0x2
   140056030:	int    0x29
   140056032:	lea    rcx,[rip+0x48df7]        # 0x14009ee30
   140056039:	call   0x140056208
   14005603e:	mov    rax,QWORD PTR [rsp+0x38]
   140056043:	mov    QWORD PTR [rip+0x48ede],rax        # 0x14009ef28
   14005604a:	lea    rax,[rsp+0x38]
   14005604f:	add    rax,0x8
   140056053:	mov    QWORD PTR [rip+0x48e6e],rax        # 0x14009eec8
   14005605a:	mov    rax,QWORD PTR [rip+0x48ec7]        # 0x14009ef28
   140056061:	mov    QWORD PTR [rip+0x48d38],rax        # 0x14009eda0
   140056068:	mov    rax,QWORD PTR [rsp+0x40]
   14005606d:	mov    QWORD PTR [rip+0x48e3c],rax        # 0x14009eeb0
   140056074:	mov    DWORD PTR [rip+0x48d12],0xc0000409        # 0x14009ed90
   14005607e:	mov    DWORD PTR [rip+0x48d0c],0x1        # 0x14009ed94
   140056088:	mov    DWORD PTR [rip+0x48d16],0x1        # 0x14009eda8
   140056092:	mov    eax,0x8
   140056097:	imul   rax,rax,0x0
   14005609b:	lea    rcx,[rip+0x48d0e]        # 0x14009edb0
   1400560a2:	mov    QWORD PTR [rcx+rax*1],0x2
   1400560aa:	mov    eax,0x8
   1400560af:	imul   rax,rax,0x0
   1400560b3:	mov    rcx,QWORD PTR [rip+0x2be26]        # 0x140081ee0
   1400560ba:	mov    QWORD PTR [rsp+rax*1+0x20],rcx
   1400560bf:	mov    eax,0x8
   1400560c4:	imul   rax,rax,0x1
   1400560c8:	mov    rcx,QWORD PTR [rip+0x2be19]        # 0x140081ee8
   1400560cf:	mov    QWORD PTR [rsp+rax*1+0x20],rcx
   1400560d4:	lea    rcx,[rip+0x1b23d]        # 0x140071318
   1400560db:	call   0x140055fe0
   1400560e0:	add    rsp,0x38
   1400560e4:	ret    
   1400560e5:	int3   
   1400560e6:	int3   
   1400560e7:	int3   
   1400560e8:	sub    rsp,0x28
   1400560ec:	mov    ecx,0x8
   1400560f1:	call   0x1400560fc
   1400560f6:	add    rsp,0x28
   1400560fa:	ret    
   1400560fb:	int3   
   1400560fc:	mov    DWORD PTR [rsp+0x8],ecx
   140056100:	sub    rsp,0x28
   140056104:	mov    ecx,0x17
   140056109:	call   0x14006a2de
   14005610e:	test   eax,eax
   140056110:	je     0x14005611a
   140056112:	mov    eax,DWORD PTR [rsp+0x30]
   140056116:	mov    ecx,eax
   140056118:	int    0x29
   14005611a:	lea    rcx,[rip+0x48d0f]        # 0x14009ee30
   140056121:	call   0x140056198
   140056126:	mov    rax,QWORD PTR [rsp+0x28]
   14005612b:	mov    QWORD PTR [rip+0x48df6],rax        # 0x14009ef28
   140056132:	lea    rax,[rsp+0x28]
   140056137:	add    rax,0x8
   14005613b:	mov    QWORD PTR [rip+0x48d86],rax        # 0x14009eec8
   140056142:	mov    rax,QWORD PTR [rip+0x48ddf]        # 0x14009ef28
   140056149:	mov    QWORD PTR [rip+0x48c50],rax        # 0x14009eda0
   140056150:	mov    DWORD PTR [rip+0x48c36],0xc0000409        # 0x14009ed90
   14005615a:	mov    DWORD PTR [rip+0x48c30],0x1        # 0x14009ed94
   140056164:	mov    DWORD PTR [rip+0x48c3a],0x1        # 0x14009eda8
   14005616e:	mov    eax,0x8
   140056173:	imul   rax,rax,0x0
   140056177:	lea    rcx,[rip+0x48c32]        # 0x14009edb0
   14005617e:	mov    edx,DWORD PTR [rsp+0x30]
   140056182:	mov    QWORD PTR [rcx+rax*1],rdx
   140056186:	lea    rcx,[rip+0x1b18b]        # 0x140071318
   14005618d:	call   0x140055fe0
   140056192:	add    rsp,0x28
   140056196:	ret    
   140056197:	int3   
   140056198:	mov    QWORD PTR [rsp+0x20],rbx
   14005619d:	push   rdi
   14005619e:	sub    rsp,0x40
   1400561a2:	mov    rbx,rcx
   1400561a5:	call   QWORD PTR [rip+0x161dd]        # 0x14006c388
   1400561ab:	mov    rdi,QWORD PTR [rbx+0xf8]
   1400561b2:	lea    rdx,[rsp+0x50]
   1400561b7:	mov    rcx,rdi
   1400561ba:	xor    r8d,r8d
   1400561bd:	call   QWORD PTR [rip+0x161cd]        # 0x14006c390
   1400561c3:	test   rax,rax
   1400561c6:	je     0x1400561fa
   1400561c8:	and    QWORD PTR [rsp+0x38],0x0
   1400561ce:	lea    rcx,[rsp+0x58]
   1400561d3:	mov    rdx,QWORD PTR [rsp+0x50]
   1400561d8:	mov    r9,rax
   1400561db:	mov    QWORD PTR [rsp+0x30],rcx
   1400561e0:	mov    r8,rdi
   1400561e3:	lea    rcx,[rsp+0x60]
   1400561e8:	mov    QWORD PTR [rsp+0x28],rcx
   1400561ed:	xor    ecx,ecx
   1400561ef:	mov    QWORD PTR [rsp+0x20],rbx
   1400561f4:	call   QWORD PTR [rip+0x1619e]        # 0x14006c398
   1400561fa:	mov    rbx,QWORD PTR [rsp+0x68]
   1400561ff:	add    rsp,0x40
   140056203:	pop    rdi
   140056204:	ret    
   140056205:	int3   
   140056206:	int3   
   140056207:	int3   
   140056208:	rex push rbx
   14005620a:	push   rsi
   14005620b:	push   rdi
   14005620c:	sub    rsp,0x40
   140056210:	mov    rbx,rcx
   140056213:	call   QWORD PTR [rip+0x1616f]        # 0x14006c388
   140056219:	mov    rsi,QWORD PTR [rbx+0xf8]
   140056220:	xor    edi,edi
   140056222:	xor    r8d,r8d
   140056225:	lea    rdx,[rsp+0x60]
   14005622a:	mov    rcx,rsi
   14005622d:	call   QWORD PTR [rip+0x1615d]        # 0x14006c390
   140056233:	test   rax,rax
   140056236:	je     0x140056271
   140056238:	and    QWORD PTR [rsp+0x38],0x0
   14005623e:	lea    rcx,[rsp+0x68]
   140056243:	mov    rdx,QWORD PTR [rsp+0x60]
   140056248:	mov    r9,rax
   14005624b:	mov    QWORD PTR [rsp+0x30],rcx
   140056250:	mov    r8,rsi
   140056253:	lea    rcx,[rsp+0x70]
   140056258:	mov    QWORD PTR [rsp+0x28],rcx
   14005625d:	xor    ecx,ecx
   14005625f:	mov    QWORD PTR [rsp+0x20],rbx
   140056264:	call   QWORD PTR [rip+0x1612e]        # 0x14006c398
   14005626a:	inc    edi
   14005626c:	cmp    edi,0x2
   14005626f:	jl     0x140056222
   140056271:	add    rsp,0x40
   140056275:	pop    rdi
   140056276:	pop    rsi
   140056277:	pop    rbx
   140056278:	ret    
   140056279:	int3   
   14005627a:	int3   
   14005627b:	int3   
   14005627c:	sub    rsp,0x28
   140056280:	call   0x140056d5c
   140056285:	test   eax,eax
   140056287:	je     0x1400562aa
   140056289:	mov    rax,QWORD PTR gs:0x30
   140056292:	mov    rcx,QWORD PTR [rax+0x8]
   140056296:	jmp    0x14005629d
   140056298:	cmp    rcx,rax
   14005629b:	je     0x1400562b1
   14005629d:	xor    eax,eax
   14005629f:	lock cmpxchg QWORD PTR [rip+0x49060],rcx        # 0x14009f308
   1400562a8:	jne    0x140056298
   1400562aa:	xor    al,al
   1400562ac:	add    rsp,0x28
   1400562b0:	ret    
   1400562b1:	mov    al,0x1
   1400562b3:	jmp    0x1400562ac
   1400562b5:	int3   
   1400562b6:	int3   
   1400562b7:	int3   
   1400562b8:	rex push rbx
   1400562ba:	sub    rsp,0x20
   1400562be:	movzx  eax,BYTE PTR [rip+0x4907b]        # 0x14009f340
   1400562c5:	test   ecx,ecx
   1400562c7:	mov    ebx,0x1
   1400562cc:	cmove  eax,ebx
   1400562cf:	mov    BYTE PTR [rip+0x4906b],al        # 0x14009f340
   1400562d5:	call   0x140056b90
   1400562da:	call   0x140059c5c
   1400562df:	test   al,al
   1400562e1:	jne    0x1400562e7
   1400562e3:	xor    al,al
   1400562e5:	jmp    0x1400562fb
   1400562e7:	call   0x140060550
   1400562ec:	test   al,al
   1400562ee:	jne    0x1400562f9
   1400562f0:	xor    ecx,ecx
   1400562f2:	call   0x140059c94
   1400562f7:	jmp    0x1400562e3
   1400562f9:	mov    al,bl
   1400562fb:	add    rsp,0x20
   1400562ff:	pop    rbx
   140056300:	ret    
   140056301:	int3   
   140056302:	int3   
   140056303:	int3   
   140056304:	mov    QWORD PTR [rsp+0x8],rbx
   140056309:	push   rbp
   14005630a:	mov    rbp,rsp
   14005630d:	sub    rsp,0x40
   140056311:	mov    ebx,ecx
   140056313:	cmp    ecx,0x1
   140056316:	ja     0x1400563c2
   14005631c:	call   0x140056d5c
   140056321:	test   eax,eax
   140056323:	je     0x140056350
   140056325:	test   ebx,ebx
   140056327:	jne    0x140056350
   140056329:	lea    rcx,[rip+0x48fe0]        # 0x14009f310
   140056330:	call   0x140060390
   140056335:	test   eax,eax
   140056337:	je     0x14005633d
   140056339:	xor    al,al
   14005633b:	jmp    0x1400563b7
   14005633d:	lea    rcx,[rip+0x48fe4]        # 0x14009f328
   140056344:	call   0x140060390
   140056349:	test   eax,eax
   14005634b:	sete   al
   14005634e:	jmp    0x1400563b7
   140056350:	mov    rdx,QWORD PTR [rip+0x2bb89]        # 0x140081ee0
   140056357:	or     r8,0xffffffffffffffff
   14005635b:	mov    eax,edx
   14005635d:	mov    ecx,0x40
   140056362:	and    eax,0x3f
   140056365:	sub    ecx,eax
   140056367:	mov    al,0x1
   140056369:	ror    r8,cl
   14005636c:	xor    r8,rdx
   14005636f:	mov    QWORD PTR [rbp-0x20],r8
   140056373:	mov    QWORD PTR [rbp-0x18],r8
   140056377:	movups xmm0,XMMWORD PTR [rbp-0x20]
   14005637b:	mov    QWORD PTR [rbp-0x10],r8
   14005637f:	movsd  xmm1,QWORD PTR [rbp-0x10]
   140056384:	movups XMMWORD PTR [rip+0x48f85],xmm0        # 0x14009f310
   14005638b:	mov    QWORD PTR [rbp-0x20],r8
   14005638f:	mov    QWORD PTR [rbp-0x18],r8
   140056393:	movups xmm0,XMMWORD PTR [rbp-0x20]
   140056397:	mov    QWORD PTR [rbp-0x10],r8
   14005639b:	movsd  QWORD PTR [rip+0x48f7d],xmm1        # 0x14009f320
   1400563a3:	movsd  xmm1,QWORD PTR [rbp-0x10]
   1400563a8:	movups XMMWORD PTR [rip+0x48f79],xmm0        # 0x14009f328
   1400563af:	movsd  QWORD PTR [rip+0x48f81],xmm1        # 0x14009f338
   1400563b7:	mov    rbx,QWORD PTR [rsp+0x50]
   1400563bc:	add    rsp,0x40
   1400563c0:	pop    rbp
   1400563c1:	ret    
   1400563c2:	mov    ecx,0x5
   1400563c7:	call   0x140056d70
   1400563cc:	int3   
   1400563cd:	int3   
   1400563ce:	int3   
   1400563cf:	int3   
   1400563d0:	sub    rsp,0x18
   1400563d4:	mov    r8,rcx
   1400563d7:	mov    eax,0x5a4d
   1400563dc:	cmp    WORD PTR [rip+0xfffffffffffa9c1d],ax        # 0x140000000
   1400563e3:	jne    0x140056461
   1400563e5:	movsxd rax,DWORD PTR [rip+0xfffffffffffa9c50]        # 0x14000003c
   1400563ec:	lea    rdx,[rip+0xfffffffffffa9c0d]        # 0x140000000
   1400563f3:	lea    rcx,[rax+rdx*1]
   1400563f7:	cmp    DWORD PTR [rcx],0x4550
   1400563fd:	jne    0x140056461
   1400563ff:	mov    eax,0x20b
   140056404:	cmp    WORD PTR [rcx+0x18],ax
   140056408:	jne    0x140056461
   14005640a:	sub    r8,rdx
   14005640d:	movzx  eax,WORD PTR [rcx+0x14]
   140056411:	lea    rdx,[rcx+0x18]
   140056415:	add    rdx,rax
   140056418:	movzx  eax,WORD PTR [rcx+0x6]
   14005641c:	lea    rcx,[rax+rax*4]
   140056420:	lea    r9,[rdx+rcx*8]
   140056424:	mov    QWORD PTR [rsp],rdx
   140056428:	cmp    rdx,r9
   14005642b:	je     0x140056445
   14005642d:	mov    ecx,DWORD PTR [rdx+0xc]
   140056430:	cmp    r8,rcx
   140056433:	jb     0x14005643f
   140056435:	mov    eax,DWORD PTR [rdx+0x8]
   140056438:	add    eax,ecx
   14005643a:	cmp    r8,rax
   14005643d:	jb     0x140056447
   14005643f:	add    rdx,0x28
   140056443:	jmp    0x140056424
   140056445:	xor    edx,edx
   140056447:	test   rdx,rdx
   14005644a:	jne    0x140056450
   14005644c:	xor    al,al
   14005644e:	jmp    0x140056467
   140056450:	test   DWORD PTR [rdx+0x24],0x80000000
   140056457:	je     0x14005645d
   140056459:	xor    al,al
   14005645b:	jmp    0x140056467
   14005645d:	mov    al,0x1
   14005645f:	jmp    0x140056467
   140056461:	xor    al,al
   140056463:	jmp    0x140056467
   140056465:	xor    al,al
   140056467:	add    rsp,0x18
   14005646b:	ret    
   14005646c:	rex push rbx
   14005646e:	sub    rsp,0x20
   140056472:	mov    bl,cl
   140056474:	call   0x140056d5c
   140056479:	xor    edx,edx
   14005647b:	test   eax,eax
   14005647d:	je     0x14005648a
   14005647f:	test   bl,bl
   140056481:	jne    0x14005648a
   140056483:	xchg   QWORD PTR [rip+0x48e7e],rdx        # 0x14009f308
   14005648a:	add    rsp,0x20
   14005648e:	pop    rbx
   14005648f:	ret    
   140056490:	rex push rbx
   140056492:	sub    rsp,0x20
   140056496:	cmp    BYTE PTR [rip+0x48ea3],0x0        # 0x14009f340
   14005649d:	mov    bl,cl
   14005649f:	je     0x1400564a5
   1400564a1:	test   dl,dl
   1400564a3:	jne    0x1400564b3
   1400564a5:	mov    cl,bl
   1400564a7:	call   0x140060564
   1400564ac:	mov    cl,bl
   1400564ae:	call   0x140059c94
   1400564b3:	mov    al,0x1
   1400564b5:	add    rsp,0x20
   1400564b9:	pop    rbx
   1400564ba:	ret    
   1400564bb:	int3   
   1400564bc:	rex push rbx
   1400564be:	sub    rsp,0x20
   1400564c2:	mov    rdx,QWORD PTR [rip+0x2ba17]        # 0x140081ee0
   1400564c9:	mov    rbx,rcx
   1400564cc:	mov    ecx,edx
   1400564ce:	xor    rdx,QWORD PTR [rip+0x48e3b]        # 0x14009f310
   1400564d5:	and    ecx,0x3f
   1400564d8:	ror    rdx,cl
   1400564db:	cmp    rdx,0xffffffffffffffff
   1400564df:	jne    0x1400564eb
   1400564e1:	mov    rcx,rbx
   1400564e4:	call   0x140060344
   1400564e9:	jmp    0x1400564fa
   1400564eb:	mov    rdx,rbx
   1400564ee:	lea    rcx,[rip+0x48e1b]        # 0x14009f310
   1400564f5:	call   0x1400603d0
   1400564fa:	xor    ecx,ecx
   1400564fc:	test   eax,eax
   1400564fe:	cmove  rcx,rbx
   140056502:	mov    rax,rcx
   140056505:	add    rsp,0x20
   140056509:	pop    rbx
   14005650a:	ret    
   14005650b:	int3   
   14005650c:	sub    rsp,0x28
   140056510:	call   0x1400564bc
   140056515:	neg    rax
   140056518:	sbb    eax,eax
   14005651a:	neg    eax
   14005651c:	dec    eax
   14005651e:	add    rsp,0x28
   140056522:	ret    
   140056523:	int3   
   140056524:	mov    QWORD PTR [rsp+0x8],rbx
   140056529:	mov    QWORD PTR [rsp+0x10],rsi
   14005652e:	push   rdi
   14005652f:	sub    rsp,0x20
   140056533:	xor    r8d,r8d
   140056536:	lea    rcx,[rip+0x48e0b]        # 0x14009f348
   14005653d:	mov    edx,0xfa0
   140056542:	call   0x14005a1e0
   140056547:	lea    rcx,[rip+0x1adda]        # 0x140071328
   14005654e:	call   QWORD PTR [rip+0x15dfc]        # 0x14006c350
   140056554:	mov    rbx,rax
   140056557:	test   rax,rax
   14005655a:	je     0x14005662c
   140056560:	lea    rdx,[rip+0x1ade1]        # 0x140071348
   140056567:	mov    rcx,rax
   14005656a:	call   QWORD PTR [rip+0x15de8]        # 0x14006c358
   140056570:	lea    rdx,[rip+0x1adf1]        # 0x140071368
   140056577:	mov    rcx,rbx
   14005657a:	mov    rsi,rax
   14005657d:	call   QWORD PTR [rip+0x15dd5]        # 0x14006c358
   140056583:	lea    rdx,[rip+0x1adfe]        # 0x140071388
   14005658a:	mov    rcx,rbx
   14005658d:	mov    rdi,rax
   140056590:	call   QWORD PTR [rip+0x15dc2]        # 0x14006c358
   140056596:	mov    rbx,rax
   140056599:	test   rsi,rsi
   14005659c:	je     0x14005660c
   14005659e:	test   rdi,rdi
   1400565a1:	je     0x14005660c
   1400565a3:	test   rax,rax
   1400565a6:	je     0x14005660c
   1400565a8:	and    QWORD PTR [rip+0x48dc8],0x0        # 0x14009f378
   1400565b0:	mov    rcx,rsi
   1400565b3:	call   0x140056aac
   1400565b8:	lea    rcx,[rip+0x48db1]        # 0x14009f370
   1400565bf:	call   rsi
   1400565c1:	mov    rdx,QWORD PTR [rip+0x2b918]        # 0x140081ee0
   1400565c8:	mov    ecx,0x40
   1400565cd:	mov    eax,edx
   1400565cf:	and    eax,0x3f
   1400565d2:	sub    ecx,eax
   1400565d4:	ror    rdi,cl
   1400565d7:	xor    rdi,rdx
   1400565da:	ror    rbx,cl
   1400565dd:	xor    rbx,rdx
   1400565e0:	mov    QWORD PTR [rip+0x48d99],rdi        # 0x14009f380
   1400565e7:	mov    QWORD PTR [rip+0x48d9a],rbx        # 0x14009f388
   1400565ee:	lea    rcx,[rip+0x4f]        # 0x140056644
   1400565f5:	call   0x14005650c
   1400565fa:	mov    rbx,QWORD PTR [rsp+0x30]
   1400565ff:	xor    eax,eax
   140056601:	mov    rsi,QWORD PTR [rsp+0x38]
   140056606:	add    rsp,0x20
   14005660a:	pop    rdi
   14005660b:	ret    
   14005660c:	xor    r9d,r9d
   14005660f:	xor    r8d,r8d
   140056612:	xor    ecx,ecx
   140056614:	lea    edx,[r9+0x1]
   140056618:	call   QWORD PTR [rip+0x15c2a]        # 0x14006c248
   14005661e:	mov    QWORD PTR [rip+0x48d53],rax        # 0x14009f378
   140056625:	test   rax,rax
   140056628:	jne    0x1400565ee
   14005662a:	jmp    0x140056637
   14005662c:	mov    ecx,0x7
   140056631:	call   0x140056d70
   140056636:	int3   
   140056637:	mov    ecx,0x7
   14005663c:	call   0x140056d70
   140056641:	int3   
   140056642:	int3   
   140056643:	int3   
   140056644:	sub    rsp,0x28
   140056648:	lea    rcx,[rip+0x48cf9]        # 0x14009f348
   14005664f:	call   QWORD PTR [rip+0x15bcb]        # 0x14006c220
   140056655:	mov    rcx,QWORD PTR [rip+0x48d1c]        # 0x14009f378
   14005665c:	test   rcx,rcx
   14005665f:	je     0x140056667
   140056661:	call   QWORD PTR [rip+0x15a41]        # 0x14006c0a8
   140056667:	add    rsp,0x28
   14005666b:	ret    
   14005666c:	rex push rbx
   14005666e:	sub    rsp,0x20
   140056672:	mov    rbx,rcx
   140056675:	lea    rcx,[rip+0x48ccc]        # 0x14009f348
   14005667c:	call   QWORD PTR [rip+0x15b8e]        # 0x14006c210
   140056682:	mov    eax,DWORD PTR [rip+0x2b86c]        # 0x140081ef4
   140056688:	lea    rcx,[rip+0x48cb9]        # 0x14009f348
   14005668f:	mov    edx,DWORD PTR [rip+0x48cfb]        # 0x14009f390
   140056695:	inc    eax
   140056697:	mov    DWORD PTR [rip+0x2b857],eax        # 0x140081ef4
   14005669d:	mov    DWORD PTR [rbx],eax
   14005669f:	mov    rax,QWORD PTR gs:0x58
   1400566a8:	mov    r9d,0x4
   1400566ae:	mov    r8,QWORD PTR [rax+rdx*8]
   1400566b2:	mov    eax,DWORD PTR [rip+0x2b83c]        # 0x140081ef4
   1400566b8:	mov    DWORD PTR [r9+r8*1],eax
   1400566bc:	call   QWORD PTR [rip+0x15b56]        # 0x14006c218
   1400566c2:	add    rsp,0x20
   1400566c6:	pop    rbx
   1400566c7:	jmp    0x140056734
   1400566cc:	rex push rbx
   1400566ce:	sub    rsp,0x20
   1400566d2:	mov    rbx,rcx
   1400566d5:	lea    rcx,[rip+0x48c6c]        # 0x14009f348
   1400566dc:	call   QWORD PTR [rip+0x15b2e]        # 0x14006c210
   1400566e2:	cmp    DWORD PTR [rbx],0x0
   1400566e5:	jne    0x1400566f8
   1400566e7:	or     DWORD PTR [rbx],0xffffffff
   1400566ea:	jmp    0x140056720
   1400566ec:	mov    ecx,0x64
   1400566f1:	call   0x140056790
   1400566f6:	jmp    0x1400566e2
   1400566f8:	cmp    DWORD PTR [rbx],0xffffffff
   1400566fb:	je     0x1400566ec
   1400566fd:	mov    rax,QWORD PTR gs:0x58
   140056706:	mov    ecx,DWORD PTR [rip+0x48c84]        # 0x14009f390
   14005670c:	mov    r8d,0x4
   140056712:	mov    rdx,QWORD PTR [rax+rcx*8]
   140056716:	mov    eax,DWORD PTR [rip+0x2b7d8]        # 0x140081ef4
   14005671c:	mov    DWORD PTR [r8+rdx*1],eax
   140056720:	lea    rcx,[rip+0x48c21]        # 0x14009f348
   140056727:	add    rsp,0x20
   14005672b:	pop    rbx
   14005672c:	rex.W jmp QWORD PTR [rip+0x15ae5]        # 0x14006c218
   140056733:	int3   
   140056734:	rex push rbx
   140056736:	sub    rsp,0x20
   14005673a:	mov    rcx,QWORD PTR [rip+0x48c37]        # 0x14009f378
   140056741:	test   rcx,rcx
   140056744:	jne    0x140056776
   140056746:	mov    rbx,QWORD PTR [rip+0x2b793]        # 0x140081ee0
   14005674d:	mov    ecx,ebx
   14005674f:	xor    rbx,QWORD PTR [rip+0x48c32]        # 0x14009f388
   140056756:	and    ecx,0x3f
   140056759:	ror    rbx,cl
   14005675c:	mov    rcx,rbx
   14005675f:	call   0x140056aac
   140056764:	lea    rcx,[rip+0x48c05]        # 0x14009f370
   14005676b:	mov    rax,rbx
   14005676e:	add    rsp,0x20
   140056772:	pop    rbx
   140056773:	rex.W jmp rax
   140056776:	call   QWORD PTR [rip+0x15aac]        # 0x14006c228
   14005677c:	mov    rcx,QWORD PTR [rip+0x48bf5]        # 0x14009f378
   140056783:	add    rsp,0x20
   140056787:	pop    rbx
   140056788:	rex.W jmp QWORD PTR [rip+0x15aa1]        # 0x14006c230
   14005678f:	int3   
   140056790:	mov    QWORD PTR [rsp+0x8],rbx
   140056795:	mov    QWORD PTR [rsp+0x10],rsi
   14005679a:	push   rdi
   14005679b:	sub    rsp,0x20
   14005679f:	xor    edi,edi
   1400567a1:	mov    esi,ecx
   1400567a3:	cmp    QWORD PTR [rip+0x48bce],rdi        # 0x14009f378
   1400567aa:	jne    0x1400567e4
   1400567ac:	mov    rbx,QWORD PTR [rip+0x2b72d]        # 0x140081ee0
   1400567b3:	mov    ecx,ebx
   1400567b5:	xor    rbx,QWORD PTR [rip+0x48bc4]        # 0x14009f380
   1400567bc:	and    ecx,0x3f
   1400567bf:	ror    rbx,cl
   1400567c2:	mov    rcx,rbx
   1400567c5:	call   0x140056aac
   1400567ca:	mov    r8d,esi
   1400567cd:	lea    rdx,[rip+0x48b74]        # 0x14009f348
   1400567d4:	lea    rcx,[rip+0x48b95]        # 0x14009f370
   1400567db:	call   rbx
   1400567dd:	test   eax,eax
   1400567df:	setne  al
   1400567e2:	jmp    0x140056817
   1400567e4:	lea    rcx,[rip+0x48b5d]        # 0x14009f348
   1400567eb:	call   QWORD PTR [rip+0x15a27]        # 0x14006c218
   1400567f1:	mov    rcx,QWORD PTR [rip+0x48b80]        # 0x14009f378
   1400567f8:	xor    r8d,r8d
   1400567fb:	mov    edx,esi
   1400567fd:	call   QWORD PTR [rip+0x15bbd]        # 0x14006c3c0
   140056803:	lea    rcx,[rip+0x48b3e]        # 0x14009f348
   14005680a:	mov    ebx,eax
   14005680c:	call   QWORD PTR [rip+0x159fe]        # 0x14006c210
   140056812:	test   ebx,ebx
   140056814:	sete   al
   140056817:	mov    rbx,QWORD PTR [rsp+0x30]
   14005681c:	mov    rsi,QWORD PTR [rsp+0x38]
   140056821:	add    rsp,0x20
   140056825:	pop    rdi
   140056826:	ret    
   140056827:	int3   
   140056828:	rex push rbx
   14005682a:	sub    rsp,0x20
   14005682e:	mov    ecx,0x1
   140056833:	call   0x140060580
   140056838:	call   0x140057004
   14005683d:	mov    ecx,eax
   14005683f:	call   0x14005e9f8
   140056844:	call   0x140060810
   140056849:	mov    rbx,rax
   14005684c:	call   0x140057000
   140056851:	mov    ecx,0x1
   140056856:	mov    DWORD PTR [rbx],eax
   140056858:	call   0x140056304
   14005685d:	test   al,al
   14005685f:	je     0x1400568cd
   140056861:	call   0x14005705c
   140056866:	lea    rcx,[rip+0x83b]        # 0x1400570a8
   14005686d:	call   0x14005650c
   140056872:	call   0x140056d54
   140056877:	mov    ecx,eax
   140056879:	call   0x14005faa8
   14005687e:	test   eax,eax
   140056880:	jne    0x1400568d8
   140056882:	call   0x14005700c
   140056887:	call   0x140057040
   14005688c:	test   eax,eax
   14005688e:	je     0x14005689c
   140056890:	lea    rcx,[rip+0x769]        # 0x140057000
   140056897:	call   0x1400605f8
   14005689c:	call   0x1400570f4
   1400568a1:	call   0x1400570f4
   1400568a6:	call   0x140057000
   1400568ab:	mov    ecx,eax
   1400568ad:	call   0x140060770
   1400568b2:	call   0x140060460
   1400568b7:	test   al,al
   1400568b9:	je     0x1400568c0
   1400568bb:	call   0x14005ff84
   1400568c0:	call   0x140057000
   1400568c5:	xor    eax,eax
   1400568c7:	add    rsp,0x20
   1400568cb:	pop    rbx
   1400568cc:	ret    
   1400568cd:	mov    ecx,0x7
   1400568d2:	call   0x140056d70
   1400568d7:	int3   
   1400568d8:	mov    ecx,0x7
   1400568dd:	call   0x140056d70
   1400568e2:	int3   
   1400568e3:	int3   
   1400568e4:	sub    rsp,0x28
   1400568e8:	call   0x140057024
   1400568ed:	xor    eax,eax
   1400568ef:	add    rsp,0x28
   1400568f3:	ret    
   1400568f4:	sub    rsp,0x28
   1400568f8:	call   0x140056f0c
   1400568fd:	call   0x140057000
   140056902:	mov    ecx,eax
   140056904:	add    rsp,0x28
   140056908:	jmp    0x1400607e4
   14005690d:	int3   
   14005690e:	int3   
   14005690f:	int3   
   140056910:	mov    QWORD PTR [rsp+0x8],rbx
   140056915:	mov    QWORD PTR [rsp+0x10],rsi
   14005691a:	push   rdi
   14005691b:	sub    rsp,0x30
   14005691f:	mov    ecx,0x1
   140056924:	call   0x1400562b8
   140056929:	test   al,al
   14005692b:	jne    0x140056938
   14005692d:	mov    ecx,0x7
   140056932:	call   0x140056d70
   140056937:	int3   
   140056938:	xor    sil,sil
   14005693b:	mov    BYTE PTR [rsp+0x20],sil
   140056940:	call   0x14005627c
   140056945:	mov    bl,al
   140056947:	mov    ecx,DWORD PTR [rip+0x489b3]        # 0x14009f300
   14005694d:	cmp    ecx,0x1
   140056950:	jne    0x14005695c
   140056952:	mov    ecx,0x7
   140056957:	call   0x140056d70
   14005695c:	test   ecx,ecx
   14005695e:	jne    0x1400569aa
   140056960:	mov    DWORD PTR [rip+0x48996],0x1        # 0x14009f300
   14005696a:	lea    rdx,[rip+0x15c6f]        # 0x14006c5e0
   140056971:	lea    rcx,[rip+0x15c28]        # 0x14006c5a0
   140056978:	call   0x140060698
   14005697d:	test   eax,eax
   14005697f:	je     0x14005698b
   140056981:	mov    eax,0xff
   140056986:	jmp    0x140056a85
   14005698b:	lea    rdx,[rip+0x15c06]        # 0x14006c598
   140056992:	lea    rcx,[rip+0x15b9f]        # 0x14006c538
   140056999:	call   0x140060620
   14005699e:	mov    DWORD PTR [rip+0x48958],0x2        # 0x14009f300
   1400569a8:	jmp    0x1400569b2
   1400569aa:	mov    sil,0x1
   1400569ad:	mov    BYTE PTR [rsp+0x20],sil
   1400569b2:	mov    cl,bl
   1400569b4:	call   0x14005646c
   1400569b9:	call   0x14005704c
   1400569be:	mov    rbx,rax
   1400569c1:	cmp    QWORD PTR [rax],0x0
   1400569c5:	je     0x1400569e9
   1400569c7:	mov    rcx,rax
   1400569ca:	call   0x1400563d0
   1400569cf:	test   al,al
   1400569d1:	je     0x1400569e9
   1400569d3:	mov    rbx,QWORD PTR [rbx]
   1400569d6:	mov    rcx,rbx
   1400569d9:	call   0x140056aac
   1400569de:	xor    r8d,r8d
   1400569e1:	lea    edx,[r8+0x2]
   1400569e5:	xor    ecx,ecx
   1400569e7:	call   rbx
   1400569e9:	call   0x140057054
   1400569ee:	mov    rbx,rax
   1400569f1:	cmp    QWORD PTR [rax],0x0
   1400569f5:	je     0x140056a0b
   1400569f7:	mov    rcx,rax
   1400569fa:	call   0x1400563d0
   1400569ff:	test   al,al
   140056a01:	je     0x140056a0b
   140056a03:	mov    rcx,QWORD PTR [rbx]
   140056a06:	call   0x14005e4c8
   140056a0b:	xor    ecx,ecx
   140056a0d:	call   0x14005a2d4
   140056a12:	call   0x140060714
   140056a17:	mov    rdi,rax
   140056a1a:	call   0x14006070c
   140056a1f:	mov    rbx,rax
   140056a22:	call   0x14005ff60
   140056a27:	mov    r8,rax
   140056a2a:	mov    rdx,QWORD PTR [rdi]
   140056a2d:	mov    ecx,DWORD PTR [rbx]
   140056a2f:	call   0x1400356e4
   140056a34:	mov    ebx,eax
   140056a36:	xor    ecx,ecx
   140056a38:	call   0x14005a3ec
   140056a3d:	call   0x140056eb8
   140056a42:	test   al,al
   140056a44:	jne    0x140056a4d
   140056a46:	mov    ecx,ebx
   140056a48:	call   0x14005e50c
   140056a4d:	test   sil,sil
   140056a50:	jne    0x140056a57
   140056a52:	call   0x14005e4ac
   140056a57:	xor    edx,edx
   140056a59:	mov    cl,0x1
   140056a5b:	call   0x140056490
   140056a60:	mov    eax,ebx
   140056a62:	jmp    0x140056a85
   140056a64:	mov    ebx,eax
   140056a66:	call   0x140056eb8
   140056a6b:	test   al,al
   140056a6d:	jne    0x140056a77
   140056a6f:	mov    ecx,ebx
   140056a71:	call   0x14005e4bc
   140056a76:	int3   
   140056a77:	cmp    BYTE PTR [rsp+0x20],0x0
   140056a7c:	jne    0x140056a83
   140056a7e:	call   0x14005e49c
   140056a83:	mov    eax,ebx
   140056a85:	mov    rbx,QWORD PTR [rsp+0x40]
   140056a8a:	mov    rsi,QWORD PTR [rsp+0x48]
   140056a8f:	add    rsp,0x30
   140056a93:	pop    rdi
   140056a94:	ret    
   140056a95:	int3   
   140056a96:	int3   
   140056a97:	int3   
   140056a98:	sub    rsp,0x28
   140056a9c:	call   0x140056f54
   140056aa1:	add    rsp,0x28
   140056aa5:	jmp    0x140056910
   140056aaa:	int3   
   140056aab:	int3   
   140056aac:	rex.W jmp QWORD PTR [rip+0x15a75]        # 0x14006c528
   140056ab3:	int3   
   140056ab4:	xor    eax,eax
   140056ab6:	mov    QWORD PTR [rcx+0x10],rax
   140056aba:	lea    rax,[rip+0x15faf]        # 0x14006ca70
   140056ac1:	mov    QWORD PTR [rcx+0x8],rax
   140056ac5:	lea    rax,[rip+0x1a8fc]        # 0x1400713c8
   140056acc:	mov    QWORD PTR [rcx],rax
   140056acf:	mov    rax,rcx
   140056ad2:	ret    
   140056ad3:	int3   
   140056ad4:	rex push rbx
   140056ad6:	sub    rsp,0x20
   140056ada:	mov    rbx,rcx
   140056add:	mov    rax,rdx
   140056ae0:	lea    rcx,[rip+0x1a8c9]        # 0x1400713b0
   140056ae7:	mov    QWORD PTR [rbx],rcx
   140056aea:	lea    rdx,[rbx+0x8]
   140056aee:	xor    ecx,ecx
   140056af0:	mov    QWORD PTR [rdx],rcx
   140056af3:	mov    QWORD PTR [rdx+0x8],rcx
   140056af7:	lea    rcx,[rax+0x8]
   140056afb:	call   0x1400585cc
   140056b00:	lea    rax,[rip+0x1a8d9]        # 0x1400713e0
   140056b07:	mov    QWORD PTR [rbx],rax
   140056b0a:	mov    rax,rbx
   140056b0d:	add    rsp,0x20
   140056b11:	pop    rbx
   140056b12:	ret    
   140056b13:	int3   
   140056b14:	xor    eax,eax
   140056b16:	mov    QWORD PTR [rcx+0x10],rax
   140056b1a:	lea    rax,[rip+0x1a8cf]        # 0x1400713f0
   140056b21:	mov    QWORD PTR [rcx+0x8],rax
   140056b25:	lea    rax,[rip+0x1a8b4]        # 0x1400713e0
   140056b2c:	mov    QWORD PTR [rcx],rax
   140056b2f:	mov    rax,rcx
   140056b32:	ret    
   140056b33:	int3   
   140056b34:	lea    rax,[rip+0x1a875]        # 0x1400713b0
   140056b3b:	mov    QWORD PTR [rcx],rax
   140056b3e:	add    rcx,0x8
   140056b42:	jmp    0x14005865c
   140056b47:	int3   
   140056b48:	sub    rsp,0x48
   140056b4c:	lea    rcx,[rsp+0x20]
   140056b51:	call   0x140056ab4
   140056b56:	lea    rdx,[rip+0x28ceb]        # 0x14007f848
   140056b5d:	lea    rcx,[rsp+0x20]
   140056b62:	call   0x140058734
   140056b67:	int3   
   140056b68:	sub    rsp,0x48
   140056b6c:	lea    rcx,[rsp+0x20]
   140056b71:	call   0x140056b14
   140056b76:	lea    rdx,[rip+0x28dab]        # 0x14007f928
   140056b7d:	lea    rcx,[rsp+0x20]
   140056b82:	call   0x140058734
   140056b87:	int3   
   140056b88:	jmp    0x14005a938
   140056b8d:	int3   
   140056b8e:	int3   
   140056b8f:	int3   
   140056b90:	mov    QWORD PTR [rsp+0x10],rbx
   140056b95:	push   rbp
   140056b96:	mov    rbp,rsp
   140056b99:	sub    rsp,0x20
   140056b9d:	and    DWORD PTR [rbp-0x18],0x0
   140056ba1:	xor    ecx,ecx
   140056ba3:	xor    eax,eax
   140056ba5:	mov    DWORD PTR [rip+0x2b34d],0x2        # 0x140081efc
   140056baf:	cpuid  
   140056bb1:	mov    r8d,ecx
   140056bb4:	mov    DWORD PTR [rip+0x2b33a],0x1        # 0x140081ef8
   140056bbe:	xor    r8d,0x6c65746e
   140056bc5:	mov    r9d,edx
   140056bc8:	xor    r9d,0x49656e69
   140056bcf:	mov    r10d,edx
   140056bd2:	or     r9d,r8d
   140056bd5:	mov    edx,ebx
   140056bd7:	xor    edx,0x756e6547
   140056bdd:	mov    r11d,eax
   140056be0:	or     r9d,edx
   140056be3:	mov    eax,0x1
   140056be8:	sete   r8b
   140056bec:	xor    ecx,0x444d4163
   140056bf2:	xor    ebx,0x68747541
   140056bf8:	xor    r10d,0x69746e65
   140056bff:	or     ebx,r10d
   140056c02:	or     ebx,ecx
   140056c04:	sete   r10b
   140056c08:	xor    ecx,ecx
   140056c0a:	cpuid  
   140056c0c:	mov    r9d,ecx
   140056c0f:	mov    DWORD PTR [rbp-0x10],eax
   140056c12:	test   r8b,r8b
   140056c15:	mov    DWORD PTR [rbp-0x8],r9d
   140056c19:	mov    r8d,DWORD PTR [rip+0x48774]        # 0x14009f394
   140056c20:	mov    ecx,eax
   140056c22:	mov    DWORD PTR [rbp-0xc],ebx
   140056c25:	mov    DWORD PTR [rbp-0x4],edx
   140056c28:	je     0x140056c7c
   140056c2a:	or     QWORD PTR [rip+0x2b2ce],0xffffffffffffffff        # 0x140081f00
   140056c32:	or     r8d,0x4
   140056c36:	and    eax,0xfff3ff0
   140056c3b:	mov    DWORD PTR [rip+0x48752],r8d        # 0x14009f394
   140056c42:	cmp    eax,0x106c0
   140056c47:	je     0x140056c71
   140056c49:	cmp    eax,0x20660
   140056c4e:	je     0x140056c71
   140056c50:	cmp    eax,0x20670
   140056c55:	je     0x140056c71
   140056c57:	add    eax,0xfffcf9b0
   140056c5c:	cmp    eax,0x20
   140056c5f:	ja     0x140056c7c
   140056c61:	movabs rbx,0x100010001
   140056c6b:	bt     rbx,rax
   140056c6f:	jae    0x140056c7c
   140056c71:	or     r8d,0x1
   140056c75:	mov    DWORD PTR [rip+0x48718],r8d        # 0x14009f394
   140056c7c:	test   r10b,r10b
   140056c7f:	je     0x140056c9a
   140056c81:	and    ecx,0xff00f00
   140056c87:	cmp    ecx,0x600f00
   140056c8d:	jl     0x140056c9a
   140056c8f:	or     r8d,0x4
   140056c93:	mov    DWORD PTR [rip+0x486fa],r8d        # 0x14009f394
   140056c9a:	mov    eax,0x7
   140056c9f:	mov    DWORD PTR [rbp-0x20],edx
   140056ca2:	mov    DWORD PTR [rbp-0x1c],r9d
   140056ca6:	cmp    r11d,eax
   140056ca9:	jl     0x140056ccf
   140056cab:	xor    ecx,ecx
   140056cad:	cpuid  
   140056caf:	mov    DWORD PTR [rbp-0x10],eax
   140056cb2:	mov    DWORD PTR [rbp-0xc],ebx
   140056cb5:	mov    DWORD PTR [rbp-0x8],ecx
   140056cb8:	mov    DWORD PTR [rbp-0x4],edx
   140056cbb:	mov    DWORD PTR [rbp-0x18],ebx
   140056cbe:	bt     ebx,0x9
   140056cc2:	jae    0x140056ccf
   140056cc4:	or     r8d,0x2
   140056cc8:	mov    DWORD PTR [rip+0x486c5],r8d        # 0x14009f394
   140056ccf:	bt     r9d,0x14
   140056cd4:	jae    0x140056d44
   140056cd6:	mov    DWORD PTR [rip+0x2b218],0x2        # 0x140081ef8
   140056ce0:	mov    DWORD PTR [rip+0x2b212],0x6        # 0x140081efc
   140056cea:	bt     r9d,0x1b
   140056cef:	jae    0x140056d44
   140056cf1:	bt     r9d,0x1c
   140056cf6:	jae    0x140056d44
   140056cf8:	xor    ecx,ecx
   140056cfa:	xgetbv 
   140056cfd:	shl    rdx,0x20
   140056d01:	or     rdx,rax
   140056d04:	mov    QWORD PTR [rbp+0x10],rdx
   140056d08:	mov    rax,QWORD PTR [rbp+0x10]
   140056d0c:	and    al,0x6
   140056d0e:	cmp    al,0x6
   140056d10:	jne    0x140056d44
   140056d12:	mov    eax,DWORD PTR [rip+0x2b1e4]        # 0x140081efc
   140056d18:	or     eax,0x8
   140056d1b:	mov    DWORD PTR [rip+0x2b1d3],0x3        # 0x140081ef8
   140056d25:	test   BYTE PTR [rbp-0x18],0x20
   140056d29:	mov    DWORD PTR [rip+0x2b1cd],eax        # 0x140081efc
   140056d2f:	je     0x140056d44
   140056d31:	or     eax,0x20
   140056d34:	mov    DWORD PTR [rip+0x2b1ba],0x5        # 0x140081ef8
   140056d3e:	mov    DWORD PTR [rip+0x2b1b8],eax        # 0x140081efc
   140056d44:	xor    eax,eax
   140056d46:	mov    rbx,QWORD PTR [rsp+0x38]
   140056d4b:	add    rsp,0x20
   140056d4f:	pop    rbp
   140056d50:	ret    
   140056d51:	int3   
   140056d52:	int3   
   140056d53:	int3   
   140056d54:	mov    eax,0x1
   140056d59:	ret    
   140056d5a:	int3   
   140056d5b:	int3   
   140056d5c:	xor    eax,eax
   140056d5e:	cmp    DWORD PTR [rip+0x49244],eax        # 0x14009ffa8
   140056d64:	setne  al
   140056d67:	ret    
   140056d68:	and    DWORD PTR [rip+0x48629],0x0        # 0x14009f398
   140056d6f:	ret    
   140056d70:	mov    QWORD PTR [rsp+0x8],rbx
   140056d75:	push   rbp
   140056d76:	lea    rbp,[rsp-0x4c0]
   140056d7e:	sub    rsp,0x5c0
   140056d85:	mov    ebx,ecx
   140056d87:	mov    ecx,0x17
   140056d8c:	call   0x14006a2de
   140056d91:	test   eax,eax
   140056d93:	je     0x140056d99
   140056d95:	mov    ecx,ebx
   140056d97:	int    0x29
   140056d99:	and    DWORD PTR [rip+0x485f8],0x0        # 0x14009f398
   140056da0:	lea    rcx,[rbp-0x10]
   140056da4:	xor    edx,edx
   140056da6:	mov    r8d,0x4d0
   140056dac:	call   0x140058f40
   140056db1:	lea    rcx,[rbp-0x10]
   140056db5:	call   QWORD PTR [rip+0x155cd]        # 0x14006c388
   140056dbb:	mov    rbx,QWORD PTR [rbp+0xe8]
   140056dc2:	lea    rdx,[rbp+0x4d8]
   140056dc9:	mov    rcx,rbx
   140056dcc:	xor    r8d,r8d
   140056dcf:	call   QWORD PTR [rip+0x155bb]        # 0x14006c390
   140056dd5:	test   rax,rax
   140056dd8:	je     0x140056e16
   140056dda:	and    QWORD PTR [rsp+0x38],0x0
   140056de0:	lea    rcx,[rbp+0x4e0]
   140056de7:	mov    rdx,QWORD PTR [rbp+0x4d8]
   140056dee:	mov    r9,rax
   140056df1:	mov    QWORD PTR [rsp+0x30],rcx
   140056df6:	mov    r8,rbx
   140056df9:	lea    rcx,[rbp+0x4e8]
   140056e00:	mov    QWORD PTR [rsp+0x28],rcx
   140056e05:	lea    rcx,[rbp-0x10]
   140056e09:	mov    QWORD PTR [rsp+0x20],rcx
   140056e0e:	xor    ecx,ecx
   140056e10:	call   QWORD PTR [rip+0x15582]        # 0x14006c398
   140056e16:	mov    rax,QWORD PTR [rbp+0x4c8]
   140056e1d:	lea    rcx,[rsp+0x50]
   140056e22:	mov    QWORD PTR [rbp+0xe8],rax
   140056e29:	xor    edx,edx
   140056e2b:	lea    rax,[rbp+0x4c8]
   140056e32:	mov    r8d,0x98
   140056e38:	add    rax,0x8
   140056e3c:	mov    QWORD PTR [rbp+0x88],rax
   140056e43:	call   0x140058f40
   140056e48:	mov    rax,QWORD PTR [rbp+0x4c8]
   140056e4f:	mov    QWORD PTR [rsp+0x60],rax
   140056e54:	mov    DWORD PTR [rsp+0x50],0x40000015
   140056e5c:	mov    DWORD PTR [rsp+0x54],0x1
   140056e64:	call   QWORD PTR [rip+0x1555e]        # 0x14006c3c8
   140056e6a:	cmp    eax,0x1
   140056e6d:	lea    rax,[rsp+0x50]
   140056e72:	mov    QWORD PTR [rsp+0x40],rax
   140056e77:	lea    rax,[rbp-0x10]
   140056e7b:	sete   bl
   140056e7e:	mov    QWORD PTR [rsp+0x48],rax
   140056e83:	xor    ecx,ecx
   140056e85:	call   QWORD PTR [rip+0x1551d]        # 0x14006c3a8
   140056e8b:	lea    rcx,[rsp+0x40]
   140056e90:	call   QWORD PTR [rip+0x1550a]        # 0x14006c3a0
   140056e96:	test   eax,eax
   140056e98:	jne    0x140056ea4
   140056e9a:	neg    bl
   140056e9c:	sbb    eax,eax
   140056e9e:	and    DWORD PTR [rip+0x484f4],eax        # 0x14009f398
   140056ea4:	mov    rbx,QWORD PTR [rsp+0x5d0]
   140056eac:	add    rsp,0x5c0
   140056eb3:	pop    rbp
   140056eb4:	ret    
   140056eb5:	int3   
   140056eb6:	int3   
   140056eb7:	int3   
   140056eb8:	sub    rsp,0x28
   140056ebc:	xor    ecx,ecx
   140056ebe:	call   QWORD PTR [rip+0x1548c]        # 0x14006c350
   140056ec4:	mov    rcx,rax
   140056ec7:	test   rax,rax
   140056eca:	jne    0x140056ed0
   140056ecc:	xor    al,al
   140056ece:	jmp    0x140056f07
   140056ed0:	mov    eax,0x5a4d
   140056ed5:	cmp    WORD PTR [rcx],ax
   140056ed8:	jne    0x140056ecc
   140056eda:	movsxd rax,DWORD PTR [rcx+0x3c]
   140056ede:	add    rax,rcx
   140056ee1:	cmp    DWORD PTR [rax],0x4550
   140056ee7:	jne    0x140056ecc
   140056ee9:	mov    ecx,0x20b
   140056eee:	cmp    WORD PTR [rax+0x18],cx
   140056ef2:	jne    0x140056ecc
   140056ef4:	cmp    DWORD PTR [rax+0x84],0xe
   140056efb:	jbe    0x140056ecc
   140056efd:	cmp    DWORD PTR [rax+0xf8],0x0
   140056f04:	setne  al
   140056f07:	add    rsp,0x28
   140056f0b:	ret    
   140056f0c:	lea    rcx,[rip+0x9]        # 0x140056f1c
   140056f13:	rex.W jmp QWORD PTR [rip+0x1548e]        # 0x14006c3a8
   140056f1a:	int3   
   140056f1b:	int3   
   140056f1c:	sub    rsp,0x28
   140056f20:	mov    rax,QWORD PTR [rcx]
   140056f23:	cmp    DWORD PTR [rax],0xe06d7363
   140056f29:	jne    0x140056f47
   140056f2b:	cmp    DWORD PTR [rax+0x18],0x4
   140056f2f:	jne    0x140056f47
   140056f31:	mov    ecx,DWORD PTR [rax+0x20]
   140056f34:	lea    eax,[rcx-0x19930520]
   140056f3a:	cmp    eax,0x2
   140056f3d:	jbe    0x140056f4e
   140056f3f:	cmp    ecx,0x1994000
   140056f45:	je     0x140056f4e
   140056f47:	xor    eax,eax
   140056f49:	add    rsp,0x28
   140056f4d:	ret    
   140056f4e:	call   0x14005f654
   140056f53:	int3   
   140056f54:	mov    QWORD PTR [rsp+0x20],rbx
   140056f59:	push   rbp
   140056f5a:	mov    rbp,rsp
   140056f5d:	sub    rsp,0x20
   140056f61:	and    QWORD PTR [rbp+0x18],0x0
   140056f66:	movabs rbx,0x2b992ddfa232
   140056f70:	mov    rax,QWORD PTR [rip+0x2af69]        # 0x140081ee0
   140056f77:	cmp    rax,rbx
   140056f7a:	jne    0x140056feb
   140056f7c:	lea    rcx,[rbp+0x18]
   140056f80:	call   QWORD PTR [rip+0x15462]        # 0x14006c3e8
   140056f86:	mov    rax,QWORD PTR [rbp+0x18]
   140056f8a:	mov    QWORD PTR [rbp+0x10],rax
   140056f8e:	call   QWORD PTR [rip+0x1544c]        # 0x14006c3e0
   140056f94:	mov    eax,eax
   140056f96:	xor    QWORD PTR [rbp+0x10],rax
   140056f9a:	call   QWORD PTR [rip+0x15210]        # 0x14006c1b0
   140056fa0:	mov    eax,eax
   140056fa2:	lea    rcx,[rbp+0x20]
   140056fa6:	xor    QWORD PTR [rbp+0x10],rax
   140056faa:	call   QWORD PTR [rip+0x15428]        # 0x14006c3d8
   140056fb0:	mov    eax,DWORD PTR [rbp+0x20]
   140056fb3:	lea    rcx,[rbp+0x10]
   140056fb7:	shl    rax,0x20
   140056fbb:	xor    rax,QWORD PTR [rbp+0x20]
   140056fbf:	xor    rax,QWORD PTR [rbp+0x10]
   140056fc3:	xor    rax,rcx
   140056fc6:	movabs rcx,0xffffffffffff
   140056fd0:	and    rax,rcx
   140056fd3:	movabs rcx,0x2b992ddfa233
   140056fdd:	cmp    rax,rbx
   140056fe0:	cmove  rax,rcx
   140056fe4:	mov    QWORD PTR [rip+0x2aef5],rax        # 0x140081ee0
   140056feb:	mov    rbx,QWORD PTR [rsp+0x48]
   140056ff0:	not    rax
   140056ff3:	mov    QWORD PTR [rip+0x2aeee],rax        # 0x140081ee8
   140056ffa:	add    rsp,0x20
   140056ffe:	pop    rbp
   140056fff:	ret    
   140057000:	xor    eax,eax
   140057002:	ret    
   140057003:	int3   
   140057004:	mov    eax,0x4000
   140057009:	ret    
   14005700a:	int3   
   14005700b:	int3   
   14005700c:	lea    rcx,[rip+0x4838d]        # 0x14009f3a0
   140057013:	rex.W jmp QWORD PTR [rip+0x153d6]        # 0x14006c3f0
   14005701a:	int3   
   14005701b:	int3   
   14005701c:	lea    rax,[rip+0x4838d]        # 0x14009f3b0
   140057023:	ret    
   140057024:	sub    rsp,0x28
   140057028:	call   0x140006ac4
   14005702d:	or     QWORD PTR [rax],0x4
   140057031:	call   0x14005701c
   140057036:	or     QWORD PTR [rax],0x2
   14005703a:	add    rsp,0x28
   14005703e:	ret    
   14005703f:	int3   
   140057040:	xor    eax,eax
   140057042:	cmp    DWORD PTR [rip+0x2aec0],eax        # 0x140081f08
   140057048:	sete   al
   14005704b:	ret    
   14005704c:	lea    rax,[rip+0x48f4d]        # 0x14009ffa0
   140057053:	ret    
   140057054:	lea    rax,[rip+0x48f3d]        # 0x14009ff98
   14005705b:	ret    
   14005705c:	mov    QWORD PTR [rsp+0x8],rbx
   140057061:	mov    QWORD PTR [rsp+0x10],rsi
   140057066:	push   rdi
   140057067:	sub    rsp,0x20
   14005706b:	lea    rbx,[rip+0x22966]        # 0x1400799d8
   140057072:	lea    rsi,[rip+0x2295f]        # 0x1400799d8
   140057079:	jmp    0x140057091
   14005707b:	mov    rdi,QWORD PTR [rbx]
   14005707e:	test   rdi,rdi
   140057081:	je     0x14005708d
   140057083:	mov    rcx,rdi
   140057086:	call   0x140056aac
   14005708b:	call   rdi
   14005708d:	add    rbx,0x8
   140057091:	cmp    rbx,rsi
   140057094:	jb     0x14005707b
   140057096:	mov    rbx,QWORD PTR [rsp+0x30]
   14005709b:	mov    rsi,QWORD PTR [rsp+0x38]
   1400570a0:	add    rsp,0x20
   1400570a4:	pop    rdi
   1400570a5:	ret    
   1400570a6:	int3   
   1400570a7:	int3   
   1400570a8:	mov    QWORD PTR [rsp+0x8],rbx
   1400570ad:	mov    QWORD PTR [rsp+0x10],rsi
   1400570b2:	push   rdi
   1400570b3:	sub    rsp,0x20
   1400570b7:	lea    rbx,[rip+0x2292a]        # 0x1400799e8
   1400570be:	lea    rsi,[rip+0x22923]        # 0x1400799e8
   1400570c5:	jmp    0x1400570dd
   1400570c7:	mov    rdi,QWORD PTR [rbx]
   1400570ca:	test   rdi,rdi
   1400570cd:	je     0x1400570d9
   1400570cf:	mov    rcx,rdi
   1400570d2:	call   0x140056aac
   1400570d7:	call   rdi
   1400570d9:	add    rbx,0x8
   1400570dd:	cmp    rbx,rsi
   1400570e0:	jb     0x1400570c7
   1400570e2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400570e7:	mov    rsi,QWORD PTR [rsp+0x38]
   1400570ec:	add    rsp,0x20
   1400570f0:	pop    rdi
   1400570f1:	ret    
   1400570f2:	int3   
   1400570f3:	int3   
   1400570f4:	ret    0x0
   1400570f7:	int3   
   1400570f8:	int3   
   1400570f9:	int3   
   1400570fa:	int3   
   1400570fb:	int3   
   1400570fc:	int3   
   1400570fd:	int3   
   1400570fe:	int3   
   1400570ff:	int3   
   140057100:	test   rcx,rcx
   140057103:	je     0x140057184
   140057105:	mov    QWORD PTR [rsp+0x8],rbx
   14005710a:	mov    BYTE PTR [rsp+0x10],dl
   14005710e:	push   rdi
   14005710f:	sub    rsp,0x20
   140057113:	cmp    DWORD PTR [rcx],0xe06d7363
   140057119:	jne    0x14005717a
   14005711b:	cmp    DWORD PTR [rcx+0x18],0x4
   14005711f:	jne    0x14005717a
   140057121:	mov    eax,DWORD PTR [rcx+0x20]
   140057124:	sub    eax,0x19930520
   140057129:	cmp    eax,0x2
   14005712c:	ja     0x14005717a
   14005712e:	mov    rax,QWORD PTR [rcx+0x30]
   140057132:	test   rax,rax
   140057135:	je     0x14005717a
   140057137:	movsxd rdx,DWORD PTR [rax+0x4]
   14005713b:	test   edx,edx
   14005713d:	je     0x140057155
   14005713f:	add    rdx,QWORD PTR [rcx+0x38]
   140057143:	mov    rcx,QWORD PTR [rcx+0x28]
   140057147:	call   0x140057b6c
   14005714c:	nop
   14005714d:	jmp    0x14005717a
   14005714f:	call   0x14005f654
   140057154:	nop
   140057155:	test   BYTE PTR [rax],0x10
   140057158:	je     0x14005717a
   14005715a:	mov    rax,QWORD PTR [rcx+0x28]
   14005715e:	mov    rdi,QWORD PTR [rax]
   140057161:	test   rdi,rdi
   140057164:	je     0x14005717a
   140057166:	mov    rax,QWORD PTR [rdi]
   140057169:	mov    rbx,QWORD PTR [rax+0x10]
   14005716d:	mov    rcx,rbx
   140057170:	call   0x140056aac
   140057175:	mov    rcx,rdi
   140057178:	call   rbx
   14005717a:	mov    rbx,QWORD PTR [rsp+0x30]
   14005717f:	add    rsp,0x20
   140057183:	pop    rdi
   140057184:	ret    
   140057185:	int3   
   140057186:	int3   
   140057187:	int3   
   140057188:	rex push rbx
   14005718a:	sub    rsp,0x20
   14005718e:	mov    rbx,rcx
   140057191:	mov    rax,rdx
   140057194:	lea    rcx,[rip+0x1a215]        # 0x1400713b0
   14005719b:	mov    QWORD PTR [rbx],rcx
   14005719e:	lea    rdx,[rbx+0x8]
   1400571a2:	xor    ecx,ecx
   1400571a4:	mov    QWORD PTR [rdx],rcx
   1400571a7:	mov    QWORD PTR [rdx+0x8],rcx
   1400571ab:	lea    rcx,[rax+0x8]
   1400571af:	call   0x1400585cc
   1400571b4:	lea    rax,[rip+0x1a25d]        # 0x140071418
   1400571bb:	mov    QWORD PTR [rbx],rax
   1400571be:	mov    rax,rbx
   1400571c1:	add    rsp,0x20
   1400571c5:	pop    rbx
   1400571c6:	ret    
   1400571c7:	int3   
   1400571c8:	xor    eax,eax
   1400571ca:	mov    QWORD PTR [rcx+0x10],rax
   1400571ce:	lea    rax,[rip+0x1a253]        # 0x140071428
   1400571d5:	mov    QWORD PTR [rcx+0x8],rax
   1400571d9:	lea    rax,[rip+0x1a238]        # 0x140071418
   1400571e0:	mov    QWORD PTR [rcx],rax
   1400571e3:	mov    rax,rcx
   1400571e6:	ret    
   1400571e7:	int3   
   1400571e8:	mov    QWORD PTR [rsp+0x8],rbx
   1400571ed:	push   rdi
   1400571ee:	sub    rsp,0x20
   1400571f2:	lea    rax,[rip+0x1a1b7]        # 0x1400713b0
   1400571f9:	mov    rdi,rcx
   1400571fc:	mov    QWORD PTR [rcx],rax
   1400571ff:	mov    ebx,edx
   140057201:	add    rcx,0x8
   140057205:	call   0x14005865c
   14005720a:	test   bl,0x1
   14005720d:	je     0x14005721c
   14005720f:	mov    edx,0x18
   140057214:	mov    rcx,rdi
   140057217:	call   0x140055de8
   14005721c:	mov    rax,rdi
   14005721f:	mov    rbx,QWORD PTR [rsp+0x30]
   140057224:	add    rsp,0x20
   140057228:	pop    rdi
   140057229:	ret    
   14005722a:	int3   
   14005722b:	int3   
   14005722c:	mov    rax,rsp
   14005722f:	mov    QWORD PTR [rax+0x8],rbx
   140057233:	mov    QWORD PTR [rax+0x18],rbp
   140057237:	push   rsi
   140057238:	push   rdi
   140057239:	push   r12
   14005723b:	push   r14
   14005723d:	push   r15
   14005723f:	sub    rsp,0x50
   140057243:	mov    r15,QWORD PTR [rsp+0xa0]
   14005724b:	mov    rbp,r9
   14005724e:	mov    r14,rdx
   140057251:	lea    r9,[rax+0x10]
   140057255:	mov    r12,r8
   140057258:	mov    rbx,rcx
   14005725b:	mov    r8,r15
   14005725e:	mov    rdx,rbp
   140057261:	mov    rcx,r14
   140057264:	call   0x14005880c
   140057269:	mov    r9,QWORD PTR [rsp+0xb0]
   140057271:	mov    rdi,rax
   140057274:	mov    rsi,QWORD PTR [rsp+0xa8]
   14005727c:	test   r9,r9
   14005727f:	je     0x14005728f
   140057281:	mov    r8,rsi
   140057284:	mov    rdx,rax
   140057287:	mov    rcx,rbx
   14005728a:	call   0x140057bb0
   14005728f:	call   0x140058c1c
   140057294:	movsxd rcx,DWORD PTR [rsi+0xc]
   140057298:	mov    r9,rdi
   14005729b:	add    rax,rcx
   14005729e:	mov    r8,r12
   1400572a1:	mov    cl,BYTE PTR [rsp+0xd8]
   1400572a8:	mov    BYTE PTR [rsp+0x40],cl
   1400572ac:	mov    rcx,QWORD PTR [rsp+0xb8]
   1400572b4:	mov    QWORD PTR [rsp+0x38],rbp
   1400572b9:	mov    QWORD PTR [rsp+0x30],r15
   1400572be:	mov    edx,DWORD PTR [rcx]
   1400572c0:	mov    rcx,r14
   1400572c3:	mov    DWORD PTR [rsp+0x28],edx
   1400572c7:	mov    rdx,rbx
   1400572ca:	mov    QWORD PTR [rsp+0x20],rax
   1400572cf:	call   0x140058ca4
   1400572d4:	lea    r11,[rsp+0x50]
   1400572d9:	mov    rbx,QWORD PTR [r11+0x30]
   1400572dd:	mov    rbp,QWORD PTR [r11+0x40]
   1400572e1:	mov    rsp,r11
   1400572e4:	pop    r15
   1400572e6:	pop    r14
   1400572e8:	pop    r12
   1400572ea:	pop    rdi
   1400572eb:	pop    rsi
   1400572ec:	ret    
   1400572ed:	int3   
   1400572ee:	int3   
   1400572ef:	int3   
   1400572f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400572f5:	push   rdi
   1400572f6:	sub    rsp,0x20
   1400572fa:	mov    r9,QWORD PTR [rcx]
   1400572fd:	mov    rbx,r8
   140057300:	and    DWORD PTR [r8],0x0
   140057304:	mov    r8d,0xe06d7363
   14005730a:	cmp    DWORD PTR [r9],r8d
   14005730d:	jne    0x140057369
   14005730f:	cmp    DWORD PTR [r9+0x18],0x4
   140057314:	mov    edi,0x1
   140057319:	mov    r10d,0x19930520
   14005731f:	jne    0x14005733c
   140057321:	mov    eax,DWORD PTR [r9+0x20]
   140057325:	sub    eax,r10d
   140057328:	cmp    eax,0x2
   14005732b:	ja     0x14005733c
   14005732d:	mov    rax,QWORD PTR [rdx+0x28]
   140057331:	cmp    QWORD PTR [r9+0x28],rax
   140057335:	mov    ecx,DWORD PTR [rbx]
   140057337:	cmove  ecx,edi
   14005733a:	mov    DWORD PTR [rbx],ecx
   14005733c:	cmp    DWORD PTR [r9],r8d
   14005733f:	jne    0x140057369
   140057341:	cmp    DWORD PTR [r9+0x18],0x4
   140057346:	jne    0x140057369
   140057348:	mov    ecx,DWORD PTR [r9+0x20]
   14005734c:	sub    ecx,r10d
   14005734f:	cmp    ecx,0x2
   140057352:	ja     0x140057369
   140057354:	cmp    QWORD PTR [r9+0x30],0x0
   140057359:	jne    0x140057369
   14005735b:	call   0x14005a580
   140057360:	mov    DWORD PTR [rax+0x40],edi
   140057363:	mov    eax,edi
   140057365:	mov    DWORD PTR [rbx],edi
   140057367:	jmp    0x14005736b
   140057369:	xor    eax,eax
   14005736b:	mov    rbx,QWORD PTR [rsp+0x30]
   140057370:	add    rsp,0x20
   140057374:	pop    rdi
   140057375:	ret    
   140057376:	int3   
   140057377:	int3   
   140057378:	mov    rax,rsp
   14005737b:	mov    QWORD PTR [rax+0x8],rbx
   14005737f:	mov    QWORD PTR [rax+0x10],rsi
   140057383:	mov    QWORD PTR [rax+0x20],rdi
   140057387:	mov    QWORD PTR [rax+0x18],r8
   14005738b:	push   rbp
   14005738c:	push   r12
   14005738e:	push   r13
   140057390:	push   r14
   140057392:	push   r15
   140057394:	lea    rbp,[rax-0x3f]
   140057398:	sub    rsp,0xb0
   14005739f:	mov    rbx,QWORD PTR [rbp+0x67]
   1400573a3:	mov    r13,rdx
   1400573a6:	mov    rdi,rcx
   1400573a9:	xor    r12d,r12d
   1400573ac:	mov    rcx,rbx
   1400573af:	mov    BYTE PTR [rbp-0x39],r12b
   1400573b3:	mov    rdx,r9
   1400573b6:	mov    BYTE PTR [rbp-0x38],r12b
   1400573ba:	mov    r15,r9
   1400573bd:	mov    r14,r8
   1400573c0:	call   0x14005a754
   1400573c5:	lea    r9,[rbp-0x11]
   1400573c9:	mov    r8,rbx
   1400573cc:	mov    rdx,r15
   1400573cf:	mov    rcx,r13
   1400573d2:	mov    esi,eax
   1400573d4:	call   0x14005880c
   1400573d9:	mov    r8,rbx
   1400573dc:	mov    rdx,r15
   1400573df:	mov    rcx,r13
   1400573e2:	call   0x14005a6e0
   1400573e7:	mov    r8,rbx
   1400573ea:	mov    rdx,r15
   1400573ed:	cmp    esi,eax
   1400573ef:	jle    0x140057410
   1400573f1:	mov    r9d,esi
   1400573f4:	lea    rcx,[rbp-0x11]
   1400573f8:	call   0x14005a70c
   1400573fd:	mov    r9d,esi
   140057400:	mov    r8,rbx
   140057403:	mov    rdx,r15
   140057406:	mov    rcx,r13
   140057409:	call   0x14005a718
   14005740e:	jmp    0x14005741a
   140057410:	mov    rcx,r13
   140057413:	call   0x14005a6e0
   140057418:	mov    esi,eax
   14005741a:	cmp    esi,0xffffffff
   14005741d:	jl     0x140057826
   140057423:	cmp    esi,DWORD PTR [rbx+0x4]
   140057426:	jge    0x140057826
   14005742c:	cmp    DWORD PTR [rdi],0xe06d7363
   140057432:	jne    0x140057787
   140057438:	cmp    DWORD PTR [rdi+0x18],0x4
   14005743c:	jne    0x140057551
   140057442:	mov    eax,DWORD PTR [rdi+0x20]
   140057445:	sub    eax,0x19930520
   14005744a:	cmp    eax,0x2
   14005744d:	ja     0x140057551
   140057453:	cmp    QWORD PTR [rdi+0x30],r12
   140057457:	jne    0x140057551
   14005745d:	call   0x14005a580
   140057462:	cmp    QWORD PTR [rax+0x20],r12
   140057466:	je     0x1400577c3
   14005746c:	call   0x14005a580
   140057471:	mov    rdi,QWORD PTR [rax+0x20]
   140057475:	call   0x14005a580
   14005747a:	mov    rcx,QWORD PTR [rdi+0x38]
   14005747e:	mov    BYTE PTR [rbp-0x39],0x1
   140057482:	mov    r14,QWORD PTR [rax+0x28]
   140057486:	mov    QWORD PTR [rbp+0x57],r14
   14005748a:	call   0x140058c8c
   14005748f:	cmp    DWORD PTR [rdi],0xe06d7363
   140057495:	jne    0x1400574b4
   140057497:	cmp    DWORD PTR [rdi+0x18],0x4
   14005749b:	jne    0x1400574b4
   14005749d:	mov    eax,DWORD PTR [rdi+0x20]
   1400574a0:	sub    eax,0x19930520
   1400574a5:	cmp    eax,0x2
   1400574a8:	ja     0x1400574b4
   1400574aa:	cmp    QWORD PTR [rdi+0x30],r12
   1400574ae:	je     0x1400577e4
   1400574b4:	call   0x14005a580
   1400574b9:	cmp    QWORD PTR [rax+0x38],r12
   1400574bd:	je     0x140057551
   1400574c3:	call   0x14005a580
   1400574c8:	mov    r14,QWORD PTR [rax+0x38]
   1400574cc:	call   0x14005a580
   1400574d1:	mov    rdx,r14
   1400574d4:	mov    rcx,rdi
   1400574d7:	mov    QWORD PTR [rax+0x38],r12
   1400574db:	call   0x140057a98
   1400574e0:	test   al,al
   1400574e2:	jne    0x14005754d
   1400574e4:	mov    r15d,r12d
   1400574e7:	cmp    DWORD PTR [r14],r12d
   1400574ea:	jle    0x1400577ea
   1400574f0:	mov    rsi,r12
   1400574f3:	call   0x140058c1c
   1400574f8:	movsxd rcx,DWORD PTR [r14+0x4]
   1400574fc:	add    rax,rsi
   1400574ff:	cmp    DWORD PTR [rcx+rax*1+0x4],r12d
   140057504:	je     0x140057521
   140057506:	call   0x140058c1c
   14005750b:	movsxd rcx,DWORD PTR [r14+0x4]
   14005750f:	add    rax,rsi
   140057512:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   140057517:	call   0x140058c1c
   14005751c:	add    rax,rbx
   14005751f:	jmp    0x140057524
   140057521:	mov    rax,r12
   140057524:	lea    rcx,[rax+0x8]
   140057528:	lea    rdx,[rip+0x2b3b1]        # 0x1400828e0
   14005752f:	call   0x14005a538
   140057534:	test   eax,eax
   140057536:	je     0x1400577f0
   14005753c:	inc    r15d
   14005753f:	add    rsi,0x14
   140057543:	cmp    r15d,DWORD PTR [r14]
   140057546:	jl     0x1400574f3
   140057548:	jmp    0x1400577ea
   14005754d:	mov    r14,QWORD PTR [rbp+0x57]
   140057551:	cmp    DWORD PTR [rdi],0xe06d7363
   140057557:	jne    0x140057787
   14005755d:	cmp    DWORD PTR [rdi+0x18],0x4
   140057561:	jne    0x140057787
   140057567:	mov    eax,DWORD PTR [rdi+0x20]
   14005756a:	sub    eax,0x19930520
   14005756f:	cmp    eax,0x2
   140057572:	ja     0x140057787
   140057578:	cmp    DWORD PTR [rbx+0xc],r12d
   14005757c:	jbe    0x1400576d0
   140057582:	mov    r8d,DWORD PTR [rbp+0x77]
   140057586:	lea    rax,[rbp-0x29]
   14005758a:	mov    QWORD PTR [rsp+0x30],r15
   14005758f:	mov    r9d,esi
   140057592:	mov    QWORD PTR [rsp+0x28],rax
   140057597:	mov    rdx,rbx
   14005759a:	lea    rax,[rbp-0x35]
   14005759e:	mov    rcx,r13
   1400575a1:	mov    QWORD PTR [rsp+0x20],rax
   1400575a6:	call   0x1400588d8
   1400575ab:	mov    ecx,DWORD PTR [rbp-0x35]
   1400575ae:	mov    edx,DWORD PTR [rbp-0x29]
   1400575b1:	cmp    ecx,edx
   1400575b3:	jae    0x1400576d0
   1400575b9:	lea    r14,[rax+0x10]
   1400575bd:	cmp    DWORD PTR [r14-0x10],esi
   1400575c1:	jg     0x1400576b2
   1400575c7:	cmp    esi,DWORD PTR [r14-0xc]
   1400575cb:	jg     0x1400576b2
   1400575d1:	call   0x140058c1c
   1400575d6:	movsxd r12,DWORD PTR [r14]
   1400575d9:	add    r12,rax
   1400575dc:	mov    eax,DWORD PTR [r14-0x4]
   1400575e0:	mov    DWORD PTR [rbp-0x2d],eax
   1400575e3:	test   eax,eax
   1400575e5:	jle    0x1400576ac
   1400575eb:	call   0x140058c30
   1400575f0:	mov    rcx,QWORD PTR [rdi+0x30]
   1400575f4:	add    rax,0x4
   1400575f8:	movsxd rdx,DWORD PTR [rcx+0xc]
   1400575fc:	add    rax,rdx
   1400575ff:	mov    QWORD PTR [rbp-0x21],rax
   140057603:	call   0x140058c30
   140057608:	mov    rcx,QWORD PTR [rdi+0x30]
   14005760c:	movsxd rdx,DWORD PTR [rcx+0xc]
   140057610:	mov    ecx,DWORD PTR [rax+rdx*1]
   140057613:	mov    DWORD PTR [rbp-0x31],ecx
   140057616:	test   ecx,ecx
   140057618:	jle    0x140057651
   14005761a:	call   0x140058c30
   14005761f:	mov    rcx,QWORD PTR [rbp-0x21]
   140057623:	mov    r8,QWORD PTR [rdi+0x30]
   140057627:	movsxd rcx,DWORD PTR [rcx]
   14005762a:	add    rax,rcx
   14005762d:	mov    rcx,r12
   140057630:	mov    rdx,rax
   140057633:	mov    QWORD PTR [rbp-0x19],rax
   140057637:	call   0x140058480
   14005763c:	test   eax,eax
   14005763e:	jne    0x14005765c
   140057640:	mov    eax,DWORD PTR [rbp-0x31]
   140057643:	add    QWORD PTR [rbp-0x21],0x4
   140057648:	dec    eax
   14005764a:	mov    DWORD PTR [rbp-0x31],eax
   14005764d:	test   eax,eax
   14005764f:	jg     0x14005761a
   140057651:	mov    eax,DWORD PTR [rbp-0x2d]
   140057654:	dec    eax
   140057656:	add    r12,0x14
   14005765a:	jmp    0x1400575e0
   14005765c:	mov    al,BYTE PTR [rbp+0x6f]
   14005765f:	mov    r9,r15
   140057662:	mov    r8,QWORD PTR [rbp+0x57]
   140057666:	mov    rdx,r13
   140057669:	mov    BYTE PTR [rsp+0x58],al
   14005766d:	mov    rcx,rdi
   140057670:	mov    al,BYTE PTR [rbp-0x39]
   140057673:	mov    BYTE PTR [rsp+0x50],al
   140057677:	mov    rax,QWORD PTR [rbp+0x7f]
   14005767b:	mov    QWORD PTR [rsp+0x48],rax
   140057680:	mov    eax,DWORD PTR [rbp+0x77]
   140057683:	mov    DWORD PTR [rsp+0x40],eax
   140057687:	lea    rax,[r14-0x10]
   14005768b:	mov    QWORD PTR [rsp+0x38],rax
   140057690:	mov    rax,QWORD PTR [rbp-0x19]
   140057694:	mov    QWORD PTR [rsp+0x30],rax
   140057699:	mov    QWORD PTR [rsp+0x28],r12
   14005769e:	mov    QWORD PTR [rsp+0x20],rbx
   1400576a3:	mov    BYTE PTR [rbp-0x38],0x1
   1400576a7:	call   0x14005722c
   1400576ac:	mov    edx,DWORD PTR [rbp-0x29]
   1400576af:	mov    ecx,DWORD PTR [rbp-0x35]
   1400576b2:	inc    ecx
   1400576b4:	add    r14,0x14
   1400576b8:	mov    DWORD PTR [rbp-0x35],ecx
   1400576bb:	cmp    ecx,edx
   1400576bd:	jb     0x1400575bd
   1400576c3:	xor    r12d,r12d
   1400576c6:	cmp    BYTE PTR [rbp-0x38],r12b
   1400576ca:	jne    0x140057777
   1400576d0:	mov    eax,DWORD PTR [rbx]
   1400576d2:	and    eax,0x1fffffff
   1400576d7:	cmp    eax,0x19930521
   1400576dc:	jb     0x140057777
   1400576e2:	mov    esi,DWORD PTR [rbx+0x20]
   1400576e5:	test   esi,esi
   1400576e7:	je     0x1400576f6
   1400576e9:	movsxd rsi,esi
   1400576ec:	call   0x140058c1c
   1400576f1:	add    rax,rsi
   1400576f4:	jmp    0x1400576f9
   1400576f6:	mov    rax,r12
   1400576f9:	test   rax,rax
   1400576fc:	jne    0x14005770a
   1400576fe:	test   BYTE PTR [rbx+0x24],0x4
   140057702:	je     0x140057777
   140057704:	cmp    BYTE PTR [rbp-0x39],r12b
   140057708:	jne    0x140057777
   14005770a:	test   BYTE PTR [rbx+0x24],0x4
   14005770e:	jne    0x140057814
   140057714:	test   esi,esi
   140057716:	je     0x140057729
   140057718:	call   0x140058c1c
   14005771d:	mov    rdx,rax
   140057720:	movsxd rax,DWORD PTR [rbx+0x20]
   140057724:	add    rdx,rax
   140057727:	jmp    0x14005772c
   140057729:	mov    rdx,r12
   14005772c:	mov    rcx,rdi
   14005772f:	call   0x140057a98
   140057734:	test   al,al
   140057736:	jne    0x140057777
   140057738:	lea    r9,[rbp-0x19]
   14005773c:	mov    r8,rbx
   14005773f:	mov    rdx,r15
   140057742:	mov    rcx,r13
   140057745:	call   0x14005880c
   14005774a:	mov    cl,BYTE PTR [rbp+0x6f]
   14005774d:	mov    r9,rax
   140057750:	mov    r8,QWORD PTR [rbp+0x57]
   140057754:	mov    rdx,rdi
   140057757:	mov    BYTE PTR [rsp+0x40],cl
   14005775b:	mov    rcx,r13
   14005775e:	mov    QWORD PTR [rsp+0x38],r15
   140057763:	mov    QWORD PTR [rsp+0x30],rbx
   140057768:	or     DWORD PTR [rsp+0x28],0xffffffff
   14005776d:	mov    QWORD PTR [rsp+0x20],r12
   140057772:	call   0x140058ca4
   140057777:	call   0x14005a580
   14005777c:	cmp    QWORD PTR [rax+0x38],r12
   140057780:	je     0x1400577c3
   140057782:	jmp    0x14005781a
   140057787:	cmp    DWORD PTR [rbx+0xc],r12d
   14005778b:	jbe    0x140057777
   14005778d:	cmp    BYTE PTR [rbp+0x6f],r12b
   140057791:	jne    0x140057820
   140057797:	mov    rax,QWORD PTR [rbp+0x7f]
   14005779b:	mov    r9,r15
   14005779e:	mov    QWORD PTR [rsp+0x38],rax
   1400577a3:	mov    r8,r14
   1400577a6:	mov    eax,DWORD PTR [rbp+0x77]
   1400577a9:	mov    rdx,r13
   1400577ac:	mov    DWORD PTR [rsp+0x30],eax
   1400577b0:	mov    rcx,rdi
   1400577b3:	mov    DWORD PTR [rsp+0x28],esi
   1400577b7:	mov    QWORD PTR [rsp+0x20],rbx
   1400577bc:	call   0x14005782c
   1400577c1:	jmp    0x140057777
   1400577c3:	lea    r11,[rsp+0xb0]
   1400577cb:	mov    rbx,QWORD PTR [r11+0x30]
   1400577cf:	mov    rsi,QWORD PTR [r11+0x38]
   1400577d3:	mov    rdi,QWORD PTR [r11+0x48]
   1400577d7:	mov    rsp,r11
   1400577da:	pop    r15
   1400577dc:	pop    r14
   1400577de:	pop    r13
   1400577e0:	pop    r12
   1400577e2:	pop    rbp
   1400577e3:	ret    
   1400577e4:	call   0x14005f654
   1400577e9:	int3   
   1400577ea:	call   0x14005f654
   1400577ef:	int3   
   1400577f0:	mov    dl,0x1
   1400577f2:	mov    rcx,rdi
   1400577f5:	call   0x140057100
   1400577fa:	lea    rcx,[rbp-0x9]
   1400577fe:	call   0x1400571c8
   140057803:	lea    rdx,[rip+0x28186]        # 0x14007f990
   14005780a:	lea    rcx,[rbp-0x9]
   14005780e:	call   0x140058734
   140057813:	int3   
   140057814:	call   0x14005f654
   140057819:	int3   
   14005781a:	call   0x14005f654
   14005781f:	int3   
   140057820:	call   0x14005f654
   140057825:	int3   
   140057826:	call   0x14005f654
   14005782b:	int3   
   14005782c:	mov    QWORD PTR [rsp+0x10],rbx
   140057831:	mov    QWORD PTR [rsp+0x18],r8
   140057836:	push   rbp
   140057837:	push   rsi
   140057838:	push   rdi
   140057839:	push   r12
   14005783b:	push   r13
   14005783d:	push   r14
   14005783f:	push   r15
   140057841:	sub    rsp,0x70
   140057845:	cmp    DWORD PTR [rcx],0x80000003
   14005784b:	mov    r15,r9
   14005784e:	mov    rdi,r8
   140057851:	mov    r12,rdx
   140057854:	mov    rsi,rcx
   140057857:	je     0x140057a78
   14005785d:	call   0x14005a580
   140057862:	mov    r13d,DWORD PTR [rsp+0xe0]
   14005786a:	mov    rbp,QWORD PTR [rsp+0xd0]
   140057872:	cmp    QWORD PTR [rax+0x10],0x0
   140057877:	je     0x1400578cf
   140057879:	xor    ecx,ecx
   14005787b:	call   QWORD PTR [rip+0x14b7f]        # 0x14006c400
   140057881:	mov    rbx,rax
   140057884:	call   0x14005a580
   140057889:	cmp    QWORD PTR [rax+0x10],rbx
   14005788d:	je     0x1400578cf
   14005788f:	cmp    DWORD PTR [rsi],0xe0434f4d
   140057895:	je     0x1400578cf
   140057897:	cmp    DWORD PTR [rsi],0xe0434352
   14005789d:	je     0x1400578cf
   14005789f:	mov    rax,QWORD PTR [rsp+0xe8]
   1400578a7:	mov    r9,r15
   1400578aa:	mov    QWORD PTR [rsp+0x30],rax
   1400578af:	mov    r8,rdi
   1400578b2:	mov    DWORD PTR [rsp+0x28],r13d
   1400578b7:	mov    rdx,r12
   1400578ba:	mov    rcx,rsi
   1400578bd:	mov    QWORD PTR [rsp+0x20],rbp
   1400578c2:	call   0x140058b30
   1400578c7:	test   eax,eax
   1400578c9:	jne    0x140057a78
   1400578cf:	cmp    DWORD PTR [rbp+0xc],0x0
   1400578d3:	je     0x140057a90
   1400578d9:	mov    r14d,DWORD PTR [rsp+0xd8]
   1400578e1:	lea    rax,[rsp+0x60]
   1400578e6:	mov    QWORD PTR [rsp+0x30],r15
   1400578eb:	mov    r9d,r14d
   1400578ee:	mov    QWORD PTR [rsp+0x28],rax
   1400578f3:	mov    r8d,r13d
   1400578f6:	lea    rax,[rsp+0xb0]
   1400578fe:	mov    rdx,rbp
   140057901:	mov    rcx,r12
   140057904:	mov    QWORD PTR [rsp+0x20],rax
   140057909:	call   0x1400588d8
   14005790e:	mov    ecx,DWORD PTR [rsp+0xb0]
   140057915:	cmp    ecx,DWORD PTR [rsp+0x60]
   140057919:	jae    0x140057a78
   14005791f:	lea    rdi,[rax+0xc]
   140057923:	cmp    r14d,DWORD PTR [rdi-0xc]
   140057927:	jl     0x140057a61
   14005792d:	cmp    r14d,DWORD PTR [rdi-0x8]
   140057931:	jg     0x140057a61
   140057937:	call   0x140058c1c
   14005793c:	mov    ecx,DWORD PTR [rdi]
   14005793e:	dec    ecx
   140057940:	movsxd rcx,ecx
   140057943:	lea    rdx,[rcx+rcx*4]
   140057947:	lea    rcx,[rax+rdx*4]
   14005794b:	movsxd rax,DWORD PTR [rdi+0x4]
   14005794f:	cmp    DWORD PTR [rax+rcx*1+0x4],0x0
   140057954:	je     0x14005797d
   140057956:	call   0x140058c1c
   14005795b:	mov    ecx,DWORD PTR [rdi]
   14005795d:	dec    ecx
   14005795f:	movsxd rcx,ecx
   140057962:	lea    rdx,[rcx+rcx*4]
   140057966:	lea    rcx,[rax+rdx*4]
   14005796a:	movsxd rax,DWORD PTR [rdi+0x4]
   14005796e:	movsxd rbx,DWORD PTR [rax+rcx*1+0x4]
   140057973:	call   0x140058c1c
   140057978:	add    rax,rbx
   14005797b:	jmp    0x14005797f
   14005797d:	xor    eax,eax
   14005797f:	test   rax,rax
   140057982:	je     0x1400579d6
   140057984:	call   0x140058c1c
   140057989:	mov    ecx,DWORD PTR [rdi]
   14005798b:	dec    ecx
   14005798d:	movsxd rcx,ecx
   140057990:	lea    rdx,[rcx+rcx*4]
   140057994:	lea    rcx,[rax+rdx*4]
   140057998:	movsxd rax,DWORD PTR [rdi+0x4]
   14005799c:	cmp    DWORD PTR [rax+rcx*1+0x4],0x0
   1400579a1:	je     0x1400579ca
   1400579a3:	call   0x140058c1c
   1400579a8:	mov    ecx,DWORD PTR [rdi]
   1400579aa:	dec    ecx
   1400579ac:	movsxd rcx,ecx
   1400579af:	lea    rdx,[rcx+rcx*4]
   1400579b3:	lea    rcx,[rax+rdx*4]
   1400579b7:	movsxd rax,DWORD PTR [rdi+0x4]
   1400579bb:	movsxd rbx,DWORD PTR [rax+rcx*1+0x4]
   1400579c0:	call   0x140058c1c
   1400579c5:	add    rax,rbx
   1400579c8:	jmp    0x1400579cc
   1400579ca:	xor    eax,eax
   1400579cc:	cmp    BYTE PTR [rax+0x10],0x0
   1400579d0:	jne    0x140057a5a
   1400579d6:	call   0x140058c1c
   1400579db:	mov    ecx,DWORD PTR [rdi]
   1400579dd:	dec    ecx
   1400579df:	movsxd rcx,ecx
   1400579e2:	lea    rdx,[rcx+rcx*4]
   1400579e6:	lea    rcx,[rax+rdx*4]
   1400579ea:	movsxd rax,DWORD PTR [rdi+0x4]
   1400579ee:	test   BYTE PTR [rax+rcx*1],0x40
   1400579f2:	jne    0x140057a5a
   1400579f4:	call   0x140058c1c
   1400579f9:	mov    ecx,DWORD PTR [rdi]
   1400579fb:	mov    r9,r15
   1400579fe:	mov    r8,QWORD PTR [rsp+0xc0]
   140057a06:	dec    ecx
   140057a08:	mov    BYTE PTR [rsp+0x58],0x0
   140057a0d:	mov    BYTE PTR [rsp+0x50],0x1
   140057a12:	movsxd rcx,ecx
   140057a15:	lea    rdx,[rcx+rcx*4]
   140057a19:	movsxd rcx,DWORD PTR [rdi+0x4]
   140057a1d:	lea    rax,[rax+rdx*4]
   140057a21:	mov    rdx,r12
   140057a24:	add    rcx,rax
   140057a27:	mov    rax,QWORD PTR [rsp+0xe8]
   140057a2f:	mov    QWORD PTR [rsp+0x48],rax
   140057a34:	lea    rax,[rdi-0xc]
   140057a38:	mov    DWORD PTR [rsp+0x40],r13d
   140057a3d:	mov    QWORD PTR [rsp+0x38],rax
   140057a42:	and    QWORD PTR [rsp+0x30],0x0
   140057a48:	mov    QWORD PTR [rsp+0x28],rcx
   140057a4d:	mov    rcx,rsi
   140057a50:	mov    QWORD PTR [rsp+0x20],rbp
   140057a55:	call   0x14005722c
   140057a5a:	mov    ecx,DWORD PTR [rsp+0xb0]
   140057a61:	inc    ecx
   140057a63:	add    rdi,0x14
   140057a67:	mov    DWORD PTR [rsp+0xb0],ecx
   140057a6e:	cmp    ecx,DWORD PTR [rsp+0x60]
   140057a72:	jb     0x140057923
   140057a78:	mov    rbx,QWORD PTR [rsp+0xb8]
   140057a80:	add    rsp,0x70
   140057a84:	pop    r15
   140057a86:	pop    r14
   140057a88:	pop    r13
   140057a8a:	pop    r12
   140057a8c:	pop    rdi
   140057a8d:	pop    rsi
   140057a8e:	pop    rbp
   140057a8f:	ret    
   140057a90:	call   0x14005f654
   140057a95:	int3   
   140057a96:	int3   
   140057a97:	int3   
   140057a98:	mov    QWORD PTR [rsp+0x8],rbx
   140057a9d:	mov    QWORD PTR [rsp+0x10],rbp
   140057aa2:	mov    QWORD PTR [rsp+0x18],rsi
   140057aa7:	push   rdi
   140057aa8:	push   r12
   140057aaa:	push   r13
   140057aac:	push   r14
   140057aae:	push   r15
   140057ab0:	sub    rsp,0x20
   140057ab4:	mov    rsi,rdx
   140057ab7:	mov    r13,rcx
   140057aba:	test   rdx,rdx
   140057abd:	je     0x140057b64
   140057ac3:	xor    r14b,r14b
   140057ac6:	xor    edi,edi
   140057ac8:	cmp    DWORD PTR [rdx],edi
   140057aca:	jle    0x140057b44
   140057acc:	call   0x140058c30
   140057ad1:	mov    rdx,rax
   140057ad4:	mov    rax,QWORD PTR [r13+0x30]
   140057ad8:	movsxd r15,DWORD PTR [rax+0xc]
   140057adc:	add    r15,0x4
   140057ae0:	add    r15,rdx
   140057ae3:	call   0x140058c30
   140057ae8:	mov    rdx,rax
   140057aeb:	mov    rax,QWORD PTR [r13+0x30]
   140057aef:	movsxd rcx,DWORD PTR [rax+0xc]
   140057af3:	mov    ebp,DWORD PTR [rdx+rcx*1]
   140057af6:	test   ebp,ebp
   140057af8:	jle    0x140057b3e
   140057afa:	movsxd rax,edi
   140057afd:	lea    r12,[rax+rax*4]
   140057b01:	call   0x140058c30
   140057b06:	mov    rbx,rax
   140057b09:	movsxd rax,DWORD PTR [r15]
   140057b0c:	add    rbx,rax
   140057b0f:	call   0x140058c1c
   140057b14:	movsxd rcx,DWORD PTR [rsi+0x4]
   140057b18:	mov    rdx,rbx
   140057b1b:	mov    r8,QWORD PTR [r13+0x30]
   140057b1f:	lea    rax,[rax+r12*4]
   140057b23:	add    rcx,rax
   140057b26:	call   0x140058480
   140057b2b:	test   eax,eax
   140057b2d:	jne    0x140057b3b
   140057b2f:	dec    ebp
   140057b31:	add    r15,0x4
   140057b35:	test   ebp,ebp
   140057b37:	jg     0x140057b01
   140057b39:	jmp    0x140057b3e
   140057b3b:	mov    r14b,0x1
   140057b3e:	inc    edi
   140057b40:	cmp    edi,DWORD PTR [rsi]
   140057b42:	jl     0x140057acc
   140057b44:	mov    rbx,QWORD PTR [rsp+0x50]
   140057b49:	mov    al,r14b
   140057b4c:	mov    rbp,QWORD PTR [rsp+0x58]
   140057b51:	mov    rsi,QWORD PTR [rsp+0x60]
   140057b56:	add    rsp,0x20
   140057b5a:	pop    r15
   140057b5c:	pop    r14
   140057b5e:	pop    r13
   140057b60:	pop    r12
   140057b62:	pop    rdi
   140057b63:	ret    
   140057b64:	call   0x14005f654
   140057b69:	int3   
   140057b6a:	int3   
   140057b6b:	int3   
   140057b6c:	rex.W jmp rdx
   140057b6f:	int3   
   140057b70:	mov    rax,rdx
   140057b73:	mov    rdx,r8
   140057b76:	rex.W jmp rax
   140057b79:	int3   
   140057b7a:	int3   
   140057b7b:	int3   
   140057b7c:	mov    rax,r8
   140057b7f:	mov    r10,rdx
   140057b82:	mov    rdx,rax
   140057b85:	mov    r8d,r9d
   140057b88:	rex.WB jmp r10
   140057b8b:	int3   
   140057b8c:	movsxd rax,DWORD PTR [rdx]
   140057b8f:	add    rax,rcx
   140057b92:	cmp    DWORD PTR [rdx+0x4],0x0
   140057b96:	jl     0x140057bae
   140057b98:	movsxd r9,DWORD PTR [rdx+0x4]
   140057b9c:	movsxd rdx,DWORD PTR [rdx+0x8]
   140057ba0:	mov    rcx,QWORD PTR [r9+rcx*1]
   140057ba4:	movsxd r8,DWORD PTR [rdx+rcx*1]
   140057ba8:	add    r8,r9
   140057bab:	add    rax,r8
   140057bae:	ret    
   140057baf:	int3   
   140057bb0:	mov    QWORD PTR [rsp+0x8],rbx
   140057bb5:	mov    QWORD PTR [rsp+0x10],rsi
   140057bba:	mov    QWORD PTR [rsp+0x18],rdi
   140057bbf:	push   r14
   140057bc1:	sub    rsp,0x20
   140057bc5:	mov    rdi,r9
   140057bc8:	mov    r14,rcx
   140057bcb:	test   DWORD PTR [r8],0x80000000
   140057bd2:	je     0x140057bd9
   140057bd4:	mov    rsi,rdx
   140057bd7:	jmp    0x140057be0
   140057bd9:	movsxd rsi,DWORD PTR [r8+0x8]
   140057bdd:	add    rsi,QWORD PTR [rdx]
   140057be0:	call   0x140057c78
   140057be5:	sub    eax,0x1
   140057be8:	je     0x140057c28
   140057bea:	cmp    eax,0x1
   140057bed:	jne    0x140057c59
   140057bef:	xor    ebx,ebx
   140057bf1:	cmp    DWORD PTR [rdi+0x18],ebx
   140057bf4:	je     0x140057c05
   140057bf6:	call   0x140058c30
   140057bfb:	mov    rbx,rax
   140057bfe:	movsxd rax,DWORD PTR [rdi+0x18]
   140057c02:	add    rbx,rax
   140057c05:	lea    rdx,[rdi+0x8]
   140057c09:	mov    rcx,QWORD PTR [r14+0x28]
   140057c0d:	call   0x140057b8c
   140057c12:	mov    r8,rax
   140057c15:	mov    r9d,0x1
   140057c1b:	mov    rdx,rbx
   140057c1e:	mov    rcx,rsi
   140057c21:	call   0x140057b7c
   140057c26:	jmp    0x140057c59
   140057c28:	xor    ebx,ebx
   140057c2a:	cmp    DWORD PTR [rdi+0x18],ebx
   140057c2d:	je     0x140057c3e
   140057c2f:	call   0x140058c30
   140057c34:	mov    rbx,rax
   140057c37:	movsxd rax,DWORD PTR [rdi+0x18]
   140057c3b:	add    rbx,rax
   140057c3e:	lea    rdx,[rdi+0x8]
   140057c42:	mov    rcx,QWORD PTR [r14+0x28]
   140057c46:	call   0x140057b8c
   140057c4b:	mov    r8,rax
   140057c4e:	mov    rdx,rbx
   140057c51:	mov    rcx,rsi
   140057c54:	call   0x140057b70
   140057c59:	jmp    0x140057c61
   140057c5b:	call   0x14005f654
   140057c60:	nop
   140057c61:	mov    rbx,QWORD PTR [rsp+0x30]
   140057c66:	mov    rsi,QWORD PTR [rsp+0x38]
   140057c6b:	mov    rdi,QWORD PTR [rsp+0x40]
   140057c70:	add    rsp,0x20
   140057c74:	pop    r14
   140057c76:	ret    
   140057c77:	int3   
   140057c78:	mov    QWORD PTR [rsp+0x8],rbx
   140057c7d:	mov    QWORD PTR [rsp+0x10],rsi
   140057c82:	mov    QWORD PTR [rsp+0x18],rdi
   140057c87:	push   r13
   140057c89:	push   r14
   140057c8b:	push   r15
   140057c8d:	sub    rsp,0x30
   140057c91:	mov    r14,r9
   140057c94:	mov    rbx,r8
   140057c97:	mov    rsi,rdx
   140057c9a:	mov    r13,rcx
   140057c9d:	xor    edi,edi
   140057c9f:	mov    r15d,DWORD PTR [r8+0x4]
   140057ca3:	test   r15d,r15d
   140057ca6:	je     0x140057cb6
   140057ca8:	movsxd r15,r15d
   140057cab:	call   0x140058c1c
   140057cb0:	lea    rdx,[r15+rax*1]
   140057cb4:	jmp    0x140057cb9
   140057cb6:	mov    rdx,rdi
   140057cb9:	test   rdx,rdx
   140057cbc:	je     0x140057e40
   140057cc2:	test   r15d,r15d
   140057cc5:	je     0x140057cd8
   140057cc7:	call   0x140058c1c
   140057ccc:	mov    rcx,rax
   140057ccf:	movsxd rax,DWORD PTR [rbx+0x4]
   140057cd3:	add    rcx,rax
   140057cd6:	jmp    0x140057cdb
   140057cd8:	mov    rcx,rdi
   140057cdb:	cmp    BYTE PTR [rcx+0x10],dil
   140057cdf:	je     0x140057e40
   140057ce5:	cmp    DWORD PTR [rbx+0x8],edi
   140057ce8:	jne    0x140057cf6
   140057cea:	test   DWORD PTR [rbx],0x80000000
   140057cf0:	je     0x140057e40
   140057cf6:	mov    ecx,DWORD PTR [rbx]
   140057cf8:	test   ecx,ecx
   140057cfa:	js     0x140057d06
   140057cfc:	movsxd rax,DWORD PTR [rbx+0x8]
   140057d00:	add    rax,QWORD PTR [rsi]
   140057d03:	mov    rsi,rax
   140057d06:	test   cl,cl
   140057d08:	jns    0x140057d3d
   140057d0a:	test   BYTE PTR [r14],0x10
   140057d0e:	je     0x140057d3d
   140057d10:	mov    rbx,QWORD PTR [rip+0x476a1]        # 0x14009f3b8
   140057d17:	test   rbx,rbx
   140057d1a:	je     0x140057d3d
   140057d1c:	mov    rcx,rbx
   140057d1f:	call   0x140056aac
   140057d24:	call   rbx
   140057d26:	test   rax,rax
   140057d29:	je     0x140057d38
   140057d2b:	test   rsi,rsi
   140057d2e:	je     0x140057d38
   140057d30:	mov    QWORD PTR [rsi],rax
   140057d33:	mov    rcx,rax
   140057d36:	jmp    0x140057d91
   140057d38:	call   0x14005f654
   140057d3d:	test   cl,0x8
   140057d40:	je     0x140057d5a
   140057d42:	mov    rcx,QWORD PTR [r13+0x28]
   140057d46:	test   rcx,rcx
   140057d49:	je     0x140057d55
   140057d4b:	test   rsi,rsi
   140057d4e:	je     0x140057d55
   140057d50:	mov    QWORD PTR [rsi],rcx
   140057d53:	jmp    0x140057d91
   140057d55:	call   0x14005f654
   140057d5a:	test   BYTE PTR [r14],0x1
   140057d5e:	je     0x140057da7
   140057d60:	mov    rdx,QWORD PTR [r13+0x28]
   140057d64:	test   rdx,rdx
   140057d67:	je     0x140057da2
   140057d69:	test   rsi,rsi
   140057d6c:	je     0x140057da2
   140057d6e:	movsxd r8,DWORD PTR [r14+0x14]
   140057d72:	mov    rcx,rsi
   140057d75:	call   0x140059180
   140057d7a:	cmp    DWORD PTR [r14+0x14],0x8
   140057d7f:	jne    0x140057e30
   140057d85:	cmp    QWORD PTR [rsi],rdi
   140057d88:	je     0x140057e30
   140057d8e:	mov    rcx,QWORD PTR [rsi]
   140057d91:	lea    rdx,[r14+0x8]
   140057d95:	call   0x140057b8c
   140057d9a:	mov    QWORD PTR [rsi],rax
   140057d9d:	jmp    0x140057e30
   140057da2:	call   0x14005f654
   140057da7:	mov    ebx,DWORD PTR [r14+0x18]
   140057dab:	test   ebx,ebx
   140057dad:	je     0x140057dbd
   140057daf:	movsxd rbx,ebx
   140057db2:	call   0x140058c30
   140057db7:	lea    rcx,[rbx+rax*1]
   140057dbb:	jmp    0x140057dc0
   140057dbd:	mov    rcx,rdi
   140057dc0:	test   rcx,rcx
   140057dc3:	jne    0x140057df5
   140057dc5:	mov    rcx,QWORD PTR [r13+0x28]
   140057dc9:	test   rcx,rcx
   140057dcc:	je     0x140057df0
   140057dce:	test   rsi,rsi
   140057dd1:	je     0x140057df0
   140057dd3:	movsxd rbx,DWORD PTR [r14+0x14]
   140057dd7:	lea    rdx,[r14+0x8]
   140057ddb:	call   0x140057b8c
   140057de0:	mov    rdx,rax
   140057de3:	mov    r8,rbx
   140057de6:	mov    rcx,rsi
   140057de9:	call   0x140059180
   140057dee:	jmp    0x140057e30
   140057df0:	call   0x14005f654
   140057df5:	cmp    QWORD PTR [r13+0x28],rdi
   140057df9:	je     0x140057e34
   140057dfb:	test   rsi,rsi
   140057dfe:	je     0x140057e34
   140057e00:	test   ebx,ebx
   140057e02:	je     0x140057e15
   140057e04:	call   0x140058c30
   140057e09:	mov    rcx,rax
   140057e0c:	movsxd rax,DWORD PTR [r14+0x18]
   140057e10:	add    rcx,rax
   140057e13:	jmp    0x140057e18
   140057e15:	mov    rcx,rdi
   140057e18:	test   rcx,rcx
   140057e1b:	je     0x140057e34
   140057e1d:	mov    al,BYTE PTR [r14]
   140057e20:	and    al,0x4
   140057e22:	neg    al
   140057e24:	sbb    ecx,ecx
   140057e26:	neg    ecx
   140057e28:	inc    ecx
   140057e2a:	mov    edi,ecx
   140057e2c:	mov    DWORD PTR [rsp+0x20],ecx
   140057e30:	mov    eax,edi
   140057e32:	jmp    0x140057e42
   140057e34:	call   0x14005f654
   140057e39:	nop
   140057e3a:	call   0x14005f654
   140057e3f:	nop
   140057e40:	xor    eax,eax
   140057e42:	mov    rbx,QWORD PTR [rsp+0x50]
   140057e47:	mov    rsi,QWORD PTR [rsp+0x58]
   140057e4c:	mov    rdi,QWORD PTR [rsp+0x60]
   140057e51:	add    rsp,0x30
   140057e55:	pop    r15
   140057e57:	pop    r14
   140057e59:	pop    r13
   140057e5b:	ret    
   140057e5c:	rex push rbx
   140057e5e:	push   rsi
   140057e5f:	push   rdi
   140057e60:	push   r12
   140057e62:	push   r13
   140057e64:	push   r14
   140057e66:	push   r15
   140057e68:	sub    rsp,0x70
   140057e6c:	mov    rdi,rcx
   140057e6f:	xor    r15d,r15d
   140057e72:	mov    DWORD PTR [rsp+0x20],r15d
   140057e77:	and    DWORD PTR [rsp+0xb0],r15d
   140057e7f:	and    QWORD PTR [rsp+0x28],r15
   140057e84:	and    QWORD PTR [rsp+0xc8],r15
   140057e8c:	call   0x14005a580
   140057e91:	mov    r13,QWORD PTR [rax+0x28]
   140057e95:	mov    QWORD PTR [rsp+0x40],r13
   140057e9a:	call   0x14005a580
   140057e9f:	mov    rax,QWORD PTR [rax+0x20]
   140057ea3:	mov    QWORD PTR [rsp+0xc0],rax
   140057eab:	mov    rsi,QWORD PTR [rdi+0x50]
   140057eaf:	mov    QWORD PTR [rsp+0xb8],rsi
   140057eb7:	mov    rax,QWORD PTR [rdi+0x48]
   140057ebb:	mov    QWORD PTR [rsp+0x30],rax
   140057ec0:	mov    rbx,QWORD PTR [rdi+0x40]
   140057ec4:	mov    rax,QWORD PTR [rdi+0x30]
   140057ec8:	mov    QWORD PTR [rsp+0x48],rax
   140057ecd:	mov    r14,QWORD PTR [rdi+0x28]
   140057ed1:	mov    QWORD PTR [rsp+0x50],r14
   140057ed6:	mov    rcx,rbx
   140057ed9:	call   0x1400570f4
   140057ede:	call   0x14005a580
   140057ee3:	mov    QWORD PTR [rax+0x20],rsi
   140057ee7:	call   0x14005a580
   140057eec:	mov    QWORD PTR [rax+0x28],rbx
   140057ef0:	call   0x14005a580
   140057ef5:	mov    rdx,QWORD PTR [rax+0x20]
   140057ef9:	mov    rdx,QWORD PTR [rdx+0x28]
   140057efd:	lea    rcx,[rsp+0x60]
   140057f02:	call   0x140058b88
   140057f07:	mov    r12,rax
   140057f0a:	mov    QWORD PTR [rsp+0x38],rax
   140057f0f:	cmp    QWORD PTR [rdi+0x58],r15
   140057f13:	je     0x140057f31
   140057f15:	mov    DWORD PTR [rsp+0xb0],0x1
   140057f20:	call   0x14005a580
   140057f25:	mov    rcx,QWORD PTR [rax+0x70]
   140057f29:	mov    QWORD PTR [rsp+0xc8],rcx
   140057f31:	mov    r8d,0x100
   140057f37:	mov    rdx,r14
   140057f3a:	mov    rcx,QWORD PTR [rsp+0x48]
   140057f3f:	call   0x14005a7e0
   140057f44:	mov    rbx,rax
   140057f47:	mov    QWORD PTR [rsp+0x28],rax
   140057f4c:	mov    rdi,QWORD PTR [rsp+0xc0]
   140057f54:	jmp    0x140057fce
   140057f56:	mov    DWORD PTR [rsp+0x20],0x1
   140057f5e:	call   0x14005a580
   140057f63:	and    DWORD PTR [rax+0x40],0x0
   140057f67:	mov    rsi,QWORD PTR [rsp+0xb8]
   140057f6f:	cmp    DWORD PTR [rsp+0xb0],0x0
   140057f77:	je     0x140057f9a
   140057f79:	mov    dl,0x1
   140057f7b:	mov    rcx,rsi
   140057f7e:	call   0x140057100
   140057f83:	mov    rax,QWORD PTR [rsp+0xc8]
   140057f8b:	lea    r9,[rax+0x20]
   140057f8f:	mov    r8d,DWORD PTR [rax+0x18]
   140057f93:	mov    edx,DWORD PTR [rax+0x4]
   140057f96:	mov    ecx,DWORD PTR [rax]
   140057f98:	jmp    0x140057fa7
   140057f9a:	lea    r9,[rsi+0x20]
   140057f9e:	mov    r8d,DWORD PTR [rsi+0x18]
   140057fa2:	mov    edx,DWORD PTR [rsi+0x4]
   140057fa5:	mov    ecx,DWORD PTR [rsi]
   140057fa7:	call   QWORD PTR [rip+0x1445b]        # 0x14006c408
   140057fad:	mov    r15d,DWORD PTR [rsp+0x20]
   140057fb2:	mov    rbx,QWORD PTR [rsp+0x28]
   140057fb7:	mov    r13,QWORD PTR [rsp+0x40]
   140057fbc:	mov    rdi,QWORD PTR [rsp+0xc0]
   140057fc4:	mov    r14,QWORD PTR [rsp+0x50]
   140057fc9:	mov    r12,QWORD PTR [rsp+0x38]
   140057fce:	mov    rcx,r12
   140057fd1:	call   0x140058bc4
   140057fd6:	test   r15d,r15d
   140057fd9:	jne    0x14005800d
   140057fdb:	cmp    DWORD PTR [rsi],0xe06d7363
   140057fe1:	jne    0x14005800d
   140057fe3:	cmp    DWORD PTR [rsi+0x18],0x4
   140057fe7:	jne    0x14005800d
   140057fe9:	mov    eax,DWORD PTR [rsi+0x20]
   140057fec:	sub    eax,0x19930520
   140057ff1:	cmp    eax,0x2
   140057ff4:	ja     0x14005800d
   140057ff6:	mov    rcx,QWORD PTR [rsi+0x28]
   140057ffa:	call   0x140058c44
   140057fff:	test   eax,eax
   140058001:	je     0x14005800d
   140058003:	mov    dl,0x1
   140058005:	mov    rcx,rsi
   140058008:	call   0x140057100
   14005800d:	call   0x14005a580
   140058012:	mov    QWORD PTR [rax+0x20],rdi
   140058016:	call   0x14005a580
   14005801b:	mov    QWORD PTR [rax+0x28],r13
   14005801f:	mov    rax,QWORD PTR [rsp+0x30]
   140058024:	movsxd rcx,DWORD PTR [rax+0x1c]
   140058028:	mov    rax,QWORD PTR [r14]
   14005802b:	mov    QWORD PTR [rcx+rax*1],0xfffffffffffffffe
   140058033:	mov    rax,rbx
   140058036:	add    rsp,0x70
   14005803a:	pop    r15
   14005803c:	pop    r14
   14005803e:	pop    r13
   140058040:	pop    r12
   140058042:	pop    rdi
   140058043:	pop    rsi
   140058044:	pop    rbx
   140058045:	ret    
   140058046:	int3   
   140058047:	int3   
   140058048:	sub    rsp,0x28
   14005804c:	mov    rax,QWORD PTR [rcx]
   14005804f:	cmp    DWORD PTR [rax],0xe0434352
   140058055:	je     0x140058069
   140058057:	cmp    DWORD PTR [rax],0xe0434f4d
   14005805d:	je     0x140058069
   14005805f:	cmp    DWORD PTR [rax],0xe06d7363
   140058065:	jne    0x14005807c
   140058067:	jmp    0x140058083
   140058069:	call   0x14005a580
   14005806e:	cmp    DWORD PTR [rax+0x30],0x0
   140058072:	jle    0x14005807c
   140058074:	call   0x14005a580
   140058079:	dec    DWORD PTR [rax+0x30]
   14005807c:	xor    eax,eax
   14005807e:	add    rsp,0x28
   140058082:	ret    
   140058083:	call   0x14005a580
   140058088:	and    DWORD PTR [rax+0x30],0x0
   14005808c:	call   0x14005f654
   140058091:	int3   
   140058092:	int3   
   140058093:	int3   
   140058094:	mov    rax,rsp
   140058097:	mov    DWORD PTR [rax+0x20],r9d
   14005809b:	mov    QWORD PTR [rax+0x18],r8
   14005809f:	mov    QWORD PTR [rax+0x10],rdx
   1400580a3:	mov    QWORD PTR [rax+0x8],rcx
   1400580a7:	push   rbx
   1400580a8:	push   rsi
   1400580a9:	push   rdi
   1400580aa:	push   r12
   1400580ac:	push   r13
   1400580ae:	push   r14
   1400580b0:	push   r15
   1400580b2:	sub    rsp,0x30
   1400580b6:	mov    r12d,r9d
   1400580b9:	mov    rsi,r8
   1400580bc:	mov    r13,rdx
   1400580bf:	mov    r15,rcx
   1400580c2:	call   0x140058c1c
   1400580c7:	mov    QWORD PTR [rsp+0x28],rax
   1400580cc:	mov    r8,rsi
   1400580cf:	mov    rdx,r13
   1400580d2:	mov    rcx,r15
   1400580d5:	call   0x14005a6b8
   1400580da:	mov    edi,eax
   1400580dc:	call   0x14005a580
   1400580e1:	inc    DWORD PTR [rax+0x30]
   1400580e4:	cmp    edi,0xffffffff
   1400580e7:	je     0x1400581e3
   1400580ed:	cmp    edi,r12d
   1400580f0:	jle    0x1400581e3
   1400580f6:	cmp    edi,0xffffffff
   1400580f9:	jle    0x1400581dd
   1400580ff:	cmp    edi,DWORD PTR [rsi+0x4]
   140058102:	jge    0x1400581dd
   140058108:	movsxd r14,edi
   14005810b:	call   0x140058c1c
   140058110:	movsxd rcx,DWORD PTR [rsi+0x8]
   140058114:	lea    rax,[rax+r14*8]
   140058118:	mov    edi,DWORD PTR [rcx+rax*1]
   14005811b:	mov    DWORD PTR [rsp+0x20],edi
   14005811f:	call   0x140058c1c
   140058124:	movsxd rcx,DWORD PTR [rsi+0x8]
   140058128:	lea    rax,[rax+r14*8]
   14005812c:	cmp    DWORD PTR [rcx+rax*1+0x4],0x0
   140058131:	je     0x14005814f
   140058133:	call   0x140058c1c
   140058138:	movsxd rcx,DWORD PTR [rsi+0x8]
   14005813c:	lea    rax,[rax+r14*8]
   140058140:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   140058145:	call   0x140058c1c
   14005814a:	add    rax,rbx
   14005814d:	jmp    0x140058151
   14005814f:	xor    eax,eax
   140058151:	test   rax,rax
   140058154:	je     0x1400581b4
   140058156:	mov    r9d,edi
   140058159:	mov    r8,rsi
   14005815c:	mov    rdx,r13
   14005815f:	mov    rcx,r15
   140058162:	call   0x14005a70c
   140058167:	call   0x140058c1c
   14005816c:	movsxd rcx,DWORD PTR [rsi+0x8]
   140058170:	lea    rax,[rax+r14*8]
   140058174:	cmp    DWORD PTR [rcx+rax*1+0x4],0x0
   140058179:	je     0x140058197
   14005817b:	call   0x140058c1c
   140058180:	movsxd rcx,DWORD PTR [rsi+0x8]
   140058184:	lea    rax,[rax+r14*8]
   140058188:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   14005818d:	call   0x140058c1c
   140058192:	add    rax,rbx
   140058195:	jmp    0x140058199
   140058197:	xor    eax,eax
   140058199:	mov    r8d,0x103
   14005819f:	mov    rdx,r15
   1400581a2:	mov    rcx,rax
   1400581a5:	call   0x14005a7e0
   1400581aa:	mov    rcx,QWORD PTR [rsp+0x28]
   1400581af:	call   0x140058c74
   1400581b4:	jmp    0x1400581d4
   1400581b6:	mov    r12d,DWORD PTR [rsp+0x88]
   1400581be:	mov    rsi,QWORD PTR [rsp+0x80]
   1400581c6:	mov    r13,QWORD PTR [rsp+0x78]
   1400581cb:	mov    r15,QWORD PTR [rsp+0x70]
   1400581d0:	mov    edi,DWORD PTR [rsp+0x20]
   1400581d4:	mov    DWORD PTR [rsp+0x24],edi
   1400581d8:	jmp    0x1400580e4
   1400581dd:	call   0x14005f654
   1400581e2:	nop
   1400581e3:	call   0x14005a580
   1400581e8:	cmp    DWORD PTR [rax+0x30],0x0
   1400581ec:	jle    0x1400581f6
   1400581ee:	call   0x14005a580
   1400581f3:	dec    DWORD PTR [rax+0x30]
   1400581f6:	cmp    edi,0xffffffff
   1400581f9:	je     0x140058206
   1400581fb:	cmp    edi,r12d
   1400581fe:	jle    0x140058206
   140058200:	call   0x14005f654
   140058205:	int3   
   140058206:	mov    r9d,edi
   140058209:	mov    r8,rsi
   14005820c:	mov    rdx,r13
   14005820f:	mov    rcx,r15
   140058212:	call   0x14005a70c
   140058217:	add    rsp,0x30
   14005821b:	pop    r15
   14005821d:	pop    r14
   14005821f:	pop    r13
   140058221:	pop    r12
   140058223:	pop    rdi
   140058224:	pop    rsi
   140058225:	pop    rbx
   140058226:	ret    
   140058227:	int3   
   140058228:	mov    QWORD PTR [rsp+0x8],rbx
   14005822d:	mov    QWORD PTR [rsp+0x10],rbp
   140058232:	mov    QWORD PTR [rsp+0x18],rsi
   140058237:	push   rdi
   140058238:	push   r12
   14005823a:	push   r13
   14005823c:	push   r14
   14005823e:	push   r15
   140058240:	sub    rsp,0x40
   140058244:	mov    rsi,rcx
   140058247:	mov    r14,r9
   14005824a:	mov    rcx,r8
   14005824d:	mov    r13,r8
   140058250:	mov    r15,rdx
   140058253:	call   0x1400570f4
   140058258:	call   0x14005a580
   14005825d:	mov    rdi,QWORD PTR [rsp+0x90]
   140058265:	xor    ebx,ebx
   140058267:	mov    ebp,0x1fffffff
   14005826c:	mov    edx,0x19930522
   140058271:	mov    r8d,0x80000029
   140058277:	mov    r9d,0x80000026
   14005827d:	mov    r12d,0x1
   140058283:	cmp    DWORD PTR [rax+0x40],ebx
   140058286:	jne    0x1400582bc
   140058288:	cmp    DWORD PTR [rsi],0xe06d7363
   14005828e:	je     0x1400582bc
   140058290:	cmp    DWORD PTR [rsi],r8d
   140058293:	jne    0x1400582a5
   140058295:	cmp    DWORD PTR [rsi+0x18],0xf
   140058299:	jne    0x1400582a5
   14005829b:	cmp    QWORD PTR [rsi+0x60],0x19930520
   1400582a3:	je     0x1400582bc
   1400582a5:	cmp    DWORD PTR [rsi],r9d
   1400582a8:	je     0x1400582bc
   1400582aa:	mov    ecx,DWORD PTR [rdi]
   1400582ac:	and    ecx,ebp
   1400582ae:	cmp    ecx,edx
   1400582b0:	jb     0x1400582bc
   1400582b2:	test   BYTE PTR [rdi+0x24],r12b
   1400582b6:	jne    0x140058451
   1400582bc:	mov    eax,DWORD PTR [rsi+0x4]
   1400582bf:	test   al,0x66
   1400582c1:	je     0x14005835b
   1400582c7:	cmp    DWORD PTR [rdi+0x4],ebx
   1400582ca:	je     0x140058451
   1400582d0:	cmp    DWORD PTR [rsp+0x98],ebx
   1400582d7:	jne    0x140058451
   1400582dd:	and    eax,0x20
   1400582e0:	je     0x140058321
   1400582e2:	cmp    DWORD PTR [rsi],r9d
   1400582e5:	jne    0x140058321
   1400582e7:	mov    r8,QWORD PTR [r13+0xf8]
   1400582ee:	mov    rdx,r14
   1400582f1:	mov    rcx,rdi
   1400582f4:	call   0x14005a75c
   1400582f9:	cmp    eax,0xffffffff
   1400582fc:	jl     0x140058472
   140058302:	cmp    eax,DWORD PTR [rdi+0x4]
   140058305:	jge    0x140058472
   14005830b:	mov    r9d,eax
   14005830e:	mov    rcx,r15
   140058311:	mov    rdx,r14
   140058314:	mov    r8,rdi
   140058317:	call   0x140058094
   14005831c:	jmp    0x140058451
   140058321:	test   eax,eax
   140058323:	je     0x140058348
   140058325:	cmp    DWORD PTR [rsi],r8d
   140058328:	jne    0x140058348
   14005832a:	mov    r9d,DWORD PTR [rsi+0x38]
   14005832e:	cmp    r9d,0xffffffff
   140058332:	jl     0x140058478
   140058338:	cmp    r9d,DWORD PTR [rdi+0x4]
   14005833c:	jge    0x140058478
   140058342:	mov    rcx,QWORD PTR [rsi+0x28]
   140058346:	jmp    0x140058311
   140058348:	mov    r8,rdi
   14005834b:	mov    rdx,r14
   14005834e:	mov    rcx,r15
   140058351:	call   0x140058a04
   140058356:	jmp    0x140058451
   14005835b:	cmp    DWORD PTR [rdi+0xc],ebx
   14005835e:	jne    0x1400583a1
   140058360:	mov    eax,DWORD PTR [rdi]
   140058362:	and    eax,ebp
   140058364:	cmp    eax,0x19930521
   140058369:	jb     0x14005838b
   14005836b:	cmp    DWORD PTR [rdi+0x20],ebx
   14005836e:	je     0x140058383
   140058370:	call   0x140058c1c
   140058375:	movsxd rcx,DWORD PTR [rdi+0x20]
   140058379:	mov    edx,0x19930522
   14005837e:	add    rax,rcx
   140058381:	jmp    0x140058386
   140058383:	mov    rax,rbx
   140058386:	test   rax,rax
   140058389:	jne    0x1400583a1
   14005838b:	mov    eax,DWORD PTR [rdi]
   14005838d:	and    eax,ebp
   14005838f:	cmp    eax,edx
   140058391:	jb     0x140058451
   140058397:	test   BYTE PTR [rdi+0x24],0x4
   14005839b:	je     0x140058451
   1400583a1:	cmp    DWORD PTR [rsi],0xe06d7363
   1400583a7:	jne    0x140058418
   1400583a9:	cmp    DWORD PTR [rsi+0x18],0x3
   1400583ad:	jb     0x140058418
   1400583af:	cmp    DWORD PTR [rsi+0x20],edx
   1400583b2:	jbe    0x140058418
   1400583b4:	mov    rax,QWORD PTR [rsi+0x30]
   1400583b8:	cmp    DWORD PTR [rax+0x8],ebx
   1400583bb:	je     0x1400583cf
   1400583bd:	call   0x140058c30
   1400583c2:	mov    rcx,QWORD PTR [rsi+0x30]
   1400583c6:	movsxd rbp,DWORD PTR [rcx+0x8]
   1400583ca:	add    rbp,rax
   1400583cd:	jmp    0x1400583d2
   1400583cf:	mov    rbp,rbx
   1400583d2:	test   rbp,rbp
   1400583d5:	je     0x140058418
   1400583d7:	movzx  ebx,BYTE PTR [rsp+0xa8]
   1400583df:	mov    rcx,rbp
   1400583e2:	call   0x140056aac
   1400583e7:	mov    rax,QWORD PTR [rsp+0xa0]
   1400583ef:	mov    r9,r14
   1400583f2:	mov    DWORD PTR [rsp+0x38],ebx
   1400583f6:	mov    r8,r13
   1400583f9:	mov    QWORD PTR [rsp+0x30],rax
   1400583fe:	mov    rdx,r15
   140058401:	mov    eax,DWORD PTR [rsp+0x98]
   140058408:	mov    rcx,rsi
   14005840b:	mov    DWORD PTR [rsp+0x28],eax
   14005840f:	mov    QWORD PTR [rsp+0x20],rdi
   140058414:	call   rbp
   140058416:	jmp    0x140058454
   140058418:	mov    rax,QWORD PTR [rsp+0xa0]
   140058420:	mov    r9,r14
   140058423:	mov    QWORD PTR [rsp+0x38],rax
   140058428:	mov    r8,r13
   14005842b:	mov    eax,DWORD PTR [rsp+0x98]
   140058432:	mov    rdx,r15
   140058435:	mov    DWORD PTR [rsp+0x30],eax
   140058439:	mov    rcx,rsi
   14005843c:	mov    al,BYTE PTR [rsp+0xa8]
   140058443:	mov    BYTE PTR [rsp+0x28],al
   140058447:	mov    QWORD PTR [rsp+0x20],rdi
   14005844c:	call   0x140057378
   140058451:	mov    eax,r12d
   140058454:	lea    r11,[rsp+0x40]
   140058459:	mov    rbx,QWORD PTR [r11+0x30]
   14005845d:	mov    rbp,QWORD PTR [r11+0x38]
   140058461:	mov    rsi,QWORD PTR [r11+0x40]
   140058465:	mov    rsp,r11
   140058468:	pop    r15
   14005846a:	pop    r14
   14005846c:	pop    r13
   14005846e:	pop    r12
   140058470:	pop    rdi
   140058471:	ret    
   140058472:	call   0x14005f654
   140058477:	int3   
   140058478:	call   0x14005f654
   14005847d:	int3   
   14005847e:	int3   
   14005847f:	int3   
   140058480:	mov    rax,rsp
   140058483:	mov    QWORD PTR [rax+0x8],rbx
   140058487:	mov    QWORD PTR [rax+0x10],rbp
   14005848b:	mov    QWORD PTR [rax+0x18],rsi
   14005848f:	mov    QWORD PTR [rax+0x20],rdi
   140058493:	push   r14
   140058495:	sub    rsp,0x20
   140058499:	mov    esi,DWORD PTR [rcx+0x4]
   14005849c:	xor    ebx,ebx
   14005849e:	mov    r14,r8
   1400584a1:	mov    rbp,rdx
   1400584a4:	mov    rdi,rcx
   1400584a7:	test   esi,esi
   1400584a9:	je     0x1400584b9
   1400584ab:	movsxd rsi,esi
   1400584ae:	call   0x140058c1c
   1400584b3:	lea    rcx,[rsi+rax*1]
   1400584b7:	jmp    0x1400584bc
   1400584b9:	mov    rcx,rbx
   1400584bc:	test   rcx,rcx
   1400584bf:	je     0x14005859e
   1400584c5:	test   esi,esi
   1400584c7:	je     0x1400584d8
   1400584c9:	movsxd rsi,DWORD PTR [rdi+0x4]
   1400584cd:	call   0x140058c1c
   1400584d2:	lea    rcx,[rsi+rax*1]
   1400584d6:	jmp    0x1400584db
   1400584d8:	mov    rcx,rbx
   1400584db:	cmp    BYTE PTR [rcx+0x10],bl
   1400584de:	je     0x14005859e
   1400584e4:	test   BYTE PTR [rdi],0x80
   1400584e7:	je     0x1400584f3
   1400584e9:	test   BYTE PTR [rbp+0x0],0x10
   1400584ed:	jne    0x14005859e
   1400584f3:	test   esi,esi
   1400584f5:	je     0x140058508
   1400584f7:	call   0x140058c1c
   1400584fc:	mov    rsi,rax
   1400584ff:	movsxd rax,DWORD PTR [rdi+0x4]
   140058503:	add    rsi,rax
   140058506:	jmp    0x14005850b
   140058508:	mov    rsi,rbx
   14005850b:	call   0x140058c30
   140058510:	mov    rcx,rax
   140058513:	movsxd rax,DWORD PTR [rbp+0x4]
   140058517:	add    rcx,rax
   14005851a:	cmp    rsi,rcx
   14005851d:	je     0x14005856a
   14005851f:	cmp    DWORD PTR [rdi+0x4],ebx
   140058522:	je     0x140058535
   140058524:	call   0x140058c1c
   140058529:	mov    rsi,rax
   14005852c:	movsxd rax,DWORD PTR [rdi+0x4]
   140058530:	add    rsi,rax
   140058533:	jmp    0x140058538
   140058535:	mov    rsi,rbx
   140058538:	call   0x140058c30
   14005853d:	movsxd r8,DWORD PTR [rbp+0x4]
   140058541:	add    r8,0x10
   140058545:	add    r8,rax
   140058548:	lea    rax,[rsi+0x10]
   14005854c:	sub    r8,rax
   14005854f:	movzx  ecx,BYTE PTR [rax]
   140058552:	movzx  edx,BYTE PTR [rax+r8*1]
   140058557:	sub    ecx,edx
   140058559:	jne    0x140058562
   14005855b:	inc    rax
   14005855e:	test   edx,edx
   140058560:	jne    0x14005854f
   140058562:	test   ecx,ecx
   140058564:	je     0x14005856a
   140058566:	xor    eax,eax
   140058568:	jmp    0x1400585a3
   14005856a:	mov    al,0x2
   14005856c:	test   BYTE PTR [rbp+0x0],al
   14005856f:	je     0x140058576
   140058571:	test   BYTE PTR [rdi],0x8
   140058574:	je     0x14005859a
   140058576:	test   BYTE PTR [r14],0x1
   14005857a:	je     0x140058581
   14005857c:	test   BYTE PTR [rdi],0x1
   14005857f:	je     0x14005859a
   140058581:	test   BYTE PTR [r14],0x4
   140058585:	je     0x14005858c
   140058587:	test   BYTE PTR [rdi],0x4
   14005858a:	je     0x14005859a
   14005858c:	test   BYTE PTR [r14],al
   14005858f:	je     0x140058595
   140058591:	test   BYTE PTR [rdi],al
   140058593:	je     0x14005859a
   140058595:	mov    ebx,0x1
   14005859a:	mov    eax,ebx
   14005859c:	jmp    0x1400585a3
   14005859e:	mov    eax,0x1
   1400585a3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400585a8:	mov    rbp,QWORD PTR [rsp+0x38]
   1400585ad:	mov    rsi,QWORD PTR [rsp+0x40]
   1400585b2:	mov    rdi,QWORD PTR [rsp+0x48]
   1400585b7:	add    rsp,0x20
   1400585bb:	pop    r14
   1400585bd:	ret    
   1400585be:	int3   
   1400585bf:	int3   
   1400585c0:	sub    rsp,0x28
   1400585c4:	call   0x14005f654
   1400585c9:	int3   
   1400585ca:	int3   
   1400585cb:	int3   
   1400585cc:	mov    QWORD PTR [rsp+0x8],rbx
   1400585d1:	mov    QWORD PTR [rsp+0x10],rsi
   1400585d6:	mov    QWORD PTR [rsp+0x18],rdi
   1400585db:	push   r14
   1400585dd:	sub    rsp,0x20
   1400585e1:	cmp    BYTE PTR [rcx+0x8],0x0
   1400585e5:	mov    r14,rdx
   1400585e8:	mov    rsi,rcx
   1400585eb:	je     0x140058639
   1400585ed:	mov    rax,QWORD PTR [rcx]
   1400585f0:	test   rax,rax
   1400585f3:	je     0x140058639
   1400585f5:	or     rdi,0xffffffffffffffff
   1400585f9:	inc    rdi
   1400585fc:	cmp    BYTE PTR [rax+rdi*1],0x0
   140058600:	jne    0x1400585f9
   140058602:	lea    rcx,[rdi+0x1]
   140058606:	call   0x14005d520
   14005860b:	mov    rbx,rax
   14005860e:	test   rax,rax
   140058611:	je     0x14005862f
   140058613:	mov    r8,QWORD PTR [rsi]
   140058616:	lea    rdx,[rdi+0x1]
   14005861a:	mov    rcx,rax
   14005861d:	call   0x140060914
   140058622:	mov    rax,rbx
   140058625:	mov    BYTE PTR [r14+0x8],0x1
   14005862a:	mov    QWORD PTR [r14],rax
   14005862d:	xor    ebx,ebx
   14005862f:	mov    rcx,rbx
   140058632:	call   0x14005a938
   140058637:	jmp    0x140058643
   140058639:	mov    rax,QWORD PTR [rcx]
   14005863c:	mov    QWORD PTR [rdx],rax
   14005863f:	mov    BYTE PTR [rdx+0x8],0x0
   140058643:	mov    rbx,QWORD PTR [rsp+0x30]
   140058648:	mov    rsi,QWORD PTR [rsp+0x38]
   14005864d:	mov    rdi,QWORD PTR [rsp+0x40]
   140058652:	add    rsp,0x20
   140058656:	pop    r14
   140058658:	ret    
   140058659:	int3   
   14005865a:	int3   
   14005865b:	int3   
   14005865c:	rex push rbx
   14005865e:	sub    rsp,0x20
   140058662:	cmp    BYTE PTR [rcx+0x8],0x0
   140058666:	mov    rbx,rcx
   140058669:	je     0x140058673
   14005866b:	mov    rcx,QWORD PTR [rcx]
   14005866e:	call   0x14005a938
   140058673:	mov    BYTE PTR [rbx+0x8],0x0
   140058677:	and    QWORD PTR [rbx],0x0
   14005867b:	add    rsp,0x20
   14005867f:	pop    rbx
   140058680:	ret    
   140058681:	int3   
   140058682:	int3   
   140058683:	int3   
   140058684:	cmp    DWORD PTR [rip+0x2986d],0x2        # 0x140081ef8
   14005868b:	movzx  r9d,dx
   14005868f:	mov    r8,rcx
   140058692:	jge    0x1400586c1
   140058694:	mov    rdx,rcx
   140058697:	xor    ecx,ecx
   140058699:	movzx  eax,WORD PTR [r8]
   14005869d:	add    r8,0x2
   1400586a1:	test   ax,ax
   1400586a4:	jne    0x140058699
   1400586a6:	sub    r8,0x2
   1400586aa:	cmp    r8,rdx
   1400586ad:	je     0x1400586b5
   1400586af:	cmp    WORD PTR [r8],r9w
   1400586b3:	jne    0x1400586a6
   1400586b5:	cmp    WORD PTR [r8],r9w
   1400586b9:	cmove  rcx,r8
   1400586bd:	mov    rax,rcx
   1400586c0:	ret    
   1400586c1:	xor    ecx,ecx
   1400586c3:	mov    edx,ecx
   1400586c5:	jmp    0x1400586d9
   1400586c7:	cmp    WORD PTR [r8],r9w
   1400586cb:	cmove  rdx,r8
   1400586cf:	cmp    WORD PTR [r8],cx
   1400586d3:	je     0x14005872f
   1400586d5:	add    r8,0x2
   1400586d9:	lea    eax,[r8+0x1]
   1400586dd:	test   al,0xe
   1400586df:	jne    0x1400586c7
   1400586e1:	cmp    cx,r9w
   1400586e5:	jne    0x14005870b
   1400586e7:	mov    eax,0xffff0001
   1400586ec:	movd   xmm1,eax
   1400586f0:	jmp    0x1400586f6
   1400586f2:	add    r8,0x10
   1400586f6:	movdqu xmm0,XMMWORD PTR [r8]
   1400586fb:	pcmpistri xmm1,xmm0,0x15
   140058701:	jne    0x1400586f2
   140058703:	movsxd rax,ecx
   140058706:	lea    rax,[r8+rax*2]
   14005870a:	ret    
   14005870b:	movzx  eax,r9w
   14005870f:	movd   xmm1,eax
   140058713:	movdqu xmm0,XMMWORD PTR [r8]
   140058718:	pcmpistri xmm1,xmm0,0x41
   14005871e:	jae    0x140058727
   140058720:	movsxd rax,ecx
   140058723:	lea    rdx,[r8+rax*2]
   140058727:	je     0x14005872f
   140058729:	add    r8,0x10
   14005872d:	jmp    0x140058713
   14005872f:	mov    rax,rdx
   140058732:	ret    
   140058733:	int3   
   140058734:	mov    QWORD PTR [rsp+0x10],rbx
   140058739:	mov    QWORD PTR [rsp+0x18],rsi
   14005873e:	push   rbp
   14005873f:	push   rdi
   140058740:	push   r14
   140058742:	mov    rbp,rsp
   140058745:	sub    rsp,0x60
   140058749:	movaps xmm0,XMMWORD PTR [rip+0x18cf0]        # 0x140071440
   140058750:	mov    rsi,rdx
   140058753:	movaps xmm1,XMMWORD PTR [rip+0x18cf6]        # 0x140071450
   14005875a:	mov    r14,rcx
   14005875d:	movaps XMMWORD PTR [rbp-0x40],xmm0
   140058761:	movaps xmm0,XMMWORD PTR [rip+0x18cf8]        # 0x140071460
   140058768:	movaps XMMWORD PTR [rbp-0x30],xmm1
   14005876c:	movaps xmm1,XMMWORD PTR [rip+0x18cfd]        # 0x140071470
   140058773:	movaps XMMWORD PTR [rbp-0x20],xmm0
   140058777:	movaps XMMWORD PTR [rbp-0x10],xmm1
   14005877b:	test   rdx,rdx
   14005877e:	je     0x1400587a2
   140058780:	test   BYTE PTR [rdx],0x10
   140058783:	je     0x1400587a2
   140058785:	mov    rdi,QWORD PTR [rcx]
   140058788:	mov    rax,QWORD PTR [rdi-0x8]
   14005878c:	mov    rbx,QWORD PTR [rax+0x40]
   140058790:	mov    rsi,QWORD PTR [rax+0x30]
   140058794:	mov    rcx,rbx
   140058797:	call   0x140056aac
   14005879c:	lea    rcx,[rdi-0x8]
   1400587a0:	call   rbx
   1400587a2:	lea    rdx,[rbp+0x20]
   1400587a6:	mov    QWORD PTR [rbp-0x18],r14
   1400587aa:	mov    rcx,rsi
   1400587ad:	mov    QWORD PTR [rbp-0x10],rsi
   1400587b1:	call   QWORD PTR [rip+0x13c41]        # 0x14006c3f8
   1400587b7:	mov    QWORD PTR [rbp+0x20],rax
   1400587bb:	mov    rdx,rax
   1400587be:	mov    QWORD PTR [rbp-0x8],rax
   1400587c2:	test   rsi,rsi
   1400587c5:	je     0x1400587e2
   1400587c7:	test   BYTE PTR [rsi],0x8
   1400587ca:	mov    ecx,0x1994000
   1400587cf:	je     0x1400587d6
   1400587d1:	mov    DWORD PTR [rbp-0x20],ecx
   1400587d4:	jmp    0x1400587e2
   1400587d6:	mov    eax,DWORD PTR [rbp-0x20]
   1400587d9:	test   rdx,rdx
   1400587dc:	cmove  eax,ecx
   1400587df:	mov    DWORD PTR [rbp-0x20],eax
   1400587e2:	mov    r8d,DWORD PTR [rbp-0x28]
   1400587e6:	lea    r9,[rbp-0x20]
   1400587ea:	mov    edx,DWORD PTR [rbp-0x3c]
   1400587ed:	mov    ecx,DWORD PTR [rbp-0x40]
   1400587f0:	call   QWORD PTR [rip+0x13c12]        # 0x14006c408
   1400587f6:	lea    r11,[rsp+0x60]
   1400587fb:	mov    rbx,QWORD PTR [r11+0x28]
   1400587ff:	mov    rsi,QWORD PTR [r11+0x30]
   140058803:	mov    rsp,r11
   140058806:	pop    r14
   140058808:	pop    rdi
   140058809:	pop    rbp
   14005880a:	ret    
   14005880b:	int3   
   14005880c:	mov    QWORD PTR [rsp+0x10],rbx
   140058811:	mov    QWORD PTR [rsp+0x18],rbp
   140058816:	push   rsi
   140058817:	push   rdi
   140058818:	push   r12
   14005881a:	push   r14
   14005881c:	push   r15
   14005881e:	sub    rsp,0x20
   140058822:	mov    edi,DWORD PTR [r8+0xc]
   140058826:	mov    r12,rcx
   140058829:	mov    rcx,r8
   14005882c:	mov    rsi,r9
   14005882f:	mov    r14,r8
   140058832:	mov    r15,rdx
   140058835:	call   0x14005a754
   14005883a:	mov    r10,QWORD PTR [r12]
   14005883e:	mov    ebp,eax
   140058840:	mov    QWORD PTR [rsi],r10
   140058843:	test   edi,edi
   140058845:	je     0x1400588bb
   140058847:	movsxd rax,DWORD PTR [r14+0x10]
   14005884b:	dec    edi
   14005884d:	lea    rdx,[rdi+rdi*4]
   140058851:	lea    rbx,[rax+rdx*4]
   140058855:	add    rbx,QWORD PTR [r15+0x8]
   140058859:	cmp    ebp,DWORD PTR [rbx+0x4]
   14005885c:	jle    0x140058843
   14005885e:	cmp    ebp,DWORD PTR [rbx+0x8]
   140058861:	jg     0x140058843
   140058863:	mov    rcx,QWORD PTR [r15]
   140058866:	lea    rdx,[rsp+0x50]
   14005886b:	xor    r8d,r8d
   14005886e:	call   QWORD PTR [rip+0x13b1c]        # 0x14006c390
   140058874:	movsxd r8,DWORD PTR [rbx+0x10]
   140058878:	xor    ecx,ecx
   14005887a:	add    r8,QWORD PTR [rsp+0x50]
   14005887f:	mov    r9d,DWORD PTR [rbx+0xc]
   140058883:	mov    r10d,DWORD PTR [rax]
   140058886:	test   r9d,r9d
   140058889:	je     0x1400588a2
   14005888b:	lea    rdx,[r8+0xc]
   14005888f:	movsxd rax,DWORD PTR [rdx]
   140058892:	cmp    rax,r10
   140058895:	je     0x1400588a2
   140058897:	inc    ecx
   140058899:	add    rdx,0x14
   14005889d:	cmp    ecx,r9d
   1400588a0:	jb     0x14005888f
   1400588a2:	cmp    ecx,r9d
   1400588a5:	jae    0x140058843
   1400588a7:	mov    rax,QWORD PTR [r12]
   1400588ab:	lea    rcx,[rcx+rcx*4]
   1400588af:	movsxd rcx,DWORD PTR [r8+rcx*4+0x10]
   1400588b4:	mov    rcx,QWORD PTR [rcx+rax*1]
   1400588b8:	mov    QWORD PTR [rsi],rcx
   1400588bb:	mov    rbx,QWORD PTR [rsp+0x58]
   1400588c0:	mov    rax,rsi
   1400588c3:	mov    rbp,QWORD PTR [rsp+0x60]
   1400588c8:	add    rsp,0x20
   1400588cc:	pop    r15
   1400588ce:	pop    r14
   1400588d0:	pop    r12
   1400588d2:	pop    rdi
   1400588d3:	pop    rsi
   1400588d4:	ret    
   1400588d5:	int3   
   1400588d6:	int3   
   1400588d7:	int3   
   1400588d8:	mov    rax,rsp
   1400588db:	mov    QWORD PTR [rax+0x8],rbx
   1400588df:	mov    QWORD PTR [rax+0x10],rbp
   1400588e3:	mov    QWORD PTR [rax+0x18],rsi
   1400588e7:	mov    QWORD PTR [rax+0x20],rdi
   1400588eb:	push   r12
   1400588ed:	push   r14
   1400588ef:	push   r15
   1400588f1:	sub    rsp,0x20
   1400588f5:	mov    esi,DWORD PTR [rdx+0xc]
   1400588f8:	mov    rdi,rdx
   1400588fb:	mov    rbp,QWORD PTR [rsp+0x70]
   140058900:	mov    rcx,rdi
   140058903:	mov    rdx,rbp
   140058906:	mov    r12d,r9d
   140058909:	xor    ebx,ebx
   14005890b:	call   0x14005a754
   140058910:	mov    r11d,eax
   140058913:	test   esi,esi
   140058915:	je     0x1400589fb
   14005891b:	mov    r10,QWORD PTR [rsp+0x68]
   140058920:	mov    edx,esi
   140058922:	mov    r8,QWORD PTR [rsp+0x60]
   140058927:	or     DWORD PTR [r10],0xffffffff
   14005892b:	or     DWORD PTR [r8],0xffffffff
   14005892f:	mov    r14,QWORD PTR [rbp+0x8]
   140058933:	movsxd r15,DWORD PTR [rdi+0x10]
   140058937:	lea    r9d,[rdx-0x1]
   14005893b:	lea    rcx,[r9+r9*4]
   14005893f:	lea    rax,[r14+rcx*4]
   140058943:	cmp    r11d,DWORD PTR [rax+r15*1+0x4]
   140058948:	jle    0x140058951
   14005894a:	cmp    r11d,DWORD PTR [rax+r15*1+0x8]
   14005894f:	jle    0x140058959
   140058951:	mov    edx,r9d
   140058954:	test   r9d,r9d
   140058957:	jne    0x140058937
   140058959:	test   edx,edx
   14005895b:	je     0x14005896b
   14005895d:	lea    eax,[rdx-0x1]
   140058960:	lea    rax,[rax+rax*4]
   140058964:	lea    rbx,[r15+rax*4]
   140058968:	add    rbx,r14
   14005896b:	xor    edx,edx
   14005896d:	test   esi,esi
   14005896f:	je     0x1400589ef
   140058971:	xor    r9d,r9d
   140058974:	movsxd rcx,DWORD PTR [rdi+0x10]
   140058978:	add    rcx,QWORD PTR [rbp+0x8]
   14005897c:	add    rcx,r9
   14005897f:	test   rbx,rbx
   140058982:	je     0x140058993
   140058984:	mov    eax,DWORD PTR [rbx+0x4]
   140058987:	cmp    DWORD PTR [rcx],eax
   140058989:	jle    0x1400589ad
   14005898b:	mov    eax,DWORD PTR [rbx+0x8]
   14005898e:	cmp    DWORD PTR [rcx+0x4],eax
   140058991:	jg     0x1400589ad
   140058993:	cmp    r12d,DWORD PTR [rcx]
   140058996:	jl     0x1400589ad
   140058998:	cmp    r12d,DWORD PTR [rcx+0x4]
   14005899c:	jg     0x1400589ad
   14005899e:	cmp    DWORD PTR [r8],0xffffffff
   1400589a2:	jne    0x1400589a7
   1400589a4:	mov    DWORD PTR [r8],edx
   1400589a7:	lea    eax,[rdx+0x1]
   1400589aa:	mov    DWORD PTR [r10],eax
   1400589ad:	inc    edx
   1400589af:	add    r9,0x14
   1400589b3:	cmp    edx,esi
   1400589b5:	jb     0x140058974
   1400589b7:	cmp    DWORD PTR [r8],0xffffffff
   1400589bb:	je     0x1400589ef
   1400589bd:	mov    eax,DWORD PTR [r8]
   1400589c0:	lea    rcx,[rax+rax*4]
   1400589c4:	movsxd rax,DWORD PTR [rdi+0x10]
   1400589c8:	lea    rax,[rax+rcx*4]
   1400589cc:	add    rax,QWORD PTR [rbp+0x8]
   1400589d0:	mov    rbx,QWORD PTR [rsp+0x40]
   1400589d5:	mov    rbp,QWORD PTR [rsp+0x48]
   1400589da:	mov    rsi,QWORD PTR [rsp+0x50]
   1400589df:	mov    rdi,QWORD PTR [rsp+0x58]
   1400589e4:	add    rsp,0x20
   1400589e8:	pop    r15
   1400589ea:	pop    r14
   1400589ec:	pop    r12
   1400589ee:	ret    
   1400589ef:	and    DWORD PTR [r8],0x0
   1400589f3:	and    DWORD PTR [r10],0x0
   1400589f7:	xor    eax,eax
   1400589f9:	jmp    0x1400589d0
   1400589fb:	call   0x14005f654
   140058a00:	int3   
   140058a01:	int3   
   140058a02:	int3   
   140058a03:	int3   
   140058a04:	mov    QWORD PTR [rsp+0x8],rbx
   140058a09:	mov    QWORD PTR [rsp+0x10],rbp
   140058a0e:	push   rsi
   140058a0f:	push   rdi
   140058a10:	push   r14
   140058a12:	sub    rsp,0x20
   140058a16:	lea    r9,[rsp+0x50]
   140058a1b:	mov    rdi,r8
   140058a1e:	mov    rbp,rdx
   140058a21:	call   0x14005880c
   140058a26:	mov    rdx,rbp
   140058a29:	mov    rcx,rdi
   140058a2c:	mov    r14,rax
   140058a2f:	call   0x14005a754
   140058a34:	mov    ebx,DWORD PTR [rdi+0xc]
   140058a37:	mov    esi,eax
   140058a39:	jmp    0x140058a5f
   140058a3b:	dec    ebx
   140058a3d:	call   0x14005a580
   140058a42:	lea    rdx,[rbx+rbx*4]
   140058a46:	mov    rax,QWORD PTR [rax+0x60]
   140058a4a:	lea    rcx,[rax+rdx*4]
   140058a4e:	movsxd rax,DWORD PTR [rdi+0x10]
   140058a52:	add    rax,rcx
   140058a55:	cmp    esi,DWORD PTR [rax+0x4]
   140058a58:	jle    0x140058a5f
   140058a5a:	cmp    esi,DWORD PTR [rax+0x8]
   140058a5d:	jle    0x140058a65
   140058a5f:	test   ebx,ebx
   140058a61:	jne    0x140058a3b
   140058a63:	xor    eax,eax
   140058a65:	test   rax,rax
   140058a68:	jne    0x140058a70
   140058a6a:	or     r9d,0xffffffff
   140058a6e:	jmp    0x140058a74
   140058a70:	mov    r9d,DWORD PTR [rax+0x4]
   140058a74:	mov    r8,rdi
   140058a77:	mov    rdx,rbp
   140058a7a:	mov    rcx,r14
   140058a7d:	call   0x140058094
   140058a82:	mov    rbx,QWORD PTR [rsp+0x40]
   140058a87:	mov    rbp,QWORD PTR [rsp+0x48]
   140058a8c:	add    rsp,0x20
   140058a90:	pop    r14
   140058a92:	pop    rdi
   140058a93:	pop    rsi
   140058a94:	ret    
   140058a95:	int3   
   140058a96:	int3   
   140058a97:	int3   
   140058a98:	mov    QWORD PTR [rsp+0x8],rbx
   140058a9d:	mov    QWORD PTR [rsp+0x10],rbp
   140058aa2:	mov    QWORD PTR [rsp+0x18],rsi
   140058aa7:	push   rdi
   140058aa8:	sub    rsp,0x40
   140058aac:	mov    rsi,r9
   140058aaf:	mov    rbp,r8
   140058ab2:	mov    rbx,rdx
   140058ab5:	mov    rdi,rcx
   140058ab8:	call   0x14005a580
   140058abd:	mov    QWORD PTR [rax+0x70],rbx
   140058ac1:	mov    rbx,QWORD PTR [rdi]
   140058ac4:	call   0x14005a580
   140058ac9:	mov    rdx,QWORD PTR [rbx+0x38]
   140058acd:	mov    r8,rsi
   140058ad0:	mov    rcx,QWORD PTR [rsp+0x78]
   140058ad5:	xor    ebx,ebx
   140058ad7:	mov    r9,QWORD PTR [rsp+0x70]
   140058adc:	mov    DWORD PTR [rsp+0x38],0x1
   140058ae4:	mov    QWORD PTR [rax+0x68],rdx
   140058ae8:	mov    rdx,rbp
   140058aeb:	mov    QWORD PTR [rsp+0x30],rbx
   140058af0:	mov    DWORD PTR [rsp+0x28],ebx
   140058af4:	mov    QWORD PTR [rsp+0x20],rcx
   140058af9:	mov    rcx,QWORD PTR [rdi]
   140058afc:	call   0x140058228
   140058b01:	call   0x14005a580
   140058b06:	mov    rcx,QWORD PTR [rsp+0x80]
   140058b0e:	mov    rbp,QWORD PTR [rsp+0x58]
   140058b13:	mov    rsi,QWORD PTR [rsp+0x60]
   140058b18:	mov    QWORD PTR [rax+0x70],rbx
   140058b1c:	lea    eax,[rbx+0x1]
   140058b1f:	mov    rbx,QWORD PTR [rsp+0x50]
   140058b24:	mov    DWORD PTR [rcx],0x1
   140058b2a:	add    rsp,0x40
   140058b2e:	pop    rdi
   140058b2f:	ret    
   140058b30:	mov    rax,rsp
   140058b33:	mov    QWORD PTR [rax+0x20],r9
   140058b37:	mov    QWORD PTR [rax+0x18],r8
   140058b3b:	mov    QWORD PTR [rax+0x10],rdx
   140058b3f:	mov    QWORD PTR [rax+0x8],rcx
   140058b43:	push   rbx
   140058b44:	push   rdi
   140058b45:	sub    rsp,0x68
   140058b49:	mov    rdi,rcx
   140058b4c:	and    DWORD PTR [rax-0x38],0x0
   140058b50:	mov    QWORD PTR [rax-0x30],rcx
   140058b54:	mov    QWORD PTR [rax-0x28],r8
   140058b58:	call   0x14005a580
   140058b5d:	mov    rbx,QWORD PTR [rax+0x10]
   140058b61:	mov    rcx,rbx
   140058b64:	call   0x140056aac
   140058b69:	lea    rdx,[rsp+0x48]
   140058b6e:	mov    ecx,DWORD PTR [rdi]
   140058b70:	call   rbx
   140058b72:	mov    DWORD PTR [rsp+0x40],0x0
   140058b7a:	jmp    0x140058b7c
   140058b7c:	mov    eax,DWORD PTR [rsp+0x40]
   140058b80:	add    rsp,0x68
   140058b84:	pop    rdi
   140058b85:	pop    rbx
   140058b86:	ret    
   140058b87:	int3   
   140058b88:	rex push rbx
   140058b8a:	sub    rsp,0x20
   140058b8e:	mov    rbx,rcx
   140058b91:	mov    QWORD PTR [rcx],rdx
   140058b94:	call   0x14005a580
   140058b99:	cmp    rbx,QWORD PTR [rax+0x58]
   140058b9d:	jae    0x140058baa
   140058b9f:	call   0x14005a580
   140058ba4:	mov    rcx,QWORD PTR [rax+0x58]
   140058ba8:	jmp    0x140058bac
   140058baa:	xor    ecx,ecx
   140058bac:	mov    QWORD PTR [rbx+0x8],rcx
   140058bb0:	call   0x14005a580
   140058bb5:	mov    QWORD PTR [rax+0x58],rbx
   140058bb9:	mov    rax,rbx
   140058bbc:	add    rsp,0x20
   140058bc0:	pop    rbx
   140058bc1:	ret    
   140058bc2:	int3   
   140058bc3:	int3   
   140058bc4:	mov    QWORD PTR [rsp+0x8],rbx
   140058bc9:	push   rdi
   140058bca:	sub    rsp,0x20
   140058bce:	mov    rdi,rcx
   140058bd1:	call   0x14005a580
   140058bd6:	cmp    rdi,QWORD PTR [rax+0x58]
   140058bda:	jne    0x140058c15
   140058bdc:	call   0x14005a580
   140058be1:	mov    rbx,QWORD PTR [rax+0x58]
   140058be5:	jmp    0x140058bf0
   140058be7:	cmp    rdi,rbx
   140058bea:	je     0x140058bf7
   140058bec:	mov    rbx,QWORD PTR [rbx+0x8]
   140058bf0:	test   rbx,rbx
   140058bf3:	jne    0x140058be7
   140058bf5:	jmp    0x140058c0f
   140058bf7:	call   0x14005a580
   140058bfc:	mov    rcx,QWORD PTR [rbx+0x8]
   140058c00:	mov    rbx,QWORD PTR [rsp+0x30]
   140058c05:	mov    QWORD PTR [rax+0x58],rcx
   140058c09:	add    rsp,0x20
   140058c0d:	pop    rdi
   140058c0e:	ret    
   140058c0f:	call   0x14005f654
   140058c14:	int3   
   140058c15:	call   0x14005f654
   140058c1a:	int3   
   140058c1b:	int3   
   140058c1c:	sub    rsp,0x28
   140058c20:	call   0x14005a580
   140058c25:	mov    rax,QWORD PTR [rax+0x60]
   140058c29:	add    rsp,0x28
   140058c2d:	ret    
   140058c2e:	int3   
   140058c2f:	int3   
   140058c30:	sub    rsp,0x28
   140058c34:	call   0x14005a580
   140058c39:	mov    rax,QWORD PTR [rax+0x68]
   140058c3d:	add    rsp,0x28
   140058c41:	ret    
   140058c42:	int3   
   140058c43:	int3   
   140058c44:	rex push rbx
   140058c46:	sub    rsp,0x20
   140058c4a:	mov    rbx,rcx
   140058c4d:	call   0x14005a580
   140058c52:	mov    rdx,QWORD PTR [rax+0x58]
   140058c56:	jmp    0x140058c61
   140058c58:	cmp    QWORD PTR [rdx],rbx
   140058c5b:	je     0x140058c6f
   140058c5d:	mov    rdx,QWORD PTR [rdx+0x8]
   140058c61:	test   rdx,rdx
   140058c64:	jne    0x140058c58
   140058c66:	lea    eax,[rdx+0x1]
   140058c69:	add    rsp,0x20
   140058c6d:	pop    rbx
   140058c6e:	ret    
   140058c6f:	xor    eax,eax
   140058c71:	jmp    0x140058c69
   140058c73:	int3   
   140058c74:	rex push rbx
   140058c76:	sub    rsp,0x20
   140058c7a:	mov    rbx,rcx
   140058c7d:	call   0x14005a580
   140058c82:	mov    QWORD PTR [rax+0x60],rbx
   140058c86:	add    rsp,0x20
   140058c8a:	pop    rbx
   140058c8b:	ret    
   140058c8c:	rex push rbx
   140058c8e:	sub    rsp,0x20
   140058c92:	mov    rbx,rcx
   140058c95:	call   0x14005a580
   140058c9a:	mov    QWORD PTR [rax+0x68],rbx
   140058c9e:	add    rsp,0x20
   140058ca2:	pop    rbx
   140058ca3:	ret    
   140058ca4:	rex push rbp
   140058ca6:	lea    rbp,[rsp-0x4b0]
   140058cae:	sub    rsp,0x5b0
   140058cb5:	mov    rax,QWORD PTR [rip+0x29224]        # 0x140081ee0
   140058cbc:	xor    rax,rsp
   140058cbf:	mov    QWORD PTR [rbp+0x4a0],rax
   140058cc6:	mov    r10,QWORD PTR [rbp+0x4f8]
   140058ccd:	lea    rax,[rip+0x187ac]        # 0x140071480
   140058cd4:	movups xmm0,XMMWORD PTR [rax]
   140058cd7:	mov    r11,rcx
   140058cda:	lea    rcx,[rsp+0x30]
   140058cdf:	movups xmm1,XMMWORD PTR [rax+0x10]
   140058ce3:	movups XMMWORD PTR [rcx],xmm0
   140058ce6:	movups xmm0,XMMWORD PTR [rax+0x20]
   140058cea:	movups XMMWORD PTR [rcx+0x10],xmm1
   140058cee:	movups xmm1,XMMWORD PTR [rax+0x30]
   140058cf2:	movups XMMWORD PTR [rcx+0x20],xmm0
   140058cf6:	movups xmm0,XMMWORD PTR [rax+0x40]
   140058cfa:	movups XMMWORD PTR [rcx+0x30],xmm1
   140058cfe:	movups xmm1,XMMWORD PTR [rax+0x50]
   140058d02:	movups XMMWORD PTR [rcx+0x40],xmm0
   140058d06:	movups xmm0,XMMWORD PTR [rax+0x60]
   140058d0a:	movups XMMWORD PTR [rcx+0x50],xmm1
   140058d0e:	movups xmm1,XMMWORD PTR [rax+0x80]
   140058d15:	movups XMMWORD PTR [rcx+0x60],xmm0
   140058d19:	movups xmm0,XMMWORD PTR [rax+0x70]
   140058d1d:	mov    rax,QWORD PTR [rax+0x90]
   140058d24:	movups XMMWORD PTR [rcx+0x70],xmm0
   140058d28:	movups XMMWORD PTR [rcx+0x80],xmm1
   140058d2f:	mov    QWORD PTR [rcx+0x90],rax
   140058d36:	lea    rax,[rip+0xfffffffffffff11f]        # 0x140057e5c
   140058d3d:	mov    rcx,QWORD PTR [r11]
   140058d40:	mov    QWORD PTR [rsp+0x50],rax
   140058d45:	mov    rax,QWORD PTR [rbp+0x4e0]
   140058d4c:	mov    QWORD PTR [rsp+0x60],rax
   140058d51:	movsxd rax,DWORD PTR [rbp+0x4e8]
   140058d58:	mov    QWORD PTR [rsp+0x68],rax
   140058d5d:	mov    rax,QWORD PTR [rbp+0x4f0]
   140058d64:	mov    QWORD PTR [rsp+0x78],rax
   140058d69:	movzx  eax,BYTE PTR [rbp+0x500]
   140058d70:	mov    QWORD PTR [rbp-0x78],rax
   140058d74:	mov    rax,QWORD PTR [r10+0x40]
   140058d78:	mov    QWORD PTR [rsp+0x28],rax
   140058d7d:	lea    rax,[rbp-0x30]
   140058d81:	mov    QWORD PTR [rsp+0x58],r9
   140058d86:	xor    r9d,r9d
   140058d89:	mov    QWORD PTR [rsp+0x70],r8
   140058d8e:	lea    r8,[rsp+0x30]
   140058d93:	mov    QWORD PTR [rbp-0x80],rdx
   140058d97:	mov    rdx,QWORD PTR [r10]
   140058d9a:	mov    QWORD PTR [rsp+0x20],rax
   140058d9f:	mov    QWORD PTR [rbp-0x70],0x19930520
   140058da7:	call   QWORD PTR [rip+0x13663]        # 0x14006c410
   140058dad:	mov    rcx,QWORD PTR [rbp+0x4a0]
   140058db4:	xor    rcx,rsp
   140058db7:	call   0x140055f90
   140058dbc:	add    rsp,0x5b0
   140058dc3:	pop    rbp
   140058dc4:	ret    
   140058dc5:	int3   
   140058dc6:	int3   
   140058dc7:	int3   
   140058dc8:	mov    QWORD PTR [rsp+0x10],rbx
   140058dcd:	mov    QWORD PTR [rsp+0x18],rsi
   140058dd2:	push   rdi
   140058dd3:	sub    rsp,0x40
   140058dd7:	mov    rbx,r9
   140058dda:	mov    QWORD PTR [rsp+0x50],rdx
   140058ddf:	mov    rdi,r8
   140058de2:	mov    rsi,rcx
   140058de5:	call   0x14005a580
   140058dea:	mov    rdx,QWORD PTR [rbx+0x8]
   140058dee:	mov    QWORD PTR [rax+0x60],rdx
   140058df2:	call   0x14005a580
   140058df7:	mov    rdx,QWORD PTR [rsi+0x38]
   140058dfb:	mov    QWORD PTR [rax+0x68],rdx
   140058dff:	call   0x14005a580
   140058e04:	mov    rcx,QWORD PTR [rbx+0x38]
   140058e08:	mov    r9,rbx
   140058e0b:	mov    r8,rdi
   140058e0e:	mov    edx,DWORD PTR [rcx]
   140058e10:	mov    rcx,rsi
   140058e13:	add    rdx,QWORD PTR [rax+0x60]
   140058e17:	xor    eax,eax
   140058e19:	mov    DWORD PTR [rsp+0x38],eax
   140058e1d:	mov    QWORD PTR [rsp+0x30],rax
   140058e22:	mov    DWORD PTR [rsp+0x28],eax
   140058e26:	mov    QWORD PTR [rsp+0x20],rdx
   140058e2b:	lea    rdx,[rsp+0x50]
   140058e30:	call   0x140058228
   140058e35:	mov    rbx,QWORD PTR [rsp+0x58]
   140058e3a:	mov    rsi,QWORD PTR [rsp+0x60]
   140058e3f:	add    rsp,0x40
   140058e43:	pop    rdi
   140058e44:	ret    
   140058e45:	int3   
   140058e46:	int3   
   140058e47:	int3   
   140058e48:	int3   
   140058e49:	int3   
   140058e4a:	int3   
   140058e4b:	int3   
   140058e4c:	int3   
   140058e4d:	int3   
   140058e4e:	int3   
   140058e4f:	int3   
   140058e50:	int3   
   140058e51:	int3   
   140058e52:	int3   
   140058e53:	int3   
   140058e54:	int3   
   140058e55:	int3   
   140058e56:	data16 nop WORD PTR [rax+rax*1+0x0]
   140058e60:	sub    rdx,rcx
   140058e63:	cmp    r8,0x8
   140058e67:	jb     0x140058e8b
   140058e69:	test   cl,0x7
   140058e6c:	je     0x140058e82
   140058e6e:	xchg   ax,ax
   140058e70:	mov    al,BYTE PTR [rcx]
   140058e72:	cmp    al,BYTE PTR [rdx+rcx*1]
   140058e75:	jne    0x140058ea3
   140058e77:	inc    rcx
   140058e7a:	dec    r8
   140058e7d:	test   cl,0x7
   140058e80:	jne    0x140058e70
   140058e82:	mov    r9,r8
   140058e85:	shr    r9,0x3
   140058e89:	jne    0x140058eaa
   140058e8b:	test   r8,r8
   140058e8e:	je     0x140058e9f
   140058e90:	mov    al,BYTE PTR [rcx]
   140058e92:	cmp    al,BYTE PTR [rdx+rcx*1]
   140058e95:	jne    0x140058ea3
   140058e97:	inc    rcx
   140058e9a:	dec    r8
   140058e9d:	jne    0x140058e90
   140058e9f:	xor    rax,rax
   140058ea2:	ret    
   140058ea3:	sbb    eax,eax
   140058ea5:	sbb    eax,0xffffffff
   140058ea8:	ret    
   140058ea9:	nop
   140058eaa:	shr    r9,0x2
   140058eae:	je     0x140058ee7
   140058eb0:	mov    rax,QWORD PTR [rcx]
   140058eb3:	cmp    rax,QWORD PTR [rdx+rcx*1]
   140058eb7:	jne    0x140058f14
   140058eb9:	mov    rax,QWORD PTR [rcx+0x8]
   140058ebd:	cmp    rax,QWORD PTR [rdx+rcx*1+0x8]
   140058ec2:	jne    0x140058f10
   140058ec4:	mov    rax,QWORD PTR [rcx+0x10]
   140058ec8:	cmp    rax,QWORD PTR [rdx+rcx*1+0x10]
   140058ecd:	jne    0x140058f0c
   140058ecf:	mov    rax,QWORD PTR [rcx+0x18]
   140058ed3:	cmp    rax,QWORD PTR [rdx+rcx*1+0x18]
   140058ed8:	jne    0x140058f08
   140058eda:	add    rcx,0x20
   140058ede:	dec    r9
   140058ee1:	jne    0x140058eb0
   140058ee3:	and    r8,0x1f
   140058ee7:	mov    r9,r8
   140058eea:	shr    r9,0x3
   140058eee:	je     0x140058e8b
   140058ef0:	mov    rax,QWORD PTR [rcx]
   140058ef3:	cmp    rax,QWORD PTR [rdx+rcx*1]
   140058ef7:	jne    0x140058f14
   140058ef9:	add    rcx,0x8
   140058efd:	dec    r9
   140058f00:	jne    0x140058ef0
   140058f02:	and    r8,0x7
   140058f06:	jmp    0x140058e8b
   140058f08:	add    rcx,0x8
   140058f0c:	add    rcx,0x8
   140058f10:	add    rcx,0x8
   140058f14:	mov    rcx,QWORD PTR [rcx+rdx*1]
   140058f18:	bswap  rax
   140058f1b:	bswap  rcx
   140058f1e:	cmp    rax,rcx
   140058f21:	sbb    eax,eax
   140058f23:	sbb    eax,0xffffffff
   140058f26:	ret    
   140058f27:	int3   
   140058f28:	int3   
   140058f29:	int3   
   140058f2a:	int3   
   140058f2b:	int3   
   140058f2c:	int3   
   140058f2d:	int3   
   140058f2e:	int3   
   140058f2f:	int3   
   140058f30:	int3   
   140058f31:	int3   
   140058f32:	int3   
   140058f33:	int3   
   140058f34:	int3   
   140058f35:	int3   
   140058f36:	data16 nop WORD PTR [rax+rax*1+0x0]
   140058f40:	mov    r11,rcx
   140058f43:	movzx  edx,dl
   140058f46:	movabs r9,0x101010101010101
   140058f50:	imul   r9,rdx
   140058f54:	cmp    r8,0x10
   140058f58:	jbe    0x140059060
   140058f5e:	movq   xmm0,r9
   140058f63:	punpcklbw xmm0,xmm0
   140058f67:	cmp    r8,0x80
   140058f6e:	jbe    0x140058ff0
   140058f74:	bt     DWORD PTR [rip+0x46418],0x1        # 0x14009f394
   140058f7c:	jae    0x140058fa0
   140058f7e:	mov    eax,edx
   140058f80:	mov    rdx,rdi
   140058f83:	mov    rdi,rcx
   140058f86:	mov    rcx,r8
   140058f89:	rep stos BYTE PTR es:[rdi],al
   140058f8b:	mov    rdi,rdx
   140058f8e:	mov    rax,r11
   140058f91:	ret    
   140058f92:	data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140058fa0:	movups XMMWORD PTR [rcx],xmm0
   140058fa3:	add    r8,rcx
   140058fa6:	add    rcx,0x10
   140058faa:	and    rcx,0xfffffffffffffff0
   140058fae:	sub    r8,rcx
   140058fb1:	mov    r9,r8
   140058fb4:	shr    r9,0x7
   140058fb8:	je     0x140058ff0
   140058fba:	nop    WORD PTR [rax+rax*1+0x0]
   140058fc0:	movaps XMMWORD PTR [rcx],xmm0
   140058fc3:	movaps XMMWORD PTR [rcx+0x10],xmm0
   140058fc7:	add    rcx,0x80
   140058fce:	movaps XMMWORD PTR [rcx-0x60],xmm0
   140058fd2:	movaps XMMWORD PTR [rcx-0x50],xmm0
   140058fd6:	dec    r9
   140058fd9:	movaps XMMWORD PTR [rcx-0x40],xmm0
   140058fdd:	movaps XMMWORD PTR [rcx-0x30],xmm0
   140058fe1:	movaps XMMWORD PTR [rcx-0x20],xmm0
   140058fe5:	movapd XMMWORD PTR [rcx-0x10],xmm0
   140058fea:	jne    0x140058fc0
   140058fec:	and    r8,0x7f
   140058ff0:	mov    r9,r8
   140058ff3:	shr    r9,0x4
   140058ff7:	je     0x14005900c
   140058ff9:	nop    DWORD PTR [rax+0x0]
   140059000:	movups XMMWORD PTR [rcx],xmm0
   140059003:	add    rcx,0x10
   140059007:	dec    r9
   14005900a:	jne    0x140059000
   14005900c:	and    r8,0xf
   140059010:	je     0x140059018
   140059012:	movups XMMWORD PTR [r8+rcx*1-0x10],xmm0
   140059018:	mov    rax,r11
   14005901b:	ret    
   14005901c:	mov    ss,WORD PTR [rax-0x6f74fffb]
   140059022:	add    eax,0x590b700
   140059027:	add    BYTE PTR [rdi-0x6bfffa70],al
   14005902d:	nop
   14005902e:	add    eax,0x590a400
   140059033:	add    BYTE PTR [rax+rdx*4-0x6f7bfffb],dh
   14005903a:	add    eax,0x590bc00
   14005903f:	add    BYTE PTR [rax-0x2ffffa70],bl
   140059045:	nop
   140059046:	add    eax,0x590c000
   14005904b:	add    BYTE PTR [rax-0x5ffffa70],dl
   140059051:	nop
   140059052:	add    eax,0x590b000
   140059057:	add    BYTE PTR [rax-0x27fffa70],al
   14005905d:	nop
   14005905e:	add    eax,0xd18b4900
   140059063:	lea    r9,[rip+0xfffffffffffa6f96]        # 0x140000000
   14005906a:	mov    eax,DWORD PTR [r9+r8*4+0x5901c]
   140059072:	add    r9,rax
   140059075:	add    rcx,r8
   140059078:	mov    rax,r11
   14005907b:	jmp    r9
   14005907e:	xchg   ax,ax
   140059080:	mov    QWORD PTR [rcx-0xf],rdx
   140059084:	mov    DWORD PTR [rcx-0x7],edx
   140059087:	mov    WORD PTR [rcx-0x3],dx
   14005908b:	mov    BYTE PTR [rcx-0x1],dl
   14005908e:	ret    
   14005908f:	nop
   140059090:	mov    QWORD PTR [rcx-0xc],rdx
   140059094:	mov    DWORD PTR [rcx-0x4],edx
   140059097:	ret    
   140059098:	mov    QWORD PTR [rcx-0x9],rdx
   14005909c:	mov    BYTE PTR [rcx-0x1],dl
   14005909f:	ret    
   1400590a0:	mov    QWORD PTR [rcx-0xd],rdx
   1400590a4:	mov    DWORD PTR [rcx-0x5],edx
   1400590a7:	mov    BYTE PTR [rcx-0x1],dl
   1400590aa:	ret    
   1400590ab:	nop    DWORD PTR [rax+rax*1+0x0]
   1400590b0:	mov    QWORD PTR [rcx-0xe],rdx
   1400590b4:	mov    DWORD PTR [rcx-0x6],edx
   1400590b7:	mov    WORD PTR [rcx-0x2],dx
   1400590bb:	ret    
   1400590bc:	mov    QWORD PTR [rax],rdx
   1400590bf:	ret    
   1400590c0:	mov    QWORD PTR [rax],rdx
   1400590c3:	mov    WORD PTR [rax+0x8],dx
   1400590c7:	mov    BYTE PTR [rax+0xa],dl
   1400590ca:	ret    
   1400590cb:	nop    DWORD PTR [rax+rax*1+0x0]
   1400590d0:	mov    QWORD PTR [rax],rdx
   1400590d3:	mov    WORD PTR [rax+0x8],dx
   1400590d7:	ret    
   1400590d8:	mov    QWORD PTR [rax],rdx
   1400590db:	mov    QWORD PTR [rax+0x8],rdx
   1400590df:	ret    
   1400590e0:	sub    rsp,0x18
   1400590e4:	movdqa xmm2,XMMWORD PTR [rsp]
   1400590e9:	mov    r8,rcx
   1400590ec:	movzx  eax,dx
   1400590ef:	xor    r9d,r9d
   1400590f2:	movd   xmm0,eax
   1400590f6:	pshuflw xmm1,xmm0,0x0
   1400590fb:	pshufd xmm3,xmm1,0x0
   140059100:	mov    rax,r8
   140059103:	and    eax,0xfff
   140059108:	cmp    rax,0xff0
   14005910e:	ja     0x14005913b
   140059110:	movdqu xmm1,XMMWORD PTR [r8]
   140059115:	movdqa xmm0,xmm2
   140059119:	pxor   xmm0,xmm2
   14005911d:	movdqa xmm2,xmm0
   140059121:	pcmpeqw xmm2,xmm1
   140059125:	pcmpeqw xmm1,xmm3
   140059129:	por    xmm2,xmm1
   14005912d:	pmovmskb eax,xmm2
   140059131:	test   eax,eax
   140059133:	jne    0x14005914d
   140059135:	add    r8,0x10
   140059139:	jmp    0x140059100
   14005913b:	cmp    WORD PTR [r8],dx
   14005913f:	je     0x140059164
   140059141:	cmp    WORD PTR [r8],r9w
   140059145:	je     0x140059160
   140059147:	add    r8,0x2
   14005914b:	jmp    0x140059100
   14005914d:	bsf    ecx,eax
   140059150:	add    r8,rcx
   140059153:	cmp    WORD PTR [r8],dx
   140059157:	cmove  r9,r8
   14005915b:	mov    rax,r9
   14005915e:	jmp    0x140059167
   140059160:	xor    eax,eax
   140059162:	jmp    0x140059167
   140059164:	mov    rax,r8
   140059167:	add    rsp,0x18
   14005916b:	ret    
   14005916c:	int3   
   14005916d:	int3   
   14005916e:	int3   
   14005916f:	int3   
   140059170:	int3   
   140059171:	int3   
   140059172:	int3   
   140059173:	int3   
   140059174:	int3   
   140059175:	int3   
   140059176:	data16 nop WORD PTR [rax+rax*1+0x0]
   140059180:	mov    r11,rcx
   140059183:	mov    r10,rdx
   140059186:	cmp    r8,0x10
   14005918a:	jbe    0x140059200
   140059190:	cmp    r8,0x20
   140059194:	jbe    0x1400591e0
   140059196:	sub    rdx,rcx
   140059199:	jae    0x1400591aa
   14005919b:	mov    rax,r10
   14005919e:	add    rax,r8
   1400591a1:	cmp    rcx,rax
   1400591a4:	jl     0x1400594e0
   1400591aa:	cmp    r8,0x80
   1400591b1:	jbe    0x140059420
   1400591b7:	bt     DWORD PTR [rip+0x461d5],0x1        # 0x14009f394
   1400591bf:	jae    0x140059370
   1400591c5:	mov    rax,r11
   1400591c8:	mov    r11,rdi
   1400591cb:	mov    rdi,rcx
   1400591ce:	mov    rcx,r8
   1400591d1:	mov    r8,rsi
   1400591d4:	mov    rsi,r10
   1400591d7:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400591d9:	mov    rsi,r8
   1400591dc:	mov    rdi,r11
   1400591df:	ret    
   1400591e0:	movups xmm0,XMMWORD PTR [rdx]
   1400591e3:	movups xmm1,XMMWORD PTR [r8+rdx*1-0x10]
   1400591e9:	movups XMMWORD PTR [rcx],xmm0
   1400591ec:	movups XMMWORD PTR [r8+rcx*1-0x10],xmm1
   1400591f2:	mov    rax,rcx
   1400591f5:	ret    
   1400591f6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140059200:	mov    rax,rcx
   140059203:	lea    r9,[rip+0xfffffffffffa6df6]        # 0x140000000
   14005920a:	mov    ecx,DWORD PTR [r9+r8*4+0x59217]
   140059212:	add    rcx,r9
   140059215:	jmp    rcx
   140059217:	(bad)  
   140059218:	xchg   edx,eax
   140059219:	add    eax,0x5927f00
   14005921e:	add    BYTE PTR [rcx-0x6e],ah
   140059221:	add    eax,0x5926f00
   140059226:	add    BYTE PTR [rbx-0x4ffffa6e],ch
   14005922c:	xchg   edx,eax
   14005922d:	add    eax,0x592c000
   140059232:	add    al,dl
   140059234:	xchg   edx,eax
   140059235:	add    eax,0x5926800
   14005923a:	add    BYTE PTR [rax],al
   14005923c:	xchg   ebx,eax
   14005923d:	add    eax,0x5931000
   140059242:	add    BYTE PTR [rax+0x20000592],dl
   140059248:	xchg   ebx,eax
   140059249:	add    eax,0x592e800
   14005924e:	add    BYTE PTR [rax],dh
   140059250:	xchg   ebx,eax
   140059251:	add    eax,0x5935000
   140059256:	add    BYTE PTR [rbp+0xf000592],al
   14005925c:	(bad)  
   14005925d:	add    BYTE PTR [rax],r8b
   140059260:	ret    
   140059261:	movzx  ecx,WORD PTR [rdx]
   140059264:	mov    WORD PTR [rax],cx
   140059267:	ret    
   140059268:	mov    rcx,QWORD PTR [rdx]
   14005926b:	mov    QWORD PTR [rax],rcx
   14005926e:	ret    
   14005926f:	movzx  ecx,WORD PTR [rdx]
   140059272:	movzx  r8d,BYTE PTR [rdx+0x2]
   140059277:	mov    WORD PTR [rax],cx
   14005927a:	mov    BYTE PTR [rax+0x2],r8b
   14005927e:	ret    
   14005927f:	movzx  ecx,BYTE PTR [rdx]
   140059282:	mov    BYTE PTR [rax],cl
   140059284:	ret    
   140059285:	movdqu xmm0,XMMWORD PTR [rdx]
   140059289:	movdqu XMMWORD PTR [rax],xmm0
   14005928d:	ret    
   14005928e:	xchg   ax,ax
   140059290:	mov    r8,QWORD PTR [rdx]
   140059293:	movzx  ecx,WORD PTR [rdx+0x8]
   140059297:	movzx  r9d,BYTE PTR [rdx+0xa]
   14005929c:	mov    QWORD PTR [rax],r8
   14005929f:	mov    WORD PTR [rax+0x8],cx
   1400592a3:	mov    BYTE PTR [rax+0xa],r9b
   1400592a7:	mov    rcx,r11
   1400592aa:	ret    
   1400592ab:	mov    ecx,DWORD PTR [rdx]
   1400592ad:	mov    DWORD PTR [rax],ecx
   1400592af:	ret    
   1400592b0:	mov    ecx,DWORD PTR [rdx]
   1400592b2:	movzx  r8d,BYTE PTR [rdx+0x4]
   1400592b7:	mov    DWORD PTR [rax],ecx
   1400592b9:	mov    BYTE PTR [rax+0x4],r8b
   1400592bd:	ret    
   1400592be:	xchg   ax,ax
   1400592c0:	mov    ecx,DWORD PTR [rdx]
   1400592c2:	movzx  r8d,WORD PTR [rdx+0x4]
   1400592c7:	mov    DWORD PTR [rax],ecx
   1400592c9:	mov    WORD PTR [rax+0x4],r8w
   1400592ce:	ret    
   1400592cf:	nop
   1400592d0:	mov    ecx,DWORD PTR [rdx]
   1400592d2:	movzx  r8d,WORD PTR [rdx+0x4]
   1400592d7:	movzx  r9d,BYTE PTR [rdx+0x6]
   1400592dc:	mov    DWORD PTR [rax],ecx
   1400592de:	mov    WORD PTR [rax+0x4],r8w
   1400592e3:	mov    BYTE PTR [rax+0x6],r9b
   1400592e7:	ret    
   1400592e8:	mov    r8,QWORD PTR [rdx]
   1400592eb:	mov    ecx,DWORD PTR [rdx+0x8]
   1400592ee:	movzx  r9d,BYTE PTR [rdx+0xc]
   1400592f3:	mov    QWORD PTR [rax],r8
   1400592f6:	mov    DWORD PTR [rax+0x8],ecx
   1400592f9:	mov    BYTE PTR [rax+0xc],r9b
   1400592fd:	ret    
   1400592fe:	xchg   ax,ax
   140059300:	mov    r8,QWORD PTR [rdx]
   140059303:	movzx  ecx,BYTE PTR [rdx+0x8]
   140059307:	mov    QWORD PTR [rax],r8
   14005930a:	mov    BYTE PTR [rax+0x8],cl
   14005930d:	ret    
   14005930e:	xchg   ax,ax
   140059310:	mov    r8,QWORD PTR [rdx]
   140059313:	movzx  ecx,WORD PTR [rdx+0x8]
   140059317:	mov    QWORD PTR [rax],r8
   14005931a:	mov    WORD PTR [rax+0x8],cx
   14005931e:	ret    
   14005931f:	nop
   140059320:	mov    r8,QWORD PTR [rdx]
   140059323:	mov    ecx,DWORD PTR [rdx+0x8]
   140059326:	mov    QWORD PTR [rax],r8
   140059329:	mov    DWORD PTR [rax+0x8],ecx
   14005932c:	ret    
   14005932d:	nop    DWORD PTR [rax]
   140059330:	mov    r8,QWORD PTR [rdx]
   140059333:	mov    ecx,DWORD PTR [rdx+0x8]
   140059336:	movzx  r9d,WORD PTR [rdx+0xc]
   14005933b:	mov    QWORD PTR [rax],r8
   14005933e:	mov    DWORD PTR [rax+0x8],ecx
   140059341:	mov    WORD PTR [rax+0xc],r9w
   140059346:	ret    
   140059347:	nop    WORD PTR [rax+rax*1+0x0]
   140059350:	mov    r8,QWORD PTR [rdx]
   140059353:	mov    ecx,DWORD PTR [rdx+0x8]
   140059356:	movzx  r9d,WORD PTR [rdx+0xc]
   14005935b:	movzx  r10d,BYTE PTR [rdx+0xe]
   140059360:	mov    QWORD PTR [rax],r8
   140059363:	mov    DWORD PTR [rax+0x8],ecx
   140059366:	mov    WORD PTR [rax+0xc],r9w
   14005936b:	mov    BYTE PTR [rax+0xe],r10b
   14005936f:	ret    
   140059370:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   140059374:	add    r8,rcx
   140059377:	add    rcx,0x10
   14005937b:	test   r11b,0xf
   14005937f:	je     0x140059394
   140059381:	movaps xmm1,xmm0
   140059384:	and    rcx,0xfffffffffffffff0
   140059388:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   14005938c:	add    rcx,0x10
   140059390:	movups XMMWORD PTR [r11],xmm1
   140059394:	sub    r8,rcx
   140059397:	mov    r9,r8
   14005939a:	shr    r9,0x7
   14005939e:	je     0x14005942c
   1400593a4:	movaps XMMWORD PTR [rcx-0x10],xmm0
   1400593a8:	cmp    r9,QWORD PTR [rip+0x28b51]        # 0x140081f00
   1400593af:	jbe    0x1400593c8
   1400593b1:	jmp    0x140059478
   1400593b6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400593c0:	movaps XMMWORD PTR [rcx-0x20],xmm0
   1400593c4:	movaps XMMWORD PTR [rcx-0x10],xmm1
   1400593c8:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   1400593cc:	movups xmm1,XMMWORD PTR [rdx+rcx*1+0x10]
   1400593d1:	add    rcx,0x80
   1400593d8:	movaps XMMWORD PTR [rcx-0x80],xmm0
   1400593dc:	movaps XMMWORD PTR [rcx-0x70],xmm1
   1400593e0:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x60]
   1400593e5:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x50]
   1400593ea:	dec    r9
   1400593ed:	movaps XMMWORD PTR [rcx-0x60],xmm0
   1400593f1:	movaps XMMWORD PTR [rcx-0x50],xmm1
   1400593f5:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x40]
   1400593fa:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x30]
   1400593ff:	movaps XMMWORD PTR [rcx-0x40],xmm0
   140059403:	movaps XMMWORD PTR [rcx-0x30],xmm1
   140059407:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x20]
   14005940c:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x10]
   140059411:	jne    0x1400593c0
   140059413:	movaps XMMWORD PTR [rcx-0x20],xmm0
   140059417:	and    r8,0x7f
   14005941b:	movaps xmm0,xmm1
   14005941e:	jmp    0x14005942c
   140059420:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   140059424:	add    rcx,0x10
   140059428:	sub    r8,0x10
   14005942c:	mov    r9,r8
   14005942f:	shr    r9,0x4
   140059433:	je     0x140059451
   140059435:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140059440:	movups XMMWORD PTR [rcx-0x10],xmm0
   140059444:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   140059448:	add    rcx,0x10
   14005944c:	dec    r9
   14005944f:	jne    0x140059440
   140059451:	and    r8,0xf
   140059455:	je     0x140059464
   140059457:	lea    rax,[r8+rcx*1]
   14005945b:	movups xmm1,XMMWORD PTR [rdx+rax*1-0x10]
   140059460:	movups XMMWORD PTR [rax-0x10],xmm1
   140059464:	movups XMMWORD PTR [rcx-0x10],xmm0
   140059468:	mov    rax,r11
   14005946b:	ret    
   14005946c:	nop    DWORD PTR [rax+0x0]
   140059470:	movntps XMMWORD PTR [rcx-0x20],xmm0
   140059474:	movntps XMMWORD PTR [rcx-0x10],xmm1
   140059478:	prefetchnta BYTE PTR [rdx+rcx*1+0x200]
   140059480:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   140059484:	movups xmm1,XMMWORD PTR [rdx+rcx*1+0x10]
   140059489:	add    rcx,0x80
   140059490:	movntps XMMWORD PTR [rcx-0x80],xmm0
   140059494:	movntps XMMWORD PTR [rcx-0x70],xmm1
   140059498:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x60]
   14005949d:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x50]
   1400594a2:	dec    r9
   1400594a5:	movntps XMMWORD PTR [rcx-0x60],xmm0
   1400594a9:	movntps XMMWORD PTR [rcx-0x50],xmm1
   1400594ad:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x40]
   1400594b2:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x30]
   1400594b7:	prefetchnta BYTE PTR [rdx+rcx*1+0x240]
   1400594bf:	movntps XMMWORD PTR [rcx-0x40],xmm0
   1400594c3:	movntps XMMWORD PTR [rcx-0x30],xmm1
   1400594c7:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x20]
   1400594cc:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x10]
   1400594d1:	jne    0x140059470
   1400594d3:	sfence 
   1400594d6:	jmp    0x140059413
   1400594db:	nop    DWORD PTR [rax+rax*1+0x0]
   1400594e0:	add    rcx,r8
   1400594e3:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x10]
   1400594e8:	sub    rcx,0x10
   1400594ec:	sub    r8,0x10
   1400594f0:	test   cl,0xf
   1400594f3:	je     0x14005950c
   1400594f5:	mov    rax,rcx
   1400594f8:	and    rcx,0xfffffffffffffff0
   1400594fc:	movups xmm1,xmm0
   1400594ff:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   140059503:	movups XMMWORD PTR [rax],xmm1
   140059506:	mov    r8,rcx
   140059509:	sub    r8,r11
   14005950c:	mov    r9,r8
   14005950f:	shr    r9,0x7
   140059513:	je     0x14005957d
   140059515:	movaps XMMWORD PTR [rcx],xmm0
   140059518:	jmp    0x140059527
   14005951a:	nop    WORD PTR [rax+rax*1+0x0]
   140059520:	movaps XMMWORD PTR [rcx+0x10],xmm0
   140059524:	movaps XMMWORD PTR [rcx],xmm1
   140059527:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x10]
   14005952c:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x20]
   140059531:	sub    rcx,0x80
   140059538:	movaps XMMWORD PTR [rcx+0x70],xmm0
   14005953c:	movaps XMMWORD PTR [rcx+0x60],xmm1
   140059540:	movups xmm0,XMMWORD PTR [rdx+rcx*1+0x50]
   140059545:	movups xmm1,XMMWORD PTR [rdx+rcx*1+0x40]
   14005954a:	dec    r9
   14005954d:	movaps XMMWORD PTR [rcx+0x50],xmm0
   140059551:	movaps XMMWORD PTR [rcx+0x40],xmm1
   140059555:	movups xmm0,XMMWORD PTR [rdx+rcx*1+0x30]
   14005955a:	movups xmm1,XMMWORD PTR [rdx+rcx*1+0x20]
   14005955f:	movaps XMMWORD PTR [rcx+0x30],xmm0
   140059563:	movaps XMMWORD PTR [rcx+0x20],xmm1
   140059567:	movups xmm0,XMMWORD PTR [rdx+rcx*1+0x10]
   14005956c:	movups xmm1,XMMWORD PTR [rdx+rcx*1]
   140059570:	jne    0x140059520
   140059572:	movaps XMMWORD PTR [rcx+0x10],xmm0
   140059576:	and    r8,0x7f
   14005957a:	movaps xmm0,xmm1
   14005957d:	mov    r9,r8
   140059580:	shr    r9,0x4
   140059584:	je     0x1400595a0
   140059586:	data16 nop WORD PTR [rax+rax*1+0x0]
   140059590:	movups XMMWORD PTR [rcx],xmm0
   140059593:	sub    rcx,0x10
   140059597:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   14005959b:	dec    r9
   14005959e:	jne    0x140059590
   1400595a0:	and    r8,0xf
   1400595a4:	je     0x1400595ae
   1400595a6:	movups xmm1,XMMWORD PTR [r10]
   1400595aa:	movups XMMWORD PTR [r11],xmm1
   1400595ae:	movups XMMWORD PTR [rcx],xmm0
   1400595b1:	mov    rax,r11
   1400595b4:	ret    
   1400595b5:	int3   
   1400595b6:	int3   
   1400595b7:	int3   
   1400595b8:	sub    rsp,0x18
   1400595bc:	movzx  eax,dl
   1400595bf:	mov    r8,rcx
   1400595c2:	mov    r10d,eax
   1400595c5:	and    r8,0xfffffffffffffff0
   1400595c9:	shl    r10d,0x8
   1400595cd:	and    ecx,0xf
   1400595d0:	or     r10d,eax
   1400595d3:	xorps  xmm2,xmm2
   1400595d6:	or     eax,0xffffffff
   1400595d9:	xor    r9d,r9d
   1400595dc:	shl    eax,cl
   1400595de:	movd   xmm0,r10d
   1400595e3:	pshuflw xmm1,xmm0,0x0
   1400595e8:	movdqa xmm0,xmm2
   1400595ec:	pcmpeqb xmm0,XMMWORD PTR [r8]
   1400595f1:	pshufd xmm3,xmm1,0x0
   1400595f6:	movdqa xmm1,xmm3
   1400595fa:	pcmpeqb xmm1,XMMWORD PTR [r8]
   1400595ff:	por    xmm1,xmm0
   140059603:	pmovmskb edx,xmm1
   140059607:	and    edx,eax
   140059609:	jne    0x14005962d
   14005960b:	add    r8,0x10
   14005960f:	movdqa xmm1,xmm3
   140059613:	movdqa xmm0,xmm2
   140059617:	pcmpeqb xmm1,XMMWORD PTR [r8]
   14005961c:	pcmpeqb xmm0,XMMWORD PTR [r8]
   140059621:	por    xmm1,xmm0
   140059625:	pmovmskb edx,xmm1
   140059629:	test   edx,edx
   14005962b:	je     0x14005960b
   14005962d:	bsf    edx,edx
   140059630:	add    rdx,r8
   140059633:	cmp    BYTE PTR [rdx],r10b
   140059636:	cmove  r9,rdx
   14005963a:	mov    rax,r9
   14005963d:	add    rsp,0x18
   140059641:	ret    
   140059642:	int3   
   140059643:	int3   
   140059644:	mov    QWORD PTR [rsp+0x8],rbx
   140059649:	push   rdi
   14005964a:	sub    rsp,0x10
   14005964e:	mov    dil,BYTE PTR [rdx]
   140059651:	mov    rbx,rdx
   140059654:	mov    r8,rcx
   140059657:	test   dil,dil
   14005965a:	jne    0x140059664
   14005965c:	mov    rax,rcx
   14005965f:	jmp    0x140059817
   140059664:	cmp    DWORD PTR [rip+0x2888d],0x2        # 0x140081ef8
   14005966b:	mov    r10d,0xfff
   140059671:	lea    r11d,[r10-0xf]
   140059675:	jge    0x14005974b
   14005967b:	movzx  eax,dil
   14005967f:	xorps  xmm2,xmm2
   140059682:	mov    ecx,eax
   140059684:	shl    ecx,0x8
   140059687:	or     ecx,eax
   140059689:	movd   xmm0,ecx
   14005968d:	pshuflw xmm1,xmm0,0x0
   140059692:	pshufd xmm3,xmm1,0x0
   140059697:	mov    rax,r8
   14005969a:	and    rax,r10
   14005969d:	cmp    rax,r11
   1400596a0:	ja     0x1400596cb
   1400596a2:	movdqu xmm0,XMMWORD PTR [r8]
   1400596a7:	movdqa xmm1,xmm0
   1400596ab:	pcmpeqb xmm0,xmm3
   1400596af:	pcmpeqb xmm1,xmm2
   1400596b3:	por    xmm1,xmm0
   1400596b7:	pmovmskb eax,xmm1
   1400596bb:	test   eax,eax
   1400596bd:	jne    0x1400596c5
   1400596bf:	add    r8,0x10
   1400596c3:	jmp    0x140059697
   1400596c5:	bsf    eax,eax
   1400596c8:	add    r8,rax
   1400596cb:	cmp    BYTE PTR [r8],0x0
   1400596cf:	je     0x140059815
   1400596d5:	cmp    dil,BYTE PTR [r8]
   1400596d8:	jne    0x140059743
   1400596da:	mov    rdx,r8
   1400596dd:	mov    r9,rbx
   1400596e0:	mov    rax,r9
   1400596e3:	and    rax,r10
   1400596e6:	cmp    rax,r11
   1400596e9:	ja     0x14005972c
   1400596eb:	mov    rax,rdx
   1400596ee:	and    rax,r10
   1400596f1:	cmp    rax,r11
   1400596f4:	ja     0x14005972c
   1400596f6:	movdqu xmm1,XMMWORD PTR [r9]
   1400596fb:	movdqu xmm0,XMMWORD PTR [rdx]
   1400596ff:	pcmpeqb xmm0,xmm1
   140059703:	pcmpeqb xmm1,xmm2
   140059707:	pcmpeqb xmm0,xmm2
   14005970b:	por    xmm0,xmm1
   14005970f:	pmovmskb eax,xmm0
   140059713:	test   eax,eax
   140059715:	jne    0x140059721
   140059717:	add    rdx,0x10
   14005971b:	add    r9,0x10
   14005971f:	jmp    0x1400596e0
   140059721:	bsf    eax,eax
   140059724:	mov    ecx,eax
   140059726:	add    rdx,rcx
   140059729:	add    r9,rcx
   14005972c:	mov    al,BYTE PTR [r9]
   14005972f:	test   al,al
   140059731:	je     0x140059810
   140059737:	cmp    BYTE PTR [rdx],al
   140059739:	jne    0x140059743
   14005973b:	inc    rdx
   14005973e:	inc    r9
   140059741:	jmp    0x1400596e0
   140059743:	inc    r8
   140059746:	jmp    0x140059697
   14005974b:	mov    rax,rdx
   14005974e:	and    rax,r10
   140059751:	cmp    rax,r11
   140059754:	ja     0x14005975c
   140059756:	movdqu xmm0,XMMWORD PTR [rdx]
   14005975a:	jmp    0x140059788
   14005975c:	mov    rcx,rdx
   14005975f:	xorps  xmm0,xmm0
   140059762:	mov    dl,dil
   140059765:	mov    r9d,0x10
   14005976b:	movsx  eax,dl
   14005976e:	psrldq xmm0,0x1
   140059773:	pinsrb xmm0,eax,0xf
   140059779:	test   dl,dl
   14005977b:	je     0x140059782
   14005977d:	inc    rcx
   140059780:	mov    dl,BYTE PTR [rcx]
   140059782:	sub    r9,0x1
   140059786:	jne    0x14005976b
   140059788:	mov    rax,r8
   14005978b:	and    rax,r10
   14005978e:	cmp    rax,r11
   140059791:	ja     0x1400597ed
   140059793:	movdqu xmm1,XMMWORD PTR [r8]
   140059798:	pcmpistri xmm0,xmm1,0xc
   14005979e:	jbe    0x1400597a6
   1400597a0:	add    r8,0x10
   1400597a4:	jmp    0x140059788
   1400597a6:	jae    0x140059815
   1400597a8:	pcmpistri xmm0,xmm1,0xc
   1400597ae:	movsxd rax,ecx
   1400597b1:	add    r8,rax
   1400597b4:	mov    rdx,r8
   1400597b7:	mov    r9,rbx
   1400597ba:	mov    rax,rdx
   1400597bd:	and    rax,r10
   1400597c0:	cmp    rax,r11
   1400597c3:	ja     0x1400597fd
   1400597c5:	mov    rax,r9
   1400597c8:	and    rax,r10
   1400597cb:	cmp    rax,r11
   1400597ce:	ja     0x1400597fd
   1400597d0:	movdqu xmm1,XMMWORD PTR [rdx]
   1400597d4:	movdqu xmm2,XMMWORD PTR [r9]
   1400597d9:	pcmpistri xmm2,xmm1,0xc
   1400597df:	jno    0x1400597f8
   1400597e1:	js     0x140059810
   1400597e3:	add    rdx,0x10
   1400597e7:	add    r9,0x10
   1400597eb:	jmp    0x1400597ba
   1400597ed:	cmp    BYTE PTR [r8],0x0
   1400597f1:	je     0x140059815
   1400597f3:	cmp    BYTE PTR [r8],dil
   1400597f6:	je     0x1400597b4
   1400597f8:	inc    r8
   1400597fb:	jmp    0x140059788
   1400597fd:	mov    al,BYTE PTR [r9]
   140059800:	test   al,al
   140059802:	je     0x140059810
   140059804:	cmp    BYTE PTR [rdx],al
   140059806:	jne    0x1400597f8
   140059808:	inc    rdx
   14005980b:	inc    r9
   14005980e:	jmp    0x1400597ba
   140059810:	mov    rax,r8
   140059813:	jmp    0x140059817
   140059815:	xor    eax,eax
   140059817:	mov    rbx,QWORD PTR [rsp+0x20]
   14005981c:	add    rsp,0x10
   140059820:	pop    rdi
   140059821:	ret    
   140059822:	int3   
   140059823:	int3   
   140059824:	rex push rbx
   140059826:	sub    rsp,0x20
   14005982a:	xor    edx,edx
   14005982c:	xor    eax,eax
   14005982e:	lock cmpxchg QWORD PTR [rip+0x45c71],rdx        # 0x14009f4a8
   140059837:	mov    rbx,QWORD PTR [rip+0x286a2]        # 0x140081ee0
   14005983e:	mov    ecx,ebx
   140059840:	xor    rbx,rax
   140059843:	and    ecx,0x3f
   140059846:	ror    rbx,cl
   140059849:	test   rbx,rbx
   14005984c:	je     0x140059858
   14005984e:	mov    rcx,rbx
   140059851:	call   0x140056aac
   140059856:	call   rbx
   140059858:	call   0x140060974
   14005985d:	int3   
   14005985e:	int3   
   14005985f:	int3   
   140059860:	mov    QWORD PTR [rsp+0x8],rbx
   140059865:	mov    QWORD PTR [rsp+0x10],rsi
   14005986a:	push   rdi
   14005986b:	sub    rsp,0x10
   14005986f:	movzx  edi,WORD PTR [rdx]
   140059872:	xor    esi,esi
   140059874:	mov    rbx,rdx
   140059877:	mov    r8,rcx
   14005987a:	cmp    si,di
   14005987d:	jne    0x140059887
   14005987f:	mov    rax,rcx
   140059882:	jmp    0x140059a4d
   140059887:	cmp    DWORD PTR [rip+0x2866a],0x2        # 0x140081ef8
   14005988e:	mov    r10d,0xfff
   140059894:	lea    r11d,[r10-0xf]
   140059898:	jge    0x140059977
   14005989e:	movzx  eax,di
   1400598a1:	xorps  xmm2,xmm2
   1400598a4:	movd   xmm0,eax
   1400598a8:	pshuflw xmm1,xmm0,0x0
   1400598ad:	pshufd xmm3,xmm1,0x0
   1400598b2:	mov    rax,r8
   1400598b5:	and    rax,r10
   1400598b8:	cmp    rax,r11
   1400598bb:	ja     0x1400598ea
   1400598bd:	movdqu xmm0,XMMWORD PTR [r8]
   1400598c2:	movdqa xmm1,xmm0
   1400598c6:	pcmpeqw xmm0,xmm3
   1400598ca:	pcmpeqw xmm1,xmm2
   1400598ce:	por    xmm1,xmm0
   1400598d2:	pmovmskb eax,xmm1
   1400598d6:	test   eax,eax
   1400598d8:	jne    0x1400598e0
   1400598da:	add    r8,0x10
   1400598de:	jmp    0x1400598b2
   1400598e0:	bsf    ecx,eax
   1400598e3:	shr    rcx,1
   1400598e6:	lea    r8,[r8+rcx*2]
   1400598ea:	cmp    si,WORD PTR [r8]
   1400598ee:	je     0x140059a4b
   1400598f4:	cmp    di,WORD PTR [r8]
   1400598f8:	jne    0x14005996e
   1400598fa:	mov    rdx,r8
   1400598fd:	mov    r9,rbx
   140059900:	mov    rax,r9
   140059903:	and    rax,r10
   140059906:	cmp    rax,r11
   140059909:	ja     0x140059952
   14005990b:	mov    rax,rdx
   14005990e:	and    rax,r10
   140059911:	cmp    rax,r11
   140059914:	ja     0x140059952
   140059916:	movdqu xmm1,XMMWORD PTR [r9]
   14005991b:	movdqu xmm0,XMMWORD PTR [rdx]
   14005991f:	pcmpeqw xmm0,xmm1
   140059923:	pcmpeqw xmm1,xmm2
   140059927:	pcmpeqw xmm0,xmm2
   14005992b:	por    xmm0,xmm1
   14005992f:	pmovmskb eax,xmm0
   140059933:	test   eax,eax
   140059935:	jne    0x140059941
   140059937:	add    rdx,0x10
   14005993b:	add    r9,0x10
   14005993f:	jmp    0x140059900
   140059941:	bsf    eax,eax
   140059944:	mov    ecx,eax
   140059946:	shr    rcx,1
   140059949:	add    rcx,rcx
   14005994c:	add    rdx,rcx
   14005994f:	add    r9,rcx
   140059952:	movzx  eax,WORD PTR [r9]
   140059956:	cmp    si,ax
   140059959:	je     0x140059a46
   14005995f:	cmp    WORD PTR [rdx],ax
   140059962:	jne    0x14005996e
   140059964:	add    rdx,0x2
   140059968:	add    r9,0x2
   14005996c:	jmp    0x140059900
   14005996e:	add    r8,0x2
   140059972:	jmp    0x1400598b2
   140059977:	mov    rax,rdx
   14005997a:	and    rax,r10
   14005997d:	cmp    rax,r11
   140059980:	ja     0x140059988
   140059982:	movdqu xmm0,XMMWORD PTR [rdx]
   140059986:	jmp    0x1400599b6
   140059988:	mov    rcx,rdx
   14005998b:	xorps  xmm0,xmm0
   14005998e:	movzx  edx,di
   140059991:	mov    r9d,0x8
   140059997:	movzx  eax,dx
   14005999a:	psrldq xmm0,0x2
   14005999f:	pinsrw xmm0,eax,0x7
   1400599a4:	cmp    si,dx
   1400599a7:	je     0x1400599b0
   1400599a9:	add    rcx,0x2
   1400599ad:	movzx  edx,WORD PTR [rcx]
   1400599b0:	sub    r9,0x1
   1400599b4:	jne    0x140059997
   1400599b6:	mov    rax,r8
   1400599b9:	and    rax,r10
   1400599bc:	cmp    rax,r11
   1400599bf:	ja     0x140059a1c
   1400599c1:	movdqu xmm1,XMMWORD PTR [r8]
   1400599c6:	pcmpistri xmm0,xmm1,0xd
   1400599cc:	jbe    0x1400599d4
   1400599ce:	add    r8,0x10
   1400599d2:	jmp    0x1400599b6
   1400599d4:	jae    0x140059a4b
   1400599d6:	pcmpistri xmm0,xmm1,0xd
   1400599dc:	movsxd rax,ecx
   1400599df:	lea    r8,[r8+rax*2]
   1400599e3:	mov    rdx,r8
   1400599e6:	mov    r9,rbx
   1400599e9:	mov    rax,rdx
   1400599ec:	and    rax,r10
   1400599ef:	cmp    rax,r11
   1400599f2:	ja     0x140059a2e
   1400599f4:	mov    rax,r9
   1400599f7:	and    rax,r10
   1400599fa:	cmp    rax,r11
   1400599fd:	ja     0x140059a2e
   1400599ff:	movdqu xmm1,XMMWORD PTR [rdx]
   140059a03:	movdqu xmm2,XMMWORD PTR [r9]
   140059a08:	pcmpistri xmm2,xmm1,0xd
   140059a0e:	jno    0x140059a28
   140059a10:	js     0x140059a46
   140059a12:	add    rdx,0x10
   140059a16:	add    r9,0x10
   140059a1a:	jmp    0x1400599e9
   140059a1c:	cmp    si,WORD PTR [r8]
   140059a20:	je     0x140059a4b
   140059a22:	cmp    WORD PTR [r8],di
   140059a26:	je     0x1400599e3
   140059a28:	add    r8,0x2
   140059a2c:	jmp    0x1400599b6
   140059a2e:	movzx  eax,WORD PTR [r9]
   140059a32:	cmp    si,ax
   140059a35:	je     0x140059a46
   140059a37:	cmp    WORD PTR [rdx],ax
   140059a3a:	jne    0x140059a28
   140059a3c:	add    rdx,0x2
   140059a40:	add    r9,0x2
   140059a44:	jmp    0x1400599e9
   140059a46:	mov    rax,r8
   140059a49:	jmp    0x140059a4d
   140059a4b:	xor    eax,eax
   140059a4d:	mov    rbx,QWORD PTR [rsp+0x20]
   140059a52:	mov    rsi,QWORD PTR [rsp+0x28]
   140059a57:	add    rsp,0x10
   140059a5b:	pop    rdi
   140059a5c:	ret    
   140059a5d:	int3   
   140059a5e:	int3   
   140059a5f:	int3   
   140059a60:	mov    QWORD PTR [rsp+0x8],rbx
   140059a65:	mov    QWORD PTR [rsp+0x10],rbp
   140059a6a:	mov    QWORD PTR [rsp+0x18],rsi
   140059a6f:	push   rdi
   140059a70:	push   r12
   140059a72:	push   r13
   140059a74:	push   r14
   140059a76:	push   r15
   140059a78:	sub    rsp,0x40
   140059a7c:	mov    r12,QWORD PTR [r9+0x8]
   140059a80:	mov    rbp,rcx
   140059a83:	mov    r15,QWORD PTR [r9]
   140059a86:	mov    rcx,r8
   140059a89:	mov    rbx,QWORD PTR [r9+0x38]
   140059a8d:	sub    r15,r12
   140059a90:	mov    r14,r9
   140059a93:	mov    rdi,r8
   140059a96:	mov    r13,rdx
   140059a99:	call   0x1400570f4
   140059a9e:	test   BYTE PTR [rbp+0x4],0x66
   140059aa2:	jne    0x140059b88
   140059aa8:	mov    esi,DWORD PTR [r14+0x48]
   140059aac:	mov    QWORD PTR [rsp+0x30],rbp
   140059ab1:	mov    QWORD PTR [rsp+0x38],rdi
   140059ab6:	cmp    esi,DWORD PTR [rbx]
   140059ab8:	jae    0x140059c38
   140059abe:	mov    edi,esi
   140059ac0:	add    rdi,rdi
   140059ac3:	mov    eax,DWORD PTR [rbx+rdi*8+0x4]
   140059ac7:	cmp    r15,rax
   140059aca:	jb     0x140059b7a
   140059ad0:	mov    eax,DWORD PTR [rbx+rdi*8+0x8]
   140059ad4:	cmp    r15,rax
   140059ad7:	jae    0x140059b7a
   140059add:	cmp    DWORD PTR [rbx+rdi*8+0x10],0x0
   140059ae2:	je     0x140059b7a
   140059ae8:	cmp    DWORD PTR [rbx+rdi*8+0xc],0x1
   140059aed:	je     0x140059b06
   140059aef:	mov    eax,DWORD PTR [rbx+rdi*8+0xc]
   140059af3:	lea    rcx,[rsp+0x30]
   140059af8:	add    rax,r12
   140059afb:	mov    rdx,r13
   140059afe:	call   rax
   140059b00:	test   eax,eax
   140059b02:	js     0x140059b81
   140059b04:	jle    0x140059b7a
   140059b06:	cmp    DWORD PTR [rbp+0x0],0xe06d7363
   140059b0d:	jne    0x140059b37
   140059b0f:	cmp    QWORD PTR [rip+0x178f1],0x0        # 0x140071408
   140059b17:	je     0x140059b37
   140059b19:	lea    rcx,[rip+0x178e8]        # 0x140071408
   140059b20:	call   0x14006a340
   140059b25:	test   eax,eax
   140059b27:	je     0x140059b37
   140059b29:	mov    edx,0x1
   140059b2e:	mov    rcx,rbp
   140059b31:	call   QWORD PTR [rip+0x178d1]        # 0x140071408
   140059b37:	mov    ecx,DWORD PTR [rbx+rdi*8+0x10]
   140059b3b:	mov    r8d,0x1
   140059b41:	add    rcx,r12
   140059b44:	mov    rdx,r13
   140059b47:	call   0x14005a860
   140059b4c:	mov    rax,QWORD PTR [r14+0x40]
   140059b50:	mov    r8,rbp
   140059b53:	mov    edx,DWORD PTR [rbx+rdi*8+0x10]
   140059b57:	mov    rcx,r13
   140059b5a:	mov    r9d,DWORD PTR [rbp+0x0]
   140059b5e:	add    rdx,r12
   140059b61:	mov    QWORD PTR [rsp+0x28],rax
   140059b66:	mov    rax,QWORD PTR [r14+0x28]
   140059b6a:	mov    QWORD PTR [rsp+0x20],rax
   140059b6f:	call   QWORD PTR [rip+0x1289b]        # 0x14006c410
   140059b75:	call   0x14005a890
   140059b7a:	inc    esi
   140059b7c:	jmp    0x140059ab6
   140059b81:	xor    eax,eax
   140059b83:	jmp    0x140059c3d
   140059b88:	mov    rsi,QWORD PTR [r14+0x20]
   140059b8c:	mov    edi,DWORD PTR [r14+0x48]
   140059b90:	sub    rsi,r12
   140059b93:	jmp    0x140059c2e
   140059b98:	mov    ecx,edi
   140059b9a:	add    rcx,rcx
   140059b9d:	mov    eax,DWORD PTR [rbx+rcx*8+0x4]
   140059ba1:	cmp    r15,rax
   140059ba4:	jb     0x140059c2c
   140059baa:	mov    eax,DWORD PTR [rbx+rcx*8+0x8]
   140059bae:	cmp    r15,rax
   140059bb1:	jae    0x140059c2c
   140059bb3:	mov    r10d,DWORD PTR [rbp+0x4]
   140059bb7:	and    r10d,0x20
   140059bbb:	je     0x140059c01
   140059bbd:	xor    r9d,r9d
   140059bc0:	test   edx,edx
   140059bc2:	je     0x140059bfc
   140059bc4:	mov    r8d,r9d
   140059bc7:	add    r8,r8
   140059bca:	mov    eax,DWORD PTR [rbx+r8*8+0x4]
   140059bcf:	cmp    rsi,rax
   140059bd2:	jb     0x140059bf4
   140059bd4:	mov    eax,DWORD PTR [rbx+r8*8+0x8]
   140059bd9:	cmp    rsi,rax
   140059bdc:	jae    0x140059bf4
   140059bde:	mov    eax,DWORD PTR [rbx+rcx*8+0x10]
   140059be2:	cmp    DWORD PTR [rbx+r8*8+0x10],eax
   140059be7:	jne    0x140059bf4
   140059be9:	mov    eax,DWORD PTR [rbx+rcx*8+0xc]
   140059bed:	cmp    DWORD PTR [rbx+r8*8+0xc],eax
   140059bf2:	je     0x140059bfc
   140059bf4:	inc    r9d
   140059bf7:	cmp    r9d,edx
   140059bfa:	jb     0x140059bc4
   140059bfc:	cmp    r9d,edx
   140059bff:	jne    0x140059c38
   140059c01:	mov    eax,DWORD PTR [rbx+rcx*8+0x10]
   140059c05:	test   eax,eax
   140059c07:	je     0x140059c15
   140059c09:	cmp    rsi,rax
   140059c0c:	jne    0x140059c2c
   140059c0e:	test   r10d,r10d
   140059c11:	jne    0x140059c38
   140059c13:	jmp    0x140059c2c
   140059c15:	lea    eax,[rdi+0x1]
   140059c18:	mov    rdx,r13
   140059c1b:	mov    DWORD PTR [r14+0x48],eax
   140059c1f:	mov    r8d,DWORD PTR [rbx+rcx*8+0xc]
   140059c24:	mov    cl,0x1
   140059c26:	add    r8,r12
   140059c29:	call   r8
   140059c2c:	inc    edi
   140059c2e:	mov    edx,DWORD PTR [rbx]
   140059c30:	cmp    edi,edx
   140059c32:	jb     0x140059b98
   140059c38:	mov    eax,0x1
   140059c3d:	lea    r11,[rsp+0x40]
   140059c42:	mov    rbx,QWORD PTR [r11+0x30]
   140059c46:	mov    rbp,QWORD PTR [r11+0x38]
   140059c4a:	mov    rsi,QWORD PTR [r11+0x40]
   140059c4e:	mov    rsp,r11
   140059c51:	pop    r15
   140059c53:	pop    r14
   140059c55:	pop    r13
   140059c57:	pop    r12
   140059c59:	pop    rdi
   140059c5a:	ret    
   140059c5b:	int3   
   140059c5c:	sub    rsp,0x28
   140059c60:	call   0x14005a894
   140059c65:	call   0x14005a258
   140059c6a:	call   0x14005a8b8
   140059c6f:	test   al,al
   140059c71:	jne    0x140059c77
   140059c73:	xor    al,al
   140059c75:	jmp    0x140059c8e
   140059c77:	call   0x14005a654
   140059c7c:	test   al,al
   140059c7e:	jne    0x140059c87
   140059c80:	call   0x14005a900
   140059c85:	jmp    0x140059c73
   140059c87:	call   0x14005a504
   140059c8c:	mov    al,0x1
   140059c8e:	add    rsp,0x28
   140059c92:	ret    
   140059c93:	int3   
   140059c94:	rex push rbx
   140059c96:	sub    rsp,0x20
   140059c9a:	mov    bl,cl
   140059c9c:	call   0x14005a518
   140059ca1:	test   bl,bl
   140059ca3:	jne    0x140059cb6
   140059ca5:	call   0x14005a694
   140059caa:	call   0x14005a900
   140059caf:	xor    ecx,ecx
   140059cb1:	call   0x14005a290
   140059cb6:	mov    al,0x1
   140059cb8:	add    rsp,0x20
   140059cbc:	pop    rbx
   140059cbd:	ret    
   140059cbe:	int3   
   140059cbf:	int3   
   140059cc0:	mov    QWORD PTR [rsp+0x8],rbx
   140059cc5:	mov    QWORD PTR [rsp+0x10],rbp
   140059cca:	mov    QWORD PTR [rsp+0x18],rsi
   140059ccf:	push   rdi
   140059cd0:	push   r12
   140059cd2:	push   r13
   140059cd4:	push   r14
   140059cd6:	push   r15
   140059cd8:	sub    rsp,0x20
   140059cdc:	xor    r15d,r15d
   140059cdf:	mov    r14d,ecx
   140059ce2:	mov    r12,r9
   140059ce5:	xor    eax,eax
   140059ce7:	mov    rbp,r8
   140059cea:	lea    r9,[rip+0xfffffffffffa630f]        # 0x140000000
   140059cf1:	mov    r13,rdx
   140059cf4:	lock cmpxchg QWORD PTR [r9+r14*8+0x9f3e0],r15
   140059cfe:	mov    r8,QWORD PTR [rip+0x281db]        # 0x140081ee0
   140059d05:	or     rdi,0xffffffffffffffff
   140059d09:	mov    ecx,r8d
   140059d0c:	mov    rdx,r8
   140059d0f:	and    ecx,0x3f
   140059d12:	xor    rdx,rax
   140059d15:	ror    rdx,cl
   140059d18:	cmp    rdx,rdi
   140059d1b:	je     0x140059e69
   140059d21:	test   rdx,rdx
   140059d24:	je     0x140059d2e
   140059d26:	mov    rax,rdx
   140059d29:	jmp    0x140059e6b
   140059d2e:	cmp    rbp,r12
   140059d31:	je     0x140059df5
   140059d37:	mov    esi,DWORD PTR [rbp+0x0]
   140059d3a:	xor    eax,eax
   140059d3c:	lock cmpxchg QWORD PTR [r9+rsi*8+0x9f3c0],r15
   140059d46:	mov    rbx,rax
   140059d49:	je     0x140059d59
   140059d4b:	cmp    rax,rdi
   140059d4e:	je     0x140059de1
   140059d54:	jmp    0x140059ddc
   140059d59:	mov    r15,QWORD PTR [r9+rsi*8+0x71518]
   140059d61:	xor    edx,edx
   140059d63:	mov    rcx,r15
   140059d66:	mov    r8d,0x800
   140059d6c:	call   QWORD PTR [rip+0x12436]        # 0x14006c1a8
   140059d72:	mov    rbx,rax
   140059d75:	test   rax,rax
   140059d78:	je     0x140059d7f
   140059d7a:	xor    r15d,r15d
   140059d7d:	jmp    0x140059da3
   140059d7f:	call   QWORD PTR [rip+0x12443]        # 0x14006c1c8
   140059d85:	cmp    eax,0x57
   140059d88:	jne    0x140059d9d
   140059d8a:	xor    r8d,r8d
   140059d8d:	xor    edx,edx
   140059d8f:	mov    rcx,r15
   140059d92:	call   QWORD PTR [rip+0x12410]        # 0x14006c1a8
   140059d98:	mov    rbx,rax
   140059d9b:	jmp    0x140059d7a
   140059d9d:	xor    r15d,r15d
   140059da0:	mov    ebx,r15d
   140059da3:	lea    r9,[rip+0xfffffffffffa6256]        # 0x140000000
   140059daa:	test   rbx,rbx
   140059dad:	jne    0x140059dbc
   140059daf:	mov    rax,rdi
   140059db2:	xchg   QWORD PTR [r9+rsi*8+0x9f3c0],rax
   140059dba:	jmp    0x140059de1
   140059dbc:	mov    rax,rbx
   140059dbf:	xchg   QWORD PTR [r9+rsi*8+0x9f3c0],rax
   140059dc7:	test   rax,rax
   140059dca:	je     0x140059ddc
   140059dcc:	mov    rcx,rbx
   140059dcf:	call   QWORD PTR [rip+0x123c3]        # 0x14006c198
   140059dd5:	lea    r9,[rip+0xfffffffffffa6224]        # 0x140000000
   140059ddc:	test   rbx,rbx
   140059ddf:	jne    0x140059e3e
   140059de1:	add    rbp,0x4
   140059de5:	cmp    rbp,r12
   140059de8:	jne    0x140059d37
   140059dee:	mov    r8,QWORD PTR [rip+0x280eb]        # 0x140081ee0
   140059df5:	mov    rbx,r15
   140059df8:	test   rbx,rbx
   140059dfb:	je     0x140059e47
   140059dfd:	mov    rdx,r13
   140059e00:	mov    rcx,rbx
   140059e03:	call   QWORD PTR [rip+0x1254f]        # 0x14006c358
   140059e09:	mov    r8,QWORD PTR [rip+0x280d0]        # 0x140081ee0
   140059e10:	test   rax,rax
   140059e13:	je     0x140059e47
   140059e15:	mov    ecx,r8d
   140059e18:	mov    edx,0x40
   140059e1d:	and    ecx,0x3f
   140059e20:	sub    edx,ecx
   140059e22:	mov    cl,dl
   140059e24:	mov    rdx,rax
   140059e27:	ror    rdx,cl
   140059e2a:	lea    rcx,[rip+0xfffffffffffa61cf]        # 0x140000000
   140059e31:	xor    rdx,r8
   140059e34:	xchg   QWORD PTR [rcx+r14*8+0x9f3e0],rdx
   140059e3c:	jmp    0x140059e6b
   140059e3e:	mov    r8,QWORD PTR [rip+0x2809b]        # 0x140081ee0
   140059e45:	jmp    0x140059df8
   140059e47:	mov    ecx,0x40
   140059e4c:	mov    eax,r8d
   140059e4f:	and    eax,0x3f
   140059e52:	sub    ecx,eax
   140059e54:	ror    rdi,cl
   140059e57:	lea    rcx,[rip+0xfffffffffffa61a2]        # 0x140000000
   140059e5e:	xor    rdi,r8
   140059e61:	xchg   QWORD PTR [rcx+r14*8+0x9f3e0],rdi
   140059e69:	xor    eax,eax
   140059e6b:	mov    rbx,QWORD PTR [rsp+0x50]
   140059e70:	mov    rbp,QWORD PTR [rsp+0x58]
   140059e75:	mov    rsi,QWORD PTR [rsp+0x60]
   140059e7a:	add    rsp,0x20
   140059e7e:	pop    r15
   140059e80:	pop    r14
   140059e82:	pop    r13
   140059e84:	pop    r12
   140059e86:	pop    rdi
   140059e87:	ret    
   140059e88:	mov    rax,rsp
   140059e8b:	mov    QWORD PTR [rax+0x8],rbx
   140059e8f:	mov    QWORD PTR [rax+0x10],rbp
   140059e93:	mov    QWORD PTR [rax+0x18],rsi
   140059e97:	mov    QWORD PTR [rax+0x20],rdi
   140059e9b:	push   r14
   140059e9d:	sub    rsp,0x20
   140059ea1:	mov    rdi,r9
   140059ea4:	mov    rsi,r8
   140059ea7:	mov    rbp,rdx
   140059eaa:	lea    r9,[rip+0x17737]        # 0x1400715e8
   140059eb1:	mov    r14,rcx
   140059eb4:	lea    r8,[rip+0x17729]        # 0x1400715e4
   140059ebb:	lea    rdx,[rip+0x17726]        # 0x1400715e8
   140059ec2:	xor    ecx,ecx
   140059ec4:	call   0x140059cc0
   140059ec9:	mov    rbx,rax
   140059ecc:	test   rax,rax
   140059ecf:	je     0x140059ee9
   140059ed1:	mov    rcx,rax
   140059ed4:	call   0x140056aac
   140059ed9:	mov    r9,rdi
   140059edc:	mov    r8,rsi
   140059edf:	mov    rdx,rbp
   140059ee2:	mov    rcx,r14
   140059ee5:	call   rbx
   140059ee7:	jmp    0x140059eee
   140059ee9:	mov    eax,0x32
   140059eee:	mov    rbx,QWORD PTR [rsp+0x30]
   140059ef3:	mov    rbp,QWORD PTR [rsp+0x38]
   140059ef8:	mov    rsi,QWORD PTR [rsp+0x40]
   140059efd:	mov    rdi,QWORD PTR [rsp+0x48]
   140059f02:	add    rsp,0x20
   140059f06:	pop    r14
   140059f08:	ret    
   140059f09:	int3   
   140059f0a:	int3   
   140059f0b:	int3   
   140059f0c:	mov    rax,rsp
   140059f0f:	mov    QWORD PTR [rax+0x8],rbx
   140059f13:	mov    QWORD PTR [rax+0x10],rbp
   140059f17:	mov    QWORD PTR [rax+0x18],rsi
   140059f1b:	mov    QWORD PTR [rax+0x20],rdi
   140059f1f:	push   r14
   140059f21:	sub    rsp,0x20
   140059f25:	mov    edi,r9d
   140059f28:	mov    rsi,r8
   140059f2b:	mov    ebp,edx
   140059f2d:	lea    r9,[rip+0x176c8]        # 0x1400715fc
   140059f34:	mov    r14,rcx
   140059f37:	lea    r8,[rip+0x176ba]        # 0x1400715f8
   140059f3e:	lea    rdx,[rip+0x176bb]        # 0x140071600
   140059f45:	mov    ecx,0x1
   140059f4a:	call   0x140059cc0
   140059f4f:	mov    rbx,rax
   140059f52:	test   rax,rax
   140059f55:	je     0x140059f6e
   140059f57:	mov    rcx,rax
   140059f5a:	call   0x140056aac
   140059f5f:	mov    r9d,edi
   140059f62:	mov    r8,rsi
   140059f65:	mov    edx,ebp
   140059f67:	mov    rcx,r14
   140059f6a:	call   rbx
   140059f6c:	jmp    0x140059f73
   140059f6e:	mov    eax,0x32
   140059f73:	mov    rbx,QWORD PTR [rsp+0x30]
   140059f78:	mov    rbp,QWORD PTR [rsp+0x38]
   140059f7d:	mov    rsi,QWORD PTR [rsp+0x40]
   140059f82:	mov    rdi,QWORD PTR [rsp+0x48]
   140059f87:	add    rsp,0x20
   140059f8b:	pop    r14
   140059f8d:	ret    
   140059f8e:	int3   
   140059f8f:	int3   
   140059f90:	mov    QWORD PTR [rsp+0x8],rbx
   140059f95:	push   rdi
   140059f96:	sub    rsp,0x20
   140059f9a:	mov    rdi,rcx
   140059f9d:	lea    r9,[rip+0x17674]        # 0x140071618
   140059fa4:	mov    ecx,0x2
   140059fa9:	lea    r8,[rip+0x17664]        # 0x140071614
   140059fb0:	lea    rdx,[rip+0x17661]        # 0x140071618
   140059fb7:	call   0x140059cc0
   140059fbc:	mov    rbx,rax
   140059fbf:	test   rax,rax
   140059fc2:	je     0x140059fd3
   140059fc4:	mov    rcx,rax
   140059fc7:	call   0x140056aac
   140059fcc:	mov    rcx,rdi
   140059fcf:	call   rbx
   140059fd1:	jmp    0x140059fd8
   140059fd3:	mov    eax,0x32
   140059fd8:	mov    rbx,QWORD PTR [rsp+0x30]
   140059fdd:	add    rsp,0x20
   140059fe1:	pop    rdi
   140059fe2:	ret    
   140059fe3:	int3   
   140059fe4:	mov    rax,rsp
   140059fe7:	mov    QWORD PTR [rax+0x8],rbx
   140059feb:	mov    QWORD PTR [rax+0x10],rbp
   140059fef:	mov    QWORD PTR [rax+0x18],rsi
   140059ff3:	mov    QWORD PTR [rax+0x20],rdi
   140059ff7:	push   r14
   140059ff9:	sub    rsp,0x30
   140059ffd:	mov    rdi,r9
   14005a000:	mov    rsi,r8
   14005a003:	mov    rbp,rdx
   14005a006:	lea    r9,[rip+0x1761f]        # 0x14007162c
   14005a00d:	mov    r14,rcx
   14005a010:	lea    r8,[rip+0x17611]        # 0x140071628
   14005a017:	lea    rdx,[rip+0x17612]        # 0x140071630
   14005a01e:	mov    ecx,0x3
   14005a023:	call   0x140059cc0
   14005a028:	mov    rbx,rax
   14005a02b:	test   rax,rax
   14005a02e:	je     0x14005a05a
   14005a030:	mov    rcx,rax
   14005a033:	call   0x140056aac
   14005a038:	mov    rcx,QWORD PTR [rsp+0x68]
   14005a03d:	mov    r9,rdi
   14005a040:	mov    QWORD PTR [rsp+0x28],rcx
   14005a045:	mov    r8,rsi
   14005a048:	mov    ecx,DWORD PTR [rsp+0x60]
   14005a04c:	mov    rdx,rbp
   14005a04f:	mov    DWORD PTR [rsp+0x20],ecx
   14005a053:	mov    rcx,r14
   14005a056:	call   rbx
   14005a058:	jmp    0x14005a05f
   14005a05a:	mov    eax,0x32
   14005a05f:	mov    rbx,QWORD PTR [rsp+0x40]
   14005a064:	mov    rbp,QWORD PTR [rsp+0x48]
   14005a069:	mov    rsi,QWORD PTR [rsp+0x50]
   14005a06e:	mov    rdi,QWORD PTR [rsp+0x58]
   14005a073:	add    rsp,0x30
   14005a077:	pop    r14
   14005a079:	ret    
   14005a07a:	int3   
   14005a07b:	int3   
   14005a07c:	mov    QWORD PTR [rsp+0x8],rbx
   14005a081:	push   rdi
   14005a082:	sub    rsp,0x20
   14005a086:	mov    rdi,rcx
   14005a089:	lea    r9,[rip+0x175c0]        # 0x140071650
   14005a090:	mov    ecx,0x4
   14005a095:	lea    r8,[rip+0x175ac]        # 0x140071648
   14005a09c:	lea    rdx,[rip+0x175ad]        # 0x140071650
   14005a0a3:	call   0x140059cc0
   14005a0a8:	mov    rbx,rax
   14005a0ab:	test   rax,rax
   14005a0ae:	je     0x14005a0bf
   14005a0b0:	mov    rcx,rax
   14005a0b3:	call   0x140056aac
   14005a0b8:	mov    rcx,rdi
   14005a0bb:	call   rbx
   14005a0bd:	jmp    0x14005a0c5
   14005a0bf:	call   QWORD PTR [rip+0x1235b]        # 0x14006c420
   14005a0c5:	mov    rbx,QWORD PTR [rsp+0x30]
   14005a0ca:	add    rsp,0x20
   14005a0ce:	pop    rdi
   14005a0cf:	ret    
   14005a0d0:	mov    QWORD PTR [rsp+0x8],rbx
   14005a0d5:	push   rdi
   14005a0d6:	sub    rsp,0x20
   14005a0da:	mov    ebx,ecx
   14005a0dc:	lea    r9,[rip+0x17585]        # 0x140071668
   14005a0e3:	mov    ecx,0x5
   14005a0e8:	lea    r8,[rip+0x17571]        # 0x140071660
   14005a0ef:	lea    rdx,[rip+0x17572]        # 0x140071668
   14005a0f6:	call   0x140059cc0
   14005a0fb:	mov    rdi,rax
   14005a0fe:	test   rax,rax
   14005a101:	je     0x14005a111
   14005a103:	mov    rcx,rax
   14005a106:	call   0x140056aac
   14005a10b:	mov    ecx,ebx
   14005a10d:	call   rdi
   14005a10f:	jmp    0x14005a119
   14005a111:	mov    ecx,ebx
   14005a113:	call   QWORD PTR [rip+0x1231f]        # 0x14006c438
   14005a119:	mov    rbx,QWORD PTR [rsp+0x30]
   14005a11e:	add    rsp,0x20
   14005a122:	pop    rdi
   14005a123:	ret    
   14005a124:	mov    QWORD PTR [rsp+0x8],rbx
   14005a129:	push   rdi
   14005a12a:	sub    rsp,0x20
   14005a12e:	mov    ebx,ecx
   14005a130:	lea    r9,[rip+0x17541]        # 0x140071678
   14005a137:	mov    ecx,0x6
   14005a13c:	lea    r8,[rip+0x1752d]        # 0x140071670
   14005a143:	lea    rdx,[rip+0x1752e]        # 0x140071678
   14005a14a:	call   0x140059cc0
   14005a14f:	mov    rdi,rax
   14005a152:	test   rax,rax
   14005a155:	je     0x14005a165
   14005a157:	mov    rcx,rax
   14005a15a:	call   0x140056aac
   14005a15f:	mov    ecx,ebx
   14005a161:	call   rdi
   14005a163:	jmp    0x14005a16d
   14005a165:	mov    ecx,ebx
   14005a167:	call   QWORD PTR [rip+0x122bb]        # 0x14006c428
   14005a16d:	mov    rbx,QWORD PTR [rsp+0x30]
   14005a172:	add    rsp,0x20
   14005a176:	pop    rdi
   14005a177:	ret    
   14005a178:	mov    QWORD PTR [rsp+0x8],rbx
   14005a17d:	mov    QWORD PTR [rsp+0x10],rsi
   14005a182:	push   rdi
   14005a183:	sub    rsp,0x20
   14005a187:	mov    rbx,rdx
   14005a18a:	lea    r9,[rip+0x174ff]        # 0x140071690
   14005a191:	mov    edi,ecx
   14005a193:	lea    rdx,[rip+0x174f6]        # 0x140071690
   14005a19a:	mov    ecx,0x7
   14005a19f:	lea    r8,[rip+0x174e2]        # 0x140071688
   14005a1a6:	call   0x140059cc0
   14005a1ab:	mov    rsi,rax
   14005a1ae:	test   rax,rax
   14005a1b1:	je     0x14005a1c4
   14005a1b3:	mov    rcx,rax
   14005a1b6:	call   0x140056aac
   14005a1bb:	mov    rdx,rbx
   14005a1be:	mov    ecx,edi
   14005a1c0:	call   rsi
   14005a1c2:	jmp    0x14005a1cf
   14005a1c4:	mov    rdx,rbx
   14005a1c7:	mov    ecx,edi
   14005a1c9:	call   QWORD PTR [rip+0x12261]        # 0x14006c430
   14005a1cf:	mov    rbx,QWORD PTR [rsp+0x30]
   14005a1d4:	mov    rsi,QWORD PTR [rsp+0x38]
   14005a1d9:	add    rsp,0x20
   14005a1dd:	pop    rdi
   14005a1de:	ret    
   14005a1df:	int3   
   14005a1e0:	mov    QWORD PTR [rsp+0x8],rbx
   14005a1e5:	mov    QWORD PTR [rsp+0x10],rbp
   14005a1ea:	mov    QWORD PTR [rsp+0x18],rsi
   14005a1ef:	push   rdi
   14005a1f0:	sub    rsp,0x20
   14005a1f4:	mov    ebp,r8d
   14005a1f7:	lea    r9,[rip+0x174aa]        # 0x1400716a8
   14005a1fe:	mov    ebx,edx
   14005a200:	lea    r8,[rip+0x17499]        # 0x1400716a0
   14005a207:	mov    rdi,rcx
   14005a20a:	lea    rdx,[rip+0x17497]        # 0x1400716a8
   14005a211:	mov    ecx,0x8
   14005a216:	call   0x140059cc0
   14005a21b:	mov    rsi,rax
   14005a21e:	test   rax,rax
   14005a221:	je     0x14005a237
   14005a223:	mov    rcx,rax
   14005a226:	call   0x140056aac
   14005a22b:	mov    r8d,ebp
   14005a22e:	mov    edx,ebx
   14005a230:	mov    rcx,rdi
   14005a233:	call   rsi
   14005a235:	jmp    0x14005a242
   14005a237:	mov    edx,ebx
   14005a239:	mov    rcx,rdi
   14005a23c:	call   QWORD PTR [rip+0x121d6]        # 0x14006c418
   14005a242:	mov    rbx,QWORD PTR [rsp+0x30]
   14005a247:	mov    rbp,QWORD PTR [rsp+0x38]
   14005a24c:	mov    rsi,QWORD PTR [rsp+0x40]
   14005a251:	add    rsp,0x20
   14005a255:	pop    rdi
   14005a256:	ret    
   14005a257:	int3   
   14005a258:	mov    QWORD PTR [rsp+0x8],rdi
   14005a25d:	mov    rdx,QWORD PTR [rip+0x27c7c]        # 0x140081ee0
   14005a264:	lea    rdi,[rip+0x45175]        # 0x14009f3e0
   14005a26b:	mov    eax,edx
   14005a26d:	mov    ecx,0x40
   14005a272:	and    eax,0x3f
   14005a275:	sub    ecx,eax
   14005a277:	xor    eax,eax
   14005a279:	ror    rax,cl
   14005a27c:	mov    ecx,0x9
   14005a281:	xor    rax,rdx
   14005a284:	rep stos QWORD PTR es:[rdi],rax
   14005a287:	mov    rdi,QWORD PTR [rsp+0x8]
   14005a28c:	ret    
   14005a28d:	int3   
   14005a28e:	int3   
   14005a28f:	int3   
   14005a290:	test   cl,cl
   14005a292:	jne    0x14005a2cd
   14005a294:	push   rbx
   14005a295:	sub    rsp,0x20
   14005a299:	lea    rbx,[rip+0x45120]        # 0x14009f3c0
   14005a2a0:	mov    rcx,QWORD PTR [rbx]
   14005a2a3:	test   rcx,rcx
   14005a2a6:	je     0x14005a2b8
   14005a2a8:	cmp    rcx,0xffffffffffffffff
   14005a2ac:	je     0x14005a2b4
   14005a2ae:	call   QWORD PTR [rip+0x11ee4]        # 0x14006c198
   14005a2b4:	and    QWORD PTR [rbx],0x0
   14005a2b8:	add    rbx,0x8
   14005a2bc:	lea    rax,[rip+0x4511d]        # 0x14009f3e0
   14005a2c3:	cmp    rbx,rax
   14005a2c6:	jne    0x14005a2a0
   14005a2c8:	add    rsp,0x20
   14005a2cc:	pop    rbx
   14005a2cd:	ret    
   14005a2ce:	int3   
   14005a2cf:	int3   
   14005a2d0:	xchg   ax,ax
   14005a2d2:	ret    
   14005a2d3:	int3   
   14005a2d4:	mov    QWORD PTR [rsp+0x10],rbx
   14005a2d9:	push   rbp
   14005a2da:	lea    rbp,[rsp-0x190]
   14005a2e2:	sub    rsp,0x290
   14005a2e9:	mov    rax,QWORD PTR [rip+0x27bf0]        # 0x140081ee0
   14005a2f0:	xor    rax,rsp
   14005a2f3:	mov    QWORD PTR [rbp+0x180],rax
   14005a2fa:	mov    r8d,0x104
   14005a300:	lea    rdx,[rsp+0x70]
   14005a305:	call   QWORD PTR [rip+0x11e65]        # 0x14006c170
   14005a30b:	xor    ebx,ebx
   14005a30d:	test   eax,eax
   14005a30f:	jne    0x14005a316
   14005a311:	mov    WORD PTR [rsp+0x70],bx
   14005a316:	cmp    eax,0x104
   14005a31b:	jne    0x14005a32e
   14005a31d:	call   QWORD PTR [rip+0x11ea5]        # 0x14006c1c8
   14005a323:	test   eax,eax
   14005a325:	jne    0x14005a32e
   14005a327:	mov    WORD PTR [rbp+0x176],bx
   14005a32e:	cmp    DWORD PTR [rip+0x27bdb],0x5        # 0x140081f10
   14005a335:	jbe    0x14005a3cc
   14005a33b:	movabs rdx,0x200000000000
   14005a345:	test   QWORD PTR [rip+0x27bd4],rdx        # 0x140081f20
   14005a34c:	je     0x14005a3cc
   14005a34e:	mov    rax,QWORD PTR [rip+0x27bd3]        # 0x140081f28
   14005a355:	and    rax,rdx
   14005a358:	cmp    rax,QWORD PTR [rip+0x27bc9]        # 0x140081f28
   14005a35f:	jne    0x14005a3cc
   14005a361:	lea    rax,[rip+0x17370]        # 0x1400716d8
   14005a368:	mov    QWORD PTR [rsp+0x58],0xe
   14005a371:	mov    QWORD PTR [rsp+0x50],rax
   14005a376:	lea    rcx,[rsp+0x70]
   14005a37b:	or     rax,0xffffffffffffffff
   14005a37f:	inc    rax
   14005a382:	cmp    WORD PTR [rcx+rax*2],bx
   14005a386:	jne    0x14005a37f
   14005a388:	lea    rcx,[rsp+0x70]
   14005a38d:	mov    DWORD PTR [rsp+0x6c],ebx
   14005a391:	lea    eax,[rax*2+0x2]
   14005a398:	mov    QWORD PTR [rsp+0x60],rcx
   14005a39d:	mov    DWORD PTR [rsp+0x68],eax
   14005a3a1:	lea    rax,[rsp+0x30]
   14005a3a6:	xor    r9d,r9d
   14005a3a9:	mov    QWORD PTR [rsp+0x28],rax
   14005a3ae:	lea    rdx,[rip+0x1f0f4]        # 0x1400794a9
   14005a3b5:	xor    r8d,r8d
   14005a3b8:	mov    DWORD PTR [rsp+0x20],0x4
   14005a3c0:	lea    rcx,[rip+0x27b49]        # 0x140081f10
   14005a3c7:	call   0x140001140
   14005a3cc:	mov    rcx,QWORD PTR [rbp+0x180]
   14005a3d3:	xor    rcx,rsp
   14005a3d6:	call   0x140055f90
   14005a3db:	mov    rbx,QWORD PTR [rsp+0x2a8]
   14005a3e3:	add    rsp,0x290
   14005a3ea:	pop    rbp
   14005a3eb:	ret    
   14005a3ec:	mov    QWORD PTR [rsp+0x10],rbx
   14005a3f1:	push   rbp
   14005a3f2:	lea    rbp,[rsp-0x190]
   14005a3fa:	sub    rsp,0x290
   14005a401:	mov    rax,QWORD PTR [rip+0x27ad8]        # 0x140081ee0
   14005a408:	xor    rax,rsp
   14005a40b:	mov    QWORD PTR [rbp+0x180],rax
   14005a412:	mov    r8d,0x104
   14005a418:	lea    rdx,[rsp+0x70]
   14005a41d:	call   QWORD PTR [rip+0x11d4d]        # 0x14006c170
   14005a423:	xor    ebx,ebx
   14005a425:	test   eax,eax
   14005a427:	jne    0x14005a42e
   14005a429:	mov    WORD PTR [rsp+0x70],bx
   14005a42e:	cmp    eax,0x104
   14005a433:	jne    0x14005a446
   14005a435:	call   QWORD PTR [rip+0x11d8d]        # 0x14006c1c8
   14005a43b:	test   eax,eax
   14005a43d:	jne    0x14005a446
   14005a43f:	mov    WORD PTR [rbp+0x176],bx
   14005a446:	cmp    DWORD PTR [rip+0x27ac3],0x5        # 0x140081f10
   14005a44d:	jbe    0x14005a4e4
   14005a453:	movabs rdx,0x200000000000
   14005a45d:	test   QWORD PTR [rip+0x27abc],rdx        # 0x140081f20
   14005a464:	je     0x14005a4e4
   14005a466:	mov    rax,QWORD PTR [rip+0x27abb]        # 0x140081f28
   14005a46d:	and    rax,rdx
   14005a470:	cmp    rax,QWORD PTR [rip+0x27ab1]        # 0x140081f28
   14005a477:	jne    0x14005a4e4
   14005a479:	lea    rax,[rip+0x17268]        # 0x1400716e8
   14005a480:	mov    QWORD PTR [rsp+0x58],0xf
   14005a489:	mov    QWORD PTR [rsp+0x50],rax
   14005a48e:	lea    rcx,[rsp+0x70]
   14005a493:	or     rax,0xffffffffffffffff
   14005a497:	inc    rax
   14005a49a:	cmp    WORD PTR [rcx+rax*2],bx
   14005a49e:	jne    0x14005a497
   14005a4a0:	lea    rcx,[rsp+0x70]
   14005a4a5:	mov    DWORD PTR [rsp+0x6c],ebx
   14005a4a9:	lea    eax,[rax*2+0x2]
   14005a4b0:	mov    QWORD PTR [rsp+0x60],rcx
   14005a4b5:	mov    DWORD PTR [rsp+0x68],eax
   14005a4b9:	lea    rax,[rsp+0x30]
   14005a4be:	xor    r9d,r9d
   14005a4c1:	mov    QWORD PTR [rsp+0x28],rax
   14005a4c6:	lea    rdx,[rip+0x1f018]        # 0x1400794e5
   14005a4cd:	xor    r8d,r8d
   14005a4d0:	mov    DWORD PTR [rsp+0x20],0x4
   14005a4d8:	lea    rcx,[rip+0x27a31]        # 0x140081f10
   14005a4df:	call   0x140001140
   14005a4e4:	mov    rcx,QWORD PTR [rbp+0x180]
   14005a4eb:	xor    rcx,rsp
   14005a4ee:	call   0x140055f90
   14005a4f3:	mov    rbx,QWORD PTR [rsp+0x2a8]
   14005a4fb:	add    rsp,0x290
   14005a502:	pop    rbp
   14005a503:	ret    
   14005a504:	xor    r9d,r9d
   14005a507:	lea    rcx,[rip+0x27a02]        # 0x140081f10
   14005a50e:	xor    r8d,r8d
   14005a511:	xor    edx,edx
   14005a513:	jmp    0x140001000
   14005a518:	sub    rsp,0x28
   14005a51c:	mov    rcx,QWORD PTR [rip+0x27a0d]        # 0x140081f30
   14005a523:	call   0x140059f90
   14005a528:	and    QWORD PTR [rip+0x27a00],0x0        # 0x140081f30
   14005a530:	add    rsp,0x28
   14005a534:	ret    
   14005a535:	int3   
   14005a536:	int3   
   14005a537:	int3   
   14005a538:	cmp    rcx,rdx
   14005a53b:	je     0x14005a556
   14005a53d:	add    rdx,0x9
   14005a541:	lea    rax,[rcx+0x9]
   14005a545:	sub    rdx,rax
   14005a548:	mov    cl,BYTE PTR [rax]
   14005a54a:	cmp    cl,BYTE PTR [rax+rdx*1]
   14005a54d:	jne    0x14005a559
   14005a54f:	inc    rax
   14005a552:	test   cl,cl
   14005a554:	jne    0x14005a548
   14005a556:	xor    eax,eax
   14005a558:	ret    
   14005a559:	sbb    eax,eax
   14005a55b:	or     eax,0x1
   14005a55e:	ret    
   14005a55f:	int3   
   14005a560:	sub    rsp,0x28
   14005a564:	test   rcx,rcx
   14005a567:	je     0x14005a57a
   14005a569:	lea    rax,[rip+0x44ec0]        # 0x14009f430
   14005a570:	cmp    rcx,rax
   14005a573:	je     0x14005a57a
   14005a575:	call   0x1400609cc
   14005a57a:	add    rsp,0x28
   14005a57e:	ret    
   14005a57f:	int3   
   14005a580:	sub    rsp,0x28
   14005a584:	call   0x14005a59c
   14005a589:	test   rax,rax
   14005a58c:	je     0x14005a593
   14005a58e:	add    rsp,0x28
   14005a592:	ret    
   14005a593:	call   0x140060974
   14005a598:	int3   
   14005a599:	int3   
   14005a59a:	int3   
   14005a59b:	int3   
   14005a59c:	mov    QWORD PTR [rsp+0x8],rbx
   14005a5a1:	mov    QWORD PTR [rsp+0x10],rsi
   14005a5a6:	push   rdi
   14005a5a7:	sub    rsp,0x20
   14005a5ab:	cmp    DWORD PTR [rip+0x279ae],0xffffffff        # 0x140081f60
   14005a5b2:	jne    0x14005a5bb
   14005a5b4:	xor    eax,eax
   14005a5b6:	jmp    0x14005a644
   14005a5bb:	call   QWORD PTR [rip+0x11c07]        # 0x14006c1c8
   14005a5c1:	mov    ecx,DWORD PTR [rip+0x27999]        # 0x140081f60
   14005a5c7:	mov    edi,eax
   14005a5c9:	call   0x14005a124
   14005a5ce:	or     rdx,0xffffffffffffffff
   14005a5d2:	xor    esi,esi
   14005a5d4:	cmp    rax,rdx
   14005a5d7:	je     0x14005a639
   14005a5d9:	test   rax,rax
   14005a5dc:	je     0x14005a5e3
   14005a5de:	mov    rsi,rax
   14005a5e1:	jmp    0x14005a639
   14005a5e3:	mov    ecx,DWORD PTR [rip+0x27977]        # 0x140081f60
   14005a5e9:	call   0x14005a178
   14005a5ee:	test   eax,eax
   14005a5f0:	je     0x14005a639
   14005a5f2:	mov    edx,0x78
   14005a5f7:	lea    ecx,[rdx-0x77]
   14005a5fa:	call   0x140060a6c
   14005a5ff:	mov    ecx,DWORD PTR [rip+0x2795b]        # 0x140081f60
   14005a605:	mov    rbx,rax
   14005a608:	test   rax,rax
   14005a60b:	je     0x14005a61f
   14005a60d:	mov    rdx,rax
   14005a610:	call   0x14005a178
   14005a615:	test   eax,eax
   14005a617:	jne    0x14005a628
   14005a619:	mov    ecx,DWORD PTR [rip+0x27941]        # 0x140081f60
   14005a61f:	xor    edx,edx
   14005a621:	call   0x14005a178
   14005a626:	jmp    0x14005a631
   14005a628:	mov    rcx,rbx
   14005a62b:	mov    rbx,rsi
   14005a62e:	mov    rsi,rcx
   14005a631:	mov    rcx,rbx
   14005a634:	call   0x1400609cc
   14005a639:	mov    ecx,edi
   14005a63b:	call   QWORD PTR [rip+0x11c7f]        # 0x14006c2c0
   14005a641:	mov    rax,rsi
   14005a644:	mov    rbx,QWORD PTR [rsp+0x30]
   14005a649:	mov    rsi,QWORD PTR [rsp+0x38]
   14005a64e:	add    rsp,0x20
   14005a652:	pop    rdi
   14005a653:	ret    
   14005a654:	sub    rsp,0x28
   14005a658:	lea    rcx,[rip+0xffffffffffffff01]        # 0x14005a560
   14005a65f:	call   0x14005a07c
   14005a664:	mov    DWORD PTR [rip+0x278f6],eax        # 0x140081f60
   14005a66a:	cmp    eax,0xffffffff
   14005a66d:	jne    0x14005a673
   14005a66f:	xor    al,al
   14005a671:	jmp    0x14005a68e
   14005a673:	lea    rdx,[rip+0x44db6]        # 0x14009f430
   14005a67a:	mov    ecx,eax
   14005a67c:	call   0x14005a178
   14005a681:	test   eax,eax
   14005a683:	jne    0x14005a68c
   14005a685:	call   0x14005a694
   14005a68a:	jmp    0x14005a66f
   14005a68c:	mov    al,0x1
   14005a68e:	add    rsp,0x28
   14005a692:	ret    
   14005a693:	int3   
   14005a694:	sub    rsp,0x28
   14005a698:	mov    ecx,DWORD PTR [rip+0x278c2]        # 0x140081f60
   14005a69e:	cmp    ecx,0xffffffff
   14005a6a1:	je     0x14005a6af
   14005a6a3:	call   0x14005a0d0
   14005a6a8:	or     DWORD PTR [rip+0x278b1],0xffffffff        # 0x140081f60
   14005a6af:	mov    al,0x1
   14005a6b1:	add    rsp,0x28
   14005a6b5:	ret    
   14005a6b6:	int3   
   14005a6b7:	int3   
   14005a6b8:	sub    rsp,0x28
   14005a6bc:	movsxd r9,DWORD PTR [r8+0x1c]
   14005a6c0:	mov    r10,r8
   14005a6c3:	mov    rax,QWORD PTR [rcx]
   14005a6c6:	mov    eax,DWORD PTR [r9+rax*1]
   14005a6ca:	cmp    eax,0xfffffffe
   14005a6cd:	jne    0x14005a6da
   14005a6cf:	mov    r8,QWORD PTR [rdx]
   14005a6d2:	mov    rcx,r10
   14005a6d5:	call   0x14005a75c
   14005a6da:	add    rsp,0x28
   14005a6de:	ret    
   14005a6df:	int3   
   14005a6e0:	rex push rbx
   14005a6e2:	sub    rsp,0x20
   14005a6e6:	lea    r9,[rsp+0x40]
   14005a6eb:	mov    rbx,r8
   14005a6ee:	call   0x14005880c
   14005a6f3:	mov    rcx,QWORD PTR [rax]
   14005a6f6:	movsxd rax,DWORD PTR [rbx+0x1c]
   14005a6fa:	mov    QWORD PTR [rsp+0x40],rcx
   14005a6ff:	mov    eax,DWORD PTR [rax+rcx*1+0x4]
   14005a703:	add    rsp,0x20
   14005a707:	pop    rbx
   14005a708:	ret    
   14005a709:	int3   
   14005a70a:	int3   
   14005a70b:	int3   
   14005a70c:	movsxd rdx,DWORD PTR [r8+0x1c]
   14005a710:	mov    rax,QWORD PTR [rcx]
   14005a713:	mov    DWORD PTR [rdx+rax*1],r9d
   14005a717:	ret    
   14005a718:	mov    QWORD PTR [rsp+0x8],rbx
   14005a71d:	push   rdi
   14005a71e:	sub    rsp,0x20
   14005a722:	mov    edi,r9d
   14005a725:	mov    rbx,r8
   14005a728:	lea    r9,[rsp+0x40]
   14005a72d:	call   0x14005880c
   14005a732:	mov    rcx,QWORD PTR [rax]
   14005a735:	movsxd rax,DWORD PTR [rbx+0x1c]
   14005a739:	mov    QWORD PTR [rsp+0x40],rcx
   14005a73e:	cmp    edi,DWORD PTR [rax+rcx*1+0x4]
   14005a742:	jle    0x14005a748
   14005a744:	mov    DWORD PTR [rax+rcx*1+0x4],edi
   14005a748:	mov    rbx,QWORD PTR [rsp+0x30]
   14005a74d:	add    rsp,0x20
   14005a751:	pop    rdi
   14005a752:	ret    
   14005a753:	int3   
   14005a754:	mov    r8,QWORD PTR [rdx]
   14005a757:	jmp    0x14005a75c
   14005a75c:	rex push rbx
   14005a75e:	sub    rsp,0x20
   14005a762:	mov    rbx,r8
   14005a765:	test   rcx,rcx
   14005a768:	je     0x14005a7c2
   14005a76a:	movsxd r10,DWORD PTR [rcx+0x18]
   14005a76e:	mov    r9,QWORD PTR [rdx+0x8]
   14005a772:	mov    r11d,DWORD PTR [rcx+0x14]
   14005a776:	lea    rax,[r9+r10*1]
   14005a77a:	test   rax,rax
   14005a77d:	je     0x14005a7bc
   14005a77f:	xor    r8d,r8d
   14005a782:	test   r11d,r11d
   14005a785:	je     0x14005a7b7
   14005a787:	lea    rcx,[r10+r8*8]
   14005a78b:	movsxd rdx,DWORD PTR [rcx+r9*1]
   14005a78f:	add    rdx,r9
   14005a792:	cmp    rbx,rdx
   14005a795:	jl     0x14005a79f
   14005a797:	inc    r8d
   14005a79a:	cmp    r8d,r11d
   14005a79d:	jb     0x14005a787
   14005a79f:	test   r8d,r8d
   14005a7a2:	je     0x14005a7b7
   14005a7a4:	lea    ecx,[r8-0x1]
   14005a7a8:	lea    rax,[r9+rcx*8]
   14005a7ac:	mov    eax,DWORD PTR [rax+r10*1+0x4]
   14005a7b1:	add    rsp,0x20
   14005a7b5:	pop    rbx
   14005a7b6:	ret    
   14005a7b7:	or     eax,0xffffffff
   14005a7ba:	jmp    0x14005a7b1
   14005a7bc:	call   0x14005f654
   14005a7c1:	int3   
   14005a7c2:	call   0x14005f654
   14005a7c7:	int3   
   14005a7c8:	int3   
   14005a7c9:	int3   
   14005a7ca:	int3   
   14005a7cb:	int3   
   14005a7cc:	int3   
   14005a7cd:	int3   
   14005a7ce:	int3   
   14005a7cf:	int3   
   14005a7d0:	int3   
   14005a7d1:	int3   
   14005a7d2:	int3   
   14005a7d3:	int3   
   14005a7d4:	int3   
   14005a7d5:	int3   
   14005a7d6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14005a7e0:	sub    rsp,0x28
   14005a7e4:	mov    QWORD PTR [rsp+0x30],rcx
   14005a7e9:	mov    QWORD PTR [rsp+0x38],rdx
   14005a7ee:	mov    DWORD PTR [rsp+0x40],r8d
   14005a7f3:	mov    rdx,QWORD PTR [rdx]
   14005a7f6:	mov    rax,rcx
   14005a7f9:	call   0x14005a860
   14005a7fe:	call   rax
   14005a800:	call   0x14005a890
   14005a805:	mov    rcx,rax
   14005a808:	mov    rdx,QWORD PTR [rsp+0x38]
   14005a80d:	mov    rdx,QWORD PTR [rdx]
   14005a810:	mov    r8d,0x2
   14005a816:	call   0x14005a860
   14005a81b:	add    rsp,0x28
   14005a81f:	ret    
   14005a820:	int3   
   14005a821:	int3   
   14005a822:	int3   
   14005a823:	int3   
   14005a824:	int3   
   14005a825:	int3   
   14005a826:	data16 nop WORD PTR [rax+rax*1+0x0]
   14005a830:	sub    rsp,0x4d8
   14005a837:	xor    r8,r8
   14005a83a:	xor    r9,r9
   14005a83d:	mov    QWORD PTR [rsp+0x20],rsp
   14005a842:	mov    QWORD PTR [rsp+0x28],r8
   14005a847:	call   0x14006a2e4
   14005a84c:	add    rsp,0x4d8
   14005a853:	ret    
   14005a854:	int3   
   14005a855:	int3   
   14005a856:	int3   
   14005a857:	int3   
   14005a858:	int3   
   14005a859:	int3   
   14005a85a:	nop    WORD PTR [rax+rax*1+0x0]
   14005a860:	mov    QWORD PTR [rsp+0x8],rcx
   14005a865:	mov    QWORD PTR [rsp+0x18],rdx
   14005a86a:	mov    DWORD PTR [rsp+0x10],r8d
   14005a86f:	mov    r9,0x19930520
   14005a876:	jmp    0x14005a880
   14005a878:	int3   
   14005a879:	int3   
   14005a87a:	int3   
   14005a87b:	int3   
   14005a87c:	int3   
   14005a87d:	int3   
   14005a87e:	xchg   ax,ax
   14005a880:	ret    
   14005a881:	int3   
   14005a882:	int3   
   14005a883:	int3   
   14005a884:	int3   
   14005a885:	int3   
   14005a886:	int3   
   14005a887:	nop    WORD PTR [rax+rax*1+0x0]
   14005a890:	ret    
   14005a891:	int3   
   14005a892:	int3   
   14005a893:	int3   
   14005a894:	mov    rdx,QWORD PTR [rip+0x27645]        # 0x140081ee0
   14005a89b:	mov    ecx,0x40
   14005a8a0:	mov    eax,edx
   14005a8a2:	and    eax,0x3f
   14005a8a5:	sub    ecx,eax
   14005a8a7:	xor    eax,eax
   14005a8a9:	ror    rax,cl
   14005a8ac:	xor    rax,rdx
   14005a8af:	mov    QWORD PTR [rip+0x44bf2],rax        # 0x14009f4a8
   14005a8b6:	ret    
   14005a8b7:	int3   
   14005a8b8:	rex push rbx
   14005a8ba:	sub    rsp,0x20
   14005a8be:	xor    ebx,ebx
   14005a8c0:	lea    rdx,[rip+0x44be9]        # 0x14009f4b0
   14005a8c7:	xor    r8d,r8d
   14005a8ca:	lea    rcx,[rbx+rbx*4]
   14005a8ce:	lea    rcx,[rdx+rcx*8]
   14005a8d2:	mov    edx,0xfa0
   14005a8d7:	call   0x14005a1e0
   14005a8dc:	test   eax,eax
   14005a8de:	je     0x14005a8f1
   14005a8e0:	inc    DWORD PTR [rip+0x44bf2]        # 0x14009f4d8
   14005a8e6:	inc    ebx
   14005a8e8:	cmp    ebx,0x1
   14005a8eb:	jb     0x14005a8c0
   14005a8ed:	mov    al,0x1
   14005a8ef:	jmp    0x14005a8f8
   14005a8f1:	call   0x14005a900
   14005a8f6:	xor    al,al
   14005a8f8:	add    rsp,0x20
   14005a8fc:	pop    rbx
   14005a8fd:	ret    
   14005a8fe:	int3   
   14005a8ff:	int3   
   14005a900:	rex push rbx
   14005a902:	sub    rsp,0x20
   14005a906:	mov    ebx,DWORD PTR [rip+0x44bcc]        # 0x14009f4d8
   14005a90c:	jmp    0x14005a92b
   14005a90e:	lea    rax,[rip+0x44b9b]        # 0x14009f4b0
   14005a915:	dec    ebx
   14005a917:	lea    rcx,[rbx+rbx*4]
   14005a91b:	lea    rcx,[rax+rcx*8]
   14005a91f:	call   QWORD PTR [rip+0x118fb]        # 0x14006c220
   14005a925:	dec    DWORD PTR [rip+0x44bad]        # 0x14009f4d8
   14005a92b:	test   ebx,ebx
   14005a92d:	jne    0x14005a90e
   14005a92f:	mov    al,0x1
   14005a931:	add    rsp,0x20
   14005a935:	pop    rbx
   14005a936:	ret    
   14005a937:	int3   
   14005a938:	jmp    0x1400609cc
   14005a93d:	int3   
   14005a93e:	int3   
   14005a93f:	int3   
   14005a940:	jmp    0x140060ae4
   14005a945:	int3   
   14005a946:	int3   
   14005a947:	int3   
   14005a948:	int3   
   14005a949:	int3   
   14005a94a:	int3   
   14005a94b:	int3   
   14005a94c:	int3   
   14005a94d:	int3   
   14005a94e:	int3   
   14005a94f:	int3   
   14005a950:	cmp    rdx,rcx
   14005a953:	jbe    0x14005aa1b
   14005a959:	mov    QWORD PTR [rsp+0x20],rbp
   14005a95e:	push   rdi
   14005a95f:	push   r14
   14005a961:	push   r15
   14005a963:	sub    rsp,0x20
   14005a967:	mov    QWORD PTR [rsp+0x40],rbx
   14005a96c:	mov    r14,r9
   14005a96f:	mov    QWORD PTR [rsp+0x48],rsi
   14005a974:	mov    rbp,r8
   14005a977:	mov    QWORD PTR [rsp+0x50],r12
   14005a97c:	mov    rdi,rdx
   14005a97f:	lea    r12,[rcx+r8*1]
   14005a983:	mov    r15,rcx
   14005a986:	data16 nop WORD PTR [rax+rax*1+0x0]
   14005a990:	mov    rbx,r15
   14005a993:	mov    rsi,r12
   14005a996:	cmp    r12,rdi
   14005a999:	ja     0x14005a9c0
   14005a99b:	nop    DWORD PTR [rax+rax*1+0x0]
   14005a9a0:	mov    rcx,r14
   14005a9a3:	call   QWORD PTR [rip+0x11b7f]        # 0x14006c528
   14005a9a9:	mov    rdx,rbx
   14005a9ac:	mov    rcx,rsi
   14005a9af:	call   r14
   14005a9b2:	test   eax,eax
   14005a9b4:	cmovg  rbx,rsi
   14005a9b8:	add    rsi,rbp
   14005a9bb:	cmp    rsi,rdi
   14005a9be:	jbe    0x14005a9a0
   14005a9c0:	mov    r8,rbp
   14005a9c3:	mov    rax,rdi
   14005a9c6:	cmp    rbx,rdi
   14005a9c9:	je     0x14005a9f6
   14005a9cb:	test   rbp,rbp
   14005a9ce:	je     0x14005a9f6
   14005a9d0:	sub    rbx,rdi
   14005a9d3:	nop    DWORD PTR [rax+0x0]
   14005a9d7:	nop    WORD PTR [rax+rax*1+0x0]
   14005a9e0:	movzx  ecx,BYTE PTR [rax]
   14005a9e3:	movzx  edx,BYTE PTR [rbx+rax*1]
   14005a9e7:	mov    BYTE PTR [rbx+rax*1],cl
   14005a9ea:	mov    BYTE PTR [rax],dl
   14005a9ec:	lea    rax,[rax+0x1]
   14005a9f0:	sub    r8,0x1
   14005a9f4:	jne    0x14005a9e0
   14005a9f6:	sub    rdi,rbp
   14005a9f9:	cmp    rdi,r15
   14005a9fc:	ja     0x14005a990
   14005a9fe:	mov    r12,QWORD PTR [rsp+0x50]
   14005aa03:	mov    rsi,QWORD PTR [rsp+0x48]
   14005aa08:	mov    rbx,QWORD PTR [rsp+0x40]
   14005aa0d:	mov    rbp,QWORD PTR [rsp+0x58]
   14005aa12:	add    rsp,0x20
   14005aa16:	pop    r15
   14005aa18:	pop    r14
   14005aa1a:	pop    rdi
   14005aa1b:	ret    
   14005aa1c:	int3   
   14005aa1d:	int3   
   14005aa1e:	int3   
   14005aa1f:	int3   
   14005aa20:	rex push rbp
   14005aa22:	push   r12
   14005aa24:	push   r14
   14005aa26:	sub    rsp,0x440
   14005aa2d:	mov    rax,QWORD PTR [rip+0x274ac]        # 0x140081ee0
   14005aa34:	xor    rax,rsp
   14005aa37:	mov    QWORD PTR [rsp+0x400],rax
   14005aa3f:	mov    r14,r9
   14005aa42:	mov    rbp,r8
   14005aa45:	mov    r12,rcx
   14005aa48:	test   rcx,rcx
   14005aa4b:	jne    0x14005aa67
   14005aa4d:	test   rdx,rdx
   14005aa50:	je     0x14005aa67
   14005aa52:	call   0x140060e94
   14005aa57:	mov    DWORD PTR [rax],0x16
   14005aa5d:	call   0x140060d74
   14005aa62:	jmp    0x14005ad37
   14005aa67:	test   r8,r8
   14005aa6a:	je     0x14005aa52
   14005aa6c:	test   r9,r9
   14005aa6f:	je     0x14005aa52
   14005aa71:	cmp    rdx,0x2
   14005aa75:	jb     0x14005ad37
   14005aa7b:	mov    QWORD PTR [rsp+0x438],rbx
   14005aa83:	mov    QWORD PTR [rsp+0x430],rsi
   14005aa8b:	mov    QWORD PTR [rsp+0x428],rdi
   14005aa93:	mov    QWORD PTR [rsp+0x420],r13
   14005aa9b:	mov    QWORD PTR [rsp+0x418],r15
   14005aaa3:	lea    r15,[rdx-0x1]
   14005aaa7:	imul   r15,rbp
   14005aaab:	add    r15,rcx
   14005aaae:	xor    r13d,r13d
   14005aab1:	xor    edx,edx
   14005aab3:	mov    rax,r15
   14005aab6:	sub    rax,r12
   14005aab9:	div    rbp
   14005aabc:	lea    rsi,[rax+0x1]
   14005aac0:	cmp    rsi,0x8
   14005aac4:	ja     0x14005aaf0
   14005aac6:	mov    r9,r14
   14005aac9:	mov    r8,rbp
   14005aacc:	mov    rdx,r15
   14005aacf:	mov    rcx,r12
   14005aad2:	call   0x14005a950
   14005aad7:	sub    r13,0x1
   14005aadb:	js     0x14005ad0f
   14005aae1:	mov    r12,QWORD PTR [rsp+r13*8+0x20]
   14005aae6:	mov    r15,QWORD PTR [rsp+r13*8+0x210]
   14005aaee:	jmp    0x14005aab1
   14005aaf0:	shr    rsi,1
   14005aaf3:	mov    rcx,r14
   14005aaf6:	imul   rsi,rbp
   14005aafa:	add    rsi,r12
   14005aafd:	call   QWORD PTR [rip+0x11a25]        # 0x14006c528
   14005ab03:	mov    rdx,rsi
   14005ab06:	mov    rcx,r12
   14005ab09:	call   r14
   14005ab0c:	test   eax,eax
   14005ab0e:	jle    0x14005ab39
   14005ab10:	mov    r8,rbp
   14005ab13:	mov    rdx,rsi
   14005ab16:	cmp    r12,rsi
   14005ab19:	je     0x14005ab39
   14005ab1b:	mov    r9,r12
   14005ab1e:	sub    r9,rsi
   14005ab21:	movzx  eax,BYTE PTR [rdx]
   14005ab24:	movzx  ecx,BYTE PTR [r9+rdx*1]
   14005ab29:	mov    BYTE PTR [r9+rdx*1],al
   14005ab2d:	mov    BYTE PTR [rdx],cl
   14005ab2f:	lea    rdx,[rdx+0x1]
   14005ab33:	sub    r8,0x1
   14005ab37:	jne    0x14005ab21
   14005ab39:	mov    rcx,r14
   14005ab3c:	call   QWORD PTR [rip+0x119e6]        # 0x14006c528
   14005ab42:	mov    rdx,r15
   14005ab45:	mov    rcx,r12
   14005ab48:	call   r14
   14005ab4b:	test   eax,eax
   14005ab4d:	jle    0x14005ab78
   14005ab4f:	mov    r8,rbp
   14005ab52:	mov    rdx,r15
   14005ab55:	cmp    r12,r15
   14005ab58:	je     0x14005ab78
   14005ab5a:	mov    r9,r12
   14005ab5d:	sub    r9,r15
   14005ab60:	movzx  eax,BYTE PTR [rdx]
   14005ab63:	movzx  ecx,BYTE PTR [r9+rdx*1]
   14005ab68:	mov    BYTE PTR [r9+rdx*1],al
   14005ab6c:	mov    BYTE PTR [rdx],cl
   14005ab6e:	lea    rdx,[rdx+0x1]
   14005ab72:	sub    r8,0x1
   14005ab76:	jne    0x14005ab60
   14005ab78:	mov    rcx,r14
   14005ab7b:	call   QWORD PTR [rip+0x119a7]        # 0x14006c528
   14005ab81:	mov    rdx,r15
   14005ab84:	mov    rcx,rsi
   14005ab87:	call   r14
   14005ab8a:	test   eax,eax
   14005ab8c:	jle    0x14005abb8
   14005ab8e:	mov    r8,rbp
   14005ab91:	mov    rdx,r15
   14005ab94:	cmp    rsi,r15
   14005ab97:	je     0x14005abb8
   14005ab99:	mov    r9,rsi
   14005ab9c:	sub    r9,r15
   14005ab9f:	nop
   14005aba0:	movzx  eax,BYTE PTR [rdx]
   14005aba3:	movzx  ecx,BYTE PTR [r9+rdx*1]
   14005aba8:	mov    BYTE PTR [r9+rdx*1],al
   14005abac:	mov    BYTE PTR [rdx],cl
   14005abae:	lea    rdx,[rdx+0x1]
   14005abb2:	sub    r8,0x1
   14005abb6:	jne    0x14005aba0
   14005abb8:	mov    rbx,r12
   14005abbb:	mov    rdi,r15
   14005abbe:	xchg   ax,ax
   14005abc0:	cmp    rsi,rbx
   14005abc3:	jbe    0x14005abe8
   14005abc5:	add    rbx,rbp
   14005abc8:	cmp    rbx,rsi
   14005abcb:	jae    0x14005abe8
   14005abcd:	mov    rcx,r14
   14005abd0:	call   QWORD PTR [rip+0x11952]        # 0x14006c528
   14005abd6:	mov    rdx,rsi
   14005abd9:	mov    rcx,rbx
   14005abdc:	call   r14
   14005abdf:	test   eax,eax
   14005abe1:	jle    0x14005abc5
   14005abe3:	cmp    rsi,rbx
   14005abe6:	ja     0x14005ac06
   14005abe8:	add    rbx,rbp
   14005abeb:	cmp    rbx,r15
   14005abee:	ja     0x14005ac06
   14005abf0:	mov    rcx,r14
   14005abf3:	call   QWORD PTR [rip+0x1192f]        # 0x14006c528
   14005abf9:	mov    rdx,rsi
   14005abfc:	mov    rcx,rbx
   14005abff:	call   r14
   14005ac02:	test   eax,eax
   14005ac04:	jle    0x14005abe8
   14005ac06:	sub    rdi,rbp
   14005ac09:	cmp    rdi,rsi
   14005ac0c:	jbe    0x14005ac24
   14005ac0e:	mov    rcx,r14
   14005ac11:	call   QWORD PTR [rip+0x11911]        # 0x14006c528
   14005ac17:	mov    rdx,rsi
   14005ac1a:	mov    rcx,rdi
   14005ac1d:	call   r14
   14005ac20:	test   eax,eax
   14005ac22:	jg     0x14005ac06
   14005ac24:	cmp    rdi,rbx
   14005ac27:	jb     0x14005ac69
   14005ac29:	mov    r8,rbp
   14005ac2c:	mov    rdx,rdi
   14005ac2f:	cmp    rbx,rdi
   14005ac32:	je     0x14005ac58
   14005ac34:	mov    r9,rbx
   14005ac37:	sub    r9,rdi
   14005ac3a:	nop    WORD PTR [rax+rax*1+0x0]
   14005ac40:	movzx  eax,BYTE PTR [rdx]
   14005ac43:	movzx  ecx,BYTE PTR [r9+rdx*1]
   14005ac48:	mov    BYTE PTR [r9+rdx*1],al
   14005ac4c:	mov    BYTE PTR [rdx],cl
   14005ac4e:	lea    rdx,[rdx+0x1]
   14005ac52:	sub    r8,0x1
   14005ac56:	jne    0x14005ac40
   14005ac58:	cmp    rsi,rdi
   14005ac5b:	jne    0x14005abc0
   14005ac61:	mov    rsi,rbx
   14005ac64:	jmp    0x14005abc0
   14005ac69:	add    rdi,rbp
   14005ac6c:	cmp    rsi,rdi
   14005ac6f:	jae    0x14005ac94
   14005ac71:	sub    rdi,rbp
   14005ac74:	cmp    rdi,rsi
   14005ac77:	jbe    0x14005ac94
   14005ac79:	mov    rcx,r14
   14005ac7c:	call   QWORD PTR [rip+0x118a6]        # 0x14006c528
   14005ac82:	mov    rdx,rsi
   14005ac85:	mov    rcx,rdi
   14005ac88:	call   r14
   14005ac8b:	test   eax,eax
   14005ac8d:	je     0x14005ac71
   14005ac8f:	cmp    rsi,rdi
   14005ac92:	jb     0x14005acb2
   14005ac94:	sub    rdi,rbp
   14005ac97:	cmp    rdi,r12
   14005ac9a:	jbe    0x14005acb2
   14005ac9c:	mov    rcx,r14
   14005ac9f:	call   QWORD PTR [rip+0x11883]        # 0x14006c528
   14005aca5:	mov    rdx,rsi
   14005aca8:	mov    rcx,rdi
   14005acab:	call   r14
   14005acae:	test   eax,eax
   14005acb0:	je     0x14005ac94
   14005acb2:	mov    rcx,r15
   14005acb5:	mov    rax,rdi
   14005acb8:	sub    rcx,rbx
   14005acbb:	sub    rax,r12
   14005acbe:	cmp    rax,rcx
   14005acc1:	jl     0x14005ace9
   14005acc3:	cmp    r12,rdi
   14005acc6:	jae    0x14005acd8
   14005acc8:	mov    QWORD PTR [rsp+r13*8+0x20],r12
   14005accd:	mov    QWORD PTR [rsp+r13*8+0x210],rdi
   14005acd5:	inc    r13
   14005acd8:	cmp    rbx,r15
   14005acdb:	jae    0x14005aad7
   14005ace1:	mov    r12,rbx
   14005ace4:	jmp    0x14005aab1
   14005ace9:	cmp    rbx,r15
   14005acec:	jae    0x14005acfe
   14005acee:	mov    QWORD PTR [rsp+r13*8+0x20],rbx
   14005acf3:	mov    QWORD PTR [rsp+r13*8+0x210],r15
   14005acfb:	inc    r13
   14005acfe:	cmp    r12,rdi
   14005ad01:	jae    0x14005aad7
   14005ad07:	mov    r15,rdi
   14005ad0a:	jmp    0x14005aab1
   14005ad0f:	mov    r13,QWORD PTR [rsp+0x420]
   14005ad17:	mov    rdi,QWORD PTR [rsp+0x428]
   14005ad1f:	mov    rsi,QWORD PTR [rsp+0x430]
   14005ad27:	mov    rbx,QWORD PTR [rsp+0x438]
   14005ad2f:	mov    r15,QWORD PTR [rsp+0x418]
   14005ad37:	mov    rcx,QWORD PTR [rsp+0x400]
   14005ad3f:	xor    rcx,rsp
   14005ad42:	call   0x140055f90
   14005ad47:	add    rsp,0x440
   14005ad4e:	pop    r14
   14005ad50:	pop    r12
   14005ad52:	pop    rbp
   14005ad53:	ret    
   14005ad54:	mov    QWORD PTR [rsp+0x8],rbx
   14005ad59:	mov    QWORD PTR [rsp+0x10],rbp
   14005ad5e:	mov    QWORD PTR [rsp+0x18],rsi
   14005ad63:	push   rdi
   14005ad64:	sub    rsp,0x20
   14005ad68:	or     rax,0xffffffffffffffff
   14005ad6c:	mov    rsi,rdx
   14005ad6f:	xor    edx,edx
   14005ad71:	mov    rbp,rcx
   14005ad74:	div    rsi
   14005ad77:	and    rax,0xfffffffffffffffe
   14005ad7b:	cmp    rax,0x2
   14005ad7f:	jae    0x14005ad90
   14005ad81:	call   0x140060e94
   14005ad86:	mov    DWORD PTR [rax],0xc
   14005ad8c:	xor    al,al
   14005ad8e:	jmp    0x14005adeb
   14005ad90:	add    rsi,rsi
   14005ad93:	xor    edi,edi
   14005ad95:	cmp    QWORD PTR [rcx+0x408],rdi
   14005ad9c:	jne    0x14005adab
   14005ad9e:	cmp    rsi,0x400
   14005ada5:	ja     0x14005adab
   14005ada7:	mov    al,0x1
   14005ada9:	jmp    0x14005adeb
   14005adab:	cmp    rsi,QWORD PTR [rcx+0x400]
   14005adb2:	jbe    0x14005ada7
   14005adb4:	mov    rcx,rsi
   14005adb7:	call   0x140060a0c
   14005adbc:	mov    rbx,rax
   14005adbf:	test   rax,rax
   14005adc2:	je     0x14005ade1
   14005adc4:	mov    rcx,QWORD PTR [rbp+0x408]
   14005adcb:	call   0x1400609cc
   14005add0:	mov    QWORD PTR [rbp+0x408],rbx
   14005add7:	mov    dil,0x1
   14005adda:	mov    QWORD PTR [rbp+0x400],rsi
   14005ade1:	xor    ecx,ecx
   14005ade3:	call   0x1400609cc
   14005ade8:	mov    al,dil
   14005adeb:	mov    rbx,QWORD PTR [rsp+0x30]
   14005adf0:	mov    rbp,QWORD PTR [rsp+0x38]
   14005adf5:	mov    rsi,QWORD PTR [rsp+0x40]
   14005adfa:	add    rsp,0x20
   14005adfe:	pop    rdi
   14005adff:	ret    
   14005ae00:	mov    ecx,r8d
   14005ae03:	sub    ecx,0x2
   14005ae06:	je     0x14005ae2c
   14005ae08:	sub    ecx,0x1
   14005ae0b:	je     0x14005ae29
   14005ae0d:	cmp    ecx,0x9
   14005ae10:	je     0x14005ae29
   14005ae12:	cmp    r8d,0xd
   14005ae16:	je     0x14005ae2c
   14005ae18:	sub    dl,0x63
   14005ae1b:	test   dl,0xef
   14005ae1e:	sete   cl
   14005ae21:	xor    eax,eax
   14005ae23:	test   cl,cl
   14005ae25:	sete   al
   14005ae28:	ret    
   14005ae29:	mov    al,0x1
   14005ae2b:	ret    
   14005ae2c:	xor    al,al
   14005ae2e:	ret    
   14005ae2f:	int3   
   14005ae30:	mov    r9d,r8d
   14005ae33:	mov    r10,rcx
   14005ae36:	sub    r9d,0x2
   14005ae3a:	je     0x14005ae71
   14005ae3c:	sub    r9d,0x1
   14005ae40:	je     0x14005ae6e
   14005ae42:	cmp    r9d,0x9
   14005ae46:	je     0x14005ae6e
   14005ae48:	cmp    r8d,0xd
   14005ae4c:	je     0x14005ae6e
   14005ae4e:	shr    r10b,0x2
   14005ae52:	sub    dx,0x63
   14005ae56:	and    r10b,0x1
   14005ae5a:	mov    eax,0xffef
   14005ae5f:	test   ax,dx
   14005ae62:	sete   cl
   14005ae65:	xor    eax,eax
   14005ae67:	cmp    r10b,cl
   14005ae6a:	sete   al
   14005ae6d:	ret    
   14005ae6e:	mov    al,0x1
   14005ae70:	ret    
   14005ae71:	xor    al,al
   14005ae73:	ret    
   14005ae74:	mov    QWORD PTR [rsp+0x8],rbx
   14005ae79:	lea    rax,[rcx+0x58]
   14005ae7d:	mov    r10,rcx
   14005ae80:	mov    rcx,QWORD PTR [rax+0x408]
   14005ae87:	mov    ebx,r8d
   14005ae8a:	test   rcx,rcx
   14005ae8d:	mov    r11d,edx
   14005ae90:	cmove  rcx,rax
   14005ae94:	cmp    QWORD PTR [rax+0x408],0x0
   14005ae9c:	jne    0x14005aea5
   14005ae9e:	mov    eax,0x200
   14005aea3:	jmp    0x14005aeaf
   14005aea5:	mov    rax,QWORD PTR [rax+0x400]
   14005aeac:	shr    rax,1
   14005aeaf:	lea    r8,[rcx-0x1]
   14005aeb3:	add    r8,rax
   14005aeb6:	mov    QWORD PTR [r10+0x48],r8
   14005aeba:	mov    eax,DWORD PTR [r10+0x38]
   14005aebe:	test   eax,eax
   14005aec0:	jg     0x14005aec7
   14005aec2:	test   r11d,r11d
   14005aec5:	je     0x14005aefd
   14005aec7:	dec    eax
   14005aec9:	xor    edx,edx
   14005aecb:	mov    DWORD PTR [r10+0x38],eax
   14005aecf:	mov    eax,r11d
   14005aed2:	div    ebx
   14005aed4:	add    dl,0x30
   14005aed7:	mov    r11d,eax
   14005aeda:	cmp    dl,0x39
   14005aedd:	jle    0x14005aef1
   14005aedf:	mov    al,r9b
   14005aee2:	neg    al
   14005aee4:	sbb    cl,cl
   14005aee6:	and    cl,0xe0
   14005aee9:	add    cl,0x61
   14005aeec:	sub    cl,0x3a
   14005aeef:	add    dl,cl
   14005aef1:	mov    rax,QWORD PTR [r10+0x48]
   14005aef5:	mov    BYTE PTR [rax],dl
   14005aef7:	dec    QWORD PTR [r10+0x48]
   14005aefb:	jmp    0x14005aeba
   14005aefd:	sub    r8d,DWORD PTR [r10+0x48]
   14005af01:	inc    QWORD PTR [r10+0x48]
   14005af05:	mov    rbx,QWORD PTR [rsp+0x8]
   14005af0a:	mov    DWORD PTR [r10+0x50],r8d
   14005af0e:	ret    
   14005af0f:	int3   
   14005af10:	mov    QWORD PTR [rsp+0x8],rbx
   14005af15:	lea    rax,[rcx+0x58]
   14005af19:	mov    ebx,r8d
   14005af1c:	mov    r10,rcx
   14005af1f:	mov    r11,rdx
   14005af22:	mov    rcx,QWORD PTR [rax+0x408]
   14005af29:	test   rcx,rcx
   14005af2c:	cmove  rcx,rax
   14005af30:	cmp    QWORD PTR [rax+0x408],0x0
   14005af38:	jne    0x14005af41
   14005af3a:	mov    eax,0x200
   14005af3f:	jmp    0x14005af4b
   14005af41:	mov    rax,QWORD PTR [rax+0x400]
   14005af48:	shr    rax,1
   14005af4b:	lea    r8,[rcx-0x1]
   14005af4f:	add    r8,rax
   14005af52:	mov    QWORD PTR [r10+0x48],r8
   14005af56:	mov    eax,DWORD PTR [r10+0x38]
   14005af5a:	test   eax,eax
   14005af5c:	jg     0x14005af63
   14005af5e:	test   r11,r11
   14005af61:	je     0x14005af9a
   14005af63:	dec    eax
   14005af65:	xor    edx,edx
   14005af67:	mov    DWORD PTR [r10+0x38],eax
   14005af6b:	mov    rax,r11
   14005af6e:	div    rbx
   14005af71:	add    dl,0x30
   14005af74:	mov    r11,rax
   14005af77:	cmp    dl,0x39
   14005af7a:	jle    0x14005af8e
   14005af7c:	mov    al,r9b
   14005af7f:	neg    al
   14005af81:	sbb    cl,cl
   14005af83:	and    cl,0xe0
   14005af86:	add    cl,0x61
   14005af89:	sub    cl,0x3a
   14005af8c:	add    dl,cl
   14005af8e:	mov    rax,QWORD PTR [r10+0x48]
   14005af92:	mov    BYTE PTR [rax],dl
   14005af94:	dec    QWORD PTR [r10+0x48]
   14005af98:	jmp    0x14005af56
   14005af9a:	sub    r8d,DWORD PTR [r10+0x48]
   14005af9e:	inc    QWORD PTR [r10+0x48]
   14005afa2:	mov    rbx,QWORD PTR [rsp+0x8]
   14005afa7:	mov    DWORD PTR [r10+0x50],r8d
   14005afab:	ret    
   14005afac:	mov    QWORD PTR [rsp+0x8],rbx
   14005afb1:	xor    r11d,r11d
   14005afb4:	mov    rbx,rcx
   14005afb7:	test   r8d,r8d
   14005afba:	jle    0x14005b001
   14005afbc:	mov    r10,QWORD PTR [rbx]
   14005afbf:	mov    rax,QWORD PTR [r10+0x8]
   14005afc3:	cmp    QWORD PTR [r10+0x10],rax
   14005afc7:	jne    0x14005afdb
   14005afc9:	cmp    BYTE PTR [r10+0x18],0x0
   14005afce:	je     0x14005afd5
   14005afd0:	inc    DWORD PTR [r9]
   14005afd3:	jmp    0x14005aff3
   14005afd5:	or     DWORD PTR [r9],0xffffffff
   14005afd9:	jmp    0x14005aff3
   14005afdb:	inc    DWORD PTR [r9]
   14005afde:	mov    rax,QWORD PTR [rbx]
   14005afe1:	inc    QWORD PTR [rax+0x10]
   14005afe5:	mov    rax,QWORD PTR [rbx]
   14005afe8:	mov    rcx,QWORD PTR [rax]
   14005afeb:	mov    BYTE PTR [rcx],dl
   14005afed:	mov    rax,QWORD PTR [rbx]
   14005aff0:	inc    QWORD PTR [rax]
   14005aff3:	cmp    DWORD PTR [r9],0xffffffff
   14005aff7:	je     0x14005b001
   14005aff9:	inc    r11d
   14005affc:	cmp    r11d,r8d
   14005afff:	jl     0x14005afbc
   14005b001:	mov    rbx,QWORD PTR [rsp+0x8]
   14005b006:	ret    
   14005b007:	int3   
   14005b008:	test   r8d,r8d
   14005b00b:	jle    0x14005b075
   14005b00d:	mov    QWORD PTR [rsp+0x8],rbx
   14005b012:	mov    QWORD PTR [rsp+0x10],rdi
   14005b017:	mov    dil,dl
   14005b01a:	mov    rbx,rcx
   14005b01d:	xor    r11d,r11d
   14005b020:	mov    r10,QWORD PTR [rbx]
   14005b023:	mov    rax,QWORD PTR [r10+0x8]
   14005b027:	cmp    QWORD PTR [r10+0x10],rax
   14005b02b:	jne    0x14005b03f
   14005b02d:	cmp    BYTE PTR [r10+0x18],0x0
   14005b032:	je     0x14005b039
   14005b034:	inc    DWORD PTR [r9]
   14005b037:	jmp    0x14005b05d
   14005b039:	or     DWORD PTR [r9],0xffffffff
   14005b03d:	jmp    0x14005b05d
   14005b03f:	inc    DWORD PTR [r9]
   14005b042:	mov    rax,QWORD PTR [rbx]
   14005b045:	movsx  edx,dil
   14005b049:	inc    QWORD PTR [rax+0x10]
   14005b04d:	mov    rax,QWORD PTR [rbx]
   14005b050:	mov    rcx,QWORD PTR [rax]
   14005b053:	mov    WORD PTR [rcx],dx
   14005b056:	mov    rax,QWORD PTR [rbx]
   14005b059:	add    QWORD PTR [rax],0x2
   14005b05d:	cmp    DWORD PTR [r9],0xffffffff
   14005b061:	je     0x14005b06b
   14005b063:	inc    r11d
   14005b066:	cmp    r11d,r8d
   14005b069:	jl     0x14005b020
   14005b06b:	mov    rbx,QWORD PTR [rsp+0x8]
   14005b070:	mov    rdi,QWORD PTR [rsp+0x10]
   14005b075:	ret    
   14005b076:	int3   
   14005b077:	int3   
   14005b078:	rex push rbx
   14005b07a:	sub    rsp,0x20
   14005b07e:	mov    rbx,rcx
   14005b081:	xor    ecx,ecx
   14005b083:	mov    QWORD PTR [rbx],rcx
   14005b086:	mov    QWORD PTR [rbx+0x8],rcx
   14005b08a:	mov    QWORD PTR [rbx+0x18],rcx
   14005b08e:	mov    QWORD PTR [rbx+0x20],rcx
   14005b092:	mov    QWORD PTR [rbx+0x10],rcx
   14005b096:	mov    QWORD PTR [rbx+0x28],rcx
   14005b09a:	mov    QWORD PTR [rbx+0x30],rcx
   14005b09e:	mov    DWORD PTR [rbx+0x38],ecx
   14005b0a1:	mov    WORD PTR [rbx+0x40],cx
   14005b0a5:	mov    DWORD PTR [rbx+0x50],ecx
   14005b0a8:	mov    BYTE PTR [rbx+0x54],cl
   14005b0ab:	mov    QWORD PTR [rbx+0x458],rcx
   14005b0b2:	mov    QWORD PTR [rbx+0x460],rcx
   14005b0b9:	mov    rax,QWORD PTR [rdx]
   14005b0bc:	mov    QWORD PTR [rbx+0x468],rax
   14005b0c3:	mov    rax,QWORD PTR [rsp+0x50]
   14005b0c8:	mov    QWORD PTR [rbx+0x8],rax
   14005b0cc:	mov    rax,QWORD PTR [rsp+0x58]
   14005b0d1:	mov    QWORD PTR [rbx+0x20],rax
   14005b0d5:	mov    QWORD PTR [rbx],r8
   14005b0d8:	mov    QWORD PTR [rbx+0x18],r9
   14005b0dc:	mov    DWORD PTR [rbx+0x470],ecx
   14005b0e2:	call   0x140060e94
   14005b0e7:	mov    QWORD PTR [rbx+0x10],rax
   14005b0eb:	mov    rax,rbx
   14005b0ee:	add    rsp,0x20
   14005b0f2:	pop    rbx
   14005b0f3:	ret    
   14005b0f4:	rex push rbx
   14005b0f6:	sub    rsp,0x20
   14005b0fa:	mov    rbx,rcx
   14005b0fd:	xor    ecx,ecx
   14005b0ff:	mov    QWORD PTR [rbx],rcx
   14005b102:	mov    QWORD PTR [rbx+0x8],rcx
   14005b106:	mov    QWORD PTR [rbx+0x18],rcx
   14005b10a:	mov    QWORD PTR [rbx+0x20],rcx
   14005b10e:	mov    QWORD PTR [rbx+0x10],rcx
   14005b112:	mov    QWORD PTR [rbx+0x28],rcx
   14005b116:	mov    QWORD PTR [rbx+0x30],rcx
   14005b11a:	mov    DWORD PTR [rbx+0x38],ecx
   14005b11d:	mov    BYTE PTR [rbx+0x40],cl
   14005b120:	mov    WORD PTR [rbx+0x42],cx
   14005b124:	mov    DWORD PTR [rbx+0x50],ecx
   14005b127:	mov    BYTE PTR [rbx+0x54],cl
   14005b12a:	mov    QWORD PTR [rbx+0x458],rcx
   14005b131:	mov    QWORD PTR [rbx+0x460],rcx
   14005b138:	mov    rax,QWORD PTR [rdx]
   14005b13b:	mov    QWORD PTR [rbx+0x468],rax
   14005b142:	mov    rax,QWORD PTR [rsp+0x50]
   14005b147:	mov    QWORD PTR [rbx+0x8],rax
   14005b14b:	mov    rax,QWORD PTR [rsp+0x58]
   14005b150:	mov    QWORD PTR [rbx+0x20],rax
   14005b154:	mov    QWORD PTR [rbx],r8
   14005b157:	mov    QWORD PTR [rbx+0x18],r9
   14005b15b:	mov    DWORD PTR [rbx+0x470],ecx
   14005b161:	call   0x140060e94
   14005b166:	mov    QWORD PTR [rbx+0x10],rax
   14005b16a:	mov    rax,rbx
   14005b16d:	add    rsp,0x20
   14005b171:	pop    rbx
   14005b172:	ret    
   14005b173:	int3   
   14005b174:	mov    QWORD PTR [rsp+0x8],rbx
   14005b179:	push   rdi
   14005b17a:	sub    rsp,0x20
   14005b17e:	mov    BYTE PTR [rcx+0x18],0x0
   14005b182:	mov    rdi,rcx
   14005b185:	test   rdx,rdx
   14005b188:	je     0x14005b18f
   14005b18a:	movups xmm0,XMMWORD PTR [rdx]
   14005b18d:	jmp    0x14005b1a0
   14005b18f:	mov    eax,DWORD PTR [rip+0x445a3]        # 0x14009f738
   14005b195:	test   eax,eax
   14005b197:	jne    0x14005b1a7
   14005b199:	movups xmm0,XMMWORD PTR [rip+0x27048]        # 0x1400821e8
   14005b1a0:	movdqu XMMWORD PTR [rcx+0x8],xmm0
   14005b1a5:	jmp    0x14005b1f6
   14005b1a7:	call   0x140061588
   14005b1ac:	mov    QWORD PTR [rdi],rax
   14005b1af:	lea    rdx,[rdi+0x8]
   14005b1b3:	mov    rcx,QWORD PTR [rax+0x90]
   14005b1ba:	mov    QWORD PTR [rdx],rcx
   14005b1bd:	mov    rcx,QWORD PTR [rax+0x88]
   14005b1c4:	mov    QWORD PTR [rdi+0x10],rcx
   14005b1c8:	mov    rcx,rax
   14005b1cb:	call   0x14006171c
   14005b1d0:	mov    rcx,QWORD PTR [rdi]
   14005b1d3:	lea    rdx,[rdi+0x10]
   14005b1d7:	call   0x140061750
   14005b1dc:	mov    rcx,QWORD PTR [rdi]
   14005b1df:	mov    eax,DWORD PTR [rcx+0x3a8]
   14005b1e5:	test   al,0x2
   14005b1e7:	jne    0x14005b1f6
   14005b1e9:	or     eax,0x2
   14005b1ec:	mov    DWORD PTR [rcx+0x3a8],eax
   14005b1f2:	mov    BYTE PTR [rdi+0x18],0x1
   14005b1f6:	mov    rax,rdi
   14005b1f9:	mov    rbx,QWORD PTR [rsp+0x30]
   14005b1fe:	add    rsp,0x20
   14005b202:	pop    rdi
   14005b203:	ret    
   14005b204:	mov    QWORD PTR [rsp+0x8],rbx
   14005b209:	push   rdi
   14005b20a:	sub    rsp,0x20
   14005b20e:	mov    rbx,rcx
   14005b211:	mov    rdi,rdx
   14005b214:	movsx  ecx,BYTE PTR [rcx]
   14005b217:	call   0x14005f01c
   14005b21c:	cmp    eax,0x65
   14005b21f:	je     0x14005b230
   14005b221:	inc    rbx
   14005b224:	movzx  ecx,BYTE PTR [rbx]
   14005b227:	call   0x140060eb4
   14005b22c:	test   eax,eax
   14005b22e:	jne    0x14005b221
   14005b230:	movsx  ecx,BYTE PTR [rbx]
   14005b233:	call   0x14005f01c
   14005b238:	cmp    eax,0x78
   14005b23b:	jne    0x14005b241
   14005b23d:	add    rbx,0x2
   14005b241:	mov    rax,QWORD PTR [rdi]
   14005b244:	mov    dl,BYTE PTR [rbx]
   14005b246:	mov    rcx,QWORD PTR [rax+0xf8]
   14005b24d:	mov    rax,QWORD PTR [rcx]
   14005b250:	mov    cl,BYTE PTR [rax]
   14005b252:	mov    BYTE PTR [rbx],cl
   14005b254:	inc    rbx
   14005b257:	mov    al,BYTE PTR [rbx]
   14005b259:	mov    BYTE PTR [rbx],dl
   14005b25b:	mov    dl,al
   14005b25d:	mov    al,BYTE PTR [rbx]
   14005b25f:	inc    rbx
   14005b262:	test   al,al
   14005b264:	jne    0x14005b257
   14005b266:	mov    rbx,QWORD PTR [rsp+0x30]
   14005b26b:	add    rsp,0x20
   14005b26f:	pop    rdi
   14005b270:	ret    
   14005b271:	int3   
   14005b272:	int3   
   14005b273:	int3   
   14005b274:	mov    rax,rsp
   14005b277:	mov    QWORD PTR [rax+0x10],rbx
   14005b27b:	mov    QWORD PTR [rax+0x18],rbp
   14005b27f:	push   rsi
   14005b280:	push   rdi
   14005b281:	push   r14
   14005b283:	sub    rsp,0x20
   14005b287:	mov    rsi,QWORD PTR [rcx+0x10]
   14005b28b:	mov    rdi,rcx
   14005b28e:	mov    ebp,0x1
   14005b293:	mov    rbx,rdx
   14005b296:	lea    rdx,[rax+0x8]
   14005b29a:	mov    r14d,DWORD PTR [rsi]
   14005b29d:	and    DWORD PTR [rsi],0x0
   14005b2a0:	lea    r8d,[rbp+0x9]
   14005b2a4:	mov    rcx,QWORD PTR [rcx+0x18]
   14005b2a8:	and    QWORD PTR [rax+0x8],0x0
   14005b2ad:	sub    rcx,rbp
   14005b2b0:	call   0x14005df7c
   14005b2b5:	mov    DWORD PTR [rbx],eax
   14005b2b7:	mov    rax,QWORD PTR [rdi+0x10]
   14005b2bb:	cmp    DWORD PTR [rax],0x22
   14005b2be:	je     0x14005b2d1
   14005b2c0:	mov    rax,QWORD PTR [rsp+0x40]
   14005b2c5:	cmp    rax,QWORD PTR [rdi+0x18]
   14005b2c9:	jb     0x14005b2d1
   14005b2cb:	mov    QWORD PTR [rdi+0x18],rax
   14005b2cf:	jmp    0x14005b2d4
   14005b2d1:	xor    bpl,bpl
   14005b2d4:	cmp    DWORD PTR [rsi],0x0
   14005b2d7:	jne    0x14005b2e1
   14005b2d9:	test   r14d,r14d
   14005b2dc:	je     0x14005b2e1
   14005b2de:	mov    DWORD PTR [rsi],r14d
   14005b2e1:	mov    rbx,QWORD PTR [rsp+0x48]
   14005b2e6:	mov    al,bpl
   14005b2e9:	mov    rbp,QWORD PTR [rsp+0x50]
   14005b2ee:	add    rsp,0x20
   14005b2f2:	pop    r14
   14005b2f4:	pop    rdi
   14005b2f5:	pop    rsi
   14005b2f6:	ret    
   14005b2f7:	int3   
   14005b2f8:	mov    rax,rsp
   14005b2fb:	mov    QWORD PTR [rax+0x10],rbx
   14005b2ff:	mov    QWORD PTR [rax+0x18],rbp
   14005b303:	mov    QWORD PTR [rax+0x20],rsi
   14005b307:	push   rdi
   14005b308:	sub    rsp,0x20
   14005b30c:	mov    rsi,QWORD PTR [rcx+0x10]
   14005b310:	mov    rdi,rcx
   14005b313:	mov    rbx,rdx
   14005b316:	mov    r8d,0xa
   14005b31c:	lea    rdx,[rax+0x8]
   14005b320:	mov    ebp,DWORD PTR [rsi]
   14005b322:	and    DWORD PTR [rsi],0x0
   14005b325:	mov    rcx,QWORD PTR [rcx+0x18]
   14005b329:	and    QWORD PTR [rax+0x8],0x0
   14005b32e:	sub    rcx,0x2
   14005b332:	call   0x14005dfdc
   14005b337:	mov    DWORD PTR [rbx],eax
   14005b339:	mov    rax,QWORD PTR [rdi+0x10]
   14005b33d:	cmp    DWORD PTR [rax],0x22
   14005b340:	je     0x14005b355
   14005b342:	mov    rax,QWORD PTR [rsp+0x30]
   14005b347:	cmp    rax,QWORD PTR [rdi+0x18]
   14005b34b:	jb     0x14005b355
   14005b34d:	mov    QWORD PTR [rdi+0x18],rax
   14005b351:	mov    al,0x1
   14005b353:	jmp    0x14005b357
   14005b355:	xor    al,al
   14005b357:	cmp    DWORD PTR [rsi],0x0
   14005b35a:	jne    0x14005b362
   14005b35c:	test   ebp,ebp
   14005b35e:	je     0x14005b362
   14005b360:	mov    DWORD PTR [rsi],ebp
   14005b362:	mov    rbx,QWORD PTR [rsp+0x38]
   14005b367:	mov    rbp,QWORD PTR [rsp+0x40]
   14005b36c:	mov    rsi,QWORD PTR [rsp+0x48]
   14005b371:	add    rsp,0x20
   14005b375:	pop    rdi
   14005b376:	ret    
   14005b377:	int3   
   14005b378:	mov    QWORD PTR [rsp+0x8],rbx
   14005b37d:	mov    QWORD PTR [rsp+0x10],rbp
   14005b382:	push   rdi
   14005b383:	sub    rsp,0x20
   14005b387:	cmp    QWORD PTR [rcx+0x468],0x0
   14005b38f:	mov    rbx,rcx
   14005b392:	jne    0x14005b3ac
   14005b394:	call   0x140060e94
   14005b399:	mov    DWORD PTR [rax],0x16
   14005b39f:	call   0x140060d74
   14005b3a4:	or     eax,0xffffffff
   14005b3a7:	jmp    0x14005b556
   14005b3ac:	cmp    QWORD PTR [rcx+0x18],0x0
   14005b3b1:	je     0x14005b394
   14005b3b3:	inc    DWORD PTR [rcx+0x470]
   14005b3b9:	cmp    DWORD PTR [rcx+0x470],0x2
   14005b3c0:	je     0x14005b553
   14005b3c6:	or     edi,0xffffffff
   14005b3c9:	lea    rbp,[rip+0x16cb0]        # 0x140072080
   14005b3d0:	and    DWORD PTR [rbx+0x50],0x0
   14005b3d4:	and    DWORD PTR [rbx+0x2c],0x0
   14005b3d8:	jmp    0x14005b52b
   14005b3dd:	inc    QWORD PTR [rbx+0x18]
   14005b3e1:	cmp    DWORD PTR [rbx+0x28],0x0
   14005b3e5:	jl     0x14005b540
   14005b3eb:	mov    al,BYTE PTR [rbx+0x41]
   14005b3ee:	mov    edx,DWORD PTR [rbx+0x2c]
   14005b3f1:	sub    al,0x20
   14005b3f3:	cmp    al,0x5a
   14005b3f5:	ja     0x14005b406
   14005b3f7:	movsx  rax,BYTE PTR [rbx+0x41]
   14005b3fc:	movzx  ecx,BYTE PTR [rax+rbp*1-0x20]
   14005b401:	and    ecx,0xf
   14005b404:	jmp    0x14005b408
   14005b406:	xor    ecx,ecx
   14005b408:	lea    eax,[rdx+rcx*8]
   14005b40b:	movzx  eax,BYTE PTR [rax+rbp*1]
   14005b40f:	shr    eax,0x4
   14005b412:	mov    DWORD PTR [rbx+0x2c],eax
   14005b415:	cmp    eax,0x8
   14005b418:	je     0x14005b566
   14005b41e:	test   eax,eax
   14005b420:	je     0x14005b51f
   14005b426:	sub    eax,0x1
   14005b429:	je     0x14005b506
   14005b42f:	sub    eax,0x1
   14005b432:	je     0x14005b4d1
   14005b438:	sub    eax,0x1
   14005b43b:	je     0x14005b4a5
   14005b43d:	sub    eax,0x1
   14005b440:	je     0x14005b49c
   14005b442:	sub    eax,0x1
   14005b445:	je     0x14005b46f
   14005b447:	sub    eax,0x1
   14005b44a:	je     0x14005b462
   14005b44c:	cmp    eax,0x1
   14005b44f:	jne    0x14005b576
   14005b455:	mov    rcx,rbx
   14005b458:	call   0x14005bc24
   14005b45d:	jmp    0x14005b527
   14005b462:	mov    rcx,rbx
   14005b465:	call   0x14005b904
   14005b46a:	jmp    0x14005b527
   14005b46f:	cmp    BYTE PTR [rbx+0x41],0x2a
   14005b473:	je     0x14005b486
   14005b475:	lea    rdx,[rbx+0x38]
   14005b479:	mov    rcx,rbx
   14005b47c:	call   0x14005b274
   14005b481:	jmp    0x14005b527
   14005b486:	add    QWORD PTR [rbx+0x20],0x8
   14005b48b:	mov    rax,QWORD PTR [rbx+0x20]
   14005b48f:	mov    ecx,DWORD PTR [rax-0x8]
   14005b492:	test   ecx,ecx
   14005b494:	cmovs  ecx,edi
   14005b497:	mov    DWORD PTR [rbx+0x38],ecx
   14005b49a:	jmp    0x14005b4cd
   14005b49c:	and    DWORD PTR [rbx+0x38],0x0
   14005b4a0:	jmp    0x14005b52b
   14005b4a5:	cmp    BYTE PTR [rbx+0x41],0x2a
   14005b4a9:	je     0x14005b4b1
   14005b4ab:	lea    rdx,[rbx+0x34]
   14005b4af:	jmp    0x14005b479
   14005b4b1:	add    QWORD PTR [rbx+0x20],0x8
   14005b4b6:	mov    rax,QWORD PTR [rbx+0x20]
   14005b4ba:	mov    ecx,DWORD PTR [rax-0x8]
   14005b4bd:	mov    DWORD PTR [rbx+0x34],ecx
   14005b4c0:	test   ecx,ecx
   14005b4c2:	jns    0x14005b4cd
   14005b4c4:	or     DWORD PTR [rbx+0x30],0x4
   14005b4c8:	neg    ecx
   14005b4ca:	mov    DWORD PTR [rbx+0x34],ecx
   14005b4cd:	mov    al,0x1
   14005b4cf:	jmp    0x14005b527
   14005b4d1:	mov    al,BYTE PTR [rbx+0x41]
   14005b4d4:	cmp    al,0x20
   14005b4d6:	je     0x14005b500
   14005b4d8:	cmp    al,0x23
   14005b4da:	je     0x14005b4fa
   14005b4dc:	cmp    al,0x2b
   14005b4de:	je     0x14005b4f4
   14005b4e0:	cmp    al,0x2d
   14005b4e2:	je     0x14005b4ee
   14005b4e4:	cmp    al,0x30
   14005b4e6:	jne    0x14005b52b
   14005b4e8:	or     DWORD PTR [rbx+0x30],0x8
   14005b4ec:	jmp    0x14005b52b
   14005b4ee:	or     DWORD PTR [rbx+0x30],0x4
   14005b4f2:	jmp    0x14005b52b
   14005b4f4:	or     DWORD PTR [rbx+0x30],0x1
   14005b4f8:	jmp    0x14005b52b
   14005b4fa:	or     DWORD PTR [rbx+0x30],0x20
   14005b4fe:	jmp    0x14005b52b
   14005b500:	or     DWORD PTR [rbx+0x30],0x2
   14005b504:	jmp    0x14005b52b
   14005b506:	and    DWORD PTR [rbx+0x34],0x0
   14005b50a:	and    DWORD PTR [rbx+0x30],0x0
   14005b50e:	and    DWORD PTR [rbx+0x3c],0x0
   14005b512:	mov    BYTE PTR [rbx+0x40],0x0
   14005b516:	mov    DWORD PTR [rbx+0x38],edi
   14005b519:	mov    BYTE PTR [rbx+0x54],0x0
   14005b51d:	jmp    0x14005b52b
   14005b51f:	mov    rcx,rbx
   14005b522:	call   0x14005b7f8
   14005b527:	test   al,al
   14005b529:	je     0x14005b576
   14005b52b:	mov    rax,QWORD PTR [rbx+0x18]
   14005b52f:	mov    cl,BYTE PTR [rax]
   14005b531:	mov    BYTE PTR [rbx+0x41],cl
   14005b534:	test   cl,cl
   14005b536:	jne    0x14005b3dd
   14005b53c:	inc    QWORD PTR [rbx+0x18]
   14005b540:	inc    DWORD PTR [rbx+0x470]
   14005b546:	cmp    DWORD PTR [rbx+0x470],0x2
   14005b54d:	jne    0x14005b3d0
   14005b553:	mov    eax,DWORD PTR [rbx+0x28]
   14005b556:	mov    rbx,QWORD PTR [rsp+0x30]
   14005b55b:	mov    rbp,QWORD PTR [rsp+0x38]
   14005b560:	add    rsp,0x20
   14005b564:	pop    rdi
   14005b565:	ret    
   14005b566:	call   0x140060e94
   14005b56b:	mov    DWORD PTR [rax],0x16
   14005b571:	call   0x140060d74
   14005b576:	mov    eax,edi
   14005b578:	jmp    0x14005b556
   14005b57a:	int3   
   14005b57b:	int3   
   14005b57c:	mov    rax,rsp
   14005b57f:	mov    QWORD PTR [rax+0x8],rbx
   14005b583:	mov    QWORD PTR [rax+0x10],rbp
   14005b587:	mov    QWORD PTR [rax+0x18],rsi
   14005b58b:	mov    QWORD PTR [rax+0x20],rdi
   14005b58f:	push   r14
   14005b591:	sub    rsp,0x20
   14005b595:	xor    esi,esi
   14005b597:	mov    rbx,rcx
   14005b59a:	cmp    QWORD PTR [rcx+0x468],rsi
   14005b5a1:	jne    0x14005b5bb
   14005b5a3:	call   0x140060e94
   14005b5a8:	mov    DWORD PTR [rax],0x16
   14005b5ae:	call   0x140060d74
   14005b5b3:	or     eax,0xffffffff
   14005b5b6:	jmp    0x14005b7c6
   14005b5bb:	cmp    QWORD PTR [rcx+0x18],rsi
   14005b5bf:	je     0x14005b5a3
   14005b5c1:	inc    DWORD PTR [rcx+0x470]
   14005b5c7:	cmp    DWORD PTR [rcx+0x470],0x2
   14005b5ce:	je     0x14005b7c3
   14005b5d4:	or     edi,0xffffffff
   14005b5d7:	lea    r14,[rip+0x16aa2]        # 0x140072080
   14005b5de:	lea    ebp,[rdi+0x21]
   14005b5e1:	mov    DWORD PTR [rbx+0x50],esi
   14005b5e4:	mov    DWORD PTR [rbx+0x2c],esi
   14005b5e7:	jmp    0x14005b797
   14005b5ec:	add    QWORD PTR [rbx+0x18],0x2
   14005b5f1:	cmp    DWORD PTR [rbx+0x28],esi
   14005b5f4:	jl     0x14005b7b0
   14005b5fa:	movzx  eax,WORD PTR [rbx+0x42]
   14005b5fe:	mov    edx,DWORD PTR [rbx+0x2c]
   14005b601:	sub    ax,bp
   14005b604:	cmp    ax,0x5a
   14005b608:	ja     0x14005b619
   14005b60a:	movzx  eax,WORD PTR [rbx+0x42]
   14005b60e:	movzx  ecx,BYTE PTR [rax+r14*1-0x20]
   14005b614:	and    ecx,0xf
   14005b617:	jmp    0x14005b61b
   14005b619:	mov    ecx,esi
   14005b61b:	lea    eax,[rdx+rcx*8]
   14005b61e:	movzx  eax,BYTE PTR [rax+r14*1]
   14005b623:	shr    eax,0x4
   14005b626:	mov    DWORD PTR [rbx+0x2c],eax
   14005b629:	cmp    eax,0x8
   14005b62c:	je     0x14005b7e1
   14005b632:	test   eax,eax
   14005b634:	je     0x14005b742
   14005b63a:	sub    eax,0x1
   14005b63d:	je     0x14005b72e
   14005b643:	sub    eax,0x1
   14005b646:	je     0x14005b6ee
   14005b64c:	sub    eax,0x1
   14005b64f:	je     0x14005b6bc
   14005b651:	sub    eax,0x1
   14005b654:	je     0x14005b6b4
   14005b656:	sub    eax,0x1
   14005b659:	je     0x14005b683
   14005b65b:	sub    eax,0x1
   14005b65e:	je     0x14005b676
   14005b660:	cmp    eax,0x1
   14005b663:	jne    0x14005b7f1
   14005b669:	mov    rcx,rbx
   14005b66c:	call   0x14005bea0
   14005b671:	jmp    0x14005b793
   14005b676:	mov    rcx,rbx
   14005b679:	call   0x14005ba80
   14005b67e:	jmp    0x14005b793
   14005b683:	cmp    WORD PTR [rbx+0x42],0x2a
   14005b688:	je     0x14005b69b
   14005b68a:	lea    rdx,[rbx+0x38]
   14005b68e:	mov    rcx,rbx
   14005b691:	call   0x14005b2f8
   14005b696:	jmp    0x14005b793
   14005b69b:	add    QWORD PTR [rbx+0x20],0x8
   14005b6a0:	mov    rax,QWORD PTR [rbx+0x20]
   14005b6a4:	mov    ecx,DWORD PTR [rax-0x8]
   14005b6a7:	test   ecx,ecx
   14005b6a9:	cmovs  ecx,edi
   14005b6ac:	mov    DWORD PTR [rbx+0x38],ecx
   14005b6af:	jmp    0x14005b791
   14005b6b4:	mov    DWORD PTR [rbx+0x38],esi
   14005b6b7:	jmp    0x14005b797
   14005b6bc:	cmp    WORD PTR [rbx+0x42],0x2a
   14005b6c1:	je     0x14005b6c9
   14005b6c3:	lea    rdx,[rbx+0x34]
   14005b6c7:	jmp    0x14005b68e
   14005b6c9:	add    QWORD PTR [rbx+0x20],0x8
   14005b6ce:	mov    rax,QWORD PTR [rbx+0x20]
   14005b6d2:	mov    ecx,DWORD PTR [rax-0x8]
   14005b6d5:	mov    DWORD PTR [rbx+0x34],ecx
   14005b6d8:	test   ecx,ecx
   14005b6da:	jns    0x14005b791
   14005b6e0:	or     DWORD PTR [rbx+0x30],0x4
   14005b6e4:	neg    ecx
   14005b6e6:	mov    DWORD PTR [rbx+0x34],ecx
   14005b6e9:	jmp    0x14005b791
   14005b6ee:	movzx  eax,WORD PTR [rbx+0x42]
   14005b6f2:	cmp    eax,ebp
   14005b6f4:	je     0x14005b728
   14005b6f6:	cmp    eax,0x23
   14005b6f9:	je     0x14005b723
   14005b6fb:	cmp    eax,0x2b
   14005b6fe:	je     0x14005b71d
   14005b700:	cmp    eax,0x2d
   14005b703:	je     0x14005b717
   14005b705:	cmp    eax,0x30
   14005b708:	jne    0x14005b797
   14005b70e:	or     DWORD PTR [rbx+0x30],0x8
   14005b712:	jmp    0x14005b797
   14005b717:	or     DWORD PTR [rbx+0x30],0x4
   14005b71b:	jmp    0x14005b797
   14005b71d:	or     DWORD PTR [rbx+0x30],0x1
   14005b721:	jmp    0x14005b797
   14005b723:	or     DWORD PTR [rbx+0x30],ebp
   14005b726:	jmp    0x14005b797
   14005b728:	or     DWORD PTR [rbx+0x30],0x2
   14005b72c:	jmp    0x14005b797
   14005b72e:	mov    QWORD PTR [rbx+0x30],rsi
   14005b732:	mov    BYTE PTR [rbx+0x40],sil
   14005b736:	mov    DWORD PTR [rbx+0x38],edi
   14005b739:	mov    DWORD PTR [rbx+0x3c],esi
   14005b73c:	mov    BYTE PTR [rbx+0x54],sil
   14005b740:	jmp    0x14005b797
   14005b742:	movzx  edx,WORD PTR [rbx+0x42]
   14005b746:	mov    BYTE PTR [rbx+0x54],0x1
   14005b74a:	mov    rcx,QWORD PTR [rbx+0x468]
   14005b751:	mov    rax,QWORD PTR [rcx+0x8]
   14005b755:	cmp    QWORD PTR [rcx+0x10],rax
   14005b759:	jne    0x14005b76b
   14005b75b:	cmp    BYTE PTR [rcx+0x18],sil
   14005b75f:	je     0x14005b766
   14005b761:	inc    DWORD PTR [rbx+0x28]
   14005b764:	jmp    0x14005b791
   14005b766:	mov    DWORD PTR [rbx+0x28],edi
   14005b769:	jmp    0x14005b791
   14005b76b:	inc    DWORD PTR [rbx+0x28]
   14005b76e:	mov    rax,QWORD PTR [rbx+0x468]
   14005b775:	inc    QWORD PTR [rax+0x10]
   14005b779:	mov    rax,QWORD PTR [rbx+0x468]
   14005b780:	mov    rcx,QWORD PTR [rax]
   14005b783:	mov    WORD PTR [rcx],dx
   14005b786:	mov    rax,QWORD PTR [rbx+0x468]
   14005b78d:	add    QWORD PTR [rax],0x2
   14005b791:	mov    al,0x1
   14005b793:	test   al,al
   14005b795:	je     0x14005b7f1
   14005b797:	mov    rax,QWORD PTR [rbx+0x18]
   14005b79b:	movzx  ecx,WORD PTR [rax]
   14005b79e:	mov    WORD PTR [rbx+0x42],cx
   14005b7a2:	test   cx,cx
   14005b7a5:	jne    0x14005b5ec
   14005b7ab:	add    QWORD PTR [rbx+0x18],0x2
   14005b7b0:	inc    DWORD PTR [rbx+0x470]
   14005b7b6:	cmp    DWORD PTR [rbx+0x470],0x2
   14005b7bd:	jne    0x14005b5e1
   14005b7c3:	mov    eax,DWORD PTR [rbx+0x28]
   14005b7c6:	mov    rbx,QWORD PTR [rsp+0x30]
   14005b7cb:	mov    rbp,QWORD PTR [rsp+0x38]
   14005b7d0:	mov    rsi,QWORD PTR [rsp+0x40]
   14005b7d5:	mov    rdi,QWORD PTR [rsp+0x48]
   14005b7da:	add    rsp,0x20
   14005b7de:	pop    r14
   14005b7e0:	ret    
   14005b7e1:	call   0x140060e94
   14005b7e6:	mov    DWORD PTR [rax],0x16
   14005b7ec:	call   0x140060d74
   14005b7f1:	mov    eax,edi
   14005b7f3:	jmp    0x14005b7c6
   14005b7f5:	int3   
   14005b7f6:	int3   
   14005b7f7:	int3   
   14005b7f8:	rex push rbx
   14005b7fa:	sub    rsp,0x20
   14005b7fe:	xor    edx,edx
   14005b800:	mov    rbx,rcx
   14005b803:	call   0x14005b86c
   14005b808:	test   al,al
   14005b80a:	je     0x14005b854
   14005b80c:	mov    rcx,QWORD PTR [rbx+0x468]
   14005b813:	mov    r8b,BYTE PTR [rbx+0x41]
   14005b817:	mov    rax,QWORD PTR [rcx+0x8]
   14005b81b:	cmp    QWORD PTR [rcx+0x10],rax
   14005b81f:	jne    0x14005b832
   14005b821:	cmp    BYTE PTR [rcx+0x18],0x0
   14005b825:	je     0x14005b82c
   14005b827:	inc    DWORD PTR [rbx+0x28]
   14005b82a:	jmp    0x14005b850
   14005b82c:	or     DWORD PTR [rbx+0x28],0xffffffff
   14005b830:	jmp    0x14005b850
   14005b832:	inc    DWORD PTR [rbx+0x28]
   14005b835:	inc    QWORD PTR [rcx+0x10]
   14005b839:	mov    rcx,QWORD PTR [rbx+0x468]
   14005b840:	mov    rdx,QWORD PTR [rcx]
   14005b843:	mov    BYTE PTR [rdx],r8b
   14005b846:	mov    rcx,QWORD PTR [rbx+0x468]
   14005b84d:	inc    QWORD PTR [rcx]
   14005b850:	mov    al,0x1
   14005b852:	jmp    0x14005b866
   14005b854:	call   0x140060e94
   14005b859:	mov    DWORD PTR [rax],0x16
   14005b85f:	call   0x140060d74
   14005b864:	xor    al,al
   14005b866:	add    rsp,0x20
   14005b86a:	pop    rbx
   14005b86b:	ret    
   14005b86c:	sub    rsp,0x28
   14005b870:	mov    rax,QWORD PTR [rcx+0x8]
   14005b874:	mov    rdx,rcx
   14005b877:	movzx  r8d,BYTE PTR [rcx+0x41]
   14005b87c:	mov    BYTE PTR [rcx+0x54],0x0
   14005b880:	mov    ecx,0x8000
   14005b885:	mov    rax,QWORD PTR [rax]
   14005b888:	mov    rax,QWORD PTR [rax]
   14005b88b:	test   WORD PTR [rax+r8*2],cx
   14005b890:	je     0x14005b8fa
   14005b892:	mov    rcx,QWORD PTR [rdx+0x468]
   14005b899:	mov    rax,QWORD PTR [rcx+0x8]
   14005b89d:	cmp    QWORD PTR [rcx+0x10],rax
   14005b8a1:	jne    0x14005b8b4
   14005b8a3:	cmp    BYTE PTR [rcx+0x18],0x0
   14005b8a7:	je     0x14005b8ae
   14005b8a9:	inc    DWORD PTR [rdx+0x28]
   14005b8ac:	jmp    0x14005b8d2
   14005b8ae:	or     DWORD PTR [rdx+0x28],0xffffffff
   14005b8b2:	jmp    0x14005b8d2
   14005b8b4:	inc    DWORD PTR [rdx+0x28]
   14005b8b7:	inc    QWORD PTR [rcx+0x10]
   14005b8bb:	mov    rax,QWORD PTR [rdx+0x468]
   14005b8c2:	mov    rcx,QWORD PTR [rax]
   14005b8c5:	mov    BYTE PTR [rcx],r8b
   14005b8c8:	mov    rax,QWORD PTR [rdx+0x468]
   14005b8cf:	inc    QWORD PTR [rax]
   14005b8d2:	mov    rax,QWORD PTR [rdx+0x18]
   14005b8d6:	mov    cl,BYTE PTR [rax]
   14005b8d8:	inc    rax
   14005b8db:	mov    BYTE PTR [rdx+0x41],cl
   14005b8de:	mov    QWORD PTR [rdx+0x18],rax
   14005b8e2:	test   cl,cl
   14005b8e4:	jne    0x14005b8fa
   14005b8e6:	call   0x140060e94
   14005b8eb:	mov    DWORD PTR [rax],0x16
   14005b8f1:	call   0x140060d74
   14005b8f6:	xor    al,al
   14005b8f8:	jmp    0x14005b8fc
   14005b8fa:	mov    al,0x1
   14005b8fc:	add    rsp,0x28
   14005b900:	ret    
   14005b901:	int3   
   14005b902:	int3   
   14005b903:	int3   
   14005b904:	sub    rsp,0x28
   14005b908:	mov    al,BYTE PTR [rcx+0x41]
   14005b90b:	cmp    al,0x46
   14005b90d:	jne    0x14005b928
   14005b90f:	test   BYTE PTR [rcx],0x8
   14005b912:	jne    0x14005ba78
   14005b918:	mov    DWORD PTR [rcx+0x2c],0x7
   14005b91f:	add    rsp,0x28
   14005b923:	jmp    0x14005bc24
   14005b928:	cmp    al,0x4e
   14005b92a:	jne    0x14005b953
   14005b92c:	test   BYTE PTR [rcx],0x8
   14005b92f:	jne    0x14005ba78
   14005b935:	mov    DWORD PTR [rcx+0x2c],0x8
   14005b93c:	call   0x140060e94
   14005b941:	mov    DWORD PTR [rax],0x16
   14005b947:	call   0x140060d74
   14005b94c:	xor    al,al
   14005b94e:	jmp    0x14005ba7a
   14005b953:	cmp    DWORD PTR [rcx+0x3c],0x0
   14005b957:	jne    0x14005b93c
   14005b959:	cmp    al,0x49
   14005b95b:	je     0x14005ba1b
   14005b961:	cmp    al,0x4c
   14005b963:	je     0x14005ba12
   14005b969:	cmp    al,0x54
   14005b96b:	je     0x14005ba09
   14005b971:	cmp    al,0x68
   14005b973:	je     0x14005b9e7
   14005b975:	cmp    al,0x6a
   14005b977:	je     0x14005b9db
   14005b979:	cmp    al,0x6c
   14005b97b:	je     0x14005b9b3
   14005b97d:	cmp    al,0x74
   14005b97f:	je     0x14005b9a7
   14005b981:	cmp    al,0x77
   14005b983:	je     0x14005b99b
   14005b985:	cmp    al,0x7a
   14005b987:	mov    al,0x1
   14005b989:	jne    0x14005ba7a
   14005b98f:	mov    DWORD PTR [rcx+0x3c],0x6
   14005b996:	jmp    0x14005ba7a
   14005b99b:	mov    DWORD PTR [rcx+0x3c],0xc
   14005b9a2:	jmp    0x14005ba78
   14005b9a7:	mov    DWORD PTR [rcx+0x3c],0x7
   14005b9ae:	jmp    0x14005ba78
   14005b9b3:	mov    rax,QWORD PTR [rcx+0x18]
   14005b9b7:	cmp    BYTE PTR [rax],0x6c
   14005b9ba:	jne    0x14005b9cf
   14005b9bc:	inc    rax
   14005b9bf:	mov    DWORD PTR [rcx+0x3c],0x4
   14005b9c6:	mov    QWORD PTR [rcx+0x18],rax
   14005b9ca:	jmp    0x14005ba78
   14005b9cf:	mov    DWORD PTR [rcx+0x3c],0x3
   14005b9d6:	jmp    0x14005ba78
   14005b9db:	mov    DWORD PTR [rcx+0x3c],0x5
   14005b9e2:	jmp    0x14005ba78
   14005b9e7:	mov    rax,QWORD PTR [rcx+0x18]
   14005b9eb:	cmp    BYTE PTR [rax],0x68
   14005b9ee:	jne    0x14005ba00
   14005b9f0:	inc    rax
   14005b9f3:	mov    DWORD PTR [rcx+0x3c],0x1
   14005b9fa:	mov    QWORD PTR [rcx+0x18],rax
   14005b9fe:	jmp    0x14005ba78
   14005ba00:	mov    DWORD PTR [rcx+0x3c],0x2
   14005ba07:	jmp    0x14005ba78
   14005ba09:	mov    DWORD PTR [rcx+0x3c],0xd
   14005ba10:	jmp    0x14005ba78
   14005ba12:	mov    DWORD PTR [rcx+0x3c],0x8
   14005ba19:	jmp    0x14005ba78
   14005ba1b:	mov    rdx,QWORD PTR [rcx+0x18]
   14005ba1f:	mov    al,BYTE PTR [rdx]
   14005ba21:	cmp    al,0x33
   14005ba23:	jne    0x14005ba3c
   14005ba25:	cmp    BYTE PTR [rdx+0x1],0x32
   14005ba29:	jne    0x14005ba3c
   14005ba2b:	lea    rax,[rdx+0x2]
   14005ba2f:	mov    DWORD PTR [rcx+0x3c],0xa
   14005ba36:	mov    QWORD PTR [rcx+0x18],rax
   14005ba3a:	jmp    0x14005ba78
   14005ba3c:	cmp    al,0x36
   14005ba3e:	jne    0x14005ba57
   14005ba40:	cmp    BYTE PTR [rdx+0x1],0x34
   14005ba44:	jne    0x14005ba57
   14005ba46:	lea    rax,[rdx+0x2]
   14005ba4a:	mov    DWORD PTR [rcx+0x3c],0xb
   14005ba51:	mov    QWORD PTR [rcx+0x18],rax
   14005ba55:	jmp    0x14005ba78
   14005ba57:	sub    al,0x58
   14005ba59:	cmp    al,0x20
   14005ba5b:	ja     0x14005ba78
   14005ba5d:	movsx  rax,al
   14005ba61:	movabs rdx,0x120821001
   14005ba6b:	bt     rdx,rax
   14005ba6f:	jae    0x14005ba78
   14005ba71:	mov    DWORD PTR [rcx+0x3c],0x9
   14005ba78:	mov    al,0x1
   14005ba7a:	add    rsp,0x28
   14005ba7e:	ret    
   14005ba7f:	int3   
   14005ba80:	sub    rsp,0x28
   14005ba84:	cmp    WORD PTR [rcx+0x42],0x46
   14005ba89:	jne    0x14005baa4
   14005ba8b:	test   BYTE PTR [rcx],0x8
   14005ba8e:	jne    0x14005bc1b
   14005ba94:	mov    DWORD PTR [rcx+0x2c],0x7
   14005ba9b:	add    rsp,0x28
   14005ba9f:	jmp    0x14005bea0
   14005baa4:	cmp    WORD PTR [rcx+0x42],0x4e
   14005baa9:	jne    0x14005bad2
   14005baab:	test   BYTE PTR [rcx],0x8
   14005baae:	jne    0x14005bc1b
   14005bab4:	mov    DWORD PTR [rcx+0x2c],0x8
   14005babb:	call   0x140060e94
   14005bac0:	mov    DWORD PTR [rax],0x16
   14005bac6:	call   0x140060d74
   14005bacb:	xor    al,al
   14005bacd:	jmp    0x14005bc1d
   14005bad2:	cmp    DWORD PTR [rcx+0x3c],0x0
   14005bad6:	jne    0x14005babb
   14005bad8:	movzx  eax,WORD PTR [rcx+0x42]
   14005badc:	cmp    eax,0x49
   14005badf:	je     0x14005bbb4
   14005bae5:	cmp    eax,0x4c
   14005bae8:	je     0x14005bbab
   14005baee:	cmp    eax,0x54
   14005baf1:	je     0x14005bba2
   14005baf7:	mov    edx,0x68
   14005bafc:	cmp    eax,edx
   14005bafe:	je     0x14005bb7c
   14005bb00:	cmp    eax,0x6a
   14005bb03:	je     0x14005bb70
   14005bb05:	mov    edx,0x6c
   14005bb0a:	cmp    eax,edx
   14005bb0c:	je     0x14005bb47
   14005bb0e:	cmp    eax,0x74
   14005bb11:	je     0x14005bb3b
   14005bb13:	cmp    eax,0x77
   14005bb16:	je     0x14005bb2f
   14005bb18:	cmp    eax,0x7a
   14005bb1b:	mov    al,0x1
   14005bb1d:	jne    0x14005bc1d
   14005bb23:	mov    DWORD PTR [rcx+0x3c],0x6
   14005bb2a:	jmp    0x14005bc1d
   14005bb2f:	mov    DWORD PTR [rcx+0x3c],0xc
   14005bb36:	jmp    0x14005bc1b
   14005bb3b:	mov    DWORD PTR [rcx+0x3c],0x7
   14005bb42:	jmp    0x14005bc1b
   14005bb47:	mov    rax,QWORD PTR [rcx+0x18]
   14005bb4b:	cmp    WORD PTR [rax],dx
   14005bb4e:	jne    0x14005bb64
   14005bb50:	add    rax,0x2
   14005bb54:	mov    DWORD PTR [rcx+0x3c],0x4
   14005bb5b:	mov    QWORD PTR [rcx+0x18],rax
   14005bb5f:	jmp    0x14005bc1b
   14005bb64:	mov    DWORD PTR [rcx+0x3c],0x3
   14005bb6b:	jmp    0x14005bc1b
   14005bb70:	mov    DWORD PTR [rcx+0x3c],0x5
   14005bb77:	jmp    0x14005bc1b
   14005bb7c:	mov    rax,QWORD PTR [rcx+0x18]
   14005bb80:	cmp    WORD PTR [rax],dx
   14005bb83:	jne    0x14005bb99
   14005bb85:	add    rax,0x2
   14005bb89:	mov    DWORD PTR [rcx+0x3c],0x1
   14005bb90:	mov    QWORD PTR [rcx+0x18],rax
   14005bb94:	jmp    0x14005bc1b
   14005bb99:	mov    DWORD PTR [rcx+0x3c],0x2
   14005bba0:	jmp    0x14005bc1b
   14005bba2:	mov    DWORD PTR [rcx+0x3c],0xd
   14005bba9:	jmp    0x14005bc1b
   14005bbab:	mov    DWORD PTR [rcx+0x3c],0x8
   14005bbb2:	jmp    0x14005bc1b
   14005bbb4:	mov    rdx,QWORD PTR [rcx+0x18]
   14005bbb8:	movzx  eax,WORD PTR [rdx]
   14005bbbb:	cmp    ax,0x33
   14005bbbf:	jne    0x14005bbd9
   14005bbc1:	cmp    WORD PTR [rdx+0x2],0x32
   14005bbc6:	jne    0x14005bbd9
   14005bbc8:	lea    rax,[rdx+0x4]
   14005bbcc:	mov    DWORD PTR [rcx+0x3c],0xa
   14005bbd3:	mov    QWORD PTR [rcx+0x18],rax
   14005bbd7:	jmp    0x14005bc1b
   14005bbd9:	cmp    ax,0x36
   14005bbdd:	jne    0x14005bbf7
   14005bbdf:	cmp    WORD PTR [rdx+0x2],0x34
   14005bbe4:	jne    0x14005bbf7
   14005bbe6:	lea    rax,[rdx+0x4]
   14005bbea:	mov    DWORD PTR [rcx+0x3c],0xb
   14005bbf1:	mov    QWORD PTR [rcx+0x18],rax
   14005bbf5:	jmp    0x14005bc1b
   14005bbf7:	sub    ax,0x58
   14005bbfb:	cmp    ax,0x20
   14005bbff:	ja     0x14005bc1b
   14005bc01:	movzx  eax,ax
   14005bc04:	movabs rdx,0x120821001
   14005bc0e:	bt     rdx,rax
   14005bc12:	jae    0x14005bc1b
   14005bc14:	mov    DWORD PTR [rcx+0x3c],0x9
   14005bc1b:	mov    al,0x1
   14005bc1d:	add    rsp,0x28
   14005bc21:	ret    
   14005bc22:	int3   
   14005bc23:	int3   
   14005bc24:	mov    QWORD PTR [rsp+0x10],rbx
   14005bc29:	mov    QWORD PTR [rsp+0x18],rbp
   14005bc2e:	mov    QWORD PTR [rsp+0x20],rsi
   14005bc33:	push   rdi
   14005bc34:	push   r14
   14005bc36:	push   r15
   14005bc38:	sub    rsp,0x30
   14005bc3c:	movsx  eax,BYTE PTR [rcx+0x41]
   14005bc40:	mov    rbx,rcx
   14005bc43:	mov    r15d,0x1
   14005bc49:	cmp    eax,0x64
   14005bc4c:	jg     0x14005bcab
   14005bc4e:	je     0x14005bd1c
   14005bc54:	cmp    eax,0x41
   14005bc57:	je     0x14005bd2f
   14005bc5d:	cmp    eax,0x43
   14005bc60:	je     0x14005bc95
   14005bc62:	cmp    eax,0x44
   14005bc65:	jle    0x14005bd38
   14005bc6b:	cmp    eax,0x47
   14005bc6e:	jle    0x14005bd2f
   14005bc74:	cmp    eax,0x53
   14005bc77:	je     0x14005bcd8
   14005bc79:	cmp    eax,0x58
   14005bc7c:	je     0x14005bced
   14005bc7e:	cmp    eax,0x5a
   14005bc81:	je     0x14005bca1
   14005bc83:	cmp    eax,0x61
   14005bc86:	je     0x14005bd2f
   14005bc8c:	cmp    eax,0x63
   14005bc8f:	jne    0x14005bd38
   14005bc95:	xor    edx,edx
   14005bc97:	call   0x14005c6cc
   14005bc9c:	jmp    0x14005bd34
   14005bca1:	call   0x14005c16c
   14005bca6:	jmp    0x14005bd34
   14005bcab:	cmp    eax,0x67
   14005bcae:	jle    0x14005bd2f
   14005bcb0:	cmp    eax,0x69
   14005bcb3:	je     0x14005bd1c
   14005bcb5:	cmp    eax,0x6e
   14005bcb8:	je     0x14005bd15
   14005bcba:	cmp    eax,0x6f
   14005bcbd:	je     0x14005bcf7
   14005bcbf:	cmp    eax,0x70
   14005bcc2:	je     0x14005bcdf
   14005bcc4:	cmp    eax,0x73
   14005bcc7:	je     0x14005bcd8
   14005bcc9:	cmp    eax,0x75
   14005bccc:	je     0x14005bd20
   14005bcce:	cmp    eax,0x78
   14005bcd1:	jne    0x14005bd38
   14005bcd3:	lea    edx,[rax-0x68]
   14005bcd6:	jmp    0x14005bd25
   14005bcd8:	call   0x14005caa4
   14005bcdd:	jmp    0x14005bd34
   14005bcdf:	mov    DWORD PTR [rcx+0x38],0x10
   14005bce6:	mov    DWORD PTR [rcx+0x3c],0xb
   14005bced:	mov    r8b,r15b
   14005bcf0:	mov    edx,0x10
   14005bcf5:	jmp    0x14005bd28
   14005bcf7:	mov    ecx,DWORD PTR [rcx+0x30]
   14005bcfa:	mov    eax,ecx
   14005bcfc:	shr    eax,0x5
   14005bcff:	test   r15b,al
   14005bd02:	je     0x14005bd0b
   14005bd04:	bts    ecx,0x7
   14005bd08:	mov    DWORD PTR [rbx+0x30],ecx
   14005bd0b:	mov    edx,0x8
   14005bd10:	mov    rcx,rbx
   14005bd13:	jmp    0x14005bd25
   14005bd15:	call   0x14005c9c8
   14005bd1a:	jmp    0x14005bd34
   14005bd1c:	or     DWORD PTR [rcx+0x30],0x10
   14005bd20:	mov    edx,0xa
   14005bd25:	xor    r8d,r8d
   14005bd28:	call   0x14005c828
   14005bd2d:	jmp    0x14005bd34
   14005bd2f:	call   0x14005c26c
   14005bd34:	test   al,al
   14005bd36:	jne    0x14005bd3f
   14005bd38:	xor    al,al
   14005bd3a:	jmp    0x14005be84
   14005bd3f:	cmp    BYTE PTR [rbx+0x40],0x0
   14005bd43:	jne    0x14005be81
   14005bd49:	mov    edx,DWORD PTR [rbx+0x30]
   14005bd4c:	xor    eax,eax
   14005bd4e:	mov    WORD PTR [rsp+0x50],ax
   14005bd53:	xor    edi,edi
   14005bd55:	mov    BYTE PTR [rsp+0x52],al
   14005bd59:	mov    eax,edx
   14005bd5b:	shr    eax,0x4
   14005bd5e:	test   r15b,al
   14005bd61:	je     0x14005bd91
   14005bd63:	mov    eax,edx
   14005bd65:	shr    eax,0x6
   14005bd68:	test   r15b,al
   14005bd6b:	je     0x14005bd74
   14005bd6d:	mov    BYTE PTR [rsp+0x50],0x2d
   14005bd72:	jmp    0x14005bd8e
   14005bd74:	test   r15b,dl
   14005bd77:	je     0x14005bd80
   14005bd79:	mov    BYTE PTR [rsp+0x50],0x2b
   14005bd7e:	jmp    0x14005bd8e
   14005bd80:	mov    eax,edx
   14005bd82:	shr    eax,1
   14005bd84:	test   r15b,al
   14005bd87:	je     0x14005bd91
   14005bd89:	mov    BYTE PTR [rsp+0x50],0x20
   14005bd8e:	mov    rdi,r15
   14005bd91:	mov    cl,BYTE PTR [rbx+0x41]
   14005bd94:	lea    eax,[rcx-0x58]
   14005bd97:	test   al,0xdf
   14005bd99:	jne    0x14005bdaa
   14005bd9b:	mov    eax,edx
   14005bd9d:	shr    eax,0x5
   14005bda0:	test   r15b,al
   14005bda3:	je     0x14005bdaa
   14005bda5:	mov    r8b,r15b
   14005bda8:	jmp    0x14005bdad
   14005bdaa:	xor    r8b,r8b
   14005bdad:	lea    eax,[rcx-0x41]
   14005bdb0:	test   al,0xdf
   14005bdb2:	sete   al
   14005bdb5:	test   r8b,r8b
   14005bdb8:	jne    0x14005bdbe
   14005bdba:	test   al,al
   14005bdbc:	je     0x14005bde8
   14005bdbe:	mov    BYTE PTR [rsp+rdi*1+0x50],0x30
   14005bdc3:	add    rdi,r15
   14005bdc6:	cmp    cl,0x58
   14005bdc9:	je     0x14005bdd4
   14005bdcb:	cmp    cl,0x41
   14005bdce:	je     0x14005bdd4
   14005bdd0:	xor    al,al
   14005bdd2:	jmp    0x14005bdd7
   14005bdd4:	mov    al,r15b
   14005bdd7:	neg    al
   14005bdd9:	sbb    al,al
   14005bddb:	and    al,0xe0
   14005bddd:	add    al,0x61
   14005bddf:	add    al,0x17
   14005bde1:	mov    BYTE PTR [rsp+rdi*1+0x50],al
   14005bde5:	add    rdi,r15
   14005bde8:	mov    esi,DWORD PTR [rbx+0x34]
   14005bdeb:	sub    esi,DWORD PTR [rbx+0x50]
   14005bdee:	sub    esi,edi
   14005bdf0:	test   dl,0xc
   14005bdf3:	jne    0x14005be0a
   14005bdf5:	lea    r9,[rbx+0x28]
   14005bdf9:	mov    r8d,esi
   14005bdfc:	lea    rcx,[rbx+0x468]
   14005be03:	mov    dl,0x20
   14005be05:	call   0x14005afac
   14005be0a:	mov    rax,QWORD PTR [rbx+0x10]
   14005be0e:	lea    rbp,[rbx+0x28]
   14005be12:	lea    r14,[rbx+0x468]
   14005be19:	mov    QWORD PTR [rsp+0x20],rax
   14005be1e:	mov    r9,rbp
   14005be21:	lea    rdx,[rsp+0x50]
   14005be26:	mov    rcx,r14
   14005be29:	mov    r8d,edi
   14005be2c:	call   0x14005cdc4
   14005be31:	mov    ecx,DWORD PTR [rbx+0x30]
   14005be34:	mov    eax,ecx
   14005be36:	shr    eax,0x3
   14005be39:	test   r15b,al
   14005be3c:	je     0x14005be56
   14005be3e:	shr    ecx,0x2
   14005be41:	test   r15b,cl
   14005be44:	jne    0x14005be56
   14005be46:	mov    r9,rbp
   14005be49:	mov    r8d,esi
   14005be4c:	mov    dl,0x30
   14005be4e:	mov    rcx,r14
   14005be51:	call   0x14005afac
   14005be56:	xor    edx,edx
   14005be58:	mov    rcx,rbx
   14005be5b:	call   0x14005cbfc
   14005be60:	cmp    DWORD PTR [rbp+0x0],0x0
   14005be64:	jl     0x14005be81
   14005be66:	mov    eax,DWORD PTR [rbx+0x30]
   14005be69:	shr    eax,0x2
   14005be6c:	test   r15b,al
   14005be6f:	je     0x14005be81
   14005be71:	mov    r9,rbp
   14005be74:	mov    r8d,esi
   14005be77:	mov    dl,0x20
   14005be79:	mov    rcx,r14
   14005be7c:	call   0x14005afac
   14005be81:	mov    al,r15b
   14005be84:	mov    rbx,QWORD PTR [rsp+0x58]
   14005be89:	mov    rbp,QWORD PTR [rsp+0x60]
   14005be8e:	mov    rsi,QWORD PTR [rsp+0x68]
   14005be93:	add    rsp,0x30
   14005be97:	pop    r15
   14005be99:	pop    r14
   14005be9b:	pop    rdi
   14005be9c:	ret    
   14005be9d:	int3   
   14005be9e:	int3   
   14005be9f:	int3   
   14005bea0:	mov    QWORD PTR [rsp+0x10],rbx
   14005bea5:	mov    QWORD PTR [rsp+0x18],rbp
   14005beaa:	mov    QWORD PTR [rsp+0x20],rsi
   14005beaf:	push   rdi
   14005beb0:	push   r12
   14005beb2:	push   r13
   14005beb4:	push   r14
   14005beb6:	push   r15
   14005beb8:	sub    rsp,0x40
   14005bebc:	mov    rax,QWORD PTR [rip+0x2601d]        # 0x140081ee0
   14005bec3:	xor    rax,rsp
   14005bec6:	mov    QWORD PTR [rsp+0x38],rax
   14005becb:	movzx  eax,WORD PTR [rcx+0x42]
   14005becf:	mov    esi,0x58
   14005bed4:	mov    rbx,rcx
   14005bed7:	lea    ebp,[rsi-0x17]
   14005beda:	lea    r15d,[rsi-0x57]
   14005bede:	cmp    eax,0x64
   14005bee1:	jg     0x14005bf3e
   14005bee3:	je     0x14005bfaf
   14005bee9:	cmp    eax,ebp
   14005beeb:	je     0x14005bfc2
   14005bef1:	cmp    eax,0x43
   14005bef4:	je     0x14005bf28
   14005bef6:	cmp    eax,0x44
   14005bef9:	jle    0x14005bfcb
   14005beff:	cmp    eax,0x47
   14005bf02:	jle    0x14005bfc2
   14005bf08:	cmp    eax,0x53
   14005bf0b:	je     0x14005bf6b
   14005bf0d:	cmp    eax,esi
   14005bf0f:	je     0x14005bf80
   14005bf11:	cmp    eax,0x5a
   14005bf14:	je     0x14005bf34
   14005bf16:	cmp    eax,0x61
   14005bf19:	je     0x14005bfc2
   14005bf1f:	cmp    eax,0x63
   14005bf22:	jne    0x14005bfcb
   14005bf28:	xor    edx,edx
   14005bf2a:	call   0x14005c780
   14005bf2f:	jmp    0x14005bfc7
   14005bf34:	call   0x14005c1ec
   14005bf39:	jmp    0x14005bfc7
   14005bf3e:	cmp    eax,0x67
   14005bf41:	jle    0x14005bfc2
   14005bf43:	cmp    eax,0x69
   14005bf46:	je     0x14005bfaf
   14005bf48:	cmp    eax,0x6e
   14005bf4b:	je     0x14005bfa8
   14005bf4d:	cmp    eax,0x6f
   14005bf50:	je     0x14005bf8a
   14005bf52:	cmp    eax,0x70
   14005bf55:	je     0x14005bf72
   14005bf57:	cmp    eax,0x73
   14005bf5a:	je     0x14005bf6b
   14005bf5c:	cmp    eax,0x75
   14005bf5f:	je     0x14005bfb3
   14005bf61:	cmp    eax,0x78
   14005bf64:	jne    0x14005bfcb
   14005bf66:	lea    edx,[rax-0x68]
   14005bf69:	jmp    0x14005bfb8
   14005bf6b:	call   0x14005cb34
   14005bf70:	jmp    0x14005bfc7
   14005bf72:	mov    DWORD PTR [rcx+0x38],0x10
   14005bf79:	mov    DWORD PTR [rcx+0x3c],0xb
   14005bf80:	mov    r8b,r15b
   14005bf83:	mov    edx,0x10
   14005bf88:	jmp    0x14005bfbb
   14005bf8a:	mov    ecx,DWORD PTR [rcx+0x30]
   14005bf8d:	mov    eax,ecx
   14005bf8f:	shr    eax,0x5
   14005bf92:	test   r15b,al
   14005bf95:	je     0x14005bf9e
   14005bf97:	bts    ecx,0x7
   14005bf9b:	mov    DWORD PTR [rbx+0x30],ecx
   14005bf9e:	mov    edx,0x8
   14005bfa3:	mov    rcx,rbx
   14005bfa6:	jmp    0x14005bfb8
   14005bfa8:	call   0x14005c9c8
   14005bfad:	jmp    0x14005bfc7
   14005bfaf:	or     DWORD PTR [rcx+0x30],0x10
   14005bfb3:	mov    edx,0xa
   14005bfb8:	xor    r8d,r8d
   14005bfbb:	call   0x14005c828
   14005bfc0:	jmp    0x14005bfc7
   14005bfc2:	call   0x14005c488
   14005bfc7:	test   al,al
   14005bfc9:	jne    0x14005bfd2
   14005bfcb:	xor    al,al
   14005bfcd:	jmp    0x14005c13e
   14005bfd2:	cmp    BYTE PTR [rbx+0x40],0x0
   14005bfd6:	jne    0x14005c13b
   14005bfdc:	mov    edx,DWORD PTR [rbx+0x30]
   14005bfdf:	xor    eax,eax
   14005bfe1:	mov    DWORD PTR [rsp+0x30],eax
   14005bfe5:	xor    edi,edi
   14005bfe7:	mov    WORD PTR [rsp+0x34],ax
   14005bfec:	mov    eax,edx
   14005bfee:	shr    eax,0x4
   14005bff1:	lea    r13d,[rdi+0x20]
   14005bff5:	test   r15b,al
   14005bff8:	je     0x14005c02c
   14005bffa:	mov    eax,edx
   14005bffc:	shr    eax,0x6
   14005bfff:	test   r15b,al
   14005c002:	je     0x14005c00e
   14005c004:	lea    eax,[rdi+0x2d]
   14005c007:	mov    WORD PTR [rsp+0x30],ax
   14005c00c:	jmp    0x14005c029
   14005c00e:	test   r15b,dl
   14005c011:	je     0x14005c01a
   14005c013:	mov    eax,0x2b
   14005c018:	jmp    0x14005c007
   14005c01a:	mov    eax,edx
   14005c01c:	shr    eax,1
   14005c01e:	test   r15b,al
   14005c021:	je     0x14005c02c
   14005c023:	mov    WORD PTR [rsp+0x30],r13w
   14005c029:	mov    rdi,r15
   14005c02c:	movzx  ecx,WORD PTR [rbx+0x42]
   14005c030:	mov    r9d,0xffdf
   14005c036:	movzx  eax,cx
   14005c039:	sub    ax,si
   14005c03c:	test   r9w,ax
   14005c040:	jne    0x14005c051
   14005c042:	mov    eax,edx
   14005c044:	shr    eax,0x5
   14005c047:	test   r15b,al
   14005c04a:	je     0x14005c051
   14005c04c:	mov    r8b,r15b
   14005c04f:	jmp    0x14005c054
   14005c051:	xor    r8b,r8b
   14005c054:	movzx  eax,cx
   14005c057:	mov    r12d,0x30
   14005c05d:	sub    ax,bp
   14005c060:	test   r9w,ax
   14005c064:	sete   al
   14005c067:	test   r8b,r8b
   14005c06a:	jne    0x14005c070
   14005c06c:	test   al,al
   14005c06e:	je     0x14005c09f
   14005c070:	mov    WORD PTR [rsp+rdi*2+0x30],r12w
   14005c076:	add    rdi,r15
   14005c079:	cmp    cx,si
   14005c07c:	je     0x14005c087
   14005c07e:	cmp    cx,bp
   14005c081:	je     0x14005c087
   14005c083:	xor    al,al
   14005c085:	jmp    0x14005c08a
   14005c087:	mov    al,r15b
   14005c08a:	neg    al
   14005c08c:	sbb    al,al
   14005c08e:	and    al,0xe0
   14005c090:	add    al,0x61
   14005c092:	add    al,0x17
   14005c094:	movsx  eax,al
   14005c097:	mov    WORD PTR [rsp+rdi*2+0x30],ax
   14005c09c:	add    rdi,r15
   14005c09f:	mov    esi,DWORD PTR [rbx+0x34]
   14005c0a2:	sub    esi,DWORD PTR [rbx+0x50]
   14005c0a5:	sub    esi,edi
   14005c0a7:	test   dl,0xc
   14005c0aa:	jne    0x14005c0c2
   14005c0ac:	lea    r9,[rbx+0x28]
   14005c0b0:	mov    r8d,esi
   14005c0b3:	lea    rcx,[rbx+0x468]
   14005c0ba:	mov    dl,r13b
   14005c0bd:	call   0x14005b008
   14005c0c2:	mov    rax,QWORD PTR [rbx+0x10]
   14005c0c6:	lea    rbp,[rbx+0x28]
   14005c0ca:	lea    r14,[rbx+0x468]
   14005c0d1:	mov    QWORD PTR [rsp+0x20],rax
   14005c0d6:	mov    r9,rbp
   14005c0d9:	lea    rdx,[rsp+0x30]
   14005c0de:	mov    rcx,r14
   14005c0e1:	mov    r8d,edi
   14005c0e4:	call   0x14005ce80
   14005c0e9:	mov    ecx,DWORD PTR [rbx+0x30]
   14005c0ec:	mov    eax,ecx
   14005c0ee:	shr    eax,0x3
   14005c0f1:	test   r15b,al
   14005c0f4:	je     0x14005c10f
   14005c0f6:	shr    ecx,0x2
   14005c0f9:	test   r15b,cl
   14005c0fc:	jne    0x14005c10f
   14005c0fe:	mov    r9,rbp
   14005c101:	mov    r8d,esi
   14005c104:	mov    dl,r12b
   14005c107:	mov    rcx,r14
   14005c10a:	call   0x14005b008
   14005c10f:	xor    edx,edx
   14005c111:	mov    rcx,rbx
   14005c114:	call   0x14005ccd4
   14005c119:	cmp    DWORD PTR [rbp+0x0],0x0
   14005c11d:	jl     0x14005c13b
   14005c11f:	mov    eax,DWORD PTR [rbx+0x30]
   14005c122:	shr    eax,0x2
   14005c125:	test   r15b,al
   14005c128:	je     0x14005c13b
   14005c12a:	mov    r9,rbp
   14005c12d:	mov    r8d,esi
   14005c130:	mov    dl,r13b
   14005c133:	mov    rcx,r14
   14005c136:	call   0x14005b008
   14005c13b:	mov    al,r15b
   14005c13e:	mov    rcx,QWORD PTR [rsp+0x38]
   14005c143:	xor    rcx,rsp
   14005c146:	call   0x140055f90
   14005c14b:	lea    r11,[rsp+0x40]
   14005c150:	mov    rbx,QWORD PTR [r11+0x38]
   14005c154:	mov    rbp,QWORD PTR [r11+0x40]
   14005c158:	mov    rsi,QWORD PTR [r11+0x48]
   14005c15c:	mov    rsp,r11
   14005c15f:	pop    r15
   14005c161:	pop    r14
   14005c163:	pop    r13
   14005c165:	pop    r12
   14005c167:	pop    rdi
   14005c168:	ret    
   14005c169:	int3   
   14005c16a:	int3   
   14005c16b:	int3   
   14005c16c:	mov    QWORD PTR [rsp+0x8],rbx
   14005c171:	mov    QWORD PTR [rsp+0x10],rsi
   14005c176:	push   rdi
   14005c177:	sub    rsp,0x20
   14005c17b:	add    QWORD PTR [rcx+0x20],0x8
   14005c180:	mov    rbx,rcx
   14005c183:	mov    rax,QWORD PTR [rcx+0x20]
   14005c187:	mov    rdi,QWORD PTR [rax-0x8]
   14005c18b:	test   rdi,rdi
   14005c18e:	je     0x14005c1c3
   14005c190:	mov    rsi,QWORD PTR [rdi+0x8]
   14005c194:	test   rsi,rsi
   14005c197:	je     0x14005c1c3
   14005c199:	mov    r8d,DWORD PTR [rcx+0x3c]
   14005c19d:	mov    dl,BYTE PTR [rcx+0x41]
   14005c1a0:	mov    rcx,QWORD PTR [rcx]
   14005c1a3:	call   0x14005ae00
   14005c1a8:	test   al,al
   14005c1aa:	mov    QWORD PTR [rbx+0x48],rsi
   14005c1ae:	movzx  eax,WORD PTR [rdi]
   14005c1b1:	je     0x14005c1be
   14005c1b3:	shr    eax,1
   14005c1b5:	mov    DWORD PTR [rbx+0x50],eax
   14005c1b8:	mov    BYTE PTR [rbx+0x54],0x1
   14005c1bc:	jmp    0x14005c1d9
   14005c1be:	mov    DWORD PTR [rbx+0x50],eax
   14005c1c1:	jmp    0x14005c1d5
   14005c1c3:	lea    rcx,[rip+0x15f12]        # 0x1400720dc
   14005c1ca:	mov    DWORD PTR [rbx+0x50],0x6
   14005c1d1:	mov    QWORD PTR [rbx+0x48],rcx
   14005c1d5:	mov    BYTE PTR [rbx+0x54],0x0
   14005c1d9:	mov    rbx,QWORD PTR [rsp+0x30]
   14005c1de:	mov    al,0x1
   14005c1e0:	mov    rsi,QWORD PTR [rsp+0x38]
   14005c1e5:	add    rsp,0x20
   14005c1e9:	pop    rdi
   14005c1ea:	ret    
   14005c1eb:	int3   
   14005c1ec:	mov    QWORD PTR [rsp+0x8],rbx
   14005c1f1:	mov    QWORD PTR [rsp+0x10],rsi
   14005c1f6:	push   rdi
   14005c1f7:	sub    rsp,0x20
   14005c1fb:	add    QWORD PTR [rcx+0x20],0x8
   14005c200:	mov    rbx,rcx
   14005c203:	mov    rax,QWORD PTR [rcx+0x20]
   14005c207:	mov    rdi,QWORD PTR [rax-0x8]
   14005c20b:	test   rdi,rdi
   14005c20e:	je     0x14005c244
   14005c210:	mov    rsi,QWORD PTR [rdi+0x8]
   14005c214:	test   rsi,rsi
   14005c217:	je     0x14005c244
   14005c219:	mov    r8d,DWORD PTR [rcx+0x3c]
   14005c21d:	movzx  edx,WORD PTR [rcx+0x42]
   14005c221:	mov    rcx,QWORD PTR [rcx]
   14005c224:	call   0x14005ae30
   14005c229:	test   al,al
   14005c22b:	mov    QWORD PTR [rbx+0x48],rsi
   14005c22f:	movzx  eax,WORD PTR [rdi]
   14005c232:	je     0x14005c23f
   14005c234:	shr    eax,1
   14005c236:	mov    DWORD PTR [rbx+0x50],eax
   14005c239:	mov    BYTE PTR [rbx+0x54],0x1
   14005c23d:	jmp    0x14005c25a
   14005c23f:	mov    DWORD PTR [rbx+0x50],eax
   14005c242:	jmp    0x14005c256
   14005c244:	lea    rcx,[rip+0x15e91]        # 0x1400720dc
   14005c24b:	mov    DWORD PTR [rbx+0x50],0x6
   14005c252:	mov    QWORD PTR [rbx+0x48],rcx
   14005c256:	mov    BYTE PTR [rbx+0x54],0x0
   14005c25a:	mov    rbx,QWORD PTR [rsp+0x30]
   14005c25f:	mov    al,0x1
   14005c261:	mov    rsi,QWORD PTR [rsp+0x38]
   14005c266:	add    rsp,0x20
   14005c26a:	pop    rdi
   14005c26b:	ret    
   14005c26c:	mov    QWORD PTR [rsp+0x10],rbx
   14005c271:	push   rdi
   14005c272:	sub    rsp,0x50
   14005c276:	or     DWORD PTR [rcx+0x30],0x10
   14005c27a:	mov    rbx,rcx
   14005c27d:	mov    eax,DWORD PTR [rcx+0x38]
   14005c280:	test   eax,eax
   14005c282:	jns    0x14005c29a
   14005c284:	mov    al,BYTE PTR [rcx+0x41]
   14005c287:	sub    al,0x41
   14005c289:	and    al,0xdf
   14005c28b:	neg    al
   14005c28d:	sbb    eax,eax
   14005c28f:	and    eax,0xfffffff9
   14005c292:	add    eax,0xd
   14005c295:	mov    DWORD PTR [rcx+0x38],eax
   14005c298:	jmp    0x14005c2ac
   14005c29a:	jne    0x14005c2ac
   14005c29c:	mov    al,BYTE PTR [rcx+0x41]
   14005c29f:	sub    al,0x47
   14005c2a1:	test   al,0xdf
   14005c2a3:	jne    0x14005c2ac
   14005c2a5:	mov    DWORD PTR [rcx+0x38],0x1
   14005c2ac:	mov    eax,DWORD PTR [rcx+0x38]
   14005c2af:	lea    rdi,[rcx+0x58]
   14005c2b3:	add    eax,0x15d
   14005c2b8:	mov    rcx,rdi
   14005c2bb:	movsxd rdx,eax
   14005c2be:	call   0x14005ad54
   14005c2c3:	mov    r8d,0x200
   14005c2c9:	test   al,al
   14005c2cb:	jne    0x14005c2ee
   14005c2cd:	cmp    QWORD PTR [rdi+0x408],0x0
   14005c2d5:	jne    0x14005c2dc
   14005c2d7:	mov    eax,r8d
   14005c2da:	jmp    0x14005c2e6
   14005c2dc:	mov    rax,QWORD PTR [rdi+0x400]
   14005c2e3:	shr    rax,1
   14005c2e6:	add    eax,0xfffffea3
   14005c2eb:	mov    DWORD PTR [rbx+0x38],eax
   14005c2ee:	mov    rax,QWORD PTR [rdi+0x408]
   14005c2f5:	test   rax,rax
   14005c2f8:	cmove  rax,rdi
   14005c2fc:	mov    QWORD PTR [rbx+0x48],rax
   14005c300:	xor    eax,eax
   14005c302:	add    QWORD PTR [rbx+0x20],0x8
   14005c307:	cmp    QWORD PTR [rdi+0x408],0x0
   14005c30f:	mov    QWORD PTR [rsp+0x60],rax
   14005c314:	mov    rax,QWORD PTR [rbx+0x20]
   14005c318:	movsd  xmm0,QWORD PTR [rax-0x8]
   14005c31d:	movsd  QWORD PTR [rsp+0x60],xmm0
   14005c323:	jne    0x14005c32a
   14005c325:	mov    r9,r8
   14005c328:	jmp    0x14005c334
   14005c32a:	mov    r9,QWORD PTR [rdi+0x400]
   14005c331:	shr    r9,1
   14005c334:	mov    rcx,QWORD PTR [rdi+0x408]
   14005c33b:	test   rcx,rcx
   14005c33e:	jne    0x14005c349
   14005c340:	lea    r10,[rdi+0x200]
   14005c347:	jmp    0x14005c356
   14005c349:	mov    r10,QWORD PTR [rdi+0x400]
   14005c350:	shr    r10,1
   14005c353:	add    r10,rcx
   14005c356:	cmp    rcx,0x0
   14005c35a:	je     0x14005c366
   14005c35c:	mov    r8,QWORD PTR [rdi+0x400]
   14005c363:	shr    r8,1
   14005c366:	mov    rax,QWORD PTR [rbx+0x8]
   14005c36a:	mov    rdx,rcx
   14005c36d:	mov    QWORD PTR [rsp+0x40],rax
   14005c372:	test   rcx,rcx
   14005c375:	mov    rax,QWORD PTR [rbx]
   14005c378:	movsx  ecx,BYTE PTR [rbx+0x41]
   14005c37c:	cmove  rdx,rdi
   14005c380:	mov    QWORD PTR [rsp+0x38],rax
   14005c385:	mov    eax,DWORD PTR [rbx+0x38]
   14005c388:	mov    DWORD PTR [rsp+0x30],eax
   14005c38c:	mov    DWORD PTR [rsp+0x28],ecx
   14005c390:	lea    rcx,[rsp+0x60]
   14005c395:	mov    QWORD PTR [rsp+0x20],r9
   14005c39a:	mov    r9,r10
   14005c39d:	call   0x1400621bc
   14005c3a2:	mov    eax,DWORD PTR [rbx+0x30]
   14005c3a5:	shr    eax,0x5
   14005c3a8:	test   al,0x1
   14005c3aa:	je     0x14005c3bf
   14005c3ac:	cmp    DWORD PTR [rbx+0x38],0x0
   14005c3b0:	jne    0x14005c3bf
   14005c3b2:	mov    rdx,QWORD PTR [rbx+0x8]
   14005c3b6:	mov    rcx,QWORD PTR [rbx+0x48]
   14005c3ba:	call   0x14005b204
   14005c3bf:	mov    al,BYTE PTR [rbx+0x41]
   14005c3c2:	sub    al,0x47
   14005c3c4:	test   al,0xdf
   14005c3c6:	jne    0x14005c435
   14005c3c8:	mov    eax,DWORD PTR [rbx+0x30]
   14005c3cb:	shr    eax,0x5
   14005c3ce:	test   al,0x1
   14005c3d0:	jne    0x14005c435
   14005c3d2:	mov    rax,QWORD PTR [rbx+0x8]
   14005c3d6:	mov    rdx,QWORD PTR [rbx+0x48]
   14005c3da:	mov    rcx,QWORD PTR [rax]
   14005c3dd:	mov    rax,QWORD PTR [rcx+0xf8]
   14005c3e4:	mov    rcx,QWORD PTR [rax]
   14005c3e7:	mov    r8b,BYTE PTR [rcx]
   14005c3ea:	jmp    0x14005c3f4
   14005c3ec:	cmp    al,r8b
   14005c3ef:	je     0x14005c3fa
   14005c3f1:	inc    rdx
   14005c3f4:	mov    al,BYTE PTR [rdx]
   14005c3f6:	test   al,al
   14005c3f8:	jne    0x14005c3ec
   14005c3fa:	mov    al,BYTE PTR [rdx]
   14005c3fc:	inc    rdx
   14005c3ff:	test   al,al
   14005c401:	je     0x14005c435
   14005c403:	jmp    0x14005c40e
   14005c405:	sub    al,0x45
   14005c407:	test   al,0xdf
   14005c409:	je     0x14005c414
   14005c40b:	inc    rdx
   14005c40e:	mov    al,BYTE PTR [rdx]
   14005c410:	test   al,al
   14005c412:	jne    0x14005c405
   14005c414:	mov    rcx,rdx
   14005c417:	dec    rdx
   14005c41a:	cmp    BYTE PTR [rdx],0x30
   14005c41d:	je     0x14005c417
   14005c41f:	cmp    BYTE PTR [rdx],r8b
   14005c422:	jne    0x14005c427
   14005c424:	dec    rdx
   14005c427:	mov    al,BYTE PTR [rcx]
   14005c429:	inc    rdx
   14005c42c:	inc    rcx
   14005c42f:	mov    BYTE PTR [rdx],al
   14005c431:	test   al,al
   14005c433:	jne    0x14005c427
   14005c435:	mov    rax,QWORD PTR [rbx+0x48]
   14005c439:	cmp    BYTE PTR [rax],0x2d
   14005c43c:	jne    0x14005c449
   14005c43e:	or     DWORD PTR [rbx+0x30],0x40
   14005c442:	inc    rax
   14005c445:	mov    QWORD PTR [rbx+0x48],rax
   14005c449:	mov    rdx,QWORD PTR [rbx+0x48]
   14005c44d:	mov    al,BYTE PTR [rdx]
   14005c44f:	sub    al,0x49
   14005c451:	cmp    al,0x25
   14005c453:	ja     0x14005c469
   14005c455:	movabs rcx,0x2100000021
   14005c45f:	bt     rcx,rax
   14005c463:	jae    0x14005c469
   14005c465:	mov    BYTE PTR [rbx+0x41],0x73
   14005c469:	or     rcx,0xffffffffffffffff
   14005c46d:	inc    rcx
   14005c470:	cmp    BYTE PTR [rdx+rcx*1],0x0
   14005c474:	jne    0x14005c46d
   14005c476:	mov    DWORD PTR [rbx+0x50],ecx
   14005c479:	mov    al,0x1
   14005c47b:	mov    rbx,QWORD PTR [rsp+0x68]
   14005c480:	add    rsp,0x50
   14005c484:	pop    rdi
   14005c485:	ret    
   14005c486:	int3   
   14005c487:	int3   
   14005c488:	mov    QWORD PTR [rsp+0x10],rbx
   14005c48d:	mov    QWORD PTR [rsp+0x18],rdi
   14005c492:	push   r14
   14005c494:	sub    rsp,0x50
   14005c498:	or     DWORD PTR [rcx+0x30],0x10
   14005c49c:	mov    rbx,rcx
   14005c49f:	mov    eax,DWORD PTR [rcx+0x38]
   14005c4a2:	mov    r14d,0xffdf
   14005c4a8:	test   eax,eax
   14005c4aa:	jns    0x14005c4c8
   14005c4ac:	movzx  eax,WORD PTR [rcx+0x42]
   14005c4b0:	sub    ax,0x41
   14005c4b4:	and    ax,r14w
   14005c4b8:	neg    ax
   14005c4bb:	sbb    eax,eax
   14005c4bd:	and    eax,0xfffffff9
   14005c4c0:	add    eax,0xd
   14005c4c3:	mov    DWORD PTR [rcx+0x38],eax
   14005c4c6:	jmp    0x14005c4df
   14005c4c8:	jne    0x14005c4df
   14005c4ca:	movzx  eax,WORD PTR [rcx+0x42]
   14005c4ce:	sub    ax,0x47
   14005c4d2:	test   r14w,ax
   14005c4d6:	jne    0x14005c4df
   14005c4d8:	mov    DWORD PTR [rcx+0x38],0x1
   14005c4df:	mov    eax,DWORD PTR [rcx+0x38]
   14005c4e2:	lea    rdi,[rcx+0x58]
   14005c4e6:	add    eax,0x15d
   14005c4eb:	mov    rcx,rdi
   14005c4ee:	movsxd rdx,eax
   14005c4f1:	call   0x14005ad54
   14005c4f6:	mov    r8d,0x200
   14005c4fc:	test   al,al
   14005c4fe:	jne    0x14005c521
   14005c500:	cmp    QWORD PTR [rdi+0x408],0x0
   14005c508:	jne    0x14005c50f
   14005c50a:	mov    eax,r8d
   14005c50d:	jmp    0x14005c519
   14005c50f:	mov    rax,QWORD PTR [rdi+0x400]
   14005c516:	shr    rax,1
   14005c519:	add    eax,0xfffffea3
   14005c51e:	mov    DWORD PTR [rbx+0x38],eax
   14005c521:	mov    rax,QWORD PTR [rdi+0x408]
   14005c528:	test   rax,rax
   14005c52b:	cmove  rax,rdi
   14005c52f:	mov    QWORD PTR [rbx+0x48],rax
   14005c533:	xor    eax,eax
   14005c535:	add    QWORD PTR [rbx+0x20],0x8
   14005c53a:	cmp    QWORD PTR [rdi+0x408],0x0
   14005c542:	mov    QWORD PTR [rsp+0x60],rax
   14005c547:	mov    rax,QWORD PTR [rbx+0x20]
   14005c54b:	movsd  xmm0,QWORD PTR [rax-0x8]
   14005c550:	movsd  QWORD PTR [rsp+0x60],xmm0
   14005c556:	jne    0x14005c55d
   14005c558:	mov    r9,r8
   14005c55b:	jmp    0x14005c567
   14005c55d:	mov    r9,QWORD PTR [rdi+0x400]
   14005c564:	shr    r9,1
   14005c567:	mov    rcx,QWORD PTR [rdi+0x408]
   14005c56e:	test   rcx,rcx
   14005c571:	jne    0x14005c57c
   14005c573:	lea    r10,[rdi+0x200]
   14005c57a:	jmp    0x14005c589
   14005c57c:	mov    r10,QWORD PTR [rdi+0x400]
   14005c583:	shr    r10,1
   14005c586:	add    r10,rcx
   14005c589:	cmp    rcx,0x0
   14005c58d:	je     0x14005c599
   14005c58f:	mov    r8,QWORD PTR [rdi+0x400]
   14005c596:	shr    r8,1
   14005c599:	mov    rax,QWORD PTR [rbx+0x8]
   14005c59d:	mov    rdx,rcx
   14005c5a0:	mov    QWORD PTR [rsp+0x40],rax
   14005c5a5:	test   rcx,rcx
   14005c5a8:	mov    rax,QWORD PTR [rbx]
   14005c5ab:	movsx  ecx,BYTE PTR [rbx+0x42]
   14005c5af:	cmove  rdx,rdi
   14005c5b3:	mov    QWORD PTR [rsp+0x38],rax
   14005c5b8:	mov    eax,DWORD PTR [rbx+0x38]
   14005c5bb:	mov    DWORD PTR [rsp+0x30],eax
   14005c5bf:	mov    DWORD PTR [rsp+0x28],ecx
   14005c5c3:	lea    rcx,[rsp+0x60]
   14005c5c8:	mov    QWORD PTR [rsp+0x20],r9
   14005c5cd:	mov    r9,r10
   14005c5d0:	call   0x1400621bc
   14005c5d5:	mov    eax,DWORD PTR [rbx+0x30]
   14005c5d8:	shr    eax,0x5
   14005c5db:	test   al,0x1
   14005c5dd:	je     0x14005c5f2
   14005c5df:	cmp    DWORD PTR [rbx+0x38],0x0
   14005c5e3:	jne    0x14005c5f2
   14005c5e5:	mov    rdx,QWORD PTR [rbx+0x8]
   14005c5e9:	mov    rcx,QWORD PTR [rbx+0x48]
   14005c5ed:	call   0x14005b204
   14005c5f2:	movzx  eax,WORD PTR [rbx+0x42]
   14005c5f6:	sub    ax,0x47
   14005c5fa:	test   r14w,ax
   14005c5fe:	jne    0x14005c66d
   14005c600:	mov    eax,DWORD PTR [rbx+0x30]
   14005c603:	shr    eax,0x5
   14005c606:	test   al,0x1
   14005c608:	jne    0x14005c66d
   14005c60a:	mov    rax,QWORD PTR [rbx+0x8]
   14005c60e:	mov    rdx,QWORD PTR [rbx+0x48]
   14005c612:	mov    rcx,QWORD PTR [rax]
   14005c615:	mov    rax,QWORD PTR [rcx+0xf8]
   14005c61c:	mov    rcx,QWORD PTR [rax]
   14005c61f:	mov    r8b,BYTE PTR [rcx]
   14005c622:	jmp    0x14005c62c
   14005c624:	cmp    al,r8b
   14005c627:	je     0x14005c632
   14005c629:	inc    rdx
   14005c62c:	mov    al,BYTE PTR [rdx]
   14005c62e:	test   al,al
   14005c630:	jne    0x14005c624
   14005c632:	mov    al,BYTE PTR [rdx]
   14005c634:	inc    rdx
   14005c637:	test   al,al
   14005c639:	je     0x14005c66d
   14005c63b:	jmp    0x14005c646
   14005c63d:	sub    al,0x45
   14005c63f:	test   al,0xdf
   14005c641:	je     0x14005c64c
   14005c643:	inc    rdx
   14005c646:	mov    al,BYTE PTR [rdx]
   14005c648:	test   al,al
   14005c64a:	jne    0x14005c63d
   14005c64c:	mov    rcx,rdx
   14005c64f:	dec    rdx
   14005c652:	cmp    BYTE PTR [rdx],0x30
   14005c655:	je     0x14005c64f
   14005c657:	cmp    BYTE PTR [rdx],r8b
   14005c65a:	jne    0x14005c65f
   14005c65c:	dec    rdx
   14005c65f:	mov    al,BYTE PTR [rcx]
   14005c661:	inc    rdx
   14005c664:	inc    rcx
   14005c667:	mov    BYTE PTR [rdx],al
   14005c669:	test   al,al
   14005c66b:	jne    0x14005c65f
   14005c66d:	mov    rax,QWORD PTR [rbx+0x48]
   14005c671:	cmp    BYTE PTR [rax],0x2d
   14005c674:	jne    0x14005c681
   14005c676:	or     DWORD PTR [rbx+0x30],0x40
   14005c67a:	inc    rax
   14005c67d:	mov    QWORD PTR [rbx+0x48],rax
   14005c681:	mov    rdx,QWORD PTR [rbx+0x48]
   14005c685:	mov    al,BYTE PTR [rdx]
   14005c687:	sub    al,0x49
   14005c689:	cmp    al,0x25
   14005c68b:	ja     0x14005c6a6
   14005c68d:	movabs rcx,0x2100000021
   14005c697:	bt     rcx,rax
   14005c69b:	jae    0x14005c6a6
   14005c69d:	mov    eax,0x73
   14005c6a2:	mov    WORD PTR [rbx+0x42],ax
   14005c6a6:	or     rcx,0xffffffffffffffff
   14005c6aa:	inc    rcx
   14005c6ad:	cmp    BYTE PTR [rdx+rcx*1],0x0
   14005c6b1:	jne    0x14005c6aa
   14005c6b3:	mov    rdi,QWORD PTR [rsp+0x70]
   14005c6b8:	mov    al,0x1
   14005c6ba:	mov    DWORD PTR [rbx+0x50],ecx
   14005c6bd:	mov    rbx,QWORD PTR [rsp+0x68]
   14005c6c2:	add    rsp,0x50
   14005c6c6:	pop    r14
   14005c6c8:	ret    
   14005c6c9:	int3   
   14005c6ca:	int3   
   14005c6cb:	int3   
   14005c6cc:	mov    QWORD PTR [rsp+0x8],rbx
   14005c6d1:	push   rdi
   14005c6d2:	sub    rsp,0x20
   14005c6d6:	mov    r8d,DWORD PTR [rcx+0x3c]
   14005c6da:	mov    rbx,rcx
   14005c6dd:	mov    dl,BYTE PTR [rcx+0x41]
   14005c6e0:	mov    rcx,QWORD PTR [rcx]
   14005c6e3:	call   0x14005ae00
   14005c6e8:	lea    rdi,[rbx+0x58]
   14005c6ec:	test   al,al
   14005c6ee:	je     0x14005c73b
   14005c6f0:	add    QWORD PTR [rbx+0x20],0x8
   14005c6f5:	cmp    QWORD PTR [rdi+0x408],0x0
   14005c6fd:	mov    rax,QWORD PTR [rbx+0x20]
   14005c701:	jne    0x14005c70b
   14005c703:	mov    r8d,0x200
   14005c709:	jmp    0x14005c715
   14005c70b:	mov    r8,QWORD PTR [rdi+0x400]
   14005c712:	shr    r8,1
   14005c715:	mov    rdx,QWORD PTR [rdi+0x408]
   14005c71c:	lea    rcx,[rbx+0x50]
   14005c720:	movzx  r9d,WORD PTR [rax-0x8]
   14005c725:	test   rdx,rdx
   14005c728:	cmove  rdx,rdi
   14005c72c:	call   0x1400611fc
   14005c731:	test   eax,eax
   14005c733:	je     0x14005c75f
   14005c735:	mov    BYTE PTR [rbx+0x40],0x1
   14005c739:	jmp    0x14005c75f
   14005c73b:	mov    r8,QWORD PTR [rdi+0x408]
   14005c742:	test   r8,r8
   14005c745:	cmove  r8,rdi
   14005c749:	add    QWORD PTR [rbx+0x20],0x8
   14005c74e:	mov    rcx,QWORD PTR [rbx+0x20]
   14005c752:	mov    dl,BYTE PTR [rcx-0x8]
   14005c755:	mov    BYTE PTR [r8],dl
   14005c758:	mov    DWORD PTR [rbx+0x50],0x1
   14005c75f:	mov    rcx,QWORD PTR [rdi+0x408]
   14005c766:	mov    al,0x1
   14005c768:	test   rcx,rcx
   14005c76b:	cmove  rcx,rdi
   14005c76f:	mov    QWORD PTR [rbx+0x48],rcx
   14005c773:	mov    rbx,QWORD PTR [rsp+0x30]
   14005c778:	add    rsp,0x20
   14005c77c:	pop    rdi
   14005c77d:	ret    
   14005c77e:	int3   
   14005c77f:	int3   
   14005c780:	mov    QWORD PTR [rsp+0x10],rbx
   14005c785:	mov    QWORD PTR [rsp+0x18],rsi
   14005c78a:	push   rdi
   14005c78b:	sub    rsp,0x20
   14005c78f:	mov    BYTE PTR [rcx+0x54],0x1
   14005c793:	mov    rbx,rcx
   14005c796:	add    QWORD PTR [rcx+0x20],0x8
   14005c79b:	mov    rax,QWORD PTR [rcx+0x20]
   14005c79f:	mov    r8d,DWORD PTR [rcx+0x3c]
   14005c7a3:	movzx  edx,WORD PTR [rcx+0x42]
   14005c7a7:	mov    rcx,QWORD PTR [rcx]
   14005c7aa:	movzx  esi,WORD PTR [rax-0x8]
   14005c7ae:	call   0x14005ae30
   14005c7b3:	lea    rdi,[rbx+0x58]
   14005c7b7:	mov    rcx,QWORD PTR [rdi+0x408]
   14005c7be:	test   al,al
   14005c7c0:	jne    0x14005c7f1
   14005c7c2:	mov    r9,QWORD PTR [rbx+0x8]
   14005c7c6:	lea    rdx,[rsp+0x30]
   14005c7cb:	mov    BYTE PTR [rsp+0x30],sil
   14005c7d0:	test   rcx,rcx
   14005c7d3:	mov    BYTE PTR [rsp+0x31],al
   14005c7d7:	cmove  rcx,rdi
   14005c7db:	mov    rax,QWORD PTR [r9]
   14005c7de:	movsxd r8,DWORD PTR [rax+0x8]
   14005c7e2:	call   0x140060f28
   14005c7e7:	test   eax,eax
   14005c7e9:	jns    0x14005c7fb
   14005c7eb:	mov    BYTE PTR [rbx+0x40],0x1
   14005c7ef:	jmp    0x14005c7fb
   14005c7f1:	test   rcx,rcx
   14005c7f4:	cmove  rcx,rdi
   14005c7f8:	mov    WORD PTR [rcx],si
   14005c7fb:	mov    rcx,QWORD PTR [rdi+0x408]
   14005c802:	mov    al,0x1
   14005c804:	mov    rsi,QWORD PTR [rsp+0x40]
   14005c809:	test   rcx,rcx
   14005c80c:	mov    DWORD PTR [rbx+0x50],0x1
   14005c813:	cmove  rcx,rdi
   14005c817:	mov    QWORD PTR [rbx+0x48],rcx
   14005c81b:	mov    rbx,QWORD PTR [rsp+0x38]
   14005c820:	add    rsp,0x20
   14005c824:	pop    rdi
   14005c825:	ret    
   14005c826:	int3   
   14005c827:	int3   
   14005c828:	rex push rbx
   14005c82a:	sub    rsp,0x20
   14005c82e:	mov    r11d,0x8
   14005c834:	mov    rbx,rcx
   14005c837:	mov    ecx,DWORD PTR [rcx+0x3c]
   14005c83a:	mov    r9b,r8b
   14005c83d:	mov    r10d,edx
   14005c840:	lea    r8d,[r11-0x4]
   14005c844:	cmp    ecx,0x5
   14005c847:	jg     0x14005c8ae
   14005c849:	je     0x14005c863
   14005c84b:	test   ecx,ecx
   14005c84d:	je     0x14005c89b
   14005c84f:	sub    ecx,0x1
   14005c852:	je     0x14005c8a7
   14005c854:	sub    ecx,0x1
   14005c857:	je     0x14005c8a0
   14005c859:	sub    ecx,0x1
   14005c85c:	je     0x14005c89b
   14005c85e:	cmp    ecx,0x1
   14005c861:	jne    0x14005c8bf
   14005c863:	mov    rdx,r11
   14005c866:	mov    rax,rdx
   14005c869:	sub    rax,0x1
   14005c86d:	je     0x14005c915
   14005c873:	sub    rax,0x1
   14005c877:	je     0x14005c8f6
   14005c879:	sub    rax,0x2
   14005c87d:	je     0x14005c8d9
   14005c87f:	cmp    rax,r8
   14005c882:	je     0x14005c8c3
   14005c884:	call   0x140060e94
   14005c889:	mov    DWORD PTR [rax],0x16
   14005c88f:	call   0x140060d74
   14005c894:	xor    al,al
   14005c896:	jmp    0x14005c9c1
   14005c89b:	mov    rdx,r8
   14005c89e:	jmp    0x14005c866
   14005c8a0:	mov    edx,0x2
   14005c8a5:	jmp    0x14005c866
   14005c8a7:	mov    edx,0x1
   14005c8ac:	jmp    0x14005c866
   14005c8ae:	sub    ecx,0x6
   14005c8b1:	je     0x14005c863
   14005c8b3:	sub    ecx,0x1
   14005c8b6:	je     0x14005c863
   14005c8b8:	sub    ecx,0x2
   14005c8bb:	je     0x14005c863
   14005c8bd:	jmp    0x14005c859
   14005c8bf:	xor    edx,edx
   14005c8c1:	jmp    0x14005c866
   14005c8c3:	mov    eax,DWORD PTR [rbx+0x30]
   14005c8c6:	add    QWORD PTR [rbx+0x20],r11
   14005c8ca:	shr    eax,0x4
   14005c8cd:	test   al,0x1
   14005c8cf:	mov    rax,QWORD PTR [rbx+0x20]
   14005c8d3:	mov    rcx,QWORD PTR [rax-0x8]
   14005c8d7:	jmp    0x14005c932
   14005c8d9:	mov    eax,DWORD PTR [rbx+0x30]
   14005c8dc:	add    QWORD PTR [rbx+0x20],r11
   14005c8e0:	shr    eax,0x4
   14005c8e3:	test   al,0x1
   14005c8e5:	mov    rax,QWORD PTR [rbx+0x20]
   14005c8e9:	je     0x14005c8f1
   14005c8eb:	movsxd rcx,DWORD PTR [rax-0x8]
   14005c8ef:	jmp    0x14005c932
   14005c8f1:	mov    ecx,DWORD PTR [rax-0x8]
   14005c8f4:	jmp    0x14005c932
   14005c8f6:	mov    eax,DWORD PTR [rbx+0x30]
   14005c8f9:	add    QWORD PTR [rbx+0x20],r11
   14005c8fd:	shr    eax,0x4
   14005c900:	test   al,0x1
   14005c902:	mov    rax,QWORD PTR [rbx+0x20]
   14005c906:	je     0x14005c90f
   14005c908:	movsx  rcx,WORD PTR [rax-0x8]
   14005c90d:	jmp    0x14005c932
   14005c90f:	movzx  ecx,WORD PTR [rax-0x8]
   14005c913:	jmp    0x14005c932
   14005c915:	mov    eax,DWORD PTR [rbx+0x30]
   14005c918:	add    QWORD PTR [rbx+0x20],r11
   14005c91c:	shr    eax,0x4
   14005c91f:	test   al,0x1
   14005c921:	mov    rax,QWORD PTR [rbx+0x20]
   14005c925:	je     0x14005c92e
   14005c927:	movsx  rcx,BYTE PTR [rax-0x8]
   14005c92c:	jmp    0x14005c932
   14005c92e:	movzx  ecx,BYTE PTR [rax-0x8]
   14005c932:	mov    r8d,DWORD PTR [rbx+0x30]
   14005c936:	mov    eax,r8d
   14005c939:	shr    eax,0x4
   14005c93c:	test   al,0x1
   14005c93e:	je     0x14005c950
   14005c940:	test   rcx,rcx
   14005c943:	jns    0x14005c950
   14005c945:	neg    rcx
   14005c948:	or     r8d,0x40
   14005c94c:	mov    DWORD PTR [rbx+0x30],r8d
   14005c950:	cmp    DWORD PTR [rbx+0x38],0x0
   14005c954:	jge    0x14005c95f
   14005c956:	mov    DWORD PTR [rbx+0x38],0x1
   14005c95d:	jmp    0x14005c970
   14005c95f:	and    DWORD PTR [rbx+0x30],0xfffffff7
   14005c963:	mov    eax,0x200
   14005c968:	cmp    DWORD PTR [rbx+0x38],eax
   14005c96b:	jle    0x14005c970
   14005c96d:	mov    DWORD PTR [rbx+0x38],eax
   14005c970:	test   rcx,rcx
   14005c973:	jne    0x14005c979
   14005c975:	and    DWORD PTR [rbx+0x30],0xffffffdf
   14005c979:	mov    r8d,r10d
   14005c97c:	cmp    rdx,r11
   14005c97f:	jne    0x14005c98e
   14005c981:	mov    rdx,rcx
   14005c984:	mov    rcx,rbx
   14005c987:	call   0x14005af10
   14005c98c:	jmp    0x14005c998
   14005c98e:	mov    edx,ecx
   14005c990:	mov    rcx,rbx
   14005c993:	call   0x14005ae74
   14005c998:	mov    eax,DWORD PTR [rbx+0x30]
   14005c99b:	shr    eax,0x7
   14005c99e:	test   al,0x1
   14005c9a0:	je     0x14005c9bf
   14005c9a2:	cmp    DWORD PTR [rbx+0x50],0x0
   14005c9a6:	je     0x14005c9b1
   14005c9a8:	mov    rcx,QWORD PTR [rbx+0x48]
   14005c9ac:	cmp    BYTE PTR [rcx],0x30
   14005c9af:	je     0x14005c9bf
   14005c9b1:	dec    QWORD PTR [rbx+0x48]
   14005c9b5:	mov    rcx,QWORD PTR [rbx+0x48]
   14005c9b9:	mov    BYTE PTR [rcx],0x30
   14005c9bc:	inc    DWORD PTR [rbx+0x50]
   14005c9bf:	mov    al,0x1
   14005c9c1:	add    rsp,0x20
   14005c9c5:	pop    rbx
   14005c9c6:	ret    
   14005c9c7:	int3   
   14005c9c8:	mov    QWORD PTR [rsp+0x8],rbx
   14005c9cd:	mov    QWORD PTR [rsp+0x10],rsi
   14005c9d2:	push   rdi
   14005c9d3:	sub    rsp,0x20
   14005c9d7:	mov    ebx,0x8
   14005c9dc:	mov    rdi,rcx
   14005c9df:	add    QWORD PTR [rcx+0x20],rbx
   14005c9e3:	mov    rax,QWORD PTR [rcx+0x20]
   14005c9e7:	mov    rsi,QWORD PTR [rax-0x8]
   14005c9eb:	call   0x140062400
   14005c9f0:	test   eax,eax
   14005c9f2:	jne    0x14005ca0b
   14005c9f4:	call   0x140060e94
   14005c9f9:	mov    DWORD PTR [rax],0x16
   14005c9ff:	call   0x140060d74
   14005ca04:	xor    al,al
   14005ca06:	jmp    0x14005ca93
   14005ca0b:	mov    ecx,DWORD PTR [rdi+0x3c]
   14005ca0e:	mov    edx,0x4
   14005ca13:	cmp    ecx,0x5
   14005ca16:	jg     0x14005ca44
   14005ca18:	je     0x14005ca58
   14005ca1a:	test   ecx,ecx
   14005ca1c:	je     0x14005ca55
   14005ca1e:	sub    ecx,0x1
   14005ca21:	je     0x14005ca3d
   14005ca23:	sub    ecx,0x1
   14005ca26:	je     0x14005ca36
   14005ca28:	sub    ecx,0x1
   14005ca2b:	je     0x14005ca55
   14005ca2d:	cmp    ecx,0x1
   14005ca30:	je     0x14005ca58
   14005ca32:	xor    ebx,ebx
   14005ca34:	jmp    0x14005ca58
   14005ca36:	mov    ebx,0x2
   14005ca3b:	jmp    0x14005ca58
   14005ca3d:	mov    ebx,0x1
   14005ca42:	jmp    0x14005ca58
   14005ca44:	sub    ecx,0x6
   14005ca47:	je     0x14005ca58
   14005ca49:	sub    ecx,0x1
   14005ca4c:	je     0x14005ca58
   14005ca4e:	sub    ecx,0x2
   14005ca51:	je     0x14005ca58
   14005ca53:	jmp    0x14005ca28
   14005ca55:	mov    rbx,rdx
   14005ca58:	sub    rbx,0x1
   14005ca5c:	je     0x14005ca88
   14005ca5e:	sub    rbx,0x1
   14005ca62:	je     0x14005ca7f
   14005ca64:	sub    rbx,0x2
   14005ca68:	je     0x14005ca78
   14005ca6a:	cmp    rbx,rdx
   14005ca6d:	jne    0x14005c9f4
   14005ca6f:	movsxd rax,DWORD PTR [rdi+0x28]
   14005ca73:	mov    QWORD PTR [rsi],rax
   14005ca76:	jmp    0x14005ca8d
   14005ca78:	mov    eax,DWORD PTR [rdi+0x28]
   14005ca7b:	mov    DWORD PTR [rsi],eax
   14005ca7d:	jmp    0x14005ca8d
   14005ca7f:	movzx  eax,WORD PTR [rdi+0x28]
   14005ca83:	mov    WORD PTR [rsi],ax
   14005ca86:	jmp    0x14005ca8d
   14005ca88:	mov    cl,BYTE PTR [rdi+0x28]
   14005ca8b:	mov    BYTE PTR [rsi],cl
   14005ca8d:	mov    BYTE PTR [rdi+0x40],0x1
   14005ca91:	mov    al,0x1
   14005ca93:	mov    rbx,QWORD PTR [rsp+0x30]
   14005ca98:	mov    rsi,QWORD PTR [rsp+0x38]
   14005ca9d:	add    rsp,0x20
   14005caa1:	pop    rdi
   14005caa2:	ret    
   14005caa3:	int3   
   14005caa4:	mov    QWORD PTR [rsp+0x8],rbx
   14005caa9:	mov    QWORD PTR [rsp+0x10],rsi
   14005caae:	push   rdi
   14005caaf:	sub    rsp,0x20
   14005cab3:	add    QWORD PTR [rcx+0x20],0x8
   14005cab8:	mov    rbx,rcx
   14005cabb:	mov    rax,QWORD PTR [rcx+0x20]
   14005cabf:	mov    esi,DWORD PTR [rcx+0x38]
   14005cac2:	cmp    esi,0xffffffff
   14005cac5:	mov    r8d,DWORD PTR [rcx+0x3c]
   14005cac9:	mov    dl,BYTE PTR [rcx+0x41]
   14005cacc:	mov    rdi,QWORD PTR [rax-0x8]
   14005cad0:	mov    eax,0x7fffffff
   14005cad5:	mov    QWORD PTR [rcx+0x48],rdi
   14005cad9:	cmove  esi,eax
   14005cadc:	mov    rcx,QWORD PTR [rcx]
   14005cadf:	call   0x14005ae00
   14005cae4:	movsxd rdx,esi
   14005cae7:	test   al,al
   14005cae9:	je     0x14005cb08
   14005caeb:	test   rdi,rdi
   14005caee:	mov    BYTE PTR [rbx+0x54],0x1
   14005caf2:	lea    rcx,[rip+0x155ef]        # 0x1400720e8
   14005caf9:	cmovne rcx,rdi
   14005cafd:	mov    QWORD PTR [rbx+0x48],rcx
   14005cb01:	call   0x14005f3c4
   14005cb06:	jmp    0x14005cb1f
   14005cb08:	test   rdi,rdi
   14005cb0b:	lea    rcx,[rip+0x155ca]        # 0x1400720dc
   14005cb12:	cmovne rcx,rdi
   14005cb16:	mov    QWORD PTR [rbx+0x48],rcx
   14005cb1a:	call   0x14005f268
   14005cb1f:	mov    rsi,QWORD PTR [rsp+0x38]
   14005cb24:	mov    DWORD PTR [rbx+0x50],eax
   14005cb27:	mov    al,0x1
   14005cb29:	mov    rbx,QWORD PTR [rsp+0x30]
   14005cb2e:	add    rsp,0x20
   14005cb32:	pop    rdi
   14005cb33:	ret    
   14005cb34:	mov    QWORD PTR [rsp+0x8],rbx
   14005cb39:	mov    QWORD PTR [rsp+0x10],rsi
   14005cb3e:	push   rdi
   14005cb3f:	sub    rsp,0x20
   14005cb43:	add    QWORD PTR [rcx+0x20],0x8
   14005cb48:	mov    rbx,rcx
   14005cb4b:	mov    rax,QWORD PTR [rcx+0x20]
   14005cb4f:	mov    edi,DWORD PTR [rcx+0x38]
   14005cb52:	cmp    edi,0xffffffff
   14005cb55:	mov    r8d,DWORD PTR [rcx+0x3c]
   14005cb59:	movzx  edx,WORD PTR [rcx+0x42]
   14005cb5d:	mov    rsi,QWORD PTR [rax-0x8]
   14005cb61:	mov    eax,0x7fffffff
   14005cb66:	mov    QWORD PTR [rcx+0x48],rsi
   14005cb6a:	cmove  edi,eax
   14005cb6d:	mov    rcx,QWORD PTR [rcx]
   14005cb70:	call   0x14005ae30
   14005cb75:	test   al,al
   14005cb77:	je     0x14005cb9c
   14005cb79:	test   rsi,rsi
   14005cb7c:	movsxd rdx,edi
   14005cb7f:	lea    rcx,[rip+0x15562]        # 0x1400720e8
   14005cb86:	mov    BYTE PTR [rbx+0x54],0x1
   14005cb8a:	cmovne rcx,rsi
   14005cb8e:	mov    QWORD PTR [rbx+0x48],rcx
   14005cb92:	call   0x14005f3c4
   14005cb97:	mov    DWORD PTR [rbx+0x50],eax
   14005cb9a:	jmp    0x14005cbe8
   14005cb9c:	test   rsi,rsi
   14005cb9f:	jne    0x14005cbac
   14005cba1:	lea    rax,[rip+0x15534]        # 0x1400720dc
   14005cba8:	mov    QWORD PTR [rbx+0x48],rax
   14005cbac:	mov    r8,QWORD PTR [rbx+0x48]
   14005cbb0:	xor    r9d,r9d
   14005cbb3:	test   edi,edi
   14005cbb5:	jle    0x14005cbe4
   14005cbb7:	cmp    BYTE PTR [r8],0x0
   14005cbbb:	je     0x14005cbe4
   14005cbbd:	mov    rax,QWORD PTR [rbx+0x8]
   14005cbc1:	movzx  edx,BYTE PTR [r8]
   14005cbc5:	mov    rcx,QWORD PTR [rax]
   14005cbc8:	mov    rax,QWORD PTR [rcx]
   14005cbcb:	mov    ecx,0x8000
   14005cbd0:	test   WORD PTR [rax+rdx*2],cx
   14005cbd4:	je     0x14005cbd9
   14005cbd6:	inc    r8
   14005cbd9:	inc    r8
   14005cbdc:	inc    r9d
   14005cbdf:	cmp    r9d,edi
   14005cbe2:	jl     0x14005cbb7
   14005cbe4:	mov    DWORD PTR [rbx+0x50],r9d
   14005cbe8:	mov    rbx,QWORD PTR [rsp+0x30]
   14005cbed:	mov    al,0x1
   14005cbef:	mov    rsi,QWORD PTR [rsp+0x38]
   14005cbf4:	add    rsp,0x20
   14005cbf8:	pop    rdi
   14005cbf9:	ret    
   14005cbfa:	int3   
   14005cbfb:	int3   
   14005cbfc:	mov    QWORD PTR [rsp+0x10],rbx
   14005cc01:	mov    QWORD PTR [rsp+0x18],rsi
   14005cc06:	push   rdi
   14005cc07:	sub    rsp,0x50
   14005cc0b:	mov    rax,QWORD PTR [rip+0x252ce]        # 0x140081ee0
   14005cc12:	xor    rax,rsp
   14005cc15:	mov    QWORD PTR [rsp+0x40],rax
   14005cc1a:	cmp    BYTE PTR [rcx+0x54],0x0
   14005cc1e:	mov    rbx,rcx
   14005cc21:	je     0x14005cc91
   14005cc23:	mov    eax,DWORD PTR [rcx+0x50]
   14005cc26:	test   eax,eax
   14005cc28:	jle    0x14005cc91
   14005cc2a:	mov    rsi,QWORD PTR [rcx+0x48]
   14005cc2e:	xor    edi,edi
   14005cc30:	test   eax,eax
   14005cc32:	je     0x14005ccb2
   14005cc34:	movzx  r9d,WORD PTR [rsi]
   14005cc38:	lea    rdx,[rsp+0x34]
   14005cc3d:	and    DWORD PTR [rsp+0x30],0x0
   14005cc42:	lea    rcx,[rsp+0x30]
   14005cc47:	mov    r8d,0x6
   14005cc4d:	lea    rsi,[rsi+0x2]
   14005cc51:	call   0x1400611fc
   14005cc56:	test   eax,eax
   14005cc58:	jne    0x14005cc8b
   14005cc5a:	mov    r8d,DWORD PTR [rsp+0x30]
   14005cc5f:	test   r8d,r8d
   14005cc62:	je     0x14005cc8b
   14005cc64:	mov    rax,QWORD PTR [rbx+0x10]
   14005cc68:	lea    r9,[rbx+0x28]
   14005cc6c:	lea    rcx,[rbx+0x468]
   14005cc73:	mov    QWORD PTR [rsp+0x20],rax
   14005cc78:	lea    rdx,[rsp+0x34]
   14005cc7d:	call   0x14005cdc4
   14005cc82:	inc    edi
   14005cc84:	cmp    edi,DWORD PTR [rbx+0x50]
   14005cc87:	jne    0x14005cc34
   14005cc89:	jmp    0x14005ccb2
   14005cc8b:	or     DWORD PTR [rbx+0x28],0xffffffff
   14005cc8f:	jmp    0x14005ccb2
   14005cc91:	mov    rax,QWORD PTR [rbx+0x10]
   14005cc95:	lea    r9,[rcx+0x28]
   14005cc99:	mov    r8d,DWORD PTR [rbx+0x50]
   14005cc9d:	add    rcx,0x468
   14005cca4:	mov    rdx,QWORD PTR [rbx+0x48]
   14005cca8:	mov    QWORD PTR [rsp+0x20],rax
   14005ccad:	call   0x14005cdc4
   14005ccb2:	mov    al,0x1
   14005ccb4:	mov    rcx,QWORD PTR [rsp+0x40]
   14005ccb9:	xor    rcx,rsp
   14005ccbc:	call   0x140055f90
   14005ccc1:	mov    rbx,QWORD PTR [rsp+0x68]
   14005ccc6:	mov    rsi,QWORD PTR [rsp+0x70]
   14005cccb:	add    rsp,0x50
   14005cccf:	pop    rdi
   14005ccd0:	ret    
   14005ccd1:	int3   
   14005ccd2:	int3   
   14005ccd3:	int3   
   14005ccd4:	mov    QWORD PTR [rsp+0x10],rbx
   14005ccd9:	mov    QWORD PTR [rsp+0x18],rbp
   14005ccde:	mov    QWORD PTR [rsp+0x20],rsi
   14005cce3:	push   rdi
   14005cce4:	sub    rsp,0x30
   14005cce8:	xor    ebp,ebp
   14005ccea:	mov    rbx,rcx
   14005cced:	cmp    BYTE PTR [rcx+0x54],bpl
   14005ccf1:	jne    0x14005cd89
   14005ccf7:	mov    eax,DWORD PTR [rcx+0x50]
   14005ccfa:	test   eax,eax
   14005ccfc:	jle    0x14005cd89
   14005cd02:	mov    rsi,QWORD PTR [rcx+0x48]
   14005cd06:	mov    edi,ebp
   14005cd08:	mov    r9,QWORD PTR [rbx+0x8]
   14005cd0c:	lea    rcx,[rsp+0x40]
   14005cd11:	mov    WORD PTR [rsp+0x40],bp
   14005cd16:	mov    rdx,rsi
   14005cd19:	mov    rax,QWORD PTR [r9]
   14005cd1c:	movsxd r8,DWORD PTR [rax+0x8]
   14005cd20:	call   0x140060f28
   14005cd25:	movsxd rdx,eax
   14005cd28:	test   eax,eax
   14005cd2a:	jle    0x14005cd83
   14005cd2c:	mov    rcx,QWORD PTR [rbx+0x468]
   14005cd33:	movzx  r8d,WORD PTR [rsp+0x40]
   14005cd39:	mov    rax,QWORD PTR [rcx+0x8]
   14005cd3d:	cmp    QWORD PTR [rcx+0x10],rax
   14005cd41:	jne    0x14005cd54
   14005cd43:	cmp    BYTE PTR [rcx+0x18],bpl
   14005cd47:	je     0x14005cd4e
   14005cd49:	inc    DWORD PTR [rbx+0x28]
   14005cd4c:	jmp    0x14005cd74
   14005cd4e:	or     DWORD PTR [rbx+0x28],0xffffffff
   14005cd52:	jmp    0x14005cd74
   14005cd54:	inc    DWORD PTR [rbx+0x28]
   14005cd57:	inc    QWORD PTR [rcx+0x10]
   14005cd5b:	mov    rax,QWORD PTR [rbx+0x468]
   14005cd62:	mov    rcx,QWORD PTR [rax]
   14005cd65:	mov    WORD PTR [rcx],r8w
   14005cd69:	mov    rax,QWORD PTR [rbx+0x468]
   14005cd70:	add    QWORD PTR [rax],0x2
   14005cd74:	add    rsi,rdx
   14005cd77:	inc    edi
   14005cd79:	mov    rax,rdx
   14005cd7c:	cmp    edi,DWORD PTR [rbx+0x50]
   14005cd7f:	jne    0x14005cd08
   14005cd81:	jmp    0x14005cdaa
   14005cd83:	or     DWORD PTR [rbx+0x28],0xffffffff
   14005cd87:	jmp    0x14005cdaa
   14005cd89:	mov    rax,QWORD PTR [rbx+0x10]
   14005cd8d:	lea    r9,[rcx+0x28]
   14005cd91:	mov    r8d,DWORD PTR [rbx+0x50]
   14005cd95:	add    rcx,0x468
   14005cd9c:	mov    rdx,QWORD PTR [rbx+0x48]
   14005cda0:	mov    QWORD PTR [rsp+0x20],rax
   14005cda5:	call   0x14005ce80
   14005cdaa:	mov    rbx,QWORD PTR [rsp+0x48]
   14005cdaf:	mov    al,0x1
   14005cdb1:	mov    rbp,QWORD PTR [rsp+0x50]
   14005cdb6:	mov    rsi,QWORD PTR [rsp+0x58]
   14005cdbb:	add    rsp,0x30
   14005cdbf:	pop    rdi
   14005cdc0:	ret    
   14005cdc1:	int3   
   14005cdc2:	int3   
   14005cdc3:	int3   
   14005cdc4:	mov    rax,rsp
   14005cdc7:	mov    QWORD PTR [rax+0x8],rbx
   14005cdcb:	mov    QWORD PTR [rax+0x10],rbp
   14005cdcf:	mov    QWORD PTR [rax+0x18],rsi
   14005cdd3:	mov    QWORD PTR [rax+0x20],rdi
   14005cdd7:	push   r12
   14005cdd9:	push   r14
   14005cddb:	push   r15
   14005cddd:	sub    rsp,0x20
   14005cde1:	mov    rdi,QWORD PTR [rsp+0x60]
   14005cde6:	mov    r15,rcx
   14005cde9:	mov    rbx,r9
   14005cdec:	movsxd rbp,r8d
   14005cdef:	mov    r14d,DWORD PTR [rdi]
   14005cdf2:	and    DWORD PTR [rdi],0x0
   14005cdf5:	mov    rcx,QWORD PTR [rcx]
   14005cdf8:	mov    rax,QWORD PTR [rcx+0x8]
   14005cdfc:	cmp    QWORD PTR [rcx+0x10],rax
   14005ce00:	jne    0x14005ce13
   14005ce02:	cmp    BYTE PTR [rcx+0x18],0x0
   14005ce06:	je     0x14005ce0d
   14005ce08:	add    DWORD PTR [r9],ebp
   14005ce0b:	jmp    0x14005ce52
   14005ce0d:	or     DWORD PTR [r9],0xffffffff
   14005ce11:	jmp    0x14005ce52
   14005ce13:	sub    rax,QWORD PTR [rcx+0x10]
   14005ce17:	mov    rsi,rbp
   14005ce1a:	mov    rcx,QWORD PTR [rcx]
   14005ce1d:	cmp    rax,rbp
   14005ce20:	cmovb  rsi,rax
   14005ce24:	mov    r8,rsi
   14005ce27:	call   0x140059180
   14005ce2c:	mov    rax,QWORD PTR [r15]
   14005ce2f:	add    QWORD PTR [rax],rsi
   14005ce32:	mov    rax,QWORD PTR [r15]
   14005ce35:	add    QWORD PTR [rax+0x10],rsi
   14005ce39:	mov    rax,QWORD PTR [r15]
   14005ce3c:	cmp    BYTE PTR [rax+0x18],0x0
   14005ce40:	je     0x14005ce46
   14005ce42:	add    DWORD PTR [rbx],ebp
   14005ce44:	jmp    0x14005ce52
   14005ce46:	cmp    rsi,rbp
   14005ce49:	je     0x14005ce50
   14005ce4b:	or     DWORD PTR [rbx],0xffffffff
   14005ce4e:	jmp    0x14005ce52
   14005ce50:	add    DWORD PTR [rbx],esi
   14005ce52:	cmp    DWORD PTR [rdi],0x0
   14005ce55:	jne    0x14005ce5f
   14005ce57:	test   r14d,r14d
   14005ce5a:	je     0x14005ce5f
   14005ce5c:	mov    DWORD PTR [rdi],r14d
   14005ce5f:	mov    rbx,QWORD PTR [rsp+0x40]
   14005ce64:	mov    rbp,QWORD PTR [rsp+0x48]
   14005ce69:	mov    rsi,QWORD PTR [rsp+0x50]
   14005ce6e:	mov    rdi,QWORD PTR [rsp+0x58]
   14005ce73:	add    rsp,0x20
   14005ce77:	pop    r15
   14005ce79:	pop    r14
   14005ce7b:	pop    r12
   14005ce7d:	ret    
   14005ce7e:	int3   
   14005ce7f:	int3   
   14005ce80:	mov    QWORD PTR [rsp+0x8],rbx
   14005ce85:	mov    QWORD PTR [rsp+0x10],rbp
   14005ce8a:	mov    QWORD PTR [rsp+0x18],rsi
   14005ce8f:	push   rdi
   14005ce90:	push   r12
   14005ce92:	push   r13
   14005ce94:	push   r14
   14005ce96:	push   r15
   14005ce98:	sub    rsp,0x20
   14005ce9c:	mov    rsi,QWORD PTR [rsp+0x70]
   14005cea1:	mov    r12,rcx
   14005cea4:	mov    rdi,r9
   14005cea7:	movsxd rbp,r8d
   14005ceaa:	mov    r15d,DWORD PTR [rsi]
   14005cead:	and    DWORD PTR [rsi],0x0
   14005ceb0:	mov    rcx,QWORD PTR [rcx]
   14005ceb3:	mov    rax,QWORD PTR [rcx+0x8]
   14005ceb7:	cmp    QWORD PTR [rcx+0x10],rax
   14005cebb:	jne    0x14005cece
   14005cebd:	cmp    BYTE PTR [rcx+0x18],0x0
   14005cec1:	je     0x14005cec8
   14005cec3:	add    DWORD PTR [r9],ebp
   14005cec6:	jmp    0x14005cf15
   14005cec8:	or     DWORD PTR [r9],0xffffffff
   14005cecc:	jmp    0x14005cf15
   14005cece:	sub    rax,QWORD PTR [rcx+0x10]
   14005ced2:	mov    r14,rbp
   14005ced5:	mov    rcx,QWORD PTR [rcx]
   14005ced8:	cmp    rax,rbp
   14005cedb:	cmovb  r14,rax
   14005cedf:	lea    rbx,[r14+r14*1]
   14005cee3:	mov    r8,rbx
   14005cee6:	call   0x140059180
   14005ceeb:	mov    rax,QWORD PTR [r12]
   14005ceef:	add    QWORD PTR [rax],rbx
   14005cef2:	mov    rax,QWORD PTR [r12]
   14005cef6:	add    QWORD PTR [rax+0x10],r14
   14005cefa:	mov    rax,QWORD PTR [r12]
   14005cefe:	cmp    BYTE PTR [rax+0x18],0x0
   14005cf02:	je     0x14005cf08
   14005cf04:	add    DWORD PTR [rdi],ebp
   14005cf06:	jmp    0x14005cf15
   14005cf08:	cmp    r14,rbp
   14005cf0b:	je     0x14005cf12
   14005cf0d:	or     DWORD PTR [rdi],0xffffffff
   14005cf10:	jmp    0x14005cf15
   14005cf12:	add    DWORD PTR [rdi],r14d
   14005cf15:	cmp    DWORD PTR [rsi],0x0
   14005cf18:	jne    0x14005cf22
   14005cf1a:	test   r15d,r15d
   14005cf1d:	je     0x14005cf22
   14005cf1f:	mov    DWORD PTR [rsi],r15d
   14005cf22:	mov    rbx,QWORD PTR [rsp+0x50]
   14005cf27:	mov    rbp,QWORD PTR [rsp+0x58]
   14005cf2c:	mov    rsi,QWORD PTR [rsp+0x60]
   14005cf31:	add    rsp,0x20
   14005cf35:	pop    r15
   14005cf37:	pop    r14
   14005cf39:	pop    r13
   14005cf3b:	pop    r12
   14005cf3d:	pop    rdi
   14005cf3e:	ret    
   14005cf3f:	int3   
   14005cf40:	mov    QWORD PTR [rsp+0x8],rbx
   14005cf45:	mov    QWORD PTR [rsp+0x20],rsi
   14005cf4a:	push   rbp
   14005cf4b:	push   rdi
   14005cf4c:	push   r12
   14005cf4e:	push   r14
   14005cf50:	push   r15
   14005cf52:	lea    rbp,[rsp-0x410]
   14005cf5a:	sub    rsp,0x510
   14005cf61:	mov    rax,QWORD PTR [rip+0x24f78]        # 0x140081ee0
   14005cf68:	xor    rax,rsp
   14005cf6b:	mov    QWORD PTR [rbp+0x400],rax
   14005cf72:	xor    r12d,r12d
   14005cf75:	mov    rbx,r9
   14005cf78:	mov    rdi,r8
   14005cf7b:	mov    rsi,rdx
   14005cf7e:	mov    r15,rcx
   14005cf81:	test   r9,r9
   14005cf84:	jne    0x14005cf9e
   14005cf86:	call   0x140060e94
   14005cf8b:	mov    DWORD PTR [rax],0x16
   14005cf91:	call   0x140060d74
   14005cf96:	or     ebx,0xffffffff
   14005cf99:	jmp    0x14005d146
   14005cf9e:	test   r8,r8
   14005cfa1:	je     0x14005cfa8
   14005cfa3:	test   rdx,rdx
   14005cfa6:	je     0x14005cf86
   14005cfa8:	mov    rdx,QWORD PTR [rbp+0x460]
   14005cfaf:	lea    rcx,[rsp+0x30]
   14005cfb4:	call   0x14005b174
   14005cfb9:	xor    edx,edx
   14005cfbb:	lea    rcx,[rsp+0x50]
   14005cfc0:	lea    r8d,[rdx+0x20]
   14005cfc4:	call   0x140058f40
   14005cfc9:	mov    r14,r15
   14005cfcc:	mov    QWORD PTR [rsp+0x50],rsi
   14005cfd1:	mov    QWORD PTR [rsp+0x58],rdi
   14005cfd6:	mov    QWORD PTR [rsp+0x60],r12
   14005cfdb:	and    r14d,0x2
   14005cfdf:	jne    0x14005cfeb
   14005cfe1:	mov    BYTE PTR [rsp+0x68],r12b
   14005cfe6:	test   rsi,rsi
   14005cfe9:	jne    0x14005cff0
   14005cfeb:	mov    BYTE PTR [rsp+0x68],0x1
   14005cff0:	lea    rax,[rsp+0x50]
   14005cff5:	mov    r9,rbx
   14005cff8:	mov    QWORD PTR [rsp+0x70],rax
   14005cffd:	lea    rdx,[rsp+0x70]
   14005d002:	mov    rax,QWORD PTR [rbp+0x468]
   14005d009:	lea    rcx,[rbp-0x80]
   14005d00d:	mov    QWORD PTR [rsp+0x28],rax
   14005d012:	mov    r8,r15
   14005d015:	lea    rax,[rsp+0x38]
   14005d01a:	mov    QWORD PTR [rsp+0x20],rax
   14005d01f:	call   0x14005b078
   14005d024:	lea    rcx,[rbp-0x80]
   14005d028:	call   0x14005b378
   14005d02d:	movsxd rbx,eax
   14005d030:	test   rsi,rsi
   14005d033:	jne    0x14005d064
   14005d035:	mov    rcx,QWORD PTR [rbp+0x3e0]
   14005d03c:	call   0x1400609cc
   14005d041:	mov    QWORD PTR [rbp+0x3e0],r12
   14005d048:	cmp    BYTE PTR [rsp+0x48],r12b
   14005d04d:	je     0x14005d146
   14005d053:	mov    rax,QWORD PTR [rsp+0x30]
   14005d058:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   14005d05f:	jmp    0x14005d146
   14005d064:	test   r15b,0x1
   14005d068:	je     0x14005d0b7
   14005d06a:	test   rdi,rdi
   14005d06d:	jne    0x14005d0a2
   14005d06f:	test   eax,eax
   14005d071:	je     0x14005d0a2
   14005d073:	mov    rcx,QWORD PTR [rbp+0x3e0]
   14005d07a:	call   0x1400609cc
   14005d07f:	mov    QWORD PTR [rbp+0x3e0],r12
   14005d086:	cmp    BYTE PTR [rsp+0x48],r12b
   14005d08b:	je     0x14005cf96
   14005d091:	mov    rax,QWORD PTR [rsp+0x30]
   14005d096:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   14005d09d:	jmp    0x14005cf96
   14005d0a2:	mov    rax,QWORD PTR [rsp+0x60]
   14005d0a7:	cmp    rax,rdi
   14005d0aa:	jne    0x14005d11c
   14005d0ac:	test   ebx,ebx
   14005d0ae:	js     0x14005d120
   14005d0b0:	cmp    rbx,rdi
   14005d0b3:	jbe    0x14005d120
   14005d0b5:	jmp    0x14005d073
   14005d0b7:	test   r14,r14
   14005d0ba:	je     0x14005d0db
   14005d0bc:	test   rdi,rdi
   14005d0bf:	je     0x14005d120
   14005d0c1:	test   eax,eax
   14005d0c3:	jns    0x14005d0ca
   14005d0c5:	mov    BYTE PTR [rsi],r12b
   14005d0c8:	jmp    0x14005d120
   14005d0ca:	mov    rax,QWORD PTR [rsp+0x60]
   14005d0cf:	cmp    rax,rdi
   14005d0d2:	jne    0x14005d11c
   14005d0d4:	mov    BYTE PTR [rdi+rsi*1-0x1],r12b
   14005d0d9:	jmp    0x14005d120
   14005d0db:	test   rdi,rdi
   14005d0de:	je     0x14005d073
   14005d0e0:	mov    rax,QWORD PTR [rsp+0x60]
   14005d0e5:	cmp    rax,rdi
   14005d0e8:	jne    0x14005d11c
   14005d0ea:	mov    rcx,QWORD PTR [rbp+0x3e0]
   14005d0f1:	mov    BYTE PTR [rdi+rsi*1-0x1],r12b
   14005d0f6:	call   0x1400609cc
   14005d0fb:	mov    QWORD PTR [rbp+0x3e0],r12
   14005d102:	cmp    BYTE PTR [rsp+0x48],r12b
   14005d107:	je     0x14005d115
   14005d109:	mov    rax,QWORD PTR [rsp+0x30]
   14005d10e:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   14005d115:	mov    ebx,0xfffffffe
   14005d11a:	jmp    0x14005d146
   14005d11c:	mov    BYTE PTR [rax+rsi*1],r12b
   14005d120:	mov    rcx,QWORD PTR [rbp+0x3e0]
   14005d127:	call   0x1400609cc
   14005d12c:	mov    QWORD PTR [rbp+0x3e0],r12
   14005d133:	cmp    BYTE PTR [rsp+0x48],r12b
   14005d138:	je     0x14005d146
   14005d13a:	mov    rcx,QWORD PTR [rsp+0x30]
   14005d13f:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   14005d146:	mov    eax,ebx
   14005d148:	mov    rcx,QWORD PTR [rbp+0x400]
   14005d14f:	xor    rcx,rsp
   14005d152:	call   0x140055f90
   14005d157:	lea    r11,[rsp+0x510]
   14005d15f:	mov    rbx,QWORD PTR [r11+0x30]
   14005d163:	mov    rsi,QWORD PTR [r11+0x48]
   14005d167:	mov    rsp,r11
   14005d16a:	pop    r15
   14005d16c:	pop    r14
   14005d16e:	pop    r12
   14005d170:	pop    rdi
   14005d171:	pop    rbp
   14005d172:	ret    
   14005d173:	int3   
   14005d174:	mov    QWORD PTR [rsp+0x8],rbx
   14005d179:	mov    QWORD PTR [rsp+0x20],rsi
   14005d17e:	push   rbp
   14005d17f:	push   rdi
   14005d180:	push   r12
   14005d182:	push   r14
   14005d184:	push   r15
   14005d186:	lea    rbp,[rsp-0x410]
   14005d18e:	sub    rsp,0x510
   14005d195:	mov    rax,QWORD PTR [rip+0x24d44]        # 0x140081ee0
   14005d19c:	xor    rax,rsp
   14005d19f:	mov    QWORD PTR [rbp+0x400],rax
   14005d1a6:	xor    r12d,r12d
   14005d1a9:	mov    rbx,r9
   14005d1ac:	mov    rdi,r8
   14005d1af:	mov    rsi,rdx
   14005d1b2:	mov    r15,rcx
   14005d1b5:	test   r9,r9
   14005d1b8:	jne    0x14005d1d2
   14005d1ba:	call   0x140060e94
   14005d1bf:	mov    DWORD PTR [rax],0x16
   14005d1c5:	call   0x140060d74
   14005d1ca:	or     ebx,0xffffffff
   14005d1cd:	jmp    0x14005d37e
   14005d1d2:	test   r8,r8
   14005d1d5:	je     0x14005d1dc
   14005d1d7:	test   rdx,rdx
   14005d1da:	je     0x14005d1ba
   14005d1dc:	mov    rdx,QWORD PTR [rbp+0x460]
   14005d1e3:	lea    rcx,[rsp+0x30]
   14005d1e8:	call   0x14005b174
   14005d1ed:	xor    edx,edx
   14005d1ef:	lea    rcx,[rsp+0x50]
   14005d1f4:	lea    r8d,[rdx+0x20]
   14005d1f8:	call   0x140058f40
   14005d1fd:	mov    r14,r15
   14005d200:	mov    QWORD PTR [rsp+0x50],rsi
   14005d205:	mov    QWORD PTR [rsp+0x58],rdi
   14005d20a:	mov    QWORD PTR [rsp+0x60],r12
   14005d20f:	and    r14d,0x2
   14005d213:	jne    0x14005d21f
   14005d215:	mov    BYTE PTR [rsp+0x68],r12b
   14005d21a:	test   rsi,rsi
   14005d21d:	jne    0x14005d224
   14005d21f:	mov    BYTE PTR [rsp+0x68],0x1
   14005d224:	lea    rax,[rsp+0x50]
   14005d229:	mov    r9,rbx
   14005d22c:	mov    QWORD PTR [rsp+0x70],rax
   14005d231:	lea    rdx,[rsp+0x70]
   14005d236:	mov    rax,QWORD PTR [rbp+0x468]
   14005d23d:	lea    rcx,[rbp-0x80]
   14005d241:	mov    QWORD PTR [rsp+0x28],rax
   14005d246:	mov    r8,r15
   14005d249:	lea    rax,[rsp+0x38]
   14005d24e:	mov    QWORD PTR [rsp+0x20],rax
   14005d253:	call   0x14005b0f4
   14005d258:	lea    rcx,[rbp-0x80]
   14005d25c:	call   0x14005b57c
   14005d261:	movsxd rbx,eax
   14005d264:	test   rsi,rsi
   14005d267:	jne    0x14005d298
   14005d269:	mov    rcx,QWORD PTR [rbp+0x3e0]
   14005d270:	call   0x1400609cc
   14005d275:	mov    QWORD PTR [rbp+0x3e0],r12
   14005d27c:	cmp    BYTE PTR [rsp+0x48],r12b
   14005d281:	je     0x14005d37e
   14005d287:	mov    rax,QWORD PTR [rsp+0x30]
   14005d28c:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   14005d293:	jmp    0x14005d37e
   14005d298:	test   r15b,0x1
   14005d29c:	je     0x14005d2eb
   14005d29e:	test   rdi,rdi
   14005d2a1:	jne    0x14005d2d6
   14005d2a3:	test   eax,eax
   14005d2a5:	je     0x14005d2d6
   14005d2a7:	mov    rcx,QWORD PTR [rbp+0x3e0]
   14005d2ae:	call   0x1400609cc
   14005d2b3:	mov    QWORD PTR [rbp+0x3e0],r12
   14005d2ba:	cmp    BYTE PTR [rsp+0x48],r12b
   14005d2bf:	je     0x14005d1ca
   14005d2c5:	mov    rax,QWORD PTR [rsp+0x30]
   14005d2ca:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   14005d2d1:	jmp    0x14005d1ca
   14005d2d6:	mov    rax,QWORD PTR [rsp+0x60]
   14005d2db:	cmp    rax,rdi
   14005d2de:	jne    0x14005d353
   14005d2e0:	test   ebx,ebx
   14005d2e2:	js     0x14005d358
   14005d2e4:	cmp    rbx,rdi
   14005d2e7:	jbe    0x14005d358
   14005d2e9:	jmp    0x14005d2a7
   14005d2eb:	test   r14,r14
   14005d2ee:	je     0x14005d311
   14005d2f0:	test   rdi,rdi
   14005d2f3:	je     0x14005d358
   14005d2f5:	test   eax,eax
   14005d2f7:	jns    0x14005d2ff
   14005d2f9:	mov    WORD PTR [rsi],r12w
   14005d2fd:	jmp    0x14005d358
   14005d2ff:	mov    rax,QWORD PTR [rsp+0x60]
   14005d304:	cmp    rax,rdi
   14005d307:	jne    0x14005d353
   14005d309:	mov    WORD PTR [rsi+rdi*2-0x2],r12w
   14005d30f:	jmp    0x14005d358
   14005d311:	test   rdi,rdi
   14005d314:	je     0x14005d2a7
   14005d316:	mov    rax,QWORD PTR [rsp+0x60]
   14005d31b:	cmp    rax,rdi
   14005d31e:	jne    0x14005d353
   14005d320:	mov    rcx,QWORD PTR [rbp+0x3e0]
   14005d327:	mov    WORD PTR [rsi+rdi*2-0x2],r12w
   14005d32d:	call   0x1400609cc
   14005d332:	mov    QWORD PTR [rbp+0x3e0],r12
   14005d339:	cmp    BYTE PTR [rsp+0x48],r12b
   14005d33e:	je     0x14005d34c
   14005d340:	mov    rax,QWORD PTR [rsp+0x30]
   14005d345:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   14005d34c:	mov    ebx,0xfffffffe
   14005d351:	jmp    0x14005d37e
   14005d353:	mov    WORD PTR [rsi+rax*2],r12w
   14005d358:	mov    rcx,QWORD PTR [rbp+0x3e0]
   14005d35f:	call   0x1400609cc
   14005d364:	mov    QWORD PTR [rbp+0x3e0],r12
   14005d36b:	cmp    BYTE PTR [rsp+0x48],r12b
   14005d370:	je     0x14005d37e
   14005d372:	mov    rcx,QWORD PTR [rsp+0x30]
   14005d377:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   14005d37e:	mov    eax,ebx
   14005d380:	mov    rcx,QWORD PTR [rbp+0x400]
   14005d387:	xor    rcx,rsp
   14005d38a:	call   0x140055f90
   14005d38f:	lea    r11,[rsp+0x510]
   14005d397:	mov    rbx,QWORD PTR [r11+0x30]
   14005d39b:	mov    rsi,QWORD PTR [r11+0x48]
   14005d39f:	mov    rsp,r11
   14005d3a2:	pop    r15
   14005d3a4:	pop    r14
   14005d3a6:	pop    r12
   14005d3a8:	pop    rdi
   14005d3a9:	pop    rbp
   14005d3aa:	ret    
   14005d3ab:	int3   
   14005d3ac:	mov    rax,rsp
   14005d3af:	mov    QWORD PTR [rax+0x8],rbx
   14005d3b3:	mov    QWORD PTR [rax+0x10],rbp
   14005d3b7:	mov    QWORD PTR [rax+0x18],rsi
   14005d3bb:	mov    QWORD PTR [rax+0x20],rdi
   14005d3bf:	push   r13
   14005d3c1:	push   r14
   14005d3c3:	push   r15
   14005d3c5:	sub    rsp,0x20
   14005d3c9:	mov    r13,rcx
   14005d3cc:	mov    r14,r9
   14005d3cf:	xor    ecx,ecx
   14005d3d1:	mov    rbp,r8
   14005d3d4:	mov    rsi,rdx
   14005d3d7:	test   rdx,rdx
   14005d3da:	jne    0x14005d3f5
   14005d3dc:	test   r8,r8
   14005d3df:	je     0x14005d3f5
   14005d3e1:	call   0x140060e94
   14005d3e6:	mov    DWORD PTR [rax],0x16
   14005d3ec:	call   0x140060d74
   14005d3f1:	xor    eax,eax
   14005d3f3:	jmp    0x14005d467
   14005d3f5:	test   r9,r9
   14005d3f8:	je     0x14005d3e1
   14005d3fa:	cmp    QWORD PTR [rsp+0x60],rcx
   14005d3ff:	je     0x14005d3e1
   14005d401:	lea    rbx,[r8-0x1]
   14005d405:	imul   rbx,r14
   14005d409:	add    rbx,rdx
   14005d40c:	cmp    rdx,rbx
   14005d40f:	ja     0x14005d461
   14005d411:	mov    r15,rbp
   14005d414:	shr    r15,1
   14005d417:	je     0x14005d486
   14005d419:	mov    rcx,QWORD PTR [rsp+0x60]
   14005d41e:	mov    al,bpl
   14005d421:	and    al,0x1
   14005d423:	lea    rbp,[r15-0x1]
   14005d427:	cmovne rbp,r15
   14005d42b:	mov    rdi,rbp
   14005d42e:	imul   rdi,r14
   14005d432:	add    rdi,rsi
   14005d435:	call   QWORD PTR [rip+0xf0ed]        # 0x14006c528
   14005d43b:	mov    rdx,rdi
   14005d43e:	mov    rcx,r13
   14005d441:	call   QWORD PTR [rsp+0x60]
   14005d445:	xor    ecx,ecx
   14005d447:	test   eax,eax
   14005d449:	je     0x14005d464
   14005d44b:	jns    0x14005d455
   14005d44d:	mov    rbx,rdi
   14005d450:	sub    rbx,r14
   14005d453:	jmp    0x14005d45c
   14005d455:	lea    rsi,[rdi+r14*1]
   14005d459:	mov    rbp,r15
   14005d45c:	cmp    rsi,rbx
   14005d45f:	jbe    0x14005d411
   14005d461:	mov    rdi,rcx
   14005d464:	mov    rax,rdi
   14005d467:	mov    rbx,QWORD PTR [rsp+0x40]
   14005d46c:	mov    rbp,QWORD PTR [rsp+0x48]
   14005d471:	mov    rsi,QWORD PTR [rsp+0x50]
   14005d476:	mov    rdi,QWORD PTR [rsp+0x58]
   14005d47b:	add    rsp,0x20
   14005d47f:	pop    r15
   14005d481:	pop    r14
   14005d483:	pop    r13
   14005d485:	ret    
   14005d486:	test   rbp,rbp
   14005d489:	je     0x14005d461
   14005d48b:	mov    rcx,QWORD PTR [rsp+0x60]
   14005d490:	call   QWORD PTR [rip+0xf092]        # 0x14006c528
   14005d496:	mov    rdx,rsi
   14005d499:	mov    rcx,r13
   14005d49c:	call   QWORD PTR [rsp+0x60]
   14005d4a0:	xor    ecx,ecx
   14005d4a2:	mov    rdi,rsi
   14005d4a5:	test   eax,eax
   14005d4a7:	cmovne rdi,rcx
   14005d4ab:	jmp    0x14005d464
   14005d4ad:	int3   
   14005d4ae:	int3   
   14005d4af:	int3   
   14005d4b0:	mov    r8,rdx
   14005d4b3:	xor    r9d,r9d
   14005d4b6:	cmp    WORD PTR [rcx],r9w
   14005d4ba:	je     0x14005d4e4
   14005d4bc:	mov    rax,r8
   14005d4bf:	cmp    WORD PTR [r8],r9w
   14005d4c3:	je     0x14005d4da
   14005d4c5:	movzx  edx,WORD PTR [r8]
   14005d4c9:	cmp    dx,WORD PTR [rcx]
   14005d4cc:	je     0x14005d4e0
   14005d4ce:	add    rax,0x2
   14005d4d2:	movzx  edx,WORD PTR [rax]
   14005d4d5:	test   dx,dx
   14005d4d8:	jne    0x14005d4c9
   14005d4da:	add    rcx,0x2
   14005d4de:	jmp    0x14005d4b6
   14005d4e0:	mov    rax,rcx
   14005d4e3:	ret    
   14005d4e4:	xor    eax,eax
   14005d4e6:	ret    
   14005d4e7:	int3   
   14005d4e8:	movzx  r9d,WORD PTR [rdx]
   14005d4ec:	xor    eax,eax
   14005d4ee:	movzx  r8d,WORD PTR [rcx]
   14005d4f2:	sub    r8d,r9d
   14005d4f5:	jne    0x14005d512
   14005d4f7:	sub    rcx,rdx
   14005d4fa:	test   r9w,r9w
   14005d4fe:	je     0x14005d512
   14005d500:	add    rdx,0x2
   14005d504:	movzx  r9d,WORD PTR [rdx]
   14005d508:	movzx  r8d,WORD PTR [rcx+rdx*1]
   14005d50d:	sub    r8d,r9d
   14005d510:	je     0x14005d4fa
   14005d512:	test   r8d,r8d
   14005d515:	jns    0x14005d51b
   14005d517:	or     eax,0xffffffff
   14005d51a:	ret    
   14005d51b:	setg   al
   14005d51e:	ret    
   14005d51f:	int3   
   14005d520:	jmp    0x140060a0c
   14005d525:	int3   
   14005d526:	int3   
   14005d527:	int3   
   14005d528:	test   cl,0x4
   14005d52b:	je     0x14005d530
   14005d52d:	mov    al,0x1
   14005d52f:	ret    
   14005d530:	test   cl,0x1
   14005d533:	je     0x14005d54e
   14005d535:	and    ecx,0x2
   14005d538:	je     0x14005d542
   14005d53a:	cmp    edx,0x80000000
   14005d540:	ja     0x14005d52d
   14005d542:	test   ecx,ecx
   14005d544:	jne    0x14005d54e
   14005d546:	cmp    edx,0x7fffffff
   14005d54c:	ja     0x14005d52d
   14005d54e:	xor    al,al
   14005d550:	ret    
   14005d551:	int3   
   14005d552:	int3   
   14005d553:	int3   
   14005d554:	mov    QWORD PTR [rsp+0x8],rbx
   14005d559:	mov    QWORD PTR [rsp+0x18],rsi
   14005d55e:	mov    QWORD PTR [rsp+0x20],rdi
   14005d563:	push   rbp
   14005d564:	push   r12
   14005d566:	push   r13
   14005d568:	push   r14
   14005d56a:	push   r15
   14005d56c:	mov    rbp,rsp
   14005d56f:	sub    rsp,0x40
   14005d573:	cmp    QWORD PTR [rdx],0x0
   14005d577:	mov    r12b,r9b
   14005d57a:	mov    r15d,r8d
   14005d57d:	mov    rbx,rdx
   14005d580:	jne    0x14005d5a8
   14005d582:	call   0x140060e94
   14005d587:	mov    DWORD PTR [rax],0x16
   14005d58d:	call   0x140060d74
   14005d592:	mov    rcx,QWORD PTR [rbx+0x8]
   14005d596:	test   rcx,rcx
   14005d599:	je     0x14005d5a1
   14005d59b:	mov    rax,QWORD PTR [rbx]
   14005d59e:	mov    QWORD PTR [rcx],rax
   14005d5a1:	xor    eax,eax
   14005d5a3:	jmp    0x14005d849
   14005d5a8:	test   r8d,r8d
   14005d5ab:	je     0x14005d5b6
   14005d5ad:	lea    eax,[r8-0x2]
   14005d5b1:	cmp    eax,0x22
   14005d5b4:	ja     0x14005d582
   14005d5b6:	mov    rdx,rcx
   14005d5b9:	lea    rcx,[rbp-0x20]
   14005d5bd:	call   0x14005b174
   14005d5c2:	mov    r13,QWORD PTR [rbx]
   14005d5c5:	xor    esi,esi
   14005d5c7:	mov    rdx,QWORD PTR [rbp-0x18]
   14005d5cb:	mov    QWORD PTR [rbp+0x38],r13
   14005d5cf:	mov    dil,BYTE PTR [r13+0x0]
   14005d5d3:	lea    rax,[r13+0x1]
   14005d5d7:	lea    r13d,[rsi+0x8]
   14005d5db:	mov    QWORD PTR [rbx],rax
   14005d5de:	cmp    DWORD PTR [rdx+0x8],0x1
   14005d5e2:	movzx  eax,dil
   14005d5e6:	jle    0x14005d5fc
   14005d5e8:	lea    r8,[rbp-0x18]
   14005d5ec:	mov    edx,r13d
   14005d5ef:	mov    ecx,eax
   14005d5f1:	call   0x14006271c
   14005d5f6:	mov    rdx,QWORD PTR [rbp-0x18]
   14005d5fa:	jmp    0x14005d609
   14005d5fc:	mov    rcx,rax
   14005d5ff:	mov    rax,QWORD PTR [rdx]
   14005d602:	movzx  eax,WORD PTR [rax+rcx*2]
   14005d606:	and    eax,r13d
   14005d609:	test   eax,eax
   14005d60b:	je     0x14005d618
   14005d60d:	mov    rax,QWORD PTR [rbx]
   14005d610:	mov    dil,BYTE PTR [rax]
   14005d613:	inc    rax
   14005d616:	jmp    0x14005d5db
   14005d618:	xor    r14d,r14d
   14005d61b:	test   r12b,r12b
   14005d61e:	setne  r14b
   14005d622:	cmp    dil,0x2d
   14005d626:	jne    0x14005d62e
   14005d628:	or     r14d,0x2
   14005d62c:	jmp    0x14005d634
   14005d62e:	cmp    dil,0x2b
   14005d632:	jne    0x14005d640
   14005d634:	mov    rax,QWORD PTR [rbx]
   14005d637:	mov    dil,BYTE PTR [rax]
   14005d63a:	inc    rax
   14005d63d:	mov    QWORD PTR [rbx],rax
   14005d640:	mov    r13,QWORD PTR [rbp+0x38]
   14005d644:	or     r12d,0xffffffff
   14005d648:	test   r15d,0xffffffef
   14005d64f:	jne    0x14005d6d5
   14005d655:	lea    eax,[rdi-0x30]
   14005d658:	cmp    al,0x9
   14005d65a:	ja     0x14005d665
   14005d65c:	movsx  eax,dil
   14005d660:	add    eax,0xffffffd0
   14005d663:	jmp    0x14005d688
   14005d665:	lea    eax,[rdi-0x61]
   14005d668:	cmp    al,0x19
   14005d66a:	ja     0x14005d675
   14005d66c:	movsx  eax,dil
   14005d670:	add    eax,0xffffffa9
   14005d673:	jmp    0x14005d688
   14005d675:	lea    eax,[rdi-0x41]
   14005d678:	cmp    al,0x19
   14005d67a:	ja     0x14005d685
   14005d67c:	movsx  eax,dil
   14005d680:	add    eax,0xffffffc9
   14005d683:	jmp    0x14005d688
   14005d685:	mov    eax,r12d
   14005d688:	mov    r9d,0x8
   14005d68e:	test   eax,eax
   14005d690:	je     0x14005d69d
   14005d692:	test   r15d,r15d
   14005d695:	jne    0x14005d6db
   14005d697:	lea    r15d,[r9+0x2]
   14005d69b:	jmp    0x14005d6db
   14005d69d:	mov    rax,QWORD PTR [rbx]
   14005d6a0:	mov    dl,BYTE PTR [rax]
   14005d6a2:	lea    rcx,[rax+0x1]
   14005d6a6:	mov    QWORD PTR [rbx],rcx
   14005d6a9:	lea    eax,[rdx-0x58]
   14005d6ac:	test   al,0xdf
   14005d6ae:	je     0x14005d6f7
   14005d6b0:	test   r15d,r15d
   14005d6b3:	cmove  r15d,r9d
   14005d6b7:	dec    rcx
   14005d6ba:	mov    QWORD PTR [rbx],rcx
   14005d6bd:	test   dl,dl
   14005d6bf:	je     0x14005d6db
   14005d6c1:	cmp    BYTE PTR [rcx],dl
   14005d6c3:	je     0x14005d6db
   14005d6c5:	call   0x140060e94
   14005d6ca:	mov    DWORD PTR [rax],0x16
   14005d6d0:	call   0x140060d74
   14005d6d5:	mov    r9d,0x8
   14005d6db:	xor    edx,edx
   14005d6dd:	mov    eax,r12d
   14005d6e0:	div    r15d
   14005d6e3:	mov    r8d,eax
   14005d6e6:	lea    ecx,[rdi-0x30]
   14005d6e9:	cmp    cl,0x9
   14005d6ec:	ja     0x14005d70f
   14005d6ee:	movsx  ecx,dil
   14005d6f2:	add    ecx,0xffffffd0
   14005d6f5:	jmp    0x14005d732
   14005d6f7:	mov    dil,BYTE PTR [rcx]
   14005d6fa:	mov    eax,0x10
   14005d6ff:	test   r15d,r15d
   14005d702:	cmove  r15d,eax
   14005d706:	lea    rax,[rcx+0x1]
   14005d70a:	mov    QWORD PTR [rbx],rax
   14005d70d:	jmp    0x14005d6db
   14005d70f:	lea    eax,[rdi-0x61]
   14005d712:	cmp    al,0x19
   14005d714:	ja     0x14005d71f
   14005d716:	movsx  ecx,dil
   14005d71a:	add    ecx,0xffffffa9
   14005d71d:	jmp    0x14005d732
   14005d71f:	lea    eax,[rdi-0x41]
   14005d722:	cmp    al,0x19
   14005d724:	ja     0x14005d72f
   14005d726:	movsx  ecx,dil
   14005d72a:	add    ecx,0xffffffc9
   14005d72d:	jmp    0x14005d732
   14005d72f:	mov    ecx,r12d
   14005d732:	cmp    ecx,r12d
   14005d735:	je     0x14005d764
   14005d737:	cmp    ecx,r15d
   14005d73a:	jae    0x14005d764
   14005d73c:	or     r14d,r9d
   14005d73f:	cmp    esi,r8d
   14005d742:	jb     0x14005d750
   14005d744:	jne    0x14005d74a
   14005d746:	cmp    ecx,edx
   14005d748:	jbe    0x14005d750
   14005d74a:	or     r14d,0x4
   14005d74e:	jmp    0x14005d756
   14005d750:	imul   esi,r15d
   14005d754:	add    esi,ecx
   14005d756:	mov    rax,QWORD PTR [rbx]
   14005d759:	mov    dil,BYTE PTR [rax]
   14005d75c:	inc    rax
   14005d75f:	mov    QWORD PTR [rbx],rax
   14005d762:	jmp    0x14005d6e6
   14005d764:	dec    QWORD PTR [rbx]
   14005d767:	mov    rax,QWORD PTR [rbx]
   14005d76a:	test   dil,dil
   14005d76d:	je     0x14005d784
   14005d76f:	cmp    BYTE PTR [rax],dil
   14005d772:	je     0x14005d784
   14005d774:	call   0x140060e94
   14005d779:	mov    DWORD PTR [rax],0x16
   14005d77f:	call   0x140060d74
   14005d784:	test   r14b,0x8
   14005d788:	jne    0x14005d7a7
   14005d78a:	cmp    BYTE PTR [rbp-0x8],0x0
   14005d78e:	mov    QWORD PTR [rbx],r13
   14005d791:	je     0x14005d592
   14005d797:	mov    rax,QWORD PTR [rbp-0x20]
   14005d79b:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   14005d7a2:	jmp    0x14005d592
   14005d7a7:	mov    edx,esi
   14005d7a9:	mov    ecx,r14d
   14005d7ac:	call   0x14005d528
   14005d7b1:	test   al,al
   14005d7b3:	je     0x14005d81f
   14005d7b5:	call   0x140060e94
   14005d7ba:	mov    DWORD PTR [rax],0x22
   14005d7c0:	test   r14b,0x1
   14005d7c4:	jne    0x14005d7cb
   14005d7c6:	mov    esi,r12d
   14005d7c9:	jmp    0x14005d827
   14005d7cb:	test   r14b,0x2
   14005d7cf:	je     0x14005d7f8
   14005d7d1:	cmp    BYTE PTR [rbp-0x8],0x0
   14005d7d5:	je     0x14005d7e2
   14005d7d7:	mov    rax,QWORD PTR [rbp-0x20]
   14005d7db:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   14005d7e2:	mov    rcx,QWORD PTR [rbx+0x8]
   14005d7e6:	test   rcx,rcx
   14005d7e9:	je     0x14005d7f1
   14005d7eb:	mov    rax,QWORD PTR [rbx]
   14005d7ee:	mov    QWORD PTR [rcx],rax
   14005d7f1:	mov    eax,0x80000000
   14005d7f6:	jmp    0x14005d849
   14005d7f8:	cmp    BYTE PTR [rbp-0x8],0x0
   14005d7fc:	je     0x14005d809
   14005d7fe:	mov    rax,QWORD PTR [rbp-0x20]
   14005d802:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   14005d809:	mov    rcx,QWORD PTR [rbx+0x8]
   14005d80d:	test   rcx,rcx
   14005d810:	je     0x14005d818
   14005d812:	mov    rax,QWORD PTR [rbx]
   14005d815:	mov    QWORD PTR [rcx],rax
   14005d818:	mov    eax,0x7fffffff
   14005d81d:	jmp    0x14005d849
   14005d81f:	test   r14b,0x2
   14005d823:	je     0x14005d827
   14005d825:	neg    esi
   14005d827:	cmp    BYTE PTR [rbp-0x8],0x0
   14005d82b:	je     0x14005d838
   14005d82d:	mov    rcx,QWORD PTR [rbp-0x20]
   14005d831:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   14005d838:	mov    rax,QWORD PTR [rbx+0x8]
   14005d83c:	test   rax,rax
   14005d83f:	je     0x14005d847
   14005d841:	mov    rcx,QWORD PTR [rbx]
   14005d844:	mov    QWORD PTR [rax],rcx
   14005d847:	mov    eax,esi
   14005d849:	lea    r11,[rsp+0x40]
   14005d84e:	mov    rbx,QWORD PTR [r11+0x30]
   14005d852:	mov    rsi,QWORD PTR [r11+0x40]
   14005d856:	mov    rdi,QWORD PTR [r11+0x48]
   14005d85a:	mov    rsp,r11
   14005d85d:	pop    r15
   14005d85f:	pop    r14
   14005d861:	pop    r13
   14005d863:	pop    r12
   14005d865:	pop    rbp
   14005d866:	ret    
   14005d867:	int3   
   14005d868:	mov    QWORD PTR [rsp+0x8],rbx
   14005d86d:	mov    QWORD PTR [rsp+0x18],rbp
   14005d872:	mov    QWORD PTR [rsp+0x20],rsi
   14005d877:	push   rdi
   14005d878:	push   r12
   14005d87a:	push   r13
   14005d87c:	push   r14
   14005d87e:	push   r15
   14005d880:	sub    rsp,0x50
   14005d884:	xor    r13d,r13d
   14005d887:	mov    sil,r9b
   14005d88a:	mov    r15d,r8d
   14005d88d:	mov    rdi,rdx
   14005d890:	cmp    QWORD PTR [rdx],r13
   14005d893:	jne    0x14005d8bb
   14005d895:	call   0x140060e94
   14005d89a:	mov    DWORD PTR [rax],0x16
   14005d8a0:	call   0x140060d74
   14005d8a5:	mov    rcx,QWORD PTR [rdi+0x8]
   14005d8a9:	test   rcx,rcx
   14005d8ac:	je     0x14005d8b4
   14005d8ae:	mov    rax,QWORD PTR [rdi]
   14005d8b1:	mov    QWORD PTR [rcx],rax
   14005d8b4:	xor    eax,eax
   14005d8b6:	jmp    0x14005df1e
   14005d8bb:	test   r8d,r8d
   14005d8be:	je     0x14005d8c9
   14005d8c0:	lea    eax,[r8-0x2]
   14005d8c4:	cmp    eax,0x22
   14005d8c7:	ja     0x14005d895
   14005d8c9:	mov    rdx,rcx
   14005d8cc:	lea    rcx,[rsp+0x28]
   14005d8d1:	call   0x14005b174
   14005d8d6:	mov    r12,QWORD PTR [rdi]
   14005d8d9:	mov    r14d,r13d
   14005d8dc:	mov    QWORD PTR [rsp+0x20],r12
   14005d8e1:	mov    ebp,0x8
   14005d8e6:	movzx  ebx,WORD PTR [r12]
   14005d8eb:	lea    rax,[r12+0x2]
   14005d8f0:	jmp    0x14005d8fc
   14005d8f2:	mov    rax,QWORD PTR [rdi]
   14005d8f5:	movzx  ebx,WORD PTR [rax]
   14005d8f8:	add    rax,0x2
   14005d8fc:	mov    edx,ebp
   14005d8fe:	mov    QWORD PTR [rdi],rax
   14005d901:	movzx  ecx,bx
   14005d904:	call   0x1400626ac
   14005d909:	test   eax,eax
   14005d90b:	jne    0x14005d8f2
   14005d90d:	test   sil,sil
   14005d910:	mov    ebp,r13d
   14005d913:	setne  bpl
   14005d917:	cmp    bx,0x2d
   14005d91b:	jne    0x14005d922
   14005d91d:	or     ebp,0x2
   14005d920:	jmp    0x14005d928
   14005d922:	cmp    bx,0x2b
   14005d926:	jne    0x14005d935
   14005d928:	mov    rax,QWORD PTR [rdi]
   14005d92b:	movzx  ebx,WORD PTR [rax]
   14005d92e:	add    rax,0x2
   14005d932:	mov    QWORD PTR [rdi],rax
   14005d935:	mov    esi,0x9e6
   14005d93a:	mov    DWORD PTR [rsp+0x88],0x66a
   14005d945:	or     r9d,0xffffffff
   14005d949:	mov    ecx,0x660
   14005d94e:	mov    r10d,0x30
   14005d954:	mov    r11d,0xff10
   14005d95a:	mov    edx,0x6f0
   14005d95f:	mov    eax,0xa66
   14005d964:	lea    r8d,[rsi-0x80]
   14005d968:	test   r15d,0xffffffef
   14005d96f:	jne    0x14005dbf4
   14005d975:	cmp    bx,r10w
   14005d979:	jb     0x14005db49
   14005d97f:	cmp    bx,0x3a
   14005d983:	jae    0x14005d990
   14005d985:	movzx  eax,bx
   14005d988:	sub    eax,r10d
   14005d98b:	jmp    0x14005db44
   14005d990:	cmp    bx,r11w
   14005d994:	jae    0x14005db2f
   14005d99a:	cmp    bx,cx
   14005d99d:	jb     0x14005db49
   14005d9a3:	cmp    bx,WORD PTR [rsp+0x88]
   14005d9ab:	jae    0x14005d9b7
   14005d9ad:	movzx  eax,bx
   14005d9b0:	sub    eax,ecx
   14005d9b2:	jmp    0x14005db44
   14005d9b7:	cmp    bx,dx
   14005d9ba:	jb     0x14005db49
   14005d9c0:	mov    ecx,0x6fa
   14005d9c5:	cmp    bx,cx
   14005d9c8:	jae    0x14005d9d4
   14005d9ca:	movzx  eax,bx
   14005d9cd:	sub    eax,edx
   14005d9cf:	jmp    0x14005db44
   14005d9d4:	cmp    bx,r8w
   14005d9d8:	jb     0x14005db49
   14005d9de:	mov    ecx,0x970
   14005d9e3:	cmp    bx,cx
   14005d9e6:	jae    0x14005d9f3
   14005d9e8:	movzx  eax,bx
   14005d9eb:	sub    eax,r8d
   14005d9ee:	jmp    0x14005db44
   14005d9f3:	cmp    bx,si
   14005d9f6:	jb     0x14005db49
   14005d9fc:	mov    ecx,0x9f0
   14005da01:	cmp    bx,cx
   14005da04:	jae    0x14005da10
   14005da06:	movzx  eax,bx
   14005da09:	sub    eax,esi
   14005da0b:	jmp    0x14005db44
   14005da10:	cmp    bx,ax
   14005da13:	jb     0x14005db49
   14005da19:	mov    eax,0xa70
   14005da1e:	cmp    bx,ax
   14005da21:	jae    0x14005da30
   14005da23:	movzx  eax,bx
   14005da26:	sub    eax,0xa66
   14005da2b:	jmp    0x14005db44
   14005da30:	mov    ecx,0xae6
   14005da35:	cmp    bx,cx
   14005da38:	jb     0x14005db49
   14005da3e:	lea    eax,[rcx+0xa]
   14005da41:	cmp    bx,ax
   14005da44:	jb     0x14005d9ad
   14005da4a:	lea    ecx,[rax+0x76]
   14005da4d:	cmp    bx,cx
   14005da50:	jb     0x14005db49
   14005da56:	lea    eax,[rcx+0xa]
   14005da59:	cmp    bx,ax
   14005da5c:	jb     0x14005d9ad
   14005da62:	mov    ecx,0xc66
   14005da67:	cmp    bx,cx
   14005da6a:	jb     0x14005db49
   14005da70:	lea    eax,[rcx+0xa]
   14005da73:	cmp    bx,ax
   14005da76:	jb     0x14005d9ad
   14005da7c:	lea    ecx,[rax+0x76]
   14005da7f:	cmp    bx,cx
   14005da82:	jb     0x14005db49
   14005da88:	lea    eax,[rcx+0xa]
   14005da8b:	cmp    bx,ax
   14005da8e:	jb     0x14005d9ad
   14005da94:	lea    ecx,[rax+0x76]
   14005da97:	cmp    bx,cx
   14005da9a:	jb     0x14005db49
   14005daa0:	lea    eax,[rcx+0xa]
   14005daa3:	cmp    bx,ax
   14005daa6:	jb     0x14005d9ad
   14005daac:	mov    ecx,0xe50
   14005dab1:	cmp    bx,cx
   14005dab4:	jb     0x14005db49
   14005daba:	lea    eax,[rcx+0xa]
   14005dabd:	cmp    bx,ax
   14005dac0:	jb     0x14005d9ad
   14005dac6:	lea    ecx,[rax+0x76]
   14005dac9:	cmp    bx,cx
   14005dacc:	jb     0x14005db49
   14005dace:	lea    eax,[rcx+0xa]
   14005dad1:	cmp    bx,ax
   14005dad4:	jb     0x14005d9ad
   14005dada:	lea    ecx,[rax+0x46]
   14005dadd:	cmp    bx,cx
   14005dae0:	jb     0x14005db49
   14005dae2:	lea    eax,[rcx+0xa]
   14005dae5:	cmp    bx,ax
   14005dae8:	jb     0x14005d9ad
   14005daee:	mov    ecx,0x1040
   14005daf3:	cmp    bx,cx
   14005daf6:	jb     0x14005db49
   14005daf8:	lea    eax,[rcx+0xa]
   14005dafb:	cmp    bx,ax
   14005dafe:	jb     0x14005d9ad
   14005db04:	mov    ecx,0x17e0
   14005db09:	cmp    bx,cx
   14005db0c:	jb     0x14005db49
   14005db0e:	lea    eax,[rcx+0xa]
   14005db11:	cmp    bx,ax
   14005db14:	jb     0x14005d9ad
   14005db1a:	lea    ecx,[rax+0x26]
   14005db1d:	cmp    bx,cx
   14005db20:	jb     0x14005db49
   14005db22:	lea    eax,[rcx+0xa]
   14005db25:	cmp    bx,ax
   14005db28:	jae    0x14005db49
   14005db2a:	jmp    0x14005d9ad
   14005db2f:	mov    eax,0xff1a
   14005db34:	cmp    bx,ax
   14005db37:	jae    0x14005db41
   14005db39:	movzx  eax,bx
   14005db3c:	sub    eax,r11d
   14005db3f:	jmp    0x14005db44
   14005db41:	or     eax,0xffffffff
   14005db44:	cmp    eax,0xffffffff
   14005db47:	jne    0x14005db72
   14005db49:	lea    eax,[rbx-0x41]
   14005db4c:	cmp    ax,0x19
   14005db50:	jbe    0x14005db60
   14005db52:	lea    eax,[rbx-0x61]
   14005db55:	cmp    ax,0x19
   14005db59:	jbe    0x14005db60
   14005db5b:	mov    eax,r9d
   14005db5e:	jmp    0x14005db72
   14005db60:	lea    eax,[rbx-0x61]
   14005db63:	cmp    ax,0x19
   14005db67:	movzx  eax,bx
   14005db6a:	ja     0x14005db6f
   14005db6c:	sub    eax,0x20
   14005db6f:	add    eax,0xffffffc9
   14005db72:	mov    esi,0x8
   14005db77:	test   eax,eax
   14005db79:	je     0x14005db86
   14005db7b:	test   r15d,r15d
   14005db7e:	jne    0x14005dbf9
   14005db80:	lea    r15d,[rsi+0x2]
   14005db84:	jmp    0x14005dbf9
   14005db86:	mov    rax,QWORD PTR [rdi]
   14005db89:	mov    r8d,0xffdf
   14005db8f:	movzx  edx,WORD PTR [rax]
   14005db92:	lea    rcx,[rax+0x2]
   14005db96:	mov    QWORD PTR [rdi],rcx
   14005db99:	lea    eax,[rdx-0x58]
   14005db9c:	test   r8w,ax
   14005dba0:	je     0x14005dbdc
   14005dba2:	test   r15d,r15d
   14005dba5:	cmove  r15d,esi
   14005dba9:	add    rcx,0xfffffffffffffffe
   14005dbad:	mov    QWORD PTR [rdi],rcx
   14005dbb0:	test   dx,dx
   14005dbb3:	je     0x14005dbf9
   14005dbb5:	cmp    WORD PTR [rcx],dx
   14005dbb8:	je     0x14005dbf9
   14005dbba:	call   0x140060e94
   14005dbbf:	mov    DWORD PTR [rax],0x16
   14005dbc5:	call   0x140060d74
   14005dbca:	or     r9d,0xffffffff
   14005dbce:	mov    r10d,0x30
   14005dbd4:	mov    r11d,0xff10
   14005dbda:	jmp    0x14005dbf9
   14005dbdc:	movzx  ebx,WORD PTR [rcx]
   14005dbdf:	mov    eax,0x10
   14005dbe4:	test   r15d,r15d
   14005dbe7:	cmove  r15d,eax
   14005dbeb:	lea    rax,[rcx+0x2]
   14005dbef:	mov    QWORD PTR [rdi],rax
   14005dbf2:	jmp    0x14005dbf9
   14005dbf4:	mov    esi,0x8
   14005dbf9:	xor    edx,edx
   14005dbfb:	mov    eax,r9d
   14005dbfe:	div    r15d
   14005dc01:	mov    r13d,0x660
   14005dc07:	mov    r12d,0x6f0
   14005dc0d:	mov    r8d,eax
   14005dc10:	cmp    bx,r10w
   14005dc14:	jb     0x14005ddc8
   14005dc1a:	cmp    bx,0x3a
   14005dc1e:	jae    0x14005dc2b
   14005dc20:	movzx  ecx,bx
   14005dc23:	sub    ecx,r10d
   14005dc26:	jmp    0x14005ddc3
   14005dc2b:	cmp    bx,r11w
   14005dc2f:	jae    0x14005ddae
   14005dc35:	cmp    bx,r13w
   14005dc39:	jb     0x14005ddc8
   14005dc3f:	mov    eax,0x66a
   14005dc44:	cmp    bx,ax
   14005dc47:	jae    0x14005dc54
   14005dc49:	movzx  ecx,bx
   14005dc4c:	sub    ecx,r13d
   14005dc4f:	jmp    0x14005ddc3
   14005dc54:	cmp    bx,r12w
   14005dc58:	jb     0x14005ddc8
   14005dc5e:	mov    eax,0x6fa
   14005dc63:	cmp    bx,ax
   14005dc66:	jae    0x14005dc73
   14005dc68:	movzx  ecx,bx
   14005dc6b:	sub    ecx,r12d
   14005dc6e:	jmp    0x14005ddc3
   14005dc73:	mov    eax,0x966
   14005dc78:	cmp    bx,ax
   14005dc7b:	jb     0x14005ddc8
   14005dc81:	lea    ecx,[rax+0xa]
   14005dc84:	cmp    bx,cx
   14005dc87:	jae    0x14005dc93
   14005dc89:	movzx  ecx,bx
   14005dc8c:	sub    ecx,eax
   14005dc8e:	jmp    0x14005ddc3
   14005dc93:	mov    eax,0x9e6
   14005dc98:	cmp    bx,ax
   14005dc9b:	jb     0x14005ddc8
   14005dca1:	lea    ecx,[rax+0xa]
   14005dca4:	cmp    bx,cx
   14005dca7:	jb     0x14005dc89
   14005dca9:	lea    eax,[rcx+0x76]
   14005dcac:	cmp    bx,ax
   14005dcaf:	jb     0x14005ddc8
   14005dcb5:	lea    ecx,[rax+0xa]
   14005dcb8:	cmp    bx,cx
   14005dcbb:	jb     0x14005dc89
   14005dcbd:	lea    eax,[rcx+0x76]
   14005dcc0:	cmp    bx,ax
   14005dcc3:	jb     0x14005ddc8
   14005dcc9:	lea    ecx,[rax+0xa]
   14005dccc:	cmp    bx,cx
   14005dccf:	jb     0x14005dc89
   14005dcd1:	lea    eax,[rcx+0x76]
   14005dcd4:	cmp    bx,ax
   14005dcd7:	jb     0x14005ddc8
   14005dcdd:	lea    ecx,[rax+0xa]
   14005dce0:	cmp    bx,cx
   14005dce3:	jb     0x14005dc89
   14005dce5:	mov    eax,0xc66
   14005dcea:	cmp    bx,ax
   14005dced:	jb     0x14005ddc8
   14005dcf3:	lea    ecx,[rax+0xa]
   14005dcf6:	cmp    bx,cx
   14005dcf9:	jb     0x14005dc89
   14005dcfb:	lea    eax,[rcx+0x76]
   14005dcfe:	cmp    bx,ax
   14005dd01:	jb     0x14005ddc8
   14005dd07:	lea    ecx,[rax+0xa]
   14005dd0a:	cmp    bx,cx
   14005dd0d:	jb     0x14005dc89
   14005dd13:	lea    eax,[rcx+0x76]
   14005dd16:	cmp    bx,ax
   14005dd19:	jb     0x14005ddc8
   14005dd1f:	lea    ecx,[rax+0xa]
   14005dd22:	cmp    bx,cx
   14005dd25:	jb     0x14005dc89
   14005dd2b:	mov    eax,0xe50
   14005dd30:	cmp    bx,ax
   14005dd33:	jb     0x14005ddc8
   14005dd39:	lea    ecx,[rax+0xa]
   14005dd3c:	cmp    bx,cx
   14005dd3f:	jb     0x14005dc89
   14005dd45:	lea    eax,[rcx+0x76]
   14005dd48:	cmp    bx,ax
   14005dd4b:	jb     0x14005ddc8
   14005dd4d:	lea    ecx,[rax+0xa]
   14005dd50:	cmp    bx,cx
   14005dd53:	jb     0x14005dc89
   14005dd59:	lea    eax,[rcx+0x46]
   14005dd5c:	cmp    bx,ax
   14005dd5f:	jb     0x14005ddc8
   14005dd61:	lea    ecx,[rax+0xa]
   14005dd64:	cmp    bx,cx
   14005dd67:	jb     0x14005dc89
   14005dd6d:	mov    eax,0x1040
   14005dd72:	cmp    bx,ax
   14005dd75:	jb     0x14005ddc8
   14005dd77:	lea    ecx,[rax+0xa]
   14005dd7a:	cmp    bx,cx
   14005dd7d:	jb     0x14005dc89
   14005dd83:	mov    eax,0x17e0
   14005dd88:	cmp    bx,ax
   14005dd8b:	jb     0x14005ddc8
   14005dd8d:	lea    ecx,[rax+0xa]
   14005dd90:	cmp    bx,cx
   14005dd93:	jb     0x14005dc89
   14005dd99:	lea    eax,[rcx+0x26]
   14005dd9c:	cmp    bx,ax
   14005dd9f:	jb     0x14005ddc8
   14005dda1:	lea    ecx,[rax+0xa]
   14005dda4:	cmp    bx,cx
   14005dda7:	jae    0x14005ddc8
   14005dda9:	jmp    0x14005dc89
   14005ddae:	mov    eax,0xff1a
   14005ddb3:	cmp    bx,ax
   14005ddb6:	jae    0x14005ddc0
   14005ddb8:	movzx  ecx,bx
   14005ddbb:	sub    ecx,r11d
   14005ddbe:	jmp    0x14005ddc3
   14005ddc0:	or     ecx,0xffffffff
   14005ddc3:	cmp    ecx,0xffffffff
   14005ddc6:	jne    0x14005ddf1
   14005ddc8:	lea    eax,[rbx-0x41]
   14005ddcb:	cmp    ax,0x19
   14005ddcf:	jbe    0x14005dddf
   14005ddd1:	lea    eax,[rbx-0x61]
   14005ddd4:	cmp    ax,0x19
   14005ddd8:	jbe    0x14005dddf
   14005ddda:	mov    ecx,r9d
   14005dddd:	jmp    0x14005ddf1
   14005dddf:	lea    eax,[rbx-0x61]
   14005dde2:	movzx  ecx,bx
   14005dde5:	cmp    ax,0x19
   14005dde9:	ja     0x14005ddee
   14005ddeb:	sub    ecx,0x20
   14005ddee:	add    ecx,0xffffffc9
   14005ddf1:	cmp    ecx,r9d
   14005ddf4:	je     0x14005de26
   14005ddf6:	cmp    ecx,r15d
   14005ddf9:	jae    0x14005de26
   14005ddfb:	or     ebp,esi
   14005ddfd:	cmp    r14d,r8d
   14005de00:	jb     0x14005de0d
   14005de02:	jne    0x14005de08
   14005de04:	cmp    ecx,edx
   14005de06:	jbe    0x14005de0d
   14005de08:	or     ebp,0x4
   14005de0b:	jmp    0x14005de14
   14005de0d:	imul   r14d,r15d
   14005de11:	add    r14d,ecx
   14005de14:	mov    rax,QWORD PTR [rdi]
   14005de17:	movzx  ebx,WORD PTR [rax]
   14005de1a:	add    rax,0x2
   14005de1e:	mov    QWORD PTR [rdi],rax
   14005de21:	jmp    0x14005dc10
   14005de26:	add    QWORD PTR [rdi],0xfffffffffffffffe
   14005de2a:	xor    r13d,r13d
   14005de2d:	mov    rax,QWORD PTR [rdi]
   14005de30:	mov    r12,QWORD PTR [rsp+0x20]
   14005de35:	test   bx,bx
   14005de38:	je     0x14005de4f
   14005de3a:	cmp    WORD PTR [rax],bx
   14005de3d:	je     0x14005de4f
   14005de3f:	call   0x140060e94
   14005de44:	mov    DWORD PTR [rax],0x16
   14005de4a:	call   0x140060d74
   14005de4f:	test   sil,bpl
   14005de52:	jne    0x14005de73
   14005de54:	mov    QWORD PTR [rdi],r12
   14005de57:	cmp    BYTE PTR [rsp+0x40],r13b
   14005de5c:	je     0x14005d8a5
   14005de62:	mov    rax,QWORD PTR [rsp+0x28]
   14005de67:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   14005de6e:	jmp    0x14005d8a5
   14005de73:	mov    edx,r14d
   14005de76:	mov    ecx,ebp
   14005de78:	call   0x14005d528
   14005de7d:	test   al,al
   14005de7f:	je     0x14005def0
   14005de81:	call   0x140060e94
   14005de86:	mov    DWORD PTR [rax],0x22
   14005de8c:	test   bpl,0x1
   14005de90:	jne    0x14005de98
   14005de92:	or     r14d,0xffffffff
   14005de96:	jmp    0x14005def9
   14005de98:	test   bpl,0x2
   14005de9c:	je     0x14005dec7
   14005de9e:	cmp    BYTE PTR [rsp+0x40],r13b
   14005dea3:	je     0x14005deb1
   14005dea5:	mov    rax,QWORD PTR [rsp+0x28]
   14005deaa:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   14005deb1:	mov    rcx,QWORD PTR [rdi+0x8]
   14005deb5:	test   rcx,rcx
   14005deb8:	je     0x14005dec0
   14005deba:	mov    rax,QWORD PTR [rdi]
   14005debd:	mov    QWORD PTR [rcx],rax
   14005dec0:	mov    eax,0x80000000
   14005dec5:	jmp    0x14005df1e
   14005dec7:	cmp    BYTE PTR [rsp+0x40],r13b
   14005decc:	je     0x14005deda
   14005dece:	mov    rax,QWORD PTR [rsp+0x28]
   14005ded3:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   14005deda:	mov    rcx,QWORD PTR [rdi+0x8]
   14005dede:	test   rcx,rcx
   14005dee1:	je     0x14005dee9
   14005dee3:	mov    rax,QWORD PTR [rdi]
   14005dee6:	mov    QWORD PTR [rcx],rax
   14005dee9:	mov    eax,0x7fffffff
   14005deee:	jmp    0x14005df1e
   14005def0:	test   bpl,0x2
   14005def4:	je     0x14005def9
   14005def6:	neg    r14d
   14005def9:	cmp    BYTE PTR [rsp+0x40],r13b
   14005defe:	je     0x14005df0c
   14005df00:	mov    rcx,QWORD PTR [rsp+0x28]
   14005df05:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   14005df0c:	mov    rdx,QWORD PTR [rdi+0x8]
   14005df10:	test   rdx,rdx
   14005df13:	je     0x14005df1b
   14005df15:	mov    rcx,QWORD PTR [rdi]
   14005df18:	mov    QWORD PTR [rdx],rcx
   14005df1b:	mov    eax,r14d
   14005df1e:	lea    r11,[rsp+0x50]
   14005df23:	mov    rbx,QWORD PTR [r11+0x30]
   14005df27:	mov    rbp,QWORD PTR [r11+0x40]
   14005df2b:	mov    rsi,QWORD PTR [r11+0x48]
   14005df2f:	mov    rsp,r11
   14005df32:	pop    r15
   14005df34:	pop    r14
   14005df36:	pop    r13
   14005df38:	pop    r12
   14005df3a:	pop    rdi
   14005df3b:	ret    
   14005df3c:	sub    rsp,0x38
   14005df40:	mov    rdx,rcx
   14005df43:	xor    r8d,r8d
   14005df46:	lea    rcx,[rsp+0x20]
   14005df4b:	call   0x14005df68
   14005df50:	xor    ecx,ecx
   14005df52:	mov    rdx,rax
   14005df55:	mov    r9b,0x1
   14005df58:	lea    r8d,[rcx+0xa]
   14005df5c:	call   0x14005d554
   14005df61:	add    rsp,0x38
   14005df65:	ret    
   14005df66:	int3   
   14005df67:	int3   
   14005df68:	mov    QWORD PTR [rcx],rdx
   14005df6b:	mov    QWORD PTR [rcx+0x8],r8
   14005df6f:	test   r8,r8
   14005df72:	je     0x14005df77
   14005df74:	mov    QWORD PTR [r8],rdx
   14005df77:	mov    rax,rcx
   14005df7a:	ret    
   14005df7b:	int3   
   14005df7c:	rex push rbx
   14005df7e:	sub    rsp,0x30
   14005df82:	mov    ebx,r8d
   14005df85:	mov    r8,rdx
   14005df88:	mov    rdx,rcx
   14005df8b:	lea    rcx,[rsp+0x20]
   14005df90:	call   0x14005df68
   14005df95:	mov    rdx,rax
   14005df98:	mov    r9b,0x1
   14005df9b:	mov    r8d,ebx
   14005df9e:	xor    ecx,ecx
   14005dfa0:	call   0x14005d554
   14005dfa5:	add    rsp,0x30
   14005dfa9:	pop    rbx
   14005dfaa:	ret    
   14005dfab:	int3   
   14005dfac:	rex push rbx
   14005dfae:	sub    rsp,0x30
   14005dfb2:	mov    ebx,r8d
   14005dfb5:	mov    r8,rdx
   14005dfb8:	mov    rdx,rcx
   14005dfbb:	lea    rcx,[rsp+0x20]
   14005dfc0:	call   0x14005df68
   14005dfc5:	mov    rdx,rax
   14005dfc8:	xor    r9d,r9d
   14005dfcb:	mov    r8d,ebx
   14005dfce:	xor    ecx,ecx
   14005dfd0:	call   0x14005d554
   14005dfd5:	add    rsp,0x30
   14005dfd9:	pop    rbx
   14005dfda:	ret    
   14005dfdb:	int3   
   14005dfdc:	rex push rbx
   14005dfde:	sub    rsp,0x30
   14005dfe2:	mov    ebx,r8d
   14005dfe5:	mov    r8,rdx
   14005dfe8:	mov    rdx,rcx
   14005dfeb:	lea    rcx,[rsp+0x20]
   14005dff0:	call   0x14005df68
   14005dff5:	mov    rdx,rax
   14005dff8:	mov    r9b,0x1
   14005dffb:	mov    r8d,ebx
   14005dffe:	xor    ecx,ecx
   14005e000:	call   0x14005d868
   14005e005:	add    rsp,0x30
   14005e009:	pop    rbx
   14005e00a:	ret    
   14005e00b:	int3   
   14005e00c:	mov    QWORD PTR [rsp+0x8],rdi
   14005e011:	mov    r9,rcx
   14005e014:	mov    rdi,rcx
   14005e017:	xor    ecx,ecx
   14005e019:	test   r8,r8
   14005e01c:	je     0x14005e04b
   14005e01e:	sub    rdx,rdi
   14005e021:	movzx  eax,WORD PTR [rdx+rdi*1]
   14005e025:	mov    WORD PTR [rdi],ax
   14005e028:	add    rdi,0x2
   14005e02c:	test   ax,ax
   14005e02f:	je     0x14005e037
   14005e031:	sub    r8,0x1
   14005e035:	jne    0x14005e021
   14005e037:	test   r8,r8
   14005e03a:	je     0x14005e04b
   14005e03c:	sub    r8,0x1
   14005e040:	je     0x14005e04b
   14005e042:	movzx  eax,cx
   14005e045:	mov    rcx,r8
   14005e048:	rep stos WORD PTR es:[rdi],ax
   14005e04b:	mov    rdi,QWORD PTR [rsp+0x8]
   14005e050:	mov    rax,r9
   14005e053:	ret    
   14005e054:	int3   
   14005e055:	int3   
   14005e056:	int3   
   14005e057:	int3   
   14005e058:	int3   
   14005e059:	int3   
   14005e05a:	int3   
   14005e05b:	int3   
   14005e05c:	int3   
   14005e05d:	int3   
   14005e05e:	int3   
   14005e05f:	int3   
   14005e060:	int3   
   14005e061:	int3   
   14005e062:	int3   
   14005e063:	int3   
   14005e064:	int3   
   14005e065:	int3   
   14005e066:	data16 nop WORD PTR [rax+rax*1+0x0]
   14005e070:	sub    rdx,rcx
   14005e073:	test   r8,r8
   14005e076:	je     0x14005e0e2
   14005e078:	test   ecx,0x7
   14005e07e:	je     0x14005e09d
   14005e080:	movzx  eax,BYTE PTR [rcx]
   14005e083:	cmp    al,BYTE PTR [rcx+rdx*1]
   14005e086:	jne    0x14005e0e5
   14005e088:	inc    rcx
   14005e08b:	dec    r8
   14005e08e:	je     0x14005e0e2
   14005e090:	test   al,al
   14005e092:	je     0x14005e0e2
   14005e094:	test   rcx,0x7
   14005e09b:	jne    0x14005e080
   14005e09d:	movabs r11,0x8080808080808080
   14005e0a7:	movabs r10,0xfefefefefefefeff
   14005e0b1:	lea    eax,[rcx+rdx*1]
   14005e0b4:	and    eax,0xfff
   14005e0b9:	cmp    eax,0xff8
   14005e0be:	ja     0x14005e080
   14005e0c0:	mov    rax,QWORD PTR [rcx]
   14005e0c3:	cmp    rax,QWORD PTR [rcx+rdx*1]
   14005e0c7:	jne    0x14005e080
   14005e0c9:	add    rcx,0x8
   14005e0cd:	sub    r8,0x8
   14005e0d1:	jbe    0x14005e0e2
   14005e0d3:	lea    r9,[rax+r10*1]
   14005e0d7:	not    rax
   14005e0da:	and    rax,r9
   14005e0dd:	test   r11,rax
   14005e0e0:	je     0x14005e0b1
   14005e0e2:	xor    eax,eax
   14005e0e4:	ret    
   14005e0e5:	sbb    rax,rax
   14005e0e8:	or     rax,0x1
   14005e0ec:	ret    
   14005e0ed:	int3   
   14005e0ee:	int3   
   14005e0ef:	int3   
   14005e0f0:	int3   
   14005e0f1:	int3   
   14005e0f2:	int3   
   14005e0f3:	int3   
   14005e0f4:	int3   
   14005e0f5:	int3   
   14005e0f6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14005e100:	mov    r11,rcx
   14005e103:	or     r8,r8
   14005e106:	je     0x14005e12c
   14005e108:	sub    rcx,rdx
   14005e10b:	test   dl,0x7
   14005e10e:	je     0x14005e138
   14005e110:	mov    al,BYTE PTR [rdx]
   14005e112:	test   al,al
   14005e114:	mov    BYTE PTR [rcx+rdx*1],al
   14005e117:	je     0x14005e200
   14005e11d:	inc    rdx
   14005e120:	dec    r8
   14005e123:	je     0x14005e12c
   14005e125:	test   dl,0x7
   14005e128:	jne    0x14005e110
   14005e12a:	jmp    0x14005e138
   14005e12c:	mov    rax,r11
   14005e12f:	ret    
   14005e130:	mov    QWORD PTR [rcx+rdx*1],rax
   14005e134:	add    rdx,0x8
   14005e138:	mov    rax,QWORD PTR [rdx]
   14005e13b:	sub    r8,0x8
   14005e13f:	jbe    0x14005e167
   14005e141:	movabs r9,0x7efefefefefefeff
   14005e14b:	add    r9,rax
   14005e14e:	mov    r10,rax
   14005e151:	xor    r10,0xffffffffffffffff
   14005e155:	xor    r10,r9
   14005e158:	movabs r9,0x8101010101010100
   14005e162:	test   r9,r10
   14005e165:	je     0x14005e130
   14005e167:	add    r8,0x8
   14005e16b:	je     0x14005e1fc
   14005e171:	test   al,al
   14005e173:	mov    BYTE PTR [rcx+rdx*1],al
   14005e176:	je     0x14005e200
   14005e17c:	inc    rdx
   14005e17f:	dec    r8
   14005e182:	je     0x14005e1fc
   14005e184:	test   ah,ah
   14005e186:	mov    BYTE PTR [rcx+rdx*1],ah
   14005e189:	je     0x14005e200
   14005e18b:	inc    rdx
   14005e18e:	dec    r8
   14005e191:	je     0x14005e1fc
   14005e193:	shr    rax,0x10
   14005e197:	test   al,al
   14005e199:	mov    BYTE PTR [rcx+rdx*1],al
   14005e19c:	je     0x14005e200
   14005e19e:	inc    rdx
   14005e1a1:	dec    r8
   14005e1a4:	je     0x14005e1fc
   14005e1a6:	test   ah,ah
   14005e1a8:	mov    BYTE PTR [rcx+rdx*1],ah
   14005e1ab:	je     0x14005e200
   14005e1ad:	inc    rdx
   14005e1b0:	dec    r8
   14005e1b3:	je     0x14005e1fc
   14005e1b5:	shr    rax,0x10
   14005e1b9:	test   al,al
   14005e1bb:	mov    BYTE PTR [rcx+rdx*1],al
   14005e1be:	je     0x14005e200
   14005e1c0:	inc    rdx
   14005e1c3:	dec    r8
   14005e1c6:	je     0x14005e1fc
   14005e1c8:	test   ah,ah
   14005e1ca:	mov    BYTE PTR [rcx+rdx*1],ah
   14005e1cd:	je     0x14005e200
   14005e1cf:	inc    rdx
   14005e1d2:	dec    r8
   14005e1d5:	je     0x14005e1fc
   14005e1d7:	shr    eax,0x10
   14005e1da:	test   al,al
   14005e1dc:	mov    BYTE PTR [rcx+rdx*1],al
   14005e1df:	je     0x14005e200
   14005e1e1:	inc    rdx
   14005e1e4:	dec    r8
   14005e1e7:	je     0x14005e1fc
   14005e1e9:	test   ah,ah
   14005e1eb:	mov    BYTE PTR [rcx+rdx*1],ah
   14005e1ee:	je     0x14005e200
   14005e1f0:	inc    rdx
   14005e1f3:	dec    r8
   14005e1f6:	jne    0x14005e138
   14005e1fc:	mov    rax,r11
   14005e1ff:	ret    
   14005e200:	add    rcx,rdx
   14005e203:	xor    rdx,rdx
   14005e206:	cmp    r8,0x10
   14005e20a:	jb     0x14005e251
   14005e20c:	test   cl,0x7
   14005e20f:	je     0x14005e21b
   14005e211:	inc    rcx
   14005e214:	mov    BYTE PTR [rcx],dl
   14005e216:	dec    r8
   14005e219:	jmp    0x14005e20c
   14005e21b:	sub    r8,0x20
   14005e21f:	jb     0x14005e23a
   14005e221:	mov    QWORD PTR [rcx],rdx
   14005e224:	mov    QWORD PTR [rcx+0x8],rdx
   14005e228:	mov    QWORD PTR [rcx+0x10],rdx
   14005e22c:	mov    QWORD PTR [rcx+0x18],rdx
   14005e230:	add    rcx,0x20
   14005e234:	sub    r8,0x20
   14005e238:	jae    0x14005e221
   14005e23a:	add    r8,0x20
   14005e23e:	sub    r8,0x8
   14005e242:	jb     0x14005e24d
   14005e244:	mov    QWORD PTR [rcx],rdx
   14005e247:	add    rcx,0x8
   14005e24b:	jmp    0x14005e23e
   14005e24d:	add    r8,0x8
   14005e251:	sub    r8,0x1
   14005e255:	jb     0x14005e25e
   14005e257:	mov    BYTE PTR [rcx],dl
   14005e259:	inc    rcx
   14005e25c:	jmp    0x14005e251
   14005e25e:	mov    rax,r11
   14005e261:	ret    
   14005e262:	int3   
   14005e263:	int3   
   14005e264:	xor    eax,eax
   14005e266:	cmp    ecx,0xe06d7363
   14005e26c:	sete   al
   14005e26f:	ret    
   14005e270:	mov    rax,rsp
   14005e273:	mov    QWORD PTR [rax+0x8],rbx
   14005e277:	mov    QWORD PTR [rax+0x10],rsi
   14005e27b:	mov    QWORD PTR [rax+0x18],rdi
   14005e27f:	mov    QWORD PTR [rax+0x20],r14
   14005e283:	push   r15
   14005e285:	sub    rsp,0x20
   14005e289:	mov    esi,r8d
   14005e28c:	mov    ebx,edx
   14005e28e:	mov    r14d,ecx
   14005e291:	test   r8d,r8d
   14005e294:	jne    0x14005e2e0
   14005e296:	xor    ecx,ecx
   14005e298:	call   QWORD PTR [rip+0xe0b2]        # 0x14006c350
   14005e29e:	test   rax,rax
   14005e2a1:	je     0x14005e2e0
   14005e2a3:	mov    ecx,0x5a4d
   14005e2a8:	cmp    WORD PTR [rax],cx
   14005e2ab:	jne    0x14005e2e0
   14005e2ad:	movsxd rcx,DWORD PTR [rax+0x3c]
   14005e2b1:	add    rcx,rax
   14005e2b4:	cmp    DWORD PTR [rcx],0x4550
   14005e2ba:	jne    0x14005e2e0
   14005e2bc:	mov    eax,0x20b
   14005e2c1:	cmp    WORD PTR [rcx+0x18],ax
   14005e2c5:	jne    0x14005e2e0
   14005e2c7:	cmp    DWORD PTR [rcx+0x84],0xe
   14005e2ce:	jbe    0x14005e2e0
   14005e2d0:	cmp    DWORD PTR [rcx+0xf8],esi
   14005e2d6:	je     0x14005e2e0
   14005e2d8:	mov    ecx,r14d
   14005e2db:	call   0x14005e428
   14005e2e0:	mov    ecx,0x2
   14005e2e5:	call   0x140062874
   14005e2ea:	nop
   14005e2eb:	cmp    BYTE PTR [rip+0x4126e],0x0        # 0x14009f560
   14005e2f2:	jne    0x14005e3aa
   14005e2f8:	mov    r15d,0x1
   14005e2fe:	mov    eax,r15d
   14005e301:	xchg   DWORD PTR [rip+0x41249],eax        # 0x14009f550
   14005e307:	test   ebx,ebx
   14005e309:	jne    0x14005e353
   14005e30b:	mov    rdi,QWORD PTR [rip+0x23bce]        # 0x140081ee0
   14005e312:	mov    edx,edi
   14005e314:	and    edx,0x3f
   14005e317:	lea    ecx,[rbx+0x40]
   14005e31a:	sub    ecx,edx
   14005e31c:	xor    eax,eax
   14005e31e:	ror    rax,cl
   14005e321:	xor    rax,rdi
   14005e324:	mov    rcx,QWORD PTR [rip+0x4122d]        # 0x14009f558
   14005e32b:	cmp    rcx,rax
   14005e32e:	je     0x14005e34a
   14005e330:	xor    rdi,rcx
   14005e333:	mov    ecx,edx
   14005e335:	ror    rdi,cl
   14005e338:	mov    rcx,rdi
   14005e33b:	call   QWORD PTR [rip+0xe1e7]        # 0x14006c528
   14005e341:	xor    r8d,r8d
   14005e344:	xor    edx,edx
   14005e346:	xor    ecx,ecx
   14005e348:	call   rdi
   14005e34a:	lea    rcx,[rip+0x41377]        # 0x14009f6c8
   14005e351:	jmp    0x14005e35f
   14005e353:	cmp    ebx,r15d
   14005e356:	jne    0x14005e365
   14005e358:	lea    rcx,[rip+0x41381]        # 0x14009f6e0
   14005e35f:	call   0x140060354
   14005e364:	nop
   14005e365:	test   ebx,ebx
   14005e367:	jne    0x14005e37c
   14005e369:	lea    rdx,[rip+0xe2a8]        # 0x14006c618
   14005e370:	lea    rcx,[rip+0xe281]        # 0x14006c5f8
   14005e377:	call   0x140060620
   14005e37c:	lea    rdx,[rip+0xe2a5]        # 0x14006c628
   14005e383:	lea    rcx,[rip+0xe296]        # 0x14006c620
   14005e38a:	call   0x140060620
   14005e38f:	movzx  eax,BYTE PTR [rip+0x411ca]        # 0x14009f560
   14005e396:	test   esi,esi
   14005e398:	cmove  eax,r15d
   14005e39c:	mov    BYTE PTR [rip+0x411be],al        # 0x14009f560
   14005e3a2:	jmp    0x14005e3aa
   14005e3a4:	call   0x14005f654
   14005e3a9:	nop
   14005e3aa:	mov    ecx,0x2
   14005e3af:	call   0x1400628c8
   14005e3b4:	test   esi,esi
   14005e3b6:	jne    0x14005e3c1
   14005e3b8:	mov    ecx,r14d
   14005e3bb:	call   0x14005e3dc
   14005e3c0:	int3   
   14005e3c1:	mov    rbx,QWORD PTR [rsp+0x30]
   14005e3c6:	mov    rsi,QWORD PTR [rsp+0x38]
   14005e3cb:	mov    rdi,QWORD PTR [rsp+0x40]
   14005e3d0:	mov    r14,QWORD PTR [rsp+0x48]
   14005e3d5:	add    rsp,0x20
   14005e3d9:	pop    r15
   14005e3db:	ret    
   14005e3dc:	rex push rbx
   14005e3de:	sub    rsp,0x20
   14005e3e2:	mov    ebx,ecx
   14005e3e4:	call   0x140062eec
   14005e3e9:	test   al,al
   14005e3eb:	je     0x14005e415
   14005e3ed:	mov    rax,QWORD PTR gs:0x60
   14005e3f6:	mov    edx,DWORD PTR [rax+0xbc]
   14005e3fc:	shr    edx,0x8
   14005e3ff:	test   dl,0x1
   14005e402:	jne    0x14005e415
   14005e404:	call   QWORD PTR [rip+0xdc7e]        # 0x14006c088
   14005e40a:	mov    rcx,rax
   14005e40d:	mov    edx,ebx
   14005e40f:	call   QWORD PTR [rip+0xdf9b]        # 0x14006c3b0
   14005e415:	mov    ecx,ebx
   14005e417:	call   0x14005e428
   14005e41c:	mov    ecx,ebx
   14005e41e:	call   QWORD PTR [rip+0xe01c]        # 0x14006c440
   14005e424:	int3   
   14005e425:	int3   
   14005e426:	int3   
   14005e427:	int3   
   14005e428:	mov    QWORD PTR [rsp+0x8],rbx
   14005e42d:	push   rdi
   14005e42e:	sub    rsp,0x20
   14005e432:	and    QWORD PTR [rsp+0x38],0x0
   14005e438:	lea    r8,[rsp+0x38]
   14005e43d:	mov    edi,ecx
   14005e43f:	lea    rdx,[rip+0x13cb2]        # 0x1400720f8
   14005e446:	xor    ecx,ecx
   14005e448:	call   QWORD PTR [rip+0xdffa]        # 0x14006c448
   14005e44e:	test   eax,eax
   14005e450:	je     0x14005e479
   14005e452:	mov    rcx,QWORD PTR [rsp+0x38]
   14005e457:	lea    rdx,[rip+0x13cb2]        # 0x140072110
   14005e45e:	call   QWORD PTR [rip+0xdef4]        # 0x14006c358
   14005e464:	mov    rbx,rax
   14005e467:	test   rax,rax
   14005e46a:	je     0x14005e479
   14005e46c:	mov    rcx,rax
   14005e46f:	call   QWORD PTR [rip+0xe0b3]        # 0x14006c528
   14005e475:	mov    ecx,edi
   14005e477:	call   rbx
   14005e479:	mov    rcx,QWORD PTR [rsp+0x38]
   14005e47e:	test   rcx,rcx
   14005e481:	je     0x14005e489
   14005e483:	call   QWORD PTR [rip+0xdd0f]        # 0x14006c198
   14005e489:	mov    rbx,QWORD PTR [rsp+0x30]
   14005e48e:	add    rsp,0x20
   14005e492:	pop    rdi
   14005e493:	ret    
   14005e494:	mov    QWORD PTR [rip+0x410bd],rcx        # 0x14009f558
   14005e49b:	ret    
   14005e49c:	mov    edx,0x2
   14005e4a1:	xor    ecx,ecx
   14005e4a3:	lea    r8d,[rdx-0x1]
   14005e4a7:	jmp    0x14005e270
   14005e4ac:	xor    edx,edx
   14005e4ae:	xor    ecx,ecx
   14005e4b0:	lea    r8d,[rdx+0x1]
   14005e4b4:	jmp    0x14005e270
   14005e4b9:	int3   
   14005e4ba:	int3   
   14005e4bb:	int3   
   14005e4bc:	xor    r8d,r8d
   14005e4bf:	lea    edx,[r8+0x2]
   14005e4c3:	jmp    0x14005e270
   14005e4c8:	sub    rsp,0x28
   14005e4cc:	mov    r8,QWORD PTR [rip+0x23a0d]        # 0x140081ee0
   14005e4d3:	mov    rdx,rcx
   14005e4d6:	mov    eax,r8d
   14005e4d9:	mov    ecx,0x40
   14005e4de:	and    eax,0x3f
   14005e4e1:	sub    ecx,eax
   14005e4e3:	xor    eax,eax
   14005e4e5:	ror    rax,cl
   14005e4e8:	xor    rax,r8
   14005e4eb:	cmp    QWORD PTR [rip+0x41066],rax        # 0x14009f558
   14005e4f2:	jne    0x14005e506
   14005e4f4:	ror    rdx,cl
   14005e4f7:	xor    rdx,r8
   14005e4fa:	mov    QWORD PTR [rip+0x41057],rdx        # 0x14009f558
   14005e501:	add    rsp,0x28
   14005e505:	ret    
   14005e506:	call   0x14005f654
   14005e50b:	int3   
   14005e50c:	xor    r8d,r8d
   14005e50f:	xor    edx,edx
   14005e511:	jmp    0x14005e270
   14005e516:	int3   
   14005e517:	int3   
   14005e518:	rex push rbx
   14005e51a:	sub    rsp,0x20
   14005e51e:	mov    rbx,rcx
   14005e521:	xor    eax,eax
   14005e523:	test   rcx,rcx
   14005e526:	setne  al
   14005e529:	test   eax,eax
   14005e52b:	jne    0x14005e541
   14005e52d:	call   0x140060e94
   14005e532:	mov    DWORD PTR [rax],0x16
   14005e538:	call   0x140060d74
   14005e53d:	xor    eax,eax
   14005e53f:	jmp    0x14005e57d
   14005e541:	mov    edx,0x7fff
   14005e546:	call   0x14005f268
   14005e54b:	xor    ecx,ecx
   14005e54d:	cmp    rax,0x7fff
   14005e553:	setb   cl
   14005e556:	test   ecx,ecx
   14005e558:	je     0x14005e52d
   14005e55a:	mov    ecx,0xb
   14005e55f:	call   0x140062874
   14005e564:	nop
   14005e565:	mov    rcx,rbx
   14005e568:	call   0x14005e584
   14005e56d:	mov    rbx,rax
   14005e570:	mov    ecx,0xb
   14005e575:	call   0x1400628c8
   14005e57a:	mov    rax,rbx
   14005e57d:	add    rsp,0x20
   14005e581:	pop    rbx
   14005e582:	ret    
   14005e583:	int3   
   14005e584:	mov    QWORD PTR [rsp+0x8],rbx
   14005e589:	mov    QWORD PTR [rsp+0x10],rsi
   14005e58e:	push   rdi
   14005e58f:	sub    rsp,0x20
   14005e593:	mov    rsi,rcx
   14005e596:	call   0x14005ff20
   14005e59b:	mov    rbx,rax
   14005e59e:	test   rax,rax
   14005e5a1:	je     0x14005e5fa
   14005e5a3:	test   rsi,rsi
   14005e5a6:	je     0x14005e5fa
   14005e5a8:	or     rdi,0xffffffffffffffff
   14005e5ac:	inc    rdi
   14005e5af:	cmp    BYTE PTR [rsi+rdi*1],0x0
   14005e5b3:	jne    0x14005e5ac
   14005e5b5:	cmp    QWORD PTR [rax],0x0
   14005e5b9:	je     0x14005e5fa
   14005e5bb:	mov    rcx,QWORD PTR [rbx]
   14005e5be:	or     rax,0xffffffffffffffff
   14005e5c2:	inc    rax
   14005e5c5:	cmp    BYTE PTR [rcx+rax*1],0x0
   14005e5c9:	jne    0x14005e5c2
   14005e5cb:	cmp    rax,rdi
   14005e5ce:	jbe    0x14005e5e5
   14005e5d0:	cmp    BYTE PTR [rcx+rdi*1],0x3d
   14005e5d4:	jne    0x14005e5e5
   14005e5d6:	mov    r8,rdi
   14005e5d9:	mov    rdx,rsi
   14005e5dc:	call   0x140063020
   14005e5e1:	test   eax,eax
   14005e5e3:	je     0x14005e5ef
   14005e5e5:	add    rbx,0x8
   14005e5e9:	cmp    QWORD PTR [rbx],0x0
   14005e5ed:	jmp    0x14005e5b9
   14005e5ef:	mov    rax,QWORD PTR [rbx]
   14005e5f2:	inc    rax
   14005e5f5:	add    rax,rdi
   14005e5f8:	jmp    0x14005e5fc
   14005e5fa:	xor    eax,eax
   14005e5fc:	mov    rbx,QWORD PTR [rsp+0x30]
   14005e601:	mov    rsi,QWORD PTR [rsp+0x38]
   14005e606:	add    rsp,0x20
   14005e60a:	pop    rdi
   14005e60b:	ret    
   14005e60c:	jmp    0x14005e518
   14005e611:	int3   
   14005e612:	int3   
   14005e613:	int3   
   14005e614:	mov    rax,rsp
   14005e617:	mov    QWORD PTR [rax+0x8],rbx
   14005e61b:	mov    QWORD PTR [rax+0x10],rbp
   14005e61f:	mov    QWORD PTR [rax+0x18],rsi
   14005e623:	mov    QWORD PTR [rax+0x20],rdi
   14005e627:	push   r14
   14005e629:	sub    rsp,0x20
   14005e62d:	mov    eax,DWORD PTR [rip+0x40f35]        # 0x14009f568
   14005e633:	xor    ebx,ebx
   14005e635:	mov    edi,0x3
   14005e63a:	test   eax,eax
   14005e63c:	jne    0x14005e645
   14005e63e:	mov    eax,0x200
   14005e643:	jmp    0x14005e64a
   14005e645:	cmp    eax,edi
   14005e647:	cmovl  eax,edi
   14005e64a:	movsxd rcx,eax
   14005e64d:	mov    edx,0x8
   14005e652:	mov    DWORD PTR [rip+0x40f10],eax        # 0x14009f568
   14005e658:	call   0x140060a6c
   14005e65d:	xor    ecx,ecx
   14005e65f:	mov    QWORD PTR [rip+0x40f0a],rax        # 0x14009f570
   14005e666:	call   0x1400609cc
   14005e66b:	cmp    QWORD PTR [rip+0x40efe],rbx        # 0x14009f570
   14005e672:	jne    0x14005e6a3
   14005e674:	mov    edx,0x8
   14005e679:	mov    DWORD PTR [rip+0x40ee9],edi        # 0x14009f568
   14005e67f:	mov    rcx,rdi
   14005e682:	call   0x140060a6c
   14005e687:	xor    ecx,ecx
   14005e689:	mov    QWORD PTR [rip+0x40ee0],rax        # 0x14009f570
   14005e690:	call   0x1400609cc
   14005e695:	cmp    QWORD PTR [rip+0x40ed4],rbx        # 0x14009f570
   14005e69c:	jne    0x14005e6a3
   14005e69e:	or     eax,0xffffffff
   14005e6a1:	jmp    0x14005e718
   14005e6a3:	mov    r14,rbx
   14005e6a6:	lea    rsi,[rip+0x238db]        # 0x140081f88
   14005e6ad:	lea    rbp,[rip+0x238bc]        # 0x140081f70
   14005e6b4:	lea    rcx,[rbp+0x30]
   14005e6b8:	xor    r8d,r8d
   14005e6bb:	mov    edx,0xfa0
   14005e6c0:	call   0x140062ce4
   14005e6c5:	mov    rax,QWORD PTR [rip+0x40ea4]        # 0x14009f570
   14005e6cc:	lea    rdx,[rip+0x4109d]        # 0x14009f770
   14005e6d3:	mov    rcx,rbx
   14005e6d6:	and    ecx,0x3f
   14005e6d9:	shl    rcx,0x6
   14005e6dd:	mov    QWORD PTR [r14+rax*1],rbp
   14005e6e1:	mov    rax,rbx
   14005e6e4:	sar    rax,0x6
   14005e6e8:	mov    rax,QWORD PTR [rdx+rax*8]
   14005e6ec:	mov    rcx,QWORD PTR [rax+rcx*1+0x28]
   14005e6f1:	add    rcx,0x2
   14005e6f5:	cmp    rcx,0x2
   14005e6f9:	ja     0x14005e701
   14005e6fb:	mov    DWORD PTR [rsi],0xfffffffe
   14005e701:	inc    rbx
   14005e704:	add    rbp,0x58
   14005e708:	add    r14,0x8
   14005e70c:	add    rsi,0x58
   14005e710:	sub    rdi,0x1
   14005e714:	jne    0x14005e6b4
   14005e716:	xor    eax,eax
   14005e718:	mov    rbx,QWORD PTR [rsp+0x30]
   14005e71d:	mov    rbp,QWORD PTR [rsp+0x38]
   14005e722:	mov    rsi,QWORD PTR [rsp+0x40]
   14005e727:	mov    rdi,QWORD PTR [rsp+0x48]
   14005e72c:	add    rsp,0x20
   14005e730:	pop    r14
   14005e732:	ret    
   14005e733:	int3   
   14005e734:	mov    eax,ecx
   14005e736:	lea    rcx,[rip+0x23833]        # 0x140081f70
   14005e73d:	imul   rax,rax,0x58
   14005e741:	add    rax,rcx
   14005e744:	ret    
   14005e745:	int3   
   14005e746:	int3   
   14005e747:	int3   
   14005e748:	rex push rbx
   14005e74a:	sub    rsp,0x20
   14005e74e:	call   0x14005e880
   14005e753:	call   0x140063138
   14005e758:	xor    ebx,ebx
   14005e75a:	mov    rcx,QWORD PTR [rip+0x40e0f]        # 0x14009f570
   14005e761:	mov    rcx,QWORD PTR [rbx+rcx*1]
   14005e765:	call   0x1400631ec
   14005e76a:	mov    rax,QWORD PTR [rip+0x40dff]        # 0x14009f570
   14005e771:	mov    rcx,QWORD PTR [rbx+rax*1]
   14005e775:	add    rcx,0x30
   14005e779:	call   QWORD PTR [rip+0xdaa1]        # 0x14006c220
   14005e77f:	add    rbx,0x8
   14005e783:	cmp    rbx,0x18
   14005e787:	jne    0x14005e75a
   14005e789:	mov    rcx,QWORD PTR [rip+0x40de0]        # 0x14009f570
   14005e790:	call   0x1400609cc
   14005e795:	and    QWORD PTR [rip+0x40dd3],0x0        # 0x14009f570
   14005e79d:	add    rsp,0x20
   14005e7a1:	pop    rbx
   14005e7a2:	ret    
   14005e7a3:	int3   
   14005e7a4:	add    rcx,0x30
   14005e7a8:	rex.W jmp QWORD PTR [rip+0xda61]        # 0x14006c210
   14005e7af:	int3   
   14005e7b0:	add    rcx,0x30
   14005e7b4:	rex.W jmp QWORD PTR [rip+0xda5d]        # 0x14006c218
   14005e7bb:	int3   
   14005e7bc:	mov    QWORD PTR [rsp+0x8],rbx
   14005e7c1:	mov    QWORD PTR [rsp+0x10],rsi
   14005e7c6:	push   rdi
   14005e7c7:	sub    rsp,0x20
   14005e7cb:	mov    rbx,rcx
   14005e7ce:	mov    eax,DWORD PTR [rcx+0x14]
   14005e7d1:	and    al,0x3
   14005e7d3:	cmp    al,0x2
   14005e7d5:	jne    0x14005e821
   14005e7d7:	mov    eax,DWORD PTR [rcx+0x14]
   14005e7da:	test   al,0xc0
   14005e7dc:	je     0x14005e821
   14005e7de:	mov    edi,DWORD PTR [rcx]
   14005e7e0:	sub    edi,DWORD PTR [rcx+0x8]
   14005e7e3:	and    DWORD PTR [rcx+0x10],0x0
   14005e7e7:	mov    rsi,QWORD PTR [rcx+0x8]
   14005e7eb:	mov    QWORD PTR [rcx],rsi
   14005e7ee:	test   edi,edi
   14005e7f0:	jle    0x14005e821
   14005e7f2:	call   0x14005e9b4
   14005e7f7:	mov    ecx,eax
   14005e7f9:	mov    r8d,edi
   14005e7fc:	mov    rdx,rsi
   14005e7ff:	call   0x1400638ec
   14005e804:	cmp    edi,eax
   14005e806:	je     0x14005e812
   14005e808:	lock or DWORD PTR [rbx+0x14],0x10
   14005e80d:	or     eax,0xffffffff
   14005e810:	jmp    0x14005e823
   14005e812:	mov    eax,DWORD PTR [rbx+0x14]
   14005e815:	shr    eax,0x2
   14005e818:	test   al,0x1
   14005e81a:	je     0x14005e821
   14005e81c:	lock and DWORD PTR [rbx+0x14],0xfffffffd
   14005e821:	xor    eax,eax
   14005e823:	mov    rbx,QWORD PTR [rsp+0x30]
   14005e828:	mov    rsi,QWORD PTR [rsp+0x38]
   14005e82d:	add    rsp,0x20
   14005e831:	pop    rdi
   14005e832:	ret    
   14005e833:	int3   
   14005e834:	rex push rbx
   14005e836:	sub    rsp,0x20
   14005e83a:	mov    rbx,rcx
   14005e83d:	test   rcx,rcx
   14005e840:	jne    0x14005e84c
   14005e842:	add    rsp,0x20
   14005e846:	pop    rbx
   14005e847:	jmp    0x14005e88c
   14005e84c:	call   0x14005e7bc
   14005e851:	test   eax,eax
   14005e853:	je     0x14005e85a
   14005e855:	or     eax,0xffffffff
   14005e858:	jmp    0x14005e879
   14005e85a:	mov    eax,DWORD PTR [rbx+0x14]
   14005e85d:	shr    eax,0xb
   14005e860:	test   al,0x1
   14005e862:	je     0x14005e877
   14005e864:	mov    rcx,rbx
   14005e867:	call   0x14005e9b4
   14005e86c:	mov    ecx,eax
   14005e86e:	call   0x1400632b8
   14005e873:	test   eax,eax
   14005e875:	jne    0x14005e855
   14005e877:	xor    eax,eax
   14005e879:	add    rsp,0x20
   14005e87d:	pop    rbx
   14005e87e:	ret    
   14005e87f:	int3   
   14005e880:	mov    ecx,0x1
   14005e885:	jmp    0x14005e88c
   14005e88a:	int3   
   14005e88b:	int3   
   14005e88c:	mov    rax,rsp
   14005e88f:	mov    QWORD PTR [rax+0x8],rbx
   14005e893:	mov    QWORD PTR [rax+0x18],rsi
   14005e897:	push   rdi
   14005e898:	push   r14
   14005e89a:	push   r15
   14005e89c:	sub    rsp,0x40
   14005e8a0:	mov    esi,ecx
   14005e8a2:	and    DWORD PTR [rax-0x34],0x0
   14005e8a6:	and    DWORD PTR [rax-0x38],0x0
   14005e8aa:	mov    ecx,0x8
   14005e8af:	call   0x140062874
   14005e8b4:	nop
   14005e8b5:	mov    rdi,QWORD PTR [rip+0x40cb4]        # 0x14009f570
   14005e8bc:	movsxd rax,DWORD PTR [rip+0x40ca5]        # 0x14009f568
   14005e8c3:	lea    r14,[rdi+rax*8]
   14005e8c7:	or     r15d,0xffffffff
   14005e8cb:	mov    QWORD PTR [rsp+0x28],rdi
   14005e8d0:	cmp    rdi,r14
   14005e8d3:	je     0x14005e946
   14005e8d5:	mov    rbx,QWORD PTR [rdi]
   14005e8d8:	mov    QWORD PTR [rsp+0x68],rbx
   14005e8dd:	mov    QWORD PTR [rsp+0x30],rbx
   14005e8e2:	test   rbx,rbx
   14005e8e5:	jne    0x14005e8e9
   14005e8e7:	jmp    0x14005e940
   14005e8e9:	mov    rcx,rbx
   14005e8ec:	call   0x14005e7a4
   14005e8f1:	nop
   14005e8f2:	mov    eax,DWORD PTR [rbx+0x14]
   14005e8f5:	shr    eax,0xd
   14005e8f8:	test   al,0x1
   14005e8fa:	je     0x14005e938
   14005e8fc:	cmp    esi,0x1
   14005e8ff:	jne    0x14005e914
   14005e901:	mov    rcx,rbx
   14005e904:	call   0x14005e834
   14005e909:	cmp    eax,r15d
   14005e90c:	je     0x14005e938
   14005e90e:	inc    DWORD PTR [rsp+0x24]
   14005e912:	jmp    0x14005e938
   14005e914:	test   esi,esi
   14005e916:	jne    0x14005e938
   14005e918:	mov    eax,DWORD PTR [rbx+0x14]
   14005e91b:	shr    eax,1
   14005e91d:	test   al,0x1
   14005e91f:	je     0x14005e938
   14005e921:	mov    rcx,rbx
   14005e924:	call   0x14005e834
   14005e929:	mov    edx,DWORD PTR [rsp+0x20]
   14005e92d:	cmp    eax,r15d
   14005e930:	cmove  edx,r15d
   14005e934:	mov    DWORD PTR [rsp+0x20],edx
   14005e938:	mov    rcx,rbx
   14005e93b:	call   0x14005e7b0
   14005e940:	add    rdi,0x8
   14005e944:	jmp    0x14005e8cb
   14005e946:	mov    ecx,0x8
   14005e94b:	call   0x1400628c8
   14005e950:	mov    eax,DWORD PTR [rsp+0x20]
   14005e954:	cmp    esi,0x1
   14005e957:	cmove  eax,DWORD PTR [rsp+0x24]
   14005e95c:	mov    rbx,QWORD PTR [rsp+0x60]
   14005e961:	mov    rsi,QWORD PTR [rsp+0x70]
   14005e966:	add    rsp,0x40
   14005e96a:	pop    r15
   14005e96c:	pop    r14
   14005e96e:	pop    rdi
   14005e96f:	ret    
   14005e970:	mov    QWORD PTR [rsp+0x10],rbx
   14005e975:	mov    QWORD PTR [rsp+0x8],rcx
   14005e97a:	push   rdi
   14005e97b:	sub    rsp,0x20
   14005e97f:	mov    rbx,rcx
   14005e982:	test   rcx,rcx
   14005e985:	jne    0x14005e98e
   14005e987:	call   0x14005e88c
   14005e98c:	jmp    0x14005e9a8
   14005e98e:	call   0x14005e7a4
   14005e993:	nop
   14005e994:	mov    rcx,rbx
   14005e997:	call   0x14005e834
   14005e99c:	mov    edi,eax
   14005e99e:	mov    rcx,rbx
   14005e9a1:	call   0x14005e7b0
   14005e9a6:	mov    eax,edi
   14005e9a8:	mov    rbx,QWORD PTR [rsp+0x38]
   14005e9ad:	add    rsp,0x20
   14005e9b1:	pop    rdi
   14005e9b2:	ret    
   14005e9b3:	int3   
   14005e9b4:	sub    rsp,0x28
   14005e9b8:	test   rcx,rcx
   14005e9bb:	jne    0x14005e9d2
   14005e9bd:	call   0x140060e94
   14005e9c2:	mov    DWORD PTR [rax],0x16
   14005e9c8:	call   0x140060d74
   14005e9cd:	or     eax,0xffffffff
   14005e9d0:	jmp    0x14005e9d5
   14005e9d2:	mov    eax,DWORD PTR [rcx+0x18]
   14005e9d5:	add    rsp,0x28
   14005e9d9:	ret    
   14005e9da:	int3   
   14005e9db:	int3   
   14005e9dc:	test   rdx,rdx
   14005e9df:	jne    0x14005e9ea
   14005e9e1:	xor    r9d,r9d
   14005e9e4:	lea    r8d,[rdx+0x4]
   14005e9e8:	jmp    0x14005e9f3
   14005e9ea:	mov    r9d,0x200
   14005e9f0:	xor    r8d,r8d
   14005e9f3:	jmp    0x140063dec
   14005e9f8:	sub    rsp,0x28
   14005e9fc:	lea    eax,[rcx-0x4000]
   14005ea02:	test   eax,0xffff3fff
   14005ea07:	jne    0x14005ea1b
   14005ea09:	cmp    ecx,0xc000
   14005ea0f:	je     0x14005ea1b
   14005ea11:	xchg   DWORD PTR [rip+0x4151d],ecx        # 0x14009ff34
   14005ea17:	xor    eax,eax
   14005ea19:	jmp    0x14005ea30
   14005ea1b:	call   0x140060e94
   14005ea20:	mov    DWORD PTR [rax],0x16
   14005ea26:	call   0x140060d74
   14005ea2b:	mov    eax,0x16
   14005ea30:	add    rsp,0x28
   14005ea34:	ret    
   14005ea35:	int3   
   14005ea36:	int3   
   14005ea37:	int3   
   14005ea38:	mov    QWORD PTR [rsp+0x18],rbx
   14005ea3d:	mov    DWORD PTR [rsp+0x8],ecx
   14005ea41:	push   rsi
   14005ea42:	push   rdi
   14005ea43:	push   r12
   14005ea45:	push   r14
   14005ea47:	push   r15
   14005ea49:	sub    rsp,0x20
   14005ea4d:	mov    esi,edx
   14005ea4f:	movsxd rdi,ecx
   14005ea52:	cmp    edx,0x20000
   14005ea58:	je     0x14005ea8a
   14005ea5a:	cmp    edx,0x10000
   14005ea60:	je     0x14005ea8a
   14005ea62:	cmp    edx,0x8000
   14005ea68:	je     0x14005ea8a
   14005ea6a:	cmp    edx,0x4000
   14005ea70:	je     0x14005ea8a
   14005ea72:	cmp    edx,0x40000
   14005ea78:	je     0x14005ea8a
   14005ea7a:	call   0x140060e94
   14005ea7f:	mov    DWORD PTR [rax],0x16
   14005ea85:	jmp    0x14005eb14
   14005ea8a:	cmp    edi,0xfffffffe
   14005ea8d:	jne    0x14005ea9c
   14005ea8f:	call   0x140060e94
   14005ea94:	mov    DWORD PTR [rax],0x9
   14005ea9a:	jmp    0x14005eb19
   14005ea9c:	test   ecx,ecx
   14005ea9e:	js     0x14005eb09
   14005eaa0:	cmp    edi,DWORD PTR [rip+0x410ca]        # 0x14009fb70
   14005eaa6:	jae    0x14005eb09
   14005eaa8:	mov    r14,rdi
   14005eaab:	mov    r15,rdi
   14005eaae:	sar    r15,0x6
   14005eab2:	lea    r12,[rip+0x40cb7]        # 0x14009f770
   14005eab9:	and    r14d,0x3f
   14005eabd:	shl    r14,0x6
   14005eac1:	mov    rax,QWORD PTR [r12+r15*8]
   14005eac5:	movzx  ecx,BYTE PTR [r14+rax*1+0x38]
   14005eacb:	and    ecx,0x1
   14005eace:	je     0x14005eb09
   14005ead0:	mov    ecx,edi
   14005ead2:	call   0x14006402c
   14005ead7:	or     ebx,0xffffffff
   14005eada:	mov    rax,QWORD PTR [r12+r15*8]
   14005eade:	test   BYTE PTR [r14+rax*1+0x38],0x1
   14005eae4:	jne    0x14005eaf3
   14005eae6:	call   0x140060e94
   14005eaeb:	mov    DWORD PTR [rax],0x9
   14005eaf1:	jmp    0x14005eafe
   14005eaf3:	mov    edx,esi
   14005eaf5:	mov    ecx,edi
   14005eaf7:	call   0x14005eb30
   14005eafc:	mov    ebx,eax
   14005eafe:	mov    ecx,edi
   14005eb00:	call   0x140064050
   14005eb05:	mov    eax,ebx
   14005eb07:	jmp    0x14005eb1c
   14005eb09:	call   0x140060e94
   14005eb0e:	mov    DWORD PTR [rax],0x9
   14005eb14:	call   0x140060d74
   14005eb19:	or     eax,0xffffffff
   14005eb1c:	mov    rbx,QWORD PTR [rsp+0x60]
   14005eb21:	add    rsp,0x20
   14005eb25:	pop    r15
   14005eb27:	pop    r14
   14005eb29:	pop    r12
   14005eb2b:	pop    rdi
   14005eb2c:	pop    rsi
   14005eb2d:	ret    
   14005eb2e:	int3   
   14005eb2f:	int3   
   14005eb30:	mov    QWORD PTR [rsp+0x8],rbx
   14005eb35:	mov    QWORD PTR [rsp+0x10],rdi
   14005eb3a:	mov    QWORD PTR [rsp+0x18],r14
   14005eb3f:	movsxd r8,ecx
   14005eb42:	lea    rdi,[rip+0x40c27]        # 0x14009f770
   14005eb49:	mov    r10,r8
   14005eb4c:	mov    r14d,0x40000
   14005eb52:	sar    r10,0x6
   14005eb56:	and    r8d,0x3f
   14005eb5a:	shl    r8,0x6
   14005eb5e:	mov    r9,QWORD PTR [rdi+r10*8]
   14005eb62:	movzx  ecx,BYTE PTR [r9+r8*1+0x38]
   14005eb68:	mov    r11b,BYTE PTR [r9+r8*1+0x39]
   14005eb6d:	mov    ebx,ecx
   14005eb6f:	and    ebx,0x80
   14005eb75:	cmp    edx,0x4000
   14005eb7b:	je     0x14005ebc9
   14005eb7d:	cmp    edx,0x8000
   14005eb83:	je     0x14005ebbf
   14005eb85:	lea    eax,[rdx-0x10000]
   14005eb8b:	test   eax,0xfffeffff
   14005eb90:	je     0x14005ebab
   14005eb92:	cmp    edx,r14d
   14005eb95:	jne    0x14005ebdb
   14005eb97:	or     cl,0x80
   14005eb9a:	mov    BYTE PTR [r9+r8*1+0x38],cl
   14005eb9f:	mov    rax,QWORD PTR [rdi+r10*8]
   14005eba3:	mov    BYTE PTR [rax+r8*1+0x39],0x1
   14005eba9:	jmp    0x14005ebdb
   14005ebab:	or     cl,0x80
   14005ebae:	mov    BYTE PTR [r9+r8*1+0x38],cl
   14005ebb3:	mov    rax,QWORD PTR [rdi+r10*8]
   14005ebb7:	mov    BYTE PTR [rax+r8*1+0x39],0x2
   14005ebbd:	jmp    0x14005ebdb
   14005ebbf:	and    cl,0x7f
   14005ebc2:	mov    BYTE PTR [r9+r8*1+0x38],cl
   14005ebc7:	jmp    0x14005ebdb
   14005ebc9:	or     cl,0x80
   14005ebcc:	mov    BYTE PTR [r9+r8*1+0x38],cl
   14005ebd1:	mov    rcx,QWORD PTR [rdi+r10*8]
   14005ebd5:	mov    BYTE PTR [rcx+r8*1+0x39],0x0
   14005ebdb:	test   ebx,ebx
   14005ebdd:	jne    0x14005ebe6
   14005ebdf:	mov    eax,0x8000
   14005ebe4:	jmp    0x14005ebff
   14005ebe6:	test   r11b,r11b
   14005ebe9:	jne    0x14005ebf2
   14005ebeb:	mov    eax,0x4000
   14005ebf0:	jmp    0x14005ebff
   14005ebf2:	cmp    r11b,0x1
   14005ebf6:	mov    eax,0x10000
   14005ebfb:	cmove  eax,r14d
   14005ebff:	mov    rbx,QWORD PTR [rsp+0x8]
   14005ec04:	mov    rdi,QWORD PTR [rsp+0x10]
   14005ec09:	mov    r14,QWORD PTR [rsp+0x18]
   14005ec0e:	ret    
   14005ec0f:	int3   
   14005ec10:	sub    rsp,0x28
   14005ec14:	lea    rcx,[rsp+0x30]
   14005ec19:	call   QWORD PTR [rip+0xd831]        # 0x14006c450
   14005ec1f:	test   eax,eax
   14005ec21:	je     0x14005ec4a
   14005ec23:	lea    rcx,[rsp+0x38]
   14005ec28:	call   QWORD PTR [rip+0xd7aa]        # 0x14006c3d8
   14005ec2e:	test   eax,eax
   14005ec30:	je     0x14005ec4a
   14005ec32:	mov    rax,QWORD PTR [rsp+0x30]
   14005ec37:	test   rax,rax
   14005ec3a:	je     0x14005ec4a
   14005ec3c:	mov    QWORD PTR [rip+0x4093d],rax        # 0x14009f580
   14005ec43:	mov    rax,QWORD PTR [rsp+0x38]
   14005ec48:	jmp    0x14005ec55
   14005ec4a:	or     rax,0xffffffffffffffff
   14005ec4e:	mov    QWORD PTR [rip+0x4092b],rax        # 0x14009f580
   14005ec55:	mov    QWORD PTR [rip+0x4092c],rax        # 0x14009f588
   14005ec5c:	xor    eax,eax
   14005ec5e:	add    rsp,0x28
   14005ec62:	ret    
   14005ec63:	int3   
   14005ec64:	rex push rbx
   14005ec66:	sub    rsp,0x20
   14005ec6a:	or     rbx,0xffffffffffffffff
   14005ec6e:	cmp    QWORD PTR [rip+0x40913],rbx        # 0x14009f588
   14005ec75:	jne    0x14005ec7b
   14005ec77:	mov    eax,ebx
   14005ec79:	jmp    0x14005ecc7
   14005ec7b:	lea    rcx,[rsp+0x30]
   14005ec80:	call   QWORD PTR [rip+0xd752]        # 0x14006c3d8
   14005ec86:	test   eax,eax
   14005ec88:	je     0x14005ec77
   14005ec8a:	mov    rax,QWORD PTR [rsp+0x30]
   14005ec8f:	sub    rax,QWORD PTR [rip+0x408f2]        # 0x14009f588
   14005ec96:	js     0x14005ec77
   14005ec98:	cqo    
   14005ec9a:	idiv   QWORD PTR [rip+0x408df]        # 0x14009f580
   14005eca1:	mov    rcx,rax
   14005eca4:	imul   rax,rdx,0x3e8
   14005ecab:	imul   rcx,rcx,0x3e8
   14005ecb2:	cqo    
   14005ecb4:	idiv   QWORD PTR [rip+0x408c5]        # 0x14009f580
   14005ecbb:	add    rax,rcx
   14005ecbe:	cmp    rax,0x7fffffff
   14005ecc4:	cmovg  eax,ebx
   14005ecc7:	add    rsp,0x20
   14005eccb:	pop    rbx
   14005eccc:	ret    
   14005eccd:	int3   
   14005ecce:	int3   
   14005eccf:	int3   
   14005ecd0:	test   r8,r8
   14005ecd3:	jne    0x14005eced
   14005ecd5:	xor    eax,eax
   14005ecd7:	ret    
   14005ecd8:	movzx  eax,WORD PTR [rcx]
   14005ecdb:	test   ax,ax
   14005ecde:	je     0x14005ecf3
   14005ece0:	cmp    ax,WORD PTR [rdx]
   14005ece3:	jne    0x14005ecf3
   14005ece5:	add    rcx,0x2
   14005ece9:	add    rdx,0x2
   14005eced:	sub    r8,0x1
   14005ecf1:	jne    0x14005ecd8
   14005ecf3:	movzx  eax,WORD PTR [rcx]
   14005ecf6:	movzx  ecx,WORD PTR [rdx]
   14005ecf9:	sub    eax,ecx
   14005ecfb:	ret    
   14005ecfc:	mov    QWORD PTR [rsp+0x8],rbx
   14005ed01:	push   rdi
   14005ed02:	sub    rsp,0x20
   14005ed06:	movsxd rdi,ecx
   14005ed09:	test   rdx,rdx
   14005ed0c:	je     0x14005ed2d
   14005ed0e:	mov    rax,QWORD PTR [rdx]
   14005ed11:	cmp    DWORD PTR [rax+0x8],0x1
   14005ed15:	jle    0x14005ed28
   14005ed17:	mov    r8,rdx
   14005ed1a:	mov    ecx,edi
   14005ed1c:	mov    edx,0x2
   14005ed21:	call   0x14006271c
   14005ed26:	jmp    0x14005ed39
   14005ed28:	mov    rax,QWORD PTR [rax]
   14005ed2b:	jmp    0x14005ed32
   14005ed2d:	call   0x14006267c
   14005ed32:	movzx  eax,WORD PTR [rax+rdi*2]
   14005ed36:	and    eax,0x2
   14005ed39:	mov    rbx,QWORD PTR [rsp+0x30]
   14005ed3e:	test   eax,eax
   14005ed40:	setne  al
   14005ed43:	add    rsp,0x20
   14005ed47:	pop    rdi
   14005ed48:	ret    
   14005ed49:	int3   
   14005ed4a:	int3   
   14005ed4b:	int3   
   14005ed4c:	mov    QWORD PTR [rsp+0x8],rbx
   14005ed51:	push   rdi
   14005ed52:	sub    rsp,0x20
   14005ed56:	movsxd rdi,ecx
   14005ed59:	test   rdx,rdx
   14005ed5c:	je     0x14005ed7d
   14005ed5e:	mov    rax,QWORD PTR [rdx]
   14005ed61:	cmp    DWORD PTR [rax+0x8],0x1
   14005ed65:	jle    0x14005ed78
   14005ed67:	mov    r8,rdx
   14005ed6a:	mov    ecx,edi
   14005ed6c:	mov    edx,0x1
   14005ed71:	call   0x14006271c
   14005ed76:	jmp    0x14005ed89
   14005ed78:	mov    rax,QWORD PTR [rax]
   14005ed7b:	jmp    0x14005ed82
   14005ed7d:	call   0x14006267c
   14005ed82:	movzx  eax,WORD PTR [rax+rdi*2]
   14005ed86:	and    eax,0x1
   14005ed89:	mov    rbx,QWORD PTR [rsp+0x30]
   14005ed8e:	test   eax,eax
   14005ed90:	setne  al
   14005ed93:	add    rsp,0x20
   14005ed97:	pop    rdi
   14005ed98:	ret    
   14005ed99:	int3   
   14005ed9a:	int3   
   14005ed9b:	int3   
   14005ed9c:	mov    QWORD PTR [rsp+0x10],rbx
   14005eda1:	mov    QWORD PTR [rsp+0x20],rsi
   14005eda6:	push   rbp
   14005eda7:	mov    rbp,rsp
   14005edaa:	sub    rsp,0x70
   14005edae:	movsxd rbx,ecx
   14005edb1:	lea    rcx,[rbp-0x20]
   14005edb5:	call   0x14005b174
   14005edba:	cmp    ebx,0x100
   14005edc0:	jae    0x14005edfa
   14005edc2:	lea    rdx,[rbp-0x18]
   14005edc6:	mov    ecx,ebx
   14005edc8:	call   0x14005ed4c
   14005edcd:	test   al,al
   14005edcf:	je     0x14005ede0
   14005edd1:	mov    rax,QWORD PTR [rbp-0x18]
   14005edd5:	mov    rcx,QWORD PTR [rax+0x110]
   14005eddc:	movzx  ebx,BYTE PTR [rcx+rbx*1]
   14005ede0:	cmp    BYTE PTR [rbp-0x8],0x0
   14005ede4:	je     0x14005eec6
   14005edea:	mov    rax,QWORD PTR [rbp-0x20]
   14005edee:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   14005edf5:	jmp    0x14005eec6
   14005edfa:	xor    eax,eax
   14005edfc:	mov    WORD PTR [rbp+0x10],ax
   14005ee00:	mov    BYTE PTR [rbp+0x12],al
   14005ee03:	mov    rax,QWORD PTR [rbp-0x18]
   14005ee07:	cmp    DWORD PTR [rax+0x8],0x1
   14005ee0b:	jle    0x14005ee35
   14005ee0d:	mov    esi,ebx
   14005ee0f:	lea    rdx,[rbp-0x18]
   14005ee13:	sar    esi,0x8
   14005ee16:	movzx  ecx,sil
   14005ee1a:	call   0x1400641a8
   14005ee1f:	test   eax,eax
   14005ee21:	je     0x14005ee35
   14005ee23:	mov    BYTE PTR [rbp+0x10],sil
   14005ee27:	mov    ecx,0x2
   14005ee2c:	mov    BYTE PTR [rbp+0x11],bl
   14005ee2f:	mov    BYTE PTR [rbp+0x12],0x0
   14005ee33:	jmp    0x14005ee4c
   14005ee35:	call   0x140060e94
   14005ee3a:	mov    ecx,0x1
   14005ee3f:	mov    DWORD PTR [rax],0x2a
   14005ee45:	mov    BYTE PTR [rbp+0x10],bl
   14005ee48:	mov    BYTE PTR [rbp+0x11],0x0
   14005ee4c:	mov    rdx,QWORD PTR [rbp-0x18]
   14005ee50:	lea    r9,[rbp+0x10]
   14005ee54:	xor    eax,eax
   14005ee56:	mov    DWORD PTR [rsp+0x40],0x1
   14005ee5e:	mov    WORD PTR [rbp+0x20],ax
   14005ee62:	mov    r8d,0x100
   14005ee68:	mov    BYTE PTR [rbp+0x22],al
   14005ee6b:	mov    eax,DWORD PTR [rdx+0xc]
   14005ee6e:	mov    rdx,QWORD PTR [rdx+0x138]
   14005ee75:	mov    DWORD PTR [rsp+0x38],eax
   14005ee79:	lea    rax,[rbp+0x20]
   14005ee7d:	mov    DWORD PTR [rsp+0x30],0x3
   14005ee85:	mov    QWORD PTR [rsp+0x28],rax
   14005ee8a:	mov    DWORD PTR [rsp+0x20],ecx
   14005ee8e:	lea    rcx,[rbp-0x18]
   14005ee92:	call   0x140064544
   14005ee97:	test   eax,eax
   14005ee99:	je     0x14005ede0
   14005ee9f:	movzx  ebx,BYTE PTR [rbp+0x20]
   14005eea3:	cmp    eax,0x1
   14005eea6:	je     0x14005ede0
   14005eeac:	movzx  ecx,BYTE PTR [rbp+0x21]
   14005eeb0:	shl    ebx,0x8
   14005eeb3:	or     ebx,ecx
   14005eeb5:	cmp    BYTE PTR [rbp-0x8],0x0
   14005eeb9:	je     0x14005eec6
   14005eebb:	mov    rcx,QWORD PTR [rbp-0x20]
   14005eebf:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   14005eec6:	lea    r11,[rsp+0x70]
   14005eecb:	mov    eax,ebx
   14005eecd:	mov    rbx,QWORD PTR [r11+0x18]
   14005eed1:	mov    rsi,QWORD PTR [r11+0x28]
   14005eed5:	mov    rsp,r11
   14005eed8:	pop    rbp
   14005eed9:	ret    
   14005eeda:	int3   
   14005eedb:	int3   
   14005eedc:	mov    QWORD PTR [rsp+0x10],rbx
   14005eee1:	mov    QWORD PTR [rsp+0x20],rsi
   14005eee6:	push   rbp
   14005eee7:	mov    rbp,rsp
   14005eeea:	sub    rsp,0x70
   14005eeee:	movsxd rbx,ecx
   14005eef1:	lea    rcx,[rbp-0x20]
   14005eef5:	call   0x14005b174
   14005eefa:	cmp    ebx,0x100
   14005ef00:	jae    0x14005ef3a
   14005ef02:	lea    rdx,[rbp-0x18]
   14005ef06:	mov    ecx,ebx
   14005ef08:	call   0x14005ecfc
   14005ef0d:	test   al,al
   14005ef0f:	je     0x14005ef20
   14005ef11:	mov    rax,QWORD PTR [rbp-0x18]
   14005ef15:	mov    rcx,QWORD PTR [rax+0x118]
   14005ef1c:	movzx  ebx,BYTE PTR [rcx+rbx*1]
   14005ef20:	cmp    BYTE PTR [rbp-0x8],0x0
   14005ef24:	je     0x14005f006
   14005ef2a:	mov    rax,QWORD PTR [rbp-0x20]
   14005ef2e:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   14005ef35:	jmp    0x14005f006
   14005ef3a:	xor    eax,eax
   14005ef3c:	mov    WORD PTR [rbp+0x10],ax
   14005ef40:	mov    BYTE PTR [rbp+0x12],al
   14005ef43:	mov    rax,QWORD PTR [rbp-0x18]
   14005ef47:	cmp    DWORD PTR [rax+0x8],0x1
   14005ef4b:	jle    0x14005ef75
   14005ef4d:	mov    esi,ebx
   14005ef4f:	lea    rdx,[rbp-0x18]
   14005ef53:	sar    esi,0x8
   14005ef56:	movzx  ecx,sil
   14005ef5a:	call   0x1400641a8
   14005ef5f:	test   eax,eax
   14005ef61:	je     0x14005ef75
   14005ef63:	mov    BYTE PTR [rbp+0x10],sil
   14005ef67:	mov    ecx,0x2
   14005ef6c:	mov    BYTE PTR [rbp+0x11],bl
   14005ef6f:	mov    BYTE PTR [rbp+0x12],0x0
   14005ef73:	jmp    0x14005ef8c
   14005ef75:	call   0x140060e94
   14005ef7a:	mov    ecx,0x1
   14005ef7f:	mov    DWORD PTR [rax],0x2a
   14005ef85:	mov    BYTE PTR [rbp+0x10],bl
   14005ef88:	mov    BYTE PTR [rbp+0x11],0x0
   14005ef8c:	mov    rdx,QWORD PTR [rbp-0x18]
   14005ef90:	lea    r9,[rbp+0x10]
   14005ef94:	xor    eax,eax
   14005ef96:	mov    DWORD PTR [rsp+0x40],0x1
   14005ef9e:	mov    WORD PTR [rbp+0x20],ax
   14005efa2:	mov    r8d,0x200
   14005efa8:	mov    BYTE PTR [rbp+0x22],al
   14005efab:	mov    eax,DWORD PTR [rdx+0xc]
   14005efae:	mov    rdx,QWORD PTR [rdx+0x138]
   14005efb5:	mov    DWORD PTR [rsp+0x38],eax
   14005efb9:	lea    rax,[rbp+0x20]
   14005efbd:	mov    DWORD PTR [rsp+0x30],0x3
   14005efc5:	mov    QWORD PTR [rsp+0x28],rax
   14005efca:	mov    DWORD PTR [rsp+0x20],ecx
   14005efce:	lea    rcx,[rbp-0x18]
   14005efd2:	call   0x140064544
   14005efd7:	test   eax,eax
   14005efd9:	je     0x14005ef20
   14005efdf:	movzx  ebx,BYTE PTR [rbp+0x20]
   14005efe3:	cmp    eax,0x1
   14005efe6:	je     0x14005ef20
   14005efec:	movzx  ecx,BYTE PTR [rbp+0x21]
   14005eff0:	shl    ebx,0x8
   14005eff3:	or     ebx,ecx
   14005eff5:	cmp    BYTE PTR [rbp-0x8],0x0
   14005eff9:	je     0x14005f006
   14005effb:	mov    rcx,QWORD PTR [rbp-0x20]
   14005efff:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   14005f006:	lea    r11,[rsp+0x70]
   14005f00b:	mov    eax,ebx
   14005f00d:	mov    rbx,QWORD PTR [r11+0x18]
   14005f011:	mov    rsi,QWORD PTR [r11+0x28]
   14005f015:	mov    rsp,r11
   14005f018:	pop    rbp
   14005f019:	ret    
   14005f01a:	int3   
   14005f01b:	int3   
   14005f01c:	sub    rsp,0x28
   14005f020:	mov    eax,DWORD PTR [rip+0x40712]        # 0x14009f738
   14005f026:	test   eax,eax
   14005f028:	je     0x14005f035
   14005f02a:	xor    edx,edx
   14005f02c:	call   0x14005ed9c
   14005f031:	mov    ecx,eax
   14005f033:	jmp    0x14005f040
   14005f035:	lea    eax,[rcx-0x41]
   14005f038:	cmp    eax,0x19
   14005f03b:	ja     0x14005f040
   14005f03d:	add    ecx,0x20
   14005f040:	mov    eax,ecx
   14005f042:	add    rsp,0x28
   14005f046:	ret    
   14005f047:	int3   
   14005f048:	sub    rsp,0x28
   14005f04c:	mov    eax,DWORD PTR [rip+0x406e6]        # 0x14009f738
   14005f052:	test   eax,eax
   14005f054:	je     0x14005f061
   14005f056:	xor    edx,edx
   14005f058:	call   0x14005eedc
   14005f05d:	mov    ecx,eax
   14005f05f:	jmp    0x14005f06c
   14005f061:	lea    eax,[rcx-0x61]
   14005f064:	cmp    eax,0x19
   14005f067:	ja     0x14005f06c
   14005f069:	add    ecx,0xffffffe0
   14005f06c:	mov    eax,ecx
   14005f06e:	add    rsp,0x28
   14005f072:	ret    
   14005f073:	int3   
   14005f074:	xor    r11d,r11d
   14005f077:	mov    r10,rdx
   14005f07a:	mov    r9,rcx
   14005f07d:	cmp    WORD PTR [rcx],r11w
   14005f081:	je     0x14005f08d
   14005f083:	add    r9,0x2
   14005f087:	cmp    WORD PTR [r9],r11w
   14005f08b:	jne    0x14005f083
   14005f08d:	mov    rdx,r11
   14005f090:	test   r8,r8
   14005f093:	je     0x14005f0b2
   14005f095:	sub    r10,r9
   14005f098:	movzx  eax,WORD PTR [r10+r9*1]
   14005f09d:	mov    WORD PTR [r9],ax
   14005f0a1:	add    r9,0x2
   14005f0a5:	test   ax,ax
   14005f0a8:	je     0x14005f0b6
   14005f0aa:	inc    rdx
   14005f0ad:	cmp    rdx,r8
   14005f0b0:	jne    0x14005f098
   14005f0b2:	mov    WORD PTR [r9],r11w
   14005f0b6:	mov    rax,rcx
   14005f0b9:	ret    
   14005f0ba:	int3   
   14005f0bb:	int3   
   14005f0bc:	int3   
   14005f0bd:	int3   
   14005f0be:	int3   
   14005f0bf:	int3   
   14005f0c0:	int3   
   14005f0c1:	int3   
   14005f0c2:	int3   
   14005f0c3:	int3   
   14005f0c4:	int3   
   14005f0c5:	int3   
   14005f0c6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14005f0d0:	mov    r11,rcx
   14005f0d3:	or     r8,r8
   14005f0d6:	je     0x14005f18b
   14005f0dc:	test   cl,0x7
   14005f0df:	je     0x14005f0f0
   14005f0e1:	mov    al,BYTE PTR [rcx]
   14005f0e3:	test   al,al
   14005f0e5:	je     0x14005f166
   14005f0e7:	inc    rcx
   14005f0ea:	test   cl,0x7
   14005f0ed:	jne    0x14005f0e1
   14005f0ef:	nop
   14005f0f0:	mov    rax,QWORD PTR [rcx]
   14005f0f3:	mov    r10,rax
   14005f0f6:	movabs r9,0x7efefefefefefeff
   14005f100:	add    r9,r10
   14005f103:	xor    r10,0xffffffffffffffff
   14005f107:	xor    r10,r9
   14005f10a:	add    rcx,0x8
   14005f10e:	movabs r9,0x8101010101010100
   14005f118:	test   r9,r10
   14005f11b:	je     0x14005f0f0
   14005f11d:	sub    rcx,0x8
   14005f121:	test   al,al
   14005f123:	je     0x14005f166
   14005f125:	inc    rcx
   14005f128:	test   ah,ah
   14005f12a:	je     0x14005f166
   14005f12c:	inc    rcx
   14005f12f:	shr    rax,0x10
   14005f133:	test   al,al
   14005f135:	je     0x14005f166
   14005f137:	inc    rcx
   14005f13a:	test   ah,ah
   14005f13c:	je     0x14005f166
   14005f13e:	inc    rcx
   14005f141:	shr    rax,0x10
   14005f145:	test   al,al
   14005f147:	je     0x14005f166
   14005f149:	inc    rcx
   14005f14c:	test   ah,ah
   14005f14e:	je     0x14005f166
   14005f150:	inc    rcx
   14005f153:	shr    eax,0x10
   14005f156:	test   al,al
   14005f158:	je     0x14005f166
   14005f15a:	inc    rcx
   14005f15d:	test   ah,ah
   14005f15f:	je     0x14005f166
   14005f161:	inc    rcx
   14005f164:	jmp    0x14005f0f0
   14005f166:	sub    rcx,rdx
   14005f169:	test   dl,0x7
   14005f16c:	je     0x14005f198
   14005f16e:	mov    al,BYTE PTR [rdx]
   14005f170:	mov    BYTE PTR [rcx+rdx*1],al
   14005f173:	test   al,al
   14005f175:	je     0x14005f18b
   14005f177:	inc    rdx
   14005f17a:	dec    r8
   14005f17d:	je     0x14005f186
   14005f17f:	test   dl,0x7
   14005f182:	jne    0x14005f16e
   14005f184:	jmp    0x14005f198
   14005f186:	xor    al,al
   14005f188:	mov    BYTE PTR [rcx+rdx*1],al
   14005f18b:	mov    rax,r11
   14005f18e:	ret    
   14005f18f:	nop
   14005f190:	mov    QWORD PTR [rcx+rdx*1],rax
   14005f194:	add    rdx,0x8
   14005f198:	mov    rax,QWORD PTR [rdx]
   14005f19b:	sub    r8,0x8
   14005f19f:	jbe    0x14005f1c7
   14005f1a1:	movabs r9,0x7efefefefefefeff
   14005f1ab:	add    r9,rax
   14005f1ae:	mov    r10,rax
   14005f1b1:	xor    r10,0xffffffffffffffff
   14005f1b5:	xor    r10,r9
   14005f1b8:	movabs r9,0x8101010101010100
   14005f1c2:	test   r9,r10
   14005f1c5:	je     0x14005f190
   14005f1c7:	add    r8,0x8
   14005f1cb:	je     0x14005f25c
   14005f1d1:	test   al,al
   14005f1d3:	mov    BYTE PTR [rcx+rdx*1],al
   14005f1d6:	je     0x14005f261
   14005f1dc:	inc    rdx
   14005f1df:	dec    r8
   14005f1e2:	je     0x14005f25c
   14005f1e4:	test   ah,ah
   14005f1e6:	mov    BYTE PTR [rcx+rdx*1],ah
   14005f1e9:	je     0x14005f261
   14005f1eb:	inc    rdx
   14005f1ee:	dec    r8
   14005f1f1:	je     0x14005f25c
   14005f1f3:	shr    rax,0x10
   14005f1f7:	test   al,al
   14005f1f9:	mov    BYTE PTR [rcx+rdx*1],al
   14005f1fc:	je     0x14005f261
   14005f1fe:	inc    rdx
   14005f201:	dec    r8
   14005f204:	je     0x14005f25c
   14005f206:	test   ah,ah
   14005f208:	mov    BYTE PTR [rcx+rdx*1],ah
   14005f20b:	je     0x14005f261
   14005f20d:	inc    rdx
   14005f210:	dec    r8
   14005f213:	je     0x14005f25c
   14005f215:	shr    rax,0x10
   14005f219:	test   al,al
   14005f21b:	mov    BYTE PTR [rcx+rdx*1],al
   14005f21e:	je     0x14005f261
   14005f220:	inc    rdx
   14005f223:	dec    r8
   14005f226:	je     0x14005f25c
   14005f228:	test   ah,ah
   14005f22a:	mov    BYTE PTR [rcx+rdx*1],ah
   14005f22d:	je     0x14005f261
   14005f22f:	inc    rdx
   14005f232:	dec    r8
   14005f235:	je     0x14005f25c
   14005f237:	shr    eax,0x10
   14005f23a:	test   al,al
   14005f23c:	mov    BYTE PTR [rcx+rdx*1],al
   14005f23f:	je     0x14005f261
   14005f241:	inc    rdx
   14005f244:	dec    r8
   14005f247:	je     0x14005f25c
   14005f249:	test   ah,ah
   14005f24b:	mov    BYTE PTR [rcx+rdx*1],ah
   14005f24e:	je     0x14005f261
   14005f250:	inc    rdx
   14005f253:	dec    r8
   14005f256:	jne    0x14005f198
   14005f25c:	xor    al,al
   14005f25e:	mov    BYTE PTR [rcx+rdx*1],al
   14005f261:	mov    rax,r11
   14005f264:	ret    
   14005f265:	int3   
   14005f266:	int3   
   14005f267:	int3   
   14005f268:	rex push rbp
   14005f26a:	sub    rsp,0x20
   14005f26e:	lea    rbp,[rsp+0x20]
   14005f273:	and    rbp,0xffffffffffffffe0
   14005f277:	mov    eax,DWORD PTR [rip+0x22c7b]        # 0x140081ef8
   14005f27d:	mov    r9,rcx
   14005f280:	cmp    eax,0x5
   14005f283:	jl     0x14005f315
   14005f289:	mov    r8,rcx
   14005f28c:	mov    eax,0x20
   14005f291:	and    r8d,0x1f
   14005f295:	sub    rax,r8
   14005f298:	neg    r8
   14005f29b:	sbb    r10,r10
   14005f29e:	and    r10,rax
   14005f2a1:	cmp    rdx,r10
   14005f2a4:	cmovb  r10,rdx
   14005f2a8:	lea    rax,[r10+rcx*1]
   14005f2ac:	jmp    0x14005f2b6
   14005f2ae:	cmp    BYTE PTR [rcx],0x0
   14005f2b1:	je     0x14005f2bb
   14005f2b3:	inc    rcx
   14005f2b6:	cmp    rcx,rax
   14005f2b9:	jne    0x14005f2ae
   14005f2bb:	sub    rcx,r9
   14005f2be:	cmp    rcx,r10
   14005f2c1:	jne    0x14005f3b8
   14005f2c7:	mov    r8,rdx
   14005f2ca:	add    rcx,r9
   14005f2cd:	sub    r8,r10
   14005f2d0:	mov    rax,r8
   14005f2d3:	and    eax,0x1f
   14005f2d6:	sub    r8,rax
   14005f2d9:	add    r8,rcx
   14005f2dc:	vxorps ymm2,ymm2,ymm2
   14005f2e0:	jmp    0x14005f2f2
   14005f2e2:	vpcmpeqb ymm1,ymm2,YMMWORD PTR [rcx]
   14005f2e6:	vpmovmskb eax,ymm1
   14005f2ea:	test   eax,eax
   14005f2ec:	jne    0x14005f2f7
   14005f2ee:	add    rcx,0x20
   14005f2f2:	cmp    rcx,r8
   14005f2f5:	jne    0x14005f2e2
   14005f2f7:	lea    rax,[r9+rdx*1]
   14005f2fb:	jmp    0x14005f305
   14005f2fd:	cmp    BYTE PTR [rcx],0x0
   14005f300:	je     0x14005f30a
   14005f302:	inc    rcx
   14005f305:	cmp    rcx,rax
   14005f308:	jne    0x14005f2fd
   14005f30a:	sub    rcx,r9
   14005f30d:	vzeroupper 
   14005f310:	jmp    0x14005f3b8
   14005f315:	cmp    eax,0x1
   14005f318:	jl     0x14005f3a2
   14005f31e:	and    ecx,0xf
   14005f321:	mov    eax,0x10
   14005f326:	sub    rax,rcx
   14005f329:	neg    rcx
   14005f32c:	mov    rcx,r9
   14005f32f:	sbb    r10,r10
   14005f332:	and    r10,rax
   14005f335:	cmp    rdx,r10
   14005f338:	cmovb  r10,rdx
   14005f33c:	lea    rax,[r10+r9*1]
   14005f340:	cmp    r9,rax
   14005f343:	je     0x14005f352
   14005f345:	cmp    BYTE PTR [rcx],0x0
   14005f348:	je     0x14005f352
   14005f34a:	inc    rcx
   14005f34d:	cmp    rcx,rax
   14005f350:	jne    0x14005f345
   14005f352:	sub    rcx,r9
   14005f355:	cmp    rcx,r10
   14005f358:	jne    0x14005f3b8
   14005f35a:	mov    r8,rdx
   14005f35d:	add    rcx,r9
   14005f360:	sub    r8,r10
   14005f363:	xorps  xmm1,xmm1
   14005f366:	mov    rax,r8
   14005f369:	and    eax,0xf
   14005f36c:	sub    r8,rax
   14005f36f:	add    r8,rcx
   14005f372:	jmp    0x14005f388
   14005f374:	movdqa xmm0,xmm1
   14005f378:	pcmpeqb xmm0,XMMWORD PTR [rcx]
   14005f37c:	pmovmskb eax,xmm0
   14005f380:	test   eax,eax
   14005f382:	jne    0x14005f38d
   14005f384:	add    rcx,0x10
   14005f388:	cmp    rcx,r8
   14005f38b:	jne    0x14005f374
   14005f38d:	lea    rax,[r9+rdx*1]
   14005f391:	jmp    0x14005f39b
   14005f393:	cmp    BYTE PTR [rcx],0x0
   14005f396:	je     0x14005f3b5
   14005f398:	inc    rcx
   14005f39b:	cmp    rcx,rax
   14005f39e:	jne    0x14005f393
   14005f3a0:	jmp    0x14005f3b5
   14005f3a2:	lea    rax,[rcx+rdx*1]
   14005f3a6:	jmp    0x14005f3b0
   14005f3a8:	cmp    BYTE PTR [rcx],0x0
   14005f3ab:	je     0x14005f3b5
   14005f3ad:	inc    rcx
   14005f3b0:	cmp    rcx,rax
   14005f3b3:	jne    0x14005f3a8
   14005f3b5:	sub    rcx,r9
   14005f3b8:	mov    rax,rcx
   14005f3bb:	add    rsp,0x20
   14005f3bf:	pop    rbp
   14005f3c0:	ret    
   14005f3c1:	int3   
   14005f3c2:	int3   
   14005f3c3:	int3   
   14005f3c4:	rex push rbp
   14005f3c6:	sub    rsp,0x20
   14005f3ca:	lea    rbp,[rsp+0x20]
   14005f3cf:	and    rbp,0xffffffffffffffe0
   14005f3d3:	mov    eax,DWORD PTR [rip+0x22b1f]        # 0x140081ef8
   14005f3d9:	mov    r10,rdx
   14005f3dc:	mov    r8,rcx
   14005f3df:	cmp    eax,0x5
   14005f3e2:	jl     0x14005f4b8
   14005f3e8:	test   cl,0x1
   14005f3eb:	je     0x14005f418
   14005f3ed:	lea    rax,[rcx+rdx*2]
   14005f3f1:	mov    rdx,rcx
   14005f3f4:	cmp    rcx,rax
   14005f3f7:	je     0x14005f5a5
   14005f3fd:	xor    r9d,r9d
   14005f400:	cmp    WORD PTR [rdx],r9w
   14005f404:	je     0x14005f5a5
   14005f40a:	add    rdx,0x2
   14005f40e:	cmp    rdx,rax
   14005f411:	jne    0x14005f400
   14005f413:	jmp    0x14005f5a5
   14005f418:	and    ecx,0x1f
   14005f41b:	mov    eax,0x20
   14005f420:	sub    rax,rcx
   14005f423:	neg    rcx
   14005f426:	sbb    r11,r11
   14005f429:	and    r11,rax
   14005f42c:	shr    r11,1
   14005f42f:	cmp    rdx,r11
   14005f432:	cmovb  r11,rdx
   14005f436:	xor    r9d,r9d
   14005f439:	mov    rdx,r8
   14005f43c:	lea    rax,[r8+r11*2]
   14005f440:	cmp    r8,rax
   14005f443:	je     0x14005f454
   14005f445:	cmp    WORD PTR [rdx],r9w
   14005f449:	je     0x14005f454
   14005f44b:	add    rdx,0x2
   14005f44f:	cmp    rdx,rax
   14005f452:	jne    0x14005f445
   14005f454:	sub    rdx,r8
   14005f457:	sar    rdx,1
   14005f45a:	cmp    rdx,r11
   14005f45d:	jne    0x14005f5ab
   14005f463:	mov    rcx,r10
   14005f466:	lea    rdx,[r8+rdx*2]
   14005f46a:	sub    rcx,r11
   14005f46d:	mov    rax,rcx
   14005f470:	and    eax,0x1f
   14005f473:	sub    rcx,rax
   14005f476:	vxorps ymm2,ymm2,ymm2
   14005f47a:	lea    r11,[rdx+rcx*2]
   14005f47e:	jmp    0x14005f490
   14005f480:	vpcmpeqw ymm1,ymm2,YMMWORD PTR [rdx]
   14005f484:	vpmovmskb eax,ymm1
   14005f488:	test   eax,eax
   14005f48a:	jne    0x14005f495
   14005f48c:	add    rdx,0x20
   14005f490:	cmp    rdx,r11
   14005f493:	jne    0x14005f480
   14005f495:	lea    rax,[r8+r10*2]
   14005f499:	jmp    0x14005f4a5
   14005f49b:	cmp    WORD PTR [rdx],r9w
   14005f49f:	je     0x14005f4aa
   14005f4a1:	add    rdx,0x2
   14005f4a5:	cmp    rdx,rax
   14005f4a8:	jne    0x14005f49b
   14005f4aa:	sub    rdx,r8
   14005f4ad:	sar    rdx,1
   14005f4b0:	vzeroupper 
   14005f4b3:	jmp    0x14005f5ab
   14005f4b8:	cmp    eax,0x1
   14005f4bb:	jl     0x14005f587
   14005f4c1:	test   cl,0x1
   14005f4c4:	je     0x14005f4f1
   14005f4c6:	lea    rax,[rcx+rdx*2]
   14005f4ca:	mov    rdx,rcx
   14005f4cd:	cmp    rcx,rax
   14005f4d0:	je     0x14005f5a5
   14005f4d6:	xor    r9d,r9d
   14005f4d9:	cmp    WORD PTR [rdx],r9w
   14005f4dd:	je     0x14005f5a5
   14005f4e3:	add    rdx,0x2
   14005f4e7:	cmp    rdx,rax
   14005f4ea:	jne    0x14005f4d9
   14005f4ec:	jmp    0x14005f5a5
   14005f4f1:	and    ecx,0xf
   14005f4f4:	mov    eax,0x10
   14005f4f9:	sub    rax,rcx
   14005f4fc:	neg    rcx
   14005f4ff:	sbb    r11,r11
   14005f502:	and    r11,rax
   14005f505:	shr    r11,1
   14005f508:	cmp    rdx,r11
   14005f50b:	cmovb  r11,rdx
   14005f50f:	xor    r9d,r9d
   14005f512:	mov    rdx,r8
   14005f515:	lea    rax,[r8+r11*2]
   14005f519:	cmp    r8,rax
   14005f51c:	je     0x14005f52d
   14005f51e:	cmp    WORD PTR [rdx],r9w
   14005f522:	je     0x14005f52d
   14005f524:	add    rdx,0x2
   14005f528:	cmp    rdx,rax
   14005f52b:	jne    0x14005f51e
   14005f52d:	sub    rdx,r8
   14005f530:	sar    rdx,1
   14005f533:	cmp    rdx,r11
   14005f536:	jne    0x14005f5ab
   14005f538:	mov    rcx,r10
   14005f53b:	lea    rdx,[r8+rdx*2]
   14005f53f:	sub    rcx,r11
   14005f542:	xorps  xmm1,xmm1
   14005f545:	mov    rax,rcx
   14005f548:	and    eax,0xf
   14005f54b:	sub    rcx,rax
   14005f54e:	lea    r11,[rdx+rcx*2]
   14005f552:	jmp    0x14005f568
   14005f554:	movdqa xmm0,xmm1
   14005f558:	pcmpeqw xmm0,XMMWORD PTR [rdx]
   14005f55c:	pmovmskb eax,xmm0
   14005f560:	test   eax,eax
   14005f562:	jne    0x14005f56d
   14005f564:	add    rdx,0x10
   14005f568:	cmp    rdx,r11
   14005f56b:	jne    0x14005f554
   14005f56d:	lea    rax,[r8+r10*2]
   14005f571:	jmp    0x14005f57d
   14005f573:	cmp    WORD PTR [rdx],r9w
   14005f577:	je     0x14005f582
   14005f579:	add    rdx,0x2
   14005f57d:	cmp    rdx,rax
   14005f580:	jne    0x14005f573
   14005f582:	sub    rdx,r8
   14005f585:	jmp    0x14005f5a8
   14005f587:	lea    rax,[rcx+rdx*2]
   14005f58b:	mov    rdx,rcx
   14005f58e:	cmp    rcx,rax
   14005f591:	je     0x14005f5a5
   14005f593:	xor    r9d,r9d
   14005f596:	cmp    WORD PTR [rdx],r9w
   14005f59a:	je     0x14005f5a5
   14005f59c:	add    rdx,0x2
   14005f5a0:	cmp    rdx,rax
   14005f5a3:	jne    0x14005f596
   14005f5a5:	sub    rdx,rcx
   14005f5a8:	sar    rdx,1
   14005f5ab:	mov    rax,rdx
   14005f5ae:	add    rsp,0x20
   14005f5b2:	pop    rbp
   14005f5b3:	ret    
   14005f5b4:	sub    rsp,0x58
   14005f5b8:	mov    rax,QWORD PTR [rip+0x22921]        # 0x140081ee0
   14005f5bf:	xor    rax,rsp
   14005f5c2:	mov    QWORD PTR [rsp+0x40],rax
   14005f5c7:	xor    eax,eax
   14005f5c9:	mov    r9,rdx
   14005f5cc:	cmp    rax,0x20
   14005f5d0:	mov    r8,rcx
   14005f5d3:	jae    0x14005f64c
   14005f5d5:	mov    BYTE PTR [rsp+rax*1+0x20],0x0
   14005f5da:	inc    rax
   14005f5dd:	cmp    rax,0x20
   14005f5e1:	jl     0x14005f5d3
   14005f5e3:	mov    al,BYTE PTR [rdx]
   14005f5e5:	jmp    0x14005f606
   14005f5e7:	movzx  edx,al
   14005f5ea:	shr    rdx,0x3
   14005f5ee:	movzx  eax,al
   14005f5f1:	and    eax,0x7
   14005f5f4:	movzx  ecx,BYTE PTR [rsp+rdx*1+0x20]
   14005f5f9:	bts    ecx,eax
   14005f5fc:	inc    r9
   14005f5ff:	mov    BYTE PTR [rsp+rdx*1+0x20],cl
   14005f603:	mov    al,BYTE PTR [r9]
   14005f606:	test   al,al
   14005f608:	jne    0x14005f5e7
   14005f60a:	jmp    0x14005f62b
   14005f60c:	movzx  eax,r9b
   14005f610:	mov    edx,0x1
   14005f615:	movzx  ecx,r9b
   14005f619:	and    ecx,0x7
   14005f61c:	shr    rax,0x3
   14005f620:	shl    edx,cl
   14005f622:	test   BYTE PTR [rsp+rax*1+0x20],dl
   14005f626:	jne    0x14005f647
   14005f628:	inc    r8
   14005f62b:	mov    r9b,BYTE PTR [r8]
   14005f62e:	test   r9b,r9b
   14005f631:	jne    0x14005f60c
   14005f633:	xor    eax,eax
   14005f635:	mov    rcx,QWORD PTR [rsp+0x40]
   14005f63a:	xor    rcx,rsp
   14005f63d:	call   0x140055f90
   14005f642:	add    rsp,0x58
   14005f646:	ret    
   14005f647:	mov    rax,r8
   14005f64a:	jmp    0x14005f635
   14005f64c:	call   0x1400560e8
   14005f651:	int3   
   14005f652:	int3   
   14005f653:	int3   
   14005f654:	rex push rbx
   14005f656:	sub    rsp,0x20
   14005f65a:	call   0x140061588
   14005f65f:	mov    rbx,QWORD PTR [rax+0x18]
   14005f663:	test   rbx,rbx
   14005f666:	je     0x14005f675
   14005f668:	mov    rcx,rbx
   14005f66b:	call   QWORD PTR [rip+0xceb7]        # 0x14006c528
   14005f671:	call   rbx
   14005f673:	jmp    0x14005f675
   14005f675:	call   0x140060974
   14005f67a:	nop
   14005f67b:	int3   
   14005f67c:	mov    QWORD PTR [rip+0x3ff0d],rcx        # 0x14009f590
   14005f683:	ret    
   14005f684:	mov    QWORD PTR [rsp+0x8],rbx
   14005f689:	push   rdi
   14005f68a:	sub    rsp,0x20
   14005f68e:	mov    rdi,rcx
   14005f691:	call   0x14005f6c4
   14005f696:	mov    rbx,rax
   14005f699:	test   rax,rax
   14005f69c:	je     0x14005f6b7
   14005f69e:	mov    rcx,rax
   14005f6a1:	call   QWORD PTR [rip+0xce81]        # 0x14006c528
   14005f6a7:	mov    rcx,rdi
   14005f6aa:	call   rbx
   14005f6ac:	test   eax,eax
   14005f6ae:	je     0x14005f6b7
   14005f6b0:	mov    eax,0x1
   14005f6b5:	jmp    0x14005f6b9
   14005f6b7:	xor    eax,eax
   14005f6b9:	mov    rbx,QWORD PTR [rsp+0x30]
   14005f6be:	add    rsp,0x20
   14005f6c2:	pop    rdi
   14005f6c3:	ret    
   14005f6c4:	rex push rbx
   14005f6c6:	sub    rsp,0x20
   14005f6ca:	xor    ecx,ecx
   14005f6cc:	call   0x140062874
   14005f6d1:	nop
   14005f6d2:	mov    rbx,QWORD PTR [rip+0x22807]        # 0x140081ee0
   14005f6d9:	mov    ecx,ebx
   14005f6db:	and    ecx,0x3f
   14005f6de:	xor    rbx,QWORD PTR [rip+0x3feab]        # 0x14009f590
   14005f6e5:	ror    rbx,cl
   14005f6e8:	xor    ecx,ecx
   14005f6ea:	call   0x1400628c8
   14005f6ef:	mov    rax,rbx
   14005f6f2:	add    rsp,0x20
   14005f6f6:	pop    rbx
   14005f6f7:	ret    
   14005f6f8:	mov    QWORD PTR [rsp+0x8],rbx
   14005f6fd:	mov    QWORD PTR [rsp+0x10],rbp
   14005f702:	mov    QWORD PTR [rsp+0x18],rsi
   14005f707:	push   rdi
   14005f708:	sub    rsp,0x20
   14005f70c:	mov    rsi,rdx
   14005f70f:	mov    edi,ecx
   14005f711:	call   0x14006161c
   14005f716:	xor    r8d,r8d
   14005f719:	mov    rbx,rax
   14005f71c:	test   rax,rax
   14005f71f:	jne    0x14005f728
   14005f721:	xor    eax,eax
   14005f723:	jmp    0x14005f870
   14005f728:	mov    rcx,QWORD PTR [rax]
   14005f72b:	mov    rax,rcx
   14005f72e:	lea    rdx,[rcx+0xc0]
   14005f735:	cmp    rcx,rdx
   14005f738:	je     0x14005f747
   14005f73a:	cmp    DWORD PTR [rax],edi
   14005f73c:	je     0x14005f74a
   14005f73e:	add    rax,0x10
   14005f742:	cmp    rax,rdx
   14005f745:	jne    0x14005f73a
   14005f747:	mov    rax,r8
   14005f74a:	test   rax,rax
   14005f74d:	je     0x14005f721
   14005f74f:	mov    rdi,QWORD PTR [rax+0x8]
   14005f753:	test   rdi,rdi
   14005f756:	je     0x14005f721
   14005f758:	cmp    rdi,0x5
   14005f75c:	jne    0x14005f76a
   14005f75e:	mov    QWORD PTR [rax+0x8],r8
   14005f762:	lea    eax,[rdi-0x4]
   14005f765:	jmp    0x14005f870
   14005f76a:	cmp    rdi,0x1
   14005f76e:	je     0x14005f86d
   14005f774:	mov    rbp,QWORD PTR [rbx+0x8]
   14005f778:	mov    QWORD PTR [rbx+0x8],rsi
   14005f77c:	mov    esi,DWORD PTR [rax+0x4]
   14005f77f:	cmp    esi,0x8
   14005f782:	jne    0x14005f858
   14005f788:	add    rcx,0x30
   14005f78c:	lea    rdx,[rcx+0x90]
   14005f793:	jmp    0x14005f79d
   14005f795:	mov    QWORD PTR [rcx+0x8],r8
   14005f799:	add    rcx,0x10
   14005f79d:	cmp    rcx,rdx
   14005f7a0:	jne    0x14005f795
   14005f7a2:	cmp    DWORD PTR [rax],0xc000008d
   14005f7a8:	mov    esi,DWORD PTR [rbx+0x10]
   14005f7ab:	je     0x14005f839
   14005f7b1:	cmp    DWORD PTR [rax],0xc000008e
   14005f7b7:	je     0x14005f830
   14005f7b9:	cmp    DWORD PTR [rax],0xc000008f
   14005f7bf:	je     0x14005f827
   14005f7c1:	cmp    DWORD PTR [rax],0xc0000090
   14005f7c7:	je     0x14005f81e
   14005f7c9:	cmp    DWORD PTR [rax],0xc0000091
   14005f7cf:	je     0x14005f815
   14005f7d1:	cmp    DWORD PTR [rax],0xc0000092
   14005f7d7:	je     0x14005f80c
   14005f7d9:	cmp    DWORD PTR [rax],0xc0000093
   14005f7df:	je     0x14005f803
   14005f7e1:	cmp    DWORD PTR [rax],0xc00002b4
   14005f7e7:	je     0x14005f7fa
   14005f7e9:	cmp    DWORD PTR [rax],0xc00002b5
   14005f7ef:	jne    0x14005f840
   14005f7f1:	mov    DWORD PTR [rbx+0x10],0x8d
   14005f7f8:	jmp    0x14005f840
   14005f7fa:	mov    DWORD PTR [rbx+0x10],0x8e
   14005f801:	jmp    0x14005f840
   14005f803:	mov    DWORD PTR [rbx+0x10],0x85
   14005f80a:	jmp    0x14005f840
   14005f80c:	mov    DWORD PTR [rbx+0x10],0x8a
   14005f813:	jmp    0x14005f840
   14005f815:	mov    DWORD PTR [rbx+0x10],0x84
   14005f81c:	jmp    0x14005f840
   14005f81e:	mov    DWORD PTR [rbx+0x10],0x81
   14005f825:	jmp    0x14005f840
   14005f827:	mov    DWORD PTR [rbx+0x10],0x86
   14005f82e:	jmp    0x14005f840
   14005f830:	mov    DWORD PTR [rbx+0x10],0x83
   14005f837:	jmp    0x14005f840
   14005f839:	mov    DWORD PTR [rbx+0x10],0x82
   14005f840:	mov    rcx,rdi
   14005f843:	call   QWORD PTR [rip+0xccdf]        # 0x14006c528
   14005f849:	mov    edx,DWORD PTR [rbx+0x10]
   14005f84c:	mov    ecx,0x8
   14005f851:	call   rdi
   14005f853:	mov    DWORD PTR [rbx+0x10],esi
   14005f856:	jmp    0x14005f869
   14005f858:	mov    rcx,rdi
   14005f85b:	mov    QWORD PTR [rax+0x8],r8
   14005f85f:	call   QWORD PTR [rip+0xccc3]        # 0x14006c528
   14005f865:	mov    ecx,esi
   14005f867:	call   rdi
   14005f869:	mov    QWORD PTR [rbx+0x8],rbp
   14005f86d:	or     eax,0xffffffff
   14005f870:	mov    rbx,QWORD PTR [rsp+0x30]
   14005f875:	mov    rbp,QWORD PTR [rsp+0x38]
   14005f87a:	mov    rsi,QWORD PTR [rsp+0x40]
   14005f87f:	add    rsp,0x20
   14005f883:	pop    rdi
   14005f884:	ret    
   14005f885:	int3   
   14005f886:	int3   
   14005f887:	int3   
   14005f888:	mov    rax,rsp
   14005f88b:	mov    QWORD PTR [rax+0x8],rbx
   14005f88f:	mov    QWORD PTR [rax+0x10],rbp
   14005f893:	mov    QWORD PTR [rax+0x18],rsi
   14005f897:	mov    QWORD PTR [rax+0x20],rdi
   14005f89b:	push   r12
   14005f89d:	push   r14
   14005f89f:	push   r15
   14005f8a1:	sub    rsp,0x20
   14005f8a5:	mov    r15,QWORD PTR [rsp+0x60]
   14005f8aa:	mov    r12,r9
   14005f8ad:	mov    rdi,r8
   14005f8b0:	mov    r14,rdx
   14005f8b3:	mov    rbx,rcx
   14005f8b6:	and    QWORD PTR [r15],0x0
   14005f8ba:	mov    QWORD PTR [r9],0x1
   14005f8c1:	test   rdx,rdx
   14005f8c4:	je     0x14005f8cd
   14005f8c6:	mov    QWORD PTR [rdx],r8
   14005f8c9:	add    r14,0x8
   14005f8cd:	xor    bpl,bpl
   14005f8d0:	cmp    BYTE PTR [rbx],0x22
   14005f8d3:	jne    0x14005f8e4
   14005f8d5:	test   bpl,bpl
   14005f8d8:	mov    sil,0x22
   14005f8db:	sete   bpl
   14005f8df:	inc    rbx
   14005f8e2:	jmp    0x14005f91b
   14005f8e4:	inc    QWORD PTR [r15]
   14005f8e7:	test   rdi,rdi
   14005f8ea:	je     0x14005f8f3
   14005f8ec:	mov    al,BYTE PTR [rbx]
   14005f8ee:	mov    BYTE PTR [rdi],al
   14005f8f0:	inc    rdi
   14005f8f3:	movsx  esi,BYTE PTR [rbx]
   14005f8f6:	inc    rbx
   14005f8f9:	mov    ecx,esi
   14005f8fb:	call   0x14006568c
   14005f900:	test   eax,eax
   14005f902:	je     0x14005f916
   14005f904:	inc    QWORD PTR [r15]
   14005f907:	test   rdi,rdi
   14005f90a:	je     0x14005f913
   14005f90c:	mov    al,BYTE PTR [rbx]
   14005f90e:	mov    BYTE PTR [rdi],al
   14005f910:	inc    rdi
   14005f913:	inc    rbx
   14005f916:	test   sil,sil
   14005f919:	je     0x14005f937
   14005f91b:	test   bpl,bpl
   14005f91e:	jne    0x14005f8d0
   14005f920:	cmp    sil,0x20
   14005f924:	je     0x14005f92c
   14005f926:	cmp    sil,0x9
   14005f92a:	jne    0x14005f8d0
   14005f92c:	test   rdi,rdi
   14005f92f:	je     0x14005f93a
   14005f931:	mov    BYTE PTR [rdi-0x1],0x0
   14005f935:	jmp    0x14005f93a
   14005f937:	dec    rbx
   14005f93a:	xor    sil,sil
   14005f93d:	cmp    BYTE PTR [rbx],0x0
   14005f940:	je     0x14005fa18
   14005f946:	cmp    BYTE PTR [rbx],0x20
   14005f949:	je     0x14005f950
   14005f94b:	cmp    BYTE PTR [rbx],0x9
   14005f94e:	jne    0x14005f955
   14005f950:	inc    rbx
   14005f953:	jmp    0x14005f946
   14005f955:	cmp    BYTE PTR [rbx],0x0
   14005f958:	je     0x14005fa18
   14005f95e:	test   r14,r14
   14005f961:	je     0x14005f96a
   14005f963:	mov    QWORD PTR [r14],rdi
   14005f966:	add    r14,0x8
   14005f96a:	inc    QWORD PTR [r12]
   14005f96e:	mov    edx,0x1
   14005f973:	xor    eax,eax
   14005f975:	jmp    0x14005f97c
   14005f977:	inc    rbx
   14005f97a:	inc    eax
   14005f97c:	cmp    BYTE PTR [rbx],0x5c
   14005f97f:	je     0x14005f977
   14005f981:	cmp    BYTE PTR [rbx],0x22
   14005f984:	jne    0x14005f9b7
   14005f986:	test   dl,al
   14005f988:	jne    0x14005f9a3
   14005f98a:	test   sil,sil
   14005f98d:	je     0x14005f99a
   14005f98f:	cmp    BYTE PTR [rbx+0x1],0x22
   14005f993:	jne    0x14005f99a
   14005f995:	inc    rbx
   14005f998:	jmp    0x14005f9a3
   14005f99a:	xor    edx,edx
   14005f99c:	test   sil,sil
   14005f99f:	sete   sil
   14005f9a3:	shr    eax,1
   14005f9a5:	jmp    0x14005f9b7
   14005f9a7:	dec    eax
   14005f9a9:	test   rdi,rdi
   14005f9ac:	je     0x14005f9b4
   14005f9ae:	mov    BYTE PTR [rdi],0x5c
   14005f9b1:	inc    rdi
   14005f9b4:	inc    QWORD PTR [r15]
   14005f9b7:	test   eax,eax
   14005f9b9:	jne    0x14005f9a7
   14005f9bb:	mov    al,BYTE PTR [rbx]
   14005f9bd:	test   al,al
   14005f9bf:	je     0x14005fa05
   14005f9c1:	test   sil,sil
   14005f9c4:	jne    0x14005f9ce
   14005f9c6:	cmp    al,0x20
   14005f9c8:	je     0x14005fa05
   14005f9ca:	cmp    al,0x9
   14005f9cc:	je     0x14005fa05
   14005f9ce:	test   edx,edx
   14005f9d0:	je     0x14005f9fd
   14005f9d2:	test   rdi,rdi
   14005f9d5:	je     0x14005f9dc
   14005f9d7:	mov    BYTE PTR [rdi],al
   14005f9d9:	inc    rdi
   14005f9dc:	movsx  ecx,BYTE PTR [rbx]
   14005f9df:	call   0x14006568c
   14005f9e4:	test   eax,eax
   14005f9e6:	je     0x14005f9fa
   14005f9e8:	inc    QWORD PTR [r15]
   14005f9eb:	inc    rbx
   14005f9ee:	test   rdi,rdi
   14005f9f1:	je     0x14005f9fa
   14005f9f3:	mov    al,BYTE PTR [rbx]
   14005f9f5:	mov    BYTE PTR [rdi],al
   14005f9f7:	inc    rdi
   14005f9fa:	inc    QWORD PTR [r15]
   14005f9fd:	inc    rbx
   14005fa00:	jmp    0x14005f96e
   14005fa05:	test   rdi,rdi
   14005fa08:	je     0x14005fa10
   14005fa0a:	mov    BYTE PTR [rdi],0x0
   14005fa0d:	inc    rdi
   14005fa10:	inc    QWORD PTR [r15]
   14005fa13:	jmp    0x14005f93d
   14005fa18:	test   r14,r14
   14005fa1b:	je     0x14005fa21
   14005fa1d:	and    QWORD PTR [r14],0x0
   14005fa21:	inc    QWORD PTR [r12]
   14005fa25:	mov    rbx,QWORD PTR [rsp+0x40]
   14005fa2a:	mov    rbp,QWORD PTR [rsp+0x48]
   14005fa2f:	mov    rsi,QWORD PTR [rsp+0x50]
   14005fa34:	mov    rdi,QWORD PTR [rsp+0x58]
   14005fa39:	add    rsp,0x20
   14005fa3d:	pop    r15
   14005fa3f:	pop    r14
   14005fa41:	pop    r12
   14005fa43:	ret    
   14005fa44:	rex push rbx
   14005fa46:	sub    rsp,0x20
   14005fa4a:	movabs rax,0x1fffffffffffffff
   14005fa54:	mov    r9,rdx
   14005fa57:	mov    r10,rcx
   14005fa5a:	cmp    rcx,rax
   14005fa5d:	jb     0x14005fa63
   14005fa5f:	xor    eax,eax
   14005fa61:	jmp    0x14005fa9f
   14005fa63:	or     rcx,0xffffffffffffffff
   14005fa67:	xor    edx,edx
   14005fa69:	mov    rax,rcx
   14005fa6c:	div    r8
   14005fa6f:	cmp    r9,rax
   14005fa72:	jae    0x14005fa5f
   14005fa74:	shl    r10,0x3
   14005fa78:	imul   r9,r8
   14005fa7c:	sub    rcx,r10
   14005fa7f:	cmp    rcx,r9
   14005fa82:	jbe    0x14005fa5f
   14005fa84:	lea    rcx,[r9+r10*1]
   14005fa88:	mov    edx,0x1
   14005fa8d:	call   0x140060a6c
   14005fa92:	xor    ecx,ecx
   14005fa94:	mov    rbx,rax
   14005fa97:	call   0x1400609cc
   14005fa9c:	mov    rax,rbx
   14005fa9f:	add    rsp,0x20
   14005faa3:	pop    rbx
   14005faa4:	ret    
   14005faa5:	int3   
   14005faa6:	int3   
   14005faa7:	int3   
   14005faa8:	mov    QWORD PTR [rsp+0x8],rbx
   14005faad:	push   rbp
   14005faae:	push   rsi
   14005faaf:	push   rdi
   14005fab0:	push   r14
   14005fab2:	push   r15
   14005fab4:	mov    rbp,rsp
   14005fab7:	sub    rsp,0x30
   14005fabb:	lea    eax,[rcx-0x1]
   14005fabe:	mov    r14d,ecx
   14005fac1:	cmp    eax,0x1
   14005fac4:	jbe    0x14005fadc
   14005fac6:	call   0x140060e94
   14005facb:	mov    edi,0x16
   14005fad0:	mov    DWORD PTR [rax],edi
   14005fad2:	call   0x140060d74
   14005fad7:	jmp    0x14005fc0b
   14005fadc:	call   0x140065284
   14005fae1:	lea    rbx,[rip+0x3fab8]        # 0x14009f5a0
   14005fae8:	mov    r8d,0x104
   14005faee:	mov    rdx,rbx
   14005faf1:	xor    ecx,ecx
   14005faf3:	call   QWORD PTR [rip+0xc95f]        # 0x14006c458
   14005faf9:	mov    rsi,QWORD PTR [rip+0x3fc20]        # 0x14009f720
   14005fb00:	xor    edi,edi
   14005fb02:	mov    QWORD PTR [rip+0x3fc27],rbx        # 0x14009f730
   14005fb09:	test   rsi,rsi
   14005fb0c:	je     0x14005fb13
   14005fb0e:	cmp    BYTE PTR [rsi],dil
   14005fb11:	jne    0x14005fb16
   14005fb13:	mov    rsi,rbx
   14005fb16:	lea    rax,[rbp+0x48]
   14005fb1a:	mov    QWORD PTR [rbp+0x40],rdi
   14005fb1e:	lea    r9,[rbp+0x40]
   14005fb22:	mov    QWORD PTR [rsp+0x20],rax
   14005fb27:	xor    r8d,r8d
   14005fb2a:	mov    QWORD PTR [rbp+0x48],rdi
   14005fb2e:	xor    edx,edx
   14005fb30:	mov    rcx,rsi
   14005fb33:	call   0x14005f888
   14005fb38:	mov    r15,QWORD PTR [rbp+0x40]
   14005fb3c:	mov    r8d,0x1
   14005fb42:	mov    rdx,QWORD PTR [rbp+0x48]
   14005fb46:	mov    rcx,r15
   14005fb49:	call   0x14005fa44
   14005fb4e:	mov    rbx,rax
   14005fb51:	test   rax,rax
   14005fb54:	jne    0x14005fb67
   14005fb56:	call   0x140060e94
   14005fb5b:	lea    edi,[rbx+0xc]
   14005fb5e:	mov    DWORD PTR [rax],edi
   14005fb60:	xor    ecx,ecx
   14005fb62:	jmp    0x14005fc06
   14005fb67:	lea    r8,[rax+r15*8]
   14005fb6b:	mov    rdx,rbx
   14005fb6e:	lea    rax,[rbp+0x48]
   14005fb72:	mov    rcx,rsi
   14005fb75:	lea    r9,[rbp+0x40]
   14005fb79:	mov    QWORD PTR [rsp+0x20],rax
   14005fb7e:	call   0x14005f888
   14005fb83:	cmp    r14d,0x1
   14005fb87:	jne    0x14005fb9d
   14005fb89:	mov    eax,DWORD PTR [rbp+0x40]
   14005fb8c:	dec    eax
   14005fb8e:	mov    QWORD PTR [rip+0x3fb7b],rbx        # 0x14009f710
   14005fb95:	mov    DWORD PTR [rip+0x3fb6d],eax        # 0x14009f708
   14005fb9b:	jmp    0x14005fb60
   14005fb9d:	lea    rdx,[rbp+0x38]
   14005fba1:	mov    QWORD PTR [rbp+0x38],rdi
   14005fba5:	mov    rcx,rbx
   14005fba8:	call   0x140064b80
   14005fbad:	mov    esi,eax
   14005fbaf:	test   eax,eax
   14005fbb1:	je     0x14005fbcc
   14005fbb3:	mov    rcx,QWORD PTR [rbp+0x38]
   14005fbb7:	call   0x1400609cc
   14005fbbc:	mov    rcx,rbx
   14005fbbf:	mov    QWORD PTR [rbp+0x38],rdi
   14005fbc3:	call   0x1400609cc
   14005fbc8:	mov    edi,esi
   14005fbca:	jmp    0x14005fc0b
   14005fbcc:	mov    rdx,QWORD PTR [rbp+0x38]
   14005fbd0:	mov    rcx,rdi
   14005fbd3:	mov    rax,rdx
   14005fbd6:	cmp    QWORD PTR [rdx],rdi
   14005fbd9:	je     0x14005fbe7
   14005fbdb:	lea    rax,[rax+0x8]
   14005fbdf:	inc    rcx
   14005fbe2:	cmp    QWORD PTR [rax],rdi
   14005fbe5:	jne    0x14005fbdb
   14005fbe7:	mov    DWORD PTR [rip+0x3fb1b],ecx        # 0x14009f708
   14005fbed:	xor    ecx,ecx
   14005fbef:	mov    QWORD PTR [rbp+0x38],rdi
   14005fbf3:	mov    QWORD PTR [rip+0x3fb16],rdx        # 0x14009f710
   14005fbfa:	call   0x1400609cc
   14005fbff:	mov    rcx,rbx
   14005fc02:	mov    QWORD PTR [rbp+0x38],rdi
   14005fc06:	call   0x1400609cc
   14005fc0b:	mov    eax,edi
   14005fc0d:	mov    rbx,QWORD PTR [rsp+0x60]
   14005fc12:	add    rsp,0x30
   14005fc16:	pop    r15
   14005fc18:	pop    r14
   14005fc1a:	pop    rdi
   14005fc1b:	pop    rsi
   14005fc1c:	pop    rbp
   14005fc1d:	ret    
   14005fc1e:	int3   
   14005fc1f:	int3   
   14005fc20:	rex push rbx
   14005fc22:	sub    rsp,0x20
   14005fc26:	mov    rax,QWORD PTR [rip+0x3fa7b]        # 0x14009f6a8
   14005fc2d:	xor    ebx,ebx
   14005fc2f:	test   rax,rax
   14005fc32:	jne    0x14005fc5f
   14005fc34:	cmp    QWORD PTR [rip+0x3fa75],rbx        # 0x14009f6b0
   14005fc3b:	jne    0x14005fc41
   14005fc3d:	xor    eax,eax
   14005fc3f:	jmp    0x14005fc5f
   14005fc41:	call   0x14005fc68
   14005fc46:	test   eax,eax
   14005fc48:	jne    0x14005fc3d
   14005fc4a:	call   0x14005fe14
   14005fc4f:	mov    rcx,QWORD PTR [rip+0x3fa52]        # 0x14009f6a8
   14005fc56:	test   eax,eax
   14005fc58:	cmovne rcx,rbx
   14005fc5c:	mov    rax,rcx
   14005fc5f:	add    rsp,0x20
   14005fc63:	pop    rbx
   14005fc64:	ret    
   14005fc65:	int3   
   14005fc66:	int3   
   14005fc67:	int3   
   14005fc68:	mov    QWORD PTR [rsp+0x8],rbx
   14005fc6d:	push   rdi
   14005fc6e:	sub    rsp,0x20
   14005fc72:	xor    edi,edi
   14005fc74:	cmp    QWORD PTR [rip+0x3fa2d],rdi        # 0x14009f6a8
   14005fc7b:	je     0x14005fc81
   14005fc7d:	xor    eax,eax
   14005fc7f:	jmp    0x14005fcc9
   14005fc81:	call   0x140065284
   14005fc86:	call   0x1400656a0
   14005fc8b:	mov    rbx,rax
   14005fc8e:	test   rax,rax
   14005fc91:	jne    0x14005fc98
   14005fc93:	or     edi,0xffffffff
   14005fc96:	jmp    0x14005fcbf
   14005fc98:	mov    rcx,rax
   14005fc9b:	call   0x14005fcd4
   14005fca0:	test   rax,rax
   14005fca3:	jne    0x14005fcaa
   14005fca5:	or     edi,0xffffffff
   14005fca8:	jmp    0x14005fcb8
   14005fcaa:	mov    QWORD PTR [rip+0x3fa0f],rax        # 0x14009f6c0
   14005fcb1:	mov    QWORD PTR [rip+0x3f9f0],rax        # 0x14009f6a8
   14005fcb8:	xor    ecx,ecx
   14005fcba:	call   0x1400609cc
   14005fcbf:	mov    rcx,rbx
   14005fcc2:	call   0x1400609cc
   14005fcc7:	mov    eax,edi
   14005fcc9:	mov    rbx,QWORD PTR [rsp+0x30]
   14005fcce:	add    rsp,0x20
   14005fcd2:	pop    rdi
   14005fcd3:	ret    
   14005fcd4:	mov    QWORD PTR [rsp+0x8],rbx
   14005fcd9:	mov    QWORD PTR [rsp+0x10],rbp
   14005fcde:	mov    QWORD PTR [rsp+0x18],rsi
   14005fce3:	push   rdi
   14005fce4:	push   r14
   14005fce6:	push   r15
   14005fce8:	sub    rsp,0x30
   14005fcec:	xor    esi,esi
   14005fcee:	mov    r14,rcx
   14005fcf1:	mov    edx,esi
   14005fcf3:	jmp    0x14005fd0f
   14005fcf5:	cmp    al,0x3d
   14005fcf7:	je     0x14005fcfc
   14005fcf9:	inc    rdx
   14005fcfc:	or     rax,0xffffffffffffffff
   14005fd00:	inc    rax
   14005fd03:	cmp    BYTE PTR [rcx+rax*1],sil
   14005fd07:	jne    0x14005fd00
   14005fd09:	inc    rcx
   14005fd0c:	add    rcx,rax
   14005fd0f:	mov    al,BYTE PTR [rcx]
   14005fd11:	test   al,al
   14005fd13:	jne    0x14005fcf5
   14005fd15:	lea    rcx,[rdx+0x1]
   14005fd19:	mov    edx,0x8
   14005fd1e:	call   0x140060a6c
   14005fd23:	mov    rbx,rax
   14005fd26:	test   rax,rax
   14005fd29:	je     0x14005fd97
   14005fd2b:	mov    r15,rax
   14005fd2e:	cmp    BYTE PTR [r14],sil
   14005fd31:	je     0x14005fd94
   14005fd33:	or     rbp,0xffffffffffffffff
   14005fd37:	inc    rbp
   14005fd3a:	cmp    BYTE PTR [r14+rbp*1],sil
   14005fd3e:	jne    0x14005fd37
   14005fd40:	inc    rbp
   14005fd43:	cmp    BYTE PTR [r14],0x3d
   14005fd47:	je     0x14005fd7e
   14005fd49:	mov    edx,0x1
   14005fd4e:	mov    rcx,rbp
   14005fd51:	call   0x140060a6c
   14005fd56:	mov    rdi,rax
   14005fd59:	test   rax,rax
   14005fd5c:	je     0x14005fd83
   14005fd5e:	mov    r8,r14
   14005fd61:	mov    rdx,rbp
   14005fd64:	mov    rcx,rax
   14005fd67:	call   0x140060914
   14005fd6c:	xor    ecx,ecx
   14005fd6e:	test   eax,eax
   14005fd70:	jne    0x14005fdba
   14005fd72:	mov    QWORD PTR [r15],rdi
   14005fd75:	add    r15,0x8
   14005fd79:	call   0x1400609cc
   14005fd7e:	add    r14,rbp
   14005fd81:	jmp    0x14005fd2e
   14005fd83:	mov    rcx,rbx
   14005fd86:	call   0x14005fdd0
   14005fd8b:	xor    ecx,ecx
   14005fd8d:	call   0x1400609cc
   14005fd92:	jmp    0x14005fd97
   14005fd94:	mov    rsi,rbx
   14005fd97:	xor    ecx,ecx
   14005fd99:	call   0x1400609cc
   14005fd9e:	mov    rbx,QWORD PTR [rsp+0x50]
   14005fda3:	mov    rax,rsi
   14005fda6:	mov    rsi,QWORD PTR [rsp+0x60]
   14005fdab:	mov    rbp,QWORD PTR [rsp+0x58]
   14005fdb0:	add    rsp,0x30
   14005fdb4:	pop    r15
   14005fdb6:	pop    r14
   14005fdb8:	pop    rdi
   14005fdb9:	ret    
   14005fdba:	xor    r9d,r9d
   14005fdbd:	mov    QWORD PTR [rsp+0x20],rsi
   14005fdc2:	xor    r8d,r8d
   14005fdc5:	xor    edx,edx
   14005fdc7:	call   0x140060d94
   14005fdcc:	int3   
   14005fdcd:	int3   
   14005fdce:	int3   
   14005fdcf:	int3   
   14005fdd0:	test   rcx,rcx
   14005fdd3:	je     0x14005fe10
   14005fdd5:	mov    QWORD PTR [rsp+0x8],rbx
   14005fdda:	push   rdi
   14005fddb:	sub    rsp,0x20
   14005fddf:	mov    rax,QWORD PTR [rcx]
   14005fde2:	mov    rbx,rcx
   14005fde5:	mov    rdi,rcx
   14005fde8:	jmp    0x14005fdf9
   14005fdea:	mov    rcx,rax
   14005fded:	call   0x1400609cc
   14005fdf2:	lea    rdi,[rdi+0x8]
   14005fdf6:	mov    rax,QWORD PTR [rdi]
   14005fdf9:	test   rax,rax
   14005fdfc:	jne    0x14005fdea
   14005fdfe:	mov    rcx,rbx
   14005fe01:	call   0x1400609cc
   14005fe06:	mov    rbx,QWORD PTR [rsp+0x30]
   14005fe0b:	add    rsp,0x20
   14005fe0f:	pop    rdi
   14005fe10:	ret    
   14005fe11:	int3   
   14005fe12:	int3   
   14005fe13:	int3   
   14005fe14:	mov    QWORD PTR [rsp+0x8],rbx
   14005fe19:	mov    QWORD PTR [rsp+0x10],rbp
   14005fe1e:	push   rsi
   14005fe1f:	sub    rsp,0x40
   14005fe23:	mov    rsi,QWORD PTR [rip+0x3f886]        # 0x14009f6b0
   14005fe2a:	test   rsi,rsi
   14005fe2d:	jne    0x14005febe
   14005fe33:	or     eax,0xffffffff
   14005fe36:	jmp    0x14005feca
   14005fe3b:	and    QWORD PTR [rsp+0x38],0x0
   14005fe41:	or     r9d,0xffffffff
   14005fe45:	and    QWORD PTR [rsp+0x30],0x0
   14005fe4b:	xor    edx,edx
   14005fe4d:	and    DWORD PTR [rsp+0x28],0x0
   14005fe52:	xor    ecx,ecx
   14005fe54:	mov    r8,QWORD PTR [rsi]
   14005fe57:	and    QWORD PTR [rsp+0x20],0x0
   14005fe5d:	call   QWORD PTR [rip+0xc445]        # 0x14006c2a8
   14005fe63:	movsxd rbp,eax
   14005fe66:	test   eax,eax
   14005fe68:	je     0x14005fe33
   14005fe6a:	mov    edx,0x1
   14005fe6f:	mov    rcx,rbp
   14005fe72:	call   0x140060a6c
   14005fe77:	mov    rbx,rax
   14005fe7a:	test   rax,rax
   14005fe7d:	je     0x14005feda
   14005fe7f:	and    QWORD PTR [rsp+0x38],0x0
   14005fe85:	or     r9d,0xffffffff
   14005fe89:	and    QWORD PTR [rsp+0x30],0x0
   14005fe8f:	xor    edx,edx
   14005fe91:	mov    r8,QWORD PTR [rsi]
   14005fe94:	xor    ecx,ecx
   14005fe96:	mov    DWORD PTR [rsp+0x28],ebp
   14005fe9a:	mov    QWORD PTR [rsp+0x20],rax
   14005fe9f:	call   QWORD PTR [rip+0xc403]        # 0x14006c2a8
   14005fea5:	test   eax,eax
   14005fea7:	je     0x14005feda
   14005fea9:	xor    edx,edx
   14005feab:	mov    rcx,rbx
   14005feae:	call   0x140065b80
   14005feb3:	xor    ecx,ecx
   14005feb5:	call   0x1400609cc
   14005feba:	add    rsi,0x8
   14005febe:	cmp    QWORD PTR [rsi],0x0
   14005fec2:	jne    0x14005fe3b
   14005fec8:	xor    eax,eax
   14005feca:	mov    rbx,QWORD PTR [rsp+0x50]
   14005fecf:	mov    rbp,QWORD PTR [rsp+0x58]
   14005fed4:	add    rsp,0x40
   14005fed8:	pop    rsi
   14005fed9:	ret    
   14005feda:	mov    rcx,rbx
   14005fedd:	call   0x1400609cc
   14005fee2:	jmp    0x14005fe33
   14005fee7:	int3   
   14005fee8:	sub    rsp,0x28
   14005feec:	mov    rcx,QWORD PTR [rcx]
   14005feef:	cmp    rcx,QWORD PTR [rip+0x3f7ca]        # 0x14009f6c0
   14005fef6:	je     0x14005fefd
   14005fef8:	call   0x14005fdd0
   14005fefd:	add    rsp,0x28
   14005ff01:	ret    
   14005ff02:	int3   
   14005ff03:	int3   
   14005ff04:	sub    rsp,0x28
   14005ff08:	mov    rcx,QWORD PTR [rcx]
   14005ff0b:	cmp    rcx,QWORD PTR [rip+0x3f7a6]        # 0x14009f6b8
   14005ff12:	je     0x14005ff19
   14005ff14:	call   0x14005fdd0
   14005ff19:	add    rsp,0x28
   14005ff1d:	ret    
   14005ff1e:	int3   
   14005ff1f:	int3   
   14005ff20:	jmp    0x14005fc20
   14005ff25:	int3   
   14005ff26:	int3   
   14005ff27:	int3   
   14005ff28:	sub    rsp,0x28
   14005ff2c:	lea    rcx,[rip+0x3f775]        # 0x14009f6a8
   14005ff33:	call   0x14005fee8
   14005ff38:	lea    rcx,[rip+0x3f771]        # 0x14009f6b0
   14005ff3f:	call   0x14005ff04
   14005ff44:	mov    rcx,QWORD PTR [rip+0x3f775]        # 0x14009f6c0
   14005ff4b:	call   0x14005fdd0
   14005ff50:	mov    rcx,QWORD PTR [rip+0x3f761]        # 0x14009f6b8
   14005ff57:	add    rsp,0x28
   14005ff5b:	jmp    0x14005fdd0
   14005ff60:	sub    rsp,0x28
   14005ff64:	mov    rax,QWORD PTR [rip+0x3f755]        # 0x14009f6c0
   14005ff6b:	test   rax,rax
   14005ff6e:	jne    0x14005ff7c
   14005ff70:	call   0x14005fc20
   14005ff75:	mov    QWORD PTR [rip+0x3f744],rax        # 0x14009f6c0
   14005ff7c:	add    rsp,0x28
   14005ff80:	ret    
   14005ff81:	int3   
   14005ff82:	int3   
   14005ff83:	int3   
   14005ff84:	jmp    0x14005fc68
   14005ff89:	int3   
   14005ff8a:	int3   
   14005ff8b:	int3   
   14005ff8c:	mov    QWORD PTR [rsp+0x8],rbx
   14005ff91:	mov    QWORD PTR [rsp+0x20],r9
   14005ff96:	push   rdi
   14005ff97:	sub    rsp,0x20
   14005ff9b:	mov    rbx,r9
   14005ff9e:	mov    rdi,r8
   14005ffa1:	mov    ecx,DWORD PTR [rdx]
   14005ffa3:	call   0x140062874
   14005ffa8:	nop
   14005ffa9:	mov    rcx,rdi
   14005ffac:	call   0x140060168
   14005ffb1:	mov    edi,eax
   14005ffb3:	mov    ecx,DWORD PTR [rbx]
   14005ffb5:	call   0x1400628c8
   14005ffba:	mov    eax,edi
   14005ffbc:	mov    rbx,QWORD PTR [rsp+0x30]
   14005ffc1:	add    rsp,0x20
   14005ffc5:	pop    rdi
   14005ffc6:	ret    
   14005ffc7:	int3   
   14005ffc8:	mov    QWORD PTR [rsp+0x8],rbx
   14005ffcd:	mov    QWORD PTR [rsp+0x10],rsi
   14005ffd2:	mov    QWORD PTR [rsp+0x20],r9
   14005ffd7:	push   rdi
   14005ffd8:	push   r12
   14005ffda:	push   r13
   14005ffdc:	push   r14
   14005ffde:	push   r15
   14005ffe0:	sub    rsp,0x40
   14005ffe4:	mov    rdi,r9
   14005ffe7:	mov    r15,r8
   14005ffea:	mov    ecx,DWORD PTR [rdx]
   14005ffec:	call   0x140062874
   14005fff1:	nop
   14005fff2:	mov    rax,QWORD PTR [r15]
   14005fff5:	mov    rdx,QWORD PTR [rax]
   14005fff8:	test   rdx,rdx
   14005fffb:	jne    0x140060006
   14005fffd:	or     rbx,0xffffffffffffffff
   140060001:	jmp    0x140060146
   140060006:	mov    rsi,QWORD PTR [rip+0x21ed3]        # 0x140081ee0
   14006000d:	mov    r8d,esi
   140060010:	and    r8d,0x3f
   140060014:	mov    rdi,rsi
   140060017:	xor    rdi,QWORD PTR [rdx]
   14006001a:	mov    ecx,r8d
   14006001d:	ror    rdi,cl
   140060020:	mov    QWORD PTR [rsp+0x30],rdi
   140060025:	mov    rbx,rsi
   140060028:	xor    rbx,QWORD PTR [rdx+0x8]
   14006002c:	ror    rbx,cl
   14006002f:	mov    QWORD PTR [rsp+0x20],rbx
   140060034:	lea    rax,[rdi-0x1]
   140060038:	cmp    rax,0xfffffffffffffffd
   14006003c:	ja     0x14006013c
   140060042:	mov    r12,rdi
   140060045:	mov    QWORD PTR [rsp+0x28],rdi
   14006004a:	mov    r14,rbx
   14006004d:	mov    QWORD PTR [rsp+0x38],rbx
   140060052:	mov    r13d,0x40
   140060058:	mov    ecx,r13d
   14006005b:	sub    ecx,r8d
   14006005e:	xor    eax,eax
   140060060:	ror    rax,cl
   140060063:	xor    rax,rsi
   140060066:	sub    rbx,0x8
   14006006a:	mov    QWORD PTR [rsp+0x20],rbx
   14006006f:	cmp    rbx,rdi
   140060072:	jb     0x140060080
   140060074:	cmp    QWORD PTR [rbx],rax
   140060077:	jne    0x14006007b
   140060079:	jmp    0x140060066
   14006007b:	cmp    rbx,rdi
   14006007e:	jae    0x1400600ca
   140060080:	or     rbx,0xffffffffffffffff
   140060084:	cmp    rdi,rbx
   140060087:	je     0x140060098
   140060089:	mov    rcx,rdi
   14006008c:	call   0x1400609cc
   140060091:	mov    rsi,QWORD PTR [rip+0x21e48]        # 0x140081ee0
   140060098:	mov    eax,esi
   14006009a:	and    eax,0x3f
   14006009d:	sub    r13d,eax
   1400600a0:	mov    ecx,r13d
   1400600a3:	xor    edx,edx
   1400600a5:	ror    rdx,cl
   1400600a8:	xor    rdx,rsi
   1400600ab:	mov    rax,QWORD PTR [r15]
   1400600ae:	mov    rcx,QWORD PTR [rax]
   1400600b1:	mov    QWORD PTR [rcx],rdx
   1400600b4:	mov    rax,QWORD PTR [r15]
   1400600b7:	mov    rcx,QWORD PTR [rax]
   1400600ba:	mov    QWORD PTR [rcx+0x8],rdx
   1400600be:	mov    rax,QWORD PTR [r15]
   1400600c1:	mov    rcx,QWORD PTR [rax]
   1400600c4:	mov    QWORD PTR [rcx+0x10],rdx
   1400600c8:	jmp    0x14006013c
   1400600ca:	mov    ecx,esi
   1400600cc:	and    ecx,0x3f
   1400600cf:	xor    rsi,QWORD PTR [rbx]
   1400600d2:	ror    rsi,cl
   1400600d5:	mov    QWORD PTR [rbx],rax
   1400600d8:	mov    rcx,rsi
   1400600db:	call   QWORD PTR [rip+0xc447]        # 0x14006c528
   1400600e1:	call   rsi
   1400600e3:	mov    rax,QWORD PTR [r15]
   1400600e6:	mov    rdx,QWORD PTR [rax]
   1400600e9:	mov    rsi,QWORD PTR [rip+0x21df0]        # 0x140081ee0
   1400600f0:	mov    r8d,esi
   1400600f3:	and    r8d,0x3f
   1400600f7:	mov    r9,rsi
   1400600fa:	xor    r9,QWORD PTR [rdx]
   1400600fd:	mov    ecx,r8d
   140060100:	ror    r9,cl
   140060103:	mov    rax,QWORD PTR [rdx+0x8]
   140060107:	xor    rax,rsi
   14006010a:	ror    rax,cl
   14006010d:	cmp    r9,r12
   140060110:	jne    0x140060117
   140060112:	cmp    rax,r14
   140060115:	je     0x140060137
   140060117:	mov    r12,r9
   14006011a:	mov    QWORD PTR [rsp+0x28],r9
   14006011f:	mov    rdi,r9
   140060122:	mov    QWORD PTR [rsp+0x30],r9
   140060127:	mov    r14,rax
   14006012a:	mov    QWORD PTR [rsp+0x38],rax
   14006012f:	mov    rbx,rax
   140060132:	mov    QWORD PTR [rsp+0x20],rax
   140060137:	jmp    0x140060058
   14006013c:	mov    rdi,QWORD PTR [rsp+0x88]
   140060144:	xor    ebx,ebx
   140060146:	mov    ecx,DWORD PTR [rdi]
   140060148:	call   0x1400628c8
   14006014d:	mov    eax,ebx
   14006014f:	mov    rbx,QWORD PTR [rsp+0x70]
   140060154:	mov    rsi,QWORD PTR [rsp+0x78]
   140060159:	add    rsp,0x40
   14006015d:	pop    r15
   14006015f:	pop    r14
   140060161:	pop    r13
   140060163:	pop    r12
   140060165:	pop    rdi
   140060166:	ret    
   140060167:	int3   
   140060168:	mov    rax,rsp
   14006016b:	mov    QWORD PTR [rax+0x8],rbx
   14006016f:	mov    QWORD PTR [rax+0x10],rbp
   140060173:	mov    QWORD PTR [rax+0x18],rsi
   140060177:	mov    QWORD PTR [rax+0x20],rdi
   14006017b:	push   r12
   14006017d:	push   r14
   14006017f:	push   r15
   140060181:	sub    rsp,0x20
   140060185:	mov    rax,QWORD PTR [rcx]
   140060188:	xor    esi,esi
   14006018a:	mov    r15,rcx
   14006018d:	mov    rbx,QWORD PTR [rax]
   140060190:	test   rbx,rbx
   140060193:	jne    0x14006019d
   140060195:	or     eax,0xffffffff
   140060198:	jmp    0x140060323
   14006019d:	mov    r8,QWORD PTR [rip+0x21d3c]        # 0x140081ee0
   1400601a4:	mov    r12d,0x40
   1400601aa:	mov    rbp,QWORD PTR [rbx]
   1400601ad:	mov    ecx,r8d
   1400601b0:	mov    r9,QWORD PTR [rbx+0x8]
   1400601b4:	and    ecx,0x3f
   1400601b7:	mov    rbx,QWORD PTR [rbx+0x10]
   1400601bb:	xor    rbp,r8
   1400601be:	xor    r9,r8
   1400601c1:	ror    rbp,cl
   1400601c4:	xor    rbx,r8
   1400601c7:	ror    r9,cl
   1400601ca:	ror    rbx,cl
   1400601cd:	cmp    r9,rbx
   1400601d0:	jne    0x14006029d
   1400601d6:	sub    rbx,rbp
   1400601d9:	mov    eax,0x200
   1400601de:	sar    rbx,0x3
   1400601e2:	cmp    rbx,rax
   1400601e5:	mov    rdi,rbx
   1400601e8:	cmova  rdi,rax
   1400601ec:	lea    eax,[r12-0x20]
   1400601f1:	add    rdi,rbx
   1400601f4:	cmove  rdi,rax
   1400601f8:	cmp    rdi,rbx
   1400601fb:	jb     0x14006021c
   1400601fd:	lea    r8d,[r12-0x38]
   140060202:	mov    rdx,rdi
   140060205:	mov    rcx,rbp
   140060208:	call   0x140065b88
   14006020d:	xor    ecx,ecx
   14006020f:	mov    r14,rax
   140060212:	call   0x1400609cc
   140060217:	test   r14,r14
   14006021a:	jne    0x140060244
   14006021c:	lea    rdi,[rbx+0x4]
   140060220:	mov    r8d,0x8
   140060226:	mov    rdx,rdi
   140060229:	mov    rcx,rbp
   14006022c:	call   0x140065b88
   140060231:	xor    ecx,ecx
   140060233:	mov    r14,rax
   140060236:	call   0x1400609cc
   14006023b:	test   r14,r14
   14006023e:	je     0x140060195
   140060244:	mov    r8,QWORD PTR [rip+0x21c95]        # 0x140081ee0
   14006024b:	lea    r9,[r14+rbx*8]
   14006024f:	mov    eax,r8d
   140060252:	lea    rbx,[r14+rdi*8]
   140060256:	and    eax,0x3f
   140060259:	mov    ecx,r12d
   14006025c:	sub    ecx,eax
   14006025e:	mov    rdx,rsi
   140060261:	ror    rdx,cl
   140060264:	mov    rax,rbx
   140060267:	sub    rax,r9
   14006026a:	xor    rdx,r8
   14006026d:	add    rax,0x7
   140060271:	mov    rbp,r14
   140060274:	shr    rax,0x3
   140060278:	mov    rcx,r9
   14006027b:	cmp    r9,rbx
   14006027e:	cmova  rax,rsi
   140060282:	test   rax,rax
   140060285:	je     0x14006029d
   140060287:	inc    rsi
   14006028a:	mov    QWORD PTR [rcx],rdx
   14006028d:	lea    rcx,[rcx+0x8]
   140060291:	cmp    rsi,rax
   140060294:	jne    0x140060287
   140060296:	mov    r8,QWORD PTR [rip+0x21c43]        # 0x140081ee0
   14006029d:	mov    eax,r8d
   1400602a0:	mov    ecx,r12d
   1400602a3:	and    eax,0x3f
   1400602a6:	sub    ecx,eax
   1400602a8:	mov    rax,QWORD PTR [r15+0x8]
   1400602ac:	mov    rdx,QWORD PTR [rax]
   1400602af:	mov    eax,r12d
   1400602b2:	ror    rdx,cl
   1400602b5:	xor    rdx,r8
   1400602b8:	lea    r8,[r9+0x8]
   1400602bc:	mov    QWORD PTR [r9],rdx
   1400602bf:	mov    rdx,QWORD PTR [rip+0x21c1a]        # 0x140081ee0
   1400602c6:	mov    ecx,edx
   1400602c8:	and    ecx,0x3f
   1400602cb:	sub    eax,ecx
   1400602cd:	mov    cl,al
   1400602cf:	mov    rax,QWORD PTR [r15]
   1400602d2:	ror    rbp,cl
   1400602d5:	xor    rbp,rdx
   1400602d8:	mov    rcx,QWORD PTR [rax]
   1400602db:	mov    QWORD PTR [rcx],rbp
   1400602de:	mov    ecx,r12d
   1400602e1:	mov    rdx,QWORD PTR [rip+0x21bf8]        # 0x140081ee0
   1400602e8:	mov    eax,edx
   1400602ea:	and    eax,0x3f
   1400602ed:	sub    ecx,eax
   1400602ef:	mov    rax,QWORD PTR [r15]
   1400602f2:	ror    r8,cl
   1400602f5:	xor    r8,rdx
   1400602f8:	mov    rdx,QWORD PTR [rax]
   1400602fb:	mov    QWORD PTR [rdx+0x8],r8
   1400602ff:	mov    rdx,QWORD PTR [rip+0x21bda]        # 0x140081ee0
   140060306:	mov    eax,edx
   140060308:	and    eax,0x3f
   14006030b:	sub    r12d,eax
   14006030e:	mov    rax,QWORD PTR [r15]
   140060311:	mov    cl,r12b
   140060314:	ror    rbx,cl
   140060317:	xor    rbx,rdx
   14006031a:	mov    rcx,QWORD PTR [rax]
   14006031d:	xor    eax,eax
   14006031f:	mov    QWORD PTR [rcx+0x10],rbx
   140060323:	mov    rbx,QWORD PTR [rsp+0x40]
   140060328:	mov    rbp,QWORD PTR [rsp+0x48]
   14006032d:	mov    rsi,QWORD PTR [rsp+0x50]
   140060332:	mov    rdi,QWORD PTR [rsp+0x58]
   140060337:	add    rsp,0x20
   14006033b:	pop    r15
   14006033d:	pop    r14
   14006033f:	pop    r12
   140060341:	ret    
   140060342:	int3   
   140060343:	int3   
   140060344:	mov    rdx,rcx
   140060347:	lea    rcx,[rip+0x3f37a]        # 0x14009f6c8
   14006034e:	jmp    0x1400603d0
   140060353:	int3   
   140060354:	mov    r11,rsp
   140060357:	mov    QWORD PTR [r11+0x8],rcx
   14006035b:	sub    rsp,0x38
   14006035f:	lea    rax,[r11+0x8]
   140060363:	mov    QWORD PTR [r11-0x18],rax
   140060367:	lea    r9,[r11+0x18]
   14006036b:	mov    eax,0x2
   140060370:	lea    r8,[r11-0x18]
   140060374:	lea    rdx,[r11+0x20]
   140060378:	mov    DWORD PTR [rsp+0x50],eax
   14006037c:	lea    rcx,[r11+0x10]
   140060380:	mov    DWORD PTR [rsp+0x58],eax
   140060384:	call   0x14005ffc8
   140060389:	add    rsp,0x38
   14006038d:	ret    
   14006038e:	int3   
   14006038f:	int3   
   140060390:	xor    r9d,r9d
   140060393:	mov    r8,rcx
   140060396:	test   rcx,rcx
   140060399:	jne    0x14006039f
   14006039b:	or     eax,0xffffffff
   14006039e:	ret    
   14006039f:	mov    rax,QWORD PTR [rcx+0x10]
   1400603a3:	cmp    QWORD PTR [rcx],rax
   1400603a6:	jne    0x1400603cc
   1400603a8:	mov    rdx,QWORD PTR [rip+0x21b31]        # 0x140081ee0
   1400603af:	mov    ecx,0x40
   1400603b4:	mov    eax,edx
   1400603b6:	and    eax,0x3f
   1400603b9:	sub    ecx,eax
   1400603bb:	ror    r9,cl
   1400603be:	xor    r9,rdx
   1400603c1:	mov    QWORD PTR [r8],r9
   1400603c4:	mov    QWORD PTR [r8+0x8],r9
   1400603c8:	mov    QWORD PTR [r8+0x10],r9
   1400603cc:	xor    eax,eax
   1400603ce:	ret    
   1400603cf:	int3   
   1400603d0:	mov    QWORD PTR [rsp+0x10],rdx
   1400603d5:	mov    QWORD PTR [rsp+0x8],rcx
   1400603da:	push   rbp
   1400603db:	mov    rbp,rsp
   1400603de:	sub    rsp,0x40
   1400603e2:	lea    rax,[rbp+0x10]
   1400603e6:	mov    QWORD PTR [rbp-0x18],rax
   1400603ea:	lea    r9,[rbp+0x28]
   1400603ee:	lea    rax,[rbp+0x18]
   1400603f2:	mov    QWORD PTR [rbp-0x10],rax
   1400603f6:	lea    r8,[rbp-0x18]
   1400603fa:	mov    eax,0x2
   1400603ff:	lea    rdx,[rbp-0x20]
   140060403:	lea    rcx,[rbp+0x20]
   140060407:	mov    DWORD PTR [rbp+0x28],eax
   14006040a:	mov    DWORD PTR [rbp-0x20],eax
   14006040d:	call   0x14005ff8c
   140060412:	add    rsp,0x40
   140060416:	pop    rbp
   140060417:	ret    
   140060418:	lea    rax,[rip+0x21c71]        # 0x140082090
   14006041f:	mov    QWORD PTR [rip+0x3f342],rax        # 0x14009f768
   140060426:	mov    al,0x1
   140060428:	ret    
   140060429:	int3   
   14006042a:	int3   
   14006042b:	int3   
   14006042c:	sub    rsp,0x28
   140060430:	lea    rcx,[rip+0x3f291]        # 0x14009f6c8
   140060437:	call   0x140060390
   14006043c:	lea    rcx,[rip+0x3f29d]        # 0x14009f6e0
   140060443:	call   0x140060390
   140060448:	mov    al,0x1
   14006044a:	add    rsp,0x28
   14006044e:	ret    
   14006044f:	int3   
   140060450:	sub    rsp,0x28
   140060454:	call   0x14005ff28
   140060459:	mov    al,0x1
   14006045b:	add    rsp,0x28
   14006045f:	ret    
   140060460:	mov    al,0x1
   140060462:	ret    
   140060463:	int3   
   140060464:	rex push rbx
   140060466:	sub    rsp,0x20
   14006046a:	mov    rdx,QWORD PTR [rip+0x21a6f]        # 0x140081ee0
   140060471:	mov    ecx,0x40
   140060476:	mov    eax,edx
   140060478:	xor    ebx,ebx
   14006047a:	and    eax,0x3f
   14006047d:	sub    ecx,eax
   14006047f:	ror    rbx,cl
   140060482:	xor    rbx,rdx
   140060485:	mov    rcx,rbx
   140060488:	call   0x140060cc4
   14006048d:	mov    rcx,rbx
   140060490:	call   0x14005f67c
   140060495:	mov    rcx,rbx
   140060498:	call   0x140065dac
   14006049d:	mov    rcx,rbx
   1400604a0:	call   0x1400605a8
   1400604a5:	mov    rcx,rbx
   1400604a8:	call   0x14005e494
   1400604ad:	mov    al,0x1
   1400604af:	add    rsp,0x20
   1400604b3:	pop    rbx
   1400604b4:	ret    
   1400604b5:	int3   
   1400604b6:	int3   
   1400604b7:	int3   
   1400604b8:	xor    ecx,ecx
   1400604ba:	jmp    0x140059c94
   1400604bf:	int3   
   1400604c0:	rex push rbx
   1400604c2:	sub    rsp,0x20
   1400604c6:	mov    rcx,QWORD PTR [rip+0x21f6b]        # 0x140082438
   1400604cd:	or     eax,0xffffffff
   1400604d0:	lock xadd DWORD PTR [rcx],eax
   1400604d4:	cmp    eax,0x1
   1400604d7:	jne    0x1400604f8
   1400604d9:	mov    rcx,QWORD PTR [rip+0x21f58]        # 0x140082438
   1400604e0:	lea    rbx,[rip+0x21d29]        # 0x140082210
   1400604e7:	cmp    rcx,rbx
   1400604ea:	je     0x1400604f8
   1400604ec:	call   0x1400609cc
   1400604f1:	mov    QWORD PTR [rip+0x21f40],rbx        # 0x140082438
   1400604f8:	mov    rcx,QWORD PTR [rip+0x3f259]        # 0x14009f758
   1400604ff:	call   0x1400609cc
   140060504:	mov    rcx,QWORD PTR [rip+0x3f255]        # 0x14009f760
   14006050b:	xor    ebx,ebx
   14006050d:	mov    QWORD PTR [rip+0x3f244],rbx        # 0x14009f758
   140060514:	call   0x1400609cc
   140060519:	mov    rcx,QWORD PTR [rip+0x3f1f0]        # 0x14009f710
   140060520:	mov    QWORD PTR [rip+0x3f239],rbx        # 0x14009f760
   140060527:	call   0x1400609cc
   14006052c:	mov    rcx,QWORD PTR [rip+0x3f1e5]        # 0x14009f718
   140060533:	mov    QWORD PTR [rip+0x3f1d6],rbx        # 0x14009f710
   14006053a:	call   0x1400609cc
   14006053f:	mov    al,0x1
   140060541:	mov    QWORD PTR [rip+0x3f1d0],rbx        # 0x14009f718
   140060548:	add    rsp,0x20
   14006054c:	pop    rbx
   14006054d:	ret    
   14006054e:	int3   
   14006054f:	int3   
   140060550:	lea    rdx,[rip+0x11d99]        # 0x1400722f0
   140060557:	lea    rcx,[rip+0x11ca2]        # 0x140072200
   14006055e:	jmp    0x140065c50
   140060563:	int3   
   140060564:	lea    rdx,[rip+0x11d85]        # 0x1400722f0
   14006056b:	lea    rcx,[rip+0x11c8e]        # 0x140072200
   140060572:	jmp    0x140065ce4
   140060577:	int3   
   140060578:	mov    eax,DWORD PTR [rip+0x3f17a]        # 0x14009f6f8
   14006057e:	ret    
   14006057f:	int3   
   140060580:	mov    DWORD PTR [rip+0x3f172],ecx        # 0x14009f6f8
   140060586:	ret    
   140060587:	int3   
   140060588:	mov    rdx,QWORD PTR [rip+0x21951]        # 0x140081ee0
   14006058f:	mov    ecx,edx
   140060591:	xor    rdx,QWORD PTR [rip+0x3f168]        # 0x14009f700
   140060598:	and    ecx,0x3f
   14006059b:	ror    rdx,cl
   14006059e:	test   rdx,rdx
   1400605a1:	setne  al
   1400605a4:	ret    
   1400605a5:	int3   
   1400605a6:	int3   
   1400605a7:	int3   
   1400605a8:	mov    QWORD PTR [rip+0x3f151],rcx        # 0x14009f700
   1400605af:	ret    
   1400605b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400605b5:	push   rdi
   1400605b6:	sub    rsp,0x20
   1400605ba:	mov    rbx,QWORD PTR [rip+0x2191f]        # 0x140081ee0
   1400605c1:	mov    rdi,rcx
   1400605c4:	mov    ecx,ebx
   1400605c6:	xor    rbx,QWORD PTR [rip+0x3f133]        # 0x14009f700
   1400605cd:	and    ecx,0x3f
   1400605d0:	ror    rbx,cl
   1400605d3:	test   rbx,rbx
   1400605d6:	jne    0x1400605dc
   1400605d8:	xor    eax,eax
   1400605da:	jmp    0x1400605ea
   1400605dc:	mov    rcx,rbx
   1400605df:	call   QWORD PTR [rip+0xbf43]        # 0x14006c528
   1400605e5:	mov    rcx,rdi
   1400605e8:	call   rbx
   1400605ea:	mov    rbx,QWORD PTR [rsp+0x30]
   1400605ef:	add    rsp,0x20
   1400605f3:	pop    rdi
   1400605f4:	ret    
   1400605f5:	int3   
   1400605f6:	int3   
   1400605f7:	int3   
   1400605f8:	mov    r8,QWORD PTR [rip+0x218e1]        # 0x140081ee0
   1400605ff:	mov    r9,rcx
   140060602:	mov    edx,r8d
   140060605:	mov    ecx,0x40
   14006060a:	and    edx,0x3f
   14006060d:	sub    ecx,edx
   14006060f:	ror    r9,cl
   140060612:	xor    r9,r8
   140060615:	mov    QWORD PTR [rip+0x3f0e4],r9        # 0x14009f700
   14006061c:	ret    
   14006061d:	int3   
   14006061e:	int3   
   14006061f:	int3   
   140060620:	mov    rax,rsp
   140060623:	mov    QWORD PTR [rax+0x8],rbx
   140060627:	mov    QWORD PTR [rax+0x10],rbp
   14006062b:	mov    QWORD PTR [rax+0x18],rsi
   14006062f:	mov    QWORD PTR [rax+0x20],rdi
   140060633:	push   r14
   140060635:	sub    rsp,0x20
   140060639:	xor    r14d,r14d
   14006063c:	mov    rdi,rdx
   14006063f:	sub    rdi,rcx
   140060642:	mov    rbx,rcx
   140060645:	add    rdi,0x7
   140060649:	mov    ebp,r14d
   14006064c:	shr    rdi,0x3
   140060650:	cmp    rcx,rdx
   140060653:	cmova  rdi,r14
   140060657:	test   rdi,rdi
   14006065a:	je     0x14006067b
   14006065c:	mov    rsi,QWORD PTR [rbx]
   14006065f:	test   rsi,rsi
   140060662:	je     0x14006066f
   140060664:	mov    rcx,rsi
   140060667:	call   QWORD PTR [rip+0xbebb]        # 0x14006c528
   14006066d:	call   rsi
   14006066f:	add    rbx,0x8
   140060673:	inc    rbp
   140060676:	cmp    rbp,rdi
   140060679:	jne    0x14006065c
   14006067b:	mov    rbx,QWORD PTR [rsp+0x30]
   140060680:	mov    rbp,QWORD PTR [rsp+0x38]
   140060685:	mov    rsi,QWORD PTR [rsp+0x40]
   14006068a:	mov    rdi,QWORD PTR [rsp+0x48]
   14006068f:	add    rsp,0x20
   140060693:	pop    r14
   140060695:	ret    
   140060696:	int3   
   140060697:	int3   
   140060698:	mov    QWORD PTR [rsp+0x8],rbx
   14006069d:	mov    QWORD PTR [rsp+0x10],rsi
   1400606a2:	push   rdi
   1400606a3:	sub    rsp,0x20
   1400606a7:	mov    rsi,rdx
   1400606aa:	mov    rbx,rcx
   1400606ad:	cmp    rcx,rdx
   1400606b0:	je     0x1400606d2
   1400606b2:	mov    rdi,QWORD PTR [rbx]
   1400606b5:	test   rdi,rdi
   1400606b8:	je     0x1400606c9
   1400606ba:	mov    rcx,rdi
   1400606bd:	call   QWORD PTR [rip+0xbe65]        # 0x14006c528
   1400606c3:	call   rdi
   1400606c5:	test   eax,eax
   1400606c7:	jne    0x1400606d4
   1400606c9:	add    rbx,0x8
   1400606cd:	cmp    rbx,rsi
   1400606d0:	jmp    0x1400606b0
   1400606d2:	xor    eax,eax
   1400606d4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400606d9:	mov    rsi,QWORD PTR [rsp+0x38]
   1400606de:	add    rsp,0x20
   1400606e2:	pop    rdi
   1400606e3:	ret    
   1400606e4:	sub    rsp,0x28
   1400606e8:	call   QWORD PTR [rip+0xbd72]        # 0x14006c460
   1400606ee:	mov    QWORD PTR [rip+0x3f02b],rax        # 0x14009f720
   1400606f5:	call   QWORD PTR [rip+0xbc4d]        # 0x14006c348
   1400606fb:	mov    QWORD PTR [rip+0x3f026],rax        # 0x14009f728
   140060702:	mov    al,0x1
   140060704:	add    rsp,0x28
   140060708:	ret    
   140060709:	int3   
   14006070a:	int3   
   14006070b:	int3   
   14006070c:	lea    rax,[rip+0x3eff5]        # 0x14009f708
   140060713:	ret    
   140060714:	lea    rax,[rip+0x3eff5]        # 0x14009f710
   14006071b:	ret    
   14006071c:	mov    eax,0x1
   140060721:	xchg   DWORD PTR [rip+0x3f011],eax        # 0x14009f738
   140060727:	ret    
   140060728:	rex push rdi
   14006072a:	sub    rsp,0x20
   14006072e:	lea    rdi,[rip+0x2195b]        # 0x140082090
   140060735:	cmp    QWORD PTR [rip+0x3f02c],rdi        # 0x14009f768
   14006073c:	je     0x140060769
   14006073e:	mov    ecx,0x4
   140060743:	call   0x140062874
   140060748:	nop
   140060749:	mov    rdx,rdi
   14006074c:	lea    rcx,[rip+0x3f015]        # 0x14009f768
   140060753:	call   0x140066898
   140060758:	mov    QWORD PTR [rip+0x3f009],rax        # 0x14009f768
   14006075f:	mov    ecx,0x4
   140060764:	call   0x1400628c8
   140060769:	add    rsp,0x20
   14006076d:	pop    rdi
   14006076e:	ret    
   14006076f:	int3   
   140060770:	rex push rbx
   140060772:	sub    rsp,0x20
   140060776:	mov    ebx,ecx
   140060778:	call   0x140061588
   14006077d:	mov    r8d,DWORD PTR [rax+0x3a8]
   140060784:	mov    edx,r8d
   140060787:	and    dl,0x2
   14006078a:	neg    dl
   14006078c:	sbb    ecx,ecx
   14006078e:	cmp    ebx,0xffffffff
   140060791:	je     0x1400607c9
   140060793:	test   ebx,ebx
   140060795:	je     0x1400607d0
   140060797:	cmp    ebx,0x1
   14006079a:	je     0x1400607bc
   14006079c:	cmp    ebx,0x2
   14006079f:	je     0x1400607b6
   1400607a1:	call   0x140060e94
   1400607a6:	mov    DWORD PTR [rax],0x16
   1400607ac:	call   0x140060d74
   1400607b1:	or     eax,0xffffffff
   1400607b4:	jmp    0x1400607d3
   1400607b6:	and    r8d,0xfffffffd
   1400607ba:	jmp    0x1400607c0
   1400607bc:	or     r8d,0x2
   1400607c0:	mov    DWORD PTR [rax+0x3a8],r8d
   1400607c7:	jmp    0x1400607d0
   1400607c9:	or     DWORD PTR [rip+0x22020],0xffffffff        # 0x1400827f0
   1400607d0:	lea    eax,[rcx+0x2]
   1400607d3:	add    rsp,0x20
   1400607d7:	pop    rbx
   1400607d8:	ret    
   1400607d9:	int3   
   1400607da:	int3   
   1400607db:	int3   
   1400607dc:	mov    eax,DWORD PTR [rip+0x3ef5a]        # 0x14009f73c
   1400607e2:	ret    
   1400607e3:	int3   
   1400607e4:	sub    rsp,0x28
   1400607e8:	cmp    ecx,0x1
   1400607eb:	jbe    0x140060802
   1400607ed:	call   0x140060e94
   1400607f2:	mov    DWORD PTR [rax],0x16
   1400607f8:	call   0x140060d74
   1400607fd:	or     eax,0xffffffff
   140060800:	jmp    0x14006080a
   140060802:	xchg   DWORD PTR [rip+0x3ef34],ecx        # 0x14009f73c
   140060808:	mov    eax,ecx
   14006080a:	add    rsp,0x28
   14006080e:	ret    
   14006080f:	int3   
   140060810:	lea    rax,[rip+0x3ef29]        # 0x14009f740
   140060817:	ret    
   140060818:	mov    QWORD PTR [rsp+0x8],rbx
   14006081d:	mov    QWORD PTR [rsp+0x10],rbp
   140060822:	mov    QWORD PTR [rsp+0x18],rsi
   140060827:	push   rdi
   140060828:	sub    rsp,0x30
   14006082c:	xor    ebp,ebp
   14006082e:	mov    rdi,rcx
   140060831:	test   rcx,rcx
   140060834:	jne    0x14006084d
   140060836:	xor    eax,eax
   140060838:	mov    rbx,QWORD PTR [rsp+0x40]
   14006083d:	mov    rbp,QWORD PTR [rsp+0x48]
   140060842:	mov    rsi,QWORD PTR [rsp+0x50]
   140060847:	add    rsp,0x30
   14006084b:	pop    rdi
   14006084c:	ret    
   14006084d:	or     rbx,0xffffffffffffffff
   140060851:	inc    rbx
   140060854:	cmp    WORD PTR [rcx+rbx*2],bp
   140060858:	jne    0x140060851
   14006085a:	inc    rbx
   14006085d:	lea    rcx,[rbx+rbx*1]
   140060861:	call   0x14005d520
   140060866:	mov    rsi,rax
   140060869:	test   rax,rax
   14006086c:	je     0x140060836
   14006086e:	mov    r8,rdi
   140060871:	mov    rdx,rbx
   140060874:	mov    rcx,rax
   140060877:	call   0x140062fb8
   14006087c:	test   eax,eax
   14006087e:	jne    0x140060885
   140060880:	mov    rax,rsi
   140060883:	jmp    0x140060838
   140060885:	xor    r9d,r9d
   140060888:	mov    QWORD PTR [rsp+0x20],rbp
   14006088d:	xor    r8d,r8d
   140060890:	xor    edx,edx
   140060892:	xor    ecx,ecx
   140060894:	call   0x140060d94
   140060899:	int3   
   14006089a:	int3   
   14006089b:	int3   
   14006089c:	mov    QWORD PTR [rsp+0x8],rbx
   1400608a1:	mov    QWORD PTR [rsp+0x10],rsi
   1400608a6:	push   rdi
   1400608a7:	sub    rsp,0x30
   1400608ab:	mov    rdi,rcx
   1400608ae:	test   rcx,rcx
   1400608b1:	jne    0x1400608c5
   1400608b3:	xor    eax,eax
   1400608b5:	mov    rbx,QWORD PTR [rsp+0x40]
   1400608ba:	mov    rsi,QWORD PTR [rsp+0x48]
   1400608bf:	add    rsp,0x30
   1400608c3:	pop    rdi
   1400608c4:	ret    
   1400608c5:	or     rbx,0xffffffffffffffff
   1400608c9:	inc    rbx
   1400608cc:	cmp    BYTE PTR [rcx+rbx*1],0x0
   1400608d0:	jne    0x1400608c9
   1400608d2:	lea    rcx,[rbx+0x1]
   1400608d6:	call   0x14005d520
   1400608db:	mov    rsi,rax
   1400608de:	test   rax,rax
   1400608e1:	je     0x1400608b3
   1400608e3:	mov    r8,rdi
   1400608e6:	lea    rdx,[rbx+0x1]
   1400608ea:	mov    rcx,rax
   1400608ed:	call   0x140060914
   1400608f2:	test   eax,eax
   1400608f4:	jne    0x1400608fb
   1400608f6:	mov    rax,rsi
   1400608f9:	jmp    0x1400608b5
   1400608fb:	and    QWORD PTR [rsp+0x20],0x0
   140060901:	xor    r9d,r9d
   140060904:	xor    r8d,r8d
   140060907:	xor    edx,edx
   140060909:	xor    ecx,ecx
   14006090b:	call   0x140060d94
   140060910:	int3   
   140060911:	int3   
   140060912:	int3   
   140060913:	int3   
   140060914:	rex push rbx
   140060916:	sub    rsp,0x20
   14006091a:	xor    ebx,ebx
   14006091c:	test   rcx,rcx
   14006091f:	je     0x14006092d
   140060921:	test   rdx,rdx
   140060924:	je     0x14006092d
   140060926:	test   r8,r8
   140060929:	jne    0x140060946
   14006092b:	mov    BYTE PTR [rcx],bl
   14006092d:	call   0x140060e94
   140060932:	mov    ebx,0x16
   140060937:	mov    DWORD PTR [rax],ebx
   140060939:	call   0x140060d74
   14006093e:	mov    eax,ebx
   140060940:	add    rsp,0x20
   140060944:	pop    rbx
   140060945:	ret    
   140060946:	mov    r9,rcx
   140060949:	sub    r8,rcx
   14006094c:	mov    al,BYTE PTR [r8+r9*1]
   140060950:	mov    BYTE PTR [r9],al
   140060953:	inc    r9
   140060956:	test   al,al
   140060958:	je     0x140060960
   14006095a:	sub    rdx,0x1
   14006095e:	jne    0x14006094c
   140060960:	test   rdx,rdx
   140060963:	jne    0x14006093e
   140060965:	mov    BYTE PTR [rcx],bl
   140060967:	call   0x140060e94
   14006096c:	mov    ebx,0x22
   140060971:	jmp    0x140060937
   140060973:	int3   
   140060974:	sub    rsp,0x28
   140060978:	call   0x140065d7c
   14006097d:	test   rax,rax
   140060980:	je     0x14006098c
   140060982:	mov    ecx,0x16
   140060987:	call   0x140065dcc
   14006098c:	test   BYTE PTR [rip+0x216ed],0x2        # 0x140082080
   140060993:	je     0x1400609be
   140060995:	mov    ecx,0x17
   14006099a:	call   0x14006a2de
   14006099f:	test   eax,eax
   1400609a1:	je     0x1400609aa
   1400609a3:	mov    ecx,0x7
   1400609a8:	int    0x29
   1400609aa:	mov    r8d,0x1
   1400609b0:	mov    edx,0x40000015
   1400609b5:	lea    ecx,[r8+0x2]
   1400609b9:	call   0x140060b68
   1400609be:	mov    ecx,0x3
   1400609c3:	call   0x14005e4bc
   1400609c8:	int3   
   1400609c9:	int3   
   1400609ca:	int3   
   1400609cb:	int3   
   1400609cc:	test   rcx,rcx
   1400609cf:	je     0x140060a08
   1400609d1:	push   rbx
   1400609d2:	sub    rsp,0x20
   1400609d6:	mov    r8,rcx
   1400609d9:	xor    edx,edx
   1400609db:	mov    rcx,QWORD PTR [rip+0x3f57e]        # 0x14009ff60
   1400609e2:	call   QWORD PTR [rip+0xba88]        # 0x14006c470
   1400609e8:	test   eax,eax
   1400609ea:	jne    0x140060a03
   1400609ec:	call   0x140060e94
   1400609f1:	mov    rbx,rax
   1400609f4:	call   QWORD PTR [rip+0xb7ce]        # 0x14006c1c8
   1400609fa:	mov    ecx,eax
   1400609fc:	call   0x140060ddc
   140060a01:	mov    DWORD PTR [rbx],eax
   140060a03:	add    rsp,0x20
   140060a07:	pop    rbx
   140060a08:	ret    
   140060a09:	int3   
   140060a0a:	int3   
   140060a0b:	int3   
   140060a0c:	rex push rbx
   140060a0e:	sub    rsp,0x20
   140060a12:	mov    rbx,rcx
   140060a15:	cmp    rcx,0xffffffffffffffe0
   140060a19:	ja     0x140060a57
   140060a1b:	test   rcx,rcx
   140060a1e:	mov    eax,0x1
   140060a23:	cmove  rbx,rax
   140060a27:	jmp    0x140060a3e
   140060a29:	call   0x1400607dc
   140060a2e:	test   eax,eax
   140060a30:	je     0x140060a57
   140060a32:	mov    rcx,rbx
   140060a35:	call   0x14005f684
   140060a3a:	test   eax,eax
   140060a3c:	je     0x140060a57
   140060a3e:	mov    rcx,QWORD PTR [rip+0x3f51b]        # 0x14009ff60
   140060a45:	mov    r8,rbx
   140060a48:	xor    edx,edx
   140060a4a:	call   QWORD PTR [rip+0xba28]        # 0x14006c478
   140060a50:	test   rax,rax
   140060a53:	je     0x140060a29
   140060a55:	jmp    0x140060a64
   140060a57:	call   0x140060e94
   140060a5c:	mov    DWORD PTR [rax],0xc
   140060a62:	xor    eax,eax
   140060a64:	add    rsp,0x20
   140060a68:	pop    rbx
   140060a69:	ret    
   140060a6a:	int3   
   140060a6b:	int3   
   140060a6c:	rex push rbx
   140060a6e:	sub    rsp,0x20
   140060a72:	mov    r8,rdx
   140060a75:	mov    rbx,rcx
   140060a78:	test   rcx,rcx
   140060a7b:	je     0x140060a8b
   140060a7d:	xor    edx,edx
   140060a7f:	lea    rax,[rdx-0x20]
   140060a83:	div    rbx
   140060a86:	cmp    rax,r8
   140060a89:	jb     0x140060ace
   140060a8b:	imul   rbx,r8
   140060a8f:	mov    eax,0x1
   140060a94:	test   rbx,rbx
   140060a97:	cmove  rbx,rax
   140060a9b:	jmp    0x140060ab2
   140060a9d:	call   0x1400607dc
   140060aa2:	test   eax,eax
   140060aa4:	je     0x140060ace
   140060aa6:	mov    rcx,rbx
   140060aa9:	call   0x14005f684
   140060aae:	test   eax,eax
   140060ab0:	je     0x140060ace
   140060ab2:	mov    rcx,QWORD PTR [rip+0x3f4a7]        # 0x14009ff60
   140060ab9:	mov    r8,rbx
   140060abc:	mov    edx,0x8
   140060ac1:	call   QWORD PTR [rip+0xb9b1]        # 0x14006c478
   140060ac7:	test   rax,rax
   140060aca:	je     0x140060a9d
   140060acc:	jmp    0x140060adb
   140060ace:	call   0x140060e94
   140060ad3:	mov    DWORD PTR [rax],0xc
   140060ad9:	xor    eax,eax
   140060adb:	add    rsp,0x20
   140060adf:	pop    rbx
   140060ae0:	ret    
   140060ae1:	int3   
   140060ae2:	int3   
   140060ae3:	int3   
   140060ae4:	mov    QWORD PTR [rsp+0x8],rbx
   140060ae9:	push   rdi
   140060aea:	sub    rsp,0x20
   140060aee:	mov    rbx,rdx
   140060af1:	mov    rdi,rcx
   140060af4:	test   rcx,rcx
   140060af7:	jne    0x140060b03
   140060af9:	mov    rcx,rdx
   140060afc:	call   0x140060a0c
   140060b01:	jmp    0x140060b5b
   140060b03:	test   rdx,rdx
   140060b06:	jne    0x140060b0f
   140060b08:	call   0x1400609cc
   140060b0d:	jmp    0x140060b59
   140060b0f:	cmp    rdx,0xffffffffffffffe0
   140060b13:	ja     0x140060b4e
   140060b15:	mov    r9,rdx
   140060b18:	mov    r8,rcx
   140060b1b:	jmp    0x140060b38
   140060b1d:	call   0x1400607dc
   140060b22:	test   eax,eax
   140060b24:	je     0x140060b4e
   140060b26:	mov    rcx,rbx
   140060b29:	call   0x14005f684
   140060b2e:	test   eax,eax
   140060b30:	je     0x140060b4e
   140060b32:	mov    r9,rbx
   140060b35:	mov    r8,rdi
   140060b38:	mov    rcx,QWORD PTR [rip+0x3f421]        # 0x14009ff60
   140060b3f:	xor    edx,edx
   140060b41:	call   QWORD PTR [rip+0xb939]        # 0x14006c480
   140060b47:	test   rax,rax
   140060b4a:	je     0x140060b1d
   140060b4c:	jmp    0x140060b5b
   140060b4e:	call   0x140060e94
   140060b53:	mov    DWORD PTR [rax],0xc
   140060b59:	xor    eax,eax
   140060b5b:	mov    rbx,QWORD PTR [rsp+0x30]
   140060b60:	add    rsp,0x20
   140060b64:	pop    rdi
   140060b65:	ret    
   140060b66:	int3   
   140060b67:	int3   
   140060b68:	mov    QWORD PTR [rsp+0x10],rbx
   140060b6d:	mov    QWORD PTR [rsp+0x18],rsi
   140060b72:	push   rbp
   140060b73:	push   rdi
   140060b74:	push   r14
   140060b76:	lea    rbp,[rsp-0x4f0]
   140060b7e:	sub    rsp,0x5f0
   140060b85:	mov    rax,QWORD PTR [rip+0x21354]        # 0x140081ee0
   140060b8c:	xor    rax,rsp
   140060b8f:	mov    QWORD PTR [rbp+0x4e0],rax
   140060b96:	mov    edi,r8d
   140060b99:	mov    esi,edx
   140060b9b:	mov    ebx,ecx
   140060b9d:	cmp    ecx,0xffffffff
   140060ba0:	je     0x140060ba7
   140060ba2:	call   0x140056d68
   140060ba7:	xor    edx,edx
   140060ba9:	lea    rcx,[rsp+0x70]
   140060bae:	mov    r8d,0x98
   140060bb4:	call   0x140058f40
   140060bb9:	xor    edx,edx
   140060bbb:	lea    rcx,[rbp+0x10]
   140060bbf:	mov    r8d,0x4d0
   140060bc5:	call   0x140058f40
   140060bca:	lea    rax,[rsp+0x70]
   140060bcf:	mov    QWORD PTR [rsp+0x48],rax
   140060bd4:	lea    rcx,[rbp+0x10]
   140060bd8:	lea    rax,[rbp+0x10]
   140060bdc:	mov    QWORD PTR [rsp+0x50],rax
   140060be1:	call   QWORD PTR [rip+0xb7a1]        # 0x14006c388
   140060be7:	mov    r14,QWORD PTR [rbp+0x108]
   140060bee:	lea    rdx,[rsp+0x40]
   140060bf3:	mov    rcx,r14
   140060bf6:	xor    r8d,r8d
   140060bf9:	call   QWORD PTR [rip+0xb791]        # 0x14006c390
   140060bff:	test   rax,rax
   140060c02:	je     0x140060c3a
   140060c04:	and    QWORD PTR [rsp+0x38],0x0
   140060c0a:	lea    rcx,[rsp+0x60]
   140060c0f:	mov    rdx,QWORD PTR [rsp+0x40]
   140060c14:	mov    r9,rax
   140060c17:	mov    QWORD PTR [rsp+0x30],rcx
   140060c1c:	mov    r8,r14
   140060c1f:	lea    rcx,[rsp+0x58]
   140060c24:	mov    QWORD PTR [rsp+0x28],rcx
   140060c29:	lea    rcx,[rbp+0x10]
   140060c2d:	mov    QWORD PTR [rsp+0x20],rcx
   140060c32:	xor    ecx,ecx
   140060c34:	call   QWORD PTR [rip+0xb75e]        # 0x14006c398
   140060c3a:	mov    rax,QWORD PTR [rbp+0x508]
   140060c41:	mov    QWORD PTR [rbp+0x108],rax
   140060c48:	lea    rax,[rbp+0x508]
   140060c4f:	add    rax,0x8
   140060c53:	mov    DWORD PTR [rsp+0x70],esi
   140060c57:	mov    QWORD PTR [rbp+0xa8],rax
   140060c5e:	mov    rax,QWORD PTR [rbp+0x508]
   140060c65:	mov    QWORD PTR [rbp-0x80],rax
   140060c69:	mov    DWORD PTR [rsp+0x74],edi
   140060c6d:	call   QWORD PTR [rip+0xb755]        # 0x14006c3c8
   140060c73:	xor    ecx,ecx
   140060c75:	mov    edi,eax
   140060c77:	call   QWORD PTR [rip+0xb72b]        # 0x14006c3a8
   140060c7d:	lea    rcx,[rsp+0x48]
   140060c82:	call   QWORD PTR [rip+0xb718]        # 0x14006c3a0
   140060c88:	test   eax,eax
   140060c8a:	jne    0x140060c9c
   140060c8c:	test   edi,edi
   140060c8e:	jne    0x140060c9c
   140060c90:	cmp    ebx,0xffffffff
   140060c93:	je     0x140060c9c
   140060c95:	mov    ecx,ebx
   140060c97:	call   0x140056d68
   140060c9c:	mov    rcx,QWORD PTR [rbp+0x4e0]
   140060ca3:	xor    rcx,rsp
   140060ca6:	call   0x140055f90
   140060cab:	lea    r11,[rsp+0x5f0]
   140060cb3:	mov    rbx,QWORD PTR [r11+0x28]
   140060cb7:	mov    rsi,QWORD PTR [r11+0x30]
   140060cbb:	mov    rsp,r11
   140060cbe:	pop    r14
   140060cc0:	pop    rdi
   140060cc1:	pop    rbp
   140060cc2:	ret    
   140060cc3:	int3   
   140060cc4:	mov    QWORD PTR [rip+0x3ea7d],rcx        # 0x14009f748
   140060ccb:	ret    
   140060ccc:	mov    rax,rsp
   140060ccf:	mov    QWORD PTR [rax+0x8],rbx
   140060cd3:	mov    QWORD PTR [rax+0x10],rbp
   140060cd7:	mov    QWORD PTR [rax+0x18],rsi
   140060cdb:	mov    QWORD PTR [rax+0x20],rdi
   140060cdf:	push   r14
   140060ce1:	sub    rsp,0x30
   140060ce5:	mov    edi,r9d
   140060ce8:	mov    rsi,r8
   140060ceb:	mov    rbp,rdx
   140060cee:	mov    r14,rcx
   140060cf1:	call   0x14006161c
   140060cf6:	test   rax,rax
   140060cf9:	je     0x140060d3c
   140060cfb:	mov    rbx,QWORD PTR [rax+0x3b8]
   140060d02:	test   rbx,rbx
   140060d05:	je     0x140060d3c
   140060d07:	mov    rcx,rbx
   140060d0a:	call   QWORD PTR [rip+0xb818]        # 0x14006c528
   140060d10:	mov    r9d,edi
   140060d13:	mov    r8,rsi
   140060d16:	mov    rdx,rbp
   140060d19:	mov    rcx,r14
   140060d1c:	mov    rax,rbx
   140060d1f:	mov    rbx,QWORD PTR [rsp+0x40]
   140060d24:	mov    rbp,QWORD PTR [rsp+0x48]
   140060d29:	mov    rsi,QWORD PTR [rsp+0x50]
   140060d2e:	mov    rdi,QWORD PTR [rsp+0x58]
   140060d33:	add    rsp,0x30
   140060d37:	pop    r14
   140060d39:	rex.W jmp rax
   140060d3c:	mov    rbx,QWORD PTR [rip+0x2119d]        # 0x140081ee0
   140060d43:	mov    ecx,ebx
   140060d45:	xor    rbx,QWORD PTR [rip+0x3e9fc]        # 0x14009f748
   140060d4c:	and    ecx,0x3f
   140060d4f:	ror    rbx,cl
   140060d52:	test   rbx,rbx
   140060d55:	jne    0x140060d07
   140060d57:	mov    rax,QWORD PTR [rsp+0x60]
   140060d5c:	mov    r9d,edi
   140060d5f:	mov    r8,rsi
   140060d62:	mov    QWORD PTR [rsp+0x20],rax
   140060d67:	mov    rdx,rbp
   140060d6a:	mov    rcx,r14
   140060d6d:	call   0x140060d94
   140060d72:	int3   
   140060d73:	int3   
   140060d74:	sub    rsp,0x38
   140060d78:	and    QWORD PTR [rsp+0x20],0x0
   140060d7e:	xor    r9d,r9d
   140060d81:	xor    r8d,r8d
   140060d84:	xor    edx,edx
   140060d86:	xor    ecx,ecx
   140060d88:	call   0x140060ccc
   140060d8d:	add    rsp,0x38
   140060d91:	ret    
   140060d92:	int3   
   140060d93:	int3   
   140060d94:	sub    rsp,0x28
   140060d98:	mov    ecx,0x17
   140060d9d:	call   0x14006a2de
   140060da2:	test   eax,eax
   140060da4:	je     0x140060dad
   140060da6:	mov    ecx,0x5
   140060dab:	int    0x29
   140060dad:	mov    r8d,0x1
   140060db3:	mov    edx,0xc0000417
   140060db8:	lea    ecx,[r8+0x1]
   140060dbc:	call   0x140060b68
   140060dc1:	call   QWORD PTR [rip+0xb2c1]        # 0x14006c088
   140060dc7:	mov    rcx,rax
   140060dca:	mov    edx,0xc0000417
   140060dcf:	add    rsp,0x28
   140060dd3:	rex.W jmp QWORD PTR [rip+0xb5d6]        # 0x14006c3b0
   140060dda:	int3   
   140060ddb:	int3   
   140060ddc:	xor    eax,eax
   140060dde:	lea    r9,[rip+0x1150b]        # 0x1400722f0
   140060de5:	mov    rdx,r9
   140060de8:	lea    r8d,[rax+0x8]
   140060dec:	cmp    ecx,DWORD PTR [rdx]
   140060dee:	je     0x140060e1b
   140060df0:	inc    eax
   140060df2:	add    rdx,r8
   140060df5:	cmp    eax,0x2d
   140060df8:	jb     0x140060dec
   140060dfa:	lea    eax,[rcx-0x13]
   140060dfd:	cmp    eax,0x11
   140060e00:	ja     0x140060e08
   140060e02:	mov    eax,0xd
   140060e07:	ret    
   140060e08:	add    ecx,0xffffff44
   140060e0e:	mov    eax,0x16
   140060e13:	cmp    ecx,0xe
   140060e16:	cmovbe eax,r8d
   140060e1a:	ret    
   140060e1b:	mov    eax,DWORD PTR [r9+rax*8+0x4]
   140060e20:	ret    
   140060e21:	int3   
   140060e22:	int3   
   140060e23:	int3   
   140060e24:	mov    QWORD PTR [rsp+0x8],rbx
   140060e29:	push   rdi
   140060e2a:	sub    rsp,0x20
   140060e2e:	mov    edi,ecx
   140060e30:	call   0x14006161c
   140060e35:	test   rax,rax
   140060e38:	jne    0x140060e43
   140060e3a:	lea    rax,[rip+0x21247]        # 0x140082088
   140060e41:	jmp    0x140060e47
   140060e43:	add    rax,0x24
   140060e47:	mov    DWORD PTR [rax],edi
   140060e49:	call   0x14006161c
   140060e4e:	lea    rbx,[rip+0x2122f]        # 0x140082084
   140060e55:	test   rax,rax
   140060e58:	je     0x140060e5e
   140060e5a:	lea    rbx,[rax+0x20]
   140060e5e:	mov    ecx,edi
   140060e60:	call   0x140060ddc
   140060e65:	mov    DWORD PTR [rbx],eax
   140060e67:	mov    rbx,QWORD PTR [rsp+0x30]
   140060e6c:	add    rsp,0x20
   140060e70:	pop    rdi
   140060e71:	ret    
   140060e72:	int3   
   140060e73:	int3   
   140060e74:	sub    rsp,0x28
   140060e78:	call   0x14006161c
   140060e7d:	test   rax,rax
   140060e80:	jne    0x140060e8b
   140060e82:	lea    rax,[rip+0x211ff]        # 0x140082088
   140060e89:	jmp    0x140060e8f
   140060e8b:	add    rax,0x24
   140060e8f:	add    rsp,0x28
   140060e93:	ret    
   140060e94:	sub    rsp,0x28
   140060e98:	call   0x14006161c
   140060e9d:	test   rax,rax
   140060ea0:	jne    0x140060eab
   140060ea2:	lea    rax,[rip+0x211db]        # 0x140082084
   140060ea9:	jmp    0x140060eaf
   140060eab:	add    rax,0x20
   140060eaf:	add    rsp,0x28
   140060eb3:	ret    
   140060eb4:	rex push rbx
   140060eb6:	sub    rsp,0x40
   140060eba:	movsxd rbx,ecx
   140060ebd:	mov    eax,DWORD PTR [rip+0x3e875]        # 0x14009f738
   140060ec3:	test   eax,eax
   140060ec5:	je     0x140060f12
   140060ec7:	xor    edx,edx
   140060ec9:	lea    rcx,[rsp+0x20]
   140060ece:	call   0x14005b174
   140060ed3:	mov    rax,QWORD PTR [rsp+0x28]
   140060ed8:	cmp    DWORD PTR [rax+0x8],0x1
   140060edc:	jle    0x140060ef3
   140060ede:	lea    r8,[rsp+0x28]
   140060ee3:	mov    edx,0x4
   140060ee8:	mov    ecx,ebx
   140060eea:	call   0x14006271c
   140060eef:	mov    edx,eax
   140060ef1:	jmp    0x140060efd
   140060ef3:	mov    rax,QWORD PTR [rax]
   140060ef6:	movzx  edx,WORD PTR [rax+rbx*2]
   140060efa:	and    edx,0x4
   140060efd:	cmp    BYTE PTR [rsp+0x38],0x0
   140060f02:	je     0x140060f20
   140060f04:	mov    rax,QWORD PTR [rsp+0x20]
   140060f09:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   140060f10:	jmp    0x140060f20
   140060f12:	mov    rax,QWORD PTR [rip+0x21177]        # 0x140082090
   140060f19:	movzx  edx,WORD PTR [rax+rbx*2]
   140060f1d:	and    edx,0x4
   140060f20:	mov    eax,edx
   140060f22:	add    rsp,0x40
   140060f26:	pop    rbx
   140060f27:	ret    
   140060f28:	mov    rax,rsp
   140060f2b:	mov    QWORD PTR [rax+0x8],rbx
   140060f2f:	mov    QWORD PTR [rax+0x10],rbp
   140060f33:	mov    QWORD PTR [rax+0x18],rsi
   140060f37:	mov    QWORD PTR [rax+0x20],rdi
   140060f3b:	push   r14
   140060f3d:	sub    rsp,0x50
   140060f41:	xor    r14d,r14d
   140060f44:	mov    rbp,r8
   140060f47:	mov    rsi,rdx
   140060f4a:	mov    rdi,rcx
   140060f4d:	test   rdx,rdx
   140060f50:	je     0x140060f65
   140060f52:	test   r8,r8
   140060f55:	je     0x140060f65
   140060f57:	cmp    BYTE PTR [rdx],r14b
   140060f5a:	jne    0x140060f82
   140060f5c:	test   rcx,rcx
   140060f5f:	je     0x140060f65
   140060f61:	mov    WORD PTR [rcx],r14w
   140060f65:	xor    eax,eax
   140060f67:	mov    rbx,QWORD PTR [rsp+0x60]
   140060f6c:	mov    rbp,QWORD PTR [rsp+0x68]
   140060f71:	mov    rsi,QWORD PTR [rsp+0x70]
   140060f76:	mov    rdi,QWORD PTR [rsp+0x78]
   140060f7b:	add    rsp,0x50
   140060f7f:	pop    r14
   140060f81:	ret    
   140060f82:	mov    rdx,r9
   140060f85:	lea    rcx,[rsp+0x30]
   140060f8a:	call   0x14005b174
   140060f8f:	mov    rax,QWORD PTR [rsp+0x38]
   140060f94:	cmp    QWORD PTR [rax+0x138],r14
   140060f9b:	jne    0x140060fb2
   140060f9d:	test   rdi,rdi
   140060fa0:	je     0x140060fa8
   140060fa2:	movzx  eax,BYTE PTR [rsi]
   140060fa5:	mov    WORD PTR [rdi],ax
   140060fa8:	mov    ebx,0x1
   140060fad:	jmp    0x140061056
   140060fb2:	movzx  ecx,BYTE PTR [rsi]
   140060fb5:	lea    rdx,[rsp+0x38]
   140060fba:	call   0x1400641a8
   140060fbf:	mov    ebx,0x1
   140060fc4:	test   eax,eax
   140060fc6:	je     0x140061019
   140060fc8:	mov    rcx,QWORD PTR [rsp+0x38]
   140060fcd:	mov    r9d,DWORD PTR [rcx+0x8]
   140060fd1:	cmp    r9d,ebx
   140060fd4:	jle    0x140061005
   140060fd6:	cmp    ebp,r9d
   140060fd9:	jl     0x140061005
   140060fdb:	mov    ecx,DWORD PTR [rcx+0xc]
   140060fde:	lea    edx,[rbx+0x8]
   140060fe1:	mov    eax,r14d
   140060fe4:	test   rdi,rdi
   140060fe7:	mov    r8,rsi
   140060fea:	setne  al
   140060fed:	mov    DWORD PTR [rsp+0x28],eax
   140060ff1:	mov    QWORD PTR [rsp+0x20],rdi
   140060ff6:	call   QWORD PTR [rip+0xb2a4]        # 0x14006c2a0
   140060ffc:	mov    rcx,QWORD PTR [rsp+0x38]
   140061001:	test   eax,eax
   140061003:	jne    0x140061014
   140061005:	movsxd rax,DWORD PTR [rcx+0x8]
   140061009:	cmp    rbp,rax
   14006100c:	jb     0x140061048
   14006100e:	cmp    BYTE PTR [rsi+0x1],r14b
   140061012:	je     0x140061048
   140061014:	mov    ebx,DWORD PTR [rcx+0x8]
   140061017:	jmp    0x140061056
   140061019:	mov    eax,r14d
   14006101c:	test   rdi,rdi
   14006101f:	mov    r9d,ebx
   140061022:	mov    r8,rsi
   140061025:	setne  al
   140061028:	mov    edx,0x9
   14006102d:	mov    DWORD PTR [rsp+0x28],eax
   140061031:	mov    rax,QWORD PTR [rsp+0x38]
   140061036:	mov    QWORD PTR [rsp+0x20],rdi
   14006103b:	mov    ecx,DWORD PTR [rax+0xc]
   14006103e:	call   QWORD PTR [rip+0xb25c]        # 0x14006c2a0
   140061044:	test   eax,eax
   140061046:	jne    0x140061056
   140061048:	call   0x140060e94
   14006104d:	or     ebx,0xffffffff
   140061050:	mov    DWORD PTR [rax],0x2a
   140061056:	cmp    BYTE PTR [rsp+0x48],r14b
   14006105b:	je     0x140061069
   14006105d:	mov    rcx,QWORD PTR [rsp+0x30]
   140061062:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   140061069:	mov    eax,ebx
   14006106b:	jmp    0x140060f67
   140061070:	xor    r9d,r9d
   140061073:	jmp    0x140060f28
   140061078:	mov    QWORD PTR [rsp+0x8],rbx
   14006107d:	mov    QWORD PTR [rsp+0x18],rsi
   140061082:	mov    WORD PTR [rsp+0x20],r9w
   140061088:	push   rdi
   140061089:	sub    rsp,0x60
   14006108d:	mov    rdi,r8
   140061090:	mov    rsi,rdx
   140061093:	mov    rbx,rcx
   140061096:	test   rdx,rdx
   140061099:	jne    0x1400610ae
   14006109b:	test   r8,r8
   14006109e:	je     0x1400610ae
   1400610a0:	test   rcx,rcx
   1400610a3:	je     0x1400610a7
   1400610a5:	and    DWORD PTR [rcx],edx
   1400610a7:	xor    eax,eax
   1400610a9:	jmp    0x14006113d
   1400610ae:	test   rcx,rcx
   1400610b1:	je     0x1400610b6
   1400610b3:	or     DWORD PTR [rcx],0xffffffff
   1400610b6:	cmp    r8,0x7fffffff
   1400610bd:	jbe    0x1400610d2
   1400610bf:	call   0x140060e94
   1400610c4:	mov    ebx,0x16
   1400610c9:	mov    DWORD PTR [rax],ebx
   1400610cb:	call   0x140060d74
   1400610d0:	jmp    0x14006113b
   1400610d2:	mov    rdx,QWORD PTR [rsp+0x90]
   1400610da:	lea    rcx,[rsp+0x40]
   1400610df:	call   0x14005b174
   1400610e4:	mov    rax,QWORD PTR [rsp+0x48]
   1400610e9:	cmp    QWORD PTR [rax+0x138],0x0
   1400610f1:	jne    0x14006116c
   1400610f3:	movzx  eax,WORD PTR [rsp+0x88]
   1400610fb:	mov    ecx,0xff
   140061100:	cmp    ax,cx
   140061103:	jbe    0x14006114f
   140061105:	test   rsi,rsi
   140061108:	je     0x14006111c
   14006110a:	test   rdi,rdi
   14006110d:	je     0x14006111c
   14006110f:	mov    r8,rdi
   140061112:	xor    edx,edx
   140061114:	mov    rcx,rsi
   140061117:	call   0x140058f40
   14006111c:	call   0x140060e94
   140061121:	mov    ebx,0x2a
   140061126:	mov    DWORD PTR [rax],ebx
   140061128:	cmp    BYTE PTR [rsp+0x58],0x0
   14006112d:	je     0x14006113b
   14006112f:	mov    rcx,QWORD PTR [rsp+0x40]
   140061134:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   14006113b:	mov    eax,ebx
   14006113d:	lea    r11,[rsp+0x60]
   140061142:	mov    rbx,QWORD PTR [r11+0x10]
   140061146:	mov    rsi,QWORD PTR [r11+0x20]
   14006114a:	mov    rsp,r11
   14006114d:	pop    rdi
   14006114e:	ret    
   14006114f:	test   rsi,rsi
   140061152:	je     0x14006115f
   140061154:	test   rdi,rdi
   140061157:	je     0x1400611e6
   14006115d:	mov    BYTE PTR [rsi],al
   14006115f:	test   rbx,rbx
   140061162:	je     0x1400611b9
   140061164:	mov    DWORD PTR [rbx],0x1
   14006116a:	jmp    0x1400611b9
   14006116c:	and    DWORD PTR [rsp+0x78],0x0
   140061171:	lea    rcx,[rsp+0x78]
   140061176:	mov    QWORD PTR [rsp+0x38],rcx
   14006117b:	lea    r8,[rsp+0x88]
   140061183:	and    QWORD PTR [rsp+0x30],0x0
   140061189:	mov    r9d,0x1
   14006118f:	mov    ecx,DWORD PTR [rax+0xc]
   140061192:	xor    edx,edx
   140061194:	mov    DWORD PTR [rsp+0x28],edi
   140061198:	mov    QWORD PTR [rsp+0x20],rsi
   14006119d:	call   QWORD PTR [rip+0xb105]        # 0x14006c2a8
   1400611a3:	test   eax,eax
   1400611a5:	je     0x1400611c0
   1400611a7:	cmp    DWORD PTR [rsp+0x78],0x0
   1400611ac:	jne    0x14006111c
   1400611b2:	test   rbx,rbx
   1400611b5:	je     0x1400611b9
   1400611b7:	mov    DWORD PTR [rbx],eax
   1400611b9:	xor    ebx,ebx
   1400611bb:	jmp    0x140061128
   1400611c0:	call   QWORD PTR [rip+0xb002]        # 0x14006c1c8
   1400611c6:	cmp    eax,0x7a
   1400611c9:	jne    0x14006111c
   1400611cf:	test   rsi,rsi
   1400611d2:	je     0x1400611e6
   1400611d4:	test   rdi,rdi
   1400611d7:	je     0x1400611e6
   1400611d9:	mov    r8,rdi
   1400611dc:	xor    edx,edx
   1400611de:	mov    rcx,rsi
   1400611e1:	call   0x140058f40
   1400611e6:	call   0x140060e94
   1400611eb:	mov    ebx,0x22
   1400611f0:	mov    DWORD PTR [rax],ebx
   1400611f2:	call   0x140060d74
   1400611f7:	jmp    0x140061128
   1400611fc:	sub    rsp,0x38
   140061200:	and    QWORD PTR [rsp+0x20],0x0
   140061206:	call   0x140061078
   14006120b:	add    rsp,0x38
   14006120f:	ret    
   140061210:	mov    QWORD PTR [rsp+0x8],rbx
   140061215:	mov    QWORD PTR [rsp+0x20],r9
   14006121a:	push   rdi
   14006121b:	sub    rsp,0x20
   14006121f:	mov    rbx,r9
   140061222:	mov    rdi,r8
   140061225:	mov    ecx,DWORD PTR [rdx]
   140061227:	call   0x140062874
   14006122c:	nop
   14006122d:	mov    rax,QWORD PTR [rdi]
   140061230:	mov    rcx,QWORD PTR [rax]
   140061233:	mov    rcx,QWORD PTR [rcx+0x88]
   14006123a:	test   rcx,rcx
   14006123d:	je     0x14006125d
   14006123f:	or     eax,0xffffffff
   140061242:	lock xadd DWORD PTR [rcx],eax
   140061246:	cmp    eax,0x1
   140061249:	jne    0x14006125d
   14006124b:	lea    rax,[rip+0x20fbe]        # 0x140082210
   140061252:	cmp    rcx,rax
   140061255:	je     0x14006125d
   140061257:	call   0x1400609cc
   14006125c:	nop
   14006125d:	mov    ecx,DWORD PTR [rbx]
   14006125f:	call   0x1400628c8
   140061264:	mov    rbx,QWORD PTR [rsp+0x30]
   140061269:	add    rsp,0x20
   14006126d:	pop    rdi
   14006126e:	ret    
   14006126f:	int3   
   140061270:	mov    QWORD PTR [rsp+0x8],rbx
   140061275:	mov    QWORD PTR [rsp+0x20],r9
   14006127a:	push   rdi
   14006127b:	sub    rsp,0x20
   14006127f:	mov    rbx,r9
   140061282:	mov    rdi,r8
   140061285:	mov    ecx,DWORD PTR [rdx]
   140061287:	call   0x140062874
   14006128c:	nop
   14006128d:	mov    rax,QWORD PTR [rdi+0x8]
   140061291:	mov    rdx,QWORD PTR [rax]
   140061294:	mov    rcx,QWORD PTR [rdi]
   140061297:	mov    rdx,QWORD PTR [rdx]
   14006129a:	mov    rcx,QWORD PTR [rcx]
   14006129d:	call   0x140061520
   1400612a2:	nop
   1400612a3:	mov    ecx,DWORD PTR [rbx]
   1400612a5:	call   0x1400628c8
   1400612aa:	mov    rbx,QWORD PTR [rsp+0x30]
   1400612af:	add    rsp,0x20
   1400612b3:	pop    rdi
   1400612b4:	ret    
   1400612b5:	int3   
   1400612b6:	int3   
   1400612b7:	int3   
   1400612b8:	mov    QWORD PTR [rsp+0x8],rbx
   1400612bd:	mov    QWORD PTR [rsp+0x20],r9
   1400612c2:	push   rdi
   1400612c3:	sub    rsp,0x20
   1400612c7:	mov    rbx,r9
   1400612ca:	mov    rdi,r8
   1400612cd:	mov    ecx,DWORD PTR [rdx]
   1400612cf:	call   0x140062874
   1400612d4:	nop
   1400612d5:	mov    rax,QWORD PTR [rdi]
   1400612d8:	mov    rcx,QWORD PTR [rax]
   1400612db:	mov    rax,QWORD PTR [rcx+0x88]
   1400612e2:	lock inc DWORD PTR [rax]
   1400612e5:	mov    ecx,DWORD PTR [rbx]
   1400612e7:	call   0x1400628c8
   1400612ec:	mov    rbx,QWORD PTR [rsp+0x30]
   1400612f1:	add    rsp,0x20
   1400612f5:	pop    rdi
   1400612f6:	ret    
   1400612f7:	int3   
   1400612f8:	mov    QWORD PTR [rsp+0x8],rbx
   1400612fd:	mov    QWORD PTR [rsp+0x20],r9
   140061302:	push   rdi
   140061303:	sub    rsp,0x20
   140061307:	mov    rbx,r9
   14006130a:	mov    rdi,r8
   14006130d:	mov    ecx,DWORD PTR [rdx]
   14006130f:	call   0x140062874
   140061314:	nop
   140061315:	mov    rcx,QWORD PTR [rdi]
   140061318:	xor    edx,edx
   14006131a:	mov    rcx,QWORD PTR [rcx]
   14006131d:	call   0x140061520
   140061322:	nop
   140061323:	mov    ecx,DWORD PTR [rbx]
   140061325:	call   0x1400628c8
   14006132a:	mov    rbx,QWORD PTR [rsp+0x30]
   14006132f:	add    rsp,0x20
   140061333:	pop    rdi
   140061334:	ret    
   140061335:	int3   
   140061336:	int3   
   140061337:	int3   
   140061338:	rex push rbp
   14006133a:	mov    rbp,rsp
   14006133d:	sub    rsp,0x50
   140061341:	mov    QWORD PTR [rbp-0x28],rcx
   140061345:	lea    rax,[rbp-0x28]
   140061349:	mov    QWORD PTR [rbp-0x18],rax
   14006134d:	lea    r9,[rbp+0x20]
   140061351:	mov    edx,0x1
   140061356:	lea    r8,[rbp-0x18]
   14006135a:	mov    eax,0x5
   14006135f:	mov    DWORD PTR [rbp+0x20],eax
   140061362:	mov    DWORD PTR [rbp+0x28],eax
   140061365:	lea    rax,[rbp-0x28]
   140061369:	mov    QWORD PTR [rbp-0x10],rax
   14006136d:	lea    rax,[rbp-0x20]
   140061371:	mov    QWORD PTR [rbp-0x8],rax
   140061375:	mov    eax,0x4
   14006137a:	mov    DWORD PTR [rbp-0x30],eax
   14006137d:	mov    DWORD PTR [rbp-0x2c],eax
   140061380:	lea    rax,[rip+0x3e3e1]        # 0x14009f768
   140061387:	mov    QWORD PTR [rbp-0x20],rax
   14006138b:	mov    DWORD PTR [rcx+0x28],edx
   14006138e:	lea    rcx,[rip+0x10d8b]        # 0x140072120
   140061395:	mov    rax,QWORD PTR [rbp-0x28]
   140061399:	mov    QWORD PTR [rax],rcx
   14006139c:	lea    rcx,[rip+0x20e6d]        # 0x140082210
   1400613a3:	mov    rax,QWORD PTR [rbp-0x28]
   1400613a7:	mov    DWORD PTR [rax+0x3a8],edx
   1400613ad:	mov    rax,QWORD PTR [rbp-0x28]
   1400613b1:	mov    QWORD PTR [rax+0x88],rcx
   1400613b8:	lea    ecx,[rdx+0x42]
   1400613bb:	mov    rax,QWORD PTR [rbp-0x28]
   1400613bf:	lea    rdx,[rbp+0x28]
   1400613c3:	mov    WORD PTR [rax+0xbc],cx
   1400613ca:	mov    rax,QWORD PTR [rbp-0x28]
   1400613ce:	mov    WORD PTR [rax+0x1c2],cx
   1400613d5:	lea    rcx,[rbp+0x18]
   1400613d9:	mov    rax,QWORD PTR [rbp-0x28]
   1400613dd:	and    QWORD PTR [rax+0x3a0],0x0
   1400613e5:	call   0x1400612b8
   1400613ea:	lea    r9,[rbp-0x30]
   1400613ee:	lea    r8,[rbp-0x10]
   1400613f2:	lea    rdx,[rbp-0x2c]
   1400613f6:	lea    rcx,[rbp+0x18]
   1400613fa:	call   0x140061270
   1400613ff:	add    rsp,0x50
   140061403:	pop    rbp
   140061404:	ret    
   140061405:	int3   
   140061406:	int3   
   140061407:	int3   
   140061408:	test   rcx,rcx
   14006140b:	je     0x140061427
   14006140d:	push   rbx
   14006140e:	sub    rsp,0x20
   140061412:	mov    rbx,rcx
   140061415:	call   0x140061428
   14006141a:	mov    rcx,rbx
   14006141d:	call   0x1400609cc
   140061422:	add    rsp,0x20
   140061426:	pop    rbx
   140061427:	ret    
   140061428:	rex push rbp
   14006142a:	mov    rbp,rsp
   14006142d:	sub    rsp,0x40
   140061431:	lea    rax,[rbp-0x18]
   140061435:	mov    QWORD PTR [rbp-0x18],rcx
   140061439:	mov    QWORD PTR [rbp-0x10],rax
   14006143d:	lea    rdx,[rip+0x10cdc]        # 0x140072120
   140061444:	mov    eax,0x5
   140061449:	mov    DWORD PTR [rbp+0x20],eax
   14006144c:	mov    DWORD PTR [rbp+0x28],eax
   14006144f:	lea    rax,[rbp-0x18]
   140061453:	mov    QWORD PTR [rbp-0x8],rax
   140061457:	mov    eax,0x4
   14006145c:	mov    DWORD PTR [rbp-0x20],eax
   14006145f:	mov    DWORD PTR [rbp-0x1c],eax
   140061462:	mov    rax,QWORD PTR [rcx]
   140061465:	cmp    rax,rdx
   140061468:	je     0x140061476
   14006146a:	mov    rcx,rax
   14006146d:	call   0x1400609cc
   140061472:	mov    rcx,QWORD PTR [rbp-0x18]
   140061476:	mov    rcx,QWORD PTR [rcx+0x70]
   14006147a:	call   0x1400609cc
   14006147f:	mov    rcx,QWORD PTR [rbp-0x18]
   140061483:	mov    rcx,QWORD PTR [rcx+0x58]
   140061487:	call   0x1400609cc
   14006148c:	mov    rcx,QWORD PTR [rbp-0x18]
   140061490:	mov    rcx,QWORD PTR [rcx+0x60]
   140061494:	call   0x1400609cc
   140061499:	mov    rcx,QWORD PTR [rbp-0x18]
   14006149d:	mov    rcx,QWORD PTR [rcx+0x68]
   1400614a1:	call   0x1400609cc
   1400614a6:	mov    rcx,QWORD PTR [rbp-0x18]
   1400614aa:	mov    rcx,QWORD PTR [rcx+0x48]
   1400614ae:	call   0x1400609cc
   1400614b3:	mov    rcx,QWORD PTR [rbp-0x18]
   1400614b7:	mov    rcx,QWORD PTR [rcx+0x50]
   1400614bb:	call   0x1400609cc
   1400614c0:	mov    rcx,QWORD PTR [rbp-0x18]
   1400614c4:	mov    rcx,QWORD PTR [rcx+0x78]
   1400614c8:	call   0x1400609cc
   1400614cd:	mov    rcx,QWORD PTR [rbp-0x18]
   1400614d1:	mov    rcx,QWORD PTR [rcx+0x80]
   1400614d8:	call   0x1400609cc
   1400614dd:	mov    rcx,QWORD PTR [rbp-0x18]
   1400614e1:	mov    rcx,QWORD PTR [rcx+0x3c0]
   1400614e8:	call   0x1400609cc
   1400614ed:	lea    r9,[rbp+0x20]
   1400614f1:	lea    r8,[rbp-0x10]
   1400614f5:	lea    rdx,[rbp+0x28]
   1400614f9:	lea    rcx,[rbp+0x18]
   1400614fd:	call   0x140061210
   140061502:	lea    r9,[rbp-0x20]
   140061506:	lea    r8,[rbp-0x8]
   14006150a:	lea    rdx,[rbp-0x1c]
   14006150e:	lea    rcx,[rbp+0x18]
   140061512:	call   0x1400612f8
   140061517:	add    rsp,0x40
   14006151b:	pop    rbp
   14006151c:	ret    
   14006151d:	int3   
   14006151e:	int3   
   14006151f:	int3   
   140061520:	mov    QWORD PTR [rsp+0x8],rbx
   140061525:	push   rdi
   140061526:	sub    rsp,0x20
   14006152a:	mov    rdi,rcx
   14006152d:	mov    rbx,rdx
   140061530:	mov    rcx,QWORD PTR [rcx+0x90]
   140061537:	test   rcx,rcx
   14006153a:	je     0x140061568
   14006153c:	call   0x140066780
   140061541:	mov    rcx,QWORD PTR [rdi+0x90]
   140061548:	cmp    rcx,QWORD PTR [rip+0x3e219]        # 0x14009f768
   14006154f:	je     0x140061568
   140061551:	lea    rax,[rip+0x20b38]        # 0x140082090
   140061558:	cmp    rcx,rax
   14006155b:	je     0x140061568
   14006155d:	cmp    DWORD PTR [rcx+0x10],0x0
   140061561:	jne    0x140061568
   140061563:	call   0x140066580
   140061568:	mov    QWORD PTR [rdi+0x90],rbx
   14006156f:	test   rbx,rbx
   140061572:	je     0x14006157c
   140061574:	mov    rcx,rbx
   140061577:	call   0x1400664f4
   14006157c:	mov    rbx,QWORD PTR [rsp+0x30]
   140061581:	add    rsp,0x20
   140061585:	pop    rdi
   140061586:	ret    
   140061587:	int3   
   140061588:	mov    QWORD PTR [rsp+0x8],rbx
   14006158d:	push   rdi
   14006158e:	sub    rsp,0x20
   140061592:	call   QWORD PTR [rip+0xac30]        # 0x14006c1c8
   140061598:	mov    ecx,DWORD PTR [rip+0x20aee]        # 0x14008208c
   14006159e:	mov    ebx,eax
   1400615a0:	cmp    ecx,0xffffffff
   1400615a3:	je     0x1400615b2
   1400615a5:	call   0x140062c24
   1400615aa:	mov    rdi,rax
   1400615ad:	test   rax,rax
   1400615b0:	jne    0x1400615f3
   1400615b2:	mov    edx,0x3c8
   1400615b7:	mov    ecx,0x1
   1400615bc:	call   0x140060a6c
   1400615c1:	mov    rdi,rax
   1400615c4:	test   rax,rax
   1400615c7:	jne    0x1400615d2
   1400615c9:	xor    ecx,ecx
   1400615cb:	call   0x1400609cc
   1400615d0:	jmp    0x14006160e
   1400615d2:	mov    ecx,DWORD PTR [rip+0x20ab4]        # 0x14008208c
   1400615d8:	mov    rdx,rax
   1400615db:	call   0x140062c7c
   1400615e0:	mov    rcx,rdi
   1400615e3:	test   eax,eax
   1400615e5:	je     0x1400615cb
   1400615e7:	call   0x140061338
   1400615ec:	xor    ecx,ecx
   1400615ee:	call   0x1400609cc
   1400615f3:	test   rdi,rdi
   1400615f6:	je     0x14006160e
   1400615f8:	mov    ecx,ebx
   1400615fa:	call   QWORD PTR [rip+0xacc0]        # 0x14006c2c0
   140061600:	mov    rbx,QWORD PTR [rsp+0x30]
   140061605:	mov    rax,rdi
   140061608:	add    rsp,0x20
   14006160c:	pop    rdi
   14006160d:	ret    
   14006160e:	mov    ecx,ebx
   140061610:	call   QWORD PTR [rip+0xacaa]        # 0x14006c2c0
   140061616:	call   0x140060974
   14006161b:	int3   
   14006161c:	mov    QWORD PTR [rsp+0x8],rbx
   140061621:	mov    QWORD PTR [rsp+0x10],rsi
   140061626:	push   rdi
   140061627:	sub    rsp,0x20
   14006162b:	call   QWORD PTR [rip+0xab97]        # 0x14006c1c8
   140061631:	mov    ecx,DWORD PTR [rip+0x20a55]        # 0x14008208c
   140061637:	xor    esi,esi
   140061639:	mov    ebx,eax
   14006163b:	cmp    ecx,0xffffffff
   14006163e:	je     0x14006164d
   140061640:	call   0x140062c24
   140061645:	mov    rdi,rax
   140061648:	test   rax,rax
   14006164b:	jne    0x14006168e
   14006164d:	mov    edx,0x3c8
   140061652:	mov    ecx,0x1
   140061657:	call   0x140060a6c
   14006165c:	mov    rdi,rax
   14006165f:	test   rax,rax
   140061662:	jne    0x14006166d
   140061664:	xor    ecx,ecx
   140061666:	call   0x1400609cc
   14006166b:	jmp    0x140061693
   14006166d:	mov    ecx,DWORD PTR [rip+0x20a19]        # 0x14008208c
   140061673:	mov    rdx,rax
   140061676:	call   0x140062c7c
   14006167b:	mov    rcx,rdi
   14006167e:	test   eax,eax
   140061680:	je     0x140061666
   140061682:	call   0x140061338
   140061687:	xor    ecx,ecx
   140061689:	call   0x1400609cc
   14006168e:	test   rdi,rdi
   140061691:	jne    0x14006169d
   140061693:	mov    ecx,ebx
   140061695:	call   QWORD PTR [rip+0xac25]        # 0x14006c2c0
   14006169b:	jmp    0x1400616a8
   14006169d:	mov    ecx,ebx
   14006169f:	call   QWORD PTR [rip+0xac1b]        # 0x14006c2c0
   1400616a5:	mov    rsi,rdi
   1400616a8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400616ad:	mov    rax,rsi
   1400616b0:	mov    rsi,QWORD PTR [rsp+0x38]
   1400616b5:	add    rsp,0x20
   1400616b9:	pop    rdi
   1400616ba:	ret    
   1400616bb:	int3   
   1400616bc:	sub    rsp,0x28
   1400616c0:	lea    rcx,[rip+0xfffffffffffffd41]        # 0x140061408
   1400616c7:	call   0x140062b74
   1400616cc:	mov    DWORD PTR [rip+0x209ba],eax        # 0x14008208c
   1400616d2:	cmp    eax,0xffffffff
   1400616d5:	jne    0x1400616db
   1400616d7:	xor    al,al
   1400616d9:	jmp    0x1400616f0
   1400616db:	call   0x14006161c
   1400616e0:	test   rax,rax
   1400616e3:	jne    0x1400616ee
   1400616e5:	xor    ecx,ecx
   1400616e7:	call   0x1400616f8
   1400616ec:	jmp    0x1400616d7
   1400616ee:	mov    al,0x1
   1400616f0:	add    rsp,0x28
   1400616f4:	ret    
   1400616f5:	int3   
   1400616f6:	int3   
   1400616f7:	int3   
   1400616f8:	sub    rsp,0x28
   1400616fc:	mov    ecx,DWORD PTR [rip+0x2098a]        # 0x14008208c
   140061702:	cmp    ecx,0xffffffff
   140061705:	je     0x140061713
   140061707:	call   0x140062bcc
   14006170c:	or     DWORD PTR [rip+0x20979],0xffffffff        # 0x14008208c
   140061713:	mov    al,0x1
   140061715:	add    rsp,0x28
   140061719:	ret    
   14006171a:	int3   
   14006171b:	int3   
   14006171c:	rex push rbx
   14006171e:	sub    rsp,0x20
   140061722:	mov    rax,QWORD PTR [rip+0x3e03f]        # 0x14009f768
   140061729:	mov    rbx,rdx
   14006172c:	cmp    QWORD PTR [rdx],rax
   14006172f:	je     0x140061747
   140061731:	mov    eax,DWORD PTR [rcx+0x3a8]
   140061737:	test   DWORD PTR [rip+0x210b3],eax        # 0x1400827f0
   14006173d:	jne    0x140061747
   14006173f:	call   0x140066828
   140061744:	mov    QWORD PTR [rbx],rax
   140061747:	add    rsp,0x20
   14006174b:	pop    rbx
   14006174c:	ret    
   14006174d:	int3   
   14006174e:	int3   
   14006174f:	int3   
   140061750:	rex push rbx
   140061752:	sub    rsp,0x20
   140061756:	mov    rax,QWORD PTR [rip+0x20cdb]        # 0x140082438
   14006175d:	mov    rbx,rdx
   140061760:	cmp    QWORD PTR [rdx],rax
   140061763:	je     0x14006177b
   140061765:	mov    eax,DWORD PTR [rcx+0x3a8]
   14006176b:	test   DWORD PTR [rip+0x2107f],eax        # 0x1400827f0
   140061771:	jne    0x14006177b
   140061773:	call   0x1400652ac
   140061778:	mov    QWORD PTR [rbx],rax
   14006177b:	add    rsp,0x20
   14006177f:	pop    rbx
   140061780:	ret    
   140061781:	int3   
   140061782:	int3   
   140061783:	int3   
   140061784:	mov    rdx,QWORD PTR [rcx]
   140061787:	mov    ecx,0x7ff
   14006178c:	mov    rax,rdx
   14006178f:	shr    rax,0x34
   140061793:	and    rax,rcx
   140061796:	cmp    rax,rcx
   140061799:	je     0x14006179e
   14006179b:	xor    eax,eax
   14006179d:	ret    
   14006179e:	movabs rcx,0xfffffffffffff
   1400617a8:	mov    rax,rdx
   1400617ab:	and    rax,rcx
   1400617ae:	jne    0x1400617b6
   1400617b0:	mov    eax,0x1
   1400617b5:	ret    
   1400617b6:	movabs rcx,0x8000000000000000
   1400617c0:	test   rcx,rdx
   1400617c3:	je     0x1400617da
   1400617c5:	movabs rcx,0x8000000000000
   1400617cf:	cmp    rax,rcx
   1400617d2:	jne    0x1400617da
   1400617d4:	mov    eax,0x4
   1400617d9:	ret    
   1400617da:	shr    rdx,0x33
   1400617de:	not    edx
   1400617e0:	and    edx,0x1
   1400617e3:	or     edx,0x2
   1400617e6:	mov    eax,edx
   1400617e8:	ret    
   1400617e9:	int3   
   1400617ea:	int3   
   1400617eb:	int3   
   1400617ec:	mov    rax,rsp
   1400617ef:	mov    QWORD PTR [rax+0x8],rbx
   1400617f3:	mov    QWORD PTR [rax+0x10],rbp
   1400617f7:	mov    QWORD PTR [rax+0x18],rsi
   1400617fb:	mov    QWORD PTR [rax+0x20],rdi
   1400617ff:	push   r12
   140061801:	push   r14
   140061803:	push   r15
   140061805:	sub    rsp,0x70
   140061809:	mov    ebx,DWORD PTR [rsp+0xb8]
   140061810:	xor    r12d,r12d
   140061813:	mov    rdi,rdx
   140061816:	mov    BYTE PTR [rdx],r12b
   140061819:	mov    rdx,QWORD PTR [rsp+0xd0]
   140061821:	mov    rsi,rcx
   140061824:	test   ebx,ebx
   140061826:	lea    rcx,[rax-0x38]
   14006182a:	mov    r14,r9
   14006182d:	mov    rbp,r8
   140061830:	cmovs  ebx,r12d
   140061834:	call   0x14005b174
   140061839:	lea    eax,[rbx+0xb]
   14006183c:	movsxd rdx,eax
   14006183f:	cmp    rbp,rdx
   140061842:	ja     0x14006185a
   140061844:	call   0x140060e94
   140061849:	lea    ebx,[r12+0x22]
   14006184e:	mov    DWORD PTR [rax],ebx
   140061850:	call   0x140060d74
   140061855:	jmp    0x140061b15
   14006185a:	mov    rax,QWORD PTR [rsi]
   14006185d:	mov    ecx,0x7ff
   140061862:	shr    rax,0x34
   140061866:	and    rax,rcx
   140061869:	cmp    rax,rcx
   14006186c:	jne    0x1400618e5
   14006186e:	mov    eax,DWORD PTR [rsp+0xc8]
   140061875:	mov    r9,r14
   140061878:	mov    QWORD PTR [rsp+0x40],r12
   14006187d:	mov    r8,rbp
   140061880:	mov    DWORD PTR [rsp+0x38],eax
   140061884:	mov    rdx,rdi
   140061887:	mov    rax,QWORD PTR [rsp+0xb0]
   14006188f:	mov    rcx,rsi
   140061892:	mov    BYTE PTR [rsp+0x30],r12b
   140061897:	mov    DWORD PTR [rsp+0x28],ebx
   14006189b:	mov    QWORD PTR [rsp+0x20],rax
   1400618a0:	call   0x140061b4c
   1400618a5:	mov    ebx,eax
   1400618a7:	test   eax,eax
   1400618a9:	je     0x1400618b3
   1400618ab:	mov    BYTE PTR [rdi],r12b
   1400618ae:	jmp    0x140061b15
   1400618b3:	mov    edx,0x65
   1400618b8:	mov    rcx,rdi
   1400618bb:	call   0x14006a3c0
   1400618c0:	test   rax,rax
   1400618c3:	je     0x140061b12
   1400618c9:	mov    cl,BYTE PTR [rsp+0xc0]
   1400618d0:	neg    cl
   1400618d2:	sbb    dl,dl
   1400618d4:	and    dl,0xe0
   1400618d7:	add    dl,0x70
   1400618da:	mov    BYTE PTR [rax],dl
   1400618dc:	mov    BYTE PTR [rax+0x3],r12b
   1400618e0:	jmp    0x140061b12
   1400618e5:	movabs rax,0x8000000000000000
   1400618ef:	test   QWORD PTR [rsi],rax
   1400618f2:	je     0x1400618fa
   1400618f4:	mov    BYTE PTR [rdi],0x2d
   1400618f7:	inc    rdi
   1400618fa:	mov    r15b,BYTE PTR [rsp+0xc0]
   140061902:	mov    ebp,0x3ff
   140061907:	mov    al,r15b
   14006190a:	mov    r10d,0x30
   140061910:	neg    al
   140061912:	movabs r11,0xfffffffffffff
   14006191c:	movabs rax,0x7ff0000000000000
   140061926:	sbb    edx,edx
   140061928:	and    edx,0xffffffe0
   14006192b:	sub    edx,0xffffffd9
   14006192e:	test   QWORD PTR [rsi],rax
   140061931:	jne    0x14006194d
   140061933:	mov    BYTE PTR [rdi],r10b
   140061936:	inc    rdi
   140061939:	mov    rax,QWORD PTR [rsi]
   14006193c:	and    rax,r11
   14006193f:	neg    rax
   140061942:	sbb    rbp,rbp
   140061945:	and    ebp,0x3fe
   14006194b:	jmp    0x140061953
   14006194d:	mov    BYTE PTR [rdi],0x31
   140061950:	inc    rdi
   140061953:	mov    r14,rdi
   140061956:	inc    rdi
   140061959:	test   ebx,ebx
   14006195b:	jne    0x140061962
   14006195d:	mov    BYTE PTR [r14],r12b
   140061960:	jmp    0x140061976
   140061962:	mov    rax,QWORD PTR [rsp+0x58]
   140061967:	mov    rcx,QWORD PTR [rax+0xf8]
   14006196e:	mov    rax,QWORD PTR [rcx]
   140061971:	mov    cl,BYTE PTR [rax]
   140061973:	mov    BYTE PTR [r14],cl
   140061976:	test   QWORD PTR [rsi],r11
   140061979:	jbe    0x140061a09
   14006197f:	movzx  r8d,r10w
   140061983:	movabs r9,0xf000000000000
   14006198d:	test   ebx,ebx
   14006198f:	jle    0x1400619bf
   140061991:	mov    rax,QWORD PTR [rsi]
   140061994:	mov    cl,r8b
   140061997:	and    rax,r9
   14006199a:	and    rax,r11
   14006199d:	shr    rax,cl
   1400619a0:	add    ax,r10w
   1400619a4:	cmp    ax,0x39
   1400619a8:	jbe    0x1400619ad
   1400619aa:	add    ax,dx
   1400619ad:	mov    BYTE PTR [rdi],al
   1400619af:	dec    ebx
   1400619b1:	inc    rdi
   1400619b4:	shr    r9,0x4
   1400619b8:	add    r8w,0xfffc
   1400619bd:	jns    0x14006198d
   1400619bf:	test   r8w,r8w
   1400619c3:	js     0x140061a09
   1400619c5:	mov    rax,QWORD PTR [rsi]
   1400619c8:	mov    cl,r8b
   1400619cb:	and    rax,r9
   1400619ce:	and    rax,r11
   1400619d1:	shr    rax,cl
   1400619d4:	cmp    ax,0x8
   1400619d8:	jbe    0x140061a09
   1400619da:	lea    rcx,[rdi-0x1]
   1400619de:	mov    al,BYTE PTR [rcx]
   1400619e0:	sub    al,0x46
   1400619e2:	test   al,0xdf
   1400619e4:	jne    0x1400619ee
   1400619e6:	mov    BYTE PTR [rcx],r10b
   1400619e9:	dec    rcx
   1400619ec:	jmp    0x1400619de
   1400619ee:	cmp    rcx,r14
   1400619f1:	je     0x140061a06
   1400619f3:	mov    al,BYTE PTR [rcx]
   1400619f5:	cmp    al,0x39
   1400619f7:	jne    0x140061a00
   1400619f9:	add    dl,0x3a
   1400619fc:	mov    BYTE PTR [rcx],dl
   1400619fe:	jmp    0x140061a09
   140061a00:	inc    al
   140061a02:	mov    BYTE PTR [rcx],al
   140061a04:	jmp    0x140061a09
   140061a06:	inc    BYTE PTR [rcx-0x1]
   140061a09:	test   ebx,ebx
   140061a0b:	jle    0x140061a24
   140061a0d:	mov    r8,rbx
   140061a10:	mov    dl,r10b
   140061a13:	mov    rcx,rdi
   140061a16:	call   0x140058f40
   140061a1b:	add    rdi,rbx
   140061a1e:	mov    r10d,0x30
   140061a24:	cmp    BYTE PTR [r14],r12b
   140061a27:	cmove  rdi,r14
   140061a2b:	neg    r15b
   140061a2e:	sbb    al,al
   140061a30:	and    al,0xe0
   140061a32:	add    al,0x70
   140061a34:	mov    BYTE PTR [rdi],al
   140061a36:	mov    rcx,QWORD PTR [rsi]
   140061a39:	shr    rcx,0x34
   140061a3d:	and    ecx,0x7ff
   140061a43:	sub    rcx,rbp
   140061a46:	js     0x140061a52
   140061a48:	mov    BYTE PTR [rdi+0x1],0x2b
   140061a4c:	add    rdi,0x2
   140061a50:	jmp    0x140061a5d
   140061a52:	mov    BYTE PTR [rdi+0x1],0x2d
   140061a56:	add    rdi,0x2
   140061a5a:	neg    rcx
   140061a5d:	mov    BYTE PTR [rdi],r10b
   140061a60:	mov    r8,rdi
   140061a63:	cmp    rcx,0x3e8
   140061a6a:	jl     0x140061a9f
   140061a6c:	movabs rax,0x20c49ba5e353f7cf
   140061a76:	imul   rcx
   140061a79:	sar    rdx,0x7
   140061a7d:	mov    rax,rdx
   140061a80:	shr    rax,0x3f
   140061a84:	add    rdx,rax
   140061a87:	lea    eax,[r10+rdx*1]
   140061a8b:	mov    BYTE PTR [rdi],al
   140061a8d:	inc    rdi
   140061a90:	imul   rax,rdx,0xfffffffffffffc18
   140061a97:	add    rcx,rax
   140061a9a:	cmp    rdi,r8
   140061a9d:	jne    0x140061aa5
   140061a9f:	cmp    rcx,0x64
   140061aa3:	jl     0x140061ad3
   140061aa5:	movabs rax,0xa3d70a3d70a3d70b
   140061aaf:	imul   rcx
   140061ab2:	add    rdx,rcx
   140061ab5:	sar    rdx,0x6
   140061ab9:	mov    rax,rdx
   140061abc:	shr    rax,0x3f
   140061ac0:	add    rdx,rax
   140061ac3:	lea    eax,[r10+rdx*1]
   140061ac7:	mov    BYTE PTR [rdi],al
   140061ac9:	inc    rdi
   140061acc:	imul   rax,rdx,0xffffffffffffff9c
   140061ad0:	add    rcx,rax
   140061ad3:	cmp    rdi,r8
   140061ad6:	jne    0x140061ade
   140061ad8:	cmp    rcx,0xa
   140061adc:	jl     0x140061b09
   140061ade:	movabs rax,0x6666666666666667
   140061ae8:	imul   rcx
   140061aeb:	sar    rdx,0x2
   140061aef:	mov    rax,rdx
   140061af2:	shr    rax,0x3f
   140061af6:	add    rdx,rax
   140061af9:	lea    eax,[r10+rdx*1]
   140061afd:	mov    BYTE PTR [rdi],al
   140061aff:	inc    rdi
   140061b02:	imul   rax,rdx,0xfffffffffffffff6
   140061b06:	add    rcx,rax
   140061b09:	add    cl,r10b
   140061b0c:	mov    BYTE PTR [rdi],cl
   140061b0e:	mov    BYTE PTR [rdi+0x1],r12b
   140061b12:	mov    ebx,r12d
   140061b15:	cmp    BYTE PTR [rsp+0x68],r12b
   140061b1a:	je     0x140061b28
   140061b1c:	mov    rcx,QWORD PTR [rsp+0x50]
   140061b21:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   140061b28:	lea    r11,[rsp+0x70]
   140061b2d:	mov    eax,ebx
   140061b2f:	mov    rbx,QWORD PTR [r11+0x20]
   140061b33:	mov    rbp,QWORD PTR [r11+0x28]
   140061b37:	mov    rsi,QWORD PTR [r11+0x30]
   140061b3b:	mov    rdi,QWORD PTR [r11+0x38]
   140061b3f:	mov    rsp,r11
   140061b42:	pop    r15
   140061b44:	pop    r14
   140061b46:	pop    r12
   140061b48:	ret    
   140061b49:	int3   
   140061b4a:	int3   
   140061b4b:	int3   
   140061b4c:	mov    r11,rsp
   140061b4f:	mov    QWORD PTR [r11+0x8],rbx
   140061b53:	mov    QWORD PTR [r11+0x10],rbp
   140061b57:	mov    QWORD PTR [r11+0x18],rsi
   140061b5b:	push   rdi
   140061b5c:	sub    rsp,0x50
   140061b60:	mov    rax,QWORD PTR [rsp+0x80]
   140061b68:	mov    rsi,r8
   140061b6b:	mov    ebp,DWORD PTR [rsp+0x88]
   140061b72:	lea    r8,[r11-0x18]
   140061b76:	mov    rcx,QWORD PTR [rcx]
   140061b79:	mov    rdi,rdx
   140061b7c:	mov    QWORD PTR [r11-0x38],rax
   140061b80:	lea    edx,[rbp+0x1]
   140061b83:	call   0x140066e90
   140061b88:	xor    ecx,ecx
   140061b8a:	lea    r9,[rsp+0x40]
   140061b8f:	cmp    DWORD PTR [rsp+0x40],0x2d
   140061b94:	lea    r8d,[rbp+0x1]
   140061b98:	mov    rdx,rsi
   140061b9b:	sete   cl
   140061b9e:	xor    eax,eax
   140061ba0:	test   ebp,ebp
   140061ba2:	setg   al
   140061ba5:	sub    rdx,rax
   140061ba8:	sub    rdx,rcx
   140061bab:	cmp    rsi,0xffffffffffffffff
   140061baf:	cmove  rdx,rsi
   140061bb3:	add    rcx,rax
   140061bb6:	add    rcx,rdi
   140061bb9:	call   0x140066900
   140061bbe:	test   eax,eax
   140061bc0:	je     0x140061bc7
   140061bc2:	mov    BYTE PTR [rdi],0x0
   140061bc5:	jmp    0x140061c04
   140061bc7:	mov    rax,QWORD PTR [rsp+0xa0]
   140061bcf:	mov    r8d,ebp
   140061bd2:	mov    r9b,BYTE PTR [rsp+0x90]
   140061bda:	mov    rdx,rsi
   140061bdd:	mov    QWORD PTR [rsp+0x38],rax
   140061be2:	mov    rcx,rdi
   140061be5:	lea    rax,[rsp+0x40]
   140061bea:	mov    BYTE PTR [rsp+0x30],0x0
   140061bef:	mov    QWORD PTR [rsp+0x28],rax
   140061bf4:	mov    eax,DWORD PTR [rsp+0x98]
   140061bfb:	mov    DWORD PTR [rsp+0x20],eax
   140061bff:	call   0x140061c1c
   140061c04:	mov    rbx,QWORD PTR [rsp+0x60]
   140061c09:	mov    rbp,QWORD PTR [rsp+0x68]
   140061c0e:	mov    rsi,QWORD PTR [rsp+0x70]
   140061c13:	add    rsp,0x50
   140061c17:	pop    rdi
   140061c18:	ret    
   140061c19:	int3   
   140061c1a:	int3   
   140061c1b:	int3   
   140061c1c:	mov    rax,rsp
   140061c1f:	mov    QWORD PTR [rax+0x8],rbx
   140061c23:	mov    QWORD PTR [rax+0x10],rbp
   140061c27:	mov    QWORD PTR [rax+0x18],rsi
   140061c2b:	mov    QWORD PTR [rax+0x20],rdi
   140061c2f:	push   r15
   140061c31:	sub    rsp,0x50
   140061c35:	xor    eax,eax
   140061c37:	movsxd rbx,r8d
   140061c3a:	test   r8d,r8d
   140061c3d:	mov    r15b,r9b
   140061c40:	mov    rbp,rdx
   140061c43:	mov    rdi,rcx
   140061c46:	cmovg  eax,ebx
   140061c49:	add    eax,0x9
   140061c4c:	cdqe   
   140061c4e:	cmp    rdx,rax
   140061c51:	ja     0x140061c81
   140061c53:	call   0x140060e94
   140061c58:	mov    ebx,0x22
   140061c5d:	mov    DWORD PTR [rax],ebx
   140061c5f:	call   0x140060d74
   140061c64:	mov    eax,ebx
   140061c66:	mov    rbx,QWORD PTR [rsp+0x60]
   140061c6b:	mov    rbp,QWORD PTR [rsp+0x68]
   140061c70:	mov    rsi,QWORD PTR [rsp+0x70]
   140061c75:	mov    rdi,QWORD PTR [rsp+0x78]
   140061c7a:	add    rsp,0x50
   140061c7e:	pop    r15
   140061c80:	ret    
   140061c81:	mov    rdx,QWORD PTR [rsp+0x98]
   140061c89:	lea    rcx,[rsp+0x30]
   140061c8e:	call   0x14005b174
   140061c93:	cmp    BYTE PTR [rsp+0x90],0x0
   140061c9b:	mov    rsi,QWORD PTR [rsp+0x88]
   140061ca3:	je     0x140061cd7
   140061ca5:	xor    edx,edx
   140061ca7:	cmp    DWORD PTR [rsi],0x2d
   140061caa:	sete   dl
   140061cad:	xor    eax,eax
   140061caf:	add    rdx,rdi
   140061cb2:	test   ebx,ebx
   140061cb4:	setg   al
   140061cb7:	test   eax,eax
   140061cb9:	je     0x140061cd7
   140061cbb:	or     r8,0xffffffffffffffff
   140061cbf:	inc    r8
   140061cc2:	cmp    BYTE PTR [rdx+r8*1],0x0
   140061cc7:	jne    0x140061cbf
   140061cc9:	movsxd rcx,eax
   140061ccc:	inc    r8
   140061ccf:	add    rcx,rdx
   140061cd2:	call   0x140059180
   140061cd7:	cmp    DWORD PTR [rsi],0x2d
   140061cda:	mov    rdx,rdi
   140061cdd:	jne    0x140061ce6
   140061cdf:	mov    BYTE PTR [rdi],0x2d
   140061ce2:	lea    rdx,[rdi+0x1]
   140061ce6:	test   ebx,ebx
   140061ce8:	jle    0x140061d05
   140061cea:	mov    al,BYTE PTR [rdx+0x1]
   140061ced:	mov    BYTE PTR [rdx],al
   140061cef:	inc    rdx
   140061cf2:	mov    rax,QWORD PTR [rsp+0x38]
   140061cf7:	mov    rcx,QWORD PTR [rax+0xf8]
   140061cfe:	mov    rax,QWORD PTR [rcx]
   140061d01:	mov    cl,BYTE PTR [rax]
   140061d03:	mov    BYTE PTR [rdx],cl
   140061d05:	xor    ecx,ecx
   140061d07:	lea    r8,[rip+0x10796]        # 0x1400724a4
   140061d0e:	cmp    BYTE PTR [rsp+0x90],cl
   140061d15:	sete   cl
   140061d18:	add    rbx,rdx
   140061d1b:	add    rbx,rcx
   140061d1e:	sub    rdi,rbx
   140061d21:	mov    rcx,rbx
   140061d24:	cmp    rbp,0xffffffffffffffff
   140061d28:	lea    rdx,[rdi+rbp*1]
   140061d2c:	cmove  rdx,rbp
   140061d30:	call   0x140060914
   140061d35:	test   eax,eax
   140061d37:	jne    0x140061de1
   140061d3d:	lea    rcx,[rbx+0x2]
   140061d41:	test   r15b,r15b
   140061d44:	je     0x140061d49
   140061d46:	mov    BYTE PTR [rbx],0x45
   140061d49:	mov    rax,QWORD PTR [rsi+0x8]
   140061d4d:	cmp    BYTE PTR [rax],0x30
   140061d50:	je     0x140061da9
   140061d52:	mov    r8d,DWORD PTR [rsi+0x4]
   140061d56:	sub    r8d,0x1
   140061d5a:	jns    0x140061d63
   140061d5c:	neg    r8d
   140061d5f:	mov    BYTE PTR [rbx+0x1],0x2d
   140061d63:	cmp    r8d,0x64
   140061d67:	jl     0x140061d84
   140061d69:	mov    eax,0x51eb851f
   140061d6e:	imul   r8d
   140061d71:	sar    edx,0x5
   140061d74:	mov    eax,edx
   140061d76:	shr    eax,0x1f
   140061d79:	add    edx,eax
   140061d7b:	add    BYTE PTR [rbx+0x2],dl
   140061d7e:	imul   eax,edx,0xffffff9c
   140061d81:	add    r8d,eax
   140061d84:	cmp    r8d,0xa
   140061d88:	jl     0x140061da5
   140061d8a:	mov    eax,0x66666667
   140061d8f:	imul   r8d
   140061d92:	sar    edx,0x2
   140061d95:	mov    eax,edx
   140061d97:	shr    eax,0x1f
   140061d9a:	add    edx,eax
   140061d9c:	add    BYTE PTR [rbx+0x3],dl
   140061d9f:	imul   eax,edx,0xfffffff6
   140061da2:	add    r8d,eax
   140061da5:	add    BYTE PTR [rbx+0x4],r8b
   140061da9:	cmp    DWORD PTR [rsp+0x80],0x2
   140061db1:	jne    0x140061dc7
   140061db3:	cmp    BYTE PTR [rcx],0x30
   140061db6:	jne    0x140061dc7
   140061db8:	lea    rdx,[rcx+0x1]
   140061dbc:	mov    r8d,0x3
   140061dc2:	call   0x140059180
   140061dc7:	cmp    BYTE PTR [rsp+0x48],0x0
   140061dcc:	je     0x140061dda
   140061dce:	mov    rax,QWORD PTR [rsp+0x30]
   140061dd3:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   140061dda:	xor    eax,eax
   140061ddc:	jmp    0x140061c66
   140061de1:	and    QWORD PTR [rsp+0x20],0x0
   140061de7:	xor    r9d,r9d
   140061dea:	xor    r8d,r8d
   140061ded:	xor    edx,edx
   140061def:	xor    ecx,ecx
   140061df1:	call   0x140060d94
   140061df6:	int3   
   140061df7:	int3   
   140061df8:	mov    rax,rsp
   140061dfb:	mov    QWORD PTR [rax+0x8],rbx
   140061dff:	mov    QWORD PTR [rax+0x10],rbp
   140061e03:	mov    QWORD PTR [rax+0x18],rsi
   140061e07:	mov    QWORD PTR [rax+0x20],rdi
   140061e0b:	push   r14
   140061e0d:	sub    rsp,0x40
   140061e11:	mov    rdx,QWORD PTR [rsp+0x78]
   140061e16:	mov    rbx,rcx
   140061e19:	lea    rcx,[rax-0x28]
   140061e1d:	mov    r14,r9
   140061e20:	mov    edi,r8d
   140061e23:	call   0x14005b174
   140061e28:	mov    ecx,DWORD PTR [r14+0x4]
   140061e2c:	dec    ecx
   140061e2e:	cmp    BYTE PTR [rsp+0x70],0x0
   140061e33:	je     0x140061e4e
   140061e35:	cmp    ecx,edi
   140061e37:	jne    0x140061e4e
   140061e39:	xor    eax,eax
   140061e3b:	movsxd rcx,ecx
   140061e3e:	cmp    DWORD PTR [r14],0x2d
   140061e42:	sete   al
   140061e45:	add    rax,rbx
   140061e48:	mov    WORD PTR [rcx+rax*1],0x30
   140061e4e:	cmp    DWORD PTR [r14],0x2d
   140061e52:	jne    0x140061e5a
   140061e54:	mov    BYTE PTR [rbx],0x2d
   140061e57:	inc    rbx
   140061e5a:	or     rsi,0xffffffffffffffff
   140061e5e:	cmp    DWORD PTR [r14+0x4],0x0
   140061e63:	jg     0x140061e89
   140061e65:	mov    r8,rsi
   140061e68:	inc    r8
   140061e6b:	cmp    BYTE PTR [rbx+r8*1],0x0
   140061e70:	jne    0x140061e68
   140061e72:	inc    r8
   140061e75:	lea    rcx,[rbx+0x1]
   140061e79:	mov    rdx,rbx
   140061e7c:	call   0x140059180
   140061e81:	mov    BYTE PTR [rbx],0x30
   140061e84:	inc    rbx
   140061e87:	jmp    0x140061e90
   140061e89:	movsxd rax,DWORD PTR [r14+0x4]
   140061e8d:	add    rbx,rax
   140061e90:	test   edi,edi
   140061e92:	jle    0x140061f10
   140061e94:	lea    rbp,[rbx+0x1]
   140061e98:	mov    r8,rsi
   140061e9b:	inc    r8
   140061e9e:	cmp    BYTE PTR [rbx+r8*1],0x0
   140061ea3:	jne    0x140061e9b
   140061ea5:	inc    r8
   140061ea8:	mov    rdx,rbx
   140061eab:	mov    rcx,rbp
   140061eae:	call   0x140059180
   140061eb3:	mov    rax,QWORD PTR [rsp+0x28]
   140061eb8:	mov    rcx,QWORD PTR [rax+0xf8]
   140061ebf:	mov    rax,QWORD PTR [rcx]
   140061ec2:	mov    cl,BYTE PTR [rax]
   140061ec4:	mov    BYTE PTR [rbx],cl
   140061ec6:	mov    ecx,DWORD PTR [r14+0x4]
   140061eca:	test   ecx,ecx
   140061ecc:	jns    0x140061f10
   140061ece:	cmp    BYTE PTR [rsp+0x70],0x0
   140061ed3:	jne    0x140061edd
   140061ed5:	mov    eax,ecx
   140061ed7:	neg    eax
   140061ed9:	cmp    eax,edi
   140061edb:	jge    0x140061ee1
   140061edd:	mov    edi,ecx
   140061edf:	neg    edi
   140061ee1:	test   edi,edi
   140061ee3:	je     0x140061f00
   140061ee5:	inc    rsi
   140061ee8:	cmp    BYTE PTR [rsi+rbp*1],0x0
   140061eec:	jne    0x140061ee5
   140061eee:	movsxd rcx,edi
   140061ef1:	lea    r8,[rsi+0x1]
   140061ef5:	add    rcx,rbp
   140061ef8:	mov    rdx,rbp
   140061efb:	call   0x140059180
   140061f00:	movsxd r8,edi
   140061f03:	mov    edx,0x30
   140061f08:	mov    rcx,rbp
   140061f0b:	call   0x140058f40
   140061f10:	cmp    BYTE PTR [rsp+0x38],0x0
   140061f15:	je     0x140061f23
   140061f17:	mov    rax,QWORD PTR [rsp+0x20]
   140061f1c:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   140061f23:	mov    rbx,QWORD PTR [rsp+0x50]
   140061f28:	xor    eax,eax
   140061f2a:	mov    rbp,QWORD PTR [rsp+0x58]
   140061f2f:	mov    rsi,QWORD PTR [rsp+0x60]
   140061f34:	mov    rdi,QWORD PTR [rsp+0x68]
   140061f39:	add    rsp,0x40
   140061f3d:	pop    r14
   140061f3f:	ret    
   140061f40:	mov    r11,rsp
   140061f43:	mov    QWORD PTR [r11+0x8],rbx
   140061f47:	mov    QWORD PTR [r11+0x10],rbp
   140061f4b:	mov    QWORD PTR [r11+0x18],rsi
   140061f4f:	push   r14
   140061f51:	sub    rsp,0x50
   140061f55:	mov    rcx,QWORD PTR [rcx]
   140061f58:	xor    eax,eax
   140061f5a:	mov    QWORD PTR [r11-0x18],rax
   140061f5e:	mov    rbp,r8
   140061f61:	mov    QWORD PTR [r11-0x10],rax
   140061f65:	lea    r8,[r11-0x18]
   140061f69:	mov    rax,QWORD PTR [rsp+0x80]
   140061f71:	mov    rsi,rdx
   140061f74:	mov    edx,DWORD PTR [rsp+0x88]
   140061f7b:	mov    QWORD PTR [r11-0x38],rax
   140061f7f:	call   0x140066e90
   140061f84:	mov    r14d,DWORD PTR [rsp+0x44]
   140061f89:	lea    r9,[rsp+0x40]
   140061f8e:	mov    r8d,DWORD PTR [rsp+0x88]
   140061f96:	xor    ecx,ecx
   140061f98:	cmp    DWORD PTR [rsp+0x40],0x2d
   140061f9d:	mov    rdx,rbp
   140061fa0:	sete   cl
   140061fa3:	dec    r14d
   140061fa6:	sub    rdx,rcx
   140061fa9:	cmp    rbp,0xffffffffffffffff
   140061fad:	lea    rbx,[rcx+rsi*1]
   140061fb1:	cmove  rdx,rbp
   140061fb5:	mov    rcx,rbx
   140061fb8:	call   0x140066900
   140061fbd:	test   eax,eax
   140061fbf:	je     0x140061fc9
   140061fc1:	mov    BYTE PTR [rsi],0x0
   140061fc4:	jmp    0x140062061
   140061fc9:	mov    eax,DWORD PTR [rsp+0x44]
   140061fcd:	dec    eax
   140061fcf:	cmp    r14d,eax
   140061fd2:	setl   cl
   140061fd5:	cmp    eax,0xfffffffc
   140061fd8:	jl     0x14006201f
   140061fda:	cmp    eax,DWORD PTR [rsp+0x88]
   140061fe1:	jge    0x14006201f
   140061fe3:	test   cl,cl
   140061fe5:	je     0x140061ff3
   140061fe7:	mov    al,BYTE PTR [rbx]
   140061fe9:	inc    rbx
   140061fec:	test   al,al
   140061fee:	jne    0x140061fe7
   140061ff0:	mov    BYTE PTR [rbx-0x2],al
   140061ff3:	mov    rax,QWORD PTR [rsp+0xa0]
   140061ffb:	lea    r9,[rsp+0x40]
   140062000:	mov    r8d,DWORD PTR [rsp+0x88]
   140062008:	mov    rdx,rbp
   14006200b:	mov    QWORD PTR [rsp+0x28],rax
   140062010:	mov    rcx,rsi
   140062013:	mov    BYTE PTR [rsp+0x20],0x1
   140062018:	call   0x140061df8
   14006201d:	jmp    0x140062061
   14006201f:	mov    rax,QWORD PTR [rsp+0xa0]
   140062027:	mov    rdx,rbp
   14006202a:	mov    r9b,BYTE PTR [rsp+0x90]
   140062032:	mov    rcx,rsi
   140062035:	mov    r8d,DWORD PTR [rsp+0x88]
   14006203d:	mov    QWORD PTR [rsp+0x38],rax
   140062042:	lea    rax,[rsp+0x40]
   140062047:	mov    BYTE PTR [rsp+0x30],0x1
   14006204c:	mov    QWORD PTR [rsp+0x28],rax
   140062051:	mov    eax,DWORD PTR [rsp+0x98]
   140062058:	mov    DWORD PTR [rsp+0x20],eax
   14006205c:	call   0x140061c1c
   140062061:	mov    rbx,QWORD PTR [rsp+0x60]
   140062066:	mov    rbp,QWORD PTR [rsp+0x68]
   14006206b:	mov    rsi,QWORD PTR [rsp+0x70]
   140062070:	add    rsp,0x50
   140062074:	pop    r14
   140062076:	ret    
   140062077:	int3   
   140062078:	rex push rbp
   14006207a:	lea    rbp,[rsp-0x4f]
   14006207f:	sub    rsp,0xc0
   140062086:	mov    rax,QWORD PTR [rip+0x1fe53]        # 0x140081ee0
   14006208d:	xor    rax,rsp
   140062090:	mov    QWORD PTR [rbp+0x3f],rax
   140062094:	mov    r10,r9
   140062097:	movzx  eax,dl
   14006209a:	add    rax,0x4
   14006209e:	mov    r9,r8
   1400620a1:	cmp    r10,rax
   1400620a4:	jae    0x1400620c4
   1400620a6:	mov    BYTE PTR [r8],0x0
   1400620aa:	mov    eax,0xc
   1400620af:	mov    rcx,QWORD PTR [rbp+0x3f]
   1400620b3:	xor    rcx,rsp
   1400620b6:	call   0x140055f90
   1400620bb:	add    rsp,0xc0
   1400620c2:	pop    rbp
   1400620c3:	ret    
   1400620c4:	test   dl,dl
   1400620c6:	je     0x1400620d6
   1400620c8:	inc    r9
   1400620cb:	mov    BYTE PTR [r8],0x2d
   1400620cf:	dec    r10
   1400620d2:	mov    BYTE PTR [r9],0x0
   1400620d6:	neg    BYTE PTR [rbp+0x7f]
   1400620d9:	lea    rdx,[rip+0x10380]        # 0x140072460
   1400620e0:	lea    r8,[rip+0x1037d]        # 0x140072464
   1400620e7:	mov    QWORD PTR [rbp-0x21],rdx
   1400620eb:	lea    rax,[rip+0x10366]        # 0x140072458
   1400620f2:	mov    QWORD PTR [rbp-0x19],rdx
   1400620f6:	mov    QWORD PTR [rbp-0x41],rax
   1400620fa:	mov    QWORD PTR [rbp-0x39],rax
   1400620fe:	lea    rax,[rip+0x10357]        # 0x14007245c
   140062105:	mov    QWORD PTR [rbp-0x31],rax
   140062109:	mov    QWORD PTR [rbp-0x29],rax
   14006210d:	lea    rax,[rip+0x10354]        # 0x140072468
   140062114:	mov    QWORD PTR [rbp-0x1],rax
   140062118:	lea    rax,[rip+0x10359]        # 0x140072478
   14006211f:	mov    QWORD PTR [rbp+0xf],rax
   140062123:	lea    rax,[rip+0x1035e]        # 0x140072488
   14006212a:	mov    QWORD PTR [rbp+0x1f],rax
   14006212e:	lea    rax,[rip+0x10363]        # 0x140072498
   140062135:	mov    QWORD PTR [rbp+0x2f],rax
   140062139:	mov    QWORD PTR [rbp+0x7],rdx
   14006213d:	mov    QWORD PTR [rbp+0x27],rdx
   140062141:	lea    edx,[rcx-0x1]
   140062144:	sbb    ecx,ecx
   140062146:	mov    QWORD PTR [rbp-0x11],r8
   14006214a:	shl    rdx,0x2
   14006214e:	not    ecx
   140062150:	and    ecx,0x2
   140062153:	mov    QWORD PTR [rbp-0x9],r8
   140062157:	mov    eax,ecx
   140062159:	add    rax,rdx
   14006215c:	mov    QWORD PTR [rbp+0x17],r8
   140062160:	mov    QWORD PTR [rbp+0x37],r8
   140062164:	mov    r8,QWORD PTR [rbp+rax*8-0x41]
   140062169:	or     rax,0xffffffffffffffff
   14006216d:	inc    rax
   140062170:	cmp    BYTE PTR [r8+rax*1],0x0
   140062175:	jne    0x14006216d
   140062177:	cmp    r10,rax
   14006217a:	seta   al
   14006217d:	xor    r8d,r8d
   140062180:	test   al,al
   140062182:	sete   r8b
   140062186:	add    r8d,ecx
   140062189:	mov    rcx,r9
   14006218c:	add    r8,rdx
   14006218f:	mov    rdx,r10
   140062192:	mov    r8,QWORD PTR [rbp+r8*8-0x41]
   140062197:	call   0x140060914
   14006219c:	test   eax,eax
   14006219e:	je     0x1400620af
   1400621a4:	and    QWORD PTR [rsp+0x20],0x0
   1400621aa:	xor    r9d,r9d
   1400621ad:	xor    r8d,r8d
   1400621b0:	xor    edx,edx
   1400621b2:	xor    ecx,ecx
   1400621b4:	call   0x140060d94
   1400621b9:	int3   
   1400621ba:	int3   
   1400621bb:	int3   
   1400621bc:	mov    QWORD PTR [rsp+0x8],rbx
   1400621c1:	mov    QWORD PTR [rsp+0x10],rbp
   1400621c6:	mov    QWORD PTR [rsp+0x18],rsi
   1400621cb:	push   rdi
   1400621cc:	push   r12
   1400621ce:	push   r13
   1400621d0:	push   r14
   1400621d2:	push   r15
   1400621d4:	sub    rsp,0x60
   1400621d8:	mov    r13,r9
   1400621db:	mov    rbp,r8
   1400621de:	mov    rsi,rdx
   1400621e1:	mov    r15,rcx
   1400621e4:	test   rdx,rdx
   1400621e7:	jne    0x140062201
   1400621e9:	call   0x140060e94
   1400621ee:	mov    ebx,0x16
   1400621f3:	mov    DWORD PTR [rax],ebx
   1400621f5:	call   0x140060d74
   1400621fa:	mov    eax,ebx
   1400621fc:	jmp    0x1400623df
   140062201:	test   r8,r8
   140062204:	je     0x1400621e9
   140062206:	test   r9,r9
   140062209:	je     0x1400621e9
   14006220b:	mov    r12,QWORD PTR [rsp+0xb0]
   140062213:	test   r12,r12
   140062216:	je     0x1400621e9
   140062218:	mov    ebx,DWORD PTR [rsp+0xb8]
   14006221f:	cmp    ebx,0x41
   140062222:	je     0x140062231
   140062224:	lea    eax,[rbx-0x45]
   140062227:	cmp    eax,0x2
   14006222a:	jbe    0x140062231
   14006222c:	xor    r14b,r14b
   14006222f:	jmp    0x140062234
   140062231:	mov    r14b,0x1
   140062234:	mov    rdi,QWORD PTR [rsp+0xc8]
   14006223c:	test   dil,0x8
   140062240:	jne    0x14006226c
   140062242:	call   0x140061784
   140062247:	test   eax,eax
   140062249:	je     0x14006226c
   14006224b:	mov    rdx,QWORD PTR [r15]
   14006224e:	mov    r9,rbp
   140062251:	shr    rdx,0x3f
   140062255:	mov    r8,rsi
   140062258:	and    dl,0x1
   14006225b:	mov    BYTE PTR [rsp+0x20],r14b
   140062260:	mov    ecx,eax
   140062262:	call   0x140062078
   140062267:	jmp    0x1400623df
   14006226c:	shr    rdi,0x4
   140062270:	and    edi,0x1
   140062273:	or     edi,0x2
   140062276:	sub    ebx,0x41
   140062279:	je     0x1400623a8
   14006227f:	sub    ebx,0x4
   140062282:	je     0x14006236f
   140062288:	sub    ebx,0x1
   14006228b:	je     0x1400622e5
   14006228d:	sub    ebx,0x1
   140062290:	je     0x1400622a9
   140062292:	sub    ebx,0x1a
   140062295:	je     0x1400623a8
   14006229b:	sub    ebx,0x4
   14006229e:	je     0x14006236f
   1400622a4:	cmp    ebx,0x1
   1400622a7:	je     0x1400622e5
   1400622a9:	mov    rax,QWORD PTR [rsp+0xd0]
   1400622b1:	mov    r9,r13
   1400622b4:	mov    QWORD PTR [rsp+0x40],rax
   1400622b9:	mov    r8,rbp
   1400622bc:	mov    eax,DWORD PTR [rsp+0xc0]
   1400622c3:	mov    rdx,rsi
   1400622c6:	mov    DWORD PTR [rsp+0x38],edi
   1400622ca:	mov    rcx,r15
   1400622cd:	mov    BYTE PTR [rsp+0x30],r14b
   1400622d2:	mov    DWORD PTR [rsp+0x28],eax
   1400622d6:	mov    QWORD PTR [rsp+0x20],r12
   1400622db:	call   0x140061f40
   1400622e0:	jmp    0x1400623df
   1400622e5:	mov    ebx,DWORD PTR [rsp+0xc0]
   1400622ec:	lea    r8,[rsp+0x50]
   1400622f1:	mov    rcx,QWORD PTR [r15]
   1400622f4:	xor    eax,eax
   1400622f6:	mov    edx,ebx
   1400622f8:	mov    QWORD PTR [rsp+0x50],rax
   1400622fd:	mov    r9,r13
   140062300:	mov    QWORD PTR [rsp+0x58],rax
   140062305:	mov    QWORD PTR [rsp+0x20],r12
   14006230a:	call   0x140066e90
   14006230f:	mov    r8d,DWORD PTR [rsp+0x54]
   140062314:	lea    r9,[rsp+0x50]
   140062319:	xor    ecx,ecx
   14006231b:	mov    rdx,rbp
   14006231e:	cmp    DWORD PTR [rsp+0x50],0x2d
   140062323:	sete   cl
   140062326:	add    r8d,ebx
   140062329:	sub    rdx,rcx
   14006232c:	cmp    rbp,0xffffffffffffffff
   140062330:	cmove  rdx,rbp
   140062334:	add    rcx,rsi
   140062337:	call   0x140066900
   14006233c:	test   eax,eax
   14006233e:	je     0x140062348
   140062340:	mov    BYTE PTR [rsi],0x0
   140062343:	jmp    0x1400623df
   140062348:	mov    rax,QWORD PTR [rsp+0xd0]
   140062350:	lea    r9,[rsp+0x50]
   140062355:	mov    QWORD PTR [rsp+0x28],rax
   14006235a:	mov    r8d,ebx
   14006235d:	mov    rdx,rbp
   140062360:	mov    BYTE PTR [rsp+0x20],0x0
   140062365:	mov    rcx,rsi
   140062368:	call   0x140061df8
   14006236d:	jmp    0x1400623df
   14006236f:	mov    rax,QWORD PTR [rsp+0xd0]
   140062377:	mov    r9,r13
   14006237a:	mov    QWORD PTR [rsp+0x40],rax
   14006237f:	mov    r8,rbp
   140062382:	mov    eax,DWORD PTR [rsp+0xc0]
   140062389:	mov    rdx,rsi
   14006238c:	mov    DWORD PTR [rsp+0x38],edi
   140062390:	mov    rcx,r15
   140062393:	mov    BYTE PTR [rsp+0x30],r14b
   140062398:	mov    DWORD PTR [rsp+0x28],eax
   14006239c:	mov    QWORD PTR [rsp+0x20],r12
   1400623a1:	call   0x140061b4c
   1400623a6:	jmp    0x1400623df
   1400623a8:	mov    rax,QWORD PTR [rsp+0xd0]
   1400623b0:	mov    r9,r13
   1400623b3:	mov    QWORD PTR [rsp+0x40],rax
   1400623b8:	mov    r8,rbp
   1400623bb:	mov    eax,DWORD PTR [rsp+0xc0]
   1400623c2:	mov    rdx,rsi
   1400623c5:	mov    DWORD PTR [rsp+0x38],edi
   1400623c9:	mov    rcx,r15
   1400623cc:	mov    BYTE PTR [rsp+0x30],r14b
   1400623d1:	mov    DWORD PTR [rsp+0x28],eax
   1400623d5:	mov    QWORD PTR [rsp+0x20],r12
   1400623da:	call   0x1400617ec
   1400623df:	lea    r11,[rsp+0x60]
   1400623e4:	mov    rbx,QWORD PTR [r11+0x30]
   1400623e8:	mov    rbp,QWORD PTR [r11+0x38]
   1400623ec:	mov    rsi,QWORD PTR [r11+0x40]
   1400623f0:	mov    rsp,r11
   1400623f3:	pop    r15
   1400623f5:	pop    r14
   1400623f7:	pop    r13
   1400623f9:	pop    r12
   1400623fb:	pop    rdi
   1400623fc:	ret    
   1400623fd:	int3   
   1400623fe:	int3   
   1400623ff:	int3   
   140062400:	mov    rcx,QWORD PTR [rip+0x1fad9]        # 0x140081ee0
   140062407:	xor    eax,eax
   140062409:	or     rcx,0x1
   14006240d:	cmp    QWORD PTR [rip+0x3d33c],rcx        # 0x14009f750
   140062414:	sete   al
   140062417:	ret    
   140062418:	mov    rax,rsp
   14006241b:	mov    QWORD PTR [rax+0x8],rbx
   14006241f:	mov    QWORD PTR [rax+0x10],rbp
   140062423:	mov    QWORD PTR [rax+0x18],rsi
   140062427:	mov    QWORD PTR [rax+0x20],rdi
   14006242b:	push   r14
   14006242d:	sub    rsp,0x90
   140062434:	lea    rcx,[rax-0x78]
   140062438:	call   QWORD PTR [rip+0x9f92]        # 0x14006c3d0
   14006243e:	xor    r14d,r14d
   140062441:	cmp    WORD PTR [rsp+0x62],r14w
   140062447:	je     0x1400624e5
   14006244d:	mov    rax,QWORD PTR [rsp+0x68]
   140062452:	test   rax,rax
   140062455:	je     0x1400624e5
   14006245b:	movsxd rbx,DWORD PTR [rax]
   14006245e:	lea    rsi,[rax+0x4]
   140062462:	mov    edi,0x2000
   140062467:	add    rbx,rsi
   14006246a:	cmp    DWORD PTR [rax],edi
   14006246c:	cmovl  edi,DWORD PTR [rax]
   14006246f:	mov    ecx,edi
   140062471:	call   0x140063f74
   140062476:	cmp    edi,DWORD PTR [rip+0x3d6f4]        # 0x14009fb70
   14006247c:	cmovg  edi,DWORD PTR [rip+0x3d6ed]        # 0x14009fb70
   140062483:	test   edi,edi
   140062485:	je     0x1400624e5
   140062487:	mov    ebp,r14d
   14006248a:	cmp    QWORD PTR [rbx],0xffffffffffffffff
   14006248e:	je     0x1400624d5
   140062490:	cmp    QWORD PTR [rbx],0xfffffffffffffffe
   140062494:	je     0x1400624d5
   140062496:	test   BYTE PTR [rsi],0x1
   140062499:	je     0x1400624d5
   14006249b:	test   BYTE PTR [rsi],0x8
   14006249e:	jne    0x1400624ad
   1400624a0:	mov    rcx,QWORD PTR [rbx]
   1400624a3:	call   QWORD PTR [rip+0x9e97]        # 0x14006c340
   1400624a9:	test   eax,eax
   1400624ab:	je     0x1400624d5
   1400624ad:	mov    rcx,rbp
   1400624b0:	lea    rdx,[rip+0x3d2b9]        # 0x14009f770
   1400624b7:	and    ecx,0x3f
   1400624ba:	mov    rax,rbp
   1400624bd:	sar    rax,0x6
   1400624c1:	shl    rcx,0x6
   1400624c5:	add    rcx,QWORD PTR [rdx+rax*8]
   1400624c9:	mov    rax,QWORD PTR [rbx]
   1400624cc:	mov    QWORD PTR [rcx+0x28],rax
   1400624d0:	mov    al,BYTE PTR [rsi]
   1400624d2:	mov    BYTE PTR [rcx+0x38],al
   1400624d5:	inc    rbp
   1400624d8:	inc    rsi
   1400624db:	add    rbx,0x8
   1400624df:	sub    rdi,0x1
   1400624e3:	jne    0x14006248a
   1400624e5:	lea    r11,[rsp+0x90]
   1400624ed:	mov    rbx,QWORD PTR [r11+0x10]
   1400624f1:	mov    rbp,QWORD PTR [r11+0x18]
   1400624f5:	mov    rsi,QWORD PTR [r11+0x20]
   1400624f9:	mov    rdi,QWORD PTR [r11+0x28]
   1400624fd:	mov    rsp,r11
   140062500:	pop    r14
   140062502:	ret    
   140062503:	int3   
   140062504:	mov    QWORD PTR [rsp+0x8],rbx
   140062509:	mov    QWORD PTR [rsp+0x10],rsi
   14006250e:	mov    QWORD PTR [rsp+0x18],rdi
   140062513:	push   r14
   140062515:	sub    rsp,0x20
   140062519:	xor    edi,edi
   14006251b:	xor    r14d,r14d
   14006251e:	movsxd rbx,edi
   140062521:	lea    rcx,[rip+0x3d248]        # 0x14009f770
   140062528:	mov    rax,rbx
   14006252b:	and    ebx,0x3f
   14006252e:	sar    rax,0x6
   140062532:	shl    rbx,0x6
   140062536:	add    rbx,QWORD PTR [rcx+rax*8]
   14006253a:	mov    rax,QWORD PTR [rbx+0x28]
   14006253e:	add    rax,0x2
   140062542:	cmp    rax,0x1
   140062546:	jbe    0x140062551
   140062548:	or     BYTE PTR [rbx+0x38],0x80
   14006254c:	jmp    0x1400625da
   140062551:	mov    BYTE PTR [rbx+0x38],0x81
   140062555:	mov    ecx,edi
   140062557:	test   edi,edi
   140062559:	je     0x140062571
   14006255b:	sub    ecx,0x1
   14006255e:	je     0x14006256a
   140062560:	cmp    ecx,0x1
   140062563:	mov    ecx,0xfffffff4
   140062568:	jmp    0x140062576
   14006256a:	mov    ecx,0xfffffff5
   14006256f:	jmp    0x140062576
   140062571:	mov    ecx,0xfffffff6
   140062576:	call   QWORD PTR [rip+0x9dbc]        # 0x14006c338
   14006257c:	mov    rsi,rax
   14006257f:	lea    rcx,[rax+0x1]
   140062583:	cmp    rcx,0x1
   140062587:	jbe    0x140062594
   140062589:	mov    rcx,rax
   14006258c:	call   QWORD PTR [rip+0x9dae]        # 0x14006c340
   140062592:	jmp    0x140062596
   140062594:	xor    eax,eax
   140062596:	test   eax,eax
   140062598:	je     0x1400625b7
   14006259a:	movzx  ecx,al
   14006259d:	mov    QWORD PTR [rbx+0x28],rsi
   1400625a1:	cmp    ecx,0x2
   1400625a4:	jne    0x1400625ac
   1400625a6:	or     BYTE PTR [rbx+0x38],0x40
   1400625aa:	jmp    0x1400625da
   1400625ac:	cmp    ecx,0x3
   1400625af:	jne    0x1400625da
   1400625b1:	or     BYTE PTR [rbx+0x38],0x8
   1400625b5:	jmp    0x1400625da
   1400625b7:	or     BYTE PTR [rbx+0x38],0x40
   1400625bb:	mov    QWORD PTR [rbx+0x28],0xfffffffffffffffe
   1400625c3:	mov    rax,QWORD PTR [rip+0x3cfa6]        # 0x14009f570
   1400625ca:	test   rax,rax
   1400625cd:	je     0x1400625da
   1400625cf:	mov    rax,QWORD PTR [r14+rax*1]
   1400625d3:	mov    DWORD PTR [rax+0x18],0xfffffffe
   1400625da:	inc    edi
   1400625dc:	add    r14,0x8
   1400625e0:	cmp    edi,0x3
   1400625e3:	jne    0x14006251e
   1400625e9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400625ee:	mov    rsi,QWORD PTR [rsp+0x38]
   1400625f3:	mov    rdi,QWORD PTR [rsp+0x40]
   1400625f8:	add    rsp,0x20
   1400625fc:	pop    r14
   1400625fe:	ret    
   1400625ff:	int3   
   140062600:	rex push rbx
   140062602:	sub    rsp,0x20
   140062606:	mov    ecx,0x7
   14006260b:	call   0x140062874
   140062610:	xor    ebx,ebx
   140062612:	xor    ecx,ecx
   140062614:	call   0x140063f74
   140062619:	test   eax,eax
   14006261b:	jne    0x140062629
   14006261d:	call   0x140062418
   140062622:	call   0x140062504
   140062627:	mov    bl,0x1
   140062629:	mov    ecx,0x7
   14006262e:	call   0x1400628c8
   140062633:	mov    al,bl
   140062635:	add    rsp,0x20
   140062639:	pop    rbx
   14006263a:	ret    
   14006263b:	int3   
   14006263c:	mov    QWORD PTR [rsp+0x8],rbx
   140062641:	push   rdi
   140062642:	sub    rsp,0x20
   140062646:	xor    ebx,ebx
   140062648:	lea    rdi,[rip+0x3d121]        # 0x14009f770
   14006264f:	mov    rcx,QWORD PTR [rbx+rdi*1]
   140062653:	test   rcx,rcx
   140062656:	je     0x140062662
   140062658:	call   0x140063f24
   14006265d:	and    QWORD PTR [rbx+rdi*1],0x0
   140062662:	add    rbx,0x8
   140062666:	cmp    rbx,0x400
   14006266d:	jb     0x140062648
   14006266f:	mov    al,0x1
   140062671:	mov    rbx,QWORD PTR [rsp+0x30]
   140062676:	add    rsp,0x20
   14006267a:	pop    rdi
   14006267b:	ret    
   14006267c:	sub    rsp,0x28
   140062680:	call   0x140061588
   140062685:	lea    rdx,[rsp+0x30]
   14006268a:	mov    rcx,QWORD PTR [rax+0x90]
   140062691:	mov    QWORD PTR [rsp+0x30],rcx
   140062696:	mov    rcx,rax
   140062699:	call   0x14006171c
   14006269e:	mov    rax,QWORD PTR [rsp+0x30]
   1400626a3:	mov    rax,QWORD PTR [rax]
   1400626a6:	add    rsp,0x28
   1400626aa:	ret    
   1400626ab:	int3   
   1400626ac:	mov    QWORD PTR [rsp+0x10],rbx
   1400626b1:	push   rdi
   1400626b2:	sub    rsp,0x20
   1400626b6:	mov    eax,0xffff
   1400626bb:	movzx  ebx,dx
   1400626be:	cmp    cx,ax
   1400626c1:	jne    0x1400626c7
   1400626c3:	xor    eax,eax
   1400626c5:	jmp    0x140062711
   1400626c7:	mov    eax,0x100
   1400626cc:	cmp    cx,ax
   1400626cf:	jae    0x1400626e1
   1400626d1:	mov    rax,QWORD PTR [rip+0x1fb28]        # 0x140082200
   1400626d8:	movzx  ecx,cx
   1400626db:	movzx  eax,WORD PTR [rax+rcx*2]
   1400626df:	jmp    0x14006270c
   1400626e1:	xor    edi,edi
   1400626e3:	mov    WORD PTR [rsp+0x40],cx
   1400626e8:	lea    r9,[rsp+0x30]
   1400626ed:	mov    WORD PTR [rsp+0x30],di
   1400626f2:	lea    rdx,[rsp+0x40]
   1400626f7:	lea    ecx,[rdi+0x1]
   1400626fa:	mov    r8d,ecx
   1400626fd:	call   QWORD PTR [rip+0x9d85]        # 0x14006c488
   140062703:	test   eax,eax
   140062705:	je     0x1400626c3
   140062707:	movzx  eax,WORD PTR [rsp+0x30]
   14006270c:	movzx  ecx,bx
   14006270f:	and    eax,ecx
   140062711:	mov    rbx,QWORD PTR [rsp+0x38]
   140062716:	add    rsp,0x20
   14006271a:	pop    rdi
   14006271b:	ret    
   14006271c:	mov    QWORD PTR [rsp+0x10],rsi
   140062721:	mov    QWORD PTR [rsp+0x18],rdi
   140062726:	mov    QWORD PTR [rsp+0x20],r14
   14006272b:	push   rbp
   14006272c:	mov    rbp,rsp
   14006272f:	sub    rsp,0x80
   140062736:	mov    rax,QWORD PTR [rip+0x1f7a3]        # 0x140081ee0
   14006273d:	xor    rax,rsp
   140062740:	mov    QWORD PTR [rbp-0x10],rax
   140062744:	mov    r14d,edx
   140062747:	movsxd rdi,ecx
   14006274a:	mov    rdx,r8
   14006274d:	lea    rcx,[rbp-0x38]
   140062751:	call   0x14005b174
   140062756:	lea    eax,[rdi+0x1]
   140062759:	cmp    eax,0x100
   14006275e:	ja     0x140062770
   140062760:	mov    rax,QWORD PTR [rbp-0x30]
   140062764:	mov    rcx,QWORD PTR [rax]
   140062767:	movzx  eax,WORD PTR [rcx+rdi*2]
   14006276b:	jmp    0x1400627f2
   140062770:	mov    esi,edi
   140062772:	lea    rdx,[rbp-0x30]
   140062776:	sar    esi,0x8
   140062779:	movzx  ecx,sil
   14006277d:	call   0x1400641a8
   140062782:	mov    edx,0x1
   140062787:	test   eax,eax
   140062789:	je     0x14006279d
   14006278b:	mov    BYTE PTR [rbp-0x40],sil
   14006278f:	lea    r9d,[rdx+0x1]
   140062793:	mov    BYTE PTR [rbp-0x3f],dil
   140062797:	mov    BYTE PTR [rbp-0x3e],0x0
   14006279b:	jmp    0x1400627a8
   14006279d:	mov    BYTE PTR [rbp-0x40],dil
   1400627a1:	mov    r9d,edx
   1400627a4:	mov    BYTE PTR [rbp-0x3f],0x0
   1400627a8:	xor    eax,eax
   1400627aa:	mov    DWORD PTR [rsp+0x30],edx
   1400627ae:	mov    DWORD PTR [rbp-0x18],eax
   1400627b1:	lea    r8,[rbp-0x40]
   1400627b5:	mov    WORD PTR [rbp-0x14],ax
   1400627b9:	mov    rax,QWORD PTR [rbp-0x30]
   1400627bd:	mov    ecx,DWORD PTR [rax+0xc]
   1400627c0:	lea    rax,[rbp-0x18]
   1400627c4:	mov    DWORD PTR [rsp+0x28],ecx
   1400627c8:	lea    rcx,[rbp-0x30]
   1400627cc:	mov    QWORD PTR [rsp+0x20],rax
   1400627d1:	call   0x140066340
   1400627d6:	test   eax,eax
   1400627d8:	jne    0x1400627ee
   1400627da:	cmp    BYTE PTR [rbp-0x20],al
   1400627dd:	je     0x1400627ea
   1400627df:	mov    rax,QWORD PTR [rbp-0x38]
   1400627e3:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   1400627ea:	xor    eax,eax
   1400627ec:	jmp    0x140062806
   1400627ee:	movzx  eax,WORD PTR [rbp-0x18]
   1400627f2:	and    eax,r14d
   1400627f5:	cmp    BYTE PTR [rbp-0x20],0x0
   1400627f9:	je     0x140062806
   1400627fb:	mov    rcx,QWORD PTR [rbp-0x38]
   1400627ff:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   140062806:	mov    rcx,QWORD PTR [rbp-0x10]
   14006280a:	xor    rcx,rsp
   14006280d:	call   0x140055f90
   140062812:	lea    r11,[rsp+0x80]
   14006281a:	mov    rsi,QWORD PTR [r11+0x18]
   14006281e:	mov    rdi,QWORD PTR [r11+0x20]
   140062822:	mov    r14,QWORD PTR [r11+0x28]
   140062826:	mov    rsp,r11
   140062829:	pop    rbp
   14006282a:	ret    
   14006282b:	int3   
   14006282c:	rex push rbx
   14006282e:	sub    rsp,0x20
   140062832:	xor    ebx,ebx
   140062834:	lea    rdx,[rip+0x3d345]        # 0x14009fb80
   14006283b:	xor    r8d,r8d
   14006283e:	lea    rcx,[rbx+rbx*4]
   140062842:	lea    rcx,[rdx+rcx*8]
   140062846:	mov    edx,0xfa0
   14006284b:	call   0x140062ce4
   140062850:	test   eax,eax
   140062852:	je     0x140062865
   140062854:	inc    DWORD PTR [rip+0x3d52e]        # 0x14009fd88
   14006285a:	inc    ebx
   14006285c:	cmp    ebx,0xd
   14006285f:	jb     0x140062834
   140062861:	mov    al,0x1
   140062863:	jmp    0x14006286e
   140062865:	xor    ecx,ecx
   140062867:	call   0x140062890
   14006286c:	xor    al,al
   14006286e:	add    rsp,0x20
   140062872:	pop    rbx
   140062873:	ret    
   140062874:	movsxd rax,ecx
   140062877:	lea    rcx,[rax+rax*4]
   14006287b:	lea    rax,[rip+0x3d2fe]        # 0x14009fb80
   140062882:	lea    rcx,[rax+rcx*8]
   140062886:	rex.W jmp QWORD PTR [rip+0x9983]        # 0x14006c210
   14006288d:	int3   
   14006288e:	int3   
   14006288f:	int3   
   140062890:	rex push rbx
   140062892:	sub    rsp,0x20
   140062896:	mov    ebx,DWORD PTR [rip+0x3d4ec]        # 0x14009fd88
   14006289c:	jmp    0x1400628bb
   14006289e:	lea    rax,[rip+0x3d2db]        # 0x14009fb80
   1400628a5:	dec    ebx
   1400628a7:	lea    rcx,[rbx+rbx*4]
   1400628ab:	lea    rcx,[rax+rcx*8]
   1400628af:	call   QWORD PTR [rip+0x996b]        # 0x14006c220
   1400628b5:	dec    DWORD PTR [rip+0x3d4cd]        # 0x14009fd88
   1400628bb:	test   ebx,ebx
   1400628bd:	jne    0x14006289e
   1400628bf:	mov    al,0x1
   1400628c1:	add    rsp,0x20
   1400628c5:	pop    rbx
   1400628c6:	ret    
   1400628c7:	int3   
   1400628c8:	movsxd rax,ecx
   1400628cb:	lea    rcx,[rax+rax*4]
   1400628cf:	lea    rax,[rip+0x3d2aa]        # 0x14009fb80
   1400628d6:	lea    rcx,[rax+rcx*8]
   1400628da:	rex.W jmp QWORD PTR [rip+0x9937]        # 0x14006c218
   1400628e1:	int3   
   1400628e2:	int3   
   1400628e3:	int3   
   1400628e4:	mov    QWORD PTR [rsp+0x8],rbx
   1400628e9:	mov    QWORD PTR [rsp+0x10],rbp
   1400628ee:	mov    QWORD PTR [rsp+0x18],rsi
   1400628f3:	push   rdi
   1400628f4:	push   r12
   1400628f6:	push   r13
   1400628f8:	push   r14
   1400628fa:	push   r15
   1400628fc:	sub    rsp,0x20
   140062900:	mov    r14d,ecx
   140062903:	lea    r15,[rip+0xfffffffffff9d6f6]        # 0x140000000
   14006290a:	mov    r12,r9
   14006290d:	mov    rbp,r8
   140062910:	mov    r13,rdx
   140062913:	mov    rcx,QWORD PTR [r15+r14*8+0x9fe30]
   14006291b:	mov    r10,QWORD PTR [rip+0x1f5be]        # 0x140081ee0
   140062922:	or     rdi,0xffffffffffffffff
   140062926:	mov    eax,r10d
   140062929:	mov    rdx,r10
   14006292c:	xor    rdx,rcx
   14006292f:	and    eax,0x3f
   140062932:	mov    cl,al
   140062934:	ror    rdx,cl
   140062937:	cmp    rdx,rdi
   14006293a:	je     0x140062a65
   140062940:	test   rdx,rdx
   140062943:	je     0x14006294d
   140062945:	mov    rax,rdx
   140062948:	jmp    0x140062a67
   14006294d:	cmp    r8,r9
   140062950:	je     0x1400629f9
   140062956:	mov    esi,DWORD PTR [rbp+0x0]
   140062959:	mov    rbx,QWORD PTR [r15+rsi*8+0x9fd90]
   140062961:	test   rbx,rbx
   140062964:	je     0x14006296d
   140062966:	cmp    rbx,rdi
   140062969:	je     0x1400629e5
   14006296b:	jmp    0x1400629e0
   14006296d:	mov    r15,QWORD PTR [r15+rsi*8+0x73340]
   140062975:	xor    edx,edx
   140062977:	mov    rcx,r15
   14006297a:	mov    r8d,0x800
   140062980:	call   QWORD PTR [rip+0x9822]        # 0x14006c1a8
   140062986:	mov    rbx,rax
   140062989:	test   rax,rax
   14006298c:	jne    0x1400629ae
   14006298e:	call   QWORD PTR [rip+0x9834]        # 0x14006c1c8
   140062994:	cmp    eax,0x57
   140062997:	jne    0x1400629ac
   140062999:	xor    r8d,r8d
   14006299c:	xor    edx,edx
   14006299e:	mov    rcx,r15
   1400629a1:	call   QWORD PTR [rip+0x9801]        # 0x14006c1a8
   1400629a7:	mov    rbx,rax
   1400629aa:	jmp    0x1400629ae
   1400629ac:	xor    ebx,ebx
   1400629ae:	lea    r15,[rip+0xfffffffffff9d64b]        # 0x140000000
   1400629b5:	test   rbx,rbx
   1400629b8:	jne    0x1400629c7
   1400629ba:	mov    rax,rdi
   1400629bd:	xchg   QWORD PTR [r15+rsi*8+0x9fd90],rax
   1400629c5:	jmp    0x1400629e5
   1400629c7:	mov    rax,rbx
   1400629ca:	xchg   QWORD PTR [r15+rsi*8+0x9fd90],rax
   1400629d2:	test   rax,rax
   1400629d5:	je     0x1400629e0
   1400629d7:	mov    rcx,rbx
   1400629da:	call   QWORD PTR [rip+0x97b8]        # 0x14006c198
   1400629e0:	test   rbx,rbx
   1400629e3:	jne    0x140062a3a
   1400629e5:	add    rbp,0x4
   1400629e9:	cmp    rbp,r12
   1400629ec:	jne    0x140062956
   1400629f2:	mov    r10,QWORD PTR [rip+0x1f4e7]        # 0x140081ee0
   1400629f9:	xor    ebx,ebx
   1400629fb:	test   rbx,rbx
   1400629fe:	je     0x140062a4a
   140062a00:	mov    rdx,r13
   140062a03:	mov    rcx,rbx
   140062a06:	call   QWORD PTR [rip+0x994c]        # 0x14006c358
   140062a0c:	test   rax,rax
   140062a0f:	je     0x140062a43
   140062a11:	mov    r8,QWORD PTR [rip+0x1f4c8]        # 0x140081ee0
   140062a18:	mov    edx,0x40
   140062a1d:	mov    ecx,r8d
   140062a20:	and    ecx,0x3f
   140062a23:	sub    edx,ecx
   140062a25:	mov    cl,dl
   140062a27:	mov    rdx,rax
   140062a2a:	ror    rdx,cl
   140062a2d:	xor    rdx,r8
   140062a30:	xchg   QWORD PTR [r15+r14*8+0x9fe30],rdx
   140062a38:	jmp    0x140062a67
   140062a3a:	mov    r10,QWORD PTR [rip+0x1f49f]        # 0x140081ee0
   140062a41:	jmp    0x1400629fb
   140062a43:	mov    r10,QWORD PTR [rip+0x1f496]        # 0x140081ee0
   140062a4a:	mov    eax,r10d
   140062a4d:	mov    ecx,0x40
   140062a52:	and    eax,0x3f
   140062a55:	sub    ecx,eax
   140062a57:	ror    rdi,cl
   140062a5a:	xor    rdi,r10
   140062a5d:	xchg   QWORD PTR [r15+r14*8+0x9fe30],rdi
   140062a65:	xor    eax,eax
   140062a67:	mov    rbx,QWORD PTR [rsp+0x50]
   140062a6c:	mov    rbp,QWORD PTR [rsp+0x58]
   140062a71:	mov    rsi,QWORD PTR [rsp+0x60]
   140062a76:	add    rsp,0x20
   140062a7a:	pop    r15
   140062a7c:	pop    r14
   140062a7e:	pop    r13
   140062a80:	pop    r12
   140062a82:	pop    rdi
   140062a83:	ret    
   140062a84:	mov    rax,rsp
   140062a87:	mov    QWORD PTR [rax+0x8],rbx
   140062a8b:	mov    QWORD PTR [rax+0x10],rbp
   140062a8f:	mov    QWORD PTR [rax+0x18],rsi
   140062a93:	mov    QWORD PTR [rax+0x20],rdi
   140062a97:	push   r14
   140062a99:	sub    rsp,0x50
   140062a9d:	mov    edi,r9d
   140062aa0:	mov    rsi,r8
   140062aa3:	mov    ebp,edx
   140062aa5:	lea    r9,[rip+0x10dcc]        # 0x140073878
   140062aac:	mov    r14,rcx
   140062aaf:	lea    r8,[rip+0x10dba]        # 0x140073870
   140062ab6:	lea    rdx,[rip+0x10dbb]        # 0x140073878
   140062abd:	mov    ecx,0x1
   140062ac2:	call   0x1400628e4
   140062ac7:	mov    rbx,rax
   140062aca:	test   rax,rax
   140062acd:	je     0x140062b26
   140062acf:	mov    rcx,rax
   140062ad2:	call   QWORD PTR [rip+0x9a50]        # 0x14006c528
   140062ad8:	mov    rcx,QWORD PTR [rsp+0xa0]
   140062ae0:	mov    r9d,edi
   140062ae3:	mov    rax,QWORD PTR [rsp+0x80]
   140062aeb:	mov    r8,rsi
   140062aee:	mov    QWORD PTR [rsp+0x40],rcx
   140062af3:	mov    edx,ebp
   140062af5:	mov    rcx,QWORD PTR [rsp+0x98]
   140062afd:	mov    QWORD PTR [rsp+0x38],rcx
   140062b02:	mov    rcx,QWORD PTR [rsp+0x90]
   140062b0a:	mov    QWORD PTR [rsp+0x30],rcx
   140062b0f:	mov    ecx,DWORD PTR [rsp+0x88]
   140062b16:	mov    DWORD PTR [rsp+0x28],ecx
   140062b1a:	mov    rcx,r14
   140062b1d:	mov    QWORD PTR [rsp+0x20],rax
   140062b22:	call   rbx
   140062b24:	jmp    0x140062b58
   140062b26:	xor    edx,edx
   140062b28:	mov    rcx,r14
   140062b2b:	call   0x140062e4c
   140062b30:	mov    ecx,eax
   140062b32:	mov    r9d,edi
   140062b35:	mov    eax,DWORD PTR [rsp+0x88]
   140062b3c:	mov    r8,rsi
   140062b3f:	mov    DWORD PTR [rsp+0x28],eax
   140062b43:	mov    edx,ebp
   140062b45:	mov    rax,QWORD PTR [rsp+0x80]
   140062b4d:	mov    QWORD PTR [rsp+0x20],rax
   140062b52:	call   QWORD PTR [rip+0x9758]        # 0x14006c2b0
   140062b58:	mov    rbx,QWORD PTR [rsp+0x60]
   140062b5d:	mov    rbp,QWORD PTR [rsp+0x68]
   140062b62:	mov    rsi,QWORD PTR [rsp+0x70]
   140062b67:	mov    rdi,QWORD PTR [rsp+0x78]
   140062b6c:	add    rsp,0x50
   140062b70:	pop    r14
   140062b72:	ret    
   140062b73:	int3   
   140062b74:	mov    QWORD PTR [rsp+0x8],rbx
   140062b79:	push   rdi
   140062b7a:	sub    rsp,0x20
   140062b7e:	mov    rdi,rcx
   140062b81:	lea    r9,[rip+0x10d08]        # 0x140073890
   140062b88:	mov    ecx,0x3
   140062b8d:	lea    r8,[rip+0x10cf4]        # 0x140073888
   140062b94:	lea    rdx,[rip+0xeab5]        # 0x140071650
   140062b9b:	call   0x1400628e4
   140062ba0:	mov    rbx,rax
   140062ba3:	test   rax,rax
   140062ba6:	je     0x140062bb8
   140062ba8:	mov    rcx,rax
   140062bab:	call   QWORD PTR [rip+0x9977]        # 0x14006c528
   140062bb1:	mov    rcx,rdi
   140062bb4:	call   rbx
   140062bb6:	jmp    0x140062bbe
   140062bb8:	call   QWORD PTR [rip+0x9862]        # 0x14006c420
   140062bbe:	mov    rbx,QWORD PTR [rsp+0x30]
   140062bc3:	add    rsp,0x20
   140062bc7:	pop    rdi
   140062bc8:	ret    
   140062bc9:	int3   
   140062bca:	int3   
   140062bcb:	int3   
   140062bcc:	mov    QWORD PTR [rsp+0x8],rbx
   140062bd1:	push   rdi
   140062bd2:	sub    rsp,0x20
   140062bd6:	mov    ebx,ecx
   140062bd8:	lea    r9,[rip+0x10cb9]        # 0x140073898
   140062bdf:	mov    ecx,0x4
   140062be4:	lea    r8,[rip+0x10ca5]        # 0x140073890
   140062beb:	lea    rdx,[rip+0xea76]        # 0x140071668
   140062bf2:	call   0x1400628e4
   140062bf7:	mov    rdi,rax
   140062bfa:	test   rax,rax
   140062bfd:	je     0x140062c0e
   140062bff:	mov    rcx,rax
   140062c02:	call   QWORD PTR [rip+0x9920]        # 0x14006c528
   140062c08:	mov    ecx,ebx
   140062c0a:	call   rdi
   140062c0c:	jmp    0x140062c16
   140062c0e:	mov    ecx,ebx
   140062c10:	call   QWORD PTR [rip+0x9822]        # 0x14006c438
   140062c16:	mov    rbx,QWORD PTR [rsp+0x30]
   140062c1b:	add    rsp,0x20
   140062c1f:	pop    rdi
   140062c20:	ret    
   140062c21:	int3   
   140062c22:	int3   
   140062c23:	int3   
   140062c24:	mov    QWORD PTR [rsp+0x8],rbx
   140062c29:	push   rdi
   140062c2a:	sub    rsp,0x20
   140062c2e:	mov    ebx,ecx
   140062c30:	lea    r9,[rip+0x10c69]        # 0x1400738a0
   140062c37:	mov    ecx,0x5
   140062c3c:	lea    r8,[rip+0x10c55]        # 0x140073898
   140062c43:	lea    rdx,[rip+0xea2e]        # 0x140071678
   140062c4a:	call   0x1400628e4
   140062c4f:	mov    rdi,rax
   140062c52:	test   rax,rax
   140062c55:	je     0x140062c66
   140062c57:	mov    rcx,rax
   140062c5a:	call   QWORD PTR [rip+0x98c8]        # 0x14006c528
   140062c60:	mov    ecx,ebx
   140062c62:	call   rdi
   140062c64:	jmp    0x140062c6e
   140062c66:	mov    ecx,ebx
   140062c68:	call   QWORD PTR [rip+0x97ba]        # 0x14006c428
   140062c6e:	mov    rbx,QWORD PTR [rsp+0x30]
   140062c73:	add    rsp,0x20
   140062c77:	pop    rdi
   140062c78:	ret    
   140062c79:	int3   
   140062c7a:	int3   
   140062c7b:	int3   
   140062c7c:	mov    QWORD PTR [rsp+0x8],rbx
   140062c81:	mov    QWORD PTR [rsp+0x10],rsi
   140062c86:	push   rdi
   140062c87:	sub    rsp,0x20
   140062c8b:	mov    rbx,rdx
   140062c8e:	lea    r9,[rip+0x10c13]        # 0x1400738a8
   140062c95:	mov    edi,ecx
   140062c97:	lea    rdx,[rip+0xe9f2]        # 0x140071690
   140062c9e:	mov    ecx,0x6
   140062ca3:	lea    r8,[rip+0x10bf6]        # 0x1400738a0
   140062caa:	call   0x1400628e4
   140062caf:	mov    rsi,rax
   140062cb2:	test   rax,rax
   140062cb5:	je     0x140062cc9
   140062cb7:	mov    rcx,rax
   140062cba:	call   QWORD PTR [rip+0x9868]        # 0x14006c528
   140062cc0:	mov    rdx,rbx
   140062cc3:	mov    ecx,edi
   140062cc5:	call   rsi
   140062cc7:	jmp    0x140062cd4
   140062cc9:	mov    rdx,rbx
   140062ccc:	mov    ecx,edi
   140062cce:	call   QWORD PTR [rip+0x975c]        # 0x14006c430
   140062cd4:	mov    rbx,QWORD PTR [rsp+0x30]
   140062cd9:	mov    rsi,QWORD PTR [rsp+0x38]
   140062cde:	add    rsp,0x20
   140062ce2:	pop    rdi
   140062ce3:	ret    
   140062ce4:	mov    QWORD PTR [rsp+0x8],rbx
   140062ce9:	mov    QWORD PTR [rsp+0x10],rbp
   140062cee:	mov    QWORD PTR [rsp+0x18],rsi
   140062cf3:	push   rdi
   140062cf4:	sub    rsp,0x20
   140062cf8:	mov    ebp,r8d
   140062cfb:	lea    r9,[rip+0x10bce]        # 0x1400738d0
   140062d02:	mov    ebx,edx
   140062d04:	lea    r8,[rip+0x10bbd]        # 0x1400738c8
   140062d0b:	mov    rdi,rcx
   140062d0e:	lea    rdx,[rip+0xe993]        # 0x1400716a8
   140062d15:	mov    ecx,0x14
   140062d1a:	call   0x1400628e4
   140062d1f:	mov    rsi,rax
   140062d22:	test   rax,rax
   140062d25:	je     0x140062d3c
   140062d27:	mov    rcx,rax
   140062d2a:	call   QWORD PTR [rip+0x97f8]        # 0x14006c528
   140062d30:	mov    r8d,ebp
   140062d33:	mov    edx,ebx
   140062d35:	mov    rcx,rdi
   140062d38:	call   rsi
   140062d3a:	jmp    0x140062d47
   140062d3c:	mov    edx,ebx
   140062d3e:	mov    rcx,rdi
   140062d41:	call   QWORD PTR [rip+0x96d1]        # 0x14006c418
   140062d47:	mov    rbx,QWORD PTR [rsp+0x30]
   140062d4c:	mov    rbp,QWORD PTR [rsp+0x38]
   140062d51:	mov    rsi,QWORD PTR [rsp+0x40]
   140062d56:	add    rsp,0x20
   140062d5a:	pop    rdi
   140062d5b:	ret    
   140062d5c:	mov    rax,rsp
   140062d5f:	mov    QWORD PTR [rax+0x8],rbx
   140062d63:	mov    QWORD PTR [rax+0x10],rbp
   140062d67:	mov    QWORD PTR [rax+0x18],rsi
   140062d6b:	mov    QWORD PTR [rax+0x20],rdi
   140062d6f:	push   r14
   140062d71:	sub    rsp,0x50
   140062d75:	mov    edi,r9d
   140062d78:	mov    rsi,r8
   140062d7b:	mov    ebp,edx
   140062d7d:	lea    r9,[rip+0x10b54]        # 0x1400738d8
   140062d84:	mov    r14,rcx
   140062d87:	lea    r8,[rip+0x10b42]        # 0x1400738d0
   140062d8e:	lea    rdx,[rip+0x10b43]        # 0x1400738d8
   140062d95:	mov    ecx,0x16
   140062d9a:	call   0x1400628e4
   140062d9f:	mov    rbx,rax
   140062da2:	test   rax,rax
   140062da5:	je     0x140062dfe
   140062da7:	mov    rcx,rax
   140062daa:	call   QWORD PTR [rip+0x9778]        # 0x14006c528
   140062db0:	mov    rcx,QWORD PTR [rsp+0xa0]
   140062db8:	mov    r9d,edi
   140062dbb:	mov    rax,QWORD PTR [rsp+0x80]
   140062dc3:	mov    r8,rsi
   140062dc6:	mov    QWORD PTR [rsp+0x40],rcx
   140062dcb:	mov    edx,ebp
   140062dcd:	mov    rcx,QWORD PTR [rsp+0x98]
   140062dd5:	mov    QWORD PTR [rsp+0x38],rcx
   140062dda:	mov    rcx,QWORD PTR [rsp+0x90]
   140062de2:	mov    QWORD PTR [rsp+0x30],rcx
   140062de7:	mov    ecx,DWORD PTR [rsp+0x88]
   140062dee:	mov    DWORD PTR [rsp+0x28],ecx
   140062df2:	mov    rcx,r14
   140062df5:	mov    QWORD PTR [rsp+0x20],rax
   140062dfa:	call   rbx
   140062dfc:	jmp    0x140062e30
   140062dfe:	xor    edx,edx
   140062e00:	mov    rcx,r14
   140062e03:	call   0x140062e4c
   140062e08:	mov    ecx,eax
   140062e0a:	mov    r9d,edi
   140062e0d:	mov    eax,DWORD PTR [rsp+0x88]
   140062e14:	mov    r8,rsi
   140062e17:	mov    DWORD PTR [rsp+0x28],eax
   140062e1b:	mov    edx,ebp
   140062e1d:	mov    rax,QWORD PTR [rsp+0x80]
   140062e25:	mov    QWORD PTR [rsp+0x20],rax
   140062e2a:	call   QWORD PTR [rip+0x9660]        # 0x14006c490
   140062e30:	mov    rbx,QWORD PTR [rsp+0x60]
   140062e35:	mov    rbp,QWORD PTR [rsp+0x68]
   140062e3a:	mov    rsi,QWORD PTR [rsp+0x70]
   140062e3f:	mov    rdi,QWORD PTR [rsp+0x78]
   140062e44:	add    rsp,0x50
   140062e48:	pop    r14
   140062e4a:	ret    
   140062e4b:	int3   
   140062e4c:	mov    QWORD PTR [rsp+0x8],rbx
   140062e51:	mov    QWORD PTR [rsp+0x10],rsi
   140062e56:	push   rdi
   140062e57:	sub    rsp,0x20
   140062e5b:	mov    esi,edx
   140062e5d:	lea    r9,[rip+0x10a8c]        # 0x1400738f0
   140062e64:	mov    rbx,rcx
   140062e67:	lea    rdx,[rip+0x10a82]        # 0x1400738f0
   140062e6e:	mov    ecx,0x18
   140062e73:	lea    r8,[rip+0x10a6e]        # 0x1400738e8
   140062e7a:	call   0x1400628e4
   140062e7f:	mov    rdi,rax
   140062e82:	test   rax,rax
   140062e85:	je     0x140062e99
   140062e87:	mov    rcx,rax
   140062e8a:	call   QWORD PTR [rip+0x9698]        # 0x14006c528
   140062e90:	mov    edx,esi
   140062e92:	mov    rcx,rbx
   140062e95:	call   rdi
   140062e97:	jmp    0x140062ea1
   140062e99:	mov    rcx,rbx
   140062e9c:	call   0x1400683ac
   140062ea1:	mov    rbx,QWORD PTR [rsp+0x30]
   140062ea6:	mov    rsi,QWORD PTR [rsp+0x38]
   140062eab:	add    rsp,0x20
   140062eaf:	pop    rdi
   140062eb0:	ret    
   140062eb1:	int3   
   140062eb2:	int3   
   140062eb3:	int3   
   140062eb4:	mov    QWORD PTR [rsp+0x8],rdi
   140062eb9:	mov    rdx,QWORD PTR [rip+0x1f020]        # 0x140081ee0
   140062ec0:	lea    rdi,[rip+0x3cf69]        # 0x14009fe30
   140062ec7:	mov    eax,edx
   140062ec9:	mov    ecx,0x40
   140062ece:	and    eax,0x3f
   140062ed1:	sub    ecx,eax
   140062ed3:	xor    eax,eax
   140062ed5:	ror    rax,cl
   140062ed8:	mov    ecx,0x20
   140062edd:	xor    rax,rdx
   140062ee0:	rep stos QWORD PTR es:[rdi],rax
   140062ee3:	mov    rdi,QWORD PTR [rsp+0x8]
   140062ee8:	mov    al,0x1
   140062eea:	ret    
   140062eeb:	int3   
   140062eec:	mov    QWORD PTR [rsp+0x10],rbx
   140062ef1:	push   rdi
   140062ef2:	sub    rsp,0x20
   140062ef6:	mov    eax,DWORD PTR [rip+0x3d034]        # 0x14009ff30
   140062efc:	xor    ebx,ebx
   140062efe:	test   eax,eax
   140062f00:	je     0x140062f0a
   140062f02:	cmp    eax,0x1
   140062f05:	sete   al
   140062f08:	jmp    0x140062f66
   140062f0a:	lea    r9,[rip+0x1099f]        # 0x1400738b0
   140062f11:	mov    ecx,0x8
   140062f16:	lea    r8,[rip+0x1098b]        # 0x1400738a8
   140062f1d:	lea    rdx,[rip+0x1098c]        # 0x1400738b0
   140062f24:	call   0x1400628e4
   140062f29:	mov    rdi,rax
   140062f2c:	test   rax,rax
   140062f2f:	je     0x140062f59
   140062f31:	mov    rcx,rax
   140062f34:	mov    DWORD PTR [rsp+0x30],ebx
   140062f38:	call   QWORD PTR [rip+0x95ea]        # 0x14006c528
   140062f3e:	xor    edx,edx
   140062f40:	lea    rcx,[rsp+0x30]
   140062f45:	call   rdi
   140062f47:	cmp    eax,0x7a
   140062f4a:	jne    0x140062f59
   140062f4c:	lea    ecx,[rax-0x79]
   140062f4f:	mov    al,0x1
   140062f51:	xchg   DWORD PTR [rip+0x3cfd9],ecx        # 0x14009ff30
   140062f57:	jmp    0x140062f66
   140062f59:	mov    eax,0x2
   140062f5e:	xchg   DWORD PTR [rip+0x3cfcc],eax        # 0x14009ff30
   140062f64:	xor    al,al
   140062f66:	mov    rbx,QWORD PTR [rsp+0x38]
   140062f6b:	add    rsp,0x20
   140062f6f:	pop    rdi
   140062f70:	ret    
   140062f71:	int3   
   140062f72:	int3   
   140062f73:	int3   
   140062f74:	rex push rbx
   140062f76:	sub    rsp,0x20
   140062f7a:	test   cl,cl
   140062f7c:	jne    0x140062fad
   140062f7e:	lea    rbx,[rip+0x3ce0b]        # 0x14009fd90
   140062f85:	mov    rcx,QWORD PTR [rbx]
   140062f88:	test   rcx,rcx
   140062f8b:	je     0x140062f9d
   140062f8d:	cmp    rcx,0xffffffffffffffff
   140062f91:	je     0x140062f99
   140062f93:	call   QWORD PTR [rip+0x91ff]        # 0x14006c198
   140062f99:	and    QWORD PTR [rbx],0x0
   140062f9d:	add    rbx,0x8
   140062fa1:	lea    rax,[rip+0x3ce88]        # 0x14009fe30
   140062fa8:	cmp    rbx,rax
   140062fab:	jne    0x140062f85
   140062fad:	mov    al,0x1
   140062faf:	add    rsp,0x20
   140062fb3:	pop    rbx
   140062fb4:	ret    
   140062fb5:	int3   
   140062fb6:	int3   
   140062fb7:	int3   
   140062fb8:	rex push rbx
   140062fba:	sub    rsp,0x20
   140062fbe:	xor    ebx,ebx
   140062fc0:	test   rcx,rcx
   140062fc3:	je     0x140062fd2
   140062fc5:	test   rdx,rdx
   140062fc8:	je     0x140062fd2
   140062fca:	test   r8,r8
   140062fcd:	jne    0x140062feb
   140062fcf:	mov    WORD PTR [rcx],bx
   140062fd2:	call   0x140060e94
   140062fd7:	mov    ebx,0x16
   140062fdc:	mov    DWORD PTR [rax],ebx
   140062fde:	call   0x140060d74
   140062fe3:	mov    eax,ebx
   140062fe5:	add    rsp,0x20
   140062fe9:	pop    rbx
   140062fea:	ret    
   140062feb:	mov    r9,rcx
   140062fee:	sub    r8,rcx
   140062ff1:	movzx  eax,WORD PTR [r8+r9*1]
   140062ff6:	mov    WORD PTR [r9],ax
   140062ffa:	lea    r9,[r9+0x2]
   140062ffe:	test   ax,ax
   140063001:	je     0x140063009
   140063003:	sub    rdx,0x1
   140063007:	jne    0x140062ff1
   140063009:	test   rdx,rdx
   14006300c:	jne    0x140062fe3
   14006300e:	mov    WORD PTR [rcx],bx
   140063011:	call   0x140060e94
   140063016:	mov    ebx,0x22
   14006301b:	jmp    0x140062fdc
   14006301d:	int3   
   14006301e:	int3   
   14006301f:	int3   
   140063020:	mov    eax,DWORD PTR [rip+0x3c712]        # 0x14009f738
   140063026:	test   eax,eax
   140063028:	je     0x140068428
   14006302e:	xor    r9d,r9d
   140063031:	jmp    0x140063038
   140063036:	int3   
   140063037:	int3   
   140063038:	mov    rax,rsp
   14006303b:	mov    QWORD PTR [rax+0x8],rbx
   14006303f:	mov    QWORD PTR [rax+0x10],rbp
   140063043:	mov    QWORD PTR [rax+0x18],rsi
   140063047:	push   rdi
   140063048:	sub    rsp,0x60
   14006304c:	mov    rsi,rdx
   14006304f:	mov    rbp,rcx
   140063052:	mov    rdx,r9
   140063055:	lea    rcx,[rax-0x28]
   140063059:	mov    rdi,r8
   14006305c:	call   0x14005b174
   140063061:	test   rdi,rdi
   140063064:	jne    0x14006306d
   140063066:	xor    ebx,ebx
   140063068:	jmp    0x14006310d
   14006306d:	test   rbp,rbp
   140063070:	je     0x140063077
   140063072:	test   rsi,rsi
   140063075:	jne    0x14006308e
   140063077:	call   0x140060e94
   14006307c:	mov    DWORD PTR [rax],0x16
   140063082:	call   0x140060d74
   140063087:	mov    ebx,0x7fffffff
   14006308c:	jmp    0x14006310d
   14006308e:	mov    ebx,0x7fffffff
   140063093:	cmp    rdi,rbx
   140063096:	jbe    0x1400630aa
   140063098:	call   0x140060e94
   14006309d:	mov    DWORD PTR [rax],0x16
   1400630a3:	call   0x140060d74
   1400630a8:	jmp    0x14006310d
   1400630aa:	mov    rax,QWORD PTR [rsp+0x48]
   1400630af:	mov    rdx,QWORD PTR [rax+0x130]
   1400630b6:	test   rdx,rdx
   1400630b9:	jne    0x1400630d2
   1400630bb:	lea    r9,[rsp+0x48]
   1400630c0:	mov    r8,rdi
   1400630c3:	mov    rdx,rsi
   1400630c6:	mov    rcx,rbp
   1400630c9:	call   0x140068478
   1400630ce:	mov    ebx,eax
   1400630d0:	jmp    0x14006310d
   1400630d2:	mov    eax,DWORD PTR [rax+0x14]
   1400630d5:	lea    rcx,[rsp+0x48]
   1400630da:	mov    DWORD PTR [rsp+0x38],eax
   1400630de:	mov    r9,rbp
   1400630e1:	mov    DWORD PTR [rsp+0x30],edi
   1400630e5:	mov    r8d,0x1001
   1400630eb:	mov    QWORD PTR [rsp+0x28],rsi
   1400630f0:	mov    DWORD PTR [rsp+0x20],edi
   1400630f4:	call   0x1400688e8
   1400630f9:	test   eax,eax
   1400630fb:	jne    0x14006310a
   1400630fd:	call   0x140060e94
   140063102:	mov    DWORD PTR [rax],0x16
   140063108:	jmp    0x14006310d
   14006310a:	lea    ebx,[rax-0x2]
   14006310d:	cmp    BYTE PTR [rsp+0x58],0x0
   140063112:	je     0x140063120
   140063114:	mov    rax,QWORD PTR [rsp+0x40]
   140063119:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   140063120:	lea    r11,[rsp+0x60]
   140063125:	mov    eax,ebx
   140063127:	mov    rbx,QWORD PTR [r11+0x10]
   14006312b:	mov    rbp,QWORD PTR [r11+0x18]
   14006312f:	mov    rsi,QWORD PTR [r11+0x20]
   140063133:	mov    rsp,r11
   140063136:	pop    rdi
   140063137:	ret    
   140063138:	mov    QWORD PTR [rsp+0x8],rbx
   14006313d:	push   rdi
   14006313e:	sub    rsp,0x30
   140063142:	and    DWORD PTR [rsp+0x20],0x0
   140063147:	mov    ecx,0x8
   14006314c:	call   0x140062874
   140063151:	nop
   140063152:	mov    ebx,0x3
   140063157:	mov    DWORD PTR [rsp+0x24],ebx
   14006315b:	cmp    ebx,DWORD PTR [rip+0x3c407]        # 0x14009f568
   140063161:	je     0x1400631d1
   140063163:	movsxd rdi,ebx
   140063166:	mov    rax,QWORD PTR [rip+0x3c403]        # 0x14009f570
   14006316d:	mov    rax,QWORD PTR [rax+rdi*8]
   140063171:	test   rax,rax
   140063174:	jne    0x140063178
   140063176:	jmp    0x1400631cd
   140063178:	mov    ecx,DWORD PTR [rax+0x14]
   14006317b:	shr    ecx,0xd
   14006317e:	test   cl,0x1
   140063181:	je     0x14006319c
   140063183:	mov    rcx,QWORD PTR [rip+0x3c3e6]        # 0x14009f570
   14006318a:	mov    rcx,QWORD PTR [rcx+rdi*8]
   14006318e:	call   0x1400689f8
   140063193:	cmp    eax,0xffffffff
   140063196:	je     0x14006319c
   140063198:	inc    DWORD PTR [rsp+0x20]
   14006319c:	mov    rax,QWORD PTR [rip+0x3c3cd]        # 0x14009f570
   1400631a3:	mov    rcx,QWORD PTR [rax+rdi*8]
   1400631a7:	add    rcx,0x30
   1400631ab:	call   QWORD PTR [rip+0x906f]        # 0x14006c220
   1400631b1:	mov    rcx,QWORD PTR [rip+0x3c3b8]        # 0x14009f570
   1400631b8:	mov    rcx,QWORD PTR [rcx+rdi*8]
   1400631bc:	call   0x1400609cc
   1400631c1:	mov    rax,QWORD PTR [rip+0x3c3a8]        # 0x14009f570
   1400631c8:	and    QWORD PTR [rax+rdi*8],0x0
   1400631cd:	inc    ebx
   1400631cf:	jmp    0x140063157
   1400631d1:	mov    ecx,0x8
   1400631d6:	call   0x1400628c8
   1400631db:	mov    eax,DWORD PTR [rsp+0x20]
   1400631df:	mov    rbx,QWORD PTR [rsp+0x40]
   1400631e4:	add    rsp,0x30
   1400631e8:	pop    rdi
   1400631e9:	ret    
   1400631ea:	int3   
   1400631eb:	int3   
   1400631ec:	rex push rbx
   1400631ee:	sub    rsp,0x20
   1400631f2:	mov    rbx,rcx
   1400631f5:	mov    eax,DWORD PTR [rcx+0x14]
   1400631f8:	shr    eax,0xd
   1400631fb:	test   al,0x1
   1400631fd:	je     0x140063226
   1400631ff:	mov    eax,DWORD PTR [rcx+0x14]
   140063202:	shr    eax,0x6
   140063205:	test   al,0x1
   140063207:	je     0x140063226
   140063209:	mov    rcx,QWORD PTR [rcx+0x8]
   14006320d:	call   0x1400609cc
   140063212:	lock and DWORD PTR [rbx+0x14],0xfffffebf
   14006321a:	xor    eax,eax
   14006321c:	mov    QWORD PTR [rbx+0x8],rax
   140063220:	mov    QWORD PTR [rbx],rax
   140063223:	mov    DWORD PTR [rbx+0x10],eax
   140063226:	add    rsp,0x20
   14006322a:	pop    rbx
   14006322b:	ret    
   14006322c:	mov    QWORD PTR [rsp+0x8],rbx
   140063231:	mov    QWORD PTR [rsp+0x20],r9
   140063236:	push   rdi
   140063237:	sub    rsp,0x20
   14006323b:	mov    rdi,r9
   14006323e:	mov    rbx,r8
   140063241:	mov    ecx,DWORD PTR [rdx]
   140063243:	call   0x14006402c
   140063248:	nop
   140063249:	mov    rax,QWORD PTR [rbx]
   14006324c:	movsxd rcx,DWORD PTR [rax]
   14006324f:	mov    rdx,rcx
   140063252:	mov    rax,rcx
   140063255:	sar    rax,0x6
   140063259:	lea    r8,[rip+0x3c510]        # 0x14009f770
   140063260:	and    edx,0x3f
   140063263:	shl    rdx,0x6
   140063267:	mov    rax,QWORD PTR [r8+rax*8]
   14006326b:	test   BYTE PTR [rax+rdx*1+0x38],0x1
   140063270:	je     0x140063296
   140063272:	call   0x140064130
   140063277:	mov    rcx,rax
   14006327a:	call   QWORD PTR [rip+0x8e90]        # 0x14006c110
   140063280:	xor    ebx,ebx
   140063282:	test   eax,eax
   140063284:	jne    0x1400632a4
   140063286:	call   0x140060e74
   14006328b:	mov    rbx,rax
   14006328e:	call   QWORD PTR [rip+0x8f34]        # 0x14006c1c8
   140063294:	mov    DWORD PTR [rbx],eax
   140063296:	call   0x140060e94
   14006329b:	mov    DWORD PTR [rax],0x9
   1400632a1:	or     ebx,0xffffffff
   1400632a4:	mov    ecx,DWORD PTR [rdi]
   1400632a6:	call   0x140064050
   1400632ab:	mov    eax,ebx
   1400632ad:	mov    rbx,QWORD PTR [rsp+0x30]
   1400632b2:	add    rsp,0x20
   1400632b6:	pop    rdi
   1400632b7:	ret    
   1400632b8:	mov    DWORD PTR [rsp+0x8],ecx
   1400632bc:	sub    rsp,0x38
   1400632c0:	movsxd rdx,ecx
   1400632c3:	cmp    edx,0xfffffffe
   1400632c6:	jne    0x1400632d5
   1400632c8:	call   0x140060e94
   1400632cd:	mov    DWORD PTR [rax],0x9
   1400632d3:	jmp    0x140063341
   1400632d5:	test   ecx,ecx
   1400632d7:	js     0x140063331
   1400632d9:	cmp    edx,DWORD PTR [rip+0x3c891]        # 0x14009fb70
   1400632df:	jae    0x140063331
   1400632e1:	mov    rcx,rdx
   1400632e4:	lea    r8,[rip+0x3c485]        # 0x14009f770
   1400632eb:	and    ecx,0x3f
   1400632ee:	mov    rax,rdx
   1400632f1:	sar    rax,0x6
   1400632f5:	shl    rcx,0x6
   1400632f9:	mov    rax,QWORD PTR [r8+rax*8]
   1400632fd:	test   BYTE PTR [rax+rcx*1+0x38],0x1
   140063302:	je     0x140063331
   140063304:	lea    rax,[rsp+0x40]
   140063309:	mov    DWORD PTR [rsp+0x50],edx
   14006330d:	mov    DWORD PTR [rsp+0x58],edx
   140063311:	lea    r9,[rsp+0x50]
   140063316:	lea    rdx,[rsp+0x58]
   14006331b:	mov    QWORD PTR [rsp+0x20],rax
   140063320:	lea    r8,[rsp+0x20]
   140063325:	lea    rcx,[rsp+0x48]
   14006332a:	call   0x14006322c
   14006332f:	jmp    0x140063344
   140063331:	call   0x140060e94
   140063336:	mov    DWORD PTR [rax],0x9
   14006333c:	call   0x140060d74
   140063341:	or     eax,0xffffffff
   140063344:	add    rsp,0x38
   140063348:	ret    
   140063349:	int3   
   14006334a:	int3   
   14006334b:	int3   
   14006334c:	mov    QWORD PTR [rsp+0x8],rbx
   140063351:	push   rbp
   140063352:	push   rsi
   140063353:	push   rdi
   140063354:	push   r12
   140063356:	push   r13
   140063358:	push   r14
   14006335a:	push   r15
   14006335c:	mov    rbp,rsp
   14006335f:	sub    rsp,0x80
   140063366:	mov    rax,QWORD PTR [rip+0x1eb73]        # 0x140081ee0
   14006336d:	xor    rax,rsp
   140063370:	mov    QWORD PTR [rbp-0x10],rax
   140063374:	movsxd rsi,edx
   140063377:	lea    rax,[rip+0x3c3f2]        # 0x14009f770
   14006337e:	mov    r15,rsi
   140063381:	mov    r12d,r9d
   140063384:	sar    r15,0x6
   140063388:	and    esi,0x3f
   14006338b:	shl    rsi,0x6
   14006338f:	mov    r14,r8
   140063392:	mov    QWORD PTR [rbp-0x28],r8
   140063396:	mov    rbx,rcx
   140063399:	add    r12,r8
   14006339c:	mov    rax,QWORD PTR [rax+r15*8]
   1400633a0:	mov    rax,QWORD PTR [rax+rsi*1+0x28]
   1400633a5:	mov    QWORD PTR [rbp-0x30],rax
   1400633a9:	call   QWORD PTR [rip+0x8fd1]        # 0x14006c380
   1400633af:	xor    edx,edx
   1400633b1:	mov    DWORD PTR [rbp-0x34],eax
   1400633b4:	mov    QWORD PTR [rbx],rdx
   1400633b7:	mov    rdi,r14
   1400633ba:	mov    DWORD PTR [rbx+0x8],edx
   1400633bd:	cmp    r14,r12
   1400633c0:	jae    0x14006352a
   1400633c6:	mov    r13b,BYTE PTR [rdi]
   1400633c9:	lea    r14,[rip+0x3c3a0]        # 0x14009f770
   1400633d0:	mov    WORD PTR [rbp-0x40],dx
   1400633d4:	mov    rdx,QWORD PTR [r14+r15*8]
   1400633d8:	mov    cl,BYTE PTR [rdx+rsi*1+0x3d]
   1400633dc:	test   cl,0x4
   1400633df:	je     0x1400633ff
   1400633e1:	mov    al,BYTE PTR [rdx+rsi*1+0x3e]
   1400633e5:	and    cl,0xfb
   1400633e8:	mov    BYTE PTR [rdx+rsi*1+0x3d],cl
   1400633ec:	mov    r8d,0x2
   1400633f2:	lea    rdx,[rbp-0x20]
   1400633f6:	mov    BYTE PTR [rbp-0x20],al
   1400633f9:	mov    BYTE PTR [rbp-0x1f],r13b
   1400633fd:	jmp    0x140063444
   1400633ff:	call   0x14006267c
   140063404:	movzx  ecx,BYTE PTR [rdi]
   140063407:	mov    edx,0x8000
   14006340c:	test   WORD PTR [rax+rcx*2],dx
   140063410:	je     0x14006343b
   140063412:	cmp    rdi,r12
   140063415:	jae    0x14006350a
   14006341b:	mov    r8d,0x2
   140063421:	lea    rcx,[rbp-0x40]
   140063425:	mov    rdx,rdi
   140063428:	call   0x140061070
   14006342d:	cmp    eax,0xffffffff
   140063430:	je     0x14006352a
   140063436:	inc    rdi
   140063439:	jmp    0x140063456
   14006343b:	mov    r8d,0x1
   140063441:	mov    rdx,rdi
   140063444:	lea    rcx,[rbp-0x40]
   140063448:	call   0x140061070
   14006344d:	cmp    eax,0xffffffff
   140063450:	je     0x14006352a
   140063456:	and    QWORD PTR [rsp+0x38],0x0
   14006345c:	lea    rax,[rbp-0x18]
   140063460:	and    QWORD PTR [rsp+0x30],0x0
   140063466:	lea    r8,[rbp-0x40]
   14006346a:	mov    ecx,DWORD PTR [rbp-0x34]
   14006346d:	mov    r9d,0x1
   140063473:	mov    DWORD PTR [rsp+0x28],0x5
   14006347b:	xor    edx,edx
   14006347d:	mov    QWORD PTR [rsp+0x20],rax
   140063482:	inc    rdi
   140063485:	call   QWORD PTR [rip+0x8e1d]        # 0x14006c2a8
   14006348b:	mov    r14d,eax
   14006348e:	test   eax,eax
   140063490:	je     0x14006352a
   140063496:	mov    rcx,QWORD PTR [rbp-0x30]
   14006349a:	lea    r9,[rbp-0x38]
   14006349e:	and    QWORD PTR [rsp+0x20],0x0
   1400634a4:	lea    rdx,[rbp-0x18]
   1400634a8:	mov    r8d,eax
   1400634ab:	call   QWORD PTR [rip+0x8e7f]        # 0x14006c330
   1400634b1:	xor    edx,edx
   1400634b3:	test   eax,eax
   1400634b5:	je     0x140063522
   1400634b7:	mov    ecx,DWORD PTR [rbx+0x8]
   1400634ba:	sub    ecx,DWORD PTR [rbp-0x28]
   1400634bd:	add    ecx,edi
   1400634bf:	mov    DWORD PTR [rbx+0x4],ecx
   1400634c2:	cmp    DWORD PTR [rbp-0x38],r14d
   1400634c6:	jb     0x14006352a
   1400634c8:	cmp    r13b,0xa
   1400634cc:	jne    0x140063502
   1400634ce:	mov    rcx,QWORD PTR [rbp-0x30]
   1400634d2:	lea    eax,[rdx+0xd]
   1400634d5:	mov    QWORD PTR [rsp+0x20],rdx
   1400634da:	lea    r8d,[rdx+0x1]
   1400634de:	lea    rdx,[rbp-0x3c]
   1400634e2:	mov    WORD PTR [rbp-0x3c],ax
   1400634e6:	lea    r9,[rbp-0x38]
   1400634ea:	call   QWORD PTR [rip+0x8e40]        # 0x14006c330
   1400634f0:	xor    edx,edx
   1400634f2:	test   eax,eax
   1400634f4:	je     0x140063522
   1400634f6:	cmp    DWORD PTR [rbp-0x38],0x1
   1400634fa:	jb     0x14006352a
   1400634fc:	inc    DWORD PTR [rbx+0x8]
   1400634ff:	inc    DWORD PTR [rbx+0x4]
   140063502:	cmp    rdi,r12
   140063505:	jmp    0x1400633c0
   14006350a:	mov    al,BYTE PTR [rdi]
   14006350c:	mov    rcx,QWORD PTR [r14+r15*8]
   140063510:	mov    BYTE PTR [rcx+rsi*1+0x3e],al
   140063514:	mov    rax,QWORD PTR [r14+r15*8]
   140063518:	or     BYTE PTR [rax+rsi*1+0x3d],0x4
   14006351d:	inc    DWORD PTR [rbx+0x4]
   140063520:	jmp    0x14006352a
   140063522:	call   QWORD PTR [rip+0x8ca0]        # 0x14006c1c8
   140063528:	mov    DWORD PTR [rbx],eax
   14006352a:	mov    rax,rbx
   14006352d:	mov    rcx,QWORD PTR [rbp-0x10]
   140063531:	xor    rcx,rsp
   140063534:	call   0x140055f90
   140063539:	mov    rbx,QWORD PTR [rsp+0xc0]
   140063541:	add    rsp,0x80
   140063548:	pop    r15
   14006354a:	pop    r14
   14006354c:	pop    r13
   14006354e:	pop    r12
   140063550:	pop    rdi
   140063551:	pop    rsi
   140063552:	pop    rbp
   140063553:	ret    
   140063554:	mov    QWORD PTR [rsp+0x8],rbx
   140063559:	mov    QWORD PTR [rsp+0x18],rbp
   14006355e:	push   rsi
   14006355f:	push   rdi
   140063560:	push   r14
   140063562:	mov    eax,0x1450
   140063567:	call   0x140055f20
   14006356c:	sub    rsp,rax
   14006356f:	mov    rax,QWORD PTR [rip+0x1e96a]        # 0x140081ee0
   140063576:	xor    rax,rsp
   140063579:	mov    QWORD PTR [rsp+0x1440],rax
   140063581:	mov    rbx,rcx
   140063584:	movsxd r10,edx
   140063587:	mov    rax,r10
   14006358a:	mov    ebp,r9d
   14006358d:	sar    rax,0x6
   140063591:	lea    rcx,[rip+0x3c1d8]        # 0x14009f770
   140063598:	and    r10d,0x3f
   14006359c:	add    rbp,r8
   14006359f:	and    DWORD PTR [rbx],0x0
   1400635a2:	mov    rsi,r8
   1400635a5:	and    DWORD PTR [rbx+0x4],0x0
   1400635a9:	mov    rax,QWORD PTR [rcx+rax*8]
   1400635ad:	and    DWORD PTR [rbx+0x8],0x0
   1400635b1:	shl    r10,0x6
   1400635b5:	mov    r14,QWORD PTR [rax+r10*1+0x28]
   1400635ba:	cmp    r8,rbp
   1400635bd:	jae    0x14006362e
   1400635bf:	lea    rdi,[rsp+0x40]
   1400635c4:	cmp    rsi,rbp
   1400635c7:	jae    0x1400635ed
   1400635c9:	mov    al,BYTE PTR [rsi]
   1400635cb:	inc    rsi
   1400635ce:	cmp    al,0xa
   1400635d0:	jne    0x1400635db
   1400635d2:	inc    DWORD PTR [rbx+0x8]
   1400635d5:	mov    BYTE PTR [rdi],0xd
   1400635d8:	inc    rdi
   1400635db:	mov    BYTE PTR [rdi],al
   1400635dd:	inc    rdi
   1400635e0:	lea    rax,[rsp+0x143f]
   1400635e8:	cmp    rdi,rax
   1400635eb:	jb     0x1400635c4
   1400635ed:	and    QWORD PTR [rsp+0x20],0x0
   1400635f3:	lea    rax,[rsp+0x40]
   1400635f8:	sub    edi,eax
   1400635fa:	lea    r9,[rsp+0x30]
   1400635ff:	mov    r8d,edi
   140063602:	lea    rdx,[rsp+0x40]
   140063607:	mov    rcx,r14
   14006360a:	call   QWORD PTR [rip+0x8d20]        # 0x14006c330
   140063610:	test   eax,eax
   140063612:	je     0x140063626
   140063614:	mov    eax,DWORD PTR [rsp+0x30]
   140063618:	add    DWORD PTR [rbx+0x4],eax
   14006361b:	cmp    eax,edi
   14006361d:	jb     0x14006362e
   14006361f:	cmp    rsi,rbp
   140063622:	jb     0x1400635bf
   140063624:	jmp    0x14006362e
   140063626:	call   QWORD PTR [rip+0x8b9c]        # 0x14006c1c8
   14006362c:	mov    DWORD PTR [rbx],eax
   14006362e:	mov    rax,rbx
   140063631:	mov    rcx,QWORD PTR [rsp+0x1440]
   140063639:	xor    rcx,rsp
   14006363c:	call   0x140055f90
   140063641:	lea    r11,[rsp+0x1450]
   140063649:	mov    rbx,QWORD PTR [r11+0x20]
   14006364d:	mov    rbp,QWORD PTR [r11+0x30]
   140063651:	mov    rsp,r11
   140063654:	pop    r14
   140063656:	pop    rdi
   140063657:	pop    rsi
   140063658:	ret    
   140063659:	int3   
   14006365a:	int3   
   14006365b:	int3   
   14006365c:	mov    QWORD PTR [rsp+0x8],rbx
   140063661:	mov    QWORD PTR [rsp+0x18],rbp
   140063666:	push   rsi
   140063667:	push   rdi
   140063668:	push   r14
   14006366a:	mov    eax,0x1450
   14006366f:	call   0x140055f20
   140063674:	sub    rsp,rax
   140063677:	mov    rax,QWORD PTR [rip+0x1e862]        # 0x140081ee0
   14006367e:	xor    rax,rsp
   140063681:	mov    QWORD PTR [rsp+0x1440],rax
   140063689:	mov    rdi,rcx
   14006368c:	movsxd r10,edx
   14006368f:	mov    rax,r10
   140063692:	mov    ebp,r9d
   140063695:	sar    rax,0x6
   140063699:	lea    rcx,[rip+0x3c0d0]        # 0x14009f770
   1400636a0:	and    r10d,0x3f
   1400636a4:	add    rbp,r8
   1400636a7:	and    DWORD PTR [rdi],0x0
   1400636aa:	mov    rsi,r8
   1400636ad:	and    DWORD PTR [rdi+0x4],0x0
   1400636b1:	mov    rax,QWORD PTR [rcx+rax*8]
   1400636b5:	and    DWORD PTR [rdi+0x8],0x0
   1400636b9:	shl    r10,0x6
   1400636bd:	mov    r14,QWORD PTR [rax+r10*1+0x28]
   1400636c2:	cmp    r8,rbp
   1400636c5:	jae    0x14006374d
   1400636cb:	lea    rbx,[rsp+0x40]
   1400636d0:	cmp    rsi,rbp
   1400636d3:	jae    0x140063706
   1400636d5:	movzx  eax,WORD PTR [rsi]
   1400636d8:	add    rsi,0x2
   1400636dc:	cmp    ax,0xa
   1400636e0:	jne    0x1400636f2
   1400636e2:	add    DWORD PTR [rdi+0x8],0x2
   1400636e6:	mov    ecx,0xd
   1400636eb:	mov    WORD PTR [rbx],cx
   1400636ee:	add    rbx,0x2
   1400636f2:	mov    WORD PTR [rbx],ax
   1400636f5:	add    rbx,0x2
   1400636f9:	lea    rax,[rsp+0x143e]
   140063701:	cmp    rbx,rax
   140063704:	jb     0x1400636d0
   140063706:	and    QWORD PTR [rsp+0x20],0x0
   14006370c:	lea    rax,[rsp+0x40]
   140063711:	sub    rbx,rax
   140063714:	lea    r9,[rsp+0x30]
   140063719:	sar    rbx,1
   14006371c:	lea    rdx,[rsp+0x40]
   140063721:	add    ebx,ebx
   140063723:	mov    rcx,r14
   140063726:	mov    r8d,ebx
   140063729:	call   QWORD PTR [rip+0x8c01]        # 0x14006c330
   14006372f:	test   eax,eax
   140063731:	je     0x140063745
   140063733:	mov    eax,DWORD PTR [rsp+0x30]
   140063737:	add    DWORD PTR [rdi+0x4],eax
   14006373a:	cmp    eax,ebx
   14006373c:	jb     0x14006374d
   14006373e:	cmp    rsi,rbp
   140063741:	jb     0x1400636cb
   140063743:	jmp    0x14006374d
   140063745:	call   QWORD PTR [rip+0x8a7d]        # 0x14006c1c8
   14006374b:	mov    DWORD PTR [rdi],eax
   14006374d:	mov    rax,rdi
   140063750:	mov    rcx,QWORD PTR [rsp+0x1440]
   140063758:	xor    rcx,rsp
   14006375b:	call   0x140055f90
   140063760:	lea    r11,[rsp+0x1450]
   140063768:	mov    rbx,QWORD PTR [r11+0x20]
   14006376c:	mov    rbp,QWORD PTR [r11+0x30]
   140063770:	mov    rsp,r11
   140063773:	pop    r14
   140063775:	pop    rdi
   140063776:	pop    rsi
   140063777:	ret    
   140063778:	mov    QWORD PTR [rsp+0x8],rbx
   14006377d:	mov    QWORD PTR [rsp+0x18],rbp
   140063782:	push   rsi
   140063783:	push   rdi
   140063784:	push   r12
   140063786:	push   r14
   140063788:	push   r15
   14006378a:	mov    eax,0x1470
   14006378f:	call   0x140055f20
   140063794:	sub    rsp,rax
   140063797:	mov    rax,QWORD PTR [rip+0x1e742]        # 0x140081ee0
   14006379e:	xor    rax,rsp
   1400637a1:	mov    QWORD PTR [rsp+0x1460],rax
   1400637a9:	movsxd r10,edx
   1400637ac:	mov    rbx,rcx
   1400637af:	mov    rax,r10
   1400637b2:	mov    r14d,r9d
   1400637b5:	sar    rax,0x6
   1400637b9:	lea    rcx,[rip+0x3bfb0]        # 0x14009f770
   1400637c0:	and    r10d,0x3f
   1400637c4:	add    r14,r8
   1400637c7:	shl    r10,0x6
   1400637cb:	mov    r15,r8
   1400637ce:	mov    rdi,r8
   1400637d1:	mov    rax,QWORD PTR [rcx+rax*8]
   1400637d5:	mov    r12,QWORD PTR [rax+r10*1+0x28]
   1400637da:	xor    eax,eax
   1400637dc:	and    DWORD PTR [rbx],0x0
   1400637df:	mov    QWORD PTR [rbx+0x4],rax
   1400637e3:	cmp    r8,r14
   1400637e6:	jae    0x1400638bb
   1400637ec:	lea    rax,[rsp+0x50]
   1400637f1:	cmp    rdi,r14
   1400637f4:	jae    0x140063823
   1400637f6:	movzx  ecx,WORD PTR [rdi]
   1400637f9:	add    rdi,0x2
   1400637fd:	cmp    cx,0xa
   140063801:	jne    0x14006380f
   140063803:	mov    edx,0xd
   140063808:	mov    WORD PTR [rax],dx
   14006380b:	add    rax,0x2
   14006380f:	mov    WORD PTR [rax],cx
   140063812:	add    rax,0x2
   140063816:	lea    rcx,[rsp+0x6f8]
   14006381e:	cmp    rax,rcx
   140063821:	jb     0x1400637f1
   140063823:	and    QWORD PTR [rsp+0x38],0x0
   140063829:	lea    rcx,[rsp+0x50]
   14006382e:	and    QWORD PTR [rsp+0x30],0x0
   140063834:	lea    r8,[rsp+0x50]
   140063839:	sub    rax,rcx
   14006383c:	mov    DWORD PTR [rsp+0x28],0xd55
   140063844:	lea    rcx,[rsp+0x700]
   14006384c:	sar    rax,1
   14006384f:	mov    QWORD PTR [rsp+0x20],rcx
   140063854:	mov    r9d,eax
   140063857:	mov    ecx,0xfde9
   14006385c:	xor    edx,edx
   14006385e:	call   QWORD PTR [rip+0x8a44]        # 0x14006c2a8
   140063864:	mov    ebp,eax
   140063866:	test   eax,eax
   140063868:	je     0x1400638b3
   14006386a:	xor    esi,esi
   14006386c:	test   eax,eax
   14006386e:	je     0x1400638a3
   140063870:	and    QWORD PTR [rsp+0x20],0x0
   140063876:	lea    rdx,[rsp+0x700]
   14006387e:	mov    ecx,esi
   140063880:	lea    r9,[rsp+0x40]
   140063885:	mov    r8d,ebp
   140063888:	add    rdx,rcx
   14006388b:	mov    rcx,r12
   14006388e:	sub    r8d,esi
   140063891:	call   QWORD PTR [rip+0x8a99]        # 0x14006c330
   140063897:	test   eax,eax
   140063899:	je     0x1400638b3
   14006389b:	add    esi,DWORD PTR [rsp+0x40]
   14006389f:	cmp    esi,ebp
   1400638a1:	jb     0x140063870
   1400638a3:	mov    eax,edi
   1400638a5:	sub    eax,r15d
   1400638a8:	mov    DWORD PTR [rbx+0x4],eax
   1400638ab:	cmp    rdi,r14
   1400638ae:	jmp    0x1400637e6
   1400638b3:	call   QWORD PTR [rip+0x890f]        # 0x14006c1c8
   1400638b9:	mov    DWORD PTR [rbx],eax
   1400638bb:	mov    rax,rbx
   1400638be:	mov    rcx,QWORD PTR [rsp+0x1460]
   1400638c6:	xor    rcx,rsp
   1400638c9:	call   0x140055f90
   1400638ce:	lea    r11,[rsp+0x1470]
   1400638d6:	mov    rbx,QWORD PTR [r11+0x30]
   1400638da:	mov    rbp,QWORD PTR [r11+0x40]
   1400638de:	mov    rsp,r11
   1400638e1:	pop    r15
   1400638e3:	pop    r14
   1400638e5:	pop    r12
   1400638e7:	pop    rdi
   1400638e8:	pop    rsi
   1400638e9:	ret    
   1400638ea:	int3   
   1400638eb:	int3   
   1400638ec:	mov    QWORD PTR [rsp+0x10],rbx
   1400638f1:	mov    QWORD PTR [rsp+0x18],rsi
   1400638f6:	mov    DWORD PTR [rsp+0x8],ecx
   1400638fa:	push   rdi
   1400638fb:	push   r12
   1400638fd:	push   r13
   1400638ff:	push   r14
   140063901:	push   r15
   140063903:	sub    rsp,0x20
   140063907:	mov    r15d,r8d
   14006390a:	mov    r12,rdx
   14006390d:	movsxd rbx,ecx
   140063910:	cmp    ebx,0xfffffffe
   140063913:	jne    0x14006392d
   140063915:	call   0x140060e74
   14006391a:	and    DWORD PTR [rax],0x0
   14006391d:	call   0x140060e94
   140063922:	mov    DWORD PTR [rax],0x9
   140063928:	jmp    0x1400639bd
   14006392d:	test   ecx,ecx
   14006392f:	js     0x1400639a5
   140063931:	cmp    ebx,DWORD PTR [rip+0x3c239]        # 0x14009fb70
   140063937:	jae    0x1400639a5
   140063939:	mov    rsi,rbx
   14006393c:	mov    r14,rbx
   14006393f:	sar    r14,0x6
   140063943:	lea    r13,[rip+0x3be26]        # 0x14009f770
   14006394a:	and    esi,0x3f
   14006394d:	shl    rsi,0x6
   140063951:	mov    rax,QWORD PTR [r13+r14*8+0x0]
   140063956:	movzx  ecx,BYTE PTR [rax+rsi*1+0x38]
   14006395b:	and    ecx,0x1
   14006395e:	je     0x1400639a5
   140063960:	mov    ecx,ebx
   140063962:	call   0x14006402c
   140063967:	or     edi,0xffffffff
   14006396a:	mov    rax,QWORD PTR [r13+r14*8+0x0]
   14006396f:	test   BYTE PTR [rax+rsi*1+0x38],0x1
   140063974:	jne    0x14006398b
   140063976:	call   0x140060e94
   14006397b:	mov    DWORD PTR [rax],0x9
   140063981:	call   0x140060e74
   140063986:	and    DWORD PTR [rax],0x0
   140063989:	jmp    0x14006399a
   14006398b:	mov    r8d,r15d
   14006398e:	mov    rdx,r12
   140063991:	mov    ecx,ebx
   140063993:	call   0x1400639d8
   140063998:	mov    edi,eax
   14006399a:	mov    ecx,ebx
   14006399c:	call   0x140064050
   1400639a1:	mov    eax,edi
   1400639a3:	jmp    0x1400639c0
   1400639a5:	call   0x140060e74
   1400639aa:	and    DWORD PTR [rax],0x0
   1400639ad:	call   0x140060e94
   1400639b2:	mov    DWORD PTR [rax],0x9
   1400639b8:	call   0x140060d74
   1400639bd:	or     eax,0xffffffff
   1400639c0:	mov    rbx,QWORD PTR [rsp+0x58]
   1400639c5:	mov    rsi,QWORD PTR [rsp+0x60]
   1400639ca:	add    rsp,0x20
   1400639ce:	pop    r15
   1400639d0:	pop    r14
   1400639d2:	pop    r13
   1400639d4:	pop    r12
   1400639d6:	pop    rdi
   1400639d7:	ret    
   1400639d8:	mov    QWORD PTR [rsp+0x20],rbx
   1400639dd:	push   rbp
   1400639de:	push   rsi
   1400639df:	push   rdi
   1400639e0:	push   r12
   1400639e2:	push   r13
   1400639e4:	push   r14
   1400639e6:	push   r15
   1400639e8:	mov    rbp,rsp
   1400639eb:	sub    rsp,0x60
   1400639ef:	xor    edi,edi
   1400639f1:	mov    r15d,r8d
   1400639f4:	movsxd r12,ecx
   1400639f7:	mov    rsi,rdx
   1400639fa:	test   r8d,r8d
   1400639fd:	jne    0x140063a06
   1400639ff:	xor    eax,eax
   140063a01:	jmp    0x140063ca1
   140063a06:	test   rdx,rdx
   140063a09:	jne    0x140063a2a
   140063a0b:	call   0x140060e74
   140063a10:	mov    DWORD PTR [rax],edi
   140063a12:	call   0x140060e94
   140063a17:	mov    DWORD PTR [rax],0x16
   140063a1d:	call   0x140060d74
   140063a22:	or     eax,0xffffffff
   140063a25:	jmp    0x140063ca1
   140063a2a:	mov    r14,r12
   140063a2d:	lea    rax,[rip+0x3bd3c]        # 0x14009f770
   140063a34:	and    r14d,0x3f
   140063a38:	mov    r13,r12
   140063a3b:	sar    r13,0x6
   140063a3f:	shl    r14,0x6
   140063a43:	mov    QWORD PTR [rbp-0x10],r13
   140063a47:	mov    rcx,QWORD PTR [rax+r13*8]
   140063a4b:	mov    bl,BYTE PTR [rcx+r14*1+0x39]
   140063a50:	lea    eax,[rbx-0x1]
   140063a53:	cmp    al,0x1
   140063a55:	ja     0x140063a60
   140063a57:	mov    eax,r15d
   140063a5a:	not    eax
   140063a5c:	test   al,0x1
   140063a5e:	je     0x140063a0b
   140063a60:	test   BYTE PTR [rcx+r14*1+0x38],0x20
   140063a66:	je     0x140063a76
   140063a68:	xor    edx,edx
   140063a6a:	mov    ecx,r12d
   140063a6d:	lea    r8d,[rdx+0x2]
   140063a71:	call   0x140068b00
   140063a76:	mov    ecx,r12d
   140063a79:	mov    QWORD PTR [rbp-0x20],rdi
   140063a7d:	call   0x140068284
   140063a82:	test   eax,eax
   140063a84:	je     0x140063b8b
   140063a8a:	lea    rax,[rip+0x3bcdf]        # 0x14009f770
   140063a91:	mov    rax,QWORD PTR [rax+r13*8]
   140063a95:	test   BYTE PTR [rax+r14*1+0x38],0x80
   140063a9b:	je     0x140063b8b
   140063aa1:	call   0x140061588
   140063aa6:	mov    rcx,QWORD PTR [rax+0x90]
   140063aad:	cmp    QWORD PTR [rcx+0x138],rdi
   140063ab4:	jne    0x140063acc
   140063ab6:	lea    rax,[rip+0x3bcb3]        # 0x14009f770
   140063abd:	mov    rax,QWORD PTR [rax+r13*8]
   140063ac1:	cmp    BYTE PTR [rax+r14*1+0x39],dil
   140063ac6:	je     0x140063b8b
   140063acc:	lea    rax,[rip+0x3bc9d]        # 0x14009f770
   140063ad3:	mov    rcx,QWORD PTR [rax+r13*8]
   140063ad7:	lea    rdx,[rbp-0x8]
   140063adb:	mov    rcx,QWORD PTR [rcx+r14*1+0x28]
   140063ae0:	call   QWORD PTR [rip+0x8842]        # 0x14006c328
   140063ae6:	test   eax,eax
   140063ae8:	je     0x140063b8b
   140063aee:	test   bl,bl
   140063af0:	je     0x140063b6d
   140063af2:	dec    bl
   140063af4:	cmp    bl,0x1
   140063af7:	ja     0x140063c28
   140063afd:	and    DWORD PTR [rbp-0x30],edi
   140063b00:	lea    r12,[rsi+r15*1]
   140063b04:	xor    ebx,ebx
   140063b06:	mov    r15,rsi
   140063b09:	mov    DWORD PTR [rbp-0x2c],ebx
   140063b0c:	cmp    rsi,r12
   140063b0f:	jae    0x140063c1e
   140063b15:	movzx  r13d,WORD PTR [r15]
   140063b19:	movzx  ecx,r13w
   140063b1d:	call   0x140068b08
   140063b22:	cmp    ax,r13w
   140063b26:	jne    0x140063b5b
   140063b28:	add    ebx,0x2
   140063b2b:	mov    DWORD PTR [rbp-0x2c],ebx
   140063b2e:	cmp    r13w,0xa
   140063b33:	jne    0x140063b50
   140063b35:	mov    r13d,0xd
   140063b3b:	mov    ecx,r13d
   140063b3e:	call   0x140068b08
   140063b43:	cmp    ax,r13w
   140063b47:	jne    0x140063b5b
   140063b49:	inc    ebx
   140063b4b:	mov    DWORD PTR [rbp-0x2c],ebx
   140063b4e:	inc    edi
   140063b50:	add    r15,0x2
   140063b54:	cmp    r15,r12
   140063b57:	jae    0x140063b64
   140063b59:	jmp    0x140063b15
   140063b5b:	call   QWORD PTR [rip+0x8667]        # 0x14006c1c8
   140063b61:	mov    DWORD PTR [rbp-0x30],eax
   140063b64:	mov    r13,QWORD PTR [rbp-0x10]
   140063b68:	jmp    0x140063c1e
   140063b6d:	mov    r9d,r15d
   140063b70:	lea    rcx,[rbp-0x30]
   140063b74:	mov    r8,rsi
   140063b77:	mov    edx,r12d
   140063b7a:	call   0x14006334c
   140063b7f:	movsd  xmm0,QWORD PTR [rax]
   140063b83:	mov    edi,DWORD PTR [rax+0x8]
   140063b86:	jmp    0x140063c23
   140063b8b:	lea    rax,[rip+0x3bbde]        # 0x14009f770
   140063b92:	mov    rcx,QWORD PTR [rax+r13*8]
   140063b96:	test   BYTE PTR [rcx+r14*1+0x38],0x80
   140063b9c:	je     0x140063beb
   140063b9e:	movsx  ecx,bl
   140063ba1:	test   bl,bl
   140063ba3:	je     0x140063bd7
   140063ba5:	sub    ecx,0x1
   140063ba8:	je     0x140063bc3
   140063baa:	cmp    ecx,0x1
   140063bad:	jne    0x140063c28
   140063baf:	mov    r9d,r15d
   140063bb2:	lea    rcx,[rbp-0x30]
   140063bb6:	mov    r8,rsi
   140063bb9:	mov    edx,r12d
   140063bbc:	call   0x14006365c
   140063bc1:	jmp    0x140063b7f
   140063bc3:	mov    r9d,r15d
   140063bc6:	lea    rcx,[rbp-0x30]
   140063bca:	mov    r8,rsi
   140063bcd:	mov    edx,r12d
   140063bd0:	call   0x140063778
   140063bd5:	jmp    0x140063b7f
   140063bd7:	mov    r9d,r15d
   140063bda:	lea    rcx,[rbp-0x30]
   140063bde:	mov    r8,rsi
   140063be1:	mov    edx,r12d
   140063be4:	call   0x140063554
   140063be9:	jmp    0x140063b7f
   140063beb:	mov    rcx,QWORD PTR [rcx+r14*1+0x28]
   140063bf0:	lea    r9,[rbp-0x2c]
   140063bf4:	and    DWORD PTR [rbp-0x30],edi
   140063bf7:	xor    eax,eax
   140063bf9:	and    QWORD PTR [rsp+0x20],rax
   140063bfe:	mov    r8d,r15d
   140063c01:	mov    rdx,rsi
   140063c04:	mov    QWORD PTR [rbp-0x2c],rax
   140063c08:	call   QWORD PTR [rip+0x8722]        # 0x14006c330
   140063c0e:	test   eax,eax
   140063c10:	jne    0x140063c1b
   140063c12:	call   QWORD PTR [rip+0x85b0]        # 0x14006c1c8
   140063c18:	mov    DWORD PTR [rbp-0x30],eax
   140063c1b:	mov    edi,DWORD PTR [rbp-0x28]
   140063c1e:	movsd  xmm0,QWORD PTR [rbp-0x30]
   140063c23:	movsd  QWORD PTR [rbp-0x20],xmm0
   140063c28:	mov    rax,QWORD PTR [rbp-0x20]
   140063c2c:	shr    rax,0x20
   140063c30:	test   eax,eax
   140063c32:	jne    0x140063c9c
   140063c34:	mov    eax,DWORD PTR [rbp-0x20]
   140063c37:	test   eax,eax
   140063c39:	je     0x140063c68
   140063c3b:	cmp    eax,0x5
   140063c3e:	jne    0x140063c5b
   140063c40:	call   0x140060e94
   140063c45:	mov    DWORD PTR [rax],0x9
   140063c4b:	call   0x140060e74
   140063c50:	mov    DWORD PTR [rax],0x5
   140063c56:	jmp    0x140063a22
   140063c5b:	mov    ecx,DWORD PTR [rbp-0x20]
   140063c5e:	call   0x140060e24
   140063c63:	jmp    0x140063a22
   140063c68:	lea    rax,[rip+0x3bb01]        # 0x14009f770
   140063c6f:	mov    rax,QWORD PTR [rax+r13*8]
   140063c73:	test   BYTE PTR [rax+r14*1+0x38],0x40
   140063c79:	je     0x140063c84
   140063c7b:	cmp    BYTE PTR [rsi],0x1a
   140063c7e:	je     0x1400639ff
   140063c84:	call   0x140060e94
   140063c89:	mov    DWORD PTR [rax],0x1c
   140063c8f:	call   0x140060e74
   140063c94:	and    DWORD PTR [rax],0x0
   140063c97:	jmp    0x140063a22
   140063c9c:	mov    eax,DWORD PTR [rbp-0x1c]
   140063c9f:	sub    eax,edi
   140063ca1:	mov    rbx,QWORD PTR [rsp+0xb8]
   140063ca9:	add    rsp,0x60
   140063cad:	pop    r15
   140063caf:	pop    r14
   140063cb1:	pop    r13
   140063cb3:	pop    r12
   140063cb5:	pop    rdi
   140063cb6:	pop    rsi
   140063cb7:	pop    rbp
   140063cb8:	ret    
   140063cb9:	int3   
   140063cba:	int3   
   140063cbb:	int3   
   140063cbc:	mov    QWORD PTR [rsp+0x8],rbx
   140063cc1:	mov    QWORD PTR [rsp+0x20],r9
   140063cc6:	push   rdi
   140063cc7:	sub    rsp,0x20
   140063ccb:	mov    rbx,r9
   140063cce:	mov    rdi,r8
   140063cd1:	mov    rcx,QWORD PTR [rdx]
   140063cd4:	call   0x14005e7a4
   140063cd9:	nop
   140063cda:	mov    rcx,rdi
   140063cdd:	call   0x140063cfc
   140063ce2:	mov    edi,eax
   140063ce4:	mov    rcx,QWORD PTR [rbx]
   140063ce7:	call   0x14005e7b0
   140063cec:	mov    eax,edi
   140063cee:	mov    rbx,QWORD PTR [rsp+0x30]
   140063cf3:	add    rsp,0x20
   140063cf7:	pop    rdi
   140063cf8:	ret    
   140063cf9:	int3   
   140063cfa:	int3   
   140063cfb:	int3   
   140063cfc:	mov    QWORD PTR [rsp+0x10],rbx
   140063d01:	mov    QWORD PTR [rsp+0x18],rsi
   140063d06:	push   rdi
   140063d07:	sub    rsp,0x20
   140063d0b:	mov    rax,QWORD PTR [rcx]
   140063d0e:	mov    rdi,rcx
   140063d11:	mov    rcx,QWORD PTR [rcx+0x8]
   140063d15:	mov    rsi,QWORD PTR [rax]
   140063d18:	mov    rcx,QWORD PTR [rcx]
   140063d1b:	and    rsi,0xfffffffffffffffe
   140063d1f:	call   0x14005e7bc
   140063d24:	mov    rcx,QWORD PTR [rdi+0x8]
   140063d28:	mov    rcx,QWORD PTR [rcx]
   140063d2b:	call   0x1400631ec
   140063d30:	mov    rax,QWORD PTR [rdi+0x8]
   140063d34:	mov    rdx,QWORD PTR [rax]
   140063d37:	lock and DWORD PTR [rdx+0x14],0xfffff81f
   140063d3f:	mov    rax,QWORD PTR [rdi+0x10]
   140063d43:	test   BYTE PTR [rax],0x4
   140063d46:	je     0x140063d64
   140063d48:	mov    rax,QWORD PTR [rdi+0x8]
   140063d4c:	mov    rax,QWORD PTR [rax]
   140063d4f:	lea    rcx,[rax+0x1c]
   140063d53:	lock or DWORD PTR [rax+0x14],0x400
   140063d5b:	mov    DWORD PTR [rax+0x20],0x2
   140063d62:	jmp    0x140063dcd
   140063d64:	mov    rax,QWORD PTR [rdi+0x18]
   140063d68:	mov    rcx,QWORD PTR [rax]
   140063d6b:	test   rcx,rcx
   140063d6e:	jne    0x140063dbb
   140063d70:	mov    rcx,rsi
   140063d73:	call   0x140060a0c
   140063d78:	xor    ecx,ecx
   140063d7a:	mov    QWORD PTR [rsp+0x30],rax
   140063d7f:	mov    rbx,rax
   140063d82:	call   0x1400609cc
   140063d87:	test   rbx,rbx
   140063d8a:	jne    0x140063d97
   140063d8c:	inc    DWORD PTR [rip+0x3b7e6]        # 0x14009f578
   140063d92:	or     eax,0xffffffff
   140063d95:	jmp    0x140063dda
   140063d97:	mov    rcx,QWORD PTR [rdi+0x8]
   140063d9b:	mov    rcx,QWORD PTR [rcx]
   140063d9e:	lock or DWORD PTR [rcx+0x14],0x140
   140063da6:	mov    rax,QWORD PTR [rsp+0x30]
   140063dab:	and    DWORD PTR [rcx+0x10],0x0
   140063daf:	mov    QWORD PTR [rcx],rax
   140063db2:	mov    QWORD PTR [rcx+0x8],rax
   140063db6:	mov    DWORD PTR [rcx+0x20],esi
   140063db9:	jmp    0x140063dd8
   140063dbb:	mov    rax,QWORD PTR [rdi+0x8]
   140063dbf:	mov    rax,QWORD PTR [rax]
   140063dc2:	lock or DWORD PTR [rax+0x14],0x180
   140063dca:	mov    DWORD PTR [rax+0x20],esi
   140063dcd:	mov    QWORD PTR [rax],rcx
   140063dd0:	mov    QWORD PTR [rax+0x8],rcx
   140063dd4:	and    DWORD PTR [rax+0x10],0x0
   140063dd8:	xor    eax,eax
   140063dda:	mov    rbx,QWORD PTR [rsp+0x38]
   140063ddf:	mov    rsi,QWORD PTR [rsp+0x40]
   140063de4:	add    rsp,0x20
   140063de8:	pop    rdi
   140063de9:	ret    
   140063dea:	int3   
   140063deb:	int3   
   140063dec:	mov    QWORD PTR [rsp+0x20],r9
   140063df1:	mov    DWORD PTR [rsp+0x18],r8d
   140063df6:	mov    QWORD PTR [rsp+0x10],rdx
   140063dfb:	push   rbp
   140063dfc:	mov    rbp,rsp
   140063dff:	sub    rsp,0x60
   140063e03:	mov    QWORD PTR [rbp-0x40],rcx
   140063e07:	test   rcx,rcx
   140063e0a:	jne    0x140063e21
   140063e0c:	call   0x140060e94
   140063e11:	mov    DWORD PTR [rax],0x16
   140063e17:	call   0x140060d74
   140063e1c:	or     eax,0xffffffff
   140063e1f:	jmp    0x140063e84
   140063e21:	cmp    r8d,0x4
   140063e25:	je     0x140063e32
   140063e27:	test   r8d,r8d
   140063e2a:	je     0x140063e3b
   140063e2c:	cmp    r8d,0x40
   140063e30:	jne    0x140063e0c
   140063e32:	test   r8d,0xffffffbf
   140063e39:	jne    0x140063e47
   140063e3b:	lea    rax,[r9-0x2]
   140063e3f:	cmp    rax,0x7ffffffd
   140063e45:	ja     0x140063e0c
   140063e47:	lea    rax,[rbp+0x28]
   140063e4b:	mov    QWORD PTR [rbp-0x38],rcx
   140063e4f:	mov    QWORD PTR [rbp-0x28],rax
   140063e53:	lea    r9,[rbp-0x38]
   140063e57:	lea    rax,[rbp-0x40]
   140063e5b:	mov    QWORD PTR [rbp-0x30],rcx
   140063e5f:	mov    QWORD PTR [rbp-0x20],rax
   140063e63:	lea    r8,[rbp-0x28]
   140063e67:	lea    rax,[rbp+0x20]
   140063e6b:	mov    QWORD PTR [rbp-0x18],rax
   140063e6f:	lea    rdx,[rbp-0x30]
   140063e73:	lea    rax,[rbp+0x18]
   140063e77:	lea    rcx,[rbp+0x10]
   140063e7b:	mov    QWORD PTR [rbp-0x10],rax
   140063e7f:	call   0x140063cbc
   140063e84:	add    rsp,0x60
   140063e88:	pop    rbp
   140063e89:	ret    
   140063e8a:	int3   
   140063e8b:	int3   
   140063e8c:	mov    QWORD PTR [rsp+0x8],rbx
   140063e91:	mov    QWORD PTR [rsp+0x10],rbp
   140063e96:	mov    QWORD PTR [rsp+0x18],rsi
   140063e9b:	push   rdi
   140063e9c:	sub    rsp,0x20
   140063ea0:	mov    edx,0x40
   140063ea5:	mov    ecx,edx
   140063ea7:	call   0x140060a6c
   140063eac:	xor    esi,esi
   140063eae:	mov    rbx,rax
   140063eb1:	test   rax,rax
   140063eb4:	je     0x140063f02
   140063eb6:	lea    rbp,[rax+0x1000]
   140063ebd:	cmp    rax,rbp
   140063ec0:	je     0x140063eff
   140063ec2:	lea    rdi,[rax+0x30]
   140063ec6:	lea    rcx,[rdi-0x30]
   140063eca:	xor    r8d,r8d
   140063ecd:	mov    edx,0xfa0
   140063ed2:	call   0x140062ce4
   140063ed7:	or     QWORD PTR [rdi-0x8],0xffffffffffffffff
   140063edc:	mov    QWORD PTR [rdi],rsi
   140063edf:	mov    DWORD PTR [rdi+0x8],0xa0a0000
   140063ee6:	mov    BYTE PTR [rdi+0xc],0xa
   140063eea:	and    BYTE PTR [rdi+0xd],0xf8
   140063eee:	mov    BYTE PTR [rdi+0xe],sil
   140063ef2:	lea    rdi,[rdi+0x40]
   140063ef6:	lea    rax,[rdi-0x30]
   140063efa:	cmp    rax,rbp
   140063efd:	jne    0x140063ec6
   140063eff:	mov    rsi,rbx
   140063f02:	xor    ecx,ecx
   140063f04:	call   0x1400609cc
   140063f09:	mov    rbx,QWORD PTR [rsp+0x30]
   140063f0e:	mov    rax,rsi
   140063f11:	mov    rsi,QWORD PTR [rsp+0x40]
   140063f16:	mov    rbp,QWORD PTR [rsp+0x38]
   140063f1b:	add    rsp,0x20
   140063f1f:	pop    rdi
   140063f20:	ret    
   140063f21:	int3   
   140063f22:	int3   
   140063f23:	int3   
   140063f24:	test   rcx,rcx
   140063f27:	je     0x140063f73
   140063f29:	mov    QWORD PTR [rsp+0x8],rbx
   140063f2e:	mov    QWORD PTR [rsp+0x10],rsi
   140063f33:	push   rdi
   140063f34:	sub    rsp,0x20
   140063f38:	lea    rsi,[rcx+0x1000]
   140063f3f:	mov    rbx,rcx
   140063f42:	mov    rdi,rcx
   140063f45:	cmp    rcx,rsi
   140063f48:	je     0x140063f5c
   140063f4a:	mov    rcx,rdi
   140063f4d:	call   QWORD PTR [rip+0x82cd]        # 0x14006c220
   140063f53:	add    rdi,0x40
   140063f57:	cmp    rdi,rsi
   140063f5a:	jne    0x140063f4a
   140063f5c:	mov    rcx,rbx
   140063f5f:	call   0x1400609cc
   140063f64:	mov    rbx,QWORD PTR [rsp+0x30]
   140063f69:	mov    rsi,QWORD PTR [rsp+0x38]
   140063f6e:	add    rsp,0x20
   140063f72:	pop    rdi
   140063f73:	ret    
   140063f74:	mov    QWORD PTR [rsp+0x8],rbx
   140063f79:	mov    QWORD PTR [rsp+0x10],rsi
   140063f7e:	mov    QWORD PTR [rsp+0x18],rdi
   140063f83:	push   r15
   140063f85:	sub    rsp,0x30
   140063f89:	mov    esi,ecx
   140063f8b:	xor    ebx,ebx
   140063f8d:	mov    eax,ebx
   140063f8f:	cmp    ecx,0x2000
   140063f95:	setb   al
   140063f98:	test   eax,eax
   140063f9a:	jne    0x140063fb1
   140063f9c:	call   0x140060e94
   140063fa1:	mov    ebx,0x9
   140063fa6:	mov    DWORD PTR [rax],ebx
   140063fa8:	call   0x140060d74
   140063fad:	mov    eax,ebx
   140063faf:	jmp    0x140064015
   140063fb1:	mov    ecx,0x7
   140063fb6:	call   0x140062874
   140063fbb:	nop
   140063fbc:	mov    rdi,rbx
   140063fbf:	mov    QWORD PTR [rsp+0x20],rbx
   140063fc4:	mov    eax,DWORD PTR [rip+0x3bba6]        # 0x14009fb70
   140063fca:	cmp    esi,eax
   140063fcc:	jl     0x140064009
   140063fce:	lea    r15,[rip+0x3b79b]        # 0x14009f770
   140063fd5:	cmp    QWORD PTR [r15+rdi*8],rbx
   140063fd9:	je     0x140063fdd
   140063fdb:	jmp    0x140063fff
   140063fdd:	call   0x140063e8c
   140063fe2:	mov    QWORD PTR [r15+rdi*8],rax
   140063fe6:	test   rax,rax
   140063fe9:	jne    0x140063ff0
   140063feb:	lea    ebx,[rax+0xc]
   140063fee:	jmp    0x140064009
   140063ff0:	mov    eax,DWORD PTR [rip+0x3bb7a]        # 0x14009fb70
   140063ff6:	add    eax,0x40
   140063ff9:	mov    DWORD PTR [rip+0x3bb71],eax        # 0x14009fb70
   140063fff:	inc    rdi
   140064002:	mov    QWORD PTR [rsp+0x20],rdi
   140064007:	jmp    0x140063fca
   140064009:	mov    ecx,0x7
   14006400e:	call   0x1400628c8
   140064013:	jmp    0x140063fad
   140064015:	mov    rbx,QWORD PTR [rsp+0x40]
   14006401a:	mov    rsi,QWORD PTR [rsp+0x48]
   14006401f:	mov    rdi,QWORD PTR [rsp+0x50]
   140064024:	add    rsp,0x30
   140064028:	pop    r15
   14006402a:	ret    
   14006402b:	int3   
   14006402c:	movsxd rcx,ecx
   14006402f:	lea    rdx,[rip+0x3b73a]        # 0x14009f770
   140064036:	mov    rax,rcx
   140064039:	and    ecx,0x3f
   14006403c:	sar    rax,0x6
   140064040:	shl    rcx,0x6
   140064044:	add    rcx,QWORD PTR [rdx+rax*8]
   140064048:	rex.W jmp QWORD PTR [rip+0x81c1]        # 0x14006c210
   14006404f:	int3   
   140064050:	movsxd rcx,ecx
   140064053:	lea    rdx,[rip+0x3b716]        # 0x14009f770
   14006405a:	mov    rax,rcx
   14006405d:	and    ecx,0x3f
   140064060:	sar    rax,0x6
   140064064:	shl    rcx,0x6
   140064068:	add    rcx,QWORD PTR [rdx+rax*8]
   14006406c:	rex.W jmp QWORD PTR [rip+0x81a5]        # 0x14006c218
   140064073:	int3   
   140064074:	mov    QWORD PTR [rsp+0x8],rbx
   140064079:	mov    QWORD PTR [rsp+0x10],rsi
   14006407e:	mov    QWORD PTR [rsp+0x18],rdi
   140064083:	push   r14
   140064085:	sub    rsp,0x20
   140064089:	movsxd rbx,ecx
   14006408c:	test   ecx,ecx
   14006408e:	js     0x140064102
   140064090:	cmp    ebx,DWORD PTR [rip+0x3bada]        # 0x14009fb70
   140064096:	jae    0x140064102
   140064098:	mov    rdi,rbx
   14006409b:	lea    r14,[rip+0x3b6ce]        # 0x14009f770
   1400640a2:	and    edi,0x3f
   1400640a5:	mov    rsi,rbx
   1400640a8:	sar    rsi,0x6
   1400640ac:	shl    rdi,0x6
   1400640b0:	mov    rax,QWORD PTR [r14+rsi*8]
   1400640b4:	test   BYTE PTR [rax+rdi*1+0x38],0x1
   1400640b9:	je     0x140064102
   1400640bb:	cmp    QWORD PTR [rax+rdi*1+0x28],0xffffffffffffffff
   1400640c1:	je     0x140064102
   1400640c3:	call   0x140060578
   1400640c8:	cmp    eax,0x1
   1400640cb:	jne    0x1400640f4
   1400640cd:	test   ebx,ebx
   1400640cf:	je     0x1400640e7
   1400640d1:	sub    ebx,eax
   1400640d3:	je     0x1400640e0
   1400640d5:	cmp    ebx,eax
   1400640d7:	jne    0x1400640f4
   1400640d9:	mov    ecx,0xfffffff4
   1400640de:	jmp    0x1400640ec
   1400640e0:	mov    ecx,0xfffffff5
   1400640e5:	jmp    0x1400640ec
   1400640e7:	mov    ecx,0xfffffff6
   1400640ec:	xor    edx,edx
   1400640ee:	call   QWORD PTR [rip+0x8284]        # 0x14006c378
   1400640f4:	mov    rax,QWORD PTR [r14+rsi*8]
   1400640f8:	or     QWORD PTR [rax+rdi*1+0x28],0xffffffffffffffff
   1400640fe:	xor    eax,eax
   140064100:	jmp    0x140064118
   140064102:	call   0x140060e94
   140064107:	mov    DWORD PTR [rax],0x9
   14006410d:	call   0x140060e74
   140064112:	and    DWORD PTR [rax],0x0
   140064115:	or     eax,0xffffffff
   140064118:	mov    rbx,QWORD PTR [rsp+0x30]
   14006411d:	mov    rsi,QWORD PTR [rsp+0x38]
   140064122:	mov    rdi,QWORD PTR [rsp+0x40]
   140064127:	add    rsp,0x20
   14006412b:	pop    r14
   14006412d:	ret    
   14006412e:	int3   
   14006412f:	int3   
   140064130:	sub    rsp,0x28
   140064134:	cmp    ecx,0xfffffffe
   140064137:	jne    0x14006414e
   140064139:	call   0x140060e74
   14006413e:	and    DWORD PTR [rax],0x0
   140064141:	call   0x140060e94
   140064146:	mov    DWORD PTR [rax],0x9
   14006414c:	jmp    0x14006419c
   14006414e:	test   ecx,ecx
   140064150:	js     0x140064184
   140064152:	cmp    ecx,DWORD PTR [rip+0x3ba18]        # 0x14009fb70
   140064158:	jae    0x140064184
   14006415a:	movsxd rdx,ecx
   14006415d:	lea    rcx,[rip+0x3b60c]        # 0x14009f770
   140064164:	mov    rax,rdx
   140064167:	and    edx,0x3f
   14006416a:	sar    rax,0x6
   14006416e:	shl    rdx,0x6
   140064172:	mov    rax,QWORD PTR [rcx+rax*8]
   140064176:	test   BYTE PTR [rax+rdx*1+0x38],0x1
   14006417b:	je     0x140064184
   14006417d:	mov    rax,QWORD PTR [rax+rdx*1+0x28]
   140064182:	jmp    0x1400641a0
   140064184:	call   0x140060e74
   140064189:	and    DWORD PTR [rax],0x0
   14006418c:	call   0x140060e94
   140064191:	mov    DWORD PTR [rax],0x9
   140064197:	call   0x140060d74
   14006419c:	or     rax,0xffffffffffffffff
   1400641a0:	add    rsp,0x28
   1400641a4:	ret    
   1400641a5:	int3   
   1400641a6:	int3   
   1400641a7:	int3   
   1400641a8:	rex push rbx
   1400641aa:	sub    rsp,0x40
   1400641ae:	mov    ebx,ecx
   1400641b0:	lea    rcx,[rsp+0x20]
   1400641b5:	call   0x14005b174
   1400641ba:	mov    rax,QWORD PTR [rsp+0x28]
   1400641bf:	movzx  edx,bl
   1400641c2:	mov    rcx,QWORD PTR [rax]
   1400641c5:	movzx  eax,WORD PTR [rcx+rdx*2]
   1400641c9:	and    eax,0x8000
   1400641ce:	cmp    BYTE PTR [rsp+0x38],0x0
   1400641d3:	je     0x1400641e1
   1400641d5:	mov    rcx,QWORD PTR [rsp+0x20]
   1400641da:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   1400641e1:	add    rsp,0x40
   1400641e5:	pop    rbx
   1400641e6:	ret    
   1400641e7:	int3   
   1400641e8:	rex push rbp
   1400641ea:	push   r12
   1400641ec:	push   r13
   1400641ee:	push   r14
   1400641f0:	push   r15
   1400641f2:	sub    rsp,0x60
   1400641f6:	lea    rbp,[rsp+0x50]
   1400641fb:	mov    QWORD PTR [rbp+0x40],rbx
   1400641ff:	mov    QWORD PTR [rbp+0x48],rsi
   140064203:	mov    QWORD PTR [rbp+0x50],rdi
   140064207:	mov    rax,QWORD PTR [rip+0x1dcd2]        # 0x140081ee0
   14006420e:	xor    rax,rbp
   140064211:	mov    QWORD PTR [rbp+0x8],rax
   140064215:	movsxd rbx,DWORD PTR [rbp+0x60]
   140064219:	mov    r15,r9
   14006421c:	mov    QWORD PTR [rbp+0x0],rdx
   140064220:	mov    r13d,r8d
   140064223:	mov    rdi,rcx
   140064226:	test   ebx,ebx
   140064228:	jle    0x14006423e
   14006422a:	mov    rdx,rbx
   14006422d:	mov    rcx,r9
   140064230:	call   0x140068b64
   140064235:	cmp    eax,ebx
   140064237:	lea    ebx,[rax+0x1]
   14006423a:	jl     0x14006423e
   14006423c:	mov    ebx,eax
   14006423e:	mov    r14d,DWORD PTR [rbp+0x78]
   140064242:	test   r14d,r14d
   140064245:	jne    0x14006424e
   140064247:	mov    rax,QWORD PTR [rdi]
   14006424a:	mov    r14d,DWORD PTR [rax+0xc]
   14006424e:	neg    DWORD PTR [rbp+0x80]
   140064254:	mov    r9d,ebx
   140064257:	mov    r8,r15
   14006425a:	mov    ecx,r14d
   14006425d:	sbb    edx,edx
   14006425f:	and    DWORD PTR [rsp+0x28],0x0
   140064264:	and    QWORD PTR [rsp+0x20],0x0
   14006426a:	and    edx,0x8
   14006426d:	inc    edx
   14006426f:	call   QWORD PTR [rip+0x802b]        # 0x14006c2a0
   140064275:	movsxd r12,eax
   140064278:	test   eax,eax
   14006427a:	je     0x1400644fb
   140064280:	mov    rdx,r12
   140064283:	movabs r8,0xffffffffffffff0
   14006428d:	add    rdx,rdx
   140064290:	lea    rcx,[rdx+0x10]
   140064294:	cmp    rdx,rcx
   140064297:	sbb    rax,rax
   14006429a:	test   rcx,rax
   14006429d:	je     0x140064311
   14006429f:	lea    rcx,[rdx+0x10]
   1400642a3:	cmp    rdx,rcx
   1400642a6:	sbb    rax,rax
   1400642a9:	and    rax,rcx
   1400642ac:	cmp    rax,0x400
   1400642b2:	lea    rax,[rdx+0x10]
   1400642b6:	ja     0x1400642ef
   1400642b8:	cmp    rdx,rax
   1400642bb:	sbb    rcx,rcx
   1400642be:	and    rcx,rax
   1400642c1:	lea    rax,[rcx+0xf]
   1400642c5:	cmp    rax,rcx
   1400642c8:	ja     0x1400642cd
   1400642ca:	mov    rax,r8
   1400642cd:	and    rax,0xfffffffffffffff0
   1400642d1:	call   0x140055f20
   1400642d6:	sub    rsp,rax
   1400642d9:	lea    rsi,[rsp+0x50]
   1400642de:	test   rsi,rsi
   1400642e1:	je     0x1400644e1
   1400642e7:	mov    DWORD PTR [rsi],0xcccc
   1400642ed:	jmp    0x14006430b
   1400642ef:	cmp    rdx,rax
   1400642f2:	sbb    rcx,rcx
   1400642f5:	and    rcx,rax
   1400642f8:	call   0x140060a0c
   1400642fd:	mov    rsi,rax
   140064300:	test   rax,rax
   140064303:	je     0x140064313
   140064305:	mov    DWORD PTR [rax],0xdddd
   14006430b:	add    rsi,0x10
   14006430f:	jmp    0x140064313
   140064311:	xor    esi,esi
   140064313:	test   rsi,rsi
   140064316:	je     0x1400644e1
   14006431c:	mov    DWORD PTR [rsp+0x28],r12d
   140064321:	mov    r9d,ebx
   140064324:	mov    r8,r15
   140064327:	mov    QWORD PTR [rsp+0x20],rsi
   14006432c:	mov    edx,0x1
   140064331:	mov    ecx,r14d
   140064334:	call   QWORD PTR [rip+0x7f66]        # 0x14006c2a0
   14006433a:	test   eax,eax
   14006433c:	je     0x1400644e1
   140064342:	and    QWORD PTR [rsp+0x40],0x0
   140064348:	mov    r9d,r12d
   14006434b:	and    QWORD PTR [rsp+0x38],0x0
   140064351:	mov    r8,rsi
   140064354:	and    QWORD PTR [rsp+0x30],0x0
   14006435a:	mov    edx,r13d
   14006435d:	mov    r15,QWORD PTR [rbp+0x0]
   140064361:	and    DWORD PTR [rsp+0x28],0x0
   140064366:	mov    rcx,r15
   140064369:	and    QWORD PTR [rsp+0x20],0x0
   14006436f:	call   0x140062d5c
   140064374:	movsxd rdi,eax
   140064377:	test   eax,eax
   140064379:	je     0x1400644e1
   14006437f:	mov    r8d,0x400
   140064385:	test   r8d,r13d
   140064388:	je     0x1400643dc
   14006438a:	mov    eax,DWORD PTR [rbp+0x70]
   14006438d:	test   eax,eax
   14006438f:	je     0x1400644e3
   140064395:	cmp    edi,eax
   140064397:	jg     0x1400644e1
   14006439d:	and    QWORD PTR [rsp+0x40],0x0
   1400643a3:	mov    r9d,r12d
   1400643a6:	and    QWORD PTR [rsp+0x38],0x0
   1400643ac:	mov    r8,rsi
   1400643af:	and    QWORD PTR [rsp+0x30],0x0
   1400643b5:	mov    edx,r13d
   1400643b8:	mov    DWORD PTR [rsp+0x28],eax
   1400643bc:	mov    rcx,r15
   1400643bf:	mov    rax,QWORD PTR [rbp+0x68]
   1400643c3:	mov    QWORD PTR [rsp+0x20],rax
   1400643c8:	call   0x140062d5c
   1400643cd:	mov    edi,eax
   1400643cf:	test   eax,eax
   1400643d1:	jne    0x1400644e3
   1400643d7:	jmp    0x1400644e1
   1400643dc:	mov    rdx,rdi
   1400643df:	add    rdx,rdx
   1400643e2:	lea    rcx,[rdx+0x10]
   1400643e6:	cmp    rdx,rcx
   1400643e9:	sbb    rax,rax
   1400643ec:	test   rcx,rax
   1400643ef:	je     0x140064467
   1400643f1:	lea    rcx,[rdx+0x10]
   1400643f5:	cmp    rdx,rcx
   1400643f8:	sbb    rax,rax
   1400643fb:	and    rax,rcx
   1400643fe:	cmp    rax,r8
   140064401:	lea    rax,[rdx+0x10]
   140064405:	ja     0x140064445
   140064407:	cmp    rdx,rax
   14006440a:	sbb    rcx,rcx
   14006440d:	and    rcx,rax
   140064410:	lea    rax,[rcx+0xf]
   140064414:	cmp    rax,rcx
   140064417:	ja     0x140064423
   140064419:	movabs rax,0xffffffffffffff0
   140064423:	and    rax,0xfffffffffffffff0
   140064427:	call   0x140055f20
   14006442c:	sub    rsp,rax
   14006442f:	lea    rbx,[rsp+0x50]
   140064434:	test   rbx,rbx
   140064437:	je     0x1400644e1
   14006443d:	mov    DWORD PTR [rbx],0xcccc
   140064443:	jmp    0x140064461
   140064445:	cmp    rdx,rax
   140064448:	sbb    rcx,rcx
   14006444b:	and    rcx,rax
   14006444e:	call   0x140060a0c
   140064453:	mov    rbx,rax
   140064456:	test   rax,rax
   140064459:	je     0x140064469
   14006445b:	mov    DWORD PTR [rax],0xdddd
   140064461:	add    rbx,0x10
   140064465:	jmp    0x140064469
   140064467:	xor    ebx,ebx
   140064469:	test   rbx,rbx
   14006446c:	je     0x1400644e1
   14006446e:	and    QWORD PTR [rsp+0x40],0x0
   140064474:	mov    r9d,r12d
   140064477:	and    QWORD PTR [rsp+0x38],0x0
   14006447d:	mov    r8,rsi
   140064480:	and    QWORD PTR [rsp+0x30],0x0
   140064486:	mov    edx,r13d
   140064489:	mov    DWORD PTR [rsp+0x28],edi
   14006448d:	mov    rcx,r15
   140064490:	mov    QWORD PTR [rsp+0x20],rbx
   140064495:	call   0x140062d5c
   14006449a:	test   eax,eax
   14006449c:	je     0x1400644d0
   14006449e:	and    QWORD PTR [rsp+0x38],0x0
   1400644a4:	xor    edx,edx
   1400644a6:	and    QWORD PTR [rsp+0x30],rdx
   1400644ab:	mov    r9d,edi
   1400644ae:	mov    eax,DWORD PTR [rbp+0x70]
   1400644b1:	mov    r8,rbx
   1400644b4:	mov    ecx,r14d
   1400644b7:	test   eax,eax
   1400644b9:	jne    0x140064521
   1400644bb:	and    DWORD PTR [rsp+0x28],edx
   1400644bf:	and    QWORD PTR [rsp+0x20],rdx
   1400644c4:	call   QWORD PTR [rip+0x7dde]        # 0x14006c2a8
   1400644ca:	mov    edi,eax
   1400644cc:	test   eax,eax
   1400644ce:	jne    0x140064530
   1400644d0:	lea    rcx,[rbx-0x10]
   1400644d4:	cmp    DWORD PTR [rcx],0xdddd
   1400644da:	jne    0x1400644e1
   1400644dc:	call   0x1400609cc
   1400644e1:	xor    edi,edi
   1400644e3:	test   rsi,rsi
   1400644e6:	je     0x1400644f9
   1400644e8:	lea    rcx,[rsi-0x10]
   1400644ec:	cmp    DWORD PTR [rcx],0xdddd
   1400644f2:	jne    0x1400644f9
   1400644f4:	call   0x1400609cc
   1400644f9:	mov    eax,edi
   1400644fb:	mov    rcx,QWORD PTR [rbp+0x8]
   1400644ff:	xor    rcx,rbp
   140064502:	call   0x140055f90
   140064507:	mov    rbx,QWORD PTR [rbp+0x40]
   14006450b:	mov    rsi,QWORD PTR [rbp+0x48]
   14006450f:	mov    rdi,QWORD PTR [rbp+0x50]
   140064513:	lea    rsp,[rbp+0x10]
   140064517:	pop    r15
   140064519:	pop    r14
   14006451b:	pop    r13
   14006451d:	pop    r12
   14006451f:	pop    rbp
   140064520:	ret    
   140064521:	mov    DWORD PTR [rsp+0x28],eax
   140064525:	mov    rax,QWORD PTR [rbp+0x68]
   140064529:	mov    QWORD PTR [rsp+0x20],rax
   14006452e:	jmp    0x1400644c4
   140064530:	lea    rcx,[rbx-0x10]
   140064534:	cmp    DWORD PTR [rcx],0xdddd
   14006453a:	jne    0x1400644e3
   14006453c:	call   0x1400609cc
   140064541:	jmp    0x1400644e3
   140064543:	int3   
   140064544:	mov    QWORD PTR [rsp+0x8],rbx
   140064549:	mov    QWORD PTR [rsp+0x10],rsi
   14006454e:	push   rdi
   14006454f:	sub    rsp,0x70
   140064553:	mov    rsi,rdx
   140064556:	mov    rbx,r9
   140064559:	mov    rdx,rcx
   14006455c:	mov    edi,r8d
   14006455f:	lea    rcx,[rsp+0x50]
   140064564:	call   0x14005b174
   140064569:	mov    eax,DWORD PTR [rsp+0xc0]
   140064570:	lea    rcx,[rsp+0x58]
   140064575:	mov    DWORD PTR [rsp+0x40],eax
   140064579:	mov    r9,rbx
   14006457c:	mov    eax,DWORD PTR [rsp+0xb8]
   140064583:	mov    r8d,edi
   140064586:	mov    DWORD PTR [rsp+0x38],eax
   14006458a:	mov    rdx,rsi
   14006458d:	mov    eax,DWORD PTR [rsp+0xb0]
   140064594:	mov    DWORD PTR [rsp+0x30],eax
   140064598:	mov    rax,QWORD PTR [rsp+0xa8]
   1400645a0:	mov    QWORD PTR [rsp+0x28],rax
   1400645a5:	mov    eax,DWORD PTR [rsp+0xa0]
   1400645ac:	mov    DWORD PTR [rsp+0x20],eax
   1400645b0:	call   0x1400641e8
   1400645b5:	cmp    BYTE PTR [rsp+0x68],0x0
   1400645ba:	je     0x1400645c8
   1400645bc:	mov    rcx,QWORD PTR [rsp+0x50]
   1400645c1:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   1400645c8:	lea    r11,[rsp+0x70]
   1400645cd:	mov    rbx,QWORD PTR [r11+0x10]
   1400645d1:	mov    rsi,QWORD PTR [r11+0x18]
   1400645d5:	mov    rsp,r11
   1400645d8:	pop    rdi
   1400645d9:	ret    
   1400645da:	int3   
   1400645db:	int3   
   1400645dc:	cmp    rcx,rdx
   1400645df:	jae    0x1400645e5
   1400645e1:	or     eax,0xffffffff
   1400645e4:	ret    
   1400645e5:	xor    eax,eax
   1400645e7:	cmp    rcx,rdx
   1400645ea:	seta   al
   1400645ed:	ret    
   1400645ee:	int3   
   1400645ef:	int3   
   1400645f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400645f5:	mov    QWORD PTR [rsp+0x10],rdx
   1400645fa:	push   rbp
   1400645fb:	push   rsi
   1400645fc:	push   rdi
   1400645fd:	push   r12
   1400645ff:	push   r13
   140064601:	push   r14
   140064603:	push   r15
   140064605:	mov    rbp,rsp
   140064608:	sub    rsp,0x60
   14006460c:	xor    edi,edi
   14006460e:	mov    rbx,rcx
   140064611:	test   rdx,rdx
   140064614:	jne    0x14006462c
   140064616:	call   0x140060e94
   14006461b:	lea    ebx,[rdi+0x16]
   14006461e:	mov    DWORD PTR [rax],ebx
   140064620:	call   0x140060d74
   140064625:	mov    eax,ebx
   140064627:	jmp    0x1400647cc
   14006462c:	xorps  xmm0,xmm0
   14006462f:	mov    QWORD PTR [rdx],rdi
   140064632:	cmp    QWORD PTR [rcx],rdi
   140064635:	movdqu XMMWORD PTR [rbp-0x20],xmm0
   14006463a:	mov    QWORD PTR [rbp-0x10],rdi
   14006463e:	je     0x140064697
   140064640:	mov    rcx,QWORD PTR [rbx]
   140064643:	lea    rdx,[rbp+0x50]
   140064647:	mov    WORD PTR [rbp+0x50],0x3f2a
   14006464d:	mov    BYTE PTR [rbp+0x52],dil
   140064651:	call   0x14005f5b4
   140064656:	mov    rcx,QWORD PTR [rbx]
   140064659:	test   rax,rax
   14006465c:	jne    0x14006466e
   14006465e:	lea    r9,[rbp-0x20]
   140064662:	xor    r8d,r8d
   140064665:	xor    edx,edx
   140064667:	call   0x1400647fc
   14006466c:	jmp    0x14006467a
   14006466e:	lea    r8,[rbp-0x20]
   140064672:	mov    rdx,rax
   140064675:	call   0x14006490c
   14006467a:	mov    r14d,eax
   14006467d:	test   eax,eax
   14006467f:	jne    0x14006468a
   140064681:	add    rbx,0x8
   140064685:	cmp    QWORD PTR [rbx],rdi
   140064688:	jmp    0x14006463e
   14006468a:	mov    r12,QWORD PTR [rbp-0x18]
   14006468e:	mov    rsi,QWORD PTR [rbp-0x20]
   140064692:	jmp    0x140064790
   140064697:	mov    rsi,QWORD PTR [rbp-0x20]
   14006469b:	mov    r9,rdi
   14006469e:	mov    r12,QWORD PTR [rbp-0x18]
   1400646a2:	mov    rdx,rsi
   1400646a5:	mov    rax,r12
   1400646a8:	mov    QWORD PTR [rbp+0x50],rdi
   1400646ac:	sub    rax,rsi
   1400646af:	mov    r8,rdi
   1400646b2:	mov    r15,rax
   1400646b5:	sar    r15,0x3
   1400646b9:	inc    r15
   1400646bc:	lea    rcx,[rax+0x7]
   1400646c0:	shr    rcx,0x3
   1400646c4:	cmp    rsi,r12
   1400646c7:	cmova  rcx,rdi
   1400646cb:	or     r14,0xffffffffffffffff
   1400646cf:	test   rcx,rcx
   1400646d2:	je     0x1400646f9
   1400646d4:	mov    r10,QWORD PTR [rdx]
   1400646d7:	mov    rax,r14
   1400646da:	inc    rax
   1400646dd:	cmp    BYTE PTR [r10+rax*1],dil
   1400646e1:	jne    0x1400646da
   1400646e3:	inc    r9
   1400646e6:	add    rdx,0x8
   1400646ea:	add    r9,rax
   1400646ed:	inc    r8
   1400646f0:	cmp    r8,rcx
   1400646f3:	jne    0x1400646d4
   1400646f5:	mov    QWORD PTR [rbp+0x50],r9
   1400646f9:	mov    r8d,0x1
   1400646ff:	mov    rdx,r9
   140064702:	mov    rcx,r15
   140064705:	call   0x14005fa44
   14006470a:	mov    rbx,rax
   14006470d:	test   rax,rax
   140064710:	je     0x140064789
   140064712:	lea    rdx,[rax+r15*8]
   140064716:	mov    r15,rsi
   140064719:	mov    QWORD PTR [rbp-0x28],rdx
   14006471d:	mov    rax,rdx
   140064720:	mov    QWORD PTR [rbp+0x58],rdx
   140064724:	cmp    rsi,r12
   140064727:	je     0x14006477f
   140064729:	mov    rcx,rbx
   14006472c:	sub    rcx,rsi
   14006472f:	mov    QWORD PTR [rbp-0x30],rcx
   140064733:	mov    r8,QWORD PTR [r15]
   140064736:	mov    r13,r14
   140064739:	inc    r13
   14006473c:	cmp    BYTE PTR [r8+r13*1],dil
   140064740:	jne    0x140064739
   140064742:	sub    rdx,rax
   140064745:	inc    r13
   140064748:	add    rdx,QWORD PTR [rbp+0x50]
   14006474c:	mov    r9,r13
   14006474f:	mov    rcx,rax
   140064752:	call   0x140068b7c
   140064757:	test   eax,eax
   140064759:	jne    0x1400647e4
   14006475f:	mov    rax,QWORD PTR [rbp+0x58]
   140064763:	mov    rcx,QWORD PTR [rbp-0x30]
   140064767:	mov    rdx,QWORD PTR [rbp-0x28]
   14006476b:	mov    QWORD PTR [rcx+r15*1],rax
   14006476f:	add    rax,r13
   140064772:	add    r15,0x8
   140064776:	mov    QWORD PTR [rbp+0x58],rax
   14006477a:	cmp    r15,r12
   14006477d:	jne    0x140064733
   14006477f:	mov    rax,QWORD PTR [rbp+0x48]
   140064783:	mov    r14d,edi
   140064786:	mov    QWORD PTR [rax],rbx
   140064789:	xor    ecx,ecx
   14006478b:	call   0x1400609cc
   140064790:	mov    rbx,r12
   140064793:	mov    r15,rsi
   140064796:	sub    rbx,rsi
   140064799:	add    rbx,0x7
   14006479d:	shr    rbx,0x3
   1400647a1:	cmp    rsi,r12
   1400647a4:	cmova  rbx,rdi
   1400647a8:	test   rbx,rbx
   1400647ab:	je     0x1400647c1
   1400647ad:	mov    rcx,QWORD PTR [r15]
   1400647b0:	call   0x1400609cc
   1400647b5:	inc    rdi
   1400647b8:	lea    r15,[r15+0x8]
   1400647bc:	cmp    rdi,rbx
   1400647bf:	jne    0x1400647ad
   1400647c1:	mov    rcx,rsi
   1400647c4:	call   0x1400609cc
   1400647c9:	mov    eax,r14d
   1400647cc:	mov    rbx,QWORD PTR [rsp+0xa0]
   1400647d4:	add    rsp,0x60
   1400647d8:	pop    r15
   1400647da:	pop    r14
   1400647dc:	pop    r13
   1400647de:	pop    r12
   1400647e0:	pop    rdi
   1400647e1:	pop    rsi
   1400647e2:	pop    rbp
   1400647e3:	ret    
   1400647e4:	xor    r9d,r9d
   1400647e7:	mov    QWORD PTR [rsp+0x20],rdi
   1400647ec:	xor    r8d,r8d
   1400647ef:	xor    edx,edx
   1400647f1:	xor    ecx,ecx
   1400647f3:	call   0x140060d94
   1400647f8:	int3   
   1400647f9:	int3   
   1400647fa:	int3   
   1400647fb:	int3   
   1400647fc:	mov    rax,rsp
   1400647ff:	mov    QWORD PTR [rax+0x8],rbx
   140064803:	mov    QWORD PTR [rax+0x10],rbp
   140064807:	mov    QWORD PTR [rax+0x18],rsi
   14006480b:	mov    QWORD PTR [rax+0x20],rdi
   14006480f:	push   r12
   140064811:	push   r14
   140064813:	push   r15
   140064815:	sub    rsp,0x30
   140064819:	or     rax,0xffffffffffffffff
   14006481d:	mov    rsi,r9
   140064820:	mov    rdi,rax
   140064823:	mov    rbp,r8
   140064826:	mov    r12,rdx
   140064829:	mov    r15,rcx
   14006482c:	inc    rdi
   14006482f:	cmp    BYTE PTR [rcx+rdi*1],0x0
   140064833:	jne    0x14006482c
   140064835:	mov    edx,0x1
   14006483a:	sub    rax,r8
   14006483d:	add    rdi,rdx
   140064840:	cmp    rdi,rax
   140064843:	jbe    0x140064867
   140064845:	lea    eax,[rdx+0xb]
   140064848:	mov    rbx,QWORD PTR [rsp+0x50]
   14006484d:	mov    rbp,QWORD PTR [rsp+0x58]
   140064852:	mov    rsi,QWORD PTR [rsp+0x60]
   140064857:	mov    rdi,QWORD PTR [rsp+0x68]
   14006485c:	add    rsp,0x30
   140064860:	pop    r15
   140064862:	pop    r14
   140064864:	pop    r12
   140064866:	ret    
   140064867:	lea    r14,[r8+0x1]
   14006486b:	add    r14,rdi
   14006486e:	mov    rcx,r14
   140064871:	call   0x140060a6c
   140064876:	mov    rbx,rax
   140064879:	test   rbp,rbp
   14006487c:	je     0x140064893
   14006487e:	mov    r9,rbp
   140064881:	mov    r8,r12
   140064884:	mov    rdx,r14
   140064887:	mov    rcx,rax
   14006488a:	call   0x140068b7c
   14006488f:	test   eax,eax
   140064891:	jne    0x1400648e0
   140064893:	sub    r14,rbp
   140064896:	lea    rcx,[rbx+rbp*1]
   14006489a:	mov    rdx,r14
   14006489d:	mov    r9,rdi
   1400648a0:	mov    r8,r15
   1400648a3:	call   0x140068b7c
   1400648a8:	test   eax,eax
   1400648aa:	jne    0x1400648f6
   1400648ac:	mov    rcx,rsi
   1400648af:	call   0x140064ab8
   1400648b4:	mov    edi,eax
   1400648b6:	test   eax,eax
   1400648b8:	je     0x1400648c4
   1400648ba:	mov    rcx,rbx
   1400648bd:	call   0x1400609cc
   1400648c2:	jmp    0x1400648d2
   1400648c4:	mov    rax,QWORD PTR [rsi+0x8]
   1400648c8:	mov    QWORD PTR [rax],rbx
   1400648cb:	add    QWORD PTR [rsi+0x8],0x8
   1400648d0:	xor    edi,edi
   1400648d2:	xor    ecx,ecx
   1400648d4:	call   0x1400609cc
   1400648d9:	mov    eax,edi
   1400648db:	jmp    0x140064848
   1400648e0:	and    QWORD PTR [rsp+0x20],0x0
   1400648e6:	xor    r9d,r9d
   1400648e9:	xor    r8d,r8d
   1400648ec:	xor    edx,edx
   1400648ee:	xor    ecx,ecx
   1400648f0:	call   0x140060d94
   1400648f5:	int3   
   1400648f6:	and    QWORD PTR [rsp+0x20],0x0
   1400648fc:	xor    r9d,r9d
   1400648ff:	xor    r8d,r8d
   140064902:	xor    edx,edx
   140064904:	xor    ecx,ecx
   140064906:	call   0x140060d94
   14006490b:	int3   
   14006490c:	mov    QWORD PTR [rsp+0x20],rbx
   140064911:	push   rbp
   140064912:	push   rsi
   140064913:	push   rdi
   140064914:	push   r14
   140064916:	push   r15
   140064918:	sub    rsp,0x180
   14006491f:	mov    rax,QWORD PTR [rip+0x1d5ba]        # 0x140081ee0
   140064926:	xor    rax,rsp
   140064929:	mov    QWORD PTR [rsp+0x170],rax
   140064931:	mov    r14,r8
   140064934:	mov    rsi,rcx
   140064937:	movabs rbx,0x200000000801
   140064941:	cmp    rdx,rcx
   140064944:	je     0x140064968
   140064946:	mov    al,BYTE PTR [rdx]
   140064948:	sub    al,0x2f
   14006494a:	cmp    al,0x2d
   14006494c:	ja     0x140064958
   14006494e:	movsx  rax,al
   140064952:	bt     rbx,rax
   140064956:	jb     0x140064968
   140064958:	mov    rcx,rsi
   14006495b:	call   0x140068c50
   140064960:	mov    rdx,rax
   140064963:	cmp    rax,rsi
   140064966:	jne    0x140064946
   140064968:	mov    cl,BYTE PTR [rdx]
   14006496a:	cmp    cl,0x3a
   14006496d:	jne    0x14006498d
   14006496f:	lea    rax,[rsi+0x1]
   140064973:	cmp    rdx,rax
   140064976:	je     0x14006498d
   140064978:	mov    r9,r14
   14006497b:	xor    r8d,r8d
   14006497e:	xor    edx,edx
   140064980:	mov    rcx,rsi
   140064983:	call   0x1400647fc
   140064988:	jmp    0x140064a0e
   14006498d:	sub    cl,0x2f
   140064990:	xor    edi,edi
   140064992:	cmp    cl,0x2d
   140064995:	ja     0x1400649a4
   140064997:	movsx  rax,cl
   14006499b:	bt     rbx,rax
   14006499f:	lea    eax,[rdi+0x1]
   1400649a2:	jb     0x1400649a6
   1400649a4:	mov    eax,edi
   1400649a6:	sub    rdx,rsi
   1400649a9:	lea    rcx,[rsp+0x30]
   1400649ae:	inc    rdx
   1400649b1:	mov    r8d,0x140
   1400649b7:	neg    al
   1400649b9:	sbb    r15,r15
   1400649bc:	and    r15,rdx
   1400649bf:	xor    edx,edx
   1400649c1:	call   0x140058f40
   1400649c6:	xor    r9d,r9d
   1400649c9:	mov    DWORD PTR [rsp+0x28],edi
   1400649cd:	lea    r8,[rsp+0x30]
   1400649d2:	mov    QWORD PTR [rsp+0x20],rdi
   1400649d7:	xor    edx,edx
   1400649d9:	mov    rcx,rsi
   1400649dc:	call   QWORD PTR [rip+0x798e]        # 0x14006c370
   1400649e2:	mov    rbx,rax
   1400649e5:	cmp    rax,0xffffffffffffffff
   1400649e9:	jne    0x140064a35
   1400649eb:	mov    r9,r14
   1400649ee:	xor    r8d,r8d
   1400649f1:	xor    edx,edx
   1400649f3:	mov    rcx,rsi
   1400649f6:	call   0x1400647fc
   1400649fb:	mov    edi,eax
   1400649fd:	cmp    rbx,0xffffffffffffffff
   140064a01:	je     0x140064a0c
   140064a03:	mov    rcx,rbx
   140064a06:	call   QWORD PTR [rip+0x768c]        # 0x14006c098
   140064a0c:	mov    eax,edi
   140064a0e:	mov    rcx,QWORD PTR [rsp+0x170]
   140064a16:	xor    rcx,rsp
   140064a19:	call   0x140055f90
   140064a1e:	mov    rbx,QWORD PTR [rsp+0x1c8]
   140064a26:	add    rsp,0x180
   140064a2d:	pop    r15
   140064a2f:	pop    r14
   140064a31:	pop    rdi
   140064a32:	pop    rsi
   140064a33:	pop    rbp
   140064a34:	ret    
   140064a35:	mov    rbp,QWORD PTR [r14+0x8]
   140064a39:	sub    rbp,QWORD PTR [r14]
   140064a3c:	sar    rbp,0x3
   140064a40:	cmp    BYTE PTR [rsp+0x5c],0x2e
   140064a45:	jne    0x140064a5a
   140064a47:	mov    al,BYTE PTR [rsp+0x5d]
   140064a4b:	test   al,al
   140064a4d:	je     0x140064a71
   140064a4f:	cmp    al,0x2e
   140064a51:	jne    0x140064a5a
   140064a53:	cmp    BYTE PTR [rsp+0x5e],dil
   140064a58:	je     0x140064a71
   140064a5a:	mov    r9,r14
   140064a5d:	lea    rcx,[rsp+0x5c]
   140064a62:	mov    r8,r15
   140064a65:	mov    rdx,rsi
   140064a68:	call   0x1400647fc
   140064a6d:	test   eax,eax
   140064a6f:	jne    0x1400649fb
   140064a71:	lea    rdx,[rsp+0x30]
   140064a76:	mov    rcx,rbx
   140064a79:	call   QWORD PTR [rip+0x7881]        # 0x14006c300
   140064a7f:	test   eax,eax
   140064a81:	jne    0x140064a40
   140064a83:	mov    rax,QWORD PTR [r14]
   140064a86:	mov    rdx,QWORD PTR [r14+0x8]
   140064a8a:	sub    rdx,rax
   140064a8d:	sar    rdx,0x3
   140064a91:	cmp    rbp,rdx
   140064a94:	je     0x1400649fd
   140064a9a:	sub    rdx,rbp
   140064a9d:	lea    rcx,[rax+rbp*8]
   140064aa1:	lea    r9,[rip+0xfffffffffffffb34]        # 0x1400645dc
   140064aa8:	mov    r8d,0x8
   140064aae:	call   0x14005aa20
   140064ab3:	jmp    0x1400649fd
   140064ab8:	mov    QWORD PTR [rsp+0x8],rbx
   140064abd:	mov    QWORD PTR [rsp+0x10],rbp
   140064ac2:	mov    QWORD PTR [rsp+0x18],rsi
   140064ac7:	push   rdi
   140064ac8:	sub    rsp,0x20
   140064acc:	mov    rsi,QWORD PTR [rcx+0x10]
   140064ad0:	mov    rdi,rcx
   140064ad3:	cmp    QWORD PTR [rcx+0x8],rsi
   140064ad7:	je     0x140064ae0
   140064ad9:	xor    eax,eax
   140064adb:	jmp    0x140064b6a
   140064ae0:	xor    ebx,ebx
   140064ae2:	cmp    QWORD PTR [rcx],rbx
   140064ae5:	jne    0x140064b19
   140064ae7:	lea    edx,[rbx+0x8]
   140064aea:	lea    ecx,[rbx+0x4]
   140064aed:	call   0x140060a6c
   140064af2:	xor    ecx,ecx
   140064af4:	mov    QWORD PTR [rdi],rax
   140064af7:	call   0x1400609cc
   140064afc:	mov    rax,QWORD PTR [rdi]
   140064aff:	test   rax,rax
   140064b02:	jne    0x140064b0b
   140064b04:	mov    eax,0xc
   140064b09:	jmp    0x140064b6a
   140064b0b:	mov    QWORD PTR [rdi+0x8],rax
   140064b0f:	add    rax,0x20
   140064b13:	mov    QWORD PTR [rdi+0x10],rax
   140064b17:	jmp    0x140064ad9
   140064b19:	sub    rsi,QWORD PTR [rcx]
   140064b1c:	movabs rax,0x7fffffffffffffff
   140064b26:	sar    rsi,0x3
   140064b2a:	cmp    rsi,rax
   140064b2d:	ja     0x140064b04
   140064b2f:	mov    rcx,QWORD PTR [rcx]
   140064b32:	lea    rbp,[rsi+rsi*1]
   140064b36:	mov    rdx,rbp
   140064b39:	mov    r8d,0x8
   140064b3f:	call   0x140065b88
   140064b44:	test   rax,rax
   140064b47:	jne    0x140064b4e
   140064b49:	lea    ebx,[rax+0xc]
   140064b4c:	jmp    0x140064b61
   140064b4e:	lea    rcx,[rax+rsi*8]
   140064b52:	mov    QWORD PTR [rdi],rax
   140064b55:	mov    QWORD PTR [rdi+0x8],rcx
   140064b59:	lea    rcx,[rax+rbp*8]
   140064b5d:	mov    QWORD PTR [rdi+0x10],rcx
   140064b61:	xor    ecx,ecx
   140064b63:	call   0x1400609cc
   140064b68:	mov    eax,ebx
   140064b6a:	mov    rbx,QWORD PTR [rsp+0x30]
   140064b6f:	mov    rbp,QWORD PTR [rsp+0x38]
   140064b74:	mov    rsi,QWORD PTR [rsp+0x40]
   140064b79:	add    rsp,0x20
   140064b7d:	pop    rdi
   140064b7e:	ret    
   140064b7f:	int3   
   140064b80:	jmp    0x1400645f0
   140064b85:	int3   
   140064b86:	int3   
   140064b87:	int3   
   140064b88:	mov    QWORD PTR [rsp+0x8],rbx
   140064b8d:	mov    QWORD PTR [rsp+0x20],r9
   140064b92:	push   rdi
   140064b93:	sub    rsp,0x20
   140064b97:	mov    rbx,r9
   140064b9a:	mov    rdi,r8
   140064b9d:	mov    ecx,DWORD PTR [rdx]
   140064b9f:	call   0x140062874
   140064ba4:	nop
   140064ba5:	mov    rcx,rdi
   140064ba8:	call   0x140064bc0
   140064bad:	nop
   140064bae:	mov    ecx,DWORD PTR [rbx]
   140064bb0:	call   0x1400628c8
   140064bb5:	mov    rbx,QWORD PTR [rsp+0x30]
   140064bba:	add    rsp,0x20
   140064bbe:	pop    rdi
   140064bbf:	ret    
   140064bc0:	mov    QWORD PTR [rsp+0x8],rbx
   140064bc5:	mov    QWORD PTR [rsp+0x10],rsi
   140064bca:	push   rdi
   140064bcb:	sub    rsp,0x20
   140064bcf:	mov    rax,QWORD PTR [rcx]
   140064bd2:	mov    rbx,rcx
   140064bd5:	mov    rdx,QWORD PTR [rax]
   140064bd8:	mov    rax,QWORD PTR [rdx+0x88]
   140064bdf:	mov    edx,DWORD PTR [rax+0x4]
   140064be2:	mov    DWORD PTR [rip+0x3b350],edx        # 0x14009ff38
   140064be8:	mov    rax,QWORD PTR [rcx]
   140064beb:	mov    rdx,QWORD PTR [rax]
   140064bee:	mov    rax,QWORD PTR [rdx+0x88]
   140064bf5:	mov    edx,DWORD PTR [rax+0x8]
   140064bf8:	mov    DWORD PTR [rip+0x3b33e],edx        # 0x14009ff3c
   140064bfe:	mov    rax,QWORD PTR [rcx]
   140064c01:	mov    rdx,QWORD PTR [rax]
   140064c04:	mov    rax,QWORD PTR [rdx+0x88]
   140064c0b:	mov    rcx,QWORD PTR [rax+0x220]
   140064c12:	mov    QWORD PTR [rip+0x3b337],rcx        # 0x14009ff50
   140064c19:	mov    rax,QWORD PTR [rbx]
   140064c1c:	mov    rcx,QWORD PTR [rax]
   140064c1f:	mov    rax,QWORD PTR [rcx+0x88]
   140064c26:	add    rax,0xc
   140064c2a:	je     0x140064c43
   140064c2c:	movsd  xmm0,QWORD PTR [rax]
   140064c30:	movsd  QWORD PTR [rip+0x3b308],xmm0        # 0x14009ff40
   140064c38:	mov    eax,DWORD PTR [rax+0x8]
   140064c3b:	mov    DWORD PTR [rip+0x3b307],eax        # 0x14009ff48
   140064c41:	jmp    0x140064c62
   140064c43:	xor    eax,eax
   140064c45:	mov    QWORD PTR [rip+0x3b2f4],rax        # 0x14009ff40
   140064c4c:	mov    DWORD PTR [rip+0x3b2f6],eax        # 0x14009ff48
   140064c52:	call   0x140060e94
   140064c57:	mov    DWORD PTR [rax],0x16
   140064c5d:	call   0x140060d74
   140064c62:	mov    rax,QWORD PTR [rbx]
   140064c65:	mov    edi,0x2
   140064c6a:	mov    rcx,QWORD PTR [rax]
   140064c6d:	lea    esi,[rdi+0x7e]
   140064c70:	mov    rax,QWORD PTR [rcx+0x88]
   140064c77:	lea    rcx,[rip+0x1d8c2]        # 0x140082540
   140064c7e:	add    rax,0x18
   140064c82:	je     0x140064cd6
   140064c84:	mov    edx,edi
   140064c86:	movups xmm0,XMMWORD PTR [rax]
   140064c89:	movups XMMWORD PTR [rcx],xmm0
   140064c8c:	movups xmm1,XMMWORD PTR [rax+0x10]
   140064c90:	movups XMMWORD PTR [rcx+0x10],xmm1
   140064c94:	movups xmm0,XMMWORD PTR [rax+0x20]
   140064c98:	movups XMMWORD PTR [rcx+0x20],xmm0
   140064c9c:	movups xmm1,XMMWORD PTR [rax+0x30]
   140064ca0:	movups XMMWORD PTR [rcx+0x30],xmm1
   140064ca4:	movups xmm0,XMMWORD PTR [rax+0x40]
   140064ca8:	movups XMMWORD PTR [rcx+0x40],xmm0
   140064cac:	movups xmm1,XMMWORD PTR [rax+0x50]
   140064cb0:	movups XMMWORD PTR [rcx+0x50],xmm1
   140064cb4:	movups xmm0,XMMWORD PTR [rax+0x60]
   140064cb8:	movups XMMWORD PTR [rcx+0x60],xmm0
   140064cbc:	add    rcx,rsi
   140064cbf:	movups xmm1,XMMWORD PTR [rax+0x70]
   140064cc3:	add    rax,rsi
   140064cc6:	movups XMMWORD PTR [rcx-0x10],xmm1
   140064cca:	sub    rdx,0x1
   140064cce:	jne    0x140064c86
   140064cd0:	mov    al,BYTE PTR [rax]
   140064cd2:	mov    BYTE PTR [rcx],al
   140064cd4:	jmp    0x140064cf3
   140064cd6:	xor    edx,edx
   140064cd8:	mov    r8d,0x101
   140064cde:	call   0x140058f40
   140064ce3:	call   0x140060e94
   140064ce8:	mov    DWORD PTR [rax],0x16
   140064cee:	call   0x140060d74
   140064cf3:	mov    rax,QWORD PTR [rbx]
   140064cf6:	mov    rcx,QWORD PTR [rax]
   140064cf9:	mov    rax,QWORD PTR [rcx+0x88]
   140064d00:	lea    rcx,[rip+0x1d949]        # 0x140082650
   140064d07:	add    rax,0x119
   140064d0d:	je     0x140064d5b
   140064d0f:	movups xmm0,XMMWORD PTR [rax]
   140064d12:	movups XMMWORD PTR [rcx],xmm0
   140064d15:	movups xmm1,XMMWORD PTR [rax+0x10]
   140064d19:	movups XMMWORD PTR [rcx+0x10],xmm1
   140064d1d:	movups xmm0,XMMWORD PTR [rax+0x20]
   140064d21:	movups XMMWORD PTR [rcx+0x20],xmm0
   140064d25:	movups xmm1,XMMWORD PTR [rax+0x30]
   140064d29:	movups XMMWORD PTR [rcx+0x30],xmm1
   140064d2d:	movups xmm0,XMMWORD PTR [rax+0x40]
   140064d31:	movups XMMWORD PTR [rcx+0x40],xmm0
   140064d35:	movups xmm1,XMMWORD PTR [rax+0x50]
   140064d39:	movups XMMWORD PTR [rcx+0x50],xmm1
   140064d3d:	movups xmm0,XMMWORD PTR [rax+0x60]
   140064d41:	movups XMMWORD PTR [rcx+0x60],xmm0
   140064d45:	add    rcx,rsi
   140064d48:	movups xmm1,XMMWORD PTR [rax+0x70]
   140064d4c:	add    rax,rsi
   140064d4f:	movups XMMWORD PTR [rcx-0x10],xmm1
   140064d53:	sub    rdi,0x1
   140064d57:	jne    0x140064d0f
   140064d59:	jmp    0x140064d78
   140064d5b:	xor    edx,edx
   140064d5d:	mov    r8d,0x100
   140064d63:	call   0x140058f40
   140064d68:	call   0x140060e94
   140064d6d:	mov    DWORD PTR [rax],0x16
   140064d73:	call   0x140060d74
   140064d78:	mov    rcx,QWORD PTR [rip+0x1d6b9]        # 0x140082438
   140064d7f:	or     eax,0xffffffff
   140064d82:	lock xadd DWORD PTR [rcx],eax
   140064d86:	cmp    eax,0x1
   140064d89:	jne    0x140064da3
   140064d8b:	mov    rcx,QWORD PTR [rip+0x1d6a6]        # 0x140082438
   140064d92:	lea    rax,[rip+0x1d477]        # 0x140082210
   140064d99:	cmp    rcx,rax
   140064d9c:	je     0x140064da3
   140064d9e:	call   0x1400609cc
   140064da3:	mov    rax,QWORD PTR [rbx]
   140064da6:	mov    rcx,QWORD PTR [rax]
   140064da9:	mov    rax,QWORD PTR [rcx+0x88]
   140064db0:	mov    QWORD PTR [rip+0x1d681],rax        # 0x140082438
   140064db7:	mov    rax,QWORD PTR [rbx]
   140064dba:	mov    rcx,QWORD PTR [rax]
   140064dbd:	mov    rax,QWORD PTR [rcx+0x88]
   140064dc4:	lock inc DWORD PTR [rax]
   140064dc7:	mov    rbx,QWORD PTR [rsp+0x30]
   140064dcc:	mov    rsi,QWORD PTR [rsp+0x38]
   140064dd1:	add    rsp,0x20
   140064dd5:	pop    rdi
   140064dd6:	ret    
   140064dd7:	int3   
   140064dd8:	rex push rbx
   140064dda:	sub    rsp,0x40
   140064dde:	mov    ebx,ecx
   140064de0:	xor    edx,edx
   140064de2:	lea    rcx,[rsp+0x20]
   140064de7:	call   0x14005b174
   140064dec:	and    DWORD PTR [rip+0x3b159],0x0        # 0x14009ff4c
   140064df3:	cmp    ebx,0xfffffffe
   140064df6:	jne    0x140064e0a
   140064df8:	mov    DWORD PTR [rip+0x3b14a],0x1        # 0x14009ff4c
   140064e02:	call   QWORD PTR [rip+0x74e8]        # 0x14006c2f0
   140064e08:	jmp    0x140064e1f
   140064e0a:	cmp    ebx,0xfffffffd
   140064e0d:	jne    0x140064e23
   140064e0f:	mov    DWORD PTR [rip+0x3b133],0x1        # 0x14009ff4c
   140064e19:	call   QWORD PTR [rip+0x7649]        # 0x14006c468
   140064e1f:	mov    ebx,eax
   140064e21:	jmp    0x140064e3a
   140064e23:	cmp    ebx,0xfffffffc
   140064e26:	jne    0x140064e3a
   140064e28:	mov    rax,QWORD PTR [rsp+0x28]
   140064e2d:	mov    DWORD PTR [rip+0x3b115],0x1        # 0x14009ff4c
   140064e37:	mov    ebx,DWORD PTR [rax+0xc]
   140064e3a:	cmp    BYTE PTR [rsp+0x38],0x0
   140064e3f:	je     0x140064e4d
   140064e41:	mov    rcx,QWORD PTR [rsp+0x20]
   140064e46:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   140064e4d:	mov    eax,ebx
   140064e4f:	add    rsp,0x40
   140064e53:	pop    rbx
   140064e54:	ret    
   140064e55:	int3   
   140064e56:	int3   
   140064e57:	int3   
   140064e58:	mov    QWORD PTR [rsp+0x8],rbx
   140064e5d:	mov    QWORD PTR [rsp+0x10],rbp
   140064e62:	mov    QWORD PTR [rsp+0x18],rsi
   140064e67:	push   rdi
   140064e68:	sub    rsp,0x20
   140064e6c:	lea    rbx,[rcx+0x18]
   140064e70:	mov    rsi,rcx
   140064e73:	mov    ebp,0x101
   140064e78:	mov    rcx,rbx
   140064e7b:	mov    r8d,ebp
   140064e7e:	xor    edx,edx
   140064e80:	call   0x140058f40
   140064e85:	xor    eax,eax
   140064e87:	lea    rdi,[rsi+0xc]
   140064e8b:	mov    QWORD PTR [rsi+0x4],rax
   140064e8f:	mov    ecx,0x6
   140064e94:	mov    QWORD PTR [rsi+0x220],rax
   140064e9b:	movzx  eax,ax
   140064e9e:	rep stos WORD PTR es:[rdi],ax
   140064ea1:	lea    rdi,[rip+0x1d368]        # 0x140082210
   140064ea8:	sub    rdi,rsi
   140064eab:	mov    al,BYTE PTR [rdi+rbx*1]
   140064eae:	mov    BYTE PTR [rbx],al
   140064eb0:	inc    rbx
   140064eb3:	sub    rbp,0x1
   140064eb7:	jne    0x140064eab
   140064eb9:	lea    rcx,[rsi+0x119]
   140064ec0:	mov    edx,0x100
   140064ec5:	mov    al,BYTE PTR [rcx+rdi*1]
   140064ec8:	mov    BYTE PTR [rcx],al
   140064eca:	inc    rcx
   140064ecd:	sub    rdx,0x1
   140064ed1:	jne    0x140064ec5
   140064ed3:	mov    rbx,QWORD PTR [rsp+0x30]
   140064ed8:	mov    rbp,QWORD PTR [rsp+0x38]
   140064edd:	mov    rsi,QWORD PTR [rsp+0x40]
   140064ee2:	add    rsp,0x20
   140064ee6:	pop    rdi
   140064ee7:	ret    
   140064ee8:	mov    QWORD PTR [rsp+0x10],rbx
   140064eed:	mov    QWORD PTR [rsp+0x18],rdi
   140064ef2:	push   rbp
   140064ef3:	lea    rbp,[rsp-0x680]
   140064efb:	sub    rsp,0x780
   140064f02:	mov    rax,QWORD PTR [rip+0x1cfd7]        # 0x140081ee0
   140064f09:	xor    rax,rsp
   140064f0c:	mov    QWORD PTR [rbp+0x670],rax
   140064f13:	mov    rdi,rcx
   140064f16:	lea    rdx,[rsp+0x50]
   140064f1b:	mov    ecx,DWORD PTR [rcx+0x4]
   140064f1e:	call   QWORD PTR [rip+0x736c]        # 0x14006c290
   140064f24:	mov    ebx,0x100
   140064f29:	test   eax,eax
   140064f2b:	je     0x140065067
   140064f31:	xor    eax,eax
   140064f33:	lea    rcx,[rsp+0x70]
   140064f38:	mov    BYTE PTR [rcx],al
   140064f3a:	inc    eax
   140064f3c:	inc    rcx
   140064f3f:	cmp    eax,ebx
   140064f41:	jb     0x140064f38
   140064f43:	mov    al,BYTE PTR [rsp+0x56]
   140064f47:	lea    rdx,[rsp+0x56]
   140064f4c:	mov    BYTE PTR [rsp+0x70],0x20
   140064f51:	jmp    0x140064f75
   140064f53:	movzx  r8d,BYTE PTR [rdx+0x1]
   140064f58:	movzx  ecx,al
   140064f5b:	jmp    0x140064f6a
   140064f5d:	cmp    ecx,ebx
   140064f5f:	jae    0x140064f6f
   140064f61:	mov    eax,ecx
   140064f63:	mov    BYTE PTR [rsp+rcx*1+0x70],0x20
   140064f68:	inc    ecx
   140064f6a:	cmp    ecx,r8d
   140064f6d:	jbe    0x140064f5d
   140064f6f:	add    rdx,0x2
   140064f73:	mov    al,BYTE PTR [rdx]
   140064f75:	test   al,al
   140064f77:	jne    0x140064f53
   140064f79:	mov    eax,DWORD PTR [rdi+0x4]
   140064f7c:	lea    r8,[rsp+0x70]
   140064f81:	and    DWORD PTR [rsp+0x30],0x0
   140064f86:	mov    r9d,ebx
   140064f89:	mov    DWORD PTR [rsp+0x28],eax
   140064f8d:	mov    edx,0x1
   140064f92:	lea    rax,[rbp+0x270]
   140064f99:	xor    ecx,ecx
   140064f9b:	mov    QWORD PTR [rsp+0x20],rax
   140064fa0:	call   0x140066340
   140064fa5:	and    DWORD PTR [rsp+0x40],0x0
   140064faa:	lea    r9,[rsp+0x70]
   140064faf:	mov    eax,DWORD PTR [rdi+0x4]
   140064fb2:	mov    r8d,ebx
   140064fb5:	mov    rdx,QWORD PTR [rdi+0x220]
   140064fbc:	xor    ecx,ecx
   140064fbe:	mov    DWORD PTR [rsp+0x38],eax
   140064fc2:	lea    rax,[rbp+0x70]
   140064fc6:	mov    DWORD PTR [rsp+0x30],ebx
   140064fca:	mov    QWORD PTR [rsp+0x28],rax
   140064fcf:	mov    DWORD PTR [rsp+0x20],ebx
   140064fd3:	call   0x140064544
   140064fd8:	and    DWORD PTR [rsp+0x40],0x0
   140064fdd:	lea    r9,[rsp+0x70]
   140064fe2:	mov    eax,DWORD PTR [rdi+0x4]
   140064fe5:	mov    r8d,0x200
   140064feb:	mov    rdx,QWORD PTR [rdi+0x220]
   140064ff2:	xor    ecx,ecx
   140064ff4:	mov    DWORD PTR [rsp+0x38],eax
   140064ff8:	lea    rax,[rbp+0x170]
   140064fff:	mov    DWORD PTR [rsp+0x30],ebx
   140065003:	mov    QWORD PTR [rsp+0x28],rax
   140065008:	mov    DWORD PTR [rsp+0x20],ebx
   14006500c:	call   0x140064544
   140065011:	lea    r8,[rbp+0x70]
   140065015:	sub    r8,rdi
   140065018:	lea    r9,[rbp+0x170]
   14006501f:	sub    r9,rdi
   140065022:	lea    rdx,[rbp+0x270]
   140065029:	lea    rcx,[rdi+0x19]
   14006502d:	test   BYTE PTR [rdx],0x1
   140065030:	je     0x14006503c
   140065032:	or     BYTE PTR [rcx],0x10
   140065035:	mov    al,BYTE PTR [r8+rcx*1-0x19]
   14006503a:	jmp    0x140065049
   14006503c:	test   BYTE PTR [rdx],0x2
   14006503f:	je     0x140065051
   140065041:	or     BYTE PTR [rcx],0x20
   140065044:	mov    al,BYTE PTR [r9+rcx*1-0x19]
   140065049:	mov    BYTE PTR [rcx+0x100],al
   14006504f:	jmp    0x140065058
   140065051:	mov    BYTE PTR [rcx+0x100],0x0
   140065058:	inc    rcx
   14006505b:	add    rdx,0x2
   14006505f:	sub    rbx,0x1
   140065063:	jne    0x14006502d
   140065065:	jmp    0x1400650a6
   140065067:	xor    edx,edx
   140065069:	lea    rcx,[rdi+0x19]
   14006506d:	lea    r8d,[rdx-0x61]
   140065071:	lea    eax,[r8+0x20]
   140065075:	cmp    eax,0x19
   140065078:	ja     0x140065082
   14006507a:	or     BYTE PTR [rcx],0x10
   14006507d:	lea    eax,[rdx+0x20]
   140065080:	jmp    0x14006508e
   140065082:	cmp    r8d,0x19
   140065086:	ja     0x140065096
   140065088:	or     BYTE PTR [rcx],0x20
   14006508b:	lea    eax,[rdx-0x20]
   14006508e:	mov    BYTE PTR [rcx+0x100],al
   140065094:	jmp    0x14006509d
   140065096:	mov    BYTE PTR [rcx+0x100],0x0
   14006509d:	inc    edx
   14006509f:	inc    rcx
   1400650a2:	cmp    edx,ebx
   1400650a4:	jb     0x14006506d
   1400650a6:	mov    rcx,QWORD PTR [rbp+0x670]
   1400650ad:	xor    rcx,rsp
   1400650b0:	call   0x140055f90
   1400650b5:	lea    r11,[rsp+0x780]
   1400650bd:	mov    rbx,QWORD PTR [r11+0x18]
   1400650c1:	mov    rdi,QWORD PTR [r11+0x20]
   1400650c5:	mov    rsp,r11
   1400650c8:	pop    rbp
   1400650c9:	ret    
   1400650ca:	int3   
   1400650cb:	int3   
   1400650cc:	mov    QWORD PTR [rsp+0x8],rbx
   1400650d1:	push   rbp
   1400650d2:	push   rsi
   1400650d3:	push   rdi
   1400650d4:	mov    rbp,rsp
   1400650d7:	sub    rsp,0x40
   1400650db:	mov    sil,dl
   1400650de:	mov    ebx,ecx
   1400650e0:	call   0x140061588
   1400650e5:	mov    QWORD PTR [rbp-0x18],rax
   1400650e9:	call   0x1400652ac
   1400650ee:	mov    ecx,ebx
   1400650f0:	call   0x140064dd8
   1400650f5:	mov    rcx,QWORD PTR [rbp-0x18]
   1400650f9:	mov    edi,eax
   1400650fb:	mov    r8,QWORD PTR [rcx+0x88]
   140065102:	cmp    eax,DWORD PTR [r8+0x4]
   140065106:	jne    0x14006510f
   140065108:	xor    eax,eax
   14006510a:	jmp    0x1400651c7
   14006510f:	mov    ecx,0x228
   140065114:	call   0x140060a0c
   140065119:	mov    rbx,rax
   14006511c:	test   rax,rax
   14006511f:	je     0x1400651ba
   140065125:	mov    rax,QWORD PTR [rbp-0x18]
   140065129:	mov    edx,0x4
   14006512e:	mov    rcx,rbx
   140065131:	mov    rax,QWORD PTR [rax+0x88]
   140065138:	lea    r8d,[rdx+0x7c]
   14006513c:	movups xmm0,XMMWORD PTR [rax]
   14006513f:	movups XMMWORD PTR [rcx],xmm0
   140065142:	movups xmm1,XMMWORD PTR [rax+0x10]
   140065146:	movups XMMWORD PTR [rcx+0x10],xmm1
   14006514a:	movups xmm0,XMMWORD PTR [rax+0x20]
   14006514e:	movups XMMWORD PTR [rcx+0x20],xmm0
   140065152:	movups xmm1,XMMWORD PTR [rax+0x30]
   140065156:	movups XMMWORD PTR [rcx+0x30],xmm1
   14006515a:	movups xmm0,XMMWORD PTR [rax+0x40]
   14006515e:	movups XMMWORD PTR [rcx+0x40],xmm0
   140065162:	movups xmm1,XMMWORD PTR [rax+0x50]
   140065166:	movups XMMWORD PTR [rcx+0x50],xmm1
   14006516a:	movups xmm0,XMMWORD PTR [rax+0x60]
   14006516e:	movups XMMWORD PTR [rcx+0x60],xmm0
   140065172:	add    rcx,r8
   140065175:	movups xmm1,XMMWORD PTR [rax+0x70]
   140065179:	add    rax,r8
   14006517c:	movups XMMWORD PTR [rcx-0x10],xmm1
   140065180:	sub    rdx,0x1
   140065184:	jne    0x14006513c
   140065186:	movups xmm0,XMMWORD PTR [rax]
   140065189:	movups XMMWORD PTR [rcx],xmm0
   14006518c:	movups xmm1,XMMWORD PTR [rax+0x10]
   140065190:	movups XMMWORD PTR [rcx+0x10],xmm1
   140065194:	mov    rax,QWORD PTR [rax+0x20]
   140065198:	mov    QWORD PTR [rcx+0x20],rax
   14006519c:	mov    ecx,edi
   14006519e:	and    DWORD PTR [rbx],edx
   1400651a0:	mov    rdx,rbx
   1400651a3:	call   0x14006536c
   1400651a8:	mov    edi,eax
   1400651aa:	cmp    eax,0xffffffff
   1400651ad:	jne    0x1400651d4
   1400651af:	call   0x140060e94
   1400651b4:	mov    DWORD PTR [rax],0x16
   1400651ba:	or     edi,0xffffffff
   1400651bd:	mov    rcx,rbx
   1400651c0:	call   0x1400609cc
   1400651c5:	mov    eax,edi
   1400651c7:	mov    rbx,QWORD PTR [rsp+0x60]
   1400651cc:	add    rsp,0x40
   1400651d0:	pop    rdi
   1400651d1:	pop    rsi
   1400651d2:	pop    rbp
   1400651d3:	ret    
   1400651d4:	test   sil,sil
   1400651d7:	jne    0x1400651de
   1400651d9:	call   0x14006071c
   1400651de:	mov    rax,QWORD PTR [rbp-0x18]
   1400651e2:	mov    rcx,QWORD PTR [rax+0x88]
   1400651e9:	or     eax,0xffffffff
   1400651ec:	lock xadd DWORD PTR [rcx],eax
   1400651f0:	cmp    eax,0x1
   1400651f3:	jne    0x140065211
   1400651f5:	mov    rax,QWORD PTR [rbp-0x18]
   1400651f9:	mov    rcx,QWORD PTR [rax+0x88]
   140065200:	lea    rax,[rip+0x1d009]        # 0x140082210
   140065207:	cmp    rcx,rax
   14006520a:	je     0x140065211
   14006520c:	call   0x1400609cc
   140065211:	mov    DWORD PTR [rbx],0x1
   140065217:	mov    rcx,rbx
   14006521a:	mov    rax,QWORD PTR [rbp-0x18]
   14006521e:	xor    ebx,ebx
   140065220:	mov    QWORD PTR [rax+0x88],rcx
   140065227:	mov    rax,QWORD PTR [rbp-0x18]
   14006522b:	test   BYTE PTR [rax+0x3a8],0x2
   140065232:	jne    0x1400651bd
   140065234:	test   BYTE PTR [rip+0x1d5b5],0x1        # 0x1400827f0
   14006523b:	jne    0x1400651bd
   14006523d:	lea    rax,[rbp-0x18]
   140065241:	mov    QWORD PTR [rbp-0x10],rax
   140065245:	lea    r9,[rbp+0x38]
   140065249:	lea    eax,[rbx+0x5]
   14006524c:	lea    r8,[rbp-0x10]
   140065250:	mov    DWORD PTR [rbp+0x38],eax
   140065253:	lea    rdx,[rbp-0x20]
   140065257:	mov    DWORD PTR [rbp-0x20],eax
   14006525a:	lea    rcx,[rbp+0x30]
   14006525e:	call   0x140064b88
   140065263:	mov    rax,QWORD PTR [rip+0x1cf86]        # 0x1400821f0
   14006526a:	test   sil,sil
   14006526d:	cmovne rax,QWORD PTR [rip+0x1d1c3]        # 0x140082438
   140065275:	mov    QWORD PTR [rip+0x1cf74],rax        # 0x1400821f0
   14006527c:	jmp    0x1400651bd
   140065281:	int3   
   140065282:	int3   
   140065283:	int3   
   140065284:	sub    rsp,0x28
   140065288:	cmp    BYTE PTR [rip+0x3acc9],0x0        # 0x14009ff58
   14006528f:	jne    0x1400652a4
   140065291:	mov    dl,0x1
   140065293:	mov    ecx,0xfffffffd
   140065298:	call   0x1400650cc
   14006529d:	mov    BYTE PTR [rip+0x3acb4],0x1        # 0x14009ff58
   1400652a4:	mov    al,0x1
   1400652a6:	add    rsp,0x28
   1400652aa:	ret    
   1400652ab:	int3   
   1400652ac:	mov    QWORD PTR [rsp+0x10],rbx
   1400652b1:	push   rdi
   1400652b2:	sub    rsp,0x20
   1400652b6:	call   0x140061588
   1400652bb:	mov    rdi,rax
   1400652be:	mov    ecx,DWORD PTR [rip+0x1d52c]        # 0x1400827f0
   1400652c4:	test   DWORD PTR [rax+0x3a8],ecx
   1400652ca:	je     0x1400652df
   1400652cc:	cmp    QWORD PTR [rax+0x90],0x0
   1400652d4:	je     0x1400652df
   1400652d6:	mov    rbx,QWORD PTR [rax+0x88]
   1400652dd:	jmp    0x140065352
   1400652df:	mov    ecx,0x5
   1400652e4:	call   0x140062874
   1400652e9:	nop
   1400652ea:	mov    rbx,QWORD PTR [rdi+0x88]
   1400652f1:	mov    QWORD PTR [rsp+0x30],rbx
   1400652f6:	cmp    rbx,QWORD PTR [rip+0x1d13b]        # 0x140082438
   1400652fd:	je     0x140065348
   1400652ff:	test   rbx,rbx
   140065302:	je     0x140065326
   140065304:	or     eax,0xffffffff
   140065307:	lock xadd DWORD PTR [rbx],eax
   14006530b:	cmp    eax,0x1
   14006530e:	jne    0x140065326
   140065310:	lea    rax,[rip+0x1cef9]        # 0x140082210
   140065317:	mov    rcx,QWORD PTR [rsp+0x30]
   14006531c:	cmp    rcx,rax
   14006531f:	je     0x140065326
   140065321:	call   0x1400609cc
   140065326:	mov    rax,QWORD PTR [rip+0x1d10b]        # 0x140082438
   14006532d:	mov    QWORD PTR [rdi+0x88],rax
   140065334:	mov    rax,QWORD PTR [rip+0x1d0fd]        # 0x140082438
   14006533b:	mov    QWORD PTR [rsp+0x30],rax
   140065340:	lock inc DWORD PTR [rax]
   140065343:	mov    rbx,QWORD PTR [rsp+0x30]
   140065348:	mov    ecx,0x5
   14006534d:	call   0x1400628c8
   140065352:	test   rbx,rbx
   140065355:	jne    0x14006535d
   140065357:	call   0x140060974
   14006535c:	int3   
   14006535d:	mov    rax,rbx
   140065360:	mov    rbx,QWORD PTR [rsp+0x38]
   140065365:	add    rsp,0x20
   140065369:	pop    rdi
   14006536a:	ret    
   14006536b:	int3   
   14006536c:	mov    QWORD PTR [rsp+0x18],rbx
   140065371:	mov    QWORD PTR [rsp+0x20],rbp
   140065376:	push   rsi
   140065377:	push   rdi
   140065378:	push   r12
   14006537a:	push   r14
   14006537c:	push   r15
   14006537e:	sub    rsp,0x40
   140065382:	mov    rax,QWORD PTR [rip+0x1cb57]        # 0x140081ee0
   140065389:	xor    rax,rsp
   14006538c:	mov    QWORD PTR [rsp+0x38],rax
   140065391:	mov    rbx,rdx
   140065394:	call   0x140064dd8
   140065399:	xor    esi,esi
   14006539b:	mov    edi,eax
   14006539d:	test   eax,eax
   14006539f:	jne    0x1400653ae
   1400653a1:	mov    rcx,rbx
   1400653a4:	call   0x140064e58
   1400653a9:	jmp    0x1400655eb
   1400653ae:	lea    r12,[rip+0x1d09b]        # 0x140082450
   1400653b5:	mov    ebp,esi
   1400653b7:	mov    rax,r12
   1400653ba:	mov    r15d,0x1
   1400653c0:	cmp    DWORD PTR [rax],edi
   1400653c2:	je     0x1400654f8
   1400653c8:	add    ebp,r15d
   1400653cb:	add    rax,0x30
   1400653cf:	cmp    ebp,0x5
   1400653d2:	jb     0x1400653c0
   1400653d4:	lea    eax,[rdi-0xfde8]
   1400653da:	cmp    eax,r15d
   1400653dd:	jbe    0x1400654f0
   1400653e3:	movzx  ecx,di
   1400653e6:	call   QWORD PTR [rip+0x6f0c]        # 0x14006c2f8
   1400653ec:	test   eax,eax
   1400653ee:	je     0x1400654f0
   1400653f4:	lea    rdx,[rsp+0x20]
   1400653f9:	mov    ecx,edi
   1400653fb:	call   QWORD PTR [rip+0x6e8f]        # 0x14006c290
   140065401:	test   eax,eax
   140065403:	je     0x1400654e4
   140065409:	lea    rcx,[rbx+0x18]
   14006540d:	xor    edx,edx
   14006540f:	mov    r8d,0x101
   140065415:	call   0x140058f40
   14006541a:	mov    DWORD PTR [rbx+0x4],edi
   14006541d:	mov    QWORD PTR [rbx+0x220],rsi
   140065424:	cmp    DWORD PTR [rsp+0x20],r15d
   140065429:	jbe    0x1400654cd
   14006542f:	lea    rcx,[rsp+0x26]
   140065434:	cmp    BYTE PTR [rsp+0x26],sil
   140065439:	je     0x14006546b
   14006543b:	cmp    BYTE PTR [rcx+0x1],sil
   14006543f:	je     0x14006546b
   140065441:	movzx  eax,BYTE PTR [rcx+0x1]
   140065445:	movzx  edx,BYTE PTR [rcx]
   140065448:	cmp    edx,eax
   14006544a:	ja     0x140065462
   14006544c:	sub    eax,edx
   14006544e:	lea    edi,[rdx+0x1]
   140065451:	lea    edx,[r15+rax*1]
   140065455:	or     BYTE PTR [rdi+rbx*1+0x18],0x4
   14006545a:	add    edi,r15d
   14006545d:	sub    rdx,r15
   140065460:	jne    0x140065455
   140065462:	add    rcx,0x2
   140065466:	cmp    BYTE PTR [rcx],sil
   140065469:	jne    0x14006543b
   14006546b:	lea    rax,[rbx+0x1a]
   14006546f:	mov    ecx,0xfe
   140065474:	or     BYTE PTR [rax],0x8
   140065477:	add    rax,r15
   14006547a:	sub    rcx,r15
   14006547d:	jne    0x140065474
   14006547f:	mov    ecx,DWORD PTR [rbx+0x4]
   140065482:	sub    ecx,0x3a4
   140065488:	je     0x1400654b9
   14006548a:	sub    ecx,0x4
   14006548d:	je     0x1400654b0
   14006548f:	sub    ecx,0xd
   140065492:	je     0x1400654a7
   140065494:	cmp    ecx,r15d
   140065497:	je     0x14006549e
   140065499:	mov    rax,rsi
   14006549c:	jmp    0x1400654c0
   14006549e:	mov    rax,QWORD PTR [rip+0xe47b]        # 0x140073920
   1400654a5:	jmp    0x1400654c0
   1400654a7:	mov    rax,QWORD PTR [rip+0xe46a]        # 0x140073918
   1400654ae:	jmp    0x1400654c0
   1400654b0:	mov    rax,QWORD PTR [rip+0xe459]        # 0x140073910
   1400654b7:	jmp    0x1400654c0
   1400654b9:	mov    rax,QWORD PTR [rip+0xe448]        # 0x140073908
   1400654c0:	mov    QWORD PTR [rbx+0x220],rax
   1400654c7:	mov    DWORD PTR [rbx+0x8],r15d
   1400654cb:	jmp    0x1400654d0
   1400654cd:	mov    DWORD PTR [rbx+0x8],esi
   1400654d0:	lea    rdi,[rbx+0xc]
   1400654d4:	movzx  eax,si
   1400654d7:	mov    ecx,0x6
   1400654dc:	rep stos WORD PTR es:[rdi],ax
   1400654df:	jmp    0x1400655e3
   1400654e4:	cmp    DWORD PTR [rip+0x3aa62],esi        # 0x14009ff4c
   1400654ea:	jne    0x1400653a1
   1400654f0:	or     eax,0xffffffff
   1400654f3:	jmp    0x1400655ed
   1400654f8:	lea    rcx,[rbx+0x18]
   1400654fc:	xor    edx,edx
   1400654fe:	mov    r8d,0x101
   140065504:	call   0x140058f40
   140065509:	mov    eax,ebp
   14006550b:	lea    r9,[r12+0x10]
   140065510:	lea    r14,[rip+0x1cf29]        # 0x140082440
   140065517:	mov    ebp,0x4
   14006551c:	lea    r11,[rax+rax*2]
   140065520:	shl    r11,0x4
   140065524:	add    r9,r11
   140065527:	mov    rdx,r9
   14006552a:	cmp    BYTE PTR [r9],sil
   14006552d:	je     0x14006556f
   14006552f:	cmp    BYTE PTR [rdx+0x1],sil
   140065533:	je     0x14006556f
   140065535:	movzx  r8d,BYTE PTR [rdx]
   140065539:	movzx  eax,BYTE PTR [rdx+0x1]
   14006553d:	cmp    r8d,eax
   140065540:	ja     0x140065566
   140065542:	lea    r10d,[r8+0x1]
   140065546:	cmp    r10d,0x101
   14006554d:	jae    0x140065566
   14006554f:	mov    al,BYTE PTR [r14]
   140065552:	add    r8d,r15d
   140065555:	or     BYTE PTR [r10+rbx*1+0x18],al
   14006555a:	add    r10d,r15d
   14006555d:	movzx  eax,BYTE PTR [rdx+0x1]
   140065561:	cmp    r8d,eax
   140065564:	jbe    0x140065546
   140065566:	add    rdx,0x2
   14006556a:	cmp    BYTE PTR [rdx],sil
   14006556d:	jne    0x14006552f
   14006556f:	add    r9,0x8
   140065573:	add    r14,r15
   140065576:	sub    rbp,r15
   140065579:	jne    0x140065527
   14006557b:	mov    DWORD PTR [rbx+0x4],edi
   14006557e:	mov    DWORD PTR [rbx+0x8],r15d
   140065582:	sub    edi,0x3a4
   140065588:	je     0x1400655b4
   14006558a:	sub    edi,0x4
   14006558d:	je     0x1400655ab
   14006558f:	sub    edi,0xd
   140065592:	je     0x1400655a2
   140065594:	cmp    edi,r15d
   140065597:	jne    0x1400655bb
   140065599:	mov    rsi,QWORD PTR [rip+0xe380]        # 0x140073920
   1400655a0:	jmp    0x1400655bb
   1400655a2:	mov    rsi,QWORD PTR [rip+0xe36f]        # 0x140073918
   1400655a9:	jmp    0x1400655bb
   1400655ab:	mov    rsi,QWORD PTR [rip+0xe35e]        # 0x140073910
   1400655b2:	jmp    0x1400655bb
   1400655b4:	mov    rsi,QWORD PTR [rip+0xe34d]        # 0x140073908
   1400655bb:	sub    r11,rbx
   1400655be:	mov    QWORD PTR [rbx+0x220],rsi
   1400655c5:	lea    rcx,[rbx+0xc]
   1400655c9:	mov    edx,0x6
   1400655ce:	lea    rdi,[r11+r12*1]
   1400655d2:	movzx  eax,WORD PTR [rdi+rcx*1-0x8]
   1400655d7:	mov    WORD PTR [rcx],ax
   1400655da:	lea    rcx,[rcx+0x2]
   1400655de:	sub    rdx,r15
   1400655e1:	jne    0x1400655d2
   1400655e3:	mov    rcx,rbx
   1400655e6:	call   0x140064ee8
   1400655eb:	xor    eax,eax
   1400655ed:	mov    rcx,QWORD PTR [rsp+0x38]
   1400655f2:	xor    rcx,rsp
   1400655f5:	call   0x140055f90
   1400655fa:	lea    r11,[rsp+0x40]
   1400655ff:	mov    rbx,QWORD PTR [r11+0x40]
   140065603:	mov    rbp,QWORD PTR [r11+0x48]
   140065607:	mov    rsp,r11
   14006560a:	pop    r15
   14006560c:	pop    r14
   14006560e:	pop    r12
   140065610:	pop    rdi
   140065611:	pop    rsi
   140065612:	ret    
   140065613:	int3   
   140065614:	mov    QWORD PTR [rsp+0x8],rbx
   140065619:	mov    QWORD PTR [rsp+0x10],rsi
   14006561e:	push   rdi
   14006561f:	sub    rsp,0x40
   140065623:	mov    ebx,edx
   140065625:	mov    edi,r9d
   140065628:	mov    rdx,rcx
   14006562b:	mov    esi,r8d
   14006562e:	lea    rcx,[rsp+0x20]
   140065633:	call   0x14005b174
   140065638:	mov    rax,QWORD PTR [rsp+0x30]
   14006563d:	movzx  edx,bl
   140065640:	test   BYTE PTR [rdx+rax*1+0x19],dil
   140065645:	jne    0x140065661
   140065647:	test   esi,esi
   140065649:	je     0x14006565b
   14006564b:	mov    rax,QWORD PTR [rsp+0x28]
   140065650:	mov    rcx,QWORD PTR [rax]
   140065653:	movzx  eax,WORD PTR [rcx+rdx*2]
   140065657:	and    eax,esi
   140065659:	jmp    0x14006565d
   14006565b:	xor    eax,eax
   14006565d:	test   eax,eax
   14006565f:	je     0x140065666
   140065661:	mov    eax,0x1
   140065666:	cmp    BYTE PTR [rsp+0x38],0x0
   14006566b:	je     0x140065679
   14006566d:	mov    rcx,QWORD PTR [rsp+0x20]
   140065672:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   140065679:	mov    rbx,QWORD PTR [rsp+0x50]
   14006567e:	mov    rsi,QWORD PTR [rsp+0x58]
   140065683:	add    rsp,0x40
   140065687:	pop    rdi
   140065688:	ret    
   140065689:	int3   
   14006568a:	int3   
   14006568b:	int3   
   14006568c:	mov    edx,ecx
   14006568e:	mov    r9d,0x4
   140065694:	xor    ecx,ecx
   140065696:	xor    r8d,r8d
   140065699:	jmp    0x140065614
   14006569e:	int3   
   14006569f:	int3   
   1400656a0:	mov    rax,rsp
   1400656a3:	mov    QWORD PTR [rax+0x8],rbx
   1400656a7:	mov    QWORD PTR [rax+0x10],rbp
   1400656ab:	mov    QWORD PTR [rax+0x18],rsi
   1400656af:	mov    QWORD PTR [rax+0x20],rdi
   1400656b3:	push   r14
   1400656b5:	sub    rsp,0x40
   1400656b9:	call   QWORD PTR [rip+0x6c29]        # 0x14006c2e8
   1400656bf:	xor    r14d,r14d
   1400656c2:	mov    rbx,rax
   1400656c5:	test   rax,rax
   1400656c8:	je     0x140065774
   1400656ce:	mov    rsi,rax
   1400656d1:	cmp    WORD PTR [rax],r14w
   1400656d5:	je     0x1400656f3
   1400656d7:	or     rax,0xffffffffffffffff
   1400656db:	inc    rax
   1400656de:	cmp    WORD PTR [rsi+rax*2],r14w
   1400656e3:	jne    0x1400656db
   1400656e5:	lea    rsi,[rsi+rax*2]
   1400656e9:	add    rsi,0x2
   1400656ed:	cmp    WORD PTR [rsi],r14w
   1400656f1:	jne    0x1400656d7
   1400656f3:	mov    QWORD PTR [rsp+0x38],r14
   1400656f8:	sub    rsi,rbx
   1400656fb:	mov    QWORD PTR [rsp+0x30],r14
   140065700:	add    rsi,0x2
   140065704:	sar    rsi,1
   140065707:	mov    r8,rbx
   14006570a:	mov    r9d,esi
   14006570d:	mov    DWORD PTR [rsp+0x28],r14d
   140065712:	xor    edx,edx
   140065714:	mov    QWORD PTR [rsp+0x20],r14
   140065719:	xor    ecx,ecx
   14006571b:	call   QWORD PTR [rip+0x6b87]        # 0x14006c2a8
   140065721:	movsxd rbp,eax
   140065724:	test   eax,eax
   140065726:	je     0x140065774
   140065728:	mov    rcx,rbp
   14006572b:	call   0x140060a0c
   140065730:	mov    rdi,rax
   140065733:	test   rax,rax
   140065736:	je     0x140065767
   140065738:	mov    QWORD PTR [rsp+0x38],r14
   14006573d:	mov    r9d,esi
   140065740:	mov    QWORD PTR [rsp+0x30],r14
   140065745:	mov    r8,rbx
   140065748:	mov    DWORD PTR [rsp+0x28],ebp
   14006574c:	xor    edx,edx
   14006574e:	xor    ecx,ecx
   140065750:	mov    QWORD PTR [rsp+0x20],rax
   140065755:	call   QWORD PTR [rip+0x6b4d]        # 0x14006c2a8
   14006575b:	test   eax,eax
   14006575d:	je     0x140065767
   14006575f:	mov    rsi,rdi
   140065762:	mov    rdi,r14
   140065765:	jmp    0x14006576a
   140065767:	mov    rsi,r14
   14006576a:	mov    rcx,rdi
   14006576d:	call   0x1400609cc
   140065772:	jmp    0x140065777
   140065774:	mov    rsi,r14
   140065777:	test   rbx,rbx
   14006577a:	je     0x140065785
   14006577c:	mov    rcx,rbx
   14006577f:	call   QWORD PTR [rip+0x6b5b]        # 0x14006c2e0
   140065785:	mov    rbx,QWORD PTR [rsp+0x50]
   14006578a:	mov    rax,rsi
   14006578d:	mov    rsi,QWORD PTR [rsp+0x60]
   140065792:	mov    rbp,QWORD PTR [rsp+0x58]
   140065797:	mov    rdi,QWORD PTR [rsp+0x68]
   14006579c:	add    rsp,0x40
   1400657a0:	pop    r14
   1400657a2:	ret    
   1400657a3:	int3   
   1400657a4:	mov    QWORD PTR [rsp+0x18],rbx
   1400657a9:	mov    DWORD PTR [rsp+0x10],edx
   1400657ad:	push   rbp
   1400657ae:	push   rsi
   1400657af:	push   rdi
   1400657b0:	push   r12
   1400657b2:	push   r13
   1400657b4:	push   r14
   1400657b6:	push   r15
   1400657b8:	sub    rsp,0x30
   1400657bc:	xor    esi,esi
   1400657be:	mov    ebx,edx
   1400657c0:	mov    r15,rcx
   1400657c3:	test   rcx,rcx
   1400657c6:	jne    0x1400657dc
   1400657c8:	call   0x140060e94
   1400657cd:	mov    DWORD PTR [rax],0x16
   1400657d3:	or     rax,0xffffffffffffffff
   1400657d7:	jmp    0x140065870
   1400657dc:	mov    edx,0x3d
   1400657e1:	mov    rdi,rcx
   1400657e4:	call   0x1400595b8
   1400657e9:	mov    r13,rax
   1400657ec:	test   rax,rax
   1400657ef:	je     0x14006584f
   1400657f1:	cmp    rax,r15
   1400657f4:	je     0x14006584f
   1400657f6:	cmp    BYTE PTR [rax+0x1],sil
   1400657fa:	mov    r14,QWORD PTR [rip+0x39ea7]        # 0x14009f6a8
   140065801:	sete   bpl
   140065805:	cmp    r14,QWORD PTR [rip+0x39eb4]        # 0x14009f6c0
   14006580c:	mov    BYTE PTR [rsp+0x70],bpl
   140065811:	jne    0x140065825
   140065813:	mov    rcx,r14
   140065816:	call   0x140065a94
   14006581b:	mov    r14,rax
   14006581e:	mov    QWORD PTR [rip+0x39e83],rax        # 0x14009f6a8
   140065825:	mov    r12d,0x1
   14006582b:	test   r14,r14
   14006582e:	jne    0x1400658f3
   140065834:	test   ebx,ebx
   140065836:	je     0x140065888
   140065838:	cmp    QWORD PTR [rip+0x39e71],rsi        # 0x14009f6b0
   14006583f:	je     0x140065888
   140065841:	call   0x14005ff20
   140065846:	test   rax,rax
   140065849:	jne    0x1400658e7
   14006584f:	call   0x140060e94
   140065854:	or     rsi,0xffffffffffffffff
   140065858:	mov    DWORD PTR [rax],0x16
   14006585e:	mov    ebp,esi
   140065860:	mov    esi,ebp
   140065862:	mov    ebp,esi
   140065864:	mov    esi,ebp
   140065866:	mov    rcx,rdi
   140065869:	call   0x1400609cc
   14006586e:	mov    eax,esi
   140065870:	mov    rbx,QWORD PTR [rsp+0x80]
   140065878:	add    rsp,0x30
   14006587c:	pop    r15
   14006587e:	pop    r14
   140065880:	pop    r13
   140065882:	pop    r12
   140065884:	pop    rdi
   140065885:	pop    rsi
   140065886:	pop    rbp
   140065887:	ret    
   140065888:	test   bpl,bpl
   14006588b:	jne    0x14006585e
   14006588d:	mov    edx,0x8
   140065892:	mov    rcx,r12
   140065895:	call   0x140060a6c
   14006589a:	xor    ecx,ecx
   14006589c:	mov    QWORD PTR [rip+0x39e05],rax        # 0x14009f6a8
   1400658a3:	call   0x1400609cc
   1400658a8:	mov    r14,QWORD PTR [rip+0x39df9]        # 0x14009f6a8
   1400658af:	test   r14,r14
   1400658b2:	jne    0x1400658ba
   1400658b4:	or     rbp,0xffffffffffffffff
   1400658b8:	jmp    0x140065860
   1400658ba:	cmp    QWORD PTR [rip+0x39def],rsi        # 0x14009f6b0
   1400658c1:	jne    0x1400658ee
   1400658c3:	mov    edx,0x8
   1400658c8:	mov    rcx,r12
   1400658cb:	call   0x140060a6c
   1400658d0:	xor    ecx,ecx
   1400658d2:	mov    QWORD PTR [rip+0x39dd7],rax        # 0x14009f6b0
   1400658d9:	call   0x1400609cc
   1400658de:	cmp    QWORD PTR [rip+0x39dcb],rsi        # 0x14009f6b0
   1400658e5:	je     0x1400658b4
   1400658e7:	mov    r14,QWORD PTR [rip+0x39dba]        # 0x14009f6a8
   1400658ee:	test   r14,r14
   1400658f1:	je     0x1400658b4
   1400658f3:	mov    r12,r13
   1400658f6:	mov    rbx,r14
   1400658f9:	sub    r12,r15
   1400658fc:	cmp    QWORD PTR [r14],rsi
   1400658ff:	je     0x140065935
   140065901:	mov    rdx,QWORD PTR [rbx]
   140065904:	mov    r8,r12
   140065907:	mov    rcx,r15
   14006590a:	call   0x140063020
   14006590f:	test   eax,eax
   140065911:	jne    0x140065923
   140065913:	mov    rax,QWORD PTR [rbx]
   140065916:	cmp    BYTE PTR [r12+rax*1],0x3d
   14006591b:	je     0x14006592c
   14006591d:	cmp    BYTE PTR [r12+rax*1],sil
   140065921:	je     0x14006592c
   140065923:	add    rbx,0x8
   140065927:	cmp    QWORD PTR [rbx],rsi
   14006592a:	jmp    0x1400658ff
   14006592c:	sub    rbx,r14
   14006592f:	sar    rbx,0x3
   140065933:	jmp    0x14006593f
   140065935:	sub    rbx,r14
   140065938:	sar    rbx,0x3
   14006593c:	neg    rbx
   14006593f:	test   rbx,rbx
   140065942:	js     0x14006599b
   140065944:	cmp    QWORD PTR [r14],rsi
   140065947:	je     0x14006599b
   140065949:	mov    rcx,QWORD PTR [r14+rbx*8]
   14006594d:	call   0x1400609cc
   140065952:	test   bpl,bpl
   140065955:	jne    0x14006596c
   140065957:	mov    QWORD PTR [r14+rbx*8],r15
   14006595b:	jmp    0x1400659f5
   140065960:	mov    rax,QWORD PTR [r14+rbx*8+0x8]
   140065965:	mov    QWORD PTR [r14+rbx*8],rax
   140065969:	inc    rbx
   14006596c:	cmp    QWORD PTR [r14+rbx*8],rsi
   140065970:	jne    0x140065960
   140065972:	mov    r8d,0x8
   140065978:	mov    rdx,rbx
   14006597b:	mov    rcx,r14
   14006597e:	call   0x140065b88
   140065983:	xor    ecx,ecx
   140065985:	mov    rbx,rax
   140065988:	call   0x1400609cc
   14006598d:	test   rbx,rbx
   140065990:	je     0x1400659f8
   140065992:	mov    QWORD PTR [rip+0x39d0f],rbx        # 0x14009f6a8
   140065999:	jmp    0x1400659f8
   14006599b:	test   bpl,bpl
   14006599e:	jne    0x140065862
   1400659a4:	neg    rbx
   1400659a7:	lea    rdx,[rbx+0x2]
   1400659ab:	cmp    rdx,rbx
   1400659ae:	jae    0x1400659b9
   1400659b0:	or     rbp,0xffffffffffffffff
   1400659b4:	jmp    0x140065864
   1400659b9:	movabs rax,0x1fffffffffffffff
   1400659c3:	cmp    rdx,rax
   1400659c6:	jae    0x1400659b0
   1400659c8:	mov    r8d,0x8
   1400659ce:	mov    rcx,r14
   1400659d1:	call   0x140065b88
   1400659d6:	xor    ecx,ecx
   1400659d8:	mov    r14,rax
   1400659db:	call   0x1400609cc
   1400659e0:	test   r14,r14
   1400659e3:	je     0x1400659b0
   1400659e5:	mov    QWORD PTR [r14+rbx*8],r15
   1400659e9:	mov    QWORD PTR [r14+rbx*8+0x8],rsi
   1400659ee:	mov    QWORD PTR [rip+0x39cb3],r14        # 0x14009f6a8
   1400659f5:	mov    rdi,rsi
   1400659f8:	cmp    DWORD PTR [rsp+0x78],esi
   1400659fc:	je     0x140065866
   140065a02:	or     rbp,0xffffffffffffffff
   140065a06:	mov    r14,rbp
   140065a09:	inc    r14
   140065a0c:	cmp    BYTE PTR [r15+r14*1],sil
   140065a10:	jne    0x140065a09
   140065a12:	mov    edx,0x1
   140065a17:	lea    rcx,[r14+0x2]
   140065a1b:	call   0x140060a6c
   140065a20:	mov    rbx,rax
   140065a23:	test   rax,rax
   140065a26:	je     0x140065a6f
   140065a28:	mov    r8,r15
   140065a2b:	lea    rdx,[r14+0x2]
   140065a2f:	mov    rcx,rax
   140065a32:	call   0x140060914
   140065a37:	test   eax,eax
   140065a39:	jne    0x140065a7c
   140065a3b:	mov    rax,rbx
   140065a3e:	lea    rdx,[r13+0x1]
   140065a42:	sub    rax,r15
   140065a45:	mov    rcx,rbx
   140065a48:	add    rdx,rax
   140065a4b:	cmp    BYTE PTR [rsp+0x70],sil
   140065a50:	mov    BYTE PTR [rdx-0x1],sil
   140065a54:	cmovne rdx,rsi
   140065a58:	call   QWORD PTR [rip+0x687a]        # 0x14006c2d8
   140065a5e:	test   eax,eax
   140065a60:	jne    0x140065a6f
   140065a62:	call   0x140060e94
   140065a67:	mov    esi,ebp
   140065a69:	mov    DWORD PTR [rax],0x2a
   140065a6f:	mov    rcx,rbx
   140065a72:	call   0x1400609cc
   140065a77:	jmp    0x140065866
   140065a7c:	xor    r9d,r9d
   140065a7f:	mov    QWORD PTR [rsp+0x20],rsi
   140065a84:	xor    r8d,r8d
   140065a87:	xor    edx,edx
   140065a89:	xor    ecx,ecx
   140065a8b:	call   0x140060d94
   140065a90:	int3   
   140065a91:	int3   
   140065a92:	int3   
   140065a93:	int3   
   140065a94:	mov    QWORD PTR [rsp+0x8],rbx
   140065a99:	mov    QWORD PTR [rsp+0x10],rsi
   140065a9e:	mov    QWORD PTR [rsp+0x18],rdi
   140065aa3:	push   r14
   140065aa5:	sub    rsp,0x30
   140065aa9:	mov    rdi,rcx
   140065aac:	test   rcx,rcx
   140065aaf:	jne    0x140065ab8
   140065ab1:	xor    eax,eax
   140065ab3:	jmp    0x140065b46
   140065ab8:	xor    ecx,ecx
   140065aba:	mov    rax,rdi
   140065abd:	cmp    QWORD PTR [rdi],rcx
   140065ac0:	je     0x140065acf
   140065ac2:	inc    rcx
   140065ac5:	lea    rax,[rax+0x8]
   140065ac9:	cmp    QWORD PTR [rax],0x0
   140065acd:	jne    0x140065ac2
   140065acf:	inc    rcx
   140065ad2:	mov    edx,0x8
   140065ad7:	call   0x140060a6c
   140065adc:	mov    rbx,rax
   140065adf:	test   rax,rax
   140065ae2:	je     0x140065b5c
   140065ae4:	cmp    QWORD PTR [rdi],0x0
   140065ae8:	je     0x140065b3c
   140065aea:	mov    r14,rax
   140065aed:	sub    r14,rdi
   140065af0:	mov    rax,QWORD PTR [rdi]
   140065af3:	or     rsi,0xffffffffffffffff
   140065af7:	inc    rsi
   140065afa:	cmp    BYTE PTR [rax+rsi*1],0x0
   140065afe:	jne    0x140065af7
   140065b00:	mov    edx,0x1
   140065b05:	lea    rcx,[rsi+0x1]
   140065b09:	call   0x140060a6c
   140065b0e:	xor    ecx,ecx
   140065b10:	mov    QWORD PTR [r14+rdi*1],rax
   140065b14:	call   0x1400609cc
   140065b19:	mov    rcx,QWORD PTR [r14+rdi*1]
   140065b1d:	test   rcx,rcx
   140065b20:	je     0x140065b78
   140065b22:	mov    r8,QWORD PTR [rdi]
   140065b25:	lea    rdx,[rsi+0x1]
   140065b29:	call   0x140060914
   140065b2e:	test   eax,eax
   140065b30:	jne    0x140065b62
   140065b32:	add    rdi,0x8
   140065b36:	cmp    QWORD PTR [rdi],0x0
   140065b3a:	jne    0x140065af0
   140065b3c:	xor    ecx,ecx
   140065b3e:	call   0x1400609cc
   140065b43:	mov    rax,rbx
   140065b46:	mov    rbx,QWORD PTR [rsp+0x40]
   140065b4b:	mov    rsi,QWORD PTR [rsp+0x48]
   140065b50:	mov    rdi,QWORD PTR [rsp+0x50]
   140065b55:	add    rsp,0x30
   140065b59:	pop    r14
   140065b5b:	ret    
   140065b5c:	call   0x140060974
   140065b61:	int3   
   140065b62:	and    QWORD PTR [rsp+0x20],0x0
   140065b68:	xor    r9d,r9d
   140065b6b:	xor    r8d,r8d
   140065b6e:	xor    edx,edx
   140065b70:	xor    ecx,ecx
   140065b72:	call   0x140060d94
   140065b77:	int3   
   140065b78:	call   0x140060974
   140065b7d:	int3   
   140065b7e:	int3   
   140065b7f:	int3   
   140065b80:	jmp    0x1400657a4
   140065b85:	int3   
   140065b86:	int3   
   140065b87:	int3   
   140065b88:	jmp    0x140065b90
   140065b8d:	int3   
   140065b8e:	int3   
   140065b8f:	int3   
   140065b90:	mov    QWORD PTR [rsp+0x8],rbx
   140065b95:	mov    QWORD PTR [rsp+0x10],rbp
   140065b9a:	mov    QWORD PTR [rsp+0x18],rsi
   140065b9f:	push   rdi
   140065ba0:	sub    rsp,0x20
   140065ba4:	mov    rbp,r8
   140065ba7:	mov    rbx,rdx
   140065baa:	mov    rsi,rcx
   140065bad:	test   rdx,rdx
   140065bb0:	je     0x140065bcf
   140065bb2:	xor    edx,edx
   140065bb4:	lea    rax,[rdx-0x20]
   140065bb8:	div    rbx
   140065bbb:	cmp    rax,r8
   140065bbe:	jae    0x140065bcf
   140065bc0:	call   0x140060e94
   140065bc5:	mov    DWORD PTR [rax],0xc
   140065bcb:	xor    eax,eax
   140065bcd:	jmp    0x140065c10
   140065bcf:	test   rcx,rcx
   140065bd2:	je     0x140065bde
   140065bd4:	call   0x140068d08
   140065bd9:	mov    rdi,rax
   140065bdc:	jmp    0x140065be0
   140065bde:	xor    edi,edi
   140065be0:	imul   rbx,rbp
   140065be4:	mov    rcx,rsi
   140065be7:	mov    rdx,rbx
   140065bea:	call   0x140060ae4
   140065bef:	mov    rsi,rax
   140065bf2:	test   rax,rax
   140065bf5:	je     0x140065c0d
   140065bf7:	cmp    rdi,rbx
   140065bfa:	jae    0x140065c0d
   140065bfc:	sub    rbx,rdi
   140065bff:	lea    rcx,[rax+rdi*1]
   140065c03:	mov    r8,rbx
   140065c06:	xor    edx,edx
   140065c08:	call   0x140058f40
   140065c0d:	mov    rax,rsi
   140065c10:	mov    rbx,QWORD PTR [rsp+0x30]
   140065c15:	mov    rbp,QWORD PTR [rsp+0x38]
   140065c1a:	mov    rsi,QWORD PTR [rsp+0x40]
   140065c1f:	add    rsp,0x20
   140065c23:	pop    rdi
   140065c24:	ret    
   140065c25:	int3   
   140065c26:	int3   
   140065c27:	int3   
   140065c28:	sub    rsp,0x28
   140065c2c:	call   QWORD PTR [rip+0x669e]        # 0x14006c2d0
   140065c32:	test   rax,rax
   140065c35:	mov    QWORD PTR [rip+0x3a324],rax        # 0x14009ff60
   140065c3c:	setne  al
   140065c3f:	add    rsp,0x28
   140065c43:	ret    
   140065c44:	and    QWORD PTR [rip+0x3a314],0x0        # 0x14009ff60
   140065c4c:	mov    al,0x1
   140065c4e:	ret    
   140065c4f:	int3   
   140065c50:	mov    QWORD PTR [rsp+0x8],rbx
   140065c55:	mov    QWORD PTR [rsp+0x10],rbp
   140065c5a:	mov    QWORD PTR [rsp+0x18],rsi
   140065c5f:	push   rdi
   140065c60:	sub    rsp,0x20
   140065c64:	mov    rsi,rdx
   140065c67:	mov    rdi,rcx
   140065c6a:	cmp    rcx,rdx
   140065c6d:	jne    0x140065c73
   140065c6f:	mov    al,0x1
   140065c71:	jmp    0x140065ccf
   140065c73:	mov    rbx,rcx
   140065c76:	mov    rbp,QWORD PTR [rbx]
   140065c79:	test   rbp,rbp
   140065c7c:	je     0x140065c8d
   140065c7e:	mov    rcx,rbp
   140065c81:	call   QWORD PTR [rip+0x68a1]        # 0x14006c528
   140065c87:	call   rbp
   140065c89:	test   al,al
   140065c8b:	je     0x140065c96
   140065c8d:	add    rbx,0x10
   140065c91:	cmp    rbx,rsi
   140065c94:	jne    0x140065c76
   140065c96:	cmp    rbx,rsi
   140065c99:	je     0x140065c6f
   140065c9b:	cmp    rbx,rdi
   140065c9e:	je     0x140065ccd
   140065ca0:	add    rbx,0xfffffffffffffff8
   140065ca4:	cmp    QWORD PTR [rbx-0x8],0x0
   140065ca9:	je     0x140065cc0
   140065cab:	mov    rsi,QWORD PTR [rbx]
   140065cae:	test   rsi,rsi
   140065cb1:	je     0x140065cc0
   140065cb3:	mov    rcx,rsi
   140065cb6:	call   QWORD PTR [rip+0x686c]        # 0x14006c528
   140065cbc:	xor    ecx,ecx
   140065cbe:	call   rsi
   140065cc0:	sub    rbx,0x10
   140065cc4:	lea    rax,[rbx+0x8]
   140065cc8:	cmp    rax,rdi
   140065ccb:	jne    0x140065ca4
   140065ccd:	xor    al,al
   140065ccf:	mov    rbx,QWORD PTR [rsp+0x30]
   140065cd4:	mov    rbp,QWORD PTR [rsp+0x38]
   140065cd9:	mov    rsi,QWORD PTR [rsp+0x40]
   140065cde:	add    rsp,0x20
   140065ce2:	pop    rdi
   140065ce3:	ret    
   140065ce4:	mov    QWORD PTR [rsp+0x8],rbx
   140065ce9:	mov    QWORD PTR [rsp+0x10],rsi
   140065cee:	push   rdi
   140065cef:	sub    rsp,0x20
   140065cf3:	mov    rsi,rcx
   140065cf6:	cmp    rcx,rdx
   140065cf9:	je     0x140065d21
   140065cfb:	lea    rbx,[rdx-0x8]
   140065cff:	mov    rdi,QWORD PTR [rbx]
   140065d02:	test   rdi,rdi
   140065d05:	je     0x140065d14
   140065d07:	mov    rcx,rdi
   140065d0a:	call   QWORD PTR [rip+0x6818]        # 0x14006c528
   140065d10:	xor    ecx,ecx
   140065d12:	call   rdi
   140065d14:	sub    rbx,0x10
   140065d18:	lea    rax,[rbx+0x8]
   140065d1c:	cmp    rax,rsi
   140065d1f:	jne    0x140065cff
   140065d21:	mov    rbx,QWORD PTR [rsp+0x30]
   140065d26:	mov    al,0x1
   140065d28:	mov    rsi,QWORD PTR [rsp+0x38]
   140065d2d:	add    rsp,0x20
   140065d31:	pop    rdi
   140065d32:	ret    
   140065d33:	int3   
   140065d34:	mov    QWORD PTR [rsp+0x8],rbx
   140065d39:	mov    QWORD PTR [rsp+0x20],r9
   140065d3e:	push   rdi
   140065d3f:	sub    rsp,0x20
   140065d43:	mov    rdi,r9
   140065d46:	mov    ecx,DWORD PTR [rdx]
   140065d48:	call   0x140062874
   140065d4d:	nop
   140065d4e:	mov    rbx,QWORD PTR [rip+0x1c18b]        # 0x140081ee0
   140065d55:	mov    ecx,ebx
   140065d57:	and    ecx,0x3f
   140065d5a:	xor    rbx,QWORD PTR [rip+0x3a217]        # 0x14009ff78
   140065d61:	ror    rbx,cl
   140065d64:	mov    ecx,DWORD PTR [rdi]
   140065d66:	call   0x1400628c8
   140065d6b:	mov    rax,rbx
   140065d6e:	mov    rbx,QWORD PTR [rsp+0x30]
   140065d73:	add    rsp,0x20
   140065d77:	pop    rdi
   140065d78:	ret    
   140065d79:	int3   
   140065d7a:	int3   
   140065d7b:	int3   
   140065d7c:	mov    r11,rsp
   140065d7f:	sub    rsp,0x28
   140065d83:	mov    eax,0x3
   140065d88:	lea    r9,[r11+0x10]
   140065d8c:	lea    r8,[r11+0x8]
   140065d90:	mov    DWORD PTR [rsp+0x38],eax
   140065d94:	lea    rdx,[r11+0x18]
   140065d98:	mov    DWORD PTR [rsp+0x40],eax
   140065d9c:	lea    rcx,[r11+0x8]
   140065da0:	call   0x140065d34
   140065da5:	add    rsp,0x28
   140065da9:	ret    
   140065daa:	int3   
   140065dab:	int3   
   140065dac:	mov    QWORD PTR [rip+0x3a1b5],rcx        # 0x14009ff68
   140065db3:	mov    QWORD PTR [rip+0x3a1b6],rcx        # 0x14009ff70
   140065dba:	mov    QWORD PTR [rip+0x3a1b7],rcx        # 0x14009ff78
   140065dc1:	mov    QWORD PTR [rip+0x3a1b8],rcx        # 0x14009ff80
   140065dc8:	ret    
   140065dc9:	int3   
   140065dca:	int3   
   140065dcb:	int3   
   140065dcc:	mov    rax,rsp
   140065dcf:	push   rbx
   140065dd0:	push   rsi
   140065dd1:	push   rdi
   140065dd2:	push   r12
   140065dd4:	push   r13
   140065dd6:	push   r15
   140065dd8:	sub    rsp,0x48
   140065ddc:	mov    edi,ecx
   140065dde:	xor    r13d,r13d
   140065de1:	and    DWORD PTR [rax+0x18],r13d
   140065de5:	mov    sil,0x1
   140065de8:	mov    BYTE PTR [rsp+0x80],sil
   140065df0:	cmp    ecx,0x2
   140065df3:	je     0x140065e87
   140065df9:	cmp    ecx,0x4
   140065dfc:	je     0x140065e20
   140065dfe:	cmp    ecx,0x6
   140065e01:	je     0x140065e87
   140065e07:	cmp    ecx,0x8
   140065e0a:	je     0x140065e20
   140065e0c:	cmp    ecx,0xb
   140065e0f:	je     0x140065e20
   140065e11:	cmp    ecx,0xf
   140065e14:	je     0x140065e87
   140065e16:	lea    eax,[rcx-0x15]
   140065e19:	cmp    eax,0x1
   140065e1c:	jbe    0x140065e87
   140065e1e:	jmp    0x140065e64
   140065e20:	call   0x14006161c
   140065e25:	mov    r13,rax
   140065e28:	test   rax,rax
   140065e2b:	jne    0x140065e35
   140065e2d:	or     eax,0xffffffff
   140065e30:	jmp    0x140066057
   140065e35:	mov    rcx,QWORD PTR [rax]
   140065e38:	mov    rdx,QWORD PTR [rip+0xc3a1]        # 0x1400721e0
   140065e3f:	shl    rdx,0x4
   140065e43:	add    rdx,rcx
   140065e46:	jmp    0x140065e51
   140065e48:	cmp    DWORD PTR [rcx+0x4],edi
   140065e4b:	je     0x140065e58
   140065e4d:	add    rcx,0x10
   140065e51:	cmp    rcx,rdx
   140065e54:	jne    0x140065e48
   140065e56:	xor    ecx,ecx
   140065e58:	xor    eax,eax
   140065e5a:	test   rcx,rcx
   140065e5d:	setne  al
   140065e60:	test   eax,eax
   140065e62:	jne    0x140065e76
   140065e64:	call   0x140060e94
   140065e69:	mov    DWORD PTR [rax],0x16
   140065e6f:	call   0x140060d74
   140065e74:	jmp    0x140065e2d
   140065e76:	lea    rbx,[rcx+0x8]
   140065e7a:	xor    sil,sil
   140065e7d:	mov    BYTE PTR [rsp+0x80],sil
   140065e85:	jmp    0x140065ec6
   140065e87:	sub    ecx,0x2
   140065e8a:	je     0x140065ebf
   140065e8c:	sub    ecx,0x4
   140065e8f:	je     0x140065ea4
   140065e91:	sub    ecx,0x9
   140065e94:	je     0x140065eb6
   140065e96:	sub    ecx,0x6
   140065e99:	je     0x140065ead
   140065e9b:	cmp    ecx,0x1
   140065e9e:	je     0x140065ea4
   140065ea0:	xor    ebx,ebx
   140065ea2:	jmp    0x140065ec6
   140065ea4:	lea    rbx,[rip+0x3a0cd]        # 0x14009ff78
   140065eab:	jmp    0x140065ec6
   140065ead:	lea    rbx,[rip+0x3a0bc]        # 0x14009ff70
   140065eb4:	jmp    0x140065ec6
   140065eb6:	lea    rbx,[rip+0x3a0c3]        # 0x14009ff80
   140065ebd:	jmp    0x140065ec6
   140065ebf:	lea    rbx,[rip+0x3a0a2]        # 0x14009ff68
   140065ec6:	and    QWORD PTR [rsp+0x98],0x0
   140065ecf:	test   sil,sil
   140065ed2:	je     0x140065edf
   140065ed4:	mov    ecx,0x3
   140065ed9:	call   0x140062874
   140065ede:	nop
   140065edf:	test   sil,sil
   140065ee2:	je     0x140065efb
   140065ee4:	mov    rdx,QWORD PTR [rip+0x1bff5]        # 0x140081ee0
   140065eeb:	mov    ecx,edx
   140065eed:	and    ecx,0x3f
   140065ef0:	xor    rdx,QWORD PTR [rbx]
   140065ef3:	ror    rdx,cl
   140065ef6:	mov    r15,rdx
   140065ef9:	jmp    0x140065efe
   140065efb:	mov    r15,QWORD PTR [rbx]
   140065efe:	cmp    r15,0x1
   140065f02:	sete   al
   140065f05:	mov    BYTE PTR [rsp+0x88],al
   140065f0c:	test   al,al
   140065f0e:	jne    0x140065fd3
   140065f14:	test   r15,r15
   140065f17:	jne    0x140065f31
   140065f19:	test   sil,sil
   140065f1c:	je     0x140065f27
   140065f1e:	lea    ecx,[r15+0x3]
   140065f22:	call   0x1400628c8
   140065f27:	mov    ecx,0x3
   140065f2c:	call   0x14005e4bc
   140065f31:	mov    r12d,0x910
   140065f37:	cmp    edi,0xb
   140065f3a:	ja     0x140065f7c
   140065f3c:	bt     r12d,edi
   140065f40:	jae    0x140065f7c
   140065f42:	mov    rax,QWORD PTR [r13+0x8]
   140065f46:	mov    QWORD PTR [rsp+0x98],rax
   140065f4e:	mov    QWORD PTR [rsp+0x30],rax
   140065f53:	and    QWORD PTR [r13+0x8],0x0
   140065f58:	cmp    edi,0x8
   140065f5b:	jne    0x140065fb3
   140065f5d:	call   0x140061588
   140065f62:	mov    eax,DWORD PTR [rax+0x10]
   140065f65:	mov    DWORD PTR [rsp+0x90],eax
   140065f6c:	mov    DWORD PTR [rsp+0x20],eax
   140065f70:	call   0x140061588
   140065f75:	mov    DWORD PTR [rax+0x10],0x8c
   140065f7c:	cmp    edi,0x8
   140065f7f:	jne    0x140065fb3
   140065f81:	mov    rax,QWORD PTR [rip+0xc260]        # 0x1400721e8
   140065f88:	shl    rax,0x4
   140065f8c:	add    rax,QWORD PTR [r13+0x0]
   140065f90:	mov    rcx,QWORD PTR [rip+0xc259]        # 0x1400721f0
   140065f97:	shl    rcx,0x4
   140065f9b:	add    rcx,rax
   140065f9e:	mov    QWORD PTR [rsp+0x28],rax
   140065fa3:	cmp    rax,rcx
   140065fa6:	je     0x140065fd9
   140065fa8:	and    QWORD PTR [rax+0x8],0x0
   140065fad:	add    rax,0x10
   140065fb1:	jmp    0x140065f9e
   140065fb3:	mov    rdx,QWORD PTR [rip+0x1bf26]        # 0x140081ee0
   140065fba:	mov    eax,edx
   140065fbc:	and    eax,0x3f
   140065fbf:	mov    ecx,0x40
   140065fc4:	sub    ecx,eax
   140065fc6:	xor    eax,eax
   140065fc8:	ror    rax,cl
   140065fcb:	xor    rax,rdx
   140065fce:	mov    QWORD PTR [rbx],rax
   140065fd1:	jmp    0x140065fd9
   140065fd3:	mov    r12d,0x910
   140065fd9:	test   sil,sil
   140065fdc:	je     0x140065fe8
   140065fde:	mov    ecx,0x3
   140065fe3:	call   0x1400628c8
   140065fe8:	cmp    BYTE PTR [rsp+0x88],0x0
   140065ff0:	je     0x140065ff6
   140065ff2:	xor    eax,eax
   140065ff4:	jmp    0x140066057
   140065ff6:	cmp    edi,0x8
   140065ff9:	jne    0x140066019
   140065ffb:	call   0x140061588
   140066000:	mov    rbx,rax
   140066003:	mov    rcx,r15
   140066006:	mov    rdx,QWORD PTR [rip+0x651b]        # 0x14006c528
   14006600d:	call   rdx
   14006600f:	mov    edx,DWORD PTR [rbx+0x10]
   140066012:	mov    ecx,edi
   140066014:	call   r15
   140066017:	jmp    0x14006602a
   140066019:	mov    rcx,r15
   14006601c:	mov    rax,QWORD PTR [rip+0x6505]        # 0x14006c528
   140066023:	call   rax
   140066025:	mov    ecx,edi
   140066027:	call   r15
   14006602a:	cmp    edi,0xb
   14006602d:	ja     0x140065ff2
   14006602f:	bt     r12d,edi
   140066033:	jae    0x140065ff2
   140066035:	mov    rax,QWORD PTR [rsp+0x98]
   14006603d:	mov    QWORD PTR [r13+0x8],rax
   140066041:	cmp    edi,0x8
   140066044:	jne    0x140065ff2
   140066046:	call   0x140061588
   14006604b:	mov    ecx,DWORD PTR [rsp+0x90]
   140066052:	mov    DWORD PTR [rax+0x10],ecx
   140066055:	jmp    0x140065ff2
   140066057:	add    rsp,0x48
   14006605b:	pop    r15
   14006605d:	pop    r13
   14006605f:	pop    r12
   140066061:	pop    rdi
   140066062:	pop    rsi
   140066063:	pop    rbx
   140066064:	ret    
   140066065:	int3   
   140066066:	int3   
   140066067:	int3   
   140066068:	test   rcx,rcx
   14006606b:	je     0x140066171
   140066071:	push   rbx
   140066072:	sub    rsp,0x20
   140066076:	mov    rbx,rcx
   140066079:	mov    rcx,QWORD PTR [rcx+0x18]
   14006607d:	cmp    rcx,QWORD PTR [rip+0x1c6e4]        # 0x140082768
   140066084:	je     0x14006608b
   140066086:	call   0x1400609cc
   14006608b:	mov    rcx,QWORD PTR [rbx+0x20]
   14006608f:	cmp    rcx,QWORD PTR [rip+0x1c6da]        # 0x140082770
   140066096:	je     0x14006609d
   140066098:	call   0x1400609cc
   14006609d:	mov    rcx,QWORD PTR [rbx+0x28]
   1400660a1:	cmp    rcx,QWORD PTR [rip+0x1c6d0]        # 0x140082778
   1400660a8:	je     0x1400660af
   1400660aa:	call   0x1400609cc
   1400660af:	mov    rcx,QWORD PTR [rbx+0x30]
   1400660b3:	cmp    rcx,QWORD PTR [rip+0x1c6c6]        # 0x140082780
   1400660ba:	je     0x1400660c1
   1400660bc:	call   0x1400609cc
   1400660c1:	mov    rcx,QWORD PTR [rbx+0x38]
   1400660c5:	cmp    rcx,QWORD PTR [rip+0x1c6bc]        # 0x140082788
   1400660cc:	je     0x1400660d3
   1400660ce:	call   0x1400609cc
   1400660d3:	mov    rcx,QWORD PTR [rbx+0x40]
   1400660d7:	cmp    rcx,QWORD PTR [rip+0x1c6b2]        # 0x140082790
   1400660de:	je     0x1400660e5
   1400660e0:	call   0x1400609cc
   1400660e5:	mov    rcx,QWORD PTR [rbx+0x48]
   1400660e9:	cmp    rcx,QWORD PTR [rip+0x1c6a8]        # 0x140082798
   1400660f0:	je     0x1400660f7
   1400660f2:	call   0x1400609cc
   1400660f7:	mov    rcx,QWORD PTR [rbx+0x68]
   1400660fb:	cmp    rcx,QWORD PTR [rip+0x1c6b6]        # 0x1400827b8
   140066102:	je     0x140066109
   140066104:	call   0x1400609cc
   140066109:	mov    rcx,QWORD PTR [rbx+0x70]
   14006610d:	cmp    rcx,QWORD PTR [rip+0x1c6ac]        # 0x1400827c0
   140066114:	je     0x14006611b
   140066116:	call   0x1400609cc
   14006611b:	mov    rcx,QWORD PTR [rbx+0x78]
   14006611f:	cmp    rcx,QWORD PTR [rip+0x1c6a2]        # 0x1400827c8
   140066126:	je     0x14006612d
   140066128:	call   0x1400609cc
   14006612d:	mov    rcx,QWORD PTR [rbx+0x80]
   140066134:	cmp    rcx,QWORD PTR [rip+0x1c695]        # 0x1400827d0
   14006613b:	je     0x140066142
   14006613d:	call   0x1400609cc
   140066142:	mov    rcx,QWORD PTR [rbx+0x88]
   140066149:	cmp    rcx,QWORD PTR [rip+0x1c688]        # 0x1400827d8
   140066150:	je     0x140066157
   140066152:	call   0x1400609cc
   140066157:	mov    rcx,QWORD PTR [rbx+0x90]
   14006615e:	cmp    rcx,QWORD PTR [rip+0x1c67b]        # 0x1400827e0
   140066165:	je     0x14006616c
   140066167:	call   0x1400609cc
   14006616c:	add    rsp,0x20
   140066170:	pop    rbx
   140066171:	ret    
   140066172:	int3   
   140066173:	int3   
   140066174:	test   rcx,rcx
   140066177:	je     0x1400661df
   140066179:	push   rbx
   14006617a:	sub    rsp,0x20
   14006617e:	mov    rbx,rcx
   140066181:	mov    rcx,QWORD PTR [rcx]
   140066184:	cmp    rcx,QWORD PTR [rip+0x1c5c5]        # 0x140082750
   14006618b:	je     0x140066192
   14006618d:	call   0x1400609cc
   140066192:	mov    rcx,QWORD PTR [rbx+0x8]
   140066196:	cmp    rcx,QWORD PTR [rip+0x1c5bb]        # 0x140082758
   14006619d:	je     0x1400661a4
   14006619f:	call   0x1400609cc
   1400661a4:	mov    rcx,QWORD PTR [rbx+0x10]
   1400661a8:	cmp    rcx,QWORD PTR [rip+0x1c5b1]        # 0x140082760
   1400661af:	je     0x1400661b6
   1400661b1:	call   0x1400609cc
   1400661b6:	mov    rcx,QWORD PTR [rbx+0x58]
   1400661ba:	cmp    rcx,QWORD PTR [rip+0x1c5e7]        # 0x1400827a8
   1400661c1:	je     0x1400661c8
   1400661c3:	call   0x1400609cc
   1400661c8:	mov    rcx,QWORD PTR [rbx+0x60]
   1400661cc:	cmp    rcx,QWORD PTR [rip+0x1c5dd]        # 0x1400827b0
   1400661d3:	je     0x1400661da
   1400661d5:	call   0x1400609cc
   1400661da:	add    rsp,0x20
   1400661de:	pop    rbx
   1400661df:	ret    
   1400661e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400661e5:	mov    QWORD PTR [rsp+0x10],rsi
   1400661ea:	push   rdi
   1400661eb:	sub    rsp,0x20
   1400661ef:	xor    edi,edi
   1400661f1:	lea    rax,[rcx+rdx*8]
   1400661f5:	mov    rsi,rax
   1400661f8:	mov    rbx,rcx
   1400661fb:	sub    rsi,rcx
   1400661fe:	add    rsi,0x7
   140066202:	shr    rsi,0x3
   140066206:	cmp    rcx,rax
   140066209:	cmova  rsi,rdi
   14006620d:	test   rsi,rsi
   140066210:	je     0x140066226
   140066212:	mov    rcx,QWORD PTR [rbx]
   140066215:	call   0x1400609cc
   14006621a:	inc    rdi
   14006621d:	lea    rbx,[rbx+0x8]
   140066221:	cmp    rdi,rsi
   140066224:	jne    0x140066212
   140066226:	mov    rbx,QWORD PTR [rsp+0x30]
   14006622b:	mov    rsi,QWORD PTR [rsp+0x38]
   140066230:	add    rsp,0x20
   140066234:	pop    rdi
   140066235:	ret    
   140066236:	int3   
   140066237:	int3   
   140066238:	test   rcx,rcx
   14006623b:	je     0x14006633f
   140066241:	mov    QWORD PTR [rsp+0x8],rbx
   140066246:	mov    QWORD PTR [rsp+0x10],rbp
   14006624b:	push   rsi
   14006624c:	sub    rsp,0x20
   140066250:	mov    ebp,0x7
   140066255:	mov    rbx,rcx
   140066258:	mov    edx,ebp
   14006625a:	call   0x1400661e0
   14006625f:	lea    rcx,[rbx+0x38]
   140066263:	mov    edx,ebp
   140066265:	call   0x1400661e0
   14006626a:	lea    esi,[rbp+0x5]
   14006626d:	mov    edx,esi
   14006626f:	lea    rcx,[rbx+0x70]
   140066273:	call   0x1400661e0
   140066278:	lea    rcx,[rbx+0xd0]
   14006627f:	mov    edx,esi
   140066281:	call   0x1400661e0
   140066286:	lea    rcx,[rbx+0x130]
   14006628d:	lea    edx,[rbp-0x5]
   140066290:	call   0x1400661e0
   140066295:	mov    rcx,QWORD PTR [rbx+0x140]
   14006629c:	call   0x1400609cc
   1400662a1:	mov    rcx,QWORD PTR [rbx+0x148]
   1400662a8:	call   0x1400609cc
   1400662ad:	mov    rcx,QWORD PTR [rbx+0x150]
   1400662b4:	call   0x1400609cc
   1400662b9:	lea    rcx,[rbx+0x160]
   1400662c0:	mov    edx,ebp
   1400662c2:	call   0x1400661e0
   1400662c7:	lea    rcx,[rbx+0x198]
   1400662ce:	mov    edx,ebp
   1400662d0:	call   0x1400661e0
   1400662d5:	lea    rcx,[rbx+0x1d0]
   1400662dc:	mov    edx,esi
   1400662de:	call   0x1400661e0
   1400662e3:	lea    rcx,[rbx+0x230]
   1400662ea:	mov    edx,esi
   1400662ec:	call   0x1400661e0
   1400662f1:	lea    rcx,[rbx+0x290]
   1400662f8:	lea    edx,[rbp-0x5]
   1400662fb:	call   0x1400661e0
   140066300:	mov    rcx,QWORD PTR [rbx+0x2a0]
   140066307:	call   0x1400609cc
   14006630c:	mov    rcx,QWORD PTR [rbx+0x2a8]
   140066313:	call   0x1400609cc
   140066318:	mov    rcx,QWORD PTR [rbx+0x2b0]
   14006631f:	call   0x1400609cc
   140066324:	mov    rcx,QWORD PTR [rbx+0x2b8]
   14006632b:	call   0x1400609cc
   140066330:	mov    rbx,QWORD PTR [rsp+0x30]
   140066335:	mov    rbp,QWORD PTR [rsp+0x38]
   14006633a:	add    rsp,0x20
   14006633e:	pop    rsi
   14006633f:	ret    
   140066340:	rex push rbp
   140066342:	push   r12
   140066344:	push   r13
   140066346:	push   r14
   140066348:	push   r15
   14006634a:	sub    rsp,0x60
   14006634e:	lea    rbp,[rsp+0x30]
   140066353:	mov    QWORD PTR [rbp+0x60],rbx
   140066357:	mov    QWORD PTR [rbp+0x68],rsi
   14006635b:	mov    QWORD PTR [rbp+0x70],rdi
   14006635f:	mov    rax,QWORD PTR [rip+0x1bb7a]        # 0x140081ee0
   140066366:	xor    rax,rbp
   140066369:	mov    QWORD PTR [rbp+0x20],rax
   14006636d:	mov    r13d,edx
   140066370:	mov    r15d,r9d
   140066373:	mov    rdx,rcx
   140066376:	mov    r12,r8
   140066379:	lea    rcx,[rbp+0x0]
   14006637d:	call   0x14005b174
   140066382:	mov    esi,DWORD PTR [rbp+0x88]
   140066388:	test   esi,esi
   14006638a:	jne    0x140066393
   14006638c:	mov    rax,QWORD PTR [rbp+0x8]
   140066390:	mov    esi,DWORD PTR [rax+0xc]
   140066393:	neg    DWORD PTR [rbp+0x90]
   140066399:	mov    r9d,r15d
   14006639c:	mov    r8,r12
   14006639f:	mov    ecx,esi
   1400663a1:	sbb    edx,edx
   1400663a3:	and    DWORD PTR [rsp+0x28],0x0
   1400663a8:	and    QWORD PTR [rsp+0x20],0x0
   1400663ae:	and    edx,0x8
   1400663b1:	inc    edx
   1400663b3:	call   QWORD PTR [rip+0x5ee7]        # 0x14006c2a0
   1400663b9:	movsxd r14,eax
   1400663bc:	test   eax,eax
   1400663be:	jne    0x1400663c7
   1400663c0:	xor    edi,edi
   1400663c2:	jmp    0x1400664b8
   1400663c7:	mov    rdi,r14
   1400663ca:	add    rdi,rdi
   1400663cd:	lea    rcx,[rdi+0x10]
   1400663d1:	cmp    rdi,rcx
   1400663d4:	sbb    rax,rax
   1400663d7:	test   rcx,rax
   1400663da:	je     0x140066451
   1400663dc:	lea    rcx,[rdi+0x10]
   1400663e0:	cmp    rdi,rcx
   1400663e3:	sbb    rax,rax
   1400663e6:	and    rax,rcx
   1400663e9:	cmp    rax,0x400
   1400663ef:	lea    rax,[rdi+0x10]
   1400663f3:	ja     0x14006642f
   1400663f5:	cmp    rdi,rax
   1400663f8:	sbb    rcx,rcx
   1400663fb:	and    rcx,rax
   1400663fe:	lea    rax,[rcx+0xf]
   140066402:	cmp    rax,rcx
   140066405:	ja     0x140066411
   140066407:	movabs rax,0xffffffffffffff0
   140066411:	and    rax,0xfffffffffffffff0
   140066415:	call   0x140055f20
   14006641a:	sub    rsp,rax
   14006641d:	lea    rbx,[rsp+0x30]
   140066422:	test   rbx,rbx
   140066425:	je     0x1400664a0
   140066427:	mov    DWORD PTR [rbx],0xcccc
   14006642d:	jmp    0x14006644b
   14006642f:	cmp    rdi,rax
   140066432:	sbb    rcx,rcx
   140066435:	and    rcx,rax
   140066438:	call   0x140060a0c
   14006643d:	mov    rbx,rax
   140066440:	test   rax,rax
   140066443:	je     0x140066453
   140066445:	mov    DWORD PTR [rax],0xdddd
   14006644b:	add    rbx,0x10
   14006644f:	jmp    0x140066453
   140066451:	xor    ebx,ebx
   140066453:	test   rbx,rbx
   140066456:	je     0x1400664a0
   140066458:	mov    r8,rdi
   14006645b:	xor    edx,edx
   14006645d:	mov    rcx,rbx
   140066460:	call   0x140058f40
   140066465:	mov    r9d,r15d
   140066468:	mov    DWORD PTR [rsp+0x28],r14d
   14006646d:	mov    r8,r12
   140066470:	mov    QWORD PTR [rsp+0x20],rbx
   140066475:	mov    edx,0x1
   14006647a:	mov    ecx,esi
   14006647c:	call   QWORD PTR [rip+0x5e1e]        # 0x14006c2a0
   140066482:	test   eax,eax
   140066484:	je     0x1400664a0
   140066486:	mov    r9,QWORD PTR [rbp+0x80]
   14006648d:	mov    r8d,eax
   140066490:	mov    rdx,rbx
   140066493:	mov    ecx,r13d
   140066496:	call   QWORD PTR [rip+0x5fec]        # 0x14006c488
   14006649c:	mov    edi,eax
   14006649e:	jmp    0x1400664a2
   1400664a0:	xor    edi,edi
   1400664a2:	test   rbx,rbx
   1400664a5:	je     0x1400664b8
   1400664a7:	lea    rcx,[rbx-0x10]
   1400664ab:	cmp    DWORD PTR [rcx],0xdddd
   1400664b1:	jne    0x1400664b8
   1400664b3:	call   0x1400609cc
   1400664b8:	cmp    BYTE PTR [rbp+0x18],0x0
   1400664bc:	je     0x1400664c9
   1400664be:	mov    rax,QWORD PTR [rbp+0x0]
   1400664c2:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   1400664c9:	mov    eax,edi
   1400664cb:	mov    rcx,QWORD PTR [rbp+0x20]
   1400664cf:	xor    rcx,rbp
   1400664d2:	call   0x140055f90
   1400664d7:	mov    rbx,QWORD PTR [rbp+0x60]
   1400664db:	mov    rsi,QWORD PTR [rbp+0x68]
   1400664df:	mov    rdi,QWORD PTR [rbp+0x70]
   1400664e3:	lea    rsp,[rbp+0x30]
   1400664e7:	pop    r15
   1400664e9:	pop    r14
   1400664eb:	pop    r13
   1400664ed:	pop    r12
   1400664ef:	pop    rbp
   1400664f0:	ret    
   1400664f1:	int3   
   1400664f2:	int3   
   1400664f3:	int3   
   1400664f4:	lock inc DWORD PTR [rcx+0x10]
   1400664f8:	mov    rax,QWORD PTR [rcx+0xe0]
   1400664ff:	test   rax,rax
   140066502:	je     0x140066507
   140066504:	lock inc DWORD PTR [rax]
   140066507:	mov    rax,QWORD PTR [rcx+0xf0]
   14006650e:	test   rax,rax
   140066511:	je     0x140066516
   140066513:	lock inc DWORD PTR [rax]
   140066516:	mov    rax,QWORD PTR [rcx+0xe8]
   14006651d:	test   rax,rax
   140066520:	je     0x140066525
   140066522:	lock inc DWORD PTR [rax]
   140066525:	mov    rax,QWORD PTR [rcx+0x100]
   14006652c:	test   rax,rax
   14006652f:	je     0x140066534
   140066531:	lock inc DWORD PTR [rax]
   140066534:	lea    rax,[rcx+0x38]
   140066538:	mov    r8d,0x6
   14006653e:	lea    rdx,[rip+0x1bcb3]        # 0x1400821f8
   140066545:	cmp    QWORD PTR [rax-0x10],rdx
   140066549:	je     0x140066556
   14006654b:	mov    rdx,QWORD PTR [rax]
   14006654e:	test   rdx,rdx
   140066551:	je     0x140066556
   140066553:	lock inc DWORD PTR [rdx]
   140066556:	cmp    QWORD PTR [rax-0x18],0x0
   14006655b:	je     0x140066569
   14006655d:	mov    rdx,QWORD PTR [rax-0x8]
   140066561:	test   rdx,rdx
   140066564:	je     0x140066569
   140066566:	lock inc DWORD PTR [rdx]
   140066569:	add    rax,0x20
   14006656d:	sub    r8,0x1
   140066571:	jne    0x14006653e
   140066573:	mov    rcx,QWORD PTR [rcx+0x120]
   14006657a:	jmp    0x1400666f8
   14006657f:	int3   
   140066580:	mov    QWORD PTR [rsp+0x8],rbx
   140066585:	mov    QWORD PTR [rsp+0x10],rbp
   14006658a:	mov    QWORD PTR [rsp+0x18],rsi
   14006658f:	push   rdi
   140066590:	sub    rsp,0x20
   140066594:	mov    rax,QWORD PTR [rcx+0xf8]
   14006659b:	mov    rbx,rcx
   14006659e:	test   rax,rax
   1400665a1:	je     0x14006661c
   1400665a3:	lea    rcx,[rip+0x1c1a6]        # 0x140082750
   1400665aa:	cmp    rax,rcx
   1400665ad:	je     0x14006661c
   1400665af:	mov    rax,QWORD PTR [rbx+0xe0]
   1400665b6:	test   rax,rax
   1400665b9:	je     0x14006661c
   1400665bb:	cmp    DWORD PTR [rax],0x0
   1400665be:	jne    0x14006661c
   1400665c0:	mov    rcx,QWORD PTR [rbx+0xf0]
   1400665c7:	test   rcx,rcx
   1400665ca:	je     0x1400665e2
   1400665cc:	cmp    DWORD PTR [rcx],0x0
   1400665cf:	jne    0x1400665e2
   1400665d1:	call   0x1400609cc
   1400665d6:	mov    rcx,QWORD PTR [rbx+0xf8]
   1400665dd:	call   0x140066068
   1400665e2:	mov    rcx,QWORD PTR [rbx+0xe8]
   1400665e9:	test   rcx,rcx
   1400665ec:	je     0x140066604
   1400665ee:	cmp    DWORD PTR [rcx],0x0
   1400665f1:	jne    0x140066604
   1400665f3:	call   0x1400609cc
   1400665f8:	mov    rcx,QWORD PTR [rbx+0xf8]
   1400665ff:	call   0x140066174
   140066604:	mov    rcx,QWORD PTR [rbx+0xe0]
   14006660b:	call   0x1400609cc
   140066610:	mov    rcx,QWORD PTR [rbx+0xf8]
   140066617:	call   0x1400609cc
   14006661c:	mov    rax,QWORD PTR [rbx+0x100]
   140066623:	test   rax,rax
   140066626:	je     0x14006666f
   140066628:	cmp    DWORD PTR [rax],0x0
   14006662b:	jne    0x14006666f
   14006662d:	mov    rcx,QWORD PTR [rbx+0x108]
   140066634:	sub    rcx,0xfe
   14006663b:	call   0x1400609cc
   140066640:	mov    rcx,QWORD PTR [rbx+0x110]
   140066647:	mov    edi,0x80
   14006664c:	sub    rcx,rdi
   14006664f:	call   0x1400609cc
   140066654:	mov    rcx,QWORD PTR [rbx+0x118]
   14006665b:	sub    rcx,rdi
   14006665e:	call   0x1400609cc
   140066663:	mov    rcx,QWORD PTR [rbx+0x100]
   14006666a:	call   0x1400609cc
   14006666f:	mov    rcx,QWORD PTR [rbx+0x120]
   140066676:	call   0x140066720
   14006667b:	lea    rsi,[rbx+0x128]
   140066682:	mov    ebp,0x6
   140066687:	lea    rdi,[rbx+0x38]
   14006668b:	lea    rax,[rip+0x1bb66]        # 0x1400821f8
   140066692:	cmp    QWORD PTR [rdi-0x10],rax
   140066696:	je     0x1400666b2
   140066698:	mov    rcx,QWORD PTR [rdi]
   14006669b:	test   rcx,rcx
   14006669e:	je     0x1400666b2
   1400666a0:	cmp    DWORD PTR [rcx],0x0
   1400666a3:	jne    0x1400666b2
   1400666a5:	call   0x1400609cc
   1400666aa:	mov    rcx,QWORD PTR [rsi]
   1400666ad:	call   0x1400609cc
   1400666b2:	cmp    QWORD PTR [rdi-0x18],0x0
   1400666b7:	je     0x1400666cc
   1400666b9:	mov    rcx,QWORD PTR [rdi-0x8]
   1400666bd:	test   rcx,rcx
   1400666c0:	je     0x1400666cc
   1400666c2:	cmp    DWORD PTR [rcx],0x0
   1400666c5:	jne    0x1400666cc
   1400666c7:	call   0x1400609cc
   1400666cc:	add    rsi,0x8
   1400666d0:	add    rdi,0x20
   1400666d4:	sub    rbp,0x1
   1400666d8:	jne    0x14006668b
   1400666da:	mov    rcx,rbx
   1400666dd:	mov    rbx,QWORD PTR [rsp+0x30]
   1400666e2:	mov    rbp,QWORD PTR [rsp+0x38]
   1400666e7:	mov    rsi,QWORD PTR [rsp+0x40]
   1400666ec:	add    rsp,0x20
   1400666f0:	pop    rdi
   1400666f1:	jmp    0x1400609cc
   1400666f6:	int3   
   1400666f7:	int3   
   1400666f8:	test   rcx,rcx
   1400666fb:	je     0x140066719
   1400666fd:	lea    rax,[rip+0xbdac]        # 0x1400724b0
   140066704:	cmp    rcx,rax
   140066707:	je     0x140066719
   140066709:	mov    eax,0x1
   14006670e:	lock xadd DWORD PTR [rcx+0x15c],eax
   140066716:	inc    eax
   140066718:	ret    
   140066719:	mov    eax,0x7fffffff
   14006671e:	ret    
   14006671f:	int3   
   140066720:	test   rcx,rcx
   140066723:	je     0x140066755
   140066725:	push   rbx
   140066726:	sub    rsp,0x20
   14006672a:	lea    rax,[rip+0xbd7f]        # 0x1400724b0
   140066731:	mov    rbx,rcx
   140066734:	cmp    rcx,rax
   140066737:	je     0x140066750
   140066739:	mov    eax,DWORD PTR [rcx+0x15c]
   14006673f:	test   eax,eax
   140066741:	jne    0x140066750
   140066743:	call   0x140066238
   140066748:	mov    rcx,rbx
   14006674b:	call   0x1400609cc
   140066750:	add    rsp,0x20
   140066754:	pop    rbx
   140066755:	ret    
   140066756:	int3   
   140066757:	int3   
   140066758:	test   rcx,rcx
   14006675b:	je     0x140066777
   14006675d:	lea    rax,[rip+0xbd4c]        # 0x1400724b0
   140066764:	cmp    rcx,rax
   140066767:	je     0x140066777
   140066769:	or     eax,0xffffffff
   14006676c:	lock xadd DWORD PTR [rcx+0x15c],eax
   140066774:	dec    eax
   140066776:	ret    
   140066777:	mov    eax,0x7fffffff
   14006677c:	ret    
   14006677d:	int3   
   14006677e:	int3   
   14006677f:	int3   
   140066780:	sub    rsp,0x28
   140066784:	test   rcx,rcx
   140066787:	je     0x140066823
   14006678d:	or     r9d,0xffffffff
   140066791:	lock add DWORD PTR [rcx+0x10],r9d
   140066796:	mov    rax,QWORD PTR [rcx+0xe0]
   14006679d:	test   rax,rax
   1400667a0:	je     0x1400667a6
   1400667a2:	lock add DWORD PTR [rax],r9d
   1400667a6:	mov    rax,QWORD PTR [rcx+0xf0]
   1400667ad:	test   rax,rax
   1400667b0:	je     0x1400667b6
   1400667b2:	lock add DWORD PTR [rax],r9d
   1400667b6:	mov    rax,QWORD PTR [rcx+0xe8]
   1400667bd:	test   rax,rax
   1400667c0:	je     0x1400667c6
   1400667c2:	lock add DWORD PTR [rax],r9d
   1400667c6:	mov    rax,QWORD PTR [rcx+0x100]
   1400667cd:	test   rax,rax
   1400667d0:	je     0x1400667d6
   1400667d2:	lock add DWORD PTR [rax],r9d
   1400667d6:	lea    rax,[rcx+0x38]
   1400667da:	mov    r8d,0x6
   1400667e0:	lea    rdx,[rip+0x1ba11]        # 0x1400821f8
   1400667e7:	cmp    QWORD PTR [rax-0x10],rdx
   1400667eb:	je     0x1400667f9
   1400667ed:	mov    rdx,QWORD PTR [rax]
   1400667f0:	test   rdx,rdx
   1400667f3:	je     0x1400667f9
   1400667f5:	lock add DWORD PTR [rdx],r9d
   1400667f9:	cmp    QWORD PTR [rax-0x18],0x0
   1400667fe:	je     0x14006680d
   140066800:	mov    rdx,QWORD PTR [rax-0x8]
   140066804:	test   rdx,rdx
   140066807:	je     0x14006680d
   140066809:	lock add DWORD PTR [rdx],r9d
   14006680d:	add    rax,0x20
   140066811:	sub    r8,0x1
   140066815:	jne    0x1400667e0
   140066817:	mov    rcx,QWORD PTR [rcx+0x120]
   14006681e:	call   0x140066758
   140066823:	add    rsp,0x28
   140066827:	ret    
   140066828:	mov    QWORD PTR [rsp+0x8],rbx
   14006682d:	push   rdi
   14006682e:	sub    rsp,0x20
   140066832:	call   0x140061588
   140066837:	mov    rdi,rax
   14006683a:	mov    ecx,DWORD PTR [rip+0x1bfb0]        # 0x1400827f0
   140066840:	test   DWORD PTR [rax+0x3a8],ecx
   140066846:	je     0x140066854
   140066848:	mov    rbx,QWORD PTR [rax+0x90]
   14006684f:	test   rbx,rbx
   140066852:	jne    0x14006688a
   140066854:	mov    ecx,0x4
   140066859:	call   0x140062874
   14006685e:	nop
   14006685f:	lea    rcx,[rdi+0x90]
   140066866:	mov    rdx,QWORD PTR [rip+0x38efb]        # 0x14009f768
   14006686d:	call   0x140066898
   140066872:	mov    rbx,rax
   140066875:	mov    ecx,0x4
   14006687a:	call   0x1400628c8
   14006687f:	test   rbx,rbx
   140066882:	jne    0x14006688a
   140066884:	call   0x140060974
   140066889:	int3   
   14006688a:	mov    rax,rbx
   14006688d:	mov    rbx,QWORD PTR [rsp+0x30]
   140066892:	add    rsp,0x20
   140066896:	pop    rdi
   140066897:	ret    
   140066898:	mov    QWORD PTR [rsp+0x8],rbx
   14006689d:	push   rdi
   14006689e:	sub    rsp,0x20
   1400668a2:	mov    rdi,rdx
   1400668a5:	test   rdx,rdx
   1400668a8:	je     0x1400668f3
   1400668aa:	test   rcx,rcx
   1400668ad:	je     0x1400668f3
   1400668af:	mov    rbx,QWORD PTR [rcx]
   1400668b2:	cmp    rbx,rdx
   1400668b5:	jne    0x1400668bc
   1400668b7:	mov    rax,rdx
   1400668ba:	jmp    0x1400668f5
   1400668bc:	mov    QWORD PTR [rcx],rdx
   1400668bf:	mov    rcx,rdx
   1400668c2:	call   0x1400664f4
   1400668c7:	test   rbx,rbx
   1400668ca:	je     0x1400668ee
   1400668cc:	mov    rcx,rbx
   1400668cf:	call   0x140066780
   1400668d4:	cmp    DWORD PTR [rbx+0x10],0x0
   1400668d8:	jne    0x1400668ee
   1400668da:	lea    rax,[rip+0x1b7af]        # 0x140082090
   1400668e1:	cmp    rbx,rax
   1400668e4:	je     0x1400668ee
   1400668e6:	mov    rcx,rbx
   1400668e9:	call   0x140066580
   1400668ee:	mov    rax,rdi
   1400668f1:	jmp    0x1400668f5
   1400668f3:	xor    eax,eax
   1400668f5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400668fa:	add    rsp,0x20
   1400668fe:	pop    rdi
   1400668ff:	ret    
   140066900:	rex push rbx
   140066902:	sub    rsp,0x20
   140066906:	xor    ebx,ebx
   140066908:	test   rcx,rcx
   14006690b:	jne    0x140066925
   14006690d:	call   0x140060e94
   140066912:	mov    ebx,0x16
   140066917:	mov    DWORD PTR [rax],ebx
   140066919:	call   0x140060d74
   14006691e:	mov    eax,ebx
   140066920:	jmp    0x1400669b9
   140066925:	test   rdx,rdx
   140066928:	je     0x14006690d
   14006692a:	test   r8d,r8d
   14006692d:	mov    BYTE PTR [rcx],bl
   14006692f:	mov    eax,ebx
   140066931:	cmovg  eax,r8d
   140066935:	inc    eax
   140066937:	cdqe   
   140066939:	cmp    rdx,rax
   14006693c:	ja     0x14006694a
   14006693e:	call   0x140060e94
   140066943:	mov    ebx,0x22
   140066948:	jmp    0x140066917
   14006694a:	test   r9,r9
   14006694d:	je     0x14006690d
   14006694f:	mov    rdx,QWORD PTR [r9+0x8]
   140066953:	lea    rax,[rcx+0x1]
   140066957:	mov    BYTE PTR [rcx],0x30
   14006695a:	jmp    0x140066975
   14006695c:	mov    r10b,BYTE PTR [rdx]
   14006695f:	test   r10b,r10b
   140066962:	je     0x140066969
   140066964:	inc    rdx
   140066967:	jmp    0x14006696c
   140066969:	mov    r10b,0x30
   14006696c:	mov    BYTE PTR [rax],r10b
   14006696f:	inc    rax
   140066972:	dec    r8d
   140066975:	test   r8d,r8d
   140066978:	jg     0x14006695c
   14006697a:	mov    BYTE PTR [rax],bl
   14006697c:	js     0x140066992
   14006697e:	cmp    BYTE PTR [rdx],0x35
   140066981:	jl     0x140066992
   140066983:	jmp    0x140066988
   140066985:	mov    BYTE PTR [rax],0x30
   140066988:	dec    rax
   14006698b:	cmp    BYTE PTR [rax],0x39
   14006698e:	je     0x140066985
   140066990:	inc    BYTE PTR [rax]
   140066992:	cmp    BYTE PTR [rcx],0x31
   140066995:	jne    0x14006699d
   140066997:	inc    DWORD PTR [r9+0x4]
   14006699b:	jmp    0x1400669b7
   14006699d:	or     r8,0xffffffffffffffff
   1400669a1:	inc    r8
   1400669a4:	cmp    BYTE PTR [rcx+r8*1+0x1],bl
   1400669a9:	jne    0x1400669a1
   1400669ab:	inc    r8
   1400669ae:	lea    rdx,[rcx+0x1]
   1400669b2:	call   0x140059180
   1400669b7:	xor    eax,eax
   1400669b9:	add    rsp,0x20
   1400669bd:	pop    rbx
   1400669be:	ret    
   1400669bf:	int3   
   1400669c0:	mov    QWORD PTR [rsp+0x10],rdx
   1400669c5:	push   rsi
   1400669c6:	push   rdi
   1400669c7:	sub    rsp,0x248
   1400669ce:	mov    r9d,DWORD PTR [rcx]
   1400669d1:	mov    rdi,rdx
   1400669d4:	mov    rsi,rcx
   1400669d7:	test   r9d,r9d
   1400669da:	jne    0x1400669e8
   1400669dc:	xor    eax,eax
   1400669de:	add    rsp,0x248
   1400669e5:	pop    rdi
   1400669e6:	pop    rsi
   1400669e7:	ret    
   1400669e8:	mov    eax,DWORD PTR [rdx]
   1400669ea:	test   eax,eax
   1400669ec:	je     0x1400669dc
   1400669ee:	mov    QWORD PTR [rsp+0x240],rbx
   1400669f6:	dec    r9d
   1400669f9:	mov    QWORD PTR [rsp+0x238],rbp
   140066a01:	mov    QWORD PTR [rsp+0x230],r12
   140066a09:	mov    QWORD PTR [rsp+0x220],r14
   140066a11:	mov    QWORD PTR [rsp+0x218],r15
   140066a19:	sub    eax,0x1
   140066a1c:	jne    0x140066b14
   140066a22:	mov    r15d,DWORD PTR [rdx+0x4]
   140066a26:	xor    r14d,r14d
   140066a29:	cmp    r15d,0x1
   140066a2d:	jne    0x140066a57
   140066a2f:	mov    ebx,DWORD PTR [rcx+0x4]
   140066a32:	lea    r8,[rsp+0x44]
   140066a37:	add    rcx,0x4
   140066a3b:	mov    DWORD PTR [rsi],r14d
   140066a3e:	xor    r9d,r9d
   140066a41:	mov    DWORD PTR [rsp+0x40],r14d
   140066a46:	mov    edx,0x1cc
   140066a4b:	call   0x1400681fc
   140066a50:	mov    eax,ebx
   140066a52:	jmp    0x140066e5c
   140066a57:	test   r9d,r9d
   140066a5a:	jne    0x140066a95
   140066a5c:	mov    ebx,DWORD PTR [rcx+0x4]
   140066a5f:	lea    r8,[rsp+0x44]
   140066a64:	mov    DWORD PTR [rcx],r14d
   140066a67:	xor    r9d,r9d
   140066a6a:	add    rcx,0x4
   140066a6e:	mov    DWORD PTR [rsp+0x40],r14d
   140066a73:	mov    edx,0x1cc
   140066a78:	call   0x1400681fc
   140066a7d:	xor    edx,edx
   140066a7f:	mov    eax,ebx
   140066a81:	div    r15d
   140066a84:	test   edx,edx
   140066a86:	mov    DWORD PTR [rsi+0x4],edx
   140066a89:	setne  r14b
   140066a8d:	mov    DWORD PTR [rsi],r14d
   140066a90:	jmp    0x140066e5c
   140066a95:	mov    r12d,0xffffffff
   140066a9b:	mov    rdi,r14
   140066a9e:	mov    rbp,r14
   140066aa1:	cmp    r9d,r12d
   140066aa4:	je     0x140066ad5
   140066aa6:	mov    rcx,r15
   140066aa9:	nop    DWORD PTR [rax+0x0]
   140066ab0:	mov    eax,DWORD PTR [rsi+r9*4+0x4]
   140066ab5:	xor    edx,edx
   140066ab7:	shl    rbp,0x20
   140066abb:	add    r9d,r12d
   140066abe:	or     rax,rbp
   140066ac1:	shl    rdi,0x20
   140066ac5:	div    rcx
   140066ac8:	mov    eax,eax
   140066aca:	mov    rbp,rdx
   140066acd:	add    rdi,rax
   140066ad0:	cmp    r9d,r12d
   140066ad3:	jne    0x140066ab0
   140066ad5:	xor    r9d,r9d
   140066ad8:	mov    DWORD PTR [rsp+0x40],r14d
   140066add:	lea    r8,[rsp+0x44]
   140066ae2:	mov    DWORD PTR [rsi],r14d
   140066ae5:	mov    edx,0x1cc
   140066aea:	lea    rcx,[rsi+0x4]
   140066aee:	call   0x1400681fc
   140066af3:	mov    rcx,rbp
   140066af6:	mov    DWORD PTR [rsi+0x4],ebp
   140066af9:	shr    rcx,0x20
   140066afd:	mov    rax,rdi
   140066b00:	test   ecx,ecx
   140066b02:	mov    DWORD PTR [rsi+0x8],ecx
   140066b05:	setne  r14b
   140066b09:	inc    r14d
   140066b0c:	mov    DWORD PTR [rsi],r14d
   140066b0f:	jmp    0x140066e5c
   140066b14:	cmp    eax,r9d
   140066b17:	jbe    0x140066b20
   140066b19:	xor    eax,eax
   140066b1b:	jmp    0x140066e5c
   140066b20:	mov    r8d,r9d
   140066b23:	movsxd rdx,r9d
   140066b26:	sub    r8d,eax
   140066b29:	mov    QWORD PTR [rsp+0x228],r13
   140066b31:	movsxd rbx,r8d
   140066b34:	lea    r13d,[rax+0x1]
   140066b38:	mov    r10d,r9d
   140066b3b:	cmp    rdx,rbx
   140066b3e:	jl     0x140066b8c
   140066b40:	add    rcx,0x4
   140066b44:	lea    rax,[rbx*4+0x0]
   140066b4c:	mov    r11,rdi
   140066b4f:	sub    r11,rax
   140066b52:	sub    r11,rsi
   140066b55:	lea    rcx,[rcx+rdx*4]
   140066b59:	nop    DWORD PTR [rax+0x0]
   140066b60:	mov    eax,DWORD PTR [rcx]
   140066b62:	cmp    DWORD PTR [r11+rcx*1],eax
   140066b66:	jne    0x140066b79
   140066b68:	dec    r10d
   140066b6b:	dec    rdx
   140066b6e:	sub    rcx,0x4
   140066b72:	cmp    rdx,rbx
   140066b75:	jge    0x140066b60
   140066b77:	jmp    0x140066b8c
   140066b79:	movsxd rax,r10d
   140066b7c:	mov    rcx,rax
   140066b7f:	sub    rcx,rbx
   140066b82:	mov    eax,DWORD PTR [rsi+rax*4+0x4]
   140066b86:	cmp    DWORD PTR [rdi+rcx*4+0x4],eax
   140066b8a:	jae    0x140066b8f
   140066b8c:	inc    r8d
   140066b8f:	test   r8d,r8d
   140066b92:	jne    0x140066b9b
   140066b94:	xor    eax,eax
   140066b96:	jmp    0x140066e54
   140066b9b:	lea    eax,[r13-0x1]
   140066b9f:	mov    r11d,0x20
   140066ba5:	mov    r10d,DWORD PTR [rdi+rax*4+0x4]
   140066baa:	lea    eax,[r13-0x2]
   140066bae:	mov    ebx,DWORD PTR [rdi+rax*4+0x4]
   140066bb2:	bsr    eax,r10d
   140066bb6:	mov    DWORD PTR [rsp+0x278],ebx
   140066bbd:	je     0x140066bc8
   140066bbf:	mov    edx,0x1f
   140066bc4:	sub    edx,eax
   140066bc6:	jmp    0x140066bcb
   140066bc8:	mov    edx,r11d
   140066bcb:	sub    r11d,edx
   140066bce:	mov    DWORD PTR [rsp+0x270],edx
   140066bd5:	mov    DWORD PTR [rsp+0x20],r11d
   140066bda:	test   edx,edx
   140066bdc:	je     0x140066c1e
   140066bde:	mov    eax,r10d
   140066be1:	mov    edx,ebx
   140066be3:	mov    ecx,r11d
   140066be6:	shr    edx,cl
   140066be8:	mov    ecx,DWORD PTR [rsp+0x270]
   140066bef:	mov    r10d,edx
   140066bf2:	shl    eax,cl
   140066bf4:	mov    edx,ecx
   140066bf6:	shl    ebx,cl
   140066bf8:	or     r10d,eax
   140066bfb:	mov    DWORD PTR [rsp+0x278],ebx
   140066c02:	cmp    r13d,0x2
   140066c06:	jbe    0x140066c1e
   140066c08:	lea    eax,[r13-0x3]
   140066c0c:	mov    ecx,r11d
   140066c0f:	mov    eax,DWORD PTR [rdi+rax*4+0x4]
   140066c13:	shr    eax,cl
   140066c15:	or     ebx,eax
   140066c17:	mov    DWORD PTR [rsp+0x278],ebx
   140066c1e:	xor    r14d,r14d
   140066c21:	lea    ebx,[r8-0x1]
   140066c25:	mov    DWORD PTR [rsp+0x260],ebx
   140066c2c:	mov    r15d,r14d
   140066c2f:	test   ebx,ebx
   140066c31:	js     0x140066e16
   140066c37:	mov    eax,r11d
   140066c3a:	lea    edi,[rbx+r13*1]
   140066c3e:	mov    r11d,r10d
   140066c41:	mov    r12d,0xffffffff
   140066c47:	mov    QWORD PTR [rsp+0x30],r11
   140066c4c:	mov    QWORD PTR [rsp+0x38],rax
   140066c51:	cmp    edi,r9d
   140066c54:	ja     0x140066c5c
   140066c56:	mov    ebp,DWORD PTR [rsi+rdi*4+0x4]
   140066c5a:	jmp    0x140066c5f
   140066c5c:	mov    ebp,r14d
   140066c5f:	lea    eax,[rdi-0x1]
   140066c62:	mov    ecx,DWORD PTR [rsi+rax*4+0x4]
   140066c66:	lea    eax,[rdi-0x2]
   140066c69:	mov    r10d,DWORD PTR [rsi+rax*4+0x4]
   140066c6e:	mov    QWORD PTR [rsp+0x28],rcx
   140066c73:	mov    DWORD PTR [rsp+0x2c],ebp
   140066c77:	test   edx,edx
   140066c79:	je     0x140066cad
   140066c7b:	mov    rcx,QWORD PTR [rsp+0x38]
   140066c80:	mov    r8d,r10d
   140066c83:	mov    rax,QWORD PTR [rsp+0x28]
   140066c88:	shr    r8,cl
   140066c8b:	mov    ecx,edx
   140066c8d:	shl    rax,cl
   140066c90:	or     r8,rax
   140066c93:	shl    r10d,cl
   140066c96:	cmp    edi,0x3
   140066c99:	jb     0x140066cb2
   140066c9b:	mov    ecx,DWORD PTR [rsp+0x20]
   140066c9f:	lea    eax,[rdi-0x3]
   140066ca2:	mov    eax,DWORD PTR [rsi+rax*4+0x4]
   140066ca6:	shr    eax,cl
   140066ca8:	or     r10d,eax
   140066cab:	jmp    0x140066cb2
   140066cad:	mov    r8,QWORD PTR [rsp+0x28]
   140066cb2:	xor    edx,edx
   140066cb4:	mov    rax,r8
   140066cb7:	div    r11
   140066cba:	mov    ecx,edx
   140066cbc:	mov    r8,rax
   140066cbf:	cmp    rax,r12
   140066cc2:	jbe    0x140066cdb
   140066cc4:	movabs rax,0xffffffff00000001
   140066cce:	add    rax,r8
   140066cd1:	mov    r8,r12
   140066cd4:	imul   rax,r11
   140066cd8:	add    rcx,rax
   140066cdb:	cmp    rcx,r12
   140066cde:	ja     0x140066d24
   140066ce0:	mov    rbx,QWORD PTR [rsp+0x30]
   140066ce5:	mov    r11d,r10d
   140066ce8:	mov    r10d,DWORD PTR [rsp+0x278]
   140066cf0:	mov    edx,r10d
   140066cf3:	imul   rdx,r8
   140066cf7:	neg    r10
   140066cfa:	nop    WORD PTR [rax+rax*1+0x0]
   140066d00:	mov    rax,rcx
   140066d03:	shl    rax,0x20
   140066d07:	or     rax,r11
   140066d0a:	cmp    rdx,rax
   140066d0d:	jbe    0x140066d1d
   140066d0f:	dec    r8
   140066d12:	add    rdx,r10
   140066d15:	add    rcx,rbx
   140066d18:	cmp    rcx,r12
   140066d1b:	jbe    0x140066d00
   140066d1d:	mov    ebx,DWORD PTR [rsp+0x260]
   140066d24:	test   r8,r8
   140066d27:	je     0x140066ded
   140066d2d:	mov    rcx,r14
   140066d30:	test   r13d,r13d
   140066d33:	je     0x140066d8d
   140066d35:	mov    r9,QWORD PTR [rsp+0x268]
   140066d3d:	mov    edx,ebx
   140066d3f:	add    r9,0x4
   140066d43:	mov    ebx,r13d
   140066d46:	data16 nop WORD PTR [rax+rax*1+0x0]
   140066d50:	mov    eax,DWORD PTR [r9]
   140066d53:	imul   rax,r8
   140066d57:	add    rcx,rax
   140066d5a:	mov    eax,edx
   140066d5c:	mov    r10d,ecx
   140066d5f:	shr    rcx,0x20
   140066d63:	lea    r11,[rsi+rax*4]
   140066d67:	mov    eax,DWORD PTR [rsi+rax*4+0x4]
   140066d6b:	cmp    eax,r10d
   140066d6e:	jae    0x140066d73
   140066d70:	inc    rcx
   140066d73:	sub    eax,r10d
   140066d76:	inc    edx
   140066d78:	add    r9,0x4
   140066d7c:	mov    DWORD PTR [r11+0x4],eax
   140066d80:	sub    rbx,0x1
   140066d84:	jne    0x140066d50
   140066d86:	mov    ebx,DWORD PTR [rsp+0x260]
   140066d8d:	mov    eax,ebp
   140066d8f:	cmp    rax,rcx
   140066d92:	jae    0x140066de2
   140066d94:	mov    r9d,r14d
   140066d97:	test   r13d,r13d
   140066d9a:	je     0x140066ddf
   140066d9c:	mov    r11,QWORD PTR [rsp+0x268]
   140066da4:	mov    r10d,ebx
   140066da7:	add    r11,0x4
   140066dab:	mov    ebx,r13d
   140066dae:	xchg   ax,ax
   140066db0:	mov    eax,r10d
   140066db3:	lea    r11,[r11+0x4]
   140066db7:	mov    edx,DWORD PTR [rsi+rax*4+0x4]
   140066dbb:	lea    rcx,[rsi+rax*4]
   140066dbf:	mov    eax,DWORD PTR [r11-0x4]
   140066dc3:	inc    r10d
   140066dc6:	add    rdx,rax
   140066dc9:	mov    eax,r9d
   140066dcc:	add    rdx,rax
   140066dcf:	mov    r9,rdx
   140066dd2:	mov    DWORD PTR [rcx+0x4],edx
   140066dd5:	shr    r9,0x20
   140066dd9:	sub    rbx,0x1
   140066ddd:	jne    0x140066db0
   140066ddf:	dec    r8
   140066de2:	mov    ebx,DWORD PTR [rsp+0x260]
   140066de9:	lea    r9d,[rdi-0x1]
   140066ded:	mov    r11,QWORD PTR [rsp+0x30]
   140066df2:	dec    ebx
   140066df4:	mov    edx,DWORD PTR [rsp+0x270]
   140066dfb:	dec    edi
   140066dfd:	shl    r15,0x20
   140066e01:	mov    eax,r8d
   140066e04:	add    r15,rax
   140066e07:	mov    DWORD PTR [rsp+0x260],ebx
   140066e0e:	test   ebx,ebx
   140066e10:	jns    0x140066c51
   140066e16:	inc    r9d
   140066e19:	mov    ecx,r9d
   140066e1c:	cmp    r9d,DWORD PTR [rsi]
   140066e1f:	jae    0x140066e2e
   140066e21:	mov    eax,ecx
   140066e23:	inc    ecx
   140066e25:	mov    DWORD PTR [rsi+rax*4+0x4],r14d
   140066e2a:	cmp    ecx,DWORD PTR [rsi]
   140066e2c:	jb     0x140066e21
   140066e2e:	mov    DWORD PTR [rsi],r9d
   140066e31:	test   r9d,r9d
   140066e34:	je     0x140066e51
   140066e36:	data16 nop WORD PTR [rax+rax*1+0x0]
   140066e40:	mov    edx,DWORD PTR [rsi]
   140066e42:	dec    edx
   140066e44:	cmp    DWORD PTR [rsi+rdx*4+0x4],r14d
   140066e49:	jne    0x140066e51
   140066e4b:	mov    DWORD PTR [rsi],edx
   140066e4d:	test   edx,edx
   140066e4f:	jne    0x140066e40
   140066e51:	mov    rax,r15
   140066e54:	mov    r13,QWORD PTR [rsp+0x228]
   140066e5c:	mov    r14,QWORD PTR [rsp+0x220]
   140066e64:	mov    r12,QWORD PTR [rsp+0x230]
   140066e6c:	mov    rbp,QWORD PTR [rsp+0x238]
   140066e74:	mov    rbx,QWORD PTR [rsp+0x240]
   140066e7c:	mov    r15,QWORD PTR [rsp+0x218]
   140066e84:	add    rsp,0x248
   140066e8b:	pop    rdi
   140066e8c:	pop    rsi
   140066e8d:	ret    
   140066e8e:	int3   
   140066e8f:	int3   
   140066e90:	rex push rbp
   140066e92:	push   rbx
   140066e93:	push   rsi
   140066e94:	push   rdi
   140066e95:	push   r12
   140066e97:	push   r13
   140066e99:	push   r14
   140066e9b:	push   r15
   140066e9d:	lea    rbp,[rsp-0x6d8]
   140066ea5:	sub    rsp,0x7d8
   140066eac:	mov    rax,QWORD PTR [rip+0x1b02d]        # 0x140081ee0
   140066eb3:	xor    rax,rsp
   140066eb6:	mov    QWORD PTR [rbp+0x6c0],rax
   140066ebd:	mov    QWORD PTR [rsp+0x38],rcx
   140066ec2:	mov    r14,r9
   140066ec5:	lea    rcx,[rsp+0x60]
   140066eca:	mov    QWORD PTR [rsp+0x50],r9
   140066ecf:	mov    r15,r8
   140066ed2:	mov    QWORD PTR [rsp+0x70],r8
   140066ed7:	mov    esi,edx
   140066ed9:	call   0x140068d44
   140066ede:	mov    eax,DWORD PTR [rsp+0x60]
   140066ee2:	xor    r13d,r13d
   140066ee5:	and    eax,0x1f
   140066ee8:	cmp    al,0x1f
   140066eea:	jne    0x140066ef3
   140066eec:	mov    BYTE PTR [rsp+0x68],r13b
   140066ef1:	jmp    0x140066f02
   140066ef3:	lea    rcx,[rsp+0x60]
   140066ef8:	call   0x140068db0
   140066efd:	mov    BYTE PTR [rsp+0x68],0x1
   140066f02:	mov    rbx,QWORD PTR [rsp+0x38]
   140066f07:	movabs rcx,0x8000000000000000
   140066f11:	mov    rax,rbx
   140066f14:	mov    QWORD PTR [r15+0x8],r14
   140066f18:	and    rax,rcx
   140066f1b:	mov    edi,0x20
   140066f20:	neg    rax
   140066f23:	movabs r12,0xfffffffffffff
   140066f2d:	movabs rax,0x7ff0000000000000
   140066f37:	sbb    ecx,ecx
   140066f39:	and    ecx,0xd
   140066f3c:	add    ecx,edi
   140066f3e:	mov    DWORD PTR [r15],ecx
   140066f41:	test   rax,rbx
   140066f44:	jne    0x140066f72
   140066f46:	test   r12,rbx
   140066f49:	jne    0x140066f72
   140066f4b:	mov    rdx,QWORD PTR [rbp+0x740]
   140066f52:	lea    r8,[rip+0xd3e3]        # 0x14007433c
   140066f59:	mov    rcx,r14
   140066f5c:	mov    DWORD PTR [r15+0x4],r13d
   140066f60:	call   0x140060914
   140066f65:	test   eax,eax
   140066f67:	je     0x14006815e
   140066f6d:	jmp    0x140068192
   140066f72:	lea    rcx,[rsp+0x38]
   140066f77:	call   0x140061784
   140066f7c:	test   eax,eax
   140066f7e:	je     0x140066f88
   140066f80:	mov    DWORD PTR [r15+0x4],0x1
   140066f88:	sub    eax,0x1
   140066f8b:	je     0x140068140
   140066f91:	sub    eax,0x1
   140066f94:	je     0x140068121
   140066f9a:	sub    eax,0x1
   140066f9d:	je     0x140068102
   140066fa3:	cmp    eax,0x1
   140066fa6:	je     0x1400680e3
   140066fac:	movabs rax,0x7fffffffffffffff
   140066fb6:	mov    r9d,0x7ff
   140066fbc:	and    rbx,rax
   140066fbf:	inc    esi
   140066fc1:	mov    QWORD PTR [rsp+0x38],rbx
   140066fc6:	movsd  xmm0,QWORD PTR [rsp+0x38]
   140066fcc:	movsd  QWORD PTR [rsp+0x58],xmm0
   140066fd2:	mov    rdx,QWORD PTR [rsp+0x58]
   140066fd7:	mov    r8,rdx
   140066fda:	mov    DWORD PTR [rsp+0x4c],esi
   140066fde:	shr    r8,0x34
   140066fe2:	test   r9,r8
   140066fe5:	sete   cl
   140066fe8:	mov    al,cl
   140066fea:	neg    al
   140066fec:	movabs rax,0x10000000000000
   140066ff6:	sbb    r14,r14
   140066ff9:	and    rdx,r12
   140066ffc:	not    r14
   140066fff:	and    r14,rax
   140067002:	add    r14,rdx
   140067005:	neg    cl
   140067007:	sbb    eax,eax
   140067009:	and    r8d,r9d
   14006700c:	neg    eax
   14006700e:	inc    eax
   140067010:	lea    ebx,[r8-0x434]
   140067017:	add    ebx,eax
   140067019:	call   0x140068ed0
   14006701e:	call   0x140068e00
   140067023:	cvttsd2si ecx,xmm0
   140067027:	mov    DWORD PTR [rbp-0x7c],r14d
   14006702b:	mov    r10d,0x1
   140067031:	lea    eax,[rcx-0x7fffffff]
   140067037:	and    eax,0xfffffffe
   14006703a:	neg    eax
   14006703c:	sbb    r12d,r12d
   14006703f:	shr    r14,0x20
   140067043:	and    r12d,ecx
   140067046:	mov    DWORD PTR [rbp-0x78],r14d
   14006704a:	mov    eax,r14d
   14006704d:	mov    DWORD PTR [rsp+0x30],r12d
   140067052:	neg    eax
   140067054:	sbb    edx,edx
   140067056:	neg    edx
   140067058:	add    edx,r10d
   14006705b:	mov    DWORD PTR [rbp-0x80],edx
   14006705e:	test   ebx,ebx
   140067060:	js     0x14006730f
   140067066:	xor    eax,eax
   140067068:	mov    DWORD PTR [rbp+0x328],0x100000
   140067072:	mov    DWORD PTR [rbp+0x324],eax
   140067078:	lea    esi,[rax+0x2]
   14006707b:	mov    DWORD PTR [rbp+0x320],esi
   140067081:	cmp    edx,esi
   140067083:	jne    0x1400671ea
   140067089:	mov    r8d,r13d
   14006708c:	mov    ecx,r8d
   14006708f:	mov    eax,DWORD PTR [rbp+rcx*4-0x7c]
   140067093:	cmp    DWORD PTR [rbp+rcx*4+0x324],eax
   14006709a:	jne    0x1400671ea
   1400670a0:	add    r8d,r10d
   1400670a3:	cmp    r8d,esi
   1400670a6:	jne    0x14006708c
   1400670a8:	lea    r11d,[rbx+0x2]
   1400670ac:	mov    DWORD PTR [rsp+0x38],r13d
   1400670b1:	mov    r9d,r11d
   1400670b4:	mov    esi,edi
   1400670b6:	and    r11d,0x1f
   1400670ba:	shr    r9d,0x5
   1400670be:	sub    esi,r11d
   1400670c1:	mov    rbx,r10
   1400670c4:	mov    ecx,esi
   1400670c6:	shl    rbx,cl
   1400670c9:	sub    ebx,r10d
   1400670cc:	bsr    eax,r14d
   1400670d0:	mov    r12d,ebx
   1400670d3:	not    r12d
   1400670d6:	je     0x1400670dc
   1400670d8:	inc    eax
   1400670da:	jmp    0x1400670df
   1400670dc:	mov    eax,r13d
   1400670df:	sub    edi,eax
   1400670e1:	lea    eax,[r9+0x2]
   1400670e5:	cmp    r11d,edi
   1400670e8:	seta   r15b
   1400670ec:	cmp    eax,0x73
   1400670ef:	seta   r8b
   1400670f3:	cmp    eax,0x73
   1400670f6:	jne    0x140067100
   1400670f8:	mov    cl,r10b
   1400670fb:	test   r15b,r15b
   1400670fe:	jne    0x140067103
   140067100:	mov    cl,r13b
   140067103:	or     r13d,0xffffffff
   140067107:	test   r8b,r8b
   14006710a:	jne    0x1400671b1
   140067110:	test   cl,cl
   140067112:	jne    0x1400671b1
   140067118:	mov    r14d,0x72
   14006711e:	cmp    eax,r14d
   140067121:	cmovb  r14d,eax
   140067125:	cmp    r14d,r13d
   140067128:	je     0x140067186
   14006712a:	mov    r8d,r14d
   14006712d:	sub    r8d,r9d
   140067130:	lea    edi,[r8+r9*1]
   140067134:	cmp    edi,r9d
   140067137:	jb     0x140067180
   140067139:	cmp    r8d,edx
   14006713c:	jae    0x140067145
   14006713e:	mov    r10d,DWORD PTR [rbp+r8*4-0x7c]
   140067143:	jmp    0x140067148
   140067145:	xor    r10d,r10d
   140067148:	lea    eax,[r8-0x1]
   14006714c:	cmp    eax,edx
   14006714e:	jae    0x140067156
   140067150:	mov    edx,DWORD PTR [rbp+rax*4-0x7c]
   140067154:	jmp    0x140067158
   140067156:	xor    edx,edx
   140067158:	and    edx,r12d
   14006715b:	mov    ecx,esi
   14006715d:	shr    edx,cl
   14006715f:	add    r8d,r13d
   140067162:	and    r10d,ebx
   140067165:	mov    ecx,r11d
   140067168:	shl    r10d,cl
   14006716b:	or     edx,r10d
   14006716e:	lea    eax,[r8+r9*1]
   140067172:	mov    DWORD PTR [rbp+rdi*4-0x7c],edx
   140067176:	cmp    eax,r13d
   140067179:	je     0x140067180
   14006717b:	mov    edx,DWORD PTR [rbp-0x80]
   14006717e:	jmp    0x140067130
   140067180:	mov    r10d,0x1
   140067186:	xor    r13d,r13d
   140067189:	mov    ecx,r13d
   14006718c:	test   r9d,r9d
   14006718f:	je     0x1400671a0
   140067191:	mov    eax,ecx
   140067193:	add    ecx,r10d
   140067196:	mov    DWORD PTR [rbp+rax*4-0x7c],r13d
   14006719b:	cmp    ecx,r9d
   14006719e:	jne    0x140067191
   1400671a0:	test   r15b,r15b
   1400671a3:	lea    eax,[r14+0x1]
   1400671a7:	cmovne r14d,eax
   1400671ab:	mov    DWORD PTR [rbp-0x80],r14d
   1400671af:	jmp    0x1400671bb
   1400671b1:	xor    r13d,r13d
   1400671b4:	mov    r14d,r13d
   1400671b7:	mov    DWORD PTR [rbp-0x80],r13d
   1400671bb:	mov    DWORD PTR [rbp+0x154],0x4
   1400671c5:	mov    r12d,DWORD PTR [rsp+0x30]
   1400671ca:	mov    r15d,0x1
   1400671d0:	mov    DWORD PTR [rbp+0x150],r15d
   1400671d7:	mov    DWORD PTR [rbp+0x320],r15d
   1400671de:	mov    DWORD PTR [rbp+0x328],r13d
   1400671e5:	jmp    0x14006755e
   1400671ea:	and    DWORD PTR [rsp+0x38],0x0
   1400671ef:	lea    r11d,[rbx+0x1]
   1400671f3:	mov    r9d,r11d
   1400671f6:	lea    eax,[rdx-0x1]
   1400671f9:	and    r11d,0x1f
   1400671fd:	shr    r9d,0x5
   140067201:	mov    r15d,edi
   140067204:	mov    rbx,r10
   140067207:	sub    r15d,r11d
   14006720a:	mov    ecx,r15d
   14006720d:	shl    rbx,cl
   140067210:	sub    ebx,r10d
   140067213:	mov    ecx,eax
   140067215:	bsr    eax,DWORD PTR [rbp+rax*4-0x7c]
   14006721a:	mov    r13d,ebx
   14006721d:	not    r13d
   140067220:	je     0x140067226
   140067222:	inc    eax
   140067224:	jmp    0x140067228
   140067226:	xor    eax,eax
   140067228:	sub    edi,eax
   14006722a:	lea    eax,[rdx+r9*1]
   14006722e:	cmp    r11d,edi
   140067231:	seta   r12b
   140067235:	cmp    eax,0x73
   140067238:	seta   r8b
   14006723c:	cmp    eax,0x73
   14006723f:	jne    0x14006724b
   140067241:	test   r12b,r12b
   140067244:	je     0x14006724b
   140067246:	mov    cl,r10b
   140067249:	jmp    0x14006724d
   14006724b:	xor    cl,cl
   14006724d:	or     r10d,0xffffffff
   140067251:	test   r8b,r8b
   140067254:	jne    0x1400672fa
   14006725a:	test   cl,cl
   14006725c:	jne    0x1400672fa
   140067262:	mov    r14d,0x72
   140067268:	cmp    eax,r14d
   14006726b:	cmovb  r14d,eax
   14006726f:	cmp    r14d,r10d
   140067272:	je     0x1400672d0
   140067274:	mov    r8d,r14d
   140067277:	sub    r8d,r9d
   14006727a:	lea    edi,[r8+r9*1]
   14006727e:	cmp    edi,r9d
   140067281:	jb     0x1400672d0
   140067283:	cmp    r8d,edx
   140067286:	jae    0x14006728f
   140067288:	mov    r10d,DWORD PTR [rbp+r8*4-0x7c]
   14006728d:	jmp    0x140067292
   14006728f:	xor    r10d,r10d
   140067292:	lea    eax,[r8-0x1]
   140067296:	cmp    eax,edx
   140067298:	jae    0x1400672a0
   14006729a:	mov    edx,DWORD PTR [rbp+rax*4-0x7c]
   14006729e:	jmp    0x1400672a2
   1400672a0:	xor    edx,edx
   1400672a2:	and    r10d,ebx
   1400672a5:	mov    ecx,r11d
   1400672a8:	shl    r10d,cl
   1400672ab:	and    edx,r13d
   1400672ae:	mov    ecx,r15d
   1400672b1:	shr    edx,cl
   1400672b3:	or     r10d,edx
   1400672b6:	mov    DWORD PTR [rbp+rdi*4-0x7c],r10d
   1400672bb:	or     r10d,0xffffffff
   1400672bf:	add    r8d,r10d
   1400672c2:	lea    eax,[r8+r9*1]
   1400672c6:	cmp    eax,r10d
   1400672c9:	je     0x1400672d0
   1400672cb:	mov    edx,DWORD PTR [rbp-0x80]
   1400672ce:	jmp    0x14006727a
   1400672d0:	xor    r13d,r13d
   1400672d3:	mov    ecx,r13d
   1400672d6:	test   r9d,r9d
   1400672d9:	je     0x1400672e9
   1400672db:	mov    eax,ecx
   1400672dd:	inc    ecx
   1400672df:	mov    DWORD PTR [rbp+rax*4-0x7c],r13d
   1400672e4:	cmp    ecx,r9d
   1400672e7:	jne    0x1400672db
   1400672e9:	test   r12b,r12b
   1400672ec:	lea    eax,[r14+0x1]
   1400672f0:	cmovne r14d,eax
   1400672f4:	mov    DWORD PTR [rbp-0x80],r14d
   1400672f8:	jmp    0x140067304
   1400672fa:	xor    r13d,r13d
   1400672fd:	mov    r14d,r13d
   140067300:	mov    DWORD PTR [rbp-0x80],r13d
   140067304:	mov    DWORD PTR [rbp+0x154],esi
   14006730a:	jmp    0x1400671c5
   14006730f:	cmp    ebx,0xfffffc02
   140067315:	je     0x140067447
   14006731b:	xor    eax,eax
   14006731d:	mov    DWORD PTR [rbp+0x328],0x100000
   140067327:	mov    DWORD PTR [rbp+0x324],eax
   14006732d:	lea    esi,[rax+0x2]
   140067330:	mov    DWORD PTR [rbp+0x320],esi
   140067336:	cmp    edx,esi
   140067338:	jne    0x140067447
   14006733e:	mov    r8d,r13d
   140067341:	mov    ecx,r8d
   140067344:	mov    eax,DWORD PTR [rbp+rcx*4-0x7c]
   140067348:	cmp    DWORD PTR [rbp+rcx*4+0x324],eax
   14006734f:	jne    0x140067447
   140067355:	add    r8d,r10d
   140067358:	cmp    r8d,esi
   14006735b:	jne    0x140067341
   14006735d:	bsr    eax,r14d
   140067361:	mov    DWORD PTR [rsp+0x38],r13d
   140067366:	je     0x14006736c
   140067368:	inc    eax
   14006736a:	jmp    0x14006736f
   14006736c:	mov    eax,r13d
   14006736f:	sub    edi,eax
   140067371:	mov    ecx,esi
   140067373:	cmp    edi,esi
   140067375:	setb   r9b
   140067379:	or     r13d,0xffffffff
   14006737d:	cmp    ecx,edx
   14006737f:	jae    0x14006738a
   140067381:	mov    eax,ecx
   140067383:	mov    r8d,DWORD PTR [rbp+rax*4-0x7c]
   140067388:	jmp    0x14006738d
   14006738a:	xor    r8d,r8d
   14006738d:	lea    eax,[rcx-0x1]
   140067390:	cmp    eax,edx
   140067392:	jae    0x14006739a
   140067394:	mov    edx,DWORD PTR [rbp+rax*4-0x7c]
   140067398:	jmp    0x14006739c
   14006739a:	xor    edx,edx
   14006739c:	mov    eax,r8d
   14006739f:	shr    edx,0x1e
   1400673a2:	shl    eax,0x2
   1400673a5:	xor    edx,eax
   1400673a7:	mov    eax,ecx
   1400673a9:	add    ecx,r13d
   1400673ac:	mov    DWORD PTR [rbp+rax*4-0x7c],edx
   1400673b0:	cmp    ecx,r13d
   1400673b3:	je     0x1400673ba
   1400673b5:	mov    edx,DWORD PTR [rbp-0x80]
   1400673b8:	jmp    0x14006737d
   1400673ba:	neg    r9b
   1400673bd:	lea    rcx,[rbp+0x324]
   1400673c4:	sbb    r14d,r14d
   1400673c7:	xor    edx,edx
   1400673c9:	neg    r14d
   1400673cc:	add    r14d,esi
   1400673cf:	sub    esi,ebx
   1400673d1:	mov    edi,esi
   1400673d3:	mov    DWORD PTR [rbp-0x80],r14d
   1400673d7:	shr    edi,0x5
   1400673da:	mov    ebx,edi
   1400673dc:	shl    rbx,0x2
   1400673e0:	mov    r8,rbx
   1400673e3:	call   0x140058f40
   1400673e8:	and    esi,0x1f
   1400673eb:	lea    r15d,[rdi+0x1]
   1400673ef:	mov    cl,sil
   1400673f2:	mov    r8d,r15d
   1400673f5:	mov    eax,0x1
   1400673fa:	shl    r8,0x2
   1400673fe:	shl    eax,cl
   140067400:	mov    DWORD PTR [rbp+rbx*1+0x324],eax
   140067407:	xor    r13d,r13d
   14006740a:	mov    DWORD PTR [rbp+0x150],r15d
   140067411:	mov    DWORD PTR [rbp+0x320],r15d
   140067418:	test   r8,r8
   14006741b:	je     0x14006755e
   140067421:	mov    ebx,0x1cc
   140067426:	lea    rcx,[rbp+0x154]
   14006742d:	cmp    r8,rbx
   140067430:	ja     0x14006753d
   140067436:	lea    rdx,[rbp+0x324]
   14006743d:	call   0x140059180
   140067442:	jmp    0x140067557
   140067447:	lea    eax,[rdx-0x1]
   14006744a:	mov    DWORD PTR [rsp+0x38],r13d
   14006744f:	mov    ecx,eax
   140067451:	bsr    eax,DWORD PTR [rbp+rax*4-0x7c]
   140067456:	je     0x14006745c
   140067458:	inc    eax
   14006745a:	jmp    0x14006745f
   14006745c:	mov    eax,r13d
   14006745f:	sub    edi,eax
   140067461:	cmp    edi,r10d
   140067464:	setb   r9b
   140067468:	cmp    edx,0x73
   14006746b:	seta   cl
   14006746e:	cmp    edx,0x73
   140067471:	jne    0x14006747b
   140067473:	mov    al,r10b
   140067476:	test   r9b,r9b
   140067479:	jne    0x14006747e
   14006747b:	mov    al,r13b
   14006747e:	or     r13d,0xffffffff
   140067482:	test   cl,cl
   140067484:	jne    0x1400674ee
   140067486:	test   al,al
   140067488:	jne    0x1400674ee
   14006748a:	mov    r14d,0x72
   140067490:	cmp    edx,r14d
   140067493:	cmovb  r14d,edx
   140067497:	cmp    r14d,r13d
   14006749a:	je     0x1400674da
   14006749c:	mov    ecx,r14d
   14006749f:	cmp    ecx,edx
   1400674a1:	jae    0x1400674ac
   1400674a3:	mov    eax,ecx
   1400674a5:	mov    r8d,DWORD PTR [rbp+rax*4-0x7c]
   1400674aa:	jmp    0x1400674af
   1400674ac:	xor    r8d,r8d
   1400674af:	lea    eax,[rcx-0x1]
   1400674b2:	cmp    eax,edx
   1400674b4:	jae    0x1400674bc
   1400674b6:	mov    edx,DWORD PTR [rbp+rax*4-0x7c]
   1400674ba:	jmp    0x1400674be
   1400674bc:	xor    edx,edx
   1400674be:	shr    edx,0x1f
   1400674c1:	lea    eax,[r8+r8*1]
   1400674c5:	xor    edx,eax
   1400674c7:	mov    eax,ecx
   1400674c9:	add    ecx,r13d
   1400674cc:	mov    DWORD PTR [rbp+rax*4-0x7c],edx
   1400674d0:	cmp    ecx,r13d
   1400674d3:	je     0x1400674da
   1400674d5:	mov    edx,DWORD PTR [rbp-0x80]
   1400674d8:	jmp    0x14006749f
   1400674da:	xor    r13d,r13d
   1400674dd:	lea    eax,[r14+0x1]
   1400674e1:	test   r9b,r9b
   1400674e4:	cmovne r14d,eax
   1400674e8:	mov    DWORD PTR [rbp-0x80],r14d
   1400674ec:	jmp    0x1400674f8
   1400674ee:	xor    r13d,r13d
   1400674f1:	mov    r14d,r13d
   1400674f4:	mov    DWORD PTR [rbp-0x80],r13d
   1400674f8:	mov    edi,r10d
   1400674fb:	lea    rcx,[rbp+0x324]
   140067502:	sub    edi,ebx
   140067504:	xor    edx,edx
   140067506:	mov    esi,edi
   140067508:	shr    esi,0x5
   14006750b:	mov    ebx,esi
   14006750d:	shl    rbx,0x2
   140067511:	mov    r8,rbx
   140067514:	call   0x140058f40
   140067519:	and    edi,0x1f
   14006751c:	lea    r15d,[rsi+0x1]
   140067520:	mov    cl,dil
   140067523:	mov    r8d,r15d
   140067526:	mov    eax,0x1
   14006752b:	shl    eax,cl
   14006752d:	mov    DWORD PTR [rbp+rbx*1+0x324],eax
   140067534:	shl    r8,0x2
   140067538:	jmp    0x14006740a
   14006753d:	mov    r8,rbx
   140067540:	xor    edx,edx
   140067542:	call   0x140058f40
   140067547:	call   0x140060e94
   14006754c:	mov    DWORD PTR [rax],0x22
   140067552:	call   0x140060d74
   140067557:	mov    r15d,DWORD PTR [rbp+0x150]
   14006755e:	mov    eax,0xcccccccd
   140067563:	test   r12d,r12d
   140067566:	js     0x140067a2a
   14006756c:	mul    r12d
   14006756f:	mov    eax,edx
   140067571:	lea    rdx,[rip+0xfffffffffff98a88]        # 0x140000000
   140067578:	shr    eax,0x3
   14006757b:	mov    DWORD PTR [rsp+0x48],eax
   14006757f:	mov    r12d,eax
   140067582:	mov    DWORD PTR [rsp+0x40],eax
   140067586:	test   eax,eax
   140067588:	je     0x140067961
   14006758e:	mov    eax,0x26
   140067593:	mov    r13d,r12d
   140067596:	cmp    r12d,eax
   140067599:	cmova  r13d,eax
   14006759d:	mov    DWORD PTR [rsp+0x44],r13d
   1400675a2:	lea    eax,[r13-0x1]
   1400675a6:	movzx  ecx,BYTE PTR [rdx+rax*4+0x74282]
   1400675ae:	movzx  esi,BYTE PTR [rdx+rax*4+0x74283]
   1400675b6:	mov    ebx,ecx
   1400675b8:	mov    edi,eax
   1400675ba:	xor    edx,edx
   1400675bc:	shl    rbx,0x2
   1400675c0:	mov    r8,rbx
   1400675c3:	lea    eax,[rsi+rcx*1]
   1400675c6:	lea    rcx,[rbp+0x324]
   1400675cd:	mov    DWORD PTR [rbp+0x320],eax
   1400675d3:	call   0x140058f40
   1400675d8:	lea    rcx,[rip+0xfffffffffff98a21]        # 0x140000000
   1400675df:	shl    rsi,0x2
   1400675e3:	movzx  eax,WORD PTR [rcx+rdi*4+0x74280]
   1400675eb:	lea    rdx,[rcx+0x73970]
   1400675f2:	lea    rcx,[rbp+0x324]
   1400675f9:	mov    r8,rsi
   1400675fc:	add    rcx,rbx
   1400675ff:	lea    rdx,[rdx+rax*4]
   140067603:	call   0x140059180
   140067608:	mov    r11d,DWORD PTR [rbp+0x320]
   14006760f:	cmp    r11d,0x1
   140067613:	ja     0x1400676bb
   140067619:	mov    eax,DWORD PTR [rbp+0x324]
   14006761f:	test   eax,eax
   140067621:	jne    0x140067632
   140067623:	xor    r15d,r15d
   140067626:	mov    DWORD PTR [rbp+0x150],r15d
   14006762d:	jmp    0x14006793b
   140067632:	cmp    eax,0x1
   140067635:	je     0x14006793b
   14006763b:	test   r15d,r15d
   14006763e:	je     0x14006793b
   140067644:	xor    r8d,r8d
   140067647:	mov    r10,rax
   14006764a:	xor    r9d,r9d
   14006764d:	mov    ecx,DWORD PTR [rbp+r9*4+0x154]
   140067655:	mov    eax,r8d
   140067658:	imul   rcx,r10
   14006765c:	add    rcx,rax
   14006765f:	mov    r8,rcx
   140067662:	mov    DWORD PTR [rbp+r9*4+0x154],ecx
   14006766a:	shr    r8,0x20
   14006766e:	inc    r9d
   140067671:	cmp    r9d,r15d
   140067674:	jne    0x14006764d
   140067676:	test   r8d,r8d
   140067679:	je     0x1400676af
   14006767b:	cmp    DWORD PTR [rbp+0x150],0x73
   140067682:	jae    0x14006769e
   140067684:	mov    eax,DWORD PTR [rbp+0x150]
   14006768a:	mov    DWORD PTR [rbp+rax*4+0x154],r8d
   140067692:	mov    r15d,DWORD PTR [rbp+0x150]
   140067699:	inc    r15d
   14006769c:	jmp    0x140067626
   14006769e:	xor    r15d,r15d
   1400676a1:	mov    DWORD PTR [rbp+0x150],r15d
   1400676a8:	xor    al,al
   1400676aa:	jmp    0x14006793d
   1400676af:	mov    r15d,DWORD PTR [rbp+0x150]
   1400676b6:	jmp    0x14006793b
   1400676bb:	cmp    r15d,0x1
   1400676bf:	ja     0x140067772
   1400676c5:	mov    ebx,DWORD PTR [rbp+0x154]
   1400676cb:	mov    r8,r11
   1400676ce:	shl    r8,0x2
   1400676d2:	mov    r15d,r11d
   1400676d5:	mov    DWORD PTR [rbp+0x150],r11d
   1400676dc:	test   r8,r8
   1400676df:	je     0x140067721
   1400676e1:	mov    eax,0x1cc
   1400676e6:	lea    rcx,[rbp+0x154]
   1400676ed:	cmp    r8,rax
   1400676f0:	ja     0x140067700
   1400676f2:	lea    rdx,[rbp+0x324]
   1400676f9:	call   0x140059180
   1400676fe:	jmp    0x14006771a
   140067700:	mov    r8,rax
   140067703:	xor    edx,edx
   140067705:	call   0x140058f40
   14006770a:	call   0x140060e94
   14006770f:	mov    DWORD PTR [rax],0x22
   140067715:	call   0x140060d74
   14006771a:	mov    r15d,DWORD PTR [rbp+0x150]
   140067721:	test   ebx,ebx
   140067723:	je     0x140067623
   140067729:	cmp    ebx,0x1
   14006772c:	je     0x14006793b
   140067732:	test   r15d,r15d
   140067735:	je     0x14006793b
   14006773b:	xor    r8d,r8d
   14006773e:	mov    r10,rbx
   140067741:	xor    r9d,r9d
   140067744:	mov    ecx,DWORD PTR [rbp+r9*4+0x154]
   14006774c:	mov    eax,r8d
   14006774f:	imul   rcx,r10
   140067753:	add    rcx,rax
   140067756:	mov    r8,rcx
   140067759:	mov    DWORD PTR [rbp+r9*4+0x154],ecx
   140067761:	shr    r8,0x20
   140067765:	inc    r9d
   140067768:	cmp    r9d,r15d
   14006776b:	jne    0x140067744
   14006776d:	jmp    0x140067676
   140067772:	cmp    r11d,r15d
   140067775:	lea    rcx,[rbp+0x154]
   14006777c:	mov    r12d,r15d
   14006777f:	lea    r13,[rbp+0x324]
   140067786:	setb   al
   140067789:	lea    rdx,[rbp+0x154]
   140067790:	test   al,al
   140067792:	cmove  r13,rcx
   140067796:	cmovne r12d,r11d
   14006779a:	cmovne r11d,r15d
   14006779e:	lea    rcx,[rbp+0x324]
   1400677a5:	cmove  rdx,rcx
   1400677a9:	xor    r15d,r15d
   1400677ac:	xor    r10d,r10d
   1400677af:	mov    QWORD PTR [rsp+0x38],rdx
   1400677b4:	mov    DWORD PTR [rbp+0x4f0],r15d
   1400677bb:	test   r12d,r12d
   1400677be:	je     0x1400678de
   1400677c4:	mov    esi,DWORD PTR [r13+r10*4+0x0]
   1400677c9:	mov    eax,r10d
   1400677cc:	test   esi,esi
   1400677ce:	jne    0x1400677f1
   1400677d0:	cmp    r10d,r15d
   1400677d3:	jne    0x1400678d2
   1400677d9:	and    DWORD PTR [rbp+r10*4+0x4f4],esi
   1400677e1:	lea    r15d,[r10+0x1]
   1400677e5:	mov    DWORD PTR [rbp+0x4f0],r15d
   1400677ec:	jmp    0x1400678d2
   1400677f1:	xor    ebx,ebx
   1400677f3:	mov    r9d,r10d
   1400677f6:	test   r11d,r11d
   1400677f9:	je     0x1400678c3
   1400677ff:	mov    edi,r10d
   140067802:	neg    edi
   140067804:	cmp    r9d,0x73
   140067808:	je     0x140067871
   14006780a:	cmp    r9d,r15d
   14006780d:	jne    0x14006782a
   14006780f:	mov    eax,r9d
   140067812:	lea    ecx,[r10+0x1]
   140067816:	and    DWORD PTR [rbp+rax*4+0x4f4],0x0
   14006781e:	lea    eax,[rdi+r9*1]
   140067822:	add    ecx,eax
   140067824:	mov    DWORD PTR [rbp+0x4f0],ecx
   14006782a:	lea    eax,[rdi+r9*1]
   14006782e:	mov    r8d,r9d
   140067831:	mov    edx,DWORD PTR [rdx+rax*4]
   140067834:	inc    r9d
   140067837:	mov    eax,ebx
   140067839:	imul   rdx,rsi
   14006783d:	add    rdx,rax
   140067840:	mov    eax,DWORD PTR [rbp+r8*4+0x4f4]
   140067848:	add    rdx,rax
   14006784b:	lea    eax,[rdi+r9*1]
   14006784f:	mov    rbx,rdx
   140067852:	mov    DWORD PTR [rbp+r8*4+0x4f4],edx
   14006785a:	mov    r15d,DWORD PTR [rbp+0x4f0]
   140067861:	shr    rbx,0x20
   140067865:	cmp    eax,r11d
   140067868:	je     0x140067871
   14006786a:	mov    rdx,QWORD PTR [rsp+0x38]
   14006786f:	jmp    0x140067804
   140067871:	test   ebx,ebx
   140067873:	je     0x1400678c3
   140067875:	cmp    r9d,0x73
   140067879:	je     0x1400679fd
   14006787f:	cmp    r9d,r15d
   140067882:	jne    0x140067899
   140067884:	mov    eax,r9d
   140067887:	and    DWORD PTR [rbp+rax*4+0x4f4],0x0
   14006788f:	lea    eax,[r9+0x1]
   140067893:	mov    DWORD PTR [rbp+0x4f0],eax
   140067899:	mov    ecx,r9d
   14006789c:	inc    r9d
   14006789f:	mov    edx,ebx
   1400678a1:	mov    eax,DWORD PTR [rbp+rcx*4+0x4f4]
   1400678a8:	add    rdx,rax
   1400678ab:	mov    DWORD PTR [rbp+rcx*4+0x4f4],edx
   1400678b2:	mov    r15d,DWORD PTR [rbp+0x4f0]
   1400678b9:	shr    rdx,0x20
   1400678bd:	mov    ebx,edx
   1400678bf:	test   edx,edx
   1400678c1:	jne    0x140067875
   1400678c3:	cmp    r9d,0x73
   1400678c7:	je     0x1400679fd
   1400678cd:	mov    rdx,QWORD PTR [rsp+0x38]
   1400678d2:	inc    r10d
   1400678d5:	cmp    r10d,r12d
   1400678d8:	jne    0x1400677c4
   1400678de:	mov    r8d,r15d
   1400678e1:	shl    r8,0x2
   1400678e5:	mov    DWORD PTR [rbp+0x150],r15d
   1400678ec:	test   r8,r8
   1400678ef:	je     0x140067931
   1400678f1:	mov    eax,0x1cc
   1400678f6:	lea    rcx,[rbp+0x154]
   1400678fd:	cmp    r8,rax
   140067900:	ja     0x140067910
   140067902:	lea    rdx,[rbp+0x4f4]
   140067909:	call   0x140059180
   14006790e:	jmp    0x14006792a
   140067910:	mov    r8,rax
   140067913:	xor    edx,edx
   140067915:	call   0x140058f40
   14006791a:	call   0x140060e94
   14006791f:	mov    DWORD PTR [rax],0x22
   140067925:	call   0x140060d74
   14006792a:	mov    r15d,DWORD PTR [rbp+0x150]
   140067931:	mov    r12d,DWORD PTR [rsp+0x40]
   140067936:	mov    r13d,DWORD PTR [rsp+0x44]
   14006793b:	mov    al,0x1
   14006793d:	test   al,al
   14006793f:	je     0x1400679fd
   140067945:	sub    r12d,r13d
   140067948:	lea    rdx,[rip+0xfffffffffff986b1]        # 0x140000000
   14006794f:	mov    DWORD PTR [rsp+0x40],r12d
   140067954:	jne    0x14006758e
   14006795a:	mov    eax,DWORD PTR [rsp+0x48]
   14006795e:	xor    r13d,r13d
   140067961:	mov    edi,DWORD PTR [rsp+0x30]
   140067965:	lea    eax,[rax+rax*4]
   140067968:	add    eax,eax
   14006796a:	mov    ecx,edi
   14006796c:	sub    ecx,eax
   14006796e:	je     0x140067e93
   140067974:	lea    eax,[rcx-0x1]
   140067977:	mov    eax,DWORD PTR [rdx+rax*4+0x74318]
   14006797e:	test   eax,eax
   140067980:	je     0x140067a0f
   140067986:	cmp    eax,0x1
   140067989:	je     0x140067e93
   14006798f:	test   r15d,r15d
   140067992:	je     0x140067e93
   140067998:	mov    r8d,r13d
   14006799b:	mov    r9d,r13d
   14006799e:	mov    r10d,eax
   1400679a1:	mov    edx,r9d
   1400679a4:	inc    r9d
   1400679a7:	mov    eax,r8d
   1400679aa:	mov    ecx,DWORD PTR [rbp+rdx*4+0x154]
   1400679b1:	imul   rcx,r10
   1400679b5:	add    rcx,rax
   1400679b8:	mov    r8,rcx
   1400679bb:	mov    DWORD PTR [rbp+rdx*4+0x154],ecx
   1400679c2:	shr    r8,0x20
   1400679c6:	cmp    r9d,r15d
   1400679c9:	jne    0x1400679a1
   1400679cb:	test   r8d,r8d
   1400679ce:	je     0x140067a1e
   1400679d0:	cmp    DWORD PTR [rbp+0x150],0x73
   1400679d7:	jae    0x140067a0f
   1400679d9:	mov    eax,DWORD PTR [rbp+0x150]
   1400679df:	mov    DWORD PTR [rbp+rax*4+0x154],r8d
   1400679e7:	mov    r15d,DWORD PTR [rbp+0x150]
   1400679ee:	inc    r15d
   1400679f1:	mov    DWORD PTR [rbp+0x150],r15d
   1400679f8:	jmp    0x140067e93
   1400679fd:	xor    r13d,r13d
   140067a00:	mov    r15d,r13d
   140067a03:	mov    DWORD PTR [rbp+0x150],r13d
   140067a0a:	jmp    0x140067e8f
   140067a0f:	mov    r15d,r13d
   140067a12:	mov    DWORD PTR [rbp+0x150],r13d
   140067a19:	jmp    0x140067e93
   140067a1e:	mov    r15d,DWORD PTR [rbp+0x150]
   140067a25:	jmp    0x140067e93
   140067a2a:	mov    ecx,r12d
   140067a2d:	neg    ecx
   140067a2f:	mul    ecx
   140067a31:	mov    DWORD PTR [rsp+0x44],ecx
   140067a35:	mov    eax,edx
   140067a37:	lea    rdx,[rip+0xfffffffffff985c2]        # 0x140000000
   140067a3e:	shr    eax,0x3
   140067a41:	mov    DWORD PTR [rsp+0x38],eax
   140067a45:	mov    r12d,eax
   140067a48:	mov    DWORD PTR [rsp+0x40],eax
   140067a4c:	test   eax,eax
   140067a4e:	je     0x140067deb
   140067a54:	mov    eax,0x26
   140067a59:	mov    r13d,r12d
   140067a5c:	cmp    r12d,eax
   140067a5f:	cmova  r13d,eax
   140067a63:	mov    DWORD PTR [rsp+0x48],r13d
   140067a68:	lea    eax,[r13-0x1]
   140067a6c:	movzx  ecx,BYTE PTR [rdx+rax*4+0x74282]
   140067a74:	movzx  esi,BYTE PTR [rdx+rax*4+0x74283]
   140067a7c:	mov    ebx,ecx
   140067a7e:	mov    edi,eax
   140067a80:	xor    edx,edx
   140067a82:	shl    rbx,0x2
   140067a86:	mov    r8,rbx
   140067a89:	lea    eax,[rsi+rcx*1]
   140067a8c:	lea    rcx,[rbp+0x324]
   140067a93:	mov    DWORD PTR [rbp+0x320],eax
   140067a99:	call   0x140058f40
   140067a9e:	lea    rcx,[rip+0xfffffffffff9855b]        # 0x140000000
   140067aa5:	shl    rsi,0x2
   140067aa9:	movzx  eax,WORD PTR [rcx+rdi*4+0x74280]
   140067ab1:	lea    rdx,[rcx+0x73970]
   140067ab8:	lea    rcx,[rbp+0x324]
   140067abf:	mov    r8,rsi
   140067ac2:	add    rcx,rbx
   140067ac5:	lea    rdx,[rdx+rax*4]
   140067ac9:	call   0x140059180
   140067ace:	mov    edi,DWORD PTR [rbp+0x320]
   140067ad4:	cmp    edi,0x1
   140067ad7:	ja     0x140067b64
   140067add:	mov    eax,DWORD PTR [rbp+0x324]
   140067ae3:	test   eax,eax
   140067ae5:	jne    0x140067af3
   140067ae7:	xor    r14d,r14d
   140067aea:	mov    DWORD PTR [rbp-0x80],r14d
   140067aee:	jmp    0x140067dc1
   140067af3:	cmp    eax,0x1
   140067af6:	je     0x140067dc1
   140067afc:	test   r14d,r14d
   140067aff:	je     0x140067dc1
   140067b05:	xor    r8d,r8d
   140067b08:	mov    r10,rax
   140067b0b:	xor    r9d,r9d
   140067b0e:	mov    ecx,DWORD PTR [rbp+r9*4-0x7c]
   140067b13:	mov    eax,r8d
   140067b16:	imul   rcx,r10
   140067b1a:	add    rcx,rax
   140067b1d:	mov    r8,rcx
   140067b20:	mov    DWORD PTR [rbp+r9*4-0x7c],ecx
   140067b25:	shr    r8,0x20
   140067b29:	inc    r9d
   140067b2c:	cmp    r9d,r14d
   140067b2f:	jne    0x140067b0e
   140067b31:	test   r8d,r8d
   140067b34:	je     0x140067b5b
   140067b36:	cmp    DWORD PTR [rbp-0x80],0x73
   140067b3a:	jae    0x140067b4d
   140067b3c:	mov    eax,DWORD PTR [rbp-0x80]
   140067b3f:	mov    DWORD PTR [rbp+rax*4-0x7c],r8d
   140067b44:	mov    r14d,DWORD PTR [rbp-0x80]
   140067b48:	inc    r14d
   140067b4b:	jmp    0x140067aea
   140067b4d:	xor    r14d,r14d
   140067b50:	mov    DWORD PTR [rbp-0x80],r14d
   140067b54:	xor    al,al
   140067b56:	jmp    0x140067dc3
   140067b5b:	mov    r14d,DWORD PTR [rbp-0x80]
   140067b5f:	jmp    0x140067dc1
   140067b64:	cmp    r14d,0x1
   140067b68:	ja     0x140067c08
   140067b6e:	mov    ebx,DWORD PTR [rbp-0x7c]
   140067b71:	mov    r8,rdi
   140067b74:	shl    r8,0x2
   140067b78:	mov    r14d,edi
   140067b7b:	mov    DWORD PTR [rbp-0x80],edi
   140067b7e:	test   r8,r8
   140067b81:	je     0x140067bbd
   140067b83:	mov    eax,0x1cc
   140067b88:	lea    rcx,[rbp-0x7c]
   140067b8c:	cmp    r8,rax
   140067b8f:	ja     0x140067b9f
   140067b91:	lea    rdx,[rbp+0x324]
   140067b98:	call   0x140059180
   140067b9d:	jmp    0x140067bb9
   140067b9f:	mov    r8,rax
   140067ba2:	xor    edx,edx
   140067ba4:	call   0x140058f40
   140067ba9:	call   0x140060e94
   140067bae:	mov    DWORD PTR [rax],0x22
   140067bb4:	call   0x140060d74
   140067bb9:	mov    r14d,DWORD PTR [rbp-0x80]
   140067bbd:	test   ebx,ebx
   140067bbf:	je     0x140067ae7
   140067bc5:	cmp    ebx,0x1
   140067bc8:	je     0x140067dc1
   140067bce:	test   r14d,r14d
   140067bd1:	je     0x140067dc1
   140067bd7:	xor    r8d,r8d
   140067bda:	mov    r10,rbx
   140067bdd:	xor    r9d,r9d
   140067be0:	mov    ecx,DWORD PTR [rbp+r9*4-0x7c]
   140067be5:	mov    eax,r8d
   140067be8:	imul   rcx,r10
   140067bec:	add    rcx,rax
   140067bef:	mov    r8,rcx
   140067bf2:	mov    DWORD PTR [rbp+r9*4-0x7c],ecx
   140067bf7:	shr    r8,0x20
   140067bfb:	inc    r9d
   140067bfe:	cmp    r9d,r14d
   140067c01:	jne    0x140067be0
   140067c03:	jmp    0x140067b31
   140067c08:	cmp    edi,r14d
   140067c0b:	lea    rcx,[rbp-0x7c]
   140067c0f:	mov    r12d,r14d
   140067c12:	lea    r13,[rbp+0x324]
   140067c19:	setb   al
   140067c1c:	lea    rdx,[rbp-0x7c]
   140067c20:	test   al,al
   140067c22:	cmove  r13,rcx
   140067c26:	cmovne r12d,edi
   140067c2a:	cmovne edi,r14d
   140067c2e:	lea    rcx,[rbp+0x324]
   140067c35:	cmove  rdx,rcx
   140067c39:	xor    r14d,r14d
   140067c3c:	xor    r10d,r10d
   140067c3f:	mov    QWORD PTR [rsp+0x58],rdx
   140067c44:	mov    DWORD PTR [rbp+0x4f0],r14d
   140067c4b:	test   r12d,r12d
   140067c4e:	je     0x140067d6d
   140067c54:	mov    esi,DWORD PTR [r13+r10*4+0x0]
   140067c59:	mov    eax,r10d
   140067c5c:	test   esi,esi
   140067c5e:	jne    0x140067c81
   140067c60:	cmp    r10d,r14d
   140067c63:	jne    0x140067d61
   140067c69:	and    DWORD PTR [rbp+r10*4+0x4f4],esi
   140067c71:	lea    r14d,[r10+0x1]
   140067c75:	mov    DWORD PTR [rbp+0x4f0],r14d
   140067c7c:	jmp    0x140067d61
   140067c81:	xor    ebx,ebx
   140067c83:	mov    r9d,r10d
   140067c86:	test   edi,edi
   140067c88:	je     0x140067d52
   140067c8e:	mov    r11d,r10d
   140067c91:	neg    r11d
   140067c94:	cmp    r9d,0x73
   140067c98:	je     0x140067d00
   140067c9a:	cmp    r9d,r14d
   140067c9d:	jne    0x140067cba
   140067c9f:	mov    eax,r9d
   140067ca2:	lea    ecx,[r9+0x1]
   140067ca6:	and    DWORD PTR [rbp+rax*4+0x4f4],0x0
   140067cae:	lea    eax,[r10+r11*1]
   140067cb2:	add    ecx,eax
   140067cb4:	mov    DWORD PTR [rbp+0x4f0],ecx
   140067cba:	lea    eax,[r11+r9*1]
   140067cbe:	mov    r8d,r9d
   140067cc1:	mov    edx,DWORD PTR [rdx+rax*4]
   140067cc4:	inc    r9d
   140067cc7:	imul   rdx,rsi
   140067ccb:	mov    eax,DWORD PTR [rbp+r8*4+0x4f4]
   140067cd3:	add    rdx,rax
   140067cd6:	mov    eax,ebx
   140067cd8:	add    rdx,rax
   140067cdb:	lea    eax,[r11+r9*1]
   140067cdf:	mov    rbx,rdx
   140067ce2:	mov    DWORD PTR [rbp+r8*4+0x4f4],edx
   140067cea:	mov    r14d,DWORD PTR [rbp+0x4f0]
   140067cf1:	shr    rbx,0x20
   140067cf5:	cmp    eax,edi
   140067cf7:	je     0x140067d00
   140067cf9:	mov    rdx,QWORD PTR [rsp+0x58]
   140067cfe:	jmp    0x140067c94
   140067d00:	test   ebx,ebx
   140067d02:	je     0x140067d52
   140067d04:	cmp    r9d,0x73
   140067d08:	je     0x140067e65
   140067d0e:	cmp    r9d,r14d
   140067d11:	jne    0x140067d28
   140067d13:	mov    eax,r9d
   140067d16:	and    DWORD PTR [rbp+rax*4+0x4f4],0x0
   140067d1e:	lea    eax,[r9+0x1]
   140067d22:	mov    DWORD PTR [rbp+0x4f0],eax
   140067d28:	mov    ecx,r9d
   140067d2b:	inc    r9d
   140067d2e:	mov    eax,ebx
   140067d30:	mov    edx,DWORD PTR [rbp+rcx*4+0x4f4]
   140067d37:	add    rdx,rax
   140067d3a:	mov    DWORD PTR [rbp+rcx*4+0x4f4],edx
   140067d41:	mov    r14d,DWORD PTR [rbp+0x4f0]
   140067d48:	shr    rdx,0x20
   140067d4c:	mov    ebx,edx
   140067d4e:	test   edx,edx
   140067d50:	jne    0x140067d04
   140067d52:	cmp    r9d,0x73
   140067d56:	je     0x140067e65
   140067d5c:	mov    rdx,QWORD PTR [rsp+0x58]
   140067d61:	inc    r10d
   140067d64:	cmp    r10d,r12d
   140067d67:	jne    0x140067c54
   140067d6d:	mov    r8d,r14d
   140067d70:	shl    r8,0x2
   140067d74:	mov    DWORD PTR [rbp-0x80],r14d
   140067d78:	test   r8,r8
   140067d7b:	je     0x140067db7
   140067d7d:	mov    eax,0x1cc
   140067d82:	lea    rcx,[rbp-0x7c]
   140067d86:	cmp    r8,rax
   140067d89:	ja     0x140067d99
   140067d8b:	lea    rdx,[rbp+0x4f4]
   140067d92:	call   0x140059180
   140067d97:	jmp    0x140067db3
   140067d99:	mov    r8,rax
   140067d9c:	xor    edx,edx
   140067d9e:	call   0x140058f40
   140067da3:	call   0x140060e94
   140067da8:	mov    DWORD PTR [rax],0x22
   140067dae:	call   0x140060d74
   140067db3:	mov    r14d,DWORD PTR [rbp-0x80]
   140067db7:	mov    r12d,DWORD PTR [rsp+0x40]
   140067dbc:	mov    r13d,DWORD PTR [rsp+0x48]
   140067dc1:	mov    al,0x1
   140067dc3:	test   al,al
   140067dc5:	je     0x140067e65
   140067dcb:	sub    r12d,r13d
   140067dce:	lea    rdx,[rip+0xfffffffffff9822b]        # 0x140000000
   140067dd5:	mov    DWORD PTR [rsp+0x40],r12d
   140067dda:	jne    0x140067a54
   140067de0:	mov    ecx,DWORD PTR [rsp+0x44]
   140067de4:	xor    r13d,r13d
   140067de7:	mov    eax,DWORD PTR [rsp+0x38]
   140067deb:	lea    eax,[rax+rax*4]
   140067dee:	add    eax,eax
   140067df0:	sub    ecx,eax
   140067df2:	je     0x140067e8f
   140067df8:	lea    eax,[rcx-0x1]
   140067dfb:	mov    eax,DWORD PTR [rdx+rax*4+0x74318]
   140067e02:	test   eax,eax
   140067e04:	je     0x140067e68
   140067e06:	cmp    eax,0x1
   140067e09:	je     0x140067e8f
   140067e0f:	test   r14d,r14d
   140067e12:	je     0x140067e8f
   140067e14:	mov    r8d,r13d
   140067e17:	mov    r9d,r13d
   140067e1a:	mov    r10d,eax
   140067e1d:	mov    edx,r9d
   140067e20:	inc    r9d
   140067e23:	mov    eax,r8d
   140067e26:	mov    ecx,DWORD PTR [rbp+rdx*4-0x7c]
   140067e2a:	imul   rcx,r10
   140067e2e:	add    rcx,rax
   140067e31:	mov    r8,rcx
   140067e34:	mov    DWORD PTR [rbp+rdx*4-0x7c],ecx
   140067e38:	shr    r8,0x20
   140067e3c:	cmp    r9d,r14d
   140067e3f:	jne    0x140067e1d
   140067e41:	test   r8d,r8d
   140067e44:	je     0x140067e8b
   140067e46:	cmp    DWORD PTR [rbp-0x80],0x73
   140067e4a:	mov    edi,DWORD PTR [rsp+0x30]
   140067e4e:	jae    0x140067e7d
   140067e50:	mov    eax,DWORD PTR [rbp-0x80]
   140067e53:	mov    DWORD PTR [rbp+rax*4-0x7c],r8d
   140067e58:	mov    r14d,DWORD PTR [rbp-0x80]
   140067e5c:	inc    r14d
   140067e5f:	mov    DWORD PTR [rbp-0x80],r14d
   140067e63:	jmp    0x140067e93
   140067e65:	xor    r13d,r13d
   140067e68:	mov    rsi,QWORD PTR [rsp+0x50]
   140067e6d:	mov    edi,DWORD PTR [rsp+0x30]
   140067e71:	mov    rbx,rsi
   140067e74:	mov    DWORD PTR [rbp-0x80],r13d
   140067e78:	jmp    0x140067f04
   140067e7d:	mov    rsi,QWORD PTR [rsp+0x50]
   140067e82:	mov    rbx,rsi
   140067e85:	mov    DWORD PTR [rbp-0x80],r13d
   140067e89:	jmp    0x140067f04
   140067e8b:	mov    r14d,DWORD PTR [rbp-0x80]
   140067e8f:	mov    edi,DWORD PTR [rsp+0x30]
   140067e93:	mov    rsi,QWORD PTR [rsp+0x50]
   140067e98:	mov    rbx,rsi
   140067e9b:	test   r14d,r14d
   140067e9e:	je     0x140067f04
   140067ea0:	mov    r8d,r13d
   140067ea3:	mov    r9d,r13d
   140067ea6:	mov    edx,r9d
   140067ea9:	inc    r9d
   140067eac:	mov    eax,DWORD PTR [rbp+rdx*4-0x7c]
   140067eb0:	lea    rcx,[rax+rax*4]
   140067eb4:	mov    eax,r8d
   140067eb7:	lea    r8,[rax+rcx*2]
   140067ebb:	mov    DWORD PTR [rbp+rdx*4-0x7c],r8d
   140067ec0:	shr    r8,0x20
   140067ec4:	cmp    r9d,r14d
   140067ec7:	jne    0x140067ea6
   140067ec9:	test   r8d,r8d
   140067ecc:	je     0x140067f04
   140067ece:	cmp    DWORD PTR [rbp-0x80],0x73
   140067ed2:	jae    0x140067ee1
   140067ed4:	mov    eax,DWORD PTR [rbp-0x80]
   140067ed7:	mov    DWORD PTR [rbp+rax*4-0x7c],r8d
   140067edc:	inc    DWORD PTR [rbp-0x80]
   140067edf:	jmp    0x140067f04
   140067ee1:	xor    r9d,r9d
   140067ee4:	mov    DWORD PTR [rbp+0x320],r13d
   140067eeb:	lea    r8,[rbp+0x324]
   140067ef2:	mov    DWORD PTR [rbp-0x80],r13d
   140067ef6:	mov    edx,0x1cc
   140067efb:	lea    rcx,[rbp-0x7c]
   140067eff:	call   0x1400681fc
   140067f04:	lea    rdx,[rbp+0x150]
   140067f0b:	lea    rcx,[rbp-0x80]
   140067f0f:	call   0x1400669c0
   140067f14:	cmp    eax,0xa
   140067f17:	jne    0x140067fad
   140067f1d:	inc    edi
   140067f1f:	mov    BYTE PTR [rsi],0x31
   140067f22:	lea    rbx,[rsi+0x1]
   140067f26:	test   r15d,r15d
   140067f29:	je     0x140067fbd
   140067f2f:	mov    r8d,r13d
   140067f32:	mov    r9d,r13d
   140067f35:	mov    edx,r9d
   140067f38:	inc    r9d
   140067f3b:	mov    eax,DWORD PTR [rbp+rdx*4+0x154]
   140067f42:	lea    rcx,[rax+rax*4]
   140067f46:	mov    eax,r8d
   140067f49:	lea    r8,[rax+rcx*2]
   140067f4d:	mov    DWORD PTR [rbp+rdx*4+0x154],r8d
   140067f55:	shr    r8,0x20
   140067f59:	cmp    r9d,r15d
   140067f5c:	jne    0x140067f35
   140067f5e:	test   r8d,r8d
   140067f61:	je     0x140067fbd
   140067f63:	cmp    DWORD PTR [rbp+0x150],0x73
   140067f6a:	jae    0x140067f82
   140067f6c:	mov    eax,DWORD PTR [rbp+0x150]
   140067f72:	mov    DWORD PTR [rbp+rax*4+0x154],r8d
   140067f7a:	inc    DWORD PTR [rbp+0x150]
   140067f80:	jmp    0x140067fbd
   140067f82:	xor    r9d,r9d
   140067f85:	mov    DWORD PTR [rbp+0x320],r13d
   140067f8c:	lea    r8,[rbp+0x324]
   140067f93:	mov    DWORD PTR [rbp+0x150],r13d
   140067f9a:	mov    edx,0x1cc
   140067f9f:	lea    rcx,[rbp+0x154]
   140067fa6:	call   0x1400681fc
   140067fab:	jmp    0x140067fbd
   140067fad:	test   eax,eax
   140067faf:	jne    0x140067fb5
   140067fb1:	dec    edi
   140067fb3:	jmp    0x140067fbd
   140067fb5:	add    al,0x30
   140067fb7:	lea    rbx,[rsi+0x1]
   140067fbb:	mov    BYTE PTR [rsi],al
   140067fbd:	mov    rax,QWORD PTR [rsp+0x70]
   140067fc2:	mov    ecx,DWORD PTR [rsp+0x4c]
   140067fc6:	mov    DWORD PTR [rax+0x4],edi
   140067fc9:	test   edi,edi
   140067fcb:	js     0x140067fd7
   140067fcd:	cmp    ecx,0x7fffffff
   140067fd3:	ja     0x140067fd7
   140067fd5:	add    ecx,edi
   140067fd7:	mov    rax,QWORD PTR [rbp+0x740]
   140067fde:	dec    rax
   140067fe1:	mov    edi,ecx
   140067fe3:	cmp    rax,rdi
   140067fe6:	cmovb  rdi,rax
   140067fea:	add    rdi,rsi
   140067fed:	cmp    rbx,rdi
   140067ff0:	je     0x1400680de
   140067ff6:	mov    r14d,0x9
   140067ffc:	or     esi,0xffffffff
   140067fff:	mov    r10d,DWORD PTR [rbp-0x80]
   140068003:	test   r10d,r10d
   140068006:	je     0x1400680de
   14006800c:	mov    r8d,r13d
   14006800f:	mov    r9d,r13d
   140068012:	mov    edx,r9d
   140068015:	inc    r9d
   140068018:	mov    eax,DWORD PTR [rbp+rdx*4-0x7c]
   14006801c:	imul   rcx,rax,0x3b9aca00
   140068023:	mov    eax,r8d
   140068026:	add    rcx,rax
   140068029:	mov    r8,rcx
   14006802c:	mov    DWORD PTR [rbp+rdx*4-0x7c],ecx
   140068030:	shr    r8,0x20
   140068034:	cmp    r9d,r10d
   140068037:	jne    0x140068012
   140068039:	test   r8d,r8d
   14006803c:	je     0x140068074
   14006803e:	cmp    DWORD PTR [rbp-0x80],0x73
   140068042:	jae    0x140068051
   140068044:	mov    eax,DWORD PTR [rbp-0x80]
   140068047:	mov    DWORD PTR [rbp+rax*4-0x7c],r8d
   14006804c:	inc    DWORD PTR [rbp-0x80]
   14006804f:	jmp    0x140068074
   140068051:	xor    r9d,r9d
   140068054:	mov    DWORD PTR [rbp+0x320],r13d
   14006805b:	lea    r8,[rbp+0x324]
   140068062:	mov    DWORD PTR [rbp-0x80],r13d
   140068066:	mov    edx,0x1cc
   14006806b:	lea    rcx,[rbp-0x7c]
   14006806f:	call   0x1400681fc
   140068074:	lea    rdx,[rbp+0x150]
   14006807b:	lea    rcx,[rbp-0x80]
   14006807f:	call   0x1400669c0
   140068084:	mov    r10d,edi
   140068087:	mov    r8,rax
   14006808a:	sub    r10d,ebx
   14006808d:	mov    r9d,0x8
   140068093:	mov    eax,0xcccccccd
   140068098:	mul    r8d
   14006809b:	shr    edx,0x3
   14006809e:	mov    cl,dl
   1400680a0:	shl    cl,0x2
   1400680a3:	lea    eax,[rcx+rdx*1]
   1400680a6:	add    al,al
   1400680a8:	sub    r8b,al
   1400680ab:	lea    ecx,[r8+0x30]
   1400680af:	mov    r8d,edx
   1400680b2:	cmp    r10d,r9d
   1400680b5:	jb     0x1400680bd
   1400680b7:	mov    eax,r9d
   1400680ba:	mov    BYTE PTR [rax+rbx*1],cl
   1400680bd:	add    r9d,esi
   1400680c0:	cmp    r9d,esi
   1400680c3:	jne    0x140068093
   1400680c5:	mov    rax,rdi
   1400680c8:	sub    rax,rbx
   1400680cb:	cmp    rax,r14
   1400680ce:	cmovg  rax,r14
   1400680d2:	add    rbx,rax
   1400680d5:	cmp    rbx,rdi
   1400680d8:	jne    0x140067fff
   1400680de:	mov    BYTE PTR [rbx],r13b
   1400680e1:	jmp    0x14006815e
   1400680e3:	mov    rdx,QWORD PTR [rbp+0x740]
   1400680ea:	lea    r8,[rip+0xc267]        # 0x140074358
   1400680f1:	mov    rcx,r14
   1400680f4:	call   0x140060914
   1400680f9:	test   eax,eax
   1400680fb:	je     0x14006815e
   1400680fd:	jmp    0x1400681a7
   140068102:	mov    rdx,QWORD PTR [rbp+0x740]
   140068109:	lea    r8,[rip+0xc240]        # 0x140074350
   140068110:	mov    rcx,r14
   140068113:	call   0x140060914
   140068118:	test   eax,eax
   14006811a:	je     0x14006815e
   14006811c:	jmp    0x1400681bc
   140068121:	mov    rdx,QWORD PTR [rbp+0x740]
   140068128:	lea    r8,[rip+0xc219]        # 0x140074348
   14006812f:	mov    rcx,r14
   140068132:	call   0x140060914
   140068137:	test   eax,eax
   140068139:	je     0x14006815e
   14006813b:	jmp    0x1400681d1
   140068140:	mov    rdx,QWORD PTR [rbp+0x740]
   140068147:	lea    r8,[rip+0xc1f2]        # 0x140074340
   14006814e:	mov    rcx,r14
   140068151:	call   0x140060914
   140068156:	test   eax,eax
   140068158:	jne    0x1400681e6
   14006815e:	cmp    BYTE PTR [rsp+0x68],r13b
   140068163:	je     0x14006816f
   140068165:	lea    rcx,[rsp+0x60]
   14006816a:	call   0x140068d64
   14006816f:	mov    rcx,QWORD PTR [rbp+0x6c0]
   140068176:	xor    rcx,rsp
   140068179:	call   0x140055f90
   14006817e:	add    rsp,0x7d8
   140068185:	pop    r15
   140068187:	pop    r14
   140068189:	pop    r13
   14006818b:	pop    r12
   14006818d:	pop    rdi
   14006818e:	pop    rsi
   14006818f:	pop    rbx
   140068190:	pop    rbp
   140068191:	ret    
   140068192:	xor    r9d,r9d
   140068195:	mov    QWORD PTR [rsp+0x20],r13
   14006819a:	xor    r8d,r8d
   14006819d:	xor    edx,edx
   14006819f:	xor    ecx,ecx
   1400681a1:	call   0x140060d94
   1400681a6:	int3   
   1400681a7:	xor    r9d,r9d
   1400681aa:	mov    QWORD PTR [rsp+0x20],r13
   1400681af:	xor    r8d,r8d
   1400681b2:	xor    edx,edx
   1400681b4:	xor    ecx,ecx
   1400681b6:	call   0x140060d94
   1400681bb:	int3   
   1400681bc:	xor    r9d,r9d
   1400681bf:	mov    QWORD PTR [rsp+0x20],r13
   1400681c4:	xor    r8d,r8d
   1400681c7:	xor    edx,edx
   1400681c9:	xor    ecx,ecx
   1400681cb:	call   0x140060d94
   1400681d0:	int3   
   1400681d1:	xor    r9d,r9d
   1400681d4:	mov    QWORD PTR [rsp+0x20],r13
   1400681d9:	xor    r8d,r8d
   1400681dc:	xor    edx,edx
   1400681de:	xor    ecx,ecx
   1400681e0:	call   0x140060d94
   1400681e5:	int3   
   1400681e6:	xor    r9d,r9d
   1400681e9:	mov    QWORD PTR [rsp+0x20],r13
   1400681ee:	xor    r8d,r8d
   1400681f1:	xor    edx,edx
   1400681f3:	xor    ecx,ecx
   1400681f5:	call   0x140060d94
   1400681fa:	int3   
   1400681fb:	int3   
   1400681fc:	mov    QWORD PTR [rsp+0x8],rbx
   140068201:	mov    QWORD PTR [rsp+0x10],rsi
   140068206:	push   rdi
   140068207:	sub    rsp,0x20
   14006820b:	mov    rbx,r9
   14006820e:	mov    rsi,r8
   140068211:	mov    rdi,rdx
   140068214:	test   r9,r9
   140068217:	jne    0x14006821d
   140068219:	xor    eax,eax
   14006821b:	jmp    0x140068273
   14006821d:	test   rcx,rcx
   140068220:	jne    0x140068237
   140068222:	call   0x140060e94
   140068227:	mov    ebx,0x16
   14006822c:	mov    DWORD PTR [rax],ebx
   14006822e:	call   0x140060d74
   140068233:	mov    eax,ebx
   140068235:	jmp    0x140068273
   140068237:	test   r8,r8
   14006823a:	je     0x14006824e
   14006823c:	cmp    rdx,rbx
   14006823f:	jb     0x14006824e
   140068241:	mov    r8,rbx
   140068244:	mov    rdx,rsi
   140068247:	call   0x140059180
   14006824c:	jmp    0x140068219
   14006824e:	mov    r8,rdx
   140068251:	xor    edx,edx
   140068253:	call   0x140058f40
   140068258:	test   rsi,rsi
   14006825b:	je     0x140068222
   14006825d:	cmp    rdi,rbx
   140068260:	jae    0x14006826e
   140068262:	call   0x140060e94
   140068267:	mov    ebx,0x22
   14006826c:	jmp    0x14006822c
   14006826e:	mov    eax,0x16
   140068273:	mov    rbx,QWORD PTR [rsp+0x30]
   140068278:	mov    rsi,QWORD PTR [rsp+0x38]
   14006827d:	add    rsp,0x20
   140068281:	pop    rdi
   140068282:	ret    
   140068283:	int3   
   140068284:	sub    rsp,0x28
   140068288:	cmp    ecx,0xfffffffe
   14006828b:	jne    0x14006829a
   14006828d:	call   0x140060e94
   140068292:	mov    DWORD PTR [rax],0x9
   140068298:	jmp    0x1400682dc
   14006829a:	test   ecx,ecx
   14006829c:	js     0x1400682cc
   14006829e:	cmp    ecx,DWORD PTR [rip+0x378cc]        # 0x14009fb70
   1400682a4:	jae    0x1400682cc
   1400682a6:	movsxd rcx,ecx
   1400682a9:	lea    rdx,[rip+0x374c0]        # 0x14009f770
   1400682b0:	mov    rax,rcx
   1400682b3:	and    ecx,0x3f
   1400682b6:	sar    rax,0x6
   1400682ba:	shl    rcx,0x6
   1400682be:	mov    rax,QWORD PTR [rdx+rax*8]
   1400682c2:	movzx  eax,BYTE PTR [rax+rcx*1+0x38]
   1400682c7:	and    eax,0x40
   1400682ca:	jmp    0x1400682de
   1400682cc:	call   0x140060e94
   1400682d1:	mov    DWORD PTR [rax],0x9
   1400682d7:	call   0x140060d74
   1400682dc:	xor    eax,eax
   1400682de:	add    rsp,0x28
   1400682e2:	ret    
   1400682e3:	int3   
   1400682e4:	mov    rax,rsp
   1400682e7:	mov    QWORD PTR [rax+0x8],rbx
   1400682eb:	mov    QWORD PTR [rax+0x10],rbp
   1400682ef:	mov    QWORD PTR [rax+0x18],rsi
   1400682f3:	mov    QWORD PTR [rax+0x20],rdi
   1400682f7:	push   r14
   1400682f9:	xor    ebp,ebp
   1400682fb:	lea    r14,[rip+0xdaae]        # 0x140075db0
   140068302:	mov    r10d,ebp
   140068305:	mov    rsi,rcx
   140068308:	mov    r11d,0xe3
   14006830e:	lea    eax,[r11+r10*1]
   140068312:	mov    rdi,rsi
   140068315:	cdq    
   140068316:	mov    ebx,0x55
   14006831b:	sub    eax,edx
   14006831d:	sar    eax,1
   14006831f:	movsxd r8,eax
   140068322:	mov    rcx,r8
   140068325:	shl    rcx,0x4
   140068329:	mov    r9,QWORD PTR [rcx+r14*1]
   14006832d:	sub    rdi,r9
   140068330:	movzx  edx,WORD PTR [rdi+r9*1]
   140068335:	lea    ecx,[rdx-0x41]
   140068338:	cmp    cx,0x19
   14006833c:	ja     0x140068342
   14006833e:	add    dx,0x20
   140068342:	movzx  ecx,WORD PTR [r9]
   140068346:	lea    eax,[rcx-0x41]
   140068349:	cmp    ax,0x19
   14006834d:	ja     0x140068353
   14006834f:	add    cx,0x20
   140068353:	add    r9,0x2
   140068357:	sub    rbx,0x1
   14006835b:	je     0x140068367
   14006835d:	test   dx,dx
   140068360:	je     0x140068367
   140068362:	cmp    dx,cx
   140068365:	je     0x140068330
   140068367:	movzx  eax,cx
   14006836a:	movzx  ecx,dx
   14006836d:	sub    ecx,eax
   14006836f:	je     0x140068389
   140068371:	test   ecx,ecx
   140068373:	jns    0x14006837b
   140068375:	lea    r11d,[r8-0x1]
   140068379:	jmp    0x14006837f
   14006837b:	lea    r10d,[r8+0x1]
   14006837f:	cmp    r10d,r11d
   140068382:	jle    0x14006830e
   140068384:	or     eax,0xffffffff
   140068387:	jmp    0x140068394
   140068389:	mov    rax,r8
   14006838c:	add    rax,rax
   14006838f:	mov    eax,DWORD PTR [r14+rax*8+0x8]
   140068394:	mov    rbx,QWORD PTR [rsp+0x10]
   140068399:	mov    rbp,QWORD PTR [rsp+0x18]
   14006839e:	mov    rsi,QWORD PTR [rsp+0x20]
   1400683a3:	mov    rdi,QWORD PTR [rsp+0x28]
   1400683a8:	pop    r14
   1400683aa:	ret    
   1400683ab:	int3   
   1400683ac:	sub    rsp,0x28
   1400683b0:	test   rcx,rcx
   1400683b3:	je     0x1400683d7
   1400683b5:	call   0x1400682e4
   1400683ba:	test   eax,eax
   1400683bc:	js     0x1400683d7
   1400683be:	cdqe   
   1400683c0:	cmp    rax,0xe4
   1400683c6:	jae    0x1400683d7
   1400683c8:	add    rax,rax
   1400683cb:	lea    rcx,[rip+0xbf8e]        # 0x140074360
   1400683d2:	mov    eax,DWORD PTR [rcx+rax*8]
   1400683d5:	jmp    0x1400683d9
   1400683d7:	xor    eax,eax
   1400683d9:	add    rsp,0x28
   1400683dd:	ret    
   1400683de:	int3   
   1400683df:	int3   
   1400683e0:	mov    r10,rcx
   1400683e3:	test   r8,r8
   1400683e6:	je     0x140068424
   1400683e8:	movzx  r9d,BYTE PTR [r10]
   1400683ec:	inc    r10
   1400683ef:	lea    eax,[r9-0x41]
   1400683f3:	cmp    eax,0x19
   1400683f6:	ja     0x1400683fc
   1400683f8:	add    r9d,0x20
   1400683fc:	movzx  ecx,BYTE PTR [rdx]
   1400683ff:	inc    rdx
   140068402:	lea    eax,[rcx-0x41]
   140068405:	cmp    eax,0x19
   140068408:	ja     0x14006840d
   14006840a:	add    ecx,0x20
   14006840d:	sub    r8,0x1
   140068411:	je     0x14006841d
   140068413:	test   r9d,r9d
   140068416:	je     0x14006841d
   140068418:	cmp    r9d,ecx
   14006841b:	je     0x1400683e8
   14006841d:	sub    r9d,ecx
   140068420:	mov    eax,r9d
   140068423:	ret    
   140068424:	xor    eax,eax
   140068426:	ret    
   140068427:	int3   
   140068428:	sub    rsp,0x28
   14006842c:	mov    eax,DWORD PTR [rip+0x37306]        # 0x14009f738
   140068432:	test   eax,eax
   140068434:	jne    0x14006846c
   140068436:	test   rcx,rcx
   140068439:	jne    0x140068455
   14006843b:	call   0x140060e94
   140068440:	mov    DWORD PTR [rax],0x16
   140068446:	call   0x140060d74
   14006844b:	mov    eax,0x7fffffff
   140068450:	add    rsp,0x28
   140068454:	ret    
   140068455:	test   rdx,rdx
   140068458:	je     0x14006843b
   14006845a:	cmp    r8,0x7fffffff
   140068461:	ja     0x14006843b
   140068463:	add    rsp,0x28
   140068467:	jmp    0x1400683e0
   14006846c:	xor    r9d,r9d
   14006846f:	add    rsp,0x28
   140068473:	jmp    0x140068478
   140068478:	mov    rax,rsp
   14006847b:	mov    QWORD PTR [rax+0x8],rbx
   14006847f:	mov    QWORD PTR [rax+0x10],rbp
   140068483:	mov    QWORD PTR [rax+0x18],rsi
   140068487:	push   rdi
   140068488:	sub    rsp,0x40
   14006848c:	mov    rbp,r8
   14006848f:	mov    rdi,rdx
   140068492:	mov    rsi,rcx
   140068495:	test   r8,r8
   140068498:	je     0x14006853b
   14006849e:	mov    rdx,r9
   1400684a1:	lea    rcx,[rax-0x28]
   1400684a5:	call   0x14005b174
   1400684aa:	mov    ebx,0x7fffffff
   1400684af:	test   rsi,rsi
   1400684b2:	je     0x1400684be
   1400684b4:	test   rdi,rdi
   1400684b7:	je     0x1400684be
   1400684b9:	cmp    rbp,rbx
   1400684bc:	jbe    0x1400684d0
   1400684be:	call   0x140060e94
   1400684c3:	mov    DWORD PTR [rax],0x16
   1400684c9:	call   0x140060d74
   1400684ce:	jmp    0x140068524
   1400684d0:	mov    rax,QWORD PTR [rsp+0x28]
   1400684d5:	cmp    QWORD PTR [rax+0x138],0x0
   1400684dd:	jne    0x1400684f1
   1400684df:	mov    r8,rbp
   1400684e2:	mov    rdx,rdi
   1400684e5:	mov    rcx,rsi
   1400684e8:	call   0x1400683e0
   1400684ed:	mov    ebx,eax
   1400684ef:	jmp    0x140068524
   1400684f1:	sub    rsi,rdi
   1400684f4:	movzx  ecx,BYTE PTR [rsi+rdi*1]
   1400684f8:	lea    rdx,[rsp+0x28]
   1400684fd:	call   0x14005ed9c
   140068502:	movzx  ecx,BYTE PTR [rdi]
   140068505:	lea    rdx,[rsp+0x28]
   14006850a:	mov    ebx,eax
   14006850c:	call   0x14005ed9c
   140068511:	inc    rdi
   140068514:	sub    rbp,0x1
   140068518:	je     0x140068522
   14006851a:	test   ebx,ebx
   14006851c:	je     0x140068522
   14006851e:	cmp    ebx,eax
   140068520:	je     0x1400684f4
   140068522:	sub    ebx,eax
   140068524:	cmp    BYTE PTR [rsp+0x38],0x0
   140068529:	je     0x140068537
   14006852b:	mov    rax,QWORD PTR [rsp+0x20]
   140068530:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   140068537:	mov    eax,ebx
   140068539:	jmp    0x14006853d
   14006853b:	xor    eax,eax
   14006853d:	mov    rbx,QWORD PTR [rsp+0x50]
   140068542:	mov    rbp,QWORD PTR [rsp+0x58]
   140068547:	mov    rsi,QWORD PTR [rsp+0x60]
   14006854c:	add    rsp,0x40
   140068550:	pop    rdi
   140068551:	ret    
   140068552:	int3   
   140068553:	int3   
   140068554:	rex push rbp
   140068556:	push   rbx
   140068557:	push   rsi
   140068558:	push   rdi
   140068559:	push   r12
   14006855b:	push   r13
   14006855d:	push   r14
   14006855f:	push   r15
   140068561:	sub    rsp,0x88
   140068568:	lea    rbp,[rsp+0x50]
   14006856d:	mov    rax,QWORD PTR [rip+0x1996c]        # 0x140081ee0
   140068574:	xor    rax,rbp
   140068577:	mov    QWORD PTR [rbp+0x28],rax
   14006857b:	movsxd rbx,DWORD PTR [rbp+0xa0]
   140068582:	xor    r12d,r12d
   140068585:	mov    r13,QWORD PTR [rbp+0xa8]
   14006858c:	mov    r15,r9
   14006858f:	mov    DWORD PTR [rbp+0x0],r8d
   140068593:	mov    rdi,rcx
   140068596:	mov    QWORD PTR [rbp+0x8],rdx
   14006859a:	test   ebx,ebx
   14006859c:	jle    0x1400685c7
   14006859e:	mov    rdx,rbx
   1400685a1:	mov    rcx,r9
   1400685a4:	call   0x140068b64
   1400685a9:	mov    rbx,rax
   1400685ac:	movsxd rsi,DWORD PTR [rbp+0xb0]
   1400685b3:	test   esi,esi
   1400685b5:	jle    0x1400685d3
   1400685b7:	mov    rdx,rsi
   1400685ba:	mov    rcx,r13
   1400685bd:	call   0x140068b64
   1400685c2:	mov    rsi,rax
   1400685c5:	jmp    0x1400685d8
   1400685c7:	cmp    ebx,0xffffffff
   1400685ca:	jge    0x1400685ac
   1400685cc:	xor    eax,eax
   1400685ce:	jmp    0x1400688c9
   1400685d3:	cmp    esi,0xffffffff
   1400685d6:	jl     0x1400685cc
   1400685d8:	mov    r14d,DWORD PTR [rbp+0xb8]
   1400685df:	test   r14d,r14d
   1400685e2:	jne    0x1400685eb
   1400685e4:	mov    rax,QWORD PTR [rdi]
   1400685e7:	mov    r14d,DWORD PTR [rax+0xc]
   1400685eb:	mov    edi,0x1
   1400685f0:	test   ebx,ebx
   1400685f2:	je     0x1400685fc
   1400685f4:	test   esi,esi
   1400685f6:	jne    0x140068697
   1400685fc:	cmp    ebx,esi
   1400685fe:	jne    0x14006860a
   140068600:	mov    eax,0x2
   140068605:	jmp    0x1400688c9
   14006860a:	cmp    esi,edi
   14006860c:	jle    0x140068615
   14006860e:	mov    eax,edi
   140068610:	jmp    0x1400688c9
   140068615:	cmp    ebx,edi
   140068617:	jle    0x140068623
   140068619:	mov    eax,0x3
   14006861e:	jmp    0x1400688c9
   140068623:	lea    rdx,[rbp+0x10]
   140068627:	mov    ecx,r14d
   14006862a:	call   QWORD PTR [rip+0x3c60]        # 0x14006c290
   140068630:	test   eax,eax
   140068632:	je     0x1400685cc
   140068634:	test   ebx,ebx
   140068636:	jle    0x140068663
   140068638:	cmp    DWORD PTR [rbp+0x10],0x2
   14006863c:	jb     0x140068619
   14006863e:	cmp    BYTE PTR [rbp+0x16],r12b
   140068642:	lea    rax,[rbp+0x16]
   140068646:	je     0x140068619
   140068648:	cmp    BYTE PTR [rax+0x1],r12b
   14006864c:	je     0x140068619
   14006864e:	mov    cl,BYTE PTR [r15]
   140068651:	cmp    cl,BYTE PTR [rax]
   140068653:	jb     0x14006865a
   140068655:	cmp    cl,BYTE PTR [rax+0x1]
   140068658:	jbe    0x140068600
   14006865a:	add    rax,0x2
   14006865e:	cmp    BYTE PTR [rax],r12b
   140068661:	jmp    0x140068646
   140068663:	test   esi,esi
   140068665:	jle    0x140068697
   140068667:	cmp    DWORD PTR [rbp+0x10],0x2
   14006866b:	jb     0x14006860e
   14006866d:	cmp    BYTE PTR [rbp+0x16],r12b
   140068671:	lea    rax,[rbp+0x16]
   140068675:	je     0x14006860e
   140068677:	cmp    BYTE PTR [rax+0x1],r12b
   14006867b:	je     0x14006860e
   14006867d:	mov    cl,BYTE PTR [r13+0x0]
   140068681:	cmp    cl,BYTE PTR [rax]
   140068683:	jb     0x14006868e
   140068685:	cmp    cl,BYTE PTR [rax+0x1]
   140068688:	jbe    0x140068600
   14006868e:	add    rax,0x2
   140068692:	cmp    BYTE PTR [rax],r12b
   140068695:	jmp    0x140068675
   140068697:	mov    DWORD PTR [rsp+0x28],r12d
   14006869c:	mov    r9d,ebx
   14006869f:	mov    r8,r15
   1400686a2:	mov    QWORD PTR [rsp+0x20],r12
   1400686a7:	mov    edx,0x9
   1400686ac:	mov    ecx,r14d
   1400686af:	call   QWORD PTR [rip+0x3beb]        # 0x14006c2a0
   1400686b5:	movsxd r12,eax
   1400686b8:	test   eax,eax
   1400686ba:	je     0x1400685cc
   1400686c0:	mov    rdx,r12
   1400686c3:	movabs r8,0xffffffffffffff0
   1400686cd:	add    rdx,rdx
   1400686d0:	lea    rcx,[rdx+0x10]
   1400686d4:	cmp    rdx,rcx
   1400686d7:	sbb    rax,rax
   1400686da:	test   rcx,rax
   1400686dd:	je     0x140068751
   1400686df:	lea    rcx,[rdx+0x10]
   1400686e3:	cmp    rdx,rcx
   1400686e6:	sbb    rax,rax
   1400686e9:	and    rax,rcx
   1400686ec:	cmp    rax,0x400
   1400686f2:	lea    rax,[rdx+0x10]
   1400686f6:	ja     0x14006872f
   1400686f8:	cmp    rdx,rax
   1400686fb:	sbb    rcx,rcx
   1400686fe:	and    rcx,rax
   140068701:	lea    rax,[rcx+0xf]
   140068705:	cmp    rax,rcx
   140068708:	ja     0x14006870d
   14006870a:	mov    rax,r8
   14006870d:	and    rax,0xfffffffffffffff0
   140068711:	call   0x140055f20
   140068716:	sub    rsp,rax
   140068719:	lea    rdi,[rsp+0x50]
   14006871e:	test   rdi,rdi
   140068721:	je     0x1400688af
   140068727:	mov    DWORD PTR [rdi],0xcccc
   14006872d:	jmp    0x14006874b
   14006872f:	cmp    rdx,rax
   140068732:	sbb    rcx,rcx
   140068735:	and    rcx,rax
   140068738:	call   0x140060a0c
   14006873d:	mov    rdi,rax
   140068740:	test   rax,rax
   140068743:	je     0x140068753
   140068745:	mov    DWORD PTR [rax],0xdddd
   14006874b:	add    rdi,0x10
   14006874f:	jmp    0x140068753
   140068751:	xor    edi,edi
   140068753:	test   rdi,rdi
   140068756:	je     0x1400688af
   14006875c:	mov    DWORD PTR [rsp+0x28],r12d
   140068761:	mov    r9d,ebx
   140068764:	mov    r8,r15
   140068767:	mov    QWORD PTR [rsp+0x20],rdi
   14006876c:	mov    edx,0x1
   140068771:	mov    ecx,r14d
   140068774:	call   QWORD PTR [rip+0x3b26]        # 0x14006c2a0
   14006877a:	test   eax,eax
   14006877c:	je     0x1400688af
   140068782:	and    DWORD PTR [rsp+0x28],0x0
   140068787:	mov    r9d,esi
   14006878a:	and    QWORD PTR [rsp+0x20],0x0
   140068790:	mov    r8,r13
   140068793:	mov    edx,0x9
   140068798:	mov    ecx,r14d
   14006879b:	call   QWORD PTR [rip+0x3aff]        # 0x14006c2a0
   1400687a1:	movsxd r15,eax
   1400687a4:	test   eax,eax
   1400687a6:	je     0x1400688af
   1400687ac:	mov    r8,r15
   1400687af:	add    r8,r8
   1400687b2:	lea    rdx,[r8+0x10]
   1400687b6:	cmp    r8,rdx
   1400687b9:	sbb    rcx,rcx
   1400687bc:	test   rdx,rcx
   1400687bf:	je     0x14006883a
   1400687c1:	lea    rcx,[r8+0x10]
   1400687c5:	cmp    r8,rcx
   1400687c8:	sbb    rax,rax
   1400687cb:	and    rax,rcx
   1400687ce:	cmp    rax,0x400
   1400687d4:	lea    rax,[r8+0x10]
   1400687d8:	ja     0x140068818
   1400687da:	cmp    r8,rax
   1400687dd:	sbb    rcx,rcx
   1400687e0:	and    rcx,rax
   1400687e3:	lea    rax,[rcx+0xf]
   1400687e7:	cmp    rax,rcx
   1400687ea:	ja     0x1400687f6
   1400687ec:	movabs rax,0xffffffffffffff0
   1400687f6:	and    rax,0xfffffffffffffff0
   1400687fa:	call   0x140055f20
   1400687ff:	sub    rsp,rax
   140068802:	lea    rbx,[rsp+0x50]
   140068807:	test   rbx,rbx
   14006880a:	je     0x140068895
   140068810:	mov    DWORD PTR [rbx],0xcccc
   140068816:	jmp    0x140068834
   140068818:	cmp    r8,rax
   14006881b:	sbb    rcx,rcx
   14006881e:	and    rcx,rax
   140068821:	call   0x140060a0c
   140068826:	mov    rbx,rax
   140068829:	test   rax,rax
   14006882c:	je     0x14006883c
   14006882e:	mov    DWORD PTR [rax],0xdddd
   140068834:	add    rbx,0x10
   140068838:	jmp    0x14006883c
   14006883a:	xor    ebx,ebx
   14006883c:	test   rbx,rbx
   14006883f:	je     0x140068895
   140068841:	mov    DWORD PTR [rsp+0x28],r15d
   140068846:	mov    r9d,esi
   140068849:	mov    r8,r13
   14006884c:	mov    QWORD PTR [rsp+0x20],rbx
   140068851:	mov    edx,0x1
   140068856:	mov    ecx,r14d
   140068859:	call   QWORD PTR [rip+0x3a41]        # 0x14006c2a0
   14006885f:	test   eax,eax
   140068861:	je     0x140068895
   140068863:	and    QWORD PTR [rsp+0x40],0x0
   140068869:	mov    r9d,r12d
   14006886c:	and    QWORD PTR [rsp+0x38],0x0
   140068872:	mov    r8,rdi
   140068875:	and    QWORD PTR [rsp+0x30],0x0
   14006887b:	mov    edx,DWORD PTR [rbp+0x0]
   14006887e:	mov    rcx,QWORD PTR [rbp+0x8]
   140068882:	mov    DWORD PTR [rsp+0x28],r15d
   140068887:	mov    QWORD PTR [rsp+0x20],rbx
   14006888c:	call   0x140062a84
   140068891:	mov    esi,eax
   140068893:	jmp    0x140068897
   140068895:	xor    esi,esi
   140068897:	test   rbx,rbx
   14006889a:	je     0x1400688b1
   14006889c:	lea    rcx,[rbx-0x10]
   1400688a0:	cmp    DWORD PTR [rcx],0xdddd
   1400688a6:	jne    0x1400688b1
   1400688a8:	call   0x1400609cc
   1400688ad:	jmp    0x1400688b1
   1400688af:	xor    esi,esi
   1400688b1:	test   rdi,rdi
   1400688b4:	je     0x1400688c7
   1400688b6:	lea    rcx,[rdi-0x10]
   1400688ba:	cmp    DWORD PTR [rcx],0xdddd
   1400688c0:	jne    0x1400688c7
   1400688c2:	call   0x1400609cc
   1400688c7:	mov    eax,esi
   1400688c9:	mov    rcx,QWORD PTR [rbp+0x28]
   1400688cd:	xor    rcx,rbp
   1400688d0:	call   0x140055f90
   1400688d5:	lea    rsp,[rbp+0x38]
   1400688d9:	pop    r15
   1400688db:	pop    r14
   1400688dd:	pop    r13
   1400688df:	pop    r12
   1400688e1:	pop    rdi
   1400688e2:	pop    rsi
   1400688e3:	pop    rbx
   1400688e4:	pop    rbp
   1400688e5:	ret    
   1400688e6:	int3   
   1400688e7:	int3   
   1400688e8:	mov    QWORD PTR [rsp+0x8],rbx
   1400688ed:	mov    QWORD PTR [rsp+0x10],rsi
   1400688f2:	push   rdi
   1400688f3:	sub    rsp,0x60
   1400688f7:	mov    rsi,rdx
   1400688fa:	mov    rbx,r9
   1400688fd:	mov    rdx,rcx
   140068900:	mov    edi,r8d
   140068903:	lea    rcx,[rsp+0x40]
   140068908:	call   0x14005b174
   14006890d:	mov    eax,DWORD PTR [rsp+0xa8]
   140068914:	lea    rcx,[rsp+0x48]
   140068919:	mov    DWORD PTR [rsp+0x38],eax
   14006891d:	mov    r9,rbx
   140068920:	mov    eax,DWORD PTR [rsp+0xa0]
   140068927:	mov    r8d,edi
   14006892a:	mov    DWORD PTR [rsp+0x30],eax
   14006892e:	mov    rdx,rsi
   140068931:	mov    rax,QWORD PTR [rsp+0x98]
   140068939:	mov    QWORD PTR [rsp+0x28],rax
   14006893e:	mov    eax,DWORD PTR [rsp+0x90]
   140068945:	mov    DWORD PTR [rsp+0x20],eax
   140068949:	call   0x140068554
   14006894e:	cmp    BYTE PTR [rsp+0x58],0x0
   140068953:	je     0x140068961
   140068955:	mov    rcx,QWORD PTR [rsp+0x40]
   14006895a:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   140068961:	mov    rbx,QWORD PTR [rsp+0x70]
   140068966:	mov    rsi,QWORD PTR [rsp+0x78]
   14006896b:	add    rsp,0x60
   14006896f:	pop    rdi
   140068970:	ret    
   140068971:	int3   
   140068972:	int3   
   140068973:	int3   
   140068974:	mov    QWORD PTR [rsp+0x8],rbx
   140068979:	push   rdi
   14006897a:	sub    rsp,0x20
   14006897e:	mov    rbx,rcx
   140068981:	test   rcx,rcx
   140068984:	jne    0x14006899b
   140068986:	call   0x140060e94
   14006898b:	mov    DWORD PTR [rax],0x16
   140068991:	call   0x140060d74
   140068996:	or     eax,0xffffffff
   140068999:	jmp    0x1400689ec
   14006899b:	or     edi,0xffffffff
   14006899e:	mov    eax,DWORD PTR [rcx+0x14]
   1400689a1:	shr    eax,0xd
   1400689a4:	test   al,0x1
   1400689a6:	je     0x1400689e2
   1400689a8:	call   0x14005e7bc
   1400689ad:	mov    rcx,rbx
   1400689b0:	mov    edi,eax
   1400689b2:	call   0x1400631ec
   1400689b7:	mov    rcx,rbx
   1400689ba:	call   0x14005e9b4
   1400689bf:	mov    ecx,eax
   1400689c1:	call   0x1400694f0
   1400689c6:	test   eax,eax
   1400689c8:	jns    0x1400689cf
   1400689ca:	or     edi,0xffffffff
   1400689cd:	jmp    0x1400689e2
   1400689cf:	mov    rcx,QWORD PTR [rbx+0x28]
   1400689d3:	test   rcx,rcx
   1400689d6:	je     0x1400689e2
   1400689d8:	call   0x1400609cc
   1400689dd:	and    QWORD PTR [rbx+0x28],0x0
   1400689e2:	mov    rcx,rbx
   1400689e5:	call   0x140069650
   1400689ea:	mov    eax,edi
   1400689ec:	mov    rbx,QWORD PTR [rsp+0x30]
   1400689f1:	add    rsp,0x20
   1400689f5:	pop    rdi
   1400689f6:	ret    
   1400689f7:	int3   
   1400689f8:	mov    QWORD PTR [rsp+0x10],rbx
   1400689fd:	mov    QWORD PTR [rsp+0x8],rcx
   140068a02:	push   rdi
   140068a03:	sub    rsp,0x20
   140068a07:	mov    rbx,rcx
   140068a0a:	xor    eax,eax
   140068a0c:	test   rcx,rcx
   140068a0f:	setne  al
   140068a12:	test   eax,eax
   140068a14:	jne    0x140068a2b
   140068a16:	call   0x140060e94
   140068a1b:	mov    DWORD PTR [rax],0x16
   140068a21:	call   0x140060d74
   140068a26:	or     eax,0xffffffff
   140068a29:	jmp    0x140068a56
   140068a2b:	mov    eax,DWORD PTR [rcx+0x14]
   140068a2e:	shr    eax,0xc
   140068a31:	test   al,0x1
   140068a33:	je     0x140068a3c
   140068a35:	call   0x140069650
   140068a3a:	jmp    0x140068a26
   140068a3c:	call   0x14005e7a4
   140068a41:	nop
   140068a42:	mov    rcx,rbx
   140068a45:	call   0x140068974
   140068a4a:	mov    edi,eax
   140068a4c:	mov    rcx,rbx
   140068a4f:	call   0x14005e7b0
   140068a54:	mov    eax,edi
   140068a56:	mov    rbx,QWORD PTR [rsp+0x38]
   140068a5b:	add    rsp,0x20
   140068a5f:	pop    rdi
   140068a60:	ret    
   140068a61:	int3   
   140068a62:	int3   
   140068a63:	int3   
   140068a64:	mov    QWORD PTR [rsp+0x8],rbx
   140068a69:	mov    QWORD PTR [rsp+0x10],rsi
   140068a6e:	push   rdi
   140068a6f:	sub    rsp,0x20
   140068a73:	movsxd rbx,ecx
   140068a76:	mov    edi,r8d
   140068a79:	mov    ecx,ebx
   140068a7b:	mov    rsi,rdx
   140068a7e:	call   0x140064130
   140068a83:	cmp    rax,0xffffffffffffffff
   140068a87:	jne    0x140068a9a
   140068a89:	call   0x140060e94
   140068a8e:	mov    DWORD PTR [rax],0x9
   140068a94:	or     rax,0xffffffffffffffff
   140068a98:	jmp    0x140068aed
   140068a9a:	mov    r9d,edi
   140068a9d:	lea    r8,[rsp+0x48]
   140068aa2:	mov    rdx,rsi
   140068aa5:	mov    rcx,rax
   140068aa8:	call   QWORD PTR [rip+0x381a]        # 0x14006c2c8
   140068aae:	test   eax,eax
   140068ab0:	jne    0x140068ac1
   140068ab2:	call   QWORD PTR [rip+0x3710]        # 0x14006c1c8
   140068ab8:	mov    ecx,eax
   140068aba:	call   0x140060e24
   140068abf:	jmp    0x140068a94
   140068ac1:	mov    rax,QWORD PTR [rsp+0x48]
   140068ac6:	cmp    rax,0xffffffffffffffff
   140068aca:	je     0x140068a94
   140068acc:	mov    rdx,rbx
   140068acf:	lea    r8,[rip+0x36c9a]        # 0x14009f770
   140068ad6:	and    edx,0x3f
   140068ad9:	mov    rcx,rbx
   140068adc:	sar    rcx,0x6
   140068ae0:	shl    rdx,0x6
   140068ae4:	mov    rcx,QWORD PTR [r8+rcx*8]
   140068ae8:	and    BYTE PTR [rcx+rdx*1+0x38],0xfd
   140068aed:	mov    rbx,QWORD PTR [rsp+0x30]
   140068af2:	mov    rsi,QWORD PTR [rsp+0x38]
   140068af7:	add    rsp,0x20
   140068afb:	pop    rdi
   140068afc:	ret    
   140068afd:	int3   
   140068afe:	int3   
   140068aff:	int3   
   140068b00:	jmp    0x140068a64
   140068b05:	int3   
   140068b06:	int3   
   140068b07:	int3   
   140068b08:	mov    WORD PTR [rsp+0x8],cx
   140068b0d:	sub    rsp,0x38
   140068b11:	mov    rcx,QWORD PTR [rip+0x19ce8]        # 0x140082800
   140068b18:	cmp    rcx,0xfffffffffffffffe
   140068b1c:	jne    0x140068b2a
   140068b1e:	call   0x140069694
   140068b23:	mov    rcx,QWORD PTR [rip+0x19cd6]        # 0x140082800
   140068b2a:	cmp    rcx,0xffffffffffffffff
   140068b2e:	jne    0x140068b37
   140068b30:	mov    eax,0xffff
   140068b35:	jmp    0x140068b5c
   140068b37:	and    QWORD PTR [rsp+0x20],0x0
   140068b3d:	lea    r9,[rsp+0x48]
   140068b42:	mov    r8d,0x1
   140068b48:	lea    rdx,[rsp+0x40]
   140068b4d:	call   QWORD PTR [rip+0x37bd]        # 0x14006c310
   140068b53:	test   eax,eax
   140068b55:	je     0x140068b30
   140068b57:	movzx  eax,WORD PTR [rsp+0x40]
   140068b5c:	add    rsp,0x38
   140068b60:	ret    
   140068b61:	int3   
   140068b62:	int3   
   140068b63:	int3   
   140068b64:	xor    eax,eax
   140068b66:	cmp    BYTE PTR [rcx],al
   140068b68:	je     0x140068b78
   140068b6a:	cmp    rax,rdx
   140068b6d:	je     0x140068b78
   140068b6f:	inc    rax
   140068b72:	cmp    BYTE PTR [rax+rcx*1],0x0
   140068b76:	jne    0x140068b6a
   140068b78:	ret    
   140068b79:	int3   
   140068b7a:	int3   
   140068b7b:	int3   
   140068b7c:	mov    QWORD PTR [rsp+0x8],rbx
   140068b81:	push   rdi
   140068b82:	sub    rsp,0x20
   140068b86:	xor    r10d,r10d
   140068b89:	mov    r11,rdx
   140068b8c:	test   r9,r9
   140068b8f:	jne    0x140068bbd
   140068b91:	test   rcx,rcx
   140068b94:	jne    0x140068bc2
   140068b96:	test   rdx,rdx
   140068b99:	je     0x140068baf
   140068b9b:	call   0x140060e94
   140068ba0:	mov    ebx,0x16
   140068ba5:	mov    DWORD PTR [rax],ebx
   140068ba7:	call   0x140060d74
   140068bac:	mov    r10d,ebx
   140068baf:	mov    eax,r10d
   140068bb2:	mov    rbx,QWORD PTR [rsp+0x30]
   140068bb7:	add    rsp,0x20
   140068bbb:	pop    rdi
   140068bbc:	ret    
   140068bbd:	test   rcx,rcx
   140068bc0:	je     0x140068b9b
   140068bc2:	test   rdx,rdx
   140068bc5:	je     0x140068b9b
   140068bc7:	test   r9,r9
   140068bca:	jne    0x140068bd1
   140068bcc:	mov    BYTE PTR [rcx],r10b
   140068bcf:	jmp    0x140068baf
   140068bd1:	test   r8,r8
   140068bd4:	jne    0x140068bdb
   140068bd6:	mov    BYTE PTR [rcx],r10b
   140068bd9:	jmp    0x140068b9b
   140068bdb:	sub    r8,rcx
   140068bde:	mov    rdx,rcx
   140068be1:	mov    rbx,r11
   140068be4:	mov    rdi,r9
   140068be7:	cmp    r9,0xffffffffffffffff
   140068beb:	jne    0x140068c02
   140068bed:	mov    al,BYTE PTR [r8+rdx*1]
   140068bf1:	mov    BYTE PTR [rdx],al
   140068bf3:	inc    rdx
   140068bf6:	test   al,al
   140068bf8:	je     0x140068c23
   140068bfa:	sub    rbx,0x1
   140068bfe:	jne    0x140068bed
   140068c00:	jmp    0x140068c23
   140068c02:	mov    al,BYTE PTR [r8+rdx*1]
   140068c06:	mov    BYTE PTR [rdx],al
   140068c08:	inc    rdx
   140068c0b:	test   al,al
   140068c0d:	je     0x140068c1b
   140068c0f:	sub    rbx,0x1
   140068c13:	je     0x140068c1b
   140068c15:	sub    rdi,0x1
   140068c19:	jne    0x140068c02
   140068c1b:	test   rdi,rdi
   140068c1e:	jne    0x140068c23
   140068c20:	mov    BYTE PTR [rdx],r10b
   140068c23:	test   rbx,rbx
   140068c26:	jne    0x140068baf
   140068c28:	cmp    r9,0xffffffffffffffff
   140068c2c:	jne    0x140068c3c
   140068c2e:	mov    BYTE PTR [rcx+r11*1-0x1],r10b
   140068c33:	lea    r10d,[rbx+0x50]
   140068c37:	jmp    0x140068baf
   140068c3c:	mov    BYTE PTR [rcx],r10b
   140068c3f:	call   0x140060e94
   140068c44:	mov    ebx,0x22
   140068c49:	jmp    0x140068ba5
   140068c4e:	int3   
   140068c4f:	int3   
   140068c50:	xor    r8d,r8d
   140068c53:	jmp    0x140068c58
   140068c58:	mov    QWORD PTR [rsp+0x8],rbx
   140068c5d:	push   rdi
   140068c5e:	sub    rsp,0x40
   140068c62:	mov    rbx,rdx
   140068c65:	mov    rdi,rcx
   140068c68:	test   rcx,rcx
   140068c6b:	jne    0x140068c81
   140068c6d:	call   0x140060e94
   140068c72:	mov    DWORD PTR [rax],0x16
   140068c78:	call   0x140060d74
   140068c7d:	xor    eax,eax
   140068c7f:	jmp    0x140068ce3
   140068c81:	test   rdx,rdx
   140068c84:	je     0x140068c6d
   140068c86:	cmp    rcx,rdx
   140068c89:	jae    0x140068c7d
   140068c8b:	mov    rdx,r8
   140068c8e:	lea    rcx,[rsp+0x20]
   140068c93:	call   0x14005b174
   140068c98:	mov    rcx,QWORD PTR [rsp+0x30]
   140068c9d:	cmp    DWORD PTR [rcx+0x8],0x0
   140068ca1:	jne    0x140068ca8
   140068ca3:	dec    rbx
   140068ca6:	jmp    0x140068ccd
   140068ca8:	lea    rdx,[rbx-0x1]
   140068cac:	dec    rdx
   140068caf:	cmp    rdi,rdx
   140068cb2:	ja     0x140068cbe
   140068cb4:	movzx  eax,BYTE PTR [rdx]
   140068cb7:	test   BYTE PTR [rax+rcx*1+0x19],0x4
   140068cbc:	jne    0x140068cac
   140068cbe:	mov    rcx,rbx
   140068cc1:	sub    rcx,rdx
   140068cc4:	and    ecx,0x1
   140068cc7:	sub    rbx,rcx
   140068cca:	dec    rbx
   140068ccd:	cmp    BYTE PTR [rsp+0x38],0x0
   140068cd2:	je     0x140068ce0
   140068cd4:	mov    rcx,QWORD PTR [rsp+0x20]
   140068cd9:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   140068ce0:	mov    rax,rbx
   140068ce3:	mov    rbx,QWORD PTR [rsp+0x50]
   140068ce8:	add    rsp,0x40
   140068cec:	pop    rdi
   140068ced:	ret    
   140068cee:	int3   
   140068cef:	int3   
   140068cf0:	sub    rsp,0x28
   140068cf4:	call   0x140065284
   140068cf9:	xor    ecx,ecx
   140068cfb:	test   al,al
   140068cfd:	sete   cl
   140068d00:	mov    eax,ecx
   140068d02:	add    rsp,0x28
   140068d06:	ret    
   140068d07:	int3   
   140068d08:	sub    rsp,0x28
   140068d0c:	test   rcx,rcx
   140068d0f:	jne    0x140068d2a
   140068d11:	call   0x140060e94
   140068d16:	mov    DWORD PTR [rax],0x16
   140068d1c:	call   0x140060d74
   140068d21:	or     rax,0xffffffffffffffff
   140068d25:	add    rsp,0x28
   140068d29:	ret    
   140068d2a:	mov    r8,rcx
   140068d2d:	xor    edx,edx
   140068d2f:	mov    rcx,QWORD PTR [rip+0x3722a]        # 0x14009ff60
   140068d36:	add    rsp,0x28
   140068d3a:	rex.W jmp QWORD PTR [rip+0x3577]        # 0x14006c2b8
   140068d41:	int3   
   140068d42:	int3   
   140068d43:	int3   
   140068d44:	rex push rbx
   140068d46:	sub    rsp,0x20
   140068d4a:	mov    rbx,rcx
   140068d4d:	call   0x1400696f0
   140068d52:	mov    DWORD PTR [rbx],eax
   140068d54:	call   0x140069708
   140068d59:	mov    DWORD PTR [rbx+0x4],eax
   140068d5c:	xor    eax,eax
   140068d5e:	add    rsp,0x20
   140068d62:	pop    rbx
   140068d63:	ret    
   140068d64:	rex push rbx
   140068d66:	sub    rsp,0x20
   140068d6a:	and    DWORD PTR [rsp+0x30],0x0
   140068d6f:	mov    rbx,rcx
   140068d72:	mov    ecx,DWORD PTR [rcx]
   140068d74:	and    DWORD PTR [rsp+0x34],0x0
   140068d79:	call   0x14006971c
   140068d7e:	mov    ecx,DWORD PTR [rbx+0x4]
   140068d81:	call   0x140069728
   140068d86:	lea    rcx,[rsp+0x30]
   140068d8b:	call   0x140068d44
   140068d90:	mov    eax,DWORD PTR [rsp+0x30]
   140068d94:	cmp    DWORD PTR [rbx],eax
   140068d96:	jne    0x140068da5
   140068d98:	mov    eax,DWORD PTR [rsp+0x34]
   140068d9c:	cmp    DWORD PTR [rbx+0x4],eax
   140068d9f:	jne    0x140068da5
   140068da1:	xor    eax,eax
   140068da3:	jmp    0x140068daa
   140068da5:	mov    eax,0x1
   140068daa:	add    rsp,0x20
   140068dae:	pop    rbx
   140068daf:	ret    
   140068db0:	rex push rbx
   140068db2:	sub    rsp,0x20
   140068db6:	and    DWORD PTR [rsp+0x38],0x0
   140068dbb:	mov    rbx,rcx
   140068dbe:	and    DWORD PTR [rsp+0x3c],0x0
   140068dc3:	lea    rcx,[rsp+0x38]
   140068dc8:	call   0x140068d44
   140068dcd:	test   eax,eax
   140068dcf:	je     0x140068dd8
   140068dd1:	mov    eax,0x1
   140068dd6:	jmp    0x140068dfa
   140068dd8:	mov    rax,QWORD PTR [rsp+0x38]
   140068ddd:	lea    rcx,[rsp+0x38]
   140068de2:	or     DWORD PTR [rsp+0x38],0x1f
   140068de7:	mov    QWORD PTR [rbx],rax
   140068dea:	call   0x140068d64
   140068def:	test   eax,eax
   140068df1:	jne    0x140068dd1
   140068df3:	call   0x140069778
   140068df8:	xor    eax,eax
   140068dfa:	add    rsp,0x20
   140068dfe:	pop    rbx
   140068dff:	ret    
   140068e00:	xor    r8d,r8d
   140068e03:	movsd  QWORD PTR [rsp+0x8],xmm0
   140068e09:	mov    rdx,QWORD PTR [rsp+0x8]
   140068e0e:	movabs rcx,0x7fffffffffffffff
   140068e18:	mov    rax,rdx
   140068e1b:	and    rax,rcx
   140068e1e:	movabs rcx,0x4340000000000000
   140068e28:	cmp    rdx,rax
   140068e2b:	setne  r8b
   140068e2f:	cmp    rax,rcx
   140068e32:	jb     0x140068e4b
   140068e34:	movabs rcx,0x7ff0000000000000
   140068e3e:	cmp    rax,rcx
   140068e41:	jbe    0x140068ec1
   140068e43:	mov    rcx,rdx
   140068e46:	jmp    0x140069d04
   140068e4b:	movabs rcx,0x3ff0000000000000
   140068e55:	cmp    rax,rcx
   140068e58:	jae    0x140068e85
   140068e5a:	test   rax,rax
   140068e5d:	je     0x140068ec1
   140068e5f:	test   r8,r8
   140068e62:	je     0x140068e7b
   140068e64:	movabs rax,0x8000000000000000
   140068e6e:	mov    QWORD PTR [rsp+0x8],rax
   140068e73:	movsd  xmm0,QWORD PTR [rsp+0x8]
   140068e79:	jmp    0x140068ec1
   140068e7b:	movsd  xmm0,QWORD PTR [rip+0xe7c5]        # 0x140077648
   140068e83:	jmp    0x140068ec1
   140068e85:	mov    rax,rdx
   140068e88:	mov    ecx,0x33
   140068e8d:	shr    rax,0x34
   140068e91:	sub    cl,al
   140068e93:	mov    eax,0x1
   140068e98:	shl    rax,cl
   140068e9b:	dec    rax
   140068e9e:	not    rax
   140068ea1:	and    rax,rdx
   140068ea4:	mov    QWORD PTR [rsp+0x8],rax
   140068ea9:	movsd  xmm0,QWORD PTR [rsp+0x8]
   140068eaf:	test   r8,r8
   140068eb2:	jne    0x140068ec1
   140068eb4:	cmp    rax,rdx
   140068eb7:	je     0x140068ec1
   140068eb9:	addsd  xmm0,QWORD PTR [rip+0xe787]        # 0x140077648
   140068ec1:	ret    
   140068ec2:	int3   
   140068ec3:	int3   
   140068ec4:	int3   
   140068ec5:	int3   
   140068ec6:	int3   
   140068ec7:	int3   
   140068ec8:	int3   
   140068ec9:	int3   
   140068eca:	int3   
   140068ecb:	int3   
   140068ecc:	int3   
   140068ecd:	int3   
   140068ece:	int3   
   140068ecf:	int3   
   140068ed0:	sub    rsp,0x58
   140068ed4:	movdqa XMMWORD PTR [rsp+0x20],xmm6
   140068eda:	cmp    DWORD PTR [rip+0x370b3],0x0        # 0x14009ff94
   140068ee1:	jne    0x1400691d0
   140068ee7:	movapd xmm3,xmm0
   140068eeb:	movapd xmm4,xmm0
   140068eef:	psrlq  xmm3,0x34
   140068ef4:	movq   rax,xmm0
   140068ef9:	psubq  xmm3,XMMWORD PTR [rip+0xe78f]        # 0x140077690
   140068f01:	movapd xmm5,xmm0
   140068f05:	andpd  xmm5,XMMWORD PTR [rip+0xe753]        # 0x140077660
   140068f0d:	comisd xmm5,QWORD PTR [rip+0xe74b]        # 0x140077660
   140068f15:	je     0x1400691a0
   140068f1b:	movapd xmm2,xmm0
   140068f1f:	cvtdq2pd xmm6,xmm3
   140068f23:	xorpd  xmm5,xmm5
   140068f27:	comisd xmm0,xmm5
   140068f2b:	jbe    0x140069160
   140068f31:	pand   xmm2,XMMWORD PTR [rip+0xe777]        # 0x1400776b0
   140068f39:	subsd  xmm4,QWORD PTR [rip+0xe7ff]        # 0x140077740
   140068f41:	comisd xmm6,QWORD PTR [rip+0xe887]        # 0x1400777d0
   140068f49:	je     0x140069127
   140068f4f:	andpd  xmm4,XMMWORD PTR [rip+0xe8d9]        # 0x140077830
   140068f57:	mov    r9,rax
   140068f5a:	and    rax,QWORD PTR [rip+0xe75f]        # 0x1400776c0
   140068f61:	and    r9,QWORD PTR [rip+0xe768]        # 0x1400776d0
   140068f68:	shl    r9,1
   140068f6b:	add    rax,r9
   140068f6e:	movq   xmm1,rax
   140068f73:	comisd xmm4,QWORD PTR [rip+0xe875]        # 0x1400777f0
   140068f7b:	jb     0x140069060
   140068f81:	shr    rax,0x2c
   140068f85:	por    xmm2,XMMWORD PTR [rip+0xe7c3]        # 0x140077750
   140068f8d:	por    xmm1,XMMWORD PTR [rip+0xe7bb]        # 0x140077750
   140068f95:	lea    r9,[rip+0xf934]        # 0x1400788d0
   140068f9c:	subsd  xmm1,xmm2
   140068fa0:	mulsd  xmm1,QWORD PTR [r9+rax*8]
   140068fa6:	movapd xmm2,xmm1
   140068faa:	movapd xmm0,xmm1
   140068fae:	lea    r9,[rip+0xe8fb]        # 0x1400778b0
   140068fb5:	movsd  xmm3,QWORD PTR [rip+0xe803]        # 0x1400777c0
   140068fbd:	movsd  xmm1,QWORD PTR [rip+0xe7cb]        # 0x140077790
   140068fc5:	mulsd  xmm3,xmm2
   140068fc9:	mulsd  xmm1,xmm2
   140068fcd:	mulsd  xmm0,xmm2
   140068fd1:	movapd xmm4,xmm0
   140068fd5:	addsd  xmm3,QWORD PTR [rip+0xe7d3]        # 0x1400777b0
   140068fdd:	addsd  xmm1,QWORD PTR [rip+0xe79b]        # 0x140077780
   140068fe5:	mulsd  xmm4,xmm0
   140068fe9:	mulsd  xmm3,xmm2
   140068fed:	mulsd  xmm1,xmm0
   140068ff1:	addsd  xmm3,QWORD PTR [rip+0xe7a7]        # 0x1400777a0
   140068ff9:	addsd  xmm1,xmm2
   140068ffd:	mulsd  xmm3,xmm4
   140069001:	addsd  xmm1,xmm3
   140069005:	movsd  xmm5,QWORD PTR [rip+0xe713]        # 0x140077720
   14006900d:	mulsd  xmm1,QWORD PTR [rip+0xe6cb]        # 0x1400776e0
   140069015:	mulsd  xmm5,xmm6
   140069019:	subsd  xmm5,xmm1
   14006901d:	movsd  xmm0,QWORD PTR [r9+rax*8]
   140069023:	lea    rdx,[rip+0xf096]        # 0x1400780c0
   14006902a:	movsd  xmm2,QWORD PTR [rdx+rax*8]
   14006902f:	movsd  xmm4,QWORD PTR [rip+0xe6d9]        # 0x140077710
   140069037:	mulsd  xmm4,xmm6
   14006903b:	addsd  xmm0,xmm4
   14006903f:	addsd  xmm2,xmm5
   140069043:	addsd  xmm0,xmm2
   140069047:	movdqa xmm6,XMMWORD PTR [rsp+0x20]
   14006904d:	add    rsp,0x58
   140069051:	ret    
   140069052:	data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140069060:	movsd  xmm2,QWORD PTR [rip+0xe6c8]        # 0x140077730
   140069068:	subsd  xmm0,QWORD PTR [rip+0xe6d0]        # 0x140077740
   140069070:	addsd  xmm2,xmm0
   140069074:	movapd xmm1,xmm0
   140069078:	divsd  xmm1,xmm2
   14006907c:	movsd  xmm4,QWORD PTR [rip+0xe7cc]        # 0x140077850
   140069084:	movsd  xmm5,QWORD PTR [rip+0xe7e4]        # 0x140077870
   14006908c:	movapd xmm6,xmm0
   140069090:	mulsd  xmm6,xmm1
   140069094:	addsd  xmm1,xmm1
   140069098:	movapd xmm2,xmm1
   14006909c:	mulsd  xmm2,xmm1
   1400690a0:	mulsd  xmm4,xmm2
   1400690a4:	mulsd  xmm5,xmm2
   1400690a8:	addsd  xmm4,QWORD PTR [rip+0xe790]        # 0x140077840
   1400690b0:	addsd  xmm5,QWORD PTR [rip+0xe7a8]        # 0x140077860
   1400690b8:	mulsd  xmm2,xmm1
   1400690bc:	mulsd  xmm4,xmm2
   1400690c0:	mulsd  xmm2,xmm2
   1400690c4:	mulsd  xmm2,xmm1
   1400690c8:	mulsd  xmm5,xmm2
   1400690cc:	movsd  xmm2,QWORD PTR [rip+0xe62c]        # 0x140077700
   1400690d4:	addsd  xmm4,xmm5
   1400690d8:	subsd  xmm4,xmm6
   1400690dc:	movsd  xmm6,QWORD PTR [rip+0xe60c]        # 0x1400776f0
   1400690e4:	movapd xmm3,xmm0
   1400690e8:	pand   xmm3,XMMWORD PTR [rip+0xe790]        # 0x140077880
   1400690f0:	subsd  xmm0,xmm3
   1400690f4:	addsd  xmm4,xmm0
   1400690f8:	movapd xmm0,xmm3
   1400690fc:	movapd xmm1,xmm4
   140069100:	mulsd  xmm4,xmm2
   140069104:	mulsd  xmm0,xmm2
   140069108:	mulsd  xmm1,xmm6
   14006910c:	mulsd  xmm3,xmm6
   140069110:	addsd  xmm0,xmm4
   140069114:	addsd  xmm0,xmm1
   140069118:	addsd  xmm0,xmm3
   14006911c:	movdqa xmm6,XMMWORD PTR [rsp+0x20]
   140069122:	add    rsp,0x58
   140069126:	ret    
   140069127:	por    xmm2,XMMWORD PTR [rip+0xe611]        # 0x140077740
   14006912f:	subsd  xmm2,QWORD PTR [rip+0xe609]        # 0x140077740
   140069137:	movsd  xmm5,xmm2
   14006913b:	pand   xmm2,XMMWORD PTR [rip+0xe56d]        # 0x1400776b0
   140069143:	movq   rax,xmm2
   140069148:	psrlq  xmm5,0x34
   14006914d:	psubd  xmm5,XMMWORD PTR [rip+0xe68b]        # 0x1400777e0
   140069155:	cvtdq2pd xmm6,xmm5
   140069159:	jmp    0x140068f4f
   14006915e:	xchg   ax,ax
   140069160:	jne    0x140069180
   140069162:	movsd  xmm1,QWORD PTR [rip+0xe4e6]        # 0x140077650
   14006916a:	mov    r8d,DWORD PTR [rip+0xe71f]        # 0x140077890
   140069171:	call   0x140069d90
   140069176:	jmp    0x1400691c0
   140069178:	nop    DWORD PTR [rax+rax*1+0x0]
   140069180:	movsd  xmm1,QWORD PTR [rip+0xe4e8]        # 0x140077670
   140069188:	mov    r8d,DWORD PTR [rip+0xe705]        # 0x140077894
   14006918f:	call   0x140069d90
   140069194:	jmp    0x1400691c0
   140069196:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400691a0:	cmp    rax,QWORD PTR [rip+0xe4b9]        # 0x140077660
   1400691a7:	je     0x1400691c0
   1400691a9:	cmp    rax,QWORD PTR [rip+0xe4a0]        # 0x140077650
   1400691b0:	je     0x140069180
   1400691b2:	or     rax,QWORD PTR [rip+0xe4c7]        # 0x140077680
   1400691b9:	movq   xmm0,rax
   1400691be:	xchg   ax,ax
   1400691c0:	movdqa xmm6,XMMWORD PTR [rsp+0x20]
   1400691c6:	add    rsp,0x58
   1400691ca:	ret    
   1400691cb:	nop    DWORD PTR [rax+rax*1+0x0]
   1400691d0:	xor    rax,rax
   1400691d3:	vpsrlq xmm3,xmm0,0x34
   1400691d8:	vmovq  rax,xmm0
   1400691dd:	vpsubq xmm3,xmm3,XMMWORD PTR [rip+0xe4ab]        # 0x140077690
   1400691e5:	vcvtdq2pd xmm6,xmm3
   1400691e9:	vpand  xmm5,xmm0,XMMWORD PTR [rip+0xe46f]        # 0x140077660
   1400691f1:	vcomisd xmm5,QWORD PTR [rip+0xe467]        # 0x140077660
   1400691f9:	je     0x140069440
   1400691ff:	vpxor  xmm5,xmm5,xmm5
   140069203:	vcomisd xmm0,xmm5
   140069207:	jbe    0x1400693f0
   14006920d:	vpand  xmm2,xmm0,XMMWORD PTR [rip+0xe49b]        # 0x1400776b0
   140069215:	vsubsd xmm4,xmm0,QWORD PTR [rip+0xe523]        # 0x140077740
   14006921d:	vcomisd xmm6,QWORD PTR [rip+0xe5ab]        # 0x1400777d0
   140069225:	je     0x1400693b9
   14006922b:	vpand  xmm1,xmm0,XMMWORD PTR [rip+0xe48d]        # 0x1400776c0
   140069233:	vpand  xmm3,xmm0,XMMWORD PTR [rip+0xe495]        # 0x1400776d0
   14006923b:	vpsllq xmm3,xmm3,0x1
   140069240:	vpaddq xmm1,xmm3,xmm1
   140069244:	vmovq  rax,xmm1
   140069249:	vpand  xmm4,xmm4,XMMWORD PTR [rip+0xe5df]        # 0x140077830
   140069251:	vcomisd xmm4,QWORD PTR [rip+0xe597]        # 0x1400777f0
   140069259:	jb     0x140069310
   14006925f:	shr    rax,0x2c
   140069263:	vpor   xmm2,xmm2,XMMWORD PTR [rip+0xe4e5]        # 0x140077750
   14006926b:	vpor   xmm1,xmm1,XMMWORD PTR [rip+0xe4dd]        # 0x140077750
   140069273:	lea    r9,[rip+0xf656]        # 0x1400788d0
   14006927a:	vsubsd xmm1,xmm1,xmm2
   14006927e:	vmulsd xmm1,xmm1,QWORD PTR [r9+rax*8]
   140069284:	lea    r9,[rip+0xe625]        # 0x1400778b0
   14006928b:	vmulsd xmm0,xmm1,xmm1
   14006928f:	vmovsd xmm3,QWORD PTR [rip+0xe529]        # 0x1400777c0
   140069297:	vmovsd xmm5,QWORD PTR [rip+0xe4f1]        # 0x140077790
   14006929f:	vfmadd213sd xmm3,xmm1,QWORD PTR [rip+0xe508]        # 0x1400777b0
   1400692a8:	vfmadd213sd xmm5,xmm1,QWORD PTR [rip+0xe49f]        # 0x140077750
   1400692b1:	movsd  xmm4,xmm0
   1400692b5:	vfmadd213sd xmm3,xmm1,QWORD PTR [rip+0xe4e2]        # 0x1400777a0
   1400692be:	vmulsd xmm4,xmm0,xmm0
   1400692c2:	vfmadd231sd xmm1,xmm5,xmm0
   1400692c7:	vfmadd231sd xmm1,xmm3,xmm4
   1400692cc:	vmulsd xmm1,xmm1,QWORD PTR [rip+0xe40c]        # 0x1400776e0
   1400692d4:	vmovsd xmm5,QWORD PTR [rip+0xe444]        # 0x140077720
   1400692dc:	vfmsub213sd xmm5,xmm6,xmm1
   1400692e1:	movsd  xmm0,QWORD PTR [r9+rax*8]
   1400692e7:	lea    rdx,[rip+0xedd2]        # 0x1400780c0
   1400692ee:	movsd  xmm2,QWORD PTR [rdx+rax*8]
   1400692f3:	vaddsd xmm2,xmm2,xmm5
   1400692f7:	vfmadd231sd xmm0,xmm6,QWORD PTR [rip+0xe410]        # 0x140077710
   140069300:	vaddsd xmm0,xmm0,xmm2
   140069304:	vmovdqa xmm6,XMMWORD PTR [rsp+0x20]
   14006930a:	add    rsp,0x58
   14006930e:	ret    
   14006930f:	nop
   140069310:	vmovsd xmm2,QWORD PTR [rip+0xe418]        # 0x140077730
   140069318:	vsubsd xmm0,xmm0,QWORD PTR [rip+0xe420]        # 0x140077740
   140069320:	vaddsd xmm2,xmm2,xmm0
   140069324:	vdivsd xmm1,xmm0,xmm2
   140069328:	vmovsd xmm4,QWORD PTR [rip+0xe520]        # 0x140077850
   140069330:	vmovsd xmm5,QWORD PTR [rip+0xe538]        # 0x140077870
   140069338:	vmulsd xmm6,xmm0,xmm1
   14006933c:	vaddsd xmm1,xmm1,xmm1
   140069340:	vmulsd xmm2,xmm1,xmm1
   140069344:	vfmadd213sd xmm4,xmm2,QWORD PTR [rip+0xe4f3]        # 0x140077840
   14006934d:	vfmadd213sd xmm5,xmm2,QWORD PTR [rip+0xe50a]        # 0x140077860
   140069356:	vmulsd xmm2,xmm2,xmm1
   14006935a:	vmulsd xmm4,xmm4,xmm2
   14006935e:	vmulsd xmm2,xmm2,xmm2
   140069362:	vmulsd xmm2,xmm2,xmm1
   140069366:	vmulsd xmm5,xmm5,xmm2
   14006936a:	vaddsd xmm4,xmm4,xmm5
   14006936e:	vsubsd xmm4,xmm4,xmm6
   140069372:	vpand  xmm3,xmm0,XMMWORD PTR [rip+0xe506]        # 0x140077880
   14006937a:	vsubsd xmm0,xmm0,xmm3
   14006937e:	vaddsd xmm4,xmm4,xmm0
   140069382:	vmulsd xmm1,xmm4,QWORD PTR [rip+0xe366]        # 0x1400776f0
   14006938a:	vmulsd xmm4,xmm4,QWORD PTR [rip+0xe36e]        # 0x140077700
   140069392:	vmulsd xmm0,xmm3,QWORD PTR [rip+0xe366]        # 0x140077700
   14006939a:	vmulsd xmm3,xmm3,QWORD PTR [rip+0xe34e]        # 0x1400776f0
   1400693a2:	vaddsd xmm0,xmm0,xmm4
   1400693a6:	vaddsd xmm0,xmm0,xmm1
   1400693aa:	vaddsd xmm0,xmm0,xmm3
   1400693ae:	vmovdqa xmm6,XMMWORD PTR [rsp+0x20]
   1400693b4:	add    rsp,0x58
   1400693b8:	ret    
   1400693b9:	vpor   xmm2,xmm2,XMMWORD PTR [rip+0xe37f]        # 0x140077740
   1400693c1:	vsubsd xmm2,xmm2,QWORD PTR [rip+0xe377]        # 0x140077740
   1400693c9:	vpsrlq xmm5,xmm2,0x34
   1400693ce:	vpand  xmm2,xmm2,XMMWORD PTR [rip+0xe2da]        # 0x1400776b0
   1400693d6:	vmovapd xmm0,xmm2
   1400693da:	vpsubd xmm5,xmm5,XMMWORD PTR [rip+0xe3fe]        # 0x1400777e0
   1400693e2:	vcvtdq2pd xmm6,xmm5
   1400693e6:	jmp    0x14006922b
   1400693eb:	nop    DWORD PTR [rax+rax*1+0x0]
   1400693f0:	jne    0x140069420
   1400693f2:	vmovsd xmm1,QWORD PTR [rip+0xe256]        # 0x140077650
   1400693fa:	mov    r8d,DWORD PTR [rip+0xe48f]        # 0x140077890
   140069401:	call   0x140069d90
   140069406:	vmovdqa xmm6,XMMWORD PTR [rsp+0x20]
   14006940c:	add    rsp,0x58
   140069410:	ret    
   140069411:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140069420:	vmovsd xmm1,QWORD PTR [rip+0xe248]        # 0x140077670
   140069428:	mov    r8d,DWORD PTR [rip+0xe465]        # 0x140077894
   14006942f:	call   0x140069d90
   140069434:	vmovdqa xmm6,XMMWORD PTR [rsp+0x20]
   14006943a:	add    rsp,0x58
   14006943e:	ret    
   14006943f:	nop
   140069440:	cmp    rax,QWORD PTR [rip+0xe219]        # 0x140077660
   140069447:	je     0x140069470
   140069449:	cmp    rax,QWORD PTR [rip+0xe200]        # 0x140077650
   140069450:	je     0x140069420
   140069452:	or     rax,QWORD PTR [rip+0xe227]        # 0x140077680
   140069459:	movq   xmm1,rax
   14006945e:	mov    r8d,DWORD PTR [rip+0xe433]        # 0x140077898
   140069465:	call   0x140069d90
   14006946a:	jmp    0x140069470
   14006946c:	nop    DWORD PTR [rax+0x0]
   140069470:	vmovdqa xmm6,XMMWORD PTR [rsp+0x20]
   140069476:	add    rsp,0x58
   14006947a:	ret    
   14006947b:	int3   
   14006947c:	mov    QWORD PTR [rsp+0x8],rbx
   140069481:	mov    QWORD PTR [rsp+0x20],r9
   140069486:	push   rdi
   140069487:	sub    rsp,0x20
   14006948b:	mov    rdi,r9
   14006948e:	mov    rbx,r8
   140069491:	mov    ecx,DWORD PTR [rdx]
   140069493:	call   0x14006402c
   140069498:	nop
   140069499:	mov    rax,QWORD PTR [rbx]
   14006949c:	movsxd rcx,DWORD PTR [rax]
   14006949f:	mov    rdx,rcx
   1400694a2:	mov    rax,rcx
   1400694a5:	sar    rax,0x6
   1400694a9:	lea    r8,[rip+0x362c0]        # 0x14009f770
   1400694b0:	and    edx,0x3f
   1400694b3:	shl    rdx,0x6
   1400694b7:	mov    rax,QWORD PTR [r8+rax*8]
   1400694bb:	test   BYTE PTR [rax+rdx*1+0x38],0x1
   1400694c0:	je     0x1400694cb
   1400694c2:	call   0x140069594
   1400694c7:	mov    ebx,eax
   1400694c9:	jmp    0x1400694d9
   1400694cb:	call   0x140060e94
   1400694d0:	mov    DWORD PTR [rax],0x9
   1400694d6:	or     ebx,0xffffffff
   1400694d9:	mov    ecx,DWORD PTR [rdi]
   1400694db:	call   0x140064050
   1400694e0:	mov    eax,ebx
   1400694e2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400694e7:	add    rsp,0x20
   1400694eb:	pop    rdi
   1400694ec:	ret    
   1400694ed:	int3   
   1400694ee:	int3   
   1400694ef:	int3   
   1400694f0:	mov    DWORD PTR [rsp+0x8],ecx
   1400694f4:	sub    rsp,0x38
   1400694f8:	movsxd rdx,ecx
   1400694fb:	cmp    edx,0xfffffffe
   1400694fe:	jne    0x140069515
   140069500:	call   0x140060e74
   140069505:	and    DWORD PTR [rax],0x0
   140069508:	call   0x140060e94
   14006950d:	mov    DWORD PTR [rax],0x9
   140069513:	jmp    0x140069589
   140069515:	test   ecx,ecx
   140069517:	js     0x140069571
   140069519:	cmp    edx,DWORD PTR [rip+0x36651]        # 0x14009fb70
   14006951f:	jae    0x140069571
   140069521:	mov    rcx,rdx
   140069524:	lea    r8,[rip+0x36245]        # 0x14009f770
   14006952b:	and    ecx,0x3f
   14006952e:	mov    rax,rdx
   140069531:	sar    rax,0x6
   140069535:	shl    rcx,0x6
   140069539:	mov    rax,QWORD PTR [r8+rax*8]
   14006953d:	test   BYTE PTR [rax+rcx*1+0x38],0x1
   140069542:	je     0x140069571
   140069544:	lea    rax,[rsp+0x40]
   140069549:	mov    DWORD PTR [rsp+0x50],edx
   14006954d:	mov    DWORD PTR [rsp+0x58],edx
   140069551:	lea    r9,[rsp+0x50]
   140069556:	lea    rdx,[rsp+0x58]
   14006955b:	mov    QWORD PTR [rsp+0x20],rax
   140069560:	lea    r8,[rsp+0x20]
   140069565:	lea    rcx,[rsp+0x48]
   14006956a:	call   0x14006947c
   14006956f:	jmp    0x14006958c
   140069571:	call   0x140060e74
   140069576:	and    DWORD PTR [rax],0x0
   140069579:	call   0x140060e94
   14006957e:	mov    DWORD PTR [rax],0x9
   140069584:	call   0x140060d74
   140069589:	or     eax,0xffffffff
   14006958c:	add    rsp,0x38
   140069590:	ret    
   140069591:	int3   
   140069592:	int3   
   140069593:	int3   
   140069594:	mov    QWORD PTR [rsp+0x8],rbx
   140069599:	push   rdi
   14006959a:	sub    rsp,0x20
   14006959e:	movsxd rdi,ecx
   1400695a1:	mov    ecx,edi
   1400695a3:	call   0x140064130
   1400695a8:	cmp    rax,0xffffffffffffffff
   1400695ac:	jne    0x1400695b2
   1400695ae:	xor    ebx,ebx
   1400695b0:	jmp    0x140069609
   1400695b2:	mov    rax,QWORD PTR [rip+0x361b7]        # 0x14009f770
   1400695b9:	mov    ecx,0x2
   1400695be:	cmp    edi,0x1
   1400695c1:	jne    0x1400695cc
   1400695c3:	test   BYTE PTR [rax+0xb8],dil
   1400695ca:	jne    0x1400695d6
   1400695cc:	cmp    edi,ecx
   1400695ce:	jne    0x1400695ed
   1400695d0:	test   BYTE PTR [rax+0x78],0x1
   1400695d4:	je     0x1400695ed
   1400695d6:	call   0x140064130
   1400695db:	mov    ecx,0x1
   1400695e0:	mov    rbx,rax
   1400695e3:	call   0x140064130
   1400695e8:	cmp    rax,rbx
   1400695eb:	je     0x1400695ae
   1400695ed:	mov    ecx,edi
   1400695ef:	call   0x140064130
   1400695f4:	mov    rcx,rax
   1400695f7:	call   QWORD PTR [rip+0x2aab]        # 0x14006c0a8
   1400695fd:	test   eax,eax
   1400695ff:	jne    0x1400695ae
   140069601:	call   QWORD PTR [rip+0x2bc1]        # 0x14006c1c8
   140069607:	mov    ebx,eax
   140069609:	mov    ecx,edi
   14006960b:	call   0x140064074
   140069610:	mov    rdx,rdi
   140069613:	lea    r8,[rip+0x36156]        # 0x14009f770
   14006961a:	and    edx,0x3f
   14006961d:	mov    rcx,rdi
   140069620:	sar    rcx,0x6
   140069624:	shl    rdx,0x6
   140069628:	mov    rcx,QWORD PTR [r8+rcx*8]
   14006962c:	mov    BYTE PTR [rcx+rdx*1+0x38],0x0
   140069631:	test   ebx,ebx
   140069633:	je     0x140069641
   140069635:	mov    ecx,ebx
   140069637:	call   0x140060e24
   14006963c:	or     eax,0xffffffff
   14006963f:	jmp    0x140069643
   140069641:	xor    eax,eax
   140069643:	mov    rbx,QWORD PTR [rsp+0x30]
   140069648:	add    rsp,0x20
   14006964c:	pop    rdi
   14006964d:	ret    
   14006964e:	int3   
   14006964f:	int3   
   140069650:	mov    QWORD PTR [rsp+0x8],rcx
   140069655:	mov    r11,rsp
   140069658:	xor    edx,edx
   14006965a:	mov    QWORD PTR [rcx],rdx
   14006965d:	mov    rax,QWORD PTR [r11+0x8]
   140069661:	mov    QWORD PTR [rax+0x8],rdx
   140069665:	mov    rax,QWORD PTR [r11+0x8]
   140069669:	mov    DWORD PTR [rax+0x10],edx
   14006966c:	mov    rax,QWORD PTR [r11+0x8]
   140069670:	or     DWORD PTR [rax+0x18],0xffffffff
   140069674:	mov    rax,QWORD PTR [r11+0x8]
   140069678:	mov    DWORD PTR [rax+0x1c],edx
   14006967b:	mov    rax,QWORD PTR [r11+0x8]
   14006967f:	mov    DWORD PTR [rax+0x20],edx
   140069682:	mov    rax,QWORD PTR [r11+0x8]
   140069686:	mov    QWORD PTR [rax+0x28],rdx
   14006968a:	mov    rax,QWORD PTR [r11+0x8]
   14006968e:	xchg   DWORD PTR [rax+0x14],edx
   140069691:	ret    
   140069692:	int3   
   140069693:	int3   
   140069694:	sub    rsp,0x48
   140069698:	and    QWORD PTR [rsp+0x30],0x0
   14006969e:	lea    rcx,[rip+0xe1fb]        # 0x1400778a0
   1400696a5:	and    DWORD PTR [rsp+0x28],0x0
   1400696aa:	mov    r8d,0x3
   1400696b0:	xor    r9d,r9d
   1400696b3:	mov    DWORD PTR [rsp+0x20],r8d
   1400696b8:	mov    edx,0x40000000
   1400696bd:	call   QWORD PTR [rip+0x2a0d]        # 0x14006c0d0
   1400696c3:	mov    QWORD PTR [rip+0x19136],rax        # 0x140082800
   1400696ca:	add    rsp,0x48
   1400696ce:	ret    
   1400696cf:	int3   
   1400696d0:	sub    rsp,0x28
   1400696d4:	mov    rcx,QWORD PTR [rip+0x19125]        # 0x140082800
   1400696db:	lea    rax,[rcx+0x2]
   1400696df:	cmp    rax,0x1
   1400696e3:	jbe    0x1400696eb
   1400696e5:	call   QWORD PTR [rip+0x29bd]        # 0x14006c0a8
   1400696eb:	add    rsp,0x28
   1400696ef:	ret    
   1400696f0:	sub    rsp,0x28
   1400696f4:	xor    edx,edx
   1400696f6:	xor    ecx,ecx
   1400696f8:	call   0x1400697cc
   1400696fd:	and    eax,0x31f
   140069702:	add    rsp,0x28
   140069706:	ret    
   140069707:	int3   
   140069708:	sub    rsp,0x28
   14006970c:	call   0x1400697d8
   140069711:	and    eax,0x1f
   140069714:	add    rsp,0x28
   140069718:	ret    
   140069719:	int3   
   14006971a:	int3   
   14006971b:	int3   
   14006971c:	mov    edx,0x8031f
   140069721:	jmp    0x1400697cc
   140069726:	int3   
   140069727:	int3   
   140069728:	rex push rbx
   14006972a:	sub    rsp,0x20
   14006972e:	mov    ebx,ecx
   140069730:	call   0x140069e60
   140069735:	and    eax,0xffffffc2
   140069738:	xor    ecx,ecx
   14006973a:	test   bl,0x1f
   14006973d:	je     0x14006976c
   14006973f:	mov    dl,bl
   140069741:	lea    r8d,[rcx+0x1]
   140069745:	and    dl,0x10
   140069748:	cmovne ecx,r8d
   14006974c:	test   bl,0x8
   14006974f:	je     0x140069754
   140069751:	or     ecx,0x4
   140069754:	test   bl,0x4
   140069757:	je     0x14006975c
   140069759:	or     ecx,0x8
   14006975c:	test   bl,0x2
   14006975f:	je     0x140069764
   140069761:	or     ecx,0x10
   140069764:	test   r8b,bl
   140069767:	je     0x14006976c
   140069769:	or     ecx,0x20
   14006976c:	or     ecx,eax
   14006976e:	add    rsp,0x20
   140069772:	pop    rbx
   140069773:	jmp    0x140069e70
   140069778:	rex push rbx
   14006977a:	sub    rsp,0x20
   14006977e:	call   0x140069e60
   140069783:	mov    ebx,eax
   140069785:	call   0x140069e7a
   14006978a:	xor    eax,eax
   14006978c:	test   bl,0x3f
   14006978f:	je     0x1400697c4
   140069791:	mov    cl,bl
   140069793:	lea    edx,[rax+0x10]
   140069796:	and    cl,0x1
   140069799:	cmovne eax,edx
   14006979c:	test   bl,0x4
   14006979f:	je     0x1400697a4
   1400697a1:	or     eax,0x8
   1400697a4:	test   bl,0x8
   1400697a7:	je     0x1400697ac
   1400697a9:	or     eax,0x4
   1400697ac:	test   dl,bl
   1400697ae:	je     0x1400697b3
   1400697b0:	or     eax,0x2
   1400697b3:	test   bl,0x20
   1400697b6:	je     0x1400697bb
   1400697b8:	or     eax,0x1
   1400697bb:	test   bl,0x2
   1400697be:	je     0x1400697c4
   1400697c0:	bts    eax,0x13
   1400697c4:	add    rsp,0x20
   1400697c8:	pop    rbx
   1400697c9:	ret    
   1400697ca:	int3   
   1400697cb:	int3   
   1400697cc:	btr    edx,0x13
   1400697d0:	jmp    0x140069820
   1400697d5:	int3   
   1400697d6:	int3   
   1400697d7:	int3   
   1400697d8:	stmxcsr DWORD PTR [rsp+0x8]
   1400697dd:	mov    edx,DWORD PTR [rsp+0x8]
   1400697e1:	xor    ecx,ecx
   1400697e3:	test   dl,0x3f
   1400697e6:	je     0x14006981d
   1400697e8:	mov    al,dl
   1400697ea:	lea    r8d,[rcx+0x10]
   1400697ee:	and    al,0x1
   1400697f0:	cmovne ecx,r8d
   1400697f4:	test   dl,0x4
   1400697f7:	je     0x1400697fc
   1400697f9:	or     ecx,0x8
   1400697fc:	test   dl,0x8
   1400697ff:	je     0x140069804
   140069801:	or     ecx,0x4
   140069804:	test   r8b,dl
   140069807:	je     0x14006980c
   140069809:	or     ecx,0x2
   14006980c:	test   dl,0x20
   14006980f:	je     0x140069814
   140069811:	or     ecx,0x1
   140069814:	test   dl,0x2
   140069817:	je     0x14006981d
   140069819:	bts    ecx,0x13
   14006981d:	mov    eax,ecx
   14006981f:	ret    
   140069820:	mov    QWORD PTR [rsp+0x10],rbx
   140069825:	mov    QWORD PTR [rsp+0x18],rsi
   14006982a:	mov    QWORD PTR [rsp+0x20],rdi
   14006982f:	push   r12
   140069831:	push   r14
   140069833:	push   r15
   140069835:	sub    rsp,0x20
   140069839:	mov    ebx,edx
   14006983b:	mov    esi,ecx
   14006983d:	and    ebx,0x308031f
   140069843:	call   0x140069e60
   140069848:	mov    r9d,eax
   14006984b:	xor    edi,edi
   14006984d:	mov    r8b,al
   140069850:	mov    r11d,0x80
   140069856:	mov    eax,edi
   140069858:	lea    ecx,[rdi+0x10]
   14006985b:	and    r8b,r11b
   14006985e:	cmovne eax,ecx
   140069861:	mov    r12d,0x200
   140069867:	test   r12d,r9d
   14006986a:	je     0x14006986f
   14006986c:	or     eax,0x8
   14006986f:	bt     r9d,0xa
   140069874:	jae    0x140069879
   140069876:	or     eax,0x4
   140069879:	mov    r8d,0x800
   14006987f:	test   r8d,r9d
   140069882:	je     0x140069887
   140069884:	or     eax,0x2
   140069887:	mov    r10d,0x1000
   14006988d:	test   r10d,r9d
   140069890:	je     0x140069895
   140069892:	or     eax,0x1
   140069895:	mov    r14d,0x100
   14006989b:	test   r14d,r9d
   14006989e:	je     0x1400698a4
   1400698a0:	bts    eax,0x13
   1400698a4:	mov    ecx,r9d
   1400698a7:	mov    r15d,0x6000
   1400698ad:	and    ecx,r15d
   1400698b0:	je     0x1400698d6
   1400698b2:	cmp    ecx,0x2000
   1400698b8:	je     0x1400698d3
   1400698ba:	cmp    ecx,0x4000
   1400698c0:	je     0x1400698ce
   1400698c2:	cmp    ecx,r15d
   1400698c5:	jne    0x1400698d6
   1400698c7:	or     eax,0x300
   1400698cc:	jmp    0x1400698d6
   1400698ce:	or     eax,r12d
   1400698d1:	jmp    0x1400698d6
   1400698d3:	or     eax,r14d
   1400698d6:	mov    edx,0x8040
   1400698db:	and    r9d,edx
   1400698de:	sub    r9d,0x40
   1400698e2:	je     0x140069900
   1400698e4:	sub    r9d,0x7fc0
   1400698eb:	je     0x1400698f9
   1400698ed:	cmp    r9d,0x40
   1400698f1:	jne    0x140069904
   1400698f3:	bts    eax,0x18
   1400698f7:	jmp    0x140069904
   1400698f9:	or     eax,0x3000000
   1400698fe:	jmp    0x140069904
   140069900:	bts    eax,0x19
   140069904:	mov    ecx,ebx
   140069906:	not    ecx
   140069908:	and    ecx,eax
   14006990a:	and    esi,ebx
   14006990c:	or     ecx,esi
   14006990e:	cmp    ecx,eax
   140069910:	je     0x140069a9c
   140069916:	mov    al,cl
   140069918:	mov    esi,0x10
   14006991d:	mov    ebx,edi
   14006991f:	and    al,sil
   140069922:	cmovne ebx,r11d
   140069926:	mov    DWORD PTR [rsp+0x40],ebx
   14006992a:	test   cl,0x8
   14006992d:	je     0x140069936
   14006992f:	or     ebx,r12d
   140069932:	mov    DWORD PTR [rsp+0x40],ebx
   140069936:	test   cl,0x4
   140069939:	je     0x140069943
   14006993b:	bts    ebx,0xa
   14006993f:	mov    DWORD PTR [rsp+0x40],ebx
   140069943:	test   cl,0x2
   140069946:	je     0x14006994f
   140069948:	or     ebx,r8d
   14006994b:	mov    DWORD PTR [rsp+0x40],ebx
   14006994f:	test   cl,0x1
   140069952:	je     0x14006995b
   140069954:	or     ebx,r10d
   140069957:	mov    DWORD PTR [rsp+0x40],ebx
   14006995b:	bt     ecx,0x13
   14006995f:	jae    0x140069968
   140069961:	or     ebx,r14d
   140069964:	mov    DWORD PTR [rsp+0x40],ebx
   140069968:	mov    eax,ecx
   14006996a:	and    eax,0x300
   14006996f:	je     0x140069995
   140069971:	cmp    eax,r14d
   140069974:	je     0x14006998d
   140069976:	cmp    eax,r12d
   140069979:	je     0x140069987
   14006997b:	cmp    eax,0x300
   140069980:	jne    0x140069995
   140069982:	or     ebx,r15d
   140069985:	jmp    0x140069991
   140069987:	bts    ebx,0xe
   14006998b:	jmp    0x140069991
   14006998d:	bts    ebx,0xd
   140069991:	mov    DWORD PTR [rsp+0x40],ebx
   140069995:	and    ecx,0x3000000
   14006999b:	cmp    ecx,0x1000000
   1400699a1:	je     0x1400699be
   1400699a3:	cmp    ecx,0x2000000
   1400699a9:	je     0x1400699b9
   1400699ab:	cmp    ecx,0x3000000
   1400699b1:	jne    0x1400699c4
   1400699b3:	bts    ebx,0xf
   1400699b7:	jmp    0x1400699c0
   1400699b9:	or     ebx,0x40
   1400699bc:	jmp    0x1400699c0
   1400699be:	or     ebx,edx
   1400699c0:	mov    DWORD PTR [rsp+0x40],ebx
   1400699c4:	cmp    BYTE PTR [rip+0x18e3d],dil        # 0x140082808
   1400699cb:	je     0x140069a09
   1400699cd:	test   bl,0x40
   1400699d0:	je     0x140069a09
   1400699d2:	mov    ecx,ebx
   1400699d4:	call   0x140069e70
   1400699d9:	jmp    0x140069a07
   1400699db:	mov    BYTE PTR [rip+0x18e26],0x0        # 0x140082808
   1400699e2:	mov    ebx,DWORD PTR [rsp+0x40]
   1400699e6:	and    ebx,0xffffffbf
   1400699e9:	mov    ecx,ebx
   1400699eb:	call   0x140069e70
   1400699f0:	xor    edi,edi
   1400699f2:	lea    esi,[rdi+0x10]
   1400699f5:	mov    r12d,0x200
   1400699fb:	mov    r14d,0x100
   140069a01:	mov    r15d,0x6000
   140069a07:	jmp    0x140069a13
   140069a09:	and    ebx,0xffffffbf
   140069a0c:	mov    ecx,ebx
   140069a0e:	call   0x140069e70
   140069a13:	mov    al,bl
   140069a15:	and    al,0x80
   140069a17:	cmovne edi,esi
   140069a1a:	test   r12d,ebx
   140069a1d:	je     0x140069a22
   140069a1f:	or     edi,0x8
   140069a22:	bt     ebx,0xa
   140069a26:	jae    0x140069a2b
   140069a28:	or     edi,0x4
   140069a2b:	bt     ebx,0xb
   140069a2f:	jae    0x140069a34
   140069a31:	or     edi,0x2
   140069a34:	bt     ebx,0xc
   140069a38:	jae    0x140069a3d
   140069a3a:	or     edi,0x1
   140069a3d:	test   r14d,ebx
   140069a40:	je     0x140069a46
   140069a42:	bts    edi,0x13
   140069a46:	mov    eax,ebx
   140069a48:	and    eax,r15d
   140069a4b:	je     0x140069a70
   140069a4d:	cmp    eax,0x2000
   140069a52:	je     0x140069a6d
   140069a54:	cmp    eax,0x4000
   140069a59:	je     0x140069a68
   140069a5b:	cmp    eax,r15d
   140069a5e:	jne    0x140069a70
   140069a60:	or     edi,0x300
   140069a66:	jmp    0x140069a70
   140069a68:	or     edi,r12d
   140069a6b:	jmp    0x140069a70
   140069a6d:	or     edi,r14d
   140069a70:	and    ebx,0x8040
   140069a76:	sub    ebx,0x40
   140069a79:	je     0x140069a96
   140069a7b:	sub    ebx,0x7fc0
   140069a81:	je     0x140069a8e
   140069a83:	cmp    ebx,0x40
   140069a86:	jne    0x140069a9a
   140069a88:	bts    edi,0x18
   140069a8c:	jmp    0x140069a9a
   140069a8e:	or     edi,0x3000000
   140069a94:	jmp    0x140069a9a
   140069a96:	bts    edi,0x19
   140069a9a:	mov    eax,edi
   140069a9c:	mov    rbx,QWORD PTR [rsp+0x48]
   140069aa1:	mov    rsi,QWORD PTR [rsp+0x50]
   140069aa6:	mov    rdi,QWORD PTR [rsp+0x58]
   140069aab:	add    rsp,0x20
   140069aaf:	pop    r15
   140069ab1:	pop    r14
   140069ab3:	pop    r12
   140069ab5:	ret    
   140069ab6:	int3   
   140069ab7:	int3   
   140069ab8:	mov    rax,rsp
   140069abb:	push   rbx
   140069abc:	sub    rsp,0x50
   140069ac0:	movsd  xmm0,QWORD PTR [rsp+0x80]
   140069ac9:	mov    ebx,ecx
   140069acb:	movsd  xmm1,QWORD PTR [rsp+0x88]
   140069ad4:	mov    edx,0xffc0
   140069ad9:	mov    DWORD PTR [rax-0x38],ecx
   140069adc:	mov    rcx,QWORD PTR [rsp+0x90]
   140069ae4:	movsd  QWORD PTR [rax-0x20],xmm0
   140069ae9:	movsd  QWORD PTR [rax-0x18],xmm1
   140069aee:	movsd  QWORD PTR [rax-0x28],xmm3
   140069af3:	mov    QWORD PTR [rax-0x30],r8
   140069af7:	call   0x14006a230
   140069afc:	lea    rcx,[rsp+0x20]
   140069b01:	call   0x1400605b0
   140069b06:	test   eax,eax
   140069b08:	jne    0x140069b11
   140069b0a:	mov    ecx,ebx
   140069b0c:	call   0x14006a1e0
   140069b11:	movsd  xmm0,QWORD PTR [rsp+0x40]
   140069b17:	add    rsp,0x50
   140069b1b:	pop    rbx
   140069b1c:	ret    
   140069b1d:	int3   
   140069b1e:	int3   
   140069b1f:	int3   
   140069b20:	mov    QWORD PTR [rsp+0x8],rbx
   140069b25:	mov    QWORD PTR [rsp+0x10],rsi
   140069b2a:	push   rdi
   140069b2b:	sub    rsp,0x20
   140069b2f:	mov    ebx,ecx
   140069b31:	mov    rsi,rdx
   140069b34:	and    ebx,0x1f
   140069b37:	mov    edi,ecx
   140069b39:	test   cl,0x8
   140069b3c:	je     0x140069b51
   140069b3e:	test   dl,dl
   140069b40:	jns    0x140069b51
   140069b42:	mov    ecx,0x1
   140069b47:	call   0x14006a2ac
   140069b4c:	and    ebx,0xfffffff7
   140069b4f:	jmp    0x140069ba8
   140069b51:	mov    ecx,0x4
   140069b56:	test   cl,dil
   140069b59:	je     0x140069b6c
   140069b5b:	bt     rdx,0x9
   140069b60:	jae    0x140069b6c
   140069b62:	call   0x14006a2ac
   140069b67:	and    ebx,0xfffffffb
   140069b6a:	jmp    0x140069ba8
   140069b6c:	test   dil,0x1
   140069b70:	je     0x140069b88
   140069b72:	bt     rdx,0xa
   140069b77:	jae    0x140069b88
   140069b79:	mov    ecx,0x8
   140069b7e:	call   0x14006a2ac
   140069b83:	and    ebx,0xfffffffe
   140069b86:	jmp    0x140069ba8
   140069b88:	test   dil,0x2
   140069b8c:	je     0x140069ba8
   140069b8e:	bt     rdx,0xb
   140069b93:	jae    0x140069ba8
   140069b95:	test   dil,0x10
   140069b99:	je     0x140069ba5
   140069b9b:	mov    ecx,0x10
   140069ba0:	call   0x14006a2ac
   140069ba5:	and    ebx,0xfffffffd
   140069ba8:	test   dil,0x10
   140069bac:	je     0x140069bc2
   140069bae:	bt     rsi,0xc
   140069bb3:	jae    0x140069bc2
   140069bb5:	mov    ecx,0x20
   140069bba:	call   0x14006a2ac
   140069bbf:	and    ebx,0xffffffef
   140069bc2:	mov    rsi,QWORD PTR [rsp+0x38]
   140069bc7:	xor    eax,eax
   140069bc9:	test   ebx,ebx
   140069bcb:	mov    rbx,QWORD PTR [rsp+0x30]
   140069bd0:	sete   al
   140069bd3:	add    rsp,0x20
   140069bd7:	pop    rdi
   140069bd8:	ret    
   140069bd9:	int3   
   140069bda:	int3   
   140069bdb:	int3   
   140069bdc:	mov    rax,rsp
   140069bdf:	push   rbp
   140069be0:	push   rbx
   140069be1:	push   rsi
   140069be2:	push   rdi
   140069be3:	push   r14
   140069be5:	lea    rbp,[rax-0x37]
   140069be9:	sub    rsp,0xf0
   140069bf0:	movaps XMMWORD PTR [rax-0x38],xmm6
   140069bf4:	mov    rax,QWORD PTR [rip+0x182e5]        # 0x140081ee0
   140069bfb:	xor    rax,rsp
   140069bfe:	mov    QWORD PTR [rbp-0x11],rax
   140069c02:	mov    esi,edx
   140069c04:	mov    r14,rcx
   140069c07:	mov    edx,0xffc0
   140069c0c:	mov    ecx,0x1f80
   140069c11:	mov    edi,r9d
   140069c14:	mov    rbx,r8
   140069c17:	call   0x14006a230
   140069c1c:	mov    ecx,DWORD PTR [rbp+0x5f]
   140069c1f:	mov    QWORD PTR [rsp+0x40],rax
   140069c24:	mov    QWORD PTR [rsp+0x50],rbx
   140069c29:	movsd  xmm0,QWORD PTR [rsp+0x50]
   140069c2f:	mov    rdx,QWORD PTR [rsp+0x40]
   140069c34:	movsd  QWORD PTR [rsp+0x48],xmm0
   140069c3a:	call   0x140069b20
   140069c3f:	movsd  xmm6,QWORD PTR [rbp+0x77]
   140069c44:	test   eax,eax
   140069c46:	jne    0x140069c88
   140069c48:	cmp    DWORD PTR [rbp+0x7f],0x2
   140069c4c:	jne    0x140069c5f
   140069c4e:	mov    eax,DWORD PTR [rbp-0x41]
   140069c51:	and    eax,0xffffffe3
   140069c54:	movsd  QWORD PTR [rbp-0x51],xmm6
   140069c59:	or     eax,0x3
   140069c5c:	mov    DWORD PTR [rbp-0x41],eax
   140069c5f:	mov    r8d,DWORD PTR [rbp+0x5f]
   140069c63:	lea    rax,[rsp+0x48]
   140069c68:	mov    QWORD PTR [rsp+0x28],rax
   140069c6d:	lea    rdx,[rsp+0x40]
   140069c72:	lea    rax,[rbp+0x6f]
   140069c76:	mov    r9d,esi
   140069c79:	lea    rcx,[rsp+0x60]
   140069c7e:	mov    QWORD PTR [rsp+0x20],rax
   140069c83:	call   0x140069eb0
   140069c88:	call   0x140060588
   140069c8d:	test   al,al
   140069c8f:	je     0x140069cc5
   140069c91:	test   edi,edi
   140069c93:	je     0x140069cc5
   140069c95:	mov    rax,QWORD PTR [rsp+0x40]
   140069c9a:	mov    r8,r14
   140069c9d:	movsd  xmm0,QWORD PTR [rsp+0x48]
   140069ca3:	mov    ecx,edi
   140069ca5:	movsd  xmm3,QWORD PTR [rbp+0x6f]
   140069caa:	mov    edx,DWORD PTR [rbp+0x67]
   140069cad:	mov    QWORD PTR [rsp+0x30],rax
   140069cb2:	movsd  QWORD PTR [rsp+0x28],xmm0
   140069cb8:	movsd  QWORD PTR [rsp+0x20],xmm6
   140069cbe:	call   0x140069ab8
   140069cc3:	jmp    0x140069ce1
   140069cc5:	mov    ecx,edi
   140069cc7:	call   0x14006a1e0
   140069ccc:	mov    rcx,QWORD PTR [rsp+0x40]
   140069cd1:	mov    edx,0xffc0
   140069cd6:	call   0x14006a230
   140069cdb:	movsd  xmm0,QWORD PTR [rsp+0x48]
   140069ce1:	mov    rcx,QWORD PTR [rbp-0x11]
   140069ce5:	xor    rcx,rsp
   140069ce8:	call   0x140055f90
   140069ced:	movaps xmm6,XMMWORD PTR [rsp+0xe0]
   140069cf5:	add    rsp,0xf0
   140069cfc:	pop    r14
   140069cfe:	pop    rdi
   140069cff:	pop    rsi
   140069d00:	pop    rbx
   140069d01:	pop    rbp
   140069d02:	ret    
   140069d03:	int3   
   140069d04:	movabs rax,0x8000000000000
   140069d0e:	or     rcx,rax
   140069d11:	mov    QWORD PTR [rsp+0x8],rcx
   140069d16:	movsd  xmm0,QWORD PTR [rsp+0x8]
   140069d1c:	ret    
   140069d1d:	int3   
   140069d1e:	int3   
   140069d1f:	int3   
   140069d20:	rex push rbx
   140069d22:	sub    rsp,0x10
   140069d26:	xor    r8d,r8d
   140069d29:	xor    ecx,ecx
   140069d2b:	mov    DWORD PTR [rip+0x3625e],r8d        # 0x14009ff90
   140069d32:	lea    r9d,[r8+0x1]
   140069d36:	mov    eax,r9d
   140069d39:	cpuid  
   140069d3b:	mov    DWORD PTR [rsp],eax
   140069d3e:	mov    eax,0x18001000
   140069d43:	mov    DWORD PTR [rsp+0x8],ecx
   140069d47:	and    ecx,eax
   140069d49:	mov    DWORD PTR [rsp+0x4],ebx
   140069d4d:	mov    DWORD PTR [rsp+0xc],edx
   140069d51:	cmp    ecx,eax
   140069d53:	jne    0x140069d81
   140069d55:	xor    ecx,ecx
   140069d57:	xgetbv 
   140069d5a:	shl    rdx,0x20
   140069d5e:	or     rdx,rax
   140069d61:	mov    QWORD PTR [rsp+0x20],rdx
   140069d66:	mov    rax,QWORD PTR [rsp+0x20]
   140069d6b:	mov    r8d,DWORD PTR [rip+0x3621e]        # 0x14009ff90
   140069d72:	and    al,0x6
   140069d74:	cmp    al,0x6
   140069d76:	cmove  r8d,r9d
   140069d7a:	mov    DWORD PTR [rip+0x3620f],r8d        # 0x14009ff90
   140069d81:	mov    DWORD PTR [rip+0x3620c],r8d        # 0x14009ff94
   140069d88:	xor    eax,eax
   140069d8a:	add    rsp,0x10
   140069d8e:	pop    rbx
   140069d8f:	ret    
   140069d90:	sub    rsp,0x38
   140069d94:	lea    rax,[rip+0xf345]        # 0x1400790e0
   140069d9b:	mov    r9d,0x1b
   140069da1:	mov    QWORD PTR [rsp+0x20],rax
   140069da6:	call   0x140069db0
   140069dab:	add    rsp,0x38
   140069daf:	ret    
   140069db0:	mov    rax,rsp
   140069db3:	sub    rsp,0x68
   140069db7:	movaps XMMWORD PTR [rax-0x18],xmm6
   140069dbb:	movaps xmm6,xmm1
   140069dbe:	mov    edx,r9d
   140069dc1:	movaps xmm3,xmm0
   140069dc4:	sub    r8d,0x1
   140069dc8:	je     0x140069df4
   140069dca:	cmp    r8d,0x1
   140069dce:	jne    0x140069e39
   140069dd0:	mov    DWORD PTR [rax-0x28],r8d
   140069dd4:	xorps  xmm2,xmm2
   140069dd7:	movsd  QWORD PTR [rax-0x30],xmm2
   140069ddc:	mov    r9d,r8d
   140069ddf:	movsd  QWORD PTR [rax-0x38],xmm0
   140069de4:	mov    DWORD PTR [rax-0x40],0x21
   140069deb:	mov    DWORD PTR [rax-0x48],0x8
   140069df2:	jmp    0x140069e21
   140069df4:	mov    DWORD PTR [rsp+0x40],0x1
   140069dfc:	xorps  xmm0,xmm0
   140069dff:	movsd  QWORD PTR [rsp+0x38],xmm0
   140069e05:	mov    r9d,0x2
   140069e0b:	movsd  QWORD PTR [rsp+0x30],xmm3
   140069e11:	mov    DWORD PTR [rsp+0x28],0x22
   140069e19:	mov    DWORD PTR [rsp+0x20],0x4
   140069e21:	mov    rcx,QWORD PTR [rsp+0x90]
   140069e29:	movsd  QWORD PTR [rsp+0x78],xmm1
   140069e2f:	mov    r8,QWORD PTR [rsp+0x78]
   140069e34:	call   0x140069bdc
   140069e39:	movaps xmm0,xmm6
   140069e3c:	movaps xmm6,XMMWORD PTR [rsp+0x50]
   140069e41:	add    rsp,0x68
   140069e45:	ret    
   140069e46:	int3   
   140069e47:	int3   
   140069e48:	int3   
   140069e49:	int3   
   140069e4a:	int3   
   140069e4b:	int3   
   140069e4c:	int3   
   140069e4d:	int3   
   140069e4e:	int3   
   140069e4f:	int3   
   140069e50:	int3   
   140069e51:	int3   
   140069e52:	int3   
   140069e53:	int3   
   140069e54:	int3   
   140069e55:	int3   
   140069e56:	data16 nop WORD PTR [rax+rax*1+0x0]
   140069e60:	sub    rsp,0x8
   140069e64:	stmxcsr DWORD PTR [rsp]
   140069e68:	mov    eax,DWORD PTR [rsp]
   140069e6b:	add    rsp,0x8
   140069e6f:	ret    
   140069e70:	mov    DWORD PTR [rsp+0x8],ecx
   140069e74:	ldmxcsr DWORD PTR [rsp+0x8]
   140069e79:	ret    
   140069e7a:	stmxcsr DWORD PTR [rsp+0x8]
   140069e7f:	mov    ecx,0xffffffc0
   140069e84:	and    DWORD PTR [rsp+0x8],ecx
   140069e88:	ldmxcsr DWORD PTR [rsp+0x8]
   140069e8d:	ret    
   140069e8e:	ucomisd xmm0,QWORD PTR [rip+0xf25a]        # 0x1400790f0
   140069e96:	jae    0x140069eac
   140069e98:	ucomisd xmm0,QWORD PTR [rip+0xf258]        # 0x1400790f8
   140069ea0:	jbe    0x140069eac
   140069ea2:	cvtsd2si rcx,xmm0
   140069ea7:	cvtsi2sd xmm0,rcx
   140069eac:	ret    
   140069ead:	int3   
   140069eae:	int3   
   140069eaf:	int3   
   140069eb0:	sub    rsp,0x48
   140069eb4:	and    DWORD PTR [rsp+0x30],0x0
   140069eb9:	mov    rax,QWORD PTR [rsp+0x78]
   140069ebe:	mov    QWORD PTR [rsp+0x28],rax
   140069ec3:	mov    rax,QWORD PTR [rsp+0x70]
   140069ec8:	mov    QWORD PTR [rsp+0x20],rax
   140069ecd:	call   0x140069ed8
   140069ed2:	add    rsp,0x48
   140069ed6:	ret    
   140069ed7:	int3   
   140069ed8:	mov    rax,rsp
   140069edb:	mov    QWORD PTR [rax+0x10],rbx
   140069edf:	mov    QWORD PTR [rax+0x18],rsi
   140069ee3:	mov    QWORD PTR [rax+0x20],rdi
   140069ee7:	mov    QWORD PTR [rax+0x8],rcx
   140069eeb:	push   rbp
   140069eec:	mov    rbp,rsp
   140069eef:	sub    rsp,0x20
   140069ef3:	mov    rbx,rdx
   140069ef6:	mov    esi,r9d
   140069ef9:	xor    edx,edx
   140069efb:	mov    edi,0xc000000d
   140069f00:	mov    DWORD PTR [rcx+0x4],edx
   140069f03:	mov    rax,QWORD PTR [rbp+0x10]
   140069f07:	mov    DWORD PTR [rax+0x8],edx
   140069f0a:	mov    rax,QWORD PTR [rbp+0x10]
   140069f0e:	mov    DWORD PTR [rax+0xc],edx
   140069f11:	test   r8b,0x10
   140069f15:	je     0x140069f24
   140069f17:	mov    rax,QWORD PTR [rbp+0x10]
   140069f1b:	mov    edi,0xc000008f
   140069f20:	or     DWORD PTR [rax+0x4],0x1
   140069f24:	test   r8b,0x2
   140069f28:	je     0x140069f37
   140069f2a:	mov    rax,QWORD PTR [rbp+0x10]
   140069f2e:	mov    edi,0xc0000093
   140069f33:	or     DWORD PTR [rax+0x4],0x2
   140069f37:	test   r8b,0x1
   140069f3b:	je     0x140069f4a
   140069f3d:	mov    rax,QWORD PTR [rbp+0x10]
   140069f41:	mov    edi,0xc0000091
   140069f46:	or     DWORD PTR [rax+0x4],0x4
   140069f4a:	test   r8b,0x4
   140069f4e:	je     0x140069f5d
   140069f50:	mov    rax,QWORD PTR [rbp+0x10]
   140069f54:	mov    edi,0xc000008e
   140069f59:	or     DWORD PTR [rax+0x4],0x8
   140069f5d:	test   r8b,0x8
   140069f61:	je     0x140069f70
   140069f63:	mov    rax,QWORD PTR [rbp+0x10]
   140069f67:	mov    edi,0xc0000090
   140069f6c:	or     DWORD PTR [rax+0x4],0x10
   140069f70:	mov    rcx,QWORD PTR [rbp+0x10]
   140069f74:	mov    rax,QWORD PTR [rbx]
   140069f77:	shr    rax,0x7
   140069f7b:	shl    eax,0x4
   140069f7e:	not    eax
   140069f80:	xor    eax,DWORD PTR [rcx+0x8]
   140069f83:	and    eax,0x10
   140069f86:	xor    DWORD PTR [rcx+0x8],eax
   140069f89:	mov    rcx,QWORD PTR [rbp+0x10]
   140069f8d:	mov    rax,QWORD PTR [rbx]
   140069f90:	shr    rax,0x9
   140069f94:	shl    eax,0x3
   140069f97:	not    eax
   140069f99:	xor    eax,DWORD PTR [rcx+0x8]
   140069f9c:	and    eax,0x8
   140069f9f:	xor    DWORD PTR [rcx+0x8],eax
   140069fa2:	mov    rcx,QWORD PTR [rbp+0x10]
   140069fa6:	mov    rax,QWORD PTR [rbx]
   140069fa9:	shr    rax,0xa
   140069fad:	shl    eax,0x2
   140069fb0:	not    eax
   140069fb2:	xor    eax,DWORD PTR [rcx+0x8]
   140069fb5:	and    eax,0x4
   140069fb8:	xor    DWORD PTR [rcx+0x8],eax
   140069fbb:	mov    rcx,QWORD PTR [rbp+0x10]
   140069fbf:	mov    rax,QWORD PTR [rbx]
   140069fc2:	shr    rax,0xb
   140069fc6:	add    eax,eax
   140069fc8:	not    eax
   140069fca:	xor    eax,DWORD PTR [rcx+0x8]
   140069fcd:	and    eax,0x2
   140069fd0:	xor    DWORD PTR [rcx+0x8],eax
   140069fd3:	mov    eax,DWORD PTR [rbx]
   140069fd5:	mov    rcx,QWORD PTR [rbp+0x10]
   140069fd9:	shr    rax,0xc
   140069fdd:	not    eax
   140069fdf:	xor    eax,DWORD PTR [rcx+0x8]
   140069fe2:	and    eax,0x1
   140069fe5:	xor    DWORD PTR [rcx+0x8],eax
   140069fe8:	call   0x14006a2cc
   140069fed:	mov    rdx,rax
   140069ff0:	test   al,0x1
   140069ff2:	je     0x140069ffc
   140069ff4:	mov    rcx,QWORD PTR [rbp+0x10]
   140069ff8:	or     DWORD PTR [rcx+0xc],0x10
   140069ffc:	test   al,0x4
   140069ffe:	je     0x14006a008
   14006a000:	mov    rcx,QWORD PTR [rbp+0x10]
   14006a004:	or     DWORD PTR [rcx+0xc],0x8
   14006a008:	test   al,0x8
   14006a00a:	je     0x14006a014
   14006a00c:	mov    rax,QWORD PTR [rbp+0x10]
   14006a010:	or     DWORD PTR [rax+0xc],0x4
   14006a014:	test   dl,0x10
   14006a017:	je     0x14006a021
   14006a019:	mov    rax,QWORD PTR [rbp+0x10]
   14006a01d:	or     DWORD PTR [rax+0xc],0x2
   14006a021:	test   dl,0x20
   14006a024:	je     0x14006a02e
   14006a026:	mov    rax,QWORD PTR [rbp+0x10]
   14006a02a:	or     DWORD PTR [rax+0xc],0x1
   14006a02e:	mov    eax,DWORD PTR [rbx]
   14006a030:	mov    ecx,0x6000
   14006a035:	and    rax,rcx
   14006a038:	je     0x14006a078
   14006a03a:	cmp    rax,0x2000
   14006a040:	je     0x14006a068
   14006a042:	cmp    rax,0x4000
   14006a048:	je     0x14006a058
   14006a04a:	cmp    rax,rcx
   14006a04d:	jne    0x14006a07f
   14006a04f:	mov    rax,QWORD PTR [rbp+0x10]
   14006a053:	or     DWORD PTR [rax],0x3
   14006a056:	jmp    0x14006a07f
   14006a058:	mov    rax,QWORD PTR [rbp+0x10]
   14006a05c:	and    DWORD PTR [rax],0xfffffffe
   14006a05f:	mov    rax,QWORD PTR [rbp+0x10]
   14006a063:	or     DWORD PTR [rax],0x2
   14006a066:	jmp    0x14006a07f
   14006a068:	mov    rax,QWORD PTR [rbp+0x10]
   14006a06c:	and    DWORD PTR [rax],0xfffffffd
   14006a06f:	mov    rax,QWORD PTR [rbp+0x10]
   14006a073:	or     DWORD PTR [rax],0x1
   14006a076:	jmp    0x14006a07f
   14006a078:	mov    rax,QWORD PTR [rbp+0x10]
   14006a07c:	and    DWORD PTR [rax],0xfffffffc
   14006a07f:	mov    rax,QWORD PTR [rbp+0x10]
   14006a083:	and    esi,0xfff
   14006a089:	shl    esi,0x5
   14006a08c:	and    DWORD PTR [rax],0xfffe001f
   14006a092:	mov    rax,QWORD PTR [rbp+0x10]
   14006a096:	or     DWORD PTR [rax],esi
   14006a098:	mov    rax,QWORD PTR [rbp+0x10]
   14006a09c:	mov    rsi,QWORD PTR [rbp+0x38]
   14006a0a0:	or     DWORD PTR [rax+0x20],0x1
   14006a0a4:	cmp    DWORD PTR [rbp+0x40],0x0
   14006a0a8:	je     0x14006a0dd
   14006a0aa:	mov    rax,QWORD PTR [rbp+0x10]
   14006a0ae:	mov    edx,0xffffffe1
   14006a0b3:	and    DWORD PTR [rax+0x20],edx
   14006a0b6:	mov    rax,QWORD PTR [rbp+0x30]
   14006a0ba:	mov    ecx,DWORD PTR [rax]
   14006a0bc:	mov    rax,QWORD PTR [rbp+0x10]
   14006a0c0:	mov    DWORD PTR [rax+0x10],ecx
   14006a0c3:	mov    rax,QWORD PTR [rbp+0x10]
   14006a0c7:	or     DWORD PTR [rax+0x60],0x1
   14006a0cb:	mov    rax,QWORD PTR [rbp+0x10]
   14006a0cf:	and    DWORD PTR [rax+0x60],edx
   14006a0d2:	mov    rax,QWORD PTR [rbp+0x10]
   14006a0d6:	mov    ecx,DWORD PTR [rsi]
   14006a0d8:	mov    DWORD PTR [rax+0x50],ecx
   14006a0db:	jmp    0x14006a125
   14006a0dd:	mov    rcx,QWORD PTR [rbp+0x10]
   14006a0e1:	mov    r8d,0xffffffe3
   14006a0e7:	mov    eax,DWORD PTR [rcx+0x20]
   14006a0ea:	and    eax,r8d
   14006a0ed:	or     eax,0x2
   14006a0f0:	mov    DWORD PTR [rcx+0x20],eax
   14006a0f3:	mov    rax,QWORD PTR [rbp+0x30]
   14006a0f7:	mov    rcx,QWORD PTR [rax]
   14006a0fa:	mov    rax,QWORD PTR [rbp+0x10]
   14006a0fe:	mov    QWORD PTR [rax+0x10],rcx
   14006a102:	mov    rax,QWORD PTR [rbp+0x10]
   14006a106:	or     DWORD PTR [rax+0x60],0x1
   14006a10a:	mov    rdx,QWORD PTR [rbp+0x10]
   14006a10e:	mov    eax,DWORD PTR [rdx+0x60]
   14006a111:	and    eax,r8d
   14006a114:	or     eax,0x2
   14006a117:	mov    DWORD PTR [rdx+0x60],eax
   14006a11a:	mov    rax,QWORD PTR [rbp+0x10]
   14006a11e:	mov    rdx,QWORD PTR [rsi]
   14006a121:	mov    QWORD PTR [rax+0x50],rdx
   14006a125:	call   0x14006a210
   14006a12a:	xor    edx,edx
   14006a12c:	lea    r9,[rbp+0x10]
   14006a130:	mov    ecx,edi
   14006a132:	lea    r8d,[rdx+0x1]
   14006a136:	call   QWORD PTR [rip+0x22cc]        # 0x14006c408
   14006a13c:	mov    rcx,QWORD PTR [rbp+0x10]
   14006a140:	test   BYTE PTR [rcx+0x8],0x10
   14006a144:	je     0x14006a14b
   14006a146:	btr    QWORD PTR [rbx],0x7
   14006a14b:	test   BYTE PTR [rcx+0x8],0x8
   14006a14f:	je     0x14006a156
   14006a151:	btr    QWORD PTR [rbx],0x9
   14006a156:	test   BYTE PTR [rcx+0x8],0x4
   14006a15a:	je     0x14006a161
   14006a15c:	btr    QWORD PTR [rbx],0xa
   14006a161:	test   BYTE PTR [rcx+0x8],0x2
   14006a165:	je     0x14006a16c
   14006a167:	btr    QWORD PTR [rbx],0xb
   14006a16c:	test   BYTE PTR [rcx+0x8],0x1
   14006a170:	je     0x14006a177
   14006a172:	btr    QWORD PTR [rbx],0xc
   14006a177:	mov    eax,DWORD PTR [rcx]
   14006a179:	and    eax,0x3
   14006a17c:	je     0x14006a1ae
   14006a17e:	sub    eax,0x1
   14006a181:	je     0x14006a1a2
   14006a183:	sub    eax,0x1
   14006a186:	je     0x14006a196
   14006a188:	cmp    eax,0x1
   14006a18b:	jne    0x14006a1b5
   14006a18d:	or     QWORD PTR [rbx],0x6000
   14006a194:	jmp    0x14006a1b5
   14006a196:	btr    QWORD PTR [rbx],0xd
   14006a19b:	bts    QWORD PTR [rbx],0xe
   14006a1a0:	jmp    0x14006a1b5
   14006a1a2:	btr    QWORD PTR [rbx],0xe
   14006a1a7:	bts    QWORD PTR [rbx],0xd
   14006a1ac:	jmp    0x14006a1b5
   14006a1ae:	and    QWORD PTR [rbx],0xffffffffffff9fff
   14006a1b5:	cmp    DWORD PTR [rbp+0x40],0x0
   14006a1b9:	je     0x14006a1c2
   14006a1bb:	mov    eax,DWORD PTR [rcx+0x50]
   14006a1be:	mov    DWORD PTR [rsi],eax
   14006a1c0:	jmp    0x14006a1c9
   14006a1c2:	mov    rax,QWORD PTR [rcx+0x50]
   14006a1c6:	mov    QWORD PTR [rsi],rax
   14006a1c9:	mov    rbx,QWORD PTR [rsp+0x38]
   14006a1ce:	mov    rsi,QWORD PTR [rsp+0x40]
   14006a1d3:	mov    rdi,QWORD PTR [rsp+0x48]
   14006a1d8:	add    rsp,0x20
   14006a1dc:	pop    rbp
   14006a1dd:	ret    
   14006a1de:	int3   
   14006a1df:	int3   
   14006a1e0:	sub    rsp,0x28
   14006a1e4:	cmp    ecx,0x1
   14006a1e7:	je     0x14006a1fe
   14006a1e9:	lea    eax,[rcx-0x2]
   14006a1ec:	cmp    eax,0x1
   14006a1ef:	ja     0x14006a209
   14006a1f1:	call   0x140060e94
   14006a1f6:	mov    DWORD PTR [rax],0x22
   14006a1fc:	jmp    0x14006a209
   14006a1fe:	call   0x140060e94
   14006a203:	mov    DWORD PTR [rax],0x21
   14006a209:	add    rsp,0x28
   14006a20d:	ret    
   14006a20e:	int3   
   14006a20f:	int3   
   14006a210:	rex push rbx
   14006a212:	sub    rsp,0x20
   14006a216:	call   0x140069e60
   14006a21b:	mov    ebx,eax
   14006a21d:	and    ebx,0x3f
   14006a220:	call   0x140069e7a
   14006a225:	mov    eax,ebx
   14006a227:	add    rsp,0x20
   14006a22b:	pop    rbx
   14006a22c:	ret    
   14006a22d:	int3   
   14006a22e:	int3   
   14006a22f:	int3   
   14006a230:	mov    QWORD PTR [rsp+0x18],rbx
   14006a235:	mov    QWORD PTR [rsp+0x20],rsi
   14006a23a:	push   rdi
   14006a23b:	sub    rsp,0x20
   14006a23f:	mov    rbx,rdx
   14006a242:	mov    rdi,rcx
   14006a245:	call   0x140069e60
   14006a24a:	mov    esi,eax
   14006a24c:	mov    DWORD PTR [rsp+0x38],eax
   14006a250:	mov    ecx,ebx
   14006a252:	not    ecx
   14006a254:	or     ecx,0xffff807f
   14006a25a:	and    ecx,eax
   14006a25c:	and    edi,ebx
   14006a25e:	or     ecx,edi
   14006a260:	mov    DWORD PTR [rsp+0x30],ecx
   14006a264:	cmp    BYTE PTR [rip+0x185a5],0x0        # 0x140082810
   14006a26b:	je     0x14006a292
   14006a26d:	test   cl,0x40
   14006a270:	je     0x14006a292
   14006a272:	call   0x140069e70
   14006a277:	jmp    0x14006a290
   14006a279:	mov    BYTE PTR [rip+0x18590],0x0        # 0x140082810
   14006a280:	mov    ecx,DWORD PTR [rsp+0x30]
   14006a284:	and    ecx,0xffffffbf
   14006a287:	call   0x140069e70
   14006a28c:	mov    esi,DWORD PTR [rsp+0x38]
   14006a290:	jmp    0x14006a29a
   14006a292:	and    ecx,0xffffffbf
   14006a295:	call   0x140069e70
   14006a29a:	mov    eax,esi
   14006a29c:	mov    rbx,QWORD PTR [rsp+0x40]
   14006a2a1:	mov    rsi,QWORD PTR [rsp+0x48]
   14006a2a6:	add    rsp,0x20
   14006a2aa:	pop    rdi
   14006a2ab:	ret    
   14006a2ac:	rex push rbx
   14006a2ae:	sub    rsp,0x20
   14006a2b2:	mov    rbx,rcx
   14006a2b5:	call   0x140069e60
   14006a2ba:	and    ebx,0x3f
   14006a2bd:	or     eax,ebx
   14006a2bf:	mov    ecx,eax
   14006a2c1:	add    rsp,0x20
   14006a2c5:	pop    rbx
   14006a2c6:	jmp    0x140069e70
   14006a2cb:	int3   
   14006a2cc:	sub    rsp,0x28
   14006a2d0:	call   0x140069e60
   14006a2d5:	and    eax,0x3f
   14006a2d8:	add    rsp,0x28
   14006a2dc:	ret    
   14006a2dd:	int3   
   14006a2de:	jmp    QWORD PTR [rip+0x20d4]        # 0x14006c3b8
   14006a2e4:	jmp    QWORD PTR [rip+0x2126]        # 0x14006c410
   14006a2ea:	jmp    QWORD PTR [rip+0x1d10]        # 0x14006c000
   14006a2f0:	movsxd r8,DWORD PTR [rcx+0x3c]
   14006a2f4:	xor    r9d,r9d
   14006a2f7:	add    r8,rcx
   14006a2fa:	mov    r10,rdx
   14006a2fd:	movzx  eax,WORD PTR [r8+0x14]
   14006a302:	movzx  r11d,WORD PTR [r8+0x6]
   14006a307:	add    rax,0x18
   14006a30b:	add    rax,r8
   14006a30e:	test   r11d,r11d
   14006a311:	je     0x14006a331
   14006a313:	mov    edx,DWORD PTR [rax+0xc]
   14006a316:	cmp    r10,rdx
   14006a319:	jb     0x14006a325
   14006a31b:	mov    ecx,DWORD PTR [rax+0x8]
   14006a31e:	add    ecx,edx
   14006a320:	cmp    r10,rcx
   14006a323:	jb     0x14006a333
   14006a325:	inc    r9d
   14006a328:	add    rax,0x28
   14006a32c:	cmp    r9d,r11d
   14006a32f:	jb     0x14006a313
   14006a331:	xor    eax,eax
   14006a333:	ret    
   14006a334:	int3   
   14006a335:	int3   
   14006a336:	int3   
   14006a337:	int3   
   14006a338:	int3   
   14006a339:	int3   
   14006a33a:	int3   
   14006a33b:	int3   
   14006a33c:	int3   
   14006a33d:	int3   
   14006a33e:	int3   
   14006a33f:	int3   
   14006a340:	mov    QWORD PTR [rsp+0x8],rbx
   14006a345:	push   rdi
   14006a346:	sub    rsp,0x20
   14006a34a:	mov    rbx,rcx
   14006a34d:	lea    rdi,[rip+0xfffffffffff95cac]        # 0x140000000
   14006a354:	mov    rcx,rdi
   14006a357:	call   0x14006a390
   14006a35c:	test   eax,eax
   14006a35e:	je     0x14006a382
   14006a360:	sub    rbx,rdi
   14006a363:	mov    rdx,rbx
   14006a366:	mov    rcx,rdi
   14006a369:	call   0x14006a2f0
   14006a36e:	test   rax,rax
   14006a371:	je     0x14006a382
   14006a373:	mov    eax,DWORD PTR [rax+0x24]
   14006a376:	shr    eax,0x1f
   14006a379:	not    eax
   14006a37b:	and    eax,0x1
   14006a37e:	jmp    0x14006a382
   14006a380:	xor    eax,eax
   14006a382:	mov    rbx,QWORD PTR [rsp+0x30]
   14006a387:	add    rsp,0x20
   14006a38b:	pop    rdi
   14006a38c:	ret    
   14006a38d:	int3   
   14006a38e:	int3   
   14006a38f:	int3   
   14006a390:	mov    rax,rcx
   14006a393:	mov    ecx,0x5a4d
   14006a398:	cmp    WORD PTR [rax],cx
   14006a39b:	je     0x14006a3a0
   14006a39d:	xor    eax,eax
   14006a39f:	ret    
   14006a3a0:	movsxd rcx,DWORD PTR [rax+0x3c]
   14006a3a4:	add    rcx,rax
   14006a3a7:	xor    eax,eax
   14006a3a9:	cmp    DWORD PTR [rcx],0x4550
   14006a3af:	jne    0x14006a3bd
   14006a3b1:	mov    edx,0x20b
   14006a3b6:	cmp    WORD PTR [rcx+0x18],dx
   14006a3ba:	sete   al
   14006a3bd:	ret    
   14006a3be:	int3   
   14006a3bf:	int3   
   14006a3c0:	sub    rsp,0x18
   14006a3c4:	xor    r8d,r8d
   14006a3c7:	mov    r9,rcx
   14006a3ca:	test   edx,edx
   14006a3cc:	jne    0x14006a416
   14006a3ce:	and    r9d,0xf
   14006a3d2:	mov    rdx,rcx
   14006a3d5:	and    rdx,0xfffffffffffffff0
   14006a3d9:	mov    ecx,r9d
   14006a3dc:	or     r9d,0xffffffff
   14006a3e0:	xorps  xmm1,xmm1
   14006a3e3:	shl    r9d,cl
   14006a3e6:	movdqa xmm0,XMMWORD PTR [rdx]
   14006a3ea:	pcmpeqb xmm0,xmm1
   14006a3ee:	pmovmskb eax,xmm0
   14006a3f2:	and    eax,r9d
   14006a3f5:	jne    0x14006a40b
   14006a3f7:	add    rdx,0x10
   14006a3fb:	movdqa xmm0,XMMWORD PTR [rdx]
   14006a3ff:	pcmpeqb xmm0,xmm1
   14006a403:	pmovmskb eax,xmm0
   14006a407:	test   eax,eax
   14006a409:	je     0x14006a3f7
   14006a40b:	bsf    eax,eax
   14006a40e:	add    rax,rdx
   14006a411:	jmp    0x14006a4bc
   14006a416:	cmp    DWORD PTR [rip+0x17adb],0x2        # 0x140081ef8
   14006a41d:	jge    0x14006a4c1
   14006a423:	mov    r10,rcx
   14006a426:	movzx  eax,dl
   14006a429:	and    r9d,0xf
   14006a42d:	and    r10,0xfffffffffffffff0
   14006a431:	mov    ecx,eax
   14006a433:	xorps  xmm2,xmm2
   14006a436:	shl    ecx,0x8
   14006a439:	or     ecx,eax
   14006a43b:	movd   xmm0,ecx
   14006a43f:	mov    ecx,r9d
   14006a442:	pshuflw xmm1,xmm0,0x0
   14006a447:	or     r9d,0xffffffff
   14006a44b:	shl    r9d,cl
   14006a44e:	movdqa xmm0,xmm2
   14006a452:	pcmpeqb xmm0,XMMWORD PTR [r10]
   14006a457:	pmovmskb ecx,xmm0
   14006a45b:	pshufd xmm3,xmm1,0x0
   14006a460:	movdqa xmm0,xmm3
   14006a464:	pcmpeqb xmm0,XMMWORD PTR [r10]
   14006a469:	pmovmskb edx,xmm0
   14006a46d:	and    edx,r9d
   14006a470:	and    ecx,r9d
   14006a473:	jne    0x14006a4a3
   14006a475:	bsr    ecx,edx
   14006a478:	movdqa xmm1,xmm2
   14006a47c:	movdqa xmm0,xmm3
   14006a480:	add    rcx,r10
   14006a483:	test   edx,edx
   14006a485:	cmovne r8,rcx
   14006a489:	add    r10,0x10
   14006a48d:	pcmpeqb xmm1,XMMWORD PTR [r10]
   14006a492:	pcmpeqb xmm0,XMMWORD PTR [r10]
   14006a497:	pmovmskb ecx,xmm1
   14006a49b:	pmovmskb edx,xmm0
   14006a49f:	test   ecx,ecx
   14006a4a1:	je     0x14006a475
   14006a4a3:	mov    eax,ecx
   14006a4a5:	neg    eax
   14006a4a7:	and    eax,ecx
   14006a4a9:	dec    eax
   14006a4ab:	and    edx,eax
   14006a4ad:	bsr    ecx,edx
   14006a4b0:	add    rcx,r10
   14006a4b3:	test   edx,edx
   14006a4b5:	cmovne r8,rcx
   14006a4b9:	mov    rax,r8
   14006a4bc:	add    rsp,0x18
   14006a4c0:	ret    
   14006a4c1:	test   cl,0xf
   14006a4c4:	je     0x14006a4df
   14006a4c6:	movsx  eax,BYTE PTR [r9]
   14006a4ca:	cmp    eax,edx
   14006a4cc:	cmove  r8,r9
   14006a4d0:	cmp    BYTE PTR [r9],0x0
   14006a4d4:	je     0x14006a4b9
   14006a4d6:	inc    r9
   14006a4d9:	test   r9b,0xf
   14006a4dd:	jne    0x14006a4c6
   14006a4df:	movzx  eax,dl
   14006a4e2:	movd   xmm0,eax
   14006a4e6:	pcmpistri xmm0,XMMWORD PTR [r9],0x40
   14006a4ed:	jae    0x14006a4fc
   14006a4ef:	movsxd r8,ecx
   14006a4f2:	add    r8,r9
   14006a4f5:	pcmpistri xmm0,XMMWORD PTR [r9],0x40
   14006a4fc:	je     0x14006a4b9
   14006a4fe:	add    r9,0x10
   14006a502:	jmp    0x14006a4e6
   14006a504:	int3   
   14006a505:	int3   
   14006a506:	int3   
   14006a507:	int3   
   14006a508:	int3   
   14006a509:	int3   
   14006a50a:	int3   
   14006a50b:	int3   
   14006a50c:	int3   
   14006a50d:	int3   
   14006a50e:	int3   
   14006a50f:	int3   
   14006a510:	int3   
   14006a511:	int3   
   14006a512:	int3   
   14006a513:	int3   
   14006a514:	int3   
   14006a515:	int3   
   14006a516:	data16 nop WORD PTR [rax+rax*1+0x0]
   14006a520:	jmp    rax
   14006a522:	int3   
   14006a523:	int3   
   14006a524:	int3   
   14006a525:	int3   
   14006a526:	int3   
   14006a527:	int3   
   14006a528:	int3   
   14006a529:	int3   
   14006a52a:	int3   
   14006a52b:	int3   
   14006a52c:	int3   
   14006a52d:	int3   
   14006a52e:	int3   
   14006a52f:	int3   
   14006a530:	mov    rcx,QWORD PTR [rdx+0x40]
   14006a537:	add    rcx,0x8
   14006a53b:	jmp    0x140001754
   14006a540:	mov    rcx,QWORD PTR [rdx+0x40]
   14006a547:	add    rcx,0x88
   14006a54e:	jmp    0x140001650
   14006a553:	mov    rcx,QWORD PTR [rdx+0x40]
   14006a55a:	add    rcx,0x140
   14006a561:	jmp    0x140001650
   14006a566:	rex push rbp
   14006a568:	sub    rsp,0x20
   14006a56c:	mov    rbp,rdx
   14006a56f:	mov    edx,0x33508
   14006a574:	mov    rcx,QWORD PTR [rbp+0x50]
   14006a578:	call   0x140055df8
   14006a57d:	add    rsp,0x20
   14006a581:	pop    rbp
   14006a582:	ret    
   14006a583:	lea    rcx,[rdx+0x70]
   14006a58a:	jmp    0x140006b44
   14006a58f:	lea    rcx,[rdx+0xb1b0]
   14006a596:	jmp    0x140007880
   14006a59b:	lea    rcx,[rdx+0x21d0]
   14006a5a2:	jmp    0x140007880
   14006a5a7:	rex push rbp
   14006a5a9:	sub    rsp,0x20
   14006a5ad:	mov    rbp,rdx
   14006a5b0:	mov    edx,0x6328
   14006a5b5:	mov    rcx,QWORD PTR [rbp+0x60]
   14006a5b9:	call   0x140055de8
   14006a5be:	add    rsp,0x20
   14006a5c2:	pop    rbp
   14006a5c3:	ret    
   14006a5c4:	rex push rbp
   14006a5c6:	sub    rsp,0x20
   14006a5ca:	mov    rbp,rdx
   14006a5cd:	mov    edx,0x21688
   14006a5d2:	mov    rcx,QWORD PTR [rbp+0x60]
   14006a5d6:	call   0x140055de8
   14006a5db:	add    rsp,0x20
   14006a5df:	pop    rbp
   14006a5e0:	ret    
   14006a5e1:	rex push rbp
   14006a5e3:	sub    rsp,0x20
   14006a5e7:	mov    rbp,rdx
   14006a5ea:	mov    edx,0xe970
   14006a5ef:	mov    rcx,QWORD PTR [rbp+0x60]
   14006a5f3:	call   0x140055de8
   14006a5f8:	add    rsp,0x20
   14006a5fc:	pop    rbp
   14006a5fd:	ret    
   14006a5fe:	lea    rcx,[rdx+0xb0]
   14006a605:	jmp    0x140001650
   14006a60a:	lea    rcx,[rdx+0x11a0]
   14006a611:	jmp    0x140020758
   14006a616:	lea    rcx,[rdx+0xb0]
   14006a61d:	jmp    0x140020758
   14006a622:	lea    rcx,[rdx+0x40]
   14006a629:	jmp    0x1400214dc
   14006a62e:	lea    rcx,[rdx+0x70]
   14006a635:	jmp    0x140007880
   14006a63a:	lea    rcx,[rdx+0x9050]
   14006a641:	jmp    0x140007880
   14006a646:	rex push rbp
   14006a648:	sub    rsp,0x20
   14006a64c:	mov    rbp,rdx
   14006a64f:	mov    edx,0x6328
   14006a654:	mov    rcx,QWORD PTR [rbp+0x40]
   14006a658:	call   0x140055de8
   14006a65d:	add    rsp,0x20
   14006a661:	pop    rbp
   14006a662:	ret    
   14006a663:	rex push rbp
   14006a665:	sub    rsp,0x20
   14006a669:	mov    rbp,rdx
   14006a66c:	mov    edx,0x21688
   14006a671:	mov    rcx,QWORD PTR [rbp+0x40]
   14006a675:	call   0x140055de8
   14006a67a:	add    rsp,0x20
   14006a67e:	pop    rbp
   14006a67f:	ret    
   14006a680:	lea    rcx,[rdx+0x12030]
   14006a687:	jmp    0x1400491fc
   14006a68c:	lea    rcx,[rdx+0x50]
   14006a693:	jmp    0x140020758
   14006a698:	lea    rcx,[rdx+0x50]
   14006a69f:	jmp    0x140020758
   14006a6a4:	lea    rcx,[rdx+0xc0]
   14006a6ab:	jmp    0x140001650
   14006a6b0:	lea    rcx,[rdx+0x10f0]
   14006a6b7:	jmp    0x14004266c
   14006a6bc:	mov    QWORD PTR [rsp+0x10],rdx
   14006a6c1:	push   rbp
   14006a6c2:	sub    rsp,0x30
   14006a6c6:	mov    rbp,rdx
   14006a6c9:	mov    rax,QWORD PTR [rbp+0x30]
   14006a6cd:	mov    rcx,QWORD PTR [rax+0x58]
   14006a6d1:	cmp    QWORD PTR [rcx+0x10],0x400000
   14006a6d9:	jbe    0x14006a6fc
   14006a6db:	and    DWORD PTR [rbp+0xa0],0x0
   14006a6e2:	and    DWORD PTR [rbp+0xa4],0x0
   14006a6e9:	mov    DWORD PTR [rbp+0xa8],0x29
   14006a6f3:	lea    rcx,[rbp+0x40]
   14006a6f7:	call   0x1400479a4
   14006a6fc:	xor    edx,edx
   14006a6fe:	xor    ecx,ecx
   14006a700:	call   0x140058734
   14006a705:	nop
   14006a706:	rex push rbp
   14006a708:	sub    rsp,0x20
   14006a70c:	mov    rbp,rdx
   14006a70f:	mov    edx,0xa7a0
   14006a714:	mov    rcx,QWORD PTR [rbp+0x20]
   14006a718:	call   0x140055de8
   14006a71d:	add    rsp,0x20
   14006a721:	pop    rbp
   14006a722:	ret    
   14006a723:	rex push rbp
   14006a725:	sub    rsp,0x20
   14006a729:	mov    rbp,rdx
   14006a72c:	mov    edx,0x21e8
   14006a731:	mov    rcx,QWORD PTR [rbp+0x20]
   14006a735:	call   0x140055de8
   14006a73a:	add    rsp,0x20
   14006a73e:	pop    rbp
   14006a73f:	ret    
   14006a740:	lea    rcx,[rdx+0x90]
   14006a747:	jmp    0x140001650
   14006a74c:	lea    rcx,[rdx+0x60]
   14006a753:	jmp    0x140001650
   14006a758:	mov    rcx,QWORD PTR [rdx+0x40]
   14006a75f:	jmp    0x140020758
   14006a764:	mov    rcx,QWORD PTR [rdx+0x40]
   14006a76b:	add    rcx,0x1030
   14006a772:	jmp    0x140017eec
   14006a777:	mov    rcx,QWORD PTR [rdx+0x40]
   14006a77e:	add    rcx,0x20f0
   14006a785:	jmp    0x140036e98
   14006a78a:	mov    rcx,QWORD PTR [rdx+0x40]
   14006a791:	add    rcx,0x22f0
   14006a798:	jmp    0x140034a14
   14006a79d:	mov    rcx,QWORD PTR [rdx+0x40]
   14006a7a4:	add    rcx,0x34f0
   14006a7ab:	jmp    0x140007930
   14006a7b0:	mov    rcx,QWORD PTR [rdx+0x40]
   14006a7b7:	add    rcx,0x5848
   14006a7be:	jmp    0x140007930
   14006a7c3:	rex push rbp
   14006a7c5:	sub    rsp,0x20
   14006a7c9:	mov    rbp,rdx
   14006a7cc:	mov    edx,0x83d8
   14006a7d1:	mov    rcx,QWORD PTR [rbp+0x48]
   14006a7d5:	call   0x140055de8
   14006a7da:	add    rsp,0x20
   14006a7de:	pop    rbp
   14006a7df:	ret    
   14006a7e0:	lea    rcx,[rdx+0x50]
   14006a7e7:	jmp    0x140020758
   14006a7ec:	lea    rcx,[rdx+0x20]
   14006a7f3:	jmp    0x140001650
   14006a7f8:	rex push rbp
   14006a7fa:	sub    rsp,0x20
   14006a7fe:	mov    rbp,rdx
   14006a801:	mov    edx,0x6328
   14006a806:	mov    rcx,QWORD PTR [rbp+0x58]
   14006a80a:	call   0x140055de8
   14006a80f:	add    rsp,0x20
   14006a813:	pop    rbp
   14006a814:	ret    
   14006a815:	rex push rbp
   14006a817:	sub    rsp,0x20
   14006a81b:	mov    rbp,rdx
   14006a81e:	mov    edx,0x21688
   14006a823:	mov    rcx,QWORD PTR [rbp+0x58]
   14006a827:	call   0x140055de8
   14006a82c:	add    rsp,0x20
   14006a830:	pop    rbp
   14006a831:	ret    
   14006a832:	lea    rcx,[rdx+0x60]
   14006a839:	jmp    0x140001650
   14006a83e:	lea    rcx,[rdx+0x40]
   14006a845:	jmp    0x140020758
   14006a84a:	lea    rcx,[rdx+0x20]
   14006a851:	jmp    0x14001c2c4
   14006a856:	lea    rcx,[rdx+0x12c0]
   14006a85d:	jmp    0x140020758
   14006a862:	lea    rcx,[rdx+0x290]
   14006a869:	jmp    0x140020758
   14006a86e:	lea    rcx,[rdx+0x50]
   14006a875:	jmp    0x14000794c
   14006a87a:	lea    rcx,[rdx+0x70]
   14006a881:	jmp    0x140036e98
   14006a886:	lea    rcx,[rdx+0x230]
   14006a88d:	jmp    0x1400491fc
   14006a892:	lea    rcx,[rdx+0x30]
   14006a899:	jmp    0x140001650
   14006a89e:	jmp    0x1400585c0
   14006a8a3:	lea    rcx,[rdx+0x28]
   14006a8aa:	jmp    0x140001650
   14006a8af:	lea    rcx,[rdx+0x28]
   14006a8b6:	jmp    0x14000794c
   14006a8bb:	jmp    0x1400585c0
   14006a8c0:	lea    rcx,[rdx+0x28]
   14006a8c7:	jmp    0x140001650
   14006a8cc:	lea    rcx,[rdx+0x58]
   14006a8d3:	jmp    0x140001650
   14006a8d8:	lea    rcx,[rdx+0x110]
   14006a8df:	jmp    0x140001650
   14006a8e4:	lea    rcx,[rdx+0x110]
   14006a8eb:	jmp    0x140001650
   14006a8f0:	lea    rcx,[rdx+0x58]
   14006a8f7:	jmp    0x140001650
   14006a8fc:	lea    rcx,[rdx+0x90]
   14006a903:	jmp    0x140001650
   14006a908:	lea    rcx,[rdx+0x38]
   14006a90f:	jmp    0x140001650
   14006a914:	lea    rcx,[rdx+0x58]
   14006a91b:	jmp    0x140001650
   14006a920:	lea    rcx,[rdx+0x60]
   14006a927:	jmp    0x140001650
   14006a92c:	lea    rcx,[rdx+0xf0]
   14006a933:	jmp    0x14000794c
   14006a938:	jmp    0x1400585c0
   14006a93d:	lea    rcx,[rdx+0x50]
   14006a944:	jmp    0x140001650
   14006a949:	lea    rcx,[rdx+0x60]
   14006a950:	jmp    0x1400491fc
   14006a955:	mov    rcx,QWORD PTR [rdx+0x40]
   14006a95c:	add    rcx,0x20
   14006a960:	jmp    0x14003461c
   14006a965:	rex push rbp
   14006a967:	sub    rsp,0x20
   14006a96b:	mov    rbp,rdx
   14006a96e:	mov    eax,0x8d0
   14006a973:	mul    QWORD PTR [rbp+0x50]
   14006a977:	mov    rdx,rax
   14006a97a:	mov    rax,0xffffffffffffffff
   14006a981:	cmovo  rdx,rax
   14006a985:	add    rdx,0x8
   14006a989:	mov    rax,0xffffffffffffffff
   14006a990:	cmovb  rdx,rax
   14006a994:	mov    rcx,QWORD PTR [rbp+0x60]
   14006a998:	call   0x140055df8
   14006a99d:	add    rsp,0x20
   14006a9a1:	pop    rbp
   14006a9a2:	ret    
   14006a9a3:	mov    rcx,QWORD PTR [rdx+0x40]
   14006a9aa:	add    rcx,0x1d0
   14006a9b1:	jmp    0x14003461c
   14006a9b6:	rex push rbp
   14006a9b8:	sub    rsp,0x20
   14006a9bc:	mov    rbp,rdx
   14006a9bf:	mov    eax,0x9e8
   14006a9c4:	mul    QWORD PTR [rbp+0x50]
   14006a9c8:	mov    rdx,rax
   14006a9cb:	mov    rax,0xffffffffffffffff
   14006a9d2:	cmovo  rdx,rax
   14006a9d6:	add    rdx,0x8
   14006a9da:	mov    rax,0xffffffffffffffff
   14006a9e1:	cmovb  rdx,rax
   14006a9e5:	mov    rcx,QWORD PTR [rbp+0x60]
   14006a9e9:	call   0x140055df8
   14006a9ee:	add    rsp,0x20
   14006a9f2:	pop    rbp
   14006a9f3:	ret    
   14006a9f4:	lea    rcx,[rdx+0x30]
   14006a9fb:	jmp    0x140023264
   14006aa00:	mov    rcx,QWORD PTR [rdx+0x40]
   14006aa07:	jmp    0x1400266cc
   14006aa0c:	mov    rcx,QWORD PTR [rdx+0x40]
   14006aa13:	add    rcx,0xa408
   14006aa1a:	jmp    0x140001650
   14006aa1f:	mov    rcx,QWORD PTR [rdx+0x40]
   14006aa26:	add    rcx,0xa4c0
   14006aa2d:	jmp    0x140001650
   14006aa32:	mov    rcx,QWORD PTR [rdx+0x40]
   14006aa39:	add    rcx,0xa578
   14006aa40:	jmp    0x140001650
   14006aa45:	mov    rcx,QWORD PTR [rdx+0x40]
   14006aa4c:	add    rcx,0xa630
   14006aa53:	jmp    0x140001650
   14006aa58:	mov    rcx,QWORD PTR [rdx+0x40]
   14006aa5f:	add    rcx,0xa6e8
   14006aa66:	jmp    0x140001650
   14006aa6b:	lea    rcx,[rdx+0x40]
   14006aa72:	jmp    0x140001650
   14006aa77:	lea    rcx,[rdx+0x3660]
   14006aa7e:	jmp    0x14004266c
   14006aa83:	lea    rcx,[rdx+0x100]
   14006aa8a:	jmp    0x140001668
   14006aa8f:	lea    rcx,[rdx+0x100]
   14006aa96:	jmp    0x140001668
   14006aa9b:	lea    rcx,[rdx+0x1470]
   14006aaa2:	jmp    0x14001e000
   14006aaa7:	lea    rcx,[rdx+0x10c0]
   14006aaae:	jmp    0x140007880
   14006aab3:	lea    rcx,[rdx+0x68]
   14006aaba:	jmp    0x140001650
   14006aabf:	lea    rcx,[rdx+0x90]
   14006aac6:	jmp    0x140020758
   14006aacb:	lea    rcx,[rdx+0x48]
   14006aad2:	jmp    0x140001650
   14006aad7:	lea    rcx,[rdx+0x80]
   14006aade:	jmp    0x140020758
   14006aae3:	lea    rcx,[rdx+0x38]
   14006aaea:	jmp    0x140001650
   14006aaef:	lea    rcx,[rdx+0x60]
   14006aaf6:	jmp    0x140020758
   14006aafb:	rex push rbp
   14006aafd:	sub    rsp,0x20
   14006ab01:	mov    rbp,rdx
   14006ab04:	lea    r9,[rip+0xfffffffffffad459]        # 0x140017f64
   14006ab0b:	mov    r8d,0x4
   14006ab11:	mov    edx,0x12c
   14006ab16:	mov    rcx,QWORD PTR [rbp+0x50]
   14006ab1a:	call   0x140055cdc
   14006ab1f:	add    rsp,0x20
   14006ab23:	pop    rbp
   14006ab24:	ret    
   14006ab25:	rex push rbp
   14006ab27:	sub    rsp,0x20
   14006ab2b:	mov    rbp,rdx
   14006ab2e:	mov    rcx,QWORD PTR [rbp+0x50]
   14006ab32:	add    rcx,0x4b4
   14006ab39:	lea    r9,[rip+0xfffffffffffad424]        # 0x140017f64
   14006ab40:	mov    r8d,0x4
   14006ab46:	mov    edx,0x178
   14006ab4b:	call   0x140055cdc
   14006ab50:	add    rsp,0x20
   14006ab54:	pop    rbp
   14006ab55:	ret    
   14006ab56:	lea    rcx,[rdx+0x58]
   14006ab5d:	jmp    0x140001650
   14006ab62:	lea    rcx,[rdx+0xf0]
   14006ab69:	jmp    0x140020758
   14006ab6e:	lea    rcx,[rdx+0x50]
   14006ab75:	jmp    0x140036e98
   14006ab7a:	lea    rcx,[rdx+0x210]
   14006ab81:	jmp    0x1400491fc
   14006ab86:	lea    rcx,[rdx+0x20]
   14006ab8d:	jmp    0x140001650
   14006ab92:	lea    rcx,[rdx+0x20]
   14006ab99:	jmp    0x140001650
   14006ab9e:	lea    rcx,[rdx+0x1240]
   14006aba5:	jmp    0x140020758
   14006abaa:	lea    rcx,[rdx+0x30]
   14006abb1:	jmp    0x140036e98
   14006abb6:	lea    rcx,[rdx+0x32a0]
   14006abbd:	jmp    0x1400491fc
   14006abc2:	lea    rcx,[rdx+0x2270]
   14006abc9:	jmp    0x140020758
   14006abce:	lea    rcx,[rdx+0x1080]
   14006abd5:	jmp    0x140020758
   14006abda:	lea    rcx,[rdx+0x20b0]
   14006abe1:	jmp    0x140020758
   14006abe6:	lea    rcx,[rdx+0x48]
   14006abed:	jmp    0x140001650
   14006abf2:	lea    rcx,[rdx+0x30]
   14006abf9:	jmp    0x14001c2c4
   14006abfe:	lea    rcx,[rdx+0x2a0]
   14006ac05:	jmp    0x140020758
   14006ac0a:	mov    rcx,QWORD PTR [rdx+0x50]
   14006ac11:	add    rcx,0x10
   14006ac15:	jmp    0x140036e98
   14006ac1a:	rex push rbp
   14006ac1c:	sub    rsp,0x20
   14006ac20:	mov    rbp,rdx
   14006ac23:	mov    edx,0xe970
   14006ac28:	mov    rcx,QWORD PTR [rbp+0x58]
   14006ac2c:	call   0x140055de8
   14006ac31:	add    rsp,0x20
   14006ac35:	pop    rbp
   14006ac36:	ret    
   14006ac37:	lea    rcx,[rdx+0x20e0]
   14006ac3e:	jmp    0x140007880
   14006ac43:	lea    rcx,[rdx+0xe0]
   14006ac4a:	jmp    0x140043640
   14006ac4f:	lea    rcx,[rdx+0x1240]
   14006ac56:	jmp    0x140020758
   14006ac5b:	lea    rcx,[rdx+0x30]
   14006ac62:	jmp    0x140020758
   14006ac67:	lea    rcx,[rdx+0x38]
   14006ac6e:	jmp    0x14000794c
   14006ac73:	lea    rcx,[rdx+0x48]
   14006ac7a:	jmp    0x140001650
   14006ac7f:	lea    rcx,[rdx+0x88]
   14006ac86:	jmp    0x140023fe8
   14006ac8b:	lea    rcx,[rdx+0x68]
   14006ac92:	jmp    0x140023fe8
   14006ac97:	jmp    0x1400585c0
   14006ac9c:	lea    rcx,[rdx+0x10d0]
   14006aca3:	jmp    0x140020758
   14006aca8:	lea    rcx,[rdx+0xa0]
   14006acaf:	jmp    0x140020758
   14006acb4:	lea    rcx,[rdx+0x40]
   14006acbb:	jmp    0x140001650
   14006acc0:	lea    rcx,[rdx+0x1150]
   14006acc7:	jmp    0x14004266c
   14006accc:	lea    rcx,[rdx+0xa0]
   14006acd3:	jmp    0x140020758
   14006acd8:	lea    rcx,[rdx+0x58]
   14006acdf:	jmp    0x140001650
   14006ace4:	lea    rcx,[rdx+0x30]
   14006aceb:	jmp    0x140001650
   14006acf0:	lea    rcx,[rdx+0x78]
   14006acf7:	jmp    0x140001650
   14006acfc:	lea    rcx,[rdx+0x60]
   14006ad03:	jmp    0x140007880
   14006ad08:	rex push rbp
   14006ad0a:	sub    rsp,0x20
   14006ad0e:	mov    rbp,rdx
   14006ad11:	mov    edx,0x1030
   14006ad16:	mov    rcx,QWORD PTR [rbp+0x30]
   14006ad1a:	call   0x140055de8
   14006ad1f:	add    rsp,0x20
   14006ad23:	pop    rbp
   14006ad24:	ret    
   14006ad25:	mov    rcx,QWORD PTR [rdx+0x40]
   14006ad2c:	add    rcx,0x5030
   14006ad33:	jmp    0x140043640
   14006ad38:	mov    rcx,QWORD PTR [rdx+0x40]
   14006ad3f:	add    rcx,0x6178
   14006ad46:	jmp    0x140001650
   14006ad4b:	mov    rcx,QWORD PTR [rdx+0x40]
   14006ad52:	jmp    0x140026878
   14006ad57:	mov    rcx,QWORD PTR [rdx+0x40]
   14006ad5e:	add    rcx,0x62c8
   14006ad65:	jmp    0x140010488
   14006ad6a:	mov    QWORD PTR [rsp+0x10],rdx
   14006ad6f:	push   rbp
   14006ad70:	sub    rsp,0x20
   14006ad74:	mov    rbp,rdx
   14006ad77:	mov    rcx,QWORD PTR [rbp+0x50]
   14006ad7b:	call   0x140028614
   14006ad80:	nop
   14006ad81:	lea    rax,[rip+0xfffffffffffbdf4a]        # 0x140028cd2
   14006ad88:	add    rsp,0x20
   14006ad8c:	pop    rbp
   14006ad8d:	ret    
   14006ad8e:	int3   
   14006ad8f:	mov    rcx,QWORD PTR [rdx+0x40]
   14006ad96:	jmp    0x140026878
   14006ad9b:	mov    rcx,QWORD PTR [rdx+0x40]
   14006ada2:	add    rcx,0x1a610
   14006ada9:	jmp    0x14003461c
   14006adae:	mov    rcx,QWORD PTR [rdx+0x40]
   14006adb5:	add    rcx,0x1c668
   14006adbc:	jmp    0x14002abb4
   14006adc1:	mov    rcx,QWORD PTR [rdx+0x40]
   14006adc8:	add    rcx,0x21490
   14006adcf:	jmp    0x140011798
   14006add4:	jmp    0x1400585c0
   14006add9:	lea    rcx,[rdx+0x30]
   14006ade0:	jmp    0x140023264
   14006ade5:	lea    rcx,[rdx+0x2090]
   14006adec:	jmp    0x140007880
   14006adf1:	lea    rcx,[rdx+0x9020]
   14006adf8:	jmp    0x140007880
   14006adfd:	lea    rcx,[rdx+0x40]
   14006ae04:	jmp    0x140007880
   14006ae09:	lea    rcx,[rdx+0x30]
   14006ae10:	jmp    0x140007880
   14006ae15:	lea    rcx,[rdx+0x9010]
   14006ae1c:	jmp    0x140007880
   14006ae21:	rex push rbp
   14006ae23:	sub    rsp,0x20
   14006ae27:	mov    rbp,rdx
   14006ae2a:	mov    edx,0x40
   14006ae2f:	mov    rcx,QWORD PTR [rbp+0x70]
   14006ae33:	call   0x140055de8
   14006ae38:	add    rsp,0x20
   14006ae3c:	pop    rbp
   14006ae3d:	ret    
   14006ae3e:	lea    rcx,[rdx+0x60]
   14006ae45:	jmp    0x140001650
   14006ae4a:	lea    rcx,[rdx+0x50]
   14006ae51:	jmp    0x140001650
   14006ae56:	lea    rcx,[rdx+0x78]
   14006ae5d:	jmp    0x14000794c
   14006ae62:	jmp    0x1400585c0
   14006ae67:	lea    rcx,[rdx+0x88]
   14006ae6e:	jmp    0x140001650
   14006ae73:	mov    rcx,QWORD PTR [rdx+0x40]
   14006ae7a:	add    rcx,0x30
   14006ae7e:	jmp    0x140017eec
   14006ae83:	mov    rcx,QWORD PTR [rdx+0x40]
   14006ae8a:	add    rcx,0x1128
   14006ae91:	jmp    0x140001650
   14006ae96:	lea    rcx,[rdx+0x58]
   14006ae9d:	jmp    0x14000794c
   14006aea2:	jmp    0x1400585c0
   14006aea7:	jmp    0x1400585c0
   14006aeac:	lea    rcx,[rdx+0x28]
   14006aeb3:	jmp    0x14000794c
   14006aeb8:	jmp    0x1400585c0
   14006aebd:	lea    rcx,[rdx+0x30]
   14006aec4:	jmp    0x140001650
   14006aec9:	lea    rcx,[rdx+0x58]
   14006aed0:	jmp    0x140001650
   14006aed5:	rex push rbp
   14006aed7:	sub    rsp,0x20
   14006aedb:	mov    rbp,rdx
   14006aede:	mov    edx,0xa7a0
   14006aee3:	mov    rcx,QWORD PTR [rbp+0x58]
   14006aee7:	call   0x140055de8
   14006aeec:	add    rsp,0x20
   14006aef0:	pop    rbp
   14006aef1:	ret    
   14006aef2:	mov    QWORD PTR [rsp+0x10],rdx
   14006aef7:	push   rbp
   14006aef8:	sub    rsp,0x20
   14006aefc:	mov    rbp,rdx
   14006aeff:	mov    edx,DWORD PTR [rbp+0x20]
   14006af02:	lea    rcx,[rip+0x29957]        # 0x140094860
   14006af09:	call   0x14001bf08
   14006af0e:	nop
   14006af0f:	lea    rax,[rip+0xfffffffffffca928]        # 0x14003583e
   14006af16:	add    rsp,0x20
   14006af1a:	pop    rbp
   14006af1b:	ret    
   14006af1c:	int3   
   14006af1d:	mov    QWORD PTR [rsp+0x10],rdx
   14006af22:	push   rbp
   14006af23:	sub    rsp,0x20
   14006af27:	mov    rbp,rdx
   14006af2a:	lea    rcx,[rip+0x2992f]        # 0x140094860
   14006af31:	call   0x14001bd44
   14006af36:	mov    edx,0x8
   14006af3b:	lea    rcx,[rip+0x2991e]        # 0x140094860
   14006af42:	call   0x14001bf08
   14006af47:	nop
   14006af48:	lea    rax,[rip+0xfffffffffffca8ef]        # 0x14003583e
   14006af4f:	add    rsp,0x20
   14006af53:	pop    rbp
   14006af54:	ret    
   14006af55:	int3   
   14006af56:	mov    QWORD PTR [rsp+0x10],rdx
   14006af5b:	push   rbp
   14006af5c:	sub    rsp,0x20
   14006af60:	mov    rbp,rdx
   14006af63:	mov    edx,0x2
   14006af68:	lea    rcx,[rip+0x298f1]        # 0x140094860
   14006af6f:	call   0x14001bf08
   14006af74:	nop
   14006af75:	lea    rax,[rip+0xfffffffffffca8c2]        # 0x14003583e
   14006af7c:	add    rsp,0x20
   14006af80:	pop    rbp
   14006af81:	ret    
   14006af82:	int3   
   14006af83:	mov    rcx,QWORD PTR [rdx+0x40]
   14006af8a:	add    rcx,0x8
   14006af8e:	jmp    0x140001650
   14006af93:	mov    rcx,QWORD PTR [rdx+0x40]
   14006af9a:	add    rcx,0x150
   14006afa1:	jmp    0x140023fe8
   14006afa6:	mov    rcx,QWORD PTR [rdx+0x40]
   14006afad:	add    rcx,0x170
   14006afb4:	jmp    0x140023fe8
   14006afb9:	mov    rcx,QWORD PTR [rdx+0x40]
   14006afc0:	add    rcx,0x190
   14006afc7:	jmp    0x140023fe8
   14006afcc:	rex push rbp
   14006afce:	sub    rsp,0x20
   14006afd2:	mov    rbp,rdx
   14006afd5:	mov    edx,0x10c0
   14006afda:	mov    rcx,QWORD PTR [rbp+0x48]
   14006afde:	call   0x140055de8
   14006afe3:	add    rsp,0x20
   14006afe7:	pop    rbp
   14006afe8:	ret    
   14006afe9:	rex push rbp
   14006afeb:	sub    rsp,0x20
   14006afef:	mov    rbp,rdx
   14006aff2:	mov    edx,0x10c0
   14006aff7:	mov    rcx,QWORD PTR [rbp+0x48]
   14006affb:	call   0x140055de8
   14006b000:	add    rsp,0x20
   14006b004:	pop    rbp
   14006b005:	ret    
   14006b006:	mov    rcx,QWORD PTR [rdx+0x40]
   14006b00d:	add    rcx,0x800
   14006b014:	jmp    0x140001650
   14006b019:	lea    rcx,[rdx+0x120]
   14006b020:	jmp    0x140007880
   14006b025:	rex push rbp
   14006b027:	sub    rsp,0x20
   14006b02b:	mov    rbp,rdx
   14006b02e:	mov    edx,0x1030
   14006b033:	mov    rcx,QWORD PTR [rbp+0x98]
   14006b03a:	call   0x140055de8
   14006b03f:	add    rsp,0x20
   14006b043:	pop    rbp
   14006b044:	ret    
   14006b045:	rex push rbp
   14006b047:	sub    rsp,0x20
   14006b04b:	mov    rbp,rdx
   14006b04e:	mov    edx,0x1030
   14006b053:	mov    rcx,QWORD PTR [rbp+0x88]
   14006b05a:	call   0x140055de8
   14006b05f:	add    rsp,0x20
   14006b063:	pop    rbp
   14006b064:	ret    
   14006b065:	rex push rbp
   14006b067:	sub    rsp,0x20
   14006b06b:	mov    rbp,rdx
   14006b06e:	mov    edx,0x1030
   14006b073:	mov    rcx,QWORD PTR [rbp+0x60]
   14006b077:	call   0x140055de8
   14006b07c:	add    rsp,0x20
   14006b080:	pop    rbp
   14006b081:	ret    
   14006b082:	rex push rbp
   14006b084:	sub    rsp,0x20
   14006b088:	mov    rbp,rdx
   14006b08b:	mov    edx,0x1030
   14006b090:	mov    rcx,QWORD PTR [rbp+0x60]
   14006b094:	call   0x140055de8
   14006b099:	add    rsp,0x20
   14006b09d:	pop    rbp
   14006b09e:	ret    
   14006b09f:	lea    rcx,[rdx+0x80]
   14006b0a6:	jmp    0x140041c00
   14006b0ab:	lea    rcx,[rdx+0x860]
   14006b0b2:	jmp    0x140007880
   14006b0b7:	lea    rcx,[rdx+0x30]
   14006b0be:	jmp    0x140037bc8
   14006b0c3:	lea    rcx,[rdx+0x30]
   14006b0ca:	jmp    0x140037c2c
   14006b0cf:	lea    rcx,[rdx+0x1080]
   14006b0d6:	jmp    0x140023264
   14006b0db:	lea    rcx,[rdx+0x2090]
   14006b0e2:	jmp    0x140020758
   14006b0e7:	lea    rcx,[rdx+0x30d0]
   14006b0ee:	jmp    0x140037c2c
   14006b0f3:	lea    rcx,[rdx+0x30d0]
   14006b0fa:	jmp    0x140037bc8
   14006b0ff:	lea    rcx,[rdx+0xf0]
   14006b106:	jmp    0x140023264
   14006b10b:	lea    rcx,[rdx+0xc160]
   14006b112:	jmp    0x140007880
   14006b117:	lea    rcx,[rdx+0x3180]
   14006b11e:	jmp    0x140007880
   14006b123:	lea    rcx,[rdx+0x2170]
   14006b12a:	jmp    0x140023264
   14006b12f:	lea    rcx,[rdx+0xf0]
   14006b136:	jmp    0x140020758
   14006b13b:	rex push rbp
   14006b13d:	sub    rsp,0x20
   14006b141:	mov    rbp,rdx
   14006b144:	mov    edx,0x1030
   14006b149:	mov    rcx,QWORD PTR [rbp+0x70]
   14006b14d:	call   0x140055de8
   14006b152:	add    rsp,0x20
   14006b156:	pop    rbp
   14006b157:	ret    
   14006b158:	rex push rbp
   14006b15a:	sub    rsp,0x20
   14006b15e:	mov    rbp,rdx
   14006b161:	mov    edx,0x8fd8
   14006b166:	mov    rcx,QWORD PTR [rbp+0x70]
   14006b16a:	call   0x140055de8
   14006b16f:	add    rsp,0x20
   14006b173:	pop    rbp
   14006b174:	ret    
   14006b175:	lea    rcx,[rdx+0xc160]
   14006b17c:	jmp    0x140007880
   14006b181:	lea    rcx,[rdx+0x1190]
   14006b188:	jmp    0x140023264
   14006b18d:	rex push rbp
   14006b18f:	sub    rsp,0x20
   14006b193:	mov    rbp,rdx
   14006b196:	mov    edx,0x8fd8
   14006b19b:	mov    rcx,QWORD PTR [rbp+0x68]
   14006b19f:	call   0x140055de8
   14006b1a4:	add    rsp,0x20
   14006b1a8:	pop    rbp
   14006b1a9:	ret    
   14006b1aa:	rex push rbp
   14006b1ac:	sub    rsp,0x20
   14006b1b0:	mov    rbp,rdx
   14006b1b3:	mov    edx,0x1030
   14006b1b8:	mov    rcx,QWORD PTR [rbp+0x68]
   14006b1bc:	call   0x140055de8
   14006b1c1:	add    rsp,0x20
   14006b1c5:	pop    rbp
   14006b1c6:	ret    
   14006b1c7:	lea    rcx,[rdx+0x90]
   14006b1ce:	jmp    0x140041c00
   14006b1d3:	mov    rcx,QWORD PTR [rdx+0x40]
   14006b1da:	jmp    0x140001650
   14006b1df:	lea    rcx,[rdx+0x9040]
   14006b1e6:	jmp    0x140007880
   14006b1eb:	lea    rcx,[rdx+0x60]
   14006b1f2:	jmp    0x140007880
   14006b1f7:	rex push rbp
   14006b1f9:	sub    rsp,0x20
   14006b1fd:	mov    rbp,rdx
   14006b200:	mov    edx,0x10118
   14006b205:	mov    rcx,QWORD PTR [rbp+0x50]
   14006b209:	call   0x140055de8
   14006b20e:	add    rsp,0x20
   14006b212:	pop    rbp
   14006b213:	ret    
   14006b214:	rex push rbp
   14006b216:	sub    rsp,0x20
   14006b21a:	mov    rbp,rdx
   14006b21d:	mov    edx,0x10118
   14006b222:	mov    rcx,QWORD PTR [rbp+0x28]
   14006b226:	call   0x140055de8
   14006b22b:	add    rsp,0x20
   14006b22f:	pop    rbp
   14006b230:	ret    
   14006b231:	lea    rcx,[rdx+0x40]
   14006b238:	jmp    0x140001650
   14006b23d:	lea    rcx,[rdx+0x98]
   14006b244:	jmp    0x14000794c
   14006b249:	jmp    0x1400585c0
   14006b24e:	rex push rbp
   14006b250:	sub    rsp,0x20
   14006b254:	mov    rbp,rdx
   14006b257:	mov    eax,0x68
   14006b25c:	mul    QWORD PTR [rbp+0x70]
   14006b260:	mov    rdx,rax
   14006b263:	mov    rax,0xffffffffffffffff
   14006b26a:	cmovo  rdx,rax
   14006b26e:	add    rdx,0x8
   14006b272:	mov    rax,0xffffffffffffffff
   14006b279:	cmovb  rdx,rax
   14006b27d:	mov    rcx,QWORD PTR [rbp+0x80]
   14006b284:	call   0x140055df8
   14006b289:	add    rsp,0x20
   14006b28d:	pop    rbp
   14006b28e:	ret    
   14006b28f:	lea    rcx,[rdx+0xd0]
   14006b296:	jmp    0x14000794c
   14006b29b:	lea    rcx,[rdx+0x300]
   14006b2a2:	jmp    0x140001650
   14006b2a7:	lea    rcx,[rdx+0x300]
   14006b2ae:	jmp    0x140001650
   14006b2b3:	lea    rcx,[rdx+0xb0]
   14006b2ba:	jmp    0x140001650
   14006b2bf:	lea    rcx,[rdx+0x90]
   14006b2c6:	jmp    0x140001650
   14006b2cb:	lea    rcx,[rdx+0xe8]
   14006b2d2:	jmp    0x14000794c
   14006b2d7:	jmp    0x1400585c0
   14006b2dc:	jmp    0x1400585c0
   14006b2e1:	lea    rcx,[rdx+0x38]
   14006b2e8:	jmp    0x14000794c
   14006b2ed:	jmp    0x1400585c0
   14006b2f2:	jmp    0x1400585c0
   14006b2f7:	lea    rcx,[rdx+0x40]
   14006b2fe:	jmp    0x14000794c
   14006b303:	jmp    0x1400585c0
   14006b308:	mov    rcx,QWORD PTR [rdx+0x40]
   14006b30f:	add    rcx,0x4028
   14006b316:	jmp    0x140001650
   14006b31b:	lea    rcx,[rdx+0x1080]
   14006b322:	jmp    0x140023264
   14006b327:	rex push rbp
   14006b329:	sub    rsp,0x20
   14006b32d:	mov    rbp,rdx
   14006b330:	mov    edx,0x1010
   14006b335:	mov    rcx,QWORD PTR [rbp+0x40]
   14006b339:	call   0x140055de8
   14006b33e:	add    rsp,0x20
   14006b342:	pop    rbp
   14006b343:	ret    
   14006b344:	lea    rcx,[rdx+0x1090]
   14006b34b:	jmp    0x140007880
   14006b350:	lea    rcx,[rdx+0xa070]
   14006b357:	jmp    0x140007880
   14006b35c:	lea    rcx,[rdx+0x60]
   14006b363:	jmp    0x140020758
   14006b368:	rex push rbp
   14006b36a:	sub    rsp,0x20
   14006b36e:	mov    rbp,rdx
   14006b371:	mov    edx,0x358
   14006b376:	mov    rcx,QWORD PTR [rbp+0x40]
   14006b37a:	call   0x140055de8
   14006b37f:	add    rsp,0x20
   14006b383:	pop    rbp
   14006b384:	ret    
   14006b385:	rex push rbp
   14006b387:	sub    rsp,0x20
   14006b38b:	mov    rbp,rdx
   14006b38e:	mov    edx,0x358
   14006b393:	mov    rcx,QWORD PTR [rbp+0x40]
   14006b397:	call   0x140055de8
   14006b39c:	add    rsp,0x20
   14006b3a0:	pop    rbp
   14006b3a1:	ret    
   14006b3a2:	mov    rcx,QWORD PTR [rdx+0x40]
   14006b3a9:	add    rcx,0x8
   14006b3ad:	jmp    0x140023db4
   14006b3b2:	mov    rcx,QWORD PTR [rdx+0x40]
   14006b3b9:	add    rcx,0x40
   14006b3bd:	jmp    0x140001650
   14006b3c2:	mov    rcx,QWORD PTR [rdx+0x40]
   14006b3c9:	add    rcx,0x60
   14006b3cd:	jmp    0x140001650
   14006b3d2:	mov    rcx,QWORD PTR [rdx+0x40]
   14006b3d9:	add    rcx,0x80
   14006b3e0:	jmp    0x140001650
   14006b3e5:	mov    rcx,QWORD PTR [rdx+0x40]
   14006b3ec:	add    rcx,0x4b98
   14006b3f3:	jmp    0x1400491f4
   14006b3f8:	mov    rcx,QWORD PTR [rdx+0x40]
   14006b3ff:	add    rcx,0x9a30
   14006b406:	jmp    0x14002abb4
   14006b40b:	mov    rcx,QWORD PTR [rdx+0x40]
   14006b412:	add    rcx,0xe898
   14006b419:	jmp    0x14003589c
   14006b41e:	mov    rcx,QWORD PTR [rdx+0x40]
   14006b425:	add    rcx,0xe8e0
   14006b42c:	jmp    0x140023db4
   14006b431:	mov    rcx,QWORD PTR [rdx+0x40]
   14006b438:	add    rcx,0xe8f8
   14006b43f:	jmp    0x140001650
   14006b444:	mov    rcx,QWORD PTR [rdx+0x40]
   14006b44b:	add    rcx,0xe918
   14006b452:	jmp    0x140001650
   14006b457:	mov    rcx,QWORD PTR [rdx+0x40]
   14006b45e:	add    rcx,0xe938
   14006b465:	jmp    0x140001650
   14006b46a:	rex push rbp
   14006b46c:	sub    rsp,0x20
   14006b470:	mov    rbp,rdx
   14006b473:	mov    eax,0x4af8
   14006b478:	mul    QWORD PTR [rbp+0x60]
   14006b47c:	mov    rdx,rax
   14006b47f:	mov    rax,0xffffffffffffffff
   14006b486:	cmovo  rdx,rax
   14006b48a:	add    rdx,0x8
   14006b48e:	mov    rax,0xffffffffffffffff
   14006b495:	cmovb  rdx,rax
   14006b499:	mov    rcx,QWORD PTR [rbp+0x68]
   14006b49d:	call   0x140055df8
   14006b4a2:	add    rsp,0x20
   14006b4a6:	pop    rbp
   14006b4a7:	ret    
   14006b4a8:	lea    rcx,[rdx+0x58]
   14006b4af:	jmp    0x140054b80
   14006b4b4:	lea    rcx,[rdx+0xe0]
   14006b4bb:	jmp    0x140020758
   14006b4c0:	rex push rbp
   14006b4c2:	sub    rsp,0x20
   14006b4c6:	mov    rbp,rdx
   14006b4c9:	cmp    BYTE PTR [rbp+0x20],0x0
   14006b4cd:	jne    0x14006b4e5
   14006b4cf:	mov    r9,QWORD PTR [rbp+0x70]
   14006b4d3:	mov    r8,QWORD PTR [rbp+0x28]
   14006b4d7:	mov    rdx,QWORD PTR [rbp+0x58]
   14006b4db:	mov    rcx,QWORD PTR [rbp+0x50]
   14006b4df:	call   0x140055d48
   14006b4e4:	nop
   14006b4e5:	add    rsp,0x20
   14006b4e9:	pop    rbp
   14006b4ea:	ret    
   14006b4eb:	int3   
   14006b4ec:	rex push rbp
   14006b4ee:	sub    rsp,0x20
   14006b4f2:	mov    rbp,rdx
   14006b4f5:	cmp    BYTE PTR [rbp+0x20],0x0
   14006b4f9:	jne    0x14006b511
   14006b4fb:	mov    r9,QWORD PTR [rbp+0x78]
   14006b4ff:	mov    r8,QWORD PTR [rbp+0x70]
   14006b503:	mov    rdx,QWORD PTR [rbp+0x68]
   14006b507:	mov    rcx,QWORD PTR [rbp+0x60]
   14006b50b:	call   0x140055d48
   14006b510:	nop
   14006b511:	add    rsp,0x20
   14006b515:	pop    rbp
   14006b516:	ret    
   14006b517:	int3   
   14006b518:	rex push rbp
   14006b51a:	sub    rsp,0x20
   14006b51e:	mov    rbp,rdx
   14006b521:	mov    QWORD PTR [rbp+0x40],rcx
   14006b525:	mov    QWORD PTR [rbp+0x30],rcx
   14006b529:	mov    rax,QWORD PTR [rbp+0x30]
   14006b52d:	mov    rcx,QWORD PTR [rax]
   14006b530:	mov    QWORD PTR [rbp+0x38],rcx
   14006b534:	mov    rax,QWORD PTR [rbp+0x38]
   14006b538:	cmp    DWORD PTR [rax],0xe06d7363
   14006b53e:	je     0x14006b54c
   14006b540:	mov    DWORD PTR [rbp+0x20],0x0
   14006b547:	mov    eax,DWORD PTR [rbp+0x20]
   14006b54a:	jmp    0x14006b552
   14006b54c:	call   0x14005f654
   14006b551:	nop
   14006b552:	add    rsp,0x20
   14006b556:	pop    rbp
   14006b557:	ret    
   14006b558:	int3   
   14006b559:	rex push rbp
   14006b55b:	mov    rbp,rdx
   14006b55e:	mov    rax,QWORD PTR [rcx]
   14006b561:	xor    ecx,ecx
   14006b563:	cmp    DWORD PTR [rax],0xc0000005
   14006b569:	sete   cl
   14006b56c:	mov    eax,ecx
   14006b56e:	pop    rbp
   14006b56f:	ret    
   14006b570:	int3   
   14006b571:	rex push rbp
   14006b573:	sub    rsp,0x20
   14006b577:	mov    rbp,rdx
   14006b57a:	mov    rax,QWORD PTR [rcx]
   14006b57d:	mov    rdx,rcx
   14006b580:	mov    ecx,DWORD PTR [rax]
   14006b582:	call   0x14005f6f8
   14006b587:	nop
   14006b588:	add    rsp,0x20
   14006b58c:	pop    rbp
   14006b58d:	ret    
   14006b58e:	int3   
   14006b58f:	rex push rbp
   14006b591:	sub    rsp,0x20
   14006b595:	mov    rbp,rdx
   14006b598:	mov    QWORD PTR [rbp+0x58],rcx
   14006b59c:	lea    r8,[rbp+0x20]
   14006b5a0:	mov    rdx,QWORD PTR [rbp+0xb8]
   14006b5a7:	call   0x1400572f0
   14006b5ac:	nop
   14006b5ad:	add    rsp,0x20
   14006b5b1:	pop    rbp
   14006b5b2:	ret    
   14006b5b3:	int3   
   14006b5b4:	rex push rbx
   14006b5b6:	push   rbp
   14006b5b7:	sub    rsp,0x28
   14006b5bb:	mov    rbp,rdx
   14006b5be:	mov    rcx,QWORD PTR [rbp+0x38]
   14006b5c2:	call   0x140058bc4
   14006b5c7:	cmp    DWORD PTR [rbp+0x20],0x0
   14006b5cb:	jne    0x14006b607
   14006b5cd:	mov    rbx,QWORD PTR [rbp+0xb8]
   14006b5d4:	cmp    DWORD PTR [rbx],0xe06d7363
   14006b5da:	jne    0x14006b607
   14006b5dc:	cmp    DWORD PTR [rbx+0x18],0x4
   14006b5e0:	jne    0x14006b607
   14006b5e2:	mov    eax,DWORD PTR [rbx+0x20]
   14006b5e5:	sub    eax,0x19930520
   14006b5ea:	cmp    eax,0x2
   14006b5ed:	ja     0x14006b607
   14006b5ef:	mov    rcx,QWORD PTR [rbx+0x28]
   14006b5f3:	call   0x140058c44
   14006b5f8:	test   eax,eax
   14006b5fa:	je     0x14006b607
   14006b5fc:	mov    dl,0x1
   14006b5fe:	mov    rcx,rbx
   14006b601:	call   0x140057100
   14006b606:	nop
   14006b607:	call   0x14005a580
   14006b60c:	mov    rcx,QWORD PTR [rbp+0xc0]
   14006b613:	mov    QWORD PTR [rax+0x20],rcx
   14006b617:	call   0x14005a580
   14006b61c:	mov    rcx,QWORD PTR [rbp+0x40]
   14006b620:	mov    QWORD PTR [rax+0x28],rcx
   14006b624:	add    rsp,0x28
   14006b628:	pop    rbp
   14006b629:	pop    rbx
   14006b62a:	ret    
   14006b62b:	int3   
   14006b62c:	rex push rbp
   14006b62e:	sub    rsp,0x20
   14006b632:	mov    rbp,rdx
   14006b635:	xor    eax,eax
   14006b637:	cmp    BYTE PTR [rbp+0x38],al
   14006b63a:	setne  al
   14006b63d:	add    rsp,0x20
   14006b641:	pop    rbp
   14006b642:	ret    
   14006b643:	int3   
   14006b644:	rex push rbp
   14006b646:	sub    rsp,0x20
   14006b64a:	mov    rbp,rdx
   14006b64d:	call   0x140058048
   14006b652:	nop
   14006b653:	add    rsp,0x20
   14006b657:	pop    rbp
   14006b658:	ret    
   14006b659:	int3   
   14006b65a:	rex push rbp
   14006b65c:	sub    rsp,0x20
   14006b660:	mov    rbp,rdx
   14006b663:	call   0x14005a580
   14006b668:	cmp    DWORD PTR [rax+0x30],0x0
   14006b66c:	jle    0x14006b676
   14006b66e:	call   0x14005a580
   14006b673:	dec    DWORD PTR [rax+0x30]
   14006b676:	add    rsp,0x20
   14006b67a:	pop    rbp
   14006b67b:	ret    
   14006b67c:	int3   
   14006b67d:	rex push rbp
   14006b67f:	sub    rsp,0x40
   14006b683:	mov    rbp,rdx
   14006b686:	lea    rax,[rbp+0x40]
   14006b68a:	mov    QWORD PTR [rsp+0x30],rax
   14006b68f:	mov    rax,QWORD PTR [rbp+0xa0]
   14006b696:	mov    QWORD PTR [rsp+0x28],rax
   14006b69b:	mov    rax,QWORD PTR [rbp+0x98]
   14006b6a2:	mov    QWORD PTR [rsp+0x20],rax
   14006b6a7:	mov    r9,QWORD PTR [rbp+0x90]
   14006b6ae:	mov    r8,QWORD PTR [rbp+0x88]
   14006b6b5:	mov    rdx,QWORD PTR [rbp+0x80]
   14006b6bc:	call   0x140058a98
   14006b6c1:	nop
   14006b6c2:	add    rsp,0x40
   14006b6c6:	pop    rbp
   14006b6c7:	ret    
   14006b6c8:	int3   
   14006b6c9:	rex push rbp
   14006b6cb:	sub    rsp,0x20
   14006b6cf:	mov    rbp,rdx
   14006b6d2:	mov    rax,QWORD PTR [rcx]
   14006b6d5:	mov    ecx,DWORD PTR [rax]
   14006b6d7:	call   0x14005e264
   14006b6dc:	nop
   14006b6dd:	add    rsp,0x20
   14006b6e1:	pop    rbp
   14006b6e2:	ret    
   14006b6e3:	int3   
   14006b6e4:	rex push rbp
   14006b6e6:	sub    rsp,0x20
   14006b6ea:	mov    rbp,rdx
   14006b6ed:	mov    ecx,0x2
   14006b6f2:	add    rsp,0x20
   14006b6f6:	pop    rbp
   14006b6f7:	jmp    0x1400628c8
   14006b6fc:	int3   
   14006b6fd:	rex push rbp
   14006b6ff:	sub    rsp,0x20
   14006b703:	mov    rbp,rdx
   14006b706:	mov    ecx,0xb
   14006b70b:	add    rsp,0x20
   14006b70f:	pop    rbp
   14006b710:	jmp    0x1400628c8
   14006b715:	int3   
   14006b716:	rex push rbp
   14006b718:	sub    rsp,0x20
   14006b71c:	mov    rbp,rdx
   14006b71f:	mov    rcx,QWORD PTR [rbp+0x68]
   14006b723:	call   0x14005e7b0
   14006b728:	nop
   14006b729:	add    rsp,0x20
   14006b72d:	pop    rbp
   14006b72e:	ret    
   14006b72f:	int3   
   14006b730:	rex push rbp
   14006b732:	sub    rsp,0x20
   14006b736:	mov    rbp,rdx
   14006b739:	mov    ecx,0x8
   14006b73e:	add    rsp,0x20
   14006b742:	pop    rbp
   14006b743:	jmp    0x1400628c8
   14006b748:	int3   
   14006b749:	rex push rbp
   14006b74b:	sub    rsp,0x20
   14006b74f:	mov    rbp,rdx
   14006b752:	mov    rcx,QWORD PTR [rbp+0x30]
   14006b756:	add    rsp,0x20
   14006b75a:	pop    rbp
   14006b75b:	jmp    0x14005e7b0
   14006b760:	int3   
   14006b761:	rex push rbp
   14006b763:	sub    rsp,0x20
   14006b767:	mov    rbp,rdx
   14006b76a:	xor    ecx,ecx
   14006b76c:	add    rsp,0x20
   14006b770:	pop    rbp
   14006b771:	jmp    0x1400628c8
   14006b776:	int3   
   14006b777:	rex push rbp
   14006b779:	sub    rsp,0x20
   14006b77d:	mov    rbp,rdx
   14006b780:	mov    rax,QWORD PTR [rbp+0x88]
   14006b787:	mov    ecx,DWORD PTR [rax]
   14006b789:	add    rsp,0x20
   14006b78d:	pop    rbp
   14006b78e:	jmp    0x1400628c8
   14006b793:	int3   
   14006b794:	rex push rbp
   14006b796:	sub    rsp,0x20
   14006b79a:	mov    rbp,rdx
   14006b79d:	mov    ecx,0x4
   14006b7a2:	add    rsp,0x20
   14006b7a6:	pop    rbp
   14006b7a7:	jmp    0x1400628c8
   14006b7ac:	int3   
   14006b7ad:	rex push rbp
   14006b7af:	sub    rsp,0x20
   14006b7b3:	mov    rbp,rdx
   14006b7b6:	mov    ecx,0x7
   14006b7bb:	add    rsp,0x20
   14006b7bf:	pop    rbp
   14006b7c0:	jmp    0x1400628c8
   14006b7c5:	int3   
   14006b7c6:	rex push rbp
   14006b7c8:	sub    rsp,0x20
   14006b7cc:	mov    rbp,rdx
   14006b7cf:	mov    ecx,0x8
   14006b7d4:	add    rsp,0x20
   14006b7d8:	pop    rbp
   14006b7d9:	jmp    0x1400628c8
   14006b7de:	int3   
   14006b7df:	rex push rbp
   14006b7e1:	sub    rsp,0x20
   14006b7e5:	mov    rbp,rdx
   14006b7e8:	mov    ecx,DWORD PTR [rbp+0x50]
   14006b7eb:	add    rsp,0x20
   14006b7ef:	pop    rbp
   14006b7f0:	jmp    0x140064050
   14006b7f5:	int3   
   14006b7f6:	rex push rbp
   14006b7f8:	sub    rsp,0x20
   14006b7fc:	mov    rbp,rdx
   14006b7ff:	mov    rcx,QWORD PTR [rbp+0x48]
   14006b803:	mov    rcx,QWORD PTR [rcx]
   14006b806:	add    rsp,0x20
   14006b80a:	pop    rbp
   14006b80b:	jmp    0x14005e7b0
   14006b810:	int3   
   14006b811:	rex push rbp
   14006b813:	sub    rsp,0x20
   14006b817:	mov    rbp,rdx
   14006b81a:	mov    rax,QWORD PTR [rbp+0x48]
   14006b81e:	mov    ecx,DWORD PTR [rax]
   14006b820:	add    rsp,0x20
   14006b824:	pop    rbp
   14006b825:	jmp    0x1400628c8
   14006b82a:	int3   
   14006b82b:	rex push rbp
   14006b82d:	sub    rsp,0x20
   14006b831:	mov    rbp,rdx
   14006b834:	mov    ecx,0x5
   14006b839:	add    rsp,0x20
   14006b83d:	pop    rbp
   14006b83e:	jmp    0x1400628c8
   14006b843:	int3   
   14006b844:	rex push rbp
   14006b846:	sub    rsp,0x20
   14006b84a:	mov    rbp,rdx
   14006b84d:	cmp    BYTE PTR [rbp+0x80],0x0
   14006b854:	je     0x14006b861
   14006b856:	mov    ecx,0x3
   14006b85b:	call   0x1400628c8
   14006b860:	nop
   14006b861:	add    rsp,0x20
   14006b865:	pop    rbp
   14006b866:	ret    
   14006b867:	int3   
   14006b868:	rex push rbp
   14006b86a:	sub    rsp,0x20
   14006b86e:	mov    rbp,rdx
   14006b871:	mov    rax,QWORD PTR [rbp+0x48]
   14006b875:	mov    ecx,DWORD PTR [rax]
   14006b877:	add    rsp,0x20
   14006b87b:	pop    rbp
   14006b87c:	jmp    0x140064050
   14006b881:	int3   
   14006b882:	rex push rbp
   14006b884:	sub    rsp,0x20
   14006b888:	mov    rbp,rdx
   14006b88b:	mov    rax,QWORD PTR [rcx]
   14006b88e:	cmp    DWORD PTR [rax],0xc0000005
   14006b894:	je     0x14006b8a2
   14006b896:	cmp    DWORD PTR [rax],0xc000001d
   14006b89c:	je     0x14006b8a2
   14006b89e:	xor    eax,eax
   14006b8a0:	jmp    0x14006b8a7
   14006b8a2:	mov    eax,0x1
   14006b8a7:	add    rsp,0x20
   14006b8ab:	pop    rbp
   14006b8ac:	ret    
   14006b8ad:	int3   
   14006b8ae:	int3   
   14006b8af:	int3   
   14006b8b0:	rex push rbp
   14006b8b2:	sub    rsp,0x20
   14006b8b6:	mov    rbp,rdx
   14006b8b9:	mov    rax,QWORD PTR [rcx]
   14006b8bc:	xor    ecx,ecx
   14006b8be:	cmp    DWORD PTR [rax],0xc0000005
   14006b8c4:	sete   cl
   14006b8c7:	mov    eax,ecx
   14006b8c9:	add    rsp,0x20
   14006b8cd:	pop    rbp
   14006b8ce:	ret    
   14006b8cf:	int3   
   14006b8d0:	lea    rcx,[rip+0x28f19]        # 0x1400947f0
   14006b8d7:	jmp    0x14003fe7c
   14006b8dc:	lea    rcx,[rip+0x28f1d]        # 0x140094800
   14006b8e3:	jmp    0x14003f604
   14006b8e8:	sub    rsp,0x28
   14006b8ec:	mov    rcx,QWORD PTR [rip+0x28f4d]        # 0x140094840
   14006b8f3:	test   rcx,rcx
   14006b8f6:	je     0x14006b8fd
   14006b8f8:	call   0x14005a938
   14006b8fd:	add    rsp,0x28
   14006b901:	ret    
   14006b902:	int3   
   14006b903:	int3   
   14006b904:	sub    rsp,0x28
   14006b908:	mov    rcx,QWORD PTR [rip+0x2f1b1]        # 0x14009aac0
   14006b90f:	test   rcx,rcx
   14006b912:	je     0x14006b91a
   14006b914:	call   QWORD PTR [rip+0x87e]        # 0x14006c198
   14006b91a:	and    QWORD PTR [rip+0x2f19e],0x0        # 0x14009aac0
   14006b922:	and    QWORD PTR [rip+0x2f1a6],0x0        # 0x14009aad0
   14006b92a:	and    QWORD PTR [rip+0x2f1a6],0x0        # 0x14009aad8
   14006b932:	add    rsp,0x28
   14006b936:	ret    
   14006b937:	int3   
   14006b938:	lea    rcx,[rip+0x331c1]        # 0x14009eb00
   14006b93f:	rex.W jmp QWORD PTR [rip+0x8da]        # 0x14006c220
